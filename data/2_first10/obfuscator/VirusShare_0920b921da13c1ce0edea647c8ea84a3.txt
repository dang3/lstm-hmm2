inc
rcr
clc
cmp
into
insl
sbb
mov
movsb
hlt
incl
dec
add
out
fdivs
sarb
repnz
es
sbb
xchg
ds
lahf
loop
sub
orl
outsb
in
sbb
pop
push
dec
gs
and
mov
xor
ret
ret
add
mov
andb
outsb
jg
xchg
inc
and
jecxz
or
add
sbb
jns
mov
push
pop
inc
cmpsb
into
je
ret
ret
adc
jb
int
mov
enter
ljmp
and
mov
aaa
mov
ljmp
push
daa
int3
cld
das
cs
cld
xorl
add
cmp
pop
adc
cli
pop
dec
dec
mov
jg
or
loope
idivb
sbb
fld
hlt
ret
fsts
mov
call
movw
lea
call
test
cmc
cmc
clc
cmp
jmp
movl
push
pusha
pushl
movl
pusha
movb
mov
mov
lea
jmp
and
lock
in
js
fld
xchg
mov
mov
inc
mov
sbb
mov
pop
dec
or
and
or
jo
jo
push
mov
xchg
inc
add
adc
cltd
mov
imul
rclb
ds
leave
mov
mov
scas
mov
scas
xor
jmp
std
aam
mov
test
jmp
shl
bsr
mov
jmp
mov
pushl
lea
mov
mov
pushf
jmp
btc
push
xor
btc
aaa
rcl
mov
clc
sub
cwtl
push
btr
btr
pushf
or
mov
not
push
pusha
aam
mov
clc
neg
bswap
cmc
mov
and
bsr
pushf
clc
mov
add
jle
test
jmp
call
add
bt
ror
bt
movb
xor
bt
sub
pushl
bt
pusha
stc
neg
cmc
jmp
stc
jmp
stos
setno
mov
call
call
lea
jae
xchg
mov
not
inc
not
call
rclb
xor
xchg
pop
jo
jbe
push
in
cmpsb
xor
push
outsb
iret
jns
mov
mov
pop
bound
inc
or
lods
in
sbb
enter
mov
or
pop
sub
ret
or
pop
rorb
pop
inc
es
test
mov
bnd
cmpsb
sub
mov
mov
sti
jge
mov
scas
mov
push
clc
sbb
notb
rorb
dec
cmp
int3
mov
popf
loopne
add
pushf
mov
stc
test
call
push
lea
call
call
sbb
js
sub
cmp
sub
adc
dec
shll
loop
sbb
inc
outsl
sub
xchg
xor
orb
insb
dec
mov
add
mov
je
jnp
dec
or
push
pop
cmp
mov
sbb
push
xchg
push
imull
and
inc
out
sbb
xor
pop
sahf
pop
jo
adc
ficoms
mov
mov
mov
icebp
xchg
loope
fstps
mov
pusha
not
neg
mov
mov
rol
not
sub
not
xchg
call
push
lods
cmc
not
jmp
lea
je
inc
shld
rcl
xchg
xor
movzbw
cmc
dec
mov
sub
add
das
xchg
mov
setns
adc
shr
movsbl
mov
stc
jmp
jmp
push
js
pop
inc
add
jne
leave
loop
into
roll
fists
sub
inc
nop
cltd
clc
jge
mov
and
cltd
adc
test
lahf
enter
fcomp
jo
je
pop
std
mov
fs
dec
xor
dec
sub
call
mov
pushf
mov
pusha
pushf
lea
call
jmp
xor
test
clc
bt
pushf
sub
clc
push
cmc
stc
neg
bt
cmp
lahf
movsbw
lea
pushf
lahf
bswap
mov
movw
pushf
lea
ja
jb
pusha
pushf
lea
jb
cmc
push
cmpb
pushf
pushf
lea
jne
bswap
mov
jmp
add
push
mov
movl
xor
neg
mov
cmp
cmp
pushf
cmp
pusha
pushf
call
push
push
jmp
add
js
or
inc
adc
push
mov
inc
add
bound
addr16
mov
out
movsl
outsb
movsb
push
or
mov
jl
pushf
push
adc
and
cwtl
jle
seto
add
xor
push
movsb
dec
mov
mov
jl
add
jp
dec
push
leave
jne
and
xor
fsubrs
sub
icebp
mov
clc
fnstcw
pop
and
insl
inc
outsl
leave
movsb
in
add
pushf
pushf
mov
lea
jmp
jmp
mov
pusha
mov
push
jmp
pusha
pusha
movl
pushf
mov
movb
movl
pushf
pushf
push
pushf
lea
jmp
push
stos
movl
push
pushl
pusha
lea
jmp
pushf
lea
call
push
lea
jo
pusha
lea
jae
cmc
stc
pusha
cmp
xor
jmp
lea
jmp
fisttpll
data16
push
jge
jne
cmp
mov
mov
mov
ds
and
scas
lods
add
adc
lods
fs
sbb
add
std
pop
popf
or
jnp
jnp
adc
jge
mov
mov
add
pop
cmp
adc
push
shlb
inc
add
inc
xchg
sahf
dec
and
dec
icebp
mov
ss
out
and
mov
jo
data16
mov
push
enter
in
xor
xor
das
dec
outsb
sub
and
insb
das
xor
mov
cltd
in
in
cli
cmp
dec
call
cmp
jecxz
mov
xchg
mov
insl
in
ficomps
mov
cwtl
les
mov
and
aaa
jg
shlb
negl
outsb
test
aaa
dec
aaa
icebp
das
out
mov
mov
mov
push
das
xor
jns
test
jge
jne
pop
push
add
inc
xorl
shrb
clc
push
cmc
call
pushf
mov
add
mov
lea
pusha
clc
bt
mov
sub
mov
stc
stc
push
sub
mov
mov
rep
pusha
mov
pushf
mov
pushl
lea
jmp
movw
movl
push
movl
pushf
lea
jmp
pushf
lea
jae
jmp
lea
call
jmp
movb
pushf
pusha
lea
jb
test
test
pushf
call
lea
mov
movb
mov
lea
jo
pusha
lea
ja
pusha
call
setns
jmp
push
not
stc
cmp
add
stc
call
mov
jmp
mov
pushf
jmp
lea
ja
pushf
call
movb
movl
movl
lea
jmp
lea
je
call
call
pushl
lea
jae
clc
call
push
pusha
lea
ja
pushf
call
lea
jb
pushf
bt
jmp
bt
test
clc
sub
test
neg
clc
pushl
clc
bt
cmp
push
pop
movb
cwtl
lea
jmp
mov
inc
inc
movb
pusha
pusha
mov
call
clc
movl
not
sub
btr
sub
mov
lea
jmp
call
stc
jp
sub
push
pushl
movb
call
jmp
movw
lea
jae
jmp
cmp
jmp
lea
jb
call
cmc
or
dec
or
jecxz
out
push
pop
bound
int3
lret
insb
std
fistl
lret
lock
cs
loop
cmpsl
jmp
cld
shl
lret
push
and
out
push
adc
xlat
divb
mov
cmc
lret
add
cmp
xorw
jg
cli
nop
cmp
adc
cs
add
xlat
adc
push
add
sbb
xor
sbb
or
jecxz,pn
mov
loop
scas
inc
xor
push
inc
lods
lds
imul
push
sub
cmpsb
or
jmp
cmc
add
mov
xchg
pop
push
push
inc
in
jbe
cmp
ss
rolb
fwait
imul
test
or
push
pop
rol
add
inc
pop
mov
mov
adc
add
mov
mov
adc
shll
lods
xchg
add
cmp
gs
push
push
add
push
pop
mov
xchg
mov
xchg
xchg
incb
cmp
xor
mov
pop
lcall
dec
popf
scas
sbb
or
or
xor
add
sbb
cmp
adc
into
sahf
jge
call
push
sbbl
mov
dec
cmp
push
cld
insl
adc
xorb
les
push
or
cmp
dec
xchg
inc
sub
sub
cli
adc
bound
and
imul
cmp
add
es
sbb
dec
add
pop
cli
ds
sahf
or
data16
cmp
jecxz
sbb
sbb
into
sbb
add
jb
sub
orl
jae
outsl
fwait
and
insb
pop
xchg
pop
xor
fiaddl
shrb
insb
and
add
jns
cltd
cwtl
out
rorb
popf
pop
push
mov
lock
fwait
adc
xor
xlat
inc
or
sub
in
dec
or
or
dec
cmc
cli
ljmp
cmp
sub
stc
adc
mov
repz
daa
mov
jbe
cmpsb
or
sub
lcall
or
or
dec
adc
push
pop
inc
sub
mov
or
and
cmp
jecxz
sub
sbb
mov
and
ds
xchg
punpckhwd
insb
push
insl
pop
aas
or
pop
outsb
cmp
dec
push
sub
or
orl
inc
dec
pop
and
inc
dec
push
test
testb
popf
imul
subb
dec
add
cmc
inc
or
das
mov
push
lcall
add
cwtl
andb
push
inc
push
sub
push
or
push
cmpsb
dec
pushf
sbb
push
sbb
jb
test
adc
add
inc
xchg
sbb
movsb
add
dec
dec
cmp
xchg
insb
cltd
loop
dec
outsb
dec
add
jb
cmp
int3
sub
sub
sbb
inc
fiaddl
fadd
adc
add
sub
idivb
push
loopne
push
cmp
sub
adc
es
sub
cmp
ret
fwait
pop
je
jb
outsb
cs
inc
lcall
rolb
inc
cs
je,pt
inc
sbb
cmpsb
aas
push
mov
ficoms
add
mov
inc
sub
jp
add
cmp
xchg
mov
inc
sbb
dec
sbb
sbb
push
adc
pop
testb
aaa
push
sbb
mov
es
xor
push
push
sub
inc
enter
sub
enter
sub
jnp
in
sub
aaa
les
push
push
decb
xchg
cmp
sub
push
lds
adc
push
push
fstps
sbb
push
js
insl
xchg
inc
and
cmp
cmp
push
add
les
jl
push
in
xchg
nop
adc
outsb
push
xorb
ljmp
sbb
mov
adc
push
inc
outsl
push
pslld
cmp
add
or
push
jmp
bound
adc
cmp
xor
mov
jnp
scas
and
jns
xchg
add
insb
mov
pop
sbb
sub
sbb
bound
outsb
jb
mov
lds
out
xor
pop
insb
and
xor
sbb
sbb
and
add
addb
lret
lret
xchg
sub
dec
or
or
xor
push
sub
push
mov
jp
push
add
testb
xor
ds
sub
push
xlat
mov
add
jle
jbe
mov
cmp
cmp
fisubs
jae
inc
sbb
fwait
push
add
add
sbb
stos
subl
lret
aaa
and
jle
xchg
stos
inc
mov
ljmp
push
cs
inc
rolb
sub
fisubl
cmc
mov
out
dec
xor
jbe
pop
add
add
xchg
scas
sbb
sbb
sub
add
dec
sub
insb
adc
sub
insb
and
pop
add
dec
xchg
repz
out
adc
add
sbb
sub
dec
push
ss
xchg
fwait
into
add
sbb
sbbb
inc
sbb
imul
inc
sbb
dec
sbb
js
stos
add
dec
xor
lds
cli
sbb
dec
sbb
cmp
mov
or
add
dec
mov
cmp
repnz
add
or
push
push
sub
jbe
arpl
repnz
inc
and
xchg
add
cmp
xchg
sbb
cmp
jb
sbb
mov
addb
and
sub
sbb
adc
push
insb
cmp
xchg
pop
ret
nop
adc
and
cmp
push
mov
fisubl
sub
xor
inc
adc
and
repnz
adc
cmp
add
push
inc
ljmp
or
push
out
adc
lea
adc
and
test
scas
cs
add
sub
adc
pop
add
cli
mov
testl
pop
dec
lret
call
inc
add
sbb
sbb
ret
sti
ljmp
movb
xor
push
js
xor
add
dec
pop
test
sub
call
sbb
xor
push
push
lea
push
ret
into
test
jl
push
sub
and
and
loop
jp
bound
sbb
aam
out
mov
xchg
adc
adc
aas
sahf
cli
jecxz
add
pop
repnz
xchg
adc
and
sbb
adc
aad
stc
dec
or
and
popa
xorl
lods
inc
mov
lds
jmp
es
cs
in
sahf
inc
sbb
dec
sbb
inc
xor
jp
outsb
and
testb
push
push
and
pop
shll
add
movsb
mov
dec
mov
bnd
in
outsb
mov
scas
push
repz
in
mov
push
xchg
dec
repz
pop
push
pop
mov
orb
xor
sub
sahf
imulb
mov
fucomip
out
xor
mov
adc
pop
ret
sub
lock
outsb
out
lods
push
dec
cmpsb
clc
cli
dec
mov
clc
jb
push
testb
adc
push
pop
dec
inc
and
dec
jle
xor
and
ficompl
movsl
xchg
repnz
adc
mov
insb
aaa
cmp
mov
test
scas
push
lcall
subb
sub
ret
imul
inc
push
sub
dec
outsb
sahf
and
dec
js
sbbb
sbb
rorb
push
mov
lods
adc
dec
mov
mov
dec
es
popl
jle
push
lcall
and
pop
cli
ss
lcall
stos
cmpb
scas
add
mov
mov
out
adcb
out
push
cs
sub
or
dec
or
fsubrl
or
mov
stos
sti
mov
add
add
pop
dec
or
jnp
pop
dec
inc
adc
es
push
xor
pusha
push
or
scas
cmp
mov
push
dec
jbe
out
bound
fistpl
cmp
mov
outsb
jg
outsl
jp
jb
xor
jp
cld
repnz
inc
mov
dec
jo
mov
dec
mov
outsb
push
inc
sbb
ljmp
pop
or
pop
or
pop
or
push
packssdw
outsb
and
sub
arpl
pusha
lret
popa
xor
add
inc
jp
jp
inc
jns
jp
jg
push
jge
push
mov
push
cmp
cwtl
push
and
pop
xchg
push
push
addr16
scas
popa
outsl
xor
mov
cmp
adc
mov
ret
stos
cs
pop
pushf
lret
cltd
dec
inc
ljmp
movd
cmc
ljmp
sbb
fisubl
cmp
jns
xchg
mov
or
outsb
pop
adc
gs
jle
push
mov
xor
dec
add
xchg
add
jns
nop
arpl
int3
pop
add
dec
outsl
jle
imul
pop
inc
into
and
push
dec
test
push
dec
out
adc
test
out
jmp
fstp
imul
sbb
and
add
dec
and
mov
jp
fs
push
dec
test
pop
sbbb
dec
outsb
xor
dec
data16
inc
imul
cld
dec
dec
movb
adc
arpl
jl
jb
test
pop
incl
stos
pop
sub
cmp
jle
jbe
sub
cmp
adc
mov
pop
outsb
js
ds
addb
gs
jle
dec
lahf
inc
jbe
repnz
fimull
cmp
jmp
andl
repz
mov
xchg
outsb
xchg
sub
adc
sahf
pop
paddsb
xor
ret
push
outsl
lret
addr16
add
dec
pop
arpl
pushf
push
outsb
inc
jb
xor
cmp
decl
push
insb
push
insl
ljmp
loope
mov
and
jge
jae
xchg
add
fs
inc
rolb
and
jle
xor
push
sub
dec
imul
stos
push
dec
mov
pop
jbe
pop
adc
cmp
pop
dec
or
inc
adc
or
sub
icebp
div
stos
bound
lods
xor
or
cmp
sub
dec
inc
ds
push
or
jae
cmpsl
cmp
insb
lds
mov
push
cltd
cwtl
push
xchg
pop
lea
cmp
push
call
call
mov
fisubrl
inc
or
inc
lahf
pop
mov
and
xor
xchg
inc
add
sbb
ss
cmpsl
cmp
xchg
data16
jns
mov
stos
std
push
mov
lahf
mov
mov
xchg
push
popa
rcll
test
or
dec
xchg
mov
push
push
repnz
repnz
xor
sub
and
sub
inc
imul
sub
jg
data16
xor
push
sub
cmpsl
add
roll
stc
push
sbb
cmp
movb
insl
repnz
xchg
inc
mov
lea
xchg
and
mov
inc
lods
jnp
gs
out
pop
dec
xchg
inc
inc
mov
mov
push
jns
cmpsb
lret
adc
outsl
jno
cmpsl
push
imul
inc
loope
sub
inc
jmp
xor
sub
shll
stos
mov
rolb
or
push
mov
add
das
push
sub
or
mov
jp
repz
cmp
cmp
dec
clc
fdivrs
es
insl
mov
push
sub
out
cmp
aas
mov
aas
sbb
cmp
ds
aad
xor
sarb
outsb
xor
xor
mov
lcall
and
inc
push
push
sub
sarl
data16
cli
orb
insl
in
push
pop
js
ret
fwait
dec
sub
inc
pop
sbbl
cs
inc
push
outsb
sub
data16
jle
jb
bndldx
xor
jbe,pn
outsb
push
xchg
andb
lods
adc
push
cmp
xor
push
in
or
and
jp
sbb
inc
and
sbb
pop
push
sahf
cmpb
push
sbb
aas
lods
cs
sbb
iret
data16
pop
outsl
cmpsl
sbbb
outsb
pop
xor
sbb
daa
mov
push
test
mov
sub
orb
pop
lcall
add
cmc
push
or
pop
mov
pop
aad
cmp
mov
in
xchg
sub
fists
data16
push
pop
insl
pop
stos
pop
bound
jle
addl
es
or
and
lds
pop
iret
pop
filds
inc
pop
add
pop
loop
dec
and
sahf
jb
cli
sbb
ljmp
push
or
popa
or
mov
insb
mov
es
pop
mov
push
add
cmp
and
cmp
jl
sbb
sub
jle
sub
or
outsb
jle
jp
push
and
dec
and
out
scas
push
loop
ret
inc
sahf
push
pop
xor
push
inc
out
and
js
mov
pop
bound
and
fs
sti
mov
addr16
lahf
cmpb
test
xchg
jle
xchg
lcall
orb
sbbb
sub
cmp
push
dec
and
cmpsb
lahf
jbe
fdivp
push
rolb
xor
sub
push
subb
mov
mov
pop
sub
fmuls
test
inc
inc
jg
testl
js
scas
push
cmp
push
rcrb
loopne
lcall
inc
jno
push
jle
add
push
pop
cwtl
add
cmp
fwait
mov
or
pop
mov
sub
ss
nop
inc
and
sbb
mov
ret
adc
push
or
mov
pop
lahf
cmp
mov
insl
push
bound
xor
popa
xchg
jb
xchg
es
fwait
add
inc
add
and
iret
sub
push
inc
in
pop
out
adc
jno
or
lcall
push
push
push
dec
pop
decb
rcrl
fisubrl
scas
incb
fisubl
lds
and
scas
mov
pop
and
pop
inc
sbb
xchg
pushf
mov
out
mov
les
mov
xor
push
or
fiaddl
sub
lahf
cmpsb
fldcw
sub
out
scas
dec
ret
adc
jnp
mov
push
push
push
loopne
mov
jp
insl
pop
push
push
xor
sbb
cmpsb
rcrl
test
xchg
dec
jne
xchg
imul
pop
add
arpl
scas
imul
addr16
push
push
scas
and
insb
lcall
hlt
addr16
bound
or
push
jp
sarl
iret
mov
sub
jae
outsb
fs
xor
pop
inc
mov
stos
lods
int3
jl
sbb
fisttps
add
sub
sub
sub
sbb
pop
sub
adcl
sbb
inc
mov
push
mov
bnd
sub
mov
aad
data16
incb
test
xchg
jo
push
mov
push
mov
add
orl
shrb
and
dec
mov
push
inc
cld
mov
mov
add
push
sbb
jo
xchg
sub
mov
test
push
out
xchg
pop
ljmp
xor
cmp
mov
inc
cmp
dec
idivl
pop
mov
push
filds
daa
loope
mov
popf
outsb
inc
lods
jns
js
imul
out
sub
xorl
or
sbb
repnz
rcrl
and
add
jle
xor
cmp
jge
stos
jbe
push
sbb
sub
test
mov
subl
les
xchg
sub
push
inc
jb
and
push
outsb
adc
sahf
pusha
hlt
mov
rep
inc
fiaddl
and
add
lods
pop
dec
push
mov
dec
aad
dec
in
dec
data16
xchg
dec
out
pop
lahf
sbb
ret
inc
xlat
xor
fistps
jg
mov
nop
push
xor
nop
xchg
scas
mov
icebp
jbe
mov
xchg
sub
mov
inc
popa
mov
xlat
cld
loopne
lret
js
cli
xchg
cmp
jl
mov
sbb
inc
cmp
int
push
daa
nop
adcb
push
cmp
fwait
push
or
or
outsb
mov
add
xchg
es
in
dec
push
gs
lcall
mov
lods
mov
ds
jo
aaa
jge
das
push
dec
xchg
or
ret
sbb
push
arpl
dec
sahf
das
xor
or
jp
jle
je
xchg
pop
dec
es
dec
adc
js
pop
xchg
xchg
cwtl
adc
jb
lcall
inc
pop
popl
or
pop
jno
int3
call
adc
enter
jb
mov
or
daa
xchg
push
jle
das
outsb
popa
adc
sbb
mov
out
lcall
sub
std
pop
and
stos
adc
or
outsl
pop
es
cmpsl
es
push
xor
scas
xchg
sbb
pushf
xor
mov
xor
sub
and
mov
mov
mov
movsl
adc
std
add
push
repnz
adc
fnstcw
daa
inc
add
xor
xor
and
mov
dec
sub
sbb
xor
test
sbb
lcall
mov
int3
sbb
mov
cmp
sub
into
sub
push
sbb
mov
inc
dec
or
add
test
push
cltd
cmpsb
inc
adc
ficoms
push
push
adc
lcall
jmp
push
and
les
es
adc
add
int
cmp
in
sub
adc
sbb
jae
pop
push
mov
jmp
xor
mov
ljmp
pop
jp
adc
inc
ret
stc
insl
and
ss
pop
dec
cs
insl
and
push
cmp
into
aad
cmp
cmp
rcrb
jnp
test
mov
aas
jp
jnp
les
xor
xchg
push
loop
shr
xchg
xchg
ficomps
loop
add
insl
addl
adc
adc
and
add
adc
arpl
pop
rol
nop
add
fimull
xchg
lcall
into
ficompl
xchg
in
inc
mov
pop
mov
stos
daa
out
or
inc
jnp
pop
ficoms
mov
ljmp
fisubrl
mov
stc
jbe
rclb
xchg
sti
sbb
and
mov
pop
loop
sub
and
ljmp
cli
loop
jnp
aas
sub
sub
pop
out
xchg
inc
cmp
mov
sub
fidivrl
mov
and
pop
aas
push
add
add
ds
push
fsubrl
test
test
xchg
add
jns
or
jle
jbe
mov
add
jbe
xor
int3
or
sub
les
add
sbb
xchg
lret
mov
repnz
dec
inc
outsb
sub
les
pop
cmp
pusha
fiaddl
adc
inc
js
adc
fwait
push
cmp
xor
fsubl
push
pop
and
xchg
xchg
and
adc
mov
in
push
dec
sbb
xchg
repz
rol
xchg
insl
add
aam
pop
sarb
mov
movsb
and
and
sbb
jmp
push
aam
xchg
add
faddl
ficompl
xor
sbb
sarb
mov
xor
push
push
cmp
scas
sub
sarb
inc
pop
mov
inc
jb
cmp
mov
pop
sbb
faddp
lret
shr
mov
test
mov
fcmovnbe
mov
mov
mov
insl
pop
fs
push
inc
jg
adc
add
sahf
lret
pop
fdivr
xchg
mov
pop
in
xchg
pusha
cmp
pop
int3
mov
ret
stos
mov
xchg
dec
xor
pop
ret
and
sub
fsubl
fdivr
aam
fisubrs
jle
adc
push
mov
je
sti
test
test
imul
push
adc
xor
adc
jmp
loop
push
adc
sbb
test
add
inc
orl
push
in
lea
push
movsl
daa
adc
mov
mov
lahf
pop
int
lock
test
divb
xchg
je
mov
imul
or
ss
sbb
adc
fiaddl
adc
or
sub
jo
pop
mov
leave
sbbb
or
xchg
imul
or
push
mov
pop
test
dec
inc
sbb
inc
mov
jb
add
push
orb
adc
enter
fs
sub
sahf
cmc
pop
jns
cmc
jmp
test
cmpsb
sbb
popf
jne
lcall
xorl
mov
add
shlb
outsl
jne
out
jp
inc
cltd
jno
xor
push
xchg
lea
mov
or
sbb
lcall
xor
mov
sub
jne
movsb
add
cltd
mov
xlat
call
mov
cltd
cmovg
xor
mov
jb
push
xchg
bnd
add
movlps
pop
test
sbb
add
add
add
pop
xchg
mov
lea
mov
xchg
add
addb
andl
cld
stos
lret
adc
sbb
lahf
dec
les
xchg
push
inc
mov
push
imul
inc
jne
jge
lidtl
ljmp
add
aas
hlt
gs
mov
sub
mov
dec
int
and
rorb
jl
or
sub
add
mov
cmc
popl
push
adc
dec
test
add
imul
jbe
lds
cmpl
or
sbb
xchg
jg,pn
pop
add
into
or
lret
or
xchg
sub
dec
popf
lcall
or
lahf
adc
mov
pop
pushf
adc
imul
adc
dec
push
jns
iret
popf
dec
and
and
sbb
pop
scas
add
mov
cltd
push
or
sub
outsb
sahf
mulb
test
dec
adc
lret
pop
push
mov
cwtl
popa
or
xchg
sub
idivl
adc
dec
add
jg
xor
sub
in
and
jnp
sarb
inc
push
sub
add
adc
js
pop
xor
ja
outsl
ficoms
or
data16
and
mov
sbb
pop
add
jae
push
mov
sub
mov
out
ret
int
pushf
jge,pn
push
stos
push
repnz
ja
sbb
jnp
push
popf
lahf
lret
cwtl
psubw
mov
add
dec
fcompl
mov
push
mov
test
cltd
aas
pop
inc
add
repz
mov
test
and
and
clc
lret
sub
pop
lcall
inc
push
sub
ss
ljmp
cmc
test
sbb
adc
sbb
sub
sbb
push
dec
jmp
sbbl
popa
stos
rclb
repz
add
inc
pop
pop
test
push
xor
xchg
sub
scas
cld
fistpl
and
push
or
jo
cmpsl
mov
mov
sub
adc
push
lea
jne
sbb
out
sarl
add
jl
lods
adc
cmpsb
adc
cmpl
into
sbb
push
sbb
sub
mov
and
add
in
adc
ss
aaa
insb
loopne
and
jl
push
pop
stos
push
or
ljmp
adc
xchg
pop
test
inc
ljmp
pop
sub
mov
xor
fimull
je
mov
lret
xchg
movsl
mov
mov
add
add
and
inc
sbb
xorl
sub
int
adc
mov
mov
mov
inc
subl
cmpsb
test
xchg
repnz
mov
test
mov
add
and
cmp
jl
dec
adc
adc
push
scas
jne
test
out
fnstsw
adc
into
imul
daa
add
testb
mov
test
mov
sub
inc
into
mov
orb
cmpsb
sbb
mov
and
push
push
popf
and
nop
hlt
repnz
and
push
xchg
push
test
adc
je
and
shlb
xchg
or
adc
out
movb
push
iret
sti
or
xor
imul
adc
repnz
mov
xchg
aad
fcomip
sbb
push
jp
add
push
and
inc
cli
out
dec
test
add
add
and
cmp
sub
iret
testb
iret
aam
test
adc
pop
mov
inc
enter
add
or
add
jg
lahf
clc
dec
and
or
aam
ret
lea
jge
sub
fcoml
andl
inc
pop
stos
enter
and
imul
mov
cltd
xorb
pop
rdtsc
push
sbb
jno
and
test
int3
cltd
addl
fcmovu
and
push
sub
test
or
push
orl
sahf
call
dec
add
add
cli
addl
add
pop
orl
push
sub
mov
push
push
and
scas
imul
cmc
pop
leave
and
out
push
xor
daa
pop
xchg
xchg
cltd
pop
or
adc
lds
or
outsl
cltd
test
int
adc
inc
cmpsb
das
test
or
pop
or
mov
lea
scas
jp
sub
sbb
test
shrb
inc
arpl
push
out
or
and
aam
adc
add
pop
mov
xor
lea
test
mov
push
add
pop
lea
jecxz
cli
push
push
sbb
sahf
mov
lcall
fstpl
in
sti
roll
xlat
xor
mov
push
cmp
aam
sbbl
cmp
lock
cmpl
pushf
sbb
stos
fistl
push
xchg
cld
add
daa
adc
pop
sub
push
rclb
mov
bound
xchg
sub
or
dec
xorl
clc
out
or
shlb
cltd
dec
das
mov
sbbl
fsubrs
xchg
inc
xchg
ficompl
shll
out
xchg
mov
add
and
sub
pop
mov
push
xchg
mov
rcrb
cmp
and
xchg
scas
jmp
push
add
jae
push
sbbl
adc
sbb
mov
mov
push
xor
testb
fistl
lea
pop
pop
push
call
pop
mov
xor
pop
pop
pop
sbb
xor
mov
loopne
popf
add
in
cli
call
dec
or
jle
push
and
subl
add
cmp
add
pop
sbb
lahf
sbb
add
cltd
mov
dec
cmpsb
xchg
mov
das
mov
sub
sbb
inc
scas
outsb
cltd
mov
mov
mov
js
adc
cmp
movsb
inc
mov
cltd
shl
sbb
mov
test
push
das
cmpsb
sbb
xchg
mov
xchg
adc
add
aam
cli
test
and
js
popf
addr16
call
jb
add
pop
xchg
mov
scas
mov
push
jmp
jne
sahf
and
cmp
or
std
clc
rolb
in
test
cmp
sti
popa
vcvttss2si
into
addl
addr16
outsl
adcb
push
jno
ret
and
sbb
mov
pop
xchg
mov
dec
lds
into
cwtl
imul
and
push
xchg
popf
into
repz
adc
push
xlat
movsl
lcall
arpl
hlt
icebp
lods
push
stc
lret
add
test
inc
dec
xadd
cwtl
arpl
add
test
pop
or
push
jb
comiss
lahf
push
or
sbb
cmp
push
push
adc
outsb
leave
out
jle
movsl
jne
add
adc
enter
imul
ret
push
xor
fstl
pop
leave
popf
inc
adc
cmp
imul
xchg
xor
cmp
sbb
xchg
jne
mov
push
xor
jb
sbb
xor
dec
xor
lcall
iret
or
cmpsl
add
push
mov
sub
test
pop
roll
pop
movsb
mov
pop
sub
xchg
cmpb
lock
mov
xchg
mov
add
in
and
je
xchg
mov
int3
mov
inc
xchg
test
popa
and
orl
sbb
bound
sub
testl
inc
js
cmp
sbb
pop
mov
push
enter
movsl
xlat
dec
add
mov
push
push
orl
push
inc
sub
pop
add
mov
jo
sub
lret
sbb
cmpsb
mov
and
or
mov
mov
inc
jne
sub
add
test
push
xchg
in
adc
enter
dec
add
movsb
inc
lock
lods
ss
clc
das
insb
ret
popf
sbb
push
adc
shlb
adc
lea
jg
incl
xor
test
das
fcompl
cwtl
int
sub
adc
setg
test
adc
or
arpl
outsl
inc
add
sti
xchg
imul
adcl
lcall
out
jbe
shlb
push
xchg
mov
add
xor
jecxz
jbe
or
jne
xor
repz
cltd
xorl
sbb
fwait
push
lea
cmp
or
cwtl
lret
add
push
sbbl
test
test
cmp
push
adcl
xor
mov
fwait
xor
into
or
jne
push
or
repnz
hlt
dec
or
sub
dec
jne
sti
xor
hlt
dec
test
hlt
dec
mov
mov
lret
enter
jbe
movsl
mov
jmp
pop
leave
imul
xor
sub
dec
or
or
or
or
xchg
lcall
jne
fwait
or
pop
hlt
sbb
xor
jne
add
adc
hlt
adc
or
stos
mov
enter
mov
xchg
xor
push
xor
mov
int
jnp
push
data16
pop
repnz
or
ljmp
sbb
sub
leave
mov
cli
xor
pop
hlt
cmp
ljmp
push
adc
push
movsl
and
adc
scas
add
xor
sahf
inc
ret
push
sub
mov
mov
repz
mov
ljmp
hlt
jne
dec
cwtl
rol
outsb
push
jle
xchg
push
pushf
stc
daa
sub
sbb
push
divb
sbb
push
add
jecxz
or
mov
pop
mov
cli
jne
scas
sub
push
cmpsb
sbb
jne
call
shl
pushf
test
fsubrl
or
ss
add
sbb
int3
sbb
pop
sbb
icebp
test
push
inc
in
mov
imul
daa
lds
sub
pop
leave
idivb
xor
popa
dec
int
sbb
divb
dec
ljmp
sub
test
sub
leave
add
mov
neg
ret
or
loopne
inc
sbb
into
mov
jne
sub
xor
dec
repnz
ss
push
adc
into
xor
cmpsb
inc
cwtl
mov
sub
and
sbb
sbb
sbb
jne
inc
ret
lds
arpl
or
sub
inc
mov
lcall
std
enter
sub
and
movsb
ds
push
mov
xchg
icebp
not
sub
mov
pop
sbb
pop
hlt
adc
xchg
mov
orb
sub
sbbb
sbb
xor
divl
pop
ja
add
cmp
mov
mov
pop
sub
sbb
xlat
sub
adc
les
mov
cwtl
fisubrs
xchg
pop
or
sbb
divb
sbb
movsb
jp
add
lcall
jne
in
call
idiv
hlt
or
dec
jmp
mov
and
stc
and
sbb
add
ret
xchg
add
adc
xchg
xor
dec
sbb
test
fsubp
push
test
shlb
fistpl
push
xchg
adc
jns
cmp
jnp
les
pop
xor
push
inc
bound
int
and
in
sbb
fbstp
inc
jecxz
xor
in
and
fldcw
cmp
push
sbb
shr
sub
xchg
mov
push
jb
cs
neg
mov
int
adc
adc
faddp
stos
jmp
adc
sbb
popf
repz
cmp
fldcw
sbb
iret
fstpt
adc
jnp
cli
sub
cmp
xor
jnp
fmuls
adc
xorl
dec
mov
sub
xor
test
jnp
mov
lcall
and
stos
xor
xor
sbb
sbb
and
arpl
out
cmp
cmp
jnp
xchg
ljmp
fsubr
ficomps
repz
rcr
sbb
pop
xchg
sub
mov
ret
pop
fucomi
xchg
adc
jo
stos
pop
dec
outsb
xor
jecxz
ret
and
mov
aad
cmp
add
cmp
lock
fisubl
outsb
lods
add
inc
dec
fwait
cmp
repz
stc
and
sarb
cltd
and
or
mov
and
sub
cmp
cs
cmpl
test
es
icebp
dec
inc
push
dec
outsl
cmp
push
add
adc
and
cmp
lods
jecxz
jle
cmp
mov
sub
add
mov
push
push
push
sub
in
out
push
jg
pop
cmp
mov
inc
aas
xor
ds
orb
into
xor
and
xchg
sti
xchg
xchg
lods
dec
cmp
mov
scas
fwait
shrb
insl
aaa
sbb
inc
pop
cmpsb
inc
dec
lret
mov
es
dec
scas
loop
fists
push
cmp
fstpl
dec
lds
sub
pop
dec
ja
jmp
jmp
xor
mov
and
popf
clc
mov
jnp
outsl
in
xor
outsb
and
mov
lret
mov
data16
fists
je
ret
fdiv
push
push
pop
data16
add
push
sbb
gs
clts
sbb
add
cmp
jle
arpl
inc
pusha
pop
xchg
adc
stos
insb
pop
insl
add
dec
add
pop
add
push
push
add
push
jge
mov
and
sbb
push
mov
fisubrl
push
daa
pop
pop
jbe
sub
inc
xor
dec
sahf
push
and
push
dec
inc
and
sbb
ret
adc
and
sbb
add
cwtl
dec
dec
mov
or
mov
jnp
dec
and
and
mov
pop
mov
jmp
dec
sbb
cmp
or
cmp
xor
and
pop
pop
xchg
push
add
sbb
push
subb
sbb
out
mov
clc
cmp
sub
sub
mov
push
daa
in
and
repnz
add
or
sub
cs
sub
mov
adc
adc
inc
std
push
rcll
loopne
adc
sub
add
sbb
pop
xor
sbb
mov
push
xor
popa
mov
or
adc
or
and
aad
xor
mov
add
syscall
and
not
cmp
xchg
imul
xchg
gs
lds
add
in
jne
int
xor
outsl
xchg
sbbb
jmp
aad
lret
adc
pop
and
xchg
sti
out
mov
sub
inc
push
xor
xchg
mov
mov
jnp
mov
jnp
sahf
cmp
testb
xchg
cmp
cmp
out
mov
dec
pop
xchg
push
xor
mov
adc
out
jnp
sahf
into
insl
es
push
loopne
in
es
xchg
scas
xchg
fisttpll
bound
inc
sbb
mov
aam
das
sbb
jl
mov
insb
jle
scas
mov
in
cwtl
add
fiaddl
or
gs
js
add
bound
fwait
daa
ret
pusha
add
fcomps
push
sbb
inc
data16
add
jnp
mov
stc
push
and
pushf
sub
cli
jns
adc
sbb
inc
inc
push
lods
mov
incb
or
outsb
push
ljmp
pop
pop
and
sahf
add
outsl
sbb
jle
mov
sbb
push
movsb
scas
pop
pop
and
stos
add
sub
push
or
in
adc
pusha
cmp
mov
daa
enter
data16
jbe
sbb
add
retw
add
mov
js
in
push
dec
adc
insb
push
lahf
jl
sarl
push
mov
pop
adc
adc
adc
mov
push
mov
mov
inc
push
dec
in
test
push
and
lods
mov
mov
lods
lahf
sbb
sahf
scas
retw
sbb
pop
push
mov
icebp
push
out
in
add
jo
mov
push
xchg
push
cltd
ljmp
outsb
adc
sbb
outsb
push
pop
notb
add
push
pop
cmpsl
add
faddl
sub
or
adc
sub
mov
add
mov
push
stos
sbb
push
add
loopne
prefetch
sbb
add
add
sub
es
in
cmp
push
pop
sbb
test
into
push
push
lret
repz
je
sub
xchg
dec
icebp
repnz
xor
xorl
jno
leave
repz
xor
jge
negb
cmp
cmc
andl
or
das
push
xchg
fists
pop
sbb
jnp
cli
jl
pop
mov
fistpll
sbb
or
add
dec
sbb
loope
fbstp
scas
lret
pusha
mov
out
ljmp
inc
cmp
mov
sub
ja
lret
cmc
sahf
bound
push
sub
cmc
ljmp
fcmovb
xor
test
out
and
outsb
xorb
lahf
scas
push
pop
mov
push
hlt
xor
movsl
adc
stos
mov
call
lret
orb
dec
popf
mov
cs
test
test
fldl
scas
aam
cmc
mov
mov
outsb
sub
push
fmull
xor
sbb
mov
cmpsb
lret
pop
ret
imul
mov
loop
jbe
lcall
outsl
rcrl
dec
add
ss
and
into
mov
push
push
push
cmp
imul
jecxz
mov
addr16
sub
push
shr
mov
sub
aad
add
push
or
js
stos
mov
frstor
dec
adc
aaa
push
sahf
stos
push
pop
into
rorl
xchg
test
pop
ret
xor
or
shll
mov
pop
outsb
xlat
addr16
sub
pop
sbb
aas
cli
das
into
and
div
out
sub
inc
add
pop
lret
mov
cwtl
push
mov
jmp
mov
movsb
add
cltd
popf
stos
jle
xchg
ds
pop
pop
jmp
mov
dec
inc
push
or
addr16
bound
cli
and
or
jb
loop
sub
push
insl
mov
jle
call
repnz
or
fucomip
cmp
push
xchg
add
inc
das
fstpl
dec
inc
pop
int
and
test
lea
push
loopne
mov
mov
xor
popa
cmpsb
enter
sbb
je
sbb
stos
and
je
sbb
testb
sbb
fs
fsubrs
fnstcw
xlat
sbb
mov
push
divb
sub
and
add
cmc
movsb
push
cwtl
push
push
daa
dec
out
in
dec
fcomps
enter
stos
sbb
insl
adc
sub
pop
adc
add
hlt
dec
cs
sub
sti
xchg
outsb
cld
rcll
pop
mov
ss
xor
testb
sbb
sbb
or
jmp
sub
or
fcomps
pop
add
dec
sbb
cmpl
sbb
push
cli
sub
xor
popf
adc
ficompl
pop
mov
sti
xchg
push
sahf
pop
cwtl
mov
rolb
mov
mov
iret
or
cs
pushf
pop
ljmp
xchg
and
sbb
or
jle
or
push
scas
inc
jecxz
mov
rcrl
cmp
inc
sti
mov
cmc
xchg
push
sbb
inc
sbb
or
dec
dec
ret
shlb
add
cli
in
dec
scas
subb
pop
lcall
fisttpl
lds
xchg
cmp
xchg
and
mov
inc
sub
or
lods
mov
adc
push
cmpsl
push
lcall
push
call
roll
sbb
xchg
inc
push
stc
mov
fsubp
ljmp
shrb
push
adc
sub
in
mov
jbe
adc
push
add
stos
xor
mov
mov
mulb
and
mov
add
test
mov
adc
fstpl
cwtl
repnz
add
cmp
mov
fidivrs
or
jp
mov
sbb
pop
sahf
shll
sub
fists
sahf
add
fwait
xor
test
xor
jmp
out
inc
push
mov
leave
fisubrl
popa
ljmp
or
filds
or
or
mov
cmp
aas
repnz
ljmp
push
sbb
push
or
mov
pushf
add
dec
outsl
int
pop
aam
mov
sbb
outsb
idivb
cmpsl
into
dec
pushf
fidivrl
and
cmpb
into
out
ret
sub
fcoml
push
rcrl
and
or
iret
rcr
movsb
iret
jmp
out
xor
adc
pop
jnp
pop
ljmp
fdivs
or
ror
fldcw
xor
daa
add
ret
mov
int
loop
cwtl
leave
add
jle
xor
add
jo
cmc
loop
rorl
or
sahf
fisttps
jno
push
loopne
lret
fmuls
sub
aad
mov
xor
adc
testb
cmp
movb
lds
mov
push
or
xor
xchg
data16
data16
cwtl
ds
push
pop
cmp
imul
sbb
fistpl
jp
fsub
push
sarb
jmp
es
sahf
fiaddl
test
pushf
push
pop
push
jge
xlat
or
pop
lret
lods
jb
cmp
xlat
sub
into
push
ret
mov
lret
xchg
mov
and
and
sub
xor
add
arpl
lea
loope
jo
jmp
adcb
mov
fsubr
popa
or
cwtl
push
cs
push
fs
mov
jl
cli
jg
fimull
fstl
pop
and
sub
lret
adc
into
add
or
rol
ret
fisubrl
jnp
pushf
test
cmp
das
mov
adcl
repz
andl
adc
into
push
shll
jno
jp
inc
faddl
mov
jb
push
lret
scas
roll
pop
mov
cli
ficoms
mov
xor
es
mov
sub
test
mov
add
xor
ret
pop
push
inc
fistpl
cmp
cs
add
repnz
imul
mov
inc
scas
iret
jp
push
mov
aam
adc
int3
aaa
mov
push
or
mov
sbb
adc
scas
ret
mov
or
or
sub
mov
mov
jecxz
fnsave
or
rcl
sub
scas
inc
cld
fistpl
sahf
jp
push
addr16
mov
fisubl
cmpsl
mov
int3
push
int
or
loop
int3
sub
push
scas
sbb
push
ss
orb
setbe
fcmovnb
stos
or
inc
push
ret
mov
fldenv
mov
stc
es
add
gs
aam
jnp
loop
mov
mov
ljmp
cwtl
or
pop
jb
inc
hlt
out
mov
and
jnp
dec
fmulp
cwtl
mov
les
add
test
push
mov
pop
mov
pushf
das
push
fsubp
cmpsb
pop
or
cmp
xchg
flds
mov
stos
mov
jnp
sub
xor
mov
push
out
mov
shrl
scas
or
scas
xorb
push
inc
cmc
add
imulb
sub
or
lock
or
sarb
mov
inc
jp
rorl
into
pusha
mov
push
or
fdivs
cmp
fcmovb
ret
test
in
sub
xor
or
test
into
lcall
or
sub
int
adc
inc
sub
fmuls
ficomps
xchg
mov
cmpsl
mov
push
jmp
adc
rorb
ret
out
or
fdivp
lret
cmp
jo
push
shlb
fsubs
add
bound
test
scas
sahf
push
jno
loopne
push
dec
or
sub
in
shlb
loope
cltd
in
xor
ds
adc
shrb
leave
dec
rorl
shr
add
and
dec
ljmp
cs
mov
into
andl
flds
mov
fmuls
addr16
cmpsb
adc
clc
dec
xchg
arpl
sub
or
inc
outsb
fmuls
mov
hlt
push
fbld
and
sbb
cli
pop
xor
xchg
sahf
pop
mov
aas
inc
iret
shll
test
sbb
inc
or
inc
leave
mov
jbe
push
or
or
dec
adc
movb
xor
or
sahf
fcoml
xchg
lret
push
mov
jp
pop
ret
jae
pop
adc
pop
sbb
or
popa
jp
lret
and
loop
inc
jge
inc
into
jb
pushf
ds
andl
cmp
lret
inc
adc
and
push
fptan
mov
adc
xor
andb
xchg
lcall
cmovo
mov
data16
or
fdivrs
mov
lods
xor
push
sbb
ss
insb
mov
dec
and
cmp
cli
dec
aaa
cmpsb
sahf
cs
mov
pop
mov
mov
mov
adc
jp
lds
and
xchg
pop
add
shrb
sub
rcr
or
sbb
std
fisubl
sub
cli
cltd
call
fiadds
sbb
mov
push
push
xchg
pushf
leave
inc
jb
jbe
scas
push
mov
inc
add
dec
inc
stos
data16
xor
and
arpl
xchg
pop
adc
jb
cli
dec
inc
rcll
ljmp
inc
dec
lcall
scas
lods
cmp
lret
inc
jle
sar
inc
rorl
xchg
cli
add
cmp
call
ret
push
mov
inc
repz
out
sbb
fistpl
jbe
mov
cmp
mov
cmp
arpl
push
shll
add
sub
fcompl
sarb
jb
push
sbb
push
int3
int3
lret
testb
jle
scas
ret
push
xlat
mov
dec
push
pop
out
pop
bound
ficoml
cmp
sbb
cmp
ret
orl
push
into
xchg
inc
adc
xchg
sub
and
sub
out
lods
inc
nop
fwait
or
or
dec
or
sub
insb
sub
dec
scas
adc
inc
scas
push
jp
nop
mov
rcrb
mov
push
ss
or
pop
lret
repnz
sbb
test
cwtl
incb
lahf
mov
hlt
cltd
mov
ss
sarb
sub
sub
jecxz
or
push
jle
popa
pusha
outsb
add
orl
outsb
fwait
cltd
xchg
out
leave
push
xchg
sbb
shlb
lret
pop
aam
repnz
mov
push
push
add
dec
jge,pt
xchg
or
xor
push
or
push
pop
push
mov
xchg
into
push
sbb
fstps
cmp
mov
add
ljmp
out
adc
xchg
fcmovnb
ss
add
imul
push
out
fs
xchg
repnz
dec
xchg
scas
adc
inc
mov
sahf
push
xchg
dec
outsb
push
das
enter
mov
notb
mov
and
xchg
mov
jne
ret
test
mov
lret
jmp
sub
shrb
ret
push
pushf
pop
fcompl
adc
andb
sub
inc
addr16
jp
popf
mov
jnp
ljmp
and
rcrb
rorb
push
sbb
push
push
daa
push
aas
rolb
mov
loope
cmpsb
and
ret
cli
xor
arpl
arpl
push
sub
das
pop
dec
flds
outsb
mov
xorl
fists
paddusb
mov
sub
out
or
es
lea
dec
cmp
fistl
loop
lds
cwtl
dec
xor
mov
jge
or
roll
xchg
scas
into
push
nop
jle
scas
xor
and
push
mov
loopne
scas
sbb
adc
cmp
ret
inc
xchg
cmp
mov
aam
mov
jecxz
dec
lcall
inc
or
mov
push
push
out
dec
and
adc
and
or
mov
jp
arpl
scas
adc
jmp
ret
cwtl
xor
cli
cs
push
cs
or
sbb
in
cmp
sub
adc
cmpsb
lds
lret
lret
loope
cmp
out
sahf
rcl
jle
cmpsb
outsb
stos
clc
mov
inc
rcr
jbe
xor
ffreep
sub
outsb
fidivrs
mov
repz
cmp
loopne
fdivrl
inc
mov
outsb
push
fnsave
lcall
xor
cs
mov
jmp
push
pop
sbb
or
ss
ljmp
sbb
inc
out
add
push
jge
sbb
mov
mov
cwtl
data16
fisubrl
int3
xlat
stos
inc
sar
incb
and
mov
das
frstor
cs
push
or
xlat
xor
fdivrs
push
roll
push
and
cmp
sbb
add
fistps
inc
add
xchg
pop
ljmp
cmovbe
cs
fmuls
dec
sahf
pop
cli
jmp
xchg
push
or
lret
mov
fdivrl
clc
add
inc
sbb
out
fcomp
xchg
in
dec
sahf
les
cwtl
mov
sahf
ljmp
jg
repz
cwtl
enter
bound
es
bound
xchg
xchg
and
addr16
data16
mov
push
out
or
or
cmpsb
sub
repnz
xchg
push
cli
sbb
mov
jle
adc
int3
and
push
add
xchg
or
push
xor
and
das
sarl
dec
cwtl
mov
or
mov
and
test
shll
push
shll
mov
sub
cltd
or
mov
stos
xchg
jmp
xor
cmpsb
hlt
mov
jae
mov
test
mov
mov
scas
outsb
jb
ret
jnp
imul
and
push
mov
push
out
mov
fcmovu
loop
das
rcrl
pop
fcmove
loope
addb
jae
sub
test
ficomps
mov
das
lcall
movsb
jb
push
and
push
scas
mov
push
adc
dec
mov
push
lret
xor
out
push
push
sub
xor
notl
push
xor
jnp
mov
xor
gs
fisubrs
add
push
cmp
pop
pop
push
xchg
cmp
inc
dec
pslld
fisubs
push
jle
add
sbb
lret
mov
enter
repnz
pslld
jb
ljmp
es
jle
jo
jnp
push
roll
adc
and
out
test
out
push
mov
jb
push
xlat
push
sub
inc
push
or
dec
mov
cs
cmpsb
fisttpl
add
mov
mov
roll
or
jle
lods
xchg
into
fidivrs
cmpl
xchg
cmovb
xor
out
call
mov
fs
repnz
jnp
rcll
sbb
push
jbe
xor
stos
int
add
in
out
stc
js
xor
jne
sub
xor
pop
ljmp
or
les
ret
add
adc
std
in
gs
addb
sbb
aad
idivb
sbb
gs
adc
icebp
sbb
aam
sbb
sbb
adc
aad
add
int
adc
inc
outsb
sub
testl
cmc
cmp
in
or
aam
ljmp
cmp
testl
leave
icebp
leave
adc
stos
lret
les
out
jne
jge
dec
add
xor
add
add
mov
test
fiadds
sub
in
xor
mov
push
mov
hlt
push
sbb
sub
sbb
add
scas
add
fdivrl
mov
repnz
daa
fmull
call
push
sbb
mov
mov
cmp
lds
lret
pop
add
popf
cmp
shr
cwtl
lret
xor
imul
rcl
mov
jp
cmp
pop
mov
add
sti
repnz
inc
jb
ret
inc
add
add
add
jp
int3
pop
scas
pop
fsubs
jp
dec
movsl
subb
loop
add
push
andl
pop
shr
xor
mov
or
lret
push
push
push
in
mov
push
pop
xchg
lahf
or
into
jb
or
mov
inc
fildll
call
int3
pop
pop
lahf
ret
or
and
mov
or
stc
and
dec
iret
bnd
xor
inc
add
jo
mov
pop
xchg
jmp
ds
cltd
mov
sbb
in
cmp
sbb
dec
push
movl
push
enter
push
inc
fiaddl
mov
addl
fldt
jnp
push
aam
push
inc
fcoml
js
rolb
fcmovnu
inc
xchg
dec
sbb
ljmp
fildll
out
jp
mov
and
mov
sbb
mov
cmpsb
jp
xchg
rorb
push
dec
int
inc
call
pusha
sbb
add
fbstp
cli
dec
mov
add
mov
and
loope
push
mov
xor
cli
inc
mov
mov
push
ljmp
sbb
mov
les
add
inc
sub
ror
cmp
jno
mov
cs
loopne
out
xlat
or
insl
repnz
adc
inc
jle
sbb
sahf
dec
int
lcall
pop
rorb
cli
xchg
dec
cmp
mov
inc
mov
add
or
mov
sbb
sbb
ret
dec
cmc
sub
jbe
ds
inc
dec
repnz
jp
mov
pop
das
push
jmp
fs
fdivl
jnp
push
sub
sub
jb
cmc
push
mov
or
push
xor
jle
lcall
movsl
push
mov
dec
dec
jp
mov
jg
lret
and
sahf
mov
out
cwtl
cmpsb
push
push
cs
notb
inc
mov
or
orl
repnz
cmp
fbld
je
xchg
call
test
fldt
out
rcrl
or
outsb
push
sbb
fldt
cmp
lods
add
jbe
push
ds
rorl
sub
or
pop
sbb
pop
push
rcr
iret
and
das
ljmp
stos
push
int3
xchg
dec
outsb
push
jle
jnp
mov
pop
xchg
mov
and
pop
lret
fdivrp
pop
xor
mul
ret
subb
fdecstp
xchg
push
ljmp
add
outsb
push
shlb
cmp
push
cli
into
mov
loop
test
stos
cmp
push
es
push
insl
dec
adc
fisubrl
fisubs
pusha
xchg
jl
sbb
sub
repnz
jb
testb
lds
fdivrp
sub
divps
push
and
push
xchg
cwtl
mov
cmp
add
jo
stos
inc
rcrb
sbbl
jb
add
fcmove
stos
arpl
cmpsl
es
clc
ret
push
mov
cmc
cli
mov
rclb
int3
jp
rcr
repnz
xchg
add
xchg
arpl
jbe
sbb
call
je
out
mov
das
inc
push
lcall
or
adc
movsl
rorb
mov
das
lret
sub
sbb
and
mov
pop
sbb
push
or
and
xchg
int
pop
pop
xlat
out
rcrb
nop
loop
inc
dec
xor
bnd
and
and
mov
sbb
add
gs
push
insl
jecxz
inc
mov
sar
inc
jle
or
inc
pop
mov
push
imul
push
cmp
inc
mov
or
jnp
cmpsb
shlb
lods
cwtl
mov
sub
out
or
cli
xchg
xor
pop
and
mov
push
and
mov
push
add
or
cmp
add
jmp
outsb
xor
fidivs
mov
inc
popl
sub
arpl
mov
test
mov
add
repz
mov
mov
test
xor
fmull
rcll
outsb
push
fimuls
dec
jbe
mov
das
xchg
fsubrs
popf
mov
cmp
and
rclb
adc
into
test
mov
dec
sub
or
cvtdq2ps
bound
dec
les
fnstsw
mov
addl
cltd
arpl
lahf
ds
jae
jbe
sbb
sub
loop
inc
mov
cs
mov
lahf
dec
data16
pop
addb
or
lcall
inc
leave
dec
xchg
jge
int3
add
push
ret
sub
push
int3
dec
mov
jnp
dec
call
add
xchg
cmp
mov
div
inc
mov
add
dec
cs
stos
dec
jae
add
imul
lock
mov
push
inc
loop,pn
fsts
out
adc
lret
add
pop
fbstp
and
or
rcll
repnz
stos
or
lcall
or
pop
mov
testb
mov
or
nop
push
adc
data16
cwtl
and
mov
or
jb
push
dec
movb
adc
es
mov
jmp
test
adc
adc
mov
sub
out
imul
push
sub
fistps
popa
dec
cld
stos
inc
push
cmp
ficoms
sahf
or
pop
cwtl
sbb
inc
or
add
sbb
pop
push
push
es
sub
push
sub
cli
repnz
or
stos
cs
ljmp
dec
jp
fists
and
cmp
orl
outsb
cs
cmpsb
mov
push
jp
scas
lcall
lret
cli
push
cwtl
bound
iret
arpl
sub
push
mov
idivb
cs
popf
lret
pop
addr16
fisttpl
scas
aad
fadd
cmpsl
inc
cli
push
ds
mov
inc
mov
cs
push
call
cwtl
push
into
jp
mov
or
push
lds
rorb
fnstsw
outsb
push
dec
imul
insl
inc
dec
sbb
ds
xchg
add
or
push
out
sub
sbb
add
lods
cmp
fisubs
inc
add
fadds
lods
jb
mov
fsts
pop
inc
sarl
cs
mov
cli
fimull
pusha
add
dec
sub
ss
dec
lahf
inc
adc
popa
mov
push
fnstenv
push
cltd
jle
xchg
push
push
outsb
adc
inc
jmp
mov
mov
fwait
sbb
mov
add
push
push
xchg
test
ljmp
inc
call
push
pavgb
cmp
jle
mov
es
mov
lcall
pop
inc
decb
sub
out
ret
add
and
pop
jle
popa
repnz
mov
dec
dec
adc
jp
pop
adc
ljmp
shlb
jae
and
mov
daa
pusha
rcl
data16
ret
inc
jnp
imul
dec
dec
jle
insb
jmp
bound
mov
push
test
xor
rclb
popf
or
add
push
and
and
cmpsb
scas
fdivrs
push
fstl
out
adc
mov
fisttpl
cmpsl
push
popa
or
sbb
sbb
notb
pushf
push
add
mov
mov
movsb
sahf
into
push
mov
mov
push
popf
pop
out
ficomps
mov
scas
rol
pop
add
or
call
mov
cmp
cmp
outsb
dec
dec
popf
mov
loop
popa
mov
inc
add
hlt
inc
lds
jbe
es
push
ss
pop
adc
sub
jae
mov
xchg
sbb
sbb
into
sbb
mov
fsubrs
jb
cmp
stos
add
pop
inc
rolb
lcall
pusha
bound
push
push
fisttps
adc
int3
jb
xorl
lcall
dec
hlt
ficompl
scas
mov
mov
fisubl
push
dec
rolb
jecxz
sbb
imul
out
popa
jmp
inc
push
xor
jbe
sbb
stos
lea
add
mov
push
inc
adc
fs
ja
jb
outsb
out
lahf
jecxz
xor
mov
xchg
lcall
pushf
sbb
sahf
xchg
xor
mov
mov
gs
outsb
mov
inc
stos
push
es
dec
cmp
mov
jae
mov
repnz
mov
ljmp
xor
rorl
mov
inc
lcall
inc
or
inc
movsb
mov
xchg
mov
mov
fstpt
ret
repz
push
xchg
mov
ret
push
call
pop
mov
fidivl
add
rclb
insb
sub
addr16
mov
push
mov
inc
scas
jp
dec
mov
jmp
push
jb
lahf
ret
push
or
add
adc
and
push
repz
adc
push
xchg
pop
add
pop
insl
xor
fucomp
mov
jecxz
outsl
shll
cs
insb
stos
and
push
lock
and
ds
fs
mov
push
push
fidivrs
stos
scas
das
and
shlb
cwtl
and
mov
ret
into
jp
lret
mov
lahf
pop
lcall
outsl
imul
sub
pusha
out
scas
movsl
cwtl
mov
xchg
xor
stos
test
orb
xchg
jle
inc
adc
out
inc
inc
fidivrl
xor
fisttpll
add
inc
pop
jp
mov
mov
testb
ds
out
aam
jp
gs
cs
add
xor
gs
loop
add
or
and
sub
cmp
sbb
lret
or
dec
imul
pop
or
or
jb
push
fadd
pop
sbb
pop
mov
enter
mov
adc
jbe
orl
xlat
inc
sub
inc
mov
into
dec
pop
scas
or
out
jb
and
sbb
push
cmc
daa
orb
cmp
dec
mov
outsl
push
mov
and
or
mov
adc
inc
add
or
and
int3
orb
aas
add
jl
popf
fiadds
shr
ljmp
adc
ljmp
jmp
mov
jb
arpl
mov
or
out
push
in
adc
call
jns
pusha
call
sbb
lea
adc
and
push
dec
push
xchg
lea
xor
dec
out
sbb
add
or
sub
sarl
jns
add
dec
pop
mov
dec
sarl
out
xor
xor
or
sub
xor
stos
or
or
push
inc
mov
lds
or
adc
imull
jns
push
dec
mull
mov
add
push
add
and
cmc
push
out
dec
fiadds
push
dec
inc
nop
repz
or
cmp
xchg
or
xor
out
sbb
js
loop
jno
repz
or
icebp
out
push
or
int3
sti
or
imul
lods
cmp
add
fadds
rcrb
push
sbb
inc
sub
and
sub
and
xlat
loope
add
inc
xor
jmp
or
sub
test
pop
or
xchg
mov
xor
clc
push
insb
cmp
sbb
adc
dec
pop
imul
jnp
mov
or
fwait
stos
mov
pop
pop
lret
push
mov
dec
or
cli
jmp
imul
mov
cltd
pop
outsb
dec
or
test
pop
call
mov
fnstcw
or
dec
sub
lahf
or
fsubrp
scas
mov
lcall
mov
in
cld
cmp
jge
popf
lods
mov
std
sbb
xchg
arpl
lods
mov
sub
sbb
mov
cmp
lret
pop
cmp
and
mov
js
pop
idivb
sti
das
pop
or
or
test
test
cmp
outsl
pop
call
sub
rorb
aam
pop
jle
pop
inc
call
pop
cwtl
inc
mov
popa
or
repz
fs
xor
mov
push
jns
aas
lret
mov
or
incl
or
xchg
fisubl
jmp
rcr
jo
xchg
cmp
addr16
jno
leave
movsl
aam
aad
push
or
lds
or
int
push
outsb
xor
adc
xchg
or
mov
jcxz
imul
xchg
jmp
scas
scas
cmp
gs
and
push
or
adc
or
or
addr16
sub
out
cmp
test
in
jg
push
and
es
pop
or
cmp
sar
mov
int3
loopne
mov
cmpsl
push
add
or
fldcw
inc
jne
lret
cld
cmpsw
push
push
lock
lret
jne
push
ret
jnp
jle
mov
or
fdivrl
leave
dec
shr
pop
or
aaa
sbb
stc
outsb
ds
mov
insl
and
popf
add
bound
xor
mov
inc
loopne
in
or
push
rclb
or
xchg
push
sub
and
add
jg
fs
ja
mov
stos
xchg
push
test
ret
pop
jmp
xor
mov
fdiv
pop
aad
inc
add
xor
xchg
or
sub
hlt
or
cli
push
mov
push
leave
into
jl
or
test
mov
xchg
xor
pop
or
pushf
fstpl
cmp
mov
xor
inc
dec
daa
cmpsb
or
sbb
inc
or
mov
cwtl
cld
out
dec
loop
gs
sbb
mov
or
adc
or
fbld
inc
out
test
mov
adc
jge
or
imul
or
jmp
sti
dec
mov
mov
movsb
mov
jae
or
repz
mov
mov
adc
jbe
imul
clc
adcl
aas
sub
cwtl
or
inc
mov
cs
into
push
or
bound
push
or
scas
dec
or
or
xchg
pop
ficomps
fnstcw
push
pop
cmp
iret
std
xor
or
jge
int
mov
imul
jno
stos
mov
dec
sbb
mov
lock
mov
inc
xor
rclb
and
mov
das
xorb
and
pop
lods
jns
or
lret
outsb
fwait
negb
in
fstl
adc
or
pop
mov
lock
jl
js
rcll
sub
mov
xchg
inc
add
es
in
or
xchg
mov
push
mov
dec
mov
sar
fsub
xchg
out
je
xchg
cmpsl
cld
mov
adcl
inc
popl
push
xor
or
and
cmp
jg
push
fdivs
pushf
adc
std
jge
incl
leave
stc
loopne
pop
pop
push
or
pop
ja
mov
or
xchg
test
popf
adc
xchg
adc
mov
push
test
lret
cmp
mov
and
popf
test
push
fwait
loop
cli
mov
stos
repz
xchg
aaa
cmp
dec
movsb
or
mov
mov
rcr
push
or
mov
mov
shrb
in
cmp
xchg
lock
sbb
or
sbb
mov
and
push
bound
insb
xlat
ja
and
or
aam
test
adc
and
test
xchg
in
xor
pop
popa
fsubr
andnps
or
adcb
mov
popf
test
xor
xchg
or
ja
lds
dec
insl
xor
push
sub
xchg
and
aam
mov
mov
cmp
nop
testb
lods
adc
out
push
aam
repnz
fdiv
popf
mov
adc
outsl
or
in
add
or
jmp
andb
or
dec
mov
mov
shr
out
packuswb
popf
imul
inc
and
pop
imulb
add
addr16
xchg
xorb
xor
mov
lret
out
pop
sub
adc
or
and
or
mov
lea
vmwrite
test
mov
cmp
mov
cmpsl
or
testb
or
jmp
out
dec
or
mov
dec
enter
push
xor
push
adc
or
iret
sub
sbb
jecxz
je
or
push
fwait
push
data16
in
jmp
mov
clc
sub
cmp
adc
push
out
mov
int3
xor
lea
pop
or
imul
fs
loope
das
mov
mov
fimull
push
cmp
incl
aaa
pop
or
insl
jecxz
je
inc
push
stc
or
push
imul
mov
xlat
and
mov
push
xchg
jge
dec
push
fs
jl
mov
or
jmp
loope
add
fnsave
or
lock
ja
mov
arpl
jns
xchg
push
add
sub
adc
iret
xor
test
divl
js
jecxz
mov
push
jmp
mov
je
or
or
fwait
mov
cmpsb
inc
imul
aad
mov
sti
xor
add
dec
mov
or
pop
dec
loopne
xchg
or
cmp
or
jge
pusha
or
ret
nop
es
or
pushf
aaa
mov
sub
add
leave
lock
in
imul
push
out
test
or
or
idiv
xor
mov
push
clc
inc
sub
adc
jmp
into
js
lock
out
mov
scas
or
lds
idiv
rcll
js
mov
in
jne
popl
jno
dec
sub
or
fsub
ror
cmp
dec
or
add
es
dec
jae
xchg
mov
cmp
cld
loop
ss
in
clc
sbb
pop
loope
or
xor
mov
mov
add
mov
lret
push
jg
jnp
push
inc
hlt
frstor
popf
aam
add
dec
or
testb
xchg
xor
incb
add
jle
or
or
cmpsb
xor
or
scas
pushl
xor
pop
add
jns
mull
mov
ja
add
xchg
in
test
clc
jne
sub
push
add
push
jmp
add
jne
or
movsl
sti
hlt
jmp
adc
push
pusha
aad
jns
adc
cs
or
sbb
leave
inc
hlt
mov
in
pop
or
ds
sahf
fwait
std
push
sub
xor
hlt
ss
pop
push
or
cmpsb
les
push
dec
cmpb
jne
fs
and
popa
xchg
cld
out
push
call
jae
lods
or
sbb
stos
ljmp
pop
or
movsl
mov
jne
fsubs
lock
aaa
imul
jnp
dec
mov
mov
scas
cwtl
cmp
jmp
sti
xchg
xor
xor
xor
out
push
mov
cmp
inc
push
fmul
arpl
mov
or
xchg
add
sub
add
xor
push
pop
fcompl
adc
dec
stc
and
xor
or
add
bound
sub
pop
inc
jle
or
push
xor
pop
pop
or
dec
sbb
stos
xchg
nop
push
cmp
push
and
into
aas
cmp
push
sbbl
jp
lret
cmc
inc
or
or
lea
push
mov
inc
add
dec
loop
dec
cs
cmp
adc
cmp
sbb
adc
pop
xchg
in
mov
or
jbe
mov
cmpsb
test
xor
or
mov
popf
or
fs
xchg
jl
lret
or
gs
lock
ja
lcall
sub
cmpsl
pop
nop
push
jle
and
or
insb
jle
sbb
test
pop
pop
bound
sub
or
xor
pop
ss
fldt
bound
movlhps
sbb
add
scas
push
xchg
or
jp
in
or
js
in
and
addr16
push
dec
pop
pop
aas
inc
mov
imul
dec
xor
outsb
mov
jae
idivl
daa
add
add
adc
inc
insl
sub
push
adc
pop
dec
push
xor
ja
sbb
inc
jns
outsl
cmp
or
data16
push
insl
push
clc
add
mov
fidivl
pop
inc
jns
rolb
xor
stos
adc
push
sbb
sbb
js
dec
add
insl
push
and
inc
sbb
dec
rclb
fmuls
and
and
and
insl
dec
mulb
imul
adc
lea
stos
add
sub
jp
inc
nop
xor
inc
xor
jbe
push
test
jbe
add
cltd
cmp
cwtl
xor
icebp
xor
sub
popf
or
push
iret
je
or
push
dec
add
lds
add
ret
lahf
popf
jecxz
xchg
enter
pop
fcmovnu
mov
ja
aam
push
push
bound
jle
add
popf
jp
pop
adc
xchg
and
xchg
dec
mov
adc
push
push
bound
jp
xor
imul
sub
out
fstpt
jecxz
jmp
ffree
or
or
in
mov
mov
pop
aas
inc
cmp
bound
inc
jo
xchg
pop
or
popa
cmp
outsb
sub
ss
sub
pushf
cmp
sbb
mov
xchg
adc
sbb
jecxz
lea
push
inc
pop
aad
loop
arpl
lahf
mov
daa
cmp
es
insb
cmp
inc
jge
shll
mov
outsb
insb
xor
dec
xchg
inc
bound
jp
in
jge
jle
sarl
insl
dec
mov
cmp
js
daa
xlat
dec
or
jae
fidivs
iret
push
sub
stos
fs
dec
cmp
fldenv
sub
dec
outsl
jns
enter
dec
sub
sbb
dec
icebp
mov
jg
lock
aas
in
daa
push
push
cld
rcl
xor
outsl
loope
subb
aaa
cmp
ds
outsl
divb
jg
add
jge
sub
add
pop
das
js
xor
xor
xor
cmp
movsl
push
sub
xchg
pop
xor
push
dec
scas
daa
ds
cmp
adc
bound
push
lea
xor
adc
add
and
jb
outsb
fwait
adc
cmp
outsl
adc
mov
inc
arpl
add
js
xor
sub
pop
aas
mov
mov
fdivrs
arpl
add
outsl
pop
pop
xchg
cmp
call
jg
pop
cmp
sbb
adc
js
push
adc
push
xor
in
bound
push
sbb
mov
add
pop
orl
inc
iret
daa
xor
pop
mov
test
cmp
in
ds
mov
add
outsb
out
push
jae
mov
fimuls
xor
add
dec
aaa
push
xor
pop
stos
es
push
mov
mov
cmpsl
test
xlat
insl
inc
adc
add
repnz
xor
push
roll
imul
jl
mov
stos
in
inc
test
imul
inc
sub
and
outsl
inc
fwait
lea
sti
and
out
xor
lea
add
jp
fisubrs
repz
es
sbb
or
bound
push
push
add
fs
jge
mov
dec
mov
dec
push
push
mov
or
mov
and
stos
add
stos
in
add
scas
add
in
or
push
xchg
add
pop
js
loop
fs
mov
push
mov
call
sbb
into
jno
cmp
stos
arpl
push
call
call
xchg
adc
add
jns
xchg
xor
cmpsb
mov
dec
pop
negb
imul
or
jmp
sbb
or
js,pn
sti
das
dec
or
test
imul
cltd
test
or
leave
fsubr
add
lret
adc
scas
mov
adc
clc
jmp
outsl
jg
lahf
mov
bound
inc
push
bound
xchg
or
repnz
or
arpl
xchg
mov
jecxz
and
inc
push
or
adcb
loopne
rcrl
mov
movl
sahf
lahf
pop
dec
cvtdq2ps
fwait
cmp
dec
movsl
sub
or
js
cmp
ds
or
test
mov
fdivrs
call
cltd
add
dec
adc
clc
mov
leave
and
fldcw
sub
push
adc
xchg
dec
or
repz
pop
shlb
and
push
add
mov
inc
pop
push
sbbb
pop
imul
ret
adc
ficoml
or
xor
aam
xlat
push
mov
xor
mov
cmp
dec
es
or
mov
fistps
lods
data16
loopne
add
fisubl
jecxz
cmp
add
fs
or
push
cli
jmp
sub
lds
xor
adc
das
sub
mov
out
cmp
out
test
loope
repz
clc
xor
sub
jmp
movsb
scas
push
push
lea
shlb
lahf
or
cmp
add
jge
cmp
arpl
repnz
or
int3
jle
out
js
je
int
mov
enter
mov
ds
sbb
js
push
test
xor
roll
jb
or
aas
mov
sbb
adcl
push
rcr
fldenv
test
andb
add
or
ret
mov
add
dec
sub
sbb
or
dec
cli
push
aad
or
mov
shl
pushf
or
int
inc
and
in
jmp
jecxz
sbb
add
ss
aam
cmp
and
pop
loope
adc
adc
std
mov
or
adc
rorb
cltd
test
pusha
or
push
jne
or
adc
push
aaa
and
insl
mov
xchg
mov
movsl
test
mov
scas
sbb
lret
xchg
add
or
xchg
or
sub
or
vcvtss2sd
mov
lcall
sahf
xchg
mov
fisttpl
mov
or
pop
loope
or
std
cmp
lcall
push
scas
sub
shll
in
insl
sub
lds
lret
push
nop
jbe
or
sbb
arpl
push
rcll
or
popa
rorb
and
out
adc
cltd
or
sub
xchg
cmpsb
ret
mov
movsl
insl
cli
cmp
adc
lea
xchg
outsl
or
inc
dec
adc
shl
lcall
xor
std
or
scas
cmpsl
push
or
std
out
insl
lcall
outsb
daa
movsl
xor
jns
adc
sub
testb
or
mov
sbb
adc
into
shlb
int
daa
mov
mov
mov
roll
push
xchg
xchg
or
push
jmp
and
pop
dec
in
inc
sbb
adc
call
add
add
arpl
jne
sahf
fs
or
out
test
shll
push
and
pop
or
adc
mov
push
jecxz
mov
or
leave
sarl
pushf
ss
sbb
cmp
cs
insl
ret
scas
ficoms
mov
xor
add
sub
int3
cli
xchg
push
pop
dec
mov
sbb
mov
sbb
jae
sarb
push
push
rclb
cld
ja
mov
jae
or
mov
push
mov
fs
xor
test
jmp
repz
aad
pop
out
or
xchg
mov
adc
push
imul
outsl
or
push
sbb
lock
pop
in
mov
or
sahf
mov
or
dec
jno
or
dec
fldenv
orb
cs
testb
outsb
or
int
pop
aas
repnz
test
jne
mov
aad
push
jno
loop
mov
pop
mov
cmp
and
sbb
pop
xor
or
push
lds
repz
pop
clc
imul
mov
aad
aas
jecxz
test
jle
cmp
push
adcl
clc
pop
or
mov
test
or
and
adc
iret
adc
nop
mov
xlat
popf
mov
mov
inc
pop
push
addl
mov
ret
or
fdivl
out
push
hlt
push
cmp
popf
mov
and
cmpsl
rol
sbb
or
xchg
out
add
dec
in
loope
or
or
jl
cmp
cld
sub
mov
or
int
or
clc
les
fildl
cmp
adc
or
enter
call
or
dec
mov
lcall
dec
jns
rorb
adc
hlt
pop
clc
xchg
jae
or
lods
mov
das
aam
lahf
out
mov
sub
dec
xor
push
mov
movsl
cs
loop
lods
fisubrs
xor
js
or
maskmovq
testl
test
aas
cwtl
cmp
mov
xchg
lods
movsb
sahf
rorb
add
or
in
fsubrl
stc
out
add
lret
je
into
adc
cmp
pop
sarl
pop
fsubl
or
stos
push
jne
xchg
call
scas
out
xor
mov
sub
cmp
stos
bnd
dec
out
ss
aad
or
int
fs
push
sub
ret
push
fimuls
and
jno
jns
sub
cmpsb
std
sbb
inc
mov
xor
mov
cmp
sti
insb
xor
sub
movsl
pop
sub
arpl
xlat
mov
or
dec
xor
or
sub
xor
add
into
jle
or
sub
es
rcl
mov
sub
das
test
test
pop
or
jo
fidivl
sbb
push
dec
adc
lret
mov
out
cmp
pop
dec
xchg
push
outsb
inc
jp
leave
or
roll
into
mov
mov
data16
std
in
xor
lds
push
imull
cld
pop
cmp
mov
push
lods
inc
mov
push
dec
xor
mov
test
xchg
dec
fidivrl
je
xchg
dec
push
rclb
pop
scas
lcall
call
jg
xchg
mov
imul
test
inc
lret
push
mov
test
mov
jmp
mov
push
xlat
add
cld
dec
out
sub
xchg
jle
add
push
ret
aam
or
dec
loop
xor
in
or
cmp
popa
adc
mov
out
in
movsb
xor
lods
add
subb
push
or
fdiv
and
enter
fimull
stos
add
int
xchg
jo
pop
neg
sub
dec
mov
push
xchg
rorl
mov
mov
adc
cmp
mov
add
inc
mov
dec
cld
or
xchg
emms
stc
and
nop
push
xor
xor
push
or
cmpl
xor
dec
or
outsl
fmuls
cmp
les
hlt
arpl
or
faddl
jno
dec
mov
or
inc
cmp
inc
or
pushf
jns
aas
pusha
jb
mov
lret
xchg
or
mov
mov
cli
ret
or
sbb
sbb
popf
push
dec
mov
into
mov
inc
movsb
jbe
xchg
jge
in
decb
insl
push
xor
fildll
ljmp
and
or
cmp
push
arpl
push
jl
mov
xchg
movsb
push
pop
or
jmp
add
jge
or
jmp
mov
jg
push
divb
push
pop
push
or
lea
out
and
cmp
sbb
jne
std
push
div
out
jle
lret
scas
push
lods
aam
ret
or
jmp
sub
inc
sbb
loop
cmp
arpl
xchg
mov
in
idivb
cmp
or
dec
std
sbb
inc
or
movsl
add
cli
jmp
mov
push
xor
or
fdivl
aas
lds
jne
inc
hlt
push
loopne
or
call
jne
paddb
mov
mov
xor
push
js
push
mov
arpl
jp
leave
sar
xchg
in
lds
shrl
pop
cmpl
fadds
xchg
pop
scas
or
out
jo
jne
add
int
sub
mov
xorb
lods
xchg
aaa
xor
dec
xchg
mov
or
gs
pushf
call
or
test
cli
mov
es
pusha
mov
shr
or
xchg
test
lret
push
adc
sub
or
lcall
insb
cmp
pusha
movsb
xchg
sub
test
imul
xchg
inc
or
cmp
out
rorb
out
add
or
add
or
imul
popa
mov
or
jle
adc
or
dec
std
pop
mov
push
int
jg
cmc
fsubrs
roll
lret
aas
fucomip
sti
rclb
in
insb
or
pushf
insl
push
add
nop
push
push
ror
lret
dec
sub
and
dec
shll
cmpsl
add
fprem
or
daa
in
add
mov
xchg
sbb
mov
jne
pop
pop
mov
sub
outsl
cld
pop
fmuls
jo
xchg
jo
in
or
outsl
dec
xor
stos
cltd
xchg
leave
or
in
iret
push
cltd
xor
jle
sub
dec
sbb
and
in
push
xchg
pushf
push
nop
ret
std
testb
or
mov
mov
rorl
imul
inc
push
mov
add
adc
int3
mov
stos
icebp
cmovl
cli
das
shrl
mov
push
repz
shlb
test
xchg
xor
or
out
in
imul
into
mov
adc
jae
stc
dec
mov
and
adc
ficoms
xor
dec
adcl
jo
or
cmp
inc
test
dec
stos
inc
lcall
jmp
xor
int
test
and
cmp
cs
push
aaa
add
mov
in
mov
pop
mov
std
mov
stc
int
and
or
jne
rorb
push
mov
pop
in
push
push
jmp
push
sbb
and
sub
or
mov
popf
sub
icebp
ja
mov
cli
pop
or
inc
ljmp
mov
and
mov
lcall
adc
xchg
pop
dec
neg
pop
aad
pop
or
mov
xchg
fstpt
or
dec
arpl
nop
daa
adc
std
js
push
push
insl
jae
mov
dec
sbb
fs
jmp
push
sti
push
pop
out
insb
repnz
stos
mulb
mov
cmp
insl
or
aaa
add
es
lds
pop
and
mov
jne
adc
push
leave
push
jnp
inc
xchg
or
scas
lcall
cltd
ss
jae
mull
out
rclb
popa
xchg
mov
push
dec
jg
or
push
call
out
repz
pop
lcall
ja
shl
push
imul
xor
xchg
cmp
dec
push
sti
inc
push
push
inc
or
mov
dec
lock
jo
mov
ss
or
xor
clc
aam
out
loope
or
arpl
mov
in
fwait
lret
add
xor
mov
or
sub
xlat
or
pusha
popa
and
dec
or
iret
popf
inc
es
mov
xor
outsl
xchg
push
or
push
xchg
jno
jle
add
dec
jge
xor
push
jo
aaa
or
add
fidivrl
add
push
push
mov
fadds
lret
pop
sbb
fisubs
push
stc
xor
cmp
sbb
cltd
cmp
and
cmp
insb
or
add
and
js
cs
dec
cmp
push
jge
movb
in
fucomp
adc
jle
in
repz
or
sarb
xchg
fucom
sbb
in
loop
mov
popf
ss
pop
xchg
inc
shlb
xchg
rcl
or
cli
mov
adc
icebp
push
push
clc
or
outsl
divl
insl
dec
rclb
ss
or
nop
pop
mov
or
adc
loopne
es
mov
sub
or
mov
or
fnstenv
inc
mov
xchg
movsl
cmpsl
and
push
ljmp
add
ret
or
xor
cmp
or
es
loope
jbe
jnp
or
cld
sub
orb
pop
test
inc
das
rorb
cli
out
data16
les
push
je
jae
push
add
mov
push
mov
push
mov
pop
mov
cmpsb
movsb
pop
and
mov
xchg
inc
mov
imul
xor
cmp
roll
lret
sub
or
enter
xacquire
or
repz
test
mov
push
push
cli
out
jge
or
imulb
cmpsl
add
jmp
jp
jg
fwait
sbb
in
sub
in
sub
cld
cmp
out
inc
cmp
daa
loop
or
xchg
xor
sub
test
mov
xor
test
dec
or
push
repz
jo
pop
shrb
in
mov
je
dec
push
mov
push
stos
mov
cs
pop
or
out
and
mov
movb
push
in
xor
jl
or
stc
and
mov
inc
or
in
mov
aad
mov
add
gs
sub
into
dec
or
ja
shll
sub
sub
or
jne
sahf
or
push
fistl
in
jmp
mov
add
xchg
js
lret
in
pop
in
jg
rcr
int
dec
mov
leave
mov
or
das
sub
mov
fbld
pop
or
cltd
std
lcall
aam
rol
inc
out
jmp
cmp
repz
jge
nop
cmp
or
es
out
xorl
orl
pop
call
jp
jmp
lret
mov
cld
add
ja
lcall
ret
mov
hlt
into
or
movl
sbb
jns
les
sbb
mov
lock
push
pop
xchg
or
push
mov
enter
fwait
std
xchg
or
xchg
pop
mov
sbb
adc
popf
ds
ffree
pop
ret
or
cmp
sub
aad
or
mov
movsl
push
inc
or
in
xchg
arpl
or
insb
jae
jmp
xor
or
pop
cmp
or
jmp
repnz
inc
popa
jp
shlb
lret
or
in
sub
insl
fmull
push
stc
jne
sbb
adc
push
loope
sub
mov
or
dec
hlt
inc
adc
adc
icebp
dec
mov
jno
xor
stc
cli
push
out
mov
es
fcmovne
adc
cltd
push
mov
stos
xchg
or
sub
lock
xor
and
fadd
push
imulb
ret
lret
xor
mov
ds
mov
adc
xor
icebp
lret
pop
adc
push
les
and
mov
fcoml
popf
negb
ja
loopne
or
jmp
ret
imul
mov
pushl
sbb
stos
dec
mov
dec
xor
dec
out
lods
or
roll
mov
xchg
outsb
lea
jne
inc
testb
cltd
out
popf
cs
dec
dec
push
push
adc
dec
loopne
sbb
lahf
testb
repnz
mov
in
call
or
add
or
bound
adc
jnp
shlb
mov
repz
hlt
jbe
leave
and
test
fsubs
aaa
je
or
ja
or
insl
or
gs
xchg
data16
sbb
jp
test
xchg
push
clc
xchg
mov
addr16
outsb
jo
fs
cs
orl
insb
es
inc
or
rorl
cmpsb
aaa
inc
hlt
pop
push
or
sub
arpl
sbb
push
out
js
or
stc
inc
add
sub
jo
xchg
or
lahf
xchg
mov
push
cmp
xor
sub
addb
mov
aaa
mov
ljmp
js
mov
insb
lret
cli
pushf
xor
or
adc
sub
fmuls
pusha
xor
cmp
insl
push
or
icebp
shll
aaa
push
lcall
push
fs
or
dec
rcrl
scas
push
or
add
xor
aaa
pusha
cmp
jnp
pop
or
test
push
or
mov
push
pop
stos
inc
repz
gs
inc
mov
adcl
cmpsl
ret
add
inc
dec
xchg
ss
xchg
aaa
add
loope
mov
gs
jge
out
mov
cld
std
bound
jo
or
out
mov
push
or
rorb
cmpsl
xchg
add
push
popa
push
add
or
cmp
popf
add
pushf
jae
outsl
push
aad
mov
adc
xchg
xchg
dec
xor
jge
std
add
or
add
inc
push
mov
enter
ljmp
xchg
xor
out
ljmp
fstpl
addl
dec
sbb
or
add
mov
sbb
mov
add
sbb
or
mov
mov
cmpsl
or
call
pop
nop
and
mov
add
xchg
and
dec
jno
arpl
lock
sbb
xchg
arpl
cs
std
add
ss
xor
mov
or
mov
jp
dec
xor
sbb
sub
fwait
into
outsl
inc
xor
arpl
xor
repz
pop
fsubr
cmp
or
mov
or
pop
sub
pop
sub
hlt
sub
mov
mov
cmp
stc
xor
hlt
or
xorb
cli
mov
test
ss
add
sbb
mov
addl
imul
sbb
fwait
adc
cmp
push
add
into
dec
sbb
add
cmp
or
mov
adc
push
pop
cmp
mov
jo
and
pop
or
jecxz
xchg
fs
or
mov
xchg
lock
std
and
or
pop
icebp
xchg
sbb
push
cmp
add
cmp
or
cld
ret
and
call
je
push
add
xlat
cmp
js
cmp
outsb
sbb
pop
or
ds
push
mov
and
lock
cltd
or
jns
gs
xor
mov
or
or
jp
sbb
inc
add
dec
inc
push
cltd
adc
cmp
adc
xor
and
adc
into
in
fadds
xor
and
out
ja
jle
push
inc
bound
pop
xchg
bound
and
jle
mov
ja
push
rclb
jle
aas
out
and
fistpll
adc
dec
jge
add
in
sbb
ret
cs
js
mov
fisttpll
and
cwtl
and
out
jne
lcall
out
test
repnz
add
sbb
cmpb
xchg
sub
or
addb
sub
jb
or
pop
loope
xchg
xor
adc
mov
jns
mov
pop
lock
mov
jns
js
clc
push
movsb
shlb
bound
add
and
scas
adc
test
out
shlb
inc
test
popa
jecxz
shlb
xchg
adc
js
popf
mov
mov
ret
repnz
lret
add
cwtl
push
imul
push
xor
das
stos
mov
aaa
scas
es
push
rol
out
out
lds
cwtl
mov
daa
movnti
jp
push
leave
in
ljmp
cmp
pushf
into
dec
adc
or
cmp
sbb
pop
pop
jo
sbb
dec
adc
enter
mov
pop
in
and
adc
push
outsb
aad
dec
outsl
jb
cmpsl
jns
adc
lahf
push
xchg
xor
push
fdivl
jle
daa
inc
dec
xorb
pop
sub
sbb
sbbb
or
inc
jge
dec
roll
pop
push
dec
pop
add
sbb
mov
addl
adc
and
sub
outsb
adc
aaa
les
movsb
sbb
or
cmp
cmpsl
adc
cmovs
add
mov
data16
or
daa
xor
adc
dec
sahf
add
pop
ret
sbb
sahf
rcr
push
std
add
popa
jns
sahf
pop
push
enter
test
out
or
or
repz
cli
stos
sbbb
idivl
fwait
outsb
fdivl
mov
lock
dec
pop
jne
push
cmc
fwait
pop
in
popa
adc
xchg
int3
push
push
mov
xchg
or
lret
add
sbb
add
jb
add
push
out
leave
rcll
pop
sbb
xchg
mov
xor
addr16
add
sbb
imul
es
mov
xchg
xor
pop
sub
push
lods
xchg
jno
and
decl
addb
xchg
adc
or
inc
cwtl
sub
jle
mov
pop
and
push
add
insb
pop
or
xchg
or
adc
in
decl
int
push
sub
insl
cwtl
xchg
push
add
in
cs
pop
hlt
or
mov
or
add
xchg
sbb
fidivrl
movb
scas
imul
and
adc
cmpsb
inc
push
stos
cmpl
push
or
sub
cs
pop
push
loope
pop
sub
mov
inc
inc
sub
pop
loope
adc
sub
adc
sbb
mov
cmp
leave
bound
adc
xchg
rcrb
dec
mov
inc
dec
mov
xlat
cmp
mov
add
push
cmp
inc
pop
roll
push
jp
jnp
data16
dec
mov
xchg
icebp
sbb
ljmp
dec
or
add
pop
xchg
sub
mov
cmc
stos
jb
bound
jg
dec
pop
dec
sub
int
jp
mov
hlt
xchg
pop
outsb
mov
out
bound
mov
xor
mov
sub
cmc
xor
inc
cmpsb
mov
sbb
outsl
or
mull
adc
sub
decb
mov
pop
in
push
cmp
cmp
cmp
sub
js
inc
pushf
xlat
mov
jp
es
add
add
and
add
gs
sahf
lret
jae
adc
and
ret
dec
xorl
clc
sbbb
das
push
jl
dec
ljmp
int
push
xor
dec
xchg
dec
xchg
xor
sbb
pushf
xchg
jle
cmp
imul
xor
test
mov
test
push
scas
flds
nop
mov
aam
push
inc
fcmovu
push
push
movsb
or
nopl
cmp
push
inc
add
mov
cmp
inc
adc
fimuls
xor
enter
pop
sub
push
xorl
push
push
add
mov
mov
dec
idivb
sbb
int3
pop
cld
pop
and
cmp
cmpsb
cmp
js
outsl
and
sbb
bound
or
mov
ret
fwait
pop
sub
inc
outsb
xchg
ret
add
out
cwtl
cmp
mov
push
sub
mov
jle
cmp
add
adc
cmp
sahf
call
scas
outsl
sbb
mov
insb
fs
mov
sbb
cmp
cmp
mov
cmp
push
inc
lea
dec
xor
sbb
cmp
push
push
adc
add
jecxz
out
insl
mov
or
out
push
mov
and
das
push
enter
outsl
bound
test
push
sub
inc
out
jp
pusha
ljmp
sbb
inc
cld
aas
sbb
lds
movsl
sub
lret
push
xchg
pop
jnp
out
orl
mov
xchg
mov
test
cmp
loope
insb
mov
popa
stos
mov
loop
fisubs
mov
lret
ficompl
fisubrs
jp
sarb
push
adc
adc
and
test
ljmp
dec
jb
cli
mov
mov
push
ljmp
das
push
xchg
push
mov
les
cmp
mov
ss
dec
bound
es
mov
stos
dec
sbb
or
mov
jmp
cmp
mov
or
imul
mov
pop
cmp
pop
aas
adc
pop
xchg
xchg
sahf
push
cmp
dec
xchg
adc
xor
jns
pop
sub
dec
jg
xor
mov
fcompl
sub
sbb
mov
repnz
aam
push
out
xadd
roll
loopne
ret
faddl
mov
xchg
xorb
xor
pop
loope
dec
sub
sub
jecxz
push
gs
and
fmul
daa
dec
xchg
negl
xor
push
hlt
xchg
cmp
sbb
sbb
jnp
mov
push
and
push
cs
xchg
or
stos
sub
dec
cmp
shll
push
out
adc
push
sti
data16
das
add
xchg
fiaddl
add
inc
addl
cmp
xchg
and
sbb
in
cs
or
or
jns
mov
hlt
add
push
xor
sbb
test
pop
cmp
cmp
insb
ja
sbb
incl
cs
sahf
rorb
icebp
cmp
js
sub
inc
add
push
mov
pop
jl
sbb
adc
xor
mov
adc
inc
aas
lret
pusha
or
push
mov
mov
sbb
inc
inc
sbb
push
and
or
adc
scas
jmp
push
in
in
icebp
mov
sub
pop
test
loop
xor
hlt
cli
test
imul
mov
dec
insl
adc
outsb
notl
push
jp
mov
test
xchg
sub
jo
insl
or
mull
punpcklwd
and
dec
sbb
imul
hlt
imulb
add
mov
ficompl
scas
ja
sub
add
inc
addr16
xor
stc
xchg
mov
outsb
adc
inc
inc
cs
sbb
cld
sbb
test
jbe
outsb
add
adc
add
sbb
and
or
out
push
les
sbb
sbb
dec
sbb
and
add
push
adc
adc
ds
stos
popa
add
outsb
adc
mov
cmp
mov
jmp
out
push
pop
cmpsl
dec
ds
sbb
xchg
push
lcall
add
gs
bswap
sbb
inc
xchg
or
cwtl
jl
xor
sub
inc
cs
mov
xor
dec
pop
adc
out
jp
mulb
pop
cmpsl
rorb
add
and
xor
jge
andb
add
into
adc
adc
lcall
hlt
push
shr
sbb
test
add
aaa
data16
cs
popf
add
pop
xor
popa
gs
pop
or
pop
scas
sbb
add
xchg
cmp
cmp
lea
mov
adc
sahf
sub
ds
or
inc
xor
sbb
sub
dec
adc
mov
xchg
andb
arpl
adc
adc
sub
jbe
adc
sub
sarb
roll
rolb
push
sbb
xor
leave
xchg
ljmp
or
es
push
mov
adc
aas
push
popa
cs
rclb
push
cmp
insb
inc
and
fcmovb
das
out
xor
pushaw
xor
pop
fwait
shlb
inc
and
sbb
jmp
lods
mov
push
mov
jnp
or
mov
addr16
dec
push
pop
cmp
mov
jmp
xor
rcll
jg
push
pop
cwtl
and
lret
fistpll
or
dec
icebp
push
pop
lret
add
cmp
or
jb
push
mov
lahf
into
add
and
notl
add
inc
add
cwtl
int
push
outsb
or
sub
xchg
jmp
sub
inc
pop
push
addb
nop
xor
sub
xor
mov
pop
push
cmpsb
in
js
mov
fiaddl
push
push
adc
inc
xor
mov
ret
dec
enter
test
jae
test
je
sbb
dec
pop
lea
cmpb
lea
mov
dec
push
jp
sbb
xchg
mov
jle
cmp
add
outsb
mov
jns
sahf
or
fsubrs
push
sahf
jle
fisubrs
sahf
sbb
mov
sarl
int
ja
inc
push
and
pop
cmp
push
in
arpl
int
mov
cs
add
cs
dec
decl
sub
sti
adc
hlt
or
and
push
push
sub
and
dec
mov
into
hlt
pop
push
imul
push
hlt
cmc
xchg
or
push
sti
mov
pop
scas
sbb
add
adc
mov
rcll
sbb
sti
jp
scas
add
cmp
push
dec
xor
test
cs
cltd
and
adc
or
jnp
or
std
add
pop
dec
xchg
lcall
loope
jae
mov
in
sub
ljmp
sbb
test
cmp
or
out
sbb
add
mov
and
in
mov
ss
cmpsl
add
cmp
dec
or
dec
push
sbb
das
fcompl
push
or
push
mov
inc
push
sahf
xchg
cmp
jp
mov
pop
call
dec
or
pop
jbe
outsb
call
sub
sbb
into
sub
mov
dec
dec
je
mov
into
nop
not
mov
and
cmp
cs
cwtl
in
push
orb
sbb
fiaddl
add
pop
jecxz
and
add
jns
cltd
jns,pn
ljmp
in
lock
cmp
sbb
pop
call
or
mov
cld
sub
sub
add
cld
lods
adc
movsb
jnp
sbb
rcll
or
pop
movsb
xor
pop
dec
aaa
hlt
test
mov
and
cltd
hlt
inc
ja
cwtl
shrb
add
xor
mov
inc
ljmp
mov
sbb
jno
repnz
and
bound
xchg
rcrb
ret
mov
sbb
cwtl
add
imul
inc
jo
adc
adc
or
or
add
or
lds
push
andb
push
pop
popa
nop
jmp
jb
and
incl
mov
icebp
cmpsb
pop
daa
add
xor
cmp
cmp
sub
inc
mov
lahf
xor
movsb
cltd
cmpl
and
bound
fisubrl
scas
dec
insl
leave
xor
mov
arpl
jecxz
push
cs
mov
push
or
or
or
sub
movsbl
cli
icebp
shlb
andb
shl
cmovbe
sahf
dec
push
inc
push
stos
icebp
ret
fwait
mov
adc
mov
and
sbb
push
or
push
sbb
fimuls
push
sub
js
cmp
inc
adc
sub
dec
sahf
and
inc
movsb
insl
call
xor
in
adcb
mov
sbb
xor
ljmp
pushf
lahf
cmpsl
test
push
sub
cmp
dec
sbb
cmp
sbb
dec
jge
pop
fwait
push
adc
pop
outsw
clc
cmp
lcall
mov
cmpsb
aas
outsl
cmp
shrb
push
dec
bound
outsl
mov
jae
add
xor
orb
xor
or
out
add
xor
shrb
xor
insb
data16
adc
inc
push
inc
or
jp
sub
adc
push
dec
push
xor
push
ret
add
bound
sub
dec
sub
mov
push
cmp
lods
in
stos
add
inc
sub
inc
sub
outsb
dec
xchg
push
xor
cli
push
hlt
sub
xor
pop
push
sub
xor
es
inc
out
icebp
mov
or
mov
lcall
lds
js
pop
outsb
fsubs
sub
xchg
mov
mov
sbb
rcll
push
push
xchg
lret
push
inc
addr16
out
in
mov
mov
daa
push
pop
xchg
das
pop
dec
inc
cmp
xor
push
pusha
sub
dec
cli
push
cld
cli
mov
sub
daa
push
push
inc
push
andnps
push
aam
inc
push
lea
lods
insb
jae
add
insl
xchg
out
sub
lea
sbbl
cld
jb
aam
outsl
cs
mov
sahf
xorb
and
adc
cmp
push
cmp
stos
orl
int
pushf
mov
aam
sub
push
dec
or
fildll
dec
clc
mov
mov
push
xchg
adc
jp
lea
stos
out
cmpsl
sbb
xor
pop
push
scas
mov
and
add
jl
mov
dec
jle
and
push
movsb
dec
icebp
dec
xor
sub
push
sub
mov
into
mov
loop
mov
inc
dec
add
stc
or
fbld
lods
push
bound
hlt
test
inc
sbb
push
pushf
xchg
test
mov
imul
or
jle
cmp
sbb
or
and
sbb
dec
and
arpl
push
mov
pusha
ret
dec
xor
dec
sub
push
fcompl
scas
lods
insl
dec
sub
fisttpl
adc
cmp
adc
outsb
and
adc
adc
lock
es
lods
call
jle
ret
ds
out
sub
test
xor
arpl
hlt
cs
or
inc
cmp
adc
dec
popf
xchg
into
jp
push
inc
xchg
into
inc
sub
clc
daa
aaa
cmp
lods
adc
sub
getsec
ds
lock
repz
scas
shll
cmpsb
clc
dec
jg
inc
out
push
scas
movsl
in
mov
push
out
mov
sbb
dec
lods
add
add
mov
pop
or
push
lea
or
and
scas
add
cs
push
mov
mov
ret
loopne
repnz
sti
popf
add
mov
cmp
es
pop
imul
dec
sub
imul
repnz
test
pop
xchg
pop
jp
push
imul
add
in
dec
pop
ljmp
stos
add
mov
sbb
dec
add
inc
mov
dec
cs
sub
sti
clc
add
lcall
xor
dec
jle
pop
and
mov
sub
sub
mov
dec
pop
jge
sbb
aam
outsb
mov
dec
inc
into
imul
mov
dec
push
scas
lcall
sbb
xor
in
and
or
jnp
pop
inc
xchg
jg
pop
jns
pusha
je
js
cs
fbstp
jmp
sbb
std
mov
or
xchg
xchg
pop
mov
ss
jo
xchg
mov
add
jle
sbb
xor
incl
sbb
fidivl
rclb
movsb
int
or
push
xchg
mov
pushw
mov
inc
and
xor
and
cmp
push
iret
test
cmp
and
xor
xor
adc
loope
stos
mov
jae
or
and
mov
testb
dec
rorb
cmp
cmp
push
ret
inc
test
pop
mov
and
into
or
int3
lret
dec
ficoms
and
adc
sbb
outsb
jecxz
js
movsl
mov
subl
mov
pop
int3
push
jns
jp
sbb
add
and
lcall
push
xor
pop
lock
cmp
leave
adc
stos
out
sbb
sbb
push
ja
xchg
orl
outsb
mov
dec
pushl
cwtl
xlat
jmp
stc
les
fmuls
cmp
stos
out
cltd
inc
push
push
je
call
lret
push
fistpl
mov
iret
push
push
rorl
cmpsb
cmp
xchg
fimuls
cmpsb
fmull
fnsave
les
inc
or
or
sbb
loopne
jnp
loopne
xchg
or
into
repz
dec
test
mov
adc
or
push
sub
aaa
ret
xchg
cwtl
push
pop
dec
cld
lods
push
ret
bound
imul
push
orb
jle
mov
jb
mov
push
lods
ljmp
adc
or
jp
mov
inc
jns
leave
dec
adc
dec
sub
jbe
adc
mov
sub
lods
dec
js
mov
and
shll
adc
inc
add
repnz
stos
dec
dec
add
and
push
sbb
repnz
pusha
jp
enter
add
xor
cmc
jge
jbe
push
dec
xor
popl
sub
push
jbe,pt
addr16
sub
xor
push
cwtl
add
mov
add
mov
push
cwtl
add
add
pop
orb
push
inc
and
cmpsb
mov
outsl
push
push
adc
jns
xchg
scas
stos
mov
in
lahf
int
mov
xchg
pop
addl
mov
dec
push
adc
cmp
jg
into
adc
stos
push
push
jle
add
stos
hlt
push
pop
and
fldl
bound
cmp
mov
ds
out
push
mov
adc
xchg
mov
push
pop
xor
out
pop
jle
jno
in
add
jle
mov
lea
fiadds
dec
cs
mov
or
es
push
lahf
loop
sub
aas
scas
push
mov
xlat
cs
xor
xor
add
mov
test
rcrl
xchg
cli
mov
xor
inc
rolb
push
push
es
sbb
sbb
dec
int
repz
fs
and
cs
int
push
adc
add
sub
adc
ss
inc
xor
shr
inc
movsb
push
or
enter
es
push
xor
mov
fs
lcall
pop
adc
adc
add
pop
adc
es
ret
stos
je
push
in
or
ljmp
imul
ljmp
mov
into
adc
call
popf
xor
adc
jmp
pop
add
dec
jmp
mov
pop
or
pop
add
mov
loope
sti
xor
bound
push
cmp
push
pop
dec
adc
cmp
adc
call
mov
lea
and
cmp
hlt
jnp
into
sbb
es
or
sarb
popf
push
add
push
xchg
rorb
or
addr16
inc
je
adc
jnp
sub
sub
mov
mov
movsb
adc
dec
idivb
sti
mov
aad
dec
out
sbb
cmp
cmp
push
mov
xor
xchg
add
das
roll
shll
jg
cmp
mov
shrl
sub
inc
sbb
rcll
dec
or
and
xor
sbb
sbb
jl
daa
stos
cltd
xor
out
lods
shlb
insl
jle
xchg
dec
stc
pop
ljmp
cmp
ret
ss
sahf
push
aad
dec
je
aas
inc
scas
dec
sbb
push
test
inc
aas
into
mov
repnz
sub
jo
xor
jb
ficompl
dec
mov
push
in
xor
daa
aaa
jb
push
fsubs
and
push
in
repnz
and
cli
into
cmp
sbb
sbb
sub
inc
sbb
mov
pop
add
or
repnz
shrb
sbb
lcall
xchg
xchg
cmp
sub
xchg
lcall
inc
cwtl
dec
xchg
push
scas
mov
inc
dec
jle
fdivs
es
fcmovbe
mov
xor
sbb
lods
xchg
test
test
arpl
sbb
jg
push
push
out
ret
pop
mov
mov
pop
adc
mov
aas
add
and
xchg
dec
cli
lds
xlat
movsb
aaa
push
push
fidivrs
mov
pusha
into
sub
fisttps
or
mov
add
adc
sti
or
mov
push
repnz
iret
xchg
repz
mov
fdivs
lahf
xchg
pop
cmp
data16
movsl
push
add
cmp
mov
and
cs
pushl
stos
xchg
arpl
stos
push
pop
add
pop
xchg
cmp
and
jb
add
stc
mov
jbe
jns
add
aaa
aam
insl
aas
jecxz
call
pop
fwait
sub
sub
sub
movsl
xlat
out
cs
mov
not
xor
push
or
and
stos
or
leave
imull
inc
and
and
add
xchg
sbb
and
jb
fwait
inc
mov
roll
mov
xchg
mov
nop
cmpsb
adc
sbbb
dec
repnz
pop
fimuls
repnz
push
jg
sub
call
fwait
dec
mov
inc
push
stc
lcall
shlb
mov
scas
leave
aas
cmpb
add
adc
cmpsb
cmpl
ss
push
xchg
ficoml
pop
sbb
lahf
push
lea
xchg
pop
and
ss
in
ret
pop
clc
dec
sbb
inc
and
sbb
mov
sub
push
ret
sbb
cld
adc
pop
jbe
sub
jbe
sub
fwait
xor
push
adc
mov
pop
or
cltd
shll
stos
outsb
inc
ljmp
sbb
sbb
mov
mov
cmpsl
sub
dec
jae
lcall
les
sbb
pop
inc
jae
daa
into
cs
cmp
es
data16
xor
gs
push
scas
sbb
insl
xchg
sub
push
test
mov
inc
fildll
lds
push
cmp
inc
xchg
popf
and
or
cmp
adc
sbb
scas
scas
dec
or
test
cmp
repnz
jae
mov
xchg
add
pop
mov
fisubs
gs
into
pop
sub
or
jge
inc
push
sbb
pop
pop
sbb
stos
sbb
pop
lret
cmp
pop
sbb
and
dec
out
pop
sub
pop
sbb
ret
dec
dec
ret
jb
aaa
push
dec
sbb
aaa
xchg
and
jl
dec
nop
sub
inc
sbb
pop
sub
bound
and
cmp
jle
enter
xor
mull
pop
pop
dec
xchg
outsl
pop
leave
fisubrs
repnz
inc
xlat
push
add
je
shlb
pop
cmp
inc
popl
fidivrs
in
push
mov
fstpt
aas
sub
popa
inc
iret
push
jmp
add
sbb
adc
incb
push
push
ficoms
adc
popa
sbb
mov
sbb
xchg
add
leave
pop
sbb
push
adc
int3
push
push
mov
fldenv
ss
adc
outsl
sub
push
pusha
pop
sbb
fldenv
stc
fstps
adc
jmp
jge
add
out
mov
movsl
and
mov
aam
adcb
mov
sbb
scas
mov
pop
test
pop
mov
int
out
dec
and
scas
lcall
push
mov
testb
hlt
nop
data16
fdivrp
push
cmpsb
rcrb
push
xorl
insb
aas
test
js
ljmp
pop
fadds
data16
lahf
adc
sbb
xchg
lret
repz
fistpll
or
xchg
push
jle
divl
pop
xor
jb
inc
cmp
add
jle
cmpsl
xchg
ret
cmp
add
fwait
and
cs
sub
adcl
push
and
add
and
sbb
xor
add
sbb
fwait
push
sub
pop
or
jecxz
leave
ret
xchg
cmpl
rolb
push
loop
jmp
or
shlb
sti
sbb
jb
or
in
xchg
adc
pop
fwait
add
pop
dec
add
xorl
and
cmp
sub
sbb
xor
add
push
xorl
add
insb
int
push
add
movl
cmpsl
subl
cmp
popa
sub
dec
push
or
push
dec
xchg
jecxz,pt
inc
push
mov
or
adc
aad
push
mov
mov
sbb
push
sbbb
bound
hlt
mov
sbb
sahf
sbb
xchg
imul
and
out
push
xor
xor
pop
dec
push
mov
xor
jecxz
sub
das
aaa
movsl
lcall
int3
inc
xor
adc
or
dec
das
push
or
leave
lret
orl
repnz
or
cs
push
je
mov
and
add
xchg
inc
or
fisubrl
cmc
in
or
xor
add
btc
sbb
mov
stc
push
mov
lea
mov
call
jmp
movb
movl
mov
call
add
dec
outsl
popa
fs
imul
add
jmp
push
lea
jae
pusha
lea
jne
pushf
stos
movw
movw
lea
jmp
pushf
dec
not
mov
jmp
mov
lea
jae
pusha
push
bt
clc
xor
pushf
lea
call
jmp
pushf
movl
movl
pusha
pushl
popl
pushf
pusha
pushl
movb
pushl
ret
pusha
stos
push
movb
lea
jmp
push
inc
pusha
setno
setne
mov
movb
jmp
adcb
sub
leave
mov
mov
fs
js
shrb
addr16
pop
mov
cmpsb
stc
mov
dec
lret
pop
pop
mov
scas
xchg
out
sub
js
stc
mov
dec
or
jl
jp
sbb
cmpsl
add
add
add
cwtl
mov
sbb
xchg
int3
dec
loopne
jns
int3
cmpsl
insl
fcomp
cld
jmp
clc
mov
popa
pop
ja
pop
cmp
push
push
out
and
mov
cmp
cld
inc
push
push
or
testb
test
aam
les
dec
aas
ss
push
shrl
and
mov
notl
pushf
cmp
jmp
pushf
pushf
lea
jae
pushf
mov
pushl
lea
jne
push
stos
pushf
pusha
lea
jmp
pushf
pushl
lea
ja
clc
pushf
test
jmp
cmc
mov
push
in
js
in
xor
outsl
rolb
pop
push
mov
or
lock
add
jge
dec
lods
cmp
test
insl
or
sub
lcall
imul
adc
inc
popf
inc
shl
fs
mov
xchg
in
pop
xor
std
mov
mov
xor
adc
test
jne
adc
push
sub
mov
call
mov
movzbw
pushf
mov
bswap
mov
pushf
mov
pop
mov
mov
pushf
pushl
ret
cmc
test
lea
jle
pushf
mov
lea
je
stc
stc
clc
sub
pushf
clc
clc
movl
cmp
pushl
pusha
lea
ja
clc
pushf
clc
lea
ja
imul
pusha
add
pusha
lea
jmp
mov
mov
lea
push
lea
call
jmp
stc
stc
jmp
lea
jne
bswap
mov
pushf
push
lea
jmp
movl
pusha
pushf
adc
pushf
lea
call
pusha
call
push
movl
push
pushf
pushf
push
movl
pusha
push
push
lea
jmp
clc
mov
cmp
jmp
pusha
lea
jne
clc
mov
pushf
add
pushf
movzwl
pushf
push
mov
test
call
pushf
pushf
call
stc
mov
not
cmp
call
call
call
call
stc
sub
xor
inc
lea
jae
push
dec
mov
not
not
pushf
dec
dec
not
not
not
not
setae
call
jmp
jmp
call
mov
js
js
dec
sub
sbb
xchg
mov
gs
mov
int3
sbb
sbb
mov
add
push
mov
test
out
fcoms
sub
scas
dec
call
movsl
aas
xor
dec
sahf
call
loop
mov
lret
lods
or
and
inc
out
xchg
loop
mov
pushf
call
pushf
lea
je
cmp
cmc
jmp
neg
pusha
inc
mov
test
test
cmp
test
pusha
lea
je
clc
lea
or
xor
add
rcr
call
pusha
stos
pusha
pushl
push
lea
jmp
pushf
push
lea
jb
pushf
pushl
ret
seta
not
push
dec
push
pushf
jmp
jmp
lea
ja
call
clc
or
movl
lea
je
stc
clc
call
pushf
pusha
lea
je
jmp
movb
dec
mov
movb
movb
movw
not
call
sbb
js
das
jl
fsubrs
inc
imul
adc
xor
jge
pusha
xchg
cmp
dec
and
sti
xchg
jecxz
and
adc
or
int3
cmp
pop
push
or
or
pop
inc
xlat
andps
mov
repz
insb
dec
jne
pop
push
in
cli
fistpll
sbb
fs
mov
adc
mov
mov
inc
rcr
dec
push
and
dec
inc
je
call
xchg
lods
leave
mov
stos
aas
push
fcoml
xor
call
mov
jmp
stos
movl
lea
jmp
pushf
inc
pusha
jmp
mov
xlat
adc
js
xchg
rcll
es
int
jne
mov
loop
jg
mov
stos
sub
mov
enter
mov
xor
cmp
mov
hlt
inc
push
dec
rorl
dec
insl
cmpsb
fisttpll
adc
ss
add
divb
mov
and
clc
in
in
push
xor
add
xchg
sbb
out
movsl
dec
call
cmc
clc
pusha
cmpb
push
call
mov
call
call
dec
not
pushf
dec
dec
mov
mov
not
mov
dec
pusha
seta
not
not
pusha
stos
pushf
mov
pushf
lea
call
pushf
jmp
movb
pushf
lea
jne
pusha
lahf
pusha
movb
setl
cwtl
movsbw
mov
not
lea
mov
lea
jmp
push
mov
pushl
lea
jb
call
lods
cmp
bt
bt
stc
xor
call
mov
call
movl
mov
movsbw
call
push
add
call
data16
js
popa
push
add
test
cmp
jl
stos
dec
mov
add
nop
cltd
jge
jge
push
push
sahf
mov
jecxz
pop
xlat
js
push
addb
mov
mov
pop
push
and
aas
ja
sbb
mov
jmp
lea
je
sets
mov
add
rol
mov
mov
stc
push
mov
add
cmc
stc
bt
movw
mov
sbb
shl
clc
mov
movb
test
cmp
pusha
movw
pushf
lea
jbe
add
bsf
xadd
mov
rcr
or
add
shld
mov
call
cmp
call
test
push
mov
clc
test
pusha
pusha
call
jmp
insl
out
push
out
mov
sbb
jns
cwtl
out
dec
out
fstps
outsb
outsl
out
fnstcw
scas
push
out
jns
outsl
out
cmp
jns
push
out
cwtl
cmp
outsb
mov
dec
out
mov
out
pop
jmp
cli
add
add
push
stc
incl
not
not
movzbl
movzbw
lea
movsbw
not
setl
pushf
mov
call
call
addl
mov
scas
out
xchg
std
rcl
inc
xor
cmp
ds
movb
stc
mov
loopne
mov
sub
ficomps
mov
ficompl
mov
add
mov
lea
pushf
lea
js
pusha
mov
movl
call
sub
bsr
inc
call
cmp
and
in
js
xor
jns
pop
pop
stc
mov
sbb
ret
imul
cmpsl
xchg
imul
xlat
mov
cmp
push
xor
adc
scas
adc
insl
push
arpl
or
mov
fcmove
ljmp
pop
push
sub
add
jmp
jo
outsb
in
js
or
lods
jecxz
lahf
lock
nop
subl
in
punpckhdq
clc
rcr
fsubrp
mov
adc
shll
insb
adc
xlat
rorb
xchg
std
nop
push
mov
icebp
movsb
popf
adc
cltd
test
push
fnstsw
push
sarb
sub
adc
inc
and
mov
or
or
push
call
lods
and
outsb
in
js
rcll
lret
lea
rcll
mov
sub
out
fs
loopne
mov
out
xchg
mov
rcpps
mov
fstpl
clc
out
lock
mov
repz
scas
aas
fstpt
cltd
js
test
frstor
sbb
cli
cmp
jb
ds
push
add
leave
loopne
hlt
loope
mov
xor
lock
std
std
mov
xchg
outsb
pop
mov
ret
jl
xchg
int3
sarl
mov
pop
ljmp
mov
jo
in
pop
dec
inc
lds
aam
pop
movb
adc
test
and
in
negb
mov
out
sub
push
xchg
mov
fwait
ds
or
jbe
enter
rorb
inc
cld
call
push
pusha
pushf
movl
mov
pushf
pushf
pushl
ret
pusha
clc
clc
call
pushl
jmp
pusha
movb
pusha
lea
jae
xor
pushf
mov
sub
bts
add
mov
btc
ror
mov
mov
sub
clc
push
repnz
movb
lea
jne
bt
mov
movzbw
mov
cmc
sub
clc
shrd
mov
clc
sub
jmp
pushf
lea
jae
clc
cmc
cmp
xor
push
call
lea
jb
jmp
movl
pushf
pushl
popl
push
pushf
push
pushl
ret
clc
call
pop
bsr
rcl
mov
cmc
add
push
cmp
clc
mov
clc
pushf
clc
clc
test
mov
movw
mov
jmp
or
jmp
pushf
pushf
pushf
lea
jae
call
jmp
pushf
bsf
add
mov
stc
pusha
test
and
call
call
jnp
outsl
insl
in
js
dec
pop
adc
mov
cltd
clc
xchg
aas
icebp
ja
xchg
mov
clc
sarl
cmp
lret
sub
dec
xchg
negl
pop
ss
cmp
out
outsl
dec
out
rol
lret
fsubrl
adc
movsb
popf
test
sbb
inc
bound
lret
jle
call
push
mov
lea
jb
call
clc
mov
dec
pushf
mov
cwtl
lret
nop
int
mov
test
andl
inc
sub
scas
int
and
bound
jno
sbb
je
jae
repz
data16
es
or
aam
cmp
cmp
cmpsb
divl
stos
mov
outsl
outsl
loop
repz
and
jl
or
ror
in
lods
daa
push
loop
xor
dec
push
js
sub
ja
cmp
jge
in
mov
dec
loope
cmpsb
in
fcom
aas
repz
outsb
mov
mov
outsl
cwtl
xor
dec
dec
xor
sbb
fs
and
and
je
bt
call
lea
call
pushf
movb
lea
jae
pusha
movb
xor
jmp
mov
pusha
push
push
pushf
lea
jmp
jmp
push
jmp
pushf
xor
push
lea
call
pusha
jmp
add
dec
outsl
arpl
inc
jb
add
movb
pushl
popl
pushf
pushf
pushl
ret
lods
and
mov
roll
jnp
jmp
fwait
cld
jmp
mov
insl
inc
lret
dec
bnd
xchg
fnstsw
jge
rcl
lret
mov
adc
dec
jmp
ljmp
inc
jns,pn
cmp
in
lret
ret
js
cmpsb
cmc
mov
in
mov
incb
inc
jo
sar
pop
mov
xchg
dec
repz
mov
xor
in
push
insl
xlat
xchg
aas
int3
add
add
popf
and
or
lods
mov
and
hlt
mov
mov
push
and
inc
pushf
setle
lods
bt
cmc
push
not
bt
lea
jl
add
bt
pusha
ror
bt
cmp
cmc
xor
cmp
call
push
pushf
pushf
lea
call
jmp
mov
jmp
rol
int3
ja
pop
xor
divb
xor
scas
arpl
jb
push
inc
dec
and
addr16
test
xchg
stos
mov
fs
fcomps
in
test
and
lock
push
lcall
or
cmp
dec
and
inc
add
lcall
arpl
jle
cmp
stc
mov
popa
adc
add
and
pop
cltd
ficompl
popf
lock
lea
jb
jmp
sub
pusha
lea
jbe
push
rep
lea
jle
lea
mov
movzbw
pop
pushf
mov
lea
jmp
jmp
call
mov
in
test
push
test
rclb
dec
pop
outsb
add
dec
pop
ds
xor
mov
std
lret
popf
and
in
mov
loope
out
lret
cmpl
inc
cs
xchg
cmpsl
mov
test
sub
xor
mov
fdivs
cmpsl
add
nop
cmp
ljmp
divb
sahf
stc
mov
jp
out
xlat
mov
ret
pop
xchg
xor
dec
out
adc
xchg
sete
mov
sbb
shl
pusha
xor
mov
cmc
mov
pop
shl
clc
rol
mov
bt
bt
sub
lea
jae
push
pusha
pushl
rep
jmp
jmp
pushf
lea
jae
push
lea
jne
pushf
call
lods
mov
dec
xchg
shl
lock
xchg
dec
insb
adc
push
movsb
push
outsb
call
adc
mov
test
jb
test
pop
jnp
xor
mov
lds
cltd
aam
or
aaa
mov
test
sar
cmp
push
cmp
sbb
daa
jg,pn
dec
push
push
inc
and
push
or
xchg
or
pop
push
pop
data16
js
push
xor
adc
fldt
lods
jbe
aam
ret
fmul
cmp
add
lret
mov
mov
mov
scas
out
pop
jnp
xor
push
ljmp
cs
or
fstl
std
adc
pop
imul
or
arpl
test
and
push
add
mov
lahf
sbb
inc
xchg
adc
stc
cmpsl
xchg
loope
push
fcomps
and
cmp
mov
xor
rclb
xlat
idiv
mov
pop
dec
dec
repnz
roll
and
pop
lea
jae
jne
push
stos
push
pushf
push
lea
jmp
call
lea
js
cltd
incb
lcall
jno
arpl
add
adc
shll
fnstsw
in
stc
adc
lret
push
add
stos
je
dec
and
push
cmp
stos
mov
cmpsl
lret
mov
dec
gs
xlat
lea
call
pusha
call
pusha
movw
pushf
rep
push
mov
push
mov
pushl
push
lea
jmp
jmp
in
xor
js
dec
addr16
mov
test
pop
inc
push
add
sub
add
mov
mov
aaa
ljmp
lret
hlt
mov
xor
loopne
mov
add
xchg
shld
push
sub
inc
add
js
mov
jge
arpl
push
xor
mov
clc
clc
adc
mov
test
aam
and
xor
mov
mov
sbb
shr
mov
jbe
jle
ja
ja
insb
dec
add
je
outsl
fstpl
lret
pop
cmp
xchg
push
adc
pop
out
lret
or
je
arpl
pusha
jno
jle
mov
dec
enter
out
les
sti
sub
jg
lahf
or
divb
sbb
pop
mul
addb
lcall
in
js
in
jl
pop
adc
sbb
sbb
cld
cmp
push
sbb
aam
jecxz
mov
and
mov
movsb
dec
and
cmpsb
jno
and
add
and
xorl
ss
xchg
cmp
or
shr
xchg
mov
shlb
adc
sub
inc
call
adc
xor
pop
in
dec
repz
sub
add
adc
sbb
xchg
icebp
nop
lcall
pop
jmp
fs
jbe
setns
adc
mov
adc
bts
add
call
lods
jns
in
js
or
dec
pop
add
pusha
jnp
lret
mov
mov
in
inc
and
pusha
cmc
mov
fwait
cmp
xlat
mov
sub
cmpsb
out
mov
push
in
out
outsb
lahf
or
imul
mov
lods
fsubs
add
movsb
outsb
rcr
testl
ret
and
add
add
movzbw
jmp
sub
mov
push
test
jmp
add
gs
js
out
mov
add
sub
pop
mov
mov
mov
cmpsb
and
jp
push
push
jbe
push
adc
ljmp
lret
add
cmp
xchg
out
lahf
out
into
mov
jae
mov
jge
adc
addr16
mov
idiv
or
out
fldenv
js
push
rcr
push
jb
xchg
dec
mov
xchg
adc
xchg
roll
mov
fstpt
xor
jecxz
out
arpl
stc
aam
cwtl
shl
clc
mov
popa
fdivp
inc
push
jl
adc
cmp
pushl
lea
ja
call
les
fildll
push
rorb
push
xor
sub
add
inc
pop
fstl
lret
in
jmp
leave
enter
or
xlat
push
push
fidivrs
insl
dec
aaa
push
jo
movsl
outsl
mov
rcll
popw
rorl
sbbl
movsl
clc
jle
push
call
dec
mov
shr
call
out
ja
mov
cmpsl
cli
cwtl
lahf
mov
es
mov
ss
call
loope
stc
call
xor
pop
inc
stos
or
in
ljmp
mov
decl
adc
test
movb
jmp
lea
ja
jae
call
pusha
pushl
lea
jae
push
pusha
bt
movw
cmp
pusha
call
sub
stc
pusha
push
cmp
call
jmp
jmp
js
ret
cmp
fucom
movsl
adcl
push
scas
das
data16
daa
push
cmpsb
jo
push
or
mov
xchg
sbb
mov
or
add
mov
rorl
xor
pop
jle
pop
sbb
cmc
fcoms
pop
add
insb
and
stc
ror
cmc
call
outsl
out
mov
lcall
xchg
jnp
mov
addl
in
mov
movb
pop
add
bound
cmp
fisttpll
ss
jbe
fdivr
lods
addr16
dec
push
mov
shrb
adc
push
jbe
mov
pusha
mov
not
mov
in
mov
xchg
subb
xor
sbb
lds
adc
sbb
cmp
jmp
mov
aas
popf
push
xlat
push
inc
out
mov
stos
cmp
sbb
sahf
sbb
in
or
and
adc
call
outsb
dec
inc
push
cld
sub
jmp
or
mov
ret
ss
pusha
sub
sub
sub
sbb
cld
pop
inc
mov
xchg
stc
push
andl
lahf
aam
add
jnp
std
ret
dec
pusha
cmpsl
scas
sbb
jle
mov
lea
ret
adc
and
cmpsb
lret
cs
fnstcw
addr16
xor
bound
insb
test
pushf
scas
scas
imul
xor
shll
ss
dec
mov
int
lea
pop
cmp
ret
stos
sub
lcall
lods
stos
mov
sbb
inc
loope
xor
dec
scas
sbb
and
cmc
and
sbbb
cmp
cs
push
mov
mov
xor
mov
clc
cmc
xchg
shl
lahf
cwtl
movl
mov
shl
xor
mov
pushf
pushf
movw
xchg
bt
cmp
mov
mov
stc
cmp
jmp
bt
btr
mov
neg
jmp
cmpsb
out
popa
in
js
lahf
aam
jl
or
repz
dec
or
xchg
outsb
cmc
sub
mov
push
mov
lahf
adc
icebp
mov
clc
and
test
cmp
jb
add
cmp
and
pop
push
lahf
sbb
inc
or
xor
xor
push
inc
divb
in
js
add
test
test
test
ljmp
ret
adc
and
add
jmp
sti
incb
or
lock
les
scas
insl
ljmp
xchg
mov
mov
fnstcw
jl
push
dec
mov
addl
scas
je
aas
cmc
ja
fadd
lock
jge
das
inc
orb
jecxz
test
mul
out
pop
sahf
cmp
jle
scas
pop
ja
daa
jb
sbb
and
pop
xor
fucomi
and
cmc
call
and
jo
in
js
jne
mov
scas
scas
mov
adc
pop
cmp
inc
gs
imul
popf
notb
jle
cmpsb
mov
xchg
mov
jo
out
sahf
lea
call
pusha
lea
jae
xchg
not
jmp
cmp
call
xor
movw
mov
jmp
in
xor
js
xor
jne,pn
or
pop
std
mov
inc
cs
add
xor
int
sub
js
and
mov
lods
es
rcll
or
and
add
push
popa
sub
xor
mov
fsts
xchg
pop
push
lds
shlb
cwtl
push
xlat
aaa
and
jmp
xor
add
sub
lcall
sar
cli
push
xchg
xor
frstor
outsb
shl
ds
xor
push
arpl
ret
je
scas
inc
mov
loope
out
jne
add
jnp
jno
xadd
mov
aaa
cmc
xor
popf
out
in
movsl
sub
sbbl
iret
aam
or
or
add
int
add
xchg
aad
decl
mov
mov
add
cmp
push
and
adc
fwait
bsr
dec
setne
xor
not
pop
pusha
xchg
xchg
bswap
mov
mov
not
lea
xchg
mov
lea
movzbw
bswap
mov
call
jmp
movl
pusha
call
dec
pushl
call
mov
mov
in
js
rcl
mov
ds
or
popa
jp
sub
pop
cmp
ljmp
jns
cmp
mov
push
hlt
fld
outsb
and
or
aaa
mov
adc
xchg
ljmp
js
repz
test
int3
fucom
ret
clc
mov
add
jle
sub
mov
and
rcll
pop
sbb
scas
les
push
into
idiv
fldt
pop
xchg
mov
icebp
cltd
inc
outsb
jg
mov
pushf
push
lods
jmp
out
mov
dec
nop
mov
mov
lock
int3
pop
and
pop
jns
cltd
push
in
mov
adcb
push
push
popf
call
jmp
nop
pop
shl
xchg
push
pop
pushf
ja
das
loopne
sbb
dec
lods
ja
js
das
subl
and
mov
push
cmp
add
insb
out
xor
sbb
sub
dec
pop
pop
sti
mov
div
jb
xchg
out
out
cmpsl
pusha
xchg
cmpsl
dec
popa
outsb
pop
dec
sub
add
lods
rorl
and
test
mov
add
mov
call
pushf
sub
pushf
pushl
cmp
cmp
pushf
jmp
movl
add
bt
movzwl
bswap
clc
movzbw
mov
call
jmp
stos
mov
dec
jmp
jp
adcb
test
cld
in
dec
inc
sbb
dec
add
push
popa
push
jno
cmpsb
inc
cmp
ficoms
icebp
mov
sbb
in
pop
dec
dec
mov
add
pop
or
nop
sbb
aaa
push
sbb
lds
js
xlat
addb
pop
mov
jmp
out
cld
in
dec
stc
mov
mov
mov
test
xchg
jmp
mov
lahf
jo
push
pop
mov
mov
out
pushf
pop
orb
jge
mov
inc
cs
xchg
fcompl
daa
std
lock
jecxz
std
xchg
aam
fsubrl
enter
fdivrl
xchg
icebp
mov
xadd
adc
mov
rol
xor
add
add
or
bt
setae
movl
pop
ror
sbb
xor
mov
cmc
clc
cmp
pusha
lea
jbe
add
sub
and
mov
xadd
or
shld
shld
mov
pusha
add
shrd
bsr
shr
clc
bswap
btr
shld
mov
bswap
and
add
call
mov
cmc
pushf
shld
xchg
shr
push
add
mov
bsr
xchg
test
stc
mov
sete
mov
rcr
pushf
ror
xor
not
call
cmc
stc
cmp
pusha
lea
jne
jmp
insl
jnp
js
js
sub
pop
je
sub
jmp
xor
sbb
js
jge
cltd
insb
mov
std
cli
stc
out
scas
stos
mov
mov
push
pop
rcrb
loop
call
pusha
movzwl
bswap
jmp
jmp
pushf
clc
or
call
ror
bt
rol
call
mov
popf
js
js
mov
mov
nop
idivl
mov
jno
aad
sbb
adc
jnp,pt
sub
jb
cmp
push
outsl
cmp
sub
stc
push
cltd
cmc
in
hlt
jne
and
xor
popa
loopne
adc
mov
push
adc
scas
push
xchg
orb
outsb
xlat
sti
fxch
dec
mov
je
adc
ret
shrb
xlat
outsl
add
add
add
add
shlb
add
fs
add
mov
add
les
add
adc
add
outsl
cmp
js
ss
stos
cltd
repnz
cltd
xchg
call
fs
iret
icebp
jo
jnp
sub
pushf
push
mov
ror
lret
add
push
ja
sbb
rolb
in
js
dec
push
sub
jb
push
cmp
mov
dec
pop
fistl
scas
cmpb
mov
icebp
add
dec
es
arpl
pop
int3
test
outsb
test
mov
inc
cmp
shll
inc
jmp
inc
dec
fstl
and
inc
and
fs
push
or
jmp
cmp
repnz
mov
pop
and
test
inc
or
lock
call
jne
xor
jo
cltd
stc
aas
in
popa
xchg
shlb
fs
jl
jae
call
pusha
push
push
lea
jne
pusha
pusha
mov
stos
pushf
pushf
lea
jmp
ss
enter
xor
push
lcall
cld
push
pop
cmp
mov
pushf
idivl
xor
ficompl
adc
push
nop
leave
or
fs
jno
ljmp
out
push
ds
pop
add
nop
xchg
jbe
js
lcall
cmp
aad
mov
jp
movsb
push
iret
sbb
ljmp
sarl
and
lods
inc
ret
mov
hlt
push
ret
orl
mov
cmp
test
xchg
lcall
fwait
cmpsb
lock
scas
adc
sbb
popf
lret
lea
ja
call
pushf
movb
jmp
pushl
mov
lea
jne
call
mov
setge
mov
call
lea
ja
pusha
pusha
stc
clc
add
add
call
repnz
jmp
shld
bts
bt
add
shl
lea
bsf
movsbl
mov
rcl
mov
inc
shl
mov
cmp
jmp
fistpl
ja
js
ds
and
ds
pop
adc
dec
stc
dec
xor
in
pop
adc
or
fldt
sbb
fdivrl
inc
xorb
sbb
in
in
xchg
lock
out
mov
jmp
pop
pusha
mov
lea
jb
stc
cmp
jmp
lea
jne
pusha
movw
stos
movb
push
pushf
lea
jmp
jg
jl
in
js
pusha
adc
fs
call
jg
sub
pop
test
adcb
fcmovnbe
mov
test
popf
rclb
fs
mov
adc
pop
push
inc
or
js
add
jo
out
jo
insb
dec
lea
jne
lea
push
mov
not
movb
sete
not
not
mov
push
movzbw
call
xchg
roll
mov
or
and
prefetcht1
or
loope
add
je
repnz
cs
shll
mov
jmp
xlat
cmp
push
aam
sets
outsl
or
into
in
sbbl
js
and
and
jbe
mov
addr16
pushf
lea
jns
pusha
pusha
xchg
pushf
call
popa
bound
js
push
sub
mov
pop
add
fildl
cmpsl
pop
mov
or
ror
and
mov
daa
lret
pop
sbb
mov
push
sarb
int3
mov
mov
das
pop
xor
shrb
mov
mov
jp
mov
rcl
mov
mov
xor
sbb
pop
or
and
js
sarl
add
imul
and
jae
sets
xchg
setne
mov
mov
pushf
push
setne
dec
inc
not
setae
setg
mov
mov
lea
call
push
mov
adc
jmp
aaa
and
js
jl
push
or
das
dec
aas
dec
or
pop
ljmp
fcoms
movb
rcrb
pop
mov
push
jl
add
jbe,pt
shll
test
cmp
rcl
lods
dec
xchg
cli
jb
sahf
loopne
xchg
push
ret
fsubrs
imul
das
mov
dec
jns
pop
cmp
mov
std
mov
stos
and
movsb
test
pop
std
std
mov
jg
mov
dec
cmp
in
and
or
ss
jne
cld
dec
jge
sbb
icebp
or
js
arpl
pop
pop
movb
fsubrl
adc
test
sub
push
add
xchg
inc
inc
out
jecxz
xchg
push
data16
fs
sti
inc
or
ret
xchg
lahf
ror
dec
sbb
inc
mov
lea
jne
stc
mov
clc
cmc
pushf
add
call
lea
jb
cmc
pushf
pushf
clc
cmp
jmp
push
jmp
sbb
dec
jae
js
or
inc
inc
in
mov
ljmp
sub
dec
sbb
xor
mov
jno
stc
ret
sub
xchg
std
push
dec
call
leave
scas
jb
mov
popa
hlt
sub
cltd
xor
pop
xor
ret
mov
mov
loopne
dec
insb
pop
shrl
sbb
add
mov
jnp
cmp
cmpsl
rclb
cltd
dec
sub
js
in
fnstcw
inc
pusha
adc
mov
stos
pop
not
call
mov
cwtl
jae
js
hlt
shrl
cmpsl
adc
xor
cmp
adc
push
int3
je
outsb
clc
and
add
arpl
jle
jecxz
push
pop
movsl
js
iret
and
into
mov
iret
scas
mov
xchg
stos
lods
gs
jbe
mov
ss
cli
in
push
cmp
sbb
sub
cmp
popf
icebp
rcll
add
pop
lea
jne
bswap
shr
mov
dec
mov
pushf
pusha
cmc
cmc
add
cmc
movzwl
add
rcl
mov
cmp
push
cmc
clc
add
jmp
mov
lea
jae
call
lret
jo
js
sbb
xchg
mov
out
pop
movsb
dec
decb
xor
xchg
mov
hlt
mov
xchg
mov
dec
and
daa
es
insb
mov
sub
enter
sbb
push
imul
sbb
pop
adc
jl
jg
and
and
mov
sub
and
mov
inc
and
popf
dec
xor
mov
pushf
lea
jmp
add
inc
js
je
jb
arpl
jae
jno
gs
js
add
and
fbstp
fadds
pop
filds
add
lret
push
or
sub
int
mov
xchg
cmc
push
out
test
push
push
dec
pushf
cmc
fcoml
mov
dec
movsb
mov
or
call
roll
jne
lods
int
loope
sub
inc
not
mov
not
pushf
mov
call
loop
loopne
in
js
in
test
shrl
gs
test
jns
aam
dec
fimull
cmpsb
push
fnstsw
push
lods
inc
adc
push
mov
adc
cld
and
dec
pop
add
inc
or
mov
dec
or
mov
lock
leave
mov
cmpsb
jecxz
add
outsb
mov
cmp
push
mov
push
sbb
jmp
fs
jae
bt
call
push
ss
in
js
dec
dec
gs
stc
xchg
push
cld
mov
adc
pop
cmp
data16
cmp
sbb
js
test
hlt
jmp
lea
ljmp
rorb
jge
ret
xlat
xchg
pop
aaa
imul
add
inc
push
sbb
jmp
and
push
shlb
scas
mov
hlt
pop
mov
jle
js
push
jne
sub
xchg
xchg
mov
add
cmp
lock
icebp
outsl
roll
dec
in
js
xchg
icebp
xchg
shll
pop
xor
jg
faddp
sarl
mov
test
lea
mov
out
xor
leave
and
sub
xchg
lcall
cmc
fstpl
adc
xchg
fwait
push
mul
add
pusha
cld
out
mov
imul
cmc
fwait
call
rcrb
mov
test
and
dec
aam
ret
jae
stos
dec
sub
xchg
pop
int3
insl
scas
dec
push
imul
push
out
sub
adcb
in
enter
dec
jbe
pop
jb
in
add
or
mov
mov
inc
ss
in
ret
sbb
lcall
aad
inc
sbb
or
fnsave
sub
pop
in
cltd
cmp
xchg
push
add
xchg
call
popf
rdtsc
nop
call
mov
mov
pusha
push
push
movl
lea
call
jmp
mov
ja
in
js
sbb
sbb
sub
xor
pop
enter
jnp
inc
ret
cltd
and
cmp
int
in
sub
mov
std
mov
mov
cmc
xor
cwtl
xchg
lret
and
dec
ja
fstpl
pushf
jge
jecxz
mov
addr16
ficompl
pop
test
mov
and
jnp
hlt
cmp
out
jecxz
xchg
ret
jg
daa
pushl
pushf
lea
jae
cmp
test
cmp
jp
pushf
movb
pusha
lea
ja
mov
inc
dec
jmp
push
mov
dec
in
js
mov
int3
mov
lahf
call
sub
pushf
xor
cltd
sub
pop
or
std
pop
xlat
xlat
mov
jmp
push
xchg
rclb
xchg
mov
test
fcmovne
testl
jmp
leave
mov
adc
clc
pushf
sub
push
push
pusha
call
movl
pusha
pushf
movb
movl
mov
movb
pusha
pushf
lea
jmp
insb
and
dec
in
js
mov
scas
cmpsb
adc
cltd
or
mov
gs
ja
mov
std
sbbb
jge
insl
notb
xchg
inc
mov
cmp
xorl
or
dec
mov
js
cmp
mov
cmp
lret
xchg
and
cmp
mov
cli
xchg
sahf
rcll
jo
nop
xor
pop
add
add
fisubs
mov
ret
call
leave
lahf
lret
dec
in
js
loop
xchg
rorl
repnz
dec
sbb
and
inc
popf
jecxz
inc
dec
cmp
and
inc
out
cwtl
xchg
outsl
cli
jns
mov
add
sbb
push
jecxz
jmp
les
imul
adc
add
inc
push
pop
jbe
popa
mov
lds
dec
in
js
xchg
inc
out
sbb
repnz
shl
mov
push
pop
and
xor
mov
je
dec
cmp
mov
fs
cmc
in
inc
aaa
sub
push
add
pop
in
pop
inc
adc
cmp
mov
adc
or
adc
lods
stos
cmpsb
sbb
xchg
arpl
mov
dec
pop
loope
pushf
loop
lret
aad
mov
aaa
outsb
daa
iret
cmp
jns
add
fisttpll
jns
mov
dec
les
mov
rcl
call
fnstenv
lock
iret
jno
test
inc
and
push
mov
movb
lea
jmp
stos
pushf
push
pusha
lea
jmp
jmp
pusha
call
pushf
mov
pushl
movl
pusha
pushf
pushf
pushl
lea
jmp
roll
loope
pop
ss
dec
imul
shl
fdivrs
out
mov
jnp
rorb
std
dec
popf
dec
mov
lods
adc
aad
sub
sbb
cli
adc
jnp
fistl
mov
sbb
cmp
xchg
cmp
data16
mov
jle
inc
inc
out
movsb
jne
mov
dec
sahf
pop
fdivrs
in
xchg
fisttps
sub
jp
sub
out
sub
popa
aam
add
call
pusha
lea
jae
not
mov
pusha
jmp
cmc
mov
dec
in
js
mov
jae
inc
push
ja
xor
push
cs
pushf
fsubs
clc
push
gs
js
xchg
sahf
push
mov
adc
test
cs
je
inc
push
push
jbe
into
imul
in
pushw
adc
inc
jg
sub
scas
popa
popa
js
adc
push
jb
xor
iret
mov
jle
negl
dec
push
hlt
push
and
push
pushf
lea
ja
cmp
bt
mov
inc
sub
xor
add
movsbw
movsbl
rol
shrd
mov
or
mov
call
rol
mov
push
xor
pushf
repnz
pusha
mov
movb
pushf
lea
jmp
mov
out
in
js
out
push
arpl
or
mov
shlb
pop
cmp
jo
dec
push
push
jnp
daa
sub
adcb
and
inc
dec
dec
fistpl
sbb
inc
stc
stc
cmp
test
call
adc
push
pusha
lea
jmp
ja
jmp
push
inc
pushf
pushf
jmp
not
lods
ror
sbb
xor
jmp
pusha
lea
jne
push
stos
pushf
lea
jmp
push
stos
pusha
lea
jmp
sub
push
pushf
movw
lea
call
push
lea
jae
pusha
xchg
pushf
lea
jg
mov
call
jmp
cmp
sub
js
push
outsb
add
pop
jb
push
inc
bound
xchg
popf
lods
lea
orb
inc
cmpsl
dec
rcl
xchg
rorb
mov
xor
mov
push
push
fistpl
jb
or
mov
and
jb
dec
movzbl
into
xchg
stos
ljmp
es
enter
pushf
xor
call
call
shr
pushf
lea
je
call
int
cltd
dec
in
js
xchg
popf
ljmp
adc
cmp
call
jmp
gs
test
dec
sahf
cltd
push
add
shrb
imul
iret
scas
in
divl
xchg
jmp
xchg
mov
mov
and
jo
pop
pusha
and
test
mov
pusha
and
ja
xor
pop
push
xor
sub
aam
xor
xor
cltd
int
in
js
mov
xor
fsubl
rorb
insl
sbb
pop
cmp
mov
stos
lods
repnz
int
stc
xchg
outsb
iret
mul
or
xchg
filds
xchg
clc
push
cwtl
inc
scas
imul
jecxz
popf
dec
mov
and
leave
adc
loop
outsl
mov
ret
adc
notl
test
mov
subb
dec
inc
in
fcmove
or
imul
ljmp
lahf
or
mov
out
icebp
mov
je
rcll
sahf
sbb
mov
pop
test
xchg
stos
and
lods
or
jne
or
lahf
in
push
push
add
js
and
push
fwait
repz
sub
jecxz
mov
pop
pop
push
sbb
xchg
jmp
jmp
aad
push
adc
pushf
mov
mov
mov
pop
ficompl
mov
leave
cs
bound
lods
add
and
jae
add
cmc
dec
imul
dec
jb
pop
and
aaa
mov
cmpsl
mov
imul
shlb
test
xor
movsl
lea
loope
lret
xor
lahf
lahf
sahf
scas
mov
rcl
lods
xchg
int3
dec
mov
out
test
lods
out
inc
sbb
ja
pop
and
xor
repnz
fldcw
xor
and
pop
pushf
pushf
pop
xchg
adc
mov
or
jmp
imul
mov
inc
sub
andl
mov
mov
cmpsl
mov
cli
out
xlat
out
out
stos
cmp
xor
inc
and
rclb
insb
movw
mov
movb
lea
jmp
jmp
pushf
inc
mov
mov
pusha
lea
jmp
ror
mov
pusha
call
pusha
mov
adc
lea
jnp
pushf
lea
jae
jmp
call
lea
call
jmp
mov
not
jmp
call
jmp
call
bt
bt
shl
mov
jmp
lea
jne
pushf
jmp
into
fmuls
stos
in
enter
pop
sbb
pusha
mov
add
inc
pusha
sub
inc
add
pusha
insl
cwtl
les
jge
pusha
mov
adc
or
pop
xchg
out
scas
scas
inc
pusha
xor
xchg
dec
mov
jge
xlat
mov
mov
jge
loop
xlat
mov
in
syscall
ret
loopne
dec
sub
out
sub
gs
xchg
dec
push
stos
dec
dec
cwtl
mov
ljmp
out
jg
jl
es
xchg
sub
fs
and
ret
adc
adc
ret
sub
pop
hlt
xor
cwtl
fsubs
mov
mov
push
dec
inc
daa
insb
iret
mov
mov
aaa
dec
xor
jg
ds
loop
fidivrs
cmp
inc
and
pushf
pushl
ret
ljmp
sar
xchg
lcall
stc
mov
jle
mov
orb
push
scas
mov
pop
ds
arpl
movsl
das
mov
adc
add
inc
or
cld
sbb
loopne,pn
out
test
out
push
roll
pusha
mov
sub
add
pop
and
xchg
test
aam
sbb
pop
or
aam
pushf
fcompl
mov
clc
pushw
popfw
movw
call
pushf
movb
call
xor
add
add
pop
daa
jecxz
and
dec
dec
negl
mov
add
jecxz
mov
cmp
add
aas
ret
add
movl
mov
bt
cmc
ror
cmp
call
mov
popf
inc
in
js
nop
dec
add
je
mov
test
xor
jl
aad
sub
pusha
xor
or
push
out
mov
insb
out
mov
jns
mov
adc
int3
adc
insl
add
dec
jne
pop
sbb
lret
out
fcoms
mov
gs
outsl
fs
gs
imul
add
lcall
shr
pop
je
add
call
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
adc
js
les
or
test
add
inc
mov
jg
inc
mov
dec
xchg
push
add
ret
cltd
xchg
cltd
test
test
pop
iret
jnp
cmp
int
rcrb
cltd
das
mov
out
mov
outsl
adc
enter
sbb
pop
and
cmpl
cmpsl
aad
testl
loop
xchg
mov
inc
stc
sahf
in
adc
scas
scas
pop
push
sub
daa
ficoms
lahf
out
ret
cmpsl
and
movsb
mov
push
mov
cmp
push
mov
xchg
mov
pop
rorl
in
mov
movb
jge
add
lods
jns
pop
nop
adc
cltd
or
mov
lea
inc
fstpt
adc
fs
cmpsl
xchg
icebp
aam
imul
scas
sub
sti
nop
mov
les
fcompl
xchg
arpl
fdivrl
ja
inc
fucomi
test
ret
sbb
scas
mov
and
fimull
sub
mov
sbb
cmp
cltd
orl
inc
test
dec
lahf
jmp
dec
int3
mov
jnp
sub
xchg
or
xor
or
pop
push
out
or
add
and
inc
aaa
push
mov
jl
sub
mov
hlt
adc
xchg
pusha
and
adc
sbb
mov
ljmp
jge
xchg
leave
mov
mull
xlat
cltd
xor
cwtl
push
sbb
xchg
fbstp
mov
mov
dec
cwtl
into
ud0
push
xor
test
push
mov
jecxz
pop
and
clc
scas
and
mov
sub
mov
movsl
fstps
cmp
jns
ss
adc
push
fldenv
pop
push
mov
pop
xor
push
mov
adc
dec
shlb
jne
pop
dec
gs
es
lea
jl
jo
aas
xchg
pop
fmull
or
mov
lret
push
sub
inc
in
vmptrst
stos
mov
pushf
dec
lcall
ret
mov
les
xlat
and
es
jp
mov
adc
scas
pop
mov
imul
cltd
inc
pop
sbb
int
mov
ds
inc
divps
sbb
fcmovbe
and
pop
adcb
rol
mov
sbb
aaa
or
lds
push
movsl
inc
jp
aaa
stos
mov
pop
xor
test
loopne
subl
icebp
adc
rorl
rcll
insl
in
mov
ljmp
sbb
out
dec
in
and
xchg
adc
xor
jae
bound
push
pop
divl
mov
xor
adc
fcmovnbe
and
sarl
jp
lret
jl
shrl
mov
and
mov
loop
neg
pop
and
add
cli
repnz
in
cmp
mov
or
sub
inc
xor
sarb
psubq
adc
cmp
xchg
repnz
outsl
mov
dec
inc
sub
jp
movsb
into
stos
dec
jnp
lret
or
scas
sub
movsb
imul
xor
pop
std
mov
pop
add
imull
movsb
bound
stc
test
mov
fwait
in
mov
test
in
lock
in
xor
es
adc
loopne
arpl
xchg
add
movsb
push
cmp
in
xchg
jo
push
jge
rorb
arpl
scas
pusha
push
out
jge
sbb
inc
sub
jns
adc
lds
and
aas
dec
pop
jmp
aaa
jnp
adc
and
sub
insb
cmpsb
or
lock
and
sbb
pop
mov
inc
lcall
add
lea
lcall
shll
imul
sub
das
daa
push
stos
cmp
rorb
or
dec
mov
mov
sub
test
cmpsl
sub
push
mov
aad
push
cmp
rcrb
test
mov
call
flds
xor
jae
inc
loop
stos
push
sub
lea
clc
psraw
daa
out
sahf
cmp
xchg
shld
or
je
xor
mov
push
pop
js
dec
stc
ja
int3
cmp
mov
inc
stc
xlat
push
bound
hlt
pop
fisttpll
cmc
into
inc
inc
addr16
ss
int3
cmp
fistpl
sbb
jno
aas
or
iret
lods
lahf
aam
push
mov
jbe
repz
sub
push
inc
and
dec
add
adc
jbe
loope
jmp
enter
lds
xchg
adc
dec
mov
inc
mov
jge
inc
testb
pop
sub
xchg
pop
jo
inc
int
dec
mov
pop
test
inc
cmp
jecxz
and
sub
xchg
aas
rcrl
clc
mov
xchg
mov
pop
ret
shll
dec
lds
movsb
lods
push
test
jmp
mov
aad
add
daa
loop
add
xor
ftst
int3
imul
mov
sub
adc
clc
adc
push
mov
int
cmp
dec
into
or
and
cmp
lock
scas
lock
push
pop
push
pop
cmp
sarb
sarl
inc
jne
cmp
mov
sahf
aas
dec
dec
lahf
mov
out
insb
mov
cmp
sbb
push
mov
sti
sarl
adc
xor
and
rorl
adc
mov
sub
sbb
push
stos
pusha
or
daa
stc
ret
in
mull
in
xchg
lcall
sub
test
movsb
iret
xor
or
das
xchg
cli
fwait
pmuludq
rcrb
and
cmp
inc
jmp
add
stos
movsl
mov
jbe
test
jge
jl
mov
into
pop
mov
mull
cwtl
jb
jge
aas
inc
gs
push
sbb
mov
js
add
xchg
mov
insb
les
pop
sti
imul
cmp
test
sbb
or
mov
push
and
push
loop
jg
pop
inc
sub
in
xchg
sbb
push
pop
ret
gs
fidivrl
cltd
movsb
test
call
mov
fcmovbe
fdivp
divb
rolb
les
inc
mov
int3
or
adc
test
lret
xor
add
bnd
or
scas
push
jnp
add
mov
or
arpl
push
nop
fldl
shl
lods
aam
xchg
mov
test
xor
and
in
jmp
cwtl
add
jp
fcmovnb
add
inc
adc
aam
push
das
mov
cs
jne
pop
ljmp
sahf
adc
cmp
bound
xlat
loopne
pop
add
icebp
or
xchg
sub
outsb
in
in
scas
push
mov
andl
mov
adc
push
out
xchg
ja
out
or
push
pushf
push
loop
mov
testb
mov
add
mov
or
movsl
scas
push
cwtl
mov
clc
dec
sub
out
and
es
jb
aaa
sbb
add
and
insb
in
mov
jmp
aam
push
movsl
lods
pop
je
adcl
pop
bound
sbb
cwtl
cmc
adc
jbe
push
imul
and
adc
mov
fildll
es
push
push
mov
jno
adc
mov
mov
mov
lea
fidivrs
fcom
or
shll
lea
aas
fdivr
into
arpl
sub
dec
nop
and
rep
daa
stos
push
sbbb
mov
mov
cmp
mov
rol
push
rcrb
jae
mov
sub
cmp
pop
cmpsl
subl
pushf
pushf
push
cmpl
rcrb
xchg
push
add
jno
sub
lret
push
mov
sbb
mov
aam
inc
cld
sbb
dec
mov
xchg
add
cmp
shlb
or
lcall
lahf
ljmp
adc
mov
pusha
sbb
ss
jo
dec
sahf
push
mov
lret
popa
mov
and
scas
test
cwtl
sbb
call
xor
aad
or
cmc
popf
push
std
cmpsl
cmp
cmp
rorb
inc
inc
in
lahf
into
fdivrs
xchg
cwtl
mov
vsubss
mov
stos
fdivl
push
xchg
fisttpl
bound
int
shr
xchg
mov
ret
inc
ja
sti
outsb
nop
repz
in
ja
xchg
mov
adc
mov
aas
or
xchg
cli
push
fs
mull
addr16
inc
pop
adc
mov
loope
and
mov
dec
dec
pop
out
ljmp
scas
fdivrp
scas
cmp
in
outsb
into
insb
testb
test
adc
in
sub
cli
imul
das
lahf
and
jmp
stos
and
push
cmpsb
fstl
aas
inc
shll
dec
mov
mov
mov
push
inc
test
mov
push
gs
push
dec
sbb
and
cmc
dec
mov
test
ret
addr16
xlat
cmp
hlt
xor
push
clc
pop
sub
or
test
pushf
gs
stos
mov
hlt
mov
fcoms
daa
mov
push
aaa
push
cmp
cld
inc
jl
test
mov
movsb
ja
jo,pt
mov
pop
into
lods
js
xchg
mov
negl
add
lods
fdivrs
mov
in
out
jns
mov
mov
jno
rep
mov
fwait
popf
ds
mov
and
sbb
into
fucomp
push
mov
es
jmp
fiaddl
push
mov
fadds
movl
jle
xchg
cmp
cs
push
jle
dec
pop
pop
cmp
test
push
xchg
jl
or
cmp
mov
movl
and
enter
lods
ja
fmull
jle
push
xor
hlt
jg
and
xchg
rorb
push
loope
inc
mov
enter
jne
rcll
cmp
pop
test
imul
data16
movsb
movsb
ds
pop
fstps
or
dec
fistps
mov
push
into
lret
inc
push
push
mov
xchg
mov
fnstenv
jnp
adc
shl
aaa
lea
icebp
fsubrl
push
sti
add
mov
xor
mov
scas
dec
ds
push
lods
out
lds
fs
xchg
xchg
push
stc
not
das
movsl
sbb
lock
inc
push
subl
or
pop
das
pushl
push
movl
push
lea
jmp
rcl
rcl
mov
cmc
cmp
call
add
add
adc
adc
push
add
adc
call
add
add
add
add
add
add
inc
and
sti
bound
lock
lcall
bound
call
lods
stc
xor
push
dec
not
not
pusha
jmp
jl
mov
into
lds
xor
push
sub
push
dec
xor
adc
jae
and
repz
cmp
mov
pop
jl
mov
lret
int
sarb
add
add
dec
imul
test
out
lcall
push
in
js
push
insb
arpl
sub
insb
daa
stos
daa
and
repz
fildll
fnstcw
jmp
sbb
js
cwtl
out
fsubp
out
lods
aaa
ljmp
push
stc
sub
nop
sbb
mov
jae
push
dec
jae
lret
sbb
xchg
mov
rcrl
dec
jbe
popa
sbb
cs
mov
js
pop
and
cmp
add
insb
test
dec
dec
loop
xor
imul
imul
push
enter
cmp
popa
sbb
pop
std
xchg
rcrb
bndldx
push
inc
jp
push
push
or
adcl
and
pop
and
in
faddl
addl
aad
adc
in
js
jnp
xchg
inc
cmpsl
aam
jb
and
testl
add
popf
xchg
bound
bound
in
aas
xchg
push
jp
xlat
add
mov
call
mov
xchg
cld
cmp
out
dec
mov
push
inc
andl
xchg
aaa
aad
fdivs
loopne
mov
cmp
aad
popl
jl
or
test
in
mov
and
cmp
sbb
stc
popf
ds
mov
dec
pop
adc
cmp
int
sbb
scas
sub
or
outsl
mov
cs
inc
imul
jnp
jae
push
push
mov
icebp
jp
cmpsl
out
mov
dec
sub
mov
cmc
add
cmp
test
push
call
mov
mov
lea
jb
clc
cmp
push
pusha
lea
jae
movsbw
mov
cmp
or
rcr
cmc
mov
inc
mov
setge
or
mov
clc
jmp
pushf
movsbl
mov
movb
pushf
pushf
movl
lea
jmp
dec
dec
sbb
pusha
imul
adc
pop
push
aas
icebp
pop
incl
add
aas
push
sub
and
movlps
xor
sub
mov
or
ljmpw
lret
lcall
pop
xor
cli
mov
into
inc
or
push
sti
in
push
mov
mov
les
or
and
adc
call
std
hlt
cmp
xchg
loopne
mov
cli
cltd
into
xor
popf
dec
fadd
pop
cmp
cmp
insb
push
test
or
inc
xorb
loop
cli
sub
roll
push
sub
or
scas
or
pop
push
fwait
es
pop
outsl
and
dec
adc
push
pusha
lea
jne
pushf
call
call
call
inc
bts
shr
mov
clc
and
cmc
pushf
test
cmc
add
pusha
movb
lea
jmp
str
pushf
pushf
pushl
movl
pushf
call
cmc
imul
push
call
test
pusha
lea
je
jmp
lea
jb
pushf
pushf
pushf
pushl
ret
push
pushl
popl
test
jmp
lea
jmp
mov
mov
cmc
shl
pushf
lea
je
call
call
push
adc
push
in
js
or
sbbl
ss
pop
jge
mov
xor
movsl
xor
or
lods
stc
xlat
mov
sbb
push
loopne
sbb
pop
fisttpl
inc
rsqrtps
cmp
arpl
dec
push
mov
je
nop
jmp
mov
movb
pushf
pushf
push
lea
call
call
lods
lods
stc
push
in
js
xchg
shr
xchg
lcall
cmp
cmp
adc
mov
leave
call
push
jno
inc
add
mov
ds
xchg
ret
cltd
orl
sub
rcrb
lret
addr16
pop
pop
sbb
out
iret
aam
adcb
and
mov
push
sub
push
decb
iret
sbb
lcall
jne
je
and
ss
inc
or
shr
jno
inc
ds
es
dec
popf
jbe
addr16
and
mov
lea
pop
adc
dec
xlat
nop
jg
jge
inc
xchg
lods
xchg
mov
int
dec
inc
push
in
and
repnz
lds
inc
data16
scas
out
and
mov
addr16
daa
or
jne
mov
aam
cld
stos
ljmp
sbb
mov
call
mov
jmp
clc
cmp
cmp
pusha
lea
jbe
bsr
add
jmp
jmp
js
aam
loopne
fadds
pop
adc
add
push
mov
or
cmp
test
test
cld
sti
clc
jnp
imul
out
enter
movsl
enter
and
ss
jns
scas
sbb
inc
addr16
ja
jb
adc
add
jg
outsl
push
ss
and
es
fwait
scas
les
mov
sti
incb
shl
xchg
xchg
ret
mov
rcl
imul
xor
movw
pusha
jmp
cmp
push
jmp
call
sbb
or
outsb
and
stos
insl
inc
push
bound
mov
pop
jo
sbb
mov
into
into
and
add
mov
pop
pop
gs
xchg
test
cmp
sbb
sbb
pushf
mov
cmp
test
test
mov
pushf
lea
je
call
bt
pushf
clc
add
push
clc
stc
ror
call
stc
jmp
call
mov
js
aam
inc
jae
ja
mov
add
movsl
in
sub
test
jns
insb
pop
pushf
test
adc
push
mov
sbb
ret
jmp
cmpsl
mov
cs
ljmp
lea
pop
pushf
mov
cmp
aam
in
movsl
loop
push
cmp
imul
js
xor
fmull
pop
outsl
and
mov
hlt
pop
sub
sbb
imull
pushf
gs
bound
jle
inc
dec
xor
mov
jg
pusha
in
in
add
cmp
imul
clc
ss
xor
sub
lret
adc
lcall
loope
cmpsb
insb
into
or
mov
inc
test
jmp
sub
stc
not
test
and
and
leave
adc
sbb
sbb
dec
or
xchg
icebp
loop
in
pop
jp
xor
xor
insb
or
add
mov
enter
or
or
or
add
arpl
add
js
insl
insl
imul
dec
fs
outsl
movsl
lds
xchg
arpl
inc
je
or
outsb
outsl
and
addl
inc
dec
test
xor
shl
adcb
xor
xchg
cmp
sbb
sub
addps
bound
sub
pop
dec
cmovbe
or
imul
icebp
cltd
or
sbb
adc
insb
sbb
outsl
sbb
cmp
rcrb
cli
dec
or
cs
sub
fstp
or
dec
sub
jns
add
add
and
lods
pop
xor
and
mov
and
jle
outsl
jb
out
pop
adc
loop
dec
push
outsb
imul
testb
imulb
mov
lret
jns
imul
sbb
fs
inc
inc
insl
or
and
cmp
and
inc
jmp
fmull
mov
add
or
adc
push
mov
push
mov
cmp
imul
xchg
stos
sti
dec
xchg
inc
jl
xor
xor
jle
sub
outsb
cmp
fs
xchg
inc
inc
cmp
cmp
pop
or
cmp
push
addb
sahf
add
push
jle
xchg
jp
lahf
jno
dec
push
idiv
sahf
ret
adc
mov
les
cltd
push
or
dec
adc
or
mov
sbbl
pop
jg
and
fwait
insl
loop
cmp
aaa
bound
inc
lret
inc
insb
dec
or
imul
imul
aas
int3
mov
bound
int3
sub
cwtl
cmp
dec
add
sbb
in
dec
pushf
and
xlat
mov
popa
mov
dec
les
test
add
push
inc
adc
sbb
and
add
xor
push
and
push
orb
sub
and
sbb
add
dec
sbb
adc
push
das
mov
cmp
ss
mov
ret
ret
mov
xchg
adc
sahf
mov
sub
lcall
scas
outsb
push
cmp
mov
jno
dec
shrb
mov
jb
mov
adc
adc
xor
jp
outsb
cmp
adc
push
cmpsb
mov
sub
test
outsb
cmp
mov
sub
lcall
mov
adc
push
inc
mov
sub
mov
fimull
loop
loopne
lcall
lret
or
or
mov
insl
jg
cwtl
jae
rclb
or
xor
cli
xchg
cmc
cmp
mov
or
inc
imul
jmp
mov
inc
mov
ret
or
add
xor
cmp
xchg
insb
lds
mov
push
cltd
mov
add
push
wbinvd
dec
gs
sbb
pop
or
inc
mov
fcmove
push
loopne
lds
sub
imul
aas
daa
lahf
push
jge
sbb
push
and
xor
and
cmp
addr16
pop
push
in
add
mov
std
adc
or
fisttpl
sbb
add
push
mov
or
sbb
ret
pop
add
lcall
fdivrs
add
sbb
dec
aas
sub
adc
imul
add
xchg
ss
sbb
sbb
cwtl
test
movsb
add
jecxz
push
cwtl
int
idivb
jb
je
add
outsl
mov
mov
or
xchg
xchg
sub
adc
sbb
jp
add
mov
mov
sbb
outsl
outsb
cmp
data16
push
or
push
push
lcall
add
xchg
mov
add
push
adc
adc
or
int3
arpl
adc
sbb
dec
add
lcall
pop
stos
adc
add
jp
cmpb
push
inc
inc
les
fiadds
arpl
or
inc
sahf
ror
pop
push
cs
fwait
dec
pavgw
mov
add
sbb
pusha
dec
icebp
decb
test
sub
pop
or
adc
insb
and
arpl
or
lea
xor
xchg
xor
cld
pop
icebp
jbe
pop
negl
insb
mov
adc
je
pop
xchg
sbb
mov
add
pop
les
add
inc
in
pop
inc
sbb
inc
push
es
cmp
push
pop
mov
and
mov
lahf
repnz
dec
lods
add
or
jb
ret
test
cmpsb
add
sar
mov
es
pop
add
push
inc
dec
push
adc
pop
ss
pop
sub
xor
std
add
fmuls
xchg
lea
out
test
mov
or
dec
in
xor
fidivrs
xor
pop
lret
mov
outsl
mov
andb
icebp
div
stos
bound
lods
xor
jnp
dec
xor
lret
outsw
je
jl
imul
sub
jg
data16
pop
loope
outsb
repnz
xor
add
inc
inc
jmp
add
or
add
sub
ficompl
mov
rorl
clc
pop
inc
xchg
and
adc
cmp
sub
inc
pop
test
and
fiadds
adc
push
jle
cmc
ljmp
pushl
ficoml
xor
mov
sahf
insl
les
add
lods
or
ficoml
push
shrb
rorb
and
cwtl
cmp
jae
incb
sub
sbb
ljmp
add
sbb
sbb
scas
outsl
mov
dec
fs
std
andl
test
add
popa
add
push
or
mov
xor
push
imul
or
push
das
xchg
cmc
adc
fwait
adc
sbb
loop
out
setp
jecxz
les
jl
imul
fs
xchg
pop
pop
js
pop
sbb
jb
jae
sbb
int
cmp
insb
enterw
jb
inc
jle
and
push
pop
mov
dec
jg
push
pusha
push
sub
orl
inc
js
inc
imul
push
push
inc
xchg
dec
dec
outsl
dec
cs
adc
jg
lods
sbb
pop
jg
ds
jp
jp
stos
cmp
in
mov
addr16
stos
jbe
dec
add
mov
bound
imul
cmp
test
fdivrs
jmp
lcall
sub
pop
stc
push
dec
xor
sbb
pop
sub
pop
xor
jns
pop
ds
cltd
xchg
mov
pop
push
stos
push
or
inc
or
dec
or
push
pop
cmp
push
adc
jnp
push
cs
adc
bound
inc
inc
xchg
out
imulb
push
dec
lcall
dec
inc
mov
cmpsb
inc
inc
scas
rcrb
mov
xchg
xchg
adc
or
add
mov
push
bound
and
and
and
inc
pop
pop
pop
clc
push
int
cmp
sbb
cmp
cli
jg
jbe
xor
pop
jns
cmc
pop
push
inc
pop
push
adc
ret
sbb
xor
add
mov
or
mov
ljmp
xchg
dec
add
pop
push
adc
mov
adc
add
xor
mov
lcall
or
mov
pop
sub
pop
adc
fcmovb
and
sbb
mov
insb
xor
pop
pop
pusha
or
dec
push
mov
sbb
loope
sub
jle
pop
and
cmp
inc
ljmp
out
push
lcall
out
push
enter
dec
sti
mov
or
push
and
pop
cmp
sub
add
in
int
hlt
addr16
inc
pop
repnz
sbb
fimuls
cmp
sub
inc
mov
xchg
shll
repz
push
push
mov
loop
sahf
mov
lcall
jg
bound
dec
cmp
out
stos
cmc
mov
or
pop
push
shr
xor
push
ja
pusha
mov
daa
adc
inc
add
lcall
xchg
cmp
rcl
fwait
sub
inc
aas
ret
fwait
adcb
fisttpll
dec
inc
ds
fwait
push
fimuls
imul
ficomps
es
adcl
pop
sbb
adc
sbb
bound
fstps
adc
sub
jo
pop
mov
ja
sub
sub
or
repnz
push
push
ja
bound
jg
aam
pop
cmpsl
lods
dec
test
xchg
outsb
cmp
dec
mov
fiaddl
pop
push
adc
xor
jg
outsb
stos
fwait
cmp
dec
adc
sahf
or
dec
sbbb
pop
addb
push
lcall
and
popl
mov
mov
outsb
xorl
dec
ds
ss
mov
das
dec
jp
insl
in
pop
nop
lahf
jae
adc
push
pop
dec
push
test
adc
pop
pop
mov
call
movsb
inc
cmpsl
call
pop
pop
cmp
dec
pop
cs
push
add
jns
aaa
lret
pop
inc
pop
mov
xchg
pusha
or
sub
stos
outsb
cmp
mov
adc
xchg
pop
xchg
popa
push
out
jns
pop
adc
lahf
dec
pop
sbb
adc
fmulp
xchg
popa
fldl
orb
fiadds
gs
push
xchg
fstps
xor
movsb
stos
cmp
sub
or
pop
xchg
loopne
sbb
cwtl
flds
push
add
pop
cmc
and
inc
ja
nop
loopne
jno
popf
loopne
fimuls
test
aaa
sbb
pushl
pop
xorb
pop
js
loopne
aaa
lods
loopne
xor
dec
mov
into
int3
adc
pop
popa
sub
fisubrl
and
loopne
jle
repz
daa
mov
xor
ss
jb
push
inc
lcall
adc
cmp
add
add
or
inc
xchg
cmpl
inc
dec
jp
subl
cmp
cmp
mov
cltd
addb
cmp
bound
xchg
dec
mov
add
mov
mov
adcl
cltd
test
cltd
jo
cmp
push
dec
add
loope
inc
pusha
lock
mov
leave
call
sbb
push
pop
incb
inc
out
or
push
fwait
add
pop
test
addr16
mov
fwait
inc
adc
pop
test
leave
in
hlt
pop
mov
push
add
add
loop
or
xor
into
ret
popl
sub
pop
ljmp
cmp
dec
xchg
repnz
bound
ss
mov
sti
dec
int
mov
xabort
add
imul
sub
add
push
add
pop
scas
sbb
mov
imul
ss
jp
repnz
jp
push
mov
hlt
fwait
sub
inc
dec
sub
pop
and
push
and
scas
inc
xchg
js
lahf
lahf
xchg
outsb
or
cmc
or
mov
mov
lcall
add
rolb
fwait
repnz
daa
sub
dec
and
dec
sbb
js
mov
sbb
test
pop
sbb
fsubr
and
or
fwait
movb
dec
sub
sbb
push
jle
subl
sub
sahf
dec
test
ret
fwait
ret
dec
loop
orb
ret
fwait
and
xor
push
orl
imul
arpl
mov
dec
sahf
popa
ret
fwait
movsb
sub
push
or
inc
or
inc
imul
je
pop
insb
jp
fsubs
cmpsl
push
mov
repz
and
arpl
xor
inc
shll
mov
lcall
sub
inc
les
cwtl
in
jp
mov
out
xor
std
push
jmp
cmp
xchg
sbb
pop
inc
jns
sub
xchg
hlt
popa
dec
nop
xor
jp
push
or
mov
pop
inc
filds
dec
outsb
call
inc
push
jb,pn
dec
dec
jg
imul
in
inc
push
dec
div
fs
dec
data16
imul
mov
jnp
jle
sub
pop
jg
js
mov
imul
imul
out
adc
cmp
outsb
jbe,pn
data16
pop
aam
cmp
and
stos
jp
flds
mov
mov
lahf
mov
rcll
lock
lock
movsl
cmpsb
sbb
and
test
cmpsl
pop
jge
jg
cwtl
outsl
sbb
push
outsl
jb
dec
jecxz
cmpsl
sub
or
dec
cmp
invd
imul
dec
dec
sbb
cmpb
jp
out
sbb
cmpsl
xchg
cmp
sbb
cmpl
mov
es
repnz
mov
jo
jle
adc
and
dec
cmp
sbb
dec
dec
cmp
inc
sbb
jp
and
enter
loop
push
mov
daa
sub
or
lret
pop
lret
push
xchg
pop
dec
adc
inc
lret
inc
lret
inc
mov
insb
pop
dec
adc
in
lcall
push
movsl
sbb
cmpsl
js
fwait
arpl
dec
outsl
mov
mov
pop
cmp
imul
insb
dec
sbb
aad
mov
push
pop
or
pop
cmp
arpl
inc
outsl
es
cs
xor
adc
push
push
cmp
inc
stos
int3
sbb
mov
cmpsl
mov
sub
pop
mov
outsb
jmp
out
imul
daa
cmp
add
mov
mov
mov
and
mov
push
adc
dec
cmp
jle
mov
out
aaa
adcb
xor
sub
inc
inc
sbb
insl
pop
and
stos
xchg
inc
fidivrs
cmpsl
xor
lods
inc
incb
imulb
push
sbb
cli
jbe
inc
add
inc
inc
cld
inc
inc
inc
mov
lods
es
aaa
sbb
popa
nop
inc
push
dec
or
add
stos
cmp
pop
or
or
or
pop
jge
mov
add
add
lods
xchg
adc
add
test
or
jbe
push
dec
test
dec
or
dec
or
jne
int
dec
push
ret
and
cs
sub
into
mov
gs
and
cli
test
or
or
add
dec
pop
add
dec
sbb
adc
adc
sub
pusha
push
loope
or
ret
lea
testb
lret
xor
es
cwtl
adc
sbb
sub
or
push
fimuls
or
or
or
loop
inc
and
mov
fmull
rcrl
add
neg
je
lret
sub
aaa
imul
repnz
cmp
lret
jmp
or
out
in
or
push
jg
ret
js
ret
ss
sbb
xor
ljmp
movsl
or
add
xor
or
sub
and
push
inc
sub
push
sub
pop
dec
cli
sbb
in
ret
jp
or
leave
push
pop
movsl
add
sbb
test
cmp
adc
xchg
inc
movsb
pop
push
fwait
push
dec
rcll
ret
mov
mov
mov
add
rolb
bound
push
jg
ret
push
push
sarb
add
add
imul
stos
lods
add
or
xor
pop
or
hlt
mov
add
dec
mov
ljmp
mov
adc
ds
dec
pop
subl
inc
add
sbb
cs
inc
add
divb
dec
int3
mov
test
fwait
insb
sub
adc
repnz
in
inc
rcrb
mov
mov
jle
push
inc
sub
cmp
addl
out
sub
dec
int3
mov
cmpsb
sbb
bound
push
dec
inc
xor
repnz
in
inc
ficomps
stos
addb
inc
inc
fwait
xor
and
sub
xor
sar
add
sbb
cs
mov
xchg
sbb
addb
mov
dec
loopne
sub
xchg
insb
adc
cmp
dec
inc
push
cmpl
and
push
jl
sbb
sub
dec
les
out
sbb
sub
int3
push
sbb
fwait
and
xor
push
andl
mov
fwait
mov
ljmp
push
cs
ds
dec
sub
es
lret
mov
cwtl
ret
fwait
mov
cmp
test
cmpsb
jbe
sub
push
jp
mov
nop
dec
cmpsb
testb
sub
fisubrs
enter
test
pushf
dec
xorb
and
mov
inc
rcrb
mov
pop
inc
dec
lahf
sub
into
or
rclb
mov
jp
pop
inc
dec
fwait
cmp
sub
adc
leave
cli
addl
ficomps
mov
test
adc
cmp
sub
ds
adc
loopne
jl
insb
mov
ret
fwait
sub
sbb
cmp
mov
sbb
movb
cmpsb
sub
jle
outsb
cs
inc
dec
fwait
cmp
push
dec
add
dec
mov
sbb
repnz
mov
mov
push
inc
inc
fwait
dec
sub
dec
and
push
sbb
mov
call
fwait
mov
mov
pop
inc
dec
fwait
xor
and
sbb
or
fiadds
fwait
mov
mov
ljmp
or
mov
cs
inc
xor
lock
rolb
idivb
dec
dec
sarb
add
fwait
push
cmp
rorb
mov
mov
scas
cmp
add
cs
sub
dec
sbb
scas
or
stos
sub
adc
add
sub
lahf
sbb
add
cmp
add
add
adc
pop
shrb
les
sbb
lds
sub
sbb
xchg
and
fwait
add
sub
dec
mov
adcl
outsb
fwait
jle
add
dec
mov
sub
clc
sub
rorl
inc
sub
cmp
inc
dec
pop
outsb
xorl
cs
inc
mov
dec
out
incb
inc
and
sub
push
outsb
cmpl
cs
inc
mov
dec
rcl
loop
sub
push
adc
fwait
xor
inc
dec
push
pusha
xorl
lods
inc
mov
ret
dec
cli
testb
add
dec
xor
inc
push
sbb
pop
xchg
pop
cmc
jg
push
or
add
or
loop
cmp
mov
adc
lods
push
and
push
sub
push
pop
int
adc
pop
lret
cmp
mov
or
orl
push
add
inc
add
jae
push
sbb
pop
adc
sub
cmp
pop
sub
cmp
adc
xor
or
sbb
ds
orb
xchg
adc
mov
cmp
ret
sbb
ret
in
sbb
add
mov
mov
mov
pop
pusha
jb
in
into
mov
mov
insb
pusha
add
shlb
inc
fnstsw
inc
sbb
sbb
repnz
jmp
fwait
sbb
push
orb
jns
ud2
adc
adc
xchg
lds
hlt
push
add
loop
jns
adc
mov
mov
inc
xor
fcmovb
clc
leave
mov
je
xor
aaa
mov
cmp
shll
push
push
je
adcl
orl
pop
loop
and
mov
xor
jbe
cmc
jo
in
frstor
or
jp
out
je
dec
dec
mov
jle
pop
and
or
and
fwait
ret
mov
stos
mov
inc
cli
cmp
std
mov
pop
mov
adcl
mov
sbb
pusha
dec
mov
rep
inc
push
bound
call
in
inc
pop
xor
add
loope
dec
cmpsb
dec
fsubrl
lock
loop
les
stos
mov
dec
or
jle
jecxz
and
cmpsb
mov
push
loop
jle
add
repz
mov
out
dec
mov
cmp
jle
sub
pop
outsl
xor
lds
mov
orl
loope
sub
and
jg
inc
mov
test
cmp
fstpl
or
jnp
mov
add
cmp
mov
mov
mov
ss
dec
xor
inc
push
adc
sti
mov
mov
leave
or
nop
scas
sub
pusha
pop
adc
ficompl
xor
dec
push
pop
dec
cmp
outsl
sbb
out
dec
std
mov
daa
stos
and
xchg
rorl
sbb
dec
cmp
repnz
dec
das
dec
test
sbb
popf
shr
cwtl
adc
insl
cs
jns
and
xchg
xor
je
addr16
div
pop
jecxz
popa
pop
sbb
xchg
js
cmp
or
or
and
jne
cmp
frstor
dec
sbbb
inc
sbb
mov
and
in
cwtl
sbb
jne
mov
xor
add
jns
mov
andb
adc
sbb
lea
mov
push
into
std
dec
xor
adc
mov
inc
mov
or
jl
cmp
sbb
dec
pop
outsl
andl
sub
imul
ljmp
lds
adcl
sbb
ret
cmp
or
pushf
fistpl
mov
cli
and
cmp
mov
test
test
dec
xor
ss
adc
jbe
test
cli
fadds
sub
or
sub
lret
mov
outsl
icebp
adc
inc
cmp
lahf
sbb
jbe
test
mov
lea
dec
in
ret
loope
sub
ljmp
ret
test
mov
xorl
sub
ljmp
mov
mov
fucomp
mov
add
jbe
test
dec
pop
ret
pop
adc
es
adc
sub
sub
jbe
test
cwtl
ss
test
test
push
xchg
xlat
sahf
add
jbe
test
imul
push
sub
fidivrs
mov
pop
movsl
cld
jp
sub
aaa
das
push
sub
pop
ss
jg
fs
push
adc
dec
adc
gs
es
clc
pop
jno
fs
jne
incl
mov
arpl
adc
dec
jp
js
xor
imul
mov
and
out
jns
jg
loope
push
push
mov
lea
imul
popf
mov
pop
rsqrtps
aad
dec
loopne
push
push
xchg
pop
push
pop
jp
jmp
jo
pop
repnz
cmp
outsb
data16
jns
inc
xchg
adc
jae
nop
sbb
lods
or
cmp
leave
mov
xor
jle
fldt
add
inc
mov
and
cmp
dec
jb
lahf
jb
imulb
xor
mov
push
xchg
loop
js
fwait
lea
push
mov
mov
pusha
rolb
fcmovu
mov
adc
dec
imulb
dec
bound
dec
adc
popl
aas
add
loop
ljmp
adc
sub
jle
sub
dec
push
fdivs
and
dec
jle
and
fiaddl
sarb
pushf
mov
and
pop
bound
cs
pop
push
inc
mov
jo
cmpsl
sbb
push
in
enter
mov
mulb
je
aaa
stos
mov
adc
xchg
inc
popf
lret
jns
add
arpl
add
popa
cltd
and
repnz
xor
les
orl
ljmp
dec
dec
push
pop
pop
cli
add
pop
and
pop
std
inc
mov
stos
mov
aaa
pop
sbb
push
enter
sbb
mov
jg
cmp
pop
sbb
sbb
pop
fnstcw
xor
repnz
cmp
sbb
sub
pop
xchg
fcoms
repz
adc
cmc
pop
cmpsb
insb
cmpsl
and
pop
or
sbb
jb
loope
pop
lods
scas
mov
xchg
add
pop
sbb
cli
leave
scas
sub
add
clc
cmp
lret
dec
loop
or
dec
mov
repnz
dec
jmp
mov
sarb
in
inc
adc
pop
pop
adc
out
clc
and
loop
xor
sbb
pop
and
inc
stc
idivb
pop
cltd
dec
ja
pusha
cmc
arpl
test
mov
mov
imul
or
les
jns
mov
fnsave
xchg
sbb
inc
test
loopne
loop
pop
lahf
lahf
nop
sub
es
lds
jnp
stos
push
xchg
or
or
insl
push
add
jmp
aaa
mov
cmp
dec
or
sar
push
xlat
push
fwait
ret
mov
push
jecxz
outsl
fwait
pop
pop
imulb
and
push
dec
pop
ja
jns
xchg
jecxz
nop
push
mov
mov
sarl
pop
xchg
pop
mov
subl
push
sbb
fcompl
adc
pop
pop
sbb
adc
mov
mov
aas
dec
ss
cmp
xchg
int
int3
sbb
jne
scas
fwait
mov
jge
xchg
mov
imul
mov
and
cmp
jge
dec
add
imul
dec
mov
in
sbb
and
hlt
outsb
or
jecxz
adc
xorl
pop
ret
sti
pop
lods
hlt
cmp
xchg
je
enter
push
adcl
mov
push
push
jl
xor
mov
gs
adc
sub
cmp
orl
ljmp
les
das
lea
imul
das
push
mov
and
movsl
hlt
adc
daa
andl
push
into
pusha
lcall
repz
cmp
sbb
shl
jp
out
add
adc
push
ret
leave
adc
push
lret
cld
xor
pop
push
jle
stos
clc
xchg
pop
jp
push
lcall
xor
jle,pn
or
sbb
lods
add
inc
pop
adc
pusha
cmp
loopne
jno
pop
push
inc
sub
inc
mov
loope
test
or
xchg
xor
xchg
push
or
sbb
sub
cmp
repnz
lret
js
addr16
insb
xchg
cmp
loop
inc
mov
mul
pusha
inc
dec
jg
pop
out
es
jg
shll
sub
fidivrl
repz
mov
sub
lahf
sbb
pop
mov
pop
pop
sbb
ret
repnz
mov
pusha
or
adc
loop
std
add
repnz
mov
sub
lcall
ss
pop
sub
xchg
leave
pop
xor
sub
sahf
dec
gs
pop
dec
mov
jecxz
jl
dec
adc
sbb
xor
sub
lret
mov
mov
andps
lods
push
sbb
popf
mov
aaa
insb
jge
int3
test
or
push
sbb
jnp
mov
pop
sbb
and
hlt
inc
dec
sub
and
and
mul
mov
mov
pop
testl
loop
push
shrb
sub
inc
push
inc
push
pop
jg
gs
xchg
mov
repnz
inc
inc
sub
in
inc
fwait
push
test
adc
push
loope
cmp
or
pop
push
or
mov
loop
test
test
popa
mov
add
dec
dec
jle
cmp
jg
pop
or
inc
pop
ret
sbb
in
je
hlt
incb
mov
adc
mov
add
or
lahf
leave
push
xchg
lcall
sbb
inc
jecxz
lea
cmp
mov
lods
fwait
xchg
push
hlt
push
fwait
mov
pop
dec
adc
in
fwait
movsb
cmp
sbb
sbbb
insb
leave
xor
pusha
pop
inc
sbb
jg
dec
scas
push
pop
xchg
mov
pop
insl
xchg
lods
fistps
mov
jne
cltd
inc
and
xor
push
pop
push
jns
inc
dec
jo
push
cld
cmp
dec
adc
negb
xchg
cmp
push
or
push
lock
push
je
mov
stos
mov
orb
inc
pushf
xor
xchg
and
mov
or
rolb
orl
push
adc
push
pop
sub
add
sahf
getsec
es
add
xor
frstor
out
movsb
clc
sbb
pop
sbb
test
es
je
mov
xchg
sbb
repz
push
mov
xor
je
push
add
sub
jle
pop
cmp
pop
cmpsb
das
push
ficomps
ja
inc
adc
add
cmp
data16
xor
repz
mov
and
sub
add
and
ljmp
push
test
pushf
leave
sbb
ret
in
mov
rclb
mov
push
test
or
sarb
sbb
push
mov
mov
fwait
lcall
sub
cli
push
mov
inc
sbb
cmp
push
jae
xor
cli
and
jne
ljmp
dec
xor
dec
lods
sub
daa
loope
sbb
sbb
add
add
mov
xchg
fwait
imul
addr16
push
add
xchg
lcall
push
aam
jle
les
cs
sbb
stc
lret
int3
add
add
dec
and
enter
sbbb
pop
jbe
cmp
stos
adc
pusha
out
adc
adc
clc
bound
adc
sti
cmpsl
test
mov
testb
aam
inc
mov
leave
cld
mov
pop
cli
out
mov
iret
dec
testb
inc
jp
les
repnz
mov
adc
xchg
sub
cld
adc
pop
and
int3
inc
cs
add
cwtl
scas
mov
inc
push
or
push
xor
jle
insb
cli
jp
loop
loop
sti
sub
fistps
add
and
sub
loopne
dec
add
push
test
ret
push
or
sbb
push
inc
push
stos
arpl
adc
cmp
mov
cmp
inc
lahf
fstl
push
pop
xchg
sbb
mov
xor
xchg
dec
inc
dec
sub
mov
xor
mov
loope
adc
sbb
sbb
loopne
popa
jne
jnp
mov
jle
stos
pop
rcr
fsubrs
jno
psrad
cmpl
add
sbb
xchg
mov
ret
mov
mov
xchg
rcrl
mov
cmpb
jecxz
xchg
and
lea
mov
xor
loop
push
popa
sbb
adc
mov
mov
int
sub
and
daa
inc
in
sbb
dec
adc
mov
push
sub
mov
lcall
les
lods
in
dec
lret
xor
enter
inc
pop
outsb
fidivrl
mov
dec
dec
push
out
pop
adc
loop
push
iret
shll
mov
adc
push
push
stos
js
inc
jg
cs
xchg
mov
jecxz
stos
cmp
inc
sbbb
dec
jge
cmp
das
jecxz
subl
sti
jmp
cs
mov
sub
adc
sti
adc
sbb
enter
jecxz
mov
outsb
sub
jle
add
jno
add
imul
jg
xchg
mov
bound
inc
iret
loope
mov
mov
and
popa
xor
xor
lret
mov
inc
push
xchg
sbb
or
push
inc
mov
mov
popf
sbb
es
adc
xorl
icebp
adc
cmp
sub
push
lret
pop
movlhps
sub
lea
pop
iret
sub
mov
bound
adc
xor
dec
lea
je
push
fstl
jecxz
inc
push
ds
push
mov
jecxz
dec
sarl
pop
or
test
inc
ljmp
pop
add
add
out
add
sbb
out
mov
add
das
jae
add
mov
mov
insb
add
cs
incl
add
clc
mov
das
fiadds
dec
scas
sub
leave
inc
sub
insb
adc
cwtl
lods
sbb
cmp
pop
insl
repnz
jecxz
data16
jo
ret
xchg
loope
imul
pop
pop
sub
sbb
loope
mov
inc
adc
sub
bound
mov
mov
mov
inc
or
jo
repz
jle
and
pop
jmp
jl
sub
movb
jp
cmp
fidivrs
mov
adc
mov
mov
cmp
sbb
inc
rsm
nopl
cmp
sbb
repnz
clc
jne
cli
sbbl
leave
dec
and
sbb
aad
or
fwait
orl
lret
outsb
out
cmp
sub
in
sub
xor
mov
xor
and
leave
insl
adcl
or
mov
pop
pusha
inc
in
push
add
lret
and
xor
imul
xchg
add
jns
mov
add
inc
and
popa
sbb
js
icebp
mov
sbb
repnz
mov
push
nop
stos
and
or
jg
sti
pop
push
and
push
push
jl
add
push
lea
pop
ficompl
pop
mov
cli
aas
imul
pop
push
adc
int3
cmpsb
push
sub
dec
and
mov
lcall
mov
int3
push
jmp
xor
jnp
lret
imul
pop
jne
xor
fwait
lods
gs
rol
xor
stos
aaa
mov
adc
jae
jg
xchg
dec
dec
dec
jae
imul
testl
xchg
xchg
adc
add
sbb
sbb
and
dec
add
imul
divb
popf
ljmp
push
lds
adc
cmp
add
mov
loope
adc
pop
fbld
shll
and
pusha
mov
xor
pop
adc
jae
lods
push
sub
aam
push
add
or
adc
inc
push
and
mov
jecxz
mov
jbe
and
push
dec
adc
mov
inc
aas
or
or
sub
pop
in
push
dec
sub
rorb
adcl
add
or
and
je
add
outsb
and
push
jo
or
pop
loop
or
mov
push
lds
adc
ja
and
xor
sbb
dec
or
cli
loope
pop
stos
sbb
shll
in
and
push
in
or
mov
mov
pop
int
ljmp
or
push
adc
int3
mov
dec
mov
xor
jge
and
repz
xor
dec
int
add
push
pusha
outsb
jle
sahf
adc
jne
out
fs
inc
pop
lret
mov
or
cli
xchg
mov
cmp
hlt
divb
test
jecxz
or
xchg
add
popf
test
jo
cmpsb
loope
loop
sub
pop
inc
push
sbb
sub
hlt
xor
jecxz
xor
es
lahf
pop
pop
out
inc
fimull
lods
xchg
pop
out
inc
cli
movsb
push
inc
adc
push
insl
push
pop
or
rcrb
and
add
adc
imull
cmp
mov
popf
mov
lret
xchg
sbb
and
push
xor
outsl
shlb
lea
addb
lret
or
insb
mov
test
notl
dec
xor
pushf
imul
adcl
jg
xor
dec
jl
sbb
sbb
xlat
fldenv
sbb
inc
push
dec
int
or
aam
inc
out
sub
js
jno
inc
mov
or
outsb
lahf
and
push
jbe
or
lret
or
add
jl
into
shl
pusha
decb
pop
test
loop
stc
and
cltd
stos
leave
sbb
jle
subl
adc
stc
sub
mov
test
fwait
inc
fistpl
add
or
pop
add
dec
dec
aas
dec
leave
sbb
mov
adc
xor
mov
jbe
push
in
subl
insb
mov
das
dec
dec
cwtl
movsb
adc
sbb
sub
or
sbb
add
mov
jmp
cmp
add
add
dec
sbb
movb
test
icebp
or
jecxz
loopne
mov
add
pop
mov
cmp
sbbb
dec
movsl
enter
adc
bound
lret
push
jg
es
sbb
xor
repz
stc
dec
mov
mov
lods
adc
cmp
sbb
repnz
loope
das
add
pop
in
data16
mov
lret
add
push
test
sbb
fistl
jmp
dec
out
xor
push
xor
dec
push
inc
adc
enter
adc
mov
sub
out
xor
mov
or
xchg
nop
push
scas
test
sub
pminsw
stos
cmpsl
jnp
push
push
fstpl
stc
lods
cs
andb
cmp
fwait
dec
pop
mov
negl
stos
sbb
and
incl
pop
cs
sub
scas
test
jmp
mov
leave
xor
mov
andb
dec
lea
jp
dec
out
and
sahf
sarl
sbb
mov
inc
sub
int3
clc
sbb
adc
jb
mov
test
cmp
push
sbb
sub
movsbl
pop
cli
sti
push
iret
add
mov
in
and
jns
sahf
sub
or
pop
addr16
lret
fisttps
cmc
js
mov
adc
mov
popf
push
jbe
adc
mov
adc
dec
adc
rcll
rolb
sbb
cmp
outsb
std
xorb
or
cmp
xor
or
adc
sbb
jg
stos
lahf
and
cmp
inc
cmp
jle
sbb
daa
or
push
push
push
ret
leave
out
ds
ret
add
bound
dec
hlt
loop
inc
add
aad
mov
and
jl
xor
add
push
orl
mov
nop
mov
add
and
push
mov
cmpsb
ret
icebp
or
fldcw
adc
jecxz
pop
std
in
cmp
cs
inc
divl
sub
xchg
pusha
hlt
push
pop
jbe
or
lds
ret
or
call
push
or
rcrb
push
push
js
pop
lock
ljmp
pop
outsl
lock
bound
loope
hlt
add
aam
rclb
sub
outsb
pop
cmpsl
xchg
ja
cmpb
mov
sbbl
jae
inc
es
sbb
mov
push
pop
popf
nop
test
cmpsl
jecxz
pop
in
mov
mov
es
sub
mov
sbb
aam
pop
bound
inc
inc
push
test
cs
push
pop
mov
lods
dec
push
nop
mov
addb
xor
dec
lret
cmp
in
mov
test
popf
add
xor
scas
dec
loop
das
xor
out
and
pop
sbb
arpl
sbb
dec
sbb
pop
or
in
dec
sbb
fistl
loope
mov
cmpsl
test
daa
dec
das
mov
inc
loop
mov
les
add
sub
inc
mov
pop
mov
push
jle
loopne
xchg
adc
mov
test
dec
add
xor
jl
mov
incb
and
sub
in
cld
insb
mov
mov
sub
sub
mov
jle
addr16
sbb
jg
addl
sub
aaa
ss
xor
jmp
sbb
jge
and
ja
jnp
mov
sub
outsb
or
ret
out
adc
jmp
fs
pop
rorb
aas
push
add
mov
repz
in
sarb
into
dec
inc
cmp
sub
int3
sarb
mov
xchg
xchg
sti
and
and
loope
or
jle
pop
xchg
add
add
adc
bound
jle
pop
pop
xchg
inc
sub
push
jg
orl
cmpsb
push
inc
jle
daa
roll
imul
test
jge
cld
jg
mov
pop
jae
mov
pop
sbb
jecxz
mov
mov
xor
sbb
sti
mov
pop
jns
mov
push
ror
mov
pop
adc
xchg
rol
testl
loope
or
inc
ss
xchg
rcl
shll
sbb
inc
push
push
cltd
dec
out
ds
mov
inc
sub
stos
out
jle
fbstp
in
ret
mov
mov
and
popa
sub
or
loop
mov
fs
sub
fs
mov
inc
lock
data16
js
cld
and
aam
dec
mov
xchg
into
popf
sbb
ljmp
shlb
insb
add
add
ljmp
sbb
js
cmc
mov
mov
or
stc
scas
shll
lret
lea
jne
cld
push
adc
or
jp
dec
cmp
adc
cmp
cmp
jne
sbbb
jo
xor
push
lods
fiaddl
cmp
and
and
pop
movsl
inc
sub
int3
test
dec
les
push
push
fcomps
push
insl
push
ss
into
xor
mov
repz
jns
dec
in
cs
cmpl
adc
orb
push
cmp
sarl
push
sbb
mov
fimuls
inc
loopne
test
imul
xor
dec
int
jns
inc
sbb
inc
add
decl
cmp
cmp
jbe
nop
push
fwait
shl
xorl
dec
nop
ficompl
movsl
in
mov
cmc
mov
push
push
in
jg
jl
lods
in
lods
pop
insb
std
or
bound
mov
dec
jle
xchg
push
push
lods
sbb
hlt
icebp
sbb
jmp
push
test
enter
xchg
xchg
insl
pop
pop
add
add
cwtl
into
push
jle
pop
fidivrs
jmp
sbb
dec
xchg
ret
jl
inc
repnz
ljmp
test
pop
sbb
sbb
add
mov
dec
iret
pushf
outsl
pusha
sub
xchg
adc
or
xor
jne
stos
loopne
ljmp
sbb
mov
iret
scas
cmp
push
cmp
stos
into
xor
ret
lcall
sbb
xor
pop
out
imul
push
dec
ds
cmp
xlat
cmc
dec
imul
xchg
mov
pop
push
sbbb
push
pop
sub
repz
int3
sbb
dec
and
mov
and
shrl
pusha
pop
xchg
push
bound
pop
cwtl
and
aaa
sbb
jmp
jp
pop
ds
ret
xchg
push
repnz
push
mov
pop
mov
into
dec
xchg
inc
loop
add
adc
sbb
push
sbb
cmp
add
pop
call
ret
cmpsb
push
lahf
inc
pop
hlt
push
dec
mov
or
push
loop
push
or
cltd
pushf
push
dec
dec
sahf
jge
dec
jp
push
std
sub
xchg
xchg
jmp
pop
pop
xchg
push
pop
loop
cs
lds
out
stos
pop
mov
ljmp
sub
sbb
add
sub
mov
pop
inc
imul
mov
stos
jns
jbe
out
fisttpll
pusha
sbb
sti
mov
test
jecxz
cmp
inc
dec
jb
push
pcmpgtw
push
or
jno
pop
ret
fmull
xor
add
jg
dec
pop
pop
or
addr16
fimull
enter
xchg
out
cmp
js
push
sahf
bound
add
jns
jecxz
sahf
stos
add
enter
add
adc
repz
inc
dec
lea
cmp
jl
outsb
dec
jg
or
dec
cmp
ljmp
mov
or
ret
cmp
xor
xchg
inc
mov
push
fwait
scas
and
cmp
and
pop
cmp
and
mov
mov
push
cld
lods
push
movntps
xchg
cmp
or
mov
inc
std
aam
ss
sub
push
or
adc
gs
lret
fwait
pusha
lret
sub
mov
pop
sbb
mov
push
addl
dec
or
mov
nop
inc
xchg
aaa
pushf
shrb
push
iret
out
lods
adc
sub
ret
pop
xor
out
jl
push
add
xor
push
add
sbb
cmp
and
jecxz
pop
and
sbb
scas
loop
scas
cld
mov
ds
dec
push
adc
ret
jae
pop
dec
jle
mov
ret
sub
dec
pop
sar
dec
sbb
loope
fwait
or
add
loope
dec
int
repnz
decb
js
inc
fldenv
jmp
stc
push
mov
das
and
dec
inc
mov
pop
lock
add
jbe
cs
mov
bound
out
add
mov
xorb
mov
pop
mov
loopne
fst
fisttpll
sub
cs
xor
mov
das
orl
or
mov
fcoml
inc
push
pushf
push
or
add
mov
pop
ljmp
movsb
and
push
inc
mov
rcrl
pop
sub
loop
movsl
mov
and
popa
subl
mov
or
add
pusha
dec
je
call
inc
sub
dec
jle
adc
mov
mov
ret
loopne
jg
sbb
inc
js
or
add
cmovo
pusha
sub
adc
fwait
cmpsl
je
sbb
popf
leave
testl
push
into
cld
lret
or
and
pop
add
loope
inc
sub
mov
dec
mov
es
xchg
dec
and
pop
jo
inc
push
adc
or
dec
stc
pop
pop
cmc
sbb
jle
repz
repnz
inc
cmp
inc
ljmp
push
ja
pusha
jmp
cli
dec
pusha
sub
sbb
mov
aaa
stc
fnclex
lods
stos
cld
rclb
mov
sbb
push
mov
ret
inc
insb
inc
mov
cs
dec
rcll
ret
insb
addl
inc
and
lods
sub
xchg
cmpsb
pop
push
movsl
sahf
lcall
movsl
sarb
xorl
sbb
add
push
mov
push
in
arpl
xchg
nopl
xchg
outsl
cmp
inc
mov
in
fldcw
dec
pop
xor
adc
mov
add
jno
mov
dec
mov
mov
das
fwait
mov
add
pop
xor
jmp
repnz
lret
data16
mov
pop
bound
out
adc
mov
inc
jle
rolb
pop
lods
inc
cli
dec
pop
ja
in
jmp
das
xchg
rcrb
leave
jbe
jecxz
add
cmpsl
sub
es
xlat
or
ja
sbb
sbbb
cwtl
ret
lret
rcll
stos
jno
outsb
scas
push
xor
aam
dec
add
sbb
xchg
test
dec
fdivs
je
stc
jo
xor
inc
mov
and
jae
sub
or
cmp
mov
repnz
jbe
push
mov
mov
ja
xor
mov
dec
sbb
jbe
repnz
push
jge
lods
and
xor
fucom
fdivs
es
jp
lahf
dec
je
mov
ret
pop
and
or
sbbl
inc
jg
lds
arpl
jbe
mov
clc
lret
inc
in
or
or
int3
jle
sub
lret
out
push
add
orl
and
mov
int
dec
lret
or
jle
and
aaa
sbb
dec
adc
add
lahf
pop
dec
xor
jne
cmp
or
mov
cs
or
fisubrl
fs
or
stos
push
inc
sbb
repnz
ss
pushf
stos
jge
and
repnz
lds
incb
fidivl
xchg
popf
push
pop
add
ljmp
xchg
in
clc
xor
jg
cmp
pop
push
jle
sbb
rclb
shll
inc
or
bound
negb
inc
scas
loopne
or
dec
pop
dec
ror
xchg
int
fcmovnb
sub
sbb
sub
push
push
pop
pop
stc
sbb
and
cltd
mov
mov
xor
and
cld
ret
int3
sub
fmuls
xor
adc
inc
hlt
ss
addb
or
push
orb
or
dec
push
push
xchg
stos
jne
pop
add
stc
je
daa
cmp
jl
mov
xchg
add
cli
pop
inc
pop
jnp
dec
jmp
cmpsb
mov
sahf
mov
add
cltd
daa
lret
xchg
jl
daa
sbb
lods
je
inc
xlat
cmp
call
mov
sbb
jg
pop
mov
sbb
cmp
pop
testb
out
mov
ret
mov
ljmp
mov
loop
lahf
push
inc
ja
sub
stc
jb
hlt
std
aad
inc
sbb
add
repz
pop
pop
shll
xchg
cmp
inc
lds
jl
stc
push
popf
dec
loope
jp
or
xchg
cs
mov
sub
daa
fwait
pop
lcall
leave
es
shr
mov
sub
jp
fsubs
pop
je
leave
or
cmpb
inc
mov
std
es
sbb
add
sbb
fisttpll
sbb
sub
xchg
dec
sbb
jp
outsb
fs
cmp
movups
insl
adc
clc
mov
insb
in
imul
in
fmull
push
or
inc
pop
out
adc
and
pushf
sbb
enter
dec
pop
cmc
aas
dec
mov
in
scas
ret
xchg
sbb
sub
lods
fisubl
popl
jg
imulb
dec
push
cmp
xchg
sbb
in
inc
xorl
nop
pop
fdivs
fdivrp
push
scas
lret
dec
mov
ret
pop
cmpsb
in
push
imul
xchg
std
fistpll
lods
insl
int
inc
loop
ds
inc
inc
xor
andl
cs
add
add
dec
popa
lret
sub
push
loop
std
mov
push
push
adc
push
mov
cmp
addl
cli
popa
cld
es
jno
fcoms
push
pop
lock
in
push
loop
cmpsb
push
cld
dec
push
repnz
xor
outsl
dec
sbb
in
imul
sub
mov
jnp
cmp
repnz
into
mov
cltd
xchg
adc
adcb
in
addr16
fisttpll
jecxz
inc
ds
dec
out
xor
decb
orb
xchg
inc
jge
and
dec
push
push
push
lods
sbb
loop
pop
sub
add
adc
bound
movsl
pusha
or
fbld
or
sub
out
mov
sbb
jp
xchg
iret
data16
xor
inc
adc
mov
mov
lret
das
jge
sbb
test
cmp
sbb
add
mov
sbb
mov
pusha
leave
test
push
mov
sub
and
xor
aaa
dec
and
push
cmp
mov
fidivrs
out
and
cmp
mov
xchg
imul
push
bound
movsl
les
dec
or
arpl
or
push
icebp
loope
mov
inc
or
jle
bound
dec
add
or
xlat
filds
mov
mov
jp
cmc
adc
ficoms
ljmp
adc
adc
lcall
mov
or
mov
bound
and
inc
mov
xchg
daa
dec
ds
add
dec
shrb
loop
daa
inc
push
addb
push
mov
loop
lret
daa
pop
fcoml
pop
sub
fnstcw
idivb
add
test
lcall
sbb
mov
mov
inc
jbe
add
jle
xor
outsl
imul
dec
sbb
dec
das
fimuls
xchg
or
cmp
lea
add
jmp
cld
lret
cmpl
push
inc
pusha
adc
jg
xor
lcall
popf
mov
lods
pop
sbb
roll
les
jg
push
dec
notl
jg
push
pop
out
out
sub
imulb
pushf
push
enter
push
imul
repz
inc
aas
mov
iret
test
bound
cmp
jbe
outsl
jmp
jle
adc
and
fidivrl
pop
sbb
xchg
mov
add
jae
pop
mov
sub
pop
adc
test
imul
add
push
scas
add
js
and
inc
fldcw
pop
test
inc
xchg
aas
ss
sahf
cmp
loop
int
xchg
cmp
add
cmp
pop
adc
push
adc
dec
and
sbb
mov
dec
push
loop
fidivs
jg
inc
mov
cmp
and
ds
cltd
imul
xor
or
cmpl
mov
dec
mov
pop
sub
scas
out
test
mov
aad
add
shr
outsl
ror
dec
hlt
sbb
mov
mov
jg
inc
scas
mov
cmc
cmp
pop
enter
add
lds
xor
pop
push
xchg
decl
dec
pusha
add
pop
aam
clc
loop
in
stc
lea
jle
lcall
adc
push
or
push
jecxz
sub
jo
jg
imulb
div
lods
test
jbe
and
mov
stos
mov
xlat
xchg
sbb
sbb
xchg
pop
ljmp
mov
fisubrs
fwait
cmp
or
bound
test
into
push
jmp
pop
adcl
ss
clc
pop
fstps
rorb
fildll
mull
xchg
mov
add
mov
lcall
nop
mov
mov
outsl
fwait
out
dec
jmp
mov
cmc
sub
mov
push
ret
addl
mov
sub
lods
outsl
sbb
mov
or
jne
add
dec
repz
push
mov
jg
mov
push
xchg
add
hlt
sub
inc
mov
loop
sbb
aam
imul
dec
pop
sti
sub
lods
cli
cmpsb
leave
mov
jo
cmp
mov
mov
adc
enter
push
cmpl
insl
jb
sbb
ss
mov
sarb
jg
push
jp
sti
xchg
je,pt
cld
jp
inc
pushf
icebp
and
sbb
inc
inc
rolb
xchg
adc
imul
inc
es
jbe
mov
gs
fidivl
push
pop
xchg
loop
pop
repz
ret
int3
jecxz
mov
rcrb
dec
dec
in
sub
jne
je
lret
outsb
ss
jge
ljmp
sub
jle
fimull
sbb
rcrl
sbb
sbb
adc
leave
loope
imul
adc
push
and
addr16
ret
cli
lods
ret
mov
add
cmp
fmull
pusha
cvtps2pd
and
pop
mov
mov
mov
inc
or
and
aaa
lcall
out
je
pop
dec
mov
ret
dec
lock
shrl
les
adc
test
ss
imul
hlt
unpckhps
jecxz
sbb
xor
loope
roll
jb
pop
arpl
push
inc
outsb
push
push
inc
jecxz
and
dec
sbb
or
fmull
mov
movsb
adc
cmc
stc
icebp
push
fistpll
mov
insb
mov
gs
cwtl
cmp
adc
mov
add
sbb
push
mov
xlat
xchg
and
xor
aaa
pop
cld
rcrl
hlt
lods
push
clc
popf
js
ltr
orl
inc
gs
and
pop
insb
int
add
cld
xorl
cli
cwtl
hlt
pop
push
popa
addl
orl
pusha
loop
jno
iret
lods
pop
adc
cmpl
adc
and
and
mov
fsts
scas
out
cmp
out
orb
jbe
push
push
ljmp
pop
or
xor
or
jle
loop
cltd
rorb
add
sub
ret
loope
pop
rcrl
out
nop
xor
and
xor
sbb
push
xchg
dec
dec
mov
jg,pn
xchg
push
in
sbb
xor
mov
mov
hlt
dec
cmpl
lods
cmp
dec
jl
add
mov
daa
xor
pop
xchg
mov
inc
xchg
dec
popf
push
aam
daa
fsubs
mov
fiaddl
mov
ret
sub
movsl
sub
adc
pop
stc
addr16
ret
add
jle
dec
push
push
cltd
xchg
pop
lret
out
es
add
mov
pop
sbb
or
ljmp
inc
ret
pop
sbb
xorl
xchg
cs
dec
loop
loope
jo
pop
lcall
mov
mov
loop
xor
cs
adc
cmpsb
mov
adcb
adcb
cld
in
mov
jbe
dec
push
mov
xor
cld
inc
ret
push
shrb
jo
loop
or
int
bound
xor
dec
and
pop
or
mov
fidivrl
dec
stos
push
dec
dec
jb
inc
xor
inc
adc
pop
cli
or
push
mov
push
mov
sub
xchg
bound
pop
lahf
inc
add
into
dec
xor
dec
sub
push
cli
cwtl
xchg
adc
sub
andl
xor
pop
dec
pop
repz
lock
bound
test
pop
jg
xlat
sub
outsb
add
inc
adc
sub
sub
sub
sbb
cmpsl
inc
sbb
hlt
add
mov
xchg
mov
mov
add
sub
daa
mov
and
in
sub
daa
inc
mov
mov
xor
jle
push
into
and
scas
loop
data16
dec
xor
push
add
dec
cmp
dec
dec
add
outsb
dec
inc
xchg
adc
dec
inc
pop
pop
jp
pop
pop
inc
or
push
and
push
cmp
xchg
dec
loop
lret
stos
out
push
mov
and
inc
or
dec
ss
xchg
mov
dec
jp
inc
cmp
sbb
imul
or
dec
mov
push
cmp
push
cmc
sbb
jp
jle
jb
jbe
test
pop
outsb
add
das
or
stos
or
scas
ret
mov
mov
addb
sub
push
dec
ret
or
push
mov
repnz
sahf
mov
sbb
or
addb
cs
cmp
and
es
ds
cmp
pop
cmp
push
inc
push
sbb
adc
or
xor
mov
push
sub
sub
fucomi
adc
adc
insb
std
cmp
sbb
sub
shrl
sub
cs
or
lret
in
add
mov
jp
es
push
mov
data16
push
ret
sbb
sub
dec
and
mov
ss
dec
loope
leave
inc
xlat
sbb
data16
adc
add
clc
mov
inc
mov
push
add
lret
dec
inc
adc
push
mov
je
pop
fwait
sbb
add
mov
add
adc
arpl
lods
and
fiadds
jb
push
jg,pn
jecxz
inc
push
mov
jbe
pop
es
das
cmp
jecxz
psllw
add
cld
dec
push
or
inc
lods
or
jg
jbe
sbb
mov
pop
push
pop
mov
popf
and
lret
dec
jo
out
in
pop
xchg
shr
notl
or
and
jbe
inc
pop
jp
inc
xorl
lock
xor
cmp
dec
push
dec
xchg
imulb
inc
es
sbb
xchg
push
xchg
dec
sbb
ret
jge
loop
sti
stc
push
jp
dec
int3
jecxz
arpl
ljmp
lods
push
xor
fwait
push
cmc
lcall
mov
jecxz
das
push
xchg
repz
mov
sbb
mov
push
dec
divb
fbstp
sahf
aas
cli
loop
sbb
pop
mov
sbb
loop
cmpsb
xor
fwait
push
or
testl
imul
cmp
loop
add
sbb
outsl
sub
dec
rorb
sbb
add
dec
xchg
fcoml
decl
imul
rsqrtps
mov
loop
jno
mov
sub
rcrl
dec
mov
mov
sub
data16
push
in
sbbl
filds
cmpsb
mov
addr16
ret
push
aaa
cwtl
pop
stos
fisubl
and
repnz
xor
mov
adc
dec
push
push
iret
or
cld
inc
dec
repnz
xlat
cmp
sub
ds
jbe
inc
xchg
pop
aam
xchg
rcrl
jae
stos
cs
push
dec
mov
orl
out
push
jb
stos
lahf
gs
iret
cld
and
out
outsl
pop
jle
inc
cmp
push
cmp
dec
jmp
and
inc
xchg
xchg
mov
icebp
mov
xor
movsl
or
aad
mov
das
dec
mov
lahf
lcall
cli
pop
ficoms
pop
inc
sbb
ljmp
mov
mov
push
loope
dec
jmp
daa
pop
push
dec
pop
loope
adc
lret
sub
ljmp
sub
sbb
cs
mov
pusha
or
add
pop
icebp
mov
dec
aad
in
shlb
pop
cmpsl
dec
inc
int3
jnp
fwait
pop
adc
sbb
loop
mov
jns
add
or
std
fdivrs
xor
inc
pop
pop
sub
sbb
add
fsubs
mov
mov
sub
inc
mov
xorl
dec
and
sbb
popf
jge
pusha
adc
cmpsl
xchg
es
movsl
sbb
pop
push
and
dec
lahf
and
ljmp
je
into
pop
lahf
sti
xor
add
loop
pop
jg
mov
das
and
push
cwtl
sbb
sbbl
outsb
jecxz
orl
jmp
js
mov
gs
sbb
lds
int3
xor
repnz
pushf
into
outsl
stos
adc
ret
leave
sub
sbb
pop
stos
add
and
lcall
int3
add
adcl
shrb
push
cmp
outsl
mov
pop
clc
mov
stc
mov
or
or
push
gs
pop
cld
stc
push
and
insb
mov
jmp
push
xor
popf
mov
fcoms
ficompl
leave
loopne
xor
int
ficoms
lret
mov
pop
xor
mov
out
lahf
dec
adc
mov
add
leave
pop
pop
nop
ljmp
test
or
xchg
testl
inc
sub
add
rsm
data16
popa
lock
test
xchg
sub
orl
dec
sahf
xchg
xchg
pop
outsl
pop
pop
dec
sub
inc
ror
or
jp
sbb
pop
or
sub
rolb
mov
inc
hlt
adc
mov
pop
repnz
pop
fidivrl
push
lret
dec
mov
outsb
mov
bound
mov
into
dec
dec
pop
or
dec
sbb
mov
out
pop
xchg
pop
loop
cli
mov
adcl
loop
pop
mov
mov
push
jno
dec
dec
mov
pop
add
dec
xor
jnp
mov
mov
xor
int3
jp
sub
arpl
push
inc
push
add
ja
add
xchg
mov
pusha
sbb
and
jmp
sbb
pop
hlt
cmp
repnz
xor
inc
imul
or
push
sbb
bound
out
mov
push
mov
cmp
fucom
pop
xor
cwtl
jmp
pop
jp
das
in
mov
inc
out
xor
mov
xchg
and
push
jnp
aad
sbb
bound
push
or
or
leave
push
les
push
repnz
pop
mov
aaa
and
pop
jmp
mov
xorb
sub
mov
jo
jbe
add
jecxz
mov
scas
repz
popf
call
xchg
mov
and
outsb
daa
and
mov
popa
repz
jne
jns
arpl
xor
mov
and
and
lds
push
pop
mov
lods
inc
mov
cmp
test
mov
sbb
pop
or
mov
mov
mov
aaa
sbb
std
dec
add
ljmp
cmp
and
add
sbb
mov
sbb
sub
cld
stos
loope
pushf
dec
push
cltd
sbb
xor
dec
imul
mov
loope
adc
and
push
fistpl
mov
or
call
bnd
add
into
in
add
cmp
or
jne
inc
pop
push
imul
and
ljmp
cmpsb
nop
imul
ljmp
mov
sub
mov
jg
arpl
out
ja
mov
cmpb
sbb
cwtl
repnz
loop
xor
push
xor
mov
push
jb
push
sub
rorb
fwait
pop
add
push
dec
add
push
loop
jns
jge
jl
div
scas
call
in
jmp
clc
repnz
inc
test
arpl
pop
sub
inc
decb
sbbl
loop
shlb
call
incb
icebp
inc
es
pop
mov
mov
stos
jp
pop
pop
cmpb
int
fcoml
fwait
mov
leave
bound
and
mov
jae
je
mov
aas
or
or
jle
bound
loopne
out
adcl
pop
push
dec
xchg
lcall
sub
xchg
loope
xchg
inc
je
cwtl
neg
adc
jp
out
push
pop
mov
mov
add
add
sbb
cmp
xchg
jno
hlt
cli
clc
mov
data16
push
pop
sub
inc
and
repnz
push
push
sub
sahf
xchg
push
in
dec
ljmp
and
xlat
push
mov
out
ret
sti
and
xorl
outsl
clc
jmp
sbb
xchg
mov
int
dec
push
push
clc
ds
pop
js
fisubs
repz
addb
std
rorl
dec
mov
adc
mov
leave
pushf
xchg
lock
sub
sar
rcrb
dec
sti
sub
lcall
push
pusha
push
pop
pop
das
pop
pop
push
js
testb
push
lock
dec
aas
arpl
sbb
pop
addl
imul
out
adc
sbb
pop
adc
dec
add
sbb
rclb
adc
inc
pop
adc
sbb
lcall
push
sub
arpl
inc
jmp
push
cmp
out
cmp
dec
add
fidivrl
lods
imul
fiaddl
cli
mov
pop
push
mov
sub
lcall
cmc
wrmsr
and
pop
repz
adc
push
xor
repnz
data16
movsb
aad
pusha
adc
xor
pop
imulb
push
lods
jb
lcall
in
mov
sbb
cmpl
push
or
jns
mov
cmp
push
push
neg
cltd
sbb
jge
cmp
push
and
dec
sbb
jle
dec
outsl
inc
and
xchg
sub
pop
dec
push
dec
nop
fildl
ret
cmp
idiv
shll
sahf
aad
sbb
push
or
sbb
fnstsw
jg
add
inc
push
out
add
idiv
and
into
clc
xor
mov
fs
aam
adc
roll
nop
test
xlat
push
mov
dec
aad
pop
dec
mov
lret
pop
fisubrs
jnp
inc
pop
je
push
pusha
fcompl
and
mov
adc
jle
mov
in
mov
mov
into
mov
enter
inc
scas
mov
mov
imul
cmp
cwtl
push
rcl
and
adc
xchg
jnp
dec
mov
pop
sub
jns
stos
inc
mov
inc
or
jecxz
cltd
stos
mov
ja
into
and
loopne
enter
inc
daa
push
xchg
xchg
iret
rcll
sbb
or
imul
iret
or
mov
xchg
sub
or
sbbl
sbb
xchg
mov
sub
test
sbb
ret
cmp
cld
push
arpl
jecxz
shrl
xchg
sahf
adcl
adc
stc
mov
out
addr16
push
cmp
or
shlb
jle
ret
or
or
and
scas
js
push
loop
dec
fcoml
mov
loope
fidivrl
inc
out
sbb
iret
fwait
dec
inc
inc
repnz
add
dec
stos
or
mov
push
repnz
and
dec
pop
pop
mov
fs
div
jle
xchg
cld
mov
sub
pop
jecxz
iret
adc
sarl
mov
and
ja
loope
daa
cmc
pop
ss
int
loop
dec
data16
cld
dec
cmc
add
out
vpandn
xor
xchg
das
xor
repz
cmpl
sbb
lds
dec
nop
dec
push
inc
pop
mov
dec
sbb
sbb
pop
sbb
xchg
mov
mov
push
xor
jbe
cmp
mov
mov
dec
jb
or
mov
jle
push
fmull
mov
mov
pop
dec
mov
sbb
in
cmpsl
inc
jmp
adc
jo
jb
jno
cwtl
or
jmp
cli
or
loope
fidivs
jmp
ror
js
inc
push
call
push
mov
dec
xchg
push
clc
xchg
mov
mov
bnd
xor
test
add
pop
cmc
mov
mov
movsl
cmp
pusha
cmpl
sub
pop
repnz
repz
ret
loope
negl
mov
jle
xchg
pop
sub
sti
in
int3
sbb
sub
or
or
push
xor
jbe
adc
mov
sub
cmpl
iret
xchg
or
call
jl
in
or
add
inc
mov
fs
xor
jecxz
sub
dec
lahf
movsb
ljmp
adc
inc
sbb
stc
sub
push
mov
add
mov
add
add
leave
mov
pop
loop
cltd
xchg
push
cli
in
mov
or
loope
pop
pop
cwtl
sbb
ret
xchg
lcall
sub
add
mov
xchg
push
sbb
out
xor
hlt
pusha
adc
insb
cmp
mov
enter
dec
loope
dec
mov
xlat
shr
xor
sub
cmp
and
outsb
sbb
pop
in
xchg
cld
pop
sub
cmpsb
out
mov
mov
clc
loope
dec
mov
fcomi
aam
pop
mov
daa
arpl
lock
je
sbbb
arpl
and
sbb
enter
ljmp
xchg
addr16
lds
xor
pop
sub
add
add
test
ljmp
ds
pop
mov
ds
call
jp
lahf
fsts
aad
ss
dec
loope
lods
shll
orb
sbbl
sbb
fldl
out
lcall
mov
pushf
cmp
outsb
testb
les
mov
dec
sahf
dec
fstpl
xchg
mov
and
dec
sbb
cmp
push
fisubrl
aam
push
popa
fdivp
mov
icebp
in
xor
bound
xor
push
insb
pop
mov
push
loope
out
das
add
rolb
cmc
es
shll
rolb
sarb
lods
orb
mov
mov
sub
pop
ljmp
enter
je
push
dec
add
jp
jbe
xchg
jmp
inc
mov
testb
push
xchg
cld
push
jne
xor
jp
vshufps
mov
dec
add
data16
mov
jecxz
lahf
out
mov
stos
jg
lock
add
xchg
cwtl
outsl
sahf
fwait
sub
mov
inc
sti
sarb
add
arpl
cmp
push
loope
mov
add
cld
push
pop
das
idivb
adc
and
cld
fldl
aam
and
mov
and
jecxz
adc
dec
xor
and
dec
mov
nop
dec
pop
orl
aas
push
jecxz
dec
mov
sti
push
dec
dec
jne
xchg
movd
cmp
insb
and
fidivl
std
jmp
dec
push
push
mov
add
in
jl
dec
mov
add
cmp
or
addl
pusha
fwait
adc
jbe
sbb
outsb
sbb
dec
mov
dec
jl
push
sbb
inc
lret
pusha
dec
iret
idivb
cmp
and
sbb
pop
pop
bound
in
sbbb
push
or
lret
lret
lret
sbb
arpl
or
loopne
pop
js
inc
popa
into
daa
shrb
jle
xorl
subb
inc
sbb
stos
in
int3
jae
jecxz
mov
das
xchg
push
xchg
cltd
outsl
call
pop
jp
popl
not
xlat
xchg
mov
insb
jb
dec
add
or
xchg
pop
jns
in
daa
test
out
inc
add
loopne
insl
lgs
out
push
add
mov
cmp
lret
pop
pop
and
fmuls
mov
mov
push
mov
mov
dec
or
in
gs
dec
mov
mov
jb
mov
or
dec
inc
xchg
out
rorb
sahf
ds
into
and
mov
lret
jo
out
xchg
xor
mov
xchg
into
push
lcall
mov
or
or
add
xchg
pop
adc
aas
push
mov
sbb
sub
and
pop
lret
js
mov
sbbl
repnz
push
mov
imul
inc
out
cs
orl
pop
ss
sbb
mov
push
movsb
push
ret
lea
fisubrl
pop
and
arpl
pop
movsl
inc
xchg
mov
fistpll
add
mov
inc
icebp
pop
push
std
int3
push
rcr
xor
arpl
test
jle
imul
lods
mov
stos
inc
cli
or
testl
int3
push
or
pop
and
mov
andb
sbb
adc
sub
rorl
pop
testl
or
add
div
mov
sbb
adc
mov
pop
push
rcll
adc
pop
sarl
mov
and
or
stos
cmc
push
sbb
cld
es
negb
stos
hlt
insb
xchg
inc
leave
jecxz
fiaddl
je
mov
jp
jp
jne
adc
adc
pop
xor
sub
inc
iret
sarl
mul
adc
decl
sub
xor
jle
shlb
out
fstpt
xor
pop
movsb
sub
outsb
pop
loop
nop
test
or
leave
fiadds
dec
testl
cmp
dec
vpcmpeqq
adc
incl
push
ss
sub
dec
xchg
sbbl
loop
mov
xlat
inc
pop
or
ret
push
bound
mov
mov
icebp
adc
fdivl
mov
inc
cld
and
lcall
and
repnz
adc
cmp
pop
jecxz
aad
sbb
dec
or
lret
push
mov
jns
add
sub
mov
ret
pop
cld
xor
aad
add
fsubs
pop
pop
filds
fs
jl
push
dec
dec
add
jp
push
or
lea
cmp
or
mov
aaa
and
insl
ds
sbb
xchg
loop
and
into
mov
sbbb
adc
xor
or
aam
stos
dec
mov
or
into
cmp
pop
mov
xchg
iret
dec
ljmp
or
push
push
pop
dec
cmp
sub
push
sbb
push
sbb
outsb
ljmp
or
mov
sub
dec
subb
dec
jp
dec
sub
aam
in
jb
pop
push
sub
aam
ficompl
fnstenv
push
mov
mov
into
add
mov
xchg
and
push
sbb
push
adc
push
push
mov
sub
fwait
inc
push
mov
sub
outsb
add
repnz
pop
mov
mov
sarb
inc
mov
scas
inc
dec
inc
addb
sub
addb
dec
and
adc
or
mov
or
inc
dec
lret
mov
push
fwait
push
adc
jecxz
jnp
outsb
mov
push
xchg
jp
push
jae
pushf
mov
add
add
add
mov
inc
es
sbb
add
push
sbbl
pop
jg,pn
cs
and
dec
sarl
ds
jno
nop
inc
pop
pop
int
cwtl
mov
pusha
pop
or
cli
ljmp
jp
mov
inc
pusha
add
jecxz
jne
xchg
mov
psraw
adcb
push
or
inc
mov
ljmp
xchg
jp
cmp
push
loopne
ret
mov
inc
mov
rcl
in
jbe
insb
pop
or
and
hlt
out
cmp
xorl
push
lock
xorl
fs
in
addr16
bound
add
negb
in
push
push
test
sbb
mov
rorb
mov
sub
push
mov
inc
into
mov
push
lret
push
in
mov
or
fsubs
into
cli
stc
in
ss
shrl
add
dec
sub
das
shll
shlb
mov
push
mov
inc
mov
mov
das
adc
loop
aad
shl
dec
mov
es
sub
adc
add
mov
sub
sbb
cmp
dec
push
mov
sbb
lret
sbb
ret
addl
mov
mov
pop
scas
add
sbb
add
bound
xchg
hlt
mov
outsb
das
pop
fwait
scas
js
sub
mov
repz
cwtl
icebp
jnp
xorl
or
cmp
sub
dec
push
mov
or
dec
loope
std
cmc
dec
aaa
xchg
jb
pop
lahf
pop
xchg
cmpsl
hlt
scas
push
jle
daa
hlt
xchg
ret
push
nop
mov
lret
ljmp
add
xchg
fildll
mov
push
cmpb
xor
pop
das
xor
enter
push
pop
inc
push
fwait
jbe
leave
inc
loope
xor
or
push
out
and
dec
sbb
leave
je
or
filds
sub
lea
in
decb
and
adc
fsubrl
push
pop
rcl
xchg
fcmovnu
jae
imul
mov
ret
cmp
popl
add
jle
imul
push
insb
sub
cmp
fnstsw
pop
and
sub
mov
sbb
orb
clc
sahf
mov
enter
nop
in
pop
mov
adc
mov
dec
aaa
scas
iret
int
repz
cmp
insl
test
fcom
test
push
fwait
push
xor
add
pushw
loop
jnp
rclb
jae
test
enter
ret
add
mov
mov
imul
loop
sbbl
add
scas
jmp
loopne
inc
repz
rcrl
xchg
dec
ret
mov
verr
lret
mov
mov
pop
nop
pusha
add
mov
push
or
add
mov
jle
or
jg
xchg
pusha
add
and
mov
lcall
push
xor
data16
adc
lock
pop
adc
in
ret
cmpsl
movw
int3
dec
cmc
inc
sub
mov
sbb
push
push
les
xor
mov
popf
repz
adc
cmp
push
mov
jecxz
fldenv
shrb
cmc
xor
jmp
sti
pusha
into
pop
cmc
dec
in
push
dec
inc
mov
sbb
cmc
rcr
outsb
xchg
repnz
push
pand
je
out
mov
inc
add
or
scas
inc
xchg
xchg
pop
mov
fisttpl
push
movl
and
xlat
inc
cmp
mov
fidivrs
push
dec
popa
or
insb
adc
stos
mov
pop
xor
movsb
adc
xor
push
jecxz
outsb
inc
loope
dec
xchg
jg
psubb
push
mov
sbb
jbe
inc
push
xor
in
incb
jbe
mov
xchg
cmp
cmp
loop
xchg
lahf
repz
xorb
inc
das
jl
sub
jp
pop
or
arpl
mov
and
dec
and
and
sbb
push
out
or
jmp
rcll
sub
std
aad
loope
xchg
sbb
adc
add
sub
mov
jbe
pop
mov
mov
loop
daa
sub
xchg
out
repnz
daa
loop
repz
cwtl
or
popa
or
cwtl
or
ds
and
or
sbb
stos
into
dec
jp
dec
inc
pop
roll
push
inc
sub
cmp
pop
lret
xchg
adc
mov
push
jb
push
subb
lds
fisubs
add
add
cli
cmp
ret
mov
xchg
fimuls
fimuls
xchg
or
inc
lahf
scas
mov
pop
cmc
sub
cmp
cs
pop
mov
xorl
mov
mov
insb
int3
mov
movsl
cwtl
jmp
nop
xlat
daa
mov
cmp
mov
dec
mov
int3
lods
cltd
push
xor
iret
dec
cmp
xchg
aas
dec
push
insl
inc
shrb
loop
adc
insl
jns
bound
mov
lcall
icebp
lods
add
or
sbb
adc
push
sub
lds
jmp
mov
inc
adc
repz
sub
cs
dec
leave
in
push
push
xor
mov
aam
cltd
fimull
sub
rclb
aaa
fsubrs
mov
ja
push
mov
adc
cmpsb
inc
jecxz
jg
mov
sti
test
lock
add
push
outsl
fmull
stc
sub
push
jle
push
xchg
add
cmp
xchg
or
push
inc
sarl
sbb
push
jbe
cli
pop
adc
sub
add
or
sbb
fxch
cmp
sub
fs
je
push
call
mov
pop
into
test
jp
pop
mov
in
push
xor
mov
mov
push
lods
cmp
jle
fcompl
lcall
pusha
in
shll
mov
xchg
or
mov
lea
adc
int
sbb
fscale
mov
andl
cmp
xchg
call
popf
ret
dec
sub
mov
arpl
push
cmp
int
sahf
and
jae
lcall
cmpl
or
xchg
cld
cmpsb
add
pop
icebp
cmc
add
push
cmp
pop
mov
es
ret
add
lcall
stos
sbb
xchg
ret
push
in
xor
fistl
cwtl
mov
scas
movsl
xchg
rcrb
mov
jp
mov
outsb
lods
clc
sub
add
cld
int
xchg
push
add
mov
fimuls
xchg
pop
sub
push
push
mov
push
ljmp
loop
xchg
and
sub
push
push
clc
mov
out
fnsave
push
adc
add
adc
orl
dec
nop
and
dec
adc
int
push
adc
jle
ss
xlat
mov
aad
push
pop
mov
into
stc
and
daa
mov
fidivl
adc
movsb
push
sub
xchg
cmp
sub
sbb
pop
pop
rorb
add
jne
and
and
cmp
int
add
fabs
mov
mov
aad
inc
loopne
stos
push
test
push
int
stos
adc
push
push
pushf
jp
pop
xor
jle
push
cli
loop
stos
push
popa
push
sub
ret
decl
mov
lcall
negl
orl
push
add
and
mov
cmpl
inc
mov
ss
repnz
clc
dec
sbb
pusha
push
jb
loope
lahf
or
arpl
dec
leave
push
inc
jg
scas
sbb
fs
dec
mov
orl
add
mov
cmp
ds
enter
dec
sub
aad
push
test
inc
mov
pop
mov
popf
out
mov
pop
nop
adc
data16
push
fadds
jmp
mov
lret
cli
sub
xor
and
fcmove
jbe
jecxz,pt
cmp
jae
ret
scas
pop
xor
and
inc
in
xlat
sub
sub
bound
es
ljmp
cmp
scas
loopne
aam
stos
mov
jmp
dec
cmpsb
sub
shlb
lods
push
bound
cltd
testb
je
or
pushf
scas
and
test
jb
jg
cli
fisttpl
mov
or
fidivrl
cmp
jmp
mov
xchg
xchg
into
cmc
jl
push
bound
arpl
cmpsb
inc
rorb
dec
add
sbb
xchg
sbb
pop
sub
push
daa
out
aas
mov
sti
push
mull
jle
pop
or
ljmp
mov
loopne
push
inc
jmp
out
mov
pop
mov
loop
into
xor
cmp
sub
push
xor
hlt
lret
cmp
add
push
xorl
dec
xor
and
dec
fyl2x
add
or
mov
mov
push
stc
subb
xor
iret
mov
insb
cmpsb
insl
ret
aad
push
inc
mov
jecxz
or
shl
insb
push
stc
and
lret
orb
aad
add
sbb
pop
aaa
fcomp
add
ja
icebp
aad
movsb
adc
icebp
xchg
fs
pop
cli
xchg
sbb
jecxz
xchg
jecxz
sbb
and
in
mov
sub
jnp
adc
aam
movb
mov
sbb
mov
arpl
cwtl
add
dec
push
push
outsl
jae
inc
mov
mov
sahf
ret
mov
lcall
add
pop
dec
ret
je
enter
add
adc
jmp
repnz
mov
sbb
clc
push
dec
dec
dec
sbb
push
leave
and
mov
bound
stos
lock
outsl
sbb
jb
cs
add
mov
or
mov
sbb
inc
outsb
inc
pop
leave
fbstp
push
scas
das
xchg
push
mov
or
push
mov
test
pop
push
push
xor
sub
push
daa
shl
add
inc
jg
xchg
sahf
sbb
sbb
push
int3
pop
xchg
enter
pop
dec
push
cli
aad
gs
loop
and
sbb
sub
inc
jge
xchg
fistl
mov
inc
cmpsb
add
xchg
or
and
into
lret
xor
pushf
cmp
adc
dec
cli
adc
add
cld
stos
push
pop
add
mov
mov
xor
or
push
cwtl
sub
stos
or
dec
dec
adc
imul
gs
fiaddl
hlt
imul
andl
scas
mov
xchg
fadds
mov
jbe
xchg
adc
jg
jp
lds
mov
pusha
sbb
and
or
les
xor
fdivr
xchg
jle
xlat
in
mov
test
sbb
sub
fs
lods
pop
out
ret
mov
sub
arpl
pop
jb
xchg
dec
cli
add
cli
cmp
jecxz
mov
dec
sub
pop
dec
cltd
sbb
inc
mov
movsb
mov
stos
pusha
cmc
push
out
dec
adc
addr16
pop
lcall
sbb
fmulp
arpl
and
mov
and
sti
or
loope
js
scas
jne
push
add
ret
loop
jae
loopne
lods
adc
mov
or
push
fs
xchg
jae
sbb
fnsave
test
mov
cltd
cld
mov
push
mov
adc
or
push
test
pop
add
std
sahf
rcr
jae
and
push
jns
pop
loop
data16
adc
adc
push
pusha
paddb
or
push
hlt
pop
daa
push
sbb
addb
and
sahf
sbb
sub
mov
add
gs
adc
add
mov
pushf
cmc
dec
jl
ljmp
and
testb
fisubrs
in
lcall
sub
daa
inc
fcomip
mov
popf
adc
cmp
pop
fisubrl
push
push
loope
mov
pop
aad
pop
shl
push
xchg
mov
insb
push
push
sbb
cmp
aas
jbe
mov
pop
ret
syscall
and
dec
enter
sub
cld
gs
inc
std
int
mov
test
test
mov
cld
ljmp
mov
pop
loop
sti
mov
fdivrl
sub
and
lea
fbstp
or
enter
pop
dec
adc
das
xor
in
pop
jl
dec
and
incb
mov
or
mov
pop
push
push
mov
push
mov
xor
notb
inc
sub
add
inc
test
sbb
lea
push
sti
pop
xchg
sbb
divb
in
dec
push
push
mov
xor
mov
or
inc
inc
inc
and
push
jo
and
push
jne
cmpsb
lret
dec
cmp
stos
push
xor
adc
nop
andb
pop
mov
das
inc
addl
adc
adc
jb
and
fsubrl
je
fs
jecxz
jl
lahf
adc
sbb
xchg
orb
mov
cmc
mov
mov
sub
mov
mov
icebp
mov
sbb
lret
sub
fnstsw
pusha
inc
sbb
push
jecxz
add
or
pop
jne
popl
out
outsl
orl
push
inc
inc
push
pop
mov
adcb
mov
leave
push
adc
inc
push
stos
xor
lcall
jecxz
lahf
inc
dec
sub
in
sbb
and
loope
ja
push
daa
fcoms
dec
xchg
pop
mov
lcall
lea
push
push
mov
je
xchg
std
gs
xor
int3
add
add
xchg
cmp
add
mov
pop
mov
cld
push
loope
insb
das
dec
push
jnp
jnp
lods
push
das
fcoml
int3
into
cmp
loop
mov
adc
mov
jle
outsb
push
sub
sub
sub
push
pop
mov
xor
add
mov
in
pop
and
sub
sub
xlat
hlt
incl
outsb
cli
or
mov
ss
mov
push
add
dec
loope
adc
mov
dec
or
mov
mul
mov
or
mov
sbb
in
push
scas
sub
stos
or
ja
ret
sbb
repz
mov
mov
push
fcompl
dec
repnz
sbb
xchg
adcb
or
sbb
bound
sti
leave
and
add
js
clc
scas
imul
pusha
sub
pop
mov
es
push
mov
jp
fildl
cwtl
xchg
repnz
mov
imulb
stos
or
dec
push
xor
outsl
jnp
das
cmp
in
mov
int3
es
jg
dec
pop
nop
pop
negb
and
enter
push
ret
adc
popl
sbb
jp
popf
fistpl
cmpsb
sti
add
mov
pusha
inc
adc
daa
in
scas
cmc
sbb
scas
sub
les
popl
inc
ss
cwtl
je
cmp
jge
pop
jb
sub
leave
jp
sbb
push
icebp
andl
int
xor
ret
popl
in
aas
mov
inc
iret
xchg
das
pop
cmp
xchg
add
pop
and
sub
cwtl
outsl
cmp
pop
inc
add
or
sub
sub
bound
out
mov
pop
js
xchg
sbb
inc
xor
sub
mov
inc
mov
lret
stos
jae
cltd
mov
inc
mov
pop
loop
icebp
xchg
daa
outsl
cli
shr
sub
jge
push
dec
push
push
mov
mov
je
mov
xchg
stos
jne
loop
cmpsl
mov
lods
rclb
dec
aad
outsb
adc
sbb
mov
insb
cld
jmp
movsl
ret
andb
push
adc
sarl
pop
mov
fs
call
outsb
mov
es
mov
je
lds
xor
xorb
cmp
fmul
dec
jl
xchg
out
mov
pop
or
lock
inc
sahf
sbb
jne
add
and
pusha
jp,pt
mov
sub
pop
loop
and
jbe
mov
and
add
mov
cli
pusha
fistps
jl
int3
xorb
pusha
xchg
pop
xor
sub
jp
mov
or
loop
insb
sub
fisubl
cmp
pop
out
push
mov
enter
test
mov
fisttpl
and
and
inc
dec
push
mov
and
repnz
mov
add
sahf
movsb
and
jp
lcall
cld
adc
xchg
cli
sub
bound
lret
mov
rorb
add
push
cmc
shl
adc
or
sub
jle
jbe
inc
mov
lea
clc
fwait
subb
inc
or
sbb
lahf
push
fucomi
jecxz
jne
mov
pop
xchg
in
mov
movsb
pop
sub
scas
inc
mov
jbe
nop
or
call
mov
int
das
sbb
ds
mov
push
xchg
push
sub
sbb
or
repz
jns
es
sub
mov
xor
sub
cmc
cmp
xchg
mov
mov
xchg
mov
pop
sahf
scas
pop
out
hlt
pop
mov
adcb
adc
imul
stos
jno
or
mov
dec
dec
mov
sbb
aad
xchg
dec
scas
fldenv
cs
mov
cltd
addr16
mov
cld
dec
repz
test
cmp
jns
inc
push
in
ss
lahf
jg
lods
push
mov
sub
rorb
fsubrs
and
fisttpl
jae
jne
insl
dec
jecxz
pop
dec
lcall
sub
mov
hlt
out
sbbl
js
mov
jp
sub
add
sti
pusha
aas
loope
loop
xchg
fstpl
test
jecxz
pop
mov
lods
pop
and
stos
push
pop
into
nop
arpl
addl
dec
hlt
pop
arpl
ss
sbb
push
pop
xlat
xorb
std
roll
pop
sbb
pop
popa
inc
shll
sub
mov
mov
pop
push
inc
cs
inc
adc
inc
out
int3
pushl
stc
jge
cld
stc
and
jle
lret
push
xor
dec
ja
outsb
test
mov
xlat
fdivrl
popf
cmp
arpl
ljmp
in
or
pop
and
mov
mov
xchg
popa
lcall
daa
pop
adc
cli
daa
jg
push
mov
mov
jae
mov
loop
sahf
mov
rcrb
or
fnsave
mov
or
jne
pop
lea
mov
jns
adc
outsb
sbb
ret
cmpsb
stos
shl
xchg
shll
cwtl
sahf
cmp
adc
rcrl
lcall
pop
jmp
leave
pusha
in
scas
es
jmp
xchg
inc
sub
dec
sbb
fidivrs
cmp
cmp
and
mov
sahf
and
jb
adcb
pop
add
sub
pop
cmp
mov
scas
fimuls
rcl
clc
cmp
ljmp
sbb
stos
jp
push
adc
pop
pop
dec
sub
loopne
sbb
out
int3
andl
sbb
xchg
and
sub
loop
sbb
imul
jbe
xchg
cmp
sub
scas
add
testb
pop
jbe
inc
fistps
jmp
loop
mov
insb
mov
testb
fmull
stc
jp
add
bound
loop
xchg
fiaddl
adc
stc
push
cmpsl
mov
cld
inc
cld
pop
xchg
cmp
mov
or
retw
imull
loop
jb
and
stos
addb
sbb
mov
pop
test
jle
fwait
repnz
scas
nop
lret
xchg
mov
ds
popf
pop
push
mov
dec
fstps
cmp
sub
inc
shrb
and
xor
dec
dec
bound
push
mov
jge
popl
movsl
ds
lock
shll
icebp
xor
cmpsb
jmp
in
xor
sbb
pop
push
adc
fcoml
scas
jg
mov
pop
popf
sbb
pusha
sub
cli
add
bound
sahf
bndstx
daa
cli
cmp
push
popa
sub
sarb
jnp
int3
and
cli
jmp
ds
lods
xor
sahf
mov
and
ljmp
add
out
movl
out
jnp
mov
fwait
pop
ret
inc
push
inc
push
pop
repz
test
inc
repnz
xchg
cmp
aas
jle
sub
dec
push
loop
dec
fists
xchg
push
pop
lcall
daa
and
and
test
daa
adc
pop
push
pushf
cmp
sub
out
scas
adc
sahf
push
push
cmp
insb
mov
xchg
shlb
shrb
cmc
std
cmpsl
scas
fsub
inc
jp
mov
mov
movsl
xchg
or
jg
push
imul
mov
push
loop
bound
inc
pushf
pop
sub
and
mov
outsb
mov
inc
xor
nop
fsubs
je
mov
mov
aaa
mov
sub
inc
sbb
sbb
jne
sbb
pop
and
cli
lret
int
lahf
adc
or
lock
mov
jg
cmp
das
sbb
sar
mov
or
in
mov
dec
out
jg
insb
dec
cmpsl
adc
mov
bswap
sub
cmp
or
repnz
or
mov
add
jns
xchg
xchg
dec
test
rcll
es
sbb
dec
ret
gs
mov
push
cld
jge
gs
sbbb
das
or
xchg
jge
jg
push
loop
arpl
sub
mov
dec
mov
dec
stos
cltd
sub
sbb
std
cmpl
lcall
adc
lcall
mov
jle
sbb
es
cld
lea
insb
movsb
mov
adcl
dec
or
orb
loop
fdivrs
stos
scas
clc
pop
lea
push
sarl
mov
xchg
jle
cmc
lods
xorl
arpl
adc
cmp
xchg
dec
gs
stc
rcll
cmp
add
addb
pop
push
lods
popf
pop
or
loope
jl
mov
inc
push
loop
push
xchg
xchg
outsb
popf
dec
mov
ret
dec
orl
push
mov
es
addb
xchg
fcmovne
mov
xchg
dec
scas
push
push
jl
jle
xchg
lcall
jne
or
aas
sub
xchg
sub
mov
cmp
push
xchg
xor
cltd
jb
loopne
adc
mov
sbb
push
mov
adc
loop
out
mov
lds
loope
push
sub
or
fcmovnu
sub
adc
mov
cmp
mov
das
outsb
push
push
adc
sbb
insb
cmp
pavgb
stc
and
push
xlat
and
push
mov
and
jbe
stos
loope
pop
push
lcall
gs
add
and
test
xor
jb
outsl
jp
es
sbb
or
je
xchg
jne
lret
in
mov
repnz
pop
loop
loopne
pop
repnz
mov
adc
dec
jne
pop
daa
inc
clc
add
and
sub
xor
dec
lret
mov
outsb
js
adc
push
notl
sub
xor
mov
jmp
mov
pop
mov
push
pop
mov
xor
cmp
aad
xor
nop
sub
mov
inc
push
inc
incb
dec
movsb
jl
mov
imul
mov
jno
repnz
sbb
sub
stos
movsb
int
dec
inc
icebp
divl
xchg
push
dec
sarb
cld
out
adc
loop
cmc
mov
inc
xor
add
sub
aad
mov
hlt
mov
outsl
sub
mov
adc
dec
inc
repz
mov
add
loop
xchg
mov
or
lahf
jns
push
mov
dec
push
imul
stos
cmpl
js
je
mov
sub
loop
push
into
int3
adc
dec
push
xor
inc
jbe
insl
pop
dec
xchg
cltd
add
repz
xor
inc
mov
or
aas
mov
dec
stc
test
je
mov
popf
jnp
sbb
pusha
or
andb
push
mov
jbe
mov
sub
inc
pop
sbb
test
lds
gs
add
imul
sbbl
lahf
jo
sbb
pop
pop
dec
pop
outsl
rcrl
push
xchg
push
lahf
pop
lret
sti
loop
and
in
andl
dec
pop
pop
jnp
add
adc
outsb
fs
jnp
push
leave
jbe
leave
fisubs
sbb
ret
mov
ret
inc
mov
sti
cmc
jge
std
pop
stos
xor
cwtl
insb
jle
roll
xchg
movsl
cmp
fnstcw
icebp
jae
jae
xor
add
fstps
push
cmp
sbb
loop
negl
jp
xor
ret
xchg
cwtl
adc
xchg
mov
cmp
cltd
xor
rclb
stos
pop
add
jno
aaa
notb
rolb
icebp
sub
dec
cli
loop
orl
jp
dec
fsub
push
mov
sar
repnz
adcb
sub
dec
ret
fdiv
mov
aas
bound
or
jb
gs
insb
mov
jle,pn
mov
je
push
sbb
cmpsb
jb
insl
xchg
or
jge
lods
pop
or
and
clc
aad
sub
mov
add
fistl
pop
pop
cmp
adc
fists
or
stos
mov
dec
sbb
cltd
outsl
les
mov
jmp
add
int
xor
jbe
push
loope
in
jnp
or
cmp
push
add
insb
xor
sub
addl
inc
popa
jmp
mov
outsb
icebp
pop
test
movsb
sbb
outsl
adc
bound
ds
jp
iret
xchg
sbb
push
subl
sub
push
aad
push
pop
jmp
sbb
in
inc
fmull
mov
imul
js
mov
test
lods
and
add
push
adc
mov
pop
sub
xchg
mov
and
imul
xor
jne
stos
negb
bound
cmpl
mov
jle
pushf
mov
push
pop
repz
clc
loop
out
call
xor
out
push
push
xchg
cmp
mov
xchg
stos
insb
je
pushf
lahf
dec
movsb
or
imul
arpl
cmp
icebp
jbe
cmp
fldl
popf
dec
dec
rcl
rcl
int3
fiaddl
pop
dec
jmp
cmpsl
sahf
dec
mov
in
and
add
daa
stos
cmp
daa
in
jl
push
das
loope
outsl
jno
sbb
rcrb
push
fwait
mull
or
fbld
and
sbb
pop
das
cmp
dec
outsb
decl
mov
or
push
or
cmp
sub
repnz
push
xchg
mov
arpl
push
fistpll
js
add
inc
xor
push
xchg
roll
add
imul
repz
mov
xchg
inc
popf
and
xchg
xchg
jno
cltd
adc
js
xor
outsb
add
mov
fisubs
cmpsl
js
arpl
add
adc
push
test
or
jae
sbbl
inc
push
pushf
or
in
inc
mov
cwtl
sti
shrb
cmp
ja
xchg
jnp
xchg
js
push
mov
jl
nop
mov
push
xchg
das
jo
xchg
sub
mov
into
mov
inc
dec
lods
dec
push
add
daa
jl
iret
sbbl
or
pop
ja
lock
inc
cmp
popa
mov
test
mov
loope
sub
mov
nop
ret
and
je
ljmp
mov
add
dec
outsl
mov
sti
loope
cmp
jl
xor
sbb
sbb
dec
ret
push
inc
add
lock
pop
xor
cwtl
adcl
add
fs
adc
pop
out
mov
dec
push
xor
aas
pop
fiadds
sbb
push
dec
push
sub
sbb
mov
push
xchg
jbe
mov
inc
jnp
cs
pop
shll
push
fs
sub
cmp
jl
dec
dec
adc
sub
pop
cmp
int3
pop
push
lods
xchg
pop
cli
popf
fdivrl
fcoml
adc
repnz
mov
inc
loopne
dec
bound
mov
add
jg
push
sbb
mov
mov
xchg
clc
fwait
ret
inc
in
mov
in
jg
int3
adc
ss
flds
xchg
lock
lcall
inc
pop
repnz
cmc
jno
adc
mov
stos
movsl
aas
cmp
popf
sbb
mov
aad
clc
sbb
sbb
daa
inc
int
fildl
stc
fs
fs
and
mov
fsts
clc
adc
and
lea
mov
add
xchg
lret
fsts
inc
roll
xor
ja
mov
leave
scas
dec
push
sbb
cmpsb
or
add
mov
mov
pop
jg
shll
into
scas
push
push
inc
loope,pn
arpl
adc
nop
rcl
dec
sub
dec
fisttpll
call
mov
cmp
inc
leave
mov
fidivrs
xor
sbb
sub
cltd
xchg
xor
push
iret
mov
rorb
int3
xor
outsb
rolb
inc
in
mov
dec
jecxz
cmp
shlb
mov
sbb
adc
push
movsl
or
pop
icebp
mov
push
inc
mov
pushf
sub
pop
stc
xchg
dec
cmpsl
hlt
xlat
out
negb
add
addl
sbb
mov
or
cli
mov
negl
cmc
pop
adc
inc
inc
and
ljmp
xorb
aad
mov
sub
fisubrl
sub
cmp
xor
sub
add
inc
push
sbb
daa
not
scas
dec
shlb
les
mov
sti
xlat
add
test
fidivrs
or
mov
jns
jmp
je
jmp
loop
in
loop
rcrb
out
and
add
arpl
rcrl
mov
shl
je
nop
push
pushf
jmp
fwait
mov
int3
add
xchg
inc
and
push
call
mov
sub
mov
imul
mov
jp
pop
mov
clc
dec
jg
rcr
mov
loopne
test
push
mov
cmp
push
sti
pushf
jmp
lods
and
pusha
addr16
shlb
sbb
push
loop
dec
popf
add
out
mov
mov
sub
mov
lret
out
into
hlt
mov
lret
jecxz
jne
adc
and
mov
mov
xchg
repnz
movsb
fisubs
mov
add
mov
mov
xor
pop
add
incb
jg
addb
or
enter
mov
or
rolb
pop
testb
sti
into
ficompl
jmp
and
add
fadds
aas
xor
bound
sub
data16
loop
popf
stos
or
dec
loope
pop
inc
in
push
or
ret
or
fwait
jle
inc
jle
and
and
xchg
pop
shrl
mov
addb
stos
mov
or
add
sbb
mov
push
xor
roll
out
mov
in
and
or
or
sbb
mov
add
insb
push
fsubrl
cmpsl
dec
in
cmp
mov
xor
mov
sub
mov
sbb
jb
inc
mov
mov
aas
sub
add
jecxz
push
jl
ret
roll
ret
mov
mov
sub
xchg
or
jbe
lods
push
jecxz
notb
push
movsb
shl
adc
scas
lea
inc
push
test
pop
push
jecxz
pop
testl
xorb
sub
cs
mov
inc
stos
mov
cmp
and
aad
cvtpi2ps
cmc
pop
xchg
movl
cmpl
scas
and
lmsw
xchg
sbb
sub
sbb
sbb
push
ds
cli
je
add
lcall
lret
pusha
add
and
in
ja
add
ret
stc
movsl
add
add
mov
sbb
fstpl
mov
movsl
and
mov
inc
mov
ljmp
pop
adc
mov
fimuls
mov
mov
cmp
lret
xchg
pop
loop
js
pusha
rorl
sub
push
scas
shll
and
roll
jmp
xor
loop
icebp
and
jle
mov
orl
mov
xor
fimuls
add
ja
cltd
lahf
and
mov
pop
pop
lock
repz
add
sbb
pop
mov
xchg
add
cs
lret
mov
jle
mov
cmpl
mov
repnz
inc
addl
or
dec
adc
lret
loope
mov
outsl
pop
xchg
daa
outsb
xchg
pop
mov
pop
push
insb
mov
mov
addl
xchg
mov
repnz
mov
push
push
popf
hlt
js
arpl
cwtl
mov
dec
sbb
stos
mov
into
dec
push
movsl
xor
jp
lods
fildll
xor
inc
mov
push
das
pop
pop
push
cmp
sub
jle
loop,pn
inc
imul
cmc
nop
sub
lods
pop
orl
sub
clc
adc
out
or
cmpsl
sbb
stos
sbb
test
pusha
sbb
jbe,pn
push
pusha
inc
data16
fwait
es
xchg
sbb
ja
pop
xchg
fidivs
dec
push
xor
xor
ja
negb
out
loop
push
push
xor
dec
dec
jg
add
adc
jmp
cld
or
sbb
out
xchg
cmp
sub
push
jp
out
sub
sbb
mov
dec
push
daa
cmp
jmp
cltd
jne
adc
lahf
sub
cmp
out
xor
popf
popf
jne
arpl
jl
pop
mov
sbb
sub
xor
jbe
or
pop
inc
fldl
nop
or
cmp
sub
push
jg
out
loope
popf
sbb
add
leave
scas
dec
xor
std
and
push
mov
negl
push
sub
cli
jg
add
loope
sar
push
int3
push
notb
xchg
testb
cmc
clc
scas
incl
mov
insl
adc
xchg
mov
int
push
sub
and
xchg
add
jge
insb
mov
push
jecxz
mov
loope
and
testl
cli
inc
jns
jb
and
int
mov
dec
mov
or
fbld
movsb
sbb
fdivs
aam
sbb
jl
loop
das
icebp
cmc
int3
and
repz
xchg
adc
out
mov
clc
sbb
adc
popf
scas
scas
movsb
fwait
subl
insl
ds
cmp
sbb
push
ja
inc
xor
mov
and
push
push
inc
sbb
ret
cmc
dec
and
adc
sti
inc
mov
inc
in
shlb
dec
pop
sub
aaa
dec
bound
mov
cmp
jae
cmpsb
lret
mov
cmp
inc
fimull
or
repz
and
rcll
cld
mov
stos
add
in
or
push
aaa
mov
iret
add
and
rcrl
cmpsb
mov
and
dec
popa
ljmp
roll
dec
jnp
ret
inc
or
arpl
jbe
xchg
aas
push
or
fdivr
mov
imul
cwtl
xor
lcall
fstpl
sub
jle
dec
sahf
cmp
push
sbb
cmc
insb
dec
dec
nop
scas
xchg
andb
outsl
je
sbb
mov
pop
aam
shrb
stc
loop
xchg
xchg
or
jle
cld
mov
push
or
xor
xor
jo
cmpb
xor
das
loopne
push
movsl
jecxz
jbe
decb
les
push
lret
loop
jnp
jo
test
add
hlt
cld
fidivrs
cwtl
mov
inc
mov
mov
test
xor
adc
in
movsb
mov
cli
pop
outsb
popf
je
test
jle
pop
dec
stos
xor
add
mov
dec
push
mov
out
push
xor
dec
sbb
cmp
sarb
stos
faddl
mov
subl
xchg
fidivrs
inc
lcall
xchg
iret
and
bound
jecxz
adc
push
dec
mov
xchg
cmpsb
push
mov
sub
or
je
in
mov
fdivp
sbb
sbb
outsl
or
pop
push
sti
or
shrl
mov
int3
jecxz
cli
fbstp
dec
xchg
loope
pop
fs
mov
xor
mov
out
cmp
xchg
inc
inc
xchg
or
jo
adc
or
jecxz
sub
mov
cltd
or
add
adc
push
fiaddl
leave
push
dec
je
lret
sarb
enter
daa
adc
out
push
das
dec
push
push
pop
sub
and
nop
push
cltd
notl
jbe
xor
sbb
out
cmp
mov
dec
ret
pop
or
lret
adc
pop
in
rcl
cmp
adc
xor
repnz
jne
mov
pop
sub
mov
fmuls
movsb
out
xchg
ret
pop
jl
xor
mov
aaa
negl
pop
out
mov
or
dec
stos
out
ret
pop
into
mov
aas
icebp
je
aas
mov
ret
fldl
jbe
push
push
fwait
sbb
mov
pop
repnz
cmpsl
sbb
jbe
add
mov
push
or
push
push
jg
push
mov
xor
outsl
enter
cli
sbb
outsb
or
add
ret
out
mov
sahf
pop
xor
add
clc
hlt
cmpsb
and
mov
cmpsb
dec
out
je
xor
or
test
sub
in
fwait
enter
in
add
mov
movsl
pop
or
ja
jne
xlat
insb
dec
jecxz
imull
outsb
mov
dec
addr16
or
dec
push
xchg
insl
add
int3
lods
xor
sbb
jle
sahf
or
jl
scas
xor
aas
lds
sbb
jno
sbb
jl
in
pop
imul
xchg
cmpl
sbb
mov
psrad
adcb
pop
test
add
loop
gs
rolb
sbb
add
cmpsl
jb
mov
test
pop
fcmovu
stos
ja
xor
test
mov
std
out
xor
cmp
cmp
pop
das
lahf
enter
mov
cmc
xchg
cmp
mov
adc
das
xchg
test
push
sbb
lret
or
lds
push
xchg
push
sub
mov
sahf
xchg
or
xchg
mov
outsb
sarb
jle
fiadds
out
mov
xchg
pop
gs
xor
cmpsl
xchg
xor
iret
and
inc
pop
xor
pusha
cltd
jnp
inc
dec
and
or
dec
outsb
mov
lods
and
lahf
add
dec
or
fildl
jo
ret
mov
or
adcb
adc
xor
lods
xchg
dec
dec
cmp
xchg
push
dec
icebp
andb
adc
adc
push
inc
outsb
or
mov
fwait
leave
ficompl
mov
sahf
pop
gs
push
sbb
push
out
add
and
or
scas
or
dec
pop
pusha
adc
cmp
sbb
xchg
leave
push
loop
push
addl
push
mov
insb
push
sbb
ds
cmp
cmp
mov
inc
inc
add
dec
ret
pop
jge
in
outsb
and
xchg
sub
dec
repnz
cs
int
orps
add
push
aas
fstps
jl
pusha
push
jmp
inc
lea
xor
xor
dec
and
sbb
cs
out
sbbl
pusha
mov
outsb
or
add
or
les
adc
pop
inc
push
add
pop
xor
push
inc
sub
pop
cwtl
push
dec
xor
jb
hlt
ljmp
xchg
push
ret
adc
jl
add
inc
es
ret
ret
enter
popf
add
push
decb
testl
out
push
inc
xlat
cmpb
pop
xchg
repz
nop
stos
xchg
push
or
fisttpl
pop
das
add
call
inc
sbb
sub
ljmp
aam
loopne
inc
jne
pop
inc
mov
out
lods
sub
mov
cli
sub
xchg
and
lcall
fcmovbe
mov
mov
add
cmp
adcb
or
sbb
pop
pop
stos
sub
xchg
cmp
push
pusha
cld
pushf
dec
sub
inc
ffree
jo
mov
sub
roll
or
and
lcall
cmpsb
pop
sub
fwait
movsb
inc
push
dec
pop
rolb
clc
lahf
inc
xchg
cs
pop
mov
fsubrs
sub
sbb
mov
sub
mov
jae
inc
aaa
out
test
jno
inc
pmuludq
out
dec
sbb
mov
xor
jns
mov
jns
mov
and
bound
mov
pop
adcl
xor
enter
js
or
loop
roll
fwait
sbb
test
dec
loop,pn
or
data16
adc
adc
daa
stos
dec
sub
inc
sbb
mov
pop
clc
xchg
popa
inc
push
inc
sbb
dec
sbb
lods
push
inc
push
push
and
adc
jle
xchg
pop
outsb
sub
sbb
pop
lcall
adc
xchg
add
xor
add
decb
test
cli
andl
test
jge
pop
xor
pop
or
ss
add
loop
outsl
mov
mov
jp
testl
mov
xchg
adc
sar
sub
stc
sbb
inc
stos
adc
fists
int
pop
bound
fadds
xchg
and
ljmp
jb
push
jmp
xor
add
pop
dec
std
cmp
mov
sub
insb
mov
or
std
add
in
int3
cmp
cmp
dec
add
or
jb
fnsave
ds
cli
sub
shlb
rorb
push
sub
and
jle
and
xchg
test
adc
push
imul
mov
dec
hlt
sub
or
jp
lahf
dec
adc
dec
inc
int
pop
out
mov
test
add
jns
int3
dec
cmp
out
jns
adcb
push
pop
sub
mov
cs
mov
xor
js
inc
xchg
lcall
out
imul
cmp
loope
mov
xlat
ja
xor
addb
mov
push
or
inc
mov
mov
imul
out
in
cltd
jle
sbb
mov
sahf
das
sbb
xchg
sahf
dec
jg
mov
sbb
cltd
cmp
sbb
jg
dec
imul
sub
rdtsc
mov
or
inc
leave
pusha
idivl
sub
push
mov
adc
sbb
add
xchg
aad
jno
stos
or
xorl
pop
mov
sub
cmp
pop
fdivs
cmp
cmp
rorb
sub
mov
pop
loop
add
int3
and
mov
mov
or
inc
lea
bound
dec
ljmp
loop
shl
pop
or
sub
loopne
cmp
je
leave
inc
push
xchg
mov
xor
cmpsl
lock
jno
in
mov
or
out
pushf
cmp
xor
cmp
in
pop
mov
out
fdiv
push
jmp
and
sub
dec
ret
add
pop
sub
push
imul
xchg
sub
sti
push
mov
xchg
mov
popa
imul
in
cwtl
or
push
pop
xor
push
test
loop
xchg
add
stos
out
negb
push
test
mov
cltd
inc
push
push
inc
add
je
mov
cld
push
int
fistps
sbb
mov
movsb
cmc
push
dec
add
loope
adcb
xor
cld
ds
mov
xchg
dec
loopne
nop
lcall
nop
rcrl
mov
mov
sub
bound
pop
hlt
pop
add
lea
jp
add
loope
pop
sbb
push
adc
mov
lahf
jecxz
xchg
cltd
dec
movsl
ret
push
jae
or
icebp
push
jg
loope
mov
push
ljmp
rol
outsb
sub
pop
sbb
push
mov
sahf
enter
jecxz
and
dec
inc
or
dec
adcl
in
jmp
test
cli
orl
into
lret
or
cmp
mov
lcall
xchg
adc
mov
xchg
nop
xor
xor
mov
mov
and
mov
inc
sub
add
dec
xor
loope
cmpsb
mov
or
dec
dec
xor
cmp
cmp
cmp
mov
mov
adc
pop
mov
ffreep
add
cmc
or
adc
mov
jge
add
add
scas
xor
aaa
adcb
or
xchg
inc
mov
imul
sbbl
cld
das
push
add
andl
loopne
add
push
cmp
push
sub
xchg
push
inc
push
sub
repnz
movsb
std
fisttpl
inc
orb
int3
push
lret
jle
ss
fucomi
sub
jmp
sbbb
mov
cmpb
cs
mov
mov
pop
loop
push
push
loope
xorps
outsb
sub
and
imul
inc
fdivrs
fidivl
enter
pop
cmp
popa
or
es
cs
add
fidivrl
mov
sbb
sub
push
push
pop
mov
and
std
ret
push
test
pop
pop
repz
int
test
mov
dec
sub
mov
xor
xor
sub
add
ja
stos
das
sbb
loop
sub
lret
dec
mov
mov
stos
and
call
ljmp
adc
lret
mov
aas
stc
mov
out
gs
push
leave
mov
aad
out
pop
rcll
lock
push
loop
pop
mov
insl
mov
cmc
mov
jb
lds
test
push
and
push
mov
or
inc
stos
and
cmp
dec
adc
cli
stos
dec
pminub
pop
or
mov
sbb
insl
or
test
in
dec
add
test
push
mov
jae
mov
push
pop
add
jle
addl
or
push
sbb
dec
jle
pop
dec
mov
jg
jp
adc
sbb
add
js
push
or
lret
ja
pop
sub
push
loop
ret
loope
aas
into
add
jns
adc
loope
add
adc
and
pusha
inc
sbb
gs
dec
and
enter
inc
ljmp
movsb
xchg
and
test
mov
push
scas
repnz
lahf
jno
lcall
jmp
dec
sbb
or
pop
push
out
xchg
shr
inc
jp
in
add
je
push
sbb
xor
sub
mov
or
mov
mov
push
mov
aaa
jbe
mov
dec
int
inc
mov
mov
loop
push
lods
sbb
cmpb
leave
ss
and
decb
rorl
repnz
xchg
push
cmp
repnz
jo
sub
sbb
and
stc
or
insb
mov
js
pop
pusha
das
dec
ja,pt
and
and
mov
xor
nop
add
xchg
cld
xlat
adc
push
mov
incb
xchg
fucomi
ficoml
movsl
ja
add
xchg
jo
sub
inc
pop
fadds
jg
dec
mov
fadd
adc
add
mov
jle
xor
jmp
adc
xlat
gs
fmull
sbb
loop
sub
bound
fisubl
push
mov
sbb
cltd
push
in
xchg
lea
and
outsl
bswap
sub
cmpsb
xor
pusha
andl
pop
stos
pop
pop
stos
mov
dec
nop
sbb
ss
jmp
jg
cs
and
pop
xor
mov
push
mov
jle
roll
inc
hlt
xor
js
add
dec
loope
ficoms
fcoml
mov
jne
dec
adc
jns
xor
or
orb
push
sbb
repz
sbb
js
mov
clc
mov
jns
dec
inc
lret
lock
xchg
or
push
std
sti
or
push
mov
imul
jge
xorb
jmp
or
adc
lret
push
dec
add
dec
loope
push
jecxz
sbb
xchg
dec
cmc
mov
leave
xor
mov
mov
sbb
data16
rcr
ds
pop
flds
sub
dec
shrl
adc
dec
pushf
enter
in
push
or
enter
add
cmpsb
dec
dec
xchg
sub
adc
or
and
or
dec
fmulp
fiadds
mov
push
das
into
test
or
ret
add
pusha
pop
add
inc
stos
loop
inc
xchg
testb
loope
rorl
jge
sahf
inc
stos
mov
pop
dec
divb
mov
nop
bound
divb
pusha
add
xchg
push
sbb
xor
dec
cli
shrb
rcrb
ljmp
loop
movsl
daa
loop
das
sti
mov
cld
mov
or
sbb
cli
icebp
fsubr
out
inc
mov
add
xchg
hlt
pop
xor
inc
iret
inc
orl
pop
std
and
sub
jne
add
int
scas
pop
addr16
add
cmp
lods
enter
int3
cwtl
cmp
adc
sub
testb
loop
and
sub
push
es
sarl
pop
pop
hlt
mov
adcl
stos
out
add
cmp
ja
cli
dec
in
mov
push
ds
scas
cwtl
mov
add
xor
test
sub
cltd
clc
ja
jp
xor
rcrl
aad
inc
std
iret
dec
sbb
xor
and
xchg
sub
sarb
sbb
icebp
sbb
add
ljmp
cmp
std
cld
fcmovb
inc
push
cli
pop
stos
arpl
scas
dec
mov
data16
dec
subb
xor
xor
pop
clc
xlat
xchg
push
lcall
notb
hlt
ltr
ret
mov
fdivl
pop
push
jns
cmp
mov
sub
jnp
xchg
loop
add
inc
pop
adc
sbb
sub
test
in
xor
mov
out
fsubs
pop
mov
outsl
push
pop
in
push
sub
das
stos
fsubl
in
inc
jecxz
fwait
jne
mov
outsb
adc
push
in
lods
popa
or
fimull
les
dec
std
rolb
xchg
pop
daa
mov
pop
cmp
aaa
dec
mov
or
mov
insb
inc
addl
addr16
lahf
dec
sahf
push
cmp
imul
pop
test
add
or
cmpl
pop
or
movsl
adc
outsb
filds
and
xlat
sbb
add
mov
inc
xor
cmp
add
pop
mov
pop
cmp
data16
dec
lods
xchg
sbb
and
outsl
cmp
inc
testb
outsl
int
test
push
or
sbb
addb
lcall
out
sbb
cmp
and
mov
push
fcmovbe
es
stos
sub
xor
pop
divb
cmp
xor
loop
orl
push
test
push
dec
push
sub
outsb
sbb
aad
push
sbb
icebp
adc
sub
mov
lods
push
flds
cwtl
dec
notb
ljmp
or
aam
in
fstps
mov
and
stos
adc
adc
mov
scas
subb
mov
roll
pusha
daa
loop
sbbb
test
push
pslld
mov
xor
sbb
in
sbb
or
dec
push
sub
dec
push
sub
pop
sbb
adc
pop
xchg
scas
outsb
pop
mov
pop
test
add
orl
lret
sbb
test
mov
out
mov
mov
jb
inc
xor
aad
pop
ss
ficomps
or
mov
mov
xor
pop
xlat
pop
lcall
jb
lea
push
sbb
mov
cmp
and
cwtl
xor
push
and
bound
dec
ss
push
ja
cmp
xchg
enterw
aas
xor
cmp
movsb
xchg
cmp
es
mov
push
stos
dec
cmpl
mov
orl
divb
and
xor
sbb
imul
pop
insl
dec
or
iret
mov
push
daa
mov
or
fisubrs
popf
inc
pop
add
pusha
adc
and
jns
ljmp
cmp
or
mov
xchg
into
xor
aaa
das
jae
push
push
add
stos
and
cmp
pop
or
lea
hlt
push
ljmp
mov
push
fcmovb
arpl
aam
mov
std
jbe
das
cmp
shll
scas
dec
sbb
ret
cmpsl
dec
mov
lods
sbb
sbb
sub
pop
and
clc
or
clc
faddp
lds
rcrl
outsb
dec
cmp
adc
or
push
incb
mov
pop
add
mov
pop
movsb
xchg
xchg
cs
in
fs
iret
aam
mov
fdiv
xchg
daa
outsb
out
mov
sbb
fdivs
mov
mov
mov
push
adc
dec
mov
ficoms
mov
mov
loope
jo
repz
call
dec
mov
loop
jp
jae
insb
cld
mov
sbb
adc
cmp
jnp
mov
dec
ds
mov
cli
or
jle
xchg
jl
inc
or
adc
cmp
push
jae
xor
out
orl
pop
lcall
clc
pop
or
je
mov
xchg
add
push
imul
lods
movsb
jg
pop
loop
cmp
mov
sub
bound
pushf
mov
sbb
xchg
jae
arpl
sbb
aaa
sahf
inc
dec
push
xor
pop
lods
inc
cwtl
gs
sub
cmpsl
icebp
or
inc
out
cltd
test
addr16
xorb
out
dec
cmc
sub
cs
add
xor
popf
pop
hlt
in
adc
xor
jecxz
loopne
mov
dec
add
push
sarb
and
add
cs
mov
mov
cli
adc
jp
or
jb
or
mov
pandn
ret
add
sbb
mov
or
inc
fwait
adc
and
popf
sbb
lea
or
dec
mov
mov
ljmp
pop
inc
or
sar
or
mov
daa
out
pop
js
inc
aad
nop
xchg
out
and
iret
in
je
pop
mov
sbb
mov
into
sbb
mov
popl
cwtl
push
jp
or
inc
pop
loop
int
sbbb
lcall
push
orl
inc
cs
and
jge
out
or
mov
into
in
jle
add
xor
pop
mov
add
ret
mov
dec
sbbb
pusha
or
repz
mov
loop
mov
add
sub
nopl
fdivr
fstl
jmp
fmul
jbe
pusha
cmp
xchg
pop
bound
stos
xchg
movsl
xor
mov
ja
xor
pop
sub
dec
aad
jo
add
xchg
pusha
sbb
stos
and
and
sbbb
sbb
ds
push
frstor
rorb
adc
xor
or
inc
int3
mov
mov
jnp
lds
mov
imul
sbb
adc
add
stos
pop
xchg
push
sub
insb
dec
sub
inc
xchg
inc
fwait
negb
rclb
or
jecxz
cltd
repnz
jno
mov
pusha
or
in
dec
push
loope
insl
pop
loop
push
pavgw
sbb
loope
test
and
add
bswap
inc
jo
adc
pop
dec
cltd
add
and
test
cltd
xchg
shll
sbb
loope
xor
xor
lahf
sbb
lret
sbbb
xchg
fsubrp
aam
adc
cli
daa
push
add
and
cmp
sti
lcall
or
lods
xchg
push
repnz
movsb
dec
mov
hlt
dec
loope
mov
pushf
inc
add
or
jp
dec
mov
jecxz
mov
cmp
scas
xchg
jb
mov
movsb
or
xor
mov
push
dec
mov
sbb
adc
pop
les
lods
and
push
jle
inc
sub
and
and
popf
adc
jo
jecxz
cmc
out
adc
bound
insl
es
in
sub
dec
xor
lret
and
sbb
or
mov
and
adc
aas
fldl
mov
dec
fwait
jecxz
lret
cmp
and
loope
adc
scas
jne
mov
xchg
inc
xor
je
popf
sarb
sub
mov
jg
mov
add
add
lret
addb
ds
clc
or
push
adc
mov
jle
pop
cmp
pop
mov
mov
jecxz
fidivrl
popa
sbb
xor
fildl
sub
loope
xchg
dec
mov
rorl
xchg
inc
outsb
add
mov
outsb
lcall
movsb
pop
pop
or
and
mov
sub
stos
mov
rclb
sub
ficoms
add
add
lret
ljmp
dec
popa
cmp
lahf
or
mov
push
nopl
sbbb
mov
pop
test
data16
mov
jns
sub
js
cwtl
pop
addr16
jecxz
cltd
push
imul
lea
test
sub
mov
das
xor
fists
rclb
pop
mov
pop
das
sbb
jl
mov
xchg
dec
nop
mov
lret
mov
lcall
fdiv
ret
jmp
jmp
rclb
outsl
loope
mov
lahf
int3
jecxz
faddl
add
mov
xchg
and
test
dec
lret
out
inc
dec
inc
and
mov
rorb
sub
push
vmwrite
fisttpl
pop
xor
mov
adc
pusha
loope
aad
sbb
syscall
mov
out
dec
dec
in
mov
dec
repnz
stos
pop
or
xchg
jmp
cmp
sarb
stc
or
movsb
push
pop
lock
js
popa
out
subb
jg
cmp
add
sbbb
lods
adc
push
aas
mov
sbb
adc
push
out
inc
xchg
xor
loop
xchg
ja
and
push
repnz
loope
fwait
nop
sub
mov
or
jl
sbb
loope
sbb
jg
ljmp
sbb
popa
out
jge
outsl
je
xor
in
movb
cmp
xor
jnp
add
sbb
mov
push
sub
cmp
cmp
add
pop
or
add
fwait
fwait
sub
xor
sbb
push
jl
adc
stc
sti
inc
inc
cltd
dec
add
add
push
dec
sub
add
sub
xchg
jae
arpl
mov
adc
insb
icebp
mov
and
mov
sbb
insb
negb
xchg
arpl
sbb
jb
lahf
sahf
lods
sbb
add
fwait
xor
dec
push
push
andl
add
pop
sti
loope
jae
roll
lods
ss
inc
mov
jb
push
inc
xchg
or
stc
push
test
or
push
loop
push
cmp
add
pop
or
or
imull
xchg
je
lds
or
mov
sbb
push
in
stos
lcall
ds
icebp
adc
nop
dec
xor
mov
jle
jmp
and
das
sarb
fidivrs
sbb
jg
xlat
inc
fs
jmp
shll
inc
mov
mov
push
pop
test
pop
sub
imul
add
clc
xor
mov
mov
fbstp
nop
mov
push
pusha
pop
out
push
mov
aaa
push
dec
sbb
xchg
cmp
mov
dec
mov
jg
adcl
and
sbb
in
gs
xor
jle
push
jo
xchg
and
xchg
mov
cmp
addb
xchg
dec
aam
popa
insb
lcall
xor
lcall
sbb
int
orb
jmp
mov
cmpsl
lcall
inc
mov
rcrl
jnp
sarl
push
nop
mov
stc
daa
push
lcall
es
xchg
dec
inc
scas
daa
sbb
orb
ret
cmp
mov
les
jle
aaa
stos
add
pop
mov
xchg
mov
cld
pop
and
bound
inc
enter
fucomip
sbb
xor
aaa
mov
sub
inc
cs
in
movsb
shl
inc
lahf
adc
cmp
push
out
lds
shr
pop
pop
push
fs
jnp
pop
push
jnp
outsb
mov
or
lcall
fcmovb
mov
add
pop
or
lock
clts
lcall
cmc
loop
orl
sbb
icebp
push
add
push
fistl
fdivrp
mov
push
fdivs
cmp
xor
pop
pop
dec
das
add
lret
pusha
xlat
jmp
fists
test
dec
mov
push
int3
cmovp
push
loope
mov
sub
jo
imul
cmc
sbb
cmc
sbb
mov
loopne
insl
or
or
push
jae
lods
push
out
iret
jbe
pop
lret
cmpsb
cli
icebp
fs
std
push
pop
xchg
shrb
sahf
and
das
test
mov
inc
es
and
sbb
push
push
clc
push
add
xor
and
ss
cmpsl
sbb
pop
sbbb
add
sbb
enter
mov
or
push
clc
xchg
stc
movsl
clc
push
push
xor
sbb
cmp
les
leave
leave
mov
inc
sbb
jb
pop
fldenv
dec
rdmsr
adc
mov
or
sbb
push
cmp
push
stos
ret
add
inc
cmp
push
out
scas
xchg
inc
cmpsb
inc
mov
sbb
call
and
adc
stos
stos
outsb
std
add
inc
bound
scas
iret
add
repz
mov
or
or
repnz
pop
cmpl
mov
xchg
sti
and
adc
sub
subl
add
fdivp
lret
ret
gs
push
cmp
inc
cld
movsl
xor
setp
arpl
push
pop
mov
xchg
aad
add
mov
std
mov
bnd
int3
loope
int
mov
sub
xchg
inc
add
inc
jno
in
jl
push
lock
loop
dec
or
repnz
push
shrl
push
dec
fwait
lcall
xor
repnz
pop
nop
pop
xchg
aam
xchg
mov
or
aam
dec
push
xorl
push
scas
lock
icebp
xorl
cmc
mov
adc
loop
cmc
cmp
inc
sbb
xor
cmp
push
loope
in
notb
cmp
inc
xchg
stos
sub
add
add
enter
add
mov
sub
call
mov
cmp
cld
add
jae
add
fidivrl
in
popf
push
push
mov
adc
lahf
adcl
pop
fs
cmpsb
in
pop
cmpsl
pop
jge
imul
das
mov
sub
push
mov
in
shll
repz
add
loope
xchg
cmpsb
pop
shrb
cmpsb
add
repnz
dec
inc
lret
mov
jecxz
out
xchg
mov
push
decl
adcl
cmc
jle
out
scas
cwtl
pop
cmp
cld
lret
das
dec
adc
jle
fistpl
cmpl
mov
inc
dec
sbb
mov
xchg
popf
dec
nop
adc
mov
dec
push
loope
or
inc
push
movsb
pop
pushf
mov
cmp
hlt
call
sbb
cmc
xchg
jb
cs
jle
ljmp
sbb
shrb
into
adc
icebp
dec
dec
pop
sbb
stos
sbb
mov
jne
daa
sub
add
lcall
pop
in
shrb
je
sub
daa
imull
inc
mov
fnsave
lret
orb
fiaddl
ljmp
ret
lock
xor
inc
loop
stos
ja
push
movsl
fdivp
setb
sub
jmp
pop
sbb
dec
mov
mov
mov
in
xchg
adc
adc
mov
sub
stc
ss
sbb
fidivs
fistl
mov
icebp
cmp
xor
mov
xor
inc
and
das
xchg
pop
hlt
adc
sbb
loop
xchg
pop
cmp
in
sti
xor
testl
cltd
cmp
add
fistpll
push
in
addb
fdivr
rcr
les
or
rolb
cld
into
hlt
lock
jmp
pop
inc
inc
repnz
pop
scas
pushf
pop
rcll
push
stos
inc
leave
add
xchg
dec
inc
inc
je
sbb
arpl
adc
sbb
jo
sub
mulb
push
lods
loop
das
dec
jge
test
ja
inc
loop
add
adc
add
mov
jg
xor
pop
sbb
icebp
mov
stos
out
lcall
mov
lcall
pop
ss
jge
lds
sbbb
je
pop
lods
das
mov
sub
popa
loopne
jne
inc
pop
cmp
scas
xor
lds
jle
into
daa
decl
sub
sub
xchg
jg
pop
and
test
clc
or
mov
add
mov
jg
xchg
enter
cs
sti
in
jnp
and
aam
push
jg
bound
sbb
pushf
xor
pop
push
sbb
bound
adc
adc
adc
pop
pop
mov
mov
es
scas
mov
sub
ret
fisttpll
ljmp
in
jmp
add
sub
mov
mov
iret
pop
jmp
mov
xchg
sbb
mov
addb
mov
jle
pop
sub
into
stc
mov
add
inc
cmp
loop
or
sub
imulb
push
or
fiadds
dec
aam
jmp
sbb
cmpsb
sub
add
inc
or
sub
add
sti
mov
sub
add
jp
sbb
mov
or
sbb
add
mov
mov
ret
pop
push
push
jne
sub
and
dec
add
aas
inc
imul
cmp
ljmp
xor
cmp
adc
add
movsb
sub
inc
into
repnz
dec
lods
mov
pop
add
mov
pop
push
adc
push
mov
insl
cs
pop
dec
sub
dec
shr
add
arpl
sbb
and
lods
mov
insb
mov
int3
inc
and
push
dec
dec
sub
js
xchg
jns
mov
cmp
add
pop
cs
sub
pop
cs
iret
add
subl
add
jl
mov
cmpb
or
les
cmpb
mov
push
mov
out
mov
adc
outsl
xor
out
or
adc
add
jg
inc
cmp
pop
add
fwait
pop
aad
daa
cltd
mov
sahf
mov
mov
imul
mov
xchg
mov
lret
adc
push
aaa
mov
jne
sar
insb
cmp
xchg
lret
add
dec
fimull
sbb
popa
subl
sbb
dec
or
add
sbb
sub
mov
jge
sbb
movsl
cmpsb
roll
and
pop
pop
xchg
jl
add
dec
inc
and
lea
add
lcall
in
mov
cmpsl
outsb
mov
stos
sbb
pop
repnz
inc
push
push
aas
cmc
mov
sbb
call
sub
lcall
scas
pop
mov
ret
loop
stos
ret
popa
push
pop
int
ret
sbb
inc
jne
cmc
nop
movb
adc
xchg
adc
dec
repnz
dec
mov
dec
data16
xchg
pop
inc
jecxz
add
test
pop
lret
fiaddl
sub
negb
jle
push
adc
sbb
inc
push
arpl
inc
icebp
lret
pop
outsl
xor
les
icebp
lods
mov
pop
cld
dec
es
add
loop
loope
lds
mov
adc
repnz
mov
cmp
xor
and
sub
xor
fsubl
push
gs
insl
insb
jle
jnp
pop
into
bound
mov
cs
insb
cmpsb
and
imulb
ds
adcl
cwtl
push
mov
ficompl
push
movsl
lret
test
push
xor
ljmp
loop
xchg
or
rorb
stos
push
push
enter
mov
cmp
pop
xchg
test
adc
cmp
int
add
sub
or
push
rorl
insb
insb
cmp
hlt
xor
sbb
pushf
mov
sbb
repz
pop
call
inc
lret
xchg
jle
dec
mov
ja
mov
loop
add
adc
orl
and
dec
mov
add
push
cli
add
idiv
das
lock
aas
dec
push
jp
daa
push
push
mov
jbe
insl
push
dec
jmp
sbb
mov
aaa
jle
cltd
sub
add
sbb
sbb
xchg
mov
test
xchg
xor
ds
loopne
mov
push
addb
cmp
hlt
scas
testl
sbb
sub
pop
add
adc
fdecstp
or
mov
or
enter
imull
sbb
xchg
jae
add
jo
xor
push
pop
ljmp
push
add
sub
in
cmpsb
mov
ret
sbb
mov
adc
add
insl
dec
inc
push
push
xlat
repz
jg
pushf
ja
lret
add
mov
push
mov
jecxz
xor
fildl
or
lret
lock
cmp
adc
cmp
push
push
adc
aas
or
inc
js
push
sub
mov
jl,pt
subl
pop
push
shlb
popf
divb
pop
inc
mov
stc
push
pop
rolb
nop
data16
daa
adc
sbb
adcb
add
jbe
addr16
rcrl
add
es
xchg
gs
addr16
jmp
and
jge
out
insb
xor
xor
sbb
scas
pop
cmp
loope
mov
sbb
mov
loop
dec
push
cmp
popa
cli
sub
mov
push
mov
sbb
jecxz
pop
test
dec
xor
xor
jns
divl
cmc
out
sbb
outsb
cmp
adc
pop
xchg
jecxz
mov
notb
push
pop
xor
mov
jle
push
mov
or
lods
mov
jae
xchg
fwait
cmp
cmp
scas
arpl
pop
xchg
rcll
inc
out
js
ss
pop
dec
ljmp
push
cmp
xchg
push
jne
mov
addw
sub
and
cs
enter
sub
mov
rolb
cld
pop
xor
mov
sbb
pop
mov
test
cs
xor
andl
push
cmc
cld
add
pop
xor
aad
sub
ds
adc
mov
sar
pop
enter
rorl
push
roll
scas
mov
sbb
loop
movsl
sbb
sub
ss
adc
lcall
stc
mov
loope
and
adc
mov
add
loop
inc
or
clc
sub
mov
data16
repz
sub
sbbl
ja
nop
xchg
mov
xchg
sbb
into
inc
cmp
sbb
rorl
lds
jle
mov
dec
and
pop
add
mov
and
hlt
push
xchg
jae
sbb
or
jb
int
adc
insl
lahf
sti
xor
ljmp
das
lcall
je
mov
faddl
dec
xchg
jg
bound
adc
movsb
xchg
pop
inc
cli
mov
cltd
sbb
add
mov
test
add
jae
ret
cmpsl
notb
pop
dec
pop
dec
cmp
add
sub
mov
or
repnz
jle
lcall
dec
xchg
xchg
lret
jge
int
jmp
xor
hlt
push
popf
pop
mov
repz
adc
dec
lret
dec
scas
pop
xchg
aaa
cmp
jg
pusha
pop
loopne
mov
mov
add
mov
inc
mov
jnp
jae
lahf
push
scas
cltd
das
in
push
arpl
mov
es
inc
jns
mov
cmpsl
fdivs
popa
push
push
dec
aam
mov
shl
leave
xor
fldcw
jge
inc
push
sbb
xor
cmp
dec
or
xor
int3
add
mov
adc
loop
outsb
addr16
imul
and
setl
xchg
mov
addr16
scas
mov
and
inc
mov
cs
xchg
sub
adc
jecxz
jne
push
hlt
or
or
jb
gs
mul
into
push
movsb
call
dec
sub
lahf
loopne
mov
inc
sbb
sub
test
test
push
add
sbb
scas
icebp
push
test
mov
cwtl
imul
xchg
pop
or
testb
push
or
or
push
mov
jle
xor
movsl
or
and
pop
pop
cwtl
in
ret
inc
sbb
sbb
inc
das
jle
je
fimull
mov
popa
mov
cmp
sub
ds
in
rorb
jl
inc
add
cmp
or
outsl
adc
xchg
push
mov
test
pop
mov
push
add
cmpsl
jle
ror
inc
jg
cmp
subl
fs
lods
cld
int3
psrad
fstl
cmp
and
adc
inc
cs
push
pop
sub
out
movsb
out
hlt
dec
sbb
or
in
loop,pn
mov
inc
jecxz
frstor
movsb
roll
js
push
add
jge
jg
sub
dec
cwtl
pop
xor
sbb
jle
in
scas
in
fwait
pop
dec
dec
ficomps
mov
aad
sahf
popa
cmp
ja
ds
mov
sbb
jl
loopne
mov
cs
pop
lret
add
jae
and
sub
out
adc
dec
and
xor
inc
sbb
out
lahf
inc
mov
adc
out
pop
mov
rorb
jle
mov
mov
mov
dec
lea
mov
push
das
cld
push
int3
pop
cmpsl
mov
jge
daa
leave
mov
push
sbb
scas
gs
push
sub
dec
jnp
hlt
push
xchg
scas
cmp
sbb
pusha
test
jecxz
cmpsl
pop
inc
sbb
cmp
in
sub
and
inc
jl
fldcw
xor
pop
lds
add
dec
push
imul
add
adc
and
sbb
and
add
dec
subl
cmp
in
add
pushf
add
mov
add
sarw
jbe
add
cmp
jp
cmp
mov
xchg
inc
mov
xchg
xlat
adc
push
fwait
shrb
mov
adc
sub
loope
roll
push
aad
sbb
adc
add
cs
inc
jecxz
leave
xchg
push
repnz
xchg
pop
mov
mov
jle
outsb
cmpsb
or
adc
push
divl
into
ror
add
add
ficoml
xchg
mov
add
rep
add
popa
arpl
dec
inc
enter
cvtdq2ps
fwait
add
cmp
dec
jb
dec
mov
out
arpl
jecxz
bound
mov
dec
test
jnp
mov
pop
cmp
pusha
push
mov
cmp
dec
nop
stos
inc
add
cmp
add
mov
stc
sbb
sub
add
and
pop
clc
ljmp
inc
jp
adc
ret
scas
jp
rorb
les
sti
fprem
push
jp
rol
push
sbb
push
push
lret
mov
rolb
push
jp
sbb
push
mov
inc
xor
dec
and
jp
xchg
mov
jp
test
inc
pop
sbb
add
bound
sbb
movl
sbb
lods
imul
xor
mov
inc
push
sbb
clc
add
dec
inc
fstpl
es
sub
xchg
addl
cmc
mov
sub
mov
cwtl
fs
lcall
push
call
sbb
inc
lea
sbbb
push
into
popf
add
aas
repnz
add
sbb
xchg
je
push
and
xchg
mov
shlb
and
pop
repnz
mov
out
lret
ret
cltd
sti
push
mov
inc
cltd
xchg
and
push
mov
cmp
scas
imul
cltd
ljmp
dec
xchg
dec
cmp
cmc
cmp
je
inc
inc
fnsave
adc
cltd
ret
data16
ret
fwait
aaa
dec
mov
ret
fwait
stc
jne
outsb
addl
push
loop
sar
out
cmp
fildll
repnz
dec
data16
mov
sub
data16
hlt
aas
fs
sbb
leave
xchg
push
mov
jo
sub
inc
add
mov
shufps
jle
dec
adc
gs
shlb
sub
mov
lds
pusha
jle
mov
add
mov
loope
xor
insb
push
jne
sbb
dec
mov
popf
pushf
mov
xchg
xor
lods
sbb
rcrl
ss
push
sub
cmp
pop
mov
xchg
sub
mov
or
std
fdiv
repnz
jmp
inc
rcll
or
mov
jbe
mov
xor
push
imull
xchg
cmp
lods
sbb
and
mov
or
jmp
lds
jnp,pn
add
xor
iret
fdivrl
cs
fsubs
out
jmp
or
sarl
dec
out
and
push
mov
and
cmp
jae
or
insb
cmc
mov
mov
add
call
hlt
add
sbbl
fists
loope
ret
dec
jg
sbbl
xadd
jg
popf
mov
sti
mov
ljmp
push
mov
pop
xchg
push
pop
add
mov
adc
dec
xor
inc
mov
adcl
sub
and
xchg
push
test
fwait
test
or
sbb
fcomps
inc
xor
add
add
add
sbb
lcall
adc
add
cmp
add
sub
xchg
add
mov
roll
in
push
mov
mov
int3
adcb
cltd
fdivrs
xchg
cmp
stos
mov
sbb
add
js
xchg
stos
cmp
sub
jo
stos
jae
xchg
sub
push
push
mov
add
push
stos
insb
push
sbb
dec
sub
stos
mov
int3
dec
sub
sbb
out
stos
push
and
lea
inc
sub
repnz
loop
jb
data16
scas
jmp
jmp
inc
xor
mov
ret
cmpsl
lds
inc
dec
mov
add
scas
lahf
stos
out
inc
cmpsb
mov
xchg
cs
lods
sub
push
push
cmp
jns
ja
jecxz
jns
adc
sub
into
sub
fldt
cmpsb
mov
insl
inc
adc
sub
cmpsb
xchg
fildl
nop
push
popa
xchg
roll
pop
mov
xchg
aam
jne
adc
adc
cmp
jae
outsb
sub
sub
push
js
mov
add
subb
aam
dec
inc
inc
pop
add
xchg
push
mov
aam
jo
push
insb
mov
add
add
sbb
mov
push
cwtl
inc
sbb
cmp
jne
add
imul
insb
movsb
jnp
subb
sbb
es
cmpsb
ds
cmpsl
cmp
mov
mov
sbb
out
insb
mov
aam
add
add
in
mov
inc
adc
xor
das
lret
mov
clc
mov
mov
lret
jne
popf
cmp
mov
lret
and
xchg
in
sub
and
fwait
adc
inc
mov
push
lock
jmp
xorl
ds
xchg
ds
out
lock
sbb
jmp
and
or
add
xchg
rcrb
push
push
xchg
clc
stos
das
je
push
stos
loopne
pop
pop
loop
and
lahf
push
test
pushf
lret
in
outsb
adc
imul
jae
outsb
mov
jle
getsec
loope
push
daa
jl
jp
pop
sbb
or
cmpsl
js
adc
sub
and
nop
les
fstpt
push
cmp
xorb
xor
add
push
jecxz
jmp
jmp
cmp
fisubrl
iret
and
cmc
enter
shll
lret
aaa
pop
cmp
ss
add
xchg
mov
shll
lahf
movsl
cs
pop
add
sub
dec
lods
jbe
sbb
in
mov
idivl
cmp
or
les
inc
sbb
inc
frndint
mov
cmp
sahf
inc
jl
sbbl
hlt
mov
insb
mov
pop
and
mov
sub
push
xor
orl
sbb
nop
loope
xchg
sub
scas
pop
and
and
sub
xchg
xchg
outsl
cmp
sub
sub
and
stos
mov
loope
call
and
add
cmp
mov
out
xchg
sub
or
adc
sub
in
mov
adc
outsb
adc
rcll
push
dec
push
fistl
push
xor
add
adcl
sub
cvtps2pd
shr
jbe
and
rcrl
enter
jp
xchg
mov
pushf
sbb
inc
sbb
xchg
outsb
adc
cwtl
mov
mov
mov
sbb
cmp
cmpsl
add
lock
jns
cmpsb
leave
and
loopne
dec
fadds
sbbl
scas
insb
enter
dec
fsubl
ljmp
jno
push
or
fwait
pop
mov
ret
mov
push
mov
mov
hlt
pop
pop
sub
xchg
gs
xchg
bound
sub
cld
jl
or
cmpsl
les
pop
push
and
or
push
xor
in
in
add
adcl
mov
lret
push
sub
mov
cmp
cli
push
sub
jbe
add
dec
inc
add
popf
or
pop
add
xor
and
add
clc
xor
mov
cmp
pushf
pusha
fwait
cmp
insb
ljmp
in
outsb
stos
inc
xchg
inc
lds
dec
dec
cli
adc
jo
add
dec
imul
sub
sub
xchg
loop
cmp
arpl
mov
ljmp
stos
das
sub
and
insb
dec
lret
lret
push
or
xchg
jmp
pop
add
jb
mov
push
xor
adc
pop
sbb
sahf
repnz
inc
push
push
cmp
cmpl
and
fwait
xor
push
sbb
inc
xchg
cmp
fcmovbe
pop
add
xchg
loope
jo
jmp
scas
subl
faddl
xorl
dec
push
adcl
mov
lahf
xor
xor
dec
cmp
push
push
xchg
pop
sti
pusha
or
fidivrs
sub
rolb
pop
jg
jecxz
mov
neg
popf
aam
dec
std
cli
mov
pop
add
fdivrs
xchg
add
lods
mov
std
es
int3
rcll
std
rcll
mov
jmp
mov
cmp
mov
xchg
sub
pop
pop
cmpl
cmp
sbb
xlat
mov
sbb
pop
je
insl
aad
movsl
ret
frstor
and
lods
sbb
pop
push
mov
mov
pop
jp
and
pop
mov
popf
jnp
xor
out
mov
and
ljmp
aas
aas
icebp
mov
fcomi
or
neg
dec
ss
sbb
cs
xor
es
adc
push
add
nop
fists
and
push
sub
pop
jecxz
sub
mov
pop
mov
sti
push
loop
jg
and
adc
lahf
pop
and
and
xchg
popa
bnd
xor
pop
scas
sub
push
jo,pt
lods
or
inc
sub
js
lret
test
subb
push
sub
xor
js
rcrb
mov
leave
fsubrl
out
add
sbb
dec
dec
or
xchg
xor
ja
add
or
data16
bound
fs
xchg
aam
dec
jmp
sub
cwtl
push
daa
xor
sbb
lods
and
pop
adcb
dec
cs
and
or
loope
fwait
mov
ja
sbb
adc
jnp
inc
cwtl
mov
int3
jecxz
sub
mov
sbb
fsubp
mov
fcomi
decl
jb
in
cmp
xchg
and
div
mov
ret
and
out
nop
xchg
jns
sahf
push
mov
lret
add
sbb
xchg
mov
enter
jne
xchg
sub
fimull
mov
mov
repnz
pop
data16
jecxz
pop
mov
mov
stos
inc
jg
mov
popa
cltd
inc
sbb
pop
bound
cwtl
int
pop
mov
ja
and
jmp
bound
and
jecxz
ret
ds
dec
je
rorl
fnsetpm(287
loope
into
cli
mov
inc
push
jp
sub
jne
pinsrw
inc
lcall
roll
push
out
clc
pop
sbb
cld
and
push
inc
std
mov
cli
subl
sahf
mov
jno
push
sbb
push
pop
and
ja
pop
fsub
and
mov
pop
dec
and
pop
mov
and
mov
lods
ja
movsb
pop
fiadds
cmp
inc
push
xchg
fs
pop
dec
mov
cs
pop
stos
imul
cs
xchg
push
sbb
or
lret
pop
pop
bound
das
mov
addb
or
aas
jmp
sahf
shl
mov
pop
inc
test
push
out
ret
inc
mov
testb
inc
pop
xchg
scas
loop
sbb
and
fildll
mov
enter
mov
stc
loopne
sub
or
ds
xor
ja
sub
or
cmp
loope
scas
push
lock
pusha
push
test
data16
int3
out
mov
and
ss
ficoml
into
stos
repz
jmp
cwtl
out
mov
mov
and
sti
pop
insl
sub
mov
push
out
xchg
aaa
sar
sbb
int3
lock
mov
hlt
stc
dec
push
mov
and
cwtl
icebp
pop
fists
adc
jle
cmp
xchg
mov
mov
mov
add
xchg
nop
repz
inc
inc
stc
fdivrs
mov
inc
pop
mov
arpl
mov
sub
xor
pop
xchg
inc
and
repnz
leave
loopne
mov
mov
add
pop
dec
xchg
mov
jbe
mov
sti
xchg
xchg
insb
push
cmp
add
mov
dec
das
xchg
movb
sub
add
and
xor
adc
add
stos
fsubs
adc
in
add
or
adc
cmp
sbb
dec
out
jno
dec
out
sti
jbe
pop
mov
push
pop
pop
or
add
sbb
cmp
mov
jmp
popf
jmp
adc
jecxz
sub
push
sbb
mov
jl
cli
hlt
add
and
pop
dec
lcall
cmp
jno
pushf
add
xchg
fidivl
mov
cmp
fwait
jge
out
sbb
test
inc
les
imul
push
xchg
fwait
add
ret
cmp
adc
sahf
sti
repz
insl
int3
ret
scas
outsb
in
add
pop
mov
jmp
add
and
ret
sbb
xchg
ret
cmp
ret
sub
inc
ret
push
arpl
xor
push
out
mov
cs
xor
xorl
ret
ret
add
adc
and
add
add
out
clc
pop
xchg
sub
sub
xchg
flds
mov
pop
dec
cmp
inc
fdiv
bound
les
and
rcl
fimull
std
xor
inc
cmp
pop
xorb
or
aaa
push
cld
jb
sub
subl
jge
or
jbe
out
or
and
sti
bound
pop
pop
ficoml
jo
push
enter
adc
mov
jbe
mov
sub
add
jmp
mov
cmp
jecxz
jo
sbb
call
mov
sbb
bound
sbb
lret
dec
cwtl
push
insb
addb
dec
insb
pop
imul
inc
imul
stos
sbb
pop
push
dec
fiadds
pop
rclb
cmp
das
out
shrl
or
nop
jp
enter
mov
push
sub
push
pop
or
xchg
and
inc
sub
sub
mov
fdiv
sbb
cmc
xchg
pop
repz
sub
sub
stos
xor
mov
in
push
sub
xchg
dec
cltd
jb
adc
adc
adc
pop
or
fldl
mov
test
push
xchg
add
loope
push
test
xorb
sbb
push
adcl
lcall
xchg
enter
cli
mov
xorb
mov
push
lcall
cs
add
mov
das
out
xor
xor
adc
ret
and
push
sbb
add
jb
imul
mov
fwait
add
sbb
sbb
sbb
sub
lret
push
jl
push
cmp
shlb
imul
add
gs
adc
add
jae
stos
mov
jb
scas
sbb
push
cmp
sbb
pop
jnp
cmp
subl
sahf
and
push
clc
pop
push
test
cmpsl
insl
cmp
int3
add
sbbb
cli
or
popf
test
pop
jle
cmp
outsb
add
dec
cmpsb
add
adc
sbbb
insb
jno
xchg
add
mov
jne
std
sbb
push
daa
cld
pop
jbe
dec
jg
sti
pop
lret
adc
dec
ss
daa
push
mov
mov
or
jle
add
mov
mov
adc
sub
ret
mov
sub
dec
cmp
cmc
scas
add
into
sub
mov
xor
mov
adc
fwait
dec
sahf
imul
lret
dec
loope
cmc
ret
jae
mov
call
subb
cmp
or
push
or
xor
dec
xor
into
dec
mov
xor
into
pop
stos
dec
cmp
cli
lret
daa
sbb
mov
push
rorb
ljmp
sbb
adc
nop
fwait
xchg
push
mov
jo
pop
xchg
or
test
jle
incl
xchg
cmp
xchg
sub
sub
sub
stos
add
sub
test
sbb
xor
push
add
inc
sub
psrad
and
outsb
and
test
outsl
dec
iret
andb
cmp
imul
push
push
cmpsb
insb
push
cli
cmp
or
daa
jmp
sbb
pusha
sbb
mov
push
inc
daa
or
lret
xchg
push
aas
mov
push
adc
popa
jmp
lods
pop
or
pop
or
mov
inc
aam
sbb
xchg
loopne
in
sub
jae
add
std
and
mov
cltd
lret
push
sub
in
push
mov
xor
add
dec
stos
lret
cmp
push
mov
mov
jmp
cmp
sbb
nop
xchg
mov
mov
shll
mov
jecxz
and
mov
xor
or
enter
sti
adc
mov
sbb
inc
xor
jns
subl
or
into
push
adc
sbb
call
and
fmul
dec
fcoml
cli
xor
nop
inc
or
dec
stos
stos
dec
stos
fcompl
pop
pop
push
mov
adc
hlt
ljmp
mov
push
std
imul
stos
adc
dec
add
mov
sub
fwait
pop
inc
push
imulb
in
dec
sub
and
fsts
push
insb
movb
aas
jno
mov
push
push
daa
pushf
pop
in
cmp
mov
shrl
fsts
neg
mov
inc
pop
mov
dec
jle
dec
dec
push
pop
pusha
test
loop
cmpsb
sbb
cs
jns
adc
fwait
addl
fistpl
pop
xor
mov
fcomps
xor
jl
add
push
jns
cld
lret
add
fisttpl
mov
js
roll
orl
xchg
js
das
imul
adc
jecxz
pop
lret
pause
jb
add
add
lret
pop
and
std
js
mov
push
push
jns
pop
ret
stc
add
in
inc
jg
jp
int
cmp
lret
js
lret
pusha
or
mov
push
imul
push
imul
mov
or
dec
cmpl
adc
inc
sti
or
fcmovu
inc
addr16
mov
ja
stos
cmp
test
sarb
mov
test
sbb
pusha
and
imul
sub
notl
lods
pusha
cwtl
adc
sbb
cmpsb
sub
movsl
je
mov
aas
jp
pop
jg
icebp
cmpsb
bound
lret
add
out
pop
sbb
stos
push
jle
pop
jecxz
out
push
mov
je
adc
adc
inc
add
loop
cmpsl
push
rcrl
cmovg
inc
jns
inc
rorl
cmp
cmp
icebp
test
jb
mov
add
dec
or
inc
lcall
stos
cmc
repnz
mov
imul
mov
push
mov
or
mov
sbb
aas
mov
sub
ret
push
je
sbb
inc
cmp
add
or
adc
lcall
or
out
adc
lea
daa
dec
cmp
lcall
add
cmp
iret
jg
pop
loope
fisubl
mov
js
movsl
jge,pt
or
adc
xor
out
repnz
add
ret
xchg
push
jno
and
pop
push
add
add
dec
sbb
orl
xchg
pushf
xchg
xor
push
mov
sbb
sbb
popf
shrl
and
and
xor
cmpl
loope
cmp
repnz
adc
addl
xor
pop
jae
xchg
cmc
pand
xorl
notb
jle
ljmp
sub
mov
mov
iret
dec
fldl
mov
mov
jbe
cs
loope
xlat
out
sbbb
or
xor
pop
in
add
jns
mov
add
jl
or
arpl
js
sub
inc
adc
or
xchg
rorl
mov
std
add
mov
call
xor
pop
into
or
das
push
lret
xchg
adc
or
sbb
mov
int
cmp
jp
adc
inc
pop
dec
lcall
shll
ds
es
or
repz
push
add
aaa
xchg
sbb
popf
fstpl
dec
pop
and
jns
mov
push
dec
ss
sub
mov
mov
enter
out
sbb
xor
jle
in
mov
lds
inc
push
jne
fldt
popa
sub
adc
dec
mov
jecxz
pushf
cmc
add
daa
xchg
outsl
sti
lods
and
push
loop
push
sub
test
xor
ss
mov
dec
sub
inc
mov
inc
dec
xchg
sbb
into
pop
inc
cmp
push
push
dec
and
push
enter
sbb
mov
inc
out
add
ret
fwait
sub
push
mov
lods
sub
cmp
dec
pop
enter
push
dec
fisubrl
dec
jb
sub
addb
pop
cli
or
pop
dec
ret
mov
push
mov
outsb
dec
jb
enter
xor
fisubs
jecxz
dec
push
or
push
dec
adc
and
addl
xor
stos
adc
aad
std
inc
aas
out
mov
into
mov
gs
mov
fwait
scas
lods
pop
and
xlat
xchg
shlb
jne
inc
enter
adc
lcall
fstps
ficoml
dec
add
mov
sub
lcall
notb
xor
loopne
push
ret
push
mov
mov
jp
jp
mov
inc
lea
stc
fcoml
mov
in
aam
out
decb
jb
sub
jg
cmp
lcall
mov
loop
cmpsb
test
das
les
sbbl
stos
mov
and
mov
jnp
jb
xchg
ret
ja
inc
sub
dec
inc
inc
sub
push
in
inc
aas
lock
pop
idivl
adc
notl
scas
fisubrs
shl
cmc
int3
sbb
aas
mov
outsl
andb
sub
outsb
sbb
loop
call
cmc
cmp
ja
mov
icebp
insl
xchg
cli
or
jle
sbbl
adc
jge
sbb
cmc
inc
repnz
je
ret
cmc
cmp
sbb
jle
jb
loopne
xchg
loop
pop
enter
mov
sarl
stos
rclb
popf
aam
scas
pop
and
push
adc
rorb
ret
sub
aam
or
addl
dec
inc
popl
inc
test
fwait
sbb
jle
and
test
pop
je
std
arpl
icebp
cmp
sub
add
loop
lahf
imul
repz
loop
inc
mov
inc
nop
pusha
repnz
into
repz
add
jnp
jns
sub
lcall
mov
pop
xor
cmp
jle
mov
lock
or
outsl
xchg
jg
je
xchg
inc
fldt
push
loope
aam
out
lret
xor
pop
xorl
notb
sbb
leave
jnp
fmul
lret
data16
out
inc
or
add
rcl
das
sbb
icebp
push
sbb
push
xor
ds
adc
loopne
movl
stos
adc
sub
movsb
sub
test
dec
je
sbb
jns
cmp
cmp
pop
push
cs
ss
pop
in
mov
pop
in
sbb
pop
add
pop
mov
push
out
lock
push
mov
repnz
dec
mov
jecxz
add
dec
sar
xor
sub
jno
dec
andl
and
int3
js
aas
mov
loop
sbb
cli
or
mov
rorb
out
push
negb
xor
jbe
scas
jns
adc
pop
or
icebp
call
shrl
sbb
inc
dec
loop
push
mov
or
outsb
pop
cmc
test
jb
cld
popf
pop
xor
sbb
sub
scas
pop
pop
rcll
pop
fstl
ja
fldl
mov
cwtl
icebp
fnsave
aaa
mov
jbe
add
add
jmp
jne
dec
sbb
repnz
dec
hlt
fstl
das
cwtl
push
fstpl
arpl
sub
sub
lcall
mov
dec
push
ljmp
inc
lret
xchg
dec
push
lret
cli
inc
rol
stos
add
push
push
push
std
insb
mov
or
sbbl
xchg
lret
pop
mov
out
push
icebp
sbb
fstpl
pop
jo
ss
frstor
push
movsl
xor
push
movsl
cs
lods
jns
sti
cld
imul
push
xor
repnz
negl
mov
test
xlat
inc
in
loopne
imul
mov
in
loop
dec
push
je
test
test
dec
pushf
push
pop
popf
into
cmp
pop
popf
in
mov
jno
adc
or
or
push
insb
adc
and
into
sbb
insb
push
mov
fnstenv
jbe
pop
xor
in
js
mov
and
sub
cmc
xchg
neg
inc
jge
mov
loope
sub
mov
inc
or
jno
les
inc
cmp
sub
mul
rol
and
inc
mov
imul
sahf
sbb
or
xlat
loopne
sbb
cmp
or
repnz
cli
lahf
jne
inc
sbb
xchg
fsts
adc
in
loopne
in
daa
aad
je
push
dec
ds
pushf
loopne
dec
xor
daa
daa
jge
lret
insl
sub
lods
add
iret
cmp
syscall
mov
adc
push
dec
or
or
mov
or
mov
pop
jp
scas
stos
jge
js
add
and
xor
dec
fs
int
dec
push
jno
clc
enter
out
bound
inc
mov
loop
pop
or
jecxz,pt
add
mov
sub
int
pop
js
xorb
movsb
xchg
mov
daa
jne
sbb
shrl
push
out
loope
fstpt
jb
push
jecxz
mov
nop
add
enter
and
push
icebp
fwait
dec
fcoml
loop
sub
add
add
push
and
xchg
or
push
xchg
push
xchg
out
jl
jle
lahf
mov
mov
stos
mov
test
hlt
inc
mov
jecxz
mov
cmpsb
bound
mov
aaa
jecxz
out
into
cltd
cmc
cmp
and
xchg
cmp
sub
sub
add
aam
hlt
xchg
ret
sbb
imul
into
sahf
sub
or
xchg
push
xor
cmpsb
testb
setb
insl
push
pusha
lds
fimull
mov
xlat
sub
xor
push
enter
mov
push
dec
loopne
mov
test
mov
cld
sbb
dec
xchg
dec
push
pop
pop
sub
movsb
leave
mov
jge
sub
leave
sbb
jle
cmp
es
mov
test
mull
shlb
popf
xchg
sub
lret
testl
pop
sbb
test
jle
or
loope
pusha
or
sub
jbe
sbb
push
fildll
jle
push
pop
std
pop
cli
into
lds
xchg
add
or
loop
adc
mov
xchg
sbb
fs
ret
shl
and
loope
int
stc
inc
pop
sbb
sti
xorl
shlb
xchg
out
andl
push
lea
addr16
aad
dec
and
sbb
js
or
icebp
out
leave
orl
sti
addl
jp
mov
lret
hlt
loop
sbb
jle
pusha
enter
mov
adc
shl
mov
mov
daa
or
pop
arpl
add
gs
push
mov
test
xchg
lods
inc
filds
add
jg
jg
jne
or
in
or
dec
add
out
jae
pushf
push
orl
in
movsb
dec
ljmp
das
push
pusha
cmc
xchg
arpl
aas
cmp
xchg
jnp
les
daa
cmp
xor
and
jecxz
scas
insb
sbb
lods
leave
daa
std
xchg
addr16
arpl
andb
pop
mov
pop
stc
fidivrs
stos
fnstcw
daa
es
fstl
adc
fwait
sbb
mov
dec
xchg
inc
xor
mov
pop
int3
xchg
push
jo
or
mov
xchg
pop
xchg
or
cs
add
fdivrl
cmp
cli
xchg
jge
lret
pop
fmull
push
outsb
orl
adcb
in
jbe
ret
out
sub
cmp
dec
mov
mov
or
push
sub
pusha
not
movsl
mov
xor
sbb
in
push
cmp
cmp
cmp
add
xchg
fdivs
mov
adc
repnz
sahf
insl
inc
icebp
xor
hlt
xor
adc
mov
mov
loope
push
mov
insl
ja
push
push
push
pop
loopne
mov
adc
sbb
dec
inc
decb
int3
mov
daa
jg
fsubrs
mov
lock
repnz
inc
orb
inc
ja
add
inc
or
rcrl
outsb
lret
mov
iret
mov
inc
das
mov
add
xchg
adc
pop
add
inc
or
cmc
sbb
aaa
imul
jb
inc
or
lock
jecxz
or
jmp
cli
ss
dec
or
jle
add
adc
xchg
fidivrl
jno
inc
lods
lahf
xchg
cmp
fcomps
push
xor
xchg
xor
sub
daa
cwtl
sahf
dec
arpl
adc
insb
jecxz
sbb
filds
mov
push
push
movsl
add
adc
sub
dec
add
lret
ffreep
dec
pop
ds
sbb
inc
loope
cmp
mov
sub
clc
into
pop
push
push
push
pop
repz
or
dec
dec
cmp
inc
movsl
cs
dec
mov
cmpsl
add
and
loopne
and
and
aaa
movsl
add
ret
add
out
push
inc
out
jbe
push
mov
int
sbb
loop
xchg
mov
sub
stc
push
adc
ret
leave
popa
cmp
mov
dec
pop
mov
jb
inc
in
pop
cmp
je
inc
sbb
test
or
dec
xor
sub
xchg
sub
lret
in
or
push
xor
push
jg
mov
cmpsl
inc
and
pop
xor
mov
mov
mov
adc
jnp
push
adcb
or
fucomp
lds
sub
pop
outsb
adc
pop
repnz
mov
sbb
gs
push
leave
cmp
scas
mov
jne
add
inc
xor
adc
nop
adc
inc
inc
push
push
insb
xlat
cmp
faddl
out
popf
dec
pop
jp
add
fiaddl
dec
cmp
jns
sub
add
push
add
sbb
sub
dec
es
mov
and
or
push
into
mov
cs
jg
mov
push
and
cli
add
frstor
adc
mov
cmpsb
cmpsl
sbb
pushf
call
pop
or
daa
movb
pop
or
negl
xchg
jg
add
mov
xor
add
sbb
mov
mov
pop
mov
xchg
push
xlat
jo
xor
push
cmp
in
mov
lret
jp
stos
ret
or
push
sbb
xchg
hlt
adc
xchg
fisttpl
cmp
std
sti
sbb
popa
ret
outsb
xor
leave
sbb
popf
mulb
xchg
sbb
jae
leave
adc
jg
xor
idivb
cmp
outsb
and
sbb
lret
xchg
or
sub
dec
pop
push
jecxz
in
sbb
add
cmpl
adc
jo
pop
xchg
scas
or
mov
and
repz
stos
sbb
pop
popl
pop
mov
push
dec
test
loope
push
mov
std
shlb
jb
repnz
dec
lcall
pop
jne
cmp
test
push
cmp
imul
mov
inc
mov
fwait
in
ljmp
ja
mov
popa
xorl
xor
daa
fistps
pop
bound
pushf
popa
inc
jp
mov
and
ret
aam
sub
jno
add
xor
pop
inc
cmp
add
push
arpl
cmp
loope
mov
mov
jo
ds
sub
push
cmp
rolb
push
shlb
int
pop
orl
movsl
inc
out
add
clc
xor
repnz
out
pop
cltd
shrl
jbe
imul
jp
mov
bnd
jg
sbb
mov
outsl
sbb
jp
xor
jne
adc
pop
int3
or
scas
lcall
test
push
add
adc
cvtpi2ps
sbb
movsb
mov
dec
xor
mov
dec
syscall
mov
sbb
pop
movsl
mov
outsb
push
lcall
test
mov
fisubs
mov
push
lahf
mov
test
add
sub
jne
daa
inc
push
out
add
mov
icebp
outsb
sbb
jle
and
je
push
sbb
fdivrp
ret
out
pop
shrl
cmp
or
into
push
icebp
clc
cmpsb
inc
mov
add
sbb
mov
push
sbbl
xchg
ret
adc
sbb
push
mov
enter
sub
mov
xchg
sub
and
icebp
lcall
push
repz
xor
addl
mov
push
loop
dec
adc
sbb
mov
movsl
lret
and
jmp
and
pop
fisttps
jno
loope
pop
out
push
rcr
mov
push
add
movsb
cli
jno
rcl
ret
cwtl
cmp
gs
pop
or
out
fisubl
mov
test
jecxz
jg
cmp
jbe
jae
lahf
stos
outsb
pop
and
loop
xlat
cwtl
pop
cmc
mov
in
pop
and
push
mov
and
mov
xor
push
repnz
repnz
ljmp
pop
rcr
pop
sbb
sub
mov
mov
cld
dec
adc
jecxz
add
in
inc
sub
xchg
pop
cld
stc
mov
jg
sub
adc
sub
scas
cltd
mov
sahf
lods
xchg
sbb
push
sbb
sbb
std
and
sub
lret
xchg
push
popf
cld
ljmp
cmp
jle
cmp
mov
lret
mov
ret
inc
jp
popf
and
jne
jge
dec
lcall
imul
mov
scas
popf
sub
jl
fwait
mov
je
sub
pusha
add
je
sbbb
pop
push
call
mov
je
cwtl
jecxz
cltd
pusha
in
push
arpl
push
sbb
ljmp
loope
sbb
repnz
add
pop
inc
cmp
insb
or
or
and
xchg
orl
dec
sub
inc
pop
add
enter
inc
mov
ss
divl
push
imul
mov
add
or
xor
in
pop
jge
rclb
ficoms
loope
mov
sbb
mov
movsb
stos
outsl
mov
loope
fwait
stos
and
popf
out
int
push
push
mov
cs
movsb
loop
lcall
cmp
sbb
pop
mov
push
icebp
shlb
cs
sarb
lock
dec
pop
ret
sbb
push
pushf
ljmp
fcoms
push
scas
notl
ja
push
mov
lahf
sbb
int
pushf
call
insb
sub
pusha
outsb
or
xor
add
adc
mov
or
call
or
rclb
push
push
mov
loope
jmp
push
cld
mov
aam
xchg
psubb
rcrb
loopne
std
das
or
and
inc
pop
loop
arpl
cmp
das
sub
add
ds
adc
lea
cld
dec
cltd
add
mov
pop
mov
sub
add
jg
imul
sbb
test
xchg
xor
cmp
and
fimull
ret
cmp
pop
pop
lea
scas
cld
dec
inc
xor
sub
cmp
pop
jne
adc
pop
push
fmul
dec
mov
xor
add
xor
lock
mov
lods
push
push
pmullw
sahf
mov
aad
xchg
lock
and
add
int
and
es
lcall
pushf
inc
or
jg
mov
fcomi
lret
jl
jecxz
jo
add
xor
cld
call
adc
pop
jb
jmp
push
orl
push
ja
fdivrp
xor
aas
inc
mov
push
or
inc
ljmp
out
or
mov
out
cmp
ret
aam
or
inc
sarb
lcall
jb
xor
call
pop
dec
sbb
add
jbe
mov
jecxz
cmp
xor
jo
daa
xchg
inc
mov
push
hlt
cmova
sub
ret
clc
xor
jl
fadds
fimuls
dec
or
sub
dec
add
or
mov
movsl
mov
mov
mov
cltd
cmp
mov
adc
loop
sbb
cmpsb
shll
lcall
push
xchg
cmpsl
rcrl
and
dec
add
sbbb
mov
shrl
add
push
idivb
fstpl
addb
push
sbb
and
mov
add
sub
adc
ret
pop
shll
mov
sbb
loope
nop
rcll
pop
xchg
scas
or
xchg
fsubrl
ret
cmp
sub
push
or
inc
mov
fsubrl
jo
mov
push
jecxz
push
lret
scas
ficoms
shr
ljmp
and
and
aam
repnz
cmp
insb
das
sub
xlat
mov
orb
lcall
cs
sub
sub
rol
or
stos
int3
stos
and
and
or
flds
mov
push
mov
mov
mov
aaa
push
lods
nop
pop
addl
mov
jl
fcmovnu
add
stos
ret
mov
idivb
leave
stos
rcl
xor
cld
sub
dec
mov
cmp
cmc
add
sbb
jne
add
adc
xor
mov
cltd
sbb
in
and
inc
das
jle
pop
jb
push
sbb
pop
fisttpll
pop
rorb
mov
or
push
int
jb
or
cltd
and
jp
addl
jle
dec
stos
push
ljmp
mov
ret
and
and
loop
shrb
jb
jo
ret
mov
cld
loop
jg
cs
mov
jns
enter
sbb
inc
fisttps
add
mov
inc
mov
dec
rcrb
pop
xor
push
leave
pop
dec
shlb
jmp
mov
sahf
sbb
sbb
jp
lcall
out
repnz
stos
pop
stos
shrb
aas
aaa
dec
dec
fistpl
jp
sub
push
lods
bound
and
jnp
stos
mov
mov
loopne
add
jle
imul
jmp
jnp
or
pop
sub
shrb
test
bound
scas
adc
add
ja
push
sbb
mov
sub
es
loop
fwait
xor
adc
sub
stos
adc
in
shlb
mov
cmp
inc
pop
jp
pop
cmp
loop
dec
and
jge
jmp
jo
sub
xor
pop
mov
in
mov
movsl
and
dec
xor
jbe
push
push
ficomps
inc
outsb
or
pop
cmp
pushf
dec
adcl
pop
add
scas
add
lods
push
pop
jg
push
xchg
loopne
xor
sub
pop
mov
movsl
inc
xchg
imul
imul
dec
repnz
shrl
and
loop
pop
dec
xor
subl
outsl
mov
add
xorb
or
add
inc
lret
js
fdivrs
fstps
xor
and
cld
mov
lahf
call
mov
sub
jg
mov
sbb
int
xor
xchg
push
in
inc
jl
dec
dec
dec
fnstenv
es
and
decb
pusha
mov
rcrl
fwait
xchg
and
mov
or
add
cld
push
leave
push
and
sub
and
inc
je
add
mov
mov
add
int
xor
js
sbbl
push
int
or
sbb
pop
movsb
sbbl
shlb
sbb
sub
mov
dec
movsb
mov
jne
mov
pop
lret
outsb
ret
das
aad
int3
pop
sub
pop
adc
inc
mov
int
outsb
add
mov
add
sbb
imul
mov
and
sbb
repz
jle
loope
stc
add
or
cmp
pusha
push
xor
sti
mov
cltd
call
sbb
inc
loopne
xchg
dec
jbe
cltd
add
pop
bound
or
jg
and
lds
fdecstp
loopne
lock
push
inc
mov
mov
sub
or
xor
insl
xor
inc
xor
jns
jle
push
mov
js
jp,pn
dec
fs
inc
or
popf
jno
sub
int
hlt
fsubrl
dec
cmc
iret
pop
in
js
lock
mov
mov
mov
add
inc
mov
test
xlat
cmp
int
cmp
gs
mov
scas
mov
mov
cwtl
loopne
and
jb
sbbl
jns
ret
or
insl
xchg
dec
cmc
pop
and
les
inc
enter
dec
xchg
sbb
leave
lock
loop
lret
into
shll
inc
adc
add
inc
orl
dec
mov
ss
mov
inc
jle
mov
mov
or
push
xor
xlat
cmpl
or
cmp
imul
div
jbe
out
xchg
loope
lea
fists
push
add
test
std
lret
jbe
cmpsl
jle
or
sub
pop
orl
loop
lret
ret
loope
lcall
lret
cmpsb
sub
repz
pop
adc
push
leave
sbb
or
mov
pop
and
outsb
shll
mov
sbb
mov
xchg
push
inc
movsl
mov
lods
test
mov
pop
mov
mov
mov
add
std
xchg
lret
jo
mov
cmp
push
inc
mov
out
lret
bound
repnz
repnz
ss
repz
mov
lea
and
inc
outsb
sub
jl
dec
testb
into
mov
adc
movsl
std
adc
xor
enter
in
push
outsl
repnz
mov
mov
orl
mov
scas
push
pop
add
sub
adc
adc
and
sub
sbb
lea
in
xor
faddl
jo
sub
sub
push
andb
fwait
pop
mov
lods
addb
inc
cmp
das
push
inc
jle
cmp
pop
cmp
push
or
arpl
add
sbb
fwait
cmp
add
mov
or
dec
scas
pop
orl
ds
inc
hlt
roll
aad
aam
pop
jae
lret
xchg
fwait
lcall
mov
iret
dec
and
adc
push
orl
pusha
pushf
lret
mov
hlt
and
pavgw
leave
ss
push
scas
movsb
xchg
ja
sti
femms
jecxz
and
or
lahf
mov
dec
test
in
xchg
testl
pop
sbb
rcll
fcomi
mov
mov
fadds
cmp
adc
cs
ja
or
adc
fs
loope
in
adc
pop
adcl
push
mov
lahf
hlt
fstp
shl
sbb
mov
inc
mov
xor
sub
and
xor
inc
insb
rcr
dec
sbb
or
jbe
nop
andl
test
cmpsl
dec
cmp
sub
loope
xor
sbb
mov
inc
xor
push
fwait
or
mov
leave
xlat
inc
pop
sarb
rclb
jle
loopne
ret
inc
cmpsb
sbb
inc
jp
jg
mov
push
xchg
or
in
pop
cmp
inc
jle
cld
cmovns
sbb
fidivrs
stc
dec
scas
xor
in
lods
cmc
cmp
or
sub
std
xor
insl
stos
mov
shll
adc
insb
repnz
xor
icebp
orl
adc
stos
or
adc
inc
push
sub
sbb
pusha
test
test
loope
jns
daa
jecxz
fcoms
push
rolb
adc
loop
sub
pop
sbbw
ss
mov
xor
sti
sbb
sub
cmpsl
es
shlb
and
pop
and
push
push
outsb
cmpsb
cmp
loope
xchg
ret
mov
cmpsl
mov
mov
stos
es
sbb
les
pop
sub
jle
jg
sub
ret
repz
loope
loopne
jne
out
mov
das
xlat
cltd
adc
scas
gs
test
rcrl
cld
pop
sbb
aaa
call
jne
jge
jle
ja
mov
daa
out
add
repz
jbe
jge
push
jp
js
pop
loop
add
loope
xor
lods
out
push
cmpsl
pop
adc
call
inc
lods
ss
jnp
pop
insb
cltd
push
sub
test
rclb
cmp
inc
pop
xlat
jle
push
daa
ficoml
pushf
push
dec
ret
sub
add
dec
inc
or
fcoml
and
fisubs
jl
inc
add
xor
push
rolb
push
stos
sbb
rcrb
xor
ret
mov
sbb
aas
iret
pop
loop
cmc
lret
iret
xor
bndldx
pop
dec
add
lea
add
mov
or
leave
xor
xchg
insb
xor
dec
inc
mul
push
mov
mov
jl
outsl
repnz
scas
fs
je
mov
hlt
pop
in
repnz
movsl
dec
enter
sti
out
das
or
or
mulb
adcl
bound
push
jae
cld
test
dec
push
out
xchg
je
or
push
xor
add
and
insb
test
cpuid
xor
xor
sbb
gs
cmpsl
ljmp
mov
clc
lock
mov
loopne
or
jo
dec
inc
xor
push
jg
xor
jecxz
sahf
stc
add
adc
mov
call
cmp
rcl
or
and
into
sub
pop
pop
pop
in
adc
jne
fisubs
mov
or
pop
icebp
pop
mov
dec
pop
out
hlt
aas
xchg
xchg
pop
mov
popf
jp
outsb
cmp
cmpsb
inc
stos
fsub
lods
daa
das
je
cmpsb
xor
sub
pop
das
popa
out
cli
cmp
inc
cmp
xor
mov
pop
ret
push
pop
dec
lahf
test
pop
rcll
push
into
or
pop
xchg
scas
xchg
sbb
mov
sub
sbb
adc
loope
mov
xor
push
aaa
xor
and
ljmp
push
ja
jl
lds
dec
subb
cmp
inc
or
push
or
nop
out
sbb
or
push
mov
out
cs
dec
and
fiaddl
icebp
and
push
cmp
incl
adc
stc
fbld
nop
das
pop
dec
and
mov
xchg
lss
xorl
adc
fistps
lods
inc
add
sbb
pop
movsl
xchg
fdivrl
stos
dec
pusha
or
push
int
scas
sub
xor
xlat
cmpsl
push
jbe
jmp
and
cltd
jge
iret
bnd
sbb
dec
test
shll
test
insb
mov
or
enter
bound
stos
orb
gs
jbe
outsb
adc
inc
pop
sbb
mov
sbb
fldl
pop
add
xor
and
out
push
test
sbb
mov
in
or
negl
mov
add
jg
loope
sbb
lds
add
sbb
lcall
orb
mov
out
add
pop
mov
loop
and
lds
sbb
rcrl
test
sbb
inc
xor
repz
pop
mov
ret
imul
pop
sar
inc
data16
add
cli
inc
and
pop
sub
out
cmp
pop
divb
leave
jmp
je
pop
ret
inc
push
xor
sbb
inc
cmp
xor
sub
lret
pusha
add
stos
and
inc
fistpll
jecxz
rol
mov
dec
scas
ja
call
sti
daa
ja
rorb
bound
adc
cmp
and
push
scas
pusha
push
cmp
and
inc
add
test
int
sub
ja
pop
mov
lods
fimuls
inc
pop
mov
sbb
fisubl
sbb
or
loop
std
cmc
ja
push
lock
jnp
mov
iret
les
pop
mov
arpl
scas
mov
xchg
ljmp
pop
adc
clc
jnp
or
jne
jp
mov
daa
hlt
out
sbb
movsb
fmuls
scas
ficoml
inc
lcall
fistpl
imul
push
outsl
xor
push
inc
dec
mov
xchg
dec
adc
stc
adc
aas
jle
sbb
test
test
mov
mov
cmp
nop
jno
iret
enter
push
xchg
xor
mov
out
jne
ret
test
rcll
sbbl
fnsave
in
lahf
adc
test
push
loope
jg
mov
push
int3
and
mov
inc
mov
call
mov
es
and
daa
inc
cli
mov
sub
adc
jno
nop
mull
push
mov
ret
inc
in
dec
popf
jge
mov
push
enterw
lret
xchg
xor
aam
mov
sbb
sahf
push
inc
sub
adc
pop
popf
jecxz
mov
sub
sahf
add
jnp
push
test
sub
loope
mov
inc
xchg
mov
fisubrl
or
bnd
dec
fimuls
pop
repnz
repz
jbe
and
pop
or
push
mov
inc
or
pushl
xlat
pop
pop
jge
insl
mov
jecxz
mov
fstpl
movsb
cli
dec
xor
push
lret
call
pusha
pushf
mov
mov
xchg
flds
inc
adc
xor
hlt
mov
in
std
add
int
dec
mov
sti
pop
dec
mov
nop
sbb
out
cld
je
push
ja
or
cs
and
xchg
cs
sbbb
sti
outsb
inc
sbb
xor
xor
ja
add
inc
mov
js
repz
mov
jp
gs
and
hlt
jge
in
lds
and
add
jle
push
push
adc
in
and
inc
outsb
adc
fmuls
push
dec
inc
ss
addl
and
sbb
adcl
push
shr
dec
add
jo
jne
daa
dec
call
mov
sbb
jle
test
negl
sub
adc
ret
inc
mov
mov
cs
inc
pop
add
andb
sbbb
sbb
and
das
loope
xchg
scas
lcall
lea
out
and
push
add
sahf
jp
push
insb
mov
insl
test
das
jle
mov
call
pop
jne
cmpsb
std
dec
pop
sbb
sbb
fsubr
jae
fisubs
orl
jbe
lds
inc
sbb
cli
mov
fmulp
insl
loop
movsb
sbb
test
cmp
cmpl
adc
push
push
test
mov
adc
xchg
xchg
jbe
cltd
andl
lock
jae
jg
dec
mov
push
daa
cmc
cmp
and
popa
pop
dec
clc
and
mov
jne,pn
aas
push
repz
sbb
cmp
inc
jge
and
add
jno
push
cmpsb
into
dec
aas
mov
aas
pop
test
push
push
movsb
xor
dec
xor
sub
or
sub
mov
bound
mov
dec
or
and
mov
mov
or
test
test
lods
sub
daa
jp
lahf
push
jl
mov
movsb
imul
push
cltd
xorb
dec
rolb
add
cmp
rcll
sub
push
mov
adc
cwtl
dec
add
cmpsl
cld
cld
es
push
xchg
cmpsb
cmpsl
cwtl
lock
clc
pop
pop
insb
mov
jae
add
cmp
das
inc
loopne
lcall
pushf
ficompl
mov
sahf
push
xor
dec
outsl
sub
lcall
sbbb
mov
xor
push
ret
daa
push
cmc
cmp
mov
dec
sbb
loop
daa
or
xchg
mov
popa
repnz
das
jge
push
out
test
ret
mov
mov
loop
cld
dec
cmpps
push
xor
loop
jle
repz
add
aaa
mov
fimuls
bound
enter
outsl
mov
push
js
push
cmp
cmpsl
decl
mov
out
mov
mov
jg
mov
in
in
lods
inc
jmp
out
mov
sub
push
shl
dec
cmpsl
jle
xor
lds
add
scas
popw
mov
loop
push
imul
fistpll
mov
xor
jle
cmpsb
roll
inc
or
push
xor
into
and
out
inc
jmp
enter
push
jno
lods
lea
inc
cmp
adc
das
pushl
inc
mov
push
lcall
jp
shlb
mov
lahf
xorl
scas
pop
dec
xchg
push
and
sahf
add
mov
inc
adc
test
jae
fimuls
cli
or
pop
jmp
add
mov
mov
cs
or
shlb
dec
or
fucom
lret
roll
stos
inc
cmp
dec
mov
addb
dec
pusha
mov
imul
loop
pop
xchg
jg
jno
add
das
repz
push
in
add
mov
mov
jl
jecxz
pop
add
push
repz
imul
mov
aas
cld
imulb
jle
enter
outsb
push
adcb
rcr
enter
and
dec
sbb
xor
fisubl
dec
cwtl
jne
outsb
adc
xchg
cmp
stos
adc
loope
sbb
bound
xchg
mov
out
mov
push
pop
push
cmc
sub
or
dec
xchg
jl
dec
xchg
sbb
jle
testl
adc
dec
jg
popa
sbb
inc
testb
into
mov
jmp
das
dec
ljmp
jb
mov
loopne
bound
push
in
call
and
dec
mov
outsb
js
sbb
pop
lea
pop
xor
loope
push
in
cmp
mov
push
loopne
or
movb
jb
adc
inc
sub
mov
push
rcrb
xchg
dec
xor
jl
loop
ds
or
out
sbb
bound
popa
lret
cli
pop
xorl
cmp
shl
cmp
ret
fcmovu
pusha
je
into
xchg
fstps
popa
pop
sbbb
pop
ja
push
fstpl
sub
iret
lret
pop
cwtl
addr16
xchg
xchg
and
lcall
mov
iret
adc
pop
test
add
dec
into
sbb
lds
sub
jo
adc
dec
bnd
push
xchg
out
sbb
jge
outsl
jbe
fldenv
mov
lret
sub
data16
sahf
mov
pop
sbb
pop
pop
pop
aad
mov
loope
push
jecxz
sbb
lock
test
pop
or
jae
mov
cmp
fadds
test
hlt
push
sub
repnz
add
std
cmpl
adc
in
testl
add
xorl
push
icebp
sbb
and
push
and
or
jmp
or
sbbl
sbb
das
adc
push
gs
repnz
in
push
or
scas
xchg
outsb
adc
and
push
cmp
or
push
ret
dec
dec
adc
addl
mov
mov
addb
enter
into
fsubl
or
push
sar
out
inc
jb
or
test
adc
pushf
or
lret
jns
jb
mov
cwtl
cwtl
testl
mov
insb
xchg
mov
or
movsl
xchg
xor
cmp
inc
adc
into
jbe
jo
and
clc
std
inc
in
lods
das
rorb
push
negl
nopl
shrb
push
dec
or
xor
mov
std
sbb
aad
repnz
jle
lret
cld
into
jb
cs
dec
sub
xlat
dec
push
pop
cmc
jns
loop
out
mov
movsl
sub
sub
sbbb
xor
adc
fnstenv
push
testb
fldcw
add
bnd
in
shrb
and
pushf
add
daa
out
dec
push
jmp
repz
inc
ds
jno
inc
mov
adc
mov
cli
jle
add
add
scas
in
test
mov
jg
mov
popf
pop
mov
ret
das
fwait
mov
xchg
imulb
leave
insl
mov
call
adc
test
inc
and
testb
jl
mov
inc
push
addb
adc
xor
ss
cli
mov
popf
jne
sbb
stos
add
dec
bound
mov
sub
nop
ljmp
loope
mov
pop
mov
and
out
cwtl
mov
lcall
push
bound
mov
jae
mov
into
inc
sbb
push
push
jae
loop
gs
mov
cmpsb
ljmp
bound
sti
sbb
and
mov
sbb
scas
pusha
cli
push
ficoms
and
inc
dec
sub
loop
add
fmulp
out
push
pop
push
push
sub
lcall
loopne
scas
sub
push
mov
lcall
mov
ljmp
test
ret
sahf
add
sbbl
fildl
and
xchg
std
addl
xchg
xchg
test
cmovae
inc
sub
dec
dec
lea
ret
cmp
sbb
mov
mov
test
add
mov
test
jl
loope
mov
mov
cltd
mov
pop
lea
iret
inc
pop
mov
test
int3
fwait
inc
sahf
andl
js
add
outsl
enter
xchg
je
dec
or
call
push
dec
in
cmp
push
sbb
add
test
inc
leave
xor
dec
outsb
insb
das
stos
mul
pop
jecxz
andl
popf
jle
xchg
cli
jbe
and
add
insb
bound
xor
cmpsl
aas
scas
mov
aas
sub
xor
adc
shlb
pop
cmp
add
or
jbe
loope
pop
mov
add
cmp
ja
int
fiaddl
das
add
cs
and
jle
or
ljmp
or
dec
or
cmp
aaa
push
dec
cmp
push
mov
push
mov
clc
jge
mov
nop
mov
sbb
fdiv
push
or
mov
out
repz
cli
xor
mov
xchg
mov
and
fwait
inc
ret
dec
inc
sbb
jo
stos
ret
mov
lcall
push
les
xor
into
fcoms
xchg
pop
mov
jb
pop
shrb
test
test
pop
iret
inc
es
mov
sub
push
nop
loope
mov
test
insb
dec
jl
dec
lock
xchg
sbbl
and
xor
outsl
popa
push
ds
push
hlt
aaa
inc
shrb
push
pop
cli
and
jnp
das
add
jge
or
add
inc
sbb
push
push
nop
inc
je
sbb
mov
add
imulb
loope
adc
push
or
loop
das
jbe
lcall
bound
ret
pop
jns
movsl
mov
jb
lahf
push
mov
push
fs
jecxz
jnp
cmp
pop
jno
mov
pop
pop
inc
ret
adc
jno
jmp
or
xor
inc
dec
loop
cmp
test
push
sbb
xchg
xor
sbb
into
and
ret
movsl
push
cwtl
sbb
jp
inc
cli
loope
push
mov
xor
insb
out
add
jecxz
and
cli
loope
sbb
and
outsb
sbb
jecxz
flds
clc
and
lcall
pop
cmp
jae
pop
nop
push
je
or
idivl
andb
or
addl
sub
mov
fisttpl
cmpsl
push
mov
pop
loop
lahf
loopne
dec
pop
int
mov
lahf
jp
mov
inc
sub
pop
flds
ret
negl
ja
pop
loop
inc
cs
sub
mov
test
inc
popa
mov
inc
push
cmp
jmp
jl
jecxz
inc
dec
insb
mov
and
adcb
mov
das
inc
jne
jmp
push
out
mov
cs
pop
loop
or
mov
jecxz
sahf
inc
adc
sbb
mov
leave
lret
loope
mov
lock
fisttpl
and
in
mov
push
dec
cmc
rorb
cmp
jmp
adc
mov
xor
and
aas
and
mov
mul
lcall
outsb
push
in
or
dec
inc
sub
mov
and
sbb
adc
cmpsb
push
mov
lea
pusha
xor
sbb
insb
or
stos
push
scas
loop
and
xchg
push
jecxz
or
sbb
inc
cmp
jb
enter
mov
jecxz
mov
aas
inc
xor
call
cwtl
adc
fnstcw
cli
ret
add
add
pusha
cmp
mov
mov
pop
xchg
hlt
inc
or
push
inc
bound
cmp
mov
push
push
cmp
add
fldl
dec
cli
push
sti
adc
cwtl
clc
ja
dec
xor
in
mull
xor
sub
and
sbb
ds
and
sbb
sub
je
and
scas
dec
or
andl
or
loope
and
loopne,pt
scas
fldenv
das
dec
aaa
dec
das
and
xor
je
inc
mov
dec
push
adc
cmpsl
xchg
and
shl
sub
xchg
dec
add
inc
sub
arpl
and
xor
lods
jg
and
sub
mov
jae
mov
mov
cmp
dec
push
outsb
push
loop
bound
shl
hlt
lcall
lret
or
fwait
xlat
rcrb
mov
popl
or
push
movq
int
cltd
pop
mov
insl
dec
dec
jecxz
cmp
push
dec
push
jg
std
out
cmpsb
xchg
mov
mov
or
stc
mov
mov
fwait
jmp
inc
mov
pop
add
jecxz
cs
sbb
out
cmp
cs
mov
adc
and
adcl
lcall
pop
loop
ljmp
jmp
push
test
shrl
lret
addl
jle
decb
sub
jne
int3
adc
xlat
adc
cs
testb
add
lods
mov
push
jecxz
sbb
es
jp
jecxz
lahf
xor
xchg
lea
cmpl
sub
sar
mov
ss
push
mov
and
out
aas
sbb
out
test
jle
and
and
mov
sub
or
dec
inc
mov
fmull
arpl
dec
jecxz
sti
mov
add
add
pop
hlt
cmp
mov
or
mov
xchg
pop
dec
sbb
ret
or
movsl
pusha
hlt
push
mov
dec
push
loop
push
mov
pop
js
sbb
je
pop
nop
adc
and
mov
push
cld
dec
sub
adc
jl
inc
and
cmp
loope
test
inc
jp
add
mov
push
lret
pop
ss
jle
dec
push
jp
mov
or
mov
rcrb
gs
jbe
insb
jnp
mov
dec
pop
in
jg
bound
sbb
aaa
enter
mov
dec
xor
insl
push
test
add
inc
dec
add
sub
mov
xchg
addr16
mov
jle
dec
xchg
xchg
mov
sti
pop
sub
push
cmp
hlt
inc
xorl
xchg
sub
xchg
mov
or
lock
cmpsb
mov
imul
mov
popf
xchg
fadds
mov
repz
inc
cmp
aam
orl
lret
push
xchg
sarb
mov
aam
das
jg
mov
sbb
add
popf
cld
mov
orb
sub
lods
jmp
insb
jnp
test
mov
xor
inc
xlat
sub
cmpsb
cwtl
std
mov
pop
cmc
push
icebp
cmpsl
loope
push
lret
mov
xor
je
loop
sti
sbb
sbb
ret
xchg
outsl
js
pop
push
insb
addl
fcomps
pop
call
xchg
mov
mov
pop
sbb
or
loope
ss
inc
notl
lcall
xlat
sbb
aas
scas
xchg
dec
and
sub
or
mov
jmp
mov
pop
inc
adc
ds
movsb
or
enter
dec
cs
cmp
pop
sub
push
pop
andl
out
flds
sbb
xchg
in
jge
inc
or
and
cs
jle
popf
ja
cltd
or
sub
sbb
mulb
fnstcw
and
inc
dec
mov
test
push
mov
add
inc
and
xor
jg
cmp
shr
dec
sub
push
stc
shrd
xchg
xor
pusha
pop
rclb
jns
bswap
push
inc
jg
pop
push
arpl
dec
pusha
iret
and
in
outsl
fisubl
push
add
push
ja
cs
mov
xorb
dec
sub
ss
push
lret
in
or
leave
in
mov
inc
xor
cli
jno
loope
pop
mov
loop
dec
popf
cld
into
sbb
movsl
call
dec
add
sahf
xor
mov
ljmp
sub
sahf
dec
je
test
xorl
xchg
inc
jg
aam
push
jle
sub
jge
inc
lods
lods
popf
pop
iret
mov
pop
sub
out
adc
dec
mov
add
imul
loope
aad
pusha
and
and
cld
mov
xor
mov
inc
and
xchg
xor
sbb
test
jge
add
orl
and
push
mov
popf
or
pop
mov
push
pop
sbb
dec
mov
pusha
jle
outsb
xor
fsubl
pop
adc
lcall
add
fwait
ss
push
cmp
loope
mov
mov
ret
popf
sar
jbe
scas
push
lods
dec
mov
sub
and
and
and
sbb
out
add
inc
fstpt
into
je
mov
jg
sub
movsl
inc
add
dec
jle
dec
mov
sbb
adcl
jg
sub
dec
push
pop
push
pushf
rolb
sbb
into
dec
subb
jbe
sbb
jmp
add
sbb
sub
jns
cli
mov
jbe
sub
cmp
call
sbb
sub
xor
int3
and
jle
cmp
add
insl
and
stos
fiaddl
iret
jb
jg
cs
jbe
ljmp
cmp
repz
shll
xchg
imul
or
repz
cwtl
and
xor
fcomps
mov
xor
ja,pt
loope
mov
push
add
xor
fwait
dec
xchg
sub
mov
mov
jnp
xchg
cmp
lea
mov
xor
sbb
mov
gs
xor
add
divb
jae
xchg
sub
cltd
xor
sub
jne
xor
inc
icebp
add
push
call
lds
mov
aad
xor
xor
int
add
xlat
pop
and
xchg
or
adcb
mov
outsl
fcom
out
sarl
ret
pop
mov
xor
mov
sbb
jne
xor
jmp
xchg
stc
mov
inc
sti
gs
xor
sbb
xchg
sub
cmpsb
sub
ficomps
sbb
jmp
cwtl
xchg
inc
icebp
mov
or
mov
mov
scas
subb
add
dec
nop
add
push
roll
cmc
add
fs
lods
xabort
cmp
in
sub
mov
ds
cmp
out
sbb
outsb
movsl
add
push
orb
jp
test
cmp
mov
scas
sub
fs
outsl
or
inc
jne
cs
notb
add
stos
fwait
add
push
repnz
stc
sbbl
xlat
andb
adc
pop
sub
or
jge
clc
and
jl
fildl
lcall
push
mov
aam
cmp
out
imul
test
or
sbb
test
out
cmp
lcall
xchg
movsl
add
sbb
fs
jae
in
fdivs
int3
jp
clc
sbb
jnp
repz
xor
pcmpeqd
or
adc
mov
ja
dec
jns
into
add
push
mov
cmpsl
dec
ret
movb
andl
scas
and
push
jns
xorb
xchg
dec
add
and
sti
xchg
insb
adc
outsb
das
add
sbb
test
mov
push
mov
lds
lahf
popf
fcompl
jne
jne
lret
pop
repnz
fs
data16
cmp
dec
sub
dec
sbb
jmp
test
jmp
popf
sub
and
push
push
fcomps
adc
add
sub
adc
int3
add
sub
add
sub
cmc
out
add
push
mov
aad
or
lret
push
or
adc
cli
cltd
popf
push
pop
hlt
sbb
lret
cmp
add
dec
sub
pusha
setnp
pop
fistps
mov
push
les
movsb
ljmp
pop
push
out
cmp
lahf
std
sahf
sbb
mov
out
mov
stos
and
sbb
repnz
mov
sarb
dec
mov
xor
sub
pop
repnz
sbb
mov
push
lret
mov
outsb
mov
jnp
pop
mov
or
or
inc
pop
loop
sub
or
repnz
mov
mov
dec
in
jp
outsl
bound
cmp
loop
movsb
xchg
inc
mulb
jge
rcrl
movsl
outsb
cmpsl
hlt
adc
push
mov
xchg
nop
adc
fdivrs
loop
insl
ds
movsl
cmpsl
cmpsl
fs
cwtl
mov
inc
mov
shlb
fiaddl
test
mov
and
jne
mov
push
push
jo
cmpsl
hlt
sbb
push
cld
and
cli
stos
xor
inc
fwait
shrb
inc
push
test
fsubs
fyl2x
cmp
scas
popa
in
addb
lahf
inc
or
out
xor
ds
dec
pop
pop
nop
pusha
divl
push
inc
dec
sub
jnp
push
pop
enter
cmp
sbb
sbb
mov
jl
shrl
andl
push
mov
sahf
jge
cmp
lahf
aam
test
aas
das
ja
pop
jle,pn
xchg
sahf
inc
jae
jl
cmpsl
or
push
leave
pop
aam
dec
jns
jns
sbb
mov
imul
xchg
xchg
iret
push
xchg
push
mov
lock
push
repnz
ss
push
add
push
push
xchg
push
jp
mov
jp
loop
inc
cmp
fiadds
repz
inc
std
dec
push
lods
jecxz
popa
orl
imul
pop
cmp
mov
and
pop
ljmp
pop
xor
insb
or
bound
scas
inc
cwtl
mov
scas
cli
in
cld
jg
mov
or
push
xchg
pop
jp
cli
mov
rorl
dec
jo
insb
cwtl
pop
or
dec
fwait
adc
sbb
pop
ficompl
jae
lahf
out
mov
cltd
cmp
push
mov
dec
cmpb
dec
ja
mov
sarb
xchg
std
scas
push
loop
into
push
mov
test
sbb
rcrb
mov
mov
sbb
sub
lea
add
mov
jo
mov
cmc
mov
sbbl
loop
bound
je
popf
push
rolb
repz
pop
or
push
pop
pop
sbb
loop
mov
jge
icebp
xchg
inc
mov
movsl
fsubs
jmp
int
jg
dec
adc
and
mov
inc
add
sub
and
fmulp
jns
push
movsl
sbbb
fisubrl
or
mov
fidivrs
pop
cltd
ret
xlat
imulb
cmp
sbb
scas
mov
popa
jp
mov
into
lret
orb
out
notb
or
out
and
orl
mov
test
sub
fiaddl
pushl
pop
adc
frstor
mov
mov
cmp
mov
mov
inc
jmp
cmpb
and
and
jne,pn
lret
pop
or
cltd
pop
add
mov
icebp
jae
mov
mov
shll
mov
arpl
lds
test
dec
adc
mull
jle
and
jbe
jge
sub
push
mov
fstps
iret
add
push
push
sbbl
sbb
inc
imul
push
inc
add
leave
fcomp
pop
push
mov
pop
mov
xor
push
pusha
xchg
or
mov
mov
jg
movsl
fildl
pop
or
pop
xchg
in
sti
xchg
rcrl
or
int
cmpb
add
push
mov
xchg
inc
and
das
loop
jle
das
hlt
push
add
mov
cmp
and
jge
cmp
jb
mov
aam
mov
pop
in
mov
aas
mov
xchg
add
test
sahf
ja
into
xor
mov
aas
mov
xchg
daa
outsl
dec
sub
lods
dec
clc
and
add
pushf
cli
sbb
jle
sub
cmp
lods
lret
loope
bound
int
lock
xlat
out
outsl
repnz
popf
cs
repnz
dec
push
pop
cmpsl
daa
push
sub
pop
or
ss
jno
dec
sbb
push
and
mov
mov
add
loope
xchg
push
stos
push
push
out
in
cmp
jbe
cmp
loope
aas
mov
inc
mov
ss
push
fldenv
scas
pop
pop
xor
enter
push
sub
push
enter
incl
lret
lcall
jns
std
repnz
jbe
cmp
bound
and
shll
pop
xor
add
xor
sub
mov
push
enter
shll
mov
bound
mov
inc
fstp
ja
and
pop
arpl
popa
pop
inc
add
das
mov
push
shlb
xor
sahf
add
add
hlt
jae
sbb
inc
sbb
mov
inc
mov
mov
add
in
mov
loop
or
inc
loope
loope
mov
inc
test
add
push
fldt
outsb
lret
push
xor
and
mov
insb
sbb
fimull
sub
cs
sub
lcall
xor
jl
mov
sbb
add
or
pop
xor
iret
sbb
lds
push
cmp
orl
stos
enter
pop
mov
mov
call
add
mov
or
adc
dec
mul
mov
bswap
adcl
iret
adc
adc
jo
addr16
inc
cmp
gs
adc
ds
or
push
sbb
or
enter
in
jne
push
xchg
popa
jge
mov
clc
int3
into
jbe
push
lock
xchg
jbe
mov
jno
and
push
clc
jbe
div
xlat
push
push
sub
ja
aad
mov
out
push
into
adc
sbb
xlat
dec
jg
and
mov
in
mov
push
push
mov
cld
addl
movsb
or
cmp
push
lock
lahf
ja
mov
in
cwtl
mov
sub
mov
ss
or
scas
aad
xchg
sub
cs
jle
xor
gs
repnz
dec
aaa
ds
movsl
ret
int3
xor
out
push
dec
mov
dec
and
ss
pop
cs
pop
inc
pop
test
popf
test
jl
push
ficompl
or
jbe
adc
jge
xchg
mov
cwtl
and
es
dec
ficomps
add
pushf
add
jae
add
mov
test
out
stos
test
maxps
sub
pop
inc
lahf
fidivl
jae
pop
xor
fidivs
xchg
pop
pop
pop
call
jno
lret
out
fnstsw
jmp
jne
stos
fsubs
push
aaa
int3
sbb
fisubs
inc
push
mov
pop
dec
lahf
lcall
jns
ja
cwtl
push
pusha
push
xor
cmpl
daa
mov
xlat
adc
inc
mov
sub
lcall
lods
add
mov
or
or
jne
mov
mov
mov
movsbl
add
ret
ffreep
es
cmpsb
into
jle
iret
xchg
sub
dec
mov
mov
test
sbb
lock
cli
pusha
pop
push
mov
xchg
scas
mov
jae
ss
sbb
mov
sub
std
push
sbb
inc
sbb
in
sti
jne
in
push
dec
fs
fmul
jbe
sbb
lcall
jb
lcall
pop
mov
sub
stos
mov
nop
xchg
xchg
mov
xchg
sahf
jnp
test
test
orb
outsb
and
ds
enter
out
mov
clc
cmp
pop
arpl
push
sub
inc
xor
das
dec
lock
push
and
mov
cltd
sub
mov
xchg
mov
cmp
push
dec
adc
cmp
push
daa
cs
decl
or
jle
outsb
dec
sbb
das
pop
ja
mov
sbb
sbb
or
pusha
or
ficoms
dec
cmp
cmp
sub
es
lahf
ja
and
dec
lea
and
push
pop
add
sarb
pushf
dec
in
mov
xor
stos
sub
mov
or
jnp
xchg
pop
push
push
in
mov
dec
lods
inc
shlb
xchg
push
orb
ss
data16
adc
sti
ds
fisubrl
or
movsb
jmp
mov
aaa
lock
adc
notb
pop
push
mov
loop
mov
cltd
mov
sub
and
insl
inc
mov
inc
xchg
lret
addl
mov
inc
and
xchg
dec
push
push
mov
adc
daa
mov
out
and
mov
dec
xchg
je
lods
or
adc
mov
testb
mov
clc
ds
mov
test
into
in
cmp
mov
xchg
ret
inc
xor
push
fidivrs
out
ficompl
or
xor
push
enter
lret
inc
sbb
or
leave
sbb
mov
popa
sub
cmp
sub
mov
jecxz
sarb
fwait
inc
and
cmp
adc
sub
loop
lahf
push
push
ret
adcb
outsl
mov
pop
pop
jne
adc
jns
mov
or
jg
push
pop
xor
insb
adc
dec
fnsave
jle
pop
and
aam
jle
cld
lds
push
sbb
cmp
lret
test
dec
loope
call
pop
das
clc
jo
mov
pop
cli
mov
stos
dec
loope
mov
jnp
cmpl
xor
adc
lock
lds
call
cmp
je
inc
add
add
xor
imul
push
enter
pop
loop
das
cmc
imul
hlt
sarl
mov
ret
pop
movsl
mov
mov
dec
mov
movsb
pop
ffreep
cmpsl
and
mov
sbb
push
push
daa
push
or
std
cmp
mov
cwtl
hlt
sbb
jge
int
dec
pop
xchg
repz
pop
mov
mull
into
and
push
push
pop
pop
shlb
pusha
inc
add
xorl
cwtl
xchg
imul
xchg
out
add
and
push
ret
sub
sub
jle
rorb
fisttpll
sub
mov
cwtl
mov
imul
xor
shll
in
stos
orl
shrb
xor
loop
dec
inc
cld
addb
popf
push
pop
hlt
jl
ss
mov
mov
jb
bound
mov
or
mov
mov
inc
cli
push
dec
int
pusha
sbb
lea
jle
icebp
bound
data16
dec
add
and
insl
push
push
lcall
pop
xor
jle
xor
sub
xlat
xor
mov
push
mov
mov
push
addl
inc
push
push
shlb
popa
xchg
push
cmp
movb
mov
jmp
dec
xchg
mov
xchg
inc
mov
cs
notb
scas
loope
test
mov
mov
cmp
cmp
or
or
sbb
decb
xchg
xchg
fmuls
in
adc
inc
mov
cmpsl
mov
int3
xorb
pushf
cmpsl
and
cmpsl
dec
push
dec
add
pop
loop
inc
call
fidivrl
cmpsl
pop
or
bnd
or
mov
test
pop
and
push
jp
sbbb
mov
mov
mov
in
inc
mov
jl
iret
mov
add
into
sub
xchg
pop
cmp
stc
adc
outsb
or
cmc
fnstenv
int3
insl
and
hlt
ret
daa
sbbl
stos
push
icebp
enter
sub
dec
push
mov
mov
mov
insb
mov
mov
in
andb
inc
mov
sahf
imul
pop
pop
sbb
or
xor
push
and
push
and
test
stos
mov
sbb
pusha
fsubp
movsl
clc
shll
dec
sub
lods
in
jae
mov
out
rorl
sub
nop
insl
movsb
jns
mov
pusha
test
mov
jb
ja
dec
pusha
into
mov
movsl
sbbl
js
dec
cltd
mov
mov
ret
arpl
add
add
jp
jne
mov
daa
std
add
nop
test
aad
loope
jo
cld
mov
sub
and
loope
popf
imul
lahf
jo
and
jmp
aam
push
aas
das
mulb
incl
pop
testl
stc
loop
imul
flds
dec
shl
adc
xchg
repnz
into
pushf
push
jle
pop
dec
bound
sbb
daa
add
or
fisttps
mov
jle
call
xchg
pop
jg
mov
je
mov
cld
pop
sub
inc
sbb
xchg
xor
add
jg
nop
lahf
jg
xchg
sbb
mov
jge
ss
cli
mov
sbb
stos
pop
fidivl
add
es
inc
xor
stos
cmp
inc
pushf
mov
jo
loop
jo
pop
lea
xchg
inc
add
sbb
lret
outsb
inc
loop
mov
mov
mov
add
cmpl
repnz
loope
add
std
das
sbb
jl
jecxz
test
daa
negb
rcr
outsl
pop
or
mov
pusha
stos
xacquire
movsb
test
bound
dec
adc
jmp
and
push
or
inc
mov
push
fidivrl
sbb
dec
add
pop
xchg
ret
testl
movsb
and
or
and
inc
and
pop
cmc
pop
push
pop
jmp
js
popa
push
and
xlat
das
push
in
jnp
enter
fpatan
and
pop
test
out
bound
xchg
push
add
sub
sbb
and
and
incl
mov
jnp
xchg
popf
sbb
xchg
aad
test
push
adc
push
lret
in
mov
jle
add
cwtl
fisubl
and
push
mov
push
lret
arpl
xor
sub
mov
pop
enter
cmp
cli
enter
jg
mov
test
loope
adc
or
xchg
daa
out
rcr
jl
push
fwait
mov
bnd
xorb
mov
nop
sbb
mov
ret
push
sbb
imul
ja
adc
stos
dec
mov
mov
jp
mov
push
popf
lock
mov
inc
ret
cmpsl
lcall
or
or
pop
sbb
inc
mov
push
or
sub
icebp
popl
fcompl
shlb
test
daa
insl
push
shrd
sbb
data16
mov
loop
imul
cmp
out
sub
pop
stos
popl
jg
push
lods
mov
in
into
push
pop
lcall
mov
pusha
loope
pop
adc
add
mov
daa
jg
fcomi
push
sbbb
pop
jg
xlat
scas
sub
popa
push
loop
scas
add
or
adcb
aam
inc
sahf
popa
shll
adc
push
pop
cmp
lahf
mov
sahf
adc
sti
pop
loop
push
inc
test
xor
inc
push
sbb
lods
jecxz
xchg
sbb
xor
lods
adc
hlt
aad
push
icebp
andl
or
sbb
aad
jg
icebp
orb
subb
xchg
iret
mov
sub
movsl
stos
pop
push
fdivrl
cmc
add
dec
or
push
push
mov
sub
sub
jge
insb
iret
xor
fiadds
mov
test
jp
xor
push
cs
aas
add
jg
mov
jecxz
fsts
sbb
aad
leave
inc
sbb
ss
jle
cmp
adc
jecxz
sub
sub
mov
daa
push
fcompl
dec
dec
inc
mov
outsb
outsb
aas
mov
sbb
mov
or
cs
adc
fidivs
dec
cvtpi2ps
insl
hlt
mov
and
out
sub
and
shrb
aam
sub
dec
mov
push
mov
xor
and
cmp
dec
pusha
xchg
cltd
cmp
jle
imul
sbb
xchg
pop
sbb
add
sbb
pushf
out
xchg
push
es
aas
lods
lcall
dec
das
cmp
insb
mov
xchg
das
mov
lret
dec
cmpsb
pusha
push
test
in
test
pusha
fcmove
lahf
add
movsb
ret
outsl
or
adc
dec
jmp
loope
sbb
movsb
push
adc
jg
scas
xor
sbb
or
movl
lcall
rcll
cmp
add
sbb
and
sbb
sahf
mov
fistpl
imulb
jno
mov
mov
es
push
mov
push
mov
mov
sbb
sub
scas
inc
adc
jbe
jno
push
jle
dec
icebp
test
mov
xchg
hlt
cmp
pop
sbb
and
fsubs
lcall
mov
rclb
sbb
pop
sub
add
xor
loopne
ret
cmpsl
fdivp
mov
mov
mov
outsl
pop
xor
mov
hlt
add
add
lahf
push
sbb
into
sub
push
dec
cli
testl
adc
xor
cmp
pop
sbb
sub
pusha
aad
mov
push
push
push
aad
mov
cwtl
adc
daa
jg
inc
inc
icebp
divl
inc
jle
pop
dec
enter
xchg
rcrl
jle
sarl
stos
repnz
pop
inc
ljmp
sti
jo
lods
mov
adc
xor
ja
ljmp
mov
lods
adc
push
ss
in
sub
xchg
ja
rorl
pushf
enter
fdivrs
push
leave
jecxz
push
mul
cmp
test
js
lcall
sbb
mov
rcrl
push
and
pusha
rcl
xchg
and
and
push
push
cld
xor
jge
xorb
xchg
push
stos
add
test
daa
aas
hlt
rorb
and
adc
notb
sbb
lds
adc
pop
xchg
xchg
push
int
sbb
je
add
or
pop
loope
pop
sti
cmp
sub
movsl
scas
cmpsl
xor
inc
inc
pop
jns
dec
inc
and
mov
sbb
pop
std
js
sbb
popf
outsl
or
mov
out
pop
rorl
pusha
xchg
pushf
jle
lock
sbb
popa
xchg
jle
mov
and
int
cs
cli
jmp
mov
xchg
pop
ljmp
mov
pusha
pop
and
sbb
aad
out
jnp
pop
jno,pn
popa
lds
add
sub
outsl
lock
adc
fbstp
mov
inc
add
add
mov
push
cld
shl
fs
dec
cs
int3
dec
cmovp
je
leave
cld
sbb
jnp
into
aam
mov
sub
jecxz
and
xchg
lahf
dec
repnz
in
das
jg
and
mov
mov
jmp
sub
cmc
js
cltd
or
push
mov
push
jne
lahf
out
cmp
inc
or
cmc
or
or
push
psllw
pop
mov
movsl
xchg
mov
mov
mov
cmc
fs
add
imulb
inc
stos
out
sahf
push
jb
add
daa
adc
addl
cmovp
lock
das
dec
es
sub
cltd
add
push
sbb
mov
fidivrl
ds
rol
sbb
iret
push
cs
scas
dec
pop
mov
dec
push
push
ss
and
aaa
ja
pop
or
xor
iret
xchg
adc
adcl
adc
dec
push
std
outsl
mov
push
jb,pn
outsl
into
pop
pop
sub
cs
sub
ss
inc
and
jo
ret
jbe
shll
dec
push
inc
les
jp
test
or
push
andl
adc
scas
push
pop
inc
jne
js
mov
mov
cmp
outsb
ja
call
subl
sub
ds
mov
inc
into
and
cmp
and
and
fildll
add
mov
xorl
pop
sub
popf
inc
enter
sbb
loop
out
mov
test
nop
ja
test
and
into
inc
mov
cmp
shll
sbb
adc
sbb
pusha
and
sub
mov
mov
sti
ljmp
mov
aaa
inc
popf
or
pop
push
add
pop
aam
jg
mov
and
shlb
pop
adc
xchg
xorb
aas
stos
sbb
pop
repnz
cmc
or
shl
lahf
fs
dec
in
or
sbb
adc
cmpsb
inc
icebp
orb
inc
enter
lret
mov
inc
hlt
cs
lcall
mov
push
fwait
lret
sbb
jmp
fidivs
sub
mov
cmc
push
enter
test
cmp
mov
push
sbb
rcrl
rcll
jbe
adc
xor
into
xlat
test
fadd
or
rcr
ret
sbb
push
cmc
jae
loopne
repnz
test
testb
nop
in
adc
xchg
das
jp
shr
data16
push
scas
jmp
jo
and
jle
jecxz
and
paddsb
mov
repz
js
mov
xchg
xor
cmp
lock
lods
negb
cli
loop
out
das
mov
test
jns
outsl
loope
push
or
jbe
push
push
scas
data16
push
mov
pop
sbb
pop
repz
rol
insl
push
scas
into
es
adcb
push
mov
hlt
mov
sub
dec
and
dec
test
jge
jmp
pop
jle,pt
ja
cmc
cmpsb
inc
sbb
cmpsb
rorb
hlt
sub
sub
xor
test
insb
add
xor
mov
sub
mov
imulb
loop
std
sahf
lcall
testb
push
sbb
and
inc
mov
mov
mov
stos
sub
xchg
mov
sub
sbb
repz
das
pop
pop
push
mov
fwait
lods
aas
out
and
lcall
or
push
leave
or
inc
sub
jp
add
mov
inc
pop
pop
and
imul
push
and
xor
inc
fidivl
xchg
inc
jb
inc
lret
mov
pop
add
push
fxch
push
icebp
adcl
loope
and
inc
fcmovbe
daa
jle
xlat
sbb
push
loope
cmp
dec
adc
and
dec
lods
push
dec
loopne
orl
adc
ret
pop
inc
mov
xor
mov
popf
adc
sbb
bound
push
into
fnstenv
fprem1
into
xlat
and
loope
popf
pop
cmp
add
fwait
or
mov
xor
sbb
leave
xor
fidivs
mov
jne
and
imul
daa
or
loop
cld
push
xchg
push
xor
push
pop
add
jecxz
into
inc
in
and
lahf
enter
mov
lret
xchg
add
loope
xlat
pop
out
int3
and
jnp
dec
mov
and
mov
dec
mov
icebp
sub
push
cwtl
xor
fisubs
push
js
inc
loop
test
test
dec
jle
imulb
mov
mov
push
stos
popf
ret
mov
and
loop
cmc
inc
adc
mov
cmc
xor
add
jle
fisttpll
jp
push
sbb
dec
scas
mov
dec
xor
sbb
push
ret
pop
xchg
sti
sbb
mov
mov
dec
inc
cwtl
xor
sub
ja
jb
mov
pop
icebp
cltd
inc
dec
push
stos
mov
or
cmp
sbb
inc
pop
add
dec
add
xor
pop
outsb
cmp
and
push
jge
ds
pop
popf
push
mov
outsl
test
sbb
xchg
loop
out
es
pop
les
sbb
mov
iret
mov
pushf
push
scas
ja
jge
dec
lods
cmp
and
sbb
push
loope
sub
adc
nop
adcl
push
scas
adc
scas
or
cli
cmp
je
cmp
xor
ror
pop
sub
mov
or
mov
mov
sub
lret
into
jbe
arpl
outsb
add
xor
mov
cmp
ss
fisttpl
imull
call
sbb
or
ss
add
mov
inc
in
mov
pop
sbb
add
clc
dec
test
pusha
es
cs
mov
sub
sub
push
and
rcll
mov
dec
push
cwtl
cltd
or
mov
popa
lods
sahf
sub
cltd
mov
add
jno
lret
or
xor
ds
pop
idivb
cmpl
shrl
lods
movsl
sub
or
dec
jne
adc
or
adc
bound
cmc
lret
add
xorl
add
es
pop
inc
xorl
jns
pushf
xor
repnz
mov
cltd
outsl
test
inc
incb
xchg
jp
xor
dec
loop
mov
add
inc
jge
fiadds
push
bound
aam
addr16
lret
sahf
out
lea
fwait
inc
sub
mov
push
sbb
and
xor
push
push
cli
mov
pusha
and
inc
ja
jg
mov
bound
dec
pop
stos
push
stos
and
dec
outsb
mov
fisubl
and
out
xchg
mov
shlb
push
push
test
loop
das
outsl
fdivrp
add
push
daa
movsl
cltd
push
mov
lret
aaa
in
test
mov
bt
or
aad
rcrl
test
adc
mov
dec
xor
cmp
push
out
push
negb
fdivrp
cmp
mov
dec
pop
sub
aad
insl
dec
inc
cmc
sub
mov
or
imul
testb
adc
pusha
xchg
mov
hlt
jge
fcompl
filds
push
jl
adc
xlat
lods
add
mov
sub
sbb
xchg
mov
dec
lods
movsl
hlt
pushf
into
mov
adc
or
push
mov
test
shrb
add
inc
in
ljmp
mov
rorb
ds
mov
xchg
add
pop
std
fistl
jge
pushf
mov
fs
dec
cmp
lahf
jl
mov
mov
pop
push
xchg
mov
loope
js
int3
stc
sti
jle
pop
and
icebp
loop
pop
and
mov
lods
pop
das
xchg
xlat
mov
imul
iret
dec
sub
sahf
dec
stos
lea
xor
mov
das
push
ret
sbb
fbstp
jb
push
sbb
out
mov
pusha
or
dec
je
push
push
sub
ja
dec
out
lods
jmp
loop
mov
push
dec
pop
sbb
ret
jno
enter
jmp
xor
xchg
inc
inc
mov
ret
sub
xchg
jg
add
add
lahf
add
pop
ffree
xchg
fwait
sub
push
push
pop
cmp
fcomps
ljmp
push
loopne
jecxz
nop
push
push
fisubrs
mov
push
nop
or
es
sarb
or
daa
das
xchg
pop
cmp
pop
stos
jecxz,pt
pop
inc
cmpsl
je
adc
jecxz
fdivrs
subb
push
xor
and
xchg
cmp
jns
movsb
push
adcl
repz
sbb
cwtl
mull
mov
loop
dec
aas
imulb
pop
mov
rcl
sbbb
cs
mov
adc
xchg
pop
sub
mov
outsb
mov
dec
xchg
outsl
inc
sbbb
pop
pushf
mov
lds
jno
cmp
bound
mov
mov
mov
shll
pop
repnz
nop
popa
xor
hlt
popl
bound
xlat
cli
pop
roll
roll
lods
repnz
pop
je
mov
loop
pop
nop
loope
ss
jg
jnp
stc
outsb
cmpsl
mov
outsl
arpl
stos
sbb
push
xor
add
stos
loop
sub
and
in
mov
mov
subl
sub
push
loop
xchg
mov
fwait
rorb
xlat
mov
add
and
repnz
enter
aad
cmp
std
add
andb
ficoml
sbb
add
sbb
es
mov
dec
adc
and
add
ss
mov
imul
mov
sbb
ss
pop
pop
push
and
add
xchg
scas
out
into
cmp
or
cmp
dec
aaa
and
xchg
das
mov
mov
dec
mov
cmp
sub
mov
sbb
sub
sbb
cmpsw
sub
push
movsb
push
xchg
movsl
push
mov
bound
cmpsb
add
fdivr
add
push
es
add
ret
mov
or
iret
pop
movsb
ss
adc
scas
cmpsb
mov
mov
fwait
add
mov
jp
add
js
gs
sbb
in
ret
cmp
inc
add
pop
adc
insb
sub
and
dec
ds
ret
sbb
add
pop
ret
ret
into
in
add
lahf
jns
jae
orb
mov
mov
mov
pop
pop
repnz
pop
cwtl
sbb
xor
cmp
int3
orb
xor
jl
mov
daa
fisttpl
mov
add
ret
mov
fcmovb
jecxz
clc
ret
shrb
xchg
out
add
repz
ret
and
lahf
jno
ja
je
jnp
pop
xchg
outsb
jns
cwtl
mov
pop
push
xor
in
sbb
mov
xchg
or
add
push
inc
xchg
sbb
xchg
imul
ret
in
scas
in
ljmp
sti
enter
cli
lods
mov
test
mov
pop
out
cmp
stos
nop
adcl
sub
mov
cmp
inc
add
lcall
mov
cmp
pushf
cmp
sbb
mov
sub
leave
or
imul
push
jle
mov
and
and
push
int3
fwait
int3
mov
cmp
jnp
mov
dec
xchg
sub
pop
sbb
sbb
addr16
jp
sub
mov
enter
scas
cmp
cld
addl
inc
lds
cmc
bound
add
push
add
bnd
adc
stos
cmp
and
add
dec
cmp
mov
xchg
pop
jne
mov
pop
add
lret
shl
call
mov
into
sarl
les
dec
xor
mov
mov
clc
adc
lahf
arpl
cmp
add
pop
iret
mov
sub
push
sbb
movsb
and
sbb
daa
hlt
fiaddl
lea
pop
dec
cmp
push
or
pop
rcrb
cmp
and
lahf
jb
ret
adc
lcall
sbb
pop
dec
ljmp
jb
repnz
inc
mov
xchg
push
sub
shrl
sbb
inc
lsl
inc
sub
add
jno
fnstsw
sub
pop
adcl
jns
and
push
or
adc
xchg
dec
mov
or
or
or
add
adc
add
sbb
pop
sbb
adc
adc
dec
lahf
out
rolb
stos
sbb
hlt
aaa
cmpsl
xor
jne
hlt
cmc
ret
fisttpll
insl
scas
mov
xchg
roll
xor
loop
data16
xchg
and
xor
jbe
rol
ja
cmpb
lahf
mov
mov
jb
push
sbb
jns
movsl
imul
leave
pop
xchg
push
jne
jmp
xor
adc
test
lret
scas
mov
xchg
aad
xor
jmp
jb
ljmp
xor
int3
je
notl
lock
insl
loop
fidivrl
aam
mov
xchg
lcall
cmp
push
add
subb
call
inc
lock
or
and
andl
lahf
stc
mov
and
je
jp
mov
lods
jle
or
orb
rorb
clc
mov
mov
scas
sbb
inc
jbe
mov
pop
xchg
notl
inc
or
jne
aas
jns
mov
pop
popa
aam
lret
inc
subb
fmuls
in
mov
jp
mull
in
mov
pop
inc
out
mov
sbb
mov
adc
stc
push
test
insb
add
xchg
cmp
je
xchg
push
xchg
out
mov
mov
pop
loop
data16
iret
pop
arpl
cmp
push
sub
popf
fbld
imul
out
lods
push
fmul
xorl
sti
xchg
mov
cmpsb
inc
dec
xor
fucomp
sbbl
into
js
imul
fidivrs
push
ret
push
fmuls
out
aas
fidivrl
das
shll
iret
or
andb
das
mov
repnz
fcompl
punpcklwd
fistl
cld
sbb
mov
cli
and
mov
mov
sar
addr16
xchg
push
mov
mov
add
mov
out
xchg
data16
add
add
mov
test
mov
in
in
sbb
push
hlt
clc
mov
push
cmpl
fldenv
xor
sbbl
ds
mulb
popa
cld
ficoms
inc
out
sub
push
add
add
and
mov
insb
bound
repnz
cmp
cli
loope
fwait
adc
das
sbb
loopne
adc
sub
dec
mov
or
push
adc
mov
testb
leave
iret
push
hlt
push
lock
movsl
test
sbb
jb
stc
lea
popf
loope
xor
mov
and
stc
add
lcall
loope
into
add
and
loope
shrb
ja
sub
dec
or
mov
cs
or
push
push
test
es
pop
inc
mov
push
into
mov
sbb
push
scas
loop
hlt
fdiv
add
incl
repz
or
pop
mov
pop
addr16
mov
inc
fstps
mov
pop
cmpsl
adc
dec
push
ret
scas
test
je
add
adc
add
dec
jp
cltd
cmp
adc
xorl
ds
sub
pop
hlt
pop
cltd
ret
inc
or
push
fs
cmp
loopne
ret
cmp
je
scas
loope
ss
push
mov
push
inc
push
in
adc
push
js
sbb
pop
mov
adc
sub
sbb
insb
das
inc
loope
sub
xchg
xchg
and
imul
add
insl
xchg
xchg
dec
jno
xchg
sub
push
ucomiss
aam
mov
inc
mov
inc
aad
xor
inc
add
push
add
bound
pusha
inc
cli
jnp
mov
je
add
mov
imul
dec
cmp
test
xchg
push
das
adc
jno
je
or
stos
sbb
jmp
jo
outsl
push
sbb
in
mov
das
dec
push
shll
and
and
nop
push
xor
adc
jo
mov
daa
pop
aam
psubd
hlt
addb
stos
rorl
lret
das
mov
setle
jge
push
lcall
ljmp
mov
cld
in
into
xor
dec
jle
or
pop
loop
shrl
cli
cmpps
and
pop
sbb
andl
dec
mov
pop
test
xor
into
or
es
push
outsb
mov
and
mov
push
stos
pop
dec
adc
cmp
xor
jg
mov
incb
and
mov
outsb
ds
inc
dec
test
sbb
sti
jl
hlt
xor
and
cwtl
cmpsl
jb
or
fiaddl
ds
lds
inc
and
pop
scas
push
push
das
jge
sub
ficomps
shl
sub
clc
adc
lods
mov
loopne
jne
sbb
sub
imul
hlt
push
dec
sarl
fucom
adcb
xor
push
pop
fwait
pop
sub
mov
mov
cmp
add
outsb
mov
add
hlt
jns
negb
add
jg
fdivrs
inc
and
inc
cmpsl
xor
pop
je
subl
sbb
les
rcrl
sbb
push
bound
popa
jle
das
pop
jae
add
jg
lahf
dec
pop
mul
lods
movsl
mov
mov
jns
xor
jb
cmpsl
clc
mov
add
xor
jnp
add
rorb
dec
movsb
lods
das
ss
mov
xchg
sub
or
push
shl
or
insb
cmp
leave
jnp
sbb
sub
sub
xchg
sbb
push
pop
mov
das
xchg
xchg
jae
push
jecxz
pop
movsl
aaa
push
popa
mov
xchg
ret
mov
sub
sbb
sub
jbe
repnz
inc
jle
and
scas
outsb
push
pop
dec
jl
sbb
jg
rcr
das
loope
pop
inc
adc
jle
pop
dec
sbb
cmp
fldt
lcall
out
sub
mov
mov
pop
movq
mov
inc
jo
hlt
les
push
add
test
ja
ja
lcall
or
and
dec
je
or
lcall
cli
add
sub
dec
lahf
sbb
movsl
jge
rcrb
lea
push
sbb
xor
mov
sub
dec
adc
mov
sbb
add
int3
inc
sbb
fisttps
pop
fstpl
insb
adc
dec
or
adc
mov
inc
movsb
jnp
jecxz
pop
orl
mov
sub
pop
loop
lahf
mov
jecxz
jo
and
inc
mov
push
sbb
jae
fcmove
jle
cmc
sub
sbb
imul
das
int
push
cmp
data16
aas
popf
cmpsb
or
or
movsl
ss
lea
data16
adc
shlb
inc
pop
jg
xor
cltd
into
inc
jns
push
cmp
xchg
movsb
sbbl
xor
pop
fidivl
mov
loope
mov
inc
movsb
dec
add
lods
lahf
pop
push
xchg
cmp
aas
jl
scas
add
daa
adc
jle
push
inc
jg
aad
add
fstpl
es
jne
push
inc
add
lcall
ja
sbb
sub
loopne
sbb
lcall
cmpsl
sub
dec
add
loope
jbe
mov
jle
mov
fdivs
mov
xor
push
out
lcall
dec
adc
je
cmp
lahf
fstl
dec
inc
xor
jle
sub
adc
loop
or
stos
loope
sub
gs
sbb
jmp
xor
and
cld
mov
lock
pop
push
mov
inc
lahf
lret
orl
movsl
inc
sbb
mov
nop
add
cli
cwtl
mov
push
mov
sbbl
xchg
test
cmp
call
jp
fimuls
pop
jle
and
and
xor
push
rcrb
cmp
jecxz
leave
inc
addl
add
xchg
mov
fcmovbe
test
lahf
sbb
shlb
adc
insb
mov
lcall
push
xchg
data16
mov
mov
jns
js
loope
scas
cmp
push
xchg
add
xor
fs
xor
sahf
bound
xchg
xorb
ja
add
loope
inc
sbb
adc
pop
sub
push
ret
pop
adc
mov
xchg
or
ja
cwtl
mov
push
lret
addb
push
mov
lahf
cmp
jecxz
cmp
int3
mov
shl
int
xchg
jle
mov
mov
push
loop
dec
mov
sbb
ret
scas
ret
sub
xor
call
sbb
xchg
jbe
loop
pop
sbb
test
aaa
xchg
adcl
jecxz
daa
dec
xchg
aad
je
cmpsb
adc
sbb
sub
insb
adc
loop
mov
xchg
imul
cmp
nop
jo
or
cmp
pop
adc
or
cmp
xor
and
andb
and
mov
std
sbb
jle
dec
or
xchg
dec
jecxz
xchg
and
adc
dec
cmp
jle
pusha
cli
lret
out
xchg
dec
cmpsl
jo
push
loop
insl
and
sbb
or
or
xor
je
testb
add
jns
cmpsl
add
jg
mov
dec
or
mov
xor
or
xchg
fs
cld
dec
adc
leave
xchg
add
lret
xor
pop
inc
shll
or
loopne
sbb
ss
mov
ljmp
pop
loop
mov
add
call
bound
mov
jmp
push
cmp
into
stos
xchg
scas
inc
cs
push
or
adc
pop
js
jnp
sub
out
push
pop
sbb
jns
sub
orl
movsl
cmp
adc
outsb
pusha
add
xchg
int3
xor
loope
jmp
pushf
and
into
decl
push
mov
sbb
jae
leave
inc
xlat
or
mov
ja
push
dec
orb
ds
cmp
sub
imul
addl
xor
lds
and
jb
decb
movsb
loop
mov
jo
push
sbb
loope
sbb
add
fcom
pop
lcall
fucom
mov
addb
pop
push
xchg
jp
mov
dec
gs
and
inc
pop
outsl
pop
aaa
push
pop
mov
sbb
sbb
xchg
fsubl
cmpb
cs
in
mov
lret
mov
dec
shl
cwtl
out
movb
sbb
pop
lea
xor
aam
fs
pop
fsubp
cmp
test
mov
jnp
add
push
leave
jo
in
sbb
loope
mov
lds
inc
rcl
lcall
push
dec
mov
inc
xchg
cmc
inc
adc
pop
sub
pusha
cmp
push
xor
or
dec
and
adc
lret
in
jg
add
ja
pop
inc
sub
jae
out
jg
cmp
aas
outsb
sub
xchg
dec
mov
push
in
pop
mov
clc
adc
and
or
jle
je
aas
sti
popa
clc
pop
pushf
mov
ret
ja
loope
mov
or
adc
loope
pop
out
inc
leave
jnp
add
sub
jbe
push
jecxz
sub
sub
call
ret
fists
stos
mov
pusha
sub
mov
test
mov
push
movsl
push
inc
push
loop
xorb
cmpsb
pop
loopne
cmp
ss
pop
sub
mov
lcall
dec
movsl
jne
lret
xchg
add
lret
popa
stc
loopne
add
mov
cli
mov
jle
pop
jae
das
pop
roll
push
sub
push
fisttpll
pop
outsb
sbb
mov
imul
mov
inc
cld
sub
xor
data16
dec
add
and
push
arpl
cmp
jb
daa
jns
aad
and
sub
jge,pt
aaa
cmp
in
push
jnp
mov
jmp
pop
jecxz
jg
push
mov
inc
sub
xor
mov
pop
lret
out
mov
jle
shlb
daa
mov
mov
add
inc
cltd
cld
xchg
or
sub
out
ret
stc
dec
sub
jl
into
cmpl
jno
mov
xor
cmp
push
push
push
xor
insl
fidivrl
or
stos
xor
add
cmp
push
cmp
mov
dec
adc
sub
outsl
ljmp
jp
xchg
popa
add
scas
cmp
jle
rcrl
jne
in
aas
sbb
into
shll
das
xchg
sbb
cmc
pop
mov
addr16
xor
mov
lods
push
sub
cmc
mov
fwait
addr16
popa
shrb
incl
orb
loop
push
sub
sbb
and
scas
test
sti
ret
xor
push
or
push
enter
fsubrl
adc
lds
icebp
push
adc
adc
dec
inc
pop
cwtl
bound
jnp
nop
push
and
into
and
inc
add
sbb
sbb
out
mov
jb
cmc
jl
dec
xor
clc
pop
scas
add
push
fs
icebp
fwait
pop
pop
or
adc
ret
cmpsb
inc
lods
push
enter
ja
hlt
xchg
sbb
hlt
xlat
lret
push
mov
push
sub
nop
push
xchg
or
je
fdivrs
gs
push
orb
sbb
loope
cld
mov
outsl
arpl
pop
mov
or
ja
sbb
stos
inc
jmp
xor
sbb
mov
loop
add
inc
imul
inc
adc
incl
arpl
cli
cmp
ficoml
adc
popa
movsl
rcll
ret
pop
repnz
fisttpl
jg
and
or
ret
enter
loop
pop
imul
fs
add
sbb
sub
jmp
xchg
mov
pop
add
loopne
pop
pop
adc
fistl
jl
cmc
stos
fdivrl
push
sub
daa
add
xchg
ret
fidivs
mov
jae
or
aas
orb
jae
inc
sub
jbe
mov
sbb
mov
sbb
xor
pop
aaa
ljmp
loopne
out
xchg
fsubr
test
sbb
cmc
cmpsl
mov
adc
or
xchg
add
or
cli
adc
int
clc
bound
mov
sub
cmp
push
ljmp
jo
out
and
ljmp
sti
dec
jecxz
and
dec
arpl
and
mov
inc
xor
imulb
std
aad
and
mov
mov
cwtl
sbb
inc
and
push
pop
mov
sahf
adc
jnp
test
aas
or
xchg
jns
xchg
dec
jp
dec
jae
ds
outsl
add
or
repnz
pusha
adc
mov
sbb
lock
loop
sbb
push
divb
pop
dec
xlat
popl
dec
push
lret
sbb
cltd
dec
pusha
adc
dec
out
call
push
cmp
jp
sbb
push
adc
dec
xchg
jo
shll
dec
mov
cmp
add
xor
cmp
icebp
and
inc
js
mov
adc
cmc
mov
mov
mov
add
das
sbb
cmc
repnz
insb
add
jbe
sub
xor
in
add
std
sbb
aaa
add
fs
fimuls
dec
add
dec
or
mov
push
popa
cmp
sbb
ret
adc
add
push
push
jle
mov
and
dec
movl
clc
divl
jo
xor
test
xchg
in
mov
push
sbbb
sbb
jecxz
sub
inc
cmp
sbb
in
or
add
mov
push
lods
add
xlat
in
insb
cmpl
xor
jnp
add
dec
aaa
xchg
sbb
pop
push
in
dec
sbb
add
adc
cmp
sbb
pop
jp
jle
xchg
out
pop
std
stos
cmp
xor
scas
in
dec
rol
cmp
add
cmpb
mov
outsb
iret
add
pop
mov
cmp
mov
cltd
dec
inc
fmul
sbb
pop
mov
mov
dec
pop
xchg
out
jecxz
dec
inc
dec
pop
xchg
lret
add
cmp
dec
testl
cmp
ljmp
dec
insb
imul
daa
add
incb
jl
fcompl
jge
dec
rcrb
add
shlb
imul
int
out
bound
push
jge
dec
sub
add
sbb
movb
sbb
xorl
dec
imul
and
add
sbbb
mov
add
bound
push
cmp
imul
dec
dec
repnz
adc
dec
repz
xchg
dec
bound
push
adcb
js
push
lock
movb
jnp
ret
xchg
rolb
stos
std
mov
fwait
and
cmp
sub
pop
sbb
mov
xchg
enter
fwait
jns
mov
add
jmp
popf
insb
lods
das
jle
stc
mov
pop
sbb
and
sbb
pushf
mov
push
jne
movsb
adc
jbe
xor
pop
or
sub
orb
inc
adc
and
pop
enter
dec
or
push
mov
push
push
outsb
dec
sbbb
jb
loop
test
test
aaa
cmp
pop
adc
or
dec
or
dec
lods
pop
enter
es
fbstp
jge
rcr
popf
pop
xchg
enter
sbb
aam
inc
in
sbb
push
sbb
mov
lods
jbe
pushf
inc
pop
mov
dec
xchg
jecxz
push
cmp
mov
pop
pop
jbe
inc
dec
xor
cwtl
movsl
fcompl
int3
repnz
std
ror
sub
scas
adc
or
pop
pop
rcrl
xchg
dec
loop
pop
mov
outsb
mov
xchg
nop
lock
test
jno
xchg
andb
bound
subb
jle
das
shll
loop
in
sub
stc
and
jbe
jl
pop
xor
adc
inc
jle
clc
stos
sbb
mov
sbb
push
inc
lret
mov
sub
or
pop
pop
mov
or
loope
orl
sahf
enter
rolb
pop
lods
scas
pop
in
andb
fs
xchg
mov
ret
jno
mov
pop
cmc
jns
add
xchg
pop
fidivl
xlat
jns
loope
push
push
mov
les
mov
sub
cwtl
jp
orb
xchg
loop
pop
repz
sub
push
popa
pusha
fwait
xchg
dec
mov
inc
pop
mov
sub
push
sbb
popa
cmp
xor
leave
sbb
jg
mov
loope
jne
cmp
loop
outsb
test
bound
rcll
pop
jbe
mulb
cmc
addb
ss
or
inc
jle
dec
repz
outsb
or
push
adcl
jb
xchg
inc
iret
xchg
mov
popf
stos
xlat
punpcklbw
push
mov
jmp
mov
add
insl
icebp
mov
ud2
cli
loop
inc
in
mov
jbe
test
sub
testl
divl
sub
cltd
or
mov
int3
jae
int
loope
arpl
and
je
add
dec
xchg
sub
jnp
pop
lods
mov
fs
pop
pop
dec
ficomps
jp
int3
in
shlb
cmp
iret
push
inc
and
xchg
pop
and
mov
cmp
cmp
scas
add
pop
pop
adc
incb
and
xor
sub
adc
fs
sbb
sub
ret
leave
pop
push
mov
test
xchg
sbb
jg
dec
repnz
mov
bound
ret
movsb
das
dec
push
or
shlb
ret
xlat
mov
push
je
lock
clts
jne
jae
cld
lea
lock
ret
js
cmp
imul
sarl
adc
mov
sub
xchg
push
insb
cs
cmc
mov
xchg
insl
adc
mov
jl
xlat
dec
cmp
pusha
es
xor
xor
iret
repnz
std
cmp
add
jmp
or
or
mov
aam
sub
scas
fwait
aaa
pop
adc
jbe
dec
mov
push
push
test
mov
sbb
or
sti
pop
aad
stos
cmpsl
pop
xchg
mov
subb
js
inc
jge,pt
loop
call
pop
and
adc
mov
mov
das
cmc
into
dec
sbb
sbb
shl
andb
mov
dec
movsl
and
in
roll
int3
pop
repnz
imul
sbb
int
lods
imul
es
cmp
xchg
fcomps
movsl
test
jl
test
dec
sub
xor
adc
sbb
lock
ret
mov
lcall
movsb
jle
inc
hlt
movsl
mov
cmpsl
mov
sub
ss
jge
cmp
inc
mov
and
incl
and
push
inc
scas
scas
push
sahf
adc
movsl
pop
fwait
cmpsb
rorl
push
adc
mov
loop
inc
xchg
daa
mov
jmp
mov
dec
mov
sbb
or
pop
and
push
cltd
cmp
jp
stos
and
xor
cltd
sbb
fcompl
mov
stc
add
fwait
push
andl
pushf
popf
jae
jl
daa
sahf
sbb
push
push
pop
scas
adc
nop
adc
fildl
inc
hlt
sub
loop
stc
cmpsl
mov
cmpsb
ljmp
bnd
cmc
ficomps
mov
xchg
adc
rclb
sub
test
push
loope
sbb
clc
jns,pt
loope
mov
xor
mov
jmp
push
in
ret
xor
sbb
xor
loop
or
mov
hlt
xchg
mov
push
add
aaa
in
popf
mov
mov
std
add
xor
bnd
mov
mov
mov
aad
xor
sub
lea
orl
and
sahf
mov
fisubrs
xor
lock
jecxz
sub
loop
inc
scas
jl
sub
test
dec
mov
inc
add
push
jb
pop
call
adcl
sbb
sbb
jle
mov
adc
cmp
add
push
push
jbe
arpl
mov
xor
stos
sub
mov
xchg
pop
sbb
pop
adc
sbb
mov
xchg
stos
pop
adc
sub
xor
sbb
pop
jecxz
movsb
in
dec
scas
cmp
in
inc
adc
cmp
cmp
lahf
mov
pop
cmp
xchg
jno
data16
fsts
aaa
dec
push
add
ss
add
xor
ss
gs
popf
mov
loope
cwtl
dec
push
fmulp
aam
mov
xchg
shlb
and
ret
mov
jecxz
nop
or
adc
jle
xor
insb
xor
popl
pop
add
inc
add
sub
or
test
outsb
push
xor
pop
scas
das
mov
or
outsl
into
pusha
mov
ret
push
mov
sbb
cs
and
dec
mov
or
movsb
and
cli
das
mov
or
cmp
outsl
push
inc
jecxz
or
jp
mov
outsl
pop
add
sbb
int
shlb
mov
push
movsb
inc
sbb
cltd
bound
js
cli
xchg
shll
call
sub
mov
dec
test
push
cmove
insl
and
jecxz
loope
jle
loope
mov
sub
inc
pop
jg
lods
mov
ja
mov
pop
jle
cs
and
xor
in
ret
outsb
jmp
lea
movsl
das
xor
shrl
sub
data16
ficompl
inc
test
add
adc
mov
push
adc
dec
cmpsb
jo
push
ds
mov
mov
inc
xor
lahf
sub
inc
fadd
sub
mov
inc
arpl
inc
and
push
fcoms
inc
cmpsb
adc
test
jle
xlat
pushf
or
jne
bound
out
push
cmp
sbb
add
or
add
sbb
mov
mov
pop
adc
jle
sub
sbb
inc
pop
sbb
dec
sub
inc
out
mov
dec
leave
xchg
rcll
xchg
add
mov
lock
scas
mov
add
push
xor
test
sbb
dec
sub
sub
mov
incl
push
push
xor
ljmp
jg
inc
sbb
mov
sbb
add
adc
dec
dec
loope
sub
adc
cmp
pop
and
push
add
movsl
cs
fisttps
enter
aas
ret
testl
dec
pop
div
push
inc
sbb
mov
sbb
sub
pop
and
or
scas
sbb
sti
iret
push
sahf
lods
xchg
sbb
adc
xlat
rorl
lret
das
gs
push
and
inc
popl
add
outsb
sbb
and
and
imul
aas
mov
push
mov
sbb
fcom
stos
out
dec
popa
adc
in
inc
testb
repnz
cmc
dec
pop
scas
dec
mov
aam
mov
sub
pop
fisubl
inc
jmp
mov
xchg
pop
notl
sub
or
jnp
cmp
or
popf
stos
movsl
arpl
push
xor
sub
clc
push
hlt
iret
movsb
imul
and
scas
ja
inc
es
es
int3
xchg
andl
mov
push
dec
scas
pop
mov
mov
push
dec
cld
clc
xorb
int
mov
sub
lcall
dec
inc
push
in
lcall
sbb
test
adc
pop
lret
inc
shrb
out
rcrb
add
xor
sub
sbbl
add
sbbb
mov
in
and
push
out
rolb
and
xor
dec
push
sub
jl
xlat
test
sbb
decl
push
mov
sbb
loopne
into
or
jp
popf
cld
rcl
pop
pusha
scas
aad
testb
imul
sbb
cmc
mov
lret
outsl
orl
les
xlat
out
into
popa
dec
idivb
loop
jg
ret
cwtl
lods
outsl
push
add
mull
sub
cmp
jne
inc
sbb
add
mov
mov
divl
cmp
and
adc
jg
aas
sub
ds
push
outsb
sbb
sbb
inc
loopne
pop
subl
or
jmp
mov
loope
xchg
aam
stos
xchg
mov
or
movsl
ret
lea
sahf
int
sub
pop
fistl
pop
pusha
out
jno
iret
sbb
jbe
in
rol
test
outsl
pop
divb
in
mov
inc
and
inc
icebp
sahf
jle
scas
mov
mov
and
add
jl
subb
int3
mov
fcoms
scas
je
es
xor
jle
pop
mov
test
mov
sbb
or
cli
xor
ljmp
mov
push
sbb
idiv
cmp
cmp
and
mov
lcall
pop
loop
mov
ret
xor
mov
push
ljmp
add
leave
and
fdivs
orb
xchg
push
pop
enter
sbb
cmp
mov
push
or
or
cmp
out
xor
inc
loop
fdivs
mov
call
push
dec
loope
mov
pop
or
fsub
ret
jmp
mov
xlat
scas
mov
sbb
movq
mov
stos
mov
leave
cmp
adc
das
std
outsb
test
sbb
sbb
enter
test
add
cmp
xor
int
sbb
cmp
jecxz
jp
sbbl
jg
jg
mov
push
out
cwtl
cli
push
loope
push
je
shrl
clc
push
xchg
inc
jno
push
or
and
xchg
outsl
pop
movsl
test
dec
cmp
sbb
jmp
add
shl
fwait
inc
xor
inc
inc
ret
mov
loopne
inc
dec
add
sarb
push
loopne
inc
mov
cld
enter
lahf
pop
ficoms
loope
xor
jecxz
aaa
xchg
call
pop
push
and
je
cmc
xor
dec
cltd
and
div
outsb
dec
jne
xchg
cli
jle
cwtl
sbb
rcll
pop
insb
dec
outsb
fdivrs
push
pop
loopne
mov
rol
fwait
add
ss
das
cmp
cltd
sub
sar
pop
jo
push
dec
adc
or
adc
lahf
adc
int
jo
push
xchg
stc
sbb
or
aad
pusha
movq
mov
mov
pop
pop
xlat
xchg
loope
cltd
push
adc
std
outsl
scas
add
mov
mov
sub
sbb
sub
pusha
inc
or
sbb
pushf
push
adc
pop
pop
inc
stc
xor
mov
je
lock
add
jg
movsl
pop
enter
dec
test
popa
sbb
idivb
push
mov
cmp
out
fcompl
push
mov
ficoml
cmp
int
std
dec
jbe
addb
mov
sbb
pop
jo
inc
cmp
call
dec
xchg
mov
ljmp
hlt
or
jle
jecxz
sbb
loope
sbb
fmuls
xchg
es
xchg
aas
cmpl
or
adc
or
or
add
and
jecxz
enter
sarl
push
scas
add
dec
fnstsw
and
sub
push
push
sub
mov
push
mul
stc
xor
mov
push
inc
aad
or
ljmp
dec
shl
aaa
pop
es
push
mov
mov
js
movsb
sahf
mov
es
push
mov
cwtl
mov
xchg
sbbb
nop
sbb
xor
adc
and
addb
jbe
ficomps
sbb
inc
aaa
int3
and
hlt
lock
out
inc
lods
pop
cmc
idivl
xchg
call
repz
sti
jl
mov
nop
xor
sub
mov
pop
cwtl
scas
xor
push
push
xlat
push
lods
je
arpl
xor
imul
enter
mov
xchg
adc
or
or
call
dec
outsl
mov
and
mov
sbb
jno
push
orl
xchg
jp
adc
gs
ret
mov
jge
pop
stc
push
cmpb
xor
push
push
cmc
sub
lret
icebp
test
pop
loope
mov
dec
popf
cld
inc
mov
addr16
cwtl
and
push
push
pop
icebp
dec
cltd
cld
mov
test
cmp
pushl
mov
jbe
xchg
andl
add
pop
push
xchg
fwait
push
inc
sbb
mov
push
ljmp
lods
dec
push
xor
stos
jnp
inc
mov
cmpsb
xor
das
cmpsb
popl
in
aas
pusha
pop
add
mov
stos
cwtl
adc
in
enter
xchg
add
mov
sub
xor
push
push
cmp
jg
xor
stos
jmp
pop
lcall
cld
into
push
and
rcrb
in
push
adc
push
mov
jb
pop
aad
push
fs
mov
mov
mov
or
dec
daa
dec
mov
and
scas
rcrb
aam
push
push
mov
and
dec
jecxz
cmc
stos
or
sbb
dec
loope
add
jmp
ds
rcrb
adc
sbb
das
add
cmpsl
stos
dec
sub
ja
ret
jecxz
js
ret
mov
mov
insb
and
xor
aas
cwtl
xchg
mov
mov
mov
pop
mov
lock
and
lahf
femms
or
push
xchg
lcall
push
inc
or
push
or
push
loop
aam
aas
pushf
sbb
loopne
xchg
or
jecxz
outsb
arpl
xor
jecxz
mov
pop
jo
lods
mov
fs
cmp
fwait
sbb
adc
cs
pop
mov
cmp
loope
and
fsubr
jecxz
jno
sub
loop
dec
sbb
jg
outsl
sti
sbb
or
mov
xchg
jg
add
int3
fildl
mov
jle
mov
cli
xor
add
stc
sbb
jnp
dec
sbb
cld
sbbb
jo
mov
cld
fisubrl
leave
sub
or
push
push
mov
inc
sbb
pop
test
and
or
inc
mov
xor
bound
ret
pop
icebp
js
push
jne
mov
or
testb
adc
fcmovu
xchg
and
negb
mov
ret
cld
sbb
push
daa
test
arpl
sbb
lods
lcall
mov
sbb
cmp
cmp
and
pushf
loop
sub
jle
movsl
sub
jne
into
mov
sub
iret
mov
dec
pop
imul
inc
pop
insb
int3
mov
je
mov
repz
cmc
add
push
out
xchg
cmovo
push
pop
inc
orb
xor
xchg
sbb
or
cs
fwait
rol
sbb
stos
fstps
sbb
lahf
inc
mov
sbb
mov
push
lods
cs
inc
mov
adc
or
loop
adc
adc
and
lret
je
notb
xorl
pop
push
enter
mov
sarl
outsb
sub
add
pop
xchg
push
sbb
cwtl
cmp
sahf
mov
xor
fldenv
pop
sbb
mov
lcall
subb
push
mov
mov
and
pop
insl
sbb
push
pop
cmc
mov
and
push
mov
cmp
and
fcomps
xchg
adc
adc
mov
xor
dec
pop
pushf
add
xchg
sbb
pop
adc
imul
xchg
sub
pop
ret
mov
test
cmp
nop
lret
ret
in
or
mulb
mov
pop
inc
xchg
jle
mov
adc
ret
push
or
push
mov
mov
mov
and
inc
out
rcrb
into
pop
ss
hlt
or
xor
jne
lcall
jbe
cld
movsl
cs
js,pt
je
cmp
xor
fdivrs
lcall
xchg
jb
or
loop
fcmovne
lcall
cmpsl
adcb
ja
sbb
cmc
sub
ss
push
xchg
add
mov
push
xchg
or
mov
test
push
add
push
xchg
mov
adc
sub
push
mov
cmp
mov
stos
inc
dec
jne
add
sub
clc
xchg
incb
imul
sub
addl
in
adc
aam
push
hlt
inc
cmpb
and
add
pop
dec
jl
stos
sub
and
add
lahf
pop
xchg
sub
cmp
cld
dec
jbe
aad
push
lds
or
pop
lea
mov
pop
sbb
orl
out
push
push
mov
inc
dec
divl
push
mov
jbe
xor
jns
roll
lret
cmp
loope
dec
mov
xor
or
dec
push
mov
sbb
jnp
inc
xchg
jge
aaa
pop
pusha
sbb
or
int
cmp
push
add
or
pop
loop
mov
repnz
xchg
push
in
sub
pushf
dec
sbb
popf
sub
movsb
rcrb
xchg
jle
sub
xchg
jg
loop
and
out
lods
push
push
xor
mov
dec
adc
dec
mov
imul
and
sarl
push
push
sbb
adc
dec
add
sbb
sbb
sub
popl
rclb
adc
sbb
pop
sbb
pop
or
inc
in
aad
repz
mov
pop
dec
add
inc
cmp
cltd
es
sbb
mov
adc
pop
xchg
cmpsl
loop
test
clc
fcompl
sub
subl
pusha
cmp
and
xor
adcl
insb
lret
or
add
inc
mov
cmp
push
fisubs
cs
in
add
pop
dec
mov
test
and
mov
std
lock
jecxz
dec
mov
xchg
adc
pusha
inc
pop
hlt
cs
movsb
mov
jbe
push
inc
mov
push
in
inc
or
rcrb
sahf
xor
cli
push
loopw
icebp
mull
jg
mov
pop
subl
xchg
pop
repnz
je
add
std
in
outsl
mov
or
imul
pusha
xchg
pop
xor
cmp
xor
jo
pop
push
mov
test
lods
or
xchg
jne
jbe
xor
dec
jg
pusha
xchg
pop
sahf
xchg
pop
cmp
sbb
stc
or
cmc
ds
sub
dec
scas
inc
and
sbb
dec
lar
mov
xlat
sbb
jns
push
out
rclb
push
xchg
pushf
bound
andl
ds
or
xor
sbb
push
pusha
maxps
clc
sub
cmpsl
ret
andb
sub
jb
xor
dec
loopw
ret
sahf
ror
movd
jecxz
sbb
scas
dec
dec
or
sarl
or
or
jne
ret
sbb
je,pt
insb
popf
data16
rcrb
add
scas
cmp
popa
mov
addl
adc
stos
lcall
sbb
loope
lock
lret
rolb
xor
mov
fdivp
sub
call
out
dec
adcl
daa
xchg
das
jle
ror
sub
repz
loop
lock
xchg
out
mov
nop
sbb
mov
inc
negb
xchg
mov
sbb
insb
arpl
push
addb
in
icebp
stos
push
jo
xchg
dec
push
jae
and
test
jecxz
incl
xor
in
ret
push
fwait
movsl
pop
jecxz
mov
out
dec
xor
outsb
push
in
adc
add
mov
call
dec
je
dec
jne
sbbb
iret
pushf
adc
add
dec
add
call
testl
add
cmp
and
je
ds
lahf
add
inc
dec
sbb
sub
add
lods
icebp
dec
sbbb
repnz
adc
push
fcomp
adc
xchg
cmpsl
dec
jp
push
inc
lods
dec
fidivrl
rol
add
lods
repz
in
mov
int3
pop
testl
add
xchg
sbb
gs
cmc
gs
cmp
cmp
outsb
dec
mov
arpl
insb
add
pop
mov
adc
lock
pop
stc
sbb
xor
cld
dec
mov
adc
dec
cs
jecxz
cmc
and
call
mov
dec
dec
push
push
add
xlat
fidivrl
xor
sbb
gs
stos
mov
sbb
popf
cltd
sub
push
cvttps2pi
cmp
aam
or
pusha
orb
insl
add
aas
push
pop
ror
adc
test
adc
mov
loope
add
mov
imul
mov
sti
add
aaa
outsl
dec
sbb
inc
into
pop
ficompl
add
fmull
lea
mov
gs
loop
mov
adc
sbb
sub
jno
shrl
lock
arpl
ret
mov
int3
test
sub
add
xor
imul
mov
dec
inc
push
arpl
add
jge
mov
ret
sbb
pop
insb
xchg
insl
add
out
cmp
cmp
xor
cld
popf
add
inc
xor
add
out
cltd
cwtl
xorl
pop
fmull
push
cmp
fstl
mov
dec
dec
loopne
mov
push
push
mov
in
test
add
cltd
xor
mov
xchg
adc
jecxz
xchg
add
test
movsl
sub
test
aad
hlt
sbb
push
fwait
push
jae
and
xchg
pop
lahf
add
loopne
or
cmp
inc
add
sbb
jg
sbb
shr
xor
rorl
sbb
jle
mov
js
xchg
loop
mov
mov
inc
cmpsl
loop
jecxz
add
movsl
mov
xchg
in
xor
add
ret
xor
pop
and
cmpsb
pop
add
into
sbb
sbb
pop
out
push
sub
ret
xchg
jmp
cld
xchg
add
jae
addl
loope
xchg
repnz
imul
xchg
add
sbb
sbb
push
xor
addl
sub
add
sbb
xchg
push
fcmove
imul
ficompl
cmp
push
adc
xchg
orl
inc
mov
mov
xchg
xchg
add
xchg
rcll
sub
and
add
sbb
ja
jae
add
jbe
mov
sub
sub
pop
push
sbb
jnp
sbb
arpl
mull
mov
sub
mov
ja
inc
insb
fisubrl
repz
mov
sbb
mov
push
xchg
push
push
inc
sahf
fwait
sbb
cmpsb
lcall
add
std
pop
jb
sub
call
adc
lcall
imul
mov
jb
sub
mov
fwait
lcall
lret
sbb
ret
jge
push
inc
lret
jle
outsl
sahf
sbb
incb
or
pop
xor
add
push
mov
and
add
add
jnp
call
popf
int3
add
adc
jmp
testb
sub
imulb
sti
add
lea
dec
pop
fsubrs
lret
add
cmp
adc
fwait
add
insb
dec
push
cmc
cmp
ret
cmp
and
add
adc
add
add
dec
mov
andl
cmp
dec
push
mov
adc
in
cmp
adcl
cmp
in
xor
push
sbb
jge
adc
cmp
sbb
cmp
in
xchg
add
stc
sub
sub
mov
xor
cmp
add
cmovle
push
dec
xor
add
imul
cmpsb
push
pop
sub
add
adc
mov
xor
cmc
jmp
mov
cltd
sbb
dec
insb
adc
loop
fisubl
fisubrs
dec
or
andl
sub
in
or
mov
jbe
dec
jnp
std
push
aad
xor
cmpsl
add
mov
dec
loopne
push
mov
jecxz
cmpsb
sbb
xchg
sbb
popa
sub
or
mov
jbe
add
xchg
sub
pop
pop
fstl
inc
loop
sbb
ret
iret
mov
cld
fcoml
in
xor
adc
or
jns
jb
jbe
inc
popw
jne
jne
pop
decb
stc
sub
rclb
jle
lret
and
xor
dec
pop
push
sub
movsl
lods
xor
pop
adc
mov
mov
push
or
test
cmp
mov
mov
popf
jle
inc
std
sbb
xorb
movsl
dec
jle
mov
push
lcall
ret
xchg
int3
out
outsb
pop
lods
pop
push
push
mov
bound
sub
cmc
jbe
test
sub
pop
stc
jno
sbb
loopne
and
sub
testl
clc
adc
loop
hlt
sbb
or
stos
pop
or
dec
sub
cli
aas
add
push
bound
adc
add
push
repnz
sbb
into
outsb
ret
mov
inc
push
xchg
jmp
push
cmp
aaa
jp
test
mov
and
adc
pop
and
inc
adc
in
aaa
in
enter
jp
and
outsl
stos
sbb
test
push
sub
or
sbb
xor
sub
jmp
cmp
xor
pop
negl
sbb
les
lds
fcmovb
mov
fcmovnu
outsb
xchg
aas
mov
jmp
or
mov
add
imul
cmc
jo
jmp
hlt
push
sti
popa
add
in
jnp
sti
inc
lods
add
cmc
lcall
loope
add
add
add
xchg
push
mov
lret
fmul
or
pop
jo
out
pop
dec
int3
repnz
inc
xchg
sbb
jne
pop
inc
ja,pt
gs
adc
lock
imul
inc
xorl
adc
subb
adc
adc
adc
out
adc
divb
call
pop
shlb
mov
jnp
sub
push
push
or
loop
push
sub
in
pop
adc
xchg
or
testl
add
and
aam
imul
jbe
xchg
jb
popf
inc
push
push
lock
or
filds
push
add
fdivs
xchg
inc
dec
xor
call
mov
pop
add
arpl
out
cmp
sub
lret
pop
pop
loop
mov
and
mov
mov
sub
test
pop
int3
add
sub
sub
addl
movb
lret
stos
jae
push
bound
fwait
dec
add
xchg
mov
sbb
pop
clc
rorl
xchg
jno
and
sbb
mov
push
test
adc
sbb
lock
pushf
mov
rclb
fsubrs
out
loop
sub
hlt
mov
roll
lret
adc
pop
xor
sub
sbb
push
or
or
push
add
in
lea
push
cmc
mov
std
mov
aam
fildl
adc
pop
and
repz
icebp
cs
jecxz
pop
ja
push
xor
sub
int3
and
outsb
das
int
xor
cli
aam
xchg
repz
or
mov
stc
mov
hlt
dec
ficomps
gs
loopne
loop
and
scas
aam
inc
jecxz
cmp
pop
pop
cmp
gs
sub
pop
mov
sub
sbb
jle
pop
bndldx
push
out
insl
loop
movsl
add
popa
and
pop
loopne
daa
push
fistpll
mov
adc
push
push
cmp
adc
or
xchg
rcrl
stos
pop
add
dec
loope
or
enter
push
mov
mov
pop
lods
loop
add
push
pop
push
sbb
or
test
sub
testb
pop
cmpl
cs
or
xchg
pusha
or
hlt
push
xorl
add
filds
and
pop
cmp
xlat
pop
adc
push
insb
xor
pop
add
lahf
leave
sub
mov
jmp
es
push
or
sbb
mov
push
jne
sarb
or
cmp
sbb
mov
cmc
hlt
dec
adc
xchg
cmp
push
sbb
testl
test
push
dec
std
sub
dec
adc
in
dec
push
adcb
aad
pop
xchg
adc
mov
add
sub
dec
jne
rcr
sub
jnp
hlt
sbb
testl
icebp
dec
sbb
sbb
fnstsw
push
mov
or
call
push
add
push
push
add
cmc
jl
push
aad
xor
hlt
insl
xchg
ss
mov
pusha
test
fisubrl
cli
mov
int3
push
dec
cltd
adc
cmc
pop
and
in
push
mov
mov
add
ss
int
js
jbe
repnz
mov
bound
pop
popa
ss
push
pop
adc
ja
mov
repnz
popf
pop
add
cmp
cmp
dec
dec
inc
out
sbb
inc
cmc
jl
inc
or
loope
mov
pop
xchg
lods
pop
popa
aad
fdivl
push
add
push
loop
icebp
jo
sbb
inc
scas
jg
pop
mov
mov
mov
cmp
dec
sub
int
sub
lea
xor
jle
mov
jecxz
ja
popf
sbb
inc
or
std
or
mov
push
popf
xchg
or
cmp
push
push
push
sub
loope
mov
scas
inc
mov
cmc
cmp
loop
pop
cs
dec
push
es
jle
or
bound
pop
sbb
xchg
cmpsb
jl
push
jp
or
mov
sub
dec
adc
and
sub
outsb
cmp
push
inc
push
cmp
pop
xchg
aam
ret
outsb
bound
ljmp
mov
adcb
add
pop
ret
dec
fucomip
test
inc
or
xchg
loopne
add
mov
jp
and
cli
mov
imul
fdivs
cmp
call
or
ret
mov
aas
push
jmp
xor
pop
push
or
mov
dec
or
in
xchg
push
cmp
pushf
inc
pop
hlt
inc
or
push
xor
mov
push
jle
loopne
shr
pop
cmc
mov
je
popa
testl
jb
repnz
sbb
pop
inc
testb
mov
jl
and
add
icebp
mov
daa
mov
aam
daa
mov
xchg
inc
push
xchg
inc
movsl
addl
push
and
icebp
inc
add
mov
std
out
sahf
inc
push
or
mov
sub
push
iret
mov
stos
loop
sbb
add
test
insb
pop
add
jg
or
pop
mov
ss
adc
xor
andl
stc
mov
loope
es
outsb
xor
sahf
popf
rep
cmpsl
pop
mov
add
lods
add
add
icebp
push
and
daa
movsl
push
loopne
push
clc
cli
push
pop
xor
je
cltd
sub
pop
mov
lods
xchg
push
dec
inc
fidivl
cmp
loop
lock
rorl
adc
push
xorb
imul
push
hlt
int3
in
rcrl
repnz
mov
pop
mov
dec
push
icebp
push
cwtl
sbb
or
mov
jnp
int3
es
xor
jle
inc
pop
jmp
adc
sub
or
loope
in
xchg
sub
inc
cmp
pusha
push
or
pop
inc
or
repz
fs
push
lock
loop
mov
push
outsb
add
imul
aaa
dec
sub
sbb
pop
xor
add
arpl
mov
adc
push
mov
pop
fidivl
cmp
inc
mov
xchg
daa
ret
sbb
mov
push
sub
pop
cmpsb
and
popl
loop
les
mov
mov
mov
sub
mov
stos
rclb
sbb
xor
cs
int
cli
push
int
dec
or
sbb
cmc
dec
jb
mov
out
fmulp
mov
lds
xor
subb
inc
xchg
inc
es
inc
mov
pop
test
test
hlt
outsl
dec
mov
pop
aad
inc
sub
daa
push
push
fldcw
stc
sub
adc
sub
sar
sub
cmp
adc
adc
dec
sbb
push
jle
add
add
cmovs
clc
pop
inc
scas
adc
cmp
dec
push
sub
fwait
insl
inc
lock
mul
mov
lods
push
hlt
push
mov
fimuls
push
cmp
std
loopne
jle
int3
push
das
xchg
dec
mov
mov
cltd
mov
mov
test
cvttps2pi
sbb
xor
add
sbb
test
insl
push
pop
inc
sub
rclb
push
in
sbb
mov
adc
dec
gs
daa
fs
ljmp
and
es
and
addb
dec
ljmp
in
mov
fcoml
sub
pop
push
cli
arpl
rorl
or
add
ret
loop
push
xor
leave
xor
dec
xor
push
les
lds
lds
lds
fcmovb
and
lds
fcmove
repnz
cmp
mov
ret
aaa
mov
test
sub
push
add
loop
or
jp
cmp
dec
mov
shl
jns
sub
arpl
sbb
call
or
fcompl
add
mov
add
adcl
scas
shll
mov
sbb
inc
mov
dec
outsb
mov
xorb
mov
or
loop
stos
hlt
xor
jle
les
sbb
rcrb
orl
clc
cmp
ret
jecxz
lds
and
mov
aaa
cmp
dec
mov
or
inc
sti
les
jbe
push
sub
sbb
push
jge
jae
pop
mov
fcomps
in
pop
xor
test
xor
sub
int
jl
sub
cli
or
push
push
lret
inc
aad
out
ficomps
js
loop
fldl
xchg
rcll
pop
test
dec
xor
ljmp
adc
fcomp
lock
adcl
jg
dec
ja
xor
shl
out
mov
lods
aam
sub
adc
repnz
fisttpl
sbbl
test
les
add
add
scas
sbb
shl
jmp
sub
cmp
and
push
mov
mov
sbbl
push
stos
out
shrl
scas
gs
into
sbb
mov
mov
xor
mov
add
loop
xchg
push
and
arpl
scas
add
push
push
sbb
mov
inc
mov
and
es
add
test
mov
and
test
adc
filds
stc
test
jle
and
cmp
and
pop
pop
pop
mov
pop
xchg
push
pop
mov
xor
call
loope
das
push
pop
std
loope
rcr
sub
lret
jecxz
jle
outsb
inc
push
pop
dec
loope
push
sbb
xchg
and
sbb
and
stos
mov
sub
in
xchg
mov
cld
repz
xchg
dec
push
movsl
push
jno
lret
mov
push
adc
in
iret
add
xor
push
jle
jge
jnp
arpl
dec
mov
rcll
push
outsb
inc
ret
lods
shll
mov
inc
xchg
outsb
add
pop
mov
daa
decb
xchg
dec
push
dec
jmp
filds
outsb
dec
dec
jbe
rcrb
push
add
xchg
push
or
mov
test
int3
notb
out
jge
es
pop
lahf
fsubrl
push
push
cmc
shll
lea
ret
inc
hlt
mov
push
fnstsw
or
sub
add
insl
add
pop
add
jg
ss
fmull
sub
negb
pop
sbb
fcoml
fidivrl
lret
psubsw
cld
mov
out
clc
dec
mov
inc
xchg
test
std
pop
inc
lcall
shrb
aam
loop
cmp
mov
dec
xchg
out
popa
clc
push
xchg
outsl
pop
jne
xor
shll
ljmp
inc
cmpsl
shll
rcrb
insb
mov
xchg
and
sbbl
or
pop
cmp
dec
push
pushf
testb
ds
push
outsl
push
sbb
std
ret
adc
leave
loope
and
push
jns
add
arpl
out
mov
jl
icebp
pop
test
call
das
jne
jmp
jle
pushf
xlat
xorl
push
loope
add
push
test
sbb
clc
jbe
jo
or
shlb
pop
add
ret
pop
in
pop
jnp
mov
imul
sub
or
sbbl
dec
add
ficompl
sbb
ja
incl
or
aaa
inc
push
xor
sbb
push
pop
out
int
sbb
xchg
sub
hlt
in
dec
jne
pop
sti
leave
add
hlt
pop
dec
pop
inc
ja
ljmp
es
popf
xor
dec
out
aaa
insb
mov
pop
dec
jnp
sbb
and
mov
push
adc
jle
mov
adc
mov
adc
sbbl
stos
sahf
jbe
jbe
inc
inc
int
push
jecxz
in
xchg
fsts
xchg
out
test
push
hlt
mov
cmpsb
in
leave
sub
add
dec
fsqrt
xor
push
sbb
sub
insb
lea
xchg
add
and
les
out
inc
addl
dec
pusha
cmpsb
jp
push
dec
or
scas
push
inc
out
nop
out
xchg
mov
jle
add
sub
xlat
add
pop
jo
and
retw
lods
jno
xchg
pop
cmp
add
mov
sub
add
cmp
add
sub
jmp
out
sti
sub
icebp
xchg
jecxz
xlat
xchg
sbb
jp
pop
xor
cmp
mov
ret
sub
fsts
sub
cmp
popf
cmpb
outsl
sbb
add
in
cmp
push
dec
ljmp
lcall
pop
lahf
pop
ds
sub
xor
hlt
pop
mov
stc
dec
sbb
push
xor
and
mov
add
cmpb
xchg
adc
cmp
cltd
loop
mov
pop
imul
mov
add
lahf
fwait
outsb
fidivs
daa
inc
lods
cmp
sbb
push
imul
test
sub
sahf
xchg
sbb
in
dec
cmp
fisttpl
rcr
sysenter
inc
pop
dec
mov
into
push
adc
mov
push
pop
sbb
sub
dec
imul
push
sub
push
addl
outsb
std
push
pop
add
inc
aaa
fwait
aas
sub
inc
xlat
dec
outsb
adc
aam
xor
sub
adc
inc
xchg
fcmovbe
andb
lret
out
xor
or
jl
dec
fiadds
add
or
sub
sbb
dec
dec
cmpsb
clc
and
push
dec
jp
addb
in
sbb
shlb
pop
jne
push
in
lret
ljmp
jle
push
jecxz
dec
sbb
in
repnz
mov
aaa
loop
inc
lock
sbb
sub
test
pop
aaa
dec
and
fwait
pusha
mov
pop
jle
jp
add
jae
pop
push
out
push
mov
ja
jbe
jp
shl
sahf
or
jp
or
sub
movsl
jns
in
mov
scas
xor
sub
jl
call
pushf
mov
adc
adc
jg
out
adc
cld
push
fimull
shlb
sti
and
loopne
stos
popa
push
insb
scas
test
lcall
push
xor
sub
add
in
outsb
push
sub
xchg
sbb
in
mov
stos
mov
push
jae
jg
repz
add
jmp
mov
enter
adc
out
loopne
insl
sbb
push
pop
inc
in
scas
icebp
jae
repnz
aam
add
inc
xchg
orb
push
and
insb
jmp
cmp
lea
adc
inc
adc
xchg
es
addb
sbb
popa
dec
ss
sbb
jnp
add
or
add
push
je
ret
mov
repnz
lock
cmp
fldt
enter
push
pop
xchg
pop
add
mov
mov
xchg
ret
sbb
mov
divl
cmp
adc
xchg
jp
mov
xor
pop
push
pusha
and
inc
pop
dec
rcr
lahf
adc
loop
inc
shr
add
sub
add
je
test
mov
mov
jmp
jg
js
icebp
lock
adc
xchg
in
mov
or
clc
jns
clc
or
int
mov
jb
add
sub
sbb
popa
adc
jns
pop
sub
mov
xor
hlt
lcall
jg
negl
movsb
cmp
cld
dec
adc
sbb
jle
mov
add
rcrb
clc
loop
into
jo
daa
and
cli
mov
scas
or
into
xor
jp
rolb
and
into
dec
mov
xchg
and
xor
mov
mov
sub
repnz
dec
das
adc
out
push
sub
fcmove
fisubrs
mov
mov
call
scas
jg
pop
xor
ja
ss
jo
inc
cld
jle
add
cli
mov
repz
testl
sti
testb
jno
lret
in
mov
pop
sub
out
jns
loopne
xor
push
ja
pop
jg
inc
inc
sbb
sar
sti
or
pop
mulb
pop
or
loop
fistl
push
adc
ss
mov
cmc
jb
dec
arpl
mov
sub
mov
push
xor
hlt
ljmp
push
and
ret
xor
adc
insl
fisubrl
adc
stos
pusha
xor
orl
outsl
or
lcall
sbb
ljmp
and
cli
jae
pushf
cmp
mov
add
lret
outsb
je
mov
fsubl
xchg
sbb
inc
shll
loope
loopne
pop
fs
fs
pop
movsb
iret
cmp
lods
cmpsb
sub
jecxz
mov
repnz
subl
cld
je
push
push
xor
scas
sub
out
sbb
subl
rorl
sub
dec
push
jne
addr16
push
das
add
or
push
sub
lret
call
mov
mov
pop
jnp
outsb
add
push
sbb
sbb
and
sbb
push
push
das
mov
clc
scas
mov
add
lcall
sub
hlt
dec
inc
and
mov
pop
into
outsb
cmp
mov
push
adc
adc
test
push
pop
dec
push
sub
jo
fs
mov
repnz
pop
push
xor
aaa
call
jbe
xor
push
jg
and
push
jmp
addr16
add
lahf
rolb
rolb
xchg
mov
fwait
jg
and
fadd
inc
pmulhuw
loope
xor
inc
jle
or
push
cmp
bound
ret
out
xchg
sti
mov
cmpsl
inc
aas
cltd
shll
and
pop
and
inc
sbb
xchg
imul
or
add
mov
cmc
repz
sbb
sub
fldcw
cwtl
sbb
push
adc
hlt
in
faddl
fistpll
push
xor
sub
sbb
xchg
pop
mov
xchg
sbb
std
insb
mov
push
hlt
jl
sub
jecxz
sbb
outsl
mov
mov
sbb
repnz
pushf
icebp
dec
fcmovnb
cmp
jle
jge
into
add
imul
or
mov
xchg
cmp
push
jecxz
in
jo
sub
cmp
jns
fildll
scas
jp
popf
jg
jg
xor
mov
jg
sbb
push
incl
minps
mov
orl
jmp
add
ja
loop
cmpsb
fisttpl
ja
cmp
scas
mov
jns
stos
lret
mov
subl
sub
or
inc
and
and
pop
rolb
jae
push
push
neg
mov
aaa
lock
rcrl
rcrl
sbb
add
cli
ss
dec
xor
ficoms
mov
sub
incb
mov
loopne
or
push
adc
xor
filds
sub
ret
pusha
mov
fstpt
sub
add
ja
fadds
inc
xor
dec
jle
jg
and
push
subl
testb
ds
popf
dec
sbb
jmp
mov
data16
ja
imul
dec
mov
dec
pop
mov
sbb
bound
add
lcall
cmp
adc
loop
pop
adc
out
and
mov
popf
icebp
xchg
pop
pop
je
testb
jl
push
or
pop
push
mov
lds
lea
xor
jp
xchg
lds
jno
push
cmpsb
cld
inc
sub
dec
pmaxub
loop
mov
dec
jb
sbbl
or
or
insb
push
fstps
xchg
pop
cltd
inc
jge
add
or
rolb
das
lods
add
pop
es
jecxz
dec
dec
fistpll
cmp
push
jo
inc
bound
dec
sbb
sbbb
and
or
les
xchg
mov
and
ds
lret
sbb
or
enter
int3
mov
add
mov
in
cmp
xchg
scas
mov
jecxz
xor
lcall
dec
jnp
loope
xor
dec
es
fadds
inc
loope
cltd
sbb
xchg
sub
in
inc
xchg
repnz
or
and
test
jne
jge
adc
push
inc
jo
in
fsubrl
mov
sbb
jo
lcall
fisubrs
or
ret
mov
in
ljmp
lret
addb
test
mov
mov
fcmovb
jecxz
idivb
in
push
ds
aaa
mov
mov
mov
subl
xchg
andb
mov
push
push
fidivrl
pop
pop
in
cmovns
or
bound
pusha
jp
adc
hlt
push
jle
imul
sub
jg
or
negl
jbe,pt
movsl
mov
hlt
popl
add
decb
and
jbe
sub
cmc
adc
dec
test
mov
inc
mov
or
cmp
pop
sbb
shrb
ds
jge
jns
xchg
push
popa
push
faddl
ss
adc
das
loop
add
call
into
sahf
aas
test
fcoml
pushw
mov
push
addr16
jp
xchg
inc
mov
test
dec
cmp
dec
jl
cld
fwait
fs
hlt
mov
jb
mov
mov
or
imul
outsb
lahf
out
movsb
inc
cmc
insl
lods
pop
pop
push
insb
or
dec
jae
test
out
push
xor
mov
sbb
fadds
aaa
das
inc
or
int3
in
mov
adc
push
push
mov
out
mov
inc
sbb
mov
into
imul
or
lret
lods
and
test
and
sbb
outsb
pop
mov
and
scas
das
aam
push
pop
cmpsl
add
pop
push
clc
addl
cmp
push
scas
dec
fiaddl
add
cli
or
adc
jge
data16
mov
out
adc
or
icebp
xlat
or
pop
xor
ja
ljmp
icebp
stos
xchg
jle
and
dec
mov
pop
jp
inc
adc
fidivs
lock
mov
add
mov
pop
inc
sub
add
addl
in
out
das
mov
pop
add
xlat
jns
cwtl
and
sub
push
repnz
mov
sub
hlt
sub
outsl
xchg
fiaddl
mov
jae
xorl
pop
inc
xor
jae
rorl
push
lret
jecxz
mov
es
sub
jle
pop
mov
pop
ror
sub
xchg
scas
jmp
and
repz
push
push
movsb
dec
aad
dec
sbb
mov
pop
popa
fiaddl
mov
jmp
or
sub
out
inc
sub
sbb
cmp
cmp
mov
sub
call
je
outsb
jno
bound
imul
dec
and
pop
fwait
arpl
cwtl
js
fmull
leave
mov
fidivl
jnp
cmp
xchg
mov
mov
dec
out
jbe
outsl
add
repz
jo
je
push
pop
scas
cmpsl
pop
test
into
jae
or
sub
imul
vmsave
jecxz
push
jnp
fs
mov
push
xchg
dec
sbb
loope
lahf
imul
xor
test
cmpsl
adcb
repz
and
repz
cmp
hlt
shll
push
mov
push
aaa
xor
cmp
test
dec
dec
jmp
scas
mov
adcl
in
jg
inc
mov
push
dec
add
insb
xchg
sub
cmp
inc
push
cmp
adc
dec
lahf
divl
decb
stos
dec
push
pop
jle
sbb
add
stc
fildll
jge
dec
jae
lods
hlt
lret
pusha
adc
inc
lcall
push
mov
mov
or
mov
mov
pop
fmull
xor
dec
fidivl
jns
test
sbbl
mov
or
imul
jg
dec
cmp
fs
pop
jl
daa
push
mov
jge
mov
pop
lret
lock
fcoms
sbb
adc
lahf
fcmovu
popa
add
loopne
dec
push
test
imull
enter
hlt
push
xchg
cmpsl
push
mov
dec
add
sahf
sahf
stos
sbbl
popfw
sbb
xchg
xchg
lret
fdivl
sub
mov
loope
das
roll
repz
and
jmp
push
xchg
cmc
adc
jns
mov
adc
pop
fwait
push
divb
or
xchg
pushw
std
push
jns
sbb
mov
je
add
mov
or
dec
push
and
sub
adc
inc
push
ljmp
push
or
orb
inc
ja
adc
xor
pop
push
cwtl
push
pop
xchg
cwtl
adc
dec
ficoms
icebp
out
ljmp
ja
inc
iret
jno
mov
cld
dec
add
xchg
pop
into
jecxz
ret
push
bound
inc
push
adc
adc
imul
push
pop
adc
mov
mov
jg
xor
in
es
mov
enter
sbb
loope
push
daa
out
sub
xor
and
popf
mov
push
cltd
pusha
test
jb
mov
push
xor
stos
sbb
adc
pusha
or
das
inc
stos
push
loop
into
sub
cld
addb
cmc
mov
mov
ljmp
or
add
jbe
and
pop
dec
pop
bound
out
push
mov
loope
and
cld
dec
lcall
sub
sbb
repnz
inc
sub
ret
scas
loope
dec
jecxz
add
push
jle
and
adc
jp
push
pop
or
call
cmp
xchg
and
jl
mov
xlat
addr16
or
das
xor
push
pop
iret
mov
or
out
push
out
cs
sbb
decb
cmc
jp
call
mov
mov
sbb
cmp
inc
push
mov
or
bound
cmp
cld
rcll
rol
mov
inc
movsbl
leave
out
xor
pop
xchg
adc
jns
cmp
pop
push
pop
mov
pop
lock
pop
repnz
mov
push
bound
jb
lret
cs
push
sahf
add
scas
cmp
movsl
xlat
scas
pop
push
mov
cs
pop
cmp
jno
or
outsl
jo
jne
inc
repz
xchg
ja
dec
cs
pop
insb
lds
xor
mov
shl
adc
es
jle
xchg
xchg
mov
insb
into
cmp
xor
mov
inc
bound
nop
dec
lcall
shrl
sahf
or
movsl
mov
xchg
mov
xchg
adc
scas
sub
dec
mov
stos
mov
mov
mov
stos
cmpsb
fwait
ret
nop
xchg
mov
add
and
imul
or
pop
mov
lea
sbb
fsubrs
mov
xchg
movsb
addb
dec
jo
pop
out
adc
sbb
ja
pop
pop
cltd
pop
dec
sub
inc
movsl
pop
jp
fwait
inc
add
fs
scas
loope
xchg
dec
sbb
das
into
push
jle
xor
daa
and
roll
add
jbe
lea
int3
andl
pop
xchg
push
add
adc
js
ds
adc
mov
imul
adcl
cmp
xchg
int
push
cli
xor
lods
mov
fsubrl
add
mov
dec
jle
jb
mov
jmp
fnstsw
lods
inc
sbb
jle
add
xor
jns
lret
push
shl
add
add
hlt
push
fdivrs
ficomps
mov
testl
jae
loope
jg
dec
push
and
pop
iret
pop
pop
lock
inc
scas
insb
mov
pop
push
les
push
inc
or
mov
push
cmp
pop
sub
fwait
outsb
lds
mov
sbb
sbb
in
xchg
repz
xchg
pop
mov
fisttpll
inc
bound
fsubrp
or
repnz
lock
cs
ret
hlt
dec
data16
cs
mov
dec
popf
pop
cmp
lods
sbb
adc
sbb
jp,pn
mov
push
add
pop
or
mov
mov
in
cmp
xor
ret
call
sbbl
sbb
adc
sub
adcl
in
outsb
push
mul
mov
fisubrs
add
pop
out
push
cmpsb
or
es
scas
adc
jnp
rcrb
outsb
push
icebp
jae
test
dec
jg
cmc
ja
das
outsb
rcr
sbb
daa
pop
repz
xchg
add
jae
test
dec
sbb
outsb
cmp
pusha
push
cmp
mov
fcoms
pop
int3
subl
mov
es
aas
add
mov
jb
pop
mov
push
push
sbb
call
out
aad
add
pop
es
repz
out
lods
inc
dec
in
jle
pop
xchg
fsubp
aam
xchg
loope
xchg
mov
popf
divb
rcll
mov
mov
mov
rcll
orl
dec
and
adc
ret
js
sbb
addr16
ss
lret
pop
jmp
cld
fstpl
sbbl
jbe
fildll
sub
jae
adc
mov
mov
fcmovne
mov
xchg
push
push
sub
cwtl
push
push
insb
jb
add
sahf
hlt
test
bnd
pop
adc
imul
xchg
mov
stos
fisttps
sbb
sbb
jbe
sahf
jbe
stos
rcrb
pop
movb
xor
fdivs
push
call
add
mov
or
sub
adc
push
test
adc
mov
push
mov
jg
lods
arpl
xchg
aaa
sub
sbb
pop
icebp
sub
mov
cmc
lahf
outsb
pop
stos
or
lahf
lods
mov
pop
in
pop
sub
dec
notl
and
pop
xor
ds
cmp
sbb
and
insb
xor
xchg
pop
push
jle
lret
jg
out
sub
ds
push
dec
mov
loope
bound
ja
pop
or
xorb
notb
imul
add
and
sbb
ret
pop
cmp
and
pop
icebp
dec
adc
cs
popa
pop
hlt
cmp
sub
xor
adc
pop
push
sub
inc
mov
and
out
pusha
xchg
jne
ljmp
outsl
lock
fisubl
mov
sub
je
mov
push
sahf
dec
fsub
mov
pop
cmp
imul
cmovge
shlb
and
adc
insb
scas
pop
scas
mov
xchg
pop
push
bound
xchg
mov
insb
dec
add
jle
cltd
in
ds
add
adcl
out
adc
push
les
add
negl
out
loop
sbbl
sti
inc
pop
in
jge
int3
mov
sbbl
jle
mov
adc
inc
adc
xchg
cmp
sti
push
hlt
sub
mov
jmp
into
or
outsb
mov
shlb
jmp
fmuls
rcr
cmp
jge
incl
daa
mov
pop
pusha
push
jg
add
insb
sbbl
sbb
push
or
loope
adc
mov
mov
jns
hlt
hlt
lahf
imul
aas
std
int3
ljmp
add
mov
cmp
or
fldl
mov
fisttps
pop
andb
test
cmpsl
push
dec
stos
out
mov
push
push
adc
and
and
mov
cmp
cmp
iret
dec
push
push
imull
pop
cmp
jle
hlt
fmulp
leave
aas
xchg
and
push
push
mov
mov
push
push
push
es
icebp
pop
adc
jnp
pop
pusha
mov
fdivrl
ret
outsl
sbb
jo
adc
xor
push
leave
test
adc
lcall
jno
daa
cld
mov
add
pop
dec
nop
jle
pop
mov
lret
stos
inc
or
add
lods
mov
decb
push
mov
sub
pop
es
sbb
xchg
lcall
push
inc
sti
and
mov
std
or
es
add
mov
push
xchg
jmp
rorb
add
pop
cmp
mov
bound
orl
push
addr16
cs
out
jge
pusha
orb
sub
fidivrl
loope
call
or
jle
xorl
inc
ds
out
daa
mov
jo
add
cmp
loop
sbb
sub
mov
inc
std
add
add
mov
int
add
subl
xor
jle
aam
divb
pop
mov
or
push
or
or
mov
fwait
mov
dec
mov
addb
andl
mov
pushf
sbb
sub
shrb
rcrl
and
mov
jo
xor
pop
xchg
xchg
and
xor
scas
inc
stos
xor
mov
push
ja
add
pop
add
cmp
testb
fs
xor
nop
mov
daa
or
sbb
pop
outsb
sub
rep
xchg
and
out
enter
xor
jbe
mov
pop
or
jb
dec
or
ljmp
cmp
push
repz
leave
dec
sbb
and
or
lds
andb
add
orl
or
jp
fldt
inc
bound
mov
cwtl
loop
inc
stos
cmp
and
fdiv
or
mov
aam
leave
mov
mov
sub
gs
daa
adcb
imul
loope,pn
mov
xor
stc
add
mov
icebp
das
mov
xor
cmc
aas
push
jnp
pop
lods
add
pop
dec
movsl
or
push
dec
and
fnstsw
adc
daa
repz
sbb
lock
loop
jle
adc
push
fisubrs
sub
outsb
pop
push
addr16
aad
mov
mov
adc
mov
cmc
pop
cmp
rcll
mov
enter
cmc
pushf
or
sub
rcr
adc
int3
sub
pusha
add
in
pop
push
cld
pop
pop
addl
jecxz
cmc
push
das
lods
dec
pop
adc
push
push
insl
jo
xchg
inc
pop
lret
notl
mov
adc
sbb
or
jecxz
lea
push
test
ret
cmp
jge
jne
adc
adc
loop
adc
mov
sbb
push
jae
sub
fistpll
or
dec
jbe
inc
in
or
insl
xchg
or
dec
pusha
jns
jae
jae
push
inc
inc
inc
xor
popf
jl
dec
or
daa
and
xchg
mov
das
xchg
cwtl
add
cmc
sub
push
mov
adc
loope
lods
mov
jle,pn
jp
loop
testb
xor
jne
out
and
xchg
jle
cmc
cmp
scas
pop
dec
add
and
add
xor
mov
ficomps
in
dec
push
nop
push
mov
sub
jg
das
lahf
mov
fxam
pop
mov
sub
sti
dec
mov
cmc
sbb
push
xchg
std
es
mov
mov
push
pop
dec
scas
add
fadds
jmp
icebp
push
pop
data16
cli
movsb
loopne
bound
add
lods
sub
dec
sbb
or
jg
sbb
lock
inc
sti
ror
repz
aam
cmpl
and
pop
aaa
jp
or
sbb
sub
popf
cs
into
mov
fsubrl
sarl
push
mov
test
addl
add
dec
sahf
xchg
push
inc
pop
icebp
xchg
icebp
add
mov
fistps
ficoml
xchg
or
sub
sbb
enter
out
add
mov
or
lds
pusha
lods
das
adc
fdivs
in
dec
push
fucom
fistps
sbb
inc
xchg
rolb
dec
jle
loope
sbb
out
inc
and
inc
lret
icebp
cmc
scas
scas
push
adc
dec
aam
test
scas
test
test
sbb
clc
lock
mov
cld
push
add
mov
hlt
loope
mov
ja
and
nop
test
cmp
xchg
or
insb
stc
cwtl
fwait
addb
mov
in
lea
jg
mov
xor
mov
push
cmp
ljmp
lcall
lea
loope
adc
scas
push
inc
scas
fsub
push
sub
scas
movsl
mov
jle
push
into
sbb
mov
lea
inc
push
push
ja
lods
jbe
cmc
dec
xor
mov
mov
push
scas
push
pop
inc
sti
or
testl
xchg
cli
andb
mov
adcl
xchg
dec
jecxz
stos
cmp
xchg
add
das
rorb
xorl
or
dec
mov
addb
pop
mov
and
arpl
ret
pop
int3
inc
inc
dec
sbb
mov
mov
mov
sbbl
mov
popf
aad
pop
jge
repnz
in
lret
add
orl
mov
xor
and
pop
jnp
adc
into
incb
xor
pop
mov
int3
ss
fstpl
mov
cmp
add
sti
shll
ss
pop
mulb
movsl
add
push
inc
add
cmpsb
push
mov
out
jmp
mov
mov
cmp
pop
incl
or
sub
scas
sbb
dec
sbb
sbb
or
pop
sub
mov
jle
adc
sub
loop
fstpl
pop
push
pop
bound
sahf
stc
adc
or
int
mov
popa
jge
pusha
sub
lods
or
cmpb
lahf
aad
loopne
daa
mov
pop
scas
clc
dec
cs
test
pop
fstps
pop
ret
mov
outsb
adc
mov
outsb
sub
cwtl
pop
bound
leave
into
mov
pop
cmc
sbb
sub
bound
cmp
clc
or
mov
push
in
mov
mov
mov
mov
and
gs
adc
nop
andb
mov
mov
cmp
cmp
and
cli
cmpsl
inc
testl
shrb
mov
cmpsl
adc
xchg
mov
xor
and
leave
inc
push
cmp
js
xor
dec
mov
lret
xor
xchg
sbb
inc
xchg
push
xor
bound
inc
scas
xchg
es
sbb
sti
xor
adc
pop
push
mov
ss
movsl
scas
pop
pop
dec
pop
xchg
test
inc
push
test
pop
pop
mov
je
cltd
pop
push
subl
bound
adc
xor
jle
push
cmc
inc
push
xchg
rolb
push
mov
repz
ss
stc
mov
push
xor
ja
inc
xor
cltd
mov
mov
shrl
stos
inc
sub
sbb
jge
push
push
add
fwait
cmp
mov
mov
loope
xchg
dec
lret
in
or
adc
xchg
jnp
in
hlt
push
dec
mov
adc
xor
ja
loope
stos
xchg
in
mov
mov
push
push
mov
mov
int
and
lret
xchg
sub
push
dec
jb
xchg
push
push
mov
fs
shrb
data16
dec
inc
movsb
sbb
inc
lret
lcall
repz
pop
sub
xchg
cli
cltd
push
sbb
fsubrs
xchg
adc
inc
nop
mov
mov
inc
mov
je
pusha
push
push
push
xor
adc
dec
inc
loop
test
mov
cmp
leave
rcrb
add
push
xchg
stc
adc
shll
pusha
jbe
rcrl
sub
jl
pop
fldl
add
sbb
inc
sarl
xchg
int
cmp
repnz
mov
repz
test
insl
pop
xchg
cmp
hlt
xchg
dec
sub
je
push
jle
stos
sti
adc
cs
movsb
push
mov
jnp
pop
pop
adc
cmp
sbb
jbe
rcrb
sbb
inc
testb
adc
dec
push
pop
xor
mov
pop
je
loop
std
or
in
xor
dec
inc
jg
orl
leave
inc
pop
loope
adc
je
stos
loopne
insl
call
pop
jl
out
in
das
push
sbb
push
jb
pop
enter
bound
stos
loop
incl
shl
sub
scas
aad
iret
xchg
jge
inc
decl
mov
std
xchg
jbe
das
loop
fistpl
bound
xchg
sarb
jge
int3
pop
jbe
and
pop
cmp
push
das
add
push
add
sbb
or
repz
jbe
mov
jg
arpl
fwait
inc
dec
xchg
mov
shlb
cld
imull
push
xchg
and
jno
jecxz
xlat
cltd
adc
or
adc
xchg
push
xchg
jbe
xchg
push
jecxz
notb
mov
xchg
or
rolb
mov
dec
xchg
in
and
std
pop
inc
mov
aad
subb
aas
or
jl
pop
dec
es
popf
leave
inc
push
mov
xor
sbbb
lcall
call
pop
shll
mov
fidivs
pop
xor
lahf
jg
push
push
ljmp
push
cli
add
sarb
push
sbb
hlt
mov
mov
pop
rolb
pusha
add
add
out
outsl
sub
sbb
add
push
popf
repz
sbb
mov
jle
lahf
mov
sahf
popa
into
dec
mov
ret
mov
inc
repz
push
mov
lcall
mov
out
xchg
lahf
jg
sti
mov
call
es
hlt
stos
add
push
je
pop
jp
sub
jns
jbe
mov
cwtl
movsb
stos
popa
les
cmovl
mul
ss
aas
es
icebp
lahf
decl
cmp
mov
addr16
int
cmc
int3
xchg
fstl
or
loope
repnz
xchg
jno
and
and
inc
orb
je
push
inc
sub
dec
and
push
or
es
dec
cmc
fstpl
mov
and
sub
push
ret
mov
mov
das
out
lock
shll
lods
sbb
lcall
mov
xorl
fwait
call
or
inc
in
xor
inc
jg
dec
add
mov
add
gs
add
mov
imul
lcall
sbb
mov
movsl
je
inc
mov
or
das
frstor
adcb
mov
xor
test
rclb
sbb
sub
lahf
frstor
js
adc
mov
or
bound
or
loope
in
push
dec
cmp
fstl
shl
repnz
ds
loope
sub
sub
adc
push
xchg
sti
js
add
pop
pop
jbe
in
pop
mov
aas
cmp
jg
or
xchg
loop
or
rorb
aas
dec
mov
xor
push
jns
dec
sbb
fucom
sbb
repnz
insb
std
lret
sub
and
andl
mov
mov
jp
fcoml
pop
xchg
pop
push
cmp
mov
rclb
das
cli
inc
push
repnz
clc
pop
and
jle
add
das
loope
lock
sti
movsb
out
cmc
xchg
std
xchg
inc
movsb
fbld
in
int
dec
inc
add
inc
inc
dec
pusha
orl
or
dec
or
ljmp
test
je
aas
adc
jbe
sub
push
fcomps
push
std
sti
lahf
sbb
outsb
mov
notl
jno
stos
in
xor
adc
pop
pop
scas
std
inc
gs
jo
std
lods
pop
pop
clc
push
cmpsb
loope
sub
jbe
insb
or
mov
adc
bound
push
push
push
and
sub
insb
insb
loope
pop
sbb
cmpsl
pop
or
mov
jne
jmp
lahf
cmpsb
fldl
jecxz
mov
rcl
pop
popf
aam
cs
imul
testl
jg
mov
je
loopne
pop
or
into
push
add
out
loop
xor
fsubp
ret
mov
sub
fadd
popf
pop
out
jl
repnz
icebp
pop
aad
push
dec
adc
mov
mov
dec
das
nop
inc
pop
nop
pusha
call
addr16
sbb
jle
mov
cltd
pop
jg
fs
loop
xchg
mov
stos
push
mov
test
rcrb
fsubrs
mov
movsl
xchg
push
xchg
push
stos
jns
dec
jle
jg
mov
jb
add
xchg
and
inc
adc
and
lahf
mov
sub
xchg
add
push
int
sub
mov
imul
sbb
out
stos
aaa
test
xorl
cmpb
jg
jle
out
popw
loop
mov
or
loop
movsb
jne
pop
dec
scas
jne
and
xchg
out
pushf
push
loope
mov
and
inc
push
mov
loop
xlat
jecxz
sub
pusha
aaa
xor
xchg
dec
xlat
inc
or
pop
icebp
cmp
dec
or
push
call
cmp
cmpsb
pusha
pushf
sbb
jmp
jle
std
mov
jbe
jo
sbb
inc
push
ret
std
gs
mov
xor
jle
dec
outsb
push
or
fnsave
insb
push
and
les
rcrl
lock
xor
imulb
mov
and
stc
call
movsb
sbb
pusha
movsl
leave
loopne
ret
into
inc
push
xchg
or
jg
pop
push
insl
sub
or
pop
jg
cmc
pop
xchg
mov
cmc
enter
pop
je
stos
dec
les
push
cmp
or
sub
jl
inc
jg
daa
dec
or
push
pop
push
loope
testb
cmp
sbb
pop
test
ss
stos
or
fbstp
cld
inc
pop
in
test
int3
add
das
adc
rorb
jmp
enter
mov
xchg
or
fs
in
push
popa
lea
popa
sbb
push
xor
push
int3
ds
les
sub
lock
clc
mov
ret
mov
outsl
or
mov
test
leave
mov
jae
push
lcall
lcall
repnz
subl
and
mov
mov
xlat
call
and
cmp
cli
mov
mov
sbb
push
jae
sub
pop
ds
xchg
cli
mov
adc
fimull
cmp
pop
push
adc
push
push
xor
mov
and
inc
pop
or
inc
pop
int3
lret
jmp
scas
sbb
add
repnz
cmp
sti
fsubs
and
xor
je
and
lods
out
xor
mov
mov
pushf
in
pop
ret
idiv
es
add
fdivrs
fbld
aas
xor
jle
mov
mov
pop
loope
sbb
icebp
imull
arpl
out
push
rcll
adc
clc
test
mov
jmp
mov
lcall
shrl
pop
mov
cli
or
faddl
sbb
mov
adc
sub
addr16
mov
add
pop
adc
scas
xchg
jns
inc
jno
lcall
fwait
popa
mov
fildl
add
push
loopne
inc
test
push
shl
mov
insb
mov
sub
sbb
xor
loope
sbb
cmp
sbb
scas
shl
push
cs
cmp
pop
pushf
mov
cld
xchg
fdivs
mov
push
xchg
insb
xor
dec
cmp
ss
push
insl
hlt
dec
push
add
sbb
mov
push
aaa
scas
sbb
pop
xchg
cmpsl
in
ljmp
xchg
sbb
lcall
mov
loope
jle
ljmp
loopne
cli
pop
icebp
mov
stos
clc
push
cltd
aam
loopne
jecxz
push
je
jge
out
loopne
inc
into
gs
test
push
xor
pop
bound
enter
testb
mov
test
out
push
push
dec
in
or
cmp
out
mov
sub
les
adc
add
rorb
ret
cmp
fcom
sti
loop
sbb
stc
imul
mov
push
cld
push
scas
cmpsl
mov
int3
push
push
leave
repz
loope
shrl
adc
jo
jecxz
jg
fs
or
daa
out
push
push
dec
add
cmp
mov
loope
or
xorl
dec
push
lods
pop
dec
ds
push
std
mov
mov
ds
pop
jle
jne
mov
dec
and
pop
cwtl
fisttpll
push
jg
data16
into
daa
xchg
test
pop
xchg
testb
jle
and
sti
adc
jno
popa
adc
jae
add
cmc
jp
push
or
sbb
xchg
push
enter
xchg
in
aaa
push
add
mov
add
mov
js
fstpt
stos
pop
jne
pop
inc
sub
cmp
dec
and
inc
push
clc
subb
dec
test
pop
sahf
jl
scas
jge
dec
das
inc
dec
std
add
mov
jbe
cmpsb
jo
cmp
jbe
scas
dec
inc
pop
push
lcall
fisubl
ret
jnp
out
lea
push
and
out
xor
xchg
xor
into
std
imulb
push
sbb
push
push
rorl
je
jg
push
ret
inc
push
jle
mov
sub
xchg
and
jmp
sub
sbb
xor
rclb
xchg
xor
in
or
insb
xor
ror
sub
pop
push
repz
inc
mov
pop
mov
mov
sahf
push
cltd
sbbb
jmp
loop
imulb
movsl
fstpt
push
cmp
mov
outsb
and
sbb
dec
push
and
loope
xchg
mov
sbb
xor
cmp
push
or
sarb
or
pop
stc
or
push
ret
xorb
dec
rorb
lret
pop
into
pop
cmpsb
xchg
sbb
addl
mov
daa
rolb
cs
jnp
and
subb
cmp
xchg
leave
mov
movsl
pop
xchg
cmp
jmp
dec
mov
inc
loop
bound
enter
and
adc
inc
cltd
lods
test
sbb
sub
daa
out
push
pop
cltd
cli
mov
sub
enter
xchg
pushf
ss
push
mov
push
jl
cli
mov
cmpsb
add
push
cmp
push
jbe
daa
pop
lret
lret
inc
xchg
add
std
imul
jbe
stos
push
push
cmp
jb
sbb
aam
in
insb
cli
loop
pop
mov
daa
ror
sbb
adc
sbb
repnz
lods
loop
mov
inc
inc
cmp
mov
pop
push
aaa
cli
inc
in
cmp
xchg
leave
push
pop
pop
sbb
xchg
cld
xchg
inc
or
jge
sub
test
mov
pop
push
cmp
mov
jp
fisubrl
popa
sti
ret
fwait
sub
cli
inc
movsb
ja
adc
sub
dec
sbb
lahf
ficoms
mov
mov
sub
loop
cli
mov
imulb
lahf
fwait
mov
cld
and
push
mov
and
addr16
pop
fmul
xchg
xor
loop
mov
jnp
sbb
call
or
jl
and
imul
cwtl
sub
daa
aas
inc
test
dec
hlt
iret
push
insb
push
cltd
pop
xor
hlt
jle
repnz
inc
negl
add
fistpl
inc
adc
adc
adc
jle
jns
xchg
and
jecxz
inc
fidivrs
or
inc
push
scas
xlat
pusha
pmuludq
lret
cltd
rcrb
or
cmp
loope
jbe
fcompl
hlt
jmp
mov
fcmovbe
cmc
mov
stos
xchg
dec
pop
sbbl
xor
xor
add
rclb
push
loop
repnz
sbb
push
shll
enter
inc
andl
lea
not
mov
jmp
scas
and
jbe
pop
std
mov
mov
aad
inc
xchg
pop
xchg
aam
cltd
sub
jne
aam
push
mul
aaa
jno
cmp
push
push
push
pop
sbb
mov
mov
mov
dec
pop
pop
lret
cmp
mov
dec
mov
fidivs
or
push
outsl
cld
mov
sub
sbb
mov
sbb
cmp
inc
mov
mov
loopne
enter
mov
lea
mov
mov
das
cmp
xchg
int
push
sub
and
mov
push
dec
lods
adc
pop
subb
adcb
orl
outsb
mov
cmc
inc
sub
loope
inc
inc
into
in
lea
xor
dec
pop
repnz
dec
or
sahf
cltd
lahf
out
adc
dec
mov
ret
push
add
mov
adc
inc
ljmp
adc
jle
sarb
adc
fstpl
xchg
push
ds
inc
sub
inc
inc
and
adc
cltd
insb
ret
sbb
mov
mov
mov
orb
pushf
imul
inc
lock
sub
mov
ds
add
adc
and
xchg
mov
add
orb
adc
xchg
sub
pop
xchg
xchg
dec
repz
hlt
cltd
xor
or
cwtl
cmp
or
cltd
clc
push
stos
inc
pop
mov
inc
push
mov
lret
loop
adc
andb
ja
loope
std
push
inc
lods
testb
loop
xchg
sahf
adc
jbe
insb
push
cmpl
mov
push
add
loop
es
add
inc
scas
aad
es
inc
jo
int
shll
pop
stc
in
pop
pop
aam
dec
sub
sbb
idiv
jmp
je
pop
sub
mov
int
pop
loop
push
push
int
pusha
ds
cli
cmp
fstl
mov
cs
xchg
sti
jmp
mov
orl
out
xacquire
fstpt
mov
mov
psraw
fwait
cltd
sahf
mov
mov
mov
push
in
mov
and
test
xchg
add
cmp
xchg
dec
pop
push
xor
mov
aam
sbb
cli
xchg
sbb
or
fdivr
add
xor
adc
fildl
decb
cwtl
push
mov
push
cmp
icebp
test
clc
cmp
subl
mov
mov
or
int3
ds
mov
out
aad
push
lcall
add
ret
or
sahf
je
mov
testl
lock
adc
or
sub
add
and
adc
push
sbb
ret
repnz
sbb
mov
sbb
mov
dec
loope
fbstp
notb
jb
in
inc
xchg
fdivs
sub
add
mov
dec
pop
sbb
or
jle
enter
ja
push
cli
cli
inc
iret
cs
mov
push
loope
out
push
push
sahf
push
pop
inc
fwait
ss
xchg
or
out
add
mov
cmc
mov
test
mov
sub
das
icebp
mov
xor
fcomps
pop
ret
add
mov
hlt
lahf
inc
nopl
sahf
or
push
subl
sarl
ret
sub
insb
cmp
les
xchg
sub
cmp
cmc
pop
outsb
cs
mov
and
int
inc
jmp
sub
imul
or
jp
and
test
mov
and
jle
mov
pop
xor
mov
enter
xor
xchg
inc
das
dec
mov
sti
daa
lock
mov
andl
arpl
scas
push
lret
xor
shrl
add
sbb
divl
sub
cltd
pop
call
inc
xchg
xchg
push
loope
xorl
enter
das
jle
push
in
mov
outsl
loop
mov
stos
loope
repz
testb
push
pop
cmc
cmp
jb
lcall
je
arpl
lret
outsb
cld
dec
push
inc
add
cwtl
xchg
dec
rolb
xor
mov
push
ja
inc
xchg
sbb
mov
movl
fwait
repnz
lea
inc
jge
sbb
fsubl
sarl
jns
mov
dec
mov
or
xchg
push
dec
rcr
inc
cmp
fsubrl
mov
cli
negl
cltd
push
inc
pop
test
movsb
lock
das
loope
adc
or
add
mov
or
bound
sub
cs
jae
int3
ret
xchg
insb
aaa
test
jnp
loope
mov
mov
mov
inc
add
vxorpd
or
js
jl
inc
xor
inc
popf
pop
cmpsb
jge
sub
cmp
xor
push
ja
inc
xor
mov
stos
sub
xor
add
jl
xchg
dec
xchg
mov
test
cmpb
jecxz
jno
cwtl
mov
mov
sbb
test
xor
loope
and
cmpsb
sahf
enter
idiv
orl
sbb
outsb
adc
lods
cmp
mov
add
mov
shll
test
inc
push
jle
out
sbbl
aas
loop
jae
jmp
jmp
mov
ror
push
lea
mov
mov
pop
mov
bound
sbbl
inc
test
movsl
add
mov
sub
dec
xor
or
lds
insb
test
and
xchg
push
mov
dec
call
in
lcall
sarb
mov
jg
lods
pusha
cwtl
dec
xlat
pusha
scas
int
das
pop
pop
dec
lret
lods
and
push
iret
outsl
insb
cmp
pushf
fwait
adc
jg
ret
dec
lea
and
aas
loopne
sub
out
push
xchg
xlat
mov
ja
jbe
sti
lret
sub
push
mov
fidivl
aad
jmp
cli
shl
lea
adc
pop
cmpsb
add
push
mov
sub
push
daa
jae
inc
jno
cs
cmp
repz
inc
sbb
roll
push
pusha
out
or
dec
aam
adc
ret
outsl
dec
loopne
mov
xor
popf
push
mov
sub
mov
mov
or
cwtl
scas
inc
pop
pusha
cmp
cmpsb
inc
lret
xchg
push
sub
jl
xchg
push
js
adc
out
fucomp
notb
inc
mov
outsb
or
xor
jne
push
or
mov
push
aaa
test
dec
mov
leave
or
inc
push
cmc
or
andl
and
fwait
jb
shl
rorl
dec
lret
mov
loop
ds
fs
stos
outsl
xor
mov
push
and
inc
ss
pop
fisttpl
pop
jp
enter
dec
or
sbb
stos
loope
stos
nop
inc
js
in
pop
test
jg
or
or
mov
fsub
cld
je
orb
test
xor
sbb
xchg
daa
dec
lret
gs
push
pop
movsl
jg
loopne
insl
and
dec
insb
add
int3
sub
adc
pop
nop
mov
ja
in
push
stc
outsl
idivb
cmpsl
nop
or
push
cs
and
dec
sub
out
adc
imul
cwtl
divb
push
inc
mov
and
std
sbb
push
adc
cmp
inc
xchg
in
sub
cmc
inc
add
push
or
sbb
add
popa
adc
pop
push
and
cmc
cmp
out
js
clc
pop
mov
popa
invd
hlt
movsb
test
aam
ret
std
push
mov
push
divl
sub
cli
adc
xchg
adc
mov
pop
lods
xor
fsubl
push
insb
das
jle
jmp
pusha
movsl
pop
jge
ja
popa
jg
xchg
pop
pop
push
xor
push
jp
pop
inc
pop
jle
sub
dec
mov
mov
push
jl
xor
pop
lret
xor
or
rcrl
je
push
mov
mov
pop
xor
xor
push
or
dec
push
xor
loopne
test
test
stos
test
hlt
lahf
shll
cwtl
cwtl
cmpsl
xchg
leave
and
or
pop
rolb
adc
or
test
orl
pop
mov
or
cmc
xchg
xorb
sub
mov
shlb
leave
in
and
test
pop
mov
cmp
inc
mov
cwtl
lds
repz
decb
repnz
push
enter
loop
ret
pop
mov
pop
arpl
xchg
sysexit
or
or
mov
jmp
pop
mov
xor
loopne
mov
push
orb
adcb
xor
cmp
mov
into
push
add
loop
ja
xchg
inc
or
jp
popf
fldcw
scas
xchg
adc
pop
push
push
arpl
dec
bound
lahf
in
xchg
xchg
pop
push
cmpsb
lahf
pop
mov
cld
adc
stc
in
aas
dec
neg
or
jg
adc
xor
dec
inc
loope
xchg
iret
jg
cmp
jp
mov
mov
push
jbe
jbe
outsl
mov
sbb
dec
pop
xor
fdivrl
lahf
dec
xor
loop
xchg
pop
xchg
xor
sbb
jp
aam
mov
jge
loop
xor
loope
pop
cwtl
into
scas
pop
lods
pop
jns
pop
subb
sbbl
nop
aas
push
jl
insb
jnp
sarl
loop
xchg
pop
nop
stos
subl
cmp
imulb
and
cli
lcall
orb
nop
and
leave
push
ret
sbb
mov
in
es
inc
add
outsb
rorl
dec
cwtl
bound
and
dec
dec
sbb
fmull
inc
outsb
inc
dec
inc
notl
jmp
add
pop
loope
lock
idivb
push
js
pop
dec
ss
push
ja
std
jg
dec
push
jle
push
mov
loope
es
dec
bound
add
les
cmp
mov
aam
dec
ret
inc
sbb
mov
or
stos
filds
or
lods
sbb
lcall
aad
dec
adc
sub
jbe
imul
loop
jne
test
push
mov
sbb
mov
cmp
pop
pop
add
or
aaa
ret
or
pop
int
lret
pop
push
mov
cmp
lret
pop
push
mov
iret
fdivrs
shl
sub
punpckldq
sbb
scas
cmpl
das
std
out
outsb
adc
movb
in
push
or
stos
orl
adc
adc
dec
or
and
insb
jb
fwait
add
jbe
popf
aad
out
pop
mov
cmc
jo
inc
pop
and
jb
cmpsb
sub
inc
jp
sub
or
pop
loop
popa
jne
xchg
loope
pop
push
test
adc
negl
shrb
push
and
dec
or
inc
sbb
lock
lock
or
or
roll
fldl
mov
cltd
cs
idivl
into
xor
and
es
fcomps
rolb
ss
rorl
gs
mov
movsb
xor
pusha
rcrl
loop
popf
push
inc
nop
dec
shlb
movsl
pop
jne
ss
xchg
inc
add
aaa
jecxz
fildll
out
sbb
add
outsb
cmp
popa
mov
ja
mov
popa
das
pop
mov
jb
scas
mov
jp
push
and
pop
in
test
jge
nop
out
add
fs
xor
lds
push
push
ljmp
lret
pop
movsb
enter
mov
and
inc
push
out
mov
pop
cmpsb
in
das
xor
jae
push
icebp
mov
movsl
fisubl
notb
pop
dec
into
sub
cmp
or
sarl
inc
mov
cmpb
sbb
push
movsl
dec
pop
or
repnz
and
push
es
clc
xor
and
push
pop
mov
lock
lods
sub
sbb
inc
pop
pop
pop
aam
xchg
outsb
sbb
cmp
dec
and
mov
lcall
popf
clc
movsb
add
cli
and
ja
xor
repz
pop
mul
pop
mov
scas
push
jmp
cmp
into
in
pop
cmp
push
sbbb
push
cmp
leave
add
inc
jae
shlb
bound
push
into
adc
leave
mov
cld
push
ror
int
pop
xchg
sub
jmp
lods
add
rclb
mov
jb
int3
jle
pop
cmp
jae
jle
xor
adc
xor
sub
scas
pop
test
cmp
cs
andb
into
lcall
pusha
inc
pop
dec
mov
sbb
sbb
cmp
jecxz
aas
inc
loopne
jge
inc
cmpsb
sbb
jecxz
loopne
pop
inc
cmp
cmpsl
jno
cwtl
mov
sub
or
adc
adc
pop
and
or
mov
pop
jne
ds
in
dec
adc
addb
xchg
xchg
cmpsb
xor
bound
lret
xchg
inc
jecxz
cmp
pop
add
mov
and
sub
aad
mov
sbbl
push
sub
mov
mov
adc
je
movsl
out
inc
add
pop
pop
mov
outsl
das
call
stos
cmp
sbb
lcall
in
sbbb
xchg
ja
push
lret
mov
cmp
sub
sbb
adc
je
nop
mov
popa
std
lds
fldcw
and
jmp
mov
xchg
fwait
inc
adc
mov
push
out
clc
xor
pop
sbb
aaa
sbb
inc
push
in
jl
adc
inc
push
mov
dec
jbe
dec
pop
xchg
and
loop
adc
or
aas
in
cmp
jl
movsl
xlat
xchg
andl
dec
pop
jns
in
mov
pusha
std
into
addb
push
and
dec
push
sbb
jp
gs
adc
cmp
push
add
mov
push
lea
out
ret
imul
jge
stos
std
pop
aas
cmpsb
ficoml
pop
clc
scas
sbb
dec
push
aad
jle
jae
inc
jb
movsl
pop
dec
js
mov
fcoml
andl
xchg
sbb
cld
pop
mov
pop
inc
cltd
adc
pop
or
pop
jb
jle
scas
mull
add
pushf
and
mov
inc
call
push
xchg
loop
mov
mov
sysexit
out
adc
cmpsb
insb
push
outsl
mov
jle
mov
dec
je
into
mov
jle
movsl
ret
int
or
inc
aam
jo
xlat
push
clc
xchg
das
sub
push
pop
fdivr
testb
or
jl
sub
ss
addr16
fwait
aam
out
daa
pop
pop
bound
sbb
les
or
dec
sbb
test
sbb
xchg
outsl
push
sbb
pop
and
lret
loop
mov
inc
lods
inc
cltd
aad
insl
jnp
cltd
sub
aaa
dec
or
push
and
cmp
xor
sbb
js
shrl
ror
loope
mov
mov
push
hlt
cwtl
sbb
aam
ret
adc
push
sub
sub
inc
xchg
psrlq
or
iret
jge
pop
repz
je
addl
loop
stos
sub
push
sbb
xchg
pop
test
push
jle
icebp
in
es
mov
test
lea
add
lcall
inc
add
in
test
sbbl
jns
aaa
test
cs
cmp
pop
es
push
mov
fdiv
les
add
enter
decb
add
sar
cmpb
add
push
sub
bound
push
stos
add
pushf
hlt
add
sub
xor
xor
xchg
push
or
pop
mov
lcall
inc
sub
pusha
xchg
and
das
sbb
test
fmuls
add
loop
xchg
mov
cmp
sub
out
and
insb
arpl
testb
lock
sbb
cld
push
daa
dec
xor
or
jle
mov
pop
mov
fwait
xorl
cmp
push
jecxz
inc
cmc
out
push
cmpb
popa
xor
push
sub
dec
pop
cmp
xlat
lcall
xor
cld
cwtl
adcb
xchg
pop
aaa
data16
out
push
mov
sbb
cmc
mov
repnz
add
mov
hlt
dec
or
notl
cmpsb
outsl
enter
inc
xor
dec
push
jle
popa
xchg
xchg
fcomp
pop
mov
add
xchg
jnp
push
dec
push
add
ds
cmp
push
sahf
xor
dec
stos
out
aam
sub
cmp
push
sub
ljmp
or
or
pop
inc
lahf
jp
cmp
or
pop
lcall
push
push
sbb
cmc
int3
mov
cmp
loope
pusha
iret
adc
jb
mov
inc
adcl
jecxz
sbb
das
pop
or
xchg
push
push
icebp
test
pop
add
adc
jne
ja
cli
sub
sbb
push
pusha
pcmpeqw
scas
push
cmp
pop
mov
sbb
push
rcll
scas
sub
setnp
sub
cwtl
jns
inc
add
adc
jg
sub
int
lea
fnstsw
popf
jecxz
dec
jo
or
imul
mov
push
add
pushf
adc
sbb
push
pop
mov
out
aad
data16
into
sbb
mov
cwtl
pushf
jne
inc
mov
push
bound
dec
mov
or
mov
push
sti
arpl
xlat
lock
js
ret
pop
and
dec
mov
and
aad
pusha
loop
xchg
xchg
movsb
loop
mov
and
push
loopne
cmc
scas
fisttpll
jbe
push
sti
icebp
or
add
push
fidivrl
aam
xchg
fistl
xor
imul
idivl
mov
and
dec
add
adc
in
das
test
imul
movsl
sub
fwait
add
or
adc
nop
and
scas
ja
stos
ficompl
push
mov
orl
push
pop
jns
dec
push
pop
neg
in
pushf
inc
jp
ret
lahf
aaa
push
xchg
shlb
or
ds
ds
pop
xchg
out
mov
in
pop
add
push
aam
xchg
jnp
or
mov
add
jg
shl
adc
inc
dec
sub
add
mov
add
add
jb
repz
jle
push
mov
add
and
mov
or
sbb
or
jmp
pop
inc
iret
mov
jmp
loope
fcoml
pop
aam
mov
int3
insb
jecxz
sbb
cmp
xorl
dec
inc
sbb
push
cli
and
outsb
mov
mov
sub
dec
sub
scas
cmp
out
mov
es
arpl
jno
xchg
push
jg
insb
jge
mov
add
lock
mov
ljmp
jge
lock
out
pop
jg
cmp
mov
cmp
sbb
setg
mov
dec
test
jg
mov
insb
test
adc
scas
push
dec
test
or
shl
jg
popa
scas
dec
outsb
ljmp
push
mov
adc
adc
jnp
ficomps
pushf
pop
hlt
movb
int
dec
sub
cmpsb
gs
ja
call
or
jg
push
or
mov
xor
out
jo
mov
jg
push
mov
pop
jle
fldl
ret
cwtl
imul
mov
ds
sbb
pop
cltd
gs
pop
imul
xchg
pop
push
or
jmp
jle
add
cwtl
popa
and
sub
xchg
push
sbb
add
mov
out
inc
mov
dec
divb
sbb
xor
je
ja
xor
scas
fmull
cli
out
adc
lock
mov
sti
mov
mov
sub
adc
xrelease
lret
out
add
adc
inc
adc
dec
or
and
fnsave
loope
fiadds
push
loope
fsubp
add
dec
mov
stc
pop
loope
or
xchg
sbb
jecxz
loopne
mov
or
pop
ret
icebp
or
mov
jg
xchg
xchg
loop
gs
xchg
add
adc
ud2
loop
cld
inc
mov
jns
add
pop
test
bound
xchg
movsb
xchg
pop
mov
or
inc
ja
cmp
andl
and
pop
adc
fcoml
adcb
jae
stos
into
or
in
out
inc
bnd
xor
and
and
loopne
or
fwait
sbb
xchg
loop
jp
jne
push
dec
pop
out
sbb
call
test
inc
lahf
aad
ja
dec
fidivl
and
inc
add
push
xchg
cli
and
mov
test
pop
adc
arpl
mov
adc
dec
pop
insl
ds
insl
test
pop
insl
cmp
int
pop
adc
xor
in
cli
jne
inc
out
cmpsl
out
sub
sarb
pusha
add
stos
aaa
sbb
imul
inc
test
inc
xchg
sub
mov
pushf
fs
lock
push
loop
js
movsl
inc
dec
sbb
sbb
lods
lcall
jnp
clc
push
stos
ds
add
and
mov
xchg
add
enter
sub
mov
pop
jecxz
mov
popf
xchg
mov
inc
mov
test
repnz
add
pop
fadds
insb
jns
bnd
xlat
pop
int
outsb
sahf
daa
pusha
add
sub
push
push
mov
decl
loope
mov
bound
sub
out
jmp
mov
xchg
test
cmc
jp
cmc
insb
mov
cli
jg
out
in
push
pop
jl
loop
loope
enter
jl
inc
shl
cmp
push
sub
push
leave
jb
xchg
mov
pusha
ljmp
and
push
xor
in
mov
xor
mov
bnd
and
jmp
bndldx
cli
test
stos
fiadds
jecxz
and
or
mov
cmp
xchg
or
int3
stos
cmp
mov
push
or
pop
jb
scas
inc
xchg
xchg
cmp
inc
mov
repz
les
xor
pop
add
pop
bound
loopne
cld
xor
cmp
subb
testl
sbbl
dec
add
dec
add
or
shrb
lret
adc
arpl
loop
aas
or
jo
jae
xor
sub
loope
mov
sub
iret
or
inc
fistpl
mov
pop
loope
sahf
test
jne
or
add
adc
popa
arpl
lods
xor
and
mov
mov
ja
xchg
mov
leave
ja
mov
pop
aaa
jge
rcll
sbb
dec
ja
loop
flds
lcall
sub
lcall
rcrl
dec
cmp
or
roll
test
dec
test
rclb
cwtl
ljmp
pop
mov
add
mov
out
xchg
push
leave
push
mov
es
mov
imul
or
sub
dec
jo
mov
inc
aam
and
and
fmull
pop
or
cmp
push
sbb
mov
mov
lret
xchg
pop
loop
andb
push
js
pop
enter
sbb
loop
inc
sbb
push
push
out
popf
jge
loope
sub
and
add
dec
push
test
jno
sbb
jne
cld
int3
jl
lahf
fists
daa
lcall
arpl
sub
scas
les
cwtl
or
xchg
sbb
adc
adc
add
std
pop
andb
xlat
add
shrl
xchg
mov
cmp
xorl
enter
add
adc
repnz
pop
push
fsubr
xor
jg
cld
inc
mov
xchg
clc
mov
arpl
shll
aas
sbb
pop
push
clc
lahf
fsubl
pop
int
dec
and
popf
add
insb
cmpsl
mov
lds
sbb
mov
iret
jns
cmp
xchg
mov
mov
out
push
mov
mov
sbb
mov
push
popf
pusha
pop
inc
mov
int3
adc
pop
add
mov
inc
mov
add
pushf
jae
insb
xchg
cmp
popf
ljmpw
sti
inc
mov
pop
pop
aaa
jl
xor
loop
sahf
sub
mov
jle
add
dec
outsl
inc
push
mov
lret
push
push
ret
nop
stc
sub
in
inc
jnp
dec
dec
pop
jne
addl
mov
int3
or
jo
les
rcll
gs
jno
push
ljmp
dec
or
popf
out
mov
sub
iret
bound
xchg
lock
shll
inc
inc
movsl
push
bnd
mov
jnp
jle
jbe
das
jnp
push
or
inc
shrl
inc
adc
xor
add
push
cmpb
test
call
xor
adc
push
repnz
dec
xchg
popa
inc
adc
xchg
fcomip
sub
lret
pop
ja
rolb
sbb
shl
sbb
and
pop
xchg
lock
and
fisubl
loope
or
loope
mov
andb
gs
inc
mov
cmp
cmpsb
cwtl
in
pop
cmpsb
sbb
sbb
cmc
add
inc
inc
and
mov
pop
test
dec
cld
xchg
cmp
movsl
faddl
jae
sub
push
cmp
push
sub
add
jb
fldenv
cmp
xchg
and
sbb
mov
dec
loope
movsb
xlat
mov
ja
inc
popf
cmpsl
sbb
push
mov
and
mov
dec
mov
inc
mov
pop
pop
jb
dec
fwait
xchg
sbb
psraw
aad
mov
add
repz
jp
push
cmc
fcoms
lcall
sbb
xor
and
ficompl
je
call
jg
cmpsl
mov
cwtl
cmp
pop
pop
scas
and
adc
cmpl
cmp
mov
popf
outsb
mov
push
int
cmp
or
out
push
mov
loop
pop
std
inc
mov
hlt
push
outsb
scas
dec
or
stos
das
push
ljmp
push
push
sbb
push
sbb
mov
jne
xorb
add
xor
dec
push
jle
pop
pushf
jae
pop
push
repz
xor
out
mov
out
jo
fisubrs
fsubrl
mov
jl
daa
data16
test
or
je,pn
pop
insl
dec
pop
push
iret
pop
faddl
pop
loopne
push
xchg
jno
push
cwtl
adc
jmp
jle
xchg
add
pop
fsubs
pusha
mov
xchg
movsb
imul
mov
xor
scas
fsubrl
dec
inc
cwtl
inc
or
pusha
addr16
mov
xchg
bound
pop
ljmp
mov
pop
in
into
push
vmovd
mov
inc
cwtl
test
adc
movsl
sub
adc
icebp
xorb
push
xchg
lcall
sbb
dec
daa
dec
ret
xor
sub
pushf
cmpsb
xor
pop
jge
push
mov
int
cmp
dec
enter
pop
adc
jno
decl
pushf
jp
dec
fisubrs
ret
xchg
hlt
mov
fwait
in
add
pop
sbbl
jl
mov
add
adc
xchg
sarb
sub
std
xlat
push
sbb
jne
or
ljmp
sub
dec
and
ret
icebp
sub
iret
mov
adc
pop
mov
stos
out
mov
xorl
adc
push
and
sbb
mov
das
sbb
lods
xchg
mov
jle
sahf
pop
rcrb
imul
add
loope
pop
push
out
xchg
jg
sub
adc
sbb
inc
dec
lods
ds
push
mov
xor
add
stc
mov
cwtl
movsb
repnz
in
cmpsl
scas
push
sbb
push
je
push
fsubrs
loop
push
mov
jb
and
mov
sbb
mov
push
fcoms
test
insb
cmc
dec
add
or
fdivrl
adc
lods
leave
movsl
cmpsb
out
mov
aam
incb
jb
cmp
sub
add
fisubs
std
shl
subl
lret
fisubrs
mov
xchg
xchg
jmp
lahf
pop
cmpsl
into
movsl
jnp
dec
sbb
or
sub
push
popa
out
pushf
shll
subb
push
push
xchg
mov
sub
jbe
arpl
loope
mov
pop
dec
les
or
pop
xchg
loop
loop
bound
lods
ficoml
mov
dec
pop
inc
lahf
rorl
in
xchg
hlt
outsl
or
lahf
inc
out
lds
mov
cmp
jno
imull
add
inc
ja
sbb
inc
mov
jle
out
ja
ror
inc
cwtl
add
or
inc
sbb
mov
xorb
mov
mov
sub
fwait
xchg
movl
inc
pop
in
aam
outsb
cwtl
icebp
shl
jp
das
jne
mov
jg
das
xor
loopne
jne
shrb
fcmove
pop
inc
jae
pop
pop
in
nop
inc
fbstp
ds
mov
xorl
inc
add
scas
scas
jp
sub
dec
test
daa
push
popf
add
mov
ja
mov
hlt
les
stos
pop
movl
xchg
adc
rorb
ds
push
cmc
rcrb
subl
ja
rolb
lods
jecxz
subl
adc
enter
cwtl
movsb
fimuls
inc
mov
xor
mov
ja
data16
daa
push
popf
stc
pop
mov
sub
mov
and
xor
add
roll
cs
test
cmpb
adcl
push
add
shll
aad
pop
cmpb
pop
pop
pop
xor
jmp
sbb
lcall
jecxz
jp
ja
mov
ret
mov
dec
pop
rcrl
fmull
xchg
andb
adc
nop
punpckhdq
push
loope
jp
lret
sub
in
rcr
pop
cmc
outsb
dec
push
jecxz
cmp
imul
into
test
sahf
add
imull
xor
hlt
jle
mov
js
push
call
movsb
jp
inc
push
pusha
jo
push
sub
xor
lods
xchg
jg
fcomip
addr16
or
std
jecxz
jbe
lods
in
les
mov
fcomps
lretw
int
mov
ds
adc
inc
bound
hlt
leave
pop
xor
or
mov
mov
or
ret
repz
fmuls
mov
inc
pop
loopne
inc
jno
push
adc
mov
or
xlat
adc
loop
out
fsts
pop
cwtl
mov
shrl
mov
mov
cmp
setp
cmp
loop
je
push
int3
jle
jo
int3
add
jle
je
add
fwait
push
scas
rcrl
cmp
testb
cmc
push
iret
arpl
jnp
add
sbb
inc
push
cmpsb
xlat
sahf
sub
popf
ljmp
cmp
pop
mov
adc
or
lea
pusha
and
std
inc
fcomps
mov
and
mov
push
jo
push
xor
das
jbe
dec
in
xor
bound
insb
ret
adc
rorb
inc
repnz
adc
mov
sbb
jg
dec
loop
mov
cwtl
sbb
test
xchg
cmpsl
mov
lret
jbe
mov
and
imul
fidivrl
andb
pop
jl
ucomiss
cmpsb
aaa
mov
adc
cmpsl
std
add
dec
cld
dec
adc
push
addb
pop
movsl
sbb
cmp
jns
fiadds
fcmovbe
fstp
lds
scas
inc
fldt
add
cmp
cli
adcb
inc
push
cmp
sbb
and
mov
push
mov
insl
add
inc
das
push
aaa
lods
inc
bound
inc
out
sub
cltd
enter
fdivrs
cmp
xchg
lahf
push
js
pop
mov
int3
sbb
mov
out
xchg
sbb
faddl
cmp
lcall
movsb
dec
sbb
ja
dec
loope
pop
sbb
or
call
push
lahf
jg
jmp
pop
add
shll
fistl
or
xor
lcall
mov
or
mov
xchg
xchg
cs
sbb
icebp
and
out
xor
jo
bound
inc
mov
or
fwait
dec
and
in
xor
scas
ja
out
sbb
out
clc
push
cltd
cmpsb
xchg
adc
xchg
stos
mov
xchg
adc
add
loope
or
inc
push
repz
shl
mov
mov
cmpsb
xchg
jmp
addl
rcl
and
mov
jnp
out
or
inc
xchg
cmp
insb
fbld
loope
push
cs
bound
cs
dec
mov
popa
push
jbe
aaa
ljmp
mov
push
mov
sbb
sbb
lcall
mov
stos
adc
cwtl
add
pusha
sbb
xor
add
cmp
mov
push
jl
pop
cltd
jmp
inc
mov
stos
fisubrs
sarb
popa
dec
pop
cmc
mov
ret
les
aam
cmp
xor
lcall
sbb
popf
ljmp
push
ss
out
fldl
xor
ja
clc
xchg
pop
mov
cmp
or
sub
sbb
iret
fs
inc
jle
inc
mov
xchg
hlt
mov
dec
xor
icebp
shlb
pop
sub
lea
pop
sbb
fwait
inc
nop
rolb
rorb
repz
push
ret
stos
and
loope
jnp
ret
jns,pn
loop
jp
push
std
out
jle
fimuls
jo
movsl
or
es
ret
pop
lahf
dec
xchg
out
rclb
cli
push
sbb
xor
cwtl
push
popa
mov
imul
jmp
das
adc
pop
ja
pusha
cltd
bound
in
cltd
sbb
pop
ss
loope
movswl
pop
mov
out
push
fidivl
ret
dec
and
sub
sbb
sbb
jl
ret
xchg
mov
and
or
imul
adc
daa
push
mov
dec
out
lds
pop
mov
fstl
loop
pusha
or
xor
push
adc
pop
and
pop
sahf
incl
sbbl
ret
sub
add
in
jg
inc
mov
xor
arpl
cmp
or
fisttpl
enter
ret
sarb
loop
mov
hlt
push
sbb
add
frstor
mov
dec
dec
test
rcr
leave
xchg
lret
jno
sbb
pop
pop
mov
nop
dec
lret
cltd
mov
das
add
push
sbbl
xorl
addb
mov
aaa
jnp
cmpsl
sub
push
push
enter
cmp
mov
add
nop
mov
outsb
lcall
mov
icebp
mov
idivb
cmp
add
inc
jle,pt
fcoml
enter
pop
test
arpl
push
leave
inc
inc
enter
lcall
aaa
push
dec
adc
je
and
rorl
cmc
xor
mov
je
adc
push
mov
or
cmpsb
dec
or
in
xorb
loope
mov
inc
sbb
lods
or
mov
dec
insb
xor
sub
dec
mov
dec
push
add
or
xchg
pop
fmull
mov
and
add
orl
lods
clc
ret
or
daa
push
cmp
dec
movsl
cmp
xor
dec
daa
jecxz
mov
jg
pop
frndint
call
adc
dec
das
pop
cwtl
inc
repz
mov
mov
xor
push
ss
leave
mov
push
leave
dec
xchg
cmp
test
mov
push
out
xor
sbb
mov
jecxz
pop
clc
jnp
jle
xor
fcoms
vfnmaddpd
push
cmpsb
leave
es
popa
outsb
mov
scas
pop
je
push
mov
shll
cmp
or
mov
dec
sbb
push
ficoml
gs
je
push
add
outsb
sub
das
pop
rclb
sbb
fistl
lcall
addl
xor
pushf
ret
pop
inc
dec
add
mov
inc
test
xor
xchg
ljmp
fidivl
dec
push
jecxz
push
das
insb
arpl
sahf
adc
mov
push
hlt
ljmp
rolb
cld
lret
sub
dec
ret
cld
mov
sub
popf
ret
xchg
das
sub
and
inc
incl
cmp
cmc
movsb
inc
sbb
roll
loop
push
dec
das
sarl
outsl
adc
mov
loope
mov
inc
in
call
loopne
es
movsl
xchg
jb
lret
cmova
ret
jo
std
xor
je
fildl
lods
cmp
test
pushf
mov
out
sub
pop
mov
sub
test
pushf
lcall
push
mov
push
xchg
adc
or
ja
fiaddl
sbb
add
and
test
out
xor
xor
movsl
pushf
adc
xor
dec
sub
pop
lcall
inc
es
push
pop
pop
jle
iret
push
sbbb
push
fwait
sub
scas
jb
push
fadds
enter
push
add
sbb
orb
inc
popa
pop
sub
cmc
jecxz
pop
cmp
rcrb
xor
das
pop
jb
test
push
outsb
mov
lds
pop
jge
std
pop
jns
push
inc
adc
jmp
xchg
sub
loope
cwtl
ja
out
pop
xlat
shl
or
and
pop
in
cmpsb
rorl
ret
pop
roll
scas
mov
scas
jecxz
ja
xor
loopne
xor
xor
pop
test
push
dec
mov
movsb
sub
dec
jo
xchg
or
shrl
push
push
sub
pushf
je
cmp
lods
sub
jg
mov
cltd
mov
mov
xchg
or
mov
sbb
out
jne
lret
sbb
aas
cwtl
lock
out
xor
lods
notb
fucomi
outsb
out
sub
shll
mov
dec
push
loop
out
loope
xchg
enter
lcall
or
dec
std
cltd
inc
mov
xor
inc
ja
leave
out
adc
sbb
mov
or
jmp
aas
enter
push
xchg
adcb
daa
lcall
xchg
insb
ret
filds
jo
wbinvd
lods
mov
roll
cs
and
jg
pop
loopne
aaa
popa
sbb
std
test
mov
fnstsw
outsb
cmp
jecxz
fsubrl
pop
mov
sub
pop
je
fiadds
dec
in
inc
stos
fisubrs
jecxz
out
in
jb
mov
mov
mov
lods
loopne
in
jl
jecxz
pop
out
mov
add
iret
mov
int
hlt
iret
add
or
cmp
sub
push
rcrb
filds
xchg
mov
dec
dec
inc
loop
clc
lds
push
movsb
inc
shl
bnd
push
test
sbb
mov
or
repz
xchg
push
lds
notb
in
stos
in
sbb
shl
push
dec
cmp
dec
add
sbbb
cmp
mov
mov
ss
aad
jl
push
out
or
mov
mov
or
aaa
xchg
and
outsl
and
loop
add
pop
and
sbb
push
mov
lods
scas
outsb
add
in
pop
iret
sub
or
and
dec
sbb
setl
and
cmp
testb
xor
es
loope
cli
add
pop
or
in
sarb
dec
shrl
mov
mov
lret
lds
cmp
repnz
mov
sbb
loope
rorl
pop
testb
daa
hlt
adcb
mov
stos
rcrb
pushf
fsubrs
fwait
push
aam
enter
scas
jns
pusha
mov
shr
jno
add
out
push
mov
sbb
mov
xchg
sbb
das
es
rolb
mov
popl
pop
rclb
pusha
sqrtps
lret
sub
in
xlat
pop
and
lock
push
jle
sbb
int
leave
leave
jg
icebp
xor
or
jb
inc
adcb
cmp
loop
push
int
loope
xchg
push
out
dec
push
xor
jecxz,pt
pop
mov
loope
bound
inc
push
cmc
imul
push
cmpsb
ret
scas
mov
push
shlb
xorb
dec
rol
xor
aad
or
loop
adc
dec
je
adc
pop
das
dec
lcall
and
imul
in
gs
icebp
push
bound
inc
cli
outsl
cli
mov
ret
sbb
and
negb
push
icebp
push
lahf
cli
test
js
clc
xchg
daa
cmp
leave
daa
xchg
mov
mov
mov
xchg
inc
mov
popl
and
out
mov
in
lret
push
xchg
std
mov
mov
fbld
push
dec
icebp
sbb
mov
inc
sbb
loopne
stc
mov
and
orb
js
lret
mov
je
push
xlat
test
add
cltd
ret
mov
into
cmp
dec
add
add
push
addl
xor
or
cwtl
push
test
dec
adc
push
lock
mov
sub
mov
addb
pop
dec
pop
in
dec
add
movsl
movzbl
sub
pop
fwait
mov
jbe
dec
push
dec
cmc
jno
lods
pop
xchg
dec
into
jecxz
div
cmpsl
adc
pop
std
int
mov
ds
movsb
jecxz
fcoml
cmpsl
pop
fnstsw
loope
mov
dec
stos
into
scas
repnz
adc
push
pop
or
pop
jge
orl
inc
andb
cmp
xor
mov
mov
xor
js
inc
add
scas
cmp
iret
lea
lcall
call
repnz
test
xor
mov
sbb
adc
cvtpi2ps
lea
dec
scas
xchg
das
pop
xchg
cmc
out
inc
sbb
cs
xor
xchg
testl
pop
dec
cltd
mov
orl
cs
push
cmc
in
xchg
push
sub
pop
loope
popf
aad
push
dec
push
or
sbb
loope
pop
inc
fmul
pop
fwait
and
sub
sbb
jge
mov
scas
ss
loop
nop
dec
jmp
out
mov
xor
stc
inc
out
cld
adc
or
loope
and
or
inc
sub
sbb
jl
js
xor
xrelease
mov
cld
stos
add
rclb
lods
push
movsl
fldenv
inc
lahf
mov
sbb
and
lahf
lods
add
pop
sti
and
jno
xchg
sbb
sbb
nop
or
sub
pushl
add
xchg
sub
xor
dec
pop
inc
sbb
mov
repz
aad
shrl
mov
add
push
fadds
leave
mov
cmp
xchg
lcall
or
cs
arpl
mov
sub
xor
dec
adc
rolb
or
loope
sbb
insl
push
push
push
lcall
jle
mov
xor
cmpsb
scas
and
push
jne
dec
test
scas
icebp
in
rolb
test
jb
aas
sub
cmp
mov
push
xchg
ret
rolb
cmpxchg
sbb
inc
mov
outsl
adc
test
das
add
ror
push
sbb
clc
scas
sbb
mov
mov
or
aam
mov
leave
xor
sbb
mov
pop
mov
cltd
fnstenv
fisubrs
xor
and
roll
sub
lods
pop
jle
xchg
into
mov
sbb
and
int3
add
jge
mov
loop
ss
pop
ss
out
xor
ja
sbb
in
mov
jns
sbb
out
and
cmc
int3
cld
push
stos
add
ret
in
xor
daa
adc
js
push
add
cs
push
loop
pushf
or
push
add
jge
icebp
cmp
icebp
aaa
in
sbb
lret
pop
pop
xlat
and
push
scas
loop
fidivrl
into
mov
scas
ret
das
bound
dec
pop
fcmove
xor
lods
xchg
repnz
xchg
stos
jg,pt
arpl
lcall
add
inc
xchg
mov
add
push
add
lods
dec
sbb
pop
out
pop
jo
pop
push
incb
inc
add
je
stos
xchg
sbb
push
adcl
inc
mov
int
mov
sbb
fildl
push
jno
xor
data16
daa
shlb
push
cmp
je
mov
in
jnp
mov
das
int
clc
ret
push
fwait
mov
jo
cmpxchg
xchg
outsb
cs
aaa
inc
repnz
push
lods
call
sub
pop
pop
clc
adc
daa
and
cmpsl
daa
subl
push
andl
fdivl
fidivl
push
andb
mov
mov
add
pop
enter
call
dec
mov
fdiv
je
icebp
add
sub
sbb
cmp
call
test
and
cmp
out
stc
xchg
scas
in
xchg
cmpl
les
int3
pop
inc
repnz
mov
fisttpl
adc
sub
andl
jne
mov
jno
push
hlt
das
inc
scas
cmp
shll
jno
nop
inc
pop
rclb
mov
les
stos
push
roll
sub
mov
and
fnsave
das
aad
jnp
sbbl
add
adc
jmp
rcrb
lahf
testl
dec
add
mov
icebp
aas
dec
pop
mov
mov
outsb
push
cld
and
loope
jnp
dec
cli
cmp
jno
lods
jmp
fcomps
dec
mov
int
loope
mov
xor
or
push
adc
sbb
mov
cmc
lock
add
mov
push
inc
sbb
or
cs
lcall
push
pop
cmp
jae
add
xchg
sti
sbb
sub
nop
jg
outsl
fsubl
enter
leave
xchg
mov
push
bound
jmp
mov
orl
sub
dec
popf
push
jo
mov
lret
into
cmp
cld
in
popa
mov
and
and
xor
scas
sbb
push
iret
cmp
push
inc
popl
sbb
sbb
pop
jo
and
jl
fcmovbe
mov
xchg
mov
fcompl
adc
lss
and
pop
pop
jno
lods
movsb
mov
mov
psrad
mov
push
shl
jns
xor
test
jns
fnsave
push
sbb
jns
cmpl
pop
mov
xchg
inc
sbbb
fwait
je
xor
addl
sub
or
or
add
cmp
pop
into
dec
pop
or
addr16
mov
sub
inc
mov
cmp
arpl
rcrb
loop
mov
jl
sbb
shrl
int3
sbbl
mov
stos
imul
and
mov
loope
pop
or
mov
sub
lahf
mulb
fisubl
std
nop
inc
pop
sbb
sub
cld
jg
sbb
xchg
adc
cvtpi2ps
add
loop
insl
cs
out
sbb
xor
clc
xchg
xchg
pop
pop
out
scas
add
jne
out
js
jb
and
push
sti
pushf
ss
lcall
mov
add
arpl
mov
jge
ret
mov
mov
mov
sub
int
or
and
xor
js
dec
ds
xor
xchg
push
cmp
aaa
movsl
mov
dec
popf
fisubs
cs
loopne
or
notl
sub
dec
sbb
sbb
lods
dec
fistl
orl
les
and
fcomps
sbb
cmp
insb
mov
sbb
jmp
sub
gs
test
bound
sbb
sbb
mov
sub
test
jp
xchg
cwtl
cltd
mov
and
xor
cltd
mov
pop
fimull
out
je
mov
and
and
aad
leave
and
ljmp
jp
jg
pop
insb
std
add
or
stos
pop
and
int3
jge
hlt
sbb
sbb
out
mov
xor
mov
into
insb
add
adc
jb
dec
jg
cmpsb
xchg
test
iret
daa
sub
dec
sub
push
cmc
sub
ficoms
dec
sbb
test
movsl
loop
out
loope
jp
mov
dec
add
mov
fwait
cwtl
dec
scas
pusha
add
pushf
jns
push
pop
jecxz
sub
add
lcall
pop
adc
outsl
ja
es
sbbl
cmpsl
and
orb
adc
mov
in
mov
cmpsb
xchg
jmp
cmpsb
out
xchg
je
imul
and
jge,pn
out
inc
xchg
push
pop
loop
je
and
dec
or
and
repz
xor
dec
das
jle
jge
fdivl
pusha
add
and
inc
cmpsb
adc
jo
xchg
and
jmp
add
repz
inc
push
adc
lds
scas
jp
pop
enter
push
cmpl
call
sbb
push
cli
xchg
mov
icebp
inc
xchg
loop
add
mov
fs
ror
mov
jmp
cmp
or
inc
push
xor
mov
xorb
int3
sarl
jle
and
cs
repz
sub
sub
adc
in
call
das
jecxz
inc
push
mov
cmpsl
and
dec
push
mov
mov
jno
inc
mov
aam
int3
mov
xchg
loop
pop
mov
xchg
fistps
or
or
xlat
pop
or
std
jmp
push
lcall
push
or
ret
push
pop
cmc
mov
add
stc
jge
mov
lods
push
out
sub
xor
jg
cmp
and
inc
mov
mov
data16
insb
add
jle
popf
push
mov
adc
mov
mov
iret
fucom
enter
pop
sti
pop
roll
addr16
sub
xlat
fwait
xchg
icebp
in
lret
lahf
pop
inc
andb
jl
or
and
rorb
sub
aaa
test
mov
sbb
add
push
hlt
mov
out
inc
sbb
xchg
fisubrs
adc
pop
add
orl
cmc
push
aam
pusha
mov
adc
inc
stos
push
addr16
pushf
dec
ds
fucom
sub
cs
btr
cltd
mov
mov
push
lods
push
xchg
or
sbb
inc
loopne
xchg
cmpsb
add
in
insb
movsl
jl
add
pop
scas
fcoml
nop
stc
sub
or
dec
add
add
rolb
sbb
testb
fisubs
addr16
fnstsw
inc
out
mov
ds
cmp
in
sub
sub
je
sbb
mov
push
inc
inc
add
xchg
pop
pop
pop
out
sub
mov
mov
jne
sub
mov
bound
push
adc
pop
int
mov
dec
pop
mov
dec
sbb
mov
xchg
cmp
dec
pop
jmp
repnz
jnp
cmp
mov
loop
push
inc
mov
cmp
and
inc
lret
xlat
inc
pop
inc
insb
loope
adc
mov
push
enter
das
repz
test
or
mov
sbb
pop
push
add
ret
scas
bound
mov
cwtl
aas
dec
es
and
xor
flds
cli
mov
adc
add
pop
orb
pop
dec
scas
lret
sbb
lods
cmpl
pop
aad
or
jbe
add
pop
into
push
jmp
pop
mov
xor
je
xchg
sub
sbb
inc
mov
into
outsl
mov
cmpb
lock
movsl
push
cltd
iret
dec
mull
cwtl
mov
mov
dec
adc
pop
fisubs
repnz
pop
dec
arpl
int
sub
inc
push
xchg
mov
mov
sub
ficoms
sbb
sbb
sub
jge
xor
loop
nop
cmpsl
icebp
subl
and
test
rcrb
popf
fcoms
pop
out
adc
push
addl
jg
ds
loop
test
loopne
out
mov
or
test
pop
mov
sbb
icebp
or
mov
dec
loope
push
xchg
out
ss
sbb
add
pop
or
sub
pusha
xchg
lods
divb
pop
and
cmpsl
pop
mov
loopne
lea
push
std
and
cmc
mov
and
push
push
push
push
push
xchg
pop
cmp
lahf
pusha
mov
fwait
popf
je
lods
and
addl
push
cwtl
inc
fwait
out
sbb
xor
push
dec
lret
or
jge
mov
loop
aaa
popa
scas
cmpsb
push
rclb
mov
or
jg
push
dec
ret
xor
es
inc
js
iret
pushf
je
out
xchg
xchg
adc
sbb
movsl
mov
mov
xorb
shl
ret
dec
and
inc
and
ret
inc
adc
sbbl
fstl
dec
mov
mov
fwait
sbb
fsubrs
fnstcw
stos
mov
sbb
fidivrl
push
hlt
inc
scas
adc
iret
lret
out
pop
inc
jno
jbe
jnp
imul
scas
repnz
inc
push
mov
add
push
add
imull
sbb
popa
add
dec
pop
subb
pop
bound
dec
dec
mov
cmc
out
movsl
out
push
dec
add
jmp
and
jmp
fimull
das
jg
loope
or
sub
adc
dec
xchg
push
orl
call
loope
sub
sub
adc
xchg
and
es
int
or
lcall
mov
jmp
push
mov
pop
fidivs
cmpsb
mov
leave
scas
dec
cmp
or
xor
mov
ret
lahf
stc
or
and
sbb
add
ss
push
mov
iret
js
pop
and
push
loop
mov
push
movl
mov
lods
sbb
repz
xor
or
rcrb
cmp
sbb
lea
xor
add
sbb
stos
mov
sub
xor
push
pop
insb
cmp
push
popf
mov
or
mov
pop
add
push
lret
hlt
test
mov
nop
cmp
and
jecxz
pop
or
loop
cwtl
scas
into
addr16
pop
in
sub
sbb
push
jecxz
inc
push
gs
sbb
jbe
fdivr
loope
stc
xchg
and
xchg
and
cmp
outsl
push
adc
dec
sbb
push
call
mov
stos
adc
push
mov
je
mov
add
ljmp
daa
jle
ja
xor
test
out
ds
push
cmp
pop
out
lea
mov
arpl
std
das
idivb
dec
repz
inc
adc
in
faddl
ss
insb
loopne
sbb
cld
pop
adc
xorl
std
push
pop
xchg
and
xchg
mov
jmp
jle
ret
in
xor
inc
fcmovnb
les
xchg
iret
sbb
mov
testl
cmp
or
aam
sub
pop
add
and
sub
addb
roll
pusha
shll
dec
ficoml
lahf
imul
out
push
outsb
cld
mov
pop
pusha
into
xchg
xchg
and
adc
push
inc
mov
addl
push
cmp
nop
out
movsb
test
sbb
jl
lods
sti
inc
cmp
push
push
or
xchg
jge
inc
stos
lods
jmp
xchg
adc
repnz
jg
mov
popf
lods
xchg
mov
add
sbb
subl
pop
mov
div
adcl
repnz
push
aas
push
add
or
les
and
addr16
push
push
sbb
lcall
je
popa
jle
das
add
push
jnp
lods
aam
pushf
inc
notb
sub
mov
adc
dec
dec
adc
xlat
dec
mov
mov
movsl
fisubl
xchg
popf
dec
jp
popa
popa
iret
pop
loopne
sub
and
pop
dec
repnz
out
clc
flds
int3
scas
in
xchg
jno
sbb
push
push
pop
sub
pop
pop
push
pop
jno
mov
mov
sbb
push
dec
pop
inc
inc
fmul
icebp
push
push
push
leave
call
adc
mov
rcr
test
jae
das
or
adc
je
xchg
cli
loope
data16
bound
daa
outsb
push
mov
push
pop
pop
inc
stos
das
arpl
aad
pushf
test
push
sbb
call
popa
inc
cs
in
xor
xor
loope
aam
test
mov
fcompl
div
das
fldenv
mov
mov
xchg
cli
sub
enter
std
out
inc
fidivrs
cltd
pop
sub
popaw
mov
mov
push
add
mov
repz
or
out
dec
pop
mov
jle
sbb
rorl
and
rcrb
ret
scas
xlat
mov
test
subb
loop
in
mov
sub
inc
mov
lret
push
pop
sahf
out
divl
scas
push
or
ljmp
pop
std
sti
pushl
hlt
jnp
jne
mov
or
mov
dec
fwait
cmp
dec
pop
mov
scas
jle
lds
sub
jbe
testl
cltd
push
in
sarl
cld
lea
ret
and
loop
shlb
mov
out
leave
dec
inc
repnz
inc
es
mov
lret
inc
pop
je
scas
or
xchg
add
int
vcvtdq2ps
and
xchg
mov
cmc
popf
and
mov
mov
xchg
cmpsb
aad
push
mov
sti
mov
lahf
jno
sub
or
out
div
push
in
inc
and
stos
push
lahf
or
xchg
and
or
cmp
das
pop
mov
adc
sbb
je
ficoml
and
sub
and
mov
push
push
cmp
hlt
sbbb
mov
sbb
cmp
stos
dec
and
ja
jne
inc
insb
mov
dec
jle
fnstcw
jg
iret
repnz
outsb
pop
mov
pop
dec
bound
sbb
outsb
adc
mov
sbb
mov
fistpl
push
jecxz
mov
popf
mov
sbb
sti
shrb
mov
jb
popf
scas
jmp
fcoml
test
fisttpl
push
pushf
mov
inc
shll
adc
add
push
cmp
mov
test
pop
xlat
popl
mov
inc
bnd
imul
mov
lds
mov
inc
and
mov
adc
cmp
lea
icebp
and
cmpsl
jmp
or
and
cmpl
sahf
aam
xchg
lret
jmp
idiv
sbb
push
mov
shl
mov
in
das
jg
mov
add
dec
xchg
jle
xchg
lods
je
das
fisubs
orl
es
and
mov
sub
xchg
mov
sub
adc
rorl
or
dec
and
sub
push
fstps
mov
and
jg
ss
call
jb
dec
pop
mov
jb
adc
sbb
mov
xchg
xchg
cld
or
xchg
fimuls
xchg
jecxz
mov
lahf
dec
push
push
imul
jg
adc
fwait
push
sbb
mov
inc
sub
loope
mov
popa
loop
js
and
mov
inc
jmp
or
inc
pop
push
and
shl
jl
push
popa
pushf
mov
lahf
popa
lods
mov
test
outsl
xchg
inc
inc
loopne
push
fwait
mov
pusha
dec
cltd
mov
sbb
xchg
mov
adc
addb
iret
mov
scas
int
sbb
cmp
mov
push
stos
sub
adc
adc
test
pop
mov
mov
jg
add
push
andl
xor
mov
xchg
jbe
scas
jle
test
mov
les
lcall
imul
int
jl
lds
add
xchg
or
sahf
jle
stos
test
sub
cs
xchg
addr16
push
lods
and
and
stos
push
negl
loop
cs
roll
mov
rcrl
and
dec
push
xchg
push
jecxz
sub
adc
or
push
inc
fimull
inc
mov
jmp
lods
push
loop
sub
push
push
jmp
sub
out
aas
stos
rolb
sub
mov
insb
and
fstpt
out
mov
jb
scas
sbb
adc
dec
pop
ret
scas
push
inc
mov
jg
lods
das
mov
inc
cmpsb
xchg
push
lahf
push
xorl
and
fcmovnbe
ret
aas
and
lods
rolb
lahf
arpl
fisubl
sbb
cwtl
shl
push
and
or
and
sbb
inc
imul
add
mov
dec
jle
jmp
adc
std
fidivs
jnp
or
pop
xorl
fisubrs
jmp
pop
nop
jle
pop
or
dec
sub
inc
pusha
int
push
ret
jge
popf
cmp
dec
and
sbb
push
push
sub
or
pop
repnz
sti
mov
stos
stos
pop
fldcw
test
sub
lock
push
imul
xor
icebp
clc
adc
inc
stos
out
mov
mov
and
ret
aam
outsb
stos
in
rcrb
movsl
roll
mov
dec
cmp
inc
ljmp
repnz
ret
pushf
and
jo
mov
lahf
xchg
gs
call
pop
roll
dec
push
mov
xor
ss
outsb
addr16
loope
outsl
dec
jno
outsb
dec
jbe
out
jp
pop
out
or
add
imul
xchg
dec
pop
xor
push
xchg
orl
push
or
mov
popl
sub
sbb
jecxz
jmp
dec
testl
es
xchg
pop
mov
cmp
push
mov
rcr
lods
fnstenv
repnz
jae
push
add
aas
pop
mov
cli
mull
xchg
push
push
dec
mov
negb
and
icebp
fsubr
push
push
push
cmp
mov
je
shlb
std
xor
adc
sub
push
pop
and
push
mov
pop
cmp
movsl
fwait
dec
xor
pop
jno
bound
xor
and
ja
inc
and
ret
filds
mov
cmp
add
sub
rol
cmp
jns
test
xor
add
leave
fsubl
dec
mov
mov
and
in
sbb
jbe
and
xor
bnd
mov
and
xor
enter
pop
jle
imul
ret
or
and
push
iretw
xchg
movsb
jb
or
ficomps
pop
pushf
mov
push
mov
add
je
jnp
adc
sti
std
aad
xor
ja
insb
mov
mov
daa
jbe
notb
add
push
push
pop
ljmp
or
adc
push
hlt
mov
and
jbe
popa
lcall
add
push
mov
mov
sub
cs
in
pop
adc
stos
lods
subb
or
out
fmull
popa
std
xchg
jecxz
pop
jo
jg
inc
mov
mov
je
dec
mov
sub
or
or
push
xor
mov
sub
arpl
lock
cmp
daa
aaa
cli
pop
je
cmp
jb
outsb
and
pop
push
leave
xor
fs
inc
imul
and
movsb
cmp
push
push
mov
sar
xor
gs
add
inc
push
add
popf
pop
cwtl
push
jg
cld
out
xor
jg
sub
cmp
ds
push
bnd
flds
mov
cmp
adc
xchg
dec
sbb
dec
incl
imul
dec
sbb
mov
xchg
pop
jmp
adc
inc
xor
adc
into
dec
add
add
pop
inc
xor
sub
mov
or
add
pop
adc
imul
xchg
or
dec
jle
imul
mov
jl
mov
cmp
pop
jo
push
push
dec
jp
push
jnp
sub
adc
pop
daa
push
lods
add
ret
fstpl
adc
cmp
subl
orb
xlat
rcrl
dec
gs
out
sbb
cmp
dec
push
xchg
mov
cmp
add
insb
jo
or
sub
dec
pop
and
cmp
sub
arpl
xchg
int3
add
mov
sbb
ror
cmc
sbb
add
cmp
cwtl
add
rol
add
sbb
cmp
jge
mov
add
pop
xor
xor
push
add
sbb
inc
shlb
xchg
xchg
sub
jae
ljmp
sub
and
cli
adc
imul
fidivrs
or
sbb
loop
pusha
sub
cmp
xchg
lret
jne
iret
pop
sahf
hlt
cmp
sbb
sub
pop
sbb
xchg
loop
iret
inc
aam
lock
and
popa
cmp
jge
jp
cmp
jnp
or
leave
ret
fisubrs
push
add
and
cmp
jge
popl
lea
push
int3
xchg
sbb
pop
adc
adc
sub
inc
rcll
mov
or
add
push
xor
dec
mov
stos
dec
xchg
subb
dec
adc
cmp
sbb
dec
mov
mov
xchg
or
xchg
sub
adc
xor
dec
add
xchg
pushf
sub
pop
mov
and
into
inc
out
add
leave
dec
or
adc
es
sub
add
push
pop
sbb
xchg
add
adc
xchg
and
add
sbb
or
and
cmp
jae
xchg
insb
fcmovbe
rolb
dec
out
cmp
jecxz
or
xchg
mov
mov
int3
subb
mov
in
sbb
cmp
cmp
push
add
push
lahf
mov
dec
xor
pop
loopne
mov
xor
xchg
sbb
mov
xor
into
sti
cmpsl
ret
cli
popa
popa
jg
std
sbb
jl
xorb
lods
sbb
xchg
lret
loop
add
rorl
fildll
pop
jg
push
cld
loope
fcmove
loopne
hlt
or
push
pop
sbbl
sbb
insb
out
add
jmp
push
xchg
jbe
enter
cwtl
ret
aad
push
pusha
sysret
loop
add
cmc
out
outsb
xchg
adc
xchg
insb
stos
xchg
jg
scas
push
lret
mov
xor
adcl
lahf
mov
inc
out
mov
xor
xor
scas
ret
inc
sti
lret
insl
in
in
mov
push
stos
add
lret
int
add
push
xchg
comiss
cmp
xor
xor
push
shr
jecxz
addr16
popf
shl
addr16
cwtl
push
dec
sbb
orb
dec
jg
inc
popf
incl
sbb
in
pop
xor
clc
loop
shr
iret
sbb
push
mov
addr16
loop
xchg
sub
dec
push
push
lock
cmp
insb
add
fldenv
pop
popl
xchg
lds
loop
pop
aam
mov
out
jle
mov
cltd
xchg
loope
in
add
push
cmp
loope
sbbl
imul
mov
fdivp
mov
jp
sub
lahf
je
dec
mov
daa
jge
or
or
scas
js
and
divb
dec
jecxz
repnz
sub
cmp
fisttpl
test
push
sub
sbb
mov
dec
sub
repnz
pushf
into
adc
pop
pop
mov
sub
lea
mov
pop
out
jg
and
mov
push
add
repnz
es
dec
dec
idivb
sbb
movsb
js
mov
daa
push
xorl
sarl
mov
mov
jne
das
push
or
lahf
out
mov
inc
mov
in
jno
pusha
push
push
loope
outsl
xchg
dec
or
jbe
mov
inc
dec
jecxz
test
sbb
push
inc
mov
out
movb
add
xchg
imull
xchg
repz
enter
inc
or
jne,pn
mov
mov
cs
mov
in
xchg
mov
sbb
jae
cmp
jmp
sbb
xchg
xlat
sbb
imul
push
fisubs
fmulp
outsb
sbb
inc
out
or
inc
jae
std
xor
in
mov
push
dec
pusha
leave
sub
push
add
push
pop
dec
inc
adc
fisttpll
pop
fimuls
and
aad
inc
in
mov
das
pop
popa
adc
sub
aaa
jp
push
cmc
jns
hlt
xchg
aam
fistpl
pop
jge
jp
add
xchg
repnz
lahf
lea
icebp
mov
jecxz
hlt
mov
ds
and
xor
test
hlt
repz
inc
je
nop
in
push
xor
mov
dec
loop,pt
cltd
push
add
push
pop
jne
jmp
data16
jb
push
mov
cwtl
cwtl
push
dec
push
jmp
sbb
fadds
inc
inc
sbb
ja
enter
testl
lcall
inc
xchg
xor
rorl
inc
add
add
push
aam
fisubl
push
mov
push
out
or
mov
mov
dec
fidivrs
mov
and
mov
xorl
or
int
mov
test
cmp
sar
dec
xchg
mov
xchg
fwait
ficompl
daa
cmp
bound
or
push
testb
xchg
dec
ret
inc
inc
xor
add
notl
lret
pusha
add
xchg
and
push
cs
mov
pop
nop
push
jae
lahf
ret
push
mov
fidivs
and
mov
fcmovu
aad
lret
or
ja
xor
cmpsl
mov
and
mov
cli
dec
push
imul
call
jle
dec
xchg
ljmp
loope
outsb
xor
mov
jle
ja
call
idivb
subb
lods
in
jp
insb
jge
inc
cltd
sub
sbb
and
adc
push
mov
cmp
dec
jg
push
sub
std
rcrb
icebp
xchg
int
mov
lea
lahf
fildll
divb
xchg
jmp
fstpt
push
inc
adc
leave
inc
pop
icebp
push
xchg
aad
mov
popa
dec
xor
test
daa
pop
jae
sub
xchg
cltd
fsubl
nop
cmp
scas
repnz
sub
xor
push
mov
xor
mov
or
test
or
push
sbb
sbb
pop
data16
dec
cwtl
sbb
inc
inc
mov
dec
adc
clc
push
push
push
mov
or
sarb
cs
sbb
and
dec
jp
sbb
jle
rorb
push
popf
add
sbb
loope
mov
dec
inc
or
loope
push
repz
lahf
inc
movsl
subl
mov
mov
and
push
lcall
movsl
and
add
mov
mov
jp
xchg
cltd
xor
pop
adc
cmpsl
lcall
js
fiadds
push
jg
sahf
ss
repz
mov
repz
adc
dec
jl
push
cmp
daa
add
xor
cmp
adc
into
pop
adc
hlt
fwait
rorb
pop
mov
and
enter
pop
es
jg
popa
cmp
sub
xchg
js
ret
mov
add
pop
jae
or
pop
add
mov
or
bound
notb
and
jno
out
pop
repz
sub
inc
aaa
pusha
mov
outsl
push
pop
movsb
inc
test
sub
loop
and
dec
repnz
fcmovnu
adc
pusha
mov
outsb
popa
fs
sub
aaa
push
fisubl
jp
inc
imul
stos
shll
mov
cwtl
movsl
cld
outsb
shll
dec
gs
shll
xchg
inc
daa
sub
testb
stos
aaa
mov
dec
out
sbb
sbb
mov
jo
aaa
add
jbe
inc
pop
loope
xor
sbb
mov
pop
outsl
cli
imul
stc
fs
xchg
rcrl
mov
xor
or
sub
push
sbb
dec
sub
fcoms
push
and
and
sub
and
pop
lahf
out
adc
ret
es
test
inc
shr
std
sbb
adc
and
pusha
push
jne
sbb
cltd
sbb
loopne
adc
div
inc
adc
push
and
push
add
outsl
adc
movsl
ret
mov
pusha
lods
out
dec
inc
jne
sub
aaa
outsb
inc
into
cwtl
std
mov
hlt
sbb
ret
loop
incb
dec
mov
inc
fmulp
xor
lods
gs
repnz
pop
xchg
xchg
cmp
mov
and
mov
mov
add
push
adc
jg
mov
add
fistpl
pop
testl
adc
push
test
mov
push
ret
es
hlt
idivl
lea
xchg
aam
xchg
lods
aad
daa
stos
shrb
mov
push
pop
add
filds
mov
pop
fisubrs
pop
dec
mov
ret
jo
mov
int3
and
jp
out
lods
mov
stos
ds
dec
jl
cli
mov
mul
das
jg
nop
dec
add
cmp
push
mov
insb
xor
outsb
ret
push
hlt
je
pop
pop
rcl
cmp
and
cmp
fnstenv
sbb
pop
pop
push
aam
test
push
mov
sbbl
pusha
xchg
inc
dec
or
enter
jns
pusha
addr16
enter
or
outsl
sbb
add
mov
loope
cmp
xchg
push
mov
test
and
outsb
cmc
xor
movsb
lock
pop
popl
ljmp
ret
rcr
fbld
ja
cwtl
cmp
jb
sbb
jns
add
jg
mov
sub
testl
jmp
sti
js
add
sbb
inc
mov
sbb
push
subb
jbe
and
lahf
into
inc
insb
add
out
pop
sti
bound
popa
rolb
pop
jl
out
les
push
loop
inc
shll
cmpsl
scas
daa
mov
add
jnp
cmp
loop
mov
fnstsw
pop
std
jns
xorb
es
add
sbb
outsl
push
mov
lds
ljmp
mov
add
in
cltd
push
lds
stc
inc
pop
aas
xchg
xor
rcrb
mov
jbe
lahf
test
int
mov
inc
cmpsb
mov
and
adc
in
pop
inc
mov
sub
ficoml
add
adc
pop
jge
add
and
out
push
pusha
cs
outsb
push
push
cmpsb
pop
cmpsb
jmp
mov
add
xchg
movsl
xchg
inc
sub
jl
mov
xchg
mov
jmp
leave
sbb
jl
sub
rorl
fists
mov
cmp
dec
lds
mov
outsb
mov
test
jnp
imul
testl
in
adc
inc
sbb
out
sub
fisubrl
push
loop
xor
ds
pop
cmp
mov
inc
xor
je
sbbb
imull
adc
test
test
jge
repz
cmp
lea
fstpl
cmp
std
or
jle
dec
int
xchg
jbe
ret
fbld
aad
inc
in
in
testl
pop
mov
lock
ja
jns
jg
xor
jle
lock
out
xchg
xor
ds
mov
loopne
xchg
lods
jle
icebp
mov
in
scas
add
xor
mov
inc
pop
inc
xchg
dec
and
xchg
mov
mov
pop
mov
pop
imul
sahf
aam
mov
sbb
sub
pushf
gs
mov
xor
sbb
das
outsl
sti
aad
hlt
rolb
jo
push
xchg
push
xor
enter
arpl
sub
dec
push
jne
add
mov
loop
adc
sbb
mov
mov
icebp
push
push
bound
loop
inc
cmc
out
pop
add
mov
loope
mov
push
das
push
iret
icebp
popf
xor
sbb
jg
pop
add
adc
push
dec
cmp
inc
or
push
cwtl
sbbb
mov
jp
inc
cli
mov
repnz
push
or
roll
test
rolb
sub
mov
xlat
pop
hlt
insb
rcrb
or
ljmp
ret
adc
fnstenv
mov
jb
dec
aad
dec
xchg
jp
mov
sbb
lret
pusha
lock
pop
mov
mov
ret
inc
xchg
or
push
and
lret
and
jmp
pop
aad
shlb
lcall
mov
dec
jecxz
sub
inc
mov
pushf
mov
xchg
or
insb
adc
jbe
mov
pusha
push
mov
jbe
into
orl
in
push
stos
test
clc
inc
lret
mov
pop
and
loop
mov
pushf
rcll
mov
pop
testl
and
pushf
xor
in
cltd
push
movsl
inc
ss
je
scas
fidivs
or
and
sahf
mov
adcl
ds
loope
dec
loope
cwtl
movsl
jmp
adc
add
dec
push
and
mov
inc
xchg
test
repnz
in
divb
inc
stc
adc
rclb
sbb
sub
inc
cld
xor
xchg
loope
sbb
dec
loope
and
pusha
mov
testb
sti
pop
and
stos
jno
pop
hlt
xchg
and
icebp
push
in
push
push
pop
scas
and
mov
pop
scas
or
call
or
fadds
mov
or
in
jbe
int
jecxz
out
xchg
pop
push
andb
mov
cwtl
pop
out
and
int
iret
mov
mov
mov
jns
xchg
inc
push
fwait
push
xchg
cs
movsl
ret
xorl
lret
fisubs
aaa
insb
int3
jle
daa
sbb
push
xor
mov
daa
mov
outsl
cmp
scas
addr16
pop
inc
clc
icebp
or
add
xor
pop
xor
shll
cmp
and
inc
movsl
clc
sbb
int3
ja
sbb
xor
int3
push
mov
sbb
jle
push
pop
pop
add
jmp
dec
std
lock
push
add
xor
jg
mov
jge
xor
rolb
int
shr
jns
fistl
adc
outsl
jge
adc
mov
push
stc
mov
cmpl
pop
pushf
lret
mov
sub
shrl
sbb
cli
push
daa
call
xchg
ja
out
cmp
rol
mov
aaa
cmpb
cwtl
sbb
jmp
sti
inc
and
jns
sub
add
sbbl
sbbl
inc
mov
mov
lcall
je
mov
push
int3
rcll
in
js
sbb
out
sub
push
pop
repz
sub
stos
decb
aaa
add
les
inc
adc
leave
jo
or
mov
shl
test
mov
sub
sub
inc
cltd
sahf
inc
dec
scas
fiadds
and
mov
loope
pop
mov
adc
mov
das
std
shlb
push
dec
jae,pt
shrb
ljmp
pop
pop
push
sbb
cwtl
mov
fs
dec
mov
adc
mov
pop
outsl
arpl
mov
mov
sbb
aas
lcall
dec
cmp
dec
jl
into
jmp
je
cmp
sbb
sbb
sub
loop
xchg
pop
jle
pop
fstp
jnp
xor
je
xlat
inc
push
dec
jnp
add
push
aaa
mov
das
push
cmc
sub
lock
jp
sbb
cli
sub
mov
cli
dec
rolb
push
inc
cli
les
ret
lds
cmp
mov
scas
mov
inc
pop
mov
push
pop
inc
push
mov
in
dec
xchg
dec
lods
sub
xchg
outsb
subl
add
or
aam
mov
popf
aam
lods
shl
loope
movsl
int3
dec
hlt
inc
add
sub
dec
inc
mov
test
adc
pushf
movsl
add
push
add
inc
xchg
and
testl
subb
das
xlat
dec
mov
mulb
in
ret
pop
mov
mov
ja
mov
mov
mov
mov
sbb
cmpsb
and
cmp
add
sub
aaa
mov
xorb
dec
jo
std
jno
loop
mov
test
pop
ret
sub
loop
lcall
dec
mov
imul
pop
arpl
inc
xor
in
bound
xchg
fwait
dec
test
xor
rcll
mov
insl
ficoms
mov
xchg
das
sbb
add
out
cwtl
fucomi
fsubp
or
mov
mov
into
out
test
icebp
aas
xchg
mov
mov
pop
cmp
sub
sub
sbb
xchg
pop
dec
cmpsl
mov
sub
and
jo
popf
inc
ljmp
std
sbb
cwtl
cmc
sahf
icebp
push
inc
outsb
add
lods
pop
cli
enter
push
mov
cmpsl
dec
push
psrlw
or
mov
adc
xor
mov
inc
out
lahf
leave
movsl
scas
and
jnp
jb
jnp
add
lock
xor
outsl
ror
and
sbb
sub
dec
push
mov
daa
dec
pop
cltd
jmp
pop
and
sbb
jns
mov
nop
dec
fsts
in
add
test
fnstsw
push
inc
xlat
idivb
push
jnp
dec
cld
dec
sbb
xor
movsl
pop
mov
inc
jb
ret
add
pop
push
sahf
fimuls
je
jne
xchg
add
jmp
jp
mov
push
es
leave
dec
rcrb
cli
dec
inc
fwait
dec
dec
cmp
aaa
dec
subb
xor
pop
pop
outsb
xchg
push
fwait
and
lea
andb
push
jp
push
inc
jmp
inc
repnz
push
insb
xor
test
idivl
push
sbb
pop
arpl
loope
push
into
sub
pop
sub
inc
pop
push
xor
inc
cmp
es
sbbb
xchg
mov
inc
dec
stos
cmp
es
mov
sbb
xor
daa
jnp
mulb
mov
or
lods
and
jg
sahf
sbb
xchg
xor
add
mov
shrl
xchg
pop
dec
jge,pt
push
xor
cwtl
bound
add
mov
out
lods
xor
mov
loope,pn
clc
jecxz
pusha
dec
filds
pop
add
pop
pop
loopne
and
xchg
add
sbb
les
cwtl
dec
add
or
cmp
and
fdiv
int
leave
inc
out
sub
call
pop
test
mov
jb
inc
adc
test
add
ljmp
and
rcrb
iret
es
addl
lret
cmc
imul
xor
or
fstpl
add
jge
pop
xchg
movaps
mov
lea
loope
mov
push
sbb
mov
addb
cmc
cwtl
outsl
pop
mov
push
out
repnz
jne
inc
jp
scas
jle
xchg
insb
xchg
subl
xchg
cmp
adc
fistl
pusha
xor
ds
hlt
mov
xor
lar
fcompl
jno
shlb
jo
mov
push
pop
fwait
or
jbe
mov
insl
push
mov
outsb
dec
lcall
push
pop
insl
xor
test
cmp
sbb
push
in
mov
dec
jo
sub
popa
sbb
adc
mov
jbe
fmull
and
rclb
xor
inc
aaa
sbb
outsb
aam
jg
sbb
pop
lods
pop
clc
mov
push
mov
inc
into
lret
ja
push
xlat
sahf
fs
inc
fsubs
outsl
xchg
inc
movsl
divl
push
aad
rolb
jmp
je
dec
inc
adc
lcall
mov
dec
xchg
ret
xlat
cmpl
mov
cltd
push
loopne
jl
test
cmpsb
inc
in
push
cmc
pop
push
movsb
inc
out
cwtl
icebp
mov
loop
pop
popf
nop
jmp
push
or
sbb
xchg
or
push
out
mov
jo
stos
insl
dec
std
loop
push
xchg
and
nop
xchg
and
in
add
sub
pop
mov
out
rcl
cmp
adcb
sub
jle
adcl
push
xorl
int3
inc
push
cmc
fidivrs
mov
movsb
fs
dec
mov
or
mov
mov
loope
fsubrs
inc
push
add
imul
and
mov
inc
mov
addb
inc
iret
inc
jecxz
in
dec
jno
pop
jmp
clc
or
movsb
stc
in
sar
sub
sti
cmpsb
adc
ds
cld
sub
imul
repnz
mov
daa
lahf
aam
mov
fldcw
and
out
cmp
inc
int
push
jg
sub
jl
jge
call
aaa
inc
dec
pop
dec
ss
das
stc
neg
lahf
outsl
mov
push
in
mov
out
cmc
push
inc
pop
fidivrl
xchg
sbb
pop
cmp
push
cwtl
idivl
add
mov
std
push
pop
inc
in
xor
cmpl
outsb
inc
xlat
push
mov
add
cs
stos
popf
inc
xor
pusha
and
cmp
mov
xchg
xchg
jp
sub
push
add
dec
std
loope
pusha
lds
data16
loop
push
sbb
cmp
sbb
insl
cmpsl
push
fdivl
jg
and
pop
sbb
loop
lods
inc
lods
test
sbb
lcall
xchg
jp
subl
in
std
inc
cwtl
xor
adc
enter
mov
push
jb
mov
dec
loop
cli
int3
cmp
pop
inc
nop
pop
pop
sub
repz
das
hlt
xchg
adc
xchg
push
xchg
sar
pop
push
sub
dec
sar
dec
scas
jecxz
pop
sub
fidivrl
lret
aad
out
aad
imul
loop
jno
test
add
enter
enter
cmp
pop
adc
clc
push
or
jg
out
imul
addb
ds
mov
out
lahf
mov
pop
loopne
pop
push
fiaddl
sbb
xor
loop
add
stc
outsl
inc
xor
dec
mov
loopne
xchg
jno
out
cli
mov
rolb
into
push
cmpsl
fistps
addb
insl
push
sbb
xor
mov
sbbl
xchg
mov
push
loop
xchg
add
in
pop
testb
cmpsb
push
test
cmp
test
dec
fisttpll
psrlq
mov
fdivr
cmpsl
sti
jne
pop
xchg
push
pop
daa
jg
in
dec
cmpsb
jno
sub
loope
ljmp
das
jge
sbb
xchg
adc
fucomi
shrb
xchg
ret
testb
push
repnz
dec
negb
pop
dec
xlat
imul
add
cmc
xor
push
out
pop
mov
cs
push
push
push
orl
mov
imul
jmp
mov
inc
dec
pop
ja
mov
loop
sbb
jle
mov
ljmp
sbb
fdivrs
sbb
dec
pop
add
popa
xchg
arpl
cmc
xchg
sub
cwtl
gs
cld
mov
jns
fs
jns
movsb
push
and
mov
and
je
pop
push
mov
repnz
out
cld
xor
and
xor
push
icebp
stos
cmp
and
icebp
cmp
pusha
jo
pop
out
scas
addr16
stc
movsb
outsb
add
mov
cmpsb
outsb
fs
out
lret
xor
dec
mov
push
mov
outsl
int
xor
push
pop
frstor
ds
mov
cmc
loop
adc
jg
pushf
repz
ja
dec
out
or
add
mov
aas
jo
rcll
sbb
popf
loopne
dec
and
push
in
xor
or
inc
dec
mov
ficompl
xor
sbb
testb
inc
cmpl
push
inc
jecxz
out
fmull
cmp
idivb
pusha
push
or
dec
xchg
cmp
sbb
jo
dec
call
sub
sbb
push
ficomps
push
ja
call
mov
fnstenv
das
pop
pop
xchg
lods
ficomps
adc
jne
fdivrs
ljmp
clc
adc
mov
add
loop
sub
jae
mov
cmp
sub
or
mov
add
inc
enter
sbb
add
jp
int
jbe
loop
into
shrb
mov
inc
loop
adc
shl
ljmp
push
rorb
jmp
mov
and
dec
add
fisubl
pushf
pop
jbe
add
repnz
popf
mov
test
xor
xlat
cmp
jo
cmpsl
mov
clc
inc
inc
std
rorl
dec
cltd
mov
je
jge
ja
xorl
stos
cmp
cli
rolb
or
xor
pop
mov
jmp
mov
push
or
aad
xchg
sets
push
daa
push
lahf
outsl
cld
ja
pop
jl
imul
mov
dec
sub
repnz
dec
jp
mov
fldl
adc
lea
cmp
add
cmp
inc
frndint
mov
mov
mov
sbb
je
clc
xchg
mov
scas
call
pop
out
mov
imul
hlt
xchg
mov
fmul
test
adc
lcall
inc
scas
xchg
jo
test
xor
and
stos
inc
mov
sbb
popa
adc
and
sbb
pop
sbb
and
ds
push
loop
scas
ret
cld
and
mov
inc
shrb
inc
push
mov
or
loopne
fwait
mov
pop
stos
push
add
pushf
mov
sbb
inc
mov
pop
mov
inc
xor
jbe
and
pusha
loope
sbb
add
add
loope
popa
mov
sub
jne
ljmp
inc
das
cmp
inc
adc
mov
push
add
adc
mov
xchg
xor
sbb
int3
adcl
pop
sbb
pop
mov
inc
mov
ret
call
jge
xchg
loope
cli
cmp
xor
xchg
dec
and
aaa
loopne
sub
iret
and
fsubrl
xchg
pop
cmc
lods
jl
mov
push
int
call
sbb
mov
aas
aas
inc
sub
cltd
mov
inc
add
es
add
sub
movb
jg
and
sbb
ja
add
fwait
jbe
add
inc
mov
sub
push
enter
xchg
sbb
test
sbb
add
clc
in
sar
or
les
fisttpll
jecxz,pt
shlb
rcrl
add
cmp
xor
popf
sbb
pop
inc
mov
inc
repnz
insl
es
cmp
push
sbb
push
push
push
mov
call
push
jle
push
pop
into
mov
ja
fnstsw
jecxz
sbb
mov
pop
or
fiaddl
and
in
add
ret
pusha
out
shrl
outsb
ret
jmp
push
push
iret
in
cld
addl
cld
and
nop
lahf
aad
and
daa
dec
imulb
dec
icebp
gs
add
xchg
dec
gs
out
nop
int
rcrb
int3
lahf
je
push
or
add
sub
mull
push
sarb
sbb
das
inc
sbb
mov
jle
cmp
cld
add
inc
movsl
add
fisttpl
je
pavgw
push
je
fwait
jg
gs
or
pop
xchg
xor
cmp
mov
daa
ja
push
mov
imul
and
sbb
cmp
dec
add
fs
pop
jmp
mov
rclb
hlt
sbb
cmp
xlat
dec
into
dec
add
in
shl
mov
lods
push
sbb
jo
sahf
into
fwait
pop
mov
pop
daa
xchg
in
mov
fs
scas
cmp
pop
out
mov
pop
push
sahf
loope
cltd
out
lds
sub
mov
jl
mov
or
ret
sbb
add
jg
mov
es
mov
sbb
jge
xchg
sbb
sarl
iret
repz
push
xlat
or
inc
and
into
dec
inc
add
in
and
cmp
shrb
pushf
addl
ret
insb
pushf
pop
scas
sbb
cmp
fs
sbb
gs
or
jne
push
jnp
inc
in
pop
inc
dec
push
push
or
push
enter
cmpsl
push
mov
or
movsb
iret
ret
jge
dec
dec
or
xor
sarb
xchg
cld
and
int
aaa
inc
pusha
sbb
sbbl
sub
xchg
repnz
dec
pushw
jno
lea
mov
int3
pop
jb
and
push
mov
inc
fistps
sbb
cmp
cvtps2pi
or
out
and
pushw
mov
xor
cwtl
and
push
testl
xlat
adc
test
push
loop
icebp
mov
les
repnz
dec
iret
xor
and
xlat
inc
imul
fstps
dec
pop
cmpb
dec
jle
fmull
leave
fnstcw
insb
add
xchg
std
mov
shlb
aam
clc
rcrl
insb
int
push
loop
call
xchg
fstl
mov
addr16
push
inc
fistpll
jbe
sub
jg
jle
add
adcl
in
cltd
loop
addl
push
add
arpl
into
hlt
dec
sbb
xor
repnz
and
push
xor
cmp
dec
pop
mov
cli
movsl
sbb
mov
ss
sbbb
mov
cmp
cld
and
push
inc
mov
adc
fistpll
mov
mov
dec
mov
jbe
lcall
mov
jle
adc
add
or
xlat
loope
ljmp
xor
fcoms
lds
add
loop
mov
test
jecxz
sbb
scas
cmp
xorl
push
mov
pop
adc
and
adc
adc
inc
outsb
push
dec
out
stc
add
incb
popf
sbb
in
or
dec
add
jmp
repz
sub
into
jl
adc
test
push
mov
jg
sub
push
sbb
pop
cmc
xchg
mov
xchg
jl
popa
inc
push
cmc
xchg
adc
stos
or
push
mov
movsl
repz
mov
adc
mov
daa
filds
enter
xchg
ja
sbb
addr16
mov
sbb
push
addr16
push
aas
mov
in
push
inc
hlt
rorb
sbb
add
outsb
or
or
sbb
sbb
loopne
cs
or
loop
or
sub
test
jp
mov
sub
std
push
into
sub
cmp
lcall
add
push
adc
push
lcall
add
lcall
sbb
outsb
cmp
sbb
sub
sbb
or
sbb
push
inc
and
push
push
xchg
xor
test
movsl
imul
lret
loop
pop
sub
aad
cltd
sbb
cwtl
mov
add
mov
adc
pop
jae
sbb
jne
int
jmp
jno
jb
ljmp
dec
xor
popa
dec
fs
shlb
sub
int3
push
adc
pop
add
lret
pop
mov
into
aad
test
cltd
jl
push
mov
clc
repnz
fisubs
lret
loop
sbb
jbe
in
fisttpl
insb
test
pushf
sub
mov
inc
pop
inc
add
shrl
mov
pusha
sbb
cmp
jnp
cmp
add
in
xor
sti
jl
or
gs
push
cmp
ljmp
hlt
pusha
push
sub
bound
mov
movsl
movsl
sub
rcrl
push
pop
mov
jno
jo
push
and
lds
sbb
pop
jp
cmpl
outsl
push
push
sbbb
outsl
inc
sub
dec
xor
rcrl
inc
cmp
and
rcr
xchg
xor
adc
loop
mulb
jae
das
cmp
xchg
mov
loope
inc
jecxz
imul
test
clc
fwait
add
clc
push
adc
out
pusha
push
add
pop
fiaddl
pop
sub
or
aad
add
call
add
sbb
jle
jnp
jo
mov
dec
cmc
lock
pop
inc
pop
or
loop
test
inc
inc
in
mov
mov
cwtl
loop
adc
ds
adc
sbbb
popa
sbb
lret
psrad
fdivl
pop
js
inc
jno
xchg
cli
pusha
out
pop
mov
and
dec
jecxz
push
mov
sub
mov
outsb
push
stos
sub
mov
sbb
xor
sub
add
push
xor
jge
mov
lahf
in
add
xor
add
sub
or
sbb
nop
inc
shlb
jecxz
rorl
cmpsl
lods
sub
mov
inc
scas
add
out
ret
pop
jae
negb
sbb
insb
cmc
pop
addr16
sbb
or
push
inc
nop
add
sbb
push
scas
daa
push
shlb
adc
sbb
mov
in
cmc
repz
xchg
inc
adc
jl
fisttps
das
mov
roll
addb
test
and
stos
jmp
fildll
dec
and
push
and
mov
push
mov
les
cmp
mov
ljmp
pusha
movsb
pop
jbe
adc
cmp
adc
jbe
std
filds
push
ret
ret
pop
orb
add
leave
dec
mov
mov
sbb
loop
inc
hlt
movsl
jp
pop
dec
div
inc
sub
mov
orl
fisubrl
xor
push
mov
dec
cwtl
scas
dec
loop
lcall
pop
inc
pshufw
sbb
mov
sub
sub
sub
aas
mov
in
mov
push
or
mov
orl
push
jo
pop
inc
lods
add
aad
loop
movsl
or
xchg
arpl
adc
mov
repnz
mov
fs
cmc
cmpl
jle
and
pop
ret
xor
ss
mov
jbe
ret
aaa
ret
std
popa
test
test
add
jge
sbb
push
ret
iret
popa
es
cmp
out
in
shlb
test
movsl
sbb
repz
les
pop
sbb
mov
hlt
jle
mov
push
inc
mov
in
mov
pop
inc
movsl
push
sbb
xchg
sbb
mov
data16
orb
sub
xor
stos
aas
in
movsl
clc
cmp
fsub
neg
insb
inc
dec
popa
repnz
in
loopne
jle
out
mov
and
lods
sub
mov
inc
push
xchg
cmp
fwait
mov
mov
loop
cmp
data16
test
sbb
sub
cmp
adc
sahf
daa
jle
jne
lret
mov
rcll
jno
and
sub
call
adc
ja
sub
aas
sbb
cwtl
sbb
fsts
adc
jle
icebp
orb
inc
pop
movsl
cmpb
sub
cmp
jecxz
fdivrp
and
mov
enter
dec
jp
test
inc
xor
scas
outsb
jg
aam
cs
push
psrad
xor
aad
sarl
pop
mov
out
pop
sbb
sbb
pop
lcall
pushw
andl
xor
add
push
add
add
dec
sub
mov
popf
ficoml
jle
pop
or
loope
in
sbb
cs
arpl
call
cld
inc
imul
mov
pop
aad
scas
inc
and
arpl
jnp
push
and
das
push
mov
mov
xchg
or
xchg
jle
inc
xor
mov
repnz
fwait
inc
ljmp
jbe
movsb
in
in
aad
add
or
add
jbe
pop
dec
sbb
jle
dec
or
xor
sti
mov
lahf
jo
sbb
popf
cltd
mov
ljmp
cmp
dec
dec
xor
mov
push
mov
subb
scas
in
sbb
lds
rclb
nop
inc
cld
sti
sahf
in
push
repnz
icebp
mov
lahf
lret
in
testb
inc
popf
mov
clc
push
cmc
popa
ja
inc
xor
jbe
jl
mul
add
shl
push
push
jmp
pusha
adc
insb
lahf
dec
push
cmpb
cmp
divb
inc
pop
jecxz
aas
mov
mov
sub
pop
fimull
loopne
jmp
lret
inc
mov
insl
pop
xchg
repz
mov
pusha
sbb
out
popf
std
dec
mov
inc
shll
mov
jle
jnp
jbe
fnstcw
icebp
data16
add
aaa
repnz
xor
cltd
movsl
cld
scas
pop
cmp
loopne
out
mov
data16
sub
cmc
call
bound
mov
jb
pushf
and
and
sbb
or
arpl
call
push
std
rcrl
test
inc
loope
jl
daa
hlt
mov
enter
push
xlat
push
lock
pop
int
sub
inc
sbb
push
jp,pn
sbb
stc
jl
and
xchg
orb
stos
push
test
sbb
sub
jg
das
nop
filds
fwait
pop
pop
add
lcall
add
pop
cmp
sub
movsl
out
inc
shrb
fistpl
or
cmp
sub
mov
mov
es
idivb
out
stos
lea
dec
xchg
jbe
scas
cmc
mov
sets
je
lock
mov
pop
xchg
lods
pop
in
sbb
dec
loop
bnd
sti
jle
mov
sbb
loop
mov
push
cmp
push
push
ret
sbbb
mov
fstps
mov
cmp
popa
and
inc
sub
xchg
adc
sbbb
hlt
pop
push
andb
jge
inc
jl
fists
pop
sti
add
icebp
fnclex
or
push
jecxz
mov
cwtl
insb
ss
and
jbe
fistl
std
fwait
ljmp
aaa
inc
mov
ljmp
int
rcll
push
subb
fmuls
sub
sub
sub
dec
or
sub
pop
pop
mov
adcb
add
test
ja
das
push
fwait
jo
addb
mov
sbb
pushw
negb
jle
mov
lods
testl
insb
push
push
xor
pop
orl
rclb
jbe
ret
dec
cwtl
pop
test
jg
pusha
inc
nop
sbb
fsubr
mov
test
shll
iret
mov
and
mov
jnp
sbb
jp
xchg
lea
adc
fwait
daa
pusha
popa
inc
adc
mov
jg
inc
mov
cmp
cmp
les
iret
shlb
xchg
xor
cmp
jne
sbb
cmpsb
insb
fdivr
daa
loopne
mov
xor
jno
jp
mov
or
and
xor
add
nop
enter
inc
cmpsb
dec
add
and
dec
inc
popf
adc
bound
jmp
cmp
pusha
lcall
mov
scas
cld
sub
lret
loop
or
xor
leave
mov
push
push
bound
lret
mov
xor
fcmovne
insl
loopne
call
das
jo
adc
in
lret
push
rclb
idiv
inc
jbe
pop
adc
jle
sbb
mov
clc
dec
dec
jecxz
movsb
mov
sbb
test
repnz
dec
xchg
push
add
das
dec
add
mov
push
call
out
test
add
pop
and
fstpt
push
bound
ret
push
lahf
push
xlat
cmp
sub
cmp
testb
cmp
add
cmp
dec
xor
stos
inc
fwait
jb
jle
mov
loopne
inc
negl
sbb
mov
insb
lcall
daa
jl
jb
dec
dec
neg
loopne
int3
jp
xacquire
xor
mov
push
stc
inc
pop
loop
pop
stos
add
sub
jge
movsl
fmull
or
mov
adc
jp
dec
fsubrp
jne
mov
ja
enter
cmc
sub
pop
sbb
inc
cmc
cmp
out
inc
movsl
fwait
dec
cmp
mov
ret
and
sub
sub
dec
push
sub
sbb
lahf
sti
test
lcall
flds
push
cli
loop
sub
in
mov
out
sbb
arpl
jmp
test
cltd
mov
rorl
rclb
add
ja
sub
ret
dec
iret
and
aaa
mov
mov
bnd
add
jmp
jl
mov
mov
push
iret
push
push
cmova
into
icebp
clc
rcrb
push
pop
xchg
jle
dec
pop
inc
ss
repnz
dec
scas
adc
sub
pushf
sbb
sbb
inc
mov
lret
sub
ret
ja,pt
shrl
mov
jmp
scas
sub
sbbb
je
xchg
dec
sub
lea
add
leave
es
xor
ds
cmp
leave
arpl
sub
or
rcrl
dec
call
cwtl
pop
cmpsl
and
dec
dec
pop
cmp
xchg
daa
add
divb
xchg
jg
scas
or
mov
sti
daa
add
cwtl
ljmp
mov
mov
popf
ljmp
or
call
sbb
jg
jnp
lahf
ficomps
cld
ds
xchg
xor
loope
inc
and
push
pop
inc
enter
inc
ja
jge
loope
jnp
orl
dec
or
das
sbbl
jg
and
dec
dec
jecxz
jne
dec
jg
scas
lret
pop
ds
or
ds
outsb
stc
adc
dec
in
add
add
jmp
repz
data16
clc
sbb
mov
cwtl
mov
jae
add
cmp
sub
fdivrl
jle
add
jl
push
sti
or
popl
sbb
mov
cwtd
mov
lods
xchg
in
in
into
das
sbb
sub
sub
out
mov
ret
or
push
movq
sbb
mov
add
add
test
aas
mov
mov
nop
sbb
leave
sbb
pop
es
addb
and
inc
movd
pop
cmc
mov
rolb
mov
cmp
aas
lret
jnp
lret
add
imul
push
lret
inc
mov
xor
ds
daa
out
aad
test
adc
mov
and
daa
mov
fildll
pop
inc
xchg
les
push
sbb
shr
sub
pop
arpl
shll
mov
mov
loop
add
hlt
aad
icebp
js
xor
bound
mov
cmpl
and
sbb
fdivl
lcall
dec
loopne
outsb
mov
pop
or
sbb
jne
cwtl
sti
in
push
dec
cmp
ljmpw
pop
add
loop
outsw
jbe
jle
leave
mov
sbb
rorl
mov
lods
xor
and
dec
xor
fnstcw
jecxz
outsb
mov
jbe
jp
mov
sbb
sbb
cmp
xchg
fldenv
push
mov
mov
repnz
repz
fldcw
daa
pop
rclb
dec
mov
movsb
aas
hlt
mov
mov
push
test
push
enter
mov
lahf
or
test
fnstenv
push
adc
pop
pop
out
mov
lods
neg
xchg
call
scas
push
mov
sub
loop
pop
and
mov
push
sbb
dec
das
xchg
and
ja
inc
lods
xlat
addl
jae
sub
rorl
inc
mov
movl
pop
orl
mov
cmpsl
add
scas
sbb
fstpl
xchg
fwait
scas
ret
cmp
jno
addr16
sbb
jb
adc
sub
in
jno
or
xchg
popf
je
sahf
add
or
xorb
add
jmp
push
orl
fcmovu
push
pop
jo
add
outsw
pop
xor
inc
inc
add
push
add
lret
cmp
sub
out
pop
mov
andl
jb
pop
mov
aad
dec
or
aam
mov
cmp
or
dec
pop
adc
mov
xchg
stos
pop
push
mov
or
outsb
addb
movsb
lret
add
xchg
xor
mov
or
pop
loop
or
insl
xchg
sbb
in
push
testl
jg
pop
push
mov
cmp
mov
out
and
aad
lods
ret
rolb
inc
arpl
outsl
jnp
cltd
push
scas
bnd
adcl
adcb
jl
sub
xor
jmp
and
push
pop
or
push
faddl
mov
sbb
pop
cmp
ss
in
mov
or
xchg
jg
xor
hlt
daa
mul
mov
push
filds
sub
or
push
xor
mov
push
jge
mov
stc
std
mov
fidivs
or
or
jns
das
xor
mov
jle
stos
add
repnz
movsb
push
loop
rcrl
sbb
sbb
sbb
sub
js
inc
ret
sbb
xchg
sub
sub
insb
cmp
sbb
mov
icebp
inc
cmc
scas
pop
rclb
cmp
or
fucomi
scas
adc
pop
adc
insb
bound
dec
push
in
sub
pop
dec
pusha
sbb
and
cs
add
mov
add
in
je
mov
rcrl
aas
dec
shrl
mov
push
pushf
dec
adc
and
dec
mov
or
lock
out
pop
xor
es
aaa
loop
xor
into
jle
xchg
xchg
sub
and
out
pop
movsb
test
and
inc
adc
mov
shll
leave
pop
shrb
mov
push
push
sub
inc
pop
hlt
push
adc
rorb
out
ljmp
pop
fcompl
gs
add
fbld
jnp
inc
cli
fisttpll
in
dec
mov
xchg
shll
inc
hlt
int3
cmp
fidivrl
xchg
mov
mov
jbe
loopne
push
lods
sbb
leave
add
jbe
popa
sbb
repz
sbb
repz
shl
cmp
xchg
push
cwtl
mov
sahf
cli
stos
mov
iret
repz
jbe
enter
mov
jp
jo
sbb
notb
sbb
cmc
pop
mov
popa
cmpsl
inc
das
in
fmull
xchg
jo
xor
fnclex
imul
out
mov
add
mov
cmp
jecxz
pop
in
aaa
out
push
or
mov
push
lods
mov
mov
cmc
push
scas
incl
add
push
sub
mov
adc
je
fistps
enter
lock
ds
fldl
ret
and
scas
dec
mov
cmovg
or
mov
and
into
inc
and
cltd
dec
loopne
jbe
js
dec
fcmovnbe
adc
orl
mov
jg
pop
push
or
mov
call
dec
sahf
ljmp
or
or
mov
loope
hlt
jbe
hlt
pop
mov
cmp
in
xchg
mov
pushf
ds
push
ficoms
movsb
enter
cld
mov
fcomip
rclb
stos
mov
or
sub
repnz
ficomps
push
int3
push
hlt
lods
dec
and
divb
lret
xchg
mov
sbb
mov
int3
xchg
daa
lcall
jbe
daa
and
mov
ds
mov
jnp
in
sub
incl
shr
pop
gs
push
shll
jle
cmp
sub
mov
push
sbb
dec
or
mov
jne
sti
xlat
adc
sbb
sbb
mov
fnstcw
jbe
or
cld
les
cld
cli
cmp
mov
lret
adc
inc
dec
test
pop
sub
mov
pushf
inc
sbb
mov
inc
loopne
pop
fwait
inc
popf
add
push
and
sub
or
fldt
push
add
and
jle
push
push
orl
xorb
ror
cmp
add
jg
ljmp
adc
xchg
xchg
sarl
push
mov
xchg
inc
inc
loopne
or
test
lds
jg
xor
adcl
or
add
sub
add
bound
sbb
dec
dec
inc
push
cmp
ss
add
dec
cli
sbb
cmp
iret
jo
test
cmp
ja
dec
or
dec
subb
das
hlt
pop
fidivrs
loop
xor
data16
inc
inc
mov
aad
push
push
sub
sti
add
fstl
jp
aad
xor
add
and
cmc
xor
daa
mov
jb
stos
dec
loop
cs
sub
cmpsb
decb
sbb
ret
push
movsb
test
dec
push
test
pop
xchg
push
lcall
mov
pop
pop
cmpsl
xchg
dec
rcr
cmp
cli
ret
in
icebp
mov
int
sbb
repnz
xor
orb
dec
sub
jecxz
int3
add
lret
xchg
into
pop
jp
push
push
push
dec
pop
ja
xor
outsb
sub
bound
loope,pn
in
cli
pop
iret
add
sub
ret
cmp
cs
frstor
pop
adc
or
loop
ja
xor
cmp
sbb
mov
mov
pushf
mov
inc
xlat
stos
mov
shlb
adc
or
dec
sbb
and
sub
cmp
ret
divl
loopne
loopne
mov
mov
pop
cmc
mov
dec
or
nop
aad
shl
sarb
and
push
xor
xor
and
or
ljmp
jbe
mov
mov
orb
imul
orb
mov
jo
out
mov
or
and
adc
or
loop
jp
lock
mov
sti
popl
test
or
xchg
leave
pop
outsl
fucom
jb
adc
push
inc
sbb
cmpsb
sbb
enter
fsubrp
pop
rcrb
xor
sub
ret
pop
outsb
icebp
test
adc
adc
dec
icebp
add
pop
outsb
sbb
sbb
add
push
and
adc
mov
sbbb
clc
arpl
inc
lods
std
push
mov
fcomi
ret
comiss
adcl
xchg
ret
xor
cmp
cmp
jl
push
ret
rcrb
divl
ficompl
adcb
xchg
mull
in
lcall
ljmp
scas
aaa
popa
push
and
imul
xchg
daa
fcoms
pop
mov
dec
fisubrl
imul
add
jo
push
sbb
xchg
jg
punpckhbw
das
dec
in
fwait
jne
and
jge
jno
orl
call
dec
add
sbbl
je
and
inc
ret
adc
in
lret
add
sub
cmc
mov
lods
cmp
sbb
and
add
cmp
arpl
add
fdivs
and
and
jae
loop
ljmp
or
sub
and
jbe
lret
loopne
xor
jno
jne
mov
adc
cmp
sahf
lret
loope
into
dec
push
divb
into
ja
lret
add
and
and
mov
loopne
and
aad
repz
adc
adc
or
add
sbb
jmp
notb
rcr
fadd
jg
sub
popf
cmpsb
lret
sbb
mov
popa
jecxz
test
push
adc
or
add
cmp
sbbl
xor
adc
lds
sbb
icebp
movl
scas
loopne
jge
ficomps
add
lret
test
cmp
sti
sub
mov
test
push
loope
rolb
sbbl
jg
mov
cltd
es
test
dec
cltd
int
adc
out
xor
push
rcrl
icebp
std
jle
sahf
add
aaa
fists
xchg
push
push
cltd
mov
push
xchg
jns
mov
cmp
adc
repnz
dec
push
mov
icebp
ret
sub
mov
fadds
jns
cmpsl
int3
stos
xchg
jno
mov
xchg
xchg
orl
push
cmp
hlt
lret
loop
mov
pop
and
inc
mov
lret
dec
and
push
push
push
mov
addl
cmpsb
roll
out
dec
jecxz
ficoms
ljmp
inc
aas
push
jecxz
adc
mov
pxor
add
js
xchg
cmpsl
fldl
add
mov
xchg
jo
popa
and
lret
jp,pn
faddp
add
mov
aaa
subb
pushf
pop
pop
pop
leave
ljmp
sbb
mov
sbb
pusha
adc
jecxz
adc
iret
enter
pushf
clc
push
leave
icebp
push
adc
pop
xchg
stos
push
jp
rolb
or
out
jno
adc
jecxz
adc
mov
xchg
cmp
adc
push
push
or
bound
lock
push
and
scas
inc
push
lret
bound
sub
test
daa
cs
mov
xlat
cs
in
fwait
xor
mov
std
or
mov
or
adc
xlat
mov
sbb
or
xorl
push
addb
push
fwait
xchg
add
repnz
push
adc
pop
mov
inc
hlt
fistl
repnz
push
mov
jle
fdivrs
adc
sbb
test
xor
test
xchg
cwtl
inc
dec
inc
inc
or
or
jmp
test
addl
jecxz
les
xlat
rolb
push
jle
pushw
push
int3
mov
into
add
inc
pop
pop
subl
hlt
inc
imul
dec
sbb
std
cmp
loope
mov
dec
aaa
mov
jle
cmp
and
adc
sbb
jo
mov
xchg
mov
xor
cmc
out
in
cli
push
shl
popa
pop
cltd
and
and
lcall
inc
push
jecxz
push
loope
test
pop
or
lods
lahf
dec
sub
mov
movb
outsb
cli
scas
repnz
pop
pand
cmp
lea
mov
dec
pop
cs
dec
sbb
jecxz
inc
sub
sub
push
pop
adcb
and
push
ja
lahf
aam
orl
inc
sbb
sti
sbb
pop
and
cmc
jl
and
xor
xor
or
sbb
loope
adc
jecxz
push
insl
test
fucom
xchg
pop
adc
mov
aaa
iret
push
ret
and
pop
jg
cmp
loope
and
mov
cs
dec
add
sub
insl
sub
lcall
or
mov
add
in
push
enter
fs
ret
push
push
push
daa
ret
hlt
fadds
adc
sub
cwtl
sub
lea
mov
out
stos
sub
jnp
jmp
xchg
sbb
out
and
int3
inc
inc
bound
jae
xchg
jns
or
orl
shrb
mov
push
cmp
xchg
mov
scas
call
push
add
jp
mov
sub
cmp
sbb
adc
add
loop
cwtl
cmp
push
mov
nop
jge
loop
and
enter
cmc
and
xor
test
lock
jbe
jbe
pop
scas
push
icebp
ret
inc
pop
inc
in
xchg
sub
mov
lock
xchg
push
outsb
repnz
or
add
lock
add
call
or
xor
jle
adc
or
xchg
stos
jae
xchg
adc
pop
xchg
xchg
jnp
inc
push
dec
pop
loop
popf
fsts
sub
repz
es
push
mov
sahf
inc
mov
adc
add
pop
jle
notl
adcl
pop
lds
xchg
dec
push
sub
and
mov
mov
imul
sub
ss
sbb
push
pop
cmp
aas
fwait
movsb
xor
jecxz
jle
push
in
lods
pop
push
mov
int3
pop
jl
push
push
or
jle
ret
jge
pop
dec
ds
push
xor
or
inc
sbb
jecxz
push
push
jae
das
push
mov
lret
outsb
int3
mov
add
pop
mov
pop
pop
mov
push
cmpb
jecxz
adc
sarb
sbb
or
mov
nop
cmp
dec
jg
push
enter
mov
xlat
dec
sti
daa
push
push
rcrb
addb
xchg
jne
adc
push
mov
insb
adc
outsl
neg
insb
movsl
stc
dec
xor
pusha
cmp
sub
cmpsl
push
das
cltd
fisttpll
push
fldenv
cmp
je
jae
mov
iret
mov
lahf
fdivrs
sbb
clc
mov
dec
popa
sub
std
stc
shlb
inc
icebp
loope
mov
outsl
mov
sub
inc
push
adc
or
push
lret
sub
into
rorl
in
and
sti
in
rcrb
jle
dec
lods
xor
add
enter
out
insl
arpl
sbb
xor
lcall
add
push
pop
pop
jg
shl
mov
loop
adc
in
adc
xor
js
sub
movsl
int3
data16
decb
cmp
sbb
adc
jo
add
and
or
cltd
jecxz
fiadds
sbb
adc
pop
mov
pop
mov
mov
xchg
jp
cmp
inc
in
ss
enter
mov
and
xchg
sbb
mov
cwtl
jno
das
jb
push
xchg
or
sahf
xchg
popa
push
and
inc
jle
inc
push
mov
push
lods
mov
shrl
mov
in
aas
cs
movsl
jge,pt
cmp
mov
xchg
fimuls
mov
loope
xor
jle
dec
dec
push
jbe
mov
dec
pop
fidivs
test
test
push
inc
push
iret
rorl
dec
mov
pop
push
and
xor
shlb
loope
mov
fsubs
les
loop
adc
push
enter
sub
inc
cmc
ret
xchg
sbb
sti
aaa
or
loop
mov
cwtl
insb
out
cwtl
pusha
insl
pop
sbb
pop
shlb
dec
adc
dec
cli
or
out
inc
stc
inc
stos
lret
inc
test
dec
xchg
or
hlt
mov
cmp
mov
xchg
pop
jle
loope
jg
test
je
stos
ss
mov
xor
das
pop
push
cltd
shl
and
and
das
call
jg
dec
xor
cli
push
sti
popa
lods
ret
shll
pop
jle
pusha
push
adc
cltd
pop
aas
icebp
add
adc
pop
pop
or
cmpsb
fstpl
mov
imull
cmp
orl
inc
and
daa
jne
cld
fwait
outsb
repnz
cld
clc
inc
push
les
cmpb
add
js
jb
pop
hlt
scas
ss
sub
out
add
mov
pop
add
lret
ss
cli
popa
push
pop
jge
mov
push
pop
jge
xchg
dec
and
outsl
fbstp
mov
mov
dec
cmpsb
cmp
ja
sbb
loopne
pusha
push
cmc
pushf
and
mov
mov
loopne
ja
dec
xchg
dec
jnp
loop
pop
xchg
mov
ret
iret
and
stos
push
sub
movsb
sbb
ljmp
sahf
sbb
xorb
or
mov
repz
dec
adc
push
fstps
and
je
inc
cmp
fs
pop
xchg
xor
sbb
outsl
and
ja
fs
bound
sbb
mov
cwtl
mov
addl
xor
mov
dec
ja
cmp
add
loop
je
aaa
pop
mov
ret
xchg
data16
add
orb
mov
dec
or
cwtl
add
xor
or
push
cmp
push
negb
inc
mov
inc
iret
repnz
add
aas
push
dec
mov
and
cmp
or
cmp
dec
mov
inc
xchg
mov
xchg
cmp
or
addl
aas
and
ficompl
xor
bound
mov
and
daa
sbb
push
push
enter
lret
enter
push
pop
das
and
nop
pop
incb
je
jle
into
out
in
pop
sub
add
sbb
mov
pop
fs
test
adc
or
mul
fwait
andl
mul
inc
fwait
movsb
and
and
mov
mov
arpl
jg
cmp
scas
das
pop
imul
mov
mov
xor
daa
push
int3
push
insb
adc
sub
cwtl
push
imul
and
xor
mov
dec
jp
mov
dec
xor
popa
mov
mov
jnp
cli
scas
test
mov
lret
cmp
pop
test
mulb
rcl
cmp
stc
popf
sbb
pop
add
ficoms
movsl
lcall
or
xor
pop
insb
in
push
or
aas
cli
fstps
add
cs
lea
mov
and
pop
fidivs
sbb
mov
cmp
les
je
mov
push
lcall
mov
cmp
cltd
aas
or
or
sarb
mov
cmpl
push
insl
sub
adc
loop
cmc
mov
xchg
lret
adc
cmp
les
mov
stos
xor
adc
loop
lcall
js
jp
adc
jne
cmpsb
sti
ficoms
xorl
sbb
pop
pop
push
out
sarl
inc
sbb
int3
orl
inc
int
or
les
sarb
mov
jb
mov
push
sbb
dec
jge
xchg
pop
call
add
jnp
repnz
sub
or
push
imul
scas
in
leave
push
daa
cmp
inc
push
inc
movsb
add
push
outsb
cmp
mov
iret
mov
adc
pop
mov
sub
cmp
js
push
cli
add
push
mov
xor
xchg
test
pop
jle
movsb
mov
xchg
cld
dec
lcall
js,pn
and
dec
sbb
jne
sbb
in
imul
cs
xor
jne
mov
xchg
mov
stos
sub
pop
notl
and
sbb
dec
stos
jp
insb
rolb
dec
mov
push
push
icebp
cwtl
insl
stc
jg
loop
pop
mov
cmp
scas
sbb
hlt
jecxz
sti
int3
shl
loope
shl
push
sbb
sbb
sahf
push
jne
les
sahf
push
mov
xor
mov
movb
nop
lea
shrl
sarb
jecxz
sbb
and
pushf
inc
cmpsb
sub
mov
adc
mov
leave
sbb
jle
xchg
sub
push
hlt
mov
fsub
fnstcw
xchg
mov
pop
fwait
cmp
mov
xchg
pop
add
iret
stc
cmp
and
jge
outsb
into
iret
cmp
stos
orb
inc
scas
subl
imul
pusha
sbb
hlt
inc
in
mov
inc
push
pop
mov
cmp
idivb
pop
testl
push
add
pop
rorb
fldt
mov
inc
add
and
cmp
ja
push
stos
pop
adc
cs
mov
pop
orl
push
mov
push
lret
fisubl
loop
or
jecxz
lahf
inc
popa
pop
jge
aas
jo
imul
lds
add
inc
jne
scas
dec
dec
dec
mov
call
out
dec
lods
sbb
cmp
das
or
jge
scas
das
push
mov
leave
xchg
test
adc
mov
dec
push
aam
inc
mov
pop
movsl
ret
jb
mov
je
out
in
gs
cmp
lds
push
fstps
mov
out
enter
mov
jl
sub
xor
xchg
out
fldcw
jnp
adc
mov
dec
sub
mov
js,pn
fsts
mov
jns
push
pop
loop
scas
fld
sbb
orb
sub
loop
arpl
pop
inc
pop
pop
xor
fimull
sbb
pop
dec
jo
and
daa
dec
mov
fs
add
lahf
aad
fists
and
sub
jle
fldt
shrl
cmp
mov
mov
cmp
adc
xor
jp
aaa
addb
jne
rorb
orb
pusha
add
fstpl
mov
pop
int3
test
andl
dec
xor
add
divps
mov
adc
xchg
pop
jge
pop
jge
hlt
mov
out
aas
test
adcl
and
mov
aas
stc
pusha
pop
cs
pop
call
cwtl
loopne
insl
int3
add
sub
fwait
cmp
xor
dec
loop
mov
dec
loop
pop
jg
aam
cltd
dec
cmp
xchg
add
fmuls
xor
pusha
jle
xor
pop
add
pop
out
xor
fiaddl
mov
mov
adc
dec
push
ljmp
pop
jmp
push
xchg
xor
jae
test
and
add
mov
dec
xor
jl
inc
cmp
ret
jle
add
pop
ret
enter
stc
call
and
insb
push
pusha
push
jle
xorl
sub
xchg
mov
push
mov
test
mov
adc
test
int
aad
pop
fnsave
orb
xchg
subl
sbb
jb
jp
push
repnz
sbb
add
dec
xchg
mov
mov
ja
inc
cmp
inc
cltd
adc
in
stc
or
mov
jp
and
jge
dec
repnz
stos
popa
leave
sub
lret
dec
into
outsl
lock
xor
pop
mov
lock
fchs
sbbl
out
out
test
push
cs
flds
repz
out
xor
int3
jp
stc
mov
imul
xchg
lds
int3
xchg
mov
push
adc
stos
repz
lahf
shl
pop
cmp
jne
icebp
pop
das
jbe
adc
idivl
sub
pop
mov
lret
repnz
pop
aam
sti
push
xor
movsl
cs
mov
pop
test
push
pop
cs
sbb
dec
fcompl
js
push
mov
cmc
pop
loopne
es
js
add
imul
test
jle
and
bswap
scas
loope
cmc
mov
scas
sbb
decl
rep
jne
pusha
sbbb
mov
jle
inc
sbbb
cmp
push
sub
inc
sub
dec
inc
jno
sbb
lcall
jnp
and
mov
enter
pop
loop
inc
jbe
dec
xchg
add
pop
cld
cmpsb
fs
inc
mov
xor
adcl
mov
add
clc
jne
data16
jnp
int
sbbl
out
jmp
and
adc
orb
pop
mov
popf
iret
jl
dec
mov
sahf
mov
stos
sbb
pop
pushfw
repnz
lds
fwait
adc
dec
inc
roll
mov
sbb
pop
repnz
sub
loopne
sbb
js
bound
add
cs
negl
cli
pop
mov
loop
popf
fcmovne
sbb
mov
popa
mov
or
inc
out
es
add
mov
orl
cwtl
repnz
jo
cmp
test
fcmovne
adc
add
lret
das
cmp
xchg
loop
inc
cmpsb
repnz
js
xchg
pop
and
xor
inc
pop
mov
pop
jle
dec
fucomi
std
pop
icebp
inc
pop
aaa
dec
cvtps2pi
fcoml
in
js
fldcw
pop
add
or
mov
push
into
pop
inc
and
pop
cmc
add
stc
dec
mov
clc
dec
stc
in
sub
dec
fnsave
pop
pop
mov
fmuls
cvtps2pi
data16
into
icebp
loopne
jg
or
icebp
cmp
xchg
mov
sub
lea
lahf
jnp
inc
jle,pn
dec
pop
sti
sub
fistpl
adc
inc
das
lods
sbb
pop
xchg
cmc
js
jne
xchg
arpl
pop
inc
gs
subb
stos
xchg
fldenv
cs
jp,pt
pop
iret
jne
ret
or
inc
push
cli
in
popa
test
adc
adc
pop
xor
inc
xor
jle
sub
fs
sbb
and
push
sbbl
mov
js
mov
sub
mov
sti
jecxz
xchg
or
bound
jbe
mov
sub
and
pushf
mov
incl
das
testl
mov
dec
or
push
xchg
xor
lods
xchg
mov
es
mov
sbb
mov
out
orb
or
add
mov
jmp
fcoms
addr16
es
push
bound
in
incb
cmp
cmp
jb
imul
push
push
pop
out
sbb
sti
fdivrp
or
jg
sub
or
add
xchg
sub
adc
lods
sub
out
pusha
and
orl
fdivl
mov
inc
imul
mov
sub
push
and
push
sub
adc
jg
dec
sbb
rclb
cmpsl
out
add
lods
add
xor
add
xor
mov
mov
aaa
inc
js
aaa
rcrl
imul
loopne
mov
push
arpl
jg
push
xchg
daa
jge
shld
out
sbb
inc
pop
add
inc
enter
mov
cltd
out
idivb
adc
aam
jnp
pop
lret
jae
xor
std
pop
pop
inc
ret
es
xor
sub
jle
test
outsb
jg
not
push
and
daa
aam
xor
add
push
into
adc
jb
pop
pusha
mov
fs
mov
mov
add
popf
negb
scas
xchg
pop
dec
lock
out
pop
in
push
inc
stos
jmp
std
out
jle
lret
cmp
mov
test
or
in
inc
xchg
jecxz
jl
bound
dec
mov
and
addr16
mov
cmpsl
mov
test
dec
jbe
push
mov
jle
sub
and
mov
sub
xor
rolb
cmp
push
inc
adc
icebp
loop
arpl
pop
ds
pop
adc
mov
rcl
hlt
add
orb
outsb
lcall
repnz
lahf
fstpl
push
inc
pop
xchg
cmp
popf
fisubs
lds
test
mov
add
dec
push
push
or
push
xor
jle
cld
push
mov
addl
scas
sub
sub
xchg
daa
loope
fidivrs
mov
sbb
dec
sub
bswap
outsl
push
pop
lock
push
scas
negl
stos
test
mov
jnp
sbb
mov
fcomp
hlt
jmp
xchg
adc
mov
pusha
xchg
das
dec
push
jl
mov
mov
mov
js
lods
pop
mov
ljmp
stos
icebp
adc
push
push
xor
add
ljmp
add
push
and
pusha
hlt
pop
addl
pushf
push
push
loop
mov
add
xchg
jp
std
fwait
test
aas
insb
or
jbe
or
imul
mov
dec
sbb
repnz
push
bndstx
cld
les
sbb
sub
xchg
add
push
or
pop
add
jg
lahf
xor
jmp
mov
push
test
push
jecxz
dec
mov
dec
fnsave
mov
mov
lods
pop
mov
pop
in
jp
xorl
mov
fwait
inc
jmp
and
cltd
sbb
orl
and
pop
negl
or
flds
or
addl
add
add
dec
or
icebp
pop
xor
enter
add
test
push
dec
pop
les
orl
iret
cs
add
mov
or
loope
mov
sbb
loope
and
xchg
andb
xchg
popf
leave
lea
xchg
mov
fdivl
push
mov
jg
xor
pushf
mov
hlt
ss
mov
mov
sub
xor
pop
enter
iret
cli
scas
inc
out
pop
jo
jle
push
xchg
ja
jle
xchg
xchg
sbb
idivb
mov
cmpsl
imul
dec
adc
imulb
inc
test
and
push
imul
cmc
fiadds
inc
push
inc
lock
xor
test
in
imul
xlat
testb
add
imul
mov
xor
dec
or
aaa
mov
cmpsb
and
push
push
fistl
je
xor
cwtl
pushf
push
ljmp
adc
or
imulb
cwtl
push
ja
hlt
ds
dec
bound
sbb
js
add
xchg
sarb
push
xchg
arpl
ljmp
mov
aaa
jns
push
enter
in
div
push
mov
ljmp
es
xchg
pop
pop
mov
xchg
rcr
adc
push
stc
mov
mov
push
mov
mov
pop
arpl
or
dec
dec
mov
sub
xor
test
push
or
cmpsb
movsb
ret
sbb
push
iret
fldl
cmc
sbb
leave
inc
pop
push
and
rolb
inc
push
ret
das
mov
inc
dec
push
shrb
mov
jnp
xchg
cmc
mov
popf
pop
cwtl
cli
xor
dec
sub
enter
sub
fwait
xchg
jmp
rcr
sub
cmp
sbbl
into
jg
jmp
jle
mov
div
lds
cs
imul
icebp
hlt
and
xchg
sub
addr16
and
flds
push
push
mov
scas
adc
push
xor
dec
das
mov
inc
es
push
mov
pop
pop
cli
test
ja
and
and
adc
cmpsl
rol
add
sub
sti
jg
and
lcall
popa
pop
push
ljmp
rorb
sbb
push
rcll
loop
repz
push
or
testl
push
cltd
xor
dec
lcall
push
xor
daa
aas
xor
mov
scas
xchg
clc
sbbl
push
fneni(8087
pop
push
pop
push
add
icebp
sbb
or
shrl
fldcw
sub
rcrl
xchg
inc
push
and
or
pop
jne
rcl
cwtl
add
or
mov
sbb
nop
stos
sbb
lahf
fwait
xor
or
icebp
mov
mov
das
popf
hlt
lret
stos
pop
nop
and
loop
stc
jno
adc
div
sbb
inc
mov
xchg
in
dec
lock
xchg
repnz
das
imulb
dec
idivb
decb
frstor
repnz
dec
dec
test
decl
icebp
out
rolb
inc
jbe
icebp
sub
inc
jb
pop
cli
sbb
push
push
sahf
sub
inc
rcrb
add
or
pop
cmc
ret
sahf
movd
sbb
sub
adcb
lret
test
fwait
popf
ja
jbe
incl
stc
sub
inc
ffree
pop
pop
arpl
test
mov
sbb
out
sbb
add
loopne
ret
ljmp
and
inc
out
pop
cltd
add
mov
jbe
lods
mov
sub
mov
pusha
pop
cmp
shrb
add
xchg
fsts
cmp
pop
dec
jbe
ficoms
leave
pop
in
inc
hlt
insl
repz
adc
std
je
xor
xchg
popf
mov
lods
sahf
and
fadds
roll
mov
pop
icebp
xchg
mov
jecxz
icebp
sarb
ljmp
pushf
add
outsb
je
dec
pop
mov
pop
mov
sbb
add
mull
jns
fiaddl
push
adc
test
fldl
push
leave
test
mov
ret
fildll
xor
add
dec
add
push
dec
cmp
aaa
lahf
fistps
test
sbb
loop
clc
hlt
popa
push
insb
jae
lods
scas
push
fs
fisubl
mov
jo
mov
loope
loopne
cmp
push
cld
fsubrp
scas
pop
push
sub
xchg
sub
pop
test
pushf
in
rolb
sub
sbb
enter
std
pop
mov
sbb
inc
cli
test
jbe
test
loope
repz
push
mov
cmp
adc
scas
mov
sub
ret
outsb
cmpsl
adc
insb
lock
jecxz
jle
daa
sbb
dec
add
jne
push
popf
sbbb
out
mul
and
pop
dec
and
fdivrl
lret
mov
mov
scas
mov
shlb
pop
std
xchg
mov
pop
jns
scas
and
push
mov
pop
lahf
push
cmp
inc
mov
xchg
sbb
orb
xchg
addb
movsl
jae
or
push
jno
cld
scas
orl
push
out
xchg
sub
mov
add
cmpb
jl
mov
lcall
jb
stos
add
sbb
insb
pop
sub
cmp
lods
adc
adc
icebp
adc
or
jmp
dec
mov
sbb
jnp
int3
add
add
incb
icebp
or
pop
cmpsl
adc
add
xchg
inc
and
add
dec
and
dec
subl
cmp
or
cmp
push
add
or
and
or
repz
jg
dec
stc
sbb
imull
int3
cmp
adc
add
pop
cli
sub
dec
cmp
mov
sbb
js
pop
sub
lret
sbb
enter
mov
pop
push
adc
dec
clc
or
xor
add
sub
jp
jecxz
ds
ds
adc
jo
push
enter
add
sbb
cs
inc
sub
subl
or
mov
push
or
and
jb
test
push
mov
cmp
jbe
mov
add
and
add
cmp
sbb
add
or
sbb
add
jae
push
mov
pop
ror
add
add
jne
mov
ficoml
scas
stos
outsl
mov
addl
inc
pop
add
dec
negl
dec
xor
mov
or
outsb
xor
sbb
addr16
movsb
sub
push
sub
enter
imul
mov
pop
push
adc
push
push
sbb
insl
dec
xchg
or
sti
or
stos
mov
arpl
add
sbb
push
push
or
add
inc
insl
push
push
dec
dec
adc
js
cmc
jns
sub
add
cs
push
in
sbb
xchg
repnz
xchg
bound
xor
arpl
adc
inc
inc
push
push
mov
jae
push
repnz
cmp
xor
push
out
or
repz
add
jg
and
sti
pop
add
fwait
pop
mov
lock
scas
sbb
dec
jb
dec
leave
test
and
add
rcrl
sbb
fildll
sbb
ljmp
fwait
mov
arpl
dec
adcb
pop
dec
into
and
outsl
and
movsb
dec
mov
add
and
inc
gs
inc
add
cwtl
and
sbb
dec
add
or
add
sbb
xor
mov
ret
outsb
jge
push
frstor
pop
pop
int3
and
sub
inc
cmp
addb
lcall
in
inc
mov
jae
mov
jb
push
sub
iret
mov
xchg
xchg
or
adc
gs
aam
pop
scas
jo
mov
mov
dec
test
cs
dec
mov
sub
push
mov
mov
hlt
xor
push
adc
sbb
stc
pop
cmp
out
cltd
and
cmp
cld
sub
cmp
xchg
pushf
addb
aaa
mov
push
and
cmp
xchg
sbb
mov
mov
jp
and
sbb
dec
mov
push
sarl
cltd
sub
sbb
fisubrl
std
mov
imul
mov
xor
and
cltd
xchg
mov
in
scas
add
sub
in
ret
push
add
and
fwait
add
sub
add
sub
push
jle
cmp
push
mov
dec
add
jmp
insb
mov
dec
inc
adc
inc
addb
inc
add
inc
adc
and
push
mov
push
cwtl
mov
roll
add
xor
push
sbb
mov
xchg
pop
clc
sub
add
mov
in
insb
push
shll
pop
and
add
sbb
push
loopne
or
xor
jbe
insb
out
inc
sbb
lret
in
sub
pop
sub
mov
xchg
sbb
je
push
loope
cmp
mov
or
std
sahf
cwtl
loop
push
mul
push
mov
stc
negb
fs
pop
sarl
pop
or
cmp
rclb
xchg
mov
or
js
and
push
rclb
jns
addl
sbbb
jne
jecxz
mov
cmp
xchg
jmp
xchg
push
xor
movsl
clc
aad
addb
push
cmpsl
sub
pop
dec
dec
sarl
dec
push
pop
sbb
push
icebp
inc
cmp
rol
or
das
fld
loop
add
test
push
and
test
xor
bound
pusha
divb
inc
scas
push
dec
adc
rorb
rolb
cmp
adc
dec
push
dec
jge
andl
loop
xor
and
xor
jl
aas
fsubl
aam
jge
mov
xor
movsb
test
adc
dec
mov
out
jecxz
or
into
and
sub
pop
sbb
out
hlt
scas
adcl
or
jg
ss
push
or
pop
sbb
mov
cwtl
in
int
and
sbb
lret
xchg
adc
loop
aad
movsl
xchg
pusha
repz
aaa
mov
and
pop
mov
sbb
cmp
mov
icebp
add
adc
adc
xchg
or
sbb
sahf
lahf
sahf
push
mov
cmc
jns
stc
scas
fwait
lds
lock
jg
jge
push
jb
jecxz
scas
pop
xlat
xchg
jl
das
out
push
loop
mov
call
mov
adc
add
imul
imul
mov
cmp
add
or
and
js
dec
pop
and
pop
xchg
stos
sub
pusha
adc
in
jle
rcll
jne
pusha
xchg
jnp
mov
std
jbe
ja
adc
in
js
jl
sarl
jg
cmp
in
jecxz
push
jle
push
in
and
mov
and
push
out
divb
cwtl
test
pop
dec
mov
xchg
icebp
out
cmpsl
xchg
jns
cld
mov
pop
out
pusha
push
sub
inc
ljmp
out
fwait
and
les
mov
cmp
xor
sub
cmpl
adc
lahf
lret
lods
out
lcall
repz
or
mov
les
mov
mov
mov
or
sbbb
pop
mov
jbe
push
mov
pusha
mov
testb
mov
xchg
outsl
loop
mov
xchg
xor
xlat
mov
adc
mov
cwtl
cld
push
inc
repz
sbb
or
ljmp
daa
lods
pop
or
leave
mov
int3
je
push
repnz
sbb
mov
pop
or
cwtl
xorb
mov
and
add
in
into
xchg
push
sub
xor
lods
pop
inc
cmc
outsb
movsl
mov
cwtl
push
movsb
sbb
rcrl
sbb
enter
inc
loopne
jle
push
imul
pusha
sbb
loope
push
sub
adc
fcomps
xchg
or
dec
addl
shll
lds
ret
inc
push
xchg
add
or
loopne
and
mov
sbb
sub
into
mov
add
insl
jg
pusha
cld
pop
adc
lea
fildl
rcr
mov
adcl
jecxz
leave
call
jp
int
dec
push
repz
in
dec
or
mov
lock
sahf
or
mov
shl
xor
push
mov
pmulhuw
and
stos
data16
dec
jae
adc
push
xchg
mov
scas
loopne
add
pusha
or
inc
push
mov
xchg
xchg
ss
push
pop
pcmpeqb
jg
sbb
negl
mov
sahf
cmp
push
jle
movsl
cmpsb
pop
pusha
inc
out
into
add
lds
filds
adc
add
xor
pop
lds
fists
hlt
ret
xchg
lret
inc
adc
jb
pop
in
sbb
sub
movsl
loopew
es
or
and
mov
pop
decb
movsb
or
repz
inc
in
jge
es
aas
das
push
adc
ljmp
cmpb
outsb
stos
pop
jge
subl
gs
pop
dec
mov
in
nop
ljmp
mov
aas
loop
inc
mov
adc
xchg
notb
pop
pop
loop
mov
ret
inc
cmpb
fists
cmp
jns
cwtl
pop
es
sub
mov
call
push
orl
cmp
jnp
fs
stos
mov
add
jb
imul
push
stos
adc
xchg
sbb
test
shrb
ret
inc
hlt
test
sbb
cmp
out
inc
adc
loope
cmp
adc
pusha
jp
add
jl
sahf
pop
shlb
dec
into
lahf
out
xlat
adc
rclb
pop
sbb
rorl
mov
push
cs
inc
push
repnz
ret
cmp
enter
mov
dec
sti
std
ja
jecxz
pop
xorl
fs
jo
adc
dec
iret
and
loop
stos
aas
sub
mov
inc
xchg
mov
push
pusha
inc
aaa
mov
test
mov
adc
dec
inc
jle
cltd
xchg
into
jecxz
cmp
inc
push
jle
mov
xor
sbb
jp
dec
ss
lret
xchg
aam
in
push
sub
cmp
jno
jle
shll
int3
dec
out
pusha
push
add
pushf
es
add
mov
pop
mov
dec
aas
cmp
negl
add
cmc
xchg
add
fs
dec
push
js
pop
and
nopl
and
fs
jecxz
loope
pusha
dec
add
jno
add
pop
adcl
cmpsl
aaa
test
xor
dec
cmp
sub
push
adc
out
and
push
push
xchg
outsb
xor
xorl
popf
aaa
sub
sub
loope
pop
jle
sarl
push
into
mov
jbe
xchg
inc
cmpsl
sbbb
aas
add
ljmp
jne
mov
sbb
rcrb
cld
test
faddl
jl
imul
and
or
pusha
sub
jle
insl
push
stos
mov
out
cmc
rcrb
dec
pop
sub
es
xor
or
or
loopne
fnstsw
mov
dec
add
ret
or
or
mov
or
fs
xchg
jne,pt
clc
inc
das
sbb
xor
mov
das
jne
stos
mov
fdecstp
mov
adc
xor
in
adc
xchg
es
push
fwait
adc
cwtl
add
sbb
cmp
icebp
push
adc
das
push
sbb
pop
aam
lahf
sbb
xchg
sub
sahf
add
lods
xor
xchg
repnz
int3
bound
outsl
add
sbb
sub
xor
jle
lahf
negl
nop
jl
mov
das
outsl
sbb
and
test
adc
aas
daa
push
pop
cli
push
gs
lahf
xchg
fldt
aad
pusha
fdiv
neg
roll
mov
dec
add
mov
cmp
subl
jle
and
jg
xor
data16
jne
jbe
pop
loop
movsb
pop
test
push
push
mov
packsswb
cwtl
mov
stc
scas
ja
nop
das
push
fstl
adc
mov
push
xchg
sub
lcall
outsb
js
jmp
stc
lock
jo
push
pop
or
insb
or
dec
push
pop
bound
sub
test
int
repz
lret
inc
std
push
mov
xor
adc
das
jmp
and
insb
push
pop
xor
js
sbb
jb
cmp
icebp
cmpsl
sahf
mov
push
lods
add
push
pusha
icebp
fdivrs
inc
mov
add
and
lret
inc
jg
das
call
jge
or
and
mov
inc
mov
pop
mov
imul
mov
sub
mov
jno
and
sarb
fisubrs
mov
sbbb
imul
repz
lcall
sub
or
inc
test
cmc
into
jns
in
xor
cmp
xor
bound
mov
xchg
add
pop
pop
xchg
in
bound
inc
and
es
cmp
mov
das
mov
xchg
and
inc
mov
arpl
insb
dec
mov
xor
dec
lock
pop
roll
cmp
js
negb
imul
jno
or
fimull
in
or
es
movb
xorb
ret
ljmp
les
sub
xor
fsts
and
cmp
sti
int3
shrl
fnstsw
movsl
into
fsubs
mov
mov
fstpl
sbb
in
push
lea
xchg
jecxz
dec
push
mov
repz
adc
xor
dec
jg
push
pop
pop
dec
sbb
stc
xor
sub
sbb
add
fstl
pop
int3
add
adcb
loop
popf
add
stos
cwtl
popf
jb
push
inc
add
add
jle
and
sub
sbb
iret
aad
cmc
push
cmpsb
fsts
fldt
mov
lods
adcl
iret
push
inc
jg
mov
push
inc
or
xor
insl
data16
pop
loop
hlt
inc
leave
or
xchg
dec
adc
sub
inc
mov
xor
add
cmp
icebp
add
push
add
xlat
je
push
bound
xchg
push
mov
and
xchg
adc
cld
push
dec
mov
sbbb
or
pop
sub
jnp
cmp
jmp
inc
adc
xor
sbb
xor
mov
bound
mov
xor
push
xchg
repnz
inc
out
shlb
ja
mov
sub
insl
and
scas
cmp
mov
cmp
cli
jle
pop
adc
mov
add
mov
inc
push
ljmp
jp
inc
vxorps
sub
xchg
mov
pusha
stos
aad
adc
xor
push
xlat
xchg
jns
rcrb
xchg
xchg
imul
adc
rcrl
stc
icebp
into
test
jle
ret
lret
and
dec
aas
push
outsl
sti
xor
xchg
in
push
fisubl
je
cwtl
mov
lret
out
xchg
mov
inc
add
push
loop
mov
sub
andnps
mov
in
cltd
rcrl
bound
fiaddl
and
movsb
inc
dec
pop
test
lret
shlb
sbb
dec
mov
in
negb
das
xor
aaa
mov
pusha
push
sbbb
nop
jnp
or
pop
mov
stos
xchg
xor
push
aaa
xchg
or
inc
imul
pusha
mov
imul
int
inc
lret
pop
mov
scas
add
mov
push
imul
sub
movsl
fildll
push
xchg
daa
mov
cmc
push
add
ds
shlb
xor
notl
and
adc
pop
cmpsl
leave
push
cwtl
repz
sbb
inc
leave
loopne
inc
and
das
negb
popa
adc
adc
push
call
test
mov
sbb
in
es
push
setns
movsb
mov
sbb
push
ljmp
dec
mov
ficomps
divl
notb
je
arpl
xchg
mov
rcrb
outsb
xchg
cmp
popf
mov
sbb
xchg
xchg
pop
bound
xchg
or
xorb
sbb
cmpsb
mov
add
cmp
pop
mov
dec
das
push
pop
fdivrl
aas
rorl
pop
out
ret
adc
pop
pop
into
mov
push
mov
pop
fidivrl
push
jmp
cmp
xor
cltd
stos
and
inc
sbb
sbbb
pop
dec
es
cmpsl
adc
cs
pusha
or
cld
into
sub
dec
sbb
fs
idivb
data16
push
sbb
iret
sub
xor
xchg
loop
inc
repnz
push
inc
add
cmp
sub
add
loop
cmp
pusha
dec
lret
mov
fdivr
stos
lock
pop
and
jg
xlat
and
sub
sbb
adc
mov
dec
push
add
rorb
mov
cmp
rcrl
cmpsl
mov
jg
stos
sub
jbe
cltd
mov
jle
or
into
pusha
mov
xor
or
push
subb
lock
mov
or
and
push
ds
aaa
xchg
into
into
jge
pop
mov
cld
fidivl
and
adcb
xor
ljmp
or
ficomps
jo
xor
pop
test
xor
mov
pop
mov
outsl
sub
daa
loopne
call
cld
add
lret
jg
mov
ja
shll
adc
cmp
xor
test
aas
mov
pop
cs
jg
fidivs
movsb
fwait
movsl
jg
das
or
xlat
dec
xor
sbb
enter
mov
mov
movsb
sbb
and
aas
bound
fwait
xchg
pop
aad
test
and
loope
lds
mov
mov
arpl
inc
test
mov
cwtl
and
jae
or
pusha
add
mov
push
out
sub
loope
fimuls
and
outsb
std
push
push
loope
cmpsl
cltd
fcoml
js
cld
call
jg
inc
sub
push
lds
ret
aam
inc
outsb
push
dec
add
sbb
and
aaa
bound
hlt
dec
xor
xor
pop
add
repnz
cli
mov
popf
fwait
cwtl
sbb
leave
scas
or
insb
int
adc
daa
loope
jg
icebp
or
inc
in
fldcw
push
jle
add
mov
xor
in
jecxz
faddl
cli
enter
mov
mov
and
aas
in
adc
or
jg
aas
jecxz
sbb
lret
or
push
dec
stos
imul
arpl
inc
std
mov
sub
loop
or
icebp
xor
jecxz
iret
cmp
mov
fstps
inc
inc
ficomps
fstpl
lret
jne
xor
popf
pop
das
dec
imul
or
mov
adc
or
ret
and
cmpsb
sbb
insb
std
aad
adc
mov
lods
lods
fstps
adc
mov
scas
divb
sarl
cld
xchg
popf
call
xlat
stos
pop
jne
rorl
mov
push
bound
inc
repz
cmp
pop
adc
dec
pop
jo
dec
pop
add
movsl
call
les
popf
fiaddl
sub
push
dec
lods
push
outsl
pop
xorb
add
ror
aas
push
or
shl
cmpsb
aas
outsl
hlt
pop
les
adc
insb
pop
pop
loop
push
bound
roll
rcrl
cmpb
ret
pop
adc
movsb
xor
clc
adc
jbe
and
or
xchg
dec
movsb
xor
fs
loop
ffreep
das
cmpsl
add
mov
loop
dec
popf
subb
movsb
icebp
push
scas
add
gs
lods
cmp
adc
sub
mov
dec
sbb
sbb
loop
pop
out
das
inc
adc
sbb
lret
in
ret
mov
adc
loop
pushf
inc
sub
call
push
jg
mov
push
adc
int3
imul
or
pop
adc
push
push
repnz
pushf
loopne
pop
fdiv
jmp
push
xchg
pop
pop
cmpsb
outsb
int
popf
fcomi
cmp
int3
and
push
divb
push
or
test
rolb
jbe
cmp
fdiv
lock
xchg
ja
sbb
outsb
pop
sub
pop
loop
iret
fndisi(8087
dec
mov
xor
mov
clc
aas
mov
jnp
insb
jne
jb
ljmp
inc
or
movsl
sub
ret
cmp
mov
lcall
fmulp
cmp
mov
mov
jg,pn
out
push
lret
cmovb
jmp
xor
dec
ret
inc
pop
sub
arpl
lahf
cli
in
out
imulb
ljmp
loopne
jge
pop
xchg
add
movsb
nop
sbbl
cmp
or
dec
lods
daa
add
into
and
or
and
daa
daa
mov
or
sbb
mov
scas
in
adc
push
and
pop
es
mov
cwtl
mov
loop
lret
inc
lret
sar
jo
dec
subl
push
je
rep
push
mov
push
dec
stos
xor
push
inc
sahf
lock
stos
fwait
scas
sbb
dec
test
mov
push
loop
mov
dec
mov
inc
dec
mov
cmc
pop
andl
push
push
mov
and
loope
push
rcl
mov
icebp
test
dec
and
mov
push
aas
pop
inc
fwait
inc
hlt
outsl
mov
sub
fdivl
mov
add
or
int
mov
aas
dec
sbb
out
jae
clc
mov
wbinvd
push
sub
insb
lock
pop
sbbb
stos
inc
jecxz
push
xor
mov
inc
push
add
xchg
pusha
jne
imul
loope
xor
jle
gs
mov
cmp
sahf
fsubrs
push
dec
insb
sbb
cltd
mov
bound
addr16
add
hlt
pop
inc
sbb
pusha
icebp
pop
pop
adc
out
lock
shll
popf
mov
xor
dec
xor
dec
dec
sbb
or
cmp
inc
and
mov
jb
add
inc
hlt
leave
mov
imul
and
and
push
cwtl
xchg
sub
pop
jbe
inc
jmp
idivb
mov
loopne
in
pop
xchg
add
jg
or
pop
cmp
sbb
fisttps
and
repnz
xchg
dec
hlt
xchg
decl
push
fists
pushf
lcall
or
jb
pop
sbb
cmp
jg
adc
pop
dec
cmp
sbb
push
inc
testb
repnz
and
jae
sbb
outsl
scas
cmp
inc
bound
jns
daa
cli
push
cmp
test
jg,pt
data16
mov
aad
repz
dec
push
dec
ret
cltd
enter
mov
pop
sbb
pcmpeqw
or
inc
sbb
ret
fidivs
incb
sbb
inc
and
cld
mov
test
sbb
mov
scas
pop
ss
xchg
ss
out
dec
test
push
scas
cld
fisubrl
mov
and
push
loop
sub
inc
add
jno
or
jecxz
lcall
pop
jg,pt
outsl
adc
sub
and
lcall
sub
imulb
push
sub
jb
pop
jnp
adcl
pop
xchg
fwait
cmpsb
mov
xor
jo
lret
mov
jmp
test
pop
sub
push
jb
imul
pop
adcl
aaa
test
sbb
or
lcall
pop
add
jbe
cmp
outsb
pop
push
popf
insb
inc
fistpl
pop
cmc
pop
push
shrb
es
mulb
rclb
add
jge
xchg
add
in
pushf
sbb
fldt
pop
pop
insb
push
and
stos
adc
ja
hlt
cmpsb
rolb
data16
dec
jae
sbb
je
addr16
jb
sub
xor
xor
adc
jne
pusha
push
lahf
push
loop
xchg
clc
add
daa
fldt
shll
inc
and
push
cwtl
inc
in
push
popa
add
mov
lcall
pop
mov
negb
repnz
loop
push
aas
sub
mov
rol
push
xabort
fwait
cmp
pop
add
fninit
into
xchg
mov
push
xchg
loopne
or
imul
pop
jle
fimuls
add
dec
stos
sbb
inc
mov
daa
jns
stos
xchg
xor
sub
add
std
addr16
mov
mov
push
inc
jb
cmp
sub
adc
sub
hlt
lock
leave
push
push
dec
pop
add
out
mov
in
mov
cld
popl
sub
in
and
pop
jge
fistl
fstpt
iret
sub
jecxz
int
repz
in
push
mov
inc
push
inc
repnz
push
inc
cmp
sbb
sbb
xlat
ret
ja
dec
add
divl
push
jo
insl
cltd
adc
jge
mov
sbb
out
add
loope
add
movsb
xchg
shll
js
jbe
ds
adc
pop
sub
dec
out
mov
mov
cld
mov
mov
pop
lret
xchg
negb
and
mov
xor
aas
push
data16
negb
popf
std
mov
pop
inc
ja
xchg
xchg
push
pop
xchg
mov
mov
cmp
fistpll
das
aad
push
dec
cmp
je
and
into
mov
dec
mov
push
xor
jbe,pn
push
inc
add
cmc
mov
idiv
sbb
sbb
enter
mov
mov
icebp
adc
jae
bound
fwait
mov
aam
sbb
sbb
or
push
fiadds
mov
adc
pop
and
sub
rclb
sahf
pop
mov
arpl
cmpsl
jl
jb
push
mov
adcb
pop
bound
stc
pop
imul
adc
decl
rdpmc
dec
jb
or
lods
add
lods
gs
scas
lret
flds
mov
jne
xchg
sbb
aad
int
and
adc
lods
rclb
sub
push
rcrb
jns
or
cmpsb
rolb
enter
lret
jae
or
sub
sub
dec
and
add
scas
cmp
sub
orl
addr16
movsl
test
fsub
imul
sbb
push
and
fmul
push
out
add
add
js
inc
adc
rorb
push
pop
add
add
fadds
jle
push
mov
xchg
shl
andl
gs
push
push
pop
adc
loop
xchg
sbb
fsubrs
jmp
ret
or
sbb
orb
leave
lock
push
sbb
xchg
push
mov
sbb
jno
das
dec
and
data16
sbb
push
mov
and
test
xchg
lret
iret
dec
or
mov
mov
xchg
add
jl
mov
xchg
push
xor
out
dec
nop
int
jb
sbb
je
enter
je
cli
push
xor
push
lods
call
bnd
arpl
rcl
lahf
and
hlt
int3
bnd
rcrb
push
rcrb
dec
in
xchg
xor
stos
cmpsl
inc
movsl
adc
test
add
sub
cmpsl
cli
sbb
inc
in
dec
cwtl
hlt
pop
ret
popf
popa
or
or
sbb
mov
ja
cmp
loopne
hlt
xorl
sub
sbb
and
mov
daa
pop
pop
add
or
xor
mov
pop
xor
insl
out
loopne
je
sbb
fidivl
test
jle
or
loope
mov
adcl
pop
and
mov
cltd
mov
iret
xchg
mov
lcall
lret
pop
lods
dec
or
incb
sbb
popf
rcrl
sub
jbe
sub
mov
fdivrs
sub
scas
pop
loope
repnz
es
mov
and
mov
das
bound
lods
and
xor
add
dec
loope
xor
xchg
jp
xchg
dec
jle
cli
dec
adcl
clc
fsubl
movsb
mov
jecxz
lahf
and
in
pop
or
in
or
stos
jecxz
rcr
popa
pop
je
rcrb
push
pop
xor
push
pop
xorl
xor
jl
push
mov
dec
pmaddwd
hlt
lock
dec
outsl
add
outsb
enter
jmp
or
adc
mov
or
push
cs
outsb
add
xor
mov
xchg
dec
jbe
xchg
int3
call
aas
scas
adc
hlt
scas
inc
sbbl
sub
xor
lahf
pop
addl
lea
adcl
movsl
xchg
and
nop
loopne
call
ja
xchg
dec
jo
jmp
sub
sbb
push
mov
jo
repnz
mov
pushf
adc
jp
pushf
cmp
and
jle
cli
call
cmp
popa
test
pop
or
mov
jne
cld
dec
ss
pop
cmpsb
incb
push
rorl
pusha
xchg
cwtl
and
into
bound
or
sub
imul
xor
sbb
daa
inc
in
sub
cmpsl
mov
xchg
jp
call
inc
arpl
dec
out
out
sbb
popa
push
fsubs
bound
mov
lea
push
popa
sbb
repnz
sbb
das
imul
add
into
pop
push
cmc
mov
dec
dec
addb
and
add
jne
rorb
push
sti
outsl
inc
jp
out
xchg
mov
jle
xor
int
fimull
mov
fisubl
xor
adc
lret
rcrl
stos
inc
add
pop
adc
jbe
jne
subl
shlb
pop
shrl
das
cmc
xor
fwait
das
testb
fcomps
lret
das
push
or
test
push
cld
pop
arpl
adc
mov
dec
push
sub
sbb
incb
push
push
repnz
adc
imulb
push
dec
push
adc
sbbb
or
lret
jecxz
filds
dec
adc
adc
add
inc
mov
js
xchg
ja
idivl
add
cmpl
loopne
dec
cli
sbb
cmpsl
inc
cs
inc
push
pop
mov
sysenter
loope
flds
push
outsb
add
cmc
mov
inc
into
dec
es
add
mov
xor
mov
xor
into
mov
lret
hlt
sub
cs
mov
and
pusha
sub
and
rclb
test
mov
adc
sbb
pop
cmpsb
xlat
and
nop
mov
push
in
mov
adc
test
ret
outsb
divl
loop
mov
xchg
aas
fwait
ss
pop
pop
cmp
filds
push
imulb
push
outsb
aaa
je
sahf
add
movsl
cmp
arpl
pop
sub
das
dec
inc
cmc
loope
mov
xchg
cli
aaa
push
jmp
pop
test
cs
sub
xor
push
out
dec
popf
arpl
and
loopne
xchg
pop
mov
mov
testb
or
pop
pushf
sbb
mov
adcl
lret
ficoms
outsb
daa
dec
adc
pop
sub
and
push
xchg
cmp
mov
push
jbe
nop
push
mov
movsb
imul
std
add
mov
mov
dec
add
fistps
mov
lock
aas
out
xor
mov
or
cmp
sub
jb
shrb
jbe
mov
add
xor
int3
fnstenv
dec
hlt
xor
xchg
sbb
mov
in
shrb
ret
mov
add
sub
add
adc
cs
push
push
sbb
mov
dec
cli
inc
xchg
std
or
cmp
jae
dec
jle
push
rclb
pop
mov
pop
roll
push
push
mov
push
mov
test
add
mov
jge
lea
outsb
cli
pop
loope
repnz
dec
loop
pusha
mov
subl
jle
dec
add
lret
das
cwtl
add
ffree
es
ljmp
rcrl
pop
cmp
rcr
xchg
push
add
mov
xchg
shl
push
jl
push
lods
or
pop
aad
mov
and
mov
push
sbb
xlat
fldt
es
jp
jg
pusha
adc
mov
notb
out
sbb
cmp
test
sahf
adc
mov
push
ret
mov
mov
push
adc
movsb
adc
jp
sbbl
in
lds
inc
leave
sbb
out
mov
inc
adc
jecxz
shl
lcall
jnp
mov
xor
cltd
jne
mov
cltd
stos
orl
jecxz
add
pop
cmp
cmp
imul
test
adc
add
mov
inc
ds
pop
mov
push
ja
push
inc
add
or
mov
xchg
aaa
jne
push
lcall
sbb
and
xor
aam
mov
cmp
ss
xor
add
adc
mov
inc
or
jle
aad
cli
pop
mulb
rolb
subl
push
mov
push
xlat
cmpl
push
pop
xor
fisttps
lcall
sbb
sub
sbb
or
xor
jg
inc
jecxz
popf
jbe
rorb
in
js
mov
jns
orl
mov
aaa
sub
pcmpgtw
sysenter
bound
and
mov
jnp
mov
push
fidivl
sub
scas
xchg
pop
mov
inc
inc
cmp
adc
mov
fld
sub
fsubp
sbb
sbb
xchg
jmp
push
in
les
push
cmp
adc
je
push
pop
divl
stc
jg
dec
imulb
push
aad
cmp
adc
sub
test
aam
xchg
jl
ret
mov
cmc
add
lcall
mov
add
outsl
test
shlb
pop
xor
adc
dec
adc
aas
jl
movsb
inc
mov
rcl
xor
mov
lods
rcrb
cmpps
mov
mul
cmpsl
les
mov
mov
add
out
out
imul
divl
loope
jns
xchg
stos
xchg
pop
scas
xchg
mov
or
cld
leave
sub
mov
pop
pop
stos
pushf
jmp
and
fwait
and
sub
cmp
rol
fldl
movsl
fisubrl
stos
xor
sbb
inc
lods
adc
stos
mov
xor
dec
sbb
mov
mov
jmp
jge
rorb
and
es
das
push
xor
iret
add
add
jle
leave
ret
idiv
sbb
cmp
pop
sbb
push
mov
arpl
adcl
pop
scas
inc
sar
jecxz
aad
cs
push
jbe
and
int
pop
test
xchg
or
jb
lret
xor
adc
push
xchg
cltd
inc
ret
mov
out
pop
xchg
pop
jmp
popa
std
adc
fs
mov
sti
mov
inc
cld
fimuls
andl
mov
add
sbbl
call
int
mov
aaa
enter
jg
dec
push
dec
add
jmp
rcrb
or
bound
pop
pop
sbb
test
test
mov
mov
mov
and
jle
inc
cmp
or
sbb
jg
testb
stc
xorl
adc
and
jge
or
mov
and
add
jmp
fcomps
cmp
add
mov
add
add
mov
loop
inc
out
cs
jmp
xchg
repnz
out
jb
fldt
test
int
jecxz
sbb
out
ffree
xchg
leave
lcall
sbb
cltd
lock
imul
push
ret
pusha
add
lods
out
loope
and
pop
mov
xchg
push
sbb
test
mov
ja
add
sub
enter
mov
inc
gs
pusha
push
je
xor
mov
push
adc
sub
or
dec
add
icebp
push
inc
sahf
adc
dec
pop
mov
test
push
adc
imul
jb
inc
sbb
ss
mov
std
rcl
into
cmc
test
into
pop
cld
mov
inc
rorl
iret
cmp
dec
clc
add
cmp
mov
insb
sarb
pop
int3
lods
arpl
fbld
loopne
icebp
cmp
ret
ja
aas
mov
jo
push
ret
pusha
scas
daa
jo
aam
test
mov
or
mov
sbb
xchg
sahf
mulb
adc
int3
mul
sub
sub
xchg
xor
push
xchg
push
dec
insl
call
mov
pusha
inc
js
lcall
enter
sub
pop
pop
enter
cli
addr16
push
iret
inc
sub
ljmp
inc
dec
nop
mov
sbb
movsldup
bnd
dec
adc
xor
xor
test
push
dec
or
movsb
nop
sub
sbb
adc
lods
rorb
es
jg
sub
lret
out
xchg
hlt
jno
testb
jl
insl
mov
jmp
sub
lcall
sbb
inc
cwtl
mov
push
shr
dec
addb
push
jecxz
out
das
xlat
cwtl
fisttpl
ror
movsb
and
add
out
fdivs
inc
push
ret
xchg
movsb
rorb
pop
lock
dec
push
lret
sbb
jle
push
xor
mov
into
negb
or
jecxz
fcomi
add
cmp
lcall
outsl
ss
fistps
cmc
xor
dec
ret
leave
push
in
sub
xchg
adc
shll
stos
insb
popa
sub
jge
pusha
mov
ror
cmc
inc
lret
dec
jg
movsb
xor
pop
lock
into
imul
out
repnz
aaa
lcall
out
fdivr
inc
add
dec
push
inc
into
or
les
clc
rcr
xlat
orl
sub
push
xor
xchg
dec
repnz
mov
inc
xchg
nop
sbb
mov
sbbl
push
fimuls
dec
movsb
test
outsb
sub
inc
add
sarb
cli
mov
out
adc
rcl
mov
pop
sub
inc
leave
imul
mov
call
inc
mov
movsb
nop
xor
add
mov
dec
xchg
push
mov
sub
jno
enter
dec
push
sti
out
pop
sarb
mov
idivb
push
and
sub
int3
push
inc
push
loop
movsb
sbb
subb
loope
les
lret
jno
testb
scas
testb
das
movsl
and
and
mov
call
and
les
mov
test
xchg
add
xchg
scas
pop
cmpsl
pop
or
push
push
cmpsl
cli
xchg
sbb
fnsave
leave
divb
cs
in
add
xchg
movsl
test
enter
imul
mov
pusha
sub
rorb
mov
loop
and
or
test
scas
hlt
cmc
pop
xchg
dec
xchg
add
mov
int3
js
pop
idivl
dec
fldl
push
loop
ficoms
and
pusha
dec
pop
sbb
pop
dec
sbbb
cli
jge
mov
inc
bound
pop
aas
fwait
orl
jno
cmp
outsl
dec
xchg
push
mov
out
jecxz
jne
push
cmpl
outsb
xchg
imul
pop
ja
mov
mov
iret
dec
push
jle
pusha
mov
jge
pushl
xlat
dec
dec
pop
mov
out
loop
inc
add
dec
cmpsl
cmp
adc
loop
mov
dec
adc
xor
sahf
inc
in
jbe
push
xor
mov
push
ret
xchg
cwtl
sbb
adc
fcomps
stos
pop
in
sub
sub
xor
ret
xchg
int
add
loope
inc
adc
dec
cmp
outsb
mov
push
jae
push
and
sbbb
xchg
lret
in
fucomi
dec
fisttpl
pop
repnz
inc
test
ret
out
out
ficoms
gs
repnz
popf
out
mov
bound
ljmp
popl
sub
sub
repnz
dec
cmp
pop
adc
shll
test
ja
or
inc
jp
test
imul
pop
dec
popf
push
icebp
int
pop
xor
fidivl
xchg
add
rorl
cmpsl
cmc
leave
mov
jmp
or
pop
push
ljmp
push
fnstenv
lds
repz
addb
jo
adc
xor
jo
push
mov
mov
xchg
add
push
mov
int3
pop
cli
xor
jnp
jbe
inc
cli
pcmpeqb
mov
movsb
fwait
cmp
xor
shrb
pop
bound
ljmp
fidivl
sbb
dec
add
es
and
mov
and
mov
cmpsl
inc
mov
ds
mov
aas
cmp
inc
divb
add
cmp
cmp
jns
pop
ja
jno
enter
mov
or
pop
dec
sbb
pop
add
icebp
add
push
mov
fcomip
add
ljmp
dec
loope
push
mov
ds
lahf
jmp
cmpsl
push
out
inc
es
ret
loop
outsb
cs
fsubrp
out
lcall
test
stos
aam
aas
jbe
int
fwait
adc
cld
cmp
jo
pop
ljmp
subl
mov
and
addr16
mov
fnstsw
cmpsl
jne
aas
into
insl
inc
xchg
sbb
dec
xor
andl
xchg
dec
fildll
adc
xchg
call
push
or
loop
js
test
push
and
pop
cmp
or
mov
les
mov
mov
outsb
xor
mov
mov
and
loop
push
std
aad
test
fimull
stos
pop
xor
jl
shrl
lods
fnstenv
notb
xor
dec
mov
stc
aam
inc
inc
jo
xor
loopne
test
inc
lods
adc
xor
mov
aam
sbb
repnz
xor
cmpsb
jle
dec
movsb
sub
sub
xchg
cmp
shll
pop
loop
sub
movsl
fdivrs
int3
cwtl
sbb
mov
push
cli
sub
insl
jo
ficomps
ljmp
pop
mov
repnz
js
pop
cmp
push
adc
addl
cld
aaa
scas
inc
inc
adc
dec
inc
adc
mov
out
into
pop
or
mov
cmc
scas
inc
mov
ds
pop
mov
sbb
xchg
push
or
pop
jbe
cltd
notb
sbbb
divb
sbb
push
xchg
xchg
mov
popa
sbb
pushf
xor
push
or
pop
inc
lock
mov
mov
int3
lcall
mov
aas
mov
sbb
cmc
popf
mov
mov
or
lea
mov
and
cli
sbb
add
inc
pop
push
inc
jp
jae
push
inc
lock
jbe
inc
shrl
pop
xor
icebp
inc
sub
add
movsb
add
ffreep
data16
fisubrl
loopne
jge
fnstsw
cltd
fdivrs
sbb
ret
sub
dec
push
orw
repnz
and
ja
pop
loop
or
dec
out
pop
pop
ficomps
adc
out
mov
sub
jge
adc
cmp
repnz
outsl
popf
das
pop
cmp
mov
es
mov
mov
sbb
icebp
jbe
pop
insb
jmp
mov
sbb
mov
cwtl
mov
add
add
mov
divb
push
mov
enter
pop
ds
cmp
and
lods
sub
and
ficoml
add
adcb
jl
es
sub
popa
cli
int3
or
scas
dec
fstps
mov
jle
popa
test
fwait
xchg
inc
test
mov
or
add
jg
dec
dec
fwait
xchg
int3
or
mov
cs
bound
loopne
mov
cwtl
imul
inc
pop
call
lahf
data16
ss
adc
icebp
sbb
xor
sbbl
inc
pop
aas
push
scas
xchg
das
mov
mov
jle
mov
push
xor
mov
in
pop
mov
mov
imul
dec
dec
lods
loope
push
sbb
or
in
sub
jb
add
sub
sub
or
adc
pop
or
ret
cmc
cmc
dec
add
pop
lods
std
push
mov
push
pop
inc
or
jae
aam
jnp
fs
stos
add
jb
push
or
jb
lret
popa
push
test
sub
loop
jo
pop
js
xor
xor
cld
xchg
sbb
loop
sbb
push
fdivrp
mov
mov
jbe,pt
pop
mov
or
addr16
test
xor
and
mov
ja
movsb
inc
add
and
xor
mov
cli
fcomps
xor
mov
jne
xor
out
mov
and
stc
and
fwait
or
and
out
xor
fbld
addb
scas
daa
jnp
nop
jmp
and
jg
inc
adc
outsl
add
outsl
dec
mov
or
jnp
mov
jecxz
xchg
adc
cld
scas
and
pop
ss
push
cmpsl
cmpsl
sti
aam
jle
aad
or
popa
test
jno
push
xor
cmp
lock
mov
and
es
pop
push
dec
sbb
repz
test
addl
fsubrl
loope
in
fistpl
cmc
icebp
lcall
pop
jns
lea
xchg
xchg
imul
mov
fsubl
sarl
lahf
push
adc
div
sub
mov
in
add
loop
scas
ss
pushf
je
jge
lcall
mov
jne
or
into
mov
lcall
aaa
sub
push
add
daa
gs
into
dec
inc
sbb
pop
push
sti
lcall
mov
cli
test
cmp
aas
cmp
pop
cmpsb
neg
insl
loope
and
xchg
decb
jg
mov
mov
xlat
push
push
dec
lock
gs
ja
loope
xlat
push
xchg
push
mov
ljmp
outsl
pop
xchg
into
push
push
in
in
mov
addr16
sbb
cmp
imul
jmp
jecxz
xchg
dec
adc
jle
jo
movsl
push
loop
scas
mov
into
mov
and
sbb
jg
or
cltd
fistps
xchg
ret
and
pop
jecxz
xchg
lods
leave
sbb
in
add
sbb
stc
loope
popa
mov
bound
add
cmp
xchg
adc
jecxz
sbb
mov
das
fldenv
cmovl
movsb
dec
outsl
or
xor
leave
push
dec
dec
jbe
sub
subl
lret
arpl
cmp
or
adc
adc
fisubrl
fidivrs
push
cltd
push
sub
loope
icebp
shlb
cltd
inc
cwtl
xor
jecxz
inc
mov
dec
mov
pusha
and
cld
mov
mov
call
call
cmpsl
jp
lcall
push
divb
xchg
lock
jle
mov
mov
xor
push
out
push
pop
movsb
daa
call
adc
bound
sbb
push
xlat
outsb
xchg
add
sbb
sbb
in
jae
lds
add
cmc
hlt
cmp
icebp
idivb
sbb
add
mov
push
xor
xchg
rcrb
xor
pop
xchg
pop
loop
cld
mov
sbb
jg
sub
xor
sbb
cmp
mov
sub
mov
sub
pop
mov
stos
sbb
loope
dec
push
mov
fwait
sbb
sbb
dec
sbb
fwait
pop
xorl
loope
loope
in
imul
xor
loope
sbb
and
mov
pop
outsb
mov
loop
pop
xor
mov
lods
movb
jle
cmc
jge
movntq
pop
mov
cmc
mov
popl
dec
enter
xchg
psadbw
pop
pop
adc
jg
pop
fiaddl
push
jne
or
arpl
add
dec
push
adc
dec
push
add
jg
sbb
cld
ss
mov
jne
pusha
push
pop
orl
xor
cmp
je
sub
pop
aam
out
sub
and
jb
es
daa
imul
lods
push
jge
xchg
stos
ret
faddl
rclb
int3
repz
adc
xchg
xchg
test
fwait
add
and
in
mov
adc
aad
insl
mov
ret
lods
push
inc
pop
mov
and
and
cmc
add
dec
push
stos
out
in
mov
and
lods
push
repnz
and
into
sbb
mov
lds
movsl
xor
push
mov
mov
lret
loopne
jo
push
sub
testb
jg
sbb
adc
xor
insb
sub
loop
lock
in
inc
cmpsl
and
cwtl
xchg
movsb
aas
jg
inc
enter
jbe
dec
jne
jge
push
jecxz
mov
sbb
mov
and
in
sbbb
dec
sub
in
or
divb
loope
xchg
fwait
mov
inc
push
pusha
mov
jne
loop
jge
outsl
mov
mov
jne
iret
faddl
add
add
sbb
clc
rclb
cmp
adc
repz
jbe
cmc
scas
insl
inc
cld
out
loop
sub
sub
mov
imulb
mov
sbb
inc
mov
and
cmp
sbb
mov
hlt
addr16
jnp
dec
movsb
inc
sub
adc
iret
scas
mov
push
jg
pusha
outsb
pop
test
sub
push
movsb
xchg
jle
jmp
sub
jg
mov
sbb
es
test
lock
jle
jae
popf
adc
int
dec
cmpsb
call
clc
orb
push
in
cld
icebp
cld
cmc
out
insl
mov
mov
dec
xchg
arpl
push
sbb
test
sub
test
repz
out
arpl
add
lea
adc
pushf
inc
pop
inc
mov
subb
xchg
and
push
scas
push
into
push
sub
std
push
hlt
iret
mov
mov
jbe
ret
add
push
pop
sahf
repnz
test
dec
es
add
mov
mov
add
push
xor
movsb
cmpsb
out
neg
mov
xchg
add
ja
jnp
xchg
mov
wrmsr
imul
pop
loop
outsl
add
cmpsl
sti
clc
popl
sub
xor
mov
leave
pusha
lods
stc
xchg
das
jl
lret
inc
div
add
je
push
movsl
pop
push
ja
push
xchg
mov
lds
orl
sahf
jo
int3
sbb
loope
fwait
bound
pop
cmc
lds
and
sub
sbb
push
cli
lods
sub
xchg
ja
mov
inc
pop
mov
xor
stos
int3
sub
mov
pop
dec
jo
sbb
out
and
shr
inc
mov
jbe
mulb
add
repnz
cmpsb
testl
scas
pop
xor
mov
cmpsl
and
add
js
dec
mull
nop
lea
sbb
les
cmp
loop
pop
sbb
jne
int3
arpl
pop
or
jecxz
aas
or
insl
xlat
pop
xor
jg
ficoml
add
push
lret
aas
mov
ss
popf
push
inc
jmp
pusha
push
cmc
and
cli
stos
orb
or
mov
daa
es
aaa
fs
clts
int
sub
jne
inc
cmpl
mov
adc
sub
or
dec
sbbb
or
cmp
cmp
adc
sbb
imul
push
int3
push
loope
clc
dec
cmp
mov
cmp
push
and
outsl
dec
push
adc
dec
subl
adcl
out
scas
lahf
pop
das
cmc
loopne
push
sub
shlb
sbb
dec
add
movsb
dec
out
daa
add
inc
popf
jl
dec
mov
and
and
xor
pop
mov
xchg
xchg
loop
sub
xchg
cmp
scas
sbb
xchg
lock
je
loop
inc
les
jecxz
add
or
dec
jne
pop
test
cmc
and
cwtl
push
and
popa
push
push
sub
ret
fwait
cmp
aas
cmp
dec
add
pusha
or
inc
sbb
pusha
mov
xor
or
sub
inc
insb
jmp
fildl
mov
hlt
jne
jge
and
pop
pop
dec
dec
sub
and
out
testl
xchg
and
das
pop
cmp
push
int
out
push
add
das
icebp
xchg
movsb
mov
sbb
cmp
scas
and
in
mov
scas
mov
ffreep
sbb
adc
loop
adcb
pop
mov
or
push
clc
push
add
icebp
into
xchg
pusha
cmpsb
inc
jmp
dec
jg
jbe
pop
pop
jmp
movsb
push
popf
adc
pop
cld
lfs
pop
mov
xchg
mov
cmp
add
lret
sbb
mov
adcl
sub
mov
sbb
rcl
jmp
stos
sahf
mov
push
adc
sub
loopne
pop
push
pop
lret
jmp
sbb
mov
ss
ss
decb
iret
dec
jecxz
dec
xchg
and
mov
scas
add
inc
push
aas
xor
outsb
dec
cmp
push
stc
xchg
push
push
cmp
add
arpl
pop
push
jmp
negl
pop
xor
xchg
dec
out
fndisi(8087
cld
jns
repz
adc
add
test
xlat
jbe
les
adc
bound
into
pop
mov
nop
lea
xlat
mov
pop
enter
mov
jecxz
aaa
jle
push
mov
lret
push
sbbl
ret
out
daa
add
fsub
mov
pop
loope
out
leave
subl
jg
mov
lret
pop
shl
les
cli
movsl
push
jb
negl
jp
and
xchg
and
aaa
sbb
mov
cmp
pop
push
outsl
push
inc
mov
flds
xor
push
sti
fidivl
je
fistl
push
add
pop
cltd
dec
jle
cmc
and
inc
mov
sbb
mov
pop
sbbl
cmp
movsb
lret
leave
gs
push
sbb
mov
cmpsl
mov
sbb
mov
xor
ljmp
fcomip
xchg
lcall
adc
loope
mov
push
and
and
add
jns
cmp
repz
repz
sbb
gs
adc
mov
pop
loope
adc
xchg
xor
pop
loope
xor
ret
or
or
insl
out
stc
push
sub
icebp
mov
and
pop
dec
rorl
and
mov
mov
ret
sub
mov
and
mov
ret
sbb
cmp
push
and
cwtl
sbb
or
push
pusha
cmpl
mov
sbb
and
dec
fldenv
pop
bound
aad
dec
push
and
sub
dec
cld
loop
jbe
sub
add
arpl
or
xor
popf
roll
pop
sbb
loop
ret
mov
inc
mov
lahf
sti
dec
call
xchg
addb
stos
or
adc
add
in
mov
pop
cld
sbb
aas
repnz
cmc
fdivl
test
and
popf
sub
pop
stos
inc
pushf
fisttps
sbb
mov
outsl
dec
pushf
lds
sub
sub
sub
clc
pop
es
xchg
loop
roll
outsb
push
mov
mov
pop
or
fcmovu
loop
pop
dec
frstpm(287
shl
push
push
dec
pushf
out
loopne
xchg
adc
xorb
in
pop
loopne
xchg
add
in
cmpsb
ret
stos
dec
mov
pop
ljmp
popa
push
fadds
jge
jmp
fwait
or
out
mov
jl
addl
in
pop
mov
push
mov
movsb
xor
mov
xchg
insl
and
arpl
or
cmp
sub
out
outsl
jns
sub
insl
sbb
leave
sub
push
ja
dec
jo
or
add
adc
mov
push
sub
and
insb
sarl
sub
rol
inc
pop
inc
push
xor
inc
xor
enter
mov
test
jge
fsts
pop
mov
imul
cmp
insl
mov
cli
stos
inc
adc
std
js
lahf
jge
sub
xchg
das
lds
add
cmp
out
icebp
mov
dec
pop
cmpsb
cli
xchg
je
and
test
jns
out
xor
pop
fidivrl
xchg
cmp
les
push
jg
vaddss
enter
and
dec
pop
daa
frstor
das
mov
mov
sbb
fisubl
fldt
fisubs
mov
dec
jge
mov
cmp
jge
push
jne
stos
loopne
int
aam
sub
mov
push
push
int
icebp
sbb
cld
and
inc
cmc
jl
dec
dec
and
jbe
stos
sbb
adc
xorl
jg
lret
push
ja
or
mov
push
mov
xor
ja
enter
es
loope
push
cmp
sub
inc
xlat
pop
out
xor
es
div
xor
mov
jne
jl
imul
leave
mov
and
cwtl
testb
add
xor
xor
push
push
subb
sub
test
and
sbb
cmp
lock
push
push
push
push
dec
lods
daa
jne
insl
adc
fidivs
push
lods
rcrb
mov
or
mov
inc
fwait
pop
push
lods
cmp
add
xchg
dec
sub
xchg
neg
add
xchg
fsts
cs
fldenv
roll
dec
test
adc
insl
cmp
lock
sahf
jl
ret
mov
icebp
xchg
inc
jbe
flds
and
loope
add
lcall
sbb
imul
mov
lods
loopne
jbe
cmpsl
fbld
xor
mov
into
or
jg
stos
sub
lahf
add
xchg
jg
and
out
sbb
loop
pop
push
or
movsl
push
repnz
add
sahf
pop
bound
outsl
xchg
loopne
movsl
dec
jmp
shll
cli
dec
inc
sbb
outsb
adc
call
cmp
cmpsb
adcb
xchg
cmc
insl
ja
push
data16
inc
add
mov
repnz
xchg
cmp
sti
scas
movsl
jge
xchg
jne
imul
lahf
daa
push
push
mulb
sbb
pop
fisttps
sub
aam
sub
into
jecxz
jo
ret
inc
sahf
inc
inc
pop
push
es
sub
ss
sub
fildl
and
aaa
shlb
das
push
test
roll
and
fwait
shrb
or
aam
pop
jl
scas
into
js
outsb
add
test
or
jnp
add
cltd
dec
mov
mov
cmc
inc
std
add
fadds
sbb
stos
aaa
mov
test
repz
jbe
outsl
mov
and
sbb
inc
js
hlt
hlt
les
push
test
dec
adc
cwtl
or
mov
movsl
sahf
sbb
or
out
fisttpl
clc
test
cld
lret
inc
xchg
add
pop
adc
jecxz
sar
pop
xchg
sbb
add
adc
sub
pop
fwait
movl
add
adc
and
sbb
or
adcl
add
fiaddl
mov
sahf
imul
or
orb
jmp
das
je
lods
pop
dec
and
call
cmp
jnp
movsl
and
mov
cmp
les
push
fsubs
out
rorl
out
jb
xchg
and
sub
pop
ljmp
neg
and
sarl
jnp
mov
push
mov
dec
inc
adc
dec
mov
xchg
add
dec
add
loope
cmp
mov
fcompp
inc
loopne
inc
fmuls
sahf
rorb
mov
jne
fsubl
cmc
adc
sbb
ds
dec
ss
fs
mov
roll
push
mov
sub
or
fistl
fimull
ret
xor
sbb
push
xchg
and
adc
xor
fsubr
inc
mov
pop
movsl
imul
das
or
nop
outsb
pop
sub
push
out
mov
movsl
test
popf
in
mov
sub
jp
je
xchg
inc
push
test
ret
popa
int
in
jno
xchg
mov
push
adc
jae
imul
jns
loop
test
pop
shll
dec
loopne
xor
add
fadd
adc
adc
pop
fldt
fneni(8087
sbb
mov
mov
or
dec
push
dec
jmp
pop
das
push
mov
push
push
pop
sbbb
iret
or
adc
sbb
and
sub
les
inc
adc
or
jno
icebp
push
repnz
das
clc
movsl
lods
push
out
mov
sbb
cmp
mov
lret
jo
and
add
std
adc
ja
or
mov
cmp
dec
dec
incb
push
mov
sbb
repnz
in
incb
dec
mov
inc
cmp
fdivl
mov
int
outsb
je
and
mov
mov
mov
ss
xlat
pop
ja
pop
js
xchg
jne
or
hlt
fst
or
dec
sub
pop
fwait
inc
arpl
xor
sbb
sbb
imul
popa
loop
shrl
or
sbb
mov
les
add
cmc
fdivr
test
inc
mov
test
fst
sbb
mov
pop
decb
jp
repnz
test
mov
popf
fldenv
add
jge
out
icebp
add
cli
pusha
add
scas
aam
enter
inc
dec
and
jmp
inc
std
jecxz
fsub
imul
in
or
mov
mov
cmc
daa
inc
shlb
je
rcrb
push
jp
xchg
in
cmp
fs
adc
mov
mov
or
orb
jb
or
jmp
pop
adc
loop
sub
pop
and
je
dec
push
and
out
std
jo
sbb
mov
in
push
mov
fimull
je
push
sbb
je
ficomps
fistpl
int3
pop
jne
inc
shl
push
ret
cmp
xchg
fcomps
lahf
enter
inc
mov
xchg
push
out
sub
xorb
dec
pop
ds
sahf
lock
icebp
inc
or
mov
dec
add
fs
mov
add
mov
mov
add
mov
or
push
popf
shlb
je
xchg
dec
mov
pop
das
jb
xor
popf
pop
mov
scas
insl
aam
ds
into
mov
cmp
shrl
pop
stc
loop
or
movsl
sub
lods
adc
gs
clc
or
push
pop
aad
push
sub
inc
jae
dec
fbld
dec
lcall
mov
sbb
dec
negw
shr
sbb
add
test
loope
push
mov
pop
ret
in
cmp
popf
push
mov
dec
rolb
adc
lret
into
aad
aad
mov
adc
mov
add
movsl
sbb
sub
outsb
or
setle
xchg
pop
pusha
shll
adc
sbb
insb
int
or
rol
mov
mov
mov
cmc
and
push
andb
xchg
dec
icebp
pop
flds
and
outsb
dec
sub
fdivp
add
mov
sbb
aas
in
adc
lea
int
push
cmp
jnp
dec
sbb
push
cmc
xor
fstps
negl
push
xor
sbb
push
clc
push
ds
cmpsb
cwtl
lock
xor
ljmp
push
mov
push
pushf
cmc
dec
outsb
dec
adc
push
pop
or
push
add
dec
mov
adc
ret
xchg
pop
mov
pop
sub
ret
inc
and
pop
fcompl
movsl
cmp
sbb
lret
fldenv
mov
pop
in
add
pop
sub
mov
jge
mov
add
sbb
out
sbb
icebp
cmp
lea
sub
std
sub
sub
xchg
inc
mov
lret
pop
ds
adc
add
insb
cmc
mov
enter
push
jle
add
mov
orl
pusha
mov
popf
ljmp
add
dec
dec
xchg
popf
and
rcrb
ds
lret
outsb
iret
xchg
jp
jg
out
lds
movb
fnstsw
push
xchg
jecxz
loop
daa
and
cwtl
cmpsb
or
pusha
or
pusha
loope
hlt
decb
fbld
mov
aas
mov
mov
test
pop
shl
sbb
inc
sub
mov
mov
rcll
cs
add
outsl
cmp
xchg
fstpt
inc
xchg
or
in
or
cltd
xorb
push
mov
fldl
in
mov
mov
out
sub
pusha
imul
je
dec
xchg
pop
mov
inc
mov
ljmp
dec
inc
inc
xchg
mov
loopne
push
lea
adc
inc
fldcw
in
jecxz
push
scas
pushf
add
mov
sbb
xchg
jmp
idivl
cmp
sub
jl
pop
scas
fidivrs
pusha
repz
sub
cmpsb
orb
xchg
mov
sbb
sbb
push
cltd
aad
mov
or
pop
je
into
mov
loop
aas
jb
mov
mov
ds
add
cwtl
out
stc
mov
adc
dec
or
jae
pop
or
xchg
cmp
fwait
pusha
inc
sbb
fdivrs
shl
imul
rcrl
or
aas
sbb
cld
gs
in
xchg
pop
xor
icebp
nop
cwtl
push
jne
fnstenv
jle
cmpsl
add
jecxz
mov
inc
in
xchg
fsubs
push
xlat
sbb
outsb
jg
xchg
push
out
fs
imulb
cmp
push
pop
clc
lahf
daa
and
pop
jae
inc
aam
push
aad
sbb
xor
adc
jmp
mov
sahf
in
jle
pop
inc
push
cmp
sbb
pop
int3
jbe
stc
pushf
leavew
int3
loope
pusha
adc
mov
es
pusha
arpl
push
add
cmp
inc
loope
cmc
test
inc
add
jb
test
fwait
hlt
pop
xchg
rcrl
or
xor
in
mov
and
sub
mov
jne
pop
lcall
loope
mov
dec
lret
mov
sarl
add
inc
andb
sub
jge
inc
sti
xchg
pop
testb
inc
fisubrs
test
sbb
cmp
jne
rorb
inc
stc
mov
loop
cmpsb
fldl
xor
lods
scas
gs
in
or
adc
sbb
and
dec
xlat
in
pop
stos
clc
push
sub
sbb
mov
push
push
outsb
jnp
cltd
addr16
mov
xlat
sti
add
sub
jecxz
jbe
add
jae
add
or
add
adc
sahf
push
popf
fistpl
cmpsl
sub
aad
mov
clc
jle
and
pop
jle
mov
mov
cmp
jb
shll
push
inc
sub
sbb
std
mov
xchg
cmp
lcall
sub
sbb
mov
mov
add
push
inc
push
or
das
mov
out
push
lock
hlt
and
loopne
inc
push
popf
icebp
mov
je
div
adc
mov
fstl
inc
clc
fcompl
or
loopne
pop
and
sbb
jnp
jg
xor
loope
mov
jge
sbb
call
xchg
mov
test
push
sbb
roll
mov
hlt
test
inc
pop
ret
sti
mov
in
ss
inc
into
fisubs
pop
xor
jg
xchg
ljmp
or
mov
cld
dec
sbb
cmpl
loopne
es
or
jns
push
mov
sub
js
mov
jmp
test
push
xchg
mov
add
loope
rcrb
push
lea
mov
inc
icebp
andb
lcall
pusha
cmp
mov
mov
dec
push
xlat
sbb
push
and
hlt
push
mov
mov
adc
inc
pusha
sub
push
bound
testl
dec
and
sbb
mov
and
xorl
add
xchg
cmp
mov
push
lods
shll
sahf
rorb
sbb
pause
lcall
cli
push
mov
sbb
loopne
out
lcall
sub
and
push
adc
sbb
sub
mov
mov
loopne
xchg
orl
stc
adcl
adc
dec
push
or
push
aam
add
xchg
cmpsl
mov
adc
bound
lods
std
scas
int
hlt
mov
dec
adc
xchg
lcall
stos
xor
sub
leave
xor
fisubl
xchg
push
in
stos
cmp
inc
mull
iret
or
sahf
aad
sub
ljmp
and
mov
pop
mov
imulb
gs
pop
fwait
cmp
pop
call
sbb
cmpsb
dec
popa
add
pop
test
je
and
mov
inc
cmp
mov
inc
adc
int
cli
xor
pop
cmp
rol
or
pop
cli
jno
iret
ss
outsl
push
aas
dec
xor
jno
and
and
cwtl
cmpsb
not
mov
insb
mov
xchg
xchg
push
cs
push
orb
sub
xor
adc
push
or
and
clc
mov
fdivl
lret
mov
je
out
and
xor
dec
jne
movsl
adc
outsb
lcall
push
cli
outsb
pop
scas
mov
push
loop
orl
clc
arpl
cmc
lret
dec
pop
and
push
ss
push
xchg
dec
daa
jle
std
fwait
pop
je
inc
ds
cltd
adc
arpl
adc
sahf
negb
cmpsb
mov
jo
insl
nop
push
sbb
mov
enter
mov
and
sub
inc
xchg
subb
sbbl
or
xchg
sbb
movsb
jnp
testb
imulb
add
jecxz
jecxz
in
popa
jl
dec
loop
in
and
fstps
out
xchg
mov
pop
loope
jns
adc
sbb
ret
or
sbbl
out
cwtl
fimuls
outsb
or
mov
sbb
adc
mov
out
mov
jmp
jo
loop
popa
lcall
or
mov
outsb
pop
lods
inc
fstpt
xchg
inc
mov
addl
das
fdivrl
cs
xor
add
jl
xchg
xchg
mov
inc
jne
pop
call
ljmp
inc
xor
lods
mov
push
nop
rclb
xchg
jb,pt
pop
leave
xor
sub
fs
or
push
hlt
dec
sbbl
lcall
mov
pop
mov
xchg
add
jg
jne
lret
dec
sahf
cmp
stos
jge
test
cmpsb
sbb
jle
repnz
cltd
add
sti
mov
sbb
sub
or
inc
fwait
in
fucomi
mov
inc
cmp
dec
cmpsl
cmpsl
or
dec
adc
sub
pop
adc
sbb
jmp
xchg
sbb
adc
ss
adc
xchg
sbb
lret
sbb
mov
push
inc
adc
push
std
push
dec
sub
mov
leave
add
inc
dec
andb
push
or
js
add
xchg
push
fadds
push
add
int3
and
lds
in
icebp
cmp
cmpb
push
lahf
mov
cld
cli
in
pop
mov
fdivs
dec
sbb
daa
fiaddl
xchg
dec
cmp
rcll
xchg
cmp
push
push
pushf
push
mov
or
loop
fst
jb
lahf
or
pop
mov
jle
testl
jae
cmp
pop
adc
insb
addl
push
sbb
out
and
adc
loop
data16
adc
mov
test
jbe
scas
mov
adc
addb
push
inc
or
cmp
jl
push
std
add
loop
push
lods
cmpsb
subl
or
call
push
mov
inc
loope
rolb
add
mov
cs
jb
inc
movsl
outsb
cmp
dec
fwait
insl
sarl
pop
addb
cmpsl
jle
test
pop
dec
int3
push
or
and
mov
arpl
push
add
pop
push
movsl
addr16
add
ret
loope
test
lahf
pop
mov
dec
aas
mov
scas
fcmovnb
cmp
dec
sbb
ret
loop
mov
es
rclb
sbb
xchg
mov
jecxz
mov
test
sarl
addb
pop
add
pop
bound
nop
adc
andl
sub
and
popf
lcall
xor
inc
sub
xchg
dec
or
cli
fcmove
test
stos
hlt
das
push
imul
icebp
sbb
and
inc
mov
sub
cli
ret
cmp
outsl
push
test
daa
fwait
loope
mov
mov
sub
add
add
mov
xchg
sub
ljmp
es
cwtl
mov
lods
cmpsb
push
pusha
mov
dec
ja
push
cs
mov
jge
jbe
adc
outsb
cwtl
icebp
jge
inc
sub
sbb
inc
xor
cli
jp
sub
jbe
lahf
or
ljmp
push
fisubrs
add
jle
pop
cmp
jl
mov
and
bound
cmp
push
inc
pop
out
inc
loop
jge
sbb
cmp
rolb
adc
or
sub
dec
adc
test
dec
in
sub
sbb
stos
push
mov
push
xor
outsl
pop
mov
jnp
repnz
or
out
inc
in
xchg
gs
adc
sbbb
pop
jno
jnp
mov
sbb
out
cmpsl
stc
es
stos
mov
add
xchg
call
mov
mov
pushf
mov
sbb
movsb
and
int
inc
push
clc
mov
pop
cmc
dec
mov
and
sbb
sbb
pusha
stos
les
cli
mov
loope
loopne
cmc
xchg
orb
mov
cltd
stos
cmpsb
inc
pop
arpl
cltd
js
sbb
jg
enter
movsl
pop
cmp
mov
sbb
mov
dec
xchg
or
jl
es
inc
jo
fstpt
gs
xchg
jae
adc
fidivs
lds
pushf
sub
push
fwait
mov
inc
cmp
inc
push
push
mov
jmp
sbb
test
push
dec
movsb
test
push
sub
xor
cmc
dec
mov
movsb
out
sub
fwait
stos
mov
inc
test
filds
pushf
stos
dec
mov
and
mov
into
sub
fwait
test
and
pushf
mov
xor
lahf
jp
shll
adc
pop
and
xchg
adc
xor
pop
inc
push
mov
and
sbb
fldl
ret
lea
mov
jecxz
cmp
dec
mov
push
ret
add
int3
cmpsl
adc
and
cld
movlps
clc
sub
pop
xchg
rcll
pusha
and
loope
and
cmpsb
sbb
cs
sbb
iret
jb
dec
inc
jno
arpl
fsubl
push
int3
mov
addb
sbb
xchg
int3
fcomps
pop
ja
cltd
out
jnp
mov
xchg
sbb
sbb
je
jno
cmp
ret
mov
dec
ror
inc
jae
and
and
stc
icebp
jg
or
outsb
dec
sbb
stos
push
ret
sub
fdiv
lods
add
rorb
push
ret
mov
test
and
sub
add
nop
cmp
paddsb
pop
dec
fistpl
push
mov
mov
mov
out
in
out
gs
pop
cmpl
xchg
hlt
and
outsl
dec
dec
adc
sub
sub
sbb
dec
mov
jbe
jae
or
scas
push
stos
in
mov
xor
outsl
inc
mov
or
jo
insl
pop
cmp
inc
dec
int
dec
add
jl
stos
push
loop
je
hlt
mov
data16
stos
mov
sub
mov
mov
mov
and
mov
xchg
shll
cmp
fsubs
pop
xchg
aas
cmp
pop
testl
sub
pushf
mov
lods
xchg
outsl
or
cmp
xchg
or
sub
inc
jl
adc
rclb
negl
push
jle
bound
rcll
fwait
notb
ss
js
mov
popf
aad
lret
ret
enter
mov
inc
or
roll
and
adc
adc
jno
rcr
push
std
stos
arpl
pop
cmp
std
popf
ljmp
pop
sbb
sbb
repnz
cwtl
cmpl
nop
xlat
mov
movsb
jne
adc
add
dec
xor
xchg
mov
test
imul
call
dec
popf
sbb
fsubl
es
mov
fsub
add
cwtl
inc
enter
data16
pop
jg
aam
add
adc
faddl
imul
pop
adc
repnz
sbb
pop
adc
and
rolb
out
pop
lret
lmsw
mov
aad
je
test
push
int
inc
in
xor
jmp
pushw
in
add
lret
imul
add
or
inc
push
je
pop
enter
sbb
testl
inc
in
sbb
mov
adc
pop
pop
cmp
add
and
icebp
loop
mov
fwait
popa
sub
cmpsl
ret
out
sub
dec
push
push
xor
jmp
cmp
xor
dec
mov
dec
aas
cmc
pop
scas
pop
push
pop
ret
sti
test
dec
push
jmp
mov
cmc
push
cmp
cld
dec
inc
adc
xchg
xor
push
sub
add
xchg
imulb
inc
jb
pop
fwait
adc
mov
test
ret
test
adc
mov
mov
sahf
bound
cs
xbegin
jb
cmpl
dec
mov
inc
fsubl
xchg
cs
push
iret
mov
daa
sbb
lock
das
loope
sub
cmc
cmp
mov
pop
add
mov
or
jbe
jp
or
jle
aas
lcall
lods
push
cmp
lret
ret
or
lcall
and
sub
sub
movsl
or
fsubrl
jns
mov
mull
or
xor
sbb
sbb
mov
adc
xor
es
sarl
adc
pop
mov
enter
pop
repz
cmp
pop
lahf
push
mov
sahf
xor
int
push
mov
cs
adc
mov
jb
data16
sbb
dec
add
push
add
jmp
pop
sub
lret
mov
pushw
push
cltd
push
and
sbb
scas
notl
push
inc
dec
cli
loope
jecxz
push
shlb
lcall
push
pop
popf
into
pop
jg,pn
icebp
daa
xlat
mov
bound
cli
sub
add
pop
scas
cli
in
sarl
fmull
repnz
outsl
negb
testl
loop
clc
pop
add
imul
movsb
cmpsl
aaa
call
enter
xchg
or
add
sub
test
setg
in
sub
adc
loop
stos
push
out
add
push
addr16
jae
lcall
add
sbbl
cld
ficomps
sbb
lahf
jecxz
loop
pop
sahf
dec
mov
inc
cmp
mov
ret
add
fstpt
shr
xchg
lcall
lods
movsl
test
jl
das
jae
mov
ja
dec
inc
jecxz
hlt
repz
mov
into
inc
jmp
add
stc
negb
inc
dec
lods
mov
aas
or
mov
cmp
hlt
cld
jae
movsl
xor
ret
popa
inc
into
repz
jno
stos
pop
negl
hlt
imulb
sti
out
dec
jle
stos
rorl
lahf
push
inc
dec
or
mov
lcall
jp
popa
xor
inc
adc
rcll
cmp
sbb
xor
and
xor
rorl
sbb
push
das
inc
cmc
sbb
scas
xor
cld
mov
scas
out
aad
cmp
pop
xor
inc
sahf
or
mov
jmp
ret
xchg
das
ret
push
lret
leave
xor
or
sbb
adc
add
popf
ljmp
or
pushf
lds
lock
scas
xchg
push
inc
repz
data16
sub
cmp
dec
push
pop
add
mov
mov
push
mov
pushf
mov
xchg
adc
add
cwtl
pushw
mov
cmpsl
mov
or
mov
or
mov
or
mov
ds
cltd
pop
ret
in
jne
mov
dec
ljmp
jnp
pop
fimuls
mov
push
loope
add
adc
push
testl
mov
adc
dec
push
sub
aam
fmuls
and
loope
mov
pop
mov
jnp
pop
hlt
std
dec
neg
mov
sti
shll
mov
sbb
fsubrl
jne
mov
out
xor
adc
rclb
push
mov
sbb
aam
mov
fsubl
push
pop
movsl
aas
jecxz
sub
xor
cmpsb
xchg
out
jo
dec
push
sbb
pop
dec
das
and
lods
fcompl
sub
jmp
adc
xacquire
sub
push
sbb
or
or
adc
les
lock
xchg
mov
mov
pop
or
ficoms
mov
push
and
call
xor
jae
mov
mov
mov
inc
mov
and
mov
je
dec
addl
mov
add
push
bts
into
xchg
repnz
push
pop
mov
mov
popf
shl
rorl
iret
roll
loop,pn
lret
dec
sub
push
cmp
and
in
mov
gs
sub
cld
aam
jnp
add
lret
or
lock
xchg
push
aad
jl,pt
aas
and
test
mov
sbb
and
mov
daa
or
inc
cmpsl
pop
pop
jle
lahf
lcall
shlb
call
sub
loopne
cmp
mov
xor
inc
cmpsl
sub
or
dec
lds
sbb
das
push
mov
dec
out
or
inc
sbb
fidivl
outsb
pop
into
pushf
mov
xchg
push
sbb
pop
loope
cli
fwait
mov
sti
inc
cmp
lods
cmc
push
mov
cli
inc
dec
add
mov
push
adc
push
insb
push
pop
push
les
insl
shr
inc
in
les
fwait
xor
loope
jl
fdivrs
push
loop
inc
out
aaa
push
divb
sti
xchg
and
js
loopne
dec
outsb
inc
or
mov
sub
incb
and
adcl
lcall
lods
bnd
mov
adc
stc
dec
push
hlt
pop
shrl
sub
sbb
pop
lea
mov
pavgb
xlat
test
inc
push
pop
jg
push
sbb
lahf
jnp
cs
js
cmp
cmp
xor
sarl
insb
push
mov
push
pusha
fistpl
jp
xchg
dec
pop
es
fwait
mov
mov
jbe
jle
and
pop
add
cmp
out
sbb
sub
inc
jl
ret
jge
jno
and
mov
into
rorl
lea
js
xchg
dec
das
fistl
inc
or
and
cld
sub
push
and
sbb
mov
hlt
adc
fisubrs
sarb
in
testl
pop
subl
daa
fildl
dec
mov
push
rorl
sbb
add
sahf
sahf
adc
cmp
mov
sarb
push
dec
hlt
xchg
jno
xchg
mov
cld
loope
add
pop
adc
sub
push
inc
notb
and
popa
out
mov
push
pop
mov
roll
mov
lret
pusha
sbb
and
loop
ss
ds
adc
or
dec
bound
jg
imulb
hlt
jp
mov
leave
loopne
popf
mov
cmc
jae
and
lea
jmp
dec
ljmp
je
orl
call
aas
loopne
outsb
jno
mov
js
xchg
arpl
je
xchg
mov
orl
or
jg
dec
add
jo
xchg
dec
cmp
sbb
dec
pop
rcll
sbb
dec
dec
add
ss
xor
loop
aaa
rcrb
fwait
cwtl
sbb
sbb
mov
add
loop
mov
xchg
mov
lret
sub
push
sti
rclb
mov
pop
movsb
cld
lahf
sbb
insb
in
fistpl
mov
je
mov
xchg
hlt
push
testb
jno
aad
push
sub
cltd
pop
sbb
rcrb
out
sbb
cmp
sbbl
fcoml
push
iret
push
dec
pop
test
push
stc
adc
xchg
mov
mov
aas
push
movsb
rcll
popf
push
pop
pop
add
pusha
jg
aad
xor
icebp
cmp
inc
movzbl
sbbl
in
mov
push
daa
fdivp
rcr
cmpsb
leave
add
mov
call
sbb
mov
xor
and
jne
sbb
or
roll
cmc
cmp
ret
xor
insl
loop
fwait
arpl
repnz
pop
pop
sbb
sub
sub
xor
dec
aaa
shlb
cmpsl
icebp
xor
add
pop
fistps
loop
div
inc
imul
cmp
mov
mov
cmp
je
nop
sbbl
cmp
or
iret
push
je
and
sub
xchg
mov
dec
dec
xorl
or
inc
cmp
das
mov
out
and
repnz
push
lcall
and
jle
mov
cmp
pop
inc
push
add
push
aad
jae
leave
ret
pop
into
push
loopne
cltd
push
je
popa
jbe
popa
jbe
sub
cmp
pop
adc
xor
or
mov
sub
dec
add
push
mov
pop
sbb
xor
fwait
push
daa
push
repnz
mov
pop
aad
test
adc
adc
pop
add
je
lahf
pop
xchg
xor
cltd
xor
push
cld
cs
mov
enter
ds
push
xor
xor
inc
xchg
mov
adc
push
add
pop
pop
andl
mov
inc
xor
sub
fisttps
push
mov
out
fdivrl
sbb
cmp
fnstsw
fidivrs
cs
outsb
mov
cltd
rcrb
sub
sub
jecxz
cli
or
push
push
xchg
enter
int3
push
mov
jl
push
out
and
mov
enter
ret
pop
cmp
mov
jae
cld
pop
outsl
sbbb
adcb
hlt
cli
or
pop
push
adc
push
push
and
scas
aam
dec
jno
add
outsb
ret
sbb
test
pop
nop
sbb
jg
dec
aas
cmpsl
in
subl
jge
pop
cmpsb
jmp
mov
fsin
iret
xchg
or
lock
test
xor
xacquire
int
jb
pusha
xchg
pusha
cmp
out
mov
inc
outsb
jns
cmp
repnz
into
push
pop
outsl
adc
or
sub
imul
adc
push
pop
sbb
ret
je
cs
mov
push
push
call
jp
cli
inc
aad
std
and
fwait
icebp
inc
cwtl
nop
jmp
jo
push
mov
test
ja
pop
adc
push
ret
mov
sub
mov
int3
xor
and
add
cwtl
ficomps
jnp
sbb
cmp
cmp
adc
pop
mov
push
mulb
fisubrl
pop
mov
fsts
clc
imul
mov
mov
push
mov
push
xor
ficomps
xor
adc
lea
adc
rolb
sbb
movsl
fcom
ret
ss
add
cmp
sub
cmp
sub
xor
leave
cmp
gs
ljmp
push
push
loop
mov
push
int3
push
mov
bound
lahf
scas
add
repz
ret
pop
adc
inc
xor
inc
mov
lcall
paddusb
sbb
adc
mov
dec
xor
ss
addb
popf
das
sub
xchg
or
sub
das
pop
or
mov
idivl
das
or
lahf
cli
push
fcomps
test
das
ret
pop
push
aad
dec
cld
add
jae
push
lods
xchg
xor
dec
ret
scas
repz
ljmp
xchg
stc
out
xchg
push
out
stc
out
xchg
push
loop
dec
ret
movsl
repnz
es
add
push
push
mov
jle
pushf
lods
daa
inc
movsl
mov
xchg
jbe
dec
jmp
hlt
mov
adc
pushf
add
and
add
dec
push
inc
jbe
push
cld
jne
or
push
sbb
sbbl
pop
push
and
repnz
out
loope
cwtl
push
pop
mov
dec
enter
pop
push
jns
out
les
testb
dec
mov
jle
jae
lea
lret
pop
cmp
and
inc
push
loop
push
rcll
cltd
jl
loop
and
ficoml
cmpsl
mov
es
ja
sbb
movsl
jnp
sub
push
dec
not
test
pop
insb
insl
pop
pop
sbb
dec
mov
aaa
sbb
lock
inc
xchg
pop
bound
pop
push
outsl
cmp
lret
dec
das
pusha
sbb
cmp
shrb
sbb
dec
mov
mov
pop
inc
rcrb
fimull
add
push
addb
push
cmp
mov
jne
cmp
fidivrl
push
fiadds
add
mov
out
xor
push
sub
inc
xchg
movsb
js
add
dec
adc
mov
mov
or
jle
cmp
sbb
or
mov
inc
lock
sbb
inc
xchg
sub
test
jns
sbb
icebp
cmp
ja
xor
in
stos
leave
loop
rcrb
pop
and
pop
xchg
push
pop
popa
push
loope
fists
bound
cmpsl
sub
out
pop
subb
sub
test
add
pop
out
add
rcrb
inc
adc
and
jne
js
imul
xchg
pop
or
das
loop
pushf
and
ja
sbb
cmpsb
pop
call
ja
sub
inc
mov
xchg
push
push
and
push
mov
pop
repnz
add
shlb
in
jmp
sbb
movsb
mov
int
das
sbb
sahf
pop
cmp
outsb
ljmp
mov
inc
cs
dec
xchg
pushf
add
loope
xorl
push
and
pop
flds
xor
lret
or
and
mov
nop
ss
sub
addl
mov
cltd
int
stc
sbbl
rcll
add
jnp
dec
mov
adcb
mov
mov
xchg
sbb
xor
pop
aad
cmp
subl
xor
loopne
insl
inc
or
es
sahf
data16
stos
pop
or
addb
xor
mov
leave
es
inc
scas
push
and
out
fidivs
ret
sub
dec
pop
xor
lcall
lcall
or
pop
arpl
dec
cmp
je
das
out
adcl
imul
xchg
loop
pop
xchg
lret
out
push
popa
cmp
adc
sbb
inc
jle
mov
mov
fwait
inc
push
jmp
inc
sbb
or
push
mov
mov
and
pop
xchg
stos
sahf
shl
pop
sub
pop
sbb
and
lcall
push
lods
clc
add
mov
pop
imul
scas
dec
pop
jle
mov
xlat
dec
lods
dec
pop
and
cld
unpcklps
xchg
inc
loop
mov
mov
jecxz
xor
and
shrl
pop
and
fimull
pop
mov
cmpsl
jle
and
jo
inc
mov
add
orl
and
adc
mov
rolb
jecxz
push
mov
pushf
leave
mov
cmp
std
push
mov
xorb
dec
movsl
ret
subb
in
cs
imul
fldl
dec
cs
lock
dec
ret
xor
push
fistps
jns
js
ja
das
mov
das
ljmp
outsb
bound
scas
ficoms
dec
mov
ljmp
xchg
shl
sub
xor
rorb
xor
jb
daa
jbe
jne
dec
icebp
repz
sub
pop
sbb
jns
jp
dec
in
or
pop
adc
pop
pop
cmp
mov
fdivrl
inc
pop
popf
sahf
test
cs
test
fiadds
negl
sti
cwtl
jp
sub
sbb
ss
sbb
lcall
icebp
jne
mov
push
push
addl
ss
inc
push
lret
in
jne
jns
jb
popf
jb
lcall
dec
sub
push
xor
dec
or
orl
cmc
mov
mov
or
cwtl
fimull
incb
xchg
xchg
sbb
push
pop
or
adc
ret
test
lock
lea
cmp
jbe
inc
or
pop
int
xor
js
fs
dec
pop
pusha
or
cli
and
fucom
aas
outsl
mov
jge
cmp
test
inc
xor
push
jne
pop
jno
push
dec
sbb
cmp
loopne
int
mov
dec
shl
lret
sbb
mov
mov
cmpsb
into
or
sbb
mov
shl
pop
int
idivl
rolb
or
test
test
sub
cmpsb
inc
pop
shlb
inc
mov
dec
lahf
out
lds
shl
jl
retw
mov
sbb
sahf
and
cltd
or
mov
push
inc
addl
push
jg
es
sub
adc
mov
add
fwait
mov
fsubp
icebp
negb
sbb
and
sbb
lods
adc
cmp
loop
cmp
mov
xor
cmp
pop
and
inc
mov
lock
and
mov
es
out
out
push
jno,pn
stos
nop
inc
ljmp
mov
je
or
dec
loop
sub
inc
jmp
lret
insb
test
enter
fistpll
cli
dec
xor
jge
ja
jne
push
pop
je
xchg
arpl
push
dec
jmp
out
dec
loop
mov
mov
loope
or
iret
jg
insl
subl
xchg
loop
test
imul
cwtl
push
push
jno
jl
cmp
inc
sub
push
add
cmpl
sbb
mov
aam
pop
sub
test
ss
hlt
mov
adc
sarl
cmpsb
sbb
cmpl
jl
inc
pop
add
sbb
pop
inc
sahf
push
cwtl
add
mov
cmovg
add
mov
adc
push
jl
and
or
mov
iret
adcl
add
lock
and
ret
sub
scas
or
enter
adc
cwtl
aad
jbe
xor
sbb
shl
aam
shrl
inc
ljmp
jns
push
or
cmc
or
xor
mov
aam
out
and
xor
or
icebp
push
jb
push
fisubrs
jbe
jne
ds
sub
or
xchg
shll
jecxz
dec
jg
mov
repnz
nop
aad
pop
cmp
fiadds
aaa
mov
mov
adc
push
push
mov
push
and
mov
or
or
and
or
lahf
pop
xor
pop
leave
ljmp
and
out
scas
sbb
dec
inc
pop
inc
dec
push
jno
loop
jnp
jl
xor
daa
jge
dec
loopne
call
cmp
jmp
std
lret
push
inc
fs
js
pop
outsl
mov
cmp
daa
stos
decl
cmp
mov
pop
dec
test
mulb
push
sahf
and
inc
xchg
pop
mov
adc
or
movsl
sbb
adc
push
mov
insl
push
sbb
test
ds
jecxz
add
sti
cmc
daa
xor
fucom
pop
inc
push
repnz
hlt
call
mov
loop
and
pop
bound
pop
call
inc
in
sub
sbb
mov
push
leave
xchg
lret
and
aaa
clc
je
or
inc
pop
add
aas
pop
sbb
cmp
xchg
das
cld
bound
pop
movsl
push
mov
sub
jbe
pop
dec
mov
sbb
das
inc
loopne
scas
icebp
jae
popf
jbe
xacquire
cmp
sbb
dec
jns
adc
sahf
or
sub
xrelease
pop
sbb
negb
jae
out
lret
daa
dec
rorl
adc
xchg
pop
pop
pop
sbb
rcrb
movb
mov
fnstsw
xchg
aas
lcall
add
cmp
pop
sub
push
and
ret
stos
lret
sub
dec
mov
xor
imul
lcall
sbb
add
nop
dec
sub
fsts
and
sbb
mov
jecxz
and
or
pop
jge
xor
outsl
mov
call
dec
cmpsl
bound
loope
sahf
scas
in
inc
jae
push
outsb
xchg
ret
loop
jno
mov
ret
cmp
xor
subl
adc
cmp
movsl
xchg
je
mov
dec
hlt
pop
fcompl
jbe
in
cmp
mov
sub
xchg
sub
push
fdivrl
jns
movsl
jecxz
arpl
hlt
cmc
adc
imul
jb
je
cli
inc
push
and
add
xchg
inc
loop
jecxz
mov
loope
addb
into
xor
bound
aas
pop
cwtl
sbb
xchg
jecxz
mov
mov
sarb
cmp
rcrb
adc
sub
bound
inc
adc
pushf
mov
sbb
bnd
xchg
dec
dec
lods
mov
scas
ret
inc
pushf
mov
popf
sbb
sahf
jecxz
mov
mov
lahf
pop
mov
xchg
add
push
shll
icebp
enter
and
inc
adc
push
and
das
mov
into
pop
leave
add
jns
xchg
mov
push
and
aaa
sbbl
test
jge
pop
fisttps
xorb
or
loop
and
mov
and
ror
in
xor
fidivrs
ja
fimuls
dec
divb
pop
testl
sub
lea
cmpb
or
cmp
mov
push
incl
mov
pop
mov
enter
popf
scas
pop
popl
ds
test
push
arpl
loop
mov
mov
add
mov
mov
mov
sti
push
mov
cwtl
inc
cmp
sbb
mov
xor
inc
push
push
dec
pop
aam
xor
xor
dec
adc
or
cmp
xor
jns
and
xor
into
aad
mov
inc
cs
push
mov
aaa
icebp
sbb
and
inc
ss
test
sbb
cwtl
loop
pop
push
repz
mov
sub
jle
in
mov
clc
notl
int3
jecxz
dec
push
testb
stos
mov
sbb
push
aam
imul
fsubl
pop
push
sbb
xor
filds
pop
mov
dec
add
pusha
or
mov
jb
pop
and
and
adc
dec
push
xor
cld
cwtl
sbb
mov
fstl
cltd
mov
fptan
fmull
or
inc
push
test
cli
stos
std
shlb
mov
in
mov
inc
fisubrs
add
cli
mov
sbb
dec
mov
push
loop
popf
sbb
cmpsb
push
and
pusha
push
pop
or
jo
popa
jae
ret
xchg
pop
mov
add
sahf
mov
xchg
sbb
bound
xchg
add
add
xor
bound
imulb
jae
and
comisd
inc
push
sahf
and
adc
dec
pop
bound
and
dec
dec
xchg
jp
add
and
add
sub
mov
or
jb
rclb
test
lcall
adc
rcll
adc
jb
outsb
sub
mov
lahf
pop
and
cli
rolb
bound
adc
out
push
sti
lds
mov
cltd
cmpb
push
int3
pushf
jle
sub
or
lahf
repnz
rolb
xchg
sub
movsb
fdivr
jl
sbb
dec
jecxz
sbb
add
sbbl
cmp
pusha
add
mov
dec
add
pop
mov
andb
addb
jecxz
dec
xchg
mov
jp
stos
pop
pop
movsl
flds
dec
sbb
das
aad
aam
adc
xchg
stc
arpl
pop
or
jns
loopne
mov
pop
or
lock
sub
add
pop
fiaddl
and
sbb
inc
hlt
push
jl
pop
add
nop
mov
das
pop
or
stc
je
adc
notl
sti
lahf
or
cmpsl
movsl
and
out
in
shr
xor
mov
sbb
mov
inc
das
cld
mov
dec
loop
sbb
insl
xchg
add
adc
jecxz
popa
pop
ja
push
xchg
pop
rorb
pop
repnz
or
jl
loop
mov
fldcw
pop
or
push
xor
xor
sub
inc
push
push
jmp
stc
inc
outsb
mov
pusha
pop
inc
inc
movsb
out
test
test
outsb
pop
out
into
shll
push
rorl
xchg
or
push
xchg
cmpsl
insb
mov
ret
frstor
inc
mov
xorb
stc
sub
sbb
rcll
sub
jno
scas
fisubl
jo
and
sbbl
mov
lods
sbb
cmp
mov
cmp
mov
mov
push
dec
jecxz
add
mov
sbb
pop
std
aam
push
mov
dec
orl
sub
jbe
stc
into
cmp
inc
andl
add
pop
hlt
dec
into
daa
pop
movsb
das
in
out
push
lods
cmp
cli
lcall
outsb
cmp
push
xor
cld
dec
ficomps
adc
popa
std
std
aad
xchg
loop
push
je
mov
inc
pushl
sbb
jecxz
pushf
shrb
shl
push
sub
mov
cmp
imul
rcrl
push
mov
loop
xchg
cltd
sub
lods
dec
imul
or
dec
sbb
cmpsb
scas
stos
jecxz
sbbl
fadds
incl
pop
test
sub
cmpsb
pop
adc
and
pop
sbb
inc
cld
cmc
lea
jno
xchg
mov
dec
cmp
mov
ja
scas
jns
xchg
out
sbb
xchg
or
and
pop
out
js
orl
insb
data16
stc
jg
sub
outsl
dec
mov
mov
loop
mov
push
or
inc
jl
mov
push
mov
loop
lods
sub
notb
dec
sti
xor
add
sub
dec
xchg
mov
aam
and
jno
btr
out
xchg
jge
bound
mov
jecxz
dec
ret
mov
push
sbb
loope
xchg
dec
jge
push
sbb
int
adc
jg
sub
imul
cs
sbbl
jb
inc
sbb
mov
imul
cltd
sbb
inc
pop
popf
std
int3
adc
push
add
sbb
dec
lcall
adc
mov
mov
jg
movsl
sub
jmp
out
xor
mov
test
dec
push
push
mov
mov
outsb
std
mov
sub
out
pusha
clc
xchg
or
rcr
pop
in
sbb
loope
mov
mov
sub
lret
sub
es
xchg
repz
add
test
inc
mov
out
mov
cmp
push
test
pop
aaa
fidivl
ret
testb
je
add
jno
stos
rorb
jl
enter
rol
lods
xchg
mov
sub
shlb
pop
or
jg
cld
dec
push
icebp
pop
push
mov
je
loop
addb
push
cmp
icebp
add
dec
sbb
mov
mov
out
ds
inc
pushf
mov
mov
adc
adc
xchg
fisubs
xchg
and
add
cld
dec
outsb
je
andl
test
cltd
pop
and
adc
pop
cmc
dec
fisubl
add
fdivl
repz
das
nop
push
cwtl
pop
push
or
jne
add
stos
mov
loop
jnp
icebp
jae
lahf
cld
mov
sub
outsb
ret
orl
test
enter
jmp
ss
mov
mov
imulb
fcoml
scas
ret
mov
jmp
pop
mov
shlb
xchg
movsl
dec
lret
pop
cmp
xchg
inc
cli
pop
stos
cmp
bnd
test
mov
mov
push
das
ja
outsb
test
and
test
dec
out
fcomps
cmp
testb
mov
push
pop
into
push
push
loop
mov
pop
mov
and
cmc
adc
add
nop
sahf
imul
jecxz
ljmp
and
fs
sbb
fiaddl
stc
cmp
scas
orl
in
push
bound
push
testb
in
mov
push
sbb
loope
icebp
cmp
sbb
js
jo
adcl
mov
sbb
push
test
pop
inc
cmp
lahf
add
jecxz
inc
movsb
cmp
jae
outsb
fsubr
or
not
and
sbb
or
mov
popa
scas
jbe
nop
push
xchg
pop
xchg
ret
xchg
dec
and
leave
add
add
xor
mov
ja
push
neg
cmpsl
sbb
add
mov
mov
shlb
adc
xchg
insb
or
push
mov
dec
pop
pop
sub
pop
push
jg
mov
loopne
push
jecxz
sahf
test
jmp
xor
and
jb
mov
lret
and
pop
or
scas
add
add
das
push
push
push
stc
dec
ret
movsb
cmp
pop
lock
mov
ret
or
sub
daa
or
jg
jecxz
rorl
sub
or
push
in
mov
js
shrl
fisubrs
cmc
add
jecxz
xchg
lret
push
ficompl
lock
sti
inc
mov
add
in
sub
adc
sbb
push
jecxz
das
shrb
sub
add
es
xchg
dec
repz
sbb
jns
push
add
push
push
out
mov
fdiv
mov
mov
xchg
xchg
imull
sub
hlt
push
dec
or
sti
sbb
adc
jg
jle
mov
pminsw
jecxz
pop
lret
outsb
adc
push
pop
out
jb
cmp
adc
sbb
xor
repz
test
sbb
add
sbb
and
push
or
pop
int
add
cmpsl
sti
sbb
mov
or
mov
xchg
mov
ja
dec
pop
fdivrs
call
out
loopne
test
fisubrs
sbbl
pop
sub
dec
push
xor
adc
push
jecxz
cmp
pop
ja
loop
push
into
or
jno,pt
nop
sbb
mov
mov
adc
fimuls
xor
pusha
cmpsl
fcoms
jnp
mov
popa
dec
sub
mov
sbb
test
push
mov
test
int
jecxz
mov
std
xor
mov
hlt
movb
mov
pop
cmc
cld
sub
push
xor
push
sbb
cld
mov
int3
movsb
pop
cmp
test
adc
test
outsl
sub
into
sahf
out
pop
and
pop
dec
sub
filds
push
inc
daa
ss
and
test
add
pop
jns
test
mov
out
sub
jne
loop
jo
mov
push
aam
orw
mov
sub
push
mov
lret
ret
fdivrs
aam
sbb
imul
fmull
inc
or
pop
loop
mov
into
sub
mov
pop
mov
or
dec
dec
mov
pop
push
push
imul
or
push
lcall
test
jp
adc
leave
in
jno
pop
mov
inc
mov
xcrypt-cbc
cmpsl
push
mov
lcall
xor
push
loop
push
or
loopne
fsubs
sub
inc
rcrl
xchg
notb
cltd
jle
das
pop
ret
lock
lock
mov
or
push
incl
mov
sbb
sti
jp
cmp
out
push
divl
xor
sub
les
cmp
bnd
outsb
push
sbbb
ficoml
push
mov
lret
out
mov
stos
call
pop
lcall
add
mov
or
neg
dec
sbb
outsb
cmp
pop
hlt
out
cmp
add
adc
sub
sahf
test
push
xchg
mul
pop
cwtl
xchg
push
out
gs
es
sub
push
into
call
popa
fimuls
ficoml
cmpsl
jae
and
cltd
sbb
push
cmp
les
dec
jge
add
push
or
push
push
sahf
mul
ja
test
xchg
mov
cmp
add
aam
pop
cmpsb
add
imul
xchg
bound
lret
outsb
inc
pop
out
and
sub
stos
ja
pop
pusha
movsb
push
loop
pop
ret
push
sub
jae
das
mov
jbe
jne
sbb
dec
push
pushf
dec
sbb
loope
test
cmp
sub
push
test
gs
sub
dec
ja
sbb
prefetcht1
add
loop
test
sub
lret
pop
and
movsb
pop
jecxz
mov
imul
xor
dec
cs
inc
xor
lods
negl
popf
es
mov
push
pop
inc
das
jge
pop
scas
rolb
in
xor
push
jge
test
stc
and
loope
pop
and
lret
mov
add
xchg
jns
cmp
jo
pushf
je
lret
sbb
repnz
push
sbb
add
fs
int3
jecxz
cmp
mov
rorb
ja
data16
jecxz
pop
jge
cmp
sub
mov
adc
movsl
fcmovnbe
movsl
mov
test
xor
sbb
sbb
mov
lret
in
xchg
ret
or
mov
rcrb
orb
in
in
cli
and
jecxz
mov
outsb
subl
sbb
shlb
adc
outsb
inc
cli
repnz
jecxz
adc
js
pop
xchg
adc
mov
jp
addl
test
pop
out
sahf
xchg
or
cmpps
rclb
cmp
push
insb
loop
int3
jecxz
sub
push
ljmp
push
fwait
sub
inc
cmp
sbb
out
mov
roll
jecxz
movsb
adc
ret
movsb
jg
pop
adc
or
je
int3
dec
mov
mov
push
adc
movsl
jecxz
adc
mov
jmp
into
sbb
test
pop
loope
nop
pop
das
sub
scas
and
outsb
cmp
daa
inc
pop
sarb
in
push
cld
bound
cltd
int
dec
pop
sahf
add
dec
add
or
nop
cld
pushl
xchg
cltd
aas
add
ror
push
dec
pop
mov
add
xchg
loopne
fucomi
rcrl
inc
push
rclb
fmul
aas
xlat
shl
mov
loopne
out
add
out
xorl
mov
icebp
decb
fdivs
jecxz
xchg
xor
and
push
lcall
jo
cltd
or
sbb
imul
adc
add
out
outsb
imul
gs
hlt
or
push
mov
xchg
inc
pop
push
stos
mov
push
cli
sbb
adc
mov
xchg
push
repnz
lret
sbb
xchg
xchg
lret
gs
rclb
add
div
into
xchg
sub
dec
inc
adc
push
pop
or
frstor
pop
lock
leave
into
sbbb
loop
jae
icebp
cwtl
sbb
ja
sbb
nop
dec
sbbl
mov
shlb
jbe
push
inc
testb
add
jecxz
loop
cld
loope
mov
std
xchg
ret
add
out
fcoml
push
in
call
sbb
lds
push
subl
add
movsb
push
or
loop
testb
and
outsb
mov
push
jge
sub
loop
ljmp
dec
jg
movsl
cmp
xchg
and
mov
sarb
jle
pop
test
inc
xor
lahf
jle
pusha
cmpb
sub
mov
cmp
lods
scas
adc
fadd
sub
scas
jno
mulb
gs
aas
jecxz
das
inc
pop
ret
cmp
inc
adcl
outsb
push
cmp
icebp
inc
xor
sahf
arpl
mov
add
and
int
icebp
jbe
scas
jge
loopne
loope
xchg
stc
cli
lds
pop
sub
mov
pop
pop
xchg
enter
paddusb
lret
jecxz
xchg
jns
dec
mov
xchg
xchg
out
aas
or
data16
lea
dec
aas
push
imulb
scas
sub
lock
fstps
cs
mov
add
dec
xchg
push
sub
cmp
dec
xor
pop
push
lret
mov
jae
aas
sbb
mov
fisubrl
adc
xchg
jae
inc
subb
and
dec
jecxz
push
cmp
test
pop
addl
dec
jp
cmp
aaa
sub
gs
mov
arpl
mov
or
sbb
inc
hlt
loope
in
stos
pop
fcompl
sbb
or
dec
mov
adc
add
hlt
xor
sbb
push
mov
mov
add
adc
into
jo
push
jbe
jbe
test
xchg
icebp
mov
jbe
out
loop
pusha
push
outsb
push
pop
int3
scas
daa
outsb
out
sbbb
dec
adc
pop
dec
adc
movsb
jp
pop
in
mov
push
and
sbb
and
xchg
and
xchg
dec
cli
dec
cld
jge
push
mov
sbb
sub
out
das
loop
xlat
xor
int3
push
pop
add
mov
out
test
sar
adc
outsl
xchg
ja
stos
sub
dec
orl
lods
xchg
cmpl
push
push
adc
cmpl
mov
xor
push
adc
sub
sbb
leave
mov
hlt
add
adc
rolb
fcomps
add
adc
ret
ja
and
mov
cwtl
call
lods
sahf
mov
and
cmp
int
adc
orl
mov
stos
insb
mov
dec
cmpsl
int
or
xchg
outsb
pop
loop
scas
mov
fwait
je
xchg
and
imul
sbb
movsb
mov
pop
fcomps
mov
cli
push
loop
das
test
ljmp
test
push
sbbb
xor
repz
clc
rorl
dec
push
xor
adc
sbb
loope
xchg
jg
pop
inc
pop
xchg
push
and
mov
dec
mov
push
pop
shlb
mov
fdiv
add
enter
pop
and
cmp
add
stos
das
rolb
mov
pop
dec
xchg
shrl
ret
ret
sbb
sbb
mov
in
enter
xor
repz
scas
pop
mov
loopne
mov
or
inc
pop
or
xor
clc
popa
push
lods
mov
cld
mov
dec
fs
push
xchg
addr16
mov
sub
adc
divl
xchg
jae
mov
sbb
mov
imul
sub
mov
sbb
fwait
lea
pushf
jno
lahf
dec
mov
subb
adcb
sub
sbb
movq
mov
xor
inc
mov
into
mov
pop
add
divb
sub
jo
xchg
cmp
and
je
pushf
sub
pop
push
push
loope
lds
jne
orl
mov
out
sbb
dec
jecxz
sahf
shl
call
mov
mov
mov
mov
inc
lret
pop
jl
and
push
mov
jne
cmp
mov
repnz
leave
and
sub
cli
pop
lahf
xorl
or
sbb
xlat
or
pop
pusha
cli
xor
loop
add
sbb
test
mov
xchg
sahf
pop
push
ret
fistps
jg
mov
ss
mov
movsl
mov
fidivrs
or
xchg
mov
sub
fsts
lahf
imul
add
sbb
ficoms
je
sahf
push
jecxz
inc
mov
daa
push
or
cmp
xor
daa
enter
cmp
mov
mov
sbb
and
mov
movsb
mov
cwtl
out
xchg
mov
or
icebp
cs
mov
push
daa
add
mov
sbb
div
xlat
iret
shll
dec
pop
in
sbb
mov
jno
xor
sub
mov
imulb
adc
dec
mov
mov
dec
inc
jle
xchg
dec
jg
mov
xchg
stc
xorl
into
push
mov
ljmp
ljmp
mov
aad
jbe
add
pusha
push
jecxz
mov
gs
aas
addb
and
out
push
jmp
cmp
push
cld
mov
or
jle
jo
push
jg
ds
mov
push
movsb
pop
jb
rcr
adc
dec
ljmp
cld
test
filds
adc
cs
xchg
and
mov
xchg
pop
pop
inc
insb
mov
mov
push
and
fdiv
mov
rorl
cmp
arpl
pop
jge
int
dec
and
lea
fwait
add
mov
push
stos
inc
and
popf
lock
jbe
cmp
pop
clc
fwait
ljmp
jae
push
in
mul
loop
test
mul
dec
adc
xor
shl
scas
into
cmc
out
sbb
mov
mov
cmpsb
idiv
cmp
jmp
xor
call
pop
pop
dec
cmpsl
stos
sbb
sub
push
sbb
loop
out
mov
cmp
cs
adc
lods
cld
lods
adc
sub
dec
mov
xor
jecxz
scas
mov
imul
xor
pop
testl
mov
je
outsb
push
scas
icebp
imul
inc
imul
jne
mov
mov
outsb
or
aas
add
dec
or
pop
jne
xor
sub
je
add
cmpsl
cmp
adc
push
pop
cmpsl
rcr
jg
loopne
addr16
orb
scas
int
or
and
sub
pop
negl
outsb
mov
ss
cwtl
cmpsb
sbb
sub
outsb
jae
stos
sub
outsl
jp
cmpsb
pop
js
push
pop
cs
call
sbb
xchg
sub
jg
cmc
cmp
nop
xchg
iret
or
sbb
inc
lock
jecxz
inc
je
loope
xchg
mov
cwtl
int3
lock
and
add
pop
mov
sbb
test
cmp
or
shll
sub
dec
aas
adc
push
jp
and
arpl
ret
nop
inc
and
mov
or
push
mov
push
insb
scas
inc
pop
negb
mov
dec
out
dec
adc
rcrb
sbb
in
mov
dec
mov
pop
jbe
rclb
xchg
xor
pop
and
mov
mov
cwtl
aaa
orl
mov
mov
jbe
icebp
push
inc
cs
insb
and
punpckldq
sbb
loop
and
adc
jl
jp
mov
add
ret
jmp
jbe
inc
mov
inc
aad
add
push
mov
inc
push
hlt
fdiv
push
push
sbb
sub
push
push
inc
mov
jmp
pop
xor
subl
daa
pop
neg
lods
jae
and
stos
adc
jmp
mov
mov
mov
xor
dec
mov
dec
cmp
push
scas
mov
sahf
ljmp
dec
cmpsl
fstps
mov
inc
pusha
pop
mov
mov
call
add
jbe
and
repnz
out
mov
fwait
lret
popf
dec
cmp
pop
jp
rcr
cld
and
push
test
stc
mov
jno
mov
jae
jecxz
jo
and
add
repnz
pop
pop
pushf
mov
adc
rol
xchg
outsb
stos
outsb
mov
add
sbb
dec
sti
inc
add
add
insl
push
mov
pop
stos
icebp
movsb
idivb
xchg
fiaddl
and
pop
jecxz
fwait
cmp
ljmp
mov
or
push
test
inc
pop
into
mov
fsubr
mov
in
dec
push
and
mov
mov
xor
sub
int3
jg
loop
sub
or
fnsave
add
movsb
or
mov
or
popa
sar
sbb
xchg
jmp
stos
sbb
das
iret
push
mov
jnp
jg
mov
jb
sbb
pusha
adc
popf
cmpsl
jl
xor
movsb
mov
dec
mov
mov
xchg
push
pop
inc
dec
mov
das
pop
aaa
xlat
dec
mov
aad
pop
mov
dec
adc
or
push
lods
cwtl
cmpsl
and
xchg
cli
fstpl
xor
lahf
lods
add
adc
jo
mov
cmpsl
xchg
loopne
add
dec
push
dec
inc
cmp
mov
faddl
sbb
stos
dec
pop
mov
movsb
jp
call
frstor
aas
push
faddl
insb
fcomi
addb
mov
idivb
daa
std
sub
xchg
mov
and
dec
sub
loopne
sub
das
jnp
push
stc
xorl
loope
cmpsb
out
push
mov
test
loop
pop
pop
add
sub
push
or
aaa
mov
pushf
add
add
call
sub
sub
sub
sub
jne
je
nop
pop
add
outsb
inc
inc
sahf
outsb
or
sbb
jmp
incb
out
dec
dec
icebp
push
ret
dec
push
repz
and
push
test
shlb
out
dec
ss
lea
lret
jae
adc
test
ss
mov
xchg
mov
ret
cwtl
lods
push
dec
addr16
adc
jmp
popf
mov
add
subb
cmp
cltd
pop
or
rclb
cmp
out
xor
subl
xchg
ret
push
pusha
int3
add
jae
cmp
pop
sub
test
mov
sbb
adc
xor
and
sbb
xlat
and
cmpb
in
xor
sub
jnp
add
inc
jo
loopne
aas
and
out
jo
out
add
shrb
daa
and
fdivl
dec
xor
mov
rcrb
data16
in
stc
sbb
rorb
cli
popf
roll
bound
sbb
lods
push
push
repnz
mov
pop
mov
out
insb
incl
mov
hlt
cmp
mov
rol
or
aad
adc
jle
xchg
fisubs
or
mov
bound
test
or
adc
and
es
inc
xor
bound
test
pop
xor
cmpsb
jl
sub
push
jl
dec
push
les
push
jg
test
xor
adc
adc
mov
mov
mov
popa
cli
clc
add
es
bound
loopne
sbb
popf
and
push
or
jmp
or
rcll
popf
and
mov
jle
mov
mov
mov
hlt
lods
ret
jae
das
arpl
loop
sahf
fwait
mov
lcall
pop
push
dec
jp
movsbl
inc
push
mov
test
repnz
mov
pop
push
sarl
inc
dec
dec
cmpsb
jg
xchg
mov
pop
movsl
sbb
es
aas
fcoms
xchg
loope
jbe
and
orb
sub
xchg
jecxz
and
cld
mov
hlt
dec
lds
lret
jecxz
cwtl
dec
jl
pop
dec
fcmovb
jecxz
aam
xor
cltd
push
inc
ds
cmp
xchg
add
add
neg
adc
dec
jl
leave
addr16
inc
jnp
cmc
adc
jo
lea
stc
lods
push
jl
adc
ret
fbld
jge
sub
sbb
add
aad
pop
mov
or
cs
jg
orl
int3
dec
sub
mov
push
int
loope
filds
sub
das
lods
xchg
dec
inc
mov
xor
mov
adc
scas
pop
or
mov
mov
or
or
xchg
sbb
or
jecxz
push
add
inc
jle
jne
push
aas
pop
xor
out
mov
stos
aad
mov
addb
rclb
into
cli
insb
cs
test
add
inc
jle
jb
pop
sub
lcall
dec
add
push
sti
stos
add
cmp
dec
sub
fnstcw
add
sbb
inc
dec
insb
mov
test
dec
dec
xchg
je
or
fwait
popl
mov
mov
cmpsl
lock
xor
mov
dec
jmp
push
push
cli
dec
subl
adc
dec
add
sub
jno
sub
pop
mov
cli
or
add
mov
dec
bound
xchg
aad
add
in
mov
mov
lcall
push
leave
rolb
pop
add
addr16
push
repz
sub
mov
mov
dec
push
jl
pusha
inc
stc
add
xchg
dec
xchg
lock
mov
push
mov
sbb
jns
and
fwait
sub
push
jbe
leave
inc
pop
jns
insl
inc
and
shlb
pop
mov
cs
rorl
push
iret
es
into
xchg
orb
pop
inc
lea
fdivs
lods
es
adc
mov
sub
mov
or
add
rorb
mov
pop
jne
pop
adc
and
testl
faddl
and
pop
cmp
add
sbb
into
add
rclb
pop
xchg
das
fildll
mov
movsb
jns
fiadds
push
loope
das
sbb
push
call
inc
movsb
and
bound
adc
in
jp
fsubp
inc
add
push
cwtl
rclb
add
sub
and
jns
xchg
mov
mov
notb
fcomps
push
xchg
jnp
pop
inc
mov
lods
test
jecxz
and
jecxz
mov
push
inc
push
pop
ljmp
push
mov
dec
outsl
inc
call
popa
outsb
test
ja
xchg
outsl
jecxz
fistl
add
lret
insl
fwait
sbb
mov
cmp
icebp
sub
jb
lcall
daa
arpl
stc
add
repz
fcomps
jl
pop
jecxz
roll
int3
xor
xor
jo
outsl
mov
pusha
or
neg
outsl
in
daa
je
enter
jecxz
inc
arpl
popf
repnz
or
xor
jne
decb
cs
sub
add
sbb
addl
cmc
or
inc
test
pop
xchg
je
fsts
push
mov
or
inc
jg
add
and
jecxz
imul
push
dec
push
jecxz
inc
push
out
pop
jbe
sub
mov
pop
cmp
in
lret
call
testb
jp
xor
push
or
mov
jge
loope
mov
pop
rolb
iret
in
lock
and
mov
mov
fsubs
sbbl
xorl
rcrb
je
cmc
jle
arpl
pop
jne
push
add
mov
jecxz
inc
fimuls
mov
dec
xchg
into
out
pop
call
mov
rorl
pop
loop
fwait
in
clc
mov
insl
dec
add
xor
jb
jg
xchg
ret
inc
dec
pop
pushf
sbb
dec
outsl
push
mov
fwait
aas
adcb
test
scas
mov
jge
cmp
lock
and
ficomps
push
dec
adc
addb
dec
int3
ret
or
adc
xor
gs
sub
xchg
mov
sub
xlat
rcll
inc
cli
xor
fwait
out
jge
out
pop
xchg
adc
and
dec
out
add
icebp
xchg
pop
outsl
pop
daa
inc
inc
neg
sbbb
add
dec
idivb
in
xchg
sbb
pop
pop
mov
xchg
and
cmpsb
mov
pushf
cwtl
ror
cmc
dec
push
pop
loop
insb
icebp
or
cld
push
orl
cmp
sub
je
mov
addb
xor
jle
pop
dec
sub
xor
jbe
decl
lcall
dec
daa
scas
add
in
sub
mov
and
sub
scas
jp
enter
je
into
mov
cltd
mulb
jnp
xor
fmuls
sbb
mov
add
addb
jae
sbb
ret
and
in
mov
je
xchg
pop
in
sbb
push
sahf
mov
xchg
int
or
mov
jmp
inc
bound
mov
les
imul
push
cmpsb
stos
jecxz
pop
stos
pop
push
and
pop
fdivr
fildl
out
shr
cmp
and
add
jp
loop
push
push
inc
neg
cld
cmpsl
mov
jmp
cld
orl
ret
int3
jecxz
inc
mov
mull
vunpckhpd
jbe
mov
jle
pop
out
jns
inc
add
dec
mov
stc
lods
movsl
iret
js
call
icebp
sub
jp
testb
aas
add
xlat
pop
gs
adc
push
ja
push
push
xorl
jle
push
insl
aas
popf
hlt
lahf
inc
and
xchg
fwait
inc
xchg
imul
icebp
cld
loop,pn
cltd
test
cmp
add
jb
inc
xchg
scas
icebp
sub
loope
cmp
push
push
or
jbe
mov
adc
lcall
sub
pushf
cmpsb
and
pop
jge
add
fiaddl
sbb
stc
dec
inc
ret
enter
lahf
and
out
enter
pushf
pop
push
shr
sbb
icebp
inc
out
pop
addr16
push
pop
and
lock
in
rcrb
push
jns
scas
sub
pop
stos
sub
dec
mov
mov
and
lea
push
ds
sbb
icebp
andl
cmpsb
roll
jmp
fisttpl
cmpsb
mov
clc
adc
push
push
ljmp
inc
sti
hlt
lcall
push
mov
push
ja
mov
or
sbb
out
push
dec
mov
jnp
pop
mov
ljmp
jle
pusha
sub
clc
add
adc
and
dec
hlt
fucom
ds
and
inc
jne
jp
cli
sti
jae
add
fmuls
in
add
fnstsw
fs
pop
insb
loopne
ret
mov
imulb
addl
sbb
xchg
fwait
cwtl
inc
mov
sub
jecxz
sub
cwtl
ja
call
push
in
fldl
sahf
out
imul
ds
adc
xchg
pop
xchg
subb
xorl
inc
lret
pushf
sbb
jge
imulb
hlt
sbb
jmp
sbb
gs
pop
lock
ret
xchg
add
mov
xor
add
pop
cwtl
push
inc
out
push
movsb
and
mov
mov
test
ret
push
cli
imul
idiv
int
mov
clc
icebp
sub
xchg
das
mov
imul
pop
cld
jge
mov
icebp
popl
jo
ret
std
out
cmp
aaa
sbb
icebp
dec
or
xor
mov
popf
loop
sbb
xor
in
mov
sub
mov
mov
std
scas
test
sbb
cltd
push
and
add
sbb
int3
fiaddl
sbbl
fistpll
mov
in
testb
cltd
xor
jae
mov
push
xor
dec
into
sbb
push
push
orb
imul
xlat
enter
adc
jecxz
pop
xchg
lea
ja
xchg
dec
push
pop
movsb
cmp
iret
dec
daa
sub
je
repnz
lods
cmpb
outsl
mov
mov
lea
inc
icebp
iret
sub
mov
mov
pop
rep
ds
adc
das
mov
sbb
dec
and
pusha
outsl
adc
cmp
addr16
sbb
mov
popa
lret
and
cli
lea
jecxz
inc
xor
sbb
out
jnp
sub
mov
lods
sarb
mulb
inc
push
and
inc
push
sub
lods
jecxz
and
cmp
pop
les
dec
pop
push
push
or
ret
xor
loopne
adc
int3
cld
add
stos
outsb
jge
and
pop
sub
cmp
or
xor
xor
testl
xchg
pop
clc
xor
cmp
icebp
in
nop
cmp
sbb
sar
lds
mov
sbb
adc
pop
pusha
pop
cli
aad
ret
and
add
nop
mov
insb
cld
push
cmp
into
push
addr16
and
jmp
fiadds
jge
mov
movsb
pop
cmpsb
xchg
jb
insb
xchg
jae
sbb
cs
mov
sbb
jecxz
popf
cmp
dec
and
push
cmp
jecxz
andl
inc
pop
and
insb
orl
test
push
cmp
lea
pop
pop
das
paddd
adc
sub
sbb
cld
jecxz
xor
mov
call
mov
popf
sub
lock
out
mov
xchg
xor
sbb
fdivr
mov
pop
mov
aam
sub
jle
push
add
push
popf
jl
xchg
adc
cmp
mov
dec
xor
cmc
xchg
dec
push
jmp
fimull
jle
mov
mov
xlat
xor
rorb
lret
add
jae
and
pop
jecxz
arpl
inc
cltd
bound
and
lock
adc
fwait
lods
aas
push
dec
add
push
jo
push
out
sahf
add
lret
jle
sbb
scas
mov
push
sub
jecxz
testl
sti
jg
push
push
dec
push
jecxz
cmp
sar
sbb
and
cs
add
inc
jle
push
xor
insl
jns
bound
fidivs
jno
inc
jle
das
int3
je
or
orl
xchg
lret
mov
aaa
movsl
mov
adc
out
dec
push
add
jecxz
jge
mov
and
push
mov
xchg
inc
fcmovnu
dec
fidivrl
sbb
push
dec
add
mov
push
loop
sbb
test
leave
jecxz
or
dec
and
aas
or
dec
xor
jl
jl
mov
push
mov
push
mov
hlt
mov
popa
daa
fisubl
test
push
mov
ja
add
push
adc
clc
add
jecxz
and
push
jb
arpl
adc
outsl
sbb
nop
lea
outsb
fstps
pop
jnp
cmp
push
mov
rcrb
subb
jo
mov
sbb
pop
enter
call
hlt
inc
aaa
scas
add
mov
mov
addl
jbe
sub
sbb
je
repz
scas
loope
push
pop
adc
jecxz
movsl
cmp
pop
pop
adc
cmp
mov
clc
push
ret
xchg
divl
mov
fsubs
mov
xor
adc
popa
sub
xchg
icebp
test
xchg
sbb
sub
shrb
dec
dec
sbb
xor
xchg
mov
pop
nop
mov
inc
and
mov
or
pop
jne
out
inc
pop
jmp
iret
aam
or
pop
hlt
imul
into
xchg
sbb
fs
push
rcrl
movsl
fistps
fs
ljmp
outsb
mov
mov
repz
jnp
xchg
loop
and
int
cmp
cmp
fwait
lahf
xchg
negl
cli
fisubrs
xor
ror
movsl
lahf
lahf
jne
dec
jns
cmc
fsubs
fcoml
clc
inc
fidivrs
test
inc
mov
test
sub
outsb
fiadds
into
add
outsb
or
movb
add
int
inc
jno
pop
nop
push
pop
mov
push
add
insb
in
and
jp
ja
mov
dec
cmp
push
scas
lret
inc
xchg
push
lret
sbb
jle
mov
add
mov
mov
jg
in
sbb
test
jnp
lcall
mov
lret
cli
push
pop
mov
cmp
pop
add
cltd
pop
xor
shll
stos
add
sub
in
push
fisubs
or
push
dec
sbb
xor
ss
sbb
cmp
push
sub
das
repnz
pop
xchg
in
xor
fwait
xor
imul
je
into
into
in
xchg
push
ljmp
dec
sub
mov
mov
cmp
lea
jns,pn
and
and
jg
inc
pop
jecxz
jne
pop
push
dec
cs
cmp
aas
sub
jl
xchg
cmp
aaa
mov
jne
pop
sbb
popf
or
ret
xor
and
shlb
ja
add
loop
ss
xorb
and
mov
pop
dec
pop
and
mov
pop
cmp
andb
xor
xor
test
pushf
push
xchg
sbb
dec
dec
sbb
pop
aad
andb
jns
push
add
sbb
xor
fdivrs
push
pop
outsl
testl
cld
xor
imul
xchg
enter
gs
pop
jl
fcoms
arpl
shlb
popf
rorl
fsubs
add
inc
and
rolb
and
xchg
stos
dec
sub
int3
add
xchg
dec
pop
loope
enter
into
ja
push
add
cmp
jp
loopne
and
add
adc
jo
sti
pop
test
mov
push
inc
repnz
adc
fcompl
cs
inc
xchg
jp
and
xorl
dec
push
loope
in
imul
inc
ret
je
jae
out
dec
push
loop
out
add
inc
pop
das
mov
imul
cmp
pusha
pop
daa
cs
sbb
jle
mov
add
mov
xorl
sbb
pop
shrb
mov
cs
and
testb
push
mov
lahf
inc
pop
ret
cli
jp
adc
jg
pop
out
rcrl
lods
xchg
sbb
rolb
loope
dec
arpl
xor
and
add
jmp
cmp
mov
pop
and
test
test
mov
cmpsb
mov
cmc
fimuls
adc
mov
inc
or
inc
sub
pop
and
pop
fwait
pop
ljmp
in
mov
sbb
mov
test
push
stc
sub
sub
jecxz
scas
inc
mov
mov
incl
xchg
fnstenv
repnz
mov
inc
shr
push
inc
cmp
pushf
jbe
dec
sub
sub
xchg
dec
test
orl
xchg
rclb
out
call
fistps
rorl
mov
movsl
xor
gs
and
icebp
shrl
into
ljmp
sbb
cmp
cmpsb
jns
jbe
sbb
sbb
in
add
xchg
loop
test
mov
cmp
push
dec
inc
sub
hlt
int3
fwait
add
ljmp
dec
enter
pop
mov
pop
insb
mov
sbb
jg
mov
push
mov
dec
jmp
loope
or
pop
lods
adc
ret
mov
clc
or
out
mov
dec
cmp
fistl
fldcw
cmp
cmp
adc
sarb
jnp
sahf
pop
push
fldt
dec
and
jnp
xchg
push
xchg
pop
mov
push
stos
icebp
adc
stos
add
hlt
test
dec
or
scas
or
jecxz
xor
decl
xchg
aaa
insl
dec
lds
mov
aam
adc
test
sahf
ficoms
sub
sub
inc
mov
sbb
mov
push
aas
das
in
xchg
leave
push
loop
mov
nop
daa
cmp
daa
ja
orb
jecxz
aas
sbbb
adc
mov
notl
repnz
in
sub
dec
fwait
adcb
lock
xor
add
shl
dec
scas
int3
pop
aam
pop
cs
and
mov
pop
loop
cli
popf
lret
cmpsl
xor
shlb
jno
mov
loop
or
shrb
dec
or
fucomp
aam
jle
push
mov
icebp
sbb
movsl
rcr
sub
fisttpl
test
jns
ljmp
loope
push
gs
into
jnp
pmullw
sub
outsb
in
in
add
and
sbb
stos
fdivs
mov
iret
ret
fcomi
mov
mov
xchg
mov
jg
cmpsb
jecxz
inc
cmp
xchg
sbb
fcompl
adcl
mov
sub
hlt
cmpl
lcall
andb
push
into
push
dec
sbbb
mov
arpl
les
mov
jecxz
inc
and
lcall
xchg
sub
mov
pop
rorb
jnp
in
add
push
or
mov
and
das
jge
mov
push
ret
xor
mov
test
das
push
clc
ljmp
mov
lcall
adc
stc
sub
mov
clc
add
push
pop
or
fcoml
in
into
bound
push
xchg
insb
incb
in
mov
bound
xchg
mov
enter
pop
xchg
cmpsl
cs
pop
lahf
push
call
movsl
icebp
gs
hlt
jle
pop
push
bound
or
or
mov
hlt
mov
xchg
int3
stos
xchg
lcall
cwtl
sub
sbb
dec
pop
ljmp
pop
aam
pop
fidivl
fildl
or
jns
rorb
sarl
sbb
andl
addl
pop
adc
inc
cmpsb
loope
add
sub
imul
inc
aaa
cmpsb
jne
xchg
pop
in
inc
add
mov
and
sbbl
dec
outsl
ja
jg
cli
iret
fiaddl
ljmp
or
sub
xchg
ret
sbb
pop
es
mov
sbb
lods
mov
jecxz
sub
scas
add
jmp
pop
adc
imul
movsb
fisubrs
mov
pop
test
sahf
xchg
jmp
jecxz
sub
add
orb
je
popl
fadds
in
pop
lods
loope
adc
test
push
push
movsb
mov
mov
scas
out
sub
fmuls
adcb
add
inc
sbb
inc
mov
mov
sub
je
jg
dec
push
mov
cmp
push
jecxz
nop
sub
fisttps
bound
mov
leave
mov
inc
push
add
cmpsl
outsl
cmp
int3
adc
adcb
ud0
or
push
push
push
pop
movsb
and
jecxz
mov
adc
dec
scas
inc
xchg
cmp
push
fcompl
imul
mov
pop
pop
loop
mov
popf
pop
orb
loopne
fisttps
rolb
es
lds
into
inc
mov
mov
dec
mov
add
mov
jle
loope
fstps
adc
push
push
jecxz
push
call
pop
negb
loope
xlat
sbb
test
add
pop
jb
mov
sub
test
ja
pusha
hlt
clc
insl
push
mov
das
pop
adc
pop
pop
rorl
add
fisttpll
xchg
and
jg
loope
jno
pop
push
sub
push
loop
ljmp
in
negb
sub
add
fcmovnb
mov
out
jg
iret
mov
test
adc
lret
lar
xchg
sub
adc
test
fsts
jle
je
das
imulb
out
cmp
call
ret
out
jl
pop
inc
cmp
imul
call
sar
in
fnstcw
fdivrp
mov
inc
jmp
inc
sbb
shl
outsb
mov
xchg
out
inc
jp
sbb
cwtl
icebp
push
js
into
call
mov
sub
inc
xchg
mov
scas
testl
mov
sbb
sub
mov
enter
bound
xchg
pop
stc
sbb
mov
inc
ja
adc
insb
mov
rcrl
jg
push
xor
xorb
push
outsb
cmp
pop
push
nop
pop
sub
jnp
dec
adc
testb
and
dec
mov
xchg
fwait
add
sbb
pop
sub
dec
dec
and
aad
sub
es
xor
es
pop
stos
mov
rcrl
xor
dec
out
xchg
pop
sub
pop
mull
pop
and
inc
sub
addl
pop
ret
mov
sub
inc
pop
pop
jae
cmp
imul
sbb
pop
fs
dec
mov
push
adc
movsb
addb
cwtl
xchg
lret
xchg
inc
icebp
test
lods
pop
rorb
push
xlat
dec
dec
adc
mov
scas
addr16
jge
push
mov
adc
push
and
lret
jecxz
imul
pop
xor
test
outsl
cmp
test
stos
and
push
outsl
xchg
add
pop
popf
jmp
into
add
fildl
dec
add
adc
or
push
pop
and
pop
sbb
and
add
cltd
push
pop
pop
aad
ret
add
cmp
leave
and
xchg
adc
fld
idivb
mov
pop
pushf
add
mov
rcr
repnz
sbbb
dec
ret
lcall
xchg
jge
xlat
sbb
shrl
mov
inc
xor
jbe
or
and
xor
je
cs
cmc
add
mov
mov
dec
and
add
and
add
les
xchg
push
mov
pop
arpl
mov
hlt
mov
les
les
int3
imul
loop
pop
rorl
add
sti
shrb
repnz
mov
sahf
and
mov
scas
adc
int
mov
dec
xchg
push
clc
lods
sub
xor
inc
popf
adc
and
stc
lret
lds
orl
ret
ret
in
cli
xchg
ret
sbb
test
sbb
lods
imulb
push
add
mov
mov
ljmp
loope
xor
shlb
jae
cli
sbb
lcall
mov
and
enter
data16
in
enter
jmp
shlb
out
mov
jecxz
mov
add
add
out
mov
sti
fs
daa
or
jg
dec
dec
loop
sahf
sti
fwait
ds
cmpsb
and
inc
nopl
loope
sub
ja
punpckhwd
pop
ret
leave
inc
jl
cs
dec
jecxz
mov
loopne
aad
andl
sub
push
imul
jbe
lds
jo
fs
scas
mov
and
sbb
lds
mov
xchg
sub
push
sti
push
fmull
aaa
push
mov
mov
jle
push
add
adc
andb
cmovb
outsb
movsl
lds
outsl
in
pop
cltd
movsb
decl
jecxz
mov
mov
in
lea
xor
addl
dec
adc
sbb
mov
mov
dec
mov
stos
adc
mov
popa
cs
ffree
cld
xchg
adc
negl
mov
mov
hlt
xorb
loop
xor
jb
daa
lret
mov
inc
cli
mov
xor
aas
mov
adc
pop
cltd
outsb
xchg
aam
xchg
pop
jl
adc
call
sub
sbbb
sbb
inc
in
outsl
jg
jecxz
fiaddl
ror
pushf
jl
popf
pop
lock
sbbb
pop
pop
and
flds
repnz
cltd
xor
xor
loope
jne
out
add
jl
icebp
arpl
adc
cmpsl
rorl
jb
push
out
sbb
incb
xchg
fldcw
in
mov
bound
cltd
xchg
xor
xor
inc
repz
dec
mov
orb
rorl
out
sub
out
mov
push
andb
dec
addl
mov
sub
enter
cwtl
push
lahf
xor
and
pop
inc
sub
ljmp
cs
add
loopne
add
adc
inc
or
jae
jne
cld
jne
hlt
scas
inc
cmp
dec
fidivrs
jbe
rcrl
out
dec
aas
push
stos
push
movsb
dec
arpl
arpl
add
xor
bound
jp
push
jnp
hlt
js
sbb
jo
les
xchg
and
adc
mov
mov
mov
lcall
hlt
jb
sub
shlb
cmpsb
mov
xchg
push
lcall
and
add
imulb
loop
jg
pop
cmp
movsl
add
popf
pop
pop
aas
iret
lret
loope
enter
or
jp
jo
es
cmp
idivb
in
fdivs
ret
nop
aad
jg
call
dec
push
and
sub
loop
mov
xor
mov
iret
mov
les
ljmp
push
sbb
xor
sbb
lock
out
test
je
pop
rcrl
pop
lahf
mov
xorl
outsb
mov
jno
sar
gs
push
add
sub
push
stos
gs
imul
mov
pop
test
xchg
cli
test
jmp
test
mov
dec
shl
enter
push
out
bound
cmp
cltd
xchg
aam
inc
ja
dec
rcrl
scas
dec
fwait
sub
ja
testb
inc
sub
das
xorl
jle
ret
dec
xor
aad
repnz
shrb
aas
mov
lret
cld
icebp
jb
xlat
in
mov
in
mov
push
subb
inc
xlat
movsb
cmp
hlt
jb
fcoms
inc
xchg
movsl
push
xchg
lahf
pop
test
aad
mov
sub
push
shrb
push
mov
scas
lock
jge
add
stos
jo
adc
sbb
loop
mov
shll
clc
pop
adc
add
or
lods
subl
sub
inc
popa
incb
push
loop
pop
xlat
adc
fwait
or
inc
cmp
jbe
pop
adc
in
mov
imul
push
push
cmp
adc
cmpb
fidivs
sbb
outsb
adc
jge
xor
dec
out
imul
mov
icebp
adc
mov
aad
xchg
or
dec
lock
stos
subl
add
scas
into
imul
sbb
fs
popl
or
dec
out
and
test
xlat
fwait
popl
sub
jns
sub
rdtsc
and
add
sbb
jle
sub
xchg
into
cmp
mov
push
loop
movsl
pop
lcall
dec
test
mov
mov
test
sti
sbb
xor
clc
sbb
dec
xor
sti
dec
sahf
stos
xor
dec
outsl
sahf
das
push
mov
dec
fistps
and
cwtl
push
stc
xor
rcll
rorl
lret
dec
mov
mov
jne
sub
xchg
adc
jecxz
add
in
inc
out
pushl
xlat
in
mov
ret
aam
in
jge
cmp
sub
xchg
and
fwait
lcall
sbb
jp
or
stos
push
ror
dec
ja
and
push
adc
mov
pop
pushf
jne
popf
addr16
addl
pop
dec
sub
popa
aaa
inc
mov
nop
pop
std
push
or
dec
mov
cli
xor
cltd
into
mov
lods
test
adc
pop
sub
inc
adc
push
loopne
dec
inc
sti
xchg
and
jmp
loope
adc
xor
xor
pop
shrb
dec
pop
fucom
jo
iret
in
pop
pop
into
lods
xor
stos
xchg
mov
cmpl
xchg
dec
or
dec
add
xor
loop
or
mov
adc
push
adc
sbb
int3
stos
or
push
divb
bound
ret
xlat
jg
or
pop
dec
pop
dec
xor
push
enter
sub
orb
mov
or
shrl
xor
sub
ds
dec
mov
mov
adc
test
jmp
lret
mov
pop
fstpl
and
out
pop
pop
add
inc
mov
orl
dec
sub
out
ret
loop
ja
dec
jbe
sbb
pop
jle
out
rclb
and
cmpsb
shll
fsubr
ret
or
pop
setbe
shlb
divl
fisubrl
sub
mov
push
mov
push
out
js
andb
sbb
cmp
mov
mov
adc
add
inc
adc
mov
movsl
dec
fimuls
mov
mov
jae
inc
sbb
and
out
es
adc
das
loope
ljmp
jg
popf
pop
outsb
repz
xchg
mov
decl
loop
cmpsb
mov
daa
cmc
les
push
out
mov
popa
outsb
cmp
jecxz
mov
add
xor
scas
mov
xor
cmp
dec
xorl
add
mov
or
lds
lock
sbb
dec
xor
xchg
pop
jecxz
mov
out
orl
mov
bound
jg
loopne
mov
xchg
add
inc
xor
jle
subb
dec
and
xchg
lret
repz
mov
sub
sub
xor
adc
imul
sbb
cmpsb
cmp
add
or
lock
les
out
inc
icebp
test
xacquire
ret
repnz
and
mov
jno
fwait
sbb
mov
push
loop
scas
orl
out
push
add
mov
cmp
decb
sub
jl
outsl
mov
into
and
loope
mov
pop
push
sbb
cmc
cld
push
push
dec
sbb
loopne
test
and
mov
aaa
insl
push
fnstcw
jecxz
sbb
sub
cmp
sbb
adc
mov
mov
cltd
mov
jge
orb
push
pop
lahf
sub
lret
repz
rcll
pushf
cmp
ret
fisubrl
xchg
push
loopne
popf
xor
andl
add
lret
sarb
add
mov
sbb
mov
enter
adc
loop
fdivs
je
stos
sub
adc
pusha
test
or
xor
int
ljmp
jecxz,pn
cmpb
jecxz,pt
and
test
jecxz
das
lods
hlt
cmp
sub
and
scas
dec
into
pop
adcl
nop
aaa
add
call
rorl
and
repnz
add
mov
test
xchg
add
outsb
xchg
ljmp
and
test
xchg
xor
sbb
sub
xchg
push
cmc
test
pop
cs
adc
mov
inc
pavgw
cmc
xchg
adc
jae
adc
pop
jo
and
and
fstps
add
es
out
cli
mov
mov
dec
adc
adc
cmp
pop
and
sar
fcmovne
stos
sti
shl
adc
add
inc
adc
popa
push
inc
sub
movsl
xor
js
mov
mov
jmp
add
fucomi
sub
jbe
jnp
sub
inc
out
jno
xchg
jbe
cmp
jmp
push
pusha
out
mov
mov
push
mov
clc
cmp
add
adc
popf
outsb
ret
push
cmpsl
iret
inc
jnp
bound
popa
adcl
sub
or
bound
cmpsl
fstl
inc
cli
inc
out
aas
stos
movsl
stc
or
ret
add
fwait
xor
xchg
pop
jecxz
not
mov
sbb
bound
adc
jb
pop
repz
dec
sbb
cmp
ds
mov
mov
call
adc
and
mov
push
xlat
sub
jb
sahf
mov
mov
cli
jg
xor
adcl
clc
jnp
cmpsb
inc
fs
in
push
xor
ror
dec
jecxz
jg
mov
les
sub
push
ffreep
mov
mov
iret
mov
dec
mov
or
mov
testb
xchg
in
xchg
sbb
fcomps
jecxz
mov
lret
mov
pop
orb
inc
jp
fwait
repz
notl
mov
adc
lock
sti
add
push
call
xor
sbb
add
sbb
mov
jo
rorb
int3
daa
pop
xor
xchg
fwait
xchg
cmpsl
sarl
imul
mov
cmpsl
cmp
jecxz
push
into
jge
cmpsb
fisttps
sub
loop
xchg
and
xor
jg
push
dec
ret
mov
inc
inc
div
insb
jne
cld
jbe
inc
and
stos
sbb
ljmp
push
aad
sbb
sbb
lret
aaa
jbe
push
ljmp
jne
jnp
push
sahf
inc
mov
and
pop
push
jo
push
sbb
add
sub
scas
push
insl
int
lock
sub
rcrl
sbb
sbb
mov
sbb
out
incb
sub
push
sbb
cmpl
adc
jg
sbb
and
adc
inc
shlb
out
cmp
stos
add
mov
sub
cs
or
lcall
enter
jns
pop
fcompl
mov
cmpl
in
scas
jmp
mov
push
sbb
imul
push
cmpsl
cli
call
outsb
out
stos
pop
jecxz
dec
stos
imulb
je
rcrb
mov
nop
mov
xchg
lods
adc
mov
and
repnz
fimuls
cwtl
xchg
xor
fildl
and
repnz
pop
xchg
and
in
inc
hlt
mov
pushf
outsl
xlat
pop
xchg
inc
mov
mov
add
mov
fcompl
cld
inc
jmp
cmp
lahf
js
cmovl
mov
je
pop
loop
jae
cwtl
mov
jno
cs
pusha
fsubs
loopne
es
imul
bound
mov
testb
add
dec
testl
cmpsl
dec
sub
adcl
movd
mov
jnp
stc
rcrl
lcall
ljmp
hlt
sub
lcall
sar
pop
pop
cmp
xchg
mov
and
inc
jle
pop
enter
pop
xchg
inc
mov
or
xor
bound
mov
ficomps
inc
mov
and
mov
pop
dec
xor
fiaddl
es
pop
add
jmp
push
jle
add
mov
sbb
cmp
in
cmp
jecxz
setne
sub
adcl
daa
sub
stc
inc
or
xchg
mov
add
negb
das
xchg
add
pop
imul
je
xchg
lods
and
stc
cs
sbb
roll
inc
fmull
sbb
test
push
stos
dec
jo
inc
shll
or
xor
cmp
dec
push
test
pop
and
push
or
jecxz
add
mov
inc
add
fcomps
mov
cmpb
fdivs
jbe
cld
jno
cs
jg
mov
mov
daa
jo
lret
and
vdivss
pop
mov
out
pop
test
xchg
enter
ds
sbb
ja
xor
mov
frstor
fstpt
and
mov
xchg
cmpsl
aas
test
mov
mov
pop
je
pop
xchg
jmp
call
imul
dec
sub
out
sub
xor
mov
sti
cmp
jl
jecxz
imul
push
cli
jbe
mov
mov
dec
aam
mov
and
inc
mov
test
jl
xchg
mov
mov
jecxz
lods
pop
sbb
push
leave
push
adc
fsubp
js
jg
andl
xchg
sub
sarl
fs
orl
dec
add
pop
aas
jbe
shll
stos
cmp
arpl
sbb
pop
or
mov
mov
ljmp
adc
dec
xor
mov
push
loope
subb
stos
mov
mov
repz
adc
shrb
pop
ds
iret
lea
push
jp
scas
fisttpll
repz
adc
push
sbb
or
lds
cmpsb
loopne
insb
or
hlt
movd
pop
jl
adc
sbbl
pop
pop
mulb
xchg
aaa
xlat
cmp
sub
fidivrs
jl
push
imul
popa
mov
xchg
fadds
adc
dec
pop
pop
inc
pop
ret
mov
pop
fbld
mov
jmp
sub
lret
negb
jg
adc
sbb
and
push
dec
inc
cmp
pop
push
and
bound
imul
adc
mov
adcl
push
sarb
loop
push
sahf
add
int3
mov
ja
inc
sbbl
and
mov
adc
sub
lods
sbb
pushf
loope
outsl
shlb
jecxz
sub
dec
add
push
lea
or
pop
sbbb
xor
and
jle
xchg
mov
inc
jl
sub
sbb
or
addl
int
push
jle
mov
mov
add
aaa
outsb
inc
js
adc
xor
jo
lcall
aaa
xchg
sub
add
fisttpl
test
push
mov
repnz
push
xchg
out
adc
test
sub
add
adc
push
mov
rorl
dec
sbb
dec
outsb
bound
jmp
loop
xlat
pop
sub
movaps
xchg
add
mov
les
fwait
rorb
cwtl
dec
clc
xor
sbb
xchg
enter
ret
add
xchg
pop
out
dec
ret
xchg
jne
push
jmp
mov
mov
imul
xchg
inc
pusha
push
mov
subl
adc
pop
adc
sbb
sub
shlb
sub
loope
repz
dec
cwtl
jnp
js
add
movsb
pop
jecxz
sub
scas
cld
lahf
scas
lock
out
sbb
fistpll
cli
pop
cld
or
or
jge
pop
test
and
add
inc
repnz
add
nop
mov
mov
mov
mov
add
icebp
repnz
scas
orl
dec
mov
push
dec
mov
bound
sub
imulb
cmp
arpl
adc
xchg
pop
xchg
push
mov
xchg
mov
hlt
mov
div
jecxz
into
dec
sbb
jg
mov
pusha
adc
loop
arpl
xor
cmpsb
push
cmp
cmpsb
lahf
sub
sahf
lret
xchg
inc
cwtl
cld
mov
sbb
sbb
mov
and
in
jmp
out
add
movsl
pop
add
sbb
cli
or
pop
in
sub
sahf
inc
sub
jecxz
adc
jecxz
out
mov
sbb
pop
mov
sbb
jle
mov
iret
das
loope
add
nop
dec
or
cltd
lea
sub
sub
pop
mov
pusha
or
movsl
xor
xor
orb
pop
dec
mov
aaa
aad
pusha
or
xor
sub
test
push
sub
popa
lldt
push
pop
xor
pcmpeqw
mov
xchg
or
dec
stos
sbb
loope
mov
mov
outsb
push
push
mov
inc
mov
das
es
xchg
inc
dec
fs
insb
jle
movsl
cmp
fdivl
mov
dec
cltd
xor
jo
sbb
idivb
test
cld
dec
jb
jne
mov
push
idivb
call
jp
jecxz
pusha
dec
adc
adcl
push
fcomps
inc
xor
cmp
ds
inc
rorl
xor
punpckhdq
cmp
xor
ror
pop
mov
int3
xchg
sub
add
adc
push
mov
cmp
mov
cmp
lock
test
cs
and
test
xor
adc
std
aam
inc
add
cld
sub
enter
sbbl
pop
jno
sbbb
mov
ds
cmp
pusha
cld
push
mov
adcb
cmp
add
repnz
pop
inc
or
sbb
xchg
movsb
sbb
xor
roll
dec
lods
stos
pop
lret
xor
xor
inc
repnz
lock
push
enter
push
jg
xchg
fdivrs
inc
push
lds
shlb
xchg
push
mov
sub
adc
pop
sbb
mov
ret
add
jbe
or
rcr
repnz
sbb
call
pop
mov
outsb
repnz
popf
in
push
sub
pop
cmp
mov
mov
sbb
jns
or
pop
mov
push
test
popa
add
rcll
clc
dec
inc
je
fwait
mov
cmp
das
bound
jmp
inc
sub
push
stc
mov
leave
ljmp
jge
stc
add
test
sub
sahf
lcall
mov
jle
bound
movsb
jl
push
lcall
in
orl
sub
jmp
cwtl
je
loop
fcmovb
xlat
pop
in
scas
add
sub
mov
in
sub
out
xchg
sbb
pushf
mov
jecxz
ja
fwait
out
in
orl
mov
mov
fstps
xchg
adc
pop
cmpsl
xorb
pop
loop
push
into
sbb
push
jle
pop
fwait
outsl
sbb
pop
stos
jl
neg
push
cs
shrl
pop
addb
dec
mov
jl
ljmp
inc
jecxz
scas
dec
push
jle
jg
cli
jg
inc
jns
daa
xor
pop
out
mov
inc
jbe
mov
adc
leave
push
pusha
push
and
push
in
pop
or
sbb
dec
hlt
cmp
roll
test
jns
lcall
ljmp
outsb
hlt
clc
jo
mov
inc
cmp
decb
sub
mov
mov
in
xor
sbb
xchg
pop
dec
fisttps
pop
push
inc
out
xor
cld
mov
dec
imulb
pop
fsubr
out
incb
add
pop
pop
out
sub
aas
fs
mov
fsts
je
arpl
addl
dec
ret
jle
jecxz
out
mov
orl
ds
mov
cs
notl
dec
jnp
cltd
dec
outsb
lcall
sub
orps
jg
pop
dec
fcomps
call
jg
dec
pop
aaa
addb
mov
pop
mov
cmp
insb
xchg
addl
xor
movsl
adc
stos
mov
fldcw
adc
shrl
int
jb
pop
out
xor
shlb
fidivs
xor
add
mov
jnp
or
inc
jne
mov
in
sahf
pop
mov
mov
cmpsb
das
jge
or
sub
push
lea
daa
inc
aam
inc
in
lock
mov
mov
push
cmp
loop
cwtl
push
push
push
sub
jecxz
sub
pop
and
pop
inc
loop
scas
pop
aas
cmp
sub
push
dec
divl
jo
jge
das
xchg
pop
push
add
das
cmpb
jo
repnz
popf
scas
push
pop
dec
aas
hlt
mov
sbb
cmp
movsb
add
dec
jno
xor
xchg
imul
push
xchg
push
bound
pop
add
mov
jecxz
mov
jmp
push
notl
shlb
out
add
ret
push
insl
mov
mov
das
adc
insl
sbb
dec
and
call
and
add
inc
out
movsl
add
fistl
or
sbb
sub
and
xchg
and
sbb
sub
mov
and
flds
loope
push
sbb
xchg
mov
pop
into
into
mov
xchg
lds
jae
or
cmp
jae
mov
inc
sbb
insl
cli
adc
pop
clc
imul
xchg
in
add
movsl
imul
gs
jg
mov
cmpl
jmp
cmpb
je
sbb
add
aad
xchg
push
adc
das
out
pop
outsb
popa
sbbl
sub
ds
dec
inc
dec
push
xor
cmpl
pop
push
mulb
sbb
stos
push
jecxz
dec
sub
jg
ja
mov
push
pop
dec
push
push
dec
out
push
ja
sbb
jae
clc
scas
jl
add
icebp
fiaddl
inc
mov
insl
jne
mov
testb
sbb
sahf
outsb
mov
subb
sbb
fnstsw
jno
adcl
roll
ret
stos
scas
xor
mov
adc
dec
push
je
and
fwait
into
test
pusha
popf
test
cmp
push
inc
dec
insl
mov
xchg
push
movsl
fimuls
test
loope
aam
inc
mov
and
adc
addr16
xchg
leave
push
xchg
addl
inc
xchg
jns
jno
add
add
dec
fldenv
cmp
dec
lods
inc
movl
ljmp
push
mov
or
mov
je
xchg
in
sub
mov
mov
jecxz
push
out
clc
dec
cmp
inc
cmp
dec
xchg
insb
push
adc
or
xor
jp
push
rolb
in
addb
adc
push
cli
int3
pushf
mov
dec
sub
xchg
inc
loop
dec
sti
movhps
aas
outsb
sahf
xchg
and
xor
add
cmp
adc
rcrl
cmpsb
lret
mov
mov
mov
insl
sub
pop
and
stos
adc
cs
aad
dec
add
in
insb
mov
cltd
pop
rcll
jmp
mov
push
xchg
daa
inc
jne
sbb
jecxz
sub
hlt
sbb
pusha
xchg
bound
sub
gs
sbb
insb
or
ret
lods
sahf
pop
hlt
xchg
jae
enter
adc
jbe
dec
les
mov
push
cmp
pop
nop
sub
movsb
mov
pop
lods
add
lahf
movsb
sbb
xchg
jne
pop
imul
popf
imul
loope
and
fcoms
jno
out
inc
pop
test
jg
jb
fs
push
hlt
ret
xchg
mov
or
cmp
sub
pop
test
add
std
lret
add
sbbb
jecxz
pop
orl
stc
and
mov
aam
or
mov
mov
xchg
or
mov
jbe
imul
sub
and
adc
adc
sub
or
adc
lret
aas
dec
in
or
fildl
xchg
je
subl
or
adc
inc
sbb
sti
cmp
xchg
daa
jecxz
addb
mov
xchg
popf
fisubrs
cmpsl
jae
mov
jb
cmp
mov
lret
dec
pop
jg
lahf
xchg
fiadds
jb
pop
sub
jge
fiaddl
mov
xor
and
add
sbb
jb
scas
dec
lods
sbb
inc
lcall
inc
sbb
out
inc
int3
out
pusha
and
mov
cmc
hlt
dec
lret
lods
cld
sub
call
sbb
mov
xorl
popf
pop
sub
push
jge
lret
and
add
cli
dec
sti
or
pop
pop
loop
push
jne
outsb
xchg
dec
inc
cmp
and
hlt
mov
cmp
pop
shrb
rorb
jbe
das
into
xor
mov
sub
add
orl
stos
xor
adc
inc
pop
pop
jnp
cmc
in
call
xchg
pop
push
push
shlb
mov
and
pop
inc
dec
call
lcall
mov
xor
pop
jno
rorl
mov
test
xchg
jl
lock
push
jl
mov
into
sub
fwait
add
xchg
hlt
ficompl
mov
inc
cmp
bound
ds
in
out
orb
pop
pushw
sub
mov
adc
imul
mov
cmpsl
ret
push
jecxz
sub
cmp
out
imull
cs
cs
cmpb
mov
jmp
mov
popa
leave
adc
jle
notb
test
sbb
adc
or
push
test
xchg
dec
sbb
dec
sub
sub
mov
push
jecxz
adc
dec
jmp
sub
jno
inc
jle
cmp
fmull
aad
sbb
notl
cmp
repnz
fstpl
cmpsl
pop
or
jo
outsb
inc
cli
dec
or
ja
sub
ret
and
xchg
loope
mov
or
or
jecxz
jo
or
sahf
das
cmc
jae
push
ret
mov
and
or
fcoms
int
and
xchg
cmpb
xor
idivb
jbe
and
inc
cmpsb
jle
and
mov
mov
pop
add
push
push
sbb
aam
jge
scas
mov
and
loopne
cmp
lcall
and
xchg
aaa
jo
imul
mov
or
lods
in
add
mulb
jle
add
clc
or
pusha
push
push
jecxz
mov
or
cld
dec
adc
adc
in
and
add
push
movsl
xchg
lds
dec
jmp
into
outsb
hlt
jmp
inc
xchg
and
dec
mov
sahf
pop
xor
sbb
inc
test
mov
das
repnz
or
lcall
jne
ret
imul
pop
fwait
insb
xchg
pop
jne
fwait
fs
pop
jb
xchg
popa
fsin
addb
fisubs
jecxz
adc
or
pop
inc
adc
lds
pop
sub
sti
xchg
les
mov
enter
leave
pusha
push
mov
sub
mov
aas
lds
jb
push
sub
pop
test
push
ljmp
sub
sub
jecxz
add
cmpsl
lcall
or
push
mov
orl
xchg
ficompl
inc
ljmp
adc
adc
pop
cmpl
das
mov
cmp
xchg
sbb
push
cli
mov
mov
add
dec
icebp
lret
stos
push
dec
jle
inc
mov
popa
sbb
mov
and
and
out
xchg
dec
and
mov
data16
inc
sbb
int
mov
hlt
daa
xorb
scas
out
sbb
enter
xchg
sub
or
push
xor
mov
cmp
gs
gs
xchg
jg
xor
rcrl
je
jge
xchg
fsubl
leave
xor
mov
adc
cmp
adc
iretw
outsl
inc
cmc
jns
push
push
pop
scas
lods
leave
xor
subl
mov
repz
inc
test
fcompl
add
dec
imul
dec
ja
and
dec
loop
scas
add
jecxz
and
shll
inc
es
into
aas
push
scas
mov
push
pop
scas
rolb
icebp
jb
inc
mov
mov
sbb
sbb
leave
cltd
inc
mov
repz
insl
pop
xlat
in
shll
pop
enter
sbbl
sahf
push
insb
mov
nop
scas
push
and
cmp
pop
pop
aaa
push
adc
push
add
xor
and
pop
xchg
or
movntq
add
stos
sbb
lock
jno
add
or
repz
dec
popf
cmp
or
js
add
stos
pop
divb
xor
adc
jge
pop
or
cld
bound
mov
enter
dec
sub
inc
mov
test
adc
add
dec
inc
aaa
adc
push
or
sub
jg
xor
notb
xor
mov
mov
xor
addl
push
jecxz
sbb
stos
dec
pop
or
stc
in
data16
mov
scas
add
jno
icebp
jl
jecxz
les
fdivr
repnz
into
repnz
add
lahf
sub
dec
cmp
pop
mul
popa
mov
je
sbb
hlt
les
jne
and
adc
lcall
rclb
ljmp
fwait
ret
mov
push
pop
loop
inc
jmp
jecxz
lea
jle
inc
adc
inc
xchg
cs
pop
test
add
mov
adc
sbb
mov
lret
push
sbb
dec
pop
inc
mov
sbb
cmp
and
sbb
add
sub
insb
shlb
and
push
negb
int3
xlat
jae
sbb
sbb
outsb
add
xchg
shrb
pusha
lcall
das
mov
outsl
jecxz
movsb
jns
js
pop
push
rep
imul
adc
push
push
and
cli
dec
xchg
sbb
adc
mov
fadds
ret
sbb
pusha
or
mov
data16
pop
lret
sbb
add
aaa
fs
insl
movb
sub
or
rclb
dec
xchg
xor
cmpsb
sbb
dec
outsb
adc
loop
call
sbb
sub
int3
fdivl
adc
jle
adcl
stos
testb
ds
movsl
movsbl
push
in
push
adc
jge
pop
pop
pop
mov
flds
sub
inc
dec
xchg
xor
scas
sbbb
dec
ss
movsb
loop
nopl
add
or
push
xlat
inc
inc
push
sub
pop
divb
adc
jp
ret
xorl
outsl
or
loope
insb
xor
inc
xchg
jle
pop
repnz
aaa
orb
imul
je
adc
mov
fwait
add
add
call
negb
dec
adc
repz
push
sub
and
cmp
jecxz
inc
cs
mov
testl
dec
out
add
xor
pop
xchg
jns
enter
test
dec
xchg
sbb
out
into
sahf
sbb
pop
mov
xchg
pop
jl
in
inc
lcall
xor
sbb
loope
add
ss
data16
test
cs
mov
mov
xchg
dec
push
push
xchg
fldl
inc
addl
mov
adc
and
lea
or
xor
dec
lds
lea
dec
mov
and
loope
pop
fdivs
popa
ret
mov
rcll
xchg
xchg
loop
cmp
pop
loop
std
dec
mov
sbb
popf
push
cmp
popa
jne
addr16
mov
push
mov
faddl
jne
pop
call
sbb
in
or
inc
add
test
hlt
ljmp
add
faddl
fs
int
mov
pcmpeqd
imul
arpl
add
and
popa
jbe
scas
and
pusha
or
loopne
in
daa
in
jmp
jl
lsl
jmp
mov
mov
adc
xchg
push
sub
inc
add
dec
addr16
stc
test
inc
or
add
fwait
daa
sbb
push
repnz
add
sahf
sub
movswl
lcall
scas
aas
mov
mov
push
loopne
clc
outsb
sbb
add
jecxz
fldl
sbb
dec
test
sbb
out
and
loop
mov
xlat
sbb
jne
add
mov
lcall
adc
dec
mov
mov
push
rdtsc
sti
add
or
rorl
jle
and
dec
adc
sub
lcall
mov
mov
sti
dec
mov
insb
pushf
inc
push
push
mov
mov
or
repz
es
dec
sbb
adc
out
push
mov
lret
fcmovne
movsl
mov
or
adc
dec
shl
lods
rol
mov
sbbl
fsub
xor
add
hlt
jns
adc
xor
push
jae
sbb
add
mov
adc
mov
pop
inc
rorb
jb
xlat
iret
mov
inc
xorl
or
add
jg
pop
aam
sahf
mov
call
jns
cmc
decl
fisttps
loop
orl
addb
dec
mov
inc
mov
xchg
loope
movsb
mov
enter
subb
push
dec
jecxz
dec
xor
sub
fcomps
add
sub
jbe
add
mov
dec
cwtl
fwait
adc
mov
cmp
lods
loop
in
fstl
dec
mov
sub
xor
fdivl
xchg
rorl
out
add
pop
shlb
add
adc
std
sbb
xor
ret
push
int3
jp
add
sub
pop
lcall
cmp
shrl
pop
sub
movsb
subl
out
int3
adc
addr16
daa
adc
negb
scas
mov
xchg
lret
push
leave
subb
sbb
mov
cmp
and
movsl
bound
xor
inc
add
push
loopne
mov
mov
push
andb
out
or
jg
insb
testl
jecxz
andl
or
dec
xchg
test
mov
and
aas
lahf
and
icebp
sub
shrl
cmp
dec
cmpsl
inc
cmp
pop
adc
cmc
lret
jmp
cwtl
les
inc
ret
inc
or
and
pop
into
sbb
add
add
or
fsts
add
cmc
push
js
mov
add
pop
test
add
mov
mov
xchg
addl
adc
out
cmpsb
add
iret
mov
rolb
cmp
stos
out
and
insl
mov
mov
pop
jecxz
push
addb
fst
test
adc
movsb
sub
leave
jmp
mov
roll
push
fwait
sahf
pop
jbe
test
or
faddl
rolb
sbb
repnz
cli
xor
cmp
pop
jl
xchg
out
add
ret
js
inc
stc
fcmovne
shl
jo
mov
mulb
iret
mov
stos
std
sbb
mov
loop
data16
in
mov
lods
adc
xchg
lret
and
mov
sub
dec
add
mov
adc
and
dec
pop
sub
stc
adcb
das
in
outsb
push
addr16
loop
pop
scas
add
mov
mov
and
testl
out
push
inc
add
pop
cwtl
inc
push
dec
stos
add
inc
mov
jecxz
shll
adc
add
dec
cs
sub
mov
inc
lcall
or
jecxz
les
add
sbb
mov
daa
and
jge
pop
jns
and
push
cli
inc
cli
dec
sub
xor
es
sbb
fdivrs
adc
enter
icebp
or
icebp
jae
xchg
add
jns
fcmovb
or
jbe
xor
adc
mov
aas
bound
clc
mov
addb
add
outsb
js
mov
sbb
fadd
inc
cmp
out
mov
xchg
push
xchg
push
sbb
icebp
scas
lret
mov
insl
mov
popf
int3
inc
cmp
or
add
test
mov
fldenv
fldenv
mov
inc
inc
mov
push
sti
test
xchg
push
leave
lods
sbbb
jecxz
mov
jbe
jnp
adc
push
repnz
outsb
div
add
in
lret
cmc
or
and
cmp
cmp
int
ja
inc
lods
jne
lret
sub
out
pusha
femms
lret
ljmp
gs
or
clc
sub
clc
ds
cwtl
test
es
sub
shlb
call
std
mov
sbb
mov
ficomps
mov
or
out
cmp
sti
add
lret
add
fbstp
xchg
inc
das
push
jns
mov
cmc
mov
xor
add
clts
adcb
icebp
or
add
shl
ror
push
xchg
adc
out
lea
xchg
nop
sbb
fistl
jmp
mov
sbb
sbb
movsl
rclb
jns
sbb
stos
xchg
dec
fs
or
dec
dec
dec
repz
push
mov
enter
dec
mov
inc
push
je
movl
loop
mov
mov
decl
sub
sub
jp
mov
mov
jns
and
rolb
inc
jle
js
mov
ficoml
ja
popa
movsl
fildl
cli
loope
das
sub
cmp
sbb
outsb
mov
jns
and
sbbl
xchg
jne
es
outsb
mov
add
dec
mov
inc
pop
or
pop
lret
cmpsb
dec
dec
xchg
addb
loope
mov
test
in
xchg
push
inc
push
dec
and
mov
mov
inc
jecxz
mov
lret
jge
xor
loop
mov
lcall
pusha
enter
loop
xor
es
dec
push
ret
lret
and
pop
loop
ss
fldenv
jp
dec
jecxz
pop
xchg
cmpsl
mov
mov
testb
mov
cwtl
push
pop
xchg
dec
int
mov
fistps
stos
push
push
lcall
dec
pop
addr16
sbb
xor
and
sbb
mov
pop
loop
pop
sub
adc
idivl
arpl
fldl2e
sub
jecxz
fs
andl
push
dec
pop
xor
loop
or
iret
mov
test
bound
jle
jb
mov
xorl
enter
jle
dec
fildl
push
les
and
mov
pop
adc
push
ret
fidivrl
bound
add
cmpsb
push
sbb
push
sub
outsb
push
sub
rorb
sbb
push
push
sub
sbb
and
mov
pop
bound
mov
xchg
orl
sub
psrad
mov
lret
sbb
xchg
xor
dec
adc
inc
xor
sbb
iret
xor
dec
push
ret
das
sub
dec
xchg
sub
sbb
pop
mov
push
out
inc
and
sub
xor
and
pop
mov
cmp
icebp
and
gs
pop
adc
cmp
add
add
sbb
xchg
pop
inc
test
inc
daa
dec
cmp
sub
or
push
repnz
mov
mov
mov
xor
dec
repnz
jp
xchg
xchg
add
aad
sub
pop
add
fisubrs
sbb
insb
mov
add
icebp
mov
das
and
insb
ret
mov
aam
sbb
mov
lcall
das
sbb
xor
outsb
negb
cmp
jmp
push
adc
inc
add
sbbl
sbb
push
sub
or
pop
adc
mov
push
andb
pop
sub
cmp
mov
loop
cmp
into
sbb
ja
jno
mov
adc
push
xchg
mov
push
pop
inc
fbstp
rolb
lea
dec
je
stos
cmc
cli
sbb
shll
mov
inc
cmp
jne,pn
lret
loopne
add
cmc
sbb
dec
or
push
xor
jbe
in
add
jge
das
inc
cld
sub
lret
aam
sub
arpl
outsb
into
aad
lock
lds
outsb
inc
sub
lret
adc
cmp
repz
fldcw
lods
adc
mov
pop
push
lock
adc
enter
ljmp
loopne
mov
cmp
pop
xchg
js
mov
add
test
jge
cmpl
ret
nop
outsb
and
pop
mov
inc
push
jg
sub
popa
sbb
adcb
lds
sahf
add
lea
cmpsb
inc
xor
dec
push
shll
ds
adc
stc
push
leave
mov
sub
sti
or
shlb
cmpsl
dec
or
test
negb
ds
loope
aas
clc
add
sub
mov
dec
incl
sub
sub
push
sbb
daa
cmp
ds
adc
xor
sub
fwait
mov
rorl
sbb
or
pop
rcll
dec
mov
or
push
or
pusha
fcompl
ror
in
es
mov
fs
addb
dec
cmp
inc
outsl
divl
ret
loope
fistpll
movb
leave
icebp
dec
push
scas
xor
popa
sti
shll
test
cmp
mov
add
pop
pop
pop
cwtl
jns
lcall
sub
sbb
push
out
push
addb
inc
sbb
xchg
aas
mov
jb
enter
aam
dec
clc
add
jge
std
mov
jg
hlt
inc
inc
hlt
jne
mov
mov
outsb
push
lret
mov
xor
sahf
xchg
push
jg
int
sbb
mov
lds
lock
inc
mov
add
inc
add
shlb
xor
sbb
stos
adc
cmp
fldcw
jge
inc
pop
push
or
xor
pop
cwtl
pop
xor
jp
push
ja
mov
int
sbb
mov
and
sub
pop
test
push
or
xor
into
out
jne
fcoms
pop
xchg
dec
pop
mov
faddl
sbb
adc
pop
push
pop
nop
js
in
mov
fiaddl
jno
and
stos
adc
add
int
dec
xchg
push
sub
fmulp
hlt
nop
inc
iret
add
cmp
mov
ror
push
cmp
sub
jg
hlt
mov
add
adc
inc
or
out
cwtl
sbb
imul
mov
fildll
xor
mov
sbb
lahf
lret
or
lret
or
jg
mov
dec
jg
inc
mov
sbb
xchg
ljmp
inc
imul
fbstp
cs
sbb
aas
fcmove
or
les
aas
lret
test
pop
sub
aaa
pop
pop
arpl
dec
into
popa
xchg
ret
mov
scas
inc
mov
mov
xor
out
or
leave
filds
out
arpl
adc
lret
push
loope
scas
xchg
pop
jae
push
mov
jecxz
xor
pop
mov
mov
arpl
add
sbb
cmpsb
mov
push
movsl
sub
inc
pop
pop
push
mov
pop
and
jecxz
sbb
mov
loope
fbld
push
andb
cmp
notb
push
bound
push
xchg
mov
add
call
adc
xor
popa
xor
jnp,pn
out
pop
cmp
sbb
lds
jnp
shlb
imul
in
rcl
add
push
add
jae
lcall
dec
push
iret
testb
jecxz
insb
cwtl
adc
and
imul
enter
push
insl
and
stos
bound
lahf
cmp
adc
dec
dec
pop
lcall
mov
pop
fisttpll
ficoms
in
sbbl
in
and
cs
add
nop
cmp
inc
mov
sub
lret
scas
add
cmp
adc
lock
mov
clc
movsl
and
pop
lds
sti
or
jmp
scas
inc
mov
aas
daa
or
inc
or
push
movsl
mov
ljmp
faddp
jae
mov
xor
xchg
pusha
mov
add
test
push
sbb
outsl
sbb
loope
mov
dec
insl
shlb
jl
pop
adc
pop
add
inc
cmp
pop
andb
xor
es
sbb
xchg
lea
and
lea
jecxz
jne
nop
adc
sub
loope
cld
dec
inc
movsb
lret
adc
dec
lds
jecxz
ss
je
xchg
push
scas
arpl
and
jo
cwtl
lcall
push
dec
sub
cli
xor
pop
into
push
add
loop
jge
jo
xor
sub
stos
test
popf
stc
les
cwtl
and
cs
orl
xchg
adc
stos
dec
sbbb
fstpl
mov
sbb
lcall
pop
stc
pop
jp
outsl
pop
ljmp
popf
sti
adcl
sbb
mov
lock
push
subl
jo
adc
push
add
cwtl
enter
cmpsb
scas
mov
mov
lods
jg
adc
cmpsl
psrad
xor
movsl
push
or
imul
das
jp
arpl
jne
xor
xor
push
push
pusha
add
adc
dec
hlt
mov
jmp
dec
sub
addr16
dec
mov
mov
fwait
imul
dec
inc
sbb
push
or
int3
adc
dec
adc
leave
pop
iret
sbb
popl
rcll
stos
fwait
jp
stos
sub
ds
xor
cltd
fstps
sbb
lret
scas
sbb
add
ljmp
mov
mov
mov
lea
lock
stos
adc
or
and
add
ficoml
inc
add
test
push
jo
pop
push
pusha
add
jbe
sub
into
fdivrl
out
jp
or
mov
movsl
cmpsl
shll
push
es
imul
mov
or
or
add
adc
lcall
add
push
add
add
xlat
dec
insb
and
inc
sbb
pop
dec
add
popa
scas
or
cld
maxps
xor
add
ss
pop
mov
push
mov
cmp
out
iret
jg
pop
imul
jo
xchg
cs
sub
xor
pop
mov
jno
fwait
popa
adc
xorb
ss
mov
inc
jge
dec
pop
dec
je
dec
sbb
pusha
test
sarb
adc
add
fsubp
add
dec
push
stos
or
inc
es
cs
cmpl
cmpsb
add
pop
sbb
jle
mov
sub
xor
cmc
add
loope
cmp
fistpl
push
add
std
add
or
sbb
sbb
cmp
sbb
xlat
mov
ds
jg
hlt
fcomp
test
push
cwtl
mov
lahf
adc
lods
lahf
sbb
lds
xchg
pushf
sub
xchg
fwait
lcall
pop
sbb
cmpb
mov
push
imul
addl
dec
das
push
jle
sbb
lcall
insb
aaa
xchg
in
sub
jp
insb
jp
scas
adc
fcoms
pop
cmp
ss
std
jb
pop
mov
mov
in
test
ljmp
pop
dec
sbb
mov
adc
jge
bound
es
add
push
sbb
orl
enter
in
test
ja
xchg
std
mov
mov
ja
xor
xchg
and
ret
lds
loope
and
sbb
sbb
jecxz
repnz
stc
es
adc
inc
sub
jb
arpl
ja
incb
leave
sbbl
enter
adc
lods
add
mov
rcrb
in
sub
lcall
adc
mov
inc
xor
imul
loop
add
dec
jle
pop
mov
daa
adc
pop
sub
pop
pop
xchg
mov
inc
loop
mov
push
sub
cmpsb
pop
dec
adc
clc
daa
xchg
jmp
pop
add
daa
pop
add
cld
inc
hlt
out
pushf
add
mov
pop
movd
sbb
rcrl
hlt
stc
sub
add
push
pop
outsb
pop
jb
je
xchg
out
xlat
push
sub
ret
nop
scas
pop
ja
int3
pop
loope
movsl
bnd
sub
jmp
aaa
cwtl
dec
mov
ds
add
loope
loope
popa
add
sub
mov
ficomps
jne
nop
test
dec
adc
add
lcall
jb
cmp
insw
subl
mov
lods
add
add
and
cmp
pop
pop
jae
pop
cld
fs
push
mov
loopne
leave
lcall
sub
sub
jmp
orl
sbb
ret
je
or
push
jecxz
movsl
pop
scas
loop
or
imul
push
roll
cmp
out
push
lock
cli
and
lcall
loop
jg
inc
or
scas
and
test
in
out
add
icebp
mov
and
shr
lahf
and
ljmp
rorb
ds
mov
jge
pop
mov
or
lock
shl
and
stos
inc
adc
xor
pop
or
divl
imul
push
push
fildll
push
pop
pusha
lret
push
fidivrs
dec
repnz
mov
pushf
sub
adc
pop
lcall
addl
es
dec
push
add
testb
xor
xor
xchg
add
push
std
mov
mov
cltd
cmp
lcall
imul
mov
fcomps
fstpt
pop
mov
enter
pop
gs
bound
aaa
scas
repz
aam
and
dec
das
jecxz
push
dec
lcall
pop
icebp
xchg
cld
dec
das
mov
std
aad
mov
or
jbe
push
sahf
mov
shll
cmp
mov
bound
mov
mov
addb
or
or
pop
mov
outsb
or
bound
inc
pop
arpl
adc
jl
rcrb
or
jns
fildl
pop
stos
pop
loope
imul
pop
sub
push
inc
hlt
test
inc
push
add
fldl
add
loop
or
pop
inc
cld
sub
adc
mov
sub
cmc
cwtl
jg
push
int
cs
fs
and
cli
push
fwait
adc
xor
loopne
das
adc
adc
sbb
mov
sbb
cli
sbb
fistl
or
hlt
cmp
sub
cmp
adc
xlat
push
mov
push
rclb
sarb
sbb
pop
sbb
filds
sbb
hlt
push
and
add
jg
lds
add
repnz
mov
lods
xchg
pop
push
or
test
xchg
test
and
or
ds
inc
cmpsl
loopne
or
cmpb
xchg
xchg
jg
iret
inc
adc
jle
je
arpl
jmp
push
jle,pt
push
popf
stos
push
and
pop
les
lods
mov
xor
dec
scas
pop
mov
mov
ret
pop
xchg
pop
push
loop
stc
sub
jecxz
sarb
cmc
scas
clc
out
jge
mov
loope
lea
out
mov
sub
arpl
cmc
ret
ja
sbb
inc
xor
daa
push
jnp
cmpsb
xor
inc
les
sbb
clc
and
repz
sbb
ret
int3
mov
mov
pop
movsl
clc
cmpsb
inc
add
pop
cmp
sub
lret
jg
pusha
test
mov
adc
jp
jle
lret
and
sbb
adc
adc
pop
sbb
jecxz
mov
pop
sbb
xor
mov
stos
insb
pop
cmp
jl
add
jge
nop
std
lock
dec
pop
add
sbb
pop
or
or
mov
dec
inc
xchg
aaa
xchg
jg
pop
mov
inc
ds
xchg
cmp
stos
and
cmpsb
sbb
fisttps
sbb
pop
mov
scas
lret
pop
and
test
jl
xlat
pop
iret
cmp
push
mov
je
push
ljmp
test
daa
mov
push
inc
jns
int
js
jmp
add
in
movsl
outsb
sbb
xchg
bswap
inc
cs
nop
and
cmp
jecxz
mov
dec
sub
pop
jecxz
pop
mov
repnz
add
jge
stos
add
gs
ficomps
ja,pt
sub
sbb
push
je
push
adcl
fmul
sbb
jmp
dec
add
hlt
icebp
insl
les
std
or
dec
inc
ret
pusha
or
cmc
inc
pop
arpl
adc
push
cmp
cmp
cmp
push
int
outsb
xor
cmp
call
aam
fdiv
mov
out
in
inc
lods
mov
imul
jl
loope
insb
fldcw
inc
dec
mov
add
lock
jae
inc
mov
pop
jecxz
int3
dec
ds
add
mov
sub
out
test
push
cmp
fadds
inc
int3
cmp
mov
pop
idivl
add
cmpl
bswap
dec
inc
lret
jmp
sti
rorl
loopne
mov
scas
jl
outsb
into
push
sub
cwtl
addr16
xor
push
add
xor
gs
enter
test
push
xchg
mov
jnp
test
popf
or
add
xor
inc
insb
mov
or
sub
pop
adcl
mov
inc
dec
stos
or
cmp
xchg
sbb
dec
xorl
imul
jns
mov
dec
inc
dec
cs
add
push
test
lahf
push
loope
push
mov
add
sbb
ret
mov
test
and
inc
movl
cmpsl
std
mov
push
jo
test
aaa
and
ret
mov
or
or
roll
pop
pop
fildll
mov
in
addr16
xor
ret
scas
xlat
repz
adc
push
dec
cltd
cmp
push
mov
loop
lret
frstor
and
loopne
loopne
push
fidivrl
sti
ret
test
movsl
inc
addr16
dec
xor
lret
xorb
pop
loop
je
pop
stos
mov
fistps
jnp
dec
ret
cs
and
int3
inc
jne
mov
or
aad
mov
xchg
add
push
jecxz
mov
xor
fiadds
pusha
push
add
ja
ds
shrb
in
ret
ret
add
imul
mov
pushf
mov
inc
ret
sti
shlb
inc
sub
cmpsl
sti
dec
jo
or
rcrl
jg
dec
jno
jp
ficompl
test
pop
push
add
lcall
jns
inc
test
mov
test
fwait
subb
fs
daa
ljmp
hlt
fwait
jno
add
pop
jae
xchg
add
dec
cmp
imul
movhps
jle
inc
jp
imul
mov
sti
xorl
nop
cmpsl
and
icebp
xchg
mov
pop
loop
imul
orl
int
push
cmp
imul
mov
clc
mov
sbb
imul
jecxz
mov
mov
fwait
cmp
lea
pop
clc
xchg
pop
arpl
mov
adcb
fs
or
clc
rcrl
or
fcomps
or
push
jmp
pop
sbb
add
mov
xchg
pop
pop
jl
das
add
pop
xchg
int3
repnz
xor
cmp
nop
cmpsb
sahf
mov
lea
sub
cmp
daa
orl
scas
pop
adc
sbb
and
bound
sbb
inc
bound
hlt
push
pop
and
cmp
sbb
push
cmc
subb
mov
sbb
std
addl
bound
add
dec
sub
push
aaa
mov
push
sub
inc
psrld
jns
mov
outsl
pop
sbb
mov
popf
xchg
pop
jo
add
mov
loop
das
shl
into
xor
inc
bound
negb
in
in
inc
loop
cmp
loope
and
push
dec
or
int3
pop
add
xchg
mov
push
pop
mov
or
add
shlb
pop
es
inc
cmp
xor
int
xor
add
jecxz
sarb
es
shr
cmp
jecxz
mov
stos
sbb
inc
dec
sbb
mov
ljmp
bnd
leave
bound
ja
aas
xor
out
cmpsb
dec
insb
xlat
lods
xor
mov
sbb
lret
xlat
outsb
popl
lcall
and
jecxz
sub
dec
and
pop
xchg
scas
or
popa
push
loop
clc
sti
or
inc
jbe
pop
in
cmp
cmp
push
xor
scas
jo
inc
mov
xchg
roll
shrl
loopne
lret
mov
test
push
repnz
add
dec
ret
dec
adc
push
les
mov
jb
jg
pop
add
or
pop
test
xor
adc
nop
and
jbe
aas
mov
movb
ljmp
mov
jne
popa
or
test
mov
mov
out
jbe
mov
dec
xlat
mov
adc
inc
dec
neg
sbbb
mov
xor
ja
adc
imul
add
push
pop
dec
add
and
repz
inc
pop
mov
aad
sub
push
push
jle
outsb
stos
mov
pop
sti
aas
fcomps
push
sbb
cmp
loope
pop
mov
push
add
xchg
cmp
or
sbb
lcall
cld
mov
cmp
shlb
add
cmp
fldcw
iret
pop
nop
ret
sub
rcrl
addl
jbe
dec
movzbl
add
pop
lret
sbb
push
hlt
pop
and
shrb
aas
pop
out
cmpb
cmp
mov
test
jo
sub
dec
call
xor
mov
gs
jle
push
jle
cwtl
or
insb
fldt
movsl
mov
fimuls
repnz
sbb
mov
ds
sub
jbe
sahf
xchg
popf
adcl
pop
pop
lret
mov
in
pop
fcomi
aad
loope
sub
jmp
inc
pop
sbb
lods
and
leave
push
inc
icebp
inc
xor
adc
jnp
lret
outsb
repnz
add
adc
push
sbb
inc
repnz
in
dec
sub
pop
cmc
jl
out
adc
loope
rcr
mov
dec
repnz
cmc
cmc
jo
sar
mov
jg
dec
orb
in
int
pop
sub
ds
fimuls
in
sub
je
pusha
pop
sbb
mov
cmp
mov
and
sbb
cmp
cmp
adc
cli
jno
in
cmp
mov
fsts
in
cmp
and
in
test
xchg
jbe
inc
sbb
mov
sbb
bound
mov
fimull
sub
insb
sub
in
xchg
add
add
lcall
sub
push
das
jnp
sbb
sub
sbb
xchg
addb
je
mov
lock
mov
in
push
jle
ss
push
loopne
sub
ror
xchg
adc
xlat
cli
jg
orl
adc
add
scas
addl
sbb
arpl
fwait
scas
imul
ss
sbb
nop
or
loop
xor
sar
cmp
mov
xor
insb
mov
std
ret
push
cs
inc
cs
pop
scas
sbb
add
and
inc
sub
and
jle
sub
imul
sbb
jb
fcompl
or
mulb
mov
add
push
mov
inc
push
xor
cld
sti
shrb
out
xor
insb
cs
das
mov
pushf
push
sbb
and
stos
add
mov
scas
sbb
jne
dec
mov
es
add
inc
mov
push
mov
jecxz
repnz
lcall
xor
jmp
cmp
sub
out
icebp
mov
sbb
sbb
dec
mov
shr
add
cmp
add
jecxz
sbb
lods
movsl
inc
sbb
fisttps
xchg
lahf
pop
xlat
pop
lea
mov
cs
loopne
push
je
xor
test
popf
jecxz
daa
test
loope
jp
fistps
pop
adc
daa
cmpsb
sub
out
jmp
mov
lea
call
jle
mov
pop
jns
xor
mov
mov
pop
mov
dec
lret
testb
mov
xor
enter
jno
popa
outsl
data16
dec
mov
cmp
push
xor
enter
inc
rcrl
push
jo
cwtl
loop
jecxz
int3
adc
gs
sbb
mov
stc
movsl
jecxz
das
int3
lods
jmp
jno
sub
or
dec
sbb
sub
outsb
ret
fisubrs
or
and
push
pop
xchg
xchg
xchg
jb
dec
mov
pop
lcall
pop
jecxz
cmc
push
ret
test
adc
dec
sub
imul
and
jmp
inc
out
and
sahf
add
sbb
les
ljmp
fldlg2
cs
sbb
inc
aam
add
popa
mov
int
test
and
lods
outsl
mov
popf
out
dec
cmpsb
adc
jle
inc
push
cmc
push
xchg
and
xor
aaa
or
jno
int
dec
outsb
mov
jo
mov
xchg
mov
sbb
pop
mov
mov
push
outsb
mov
pop
pop
dec
loope
fnstenv
mov
fwait
out
sub
sbb
jo
xor
cmpsb
lds
fwait
shrl
imulb
adc
fdivl
lock
cld
xor
xchg
sbb
inc
sbb
adc
icebp
popa
push
sbb
ret
sbb
add
in
div
call
jne
mov
pop
push
pop
mov
shrl
jbe
sub
loope
and
mov
sbb
add
dec
jne
xchg
jecxz
repz
fisubl
clc
orl
pop
mov
inc
sahf
push
push
inc
pop
ret
jg
in
adcb
jle
jle
in
lret
sbb
lahf
imul
xor
enter
mov
inc
add
cmpl
mov
jecxz
rolb
xchg
scas
ja
aam
jecxz
pop
jmp
ja
push
lret
ljmp
push
jl
adc
cmp
cltd
cmp
add
mov
cs
lea
ret
push
add
nop
mov
movsl
add
pushl
out
pushf
xchg
mov
and
inc
ficompl
push
adc
aas
push
cli
pop
in
jmp
xor
outsb
ljmp
rcll
push
call
sahf
dec
inc
or
mov
xor
jg
mov
cs
or
test
mov
mov
repnz
mov
pop
add
pop
or
enter
jle
sub
dec
leave
push
dec
push
or
outsl
push
sbb
mov
xchg
dec
sahf
dec
and
and
gs
mov
adc
dec
cmp
mov
lret
sbb
sub
mov
int
xor
push
cs
mov
xor
add
insb
mov
xor
leave
mov
add
cli
in
push
pusha
loop
add
mov
add
dec
sub
sbbb
into
push
or
pop
leave
sub
sbb
call
movsl
cmp
xor
lock
push
or
pop
loop
mov
or
mov
jb
sub
xor
dec
pop
inc
popa
ljmp
fisttpll
xchg
jb
sbb
hlt
dec
arpl
test
add
fs
call
inc
negb
and
aad
xchg
inc
sbb
imul
push
inc
or
cmp
rorb
jb
or
mov
mov
int3
dec
fsubrl
mov
mov
add
and
add
sbb
arpl
pusha
inc
dec
sbbl
adc
addr16
xor
sub
jge
adc
sbb
xor
out
xchg
xchg
sahf
loope
and
imul
ljmp
xor
ret
pop
inc
sbb
push
andb
test
inc
sbb
cmp
inc
mov
in
lods
vmovntpd
lock
push
and
add
sbb
jle
push
test
aam
adc
sti
dec
add
ja
subb
pop
dec
push
adc
lret
mov
add
pop
push
es
dec
aad
in
mov
lahf
pop
xchg
imul
xor
adc
sub
jno
and
inc
fmull
or
mov
sbb
scas
int
sbb
scas
dec
jl
inc
fimull
addb
xchg
ret
mov
into
mov
cmp
lcall
inc
fldcw
cmpsb
dec
push
push
dec
aad
sbb
lods
and
das
lock
lods
sbb
popa
repnz
outsb
cmp
icebp
push
std
jecxz
dec
insb
dec
pop
clc
fnstcw
sub
in
jmp
xchg
imul
enter
xchg
les
ss
in
xchg
leave
jecxz
xor
int
popf
es
cmp
lds
and
pop
adc
andl
lock
out
mov
add
out
daa
arpl
mov
lods
popf
notl
fistl
popf
sbb
pop
inc
adc
mov
cli
dec
fmuls
pop
orl
test
sbbb
dec
inc
jnp
inc
xchg
cmpsl
fisubl
pop
xchg
arpl
ja
loop
xchg
fiaddl
push
pop
popf
mov
xchg
add
cmp
fiaddl
or
cltd
adc
repnz
sbb
jge
jg
ficomps
pusha
ljmp
adc
aas
jbe
stos
add
inc
jecxz
inc
and
addr16
pop
pop
out
ss
leave
push
and
dec
cli
push
pop
popf
dec
push
mov
repnz
mov
or
add
mov
out
fnstsw
or
sbb
add
inc
bnd
add
mov
adcl
das
sbb
sti
mov
inc
in
lcallw
xor
rclb
mov
mov
fcmovu
cmpsb
stos
cmp
and
xor
loop
cli
rcrb
lods
je
xchg
inc
repnz
jg
mov
sbb
in
das
jp
fldcw
scas
sbb
and
mov
leave
daa
sbb
and
inc
in
adc
sbb
inc
mov
pop
int3
push
add
mov
sbbl
cmp
xchg
or
fdivrl
dec
or
pop
xchg
mov
mov
cmp
movsl
cmp
into
sub
leave
stos
in
dec
jnp
and
dec
mov
testl
test
ret
pop
ret
popl
sbb
cmpsl
sahf
cmc
lods
in
pop
ds
cmp
adc
movsl
dec
leave
xorl
jns
fadds
daa
xchg
scas
cli
enter
inc
push
push
shlb
lahf
jecxz
inc
and
add
dec
cmp
test
orl
add
sbb
lock
jmp
loope
loop
out
sbb
lea
xor
orl
loop
test
sub
sbb
inc
and
cmc
lods
cmp
dec
mov
and
pop
iret
sbb
mov
and
sbb
sbb
cmp
out
mov
outsl
movsl
mov
divb
inc
and
mov
pop
mov
std
icebp
xor
add
andl
cmp
aaa
fimuls
jecxz
hlt
xchg
sbb
or
xchg
cmpsb
rcrl
push
push
jle
movsl
repnz
popl
or
or
insl
cwtl
sbb
popf
push
sarl
mov
push
cmp
xchg
lcall
xor
ss
ds
enter
jae
dec
xchg
jecxz
ja
movsl
mov
pop
out
sub
dec
cmp
aam
fptan
mov
inc
fwait
gs
leave
loope
xchg
fldl
lahf
jns
sub
push
test
loope
ja
cwtl
cmpsl
pop
jmp
mov
cltd
sahf
sahf
pop
lcall
xor
or
cmp
shll
sbb
cwtl
add
inc
mov
push
addl
dec
or
add
or
and
fmul
jnp,pn
incb
loope
ja
and
push
leave
lock
mov
push
shlb
cmp
cmpb
nopl
xchg
cwtl
mov
js
jns
or
test
xchg
wbinvd
lret
es
icebp
sbb
and
mov
movsb
sarl
pop
cmp
fdivs
sub
mov
xorb
filds
cld
cmp
aam
in
xchg
repnz
xchg
popl
hlt
or
or
nop
pop
stos
aaa
aaa
scas
mov
or
push
xor
out
add
adc
dec
sub
inc
jo
enter
hlt
jae
adc
xchg
add
push
or
mov
dec
sbb
pop
mov
sbb
loop
mov
xor
mov
loop
and
cmpsb
add
fadd
pop
adc
arpl
or
sbb
inc
popf
pop
cld
and
add
call
dec
push
jl
pop
je
lret
push
fildl
adcl
sub
lahf
hlt
outsb
dec
fadds
ss
into
push
mov
sbb
imul
hlt
outsl
lods
push
push
xchg
loope
mov
cmp
loopne
adc
ret
loop
bound
negb
addr16
jno
mov
add
push
and
inc
arpl
jb
mov
ja
and
mov
sbb
pop
out
fcompl
mov
push
inc
ret
int3
lds
xchg
xor
jle
inc
inc
push
leave
iret
xor
aam
mov
xorl
aaa
mov
test
sbb
cld
outsl
fwait
or
loop
test
jle
popa
out
xchg
push
ror
push
arpl
mov
idivl
or
cmp
ss
xor
or
cs
es
push
scas
movsl
xor
mov
pop
test
jg
ljmp
test
mov
loop
clc
movsb
adc
jecxz
push
adc
loope
mov
jae
add
lret
add
imul
lock
sbb
or
push
push
add
sbb
movl
xchg
add
pop
loopne
das
loop
ror
cmp
or
inc
lcall
and
dec
call
sub
add
ja
ds
cld
in
xor
and
inc
mov
fldl
push
loop
inc
sbb
inc
sub
pop
cmp
dec
jbe
mov
ss
inc
cmp
movsl
lret
cwtl
int3
cmp
or
stc
les
sub
lods
dec
add
sub
arpl
insb
int3
fstl
inc
outsl
xchg
lret
sub
mov
imul
out
hlt
inc
pop
loopne
mov
or
mov
pusha
aas
stos
mov
ret
mov
inc
gs
xor
jp
pop
popf
add
xchg
sbb
add
pop
pop
sbb
test
int3
jecxz
pushl
sbb
fxch
cmovg
outsl
adc
push
sub
add
and
add
pop
sbb
mov
sbb
stos
sub
stos
mov
pop
xor
es
mov
jl
hlt
inc
adc
xor
push
add
cmp
sub
push
std
f2xm1
enter
leave
scas
cmc
add
xor
push
pop
movsl
mov
cld
enter
repnz
dec
dec
addr16
inc
out
cs
mov
mull
cmc
push
pop
lcall
scas
ficompl
stos
sbb
jb
jmp
sbb
mov
pop
notb
xor
sbb
jae
dec
pushf
andl
adcl
jmp
and
push
repnz
lahf
imul
in
icebp
lock
cld
jmp
add
pop
lock
jne
mov
loope
mov
dec
pop
mov
and
push
push
shr
mov
jle
pop
cmc
inc
addr16
aaa
mov
sbbl
mov
dec
loope,pt
sbb
negl
cmp
aas
dec
xor
mov
cmp
test
jg
sub
add
jmp
push
or
out
clc
ja
sbb
fldenv
pop
sbb
jle
sbb
add
sbb
das
mov
popf
leave
mov
sti
and
or
xor
je
das
jp
or
dec
fwait
or
shl
sbb
repz
mov
fmull
dec
jle
cld
into
in
mov
push
out
stos
jbe
divb
fxam
loop,pt
sti
lret
add
loope
xor
jecxz
mov
mov
dec
jle
mov
mov
cmp
push
mov
imul
xor
pusha
cmp
out
cmp
cmc
jnp
jecxz
stos
fwait
adcl
or
test
xchg
dec
das
jg
enter
sub
incl
lods
xor
das
ja
jo
rorl
dec
sahf
test
repnz
xchg
sub
xchg
mov
sbb
xor
jns
pop
pop
pop
xchg
pop
loope
or
jecxz
ss
mov
add
outsl
add
sahf
insl
pop
popf
inc
leave
mov
sbb
loopne
push
inc
xor
mov
fwait
andb
pop
in
jge
dec
movsl
inc
push
xchg
repnz
xorl
jle
jg
icebp
scas
hlt
daa
cwtl
adc
cmp
dec
jge
jns
cmp
push
xchg
jbe
ret
mov
int
jecxz
cltd
subb
orl
sbb
pop
mov
leave
sub
loope
aaa
sbb
push
imul
es
sti
sbb
addl
xchg
push
mov
cmp
icebp
adc
sbb
stos
push
inc
push
inc
pop
cmp
push
nop
pop
sbb
cmp
add
or
sbb
sub
cld
popa
gs
sbb
imul
and
shlb
xor
pop
pop
es
mov
push
out
bound
sub
call
xchg
inc
and
mov
or
pop
call
mov
loope
pop
cs
insb
into
jo
push
jp
cmp
in
jle
outsb
enter
xor
inc
sahf
adc
out
and
push
xchg
cmp
cmp
jae
lret
repnz
and
jle
loopne
nop
shlb
adc
aad
add
out
sbb
fcmovu
push
shl
xsha1
cmpsb
jg
dec
lds
icebp
pop
xchg
mov
cmp
lea
aam
test
iret
sub
jl
jns
out
popf
add
dec
mov
popf
pop
insb
int
dec
out
jecxz
cltd
push
out
shll
mov
jecxz
cltd
xchg
dec
pop
sub
cwtl
push
pop
outsb
lea
xor
sub
cwtl
aaa
or
lock
add
clc
mov
push
xor
fisttpl
push
cwtl
lods
fstps
cld
sbbl
or
xchg
ja
imul
add
sarb
jne
sbbb
ret
cld
fidivrl
ja
cmp
mov
or
orb
scas
inc
sbb
es
dec
and
outsl
dec
andl
adc
mov
sti
lock
mov
xchg
and
xor
sub
fcoml
das
adc
popf
add
dec
popf
or
into
push
jg
psubw
xchg
adc
dec
loope
ds
cmp
clc
inc
and
push
mov
ret
cmp
nop
xchg
movsl
test
bound
fs
nop
lahf
aas
ljmp
test
sbb
push
pop
lea
je
cmpsl
loopne
push
sub
les
das
fs
lock
add
adc
out
mov
push
je
dec
gs
sub
popa
xor
add
movsl
inc
cmc
xchg
insb
xchg
dec
push
rclb
aam
ja
repz
imul
sub
sbb
dec
and
xchg
popf
cs
pop
lret
inc
dec
sub
mov
stc
cmpsl
inc
and
lock
or
je
add
je
pop
add
adc
cmp
mov
sbb
pop
fstpl
or
add
inc
or
inc
roll
mov
outsl
es
dec
or
movsb
inc
test
lods
ret
xor
cmpsl
sub
mov
push
inc
sbb
jge
jb
xor
xlat
mov
pop
push
je
add
out
pusha
fucomi
pop
rdmsr
loope
mov
adcl
jae
jge
inc
adc
sbb
dec
sbb
je
push
notl
aam
pop
push
xchg
divb
nop
hlt
sbb
push
sub
nop
mov
testl
cmpsb
or
sbb
cs
push
and
repnz
push
lcall
popf
inc
out
push
ljmp
and
aam
mov
outsb
jmp
sbb
xor
cs
pusha
fildl
and
sub
jmp
nop
xchg
jno
mov
mov
popf
add
jbe
bnd
sbb
xor
cmpb
mov
inc
push
into
xor
dec
cli
xor
cs
hlt
xlat
inc
mov
xchg
mov
loop
ljmp
aaa
mov
inc
popf
and
mov
dec
push
lret
jle
adc
push
mov
dec
sti
sbb
rcll
xor
jmp
pusha
add
cwtl
pop
and
push
sbb
sbb
add
lods
enter
mov
outsb
aas
mov
fisttps
pop
xchg
test
sbb
sub
push
cmc
in
subl
fstps
and
mov
ja
lock
adc
roll
jge
and
arpl
lods
inc
mov
insb
outsl
cmp
jne
push
divl
mov
sub
inc
pop
out
loop
and
xor
or
test
adc
jns
mov
mov
sbb
jg
sub
pop
mov
or
pop
cmc
sti
pop
adc
sub
sbb
xchg
fistpll
dec
mov
and
pop
ss
push
dec
sub
ds
xorl
inc
mov
cmp
cmpsl
sub
pop
mov
inc
lret
mov
int
push
cld
jg
or
jle
xor
xor
jg
xor
iret
cmp
ds
int
sub
dec
sub
mov
adc
lods
adc
adc
fwait
mov
into
xor
xlat
push
inc
clc
xor
repnz
in
and
test
aam
cmpsl
jl
pushf
add
and
stos
dec
pop
push
jno
jl
lahf
push
jecxz
loop
xlat
or
aaa
ret
inc
repnz
int3
dec
repz
inc
xor
xchg
push
mov
ljmp
mov
push
data16
push
out
mov
jecxz
dec
inc
cmpl
inc
push
sbb
inc
pop
stos
cld
push
add
add
icebp
dec
fldcw
inc
std
shlb
aad
rol
adc
mov
lcall
sub
daa
popf
push
mov
pop
cmpsl
imul
or
jle
inc
imul
or
scas
adc
sub
add
das
test
add
sub
push
sub
pop
xorl
jecxz
cmp
xor
dec
xchg
mov
ret
stos
sub
loope
sbb
test
adc
aad
test
jo
ljmp
push
dec
dec
mov
aad
cmp
xchg
int
arpl
add
cli
cltd
push
mov
sub
pop
int3
lock
push
fsubrl
sbb
fistps
bound
and
jl
arpl
fidivs
push
adc
inc
movsl
inc
pop
cmpsl
lock
pop
pop
xor
xor
add
hlt
xchg
lcall
and
dec
xor
jg
inc
insl
pop
pop
mov
loope
sub
test
iret
mov
and
push
add
sbbl
or
loop
inc
mov
push
divl
cmp
adc
xchg
add
fsubrl
insl
dec
andb
das
jae
add
outsl
adc
mov
add
shl
and
add
leave
lods
lds
in
bndldx
cmp
enter
push
test
inc
icebp
push
stos
pop
and
lods
pop
lret
and
out
test
jecxz
aad
call
and
sahf
aad
cmp
pop
mov
das
sti
sub
imul
inc
mov
mov
push
cli
sbb
out
daa
xor
jno
fstpl
sbb
loop
cli
xor
mov
cmp
pop
inc
cmpsl
ror
repz
ljmp
mov
sub
adc
cmp
leave
jg
cs
hlt
sahf
inc
movsb
dec
lret
out
pop
movsl
and
imul
nop
inc
cld
test
mov
jnp
xchg
cmp
mov
mov
daa
lcall
sbb
sub
push
daa
cmp
cs
mov
sbb
cmp
mov
dec
sub
andb
dec
jb
mov
fisubs
js
and
push
mov
pop
sti
pop
push
jecxz
and
cmp
dec
jecxz
dec
lods
xor
js
sbb
push
jb
jbe
and
inc
add
out
xorl
gs
jl
sbb
ljmp
inc
cmp
fsubrs
push
clc
repz
mov
or
xor
cmp
and
ret
or
pop
sbb
add
fcompl
mov
mul
out
stos
pop
popa
ret
ret
mov
adc
mov
pop
lods
movl
and
pop
lock
imul
je
jle
and
sbb
mov
js
mov
bound
sub
dec
notl
add
push
adc
mov
fdivp
add
out
inc
inc
daa
fimull
push
jp
subb
dec
movl
pop
jge
insl
imul
js
shll
and
xor
mov
cwtl
xchg
pop
pop
jbe
dec
push
and
insl
ficomps
push
stos
fisubl
mov
xchg
sub
out
cltd
sub
mov
jmp
pop
loope
pop
cmp
add
outsb
pop
in
fsts
inc
xchg
cli
add
push
aaa
cmpsb
fildl
mov
js
sti
mov
ds
jo
push
int
push
jo
imul
xor
inc
lods
aas
pusha
adcl
jle
bound
cmp
mull
std
jmp
sbb
push
jecxz
jns
push
shl
cmp
dec
and
sub
ljmp
cwtl
adc
jle
icebp
pop
pop
mov
cmpsb
mov
xchg
jmp
call
inc
and
sbb
sbb
dec
loopne
fstpl
andl
in
fnstsw
ja
clc
adc
sbb
pop
jbe
jmp
jle
cmp
jecxz
imul
jg
and
mov
sbb
sub
gs
adc
sbb
imul
sub
sbb
inc
jg
sbb
in
lcall
out
cld
cmpsl
rcrl
sbb
push
sub
or
enter
iret
lret
stc
lcall
xor
orb
dec
sbb
in
js
inc
or
push
mov
cmpsb
mov
xor
loope
mov
add
stc
mov
adc
jo
sub
add
out
or
mov
sub
test
sbb
pop
repnz
adc
jno
sub
and
out
mov
or
sub
sbb
shrl
outsb
and
push
push
repz
push
lret
enter
add
xor
dec
testl
cwtl
fbld
inc
fnstsw
inc
es
xor
fwait
xchg
push
dec
outsl
pop
loop
stos
cmp
inc
push
mov
push
mov
inc
fwait
xchg
mov
mov
push
call
je
inc
repnz
and
js
outsb
or
scas
fnstsw
xor
cmp
xchg
gs
xchg
push
sub
inc
mov
stos
sbb
push
jmp
jg,pn
loop
in
cmp
div
and
push
and
push
roll
dec
push
sbb
mov
cwtl
dec
xor
int3
shl
sbb
and
jmp
jne
test
xchg
add
sbb
dec
cmp
adc
pushf
and
push
mov
add
cmp
sbb
jecxz
mov
cmp
loop
push
add
sahf
push
push
test
and
das
pop
out
rcrl
push
negb
pop
mov
movsb
push
testb
decl
add
adc
jecxz
popa
pop
mov
mov
add
hlt
inc
das
imul
jl
ficomps
push
pusha
or
add
fsubl
add
xchg
aas
and
addr16
ja
xor
adc
or
je
adc
ljmp
pop
push
repz
add
push
int
pop
adc
xchg
mov
lret
mov
sbb
cmp
inc
das
popa
xchg
loope
pop
adc
sbb
sub
mov
dec
push
scas
lods
or
xchg
ds
mov
jp
cmp
jecxz
fistpll
in
xchg
repz
cwtl
pop
add
pop
aas
movsb
stos
popf
add
mov
daa
inc
and
mov
aam
xlat
fidivrl
inc
in
and
movsb
mov
or
mov
cli
out
insl
int3
push
adc
sarb
pop
mov
xor
xor
insb
inc
fistps
aaa
mov
sbb
in
jns
push
jecxz
cmp
inc
and
sbb
or
mov
fdivrl
enter
imul
adc
and
call
push
sbb
pop
pop
cmpsl
dec
imul
xor
mov
jbe
addl
mov
xor
jg
imul
and
cs
xchg
inc
push
sub
dec
push
fisttpll
push
cmp
imul
rcll
inc
add
jle
pop
cmp
xor
sub
add
loope
popa
pop
or
lcall
mov
xchg
or
faddl
inc
jb
loopne
or
jecxz
add
mov
dec
add
dec
imul
lahf
rcrb
stos
icebp
cmp
pusha
ret
jo
lods
sbb
xchg
xchg
mov
js
mov
push
jno
xchg
lret
lods
mov
mov
and
shlb
jl
or
jo
icebp
xor
adc
mov
xchg
cwtl
pop
sub
and
popa
outsl
das
adcl
test
push
mov
cli
sbb
mov
cmp
leave
mov
dec
sbb
orl
nop
mov
das
and
add
lea
adc
paddusw
in
mov
add
popa
lock
and
adc
lret
lahf
mov
mov
adc
sbb
insb
pop
sbb
ljmp
movsb
ljmp
push
xlat
and
fisttps
xchg
cli
cmc
call
push
inc
stos
xor
xchg
cld
je
or
xor
jbe
pop
addr16
or
cmp
pop
int
push
push
addb
inc
sbb
sbb
push
adc
sbb
inc
push
loopne
inc
sbb
pop
push
fnstsw
orb
sbb
jb
lcall
xor
jnp
test
dec
cmp
jns
sub
sub
ljmp
jg
fsubs
jne
lea
icebp
fwait
sbb
out
or
or
cmp
lret
push
xchg
sbbl
popf
pop
jmp
jae
lods
ja
adc
fs
je
sbb
ja
push
add
adcl
gs
jg
fwait
aas
pop
adc
shrb
mov
clc
mov
xchg
jecxz
cmp
mov
mov
scas
push
stos
lcall
mov
inc
xor
add
jge
pop
sbb
fwait
jbe
mov
gs
pop
inc
lds
adc
nop
pop
mov
enter
imul
sub
jo
pop
int3
and
enter
sub
jo
enter
dec
adc
mov
loop
inc
out
fstpt
sub
pusha
stos
inc
mov
insb
inc
ljmp
cmp
sub
scas
and
arpl
push
xor
push
sub
add
cmp
xor
inc
mov
es
inc
inc
cmp
in
aad
mov
mov
adc
mov
jecxz
jno
test
ljmp
loope
pop
sub
cmpsb
into
in
std
and
mov
idivb
fdivr
push
mov
and
out
push
pop
stos
mov
ss
les
mov
push
cs
cld
xor
sbb
and
mov
clc
fcompl
ljmp
ret
pushf
outsb
fcomps
adc
xchg
add
lods
mov
mov
push
cs
movsb
imul
pop
dec
mov
adc
and
mov
repnz
and
sbb
cltd
adc
adc
stos
push
movsl
fisubrs
add
jle
lcall
mov
adc
mov
mov
shrb
loope
cltd
inc
sbb
lret
and
xor
push
call
aas
or
xchg
pop
add
aas
scas
das
jbe
fs
xchg
arpl
shrb
add
subl
shl
and
loopne
aad
test
and
push
add
mov
pop
mov
je
outsl
and
sub
test
xchg
xchg
cmp
dec
mov
sar
add
shll
loop
mov
ficompl
stos
dec
out
sbbl
je
inc
and
hlt
jecxz
jae
testb
dec
imul
mov
rcrb
lds
sbb
lods
push
push
sahf
and
sub
ret
jb
push
push
out
ret
dec
in
mov
mov
je
xor
sub
test
pop
int
sub
jb
mov
adc
xchg
jbe
or
loop
sub
loop
dec
sbb
jne
nop
push
sti
and
mov
mov
pop
cmp
add
cs
and
fwait
stos
mov
dec
ljmp
cltd
adc
or
or
imul
popf
mov
sub
add
std
cmc
jl
xchg
mov
push
sub
rcll
sahf
xchg
jns
rcr
mov
adc
cli
push
notb
adc
inc
std
lock
xor
dec
roll
inc
dec
mov
or
cmp
sbb
jae
enter
mov
xchg
xchg
lods
and
and
fisubrl
pop
inc
popa
mov
xchg
sar
out
mov
mov
mov
and
jo
xchg
add
adc
dec
stos
mov
adc
mov
inc
mov
pop
pop
aam
jle
fdecstp
repnz
ss
nop
sub
ret
test
jecxz
dec
imul
pop
imul
testl
roll
addl
or
mov
in
xlat
jecxz
sbb
ret
cs
pop
loop
inc
and
mov
and
pop
loop
and
jmp
push
jle
sub
dec
sbb
push
mov
sbb
popf
rcll
jbe
insb
jle
add
sub
subl
add
add
iret
jb
jg
jb
addb
hlt
pop
cmpl
les
xor
ja
mov
adc
xchg
ss
and
ja
add
insl
sub
shrl
jge
fiaddl
xchg
dec
scas
push
or
mov
push
pop
mov
add
loop
cltd
in
shrl
add
test
fwait
mov
sbb
push
jecxz
push
lock
vphadddq
inc
inc
mov
lahf
clc
mov
xchg
inc
adc
xor
sbb
mov
xchg
pusha
add
or
dec
sbb
es
inc
sub
repnz
dec
insb
jg
cwtl
ljmp
jmp
int3
jmp
das
sbb
adc
push
pop
push
daa
lock
loopne
inc
cmp
cmc
ds
std
sbb
push
jmp
imul
mov
jle
cmpsl
sub
into
sbb
outsl
xchg
pusha
stos
std
stos
ja
pop
pusha
imul
jle
insb
push
shrl
cmpsb
mov
imul
xchg
into
dec
mov
mov
cmp
sbb
pop
jle
dec
push
dec
sahf
mov
add
and
add
sbb
push
jp
out
xchg
nop
add
rcr
or
les
popf
jne
cmp
mov
inc
imul
aaa
data16
xlat
mov
repnz
add
jg
mov
xor
add
aaa
cltd
test
cmp
test
push
cs
or
sbb
int
adc
sub
push
aam
xchg
into
mov
ret
cmp
lret
cmp
sbb
adc
fsubrl
leave
inc
pop
mov
sahf
dec
adc
negl
cwtl
jmp
pop
push
push
mov
pop
xchg
andl
sub
or
push
xchg
sbb
push
incl
dec
les
dec
call
dec
addb
outsl
jg
and
sub
xor
dec
jmp
dec
sbb
lods
mov
xor
pop
cmp
into
and
fdivp
push
dec
int
arpl
xor
pop
or
adcl
jns
pusha
push
cmp
push
das
in
lods
mov
push
out
mulb
ljmp
sti
push
in
fists
fdivp
addb
xchg
pop
sub
loop
push
jno
test
movsb
mov
mov
xor
out
lcall
inc
sbb
sbbl
pop
fldcw
xchg
jno
fwait
mov
lcall
aas
sbb
inc
and
sbb
pop
int3
pop
cltd
sbb
mov
aam
fnstcw
pop
idivb
xchg
mov
push
dec
fdivrl
add
repnz
test
jp
lahf
dec
loop
imul
hlt
inc
filds
movsl
push
lods
jle
adc
or
addl
sbb
loope
outsb
fs
mov
sub
jecxz
pop
xor
sbb
in
iret
in
jecxz
jmp
leave
sbb
notb
fcmovu
add
jle
push
push
pop
insl
jg
stos
push
pop
movsl
cmpsb
arpl
jg
adc
xchg
inc
loope
test
pop
inc
mov
dec
sub
in
pop
dec
aad
sbb
pop
sub
mov
add
inc
xor
push
mov
push
test
cli
inc
imul
bound
aaa
xlat
inc
mov
sbb
das
stos
xchg
cli
aaa
sbb
ljmp
mov
cmp
stos
mov
std
jecxz
dec
inc
int
ss
in
jo
adc
dec
lock
pop
test
push
fstl
arpl
mov
pop
test
call
cmp
mov
pushf
sub
jge
outsl
test
xor
inc
push
xor
xor
mull
xchg
inc
je
orb
lahf
cmp
rorb
das
and
mov
cmp
daa
push
mov
adcb
push
xchg
fiadds
sub
mov
dec
or
arpl
jecxz
mov
subl
aam
ret
ja
test
lock
mov
dec
adc
daa
pop
in
testl
xor
mov
push
add
bound
cmc
ja
into
mov
mov
add
and
xchg
mov
lahf
or
adc
pop
into
jo
mov
add
sub
dec
cmp
inc
ljmp
inc
das
call
jne
daa
mov
js
nop
notl
push
stc
mov
fcmovnbe
leave
or
jp
int3
imul
jp
push
scas
stc
imulb
stos
daa
jb
sbb
repnz
sbb
jle
add
lahf
js
push
jmp
jle
sbb
jne
pop
aad
aad
jecxz
enter
pop
dec
mov
sub
adc
outsb
push
mov
ljmp
push
xchg
xchg
mov
std
push
into
cmp
les
iret
sub
and
xchg
adc
shrl
sbb
pop
add
sbb
lret
fisubl
int3
mov
aaa
pop
cmpsl
sbb
lods
sub
sti
shrb
adcl
imul
out
shrb
bound
add
dec
inc
inc
or
push
or
aas
push
dec
xlat
in
sbb
sub
pushf
jno
cltd
rcrb
jmp
je
dec
fdivp
push
imul
cli
mov
push
sbb
xchg
loope
int3
aad
jecxz
dec
mov
dec
mov
aad
dec
movsl
imul
repnz
cli
pop
and
cmp
or
push
imul
mov
and
and
cmc
push
xchg
fwait
mov
fldl
loope
call
cmp
ds
clc
xchg
enter
xor
fwait
fwait
lcall
test
dec
adc
push
rcrl
dec
xlat
enter
sahf
add
clc
imul
mov
ss
gs
mov
cli
mov
div
dec
out
in
add
lds
das
xor
mov
movsb
mov
mov
pop
movsl
fmuls
xchg
push
sub
inc
dec
ret
test
ja
outsb
into
push
or
cmp
jl
sbb
insl
fnsave
inc
dec
add
and
xor
mov
flds
js
mov
jb
and
and
add
or
pusha
mov
jno
adc
outsb
mov
es
lahf
mov
enter
lock
divb
push
out
jecxz
hlt
dec
pop
push
repnz
adc
xlat
stos
mov
push
notb
loop
lods
jae
cmpsl
shll
xlat
push
cmpsl
cltd
and
jmp
cmp
xchg
mov
cld
dec
cli
add
xchg
inc
and
lods
mov
shrl
dec
mov
push
fwait
cli
inc
jo
mov
daa
pop
pop
xchg
push
mov
inc
xchg
hlt
add
jecxz
xor
and
pop
mov
sbb
adc
cmp
shrl
sbb
sub
hlt
ds
push
push
pop
aaa
sbbl
sub
jecxz
sub
divb
add
enter
xor
mov
jecxz
sub
dec
mov
and
push
adc
sub
std
sub
add
push
and
mov
in
xorb
int3
sbb
jp
mul
je
scas
loope
sbb
aas
in
notb
cli
push
sub
sbb
sbb
xchg
adc
stos
xor
xchg
cltd
mov
push
lcall
xchg
dec
in
aaa
andl
scas
stos
dec
pop
push
and
gs
cmpl
sbb
fistps
mov
jmp
scas
inc
xchg
lock
inc
sbbl
pop
add
and
adc
mov
pop
push
jno
dec
testb
xchg
fiadds
xor
or
push
jle
rorb
add
imul
fisubl
jne
out
pop
or
arpl
loop
mov
pop
sub
mov
push
mov
gs
sti
out
mov
cs
jg
mov
dec
insb
fs
and
fnstsw
cmp
and
mov
or
pop
outsb
adc
jecxz
adc
adc
mov
rcll
ror
lcall
movsl
and
inc
data16
mov
xor
pop
sub
sub
sub
jbe
inc
int
call
cltd
add
das
xchg
mov
sub
outsb
test
scas
adc
orl
sbb
jnp
out
and
data16
xchg
pop
xor
and
lahf
add
lret
or
add
dec
mov
pop
lret
in
cmc
add
jbe
jp
arpl
xor
pop
pop
pop
cmp
inc
mov
xlat
je
pop
into
andb
add
hlt
ljmp
push
stos
mov
sub
and
mov
cld
sbb
and
je
xchg
cmp
jp
nop
daa
cmp
adc
icebp
loopne
mov
jecxz
cltd
call
add
push
js
jecxz
aas
mov
and
dec
or
ret
lahf
jecxz
sbb
sub
jnp
push
sub
add
adc
out
fs
cmpsl
xor
and
mov
lret
cmp
pop
inc
imul
and
xor
adc
les
in
mov
jae
push
add
fldenv
mov
cmp
add
loop
sub
adc
sbbl
ds
push
mov
sti
xor
cwtl
lds
dec
jbe
mov
popa
or
pop
xor
imul
lods
add
mov
sub
das
jb
pusha
adc
xorl
pop
es
cmp
sbb
or
push
lock
pusha
and
push
lods
dec
or
xchg
dec
fwait
jl
lock
into
fildl
mov
or
pop
and
lret
sbb
aaa
push
mov
push
inc
xor
or
testl
xlat
mov
int3
notb
xchg
xchg
sbb
xor
xchg
xchg
adc
jne
xchg
mov
mov
mov
pop
pushf
lds
insl
jg
xchg
ljmp
lret
push
test
scas
cli
or
sbb
and
call
cmc
scas
inc
and
pop
or
inc
pushf
cmp
mov
lea
enter
add
mov
ret
pop
pop
push
pop
pop
pop
add
sbb
int3
loop
cmp
lcall
arpl
mov
jle
xchg
pop
jmp
dec
ret
loop
ss
pop
pop
xor
nop
enter
jle
cwtl
test
or
call
aam
mov
cmp
pop
popf
fsubs
cs
jp
mov
cmp
mov
das
into
jl
cmp
loop
jl,pt
pop
mov
cs
insl
fistl
jecxz
jo
sbb
notb
xor
lds
lock
jb
jne
xor
adc
insb
add
pop
xchg
daa
xchg
mov
dec
aad
sbb
or
addb
mov
push
inc
pop
sub
inc
jmp
insl
and
ja
jmp
lcall
sbb
mov
sub
pop
and
fucomp
cs
jle
je
lods
pop
out
sub
jge
sahf
xchg
and
dec
bound
sbb
jecxz
lcall
fisubrs
add
push
xor
les
mov
stos
cltd
pop
addl
sahf
sbb
and
inc
dec
add
mov
jmp
ds
fdivs
lock
hlt
or
pop
push
inc
xor
push
flds
test
adc
jecxz
fnstsw
mov
xor
rcrl
and
addb
add
adc
cltd
sahf
scas
idivb
xchg
dec
sub
mov
dec
sbb
sub
ret
or
mov
and
ds
push
inc
sbb
cmp
fs
sub
mov
sub
sbb
sub
jecxz
js
add
dec
call
jne
xlat
add
mov
xorb
enter
cmp
jnp
inc
mov
push
add
or
ljmp
into
clc
jmp
mov
and
push
inc
pop
mov
jle
mov
xlat
push
push
push
adc
xor
js
xchg
dec
sbb
movsb
pop
xchg
mov
addl
pop
or
add
int3
mov
sub
mull
inc
fcmovne
add
push
push
cmpl
adc
mov
xchg
jns
cs
flds
push
mov
jecxz
scas
xchg
rcr
test
xchg
clc
lcall
xchg
dec
arpl
or
adc
add
and
mov
pushf
xchg
pop
arpl
adc
fwait
pop
and
dec
stos
cltd
inc
js
orb
and
test
add
clc
xchg
insl
push
cs
pop
shrb
push
pop
xchg
add
mov
inc
adc
fildl
cli
std
aam
jp
andl
jp
sub
cld
enter
mov
sbbl
jb
mov
mov
cs
pop
sbb
add
xchg
sahf
mov
dec
and
push
mov
stos
pop
and
xor
cmpsb
test
jecxz
insb
add
or
loope
xchg
xchg
inc
mov
movsl
sbb
js
push
xchg
jg
stc
mov
scas
xor
or
and
cmp
sbb
xchg
xchg
xchg
jnp
xor
sbb
outsl
dec
hlt
outsb
ds
pop
cmpsb
sahf
movl
lods
das
dec
jne
adc
push
sbb
fwait
add
subl
dec
icebp
push
push
jg
daa
iret
or
xor
jmp
push
jecxz
or
dec
add
dec
mov
outsl
call
sbb
pop
in
jno
xchg
das
dec
fdivrs
lock
mov
pop
pushf
inc
push
xchg
js
daa
xor
leave
jmp
cmpsb
jno
and
xchg
jns
inc
test
pop
bound
or
loopne
inc
inc
xor
andl
mov
and
test
xchg
sbb
mov
sbb
add
cs
orl
sarl
outsb
mov
cld
jns
sbb
sub
notb
push
js
sbb
cmpsl
imull
jecxz
das
mov
incb
mov
mov
dec
in
xchg
lret
sahf
loop
or
xor
add
out
xor
data16
dec
sbb
jmp
and
jp
mov
fcoms
pop
shll
loope
fsubrl
xchg
ds
mov
sbb
and
test
addr16
push
sub
dec
xlat
pop
or
dec
inc
add
loop
cmp
xchg
or
xchg
jo
and
xchg
add
sub
addr16
push
imul
push
or
dec
inc
adc
mov
subb
push
mov
sbb
mov
and
dec
push
sbb
or
insb
add
icebp
xchg
dec
adc
outsl
clc
push
push
sub
scas
rcr
lcall
out
add
jns
dec
add
inc
adc
insb
adc
jb
or
cld
dec
sub
mov
sub
lahf
js
imul
push
sub
sbb
push
fs
cmp
mov
int
loope
inc
mov
push
mov
or
mov
inc
inc
sbb
stos
xor
add
sub
sbb
stc
adc
ret
jecxz
inc
xchg
inc
sbb
and
jecxz
rorl
inc
sbb
inc
inc
or
jecxz
sbb
cmpsl
xchg
cmp
cs
sbb
data16
pop
add
cmp
sub
pop
jecxz,pt
and
xchg
ljmp
jge
fldenv
adc
pop
mov
daa
cmc
and
jb
ret
outsb
incb
xchg
or
jg
jecxz
push
fstpl
icebp
test
inc
jmp
mov
adc
ret
or
jecxz
mov
jle
sbb
lcall
or
les
mov
sbb
adc
orb
and
adc
dec
cmp
xchg
mov
rorb
movsb
nop
or
repz
or
outsb
imul
push
jne
call
sub
das
ret
test
dec
mov
push
push
sub
push
lea
push
cltd
sahf
es
jmp
cmp
push
jbe
dec
repnz
jne
xchg
dec
sub
fxch
mov
mov
cld
leave
dec
xor
das
mov
call
mov
jne
inc
mov
inc
shl
add
aaa
lahf
cmpsb
movsb
push
xchg
mov
jb
ss
and
cmp
push
mov
or
subb
mov
adc
sbb
cmp
ljmp
dec
mov
jne
sahf
arpl
jle
fadds
inc
ja
and
mov
dec
add
stc
cmp
inc
push
call
mov
fstps
rorb
push
movb
div
add
and
cmp
inc
jne
push
add
loop
or
mov
cwtl
mulb
js
sub
pop
jp
pop
mov
lss
mov
jecxz
test
jl
sub
mov
pop
les
scas
int3
push
inc
dec
sti
outsl
dec
jecxz
lret
inc
ret
mov
out
test
jg
cltd
add
adc
je
ret
push
loopne
cmp
jmp
scas
rcrl
std
sbbl
out
cmp
test
jle
push
mul
add
sub
or
test
fcomps
stc
in
test
andb
xchg
shr
loop
movsb
data16
cmp
adc
and
ljmp
sbb
sub
add
loop
test
or
fiadds
inc
icebp
xor
incb
jno
cld
mov
mov
ffree
orb
cmp
add
jns
or
hlt
sbb
push
out
jp
mov
scas
jmp
ror
std
inc
orl
jle
test
pop
out
push
inc
or
mov
or
pop
cli
xchg
insb
push
insb
aam
ret
pop
divb
jecxz
and
and
jecxz
inc
sub
adc
mov
adc
mov
dec
sahf
cli
push
sbb
sub
cld
lock
cmp
insl
sub
jecxz
pop
xor
pop
push
test
xchg
cmp
jecxz
pop
inc
jmp
pusha
jnp
in
inc
add
sub
lahf
fistps
pop
dec
rolb
add
es
xchg
add
pop
adcl
pop
adc
mov
scas
add
inc
sbb
test
jmp
loop
mov
sub
pop
inc
scas
mov
sbb
inc
push
sbbb
inc
pop
pusha
jecxz
insl
jg
addr16
pop
notl
jecxz
adc
mov
mov
bound
mov
jae
push
js
push
das
sbb
gs
and
sbb
adc
nop
inc
add
pop
call
sbb
dec
arpl
pop
movsb
mov
or
jecxz
add
jmp
sub
jge
es
stc
int3
fsubrp
mov
out
test
loope
fstps
mov
ficoms
lret
xchg
mov
cmp
fimuls
push
cli
mov
push
out
sub
cltd
loopne
popa
jne
pop
loop
mov
dec
test
fcomps
inc
into
or
sub
lock
xchg
cmpsl
and
pushf
icebp
mov
jge
dec
push
fisttpl
pop
dec
xchg
arpl
out
adc
dec
das
in
or
lock
xor
dec
pop
or
add
xchg
push
bound
call
mov
mov
add
adc
adc
push
fldenv
scas
push
cmpsb
dec
into
xchg
clc
fwait
xchg
sbb
jns
and
sbb
add
mov
mov
test
jl
inc
mov
mov
das
sbb
mov
xor
test
push
stos
mov
cmc
pop
push
repnz
sti
jbe
xor
sbb
lcall
scas
push
sub
roll
and
mov
subb
pop
dec
popa
and
ja
dec
jg
sub
xor
lret
jg
inc
pop
fs
hlt
call
jecxz
loop
or
xchg
xchg
nop
inc
mov
daa
xchg
xor
gs
in
sbb
mov
push
sbb
nop
sbb
outsb
dec
fbld
mov
rcrb
in
lahf
loope
pop
cs
ljmp
stos
xchg
imul
or
mov
faddl
jo
test
aaa
sahf
push
aaa
xchg
aad
arpl
sbb
sbb
sbb
cmp
pop
dec
sbb
xchg
adc
sbb
and
xor
test
mov
jl
jns
xor
movsl
daa
dec
inc
jecxz
aaa
insb
sbb
jg
dec
jno
insb
sub
inc
mov
outsb
sub
imul
lds
clc
adc
xchg
add
or
sub
popf
int
das
xchg
jl
push
cmpsb
xor
mov
orl
cwtl
push
sbb
out
inc
push
in
lret
mov
mov
adc
fsubrl
hlt
jg
loop
xchg
jle
or
mov
jg
xchg
outsb
fwait
sbb
test
ja
mov
lcall
jle
cld
mov
xorl
int
into
daa
xor
xor
add
mov
inc
or
ficompl
test
shll
xor
movsb
test
adc
inc
mov
inc
jo
push
dec
xchg
sub
or
inc
pop
push
dec
cs
and
sub
mov
enter
shrb
repnz
shr
add
xchg
pop
fidivrl
loopne
mov
sbb
fdivl
sbb
add
fidivs
daa
aam
mov
std
aad
mov
pop
scas
js
adc
sub
inc
fidivs
repz
sbb
pop
ja
outsb
push
and
or
jle,pn
xchg
add
inc
outsb
cmpl
lret
popf
and
jo
xor
jl
add
out
pop
leave
ljmp
shlb
xor
fcmovu
clc
and
es
push
ds
dec
sbb
xlat
jg
and
imul
cli
jbe
ficomps
and
ljmp
mov
mov
adc
xchg
loope
xlat
aaa
push
out
pop
ja
mov
sbb
rol
add
and
push
fwait
sbb
and
lahf
shll
add
bswap
inc
add
pushf
xchg
mov
imul
add
das
jle
add
inc
push
adc
int
lds
sub
add
sub
add
xor
shl
out
xchg
out
ficoms
popf
xor
pop
xor
sub
mov
loope
sbb
cli
loope
loope
jg
jns
or
push
xor
mov
nop
or
or
and
sub
leave
inc
sbb
sbb
pop
or
push
rorl
in
cvttps2pi
add
add
mov
mov
push
xchg
je
mov
adc
int
or
out
xchg
sbb
dec
sti
into
pushf
dec
aaa
add
fcmovbe
and
push
into
push
and
out
es
add
and
lcall
aad
or
loope
lock
mov
push
xchg
push
add
sub
xlat
lahf
arpl
ret
cmp
mov
les
neg
cwtl
inc
ds
movsb
cmp
and
loope
stc
mov
mov
dec
ljmp
mov
sbb
lea
xchg
testb
add
sub
hlt
mov
sbbl
mov
sbb
cld
pop
dec
insl
adc
dec
int3
dec
ret
fwait
je
bound
mov
addl
xchg
add
or
jle
ljmp
pop
or
cs
mov
loopne
clc
jecxz
cs
jno
loop
rolb
enter
mov
add
rcr
mov
popf
js
pop
aad
jnp
das
dec
das
fimuls
roll
add
lock
les
test
adc
rcll
sbb
xchg
dec
mov
fs
aaa
decb
adc
jo
sbb
push
jb
mov
sbb
add
mov
dec
inc
add
mov
cmp
data16
cmp
adc
and
mov
pop
push
xchg
push
nop
xor
enter
and
leave
insl
fdivrs
and
xchg
pop
das
jo
rcll
orl
or
lahf
dec
inc
pop
pop
popf
jns
cmpsl
jnp
add
gs
jle
xchg
scas
rorl
push
push
adc
mov
xor
cmpl
jle
xor
xchg
sbb
sbb
push
adc
aaa
das
push
fcomip
cmpsb
scas
pusha
inc
bound
adc
fdivrl
xchg
pusha
outsb
ficomps
jne
mov
dec
add
addl
and
and
jnp
xchg
cmpsb
xchg
inc
dec
push
sbb
pop
jo
inc
inc
mov
out
and
cmpsl
sbb
repnz
lods
jmp
inc
mov
push
out
dec
push
inc
subb
inc
push
dec
jecxz
xchg
ja
insb
loopne
push
xchg
add
jg
push
inc
add
pop
push
in
xchg
push
pop
es
fistpl
dec
mov
hlt
rcll
sbb
mov
sti
xlat
cmp
and
xchg
cld
rorl
or
movsb
ret
mov
pop
jecxz
push
popf
lods
dec
xor
stos
or
cwtl
mov
stos
xorl
jle
into
es
mov
sub
dec
xchg
push
push
adc
add
xor
jae
xor
adc
jecxz
mov
lea
xchg
adc
jb
sub
xor
inc
jne
pop
addb
lcall
sahf
inc
sub
mov
and
mov
push
push
movsb
or
mov
sub
adc
mov
pop
movb
pop
xchg
sub
jecxz
fldl
lea
ret
sub
das
add
jle
mov
mov
or
inc
cld
into
dec
fisttps
icebp
push
and
xchg
divl
and
adc
or
repz
out
pushf
sbb
lock
sbb
xchg
pop
hlt
mov
loop
mov
iret
aad
add
lret
cld
cmp
adcb
out
push
cmp
jl
pop
loop
setns
outsb
add
addl
insl
scas
popf
aaa
add
sbb
pushf
xor
in
dec
lret
jg
mov
add
mov
jecxz
push
push
mov
ret
int
pop
or
mov
fwait
test
inc
mov
cwtl
inc
aam
mov
orl
push
rolb
push
mov
mov
sbb
cli
mov
xchg
jp
sub
sub
add
fists
loop
sarl
out
mov
ja
cmp
ret
sbb
sbb
xchg
push
out
pop
jecxz
imul
and
push
pusha
and
testb
subl
test
mov
bound
movsl
ret
mov
pop
mov
or
jae
pop
shlb
adc
push
inc
jno
ja
idiv
dec
js
scas
aam
out
fimuls
xor
sub
mov
mov
dec
adc
out
push
pop
arpl
rcrb
push
jecxz
push
addb
ja
addl
push
sub
scas
hlt
or
imul
inc
loop
dec
test
daa
popa
pop
lahf
loop
inc
sbb
dec
sbb
pop
jecxz
stos
xchg
loop
xor
sbb
xor
sbb
nop
or
notb
push
into
add
push
dec
sub
mov
mov
sbb
mov
ficoml
cmp
xor
sub
subb
sbb
adc
jo
icebp
jne
in
mov
imul
sbb
fwait
repnz
cmp
push
inc
sbb
lods
adc
xor
adc
inc
push
pop
icebp
call
das
les
sbb
jecxz
pop
inc
pop
fimull
mov
sub
xchg
push
jecxz
sahf
xchg
add
and
std
mov
fsubrs
sbb
sub
rclb
enter
shl
ret
insb
pop
in
into
sbb
push
cmpsb
jbe
sti
fistps
pop
pushf
sbb
lods
sbb
cmpsl
or
outsb
mov
aad
rorl
es
rcll
jmp
jne
pop
ss
or
cwtl
in
push
movsb
or
xor
outsl
xlat
xor
daa
fiaddl
insb
std
das
nop
shlb
lret
mov
xchg
negl
jnp
lret
push
ret
cltd
sbb
mov
mov
or
bound
pop
pop
ja
mov
xor
mov
iret
push
mov
xor
je,pt
mov
mov
ja
or
cmc
pusha
adcl
into
push
push
inc
add
fistpl
sub
fildl
jns
popf
sbb
pop
sbb
xchg
pop
js
addl
sbb
jge
and
sub
cmp
xchg
fistpll
mov
add
incb
imul
cltd
add
dec
fimull
int3
cmovs
mov
xor
dec
adc
in
cmp
jecxz
mov
pop
pop
orb
dec
dec
push
jmp
mov
pop
pop
test
sbb
pop
xlat
mov
adc
mov
arpl
cli
bound
ret
add
or
mov
in
xchg
dec
and
or
scas
subl
xor
test
push
mov
rol
scas
subb
add
mov
aad
fidivrs
adc
jl
add
js
adc
mov
xor
sub
mov
outsb
mull
arpl
aam
pop
push
mov
sbb
fidivrs
lahf
mov
or
stos
xchg
dec
dec
scas
xor
sbb
mov
pop
mov
push
xchg
mov
mull
shlb
fnsave
xor
dec
mov
xor
pop
lock
fiaddl
pop
lahf
fsubrl
jecxz
sti
mov
adc
pop
inc
adc
sar
nop
inc
jle
movsl
cmpsb
dec
dec
sbb
jo
add
or
iret
cmp
int
sahf
lock
jb
mov
int3
sbb
xor
frstor
sbb
test
push
shll
sbb
add
mov
or
add
add
xchg
inc
push
push
ds
mov
nop
mov
xchg
push
and
rclb
imul
sbb
and
dec
push
es
inc
mov
cld
rorb
leave
sub
push
int3
jbe
loope
adc
dec
mov
adc
sub
inc
aam
or
imul
and
pop
fwait
sub
cmc
adc
fcompl
add
stos
add
stos
or
inc
dec
adc
into
push
push
add
in
gs
sti
or
pop
repnz
and
mov
xchg
outsl
cmp
xchg
loope
ljmp
dec
pop
arpl
and
pop
shrl
sub
fidivs
dec
or
inc
sub
or
jb
inc
inc
dec
push
into
mov
or
xor
jmp
inc
sbb
or
and
enter
cmc
out
mov
xchg
xchg
adcb
lret
ss
sbb
inc
dec
or
lret
mov
push
test
jne
push
clc
pop
mov
jl
jno
divl
je
or
loop
pop
int3
stos
push
sub
push
pop
sub
xor
lcall
lret
fisubs
inc
mov
mov
cmp
ljmp
sbb
push
loop
scas
notb
ds
sbb
pop
into
outsb
pop
add
pusha
push
xor
and
clc
movsl
or
jecxz
cld
and
aam
push
hlt
jns
sub
dec
push
adc
hlt
les
xchg
fmulp
pop
pusha
sbb
add
inc
push
sahf
ret
cmp
jp
pop
pop
or
pusha
pop
jno
dec
hlt
mov
xor
cmp
repnz
andb
addl
fld
icebp
movsb
std
aas
cmp
adc
add
and
dec
icebp
xchg
dec
adcl
mov
jl
sbb
pxor
sbb
pop
push
pop
lret
pop
addb
call
imul
and
mov
popa
xor
js
push
jecxz
push
pop
fstp
in
test
pop
dec
cld
es
or
shll
ja
pop
xor
cmp
jle
inc
stos
sbb
lret
cmc
push
movsl
pop
dec
or
out
in
rolb
dec
and
sub
in
lret
stos
sbb
out
push
cli
in
clc
test
sub
out
pop
dec
or
xor
dec
clc
jge
xchg
rol
push
push
sub
sbb
movsb
add
xchg
xlat
mov
or
pop
lds
sti
dec
mov
fimuls
xchg
inc
push
fwait
stc
cwtl
fsubrs
sub
call
outsl
adc
out
loopne
cmp
xchg
or
sbb
movb
int3
ljmp
shl
hlt
mov
in
fadd
xchg
fwait
cli
mov
xor
sbb
das
jle
add
or
nop
jl
push
lods
ljmp
ljmp
fisubrs
clc
pop
sahf
mov
loope
or
or
into
mov
ljmp
add
dec
pop
and
fdiv
cs
fldt
xor
out
pop
xchg
inc
mov
test
add
push
out
movsl
adc
inc
inc
mov
inc
enter
sbb
cld
cmp
push
enter
adc
cltd
lea
pusha
hlt
push
mov
push
stos
dec
dec
mov
es
fildll
mov
and
daa
insl
mov
dec
add
add
pop
xchg
push
repnz
cld
imull
notb
lret
loopne
insb
call
arpl
pop
cmc
movsl
pop
pop
push
aam
negb
adc
cld
sub
movaps
add
jbe
popa
mov
fucomi
shrb
in
call
mov
sub
cmp
jmp
ja
jmp
in
push
xor
xchg
xchg
mov
mov
and
jp
jecxz
scas
adc
mov
pop
ficoml
adc
dec
inc
pusha
es
pop
adc
orl
inc
cwtl
mov
into
pop
lods
fnclex
cmp
mov
call
cld
mov
aam
mov
loop
inc
cs
loop
cmp
loop
ficoml
pop
sahf
dec
test
loope
pop
dec
sub
dec
in
repnz
das
dec
push
rolb
pop
push
pop
fisttpl
stc
repz
int
dec
jecxz
ja
out
out
jg
enter
inc
jp
dec
das
ja
adc
scas
sbb
pop
imul
inc
stos
jecxz
dec
adc
jbe
xor
sub
incb
scas
add
or
dec
je
jle
cmc
test
js
das
pop
aam
int3
and
loope
pop
rcrb
cli
cmp
jns
and
mov
cs
push
es
adc
pop
xor
pop
loop
pop
les
mov
cmp
roll
dec
sub
push
fwait
pop
mov
cmpsl
dec
inc
adc
mov
mov
and
pop
repnz
fisubrl
stos
or
push
jle
xor
leave
and
mov
inc
adc
jns
and
or
pop
cmp
jecxz
sbb
clc
and
lods
repz
dec
jecxz
add
adc
inc
daa
jle
inc
cmc
and
xchg
add
push
push
sbb
in
sbb
arpl
inc
xchg
testl
jecxz
xorl
pop
arpl
lock
lret
mov
push
xchg
fcmovu
pop
std
addb
push
pop
push
adc
aaa
shlb
sub
inc
sbb
sub
inc
mov
cwtl
xchg
arpl
aad
sub
jecxz
les
xor
fisttps
out
je
ljmp
cwtl
mov
add
jg
iret
cmp
push
pop
jecxz
movsl
aas
pop
mov
mov
pusha
mulb
mov
xor
inc
push
fiadds
xchg
arpl
gs
scas
adc
push
lods
sub
pop
xchg
mov
jecxz
xor
sbb
stos
pop
dec
xor
fsubrl
mov
and
scas
push
sbb
dec
pop
or
stos
mov
iret
cmp
and
sbb
pop
adc
xor
sbb
iret
aas
test
das
and
push
lahf
scas
jmp
jmp
fxch
imul
shrl
push
out
icebp
bound
jl
push
cltd
pop
into
arpl
mov
mov
leave
or
push
lea
fidivl
cld
dec
fsubrs
mov
insl
jecxz
push
sub
stos
sbb
mov
subl
pop
xor
and
in
add
push
push
mov
mov
scas
and
inc
push
cli
in
sub
sahf
sub
fisubl
sbb
jnp
icebp
xor
enter
push
jecxz
and
and
mov
xchg
dec
push
flds
mov
sub
mov
in
movsb
fstl
mov
scas
mov
add
call
inc
data16
and
sbb
pop
add
cli
or
ret
adc
push
push
push
xor
jae
fcomip
add
mov
push
int
in
xor
add
and
imull
clc
aaa
outsb
sub
xchg
sbb
push
dec
jno
jp
push
jb
sbb
sub
or
sbb
push
data16
out
mull
lahf
fildl
ficoms
sbbl
scas
out
xchg
push
ds
xor
popa
fisubl
inc
adc
lock
outsb
inc
pusha
cmpsl
pop
pop
test
je
daa
popf
and
cli
lds
iret
and
cs
jp
fs
mov
mull
inc
stos
outsl
xchg
add
gs
push
push
lds
inc
ret
adc
mov
loop
or
stos
cmp
xor
and
loopne
mov
cmp
push
jle
lahf
int3
add
sbb
test
pop
sub
jmp
dec
add
pop
xor
lcall
or
fistpll
dec
in
push
test
jne
mov
pop
aas
xchg
push
xor
jecxz
sub
sub
push
push
push
sbb
ja
sub
xor
ret
and
sub
es
scas
jp
pop
sub
and
or
push
mov
daa
pop
or
pusha
add
ds
out
jne
ljmp
test
cwtl
daa
or
fucomi
ret
sbb
sbbb
add
inc
xor
leave
push
orb
andb
inc
adc
push
mov
mov
pop
pusha
mov
pusha
out
add
xor
nop
inc
sahf
or
data16
into
or
je
xchg
mov
sbb
mulb
addr16
int
sbb
arpl
xor
push
arpl
insb
data16
pushf
xchg
xchg
stos
in
fs
push
scas
test
and
add
out
push
lret
insb
subl
add
fmull
hlt
rclb
insb
in
repz
fimull
dec
xor
subb
xchg
xor
jns
insb
mov
inc
add
in
addb
ss
push
pop
loop
push
outsl
mov
cs
sbb
lea
inc
jle
lods
mov
sub
inc
cli
and
loop
cmp
add
xchg
push
adc
arpl
add
mov
test
pop
aad
mov
and
adc
je
inc
aad
push
das
push
mov
je
xchg
inc
cmp
mov
lahf
and
fisubrs
int3
xor
adc
cmpsl
ss
add
xchg
lock
imul
mov
jecxz
mov
sbb
leave
pop
cmp
mov
sub
jg
jno
mov
rorl
clc
stc
orl
mov
aam
pop
push
add
and
xchg
cmp
push
arpl
cmp
cmp
faddl
or
inc
dec
mov
sbbb
cld
or
sti
push
repnz
push
mov
jb
cwtl
push
pusha
add
movsb
mov
test
iret
sbb
push
jp
ljmp
repnz
push
mov
sarb
push
add
scas
pop
ret
adc
je
sbb
enter
movsb
pusha
mov
inc
mov
xor
sbb
push
mov
or
xchg
mov
das
insb
out
int3
mov
movsl
xor
cli
movsl
and
jecxz
sbb
bound
clc
push
sub
or
jg
add
popa
pop
inc
xchg
sub
repnz
lcall
lcall
pop
adc
adc
std
push
into
sbb
jl
sbb
jb
jl
push
pop
cmpsl
rclb
jo
pop
xchg
jo
aaa
ja
rorl
negb
hlt
cs
sub
inc
pop
addl
popa
es
scas
adc
add
aaa
stos
sbb
mov
mov
hlt
loop
mov
les
mov
lods
jp
xchg
push
and
push
or
jl
fucomp
push
jmp
adc
sbb
imul
push
mov
in
icebp
jo
push
repnz
and
push
mov
js
push
cld
lret
or
in
stc
frstor
jno
test
cmp
pop
jbe
mov
pusha
push
daa
out
xor
sti
sti
xchg
add
push
pop
xchg
dec
in
mulb
or
cmp
das
iret
jle
fwait
pop
loope
jno
movsl
pop
push
mov
and
orl
jecxz
sbb
in
or
pusha
and
ret
lret
stos
dec
into
jno
movsb
or
das
test
js
adc
jecxz
pop
imul
mov
sub
movsl
sub
incl
jle
jle
movsb
adc
das
ds
sbb
fwait
test
enter
rcrb
cli
mov
push
aaa
xor
mov
dec
mov
inc
dec
cltd
push
out
pop
xchg
jl
or
pop
jg
scas
sar
sbb
fisttps
dec
insl
int
lahf
add
cmpsb
ljmp
jbe
fistpl
rcrb
or
jecxz
mov
mov
and
cld
iret
test
sbb
sub
or
mov
mov
xchg
and
mov
hlt
out
stos
add
jecxz
add
push
jne
loop
std
test
pop
dec
or
push
movsb
xor
aas
add
xchg
mov
scas
loope
enter
xchg
repnz
out
adc
lret
sub
pop
loop
sub
jecxz
fwait
aad
cmp
or
je
sti
jg
pop
xor
or
cmp
jl
icebp
fcoml
add
add
xchg
pop
jmp
push
rcrb
push
push
mov
push
push
adc
pop
pop
fistpl
sbb
jg
dec
sbb
out
inc
cmp
or
bound
mov
xchg
mov
scas
pop
add
mov
pop
icebp
xchg
out
inc
daa
aas
pop
dec
xor
push
icebp
or
jbe
sub
pop
cs
fs
adc
push
xchg
arpl
push
or
ret
add
ja
and
xchg
cs
sbb
xorps
xchg
fldt
cli
repz
or
push
xchg
jle,pn
mov
mov
mov
dec
inc
mov
adc
mov
movsb
sbb
sbb
mov
mul
inc
and
mov
shl
pop
test
lods
scas
das
jg
fistl
jle
loopne
adc
cmpl
xor
push
out
pop
xor
addl
and
sub
ret
dec
xor
sar
pop
or
or
sti
lret
inc
mov
and
xchg
std
xchg
movb
dec
aas
ds
mov
or
mov
ja
rcr
mov
sbb
loope
out
shrb
mov
add
gs
adc
inc
push
movsl
dec
pop
jae
jecxz
lahf
test
xlat
mov
je
enter
adc
push
jmp
sbb
jb
pop
into
add
dec
iret
and
or
aas
ss
test
mov
loope
mov
dec
push
add
incb
in
test
popa
mov
adc
std
mov
and
push
sub
sub
pushf
mov
cmp
ret
mov
loop
imul
inc
push
out
cmp
frstor
invd
ficoms
cmp
sbb
sahf
mov
sub
decl
xor
sbb
pop
inc
inc
add
stos
ss
dec
push
ret
loopne
mov
mov
cmp
jecxz
pop
repnz
sub
test
inc
test
movsb
out
pop
scas
or
imulb
into
add
jle
dec
mov
dec
mov
xchg
sti
add
out
lret
and
and
pop
fcmovu
ret
outsb
push
mov
leave
mov
sub
lret
in
or
jno
scas
add
mov
les
cmpl
dec
mov
push
jecxz
mov
push
lds
mov
push
push
cmp
push
sub
loop
addr16
jne
xchg
mov
lret
jmp
or
adc
cmc
stc
packsswb
jg
mov
pushf
lock
and
sub
cmp
and
and
sbb
aam
aam
out
int3
xchg
lret
push
or
xor
popa
pop
push
adc
and
jecxz
lods
pop
dec
or
jmp
push
and
sbb
jecxz
imul
jl
mov
sub
xchg
mov
int
subb
lds
aad
repnz
mov
lret
sub
lods
mov
xchg
std
xor
sarb
dec
iret
inc
jle
dec
pop
jl
in
or
pop
adc
jle
and
movsl
fld
incb
jecxz
cwtl
daa
sub
lahf
or
outsb
or
jl
icebp
add
adc
pop
cmc
cmpsl
push
jb
push
mov
repnz
mov
push
xchg
arpl
xor
dec
pop
aas
mov
mov
cmp
jecxz
stos
add
jp
mov
jp
mov
inc
mov
or
sub
cmpsl
inc
cli
adc
fistpl
nop
int3
jecxz
adc
xchg
mov
test
dec
adc
adc
into
xchg
mov
pop
push
call
pop
lcall
call
fwait
pop
inc
mov
adc
dec
or
in
cmp
or
or
xchg
scas
imul
sbb
push
or
push
mov
orb
out
clc
popa
jb
insb
adcl
jmp
xchg
dec
xor
sub
and
dec
roll
jecxz
push
fneni(8087
and
pop
mov
push
imul
or
jp
daa
add
cmpsl
pop
lret
lret
push
xor
add
loopne
push
mov
push
gs
out
jnp
push
mov
testb
addr16
push
inc
pusha
mov
clc
xor
cmc
or
push
inc
stc
scas
jg
les
test
inc
push
sub
negb
cmpl
xchg
jmp
pop
cmp
add
xor
jp
lea
jne
add
jbe
xor
cmp
sbb
push
or
sub
pop
stos
test
push
inc
mov
adc
pop
into
mov
cmp
int
jbe
arpl
push
xor
pop
xor
int
dec
in
xchg
jns
sub
das
mov
lock
add
cmovge
cwtl
cmp
pop
and
andl
sbbl
stos
adc
push
jae
push
daa
push
fs
fdivs
add
sahf
arpl
push
mov
push
fwait
cltd
jbe
jo
stos
ret
pop
gs
mov
adcb
aas
mov
push
inc
jecxz
stos
sub
imul
in
mov
mov
in
cmc
in
pusha
sbb
xchg
dec
or
jnp
push
dec
fmuls
jns
cwtl
push
lcall
cmp
mov
aad
push
aam
push
fdivrl
fsub
movsb
ds
rorl
fstps
mov
loope
push
cmp
and
xor
jle
test
or
add
jbe
add
pop
pop
pop
jp
cs
rorb
decl
and
jp
popf
sti
jbe
fldt
movsb
dec
dec
andl
push
pop
push
jno
orb
adc
sbbl
in
dec
add
movl
dec
pushf
sti
mov
imull
cmp
mov
inc
in
add
clc
lahf
fadds
andl
jle
sbb
inc
loopew
das
sub
xchg
push
adc
xchg
int
cmp
cli
cmp
pop
xor
or
inc
xchg
je
cmp
sbb
in
enter
sub
stc
repz
adc
fs
insl
adc
jge
jae
jecxz
push
and
pop
scas
sbb
sbb
mov
add
ds
movsl
mov
lock
leave
jns
mov
fnsave
out
jae
fildl
and
mov
push
sub
add
mov
into
pop
pop
pusha
lret
jmp
in
sub
je
insl
mov
adc
or
sbb
movaps
adc
push
mov
in
cmp
jns
push
lods
roll
mov
jecxz
dec
or
rol
dec
and
out
xchg
dec
pusha
push
pop
out
sarb
test
loop
jmp
adc
cld
push
mov
pushf
jmp
pop
cmpsl
hlt
add
push
dec
dec
push
mov
loope
mov
push
es
pop
mov
sbb
loope
or
xorb
inc
imul
mov
daa
aaa
jbe
mov
push
add
jmp
stos
cmp
push
pushf
test
ljmp
ret
xchg
fucomi
lods
inc
and
pop
pop
lahf
add
sbb
jl
jne
dec
loop
inc
lock
lcall
push
mov
incb
inc
dec
testb
lret
ljmp
faddl
add
sub
iret
jne
sbb
jno
stos
add
push
or
aam
cmc
jl
pop
loope
dec
or
test
loop
out
mov
outsb
ds
lret
pop
pop
jle
sub
sbb
pop
cmovle
pop
inc
pop
or
sbb
sbb
mov
jecxz
loopne
xor
arpl
addb
pop
xorl
pop
or
push
xchg
pop
arpl
jecxz
inc
mov
push
clc
cmp
push
mov
loopne
lods
lods
mov
pop
inc
inc
and
xchg
cmovg
iret
and
add
push
dec
test
cmovbe
sub
push
pop
stc
cs
inc
dec
mov
and
dec
xor
je
int3
inc
loope
sub
mov
jbe
rcll
movsb
call
pop
mov
outsb
adc
je
gs
sti
add
jns
jp
mov
out
dec
in
movsb
lods
dec
sub
insl
push
inc
push
xor
mov
push
or
and
adc
orb
add
or
push
cmp
andb
cmp
jnp
scas
add
jo
je
nop
orl
sub
sbb
mov
add
adcb
push
jecxz
aaa
jle
sbb
mov
and
inc
sarb
jp
and
aam
lods
jecxz
push
sub
push
adc
xchg
jecxz
pop
pusha
inc
or
flds
stc
mov
adc
ret
je
roll
xchg
sbb
pop
mov
cmpl
jne
pop
mov
imull
mov
fimull
jb
sbb
push
cmp
jle
sub
decl
mov
xchg
sub
inc
sbbb
add
sub
sub
jg
push
jecxz
adc
jno
jb
je
orl
femms
cli
les
aad
sub
sub
push
cs
lret
fcmovnu
adc
mov
xchg
inc
test
ja
pop
sbb
sbb
mov
or
ficompl
jecxz
scas
push
jbe
insl
add
loop
test
jecxz
movsl
dec
ftst
daa
jecxz
mov
mov
mov
dec
imulb
cwtl
jmp
frstor
pop
loopne
sub
adcb
pop
sub
mov
cmp
push
pushf
push
add
xor
or
movsl
in
cmpb
and
enter
push
js
lcall
sbb
dec
push
out
scas
fwait
mov
jp
popf
dec
mov
cmpsb
jae
mov
xor
fiadds
les
cld
pop
jle
adcl
push
imul
dec
cmp
pop
movsb
sbb
incl
int
cmp
dec
or
lds
stos
jb
mov
mov
es
pop
shll
stc
and
popa
andl
xchg
scas
or
pop
ffreep
add
add
jmp
ret
push
lret
ret
cli
pop
test
pusha
cmp
mov
jmp
push
daa
insb
test
dec
inc
sbb
out
pop
push
xchg
and
inc
out
cmp
outsb
aas
inc
jmp
imul
enter
pop
push
mov
jecxz
push
inc
adc
and
pop
adc
and
stos
sub
cltd
fistpl
xchg
xchg
mov
pop
cs
fwait
inc
insl
mov
loopne
mov
ficomps
sahf
or
clc
adc
inc
popf
dec
call
js
lret
mov
or
negb
into
sti
push
xchg
out
sub
mov
mov
dec
js
add
or
pop
cld
sbbl
adc
adc
sub
and
adc
dec
mov
push
xchg
dec
test
pop
dec
dec
dec
leave
inc
jb
sub
cmp
cmp
sub
sbb
sahf
or
push
mov
test
and
add
mov
pop
inc
ret
and
addr16
nop
aaa
jbe
sub
aad
lea
add
fnstcw
inc
sbbb
sbb
mov
jae
incl
dec
or
sbb
in
inc
imull
jecxz
dec
jl
push
push
dec
push
int
xor
orb
inc
or
daa
mov
pop
sub
xor
pop
mov
or
sub
hlt
ljmp
insl
mov
mov
sub
mov
and
inc
leave
jle
inc
insl
hlt
enter
pushw
xor
mov
jecxz
ljmp
pop
cmp
out
outsb
pusha
push
dec
lret
mov
jb
jbe
scas
negl
out
or
stos
nop
pop
das
orl
xchg
icebp
lcall
cld
aad
test
adc
jno
and
cmp
xor
or
sbb
ljmp
add
fnstsw
push
sbb
clc
cmpl
dec
fwait
mov
test
sti
andb
add
mov
outsb
or
or
mov
add
and
pop
testb
fwait
ja
add
xor
inc
push
ret
pop
sbb
mov
push
xchg
imul
mov
out
test
sbb
push
cmp
sub
jge
ljmp
pop
jg
sbb
mov
pop
lds
mov
and
jo
sbb
cmp
jno
jne
pop
vpsrld
les
sub
rcrl
push
mov
gs
ret
popf
sbb
pop
pop
push
dec
out
or
mov
pop
mov
and
jge
adc
mov
icebp
in
aam
in
cltd
mov
push
sub
and
sbb
cld
mov
xorb
or
rcr
inc
daa
aaa
cli
or
mov
jl
add
push
pop
sbb
dec
xor
pop
mov
mov
sbb
dec
sbb
cmpsl
and
stos
and
stos
xchg
pop
inc
pop
pop
int3
aad
test
push
div
cmp
ss
loopne
add
faddl
add
test
fstl
and
or
adc
xor
insl
call
or
push
jg
popf
jle
lcall
adc
inc
ret
xchg
inc
idivb
inc
mov
mov
add
inc
das
fisttpll
and
add
ljmp
push
or
das
inc
ds
push
add
pop
loope
or
movsb
das
mov
push
fldt
xchg
jp
adc
pop
sub
sbb
push
ficomps
test
sbb
xchg
rolb
daa
int3
dec
fcompl
ds
sbb
push
adc
jecxz
pop
pusha
outsb
inc
push
sbb
push
aas
sbb
fdivrs
sub
xchg
mov
jne
std
push
roll
cmpsb
enter
ret
loop
repnz
mov
les
xchg
push
std
mov
add
stos
lret
jecxz
lods
sbb
fistpl
sub
inc
repnz
jno
js
ljmp
gs
mov
je
scas
mov
fiaddl
inc
imul
addb
lock
jb
push
jns
and
ja
and
enter
cmpsb
in
push
push
inc
push
cmp
fsub
test
push
inc
adc
mov
adc
mov
or
push
lea
push
loope
push
and
dec
es
cmp
and
push
jecxz
rorb
in
dec
enter
dec
and
xlat
pop
bound
enter
stos
or
sub
mov
inc
testl
sub
mov
lret
mov
pushf
test
inc
sbb
push
adc
add
cli
cltd
test
or
sbb
fmulp
mov
mov
jl
pop
fwait
sub
divl
sbb
pop
rorl
add
inc
fstl
jbe
fs
stos
adc
xor
mov
leave
fimuls
aaa
pop
pop
xchg
pop
insb
mov
mov
aam
mov
sbb
cmp
sbb
aam
jp
mov
insb
stos
cwtl
mov
and
shl
adc
dec
sbb
loop
leave
sbb
je
test
cltd
shrl
lret
push
mov
adc
cmp
xchg
enter
push
loopne
and
ss
sbb
lret
testb
mov
subl
fs
cmp
sbb
xor
ljmp
cwtl
subl
stos
xor
mov
mov
lods
pop
dec
sub
sub
in
je
int3
pop
adc
xor
xchg
sbb
pop
xlat
mov
jae
inc
cltd
ja
into
xchg
xchg
add
jmp
pop
cmpsb
dec
jne
jl
xchg
dec
sbb
mov
fwait
cld
nop
arpl
out
das
imull
out
and
insl
cli
push
jge
scas
pop
imul
lret
stc
xchg
and
inc
push
xchg
sbb
jo
push
fiaddl
outsb
or
xor
mov
inc
pop
imul
scas
pop
xchg
mov
pop
sub
inc
out
fwait
adc
push
ljmp
hlt
mov
add
lods
add
nop
xchg
lahf
js
jns
enter
push
dec
sub
add
stos
adc
lds
pop
insb
or
dec
repnz
adc
clc
test
pop
dec
push
pushf
push
mov
sub
mov
movsl
jle
cmc
jge
fadd
shrl
sub
sbb
cmp
jecxz
lret
in
add
repz
out
sbb
adc
or
jp
pusha
aad
rorb
rorb
faddl
mov
int
adcl
dec
repnz
add
lret
xchg
sub
mov
add
enter
ds
push
push
jb
pop
push
sbbl
mov
jecxz
pop
cld
lret
mov
dec
loop
mov
xchg
add
ds
mov
or
call
dec
mov
jmp
jae
mov
fadds
notb
sbb
sub
inc
push
adc
xor
xorl
jle
adc
ret
sbb
icebp
and
or
add
or
jbe
sbb
inc
movsl
call
lahf
mov
add
dec
loop
add
fcompl
popa
test
scas
xor
sub
cmovle
xor
jns
orl
xchg
mov
gs
mov
mov
inc
jb
in
outsl
insb
xchg
scas
cmp
stos
push
orb
inc
sbb
addb
sbb
movsb
add
push
xor
sbb
testl
push
icebp
adc
mov
arpl
xor
imul
sbb
add
lret
inc
loop
das
and
mov
test
ret
mov
xor
int3
add
xor
push
or
enter
imul
inc
adc
lds
loope
xor
sbb
ljmp
enter
xchg
jl
add
loop
pop
inc
adc
punpckldq
ds
sbb
cmp
fsub
cs
cmc
jmp
test
add
add
dec
mov
mov
push
xchg
jns
data16
dec
sbb
push
cmp
lods
add
sub
out
add
movsl
adc
mov
shlb
mov
imul
mov
pop
sbb
decb
insb
xor
stos
add
sub
or
loop
fwait
cmpsb
dec
cli
jne
incl
push
test
adc
sahf
add
xor
mov
fcoms
inc
fwait
xchg
add
push
adc
xlat
mov
fwait
or
lret
xorl
sub
sub
push
mov
mov
jg
in
mov
add
mov
pusha
or
add
loope,pt
push
pop
mov
adc
mov
push
out
push
repz
setnp
ljmp
adc
mov
ret
push
pop
mov
lods
sbb
sbb
aad
shlb
lret
fists
fstpt
inc
and
xor
mov
pusha
xorl
inc
pop
test
sbb
pop
jae
sub
sbbl
dec
adc
dec
push
scas
cmp
das
or
jp
popf
jne
test
loop
xchg
add
inc
scas
xchg
push
dec
add
dec
push
sbb
pop
outsb
adc
clc
lcall
add
push
mov
and
cmp
cmp
or
and
sub
sub
enter
lds
call
rclb
cld
bound
test
pop
dec
mov
ret
outsb
or
pop
mov
cs
adc
mov
pop
lcall
lahf
outsl
lea
scas
adc
pusha
mov
xchg
dec
dec
out
and
xchg
mov
das
adc
xor
inc
jo
dec
lds
mov
cmp
das
lock
nop
movsb
das
ja
inc
inc
cmp
mov
push
and
int3
push
roll
and
daa
dec
lret
pop
hlt
icebp
cmp
cmp
fdivrl
dec
xor
inc
sbb
cld
dec
mov
cmp
mov
xor
mov
lahf
lret
push
rep
add
or
pop
lods
cmc
mov
dec
cltd
cmp
in
mov
aad
sub
into
cmp
adc
pop
pushf
lahf
push
xor
das
shlb
enter
push
jb
sbb
mov
int3
enter
ret
add
push
xor
xor
jg
sbb
adc
insb
orl
sub
bound
xchg
popa
test
lret
pop
int3
dec
mov
pop
xchg
scas
sub
lret
and
test
daa
cli
div
inc
data16
or
mov
or
aad
add
ret
sbb
or
and
jp
or
mov
xor
sbbb
mov
sbbb
in
xor
jae
and
lods
lock
aad
add
add
ret
sbb
inc
adc
cltd
add
outsl
je
xchg
out
cmp
sbbl
les
mov
cli
insl
inc
add
fs
or
mov
cltd
sub
mov
cwtl
dec
cmp
and
mov
data16
dec
push
cmp
bnd
fsubrs
and
inc
inc
inc
cmp
add
cmp
aam
push
stc
jge
es
xor
xor
jge,pt
sbb
sub
aam
dec
lret
jle
bnd
loop
aad
mov
add
lahf
cmpsl
ficompl
xchg
ret
jl
data16
inc
pop
data16
sub
inc
fisttpll
jbe
add
add
mov
sbb
test
and
sub
bnd
arpl
es
sbb
mov
mov
push
and
sub
pop
popa
push
push
in
push
loop
aam
jecxz
xchg
and
loope
addl
dec
mov
ja
test
sbbb
pop
jecxz
sbb
cld
into
push
lret
adc
pop
lods
pop
sbb
frstor
push
aad
adc
dec
pop
mov
xchg
daa
sbb
inc
add
dec
xor
cmpl
add
insb
and
xchg
sahf
and
xchg
pop
insb
ja
jmp
aam
into
sbb
mov
js
adc
stc
adc
inc
mov
sahf
cmp
add
or
jne
test
jbe
dec
jmp
push
push
push
shr
aaa
or
mov
add
jp
mov
mov
adc
aad
es
fsubs
sbb
into
test
dec
mov
outsl
xor
xchg
loopne
cmpsl
cmp
pop
mov
andl
or
xor
jg
mov
cwtl
jge
dec
sub
jle
jg
lcall
aas
xorb
or
les
sbb
int
push
add
sbb
ja
or
bound
sbb
and
lret
repz
sub
iret
or
inc
daa
and
add
push
mov
sub
add
mov
sbb
pusha
adc
dec
cmpsb
lret
push
pop
and
pop
scas
mov
pushf
sbb
cmp
mov
xchg
and
mov
mov
push
pop
and
and
scas
loopne
in
cmp
push
data16
push
lret
into
stos
ds
ficoml
lea
ss
pop
mov
orb
out
sub
movsl
fisubs
mov
jle
daa
aaa
cli
aam
cmpl
outsb
jmp
mov
mov
sub
xchg
lock
xor
lahf
aad
xchg
or
dec
aaa
pushf
xor
int3
adc
mov
cmp
orl
dec
in
adc
leave
inc
lret
insb
mov
cld
push
cmp
rolb
pop
jb
and
add
or
lods
loope
inc
sbb
cmp
pop
pop
sbb
sahf
repz
stc
lret
arpl
fildll
enter
lahf
popl
in
popf
pop
loope
ret
dec
inc
inc
add
test
decb
sbb
adcl
lahf
sti
rcrl
flds
dec
test
jecxz
push
jb
repnz
sbb
stos
adc
roll
jno
fs
xorb
stos
rcl
mov
jmp
scas
and
adc
and
push
add
shrb
jbe
outsb
pop
mov
movsb
cmp
mov
cmc
lock
mov
push
mov
sbb
ficoms
xchg
pop
jne
imul
cmc
sub
xchg
inc
mov
ficoms
inc
sbb
lret
xor
xchg
loop
mov
and
inc
ljmp
fdivl
popf
adc
xor
add
sbb
sub
stos
jl
mov
stos
ljmp
mov
int3
pop
into
mov
mov
pop
or
xor
inc
jg
fdivs
sbb
call
repz
pop
cli
enter
push
sahf
aad
fcom
inc
push
pop
into
mulps
fucompp
rcll
mov
mov
ja
outsb
enter
sbb
sub
repnz
mov
jns
je
or
xor
mov
repnz
xchg
inc
and
mov
mov
push
inc
cmpsb
or
xchg
dec
out
mov
cld
loopne
and
ret
pop
scas
cmp
cmc
cmpl
add
ja,pt
xchg
aaa
cwtl
sub
mov
mov
pop
mov
sar
inc
mov
or
nop
gs
inc
mov
push
jno
jg
lock
sbb
cs
push
leave
into
inc
idivl
sbb
loope
mov
outsb
sub
aas
call
cmpsb
addb
xor
outsb
sbb
pushf
in
mov
push
cli
shrl
dec
mov
inc
inc
ljmp
sahf
add
add
add
dec
push
push
and
out
fucom
jecxz
mov
or
jecxz
hlt
dec
pop
ret
clc
mov
mov
mov
push
ds
dec
add
sti
mov
leave
push
inc
lcall
and
and
mov
repz
adc
pop
testb
cmpsb
cmp
dec
xchg
jae
inc
push
mov
cld
jbe
xchg
jb
lcall
push
sbb
mov
push
sub
jb
ja
mov
lret
mov
lock
push
xorb
out
adc
stos
mov
je
xchg
mov
push
dec
popf
lret
or
int3
stos
inc
loope
jmp
movsl
imul
xchg
and
pop
xor
cld
cmc
clc
movsl
and
filds
mov
adc
and
movsb
xor
mov
aad
ficompl
mov
pop
pop
rorl
pop
inc
loop
mov
add
lea
cmp
cmpl
sbb
sbb
mov
out
mov
or
ret
cmp
fildll
xor
imul
test
sbb
xor
int3
test
push
shlb
je
adc
push
fiaddl
or
dec
add
scas
movsb
lock
sbb
ret
add
push
out
mov
cwtl
push
dec
inc
sbb
cltd
out
pop
insb
add
add
jns
scas
push
jg
lds
dec
lret
lret
pop
push
rcll
push
int3
sub
pop
pop
pop
mov
xor
jbe
repz
ss
and
das
xor
add
inc
add
or
scas
mov
adc
xchg
scas
sbb
dec
ljmp
dec
mov
fdivr
sub
xor
xor
cli
jae
dec
hlt
inc
loop
ret
pop
adc
fwait
adc
popf
faddl
inc
insb
jecxz
cmp
es
mov
xorl
jp
mov
ljmp
adc
add
gs
cs
into
daa
mov
mov
mov
mov
sub
mov
inc
dec
cmp
ret
outsb
idivb
stos
addb
aam
outsb
in
and
sbb
loop
subl
and
arpl
lods
cmpsl
mov
dec
sbb
mov
or
mov
add
jecxz
icebp
jg
roll
std
pop
scas
adc
jns
add
or
insb
ret
push
lods
add
mov
mov
in
and
mov
or
mov
hlt
setl
jae
jae
mov
xchg
dec
dec
push
mov
repnz
sbb
mov
add
pusha
push
daa
sbb
fstpt
sbb
cmc
mov
adc
sbb
outsb
jecxz
sub
pop
rorb
inc
call
outsl
mov
lret
mov
or
push
fcomi
xchg
xchg
jecxz
add
xchg
fldl
cmp
leave
je
pop
xor
aaa
mov
lods
aas
mov
sbb
das
arpl
mov
or
jmp
aas
test
xchg
inc
into
push
ret
jae
mov
push
jecxz
inc
gs
sbb
xchg
jle
loop
js
das
inc
ret
into
rsqrtps
xchg
or
lds
dec
sub
ja
out
xchg
inc
fcomps
loop
pop
xchg
push
leave
sbb
loope
loop
jnp
je
int3
cs
gs
popf
push
sub
call
ficomps
out
add
test
dec
loop
mov
xor
dec
ficompl
test
call
push
xor
pop
jmp
adc
stos
pop
aaa
adc
dec
sbb
cmp
push
adc
movsl
fadd
cmp
outsl
cmp
sbb
or
jl
adc
jg
cwtl
or
xchg
jbe
push
jp
ljmp
mul
xchg
sbb
inc
rcrl
fwait
push
xchg
cltd
cmp
cmp
addb
outsl
out
cltd
sahf
jl
ret
rorl
in
push
mov
lea
pop
push
sbb
call
jmp
movsl
cltd
lods
sub
mov
stos
pop
xor
jno
mov
out
xlat
and
push
pushf
and
jmp
insl
push
lcall
test
jle
ljmp
out
loop,pt
cs
out
sarb
jnp
mov
test
mov
mov
add
xor
hlt
arpl
cmp
minps
inc
in
pop
movsl
movb
mov
lods
cld
addb
inc
jne
mov
inc
test
js
aas
loop
mov
out
mov
movsl
test
inc
push
push
cs
insl
adc
fsubrs
lcall
cld
or
repz
xchg
dec
pop
insb
int
sbb
lcall
pavgw
mov
push
and
mov
push
movsl
or
ret
aad
pop
punpckhdq
lahf
hlt
sbb
push
push
scas
das
add
lock
popl
xor
pop
dec
inc
pop
push
shrl
sbb
mov
movsl
sbb
sub
sub
xor
cmp
mov
hlt
ret
lsl
pop
mov
jbe
dec
leave
pusha
push
call
adc
push
in
loope
movups
pop
inc
dec
repz
ret
cmp
shrl
mov
mov
push
in
fwait
sbb
outsl
inc
mov
push
addr16
sbb
pop
iret
shrl
or
jmp
adc
std
fldcw
pop
roll
pop
iret
nop
insb
pop
dec
jg
mov
jl
pop
adc
add
mov
das
loop
shl
popa
jb
dec
stos
daa
loope
mov
mov
mov
sbb
lcall
add
push
jg
es
inc
mov
add
pop
xchg
inc
fsubrs
add
lret
jecxz
jne
in
scas
pop
mov
jb
pop
nop
add
cli
xchg
xorb
nop
insl
sub
cmp
mov
xorl
xor
mov
out
adc
sbb
test
pop
adc
sub
jne
js
jg
pushf
pop
fcmovu
and
mov
loope
lock
mov
add
hlt
dec
dec
jns
aaa
hlt
out
add
repnz
pop
andl
int3
arpl
sbb
pop
fdivrl
and
pop
add
jg
sbb
cmp
dec
jecxz
and
iret
dec
sbbl
add
outsb
push
mov
adc
add
testl
push
and
je
sub
push
mov
add
sbb
dec
aas
xor
cmc
sbbb
add
ja
xchg
shrb
cld
pop
mov
sbb
sub
and
scas
or
mov
xchg
push
sub
subl
push
and
shrb
daa
add
lcall
dec
adc
mov
pop
orb
cmpsl
add
mov
sbb
out
dec
pusha
inc
es
push
pushf
pop
jb
inc
loopne
xchg
add
jb
xchg
push
sbb
stos
sbb
lds
test
lret
push
ds
cltd
movsl
push
cs
ret
je
xor
bound
xor
and
and
imul
sub
sbb
xor
ja
leave
mov
data16
pushf
xchg
lea
loop
cmp
popf
jno
push
mov
jbe
cmp
mov
or
ja
out
data16
mov
js
jle
inc
or
sbb
aad
mov
packsswb
adc
xor
sbb
mov
xor
dec
mov
shrb
into
scas
fisttpll
and
testb
cld
mov
cmp
mov
jo
add
xchg
sbb
add
push
inc
iret
xchg
sbb
push
cmp
mov
jp
cmp
dec
scas
pop
adcl
lahf
mov
inc
push
or
mov
dec
stos
or
or
sbb
or
cmp
rcrl
mov
in
fdivrs
dec
jecxz
fnstenv
sub
pop
add
dec
and
test
cli
mov
js
dec
add
pop
push
icebp
xchg
gs
sbbb
je
jns
mov
jnp
add
sti
sbb
push
mov
pop
mov
andb
push
loopne
push
nop
push
fwait
arpl
jne
insl
popa
imul
mov
jo
in
out
sbb
add
pop
push
out
cmp
loope
push
iret
sbb
sbb
stc
mov
xchg
and
inc
sub
je
shlb
and
cmp
sbb
adc
adcb
lods
adc
or
sbb
adc
idivl
stc
aas
lahf
sub
and
rcll
in
leave
sbb
shlb
pop
mov
dec
sbb
pop
mov
dec
sbb
mov
repnz
sbb
sub
add
in
adc
dec
push
loop
cltd
mov
lret
scas
pusha
call
cmp
nop
nop
mov
sub
pushf
cmpl
mov
sub
jecxz
cmp
inc
cltd
mov
shrb
add
add
repnz
inc
cli
fmull
sub
mov
rol
repz
xchg
lcall
movsb
mov
push
and
icebp
scas
test
jecxz
loopne
cmc
inc
aad
sbb
aaa
adc
in
stos
add
jb
dec
je
dec
pop
ja
xor
leave
push
dec
mov
sub
les
push
push
in
adc
dec
mulb
pop
sbb
adc
inc
call
inc
cmp
pop
shrb
mov
andl
push
data16
cmp
into
sub
inc
inc
dec
lret
iret
sbb
sub
jno
xchg
das
jle
mov
cwtl
lods
adc
xor
push
sbb
fcomps
or
dec
add
js
sub
into
or
mov
xor
jbe
add
cli
ja
lcall
pop
or
lea
stos
sub
push
pop
inc
pusha
fisubs
fists
outsb
xchg
out
inc
bound
dec
lcall
bnd
lret
in
mov
aaa
test
sub
cmpsl
and
xchg
in
es
xchg
lcall
loopne
add
hlt
push
popa
seta
mov
inc
mov
movsl
dec
and
fwait
push
sbb
inc
mov
pop
cmpl
and
inc
int3
dec
ret
cmp
add
nop
xchg
pop
movsl
fwait
dec
and
loop
filds
stos
pop
adc
loop
pusha
jecxz
and
cli
aaa
and
pushl
push
loop
enter
je
mov
xchg
jb
das
movsl
pop
stc
rcrl
adc
hlt
or
mov
mov
push
cltd
cli
or
cmp
shrb
fdivrs
cmc
lahf
cmp
push
shl
mov
push
rclb
leave
stos
pop
sbb
inc
xchg
out
in
or
dec
push
and
insb
xor
add
inc
sub
adc
ss
aad
mov
cmovb
fstps
les
lahf
cmp
sub
popl
cli
jne
mov
loope
mov
pop
aas
ret
and
xlat
sbb
ljmp
js
ret
dec
push
push
sbb
daa
jg
push
adc
loop
lcall
xor
sub
loopne
fistpl
leave
add
lcall
or
ja
mov
sbb
outsl
sahf
xor
push
dec
ss
jl
je
rdtsc
jg
mov
and
push
lds
ret
sbbl
decl
je
inc
test
loope
mov
in
mov
jns
and
xor
inc
sbb
das
and
sbb
call
push
aam
sbb
out
sub
jne
stc
pushf
mov
cmp
loope
inc
inc
rolb
pop
in
ss
shlb
mov
and
mov
pop
mov
mov
adc
pop
test
add
jle
loop
into
sbb
inc
cmp
pushf
rolb
scas
xor
xchg
and
addl
out
mov
ret
jb
add
jp
or
sbb
ja
into
rorb
adc
es
movsl
enter
pushf
sub
mov
shlb
inc
jmp
gs
aas
std
push
mov
mov
and
cmp
add
cmp
add
sub
pop
loop
lods
sbb
lods
xor
sbb
or
and
jne
inc
jp
dec
jo
scas
cmc
ljmp
cld
jle
andl
or
lods
inc
mov
daa
enter
pop
cmpsb
mov
popa
fldenv
pop
inc
pushf
ret
mov
sbb
pop
call
add
jle
arpl
inc
movsl
inc
stc
pop
push
jl
mov
sbb
push
jecxz
scas
rorl
mov
popf
adc
and
add
push
test
sbb
hlt
loop
imul
cmp
sbbl
popa
lds
hlt
jne
test
inc
sbb
lods
ret
or
sbb
dec
sbb
xchg
adc
or
and
or
dec
or
lret
ds
xor
jno
je
clc
scas
fsts
in
ds
jp
insl
inc
das
xchg
scas
add
bound
fsub
addb
scas
das
xchg
mov
or
call
pop
inc
ret
and
test
jecxz
add
nop
into
loope
jge
and
add
and
jo
mov
test
sbbl
adc
pop
cld
mov
mov
inc
push
cwtl
xchg
bound
out
daa
jo
sub
xor
xorb
dec
out
mov
insw
sbb
pop
das
hlt
enter
jg
xchg
cmpsb
push
add
xchg
or
shll
loope
std
sub
fbld
cmp
and
movsb
pop
pop
int3
xchg
dec
into
test
loop
sbb
add
adc
sbb
xchg
imul
stc
sbb
mov
sbb
repnz
pop
xchg
add
cmp
push
pop
add
lahf
xchg
cltd
mov
repz
mov
sbb
loop
jle
aas
mov
add
fsubrp
xchg
dec
sbb
rclb
ret
pop
inc
mov
mov
les
daa
push
jg
das
pusha
or
daa
jg
dec
loop
bound
jecxz
out
and
push
call
or
pop
pop
loope
hlt
bound
daa
stos
and
sbb
xchg
xchg
and
imul
stos
imul
dec
sbb
xchg
push
test
fldl
insb
dec
sbb
mov
jge
inc
and
lcall
dec
push
fdivr
mov
call
es
out
or
add
jl
jns
hlt
or
cmp
stc
xchg
icebp
jge
add
xlat
xchg
and
sar
push
pusha
add
sub
jecxz
es
sbb
push
sbb
loope
orb
push
cld
fildl
mov
add
sub
inc
pop
mov
fsub
ret
arpl
jge
mov
ja
lods
xor
dec
pop
sbb
ss
dec
adc
or
cmp
ret
int
lret
in
cmp
arpl
inc
xor
test
or
inc
mov
or
inc
xchg
lcall
enter
fwait
mov
mov
insl
xchg
testl
data16
enter
addr16
cmpsl
aad
inc
shl
rorl
mov
cmp
push
sub
ja
aam
or
xchg
cwtl
xlat
test
iret
mov
lret
jmp
xchg
fildl
mov
mov
data16
cld
je
xchg
lock
aam
pop
add
mov
int3
dec
cld
testb
into
mov
adc
std
adc
adc
js
sub
or
inc
push
mov
pop
mov
pop
loop
loope
mov
loop
aad
in
idivl
fiaddl
dec
cmp
or
pop
addl
maskmovq
testl
mov
aam
stos
fstpl
es
out
add
jbe
scas
jp
push
cwtl
mov
dec
lods
repnz
or
cmp
jo
jg
xor
push
out
popf
push
movsl
push
stos
pop
mov
test
xchg
inc
repz
dec
mov
clc
sub
jmp
xchg
cmp
ljmp
in
popa
enter
dec
xchg
fyl2x
loopne
orl
dec
cltd
dec
mov
xor
cld
xor
mov
pop
test
dec
ds
push
into
inc
xor
ja
pusha
xchg
lea
sbb
pop
negl
notb
repnz
out
cmp
shlb
cmp
sbb
mov
bound
in
test
dec
inc
cld
loope
jg
cmpsb
xor
and
or
inc
scas
mov
inc
jb
sub
jecxz
and
and
leave
sbb
add
cmp
or
das
sbb
pop
test
xchg
scas
add
jg
push
stos
loope
jle
in
orl
xlat
shr
lcall
mov
cmpsb
lock
mov
xchg
test
push
pusha
std
mov
add
mov
clc
inc
arpl
loop
insl
mov
push
int
mov
mov
fimuls
outsb
inc
loope
jb
mov
xchg
jl
out
into
mov
push
push
inc
daa
pop
jae
mov
das
aas
mov
jo
je
dec
mov
sarb
lods
jle
xchg
lock
bound
dec
push
push
or
cmp
iret
push
movsl
or
in
inc
jle
les
fsubrp
cs
andl
adc
sbb
movsb
sbb
stos
adc
cmp
xorb
cli
call
test
addr16
popa
jne
iret
jp
test
adc
test
popf
push
add
movsl
fwait
or
sbb
lea
sbb
adc
sbbl
std
jp
mov
push
fnsave
cmpsl
fdivs
idivb
iret
sub
aad
popf
and
inc
lcall
popf
pop
pop
bound
mov
dec
cmp
pop
into
and
lea
mov
mov
ficompl
adc
cmp
sbb
inc
xchg
clc
sbb
pop
or
push
subb
jmp
call
push
femms
mov
ret
xchg
add
lret
fstpl
sbb
and
dec
add
and
fwait
inc
repz
or
inc
pop
dec
inc
fsts
imul
jle
pop
sbb
addr16
adc
xchg
arpl
dec
movsl
movsl
pop
div
jl
outsb
inc
and
lds
cmc
xchg
jns
inc
push
sbb
add
xchg
js
or
push
adc
push
or
dec
dec
ret
sbb
or
jl
pop
sub
and
into
cmpsl
sbb
addl
cli
outsl
icebp
adc
lea
dec
cltd
lret
ljmp
jmp
call
stos
insl
xor
lods
repz
pop
repz
cwtl
add
in
mov
ss
test
dec
dec
lret
xchg
xlat
sahf
lea
outsb
or
cmp
dec
and
sbb
push
sbb
stos
pop
mov
ss
sub
inc
ficompl
test
sub
inc
xchg
push
nop
mov
clc
loopne
sbb
ret
scas
sub
shll
add
dec
loopne
sbb
inc
cltd
or
int3
data16
sub
xor
das
jne
es
ss
pop
cmp
mov
add
or
xor
pop
or
push
shll
cmp
dec
into
or
mov
mov
addr16
arpl
xchg
pop
mov
mov
inc
aad
add
bound
aaa
outsb
arpl
push
inc
data16
sub
and
sbbl
sbb
js
hlt
inc
xor
inc
sbb
fldt
add
sbb
ljmp
add
sbb
sub
or
lcall
push
push
push
inc
stos
mov
cmp
lret
adc
sahf
cmp
lcall
outsb
mov
sbb
daa
xor
push
cmp
inc
cs
inc
or
adc
adc
sbb
dec
lds
add
push
fwait
jle
fwait
dec
mov
subl
xor
sbb
add
push
add
repnz
sbb
xor
xor
sub
dec
daa
cmp
jo
push
cmp
mov
sbb
push
sti
setae
add
sbbl
in
xchg
int3
sub
xor
sbb
std
clc
inc
loop
outsb
push
jae
dec
pushf
mov
push
xchg
mov
orb
sbb
push
ljmp
fs
outsl
testb
inc
jmp
arpl
xchg
pop
jle
gs
fs
das
jo
push
sub
and
inc
les
imul
ds
sbb
xor
insl
inc
dec
outsb
jb
jmp
cs
lret
aas
cmp
jp
jo
inc
dec
dec
jnp,pt
add
push
xor
inc
adc
aam
cmp
mov
bound
or
sub
sbb
pop
inc
push
pop
push
repz
cmp
enter
adc
cmp
pop
mov
mov
xor
mov
mov
push
mov
or
or
das
adc
daa
cmp
jbe
mov
aas
outsb
adc
enter
adc
or
cmp
cmpb
inc
mov
fwait
add
sub
dec
faddl
repnz
xchg
pop
cli
fstpl
mov
jmp
add
ss
leave
lcall
stos
into
cmp
push
cwtl
les
and
add
push
inc
xor
sbb
jg
inc
dec
jg
adcl
pushf
or
inc
pop
mov
test
push
cmpsb
mov
xchg
pop
sahf
sarb
lds
in
mov
jmp
mov
cmp
movsb
sbb
repnz
pusha
mov
jne
add
pop
ret
flds
roll
les
out
adc
fidivrl
in
pop
out
adc
shr
cmp
mov
mov
cmp
out
cmpsb
mov
push
call
dec
out
invd
jmp
cwtl
shrb
or
outsl
pop
gs
insb
mull
outsb
jge
dec
xor
pop
lcall
icebp
fisttpl
out
addb
or
lret
cmp
out
jae
jmp
sbb
ret
clc
cmp
loop
mov
adc
mov
adc
sub
aaa
dec
inc
addr16
or
mov
sbb
sbb
sub
lock
test
sbb
lret
mov
or
jo
aaa
mov
dec
mov
iret
mov
pop
pusha
loop
mov
test
mov
sbb
jbe
push
testb
or
sti
das
sbb
pminsw
dec
sbb
rclb
or
adc
fisttps
mov
mov
sbb
or
test
popf
fldl
mov
and
push
cwtl
sub
sub
mov
mov
dec
push
adc
subl
sub
sbb
ret
stos
cmpsl
add
cs
out
or
and
or
xor
xchg
adc
push
cmp
ja
dec
ret
mov
add
xchg
fmulp
add
pop
push
and
leave
dec
je
ret
fwait
jmp
test
sub
jle
popf
decl
pop
dec
data16
sbb
fs
push
popa
paddd
mov
pusha
cmp
push
sub
jae
xchg
in
sbbb
cmpsb
inc
sub
mov
dec
sbb
mov
mov
dec
or
inc
jle
dec
pop
push
add
xor
pop
add
sub
ljmp
ja
ret
fwait
loop
cmp
jo
inc
insb
test
add
jmp
and
bound
sbbl
jb
push
sub
cmp
jno
sbb
add
add
rcll
add
lret
xor
dec
inc
into
cmp
push
and
cmp
add
dec
arpl
bound
sbb
pop
jg
shll
and
dec
sub
insl
jle
imul
ror
mov
mov
add
pop
cmc
xchg
add
or
push
add
jecxz
scas
sbb
cmp
movb
arpl
sub
rep
inc
pop
push
add
inc
pop
jmp
add
adc
xchg
inc
inc
bound
sbb
cmp
cmp
xor
daa
sub
xchg
imul
jle
fists
movsb
in
out
push
in
jmp
inc
xor
and
jle
add
insl
bound
inc
insb
repz
and
xor
sub
inc
jnp
loop
outsb
xchg
aas
sub
js
push
jl
pop
jle
dec
stos
bound
adc
stos
pop
and
aam
push
jb
and
xlat
sbb
xor
xor
out
outsb
jns
xchg
sub
loop
es
xor
mov
cwtl
outsb
aas
adc
or
cmp
cmpsw
out
bound
imul
imul
pop
aas
rolb
orl
sub
jp
inc
insl
adc
cmp
xor
pop
sub
pop
rcl
push
xor
orb
fwait
push
imul
pop
insb
enter
insl
mov
gs
aas
xor
sub
inc
and
enter
es
call
dec
mov
inc
pop
stos
fsincos
stos
push
mov
add
add
pop
fildll
xor
scas
in
sub
roll
popa
xchg
sarb
xor
aam
add
mov
dec
jl
pop
dec
movsl
jg
mov
fwait
jae
jnp
mov
sub
sub
lods
outsb
andl
jle
mov
fcoml
loop
push
push
sahf
adc
adc
sbb
sti
stc
mov
xchg
sub
add
sbb
sbb
jne
sub
mov
jl
push
xchg
mov
and
sbb
and
sbb
pop
popa
subl
adc
and
inc
mov
mov
stc
pop
data16
or
pop
imul
loope
jo
dec
int
stos
pop
jge
dec
sub
insl
push
push
outsl
push
inc
in
xor
pop
sbb
mov
dec
in
mov
dec
pop
cmpsb
inc
mov
add
dec
popa
imul
or
cmpsl
dec
sub
and
dec
fisttpl
push
push
mov
ljmp
movsb
cld
xchg
cmpsb
push
js,pn
ret
or
pop
cmp
jns
jge
mov
sbb
std
jns
mov
jb
movsb
sbb
push
movsl
push
bound
ss
pop
adc
add
and
sbb
faddl
push
mov
dec
cmp
xor
or
sub
pop
dec
les
cs
inc
test
movb
inc
lcall
add
xchg
in
mov
inc
mov
push
cmpsl
sbb
sbb
jbe
test
dec
cmp
loopne
xor
ds
aas
inc
mov
sub
arpl
in
xor
subl
fisubl
loopne
jmp
adc
xor
sbb
lcall
orl
inc
sub
inc
cmp
and
cmp
or
stos
dec
mov
dec
or
push
push
adc
movsb
loop
xor
aaa
pop
inc
icebp
xchg
ja
sbb
aaa
xchg
dec
cmp
mov
cmp
add
xor
setle
es
add
or
and
loop
adc
fisubrs
xchg
bound
mov
fcoml
pop
mov
adcl
xlat
daa
pop
xor
nop
jo
ret
or
orl
ja
jl
dec
stos
inc
add
loop
in
ja
push
mov
outsb
out
mov
add
enter
xor
jg
mov
push
pop
stc
or
fisttpl
xor
add
sbb
outsl
cmp
sub
cmp
fldln2
popa
pop
inc
or
mov
push
push
repnz
jae
imul
push
subb
inc
push
mov
jnp
adc
or
int3
decl
add
dec
fldcw
push
pop
inc
mov
mov
movsl
cwtl
lods
fucomp
jns
insl
sub
ds
movsb
xchg
mov
jne
jge
sub
jg
es
pop
cmp
enter
and
push
dec
fiaddl
jmp
pusha
xchg
repnz
bound
xchg
add
in
sub
popf
push
xorl
push
xchg
push
push
loope
cwtl
lock
lahf
repnz
pushf
jge
das
jg
cmc
pusha
and
ljmp
es
rcrb
add
jnp
or
cli
sub
push
dec
insb
std
shlb
xchg
lcall
mov
scas
mov
aas
cmp
add
jb
or
push
loope
decl
fiaddl
repz
bound
fsubl
and
fcos
scas
stos
pop
push
mov
scas
sub
pusha
daa
add
mov
mov
ja
in
xor
push
push
shl
scas
mov
jnp
test
pop
dec
mov
jp
jnp
push
push
outsl
aad
mov
xor
lret
mov
imul
loope
cmp
adc
pop
roll
dec
sub
mov
int3
roll
pop
push
pop
bound
loopne
pop
or
jbe
stos
inc
pop
mov
test
cltd
movsb
icebp
push
gs
sti
imul
xor
ret
int
repnz
adc
jl
test
fwait
hlt
in
aad
jbe
jecxz
in
dec
or
int
stos
xor
mov
repnz
les
push
pop
mov
sub
stos
into
push
cmp
mov
lods
repnz
inc
jg
push
or
stos
stos
cmc
jge
mov
mov
cmc
sub
xchg
int3
ss
add
into
pusha
or
push
bnd
xchg
or
inc
cwtl
stos
inc
dec
repnz
je
jle
mov
dec
int
xchg
mov
cmp
pop
add
or
lret
inc
in
or
push
mov
bound
pop
leave
push
sbb
jbe
popf
pusha
outsl
or
xchg
and
sbb
push
or
inc
mov
imul
mov
adc
pop
loop
notl
stos
and
jbe
push
inc
mov
call
test
inc
push
lret
mov
scas
jge
ret
push
push
loope
cmp
sub
or
int
loop
rol
dec
ret
aad
sbb
push
int3
aas
lock
sbb
outsb
arpl
mov
pop
mov
mov
std
call
ljmp
vmovsldup
and
outsb
pop
push
fwait
sbb
add
xor
bound
cmpsl
lds
adc
mov
mov
sbb
ret
mov
push
loop
inc
or
test
add
sbb
push
ja
lea
cmp
lock
insb
int
jp
fdivl
sbb
push
inc
aam
shrl
jae
inc
dec
popf
xchg
cmp
out
mov
jp
sar
mov
andl
mov
or
mov
lcall
outsl
jnp
fwait
cmp
outsb
std
sbb
lret
jae
dec
lret
dec
add
mov
inc
popf
mov
hlt
xorl
dec
mov
add
rcrb
cmc
lret
mov
outsb
cs
sbb
xchg
adc
push
push
cmp
push
or
ds
loop
scas
jno
and
xor
xchg
fdivs
imul
adc
je
outsl
cmp
fadd
xchg
lds
add
fs
or
or
mov
int3
pop
pop
inc
jns
jecxz
fldenv
shlb
icebp
pop
jecxz
aas
outsb
add
xor
loop
sbb
push
test
dec
mov
pop
cmc
mov
dec
mov
pop
outsl
cs
cmp
dec
mov
inc
pop
dec
cltd
neg
adc
std
push
movsl
inc
adc
xchg
add
pop
mov
mov
lods
fsubs
mov
test
dec
daa
and
shrl
xchg
fdivrs
in
lret
add
or
fistpll
inc
cmp
adc
f2xm1
jecxz
sti
adcl
push
loope
cmp
call
ret
cld
add
rorl
mov
ret
pop
mov
loope
sarb
sbb
xchg
push
mov
mov
add
jbe
fsubp
iret
inc
mulb
ret
push
fnsave
enter
ss
jg
xor
inc
je
jle
loope
mov
out
repz
and
lcall
mov
xor
dec
push
loop
test
fstpt
sbbb
jp
dec
xor
repz
and
fwait
sub
aam
xchg
jns
cld
adc
push
and
cmpsb
mov
jnp,pn
jecxz
mov
sbb
inc
add
imul
mov
cli
or
enter
pusha
or
std
xlat
enter
outsb
js
bnd
push
bound
push
mov
push
shlb
neg
pop
add
adcl
push
outsl
repnz
mov
into
jbe
sbb
dec
bound
loop
xchg
lock
aam
sub
jl
loope
push
or
js
or
push
sub
pop
sub
push
jge
mov
and
push
push
pop
ja
icebp
pop
cwtl
inc
cmc
sti
jbe
cs
leave
lods
mov
add
mov
xor
ret
test
or
cld
dec
and
or
add
pop
cmp
mov
testb
rcll
lods
jg
and
loope
shlb
jmp
dec
popa
adc
out
xlat
push
adcb
hlt
movsl
daa
push
pop
scas
std
leave
add
jge
ds
fsubl
sbb
rcrl
xor
pop
loop
cmp
outsl
push
rcll
sbb
movlps
add
xor
bound
jo
push
cltd
shr
pop
dec
or
mov
ja
and
pushf
cmp
ds
ss
vmovaps
add
pop
jne
pop
xchg
xor
or
inc
repnz
leave
outsl
sbb
test
loope
dec
cwtl
outsb
sub
inc
pop
sbbl
or
int3
push
push
inc
out
sub
ja
cld
dec
les
cld
push
mov
into
jge
in
enter
test
or
jmp
leave
fwait
popa
es
sbb
test
negb
sub
repz
push
out
test
cmpsl
bound
insb
testl
movsl
enter
mov
cmp
dec
add
in
jb
scas
sbb
pop
sub
fndisi(8087
bndldx
or
cmpsl
sahf
jno
shll
inc
pop
cmp
dec
cmpsl
adc
into
jnp
sub
pop
dec
test
leave
sub
push
mov
inc
dec
shll
sub
jae
inc
push
loope
cmpsl
cmp
push
xchg
dec
ss
pop
sbb
in
mov
mov
out
inc
sub
fcom
rdmsr
test
inc
push
rolb
jb
arpl
sub
test
cltd
dec
dec
dec
sbb
xchg
scas
push
mov
inc
push
js
inc
mov
push
sub
push
add
or
xchg
mov
loop
or
loopne
sub
mov
ja
mov
pushf
cmp
test
pushf
das
push
outsl
adc
push
and
dec
into
mov
je
lods
mov
int
dec
sub
add
dec
ja
add
jmp
movsb
sub
fistpl
inc
xchg
inc
mov
loop
sbb
pop
test
and
cs
xor
adc
pop
je
jle
xchg
add
xor
add
ffreep
jl
outsw
enter
xor
outsb
push
sbb
pop
and
adc
andb
mov
iret
jbe
call
test
jmp
call
popa
lcall
outsl
lods
pop
pop
cmp
pop
bound
mov
ret
lret
loop
or
lock
mov
mov
mulb
add
addr16
add
push
xchg
cmpsb
or
push
insl
outsl
in
mov
pop
rcrl
mov
loop
mov
leave
jle
pusha
inc
js
cmpsl
enter
cli
inc
fldcw
pop
lods
ljmp
cmp
mov
pop
xor
jmp
fbld
xchg
fmull
movsl
push
cmp
sub
jo
pop
int
add
and
lcall
cmp
or
pop
daa
inc
dec
popf
push
jbe
add
jmp
fidivl
pop
push
xchg
push
jns
jp,pn
add
loop
ss
nop
inc
lahf
sbb
imulb
pusha
push
cltd
mov
cmp
push
das
jecxz
dec
mov
scas
sbb
pop
movsb
xor
lret
jbe
add
dec
sbb
scas
sub
test
fbstp
das
inc
mov
fldenv
mov
movaps
fsubr
add
into
popf
xor
lcall
lods
add
scas
add
dec
dec
sbb
or
ret
sub
sbb
int3
ljmp
inc
lds
inc
dec
add
movsl
push
pop
push
push
and
push
push
jecxz
xlat
testb
inc
mulps
jle
dec
push
mov
enter
stos
xor
out
bnd
and
jb
in
mov
dec
int
pop
jg
inc
xor
and
push
cmp
sbb
in
sub
or
inc
push
cmpsb
cs
sbb
sbb
sbb
fcoms
adcl
mov
sub
adc
dec
pop
popf
xlat
lock
out
insb
loopne
sahf
popf
cmp
inc
mov
jno
loopne,pn
jge
dec
aam
cmp
insb
aaa
inc
pop
dec
and
cmp
push
dec
or
mov
testb
push
sub
sub
int
adc
adc
sub
repnz
outsb
adc
negb
sbb
mov
pop
loop
add
cmpl
or
jle
cwtl
xor
adc
cmp
insb
in
out
or
and
dec
nop
cmp
aam
pop
lds
cmp
adc
and
flds
or
dec
mul
pop
sahf
je
ds
sbb
jp
or
jl
insl
add
mov
movsb
popf
fisubl
xchg
and
sub
add
pop
mov
add
sub
mov
sub
cwtl
cmp
test
ss
mov
mov
push
mov
icebp
lock
inc
inc
cmp
popa
cmp
mov
js
cmpsb
xor
jecxz
pop
js
into
and
mov
sbb
lret
test
mov
sbb
loope
test
xchg
push
inc
inc
xchg
add
fcmovb
and
push
ficoml
jo
aam
add
es
xor
lcall
push
jbe
test
into
push
jne
cmp
ljmp
js
test
cmp
repnz
ljmp
ss
xchg
lret
dec
fidivs
and
je
xchg
mov
mov
sub
cld
addl
xchg
inc
mov
ficoms
xor
xchg
and
addl
je
das
fistpll
pop
outsb
push
add
bound
cltd
mov
idiv
ljmp
in
mov
jne
lret
punpckldq
lea
xlat
clc
addr16
add
pop
mov
fnstenv
adc
add
jo
mov
iret
ds
ret
adc
inc
sub
loop
mov
dec
inc
inc
lods
pop
shll
xlat
ret
fdivr
repnz
vcvttps2dq
ja
add
loopne
rolb
nop
mov
loop
push
std
sub
mov
pop
lcall
jnp
stos
mov
xchg
dec
add
hlt
mov
or
jb
ljmp
pusha
mov
and
xchg
push
lods
xchg
add
inc
sbb
inc
fidivrl
inc
in
dec
mov
push
lcall
ss
sub
and
mov
ss
jmp
cmpsl
fimuls
dec
jae
fcompl
dec
cld
adc
mov
ja
dec
arpl
insb
jmp
call
mov
xor
push
repnz
sub
xchg
fucomi
adc
lds
lret
add
or
dec
cld
data16
loope
loop
adc
add
clc
or
mov
or
or
sub
jp
cli
adc
sbb
sub
inc
mov
int
add
in
mov
aas
jecxz
push
movsl
sub
out
mov
jmp
push
insb
imulb
xchg
pop
repnz
cmp
js
and
adc
add
xchg
add
lcall
xor
add
lahf
or
lret
movsb
cmp
arpl
popa
stc
lea
adc
outsb
ret
daa
sarb
in
mov
orl
xor
das
pop
sbb
push
orl
test
into
int3
mov
mov
sbb
shr
dec
mov
lret
in
add
xchg
sbb
sti
outsb
lock
arpl
push
adc
sahf
ljmp
rcrl
add
ficompl
gs
popl
roll
jb
push
push
testl
cmpl
cmpsl
xor
pop
jle
insb
jno
loopne
test
jo
outsb
pop
or
mov
mov
shlb
mov
add
cmpsb
mov
mov
pop
daa
dec
pop
sbb
push
dec
lods
aam
faddl
mov
out
std
fisttpll
push
mov
dec
sbb
sub
xlat
sub
in
iret
xchg
js
cmp
hlt
mov
adc
cmp
aas
or
sbb
pop
inc
daa
push
aas
inc
mov
je
pop
sub
adc
out
out
mov
cs
in
sub
xor
adc
jbe
mov
jg
orb
dec
xor
jbe
das
sbb
xor
push
cmovbe
gs
sahf
data16
mov
in
dec
mov
jp
imul
sbb
mov
or
inc
push
or
inc
cmp
or
or
jg
pusha
ret
xchg
inc
or
jge
mov
pop
push
cmpl
dec
or
test
pop
pop
loop
push
jl
lods
jecxz
inc
jno
and
ret
adc
pop
orb
adc
addl
add
adc
jnp
push
and
clc
sub
shlb
mov
sti
pop
flds
sub
loope
dec
mov
mov
mov
jl
inc
adc
scas
push
int
mov
adcb
add
rcrb
xchg
dec
test
aam
inc
sbb
adcb
sahf
stc
into
push
pop
mov
je
gs
or
xchg
add
std
ja
add
sub
lods
mov
mov
loop
stos
push
cmp
test
xchg
int3
push
push
adc
loopne
or
je
notl
and
pusha
jo
decb
int3
cmpl
roll
je
test
pop
mov
dec
insb
inc
fistpl
sbb
xchg
daa
in
or
into
sbb
jp
mov
scas
movsb
pop
inc
scas
push
ret
pop
repnz
mov
mov
xchg
cld
inc
sub
out
xchg
xor
pop
cmp
cmp
dec
lods
push
das
jle
pop
test
or
cwtl
cwtl
dec
cmp
push
les
pop
outsb
add
psubusb
fsub
push
pop
lcall
fimull
sarb
and
inc
mov
dec
stos
push
ret
sub
in
scas
cmp
and
enter
dec
jmp
out
push
es
xor
add
incb
pushf
ret
lock
ret
xchg
xor
movsl
sbb
jp
xor
push
lods
cmp
push
add
pop
mov
inc
jo
enter
ss
out
fmull
and
dec
test
stos
push
pop
mov
and
add
sbb
mov
xchg
inc
lcall
mov
xchg
pop
addb
cmpsb
mov
sub
mov
sbb
or
mov
jecxz
gs
icebp
xor
stos
repz
dec
jmp
or
outsb
mov
pop
sub
sbb
ja
xchg
cwtl
pop
mov
inc
mov
add
or
pop
mov
or
lahf
inc
mov
cmc
ret
dec
xchg
and
jge
insb
sbbl
dec
xchg
lcall
or
mov
add
jbe
in
adc
cltd
jg
jl
jnp
out
dec
xor
mov
out
mov
out
movsb
and
outsb
add
push
adc
adc
sub
int3
aaa
sbb
test
cmc
inc
je
or
dec
jbe
lock
pop
test
and
or
and
jmp
jge
dec
test
sub
loop
xchg
out
dec
push
in
adc
and
xlat
fdivl
popf
push
xchg
mov
adc
and
daa
cmp
repz
bound
sbb
outsl
popf
sti
push
jle
les
and
sub
inc
push
lret
adc
dec
loope
pop
sbbb
je
mov
mov
xchg
pop
pop
testb
mov
addb
and
jle
inc
in
pextrw
sbb
mov
mov
xchg
mov
and
ja
and
and
in
jle
xchg
cmc
adc
fnstenv
lahf
xlat
or
loope
pop
pop
and
add
jb
inc
mov
test
mov
mov
in
mov
push
jb
mov
mov
inc
fiadds
pop
add
aaa
outsb
and
mov
sbb
mov
inc
add
loop
mov
and
subb
sbbb
push
push
xchg
pop
or
sbb
je
push
repnz
sub
jb
inc
sbb
jnp
lar
jg
sub
ficompl
lahf
push
cmpsb
mov
std
lret
outsb
jmp
in
sbb
out
xchg
cmp
push
and
mov
in
sbb
push
jg
stos
and
call
bnd
in
test
pop
pop
push
mov
sbb
out
scas
imul
pusha
pop
add
imul
movsl
addb
or
scas
scas
inc
test
into
pop
xor
mov
hlt
ds
and
imul
int
push
pop
pop
sub
mov
adc
inc
lods
cltd
lods
xor
ret
addr16
sub
fwait
ret
xchg
sti
repnz
dec
lret
clc
lods
push
stos
inc
mov
stos
push
lods
push
cmp
jbe
lahf
jg
roll
xor
je
clc
pushf
sahf
pop
mov
xor
or
pop
sub
add
testb
gs
or
push
push
xor
add
dec
push
sub
fistpl
cmp
bound
out
pusha
sbb
xchg
add
push
push
in
sub
ret
and
cmpsb
xorb
inc
rorl
lcall
outsb
int
pop
stos
xchg
addr16
adc
sub
push
addl
das
shrb
pop
and
cli
add
and
mov
mov
mov
pusha
adc
int3
addr16
lock
js
sub
sbb
cs
push
loope
add
dec
mov
and
sub
stos
jnp
pop
repz
rolb
jg
add
cmp
sbb
into
gs
add
pushf
mov
cmpsl
and
xorb
jg
pop
lret
loope
mov
mov
outsb
or
aas
insb
xor
pop
inc
mov
popa
push
push
add
inc
jg
push
push
mov
mov
dec
sbb
jl
cmpsb
mov
pop
jg
in
inc
mov
sbb
push
sbb
cmpsl
mov
push
mov
inc
dec
out
fdiv
ret
xchg
sub
dec
pop
mov
inc
into
jb
pop
mov
fstl
sub
cmp
sbb
pop
movsb
fidivl
nop
fimull
adc
ja
jle
mov
inc
cmpsb
jl
mov
pop
sbb
test
cmp
push
clc
add
into
and
sbb
push
js
sub
dec
sbb
icebp
sub
sub
cmp
cld
jae
dec
sbb
lock
dec
stos
cmp
pop
xor
inc
pop
lret
loope
dec
daa
cwtl
adc
mov
dec
in
pop
pushf
pop
dec
push
int3
pop
sbb
pop
out
out
daa
sbb
inc
jp
outsl
inc
adc
or
ret
scas
dec
xor
cmp
add
loop
mov
and
push
sub
test
pop
xor
or
sarl
fadd
lods
fisubrl
and
sbb
mov
or
jge
mov
pop
jle
push
xor
jg
or
fdivs
jp
sahf
adc
mov
insb
jne
lret
clc
sbb
mov
out
inc
scas
cmp
cmpsb
mov
push
into
dec
mov
pusha
adc
or
xchg
sub
nop
sub
mov
int
mov
mov
outsb
je
js
xchg
lret
pop
popf
stos
mov
push
xchg
inc
sti
jmp
cltd
push
mov
icebp
push
push
leave
mov
cmc
xor
sbb
mov
cmp
push
xor
mov
sbb
jmp
xor
or
push
movsl
popf
cld
xor
gs
and
lcall
sarb
add
fwait
insb
adc
and
mov
and
inc
xchg
cmp
mov
fdivrp
adc
ficoms
and
imul
sbb
sbb
add
ret
sbb
sub
insl
ljmp
out
push
loop
leave
movsb
popa
or
fstl
mov
push
repnz
movsb
sbb
addl
test
push
subb
mov
test
or
jle
xor
push
mov
lds
imul
orl
jle
iret
jns
push
or
fstp
dec
lods
push
loope
pop
push
insl
sbb
jl
mov
cli
jle
sub
sub
out
inc
arpl
lcall
div
dec
bound
add
in
sub
dec
cmc
lock
movsb
add
shl
dec
rorl
cwtl
fsubl
aad
pop
bound
inc
subb
dec
mov
dec
testb
mov
add
inc
sub
or
jp
rorl
dec
xchg
sbb
int3
cmp
cmpsb
cvtpi2ps
and
sub
push
xchg
mov
xchg
dec
subb
mov
xchg
dec
xor
loop
mov
or
add
pop
cmp
icebp
and
negb
pop
movaps
push
faddl
cli
rcll
icebp
stc
mov
ljmp
aaa
adc
inc
stos
shl
xchg
push
xor
movsl
ds
fwait
inc
je
sub
jl
ret
push
je
dec
arpl
sbb
adc
dec
push
aas
movsl
mov
add
xchg
mov
cld
jecxz
inc
lock
jg
int
add
cltd
divb
fsincos
jb
mov
mov
movsb
mov
jecxz
decl
push
xchg
inc
cmc
ret
jmp
sbb
fadds
mov
leave
xchg
aas
sbb
inc
mov
pop
fwait
subb
push
out
push
cmp
xchg
dec
push
js
daa
inc
push
cmc
xor
or
push
enter
fbstp
cwtl
jnp
scas
cmc
jecxz
les
aam
js
mov
es
pop
mov
xchg
insb
inc
call
out
test
jo
mov
adc
and
loop
shl
shlb
daa
fcmove
jecxz
cmovbe
jbe
mov
mov
cli
sbb
add
sahf
xchg
ljmp
scas
sbb
lds
jmp
out
push
testb
mov
mov
icebp
jle
mov
outsl
cli
ret
bound
test
inc
xor
sub
lea
cmpsl
testb
loopne
rcrl
sbb
inc
pop
adc
xor
push
add
negl
pop
push
sbb
push
fcomps
push
pop
or
sub
lahf
ljmp
xorb
les
out
jge,pn
mov
fldt
leave
cmpsl
inc
xchg
cli
push
push
mov
dec
inc
add
loope
jns
movsb
scas
xchg
push
cltd
outsb
imul
push
fcompl
add
bswap
loope
inc
xchg
xchg
negb
icebp
sti
lret
push
pop
movsl
sti
mov
int
ljmp
ja
push
and
xor
add
outsb
cwtl
or
clc
ja
scas
xchg
mov
fstl
cmp
mov
in
mov
cld
movsbl
rorl
cmc
inc
jg
enter
push
data16
mov
jne
jno
jl
jp
cs
lret
push
push
jmp
and
dec
fsubl
add
inc
subb
out
stos
cmp
int3
adc
jecxz
jl
pop
shl
popf
stos
mov
mov
jmp
enter
adc
ds
mov
sub
int3
dec
pop
push
xchg
notb
mov
jl
dec
cmp
add
shrl
mov
out
imul
xchg
addb
push
add
adc
rcr
aad
jb
movd
pop
leave
out
or
xchg
adc
xchg
ss
pop
call
clc
les
dec
jmp
cmp
loope
repz
sbb
dec
int3
cmp
adc
cmp
inc
ss
and
push
das
inc
cltd
cld
dec
inc
cs
jbe
jb
adc
mov
sub
js
pushf
pop
or
cmp
push
pop
push
loopne
sahf
popf
les
add
movsl
adc
imul
jae
jl
push
or
call
pop
xchg
jge
std
xchg
fistpl
inc
lahf
and
xorb
int
mov
pop
lcall
in
pop
mov
es
inc
xor
ret
adc
js
pop
popf
cmpsl
jae
add
adc
sbbb
add
popf
out
push
nop
pop
lds
pop
jb
test
fsubrl
sub
sbb
call
dec
mov
sub
rolb
inc
adc
cmpsb
enter
xchg
sbb
ja
or
adc
cmc
jl
insb
sbb
loope
mov
sub
and
and
pop
loop
jle
inc
fidivl
das
or
mov
orb
pushf
pop
mov
mov
in
out
mov
iret
cmp
mov
pop
sti
mov
xor
xor
pop
pop
icebp
inc
loop
repz
xor
or
xchg
and
cmp
inc
fimuls
loop
rcll
sub
add
mov
mov
pop
mov
adc
adc
pop
sahf
push
out
push
rcr
push
iret
mov
mov
leave
jbe
das
jg
xchg
imul
adc
xchg
and
lret
je
add
fwait
mov
jns
push
leave
pop
pcmpeqd
push
ret
push
and
jo
and
rcll
pusha
ss
pop
dec
pop
sub
test
fwait
mov
xchg
lahf
fs
push
ficoml
xor
mov
push
aad
mov
push
daa
add
stos
push
adc
add
outsl
mov
mov
dec
push
mov
stos
test
or
repz
hlt
lds
add
mul
into
fsubr
mov
pop
or
sbb
pop
adc
sub
xchg
xchg
loop
mov
andl
jp
mov
dec
and
and
jmp
inc
mov
jnp
push
push
and
push
into
mov
jle
mov
mov
mov
in
sbbb
push
popa
sub
je
or
push
adc
push
sbb
pop
mov
in
push
adc
pop
out
addr16
mov
dec
test
loopne
test
lods
add
dec
aaa
cmp
enter
mov
in
inc
enter
jp
sub
mov
out
mov
add
loop
jecxz
repz
test
loop
out
cmp
inc
push
sbb
sub
xchg
dec
lcall
push
push
xchg
dec
mov
add
fdivl
in
inc
jecxz
inc
adc
testb
movsb
and
subb
xchg
imul
into
add
pop
cli
stc
xchg
dec
repz
add
mov
stos
lods
in
icebp
xchg
je
nop
ljmp
xchg
mov
inc
mov
pop
mov
loop
mov
out
loopne
dec
outsb
mov
in
xchg
xchg
sbbb
mov
mov
imul
inc
jle
mov
sub
mov
inc
das
push
ja
sub
mov
push
jbe
jge
es
insb
int
cmovs
mov
jl
gs
mov
fmulp
test
es
push
lcall
inc
cmp
outsb
jp
shrb
or
push
data16
fdivl
pop
inc
shr
pop
xor
inc
loopne
push
or
jno
xor
pop
xor
cld
lret
push
mov
les
lock
lret
and
mov
xchg
adcb
dec
and
adc
sbb
or
push
cmp
add
hlt
xchg
int
xlat
sub
stc
scas
cmp
cli
push
std
mov
or
inc
icebp
dec
imul
fistps
and
pushf
jo
xchg
js
sub
sahf
not
push
mov
adc
pop
xor
fwait
add
lcall
lcall
sub
aas
pop
dec
xorb
scas
cmp
mov
mov
mov
and
push
mov
or
jns
loop
popa
loop
jge
dec
lock
push
xor
test
adc
movsl
mov
sub
pop
jmp
mov
jno
mov
inc
movsl
pushf
and
faddl
jecxz
xchg
and
dec
jno
and
cltd
mov
pop
lret
addl
idivb
pop
sti
jae
pop
jmp
lcall
sti
cmc
scas
mov
sahf
inc
jb
push
daa
or
je
xchg
adc
inc
mov
inc
and
loop
std
push
lock
repnz
imul
mov
inc
ja
jbe
cltd
test
add
dec
cmpsl
clc
arpl
mov
inc
mov
dec
push
push
insb
out
or
aam
mov
push
push
mov
or
jecxz
adc
jle
inc
mov
jo
ret
mov
inc
dec
stos
rcr
xchg
dec
jg
adc
inc
into
adcb
ja
pop
test
pushf
nop
ds
pop
inc
xchg
lods
cwtl
mov
mov
loope
ret
xchg
mov
dec
cmpsb
mov
pushf
cmp
hlt
fldcw
insl
inc
push
sarb
pop
push
sbb
sub
lcall
mov
mov
sbb
fstpt
push
cs
cmc
xchg
mov
pop
pusha
cli
andl
inc
cmp
cli
repnz
xchg
scas
sti
imul
dec
inc
push
loope
mov
jno
push
mov
fstpt
mov
std
or
call
ret
mov
rolb
lret
mov
ljmp
inc
jbe
stos
ja
sub
flds
lahf
fiadds
inc
pop
leave
ror
test
sbb
dec
lret
call
icebp
push
or
out
fwait
or
pusha
cmc
push
inc
inc
mov
cltd
cs
lods
inc
xchg
hlt
rcrl
cli
add
or
mov
xchg
out
movsb
cmp
cmp
pop
or
cmp
ja
adc
shll
dec
add
hlt
inc
push
bound
inc
and
and
pop
mov
sbb
in
inc
addr16
test
dec
push
push
pusha
and
lahf
negb
mov
ret
ds
orb
xchg
sbb
popl
mov
pushl
add
les
inc
mov
pop
push
mov
pop
mov
mov
int
mov
and
pop
push
dec
sub
mov
fwait
lret
jecxz
mov
inc
and
sub
add
jge
add
or
lret
fists
movsb
jo
in
mov
lea
mov
cli
cmpsl
or
aad
and
ljmp
icebp
pop
sbb
xor
cmpsl
ret
push
mov
sub
xchg
fwait
push
or
sub
call
ret
xchg
sub
dec
jno
pop
leave
sbb
cmp
aaa
ret
outsl
and
pop
outsb
call
in
and
ja
adcl
cmpb
daa
pop
pushf
sub
cmc
dec
cmp
aaa
dec
xor
movsb
icebp
clc
out
aaa
push
loop
pop
int
js
sbb
or
pushf
sbb
push
fwait
movsl
jecxz
and
les
scas
cmp
inc
pushf
pop
add
orb
cmp
outsb
push
shrb
sbb
or
pop
idivb
adc
stos
dec
loop
pop
aam
add
fimuls
xor
jecxz
add
bound
jns
fcoms
push
es
mov
aaa
inc
sub
inc
lcall
call
jp
js
fwait
inc
cmpsb
dec
add
pop
mov
test
mov
enter
adc
sbb
jp
js
sahf
push
call
inc
sbb
pop
enter
clc
dec
push
inc
sbb
pop
loop
addr16
xchg
sbb
mov
adc
imulb
ss
jg
sbb
adc
cmp
cs
fistpl
out
icebp
mov
adc
shr
inc
cld
inc
outsl
cld
movsb
pop
mov
cmp
xor
ficompl
punpckldq
and
loop
mov
or
fsubrl
sarb
sub
xchg
out
mov
sub
mov
out
sahf
ss
cmp
sub
loop
xor
fs
push
jp
das
or
inc
mov
dec
jl
jmp
scas
ds
rclb
push
mov
pop
xchg
add
jae
iret
inc
leave
mov
inc
ds
mov
cmp
cmp
leave
push
loop
lock
pop
out
fcompl
fstpl
xor
fiadds
popa
jnp
cmpsb
xor
je
mov
sub
push
jno
mov
pop
bound
or
cmp
cmc
pop
sub
add
pop
inc
dec
lea
sbb
out
pop
adc
mov
inc
hlt
lret
loop
pop
sbb
push
mov
push
mov
lods
outsl
xchg
and
orb
xor
ret
mov
and
jg
xchg
loop
inc
mov
jecxz
ds
pop
jecxz
gs
xchg
scas
mov
sbb
scas
xor
adc
and
mov
jp
lahf
in
stc
push
clc
insb
sahf
jp
in
mov
xcrypt-cbc
cmpsl
xchg
mov
gs
out
ljmp
push
es
dec
dec
into
xlat
jae
test
sbb
mov
push
gs
jle
add
sub
dec
jmp
jno
push
cmp
sub
lret
sbb
stos
lock
in
push
push
test
sbb
scas
test
dec
add
xor
jl
inc
addl
sbb
das
lcall
data16
adcl
stos
sbb
inc
adc
inc
inc
inc
in
movsb
lret
push
cs
repnz
arpl
push
fisttps
or
cmp
inc
rcrb
xchg
inc
dec
outsb
sub
jmp
andl
mov
std
pushl
pop
mov
loop
mov
jbe
inc
adc
dec
ret
pop
mov
scas
loop
out
icebp
xchg
xor
dec
ret
fnstenv
inc
mov
cwtl
add
mov
xor
lds
nop
cmp
adc
negl
sbb
cmp
pop
and
and
jb
inc
sbbb
sbb
and
cmpsb
pop
cmp
adc
adc
cmp
mov
sub
fidivrs
leave
push
jecxz
test
iret
jae
ret
out
sbb
mov
push
loope
iret
notl
out
fimuls
sub
xchg
mov
sub
loop
out
lock
pop
adc
scas
push
sub
push
and
cwtl
mov
es
mov
cmp
and
sub
or
cmp
orb
shl
inc
notb
jns
ret
iret
int
sbb
mov
inc
enter
cmp
dec
out
cmc
js
xor
pop
imull
dec
popw
arpl
in
test
lret
jnp,pn
outsb
xchg
pop
ss
mov
push
dec
pop
ds
sub
nop
and
and
inc
das
ficompl
sbb
dec
hlt
scas
frstor
adc
cltd
adc
adc
sbb
push
mov
cmp
pop
dec
and
adc
mov
lcall
add
cmp
dec
and
xchg
jmp
adc
aad
clc
addr16
mov
jns
inc
pop
mov
ret
daa
sub
push
jno
dec
fildl
dec
fidivrl
cmc
dec
cmp
add
push
into
stos
mov
xor
pushf
sub
or
sub
fidivl
push
sbb
pop
ja
sbb
jp
mov
xor
repz
xchg
mov
scas
in
xchg
inc
test
lret
loopne
call
or
adc
sahf
clgi
test
adc
add
repz
mov
into
inc
sbb
xor
adc
mov
pop
cmp
cmp
push
imul
sbb
call
cs
int
ret
test
lea
inc
int
out
push
loopne
mov
mov
mov
shrl
ficoms
add
into
bound
and
add
sub
sbb
pop
loopne
decb
push
bound
repnz
add
in
sub
out
pushf
movsb
test
dec
int3
ret
lcall
push
mov
addb
outsb
pop
jns
in
inc
scas
push
es
and
dec
lods
pop
add
insb
jb
insl
mov
jnp
inc
pop
sbb
insb
clc
aam
mov
cli
ficompl
push
dec
xor
dec
insb
sarb
pop
addr16
stos
push
les
nop
mov
sarb
jnp
push
mov
shll
lret
xorl
sbb
loop
add
adc
sub
push
retw
fwait
fs
cmp
add
sub
sub
push
mov
or
push
jbe
push
pop
in
js
sbb
loop
push
sbb
ret
outsl
adc
inc
add
cli
out
mov
outsb
jbe
fsub
ds
sbb
ljmp
cld
icebp
icebp
xor
inc
jp
je
xchg
int3
xchg
sbb
nop
pop
movaps
mov
cmc
inc
out
out
mov
lock
lock
cmpsb
adc
jne
cmpsb
ja
mov
repz
jae
ja
data16
push
sub
das
je
jle
pmaddwd
rolb
sub
mov
push
ljmp
xor
push
sbb
mov
sbb
add
push
push
sub
mov
mov
mov
out
addr16
xor
jecxz
add
inc
outsb
insl
jg
dec
into
in
ss
sti
addb
jl
cmp
jmp
movsl
sbb
idivb
lock
push
lds
and
mov
xchg
xor
push
sar
xchg
adc
scas
inc
out
push
mov
push
dec
adc
pop
inc
aad
dec
or
dec
push
push
bound
add
ss
sbb
push
lret
sub
or
sbb
loop
imul
xor
sbb
inc
pusha
cwtl
out
add
in
inc
lret
pop
testl
fstps
xor
repnz
pop
mov
pop
adc
inc
pop
ss
dec
pop
call
push
int3
dec
rorb
aad
int3
lea
xchg
add
xor
in
lcall
push
popf
ret
mov
iret
mov
test
or
addr16
leave
adc
in
shll
jg
mov
data16
push
dec
cmp
xchg
inc
push
aas
cmp
popa
xchg
inc
repz
movsl
mov
jmp
cmpsl
mov
sbb
inc
or
jg
jg
mov
mov
sbb
pushf
repz
dec
add
sarl
fstps
loopne
cmpsb
test
insb
push
mov
pop
xchg
inc
jg,pn
mov
and
xor
int
lock
jae
sbb
mov
ret
inc
popf
pop
lahf
arpl
xchg
xchg
push
add
add
mov
icebp
add
jo
insl
pop
lcall
cli
inc
push
mov
sbb
addl
cld
lret
lret
bound
aaa
outsl
and
sbb
mov
sub
inc
jbe
test
cmp
data16
add
mov
loopne
xchg
rolb
addr16
orl
outsl
test
xor
shl
lahf
mov
cwtl
insb
xchg
xchg
fildl
pop
jle
inc
mov
add
sub
mov
jnp
inc
subb
push
fwait
cld
and
pusha
idivl
xor
push
or
jns
xchg
push
add
out
cld
fdivl
mov
jno
stos
sbb
or
sbb
fcoml
adc
push
cmp
ja
sbb
xchg
inc
lret
cmp
pusha
mov
ficompl
fstl
sub
scas
pop
arpl
faddl
pop
lcall
cmp
int
out
test
lahf
popa
pop
mov
movsl
ficompl
or
ret
shlb
mov
adc
loopne
push
dec
mov
xorb
inc
pop
sti
jbe
mov
rorb
movsb
sbb
pop
les
loope
pop
dec
dec
decb
sbb
test
ds
sbb
xchg
adc
mull
push
test
fcoml
xor
int
mov
pop
jns
pop
inc
movsl
sbb
les
enter
clc
jbe
mov
adc
mov
test
outsl
inc
sbb
sbb
cs
cmp
outsl
add
jae
dec
jg
ja
fsubl
mov
mov
ss
cli
sahf
into
mov
push
loope
in
imul
leave
icebp
in
sbb
cmpsl
cwtl
sahf
jbe
xchg
dec
outsb
push
sti
decb
loop
pop
jo
popa
movsb
xor
shl
pop
jb
int
mov
pop
mov
jno
pop
in
jmp
sbb
and
mov
push
loope
fs
adc
lds
icebp
sub
fldl
add
daa
inc
xor
xor
sub
lods
jbe
inc
sbb
xchg
pushf
call
jne
xchg
imul
pop
xor
fdivl
fs
jle
shl
mov
mov
mov
jg
int
sub
inc
cmp
sbbb
test
mov
loope
fs
icebp
push
bound
mov
mov
mov
std
mov
int
dec
or
jle
push
push
pop
dec
mov
daa
ja
icebp
das
outsl
out
push
mov
sbb
test
stos
cmp
xor
fcoml
bound
fldt
sarb
pusha
jp
and
loope
inc
test
cmp
into
ret
std
repz
out
mov
push
xchg
mov
xchg
inc
mov
xchg
xchg
rolb
rcrl
inc
stos
orb
pop
pop
pop
popf
fidivrl
nop
iret
mov
jmp
scas
dec
sub
stc
imul
add
test
fidivs
movsb
jne
add
fstl
push
ficoml
jmp
dec
push
jmp
xchg
add
imul
pop
sub
popf
mov
enter
push
or
xor
das
repnz
sbb
lds
adc
xchg
cs
push
lock
movsl
add
in
mov
pop
sub
pop
xor
and
pop
jmp
push
xchg
push
bound
addr16
cmp
les
popl
inc
fwait
adc
sub
inc
mov
jae
adc
leave
mov
adc
lret
push
pusha
aas
pop
minps
add
and
pop
sub
inc
push
imul
dec
xchg
loopne
jl
inc
inc
je
sbb
jae
mov
ja
enter
jg
and
push
xor
push
rorb
cmpb
pushf
in
gs
nop
jo
loope
fwait
out
mov
add
aad
adc
test
in
dec
repz
jecxz
pusha
iret
mov
outsl
add
lahf
push
dec
add
push
xchg
ss
push
es
inc
and
jnp
vpcmov
aam
imul
adc
cli
sub
add
fmull
mov
jb
popa
lea
dec
jecxz
pop
cmp
push
arpl
jg
mov
mov
lcall
inc
repz
ficomps
inc
pop
and
pop
add
pop
push
xchg
es
daa
add
aad
mov
gs
jb
dec
popa
and
push
xchg
subl
lahf
xor
add
pop
pop
test
mov
and
and
jp
dec
mov
test
add
int
shlb
mov
stos
sbb
dec
add
mov
ds
sub
stos
cmpsb
sarl
scas
xor
mov
mov
sub
push
mov
ret
leave
hlt
cmp
pusha
out
mov
jg
pusha
idivl
or
pop
loop
push
fadds
fidivs
sbb
xor
iret
mov
or
add
xchg
mov
lea
adc
or
mov
cmp
and
push
rorb
add
test
mov
sahf
mov
sub
cwtl
mov
aaa
outsl
aam
ror
mov
bnd
loopne
dec
xor
sub
inc
push
insl
stos
faddl
sub
and
cmp
xor
or
inc
adc
add
or
mov
out
mov
js
test
loope
icebp
and
notb
jnp
add
cs
and
cmc
scas
push
les
insb
iret
lock
jb
sub
xor
lret
mov
adc
arpl
leave
es
roll
cmpsl
push
xchg
leave
test
mov
scas
jnp
mov
sub
testl
sahf
cmpl
or
pop
insb
push
sub
and
loop
dec
nop
ret
push
sarb
mov
lret
dec
lahf
mov
cmpsb
lcall
test
dec
fwait
push
faddl
cmp
out
sub
xor
ja
fwait
push
lds
ds
inc
scas
and
dec
pop
cmp
dec
adc
add
push
mov
adc
rol
adc
call
lods
test
sub
adc
cli
jmp
addb
sub
inc
xor
fidivrs
push
xchg
dec
not
bound
xor
add
cmpsb
jbe
mov
sbb
cmp
ljmp
xchg
and
push
insb
sahf
mull
cltd
pop
aaa
movsb
sub
stc
xor
cwtl
loope
in
pop
into
addb
cld
lock
inc
je
scas
popl
lret
lret
aaa
ss
dec
arpl
cli
add
xor
sbb
xchg
pop
push
sti
ja
je
push
pop
push
add
push
and
cs
cli
xor
fimuls
call
cwtl
clc
outsb
xor
pop
fildll
faddl
bound
lcall
sarl
or
pop
les
mov
out
repnz
int3
mov
int
pop
xor
cmc
in
and
call
into
std
outsb
jae
pop
cmp
lcall
dec
adc
sub
arpl
lret
xchg
or
adc
aad
jp
lahf
mov
jg
mov
push
jmp
xlat
daa
cmp
loop
scas
adc
xor
ja
jne
inc
add
ret
cmpsl
cs
cli
mov
std
jg
push
mov
daa
mov
stos
popa
pop
xchg
or
ljmp
jl
jmp
jg,pt
jg
and
push
repnz
je
outsb
loop
push
pop
inc
jns
jp
add
adc
jecxz
hlt
andb
ret
and
add
push
test
xlat
inc
pop
inc
lcall
or
loop
jns
aaa
mov
outsl
daa
pop
jbe
andb
lods
xor
mov
mov
dec
sbb
pop
jb
mov
sbb
cmp
pop
pop
pop
and
adc
fsincos
incl
dec
pop
mov
sub
dec
sarb
mov
outsb
or
add
sbb
sahf
fwait
movsb
test
jp
mov
int3
icebp
fnstenv
sbb
pop
jmp
daa
repnz
xor
and
shll
xor
nop
sbb
mov
mov
lcall
push
cmpsb
hlt
ret
mov
cmp
add
call
ljmp
mov
outsb
pop
mov
cmp
mov
rclb
mov
scas
sbb
fldcw
push
lret
sub
xor
cwtl
jo
movsl
sbb
les
push
push
push
loope
sbbb
repnz
pop
jmp
loopne
dec
push
pushf
int3
sub
int3
call
icebp
push
mov
and
imul
idivb
add
dec
flds
adc
es
push
pop
lret
push
scas
or
pop
sbbl
gs
pop
add
pop
cmp
pop
pop
fimull
icebp
jle
mov
and
sti
xor
push
and
fadd
or
lods
push
fnstsw
jnp
xchg
inc
sbb
sar
into
sbb
ret
xor
mov
cmp
jbe
jle
data16
call
in
mov
adc
sub
jne
push
sub
pop
orl
push
mov
jb
int3
ret
incb
outsl
adc
xchg
push
mov
enter
fildl
jne
push
loope
xlat
movsl
iret
push
xor
insb
arpl
and
dec
movb
adc
repnz
pop
fldcw
push
push
inc
sub
pop
cmp
int3
scas
cmp
jl
stc
and
add
mov
pusha
mov
sub
inc
movsb
in
xchg
je
inc
pop
xchg
std
insl
scas
inc
and
fldt
rorl
push
xchg
cmpsb
mov
pusha
sbb
subb
and
ds
jl
out
jge
jns
mov
ja
sub
xchg
cwtl
int
and
loope
inc
outsb
dec
mov
das
jge
mov
les
add
cs
mov
sbb
rclb
popf
push
jmp
cld
jl
lcall
xchg
repnz
insb
outsl
mov
hlt
lret
das
mov
mov
sub
xchg
xor
xchg
xor
dec
rcr
pusha
hlt
int
imul
jo
xor
push
mov
add
ljmp
popa
fsubs
sub
mov
ret
push
arpl
test
jmp
dec
dec
insb
xor
xor
jbe
jg
cmc
data16
faddl
xchg
dec
dec
mov
orl
xchg
adc
dec
jp
cmp
push
cs
out
mov
inc
cmp
cltd
or
cwtl
sub
pop
sub
subl
int3
ja
pop
add
sbb
cmc
sub
add
dec
cmp
pop
push
out
mov
fidivrl
inc
sub
mov
mov
sbb
stos
cmp
or
add
shll
adc
lea
inc
adc
sbb
seta
sub
out
mov
scas
mov
adc
enter
out
push
orl
mov
lcall
xchg
adc
inc
push
sub
rolb
fiaddl
xor
sbb
negb
sti
shl
out
sbb
mov
fwait
lret
inc
rclb
add
test
iret
xchg
andb
jp
xor
mov
jmp
inc
add
jl
in
add
adc
cmp
and
shll
icebp
ja
mov
inc
inc
add
add
shrl
rclb
dec
outsb
movsl
cmpb
aas
inc
dec
jbe
bound
dec
pop
sub
das
sti
adc
clc
jg
daa
in
push
icebp
pop
rcrb
popf
sbb
pop
test
loop
adc
test
loope
testl
dec
test
movsb
add
mov
es
xor
add
fildl
insl
xor
fwait
fwait
lds
inc
mov
jns
sbb
addl
pop
sub
movsb
add
ret
loopne
inc
add
inc
inc
dec
push
std
dec
popl
add
incb
jmp
dec
add
xor
cmpsb
lret
test
sub
movsl
mov
lret
xor
testb
dec
clc
pop
xchg
pop
dec
bound
out
in
mov
cld
push
jmp
gs
jmp
sbb
out
rcll
add
xlat
orb
or
punpckhbw
scas
pop
or
scas
pop
add
adc
cmp
jp
adc
push
add
or
loop
ss
scas
or
and
popf
out
sub
cmp
jne
mov
xor
iret
adc
jnp
out
into
and
push
dec
into
fimull
gs
push
popf
gs
ss
aas
int
xor
lock
jno
out
cmpsl
sbb
fiaddl
xchg
dec
and
jl
je
add
xchg
loop
ds
lcall
fdivl
jmp
movsl
push
add
lods
sbb
repnz
sub
popf
in
adc
sub
add
add
jne
sub
outsb
inc
jle
push
into
fistpl
ss
cli
ret
out
pop
js
sbb
sbb
fadds
cli
lods
xor
sub
xor
mov
sbb
hlt
test
jle
pop
inc
add
aas
dec
xor
xor
orb
push
jge
xchg
add
pop
pop
cmp
adc
les
jge
mov
jne
add
data16
sbb
aam
mov
fmull
je
icebp
int3
ficomps
loop
dec
xor
and
gs
ja
lret
aad
sbb
push
loopne
sbb
pop
jle
and
loopne
mov
test
xor
dec
ds
sbb
data16
mov
jo
mov
xlat
fs
sbb
adc
xchg
repnz
outsb
add
sbb
mov
daa
stos
mov
pop
sbb
cmc
subb
sbb
jno
sub
lret
pop
fidivs
pop
add
or
pop
das
js
push
inc
mov
jae
adc
sbb
push
push
out
push
push
subb
leave
js
lret
push
jb
ss
adc
stos
dec
dec
cmp
fdivs
xor
mov
lcall
adc
xor
sub
xchg
ss
inc
imul
mov
lret
push
add
fwait
sbb
xchg
xchg
xchg
movsb
add
ret
sahf
cwtl
pop
jb
subb
dec
pop
xchg
sub
js
sbb
adc
shll
clc
in
mov
and
sbb
mov
icebp
lea
jae
inc
pop
sub
push
test
popf
es
sbb
and
pushaw
sti
orb
inc
fdivl
mov
icebp
imul
sbb
imul
cltd
insb
mov
push
loop
sbb
test
dec
sbbl
popf
fnsave
into
sbb
loop
sub
decl
inc
sbb
push
adc
cmp
xlat
cmpsb
out
sbb
sbb
dec
mov
ret
inc
subb
pusha
daa
out
addl
add
mov
jae
jl
out
fs
test
mov
pop
mov
add
es
xchg
pop
test
mov
dec
add
push
lods
ret
stos
dec
insl
mov
pop
pop
add
movd
jle
mov
cmp
mov
add
in
jmp
push
mov
fwait
leave
flds
subb
mov
dec
jle
mov
ds
inc
sub
ds
sub
mov
ret
add
add
jae
cld
sbb
cwtl
push
jge
insb
or
sub
push
and
mov
push
insl
and
pop
dec
or
sub
mov
jo
push
lret
je
jle
push
push
in
mov
movsl
xchg
ret
mov
lock
stc
sub
ljmp
sbb
push
sub
push
into
lret
cmp
fildl
sbb
fdivrl
pop
stos
xchg
repnz
sbb
push
jne
testb
subl
mov
ds
jbe
dec
adc
inc
adc
addl
mov
xchg
data16
mov
ret
leave
mov
mov
cli
sub
xor
jg
mov
movsl
push
test
xchg
xchg
mov
cwtl
mov
sbb
shll
jo
movl
cmp
push
mov
insl
sub
pop
in
inc
xor
hlt
pop
pop
neg
xchg
push
pop
daa
loop
mov
jb
test
imul
sub
adc
mov
jo
push
andl
rorb
xchg
mov
fmuls
test
pop
test
aaa
mov
test
movsb
add
ret
jbe
sub
lcall
dec
add
push
daa
lock
add
call
or
mov
adc
push
pop
push
add
int3
cmp
pop
stc
pop
subb
dec
sub
ds
mov
mov
or
adc
inc
movsl
out
xchg
or
dec
sub
maxps
xor
in
add
movb
xchg
icebp
repz
mov
pop
cmpsb
enter
pop
dec
into
jno
cltd
xor
popa
cwtl
les
inc
repz
je
rclb
sahf
jnp
ds
dec
pop
adc
push
mov
push
add
cmpsl
das
push
sbb
xlat
movsl
ret
cltd
movsl
add
sahf
xlat
push
arpl
into
mov
sub
sbb
mov
les
loop
fs
adc
sbb
fwait
mov
sub
mov
pop
mov
lods
test
xor
mov
out
cmp
pusha
negl
es
sbb
outsb
mov
cwtl
mov
jecxz
mov
in
cmp
adc
jle
fstps
stc
pop
gs
pushf
mov
push
pushf
xchg
lock
subb
cli
pushf
or
test
mov
sub
xchg
daa
out
jmp
sub
mov
cmp
push
or
add
cmc
mov
sub
dec
xor
jg
lcall
lea
add
popa
andl
mov
sub
jge
xchg
ss
xchg
mov
pop
and
dec
lods
loopne
pop
inc
in
pusha
and
sbb
pop
mov
fs
outsb
pop
cs
and
andl
cli
pop
orb
push
outsb
sub
xor
dec
scas
cmp
mov
sbb
scas
loop
mov
xor
sbb
divb
lcall
lahf
sub
popf
test
ffree
sti
mov
xchg
les
repnz
in
dec
pop
pop
fwait
dec
cmpsb
mov
inc
repnz
cmp
push
jle
cmpsb
mov
add
jmp
sar
das
push
adc
mov
movsl
sbb
repz
mov
das
movsb
cmc
or
or
pop
pop
adcb
and
push
push
insb
sbb
shl
loop
sub
push
iret
rolb
ja
ret
mov
pop
nop
dec
mov
fcomip
add
adc
into
pop
push
pop
pop
pop
push
mov
imul
jle
xor
lahf
insl
nop
or
pop
loop
dec
lahf
int3
popf
jbe
mov
and
les
sbb
jle
cld
lds
popa
imul
mov
orb
aas
pop
ss
pop
aam
popa
mov
and
jg
into
push
pop
pop
mov
sub
sbb
movsb
sub
ja
and
cmp
sti
push
cs
mov
and
dec
cmp
pop
mov
mov
and
orb
pop
lret
cmp
out
das
push
cmp
pusha
clc
pop
out
mov
mov
inc
sub
inc
and
cld
mov
or
xor
cmp
aaa
scas
mov
add
outsb
jnp
pop
mov
fcoml
add
mov
xor
and
dec
aam
xorl
mov
rolb
fistpl
cmp
and
ss
pop
mov
ds
pushf
fmul
mov
sar
add
sti
sahf
ret
daa
inc
mov
aad
mul
xchg
pop
lret
daa
mov
mov
push
sub
sub
popf
jae
dec
xchg
stos
insl
mov
sbb
jle
popf
fcoml
lea
popa
imul
sbb
xor
sbbl
and
fwait
sub
pop
clc
outsb
sub
xchg
lods
lret
mov
jne
mov
inc
insb
sbbl
sbbl
xchg
daa
jnp
pop
xchg
call
and
lahf
cmp
add
stos
iret
out
adc
sub
stc
xor
dec
and
or
sti
pop
lahf
mov
ret
mov
pop
xchg
sub
out
sub
and
fistpl
mov
mov
push
mov
stos
sbb
or
pusha
pop
loop
popa
pop
ret
push
daa
sbb
inc
jg
mov
push
rclb
add
sti
push
hlt
sbb
out
bound
cs
mov
dec
inc
loope
mov
dec
push
loop
inc
push
push
xor
out
sahf
arpl
out
inc
loopne
pop
and
mov
andb
je
pop
xlat
mov
xor
mov
push
repnz
add
mov
iret
mov
mov
adc
ret
sbbb
dec
dec
and
cmp
and
cs
movsl
sbb
sbb
cmpsl
loopne
loopne
out
dec
jo
iret
movsb
call
mov
add
mov
mov
mov
push
jnp
sub
cmp
es
pop
fs
jp
lea
xchg
movsb
pop
xor
and
add
je
cli
cwtl
xchg
addb
insl
add
das
add
shll
fnstsw
jl
add
cmpsl
clc
fistpll
js
dec
sub
orl
popa
xor
push
inc
push
orl
and
inc
push
adc
inc
push
cmp
pop
sbb
or
mov
sbb
cmc
dec
push
adc
loope
xchg
stos
ja
pop
orl
mov
ret
pop
and
xor
mov
sbb
xor
jbe
loope
fistpl
fwait
and
sub
loop
pop
mov
enter
rorb
cmp
mov
daa
pop
or
cmp
jg
and
add
and
imul
lcall
lods
xor
cld
inc
loopne
sub
repnz
mov
adc
pop
lret
pop
mov
sbb
std
xchg
lret
outsb
pusha
push
xor
pop
or
bound
dec
mov
mov
xor
mulb
mov
or
push
push
pop
inc
sahf
or
dec
add
xchg
or
jg
cmc
cmp
or
dec
aaa
in
decb
xor
xor
inc
lahf
adc
sbb
incb
aam
stc
dec
jae
jne
mov
mov
and
and
test
std
notb
lret
test
stos
jle
push
push
ljmp
loop
mov
mov
inc
jno
ss
add
mov
call
dec
push
add
pop
adc
and
xchg
inc
das
or
ficompl
repz
sbb
imul
stos
mov
andb
dec
pushf
mov
gs
test
sbb
pop
stos
roll
into
xchg
sbb
xor
or
enter
rcrl
fwait
xor
inc
sub
jl
popf
std
das
sbbl
xchg
rolb
popf
aas
cmp
xlat
es
pop
es
cs
mov
pop
xorl
into
jb
call
jnp
arpl
sbb
and
add
dec
lret
push
sub
add
pop
xor
test
in
jae
inc
inc
fnstenv
xchg
inc
rcl
cmp
or
push
dec
int3
mov
sub
jne
bswap
add
shll
cmpsl
shll
jno
or
lret
xor
cmc
jl
loop
xor
inc
cld
lock
fsubrs
cwtl
rolb
or
or
aaa
cmc
divl
xchg
loope,pt
lea
popa
sbb
dec
mov
loope
cmc
mov
adc
inc
add
jp
mov
add
sbb
icebp
sbb
xor
loope,pn
add
fwait
pusha
push
ret
out
push
cmpsl
test
add
push
repnz
or
popl
addr16
sbb
xchg
int
imul
add
pop
fcomps
jle
add
clc
cli
ss
xor
dec
in
pop
es
pop
xchg
mov
pop
loop
aas
xorl
data16
mov
lea
push
shrl
push
outsb
ret
sbb
xchg
lods
lret
xchg
cwtl
adcl
push
jecxz
mov
stc
xor
jle
mov
lret
xor
cmp
popa
jecxz
mov
mov
mov
lea
cmp
jmp
outsb
imul
inc
xchg
aad
aam
ja
push
rorb
cmpsb
in
ds
dec
stc
mov
addl
jecxz
fistpl
xor
out
mov
gs
jnp
sub
into
xchg
mov
jns
pop
hlt
cwtl
stc
insb
imul
mov
push
repnz
xchg
loop
sbb
into
fdivs
and
push
xlat
pop
dec
mov
popa
dec
cmp
ss
dec
pushf
cmp
sbb
call
or
aas
loop
mov
mov
xchg
shll
shlb
aaa
mull
fcoms
push
adcl
pop
xor
jmp
test
xor
loope
aas
leave
and
add
mov
lret
dec
jecxz
testl
sbb
sbb
fs
add
out
xchg
push
sub
pop
es
jmp
jmp
sbb
cmpsb
and
push
es
loopne
addr16
lsl
xchg
cmp
ret
aam
mov
loop
fisubrs
mov
jecxz
in
sbb
add
aad
dec
das
xchg
sbb
cli
nop
dec
in
fsubr
lock
sahf
aad
pop
xor
sarl
pop
repnz
pop
push
pop
test
insb
mov
pop
popa
jnp
fwait
push
dec
pop
cmpsb
subl
cmpsl
cmp
xchg
sub
aad
xorl
cmp
dec
mov
mov
repnz
addr16
cmp
ret
xor
rclb
add
data16
sbb
cmpl
fdivrl
andl
push
and
push
sbb
or
xor
mov
pop
push
ret
mov
mov
pop
xchg
dec
ja
push
pop
stos
mov
jo
out
xchg
sbb
sbb
test
repnz
lahf
in
xor
jmp
sub
je
in
pop
jnp
cmp
pop
jno
sbb
aaa
repz
inc
sbb
inc
cs
and
jns
adc
cwtl
push
cmp
mov
sub
shrl
lea
or
mov
sbb
inc
dec
sbb
pop
movl
insb
lret
iret
dec
sbb
inc
xchg
pop
jp
fstps
test
add
mov
cmc
xchg
das
xor
mov
jp
jle
xor
call
adc
cli
cmp
adc
mov
pushf
movsl
sub
std
rol
rolb
push
push
cmp
or
es
and
xor
sbb
ljmp
fcoms
in
push
add
repz
mov
jg
xchg
inc
mov
pop
test
pusha
es
mov
sti
adc
test
inc
push
test
ljmp
fisttpll
fcmove
or
adc
and
push
aad
push
mov
bound
ljmp
mov
sbb
test
rcrb
mov
scas
adc
insb
addr16
pop
pop
out
sahf
mov
movsb
mov
jmp
mov
jo
xlat
daa
inc
fwait
enter
mov
add
sbb
add
mov
js
inc
pop
ds
lds
lea
jae
mov
dec
or
xchg
in
push
or
pop
and
int3
cs
xchg
insb
adcb
sbb
ret
pop
push
popf
cmp
sub
mov
pop
cmp
scas
add
pop
dec
dec
out
aad
dec
push
in
dec
adc
js
pop
push
pop
out
mov
push
push
bound
fwait
pop
mov
sub
cmp
out
push
sbb
add
sti
add
adc
lcall
sub
sbb
stos
ret
inc
daa
fcomps
jb
test
jbe
sbb
pop
pop
sub
sub
into
iret
jbe
inc
pop
push
and
scas
dec
dec
outsb
pop
pop
ss
sub
inc
adc
test
das
jecxz
mov
std
sbb
in
es
inc
pop
push
cmc
pop
xor
jnp
data16
push
sbb
add
xchg
pop
sbb
push
pusha
clc
dec
repz
ss
jbe
adc
ljmp
ja
ds
or
imul
dec
adc
pop
pop
adc
mov
cmc
sub
fistl
push
xor
repnz
push
and
dec
and
pop
cmp
or
dec
mov
pop
xchg
scas
ljmp
xchg
fiaddl
push
sbb
sub
outsb
add
out
add
rcr
and
dec
adc
add
stos
cmp
insb
adc
mov
sub
dec
bound
fisubrs
pop
sbb
rcrb
outsb
jmp
and
aam
loop
enter
fs
sub
or
mov
sub
fs
mov
sub
outsb
sbb
lret
rcl
and
push
dec
scas
pop
jb
mov
inc
adc
pop
dec
jo
mov
imull
or
pop
pop
loop
movsl
jnp
mov
js
roll
inc
out
out
daa
cmp
movsb
pop
popf
push
les
jbe
fwait
repnz
jmp
push
sub
dec
out
push
or
cmp
add
out
sbb
lds
push
aas
bound
insb
xor
and
cmovl
cmp
test
or
shlb
or
push
dec
ficoml
cmp
ret
sub
sub
into
ds
push
dec
sub
sub
lea
sub
pusha
push
mov
mov
push
adc
jecxz
pusha
mov
or
inc
jle
mov
mov
stc
jmp
pop
jb
cmpb
sub
push
jb
subl
pusha
lss
jg
mov
repz
cmovbe
fdivs
jne
jle
and
loop
and
lods
inc
dec
je
push
mov
add
mov
lret
push
daa
hlt
and
push
mov
jle
ret
or
jge
or
cmp
in
cmpsl
inc
pop
enter
pusha
jecxz
stos
addl
sub
xor
dec
cmpsl
xor
pop
addb
dec
insl
cli
push
data16
dec
jle
aaa
cmp
outsb
push
pop
xor
and
push
jecxz
cmp
cmc
dec
mov
and
lret
xor
push
cs
imul
dec
mov
stc
jle
out
push
dec
add
aam
stc
int3
roll
pop
inc
cli
jb
lds
sub
jecxz
sbb
add
js
xchg
sbb
add
fs
sbb
add
jle
imul
jecxz
and
js
jo
cmp
cmp
imul
mov
add
sub
add
add
divb
mov
negl
hlt
or
xchg
cltd
push
mov
hlt
lahf
or
pop
jne
jle
cmp
repnz
lret
xchg
cmp
cmp
mov
das
dec
repnz
and
dec
sub
dec
adc
dec
sbb
mov
pop
push
push
push
jecxz
nop
mov
jle
cmp
add
jg
inc
pop
pop
into
ljmp
dec
jecxz
sahf
ds
and
pop
push
scas
sub
xor
sbb
mov
or
mov
test
out
out
dec
ljmp
mov
loop
add
and
scas
sbb
add
sbb
stos
xchg
dec
jle
or
and
xchg
cmp
sub
fwait
mov
pop
adc
aas
push
jne
add
pop
hlt
daa
jne
dec
mov
aas
inc
sub
jecxz
push
jb
and
cmpsl
pop
cs
and
mov
jns
pusha
xchg
lahf
push
or
jb
dec
pop
sub
pusha
dec
pop
test
sbb
adc
insb
push
or
into
xor
mov
repnz
mull
cmp
sbb
and
adc
sub
das
popf
xor
aas
adcb
movsl
pop
into
jo
pop
sbb
lahf
subb
jb
and
into
inc
es
test
xchg
addb
adc
fwait
xor
cmp
push
add
jle
ss
sbb
test
into
ds
dec
test
inc
cli
test
cmp
add
movsl
into
sub
cwtl
push
dec
push
xor
dec
orb
daa
aas
pushf
aaa
cmpsl
negb
imul
sbb
popf
mov
hlt
rcl
daa
push
mov
pop
push
xchg
inc
test
push
dec
dec
jecxz
movsl
in
mov
push
popf
sbb
shl
push
fisttpl
xchg
aas
xchg
imul
xchg
popf
mov
les
jo
push
xor
sub
cmpsb
aam
dec
jne
aas
test
dec
lcall
ret
cltd
testb
and
mov
mov
lahf
sbb
sub
add
jo
stc
icebp
sbb
sub
pop
sbb
ret
push
xorl
insb
pop
inc
dec
or
inc
add
scas
mov
cmc
cwtl
pop
scas
aaa
add
sbb
cmp
gs
push
add
cmpsb
dec
jbe
scas
pop
push
cld
lods
outsb
inc
scas
ss
and
popa
icebp
xchg
fidivrl
and
icebp
or
push
mov
pusha
nop
pop
lea
shlb
push
cmp
mov
ja
rcr
ja
popf
cwtl
jbe
xor
push
jle
popf
xchg
jne
shll
popf
sbb
lock
inc
or
loop
test
jmp
sbb
dec
inc
mov
jb
cmp
sub
incb
dec
inc
into
cli
pop
push
call
mov
dec
pop
add
movsl
push
fimuls
fwait
push
decb
xor
xor
push
push
inc
push
mov
sbb
orl
pushf
lods
popa
fisubs
pop
bound
sbb
mov
and
jecxz
and
ret
pop
jecxz
jle
xor
or
and
dec
dec
sub
repz
jecxz
sti
mov
jb
pop
jmp
adcl
inc
loope
bound
adc
push
pusha
js
in
push
lock
or
jnp
push
pop
or
dec
jg
imul
mov
mov
xchg
in
xor
pop
cmpsb
xor
xchg
cs
mov
je
sarb
sub
adc
sub
loope
pop
push
cs
push
dec
and
push
adc
sub
sub
sbb
movsl
sbb
inc
ret
ret
sahf
mov
cmc
inc
repnz
mov
pop
mov
repz
idivb
cmp
mov
or
jp
jne
pushf
and
dec
pushf
mov
and
and
adc
pop
xchg
mov
mov
lds
stc
inc
bound
xor
mov
pop
outsb
push
fs
inc
sbbb
jecxz
notl
push
aad
insl
fisttps
imul
lods
repz
jb
scas
sbb
cs
scas
cwtl
mov
xor
add
subl
mov
pop
lahf
imul
sbb
into
stos
or
push
test
cmp
cmp
adc
mov
sub
lock
arpl
inc
mov
dec
popf
or
and
ret
icebp
ret
pop
rolb
test
xorl
cmp
imul
adc
jle
loop
mov
pop
mov
mov
mov
add
outsl
add
mov
or
dec
pop
sbb
dec
es
adc
or
movsb
pop
mov
sub
pop
loop
mov
lock
sub
dec
sbb
push
cmp
cmp
push
and
jge
or
popa
jg
add
imull
sti
imul
sbb
arpl
movsb
fildll
enter
mov
inc
jo
jp
scas
sub
inc
adc
in
enter
jecxz
sahf
pop
sti
lock
inc
aaa
mov
sub
cld
xchg
add
loop
sub
sbb
mov
mov
pop
pop
sbb
mov
andl
movsb
lds
test
jbe
mov
add
xchg
pop
sub
jo
clc
out
push
cmp
cmpsl
icebp
test
lcall
add
dec
sahf
les
iret
loope
es
cmc
push
sub
mov
dec
rcrl
lds
jo
push
and
cld
inc
adc
or
pop
mov
mov
test
insb
and
xchg
inc
jg
push
sub
dec
push
xor
pop
push
repz
loop
mov
dec
ret
pop
sbb
shl
xchg
rcr
push
sar
and
adcl
push
pop
sub
pop
sub
push
or
xchg
mov
xchg
data16
cmp
pop
in
inc
push
xor
jo
rclb
pusha
cmp
jmp
bnd
pusha
loop
mov
into
jbe
dec
sub
loop
jns
scas
aad
inc
mov
stos
push
es
mov
push
xchg
jne
cmpsl
mov
rorb
inc
sbb
test
cmp
push
scas
into
clc
and
insb
pusha
mov
sub
push
pushf
jbe
mov
cmp
outsb
bound
es
leave
outsb
pop
ret
sub
int
and
pop
fidivs
jno
fwait
adc
and
sbb
cltd
sbb
push
cmp
adc
mov
xchg
out
addr16
inc
jp
mov
ljmp
push
pop
cmp
sbb
fmull
movb
mov
push
jl
and
scas
or
lcall
inc
dec
in
xor
call
inc
aas
cmpsl
xorl
insl
dec
ljmp
lds
adc
fcmovbe
bound
xor
inc
sub
call
pop
jg
sub
adc
das
pop
dec
lea
sbb
sarb
loope
loope
dec
mov
decl
xchg
lods
lods
gs
out
inc
arpl
shll
xchg
mov
push
out
adc
xor
popf
adc
ljmp
mov
mov
push
push
fnsave
lretw
and
cld
mov
lcall
das
pop
rcrl
add
out
dec
outsl
lea
add
pop
jle
lahf
insl
adc
push
mov
push
xchg
sub
add
ret
fmul
pop
into
bound
jecxz
push
and
push
bound
sbb
ss
adc
add
pop
and
or
in
pop
adc
fcom
scas
movsl
cmp
lds
flds
jb
cmpsb
add
sub
inc
mov
dec
push
pop
push
push
fdivl
dec
cmp
add
loop
loopne
aaa
cmc
sahf
mov
mov
cmc
sub
sbb
nop
loop
in
pop
lods
adc
sub
sub
sbb
sbb
fs
insl
sar
outsb
pop
xchg
lret
xchg
mov
mov
aaa
icebp
pop
jnp
mov
daa
fwait
pushf
mov
xor
dec
iret
jle
and
jl
dec
push
into
cmp
sbb
andb
xchg
jle
xchg
cltd
pushf
sbb
lea
fidivrs
shl
inc
cmpsl
sbb
inc
pop
daa
test
sbb
test
inc
mov
or
dec
add
pop
fistpl
mov
pop
pusha
push
pop
sbb
add
out
dec
add
or
jmp
sub
push
enter
fnstcw
mov
sbb
dec
popa
into
inc
frstor
cmp
jmp
xchg
xor
aas
sub
or
das
cmp
fistps
sahf
push
pop
mov
aaa
bound
subl
scas
jae
movsb
sbb
push
aam
add
add
sbb
lock
stos
ja
test
add
and
or
pop
inc
adc
enter
int
jecxz
jge
mov
jnp
and
push
mov
mov
addr16
sbb
push
and
pop
add
push
cmpsb
sub
mov
mov
test
and
rorb
insb
aaa
and
sub
cmp
out
leave
xorb
adc
out
add
or
insb
cmc
dec
pop
out
incb
mov
cmpb
sbb
and
pop
loop
add
cld
mov
dec
adcb
lea
mov
and
gs
test
and
testb
push
push
shl
notl
jns
repz
mov
pop
mov
popf
arpl
pushf
inc
mov
in
push
push
inc
jge
sub
insb
jecxz
mov
popf
fiadds
insl
add
adc
mov
cmp
push
mov
insb
pop
push
sbb
cmpsb
dec
fsubs
dec
int3
loop
in
lahf
jl
popl
mov
xlat
sub
ja
push
bound
repnz
sbbl
jmp
imul
sbb
inc
subl
lock
sarb
add
adc
loop
cmc
add
jp
pop
add
mov
insb
ss
arpl
hlt
leave
xchg
xor
xorl
and
popa
rolb
push
jo
xor
mov
jle
inc
mov
lock
mov
pushf
xchg
ret
xchg
inc
inc
fisubrl
mov
pop
hlt
adc
jne
or
loope
jecxz
pop
push
int3
xchg
jbe
jecxz
mov
dec
mov
mov
xor
jle
mov
popa
ja
cmp
jmp
repz
xor
push
shlb
and
or
ret
pop
cmp
push
xor
xchg
push
sub
aad
test
es
jecxz
scas
jbe
add
das
jbe
pusha
sbb
push
cs
sbb
add
xor
xchg
cmp
add
xchg
in
xor
lock
inc
pop
je
push
dec
rcll
ficoms
push
lahf
jl
adc
lock
in
mov
fdiv
or
ja
jecxz
fadd
lret
jl
mov
cwtl
stos
jno
add
add
push
icebp
sub
loopne
outsb
movsl
sbb
lcall
cmp
je
sub
and
xchg
movsl
sbb
andb
mov
or
push
call
inc
sti
aam
loop
inc
hlt
dec
cltd
mov
pusha
sbb
aas
mov
cwtl
mov
xor
mov
sub
lahf
hlt
cltd
cltd
fisttpl
orl
dec
adc
mov
mov
outsb
popf
iret
sbb
add
aad
sbb
mov
sbb
rolb
xchg
jb
mov
sub
sbb
imul
cmp
roll
add
sub
sbb
jg
jmp
shll
or
int
mov
pop
pop
hlt
jl
arpl
data16
bound
add
jns
ret
mov
repz
add
pop
lea
push
mov
gs
pusha
sub
ds
pop
add
inc
into
inc
insl
jb
fwait
inc
addb
sub
iret
or
cmp
sbb
test
faddl
int3
in
jge
xchg
sbb
dec
dec
das
cmpl
aaa
into
pop
mov
add
mov
dec
mov
cwtl
or
sub
jg
mov
nop
push
mov
jmp
xchg
push
pop
pop
xor
and
jnp
xor
xor
popf
pushf
call
dec
mov
xor
pop
shlb
ret
loop
sub
ja
lret
data16
jge
push
jge
sub
dec
or
jge
repnz
mov
fimull
stc
push
or
push
ret
sub
cwtl
lret
jle
imulb
dec
lret
repnz
enter
push
lds
jmp
fwait
sbb
add
mov
rclb
pushf
push
mov
mov
out
ficompl
mov
or
sub
push
dec
ret
fiadds
sub
into
outsb
adc
adc
push
ret
pop
ficompl
and
mov
mov
pusha
push
scas
fs
dec
mov
pop
pop
dec
out
movsb
fcompl
es
jecxz
cmpsb
sub
cld
mov
dec
lods
subb
ds
hlt
sub
xor
jg
roll
xorl
push
push
jnp
sbb
sti
and
jnp
pop
jle
mov
add
ss
xchg
das
dec
dec
dec
pop
inc
mov
lret
dec
cli
add
call
pop
push
sbb
and
mov
adc
into
stos
and
popf
pop
jge
push
adc
mov
pop
inc
jle
push
add
out
dec
sub
mov
sbbb
and
les
adc
sub
mulb
std
jmp
mov
or
adc
push
cmp
sbb
sar
out
cmpsb
and
mov
inc
sub
xor
mov
sbb
cmp
adc
lods
addl
fcompl
aas
jg
jp
aad
pop
jmp
sbb
push
push
jecxz
out
add
dec
scas
jb
dec
mov
xor
sbb
subb
and
mov
adc
add
mov
inc
push
xchg
push
jo
rolb
sub
addl
push
push
pop
movsb
insb
int3
cs
inc
inc
and
pop
dec
ljmp
outsb
shlb
mov
ret
fiaddl
sub
sbb
out
and
mov
push
jle
sbb
adc
out
sub
cli
sub
fwait
repnz
sbb
dec
or
ficoms
loop
fwait
movb
lock
add
imul
mov
pop
cmp
gs
out
stos
bound
mov
sub
outsl
mov
jle
cs
mov
enter
dec
hlt
xor
add
sbb
xor
movsl
fcompl
mov
pop
pop
pop
and
and
xchg
cs
je
mov
mov
mull
cmovle
pop
xchg
stos
fwait
adc
sbb
lds
bound
outsl
sbb
and
pop
sbb
mov
pop
hlt
add
push
add
lea
inc
and
add
scas
hlt
sbb
imulb
push
sub
call
dec
out
cmp
jmp
or
pop
sub
ret
fiaddl
jnp
add
dec
sub
fimuls
dec
sub
into
mov
fucomp
push
inc
rcr
cmpsb
dec
mov
lret
popl
mov
out
scas
hlt
add
cwtl
sbb
std
cmpl
jne
in
leave
adc
dec
jbe
incb
scas
jmp
jle
and
or
mov
mov
push
push
push
xor
out
sub
aam
mov
and
hlt
or
je
xchg
or
scas
inc
lea
jecxz
dec
jg
das
loop
ljmp
lock
cs
xchg
mov
divb
dec
dec
add
xchg
arpl
testb
pushf
xchg
xchg
mov
jmp
ljmp
cmpl
mov
sbb
inc
jmp
dec
adc
popa
cli
add
ljmp
call
cmpsl
cmp
and
push
mov
inc
xor
punpcklbw
jge
subl
mov
cmpsb
xor
sahf
hlt
aaa
and
and
and
cmp
and
pop
xor
xchg
sbb
push
mov
or
testl
jg
bound
sub
dec
jecxz
pop
mov
jle
movsl
call
add
xor
sbb
xor
inc
and
in
lds
fwait
nop
clc
dec
adc
scas
sub
out
imul
je
cmpsl
jle
in
adc
jmp
jge
xchg
cmpl
jp
fbld
jle
aas
push
icebp
nop
xor
mov
sti
xchg
jle
push
xor
jg
in
xlat
and
daa
loop
jne
push
cli
mov
mov
pop
mov
cmpsl
loope
iret
cmpsb
test
push
xchg
loopne
dec
or
insl
add
jo
sbb
loop
mov
xlat
fimull
mov
sub
divb
jp
lcall
ret
push
jl
lret
or
sub
fldt
add
sbb
xchg
addb
mov
dec
push
aad
cltd
mov
cmp
dec
pop
loop
push
sbb
popf
dec
pop
and
call
push
xchg
jmp
inc
popa
out
xchg
push
cwtl
out
pop
popa
imul
popa
stc
sbb
int
and
push
inc
sbb
loope
stos
cld
sbb
push
icebp
sub
mov
jmp
icebp
lock
xchg
and
fucom
adc
sbb
inc
dec
mov
sbb
sbb
in
sub
dec
xchg
dec
and
addb
push
push
adc
aam
add
scas
sbb
push
add
mov
iret
repz
push
xor
xchg
mov
lret
into
test
call
ret
add
inc
mov
xchg
dec
push
sbb
addl
push
popa
lea
mov
xor
das
into
push
jg
inc
out
xchg
and
jle
aaa
dec
push
test
xor
push
in
cmp
je
fmul
aaa
and
cli
mov
push
or
test
mov
ficompl
sbb
cmc
pop
loope
cmp
push
hlt
into
loop
sub
xor
add
cmp
mov
sbb
sub
push
pop
out
adcb
ljmp
sahf
insl
out
lods
pop
cs
cs
push
decl
ret
cli
testb
dec
cld
add
mov
inc
out
das
popa
ja
adc
mov
mov
daa
dec
push
lret
cli
bound
movsb
shll
add
cmpsb
in
stc
ficoml
xchg
inc
lock
sub
negb
sbb
mov
jge
inc
push
adcb
or
das
repnz
lock
dec
push
sbb
push
cwtl
repnz
push
inc
adc
dec
pop
push
push
sti
outsl
jp
sbb
pop
jle
adc
inc
inc
dec
push
sbb
popf
cmpsb
pop
xchg
adc
into
and
dec
push
mov
sub
fiadds
pop
into
push
and
mov
sbb
mov
and
dec
mov
and
mov
repnz
ljmp
shrb
loop
int3
imul
call
mov
dec
bnd
push
mov
les
lcall
jp
orb
inc
movsl
negb
jmp
fwait
pop
pushf
mov
lcall
imulb
sbb
sbb
loop
in
ret
test
xchg
push
out
xor
imul
sti
shrl
inc
clc
inc
fucomi
fwait
je
xorl
insb
mov
int3
cmp
adc
test
pop
cs
pop
push
adc
sub
fcompp
stos
push
or
mov
sub
jle
mov
sahf
push
mov
into
out
push
sub
dec
shrb
push
inc
fidivl
xor
roll
push
daa
sbb
mov
arpl
sub
or
xchg
stos
dec
xor
ss
pop
call
in
loop,pn
push
sti
popa
jl
ss
mov
push
orl
mov
pushf
dec
pop
jecxz
xor
mov
push
pop
xor
inc
adc
and
add
xchg
es
sbb
push
sbb
and
hlt
ret
mov
lret
cmovb
dec
into
and
jmp
push
icebp
pop
sti
shl
and
mov
cmc
sbb
not
cld
and
add
repz
jbe
mov
mov
push
push
sarb
sub
adc
pop
pop
and
rcrb
dec
push
fcompl
mov
dec
cmp
add
dec
adc
cmp
enter
inc
fwait
andl
cmp
test
out
fnstcw
ja
int
sbb
xor
ljmp
dec
jle
push
je
loope
or
jg
pop
repz
fdivr
adc
xor
sbbl
mov
and
rorb
bound
ss
push
sbb
xchg
sbb
into
loope
mov
scas
filds
loope
jmp
sbb
mov
add
pop
or
push
xor
jne
jb
dec
mov
hlt
push
push
dec
xor
cmp
sbb
addr16
ja
pop
jns
popa
sti
xchg
dec
jecxz
or
sub
in
or
psraw
mov
into
xor
test
out
inc
sub
xchg
add
mov
pop
jb
mov
cvtps2pi
mov
cmpb
push
push
mov
jne
test
push
and
add
data16
int3
jb
add
cli
push
jecxz
sbbb
test
in
test
and
rorl
je
push
add
aas
dec
mov
rorb
jmp
or
arpl
divb
push
and
mov
sub
lret
jle
scas
lcall
mov
pushf
shl
sti
jecxz
div
mov
lret
sub
jecxz
in
push
push
mov
je
inc
inc
pop
out
mov
push
adcb
aas
fimuls
mov
ret
fbld
dec
and
notb
out
enter
imul
test
xchg
das
add
cli
sbb
cmp
inc
bound
lea
pop
dec
mov
jbe
lea
sub
sbb
pop
push
inc
into
add
pop
imul
dec
pop
inc
push
dec
push
sub
pop
adc
cmp
xchg
sub
fisttpl
ds
pop
popl
loop
stos
test
pusha
sub
fwait
jl
pusha
lcall
xor
push
push
sub
pop
pop
mov
mov
frstor
mov
or
das
push
loop
popa
jne
addr16
cmp
mov
inc
mov
data16
add
testb
into
std
fwait
leave
arpl
jbe
and
arpl
paddq
add
or
mov
mulb
mov
cmp
xor
xor
out
pop
loop
pop
dec
pop
cmp
fdiv
rcll
scas
shrb
pop
sti
je
test
mov
mov
push
pop
jns
sbb
mov
push
mov
arpl
sti
xor
push
cwtl
mov
pushf
outsl
das
push
mov
and
add
add
ret
jmp
sub
imul
jg
jg
cmp
loope
orl
fdivr
movl
jmp
and
orl
cmp
loope
out
push
xchg
mov
mov
mov
ret
pop
push
mov
aaa
inc
mov
sbb
lret
push
push
dec
sub
sub
ja
add
loop
push
das
jo
jnp
loopne
scas
push
push
add
mov
scas
xchg
sti
pop
and
dec
mov
dec
pop
daa
xchg
mov
pop
push
pop
inc
xorb
ljmp
fidivl
xor
test
xchg
negl
insb
adc
push
push
sarb
outsb
lret
adc
std
pop
push
cmp
daa
ficomps
sbb
xor
add
iret
popa
cmp
loopne
mov
popf
insb
xor
enter
mov
dec
sbb
aas
in
lret
pop
loope
gs
mov
loop
pop
mov
cmp
test
int3
cmpsb
data16
fsubrs
jmp
adc
mov
pop
mov
add
loop
jmp
and
stos
nop
dec
mov
clc
push
adc
add
lret
je
inc
pusha
adcl
int3
pushf
lahf
and
fadds
add
jbe
dec
xchg
sub
pop
mov
and
mov
lret
pop
sbb
fdivrl
xchg
dec
pop
or
add
and
mov
sub
cmpb
mov
inc
xlat
es
mov
pop
jecxz
adc
pop
sub
pusha
mov
fistpl
pushf
cmpsb
lds
mov
pop
fldenv
or
call
inc
pop
nop
nop
inc
mov
dec
lret
mov
inc
leave
loop
inc
imul
jecxz
mov
ret
mov
xor
out
adcl
hlt
xor
bnd
pop
xchg
pextrw
jle
sub
jno
outsl
sub
loop
xchg
mov
sbb
fldl
mov
nop
pop
loope
flds
push
xor
loope
fsubrl
imul
xor
rorl
fdivp
or
dec
or
or
cli
cmpsb
sub
ret
dec
mov
jge
add
int3
fisttpl
sbb
sub
loop
icebp
mov
cmpsl
xchg
scas
fs
fsubrs
push
cli
or
pop
push
push
loop
or
out
lahf
shlb
add
mov
popl
shrb
cs
aas
jmp
pop
hlt
inc
outsl
pop
lods
and
sub
pop
movsl
cmp
out
jae
jmp
dec
xor
pop
lock
lock
movsb
sti
ljmp
iret
imul
stos
test
psadbw
fwait
call
popf
scas
icebp
and
stos
xor
sub
out
loop
adc
lahf
push
push
lcall
inc
stos
adc
cld
popl
movsl
test
pop
fstl
push
cmp
push
daa
push
jb
frstor
jecxz
push
and
iret
dec
pop
and
dec
jmp
pop
out
cli
sub
imul
cltd
push
mov
pop
and
test
fwait
pop
out
sub
jecxz
cmp
negl
adc
cltd
push
mov
adc
push
dec
jle
cmp
mull
sbb
out
sub
sbb
push
add
ss
inc
sbb
addr16
ljmp
adc
xorb
ret
cmp
je
test
lcall
mov
push
pop
sub
add
aaa
push
mov
push
pop
mov
xchg
jecxz
icebp
je
incb
loopne
pop
push
jae
sbb
mov
jp
or
dec
rcr
loope
mov
orb
fisubrs
insb
ljmp
xchg
scas
hlt
and
cmp
jo
mov
inc
repnz
or
jb
mov
inc
push
mov
mov
mov
mov
jne
pushf
dec
fs
cmp
pop
xchg
pusha
dec
cld
andl
cmpb
cli
icebp
ret
mov
dec
int
add
xor
out
cmc
dec
sub
das
sbb
push
pusha
jne
out
lahf
nop
xorb
scas
std
inc
push
inc
dec
mov
mov
fmull
dec
repz
clc
dec
pop
sub
int
jno
cmpsl
inc
lcall
loopne
adc
add
popa
push
bnd
gs
push
sub
popf
push
sbb
cld
mov
inc
push
dec
push
popa
mov
inc
dec
push
lcall
adc
or
outsl
loopne
mov
xor
stc
gs
fldcw
jmp
push
and
xchg
sbb
test
repnz
imul
cmp
mov
cmpsl
scas
shlb
jp
mov
loopne
cld
sbb
cli
pop
into
imul
lahf
dec
inc
push
mov
into
and
mov
add
loop
inc
mov
out
push
mov
stos
clc
rclb
pop
xor
iret
loope
and
movl
cld
inc
fstl
inc
ret
fsubrs
mov
pop
push
mov
sub
push
int3
sti
dec
jg
jo
ret
daa
sbb
xchg
aas
and
fcmovnbe
cmpsl
cs
cmova
jmp
inc
sbb
sti
popa
out
dec
dec
fists
inc
aaa
pop
pop
js
mov
pop
cmp
mov
mov
push
pop
push
mov
das
hlt
leave
pop
and
fwait
sub
pushf
cs
mov
xor
dec
pop
xor
cwtl
dec
lods
sub
scas
push
hlt
and
cmp
or
push
cli
sbb
outsb
mov
pop
lds
add
xor
and
jg
adcl
sbb
or
mov
pop
cli
fnstenv
sbb
je
mov
not
mov
xor
dec
and
je
cmc
dec
rcrb
ja
hlt
dec
fyl2xp1
hlt
enter
hlt
add
push
add
adc
lcall
loope
xor
outsb
pop
outsb
push
jg
jns
jne
jmp
icebp
aam
adcb
out
inc
test
pop
lcall
or
push
test
dec
xor
sar
addr16
jle
add
js
das
xor
xor
add
mov
mov
pop
or
stos
ds
das
leave
sti
icebp
sldt
ljmp
arpl
out
jg
movsb
das
dec
cmp
filds
pop
adc
jbe
jmp
sbbl
pop
andl
test
pushf
fsubrl
jmp
dec
push
test
sbb
fidivrs
or
mov
mov
sbb
sbb
adc
rcll
and
fldl
movsb
mov
in
insl
push
movd
cs
sub
add
jle
mov
lea
push
dec
push
decb
mov
sub
cli
sub
sbb
push
imul
popf
jmp
xor
or
hlt
fisubs
inc
movsb
jle
sub
outsb
push
inc
cli
out
out
add
inc
pop
mov
roll
sbb
push
dec
fisubrs
data16
adc
sbb
hlt
jle
add
pop
pop
ficompl
scas
sbb
xlat
adc
jle
int
mov
sub
scas
inc
mov
js
sbb
ror
mov
imull
xchg
sub
cmp
mov
cmp
xchg
add
fidivrl
sahf
lahf
adc
loop
xchg
push
dec
mov
xchg
mov
adc
mov
and
xchg
xchg
sbb
cmp
pop
loop
inc
fildl
pop
sahf
loope
sub
loop
fistpll
ret
or
pop
out
and
incb
jnp
add
pusha
push
test
shr
sbb
and
outsl
das
stos
xchg
js
and
push
lods
dec
inc
sub
and
pop
adc
js
sbb
pop
xchg
or
dec
fcmovne
inc
cmc
jbe
cmc
push
cmp
pop
sub
out
or
dec
push
xor
cmc
imul
sbb
pop
push
mov
inc
sbb
sbb
andb
pop
sbbb
mov
cs
insl
mov
bound
mov
and
divb
pop
mov
mov
clc
push
adc
mov
inc
sbb
shll
mov
jne
andl
push
leave
push
dec
rorb
es
inc
rorl
inc
test
rolb
adc
add
ret
pop
push
pop
andl
mov
push
sbb
mov
loop
cmp
mul
or
popf
push
jae,pt
xchg
aaa
ds
push
lahf
pusha
add
pop
fisubl
les
cmp
sbb
xorb
scas
jecxz
xchg
pop
lock
or
into
cmp
cmc
int
nop
into
jb
loop
dec
cmp
xor
fcompl
sbb
xchg
jmp
push
cli
les
dec
cli
cld
ds
cli
sti
and
into
fidivl
xchg
sub
ret
cli
mov
clc
pusha
mov
xchg
in
sub
lahf
ret
mov
sti
pop
pop
pop
jnp
data16
fisubrs
sub
ss
fimull
or
mov
push
cltd
sbb
mov
jl
push
inc
shlb
or
add
add
sbb
roll
mov
mov
mov
jno
lcall
std
loop
loop
daa
das
out
mov
xchg
hlt
dec
pop
bound
insb
gs
mov
bound
adc
inc
loopne
cld
adc
mov
arpl
push
jo
mov
sbb
das
mov
sub
pop
movsl
imul
daa
xchg
les
inc
cmp
aas
or
sbb
jp
dec
int3
in
mov
sub
loop
inc
mov
adc
add
adc
je
jmp
mov
out
arpl
sbb
inc
adc
push
dec
je
jae
iret
jle
lahf
in
in
je
dec
cs
dec
sub
mov
cmc
mov
das
into
and
flds
dec
daa
adc
add
repnz
mov
cltd
add
cmp
cli
out
inc
fcmove
sub
push
mov
push
sahf
inc
call
cmp
ret
cltd
xor
dec
mov
push
ret
popf
dec
loope
push
int3
fadds
out
inc
testb
sub
loope
xchg
push
dec
mov
loope
test
das
outsb
pop
push
outsl
inc
xchg
mov
xchg
loope
push
mov
jmp
cs
push
jbe
inc
test
lret
pop
jne
jle
adc
lods
mov
push
pop
test
scas
repnz
push
push
mov
inc
sarl
insb
popf
dec
cmp
mov
mov
lcall
mov
xchg
pop
jle
rorl
and
jo
pop
mov
pop
mov
inc
mulb
inc
lcall
dec
sbb
pop
or
push
cmpsl
and
lar
inc
push
or
sbb
and
xchg
fucomi
mov
cmp
testb
inc
gs
pop
jecxz
aad
dec
push
mov
sub
lahf
push
and
ljmp
adc
mov
repz
push
cmp
aam
mov
repnz
repnz
add
in
jbe
outsl
lds
mov
or
mov
dec
fidivs
mov
xor
push
push
sub
dec
pop
jb
es
inc
xchg
sbb
mov
push
data16
mov
pop
pusha
cs
push
enter
mov
fwait
out
pop
cwtl
add
adc
sbbb
fcmovb
sub
out
cmp
clc
adc
pushf
stos
arpl
xchg
ret
pop
push
lahf
out
pop
push
xor
cmp
add
and
enter
out
mov
movsb
sbb
xchg
jecxz
adc
ret
push
mov
scas
mov
sbb
mov
xor
mov
mov
sub
mov
js
inc
push
repnz
cmp
lea
sti
mov
xchg
or
stos
sbb
mov
test
out
enter
and
adc
aad
and
pop
ds
imul
orl
orl
pop
sub
and
adc
ljmp
mov
repz
mov
sub
test
dec
push
lret
dec
lahf
in
adc
ja
add
push
jle
arpl
xchg
loope
cld
mov
xchg
in
lahf
out
sub
sub
add
push
bound
and
xor
sub
jae
add
mov
or
shll
add
rcrl
pop
inc
imul
mov
push
addr16
sarb
add
ja
or
jecxz
imul
inc
cmp
insb
mov
jnp
cli
and
jmp
cmp
lock
mov
dec
scas
leave
xor
dec
sub
add
pop
hlt
pop
ja
sbb
int3
cmp
movsl
cmp
lret
stos
sbb
daa
popf
insb
push
push
or
das
push
insl
mov
push
out
into
ja
or
mov
jo
mov
sbb
or
cs
push
sub
inc
jmp
or
cmp
decb
sbb
rorl
mov
mov
dec
in
rol
jecxz
mov
pop
jne
out
cltd
inc
pop
pop
cwtl
aas
std
fs
dec
jecxz
sldt
or
cli
xchg
sub
aam
sti
hlt
inc
push
mov
popa
pop
dec
cmp
sbb
mov
mov
add
sbb
dec
mulb
sub
add
mov
jecxz
xlat
divb
stos
fmuls
std
movsb
push
mov
pop
and
push
dec
add
lret
inc
jmp
popf
pop
jp
adc
and
inc
inc
stc
dec
das
inc
fldenv
inc
add
fwait
fs
bound
in
pop
sahf
xchg
sub
clc
cmp
lea
jnp
nop
mov
inc
fsubrl
and
fucomi
addb
out
addr16
sarl
inc
icebp
xchg
mov
sti
add
jle
sub
aam
or
xor
enter
mov
xchg
xchg
inc
cli
mov
xchg
data16
fwait
out
lahf
jnp
jmp
fimuls
sub
mov
sbb
sub
adc
insl
lock
loop
xchg
push
inc
pop
or
and
and
push
xchg
dec
pop
or
add
sbb
fimull
and
add
imul
or
sbb
pop
lret
lahf
out
imul
cltd
bound
lret
addr16
xchg
dec
push
sbb
jecxz
filds
push
pop
xor
mov
xchg
pop
push
inc
and
cmp
orl
icebp
cmp
dec
and
push
call
sbb
jb
js
sbb
lea
dec
inc
xchg
adc
pop
and
lock
lock
loopne
jo
cmpsl
sbb
repz
mov
test
and
and
inc
loope
mov
or
fists
inc
push
jmp
loope
dec
repz
cmp
out
das
shl
dec
out
sbb
xchg
or
out
lds
or
dec
push
push
testb
xchg
cmpsl
pop
nop
jp
sbb
adcb
orl
sbb
push
pop
loop
mov
jmp
ret
lods
jl
jo
and
mov
pminsw
push
xor
mov
sub
daa
stos
push
aad
jge
in
xor
sbb
enter
lret
xchg
lret
imul
fucomip
xchg
stc
popf
xor
jl
push
mov
ljmp
mov
ljmp
mov
xor
int
mov
xor
add
cmp
sub
in
push
fucom
adc
push
sub
mov
xor
push
inc
xor
mov
jbe
shll
xorl
fildll
hlt
aad
dec
cmp
lahf
pop
outsb
leave
jbe
daa
popa
lret
bound
jp
ja
push
jg,pt
jge
into
pop
push
xchg
adc
xor
xor
shlb
jecxz
push
add
in
push
mov
dec
xchg
inc
scas
xorb
adc
adcb
fstpl
jns
xor
das
addr16
das
push
mov
mov
mov
mov
jp
sbb
fwait
xchg
ficoms
jo
cs
data16
sbb
cmpsb
fimuls
shlb
fmulp
loopne,pt
jnp
cmc
fidivrs
addr16
jp
dec
lds
mov
inc
adcb
or
sbb
adc
dec
xor
shrl
sti
int3
adc
mov
jbe
add
pop
lahf
icebp
xchg
pushf
add
shl
xchg
sti
jbe
sahf
gs
outsb
push
or
out
xchg
cmpsb
mov
idivb
es
fmuls
in
mov
push
mov
cwtl
pop
mov
dec
ffreep
es
add
add
pop
push
sub
insb
lock
inc
push
movsl
sbb
pop
imul
pop
add
fdivl
cmp
pushf
dec
fdivl
jae
adc
or
push
mov
fisubs
and
sbb
mov
stos
and
pusha
hlt
rcll
jecxz
hlt
lods
inc
sub
pop
xor
lret
push
push
dec
mov
and
xor
repnz
mov
sbb
lcall
pop
ret
shlb
xchg
sbb
into
into
push
loope
cmc
add
in
nop
push
testb
or
xchg
inc
clc
sub
inc
repz
rol
and
mov
std
jl
dec
pop
xor
xor
add
jb
or
pop
sub
repz
ret
adcb
pop
inc
inc
mov
jmp
xorl
pop
in
dec
daa
push
in
lods
cmp
xor
xchg
push
jg
lcall
adc
xchg
cmp
push
jl
xor
inc
xor
cmp
sbbb
inc
pop
test
push
sbb
pop
test
fimull
sbb
pop
or
mov
jge
xor
jbe
sub
push
sbb
insl
push
outsl
adc
or
in
adc
ret
ror
pop
add
xor
or
sbbl
or
and
pushf
daa
inc
loopne
icebp
xlat
push
add
push
inc
or
dec
pusha
inc
mov
pop
inc
ja
pop
cmp
sub
xor
sub
cwtl
and
jle
jb
push
loope
cmp
jecxz
cwtl
sbb
test
stos
dec
test
dec
negb
mov
pop
loop
mov
cs
loope
dec
imul
adc
inc
scas
sqrtps
xchg
add
xor
jo
pop
mov
sbb
mov
pop
repnz
in
inc
push
jno
cmp
push
test
loope
mov
jmp
inc
push
sbb
fsubrl
and
pop
les
cmp
mov
loop
add
cmc
xchg
aaa
pop
data16
sbb
outsb
pop
mov
jle
mov
sub
xchg
pop
push
fstpl
pop
or
orl
scas
loope
out
std
fwait
les
pop
jl
pop
adc
xor
jle
push
mov
jb
xor
jg
pop
inc
loop
aam
in
push
popa
push
sarl
xchg
loop
jecxz
cltd
mov
pop
dec
sbb
mov
jae
jne
iret
add
hlt
stos
jg
mov
stos
xorl
push
pop
dec
es
cmp
daa
repnz
jb
out
inc
loop
mov
mov
xlat
pop
hlt
lahf
inc
xlat
popa
xor
into
out
mov
test
jnp
insb
xor
xchg
idivb
inc
stos
fidivrs
and
inc
or
sub
sub
adc
fsub
out
dec
adc
sub
inc
push
xchg
push
sub
dec
inc
jle
adc
insb
sub
cmp
testb
jp
nop
sub
xchg
sbb
fistps
lcall
inc
sub
jl
inc
bound
lcall
jnp
sbb
mov
cld
popf
push
xchg
fdivp
sub
repnz
push
inc
xor
enter
sub
pop
neg
ret
push
loop
hlt
inc
loope
cwtl
add
popl
xchg
inc
jnp
sbb
sub
dec
rcr
aad
mov
jge
jmp
inc
mov
call
xchg
cli
mov
or
lea
ja
xor
scas
arpl
sbb
mov
and
mov
sarb
add
clc
movsb
mov
and
mov
cli
rclb
fisttps
jg
lds
push
dec
fiadds
fisubrl
sbb
pop
cmp
hlt
insl
je
decb
xlat
mov
pop
hlt
mov
pop
movsb
mov
les
flds
fdivrs
xor
jbe
push
cmp
decb
test
ds
mov
stc
ret
lcall
loopne
xor
stos
inc
fisubrs
dec
fidivl
aad
and
push
or
negl
push
push
add
test
mov
cmp
jp
mov
inc
out
or
loop
push
inc
sahf
inc
dec
in
rcrl
or
inc
dec
dec
iret
mov
ficoms
out
clc
mov
mov
or
loop
jmp
dec
out
rol
pop
into
sbb
fistpl
push
cli
jns
push
out
pop
repz
cltd
sub
push
push
insb
mov
aaa
cmp
into
push
dec
and
dec
sbb
fwait
sbb
roll
cli
test
mov
and
ret
sar
and
push
pop
dec
daa
mov
jmp
adc
inc
mov
jo
popf
sti
fwait
iret
and
or
and
fbld
cmp
lods
ffreep
sub
push
stos
and
ja
xor
test
sbb
in
inc
das
sbb
cltd
daa
andb
mov
sub
hlt
in
stos
sti
enter
enter
jge
gs
aaa
pop
pop
mov
pop
xor
pop
arpl
pop
fwait
mov
adcl
and
sbb
cld
cmp
xor
pop
push
push
pop
cli
and
sub
and
lea
dec
xor
mov
mov
and
cmpsb
push
inc
loop
imul
das
jecxz
mov
lods
sbb
pop
add
or
jae
hlt
sub
pop
xchg
mov
xchg
stos
test
movsl
jg
mov
pusha
jns
push
and
inc
add
dec
mov
je
inc
add
jle
or
test
and
adc
stos
in
or
jmp
fwait
int3
faddl
xor
dec
push
loope
popf
xlat
xor
mov
mov
in
call
mov
dec
pop
adc
sub
inc
mov
das
in
cmp
sbbl
in
and
push
add
repz
sbb
cmp
ret
jge
add
repnz
mov
push
adcb
dec
mov
andl
pop
and
sbb
push
fldcw
sub
jl
int
adc
popa
shl
mov
jb
aad
or
loope
in
pushl
lods
enter
pop
xor
push
in
inc
sti
lret
pop
loope
bound
dec
insb
jne
mov
imul
lods
and
adc
cmpsl
add
scas
mov
sbb
mov
xor
pop
add
inc
mov
pop
add
test
nop
fcoml
das
push
mov
mov
sbb
mov
mov
lods
das
push
sub
sbb
mov
movb
mov
mov
jnp
popf
jle
pop
jnp
popf
inc
cs
stc
inc
cmp
push
fnsave
loopne
xor
out
jle
lock
push
xchg
inc
je
dec
mov
imul
mov
pop
push
adc
pop
or
cmpsb
add
lock
xchg
jo
ret
movsb
add
enter
addr16
mov
sbb
xchg
cmp
insl
mov
bound
sbb
pop
sub
inc
mov
xchg
and
mov
xorl
mov
outsl
leave
pop
inc
xchg
repz
mov
push
loopne
movb
pushf
in
hlt
ja
dec
addl
xor
jnp
lods
sbb
adc
shlb
and
sahf
outsb
cs
jge
rolb
aad
clc
fldcw
sti
cmp
imulb
and
imul
xor
sbb
lods
mov
ljmp
inc
lods
inc
fstl
test
add
into
push
es
test
loope
mov
cmp
xor
idivb
out
adc
inc
cltd
movsb
xlat
add
div
loopne
sub
testb
sbb
sbb
sub
pop
pop
ds
out
sbbb
and
jbe
xchg
addb
scas
jge
push
fnstenv
dec
cmp
sbb
mov
mov
notb
pop
sti
cmpsb
and
and
das
adc
xlat
push
cli
loop
je
jle
pusha
mov
pushf
ss
sub
test
test
jmp
and
jg
adc
inc
adc
sub
push
fdivs
dec
push
xchg
inc
add
or
push
insl
add
add
pop
scas
mov
pop
or
pop
pop
pop
fistpl
ja
mov
out
fdivrs
insb
cmp
repnz
rcrb
dec
cmp
cmp
in
push
add
mov
sbb
adc
lret
cmp
dec
inc
pop
mov
sub
fnsave
xor
fldl
lcall
loop
inc
fs
repz
add
insl
jg
mov
inc
pop
mov
inc
out
jo
sub
insb
mov
xchg
lds
mov
jbe
jg
jae
sub
stc
das
sbb
pop
pop
insl
popa
aad
cmp
bound
repnz
cld
jg
adc
jle
push
mov
jnp
ss
jge
jle
xor
inc
das
repz
fs
and
dec
outsl
sub
add
push
adc
aad
mov
pop
add
mov
pop
aaa
lret
inc
cmpsb
movsb
pop
push
lcall
lods
push
in
xchg
ss
jg
push
cld
pop
xchg
jecxz
nop
xor
in
and
daa
in
mov
dec
into
cltd
jecxz
cmp
pop
push
ljmp
cltd
in
dec
rorb
sbb
sbb
shl
fcoms
in
sbb
mov
cmp
pop
fadds
dec
inc
ds
hlt
movsb
mov
push
add
push
push
ret
orl
xchg
mov
pop
or
sbb
cmp
add
push
stc
push
adc
jg
lret
jnp
mov
pop
xchg
pop
or
push
icebp
hlt
adc
sbb
sub
ret
imul
bound
sbb
sub
mov
xchg
popf
cld
cmp
adc
into
dec
in
xchg
mov
pop
adcb
movsb
mov
mov
pop
std
mov
pop
adc
sbb
ds
adc
sbb
pop
out
in
and
push
sahf
repnz
xlat
xchg
or
jecxz
lods
push
arpl
nop
incb
imul
or
lds
jg,pn
shrl
inc
or
shlb
pop
bound
aas
stos
push
repz
sub
das
jg
add
add
adc
adc
push
jnp
pop
xchg
mov
sbb
xor
push
repz
jne
mulps
iret
repnz
sbb
add
sbb
gs
pop
adc
es
sbb
mov
jecxz
cmpl
xchg
sub
lock
loopne
ljmp
cmp
lahf
pop
push
lahf
adc
ds
and
mov
mov
mov
xchg
fbstp
mov
jl
mov
stos
fcoms
outsl
cltd
inc
movsl
jb
mov
insl
lret
sub
pop
ljmp
enter
push
cwtl
and
je
sti
addb
cli
inc
cmpsb
inc
inc
inc
popa
pop
inc
sbbl
dec
mov
inc
movsb
jmp
idivb
mov
decl
mov
lahf
xorb
sub
daa
pop
xor
inc
dec
sub
gs
mov
jecxz
jne
mov
jno
lret
lahf
sti
loop
jg
inc
inc
xorb
fsubs
int
xchg
inc
orb
fldcw
stc
icebp
cwtl
xor
jne
cmp
add
xchg
dec
add
fldz
xor
shlb
fstpl
add
lret
and
inc
rcrl
arpl
pop
fldl
loop
addl
fisttpl
int
jbe
mov
in
sti
cmp
and
cmp
jle
loope,pt
test
int3
mov
mov
dec
xor
jne
cmp
das
ret
mov
cmc
jbe
movsb
push
push
call
std
pusha
xor
sub
ljmp
or
jns
jg
scas
push
mov
shlb
bound
aaa
pop
sbb
xor
lods
jno
bound
rcrb
push
outsb
pop
dec
arpl
pushl
push
pop
loope
into
ljmp
dec
inc
push
adc
test
jmp
aas
hlt
repnz
mov
mov
adc
test
stc
faddl
cmpsb
xor
popf
loopne
sub
xchg
out
fisubrl
or
dec
mov
or
jns
scas
inc
push
loope
lahf
and
xchg
fstpt
jle
sub
jo
inc
out
and
fs
imul
mov
pop
jae
and
fisubl
adc
xchg
outsl
pop
lret
xchg
gs
in
sub
mov
pop
jg
mov
aaa
pop
out
repnz
icebp
mov
loop
dec
aaa
cmp
inc
ret
or
std
or
inc
jle
mov
xchg
stc
or
fstpt
bound
sbb
addr16
inc
pusha
sbb
pop
icebp
mov
or
mov
or
das
sbb
jmp
adc
mov
bound
data16
mov
stos
out
mov
call
jbe
dec
negb
adcb
aam
loop
nop
mov
xchg
xchg
push
or
or
xchg
jg
push
jecxz
scas
sbb
stc
and
cs
stos
imul
popa
and
loop
adc
repnz
out
xchg
add
jecxz
pop
popa
and
ret
sbb
jp
xchg
mov
jbe
leave
mov
xchg
sbb
sbb
cmp
push
ret
xchg
or
mov
int3
out
cmp
push
push
lea
cmpb
lods
rolb
adcl
mov
sbb
add
mov
xor
lcall
sarl
push
sbb
loope
xor
push
or
mov
jb
inc
cld
je
sbb
sarb
adcb
loope
adc
repz
bound
pop
cs
xchg
jecxz
insl
pop
xchg
fidivrl
daa
pop
js
dec
xor
cmp
mov
out
add
repz
cmp
sbb
jg
pop
cmpl
lret
dec
xor
mov
addl
mov
or
inc
inc
sub
pop
pop
xchg
clc
sub
inc
rolb
jl
fistl
or
sbb
cmp
aam
inc
push
int
mov
jle
add
adc
mov
push
cli
add
repz
cwtl
pop
mov
and
pop
sub
xor
xchg
mov
das
stc
ds
cmpsb
pop
pop
loope
mov
test
cld
outsb
mov
xchg
sub
jg
mov
or
adc
fsub
insl
and
cld
sbb
sub
sub
jg
inc
inc
mov
dec
sti
jecxz
hlt
add
into
jl
pop
add
and
movsb
xchg
push
lcall
pop
mov
je
lahf
adc
ljmp
aas
dec
pop
inc
fidivs
xchg
and
sbb
mov
mov
inc
aam
cmc
pop
cmp
sahf
iret
adc
jnp
push
pop
xor
sti
mov
mov
testb
or
jnp
scas
sahf
push
fucomp
mov
xchg
out
mov
ss
jmp
xchg
and
bound
je
xor
pop
jne
sbb
test
xor
sbb
je
xor
inc
add
loop
std
fwait
push
ja
pushf
cs
jl
push
in
xchg
stos
sub
push
xor
psllq
pop
mov
pop
scas
filds
xchg
loope
jmp
hlt
movsb
xchg
and
mov
sti
lcall
add
enter
pusha
add
sub
fsubs
nop
jbe
das
inc
and
sti
push
jne
in
outsb
push
mov
xor
cmp
je
out
divb
dec
inc
sbb
jle
enter
and
stos
or
pop
and
in
or
gs
sub
cs
jle
dec
inc
testb
and
cld
aas
es
push
cld
mov
pop
mov
sahf
dec
outsw
fdivrs
repnz
inc
pop
adc
bound
push
push
pop
jmp
inc
sbb
sbb
repnz
std
repz
mov
pop
lahf
pop
cmp
je
xlat
push
mov
lea
mov
in
or
or
pusha
add
stos
mov
aas
es
push
xchg
sbb
mov
lds
addr16
pop
movlps
cs
addl
pop
aad
loopne
sub
or
add
divl
xorl
nop
mov
push
dec
or
sarb
jg
sub
insb
xor
sub
lahf
aad
test
test
pop
xor
sub
fs
dec
cmp
in
outsl
push
or
loopne
mov
mov
je
pop
fs
enter
cmpsl
fwait
mov
sbb
sub
loopne
sbb
mov
cmp
mov
sarl
and
inc
out
int3
lock
repz
jbe
mov
jbe
push
test
mov
gs
pop
and
mov
in
pop
int3
and
xor
inc
jle
sub
mov
outsl
icebp
dec
sbb
call
jo
arpl
inc
jg
cwtl
add
adcb
fmuls
push
out
mov
push
std
mov
in
andl
in
sbb
dec
push
sub
arpl
sbb
rolb
and
int3
int3
jl
pop
mov
push
cs
pop
outsl
and
add
dec
hlt
push
xchg
or
adc
or
sub
insl
mov
or
out
je
mov
mov
pop
mov
and
jne
sub
shrl
sbb
sbb
pop
les
pop
into
ficompl
mov
dec
sub
xchg
or
and
andl
fwait
out
xchg
std
es
mov
loop
test
jg
sbb
mov
xchg
xor
or
and
sti
bound
je
mov
mov
pop
inc
push
mov
repnz
scas
insb
loop
fwait
bound
popf
in
and
push
xchg
cmpsl
fcompl
imulb
pop
xor
into
sbb
lock
icebp
daa
jbe
sbbb
push
repnz
stc
mov
pop
push
sbb
jbe
in
lods
out
movsl
sub
insl
push
jecxz
outsb
mov
mov
xchg
inc
pop
xorl
popf
scas
jno
lock
cmpsb
mov
xchg
sub
mov
sbbl
loop
cli
sbb
push
rcll
mov
mov
sub
dec
lods
or
dec
fwait
or
push
cmp
not
xchg
and
mov
push
jg
xchg
xchg
add
xchg
and
sbb
imul
jbe
jae
add
sahf
ret
push
loop
cmpb
popf
push
mov
mov
mov
loop
test
outsb
inc
adc
pop
pushf
xchg
test
shll
jns
or
push
dec
sub
aam
cld
int3
add
dec
fs
mov
cld
cwtl
into
shrl
wbinvd
mov
idivl
add
je
dec
nop/reserved
xor
and
xchg
incl
jb
sbbb
cmp
add
mov
xchg
xchg
dec
sbbl
jo
inc
mov
repnz
jae
clc
mov
xchg
add
cli
mov
jbe
shll
xchg
jns
insl
aad
push
test
push
inc
dec
sbb
mov
orl
mov
push
pop
testl
stos
mov
movsb
jecxz
xchg
add
pop
jl
sti
push
inc
and
in
sbb
mov
xor
ret
xor
mov
jmp
mov
jecxz
hlt
movsl
cltd
sbb
mov
int3
jecxz
sbbl
int3
addl
xchg
mov
jnp
adc
push
xor
sbb
pop
aaa
xchg
xchg
mov
dec
adc
jbe
je
sbb
lea
in
jge
das
data16
js
dec
mov
sub
gs
sub
pusha
push
loopne
xchg
xchg
pop
loop
push
lea
jns
imulb
test
outsb
ljmp
adc
adc
add
lahf
add
das
jecxz
aad
sub
sub
adc
das
add
and
dec
enter
jne
xchg
dec
dec
sub
jnp,pn
push
cli
mov
jecxz
ljmp
imul
hlt
loopne
or
mov
sub
dec
dec
fisubrl
jg
test
rcrb
or
sahf
loopne
in
jg
push
bound
and
lcall
insb
pop
pop
cmp
cmp
scas
loopne
jmp
xor
pop
jnp
into
je
mov
inc
fimuls
ja
lret
add
jle
xor
fstpt
xorb
jo
cmpsb
push
sbb
push
push
xor
and
js
out
jno
dec
push
sbb
lcall
jp
dec
pop
pop
push
call
inc
movsl
lahf
aaa
inc
add
sbb
add
cmp
loop
dec
mov
sub
imul
cmp
fsub
jle
push
adc
pop
jnp
inc
sbb
mov
xchg
sub
sbb
sub
imul
dec
inc
loopne
loop
inc
mov
outsb
and
sar
inc
hlt
adc
pop
cs
adc
push
andw
sbb
mov
mov
pop
jo,pn
mov
ss
ss
jne
ds
out
pop
loope
push
and
mov
sub
daa
das
dec
adc
sti
fsubs
fcoml
pop
cli
sbb
xchg
inc
mov
pop
dec
out
mov
sbb
jnp
ljmp
add
loop
sub
and
das
adc
addr16
pop
int3
mov
paddb
add
sbb
cltd
xor
je
repz
add
decl
inc
jg
mov
mov
or
jae
add
lock
push
xchg
dec
movsb
into
mov
ja
or
add
jle
in
dec
push
mov
inc
mov
push
fildl
hlt
inc
aaa
lret
loopne
mov
pop
mov
sahf
aad
aas
jbe
addr16
mov
or
inc
loope
adc
loop
add
cwtl
dec
jle
add
daa
or
pop
fcoml
xorb
sub
cltd
cmpsb
dec
clc
push
enter
iret
push
inc
dec
rcrb
insb
sub
dec
mov
clc
inc
adc
jecxz
imul
mov
stos
das
repnz
test
sbb
adc
test
sbb
adc
and
test
dec
fisubrl
mov
sub
pop
fiaddl
xor
add
shll
jnp
push
testb
cmp
or
inc
xchg
and
js
repnz
or
xor
jg
pop
add
int3
and
jge
jne
std
jl
add
push
js
pop
dec
or
test
mov
mov
xchg
cmp
adc
inc
ja
pop
out
and
decb
leave
pop
xor
cwtl
xor
dec
push
add
jp
push
xchg
ret
push
dec
xor
rcll
bound
test
aad
jp
mov
sbb
cmpl
insb
cmp
sbbl
imulb
jo
fldl
pop
scas
dec
xchg
sub
je
lahf
push
fwait
jno
mov
jo
sbb
test
cs
pop
sub
ja
hlt
push
mov
movsb
daa
and
pusha
outsb
sahf
bnd
je
pop
test
adc
outsb
jp,pn
cltd
and
mov
sahf
div
pop
jp
notl
jp
cli
lcall
stos
sub
popf
shlb
out
add
jecxz
lods
fcompl
pop
or
add
aaa
fadds
cmp
add
mov
sub
adc
push
test
jecxz
adc
insb
jo
jecxz
mul
cmpsb
mov
cmc
mov
adc
movsl
fiaddl
push
insb
push
ret
jge
mov
sub
jbe
push
fimull
shrl
jno
xchg
mov
inc
in
sti
push
xor
sbb
or
subl
xchg
cld
lahf
sbb
lahf
std
xor
push
cmp
outsb
pop
andb
jecxz
inc
sbbl
movsl
ret
es
mov
push
adc
enter
and
jge
sbb
xor
adc
lcall
sub
adc
clc
testb
push
adc
sbb
fisttpl
xchg
lahf
aad
leave
daa
pop
xchg
js
pop
mov
movsl
andb
out
jl
movsl
pop
pop
sub
repnz
pushf
and
fidivrl
mov
xor
pop
add
sub
jo
fwait
clc
jmp
out
icebp
iret
psubsw
cltd
loopne
jg
mov
aam
sub
dec
jbe
dec
das
outsb
sub
sbb
dec
loop
rcrb
xor
adc
mov
push
out
push
pop
imul
sbb
fdiv
sbb
ds
cmp
adc
fisubrl
push
push
test
mov
pop
out
push
data16
roll
sbb
mov
fwait
mov
scas
movsl
in
push
xor
jmpw
mov
cli
hlt
orb
adc
pop
jne
cltd
mov
test
arpl
mov
jle
add
xchg
mov
lret
lcall
jle
loopne
jne
mov
fldenv
mov
sbb
test
push
adc
push
pop
ret
arpl
push
arpl
jbe
and
in
add
dec
push
jnp,pt
pop
js
add
pop
jno
and
pop
fstpl
sarl
stos
and
add
pop
mov
add
mov
cli
lock
call
pop
sti
lahf
jne
fcoms
mov
dec
sub
add
or
stos
jecxz
xor
fildl
fidivrl
sub
daa
xchg
mov
leave
loop
pop
xor
jne
sub
ret
int3
mov
mov
test
sbb
mov
out
daa
push
cmp
add
lea
jecxz
adc
xor
dec
sbb
test
mov
xlat
sti
mov
sub
pop
sub
and
testl
cmpl
fildl
cltd
dec
in
movsl
daa
loope
lahf
dec
bound
adc
aas
xchg
aas
push
mov
push
jbe
mov
sub
lcall
out
sbb
cmp
or
xchg
and
xchg
add
jb
mov
xchg
lock
xor
pushf
or
xchg
push
clc
dec
or
push
jbe
orb
add
mov
pop
mov
pop
xor
xor
int3
xrelease
cmp
mov
inc
dec
hlt
into
shll
sub
pop
mov
mov
cmp
add
mov
xor
cmpsl
xlat
xor
subl
es
sbb
and
and
mov
xor
push
pop
xchg
adc
mov
xchg
pop
cmpsb
and
inc
inc
fmuls
mov
loop
xor
pop
pop
rcll
mov
pop
arpl
sbb
std
sahf
insb
mov
inc
popa
cmp
enter
cmpsl
jp
sub
insb
or
daa
out
fistps
mov
cmp
dec
pushf
xor
popf
into
mov
hlt
dec
sub
pop
push
test
mov
dec
loope
sub
xor
xor
inc
loop
or
inc
loope
shlb
mov
sub
mov
or
cmp
xor
les
mov
ret
inc
lret
dec
cmp
and
adcb
pop
cli
mov
sub
dec
dec
daa
les
mov
popa
jl
sbb
inc
imul
jmp
sub
jle
dec
mov
movsb
xor
adc
cmp
or
add
jnp
popl
add
jg
call
mov
sub
dec
inc
add
fs
aad
out
push
and
jb
in
mov
rorl
out
xchg
mov
sbb
lea
aad
adc
sbb
jne
jg
pop
inc
add
int3
jbe
out
fidivs
dec
ss
mov
jl
sbb
lea
cltd
jg
xor
in
push
sarb
sbb
andl
cmp
lret
mov
xchg
stc
sbb
add
in
outsl
sbb
cltd
rorl
les
mov
pop
loop
sbb
pop
dec
addr16
or
scas
add
sbb
into
movsb
popa
jne
xchg
inc
roll
loopne
stos
outsl
mov
push
aas
aad
fcomps
movsl
mov
lcall
aaa
repz
lret
jecxz
popa
ret
sbb
xchg
jmp
jle
aaa
xchg
ret
jle
adc
lcall
js
sub
scas
dec
or
xchg
sbb
dec
sub
adc
orb
xchg
jp
sub
loop
dec
stos
fistl
add
push
sbb
jp
or
jns
or
or
out
push
out
int3
push
nop
sarl
imull
cmpb
sub
xchg
adc
repnz
push
loop
sub
xchg
stos
leave
loope
mov
mov
and
sub
testb
mov
jae
push
push
decb
sbb
jo
mov
icebp
inc
out
mov
cmovle
mov
lock
ljmp
dec
inc
outsb
into
add
fwait
mov
lea
enter
add
xor
jb
mov
and
js,pt
cmp
icebp
addl
bound
add
xor
scas
jl
lcall
fs
jae
and
out
add
cmpsb
mov
mov
mov
mov
div
subl
testl
mov
mov
ret
and
dec
push
jg
inc
cmpsl
sub
dec
into
pusha
sbb
ds
xor
sahf
or
outsb
xor
in
cmp
add
xor
xor
sub
test
jge
sub
or
xor
lock
imul
lret
mov
pop
jo
loopne
jns
sti
decb
cmp
mov
pop
les
push
dec
xlat
mov
or
pop
sbb
push
inc
pushf
mov
loop
and
push
call
dec
adc
adc
mov
cmpsb
cmp
cmp
popf
jbe
repz
addr16
pop
insl
fstl
sbb
cmp
movsb
cmp
testb
shll
add
ret
pop
scas
cs
in
or
gs
fidivrs
rcrb
push
pop
outsb
dec
pushf
ljmp
cltd
dec
lcall
dec
out
inc
dec
sbb
in
pop
inc
repnz
sub
push
and
adc
aam
xor
jle
out
and
ds
xor
into
cmp
ss
out
cmp
fs
test
outsb
nop
test
ret
mov
mov
sarb
push
jno
in
jecxz
fadd
cwtl
fimull
sub
call
std
sub
icebp
xlat
cmp
dec
mov
call
jl
dec
testb
clc
mov
int
repz
jno
inc
and
mov
dec
mov
add
in
fwait
sub
pop
in
sub
fprem
fsubrl
jo
pop
xor
data16
push
popf
pop
pop
xchg
inc
jns
pop
cmp
mov
jb
imul
out
es
mov
sarb
in
mov
ror
push
mov
shl
cltd
popa
addr16
fwait
mov
sahf
adc
ds
push
fcmovu
jecxz
xor
mov
fwait
jnp
loop
popf
mov
ret
test
jae
adc
add
mov
pop
jb
xor
shrb
mov
ds
popf
push
xchg
push
iret
mov
loop
in
push
outsl
mov
dec
repnz
xlat
adc
rol
pop
mov
in
pop
sub
icebp
sub
sbb
icebp
and
addr16
clc
mov
lods
push
mov
sub
mov
dec
sbb
and
das
pop
pop
faddp
push
and
repnz
sbb
mov
sub
cld
mov
pop
icebp
call
shrb
divb
jns
test
jl
mul
and
fistps
cmc
xlat
cld
and
dec
mov
fistps
inc
in
jnp
sub
lcall
jle
insb
fcmovb
out
xacquire
push
pushf
pop
jnp
bound
in
cltd
movsl
xor
pop
cmpsb
lahf
sarb
or
xchg
fdiv
out
push
jp
outsb
dec
pop
dec
add
or
hlt
lcall
sub
pop
fcmovu
clc
mov
test
shll
ret
sub
mov
dec
or
and
sbb
push
int3
jae
dec
cmp
pop
and
fnsave
and
and
push
and
stos
pop
mov
jmp
in
mov
in
aam
movsb
insb
aas
push
sub
xchg
dec
aad
aad
push
arpl
cmc
xchg
enter
ja
xchg
aas
inc
insb
inc
sub
insb
cmpb
push
mov
xchg
xor
push
and
inc
bound
loop
in
lods
mov
add
pusha
mov
pop
mov
cmp
cmc
jle
addl
xor
jl
aas
pushf
ja
icebp
outsb
fdivrs
and
shl
mov
loop
push
sbb
mov
sbb
push
push
out
out
and
mov
fmul
loope
inc
sbb
int
call
idivb
loope
dec
das
insl
loopne
or
cld
push
cltd
push
loopne
scas
ss
pop
add
out
pushf
stos
mov
in
xor
daa
push
repnz
mov
xchg
adc
pop
mov
lahf
jo
insl
pop
add
sahf
xorb
xor
mov
jp
in
sarb
scas
pop
out
and
ljmp
dec
push
call
stos
hlt
push
xor
in
loop
xor
dec
lock
rcrb
arpl
into
stos
hlt
jg
dec
rcrb
push
jle
mov
shrb
sub
mov
enter
in
in
mov
stos
jno
mov
inc
xor
mov
xlat
lahf
lret
pop
jo
shlb
shrb
arpl
push
stos
sahf
sbb
shlb
jmp
add
xor
adc
mov
and
into
fiadds
adc
aam
push
sbb
loop
mov
outsb
push
stc
pusha
cltd
cmpb
out
dec
imul
inc
out
adc
or
push
adc
shr
or
xor
and
adc
push
push
idiv
mov
gs
adc
outsb
cwtl
cmp
jns
das
jbe
enter
aaa
pop
int3
repz
sub
mov
in
xor
pop
xor
or
loopne
and
push
mov
seto
push
sub
dec
js
push
ss
or
inc
das
and
cltd
jnp
cs
repz
pushf
pop
rep
add
xchg
xor
jecxz
icebp
into
adc
mov
outsb
dec
pop
pusha
cmp
pop
sahf
repz
cli
and
inc
xchg
pop
xor
movsl
lods
xchg
adc
xchg
movsb
dec
xor
add
pushf
mov
gs
xchg
mov
popf
jl
push
inc
aas
dec
test
fcompl
icebp
cltd
stos
cmp
xor
test
fsubs
fsubrl
lret
lods
push
test
bound
pop
rclb
add
adc
mov
fcoms
and
sarb
mov
dec
dec
adc
adc
jno
or
loop
ret
out
jl
jmp
push
jle
add
and
mov
ret
pop
mov
test
inc
lods
outsl
mov
fstpt
outsl
push
or
sti
sti
dec
inc
adc
or
inc
js
push
xchg
sbbl
test
mov
push
sub
mov
xchg
xchg
pop
fwait
loope
pusha
inc
movsl
mov
mov
daa
xchg
xor
sbb
pushf
push
out
rclb
xor
ret
repnz
inc
repnz
insl
sahf
test
movl
loop
shl
inc
dec
jmp
lock
pop
mov
pop
sbb
loop
popl
mov
xchg
fimuls
or
rol
lods
dec
mov
fsub
loope
pop
je
mov
pop
shl
jns
and
mov
daa
cmc
push
sbb
pop
insb
mov
movsl
cs
add
mov
inc
adc
dec
std
int3
or
jge
xchg
jmp
mov
mov
addr16
shrl
mov
out
cmp
popa
jg
push
aaa
cmp
cwtl
repz
ret
push
push
or
pop
pop
gs
shl
loopne
or
pop
loop
pop
pop
stos
loop
sub
hlt
push
push
lds
sahf
sub
nop
lock
notb
mov
lret
pusha
dec
xlat
in
dec
xor
nop
loope
mov
das
inc
into
mov
out
pop
icebp
jg
inc
cmp
jl
dec
or
inc
das
jg
dec
cmp
test
loop
pop
pop
int
test
push
pop
and
into
jl
daa
and
outsl
je
mov
cs
repz
popa
cmpsb
out
sub
add
int
gs
lods
mov
lock
pop
jae
dec
xrelease
fcoms
int
jbe
and
inc
pop
sahf
sub
add
jg
lock
jns
das
push
mov
sub
rorb
push
ret
cmp
xchg
pop
sub
add
pop
addb
add
add
add
add
push
xchg
cmp
cmp
fldcw
cmp
add
leave
xchg
mov
cmc
and
jnp
cltd
push
push
loopne
lods
sbb
lret
add
mov
inc
pop
ja
rcrb
lcall
inc
dec
push
or
cmp
test
ret
and
jp
sahf
push
scas
stos
sbb
bound
inc
xor
and
lahf
jl
sub
lea
inc
ds
sbbb
pop
fldcw
fidivrl
or
int
sahf
insb
js
ret
push
out
push
dec
stos
cltd
sub
inc
lods
push
push
push
sbb
mov
push
cmp
movsl
xor
xor
pop
mov
or
inc
pusha
add
push
dec
xchg
pop
sbb
push
mov
movsl
lcall
fistpl
adc
mov
mov
pop
jecxz
sub
xchg
dec
pop
lret
add
add
test
das
cltd
and
push
cs
icebp
loop
scas
mov
xchg
idivb
sbb
pop
sub
inc
add
and
cs
enter
iret
or
sbb
aad
sub
xor
push
ljmp
sub
fcoms
cmc
cmpsb
mov
push
jno
mov
loop,pn
negb
push
sbb
les
push
sbb
mov
insl
sti
push
push
sahf
test
mov
xor
xchg
aad
push
sarl
sub
jg
test
jno
mov
push
outsb
mov
jns
bound
repnz
sbbb
sbb
mov
dec
aam
fildll
jge
push
sub
mov
ja
aam
add
mov
dec
sub
pop
xor
fwait
adc
lods
dec
out
bound
test
imulb
aam
jp
out
ret
sbb
lock
lret
cmp
loop
lock
mov
pop
xor
sub
inc
movsl
inc
push
pop
sbb
add
push
iret
mov
jecxz
mov
test
pop
negl
push
fwait
sbb
bound
cmp
pop
mov
push
dec
push
or
cmp
inc
sub
das
imul
add
jecxz
jns
cwtl
ficoms
xor
das
xchg
cld
daa
popf
mov
and
mov
or
ja
xor
loop
cmpsb
push
out
adc
scas
mov
cmp
add
mov
pop
sbbb
pop
shlb
aad
insb
xor
xor
push
sub
bound
jne
push
jne,pn
fcmovnu
enter
pop
dec
or
sbb
sbb
mov
hlt
into
pusha
or
mov
xchg
gs
pop
sbb
push
lcall
idivb
mov
out
ss
and
jae
out
add
xchg
popa
jl
lahf
push
push
call
mov
sarb
icebp
cmp
sub
jbe
sub
inc
sbb
mov
mov
data16
arpl
or
stos
mov
je
insl
push
cmp
and
mov
mov
mov
cli
pop
add
sbb
cmp
scas
cmc
mov
mov
push
aad
pop
enter
sbb
jbe
addl
lods
xchg
xor
sub
stos
pop
mov
add
out
mov
pop
imul
sub
notb
je
dec
xchg
fwait
cwtl
sahf
shl
push
push
divl
shll
inc
mov
and
cmp
scas
push
jmp
adc
mov
sbb
outsl
aaa
sti
xor
lahf
std
and
xor
push
loop
jbe
dec
xor
scas
pop
aas
bound
jg
mov
aam
or
add
lods
xchg
repnz
and
fdivl
arpl
cltd
dec
and
mov
sbb
outsb
jae
sti
jg
xor
jg
pop
orl
pop
or
mov
cmp
jne
aas
push
xor
arpl
cmp
or
outsl
pop
aaa
sub
jbe
sbb
xchg
ret
jmp
aas
cmp
inc
clc
adc
inc
cltd
and
inc
pop
mov
pusha
fists
icebp
mov
outsb
fnstsw
cmp
sbb
push
xchg
xor
in
pop
cltd
ljmp
push
sahf
push
sti
inc
sti
std
bnd
jg
bound
mov
lock
inc
dec
js
push
and
icebp
cmp
pushf
cmp
nop
and
aam
int3
out
out
inc
fcoml
dec
dec
rcrl
push
sbb
and
push
push
outsb
dec
test
fs
and
les
pop
and
popf
mov
pop
loope
cmp
inc
mov
or
inc
stos
int
aas
sbb
mov
mov
lea
mov
lods
fmuls
fdivl
mov
sub
cs
cli
xchg
mov
scas
addps
sub
addl
pop
jg
adc
jne
sti
inc
adc
sbb
pop
xchg
pushl
xchg
xor
sub
sub
mov
pop
add
dec
cmpsb
cmp
test
sbb
incb
or
push
push
pop
mov
sbb
pop
loop
scas
add
push
les
sahf
mov
push
mov
sbb
das
lea
push
outsl
fidivrs
sub
adc
push
push
and
and
fwait
testb
xchg
cwtl
jmp
inc
ret
sbb
or
les
mov
ficomps
rcll
cli
test
pop
ds
xchg
jae
ds
sbb
jmp
fnstenv
insl
in
pop
mov
shl
cmp
incl
sbb
in
dec
xchg
add
dec
mov
pop
loop
loop
sub
mov
fistps
lcall
jge
adc
lock
dec
adc
cmp
ss
and
das
mulb
lret
sti
dec
repnz
insb
cwtl
jg
int
cmpsl
adcl
repnz
stos
xor
cmp
jns,pt
test
sub
int3
loope
cmp
incl
mov
add
cli
insl
pushf
adc
or
xor
adc
dec
dec
bound
rolb
xchg
mov
cli
mull
pop
and
js
sbb
pop
sbb
sbb
sbb
ror
xor
call
clc
and
shl
hlt
mov
in
sub
inc
add
mov
sbb
fcoml
movsl
shlb
dec
cmp
out
js
mov
and
popl
loope
dec
push
leave
push
mov
jg
pop
xor
sahf
stc
dec
lods
mov
push
lock
pop
cltd
sub
and
inc
inc
sub
cmp
mov
nop
inc
lea
jecxz
cld
inc
cwtl
or
adc
mov
xor
dec
jg
push
add
cs
cwtl
stos
aam
sbb
xor
pop
mov
in
hlt
dec
sub
cmpsb
into
lods
mov
push
ljmp
mov
pop
add
cmpsb
out
pushf
loop
loope
in
lds
xor
jbe
jle
push
mov
popa
loop
push
inc
in
push
ret
inc
ds
int
lcall
loop
dec
pop
rcrb
fxam
loope
mov
mov
pop
jge
cmp
mov
enter
jb
ljmp
inc
clc
or
sub
cmp
arpl
xchg
stos
sbb
dec
scas
push
cmp
and
pop
mov
cwtl
inc
in
push
and
jge
loopne
ds
imul
and
pop
mov
mov
data16
jnp
pop
and
add
insb
pop
jle
pop
jl
jecxz
xor
inc
insb
pop
fbld
sbb
popf
xlat
adc
addb
lcall
inc
cmp
addl
add
jno
inc
fcomip
fadds
loope
jo
add
dec
repz
pop
xor
jmp
stos
in
pop
sarb
stc
aam
decb
loop
push
sub
fadds
ret
and
std
pop
insb
cli
push
in
jp
sbb
inc
push
jns
sbb
movsb
mov
repnz
lret
xor
sub
xchg
inc
jb
dec
aam
add
adc
int3
xchg
addl
push
jg
pop
pop
push
push
mov
sub
jge
popf
sub
or
xor
cmpb
sbb
cli
das
mov
xchg
sbb
test
movsl
rcrl
jb
fidivrs
mov
idiv
iret
mov
jp
aam
jg
mov
icebp
lods
jecxz
jo
pusha
scas
or
jbe
cmp
xor
ret
push
push
or
and
add
sbb
and
icebp
sub
dec
push
add
push
es
ljmp
pop
addr16
das
or
mov
sbb
orl
pop
mov
outsb
je
sbb
bound
sbbb
xchg
inc
mov
xchg
test
xor
jo
bound
xorl
push
inc
cmp
dec
decl
mov
inc
jle
loope
arpl
mov
into
movsl
inc
push
or
loopne
aas
aam
cld
xor
stos
es
cmpsb
jl
adc
mov
loop
fstl
insb
hlt
cmc
scas
xchg
adc
icebp
mov
jne
test
leave
loop
or
repz
ret
dec
or
mov
das
jg
push
jp
sbb
adc
arpl
sub
repnz
out
out
jle
xchg
in
stos
adc
fcmove
sub
fs
leave
popf
in
inc
cmpsl
bound
xor
cmc
cwtl
cmpsl
jg
pop
push
xchg
in
sahf
in
push
adc
or
and
cmp
and
lods
mov
jl
adc
add
cmp
xor
decb
pop
and
xchg
sub
das
push
mov
icebp
std
jecxz
sbb
dec
sbb
jo
shl
mov
stos
push
pusha
or
icebp
sbb
cmp
fldl
rcrl
xchg
jle
sbb
adc
dec
sub
push
lods
xchg
add
jp
xorl
jae
rcrb
pop
add
std
dec
outsb
push
mov
pop
push
and
or
fxch
loope
jmp
roll
int
mov
dec
mov
fwait
test
sbb
sbb
notl
cmpsb
jmp
and
add
inc
push
loopne
xor
jge
add
add
sbbb
shrd
mov
lret
pop
mov
ss
pop
sbb
dec
xchg
popa
ds
push
add
cmp
andl
mov
int3
mov
cmpsb
inc
adc
jecxz
mov
mov
sub
dec
jb
call
imul
hlt
push
cwtl
xchg
or
cmc
cli
sub
dec
push
jbe
movsb
lcall
mov
cmp
sbb
add
pop
xlat
sub
jg
lcall
mov
bound
mov
adc
bound
in
rcrb
jecxz
adc
adc
sbb
mov
mov
add
xlat
xchg
out
jle
pop
mov
jge,pn
mov
sub
or
sbb
or
sub
stos
sub
pop
mov
xchg
es
xor
inc
jp
and
jle
push
pop
loop
dec
aaa
rcrb
sbb
lahf
out
hlt
or
push
inc
stos
push
cmp
lcall
outsb
adc
cmovp
pushf
jnp
pop
testb
sub
arpl
sti
push
xor
in
scas
jg
mov
sahf
push
mov
insb
ljmp
pop
pop
icebp
adc
mov
fwait
clc
rorl
out
pop
xchg
movsl
test
sbb
es
jle
int
xchg
jb
inc
loope
stc
push
adc
loop
or
ljmp
sub
or
adc
out
adc
push
test
pop
or
ret
jns
sbb
lret
or
lcall
jns
lods
mov
fwait
push
mov
cld
inc
adc
pop
jne
rcrb
dec
ret
pop
jp
popa
jmp
pop
rol
ss
leave
push
int
xchg
cwtl
jmp
xor
js
negb
xor
push
arpl
loope
adc
ja
hlt
pop
loope
test
pop
mov
pop
mov
mov
push
push
or
xor
negl
data16
push
sub
or
xor
iret
inc
jbe
mov
jecxz
mov
jge
jae
push
icebp
adc
sbb
sub
xchg
and
xchg
in
pop
fwait
sub
pop
xchg
andl
ds
jb
cmp
pusha
sbb
daa
in
add
cmp
inc
data16
loope
popf
icebp
xchg
inc
notb
bound
mov
jecxz
sub
sub
inc
push
sub
lock
fsubrl
sbb
aad
sbb
test
mov
fiaddl
push
loop
add
ret
es
shlb
fwait
sahf
lds
inc
cmpsb
push
push
add
jl
ds
jno
jmp
xor
adc
inc
push
sbb
aaa
dec
and
add
push
dec
lcall
push
sahf
faddl
ret
inc
add
add
stos
es
inc
inc
sub
sub
clc
add
xor
push
fildl
push
test
dec
cmp
sbb
inc
lds
mov
or
xlat
sti
clc
dec
testb
ljmp
push
sti
inc
orb
popa
cmpsl
sub
cmp
push
jle
add
push
fcmove
loop
xor
ljmp
xor
jae
adc
mov
pop
popa
insl
ds
cs
and
sarl
out
es
hlt
or
jg
mov
or
jo
test
mov
loope
or
lahf
gs
mov
sarl
sbb
repnz
scas
dec
cli
mov
sbb
xchg
mov
and
add
and
pop
cwtl
stos
sub
bound
sub
jmp
outsl
das
pop
outsb
and
push
pop
sbb
mov
sbb
lret
addr16
ret
inc
ret
push
test
push
psrad
inc
ret
fildl
cmc
sbb
daa
mov
shr
testl
pop
and
aas
jecxz
and
adc
sahf
fwait
je
lcall
outsb
outsl
jo
mov
arpl
or
movsb
mov
jb
hlt
in
fcomps
fwait
pop
mov
jbe
dec
mov
or
and
push
push
mov
pop
jp
sbb
ret
sbb
add
or
loope
mov
mov
cs
loope
dec
cmp
mov
popa
lcall
jge
jl
pop
call
sub
cli
jge
or
dec
jp
jle
adc
push
lcall
pop
shrl
dec
out
dec
lret
aad
in
cs
inc
dec
sbb
sbb
push
sub
loopne
cld
dec
fs
adc
or
add
sti
pusha
inc
ds
rcrb
sbb
hlt
mov
lret
pop
and
or
mov
lahf
pop
in
inc
mov
sbb
cmp
lret
lcall
sbb
test
inc
cld
addr16
inc
addl
adc
fsubrl
xlat
adc
jne
inc
int3
outsl
out
in
cwtl
rcrl
shr
repnz
fs
fsubs
and
dec
push
bound
xchg
gs
jae
adc
jmp
adc
vphadduwq
je
std
sub
push
sbb
add
dec
cmpsb
loop
je
fists
cwtl
idiv
inc
or
loope
mov
push
push
shld
int
push
push
mov
pusha
in
adc
push
loopne
sbb
enter
hlt
adcl
or
or
xchg
push
pop
dec
xchg
adc
jne
lods
jbe
dec
cmc
add
mov
inc
pop
sub
jno
adc
sbb
sbb
push
pusha
adc
es
in
adc
push
ljmp
gs
rcll
cwtl
cmp
cs
or
xor
add
sbb
push
inc
dec
shlb
add
add
push
fidivs
enter
fnstcw
pop
mov
push
mov
pop
popf
xchg
mov
fisubl
jle
mov
jo
dec
pop
mov
fwait
mov
loop
cmpsb
sub
ljmp
dec
mov
mov
lcall
es
int
pop
mov
mov
add
repnz
arpl
inc
pusha
jle
ds
mov
adc
sub
add
pop
mov
loopne
xchg
mov
enter
lahf
outsb
sub
push
mov
mov
or
or
test
loope
ds
iret
mov
inc
push
lret
mov
addl
arpl
mov
rorl
mov
mov
xor
or
or
cmpl
inc
jge
jno
push
sbb
add
fsts
jge
shll
out
call
lret
xorl
ret
jle
inc
mov
loop
jmp
out
push
jle
sbb
test
add
shlb
sbbb
inc
ss
xor
sbb
cs
sti
add
jle
sbb
inc
sub
dec
xlat
jnp
and
xchg
ret
or
adc
push
subl
aas
cs
inc
mov
push
and
cltd
and
jbe
std
sub
into
xchg
inc
jecxz
or
or
jecxz
lea
xchg
or
jbe
jne
cwtl
out
mov
inc
sub
shrl
xor
push
sub
add
or
jne
jge
lea
mov
sub
mov
repnz
cmp
xchg
dec
fimuls
out
cs
push
fsubl
cmp
push
xor
push
arpl
pop
sub
sbb
data16
sub
xor
cmp
add
sbb
popa
icebp
movsl
fsubl
ja
sub
sub
pop
test
add
mov
das
jl
mov
push
lods
dec
das
sbb
hlt
jae
dec
insb
dec
pop
jge
mov
pop
mov
push
lods
pushf
lcall
mov
outsb
leave
mov
sbb
cmc
inc
ret
pop
jg
addr16
jg
xor
in
add
push
push
data16
es
fldl
les
pop
and
bound
ret
sub
sbb
ret
rclb
mov
mov
dec
mov
mov
ret
mov
jmp
inc
mov
ljmp
int3
ja
xor
cmp
cmp
icebp
push
dec
inc
mov
xlat
pop
shl
ret
testl
push
sub
pop
lahf
shl
daa
mov
loopne
pop
fsubrl
cld
iret
add
mov
loope
mov
mov
in
data16
xchg
dec
mov
orl
pop
push
sub
pop
adc
or
mov
or
pop
je
inc
pop
sti
mov
stc
push
push
and
hlt
and
pop
imul
into
dec
icebp
jnp,pt
cmp
dec
sbb
cmp
jg
inc
adc
sbb
or
lock
inc
loop
xorb
stos
pop
sbb
test
cmp
mov
divl
xchg
imul
and
jecxz
repz
xchg
dec
repz
or
mov
stos
add
daa
jg
and
cmpl
sbb
sub
pusha
movlps
cld
cwtl
inc
rep
mov
push
fisubrs
outsb
outsl
push
cmc
cs
pop
and
add
pop
pop
std
cmp
add
push
lock
sahf
and
xchg
loop
popf
or
stos
jecxz
pusha
or
mov
stc
mov
dec
jb
inc
inc
ficoms
dec
jmp
and
inc
cmp
dec
sbb
cltd
sti
and
imul
push
dec
push
and
loop,pn
adc
cmp
sbb
mov
adc
xor
inc
pop
shlb
adc
cmp
push
insb
xchg
cmpsb
je
decb
sbb
jbe
cmpsl
sub
xchg
mov
fiadds
push
push
fucomip
xchg
inc
loopne
rcrl
fcomps
mov
mov
loop
cmc
xchg
shll
arpl
or
testl
lcall
inc
or
xchg
aas
or
xchg
add
dec
lds
js
cwtl
add
movsb
outsb
add
jmp
push
mov
sahf
aad
sahf
cmpsl
rol
sub
jp
dec
adc
adc
pop
popa
pusha
push
jb
jns
repz
enter
ficompl
pop
xchg
and
lds
aaa
lcall
fcmovu
inc
jbe
xchg
cmp
inc
cmp
dec
and
ja
rclb
xchg
cmp
adc
jecxz
lret
mov
mov
pop
push
mov
fdivrp
push
cltd
dec
stos
gs
movsl
xlat
inc
push
push
dec
dec
mov
xor
and
sub
sub
pop
pop
out
dec
push
sbb
es
inc
bound
in
pop
sbb
mov
xor
popl
in
xchg
push
mov
dec
test
dec
cs
sbb
jl
dec
cmp
add
add
aaa
cmpsl
repnz
jo
imul
call
sub
aaa
jne
mov
jl
idivb
in
addb
jo
xchg
xchg
cmp
test
daa
pop
add
and
dec
pop
icebp
xchg
scas
cmp
and
push
xor
lret
lret
inc
sbb
bound
pop
and
shlb
sbb
and
mov
sbb
pop
call
movsb
jp
sub
pusha
call
dec
in
and
cli
daa
pop
pop
sub
adc
sub
lret
jg
ljmp
jle
adc
pop
pop
mov
out
inc
xor
sbb
fsub
jl
ret
fcoml
adc
or
and
sub
sar
push
dec
lahf
dec
stc
pusha
mov
mov
or
ret
dec
mov
add
push
dec
mov
push
sbb
dec
add
pushf
add
les
out
push
jae
inc
bound
lahf
ret
repz
jg
call
shlb
loop
out
aad
push
pop
add
mov
and
in
into
pushf
sbb
mov
dec
and
loop
mov
lret
cwtl
outsl
pop
pop
add
cld
jae
adc
fdivrl
mov
push
imul
adc
scas
testb
pop
ret
sti
addb
pop
push
xchg
push
cmp
mov
rcll
scas
dec
das
shl
jae
pop
rol
iret
adc
jle
sahf
iret
aaa
lods
cmpl
js
inc
pop
jns
mov
jo
mov
pop
les
andb
push
shll
sub
mov
out
adc
pop
mov
mov
adc
add
sbb
pop
pop
loope
xlat
out
frstor
es
inc
out
inc
das
out
lock
das
jp
ret
push
inc
pop
loope
sbb
mov
dec
dec
sub
dec
adc
or
pop
sbb
cmp
sbb
inc
sbb
dec
dec
in
aas
dec
loop
adc
add
mov
in
pop
loope
cmp
and
adcl
inc
pop
js
mov
adc
and
sbb
das
sahf
add
xor
push
xchg
push
rcrb
mov
add
adc
and
add
pop
je
shll
aas
cmp
push
jl
cvtps2pi
add
mov
outsb
push
dec
xor
je
js
push
xchg
cs
dec
mov
leave
jp
ret
fcoms
and
push
imul
sbb
adc
das
stos
or
jp
jae
push
sbb
xor
ljmp
mov
loop
das
push
jo
loopne
push
es
lret
int3
jns
sbb
mov
xor
mov
incb
push
xchg
pop
or
loope
stc
xchg
fimuls
push
mov
pop
xchg
inc
and
loop
fisubrl
adc
adc
mov
and
xchg
dec
xor
or
or
leave
insb
mov
jb
push
popl
and
test
mov
adc
nop
fisubrs
es
ljmp
mov
add
push
sbb
and
or
lock
loope
mov
cld
loop
movsl
xor
inc
mov
std
rolb
or
int3
pop
subl
int
cmpb
jno
sub
dec
test
or
mov
leave
xor
xor
es
push
push
mov
mov
ss
int
pop
mov
jo
push
bound
inc
leave
push
jle
push
data16
xor
pop
pop
jle
pop
jle
addl
int
pushw
loop
pop
movsl
mov
nop
bound
sahf
xor
pop
cmp
push
cli
pop
inc
adc
dec
aas
cmp
and
loopne
roll
cwtl
push
inc
pusha
daa
test
das
orl
inc
cltd
add
inc
std
call
push
je
adc
jecxz
je
cmpl
xor
fsts
femms
adc
pop
pop
and
xchg
push
rorb
repz
ljmp
push
sbb
inc
pushf
mov
sbb
iret
mov
insl
ret
push
add
icebp
cmp
loopne
inc
add
jne
push
mov
stos
and
push
loope
pop
add
cmp
nop
sbb
stos
rcll
jo
push
adc
sub
dec
adc
push
pop
into
inc
loope
pop
xor
or
dec
pop
xor
popf
push
cmp
sbb
scas
popf
pop
dec
nop
pop
ret
inc
int3
sub
adc
aaa
add
jg
pop
bound
je
aam
iret
mov
jbe
stos
add
sbb
mov
ljmp
fadd
inc
sbb
jae
mov
add
pop
leave
jge
into
test
pop
lcall
clc
inc
and
dec
sbb
add
lods
push
subl
loop
cmc
rorb
bound
ljmp
and
jbe
mov
pop
roll
sub
pop
out
inc
push
mov
xchg
fsubrl
mov
and
ljmp
or
jae
jb
or
stos
sbbl
xchg
pop
dec
push
or
shll
dec
sub
popl
mov
mov
push
lcall
popf
lcall
mov
dec
shl
jmp
sbb
inc
sub
icebp
mov
pop
jle
dec
enter
pop
mov
pop
test
and
mov
push
jg
das
pusha
add
dec
shl
mov
or
lods
loop
shlb
or
jecxz
lock
dec
or
ret
jecxz
pop
es
in
cs
jp
jnp
pop
dec
mov
adc
adc
sub
pop
add
leave
js
dec
pop
xchg
cwtl
jo
jge
mov
ljmp
mov
mov
andl
fdivp
push
xchg
fsubrl
addr16
push
incb
ret
sbbl
jle
stos
mov
add
pusha
add
fsubl
pop
mov
pop
ret
mov
sbb
fidivl
call
sar
xor
pop
loop
xchg
jno
mov
jg
aas
dec
repnz
pop
inc
aad
dec
push
lcall
je
clc
cmp
or
das
std
sub
adc
push
dec
push
cli
leave
cmp
jb
das
mov
dec
es
ljmp
orl
in
outsb
repnz
iret
das
mov
xchg
dec
ret
ret
push
icebp
mov
adc
lahf
ss
xchg
xchg
leave
shlb
push
jle
xchg
pusha
xor
rcrb
adc
jle
std
pop
shrl
mov
xchg
cmc
sahf
hlt
jno
mov
out
adc
cwtl
loopne
sub
mov
mov
mov
adc
ds
mov
jecxz
push
cmpb
fstl
mov
stos
xor
cmpb
mov
inc
pop
jb
inc
ret
dec
rorb
setl
mov
loop
sbb
jecxz
mov
mov
inc
or
jns
or
int
jno
in
jbe
rcrl
fisubs
and
push
in
je
fiaddl
sub
inc
adcl
xor
out
lret
cmp
lahf
mov
out
add
daa
jg
movsb
sbb
cli
push
jae
push
cltd
cmpsl
std
sbb
insb
cli
cmpsl
dec
pop
aas
and
jbe
loopne
jbe
push
cmp
fcoms
pop
push
push
jb
mov
jns
or
into
xchg
andl
xor
sub
inc
mov
mov
push
adc
flds
lock
xor
xlat
dec
jmp
enter
sahf
pusha
xchg
mov
dec
nop
das
es
mov
jl
pop
loope
dec
push
dec
ss
test
adc
cs
mov
xchg
dec
xor
inc
aam
in
and
pusha
adcl
or
inc
inc
dec
sub
push
mov
cmp
adc
test
outsb
xor
mull
imul
ret
fcomps
pop
push
std
mov
adc
sar
dec
out
add
ja
es
aam
push
mov
push
sbb
es
inc
call
lahf
in
pop
adc
sub
xchg
add
and
movsb
and
add
xlat
dec
cmp
mov
ret
push
adc
mov
jg,pt
add
testb
into
addr16
mov
ljmp
jns
dec
jne
pop
dec
ja
push
dec
mov
in
sbb
out
lcall
and
cmp
xchg
inc
xchg
fbstp
pmovmskb
xor
std
out
scas
xlat
ret
xor
xlat
push
les
push
jb
loope
xor
test
ret
xor
pop
add
lea
mov
divl
popl
sub
cwtl
pushf
and
and
dec
imulb
or
and
push
mov
fld
mov
mov
inc
ret
mov
adc
cltd
ja
lcall
notl
sub
adc
adc
mov
data16
sub
ljmp
adc
in
stos
or
add
add
jle
fcmovu
jg
adc
outsl
adc
fildll
inc
cmpsb
or
sub
add
push
mov
dec
mov
pop
add
mov
repnz
scas
sub
xchg
xor
and
jbe
inc
imul
insb
outsb
xor
cmp
fistpll
ds
pushf
aad
pushf
mov
jecxz
orb
mov
jle
push
lahf
shlb
and
jge
dec
ret
push
pop
jne
bound
sbb
pop
sbb
mov
push
push
adc
mov
cmp
andl
inc
setle
mov
pusha
sbb
addl
std
inc
sub
aaa
jmp
jmp
adc
mov
daa
or
in
push
lock
es
outsl
sub
dec
jle
lcall
rcrb
inc
lret
sbbl
sub
pusha
pop
cmp
inc
mov
stos
lcall
subl
roll
cwtl
jo
pop
mov
js
inc
jnp
das
outsb
sbb
daa
xchg
push
daa
jp
or
ljmp
fdiv
arpl
add
sar
mov
cvtpi2ps
cmpl
or
jo
scas
push
dec
xchg
cld
xchg
mov
sub
shld
sti
pop
jecxz
and
loope
cld
inc
fidivrs
jge
push
lret
add
in
rol
shrl
jle
inc
lret
or
add
rclb
add
push
xchg
xchg
xor
faddl
inc
add
in
add
mov
mov
dec
cmpsl
cmc
mov
sarb
cmpsb
test
xor
lock
jge
outsl
xor
adc
dec
add
cmc
xchg
or
pop
ja
adc
jae
and
cwtl
fistl
mov
shr
xor
xorl
andb
out
cmc
pop
iret
repz
inc
js
cmc
or
loop
adc
jne
and
add
xchg
cmp
sti
jo
repnz
imul
push
mov
fcmovu
pop
loop
mov
xor
dec
jbe
xchg
cs
or
mov
pop
jae
pusha
xchg
inc
dec
push
xchg
adc
jl
sbb
cs
pop
or
rolb
pop
std
push
mov
jbe
jbe
aam
das
aad
lea
rcl
adc
lods
dec
mov
dec
sbb
lods
repz
stc
setns
push
into
sbb
pop
push
xchg
cmp
dec
push
daa
jnp,pn
xchg
fsubs
mov
sbb
jl
inc
insl
dec
fmull
sub
sub
arpl
pop
arpl
lret
jns
and
mov
hlt
add
lahf
andb
scas
jecxz
mov
inc
cmc
lcall
inc
sbb
hlt
adc
dec
hlt
mov
fdivrs
std
jb
sahf
jbe
mov
inc
ds
aas
ljmp
lods
push
mov
repz
and
mov
xchg
cmp
call
jle
addl
jecxz
jle
add
add
loope
or
pop
jno
sbb
repz
dec
inc
dec
pop
movsb
mov
cmpsb
cmpsb
dec
xchg
sub
jg
cmp
frstor
ret
ror
xchg
xchg
sub
les
mov
inc
aam
mov
mov
pop
in
pop
sub
outsb
pusha
cmpsl
aas
mov
shl
mov
repnz
cmp
int3
jecxz
and
ret
jne
push
dec
ret
pop
mul
cwtl
inc
arpl
jecxz
icebp
mov
cmpsb
inc
loope
xor
data16
fdiv
inc
fs
pop
mul
mov
ret
fistpl
cmp
loopne
add
push
cli
repnz
and
inc
rcr
sub
sbb
xchg
fists
fisubl
outsl
push
ljmp
repz
loope
test
mov
jp
jle
pop
dec
dec
repz
jbe
lds
cmp
inc
mov
into
adc
clc
dec
dec
repnz
fwait
adc
outsb
sbb
sbb
adc
push
push
or
enter
lods
ficoml
insl
xchg
enter
in
mov
stos
outsl
imul
sbb
xlat
push
xchg
add
sub
mov
incb
outsb
inc
das
fimull
xchg
ret
mov
inc
jecxz
push
add
mov
sbb
lret
xor
repz
xchg
stos
pop
stc
jnp
jne
into
pop
inc
fwait
aam
sbb
ret
loop
stos
xchg
mov
mov
aam
and
arpl
mov
je
test
lahf
hlt
cmp
pop
shl
or
cli
or
cwtl
add
fsts
not
loop
or
sbb
cltd
or
xchg
lcall
insb
inc
bnd
outsb
sbb
loop
pop
sub
jbe
das
cmp
cmp
adcl
jecxz
push
mov
xchg
jns
inc
outsb
mov
out
mov
pop
scas
iret
jo
cmp
sub
pop
pop
inc
ja
fcoms
or
adc
movsb
or
mov
adc
cmp
xchg
imul
and
daa
stc
in
xor
paddd
popf
jle
dec
pop
loope
xor
ja,pn
cmp
pop
and
cwtl
scas
js
mov
nop
jmp
jecxz
aas
sub
push
addl
lret
add
enter
shll
popf
ljmp
mov
pop
into
cltd
pop
out
vminsd
mov
pop
lahf
pop
ljmp
aaa
and
push
jmp
adc
ss
dec
adc
leave
jne
sub
pop
sbb
push
fidivrs
jbe
dec
loopne
mov
cs
lods
mov
and
mov
adc
cltd
ficoml
ljmp
add
and
popf
inc
fwait
movsl
or
add
mov
add
xor
or
hlt
mov
jg
hlt
or
jge
shrb
sub
jnp
add
js
fmuls
loope
pop
cwtl
testl
out
and
sbb
aad
mov
mov
jg
daa
xchg
imul
push
xor
xchg
or
loope
out
xor
push
dec
inc
cmp
sub
jl
and
cmp
out
loop
insl
sti
xor
add
push
in
leave
loope
das
imul
add
repnz
into
in
mov
movsb
nop
mov
xchg
lahf
mov
pop
fcompl
mov
push
push
sub
push
lods
lcall
push
leave
aad
xor
imul
xor
incb
negb
and
dec
push
into
int
lret
sbb
sbb
iret
mov
dec
jno
cwtl
lahf
negb
or
cld
mov
mov
dec
and
sbb
mov
jp
cmp
push
lcall
repnz
cs
sub
push
sub
mov
mov
and
cmp
pusha
sbb
out
cmp
add
repnz
mov
sbb
sbb
xchg
into
cmpsb
test
ja
mov
sub
mov
xor
xchg
sarl
sub
ja
fimuls
fbstp
popa
add
out
cmp
stos
add
sbb
push
repnz
ficoml
dec
sbb
cwtl
cwtl
adc
pushf
les
es
ficomps
outsb
mov
and
push
inc
gs
hlt
addr16
sub
call
cwtl
xor
mov
pop
add
clc
jecxz
inc
inc
into
adc
andb
add
data16
lcall
push
cld
icebp
insl
cwtl
add
push
push
sub
dec
pop
push
cmp
adc
outsb
rolb
movb
in
addr16
sub
dec
fcmovb
into
cs
imul
fprem1
roll
lcall
movsb
dec
ret
movsl
das
push
push
hlt
ret
xchg
and
lahf
mov
dec
pop
divl
cmp
jecxz
divl
lods
sbb
mov
add
out
jmp
rorb
mov
out
ljmp
xchg
mov
movsb
mov
out
ret
push
xlat
sbb
inc
mov
or
shl
pop
addr16
aas
pop
das
pop
pop
repnz
pop
das
push
mov
outsl
adc
ret
jle
aaa
repz
xor
cmpsl
xor
ret
pop
jnp
jg
jne
inc
push
push
les
or
outsl
pop
sbb
in
pop
pop
cmp
add
cwtl
adcl
jp
dec
mov
and
adc
decb
adc
sbb
pushf
mov
ret
xorl
pop
cmpsl
xor
and
sahf
pushl
subl
cmpsl
jae
test
repnz
xchg
repnz
les
cmpb
inc
push
outsl
cmp
push
adc
fisttps
mov
lock
repnz
shll
sbb
xor
jg
jmp
loope
sbb
or
sub
sbb
sbb
movsb
pop
sbb
je
bnd
jb
push
mov
inc
cli
aaa
cld
dec
push
inc
dec
xor
jle
rcll
pop
pop
in
xor
push
outsl
jbe
xabort
std
cmp
add
bound
adc
sar
test
mov
and
cmp
jno
popa
call
test
push
out
cmp
xor
jp
mov
ds
dec
inc
sub
sbb
ret
jmp
cmp
push
inc
push
adcl
je
scas
mov
or
out
cwtl
out
pop
mov
push
xor
or
std
pop
out
data16
jne
mov
jno
stos
decl
jecxz
xlat
mov
lcall
mov
cwtl
sbb
or
sbb
sbb
fiadds
cmp
or
dec
mov
movsb
add
push
add
add
jle
fstpl
das
fbld
pop
mov
cs
daa
repz
push
popf
insb
out
inc
fdivrl
add
sar
test
cmc
adc
adc
pop
xchg
hlt
sbb
mov
dec
mov
add
je
mov
leave
xor
das
ja
jle
mov
fwait
mov
jle
mov
add
add
push
dec
cltd
mov
outsb
add
xchg
push
fwait
stos
pop
xor
mov
mov
outsb
divb
aaa
jmp
les
pop
orb
imul
out
int3
or
adc
push
dec
lret
dec
ret
inc
rclb
mov
pop
fidivl
testb
sbb
repz
andl
adc
pop
pop
mov
int3
mov
mov
jo
cld
into
rorl
xchg
mov
loope
mov
subl
push
jbe
ljmp
pusha
xchg
insb
jg
repz
in
insb
xor
pop
add
testl
cmpb
fiaddl
rclb
mov
daa
jp
aad
in
xor
dec
out
aad
andl
add
inc
cwtl
sub
sub
or
repnz
inc
lock
cwtl
mov
hlt
push
popf
and
jae
pop
dec
cmpsb
push
test
sbbb
sbb
mov
jl
and
add
negl
xorb
daa
xor
pusha
push
dec
mov
jae
mov
out
dec
lcall
lcall
aaa
pop
pop
xor
iret
incl
pusha
cmp
xor
add
jne
sub
push
jnp
and
repnz
repz
aas
scas
in
mov
mov
mov
mov
add
loopne
arpl
fcmovu
and
loopne
nop
pop
jmp
subl
scas
push
lods
inc
imul
add
sbb
xchg
inc
cmp
fdivs
mov
jg
cld
mov
daa
fwait
mov
and
lahf
xchg
jg
popf
scas
dec
repnz
sbbl
fstp
mov
inc
ja
sbb
add
or
push
aaa
mov
enter
lock
lock
or
aas
cwtl
cmp
repnz
cmpsl
dec
adc
xchg
fdivr
dec
js
lock
pop
mov
aad
ljmp
shll
arpl
pop
push
xlat
mov
les
sbb
xor
dec
outsl
pop
mov
mov
and
cmp
adc
and
call
cltd
loopne
insl
sbb
mov
pop
inc
jbe
lahf
or
push
fdivrl
cs
sahf
gs
adc
push
mov
jecxz
pushf
mov
xchg
sub
outsb
jle
pop
lret
bound
or
call
mov
xor
mull
push
cltd
data16
pop
cltd
aaa
je
push
imull
scas
cs
in
cmpsl
loop
mov
leave
imulb
sub
cmp
push
jp
aad
lods
push
rclb
jg
cld
sti
pop
sub
fbld
push
cmpsb
insl
movsl
pop
xchg
movsb
cmpb
add
or
test
andb
push
dec
fmull
jle
mov
and
int3
pop
xor
and
xchg
mov
jle
xor
cmp
sarl
out
xchg
in
xor
xor
mov
iret
pop
push
cltd
sub
or
mov
mov
js
xlat
xor
jp
push
push
call
or
call
and
xchg
fdivl
ret
dec
xor
je
ja
jle
popf
jle
scas
mov
loop
and
push
daa
lock
cwtl
loope
idivl
inc
loopne
jecxz
jg
add
add
js
add
pop
je
adc
mov
lret
das
call
sbb
xchg
pop
fs
and
add
inc
jne
lods
ret
sub
sub
lods
dec
lods
xlat
inc
push
mov
add
sahf
dec
xchg
es
pop
cmpsl
xor
xor
inc
mov
push
mov
sub
jns
bound
pop
inc
cmpsb
push
aas
push
push
push
xchg
xchg
pop
jle
push
inc
mov
shrb
add
jge
push
fs
sub
in
cmp
test
data16
inc
cmc
out
lds
sbb
in
das
jl,pt
pop
pusha
ss
mov
pop
pop
xor
popf
orl
or
jle
shll
ret
testb
and
jl
out
and
jle
in
enter
pop
loop
mov
lahf
rol
iret
loope
shlb
jle
mov
push
ds
ror
aam
xchg
lret
xchg
aas
add
repnz
enter
in
popl
jg
cmp
mov
xchg
icebp
inc
jmp
test
xor
lret
pop
fidivrl
cmp
pop
sub
fadds
add
xor
out
das
daa
je
mov
gs
fwait
mov
fsubs
pop
jno
ret
cmc
jne
mov
mov
lret
daa
push
inc
xchg
adc
pop
leave
xor
inc
subl
je
es
sbb
dec
mov
mov
clc
sub
loop
lahf
test
dec
loope
push
outsl
dec
test
fs
popf
sbb
ffreep
pop
add
shl
xchg
sub
sub
loop
scas
mov
inc
icebp
ret
das
es
push
dec
repnz
repz
push
rcrl
negl
jge
dec
xlat
fs
test
jg
movsb
stos
imul
lea
add
das
call
xchg
or
shll
sub
pop
repnz
sub
mov
or
push
jg
xor
add
addb
mov
js
into
int3
inc
adcb
mov
test
dec
call
addb
bound
dec
mov
mov
or
dec
lods
and
call
dec
notb
push
cmp
inc
icebp
add
jae
into
xchg
mov
xlat
lahf
es
inc
jp
mov
sti
sub
stc
sub
adc
lea
enter
into
cmp
inc
push
xchg
pop
pop
mov
fdivrs
mov
call
xchg
aaa
rcrb
xchg
xchg
cmp
stos
out
inc
ret
js
ds
daa
out
mov
frstor
loop
and
ret
scas
mov
hlt
dec
ljmp
add
push
mov
dec
mov
mov
iret
jbe
jg
cli
insl
push
popf
pop
into
dec
repz
xchg
inc
pop
xorb
mov
xor
ret
dec
adc
lahf
ficompl
adc
in
dec
daa
fwait
push
mulb
xor
xchg
jmp
les
and
outsl
daa
pop
scas
push
ljmp
mov
ljmp
xchg
push
mov
pop
loop
mov
call
sbb
mov
lret
mov
clc
fs
sbb
mov
mov
pop
das
aam
popf
movsbl
rcrl
lret
mov
mov
mov
ds
pop
fmul
dec
pop
lea
out
jg
xchg
dec
inc
std
cmp
sti
push
xchg
js
addb
jno
pop
popf
mov
xchg
cmpsb
pusha
sbb
ficoml
lcall
push
popf
dec
sub
jle
mov
fwait
mov
das
push
sbb
testl
adc
mov
cmpl
iret
push
jo
mov
fmuls
push
and
jno
out
or
cmp
dec
inc
es
sub
sub
inc
push
jnp
arpl
jl
sub
popa
stc
inc
dec
insb
aas
ljmp
xchg
das
jg
stc
scas
or
loop
movsb
xor
or
push
add
stos
cld
ret
push
xorl
xor
fwait
lods
loope
xor
mov
bnd
or
push
xchg
mov
xchg
or
push
mov
add
and
ljmp
test
xchg
push
fisubrs
sub
daa
fldenv
inc
mov
sbb
add
int
inc
jge
cmpsb
inc
lcall
mov
sub
add
orl
adc
xchg
ljmp
ret
lcall
mov
or
jo
icebp
pushaw
arpl
or
lds
mov
repnz
inc
lock
xor
pop
push
cmp
jle,pt
fwait
imul
repnz
idivb
or
cmp
mov
push
cwtl
add
outsb
xchg
xchg
ja
mov
xchg
je
js
inc
sbb
in
flds
dec
inc
push
xchg
and
enter
sub
push
mul
nop
sahf
mov
add
mov
sub
inc
test
std
in
mov
dec
mov
jecxz
or
cmp
sbb
sbb
es
mov
cmp
cwtl
mov
mov
lods
mov
icebp
cs
out
cmpsb
ss
clc
dec
mov
lds
dec
and
inc
jb
inc
call
mov
push
jb,pn
cmp
jg
and
lds
dec
mov
mov
jle
ret
cmove
in
cmp
fwait
inc
jecxz
hlt
sub
cli
leave
aas
mov
cmp
loope
bound
out
aad
imul
pusha
xchg
push
cmpsb
cmp
test
jg
sub
or
push
sbb
sbb
xchg
and
add
push
bound
nop
dec
pop
pop
dec
jae
pop
loop
fldcw
cmp
shll
xor
pop
mov
push
mov
push
es
inc
lea
xchg
sbb
rcrl
insb
xor
pop
pop
ucomiss
jbe
xor
punpckhdq
int3
mov
xchg
push
fstl
clc
je
jecxz
or
test
mov
sub
subl
pop
into
jg
sbb
das
cmpb
inc
mov
jnp
outsl
jecxz
or
loop
pop
inc
in
and
sub
add
dec
enter
mov
orl
and
ss
dec
sbb
ficoms
mov
adc
popa
add
into
sub
or
cmp
sbb
add
jle
popf
push
jae
jecxz
fwait
xor
lock
push
or
jo
sub
inc
or
jle
mov
lods
sbb
div
inc
cmp
pop
js
mov
jl
add
xchg
add
outsl
ficomps
clc
xor
lock
aam
xchg
sub
enter
into
inc
pop
ja
cmp
loope
stos
leave
push
cld
cmc
cmp
xor
add
pop
loop
inc
add
fildl
push
stos
sahf
sbb
sub
mov
lret
lods
cli
hlt
pop
push
xchg
push
adc
inc
mov
push
pop
repnz
sub
add
sub
jo
lcall
pop
loop
dec
add
lea
dec
sbb
inc
add
and
adc
push
mov
into
int
bound
sbb
cmp
inc
push
lods
in
push
ret
sbb
sbb
mov
ss
xchg
pusha
jmp
cmp
dec
or
lods
pop
sbb
stos
fwait
es
mov
inc
push
pusha
pop
or
sub
sbbl
sbb
pop
push
sub
push
xor
mov
inc
mov
lcall
mov
scas
push
loop
inc
or
sti
or
add
fldcw
sbbb
movd
repnz
rorb
mov
xchg
add
sub
pop
cmp
repnz
movsb
test
or
mov
adc
add
push
testb
pop
push
jo
adc
inc
or
adc
loop
or
lgs
xor
testl
repnz
sub
mov
bswap
dec
cmp
sub
lods
mov
imul
adc
inc
test
out
setne
lret
loope
xchg
sbb
push
push
mov
or
cmp
or
loope
cmp
add
xchg
int
cmp
adc
movsb
mov
mov
rdtsc
leave
cmovl
inc
add
dec
outsl
jg
inc
cmc
or
push
pop
jmp
ss
cmpsb
xor
push
cwtl
incl
mov
dec
lret
pop
jle
mov
pop
inc
mov
fisubrl
push
enter
popf
push
inc
in
mov
mov
jnp
es
push
mov
adc
jg
cs
xorl
push
popa
loope
ret
ljmp
mov
or
fiadds
fisubrl
inc
mov
push
mov
add
push
decb
sbb
cli
sub
flds
sbb
dec
sbb
das
sub
iret
ds
pushf
loopne
sahf
cmp
sub
enter
call
and
xchg
movntq
cs
inc
ss
popf
mov
js
imul
out
inc
sbb
mov
es
imul
dec
mov
addb
push
mov
sbbl
and
pop
xor
mov
mov
adc
js
jg
push
xchg
daa
int
mov
dec
dec
mov
sbb
jg
shll
dec
xor
jbe
xchg
push
js
sub
pop
dec
jnp
sbb
ret
dec
mov
or
mov
lds
mov
pop
jmp
in
mov
fdivs
stc
jbe
adc
pop
dec
jno
jge
sub
rcrb
or
mov
pop
mov
inc
sbbl
xor
push
loope
mov
and
xchg
popf
inc
cmc
test
fidivrs
mov
fidivrl
xchg
adc
dec
push
dec
dec
mov
divb
adc
scas
sbb
out
mov
mov
jbe
out
faddl
cmp
jg
xchg
fidivrl
dec
cltd
int3
sbb
inc
aaa
hlt
inc
cli
ud1
cmpsl
movsb
inc
cld
push
mov
push
cmpsl
jno
sbb
loope
dec
out
std
dec
inc
ret
inc
cmpsb
push
inc
pop
add
add
das
pushf
sbb
sbb
push
lret
mov
sahf
pop
xor
jne
lret
dec
sbb
in
test
xchg
int
mov
cltd
mov
pop
jecxz
jnp
cmp
jle
xorb
outsl
fisubl
or
and
mov
push
loop
loope
int
test
scas
adc
ret
lods
adc
mov
hlt
sbbl
stc
jmp
jle
sub
adc
cld
loop
jmp
dec
xor
call
fs
xor
add
je
and
xchg
enter
dec
xchg
mov
out
fcomi
adc
jge
jle
int3
adc
mov
inc
call
inc
adc
jns
sbb
lcall
mov
jnp
mov
inc
add
aad
add
sub
and
and
mov
jo
mov
mov
sub
jmp
das
pop
repnz
das
stc
xchg
adc
push
sti
ljmp
xor
mov
xor
leave
inc
jle
rcll
mov
pop
pop
pop
cwtl
and
and
das
fadd
ret
sbb
loop
movl
cmp
mov
ficomps
call
stc
dec
nop
push
movsb
movsb
lods
gs
loop
mov
fldz
dec
xchg
fisttpl
and
repz
jp
push
and
jbe
fsubs
arpl
add
movsl
sub
addr16
insb
movsl
enter
pop
xchg
push
pop
movsb
jo
nop
test
roll
dec
shrl
movsl
dec
mov
out
cmc
push
das
mulb
les
mov
aad
mov
iret
pop
jle
cmc
aaa
lock
adc
cmp
pop
int3
xchg
fimull
mov
or
pop
adc
mov
and
loope
test
movl
arpl
outsb
pop
sbb
and
fdivrs
pop
sbb
add
sub
imul
sbb
jb
lods
bound
ljmp
mulb
pop
xor
es
push
mov
pop
movsl
flds
xor
cmp
sbb
das
push
cmp
pop
outsl
push
test
sub
mov
pop
sbb
push
and
mov
mov
push
lcall
xor
mov
inc
jg
sti
arpl
inc
or
mov
ret
pop
push
sbb
or
cli
xchg
mov
push
movsb
xchg
xchg
push
lds
sbbb
lea
out
ljmp
add
je
mov
fmuls
add
xor
jg
push
mov
mov
pop
loop
hlt
mov
std
and
testb
cmp
popf
insl
fistpll
dec
cwtl
jmp
dec
test
pop
adc
test
lods
loop
sbb
jecxz,pn
or
xor
and
mov
dec
jecxz
gs
and
cmp
icebp
mov
arpl
mov
cwtl
repnz
outsl
sbb
jg
shll
paddb
outsb
jle
call
pop
or
imul
in
sbb
sbb
fildll
faddl
dec
sbb
daa
cmc
sub
and
sub
mov
mov
jge
scas
push
pop
add
sbb
fwait
mulb
fsub
sub
jg
sbb
dec
adc
repnz
xor
ret
cmpb
mov
sbb
scas
inc
or
ja
mov
push
bound
fnstcw
push
std
popf
jl
dec
loop
hlt
inc
lea
dec
inc
jbe
xorl
and
mov
add
sbb
pop
adcl
movsb
push
xchg
bound
lahf
pop
adc
iret
repz
or
adc
fwait
sar
adc
mov
imul
sahf
jg
iret
jle
icebp
call
out
outsb
ret
and
aam
daa
jmp
lret
lods
cmp
inc
loop
mov
sti
rolb
mov
adc
pop
sub
xor
xchg
jge
mov
mov
ret
pop
cmovae
push
test
dec
push
loop
negl
inc
movb
or
mov
lret
or
bound
mov
xor
inc
aad
mov
jp
inc
adc
addr16
adc
push
xor
dec
sub
add
popf
dec
aaa
mov
out
inc
arpl
pop
cmc
adc
mov
mov
ret
leave
add
dec
add
jle
or
sub
mov
int3
mov
xor
push
lds
or
fwait
adc
cli
test
loop
mov
leave
xchg
inc
or
sub
mov
ffreep
push
jne
loope
xor
out
out
mov
add
sub
insl
dec
add
notl
inc
fadd
push
fisubrs
mov
ja
cmpsb
shrl
mov
and
out
cmp
mov
jg
int
mov
and
roll
cmp
pop
dec
sbb
add
or
add
push
inc
mov
pop
adc
ljmp
repz
inc
xchg
jle
out
push
loope
adc
pop
sti
jb
push
xor
rcrb
sbb
and
addl
or
jg
pusha
sbb
and
pusha
pop
dec
sub
lcall
cmp
add
mov
mov
push
in
push
call
pop
arpl
in
jae
sbb
sbb
scas
xor
aam
enter
test
pop
or
xor
cmp
jecxz
adc
pop
lret
mov
orl
mov
mov
dec
ret
sub
dec
push
and
out
push
adc
pop
push
dec
add
cltd
push
add
adc
push
mov
lret
inc
pop
mov
fwait
mov
loop
jle
std
stc
loopne
popf
popf
in
inc
push
add
mov
push
xchg
outsb
and
sub
sub
into
adc
and
sahf
sub
addb
inc
rclb
ss
mov
sub
nop
mov
mov
cmpsb
outsl
test
mov
and
dec
mov
leave
nop
xor
push
mov
add
mov
xchg
out
dec
push
mov
jecxz
movsb
pushf
es
test
lret
sub
int
fiadds
iret
movsl
cmc
aas
mov
jae
imul
or
push
xor
jle
hlt
aam
jns
fstpl
push
ja
out
and
imul
les
dec
pop
pop
pusha
sbb
fidivs
and
jg
mov
xor
cmp
sbb
enter
sahf
frstor
mov
mov
jbe
hlt
xchg
ja
and
test
in
dec
test
pop
push
pop
loop
popa
jns
xchg
rcrb
inc
sub
inc
sub
mov
cmp
jle
xor
ss
sbb
push
mov
gs
add
xor
jg
js
add
popf
pop
std
pop
inc
out
insl
inc
xchg
lea
add
jle
loope
mov
or
mov
aad
xor
push
ret
loop
mov
push
pop
pop
pop
mov
iret
push
rcrb
xor
or
je
rcr
pop
mov
push
cli
adc
inc
mov
inc
outsb
push
rclb
pop
int3
jne
push
ret
mov
ds
cmp
ljmp
fiadds
hlt
outsb
arpl
icebp
cmc
andb
das
frstor
aam
dec
sub
push
movsb
imul
popf
nop
pop
pop
sub
repnz
push
std
adc
ds
push
cmp
outsb
into
into
loop
test
cmp
loop
cmp
adc
adc
sbb
and
aaa
lock
xchg
add
push
xor
pop
imul
or
push
mov
mov
inc
add
pop
dec
add
adc
push
sub
cs
pop
sub
inc
add
jle
add
cmc
mov
mov
mov
xorl
cli
push
lcall
iret
adc
movsb
lock
sub
adcb
xchg
hlt
xchg
cltd
xor
ret
movsl
or
cld
xchg
push
arpl
movsl
stos
clc
or
int3
mov
mov
shl
xor
push
sbb
hlt
push
aas
sub
icebp
sbb
inc
sub
lods
xor
out
enter
or
mov
orb
into
loop
jecxz
loopne
cltd
xchg
xchg
push
xor
inc
mov
fmull
cld
orl
mov
pop
sub
std
sbb
test
das
bound
and
mov
mov
addr16
dec
gs
js
push
and
add
sbb
std
bnd
fbstp
outsb
movsb
outsl
push
pop
pushf
lcall
nop
dec
xchg
je
pop
test
movsl
dec
iret
mov
mov
testb
pop
xchg
sub
dec
or
mov
cmp
dec
lcall
repz
lods
sti
mov
pop
popa
cs
xor
fldt
xor
pushf
add
adc
sub
add
loope
pop
js
jecxz
xchg
cld
test
pop
jg
pop
cmp
dec
pop
add
cmp
les
mov
arpl
outsl
inc
inc
xchg
inc
or
add
dec
int3
sub
dec
push
sbb
push
push
aad
int
scas
adc
push
loop
fmul
adc
std
adc
jg
mov
pop
xchg
dec
cmpsb
mov
dec
daa
cmp
mov
lret
inc
xor
inc
mov
sub
and
cltd
add
cmp
pop
data16
push
xchg
orl
incl
insl
pusha
xchg
mov
gs
clc
popf
push
movsb
pop
push
stos
pop
jo
pop
sbb
mov
add
mov
mov
dec
aas
adc
cwtl
mov
jnp
sbb
loop
mov
adc
aad
repnz
das
push
mov
ret
mov
sub
pusha
stc
mov
push
sbb
mov
jmp
popa
mov
and
fs
jle
and
scas
bound
sbb
inc
out
adc
push
movsl
dec
adc
lret
call
into
sahf
ficoml
and
sub
stos
les
inc
jp
popa
mov
sbb
xor
cmp
xor
jmp
add
pop
inc
mov
out
fs
pop
enter
xchg
aam
arpl
jae
pop
push
inc
xchg
mov
repz
inc
into
leave
or
insb
mov
add
cmp
xor
aaa
cmp
sub
add
cld
inc
adc
adc
jge
sub
jmp
jg
push
mov
clc
pop
mov
hlt
jae
inc
fs
and
test
jns
bound
data16
pusha
add
pop
movsl
pushf
ljmp
or
push
loope
mov
das
loope
pop
xor
adc
pop
and
pop
jbe
pushf
jg
lods
loope
leave
popf
or
fwait
loopne
adc
subl
jb
xchg
sub
shrb
in
add
add
cmp
pusha
pavgw
mov
cmpb
cmp
scas
inc
sar
mov
arpl
popa
mov
stos
loopne
loop
xor
repz
jle
mov
insb
movsl
adc
cmpsb
lcall
ret
lods
lock
jecxz
xor
push
jne
or
loopne
xor
fidivrs
sahf
xorb
mov
jne
add
pop
xchg
cs
mov
sbb
pop
out
push
ds
lret
in
lret
xor
add
sub
in
adc
pop
divl
sbb
sbb
sbb
sti
xchg
push
xor
xor
xor
add
push
add
loope
lds
sahf
ljmp
inc
sbb
sahf
push
hlt
cmp
inc
nop
gs
repz
or
cs
iret
inc
add
pop
mov
inc
add
add
mov
xchg
int3
jl
mov
jns
push
jge
andl
sub
int
mov
lahf
popf
pop
push
mov
inc
sbb
push
int
lret
dec
sub
mov
add
xchg
cmp
pushl
orb
and
icebp
sub
push
shrl
ficoms
mov
xchg
insl
pop
insl
fsubrs
je
push
pushf
jne
loop
jp
arpl
sbb
loop
xchg
xor
push
add
push
cs
aam
inc
ja
sbb
lret
mov
mov
ljmp
or
into
in
add
movlps
mov
push
cmp
addb
xor
insb
or
nop
cmp
push
shlb
sub
out
mov
fs
mov
int
jle
leave
pop
add
adc
xor
sub
push
adc
xchg
inc
dec
pop
sub
mov
sbb
or
rolb
ret
or
jecxz
pop
in
jbe
ror
adc
fistps
jecxz
cwtl
sub
repnz
loop
andb
sub
inc
cmp
push
into
stos
mov
inc
or
js
mov
stos
xchg
enter
push
push
xchg
xor
popf
jp
mov
imul
push
lret
pop
pusha
jl
fcompl
adc
sbb
loop
aad
mov
xchg
ss
mov
nop
pop
pop
lret
xor
cmc
and
sub
sahf
or
pop
push
xor
dec
sbb
cld
push
popa
jge
iret
les
adc
arpl
push
lret
sar
pop
loope
mov
cmc
lahf
out
out
jbe
test
fwait
cmp
test
xor
orps
pop
iret
loope
inc
adc
push
test
push
mov
add
lret
cmpsb
pop
inc
mov
xor
mov
sub
leave
mov
rolb
loop
sbb
ja
loope
jb
rorb
loop
stc
and
outsl
dec
jle
xor
ret
ss
stc
cmp
mov
mov
jle
sahf
dec
into
mov
clc
xchg
dec
mov
pop
add
sub
jne
pop
and
das
or
cs
mov
and
bound
inc
add
mov
adc
insb
jg
neg
pop
insb
fildll
adc
adc
push
adc
pop
loop
loopne
je
pop
arpl
insb
add
push
shl
ja
sub
scas
and
nop
xchg
dec
nop
fadds
aaa
xor
std
inc
ret
mov
jne
dec
push
inc
mov
cmpsl
repnz
add
sub
dec
iret
rclb
jmp
mov
lret
mov
insl
pop
jg
xchg
loope
js
lods
ret
shr
inc
inc
sbb
xor
arpl
push
or
jg
mov
pop
outsl
sbb
jecxz
adc
add
scas
xchg
mov
lret
xor
outsl
in
push
and
mov
jle
xor
fsubrs
int3
cld
mov
sub
and
out
rcll
sub
mov
sbb
sub
ljmp
cs
in
adc
aad
inc
push
or
sbb
adc
bound
jb
mov
push
cmp
aas
xor
jmp
xchg
out
sub
outsb
mov
sti
scas
push
jnp
faddl
jne
pop
inc
ds
int
lock
and
inc
pushf
dec
sub
sbb
sbb
pop
adc
outsl
sarl
sub
pop
mov
xor
xorl
in
daa
bound
insl
rcrb
imul
xor
add
ja
jle
sbb
je
sub
adc
test
jle
loop
jecxz
testl
sub
adc
mov
mov
xchg
sbb
jg
popa
jmp
and
push
es
clc
lahf
push
jp
fstpt
push
popf
xchg
pop
addl
call
cmp
cs
out
cmp
pusha
sub
sbb
dec
jo
loop
push
sbbl
xchg
cmp
orb
dec
pop
lock
addl
sbb
loop
lods
jo
xchg
stc
cld
xor
jmp
rorb
cmp
orl
sarl
adc
xor
add
mov
mov
pop
loop
or
mov
mov
cmp
pop
push
das
in
insl
pop
sbb
shl
iret
scas
dec
lahf
push
aad
pop
popl
inc
mov
inc
ret
pop
repnz
mov
ds
testb
sbb
rcll
jb
scas
stos
push
xlat
hlt
xchg
mov
dec
sar
mov
pop
mov
loop
push
jge
dec
cmp
popf
sbb
sub
addl
jno
scas
adc
dec
xchg
mov
test
rolb
addb
sbb
into
push
cmp
add
sbb
dec
inc
or
loope
jbe
dec
loop
jg
add
rcrb
movl
mov
pop
js
xchg
je
xchg
jmp
sub
jns
and
insb
test
xor
loop
dec
add
into
inc
inc
add
pop
sbb
out
loop
sarb
dec
dec
hlt
in
pop
popa
pop
ljmp
mov
cmp
pop
scas
xor
loopnew
add
add
inc
dec
loope
sbb
mov
jbe
push
and
addr16
adc
call
stos
and
sbb
pusha
pavgb
sbb
mov
cwtl
test
stc
mov
cld
mov
adc
lds
push
or
std
negl
jne
pop
dec
dec
xorl
loop
lcall
dec
lahf
push
mov
mov
pop
sbb
enter
xor
xchg
paddusw
out
dec
pop
es
inc
clc
ret
shrb
popf
sub
test
or
push
mov
filds
test
sbb
scas
push
pop
adcb
and
push
mov
mov
cs
push
push
neg
scas
das
sbb
je
es
in
inc
mov
adc
push
cs
pop
scas
fdivs
jecxz
pushf
sarl
popa
cwtl
bound
imul
ljmp
xor
dec
push
rcll
mov
bound
xchg
ja,pt
stc
jae
es
dec
xchg
fadds
and
stos
inc
inc
divb
sub
sbb
pop
dec
test
inc
sbb
sbb
xor
adc
fstpt
cmp
mov
lds
iret
push
test
mov
lret
jnp
loope
sub
mov
xor
jecxz
or
out
loop
or
enter
fnstcw
adc
push
sub
sub
dec
mov
rorl
out
leave
add
mov
jl
popf
stc
mov
and
or
nop
ret
push
push
cwtl
sub
add
add
sub
sbb
push
push
in
rorb
add
pop
in
sti
pop
pop
pop
jl
ljmp
movsl
or
dec
xor
fdivrp
pushf
add
test
jg
add
int3
pop
mov
adc
cmp
pop
icebp
inc
ret
push
das
das
mov
sbb
adc
es
inc
cmp
nop
sbb
adc
mov
cmpsl
sub
in
push
mov
push
xchg
popf
push
add
add
add
pop
mov
xor
pop
push
cmp
xchg
mov
xchg
popa
das
sbb
xchg
xchg
xchg
add
jne
popa
jp
mov
mov
sub
movsb
mov
sub
fs
dec
stos
leave
jge
dec
aaa
jne
cltd
adc
push
sub
add
mov
movsb
sub
jge,pn
push
pop
ja
sub
mov
adc
add
movq
or
int
sahf
sub
add
stc
adc
mov
dec
push
call
pop
cmp
fwait
in
jae
enter
outsl
inc
push
test
jbe
xchg
pop
bound
cli
das
cmc
xor
das
and
sahf
mov
jle
icebp
inc
jo
cmp
sti
cs
rclb
sub
add
fldenv
push
and
cmpsl
fidivrl
add
mov
inc
pusha
xor
and
inc
jne
fisubl
shlb
scas
sub
and
loop
fcmovnbe
push
jl
movsl
push
sbb
and
cmpsl
xchg
cs
and
loope
sbbb
push
fwait
sahf
jg
jnp
mov
mov
imul
pop
loope
or
adc
pop
popf
jnp
push
lcall
inc
adc
fs
fistpl
inc
and
dec
xor
lret
mov
adc
nop
in
xorb
xchg
cmpsb
repnz
push
push
or
add
add
pop
inc
into
hlt
aam
das
ficoml
push
jne
xchg
int
loop
ds
xchg
fsts
ljmp
xor
jp
loope
out
pusha
jno
lods
jg
mov
in
sti
into
adc
popa
xor
jge
xchg
push
mov
mov
xchg
push
stos
sti
imul
dec
xor
dec
mov
mov
hlt
popf
stc
inc
jp
pop
jmp
jo
les
insl
xor
jbe
addl
inc
call
push
rcr
out
xchg
mul
into
push
leave
mov
sbb
mov
inc
nop
mov
dec
les
sbb
cmp
xchg
push
xchg
enter
push
push
push
sbb
lcall
and
mov
out
jo
adc
xor
dec
das
or
jno
aam
ja
loop
sub
lods
ror
mov
cld
ds
push
inc
cld
dec
inc
in
cmp
imul
lret
ja
inc
pop
data16
add
and
fwait
rcrl
push
rsqrtps
bnd
lahf
dec
adc
pusha
sbb
dec
mov
ljmp
jbe
mov
lods
fisubrl
mov
push
mov
ja
inc
jl
mov
movsb
pop
stos
leave
mov
loope
loopne
hlt
cli
cwtl
xlat
mov
fnsave
movsb
jp
push
pop
stos
or
xor
je
jno
movsb
and
push
ja
sub
mov
inc
pushf
mov
jb
and
mov
adc
cld
sub
sbb
pushf
mov
enter
rcl
push
cwtl
push
enter
cmp
out
cltd
icebp
and
pop
inc
out
mov
adcb
insl
imul
cmp
sub
mov
std
inc
mov
int3
mov
dec
push
ret
sub
xchg
imull
add
inc
pop
dec
in
jno
mov
sbb
in
mov
ljmp
mov
mov
iret
data16
jl
das
bound
jne
flds
cmp
movsb
dec
bound
xchg
jp
sahf
and
inc
cwtl
fmulp
hlt
ror
sarb
mov
outsb
inc
jl
repnz
loop
xor
add
xchg
roll
push
lret
cmp
push
mov
bnd
push
popa
clc
and
add
adc
sbb
dec
fiaddl
in
mov
inc
sbb
into
hlt
jo
lret
je
pushf
adcb
cmc
sub
push
loop
xchg
pop
pop
mov
shll
outsb
xor
pusha
mov
mov
mov
shl
and
fnstenv
mov
xor
xor
cmc
int3
subl
jl
inc
cwtl
cmp
sbb
mov
sub
cmp
xor
jge
push
pop
loop
out
sbb
aam
jp
loope
out
jbe
repnz
pop
or
push
xor
inc
lret
mov
and
sahf
xchg
mov
insb
andl
pusha
add
lcall
dec
ret
sbb
push
out
syscall
add
dec
inc
lahf
dec
hlt
lret
and
decl
shlb
add
sbb
rcll
jno
cld
clc
and
add
pop
dec
or
loop
cmc
lahf
or
pushf
inc
mov
sti
and
and
inc
and
outsl
jle,pn
mov
adc
subl
push
sbb
xor
scas
cltd
das
jg
jb
imul
movsl
lret
xor
inc
jg
scas
sub
in
jno
mov
sub
dec
adc
aad
xchg
push
lret
push
fimull
mov
fildl
and
or
sbb
mov
mov
cltd
int3
push
or
sbb
or
leave
arpl
jle
or
add
out
arpl
ret
popf
jo
or
insl
sbb
sbb
fstp
mov
cli
jle
repnz
por
sub
pop
cs
dec
mov
fsub
xchg
mov
add
adc
xchg
cmp
sbb
jle
fsubrp
mov
mul
mov
out
and
out
dec
mov
lcall
idivb
mov
cmpsb
arpl
imul
inc
add
mov
pop
xchg
stos
fcomps
mov
xchg
sbb
std
push
ja
xchg
and
mov
push
imulb
int3
dec
addr16
push
mov
dec
or
push
mov
pmuludq
and
dec
jns
repnz
addb
addb
bound
js
test
sbbl
cmpl
xchg
add
orb
or
dec
xchg
dec
push
pop
idivb
out
std
push
out
insl
pop
lds
lahf
and
dec
cwtl
aaa
loope
das
jecxz
fcmovnbe
sub
push
pop
pop
pop
mov
jb
or
cs
inc
aas
fwait
jns
jl
cs
testb
adc
pop
add
popa
push
mov
xor
xchg
imul
or
imul
mov
dec
stos
ljmp
pop
fdivrs
xchg
add
out
shrb
andl
ret
loop
push
push
inc
push
sar
pop
jge
nop
inc
in
add
pop
movsb
in
scas
sub
out
mov
or
and
dec
inc
cld
pop
push
sbb
adc
or
popf
sub
ret
test
fadd
sbb
movsl
mov
jmp
outsb
xlat
xchg
bound
adc
push
add
enter
cmp
xchg
mov
fcompl
dec
xor
pop
sbb
popf
push
add
pop
cltd
sti
lcall
lock
scas
push
cmc
and
cld
sub
loope
sbb
xor
push
jg
cmc
add
fbld
xlat
gs
jnp
ds
add
js
pop
loop
lods
fwait
ja
cvttps2pi
adc
fwait
add
in
mov
std
scas
shlb
and
and
pop
pop
and
sti
xchg
push
add
movsb
or
adcb
add
cli
adc
push
mov
xor
sarl
fsubs
arpl
cmp
mov
push
and
adc
rolb
imul
jb
dec
add
outsl
out
lret
fs
cmp
jmp
int
lods
push
jg
aas
hlt
lods
lret
or
addb
testb
mov
push
add
out
add
cmc
enter
xchg
adc
idivb
pusha
jg
nop
dec
mov
pop
mov
lcall
int
test
pop
ja
out
mov
jmp
das
add
add
addb
mov
addb
inc
jno
sbb
or
push
jmp
pushf
push
enter
jg
fwait
mov
sbb
stc
jecxz
int
cmpsb
xor
xor
pop
dec
xchg
push
lahf
outsb
pusha
mov
ret
mov
fwait
cmp
xor
addr16
dec
sub
sub
inc
mov
pop
push
add
or
leave
and
loope
inc
mov
jecxz
adc
or
test
into
stos
lret
clc
std
mov
xchg
jno
cs
bound
dec
push
loope
rcrb
and
shl
jmp
insb
dec
inc
dec
or
or
cli
aas
dec
notb
or
leave
daa
std
mov
or
add
dec
inc
clc
add
mov
inc
notb
or
or
pop
or
popa
cli
mov
sbb
push
push
mov
ss
loop
push
or
push
mov
cmp
push
lock
adc
clc
imul
ljmp
jge
push
inc
clc
cli
push
mov
popf
stos
lret
dec
mov
mulb
stc
gs
lcall
popf
ret
fs
les
notl
cmc
clc
xchg
mov
into
sbb
dec
and
dec
dec
repz
jo
outsl
cmc
push
int
jnp
pop
movsl
fdiv
mov
xor
jns
or
pushf
mov
mov
jmp
es
inc
jg
jae
jecxz
or
test
cmpsb
data16
push
pop
leave
jecxz
js
popa
out
dec
js
inc
pop
in
add
aaa
jmp
cld
rol
shrb
adc
inc
cmc
mov
push
xchg
inc
fnsave
push
sub
xchg
aad
sub
std
dec
data16
mov
es
jle
xchg
add
or
jne
sub
bound
outsb
pop
xchg
or
out
enter
loop
enter
mov
vmovupd
or
jl
push
mov
lds
jbe
or
jg
bound
int3
test
notb
cli
pop
mov
loope
outsb
test
dec
dec
mulb
mov
inc
or
push
mov
xor
add
hlt
rcrl
push
fwait
xchg
std
dec
inc
movsl
cmp
sbb
pusha
dec
jns
jno
sub
lcall
pop
pop
popa
sbb
xchg
push
push
popl
or
jle
jb
inc
mov
inc
cmp
aaa
pop
xor
push
dec
aas
add
dec
test
out
stos
out
push
in
cmp
inc
jno
xor
ds
stos
mov
stc
dec
mov
dec
imul
outsl
push
sub
jbe
mov
cmp
leave
mov
mov
and
mul
mov
or
pop
pusha
jle
adc
test
subl
enter
das
pop
repnz
das
mov
lret
loop
inc
dec
inc
push
cmp
test
or
jne
adc
add
scas
sbb
sbb
not
rcrb
sub
mov
nop
inc
shl
sahf
pop
mov
jle
and
sub
stos
movsl
sarl
and
add
cmp
mov
sbb
andb
sbb
imul
dec
xchg
aaa
outsb
shl
clc
icebp
and
stos
sbb
popl
addb
xchg
addl
or
sbb
dec
or
out
lret
push
xchg
dec
sub
and
and
ds
cmp
or
or
pop
mov
sub
push
cli
stc
mov
test
ljmp
cli
push
cmp
fists
das
testb
out
mov
cmc
fidivrl
mov
out
pop
mov
lock
repz
jo
ret
add
or
xorb
push
out
cs
adc
test
pop
ret
out
call
jge
addl
mov
fsubs
and
sbb
into
pop
cs
cli
xor
inc
mov
arpl
inc
xchg
call
dec
scas
lret
jl
daa
push
lcall
roll
or
lahf
or
shll
push
imul
or
mov
dec
push
loop
bound
icebp
dec
ss
xchg
xlat
add
lock
cwtl
roll
jb
adc
punpckldq
sub
mov
stos
mov
pusha
bound
pop
bound
lock
push
xor
pop
ss
neg
sub
inc
and
dec
dec
cmp
loop
or
lea
or
in
jae
inc
jg
fs
xchg
jae
lahf
push
push
sbb
pop
fldenv
pop
sahf
test
inc
mov
clc
aaa
xor
mov
pop
xchg
xchg
add
lret
das
addsd
loop
cmpsb
aas
call
sub
mov
mov
insb
scas
jp
push
mov
add
pop
xchg
aas
pop
mov
push
icebp
pop
pop
add
out
das
sub
mov
or
dec
xorl
add
loope
push
insl
loop
xor
outsl
or
movlps
es
push
sub
dec
stos
sub
sbb
fs
sub
add
or
leave
add
push
jg
dec
inc
daa
int
mov
pop
cli
ds
nop
push
push
aas
testl
in
push
dec
inc
mov
lods
dec
add
in
jle
ja
jne
cmp
push
jle
and
test
add
xor
add
lret
and
out
cli
pop
or
decb
xor
les
nop
pop
xlat
fpatan
mov
jg
cli
test
and
pusha
test
push
push
xchg
and
pop
test
bound
add
test
outsl
testb
sbb
fnsave
inc
sbb
pop
pop
sbb
mov
testl
add
pop
ds
idiv
cltd
sub
push
pop
xor
mov
std
inc
int3
pop
inc
movsb
inc
push
jg
pushl
dec
orb
inc
xchg
sub
sti
scas
add
das
push
sub
jg
stos
jl
stos
add
sbb
sbb
push
std
pop
int
push
lcall
clc
fwait
and
and
lock
cmp
pop
sbbl
mov
hlt
call
or
lods
cli
fstl
pop
sbb
and
add
aam
fadds
std
enter
mov
jg
int3
xor
jb
add
orb
dec
xchg
and
sbb
sub
int
sbb
mov
pop
es
outsb
or
jmp
movsl
xor
cld
dec
push
dec
mov
int
xor
bound
cmc
xchg
sbb
dec
fmul
adc
dec
aaa
xlat
mov
inc
xor
fdiv
mov
pop
jno
test
pop
mov
bound
in
lea
dec
mulb
xchg
jno
sbb
xor
jns
xor
js
imul
ljmp
lret
in
mov
or
mov
loop
jbe
adc
cmp
sub
pushf
mov
cmp
cmp
movsb
sbb
lcall
jge
popa
mov
in
cmc
pusha
or
pop
and
fdivl
subl
fwait
sub
mov
add
cli
cmp
les
lret
repz
push
push
scas
inc
mov
lcall
inc
scas
mov
loop
mov
xchg
aaa
scas
push
xor
sub
mov
push
shr
xor
or
xchg
cs
sbb
sub
pop
pusha
mov
add
sub
add
xchg
adc
push
addb
inc
lret
cmp
addl
inc
sbb
stos
test
add
pop
loop
loopne
cltd
or
dec
sbb
bound
cmpsb
outsl
ds
sahf
bound
or
xor
sbb
or
jns
addb
mov
dec
dec
aam
inc
addb
sbb
and
mov
nop
dec
imul
es
cmp
jg
and
cwtl
push
std
jne
mov
pop
inc
pop
adc
or
out
cmc
out
popf
outsl
pop
sbb
and
and
repnz
cmp
fstpl
cmp
xchg
sahf
push
into
scas
add
rorl
dec
dec
lahf
roll
sub
mov
jo
dec
xchg
fwait
sbb
dec
sbb
mov
adc
loop
mov
and
stos
adc
and
push
sbb
and
add
rorl
add
inc
fwait
dec
clc
pop
addr16
imul
dec
sub
cltd
jno
aaa
sub
jl
lods
out
cwtl
jnp
ror
or
xchg
mov
clc
sbb
push
or
mov
push
push
str
out
adc
xor
pop
pop
inc
dec
jbe
das
push
inc
mov
adc
jo
pop
sarb
test
cmpsl
or
xchg
add
cld
dec
sbb
cmp
dec
xorb
or
loope
lcall
lcall
das
fld
int3
sub
sub
mov
lods
popf
mov
xor
clc
cmp
push
or
or
push
push
fcomi
and
ret
insb
push
sbb
mov
fs
or
pop
xor
xor
mov
mov
insl
out
inc
cmp
mov
movsb
push
mov
or
xchg
push
jns
leave
cmp
jmp
out
pop
lret
loop
or
mov
xor
push
push
mov
sahf
dec
xor
jns
into
ret
dec
addb
xor
cld
lret
adc
jnp
inc
pop
pop
in
jnp
inc
pop
pop
dec
push
sub
push
scas
or
jae
inc
std
mov
push
loope
and
andl
sub
sbb
mov
pop
mov
scas
adc
or
xchg
xor
push
pop
adc
add
movsb
loop
pop
decl
xchg
adc
and
enter
pop
fdivrs
push
mov
inc
int
repnz
dec
sbb
repz
sbb
loop
stos
pop
enter
mov
sbb
sbb
outsb
xor
cmp
adc
adc
sub
mov
ret
dec
clc
inc
subl
daa
mov
mov
das
xchg
pop
xor
stos
sub
lahf
pop
mov
ljmp
xchg
xchg
sub
cltd
sbb
cmc
pop
int
jbe
into
push
test
mov
add
testl
sbb
mov
adc
add
daa
sub
mov
push
jle
mov
push
push
pushf
mov
stos
push
xor
popf
mov
test
stos
cs
pusha
aas
jg
cmp
fdivr
ja
out
cmp
sahf
scas
pop
add
cld
dec
sbb
push
jbe
pop
pop
shlb
into
jno
lds
or
je
mov
ds
int3
cmp
and
mov
lods
test
inc
mov
out
adc
bound
or
je
add
and
inc
aaa
test
insb
orb
ds
mov
pop
rol
and
es
cs
mov
pop
or
es
adc
movb
sbbl
adc
fdivrs
xchg
mov
out
lods
outsb
aad
mov
and
ffreep
stos
fs
xchg
int3
rclb
mov
pop
addr16
jecxz
daa
push
jle
lea
mov
js
test
inc
xor
gs
dec
cmpl
or
pop
xchg
xor
out
iret
aam
cmpl
adc
sub
push
and
inc
js,pn
pop
leave
and
movsb
hlt
rcl
int3
and
test
out
test
xor
or
cld
jecxz
cmp
add
movsl
fucom
mov
call
cmc
push
inc
xchg
xchg
pop
in
mov
add
jne
add
je
arpl
mov
enter
lcall
aad
loope
hlt
outsl
inc
push
dec
sub
jle
orl
jg
xor
jle
mov
rorl
jb
sbb
mov
loop
cmpb
mov
jae
adc
out
test
sub
push
aam
or
xchg
dec
push
pusha
adc
popa
ds
cmp
sub
inc
icebp
out
and
popa
mul
sarl
stos
mov
andl
popf
sbb
stos
or
xor
inc
js
rcrb
inc
dec
ss
sbbl
sub
xlat
adc
jg
mov
popa
xor
mov
add
push
cmp
insb
cmp
inc
test
loope
imul
je
jns
or
mov
dec
cmp
int3
jb
int
mov
or
xor
loop
adc
cmp
sbb
pushf
adc
addl
jbe
xchg
std
repz
test
or
loope
cwtl
sahf
mov
in
fdivl
pusha
add
into
cmp
sbb
add
adc
push
cmc
repnz
icebp
or
iret
adc
int
mov
jae
add
and
mov
into
sub
pusha
outsb
and
inc
inc
or
cmp
pop
push
std
sti
push
ret
and
sbb
loop
push
pop
add
lret
int
stc
xchg
add
or
leave
je
jmp
arpl
decl
or
in
cmc
lcall
push
xchg
inc
fsub
inc
scas
mov
pop
sbb
sbb
inc
xor
aad
in
fadds
pop
sbb
out
cmc
lahf
ja
xor
or
jle
xor
jle
je
jecxz,pt
mov
lock
sbb
push
bound
sub
mov
adc
sbb
popa
es
ds
inc
dec
sub
jns
mov
inc
pop
mov
std
cmpsb
or
lock
sbb
mov
mov
nop
ret
popa
push
out
sarl
seta
mov
pop
jnp
repnz
jle
xchg
sbb
bound
or
scas
and
out
sbb
sub
cmp
es
mov
add
jecxz
xor
cli
sub
cmp
pop
loop
push
hlt
into
push
mov
xchg
xchg
scas
pop
cmp
ficoms
mov
inc
adc
push
faddl
adc
sahf
sbb
mov
pop
xchg
push
cmp
adc
sub
dec
inc
fstpl
lret
lods
je
cs
push
cld
loope
jecxz
insb
jecxz
lea
frstpm(287
sub
mov
xor
icebp
add
xor
dec
sub
ljmp
aaa
cmpsb
lds
repz
in
sub
ret
inc
and
movsl
inc
mov
cmp
or
sub
ret
or
push
and
mov
pop
push
popa
push
push
lret
lock
in
pop
or
cltd
cli
int
jns
lods
out
lcall
movsb
sbb
or
repnz
in
es
xchg
lods
in
dec
orl
into
inc
jg
loopne
leave
imull
xchg
imulb
dec
loope
xchg
jecxz
pusha
stos
adc
dec
sub
mov
push
adc
mov
inc
cmp
ror
icebp
pop
or
ja
out
jne
and
or
fsts
cmc
mov
repz
xchg
and
mov
in
xor
cli
xor
int
enter
testl
lods
inc
or
and
xchg
sub
push
push
sbb
pop
sub
inc
jo
sbb
es
bound
and
pop
imul
decb
sub
inc
mov
cs
sbb
loop
jb
sqrtps
and
add
and
or
adc
cli
push
cmc
cli
mov
cmp
inc
or
pop
rcr
push
and
inc
loop
out
movb
hlt
ficoml
pop
push
inc
sarl
aam
inc
mov
adc
xor
pop
pop
add
dec
stos
arpl
leave
je
inc
push
push
pop
push
fcompl
lds
insb
sub
push
pop
and
ds
and
repnz
loopne
dec
cmp
jne
add
jle
insb
xor
jge
add
bnd
add
jg
mov
pop
cs
add
jbe
xchg
mov
cmpsl
xchg
insb
add
adc
jg
jo
sub
or
int
sub
movl
shll
adc
pop
inc
sbb
sbbb
lods
pop
rorb
rorl
push
scas
outsb
push
outsb
pop
cmp
add
out
nop
pop
in
cli
pop
in
or
idiv
inc
inc
cli
outsl
cli
sub
adc
mov
xchg
sbb
sbb
sub
lods
bound
pop
fsubrs
sbb
mov
jl
repz
xor
jle
loope
push
pushf
int
fnstenv
les
popf
and
or
add
stos
ja
rolb
pop
or
jnp
jl
pop
pop
loop
push
scas
adcb
movsl
orl
sbbb
dec
pop
sub
push
mov
hlt
ret
xchg
xorb
shl
or
xor
leave
mov
rcrb
add
dec
pop
clc
xor
jle
loop
lret
dec
mov
test
test
ljmp
cmp
rcrb
stos
mov
pop
and
add
loop
aaa
sbbl
xor
out
cmp
jl
ss
fcmovb
adc
xor
push
dec
push
sub
outsl
xor
pop
lods
sub
stc
loop
popf
lret
out
jbe
pop
fisttpl
outsl
sbb
adc
sbb
inc
pop
adc
push
push
stos
push
enter
add
movb
xchg
ja
mov
add
mov
clc
mov
cld
int3
sbb
scas
or
insb
mov
pop
and
ret
push
shlb
cmc
imul
sbb
sub
or
or
mov
loop
xlat
sub
mov
fistpll
stos
xor
dec
bound
out
dec
hlt
sub
outsl
pop
push
movsb
sub
out
pop
jae
push
out
cld
cltd
pop
out
loopne
xor
hlt
xchg
cwtl
scas
pop
lds
cmp
popf
fcompl
dec
pop
rcrb
roll
js
loop
push
insb
pop
mov
cmp
mov
stos
ds
sub
cmpl
rcrb
dec
and
fildl
imull
cs
outsb
xchg
sub
ds
push
jnp
mov
and
loop
clc
outsb
divb
leave
inc
or
push
dec
jge
outsb
adc
imul
cld
das
decb
cmp
push
lock
stc
js
fisubl
cmp
pop
mov
imul
call
fwait
mov
jecxz
push
cld
rorl
and
adc
mov
add
je
ret
decl
xor
lahf
pop
adc
dec
sub
or
aad
lods
cmp
mov
enter
adc
jecxz
mov
or
xor
jle
sbb
daa
sbb
jnp
jo
sbb
in
decl
leave
xor
test
xor
ja
and
push
push
xchg
pop
push
ds
or
movsb
sub
loop
or
or
cmp
mov
cmp
cmpsb
std
jo
inc
sub
dec
in
mov
aaa
scas
stos
sub
add
pop
push
mov
pop
daa
outsl
loop
sarl
push
mulb
adcb
pop
and
shl
xchg
pusha
and
sbb
clc
jmp
repnz
insb
jmp
and
ds
xchg
rorb
fistl
stos
mov
pop
imul
insl
inc
outsb
nop
xor
mov
pop
or
xchg
inc
xor
jb
or
dec
loop
jnp
test
jecxz
sub
ret
fisttpll
jle
push
int3
mov
jle
mov
fcoml
cs
iret
dec
pop
fcoms
xchg
sbb
jecxz
fidivrl
mov
lea
iret
daa
push
mov
xor
add
xor
or
lret
mov
test
lahf
cmpsb
mov
cmc
pop
repz
mov
jmp
xor
fadd
and
dec
jb
jle
out
fmuls
int3
jo
mov
jp
sub
in
negl
in
xchg
xor
adc
xor
sbb
xor
loope
lret
js
sub
inc
xchg
cmp
adc
dec
int3
orb
mov
adc
mov
sub
in
push
icebp
sub
dec
jmp
addr16
sub
outsb
mov
sbb
ja
adc
shl
inc
std
mov
xchg
adc
mov
jne
xorl
jo
push
inc
mov
adc
pop
rcrl
push
cli
jg
push
jl
or
sbb
in
xchg
adc
dec
loope
adc
xor
aas
add
pop
mov
adc
pop
add
out
daa
js
insl
pop
push
fisttpll
mov
cmp
je
cmp
cmp
out
pop
popf
int3
lret
or
jbe
pushf
ss
sub
xchg
cmp
push
xchg
pop
xor
jecxz
push
orb
sbb
xchg
and
xchg
imul
cmp
loope
cmp
or
sbb
psubusw
adc
and
mov
loopne
sbb
pop
sub
mov
xlat
fistpl
ljmp
adc
inc
dec
ficompl
sbb
push
push
cltd
mov
mulb
adc
jp
mov
cli
mov
hlt
inc
and
sub
add
mov
or
or
mov
or
imul
and
popa
and
or
cli
add
cwtl
dec
sbb
movsl
sub
sbb
mov
jno
and
push
mov
add
sbb
arpl
sbb
pop
icebp
cs
add
adc
xchg
and
addr16
lock
push
sbb
mov
mov
push
push
lcall
sub
cmp
bound
lcall
xor
fcomps
sub
imul
pop
fsubrl
cmp
xchg
aas
adc
pop
test
fwait
lret
cmp
loop
add
mov
or
leave
int3
je
outsb
pusha
mov
cltd
into
dec
sbb
lret
adc
xchg
xchg
cmp
add
shr
sub
out
cld
je
arpl
out
sub
loope
ljmp
je
jecxz
jnp
sbb
sti
fcoml
jmp
xor
xor
push
loop
xlat
repz
repnz
aad
out
xchg
jae
mov
sub
mov
sbb
lcall
lods
mov
mov
inc
ss
ljmp
mov
pop
add
sbb
mov
fimuls
lcall
out
aaa
or
dec
mov
repnz
sub
in
jle
cmp
sbbl
add
sbb
sbb
push
dec
push
mov
xor
insl
inc
adc
mov
jg
adc
loop
sbbl
sub
ja
push
fisubrs
movsb
push
or
sti
inc
addl
nop
sbb
mov
cs
xchg
dec
jl
jg
cld
arpl
roll
movsb
movsl
cmp
loope
ljmp
repnz
jg,pn
push
outsl
fidivrs
pop
and
das
cmp
icebp
and
push
divb
xchg
sbb
push
daa
jb
sbb
sub
pop
sbb
dec
mov
push
push
scas
aam
xchg
andb
inc
push
sbb
fmull
mov
pop
cmp
jbe
push
xchg
cli
stos
push
test
cmpb
das
sti
inc
inc
jno
add
into
jle
sti
cmpsl
add
stos
add
push
mov
orl
sub
loope
lcall
push
imul
push
divb
fisttps
pop
sub
mov
jne
rcrb
inc
nop
push
imul
jnp
add
sbb
jg
into
push
out
push
cmp
push
rcll
mov
xchg
cld
jns
inc
cmp
dec
push
mov
loopne
mov
sbb
dec
jmp
mov
mov
cmp
enter
sub
pop
loopne
adc
cmc
add
jp
lret
and
leave
sbb
loop
nop
jnp
adc
arpl
jg
lcall
push
push
testl
imul
or
mov
add
addr16
int
adc
cltd
or
mov
sbb
lcall
ret
pop
add
nop
addl
aas
hlt
pop
js
sbbb
jno
rclb
and
sbb
adc
xor
xchg
es
xor
lret
enter
cwtl
sbb
adc
fildll
or
dec
ret
daa
lahf
movsl
inc
fs
or
pop
into
xchg
cmp
sahf
sub
ret
jmp
push
cmp
pop
sub
adcl
cs
sub
shl
dec
in
add
pop
push
jecxz
cs
mov
js
mov
sub
inc
cmpsl
jl
or
cli
jg
push
js
jo
lcall
sbb
dec
cld
shld
jle,pt
js
mov
push
notl
push
in
std
xor
jbe
iret
mov
and
pop
inc
sbb
jg
in
add
xchg
pop
mov
sti
filds
mov
test
jmp
jmp
push
repnz
les
repnz
cmp
cld
lret
add
mov
fnstsw
inc
adcl
mov
out
sbb
lcall
xchg
cltd
nop
icebp
js
shll
dec
sub
xchg
xchg
xchg
shll
loop
jle
xchg
iret
dec
sti
movsl
repz
ret
or
and
push
pusha
std
push
scas
bound
jle
insb
rcr
pop
sub
xchg
je
xor
pop
mov
repnz
push
jne
jb
je
popl
mov
cmc
adc
jno
ret
dec
aaa
and
sti
jae
enter
mull
mov
jno
movnti
jg
arpl
loope
cmpl
adc
es
mov
inc
cmp
test
ljmp
push
xchg
repnz
dec
mov
lcall
data16
push
divb
pop
scas
pop
push
nop
adc
mov
bound
stos
fimuls
fisttpll
out
bound
dec
loop
jo
ret
and
das
and
sub
mov
frstor
sub
push
fldcw
mov
inc
ja
movsl
inc
cmp
adc
data16
push
or
cmp
fs
rcll
pop
push
aaa
stos
add
mov
popa
push
mov
enter
mov
repnz
inc
mov
fstps
lock
dec
mov
jmp
push
repz
aam
or
bound
xchg
cmpb
es
vcvttsd2si
inc
xchg
lar
cli
out
out
push
ss
icebp
ret
pop
or
jg
xchg
add
dec
aas
jle
mov
push
setae
loope
xor
and
stos
fisubrl
sbb
xor
leave
sahf
mov
rclb
pop
mov
sub
xchg
aas
sbb
jo
lahf
pop
fmull
mov
pop
xor
mov
pop
cmp
xor
and
call
adc
add
fdivr
lahf
jbe
fwait
out
and
sub
dec
jo,pn
test
push
cli
cmpsb
inc
repnz
sbb
dec
or
dec
jo
insl
add
mov
and
sbb
pop
bound
pop
lock
and
aaa
jle
fidivs
cmpb
mov
mov
pop
cli
or
loopne
push
mov
mov
lea
xlat
dec
imul
push
mov
push
shll
jg
sbb
shrl
leave
or
mov
push
loop
jecxz
adc
inc
loop
cmp
sub
cmpsb
mov
or
loope
push
or
addl
jo
pop
and
or
pop
ret
aaa
push
ret
test
xlat
sub
pop
lods
dec
repnz
or
push
cmp
inc
push
shll
jl
adc
push
pop
sbb
mov
sub
pop
sub
les
fwait
ret
sti
imull
hlt
lcall
fbld
mov
xor
inc
sbb
inc
mov
jle
addr16
aaa
sub
mov
dec
lea
out
push
push
pop
lea
push
add
push
adc
sbbl
mov
leave
ja
inc
shll
ret
adc
stc
jmp
movsbl
push
mov
lock
jl
stos
mov
xor
cli
sbb
mov
adc
mov
push
pop
fisttpl
jge
lea
xchg
jno
shlb
sub
ljmp
xor
shlb
sub
hlt
loop
js
mov
cmc
add
mov
movsl
not
je
cs
loopne
inc
cmp
push
test
pushf
dec
sub
jnp
mov
imul
push
sbb
outsb
dec
sahf
cltd
ja
cli
or
mov
movsl
les
inc
dec
pop
dec
bound
cmpsb
push
push
out
ja
inc
shl
aam
push
dec
push
in
rcrl
jnp
cmc
addb
inc
addl
jns
push
outsb
das
mov
out
arpl
data16
jle
sti
inc
sub
xor
jg
repnz
outsl
les
bound
loope
cmpsb
push
add
xchg
push
mov
bsf
dec
movsl
jnp
push
push
test
jmp
jp
jne
and
mov
fcmovu
outsb
repnz
sub
sub
adc
loop
mov
cmp
popf
mov
bound
hlt
dec
adc
mov
jno
outsl
pop
and
int
mov
je
sub
sarl
or
and
movsl
leave
adc
rolb
adc
mov
sbb
pop
rol
lods
sub
pop
dec
bswap
in
test
adc
jp
scas
jo
pop
lods
bound
cmc
fsubs
push
loop
rolb
mov
lcall
cwtl
addb
jns
jge
fstp
mov
stc
xor
sub
sti
dec
push
mov
sub
lods
dec
lcall
push
jmp
push
nop
or
or
cmp
mov
or
sbb
test
xchg
pop
jns
push
cmp
dec
shl
jp
fwait
gs
cs
sarb
fcompl
aam
jle
mov
call
adc
mov
gs
es
or
dec
ds
loopne
mov
jl
cmpl
test
or
outsb
jnp
test
div
test
sbb
loope
scas
dec
add
lret
and
pop
addr16
cs
jg
adc
cmc
xchg
adc
pop
mov
pop
pop
add
hlt
cmp
sub
or
cmovnp
cmc
loopne
in
and
push
mov
pop
xorl
mov
nop
lock
mov
sub
pushl
jo
push
push
ds
or
jbe
cmp
dec
sbb
push
js
aad
and
mov
sbb
rol
xchg
pop
nop
ficoms
inc
inc
xor
rorb
add
cmp
testb
es
add
push
out
fldl
adc
aam
pop
sti
xchg
sarl
out
xor
jg
pop
jle
popa
fsubs
mov
clc
pop
lret
mov
cs
pusha
mov
mov
repnz
inc
inc
sbb
dec
stos
dec
int
dec
or
mov
insl
xchg
push
inc
push
mov
push
in
mov
mov
repnz
add
dec
and
ret
pop
lods
movsb
inc
add
out
inc
es
sarl
xchg
adc
std
adc
mov
xchg
addl
sbb
xchg
sahf
xchg
in
movsl
outsl
sbb
pushf
ljmp
inc
adc
or
dec
ds
inc
into
fmull
push
jle
inc
xor
and
cmp
gs
push
fwait
rcl
pop
add
adc
out
jl
jb
fistpll
ds
inc
into
hlt
xchg
mov
icebp
loope
xor
jbe
jecxz
sub
mov
movsl
mov
add
jns
add
lcall
incb
idivb
pop
lahf
ret
inc
adcb
inc
std
test
sub
mov
pop
cmp
sub
xchg
or
dec
ficompl
loopne
pop
adc
push
push
outsb
sbb
ret
push
push
popa
pop
jb
jl
mov
lods
jns
cmp
lock
jmp
lods
cmp
mull
out
imul
pop
sbb
push
nop
pop
je
pop
ja
cmp
pop
into
adc
mov
clc
xor
jle,pn
sub
sbb
and
inc
add
lcall
repz
leave
add
add
xchg
sub
inc
lock
pop
stc
outsb
and
cmp
ja
sbb
push
mov
insl
dec
mov
das
stc
testb
jne
push
adc
lcall
out
push
mov
jge
xor
test
inc
int3
jecxz
dec
xor
int3
je
scas
push
sahf
incb
jecxz
pop
pop
inc
into
cmpsb
pop
mov
mov
add
mov
popf
jne
mov
push
cmp
xchg
lret
dec
adc
lock
jmp
repz
pop
or
arpl
sub
xlat
outsl
adc
pop
aam
and
push
imul
push
aaa
inc
push
add
bound
dec
daa
pushfw
adc
jne
icebp
fsubrl
and
sub
push
dec
push
xor
xor
subb
sub
out
jno
pusha
push
push
jl
push
stos
xor
fmull
push
scas
sbb
add
sub
xor
jge
dec
jle
mov
mov
test
mov
ret
movsl
jno
push
inc
out
out
dec
cmovp
test
inc
loope
das
insb
dec
mul
outsl
mov
mov
nop
xor
sub
cmpl
or
test
push
test
pop
add
inc
mov
inc
pop
push
cli
cwtl
pop
addr16
sbb
dec
jb
pop
cmp
or
cmp
pop
dec
mov
ljmp
mov
inc
lods
testl
leave
mov
sub
das
and
dec
jle
lea
add
adc
arpl
testl
repz
testl
xchg
adc
cmp
jle
sub
insl
jnp
jb
push
sbb
inc
icebp
subl
push
ds
adc
mov
xor
outsb
repnz
add
jne
lret
cs
cmp
push
enter
or
out
cmp
mov
jecxz
scas
lahf
and
mov
aad
sbb
cmp
pop
in
sub
mov
stc
movsl
mov
xchg
lea
xchg
fisubrl
ret
dec
cmp
aam
jecxz
scas
filds
loop
lret
testb
adcl
cwtl
inc
cwtl
pop
sub
mov
jp
pop
in
xor
dec
es
daa
mov
sbb
insb
testl
jl
divb
insl
jecxz
mov
iret
cmp
add
inc
mov
dec
cmp
imulb
addl
add
arpl
jb
js
sbb
mov
mov
scas
loopne
adc
pop
mov
mov
mov
adc
adc
push
cmc
popf
testl
aaa
out
ss
fmuls
pop
or
jle
dec
dec
xchg
push
sub
imul
sbb
pop
cmp
cs
hlt
inc
movsb
sub
jle
inc
xchg
xchg
adcb
add
loope
dec
xor
jmp
aas
out
xor
cmp
test
hlt
pop
leave
aas
xchg
jecxz
jg
pop
mov
cld
dec
pop
sbb
fs
push
loop
sub
mov
inc
and
mov
sub
adc
cmp
out
int3
xchg
aam
cmpsb
adc
push
sbb
sub
aas
ja
rorl
pop
loop
dec
push
lds
push
adc
xor
ret
ds
lds
scas
jmp
add
inc
hlt
jecxz
jnp
jo
ja
out
xor
out
push
je
bound
mov
xchg
pusha
or
repz
sbb
aas
sbb
dec
pushf
mov
pop
ficoms
mov
jbe
dec
repnz
repz
push
jle
hlt
leave
addb
in
sub
and
cwtl
popf
or
sbb
mov
lahf
cmpsl
cmp
ljmp
pushf
out
std
cmpsl
imul
jp
pop
bound
mov
testb
dec
xchg
add
jmp
cmp
xor
add
pop
sub
mov
cmp
js
mov
jb
int3
rcl
jo
sub
jno
mov
xor
insb
sbb
add
cmp
dec
xor
sti
or
bound
int3
xor
addr16
lret
inc
xor
cltd
sbb
sbb
lahf
aad
mov
mov
dec
idivb
add
out
fdivr
mov
cmp
daa
mov
push
dec
popa
outsb
test
dec
hlt
xor
sub
cmpb
cmp
bound
pop
das
fldln2
jg
cli
or
xchg
xchg
out
out
push
xor
or
sbb
jge
pop
pop
dec
and
sbb
addl
dec
mov
push
sbb
mov
jb
sbb
inc
add
aad
push
outsl
daa
jg
out
or
push
or
inc
bnd
mov
fdivr
movsb
sbb
pop
and
call
push
aaa
fwait
shll
or
int3
mov
sbb
mov
movsb
sbb
cmc
dec
mov
cmp
mov
pop
or
mov
mov
push
jae
inc
xchg
push
cmc
cmp
push
loopne
pop
daa
bound
inc
jg
pop
adc
push
popa
mov
sub
and
sub
sbb
sbb
mov
mov
pop
mov
and
shrb
mov
push
nop
sub
xchg
mov
push
mov
ss
inc
add
and
pusha
int3
jns
pusha
outsb
sub
add
push
mov
out
add
shlb
push
frstor
rcl
cmp
fs
negb
add
mov
fldt
adc
sbb
loop
daa
int3
push
pusha
divb
fwait
pop
sbb
in
inc
mov
fsubrs
lock
rorb
adc
add
jg
pop
xor
jl
xchg
mov
fcomps
lock
loop
add
dec
jg
mov
gs
pop
loop
divl
jecxz
sbbb
sbb
sbb
sub
insl
pop
jecxz
or
dec
lcall
dec
mov
daa
fimull
lret
outsl
jl
scas
mov
sti
int
clc
std
pusha
mov
xor
xor
sbb
sti
ljmp
outsl
lret
sbb
mov
push
ja
das
std
movsb
and
mov
sub
dec
pop
jne
or
sbb
push
push
leave
push
pop
mov
push
pop
or
pop
add
inc
cmp
insb
adc
sbb
das
push
jne
mov
or
add
jmp
lods
das
cmp
mov
cmpsl
sub
jl
insb
jge
cs
mov
call
into
xor
fldt
jns
repnz
pop
mov
lea
in
insb
pusha
and
scas
pop
call
mov
dec
fdivr
enter
add
push
sarb
pop
xlat
mov
in
enter
clc
ret
inc
adc
fld
ja
scas
cmp
and
fcmove
mov
jp
test
out
jno
cld
and
out
adc
or
cwtl
dec
mov
inc
xchg
or
repz
pushf
pushf
int
mov
add
into
loop
fisttpl
jg
sub
sbb
popa
sbbb
int3
loop
push
sahf
pop
xor
psubq
inc
movnti
push
sbb
dec
push
lods
sub
repz
jbe
mov
xor
and
push
loop
mov
cmpl
rolb
sub
mov
jg
cwtl
outsl
repnz
les
test
lcall
fdivs
push
mov
iret
cmc
leave
enter
fisubrl
sub
insb
imul
sbbl
mov
in
lock
jo
mov
fwait
dec
cmp
sbb
dec
and
mov
mov
jge
jle
mov
rclb
aas
mov
popf
push
adc
mov
pop
adc
std
out
cmp
jecxz
fisubl
sub
cmpsl
cli
mov
fcmovnb
sub
cmp
dec
sahf
xor
aaa
add
push
jle
faddl
ljmp
push
dec
in
xlat
inc
pop
add
pop
imulb
mov
mov
fadds
mov
dec
mov
sub
mov
testl
dec
movsl
icebp
jecxz
lock
pop
jbe
cmp
cwtl
scas
je
adc
pop
push
nop
dec
mov
repz
popf
add
ljmp
imul
lock
push
push
lds
push
daa
outsb
push
std
subl
cmp
repz
xchg
xchg
or
popf
movb
push
pop
dec
negb
cmp
jb
cmc
dec
mov
imul
lods
mov
ja
dec
pop
js
sub
xor
pop
jo
dec
fstps
out
invd
aaa
dec
mov
pop
mov
aas
insb
icebp
cmp
jle
pop
inc
mov
rcrb
fidivs
das
mov
lock
mov
mov
jp
lret
in
add
sbb
sbbb
cld
xchg
test
inc
sub
aas
pop
mov
dec
inc
mov
sarb
xchg
or
les
dec
mov
inc
repnz
xlat
fistpl
sub
out
jbe
sti
xchg
pop
and
push
push
cmc
mov
mov
and
sbb
daa
repnz
adc
mov
dec
inc
push
mov
cmp
add
jge
cwtl
inc
inc
pop
hlt
push
out
cwtl
jl
stos
testl
mov
aaa
or
mov
mov
xchg
or
dec
pop
test
pop
mov
pop
cwtl
push
and
je
add
mov
imul
lret
sub
mov
out
or
stos
or
fdivrp
and
in
into
popf
sub
cmc
jl,pt
fimull
pop
jle
mov
pusha
add
mov
adc
enter
cmc
and
in
loope
js
pop
mov
fisttpll
aad
mov
enter
add
nop
mov
push
jo
mov
sbb
insb
and
pop
cs
fwait
les
ljmp
sbb
dec
hlt
loope
pop
pusha
sbb
out
mov
data16
sub
cs
cmp
sub
mov
arpl
push
pop
aad
ss
mov
aad
jo
andl
jnp
push
and
into
mov
cmp
pop
sbb
mov
mov
mov
or
push
loope
shlb
adc
and
xchg
mov
inc
scas
inc
sbb
imul
loope
inc
test
and
aam
frstor
add
repz
push
movsb
das
pop
sub
sbb
rcl
xor
push
jbe
pusha
cmp
jl
stc
add
jecxz
xchg
popa
out
flds
xchg
lea
hlt
insl
adc
adc
and
es
jge
lds
loopne
insl
cmp
and
sbb
mov
cmp
das
bound
mov
in
and
inc
rorb
shrl
dec
or
mov
clc
imul
jns
mov
cmc
hlt
in
dec
push
repnz
loop
mov
xor
push
inc
inc
add
pop
add
je
adc
and
movsb
xlat
push
jb
and
ret
movsl
cs
in
sub
xchg
shlb
test
push
into
scas
dec
cmp
jle
and
mov
testb
dec
sub
shll
pop
xor
pop
es
dec
cmpsl
jb
mov
push
shlb
iret
loop
aas
ss
xchg
sub
ds
ret
sub
ror
add
and
dec
test
inc
or
add
mov
iret
loop
test
mov
mov
int3
bound
jp
mov
ljmp
ds
lds
cmp
fistpll
cwtl
mov
push
int3
ret
xchg
loop
bound
jae
lods
push
cmp
sbb
movsl
push
xorl
out
cmpsl
outsb
sbb
push
xlat
js
push
inc
sbb
repnz
sub
ret
pop
out
jo
sub
lret
sub
test
enter
shlb
das
cld
leave
jb
mov
aaa
dec
cmc
dec
sbb
push
pop
add
push
push
inc
xchg
sub
arpl
divl
pop
mov
mov
add
leave
xchg
pop
fcomps
loop
jle
and
jo
je
fdivrp
dec
pop
xorl
rcl
ret
and
dec
ljmp
push
or
shlb
xchg
dec
dec
subl
xor
or
push
fdivr
popf
notl
cmpsl
into
push
add
je
imul
pop
lods
fstpt
scas
into
iretw
add
xchg
popf
pop
fidivs
mov
out
add
xchg
vpmovzxwq
icebp
cmc
test
jle
mov
bound
sbb
dec
sbb
and
push
leave
adcb
stc
mov
jae
add
add
sub
inc
rorb
call
jno
mov
testb
fwait
pushf
mov
push
dec
negb
sbb
xchg
xor
sub
js
cmp
mov
push
lret
jbe
dec
and
ret
sub
sub
dec
or
mov
mov
or
sbb
and
mov
sub
loop
orl
mov
jnp
and
push
sbb
test
mov
stc
or
and
jmp
lcall
add
dec
stos
loop
jecxz
pop
jb
int3
data16
cmp
dec
fisubrl
mov
sbbl
mov
notl
in
pusha
adc
mov
ret
and
sti
mov
jg
sub
and
dec
cs
or
xchg
shl
pop
cwtl
sub
loopne
scas
jo
movsl
adc
dec
into
inc
mov
sbb
stos
xchg
mov
pop
inc
cmp
sbb
or
mov
sbb
ret
gs
add
ja
dec
adcl
ret
sbb
ret
mov
jg
in
xadd
xchg
and
loopne
sahf
or
xchg
add
std
mov
sbb
sbb
adc
js
inc
xor
jnp
loope
je
arpl
mov
dec
xor
loop
pop
and
dec
out
xchg
outsb
sbb
sbb
mov
pmulhuw
jbe
arpl
adc
pop
pop
lea
out
cli
adc
sub
lea
and
inc
mov
add
xchg
jecxz
bnd
xor
adc
es
or
jbe
hlt
adc
dec
pop
dec
iret
fs
cmp
hlt
lods
xor
cmp
repnz
inc
add
jle
pushf
es
fwait
lcall
pop
sub
sbb
jmp
cmpsb
sbb
js
sbbl
movsl
add
lcall
test
lcall
sub
js
mov
and
push
mov
fwait
sbb
aam
or
enter
setne
lock
jno
pop
sub
stos
sbb
jge
bound
movsl
fadds
out
cmp
push
loope
fmull
mov
add
mov
sub
add
fsts
pop
dec
push
pop
sub
mov
xor
clc
push
lret
pop
cmp
adc
in
inc
lock
addb
jbe
xor
vpslld
sub
lret
mov
mov
and
xor
arpl
mov
sub
add
dec
cwtl
pop
pop
and
push
add
int3
jecxz
das
les
das
lea
or
push
js
add
cli
cmovb
jno
or
cltd
or
or
cli
jmp
insb
das
div
xlat
ret
add
pusha
xchg
and
adc
mov
or
xorb
mov
sbb
sarl
je
subb
xor
adc
push
mov
adc
leave
pop
rcrb
jg
outsl
pop
cmpsb
enter
xchg
das
test
push
pop
mov
xor
enter
xchg
jae
mov
ljmp
pusha
mov
int3
mov
aas
adc
pop
popf
add
mov
mov
jo
into
dec
imul
jbe
sub
cwtl
cmp
sahf
cltd
push
fsubrl
pop
adc
add
mov
dec
lahf
bnd
jle
ret
sbb
dec
sub
mov
and
sub
mov
or
inc
jle
mov
pop
sub
sbbl
cmc
or
inc
adc
subb
inc
scas
push
lcall
cmpl
adc
mov
or
add
in
insl
fadds
inc
lret
pop
mov
ret
scas
or
lahf
loope
ror
cmp
cwtl
cld
cmp
push
add
xchg
sbb
xchg
insl
jae
movsl
push
mov
jg
loop
scas
dec
ss
inc
cmpsb
int3
jnp
xor
adcb
pop
mov
mov
jb
mov
mov
adcl
mov
idivl
cmp
testb
sub
mov
aas
jnp
mov
cmp
mov
in
push
mov
xor
bound
xchg
and
cmpsb
call
sbb
lret
loopne
into
decb
ljmp
jmp
ret
cltd
jbe
iret
or
mov
pushf
push
adc
or
loop
jb
or
or
das
cmp
lcall
xor
xchg
dec
sub
pop
or
sbb
ret
inc
xor
inc
pop
mov
sahf
prefetch
scas
addr16
mov
rclb
add
mov
shrl
mov
cmc
cmpsb
test
sub
stos
cltd
inc
dec
nop
ds
push
out
cmp
adc
lret
jecxz
xchg
mov
ljmp
jmp
ret
push
je
nop
xchg
sbb
dec
iret
add
leave
test
decl
stc
mov
sahf
pusha
add
movsb
data16
cs
out
push
jmp
lret
lods
pop
addl
loop
pop
sub
mov
shl
popl
pop
in
jg
fwait
mov
pop
and
dec
sbb
movb
sbbl
jae
lea
mov
or
cmp
sbb
push
push
aas
cli
fisubrl
je
pop
dec
mov
mov
sub
ds
push
push
mov
test
xchg
push
sbb
imul
inc
adc
es
pushf
cli
add
lahf
cwtl
add
cltd
pop
in
ja
call
stos
sub
jle
inc
fisubl
pop
dec
xor
dec
popa
push
mov
dec
sahf
jl
ja
xchg
adc
cmp
lods
xchg
adc
sub
aas
aaa
and
sbb
jmp
imul
es
mov
push
jbe
es
xchg
sbb
jno
das
gs
repz
fdiv
mov
ds
out
cmp
fsubrp
pop
pop
sti
popa
fisubrl
jle
mov
scas
shl
sub
cmp
and
push
and
cmp
mov
push
sbb
loopne
sbb
mov
pop
adc
inc
add
jg
scas
xor
loope
nop
aas
mov
mov
dec
nop
mov
sbb
sbb
mov
add
xchg
outsb
das
push
inc
jg
mov
push
push
cld
subl
js
ficoml
orl
mov
sbb
cmc
sbb
adc
inc
push
mov
das
add
sbb
push
lock
pop
stos
push
push
adc
idivb
inc
decb
cmp
ds
ret
fsubp
mov
data16
or
push
incl
mov
std
in
add
xor
cmp
stc
adc
pop
pop
add
int
lcall
mov
jne
stc
loopne
jge
mov
adc
cmp
lahf
and
sub
dec
sbb
push
jg
inc
cmpsb
lock
mov
or
lahf
lods
aad
mov
orl
xlat
ds
dec
sbb
out
les
push
test
out
sub
stos
xchg
out
and
in
stos
push
std
adc
sbb
adc
mov
jo
push
mov
push
mov
adc
sub
add
sbb
jmp
inc
in
stos
inc
push
mov
pop
and
pop
xchg
or
mov
sbb
sbb
xchg
push
add
and
mov
in
adc
jmp
jle
inc
and
sub
iret
push
mov
xchg
out
add
add
popf
mov
dec
xor
ret
sbb
mov
into
mov
sub
add
insb
cmp
imul
adc
rolb
xchg
mov
add
jecxz
repz
je
sub
lret
jecxz
mov
fcoms
sub
ds
subb
aad
rcr
jle
loop
cvtpi2ps
cld
inc
repz
jns
or
test
into
or
sbb
sbb
insb
aam
mov
sub
jmp
lcall
call
push
out
sbb
push
dec
call
js
into
dec
or
mov
sbb
xchg
pop
testl
fmuls
adc
or
inc
adc
add
lock
xor
add
add
add
faddl
repz
pushf
or
dec
sub
daa
mov
push
sbb
push
inc
neg
xorl
in
addl
sbb
cld
fildl
xor
fisubl
dec
daa
mov
or
pop
inc
adc
sbb
jb
xor
add
mov
and
jmp
xor
mov
jle
adc
pop
add
xchg
cmc
sahf
mov
scas
inc
and
inc
out
int
std
fwait
or
insb
int
int3
sbb
ret
lcall
xchg
cmp
das
xor
jle
sbb
ja
push
mov
loopne
outsb
push
mov
inc
inc
sbb
fistpll
dec
push
sub
pop
es
rorb
mov
cmp
dec
xor
mov
pop
mov
sub
enter
jns
cs
cld
fwait
dec
cmpsb
and
inc
sbb
cmp
cld
xchg
sub
lcall
cli
dec
cld
pop
out
jnp
mov
fidivl
out
test
popf
ret
push
scas
xor
push
rclb
pop
push
inc
sbb
or
lret
lahf
lret
or
xor
push
xor
mov
push
inc
add
sbbl
push
stos
dec
jecxz
lock
jg
adc
cmp
push
sbb
push
cmp
mov
jmp
icebp
sub
pop
pop
daa
jg
frstor
test
xchg
xchg
dec
pop
push
or
jb
xchg
stos
into
sbb
jmp
xor
mov
das
xor
push
pushf
mov
divl
leave
les
into
adc
sbb
add
int3
bnd
push
out
sahf
push
dec
push
loop
neg
insl
mov
movsl
fwait
scas
sahf
pop
fiadds
std
adc
jne
or
out
xchg
dec
outsb
rcr
ss
push
xchg
mov
push
pop
xor
or
aam
sbb
sub
jo
sbb
inc
sti
pop
sub
inc
out
cmpsb
sub
add
cs
scas
je
sub
dec
push
sub
or
fldcw
daa
aad
mov
cwtl
and
sub
pop
xor
pop
or
fiaddl
out
sbb
fisubs
mov
jb
pop
mull
fdivl
aas
pop
sbb
push
mov
adc
push
ret
mov
inc
fmuls
lar
cltd
cmpsb
xchg
mov
or
inc
pop
bnd
or
testb
call
fistps
and
jnp
or
lcall
inc
loop
xchg
fistpl
mov
pop
sti
mov
sub
faddl
popf
incb
push
sahf
int
gs
add
dec
inc
mov
jo
dec
xor
js
xchg
or
cmp
pop
mov
out
mov
stos
sub
in
repnz
ror
aam
leave
fnsave
stos
or
lret
cltd
into
sbb
push
pslld
or
push
sub
xchg
xchg
pop
bound
mov
jle
or
popa
cld
or
jbe
xlat
lods
lret
dec
mov
fadd
inc
dec
jb
jmp
ja
ret
xchg
pop
jbe
ss
xlat
xor
and
and
scas
ds
xlat
imul
mov
imul
bound
cvtpi2ps
aaa
jb
adc
jle
in
cmp
into
or
xchg
dec
shlb
andl
jbe
add
scas
pop
out
jae
mov
outsl
out
fmuls
add
sbb
push
xchg
pop
loop
sbb
add
lds
push
rolb
ret
inc
testl
scas
sbb
fldt
notb
lea
aad
lret
lahf
pop
push
das
pop
leave
push
sub
sub
mov
testl
pop
pop
pop
dec
lods
lret
jae
scas
sub
popf
incb
jns
mov
mov
sbbl
add
add
sbb
ffreep
push
sub
insl
ficompl
and
mov
sbb
ret
pushf
outsl
out
xor
cli
mov
and
xor
dec
je
jb
mov
inc
cs
mov
inc
xchg
decb
mov
xchg
idivb
add
mov
dec
mov
jg
cltd
daa
dec
pop
dec
cwtl
test
mov
and
xor
and
xchg
cli
int3
lods
stos
xor
mov
jo
push
add
and
push
xchg
mov
idivb
and
pop
and
pop
pusha
outsb
pop
xchg
dec
sbb
out
sbb
push
or
mov
or
movsb
cmp
mov
xor
dec
sub
fldt
scas
fisttps
mov
pop
pop
mov
dec
cmp
les
pusha
or
lahf
add
cmp
push
sahf
fwait
push
push
std
xchg
in
push
push
outsl
sahf
repnz
fwait
scas
addl
inc
ret
sub
pop
adc
repnz
mov
cmp
outsb
and
sub
lods
pop
fisubrs
lock
pushf
rolb
sbb
out
es
push
mov
popa
push
int3
xchg
jle
mov
inc
cmp
xchg
pop
lods
xchg
lret
mov
pop
push
popf
rol
sbb
pop
jae
inc
mov
fstpt
or
out
jne
or
add
push
pop
testb
jbe
pop
or
push
repnz
rclb
xor
add
iret
pop
sbb
popf
fidivl
mov
jne
lret
sti
push
pop
stos
scas
in
outsb
je
stos
add
xor
out
adc
add
cli
pop
sbb
das
loop
in
pop
ret
xchg
dec
pop
lods
rorb
push
push
cwtl
movsb
fwait
and
pop
inc
cmp
cmp
mov
shlb
scas
repnz
or
xor
ss
ret
in
xor
fdiv
ficomps
and
mov
jle
mov
out
inc
jo
push
xchg
push
imull
pop
mov
adc
push
mov
sbb
es
andb
sbb
mov
loope
int3
sbb
cmpsb
insb
sbb
outsl
mov
jmp
cs
sti
aaa
les
or
repz
test
clc
mov
xchg
push
scas
mov
ds
push
push
out
fwait
mov
test
push
push
dec
adc
or
movb
xor
lods
dec
push
les
jge
xchg
sbb
add
jns
sbb
scas
outsb
fcomip
cmp
sub
fisttpll
adc
pusha
dec
jb
insb
mov
mov
sub
pushf
mov
mov
bound
mov
add
xchg
mov
fwait
lea
xchg
fcomp
bound
xchg
rcll
pop
mov
sahf
xchg
cmp
mov
push
pop
adcb
xchg
test
xor
sbbb
movsl
sbb
push
add
fadds
out
mov
movsb
mov
cmpsl
test
dec
cwtl
push
repnz
add
push
add
cs
aam
pop
fisubrs
jl
rolb
or
adc
out
xor
sub
mov
inc
push
scas
push
jne
add
adc
repnz
orl
fsubrl
add
pop
inc
and
bound
add
xchg
sbb
int
popa
enter
leave
inc
dec
adc
mov
lcall
pusha
inc
sbb
shlb
pop
das
in
sbb
mov
push
jnp
mov
scas
loope
loop
xor
stc
das
adc
mov
scas
clc
je
jns
sbb
das
ljmp
movsl
jp
add
push
pop
pop
lcall
popa
into
sub
push
xor
pushf
nop
adc
and
gs
pop
sub
ss
fwait
dec
mov
lea
jo
dec
idivl
xor
xlat
divb
or
add
mov
push
mov
sub
mov
mov
push
lret
jg,pt
add
mov
inc
mov
test
je
mov
lahf
xor
out
cltd
pop
arpl
popa
popf
jg
cmp
out
or
repnz
cmp
jg
push
lods
rcrb
dec
push
jge
in
lahf
nop
adc
xchg
cmp
push
and
stos
inc
pop
adcl
fadd
inc
scas
daa
aad
cmc
xor
nop
jo
fwait
call
ljmp
rcrb
xchg
inc
xchg
stos
popf
cwtl
inc
ret
jnp
out
adc
and
andb
jecxz
adc
jge
cmp
add
dec
insb
pop
ret
push
and
adc
pushl
ja
xlat
popf
pop
repz
jle
test
das
aas
adc
jle
xchg
outsl
jg
ret
sbb
sub
gs
cmovno
sahf
ljmp
inc
inc
pusha
loop,pt
lods
pop
rorb
ljmp
je
adcb
sti
cmp
jp
lcall
in
push
pushf
inc
pop
add
sbb
mov
or
push
dec
cli
mov
outsb
lret
js
mov
scas
pop
cmp
mov
fidivs
or
sbb
xchg
rcrl
or
sbb
popa
call
mov
rcrb
popf
fistl
int3
ss
inc
stos
jbe
iret
push
cmpsb
fwait
daa
dec
add
or
addl
jecxz
icebp
stos
inc
cmpsb
ljmp
push
rcll
mov
fwait
dec
jecxz
pop
sub
cmp
mov
and
xorb
jecxz
aas
sbb
aam
es
sarl
das
pop
in
sbb
xor
dec
outsb
adc
inc
push
sbb
popf
adc
bound
cmp
sbbb
xor
cld
dec
add
lret
cmp
inc
int3
ret
out
je
mov
inc
mov
hlt
mov
push
loope
scas
sbb
iret
mov
or
imul
in
test
fstpl
negl
fld1
enter
sahf
scas
adc
stos
dec
divl
jecxz
cwtl
movsl
test
dec
icebp
and
popf
mov
sbb
stc
mov
mov
mov
pop
sbb
adc
mov
orb
lcall
pop
xchg
add
sbb
sbb
jmp
loop
push
clc
jo
ret
xchg
mov
repz
inc
ja
aaa
xchg
jp
push
add
call
fwait
scas
std
aaa
cmp
push
push
and
loope
push
js
in
int
andb
sbb
hlt
inc
mov
add
xchg
arpl
mov
sub
and
push
push
adc
pop
cmp
fwait
stos
sub
enter
sbb
sbb
movsl
sub
sbb
loop
or
xlat
inc
cltd
pop
rcl
int3
sub
mov
decb
inc
addl
stos
add
xchg
sbb
mov
sbb
mov
push
push
jo
ja
jae
sub
and
hlt
hlt
fldenv
loope
cltd
mov
mov
add
adc
dec
adc
push
sbbl
mov
sbb
scas
test
loop
stc
insb
sub
out
dec
mov
adc
push
jne
fadds
cmp
ds
sahf
shll
sub
add
mov
mov
fwait
clc
into
xchg
mov
repz
fwait
aaa
cld
push
mov
movsb
or
and
and
vpsrlq
ret
sbb
int
or
mov
loop
or
ljmp
insl
test
inc
jbe
push
ret
mov
ljmp
pop
stc
or
or
stos
in
xor
bound
lods
cmp
scas
dec
mov
lahf
pop
mov
into
fidivl
scas
test
pop
fstpt
ds
stc
sub
or
cli
sub
out
aam
fnstcw
xchg
pop
pop
sub
xor
inc
fsubrs
pop
jno
cmp
cltd
dec
add
jecxz
xchg
jmp
sbbb
dec
js
dec
sub
inc
xchg
or
or
enter
pop
sbb
fstpl
out
inc
mov
push
push
stos
pop
cli
mov
xlat
adc
dec
aas
lahf
lcall
mov
fdivrs
test
movsl
push
aam
dec
adc
add
and
js
rolb
sub
fdivs
or
sbb
xor
mov
pop
adc
dec
mov
jle
enter
pop
es
jg,pn
inc
sbb
add
scas
outsb
enter
outsb
or
test
jle
inc
jl
sbb
outsb
in
push
add
mov
push
movsl
shl
in
fildll
jle
add
jnp
and
lcall
mov
loopne
or
jg
mov
and
imul
orl
repz
aas
fcompl
or
ret
insb
or
pop
mov
mov
lret
and
divb
das
pop
mov
pop
push
fisubrl
pop
repz
jle
inc
push
scas
nop
sub
lods
inc
push
add
or
fbld
aaa
cs
pop
jecxz
fcmove
xor
sbb
sub
pushf
inc
aas
into
test
inc
cmp
sbb
pop
inc
cmp
push
pop
sbb
add
push
dec
ret
insb
or
pop
push
mov
pop
and
xor
pop
push
imul
and
fimull
cmp
push
in
sbbl
add
pop
icebp
mov
sub
in
xchg
pop
sbb
add
nop
mov
mov
mov
sub
loopne
pop
lret
inc
subb
push
xchg
sbb
xchg
sub
scas
inc
xchg
sbb
pushf
fwait
push
fadds
sub
inc
pop
arpl
in
stc
fsts
jle
ljmp
into
lds
pop
jle
adc
rcrb
mov
cmp
xchg
dec
inc
pushf
xchg
fdivl
pop
push
adc
and
sub
je
lds
dec
sahf
sti
enter
shrl
xchg
stos
ds
dec
sbb
sub
stos
push
push
loope
enter
fsubs
cmpsb
cmpsl
push
ficomps
jmp
adcl
inc
dec
leave
repz
add
adc
inc
pop
mov
inc
andb
add
sub
add
lret
add
mov
and
faddl
mov
pushf
bswap
bound
stos
outsb
pusha
mov
push
loopne
popf
or
loop
and
dec
call
rcr
xor
add
inc
jg
cmp
mov
inc
xchg
xchg
mov
inc
sahf
orl
inc
int3
or
pop
pusha
add
inc
dec
fiadds
je
cwtl
popa
ljmp
lock
cmp
adc
push
in
outsb
or
add
test
ljmp
sbb
movsl
shll
das
dec
inc
or
push
and
cmp
xchg
and
sub
push
jne
jne
mov
cmpsl
out
insb
in
jnp
inc
in
cmp
push
jb
pop
mov
jmp
enter
push
out
sbbb
fldcw
sub
and
fwait
shrb
cmc
push
js
lahf
xchg
push
subl
dec
xchg
arpl
sub
ljmp
jbe
add
push
add
lock
aad
and
outsl
push
adc
mov
ss
cmp
pop
fsubs
repnz
push
adc
add
cld
jae
add
scas
add
cmpb
js
mov
pop
cmpsl
sbb
or
mov
or
mov
or
or
sbb
mull
lds
cmp
or
std
jnp
in
push
pop
je
lret
insb
outsb
je
cmp
or
add
imulb
xchg
dec
arpl
sbb
push
and
repz
ljmp
cli
jnp
or
aas
lcall
push
pop
dec
adcl
insl
cli
daa
das
stos
jmp
mov
cli
dec
adc
mov
leave
jno
imul
add
add
decb
and
sbb
xor
fwait
dec
inc
addr16
insb
pop
and
std
adc
sahf
xchg
adc
dec
mov
outsl
sti
add
bound
sbb
movsb
inc
pop
divb
pop
cmp
insb
sub
sbb
adc
fcomi
or
icebp
cld
dec
inc
loop
lahf
andl
push
xor
cmp
jle
mov
xchg
mov
fldl
out
sbbl
subl
insb
and
or
cwtl
int3
push
outsl
movsb
lods
pop
add
xchg
loop
test
jne
cmp
push
adc
fsubrs
and
or
int
andl
or
jbe
test
nop
pop
aam
adc
cli
lock
pop
jb
sub
and
and
cltd
mov
call
xlat
popa
leave
and
sbb
fsts
adc
rcll
fwait
mov
xorb
iret
mov
push
arpl
sbb
lods
and
out
xor
cmpsl
nop
adc
sbb
sti
mov
push
mov
inc
jl
cmpsb
add
shl
fidivrs
mov
or
fdivrs
push
in
call
fisubs
adc
stos
sbb
inc
push
pop
popa
fmuls
loope
and
testb
sti
in
or
or
or
push
pusha
jg
or
mov
cwtl
xor
sbb
test
bound
push
inc
or
decb
mov
sbbb
sbb
xor
ja
and
and
cmp
push
andl
rcrb
jl
add
mov
pop
aam
jecxz
mov
sbb
leave
and
jle
sub
sbb
movsl
adc
lods
mov
inc
es
cmp
nop
or
xor
jmp
sbb
cmp
lock
jno
and
test
mov
mov
fldt
icebp
lods
out
or
pop
lret
outsl
adc
ja
arpl
loopne
xchg
mov
mov
xor
ljmp
orb
rorl
xor
xchg
outsb
or
stc
aaa
push
imul
pop
mov
push
addl
lods
out
mov
pop
cmp
pop
jg
jle
je
inc
jl
in
push
fidivs
sbb
or
bound
push
cwtl
mov
test
jecxz
or
aad
sub
cmp
cmpsl
outsl
addb
insb
into
inc
mov
mov
stos
repz
push
or
xchg
jae
pushf
push
fwait
add
lahf
fwait
cmp
sbb
pop
repnz
ret
mov
mov
loop
mov
ds
lock
xchg
testb
aaa
lcall
sahf
pop
and
sahf
sbb
sahf
mov
cmpsb
add
pop
pop
sub
and
outsb
push
orb
hlt
pop
dec
push
lds
cltd
sub
outsl
push
cmpsl
mov
js
pop
lahf
mov
adcl
ja
and
push
loopne
or
push
cli
outsb
jp
pop
mov
sub
fildll
push
mov
xchg
ja
add
add
and
jmp
or
pushf
orb
pushf
sbb
enter
decb
into
cmp
fdivl
divl
jle
sbb
loop
in
adc
or
adc
dec
and
cmp
pop
mov
mov
add
adc
cmpsl
cli
dec
mov
lahf
sub
lock
cmp
outsb
push
sbb
int3
inc
inc
push
or
clc
jge
mov
jo
ljmp
pusha
ret
mov
xchg
xchg
xor
mov
stc
push
sbb
push
cld
xchg
cmc
hlt
das
jne
lea
sbb
jmp
scas
sub
lods
mov
stos
ficompl
dec
and
jbe
stc
xchg
sbb
pop
cltd
inc
and
lods
mov
cli
das
push
push
mov
je
sbb
out
in
xor
loop
lods
sarb
loope
stc
sub
pop
and
ja
clc
in
scas
ljmp
and
into
mov
sbb
ja
mov
in
les
or
cmpsb
inc
rcrb
dec
mov
add
mov
les
mov
cltd
sbb
rcrb
loop
push
cmpl
cmc
push
cs
sbb
divb
inc
fwait
push
lret
inc
scas
jl
pop
inc
cmpl
sbb
sbb
cmp
and
cmp
lahf
loope
cmp
push
andb
add
inc
cmp
pop
sub
into
test
xchg
mov
cmp
or
ss
enter
cld
xchg
add
in
jecxz
pushf
sub
and
push
mov
enter
adcl
mov
jmp
ja
aas
pop
mov
call
popa
aaa
push
mov
pop
dec
mov
lret
out
mov
jecxz
push
das
outsl
add
mov
add
cmp
mov
cmpl
mov
hlt
daa
es
out
pop
sbb
repnz
ret
arpl
movl
pop
jecxz
cmp
loope
mov
ja
sahf
sbb
les
jg
decb
jecxz
ficompl
icebp
and
inc
jecxz
cmpb
movsb
sub
sub
mov
enter
sbb
jo
inc
jbe
icebp
xor
xchg
adcl
cltd
or
loope
adc
cld
inc
inc
jge
fwait
lret
mov
cmp
mov
ljmp
outsl
loop
imul
mov
enter
jp
das
ja
mov
push
adc
push
mov
movups
dec
sbb
mov
std
pop
sub
enter
imul
jl
mov
les
jno
sub
mov
jmp
mov
les
scas
add
pop
push
pop
jl
and
pop
mov
mov
add
ds
xor
or
nop
sbb
fadds
ret
jmp
iret
push
jg
enter
in
leave
andb
xlat
mov
push
cli
test
stos
sbb
sbb
xor
ds
repz
pop
shl
scas
test
sbb
xchg
and
mov
cli
sbbb
push
ljmp
lret
out
cmp
pushf
out
jno
sbb
or
jae
pop
notl
lock
insl
loop
fistl
xchg
adc
and
cli
dec
std
sti
mov
jle
clc
shll
pop
or
sub
mov
nop
add
arpl
jecxz
shrb
pop
push
es
xchg
sarl
jl
cmp
sbb
xor
jecxz
xlat
adc
imul
fwait
mov
sbb
adc
mov
lods
ja
clc
cmp
icebp
outsb
mov
popa
pop
ja
xchg
sbb
sub
xor
push
push
jb
and
jecxz
sbb
cmc
xchg
nop
cmp
xor
stc
sbb
sub
xchg
ja
add
jbe
and
into
movsb
pop
mov
inc
xchg
ret
cli
icebp
pop
xchg
xchg
mov
faddl
sbb
fstcw
shll
jo
xchg
hlt
inc
cli
and
sub
add
sbb
fmul
das
clc
lods
cmpsb
push
lahf
sub
pushf
out
daa
idivl
dec
mov
adc
cld
into
jbe
and
cwtl
adc
mov
dec
mov
subl
xor
fldcw
inc
xor
lret
pop
xchg
mov
cli
mov
sbb
dec
ret
bound
insl
pop
dec
and
adc
push
sub
sar
and
loope,pt
push
push
xchg
sbb
or
fdiv
testb
sub
push
jle
mov
aas
push
xchg
fisubs
enter
sbb
sub
adcl
dec
in
cmc
fmuls
jle
mov
rol
jno
sbb
jle
imul
cmp
sahf
in
scas
ret
cmpb
push
lret
mov
pop
pop
andb
mov
pusha
cmp
pop
or
and
movsl
sti
sbbb
xchg
pop
add
cld
stos
popa
adc
lods
stc
fstpt
add
push
sbb
jnp
xchg
push
dec
sbb
sbb
in
sbb
add
into
sbb
out
inc
sub
sbb
or
push
bound
rolb
test
pop
cmpl
push
xor
testb
repz
loope
mov
dec
loope
lock
rcr
cmpsb
clc
ret
cli
outsl
int3
xlat
in
pop
test
fstl
push
into
sarb
adc
jle
in
inc
push
mov
fwait
cs
or
fwait
jle
mulb
rolb
popa
jne
jmp
pop
popf
add
test
xchg
scas
shlb
pushf
dec
mov
fs
in
push
mov
adc
adc
sub
or
test
push
xor
outsb
add
aad
dec
xchg
scas
cmpl
popf
call
xchg
or
loope
pop
std
ja
jg
xor
sahf
sbb
jnp
loop
sub
mov
lcall
fsubrp
pop
jge
sbb
rcrb
or
inc
jg
or
rcll
xchg
jo
ret
filds
mov
loope
jb
es
in
sub
adc
loope
jl
mov
negl
outsb
js
pusha
add
push
inc
mov
cmp
push
lods
loopne
mov
iret
imul
insb
pop
cmp
sbb
add
push
shrb
add
add
adc
loope
pop
pop
add
cmpsl
test
lods
psubb
sub
gs
mov
loope
pushf
in
sti
sub
cmp
movb
mov
stc
fmull
push
loope
imul
mov
add
sbbb
jle
cmc
and
dec
jmp
cs
loop
clc
pop
scas
hlt
push
movsb
inc
sub
inc
cwtl
cs
mov
sbbb
mov
shlb
xchg
daa
dec
sub
push
dec
jl
jo
jecxz
hlt
icebp
cld
mov
cltd
lock
stos
loop
ss
pop
ficompl
arpl
or
push
push
loop
adc
ljmp
rol
cld
jp
cmovns
sub
sbbb
jne
sbb
dec
in
clc
pop
mov
jecxz
sub
loop
out
ret
xorb
cltd
fstp
sub
cmpsl
loopne
call
jle
test
das
mov
fldenv
sahf
cli
inc
adc
xchg
fisubrl
jge
cwtl
rcr
mov
sub
add
call
das
xor
jge
push
pop
or
aaa
repz
add
ljmp
mov
lods
sbb
icebp
inc
movsl
loop
loopne
dec
enter
sub
add
and
sub
shl
cmc
push
out
jecxz
inc
jb
pop
pusha
dec
mov
pop
loop
loopne
push
imul
sub
push
add
sarl
jne
sbb
loope
ds
or
loopne
testb
loopne
cmp
add
pusha
wbinvd
outsl
daa
dec
adc
inc
xor
comiss
cmc
dec
mov
sub
scas
jns
add
pusha
or
sbb
add
das
xor
clc
mov
loop
jecxz
mov
xchg
mov
clc
mov
xchg
or
jne
pop
sub
nop
enter
sub
repnz
insl
mov
and
add
adc
or
out
pusha
sbb
shr
xchg
and
or
cmc
cmp
adc
cmc
movsb
jo
push
and
pop
pop
add
int3
and
jl
mov
inc
push
jne
mov
orl
sti
adc
fildl
add
sbb
push
mov
mov
push
sub
lock
loop
bound
mov
movb
mov
out
clc
out
sbb
mov
push
xor
xchg
xor
jne
pushf
ljmp
mov
sbb
test
push
xchg
push
xor
sbb
fiaddl
xchg
scas
jns
mov
xlat
inc
lods
or
ds
andb
xlat
jecxz
xor
add
and
hlt
sbb
in
mov
test
dec
inc
repz
iret
add
cmc
push
xchg
push
ficoms
add
sub
or
or
int
fcoms
jg
repz
int
and
enter
lcall
push
xor
sbb
dec
hlt
xor
sbb
inc
adc
jg
aaa
imul
ja
xchg
xlat
and
lcall
pop
pop
hlt
fstpt
imul
sub
mov
cwtl
mov
dec
or
xor
sbb
pop
dec
loope
movsl
push
dec
ds
loope
mov
xor
loopne
mov
mov
mov
cmp
lcall
xor
cmc
lret
sub
pop
push
mov
xor
popa
decl
in
adc
push
xor
loopne
cltd
popa
dec
or
dec
push
xor
lods
or
stc
mov
push
inc
sub
in
lcall
pop
push
fisubl
mov
mov
mov
pusha
jp
sbbb
push
sbb
pop
push
inc
or
xchg
addl
push
daa
int
jmp
push
xorl
cs
push
cmp
sub
test
sbb
sub
adc
outsb
jg
test
add
imul
in
into
add
stos
mov
push
and
or
orb
decb
pop
cltd
jecxz
ja
scas
jle
aas
mov
xchg
sub
push
sbb
push
sub
bound
jg
xor
bound
inc
mov
mov
out
cmp
dec
cmp
sbb
xor
addr16
jns
and
add
and
mov
xchg
pop
adc
sub
jbe
or
push
add
mov
jle
xlat
xor
pop
loope
xchg
mov
push
dec
push
sub
loope
sub
push
outsb
lods
push
adc
cmp
xchg
aad
test
push
dec
push
pop
inc
cmp
icebp
adc
adc
cmp
cmp
enter
sbbb
mov
ss
int3
sub
pop
bound
sbb
mov
xor
dec
test
shlb
rcrl
sub
lret
popa
mov
adc
nop
and
and
sbb
sub
loopne
subl
sbb
dec
pop
sub
or
or
adcb
sub
dec
push
cmc
dec
shrb
xor
and
push
aas
movsl
mov
dec
mov
dec
sbb
fucom
xchg
xor
sbb
cmpsb
js
mov
jne
aad
dec
xchg
outsl
fsubrl
xchg
ret
iret
xor
fdivr
jae
mov
cmpsb
adc
push
adc
add
aad
or
ret
test
sarb
xor
lods
sbb
addl
repnz
loop
and
mov
jle
popa
cld
adc
ss
cld
outsl
push
push
push
mov
lock
push
pop
mov
xchg
imul
lods
inc
adc
int3
add
push
mov
or
mov
or
out
mov
cmpsl
outsb
xlat
xchg
push
aas
daa
cmpl
sarl
mov
push
cmp
push
mov
inc
stos
cmc
das
je
test
aam
push
int
pushf
jo
jo
rcrb
add
or
sti
pop
ss
mov
jbe
cmp
ret
dec
push
or
pop
pop
mov
mov
mov
jae
sti
sub
sbb
mov
lea
in
or
js
sbb
push
loop
cs
stc
call
dec
xchg
mov
or
mov
js
stos
push
mov
add
and
lret
inc
cmp
mov
sub
je
push
dec
and
cltd
dec
mov
xor
adc
xchg
or
insb
cmpsb
sub
cmp
int
lret
cmpsb
aas
pop
add
pop
jmp
push
jle
dec
dec
stos
movsb
xorl
xchg
insb
dec
sub
add
sub
into
loope
push
pop
sub
ret
fcmovu
mov
das
pusha
sbb
scas
arpl
loopne
loope
mov
push
add
divb
into
xor
sub
outsb
add
loop
pop
movsl
ds
scas
bound
outsb
nop
lcall
gs
cmp
or
lcall
inc
push
add
mov
sbb
cmp
test
xchg
pop
or
xor
add
dec
xlat
push
pop
adcl
sbb
arpl
jp
mov
pop
cmpsb
and
pop
sub
dec
scas
add
mov
pop
xchg
jns
dec
add
add
orl
add
jl
sbb
fs
das
or
lock
xor
mov
add
imul
pop
push
sbb
and
stc
lea
addb
or
popa
ret
or
fsubp
xor
out
inc
pop
push
sub
je
add
jp
sub
push
jmp
xor
ja
and
add
inc
repz
dec
adc
xchg
stos
insb
jl
sub
and
loopne
mov
cs
mov
mov
xchg
jmp
call
dec
mov
nop
pop
mov
pop
pop
ss
push
stos
ret
lret
cmp
and
xorl
sbb
mov
cmc
call
mul
fsub
or
paddw
insb
push
and
dec
jg
xchg
adc
pop
clc
jecxz
sbb
cld
mov
push
cmpl
lock
cs
idivb
fsubr
jae,pn
pop
test
add
hlt
adc
bound
out
xchg
aas
in
es
mov
sbbl
mov
mov
jne
imul
and
lret
iret
xor
inc
das
mov
adc
push
je
inc
loope
mov
js
add
sub
sub
sbb
ja
mov
gs
jmp
jne
loope
sbb
lods
fsubp
pop
scas
push
pusha
lock
int3
loop
dec
mov
dec
outsb
lret
shrl
xor
xor
and
fsub
sub
add
lds
or
jecxz
lahf
leave
cmp
loope
inc
in
inc
mov
sub
and
pushf
or
jbe
mov
in
sub
ret
js
xor
int
leave
js
lock
mull
lcall
inc
pushf
ja
fimuls
dec
test
mov
mov
add
sbb
and
jne
mov
pop
loop
sub
jecxz
sub
pop
sbb
mov
scas
or
xchg
pop
push
fnstsw
sbb
idivb
jns
inc
data16
xchg
dec
incb
mov
fcomi
sti
push
pop
adc
sub
jle
outsl
add
cli
mov
xchg
out
add
mov
mov
lock
repnz
or
ss
mov
pop
pop
sub
enter
jp
dec
push
pop
jle
std
rclb
adcb
and
cs
mov
mov
and
sub
xor
fwait
pop
mov
push
xchg
inc
dec
popf
notl
cs
ljmp
into
and
dec
inc
mov
mov
mov
dec
and
adc
pop
xor
push
scas
rorl
mov
pop
call
popa
xchg
sub
out
add
or
sbb
inc
lock
mov
and
mov
mov
rolb
jecxz
sub
notl
dec
mov
jb
jg
mov
sub
sub
mov
fdivs
mov
mov
cmp
push
xorb
testb
jmp
adc
sub
div
repz
and
std
repz
lret
out
push
jg
and
jle
mov
sahf
dec
and
and
push
adc
sbbb
mov
aad
push
pop
imul
add
cli
je
aas
xor
clc
incb
sub
push
outsb
in
frstor
ret
push
or
sub
xor
roll
in
mov
outsb
add
xchg
cmpl
mov
pop
pop
jae
xor
dec
ja
sub
lock
xchg
adc
and
pop
out
fchs
stos
sub
xchg
mov
lahf
das
pop
ja
inc
lods
push
mov
inc
jmp
loopne
cmp
mov
ja
mov
mov
sti
mull
or
aas
inc
push
xor
pop
push
mov
sub
mov
je
ret
dec
lods
mov
pop
testb
add
repz
add
imul
push
shlb
les
sub
push
add
fisubrl
xchg
aaa
sbb
jle
dec
pop
or
testb
adc
or
sub
pop
lahf
jnp
nop
mov
push
in
sub
mov
jle
mov
jg
push
push
jge
nop
rcr
and
add
xchg
dec
mov
int
inc
int
cltd
jecxz
sti
pusha
push
sbb
pop
fwait
xchg
mov
cmpsb
in
xchg
inc
push
loopne
ret
cmp
orl
dec
mov
test
mov
sub
es
lret
dec
hlt
dec
cld
repnz
jae
cs
mov
or
push
push
sbb
jbe
insb
push
lcall
or
xor
js
jg
adc
mov
sub
or
jge
jg
cmp
or
mov
aaa
jle
sub
lret
fsubl
add
inc
lret
and
or
je
sbb
sbb
stos
mov
push
fsubl
movaps
mov
data16
rcrl
sahf
xor
loop
daa
insb
scas
mov
push
inc
or
jp
loopne
mov
cmp
icebp
ficoml
push
out
aad
or
cmp
inc
je
inc
aas
xor
jg
pushf
lock
or
xor
jbe
mov
xchg
imul
stc
test
adc
test
xchg
add
scas
mov
adc
xchg
sti
mov
imul
sbb
mov
or
test
pop
pop
pop
adc
mov
mov
std
xchg
sbb
sub
or
lds
test
mov
inc
add
imull
pop
or
jg
mov
test
inc
out
iret
xor
stos
cmpsb
les
das
icebp
cmc
push
jo
add
lret
call
pop
jbe
enter
sub
jle
pop
push
ret
lods
aam
jb
pop
sbb
pop
dec
pop
sahf
clc
neg
sarb
scas
cwtl
repnz
adc
inc
pop
sarb
pop
mov
lahf
dec
out
adc
idiv
mov
xor
add
xor
xor
jle
mov
xor
movsl
es
daa
outsb
or
lret
aam
in
lcall
into
xor
push
lret
sub
jle
and
notl
inc
adc
jne
test
jmp
lcall
pop
jle
inc
adc
ja
cli
inc
test
xorl
es
arpl
push
rclb
xor
test
orb
sbb
test
jbe
push
mov
jecxz
lods
dec
daa
mov
cwtl
out
sub
xor
add
insl
xor
test
or
and
je
cmpsl
insl
scas
pop
test
fldpi
jmp
inc
adc
xor
out
das
push
std
sbb
add
cwtl
mov
divb
push
jecxz
mov
popl
cmp
xlat
fstps
rclb
mov
pop
cmp
jle
mov
jecxz,pt
arpl
scas
mov
sub
repnz
js
es
lods
iret
pop
daa
stos
test
push
in
inc
xor
push
push
xchg
fisttpl
inc
mov
shrb
cmp
jo
sbb
pop
and
lods
xchg
rolb
aaa
push
dec
xor
mov
dec
and
inc
cld
pop
mov
loop
out
sub
scas
lret
sbb
cmpsb
sbb
sbb
pop
push
dec
mov
push
stc
hlt
shrb
into
repnz
sbb
sbb
sbb
sar
imul
arpl
jecxz
mov
jge
sub
cmp
jnp
xlat
ja
std
js
outsl
or
jnp
sbb
mov
xor
add
or
sbb
push
out
fstps
jg
ds
ret
jns
insl
dec
or
repz
and
push
and
insb
or
dec
or
pop
push
sahf
insl
out
xor
cmpsb
and
adc
or
in
xchg
add
mov
inc
and
dec
jl
mov
cli
push
cs
icebp
sub
sbb
mov
cmpsl
aam
or
mov
fbld
cmp
adc
jg
ja
cmc
stos
sbb
push
pop
mov
pop
ss
pop
dec
add
popf
push
fbstp
xor
cltd
pop
in
icebp
cmp
push
sbb
and
sbb
mov
cmp
or
xor
hlt
adc
icebp
xchg
out
push
rcr
ret
jp
sarl
and
inc
ljmp
cmp
push
xchg
pop
xor
imul
data16
mov
dec
xchg
aam
mov
jg
mov
popf
imul
jg
push
imul
jns
ds
cmpsb
outsl
in
mov
stos
sub
inc
dec
inc
psrlw
sbb
and
orl
ret
dec
cmp
push
dec
aas
hlt
outsl
mov
lret
mov
out
fadds
xchg
inc
sahf
call
push
pop
mov
cltd
call
loop
jecxz
or
sbb
stc
mov
jle
movsb
inc
ss
fidivrl
ficoml
popf
jmp
int
outsl
xor
xorl
call
scas
push
out
dec
cld
sbb
lret
pop
sbb
std
push
inc
adc
int3
jmp
xor
inc
xchg
das
std
lds
lret
add
shrb
andl
mov
test
inc
jecxz
popf
das
in
and
add
fsts
pop
or
mov
sbb
cmp
hlt
sub
cvtps2pd
imul
mov
pop
fcompl
cmp
and
daa
and
pop
pop
mov
and
out
add
jp
push
xor
mov
test
in
sbb
xor
andl
imul
sarl
in
pop
sbb
bound
movsb
cs
pop
push
jecxz
sbb
and
pop
jecxz
fldcw
mov
cmp
movsl
test
push
out
dec
dec
dec
sub
repz
gs
pusha
cmp
pop
jecxz
imulb
adc
sbb
sbb
aas
or
inc
cmp
sub
dec
push
cs
cmp
mov
test
mov
push
mov
sbbl
jae
andb
xchg
jae
arpl
dec
pop
pop
cmc
and
adcl
rorl
push
mov
loop
loopne
dec
nop
outsl
shlb
out
loop
push
mov
adc
enter
rcr
jmp
inc
inc
sarb
lret
fidivrl
rcll
test
out
hlt
repz
mov
inc
call
les
bound
cmp
xchg
sbb
int
push
out
addb
xor
jae
xor
repz
dec
dec
add
xor
add
xor
jae
push
rorb
inc
cmp
pop
loop
xor
outsb
addb
sub
cmp
push
in
dec
dec
loop
stos
pop
pop
push
jecxz
shrb
jle
add
xor
push
call
pop
jmp
xchg
xor
mov
jg
jae
lea
jge
cli
orl
int3
or
adc
xchg
jbe
sub
pop
xchg
xorl
and
negb
inc
inc
mov
push
pop
mov
sbb
cmp
mov
std
or
out
inc
cmc
mov
js
push
movsb
and
add
sub
filds
sbb
cltd
push
and
lret
inc
sub
mov
ret
std
scas
repz
push
int
inc
jne
jecxz
cmpsb
popf
ja
inc
mov
packuswb
push
insl
int3
popf
push
icebp
aas
inc
ret
mov
orl
mov
add
in
mov
or
jle
mov
or
mov
rcrb
out
pop
mov
mov
test
arpl
stos
dec
lret
loop
mov
lods
pop
cltd
pop
je
sub
mov
scas
push
pop
bound
lret
bound
stc
loopne
add
loope
fwait
mov
lret
call
clc
push
sbb
mulb
sub
or
add
fsubl
out
push
cs
and
out
and
add
test
hlt
out
mov
mov
add
sbb
push
vmwrite
sbb
mov
push
jge
adc
push
push
mov
std
inc
and
jmp
mov
sub
sub
xor
add
add
cmpsb
fwait
pushf
dec
movsl
and
je
lahf
jl
push
lret
test
and
movsb
aad
ljmp
or
or
je
xchg
fimull
xchg
orb
pop
lds
pop
rolb
outsl
je
ljmp
inc
push
pop
aas
xchg
outsl
repnz
jecxz
loop
stc
lret
test
repnz
jecxz
hlt
scas
jmp
sub
or
loop
inc
cmp
mov
lock
scas
sbb
jecxz
loope
xor
ljmp
jecxz
jbe
out
and
leave
nop
jae
add
push
lret
mov
lret
cwtl
outsl
mov
sbb
cmpl
sar
ljmp
adcb
xchg
movsl
mov
ret
pop
mov
int
addr16
jle
push
lret
mov
pop
fisubrl
xchg
mov
adc
stos
add
cmc
nop
aas
pop
add
shrl
repnz
or
call
dec
icebp
clc
dec
movsb
sub
and
inc
ret
pop
cld
ss
push
fdivs
xor
add
test
xlat
dec
mov
push
inc
ja
sub
jno
pushf
loopne
pop
insl
repz
mov
push
fcmovbe
or
inc
aad
mov
jnp
cwtl
arpl
iret
ret
and
in
lds
cmpsl
or
sbb
sbb
add
stos
xor
adc
add
popa
xor
mov
pop
inc
or
cmp
psraw
jmp
pop
mov
nop
out
push
bound
sbb
aad
call
sbb
dec
dec
mov
scas
lret
dec
xchg
mov
mov
pop
push
xchg
inc
rcrb
jg
mov
dec
jmp
insb
push
popf
jmp
or
push
repz
pop
lods
data16
and
dec
jne
sub
add
xor
dec
cwtl
sbb
fdivrl
lret
movsb
subb
push
inc
aad
fisubrs
push
jmp
sub
or
addr16
xchg
or
call
cmpsb
int3
lods
dec
stos
aad
fdivrs
mov
out
lods
sbb
pop
ret
nop
push
ret
push
hlt
test
mov
sbb
mov
loope
jno
imul
xor
mov
mov
push
fldl
shll
cmc
xchg
dec
xor
stos
add
sub
sbb
mov
nop
rcr
cwtl
mov
stos
push
jle
fcomps
test
add
repz
cltd
xor
dec
sbb
sbb
mov
adc
jb
jns
dec
les
ret
adc
cltd
repz
pushf
push
xor
imul
sbb
jo
inc
adc
test
inc
mov
das
hlt
sbb
test
cltd
sti
push
and
je
inc
hlt
lds
push
pop
and
add
je
iret
push
dec
pop
mov
mov
shl
lret
and
jnp
stc
mov
sti
push
mov
aam
arpl
aaa
jo
int
and
xor
loop
loopne
mov
adc
aaa
dec
inc
jne
sub
enter
xchg
dec
sbb
jg
xorb
mov
mov
or
rolb
test
push
mov
add
adc
stos
subl
dec
nop
inc
push
xlat
sahf
ret
inc
cld
sub
rclb
jge
add
add
rorb
jb
jp
and
push
mov
push
pop
jecxz
orl
and
pop
inc
xchg
loopne
orl
or
sti
and
inc
test
xchg
ret
mov
rorl
repnz
daa
pusha
test
add
ret
pop
pop
jo
hlt
sbb
cmpb
jmp
xor
jmp
or
lds
xchg
repz
add
cwtl
cli
jecxz
sbb
sti
pop
dec
and
and
arpl
jmp
mov
inc
and
cmpsb
lahf
imull
arpl
push
inc
orb
mov
lcall
xchg
mov
sbb
enter
jo
dec
xchg
sbb
push
and
inc
aas
jbe
add
mov
mov
adc
xorl
sbb
cmp
rolb
pop
push
and
fcmovb
insb
cmp
into
mov
add
ja
xor
inc
dec
sub
fiadds
jnp
fcmovb
repz
lcall
addr16
xor
inc
push
mov
into
adc
adc
mov
mov
cmp
mov
outsl
jge
cs
in
add
mov
add
hlt
sbb
dec
mov
pop
cmp
mov
adc
daa
or
andb
xlat
addb
movl
imulb
mov
cmp
cmp
fnstenv
les
stos
jmp
sbb
or
gs
cmp
mov
cmp
and
or
cli
pop
repz
imul
lret
pop
iret
sub
ds
dec
scas
xlat
les
mov
cltd
jo
mov
jmp
loope
jb
fcomps
xchg
sahf
inc
push
mov
cmp
enter
aam
cwtl
fstl
mov
out
iret
loope
in
out
outsb
xor
mov
cli
xlat
mov
mov
ret
aam
loope
call
jns
sbb
pusha
pop
loop
mov
inc
pop
mov
adc
jmp
andb
sub
jns
inc
add
pop
jb
mov
xchg
pop
mov
loope
and
ss
dec
dec
mov
adc
mov
or
adc
mov
and
dec
outsl
out
lock
cmp
and
or
and
dec
cwtl
insb
sbb
push
xor
cmpsb
insl
scas
inc
lods
add
ret
xor
cs
movsb
add
inc
adc
add
loopne
in
xchg
push
sbb
aaa
sti
or
mov
addr16
add
addb
loopne
test
push
mov
xchg
loope
movsl
or
shlb
pushl
es
int
pop
or
movsb
cld
inc
mov
dec
or
pushf
mov
jno
pop
loope
das
pop
add
mov
sub
add
pop
repz
cmp
jg
sbb
jmp
out
jbe
sbb
xor
and
dec
mov
or
daa
inc
jg
stos
inc
mov
bound
jb
or
or
int
sub
shl
pshufw
stos
mov
pushl
je
mulb
pop
and
xor
jge
mov
xlat
mov
mov
jb
loopne
scas
pop
mov
icebp
jge
xor
mov
es
adc
lahf
push
mov
pusha
add
dec
inc
rorl
dec
int3
push
add
cmp
outsb
jns
mov
dec
popa
push
jge
mov
jbe
or
stos
lret
cmp
push
std
call
xor
jl
add
and
imul
sti
and
inc
sbb
out
push
push
xor
call
or
mov
into
sarl
rorl
shlb
ss
mov
mov
jmp
mov
enter
shlb
cmp
shrl
loop
fidivl
stc
adc
ss
mov
pop
scas
popf
push
mov
mov
imul
sub
movd
add
pop
pop
aaa
or
and
jo
lret
jbe
testb
lds
push
sub
mov
inc
xchg
or
pushf
out
mov
mov
cmp
mov
sub
sti
rol
cmp
stos
das
addl
fnstenv
or
mov
repnz
in
jo
xor
adc
sbb
hlt
adc
psubq
xor
inc
add
jl
loope
inc
jns
add
push
cltd
out
fidivl
dec
or
adcb
or
xor
and
push
in
fs
lahf
mov
dec
inc
jbe
out
jae
adc
subl
fisttpll
dec
mov
jp
lds
pop
inc
sub
push
jns
lret
fdivrl
test
popf
int3
iret
dec
aad
inc
imul
dec
jg
jp
jp
dec
fiaddl
xchg
add
sbb
mov
pop
add
in
inc
xor
inc
add
test
in
in
sbb
push
ret
rclb
dec
shll
mov
jg
xchg
inc
jae
orl
stos
incb
das
push
push
dec
sbbb
jg
inc
pop
jle
jns
imul
mov
test
mov
inc
pop
es
pop
shll
sahf
subb
jmp
loope
fistps
inc
je
sbb
negb
mov
pop
or
out
call
outsl
in
mov
pop
imul
xorl
icebp
pop
and
out
popf
fistps
sbb
in
in
inc
lock
mov
fisttpl
out
call
xor
sub
push
jg
and
adc
and
sbb
dec
jo
js
jns
sub
out
xor
xlat
dec
xchg
jno
cmp
inc
cmp
dec
and
popa
pop
push
inc
movsbl
jb
push
push
sbbl
bound
xchg
cwtl
test
adc
pop
and
gs
loopne
add
leave
test
inc
roll
inc
dec
adc
push
dec
and
adc
push
pop
call
inc
push
inc
and
sarb
xor
xchg
jne
aad
inc
cs
out
fsubrp
in
mov
incb
xchg
scas
cmp
out
or
pusha
jno
jb,pn
pop
mov
mov
fisubs
popf
add
fstpt
add
test
mov
xchg
dec
out
popf
jbe
inc
popa
jno
das
jne
mov
mov
out
jbe
xor
push
xchg
das
cmp
sahf
in
ja
outsb
lea
in
popf
out
mov
sub
cmp
push
dec
into
cmp
mov
jo
jnp
pop
mov
sbb
loopne
mov
sbb
sub
loope,pn
add
in
push
add
inc
in
cmpb
add
push
lret
call
pop
mov
lahf
pop
pop
fbstp
push
cld
jl
push
push
inc
inc
inc
xchg
pop
ja
push
in
jbe
je
cmc
fstps
insb
inc
jne
in
movsl
jl
nop
scas
dec
sbb
add
daa
xor
imull
cmpsl
mov
popa
sub
add
pop
loop
sub
ljmp
sub
fwait
or
lcall
test
loope
sbb
in
les
loope
sbb
je
ret
mov
inc
dec
jno
out
fildl
jbe
xchg
jb
cmp
dec
pop
push
int
or
mov
inc
inc
mov
pop
jbe
push
inc
rorl
test
lods
lds
pop
xchg
js,pn
add
pop
bound
pop
enter
fcoms
iret
mov
mov
ret
or
mov
and
cmp
stos
loope
fstpt
pop
aad
cld
das
shrl
xor
dec
sbbl
ja
mov
inc
pop
lret
cli
testb
out
lods
pop
and
test
adc
and
jbe
lret
add
push
add
sbbb
popf
repz
ljmp
movsb
sub
sub
dec
adc
xlat
aaa
sti
pop
pusha
ds
mov
mov
push
nop
adc
push
scas
mov
jle
jne
cwtl
fs
movsb
mov
xchg
hlt
daa
sbb
ret
pop
mov
fsub
mov
inc
es
xor
cmp
stos
jne
mov
lds
adc
pop
mov
or
sub
adc
clc
aaa
cwtl
mov
push
fst
inc
sbb
xchg
inc
push
or
ret
or
in
loope
cmpsb
jl
push
iret
pop
add
dec
inc
sub
and
pop
rol
mov
repz
data16
inc
inc
cli
cmc
or
lea
pop
lret
loopne
cwtl
shlb
enter
rol
inc
aad
cmp
in
xchg
pop
mov
dec
loope
mov
and
das
je
lret
mov
divl
sti
push
push
inc
in
or
cld
xlat
xor
mov
cmp
and
or
scas
sbb
and
jbe
push
mov
jg
cmp
pop
jecxz
sbbb
push
jge
jle
dec
popf
loope
add
xlat
popf
insb
lea
inc
and
mov
ss
dec
or
pop
sub
loope
movsl
sub
in
popf
push
test
cwtl
ret
pop
mov
inc
mov
icebp
mov
or
shll
subl
adcl
addl
int
hlt
popa
inc
push
sub
push
adc
cwtl
cltd
mov
in
mov
xor
lods
packsswb
repz
mov
adc
inc
cltd
sbb
mov
mov
aam
insb
rcrl
test
lahf
dec
xchg
addr16
add
sbb
add
popf
xor
xchg
enter
outsb
repz
cmp
pop
testl
mov
pop
sbb
add
movsl
clc
mov
pop
and
push
cmp
cmp
inc
and
or
ljmp
sbb
idivb
jg
push
out
xchg
hlt
fsubrl
pushf
cwtl
popf
mov
add
dec
cmpsb
xchg
add
popa
mov
pop
jle
sbb
ret
inc
fsubl
or
pop
sub
subb
add
xor
pop
cs
dec
sbb
mov
lods
and
ficomps
icebp
je
push
mulb
leave
bound
loop
mov
rcrl
fwait
lcall
mov
dec
jle
orl
cmp
pop
movsb
mov
pop
inc
xor
dec
or
add
lcall
fstps
js
addb
ja
cmp
aaa
lahf
aam
pusha
jb
or
jl
insb
hlt
xchg
inc
xchg
xlat
or
adc
fucom
mov
sbb
js
dec
jae
daa
push
pop
fwait
dec
pusha
repnz
pushl
push
idiv
or
inc
repnz
into
pusha
lfs
pop
pop
fistpl
lods
in
dec
jg
divb
mov
jecxz
push
nop
and
xchg
push
pop
loop
adc
sub
popa
lahf
nop
pop
scas
jl
or
lret
pop
and
in
pushf
mov
sar
add
sub
sub
add
loop
js
xchg
dec
mov
jp
and
sub
movups
loop
inc
daa
ret
ss
enter
mov
add
pop
or
xor
popa
outsl
pusha
add
mov
das
or
aad
pop
ss
pop
pop
pop
das
dec
pop
and
push
ret
jecxz
and
pop
pusha
daa
daa
aaa
sbb
fmull
lock
push
ja
aas
sub
insl
sbb
jbe
push
cmp
arpl
xor
jle
pop
mov
mov
xorb
cs
repnz
push
push
ds
pop
pusha
adcl
adc
int
cld
in
jge
pop
push
push
jle
mov
mov
mov
dec
loop
xor
add
sub
add
ss
mov
push
adcl
pop
ret
fadd
inc
pop
dec
sbb
pushf
sub
cmp
fcmovne
add
hlt
cmp
and
pop
lods
cli
cltd
mov
sbb
fwait
addb
and
icebp
pop
shrl
jecxz
dec
into
sub
notb
jno
jle
mov
jg
mov
mov
mov
cmp
jle
sbb
mov
pop
fs
into
mov
dec
sub
fstps
shlb
pop
and
bnd
jle
cmc
andb
jecxz
sbb
pop
pop
inc
sbb
add
inc
mov
jge
jle
jne
inc
lea
and
test
test
push
or
jle
dec
hlt
cmp
mov
outsb
adc
sub
xor
hlt
mov
dec
mov
inc
xor
lcall
int3
js
add
repnz
sub
enter
mov
fwait
push
jbe
dec
rorl
lret
js
or
and
push
or
pop
gs
sub
sbb
pop
cmp
roll
push
xchg
fidivrl
sub
lcall
in
mov
rcll
and
push
or
mov
das
mov
xchg
push
addl
dec
sub
or
jae
bound
mov
fwait
imul
repnz
pusha
lret
in
mov
int
xchg
inc
dec
lret
or
orb
das
gs
add
xchg
nop
dec
lahf
cld
popf
jnp
mov
nop
shl
dec
add
jl
enter
push
or
and
aas
sahf
push
mov
push
imul
xchg
scas
sub
repnz
dec
xchg
popf
popf
xor
cmp
lock
mov
es
ljmp
hlt
pop
sbb
movsb
insb
les
popf
lock
xor
and
jl
shl
aaa
xor
sub
ds
sarl
pop
add
xor
and
out
sbb
sbb
enter
mov
sbb
xor
lret
push
sub
or
adc
lret
repz
leave
mov
pop
cli
cwtl
bound
fs
adc
add
sar
adc
lods
leave
icebp
sbb
imull
fucomi
add
xchg
pushf
inc
mov
outsb
scas
pop
bound
jle
sbb
sub
xor
xchg
out
pop
push
loope
lea
jp
xor
dec
or
mov
cmc
and
or
or
sbb
test
mov
cld
aam
fsubrl
mov
cmp
popf
into
add
orb
daa
lret
es
loop,pt
push
mov
add
je
insl
mov
add
mov
lahf
push
lock
jle,pn
mov
hlt
pop
push
loop
mov
ljmp
loopne
sbb
adc
and
lret
and
cmpsl
push
mov
jge
addl
push
jns
mov
and
movsl
push
cmc
mov
jecxz
lcall
push
outsb
cmp
adcb
pop
push
jecxz
cs
xor
dec
jbe
dec
dec
jne
bound
or
sahf
pop
out
mov
aam
pop
imul
insb
jne
adc
push
xor
dec
sub
es
loope
addl
add
adc
or
cltd
xor
lret
loop
or
sbb
adc
jl
ret
mov
fisttps
fcmovnbe
and
imul
ljmp
mov
lret
inc
testl
mov
push
mov
mov
repnz
paddw
push
sbb
jp
jb
es
das
enter
leave
cmc
sbb
loop
and
lret
cld
mov
test
lret
or
inc
inc
xchg
std
inc
icebp
out
xor
mov
aad
pop
push
xor
dec
cmp
pop
rolb
cmp
cmp
and
lcall
out
popa
testb
sub
mov
pop
sbb
fprem1
outsl
cli
icebp
sub
aas
outsb
hlt
decb
cs
xor
sbb
mov
adc
rcll
mov
dec
fsubl
adc
xlat
push
dec
sbb
ljmp
iret
dec
push
mov
das
and
gs
sbb
cltd
ret
pop
pop
and
pop
and
push
mov
push
pop
push
inc
jmp
push
lods
loope
push
les
pop
inc
push
push
in
subb
popa
pusha
repz
psubd
imul
daa
jno
into
hlt
inc
sbb
pop
pop
jo
pop
enter
repz
fcomi
fwait
jno
dec
pop
or
into
push
or
pop
pop
pop
mov
and
dec
or
cli
pop
daa
inc
je
jge
push
mov
add
inc
add
test
jecxz
sub
dec
dec
orb
and
repz
out
pop
sbb
call
pop
ret
out
testb
xchg
and
outsl
lret
mov
mov
sub
add
or
sub
xchg
movsl
iret
pusha
inc
add
sbb
or
pop
fcmovbe
push
cs
lret
xor
jle
lahf
pop
repnz
je
xor
jb
outsl
push
push
and
ficomps
stos
punpcklbw
xchg
push
pop
inc
das
repnz
test
push
pop
add
sbbl
add
xor
adcl
cmc
fldcw
jbe
rcrb
add
push
dec
call
loope
das
lret
in
dec
int
lahf
cld
push
dec
add
aad
inc
enter
xor
xchg
addb
pop
enter
inc
shlb
jb
test
cmp
ficompl
push
mov
push
popl
out
je
inc
scas
mov
loopne
push
cli
fsubrl
jle
pop
mov
sub
fildl
dec
es
loop
addl
add
add
sbb
dec
fldl
jg
arpl
cld
das
sbb
mov
ret
loope
jmp
xor
loop
jns
add
or
gs
smsw
push
adc
and
push
push
stos
cld
dec
in
mov
jmp
and
ds
sub
repnz
mov
pop
mov
add
lods
add
ja
out
int3
fsubs
jo
push
jp
add
stos
inc
in
icebp
jbe
xchg
fsubrl
sub
dec
loop
roll
arpl
inc
loope
movsl
jle
popf
jmpw
out
ja
je
les
loope
sub
test
pop
popa
add
das
and
popa
inc
sub
inc
std
inc
lcall
sub
dec
orl
xor
loope
fcmovb
cmp
les
fisttpll
xchg
cmp
lcall
addr16
adc
lods
je
arpl
cmp
jle
gs
sbb
push
pop
xorl
clc
mov
mov
sub
mov
push
movsl
cs
jbe
movlps
loope
inc
pushf
cmpsb
pop
stc
rcll
push
sbb
dec
loope
hlt
mov
fisubrs
inc
cmpsb
insl
pushw
pop
clc
sbbl
push
cmpsl
cld
lods
sbb
dec
jecxz
jle
dec
repz
adc
fadd
push
cli
out
push
in
xchg
lods
xor
loope
jle
push
ret
dec
in
and
inc
ss
push
jge
xchg
push
cmp
and
mov
jl
jmp
out
push
loop
fldcw
xchg
xor
inc
mov
rcrb
mov
push
stos
ret
cmpsb
jo
and
cmp
or
sbb
repnz
icebp
push
je
stc
andl
pushf
xchg
int
ficoml
pop
and
pop
scas
push
ja
aam
das
and
jl
ret
mov
adcl
ret
enter
xchg
pop
add
cmp
mov
test
sarb
xchg
adc
and
sub
out
scas
sub
into
dec
arpl
cmp
call
out
push
mov
lods
test
std
sub
cmp
xor
iret
fadd
les
xor
sbb
fldl
jp
stc
mov
inc
mov
jg
inc
mov
je
lea
adc
dec
sub
je
jg
jle
mov
aaa
sbb
inc
mov
push
fildl
call
and
xchg
outsb
add
iret
sbb
mov
jno
loope
mov
push
out
mov
orl
push
inc
lock
lds
adc
push
push
mov
mov
lock
lock
loop
out
cmp
test
fidivs
sbb
fdivrl
lods
in
mov
leave
mov
jge
lret
in
lret
loop
jo
lcall
pop
rcrl
sbb
mov
lock
pop
inc
movsb
test
jp
clc
scas
jg
adc
pusha
add
mov
push
push
pusha
dec
xchg
ret
js
outsb
stos
daa
inc
cmova
movsl
mov
lcall
outsb
into
aad
filds
cmpsl
pop
nop
sbb
sahf
test
ja
dec
sub
sbbb
or
mov
push
xchg
sub
pop
fisubs
nop
add
adc
mov
inc
nop
cmpsb
push
push
in
inc
cmpsb
push
inc
jb
pop
ret
sbb
cmp
add
xor
sti
inc
sbb
push
mov
jae
lds
les
cmpsl
cmpsb
xor
pop
inc
in
inc
dec
jl
sbb
pop
dec
out
fwait
mov
outsl
lock
inc
shlb
jmp
inc
mov
cmp
sbb
push
loop
fcmovnu
idivb
dec
lds
pop
loope
inc
enter
mov
mov
xlat
sub
xor
sbb
or
loop
insb
sahf
mov
insb
push
imul
push
fldl
ljmp
sbb
test
fwait
idivb
orl
out
sbb
sub
and
into
loope
jo
mov
icebp
mov
adc
setp
xor
xchg
cmc
arpl
mov
or
loop
xor
outsl
lods
mov
sub
insl
sahf
shl
cmp
popa
insb
addl
mov
sub
sbb
xor
dec
adc
and
push
sbb
nop
inc
push
cmp
lahf
mov
aam
sub
rclb
decb
sub
pop
andb
pop
and
imul
mov
add
das
jbe
xchg
mov
jp
xor
ret
stos
push
sahf
mov
stc
ret
das
ss
stos
push
jbe
lods
out
cmc
xchg
cltd
hlt
jle
loope
add
icebp
jne
in
cmp
mov
fidivrs
xor
add
add
insl
leave
cltd
xor
jge
mov
sub
push
add
cmc
js
adc
xchg
inc
mov
repz
mov
adc
dec
lret
call
loop
inc
push
dec
inc
test
and
xor
out
push
add
xchg
xchg
sbb
pop
fdivr
mov
mov
push
push
fistl
mov
roll
push
int3
xor
dec
jmp
daa
inc
into
xchg
sbb
and
lock
ret
movsl
outsb
fcos
cmc
mov
dec
popf
out
pop
es
or
ds
lods
je
inc
ret
je
punpckhdq
mov
cmp
dec
jae
rcr
addl
out
xor
lret
sub
adc
fcoms
sub
mov
push
push
add
sub
orl
subl
out
sbb
cmpsb
pop
jp
imul
bound
mov
adc
addr16
inc
mov
ja
dec
mov
inc
popf
dec
dec
hlt
sbb
mov
sbb
std
hlt
lcall
sbb
xor
sbb
les
push
daa
gs
inc
dec
hlt
mov
pop
idivl
out
jge
xchg
adc
add
rolb
bound
and
jecxz
push
push
dec
xor
mov
ret
or
mov
add
icebp
add
inc
add
outsb
jbe
das
movsl
add
pop
push
xchg
sub
aas
fnstcw
mov
cwtl
adc
or
insb
jnp
mov
jge
push
mov
push
mov
ljmp
inc
fs
jle
arpl
mov
aad
hlt
push
and
dec
or
push
scas
sbbl
stos
sub
push
cwtl
xchg
repz
jmp
push
push
mov
mov
hlt
cmp
push
inc
push
mov
inc
add
inc
add
clc
pushl
pop
inc
scas
jg
cs
fildl
sub
adc
add
repnz
sub
cmp
int3
fsub
les
js
sarl
inc
sbb
pop
jo
push
xchg
nop
in
jge
inc
sbbb
cli
jle
decb
es
cmp
inc
scas
loop
imulb
cld
pushf
int
inc
addb
push
adc
jg
inc
int3
add
popa
jge
jl
add
popl
aaa
icebp
sti
and
or
lahf
dec
pop
push
fwait
push
mov
hlt
test
jns
mov
pop
adc
repnz
sbb
movsl
adc
and
fisubrl
inc
or
xor
xchg
out
fdivp
ret
lahf
cmp
jbe
dec
cmp
or
jmp
lock
xor
jb
lock
je
sub
push
xor
cli
add
scas
pop
lcall
sbb
pop
insl
cmpsl
in
inc
xchg
cmp
or
cmp
out
and
hlt
adcl
test
int3
inc
enter
sub
add
loope
orl
out
scas
pop
xchg
dec
xor
fwait
lret
out
jecxz
dec
out
ja
add
sbb
mov
and
gs
cld
mov
int
mov
mov
fdiv
daa
pusha
or
mov
mov
into
adc
mov
out
loop
cmpsl
fistl
mov
hlt
jne
push
fstpt
shr
or
mov
xchg
iret
pop
das
cld
sbb
in
jmp
xor
push
ja
std
dec
push
pop
push
cmp
sub
xchg
add
push
push
dec
add
pop
pop
loope
aaa
inc
iret
sbbb
inc
cmp
lret
adc
das
mov
push
adc
ret
mov
adc
mov
jo
std
adc
lahf
xchg
inc
xor
jg
jge
sbb
and
jl
mov
daa
xor
std
jle
fcmovnu
sub
add
arpl
das
dec
fstl
dec
stc
mov
int
sbb
sub
jp
lahf
add
shl
arpl
inc
xor
je
jle
enter
enter
sbb
sbb
loope
cmp
out
cli
popf
mov
test
sub
dec
lahf
xor
inc
push
shrl
ja
push
pop
or
leave
das
jle
jo
pusha
pop
add
sbb
xchg
lret
out
add
adcl
push
fidivl
pushf
inc
xor
xor
sub
cs
das
xlat
jmp
je
shll
scas
call
cli
mov
jp
mov
mov
or
int3
jle
mov
mov
std
or
je
jle
mov
mov
sub
js
xor
jl
pop
fmull
xor
pop
mov
cmp
test
or
popl
minps
jns
xchg
sbb
and
stc
cwtl
les
push
call
popf
jns
das
aam
cmpsb
or
push
int
xor
sbb
out
outsl
loope
lock
fcompl
cmc
add
sub
sub
sbb
les
pop
cli
imul
fsts
popf
jb
es
ficoml
mov
sbb
jne
cs
movb
insb
sub
fimuls
shrb
sbb
sbb
and
dec
ret
jecxz
loop
shr
mov
mov
aas
gs
int
outsb
ret
loope
xchg
inc
out
in
shlb
ret
shrb
mov
dec
iret
shrl
sub
out
pop
sub
lret
test
shll
das
and
les
cmp
pop
jl
push
cmp
sti
inc
fisttpl
or
push
lahf
mov
loope
jg
cmpsb
push
icebp
fsubp
sub
fistpl
adc
mov
arpl
pop
dec
gs
add
cmc
popa
fnstcw
push
ret
aas
inc
cld
negl
adc
lret
or
xor
adc
push
push
mov
mov
lcall
pop
ror
add
push
pop
sub
jne
mov
fstl
pop
icebp
jp
jl
loop
leave
mov
and
test
jb
mov
lods
pop
push
int3
add
test
mov
jnp
jmp
xchg
push
mov
nop
pushf
sub
push
daa
mov
adc
cmpsl
and
ret
sub
push
inc
ret
stos
fucomip
jnp
repnz
ss
add
xor
pop
ret
pushf
dec
sbb
daa
or
jmp
hlt
jbe
sbb
call
push
fistl
inc
and
pop
add
cmpsl
push
push
mov
pop
jne
fidivrs
insb
pop
out
or
orl
stos
cmc
push
loop
or
repnz
sub
sbb
add
sbb
mov
adc
or
shll
xchg
sbb
sbb
xchg
ss
insb
fsubl
mov
sbb
xor
adcb
out
mov
hlt
mov
pop
jg
cmc
lock
aad
and
sbb
sub
inc
and
mov
push
mov
and
sub
or
hlt
xlat
out
ja
jae
nop
pop
js
sub
sbb
fcmovnb
aam
cmpsl
addb
mul
loope
std
mov
lock
lock
sahf
mov
fwait
subb
push
mov
das
add
sub
dec
mov
sbb
pop
fnsave
out
pop
outsb
inc
dec
jmp
add
and
and
scas
pop
stos
dec
inc
cltd
jb
dec
stos
pusha
inc
cmp
and
sarb
pop
repnz
jo
mov
add
jne
inc
pop
ja
jbe
outsb
dec
gs
pop
jg
push
cmp
mov
push
push
inc
repnz
pop
jg
xor
fstpl
outsl
leave
into
mov
bound
inc
xchg
insb
bnd
ror
and
popa
xor
fcoms
adc
pop
call
icebp
cmc
push
mov
out
adc
sbb
ret
sbb
pop
pop
adc
sbb
sahf
nop
pop
cli
loope
mov
sbb
push
outsb
push
adc
push
jb
add
je
jp
inc
stos
rol
je
sbb
sbb
int3
imul
jg
xchg
outsb
sub
lods
xor
pop
and
loope
push
scas
mov
cs
mov
loopne
lcall
out
loop
out
dec
and
icebp
test
and
mov
dec
pop
and
pop
mov
imul
or
mov
std
test
jne
in
lret
push
add
jb
or
xor
add
fdivs
xchg
and
cmp
cmp
add
pop
add
push
and
rcrl
fnstenv
insl
dec
add
pop
sub
mov
push
fimull
push
faddl
adc
add
aaa
add
or
push
cwtl
dec
loope
loopne
fs
lahf
dec
cltd
push
add
and
ficompl
xchg
inc
cmpsb
aaa
inc
iret
in
push
fisttps
xchg
inc
pop
inc
cmp
dec
jmp
das
adc
xor
sbb
mov
sub
push
dec
loope
fnstenv
sbb
or
adcl
das
fdiv
sub
roll
shll
lcall
jle
bound
mov
sbb
xor
stos
pop
je
pop
inc
mov
in
push
jle
daa
and
push
add
pop
pop
lea
pusha
jbe
mov
dec
push
xor
cs
mov
das
mov
mov
rorl
cmove
icebp
test
inc
cmpsl
imul
inc
iret
insb
add
pop
loop
sub
test
mov
adc
sub
push
mov
ja
push
xor
cmpsl
mov
push
dec
xor
jae
std
addr16
lds
mov
cld
dec
cmp
imul
inc
inc
loope
repnz
jg
mov
popf
and
sti
int3
cmp
dec
scas
add
xchg
je
inc
mov
pop
mov
fldcw
scas
or
cld
dec
xchg
insl
and
jl
push
sbb
or
inc
fdivrl
rcrb
pop
cli
dec
nop
jbe
lret
iret
and
hlt
sbb
xor
jne
mov
sbb
jo
push
mov
outsl
inc
mov
std
push
lret
inc
sbb
cmp
inc
add
jne
pusha
sbb
inc
adc
dec
ja
dec
mov
or
add
out
or
loop
movsl
ss
mov
jg
int
sbb
and
or
push
pop
sti
xor
enter
out
stos
idivb
iret
xor
mov
cmp
mov
std
cmc
cs
clc
sub
xlat
in
setbe
cwtl
in
or
or
movl
mov
jns
pop
lods
xor
test
cltd
mov
add
pop
inc
cli
mov
dec
and
push
rcrb
sbb
pop
sub
pushf
jnp
pop
jge
ret
jno
shll
xchg
stos
and
sub
dec
repz
inc
and
gs
cmp
repz
imul
jne
sub
repz
in
xchg
in
and
jecxz
pop
cmc
mov
add
push
push
add
sub
jg
call
mov
push
push
mov
cmpl
push
pop
imul
sbb
int3
cs
cmc
jbe
inc
xor
das
jne
sahf
push
and
xchg
scas
incb
ret
sbb
rorb
popf
das
bound
pushf
out
loopne
lahf
sbb
in
adc
pop
sahf
xlat
repz
pop
adc
cmp
jbe
ret
lods
push
push
add
out
fwait
push
sbb
inc
aas
divl
and
push
mulb
or
sbbl
push
xchg
andl
enter
sbb
cli
xchg
cmpsl
inc
cmp
mov
movsb
add
inc
lock
sub
inc
and
push
movsb
hlt
mov
repnz
mov
jnp,pt
xchg
outsb
jne
nop
ja
pusha
leave
or
jb
das
loop
add
push
lcall
xchg
ja
in
int3
popa
sbb
movsb
test
push
pop
div
stc
sbb
pop
test
sub
js
int3
popa
add
ds
sub
jecxz
add
rol
gs
push
sbb
enter
sub
cmpl
jno,pt
jg
mov
xchg
sub
sahf
mov
sbb
lahf
dec
add
push
das
aas
lret
nop
xlat
lcall
sbb
jl
lsl
movsb
cld
stc
repz
adcb
push
scas
sbb
xorl
add
pop
loope
rcrl
pop
rcrb
cwtl
xchg
jl
pop
ret
stos
jae
outsl
sub
imul
mov
xor
cmpsl
mov
sub
mov
jne
cmpsb
lcall
mov
or
lods
fsubs
mov
outsb
sub
xor
push
rcrl
call
add
insb
xor
jg
inc
enter
fmuls
xchg
out
inc
movsb
cwtl
cmp
test
out
fidivrl
dec
xor
insb
push
data16
shlb
mov
repz
mov
clc
rol
pop
xor
stos
in
sbbl
dec
cmp
push
or
mov
stc
or
pop
sub
pusha
dec
cltd
add
into
pushf
or
push
popf
dec
xchg
sub
pop
enter
push
inc
pop
frstor
push
push
inc
sbb
sub
cmpsl
insb
xchg
or
or
push
xor
fnstenv
and
jne
mov
scas
xor
outsb
pop
jb
cmp
push
sbb
jmp
adc
ret
inc
xchg
xchg
dec
and
jecxz
adc
fiadds
mov
xor
sub
popf
mov
in
push
cmp
sbb
sahf
hlt
sub
xlat
push
cs
cmp
jne
push
push
mov
pop
mov
out
mov
ret
jg
js
pop
pop
adc
stos
lahf
clc
add
iret
adc
mov
xchg
sbb
xchg
adc
mov
or
aad
adc
dec
enter
push
xchg
enter
inc
orb
jmp
or
xor
int
sbb
mov
dec
ss
sbb
jle
inc
dec
cs
mov
fiadds
push
sbb
iret
push
popf
daa
scas
testl
jle
and
dec
and
mov
push
clc
mov
daa
adc
jg
in
sub
cmp
jnp
rclb
adc
inc
outsb
dec
shll
movl
loope
in
push
mov
insb
and
or
aad
jns
inc
dec
mov
sarl
enter
cmp
fwait
mov
pop
les
sub
lret
sub
add
jno
lcall
mov
cs
shl
hlt
xchg
sbb
mov
shll
outsb
sbb
enter
loope
ljmp
cltd
and
sbb
dec
jle
bound
insl
aaa
sbb
testb
push
fdivs
mov
add
pop
andnps
and
fwait
cmp
ja
sarb
je
xchg
push
dec
ss
shrl
aam
insb
sbb
dec
push
jno
popf
xchg
jge
mov
xor
lret
mov
add
out
adc
les
mov
xchg
sub
jl
xchg
jp
and
nop
mov
push
cmpsl
push
and
sub
jg
ror
xor
add
inc
mov
out
int
add
outsl
push
scas
scas
pop
stos
inc
mov
lahf
fistpl
cli
je
js
jg
mov
pop
cmc
test
into
stc
nop
cmp
cmc
lods
subl
into
jo
rcrb
adc
and
pop
icebp
xor
and
es
jae
jge
push
pusha
adc
ja
jbe
mov
mov
testl
call
dec
push
xor
je
mov
sub
dec
push
add
xchg
sbb
imul
xor
out
add
sbb
and
push
push
mov
and
jp
ljmp
out
push
ja
adc
xor
std
icebp
jo
test
push
jnp
movsb
xchg
inc
or
pop
fcomps
mov
fisubrs
mov
or
mov
je
cltd
sbb
push
xor
xchg
stos
add
dec
mov
imull
pop
pop
lret
push
loope
mov
roll
shrl
push
scas
ljmp
cwtl
stc
movb
mov
das
imul
jmp
inc
push
pop
stc
mov
pop
seto
xchg
adc
add
pop
xchg
push
js
mov
mov
and
stos
stos
pusha
mov
ja
push
xor
cmc
sub
hlt
xchg
and
sub
cwtl
ret
add
pop
iret
fwait
cmp
popa
int
inc
jo
pushf
ljmp
fidivrs
sub
sub
pop
inc
ja
mov
cs
dec
dec
shl
mov
iret
add
mov
fadd
orl
xor
ss
mov
jecxz
mov
inc
icebp
shll
fwait
xchg
aaa
outsl
mov
dec
add
mull
decb
shl
int
sub
xor
sub
testb
test
cmpb
add
subl
cmpsb
ret
jecxz
dec
aaa
adc
mov
out
add
hlt
movl
out
and
push
push
idivb
mov
jns
jae
into
lock
ss
pop
and
notl
je
jmp
and
mov
sbb
inc
rorb
lea
repnz
int3
shll
xchg
xor
jg
lcall
add
inc
cltd
jmp
sub
lret
mov
fsubrl
call
mov
push
push
xor
je
cmc
ds
in
xor
mov
push
sub
out
ljmp
out
mulps
movsb
scas
sub
add
hlt
inc
push
andl
sbb
nop
cmpsl
pop
dec
jns
cmp
pop
jp
iret
mov
popf
inc
test
repnz
sub
ds
jne
adc
popa
insl
out
test
mov
cmp
iret
xor
int3
add
xlat
jo
dec
fidivrs
pop
lock
lea
hlt
popf
jle
inc
xlat
roll
add
iret
jl
fbstp
lock
sbb
dec
xchg
push
and
mov
push
loop
push
xchg
arpl
subb
add
sbb
adc
inc
js
jecxz
loope
dec
mov
cmp
and
in
adcl
mov
pop
lock
shrd
jno
iret
aaa
pusha
dec
sub
cmc
jmp
repz
mov
push
std
dec
and
mov
xor
sbb
push
jnp
popa
sub
dec
xor
add
add
outsb
inc
dec
inc
push
mov
loop
sbb
insl
jae
push
or
cs
sbb
jle
dec
ja
shrb
nop
cmp
cltd
dec
sub
loop
dec
push
xchg
icebp
sub
jbe
out
in
pusha
cmpsb
int3
clc
push
push
inc
popa
fisttps
fwait
pop
test
pop
pusha
test
jp
push
stos
and
push
mov
push
or
pusha
or
sub
je
fsubr
rolb
outsl
shll
pushf
mov
mov
loopne
je
add
loope
loop
inc
arpl
push
push
loope
lea
sbb
push
out
xor
dec
andl
ja
lcall
lret
mov
lds
mov
jmp
bswap
test
or
xor
mov
daa
push
leave
repnz
lea
xchg
add
add
adc
repz
mov
sub
jo
mov
in
dec
add
push
addl
sub
das
mov
mov
or
inc
add
mov
insb
cmp
mov
scas
repnz
sub
jg
lahf
cltd
xchg
inc
insl
repnz
adc
add
sarl
pop
fldt
leave
dec
and
xor
enter
sbbb
out
add
pop
ja
jl
push
repz
xchg
pop
scas
cmc
and
jmp
fisttpll
inc
loope
fdivl
mov
pop
mov
iret
pop
sub
int3
xchg
pop
and
add
sub
pop
inc
jb
sti
dec
sbb
das
call
out
sub
inc
sbb
loope
mov
xor
or
mov
stos
adc
sub
pop
xor
dec
mov
lcall
push
or
cli
push
jbe
pop
repz
inc
inc
ljmpw
in
jge
jb
daa
mov
rclb
mov
outsl
cmp
pop
sbb
mov
mov
ret
outsb
jge
icebp
inc
jbe
dec
bound
data16
pushaw
xor
mov
jo
fnstcw
mov
inc
retw
jg
out
popf
xchg
sbb
lahf
push
xchg
dec
outsb
mov
pop
cmp
rcl
mov
push
cmp
call
jl
std
jmp
daa
pop
pop
jge
clc
div
fldl
icebp
add
sub
jnp
sbbl
push
out
sbb
loope
repnz
push
outsb
cmp
mov
mov
mov
inc
loop
arpl
pusha
repz
sub
aaa
xor
jb
out
loop
or
subb
nop
add
data16
mov
sbb
ds
sub
popa
xor
and
dec
xor
pop
es
xor
or
add
hlt
xchg
in
xchg
inc
xchg
push
lahf
xchg
push
cmpsl
bound
test
sbb
add
pop
xchg
add
pop
push
mov
jno
popf
cmp
dec
adcb
pop
or
aam
mov
mov
and
dec
ficomps
sarl
mov
clc
lea
mov
push
mov
lahf
push
stos
inc
sub
hlt
or
jge
sbb
mov
cmpsl
pop
sub
fisttpl
lret
fimuls
xchg
outsb
adc
dec
adcl
pop
mov
aaa
dec
gs
and
mov
imul
pop
dec
les
int
daa
fs
add
test
sbb
mov
andb
jnp
lods
sub
sbb
mov
das
jmp
lcall
call
or
mov
lahf
out
sub
ja
jno
mov
sub
adc
cld
push
in
hlt
psubw
mov
test
lcall
or
pop
inc
sbb
shl
adc
sbb
push
repz
andl
into
lret
pop
xor
xchg
mov
dec
jle,pn
lret
sbb
push
xchg
rorl
and
lahf
jno,pn
xchg
xchg
popf
out
or
jl
pop
and
rcrb
loop
aaa
mov
add
or
lods
pushf
push
testl
push
outsb
insb
lahf
dec
push
lcall
nop
loop
inc
pushf
icebp
das
imul
sbb
push
dec
mov
cli
jmp
dec
adc
push
js
sbb
lods
fcoml
add
out
push
cmpsl
sbb
sbb
fmuls
xor
ret
sub
ret
and
xchg
push
cmp
in
jle
fisttpll
rcrb
add
jbe
push
mov
cld
ret
data16
xor
mov
inc
push
push
movsb
dec
sahf
loopne
or
scas
inc
jle
sbb
daa
ds
lcall
push
cli
ss
lock
ljmp
sbb
jmp
pop
adc
adc
pop
enter
rol
loopne
jno
lret
into
rcrl
dec
aaa
ret
enter
adc
mov
push
fsubp
repnz
add
cmc
add
insb
add
gs
push
xor
daa
fstpl
sbb
icebp
fcoms
push
shlb
xor
add
loop
or
xchg
mov
and
popf
adc
cmpsb
and
or
mov
mov
mov
adc
cmpsb
aaa
arpl
pushf
inc
inc
xchg
rclb
sub
pop
and
lcall
inc
movsl
movb
cwtl
orl
enter
repz
jnp
or
jle
sub
inc
sbb
cltd
xor
push
gs
cwtl
movsb
sahf
lods
add
fidivl
shlb
lods
in
cmpsb
cmpsl
jae
sub
sti
and
daa
and
and
and
and
shlb
xor
push
loopne
add
or
mov
lcall
and
rcrl
das
pop
sub
scas
jne
fidivl
inc
int
daa
pop
pop
cwtl
dec
psubsw
mov
sbb
testb
dec
push
sbb
in
sarb
xchg
sub
sub
and
insl
add
dec
jp
xor
bound
or
data16
popf
and
cmp
dec
add
sub
int
sbb
dec
dec
insl
mov
push
lea
out
jo
jg
addb
sub
xchg
cmp
pop
sbb
es
xor
mov
and
test
pop
addl
inc
sbb
subl
inc
popf
xor
xchg
adcb
inc
mov
ret
mov
push
pop
jg
jge
add
mov
sti
dec
dec
add
xchg
js
xchg
jg
repnz
inc
fistps
xchg
ret
pop
mov
out
inc
inc
les
movsl
in
mov
mov
or
mov
clc
inc
test
xchg
mov
decl
mov
pop
lods
push
rcrb
lock
nop
pop
pop
sub
dec
add
xor
jg
inc
lea
pop
and
and
lcall
sub
cmp
ret
inc
pop
sarb
in
jle
dec
or
out
shlb
fcomi
or
push
ss
loop
jg
xchg
jecxz
insb
or
xor
test
add
adc
pop
jecxz
fldt
ret
add
push
loop
xchg
push
xchg
pop
sbb
fs
or
xor
cmp
adc
mov
sbb
xor
xor
xchg
fsub
test
push
cmpl
xor
dec
jp
ret
call
pop
cmp
and
add
cwtl
es
xor
sub
inc
loopne
ja
sbb
loope
lock
loopne
arpl
xor
dec
icebp
sbb
clc
sbb
xchg
rcrb
mov
sbbl
popf
loopne
push
cli
call
pusha
and
xor
outsl
out
divl
icebp
insl
jl
loop
inc
sub
adc
sub
inc
and
aaa
cld
dec
pop
pop
sbb
bound
sahf
mov
mov
stos
mov
pop
int
pop
mov
inc
dec
jno
and
push
pusha
pop
std
into
push
roll
push
mov
cmpsl
inc
xchg
jb
dec
dec
jne
mov
lahf
loop
or
push
cmp
cwtl
repz
push
or
popf
fsubs
movsl
add
jmp
dec
movsb
andb
test
repz
dec
jns
push
push
fbld
add
jge
push
movsb
imul
add
pusha
xchg
pop
out
lcall
push
add
mov
imul
and
xorl
ficompl
repz
mov
jecxz
in
and
mov
fsubrl
lret
dec
sub
sbb
fwait
rolb
fbld
jge
pop
dec
jge
in
outsb
cmp
push
xchg
mov
mov
jbe
movb
xorl
cld
test
loope
add
xchg
pop
into
inc
inc
adc
test
loop
push
sub
mov
sbbb
cmpsb
test
repnz
sub
mov
lret
stos
ret
add
or
dec
ficompl
pusha
test
cltd
stos
cwtl
mov
sbb
cs
dec
outsl
sbb
sub
ja
cmc
imul
ds
or
out
faddl
loope
repnz
stos
sbb
pop
mov
sub
data16
fsubs
clc
rclb
test
fwait
lret
dec
shlb
and
jecxz
or
ljmp
ret
es
mov
and
movsl
repnz
push
cmc
in
push
push
in
mov
jae
sub
movsl
std
sub
mov
aas
push
mov
cld
sub
mov
fdivs
inc
rol
jmp
adc
jnp
cmpsb
inc
scas
mov
jge
add
cmp
xor
mov
cltd
cmpsl
pop
xor
pushl
xor
xchg
mov
ljmp
mov
sub
push
out
dec
sbb
imul
dec
inc
mov
adc
add
loope
mov
test
or
movsl
lahf
fdivrl
mov
fsubrs
pop
sti
mov
clc
mov
lock
add
push
nop
jge
movsl
sbb
inc
inc
aaa
xor
dec
fwait
sbb
add
mov
outsb
or
cld
pusha
scas
cli
data16
out
mov
dec
cmpsl
cs
pop
push
sub
pop
mov
ret
cli
jae
ds
mov
arpl
xor
pop
pop
lcall
inc
sbb
xchg
pop
int
loop
faddl
add
pop
pop
aad
push
loope
popf
inc
mov
or
jbe
mov
dec
inc
mov
adc
pop
int3
dec
mov
incb
adc
sub
jmp
je
stos
lcall
and
add
mov
cltd
cwtl
or
sahf
pop
add
add
stc
or
inc
popa
out
ja
lods
mov
add
or
jne
scas
inc
cmp
out
xor
mov
or
xchg
push
sbb
out
sbb
fists
lock
xchg
call
add
add
sub
cmp
enter
js
xor
or
and
push
neg
mov
inc
jl
and
jecxz
mov
push
rcrl
fisubrl
inc
popl
xchg
mov
adc
cwtl
mov
lret
sub
movsb
jge
mov
or
push
and
xchg
lret
add
jbe
imul
jp
sub
xchg
pop
ja
cwtl
push
mov
call
sbb
inc
repnz
sub
leave
mov
inc
xchg
pop
iret
dec
fsubs
push
jne
or
add
mov
lcall
mov
add
outsb
je
scas
pushf
fs
cmc
subb
sbbl
mov
es
jg
shl
inc
cwtl
out
lea
mov
loope
cmp
pop
shll
fs
ljmp
das
jg
cs
ljmp
mov
pushf
out
jnp
fildll
inc
sbbl
dec
cmpsb
jg
pop
jl
int
loope
pop
je
pop
pop
sbb
ss
add
popf
mov
fimull
cmp
movsb
or
jecxz
lahf
sarw
loope
push
aam
inc
xchg
sub
or
push
push
add
jne
inc
cld
int3
imul
xchg
cmp
and
inc
test
pushf
cs
sub
jle
dec
neg
sub
into
js
sbbl
jecxz
movsb
loop
push
jmp
imull
sub
cmpsl
scas
mov
xor
mov
loope
pop
push
adc
or
out
and
mov
sub
push
add
movaps
je
cwtl
lock
loope
pop
sbb
mov
mov
inc
enter
loope
loop
loope
xor
sahf
jne
jg
sub
or
lods
xor
cmove
outsl
dec
push
sbb
fimuls
jne
les
std
or
or
sbb
test
subl
movsb
rcll
je
pop
add
mov
cmp
das
mov
gs
and
jb
push
inc
jecxz
loop
dec
out
push
sbb
loop
daa
lret
mov
inc
pop
stos
sti
sbb
and
cmp
gs
incl
sbb
fnsave
pop
loop
inc
jge
push
push
addl
cmpsl
in
inc
jg
inc
mov
xor
daa
dec
dec
data16
lds
pusha
fiaddl
lahf
lcall
mov
xchg
gs
bnd
sbb
jo
fisubrl
inc
and
dec
jb
pop
inc
mov
sbbb
inc
or
and
pusha
outsl
xor
cmp
xchg
xchg
xchg
popf
pop
mov
out
sbb
add
int3
or
jo
mov
int3
push
mov
out
lret
mov
inc
adc
dec
fidivs
dec
mov
aad
push
faddp
loopne
decl
sub
outsb
xor
xchg
idivl
leave
hlt
testl
xchg
mov
movsl
push
xchg
pushf
sbb
sar
cmp
imulb
xchg
in
fucomp
xor
sbb
pop
fmull
int
in
pop
das
push
shll
ja
std
scas
sbb
push
dec
xor
inc
jo
xor
adc
popf
fcmovnb
das
pop
or
jg
notl
jl
cwtl
js
imul
addl
xchg
mov
cmp
xor
cmp
sub
daa
inc
dec
out
outsl
xor
daa
add
sub
mov
sbb
add
xchg
cs
and
mov
in
fstpl
cmpl
fcoms
mov
in
adc
push
pop
pop
inc
out
lret
ret
mov
scas
mov
mov
pusha
sbb
push
cs
lahf
push
inc
inc
push
mov
add
xor
jmp
sub
shl
push
pop
iret
push
in
loopne
push
cmpsb
cwtl
aaa
sub
push
ljmp
adc
sbb
mov
pop
repz
cwtl
add
cli
je
jbe
push
mov
and
push
dec
jl
lret
pop
mov
jecxz
xor
ret
cmp
lret
call
add
in
sub
sarl
xchg
dec
add
jns
add
shl
test
mov
mov
adc
pop
adcl
stos
cld
shlb
dec
adc
adc
mov
cmc
jne
sub
enter
pushf
out
das
and
jns
sbb
sub
push
dec
int
dec
push
cmp
aad
cwtl
dec
push
jg
xor
or
jbe
and
adc
ret
lods
xor
push
jne
loope,pt
clc
or
loope
sbb
mov
inc
cwtl
nop
adc
in
es
pushf
ficompl
in
aam
mov
inc
push
pop
jg
out
xor
cmc
int
add
repnz
inc
icebp
cmp
dec
sub
loopne
mov
inc
or
loope
cs
in
pop
adc
outsb
cmp
dec
bound
push
dec
push
adc
frstor
or
subl
lods
jg
call
icebp
out
push
and
and
dec
sbb
jno
daa
enter
shrb
sahf
shlb
nop
cmpsb
cltd
xor
cld
sub
dec
jp
inc
cmp
push
inc
xchg
xlat
sbb
adc
loope
mov
loope
test
imul
or
stc
fwait
dec
arpl
lds
xchg
mov
sbb
mov
sbb
mov
adc
adc
inc
movsb
mov
push
popa
mulb
popf
push
xchg
adc
jg
fisttps
mov
enter
in
sbb
xchg
ja
movsb
jo
adc
repz
shlb
pushl
push
pop
insl
shl
scas
es
dec
lcall
cmp
push
cmpsb
adc
rolb
add
mov
cmp
hlt
adc
mov
cld
jbe
cmp
movsl
pop
cmp
cmp
xor
clc
sub
out
or
lods
test
xor
ja
add
sub
ret
out
bound
xchg
scas
rorb
call
adc
cmc
inc
mov
fwait
hlt
lahf
repnz
mov
sti
sbb
add
mov
lret
pop
dec
dec
repz
ret
shrb
nop
ljmp
lods
cld
inc
mov
mov
or
or
sub
jb
dec
and
idivb
mov
mov
and
xchg
mov
out
pusha
dec
pop
enter
mov
xlat
cmp
cmp
lar
or
dec
sub
add
mov
icebp
fistps
out
push
jg
xchg
jl
lods
mov
mov
faddl
scas
dec
or
mov
cli
or
ret
mov
and
movsb
mov
push
push
aas
arpl
test
push
pop
add
lods
push
subb
jbe
mov
mov
dec
xor
pop
cwtl
sbb
sbb
pop
addb
ljmp
sbb
sub
adc
cmc
dec
add
xor
rclb
inc
cltd
push
or
sub
aaa
xchg
xor
xor
movsb
inc
pop
push
lods
sbb
push
movsb
loop
xchg
xor
mov
mov
cmp
mov
mov
stc
std
daa
mov
popf
ds
insb
pop
jns
bound
imul
cmp
pushf
add
lret
fabs
add
add
mov
and
cmpsl
inc
dec
sbb
movsl
dec
outsb
push
sbb
hlt
mov
pop
sub
sbb
ja
pop
xchg
cmp
imul
testb
adc
cmc
ds
xchg
push
inc
xchg
dec
icebp
and
popf
and
jge
cmp
push
scas
jp
dec
fstpl
jp
jno
notl
inc
cmpsl
mov
dec
sbb
pop
lahf
jbe
sub
aam
or
in
and
lds
repnz
jp
rcrb
mov
fdivp
mov
mov
ret
cmc
fstpt
cmp
xlat
or
or
or
aam
xor
dec
adc
ficoml
testl
cltd
sbb
das
std
fcmovbe
cwtl
pushf
rcrl
subl
pop
dec
xchg
lock
das
test
aaa
notl
push
cld
rolb
mov
and
cmp
mov
lods
and
out
rolb
lret
repnz
lret
pop
sbb
push
cmp
push
or
sub
scas
pop
cmp
aaa
jle
jl
ficompl
mov
adc
into
add
dec
sbb
imul
pop
iret
mov
cmp
add
and
xor
and
inc
and
sbbl
bound
jle
cwtl
add
mov
mov
sbb
xor
adc
cmc
inc
jbe
popa
pop
push
icebp
je
clc
loope
or
or
dec
sbb
rolb
cs
pop
pop
lahf
test
or
sub
ja
jmp
lret
xchg
add
rclb
cli
ret
dec
lahf
lock
sbb
mov
inc
add
cmp
adc
mov
inc
pop
push
or
sahf
inc
jge
xor
fwait
add
sbbl
cmc
repnz
lahf
push
fisttpl
pop
mov
xchg
clc
ja
and
and
push
xchg
add
sti
je
and
jnp
jecxz
and
adc
ret
pop
cmp
cmp
cltd
dec
sub
cmp
fstps
and
test
mov
leave
and
inc
popf
sti
and
daa
jle
fcoml
les
add
das
adc
and
lret
pop
xchg
daa
je
out
fisubs
gs
mov
sub
xchg
in
fimuls
inc
add
sbb
cwtl
cmp
sub
sahf
inc
pop
je
jmp
dec
stos
and
mov
scas
aaa
jno
mov
or
fcomi
sbb
jl
fldl
pop
pop
cmp
sub
lcall
sarl
outsb
adc
push
ret
fdivrl
sbb
dec
push
loop
ss
in
mov
lea
jbe
out
add
fstpl
cmpsb
outsl
dec
mov
jbe
ljmp
nop
loope
pop
arpl
push
cmpsb
xor
xor
adc
xchg
sub
fiaddl
mov
pop
lods
fimuls
decl
xlat
xchg
fildl
xchg
lods
inc
fbstp
add
lahf
sarb
bound
mov
add
mov
cmpl
jb,pt
pop
push
mov
pop
rcrl
pop
mov
fwait
add
dec
pop
in
or
bound
cli
dec
sub
hlt
nop
adc
cmpsb
enter
mov
les
clc
inc
imul
out
jb
sbb
fidivrl
inc
dec
pop
insl
xor
into
and
orl
std
push
repnz
mov
add
jns
and
sub
int3
xorb
ja
scas
pop
or
addb
insb
and
sbb
sub
dec
sahf
pop
outsb
push
dec
mov
dec
or
lret
cs
sub
mov
push
mov
xchg
adc
pop
push
and
cltd
pop
pop
loope
fnstsw
sahf
in
xchg
loopne
sub
and
arpl
movsl
pop
sbb
push
test
or
add
sbb
mov
mov
sub
add
push
sbb
xchg
xchg
std
enter
cs
adc
sbb
pop
sub
lea
fcomps
repnz
inc
std
cmc
arpl
push
out
fwait
lret
cmpsb
arpl
jle
jo
popf
or
popf
into
xor
movsb
inc
fs
inc
movsl
dec
shll
adc
incl
mov
lods
mov
adc
loop
hlt
xchg
and
adc
adc
imul
sub
popf
xchg
inc
aad
adc
outsb
push
push
push
adc
ret
xchg
pop
xor
aam
sbbl
loop
into
push
mov
jo
movsb
bound
mov
das
loope
ja
sbb
cld
dec
mov
and
fucom
add
imul
and
test
mov
adc
cmp
xchg
push
pop
mulps
adc
lret
aad
fidivl
iret
push
loope
icebp
dec
push
cli
mov
jle
out
sbb
or
aad
aaa
push
sahf
cmpsl
jp
inc
mov
jp
and
js
inc
jbe
repnz
ja
and
cmpsb
sub
sub
cmp
sbb
add
dec
xor
ljmp
cmc
cmp
bound
sbb
push
inc
cmp
jo
mov
shufps
pop
mov
sub
mov
outsb
mov
add
popa
mov
aam
or
jns
das
out
mov
ljmp
add
push
loope
lret
add
ss
xchg
jae
adc
adcl
adc
test
mov
popl
addl
call
les
xor
push
int3
mov
leave
jecxz
imul
pop
lods
dec
cmp
leave
xor
and
jo
push
push
lods
xor
xor
dec
xor
int
stos
outsl
xor
cli
insb
or
sub
mov
xlat
in
or
rcrb
fstl
push
roll
sub
aas
dec
mov
lret
pop
movsl
push
adc
mov
push
dec
sbb
lcall
ret
dec
push
lock
pop
jmp
jle
mov
addl
dec
les
dec
movsb
xor
add
aad
cmp
aam
pop
xchg
mov
cmp
lret
add
pop
xor
out
cwtl
pushl
mov
inc
mov
loop
cmpsl
sarl
jae
sub
loope
cwtl
push
out
inc
sub
lods
inc
sbb
xor
mov
lahf
stos
sub
inc
or
es
stos
sbb
mov
mov
cwtl
xor
cmp
mov
out
mov
xabort
sub
sub
cmp
pop
sub
push
imul
push
lcall
and
loop
mov
aad
inc
enter
fidivrs
cli
push
icebp
mov
mov
add
xor
js
insl
and
scas
cmp
std
xchg
popf
pop
cmpsb
push
daa
sti
pop
pop
insl
dec
aaa
add
jge
int3
lcall
or
mov
icebp
decb
mov
xor
ds
mov
mov
pop
lcall
ds
ss
inc
orb
mov
inc
pop
fists
imul
and
xor
pop
inc
in
fidivs
negb
insb
sbb
sbb
cs
pushl
popf
lret
mov
rcl
clc
call
or
addr16
hlt
push
notb
loop
mov
cld
mulb
pop
paddb
in
mov
push
lea
add
scas
lret
add
in
pop
pop
sbb
into
jle
and
jg
lock
mov
insb
pushf
clc
push
outsb
jge
and
jle
jno
arpl
sbbl
sbb
popf
and
std
jne
movsl
enter
mov
cmp
mov
idivl
mov
rorb
pop
sbb
or
outsb
add
sbb
faddp
je
inc
sbb
mov
jge
dec
sahf
adc
in
cmp
and
bound
sbb
mov
arpl
nop
jb
imul
cmp
sbb
jle
in
bound
xor
xor
fcompl
jp
subl
add
jb
sbbl
nop
in
inc
out
dec
sbbb
xor
xor
das
cmc
jg
or
mov
cwtl
mov
and
jle
orl
and
inc
pop
mov
dec
shlb
dec
movsb
imul
xor
movl
lds
decb
sbb
cld
sahf
push
lret
pop
dec
call
push
dec
dec
loopne
jmp
sub
icebp
jno
out
iret
scas
fisttpll
popf
lods
mov
jl
add
aaa
aad
dec
mov
push
add
jmp
add
pop
dec
xchg
ja
pop
sti
clc
subb
inc
pop
scas
insb
dec
mov
fs
cmpsb
inc
and
repnz
xor
sub
and
in
xor
push
inc
andl
pop
and
and
cmp
ret
jp
pop
in
xchg
jg
ret
popf
pop
add
dec
pop
jle
rolb
pop
cs
ror
mov
lcall
mov
jecxz
xchg
adc
push
dec
inc
aad
imul
mov
andb
lods
lock
push
and
shll
jns,pn
daa
fbld
and
lret
hlt
mov
cltd
and
adc
pop
sbb
repz
incb
int
pushf
push
mov
scas
add
rolb
incl
push
sub
int3
xchg
dec
inc
lea
js
mov
aad
repnz
or
inc
jb
and
sahf
xchg
add
mov
add
sbb
inc
out
fdiv
or
mov
test
jbe
jecxz
sub
jns
xchg
cmp
push
mov
lock
or
orl
addr16
sbbl
push
lods
jb
popf
adc
std
pop
int3
sbb
es
movsl
jle
mov
sub
leave
push
mov
add
lret
xor
mov
lock
das
popf
in
jae
mov
sbb
adc
dec
sbb
rolb
sbb
dec
adc
inc
in
dec
test
outsb
add
add
lods
in
dec
jg
pop
shl
gs
adc
adc
testl
test
mov
mov
loope
xchg
ds
dec
add
scas
jb
xor
outsl
push
dec
cmp
or
sbb
ret
push
or
adc
aam
lock
sbb
orl
cmpb
je
and
lret
les
push
jp
cmpsb
mov
movsl
jne
call
sbb
push
mov
aaa
out
dec
add
shr
adc
jmp
cld
inc
xor
xchg
pop
push
push
andb
test
jbe
bound
add
ss
fcoms
xlat
jmp
loop
mov
sub
mov
loopne
enter
loopne
xchg
mov
xor
or
mov
mov
xchg
ds
movsb
outsb
call
orl
dec
neg
adc
xor
cmc
mov
loope
cmp
xor
scas
pop
sbb
imul
add
and
lods
inc
enter
push
sbb
or
inc
push
cmp
loope
jbe
cmc
pop
cmp
sarl
xchg
ret
add
pop
shrl
rorb
xor
dec
shll
cmpsb
cmp
jle
call
jmp
icebp
outsb
pop
or
loop
test
sub
das
jbe
pusha
or
adc
pop
or
mov
and
leave
sbb
cmp
xlat
das
enter
add
ret
popf
pop
lcall
xor
out
ret
pop
add
xor
stc
and
insb
loop
cs
or
ljmp
shl
pop
push
mov
push
or
sbb
mov
shrb
and
test
adc
inc
sbb
push
cmp
jbe
test
lds
cmp
jns
add
lea
pushf
jge
icebp
lahf
push
lock
je
sarl
loopne
lods
xor
iret
or
push
xor
cmp
pop
dec
jle
add
pop
and
rcll
push
or
scas
das
pop
clc
call
mov
push
ja
mov
imul
sub
pop
xor
in
loop
lahf
fbld
je
pop
or
cltd
sbb
add
jecxz
xchg
test
push
or
mov
lods
pop
out
sub
clc
cmpb
xor
jle
jne
aas
faddl
and
jne
xchg
mov
or
cmp
out
cmp
sub
or
ret
cmp
or
sbbb
push
sbb
pop
pushf
ja
popa
test
nop
arpl
mov
pop
jmp
xor
cmp
inc
inc
cld
dec
cmc
jnp
xor
enter
fadds
jg
jo,pt
rcrl
hlt
xchg
mov
mov
repnz
sbb
adc
cmp
sbb
mov
jo
mov
mov
out
movsb
mov
cwtl
mov
aaa
sub
or
push
pop
div
cmp
jno
xlat
or
out
push
inc
fnstenv
loop
mov
ljmp
inc
sub
xchg
loop
pop
imul
xor
sub
dec
jb
dec
scas
mov
mov
push
pop
jns
mov
jecxz
js
push
sbb
and
aas
adc
sahf
rcrl
inc
sbb
rcrb
inc
push
dec
xor
sub
es
adc
mov
lock
cmp
aaa
inc
in
rorb
xor
imul
mov
add
pop
repz
cmp
inc
lret
addr16
sub
and
repnz
push
jbe
out
dec
adc
outsb
add
movsb
mov
pushf
ret
dec
ljmp
cmc
fsubs
mov
cmp
add
jge
outsl
and
rcll
add
xchg
aad
test
xchg
repz
sbbl
outsb
into
cmp
cmpsl
cmc
dec
and
inc
pop
lods
nopl
sbb
in
repnz
dec
hlt
jmp
cmp
sub
andb
test
mov
rcrb
mov
pop
es
pop
pop
dec
lock
sbb
push
push
mov
repnz
popf
lock
push
push
mov
mov
dec
cmpsb
add
or
lret
pop
into
std
rorb
and
test
cli
mov
stos
ret
lock
outsb
outsb
fimull
xor
mov
push
cmp
cmp
cvtps2pd
mov
sbb
mov
dec
scas
dec
sub
jbe
cmp
push
arpl
clc
add
mov
sub
lods
mov
inc
adc
jnp
mov
jg
outsl
cld
leave
sub
std
faddl
loop
push
pop
inc
pop
sahf
pop
mov
add
pop
xor
mov
mov
inc
imul
cwtl
push
adc
scas
jecxz
adc
sbb
add
push
test
mov
les
xchg
push
adc
push
dec
and
push
loope
mulb
pop
inc
push
scas
adc
mov
xor
outsb
inc
sub
inc
mov
jns
hlt
rep
dec
in
mov
inc
or
mov
jnp
out
ret
call
sbb
and
or
xchg
lcall
pop
mov
add
jo
scas
pop
push
int3
lahf
pop
enter
add
jp
xlat
mov
in
mov
ljmp
jbe
nop
sbb
lret
push
mov
xor
test
and
mov
pop
dec
fs
mov
fnstcw
movsl
xchg
aad
out
push
sub
fmuls
xor
cmp
sub
push
call
jecxz
outsl
and
inc
out
fdiv
jb
jecxz
f2xm1
push
push
inc
scas
jle
mov
push
fbstp
inc
ud2
inc
loope
fisttpll
pop
movsb
shrb
pop
jns
imul
fmull
stos
xor
jge
xor
pop
add
dec
pop
pop
jmp
inc
and
xchg
fdivs
add
fcmovu
loop
out
mov
pop
inc
ret
fwait
out
pushaw
cmp
push
cmc
dec
push
jp
repnz
popf
push
fistpl
dec
jg
lds
dec
push
xor
test
dec
ret
in
loope
je
add
mov
sub
cld
int3
dec
pop
and
mov
enter
add
mov
or
or
sub
dec
xchg
sub
or
lods
lcall
push
adc
rcrb
adc
adc
fisubs
adc
test
mov
mov
push
test
test
xchg
popf
dec
or
jae
cmp
lahf
scas
push
adc
dec
and
mov
daa
jecxz
stos
and
loope
mov
in
loop
orl
sbb
dec
add
pcmpeqb
rcrl
mov
and
mov
fsub
sub
lods
mov
scas
push
xchg
rcr
cmp
add
xchg
sbb
sub
out
cltd
loope
xchg
push
leave
dec
cmc
jp
push
fstl
into
aad
out
xchg
push
pop
xor
mov
jl
cmp
shll
out
enter
xor
test
cld
pop
orl
sahf
iret
push
sbb
sbb
xor
push
or
push
jg
and
sub
pop
popf
push
and
pop
push
cmpsb
fnstsw
sub
dec
cmc
inc
repz
push
xor
int
repnz
ss
out
popf
mov
pop
and
dec
inc
push
cld
or
or
out
dec
lret
push
inc
push
in
inc
in
repnz
cld
dec
cld
nop
cs
ret
inc
xchg
cmp
jge
fmull
add
add
cmpl
xchg
mov
inc
idivb
or
push
jg
lahf
repz
mov
cltd
inc
movsl
ds
in
adc
push
mov
adc
push
add
push
push
mov
fs
and
and
stos
int3
in
push
rorb
mov
out
lea
sub
pop
out
mov
mov
fidivl
push
test
and
int
testb
and
push
pop
ljmp
adc
sub
inc
subps
cs
addr16
frstor
add
inc
fstps
push
or
inc
js,pt
jae
push
cmp
push
lret
jle
xor
jns
push
jg
lret
rcr
loope
jbe
rolb
or
enter
fwait
cmp
pop
mov
xor
icebp
mov
scas
outsl
xor
pop
idivb
int3
and
mov
push
loop
rcll
rol
sub
pop
xchg
inc
rcl
lcall
mov
mov
cld
divb
jg
subl
mov
test
adc
repz
sbb
pop
xorb
sub
mov
rcrl
sbb
sbb
movsl
mov
cwtl
cmp
add
test
cmp
imulb
sbb
mov
enter
adcb
sub
pop
push
jmp
lret
push
lret
or
punpcklbw
or
xor
inc
push
xchg
stc
scas
jg
pop
sbb
cld
mov
mov
repnz
xor
push
adc
adc
icebp
scas
adc
or
cmp
inc
inc
jmp
jecxz
aad
in
pop
ja
mov
add
or
push
rcl
mov
mov
pop
fildl
dec
xor
loop
sahf
and
dec
mov
add
daa
out
inc
xor
cwtl
imul
aam
mov
adc
mov
push
mov
add
mov
mov
xchg
jp
sbb
jb
aad
mov
mov
push
ret
pop
push
dec
shrl
pop
outsb
imul
movsl
js
inc
inc
cmp
fsubr
mov
pop
and
mov
fmuls
int
mov
sub
mov
imul
arpl
mov
ret
mov
mov
js
xor
ficoms
pcmpeqd
mov
push
xchg
xchg
testb
jb
xchg
mov
or
cli
sub
movsl
cmp
adc
xchg
aad
adc
ds
outsl
fisubl
xor
add
call
push
add
push
cmp
lcall
xor
fld
in
orb
bound
sbb
push
push
cmp
out
lcall
insl
sub
mov
jg
lret
test
loop
jle
adc
outsb
pop
enter
sbb
ret
mov
hlt
dec
iret
add
mov
ja
cmp
xchg
xor
movsl
jl
sub
fcomi
jnp
push
lods
adc
adc
or
popa
add
fisubrl
mov
and
stos
xor
adc
or
mov
push
or
inc
mov
sbb
or
and
mov
rcrl
sbb
dec
fidivrl
jecxz
cmp
les
dec
and
test
les
clc
ror
cld
or
bound
ds
pushf
out
repnz
inc
cmp
ss
mov
jle
popa
sbb
pushl
inc
out
adc
out
js
fcoml
sbb
cmc
cltd
test
jae
add
or
js
insb
lds
ficoms
jne
inc
pop
adc
arpl
adc
dec
jge
and
loop
mov
xor
add
cld
push
test
idivb
push
shr
sbb
pop
in
xchg
adc
loop
cmp
or
pop
shrb
das
or
stos
ret
mov
ss
fistpl
xchg
mov
cwtl
xor
sbb
iret
sbb
add
jmp
mov
pop
push
adc
jle
push
sbb
push
and
push
xor
int
loope
cwtl
jnp
jle
sbb
adc
lods
push
fsubl
inc
aam
test
andb
pop
movsl
jae
mov
add
das
movsb
int3
std
das
shl
mov
sar
jecxz
inc
stos
sbb
inc
jo
push
sub
lret
fcmovne
push
cwtl
push
sub
push
insb
push
repz
ret
out
pop
dec
gs
inc
sbb
mov
jp
xor
es
daa
jle
daa
sub
and
sub
je
sbb
fstl
shrl
push
jae
je
jle
push
push
or
sahf
push
or
xor
aad
repz
push
outsl
cmc
adc
lock
ja
jmp
jle
js
dec
adc
into
out
sub
xor
hlt
es
dec
xchg
jle
iret
add
nop
popf
stos
adc
pop
xchg
gs
jl
decb
mov
inc
sahf
lcall
and
fcmovu
pop
push
es
bnd
and
jno
enter
xlat
fnstcw
dec
mov
push
sarl
push
sbb
sub
mov
mov
hlt
pop
sahf
add
daa
add
mov
adc
push
mov
loop
dec
dec
cmp
int
hlt
dec
dec
push
sub
adc
js
inc
pop
movsb
shlb
or
and
xchg
adc
rcrb
dec
and
cmpsl
pop
fnsave
iret
pop
int
movb
push
aaa
mov
mov
repz
das
push
pop
pop
pop
xchg
push
jmp
xchg
xor
outsl
pushf
sbb
fisubrl
pop
or
cld
into
dec
add
rclb
sub
outsb
and
jle
push
in
xchg
pushf
stc
sahf
add
outsb
and
je
enter
push
mov
xchg
xchg
sub
clc
lcall
xchg
rcrl
mov
or
adc
shl
into
xchg
pop
bnd
mov
sub
sti
or
shlb
leave
push
pop
add
into
mov
mov
fidivl
hlt
jb,pn
enter
push
push
add
jns
test
xchg
push
push
lods
xor
je
pop
or
loop
xor
sub
cld
or
mov
mov
ss
ds
cli
dec
fucomp
rcll
pop
mov
mov
das
repnz
dec
jg
dec
or
nop
sub
daa
ret
push
ljmp
shl
out
ja
and
fsubs
dec
jp
daa
add
push
lcall
push
mov
test
push
xchg
dec
pop
mov
movsb
jno
mov
pop
pop
shlb
popa
add
xor
mov
dec
fnclex
inc
push
lret
scas
xchg
mov
movsl
addb
push
pop
cmpsb
sbb
adc
inc
out
mov
jbe
or
adc
mov
push
jnp
xchg
sbb
pop
sub
mov
mov
and
dec
jns
pop
mov
add
stos
popf
aam
inc
movzbl
pop
mov
and
jne
inc
adc
bound
gs
inc
aad
or
inc
clc
jge
ljmp
push
scas
push
fidivrs
add
out
scas
mul
in
fwait
mov
lret
jecxz,pt
hlt
xor
divb
addb
xchg
mov
scas
add
cmpsb
pusha
xlat
sbb
out
adc
out
test
test
sbb
shrl
dec
dec
stos
shrb
sub
xor
push
and
push
add
enter
inc
xor
lcall
loop
pushf
insb
rorb
push
jg
xor
sbb
jl
addl
jbe
aas
dec
idivb
push
fnstsw
ljmp
xchg
cwtl
or
push
lahf
mov
and
pop
jbe
inc
lcall
jg
fwait
out
dec
mov
ds
jnp
xor
aad
aam
adc
shr
mov
fdivr
stc
or
int
and
mov
out
pop
data16
sub
roll
dec
scas
movsl
into
cmpsl
in
lods
jae
fdivr
shl
cmp
cmp
adc
insb
je
pop
icebp
int
rcl
nop
mov
ja
push
pop
and
mov
mov
subl
sub
cmpsb
cs
push
mov
jae
mov
jecxz
test
cmp
jbe
push
dec
lds
repnz
movlps
movlps
loop
sbb
cmp
xor
xor
out
call
addb
test
dec
xchg
mov
sub
jp
push
mov
or
stos
sahf
cmp
jp
das
je
arpl
sub
jp
lret
stc
jbe
push
ds
pop
jb
inc
sbb
xchg
or
jbe
sbb
sub
sub
inc
das
rolb
pop
and
mov
push
xchg
dec
dec
xor
sbbl
in
mov
int
test
sbb
mov
and
je
cmc
xor
push
sub
cmp
add
sbb
enter
dec
sbb
mov
inc
mov
jae
jle
ret
dec
in
xchg
xchg
sbb
bound
pop
mov
add
sub
lahf
js
lock
adc
ja
jne
mov
jl
inc
push
shl
divb
cmp
loope
jle
lods
je
add
pop
cltd
repnz
cmp
mov
add
mov
jmp
and
fwait
xor
and
pop
loop
xchg
jle
outsl
push
push
sub
add
int3
xchg
movsl
dec
lcall
dec
jle
pop
xor
pop
sti
fcmovnu
shlb
pop
mov
ret
dec
bnd
push
inc
xor
sub
dec
cs
push
xor
sbb
addb
movb
jne
or
int3
inc
lods
sub
and
adc
inc
mov
outsl
mov
shr
sbb
jmp
hlt
or
enter
je
dec
adc
adc
xchg
lret
push
inc
and
add
ret
lahf
jle
loope
mov
sbb
sbb
cmp
add
enter
adc
jp
push
into
mov
push
jne
push
and
add
push
es
fnstsw
inc
sbb
rcrb
fwait
jno
pop
and
sbb
pop
xor
jecxz
xchg
mov
mov
test
sbb
adc
pop
cs
sbb
test
jle
lods
sbb
into
fmuls
icebp
out
dec
push
sahf
jmp
dec
push
ret
cli
cmp
loope
test
testl
sti
jnp
adc
inc
pop
xchg
ljmp
mov
sti
in
add
jae
or
push
jg
pop
sbb
push
inc
ds
clc
add
out
push
xchg
adc
cs
dec
sti
push
or
jns
mov
fildl
aad
jbe
cmp
loop
and
or
jg
add
xlat
or
adc
sbb
inc
lock
repnz
lock
in
add
out
das
je
cmpsb
mov
push
mov
add
sub
sub
pop
pop
pop
push
xchg
or
inc
cmp
push
pop
jb
clc
xor
pop
pop
jnp,pn
adc
test
cld
fstps
mov
pushw
mov
mov
jne
inc
iret
pusha
cmp
sbb
fsubs
movsb
lds
or
adc
cwtl
or
sub
xor
je
movzwl
daa
push
aaa
inc
push
icebp
aad
stos
sbb
cwtl
push
sbb
pop
xor
mov
loopne
stos
lea
mov
xor
pop
scas
mov
mov
xchg
or
pushf
inc
add
push
or
mov
adc
sub
icebp
inc
cmp
lahf
adc
and
sahf
push
and
sub
mov
outsb
push
pop
add
sbb
xor
mov
add
add
inc
sbb
sub
sbb
inc
mov
les
jecxz
jne
pop
push
mov
sub
sbb
pop
adc
xchg
inc
mov
nop
sbb
lock
popa
sahf
loopne
cmp
adc
outsb
pop
xor
shl
shlb
dec
jmp
push
push
xchg
jle
int
add
sbb
cmp
cmc
sub
xor
add
mov
push
mov
fwait
jno,pn
nop
sbb
push
mov
daa
mov
xchg
lods
hlt
or
dec
sub
mov
cmc
and
ljmp
push
sbb
syscall
sub
hlt
lods
inc
push
mull
xchg
xor
sub
outsl
xor
or
jecxz
pop
and
jl
mov
stc
cmpsl
lcall
cmp
mov
add
inc
sbb
inc
dec
add
insl
enter
scas
inc
inc
arpl
jp
je
dec
sbbl
and
dec
sub
pop
pop
test
sbb
insl
sub
jle
cs
dec
xchg
imul
adc
mov
stos
jb
ja
inc
ret
push
mov
xor
pop
fists
imul
clc
mov
lret
xor
add
mov
pop
or
cwtl
addl
insb
or
or
insb
adcl
clc
daa
adc
cmp
jne
inc
push
xor
fsubs
cli
pop
mov
jae
push
sbb
fwait
adc
stos
push
inc
jnp
inc
push
add
xor
xchg
adc
fcompl
cs
mov
popf
dec
mov
push
sbb
pop
fisttpll
sub
cmc
cmp
and
andb
sub
clc
iret
insl
and
push
push
mov
xor
xor
mov
pop
call
ss
fcomps
pop
ret
into
pop
cmp
cmp
pop
xor
xor
gs
sbb
dec
cld
and
jl
and
cmc
sbbl
adc
rclb
push
int3
cmp
cs
dec
popa
inc
adc
xchg
inc
and
cltd
mov
out
or
out
lcall
mov
mov
cmp
push
jno
inc
lret
test
cmp
jp
push
mov
inc
dec
and
inc
cmp
mov
xchg
pop
pop
xchg
inc
xchg
pushf
jge
and
out
pop
cmp
sbb
dec
inc
cs
into
or
add
add
cltd
fcomip
fdivs
push
ja
inc
push
add
addr16
push
fldenv
pop
stos
sbb
in
jo
dec
aas
xchg
popf
add
nopl
cmc
subl
out
sub
push
test
out
mov
das
jb
cltd
push
icebp
inc
sbb
jecxz
and
fs
negl
adc
ljmp
fwait
jb
xlat
stos
aam
and
stos
add
push
jl
fidivrs
movsl
inc
add
add
sub
fdivl
cmp
popf
xor
outsb
mov
sub
mov
mov
jl
loop
mov
add
addl
lock
mov
xor
push
mov
cmc
and
sub
inc
daa
jg
jo
lahf
jecxz
out
push
or
xchg
sbb
push
out
xchg
add
into
popa
jno
jecxz
pushf
repnz
xor
fwait
lock
cmovge
gs
dec
inc
leave
gs
cltd
mov
xor
dec
test
jp
dec
mov
cmc
mov
pop
aaa
xchg
outsl
or
orl
xchg
jbe
inc
dec
mov
mov
sbb
xlat
call
int
push
push
add
mov
push
add
xor
lret
jle
mov
insl
push
xchg
push
out
shrl
push
pop
faddl
jno
push
stos
bound
in
and
or
or
loop
rcrl
mov
dec
cmp
cld
sarb
or
mov
adc
add
lret
nop
je
and
outsb
aas
mov
bnd
dec
lods
pusha
push
mov
push
lret
and
lcall
push
mov
push
cmc
inc
and
loopne
inc
jl
cmp
sub
add
jg
sbb
or
jns
and
aas
gs
sahf
in
cs
dec
sbb
inc
xor
outsb
outsl
mov
ret
ret
push
test
sbb
repnz
mov
push
shlb
loope
fs
push
jno
daa
jmp
or
dec
call
shlb
jl
loope
fstpt
and
pop
and
cmp
rcrl
xor
subl
idivl
hlt
cld
stos
dec
fs
jo
push
mov
hlt
xor
mov
shrl
outsb
add
dec
outsb
adc
ss
int
pop
push
or
outsb
sbb
scas
ja
push
pop
adc
loope
and
cli
add
push
inc
add
sbb
daa
aas
mov
dec
ljmp
jg
jo
sbb
in
mov
mov
pop
pop
pop
sbb
xor
aas
jo
jne
sbb
stc
sbb
loope
push
jno
imul
add
out
inc
repnz
das
es
xchg
and
jmp
lret
push
jmp
or
lret
jl
test
movsl
mov
jne
out
test
inc
mov
push
hlt
shrl
outsb
pop
cmp
ret
and
sbb
cmp
mov
push
les
jl
leave
js
int3
sbb
adc
enter
dec
lret
pop
ss
and
std
testb
dec
and
add
and
sbb
addr16
cmc
sahf
and
lret
nop
xor
inc
push
push
adc
std
into
push
jg
fstpt
jp
frstor
enter
jl
push
inc
and
and
test
adc
inc
xlat
cwtl
or
and
and
or
adc
mov
dec
negl
fcoml
jl
mov
sbb
and
iret
ret
mov
mov
jns
xchg
xchg
sbb
adc
mov
movsb
sbb
dec
push
xor
fisttps
sar
mov
pushf
sbb
push
ret
or
xchg
xor
leave
pusha
sarb
fcmovnb
jg
push
sbb
shrb
jg
mov
mov
lahf
imul
dec
jbe
sbb
cs
pop
iret
adc
jecxz
enter
fsubrl
leave
outsl
arpl
inc
xchg
push
pop
cmp
xor
sbbl
dec
js
les
cli
pop
loope
add
fidivrl
pop
lods
jle
loopne
sbb
sbb
pop
subb
mov
xor
out
push
xor
pop
out
jle
andb
jns
push
jnp
jle
mov
jae
mov
test
cmp
lret
out
jo
je
inc
std
jne
ljmp
loop
jmp
inc
lods
imull
jb
cmp
lcall
monitor
inc
and
push
outsb
loop
inc
add
pusha
mov
dec
dec
and
sub
adc
addr16
mov
pop
xor
pop
pop
aas
mull
sbb
mov
lock
push
sub
xor
lret
imul
push
pop
ja
dec
xor
jge
jp
lds
nop
sar
jecxz
sub
int3
test
bound
sbb
aad
add
mov
je
test
andl
mull
pushf
mov
stos
dec
in
sub
push
jg
scas
mov
mov
xor
das
push
mov
mov
or
pushf
xor
fsubrl
loope
dec
daa
push
repz
push
dec
adc
pop
push
sahf
or
into
jge
jmp
or
scas
dec
das
andl
fimuls
xor
pop
pop
les
sbbb
loop,pn
cmp
test
das
ss
testb
cmp
or
pop
test
ret
pop
ja
mov
xor
rolb
and
mov
leave
and
cmp
xlat
xor
push
mov
pop
out
sbb
sub
dec
push
int3
ja
pop
jno
es
rorl
sub
shlb
mov
push
sbb
int3
inc
or
pop
and
lcall
mov
jb
into
inc
inc
rolb
jecxz
rcll
cltd
sub
and
aaa
adc
cmp
ja
inc
ljmp
loop
icebp
sub
add
fisttpll
add
jge
hlt
test
pop
pop
push
xchg
jbe
inc
sbb
jg
out
xor
iret
mov
orb
int3
pusha
add
lcall
and
insb
shll
or
lret
push
inc
add
add
addl
es
pop
xor
cmp
push
filds
sub
adc
loop
adcl
mov
cmp
push
push
xor
pop
call
and
popl
fiadds
je
loope
inc
rcll
add
and
lahf
mov
xor
or
inc
jbe
imul
jg
jmp
in
add
enter
push
test
or
mov
test
clc
jb
fxch
insb
jne
or
jbe
sbb
xchg
repnz
fsubr
xlat
push
xlat
cmpsl
push
lods
aaa
shll
and
ret
inc
jl
lods
xor
pop
fsubr
adc
jno
call
ret
sub
aaa
push
inc
mov
adc
aad
popa
xchg
push
cmc
push
flds
push
or
push
test
popf
loope
daa
and
dec
fxch
push
jmp
cmp
pop
pop
lret
push
cmc
xchg
cmp
faddl
inc
push
mov
push
add
repnz
push
pop
rcl
lret
jmp
cmc
mov
mov
in
mov
dec
pusha
lcall
push
xor
and
jge
adc
test
sahf
cmp
jbe
mov
shll
or
aaa
add
cmp
ds
repnz
test
or
push
or
daa
dec
and
pop
pop
int3
inc
sbbb
and
pop
jmp
lds
mov
iret
ja
add
ss
inc
lret
pop
mov
push
ja
jb
mov
mov
fdivr
inc
xchg
roll
lret
and
jg
ljmp
jl
xor
out
xchg
enter
sub
inc
ss
ds
repz
adc
sub
dec
dec
stc
ret
ss
pop
out
mov
add
add
arpl
ss
adc
jge
sbb
or
sbb
push
xchg
add
pop
cmp
sahf
sub
int3
jne
cmp
pop
stos
xor
adc
cmpl
bound
adc
filds
rcrb
fdiv
push
in
xchg
mov
in
aad
test
mov
push
mov
xchg
enter
mov
call
lret
daa
mov
cs
xor
cmc
orl
jle
add
ret
pop
popa
lea
xor
pushf
rorb
adc
popa
in
cli
push
mov
pop
mov
or
pop
and
and
or
and
mov
and
outsl
mov
popa
insl
shll
dec
adc
inc
push
or
in
out
mov
mov
dec
inc
and
orb
shlb
dec
dec
jns
lcall
lcall
mov
dec
mov
cmp
mov
or
jae
push
dec
mov
mov
jg
cld
xlat
ret
inc
int
adcl
push
ficoms
pop
push
test
mov
and
dec
aam
inc
repz
sub
mov
mov
scas
lcall
lds
je
cmc
and
jl
pop
xor
xchg
sbb
stc
xor
sbb
sub
cltd
xor
out
fildl
inc
lret
push
xor
shll
lret
add
add
aas
bound
lds
fbstp
sbbl
int3
mov
mov
xchg
sbb
inc
jecxz
out
add
add
out
xor
dec
xor
inc
call
int
daa
loope
mov
pusha
rorl
int
jecxz
pop
stc
pop
popa
push
sub
sbb
sbb
cmc
push
test
pop
in
rcll
push
push
in
jmp
leave
mov
ja
not
mov
mov
out
sbb
inc
mov
shlb
out
jge
and
ret
pop
and
mov
push
dec
push
xor
sub
xor
pop
jge
xchg
push
inc
adc
enter
dec
rcll
sbb
jo
add
cmp
cmp
int3
ja
push
cli
loope
sub
sub
fdiv
lcall
dec
mov
mov
inc
and
push
fadds
or
clc
test
xchg
inc
lcall
xorb
popa
sbb
mov
negb
mov
sarl
rol
repz
cmc
xor
jne
call
loop
clc
insb
repnz
into
mov
inc
divb
xchg
mov
sbbb
rclb
push
repnz
mov
aas
dec
outsl
jecxz
outsb
mov
mov
push
dec
jle
push
inc
mov
mov
inc
mov
xchg
or
and
jmp
shll
inc
and
xor
mov
dec
sub
cmp
add
clc
leave
pop
fwait
lea
imul
insl
into
out
pop
sub
daa
call
mov
dec
and
orb
jle
dec
repz
pop
lcall
lret
fdivrp
mov
ja
jno
sahf
sub
mov
outsl
sbb
push
in
je
add
sub
call
dec
ret
jge
test
xchg
int3
jno
ror
jp
jnp
fisttpl
jne
adc
outsb
outsl
xchg
mov
cmpsl
in
fimull
sub
insb
or
into
inc
push
mov
pop
push
and
inc
sub
adc
dec
pop
pop
aam
inc
mov
mov
mov
xor
and
cs
scas
dec
sbb
mov
pop
cmp
dec
mov
push
push
popf
in
pushf
push
push
adcb
inc
lahf
ret
shlb
cld
hlt
inc
jno
adc
cmpsl
push
and
in
daa
mov
or
xchg
rol
cwtl
pop
fs
add
jg
cmpl
pusha
imul
stc
mov
sbb
cmp
inc
mov
mov
cs
dec
adc
pusha
push
inc
push
rcll
or
push
push
sub
xor
out
adc
sbb
stos
xchg
jl
dec
lods
rcrb
xor
repnz
sub
or
sbb
hlt
sub
push
addr16
dec
push
lock
inc
and
hlt
jae
orl
cwtl
push
repnz
push
pop
xlat
inc
aam
in
nop
jmp
pop
adcb
add
fwait
outsb
stos
popa
dec
loope
pop
dec
xor
mov
call
fsubrs
push
push
mov
cwtl
push
mov
std
loopne
xchg
pop
bound
push
push
add
jle
jecxz
dec
out
dec
mov
sub
cmpsl
jp
lahf
popa
xchg
stos
mov
and
add
ds
mov
addl
and
stc
mov
push
sbb
addl
pop
push
xchg
inc
cmp
data16
cmc
fistps
inc
das
loope
mov
mov
inc
add
push
adc
push
cli
cld
outsb
leave
push
xor
jl
jne
lahf
lea
and
mov
and
call
lcall
lahf
mov
ss
int3
imul
ret
sub
push
loop
sbb
xor
adcb
dec
fldl
mov
lcall
add
data16
movsb
mov
sbb
jle
add
loop
hlt
sub
fnsave
dec
sub
bnd
mov
out
dec
pop
bound
xor
loopne
ss
loopne
sub
xor
xlat
jae
inc
dec
push
jge
jle
push
add
jg
lods
scas
mov
loope
jbe
mov
negl
leave
pop
adc
jmp
jg
pop
cmp
js
sbbl
in
jo
jp
cld
jo
test
jb
lock
sbb
dec
jns
iret
out
cmp
rcrl
pop
aaa
adc
pusha
adc
popf
cld
nop
mov
int
and
je
call
add
hlt
pop
push
jecxz
or
inc
sbb
in
lcall
fs
out
ljmp
push
dec
push
hlt
dec
pop
test
daa
into
orl
and
mov
inc
mov
mov
pop
hlt
mov
bound
cmpsb
xor
pop
xchg
adc
push
mov
sbb
xchg
cli
push
loop
mov
pop
ja
cmp
jle
add
and
gs
mov
add
notl
sbb
sbb
inc
addb
xor
push
mov
outsb
icebp
ffreep
adc
ljmp
negl
jae
add
ds
ret
lahf
div
iret
in
dec
cli
out
aad
jne
xor
mov
push
jp
pop
pop
pusha
add
sub
mov
mov
addr16
push
rolb
push
lahf
inc
je
and
sbb
test
fstl
in
ret
mov
clc
dec
lret
cld
sbb
lods
push
pop
cmp
in
mov
jecxz
test
mov
bound
negl
dec
pop
cmpb
leave
mov
int3
add
bound
popa
mov
jb
jle
loop
popa
lcall
add
or
std
inc
orb
lret
ljmp
jbe
cmpsb
mov
pusha
in
jecxz
mov
mov
jle
addb
mov
sar
insb
pop
aaa
mov
call
jle
mov
call
mov
pop
addr16
sbb
repnz
sbb
jmp
inc
scas
xlat
lcall
leave
mov
loop
xchg
lea
je
mov
mov
or
aam
int
add
mov
das
aad
nop
push
jae
lahf
push
adc
fisubl
leave
cmc
pop
mov
jne
pop
inc
and
and
add
push
clc
sti
and
adc
aam
ret
pop
push
movsb
pop
cmpl
in
stc
dec
mov
push
nop
adc
lret
cmp
shlb
js
lock
movd
push
fmuls
push
dec
lret
jmp
test
mov
ds
fwait
rclb
sub
xchg
xchg
pop
lds
fistl
mov
in
mov
cmp
jg
sbbb
or
jnp
xchg
adc
sub
sub
fmul
ss
inc
jnp
pop
adc
popl
xor
fists
xchg
rclb
pop
xor
mov
mov
mov
icebp
rep
mov
cbtw
add
mov
sti
rcrl
cli
insl
fdiv
mov
jno
sub
sahf
inc
enter
cwtl
jecxz
movsl
or
and
dec
xchg
test
sub
shll
repz
xorl
sub
inc
push
stos
andl
pop
mov
mov
addr16
es
jecxz
inc
es
or
jle
inc
cwtl
jge
or
scas
lahf
push
dec
jbe
jecxz
lea
inc
xchg
and
cmp
sbb
mov
mov
cltd
mov
imul
call
lock
lods
jb
fcompl
fcmovnbe
cmp
lea
pop
adc
xchg
cmp
popf
lea
xchg
lock
stos
subb
cwtl
dec
loop
lcall
enter
jae
push
and
and
push
lret
pop
pusha
lock
sbbb
movsl
repnz
or
cli
add
adc
test
mov
or
bound
and
push
mov
adc
and
jle
add
pop
mov
mov
pop
inc
pop
sub
test
sbb
call
mov
jmp
adc
add
xorl
ja
mov
sbb
das
imul
mov
xchg
mov
add
push
sbb
aam
rorb
mov
xchg
cli
dec
sbbb
int
push
pop
ss
decl
jb
dec
xor
rcrl
rcrb
adc
push
lock
pop
jecxz
and
loope
add
cmp
push
xor
mov
mov
das
push
push
jecxz
cld
pop
into
xlat
filds
add
fs
sub
hlt
cmp
ds
xchg
je
jg
pop
popf
repnz
into
mov
or
push
nop
inc
and
ret
push
sbb
inc
daa
dec
or
loope
jo
mov
roll
or
add
sub
ret
dec
xor
mov
loope
leave
js
sbb
fimull
sub
dec
adc
or
lock
aad
imul
mov
pushf
push
ja
es
dec
push
insl
cmpl
cmp
add
add
push
sub
add
scas
inc
add
add
sub
add
mov
inc
int
cmp
or
xor
dec
xchg
in
sbb
scas
lock
movsl
jne
mov
dec
negl
and
sbb
out
sub
xchg
inc
xor
roll
cmp
jbe
xor
jle
clc
add
pop
jbe
cld
popfw
pop
dec
inc
lret
mov
scas
cwtl
xor
insb
std
filds
popa
loop
ljmp
into
sbb
mov
stc
inc
inc
sti
out
in
jp
mov
in
lahf
cmp
mov
xchg
cmp
scas
stos
or
xor
inc
adc
xchg
sbb
movsl
sub
int
add
jmp
test
sbb
jl
outsl
cmp
xor
xor
push
insb
pop
sub
ret
xchg
pop
subl
shll
and
jb
push
fists
cwtl
ja
cli
push
or
shrb
pop
daa
mov
add
lcall
add
lahf
stc
mov
xchg
and
adc
ja
cwtl
mov
dec
mov
ds
movsb
cmp
push
sbb
push
jo
sbb
xchg
std
pop
jno
fildll
push
stos
cmp
jmp
cmp
mov
rorb
out
add
dec
idivl
scas
aaa
and
push
icebp
xor
pop
pop
xchg
add
shlb
fisttpll
xor
inc
jl
mov
repz
outsb
sbb
xor
loop
in
in
and
stc
xchg
or
or
mov
cmc
and
or
lahf
sbb
lahf
call
mov
orl
mov
popf
dec
and
mov
lods
dec
dec
loope
flds
das
out
push
mov
sub
sub
mov
enter
mov
cli
mov
mov
rorb
inc
or
fcmovu
hlt
xchg
inc
or
inc
fcoms
sbb
loope
jns
ja
cmp
hlt
pop
jb
cmp
adc
inc
or
sbb
mov
adc
jb
jns
outsb
inc
movsl
ljmp
pop
inc
xor
push
xchg
out
inc
cmp
cli
push
pop
and
jne
in
in
out
mov
xor
inc
cmc
bound
cmp
adc
jle
imul
pop
rcrl
push
call
ret
push
ret
pop
or
icebp
dec
or
hlt
pop
mov
sahf
ljmp
in
ret
int
push
dec
lahf
dec
lods
pop
mov
add
daa
pop
jne
fisubs
int3
mov
xor
add
lret
or
ds
push
pop
cmc
push
adc
cmc
and
jbe
or
dec
cwtl
movsb
xor
dec
adc
xchg
mov
in
das
and
adc
mov
movsl
inc
xlat
xchg
fs
adc
jno
into
rcll
push
sbb
enter
xchg
pop
ja
loop
adc
pop
ret
xchg
pop
dec
out
mov
add
cmpsl
out
sbb
jle
leave
js
jg
sub
pop
jbe
dec
mov
mov
sbb
pop
loope
sbb
subb
inc
sub
cs
sub
cs
xor
xchg
cld
mov
add
cmc
push
addb
pop
mov
ja
rcl
sub
dec
sub
pop
lahf
pop
fwait
subb
mov
es
adc
push
mov
rcl
sub
lea
sub
sbb
mov
or
ret
push
lods
loope
out
sub
insb
push
sub
xor
mov
jb
loope
sub
ss
insb
pop
mov
pop
mov
jbe
shll
movsb
into
les
rorb
out
pushf
sbb
xchg
add
loopne
jge
ja
add
jle
xor
xchg
sahf
orb
sub
xchg
mov
aad
jno
pop
mov
sub
cmp
pop
push
jb
push
test
mov
pop
dec
jnp
fsubs
jge
cld
je
xchg
push
cmp
lods
push
cwtl
subb
lea
scas
jns
mov
ljmp
xchg
xor
outsb
jbe
mov
jg
jnp
repnz
stc
cwtl
loopne
mov
jge
jg
fmul
in
in
or
push
popfw
jmp
jo
shrb
cmp
pop
add
into
inc
mov
ljmp
repnz
sbb
ds
icebp
mov
xchg
clc
cwtl
repz
mov
mov
fdivrl
xchg
jbe
outsb
push
loope
fdivp
ljmp
add
adc
mov
or
or
inc
fldcw
xor
fcmovnb
and
je
sbb
mov
out
dec
xor
faddl
xchg
shlb
and
sub
subb
int
push
sub
es
in
mov
or
fstp
push
sbb
ja
call
mov
xor
mov
fiadds
mov
in
inc
cmp
les
mov
xchg
sbb
push
stos
andb
aad
or
je
inc
or
rcll
clc
lahf
push
jne
ja
sahf
aad
mov
fstl
ret
ret
inc
divl
or
loope,pn
push
jmp
mov
fucomp
rcrb
push
lahf
xchg
fs
sbbb
jbe
mov
xchg
lret
dec
mov
adc
cmp
lods
pop
and
add
loopne
into
ret
jne
inc
sbb
test
and
xchg
dec
sbb
xor
fnstenv
xchg
cwtl
sbb
or
inc
xor
shlb
sbbl
ret
or
sbb
jmp
cltd
and
mov
dec
sbb
out
lock
jne
push
dec
outsb
mov
mov
bound
inc
push
repnz
or
jge
sbb
jo
xor
int
fstps
xchg
sbb
pop
aad
and
jecxz
dec
jb
add
cs
stc
out
xor
sbb
inc
mulb
xchg
bnd
push
dec
mov
cmp
hlt
les
inc
imul
das
mov
jecxz
pop
xchg
adc
sbb
xor
lret
repnz
addr16
cltd
bound
lock
cwtl
mov
mov
xor
inc
mov
pop
test
and
add
es
mov
push
adc
cmc
pop
stos
jl
mov
loop
test
leave
adcl
sarb
andb
insb
pop
jle
push
pop
or
push
in
in
sbb
add
add
dec
jg
mov
icebp
pusha
adc
lcall
or
push
aas
dec
add
and
push
mov
mov
sbb
and
xchg
mov
int
rolb
jecxz
jno
push
out
hlt
and
push
or
movsl
shll
sbb
scas
call
adc
das
cld
push
or
cmp
aam
hlt
bound
add
repnz
nop
rcrl
pop
stos
push
push
mov
mov
xor
into
sbb
faddl
and
lock
jp
fnsave
adc
push
inc
jne
stos
shll
dec
lahf
sbb
ret
loop
push
add
addl
inc
into
inc
out
int3
jbe
or
inc
mov
cmp
dec
mov
mov
inc
je
js
ljmp
dec
shlb
pop
cmpsb
mov
mov
cld
and
cmpsb
arpl
xor
jbe
cli
and
lds
mov
push
fucomi
scas
jmp
negl
add
jno
and
testb
jne
and
dec
xchg
pop
pop
fimuls
pop
ret
aad
setae
xor
shl
imul
xor
dec
push
sub
sbb
add
sbb
pop
push
xor
xchg
mov
jle
cmc
add
xorl
jle
inc
movsl
dec
lds
sbbl
add
loopne
inc
stos
inc
xchg
sbb
aaa
xor
jbe
mov
scas
mov
nop
rorl
mov
dec
mov
or
xchg
dec
push
add
arpl
and
loope
mov
xchg
add
jp
fildl
xor
sbb
inc
rcrb
mov
pusha
cmpps
stc
popa
scas
shl
mov
dec
mov
adc
repz
cmc
inc
jp
or
lock
mov
push
andb
sahf
pop
pushf
pushf
sub
fidivrl
lahf
inc
push
pop
dec
lret
jl
test
clc
cmp
ja
and
push
mov
pop
push
add
mov
enter
or
xchg
adc
jl
sti
xor
cmp
pusha
mov
int
push
mov
scas
xchg
push
sar
pop
mov
jns
lock
fildl
loope
sbb
and
jae
repnz
mov
mov
jae
jecxz
inc
imul
jbe
dec
test
out
pop
out
mov
hlt
js
cli
sbb
test
sub
repz
or
test
adc
add
and
jbe
sbb
je
mov
int
ffreep
sahf
push
push
xchg
lods
add
inc
or
xor
loope
jno
mov
sbb
xor
ja
jle
popf
fsub
out
or
pop
cmp
pop
nop
cmp
xlat
push
out
shlb
mov
cmp
add
xor
sub
mov
dec
sub
xchg
mov
or
sarb
ds
jle
jo
repz
fdivrp
adc
pop
mov
bound
push
in
pushf
sub
lcall
cmp
sbb
mov
push
sbb
and
mov
les
rolb
movsl
sahf
sub
lahf
lods
loope
loope
pop
lods
push
loopne
push
jns
insl
stos
insl
mov
repz
addb
inc
imul
jle
pop
sub
pop
jb
popa
fisubrs
arpl
jp
push
sub
dec
xchg
jl
dec
insb
mov
pusha
or
jp
add
orb
leave
cmp
dec
je
or
insb
mov
leave
jge
mov
inc
inc
pusha
es
and
jnp
enter
and
push
xchg
mov
mov
adc
dec
jb
cmpsl
dec
cmp
xor
cmp
sub
adc
outsb
cmpl
test
cmp
pop
mov
call
sbb
mov
rolb
inc
sbb
jl
or
in
pop
and
and
inc
popf
jp
pop
add
cwtl
or
sbb
add
push
sbb
jbe
mov
cli
mov
dec
mov
inc
adc
repz
notl
sbb
mov
xor
popf
add
std
and
inc
call
inc
push
cmp
pop
dec
push
jo
out
leave
ja
jae
pop
dec
sbb
sbb
fistps
into
cmp
sbb
add
sbb
mov
push
psrlw
push
fsub
insl
je
ret
jne
std
mov
xor
mov
lods
fisubrl
insb
mov
add
cmc
aas
test
in
pop
sbb
push
or
push
mov
sub
or
mov
in
xor
stc
mulb
pop
js,pn
movsb
xchg
ljmp
fs
mov
sbb
or
push
inc
sahf
xor
jne
sbb
push
leave
push
xor
inc
shrb
loope
mov
dec
cmc
xchg
inc
in
inc
cbtw
mov
and
or
dec
add
lock
jb
mov
jg
movd
js
adc
jne
xor
jbe
and
inc
dec
xchg
aad
rcrb
loope
jmp
push
and
mov
daa
mov
cwtl
push
jbe
inc
pop
inc
add
sbb
stc
add
in
mov
popa
nop
jp
or
jp
mov
imul
cli
fsubrp
test
dec
adc
imul
daa
dec
pop
mov
push
pop
pop
orb
loop
jae
fwait
lret
dec
outsb
fwait
mov
inc
hlt
sub
sahf
mov
jp
xchg
mov
pop
imul
inc
mov
inc
inc
movsb
push
lods
in
push
sub
dec
andl
jo
divb
scas
in
push
int3
pusha
in
sub
sbb
lods
jbe
adc
jle
xor
mov
pop
mov
jg
popf
into
mov
pop
add
dec
in
sti
mov
sbb
add
ret
and
loopnew
mov
inc
cltd
and
repnz
inc
inc
sbb
dec
pushf
dec
pop
jle
loopne
sub
jae
lahf
inc
mov
lock
mov
mov
loop
pop
sbb
sub
mov
add
push
cmp
add
je
pop
sub
adc
and
pusha
or
cmp
lahf
int3
adc
and
les
js
sbbb
push
pop
add
mov
sti
xor
push
aaa
and
xchg
adc
cs
add
es
bound
adc
mov
mov
add
push
push
out
dec
mov
test
inc
lods
jp
and
mov
fistl
sbb
cmp
inc
in
dec
lahf
push
xchg
adc
cmc
mov
cli
sbb
sbb
cmpsl
loop
stc
and
into
push
sbb
or
pop
arpl
or
shlb
and
push
or
test
outsb
shll
and
add
rclb
adc
fdivs
mov
push
pushf
xchg
das
cs
push
mov
dec
add
add
cld
fcomp
push
push
or
add
pop
jo
cmc
fwait
mov
fsts
fwait
lcall
rcll
fisubs
fwait
pushf
pop
adc
sbbl
and
pavgw
hlt
lods
adc
add
fcompl
dec
icebp
xchg
ds
clc
sub
cmp
fildl
mov
sub
inc
and
out
push
nop
cmp
pop
mov
pop
cmp
and
loop
add
adc
fcmovnbe
les
repnz
push
push
add
sbb
and
push
mov
and
xor
xchg
aas
cmc
inc
push
pop
imul
outsb
addb
adc
jle
shlb
and
fistl
dec
add
clc
repnz
and
fstpt
pop
loope
es
fmull
pop
loopne
lcall
dec
adc
pusha
lcall
testb
inc
test
xchg
push
es
xchg
insb
clc
das
add
jae
cs
clc
push
mov
mov
lret
fstpl
ds
fisttps
and
arpl
add
add
lcall
loop
jg
mov
pop
roll
imul
repnz
and
mov
mov
ja
ljmp
and
mov
cltd
loopne
pop
and
imul
inc
cmp
mov
pusha
or
push
push
inc
mov
pop
repnz
mov
or
rorb
stos
jno
pop
push
jg
iret
jg
ret
adc
dec
ja
nop
ret
sarb
fistpll
xchg
cs
push
scas
or
leave
sahf
adc
sub
dec
lcall
jle
sbb
or
jb
adc
orb
ret
mov
dec
and
mov
xor
or
cmp
or
sub
xchg
xor
pusha
lock
pop
das
sub
xor
fldl
mov
or
mov
test
lahf
xchg
adc
das
rcrb
jecxz
and
mov
imul
in
outsb
fbld
mov
sbb
loope
dec
jbe
and
xchg
mov
ret
xor
inc
add
mov
fucom
xor
fcompl
sub
jmp
daa
jge
xchg
or
std
bound
sbb
push
lea
sub
cmp
push
bound
sub
ret
mov
sub
es
pop
pop
loope
ret
arpl
pushf
cmp
mov
inc
mov
loope
mov
in
divb
test
adc
popf
dec
inc
gs
dec
and
jle
or
cmc
pop
je
sbb
mov
dec
lds
sahf
mov
daa
dec
mov
in
lret
add
jnp
mov
add
xchg
ror
rorl
sbb
lock
xchg
loope
pop
dec
mov
lret
stc
or
cmpl
dec
sbb
loope
call
bound
ss
push
push
mov
cwtl
push
push
dec
pop
loop
arpl
shlb
add
xchg
movsb
iret
test
aaa
mov
pop
call
add
idivl
out
std
add
pop
arpl
sbb
adc
in
and
mov
icebp
push
fsts
inc
mov
and
std
jae
insl
pusha
in
jg
daa
xchg
sub
loop
xor
xchg
repnz
xchg
xor
imul
fadds
stc
inc
xor
lret
mov
and
and
sub
repnz
aam
push
negb
int3
testb
sbb
mov
inc
rolb
dec
inc
loop
scas
cld
cmpsl
daa
incl
inc
cmpsl
ret
fcomip
ja
stos
jp
lods
stos
fwait
push
sub
pop
nop
ja
adc
and
inc
stos
push
cmpsl
push
lods
and
jp
out
imul
in
mov
push
ja
pop
scas
movsb
or
into
sbb
adc
mov
lahf
jne
pop
jp
sbb
mov
adcl
mov
inc
mov
fwait
xchg
jg
sub
lcall
push
call
adc
es
add
lahf
or
mov
sbb
cmp
cmp
sbb
add
int3
jne
leave
or
sbb
jbe
loopne
mov
cmc
pusha
nop
lret
sti
push
sub
pop
iret
test
mov
clc
dec
jecxz
push
push
adc
fadds
lret
loope
pop
add
add
flds
push
or
jp
cmp
testl
stos
in
push
das
jg
pop
ret
or
mov
inc
or
sbb
mulb
fadd
add
push
mov
add
push
push
add
xchg
int
sub
inc
jg
inc
inc
push
pop
dec
loopne
out
test
fcompl
xor
lock
push
rcrl
lret
adc
test
dec
mov
jge
or
jmp
decl
cmp
sub
xor
divb
setg
mov
push
cmp
pop
pop
out
nop
pop
adc
out
cwtl
sbb
mov
push
mov
dec
lahf
cmp
pop
dec
fdivrs
ja
sti
sbb
push
das
and
inc
inc
dec
add
cli
mov
aas
das
jo
div
movsl
or
cmp
add
inc
adc
xchg
jns
stos
ja
or
das
sub
push
xlat
movsl
in
es
sub
out
push
pop
enter
clc
stos
jp
cli
mov
push
xchg
and
fnsave
gs
push
jl
inc
ss
sbbb
push
add
loopne
and
add
add
pop
data16
fiadds
enter
out
cmp
shlb
int3
jle
and
outsb
pop
cmp
inc
dec
dec
push
pop
test
lods
and
xor
cli
push
lock
lods
mov
jae
and
add
fildl
pop
lods
bound
or
cmp
push
dec
sbbb
lock
or
push
add
dec
add
loope
stos
xor
std
shlb
dec
dec
mov
imul
pushf
pop
add
das
ret
sub
push
stos
or
or
jmp
xchg
and
dec
sub
or
and
aas
pop
pop
pushf
orb
xor
inc
dec
movsl
and
clc
push
fsubrl
enter
outsb
push
or
xor
jl
daa
push
push
mov
test
xor
pop
daa
jg
or
xor
add
adc
sbb
mov
ficompl
push
repz
ret
addl
dec
mov
scas
pop
das
sbbb
xor
or
sbbb
dec
cmpsb
sub
pop
add
push
orb
pop
xor
and
add
scas
int
sbb
fwait
cld
jg
push
mov
bound
push
and
fdivs
dec
adcl
push
add
inc
repz
inc
pop
test
addb
add
add
adc
ud2
jecxz
in
sub
add
insb
clc
pop
jmp
mov
nop
add
xchg
pushf
mov
xor
cmp
xchg
scas
std
mov
or
jl
mov
imul
cli
xchg
mov
into
adc
sbb
fcompl
xchg
bound
and
test
add
adc
sub
outsb
jo
mov
dec
gs
inc
aam
mov
jnp
out
mov
mov
mov
int
sub
or
cmp
jae
mov
mov
add
pusha
push
pop
push
inc
jbe
lea
dec
mov
mov
clc
mov
cmpsb
xchg
stos
inc
cmpsl
inc
hlt
or
add
andl
push
stc
sub
mov
loopne
xchg
clc
lret
aad
int
in
stos
lcall
hlt
jae
int3
movsl
clc
adc
pop
xchg
in
xor
clc
ficoml
mov
push
cmpsb
push
adc
sbb
sbb
mov
push
or
sub
dec
or
inc
cmp
xor
das
xor
push
jle
jb
push
push
pusha
psrad
inc
dec
pushf
cmc
and
std
lds
push
jle
sub
mov
mov
pushf
mov
dec
lcall
ja
in
sub
notb
or
push
cmp
stc
hlt
test
dec
ss
inc
fistpl
add
jle
mov
data16
mov
add
and
and
mov
sbb
hlt
sub
scas
subl
inc
sub
lcall
gs
jecxz
xor
ud0
sub
sbb
add
push
xchg
sub
and
jne
enter
mov
lds
cltd
cld
cs
sbb
mov
pop
insl
fcoml
jl
add
jle
cmp
jg
push
mov
lret
jle
xor
xchg
repnz
stos
push
xor
std
add
push
fwait
push
ljmp
fildll
cmp
sub
push
ja
cmpsb
mov
mov
repz
dec
push
xor
mov
es
mulb
incb
pop
sub
add
outsb
and
aam
cmp
jecxz
push
movsb
pop
es
loope
aas
jb
aas
and
mov
or
fsubr
aaa
lahf
sti
out
push
mov
cs
sbb
repnz
or
repz
jns
adc
cmp
icebp
lcall
int
adc
aad
mov
add
inc
sbb
mov
sbb
xor
adc
aas
add
push
add
stc
insb
pop
inc
adc
or
pop
loop
or
or
pop
out
std
and
loope
shl
sbbb
lahf
pusha
pop
cs
fsincos
push
or
pop
push
and
fnstenv
in
sub
popa
push
leave
test
mov
clc
or
mov
push
mov
int
or
ljmp
adc
sub
xchg
pop
int
pop
adc
xchg
stos
iret
push
mov
inc
xor
stc
lods
jle
das
mov
cli
das
dec
push
dec
cltd
dec
cmc
inc
mov
adcb
push
inc
std
pop
inc
or
cmc
dec
test
or
mov
clc
cwtl
xor
lock
out
cwtl
cmp
push
mov
push
or
add
mov
arpl
or
ljmp
mov
xorl
mov
and
xor
jg
andl
jmp
sub
stos
fmuls
lcall
inc
lds
lea
gs
flds
jle
popl
mov
sbb
mov
ds
xor
ret
lock
and
enter
fcomip
dec
pushf
mov
cmpsb
stos
iret
cmp
push
sbb
imul
sub
mov
xor
inc
repz
incb
cwtl
mov
inc
and
insb
loop
repz
push
cmc
xchg
mov
pavgb
jle
mov
sub
stos
clc
ja
ficoml
cs
push
dec
push
neg
jecxz
ljmp
not
inc
fisubs
push
pop
dec
out
xor
sahf
mov
xchg
jae
arpl
popa
negl
movsl
sub
mov
jle
jle
adc
push
xchg
xorl
cmp
inc
push
cmpsl
pop
fisttpll
sbb
in
cmpsb
stos
sti
jo
xor
cmp
sub
addl
or
mov
push
jge
shrb
jnp
inc
xchg
scas
sbb
hlt
fs
xor
jo
sub
add
pop
pop
lcall
das
movnti
dec
sbb
add
sbb
cltd
push
leave
push
xchg
addb
or
out
dec
and
fstps
orl
xchg
pop
cmp
dec
xchg
mov
xchg
push
inc
stos
movsb
add
xchg
jae
cmp
loop
loop
xor
inc
mov
gs
or
and
or
loopne
pop
aad
cmp
iret
sub
push
fsts
mov
push
dec
jne
loope
outsb
outsl
inc
push
divl
pop
xchg
inc
pop
std
push
sbb
push
or
arpl
xor
or
lods
dec
push
jge
push
cs
add
ljmp
add
jnp
pop
or
mov
aam
or
dec
sbb
inc
movsl
pop
add
aam
aad
sub
loope
btsl
loop
fldenv
xor
mov
cmp
or
loope
xchg
pusha
or
jle
push
mov
leave
mov
mov
sub
pusha
ss
shrl
hlt
xor
popf
outsl
cmp
push
es
sub
sbb
sub
popf
inc
jl
mov
sub
add
dec
in
add
xor
inc
lcall
add
fidivl
and
aad
push
cmc
jno
mov
pop
or
xor
jae
iret
and
mov
std
shlb
ret
aad
daa
loope
sbb
or
adc
inc
push
pop
jb
mov
popf
adc
repz
adc
jns
jecxz
inc
daa
pusha
pop
ja
add
xchg
mov
adc
and
xor
lcall
inc
push
or
xor
cmp
les
pop
cmpsl
loope
daa
xchg
pop
cs
or
lret
js
jge
add
jnp
dec
add
xlat
inc
inc
test
jl
into
sbb
cwtl
movsb
out
lahf
dec
mov
bound
daa
ret
mov
xor
add
sahf
jnp
add
pop
fwait
push
jle
outsb
pop
mulps
into
inc
or
jle
leave
std
js
pop
add
adc
push
sbb
push
repnz
jl
inc
dec
lea
subb
cmp
rcll
jge
cmp
hlt
push
and
enter
jno
mov
fmull
pop
pop
and
dec
pusha
movd
push
icebp
add
mov
lcall
out
jl
mov
sub
icebp
cmp
push
std
cmc
add
push
adc
les
xor
dec
adc
xchg
sub
aad
mov
stos
orb
cmpl
pushf
or
lcall
pop
lret
repnz
mov
lcall
or
dec
and
mov
pop
push
test
lock
sub
sbbl
pop
sbb
ds
das
push
cmpsb
call
lret
or
mov
mov
data16
add
inc
or
shlb
in
das
push
and
mov
jnp
add
in
add
dec
push
sub
lds
xchg
test
push
xchg
gs
jp
fwait
movsl
scas
pop
shrb
decl
mov
add
aaa
adc
lahf
pusha
sahf
mov
inc
imul
or
sub
sub
xchg
adc
std
hlt
aad
push
mov
les
xor
scas
out
daa
pop
fmul
int3
sbb
add
loop
ret
test
or
push
mov
fbstp
jmp
push
ja
adc
pop
hlt
dec
ljmp
xchg
pop
push
test
pop
pushf
xchg
xor
pop
repnz
popf
xlat
cwtl
pop
push
testb
js
mov
and
dec
loope
sbbb
pop
testb
les
or
mov
jbe
jecxz
addl
or
cmp
inc
pushf
and
xor
dec
add
scas
add
jle
jecxz
jno
jnp
add
aas
sarl
jo
mov
sub
lods
std
sahf
lret
xchg
mov
ret
add
sub
mov
xor
or
push
test
lcall
xor
into
pop
es
mov
ret
inc
inc
repz
sub
insb
adc
pop
add
cmpsl
imul
repnz
and
jns
inc
push
insb
dec
lcall
pop
and
mov
ljmp
mov
hlt
push
std
sbb
hlt
xchg
lea
mov
nop
call
or
rcll
ja
sbb
push
sbb
int
mov
dec
jns
mov
testl
jle
cmp
xchg
lcall
jg
and
fs
fdiv
inc
fwait
lahf
repnz
popf
add
ja
sarb
mov
jp
mov
ljmp
ret
jmp
pushf
add
sub
mov
std
lcall
rcl
or
int3
pop
xor
pop
scas
lcall
daa
orb
pop
fistl
fstp
mov
into
pop
xor
lahf
cld
add
insb
add
fdivrp
into
fidivrs
push
xor
cmp
xor
aad
sbb
push
jg
out
push
push
xor
push
sahf
pop
cmc
pop
jmp
and
and
cld
pop
popf
lock
push
and
jb
inc
jmp
adc
ficoms
or
xor
jle
orl
pop
or
sbb
stc
out
mov
mul
xor
inc
jl
mov
das
leave
mov
pop
ret
fucomp
inc
loope
fwait
adc
popa
xchg
xchg
std
mov
adc
xchg
into
test
cmp
lahf
inc
push
icebp
push
pop
fisubs
add
repnz
fildl
popa
mov
push
jg
mov
icebp
and
inc
je
push
lds
dec
push
and
call
je
jmp
push
push
popf
inc
outsl
outsb
inc
or
outsb
data16
aad
xor
mov
std
int
xorl
push
or
loop
mov
addl
push
fsubl
and
int3
test
pusha
sbb
daa
push
jl
cmp
dec
xor
aad
addr16
pop
inc
dec
int
lock
pop
lock
cmp
jnp
pusha
cmpl
pop
push
sub
jb
and
push
or
arpl
inc
cmp
inc
cmp
sbb
sbb
daa
js
negl
arpl
jmp
jg
mov
lcall
adc
dec
inc
jns
test
inc
lock
cmp
test
je
inc
mov
pushf
rorl
scas
or
xor
push
js
xorb
mov
sbb
and
outsb
adc
sbb
data16
or
dec
push
fsubrl
sbb
je
xchg
jae
pusha
test
cmpl
pusha
mov
cs
dec
fisttpll
out
out
cmpsb
std
outsl
sti
push
push
in
imul
lret
push
adc
lcall
jecxz
dec
jp
int
jl
fistps
popl
mov
xchg
and
and
xor
push
in
or
push
mov
dec
add
lret
xchg
ds
pop
xchg
push
push
inc
inc
dec
mov
adc
add
lret
mov
adc
sbb
mov
push
xchg
loope
dec
xchg
or
shll
addr16
outsb
js
jle
adcl
mov
movb
lret
add
dec
mov
testl
popf
icebp
mov
pop
nop
loop
sarb
mov
add
cmp
dec
adc
adc
push
dec
into
push
jle
xor
cli
push
mov
pop
xor
je
clc
cmp
mov
xor
sbb
jbe
movsb
jg
out
inc
cs
into
lret
mov
in
mov
insb
ret
daa
ljmp
mov
out
add
push
mov
dec
adc
mov
stos
scas
ja
fsts
dec
shlb
scas
mov
ror
loopne
stos
mov
inc
int
dec
and
dec
mov
sub
lret
loopne
add
aaa
jbe
mov
mov
insb
cmp
dec
leave
jge
call
mov
push
cli
add
mov
mov
test
in
js
int3
cmpl
sbbl
adc
es
cmp
push
inc
push
jg
mov
imul
inc
cmc
ss
popa
jne
pop
pop
add
inc
repnz
mov
xchg
pop
dec
push
sub
mov
jae
roll
pop
ljmp
lods
cmp
adc
sbb
adc
add
icebp
jne
jnp
scas
jge
mov
loope
addl
xchg
sbb
hlt
mov
xor
je
js
mov
in
and
add
rcll
je
mov
xor
inc
and
orb
pop
ds
pop
push
loopne
pop
pop
in
cwtl
in
popa
jae
jae
or
ja
js
dec
push
lods
fbld
pop
add
jp
lahf
jg
push
cmpsb
xor
mul
int3
frstor
testl
cli
in
popf
jnp
inc
cmp
jbe
add
cmpsb
dec
fisttps
lret
xchg
fisubs
idivl
push
push
mov
decl
cltd
cmpb
push
decl
mov
lock
mov
xor
xchg
pop
ja
inc
popf
pop
push
lock
cmpsb
add
ret
loop
scas
inc
pop
dec
testb
popf
rep
mov
sar
das
popf
dec
jle
std
stos
add
jl
mov
test
add
push
test
sub
push
lods
sub
push
js
push
loop
lea
add
fs
jmp
sti
xchg
cltd
ja
mov
push
in
lret
shll
xor
sbb
es
shlb
jecxz
popf
mov
xor
cmp
or
add
fxsave
jl
or
cmp
adc
mov
std
pop
jle
sbb
insl
je
pop
jnp
pop
jb
notl
mov
mov
xchg
nop
pop
mov
add
inc
int3
arpl
jno
cmp
shlb
pop
pop
jb
sub
or
xor
jg
imul
bnd
xchg
mov
insb
mov
push
jle
fnstenv
in
popf
enter
push
call
pop
hlt
push
sub
int3
mov
cmp
jmp
out
mov
push
push
mov
shll
add
dec
popa
daa
xchg
or
push
mov
hlt
push
cmpsl
jb
test
sar
push
out
add
xor
stos
lcall
add
movb
push
test
pushf
xchg
inc
in
orb
lcall
xlat
inc
xor
das
shlb
daa
in
and
bound
jo
pusha
pushf
repz
push
movsb
aaa
loope
pop
movsl
es
mov
rol
lods
xchg
lea
push
dec
stc
fdivl
nop
sbbl
jg
xor
arpl
fsubs
dec
jns
dec
ja
jb
es
rcl
sub
pop
pop
idivb
inc
das
call
pop
jns
je
mov
xchg
pusha
push
cs
jb
or
cmc
es
pop
jnp
sub
pop
das
pop
jne
mov
bound
jae
scas
push
pop
aas
cmp
xor
pop
fbstp
push
sbb
xor
andb
icebp
cwtl
add
and
adc
popa
sti
sub
and
lods
mov
push
add
sub
loop
das
push
std
push
ret
mov
pop
fsubs
cld
mov
daa
jp
ffreep
fldcw
fbld
notb
out
cld
push
leave
jne
add
ja
nop
jno
fcomip
movb
lods
pop
add
sub
xchg
cmp
xlat
pmullw
out
scas
add
xor
cmp
add
jle
rolb
xchg
dec
mov
or
das
lcall
dec
hlt
adc
into
sub
mul
xchg
and
aad
mov
bound
push
sbb
mov
sub
and
and
lsl
dec
nop
pop
xchg
jbe
stos
add
je
jo
test
ret
icebp
cwtl
call
sbb
jnp
cmp
loope
lea
push
aad
adc
mov
cli
push
dec
push
push
mov
pop
jne
xlat
dec
dec
mull
sbb
push
push
or
pop
jg
xchg
insb
enter
das
std
imul
and
xchg
dec
push
mov
add
add
push
mov
int3
push
stos
jp
jno
inc
xor
cld
movsl
loop
sub
dec
notb
fbld
xor
movsl
jnp
pusha
or
jo
push
lock
int3
cmp
and
push
inc
mov
push
cmc
jl
sbb
pop
loopne
in
or
loop
pop
enter
jmp
jle
and
dec
dec
cld
fwait
push
aad
sub
pop
pop
inc
add
out
jp
inc
dec
add
pusha
ja
pop
dec
and
mov
inc
xchg
test
xor
mov
leave
pop
push
push
mov
addl
in
fsubp
out
decb
lods
loop
std
add
jp
lds
cmp
shl
insb
push
mov
add
adc
sbb
adc
into
inc
adc
inc
sub
leave
pop
insb
addl
loop
in
mov
sbb
mov
and
lock
sbb
in
sub
push
loope
xor
ret
das
lds
lcall
cmp
push
pop
fld1
mov
jp
jle
addb
xor
jl
dec
stc
push
mov
and
pusha
jbe
test
clc
test
hlt
inc
sbb
lret
push
or
xor
ja
and
push
insb
adc
push
sbb
mov
push
cli
fstps
cltd
xchg
nop
xlat
or
sub
xchg
psadbw
mov
lock
sbb
stos
ret
dec
movsb
cmpsb
sbb
outsl
mov
xlat
mov
loop
out
clc
fwait
inc
sbb
cmp
or
inc
cmp
push
pop
lcall
sub
enter
lock
lods
mulb
int
xchg
ljmp
and
or
icebp
loope
dec
adc
dec
dec
and
cmp
add
shlb
flds
push
and
inc
pushf
mov
inc
mov
imul
into
insb
testb
adc
and
xchg
pop
pop
das
jge
aam
add
inc
cmp
lea
mov
es
xor
pop
push
mov
add
jp
int3
push
loope
mov
push
pop
xchg
sub
adc
xchg
insb
jl
aam
fmulp
inc
into
xchg
stos
fbstp
test
daa
xlat
push
adc
stos
mov
popf
in
addb
subl
push
mov
xchg
mov
adc
jnp
adc
inc
add
lds
out
jg
mov
lock
ljmp
sub
sub
lock
lret
sub
setle
sbb
iret
ficompl
lret
arpl
xchg
pop
das
pusha
pop
push
add
mov
or
popa
mov
jae
jp
arpl
mov
popl
sarl
xchg
add
mov
push
ja
xor
push
add
mov
add
popw
aas
mov
jnp
ljmp
inc
movsl
fcompl
jns
data16
sbb
addr16
in
fistl
pop
movsl
add
pop
jbe
imul
repnz
bound
dec
mov
jle
in
xor
push
orl
mov
push
and
ljmp
orl
sub
sbbl
mov
add
cltd
dec
orl
mov
push
ret
dec
ljmp
mov
jo
rep
sub
lahf
ja
sub
push
inc
cmp
xor
mov
mov
popa
ret
mov
stos
out
push
shrl
and
int
inc
stos
leave
inc
xor
sbb
push
rorb
pop
orl
lcall
stos
filds
jle
or
dec
sub
negl
xchg
hlt
cmpsb
scas
lret
pop
adc
cltd
mov
mov
popf
xchg
notl
inc
xor
ret
repz
push
sub
add
cmp
dec
loope
rcrb
jmp
xchg
push
adc
sub
loope
cmp
or
negb
mov
sar
sahf
pop
mov
gs
and
dec
sbb
and
ds
push
cwtl
jbe
or
jne
cltd
adc
dec
dec
pop
dec
outsl
push
dec
adc
pop
or
sbb
ret
mov
push
in
pop
pop
or
xor
icebp
or
loopne
push
fwait
dec
mov
mov
das
pop
leave
jle
jp
outsb
push
add
jg
push
xor
daa
lret
sbb
push
lods
lcall
iret
mov
cmp
mov
xor
hlt
sub
fsts
into
push
jbe
and
adc
neg
arpl
or
insl
adc
mov
inc
jbe
xchg
dec
and
jae
fsubl
rcrb
jb
mov
push
mov
or
jmp
xchg
rclb
add
jb
popf
mov
cmpsl
rcrl
int
mov
adcl
loope
pop
int
pop
and
xchg
sbb
es
push
test
sbb
orl
jbe
clc
jl
arpl
mov
stos
sbb
cli
xchg
fwait
mov
push
aam
loope
xor
loope
ja
rolb
rcrb
mov
push
pop
ret
aad
push
es
xchg
dec
push
movsl
mov
jne
or
sbb
int3
xor
adc
dec
hlt
sbb
lock
inc
test
pushf
mov
jae
iret
or
into
sbb
inc
cli
in
mov
mov
test
mov
loop
and
mov
sub
push
lock
repnz
lock
mov
cwtl
dec
xor
idivb
aam
or
add
xchg
bound
dec
pop
daa
cli
and
push
ljmp
xorb
std
sbb
xchg
scas
dec
sarb
sub
ffreep
inc
push
repnz
mov
sbb
push
push
jp
rcll
mov
cwtl
mov
mov
xor
inc
jge
mov
jno
cmp
into
sub
pop
cli
sbb
sbb
je
daa
mul
rcr
pop
ljmp
mov
scas
add
ja
icebp
inc
test
out
loope
add
xor
push
or
mov
add
mov
loope
add
inc
mov
push
adcb
int
sbb
filds
dec
jecxz
lock
cld
int
pop
push
int3
shl
cmp
xchg
imul
in
sub
cmp
scas
dec
adc
push
mov
mov
into
aad
shrb
push
jns
lret
jg
stos
push
mov
fimull
punpckhdq
xchg
hlt
testl
pop
fstpl
fdivs
push
pop
xorb
xor
jg
sub
je
andb
pushf
dec
nop
mov
jecxz
mov
mov
xchg
add
sub
mov
je
xchg
insl
or
out
repz
and
push
shlb
outsb
test
dec
cli
jecxz
icebp
mov
adc
jb
pop
or
fisubrl
sbb
out
ds
push
sub
sbb
test
mov
popf
sbb
out
out
sub
cs
sbb
ret
repz
mov
xor
dec
inc
sub
insl
das
jbe
mov
bound
inc
rclb
xor
adc
cmp
add
push
adc
push
inc
mov
sbb
adc
cmpsl
fwait
sub
gs
mov
sarb
rol
add
sahf
leave
and
push
pop
jmp
pop
ljmp
push
wbinvd
and
mov
insl
std
cli
imulb
sub
jne
das
push
push
mov
out
aaa
xor
rcrb
loope
fstp
fimuls
adc
push
xchg
sbb
loop
stos
test
data16
loope
jns
fisttpl
sarb
add
loop
pusha
inc
pop
xchg
xor
and
addb
adc
add
pushf
je
pop
xlat
sub
icebp
or
cmpsl
inc
mov
push
dec
mov
pop
aad
inc
int
push
push
cld
adc
out
or
loop
aaa
xor
adcb
mov
inc
mov
pop
loopne
adcl
js
pushf
mov
incl
lret
inc
out
daa
fs
jl
loopne
pop
mov
cltd
xchg
mov
mov
jnp
jbe
push
out
sbbb
push
mov
inc
paddusb
xchg
lock
enter
lret
div
push
xchg
pushf
xchg
fidivs
jbe
sub
fisubrs
lock
jnp
nop
jecxz
and
or
xor
mov
cmc
iret
or
sub
test
xor
ret
cwtl
cmp
mov
add
sub
dec
lods
lds
jecxz
pop
mov
or
aaa
jg
pushf
mov
and
or
or
fwait
mov
add
inc
xlat
mov
pop
jmp
and
and
fistl
shrb
xlat
arpl
in
movsb
xchg
sti
add
jle
arpl
pop
mov
pushf
add
frstor
ljmp
xor
repnz
jle
add
inc
add
inc
sbb
pop
xor
cmp
jle
sbb
jg
adc
add
or
jmp
loop
testb
mov
sub
pop
pop
loop
stc
pop
sbb
xchg
sub
xor
pop
jg
dec
inc
jns
mov
subb
mov
mov
adcl
cltd
adc
pop
push
or
sub
add
jl
call
sbb
mov
xor
push
cmp
jp
pop
add
pop
icebp
or
rcr
jecxz
cmc
cmp
pop
mov
add
sahf
sub
dec
ljmp
jae
movsl
sbb
pop
pop
mov
iret
adc
mov
das
pop
xbegin
adc
bound
inc
xor
and
test
push
outsl
mov
jb
push
enter
repnz
addl
jg
mov
ds
dec
mov
rcrb
dec
xchg
cld
mov
add
and
sbbl
rcl
hlt
cmp
out
stos
pop
fidivrl
xor
loope
stos
push
mov
fcompl
inc
in
getsec
out
not
inc
pop
pop
adc
loope
mov
and
dec
jge
test
addl
out
xlat
outsb
and
je
pop
jle
sub
jmp
fcomps
mov
mov
sbb
mov
clc
js
jge
sbb
orl
in
sub
js
pop
jg
add
scas
jns
cmpb
push
jg
pop
push
sbb
das
push
cmp
jne
dec
scas
in
adc
idivb
cmpl
or
js
dec
in
fwait
popf
lods
cmc
cmp
xchg
sbb
cmpb
enter
pusha
add
push
mov
adc
andb
add
aad
adc
aaa
gs
xor
xchg
out
xchg
inc
fstpl
xchg
sarb
push
add
mov
outsl
std
sbb
add
ljmp
cwtl
inc
mov
and
cmpsl
sbb
mov
imul
sbb
pop
enter
and
cmp
jle
pop
call
into
pop
pop
sbb
push
test
inc
pop
jo
std
cmp
sbb
sbbb
sub
enter
fistpll
mov
dec
fnstenv
nop
jne
out
jo
icebp
fisubl
mull
lock
das
xor
jp
lret
loop
fstps
nop
mov
mov
iret
cmc
rcr
sahf
mov
pusha
outsl
cmp
push
repnz
in
pop
sub
dec
addb
mov
cmp
xchg
mov
xor
adc
xchg
les
in
cmpsb
sub
testb
ds
int
sahf
ljmp
lods
sbb
test
daa
cli
fwait
dec
outsl
add
aaa
sarl
es
lret
cmc
test
xchg
es
jo
sbb
loop
cmpsb
cmp
xchg
xor
and
mov
popa
cmpb
cwtl
aas
adc
or
cmp
dec
call
mov
push
pop
mov
in
pop
xchg
push
lret
ret
jge
or
pop
push
loop
ret
ficoml
push
adc
pop
adc
jbe
aad
xlat
out
inc
sub
adc
stos
addl
push
bswap
or
repnz
cmp
rol
ret
mov
mov
jmp
jae
cwtl
repnz
push
hlt
sbb
mov
stc
into
push
in
mov
mov
or
loop
fdivrs
mov
das
push
xor
jno
es
ret
lcall
repz
les
jecxz
push
jge
sti
and
cmp
xor
in
out
pop
lods
lock
es
add
mov
scas
pop
pop
mov
loop
ss
jbe
insb
sbb
fiaddl
sub
lds
jle
add
add
das
pop
dec
repz
adc
cmp
mov
or
cmp
dec
xorl
lret
inc
jecxz
mov
mov
popf
ret
movaps
dec
add
xchg
xor
std
sub
sbb
nop
dec
xor
jge,pn
mov
or
cs
adc
aam
push
add
mov
jmp
xor
loop
jmp
aam
mov
jne
iret
test
or
mov
mov
fsubl
mov
cmpl
dec
xor
and
jmp
out
ss
daa
ret
sub
cmp
inc
imul
fdivrl
outsl
ret
jecxz
and
and
pop
sub
jge
jmp
jae
sub
jle
js
inc
adc
pop
sbbl
in
mov
mov
xorb
sbb
leave
pop
inc
push
sahf
sbb
or
dec
dec
xchg
es
jno
in
add
push
jne
mov
mov
sahf
into
loop
repnz
mov
push
cmp
inc
xor
jns
cltd
push
sub
push
fdivs
loopne
ret
pop
ljmp
cli
lahf
lock
ds
cmp
loope
pop
jmp
mov
clc
inc
ss
add
lret
add
das
adc
add
cmp
jle
add
pusha
out
add
dec
enter
cs
push
dec
ljmp
mov
jg
outsb
rcrb
fcompl
adc
insl
sub
mov
das
pop
dec
sbb
movsl
jae
mov
cmp
int
out
sub
ja
lcall
jmp
into
cmpsb
pop
and
sub
mov
push
cmc
mov
enter
xchg
cmp
scas
sub
into
lds
and
scas
push
xchg
cli
fstps
adc
adc
pop
xchg
cmp
insb
cmpb
xor
ss
and
push
and
or
sar
add
mov
or
xor
jns
dec
fwait
dec
mov
ja
xchg
xchg
loop
div
mov
das
stos
jecxz
into
add
andl
sahf
outsl
cmp
fstpl
das
fildll
scas
add
orb
or
mov
add
jge
pop
or
aam
cltd
data16
mov
or
imul
xor
pop
sbb
xor
cwtl
mov
pop
pop
cld
dec
sbb
mov
push
xor
push
ret
cmp
mov
sub
stc
movsl
and
cmp
ljmp
sbb
jge
cmp
dec
pop
inc
andl
movsb
scas
jnp
pop
inc
mov
or
lcall
ja
sti
cmp
xchg
lcall
xorl
testb
mov
callw
mov
cwtl
test
pop
test
sub
dec
sti
and
insl
adc
push
adcb
lock
xchg
xor
ja
je
addl
test
idivb
and
sarl
and
xchg
loopne
cmp
jne
adcl
cmp
cld
xchg
js
icebp
push
sbb
inc
adc
xor
fidivs
adcb
xor
mov
xchg
push
frstor
lret
add
push
loope
das
adc
jae
das
xlat
in
mov
mov
inc
fnstsw
std
cmc
nop
dec
push
ret
mov
push
xor
popf
ret
sub
arpl
sti
push
aas
mov
cmp
call
loopne
mov
sub
sbb
mov
dec
imul
mov
popf
fbld
lcall
adc
push
idivb
lcall
pop
cwtl
xchg
aad
loopne
jo
sub
mov
add
aam
mov
iret
and
ret
push
mov
loop
xor
std
push
cmp
or
push
sub
and
lret
xchg
sub
and
dec
scas
jbe
mov
cmpl
push
std
xor
push
inc
adc
cmp
loope
xor
mov
jae
lock
mov
pop
inc
test
psadbw
lock
daa
sbb
je
orl
ja,pn
dec
mov
dec
mov
cmp
lods
pop
sbb
push
adc
mov
jns
push
hlt
adc
ja
dec
xchg
das
sahf
aam
mov
movsl
fs
mov
mov
push
movsl
mulb
pop
aad
push
dec
or
enter
push
das
jne
cmp
sbb
add
fwait
inc
fildl
mov
pop
lret
mov
mov
cli
fadds
push
inc
mov
mov
mov
dec
jp
mov
jne
mov
aad
in
cmpb
dec
ficoml
ret
mov
mov
mov
sbb
sar
pop
fcmovbe
push
loop
loopne
js
and
add
dec
scas
sbb
call
andl
dec
lea
popfw
cs
scas
out
dec
xchg
sti
mov
jmp
test
sbb
mov
xor
ficoms
xor
xchg
and
in
mov
inc
mov
adc
cwtl
ljmp
pop
movzbl
jl
nop
arpl
push
push
push
xor
and
inc
xchg
xor
adc
sbbl
push
dec
dec
int
or
add
loop
xor
mov
adc
ljmp
adc
and
jne
or
cmp
adc
xchg
mov
aam
push
push
or
test
pop
cmp
and
jns
mov
addl
in
out
ret
mov
mov
stos
pop
std
ja
dec
jg
cli
jns
dec
pusha
sbb
in
nop
sbb
and
jmp
pop
push
lods
pop
add
lcall
sub
lods
rolb
inc
and
pop
dec
sub
push
pushf
xchg
shlb
inc
push
sbb
mov
repz
or
xor
repnz
inc
sub
cli
mov
lret
jbe
cmp
sub
jg
sbb
xchg
cs
push
in
out
sbb
popf
iret
fnstsw
sub
cmp
mov
sbb
fcoml
adc
cld
inc
bnd
pop
je
mov
aam
outsl
sub
les
add
mov
xor
push
pop
sub
cltd
loop
lret
xchg
mov
mov
and
mov
daa
push
clc
pop
xchg
push
pop
and
pop
pop
mov
les
clc
xchg
fnstsw
test
repnz
int
getsec
or
icebp
fs
mov
outsb
jl
inc
les
mov
ret
xchg
xor
mov
insl
push
test
adc
dec
xchg
sub
scas
push
hlt
push
mov
push
pushf
and
mov
add
loop
jne
xor
jae
into
mov
inc
mov
jg
cmc
xor
leave
mov
adc
fbld
mov
test
out
outsl
cmp
out
mov
test
mov
cmp
and
push
mov
lahf
mov
in
pop
pop
mov
xchg
and
rorb
jle
or
cmpsb
cmp
mov
into
ret
or
inc
jae
and
inc
stos
inc
lods
ret
test
popf
jg
cmp
mov
and
les
pop
loope
rol
leave
or
inc
pop
adc
sub
inc
sbb
mov
lock
out
inc
pop
push
add
inc
mov
push
sahf
outsb
push
sub
enter
jnp
and
iret
popa
and
xchg
ret
or
clc
mov
mov
movsl
sbb
sets
dec
mov
xor
lret
fisttpll
mov
test
jne
mov
and
cli
sub
jg
outsl
sbb
call
loopne
jmp
loop
daa
leave
pop
xchg
les
jno
stos
lret
loope
cmp
inc
test
test
int
and
stos
mov
and
movsl
and
jmp
mov
dec
cwtl
sbb
sahf
mov
add
push
rep
xor
shl
test
scas
outsl
jae
inc
push
in
jbe
cmp
mov
test
rclb
cwtl
repz
mov
xchg
arpl
and
push
sarl
lds
rolb
pop
ret
test
jbe
ljmp
dec
add
mov
testb
filds
loop
pop
adc
and
int3
jne
ljmp
cmp
mov
outsb
repnz
adc
popf
mov
inc
cmpsl
mov
mov
add
pop
or
xchg
cmc
sub
subb
mov
std
xchg
or
mov
loop
mov
adc
js
mov
adc
in
cmpsb
sbb
and
and
jp
adc
mov
push
and
cli
mov
ja
jle
sub
lock
rorl
inc
enter
test
mov
and
add
sti
ja
arpl
cltd
dec
loop
decb
cwtl
lock
jp
adc
cmp
jle
push
sti
mov
push
mov
call
sub
adc
dec
or
mov
add
out
andb
testl
imull
jmp
popf
cmp
ljmp
pop
clc
cmpsl
inc
sub
scas
jl
sar
fisttps
mov
loope
fs
out
push
dec
jg
sbb
dec
push
sub
stos
cltd
stos
or
call
das
mov
mov
aas
ror
cmp
cltd
add
dec
inc
bound
aas
shll
loope
xchg
and
lcall
arpl
pushf
xor
jb
pusha
dec
in
repnz
adc
jl
popa
xor
push
pusha
adcb
sti
jne
sub
mov
test
pop
jmp
icebp
test
outsb
mov
sub
or
xor
adc
cmc
sbb
fidivrl
pop
lahf
add
outsb
scas
iret
hlt
cmp
out
stc
lea
push
movsl
sub
enter
in
test
adc
push
cli
repnz
push
xchg
dec
enter
leave
pop
sbbl
test
in
and
pop
aad
jbe
popl
mov
pop
cli
jecxz
xor
les
dec
inc
jae
xor
mov
mov
ja
sbb
and
out
and
push
push
or
and
arpl
add
push
sub
inc
xchg
mov
cli
test
or
aam
pop
inc
adcb
ja
lret
in
or
add
ret
orb
fildl
lods
add
jbe
in
addl
cmp
mov
pop
test
aad
gs
pop
icebp
jle
hlt
dec
addr16
jle
dec
lock
lds
dec
idiv
inc
and
cmp
enter
orb
loope
xor
jno
sub
shll
lret
cltd
sub
xor
jg
xchg
mov
and
jmp
shll
adc
add
or
add
dec
incl
adc
hlt
out
dec
das
sbb
push
xor
inc
push
pop
dec
sbb
fstl
dec
sbb
cmp
push
mov
pop
incb
loop
scas
mov
insl
leave
popf
repz
lods
jp
inc
sti
into
dec
sbb
mov
cmc
cmp
pop
stos
pop
sbb
jb
scas
in
sahf
and
sbb
hlt
daa
push
insl
outsb
add
decl
push
incb
jbe
shlb
mov
sub
repz
loope
cld
jae
lods
cld
rcl
pop
xchg
sbb
pop
lahf
out
cltd
bound
jae
arpl
or
std
jbe
cli
je,pt
jp
dec
shll
xor
inc
enter
or
mov
mov
mov
idivb
jle
lret
or
dec
ret
lds
pop
xor
inc
cmp
loope
jmp
das
and
das
sub
jmp
ss
pop
faddl
sbb
ret
inc
xchg
ficoms
or
xor
jle
test
push
dec
fistpl
add
mov
dec
pop
lahf
push
inc
push
sti
jno
sti
push
adc
bnd
inc
mov
cli
aam
xchg
out
dec
rol
inc
or
and
cmpsl
add
ss
jg
aaa
shll
iret
push
out
push
sub
xor
test
ret
cwtl
lret
push
pop
outsl
pop
scas
test
inc
cmpsb
push
es
fcomps
fbld
push
pop
idiv
dec
sbb
adc
and
mov
out
clc
and
pop
jg
and
sbb
mov
int
dec
dec
pop
adc
loop
popf
push
push
sbb
dec
pop
xchg
mov
add
sub
dec
rorb
mov
inc
mov
pushf
sub
rcl
mov
mov
mov
inc
push
cmc
jnp
mov
shlb
inc
in
push
xor
xlat
push
ret
stos
clc
ret
or
dec
rol
pop
push
inc
push
xor
je
insb
mov
jne
pop
push
push
push
push
loopne
fnsave
xor
aad
dec
cmpl
or
es
xor
sbb
dec
test
pop
icebp
imul
inc
cmp
pop
subb
push
call
mov
js
pop
pop
cmp
push
dec
xorl
sub
stos
push
cs
xchg
sub
inc
jbe
inc
fnstsw
aad
jle
ja
mov
pop
cmc
xor
pusha
push
jo
sbb
into
or
fisttpl
imul
jmp
lea
dec
mov
and
pop
call
jle
mov
les
enter
stc
cmp
mov
jb
fisttpll
sti
mov
jne
sbb
repz
cs
inc
pop
inc
pushf
sbb
add
sub
xor
jle
gs
fistl
fld
push
mov
or
les
push
mov
mov
mov
sbb
cmp
push
mov
xor
sbb
push
test
sahf
jno
mov
add
ljmp
mov
mov
aas
inc
nop
mov
push
jne
jle
mov
mov
daa
imul
add
inc
cli
mov
btr
mov
pop
out
fstps
mov
pop
data16
and
aaa
popa
into
sti
test
add
dec
and
jle
mov
mov
in
scas
test
add
cli
adc
rorb
mov
std
int3
xchg
mov
mov
jg
clc
sbb
sbb
hlt
inc
dec
mov
out
or
aam
in
faddp
xchg
and
jmp
shrb
mov
outsb
dec
gs
icebp
jo
inc
and
jne
sub
testb
cmc
adc
call
fwait
out
jle
or
lcall
enter
shlb
pop
push
cmp
push
mov
adcl
iret
rorb
iret
xor
mov
xchg
ja
sahf
mov
lea
dec
and
out
rcl
push
mov
sub
adc
and
js
jecxz
icebp
call
pop
adc
jbe
or
ss
or
lods
scas
les
outsl
mov
inc
cmp
mov
jl
xchg
sub
cmp
je
adc
push
mov
loopew
rol
push
bound
pop
dec
sbb
daa
dec
or
shlb
out
lods
scas
xor
dec
loope
xorl
pusha
inc
jno
sbb
xchg
pop
jl
jmp
pop
push
cmp
xor
insl
popf
shlb
daa
aad
pop
adc
bnd
or
xor
jbe
mov
popf
dec
pop
add
or
and
inc
sub
mov
decb
ja
xchg
andb
lret
cli
pop
pop
dec
push
push
adc
cwtl
xchg
xor
das
adc
mov
ljmp
scas
sub
cmc
cmp
mov
xchg
data16
ficomps
enter
inc
mov
je
lock
mov
insb
in
push
inc
mov
xchg
or
scas
test
push
jge
sbb
and
xchg
cld
adc
sbb
sbb
mov
enter
fdiv
inc
add
repnz
dec
inc
pop
sbbl
lcall
pop
orl
push
jecxz
movsl
mov
and
jecxz
popa
sub
push
mov
adc
shl
mov
and
pusha
negb
sbb
adc
ljmp
push
mov
ss
add
sbb
inc
or
std
jmp
push
out
jl
addr16
cmp
sbb
jno
sub
inc
sbb
outsb
pusha
clc
pop
push
out
push
lods
add
mov
mov
bound
add
push
sahf
xchg
and
push
xor
enter
pop
test
mov
mov
inc
push
mov
fcomps
mov
fsubrs
in
out
fisubrs
adc
and
jg
sbb
xor
das
lcall
cs
cwtl
push
lock
jbe
inc
sub
sub
adc
mov
ds
mov
xchg
sbb
mov
sub
push
or
xor
add
mov
xchg
sub
add
jecxz
pop
out
sub
add
fnstcw
stos
jbe
adcl
test
cmp
jo
and
ret
in
cmp
das
xorb
insl
sbb
sbb
or
loope,pt
xchg
inc
lock
insb
or
and
inc
subb
sbb
addl
int3
ret
xor
pop
int3
sbb
and
gs
in
dec
stos
addb
pop
pusha
ds
mov
jecxz
push
sbb
cs
aam
xchg
push
mov
in
add
sbb
jecxz
fldt
lahf
lret
pop
aaa
sub
and
dec
xchg
pop
mov
das
push
xchg
mov
and
mov
pop
or
test
mov
jecxz
pop
fnop
add
imul
pop
aad
mov
out
icebp
inc
push
adc
adc
dec
lods
sub
std
mov
roll
push
pop
mov
sbb
scas
enter
add
jo
lcall
xlat
clc
std
sti
sub
jecxz
daa
mov
imul
ja
loop
cltd
inc
lcall
and
movsb
xchg
adc
insl
test
jl
push
mov
cli
js
out
add
stos
push
xlat
jp
or
sub
inc
xlat
mov
sbb
dec
jmp
or
and
jle
or
lock
cltd
jle
xchg
cli
sti
ficomps
insb
pop
xor
mov
aas
cmp
and
push
jne
test
mov
adc
sbb
lea
inc
pop
adc
sbb
mov
inc
mov
das
rclb
ret
lahf
mov
inc
jle
or
push
dec
adc
push
sbb
invd
sbb
inc
cmc
mov
mov
cmp
scas
lcall
mov
xor
adc
jge
pop
sahf
mov
icebp
cmc
jae
stos
adc
inc
dec
push
pop
dec
push
sbb
movsl
das
lcall
lret
push
inc
add
fldt
out
test
xor
xlat
sub
cwtl
shl
int3
push
pop
inc
pop
loope
sbb
mov
loopne
andl
dec
fsin
add
mov
cmp
mov
lret
cli
xor
js
sub
repnz
push
aas
fidivs
in
mov
pop
sbb
cld
negb
sub
pop
into
add
cmp
sbb
sbb
lahf
subl
pop
hlt
loopne
mov
dec
push
push
sub
mov
cmpsl
sbb
movsl
cs
pop
mov
pop
xchg
fisttps
mov
loop
jecxz
daa
sbb
outsb
jecxz
cmpb
push
pop
in
adc
dec
out
sbb
shlb
sbb
ds
pop
dec
es
clc
xchg
push
cmpsl
xor
cli
add
adc
stos
adc
movl
sub
xor
push
adc
mov
add
sub
mov
push
outsl
addl
ja
mov
std
in
enter
push
xchg
sbb
ja
outsb
push
mov
les
xchg
inc
inc
jae
lods
adcb
jg
cmp
out
clc
insb
push
or
mov
add
mov
loop
add
xor
pop
or
jg
add
popa
loop
xchg
fdecstp
cmp
bnd
add
sub
daa
loope
add
mov
ucomiss
imul
push
pop
or
sbb
sub
and
divb
mov
testl
mov
lds
in
mov
adc
push
cmp
out
lock
cmp
pmuludq
and
pop
jne
jg
push
xor
scas
mov
cli
mov
adc
int
ficomps
addl
test
sbb
pop
loope
pop
dec
inc
push
sbb
mov
push
cmp
aas
push
mov
inc
pop
and
int3
mov
int3
test
pop
xchg
push
mov
or
loope
shlb
bound
enter
cmpb
sbb
mov
pop
mov
dec
cmc
jmp
or
push
loopne
ja
dec
cmpsl
inc
test
jns
mov
icebp
or
mov
sub
daa
push
out
cmp
ljmp
sti
dec
lods
sar
dec
loop
pop
sbb
pop
inc
push
cwtl
or
inc
pop
jbe
arpl
mov
jecxz
dec
cpuid
ds
pop
mov
scas
xchg
aas
pop
adc
jle
push
rcr
dec
inc
cli
mov
jb
push
jg
xor
loopne
popf
popa
popf
inc
and
sbb
jecxz
lcall
sub
sub
clc
shll
mov
jnp
outsb
pusha
repz
inc
loope
mov
pusha
cli
adc
push
loop
adc
adc
mov
mov
xor
inc
scas
jns
in
jns
call
cmp
mov
push
or
mov
inc
jo
popf
loope
and
test
in
sub
fwait
call
rcrl
mov
fisttps
stos
lcall
mov
inc
movsl
add
iret
pop
imul
and
pop
cmp
cmp
xchg
or
jle
jbe
inc
jge
mov
jnp
sbb
mov
dec
fadds
inc
push
mov
adc
loopne
inc
push
adc
lahf
leave
movsl
sbb
bound
dec
jg
inc
fisttpl
xchg
jecxz
ja
mov
jle
sbb
mov
adc
sbb
inc
mov
inc
mov
hlt
repz
movsb
fildl
add
pop
inc
adc
and
lock
or
push
dec
jns
loop
int3
je
fimuls
dec
ficompl
push
push
jne
dec
mov
mov
imul
sbb
sbb
dec
dec
std
jl
pop
lods
sub
sbb
cmpsb
add
xchg
or
je
adcl
jle
mov
in
dec
push
hlt
gs
aas
fs
pop
pusha
mulps
sahf
dec
sbb
cmpb
ds
jo
rorl
repnz
mov
mov
imul
mov
push
or
mov
fwait
ja
cmp
jle
inc
or
adc
jp
loop
push
mov
and
lcall
popf
aaa
cmc
insl
jge
xchg
shrl
inc
pop
pushf
add
cmp
push
or
sbbl
adc
pop
movsl
fcomi
loopne
add
xor
pop
sbb
js
add
pop
xchg
cmpsl
sub
or
pop
das
loope
mov
push
fdivrp
neg
enter
cltd
ljmp
sub
sub
rorl
neg
iret
stos
das
ja
stc
lret
aaa
stos
xchg
jg
xor
inc
outsb
cmp
shll
test
mov
loope
je
push
cmc
loop
mov
sbb
in
mov
sub
pop
and
jp
add
inc
lcall
orl
bound
push
add
mov
mov
dec
add
ds
sub
shll
xchg
jnp
fcmovnb
mov
push
mov
jle
and
dec
pop
mov
cmc
fcom
cmc
stos
lods
sub
mov
mov
mov
mov
inc
lcall
sub
lahf
push
and
sbb
andb
mov
pop
add
adc
int3
sbb
lret
in
les
jo
jmp
ret
xor
or
push
jp
cmp
add
pop
push
sub
and
roll
push
fwait
xchg
sbb
push
dec
add
pop
shl
add
mov
lahf
cltd
sub
and
adcl
mov
dec
add
cmc
jbe
mov
inc
add
repz
lds
lret
pop
subb
and
sbb
sti
xchg
jno
lahf
sub
inc
jp
xor
aad
das
sbb
jb
or
add
jle
inc
sbb
test
push
pop
mull
mov
loope
dec
in
cmp
pop
xor
adc
mov
and
pop
mov
sbb
std
test
in
pop
jb
andl
mov
pop
sbbl
shll
sub
dec
mov
fisubl
sub
mov
xor
lock
xlat
aas
ja
test
bound
mov
fdivl
test
fnstsw
dec
jb
mov
dec
jp
bound
gs
push
es
int
cmp
pop
ficoml
out
mov
daa
test
mov
sub
or
xor
mov
inc
repz
or
add
imul
jne
xchg
jmp
sbb
jle
sub
fstpl
push
sub
dec
pop
pop
negb
and
jg
adc
push
outsb
cltd
leave
arpl
sub
das
jecxz
std
mov
call
jecxz
je
fisttpll
movsl
jp
das
push
or
adc
adc
in
and
sahf
in
popf
jle
inc
rcr
lea
ja
das
adc
xchg
push
insb
pop
loopne
or
leave
mov
loop
paddw
push
das
repnz
xchg
scas
adc
popf
outsb
movb
xchg
lods
movsl
mov
jb
sbb
jbe
stos
sbb
or
stos
add
dec
ja
pop
xchg
bound
mov
pmuludq
pop
loop
mov
sbb
jg
dec
sbb
lahf
test
inc
and
xor
dec
divl
lock
push
xor
ja
cld
mov
pop
int
and
mov
fsubrs
test
mov
mov
fnstsw
loope
mov
and
in
and
sub
inc
es
cld
adc
fisttpll
push
dec
fsubl
or
xor
push
mov
sub
xor
lcall
test
jecxz
mov
ss
lret
jmp
test
test
mov
scas
outsl
jle
test
xchg
scas
jb
inc
ljmp
ljmp
or
pop
dec
dec
cwtl
ss
sbb
adc
test
pop
enter
or
inc
outsb
or
add
cs
outsb
xchg
test
pop
adc
inc
loop
popf
push
out
mov
testl
bound
adc
and
add
dec
das
inc
test
daa
pushf
push
aas
sbb
ja
pop
xor
into
or
jecxz
hlt
cmpsb
fsubrs
outsb
dec
filds
scas
sub
jns
mov
insb
daa
pop
sub
pop
loop
pop
pop
sub
into
jg
inc
cs
sbb
cmp
sbb
adc
cmp
fsubrl
adc
clc
xor
in
or
jle
mov
or
movsb
loop
sarl
push
aas
loope
push
push
mov
add
in
push
mul
mov
jne
jle
mov
sub
loope
add
loopne
hlt
jecxz
jle
inc
adc
mov
add
jmp
fwait
sbb
sub
outsl
push
rorl
mov
adc
cmp
ficomps
mov
fisubrl
jecxz
cmc
sub
fdiv
adc
ss
xchg
mov
dec
inc
sbb
push
pop
add
jg
pop
mov
add
loope
ljmp
add
xor
xchg
jo
jle
xor
xchg
push
or
push
mov
xlat
push
ljmp
jo
out
jecxz
outsb
leave
dec
jge
pop
and
paddq
jo
add
repnz
add
lods
adc
or
pop
mov
scas
orl
inc
jge
test
push
stos
push
and
mov
xchg
sbb
mov
xor
mov
lods
enter
pusha
add
es
loop
adc
push
arpl
out
setne
push
add
repz
xchg
cvtps2pd
push
push
mov
jecxz
dec
add
add
cmpb
fwait
mov
les
cmovnp
pop
sub
in
cmp
push
fld
mov
push
add
pop
insl
fwait
loope,pt
mov
mov
xor
notl
dec
mov
out
pushf
mov
out
sbb
mov
dec
mov
lret
sbb
mov
push
push
sbb
or
xlat
push
das
mov
popf
ret
scas
or
movsl
mulb
cltd
out
mov
loopne
fildll
call
jmp
sub
imulb
pop
push
jb
push
into
hlt
jle
mov
mov
push
inc
mov
popf
and
js
sbb
cmpsl
sub
and
xor
jle
cld
or
cmc
sub
rcrb
ljmp
pop
in
dec
popa
out
xchg
inc
xor
xlat
dec
jg
sub
push
dec
or
bnd
jecxz
fs
mov
pop
adc
mov
jg
jne
xor
das
push
pusha
jns
rorb
adc
sbb
dec
or
add
mov
outsb
sub
adcl
clc
add
mov
adc
cli
jo
leave
dec
lcall
and
pop
mov
cmp
xor
dec
sbb
push
icebp
xchg
inc
cmpsb
leave
js
push
out
push
int3
hlt
ss
shll
fs
in
and
bound
push
andb
scas
lea
mov
jecxz
sti
ss
xchg
outsl
mov
rorb
dec
pop
sub
sbb
inc
xchg
sub
xor
add
mov
sbb
sbb
add
in
in
inc
push
mov
sbb
jg
mov
cli
lcall
xor
push
or
xchg
pushf
mov
add
fsubl
xchg
fsub
push
pushf
jecxz
ss
jo
jle
xchg
into
pop
and
push
subl
add
sub
jge
fdivp
xor
fcomi
mov
imull
cmp
enter
add
push
roll
pusha
inc
sbb
push
mov
aad
popf
movsl
push
jo
in
into
push
xchg
or
push
jne
mov
push
inc
insl
or
pop
push
adc
push
cli
inc
add
and
cli
sahf
cmp
and
ss
sarl
and
faddl
or
jl
jae
jbe
ds
sub
stc
loope
jne
fs
adc
sub
xor
mov
clc
andb
clc
add
add
sbb
loop
out
cli
cmp
adc
fcmovb
or
test
sub
dec
cli
mov
jle
sub
mov
xchg
ret
mov
mov
inc
loop
fxtract
xchg
pop
repz
in
sbbl
add
xchg
fimuls
rcrb
pop
test
and
and
sahf
mov
out
pushf
push
mov
cmpsb
cs
push
dec
call
xor
cmp
js
or
pop
push
lret
adc
roll
and
ljmp
test
inc
out
fdivl
test
jg
shll
sub
push
adc
pop
push
addb
xchg
inc
aaa
push
add
das
pop
jg
loopne
test
jb
in
mov
out
roll
std
adc
repnz
outsl
cmp
jl
mov
add
inc
ror
cli
push
into
mov
enter
fcomip
jns
jle
stos
test
cmp
and
inc
sbb
lock
scas
or
xchg
sbb
push
sub
adc
das
xor
loop
adcl
rolb
dec
xor
mov
repnz
and
negb
pop
sub
inc
addl
mov
lea
sub
pop
add
data16
jbe
daa
push
sub
jbe
xlat
sbb
aad
cmp
inc
cmp
into
cmpl
je
sub
pop
pop
pop
and
dec
xor
jbe
mov
hlt
push
xor
aad
sbb
int3
pop
xor
push
lret
das
jbe
jmp
scas
jmp
mov
jb
xchg
loop
cwtl
mov
inc
xchg
pusha
ljmp
cld
inc
popf
lret
sub
into
jbe
enter
adc
call
bnd
repnz
lds
lock
jae
ret
outsl
mul
shrl
test
adc
pushf
mov
aaa
sbb
xchg
mov
mov
mov
popa
lods
les
xchg
or
and
add
repnz
pop
call
lock
pop
int
scas
jg
and
mov
fisubs
jecxz
pop
es
orl
xorl
pop
enter
sbb
jmp
fidivl
sbb
jg
sbb
push
repnz
dec
or
dec
xchg
adcl
and
adc
xor
xchg
xchg
cmpsl
pop
jb
xlat
pop
xor
icebp
fdivs
jmp
jl
xor
outsb
jle
imul
adc
xor
ja
push
neg
xor
in
add
adc
cmpsb
test
lock
cmp
stos
ret
xor
mov
into
inc
cmpsb
sub
mov
jmp
inc
add
sbb
xor
je
cmc
nop
sahf
jmp
out
inc
js
jnp
inc
pop
ds
pop
xor
pop
pop
insb
add
loope
lahf
out
and
das
mov
std
rolb
mov
adc
shrl
cmp
cld
enter
jg
divl
inc
mov
mov
cmpsl
daa
loope
loope
add
jne
jbe
scas
and
pop
sbb
cld
hlt
cmp
add
mov
negb
out
pop
xor
pop
cld
in
pop
add
mov
sub
adc
or
negb
push
cs
mov
pop
inc
add
sub
pop
mov
add
fimull
xchg
lret
movsl
mov
sbb
pop
sbb
dec
xchg
std
fidivl
sub
lods
cmp
popf
jle
inc
mov
cmp
sub
dec
loop
jecxz
and
je
push
push
mov
loop
sbb
and
jo
and
fildl
sbb
xor
es
lret
mov
iret
cmp
dec
ret
adc
jg
fwait
jg
sub
xchg
jmp
mov
out
dec
test
fildl
cmc
push
mov
lods
cmc
shrl
sbb
pop
roll
or
xor
fwait
pop
mov
negl
loope
mov
cs
jbe
pop
subl
jbe
xorl
xchg
mov
mov
test
sbb
dec
xchg
shlb
dec
push
call
les
pop
sbb
popf
rol
loope
mov
mov
jo
sbb
jb
pop
loop
sbb
jecxz
adc
mov
push
mov
popl
loop
mov
jmp
xor
sbb
insl
xchg
add
cmp
outsb
daa
lcall
sbb
cltd
or
inc
pop
sub
sub
mov
call
cli
and
fdivl
mov
iret
push
lock
mov
mov
cmpsb
mov
jmp
jg
and
pop
loop
fwait
call
ret
pop
ja
mov
popa
adc
sub
ss
daa
fcomp
icebp
imul
scas
loopne
mov
daa
inc
ljmp
and
mov
insl
cld
in
xor
push
ds
cmpsl
sarl
pop
into
pusha
cmc
iret
pop
aas
inc
mov
insl
inc
adc
je
xor
xor
in
lret
pop
pop
pop
push
nop
inc
sub
sbb
sub
push
shrl
sbb
hlt
cmp
xor
cld
pop
popf
jecxz
inc
std
sbb
aaa
jb
sbb
push
shlb
xor
insl
bound
outsb
inc
fstpl
dec
pop
pop
loopne
pop
sbb
ret
pushl
or
cmpsl
mov
inc
cmc
xchg
or
lea
inc
loop
sar
xchg
add
lret
fidivl
inc
cmp
aaa
dec
imul
jbe
inc
adc
ljmp
into
inc
out
test
pop
inc
cmp
mov
xor
sub
pop
aaa
and
inc
push
fadds
xor
sbb
out
push
imulb
jle
fucomp
xchg
lahf
cli
pusha
and
jp
sub
fwait
loop
xchg
push
lea
pushf
dec
js
dec
or
loop
jp
scas
sti
scas
test
mov
das
xchg
inc
sub
or
cmp
mov
mov
jmp
ds
mov
andl
fnstsw
cmp
arpl
pop
cwtl
push
xorl
outsl
push
in
mov
mov
push
sbb
inc
xor
daa
push
push
pusha
insb
hlt
call
mov
jae
icebp
sub
loop
inc
add
cmc
loop
mov
fdivs
jnp
pop
or
xchg
pop
fwait
xor
xor
sbb
dec
cmpl
xchg
lcall
jl
lcall
xchg
add
cmpsl
inc
pop
iret
loope
add
cmpsb
pop
dec
cmpb
in
ja
fcmovnbe
pop
and
jo
or
lret
loopne
or
jo
stc
add
jg
xchg
pop
xor
adc
or
das
mov
loope
sub
dec
add
mov
stc
cld
adc
push
xor
das
fisttpl
movsl
movswl
xor
cmc
sbb
ja
aaa
inc
add
and
fimuls
pushl
test
xchg
cld
sbb
in
adc
test
mov
loop
fistpll
scas
cmp
cli
mov
push
mulb
loop
pop
imul
je
pop
inc
shlb
pushl
jg
dec
inc
dec
arpl
stos
loop
or
cmc
enter
negl
icebp
inc
outsl
cmp
add
add
push
jge
jp
mov
sub
sub
xor
notb
shll
jbe
add
xchg
mov
addb
ja
je
lret
sub
into
fwait
xchg
pop
push
pop
loop
mov
fdivs
stos
push
xchg
rcrb
dec
sbb
and
arpl
sarl
clc
dec
loop
cmp
in
xor
rolb
inc
out
fisttps
dec
xlat
or
lret
adc
mov
jmp
mov
pop
les
ficoms
fs
icebp
mov
adc
iret
stc
imul
dec
je
or
mov
ja
fsts
sbb
push
xor
push
lock
ret
aam
cs
adc
mov
popa
add
mov
push
sbb
nop
das
mov
adc
push
stc
mov
mov
mov
fbstp
sub
loopne
fcmove
push
pop
or
cmpsb
cs
into
mov
hlt
popf
bound
ja
dec
rorl
bound
mov
push
repnz
aas
mov
pop
xlat
insb
sub
xchg
bound
int3
cld
cld
push
fbld
loop
mov
notl
jp
add
bound
ret
adc
or
push
and
cmp
push
in
mov
push
adc
xor
add
mov
add
pop
jp
xchg
jmp
das
sbb
test
adc
outsb
movsb
sbb
jg
rcrb
pop
inc
or
std
pop
ss
jle
push
and
cmp
sbb
orl
adc
rcrl
pop
sahf
pop
mov
xchg
roll
jne
jl
inc
nop
and
pop
or
lret
pop
and
add
push
sbb
movsl
ret
sbb
out
adc
push
ljmp
add
xor
stos
mov
out
jae
popf
inc
iret
or
loope
jne
add
loop
bound
push
xor
call
and
push
inc
or
and
xchg
call
fiadds
pop
mov
xchg
mov
scas
mov
inc
sti
pop
in
jg
repnz
jno
test
or
je
mov
sbb
mov
mov
jno
jbe
clc
mov
into
outsb
movsl
clc
lea
mov
xor
jecxz
cwtl
adc
bound
sub
cmpsl
pop
testl
sbb
push
aam
and
in
xlat
cmp
sub
xor
imull
mov
jns
push
popf
jae,pn
inc
push
jo
sbb
cmc
sub
mov
cmp
int
dec
clc
loope
in
cltd
test
sub
sub
push
sbb
or
sub
pop
imul
loop
cmp
adc
or
push
int
add
cmp
aam
aaa
sarl
mov
inc
outsl
pop
aas
lea
test
outsb
inc
frstor
dec
add
and
sub
and
clc
fstpl
mull
sub
sub
pop
cmc
filds
int
pop
cmp
sub
mov
xor
sbb
test
popf
mov
xchg
add
pusha
and
mov
bound
mov
jge
ljmp
pop
fs
loop
pop
inc
xor
cmp
dec
cmp
and
cmp
mov
test
xor
pop
outsl
mov
scas
fucom
ret
or
inc
ss
fistl
or
data16
jmp
ret
sbb
lock
cmp
xor
jbe
call
inc
stos
sub
add
jne
notl
fmull
mov
add
dec
dec
stos
lahf
clc
aaa
iret
sbb
mov
stos
xor
sub
sbb
lods
and
cmp
and
or
add
xor
lock
adc
das
add
rcrb
push
and
into
add
pop
rcrl
pop
out
and
inc
jmp
add
mov
and
pop
xchg
add
cmp
adc
out
lahf
icebp
dec
sbb
lahf
data16
loope
jae
push
das
jp
xchg
push
sub
jge
push
test
out
push
cltd
pop
jle
push
xorl
ss
pop
mov
jl
lcall
push
and
bound
fcomip
sbb
xchg
jb
pop
mov
inc
lahf
sbb
jne
cli
pusha
inc
adc
sbb
add
ret
and
aam
push
and
bound
xor
jl
leave
xchg
or
ret
xchg
sbb
push
je
test
mov
out
mov
xlat
test
push
or
pusha
inc
add
stos
ds
lret
ja
pop
pop
in
stos
imul
pop
outsb
mov
lret
or
cmp
jbe
mov
mov
sbb
mul
repz
jae
mov
dec
sbb
sbb
pushf
add
mov
inc
mov
push
ja
pop
into
aas
lock
cld
push
mov
test
fists
sub
incb
adc
mov
das
cmpsl
stc
mov
mov
movl
mov
sbb
in
inc
ja
das
jecxz
push
jle
add
pop
or
sub
add
or
push
dec
or
lods
adc
xchg
dec
push
orb
dec
xchg
lret
ljmp
jg
mov
or
or
pop
cmp
jl
test
sub
push
push
mov
sbb
outsb
add
add
xor
and
mov
jp
lret
pop
or
mov
stos
movsl
and
mov
sbb
call
push
xchg
ss
adcl
ret
mov
lcall
push
and
or
cmp
cmp
outsb
jmpw
pop
dec
adc
xor
outsl
add
pop
inc
mov
dec
and
add
imul
pop
dec
dec
sub
mov
outsb
cwtl
add
sub
dec
ljmp
or
ds
dec
fwait
pop
cmp
inc
sub
xor
push
addl
mov
loopne
rolb
fwait
mov
test
inc
inc
ds
adc
add
push
repnz
mov
adc
ret
inc
mov
dec
mov
push
inc
cs
cmp
sbb
mov
out
fiadds
fwait
mov
cmpsb
dec
xchg
xchg
push
inc
inc
fwait
xor
sub
repnz
mov
sbb
into
cmpsb
inc
stos
fwait
subb
dec
fs
addl
cs
sub
sti
sub
fmuls
mov
mov
xchg
cmp
push
add
aam
loopne
outsb
and
ret
fwait
push
sub
orb
jl
xchg
sbb
lret
fwait
pusha
sub
dec
cld
or
sbb
xor
fwait
push
sub
jb
sbbl
fwait
ljmp
push
cmpl
dec
cs
inc
pusha
xchg
es
mov
sbb
cmp
add
sub
ss
inc
push
jp
mov
nop
inc
cmpsb
xor
sbb
sub
dec
fmulp
cmpl
sbbb
enter
loop
add
mov
fwait
mov
js
push
orl
lods
xchg
add
hlt
into
dec
in
rolb
nop
sub
pop
orl
sub
adc
cmp
fidivrs
sbb
jbe
adc
push
sbb
inc
ds
sub
adc
ror
or
jl,pn
insb
mov
push
add
cs
sbb
sub
dec
rol
xorl
sahf
fwait
mov
jle
outsb
pop
orl
cs
inc
add
sub
cmc
sbb
fwait
mov
fs
insb
push
addl
ds
and
cld
mov
call
mov
fwait
mov
jp
push
pop
orl
and
fwait
sbb
push
sub
mov
out
fiadds
scas
inc
lcall
ljmp
push
or
dec
push
cs
ret
fwait
shrb
into
mov
testb
add
sbb
sub
and
add
inc
ret
sub
or
adc
adc
push
inc
sbb
ret
or
mov
test
inc
test
stos
sub
test
push
push
sub
outsb
scas
adc
inc
test
fwait
add
add
or
and
xchg
push
mov
sbb
add
lds
sub
sbb
inc
and
add
add
mov
mov
sub
add
xchg
andl
out
fwait
clc
sbb
shrl
dec
sub
addl
outsb
inc
jb
mov
xchg
dec
mov
out
cs
push
lcall
addl
outsb
inc
jp
mov
pushf
dec
mov
shrb
inc
loop
sbb
sub
dec
xor
pusha
inc
jbe
cwtl
sub
sbb
testb
xchg
push
add
sbb
cs
inc
inc
stos
or
jae
inc
arpl
imul
outsl
cmp
pop
imul
sbb
adc
loope
out
xchg
mov
int
mov
jae
mov
inc
std
enter
xchg
cli
or
arpl
bound
cmp
inc
jg
adc
jae
imul
loopne
popa
cmp
fs
lahf
dec
bound
dec
hlt
xor
xor
cmp
jl
push
test
fs
js
enter
mov
jns
dec
and
je
mov
xor
pusha
adc
jle
jno
adc
pop
je
ljmp
xchg
xchg
xchg
lret
fs
pop
stos
scas
xchg
ljmp
pusha
lds
xchg
and
dec
adc
dec
gs
in
outsl
pop
cmp
arpl
das
and
and
inc
add
pop
mov
xchg
pop
bound
imul
ret
enter
mov
jo
sub
shrb
xchg
mov
mov
add
test
js
mov
mov
int3
dec
loopne
pop
inc
adc
and
or
inc
outsb
dec
mov
inc
imul
cwtl
cmp
pop
push
lret
outsb
gs
dec
mov
inc
jno
adc
outsl
sub
jge
jae
daa
insb
xchg
sbb
xchg
inc
test
jp
test
leave
jb
imul
icebp
cmp
dec
fs
aam
outsb
push
jno
pop
loop
mov
and
movsb
outsl
jns
incb
imul
mov
xchg
jmp
mov
pop
lahf
sahf
dec
sbb
sbb
mov
in
inc
imul
mov
inc
lea
mov
dec
pop
arpl
cmp
inc
enter
dec
push
jns
cmp
pop
xchg
xchg
ds
and
mov
fs
sahf
out
test
roll
dec
xchg
stos
mov
mov
imul
xchg
ss
pop
add
loope
sub
outsl
out
cli
jle
mov
mov
cs
pop
or
or
mov
sbb
adc
inc
ficomps
cs
imul
xor
inc
push
mov
jo
inc
pop
push
inc
adc
adc
sbb
sub
dec
mov
pop
jp
in
mov
jp
and
adc
rcll
lods
sbb
test
pop
add
and
and
inc
dec
inc
push
and
inc
arpl
mov
pop
negl
pop
jmp
add
xchg
push
jmp
data16
cld
mov
gs
pusha
add
stos
lret
xor
arpl
jns
jno
pop
pop
pusha
mov
pop
xor
test
stos
push
dec
jmp
int3
popa
mov
and
and
imul
gs
dec
shrl
push
xchg
pop
lcall
cmp
dec
pop
and
dec
push
sub
push
ds
push
test
pop
ror
sub
pusha
shrl
mov
jl
dec
inc
push
into
sahf
xchg
mov
push
dec
sarl
mov
jl
add
insb
arpl
lds
mov
ss
inc
inc
movsb
or
xchg
cmp
leave
nop
sub
outsl
mov
cs
and
fstps
jno
inc
imul
inc
dec
inc
fcoml
scas
pushf
dec
jne
push
outsl
jge
insb
sub
cmp
jno
aas
sahf
pop
push
addr16
and
push
mov
stos
pushf
sub
sub
shl
add
xorl
jae
addr16
pop
push
es
in
dec
ret
imul
jl
xor
ja
mov
pop
mov
arpl
pushf
jbe
imul
mov
xchg
imul
xchg
sbb
fwait
pop
inc
out
dec
or
adc
mov
sbb
mov
inc
out
jae
sub
jge
clc
dec
jb
push
jge
xor
mov
inc
ljmp
jge
das
sti
addr16
push
and
mov
outsb
mov
scas
pop
jns
push
jne
mov
xchg
arpl
or
dec
pop
orl
mov
xorb
sub
ret
add
sbb
adc
pop
cld
cltd
pop
and
sbb
sub
inc
cmp
inc
loopne
pushf
fdivl
adc
sbb
inc
sbb
sbb
ret
mov
mov
repnz
xlat
imul
adc
lret
xchg
or
jns
push
lret
pop
cmp
cs
jl
cs
call
xor
xor
sbb
mov
sbb
sbb
outsb
push
dec
adc
test
cmpsl
jb
loopne
lods
outsb
or
jle
insb
adc
imul
pop
xchg
pop
fs
cmpsb
inc
pop
data16
jle
dec
mov
cmc
insb
fadd
les
jns
sub
add
and
push
dec
movsb
imul
xor
mov
inc
pushf
xchg
xchg
xchg
out
lods
sub
and
mov
addr16
cli
ds
add
ds
push
xor
mov
insb
rclb
pop
mov
jle
inc
popf
xchg
sbb
inc
dec
mov
and
rclb
addr16
imul
and
push
jg
pop
xor
test
jp
rolb
dec
icebp
testl
sub
lcall
scas
das
pop
sbbb
mov
sbb
inc
imul
cltd
add
sbb
inc
add
push
sub
dec
jp
cwtl
sbb
dec
insw
dec
mov
scas
sub
gs
dec
sbb
pop
xor
xor
push
mov
push
mov
xchg
insb
inc
jg
jnp
lret
incl
inc
addl
dec
inc
sahf
bound
mov
pushf
xor
ljmp
popa
add
dec
jg
cmp
or
dec
lcall
bound
cmp
xor
pop
outsl
mov
subl
push
into
call
flds
cmp
inc
push
mov
pusha
mov
pop
cmp
movsb
mov
or
mov
adc
dec
jne
lods
add
xchg
in
outsl
mov
ret
pop
jnp
loope
das
push
pop
cmp
adc
insl
inc
scas
daa
sub
sbb
jle
mov
sahf
sub
sbb
pop
lock
fwait
les
iret
inc
sbb
ret
inc
mov
sbb
and
les
and
lret
mov
mov
and
ret
and
push
pop
aas
frstor
pop
dec
inc
mov
cmpsl
inc
xchg
arpl
minps
pop
popa
ret
cmc
ja
es
popa
sahf
sub
mov
movsl
sub
scas
jb,pn
adc
sbb
es
jne
push
out
ss
in
inc
int3
mov
sub
cmp
sbbl
imul
cli
dec
ds
or
pop
cmp
adc
and
push
scas
movsb
push
sbbl
stos
mov
popa
sub
mov
sub
inc
cs
inc
outsl
and
push
and
jg
inc
mov
testb
es
iret
stos
pop
push
or
adc
std
pop
cs
js
fs
inc
enter
xchg
mov
ret
or
sub
cmc
sbb
push
dec
jecxz
fsubr
jnp
mov
test
stc
clc
inc
pop
and
and
add
add
mov
add
and
jmp
insb
sbb
cmp
mov
xor
and
fadds
jo
sbb
and
sahf
repnz
dec
into
pop
testl
push
into
or
mov
inc
rorb
pop
rcr
cmp
lods
sahf
cmp
mov
sub
mov
mov
clc
xor
inc
jns
dec
daa
testl
inc
jne
nop
lcall
sbb
push
lock
stos
cs
mov
jp
repz
jl
mov
enter
ljmp
mov
std
sub
cmpsl
sbb
sbb
dec
push
dec
adcb
inc
jecxz
mov
mov
lret
lds
addr16
add
adc
sub
insb
jae
cli
addl
or
mov
sbb
daa
dec
cmp
insl
inc
subb
jg
mov
dec
popf
mov
in
inc
mov
out
sarb
cmpsb
imul
jle
addr16
dec
dec
and
jae
sbbl
jle
outsb
das
jl
leave
push
jb
xchg
adcl
cmp
pop
jle
sub
jp
pop
mov
xor
push
lods
xor
add
or
enter
jecxz
fsubs
insl
mov
mov
shr
push
adcb
fadds
rcrl
and
jg
mov
pop
adc
sub
sbb
lahf
cs
sbb
sbb
add
xlat
pop
sub
xor
and
sbb
ret
adc
pop
subl
push
cmp
pop
xchg
js
sahf
pop
pop
aas
push
xchg
das
daa
inc
pop
outsb
adc
ret
mov
in
mov
cmpsb
das
inc
sbb
inc
nop
and
pop
sbb
dec
addb
fisubs
inc
jle
push
pop
push
insl
ret
or
outsb
dec
sbb
aas
sub
mov
dec
imul
sti
gs
sahf
int3
pusha
clc
sbb
sbb
cltd
es
xor
call
mov
loop
lahf
inc
mov
js
mov
xchg
xchg
pop
sbb
inc
ret
mov
cmpsb
mov
jae
bound
in
mov
test
movsb
mov
cmpl
mov
fistpl
mov
or
lock
repz
repnz
jecxz
enter
dec
loope
testl
jo
mov
mov
dec
testl
pop
ret
popa
pop
jecxz
test
rcrb
insl
outsb
xor
add
daa
mov
push
movsb
out
sbb
test
mov
mov
inc
pop
xor
push
cwtl
inc
inc
fidivrl
repz
xchg
xor
sub
mov
and
cmp
inc
pop
sbb
push
inc
imul
repz
inc
aas
cld
jl
ficompl
int3
xor
pushf
dec
adc
jne
pop
dec
mov
sub
aas
mov
adc
and
out
cmp
sub
fs
lock
cs
scas
mov
push
inc
pushf
xchg
insb
into
out
pop
mov
cs
iret
pop
call
aaa
into
xchg
and
lret
dec
add
sti
dec
pop
arpl
jb
inc
jne
scas
jge
jecxz
lret
push
pusha
cmpsl
push
in
push
add
and
jp
jl
lcall
insb
out
sahf
jecxz
dec
jle
into
xchg
js
int3
shlb
cs
sbb
gs
push
fwait
or
add
cwtl
cld
sbb
jp
mull
mov
xchg
jp
pop
dec
stos
into
es
test
xchg
jae
popf
adc
scas
stc
pop
mov
test
sub
cmp
xchg
filds
pop
dec
or
mov
cs
pop
lret
xchg
adc
mov
insb
add
sub
xor
dec
xor
bound
lret
fwait
repnz
add
push
push
add
dec
gs
pop
mov
xchg
mov
xor
cmp
orb
movsl
ficompl
push
rcl
adc
push
sub
jns
popa
xor
inc
jb
sub
xor
loop
dec
add
sarb
xchg
and
mov
lcall
push
mov
sub
pop
jbe
push
mov
mov
iret
adcb
fisubrl
jp
jb
xor
bound
outsb
sarb
jmp
loop
adc
fidivl
or
loop
ficompl
out
sbb
loop
push
add
ret
jmp
ret
es
sub
push
xchg
inc
loop
divb
ret
jb
decl
mov
outsb
push
dec
mov
call
add
pop
scas
xor
cmp
enter
cmp
add
adcb
stos
js
push
push
sub
sub
xlat
jnp
cs
pop
rorb
imul
adc
mov
ret
mov
js
and
cmp
dec
loop
inc
push
dec
pop
xchg
bound
fisubrl
sub
inc
xor
sbb
sub
and
pop
cmpsb
xor
fnstenv
jb
adc
sahf
push
xor
add
mov
dec
mov
adcb
les
cwtl
fs
sbb
sbb
insl
or
pop
sub
lods
push
insb
or
lcall
sbb
jmp
je
rclb
out
sub
or
fimull
and
sbb
fldl2e
jne
stos
push
and
inc
mov
adc
nopl
dec
inc
sahf
lea
mov
and
mov
xchg
xchg
or
ret
push
mov
sti
rclb
inc
lea
jge
dec
ret
es
call
or
and
ret
add
ss
pop
fwait
mov
cmp
adc
or
fwait
shrb
ret
add
fcmovne
cs
cmpsb
add
adc
jae
sbb
or
pop
sti
add
or
sub
hlt
ss
ret
inc
sti
inc
jmp
jo
or
add
push
add
fisubl
and
push
fcmovne
sub
add
fiaddl
shrb
bound
sub
ficomps
mov
xor
sbb
outsl
adc
push
sub
adc
lods
inc
jb
scas
adc
or
ljmp
fstpl
sub
xor
fucom
add
js
mov
cli
fwait
sbb
sbb
fidivrl
xor
roll
fwait
xchg
ret
loop
sbb
adc
test
sub
in
rcll
cmc
outsl
mov
sub
loop
out
adc
adc
fsubrl
and
sbb
and
push
fsubrl
or
and
inc
cmp
lcall
inc
ret
inc
push
sub
repnz
and
sub
cmp
outsb
or
or
pop
lods
jnp
push
inc
push
sub
cs
test
mov
or
or
sahf
scas
adc
and
xchg
nop
lcall
sbb
xchg
or
pop
inc
dec
pop
xchg
gs
insb
push
loop
test
je
push
push
sbb
out
dec
dec
rolb
loopne
lea
push
adc
xchg
insb
adc
scas
sbb
sub
xchg
or
inc
push
sahf
pop
outsb
jno
xchg
inc
sbb
imul
sub
xor
pop
stos
stos
lcall
mov
ffree
adc
mov
push
jmp
into
scas
add
xor
sub
in
sbbb
insb
adc
dec
repz
pop
cmc
or
dec
jle
retw
jl
and
cmpsl
loop
dec
sbbb
outsl
pop
out
and
fwait
pop
add
jmp
cmp
jbe
adc
sbb
test
push
adc
adc
sahf
add
mov
jbe
mov
inc
jecxz
fisttpl
cmc
iret
add
into
add
sub
push
ss
cli
sti
jmp
or
mov
cmpsb
cli
das
or
fisubrl
or
mov
jge
ljmp
push
aas
or
arpl
add
push
sub
imul
mov
xchg
cmp
in
fsubs
xchg
jbe
jbe
inc
idivb
push
loope
test
cmp
lret
push
dec
pop
push
test
ret
add
test
add
ss
lea
scas
stos
out
mov
sub
lods
pop
aad
sbb
ljmp
xchg
mov
rclb
hlt
fwait
add
mov
push
mov
out
jp
jl
jb
dec
push
mov
xchg
add
js
lret
pusha
add
push
push
aam
repz
je
sahf
out
cmc
and
xlat
add
push
imul
xor
mov
sub
adc
js
pop
or
adc
add
inc
mov
push
fs
sub
mov
imul
jne
aas
mov
dec
in
fildll
push
mov
dec
jp
jp
outsl
fs
push
and
sub
dec
push
adc
dec
lahf
sbb
dec
or
dec
xor
imul
inc
add
xchg
push
pop
jae
aas
insl
cmp
jp
call
mov
lahf
dec
cmp
jg
jns
pop
pop
pop
arpl
push
push
orb
inc
xchg
sbb
or
sbb
dec
inc
push
lea
mov
xchg
xchg
dec
ds
fistpl
insl
jle
jg
jle
sub
scas
xor
test
mov
mov
outsb
and
add
jae
xchg
add
bound
inc
dec
daa
mov
fwait
pop
push
pop
inc
fiaddl
push
outsl
lods
je
arpl
fdivrs
sbb
and
push
dec
pop
sahf
jle,pt
rcrb
inc
dec
cmp
push
jns
loop
ljmp
out
adc
lcall
sahf
imul
outsl
bound
pop
push
jle
sarl
jbe
lods
hlt
out
inc
sbb
lock
testb
sub
cmp
jp
ds
mov
adc
mov
outsl
inc
in
pop
imul
xor
jmp
dec
sbb
ret
sub
inc
ljmp
sahf
pop
aam
lcall
into
sbb
push
adc
enter
inc
sbb
movsb
bound
jnp
lret
cmp
scas
adc
push
pusha
inc
ret
repz
push
scas
out
or
lcall
push
dec
or
outsb
adc
pop
mov
cmp
or
das
jns
push
and
push
adc
out
and
pop
inc
push
mov
fstps
pop
dec
inc
jae
jge
pop
dec
push
mov
or
daa
push
aam
imul
imul
pop
or
pushf
push
mov
mul
sbb
add
mov
push
clc
push
pushf
push
dec
cmpps
sbbb
inc
in
inc
divps
jns
mov
shll
jb
inc
jns
out
loop
xchg
mov
lret
push
push
push
fisubrs
jb
int
ret
clc
push
repz
push
mov
insl
ljmp
mov
xchg
pop
je
ficoml
out
or
ljmp
loop
jle
or
inc
adc
and
sub
pushf
add
jp
dec
sub
sbb
fnstenv
jg
xor
cs
push
scas
fcompl
in
adcb
pop
jp
insl
dec
push
gs
inc
es
pop
xchg
sahf
cwtl
jns
xchg
inc
out
jg
jle
mov
adc
and
loop
cmp
jns
push
inc
es
push
bound
addr16
jo
mov
pop
loopne
mov
jnp
push
dec
jbe
inc
ds
les
mov
xchg
inc
push
dec
xor
les
inc
push
rorb
xchg
jo
aas
sub
das
sbb
mov
pop
outsl
mov
dec
jle
and
sbb
sub
cwtl
bound
push
aad
sub
sbb
mov
inc
das
xchg
call
cmp
lds
push
sahf
push
inc
cmpsb
and
adc
sub
stos
icebp
aaa
mov
test
loopne
insl
inc
jg
movb
mov
xchg
pop
lock
inc
sub
and
sub
jnp
sbb
mov
sub
push
ss
inc
arpl
and
sub
bound
cwtl
jl
js
inc
mov
jmp
scas
sbb
int3
inc
test
shrb
mov
fs
or
inc
lock
lods
dec
adc
js
adc
push
data16
jb
jp
add
pop
gs
jle
jge
out
push
inc
arpl
jns
fbld
out
mov
imul
ja
std
mov
mov
push
cmp
sub
jp
sub
rol
inc
xor
js
mov
jg
sbb
adc
adc
push
sbb
add
iret
xchg
and
push
imul
xchg
jp
push
add
cli
pushf
and
adc
cli
rclb
adc
js
sti
bound
or
lahf
cmp
xchg
lret
arpl
out
xchg
cwtl
cs
stos
insl
gs
pop
mov
adc
scas
xchg
mov
cmpl
das
adc
add
rcrb
or
mov
adc
inc
add
push
inc
inc
or
pop
lcall
out
and
sbb
push
lret
sub
pop
xchg
call
enter
fwait
mov
clc
cs
mov
or
cmpsb
jp
mov
jle
dec
mov
test
sub
cmp
dec
stos
gs
cmp
outsl
gs
dec
mov
sub
adc
insb
or
out
push
test
add
loop
bound
lret
repz
fadd
mov
inc
dec
push
inc
insl
sub
jnp
rcrl
pop
pop
adc
cmp
push
push
ret
shlb
bound
dec
mov
jg
outsl
jae,pn
cli
push
sbb
sbbl
mov
ss
inc
and
orb
shl
sbb
les
cmp
inc
inc
into
xchg
sub
mov
and
adc
sahf
inc
cmpsb
cmp
cmp
push
dec
inc
sub
mov
in
mov
adc
sahf
lcall
xor
daa
push
movsb
pcmpeqw
fiaddl
add
cmp
inc
pop
inc
dec
jp
lahf
xchg
repnz
mov
sbb
fs
add
jl
jg
cli
dec
imull
jle
stc
mov
fstpt
lods
push
imul
sbb
cmpsl
inc
test
mov
jg
xchg
pop
sub
pop
and
pop
outsb
and
aaa
sahf
xor
insl
mov
call
mov
sbb
lcall
mov
insl
dec
pop
daa
push
adc
push
gs
jne
inc
arpl
loopne
imul
shlb
push
cmp
fwait
xchg
or
loopne
or
add
test
add
cld
xor
scas
xor
dec
push
sbb
pop
ja
out
addr16
data16
seta
sub
movsl
shrl
sbb
jb
push
pop
dec
pop
js
inc
inc
and
in
cmp
les
clc
dec
movsl
bound
fsts
mov
lods
mov
ret
adc
mov
into
jo
ret
dec
inc
pop
pop
inc
and
mov
inc
inc
xchg
xor
mov
xor
insb
pushf
bound
pop
sub
add
push
sub
rorl
cmp
sub
jl
jns
fwait
mov
shll
pop
icebp
pop
nop
inc
adc
les
jbe
stos
mov
loop
out
xor
popf
jae
inc
dec
cs
dec
push
sbb
and
mov
dec
sbb
cmp
cmp
je
pop
je
xor
testl
stos
pop
inc
out
mov
sbb
lods
nop
or
pusha
push
jl
ret
popf
cmc
ds
push
outsb
inc
sbbb
and
jae
orb
adc
insl
mov
sbb
mov
fisttpll
sub
cmpsb
aaa
sub
shrl
xchg
inc
repnz
scas
pop
aam
mov
push
xchg
dec
movsb
mov
ds
sub
sub
xchg
loop
pop
mov
xchg
jns
stos
rcrb
cmpsb
push
inc
add
or
jb
inc
repnz
dec
or
nop
mov
push
stc
cmp
sbb
imul
test
jg
mov
inc
push
test
imul
push
jb
and
ja
cmp
push
popa
fists
fs
pop
fstpl
in
femms
push
repnz
push
jecxz
call
lods
es
sub
mov
add
mov
lock
gs
arpl
pop
out
pop
sub
sbb
sbb
sbb
in
and
jo
aas
and
or
pop
pop
inc
dec
into
inc
push
fs
shlb
in
test
inc
dec
icebp
out
pop
or
js
sub
inc
cs
out
sub
icebp
test
stc
pop
imul
and
adc
pop
sub
dec
repnz
cmpsb
sbb
arpl
add
cs
inc
cmp
mov
push
repz
inc
push
js
adc
lahf
into
mov
mov
mov
ret
mov
push
push
sub
repnz
or
test
push
inc
inc
fldcw
or
mov
dec
into
repnz
fidivl
jp
adc
mov
inc
shll
cli
fsubr
sar
jp
add
push
and
push
jmp
mov
inc
xchg
sub
mov
test
hlt
sbb
dec
dec
xchg
cmp
adc
aas
and
cmp
and
fldt
ret
repnz
outsb
dec
outsb
pop
push
dec
push
lds
sbb
call
ret
inc
push
cmp
repnz
js
lcall
dec
or
dec
sbb
add
push
test
cmp
dec
inc
add
jmp
or
and
insl
xchg
jnp
or
sbb
push
fistpl
jb
adc
lods
inc
dec
and
adcb
addb
jb
rcrl
bound
jns
xchg
mov
jae
out
fcmovb
xchg
daa
hlt
call
or
incb
lea
or
sub
out
add
fidivrs
in
les
outsl
ret
dec
stos
push
add
lea
add
filds
or
push
orl
add
outsb
sbb
fcomps
lahf
xor
cmpsb
call
adc
mov
mov
dec
push
lcall
pop
sbb
sbb
fimuls
andb
inc
ror
or
add
cmpsb
pop
push
push
push
or
cli
mov
mov
fwait
sbb
sub
sbb
dec
sbb
fwait
sbb
push
sub
dec
mov
imul
adc
negb
inc
pop
out
jae
sbb
movb
ret
dec
mov
sbbl
call
pusha
push
into
or
push
or
push
iret
cmp
sbb
sbb
ss
xchg
outsb
inc
xchg
dec
push
sbb
adc
xor
inc
sbb
dec
dec
and
sahf
pop
adc
pop
add
cmp
xchg
jbe
inc
adc
out
jp
push
dec
js
or
lahf
mov
mov
sub
fwait
andl
xchg
xchg
sbb
jp
lods
and
ret
adc
scas
js
pushf
bound
insl
jae
in
into
inc
addr16
push
daa
xor
mov
or
adc
jb
popf
inc
mov
sbb
push
cmp
inc
cs
icebp
mov
xor
fwait
or
mov
cmpsb
cwtl
or
cmp
jp
inc
mov
jmp
fwait
sbb
sub
dec
or
or
or
or
or
push
sub
push
add
xchg
fwait
sbb
js
push
pop
pop
sub
clc
add
xor
add
bound
push
and
dec
cmp
inc
add
adc
pop
repz
dec
ret
fwait
push
sub
dec
jp
addl
jb
mov
jae
fidivl
loop
ja
movsl
into
mov
cmp
sbb
fwait
inc
sbb
sub
lcall
fdivs
lcall
fwait
lret
dec
rolb
cli
sbb
int
or
sbb
pop
sbbl
bound
push
push
push
aaa
into
xchg
ret
xchg
mov
ja,pn
ljmp
sbb
or
and
fwait
dec
sub
dec
push
add
sbb
subb
inc
stos
fwait
sbb
mov
sbb
sbbl
loop
pop
divb
adc
push
cmp
fwait
inc
sub
jb
push
or
inc
mov
dec
adc
cli
sub
push
add
fwait
sub
jo
xor
pop
pop
jb
inc
xchg
or
movsl
cmpl
xchg
call
adc
ret
ljmp
dec
sbb
add
fwait
and
pop
dec
dec
adc
jp,pn
xor
dec
stos
js
or
jb,pn
loop
jae
dec
add
adcl
dec
or
cmp
dec
inc
inc
mov
push
inc
sbb
inc
inc
lcall
lret
sbb
cs
inc
cli
fwait
inc
sbb
add
pop
xorl
pop
cs
inc
pop
fwait
bound
pop
icebp
sbb
xchg
inc
pop
fwait
mov
push
sub
push
cs
push
xchg
sbb
push
and
push
inc
push
fwait
push
sub
push
addb
inc
mov
push
loop
bound
fwait
adc
pusha
dec
cmp
inc
sbb
push
addr16
jb
fs
lcall
lret
fwait
shrb
jns
cli
jle
add
mov
sub
jl
xor
jb
xorl
fwait
jo
xchg
dec
jno
xorl
ja,pn
ljmp
push
sub
sbb
cwtl
or
dec
sbb
mov
sub
sbb
mov
out
mov
ficompl
mov
loop
dec
lret
push
or
adc
fwait
cmp
popa
dec
inc
subw
jb,pn
and
pushf
outsb
lcall
or
shrb
rolb
fwait
cli
sub
sub
pop
dec
xlat
sub
call
sub
lcall
xchg
and
cmpsb
add
repz
leave
mov
sub
repz
ret
sub
sbb
adc
xor
inc
adc
out
jb
sub
mov
loop
dec
sar
loop
lcall
adc
out
inc
xor
add
cmp
adc
in
not
out
loop
sub
repnz
into
adc
add
push
clc
bound
out
xchg
xor
add
add
repnz
add
add
and
xor
out
bound
add
mov
dec
clc
rclb
call
adc
and
inc
repz
add
jb
adcb
out
mov
je
out
shlb
add
sub
repz
inc
clc
push
adc
out
xorb
ret
testl
addb
jbe
adc
and
out
push
xor
add
xchg
clc
mov
lock
out
repnz
adc
xor
inc
add
clc
jb
lcall
xor
xor
add
add
adc
xor
inc
adc
out
jb
sub
mov
loop
dec
sar
loop
lcall
adc
out
inc
xor
add
cmp
adc
in
not
out
loop
sub
repnz
into
adc
aam
add
je
push
mov
xchg
mov
cmpsb
cli
push
cmpsl
test
lret
add
cli
dec
sbb
adcb
inc
xchg
sbb
add
cli
ret
add
dec
sbb
jmp
mov
sbb
mov
ret
mov
or
sbb
rcrb
add
scas
push
or
push
fdivl
pop
leave
popl
mov
sbb
or
sub
sbb
cli
stos
test
xor
push
lcall
lea
repnz
mov
bound
sub
sub
lret
iret
ret
cmpsb
dec
adc
jle
push
xor
daa
pop
cmp
lcall
sub
pop
sbb
and
sbb
push
sete
pop
negl
adc
sub
sub
bound
push
and
sub
pop
sub
pop
scas
cmp
inc
or
mov
pop
add
int3
mov
ljmp
or
push
push
push
fiaddl
push
sti
testb
or
inc
mov
sbb
push
sbb
inc
stos
lea
dec
mov
push
in
pop
je
dec
jbe
mov
pop
lea
push
sub
pushf
jb
mov
divb
dec
add
test
decb
push
jo
mov
xor
mov
dec
or
adc
dec
adc
lret
dec
out
and
jmp
cld
dec
mov
mov
out
mov
mov
sub
loopne
test
inc
stos
push
add
and
cli
test
enter
xor
inc
xchg
and
inc
cmp
mov
mov
bound
push
sub
into
push
filds
js
push
ret
stos
or
push
xor
mov
adc
xchg
pop
es
mov
push
fmuls
aaa
lret
add
adc
xor
dec
dec
mov
add
jp
push
adc
sub
sub
or
stos
lret
sub
or
xor
sbb
into
dec
add
jp
stos
inc
mov
sbb
out
pop
and
push
push
or
push
sub
push
lea
subb
jbe
es
cmpl
dec
jg
cltd
stos
dec
xchg
nop
dec
push
mov
cli
adc
imul
mov
push
lret
sbb
push
sahf
mov
orb
pop
or
int3
push
arpl
sub
enter
dec
sub
sub
leave
outsb
and
xchg
sub
nop
mov
lods
mov
les
mov
mov
pushf
sbb
dec
lahf
lret
mov
xchg
and
stos
jmp
dec
call
cli
cmp
test
pusha
adc
cmp
ss
mov
sub
sbb
pushf
or
push
or
out
sbb
xchg
mov
sbb
mov
mov
cli
xchg
mov
cli
ret
add
test
stos
cli
sub
add
cli
jp
test
outsb
cli
mov
cmp
into
bound
push
push
push
stos
icebp
pop
lret
push
sub
fsubl
outsl
add
dec
movsl
add
pop
pop
rolb
ss
or
sbb
and
imul
outsb
ljmp
outsl
sbb
jl
ds
ret
pcmpgtw
aas
mov
in
add
pop
or
cmp
pop
arpl
fwait
hlt
pop
inc
dec
sarl
jns
and
aaa
push
loop
mov
sub
stc
arpl
jb
mov
lret
add
arpl
xor
pop
sub
mov
pop
push
movsb
xchg
xor
in
test
in
test
push
dec
jb
outsl
mov
push
pop
sub
fistps
inc
mov
es
sbb
es
aam
cs
fdivl
hlt
je
pop
mov
push
dec
mov
xor
jg
rolb
xchg
outsl
add
adc
roll
xor
enter
imul
adc
inc
push
inc
sbb
js
cmp
sub
adc
pop
mov
and
xchg
je
jb
ret
mov
add
or
pop
into
inc
ret
insb
adc
mov
cwtl
enter
jle
mov
sbb
and
mov
and
jno
les
mov
lock
mov
pop
rclb
sub
inc
out
dec
aaa
cmp
inc
and
cmp
inc
push
push
pop
movsl
shl
pop
add
sbb
jg
pushf
jg
stos
jbe
jnp
sub
and
cmp
jge
sub
mov
jmp
lods
and
out
xchg
andl
mov
js
push
mov
jle
mov
and
int3
sbb
cmpsb
lcall
push
subb
pop
dec
shlb
cltd
mov
sub
mov
cli
inc
pop
and
sbb
arpl
sahf
inc
pop
mov
inc
repnz
dec
xchg
sbb
dec
dec
sub
popf
nop
scas
sub
and
repnz
shlb
ror
mov
inc
cwtl
jns
inc
mov
data16
lods
repnz
jno
cltd
addr16
ret
cmp
inc
arpl
cmp
gs
push
cmp
push
inc
adc
and
jecxz
or
sbb
pop
push
jnp
push
push
sbb
cmp
add
adc
xchg
pop
or
mov
or
rorb
sbb
add
or
or
sbb
add
andb
dec
jge
jb
icebp
cwtl
cmc
pushf
or
push
push
orb
lock
lret
push
or
xchg
add
mov
mov
mov
sbb
int
push
dec
push
push
sbb
cmp
inc
add
test
nop/reserved
mov
rcll
sub
and
push
dec
in
adc
mov
mov
daa
push
xchg
pop
jle
sub
and
cmp
sbb
lcall
jle
adc
jae
js
push
and
mov
nop
lret
cmp
popf
repnz
sarl
inc
out
mov
popf
andl
or
ss
fimull
and
fldenv
cmpsl
adc
jb
or
add
sbb
sub
cmp
std
idivl
push
ljmp
dec
gs
sub
fcomps
push
in
push
test
sub
xorb
cld
fsubl
jb
sarl
stos
outsb
pop
jb
es
push
add
mov
xor
pop
sbb
lcall
icebp
fimull
mov
insb
fdivl
sahf
jle
gs
mov
int
mov
or
cs
hlt
in
push
es
inc
int
rolb
es
dec
or
xor
bound
loop
outsl
or
pushf
push
mov
push
js
push
popfw
mov
pop
insl
mov
ds
or
sbb
adc
mov
int
sub
lcall
inc
outsl
xchg
pop
adc
sub
sahf
pop
fsubl
inc
mov
sub
sub
pop
pop
pop
repz
push
lds
in
fs
cmpsb
insl
push
push
sets
add
cmpsb
outsb
dec
pop
jl
rolb
add
fs
xor
pop
sbb
jbe
ljmp
and
and
mov
pop
scas
sbb
push
and
xor
mov
dec
js
push
pop
shl
sub
test
outsb
sub
rorb
mov
or
icebp
xor
fiaddl
out
das
inc
data16
jo
jp
dec
jae
jae
mov
or
jo
mov
sti
dec
fstl
xchg
fsubs
sbb
cli
pop
or
dec
mov
pop
dec
cld
mov
pop
push
and
cli
orl
fmull
popf
push
ret
mov
xchg
loop
mov
push
mov
fisubrl
adcl
xchg
xor
jle
jp
pop
cmc
jge
mov
clc
jge
sbb
jo
and
sbb
sbb
lea
bound
sbb
loopne
stc
or
mov
dec
lret
xor
mov
scas
xor
push
jp
push
xchg
jmp
rcl
xor
in
push
outsb
mov
mov
push
jle
add
ljmp
popa
jae
popa
psraw
adc
shll
mov
cmpsl
lret
ljmp
mov
out
movsl
aaa
test
pop
fdivl
adc
cmpsb
jle
inc
add
fdivs
cmp
sbb
or
dec
xchg
fadd
jge
pop
nop
jne
sbb
jb
inc
pop
cmp
or
ss
dec
jne
lret
out
cld
adc
sbb
sbb
sbb
dec
fldl2t
popa
shr
ss
sbb
push
dec
scas
ds
sbb
mov
clc
dec
sub
mov
pop
add
adc
loop
test
or
add
mov
cwtl
mov
lea
mov
push
and
add
sbb
gs
fildll
or
cli
fdivrl
add
sbb
cwtl
mov
add
cmp
and
push
lret
xchg
xor
mov
xchg
jbe
or
imul
sbb
and
mov
lds
xchg
add
inc
jge
lock
xchg
faddl
out
sub
mov
jge
sbb
test
jmp
jne
cmp
shll
sub
dec
xchg
mov
stos
aas
or
mov
sbb
cli
sahf
add
jb
jp
jns
mov
pop
rclb
pop
dec
xchg
dec
cmp
sbb
add
add
jne
adc
cmpsl
inc
push
imul
or
sub
sbb
arpl
imul
sbb
push
scas
aad
testb
or
test
repnz
xchg
add
adc
push
sbb
cmp
lds
pop
jae
inc
or
mov
leave
xchg
movsb
dec
sti
test
jbe
push
sub
icebp
sti
aaa
add
cmp
mov
sbb
sbb
aas
xor
addr16
adc
mov
push
push
push
aaa
icebp
add
pop
jmp
inc
je
mov
pop
pop
aas
fnstenv
xor
inc
pop
inc
cmp
add
repz
or
xchg
inc
pop
adc
or
dec
add
dec
xor
cmp
loope
rclb
bound
in
push
lcall
popf
nop
sbb
clc
push
inc
jg
sbb
pop
repz
or
sbb
pop
or
fsubl
loope
nop
xchg
sahf
jnp
adc
outsb
subb
push
ja
push
fdivrl
and
out
or
mov
incl
stc
pop
jp
jo
xchg
stos
sbb
stos
xor
test
test
lea
cmpsl
sub
fistpl
mov
ljmp
jmp
push
loope
xorb
push
lods
and
sub
push
repnz
mov
pop
repz
add
repz
or
sbbb
idivb
sbb
sbb
or
pop
xlat
sbb
cmp
sbb
in
sub
push
pop
jbe
mov
test
cs
cli
or
repnz
test
lcall
xchg
fmul
sbb
inc
xchg
pop
and
ss
jo
push
push
lock
jns
or
dec
inc
data16
jbe
jne
outsl
sbb
jb
add
push
mov
jecxz
icebp
inc
push
ljmp
divb
insb
jb
cmp
push
sbb
xchg
or
or
inc
xor
sub
pop
outsb
outsb
xor
clc
jp
rorb
add
cmpsl
inc
dec
ljmp
add
das
add
ret
sbb
pop
push
adc
and
push
cmp
hlt
adc
adc
int3
adc
pop
jne
xor
and
push
add
sahf
inc
mov
scas
notb
fimull
cli
mov
fisubl
add
filds
inc
cs
lret
mov
dec
and
dec
cmp
testb
add
add
push
and
pop
call
adc
fnsave
sub
jle
or
add
test
or
pop
lret
push
fcompl
push
dec
xor
push
sub
sub
sbb
repnz
dec
bound
stc
dec
xor
lcall
push
jp
inc
sysexit
dec
jmp
testb
dec
hlt
sub
add
insl
icebp
mov
adc
shlb
cmp
dec
call
jp
xchg
xor
test
push
dec
sbb
jns
adc
sti
repz
or
or
pop
outsl
dec
pop
add
push
add
sub
add
test
add
inc
mov
cmp
test
sbbb
adc
xor
add
and
test
sub
mov
inc
pop
clc
push
cmpsl
lret
insb
int
movb
stos
add
inc
adc
add
pop
cli
push
insb
or
sti
add
add
mov
pop
xchg
add
insb
loopne
cltd
cmp
inc
mov
dec
add
es
loop
outsl
push
push
adc
adc
xchg
or
cmp
sub
push
push
mov
test
xchg
aaa
push
inc
dec
mov
jno
cmp
insb
addr16
sub
add
aad
insl
cmpsb
cmp
push
loop
fidivrl
pop
cmp
fidivs
xchg
outsb
pop
add
cmc
les
lods
loopne
cmp
add
es
or
mov
or
adc
imul
sub
mov
mov
add
inc
outsl
push
cli
jb
idiv
xchg
aam
sbb
fs
sbb
outsb
add
dec
add
cmp
dec
or
or
cli
outsb
pop
dec
mov
pop
add
out
mov
mov
or
adcl
in
jl
hlt
loop
aaa
sub
jle
stos
jp
mov
dec
mov
mov
sub
mov
test
stos
test
push
xorb
pushf
aad
sbb
imul
pop
sub
sub
inc
adc
add
pop
xchg
and
mov
xor
xchg
push
adc
add
test
sbb
add
imul
and
add
outsb
add
filds
subl
pop
mov
adc
adc
stos
aad
loope
pop
mov
pop
xchg
push
sbb
push
dec
dec
out
sub
and
popa
mov
insl
add
cmp
lods
sbb
insl
in
nop
sub
rorl
mov
fwait
cs
xchg
xor
jne
jl
rorb
or
xor
mov
pop
add
arpl
pop
adc
dec
mov
pop
xor
dec
lea
sub
bound
xchg
dec
mov
mov
xchg
rolb
mov
imul
subb
test
bound
mov
insb
mov
loope
repz
cmp
add
dec
mov
movl
stos
lods
outsb
setge
add
inc
addl
sub
mov
mov
sbb
xchg
sbb
out
sahf
dec
mov
add
scas
ljmp
or
cld
inc
divb
push
cmp
add
jns
insb
mov
sbb
push
mov
sub
dec
sbb
cmpb
insb
mov
out
xchg
adc
pop
gs
mov
in
sarb
sbb
mov
call
insb
cmpsb
fs
mov
bound
mov
xor
dec
sub
inc
inc
push
repz
popa
dec
aad
xor
ljmp
aam
data16
or
call
sbb
pop
add
stc
jl
dec
cs
bound
aaa
pop
cmp
aam
pop
xchg
jle
sbb
sbb
xchg
lcall
push
adc
xor
cltd
sbb
test
sbb
stc
push
enter
jge
and
or
push
orl
dec
repz
add
xchg
sub
or
test
add
cmp
or
sbb
add
adc
scas
cmp
sbb
cmc
adc
sbb
test
sahf
mov
xchg
xchg
adc
push
cmp
cmp
ja
repz
xchg
adc
add
incl
add
scas
push
insb
rcrl
add
jp
les
or
jae
cmp
add
add
fisubl
sbb
jecxz
pop
mov
add
or
mov
or
sbb
sub
insl
or
js
shr
or
cli
and
dec
cli
pop
lods
mov
cmovle
mov
jp
pop
mov
hlt
push
dec
or
mov
mov
lods
add
mov
or
fwait
jne
ljmp
xchg
adc
sub
mov
add
addl
sub
dec
mov
add
xchg
add
repz
ret
sbb
pushf
pushf
int3
sbb
icebp
pop
mov
imul
testb
sub
or
pop
mov
jle
add
repnz
pop
jle,pn
scas
adc
add
xchg
scas
cs
mov
bound
dec
fdivs
in
xchg
pop
add
mov
sub
xchg
pushf
or
out
mov
and
jle
or
or
dec
sbb
sub
dec
pushf
gs
test
pushf
orb
mov
pop
nop
sub
fsubrp
add
xor
mov
fsubrs
jecxz
sbbb
pmulhuw
lods
scas
loopne
or
push
rol
add
push
sbb
dec
xor
sbb
bound
test
push
push
xchg
pop
xor
or
movsb
xchg
push
inc
add
sub
adc
xchg
ret
adc
dec
or
repnz
fcomps
and
lcall
sbb
rorw
dec
fmuls
loop
inc
sbb
pop
fadds
faddl
adc
mov
stos
stos
fiaddl
stos
cli
pushf
in
je
xor
andl
iret
cmp
sub
sbb
pop
xchg
cmp
jle
and
mov
mov
sbb
add
ret
push
pushf
incb
outsb
and
fdivs
xor
fwait
mov
dec
std
adc
icebp
sub
sbb
push
decl
mov
and
and
xor
add
xor
mov
or
jle
sbb
mov
cmc
in
addb
cmp
xchg
push
nop
cwtl
jle
jne
push
orb
push
lods
stos
xchg
sub
sub
stos
jb
lcallw
add
fsubrs
mov
ret
add
inc
test
xor
dec
push
ficompl
pop
dec
jecxz
movb
repnz
cmp
sub
xchg
scas
mov
lcall
lahf
add
aaa
add
rol
test
sbb
xor
jl
insb
or
lods
into
add
hlt
push
inc
das
or
into
push
add
js
or
add
scas
mov
pusha
stos
xchg
xor
enter
mov
stos
int3
and
in
inc
mov
fsubrs
dec
shrl
adc
fldcw
add
dec
push
mov
add
bound
inc
or
loop
icebp
or
mov
lcall
lret
push
inc
or
fsubrp
mov
imul
push
pushf
js
pushf
mov
dec
pop
mov
cwtl
pusha
sbb
jmp
insb
xchg
dec
or
frstor
add
push
scas
adc
fildl
outsb
fisttpl
and
std
push
scas
mov
orb
outsb
or
jbe
sti
cmp
inc
rcrb
dec
inc
mov
gs
ljmp
adc
dec
sbb
and
add
mov
in
xchg
sbb
dec
add
add
out
push
mov
or
jns
adc
cmp
test
mov
sbb
adc
dec
pushw
xor
enter
cli
out
and
jbe
loopne
sub
add
pop
lahf
sbb
pop
inc
ficomps
insb
ss
outsl
inc
jle
cmp
push
sarb
insl
or
pop
add
dec
push
pop
mov
sbb
mov
rolb
xchg
mov
adc
mov
popa
push
adc
ror
pop
or
out
jnp
fists
arpl
add
mov
cmpsb
or
adc
cmp
sbb
mov
mov
aaa
cmc
sti
sub
ja
push
push
pushf
ja
push
fdivl
add
xchg
add
jle
inc
js
sahf
sbb
dec
jb
mov
mov
js
ret
cmp
inc
add
add
push
mov
cli
loope
add
mov
mov
sbb
loopne
cwtl
pop
push
xor
dec
sub
jp
or
add
je
inc
cmpsl
imul
cli
mov
mov
mov
ret
aaa
push
lret
inc
or
mov
and
xchg
ds
or
jg
in
adc
and
sbb
mov
pop
push
icebp
mov
inc
xor
std
lea
add
pop
jp
test
cli
lcall
jne
add
fsubs
mov
enter
scas
cmp
sbb
lret
stos
enter
push
push
jne
cmp
mov
fbstp
movsb
je
push
jb
inc
in
lret
addr16
add
mov
push
push
ficompl
shl
sti
lcall
lcall
mov
fwait
jp
sbb
add
mov
jne
cmc
xchg
sbb
inc
jl
push
fdivrp
jp
mov
push
or
dec
and
sbb
pop
cmp
test
inc
add
sub
and
hlt
inc
sbb
mov
mov
and
mov
adc
pop
outsl
and
add
loop
mov
sahf
test
push
mov
sbb
mov
or
fisttps
xchg
adc
cmp
push
lock
inc
pop
mov
outsl
mov
lock
dec
sub
fs
cmp
cmc
cmp
jp
jle
cmp
leave
inc
sub
push
orl
xchg
push
or
mov
jb
mov
insl
shlb
xor
outsb
bndldx
incb
rcrl
push
adc
and
push
push
pop
push
mov
or
inc
xor
push
das
sub
out
add
dec
push
pop
adc
jge
jmp
roll
test
push
pusha
outsb
and
nop
jp
rcrb
add
jg
adc
mov
adc
or
xchg
call
jl
and
or
push
fildl
cmc
sub
cs
mov
add
outsl
mov
mov
xor
push
jecxz
jbe
add
inc
dec
sbb
inc
and
xchg
fdivl
jmp
push
scas
and
cmpsb
pop
mov
sbb
or
or
cs
into
mov
pusha
jbe
cli
add
dec
aam
add
cltd
sbb
inc
aad
adcb
push
loopne
jns
adc
sahf
sbb
cli
icebp
scas
pop
dec
dec
bound
bound
jle
repnz
push
mov
jle
lahf
xor
lcall
pusha
add
push
fisubl
mov
add
xchg
push
dec
jae
push
mov
mov
lea
in
das
enter
sub
stos
cli
inc
cmc
ret
movsb
adc
aas
mov
dec
scas
pusha
loop
add
push
aas
xchg
scas
push
ret
add
and
sub
inc
pop
xor
pop
out
test
dec
mov
stc
daa
jle
pop
pop
and
inc
shrb
mov
jne
pcmpeqb
sub
jb
jp
inc
cmp
add
adc
cli
mov
add
inc
add
sbb
add
arpl
dec
jg
icebp
sub
clc
push
fs
sti
xchg
cli
add
scas
fwait
clc
std
sbb
push
inc
icebp
imulb
add
mov
mov
add
mov
xchg
pop
adc
mov
insl
cwtl
lock
jle
add
sub
test
das
add
scas
push
jne
adc
or
mov
cli
jae
xor
mov
sahf
gs
push
xchg
push
js
adc
dec
inc
sub
negb
push
into
or
dec
cmp
pop
aad
sbb
addl
add
jb
push
push
adc
mov
pop
iret
push
das
rclb
push
dec
jp
scas
mov
fwait
rorb
fsubrs
cmpsb
ss
rolb
rorb
aaa
addb
or
pusha
ret
lods
and
icebp
into
jle
push
fidivl
cmc
push
cltd
rol
mov
mov
fmuls
add
lods
rcll
sbb
ss
subb
fimull
push
inc
repnz
andb
shll
inc
xor
and
ret
fwait
dec
xchg
sbb
daa
inc
test
fnstcw
sub
dec
add
loopne
sbb
cli
inc
movsb
jle
push
sub
sbb
inc
lahf
pop
stos
pop
leave
popf
push
add
sub
rolb
inc
into
jg
scas
add
dec
add
and
mov
dec
enter
mov
dec
push
sub
push
test
fisubrl
mov
movsb
xor
mov
sub
push
mov
mov
insl
bound
xor
mov
jns
or
xchg
jbe
add
xor
enter
out
xchg
movsl
dec
rolb
xor
mov
mov
mov
dec
insb
fxch
pop
pop
xor
pop
or
mov
popf
push
inc
std
movsb
and
adc
sahf
dec
fs
push
mov
jl
push
subl
jmp
mov
cmp
pop
cmpsb
push
popf
sbb
push
add
hlt
mov
repnz
pop
dec
inc
xchg
out
or
call
xchg
add
adc
push
mov
xchg
cs
or
inc
dec
mov
pop
sub
mov
pop
cwtl
and
enter
xchg
dec
rcrb
cmp
inc
and
sahf
sbb
add
out
les
jmp
or
push
sub
inc
mov
rcrb
push
push
sbb
iret
add
mov
push
mov
std
mov
sub
xchg
outsl
or
sub
dec
sbb
inc
inc
mov
jmp
and
das
pop
insb
scas
ss
inc
cmp
sbb
xor
add
inc
or
add
stos
sahf
jne
and
sbb
addl
add
sbb
xchg
sbb
jae
shr
mov
call
mov
dec
jp
dec
js
sbbb
add
push
shrb
cmp
dec
dec
pusha
stos
mov
outsb
lods
dec
mov
arpl
adc
dec
fisttpl
add
dec
je
lret
xchg
and
mov
add
je
out
fisubs
pop
push
xor
sub
jae
cmp
gs
dec
outsb
sahf
pop
cld
xor
lods
cld
mov
fistl
inc
and
xor
dec
dec
dec
xlat
sub
lea
sbb
xchg
cmp
push
rclb
into
insb
xor
push
stos
push
sbb
xchg
fidivrs
dec
adc
inc
gs
push
inc
jb
movl
push
mov
in
loope
mov
pushf
daa
xor
add
mov
popf
or
xor
in
cld
aas
inc
pop
movsl
int3
jl
and
or
jp
outsl
add
inc
add
xchg
or
sbb
dec
movsl
inc
fidivrl
jae
fs
or
notl
mov
jbe
in
mov
lods
insb
outsb
sub
mov
ljmp
outsl
jns
and
xchg
fiadds
divps
add
shlb
pop
aad
ficoml
sub
ret
bound
inc
xchg
sti
jne
inc
inc
or
movl
jp
les
arpl
insl
pop
and
xor
push
xor
cmp
enter
xchg
jp
jb
mov
stos
sbb
popa
fidivrs
mulb
mov
sbb
flds
aaa
push
mov
lods
rolb
repnz
idivb
lods
sub
rorb
js
or
pop
or
push
fadds
repnz
aam
lods
cmc
nop
push
mov
pop
cmpl
scas
repnz
ja
sub
outsb
xchg
and
jg
sub
into
dec
into
popa
cmp
push
cs
fsub
jb
or
js
pop
jnp
pop
insb
cs
into
lock
dec
inc
and
outsl
lock
or
mov
adc
sub
out
lcall
es
sbb
pop
cli
xchg
push
mov
jns
popa
pop
and
or
push
cmp
xchg
cli
sub
aas
cmpl
outsb
add
add
cmp
push
mov
sub
sti
mov
add
orb
scas
sbb
or
ds
or
add
into
andb
sbb
add
push
dec
push
mov
or
jle
rolb
sbb
sbb
bound
cmp
sahf
xor
push
sbb
lret
sbb
addb
pop
push
sbb
jbe
ljmp
sbb
sub
adc
xchg
push
sbb
sub
ret
adc
adc
mov
sub
push
mov
addb
mov
jb
dec
dec
adc
mov
fisubrl
sub
xchg
inc
testb
and
sub
cs
push
das
mov
sub
cmpsb
dec
sbb
sbb
and
stos
sub
and
movb
repnz
push
lret
add
out
out
add
jbe
and
out
fs
jecxz
sbb
pushf
sub
mov
add
cmp
fimuls
xor
subb
jp
repz
mov
inc
adc
mov
lea
inc
ds
cmp
mov
xchg
push
js
cmp
scas
loope
fidivrl
jb
int
xor
fcomp
jbe
test
orb
cs
sbb
pop
test
xchg
outsb
mov
ret
or
mov
inc
ret
jae
push
inc
xchg
xor
ret
push
data16
dec
sbb
sub
push
scas
outsb
bound
int3
outsb
test
pop
fwait
jb
and
cmp
les
push
dec
jp
push
jbe
cmp
ret
mov
or
outsb
sbb
xor
pop
ds
jo
pop
add
repz
mov
xchg
ljmp
mov
inc
cmp
data16
xor
enter
outsb
outsl
lret
sbb
adc
or
aaa
outsb
push
add
push
add
rol
cmp
mov
xor
add
cli
push
pop
test
jge
cmp
scas
and
sahf
add
data16
inc
jo
fdivs
push
add
sahf
rorb
sub
jle
movsl
outsb
out
pop
mov
ret
insl
stos
imul
js
pop
pop
pop
xor
mov
mov
inc
outsb
hlt
jp
and
and
mov
add
sub
lret
jecxz
outsb
add
jle
lods
outsb
sbb
cmpsb
bound
sub
pop
sbbb
lcall
adc
sbb
loop
lret
sbb
outsb
fistl
push
xchg
subl
call
outsb
jp
jg
mov
add
ret
adc
fdivs
push
mov
jge
rolb
scas
mov
ret
inc
lret
xchg
mov
lods
inc
xor
sub
sub
sub
movd
mov
scas
test
mov
stos
xor
cmp
mov
das
lret
jne
es
sub
sbbb
or
ret
jecxz
sbb
ds
fisubrs
into
dec
mov
dec
lds
adcb
push
and
push
sahf
loop
ret
xchg
lret
inc
add
dec
scas
ret
outsb
dec
mov
or
out
push
inc
lret
cmp
xlat
lret
and
add
adc
bnd
sub
or
pop
adc
outsb
mov
dec
add
or
pop
subb
xchg
mov
ret
mov
push
loop
es
mov
and
outsl
xor
das
scas
cmp
outsb
hlt
inc
pop
and
out
test
sub
sub
dec
adc
add
popf
outsb
dec
fidivrl
xor
sbb
les
push
add
sub
jae
insl
sub
stos
or
mov
mov
cltd
push
pushf
cli
dec
shlb
add
or
test
adc
mov
repz
cwtl
sbb
push
cmpsb
inc
pop
push
jg
xchg
inc
pop
test
cmpl
out
inc
das
dec
test
inc
push
sub
pop
scas
ret
inc
pop
repnz
outsb
in
rorb
sub
and
ret
and
push
into
push
inc
shlb
iret
xchg
dec
push
and
sub
lcall
lcall
outsb
ret
sahf
cmp
subl
andb
mov
ret
dec
ret
ret
push
call
ret
cmp
nop
lret
scas
js
push
xchg
ret
add
push
sbb
shlb
jmp
mov
and
iret
mov
adc
sahf
push
scas
add
mov
stos
imul
adc
iret
add
sarl
inc
sahf
loop
stos
add
dec
mov
mov
push
pop
decb
outsb
ficompl
mov
bound
mov
addr16
add
push
iret
loop
ret
test
pop
nop
and
iret
mov
inc
xchg
pop
add
not
lret
add
pop
and
ret
push
lret
outsb
in
ret
ljmp
mov
outsb
dec
and
adc
or
scas
clc
out
mov
jnp
xchg
lods
outsb
dec
inc
sub
dec
or
push
into
and
js
add
pop
push
cmp
das
js
rcl
ret
lcall
jne
push
js
xchg
jle
mov
mov
test
outsb
sub
sub
aas
inc
sbb
push
xor
into
xor
cli
sub
ret
lea
pop
mov
dec
movaps
fwait
sahf
sbb
and
inc
je
cmp
cmp
push
ja
repnz
cli
outsb
ret
mov
sbb
xor
repz
cmovbe
push
inc
scas
sbb
ffree
and
rclb
and
outsb
ljmp
lret
ljmp
addb
repnz
es
cmpsb
xor
mov
subb
push
sbb
repz
bound
test
pop
fwait
stos
ret
es
xor
aaa
mov
into
into
add
xor
out
mov
mov
lods
outsb
dec
pop
and
sbb
push
xorl
xchg
daa
inc
add
push
out
fcmovbe
mov
lods
outsb
dec
mov
dec
cmp
scas
and
mov
xor
sti
loop
call
push
sbb
mov
adc
in
or
test
insb
sbb
jecxz
add
lods
rorl
inc
outsb
xchg
sub
scas
outsb
dec
push
loop
push
cmpsb
dec
aas
clc
cmp
testb
inc
ret
mov
mov
push
sub
sahf
xor
enter
inc
mov
add
push
outsb
inc
push
dec
rcrl
imul
mov
or
push
outsb
push
xorb
lods
inc
pop
push
dec
sbb
inc
add
lcall
sub
cmp
inc
dec
and
outsl
jbe
or
jecxz
mov
outsb
outsb
lret
xor
scas
jne
cs
cs
test
out
lods
outsb
sub
add
into
sub
mov
xor
cs
outsb
ficomps
test
mov
mov
sbb
or
inc
cwtl
mov
cmpsb
inc
ljmp
sub
push
sbb
cwtl
rorb
mov
jp
adc
push
out
mov
or
add
jmp
sbb
in
add
fidivrs
call
or
outsb
sub
dec
inc
mov
shll
mov
or
ret
repnz
and
pop
outsb
sbb
inc
cwtl
cmp
jno
pop
and
es
ljmp
outsb
ss
mov
or
in
rorb
sub
and
and
add
mov
ret
inc
pop
pop
and
ret
ret
outsb
icebp
mov
lcall
nopl
fisubrl
add
push
ret
insb
pop
sbb
lret
jecxz
outsb
dec
lods
ret
mov
test
pop
push
outsb
std
add
and
and
loopne
insl
sub
add
sub
jb
aad
add
jb
pop
cmp
clc
scas
ret
add
add
and
xor
ret
int3
dec
and
sahf
inc
mov
sub
lret
cli
push
add
cmpsb
dec
mov
lret
rclb
lcall
jp
ret
dec
stc
push
mov
repz
xorb
inc
outsb
sub
ret
es
stos
mov
roll
adc
ret
mov
jne
cs
es
push
testb
shlb
outsb
loop
popa
mov
inc
test
mov
and
ja
xchg
outsb
inc
cwtl
sbb
ret
dec
dec
outsl
push
and
sub
pop
push
lods
dec
sub
push
push
ret
dec
mov
es
jb
jle
lret
fcom
xor
imul
aad
mov
add
xchg
enter
scas
outsb
mov
into
add
scas
clc
je
lcall
cmovno
call
outsb
sub
pop
outsb
outsb
inc
sub
fcmovu
data16
or
sbb
or
sbb
cli
xor
gs
out
inc
sti
mov
push
insb
cs
pop
sbb
sbbb
loop
ret
or
xor
sarb
dec
sbb
cmpsl
rcll
mov
cmp
mov
and
adc
sub
dec
ret
push
pop
and
arpl
cwtl
loop
lcall
push
push
pop
ret
sbb
pop
add
subb
jmp
ret
cli
inc
jp
outsb
mov
and
repz
inc
ret
outsb
inc
dec
scas
jp
add
lret
cmp
xor
mov
mov
sub
adcb
scas
ret
sub
add
repz
mov
dec
dec
fdiv
mov
sbb
add
ret
pop
rol
je
push
push
inc
push
gs
outsb
mov
add
out
iret
sub
ret
ds
and
les
adc
cmp
add
xchg
cmp
jecxz
ret
loop
jp
sub
mov
and
mov
inc
pop
lcall
stc
cs
popf
loop
js
inc
cmp
mov
ret
test
xor
sbb
mov
ljmp
insl
fiaddl
addb
push
add
es
ret
mov
cmp
ret
outsb
les
popf
imul
or
jbe
mov
push
mov
lcall
adc
sbb
inc
stos
hlt
pop
cmc
or
mov
jnp
push
sbb
iret
pop
mov
fwait
mov
adc
lret
jl
fistl
sbb
js
pop
lcall
enter
or
leave
sti
sub
adc
test
adc
jle
lcall
mov
inc
push
add
rolb
lock
xchg
mov
jb
sbb
mov
sub
ud2
lcall
sbb
sbbb
addb
into
cltd
jbe
subl
sahf
adc
lahf
repnz
mov
popf
repnz
jb
xchg
iret
push
sub
xchg
xor
into
sub
ljmp
fwait
xchg
jmp
adc
pop
add
jmp
out
sti
push
push
adc
test
out
push
in
test
jbe
sbb
lahf
jecxz
mov
loopne,pn
jle
push
inc
loope
shrb
add
cmpsl
adc
in
adc
push
sbb
stos
jl
sub
inc
stos
mov
subl
and
sub
scas
mov
sub
adc
into
sbb
xor
xorb
mov
mov
push
sub
dec
mov
or
xor
aas
adcl
pop
popf
arpl
sub
sub
sbb
xor
ljmp
int
dec
sbb
pop
out
mov
xchg
inc
mov
pop
sbb
cmpl
mov
xor
test
mov
add
loop
or
sbb
and
ljmp
scas
xorb
in
ss
sbb
mov
test
popa
cmp
mov
fwait
stos
sub
push
adc
xor
jp,pn
dec
repnz
mov
sbb
dec
mov
mov
dec
adc
pop
out
jp
cmpsl
adc
sub
mov
inc
adc
adc
inc
outsl
inc
data16
lahf
inc
adc
inc
repnz
adc
inc
adc
scas
fwait
ret
call
stos
pop
inc
adc
xchg
repnz
ficoml
ljmp
pop
cmp
xchg
xchg
cmp
sub
dec
inc
pop
test
pop
pop
adc
into
scas
push
pop
pop
adc
fisubrl
push
fdivrs
mov
lret
jne
es
lea
sub
rcrl
fmull
outsl
sub
mov
xchg
sbb
xor
push
das
insb
negb
ret
bound
fwait
out
sub
sub
inc
sub
jp
sub
repnz
xchg
cwtl
add
xchg
pop
adc
inc
push
fwait
pop
clc
shlb
push
bound
scas
bnd
pop
adc
stos
sbb
and
test
push
and
outsb
bound
push
push
xchg
xlat
sahf
movb
mov
jb
mov
fwait
imul
mov
inc
outsb
mov
outsl
ja
push
cmpsb
mov
sbbb
sub
push
sti
push
lods
pop
pop
adc
jmp
adc
or
sub
or
mov
mov
das
stc
sahf
pop
or
mov
mov
adc
imul
or
gs
push
or
ret
sub
or
mov
sub
testb
cmp
pop
add
mov
push
xor
sbb
dec
pop
mov
add
shlb
cli
sbb
sbb
repnz
adc
lea
sbb
jbe
cmpsl
dec
add
sbb
xor
sub
mov
inc
dec
test
push
push
mov
enter
pop
ficompl
into
xchg
sub
dec
sub
dec
cs
sbb
adc
sbb
adc
shrb
push
push
and
data16
and
mov
stos
cs
aaa
pushf
push
or
push
sub
aam
push
mov
repnz
dec
push
sub
pop
clts
aam
out
or
and
push
fwait
and
add
outsl
add
push
add
adc
add
add
push
and
outsl
sbb
push
sbb
adc
sbb
sbb
adc
adc
jb
scas
push
lcall
adc
ret
adc
sub
sub
sub
and
outsl
das
es
sub
lcall
ret
and
ss
sahf
and
push
dec
cmp
cmp
push
cmp
sub
call
push
or
jns
outsb
outsw
cmp
loopne
push
arpl
insb
jb
sub
sbb
sub
xor
adc
jle
bound
add
adc
xchg
loope
imul
mov
rorl
lret
sub
xchg
mov
sub
scas
dec
mov
or
testl
push
sub
add
sub
sub
jmp
dec
xorl
mov
divb
adc
outsb
sub
repz
sti
dec
push
push
inc
sub
aaa
mov
xorl
mov
repnz
adc
cmp
mov
push
fwait
dec
xchg
add
xorb
into
xchg
and
mov
adc
push
das
sbb
pop
movb
shlb
fs
mov
mov
stos
xchg
repz
cmp
stos
fwait
push
ss
lods
mov
pop
pop
lcall
imul
dec
shrb
lcall
adcb
out
mov
addb
pop
jle
ret
xchg
repz
xor
add
arpl
adc
xorb
adc
in
pop
aaa
jnp
notb
sbb
sbb
stos
cmp
pop
dec
gs
imul
adc
jp
pop
xor
dec
dec
imul
push
mov
jle
add
nop
or
js
jle
sbb
cwtl
adc
adc
jle
ljmp
sub
xor
outsb
outsl
pop
jle
jae
fwait
and
insl
addb
xor
push
aad
cmc
ja
mov
sub
xchg
lods
inc
sahf
add
xor
xchg
fisubl
imul
jl
xchg
ds
jnp
mov
or
mov
inc
les
sub
out
inc
js
outsl
stos
and
out
xor
sahf
loop
lret
jb,pn
adc
dec
lret
hlt
push
cmpsb
push
sub
mov
or
and
enter
xchg
sub
pop
mov
jb
stos
push
lods
inc
push
fildll
push
sbb
dec
or
dec
xchg
dec
js
dec
imul
or
dec
loop
sbb
push
mov
scas
jle
scas
test
test
or
jle
daa
sub
dec
push
mov
mov
dec
test
xchg
dec
add
pop
pop
inc
imul
into
mov
fmuls
xor
call
in
add
xor
adc
xor
sbb
xchg
cltd
mov
push
cltd
sbb
fiaddl
jo
sbb
mov
sub
adc
sbb
lock
mov
push
data16
out
loop
out
fmuls
cmpsb
fstps
icebp
out
sbb
and
inc
adc
push
xor
popf
fnstenv
mov
and
inc
and
call
add
or
adc
xchg
sbb
pop
sub
movl
and
push
sbb
or
inc
and
add
mov
in
lods
sbb
xor
push
push
xor
inc
test
ss
and
stos
push
adc
and
lret
cmp
push
sbb
xchg
pop
and
sahf
inc
sbb
mov
aaa
and
xor
clc
andl
in
jmp
cmpsb
xchg
push
add
enter
push
add
xchg
cmp
repnz
decb
inc
pop
lret
enter
or
and
xchg
adc
push
inc
mov
cs
lret
dec
sbb
inc
cs
out
xor
and
dec
in
dec
stos
push
sub
xor
or
div
pop
push
movsb
xchg
pop
xor
aam
xchg
mov
dec
icebp
loop
sbb
outsb
or
add
jns
and
stc
add
push
push
and
adc
push
dec
das
ljmp
subb
push
dec
xchg
inc
mov
outsb
arpl
add
movsl
fs
pusha
das
inc
arpl
xorb
adc
xor
dec
jp
push
push
inc
lahf
sub
pop
mov
jns
bound
push
stos
ficomps
adc
lods
aad
fcoms
push
pop
jp
dec
roll
pop
and
adc
and
inc
inc
outsb
push
scas
loope
and
in
and
add
sbb
push
pop
lock
or
ss
sbb
adc
mov
imul
mov
push
adc
fistps
and
mov
pusha
jp
stos
cmp
xor
test
pop
hlt
das
arpl
adc
jle
and
jecxz
pop
lcall
sbb
movsb
inc
dec
outsb
addr16
add
lret
aad
call
bound
sub
xor
call
fs
cltd
ret
sarb
adc
int
and
dec
and
xchg
jg
lods
xchg
aam
loop
mov
into
call
gs
push
adc
out
mov
mov
sahf
lahf
addb
outsl
add
lea
xorb
xor
dec
adc
sti
inc
or
push
xchg
movsb
ficompl
scas
lock
sbb
jb
add
cmp
inc
iret
mov
popa
outsb
sbb
and
xchg
inc
sub
add
imul
cltd
ds
sub
and
and
push
aaa
xor
mov
inc
adc
push
ds
xor
cmp
mov
push
and
es
adc
sub
loopne
inc
ds
cmc
pop
pmaxsw
es
pop
sahf
lods
stos
or
imul
jmp
sub
cwtl
mov
dec
inc
mov
inc
mov
loop
jb
pushl
sbb
cmpb
and
addr16
fs
out
stos
jno
into
or
inc
outsb
push
out
pop
cmpsb
enter
dec
outsb
mov
mov
es
and
jbe
sarb
or
dec
loop
pop
push
popa
mov
pop
lock
cmp
scas
pop
gs
jns
ds
into
adc
in
add
push
xchg
inc
pop
iret
in
cs
mov
push
mov
fistpll
push
cmpb
cs
cs
stos
push
clc
jnp
outsl
jecxz
inc
cmp
xor
xor
bound
scas
enter
mov
scas
push
xchg
push
push
addr16
xchg
jg
cmp
out
pop
fdivr
pushf
sbb
test
pop
ret
cmp
dec
dec
cmp
pushf
sbb
mov
in
sarl
and
adc
mov
push
mov
pop
add
pop
cs
es
stos
xor
dec
scas
adc
imulb
es
mov
ret
jg
popa
iret
dec
and
adc
dec
ficoml
push
cmp
and
scas
or
sbb
repnz
leave
mov
dec
mov
rorb
and
cld
jp
jl
push
ss
inc
add
mov
inc
dec
sahf
push
sbb
add
push
push
in
subb
push
mov
inc
pop
btr
test
dec
inc
jae
or
aas
and
push
stos
into
enter
leave
sub
out
xchg
pop
ret
inc
arpl
vpshufd
push
jecxz
inc
call
xor
fidivrl
push
and
xor
push
adc
cmp
sbb
orb
cwtl
jp
cs
and
pop
add
or
js
outsb
int3
mov
jl
mov
imul
push
inc
ret
and
jl
stos
ss
stos
push
lds
jl
sub
lret
xchg
dec
push
inc
mov
jg
mov
sbb
fs
test
lcall
push
xor
imul
inc
jl
mov
cmp
jb
insb
pop
pop
sub
cmp
or
cmp
mov
movsl
xor
nop
int3
adc
adc
cmp
arpl
mov
and
dec
sub
jmp
xchg
sbb
add
push
loop
pop
loope
and
rorb
xchg
xor
outsb
cmp
push
inc
dec
rclb
add
icebp
mov
cmpsb
out
dec
dec
aad
pop
sub
ds
dec
mov
push
jle
inc
fmulp
cmc
or
push
mov
or
add
push
outsb
cmp
mov
inc
into
push
ds
stos
out
add
sbb
xchg
xor
push
add
add
inc
pop
lcall
push
cmp
dec
push
lcall
lcall
dec
jg
cmp
jg
push
push
stc
mov
dec
mov
jg
lret
fnstenv
and
dec
mov
out
and
sub
or
mov
arpl
inc
push
or
ds
loop
or
and
js
sub
lcall
sub
fsubrs
pop
sub
cmp
sub
jbe
mov
pop
dec
cmpsb
roll
pop
test
imul
mov
and
inc
mov
jbe
mov
cmp
data16
xchg
lahf
test
out
outsb
scas
and
cltd
mov
inc
xchg
mov
loop
arpl
arpl
jnp
mov
push
dec
mov
dec
push
decb
sbb
sub
cltd
push
jl
push
push
sbb
cmp
pop
lahf
mov
fcmovu
push
cmp
cwtl
sahf
inc
dec
pop
push
mov
mov
push
inc
mov
jb
add
sbb
hlt
dec
popl
add
insb
and
adc
mov
add
dec
add
push
repnz
or
stos
sbbl
repz
test
and
push
out
pop
and
das
es
sbb
dec
and
push
es
cmp
lret
lea
xor
add
mov
sahf
cmp
sub
cs
dec
rcrb
sub
out
xor
push
cmpl
push
daa
sub
inc
aaa
inc
pop
rcll
lcall
and
push
mov
dec
jne
scas
and
add
pop
adc
cmp
lds
lods
dec
inc
push
mov
add
rcl
movsb
outsl
pop
push
inc
arpl
push
jbe
bound
sbb
sbb
xchg
or
js
pop
ret
arpl
dec
mov
ljmp
cs
add
clc
pop
xchg
jae
sub
adc
cmp
inc
jo
bound
pop
sahf
mov
popa
push
jle
sub
out
sbb
xor
pop
adc
arpl
dec
mov
das
push
dec
popa
push
inc
push
mov
das
dec
push
xchg
mov
push
loop
enter
into
pop
or
ja
dec
hlt
sub
mov
inc
dec
push
xor
inc
shrl
dec
sub
push
sbb
pop
dec
dec
jb,pn
xor
insl
push
jg
pop
stos
lods
mov
rorl
ss
add
mov
inc
data16
insl
dec
sbb
mov
dec
sbb
adc
xchg
add
dec
sub
xchg
sub
push
incb
pop
xchg
loop
jecxz
sbb
mov
lcall
push
scas
cld
addr16
lret
xorl
dec
outsb
fidivrs
arpl
push
inc
sahf
jae
cltd
idivl
inc
dec
mov
inc
add
adc
mov
pop
jecxz
cmpl
test
movsb
sub
sbb
pop
cmp
dec
add
pop
fsubs
jmp
add
loop
push
loop
lahf
pop
jne
xchg
data16
push
inc
push
add
jae
jle
loop
sub
cwtl
fsubrp
mov
fdivrs
jns
mov
sbb
in
dec
dec
imul
dec
fs
cli
push
sbb
dec
data16
mov
push
and
sbb
inc
lret
outsl
inc
andl
xorb
outsb
xor
data16
insb
inc
clc
jns
xchg
loop
addb
pop
add
sub
pop
outsl
inc
push
outsb
and
sbb
into
clc
mov
xor
stos
pop
add
cmpsl
dec
mov
pushf
cmp
imul
xchg
dec
mov
ret
mov
loopne,pt
xchg
cmp
cmp
adc
add
into
sbb
daa
jp
ss
mov
out
add
push
add
stc
mov
inc
test
mov
add
cmp
dec
adc
incb
dec
testb
pop
inc
lock
inc
and
sbb
jb
daa
cltd
and
adc
popa
jae
dec
push
xchg
test
xchg
test
mov
frstor
repz
dec
pop
into
xchg
dec
push
sbb
inc
push
inc
add
ds
pop
cmp
sahf
ljmp
jp
scas
inc
push
cs
std
pop
bound
cmpsb
ds
mov
sahf
test
outsb
lret
fwait
push
inc
orb
sbb
inc
sbb
les
sahf
jmp
fisubrl
mov
shll
adc
and
mov
subl
cmp
dec
into
and
pop
mov
bound
adc
arpl
add
hlt
adcb
in
jbe
sub
outsb
daa
xchg
imul
mov
add
adc
or
mov
arpl
jge
and
lcall
sbb
push
pop
stos
jp
jp
sbb
push
inc
mov
jp
jns
dec
and
push
dec
leave
imul
sub
push
xor
push
sbb
mov
sub
adc
fwait
shll
push
or
pop
pop
lcall
and
fidivl
and
adc
add
ljmp
fidivrl
sahf
push
outsb
push
pop
or
ficomps
mov
mov
fsubs
nop
mov
int
decl
adc
xor
and
inc
out
ret
out
or
adc
jne
flds
test
notb
adc
bound
aam
shrb
iret
fs
inc
jp
scas
xchg
cs
xchg
insb
pop
push
xchg
mov
ljmp
fldt
add
mov
cld
pop
bound
mov
lds
cmp
and
sarl
push
pop
adc
pop
add
jns
stos
mov
add
adc
pop
std
les
xchg
add
pop
sahf
shrb
popa
pop
sbb
add
push
mov
or
push
jb
and
cmp
leave
cs
sbb
popa
into
pop
push
jp
jg
adc
sub
push
dec
ds
hlt
dec
leave
inc
mov
jmp
add
dec
ds
mov
sarb
fdivrs
movb
push
xor
addr16
pop
dec
into
sub
orb
and
pop
aam
sub
add
sbb
icebp
fcmovu
adc
or
inc
test
dec
pop
add
or
pop
xor
cmp
mov
mov
cmp
into
sbb
add
mov
bound
ret
out
add
sub
aad
mov
decb
dec
cmp
test
and
jb
inc
dec
adc
xchg
out
cwtl
dec
and
xlat
adc
out
loope
xor
mov
ficomps
xchg
push
jnp
pop
pop
arpl
sbb
into
and
dec
dec
jns
arpl
mov
inc
sbb
and
push
sub
add
mov
out
xor
add
jb
jb
sbb
xor
out
sbb
ret
movsb
add
and
mov
push
cwtl
mov
add
dec
xchg
jle
je
outsb
cld
add
jle
dec
sti
iret
testw
cs
fs
xlat
popf
fiadds
cmp
or
xor
cmp
into
adc
ficompl
pop
sti
sbb
jns
rcrl
ljmp
dec
dec
xor
push
push
adc
jmp
pop
pop
sbb
inc
or
jl
in
test
inc
mov
ljmp
fldcw
pop
mov
inc
repnz
jbe
stos
jbe
insb
cmpb
jp
jnp
mov
push
ja
sbb
xchg
bound
cwtl
shlb
jno
push
inc
stos
ss
es
pop
cmp
dec
es
inc
sbb
aaa
sub
out
mov
cmpsb
inc
mov
push
and
sbb
sub
mov
data16
jp
xchg
xchg
outsb
inc
ljmp
add
push
sbb
push
cs
mov
and
mov
sub
in
xor
adc
call
push
jne
and
adc
xchg
mov
bound
out
pop
push
jp
addl
or
mov
jno
jl
push
or
or
sub
push
jle
stos
cmp
mov
push
adc
data16
and
cmp
hlt
pusha
dec
sbb
in
push
loopne
cmpl
lods
sbb
cs
out
push
test
pop
adc
cli
push
daa
mov
fiaddl
lcall
adc
adc
insb
sbb
push
popf
into
xchg
out
pushf
inc
jae
and
iret
rcrl
sbb
and
aas
rolb
data16
push
adc
in
inc
dec
das
sbb
adc
adc
jno
push
adc
adc
xchg
outsl
or
push
push
test
shlb
push
movsl
insb
stos
mov
loop
adc
sbb
loopne
push
dec
push
fistps
or
and
cs
cld
mov
sub
sub
and
adcb
xchg
ljmp
js
mov
mov
cmp
and
popa
push
daa
lcall
and
mov
cld
repz
jp
subb
test
cmp
lcall
push
es
sub
bound
fdivl
sub
add
or
cmp
and
cmp
cmp
cmc
sbb
jp
and
sbb
cmpsb
sub
inc
mov
inc
sbb
rcll
lret
or
bound
jae
adc
cmp
mov
and
sub
push
inc
stos
sub
repz
and
lods
sub
mov
pop
mov
or
push
xchg
lret
push
push
push
jp
adc
adcb
sub
or
int
arpl
ds
adc
scas
sbb
push
sbb
sub
mov
sub
mov
cmp
test
sub
mov
dec
pop
mov
push
jp
cmp
bound
lea
sub
mov
cmc
dec
int3
in
push
xor
mov
jbe
lahf
add
sbb
sbb
out
sub
pop
xor
les
adc
rclb
in
mov
bound
lcall
jg
lcall
pop
dec
xchg
sbb
sub
pop
data16
xor
fcmovbe
push
adc
sbb
cmpsb
sub
adc
inc
out
pop
or
inc
dec
movsl
incb
cmpsb
cltd
bound
subl
jb
adc
inc
dec
les
outsb
sbb
lahf
movsl
inc
outsb
ljmp
push
orb
fwait
sbb
ret
push
pop
outsl
and
sub
jnp
lock
jo
outsb
sbb
sbb
mov
pop
mov
sbb
dec
shlb
adc
lahf
dec
stos
jp
ret
incb
outsb
inc
daa
dec
nop
sbb
inc
or
push
add
out
sbb
xchg
jp
adc
mov
mov
mov
mov
dec
bound
sbb
loop
mov
mov
and
nopl
shll
bound
cli
jbe
mov
das
push
cmpl
sbb
sahf
push
dec
add
outsl
push
sub
rcrb
jg,pt
nop
es
push
push
stos
inc
in
cld
fwait
imulb
das
sub
stos
push
mov
es
into
push
mov
outsb
sbb
outsb
sub
cmp
add
ret
push
add
mov
jmp
push
xchg
cli
and
jb
pop
scas
rcrl
lock
test
push
int3
inc
bound
inc
or
subl
insb
cli
xchg
outsb
fisubs
mov
cli
popf
insl
mov
sub
xchg
push
popf
bound
mov
mov
loop
add
repnz
inc
and
or
adc
mov
sbb
sahf
subl
pop
popf
int3
ljmp
dec
jns
daa
js
das
jno
cmp
mov
mov
arpl
cmp
aas
cmp
femms
push
pop
sub
cltd
mov
add
les
pop
push
pop
ficoml
push
es
dec
inc
dec
pop
sub
sbb
out
aaa
arpl
jns
sub
das
mov
inc
xchg
fwait
cmc
xor
fdivr
sbb
jmp
setb
lcall
stos
pop
push
mov
iret
popf
in
dec
sub
jmp
push
mov
in
inc
cmpsb
jecxz
loop
cs
mov
mov
mov
sub
sbb
cwtl
inc
pop
sub
pop
sahf
adc
mov
popf
adc
das
adc
dec
cmp
inc
and
test
adc
sbb
popa
inc
or
fdiv
stos
shrb
push
jb
mov
cmp
pop
jp
cmpsb
stos
adc
mov
stos
push
sbb
ret
lret
add
and
sub
into
ret
adc
dec
das
inc
jg
and
push
and
push
sub
ficomps
pop
imul
and
fisubrl
nop
jno
mov
push
shlb
cltd
dec
sbb
out
push
xchg
sub
mov
addl
push
cli
dec
push
push
or
bound
push
outsb
mov
mov
sub
lahf
aad
ja
cmpb
dec
mov
sbb
mov
sbb
pop
dec
mov
lret
inc
shl
xchg
dec
cli
push
sbb
and
inc
cmp
out
jle
sub
xchg
mov
or
mov
and
lret
ret
rclb
sbb
mov
scas
xchg
data16
xorb
sub
mov
int3
loop
bound
cmpsb
and
or
clc
jb
fwait
inc
inc
adc
dec
mov
mov
sub
and
inc
imul
sub
pop
pop
gs
lods
cs
push
pop
mov
adc
mov
das
sbb
push
scas
and
jp
test
cmp
add
scas
lcall
sarb
lods
inc
push
dec
sub
addl
ret
inc
mov
push
das
orb
loop
xchg
je
loop
dec
add
jae
jge
insb
dec
es
and
dec
repz
pop
fidivrl
aas
sbb
not
scas
cmp
and
stos
inc
and
push
and
ja
inc
mov
jbe
jle
jge
sbbb
ljmp
cmp
insb
cltd
cmpsb
es
push
sub
cmp
pop
cmpsl
and
lcall
mov
mov
cmp
sbb
pop
and
pop
sbb
push
dec
or
inc
jns
dec
push
call
pop
movsb
push
dec
ljmp
sbb
xor
sbb
mov
jp
mov
inc
stos
lcall
cmpb
std
push
js
dec
mov
xor
adc
dec
pop
pusha
fisttpl
scas
daa
mov
cmp
jo
pop
push
out
push
ds
int
movsl
mov
dec
push
and
and
imul
loop
sbb
test
dec
mov
pop
pop
lea
pop
arpl
pushf
dec
adc
push
pop
test
dec
dec
bound
outsb
dec
fimuls
daa
ret
xchg
dec
movsl
mov
shr
clc
lahf
add
xchg
mov
fidivrl
sbb
pop
mov
push
ret
andb
ljmp
jnp
push
mov
flds
outsb
push
enter
mov
push
xchg
lods
xor
sub
fistpl
xor
scas
push
cmp
adc
xchg
sbbb
cmp
or
bound
jbe
aas
pop
mov
rolb
sub
pop
adc
dec
idivb
jp
cld
cmpsl
dec
ds
and
adc
fisubl
sbb
and
mov
scas
pop
xor
jl
out
mov
jp
jns
out
sub
add
call
inc
push
fisubrl
lcall
jns
mov
jle
cmp
fwait
push
arpl
and
jp
adc
inc
xor
mov
das
mov
push
and
push
sbb
xchg
jb
jns
jbe
cmp
add
dec
cmp
aad
dec
jg
daa
enter
pop
or
jp
cltd
stos
icebp
lahf
dec
bound
xor
cli
mov
jg
xchg
mov
pop
push
ljmp
and
sub
add
adc
mov
cmpsb
sbb
adc
xor
cmp
xlat
or
stos
dec
xchg
repnz
sbb
aaa
bnd
repnz
rcrb
test
jns
sub
and
cmp
in
pushf
scas
adc
aad
xchg
outsb
lahf
push
and
mov
add
push
stos
adc
cmpb
sub
xchg
out
push
and
das
push
sub
cltd
jl
dec
mov
sbb
sahf
xor
sub
lock
call
dec
push
mov
int3
filds
push
aas
jp
cwtl
sbb
and
cmp
sbb
adc
and
ret
sbb
pop
push
xchg
pop
es
lret
cwtl
stc
mov
repnz
sbb
adcl
out
and
sbb
xchg
inc
ds
sbb
jp
cmp
jp
fidivl
ds
cvtdq2pd
jmp
loopne
pushf
push
adc
jecxz
mov
adc
ds
cmpsb
and
inc
sub
sub
sub
leave
mov
adc
push
mov
jne
es
inc
adc
mov
jb
cmc
and
lret
inc
ds
cli
xor
add
scas
push
and
mov
inc
xor
and
push
jge,pn
cs
mov
xchg
xor
jg
and
mov
pop
subl
mov
sub
shl
or
cltd
lcall
out
inc
jp
incb
and
add
pop
fidivrs
xchg
repnz
pop
or
nop
out
imul
fwait
mov
lret
cmp
sbb
inc
dec
pusha
inc
sbb
ljmp
xchg
xor
fimuls
mov
and
mov
cmp
jp
imul
and
mov
inc
aad
pop
or
lret
fsubrs
jnp
push
sub
int3
cs
mov
lock
out
adc
xchg
adc
jmp
mov
mov
mov
mov
adc
fwait
add
mov
imul
jbe
cmpl
xchg
or
cmpsb
mov
outsb
inc
cmp
mov
inc
and
push
push
outsb
and
sub
sbb
push
xchg
inc
xchg
mulb
xchg
mov
jb
mov
andb
arpl
sti
daa
pop
ljmp
pop
jb
push
and
cmovb
jmp
ficoml
sbb
stos
cwtl
mov
inc
push
nop
push
or
jecxz
fwait
sub
and
into
add
mov
cmp
fucomip
sbb
rclb
mov
cld
test
dec
adc
pop
cmp
dec
and
lret
repnz
xchg
cmp
push
out
jns
mov
outsb
sbb
cmp
dec
outsl
adc
sbb
add
test
dec
push
dec
pop
pop
inc
out
sbb
loopne
dec
adc
adc
out
mov
mov
lcall
jae
and
pop
outsl
lock
cmp
sub
dec
mov
cmp
repnz
cmp
mov
mov
or
and
cli
mov
xor
dec
mov
test
inc
mov
push
lods
cmp
xchg
xor
orl
add
cmp
adc
pop
mov
push
fiadds
dec
sbb
inc
mov
daa
push
loop
bnd
push
imulb
outsb
push
inc
loop
pop
ret
out
and
leave
mov
cmp
mov
sbb
cmpsl
xor
bound
push
es
inc
pop
mov
loope
jp
cmp
jle
push
sbb
lcall
ja
xchg
aas
scas
adc
or
and
push
dec
push
pop
dec
sbb
inc
rcrb
neg
bswap
outsl
jle
pop
sbb
sub
sub
and
and
xchg
cwtl
repnz
ret
pop
sub
xor
loop
repnz
lret
outsb
fwait
scas
mov
cmp
push
jns
adc
mov
and
fimull
sbb
bound
xor
mov
sbb
sahf
add
mov
pop
test
pop
cmp
pop
dec
mov
push
and
lahf
push
sub
mov
jp
and
sub
push
mov
into
and
movsl
daa
decb
adc
cmp
cmpsb
mov
cmp
push
sub
cmp
or
and
jns
pop
and
xchg
outsb
and
xor
sub
insb
insb
loop
sbb
mov
into
push
mov
cmp
cmpsb
jmp
outsl
push
push
lahf
les
mov
and
arpl
jb
push
dec
daa
push
or
cmp
push
aam
imul
bound
ds
lcall
or
xchg
adc
decb
arpl
scas
push
pop
push
orb
and
sbb
into
mov
imulb
xchg
xor
add
cmp
inc
cmp
xor
cwtl
repz
pop
mov
mov
cli
shrb
fstpt
scas
cmp
mov
call
mov
mov
lret
jp
and
ds
inc
inc
sub
jle,pt
xchg
mov
jle
or
mov
sub
jae
cmp
out
je
jge
push
cs
add
xor
push
sbb
xchg
cs
xor
adc
add
icebp
pushf
mov
sub
cmp
dec
imul
xchg
or
mov
add
mov
xor
repz
add
dec
jp
jns
xor
inc
mov
in
jp
sti
mov
push
into
shll
mov
ficoml
insl
mov
lods
sti
sahf
adcb
pop
pop
push
pusha
and
cs
push
icebp
inc
repz
adc
inc
jbe
xorb
push
mov
and
push
push
mov
mov
jnp
xchg
cli
push
jle
stos
es
pop
fldenv
adc
lfs
pop
push
lret
cmp
and
add
pushf
add
mov
fidivrl
cmp
pop
mov
cs
add
mov
push
mov
pop
xor
push
mov
push
adc
mov
fidivs
stos
cmp
mov
xchg
pushf
push
mov
mov
lods
loopne
bound
sbb
cmp
adc
gs
xor
lret
or
mov
push
sbb
and
sub
push
loop
sbb
xor
fiaddl
imul
adc
cmp
mov
add
adc
arpl
data16
out
cmp
mov
mov
dec
xor
jne
xchg
or
es
xor
adc
adc
lret
loop
xor
add
sbb
dec
and
xorl
shll
ds
xorb
xor
out
fmulp
adc
bound
adc
data16
inc
imul
xor
outsb
ljmp
push
ret
cmp
lea
hlt
aaa
sub
cmpsb
stos
arpl
shl
xor
xchg
push
dec
xchg
pop
mov
dec
add
jo
jno
push
xchg
push
cltd
and
in
mov
lcall
xchg
add
jle
andl
sub
inc
mov
sar
inc
xorb
sbb
cmp
and
xor
subb
add
fsubr
stos
and
sub
or
bound
dec
sub
inc
push
dec
mov
js
pop
sub
and
fiaddl
mov
adc
and
or
outsb
add
sbb
scas
add
cmp
xor
cli
inc
adc
rorb
or
bound
es
fmulp
movsl
pop
mov
test
lds
sub
sahf
xor
dec
inc
outsl
sbb
divb
ds
repz
enter
mov
pop
mov
loop
jp
xchg
int3
inc
or
orb
aaa
push
add
dec
push
cs
lret
iret
pop
sub
push
mov
adc
wbinvd
push
inc
xorb
xchg
mov
and
popf
jbe
mov
dec
xchg
sub
add
mov
pop
pop
push
jle
dec
dec
sbb
aas
sbb
data16
jp
in
arpl
jae
sub
outsl
daa
xorb
bound
dec
mov
into
daa
inc
cli
inc
insl
cmpl
sbb
or
and
add
xor
bound
or
pushf
adc
ja
add
pop
fs
push
xor
mov
sbb
xor
xchg
xor
dec
push
xor
inc
inc
mov
ret
dec
inc
gs
nopl
pusha
popa
fstpt
addr16
dec
push
mov
bound
sbb
cmp
adc
sahf
ss
xor
ds
dec
arpl
daa
sub
or
ret
scas
lea
jns
mov
scas
sbb
arpl
mov
mov
pop
sbb
iret
adc
fisubs
into
dec
sub
int3
std
pushf
clc
mov
lret
mov
cmp
push
pusha
ds
dec
and
jle
pop
sub
sbb
sbb
ret
repnz
adc
pusha
sub
cmp
sti
add
dec
fmul
lcall
adc
jb
jns
and
out
add
adc
inc
rcr
inc
data16
sbb
sub
pop
stos
ds
inc
popf
test
dec
cmp
inc
movsb
imul
sahf
pop
lahf
cs
bound
bound
mov
jb
outsl
insb
mov
divl
in
stos
cmp
lcall
ja
pop
fwait
sub
cmp
sarl
cmp
pop
pop
jg
mov
gs
dec
inc
inc
imul
add
imul
and
bound
dec
add
imul
mov
push
daa
dec
scas
stos
and
test
lcall
cmp
sub
cli
sub
int
cmovns
sub
pop
repz
movsb
dec
sub
jp
mov
jg
ja
lcall
jl
outsl
xchg
insl
dec
sub
fidivrs
and
push
cmpb
cmc
in
dec
add
sub
outsb
js
cmp
fmull
inc
in
dec
ja
outsb
mov
jge
imul
cmp
lcall
push
shll
bound
push
mov
cmpsb
jp
fimuls
xchg
adc
fistpll
sbb
xor
sbb
outsl
ret
sub
out
adc
cmp
std
xlat
xor
lds
and
lods
lcall
pusha
xchg
inc
das
lret
js
test
js
xlat
les
gs
adc
aad
cmpsb
adc
add
sbb
gs
bound
imul
in
dec
jns
pop
jl
and
es
cmp
sti
insl
aas
jmp
leave
pop
es
inc
push
cld
dec
pop
in
popf
pop
xchg
adc
sub
outsb
xlat
out
ds
pop
adc
inc
xorb
add
dec
xor
and
xor
adc
pop
jmp
jl
and
mov
ret
and
bound
push
add
push
lahf
sbb
mov
lahf
adc
push
adc
xchg
sub
rcrb
and
and
scas
outsb
scas
jae
scas
cmp
dec
or
pop
jle
push
and
test
pop
sbbb
arpl
adc
adc
ficompl
add
pop
out
movsl
les
in
shrb
cwtl
adc
pop
outsl
mov
pop
inc
ret
lahf
popa
sub
arpl
js
clc
inc
cmpsb
pop
in
push
sub
insl
jl
jnp
xor
stos
pop
test
cmp
arpl
adc
loop
pop
bound
xlat
inc
and
shlb
adc
adc
push
adc
stos
clc
and
mov
mov
dec
addb
aad
xlat
stos
outsl
or
dec
lods
test
push
inc
cmpsl
ds
in
adc
inc
push
out
movsl
les
loopne
inc
addr16
jae
arpl
sbb
repnz
jle
outsb
and
xor
mov
inc
dec
mov
inc
idivl
and
jmp
lods
pusha
lcall
gs
inc
sbbl
fidivs
inc
mov
jg
lret
jne
push
jecxz
out
hlt
das
test
subb
mov
mov
cmpsl
test
subb
pop
addr16
cwtl
mov
mov
shrb
mov
cmc
and
pop
jge
lcall
xchg
imul
dec
cmp
cltd
mov
outsb
adc
sahf
ds
mov
sub
bound
push
lret
push
popf
xlat
mov
aam
bound
push
sub
out
insl
xorl
test
and
cs
outsb
test
cmpsb
mov
sub
and
dec
fwait
pop
inc
into
jl
jns
pushf
pop
adc
andb
xlat
pusha
cli
sahf
call
arpl
sar
mov
push
mov
movb
xor
mov
jo
push
jg
jecxz
jns
push
adc
lods
sahf
out
push
enter
int
add
stos
adc
mov
js
or
imul
pop
fisubl
sti
arpl
test
adc
push
xchg
sub
push
dec
fwait
ljmp
repnz
addr16
xchg
cmp
inc
pop
ljmp
call
xchg
xor
sub
and
cli
push
and
into
jo
xor
push
into
lods
divl
mov
jnp
mov
mov
imul
adc
and
xor
cmp
mov
xchg
pop
cmp
jns
arpl
scas
fimuls
push
inc
inc
xor
ss
mov
lahf
sbb
and
xchg
sub
sub
popf
push
js
jns
dec
lahf
pop
lahf
pusha
das
loop
dec
xor
push
jb
outsl
fdivrs
cmp
and
mov
in
ret
dec
ret
pop
dec
lret
ss
in
je
jns
mov
mov
dec
mov
clc
dec
rolb
dec
dec
dec
fisubrs
jns
popl
lcall
cmp
in
loopne
clc
js
jg
mov
das
jle
ret
adc
jmp
and
inc
adc
dec
pop
dec
fs
and
cmp
cltd
and
cmpsb
push
xor
ds
out
push
sbb
test
pop
push
sti
imul
sub
push
enter
xchg
mov
push
mov
je
shrl
popf
jns
xchg
or
enter
jb
sub
les
shrb
push
ljmp
adc
adc
and
lea
fwait
adc
pop
dec
sti
sbb
push
stos
cmp
fistpl
dec
adc
xchg
cmp
and
jnp
enter
sub
push
pop
das
cmp
and
sub
xor
pop
das
cs
jl
dec
mov
mov
test
sbb
pop
fistpl
mov
xlat
out
test
popf
and
fimuls
ljmp
aad
stc
sub
and
jmp
jmp
pop
add
push
iret
xchg
xchg
add
push
dec
enter
and
arpl
fcmovnu
arpl
bound
inc
subb
addr16
inc
dec
sub
pusha
dec
mov
pop
sub
pop
js
jmp
jle
outsl
les
lret
data16
lcall
inc
adc
sahf
sub
xor
push
fimuls
mov
sbb
sbb
ja
mov
inc
and
and
push
jns
fs
repnz
pop
cmp
and
sbb
xor
and
xchg
es
mov
das
test
jge
cmp
dec
loopne
daa
repz
cmp
in
jp
mov
mov
mov
adc
dec
sub
push
and
sbb
and
int3
scas
mov
adcl
pop
call
adc
dec
jl
fs
cmc
sub
scas
inc
sub
mov
pop
mov
jbe
into
and
pop
sbb
fwait
sti
push
push
sahf
mov
ds
fists
cmpb
cmc
and
stos
dec
push
dec
inc
mov
push
sarl
sub
pop
insl
pop
pop
add
jbe
mov
std
sub
push
pop
pop
sbb
push
addr16
dec
sbb
sub
push
add
push
in
jp
pushf
cmp
jl
shl
cmp
pop
daa
and
sahf
lcall
sbb
ljmp
sub
in
daa
ja
test
and
mov
cs
std
lcall
sub
sub
out
sub
hlt
fcompl
push
and
out
jge
xchg
je
dec
add
ret
jle
mov
daa
pop
sub
call
arpl
ss
das
jb
push
inc
xor
popa
fdivrs
push
mov
add
lds
hlt
out
lods
das
pop
cli
jo
insl
popa
pusha
sub
cs
sub
andl
cmp
cmpb
and
inc
insl
mov
js
inc
cmp
push
sub
xchg
nop
mov
imul
adc
and
dec
jb
fdivrs
mov
stc
loopne
nop
sub
bnd
ret
out
pop
push
sub
das
insl
pop
test
sub
jp
addr16
cmpsl
inc
pop
jecxz
xor
xchg
inc
daa
add
inc
das
dec
push
mov
mov
xor
subb
rol
jmp
dec
and
jg
push
insb
sbb
in
arpl
sub
movsl
adc
icebp
pop
outsb
add
and
ffree
cs
pop
cmp
cwtl
or
pusha
out
rcr
cld
pop
in
cli
sub
xor
jg
add
inc
pop
cmp
jae
fld
cmpsb
arpl
xchg
movl
mov
adc
push
cli
cs
enter
fwait
roll
loopne
push
and
imul
dec
mov
adc
pop
jl
addr16
inc
ficompl
jae
cmpsl
enter
shr
jl
arpl
out
xchg
repnz
pushf
shlb
mov
mov
call
mov
out
movsl
xor
and
push
push
scas
js
rol
mov
dec
enter
addr16
sub
data16
mov
cmp
lods
out
dec
pop
ret
sub
ret
test
sub
add
pop
sahf
bound
pop
jle
into
xchg
mov
add
push
mov
insl
or
pop
xchg
sbb
pop
xchg
xor
arpl
test
xchg
adc
xor
sar
fstpt
inc
cmp
fcoms
imul
sub
stos
cmp
jle
popf
nop
pop
daa
pop
sbb
xor
mov
mov
adc
inc
addl
adc
fcom
shlb
ret
and
mov
dec
add
scas
pushf
aas
xchg
fists
mov
imul
push
lods
mov
es
xchg
outsb
xchg
mov
push
insb
and
pop
bound
xchg
pop
cmp
es
ja
inc
inc
rolb
scas
divb
out
inc
scas
mov
sub
pusha
push
sahf
push
push
inc
lahf
adc
lcall
rclb
sub
outsb
push
and
fiadds
jb
dec
sbb
xchg
dec
clc
cmp
sub
add
inc
inc
push
hlt
jae
jp
push
insb
xor
mov
and
fs
lods
and
mov
mov
in
and
enter
bound
add
and
dec
movsb
sub
pop
scas
push
xchg
inc
ds
and
pop
inc
xchg
pop
fldcw
outsb
add
fbld
jecxz
fwait
push
and
imul
sbb
mov
mov
lret
sub
pop
addr16
add
mov
sti
shrb
inc
push
pop
scas
hlt
pop
scas
dec
std
ja
sahf
fsub
cs
std
xor
push
jecxz
jg
jns
icebp
insb
and
outsl
cltd
daa
arpl
inc
fsubl
inc
decl
jno
pop
pop
inc
inc
pop
cmp
cmpsb
dec
jp
mov
mov
adc
lahf
mov
dec
jge
leave
test
and
fs
adc
fnstenv
jle
sbb
jle
cmp
and
mov
stos
mov
and
fs
lcall
xchg
bound
addl
jge
cltd
sub
rclb
arpl
mov
dec
xor
mov
addb
fnstcw
xor
jae
call
sbb
mov
rcl
inc
mov
dec
adc
cmpsb
and
push
insb
sbb
ss
loopne
pop
insb
xor
or
add
push
dec
inc
pop
inc
xchg
cltd
sahf
dec
xor
add
inc
movsl
jbe
sub
sar
das
xor
mov
xor
inc
mov
add
dec
jae
inc
xor
and
inc
out
sub
iret
push
ja
fldcw
cmpsl
sahf
faddl
mov
pop
jns
mov
imul
addr16
mov
jg
sbb
or
pop
dec
data16
cwtl
test
inc
adcb
pop
sbb
jae
and
sbb
mov
repz
adc
mov
xchg
das
push
mov
sahf
ret
jl
js
dec
jb
inc
mov
xchg
pop
imul
jae
movsl
aam
add
mov
mov
lcall
bound
lods
fadd
pop
sub
loope
ja
xor
pop
cltd
pop
roll
iret
jbe
clc
mov
dec
sbb
pop
jp
pop
dec
ret
inc
mov
cmp
or
lret
pop
cmc
inc
dec
xchg
gs
idiv
inc
lods
xchg
jae
jg
and
mov
fistps
imul
pop
and
lahf
and
addr16
push
pop
ss
scas
cmpsl
or
jecxz
mov
inc
jae
loopne
mov
add
xor
iret
das
inc
and
insl
and
fucomip
mov
negl
mov
test
fwait
adc
mov
js
dec
ss
data16
cmc
fwait
addr16
dec
fs
inc
int
arpl
cmp
aam
inc
std
addb
mov
push
aaa
ljmp
ds
movsb
and
push
aaa
scas
cltd
orl
scas
stc
test
cwtl
insl
cltd
lmsw
insl
add
fistpll
pop
sbb
fdivs
cmc
arpl
and
and
scas
pop
hlt
fstpl
cmp
pop
add
jmp
arpl
imul
fs
and
push
aam
sbb
inc
sbb
arpl
imul
dec
xor
inc
or
inc
lret
fistl
inc
notl
fadd
out
inc
outsb
xchg
inc
in
mov
arpl
addr16
lret
test
xor
inc
call
inc
stc
mov
pop
xchg
movsl
push
sub
out
rcl
out
into
arpl
mov
push
adc
call
cwtl
aaa
fistpl
pop
cmp
rcrl
pushf
pop
lds
ds
fcmovne
xor
das
mov
repnz
push
inc
xor
sub
jb
dec
in
mov
repnz
in
jmp
inc
sbb
mov
loop
pusha
xchg
inc
and
mov
pop
push
fwait
inc
movsb
js
push
fisttpll
dec
sub
push
jb
dec
lods
filds
daa
ss
popf
xchg
or
fildll
mov
mov
out
aam
inc
add
and
and
add
jns
hlt
lock
es
ret
es
xchg
lods
cltd
inc
shr
pop
inc
rorl
or
adc
xor
ret
cmp
ret
pop
fstps
arpl
pop
sub
adc
inc
jle
and
iret
xor
xor
fdivl
inc
cmovb
cli
sbb
mov
sub
and
inc
int3
call
in
and
dec
dec
mov
cltd
gs
cmp
fdivrs
mov
xchg
mov
or
fsubs
or
jl
jns
pop
jno
das
cmpsb
and
push
mov
sbb
imul
in
test
lcall
jae
and
sbb
push
fsubrs
pushf
xchg
icebp
push
pusha
outsb
xchg
or
imul
pop
outsb
cld
fisubrl
cmp
xchg
insb
mov
dec
aaa
sar
push
dec
adcl
in
sbb
sbb
pop
mov
out
icebp
mov
inc
insl
lcall
xchg
xor
nop
cmp
or
xchg
xchg
pop
inc
inc
push
das
sbb
add
dec
out
ret
fstpl
jp
and
imul
inc
roll
inc
jns
push
adc
pushf
loopne
mov
inc
cwtl
jae
add
bound
into
dec
and
fnstenv
insb
xchg
sahf
sub
pop
mov
sbb
sahf
jne
xor
sbb
xchg
popf
jns
xlat
fwait
pop
inc
fimull
call
mov
cltd
push
dec
out
in
out
popa
xchg
imul
lcall
jp
xchg
add
rolb
aas
mov
xchg
inc
out
jmp
cs
jle
pop
test
cld
or
out
pop
add
pop
test
cmpl
jecxz
out
jnp
stos
adc
roll
gs
cmp
test
scas
ja
iret
scas
push
mov
lahf
dec
outsb
mov
adc
mov
push
mov
cs
add
inc
sub
loop
cmpsl
cmp
mov
or
pop
fstpt
add
xor
mov
into
mov
inc
jl
popa
cli
scas
xchg
pop
mov
je
lcall
jne
adc
inc
fstps
mov
dec
sbb
jl
inc
ret
push
push
imul
pushf
push
and
jecxz
and
das
loope
sbb
and
cmp
in
jb
cltd
scas
stc
data16
repnz
xchg
mov
cmp
mov
jmp
inc
jae
test
fcoml
shll
inc
fdivs
cltd
jmp
std
cltd
cmp
push
mov
scas
loop
mov
mov
js
subl
xrelease
inc
xor
call
test
inc
bound
cmp
dec
xchg
bound
add
pop
cmpsb
adc
push
lock
stos
stos
cmp
cmp
jle
xchg
inc
mov
add
sti
push
push
rcrb
clc
int
sbb
jecxz
add
es
jo
test
cmp
and
inc
sahf
mov
push
shlb
insb
cld
and
lahf
or
mov
out
cs
js
cmpsl
bound
sahf
xchg
mov
jae
xchg
and
lods
insl
js
jl
popa
jl
xor
push
add
daa
fs
push
rolb
sub
push
pop
adc
xor
add
jnp
ret
rcrl
jle
push
or
push
in
xchg
push
add
or
xor
imul
and
xchg
in
insb
sbb
data16
mov
das
push
daa
adc
add
test
sbb
and
push
sub
jns
adc
sub
sub
lcall
cs
shl
movsl
push
adc
outsl
jb
add
fnsave
jp
push
jp
xchg
roll
pushf
popa
nop
mov
jecxz
test
aad
outsl
cs
adc
adc
jae
stos
imul
jle
push
sub
pusha
jbe
push
movsl
lahf
sbb
pop
add
mov
aaa
movsl
jl
push
call
test
dec
lds
lds
es
std
and
lods
es
and
cmpsl
insb
xor
inc
mov
mov
shll
js
mov
mov
inc
sbb
scas
rcrb
stos
dec
arpl
scas
sbb
xor
push
mov
inc
jle
mov
scas
jmp
mov
push
loope
icebp
jp
push
inc
test
popf
mov
daa
dec
pusha
sbb
rclb
jp
jecxz
ds
mov
das
jno
scas
jae
movsl
jae
stos
aaa
jecxz
jmp
or
cwtl
cmpsl
push
jb
mov
lods
lahf
mov
rcrl
sbb
repnz
out
cmp
nop
cmpsb
add
iret
pop
ja
out
mov
std
scas
xchg
mov
nop
scas
fadd
repnz
cmp
scas
out
sbb
cli
mov
loop,pn
jnp
stos
mov
mov
xor
test
pop
cmp
xchg
mov
popa
je
xor
inc
sub
cld
add
js
cmp
orb
fdivr
sbb
jae
mov
jle
mov
jns
inc
fstl
bound
and
fstpt
push
mov
mov
jge
mov
stos
push
xchg
popf
scas
xor
inc
jae
add
inc
std
pop
jg
cmpsb
jg
into
mov
stos
push
insl
rclw
iret
inc
and
test
and
lock
and
shll
pop
mov
test
lods
mov
shrl
cmpsl
jae
sub
xor
inc
outsl
fsubs
cmpsl
aaa
rorb
cli
gs
mov
dec
mov
ret
mov
ret
bound
push
ss
push
mov
outsl
repnz
dec
test
lods
out
jae
addr16
and
sub
or
xor
xor
jns
inc
iret
lahf
sbb
cmp
stc
inc
test
and
cmpsl
retw
jle
pop
testl
dec
xor
jg
jp
xor
dec
and
and
dec
push
stos
and
iret
mov
lahf
in
mov
mov
or
mov
jo
cmp
xor
inc
ds
pop
sbbl
sbb
fistpll
mov
jl
mov
sbb
push
push
inc
fdivr
adc
shll
jo
and
mov
cpuid
and
cwtl
and
mov
data16
and
cltd
cs
insb
mov
adc
and
push
orb
xchg
dec
jge
pop
push
dec
aam
stos
jb
push
xor
jbe
adcl
mov
stos
mov
gs
pop
ret
and
insb
es
jecxz
xchg
scas
testb
movnti
jno
push
gs
push
sbb
ds
jg
movsb
cs
jg
loop
idivl
cmp
rcrb
cmp
cld
mov
sbb
test
clc
outsl
nop
adc
inc
movsl
mov
mov
pop
sbb
push
movsl
lds
dec
shlb
scas
dec
pop
popf
aas
jbe
inc
jle
mov
int3
adc
push
into
and
dec
test
xor
dec
and
add
push
jns
scas
arpl
iret
scas
sarl
push
jo
mov
cmpsb
cmp
ret
dec
pop
xchg
and
push
outsb
faddl
mov
mov
je
sarb
jbe
inc
das
mov
test
bound
pop
xchg
data16
bound
pop
and
in
sarl
cmp
xchg
mov
pop
int3
pop
and
inc
add
add
and
iret
cmpsb
mov
inc
cmpsb
scas
rorb
iret
mov
and
xchg
or
and
mov
or
cmpsb
push
mulb
nopl
xor
inc
pop
das
jns
scas
fsubl
fiadds
loop
out
mov
pop
jl
movsl
mov
dec
mov
dec
lahf
mov
lods
xor
mov
out
nop
out
rorb
dec
lods
loopne
push
shrl
scas
out
lcall
mov
out
sbb
mov
je
insb
aad
and
sub
addr16
out
xor
test
out
mov
mov
cwtl
imull
popa
sbb
mov
out
scas
loop
jmp
mov
inc
nop
mov
jp
sahf
inc
fcoms
mov
fdivrp
divb
add
inc
pop
out
icebp
inc
daa
mov
and
pushf
mov
mov
and
jle
xchg
push
pop
push
inc
scas
adc
aaa
fadds
dec
cmp
inc
loop
andb
mov
scas
mov
inc
sbb
or
ds
inc
mov
cmc
jae
out
out
and
dec
popf
jae
ret
add
insl
insb
sub
mov
insb
imul
sub
mov
pop
mov
xchg
mov
and
mov
and
mov
call
insb
cwtl
mov
test
mov
daa
cmpsb
jge
push
rorl
inc
addl
arpl
cmp
adc
shl
popa
jns
mov
push
mov
fnstenv
les
inc
movsb
xchg
cmpsl
out
pop
mov
cmp
ds
xor
xchg
js
daa
pop
push
negb
pop
push
das
mov
aam
daa
insl
lcall
inc
shlb
cmp
je
jg
xchg
lods
sub
scas
popf
test
popf
adc
mov
xor
and
hlt
lods
push
jne
repz
xor
xor
mov
inc
sbb
pop
scas
icebp
jg
push
pop
repz
sahf
aaa
imul
clc
inc
mov
int3
insb
inc
dec
in
ret
call
push
cwtl
and
lcall
inc
jg
imulb
push
jecxz
xor
pop
and
mov
mov
fs
cwtl
cltd
inc
test
shrl
inc
mov
movsl
adc
jae
pop
pusha
pop
cli
fwait
mov
icebp
jnp
cmp
sti
push
adc
jl
fwait
xchg
xor
jno
das
add
push
cmpsb
xchg
in
jp
hlt
ss
mov
adc
dec
jns,pn
mov
int
jae
and
mov
and
insb
inc
repnz
and
xchg
adc
push
xchg
cmpsl
sti
iret
inc
nop
mulb
xchg
cmc
mov
mov
inc
roll
mov
xor
std
cmp
mov
pop
and
jns
mov
loop
fidivrs
lret
sub
mov
mov
add
andl
test
and
pop
mov
fldl2t
inc
jmp
jp
inc
pop
mov
outsb
xchg
js
scas
aas
xchg
mov
xchg
popf
repz
mov
cmpsl
je
pop
push
mov
imulb
push
pop
into
stos
es
xor
sarb
xchg
mov
jae
scas
mov
jns
clc
cmc
sub
jae
xor
scas
loopne
mov
sbb
xchg
in
clc
adc
mov
popf
inc
jp
push
shl
add
dec
jbe
jmp
mov
mov
dec
dec
and
xor
andl
int3
jl
bound
js
sbb
xor
adc
xchg
sbb
mull
inc
inc
mov
cmp
add
inc
cld
push
insb
dec
pop
push
push
bound
popa
in
divb
add
dec
fwait
sub
add
pop
lock
fidivrs
inc
mov
fsubs
fisubl
push
jbe
cmpb
cli
cmpsl
inc
popa
loop
frstor
fistpl
xor
pop
fnstsw
fnsave
pop
xchg
dec
pop
ret
fcomps
push
orl
cmp
adc
andb
adc
es
repz
push
xor
lods
mov
arpl
cs
jne
fdivrl
rorl
lock
inc
enter
push
scas
mov
das
jl
movsl
lock
ds
inc
lods
xchg
jno
test
pop
mov
popa
pop
stos
inc
pop
add
outsb
popf
cs
cmc
addl
and
stc
cmpsl
ret
xchg
scas
rcrl
xor
mov
pushf
loope
arpl
gs
inc
xchg
mov
hlt
rcrb
arpl
and
dec
loope
daa
xor
aas
cmpsb
mov
sub
push
clc
xchg
pushf
cmpsb
stos
inc
testb
inc
inc
sub
jmp
fstpt
mov
rcrb
push
mov
fdivr
mov
inc
jle
cmpsb
in
mov
test
push
xchg
mov
hlt
or
ds
fwait
xchg
scas
push
sbb
daa
test
mov
mov
and
xor
mov
je
ret
push
outsb
add
subl
inc
daa
ret
push
mov
pop
xor
sub
inc
mov
js
cs
mov
push
cmp
daa
jb
sub
cli
aam
rcll
pop
xor
pushf
test
mov
daa
xchg
push
fisubrl
je
les
pop
fdivs
mov
xor
divl
cmpsb
inc
xchg
inc
ficoms
xchg
imulb
jbe
push
sti
lret
mov
out
hlt
xchg
cmc
inc
mov
test
xchg
inc
in
xchg
push
in
jo
jae
loope
sbb
push
jns
push
les
push
sahf
mov
popf
push
push
pop
rclb
in
jle
mov
pop
xchg
test
test
sti
fdivrs
sbb
mov
sar
push
fnstsw
into
pop
mov
stos
xchg
in
dec
sub
mov
mov
cli
fs
je
push
and
xchg
jae
sub
aas
xchg
in
cs
cltd
nop
xchg
push
xor
sahf
and
lock
in
popa
pop
push
outsl
loope
arpl
movsl
xchg
cli
and
out
pop
jo,pt
xchg
adc
sub
call
jae
cmpsb
adc
test
push
pop
les
cmc
das
popf
push
sbb
lahf
pop
cwtl
inc
jbe
jne
jbe
cmp
fimuls
jbe
jo
jmp
addr16
inc
fidivl
idiv
out
dec
mov
aas
pop
stos
je
xchg
cltd
and
pop
bound
stos
ljmp
pop
push
jno
and
addr16
ss
sti
cltd
or
and
inc
fistpl
nop
sub
andb
xor
sub
xchg
mov
clc
ljmp
aad
sub
lahf
js
out
sbb
es
cmp
loop
lahf
mov
jnp
bound
and
xor
leave
test
test
or
mov
sbb
push
mov
cmc
jne
and
add
sbb
adc
dec
out
mov
daa
add
cmp
js
and
push
pop
sbb
push
add
cmp
adc
jp
sbb
test
sub
sahf
lcall
js
xchg
sbb
mov
mov
stos
lret
test
mov
xchg
out
ljmp
adc
or
repnz
out
stos
add
xchg
into
jmp
adc
cmp
inc
sbb
dec
or
ret
jp
movsb
mov
outsb
mov
jp
push
or
mov
inc
inc
pop
or
or
adc
and
mov
xchg
sub
fwait
jae
rcrb
outsb
js
xchg
jb
call
pop
dec
add
add
xorb
jle
dec
push
and
into
push
sbb
xor
add
inc
or
sbb
add
js
xchg
xor
push
mov
add
cmp
sbb
mov
sbb
ret
fwait
add
sarb
xchg
adc
dec
mov
mov
adc
lret
test
sbb
mov
pop
js
xchg
xor
addl
sbb
or
sbb
sbb
sahf
mov
sbb
adc
xor
dec
mov
out
sahf
ret
sti
out
sarb
inc
ljmp
sub
or
and
push
push
mov
push
sbb
ret
sbb
lret
adc
cmp
or
and
dec
sbb
inc
xchg
sbb
pop
pop
bound
bound
sahf
jp
ret
mov
sbb
xor
stos
lods
xor
push
push
sbb
loop
iret
ret
xor
adc
test
adc
dec
sahf
cli
sbb
pop
in
bswap
es
sbb
or
sub
outsb
arpl
rsqrtps
lods
sub
fisubrl
push
push
xor
push
add
adc
jb
dec
dec
adc
push
into
mov
push
xchg
sub
ret
xchg
rolb
sub
loop
fwait
mov
repnz
jnp
or
or
dec
scas
lcall
and
xor
ret
sbb
js
bound
jb
cmp
dec
sub
sbbb
data16
xchg
js
xchg
pop
mov
sub
push
lret
ret
sub
rclb
ljmp
cli
into
and
insl
push
or
adc
sub
sub
into
cmp
xor
xchg
push
pop
test
cmp
push
shl
outsl
jb
sbb
or
subb
dec
sub
sbb
mov
inc
out
ret
and
rolb
jle
dec
loop
and
into
aas
jnp
add
dec
sahf
and
ret
xor
and
inc
lods
xor
sub
push
ret
outsl
js
xchg
sbb
orb
xchg
sub
or
mov
dec
xchg
or
cmp
sbb
ds
push
xor
cltd
cmp
jp,pt
popf
fists
mov
inc
test
mov
push
in
lret
sahf
lahf
xor
cmp
sbb
shrl
adc
push
lcall
ret
ds
sti
lahf
adc
jbe
inc
or
xor
sub
push
es
pushf
lahf
arpl
fisubs
sbb
add
adc
ljmp
and
outsw
popf
arpl
addr16
push
push
sbb
mov
xchg
mov
push
sub
ret
push
fstpt
pop
cltd
or
jp
jb
lcall
inc
data16
repz
adcb
or
nopl
and
cmp
outsl
inc
fwait
or
xchg
arpl
inc
fwait
xchg
dec
xchg
lcall
or
jbe
pop
loop
ss
push
mov
fiadds
out
cmp
or
arpl
mov
jb
dec
imul
das
cmpsb
cmp
sahf
or
dec
jb
inc
dec
lahf
movlps
xor
add
aad
shlb
xchg
dec
xorl
scas
pop
cmpsb
cmp
sbb
inc
scas
dec
inc
mov
pop
mov
cwtd
sbb
stos
mov
or
sahf
sbb
or
push
add
dec
xor
inc
ret
mov
pop
lea
cmp
or
test
pop
inc
lea
fldt
pop
dec
push
pop
outsb
push
addr16
inc
jb
pop
push
ja
cmpsb
ss
mov
test
push
stos
lea
incb
lcall
je
push
sbb
adc
push
sub
fldt
push
dec
cli
ret
add
cs
dec
add
xor
dec
add
test
push
sub
sar
inc
push
lcall
je
push
sbb
dec
push
sub
jb
push
add
inc
stos
jae
push
sbb
dec
mov
push
add
sub
dec
orl
add
pop
add
add
adc
add
xchg
ret
sbb
cmp
add
cs
inc
outsb
fwait
mov
xchg
jbe
mov
push
stos
lahf
sub
cli
add
adc
scas
adc
sub
pop
scas
cmp
add
mov
mov
repnz
jb
dec
insl
lret
sbb
insl
sub
pop
scas
mov
xchg
dec
testb
out
push
sbb
lea
dec
mov
arpl
pop
push
and
arpl
ret
data16
push
aas
add
jb
aas
int3
pop
ss
pop
sbb
jle
sub
dec
inc
into
jb
xor
jae
push
and
push
push
and
jno
repnz
jno
fwait
jbe
sub
call
cli
lea
push
inc
dec
and
jne
mov
sub
pushf
and
sub
push
jp
mov
xchg
ds
dec
dec
stos
out
add
lcall
jb
mov
push
add
mov
sahf
adc
mov
shrb
and
cmp
pop
rcrb
sahf
cmp
mov
xor
and
push
or
xor
cmpb
and
mov
pushf
and
sub
xor
inc
sub
push
add
xchg
fiadds
popf
and
subl
ret
add
add
into
xchg
and
xchg
pop
lcall
fimull
icebp
sbb
out
pop
loop
scas
fmulp
sqrtps
mov
pushf
push
fisubrl
fisubs
pop
and
or
lods
add
addb
fdivrp
push
mov
dec
push
lea
jbe
mov
pop
dec
and
sub
insb
je
jecxz
push
adc
je
or
jne
sub
ret
or
inc
xchg
jae
push
add
lret
sbbb
sub
out
jmp
add
mov
mov
mov
lret
sbb
push
mov
push
sub
adc
mov
adc
test
sbb
add
dec
out
ret
sbb
subl
into
sbb
pushf
and
sub
sub
outsb
sbb
dec
ret
sbb
subl
sbb
push
adc
sar
push
sub
ret
sbb
lock
sub
sbb
sbb
jle,pn
adc
dec
adc
sbb
lcall
inc
lcall
jle
scas
inc
into
jae
push
adc
cli
add
mov
cmp
call
je
scas
inc
bound
push
adc
fwait
adc
sub
mov
ret
sub
sub
push
sub
push
adc
sub
sub
sub
and
sub
popa
add
mov
and
test
pop
shll
pop
inc
sbb
sbb
adc
pop
inc
adc
adc
sub
add
sbb
sub
test
inc
jp
lcall
jb
cmpl
mov
cmp
lcall
cli
pop
push
subl
add
jb
xchg
dec
mov
xor
sub
lret
add
ret
loop
and
mov
repnz
fisubrs
inc
dec
jp
inc
mov
fwait
sbb
xor
add
shlb
mov
xor
jb
adc
ds
int3
pushf
cmp
and
pushf
jae
sti
popf
sbb
aam
sbb
sbb
sti
sub
out
xor
ret
dec
nop
xchg
lea
cmp
cmp
mov
in
jl
pop
mov
and
jge
mov
and
dec
stos
call
scas
sub
jb
jae
pop
and
sub
push
stos
pop
into
mov
add
inc
bnd
jae
mov
mov
jbe
ljmp
xor
fdivrs
push
pop
add
icebp
dec
pop
testb
or
or
sub
dec
push
gs
push
or
or
push
sbb
es
or
lcall
jb
push
ss
dec
mov
push
or
stos
jb
push
cmp
xchg
je
pop
push
ss
jb
push
cmp
jb
rorl
mov
and
cli
lcall
mov
ret
pop
or
lahf
or
mov
lods
jb
add
scas
clc
xchg
cli
add
xchg
sbbl
and
jb
add
rorb
cli
add
clc
add
dec
rolb
aam
lret
push
inc
sub
sub
fwait
stos
sub
sub
addb
out
inc
xchg
add
pop
pop
and
dec
add
stos
sub
pop
ret
pop
fxsave
jb
sbb
pop
and
ss
push
cli
sub
adc
mov
rcrb
sbb
push
add
push
cli
lcall
test
push
je
push
and
outsb
adc
push
ss
rcrl
cmp
shlb
push
ret
sbb
add
arpl
movsb
ss
data16
cmpsl
ss
push
push
cli
lahf
pop
sarb
sbb
scas
fwait
pop
clc
scas
xor
adc
adc
push
sbb
adc
lods
js
sbb
adc
jbe
sbb
adcb
cmpsb
cmp
adc
lods
sub
cmp
ss
jb
adc
mov
push
dec
adc
mov
and
clc
repnz
lahf
pop
rcrb
fwait
push
sbb
movsb
jb
adc
sahf
outsl
pop
gs
ss
adc
lret
out
inc
ss
mov
and
in
adc
add
stos
lahf
sub
mov
testb
mov
xchg
outsb
cmp
outsl
sub
push
outsb
mov
cmpsb
ret
mov
sbb
sub
das
ss
mov
ss
or
ss
ss
mov
scas
cli
cwtl
mov
and
cwtl
cmp
ficoml
xor
ss
es
sub
mov
ss
lret
dec
and
cmpsl
push
push
sub
push
push
and
into
outsb
and
lcall
es
sbb
mov
cmp
add
cli
ret
ja
setp
scas
and
enter
pop
daa
ss
cli
lahf
es
push
andb
fiadds
and
repz
xor
adc
cmp
lahf
jb
cmp
out
push
push
dec
xor
jb
cmp
and
jb
cmp
clc
xor
sahf
cmp
cmp
mov
mov
mov
push
loop
cmp
add
out
aas
ret
sub
into
mov
adc
mov
aas
push
ss
mov
fcoms
cmp
lcall
pop
pop
jb
cmp
cmpsl
ss
inc
xchg
inc
sub
outsb
idivb
xor
mov
mov
hlt
imull
mov
dec
sbb
jne
adc
mov
or
or
test
sub
fwait
push
ret
pop
ss
dec
or
add
lods
sbbb
dec
rclb
xor
sbb
sbb
sbb
loop
imul
lcall
push
adc
xor
push
dec
xchg
sub
mov
adc
cmp
outsb
out
xchg
jnp
add
out
adc
adc
jbe
mov
out
sub
pop
fwait
add
out
out
std
pop
add
mov
fldl2e
sbb
inc
rolb
fiadds
xchg
cmp
mov
push
inc
jle
into
sbb
sub
dec
outsb
stos
sti
or
sbb
adc
jne
inc
dec
add
out
push
add
jp
cmpsb
sub
sub
add
xchg
add
imulb
push
hlt
jmp
adc
add
or
add
cmp
inc
scas
push
cmp
leave
ds
pushl
sbb
sub
push
push
loopne
push
cmp
pop
push
lods
imul
movsl
xor
cmp
sub
jp
push
notl
or
inc
mov
push
or
push
and
mov
add
ss
push
cmp
loop
dec
mov
sbb
sbb
int3
int3
mov
mov
inc
push
mov
inc
inc
adcl
adc
push
push
mov
sub
xlat
lcall
mov
xchg
lret
or
outsb
or
pushw
cltd
bound
dec
add
sub
lcallw
push
lcall
mov
jns
stos
push
mov
in
outsb
fwait
add
fisubl
popa
scas
dec
into
js
add
and
sub
xor
ss
add
fcomps
fdivs
out
out
jae
sbb
fstps
out
mov
and
jp
pop
sub
dec
rol
loop
add
int
sysret
mov
ljmp
fsubrp
mulb
ret
mov
add
test
stos
sbb
ljmp
sbb
insb
mov
dec
mov
and
outsb
add
sahf
fwait
ljmp
aam
xor
scas
ror
testb
into
stos
mov
outsb
add
dec
outsb
or
sar
inc
sbb
mov
mov
xchg
popf
shrb
mov
push
adc
jp
jp
xchg
adc
fld
subb
mov
mov
and
push
dec
push
pop
or
fldl
mov
sbb
shlb
and
lahf
cmp
scas
inc
lock
push
push
or
dec
mov
cmpsl
inc
fwait
mov
cli
pop
or
xchg
or
lret
push
push
test
aas
push
sub
test
outsl
mov
sbb
mov
pop
sub
jecxz
rorb
pop
and
sbb
nop
sbb
mov
xchg
inc
mov
push
mov
push
xor
dec
sub
scas
in
mov
jnp
iret
fidivs
pop
xorb
and
sub
dec
or
sub
xchg
push
mov
sub
mov
push
xor
fcomp
adcb
aas
sti
cmpsb
andb
mov
push
ss
call
rorl
ss
cltd
push
mov
push
xorb
mov
call
stc
mov
ss
cld
jp
arpl
lret
out
ret
lret
into
add
subb
bound
jbe
bound
cmpb
lret
sbb
and
lret
lcall
jb
ss
jb
insl
subb
dec
jle
enter
sub
pop
faddl
gs
xchg
outsb
push
lds
dec
leave
xchg
test
faddl
gs
jb
mov
mov
fdivs
push
and
pop
sbb
mov
jb
lds
dec
iret
cmp
or
lcall
sbb
aam
jb
push
mov
int3
adcl
pop
mov
sub
outsb
jp
push
mov
lcall
int
xchg
mov
add
xorb
ss
xor
ret
fcmove
mov
mov
cli
sub
fs
test
sbb
mov
pinsrw
lods
xchg
fcoms
jns
mov
out
mov
mov
or
scas
push
dec
pop
sub
xchg
mov
sub
test
sub
out
out
jl
xchg
pushf
or
jae
dec
lret
mov
dec
out
fdivrs
sub
dec
pop
lcall
sbb
mov
repnz
mov
cmpsb
loop,pn
cli
push
lcall
shlb
fwait
out
out
shll
mov
call
and
mov
inc
stos
and
fs
mov
push
inc
sub
add
add
push
jb
sahf
cwtl
repz
cmpsl
and
sahf
mov
mov
fildl
jno
sub
push
mov
das
lcall
fwait
pop
fisubs
fwait
cmp
add
lods
push
mov
pop
lods
mov
mov
dec
lods
int3
add
mov
inc
sbb
rol
ret
out
and
or
xorb
push
mov
stos
ss
pop
pusha
lcall
and
sahf
out
enter
push
rclb
adc
outsb
loope
xchg
rorb
stos
xor
mov
jae
bound
jbe
xchg
pusha
dec
jb
mov
out
test
ret
push
outsb
push
aas
sub
add
out
rcrl
testl
pushl
add
das
jae
dec
out
and
das
out
push
pop
mov
add
clc
mov
scas
sbb
sub
in
ljmp
xchg
push
mov
scas
ss
mov
stos
ljmp
fistl
shl
and
push
and
xchg
pop
mov
ret
pop
xchg
rcr
push
out
sbb
cli
sub
es
cli
mov
mov
push
bound
repz
and
fdivrl
scas
dec
sti
pop
cmpsl
ss
sti
jg
mov
fiaddl
mov
scas
stos
ss
inc
ficompl
scas
push
push
sub
clc
inc
jbe
rolb
push
bound
sbb
popf
inc
scas
xchg
push
sub
ss
clc
push
lahf
out
scas
inc
sbb
stc
das
xchg
data16
movsb
cli
xchg
hlt
mov
rclb
mov
mov
and
scas
sub
incb
ss
jae
pushf
movsl
enter
push
js
subb
jae
sbb
mov
sub
lea
ret
pop
mov
dec
adc
cmpsb
cmp
sub
call
ljmp
stc
inc
psubw
outsb
rolb
add
pusha
jbe
fimull
add
adc
add
ret
sub
push
scas
pop
rclb
sub
mov
std
jae
push
cs
lcall
pop
ret
push
xor
das
cmp
das
fwait
pop
repz
and
fcomi
and
xor
mov
das
push
cmpb
sub
lcall
lock
cmp
mov
rolb
lods
push
call
sub
scas
jae
loopne
dec
and
test
or
mov
frstor
cmp
lret
sub
outsb
into
cmp
mov
and
das
ret
and
es
in
ret
sub
test
dec
daa
fdivs
arpl
push
ret
pop
add
and
lcall
push
push
sbb
sbb
mov
push
pop
ret
pop
and
or
or
lcall
pop
out
ficompl
cmp
jae
mov
cmp
sub
lahf
cmp
mov
scas
jb
repnz
ss
mov
movsb
jge
jo
outsb
push
mov
out
cmpsl
mov
jnp
jp
hlt
ficoml
inc
mov
movsb
ss
add
push
sbb
push
out
add
sbb
sbb
sub
jb
sub
or
jp
push
bound
sbb
jo
xor
repnz
sbb
lcall
adc
sub
das
outsb
dec
add
stos
sahf
push
test
adc
and
sub
das
jnp
push
out
outsb
inc
sahf
out
ss
data16
mov
lret
das
jle
int3
mov
out
fwait
jle
add
movsl
bound
inc
mov
icebp
subb
sub
mov
in
mov
test
adc
negb
mov
push
adc
ds
or
negl
lcall
cmpb
sbb
mov
mov
xchg
pop
pop
cs
cmc
mov
mov
pop
popf
jns,pn
mov
into
lret
aas
adc
cmp
cs
ds
or
iret
xchg
adc
arpl
push
inc
pop
decb
inc
mov
lcall
mov
clc
add
and
add
dec
add
outsb
add
push
sbb
cmp
jl
ss
cmp
stos
cmp
or
dec
or
jbe
and
rolb
xor
add
ficomps
into
xor
fisubrs
loope
ret
mov
arpl
mov
shl
add
and
cmp
sahf
sub
mov
mov
data16
xchg
jno
rcrl
jbe,pt
into
xor
mov
sbb
ss
out
fldenv
xorl
push
into
sub
sub
and
fstpt
mov
movsl
and
ret
dec
fimuls
out
movsb
xor
push
lcall
pop
filds
mov
neg
loop
sbb
mov
or
ret
xor
cmp
test
pushf
data16
les
pop
mov
xor
lea
fisubrl
shlb
pop
cmp
test
je
push
sub
dec
shl
add
out
mov
clc
rcrb
iret
inc
jae
pusha
and
daa
rorl
inc
push
inc
jl
ss
fidivrl
lahf
iret
inc
pop
and
mov
lahf
int
bound
jbe
inc
lahf
iret
inc
pop
xlat
and
mov
lahf
int
bound
jbe
iret
inc
jae
and
mov
lahf
int
bound
jbe
sti
mov
mov
cmp
aad
ljmp
ss
ljmp
notb
ljmp
add
movsl
das
jmp
idivb
and
xor
ss
mov
movsl
das
call
and
xor
ss
sti
pop
pop
inc
dec
jmp
jmp
pop
inc
stos
ss
inc
sti
call
pop
mov
mov
bound
mov
lahf
in
bound
jbe
fdivs
int
bound
adc
out
fwait
decb
push
jb
sbb
incb
jb
ss
jp
fsubrl
pop
fwait
in
sbb
cmp
in
lret
cli
fsubrl
push
ss
lret
movsl
jnp
outsb
in
mov
out
in
shll
pop
mov
ss
stos
adc
fisubrl
loop
adc
sub
stos
ss
shlb
xchg
ficompl
pop
mov
inc
es
push
sub
push
call
and
ss
sub
fsubrl
mov
nop
stos
divl
and
dec
push
push
mov
mov
jle
mov
ficompl
es
mull
xchg
sub
mov
popf
inc
loop
stos
scas
push
sub
das
fsqrt
jne
fcoms
push
xchg
sbbb
sbb
or
int3
ret
push
add
push
lahf
cmp
push
sub
shr
repz
call
cmp
jb
xor
stos
lahf
pop
and
popf
cmp
push
add
push
push
xchg
pop
and
cltd
dec
xchg
and
fiaddl
icebp
push
and
sbb
and
in
sbbb
push
and
mov
fst
sbb
out
stos
add
mov
mov
mov
les
fidivl
repz
dec
jbe
mov
out
shlb
stc
sub
in
sbb
jbe
sbb
pop
add
xchg
pop
xor
push
ss
push
push
das
je
jle
dec
dec
ss
mov
push
jne
sbb
and
lock
adc
out
sbb
lahf
pop
mov
jg
lahf
aaa
sbb
push
sub
cmp
clc
adc
pop
cs
les
xchg
jge,pn
mov
push
lret
and
push
rorb
ficompl
repnz
adcb
loope
fiaddl
sub
lock
outsb
sbb
seto
inc
out
mov
scas
xchg
sahf
stos
ss
iret
cli
mov
jle
sub
push
mov
push
cli
out
xor
push
cmpsl
push
inc
in
es
in
pop
xchg
bound
and
jmp
aam
lcall
cli
mov
sbb
aas
jg
inc
mov
sub
ficompl
cli
aas
js
push
loop
add
fisubrl
ljmp
push
add
inc
jge
fiaddl
ja
lods
and
jecxz
xchg
fisubrl
dec
add
mov
cmpsb
sti
mov
pop
add
ss
fcmovu
ss
fiaddl
out
stc
fidivrl
in
fisubl
clc
mov
arpl
jle
aam
jl
shlb
es
pop
add
stc
aas
mov
sub
psllw
into
add
pop
sbb
mov
fsub
sbb
aas
xchg
outsl
lret
xor
testb
out
ss
loop
clc
cmp
rcrb
sbb
push
cmpsl
or
cmp
fmuls
cmp
mov
mov
adc
lods
adc
or
sbb
mov
pop
scas
mov
scas
iret
push
ucomiss
movsl
jle
movsl
aaa
mov
mov
inc
std
mov
push
mull
stc
mov
cmc
ret
into
das
add
or
cmp
cmp
push
push
dec
jecxz
xor
movsl
or
mov
std
sbb
test
jle
xchg
dec
repnz
movsl
and
sbb
aas
mov
stc
ss
shlb
pop
popf
ss
lock
xor
lcall
icebp
adcb
fsubs
mov
mov
and
fnstsw
movsb
ss
and
sarl
clc
pop
mov
cmpsb
fcmovnbe
ja
adcb
push
sbb
sbbb
xor
push
sub
aas
fwait
and
add
mov
jae
dec
or
mov
cmp
scas
andb
push
push
scas
push
mov
xchg
and
cmp
mov
cli
push
add
or
push
inc
in
rolb
or
mov
push
inc
jae
scas
sub
or
inc
in
pop
icebp
int
jecxz
testb
or
or
aad
xor
xchg
popf
cmpsw
cld
and
jle
shll
pop
sbb
or
lods
push
je
push
inc
rclb
jnp
popa
mov
xor
daa
cli
jbe
or
scas
pop
pushf
or
jb
cmpsb
mov
into
mov
mov
add
stos
repz
sbb
add
add
adc
and
movsl
stos
fwait
out
add
xor
dec
repnz
test
ss
out
add
es
adc
pop
add
stos
dec
dec
or
sbb
xchg
stos
fwait
sbb
ss
sbb
shrb
notl
inc
inc
and
cld
xor
cmp
and
pop
sahf
cmp
mov
rcrl
cmp
mov
shll
mov
js
sub
lcall
sbb
decb
and
cmp
popa
jno
sub
lahf
adc
sbb
or
bound
or
add
pop
lods
cli
stc
adc
pop
fidivl
bound
adc
push
mov
sti
jp
jl
pop
xchg
adc
xor
xorb
jl
cld
lea
sar
jbe,pn
hlt
das
adc
mov
out
and
repz
out
repnz
mov
dec
push
sub
fdivr
cld
lea
ret
enter
pop
adc
pop
mov
mov
push
fsubrl
push
cmp
adc
pop
dec
outsb
adc
jecxz
mov
ss
mov
inc
adc
sahf
adc
mov
or
out
mov
or
pop
insb
sub
ljmp
ljmp
into
and
ss
push
mov
or
sub
xor
dec
push
lret
aaa
xor
repz
ds
push
pop
fsubl
std
lret
or
add
inc
sub
mov
fsubl
std
lret
or
add
mov
or
jl
mov
cmpsl
lods
and
jecxz
or
ret
push
pop
or
mov
jecxz
or
shll
jbe
pop
adc
pop
ficoml
arpl
faddl
push
pop
or
push
aas
or
rcr
adc
or
add
xchg
push
popa
shll
hlt
popf
insl
inc
jecxz
jecxz,pt
pop
jecxz
ss
push
repz
jno
jp
and
inc
test
push
lds
push
and
mov
fnstsw
imull
outsb
inc
loopne
cmpsb
xor
dec
fsubrs
jle
and
call
and
mov
push
repnz
xchg
out
daa
push
es
outsb
stos
ss
inc
sti
call
pop
cs
lea
outsb
fidivl
repz
sti
jnp
pop
inc
and
mov
lahf
fnstcw
outsb
bound
jbe
mov
lcall
cmpl
std
jp
pop
xchg
pop
lahf
add
mov
in
je
outsb
inc
sbb
jno
outsb
movb
and
fnstsw
pop
scas
popa
clc
mov
mov
ds
and
sbbl
xchg
in
outsb
mov
iret
outsb
jnp
dec
outsb
jbe
xchg
es
outsb
rclb
ret
push
mov
sbb
mov
mov
xchg
push
xor
es
repz
movsl
sarl
sbbb
test
jg
push
cmp
xor
sbb
repnz
sbb
inc
xor
sbb
adc
bound
jbe
repnz
out
ds
sbbb
fmuls
and
daa
mov
iret
sub
jb
mov
mov
push
loop
shl
scas
pop
pop
dec
push
movsl
fs
push
lock
lods
fs
and
es
sbb
fucomp
push
lock
repz
fsubs
push
pop
dec
push
movsl
les
and
es
add
daa
enter
mov
fwait
and
dec
dec
jbe
cmp
add
or
push
movsl
sbb
call
xchg
aaa
iret
test
and
bound
push
push
lcall
xchg
into
push
push
fwait
push
push
cmp
sub
stos
or
xchg
fisubs
or
inc
hlt
jno
jbe
jmp
shll
mov
ss
push
shll
cmc
les
mov
inc
out
mov
mov
pop
jno
jbe
out
jmp
jp
jno
bound
outsb
and
sub
cld
ficompl
ljmp
cmpsb
and
out
xchg
mov
and
xor
sub
pop
cli
and
and
mov
jle
push
jecxz
add
daa
lcall
sbb
xor
and
dec
jle
lea
arpl
dec
sarb
jl
cmp
lea
cmp
cmp
and
pop
popa
and
cmp
inc
pushf
and
push
shrb
cmp
and
push
shrb
cmp
and
cmp
xchg
scas
and
mov
and
popa
and
scas
daa
push
mov
rolb
or
cs
inc
jbe
outsl
outsb
pop
dec
sbb
xor
xchg
sub
xor
xor
ss
adc
push
sub
and
fwait
repz
add
fwait
out
negb
je
push
add
into
push
sub
dec
xor
dec
xor
das
es
das
push
or
sub
push
mov
jmp
ds
xchg
xor
icebp
jns
xor
gs
mov
adcb
pop
jno
inc
cli
or
lods
fsts
dec
aas
mov
pop
push
inc
and
jecxz
and
mov
ss
test
pop
dec
orb
ds
and
repz
call
pop
inc
rorb
push
pop
push
or
and
ss
jg
loop
xchg
hlt
outsl
dec
pop
cmpsb
or
jae
and
ss
push
push
sub
stos
aas
jp
aas
clc
adc
fmull
ret
dec
hlt
push
push
mov
jb
mov
adc
mov
ds
test
ret
into
xchg
addr16
retw
dec
cwtl
pop
cli
ja
or
mov
mov
lea
pop
jmp
cmp
dec
and
fwait
push
arpl
push
rclb
cltd
loop
mov
jp
test
pop
push
inc
aas
mov
and
adc
ss
outsb
movsl
jbe
sarb
push
cmp
bound
mov
inc
inc
js
cmp
cld
lea
roll
inc
pop
pop
or
mov
lret
xchg
jbe
pop
xchg
stos
ss
push
repnz
fwait
and
mov
jae
cmp
clc
push
pop
adc
sbb
and
xchg
out
and
fnsave
call
mov
popf
mov
dec
ss
out
push
jmp
out
data16
sub
and
ljmp
jbe
repnz
leave
mov
dec
sub
jnp
popa
addb
sub
ss
fimull
shll
mov
add
push
daa
push
andb
ljmp
repnz
mov
xor
and
aam
add
dec
and
xor
ret
es
inc
mov
movsb
and
sub
outsb
cmp
mov
in
pop
js
ficompl
sbb
dec
daa
mov
jp
push
ss
pop
mov
sahf
pop
loop
push
dec
mov
lahf
mov
mov
mov
inc
xchg
out
inc
es
and
cmp
pop
pop
dec
ss
adc
out
cmp
daa
pop
jae
js
push
adc
cmp
cmp
cmp
sbb
lods
scas
scas
in
jb
cmp
dec
mov
cmp
in
add
cmp
xor
add
out
cmp
mov
cmpb
cli
pop
jb
adc
xor
sub
cmp
mov
cmp
xor
lea
rorl
jb
cmp
xorb
dec
pusha
jb
mov
add
addb
xor
push
or
xor
xor
add
mov
sub
daa
rcrb
and
ss
jb
popa
rolb
lret
lods
sbb
movsb
test
xchg
adcl
xchg
out
ds
pop
fldcw
jle
pop
fsubl
pushf
shr
inc
push
testb
test
xor
lea
jb
into
cmpsb
js
xor
jbe
and
or
enter
dec
cmp
inc
xor
pop
push
push
aad
rcrl
jnp
add
mov
pushf
mov
push
sub
out
int
ret
jl
mov
sahf
fisttpll
lock
lcall
dec
sahf
into
xchg
pop
fwait
cmp
mov
pop
add
in
cmpsb
imul
mov
mov
pop
xor
dec
dec
shlb
std
andb
and
rcrl
push
dec
push
push
cmp
out
shlb
rorb
push
adc
xor
clc
inc
adc
ss
dec
sbb
pop
popa
jnp
out
inc
add
push
fwait
jbe
push
xor
mov
push
aas
lock
shl
sub
push
aas
imull
outsl
push
popa
inc
push
push
aas
lock
push
aas
jb
mov
jns
push
jo
push
adcb
insl
rcrb
push
push
push
jnp
adc
mov
push
adcb
xchg
out
ds
push
faddl
push
dec
push
push
jmp
pop
movsl
pop
push
jnp
push
in
add
fstpl
dec
cmp
xor
ss
mov
mov
sbb
aad
sbb
clc
sbb
inc
sub
fstpl
sbb
inc
jecxz
test
cmp
mull
lcall
push
cs
out
xor
sub
outsb
add
push
mov
mov
test
fidivrl
jmp
rorb
orb
cmp
into
sbb
pop
cmp
push
push
add
mov
fisubrs
push
andps
xchg
call
test
ss
loopne
xchg
ffree
adcb
sub
mov
mov
xchg
sbb
jle
dec
subl
push
stos
stc
loope
mov
push
mov
cmp
popf
mov
aas
jmp
aas
adc
cmp
pop
mov
inc
lahf
dec
push
test
mov
insb
aas
add
cld
dec
push
xchg
mov
mov
pop
into
bound
add
xchg
xchg
loop
cmp
or
fists
arpl
pop
fidivs
shll
mov
sbb
scas
in
lret
out
mov
push
stc
pusha
pop
pop
push
inc
ss
jbe
enter
xchg
in
lret
jbe
push
cs
outsl
popa
pop
pop
ss
xchg
xchg
rclb
mov
sbbb
mov
ss
ljmp
ja
xor
andb
addr16
add
cmp
adc
ss
shrl
push
sub
pop
inc
fs
cli
push
incb
bound
gs
hlt
mov
ja
les
fidivl
repz
fidivl
mov
mov
xchg
call
mov
sbb
jnp
pop
es
ss
fs
sub
ds
flds
gs
push
push
mov
iret
adc
jp
and
lcall
cli
sbb
ss
jb
adc
pop
lock
mov
out
jecxz
jb
mov
cli
mov
pop
cli
push
and
cmpl
jb
gs
call
jg
and
ss
jb
xchg
fdiv
addr16
lahf
cli
push
ss
mov
or
repnz
into
lock
subl
pop
pop
jbe
sarl
cmpsb
ds
subb
pop
repz
and
and
fildl
fistps
sbb
ret
rcl
out
jo
push
test
cli
push
test
inc
sti
jo
mov
cmpb
test
fwait
jno
jbe
in
and
sbbb
bound
add
stc
or
jbe
es
out
push
push
cmp
add
cli
push
and
daa
ret
and
ja
pop
xorb
ja
mov
or
push
push
cmp
inc
loop
rorb
dec
sti
sub
inc
jne
bound
arpl
gs
fsub
sarb
andl
xorl
and
cmp
and
addb
xchg
jb
add
xor
dec
ss
arpl
aaa
cmpsb
and
cmp
xchg
loop
mov
cmp
push
xchg
mov
dec
push
das
pop
mov
rcr
push
jecxz
cmp
jae
sbb
adc
fs
and
cmp
sbb
into
and
push
lret
fisubrl
and
ds
push
xor
mull
adc
adc
add
lods
jl
je
arpl
aas
dec
inc
push
sub
xchg
ret
negl
add
mov
out
inc
sub
fiadds
adc
js
adc
add
inc
sbb
sarl
outsb
scas
and
repnz
aas
mov
mov
mov
movsl
rcrl
mov
mov
xchg
loop
mov
mov
jb
es
add
xchg
mov
je
iret
fidivrs
xor
ljmp
cmp
inc
scas
and
int
les
ret
dec
and
adcb
sub
lods
repz
rcrb
pop
jns
push
jp
push
add
stos
fwait
mov
rolb
cmp
mov
mov
testb
scas
arpl
data16
xchg
data16
andb
and
es
stos
repz
adc
cmp
cs
adcl
pusha
test
pop
and
pusha
cmpl
add
mov
test
test
ret
and
fwait
sbb
xor
fwait
mov
pop
lret
rolb
scas
push
lea
pop
outsl
cltd
xor
push
pop
into
sahf
xor
and
lahf
stos
repz
xchg
shll
add
pop
stos
lods
inc
je
popf
sub
notb
xchg
jb
pop
rcrl
jp
adc
mov
cmpsb
xchg
cmpb
test
push
sub
daa
sahf
xor
pop
bound
jbe
hlt
scas
sub
inc
lcall
sub
outsb
sub
sbb
clc
xchg
jb
pop
es
mov
adc
mov
dec
push
inc
cwtl
out
mov
sbb
ret
fimull
push
mov
xchg
popf
xchg
rclb
testb
jmp
dec
ss
mov
sbb
pop
ss
mov
xchg
adc
lahf
push
pop
adc
pop
pop
inc
xchg
xchg
pop
xchg
daa
xchg
jno
add
xor
mov
pop
cmpsl
ss
dec
das
pop
inc
jbe
pop
andb
sbb
ljmp
xchg
sbb
mov
jp
xchg
sub
ss
push
scas
sub
movsl
and
dec
push
mov
testl
xchg
stos
cmpb
sti
stos
xor
outsb
xor
clc
inc
push
jbe
dec
sbb
test
xchg
push
lret
adc
dec
sub
out
mov
xor
pusha
mov
ss
adc
xor
daa
test
fs
cmp
aam
rcll
push
push
inc
or
mov
pop
scas
scas
pop
xchg
sub
clc
mov
dec
push
add
pop
and
test
pop
outsb
add
sub
jnp
xor
mov
cli
adc
and
ss
sub
sub
loope
mov
ss
mov
repz
jnp
sub
mov
xor
pop
ljmp
jbe
pop
ret
mov
mov
aad
mov
cmpsl
out
lods
int
stos
jb
sub
mov
sbb
cmove
xchg
jb
push
fdivrs
mulb
arpl
push
push
mov
push
cmp
sub
ss
repnz
jb
movsl
jb
and
jae
fcomp
popf
mov
pop
push
daa
jae
xchg
adc
mov
mov
lahf
jle
pop
mov
and
sbb
fidivl
repz
shll
and
push
lahf
and
hlt
add
stos
ss
jl
das
pop
mov
pushf
cmpsl
loop
mov
mov
xor
decb
out
mov
sub
dec
shll
into
data16
pusha
les
ss
rorb
pop
push
movsl
andl
mov
adc
push
ss
push
dec
repz
inc
ljmp
add
xor
inc
pop
dec
jae
shrl
mov
xor
cmpsb
dec
xor
push
test
dec
push
popf
inc
mov
repz
xor
ljmp
xchg
mov
xor
jle
enter
mov
pop
data16
push
aaa
out
mov
jae
push
sahf
sbb
repnz
mov
xchg
int
lods
test
xor
mov
push
xor
mov
mov
adc
dec
xor
push
dec
call
dec
pushf
mov
mov
cmp
sub
scas
cmp
add
jb
cs
push
dec
mov
mov
sub
iret
mov
into
mov
xor
dec
popl
gs
mov
dec
sbb
es
mov
scas
test
dec
add
cmp
jb
lcall
sbb
test
ret
xor
dec
cmpsl
ss
fildl
jbe
dec
inc
sub
lcall
and
jo
jb
inc
ret
inc
cmp
test
ret
inc
push
inc
cmpsl
ss
fildl
jo
dec
inc
sub
out
es
lcall
jb
inc
mov
mov
notb
ss
inc
add
push
lahf
inc
ss
jb
pop
imul
sbb
lret
pop
adc
push
dec
dec
or
mov
push
mov
clc
pop
push
pop
dec
pop
outsb
enter
pop
aaa
fwait
push
pop
sbb
bound
ret
roll
rorb
push
jp
add
sbb
dec
pop
into
or
pop
mov
clc
pop
sbb
jp
pop
fwait
mov
lcall
sbb
jle
pop
pop
ss
mov
jb
and
fmull
shlb
push
cmp
and
decb
push
mov
sbbb
push
ss
fwait
es
push
frstor
ss
xchg
dec
mov
dec
loope
ss
add
cld
adc
and
sarb
sub
or
inc
pop
mov
lcall
pop
js
adc
adc
sub
sub
xor
push
dec
add
iret
xor
push
loopne
xchg
sbb
inc
push
sbb
add
xor
push
movsl
mov
mov
mov
jns
out
sub
xor
xor
icebp
shlb
ljmp
outsl
out
add
sbb
xchg
push
xor
popf
mov
push
popf
mov
push
popf
mov
push
mov
sub
data16
mov
repnz
sub
sub
xchg
push
fisubs
add
inc
out
cmp
add
hlt
or
sub
sbb
scas
sub
push
sbb
push
cs
inc
fiaddl
sub
xor
mov
mov
ret
and
outsb
add
std
cmp
mov
ret
fwait
mov
push
push
jb
aas
mov
call
sahf
bound
adc
lret
mov
iret
jle
mov
cmp
jb
push
mov
cmp
mov
lcall
mov
lcall
ret
mov
sub
mov
and
and
sbb
lret
add
sub
lahf
add
and
lret
pop
jo
push
enter
mov
inc
jno
push
movsw
pop
jl
pop
ret
pop
frstor
mov
add
sub
sbb
ret
dec
push
sbb
cli
addb
lret
leave
ja
sub
leave
pop
arpl
mov
and
cli
cmpsb
es
mov
add
pop
mov
cs
shr
xchg
cwtl
idiv
clc
dec
aad
add
xor
inc
sbb
xchg
lcall
ret
push
add
cs
repnz
push
into
add
and
push
fiadds
fidivl
pshufw
orb
popf
xchg
testb
into
pushf
cmc
inc
lcall
push
iret
mov
ss
lods
push
aaa
out
cmpsb
cmp
lcall
sbb
fdiv
mov
mov
fsubrl
mov
dec
mov
aas
and
ret
xor
rorl
dec
es
fisubrs
divb
lcall
push
mov
daa
cmpsb
fisttps
mov
push
xor
mov
ss
sti
mov
pop
pop
dec
push
ss
idivb
pop
mov
andb
popf
add
roll
stos
rcll
sbb
ss
sti
adc
subb
xchg
jle
pop
jb
inc
addb
mov
cmpb
pop
gs
mov
push
aaa
sub
ss
pcmpgtb
cmpsb
mov
and
out
ss
mov
dec
cmp
lds
ljmp
xor
push
mov
movsl
daa
push
jnp
cmp
mov
ss
lahf
and
jbe
fistl
imulb
pop
icebp
cmpsb
push
adc
fdivrs
mov
ret
cmpsb
out
ss
sti
pop
icebp
cmpsb
repnz
popf
pop
loop
inc
fsubrp
ret
xlat
in
cmpsb
bound
jbe
hlt
cmpsb
pop
add
aas
jg
pop
dec
fistpll
jb
sbb
jnp
rclb
inc
mov
notb
sti
adc
push
mov
xor
mov
mov
rcrb
popl
xlat
out
popa
fsubrs
push
daa
push
js
push
mov
add
sbb
stos
jle
add
jnp
push
loop
aaa
xchg
jbe
push
popf
push
adc
xchg
jl
call
ja
or
dec
jp
xchg
jbe
pop
dec
inc
fidivl
repz
jbe
lods
push
stc
and
outsl
mov
mov
xor
jno
dec
ss
mov
push
outsb
out
test
outsb
out
test
aad
stos
pop
mov
push
scas
fistpl
rclb
push
pop
push
xchg
lret
pop
cs
lahf
mov
movsb
bound
fsub
push
out
ss
mov
lcall
loopne
mov
fiadds
jl
repnz
scas
push
mov
push
sbb
sub
lds
push
aaa
push
pushf
out
fsub
xchg
movb
push
sub
stos
cs
add
daa
shrl
ja
mov
or
jb
cmp
es
fwait
ljmp
push
cs
inc
inc
scas
jbe
aam
sar
rcrb
push
sub
clc
repz
sub
or
dec
xor
dec
jbe
sbbb
sbb
sub
push
and
add
push
xor
adc
xlat
lahf
dec
cmp
aam
sub
icebp
mov
mov
add
addr16
jge
push
xor
out
fcomps
hlt
pop
das
insl
push
subb
inc
scas
rclb
out
xchg
and
lcall
push
sub
sub
push
ret
repnz
lcall
es
movsl
push
pop
sbb
test
call
lahf
pop
push
ss
inc
jo
ds
fldenv
cmc
sbbl
and
jmp
and
jp
test
ss
out
sub
push
ss
out
repnz
ss
into
mov
push
out
and
and
dec
push
ss
sti
loop
push
in
and
and
dec
push
ss
bound
xor
inc
mov
into
mov
scas
and
movsl
pop
mov
sti
jo
mov
jp
movsb
pop
inc
xchg
ljmp
xor
fildll
bound
jbe
push
mov
loope
sbb
flds
mov
clc
cmpsb
out
std
ret
jle
stc
mov
mov
mov
adc
sub
add
sub
enter
ret
xchg
xor
sbb
repz
mov
addb
jnp
inc
cs
inc
xor
mov
dec
cmp
and
bound
cli
fcoml
jns
and
add
cmpb
stc
inc
and
fidivl
repz
cmpb
test
inc
mov
mov
cwtl
mov
mov
negb
out
push
arpl
cmpsl
and
rclb
jo
xchg
push
lods
pop
mov
jnp
rcr
and
and
xchg
mov
punpcklwd
add
and
jmp
dec
cli
xor
fdivrs
in
lods
pop
mov
ljmp
sub
es
fs
pop
jp
pushf
mov
jns
addb
push
inc
jno
scas
mov
pop
bound
fadd
xchg
mov
jmp
add
ss
addr16
mov
fs
faddp
fs
insl
mov
gs
gs
jp
scas
and
ret
sub
xor
dec
pop
mov
lahf
jns
dec
mov
jnp
stos
xchg
jbe
jnp
jl
into
xor
ss
sbb
cmpb
js
pop
ret
js
jb
sbb
cmp
sti
and
mov
push
push
sub
cmp
ss
dec
cmp
cmp
jb
arpl
inc
cmp
out
xor
inc
sbb
cmc
aad
sarb
ss
pop
dec
cli
and
subb
pop
cmp
push
jmp
push
test
cmc
data16
jle
mov
dec
push
lcall
bnd
mov
jns
xchg
ss
ljmp
mov
sub
push
push
mov
movzbl
ljmp
daa
push
ficoms
jb
push
cwtl
rcr
mov
mov
mov
xchg
in
mov
xchg
jecxz
mov
fimull
push
mov
dec
dec
sbb
cltd
repz
mov
cmc
sub
sub
jp
ds
clc
adc
xchg
loopne
nop
dec
push
jae
ficomps
push
xchg
testb
push
xorl
sub
jo
lods
push
mov
ss
sbb
inc
jbe
and
jbe
jb
dec
pop
ret
jg
mov
inc
pop
and
xchg
fcmovnbe
pop
sub
jns
and
xchg
out
mov
mov
faddp
jne
out
push
outsb
jne
std
pop
fdivs
dec
ss
mov
push
push
pop
fsubl
xchg
cmpsb
inc
xor
ss
std
jbe
add
mov
out
cmpsb
mov
ss
ja
cmp
add
mov
imul
push
sbb
pop
inc
mov
gs
rolb
sbb
das
inc
mov
lcall
dec
add
jb
addr16
pop
es
nopl
and
scas
stos
dec
push
setnp
sahf
pop
lock
nop
and
jp
fnsave
push
push
dec
daa
mov
and
dec
xchg
aam
popa
insl
push
or
testb
sbb
add
sbb
pushf
and
testb
sbbl
and
add
dec
push
pop
dec
loop
ret
xchg
xchg
fdivrp
jp
or
pushf
push
fisubrl
fdivp
jnp
cmp
and
sub
scas
jle
mov
fld
push
cmp
out
adc
pop
sub
aas
sub
push
adc
pop
lcall
dec
push
pop
pop
xchg
rolb
outsb
inc
daa
imul
ficomps
pop
and
outsl
pop
cmp
sbb
xchg
jl
ss
push
dec
add
dec
imul
dec
ss
sti
popf
lahf
dec
add
ficompl
sbb
push
sbb
xor
daa
sbb
pop
sbb
and
imul
dec
jae
out
ss
into
push
mov
mov
rcrl
sub
jae
rclb
jle
sub
sub
outsb
iret
sbb
jb
dec
xor
dec
ss
sti
xchg
iret
ficomps
inc
cmp
rorb
push
mov
xchg
ss
stos
or
cmp
pop
bound
mov
fidivrs
rdtsc
sbb
pop
and
in
aas
and
sbb
xor
arpl
fidivs
pop
out
test
push
iret
inc
ret
lret
cld
lret
push
jle
sub
call
out
and
jae
adc
xor
push
frstor
loopne
pop
scas
xor
push
mov
imul
adc
ss
ss
lods
jnp
push
push
enter
out
adc
push
lahf
mov
sub
ss
adc
and
ficomps
inc
jmp
inc
cmpsl
sbb
mov
mov
jmp
loop,pn
mov
mov
adc
lcall
push
push
xorb
sub
divb
pop
lahf
xor
cmp
xor
sbb
fistl
popf
loopne
es
mov
data16
push
negl
sar
lcall
sarl
pop
imul
lcall
push
dec
jbe
jns
pop
stos
ficompl
sbb
or
xchg
jbe
repz
stos
xchg
in
fisubs
jns
cmpsl
ja
subb
rcrl
xor
out
repnz
push
jp
dec
sub
scas
jne
cmpsb
pop
push
sbb
add
xor
xor
xchg
rol
ret
pop
mov
fst
jb
stos
subl
ret
shl
gs
repnz
inc
push
lods
or
jp
push
outsl
jb
lcall
shll
jle
adc
aas
jp
aas
aas
enter
add
aas
push
add
aas
push
sub
aas
push
sub
aas
jp
aas
sub
aas
jns
aas
sbb
enter
into
cmp
mov
sbb
push
push
cmp
stos
or
xor
cmp
adc
pop
dec
add
and
gs
es
add
cmp
lcall
xor
mov
xchg
mov
cmp
sub
std
shrl
bound
sahf
mov
push
pop
mov
enter
push
adc
arpl
rorb
cmp
lcall
call
dec
xchg
mov
aam
jo
stos
cwtl
or
and
mov
sti
mov
mov
xchg
clc
xor
ljmp
mov
pop
stos
ss
fisubrs
xor
xor
dec
dec
jmp
ss
in
and
xor
ds
and
fidivl
repz
aad
sar
jns
and
dec
out
ss
testb
xor
xchg
mov
inc
test
fidivl
repz
push
repnz
mov
ss
xor
bound
jbe
push
xchg
cmp
dec
pop
cs
bound
nop
and
dec
bound
jbe
out
arpl
ret
ss
jne
loop
dec
pop
pop
outsb
ss
dec
pop
add
shl
fcoms
push
xchg
push
lods
sti
cmp
stc
inc
sahf
add
sbb
fimull
jb
pushf
std
sbb
idiv
iret
push
dec
sub
bound
add
jg
mov
push
cmp
sbb
lret
and
jecxz
dec
lahf
mov
in
xor
add
dec
bound
mov
rclb
inc
popa
mov
mov
push
dec
adc
push
mov
inc
inc
jmp
mov
ret
jbe
mov
cltd
dec
imul
in
loop
decb
push
fwait
mov
mov
dec
add
dec
scas
push
jp
dec
xorb
arpl
flds
mov
xor
push
pop
jns
pop
lretw
je
pop
idivl
push
movsl
repnz
popa
jle
mov
jl
js
dec
imul
aas
inc
into
inc
shlb
je
push
sub
out
mov
cmp
pop
pusha
and
pop
scas
fmulp
ret
movsl
int
and
inc
jb
push
into
adcl
jbe
push
repnz
pop
or
inc
aaa
add
clc
inc
das
xchg
inc
mov
dec
pop
insl
mov
inc
out
jns
repz
sbb
mov
ja
xor
out
ss
into
xchg
inc
cmp
push
sub
add
and
jae
shrl
pop
add
mov
movb
push
or
fsub
xor
popa
ss
std
dec
mov
pop
lcall
iret
dec
push
add
inc
lahf
pop
jle
mov
outsb
push
daa
xor
out
xor
dec
stos
jno
data16
sub
addl
iret
push
dec
inc
lock
sbb
mov
jmp
fbstp
sarb
adc
push
and
pop
pop
xchg
cli
rcrl
inc
ror
rclb
incl
in
dec
pop
and
push
ss
push
add
add
dec
sbb
les
sbb
aam
pop
add
lret
sbbb
fistpl
fimuls
aaa
lret
clc
neg
sbbb
bound
cmp
push
jp
mov
inc
push
cmpsl
lcall
jne
push
call
stos
push
lcall
pop
pop
outsb
push
rorb
push
pop
cmc
lea
repnz
and
fnstsw
cmp
loop
mov
in
pop
push
out
mov
repnz
out
cs
xchg
es
push
aaa
push
push
outsb
dec
das
je
jle
ljmp
mov
ss
jmp
das
sub
sbb
pop
and
addr16
and
aad
and
movsl
cld
push
jo
ss
mov
out
xchg
pop
pop
jmp
scas
and
out
das
jg
hlt
lds
dec
ss
sti
mov
push
push
push
enter
pop
ret
pop
xchg
ficompl
sub
xor
push
out
mov
jp
xchg
clc
or
stos
add
push
sub
cmc
nop
push
push
dec
push
sub
jbe
xchg
add
ja
or
into
std
jae
outsb
push
inc
mov
rcll
sbb
ss
and
fnsave
sbb
ljmp
out
andb
rcl
arpl
sub
and
adcl
rorb
and
outsl
push
pop
mov
scas
and
xchg
dec
movsl
in
push
out
icebp
mov
mov
ret
divl
testb
cmc
cmp
lock
bound
push
push
sub
movsl
ret
push
adc
mov
xchg
pusha
xchg
out
mov
mov
mov
push
movb
push
push
dec
adc
repnz
out
mov
inc
je
push
jbe
inc
push
xor
lcall
mov
xchg
push
fildl
adc
push
inc
push
clc
std
push
outsb
ret
divl
or
add
push
sbb
faddl
outsl
imul
mov
imul
outsb
pop
outsb
push
cmp
inc
into
xchg
fisttpl
sar
out
jae
xor
arpl
outsl
cmpsl
inc
outsl
ss
test
adc
sbb
and
xor
loop
mov
fs
mov
loop
pop
push
sbb
loop
movsl
insl
lret
mov
loop
cld
cli
jae
pop
and
jle
popf
lods
cli
inc
mov
or
dec
jno
out
xor
cs
xchg
fcmovb
push
lcall
std
pop
sbb
outsb
add
and
sbb
add
push
dec
cmc
enter
loopne
xor
pop
mov
xor
adc
in
xchg
jp
ljmp
add
mov
cmp
sbb
sbb
bound
cmpsl
add
mov
add
dec
sahf
test
or
or
lods
sahf
out
lret
out
popl
or
je
add
dec
adc
dec
xor
icebp
or
or
js
dec
or
or
sbb
xchg
pop
dec
or
cmp
dec
cmp
ds
and
lret
and
add
sub
cmpsb
mov
or
rorb
sbb
add
sbb
mov
add
cmp
out
and
dec
or
in
test
jp
cmp
ss
andl
dec
shll
push
loop
sbb
add
popa
or
or
add
jp
pop
jns
outsl
ljmp
mov
pop
dec
or
arpl
mov
arpl
dec
push
inc
sbb
mov
orl
sub
dec
insl
adc
add
jb
repz
sub
es
ja
andl
dec
add
outsl
insl
sbb
sub
add
push
sub
adc
stos
lcall
xchg
inc
scas
dec
lret
dec
cwtl
mov
pop
outsb
movsb
pop
xchg
pop
pop
sub
inc
ret
push
sbb
inc
xor
push
lea
jle
rorl
stos
pushf
jp
dec
data16
movsl
es
adc
xor
mov
lret
jle
addr16
mov
daa
push
push
mov
inc
jle
rolb
and
es
sub
mov
cmp
mov
xor
xor
das
jecxz
stos
dec
add
fs
out
cwtl
mov
aaa
mov
xor
gs
mov
add
sbbb
pop
in
pop
stos
pop
popa
sub
jae,pn
inc
inc
repz
sbb
scas
sbb
insb
inc
mov
fwait
jnp
jg
mov
cld
pop
pusha
mov
jp
aas
pop
arpl
push
xchg
cmpsb
shll
arpl
pop
and
ret
sub
shrb
jl
dec
rorl
pop
mov
arpl
pop
dec
andl
cld
lret
xchg
pop
mov
fidivrl
and
js
int3
lea
sub
notb
jnp
scas
pop
into
and
pop
les
pusha
cmp
ss
js
fisubrs
in
stos
push
xor
movsl
cmp
and
xor
test
arpl
js
cmpsb
dec
xor
cmc
adc
cmp
ret
mov
or
lret
sbb
cmp
pop
sahf
ret
add
xor
pop
push
and
ret
outsb
jnp
jae
ret
cs
sub
or
bound
ret
stos
sarl
lret
das
add
inc
jp
cmpsb
push
cmpsb
dec
ljmp
sub
stos
mov
dec
fiadds
loop
lret
jns
inc
ret
fnstenv
xor
and
pop
gs
clc
pop
es
hlt
scas
pop
out
push
cmpb
inc
jp
movq
clc
dec
mov
push
pop
sbb
jecxz
lcall
cs
insl
stos
gs
adc
inc
repz
scas
inc
sub
adc
pop
outsb
es
repz
adc
mov
cmp
jmp
out
cmp
stos
sahf
pop
loop
into
adc
xor
dec
mov
clc
cmp
call
pop
xor
xor
inc
inc
dec
pushf
ds
jmp
xor
dec
outsl
es
xchg
mulb
jae
repnz
dec
push
sub
dec
add
jl
pop
and
insb
out
jb
popa
mov
fadd
push
jge
lcall
mov
pushf
jb
lahf
push
jns
mov
push
pop
mov
repnz
test
insb
push
add
and
push
xchg
mov
dec
jb
lods
pushf
outsl
imul
out
sti
adc
xchg
insb
out
adc
pop
inc
push
or
pop
rorl
aad
mov
fidivrl
push
push
ret
fwait
mov
sub
and
sub
dec
dec
add
sbb
cmpsl
bound
je
add
mov
cltd
fiadds
mov
arpl
pop
sub
pop
dec
pop
subb
or
sarb
sahf
dec
inc
jae
dec
xchg
cmp
xor
fmull
inc
mov
ficoml
pop
dec
pop
popf
mov
cli
cwtl
ss
es
jg
outsl
sub
push
cmpsb
mov
clc
jo
lods
mov
add
ja
lcall
xchg
loop
push
and
pop
xchg
xchg
loopne
movsb
cmp
or
pop
das
inc
and
jp
xchg
repnz
insb
das
push
test
mov
movsw
dec
fwait
jl
enter
jae
add
push
gs
jo
scas
xchg
mov
inc
cs
jae
inc
xor
jle
lahf
cmp
or
add
daa
enter
xor
test
ret
pop
in
push
dec
ret
jae
dec
xor
jns
mov
js
loop
inc
push
dec
cmp
mov
test
dec
cmp
fucomp
pop
clc
pop
jle
and
ror
add
or
popa
pop
ror
cmp
pop
jl
inc
sbb
pop
lea
or
dec
cs
testb
mov
fidivs
cmp
sbb
dec
sub
dec
dec
jp
cli
jbe
cmp
cwtl
outsb
push
in
out
mov
mov
push
bound
dec
dec
stos
sbbb
jle
dec
inc
xor
sbb
pop
sub
adc
pop
fnstcw
les
das
cmp
outsl
push
dec
sub
shrl
iret
ljmp
pop
rcrb
sub
sbb
int3
sub
pop
jl
decb
mov
dec
mov
sbb
xor
and
push
ljmp
outsb
cmp
lds
ja
rorl
and
imul
scas
das
push
xchg
outsb
sub
mov
pop
xchg
mov
inc
lcall
push
mov
pop
push
lret
push
push
or
sbb
inc
cmp
sub
pop
sahf
inc
push
outsl
xchg
dec
daa
dec
es
sub
pop
popf
stos
imul
bound
and
cmp
andl
loop
test
les
es
mov
mov
xor
adcb
sahf
dec
outsb
shll
outsl
add
aad
fimull
fcoms
pop
pushf
sti
shlb
cwtl
xchg
adc
push
fdivrs
es
and
add
outsl
jle
movsb
fwait
push
cmp
add
and
inc
lds
jnp
sub
jle
dec
sub
imulb
repnz
sbb
mov
testb
or
cmp
or
adcl
and
rcll
insl
adc
dec
sbb
insb
sub
jl,pn
dec
sub
dec
test
and
inc
dec
cltd
and
out
inc
xchg
cmp
test
push
push
es
cmpsb
mov
mov
dec
fsubrs
loop
sbb
dec
and
sub
and
mov
mov
xchg
jne
push
into
fsts
cmp
push
pop
mov
xlat
xchg
push
jb
pop
add
xchg
or
sbb
dec
jecxz
cmp
cmp
mov
xor
sub
mov
mov
sub
fsubs
or
jb
xor
lcall
pop
push
push
outsb
push
cmpsl
sub
enter
out
xor
pop
push
fdivrs
dec
dec
sbb
mov
push
push
roll
push
push
fadd
sbb
enter
mov
scas
adc
jle
dec
ljmp
out
js
jle
fsubr
jl
addb
into
stos
fiadds
ror
sbbb
mov
movsb
xor
push
in
arpl
jle
scas
push
and
cmp
push
aaa
inc
cwtl
repnz
addb
xchg
jmp
jp
push
or
js
cmp
xchg
jp
lea
push
aas
gs
jb
or
les
add
gs
xor
ss
stos
push
push
dec
jnp
push
adc
stc
jp
dec
ljmp
pop
push
shll
dec
lret
add
mov
inc
lret
sub
stc
dec
and
ret
push
lds
std
std
push
sub
jns
clc
arpl
sbb
sub
adc
or
repnz
pop
lea
cmp
mov
repnz
jecxz
sub
sub
xchg
jo
scas
sar
push
pop
push
push
shlb
cmp
fstl
out
mov
aam
cs
hlt
ret
mov
and
mov
and
push
push
pop
xor
and
mov
popa
dec
jbe
push
sti
xor
das
lods
mov
mov
movsb
ficompl
inc
adc
les
cmp
outsl
push
add
xchg
jno
cmp
dec
mov
inc
or
lea
sub
repnz
jb
loop
lods
fwait
xchg
push
sub
jo
stos
arpl
push
ss
stos
insb
adc
bound
mov
shll
stos
inc
rclb
std
and
stos
fidivl
jb
rol
xor
mov
push
frstor
mov
jb
and
mov
adc
add
stos
cmp
lcall
push
cli
dec
pushf
lcall
mov
add
jbe
je
stos
das
repnz
push
lods
xchg
stos
push
push
cmp
xor
pushf
jmp
add
out
mov
fnsave
pop
dec
scas
sahf
ljmp
scas
pushf
pop
mov
ss
bound
fidivrs
inc
ret
daa
sub
sbb
and
repnz
enter
inc
imul
mov
add
jp
pop
push
mov
xchg
outsl
and
mov
outsl
xchg
dec
out
popf
fstps
push
inc
sub
mov
daa
lahf
add
jns
fcmovb
sub
xor
mov
xchg
cwtl
push
and
pusha
into
or
jp
pop
jp
jae
js
xchg
adc
xchg
iret
cmp
cmp
ds
jmp
jo
sub
add
jle
sahf
shrl
pop
cmpsb
inc
rcrl
add
mov
stos
cmp
inc
mov
sahf
into
sbb
adc
daa
sub
dec
sbb
jp
popf
repnz
xor
mov
jp
adc
add
and
cmp
cltd
mov
mov
test
push
lcall
xor
das
outsb
push
lcall
push
ret
bound
mov
clc
push
pop
sahf
data16
outsb
mov
and
fstpt
xchg
push
push
add
inc
jns
dec
and
mov
cs
jno
ficomps
add
push
das
sbb
mov
sbb
inc
cwtl
in
cmp
push
into
mov
js
sub
ret
orb
sbb
clc
push
pushf
test
sub
inc
cwtl
ret
add
add
pop
ret
sbb
inc
push
mov
cli
add
push
sarb
inc
dec
adc
pop
or
or
test
inc
fsubrl
jns
popa
pop
test
xor
daa
sub
mov
or
mov
std
dec
xchg
pop
mov
inc
pop
movsl
inc
test
std
adc
sbbb
stos
and
fisubs
pop
in
push
inc
jg
adc
xor
push
pop
fistpl
popa
test
cs
jb
in
dec
push
sub
mov
bound
rclb
jae
imul
adc
xor
jp
dec
cmp
pop
adc
sub
outsb
arpl
inc
sub
jecxz
xchg
push
testb
mov
mov
adc
push
add
fists
arpl
test
pop
lret
and
dec
or
jb
pusha
xchg
adc
mov
sbbb
lods
add
push
or
rolb
in
lods
jp
cmp
or
add
cmp
xor
pop
mov
stos
ds
inc
ds
ljmp
xabort
add
sub
call
sub
lcall
fiadds
jle
jle
jo,pt
dec
sub
in
and
mov
outsb
outsb
in
xchg
mov
xor
dec
cmp
jl
jb
repz
fnstcw
fs
sub
push
push
and
out
cmpsl
push
mov
mov
pop
or
insl
mov
pusha
xchg
inc
sbb
movsl
jbe
or
out
ret
mov
and
les
add
roll
inc
scas
cmpsl
cld
das
pop
sti
jle
xor
das
cs
pop
jp
dec
pop
cld
jle
push
mov
pop
test
push
into
pop
or
sub
inc
push
imul
cmp
inc
sbb
ljmp
mov
jmp
push
xchg
in
mov
js
sub
out
mov
add
pusha
data16
push
ret
mov
lcall
cmpsb
push
pop
sbb
daa
xchg
inc
and
or
or
ds
jle
negb
orb
in
loopne
adc
fs
and
push
mov
aaa
cmp
mov
fistpl
andb
dec
outsb
cs
pop
xchg
cmp
cmp
xchg
push
pop
cmpb
cmp
dec
dec
into
cmove
mov
in
jbe
add
stos
sarb
call
gs
cmp
js
xor
rep
xchg
xchg
push
iret
and
les
fnstcw
xorb
lcall
adc
mov
fucomi
clc
fidivl
dec
scas
sbb
jne
addb
adc
subb
in
pop
roll
push
or
inc
dec
sbb
sarb
jp
mov
call
out
sarl
mov
ja
in
jp
push
adc
jns
or
clc
pop
and
and
mov
jl
je
ja
pop
push
bound
push
out
mov
sbbb
repz
dec
adc
and
out
and
xor
jnp
add
arpl
movsb
stos
add
dec
push
dec
frndint
xchg
mov
pop
xchg
les
inc
mov
and
popf
test
shll
ds
xor
push
and
lahf
bound
lcall
pop
repz
push
outsl
or
arpl
ret
adc
jb
cmc
mov
sub
xor
mov
mov
outsb
mov
bnd
push
xor
fwait
or
cld
jle
lds
pushf
mov
push
xor
inc
jae
add
push
cmp
bound
adc
imul
mov
fsubs
cmp
test
fsubs
cmc
sub
bound
pop
pop
cli
sbb
xchg
add
daa
in
xchg
push
test
push
orb
sub
std
jge
jb
nopl
inc
dec
pop
movdq2q
and
jne
cmpsl
inc
das
and
xor
repnz
or
sub
sbb
sbb
xor
mov
sbb
inc
mov
push
repz
fwait
jg
sub
or
dec
jp
lds
add
and
jne
or
cmp
mov
lcall
pop
dec
fcmovu
or
or
je,pt
sub
sub
in
lret
push
movsb
inc
div
sbb
dec
mov
pop
pushf
mul
add
imul
popa
sbb
fimull
push
push
sub
sub
outsl
add
sbb
adc
orb
mov
lahf
aas
outsb
cld
js
jns
push
sbb
mov
fdivrs
push
or
imul
add
cwtl
jge
sbb
adc
inc
rcrl
push
mov
mov
cwtl
daa
std
sbb
and
and
xor
adc
mov
lea
lret
cmp
sbb
stos
imul
pop
sub
dec
pop
adc
sub
ljmp
out
in
scas
sahf
pop
pop
jno
inc
outsb
lahf
cmp
sbb
sbb
call
pop
push
xchg
data16
shll
into
insl
inc
ss
iret
jp
je
sbb
data16
adc
sub
jl
pop
scas
enter
sbb
rorb
fwait
xchg
movsl
mov
inc
xchg
pop
sub
mov
aad
dec
sub
ret
push
inc
bound
and
ret
lcall
and
pop
xor
fs
addr16
enter
jbe
inc
dec
pop
mov
cli
pop
mov
lock
dec
ret
out
xor
imul
lret
fmulp
out
fmuls
fdivl
fbld
lcall
adc
loop
xor
scas
bound
pop
push
and
mov
push
scas
jb
mov
ret
jns
jl
es
cmpsb
push
loop
scas
pop
ret
pop
pusha
lods
push
mov
imul
jns
clc
addr16
shlb
adc
call
xchg
rcl
pop
pop
pusha
adc
fcmovu
jae,pn
jo
ds
pushf
mov
mov
push
in
xor
adc
sub
jo
push
sbb
push
test
clc
push
pop
push
sahf
inc
or
xor
pop
es
into
fcompl
push
lock
aam
jp
je
xchg
gs
cmp
imul
outsl
cmpsb
arpl
mov
dec
dec
and
lods
dec
xor
sbb
dec
insb
push
scas
js
jns
insb
in
dec
inc
jbe
imul
adc
popf
sahf
movsb
mov
and
arpl
lret
sub
ficoml
popa
push
les
cmpsl
dec
movsb
js
lods
fs
adc
xchg
addr16
loopne
fwait
mov
mov
out
insb
cmp
jle
and
xor
mov
ret
adc
lods
cs
stos
jl
or
xor
inc
data16
mov
mov
insb
loop
jns
test
subl
pop
fs
jnp
pushf
sbb
pusha
into
enter
mov
pushf
pop
shlb
sub
jnp
xor
lcall
test
fsubrl
lods
sbb
sbb
cs
dec
insl
fwait
scas
mov
cmp
pop
jns
mov
lock
scas
shrb
scas
or
loopne
pushf
and
pop
inc
mov
or
pop
jle
ret
js
shrb
push
push
scas
fildl
xchg
mov
fsubrp
xor
pop
dec
sub
insl
out
loop
pop
sbb
bound
and
in
push
sub
out
cwtl
jg
out
mov
mov
fs
sub
and
fsubrs
sbb
jl
inc
jle
mov
sar
pop
mov
cmp
jb
dec
dec
dec
ljmp
rcl
sbb
xor
pop
add
outsb
cmp
xor
fwait
aam
push
outsb
aam
sub
jle
add
mov
inc
mov
lcall
imul
sarb
les
cs
xchg
lods
das
in
jl
push
daa
fsubs
or
jl
lock
mov
inc
rcl
scas
cwtl
fs
les
lahf
pop
lcall
flds
sub
scas
push
imul
add
sub
cwtl
std
outsb
sub
fwait
adc
or
and
nop
ja
jbe
cmpsb
jle
insb
ret
je
xchg
cmpsb
push
jl
or
pop
mov
mov
lcall
push
sarl
cmp
repz
pop
subb
jbe
push
sbb
shlb
in
xchg
add
dec
test
cld
mov
ret
enter
and
dec
loop
scas
ljmp
fsubrs
jecxz
js
cli
popf
imul
test
sub
pop
ss
inc
es
mov
add
in
add
shlb
dec
add
cs
sub
pop
cwtl
inc
movsb
stos
pusha
mov
xchg
out
inc
js
fcomps
nop
cmp
jbe,pn
das
loop
je
js
push
outsl
clc
es
imulb
inc
insb
out
outsb
pop
pop
stos
sub
ss
negb
sub
sahf
jp
mov
cmp
insl
push
arpl
sahf
enter
das
inc
icebp
inc
jle
sahf
fidivs
adc
and
cld
mov
push
push
dec
inc
pop
jo
and
jb
jno
cltd
imul
orb
ljmp
adc
dec
ret
insb
pop
mov
sarl
and
pop
push
push
js
and
push
dec
pushf
fiaddl
jp
mov
and
pop
fisubs
push
push
es
insb
repz
jl
mov
sbb
push
mov
ret
stos
sbb
ret
data16
push
pop
popf
adc
stos
ss
adc
jle
bound
sbb
adc
cwtl
in
adcb
in
cwtl
jecxz
and
and
xchg
scas
add
jb
jp
jecxz
xchg
xor
lret
pop
and
lret
cs
xchg
shlb
cwtl
adc
cwtl
sbb
fidivrl
jle
sbbb
xor
pushf
inc
xchg
push
dec
ss
sahf
mov
and
push
lods
dec
outsl
jbe
xchg
sahf
sub
mov
dec
sbb
sbb
jns
cmpsl
dec
xchg
sbb
xchg
fdivrs
adc
push
dec
mov
fnstsw
xor
xchg
xchg
lea
aas
adc
xchg
dec
adc
pushf
orl
ret
dec
shrl
xor
aam
and
frstor
push
daa
imul
sbb
rcrb
push
pop
outsb
dec
jae
xor
popa
xor
and
testb
pusha
jo
cmp
sti
loop
daa
ljmpw
jnp
xor
mov
sub
dec
sub
icebp
inc
jbe
push
es
and
dec
ret
dec
xchg
cmpsl
inc
sbb
jns
inc
adc
adcb
scas
daa
dec
ds
pop
adcl
je
pop
fadds
sub
xor
cmc
sbb
pushf
call
orl
pop
and
and
shlb
inc
push
mov
cmp
sub
jecxz
je
jns
hlt
fdivs
hlt
insl
jl
dec
push
dec
call
icebp
daa
ljmp
mov
xor
push
jb
fiadds
push
sub
cmpsl
pushf
pushf
xchg
adc
inc
push
fwait
ljmp
mov
fs
out
pushl
pusha
push
xchg
mov
js
ret
push
inc
pop
in
sahf
je
cmp
loope
add
fnstcw
and
out
jl
ret
in
sub
ror
cmp
ret
popf
xor
jl
inc
shrw
and
mov
push
sub
fwait
xor
xor
call
arpl
enter
mov
mov
dec
mov
and
dec
pushf
nop
inc
repz
pop
outsb
mov
sbb
rcrb
pop
adc
les
inc
pop
and
lcall
inc
mov
sbb
push
cmp
in
call
push
sub
ss
add
es
cmpsb
and
xor
mov
mov
mov
insb
xchg
pop
or
cmpsl
cmpsb
fwait
mov
in
loop
popf
xchg
nop
xchg
ljmp
sub
mov
push
insl
mov
fwait
mov
sbb
call
xor
adc
xchg
ret
jnp
daa
dec
js
jns
mov
and
fimuls
and
nop
mov
shlb
mov
dec
inc
mov
sub
and
adc
dec
addr16
inc
aam
js
lods
lahf
adc
clc
outsb
nop
mov
mov
cmp
es
and
pop
jne
sub
jns
mov
mov
mov
and
inc
pop
arpl
adc
insl
loop
push
test
cs
js
push
out
sub
bound
xor
arpl
xchg
das
call
push
outsb
in
cmpsl
and
ljmp
rolb
call
pop
mov
mov
outsl
jge
and
and
loop
call
xchg
andb
into
out
mov
cmp
int3
push
lds
das
jae
gs
loop
jecxz
mov
stc
dec
sbb
rcrb
fcoms
sti
xor
rcrb
call
bound
mov
pop
sti
pop
xor
clc
insl
scas
cmp
xlat
les
push
lret
mov
xchg
push
push
rolb
cli
push
dec
fwait
mov
ficomps
mov
cli
sbb
rcr
push
jo
sarl
inc
fsubs
out
call
inc
fcmovu
mov
lods
dec
jns
rcrl
repz
testb
cld
jl
mov
shlb
pop
xchg
in
xchg
and
inc
test
xor
outsb
mov
mov
cltd
arpl
es
rol
fists
jae
sub
js
mov
mov
add
xchg
inc
fsts
in
pop
iret
inc
rcl
in
subb
shr
sbb
fdecstp
mov
lds
loop
mov
xchg
inc
push
inc
pop
mov
mull
lds
push
mov
cmpsl
aas
and
cld
pop
lcall
sbbb
mov
mulb
push
and
ret
add
mov
xor
xor
daa
rcrb
xchg
test
and
movsl
jno
inc
stc
mov
sub
cmp
movsl
xor
jo
insb
sahf
das
inc
mov
dec
cltd
mov
pushf
or
and
jg
mov
out
mov
dec
mov
push
pop
mov
adc
adc
fwait
cmp
rcrb
jae
adc
lds
add
xchg
fs
jno
outsb
push
cmc
and
into
push
ss
lahf
insl
inc
cs
push
insl
and
mov
into
mov
mov
daa
js
cmp
mov
mov
and
and
pop
pop
xchg
lods
sub
pusha
daa
rorl
and
jns
push
enter
and
pop
mov
inc
xchg
push
push
scas
addb
push
lods
add
xchg
mov
mov
dec
ret
mov
adc
test
sbb
cmpb
ret
imul
xor
enter
lret
outsb
push
mov
sbb
movsl
sbb
fs
mov
and
out
xor
js
mov
pop
lahf
pop
inc
clc
shrb
xchg
pop
mov
jnp
pusha
rcll
js
or
mov
jno
pop
mov
pop
push
pop
sub
cmpsl
xor
mov
inc
dec
sub
flds
xor
sub
lods
popf
sub
js
lods
jmp
xchg
pop
lods
addb
push
pop
and
mov
daa
enter
inc
adc
inc
push
repnz
rcll
mov
roll
lret
inc
and
cwtl
rcrl
dec
cld
sub
pop
test
sbb
push
and
or
sub
xchg
mov
xchg
in
push
jl
dec
jp
cmp
mov
daa
sahf
movsl
sub
into
dec
and
cmp
dec
jo
sarl
and
fstpl
and
dec
adc
in
mov
repz
cld
sub
fdivr
adc
inc
jns
add
addb
and
ljmp
ss
inc
enter
outsb
es
and
mov
and
mov
les
sub
aaa
ds
outsb
push
xchg
or
test
es
push
mov
jns
xchg
add
cld
pop
ds
notl
xlat
mov
into
loopne
outsb
xor
mov
jo
bound
out
addw
and
std
movsl
add
sbb
sti
inc
mov
dec
jns
jae
jo
cmp
fnstenv
mov
ret
ret
dec
and
ret
jmp
xlat
lods
jno
out
jne
mov
xor
cmp
jecxz
sbb
or
mov
mov
iret
in
lock
mov
mov
test
mov
fcomi
dec
fidivl
ret
sahf
push
inc
imul
bound
and
mov
js
outsb
je
insb
iret
es
scas
fs
sbb
cmpb
les
jb
test
mov
iret
stos
bnd
cli
pusha
mov
into
cmpsl
cmpsb
fwait
scas
ret
and
jg
xor
sarb
rolb
mov
mov
inc
mov
inc
xchg
mov
dec
mov
mov
cmp
and
cmp
scas
pop
ret
fs
push
mov
xchg
fdivrl
cmpsb
call
out
js
fnstenv
mov
pop
dec
fcoms
loop
into
and
pop
cwtl
push
fldcw
lcall
dec
jae
mull
clc
cmp
fsubs
or
lahf
out
repz
xor
outsb
mov
scas
js
filds
or
mov
insl
xor
pushf
ret
mov
inc
dec
sahf
clc
js
add
xchg
adcb
xor
sub
add
cmpsl
add
push
mov
bound
out
imul
adc
in
pop
test
xor
movsl
jle
std
nop
push
jb
cli
mov
lahf
jle
out
and
adc
test
scas
lahf
out
faddl
enter
repz
push
ficoml
sub
lock
xchg
jle
pop
iret
jb
into
mov
pushf
in
push
pop
sahf
out
scas
sahf
fidivs
neg
in
xchg
aam
out
mov
xchg
add
iret
jo
es
test
push
xchg
sahf
mov
shlb
dec
gs
outsb
push
mov
jg,pn
gs
inc
lahf
aas
pushf
sub
jecxz
sbb
xchg
pushf
rorb
mov
xchg
lock
dec
scas
inc
lock
addr16
pop
cwtl
pusha
push
pushf
lods
hlt
inc
mov
je
sarl
mov
pop
cli
andl
lahf
inc
sub
push
sbb
pop
movsl
inc
xchg
dec
dec
xchg
jge
cltd
and
in
test
inc
lods
and
sbb
js
ds
mov
into
push
add
fcom
into
insb
movsl
cld
das
inc
jle
js
cmp
insb
rep
lcall
and
or
push
xchg
jb
stos
pop
fs
inc
daa
cmp
mov
f2xm1
and
jg
jl
pop
shlb
shrb
jg
mov
and
push
pop
movsl
stos
bound
out
test
mov
mov
clc
das
add
fildl
addr16
and
imul
dec
in
mov
push
ja
not
push
outsl
cli
push
fwait
inc
in
and
push
ja
adc
jecxz
and
pushf
das
dec
mov
data16
dec
notb
mov
sbb
mulb
mov
jo
data16
arpl
ds
mov
xchg
test
fdecstp
sarl
sahf
in
data16
xchg
jno
out
pop
mov
loope
cld
repz
nop
addr16
pop
pop
cmp
and
imul
movsl
out
scas
xchg
fcompl
mov
jns
pushf
pop
stc
in
cmpsb
int3
mov
test
xor
test
loope
sub
cli
jle,pn
sub
in
gs
stos
sbb
xor
dec
pop
cwtl
mov
lods
icebp
jle
call
out
inc
es
repz
xor
rcrl
jle
fsubp
pop
or
mov
dec
sub
addb
lock
push
sahf
xchg
and
fldl
or
jne
outsb
push
jg
dec
ja
cs
mov
inc
call
inc
je
push
popl
mov
enter
push
mov
dec
scas
inc
nop
cli
movsl
fisubl
bound
ficomps
push
fidivl
hlt
mov
pushf
xchg
fdivrs
xor
inc
and
cld
out
cmc
lock
inc
int
and
pop
outsl
xor
sti
rorb
pop
divb
stc
and
in
add
adc
popa
push
mov
push
psadbw
call
dec
roll
jl
pop
inc
add
xor
push
and
aaa
insb
add
cmpl
in
hlt
fdivr
jbe
test
pop
sub
mov
pop
fs
popf
outsl
ds
addr16
mov
jp
dec
std
das
pushf
jle
icebp
xor
xor
in
mov
fiaddl
mov
scas
loope
pop
bound
test
add
dec
xchg
fsubrs
out
xchg
jnp
arpl
lods
inc
adc
arpl
and
jp
xor
out
jae
cmp
fdivrs
push
test
test
push
aas
js
outsb
pop
sahf
test
rolb
mov
ja
pop
and
cs
int
sbb
movsl
and
sti
loop
ds
mov
out
pop
je
sti
lock
repz
inc
mov
in
lahf
adc
mov
test
insb
ja
xchg
lcall
fcmovne
pop
out
mov
mov
jl
bound
add
into
repz
outsb
mov
push
add
int3
jnp
and
push
jecxz
or
int
shr
pop
lds
push
inc
add
out
and
mov
cld
push
mov
inc
insl
pusha
cld
inc
test
cmpl
sahf
sub
adc
xchg
data16
mov
dec
movsb
inc
std
push
shrl
aam
inc
rorb
mov
shlb
cwtl
inc
pop
push
rcrb
arpl
push
das
mov
pushl
inc
bound
cld
clc
sbb
rcrb
aad
dec
sub
out
movsl
addr16
jge
shrl
in
mov
jmp
and
popf
aaa
or
in
pop
pop
pushf
push
fwait
push
jl
pop
sahf
push
mov
ljmp
push
xchg
stc
fsubs
xor
xchg
call
xchg
fxch
loope
js
bound
pop
push
popf
inc
jmp
scas
hlt
aaa
scas
call
int
arpl
loopne
push
frstor
cmp
sti
sbb
pop
popf
push
push
push
lock
inc
push
jo
popf
sbb
jmp
js
mov
in
hlt
fdivr
xor
ret
pop
pop
push
jge
mov
jecxz
xor
shll
out
cmc
lds
aaa
push
mov
pop
mov
outsb
js
inc
xor
rcrl
je
jecxz
adc
mov
rcrb
mov
cmpb
push
std
sbbl
lods
pop
fcomp
in
xchg
cmpsl
push
sbb
jne
fdivl
pop
push
js
dec
pop
add
xlat
xchg
cs
imul
ljmp
scas
mov
dec
dec
scas
xor
aaa
data16
loope
push
push
xlat
xor
sbb
push
sbb
in
enter
mov
cs
repz
addb
lahf
gs
push
sub
pushf
out
in
loopne
dec
sti
mov
xchg
jns
loop
pop
inc
and
cmp
rcrb
xchg
arpl
call
fstpt
adc
jle
pop
push
lcall
push
pop
imul
jge
mov
js
sub
not
and
das
push
sahf
xlat
sub
adc
les
fisubl
adc
mov
aad
inc
mov
mov
jo
icebp
test
and
push
cltd
mov
nop
callw
cltd
sbb
imul
fcoms
cmp
insb
cmp
jg
push
mov
add
push
repnz
cld
sub
and
mov
ljmp
lock
es
out
loope
push
adc
push
fsubs
cmp
mov
pop
jb
xchg
dec
sbb
test
jae
sub
scas
iret
jb
arpl
les
sub
inc
hlt
and
outsb
push
nop
dec
lods
jecxz
sub
popf
jae
roll
test
cmp
jp
frstor
cmpsl
xchg
popa
in
inc
cmpsl
jb
jnp
repz
cmpsl
push
loope
pop
scas
movsb
test
dec
mov
fs
cmpsl
push
sbb
lahf
jle
js
dec
rcrb
rcrb
and
ficomps
push
std
and
mov
and
sbb
push
or
sbb
sub
and
mov
lods
shll
xor
fidivrl
das
inc
out
mov
jno
inc
rcr
jecxz
popf
push
inc
ret
std
sbb
xor
adc
dec
mov
outsb
xor
push
addl
lods
inc
lds
call
mov
xor
push
repnz
scas
fcmovu
pop
sub
clc
jnp
push
pop
out
cli
loopne
pop
pop
inc
sub
arpl
dec
fs
lcall
out
lods
xorl
mov
in
das
jbe
jae
xor
into
out
hlt
xlat
cld
jno
ret
rorb
jo
push
pop
popf
andb
pop
lods
jle
loope
fsubp
iret
xchg
lods
xchg
jp
inc
inc
jle
sub
sti
mov
pusha
insb
xor
cmp
rcrb
clc
cmpl
xorb
js
loope
xchg
or
pop
jne
adc
pop
and
nop
xor
cmp
mov
cwtl
jnp
je
xor
lock
xlat
jb
mov
fadd
ja
gs
cmpsb
cmp
sub
lahf
sti
mov
jl
sbb
cmp
out
es
pop
out
test
jge
sarb
xor
lods
mov
push
divl
andl
push
jnp
push
push
gs
xchg
and
push
xor
adc
sbb
mov
data16
sbb
xchg
and
or
inc
sub
push
adc
cmpsb
mov
push
cmp
pop
popf
jle
bound
pop
sbb
pop
movsl
pop
loope
js
inc
cmpsl
les
lods
sub
cmp
push
and
and
xor
adc
push
bound
out
jb
adc
adc
testl
xor
test
adc
pop
push
mov
je
bound
addl
fwait
js
cmp
shlb
imul
dec
adc
pop
adc
inc
mov
test
push
aas
cld
into
inc
mov
xchg
fsubs
push
and
inc
roll
cwtl
mov
into
cmpl
inc
and
push
lock
out
mov
call
lcall
pusha
push
pop
xor
lods
push
scas
pop
mov
or
jne
adc
push
dec
xchg
inc
test
jne
loop
jg
mov
je
push
movsb
xor
lods
jecxz
aam
iret
and
sbb
inc
repz
cmp
das
pusha
lds
inc
mov
inc
xor
mov
ds
push
mulb
and
sub
les
pushf
cli
lahf
iret
sbb
in
jno
adc
dec
pushf
mov
cmp
dec
or
xchg
pop
sbb
xor
es
and
mov
hlt
inc
jo
adc
bound
fs
cmpsl
jno
push
in
loopne
ret
fstl
jne
push
jp
je
add
arpl
aaa
fsubl
fnstenv
push
jb
inc
out
jae
xchg
insb
inc
lcall
jmp
scas
ja
and
cltd
inc
jle
mov
mov
clc
cmpsl
outsb
mov
xor
dec
inc
insl
in
sub
xlat
push
jne
fisubs
pop
mov
cmc
cltd
push
int3
scas
lods
add
les
jp,pn
push
data16
aad
fildll
mov
jl
jo
into
cmpsb
push
jns
mov
repnz
cmpsb
pop
mov
dec
loop
xchg
mov
xchg
fs
pop
sbb
push
push
cld
lcall
daa
xor
push
cmp
je
push
push
arpl
lods
cld
push
push
jne
fisubrs
mov
inc
mov
gs
in
movsb
inc
loope
jo
push
shlb
mov
sub
adc
inc
jns
fxtract
jo
mov
xor
fdivs
lret
dec
lea
sub
enter
arpl
mov
xchg
push
rcll
jp
mov
aad
insb
jmp
pop
pushf
popa
in
callw
dec
sarb
lock
push
scas
mov
scas
jg
xchg
xchg
cmp
xchg
int3
cld
xchg
jp
filds
lahf
pop
out
inc
ja
jbe
ja
sub
rorl
je
fsubr
pusha
into
sub
sub
loope
ficoms
enter
xchg
push
je
test
mov
xor
ret
fidivrl
inc
dec
jnp
fcomps
icebp
and
in
adc
push
call
addr16
bnd
jbe
test
sub
pop
into
xor
push
mov
cmpsl
cld
repz
cmpb
popf
push
or
xchg
jnp
jne
sbb
fs
lock
sub
out
ljmp
cmp
test
out
pop
loopne
dec
repz
lock
push
jne
jp
inc
fisubs
xchg
test
push
push
fcomps
mov
adc
outsl
fdivrl
adc
mov
dec
mov
loopne
or
pop
cs
mov
scas
loopne
push
scas
in
test
dec
sub
lcall
fsubs
pop
xchg
aam
shll
jle
pop
insb
xor
mov
mov
data16
and
pop
pop
inc
and
inc
sub
and
mov
lods
inc
mov
cmc
xor
mov
inc
pop
nop
outsl
je
add
pop
ficompl
add
mov
fld1
dec
inc
cmp
aad
xor
push
into
push
subl
repz
adc
and
fidivrs
sarl
and
dec
pop
mov
mov
pop
cltd
mov
mov
push
or
cmp
pop
mov
mov
dec
xchg
add
pcmpgtb
popf
inc
shlb
mov
shlb
adc
and
xor
mov
popf
pushf
daa
pop
sub
push
ds
outsb
inc
lods
xor
jo
push
repz
inc
fldenv
pushl
daa
jge
rcrb
popa
roll
xchg
dec
sub
add
insl
clc
outsb
pop
mov
mov
sti
pop
dec
arpl
fiaddl
mov
das
out
stos
lahf
xchg
jb
mov
test
imull
repnz
test
in
pop
cmpsb
push
lcall
sub
fcomps
mov
mov
ss
sahf
inc
stos
fnsave
pop
repz
jbe
addr16
xchg
mov
jle
lock
push
cmpsb
mov
and
mov
push
lods
loop
addr16
mov
cmp
jge
xchg
dec
lock
push
ja
data16
in
inc
push
pop
cmpb
sub
fs
dec
fldt
test
fsts
inc
movsb
and
dec
rcrb
outsb
push
inc
mov
frstor
insl
mov
fcoml
ja
jb
mov
repnz
icebp
and
js
std
dec
in
loopne
mov
mov
loope
mov
push
and
loop
repnz
lcall
ja
jo
sub
int3
push
loopne
lock
hlt
and
out
cltd
jp
jle
push
scas
insl
inc
jo
adc
out
int3
mov
and
lret
xor
enter
popa
lret
sahf
or
mov
ljmp
hlt
test
push
push
rcrb
les
inc
outsl
jle
ja
lcall
mov
insl
jo
inc
shl
sbb
test
jp
and
xorb
rcr
fxch
movsl
aam
sar
fsubrs
cmp
aam
je
xor
inc
lds
inc
inc
jae
ja
fdiv
and
clc
dec
jge
cwtl
rcl
cld
sub
in
ret
cmc
iret
or
lahf
adc
scas
jg
and
cs
cmp
mov
jg
pusha
jl
jno
push
loope
sbb
adc
and
inc
movsb
arpl
pusha
mulb
mov
das
pop
cld
inc
gs
push
dec
push
fdivr
fdivp
aas
pop
adc
frstor
aam
sbb
or
and
js
jmp
outsb
icebp
clc
sbb
nop
shrl
inc
shlb
dec
scas
sbb
mov
movsl
ret
push
inc
or
push
lahf
fdiv
jle
pop
lods
popa
pop
lods
mov
push
outsb
adc
test
call
adc
in
stos
les
pop
mov
je
mov
dec
and
dec
das
push
jge
outsb
loope
mov
fidivrs
dec
mov
fs
out
mov
test
xchg
lret
jbe
xor
push
sub
ret
and
sbb
push
inc
jmp
mov
iret
pop
daa
insb
xor
nop
cmc
fdivs
mov
add
scas
push
push
popf
cmpsb
jg
jecxz
das
imul
movsl
ja
mov
xchg
push
xchg
js
int
lods
mov
sahf
pop
popf
inc
cltd
jae
inc
popf
and
cs
push
fists
inc
dec
push
and
dec
cmp
inc
arpl
aaa
lods
inc
inc
mov
mull
nop
and
adc
jl
pop
xor
push
xor
mov
mov
push
loop
pop
pop
cmpl
fistpll
sub
fucom
mov
push
lods
jb
loop
clc
adc
lea
push
out
cltd
pop
jp
cmp
data16
jo
idivb
pop
aaa
pop
sbb
loope
add
mov
cld
xchg
dec
pop
cwtl
lods
jl
add
and
sub
int3
or
xchg
mov
call
loop
rcrl
dec
cmp
hlt
push
push
and
subl
scas
test
mov
and
inc
test
popa
adc
xchg
xchg
mull
mov
push
jmp
or
ja
fiaddl
pusha
jo
test
rclb
mov
fs
mov
mov
pushf
mov
and
xchg
popf
fimull
vandnps
call
mov
mov
fldz
inc
mov
movsb
test
fdivrl
push
popa
jno
call
pop
cmp
mov
inc
repnz
push
lods
outsl
mov
lea
cmp
sahf
testb
dec
fisttpll
mov
xchg
popf
jl
jne
or
pop
jo
xchg
dec
ja
add
pop
push
jmp
and
push
mov
test
pop
popf
mov
dec
sbbl
ss
je
and
cmp
adc
imulb
adc
mov
mov
jo
cmpsl
gs
or
jo
roll
inc
repnz
cld
and
mov
push
pusha
loop
scas
rol
mov
mov
mov
in
inc
daa
icebp
daa
aam
xchg
push
and
inc
inc
xor
xor
push
inc
icebp
jae
add
scas
and
pusha
push
push
push
fiaddl
or
in
mov
pop
ja
jbe
mov
push
pop
sub
sti
outsb
outsl
outsl
js
jae
mov
pop
icebp
stos
fldt
push
xlat
jbe,pn
inc
inc
cmpsl
cmpsb
scas
cmc
call
mov
outsl
jge
outsb
scas
jge
aam
mov
inc
scas
cld
or
mov
in
stos
jp
inc
inc
addl
xchg
ljmp
jmp
adc
xchg
fs
das
mov
inc
out
in
mov
xchg
push
cmp
cmp
je
in
mov
sti
add
sub
aad
cmp
popa
test
test
out
hlt
popf
jnp
jo
loop
inc
xor
divl
and
xor
addr16
lods
push
pushf
mov
cmpsl
sarb
clc
jle
and
adc
xchg
bound
andb
sbb
ret
data16
adc
out
xor
aad
xchg
jnp
adc
cmp
in
push
loopne
xor
andb
cmp
std
aaa
in
and
sti
cmp
aaa
jbe
xchg
out
clc
ds
and
push
popa
mov
jge
enter
cmpsb
cld
lods
mov
and
xor
imul
push
pushf
outsb
mov
je
aaa
xor
aaa
enter
imull
fdivs
jg
push
mov
adc
push
hlt
fisubl
js
push
sub
dec
push
jae
jne
fs
jge
sub
stos
add
mov
or
push
push
in
fdivr
aas
pushf
icebp
lods
cmp
xchg
mov
mov
sbb
cld
jbe
jns
mov
inc
mov
repz
ljmp
inc
and
and
pop
inc
push
xchg
fsubs
shlb
and
and
inc
js
lcall
rep
out
les
outsb
pushf
cmc
inc
push
arpl
je
pop
lds
popf
lock
scas
mov
inc
sbb
stos
jle
mov
sub
loope
mov
mov
xchg
and
mov
ljmp
daa
mov
lods
dec
cwtl
fwait
clc
scas
xor
push
xorl
popa
xor
mov
push
daa
mov
addr16
dec
shrb
push
and
push
inc
out
and
xor
lock
cld
push
mov
shlb
push
add
xchg
es
push
sub
into
push
ds
das
arpl
pop
push
sub
nop
or
xchg
shl
scas
pushf
jns
sbbl
fdivs
test
ja
inc
ret
ja
mov
out
mov
and
lods
loopne
xor
and
jo
push
clc
stos
cwtl
loope
xchg
scas
loopne
out
loope
sbb
adc
push
jl
movsl
pop
mov
push
jne
ss
jb
movsl
fnstsw
lock
inc
pop
in
or
push
icebp
fldenv
orl
loop
scas
push
cld
push
push
mov
jb
jae
popa
mov
pop
in
push
cwtl
mov
add
frstor
pop
mov
xchg
jnp
cld
mov
push
mov
es
repnz
out
pushf
mov
mov
sbb
cld
jbe
pop
pusha
sarl
inc
push
divl
mov
out
and
dec
pop
dec
inc
push
cmpsb
inc
scas
lock
js
shll
inc
imul
cmpl
inc
lcall
test
aad
add
out
cmc
clc
or
xor
je
jb
push
popa
shrl
mov
and
cmp
push
dec
insb
jns
fidivrl
fdiv
stos
data16
fdiv
cmp
scas
mov
stos
scas
test
add
test
xor
and
mov
pushf
shlb
push
push
fwait
mov
mov
jns,pt
mov
pushf
addr16
insb
inc
daa
stos
fdivr
push
je
dec
xor
iret
mul
aad
out
aad
xchg
pop
cwtl
outsb
cmpsl
mov
rorl
xor
fscale
push
rorb
jae
gs
rolb
movsb
mov
insb
mov
in
jmp
fstl
inc
hlt
lahf
in
push
movsl
pop
sub
cltd
add
and
push
hlt
jae
and
mov
push
lcall
enter
sub
xor
sti
and
pop
loop
xlat
jns
rclb
pop
sbb
daa
xor
jbe
push
daa
fstpl
pop
movsl
aad
cmpsl
add
in
aad
xlat
sbb
jnp
add
hlt
lods
in
loopne
pop
mov
popf
in
mov
rorl
pop
mov
add
pushf
inc
inc
js
push
repnz
and
iret
mov
testl
inc
push
jecxz
jmp
ror
xlat
and
notb
das
sub
cmc
sarl
ljmp
pusha
dec
imul
pop
addb
repnz
mov
pusha
mov
into
icebp
ljmp
mov
push
push
push
popf
stc
mov
xchg
and
dec
xchg
xchg
or
xor
test
std
ss
cmpb
jnp
es
push
mov
inc
jecxz
andl
das
aas
cmpsb
outsl
cmp
test
mov
movsb
sub
scas
jns
mov
mov
sub
jle
sub
scas
pop
xchg
push
pop
mov
pop
mov
mov
imul
cmp
dec
data16
dec
mov
mov
cmp
movsb
xor
and
push
push
sub
pop
lahf
mov
lea
into
add
add
push
das
mov
popf
pop
xor
mov
mov
stos
jbe
push
xchg
inc
outsl
imul
loope
sahf
test
and
negb
ret
in
idivb
add
ja
in
ret
aad
nop
adc
add
mov
adc
xchg
faddl
test
mov
mov
outsb
shl
or
add
add
xor
call
jnp
add
fidivs
pop
xchg
sbb
cmpsl
adc
sbb
cmp
xor
rcrb
mov
lock
std
xchg
stos
pop
dec
sbb
cmc
mov
xchg
in
loop
adc
nop
js
pop
pop
adc
adc
cltd
and
and
aas
pop
das
jg
outsb
sbb
mov
sbb
jecxz
test
bound
or
stc
inc
adc
sub
or
xor
test
fsubr
out
xor
push
push
stos
push
sub
insl
pop
lcall
jbe
ss
inc
xor
push
jl
and
jbe
addr16
sbb
outsb
cmpsb
push
mov
nop
mov
dec
and
popl
ret
daa
add
adc
cmp
adc
test
pop
dec
ss
out
sub
rcrl
sub
cmp
xor
inc
sbb
aad
rcrb
cltd
jo
inc
dec
ret
push
gs
dec
es
fidivrl
push
ljmp
scas
mov
or
insb
dec
add
or
pop
popf
ja
sbb
bnd
pop
mov
jb
lahf
mov
and
rcpps
cld
and
subb
jle
in
cmc
subl
shl
mov
pop
inc
pushf
cmp
cmp
pop
or
sbb
cmp
mov
imul
xor
jle
jl
jb
jo
jbe
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
mov
ljmp
aas
dec
xor
xor
add
cmp
jne
push
xor
lcall
sub
mov
lea
cltd
addr16
cs
loop,pt
out
leave
dec
inc
stc
inc
stc
pop
stc
pop
stc
ja
xchg
xchg
stc
mov
cld
cli
adc
out
cli
xor
test
pushf
imulb
idivb
divb
negb
jecxz
mov
jp
xchg
popf
xchg
mov
js
jecxz
ret
js
les
cltd
movsl
loop
out
xor
pop
xor
xor
and
daa
xor
xor
aaa
xor
inc
xor
pop
xor
imul
xor
jae
ja
mov
xchg
xchg
xor
scas
xor
mov
inc
aam
xor
xor
inc
test
lods
fiadds
jmp
aaa
sbb
sub
rorb
pop
sbb
lods
out
xor
test
bound
jae
cli
test
leave
or
lcall
je
mov
repz
adc
cmp
push
bound
call
xor
mov
jmp
loop
xor
jle
jl
jb
jo
jbe
je
je
je
je
je
pop
and
push
sahf
xor
sub
stos
mov
aaa
dec
ret
js
jle
pushf
cmpsl
inc
push
ret
xor
fwait
xor
aaa
cmc
pop
repz
out
push
xchg
out
cli
mov
mov
or
cmp
loop
out
xor
dec
xor
adc
xor
enter
fidivl
ljmp
movsb
push
or
sbb
or
dec
cmpsb
add
mov
adc
gs
repnz
ret
add
imul
movsb
pop
ljmp
ss
inc
rorb
test
sbb
ljmp
pop
out
cli
cwtl
xchg
cwtl
les
enter
fidivl
aam
out
inc
out
xor
add
sbb
sub
lret
cmp
jb
lea
adc
adc
in
lea
lods
dec
int
in
pop
in
pop
in
push
in
outsl
in
fs
jbe
mov
in
dec
xchg
in
xchg
in
lods
in
cmpsl
in
mov
in
ret
in
fucomp
aam
and
jg
jl
jb
push
dec
cmp
xchg
int
les
adcb
push
xchg
bnd
scas
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
ljmp
push
jb
jo
jbe
je
je
je
je
pop
es
icebp
pop
or
dec
testb
negb
pop
notb
push
imulb
outsb
imull
repnz
jle
jb
jbe
mov
mov
xor
negb
imull
js
mulb
idivb
test
into
test
cwtl
mov
mov
stc
repnz
idiv
or
push
cltd
add
push
fsts
jmp
cs
and
cmp
ds
xor
ss
dec
stc
dec
stc
inc
stc
pop
stc
pop
stc
push
stc
push
stc
push
outsb
stc
stc
data16
jp
jle
jb
jbe
mov
mov
cmp
stc
lcall
stc
stos
stc
scas
stc
mov
stc
mov
stc
lret
cmp
out
ret
add
add
test
mov
sbbl
leave
mov
stc
stc
sar
in
stc
std
stc
hlt
cli
or
dec
mov
mov
inc
in
inc
ljmp
test
lds
test
rorl
dec
repz
repz
repz
rep
repz
mov
scas
repz
aad
jecxz
push
sub
js
jle
cmc
rorl
inc
ds
notb
mov
mov
lcall
les
cmpsb
xor
mov
mov
lret
xor
fidivl
xor
loop
out
cli
xor
xor
push
xor
xor
sbb
push
xor
xor
xchg
and
bound
div
nop
mov
inc
jb
jo
jbe
je
je
sbb
xor
lds
jg
addl
int
push
jne
cmp
mov
cwtl
data16
inc
jl
inc
push
fbstp
icebp
add
cmp
inc
pop
test
ret
repnz
testb
negb
push
mov
lea
aam
loope
xor
xor
xchg
mov
into
cltd
movl
sti
or
push
cltd
pop
test
daa
fnstcw
xor
stc
push
stc
imul
jge
enter
jo
repz
jl,pt
fadds
pop
pop
test
add
cmp
in
sbb
cmp
xor
cmp
ror
adc
pop
cltd
subl
test
push
ss
cwtl
fisttpl
cmp
test
test
gs
out
mov
enter
and
leavew
jge
sub
lods
xchg
in
call
in
std
in
hlt
jmp
cmp
ret
sbb
jmp
loope
or
sub
push
je
pop
jp
mov
xor
jb
out
cli
sahf
xchg
repnz
mov
imul
nop
cmpsb
je
push
mov
fistl
in
cld
xchg
icebp
or
imul
sub
adc
push
ret
sub
shll
jmp
jecxz
jg
xchg
or
dec
xchg
inc
xchg
inc
xchg
pop
popf
pop
inc
cld
push
lds
outsb
lds
lds
jle
jb
mov
repz
xor
repz
rep
repz
repz
repz
repz
repz
repz
fdivp
shl
repz
cli
idiv
mov
in
push
lods
adc
push
in
sub
cs
and
es
cmp
ds
xor
ss
dec
in
dec
in
inc
out
inc
fnstenv
push
stc
push
outsb
clc
bound
int
in
sub
in
lcall
iret
jl
push
jns
jbe
xchg
pop
test
ss
dec
pop
inc
xchg
rorb
sub
daa
lea
push
scas
insb
fsqrt
lcall
stc
movsl
clc
mov
je
je
je
je
je
je
je
je
push
or
sbb
and
in
or
icebp
divb
or
cs
cmpsb
dec
lcall
xor
cmp
cltd
sub
push
repnz
div
mov
push
ret
add
push
rcrl
jmp
jecxz
sti
sub
cs
es
lock
dec
repz
repz
repz
repz
repz
repz
repz
repz
outsb
repz
cli
jp
jle
jb
jbe
mov
mov
lcall
stos
lds
scas
movsb
mov
lret
ret
repz
fdivp
sarb
adc
imul
nop
mov
out
xor
idivb
cmp
sub
ret
adc
xchg
adc
les
lods
cmp
in
ds
xor
ss
dec
out
dec
fnstcw
stc
pop
stc
pop
clc
push
arpl
push
outsb
repz
call
rclb
sbb
adc
addr16
jg
mov
movsb
stc
mov
iret
stc
fdivr
loopne
push
push
add
cmp
out
nop
push
inc
aas
scas
xor
inc
ss
cs
xchg
xchg
insb
cwtl
addr16
nop
ljmp
out
stc
loop
push
ss
es
cwtl
es
jo
jmp
pop
repz
repz
pop
xor
sahf
xor
filds
sysenter
xchg
adc
in
inc
lcall
loop
out
cli
lcall
xchg
stos
xchg
scas
cltd
mov
dec
je
je
je
push
into
loopne
pop
xor
push
pop
pop
mov
shlb
push
xor
jl
mov
mov
pushf
cmp
pop
cltd
movsb
xchg
mov
addr16
jb
lea
cwtl
lahf
mov
clc
mov
je
je
push
or
xchg
add
adc
xchg
lods
adc
sti
sub
xor
enter
into
jl
xchg
je
je
je
je
je
je
je
je
je
je
je
insl
in
xor
xor
inc
test
xchg
inc
push
in
repz
lods
loop
xor
xor
mov
in
or
insl
push
mov
cmp
out
out
testb
mov
cltd
fs
enter
or
pop
das
xor
lods
out
test
inc
xor
ss
and
jp
xchg
jmp
xor
xor
rolb
push
xchg
add
inc
sbb
inc
adc
in
es
cmp
dec
je
je
je
je
je
push
push
add
enter
into
cs
lret
add
pop
xor
adc
or
cmp
xor
jle
sbb
mov
inc
inc
push
cli
or
inc
cmp
lcall
cmp
pop
lods
mov
outsl
dec
stos
sahf
mov
fwait
mulb
sahf
push
push
pop
ret
jnp
mov
je
je
je
je
je
push
sub
inc
xchg
pop
pop
push
ljmp
add
cmp
push
jb
addl
aam
push
xor
loopne
lret
mov
sahf
xchg
popf
movsb
inc
sahf
mov
cwtl
ljmp
pop
loop
out
cli
daa
cwtl
cwtl
jo
decb
push
xor
insl
movsl
mov
negb
imul
cli
jle
repnz
imulb
iret
xorb
pop
das
xchg
and
aas
inc
rorb
inc
shrl
js
jge
ja
xchg
stc
lods
stc
mov
clc
cmc
arpl
add
pop
faddl
cs
jb
je
sub
ljmp
mov
jle
jl
jb
jo
jbe
ljmp
or
lods
dec
es
js
jle
push
adc
inc
xor
pop
inc
push
lods
and
mov
test
leave
mov
push
dec
int3
das
push
lea
jnp
je
pushf
in
xchg
in
mov
add
sub
shrl
js
jne
lret
out
int
sar
aad
out
jb
je
push
sbb
adc
das
pop
daa
cltd
cmp
lods
dec
call
push
add
add
push
fldt
shll
lret
push
dec
sti
pop
repz
repz
cs
mov
lcall
xchg
rcll
mov
xor
xchg
sbb
adc
xchg
dec
sbb
enter
jp
es
fwait
sub
in
lods
in
mov
out
fcomps
cli
pop
xor
test
jl
and
aaa
push
mov
pop
inc
lea
mov
xchg
fidivl
xor
scas
dec
or
cmp
mov
inc
sub
push
add
push
shrl
sub
flds
ret
add
lret
inc
repz
repz
repz
jle
div
sbb
insl
jle
jo
popf
int
in
leave
jmp
cmp
xchg
ss
mov
sub
fstps
xchg
rcrb
mov
jecxz
enter
icebp
leave
wrmsr
add
insl
enter
je
je
push
mov
add
mov
rol
dec
call
cli
repz
repz
mov
push
ret
add
mov
mov
adc
or
divb
mov
jl
fadd
push
and
jo
outsb
movsl
pushf
add
xchg
xchg
xchg
xchg
xchg
stos
cltd
scas
mov
cmpsb
arpl
mov
testb
dec
lods
mov
lea
ret
cmp
dec
rcr
push
cli
or
push
pop
dec
scas
int
in
xlat
in
stc
in
imul
test
xchg
ret
cmpsl
fimull
cmp
jle
jl
inc
js
loop
orl
shlb
and
jle
jb
jbe
mov
mov
sub
mov
lds
popf
xchg
sub
jno
push
data16
fimull
fdivs
cwtl
and
push
push
sarb
sbb
jbe
je
inc
sub
lds
ret
test
ret
dec
dec
inc
inc
repz
repz
repz
repz
outsb
repz
ds
jbe
cs
xchg
xchg
xchg
xchg
xchg
stos
xchg
scas
xchg
mov
xchg
mov
xchg
lret
xchg
ret
xchg
ficoml
xchg
popf
lea
out
cli
out
stos
xchg
div
lret
out
add
sbb
jbe
sub
and
push
lods
push
sbb
roll
pop
in
pop
in
push
out
push
stos
lret
or
fldenv
mov
js
xrelease
sahf
notb
inc
scas
add
cmpsb
imul
mov
mov
lret
repz
repz
shl
imul
mul
mul
idiv
mov
je
push
notb
xchg
xchg
sbb
cmpsl
lahf
pushf
ss
push
and
mov
sbb
sbb
xchg
pmulhuw
lret
add
xor
insl
outsb
fadd
cli
fstpl
out
clc
in
ss
sub
sbb
push
in
sub
cs
mov
cld
or
add
fcmovu
je
jne
je
je
je
je
inc
add
ret
jbe
fimull
mov
xor
cwtl
add
xor
jnp
ficompl
or
push
or
mov
cmp
mov
ret
aaa
pushf
jnp
cmp
sahf
repz
sahf
cltd
es
sub
xchg
jecxz
pushf
fwait
sahf
jnp
cmp
pushf
jecxz
sahf
mov
jmp
repz
shlb
out
out
loop
mov
divb
add
push
xchg
sbb
xchg
push
adc
and
ds
clc
inc
in
pop
in
pop
in
push
in
push
in
push
outsb
in
in
in
jp
jle
jb
jbe
mov
mov
sub
out
lcall
into
out
jmp
adc
jl
jb
jo
push
and
arpl
jne
scas
cmp
sahf
lret
push
ret
out
add
not
lahf
shl
idiv
mov
adc
push
data16
push
subb
rcll
popf
inc
test
sub
repz
aam
jbe
mov
in
lcall
xor
dec
dec
ret
bnd
fsubrp
movsb
repz
mov
push
addb
or
push
xchg
sbb
cltd
adc
test
mulb
mulb
idivb
xchg
or
in
dec
in
inc
in
inc
out
pop
loop
xor
push
outsb
fcoml
jle
jb
mov
xchg
xchg
xchg
xchg
xchg
stos
cltd
scas
stos
pop
cmpsb
idivb
in
mov
lret
xor
out
stos
je
mul
mul
idiv
div
div
mov
sbb
adc
or
cmp
out
add
push
out
sti
lock
sub
cs
and
es
or
iret
push
mov
je
je
inc
inc
leave
add
push
clc
push
jle
adc
fdivrs
jb
jbe
rclb
ret
cli
cs
shl
imul
imul
mul
mov
adc
repnz
divb
add
push
stos
out
push
jp
push
imulb
imulb
mulb
mulb
xchg
add
push
xchg
xor
cli
xor
clc
inc
repz
repz
repz
xor
lds
jp
jle
jb
jbe
mov
add
lds
je
push
stos
mov
stc
cmpsb
stc
mov
adc
ret
xchg
ficoml
xchg
ljmp
cwtl
cli
call
fdivr
cltd
repz
and
xor
orl
push
lea
popf
lods
lods
into
mov
and
loop
add
aas
add
sbb
inc
push
int
rcll
push
mov
and
das
lahf
lret
in
enter
loop
pushf
lret
es
push
mov
popa
cld
mov
inc
das
mov
xchg
lret
cmp
ret
js
jle
jl
push
dec
sub
daa
enter
jb
xor
sbb
add
lahf
push
cmpsb
cmp
jle
push
pmullw
inc
shlb
mov
sub
fidivl
inc
fcmovu
xor
inc
test
xor
inc
test
shl
push
xor
rcrl
lock
mul
and
cmp
lds
push
inc
bound
push
dec
shlb
jnp
sub
jne
mov
cltd
je
push
gs
test
movsl
flds
mov
xor
leave
mov
hlt
je
fs
jo
mov
bound
pusha
xor
push
and
loop
aaa
fs
xor
jl
repz
cmp
sbb
test
leave
sub
push
cltd
insl
test
rcr
jb,pn
jle
jl
jb
push
nop
mov
lods
stc
cmpsl
clc
mov
je
inc
ror
push
in
clc
std
jbe
or
adc
mov
mov
mov
iret
in
fsubr
shr
test
idiv
div
mov
sbb
pop
jecxz
imul
jle
insl
or
repnz
cmp
pop
xor
jae
and
aas
mov
inc
enter
es
addr16
inc
jno
mov
add
nop
outsb
dec
movsb
mov
sarl
xchg
loope
clc
sti
cmp
or
dec
sub
and
sub
xchg
fwait
inc
fnstenv
or
aas
push
popa
scas
in
insl
mov
xchg
mov
cmp
arpl
cmpsl
repz
and
inc
cmpsb
lds
cwtl
repz
push
js
ret
pop
lods
jbe
mov
test
mov
out
cli
push
imul
pushf
ja
in
stc
cwtl
clc
xchg
inc
lods
stos
fdivs
out
shll
cmp
ss
dec
test
mov
jle
jno
adc
or
or
mov
insl
je
je
push
inc
add
dec
in
repz
je
clc
and
jno
mov
sarb
push
sti
leave
stos
cmc
clc
or
add
cs
pop
sbb
or
xor
pop
outsb
or
fs
aam
mov
xor
jl
push
jo
outsb
mov
xchg
inc
xor
lods
jb
in
in
fucomip
aad
jecxz
stc
in
mul
or
dec
xor
fstps
call
xchg
loop
pushf
add
ljmp
insb
adc
jl
mov
iret
int
in
aam
out
ljmp
xchg
js
inc
cmpsb
jl
pop
sub
ljmp
inc
lods
je,pn
xchg
mov
shlb
push
das
pop
mov
mov
cmp
outsb
cmp
jo
mov
enter
lock
cmp
and
and
push
jle
sub
hlt
jbe
dec
pop
into
push
inc
data16
pop
jae
mov
dec
mov
pusha
add
pop
cld
ss
add
cmp
inc
and
cmp
dec
xchg
sbb
neg
not
imul
mul
idiv
mov
and
js
enter
pop
repz
mov
test
cltd
jle
scas
neg
mul
div
testb
sbb
xchg
push
cmp
mov
ljmp
xor
repnz
pop
cwtl
mulb
jae
into
fbstp
add
movl
clc
enter
push
or
ja
movsl
test
pop
mov
sbb
ljmp
add
lret
mov
loop
cmp
jle
jl
sbb
cmp
xor
push
xor
jne
test
pushf
movsl
cli
sbb
pushf
es
cli
cli
cmc
rorl
cmp
mov
pop
aas
jno
sbbl
cmp
out
rcrl
adc
xor
shr
das
pop
dec
fnstenv
sbb
mov
and
inc
mov
test
cmp
xor
dec
lret
movsb
push
jmp
xor
cwtl
mov
push
pop
add
lods
orb
mov
xor
lcall
push
lret
or
fcmovnb
jne
int3
decl
cmp
outsl
jp
inc
jbe
call
sbb
subl
push
nop
jle
cmpsb
push
or
push
mov
loop
cwtl
les
push
cmp
ljmp
sub
xor
inc
dec
aaa
fs
test
lock
fistpl
mov
pop
std
pushf
rdpmc
aaa
pop
daa
push
imul
xor
cmp
or
mov
cli
inc
add
xor
dec
and
out
push
fmul
loope
push
je
push
or
push
popl
cli
dec
mov
call
in
or
cmp
mov
pop
mov
call
lcall
push
push
cltd
sbb
aas
insb
mov
jo
imulb
cli
dec
push
fcompl
clc
inc
fldt
xorb
xor
xor
movsb
pop
cs
dec
mov
lock
xchg
mov
imul
test
test
mov
stos
mov
in
and
push
and
rorl
repnz
xchg
jg
icebp
pushf
pop
mov
push
cmpsl
adc
push
dec
add
jp
rcrb
aas
iret
xor
and
xchg
and
sbb
leave
jbe
stc
sar
jmp
xchg
adc
or
cs
add
xorl
inc
inc
mov
mov
enter
push
in
rclb
push
cmp
pop
adc
das
mov
mov
notb
daa
xor
leave
insl
rorl
add
ljmp
adc
push
or
push
xchg
xchg
pop
mov
sub
out
mov
push
xor
cli
pushf
pop
out
mov
jl
ss
dec
cmp
jmp
xor
push
leave
and
inc
test
push
mov
cld
int
push
cmp
sub
dec
xchg
pop
sbb
mov
dec
es
repz
repnz
cmp
inc
xchg
inc
push
out
fs
sti
add
push
into
scas
jl
jb
push
pop
add
cmp
pop
mov
test
sbb
out
xor
push
xorb
je
mov
insb
incb
es
inc
fscale
insl
xchg
and
out
cmpsb
xor
in
lret
cmpl
movsb
xchg
sbb
ljmp
or
sbb
outsb
sub
sbb
and
sub
pop
repz
repz
js
mov
stc
nop
clc
stos
fdivrl
xchg
mov
pop
dec
pop
cwtl
subb
adc
pusha
cli
incb
push
daa
xchg
push
pop
outsl
xchg
sbb
dec
rorb
cmp
mov
std
or
cmp
fmuls
loopne
imul
pop
das
push
out
sahf
enter
xchg
lock
bnd
out
mov
sbbl
push
adc
aaa
inc
add
int3
orl
pop
ret
into
dec
mov
bound
das
adc
mov
call
or
fisubrl
dec
jp
inc
add
mov
mov
dec
sub
test
jne
enter
sub
fisttpl
push
outsl
fidivrl
mov
mov
cmpsb
inc
add
or
popf
into
push
xchg
js,pt
xor
ficomps
out
repnz
sti
xchg
push
adc
lea
insl
iret
mov
mov
mov
jmp
aam
mov
out
js
or
test
xor
and
push
test
das
push
lahf
or
mov
mov
test
push
lcall
sub
scas
xor
lcall
lcall
sbb
lcall
push
test
pop
xchg
adcb
ja
out
test
popa
mov
test
xchg
repnz
and
xchg
subl
cmpsb
repnz
mov
loopne
jp
adc
aam
test
xor
pop
pushf
loop
das
mov
jb
popf
mov
shl
add
jecxz
clc
push
std
add
psrad
sbb
pop
sub
or
add
jg
ret
inc
subb
jmp
add
adc
dec
or
in
push
out
outsl
mov
xor
mov
test
pushf
jo
inc
mov
mov
clc
push
cli
nop
jle
inc
jns
add
jne
inc
test
lahf
cmpsb
hlt
add
jns
cwtl
xor
test
pop
sbbb
aaa
fwait
cli
pop
ret
xchg
push
outsb
fucom
lret
cli
push
push
in
lsl
push
divb
popl
xchg
sub
test
fnsave
sub
cs
adc
jbe
jb
sbb
lret
repnz
sbb
push
add
js
fisttps
scas
test
xor
subl
imul
and
push
arpl
adc
push
jb
out
cli
inc
daa
ss
push
lret
add
lret
add
mov
add
mov
or
outsb
push
and
inc
xchg
mov
xchg
mov
jecxz,pt
fcompl
cmpsl
and
add
inc
rcrl
addr16
jecxz
sahf
arpl
cwtl
sarb
lods
push
inc
roll
popf
cld
js
push
hlt
jle
push
inc
sarb
jb
or
dec
dec
pop
outsl
pop
stos
push
outsl
mov
jo
add
push
int3
inc
xchg
ljmp
es
mulb
cli
add
ss
inc
sub
cmp
pop
jecxz
sti
cltd
pusha
mov
stc
xbegin
out
stos
or
mov
mov
call
push
les
lock
lds
pop
ret
imul
inc
jnp
lock
in
imul
sub
rolb
xchg
mov
inc
pop
je
orl
xor
cwtl
or
ds
or
adc
sub
out
jp
in
mov
scas
sbb
push
divb
daa
mov
xor
add
xor
fidivrl
push
and
repz
cli
mov
xchg
mov
std
repnz
and
mov
loopne
adc
pop
out
les
cmp
inc
jo
sbb
mov
out
jmp
leave
movsb
fmul
ret
jp
repnz
js
push
sbb
add
add
div
mov
xor
xor
test
enter
jne
cmpsl
insl
int
cld
scas
dec
stos
xchg
xchg
leave
cmp
dec
push
mov
jmp
loop
cmp
xor
jae
rcrb
push
pop
pushf
arpl
popa
jnp
fildll
mov
movsl
int
push
push
sbb
mov
popa
mov
popa
sti
push
cmc
cmpsl
iret
lods
aad
adc
jno
fdivl
movsb
push
push
outsb
ljmp
daa
dec
lret
mov
mov
sbb
out
loop
add
inc
stos
add
jmp
mov
dec
jge
movsb
sub
jl
lea
xor
fsub
sahf
cltd
mov
psubd
insl
mov
adc
adc
xchg
call
std
jecxz
pcmpeqd
sbb
adc
xchg
and
xchg
dec
xchg
pop
cwtl
push
mov
mov
out
xor
in
xor
outsb
sbb
outsl
sub
ss
je
test
imul
jp
jl
push
inc
add
shll
dec
je
mov
les
jo
ds
xchg
cwtl
pusha
sbb
test
push
jbe
loopne
jl
jb
repnz
js
jle
push
int3
cmp
pushf
push
dec
pop
mov
cld
pop
sub
repnz
insb
lret
mov
enter
mov
and
jecxz
rcrb
idiv
cs
jl
mov
je
je
inc
aam
cs
xchg
jo
ret
mov
sarb
add
push
or
jo
push
das
pop
push
jo
rcl
cmpsl
aaa
shlb
leave
arpl
and
push
cs
xchg
outsb
jmp
adc
mov
ret
pushf
add
sub
add
push
push
je
inc
in
mov
pop
mov
jl
inc
adc
or
xor
pop
rol
push
jnp
pop
stos
popf
psubd
inc
fmuls
pop
pop
xor
push
out
test
add
ficoms
test
hlt
xchg
jbe
xchg
jo
int
jl
cmp
mov
push
rorl
inc
adc
pushf
or
push
xchg
or
lds
test
arpl
jnp
jg
sub
repz
int3
neg
mov
xchg
sti
xchg
hlt
sbb
adc
fs
or
in
mov
dec
stos
and
xor
inc
pop
mov
xor
outsl
cs
cmpsl
lahf
dec
sub
data16
sub
dec
scas
pop
out
xor
mov
inc
fdivp
inc
loopne
dec
jmp
push
jno
adc
push
mov
movsb
push
push
leave
pop
xor
clc
mov
inc
xchg
sbb
mov
pop
testl
mov
clc
je
inc
sbb
fmull
into
jp
int
add
cs
adc
jo
ss
xchg
dec
jp
jle
jno
pop
hlt
cmp
sbb
addb
sbb
cli
pushf
shl
ss
sahf
fisttpl
push
je
add
ret
test
ficoms
bound
xor
push
pop
jle
arpl
repz
fldcw
add
jo
push
cmc
lcall
mov
repz
add
test
ficompl
je
inc
loopne
push
or
cmp
leave
popa
filds
pushf
mov
loope
mov
xchg
test
movsb
scas
push
fcomps
push
invd
sbb
sahf
adc
popf
jl
or
repnz
cmp
pop
jne
ficomps
mov
mov
pop
xor
jbe
xor
call
mov
dec
inc
cltd
add
ret
xlat
and
pop
sysenter
push
cli
js
mov
push
inc
loopne
xchg
insb
mov
fmul
push
ret
idiv
dec
or
sub
cmp
das
add
mov
mov
enter
adc
jl
stos
inc
pushf
mov
scas
fimull
ljmp
pusha
cmp
dec
xor
lea
imul
out
and
ret
jg
das
and
stos
fwait
mov
das
cmp
push
or
mov
lods
fisttpll
cmp
and
xchg
mov
aad
cltd
and
sbb
ljmp
xor
sbb
stos
leave
push
out
sub
fdivrl
jno
idiv
enter
ret
push
pop
fisubl
lea
add
sahf
lea
mov
push
pop
adc
mov
stc
mov
push
test
jo
or
clc
fcmovnb
push
test
or
aad
push
sbb
ljmp
rcrb
sub
mov
add
cmp
mov
jl
mov
int3
cmpsb
cs
shl
push
inc
negb
lcall
pop
ss
das
fdiv
add
in
dec
xchg
add
cltd
dec
adc
dec
xor
shl
mov
sbb
adc
daa
cltd
dec
mov
pop
aam
sbb
add
clc
push
ficoml
mov
cld
mov
sub
das
or
cwtl
mov
add
xor
pop
push
mov
movsb
push
add
xchg
jb
xchg
inc
jae
push
sub
aad
outsb
repnz
aaa
hlt
sub
out
pop
leave
shl
sbb
jb
or
xlat
leave
adc
cwtl
and
fwait
push
and
jno
sub
adcb
sbb
ljmp
repz
outsb
add
xor
aaa
lret
xor
jmp
jecxz
jb
xor
mov
sub
loope
pusha
ret
cwtl
test
movlps
mov
test
jle
sbb
cmpsb
rolb
or
outsl
mov
inc
jb
sbb
xor
mov
cs
dec
aad
mov
cmp
xchg
sbb
jno
insb
ljmp
push
push
js
sbb
sub
and
ss
insb
xchg
call
in
xchg
cmp
inc
add
lock
orl
scas
mov
movsb
add
jae
pop
je
or
pop
stos
outsb
inc
out
cli
js
jae
or
mov
nop
pusha
cmp
ficompl
inc
nop
mov
rdpmc
inc
and
lods
push
xor
into
xchg
lds
sub
ret
xchg
es
add
sbb
mov
or
mov
add
mov
jp
pop
push
mov
mov
or
dec
cmp
pop
enter
push
leave
stos
std
test
pop
sbb
mov
mov
mov
inc
cmp
cmpsl
cwtl
mov
cmp
das
xor
test
ss
and
out
push
ljmp
mov
xor
std
stos
mov
or
push
cmp
sbb
xchg
icebp
sbb
mov
lahf
lea
out
pop
xchg
jge
in
mov
xor
jne
and
jmp
je
mov
sbb
mov
test
or
add
xor
add
add
mov
xor
cltd
int3
test
push
rcrb
mov
jg
ja
repnz
pop
cmp
repnz
rolb
mov
je
cmp
cmovs
adc
daa
outsl
adc
xchg
adc
gs
scas
mov
and
inc
rcrl
test
and
inc
roll
mov
mov
in
stos
mov
testb
lahf
or
outsb
stos
cmc
sub
jae
adc
sbb
sbb
into
mov
cld
xor
push
inc
add
scas
les
pop
adc
jge
push
inc
into
popa
mov
xor
loopne
pop
mov
dec
mov
out
push
jo
out
repnz
out
add
push
and
push
lret
inc
out
jecxz
and
loopne
fwait
loop
add
cmp
mov
in
mov
jnp
jge
pusha
push
rcrb
add
cmp
inc
sub
sub
ss
outsb
ljmp
leave
dec
mov
std
fildl
and
mov
es
or
push
call
mov
sbb
je
lods
pop
fistpl
or
push
pop
jb
cmp
mov
popf
push
xor
movsb
mov
dec
jecxz
mov
cmp
mov
decb
dec
lcall
push
mov
sub
ror
mov
pushf
cltd
mov
adc
sbb
xor
xorb
and
pop
cwtl
jbe
xor
repz
sub
test
cwtl
pop
sbb
mov
fiadds
cmpsb
into
xor
js
mov
bndstx
pushf
daa
lods
push
ljmp
sahf
cmp
cmp
cmp
divb
mov
add
mov
jb
push
jge
push
fwait
clc
mov
call
rcll
inc
jecxz
inc
out
sub
sub
sub
push
cltd
dec
inc
add
ficompl
inc
push
jb
shll
xor
ljmp
jle
jl
jb
jo
jbe
inc
adc
push
addr16
ret
jae
leave
jle
enter
sbb
loopne
pop
loop
xchg
push
lcall
das
mov
sub
popf
dec
mov
jl
cmpsb
adc
xor
ljmp
and
mov
cmpsb
fcompl
lods
jo
dec
xchg
outsb
lods
in
into
sbb
add
jle
cwtl
repnz
mov
add
test
sbb
xor
sti
push
adc
pop
mov
orl
fdiv
sbb
repnz
jne
hlt
pop
mov
inc
mov
clc
xor
push
pop
ds
lahf
xchg
fcompl
test
shrb
mov
xor
jbe
test
pushl
mov
dec
cltd
icebp
test
shlb
lea
call
sarb
cmp
add
lock
xor
fwait
cmp
in
fimull
jl
jb
sbb
daa
orl
jns
jae
enter
mov
mov
add
mov
dec
ss
daa
push
mov
sti
and
imull
stos
data16
mov
xchg
mov
inc
add
push
jmp
insb
xor
aam
push
or
adc
mov
mov
int
xchg
mov
mov
jg
or
movsl
outsl
cmp
cld
xor
jecxz
and
out
sub
mov
push
push
dec
cmp
pop
push
sub
and
add
insb
rclb
inc
or
int
xor
jle
inc
push
in
faddl
scas
jb
je
je
je
inc
sarl
clc
jo
ds
cmp
rcr
mov
pushf
and
push
popa
ror
jecxz
and
mov
mov
mov
pop
scas
xchg
and
popa
pop
mov
push
pop
ret
pop
fistl
push
jmp
je
enter
sbb
inc
mov
ret
push
or
fwait
clc
lahf
ret
int3
xchg
jle
scas
mulb
repnz
mov
lcall
stc
repnz
div
aaa
movsb
iret
jle
and
jne
gs
push
jecxz
iret
xor
into
mov
sub
fistpl
jne
push
ja
mov
cmp
dec
cwtl
js
inc
lods
mov
mov
xor
xchg
add
cmp
aam
and
test
xchg
leave
pop
lds
or
sbb
sbb
insb
es
and
aas
xor
mov
inc
pop
ss
dec
test
mov
jp
lea
aas
cmc
add
inc
cltd
repnz
push
xor
cld
ljmp
xor
push
or
mov
int
jo
lock
stos
mov
addr16
pop
pop
test
pusha
adc
daa
ret
or
jg
or
mov
mov
cltd
and
or
out
xchg
cli
lret
xlat
jno
push
in
inc
add
lock
inc
call
xchg
xchg
xor
sub
or
sbb
sti
ds
jmp
adc
sbb
push
sbb
xor
cwtl
sbb
mov
das
xor
mov
jbe
cmp
jne
enter
sbb
push
inc
mov
xchg
lea
adc
pop
xor
mov
repnz
sub
lods
sbb
ret
xchg
pop
sbb
lahf
mov
pusha
fdiv
or
cmp
cs
js
faddp
xchg
rcrl
xchg
xchg
out
sbb
jbe
inc
push
frstpm(287
imul
enter
mov
pusha
mov
xchg
push
cmp
push
sbb
xchg
rcll
cmp
ljmp
push
pusha
push
das
mov
xor
fs
jle
adc
sbb
xchg
idivl
push
adc
mov
out
push
sarl
shrb
cmp
mov
inc
ss
ds
lods
int3
dec
aaa
lahf
inc
loopne
push
psubsb
sbb
les
sub
repnz
lea
stos
xchg
les
mov
ds
jecxz
pusha
aas
and
imul
test
pop
nop
inc
or
movsb
xchg
stos
push
xor
out
sub
or
insb
push
clc
jb
push
clc
mov
xor
in
sarl
fisttpll
inc
int3
out
test
xchg
out
mov
push
add
pop
ljmp
cli
lcall
out
xor
cwtl
add
inc
add
dec
adc
ds
xor
xor
sahf
ljmp
mov
stos
subl
sub
rclb
mov
xchg
js
sbb
lock
sbb
subb
xor
or
xchg
lea
cmp
das
repz
je
push
add
sar
test
fidivl
mov
leave
lods
inc
sbb
inc
in
ljmp
fimuls
iret
sbb
bound
pop
lods
adc
jmp
xchg
dec
push
add
and
cmp
add
dec
cltd
cmp
cwtl
sbb
pop
out
inc
mov
jp
inc
ret
inc
das
push
out
inc
or
mov
jbe
push
js
push
xchg
jnp
test
int3
aaa
inc
xor
ret
imul
add
push
sbb
mov
dec
push
mov
or
lahf
cs
lea
jmp
pcmpeqd
int
enter
pop
enter
fwait
gs
movsb
les
push
pop
sbb
mov
int
fucomip
shll
xor
daa
pop
dec
out
ds
orl
or
inc
sbb
popa
je
adc
mov
loop
xor
sbb
inc
mov
out
aam
in
std
mov
jne
mov
out
into
xchg
push
adcl
mov
or
aas
push
incb
add
pop
mov
bound
addr16
push
inc
mov
lock
scas
inc
adc
call
repnz
dec
je
pop
mov
cmp
cmp
loop
out
xlat
jo
stos
xchg
cmp
cmp
cwtl
mov
lea
ret
fcompl
pop
mov
sbb
mov
sub
xchg
adc
mov
out
xchg
adcb
repnz
test
cmp
popa
mov
add
ss
and
lds
add
or
jae
mov
in
scas
xor
enter
movsb
sbb
enter
xor
aaa
jnp
je
repz
push
dec
add
aaa
cmp
ret
add
lcall
pop
sbb
mov
mov
inc
sbb
stos
mov
cmp
dec
sub
and
je
add
lods
pushf
jns
loop
pop
mov
or
add
pushf
dec
ljmp
xchg
loopne
adc
push
jnp
jge
lea
loope
lret
cltd
ds
jne
xchg
test
push
insl
out
popf
loop
pushf
jl
loopne
and
jle
xchg
pop
and
adc
adc
inc
test
mov
bound
sbb
mov
mov
test
incb
add
inc
xor
cwtl
push
ficoml
cmp
jbe
and
mov
andb
xor
es
decb
add
shrl
jle
ljmp
mov
arpl
fcmovbe
cmp
ja
push
int
or
ljmp
sub
sub
les
loopne
or
inc
pop
mov
out
faddl
or
xchg
daa
imul
lret
add
cmp
addr16
je
pinsrw
xchg
loopne
cmp
sbb
repnz
push
loop
lahf
dec
or
ljmp
stos
mov
loop
fidivrl
jge
orb
out
leave
mov
clc
dec
je
pop
lods
sbb
mov
outsl
push
cmp
dec
jo
fildl
inc
mov
fidivrl
jl
push
push
add
jb
daa
xor
dec
cmp
mov
cmp
dec
faddl
pop
cli
jb
xchg
jmp
mov
adc
xchg
push
push
test
jo
inc
jb
cwtl
aaa
jecxz
jne
add
or
sbbb
inc
push
xor
xchg
and
cmp
lock
aam
pop
cmp
push
lods
mov
push
mov
or
pop
push
ljmp
not
das
xor
mov
push
repz
mov
cltd
or
cwtl
push
call
inc
rorb
add
jl
sbb
in
enter
ds
xor
aaa
test
xor
cwtl
inc
shr
lret
cli
sar
insb
xor
dec
cli
push
push
into
dec
inc
mov
lea
jb
inc
rcll
je
inc
aas
push
cwtl
adc
daa
cmp
mov
and
enter
cmpsb
sbb
lock
imul
rorl
or
xor
pusha
enter
fwait
mov
mov
sub
xor
cli
inc
sbb
lret
scas
cwtl
jecxz
inc
add
pop
sbbb
mov
cltd
xchg
sti
or
inc
and
loop
subl
lods
sub
cmp
imul
jmp
fs
add
xchg
je
imul
testb
cmp
and
pop
xchg
lock
push
or
test
rol
sbb
jbe
loope
cli
push
aaa
ss
mov
fwait
call
in
dec
push
xor
inc
adc
adc
popf
clc
sti
and
sbb
mov
push
sbb
cmp
enter
int3
bound
mov
daa
aas
sbb
xchg
mov
mov
ljmp
enter
xchg
sbb
push
sbb
xchg
mov
mov
sub
jle
jl
inc
jno
and
es
jo
test
jg
mov
lret
sub
gs
cld
dec
cli
add
jle
lret
shrb
add
xchg
out
into
xor
imul
xor
xor
sbb
cmp
pop
enter
or
cmpsb
mov
or
in
push
shrl
js
mov
push
push
leave
push
aam
in
fsubp
sbb
stos
aam
xchg
jl
repnz
inc
ret
lahf
data16
mov
daa
pusha
lea
lods
mov
cwtl
adc
ficoml
jb
inc
mov
das
cmp
lock
cwtl
in
mov
mov
lret
cmpsb
dec
and
and
xor
jmp
shrl
mov
das
pop
push
ret
outsb
and
loopne
in
dec
mov
jb
sub
xchg
xchg
inc
sbb
pop
data16
xorl
fstl
sbb
enter
adc
scas
ret
cmpsl
pop
int3
sbb
mov
clc
ss
inc
cmp
sub
cmp
and
hlt
outsl
cmp
ret
and
sarl
add
lahf
andl
or
inc
jp
sub
sti
push
xor
mov
imul
popf
inc
mov
pop
test
fidivrs
push
scas
or
add
sbb
ss
ret
cwtl
sbb
push
daa
push
jmp
adc
inc
mov
shrl
sbb
push
cmp
in
lea
xor
jno
mov
sub
int
xchg
insl
out
mov
les
sarl
adc
jnp
test
xchg
dec
repnz
xor
cmp
jne
into
subb
idiv
testb
xor
and
push
ret
push
xchg
inc
xor
je
loopne
hlt
jns
mov
iret
adc
cld
xor
dec
pop
bound
cli
fisubrs
sub
fwait
stos
push
test
or
das
push
lea
dec
fmulp
or
lock
inc
xor
adc
daa
mov
sar
or
xchg
ljmp
loop
out
jb
jbe
push
inc
ret
mulb
jae
sbb
orb
fcompl
inc
xchg
ret
imul
sbb
add
add
jle
adc
sbb
cli
cli
arpl
fsubrl
add
hlt
rcll
pushf
sbb
cmp
mov
test
das
xor
add
mov
lret
enter
pop
xchg
fisttps
mov
dec
ss
stos
movsb
iret
xchg
dec
pop
sbb
js
jle
push
fisttps
cli
push
xor
hlt
je
pop
fisttpll
scas
add
into
incb
ljmp
in
push
popa
enter
inc
sbb
push
push
adc
pop
jmp
mov
stos
ds
xchg
or
jg
test
ret
mull
or
fdivs
sbb
inc
pop
sahf
cwtl
and
sti
push
popa
add
jp
inc
mov
adc
and
inc
xchg
pop
fwait
inc
mov
jo
sahf
xor
rorl
inc
test
mov
das
inc
push
ret
push
lods
sbb
mov
lods
sbb
ljmp
cwtl
and
lea
jbe
mov
jle
pop
xchg
pop
mov
sub
mov
ss
fmuls
xor
or
add
add
push
jo
jbe
je
je
inc
sub
cwtl
push
jbe
sub
rcrl
add
das
pop
jb
ljmp
clc
cs
idivb
lock
add
iret
push
js
call
stos
push
xchg
sbb
inc
int3
inc
jb
inc
sbb
or
inc
fxch
in
clc
adc
jl
sub
and
mov
xor
hlt
push
pusha
mov
xchg
enter
mov
daa
jp
push
fwait
add
jle
sbbb
and
jb
sub
loopne
xor
je
pop
jns
jo
out
mov
xchg
enter
sbb
mov
xchg
fs
sbb
es
pushf
mov
adc
pop
push
push
out
cwtl
mov
inc
outsl
pop
fldenv
std
clc
sub
mov
repnz
xlat
sub
ret
sub
cmp
pop
jmp
xor
subl
pusha
add
xor
rolb
ljmp
sbb
sahf
xor
bswap
cmp
ljmp
dec
xchg
jb
inc
cli
mov
notb
mov
push
cwtl
mov
jl
cmp
dec
popf
shrl
test
in
enter
stc
pushf
fildll
in
cli
cmc
incb
nop
mov
mov
out
pop
jne
pop
dec
fucomip
add
fs
pop
je
inc
xchg
clc
dec
xor
scas
pop
and
fadds
shl
adc
sarl
sbbb
punpcklwd
out
jge
adc
cmp
mov
jb
test
imul
ficoml
and
js
jbe
inc
loopne
dec
push
aam
in
data16
inc
xchg
xor
rorb
dec
ret
pop
mov
dec
ljmp
xor
xor
jecxz
jae
sbb
stos
bound
push
loop
lahf
or
push
cmp
mov
sahf
ds
cli
jp
mov
add
push
mov
add
aaa
pminub
clc
mov
mov
lret
mov
dec
loope
jle
mov
xor
and
xor
out
lcall
and
mov
enter
loope
std
ss
xchg
stos
ret
cmp
out
mov
push
loop
xor
int3
xchg
or
mov
sti
fpatan
in
cmpsb
adc
and
add
shrb
dec
mov
mov
ds
rorl
add
aas
mov
dec
cld
pop
cli
inc
pushf
xchg
push
int3
daa
pop
mov
dec
sahf
data16
adc
sub
or
mov
aas
push
lock
inc
popa
leave
mov
clc
and
sbb
repz
popl
xor
lret
sbb
enter
lret
or
fs
fiadds
inc
add
cmp
cmp
into
cmp
mov
cmp
bnd
mov
or
in
sub
rcrb
mov
xlat
push
scas
dec
inc
jecxz
shrb
push
out
popf
movsb
mov
jbe
sbb
xor
jbe
adc
cwtl
mov
inc
ja
sahf
call
push
push
cs
into
cli
jmp
push
das
decb
pop
push
sarl
cmp
in
movsb
daa
lret
outsb
pop
ds
push
pop
daa
aas
dec
dec
mov
inc
bound
dec
inc
scas
sti
fcomi
cmp
add
lea
mov
mov
xor
jbe
or
in
cmp
insl
jl
pop
push
sbb
ljmp
push
sub
inc
ljmp
adc
arpl
fs
push
push
or
fcoms
jp
js
push
jle
rcrb
rol
call
repnz
push
and
bswap
out
xchg
adc
sbb
lret
xor
mov
xor
into
sub
or
push
pop
xor
or
lcall
add
jge
jp
dec
dec
mov
inc
push
lret
shlb
push
cmp
jecxz
negb
mul
xor
outsl
dec
inc
repz
mov
and
mov
push
xchg
add
imul
mov
ficoms
push
inc
pop
xchg
push
adc
cmp
je
jge
inc
jne
lcall
out
js
inc
dec
ret
aaa
fwait
xor
xor
cltd
mov
push
push
pop
subl
in
lock
sbb
out
add
or
or
dec
xor
push
pop
inc
cs
lret
or
add
fsubr
mov
stos
mov
movb
mov
cs
dec
dec
movsb
add
jmp
xor
and
nop
imul
and
testb
mov
arpl
jne
mov
mov
inc
stos
pop
jb
lcall
test
lds
add
push
push
push
inc
cs
divb
sahf
mov
dec
xchg
inc
xchg
inc
popf
pop
inc
test
jmp
push
outsb
xor
dec
fidivl
mov
jo
lcall
lahf
cmpsb
sbb
loop
xor
clc
fdivp
shlb
add
jle
sbb
leave
or
clc
fiadds
repz
cld
xchg
nop
adc
push
push
je
cld
xchg
lahf
adc
lock
les
lock
stc
js
jge
repnz
jnp
popa
aam
cld
mov
ljmp
data16
repz
add
in
cli
inc
in
ljmp
call
aam
call
mov
call
cmp
cmc
gs
mov
movsl
inc
div
out
sbbl
mov
cmc
inc
call
out
rclb
jl
mov
jle
out
mov
aam
fsub
cmpsw
je
push
je
sbb
sbb
lock
mov
mov
in
pop
ret
jle
rcl
cmp
push
jbe
ret
lcall
xchg
xor
lds
ret
cwtl
xchg
les
pop
xchg
in
xchg
or
sub
sbb
xchg
int
jecxz
mov
lret
cmp
mov
ret
pop
in
add
sub
insl
inc
pop
out
es
es
sbbl
repz
pop
inc
stos
xchg
les
jns
shll
mov
cld
ss
in
rolb
ret
and
fmuls
push
pop
jl
add
ret
lods
repnz
jnp
lahf
mov
mov
pop
insl
or
pushf
or
gs
stos
sbb
lahf
add
or
xor
cmp
jecxz
aas
gs
sub
cmpsb
jp
inc
xor
pop
xchg
mov
sbb
pop
and
das
inc
dec
outsb
stos
shrl
aaa
sbb
xchg
xchg
pop
sbb
jl
add
mov
lods
mov
mov
sbb
cmp
enter
ds
ljmp
xchg
jbe
pop
fisttps
add
push
loop
js
xor
stos
lcall
pushf
mov
xchg
mov
sarb
cwtl
es
sahf
inc
mov
adc
mov
movsb
mov
in
sbb
xor
xor
inc
sbb
das
sbb
sbb
inc
lock
enter
arpl
xor
push
pop
and
dec
or
aam
fnstenv
mov
lcall
jl
inc
jno
sbb
adc
dec
xor
or
outsl
xor
je
cld
mov
mov
sub
mov
scas
inc
loopne
stc
scas
int3
sbb
shlb
int
inc
pop
lods
push
mov
insl
mov
inc
mov
xor
jno
dec
aaa
ror
xor
stos
into
inc
or
mov
jbe
xchg
repnz
adc
push
iret
popf
lea
shlb
xor
inc
pop
xor
and
xor
push
adc
fmull
push
out
daa
sub
ljmp
jo
fcom
cmpsl
jecxz
pop
and
lea
cmc
lret
xor
push
cwtl
cwtl
fdivrs
xchg
das
bswap
jbe
fldenv
call
jbe
int3
pushf
and
sbb
leave
mov
push
roll
jp
fimull
scas
sbb
test
push
rolb
sti
in
rcrl
inc
and
push
ret
xchg
jl
sbb
mov
add
loopne
call
inc
inc
push
jae
sbb
clc
enter
shrb
sbb
add
and
iret
sub
repnz
ficompl
sub
pop
xchg
cwtl
jl
adc
add
out
sub
mov
dec
lea
ret
mov
cmp
add
xlat
sbb
inc
mov
push
jno
flds
adc
cmp
imul
and
xor
das
stc
jmp
xchg
movsb
jg
cmp
rol
xor
sarb
xchg
xor
add
std
ljmp
mov
jb
add
xchg
mov
sub
push
mov
ja
or
inc
fs
imul
ds
sub
andl
call
adc
dec
mov
cltd
test
dec
and
pop
dec
push
incb
je
pop
movsb
push
imul
shrl
mov
adc
cmpsl
pop
mov
push
aaa
sbb
or
lahf
dec
mov
bound
inc
push
sbb
mov
push
jb
inc
jo
add
pop
sub
or
push
movl
adc
cmp
sbb
push
jmp
xchg
ds
mov
add
negb
add
xor
int3
mov
mov
cmc
scas
mov
ss
jno
push
cli
inc
xor
mov
mov
inc
sub
fisubs
jno
dec
fs
mov
mov
aas
lock
out
daa
xor
movsb
inc
dec
sbb
lret
adc
jle
add
mov
fcoms
xchg
sbb
lret
cmp
adc
mov
int3
cli
jecxz
and
repnz
push
testl
pop
or
mov
and
cmp
inc
and
addr16
jle
nop
je
inc
or
cmp
test
mov
enter
dec
jmp
jecxz
jne
ljmp
gs
inc
aam
hlt
mov
pop
test
mov
ret
inc
add
cmp
scas
faddl
fsubs
fimull
inc
sub
sub
add
cwtl
cwtl
jecxz
xor
mov
inc
jbe
adc
xor
ret
sub
sti
fisubl
mov
or
fcmovne
sbb
jle
test
imul
mov
add
push
cmp
or
and
push
mov
jg
mov
inc
das
mov
add
addr16
test
into
ret
out
data16
outsb
xor
dec
and
jl
mov
xor
shl
arpl
stos
adc
out
pop
xchg
xchg
nopl
imul
pop
gs
lea
mov
inc
xor
cmp
je
bound
popf
cmp
loopne
loop
popf
clc
xor
rorw
or
jle
jg
push
pop
cmpsb
repnz
mov
inc
push
outsb
cmp
mov
ret
popf
scas
pop
xchg
cwtl
mov
cs
sub
repz
hlt
fnstenv
inc
roll
sbb
sti
enter
nop
jo
arpl
xchg
add
push
jl
sbb
and
cmp
mov
and
in
xchg
mov
adc
dec
shlb
outsb
stos
inc
adc
push
xor
insb
loopne
push
mov
stos
inc
insl
into
and
nop
cltd
in
jmp
sub
out
out
loop
out
arpl
pushl
add
testl
xorb
in
mov
mov
mov
test
mov
add
pop
cs
cmp
daa
xor
mov
stos
cmp
xchg
movsb
sbb
out
popa
mov
push
je
lret
mov
or
pop
cmp
cmp
push
mov
out
sbb
xor
sbb
push
cmc
jg
rolb
push
ds
xchg
pop
xor
sbb
push
ret
cli
std
cwtl
push
push
add
nop
inc
das
pop
ljmp
mov
dec
shl
inc
sarb
adc
mov
arpl
stos
or
jmp
and
push
addr16
sub
and
mov
inc
std
add
aaa
inc
dec
ror
inc
mov
push
add
repnz
push
iret
mov
lods
ret
sub
fndisi(8087
shl
jmp
gs
test
jp
fldt
and
push
jnp
xor
lods
pop
dec
add
jl
fisubrl
mov
sbb
push
dec
test
mov
out
repnz
cs
cmp
fisttpl
shl
nop
mov
addb
mov
jnp
mov
shrb
es
xor
daa
dec
dec
fcmovb
outsb
sahf
insl
lahf
mov
mov
mov
sbb
xchg
pop
shlb
sbb
or
or
loope
enter
pop
dec
mov
push
das
test
push
ret
mov
adc
pusha
inc
push
add
inc
lods
dec
je
fs
xchg
xchg
mov
cld
negb
ds
pop
jns,pn
xchg
lret
cwtl
in
sub
cli
mov
mov
and
inc
mov
sbb
inc
push
xor
add
sbb
inc
sub
mov
mov
ss
ss
in
das
daa
pop
sbb
push
dec
inc
mov
daa
mov
jo
outsb
cs
push
push
in
xor
xor
mov
cmpsb
pushf
or
test
xor
inc
mov
dec
cmc
decl
jb
ljmp
mov
cmp
inc
xchg
aam
push
scas
or
insl
imul
nop
mov
mov
mov
push
pop
cltd
jns
pusha
loop
push
xchg
push
pusha
mov
repnz
xchg
xor
push
outsb
push
inc
mov
jl
and
inc
inc
cli
inc
popf
cli
xchg
mov
push
int3
enter
lcall
adc
or
ljmp
dec
mov
cmp
xchg
xchg
cwtl
movsb
mov
sbb
cli
mov
popf
push
inc
notb
cltd
ficoml
xor
push
cs
pop
mov
push
mov
cli
pop
sahf
add
push
loopne
xor
test
addl
inc
and
and
mov
hlt
daa
lret
lea
das
js
dec
stc
xor
pop
scas
movsb
cltd
push
enter
xchg
jle
out
xchg
rdmsr
fxtract
sub
lret
or
mov
insb
frstor
jmp
inc
push
add
mov
mov
and
jle
mov
and
xor
inc
daa
lahf
jmp
shlb
fimuls
mov
cmp
add
pop
push
and
inc
mov
inc
lret
mov
push
mov
lods
lahf
pmulhuw
loop
inc
out
and
jo
inc
imul
cmpsl
pop
mov
out
cli
sahf
js
push
sub
push
mov
lret
loope
or
adcl
sub
mov
jne
jb
je
inc
xchg
pop
jo
mov
mov
sbb
jle
push
and
dec
repnz
mov
ds
mov
mov
ja,pn
xor
cmp
pop
push
inc
mov
ljmp
jo
ljmp
push
cmpsl
mov
stos
pop
ds
cmpsb
scas
fcoms
aas
pushf
mov
mov
xor
popa
push
scas
sbb
push
pop
cmp
out
pop
loop
out
mov
cmpsb
add
movsb
and
push
add
mov
lret
cmp
imul
data16
das
rorb
or
xchg
cmp
nop
aaa
out
das
mov
ret
adc
jg
add
cld
inc
sbb
push
pop
push
mov
test
jbe
and
lods
rcll
mov
mov
xchg
push
je
pop
ss
repnz
adc
push
aaa
mov
lock
pop
lcall
mov
push
or
xchg
mov
mov
enter
jo
inc
cli
inc
jno
or
icebp
sub
clc
sarl
sub
inc
cmp
cld
add
fwait
stos
xchg
adc
add
sti
adc
mov
jecxz
repz
sub
andl
push
addl
and
das
pop
lea
arpl
add
fcmovb
rcrl
inc
sbb
jbe
lahf
jmp
ja
mov
xchg
adc
cwtl
add
testb
add
jp
je
push
add
mov
jecxz
inc
dec
out
cwtl
cld
xchg
hlt
rclb
rolb
sbb
inc
pop
stos
bound
lea
out
cltd
stos
test
bound
clc
push
add
cmp
xchg
pushf
test
sbb
loope
sbb
xchg
xor
mov
test
mov
push
es
sbb
hlt
add
dec
dec
cltd
repz
data16
mov
xchg
stc
xchg
lahf
xor
pop
inc
push
das
mov
into
dec
mov
push
cmp
icebp
mov
jge
inc
rorb
subl
inc
scas
mov
shl
push
inc
add
push
pop
lret
and
data16
daa
xor
xor
fisttpl
mov
dec
ret
cmp
or
cwtl
repnz
cwtl
push
push
fistl
add
jb
push
dec
ljmp
push
mov
inc
hlt
adc
je
inc
xchg
enter
push
inc
lret
ljmp
sahf
jle
lcall
add
sbb
push
outsb
mov
and
stos
lcall
inc
nop
enter
mov
insb
hlt
negb
sbb
mov
jb
inc
addl
aad
or
adc
sub
mov
dec
inc
pop
mov
je
inc
xlat
bound
out
leave
rcr
in
push
sldt
fstps
test
repnz
add
mov
es
xchg
lea
js
jne
lods
out
mov
jp
out
sbb
jg
jo
leave
mov
aam
into
xor
push
push
cmp
sbb
mov
push
pop
add
mov
dec
lods
mov
inc
repnz
imul
pop
xchg
clc
cmp
xor
mov
das
loopne
aam
xor
ljmp
out
cwtl
dec
mov
cmp
imul
into
cmp
ljmp
mov
into
and
loopne
pop
sub
jae
sub
and
mov
shlb
push
pop
leave
sbb
das
mov
push
pop
bnd
and
push
lods
jle
sbb
mov
adc
call
orb
xor
test
daa
jmp
in
cmp
jl
xor
dec
into
mov
xor
jno
mov
mov
mov
pop
push
fs
xchg
outsl
mov
push
sub
and
sub
dec
sbb
les
pop
or
push
jbe
je
inc
jo
or
mov
push
lds
lret
sub
and
push
dec
outsl
mov
lahf
imul
sbb
add
xor
add
iret
enter
nop
sbb
enter
cmc
scas
cmp
sbb
jg
cwtl
mov
sub
repz
repz
add
jp
inc
jp
les
inc
sub
into
push
push
fsubrp
cld
cs
inc
cwtl
xor
repnz
das
xor
inc
adc
loop
cs
cwtl
push
inc
adc
cmp
mov
jmp
xor
jecxz
inc
and
inc
pop
mov
pushf
add
sub
out
cmp
enter
fs
rorl
push
addb
mov
xchg
loop
cs
out
mov
and
jne
or
cmp
mov
xchg
js
add
shll
mov
scas
inc
pop
mov
jge
push
jle
sub
je
push
adc
jle
mov
mov
into
mov
repnz
ljmp
sti
aad
enter
outsb
adc
loop
inc
xor
aad
sub
adc
loopne
sti
dec
aam
jno
test
inc
sbbl
shl
and
mov
sbb
xor
pusha
sub
push
pop
add
loop
fsubr
incb
mov
mov
sti
imul
xorb
addl
hlt
in
cmp
hlt
cmp
clc
jl
lahf
out
xchg
mov
stos
fdiv
testb
out
pusha
add
xchg
scas
mov
jne
bound
ljmp
mov
sbbb
icebp
rclb
push
or
test
dec
dec
mov
inc
pusha
add
xor
push
repnz
jo
and
dec
xchg
adc
repnz
add
xchg
cli
or
mov
xor
in
pop
cmp
test
ljmp
sub
cmp
xor
insl
push
cld
push
orl
mov
xlat
in
xor
inc
mov
cmovo
push
fdivrs
call
inc
inc
dec
pop
push
push
cmp
xchg
dec
push
popf
sbb
push
pop
lahf
lcall
inc
jecxz
push
xchg
rolb
pushf
inc
mov
std
push
testl
fnstsw
stc
notb
xchg
sub
imul
xchg
or
in
ljmp
mov
in
add
cli
and
inc
daa
mov
dec
sahf
add
mov
push
sbb
notb
sbb
pop
mov
das
fisubrl
stos
push
ss
jp
jl
push
and
xchg
enter
pusha
mov
fdivl
hlt
inc
pushf
sub
pushf
popf
and
sbb
stos
inc
sbb
mov
cs
dec
sub
faddl
xor
cmp
push
jmp
pop
jo
out
jo
outsb
push
shrb
pop
mov
repnz
cli
sub
mov
add
pop
jbe
out
push
loope
cmp
push
cli
pusha
jl
jb
push
xor
mov
ds
mov
mov
cmp
jbe
fs
xor
jae
es
lret
hlt
push
xor
lods
test
jne
push
add
push
and
push
adc
ss
jns,pn
popf
xchg
ljmp
inc
fsqrt
push
repnz
xor
mov
aaa
loope
cld
fistpl
mov
add
mov
outsl
push
loopne
mov
push
mov
loope,pn
imul
add
mov
shll
push
inc
add
repz
push
out
mov
test
into
mov
and
push
addl
dec
cld
inc
mov
mov
leave
adc
test
push
push
ja
enter
pop
cwtl
push
add
fsubs
pop
cwtl
inc
push
stos
mov
push
mov
mov
mov
add
loop
xor
loope
pop
cli
popf
mov
ficoml
enter
or
loop
sub
movsl
add
push
jp
push
stc
add
adc
inc
cmp
sbb
ljmp
jne
shlb
call
mov
negb
mov
push
daa
sti
dec
jo
aaa
push
adc
mov
in
push
jmp
je
nop
outsb
in
repnz
push
dec
out
rolb
adc
jbe
je
inc
jl
fs
enter
add
ljmp
lods
das
push
dec
clc
addr16
jle
call
add
xor
pop
int
mov
jl
inc
sub
imul
cs
xchg
data16
mov
in
scas
rcr
push
push
cmp
jno
movsb
lret
mov
xor
das
xor
lcall
adc
push
pop
add
cli
jp
test
fidivrl
add
jmp
pop
xor
mov
add
jb
push
sub
cmp
sbb
xchg
divb
push
lcall
jmp
lret
bound
fs
test
lret
nop
mov
and
adc
push
enter
inc
insb
xchg
push
mov
mov
outsb
das
xchg
cmp
pop
mov
fidivrs
ret
negb
out
mov
fdivrs
inc
lcall
jp
inc
outsb
add
enter
js
aad
add
cmp
or
sbb
jb
xor
cld
in
into
shr
scas
or
cmp
hlt
ret
repnz
rol
and
add
adc
int3
sbb
repnz
dec
aaa
push
dec
jle
repz
xor
mov
push
mov
cwtl
xor
push
or
movsb
test
jle
dec
jbe
xchg
je
je
push
int3
enter
pop
add
add
and
mulb
xchg
ficompl
push
mov
sbb
negl
daa
mov
sub
ss
arpl
sbb
enter
out
mov
lods
ds
mov
fdiv
out
out
hlt
mov
sbb
add
sahf
add
sbb
das
jnp
cli
lahf
repz
out
mov
xor
test
arpl
push
jmp
jecxz
sti
mov
and
ss
sub
repz
sub
fnstcw
or
sbb
add
mov
sbb
sarb
hlt
sbb
rorb
popf
ljmp
and
movsb
mov
xor
inc
cwtl
lcall
lret
mov
out
adc
popf
bound
xor
add
xchg
jo
roll
gs
mov
js
das
inc
mov
mov
mov
xor
divb
cmp
add
inc
pop
cld
jl
jb
push
and
add
inc
das
loop
mov
and
loop
out
adc
out
dec
test
dec
add
add
pop
scas
push
in
adc
out
or
into
mov
enter
ret
mov
adc
cmp
scas
dec
bound
enter
mov
sbb
mov
or
mov
push
sbb
test
daa
pop
lret
out
insb
jle
mov
hlt
js
or
ljmp
mov
sbb
outsb
inc
jle
push
xchg
into
ret
sbb
xor
sahf
fcmovbe
sub
xchg
mov
sbb
cmp
cltd
test
rclb
es
ror
pusha
pop
push
or
int
push
sub
ret
js
inc
adc
sbb
out
add
inc
cmpsb
xchg
icebp
enter
mov
cli
jl
mov
aam
pop
or
addl
xor
cmp
je
mov
outsl
cmp
add
aas
inc
pop
movsb
xor
lds
js
jne
push
cs
mov
sbb
cli
add
out
mov
pop
ss
xor
sbb
jae
fmul
jecxz
and
fsubl
pop
bound
adcl
rorl
mov
add
imul
add
dec
jmp
sbb
ficompl
cmp
xchg
dec
ss
xchg
je
testb
pop
jg
movsl
xchg
iret
sbb
enter
sahf
inc
mov
and
ret
push
xor
and
arpl
ljmp
fstps
and
fidivrl
mov
mov
cmpb
lea
mov
mov
xor
sub
mov
outsl
cmpsl
scas
mov
xor
and
xchg
inc
xor
push
jge
cmp
ljmp
xor
insb
loopne
sub
jp
ror
and
xor
orb
sarb
repnz
jle
push
dec
adc
jecxz
add
adc
and
inc
pop
loop
push
push
add
jnp
es
inc
sbb
mov
add
enter
sub
sbb
sbb
mov
out
add
outsb
sub
mov
cmp
or
cmp
repnz
xchg
jb
xor
xor
dec
mov
popf
stc
jmp
push
rcrb
sbb
sbb
inc
aam
push
lret
push
dec
or
mov
mov
loop
push
mov
and
mov
mov
pop
movsl
iret
fcomps
clc
sub
jb
jo
push
mov
pop
popf
mov
stc
loopne
sbb
push
jg
pop
hlt
hlt
enter
and
cmpsb
cwtl
fnstsw
pop
ret
sbb
jbe
sbb
mov
loopne
pushf
cltd
xrelease
mov
ds
inc
push
enter
je
push
xlat
mov
cmp
sbb
ljmp
cwtl
pop
outsb
sbb
mov
xchg
stc
outsb
inc
dec
out
xchg
dec
inc
lds
adc
rcrl
sahf
sbb
cmp
add
test
sub
dec
loop
sub
rclb
outsb
jecxz
jb
add
pop
add
sbb
push
loop
inc
out
or
out
cli
stos
nop
rclb
rcl
push
cwtl
sbb
xor
and
mov
out
addl
and
fnstsw
xchg
fdivr
sti
xchg
push
pusha
or
push
xor
cmp
or
in
mov
inc
pop
add
orl
es
push
push
mov
cltd
mov
push
sbb
les
xor
sub
jb
jl
push
je
or
jp
inc
cmpsb
mov
dec
test
stos
enter
fcomps
mov
mov
pop
enter
mov
mov
rolb
sub
pop
cwtl
enterw
push
adc
adc
cli
jb
cmp
into
ficoml
outsb
out
jle
mov
out
mov
jp
stos
cmpsb
pop
and
fstpl
jmp
outsb
and
je
xchg
dec
nop
enter
or
or
inc
sub
ret
jecxz
dec
insl
mov
movsb
push
mov
mov
adc
popl
adc
loop
jp
sahf
lret
pop
cmp
push
das
aad
cld
mov
xor
xor
jp
jo
inc
leave
ljmp
jae
pop
add
cmp
push
je
mov
xor
pop
add
bound
js
in
daa
nop
ljmp
enter
mov
bound
lcall
clc
dec
mov
cmp
popf
mov
adcb
hlt
aas
and
fildl
mov
inc
push
scas
sub
mov
dec
xchg
lock
in
addr16
jle
sbb
fisubrs
jns
push
pop
sbbl
xor
jle
mov
inc
jnp
es
or
scas
shlb
xchg
lea
out
mov
scas
push
mov
sub
int3
cltd
jne
mov
dec
sbb
bnd
imul
dec
adc
cmp
pop
cmp
imul
negb
mov
cld
inc
adc
test
outsb
das
aaa
sbb
lods
jno
enter
push
push
push
stos
test
mov
das
jo
insb
stos
cwtl
lcall
jae
sub
movsl
pop
js
inc
shll
das
xchg
data16
mov
jno
test
stos
aam
add
out
xor
and
and
or
int
xchg
jmp
fstpt
cli
mov
in
jmp
es
in
push
popa
in
xor
add
outsb
ret
jns
xchg
inc
adcb
loop
or
add
and
mov
icebp
xchg
stos
stos
sahf
jle
js
nop
xchg
stos
adc
lds
ljmp
iret
sub
aas
xchg
xor
cltd
push
cli
cmp
enter
or
inc
dec
add
clc
popa
test
movsb
pop
mov
into
push
call
mov
cmp
xchg
ss
mov
aam
xchg
mov
add
cmp
js
jle
inc
push
cli
push
cmp
daa
adc
andl
add
push
imul
jns
loop
icebp
fisubrl
das
mov
dec
ret
push
xor
daa
orl
fistps
stc
stos
xchg
insl
lahf
or
pushf
adcb
xor
xchg
pop
jl
sarb
and
xor
add
xor
xchg
hlt
loop
and
daa
xorb
mov
inc
push
loopne
movsl
add
add
ds
push
adc
sbb
mov
add
or
push
dec
aam
pop
mov
xchg
jne
jle
mov
cmp
sbb
mov
jp
js
cmc
and
xor
xor
daa
jnp
inc
sahf
lret
test
or
and
xchg
sbb
aaa
jns
xchg
sahf
sbb
jne
jp
mov
sub
xchg
pushf
cmp
add
lahf
test
fs
push
hlt
call
lcall
das
mov
andb
mov
add
adc
cmp
ficoml
cmp
popf
jo
and
adc
arpl
jmp
pop
outsb
mov
ds
loop
daa
jp
xchg
ja
sarb
outsb
ljmp
inc
inc
arpl
sarb
inc
cmpsb
or
ds
jo
sahf
lahf
addl
fwait
lahf
lock
inc
std
enter
lret
jl
fisubl
ss
push
mov
ret
mov
inc
jno
adc
cs
adc
shl
sbb
adcl
cbtw
xor
jecxz
push
jb
cmp
jl
sbb
mov
jae
ret
mov
xor
or
adc
xor
arpl
lret
je
pop
int3
push
and
add
testb
pop
out
inc
dec
das
mov
pop
cmp
enter
enter
negb
sbb
call
lods
clc
pop
xchg
inc
lock
or
or
add
lds
add
in
xchg
sub
ret
cmp
call
dec
ret
dec
jb
je
push
pop
mov
lods
lock
in
mov
loop
xor
outsb
popf
sarl
push
leave
rorl
or
jecxz
bound
inc
imul
xchg
out
xor
xor
push
dec
fidivrs
add
pop
repnz
sbb
pusha
sbb
outsb
repnz
add
aas
lods
fisttps
fs
lahf
add
inc
adc
aam
out
dec
cmp
and
les
aam
out
repnz
popf
arpl
xchg
cld
sbb
das
testb
pusha
jge
and
das
nop
stos
je
mov
es
mov
sbb
lea
icebp
out
sub
mov
push
jmp
or
or
cwtl
test
jl
dec
or
add
and
sbb
insl
clc
jo
pop
dec
cwtl
out
mov
sbb
imul
jne
pop
sub
mov
push
dec
sti
dec
notb
sbb
test
shlb
push
fdivrl
dec
mov
push
mov
nop
enter
mov
out
es
inc
nop
sub
cmpsb
mov
fwait
add
test
pop
nop
cli
push
pusha
cli
mov
test
jbe
sbb
push
ret
jo
push
pop
add
stos
jge
fcmovbe
jecxz
xor
out
cli
ret
popf
push
ss
inc
dec
xchg
lret
insb
mov
rcrl
fwait
loop
es
xchg
push
push
sub
cmp
sbb
or
mov
dec
adc
add
daa
jle,pt
into
cmp
xchg
xor
pop
loop
xor
scas
mov
dec
stos
add
add
xor
pop
xchg
mov
rcr
jle
sarl
out
aam
mov
inc
ljmp
xchg
xor
es
or
mov
adc
cltd
std
nopl
adc
mov
sub
cmp
push
test
adcb
dec
test
test
pushf
jo
push
incl
add
inc
add
inc
mov
je
arpl
sub
jp
jmp
and
pushf
mov
stos
mov
cs
pushf
ss
pushf
cli
xchg
mov
and
test
xor
imul
and
cltd
stos
adc
pop
enter
sbb
shr
or
fcomps
leave
and
jnp
adc
sub
pop
cmpsb
ljmp
jle
jl
push
inc
enter
adc
sbbl
fsqrt
idiv
mov
shlb
loop
sub
jbe
orl
mov
mov
sbb
xchg
jmp
jbe
sahf
and
rorb
dec
pusha
jo
movsb
call
clc
inc
cs
mov
jp
cli
pop
popa
mov
xchg
fisubrl
js
push
xchg
xor
add
cmp
mov
mov
nop
jp
daa
inc
inc
mov
js
sub
xchg
add
xor
inc
insb
rcrb
loop
out
lahf
jp
push
je
inc
jp
add
jp
push
fidivrs
in
cwtl
mov
mov
in
or
inc
cmp
aam
ds
dec
add
xor
push
jmp
sbb
inc
fsts
add
aaa
popf
jecxz
add
insb
add
ss
pop
or
daa
gs
inc
xchg
mov
ljmp
push
fsubrp
sub
aaa
shl
cwtl
add
fisubrs
xor
mov
and
out
sub
cli
push
xchg
lahf
sbb
repz
je
push
mov
fucom
call
sbb
jl
mov
inc
in
push
out
cmp
mov
mov
xchg
jg
mov
out
and
pushf
jb
pop
mov
lahf
lret
ret
fcompl
or
add
in
pushf
hlt
cvttps2pi
sub
xchg
ds
jmp
aas
dec
and
mov
jp
xor
pop
mov
xor
xor
add
orl
gs
add
imul
lds
das
mov
and
push
mov
lret
fsubrp
cmp
cli
movsb
xor
dec
mov
test
stos
cli
cwtl
test
pusha
sub
sbb
pop
xor
das
cmp
mov
das
sub
outsb
inc
mov
push
jo
in
ljmp
add
fsubl
push
sub
mov
das
ljmp
mov
xchg
test
ret
ljmp
pop
xchg
push
lahf
push
mov
lcall
ror
sub
ss
out
pop
ss
data16
das
push
fisubrl
jp
jb
cmp
xchg
popa
xchg
ds
mov
ficomps
xchg
enter
mov
mov
test
inc
shrb
mov
fcoms
pushf
mov
mov
fdivp
cli
xor
inc
out
rcll
or
mov
pusha
dec
scas
in
dec
and
mov
cs
cmp
push
inc
add
inc
dec
cmpsb
and
pushf
add
push
xor
dec
mov
inc
hlt
cli
outsl
sahf
mov
fimull
fdivs
inc
cmp
lret
ret
data16
mov
xor
int3
sbb
mov
jb
dec
test
das
jbe
cmpb
xor
mov
cmpl
jle
outsb
cwtl
data16
lcall
mov
cmp
ljmp
add
dec
jge
rclb
cwtl
lds
dec
mov
lods
fidivrl
push
add
xor
inc
out
push
mov
in
jne
mov
sub
je
inc
loop
cmp
in
inc
ds
or
inc
jecxz
push
pusha
mov
push
inc
sbb
test
xchg
sahf
lea
movsb
mov
into
mov
enter
and
divb
push
mov
add
cmpsb
out
or
imul
and
pop
jle
mov
sahf
notb
and
adc
addr16
and
sbb
in
add
lahf
lea
jle
sbb
xor
out
pushf
jecxz
and
out
push
push
scas
pop
xor
pop
popl
cs
hlt
iret
xor
dec
loop
cltd
icebp
sbb
loop
pushf
loop
inc
xorl
mov
mov
dec
jle
jle
out
add
sub
and
jp
push
outsb
mov
test
mov
daa
sub
inc
bound
clc
mov
leave
mov
fbld
movsb
sub
push
cmp
xchg
aaa
and
mov
sbb
fdiv
sub
jb
inc
mov
dec
sub
pushf
mov
jp
xor
data16
pushf
jp
ficompl
pop
xchg
mov
mov
icebp
flds
mov
stos
push
cs
cmp
divb
sbb
loope
or
push
pushf
lcall
adc
xchg
push
push
cmpsb
repz
or
nop
push
inc
or
mov
cld
hlt
scas
cwtl
out
pop
in
cs
loopne
push
pop
loop
cs
je
mov
out
push
cwtl
rcrb
cs
ds
dec
sub
outsb
jle
mov
jno
mov
or
add
fadds
or
jb
addr16
mov
or
and
push
loopne
push
adc
cmp
and
or
aaa
sub
cmp
push
or
cltd
adc
je
add
xchg
or
xchg
push
xor
pop
and
sbb
jmp
stos
sub
and
or
mov
les
pop
sub
push
sbb
out
sub
je
stos
sbb
cld
loop
repz
sbb
mov
or
jl
or
inc
adc
xor
add
jns
pop
mov
test
pushf
mov
pop
or
ja
or
sbb
outsl
js
pop
out
insl
adc
sub
jg
jle
inc
hlt
lea
stos
popa
cmp
add
sbb
sub
imul
lods
jge
mov
test
lds
jne
sbb
cli
imul
jle
cmp
and
and
inc
inc
dec
jns
int
pop
push
movsl
add
sub
dec
mov
cmp
mov
sbb
bound
lcall
push
ja
aad
mov
cmp
out
hlt
xchg
lret
push
mov
or
or
jmp
or
daa
jne
push
mov
add
pop
rorb
and
fdivrp
add
ds
jecxz
hlt
jp
fcmovbe
adc
push
mov
in
cld
cmpb
loope
push
sbb
pusha
jb
jnp
test
mov
lea
push
add
add
mov
push
jle
mov
in
sub
cmpsl
pop
xchg
je
xchg
data16
dec
popf
pusha
mov
adc
daa
xor
mov
pop
or
xor
int
sbb
sbb
clc
push
loop
or
add
scas
je
lods
or
in
mov
jmp
inc
imul
scas
or
dec
aaa
pop
add
test
jne
out
or
jae
or
lahf
and
fmuls
push
movl
les
mov
jae
mov
cwtl
cmc
mov
dec
inc
lods
or
repnz
pop
or
xor
mov
cmpsb
pop
jge
sbb
mov
push
or
or
stos
mov
add
jo
push
gs
into
testl
iret
in
inc
mov
iret
dec
cmp
stos
stos
pop
add
fcmovnbe
ret
sbb
cmp
mov
pop
or
sub
in
stos
xor
insl
imul
test
xor
and
jno
mov
add
imul
push
mov
sbb
jns
sbb
clc
mov
sub
jmp
cmp
or
cmc
mov
jo
sub
loope
or
imul
mov
mov
lcall
push
xor
pop
jb
or
inc
scas
or
loop
lods
or
movsl
push
sti
mov
or
movsl
lahf
push
mov
sbb
in
test
ficoml
jp
pop
leave
out
pushf
mov
shll
fdivr
clc
or
orl
or
cs
adc
test
pop
inc
jmp
fmul
enter
mov
inc
inc
roll
add
jno
or
and
mov
in
cld
dec
or
xor
mov
dec
push
jo
jno
hlt
mov
int
mov
jb
add
std
into
cmp
icebp
or
xor
or
clc
in
in
aaa
mov
or
xor
sbb
repz
or
orl
or
test
or
jb
mov
fwait
es
push
cmp
test
mov
add
mov
mov
loope
xor
mov
lahf
inc
sahf
stos
lods
jge
cltd
lahf
ret
ret
mov
mov
add
lahf
pop
push
sbb
jp
dec
stos
add
out
in
loop
add
cmp
mov
push
xchg
sub
and
sbb
push
push
pop
add
test
adc
add
movsb
lret
or
stc
inc
imul
cs
mov
or
dec
pop
lds
adc
stc
jbe
sub
adc
xor
cltd
mov
push
sub
push
scas
sub
add
out
dec
pop
mov
sbb
pusha
mov
jecxz
cld
sahf
and
pop
or
scas
pop
xchg
ret
xor
outsl
add
scas
cmp
movsl
cmpsb
mov
int
ss
dec
out
loop
shrb
fcmovnb
imul
add
pushf
or
sbb
or
cs
lret
add
sub
add
aad
lahf
prefetch
and
xchg
add
xor
or
insl
sbb
sub
ret
cwtl
inc
cmc
fidivrl
jns
push
shrb
sbbl
pop
adc
push
adc
cmpsl
adc
or
mov
cmp
cmp
sub
jg
lds
ret
jae
xchg
xchg
dec
stc
loope
xchg
fdivrl
fsts
push
add
scas
pop
pop
mov
in
xor
or
xchg
popf
jb
cmp
loopne
mov
hlt
add
inc
test
sub
pop
fists
cmp
dec
outsb
jae
cmpsb
or
sar
loope
mov
push
test
popa
or
sub
pop
ss
or
cwtl
loop
into
mov
insb
jnp
or
xchg
fidivl
rolb
mov
dec
in
add
pushf
loop
and
or
jmp
nop
pop
imul
daa
jge
jecxz
mov
pop
or
add
push
xchg
bt
fwait
and
mov
imul
outsl
mov
cmp
in
sahf
or
adc
mov
dec
pop
mov
out
cli
inc
movsb
imull
lret
pushf
add
jp
or
push
cmp
or
icebp
scas
insb
or
mov
ss
sbb
jge
sar
mov
mov
lahf
hlt
mov
adc
js
shlb
add
or
ret
mov
jge
mov
mov
cwtl
hlt
dec
xor
nop
or
jp
or
xchg
sub
push
mov
shrl
cmp
into
or
stc
popf
adc
sarb
rclb
movsl
xchg
xchg
or
shll
addb
clc
cli
pop
cltd
or
in
fnsave
xor
arpl
cs
mov
cmp
xchg
xchg
sbb
mov
or
inc
adc
neg
dec
add
push
push
adc
and
pop
stos
sbb
std
pop
push
or
sub
fcompl
stc
pop
cmpsb
or
or
or
insl
popw
pop
cld
mov
xor
push
in
into
cmp
mov
add
sbb
fisttps
ljmp
xlat
ret
or
int
pop
mov
sbb
lcall
popf
iret
or
jo
mov
stos
or
pusha
xor
ljmp
adc
push
xchg
xor
ret
xor
pop
or
add
adc
pop
lods
jp
sbb
or
fsubrs
or
add
mov
dec
nop
mov
movsb
xlat
and
cmpsb
sbb
mov
pop
cmp
das
add
jmp
ficompl
or
pop
icebp
fucom
sbb
pop
imul
push
jle
fistpl
sub
add
or
outsb
addr16
pop
nop
addb
xchg
inc
pusha
xor
in
push
xor
lds
fscale
pop
clc
dec
loope
test
add
test
pop
pop
shrb
lahf
cmc
xor
enter
add
cmp
xchg
mull
ds
pop
out
je
jle
mov
push
add
lret
xchg
dec
or
enter
addr16
mov
pop
xchg
adc
sub
mov
call
xchg
jecxz
xor
cmpsl
pop
cmp
mov
stos
or
inc
add
cs
xchg
dec
or
outsb
mov
mov
mov
add
jmp
xchg
adc
cmp
or
int
mov
cltd
xchg
or
sub
and
nop
xchg
or
jno
or
scas
mov
or
test
or
or
in
aaa
push
and
dec
in
std
xor
mov
popa
and
or
jl
or
xor
or
dec
out
pop
lret
add
inc
out
cmovle
test
sbb
push
mov
sbb
lods
mov
pop
push
fstpl
outsb
jp
add
sbb
push
or
push
mov
mov
mov
push
ja
out
shlb
pop
ds
adc
sbbb
sti
add
pop
insb
jp
inc
dec
xor
and
sbb
into
in
fdiv
leave
in
cmpsl
add
push
call
notb
movsb
or
pop
mov
mov
or
jae
or
imulb
or
dec
aad
and
fmull
loope
mov
adc
jbe
pop
add
sub
lret
mov
dec
push
push
outsb
mov
adc
lcall
imul
das
cmc
mov
pop
sahf
stos
push
xor
sbb
inc
or
mov
arpl
xor
aad
add
cmp
shrl
into
push
dec
or
stos
aaa
dec
in
lret
cld
mov
mov
mov
test
and
pop
mov
test
lock
adc
pop
sbbb
insb
jo
sbb
lret
test
jecxz
lret
and
push
mov
jns
subl
push
adc
cmp
or
cmp
push
aad
jae
mov
cmpsb
arpl
mov
xchg
cli
jns
push
add
add
sbb
mov
ds
daa
inc
xor
aas
in
hlt
xchg
jbe
lds
mov
sbb
fs
dec
stos
mov
xchg
xor
mov
or
sub
inc
xor
or
mov
add
sub
stos
inc
xor
dec
inc
nop
jae
sti
or
adc
pop
enter
sbb
repnz
dec
push
fldl2e
rcrb
ret
or
pop
loop
fwait
sbb
adc
or
or
lds
or
shlb
pop
lcall
dec
pop
or
mov
jecxz
cld
stc
aas
or
sarb
mov
or
push
dec
fnstenv
aad
mov
dec
jnp
das
xor
fcoms
gs
aad
lret
pusha
push
sti
jl
dec
mov
leave
pop
or
test
pop
add
ret
inc
testl
dec
or
cmc
pop
jecxz
pop
pop
test
arpl
dec
lds
xor
adc
jecxz
mov
jae
lahf
shrl
or
ret
and
or
pop
inc
mov
fmull
out
or
mov
bnd
test
cwtl
sbb
mov
loop
inc
jns
scas
test
popa
ret
sub
mov
mov
push
mov
enter
sub
push
imul
scas
inc
cmp
pop
pop
inc
mov
cmp
out
test
pop
fld
mov
and
inc
and
cmc
dec
sbb
int
outsb
jg
jle
out
and
ds
aad
push
sbb
pop
or
jecxz
cli
xlat
push
push
jo
lock
mov
ret
in
cld
add
ljmp
xchg
or
mov
sub
insl
dec
add
sbb
push
les
dec
dec
mov
stc
or
push
aaa
sbb
pop
lods
or
je
pop
jl
pushf
lahf
cmp
inc
or
sarl
or
and
and
or
mov
or
or
cwtl
dec
data16
repnz
in
mov
or
xchg
les
jnp
bound
jmp
out
adc
ja
dec
or
sarl
es
gs
mov
mov
cmc
ss
sbb
jecxz
ret
xchg
or
xlat
gs
mov
sbb
pop
in
cmp
incb
mov
or
aad
jne
dec
or
es
jno
rorl
or
xchg
hlt
push
cltd
jbe
mov
sub
movsb
inc
jno
fwait
or
mov
lock
xor
ret
lea
mov
repz
dec
and
xor
cmpsl
jl
cltd
cld
test
cmp
fwait
loop
or
cmp
faddl
jo
mov
sbb
jmp
xor
push
cmp
lret
xlat
cmpb
xor
xchg
xor
cmpsl
cmp
and
cmp
mov
lahf
push
sbb
addr16
jp
fs
sahf
jns
stos
sub
scas
or
bnd
lcall
push
ljmp
imul
lcall
mov
or
add
or
shll
add
fmuls
js
gs
inc
xchg
fisttps
mov
add
mov
sub
loop
out
or
stc
out
movsb
push
or
fsubr
inc
or
xor
adc
mov
jle
inc
pop
mov
or
int
mov
fisttpl
in
in
sbb
mov
mov
test
or
imul
sarb
pop
add
mov
lods
mov
mov
jae
pushf
lret
js
sub
pop
jmp
loop
push
leave
push
es
or
lret
and
cmp
or
pushl
pushf
mov
enter
mov
mov
dec
pop
lcall
out
rcl
add
stos
push
mov
dec
aaa
int3
cld
loop
mov
out
add
xorl
rorl
mov
push
pop
or
mov
push
dec
push
xchg
jnp
in
loop
or
inc
es
fsubrl
enter
lods
aaa
cmp
adc
sub
aas
lret
notb
mov
mov
push
cmp
addr16
add
rorb
add
in
mov
push
outsl
mov
fidivs
mov
and
ret
inc
mov
jae
push
pop
dec
cld
add
xchg
and
outsb
add
push
incb
or
add
and
pop
imul
dec
mov
adc
notb
subl
or
add
loopne
repnz
mov
inc
and
dec
jnp
and
jmp
iret
xchg
jb
fisubrl
cmp
or
mov
xlat
mov
xor
sahf
xor
xor
or
adc
push
lods
outsb
es
bound
in
adc
imul
lret
and
or
nop
in
out
pop
cltd
push
xor
push
loop
or
out
sub
daa
mov
mov
or
lahf
inc
mov
dec
mov
loopne
cld
lcall
jp
or
or
dec
into
add
lret
loopne
fmuls
scas
fdivr
cltd
inc
mov
pop
jb
jb
or
jnp
cmc
push
or
mov
cmp
or
xchg
fistpll
addr16
sub
or
cmpsl
mov
push
add
in
inc
pop
adc
or
movups
pop
sub
int3
ds
add
xchg
shll
insb
insl
lods
les
mov
les
xchg
adc
shr
aaa
outsl
js
dec
mov
mov
or
mov
inc
gs
xor
xor
jbe
int
and
loopne
testb
or
stc
jl
in
lods
mov
das
loop
fsubrs
lret
cmpsb
les
cwtl
jmp
fwait
lcall
inc
push
or
xchg
icebp
fstl
mov
and
decl
test
movzbl
lea
not
call
dec
bt
shl
jmp
add
add
jnp
test
mov
clc
test
jmp
test
add
sub
call
lea
jb
jmp
stc
call
dec
dec
jmp
dec
cmc
cmc
jmp
lea
jbe
push
sub
shl
shl
sub
movsbw
mov
shl
movsbw
and
not
mov
btc
and
add
xor
cmp
sar
shr
not
push
mov
bt
and
jmp
inc
orb
js
mov
cs
test
gs
or
push
adc
in
in
inc
cli
xchg
or
and
push
cs
dec
sbb
imul
mov
mov
mov
shrb
not
jmp
dec
xchg
in
icebp
dec
sub
cmp
xchg
and
into
mov
jne
mov
jl
xor
inc
icebp
mov
or
pop
jle
js
push
popf
xchg
push
cmp
call
add
in
push
add
in
mov
jo
clc
add
sbb
or
and
xchg
mov
xchg
fmull
fisubl
sub
xchg
das
cmp
fsubl
mov
pop
movsbw
pusha
pop
not
mov
bswap
mov
not
pushf
mov
push
mov
push
mov
push
push
pushl
ret
movl
mov
lea
jmp
pushf
jmp
outsl
jns
or
js
cmp
imul
ds
jmp
sbb
gs
enter
inc
dec
js
add
pop
adc
inc
or
add
jnp
arpl
movsl
xchg
adc
push
inc
jp
cmpsl
mov
jmp
mov
iret
sbb
jle
xchg
xchg
inc
bound
bound
icebp
mov
or
js
xchg
or
dec
outsb
out
jle
pushf
pop
push
call
adc
xchg
ret
cmpsl
mov
adc
mov
rolb
jmp
sbb
push
jp
test
adc
jne
iret
adc
xchg
icebp
dec
and
out
imul
insb
push
adc
in
mov
cmp
ja
bound
enter
int
arpl
jns
imul
mov
fldenv
pop
lret
cwtl
jae
lock
mov
into
jp
or
jmp
cmpsb
dec
leave
sub
inc
dec
loopne
movsb
fsts
mov
dec
mov
adc
loopne
imul
inc
std
dec
fcmovnbe
xor
push
cmp
lods
insb
mov
xor
sub
rolb
push
out
xchg
fisubrl
mov
hlt
out
hlt
xor
jmp
sbb
or
imul
xchg
icebp
add
pushl
lea
jmp
add
cmc
pushf
movzwl
jmp
pushf
mov
pusha
mov
pushl
pushl
ret
pushf
movl
pushf
jmp
xor
test
pushf
stc
pushl
sub
cmp
cmc
neg
jmp
lea
je
jmp
call
lods
lock
pushf
push
inc
fidivl
and
inc
fcoms
push
into
and
cvtpi2ps
xchg
push
test
mov
inc
jmp
cwtl
push
test
insb
or
scas
jns
xchg
mov
mov
mov
in
add
or
test
sub
pop
int
pushf
cltd
sbb
fldt
or
mov
packssdw
adc
lock
cmpsl
dec
in
mov
dec
dec
aad
loope
outsb
inc
nop
jo
add
mov
out
ljmp
mov
mov
pusha
mov
scas
mov
push
fbstp
dec
pusha
cmpb
pop
fdivrl
movb
mov
xor
std
enter
fists
and
aas
dec
mov
sahf
sbb
push
rcrb
add
xchg
lret
jnp
sbb
inc
dec
sub
pop
cs
ficoms
clc
in
mov
cmc
cmp
lea
jbe
pushf
mov
pusha
lea
jbe
btr
jmp
pop
push
add
in
inc
pop
adc
fstps
mov
out
xchg
mov
das
mov
test
and
loope
stc
es
adc
ds
fprem1
stos
sbb
xor
stos
insl
popa
add
xchg
shrl
hlt
mov
mov
cmp
dec
mov
int3
xlat
mov
push
inc
add
inc
inc
ror
dec
out
pcmpgtd
cmp
or
das
repz
sbb
scas
les
fcompl
cltd
cmpb
push
inc
dec
cld
in
cli
mov
inc
daa
dec
cs
jmp
pushf
jmp
mov
in
xor
test
xchg
mov
mov
adc
pop
iret
adc
mov
jno
lcall
leave
dec
and
icebp
ss
fs
cltd
cltd
xor
out
push
jo
jo
pusha
jno
and
fdiv
mov
jne
mov
movsl
xorb
or
js
push
add
push
cmp
rol
paddb
imul
in
xchg
xor
ja
pop
test
ror
inc
fdivrl
in
sti
pushf
dec
mov
add
sub
pop
hlt
or
hlt
addl
lock
movsl
and
fwait
imul
stc
lods
inc
xchg
jne
out
out
push
cmc
aas
lea
lods
shl
adc
ret
mov
insb
sbb
pop
jbe
jnp
insb
iret
in
adc
push
push
lea
stos
popa
mov
push
xchg
push
aaa
icebp
pop
sbb
lods
scas
imul
sub
mov
dec
push
xor
pop
dec
dec
stc
mov
insb
sub
orl
xor
jb
in
lret
arpl
inc
or
xchg
cli
push
movsl
arpl
imul
push
add
push
xor
lcall
outsb
inc
jecxz
int
xchg
adc
push
xchg
sub
sub
pop
push
mov
xor
fs
cmp
test
pop
jp
cmp
cmp
ss
push
xchg
xchg
fimull
xor
mov
divl
arpl
adc
pop
push
clc
decl
addl
add
mov
clc
push
rcrb
movl
jmp
pushl
call
pushf
jmp
movb
push
push
lea
call
pusha
call
lea
ja
jmp
pushf
call
lea
je
stc
cmc
pushf
cmp
cmp
pushf
pusha
lea
je
pusha
lea
jmp
repnz
pushl
pushl
lea
jne
xchg
mov
shr
movzbw
and
pushf
sub
rcl
shl
push
sub
lea
test
pusha
clc
sub
bt
cmc
push
cmc
pushl
popl
cmc
cmp
call
lea
jne
push
lea
call
pusha
pushl
lea
jmp
lods
lock
fs
cli
jnp
movsl
out
adc
add
fiadds
test
or
jmp
fadds
stc
jb
or
scas
sbb
in
and
cmp
push
and
jl
int
pop
sub
jecxz
add
jge
xor
sub
xor
ja
int3
ret
mov
sub
push
push
mov
in
aad
push
sbb
ja
adc
cld
dec
mov
ss
xchg
movb
pop
daa
xchg
bound
call
xchg
jmp
decl
xchg
out
scas
sub
pusha
mov
pop
mov
cmp
fdivl
out
insb
cmpb
lcall
xor
and
fwait
xchg
inc
add
stc
clc
into
test
nop
ja
push
dec
out
mov
mov
xchg
out
and
into
arpl
dec
add
rclb
adc
dec
int
and
and
push
arpl
ficoms
sbb
bt
xor
stc
pusha
cmp
jmp
mov
dec
sahf
rcll
test
fisttps
lcall
into
jmp
les
dec
test
cld
inc
xchg
std
out
and
push
inc
scas
jg
fst
push
cmp
mov
cmp
or
mov
bound
xor
pop
cmp
loopne
out
cmp
jge
enter
popf
das
outsl
dec
scas
fldcw
loop
inc
inc
add
and
sub
imul
into
mov
jae
dec
daa
inc
imul
mov
jne
add
js
and
imul
cmp
out
and
or
adc
mov
cs
cs
mov
aad
xchg
mov
movups
mov
lods
stc
mov
add
pop
aas
xor
pop
xor
mov
lea
insl
add
dec
cld
mov
push
inc
or
push
mov
add
js
mov
mov
push
test
insl
orl
push
mov
std
lret
jmp
sub
mov
fildl
in
fistl
imul
push
jno
jno
push
fisttpl
fwait
loopne
mov
fstl
ret
and
loop
inc
xchg
pop
xchg
fdivr
mov
inc
adc
shrb
dec
insb
fisubl
xor
push
and
sbb
fstpt
insl
cmpsl
jne
mov
xor
or
adc
inc
leave
pop
xor
dec
fwait
in
fisubl
pop
pop
outsl
sub
jmp
xchg
out
cmpb
add
jmp
push
aam
mov
fcompl
cld
aam
int
lods
pop
sbb
add
imul
loopne
mov
push
jecxz
or
mov
push
add
xchg
pop
mov
jecxz
dec
gs
test
sbb
xorb
or
dec
mov
dec
mov
and
movb
outsl
shl
lahf
jg
and
inc
and
sbb
push
push
testb
movl
lcall
movhps
push
nop
inc
and
or
pop
push
xlat
mov
push
push
pop
test
ficomps
mov
and
jne
push
shl
mov
bt
clc
pushf
test
add
test
movzwl
bswap
pusha
mov
clc
cmc
test
add
clc
mov
bt
push
clc
jmp
call
movzbw
pop
push
mov
setae
mov
lea
pushl
mov
movzbl
movl
pop
lea
push
call
bt
bt
rol
test
jmp
test
jl
in
fisubs
add
divb
cmp
bound
imul
not
rcrl
and
or
ds
cmpsb
adc
data16
aam
sbb
jne
sahf
sbb
rcll
mov
das
inc
push
dec
mov
imul
jp
lods
mov
fidivrl
rcll
sarb
adc
xchg
outsl
add
sbb
jbe
cmp
lea
cmpsb
jle
test
mov
nop
adc
repnz
add
sub
int3
mov
stos
inc
add
movsb
je
nop
xor
mov
pop
rcll
clc
cmpsl
mov
sti
jnp
stos
das
clc
mov
stc
fcmovnb
call
xchg
mov
sbb
rcll
pop
das
rolb
push
sbb
push
repz
icebp
insl
addl
clc
call
js
movsb
adcl
inc
out
leave
shrb
repz
mov
imul
scas
test
pop
push
movsl
out
dec
adc
sub
andl
mov
push
xchg
add
lea
stc
jo
sub
sahf
xchg
andl
fadd
les
xchg
mov
lock
in
inc
add
adc
pushf
cmc
or
pushl
pusha
lea
je
bswap
mov
mov
lea
pushf
movl
lea
pushf
pushf
movb
xchg
lahf
pushf
bswap
pushf
pushl
popl
movsbw
pushf
mov
bswap
sets
lahf
mov
movl
lea
jbe
lahf
movzbl
lahf
lea
pushf
call
cmc
bt
jmp
lea
jnp
mov
push
jbe
pop
jnp
leave
shl
test
mov
hlt
fbld
int3
mov
movsl
xchg
test
jno
push
ja
dec
out
mov
aas
addr16
and
or
push
je
fisttpll
lahf
jle
aam
sbb
das
xlat
jo
das
inc
aam
cmpsb
and
push
mov
test
ss
adc
mov
das
push
cmp
dec
lods
les
rolb
xlat
lcall
jae
adc
xchg
imul
rep
movzbw
mov
pusha
not
mov
pushf
mov
lea
jmp
adc
pusha
jmp
movb
cwtl
not
mov
lea
call
mov
lea
jne
cmp
mov
clc
bt
stc
jmp
ja
pushf
pushl
mov
movl
pushf
call
jmp
pusha
pushf
mov
pushf
lods
test
pushf
call
clc
add
pusha
test
pusha
test
cmp
push
lea
jb
push
cmc
cmp
pushl
cmp
jmp
stc
add
pusha
pusha
pushf
lea
jmp
clc
cmp
pusha
jmp
lea
jmp
pushf
push
lea
je
pushf
call
mov
lea
ja
push
pusha
pusha
lea
jb
stc
test
test
clc
cmpb
jmp
adc
mov
bsf
bsr
add
sar
mov
shrd
push
dec
add
pushf
movl
ror
mov
cmp
cmc
cmp
movw
push
pusha
movb
lea
jbe
shl
ror
mov
sub
cmp
shl
bsf
mov
mov
dec
cmp
inc
mov
pusha
ror
call
call
call
not
inc
inc
rol
xchg
or
call
and
jo
in
rcrb
cld
lret
fcompl
dec
pusha
cmpsl
into
pop
loop
shlb
sbb
outsb
xor
mov
dec
mov
lret
and
in
dec
sbb
fsubrl
daa
lods
jl
xchg
cmp
adc
jb
je
inc
cmp
sbb
pusha
loope
push
adcl
scas
add
call
in
pusha
call
cmpb
mov
lea
jne
btr
rol
mov
clc
add
jmp
loopne
loop
in
movsb
sarl
add
aas
sbbb
sarl
leave
popa
inc
push
hlt
loope
in
loope
fisubl
mov
jns
les
roll
mov
ja
lret
js
push
push
mov
hlt
mov
dec
sub
mov
rolb
sub
xor
outsb
rolb
mov
sahf
subl
jmp
jmp
pushf
lea
jne
cmc
call
jmp
movb
lea
jae
push
call
add
js
sub
jo
jo
push
shl
lock
sarb
sbb
insl
je
cmp
sub
aad
fldenv
fwait
negb
jb
or
dec
cwtl
dec
ljmp
sti
call
mov
mov
adc
inc
sub
aaa
addr16
inc
push
mov
adc
mov
movsl
scas
add
mov
mov
sub
das
jnp
cmp
les
and
mov
mov
or
jb
icebp
aad
addl
inc
mov
cmc
test
clc
cmp
pushl
lea
jbe
adc
rcr
bsr
sbb
mov
rcl
pusha
call
setno
pushl
pushf
stos
push
call
jmp
push
jmp
adc
sbb
outsl
or
cmp
push
jnp
inc
dec
dec
pushf
lcall
dec
xchg
rcl
and
fdivl
dec
movsl
push
jb
inc
call
ret
fdiv
lods
scas
int
mov
push
pop
inc
outsb
pop
outsw
outsb
out
scas
jno
or
push
xchg
out
lea
call
call
pushf
movl
call
pusha
lea
call
pusha
pushl
jmp
jmp
add
dec
gs
popa
addr16
outsl
js
add
pushf
cmp
or
pushf
pushf
jmp
jmp
movzwl
bsf
test
dec
mov
clc
add
jmp
jmp
and
arpl
in
roll
arpl
xchg
fsubrs
icebp
movsb
shrb
pop
dec
lahf
sub
sub
mov
leave
pop
xchg
xchg
aas
sub
pop
jae
inc
mov
mov
cmp
test
imul
adcb
dec
jle,pn
adc
mov
out
mov
mov
push
mov
ljmp
jnp
addr16
lcall
jnp
fstpl
pop
mov
sub
mov
pop
into
mov
xchg
or
mov
sub
sbb
lods
inc
pop
mov
orl
or
js
push
inc
sahf
cltd
pop
jnp
fisubrs
sub
adc
xchg
rolb
es
inc
push
or
xchg
in
stc
and
addr16
jbe
scas
das
cld
into
test
push
mov
es
scas
push
scas
leave
daa
pop
jne
push
push
mov
fldenv
jnp
sub
shll
sti
mull
mov
or
mov
inc
in
cmp
lret
pop
jnp
mov
xchg
sbb
mov
pop
shrb
inc
sbb
out
aad
rcll
hlt
xchg
mov
cmp
mov
pop
pop
fiadds
mov
dec
int
dec
cs
stos
inc
adc
dec
sbb
cwtl
pop
push
nop
sub
adc
push
sub
add
cmp
aaa
jbe
pop
ficompl
jmp
add
mov
and
rcr
rcl
push
inc
mov
pushf
xchg
mov
movzbw
mov
shrd
movzbl
mov
push
xor
shl
push
xchg
jmp
lea
jae
jmp
pusha
pushf
jmp
or
pushf
call
inc
lret
in
pop
sub
sbbb
pop
add
pop
push
dec
std
dec
lcall
leave
rcrb
aad
cmpsl
pop
sub
push
ret
das
ss
jnp
adc
js
cli
jmp
push
jns
dec
movsbl
iret
fidivrl
add
lea
jb
cmp
test
test
cmpb
jmp
add
add
pop
pop
add
pop
add
adc
add
pop
add
adc
add
xlat
adc
add
adc
jmp
call
call
lea
jae
push
pushf
push
lea
jmp
mov
jmp
inc
adc
in
in
je
add
adc
or
jl
xor
xchg
dec
adc
cld
addl
je
jne
dec
shll
xor
cmpsb
aas
push
inc
xchg
pop
sahf
and
cwtl
mov
rorl
fisubrs
adc
xchg
arpl
xchg
push
out
or
imul
mov
push
jg
pop
push
add
aaa
cmp
ret
aad
xor
lea
mov
movl
pusha
lea
jmp
rcll
fbld
out
movsb
int3
or
and
in
xor
rcrb
add
fistl
dec
lret
popa
inc
cmp
inc
push
fld1
test
add
inc
pushf
popf
cmc
xor
int3
inc
cwtl
pop
fbstp
jae
mov
mov
pandn
mov
mov
adc
sub
sbb
daa
enter
lcall
fdivrl
scas
sahf
cltd
adc
and
dec
repz
sub
hlt
pop
or
mov
clc
arpl
bound
sbb
mul
out
inc
pop
cvtpi2ps
sti
cmp
icebp
hlt
xor
adc
call
bt
mov
dec
or
cmp
shrd
mov
stc
cmc
sar
mov
stc
cmc
sub
cmp
push
stc
push
repnz
lea
call
sub
clc
not
bt
pushf
stc
mov
cmc
stc
add
stc
call
pushl
xchg
call
pushl
movl
push
pushl
popl
pushf
pushl
pushl
ret
adc
push
in
cmp
mov
pop
es
adc
push
pop
cmp
mov
lds
mov
addb
jge
enter
inc
in
and
adc
push
inc
inc
leave
dec
jecxz
imull
or
inc
jmp
pop
rclb
or
popf
pop
in
jbe
mov
shl
sub
xchg
pusha
jg
cmp
or
je
jl
inc
or
fsubrs
pop
fldenv
push
adc
adc
call
clc
fsubrs
pushf
dec
sub
cmp
jecxz
pop
pushf
xchg
aaa
xchg
je
and
lret
push
xchg
hlt
insb
mov
int
jecxz
aad
push
mov
push
ss
lret
inc
sti
cmp
cmpsl
xchg
popf
scas
fldt
fimull
test
sbb
adc
mov
aam
fcomps
fadd
les
jp
and
dec
jmp
lcall
in
cmp
xorl
leave
rolb
cwtl
jmp
cltd
xchg
popf
xchg
mov
outsb
cmp
gs
pop
mov
loop
imul
fiaddl
jp
loop
in
stos
das
call
fcompl
lods
mov
adc
movsb
pop
and
addl
rclb
iret
lcall
cmp
pusha
pop
inc
pop
clc
sahf
xchg
mov
test
mov
in
popf
sbb
mov
iret
icebp
or
mov
rorb
fwait
rcrb
idiv
mov
in
in
mov
je
divl
nop
cmp
out
hlt
loop
cwtl
or
inc
cmp
xor
jb
lret
fucomp
popf
inc
and
movsb
cld
mov
pop
xor
push
add
inc
inc
jecxz
jmp
jne
call
out
or
out
sbbl
mov
cmc
fcompl
sti
xchg
lret
adc
js
repz
rcrb
rolb
or
faddp
lds
pop
ja
pop
xor
lcall
mov
and
repz
or
scas
imul
jecxz
cmpsl
cmpsb
daa
movl
fdivr
jno
and
pop
add
orb
rcl
pushf
js
mov
or
pop
clc
lea
lds
rorb
dec
iret
ljmp
out
pop
sbb
enter
adc
mov
mov
popf
push
dec
icebp
cwtl
xor
jae
clc
pop
or
inc
and
xchg
mov
int3
jb
add
movsb
fxch
leave
jl
pop
inc
adc
lods
insb
sub
scas
fcoms
and
lea
jne
shl
shl
dec
adc
mov
mov
sub
bt
mov
bt
pushf
movb
sub
pushf
clc
test
pushl
popl
cmp
jmp
mov
movl
pusha
pushf
pushf
pushf
lea
jmp
mov
not
call
push
movl
jmp
clc
bt
cmp
call
cmc
push
push
or
push
pushf
jmp
jmp
test
pushf
call
adc
add
in
mov
aad
in
leave
repnz
sarb
mov
push
cmp
cmp
mov
int3
out
shll
ljmp
xchg
pop
bound
out
into
mov
in
pop
lock
clc
fwait
mov
sbb
add
mov
push
jg
xlat
sub
cmpsb
scas
ret
jmp
and
hlt
push
shlb
push
clc
pop
imul
sbbb
mov
add
push
shll
aas
or
repnz
jno
movl
in
jle
movl
aam
push
mov
jne
pop
ss
mov
mov
sti
iret
xchg
xchg
cli
lods
int3
mul
roll
cwtl
imul
and
dec
scas
movsb
cmc
xchg
fdivr
jne
clc
addr16
jae
sti
daa
test
xor
sbb
dec
enter
mov
scas
das
dec
cwtl
cmpsl
jge
lock
jge
ret
xchg
hlt
dec
and
push
outsl
cmp
lods
fisttpll
adc
mov
jp
jmp
iret
and
inc
xchg
dec
and
mov
mov
xchg
pop
fistpl
psrad
and
xorl
rcrl
lret
mov
cltd
push
fiadds
repz
jne
pop
lret
fs
jmp
mov
fsubs
push
popa
sbb
xor
sub
hlt
push
and
sbb
sbb
and
movsl
movsb
inc
cmp
cmp
call
insl
out
push
out
mov
outsb
out
sbb
dec
fstps
outsb
outsl
out
fnstcw
scas
push
out
jns
outsl
out
cmp
jns
push
out
cwtl
cmp
outsb
mov
dec
out
mov
out
pop
jmp
dec
sbb
adc
filds
add
mov
dec
push
pop
je
fbld
fxch
cmpl
rcrl
popf
xchg
cmp
and
jmp
lcall
cmp
add
sahf
fiadds
mov
dec
mov
repnz
pusha
pop
bound
mov
popf
divb
movsb
fsubr
xchg
out
iret
lods
cli
and
xchg
shrb
cmpsb
ret
sub
imul
sysenter
das
adc
cmpsl
in
or
jp
bound
lock
hlt
iret
rorb
mov
sbbl
mul
inc
ljmp
jno
adc
aam
pop
mov
movsl
mov
inc
or
es
and
aas
mov
or
sub
jecxz
pusha
idivl
fs
mov
aas
jbe
fcomp
push
repz
out
pop
pop
lret
jecxz
rcll
xchg
stos
ret
shr
loopne
decl
andl
ret
ror
bt
mov
bsr
shr
setnp
movsbl
mov
call
pushf
lea
call
pusha
adc
pushf
call
pusha
mov
call
push
movl
push
mov
pusha
lea
jmp
movl
push
lea
jmp
push
mov
lea
je
clc
mov
inc
bswap
neg
add
bts
bswap
mov
je
bt
test
test
call
test
pushl
cmp
call
jno
jae
in
rcll
pop
inc
adc
arpl
mov
xchg
or
jo
jbe
fistpll
mov
mov
out
rcrl
push
mov
rolb
aas
mov
add
push
push
xchg
push
aad
xlat
pop
mov
lds
mov
nop
inc
adc
xor
mov
mov
out
mov
xchg
jae
das
pop
out
jae
repnz
lret
lret
scas
jae
and
mov
add
scas
add
mov
mov
js
mov
in
enter
or
daa
cs
aam
stos
imul
push
inc
call
stos
nop
fisttpl
cmp
sub
jle
dec
gs
cmc
mov
add
jne
jge
inc
and
jl
shrb
cmp
call
pusha
jmp
call
int3
popf
push
jmp
test
pushf
pushf
lea
je
push
pushf
pushf
add
pusha
movw
lea
jmp
mov
push
lods
jmp
pushf
lea
je
cmc
add
jmp
pushf
not
call
mov
dec
call
jmp
push
lea
jne
shl
mov
pusha
call
bt
clc
clc
cmp
pusha
lea
jb
clc
cmp
call
mov
pushf
outsl
in
fidivl
rcll
sahf
fsubrp
and
notl
jne
lods
sbb
xchg
and
shl
test
leave
fiadds
les
ss
or
push
mov
imul
push
xchg
push
push
pop
rcr
incb
pop
insb
sbb
sbb
xor
inc
sub
and
cmpsb
adc
mov
xchg
insb
in
sub
movsb
xchg
or
inc
jmp
add
in
or
or
hlt
insl
fstpt
mov
push
sbb
dec
push
jns
cmp
adc
je
jmp
loopne
in
test
pop
and
dec
leave
mov
ljmp
add
push
je
dec
stc
nop
movl
cwtl
int3
insb
in
jne
mulb
jb
jne
int
test
ljmp
add
cmp
mov
mov
sbb
pop
xor
cmp
aam
mov
mov
adc
and
add
pop
cld
xchg
mov
mov
rcrb
push
jmp
jmp
push
or
cmp
ja
inc
sahf
fwait
sub
pop
sbb
in
orl
leave
repnz
sub
add
jno
movsb
ljmp
add
and
popa
and
lret
mov
mov
mov
lcall
cs
outsl
or
insb
stos
adc
insl
or
pop
sbb
pop
in
cwtl
je
mov
in
xchg
mov
shll
lods
push
fisubrl
adc
lock
fwait
cmp
data16
rclb
nop
movb
mov
inc
and
push
dec
inc
negl
xchg
scas
mov
cwtl
lahf
icebp
pop
std
mov
jno
fs
ja
mov
movsbw
pop
jp
bswap
pushf
bswap
mov
jmp
mov
pusha
movw
pushf
lea
jmp
adcl
cli
push
inc
push
or
sub
jbe
push
shll
into
aam
jl
insb
std
mov
fistpll
pop
xchg
xchg
push
or
mov
add
dec
push
pop
pop
ret
fistpll
xor
xchg
mov
mov
mov
fs
ja
call
mov
lea
call
pusha
pusha
call
lea
ja
bt
pusha
imul
clc
pusha
cmp
test
add
movb
lea
jmp
cmp
pusha
lea
ja
inc
or
and
xor
sub
shl
and
sbb
btc
add
call
insb
or
push
cs
or
adc
out
mov
out
or
pop
cmc
jle
mov
fwait
xor
data16
pushf
push
ja
xchg
pop
jecxz
xchg
leave
ret
jne
push
push
xorl
add
adc
insb
std
fdivl
repnz
xchg
test
sbb
int3
sbbl
mov
mov
mov
cli
aas
pop
sbb
cmp
mov
xlat
xchg
push
jmp
or
push
int3
jno
cmp
aam
jo
ljmp
adcb
ss
mov
xchg
decl
jecxz
mov
add
clc
or
cli
orl
jl
xor
insb
add
int3
lock
push
insl
pop
or
fneni(8087
stos
and
adc
out
xchg
adc
pusha
add
mov
or
xor
inc
lret
lret
loop
dec
roll
add
int3
loopne
jno
cmp
or
repnz
jecxz
push
xor
sbb
add
mov
adc
adc
sbb
subb
decb
shl
int3
lret
mov
add
pop
mov
insb
js
lret
push
mul
mov
mov
mov
jmp
das
dec
push
and
sbbl
pusha
gs
adc
push
adc
sahf
and
shlb
out
shlb
or
dec
jecxz
adc
cmp
adc
push
xchg
jecxz
mov
lds
cmp
jle
insb
pop
sub
lret
mov
adc
loop
mov
bound
cmp
pop
cli
pop
lea
xchg
lret
andl
xlat
mov
mov
adc
jecxz
cld
fs
push
xor
dec
or
mov
enter
and
fnsave
xchg
sbb
repz
shl
jl
jns
cmpb
cmpb
loope
or
inc
enter
leave
mov
int3
iret
in
js
adc
das
fdivrl
or
add
mov
add
ficompl
sub
jmp
sub
adc
jle
mov
mov
loop
scas
lahf
sub
xchg
lret
psrlq
repnz
adcb
enter
xor
stos
ljmp
dec
jg
xor
cmp
sbb
mov
mov
clc
sarb
adc
cmp
add
add
ds
pop
push
cld
sub
sub
lret
cld
sets
inc
cmpsb
cli
into
or
movsl
pop
inc
mov
jecxz
push
or
sbb
addr16
and
jmp
xchg
sub
cmp
sbb
out
loop
roll
inc
loope
or
test
add
imul
and
inc
dec
sbbl
mov
cmp
and
jno
sub
sbbb
and
inc
xchg
jns
add
or
leave
xor
dec
or
adc
stos
pop
xchg
pop
lea
std
sbb
or
nop
test
bound
scas
add
push
mov
xor
ss
pop
cmp
jnp
push
stos
xor
xchg
push
add
and
mov
int
xchg
sub
adc
sbb
push
cmpsb
sahf
cmp
sub
sbb
push
fs
data16
push
dec
out
and
adc
push
and
jle
movb
stos
ret
lahf
jnp
xchg
jbe
movb
mov
mov
push
addb
shrb
ss
xchg
and
add
scas
mov
cmpsb
subb
cmp
or
fstl
orb
adc
push
sbb
jb
ret
pushf
arpl
add
cltd
ret
cmpsb
pop
fsubrs
imul
or
adc
sub
add
scas
insb
mov
out
mov
test
cmp
jbe
bound
xchg
jb
inc
xchg
add
sub
push
aaa
inc
mov
inc
es
jle
sub
shrb
imulb
push
and
ret
add
cmp
mov
push
mov
outsb
xor
mov
repnz
push
dec
rolb
and
mov
cmp
ficomps
push
sbb
lret
push
lcall
outsb
pop
rorb
aam
mov
add
inc
sbb
push
sti
xchg
and
sub
hlt
and
push
xchg
push
dec
or
andb
popf
int
loop
imul
cmp
or
or
mov
add
push
push
popa
out
xor
adc
enter
cmp
lcall
lret
les
adc
sub
jbe
test
add
push
xor
pop
xchg
clc
sbb
cmc
or
push
push
mov
push
sbb
sub
or
add
sub
lcall
out
xor
jle
or
mov
inc
pop
push
jne
sub
movsl
mov
test
jo
add
inc
dec
jns
or
jb
in
xor
int3
push
add
cmpsl
cmp
clc
or
jb
mov
or
add
add
dec
inc
jecxz
mov
adc
inc
sbb
sbb
sub
cmp
jg
sub
mov
outsb
or
or
mov
arpl
sub
fldpi
mov
int
sarb
jns
or
xchg
hlt
lret
lods
pop
hlt
add
mov
adc
repz
ja
aam
push
loope
sub
lret
bound
jne
inc
or
scas
inc
hlt
add
scas
hlt
sbb
adc
dec
sti
cmp
or
mov
repnz
out
mov
cmpsl
ljmp
mov
das
mov
push
ficompl
testb
repnz
dec
push
mov
sub
add
insb
pop
xchg
pop
hlt
add
adc
cld
es
sbb
lcall
adc
xchg
add
push
mov
stc
daa
ret
sub
pop
push
aad
sarb
add
icebp
ljmp
fcompl
sti
rcll
or
xor
mov
xchg
insb
jle
fisttpll
flds
jb
cmc
sub
inc
cmp
outsl
clc
jecxz
push
out
push
xor
mov
pop
repnz
mov
loop
aam
dec
or
xchg
bound
aad
or
imul
cmp
mov
jmp
mov
es
add
mov
dec
push
jecxz
stc
mov
push
mov
xchg
adc
pop
cwtl
ljmp
adc
dec
jecxz
repz
cwtl
test
bound
sbb
jbe
or
ss
inc
sbb
mov
pop
cmp
fisubrl
mov
push
xchg
xchg
mov
cmc
js
or
push
jbe
decb
lods
negl
loop
jl
mov
dec
or
xchg
cs
xchg
imul
xor
addb
jecxz
test
loop
in
cmp
test
or
mov
aaa
insb
pop
push
lcall
mov
inc
or
cld
int3
loope
xchg
outsl
out
fiaddl
lods
cmc
es
xchg
in
mov
pop
addr16
adc
test
cmp
push
std
fcmovu
cmp
sbb
or
jne
sbb
out
sbb
test
sub
xchg
add
enter
sti
inc
or
cli
pop
lods
enter
xor
adc
int
mov
xor
fs
or
aam
jg
lcall
dec
dec
mov
cmp
jecxz
dec
jge
insb
andb
or
outsl
clc
or
cmc
push
push
push
mov
mov
popf
pop
jge
and
mov
jmp
pop
fucomi
adc
xchg
or
cltd
pop
cltd
hlt
or
cmp
sbb
je
sub
sti
in
bound
pop
icebp
pop
sub
sbb
lret
rolb
mov
js
cwtl
rcrb
lods
es
cld
imul
sub
shlb
inc
fiaddl
ret
xorps
mov
js
or
ljmp
scas
jge
mov
inc
jmp
jno
xor
ja
pop
jmp
and
testb
cmp
in
pop
xor
fstl
ss
mov
mov
pop
mov
ret
test
dec
cld
rorl
lret
fucomip
cld
push
add
adc
push
sub
test
push
idivl
xchg
cmp
loop
or
cmc
sbb
push
sahf
int
cli
cmp
pop
pop
negb
cs
lret
sbb
into
xchg
repnz
jno
mov
ljmp
daa
sbb
xor
pop
sub
pop
pushf
add
bound
ljmp
in
test
insb
pop
inc
push
mov
std
push
or
lret
cmp
enter
cmc
dec
push
test
mov
pop
subl
pop
icebp
cmc
mov
lods
std
add
jecxz
fwait
orl
cmp
cmp
cmp
mov
xchg
dec
ss
scas
sub
push
sub
cld
addl
adc
addb
add
push
mov
scas
faddp
mov
in
jnp
mov
inc
dec
cmp
pop
pop
adc
outsl
nop
das
cwtl
add
filds
inc
bound
roll
pop
ljmp
std
roll
push
mov
out
add
and
daa
and
add
sbb
push
inc
or
sbb
sbb
std
or
mov
sub
xchg
push
mov
int
aam
lahf
cs
inc
imul
and
inc
add
xchg
ret
dec
push
push
out
pop
popf
jo
sub
sbb
addb
and
int
mov
pop
aaa
mov
push
fadds
cmpl
mov
jmp
hlt
mov
ss
mov
mov
jl
js
xorl
sub
cmpb
int
stos
inc
or
jecxz
pusha
ficomps
cmpb
int
add
jmp
push
loope
lods
int3
repz
dec
lret
mov
push
xchg
mov
out
loop
mov
dec
mov
mov
cli
add
ret
push
cmpsb
push
icebp
dec
ljmp
leave
test
movsb
push
sbb
push
cmpsb
imul
mov
xchg
outsb
or
loop
sbb
movsl
imul
mov
pop
dec
dec
mov
cs
add
push
xchg
ja
mov
mov
mov
sbb
cmpb
leave
push
and
imul
fwait
scas
jns
fwait
cmc
or
rclb
into
lock
and
inc
pop
push
cltd
xor
shlb
es
push
subb
inc
pop
sbb
stc
pop
add
xchg
sbb
fcoms
in
pop
mov
aad
popa
lock
jne
dec
sbb
jmp
loop
es
out
loop
pop
pop
lods
push
adcb
fiaddl
shl
cmp
das
and
pop
mov
pop
xor
add
xchg
xor
add
and
orl
mov
imul
loop
lds
ret
lret
or
imul
push
call
out
xlat
mov
mov
adc
cmpsb
je
push
mov
mov
cmpl
repz
jecxz
and
lcall
adcb
pusha
xchg
cli
rclb
or
divb
xlat
leave
mov
inc
mov
bound
mov
and
lret
bswap
das
fmuls
sbb
adc
jnp
stos
push
cmc
add
mov
loop
xchg
das
xor
out
lea
cmp
sbb
fistl
cli
je
loop
xor
pop
pop
aam
lret
mov
ret
jno
adc
sub
ficompl
outsb
dec
push
cmp
add
mov
and
std
adcl
xchg
push
mov
ldmxcsr
aam
lea
or
aas
inc
xor
mov
push
sub
and
sub
mov
sub
xchg
test
inc
pop
push
and
mov
pop
pop
aaa
addb
outsl
push
push
fadd
pop
repz
mov
sub
loop
cmp
dec
jmp
adc
andb
xor
xchg
xchg
xor
pushf
add
ds
out
dec
decl
iret
repnz
out
loope
loope
mov
mov
or
je
cwtl
xor
lcall
and
fwait
outsb
and
xlat
fistps
add
xor
pop
orb
add
sub
add
jecxz
and
popf
lock
in
loop
idivl
sbb
or
psllq
push
mov
movsb
lret
xor
por
dec
fsub
subl
cmc
lock
fnstcw
cmp
jecxz
lcall
ret
mov
push
ret
loop
addl
fmul
adc
xorb
xor
add
dec
mov
sub
cwtl
subl
dec
mov
test
cmovae
repnz
sub
push
mov
dec
pop
cmp
bound
js,pt
sub
cmp
jl
insl
sub
dec
je
jecxz
push
xor
mov
scas
je
fmul
mov
or
shlb
pop
sub
cmpsb
pop
push
mov
add
imul
add
inc
icebp
or
pop
pop
add
add
sbb
or
mov
movsb
xor
xchg
push
add
xor
dec
pop
sbb
mov
push
sbbb
inc
mov
jle
insl
inc
push
or
sbb
inc
push
push
add
xchg
lcall
mov
fbld
cmp
mov
add
mov
xor
lcall
popf
or
pop
or
xor
enter
mov
outsl
push
sbb
push
test
ja
repnz
xchg
push
outsl
stos
adc
stc
sub
sahf
push
mov
mov
adc
imul
adc
sub
mov
or
enter
push
dec
mov
sbb
ret
xor
push
xchg
sbb
sahf
and
pop
xorl
es
ret
push
mov
add
or
fwait
imul
xchg
pop
inc
dec
mov
shl
inc
jb
push
aas
ficomps
mov
push
adc
adc
inc
push
cmpsb
test
xchg
mov
cmp
and
imul
pop
jb
stos
mov
dec
add
ds
das
push
cs
push
sahf
or
andb
data16
sbbb
dec
xor
mov
test
push
sahf
pop
jbe
pop
jp
fcomps
outsb
sbb
lcall
xchg
mov
sub
cmpsb
ret
mov
mov
inc
sbb
push
outsb
cmpsb
pop
mov
xor
cs
stos
nop
fidivrl
cli
cmpsb
data16
outsb
pop
cmovb
add
stos
pop
mov
xchg
sti
cmc
jmp
xchg
fstpl
or
bound
xchg
ret
dec
add
sub
gs
dec
mov
loop
jg
adc
imulb
jnp
push
xor
push
sarl
test
jmp
cli
enter
lea
mov
popa
or
mov
testb
scas
xor
popf
xchg
aaa
std
pop
mov
sbb
movsl
sbb
clc
mov
insl
xchg
insb
lea
cmp
fldl
ja
or
pop
or
or
pop
inc
sub
cmpl
es
cwtl
mov
jecxz,pn
cmp
xchg
mov
lret
loopne
lret
or
aam
jns
ljmp
xor
and
push
push
repnz
lods
push
int3
into
sub
adc
and
fcmovbe
xor
add
mov
jecxz
mov
add
cmp
dec
or
aas
pop
xchg
cwtl
scas
test
arpl
lcall
je
fdivl
mov
adc
out
xor
data16
pop
push
cmpsb
scas
in
inc
nop
cli
sub
jecxz
mov
inc
test
xor
sbb
fmulp
cli
out
bound
test
sbb
rclb
jecxz
addr16
test
testb
inc
sbb
mov
mov
or
ret
dec
bound
cmpsb
cli
inc
mov
and
push
ret
sbb
idiv
or
sub
dec
xchg
fsubs
fdivrs
shrl
push
popf
mov
out
divl
leave
jnp
inc
add
cmp
mov
jnp
addl
or
stc
mov
jne
pop
jno
sahf
sbb
add
and
push
cmp
mov
bound
push
push
test
dec
repnz
push
movsl
or
mov
loop
cwtl
pavgb
pop
jo
inc
inc
inc
das
push
or
sbb
pop
lods
push
pop
jecxz
ja
stc
cmp
add
mov
cli
or
push
stc
mov
cmp
insb
xchg
int3
enter
sbb
enter
lret
rorb
insb
pop
jmp
aaa
or
rclb
or
sti
or
push
stc
sahf
ja
iret
jg
leave
dec
rorl
adc
jmp
fisubl
mov
xchg
leave
mov
jnp
inc
mov
stos
fldl2e
dec
sti
arpl
std
add
xlat
mov
inc
mov
cld
fnsave
mov
in
add
inc
mov
inc
lret
mov
cld
leave
inc
or
xor
cmpl
stos
divb
sti
add
loop
out
inc
xor
dec
hlt
ret
fidivl
sbb
xchg
mov
out
cwtl
sub
les
push
jmp
push
shrl
jecxz
shrb
lea
xor
xchg
add
jle
test
xlat
ret
mov
fsubrs
rorb
xchg
mov
roll
lret
repnz
test
and
jmp
std
fadds
cmp
add
xchg
sub
add
jbe
mov
push
sub
mov
insb
es
icebp
sub
or
xchg
sbb
sub
lcall
fistps
or
xorl
sub
jbe
or
jmp
pop
push
jbe
dec
cmp
dec
jb
icebp
mov
enter
sbb
mov
inc
sbb
pop
adc
cwtl
push
inc
and
jno
fildll
pop
call
ret
rclb
sbb
sar
xchg
in
push
enter
int3
jns
in
push
pop
push
mov
mov
or
dec
inc
mov
test
out
xchg
mov
cmp
testl
int3
push
mov
sbb
bswap
fistl
lret
push
negb
adcl
add
push
sbb
and
push
dec
cmp
or
push
jecxz
pop
or
lea
cmpsb
loop
cltd
cwtl
sub
adc
add
cmp
repnz
cld
ljmp
ret
repz
loop
daa
inc
bound
imul
dec
clc
mov
lods
ret
fidivl
stos
loop
addr16
sbb
ret
lret
or
mov
push
push
in
outsl
mov
pop
call
jne
insl
push
cld
sahf
mov
adc
lret
add
dec
mov
cwtl
repnz
push
xor
mov
sbb
dec
mov
push
cmc
cld
int
cs
imulb
sbb
or
jno
loop
arpl
jb
add
pop
fcomp
inc
ret
sbb
xchg
or
cmc
add
cs
iret
mov
sti
sbb
xchg
cmp
fs
sbb
sub
push
loop
inc
scas
das
pop
pusha
pop
test
loope
mov
or
out
adc
pop
mov
mov
mov
out
jb
pop
outsl
pop
popf
sahf
jl
bound
lods
imul
je
dec
jae
mov
pop
stos
int
aad
xor
addr16
sub
or
adc
cwtl
addl
out
or
mov
js
popf
add
mov
in
bound
movsb
add
add
loop
flds
in
sub
jno
ss
leave
mov
cmp
lret
add
sbb
out
push
bound
xor
es
jne
cwtl
dec
add
mov
pusha
add
adc
jle
lret
sub
fistps
dec
enter
dec
cmc
jae
mov
jecxz
imul
stos
in
sbb
into
add
outsb
sarl
sub
lcall
lret
mov
sahf
or
lahf
into
jnp
mov
shll
pop
and
push
pop
jmp
dec
dec
mov
popa
repz
and
mov
sub
ret
add
jge
mov
pop
out
inc
aam
shlb
sub
leave
jno
lahf
in
cmp
sub
lret
adcl
je
mov
scas
sbb
or
bound
stos
dec
push
adc
sub
mov
mov
mov
mov
push
add
ljmp
pusha
mov
sbb
rcrl
or
fimull
jnp
or
lret
fcomp
adcl
add
pushl
xor
cmpsl
fisubrl
ret
stos
fs
out
cwtl
jne
mov
out
and
hlt
loop
lods
popf
sub
outsl
and
inc
cwtl
insb
aaa
dec
mov
xlat
and
jg
lea
push
fdivr
aam
in
sti
ljmp
js
xchg
sbb
popf
sub
iret
cmp
push
push
ds
lahf
push
pmulhuw
bound
xor
popf
mov
push
xchg
pop
in
leave
call
repz
push
mov
jecxz
imul
ja
leave
lahf
cmp
movsl
sbb
add
loope
sbb
bound
or
add
cwtl
cwtl
sti
aaa
loop
bound
mov
pop
adc
adc
xchg
and
xchg
sub
pushf
pop
das
sbb
call
adc
icebp
push
sti
cwtl
aad
scas
adc
xchg
out
inc
fs
ljmp
cmp
pop
hlt
jge
sbb
push
pop
stc
mov
adcl
int3
sub
enter
cwtl
dec
push
loope
mov
enter
lret
imul
xchg
repnz
xchg
pop
mov
cmp
xchg
aam
mov
stc
fstpl
sub
or
ret
cmc
int
jmp
sub
mov
sbb
cmp
test
and
cmp
lret
xchg
or
add
fnstsw
xor
std
mov
and
mov
adc
pop
pop
adcl
inc
fwait
lock
in
adc
push
push
xchg
pop
xchg
add
loop
push
dec
adc
jl
dec
dec
call
rorb
bound
stc
stos
sbb
push
enter
add
or
mov
rolb
nop
dec
lock
jp
mov
mov
push
jbe
jecxz
jg
or
jle
pop
dec
aas
scas
dec
lret
imul
add
push
jmp
and
add
ficompl
es
push
push
push
push
mov
mov
enter
jne
loope
ljmp
sbb
and
testb
inc
push
or
test
sbb
add
jnp
lods
xchg
repnz
add
push
out
add
mov
call
pushf
add
push
fldcw
dec
pop
shll
dec
xor
daa
std
fistpll
sbb
pop
or
pop
inc
mov
pop
mov
mov
iret
add
mov
mov
push
xchg
mov
fidivrs
push
loopne
sbb
cpuid
ror
xor
dec
inc
hlt
insl
fs
pop
lret
push
fmull
add
mov
rorb
sti
cmp
test
or
inc
mov
dec
rol
pop
mov
neg
inc
cs
add
sbb
scas
dec
push
dec
mov
xor
movsb
cmpsb
loopne
mov
cwtl
into
lea
xor
inc
push
pop
jb
mov
enter
insb
outsl
leave
mov
es
adc
or
xor
repz
int3
in
or
mov
testb
loop
repnz
test
mov
fdiv
inc
rcr
ficompl
jecxz
push
pop
and
or
iret
push
and
jecxz
push
and
nop
std
ja
cs
out
and
push
nop
jecxz
sub
orl
add
jecxz
dec
push
and
ret
enter
sbb
cmp
push
mov
and
pop
lret
mov
push
addr16
mov
and
test
push
loop
push
mov
or
jl
add
mov
and
lret
cld
fimull
lret
rcrl
fisttps
dec
push
push
push
add
imul
lret
mov
fadd
fdivrl
in
mov
pop
or
repnz
insb
dec
or
add
das
push
loop
insl
aam
lret
sbb
pusha
cs
cltd
lret
loop
adc
cwtl
xor
lods
inc
call
sub
cmpsb
and
psubd
add
ret
adc
js
inc
push
cld
rorl
ret
lods
les
outsb
mov
cmpsb
fsts
push
add
popa
pop
and
into
ret
cmpsl
push
inc
test
push
and
cmp
sti
sbb
xchg
hlt
ret
cmp
ljmp
pop
scas
inc
xchg
mov
mov
jo
repnz
in
mov
bound
cmp
pop
push
stos
sahf
inc
dec
fnstenv
cs
fwait
out
repnz
shlb
xchg
test
push
inc
and
or
mov
ljmp
or
mov
in
mov
pop
cmp
popl
sarb
nop
fcmovnb
or
dec
add
mov
adc
in
push
push
adc
sbb
cwtl
cld
fcomi
cld
aas
inc
call
mov
sbb
int3
repnz
fs
bound
inc
sub
jl
inc
push
add
mov
or
imul
and
inc
call
clc
cmp
cmc
add
pop
xchg
test
rolb
ret
push
sub
jp
lahf
dec
int
mov
fwait
sahf
dec
pop
int3
rcrb
push
mov
pushf
xbegin
and
or
mov
sub
push
push
leave
sarb
push
pop
stc
lret
mov
out
lea
icebp
mov
sub
mov
es
pop
sbb
scas
orl
fwait
ljmp
out
inc
ret
addb
es
jmp
repz
jb
sbb
les
sub
ret
mov
add
cmp
xchg
lret
and
xchg
nop
bound
clc
loope
inc
or
leave
stos
repz
ss
pop
xor
repnz
jmp
push
ret
sti
inc
stos
mov
rcrl
add
push
jmp
loop
pop
mov
mov
nop
or
or
or
data16
mov
add
pop
stc
adc
out
pop
xchg
inc
addr16
mov
notb
int3
stc
cmp
rclb
push
push
pop
data16
aas
fisttpll
out
xor
xchg
cltd
enter
sub
icebp
lahf
inc
outsl
repz
sbb
xchg
push
add
vpmacssdql
mov
outsl
dec
xor
or
je
or
loop
inc
lahf
into
xchg
test
je
push
enter
decb
add
int
mov
push
mov
xchg
repnz
bound
das
sti
inc
adc
pushf
jmp
jecxz
daa
popa
dec
cwtl
sub
or
shl
imul
push
repz
in
pop
or
lret
lret
aas
inc
fwait
das
dec
call
and
pushl
ret
push
lahf
xorl
call
mov
xor
out
cli
loop
pop
in
jbe
lcall
xorb
dec
es
push
dec
stc
mov
loop
adc
dec
mov
xchg
jecxz
inc
sub
mov
arpl
xchg
inc
dec
mov
loop
ss
fcomps
mov
push
cwtl
ud0
dec
call
dec
dec
repz
lds
adc
and
bound
je
inc
xchg
push
push
mov
cmp
shll
jne
xlat
fwait
test
fidivs
jb
fldcw
cs
sub
cmp
and
repnz
pop
mov
bound
sub
jecxz
and
push
dec
out
cwtl
cmp
lock
aam
pop
or
mov
add
sbb
mov
xor
adc
mov
repnz
mov
loop
xor
nop
rorb
out
push
pop
sub
stc
gs
pop
xor
mov
push
jecxz
push
loop
cmp
and
and
sub
push
fldenv
jb
inc
ja
sub
outsl
sub
push
lret
sub
into
sub
push
xchg
lret
hlt
ret
in
mov
call
jecxz
out
repnz
mov
dec
negl
xchg
ficompl
shll
ret
add
mov
mov
add
dec
int
aad
repnz
lds
lret
int
rcr
dec
fisubrl
aad
lds
notb
ret
aas
or
adc
ret
lss
clc
pop
test
push
add
sbb
scas
mov
xchg
out
fsubs
pop
loopne
or
loop
pop
jb,pn
push
movsb
inc
sbb
lahf
es
aad
mov
testl
and
add
rclb
pop
and
flds
dec
xchg
mov
push
rclw
sti
cmp
xlat
arpl
ret
sub
sti
push
in
sahf
dec
add
jbe,pn
mov
push
cltd
mov
decl
popf
shrl
mov
push
bound
cmp
lods
inc
mov
mov
decl
add
push
lret
mov
daa
inc
pop
pop
and
jl
or
add
aad
xchg
mov
nop
sbb
pop
or
adc
fstpl
push
jecxz
adc
repnz
mov
sbb
push
jecxz
stos
test
push
adc
xchg
sub
repz
and
xorb
cwtl
leave
andl
adc
iret
xor
mov
scas
pop
jle
out
push
stos
int
adc
pushl
xor
enter
xchg
sti
push
pop
jecxz
out
add
mov
push
popa
inc
enter
jp
mov
cmp
lock
cltd
movsl
popa
jmp
popf
and
rcll
push
lret
rolb
jecxz
int3
and
xor
repnz
int
sub
jl
arpl
add
inc
insb
sbb
push
or
loop
sbb
inc
movsl
iret
mov
cld
les
dec
inc
and
and
sbb
icebp
sbbb
xchg
add
jecxz
jl
das
int3
add
mov
adc
mov
sub
xor
inc
enter
mov
rolb
push
xchg
cmp
inc
pop
iret
aam
push
fstl
dec
inc
mov
mov
jnp
sbb
out
mov
sbb
pop
xor
dec
jmp
idivl
push
xor
push
or
out
flds
push
loop
sbb
es
pop
sbb
add
and
stos
mov
fbld
lods
or
loop
loop
ds
cmp
xor
ljmp
sbb
jg
mov
mov
push
orl
insb
mov
cmpsl
dec
add
fmul
jmp
xchg
cmpsl
xor
sbb
shl
mov
or
mov
sbb
decl
cld
lret
rcrb
hlt
repnz
xchg
mov
call
jecxz
push
xor
incb
outsl
push
inc
push
lret
or
mov
cli
cwtl
jbe
inc
or
add
sbb
cmp
mov
jge
push
idivl
in
inc
inc
mov
xchg
cmpsl
cmc
pop
in
xor
ret
add
aam
cwtl
dec
ss
loope
lds
fldl
dec
mov
jmp
push
ds
cs
cltd
roll
into
popf
iret
lcall
sarb
mov
cwtl
and
xor
js
mov
mov
ficompl
jecxz
add
inc
sub
bound
sbb
insl
sahf
dec
add
push
jo
inc
jne
push
bound
call
add
fisubl
outsb
add
adc
cld
fistpll
cmovb
mov
dec
pop
cmp
mov
adc
push
add
add
pop
sub
imul
sti
inc
mov
ljmp
bound
das
mov
lret
gs
cwtl
inc
sbb
jae
inc
mov
add
xor
aam
push
sub
jns
or
mov
pop
bound
jmp
dec
mov
pop
andl
cwtd
popa
leave
decl
sbb
pop
mov
jle
push
ja
adc
sub
xchg
ss
xor
sbb
mov
inc
insb
lret
xchg
mov
push
hlt
jle
mov
and
xchg
and
faddl
xor
sub
or
xor
pop
movsl
or
fdivrs
sub
int3
inc
movsb
mov
sbb
add
xor
push
sub
xchg
mov
test
outsb
adc
repz
mov
insl
mov
mov
adcb
dec
fbld
adc
fisttpl
fucomp
sbb
jnp
sub
adc
popa
das
or
iret
sbb
loope
xchg
outsb
dec
or
add
add
mov
inc
cmc
aas
or
xchg
cmp
shrl
test
adc
clc
hlt
rolb
cld
mov
or
mov
pop
cmp
sbb
mov
cmp
lret
sub
push
std
scas
jb
clc
js
lods
call
push
mov
jecxz
pop
dec
mov
xor
clc
cmp
sti
push
inc
outsb
xchg
adc
test
push
or
jb
repnz
pop
push
gs
pop
bnd
jecxz
xor
add
and
add
xor
clc
mov
adc
jecxz
inc
sub
and
call
push
ficoml
push
lcall
sub
jecxz
sbb
xchg
test
out
pop
loop
enter
test
or
adc
int3
pop
into
inc
add
mov
dec
cwtl
push
pop
add
jns
jbe
loop
mov
stos
inc
hlt
stos
sub
pop
xchg
xor
loop
js
xor
fsubrs
mov
jno
loop
sbb
xor
push
xchg
cli
jl
leave
into
mov
or
in
push
pusha
lahf
push
xor
xchg
jecxz
out
lock
dec
inc
push
or
dec
inc
in
pushf
scas
mov
mov
adc
pop
test
repnz
pusha
pop
das
scas
add
adc
stos
loopne
inc
ds
sub
add
mov
arpl
lret
pop
fbld
fildl
divl
add
fmuls
rcr
loop
mov
orl
add
lcall
lret
jmp
lds
add
cmp
pop
es
cmpsl
daa
mov
mov
dec
cmp
test
insb
xchg
mov
in
or
notb
inc
jno
and
clc
push
imul
or
pop
sub
add
in
shlb
and
mov
push
cmp
jecxz
sub
jnp
shlb
inc
xor
cmpsl
psrad
xchg
pop
std
das
push
push
mov
popa
out
das
repz
std
mov
sbb
push
push
xor
clc
jg
test
xor
fdivr
enter
push
push
adc
ret
clc
in
pusha
sub
loope
fsubl
scas
shl
push
int3
sbb
add
cwtl
and
pop
or
fisubl
pushl
in
pop
push
aam
cmp
out
dec
fcoms
mov
add
fcmove
sub
fisttpll
popa
inc
mov
das
mov
adc
and
jno
jbe
arpl
mov
pushf
cmpsb
adc
mov
call
push
pop
mov
int
repz
shl
jo
pop
ljmp
mov
bound
cs
pop
and
dec
cwtl
loop
inc
sarl
push
fwait
mov
popf
inc
inc
xchg
inc
ret
rcrb
outsb
aam
sbb
mov
test
int3
jns
sub
cmp
ficoms
jl
jne
insb
imul
inc
xchg
loop
pusha
sbb
add
leave
scas
popl
bound
or
mov
loop
fistl
xchg
pop
repnz
push
sub
repnz
cmp
pop
jecxz
xor
cmp
fwait
sbb
dec
repnz
xchg
pop
orb
bound
gs
movsl
pushf
stos
mov
inc
push
test
int
bound
push
inc
dec
cwtl
pop
repnz
test
xor
xlat
cli
cmp
jne
daa
fldcw
jae
into
icebp
adc
push
fdivrs
out
loope
jmp
icebp
movsl
in
or
xlat
xchg
xor
and
xor
or
js
dec
cli
pushl
imul
testl
call
mov
std
add
loop
in
test
sub
add
push
inc
sbb
dec
in
jecxz
lock
movups
mov
fadd
repz
inc
sti
mov
insb
xor
out
testb
sub
rcr
mov
pop
and
es
push
sbb
mov
movlhps
xchg
ret
push
rcr
or
add
in
in
aad
jbe
mov
cltd
mov
cltd
clc
or
cmp
or
outsb
jmp
pop
rol
sbb
incl
mov
rcll
scas
ret
xchg
xchg
mov
xor
jbe
and
sub
ficompl
xchg
push
das
das
mov
fs
jnp
cwtl
and
or
mov
jecxz
push
lahf
jecxz
aad
out
das
sbb
jecxz
jecxz
adc
rcrb
mov
push
xor
stos
test
xor
or
lret
or
roll
loop
push
sbb
jno
jb
mov
mov
and
mov
pop
imull
dec
sub
aam
popf
out
call
fdivr
mov
insl
sbb
add
into
clc
lret
lock
repnz
adc
or
lret
loopne
mov
xchg
pop
or
rorb
push
mov
int3
xchg
mov
dec
xchg
pop
push
es
mov
add
cmp
stc
xor
dec
shll
add
es
sub
out
sub
fsub
lret
sbb
cmp
pop
lahf
push
adc
dec
push
stos
call
repnz
pop
mov
sub
jmp
add
dec
aaa
cli
sbb
add
in
jp
jmp
pop
xor
movsl
es
push
cltd
pop
xor
loop
jge
lret
sahf
enter
bnd
nop
call
pop
pop
out
out
add
repnz
jns
jg
stos
and
repz
cmp
xor
out
les
loopne
popa
push
mov
push
pop
popf
inc
rcrb
push
adc
push
scas
pop
mov
sub
add
ror
sti
pop
or
mov
lahf
mov
xor
outsl
or
xor
imul
pop
sbbb
sub
flds
pop
loopne
add
int3
pusha
push
out
sbb
inc
test
or
or
scas
mov
daa
test
inc
enter
stc
repnz
pop
scas
xor
inc
or
cmpsl
loop
fcoms
mov
and
or
cmp
pusha
fnstenv
jecxz
mov
lods
int
cmp
testb
xchg
loop
xchg
in
sub
mov
scas
cmp
xor
repz
lds
std
jle
mov
pop
rcrb
or
add
or
xor
xchg
push
mov
testl
repnz
push
push
pop
inc
sbb
and
into
push
movsl
sbb
cmpps
arpl
push
xchg
jp
lods
lret
mov
adcb
enter
insb
add
ret
or
mov
inc
out
cltd
sbb
lcall
or
pop
dec
dec
iret
orl
jecxz
mov
aaa
icebp
and
xchg
repz
call
imul
jae
shrl
adc
movsl
mov
cmp
fsubp
pop
sbb
sbb
mov
iret
out
aad
stc
add
pop
push
fldenv
xchg
mov
sub
push
mov
mull
dec
divl
iret
ja
mov
cmp
call
incb
out
lcall
xor
push
je
jp
push
stc
dec
loop
rcrb
out
or
aad
jecxz
out
gs
adc
lahf
and
mov
imul
inc
push
lcall
paddw
mov
mov
and
lea
lret
fildl
mov
dec
lds
iret
lds
xchg
adc
or
clc
pop
mov
loop
mov
inc
fcomp
out
xor
addl
dec
or
test
inc
mov
mov
cltd
test
cmp
pop
ret
add
nop
mov
inc
ss
adc
aad
pop
dec
mov
loope
jmp
sbb
mov
ljmp
cmc
mov
ret
repnz
add
push
in
or
shl
mov
pusha
stc
push
ret
xor
and
loop
sub
mov
sub
dec
rcrl
mov
int3
sub
cmp
aam
mov
incl
add
iret
ret
sbb
fimuls
and
add
scas
mov
fld
mov
mov
dec
ss
xor
jmp
and
iret
data16
rolb
or
mov
jecxz
add
lea
adc
je
inc
insl
sbb
cmpsb
pop
lret
mov
and
inc
mov
movsl
pushf
int
std
lods
ret
rclb
push
push
ljmp
pop
mov
out
xchg
dec
mov
and
test
push
loop
pushf
and
push
in
pop
xchg
pushf
cmp
inc
or
lahf
add
jnp
in
push
mov
xor
xor
mov
ljmp
xlat
mov
mov
jg
bound
sbb
or
loope
icebp
cmp
faddl
push
mov
pop
flds
into
int
dec
incb
dec
imul
les
push
lea
insb
jle
jecxz
push
ret
xchg
aad
mov
cmp
mov
xlat
fwait
leave
inc
sub
mov
or
clc
outsb
sub
mov
test
cmp
loop
iret
jae
scas
inc
lret
mov
pusha
in
xor
inc
xor
aad
inc
insl
bound
sbb
jge
fdivs
jecxz
rorl
loop
inc
mov
pop
sbb
mov
jbe
push
pop
jbe
jp
mov
pusha
cmp
mov
setl
xor
icebp
adc
cmp
sub
sub
loop
or
int3
or
inc
cmpsl
cli
dec
xchg
sub
test
andl
adc
xor
jmp
jno
jno
pop
loop
inc
in
sbb
fstps
mov
fmuls
shrl
jmp
sub
lret
add
popf
out
sbb
lret
sarl
lahf
mov
es
and
or
dec
repz
repz
mov
or
inc
repnz
outsl
cwtl
test
adcb
repz
sbb
and
push
adc
jecxz
ret
scas
push
fldenv
add
dec
fimuls
cmp
in
jbe
imul
in
pop
out
mov
xchg
xchg
xchg
push
mov
ret
dec
sbb
pop
jecxz
mov
xchg
mov
sahf
repnz
and
pop
popa
divb
add
cmp
shrb
pop
or
dec
in
sbb
pop
jnp
pop
dec
dec
iret
testl
adc
mov
or
add
sbb
jg
fildll
jecxz
les
mov
loop
fisubrs
sbb
cmp
dec
je
push
pop
cmp
xor
cmpsb
xor
lahf
insb
mov
pusha
idivl
fwait
cli
xchg
inc
sub
lcall
jg
or
fldt
jecxz
add
shr
lret
enter
add
pop
push
push
push
loop
pop
mov
rolb
clc
shlb
mov
fsubp
mov
and
ss
call
pop
mov
xchg
push
int3
imul
lret
test
xchg
pop
mov
lcall
sbb
in
add
lcall
movsb
pusha
and
xlat
popf
sub
or
cli
or
jne
push
inc
jbe
xchg
mov
pop
mov
stos
cwtl
sub
dec
aad
cld
ljmp
pop
daa
jle
inc
add
or
jp
xor
add
test
bound
and
pop
ficoms
jle
cmp
testl
or
mov
repnz
incl
add
subb
and
scas
or
xchg
xor
pop
lods
fwait
lret
aad
sub
push
or
jle
push
std
xchg
cmpsl
lcall
sbb
in
pop
insb
sti
dec
jnp
popa
addr16
sbb
push
cmp
pop
cli
stos
dec
push
mov
movb
mov
ret
dec
mov
hlt
xchg
test
stos
jle
xor
scas
hlt
xchg
in
mov
inc
fidivrs
std
cmpl
inc
mov
jbe,pt
mov
cmpsl
mov
or
push
inc
xchg
pushf
xchg
scas
jns
dec
test
pop
pop
jae
mov
enter
jmp
loop
sub
adc
mov
addb
xor
movsl
xchg
or
sub
lret
sbb
in
das
mov
mov
lcall
cmp
add
mulb
cmp
aam
loop
push
in
xor
das
mov
cltd
add
std
gs
icebp
push
or
int3
aaa
xor
cmp
inc
xchg
popf
inc
push
filds
test
ret
int3
ffree
popa
jo
jns
mov
cmp
jmp
or
call
js
xor
inc
repz
movsl
incb
sub
adc
bound
ds
mul
mov
aad
jecxz
into
dec
stc
or
lods
je
pop
xchg
mov
xchg
cmp
lock
fidivs
inc
pop
negb
mov
jle
loop
ficompl
fnstcw
pop
or
pusha
ficoms
xor
add
xchg
enter
add
mov
add
and
es
fcom
and
or
mov
sbb
dec
jg
int3
jno
or
cli
fcom
orb
jge
adc
cmp
sbb
add
icebp
syscall
mov
mov
mov
xlat
loop
fsubp
add
nop
rcrb
sub
push
daa
imul
div
loop
inc
or
pop
mov
jecxz
out
pop
stos
dec
aad
push
mov
push
cld
repz
dec
mov
pop
dec
in
xor
sbb
cmp
add
xchg
adc
jl
add
dec
mov
ds
mov
push
pop
loop
mov
push
repz
adc
or
leave
and
dec
ljmp
mov
mov
jp
clc
outsl
adc
ret
test
sbb
js
es
ret
jae
loop
inc
cmpsl
mov
pop
mov
aas
lret
pushf
movsb
mov
leave
fsubr
fsubrl
mov
loop
add
call
sbb
imul
adc
ret
dec
stos
jo
dec
or
xchg
add
fadd
pop
xchg
mov
icebp
rcrb
fs
ret
lcall
repnz
or
pop
cwtl
pop
test
loope
push
pop
nop
je
add
inc
clc
cmp
inc
jbe
inc
push
es
outsb
bound
pop
test
mov
xchg
les
adc
int3
inc
hlt
outsb
jl
push
mov
mov
hlt
inc
repnz
loop
inc
int3
mov
push
ds
mov
das
sbb
in
or
movsl
push
frstor
icebp
and
loop
pushf
nop
sub
std
sub
mov
dec
les
out
mov
sub
pushf
mov
sub
mov
f2xm1
adc
inc
and
inc
std
sub
lahf
loop
fxtract
cwtl
or
cs
jb
jecxz
sbb
push
cmp
mov
iret
inc
jae
dec
outsb
xchg
xchg
push
mov
mov
outsl
clc
sbb
xchg
sub
add
and
inc
lods
outsb
mov
jns
psubw
mov
push
icebp
lods
mov
cmp
arpl
push
sbb
add
jecxz
pop
aas
repz
and
adcb
xchg
fbld
test
mov
inc
xchg
adc
and
das
roll
mov
sbbl
stos
ret
pop
push
into
jecxz
pop
loopne
adc
je
inc
jecxz
fwait
inc
fbld
push
repnz
or
test
adc
mov
lahf
loop
sub
call
rorb
push
repnz
adc
and
mov
repnz
inc
or
test
bound
pop
aas
fdivl
add
inc
and
fcoml
daa
insb
sub
pop
cmp
xlat
test
enter
add
lods
jns
mov
mov
or
les
clc
loop
cltd
ret
loop
lcall
das
negb
jns
push
inc
mov
shll
xchg
push
dec
cmp
pop
enter
cmp
dec
jecxz
lahf
push
xorl
xor
add
test
addr16
out
mov
add
push
add
xchg
mov
stos
inc
sti
sub
mov
dec
loop
addr16
jns
mov
mov
jp
ljmp
arpl
enter
popl
sub
xchg
pop
and
mov
sub
sub
test
sub
call
cltd
addl
and
faddl
dec
sbb
stc
inc
ret
sub
test
imulb
stos
mov
cmp
lea
sub
mov
jae
mov
jnp
sub
mov
push
inc
push
sbb
fimull
out
popa
or
bound
cmp
jecxz
and
iret
loop
mov
scas
movsb
in
sbb
push
xor
jecxz
jp
or
cwtl
xchg
clc
enter
or
repz
mov
scas
ljmp
xor
cmp
ret
jno
push
mov
adc
lcall
mov
int3
lds
addl
stos
lcall
pop
cmp
inc
or
dec
sub
adc
clc
rcr
in
xchg
push
and
sbb
pusha
dec
xchg
pop
int
sbb
call
fs
jmp
repz
and
pop
ss
lret
test
push
outsl
movsl
fnstenv
in
sub
mov
jecxz
clc
movsl
sub
pop
sbb
mov
or
cmp
jg
or
in
push
cld
int
mov
loop,pn
xchg
stos
jecxz
iret
cmpsl
mov
sub
push
inc
test
les
add
pop
bound
adc
push
stc
sub
cli
pushl
dec
repz
jecxz
xchg
mov
bound
mov
push
cmp
jp
xchg
sbb
xor
pop
add
adc
mov
xchg
mov
jbe
dec
iret
inc
daa
pop
sbb
mov
into
fisubs
add
mov
ljmp
push
and
dec
lock
mov
xor
lahf
inc
mov
out
or
aam
sbb
jg
jle
lahf
cli
ret
sub
fbstp
subl
nop
iret
into
insb
inc
mov
iret
in
mov
add
ficompl
and
dec
dec
mov
aam
xchg
dec
loope
sbb
xchg
imul
jecxz
mov
sbb
mov
scas
cwtl
arpl
repnz
cli
or
ret
bound
mov
push
cmp
adc
hlt
cld
lcall
add
push
mov
jo
inc
or
inc
cmp
mov
ljmp
scas
xchg
bound
daa
cmp
stos
jl
sub
add
shrb
jmp
enter
mov
les
loop
ja
pop
push
in
pop
repnz
mov
xor
push
daa
sbb
inc
or
mov
sub
invd
jmp
add
mull
dec
jge
loopne
pop
jnp
sbb
jg
mov
push
cwtl
pop
addl
inc
pop
filds
sbbb
cmp
xchg
enter
xchg
cld
lret
sbb
aas
and
sub
subl
out
pop
loop
xchg
jecxz
ds
mov
inc
inc
xor
stos
mov
js
mov
fmull
jecxz
push
and
fists
push
imul
inc
mov
fyl2x
out
gs
jecxz
sti
sub
push
adc
pop
orb
fsubr
adc
jae
clc
xor
sub
lods
hlt
push
xor
lcall
push
xor
inc
pop
outsb
pop
les
icebp
sub
sbb
add
roll
dec
mov
addb
in
test
add
enter
js
shrl
add
repnz
push
bound
mov
faddl
dec
shl
adc
mov
cmpl
adcb
iret
sub
cli
or
cld
leave
mov
mov
push
je
sbb
jae
sbb
movsb
jle
negb
push
pop
scas
test
test
xor
lret
and
clc
sbb
bound
filds
test
lcall
push
scas
add
clc
out
test
into
jecxz
sub
inc
adcl
loop
or
pop
jp
leave
jmp
jecxz
fs
add
inc
pop
mov
loop
stc
mov
or
inc
xlat
xchg
cld
arpl
push
jne
rorb
or
dec
cltd
aaa
inc
mov
arpl
jecxz
pop
loope
push
aaa
jecxz
ficompl
inc
mov
adc
popl
in
iret
into
sarb
xor
imul
adc
and
sahf
jecxz
push
addl
fwait
mov
jns
inc
call
lret
sbb
sbb
into
xlat
enter
movsl
cs
add
push
lcall
sbb
push
or
jnp
xor
push
pop
mov
add
inc
repz
lret
jecxz
push
mov
mov
repnz
inc
push
xchg
aad
lahf
mov
cmpsl
mov
dec
mov
jmp
mov
daa
mov
aad
lods
jecxz
fbld
cs
enter
inc
jecxz
out
mov
lcall
repz
xor
int
add
adc
mov
xor
lods
repz
mov
jo
xchg
sub
fistpl
test
mov
and
mov
std
ja
cmc
xor
and
xchg
pop
xor
mov
clc
lds
jg
cmp
bound
mov
int3
sub
lret
or
inc
out
push
mov
loop
mov
push
mov
jae
repz
stos
push
nop
pop
xchg
or
mov
add
shlb
popa
pop
dec
inc
push
adc
sub
test
out
mov
mov
xor
repz
insl
push
push
dec
dec
sbb
outsb
dec
scas
sbb
inc
push
shrl
cmp
scas
mov
xlat
cwtl
and
idivl
mov
mov
lret
or
or
subl
fcom
lcall
dec
fsts
push
data16
cmpw
lret
out
dec
arpl
dec
sbb
inc
cmp
in
pop
dec
jbe
loop
ret
shl
xchg
dec
cmp
mov
in
sub
frndint
loop
mov
aam
lret
jecxz
adc
pop
into
cmpsl
loop
cmpsl
mov
shr
aam
push
idiv
repz
sbb
adc
dec
dec
push
jbe
add
lret
push
js
inc
fnstsw
dec
fdiv
xor
pop
xchg
dec
clc
jne
adc
xor
iret
mov
inc
push
mov
jns
cmp
test
dec
xchg
daa
test
push
and
imul
pop
add
sub
into
xor
sbb
ss
dec
ret
xchg
adc
mov
stos
push
add
andb
aad
ret
sti
jae
or
cwtl
and
jmp
mov
cmp
inc
xchg
and
push
cmp
sti
enter
popa
cmp
dec
pop
loop
mov
movsl
sbb
pop
inc
sub
fsub
hlt
or
jae
popf
push
jg
push
adc
jnp
into
xor
aam
mov
fxch
call
je
fisubl
add
sub
icebp
xchg
dec
mov
add
loop
or
xchg
repnz
cmp
nop
xchg
pop
push
mov
fsub
enter
inc
push
lods
mov
xor
dec
out
xchg
pop
loop
add
test
outsl
insb
add
push
ss
pop
push
fcoml
lea
adc
mov
or
out
aaa
mov
iret
das
cmp
mov
popf
push
push
jmp
fisubrs
sub
push
sub
add
out
scas
mov
icebp
nop
mov
push
loop
stos
cmp
aas
ljmp
lret
cmp
fildll
mov
xchg
ret
dec
lcall
fisttpll
clc
mov
icebp
sbb
or
fists
pop
imul
push
notl
ror
movzbl
mov
jg
xchg
cld
mov
or
popa
pushf
gs
inc
sbb
es
lahf
push
sub
loop
call
into
add
pop
xchg
xchg
mov
adc
jl
aaa
pop
pushf
or
sbb
out
inc
mov
sbb
inc
inc
add
mov
and
shl
lret
fisubrs
es
mov
mov
into
into
test
jns
pop
jmp
mov
xchg
fmul
adc
xchg
adc
or
fwait
repz
ret
add
repz
rcrl
push
jle
loopne
jg
movsl
mov
test
push
lret
dec
mov
shl
ficoml
cltd
mov
pop
mov
push
push
xorl
pop
pop
sbb
mov
add
lods
mov
cmpsl
adc
dec
aas
or
arpl
adc
inc
mov
das
add
call
xor
scas
xchg
xchg
int3
cmp
arpl
xchg
and
insl
scas
jno
pop
dec
and
cld
fiaddl
mov
fcmovb
jae
mov
mov
mov
add
mov
mov
mov
andl
movsl
pop
ret
add
xchg
clc
enter
lret
int3
call
ret
jae
mov
stos
jge
xchg
cmpsl
inc
dec
enter
movsl
jne
mov
sub
sub
lahf
jns
add
ret
sarl
orb
or
cmpsl
sub
cld
xor
cltd
adc
das
movsb
cmp
pop
dec
xchg
sbb
in
jg
mov
fstpt
jnp
adc
push
push
bound
jnp
push
jmp
xchg
lret
std
leave
adc
ljmp
hlt
mov
mov
pop
mov
mov
push
stc
out
xor
pushf
mov
cmc
sbb
loope
jb
pop
mov
jmp
lcall
mov
movsb
cmp
jmp
ljmp
mov
push
cli
sbb
fistpll
shrb
or
mov
call
push
jne
scas
shrb
fcmove
shlb
iret
pop
loope
sbb
cmp
push
cmp
aaa
xor
popa
mov
repnz
xchg
mov
fsts
outsl
and
jecxz
dec
inc
fiadds
cwtl
cwtl
xor
cltd
sub
fcmovbe
and
mov
inc
sbb
pop
clc
es
inc
notb
push
loop
cmpsb
shrl
inc
push
xor
mov
xchg
fsub
ja
xchg
pop
fdivrs
loop
mov
jne
rcrb
add
test
push
add
and
lahf
jge
xchg
cltd
cli
pop
mov
or
xchg
jne
or
cli
hlt
dec
pop
call
mov
xchg
test
repnz
fs
lock
ret
popa
in
jae
jae
pop
pop
js
fimuls
add
imull
shll
pop
push
add
sub
adc
sahf
sbb
xchg
aad
inc
mov
paddsb
dec
je
mov
ret
lea
sti
lock
int3
dec
inc
cwtl
mov
loope
loop
add
pop
mov
cmp
mov
or
mov
leave
outsb
fbstp
inc
cmc
notb
out
pop
fstpl
push
mov
stc
and
xchg
mov
fucompp
cld
and
scas
in
pop
adc
add
std
aam
imul
push
sbb
xchg
or
repz
and
pushf
jmp
xchg
mov
push
sub
loop
mov
fstps
jb
push
add
xor
test
testl
sub
mov
lcall
loop
sbb
xchg
xchg
pop
pop
or
pushf
inc
pop
adc
and
shl
adc
push
xor
repz
pop
rorl
lret
ret
loop
test
add
andb
pop
sti
sbb
push
mov
sbb
adc
adc
xchg
ret
out
and
lahf
pop
sbb
lahf
bound
lcall
aas
fimull
pop
inc
xchg
dec
int
les
xchg
into
push
hlt
movsb
inc
and
jne
pop
les
test
popf
mov
push
push
pop
pushf
mov
adc
xchg
js
add
mov
push
cli
ret
xchg
subb
in
sbb
sub
pop
xor
mov
iret
scas
iret
mov
push
sbb
mov
mov
sbb
in
cli
cld
push
sub
jno
jp
mov
inc
test
les
jae
js
inc
push
fwait
inc
stos
popa
push
cmp
je
push
es
xor
pop
adc
mov
cltd
test
sub
mov
dec
jo
ss
out
pop
add
mov
divl
xor
mov
xchg
push
sbbl
pop
iret
hlt
mov
xchg
dec
sbb
mov
or
sbb
sub
mov
and
mov
push
fisttpl
hlt
lret
jne
inc
jp
xchg
sbb
jmp
lret
cmp
push
jl
outsb
fisubrs
aaa
mov
mulb
dec
sti
in
ja
mov
fldcw
fwait
leave
daa
enter
lret
out
movsl
lcall
add
add
jb
pop
pushw
roll
je
inc
xchg
or
sub
stc
dec
adcb
jb
push
xlat
mov
mov
lea
ds
and
add
push
imul
mov
shl
jecxz
mov
inc
repz
ret
int3
fst
orl
xor
in
adc
push
les
cmpb
mov
popf
mov
sub
fsub
ret
mov
pop
and
sbb
sarl
lods
push
dec
sbb
fcomp
fsubrl
push
les
sub
dec
add
jecxz
sub
rolb
int
repz
xchg
add
scas
push
loop
fcmove
jae
sub
add
mov
popf
xchg
enter
jbe
xor
leave
andl
sub
das
and
jnp
xorl
rol
xchg
pop
pop
in
sub
push
add
mov
cli
sub
dec
out
mov
add
add
sti
sub
lret
inc
stos
fisubl
cmc
pop
adc
bound
mov
aad
incl
sub
xchg
ret
sbb
cwtl
test
xor
sub
sub
sub
dec
sub
xchg
dec
xchg
pop
mov
sbb
or
xor
xchg
inc
xchg
mov
cmc
and
movsb
dec
lds
jne
xchg
lods
mov
out
fwait
loopne
inc
das
and
or
pushf
cmp
pop
push
aad
inc
sbb
mov
jp
repz
popa
jno
mov
sbb
sub
sbb
jnp
dec
movsb
push
cld
shr
data16
fcmove
mov
pushl
in
into
push
add
cld
int
push
xchg
add
test
and
jmp
mov
push
or
data16
out
mov
loopne
mov
mov
xchg
rolb
dec
pop
push
scas
xor
jmp
pop
cmpsb
sub
lret
outsb
sbb
push
add
jg
mov
jecxz
fs
push
push
sub
hlt
lds
iretw
mov
popa
testb
bound
outsl
sub
scas
push
mov
sbb
sub
in
xchg
mov
add
pop
fnstcw
scas
mov
push
ljmp
mov
in
push
xchg
xchg
lods
rcrl
adc
add
fisubl
scas
outsl
sbb
andb
xor
js
or
test
loop
xor
repz
sbb
inc
sbb
dec
rclb
ss
pop
cmp
fisttps
xor
insb
mov
jbe
or
sti
xor
xor
and
pop
push
sbb
sbbl
sub
pop
bound
imul
xchg
data16
or
mov
xor
pop
and
das
pop
outsb
call
fisttpl
adcl
movb
xchg
fcomip
jo
mov
push
mov
test
dec
mov
dec
cltd
pop
hlt
outsb
inc
mov
cmpsl
mov
cltd
add
mov
ret
stc
add
inc
popf
cmpsl
sarb
pop
scas
and
mov
add
jnp
or
mov
lahf
jp
jmp
scas
pop
jnp
subb
test
lcall
pop
dec
mov
pop
les
shl
std
jns
cmp
idivl
insb
or
or
add
adc
xchg
push
lods
pop
xchg
into
push
ja
loopne
mov
mov
add
cmpsl
adc
adcl
push
call
movsb
daa
push
adc
jne
lock
adc
repz
sbb
add
shr
scas
fiaddl
xor
loopne
pushf
lock
mov
mov
sub
pop
xchg
mov
jecxz
ror
dec
ss
mov
adc
leave
repz
dec
andl
ret
add
aam
lret
adc
sbb
outsl
in
cs
mov
fidivs
jo
xor
jle
enter
or
sub
insb
xchg
inc
mov
jb
sub
test
loop
das
inc
imul
stc
jno
cwtl
pop
sub
add
mov
mov
xchg
and
inc
sbb
inc
inc
jl
jns
mov
push
mov
or
add
dec
fwait
xchg
repnz
pop
loopne
das
cmp
dec
push
sub
rolb
mov
fcomps
xchg
mov
outsb
dec
test
adc
jecxz
nop
mov
pop
mov
sarb
loop
mov
or
test
push
scas
xor
or
or
mov
xchg
inc
adc
mov
lock
sahf
sub
sarl
rorl
pop
sbb
pop
mov
mov
add
cmp
mov
call
jle
call
xchg
lret
flds
ret
fcmovb
insb
add
push
cmp
xchg
ljmp
fcomps
xor
inc
pop
push
sbb
sub
int
cmp
xor
xchg
sbb
push
mov
xchg
cmp
scas
pop
sbb
mov
mov
fidivrs
sub
pusha
shrb
sbb
and
push
xor
cltd
dec
and
jns
mov
aas
sbb
xor
push
add
fiaddl
add
enter
rcr
subl
pop
cmp
popa
cltd
mov
mov
push
ds
lcall
stc
adc
enter
ficoms
or
loop
mov
int3
or
xor
inc
lahf
sbbb
xor
mov
xchg
cltd
xor
pop
xchg
mov
and
js
push
jmp
cmp
or
cwtl
stc
xor
jecxz
xlat
das
mov
jl
scas
js
jp
mov
xchg
out
sahf
sbb
jecxz
fisttpl
imul
shll
push
cli
out
inc
andl
push
and
xchg
ret
dec
jp
mov
enter
push
sti
push
push
mov
dec
push
add
mov
test
push
fcmovbe
ss
add
gs
fcoms
ret
sub
bound
inc
inc
xchg
jae
cwtl
push
push
xor
xor
fdivrl
das
push
xchg
mov
push
inc
call
jae
push
xchg
in
lds
mov
insb
mov
adc
sbb
push
add
push
xchg
xchg
mov
fsub
or
push
rcr
in
sub
insb
cmp
and
push
mov
fsubs
mov
rcrl
cmp
inc
mov
jns
push
mov
inc
iret
arpl
sub
and
pop
dec
loope
fists
out
cmovne
dec
ret
cmpsl
cmp
repnz
dec
imul
cmp
mov
fldz
sub
pop
sub
push
adcl
das
aas
push
loopne
push
adc
add
mov
mov
unpcklps
fcmovu
push
bound
jmp
jmp
jb
lds
leave
test
and
stos
mov
cmpsl
mov
leave
mov
or
cmp
cwtl
cmc
call
ret
dec
mov
xor
jbe
mov
add
and
mov
add
div
inc
mov
jecxz
dec
les
scas
in
lds
imulb
or
cltd
mov
and
leave
rolb
pop
cmpsb
scas
sysexit
sub
xor
and
mulb
mov
gs
fistl
fsub
add
hlt
adc
adc
or
aam
sub
shll
fildl
fildll
into
in
push
cmp
xchg
mov
jo
dec
mov
les
iret
pop
jecxz
outsb
mov
mov
cltd
ret
mov
divps
cmpsb
test
inc
out
repnz
push
loopne
and
add
push
hlt
ficoml
sub
lock
xchg
out
pop
femms
mov
scas
insl
mov
mul
mov
notb
dec
dec
ret
ja
or
sbb
add
mov
mov
cmc
outsl
stos
loop
sub
xor
push
pop
jp
mov
xor
push
pop
dec
mov
cs
add
pop
add
cmp
push
pop
jbe
xor
sub
xchg
test
jno
and
and
ret
and
dec
inc
inc
push
pop
inc
jg
loopne
ret
lock
fildl
sub
sbb
pop
cmpsl
dec
xchg
sti
ljmp
stos
jno
add
out
xchg
ret
lods
mov
lret
into
insl
fiadds
mov
xor
sub
lock
pop
cmp
adc
add
loop
pop
jg
sub
das
mov
jbe
pop
push
cmpsb
loope
invd
lock
jp
push
push
xor
enter
add
sbb
push
mov
push
pop
out
lret
mov
loop
and
xchg
fwait
pop
ljmp
dec
fwait
inc
push
cs
push
in
or
xchg
jecxz
adcb
mov
dec
scas
and
mov
push
pop
push
loop
es
mov
loopne
push
pop
out
pop
push
les
xchg
hlt
or
pop
aam
pop
lret
loope
xor
cmp
or
add
jle
xchg
mov
xor
push
sbb
fnsave
lock
push
jae
inc
pop
enter
sbb
push
bound
clc
jb
pop
pop
push
idiv
xchg
lahf
flds
sub
dec
outsb
popa
in
mov
repnz
mov
outsb
loop
mov
fisttpll
inc
add
pop
mov
sbb
enter
sub
xchg
or
bound
jbe
arpl
jg
xchg
flds
mov
fildll
adc
iret
mov
or
add
in
mov
nop
das
setp
aas
mov
lcall
nop
mov
js
or
ficoml
mov
bnd
push
bound
cmp
dec
out
pop
lcall
test
rorl
xchg
hlt
xorl
into
mov
dec
jno
sub
loope
cmp
rorb
inc
inc
push
xor
or
mov
cmp
push
jg
pop
mov
outsb
fstpt
pop
into
iret
jecxz
push
and
jmp
into
loopne
in
inc
ja
into
mov
fldl2e
xchg
in
nop
sub
sub
pop
add
cmp
popf
push
fisubs
cmpb
xor
aas
or
mov
xchg
leave
mov
notb
mov
xor
dec
sahf
xor
bound
into
mov
or
pop
fidivrl
add
cmp
les
enter
aam
and
xchg
mov
adc
mov
jmp
and
in
lret
daa
icebp
xchg
mov
jmp
sbb
jp
cmp
sbb
sbb
jb
sbb
pop
mov
sbb
mov
mov
andl
insb
mov
add
fnstcw
push
sub
mov
or
arpl
stos
std
push
jg
test
je
pop
cli
fildl
xor
xchg
in
test
inc
inc
sub
sub
nop
xchg
leave
add
pop
cmc
fwait
sti
shll
adc
or
rorb
add
pop
out
xchg
mov
jnp
cld
push
insl
cmc
add
mov
mov
dec
sbb
push
mov
loop
mov
push
call
clc
ret
jae
mov
bound
roll
or
sub
out
mov
jne
mov
or
aam
jecxz
rol
sar
test
lar
mov
mov
mov
pop
push
and
loop
push
pop
das
cmp
dec
popf
negl
hlt
mov
aaa
ja
clc
call
js
loop
dec
xchg
mov
int3
sahf
sbb
xchg
fwait
pop
and
int
sbb
movsb
mov
bound
test
dec
out
js
lret
jmp
xchg
or
movb
shrl
adc
or
lcall
enter
call
xchg
lret
ret
hlt
pop
loop
cld
push
out
inc
mov
insb
mov
adc
int
pop
lret
pushf
adc
and
fisubs
or
scas
lret
stos
in
cld
xor
mov
inc
jbe
mov
sti
pop
sbb
iret
jmp
popa
or
andl
push
dec
push
jns
cld
sbb
push
int3
mov
fdivs
sti
loop
fbstp
repz
push
cmc
ret
mov
fucomi
and
mov
orb
jecxz
pop
stos
cltd
pop
pushf
push
popf
pop
lods
or
add
add
out
mov
insb
sub
sub
inc
clc
loop
inc
sbb
add
sti
sbb
testl
lock
stos
pop
xor
std
lret
add
cmp
cmp
fldl
cmp
scas
daa
or
xlat
sbb
push
addr16
sub
mov
hlt
mov
pop
lret
pop
in
or
loopne
pop
stc
inc
bound
or
mov
dec
mov
or
mov
cmp
xchg
rcr
jae
pop
loop
hlt
sbb
or
sub
data16
xlat
mov
fstl
xor
and
cmc
push
scas
inc
pop
or
and
cmp
mov
hlt
add
sbb
or
ret
cld
enter
in
std
jp
dec
push
cmpsb
in
inc
and
xor
pop
cmp
pop
add
xchg
in
push
popf
enter
bnd
mov
pop
sub
iret
dec
mov
movsl
xchg
loop
xorl
popa
dec
or
cmpsb
cmpsl
jnp
add
add
pusha
scas
in
or
iret
xchg
pop
push
push
or
pop
xchg
adc
mov
and
add
xchg
xchg
sub
in
jmp
imul
dec
psllw
push
add
push
jns
push
inc
mov
mov
popa
mov
daa
pop
jle
cmp
aad
loop
push
mov
mov
add
ret
inc
pop
xchg
scas
adc
pop
stos
std
lahf
and
bound
cmp
and
xlat
daa
ds
pop
ret
inc
mov
push
jae
xor
aam
loop
loopne
cmpl
loop
testl
and
fdivrp
xchg
add
fdivs
sub
lods
or
cmp
inc
and
mov
push
lea
mov
and
mov
and
mov
inc
push
push
mov
inc
fcmovnb
movsb
and
inc
xchg
sbb
arpl
or
inc
pop
and
jp
inc
es
cli
xchg
out
push
pop
out
mov
cmp
inc
js
add
not
lret
fwait
push
or
adc
jmp
xchg
xchg
xor
push
subl
nop
loop
mov
push
loop
push
lcall
and
add
push
fwait
mov
add
jl
inc
add
jo
cmp
test
stc
sub
and
les
add
inc
loop
pop
mov
cltd
cwtl
cli
add
stos
jge
insl
fstpt
inc
and
sub
mov
pop
lahf
inc
std
mov
rol
fs
pop
lahf
pop
negl
adc
arpl
rcl
xchg
jge
daa
or
ds
lods
inc
fucomi
xor
mov
push
ficomps
das
lret
xchg
inc
cmp
aas
push
xchg
clc
xorl
daa
jb
into
push
add
leave
sbb
pop
ret
and
jl
stos
inc
inc
dec
push
scas
enter
mov
dec
mov
outsb
jno
out
jbe
rolb
dec
mov
inc
into
mov
or
out
mov
test
jp
pop
inc
sub
sbb
enter
pop
popf
mov
mov
mov
cltd
dec
lcall
daa
mov
mov
or
mov
xlat
dec
sbb
or
and
lock
das
push
xchg
imul
int3
cli
popa
daa
add
lret
es
imul
and
rorb
lahf
sbb
ficoms
or
mov
adc
sbb
or
add
mov
es
nop
lods
xchg
cmp
push
les
xchg
jmp
rcrb
loop
pop
lret
or
xchg
fdivrs
mov
ja
nop
inc
xchg
pop
lret
xor
in
dec
pusha
pushf
xlat
mov
scas
add
call
out
addr16
hlt
icebp
mov
loop
xchg
adc
inc
ljmp
mov
pop
inc
xchg
inc
sub
int
out
cmpl
push
mov
and
pop
jecxz
pop
rcl
lret
mov
inc
and
jne
jecxz
imul
pop
pop
hlt
popf
push
or
and
enter
push
cwtl
lock
cmp
push
push
push
cmp
jecxz
jg
sub
jmp
in
cmp
and
push
pusha
pop
pop
xchg
pusha
add
or
jecxz
cmp
add
lods
gs
mov
mov
add
cpuid
scas
int3
push
lcall
scas
mov
dec
push
loop
and
adc
fidivrs
sbb
mov
push
push
movsb
cld
leave
mov
icebp
add
sub
shrl
int3
or
jmp
pop
add
mov
push
push
mov
dec
push
out
xchg
mov
lea
cmp
outsb
inc
es
push
arpl
scas
scas
ljmp
ds
inc
orl
lcall
add
and
adc
cmpb
enter
jge
sti
and
dec
stos
mov
mov
clc
push
add
sbb
gs
push
push
jmp
gs
mov
xor
and
rorl
cmpsl
mov
jle
cmp
and
popf
jle
jo
pop
inc
inc
push
push
std
sbb
loop
cmp
pop
cmp
pop
jp
inc
pop
sti
addb
sahf
rcrl
add
and
lea
aam
mov
inc
out
mov
cmc
int3
dec
cmp
push
sbb
xor
pop
lret
lock
test
add
or
popf
or
pop
pusha
sub
jecxz
fs
shr
jae
dec
add
bound
std
clc
lock
hlt
int
mov
push
je
into
dec
mov
or
xchg
fstpl
mov
shl
inc
cmp
jo
xor
mov
das
cmp
enter
cmp
int3
push
mov
sbb
jb
lcall
int3
pop
mov
cs
idivb
loopw
xchg
mulb
int3
cwtl
nop
cmp
sub
and
scas
in
jle
cld
push
ja
iret
cwtl
out
add
sub
pop
inc
ljmp
ret
imul
cld
orl
xchg
movsl
pop
inc
and
hlt
push
inc
jbe
outsl
popf
arpl
fstps
inc
and
insl
sahf
test
jmp
mov
cli
sub
lret
jbe
sbb
xor
repz
add
test
arpl
inc
pop
mov
mov
out
aad
push
add
icebp
sub
inc
jg
mov
out
sub
sub
xchg
sub
into
std
fdivrs
sub
sbb
notl
mov
addr16
cmpsb
adc
jb
mov
ss
mov
orb
stos
add
xchg
dec
call
icebp
cmp
xchg
mov
sbb
pop
and
sbb
filds
lret
jecxz
inc
xchg
cs
add
inc
je
outsb
ficompl
xchg
sarb
dec
add
push
hlt
repz
pop
jg
aas
daa
outsb
addb
add
xor
repnz
inc
bound
dec
dec
loopne
maxps
sub
loop
adc
shrb
std
insb
and
aas
sbb
jnp
bound
stos
movsl
jb
imul
dec
push
and
add
jecxz
dec
lock
cli
cltd
repnz
inc
lods
pushf
hlt
stos
dec
pop
xor
inc
inc
dec
aam
notb
xchg
dec
jbe
dec
ss
je
jecxz
inc
scas
fisttpl
jecxz
push
loop
lahf
test
orb
out
sub
mov
inc
clc
ss
les
mov
sbb
inc
xor
sbb
ljmp
lahf
rolb
pop
xchg
test
inc
pop
cmp
jno
pop
jle
or
loop
repz
and
add
jmp
cli
adc
jle
add
in
inc
es
mov
bnd
scas
sbb
sub
add
jno
cmpsb
pop
fwait
ss
or
add
js
addr16
out
push
movzwl
or
clc
or
xor
mov
push
add
movsb
shrb
cld
pop
popf
ret
cltd
fisttpl
ss
clc
inc
mov
sub
push
std
xor
loopne
jnp
ret
ret
fcmovu
sub
pop
push
repnz
push
nop
cld
clc
cmpsb
sub
adc
fadd
push
dec
and
adc
sub
push
sbb
xor
in
or
ljmp
sbb
push
mov
mov
cs
fcomps
xor
sub
jecxz
popa
and
hlt
fwait
cltd
xchg
rclb
stos
jnp
sbb
sub
or
shlb
stc
and
pop
insb
daa
pop
jae
and
adc
push
pop
xor
inc
aaa
add
into
gs
and
pop
jecxz
shr
sub
cmp
movsb
push
add
movsl
sbb
jno
sub
arpl
push
add
push
sbb
xor
inc
movsl
cli
xchg
jecxz
push
dec
lods
sbb
cli
sbb
inc
xchg
lret
adc
add
sbb
and
cld
rcr
mov
shl
and
xor
push
inc
pop
in
int
cmp
cltd
outsl
mov
push
fldt
ret
sub
cli
popa
dec
mov
add
aaa
punpckldq
ljmp
and
sti
incl
mov
or
push
mov
test
das
push
xchg
sbb
push
inc
mov
pop
or
xor
loop
pop
or
xor
sbb
pusha
mov
lret
pop
sbb
pushf
mov
sti
fbstp
adc
inc
fdivp
movsl
or
xchg
subl
add
push
cmc
inc
repz
or
mov
inc
cld
rorb
call
cwtl
jno
push
loope
add
rclb
les
lcall
lret
in
adc
pop
cmp
add
cmpsl
shrb
xor
fldl
repz
push
inc
daa
cmp
test
fmull
or
movsl
lret
es
jmp
dec
cli
adc
pop
xchg
or
mov
js
push
out
fisubrl
jecxz
loopne
js
sahf
dec
mov
mov
mov
dec
scas
std
add
and
add
pop
ljmp
mov
sahf
rcrb
dec
mov
pushl
push
mov
out
dec
scas
je
iret
pop
outsb
test
mov
daa
add
jecxz
push
pop
jnp
in
ret
mov
cmp
push
test
das
loopne
xlat
ret
add
mov
mov
cld
or
pop
push
scas
jl
xor
popa
hlt
pop
scas
fcomps
outsb
push
and
adc
inc
jge
sbb
lcall
insb
inc
es
test
es
add
inc
out
and
cmp
insl
fs
pop
or
mov
loop
mov
sbb
js
sub
mov
loop
jo
xchg
push
mov
inc
adc
pop
pushf
iret
mov
bound
mov
push
dec
pop
inc
loope
cli
mov
into
popf
push
sub
pop
push
xor
orb
mov
add
add
jl
inc
pop
sbb
cmp
push
push
xchg
jnp
outsl
bound
nop
push
aad
mov
mov
loopne
inc
xorb
add
sub
add
jecxz
mov
pop
std
sbbl
sub
push
aam
nopl
add
pushf
es
rorl
cmc
fcoml
inc
sbb
mov
jecxz
xchg
pop
stos
fwait
push
out
inc
dec
fwait
mov
add
sbb
xchg
bound
cmpsb
ret
or
lret
push
sbb
mov
loope
push
scas
xchg
xchg
ficomps
fwait
hlt
push
mov
adc
shlb
or
jg
xor
xchg
inc
sbbb
xchg
cmp
xchg
in
sub
std
and
mov
jo
add
loop
test
mov
mov
out
in
push
xor
xor
or
or
repz
mov
das
fiadds
mov
daa
loop
cmpsb
scas
inc
rol
or
xor
out
int
adc
or
jmp
pop
push
push
leave
sbb
and
ljmp
lcall
lret
loop
mov
mov
and
sahf
and
jmp
adcb
test
xchg
movl
pop
jb
xchg
popf
xchg
push
pop
cmp
hlt
dec
pop
inc
ljmp
lea
je
push
pop
loop
in
dec
mov
out
mov
lcall
fnstsw
movsl
jecxz
add
lret
push
popa
cs
repz
or
cld
inc
mov
sub
int3
jg
jecxz
lret
ljmp
sbb
in
pop
mov
in
jne
sbb
jp
add
mov
ljmp
push
mov
lret
sbb
vmread
xchg
mov
xchg
loop
mov
mov
das
sub
sbb
jbe
sbb
cmpsl
cmp
rcl
scas
push
push
fistpl
or
cmc
ret
pop
jle
mov
cs
dec
or
push
add
loop
jecxz
clc
mov
dec
out
push
jnp
dec
mov
fcomps
lret
lret
negb
ja
fiadds
jmp
enter
or
pop
inc
xchg
mov
and
mov
dec
inc
lods
shrl
mov
sub
inc
add
and
push
jle
push
cli
aam
call
ret
bound
orb
out
daa
cltd
jge
xor
push
jp
jle
dec
int
adcb
cmpsb
cmp
shrb
into
stc
scas
mulb
int3
mov
dec
mov
mov
lret
inc
cld
ds
lds
dec
std
leave
cmp
push
sub
xchg
cwtl
mov
popa
inc
in
dec
divps
jnp
dec
mov
xor
pop
jecxz
xor
sub
lahf
xchg
popf
clc
iret
popa
jbe
push
cmp
hlt
outsb
mov
cmp
sub
dec
cmc
xchg
push
jb
loop
mov
mov
lret
sub
fdivs
scas
and
inc
xchg
adc
icebp
popl
cld
jno
cmp
aaa
cltd
jno
cmp
lret
repz
mov
clc
aaa
cs
and
or
jecxz
popa
xor
sub
dec
scas
outsl
pop
addl
fwait
jl
inc
cmp
jge
and
popa
add
ficompl
sbb
sbb
pop
dec
popl
dec
and
into
insl
add
aas
inc
mov
jg
ret
fwait
shl
ret
ret
fwait
imul
pop
dec
mov
lahf
mov
jmp
lret
cmp
out
inc
push
rep
outsl
loop
dec
pushf
dec
push
clc
bound
push
arpl
add
jne
or
pop
lcall
add
add
enter
lock
xchg
mov
fstl
cld
shl
movsb
add
jo
pop
xchg
das
pop
mov
cwtl
cmpsb
clc
test
jecxz
and
or
ds
push
and
test
jge
outsl
decb
ret
push
cld
mov
insl
fninit
push
inc
sub
lahf
lret
test
lods
shrb
ljmp
cld
clc
nop
icebp
mov
stos
mov
repz
push
fadd
adc
jo
pop
xchg
mov
jns
xchg
bound
and
loopne
inc
and
jecxz
cli
pop
gs
inc
lret
lock
out
icebp
out
and
fbld
jecxz
mov
xorb
lods
sub
pop
cmp
mov
sbbb
sbb
in
cmp
and
mov
cmp
jecxz
fiaddl
add
add
aam
cltd
repz
inc
pushf
les
iret
sbb
sub
mov
mov
mov
lret
stos
cmp
jae
mov
push
aad
aad
ljmp
cwtl
add
decb
inc
cli
pop
push
into
push
add
cld
lret
lahf
xchg
roll
and
repnz
pop
out
sbb
lea
std
dec
ja
fs
push
xchg
sahf
jl
daa
lcall
or
arpl
jecxz
cwtl
mov
xor
mov
aad
insb
push
int3
fstpt
out
nop
test
xchg
lret
sub
cli
hlt
iret
mov
lret
enter
add
dec
jne
pop
lret
inc
lods
adc
and
inc
and
dec
jnp
jne
sub
jne
inc
stc
out
mov
sbb
sarl
and
cmc
and
mov
cltd
or
pop
outsl
push
adcl
dec
jp
push
jnp
fiadds
push
pop
push
insl
sbb
mov
cmpsb
pushf
xchg
mov
or
inc
fsubrs
pop
jns
mov
or
jecxz
lock
lcall
mov
cli
xor
popf
movsl
cs
in
mov
dec
loop
gs
adc
cmpsb
out
out
cmp
mov
inc
or
mov
lds
movaps
mov
bnd
enter
arpl
xchg
icebp
mov
pop
or
bound
mov
repnz
ficomps
dec
movsl
std
call
imul
loope
mov
out
sbb
in
jecxz
and
mov
test
jo
lret
sub
push
and
mov
push
outsb
push
inc
ss
add
or
test
mov
into
sub
bound
addb
jle
sub
xchg
loopne
in
dec
mov
outsl
insb
fxch
nop
add
mov
mov
stos
pop
pop
sahf
mov
shll
bound
and
pusha
jmp
sub
pusha
iret
pop
loop
into
imul
sub
and
iret
xor
add
sarb
pushf
ljmp
pop
pop
mov
cld
push
pop
jl
hlt
cmp
enter
ljmp
xrelease
inc
pushf
mov
mov
dec
dec
cmp
inc
push
push
bound
test
mov
mov
mov
pop
in
or
add
div
lret
fstpl
out
loopne
sbb
cmpsl
or
imul
lahf
icebp
lret
xchg
fisttps
mov
lods
outsb
popa
ja
ficomps
addb
mov
js
mov
mov
das
cwtl
adc
xlat
sbb
in
outsl
movsl
mov
minps
loope
and
in
push
xor
movsb
cwtl
and
mov
push
and
sbb
xchg
xor
push
adc
lds
xorl
push
bound
fsub
jp
pushf
bound
push
incb
adc
pop
mov
dec
adc
sub
ffreep
xor
mov
mov
cmp
pop
pop
mov
std
dec
sbb
sub
push
jle
imul
sbb
mov
ret
loop
cmp
adc
sbb
xor
pushf
pop
hlt
ja
xor
adc
mov
lcall
outsb
cli
les
dec
out
out
mov
sub
inc
out
sbb
cli
insl
popf
sbb
add
push
dec
and
sti
or
push
aaa
mov
clc
cmp
mov
jp
mov
scas
and
in
add
movsl
adc
mov
mov
or
push
sub
sbb
or
and
flds
jnp
add
mov
jp
repz
test
pop
negb
iret
leave
mov
push
push
pop
scas
jbe
or
add
push
lock
outsb
in
and
lahf
jb
jle
arpl
or
mov
pusha
mov
sub
lret
sub
cltd
ficompl
pop
lcall
out
ficomps
adc
add
or
mov
ret
femms
sub
adc
sbb
mov
inc
adc
and
nop
jb
mov
es
adc
sbbb
dec
ficoms
push
add
push
inc
and
mov
cmpsb
mov
cmp
add
scas
add
add
jp
out
lods
cs
mov
or
loope
add
sarl
repnz
sub
bound
sbb
push
or
cmp
sbb
into
pop
dec
inc
pop
adc
ja
add
lret
out
and
jmp
dec
add
push
adc
inc
dec
sub
jb
inc
negb
into
and
or
dec
in
mov
imul
fisubrl
sahf
dec
mov
dec
inc
jmp
or
test
rcrb
dec
jb
dec
sub
xchg
orb
inc
adc
dec
push
sub
inc
or
push
bound
push
lods
mov
orb
ret
add
mov
pusha
mov
mov
and
sub
pusha
mov
push
scas
sub
push
test
outsb
jp
andb
stos
mov
movsb
fwait
pop
cmp
and
pop
or
setge
enter
test
or
frstor
daa
dec
lret
jae
cmp
les
clc
fnsave
dec
lret
jl
adc
pop
add
shl
in
das
add
das
dec
or
jecxz
cwtl
mov
loope
mov
sbb
clc
cmpsb
add
dec
cld
mov
mov
sbb
out
adcl
std
mov
orl
sub
pop
int3
nop
mov
add
xor
fcomp
mov
dec
mov
and
add
sub
lock
mov
jbe
popf
adc
push
jmp
dec
add
out
xchg
dec
clc
mov
cmp
sub
jae
or
add
lock
loope
std
xchg
pop
xchg
xchg
repnz
aaa
cwtl
cli
cmp
inc
jo
andb
sub
xor
mov
jns
mov
add
cli
xor
or
mov
adc
pop
mov
jecxz
repz
mov
loop
xchg
fwait
xchg
outsb
push
pop
loop
ljmp
fstpl
orl
cld
int3
ja
push
enter
rorb
dec
jecxz
mov
loopne
push
xchg
cld
hlt
add
hlt
into
inc
jge
inc
mov
pop
push
mov
jl
iret
dec
or
loope
jae
ja
fcomp
mulb
testb
fs
test
pusha
adc
inc
sub
loop
or
into
dec
mov
data16
xchg
mov
stos
fistps
insb
inc
ja
sub
popa
sbb
fs
lock
bound
fidivs
xchg
sub
test
ss
enter
ret
lds
cmpsb
jl
or
jge
mulb
je
mov
push
hlt
shrb
fldt
sarb
das
mov
sbb
jle
and
enter
xor
cmp
pop
push
inc
iret
shlb
mov
or
jecxz
inc
in
pop
mov
pop
sub
mov
push
hlt
repnz
push
mull
adc
cmp
les
pop
scas
ret
cmpb
addl
xor
fildl
jecxz
mov
jg
pop
or
xchg
xor
shlb
lret
fisubrl
push
data16
in
xlat
push
andnps
xchg
loope
xchg
pushf
std
mov
sbb
jo
mov
add
mov
cmp
fmull
out
or
lods
stos
inc
leave
imul
insl
push
jmp
xchg
mov
out
cwtl
lahf
sbb
pop
sub
add
adc
fiaddl
rorb
adc
mov
pop
leave
out
fsubp
push
mov
cmc
jle
fdivrs
fidivs
lea
ret
and
popl
dec
imul
addl
and
loope
add
xchg
adc
cmp
push
inc
and
in
lock
cmp
add
push
cld
insl
adc
js
or
xchg
rclb
test
mov
cs
dec
add
xorb
sbb
add
and
mull
lret
push
lods
cmp
xor
fsub
push
aad
sbb
adc
mov
xor
push
outsl
jb
adc
les
inc
bound
std
adc
cmp
and
pusha
fisubrl
into
xchg
add
cmp
loop
stos
mov
insb
push
mov
inc
xchg
sbb
lock
leave
cwtl
mov
mov
jg
aam
inc
push
sub
inc
push
inc
pop
mov
inc
fldt
das
incb
xchg
decb
sub
loop
subb
mov
ficoms
pop
or
lret
bound
xchg
inc
mov
aad
pop
xor
xor
or
and
push
jae
inc
xchg
jo
mov
inc
call
push
inc
inc
bound
xor
bound
test
push
jmp
mov
cmp
mulb
lods
in
xchg
lea
hlt
aad
out
jle
cwtl
xor
dec
push
inc
rol
dec
ljmp
jbe
cmp
or
out
imul
nop
inc
cmp
leave
add
sbb
xchg
enter
or
outsl
pop
pop
orb
insb
call
inc
pop
pop
mov
ljmp
xor
not
cwtl
push
fsubp
inc
sub
dec
into
or
inc
jecxz
xlat
adc
popf
sbb
add
mov
push
xchg
nop
pusha
cwtl
ljmp
fwait
xchg
adc
cmpsl
pop
mov
or
sbb
xchg
jae
and
out
lods
or
adc
mov
add
xchg
mov
mov
sbb
fcmovnbe
xorl
pop
xchg
mov
cwtl
shlb
pop
andl
in
sbb
xor
sbb
addr16
sbb
rorl
mov
jecxz
adc
inc
icebp
imul
or
and
inc
ss
rorb
lahf
je
mov
inc
testb
or
bound
push
mov
inc
dec
ucomiss
adc
repz
xor
pop
hlt
and
xor
mov
xor
dec
fcoml
push
jmp
in
jl
xor
ret
frstor
dec
lcall
mov
iret
add
jae
xchg
out
in
sbb
jecxz
sbb
std
movsl
adc
add
push
dec
xlat
or
std
sbb
mov
mov
push
repz
mov
cs
or
stc
hlt
lret
xor
add
or
out
or
jb
xor
icebp
in
pmaddwd
gs
jnp
add
mov
mov
push
outsl
jge
loopne
idiv
mov
lahf
and
lret
in
loop
outsb
lds
popa
add
mov
mov
xor
mov
es
roll
or
mov
aas
hlt
push
xchg
clc
cld
adc
push
pop
lahf
push
outsl
dec
les
outsl
shrl
and
ficompl
mov
test
andl
xchg
mov
into
pop
mov
ja
xor
outsl
mov
dec
jb
dec
or
push
push
mov
push
inc
jg
notb
jg
xchg
sbb
sbb
mov
pop
inc
in
cmp
sub
inc
stos
push
sahf
pop
add
add
mov
lea
jne
into
stc
push
loop
ret
cmp
lcall
sbb
dec
inc
mov
pusha
xchg
mov
pop
in
mov
cmp
fbld
xchg
xchg
mov
pop
iret
popf
push
mov
xor
add
sarl
fwait
dec
add
int3
pop
repz
testb
shl
sub
filds
pushl
fcomip
mov
push
fcomi
lods
push
pop
adc
xor
xor
xor
pop
arpl
in
rolb
xchg
pop
aaa
cmpsb
aam
dec
jl
pop
mov
movl
outsl
fldcw
inc
pop
mov
mov
lret
js
popl
mov
loop
jle
fiadds
mov
jecxz
inc
dec
mov
cmp
cmpsb
xor
add
sahf
sub
adc
ficoml
mov
mov
push
out
ds
and
xchg
add
insl
push
outsb
stc
mov
jecxz
in
jmp
repnz
pushf
fbld
jg
adc
inc
mov
stos
cmpsl
loop
leave
cs
out
aam
jnp
push
inc
int3
add
xor
cmp
mov
pop
mov
mov
sub
andl
add
in
stos
stos
ret
iret
pop
lods
or
sub
sti
pop
sub
sbb
call
rolb
daa
icebp
repnz
mov
cmp
add
push
pop
movsb
adcb
xorb
pop
iret
push
xchg
ss
dec
inc
cltd
jne
clc
leave
lcall
aam
add
aas
dec
push
inc
inc
test
cmp
sbb
cmpsl
mov
xor
sarl
push
jl
lret
stos
test
loop
movsb
xchg
shll
mov
mov
push
gs
and
popa
lock
leave
jmp
fcomp
and
iret
jo
sbb
cmp
in
pop
or
ds
mov
insb
lods
jl
outsb
pop
leave
inc
out
popf
xor
and
icebp
and
xchg
mull
cmp
xor
pop
and
xchg
fcmovnbe
and
jmp
scas
out
xchg
lods
stos
std
inc
fcmovnb
je
cmp
hlt
dec
cmp
cmp
and
sbb
dec
rol
and
leave
mov
add
cmp
pusha
xor
dec
adc
jecxz
jne
xor
pause
pop
add
arpl
mov
adc
sbb
aad
or
xor
xor
mov
icebp
test
adc
lret
icebp
and
sub
fildl
ljmp
in
dec
sbb
fidivs
jno
xchg
jecxz
repnz
clc
vcvttps2dq
je
sahf
xchg
mov
mov
into
inc
rcrb
push
mov
div
arpl
loop
jecxz
insl
mov
repz
pushf
cs
add
or
push
jp
das
fadd
jp
add
rolb
inc
xchg
cli
push
and
mov
movb
out
loop
sti
popf
cmpsb
outsb
pop
fmul
mov
and
shll
add
mov
je
ret
pop
xorb
rorl
and
lret
mov
push
shrb
push
xorl
push
push
int3
dec
push
jo
sub
push
fdivl
rcrb
or
xor
popa
loop
jne
mov
dec
rclb
sub
sahf
cwtl
addr16
cmp
sidtl
std
sbb
loop
push
sbb
pop
add
fsubrl
add
stc
xor
pop
in
hlt
fwait
add
inc
sarb
pop
imul
inc
xlat
lcall
sbb
adc
out
xchg
push
bound
push
sub
andb
leave
push
fwait
and
out
leave
push
gs
xchg
loop
sti
add
cmpsl
bound
jo
cmp
pop
sub
push
inc
in
movsb
js
repz
loop
fsubr
mov
hlt
sbb
sbb
test
adc
das
jmp
ja
sbbb
xchg
mov
push
scas
outsl
lret
push
mov
cmpsb
fldl
loop
movsb
or
rcrb
lret
push
inc
or
push
add
clc
rol
ret
dec
pop
jecxz
das
xchg
sub
arpl
insb
mov
pop
sbb
jg
call
sbb
sub
and
cmpsl
dec
pushf
ret
sub
test
or
cmpsl
cli
aas
popf
jl
loope
repz
sahf
dec
inc
fists
xor
dec
aaa
stos
or
repz
aad
and
aad
mov
outsl
mov
pushf
pusha
imul
sbb
pop
pop
jb
outsb
or
andl
imul
pop
xchg
push
repnz
lock
mov
push
inc
shl
xor
repnz
push
or
xor
and
push
inc
in
cmp
jae
ret
pop
sub
stos
ds
add
jmp
push
and
repz
dec
inc
or
xchg
xchg
flds
fcomi
hlt
jmp
jecxz
and
mov
fidivs
stc
dec
add
lahf
sti
adc
loop
and
mov
cmp
scas
add
and
stc
jne
mov
mov
outsb
loop
pop
decl
jmp
movsl
repz
enter
lock
sbb
rcrb
bound
xchg
ss
dec
jns
adcl
pop
inc
xor
dec
xchg
mov
push
test
push
out
ds
mov
mov
push
mov
pop
fldl
pop
outsl
mov
rol
int3
sub
xchg
xchg
xlat
lahf
pop
sbb
sbb
fdivs
cld
add
out
or
leave
mov
clc
mov
lahf
lods
jp
fistl
iret
in
sbb
mov
adc
test
xchg
xchg
daa
je
dec
loop
stos
jns
pop
cmp
imul
loop
push
test
pop
dec
mov
sbb
cmpsl
rcrb
mov
fidivl
bound
es
cmp
add
and
push
jecxz
mov
testb
js
int
mov
lea
sbb
cmc
dec
ret
lea
popa
aam
xchg
out
lods
das
xor
lcall
ja
out
daa
sbb
pushl
enter
jne
push
and
sbb
sub
nop
int3
xchg
mov
dec
mov
xchg
xor
sbb
add
mov
or
jns
xor
jmp
mov
popw
cmp
andb
xor
mov
sarb
sub
inc
xchg
data16
push
les
shl
mov
repz
mov
add
loop
lods
pop
sti
cmc
cmp
push
and
aad
lret
fisubrl
insb
and
inc
clc
pop
clc
popf
punpckhdq
and
jnp
lret
sarl
std
add
jg
mov
out
sbb
pop
test
inc
out
add
xlat
ffreep
lock
loopne
int3
pop
loop
fwait
pushf
sbb
mov
leave
mov
fdivrl
rorb
test
push
inc
mov
mov
stos
jo
ds
pop
lea
sbb
imul
dec
jns
je
fnstcw
sub
mov
out
cmpsl
ss
or
mov
fimuls
bound
mov
inc
stc
test
push
ljmp
pop
mov
dec
adc
dec
cwtl
mov
push
dec
sub
mov
inc
movsl
or
mov
sub
and
mov
jmp
xor
xor
mov
rorl
out
dec
mov
inc
mov
arpl
fdivl
adc
iret
sti
fmull
iret
sbb
lock
lahf
and
cmp
cmp
push
lock
icebp
fnclex
clc
sti
mov
dec
stos
or
imul
cmp
out
dec
xor
inc
into
mov
ficoml
jnp
cs
pop
loop
cld
iret
cmpsl
std
fdiv
jl
add
mov
pop
loop
adc
xchg
andb
adc
sub
sahf
insb
mov
mov
jge
insl
and
or
inc
das
mov
cltd
add
push
lock
je
mov
mov
mov
jnp
enter
sub
shrb
ljmp
sub
cmpl
push
outsl
test
cmp
sub
xlat
dec
adc
fdivs
icebp
mov
cs
push
push
sub
pop
lahf
mov
les
aas
fsubrl
nop
inc
add
daa
loop
mov
das
fcmove
call
xchg
or
lock
push
jb
add
idiv
jle
addb
add
je
mov
rolb
les
push
xor
sbb
test
std
push
adc
repnz
aaa
push
lret
aad
adc
inc
nop
sbbb
push
or
mov
fstl
push
mov
and
sbb
adc
add
fmull
sub
inc
adc
xor
push
mov
or
mov
cs
or
dec
xchg
ret
cmpsl
scas
and
jecxz
cmp
xlat
add
loope
and
and
int3
add
dec
adc
sbb
jbe
data16
rsm
push
push
subb
adc
enter
dec
and
loop
add
in
ret
sub
mov
scas
jbe
push
add
push
cmpsb
dec
cmp
ret
sbb
shr
scas
xor
nop
repz
pop
push
add
mov
sbb
bound
jne
enter
data16
cmp
add
jp
scas
dec
jbe
cmp
add
mov
push
push
lcall
ret
inc
sub
mov
loope
stos
ljmp
mov
cs
repz
shlb
lret
int3
inc
es
mov
dec
dec
push
add
outsb
pop
and
fcomps
dec
mov
loop
or
and
cmp
pop
push
xor
cli
inc
push
lcall
fimull
dec
sbb
inc
jno
ror
inc
add
loop
decb
into
outsb
mov
cmpsb
dec
sbb
add
dec
push
cs
xchg
xchg
lcall
xchg
cmp
dec
pop
pop
cs
ljmp
bound
ret
adc
mov
mov
mov
test
cmp
and
mov
cs
xchg
and
jae
jecxz
dec
mov
mov
loop
mov
data16
xchg
sbb
mov
ds
cmp
mov
out
lcall
jne
in
std
int
cmpsb
in
fwait
xor
aaa
add
jecxz
push
adc
xorl
jg
cmp
test
lds
mov
cli
pop
into
mov
fsub
mov
xchg
loop
inc
mov
iret
sbb
orb
loop
jnp
lret
and
cs
sub
std
imull
inc
pop
xorl
push
scas
xor
adc
hlt
jae
dec
jecxz
or
push
add
push
mov
inc
jle
in
repz
add
rorl
jmp
mov
inc
loop
inc
xor
in
iret
pop
mov
fstpt
xor
loop
pop
mov
add
test
stos
xor
loop
add
sbb
pushf
mov
jl
jb
daa
fimuls
pop
sbb
mov
or
fmull
out
loopne
into
dec
pusha
ficoms
sub
add
dec
nop
mov
fsubs
add
mov
ds
sbb
pop
int3
jl
outsb
out
lock
push
loope
lcall
mov
in
ret
jecxz
jns
fbstp
dec
push
cmp
js
sbb
daa
and
pop
sbbl
xchg
cmp
aam
push
mov
ss
les
mov
test
sbb
fistps
rcrb
xchg
rcrl
fisubrs
stc
mov
mov
jnp
or
xchg
fdiv
sub
xor
leave
xchg
inc
cmc
push
popa
inc
popf
enter
push
mov
fdivs
pop
mov
mov
in
mov
in
loop
pusha
mov
mov
pop
ret
xchg
pop
test
decl
movsl
divb
ss
and
fmul
cli
repz
mov
xor
es
mov
mov
insb
mov
in
inc
xchg
loopne
out
cwtl
fcompl
lea
mov
mov
add
push
sub
xor
outsb
jg
push
loope
inc
push
dec
pop
xchg
mov
xor
scas
and
push
xchg
or
bound
test
jecxz
push
test
mov
dec
lcall
add
pushf
pop
loop
xchg
sarb
jle
je
jecxz
or
sbb
mov
icebp
adc
or
or
loopne
inc
mov
sbb
cwtl
dec
xor
incl
xchg
aaa
push
out
lods
arpl
fistl
cmp
mov
pop
xchg
mov
js
dec
test
js
jns
pop
sbb
push
dec
loopne
ret
push
sub
mov
add
shrl
scas
pop
sbb
mov
xlat
aad
cmp
sti
pop
test
leave
pcmpeqw
mov
inc
enter
and
flds
mov
jns
call
mov
mov
mov
lahf
insb
outsb
lahf
jnp
mov
sahf
fsubrs
inc
scas
sub
dec
in
test
loop
sub
lret
dec
mov
cmp
lahf
lcall
sub
loopne
mov
jecxz
mov
lock
jmp
loop
adc
jns
push
xchg
lcall
psadbw
repz
insb
hlt
adc
xchg
mov
clc
scas
mov
sbb
lcall
fdivrl
add
aas
jl
cltd
cld
mov
popf
jae
scas
jl
mov
adc
dec
or
jl
xchg
ds
icebp
cmp
jecxz
fmuls
scas
adc
cli
xchg
sbb
pop
bound
mov
ds
inc
jnp
inc
inc
pop
int
in
out
dec
mov
add
xor
mov
mov
jbe
jecxz
cmpsb
mov
mov
movsl
adc
mov
sbb
jo
cmp
lods
push
mov
jno
xchg
cld
iret
dec
rorl
dec
jecxz
jmp
pop
xor
push
filds
adc
int3
sbb
fwait
pop
mov
aaa
and
mov
int3
and
adc
int
or
push
iret
xchg
mov
jg
mov
pop
pop
loop
mov
sbb
lods
in
sub
outsb
enter
pop
insb
or
popa
push
lea
cmp
enter
hlt
clc
lcall
shlb
xor
push
addb
loop
loopne
inc
outsl
movsb
lret
xchg
fadds
fiadds
enter
mov
stos
adc
imul
mov
jns
push
pushf
add
imul
bound
lods
jne
mov
mov
pop
cltd
sbb
jecxz
xor
popa
xchg
pop
int3
push
movsl
push
xchg
sbb
outsl
imul
clc
xchg
push
fcmovbe
dec
pop
sbb
and
sub
out
lret
shll
ds
and
in
xchg
sub
cwtl
inc
mov
inc
mov
call
ret
repz
rolb
fnsave
popf
lds
xchg
push
call
pop
sub
adc
sbb
cmp
lods
imul
aas
jo
out
mov
jecxz
jne
add
mov
subl
add
into
lcall
sbb
or
outsl
das
std
scas
pop
fsubrs
add
jno
sub
xor
adc
scas
fimuls
mov
mov
mov
mov
sahf
and
lret
and
inc
mov
mov
nop
iret
and
leave
mov
sti
andl
push
pop
add
xor
fcmovbe
mov
mov
test
mull
add
add
sub
cmp
in
or
rorb
mov
sub
loop
inc
outsb
xchg
inc
icebp
cmpsb
in
pop
mov
fisubs
mov
xor
mov
jb
shlb
clc
push
mov
add
mov
iret
pop
int
jnp
int
sub
in
ds
mov
push
sbb
pop
fdiv
push
pop
or
mov
push
shl
adc
aas
clc
mov
sbb
pop
out
fdivrs
push
bound
mov
fildll
leave
pop
jns
sub
fs
incl
push
test
subb
push
and
mov
xchg
loope
xchg
xchg
xchg
add
dec
adc
jecxz
jl
inc
ret
jmp
js
push
mov
cmpsb
outsb
lret
sub
adc
mov
ret
add
imul
mov
cmp
ja
push
loope
dec
push
aam
repz
test
aas
push
fistps
loop
dec
inc
dec
push
sbbb
dec
xchg
imul
out
fdivl
sti
rorl
xchg
bound
pop
pop
hlt
insl
sub
jg
pop
and
or
or
push
push
dec
push
cld
sbb
or
clc
das
sbb
mov
pop
nop
cmp
ret
imul
jbe
movsl
fdivrs
and
lock
push
inc
pop
and
mov
jns
outsl
int
push
adc
mov
clc
push
mov
lds
hlt
pop
loopne
in
sahf
push
repnz
fxch
lret
les
insb
add
mov
cwtl
cs
jbe
jne
xor
sarl
and
int3
inc
hlt
lret
add
in
scas
mov
pop
bound
pop
inc
pop
mov
sbb
ficompl
sub
mov
std
and
mov
fisubrs
es
mov
sbb
ds
mov
int3
js
dec
mov
or
inc
lcall
mov
stc
fisubs
add
loop
dec
cmp
orb
les
int
or
pop
jle
les
test
pusha
add
lahf
push
in
fcoml
pop
aaa
jge
bnd
out
fildll
clc
int3
sahf
dec
xor
lcall
dec
dec
repnz
data16
bound
jg
cmp
stos
mov
mov
xchg
in
inc
push
bound
cmp
jmp
ret
imul
scas
lcall
into
test
sub
mov
sub
stc
mov
inc
mov
loop
fwait
dec
mov
jnp
in
push
es
negb
jae
or
lret
xchg
in
or
mov
lods
bound
push
jl
shll
aaa
cwtl
and
or
nop
lret
mov
xchg
rolb
ret
push
mov
dec
adc
hlt
bound
fmuls
inc
push
ret
mov
repz
xchg
fsubr
inc
subb
dec
lret
out
icebp
leave
mov
jge
xor
out
insb
sbb
inc
ss
mov
scas
aam
int3
int
mov
les
pop
push
mov
jecxz
cmp
mov
shlb
lods
ja
shll
xchg
inc
loop
cwtl
loop
pop
repz
ret
insb
in
lret
stos
ja
inc
enter
test
cwtl
movsl
daa
sub
outsb
aad
sub
pop
cld
xor
add
pcmpeqw
insl
or
loop
cmp
pop
adc
add
or
and
push
pop
mov
push
mov
lret
pop
hlt
scas
sub
imul
pop
mov
fstpl
sub
push
adc
ret
loope
sbb
dec
adc
jo
xor
fdivrl
cmp
pop
xorl
sub
add
pop
outsb
in
push
cmp
push
clts
sub
je
push
mov
cmp
push
jp
jle
inc
mov
ja
iret
sbb
cmc
inc
inc
pushl
fwait
inc
push
push
add
pop
mov
push
sbb
fwait
mov
in
dec
dec
clc
xchg
sbb
or
dec
cli
sbb
push
inc
add
cmp
sarb
mov
fidivs
xor
xor
bound
xor
xor
sahf
ds
and
aam
adc
inc
adc
inc
sbb
pop
dec
pop
inc
sahf
data16
cmp
lcall
sub
dec
ret
stos
inc
push
pushf
push
inc
sub
add
xchg
push
adc
pop
or
mov
push
ret
fsubrs
cmp
orl
xchg
inc
adc
and
inc
dec
and
add
push
pop
pusha
add
inc
or
lcall
imulb
ret
push
psubd
pop
mov
nop
cli
dec
or
bound
mov
test
inc
mov
mov
pop
movb
das
push
sbb
fwait
inc
add
mov
scas
sahf
and
xchg
scas
pop
test
inc
mov
mov
push
pop
dec
adc
mov
push
sbbb
sub
add
or
mov
cmp
xor
popa
mov
push
jg
idivb
jecxz
mov
jae
mov
or
pop
jecxz
shll
mov
das
and
push
mov
pop
xchg
scas
mov
shl
and
jl
daa
mov
ljmp
andb
sbb
cld
pushf
jecxz
repnz
sub
loop
or
bound
dec
fmull
cltd
shll
adc
mov
stos
nop
or
jle
ret
pop
mov
inc
mov
sbbb
outsl
add
sub
in
jnp
add
xchg
repz
loope
jle
out
jecxz
into
xor
sub
jae
sbb
inc
hlt
mov
xor
mov
test
ja
mov
imul
push
dec
inc
adc
push
ja
push
enter
fdivs
in
sahf
add
rolb
push
rcrb
add
cmpsb
call
push
cs
inc
repnz
jecxz
inc
mov
push
pop
jg
inc
or
js
sub
scas
mov
out
sbb
cmp
sub
push
and
das
xchg
fidivl
loop
bound
iret
lret
adc
and
jno
and
dec
pop
int3
les
sbb
lret
lock
add
std
int3
ja
imulb
mov
mov
xchg
push
inc
push
jl
insl
iret
push
and
ja
cmp
sbb
mov
mov
add
mov
aad
int3
mov
in
jne
jo
add
out
daa
dec
xchg
in
gs
sub
pop
sbb
pavgw
cs
ds
add
stc
mov
cmp
into
inc
and
es
xchg
nop
push
lcall
add
dec
mov
call
ret
subl
out
jmp
sahf
push
aad
or
hlt
jl
or
xor
sbb
inc
or
xor
lcall
ljmp
jecxz
cmp
add
add
mov
push
add
mov
hlt
cwtl
insb
cmc
loop
call
pop
jecxz
cs
push
push
jnp
lods
or
push
mov
cld
ss
in
inc
int3
mov
insl
loop
push
outsl
pop
xor
arpl
sbb
sub
pop
inc
xor
cld
mov
outsb
add
fisubrl
push
imul
mov
pop
mov
nop
xchg
adc
dec
pop
jecxz
push
out
xchg
sub
pop
adc
fsubrl
inc
xor
inc
fidivs
loop
repnz
xchg
cmp
faddp
lock
paddd
xchg
std
xor
xchg
repnz
sub
cli
xchg
ret
mov
xor
icebp
dec
in
popl
ds
cltd
jge
shlb
or
lock
rorl
jbe
or
sub
mov
sub
stos
adc
jl
xchg
loop
mov
fwait
push
and
jecxz
xor
call
std
inc
pop
sbb
jl
mov
shrl
sbb
inc
jmp
bound
inc
xchg
inc
inc
xchg
jno
leave
bnd
lret
mov
mov
jne
jle
enter
iret
sub
pop
add
xorl
ret
enter
inc
xchg
add
fwait
lds
dec
push
andb
jmp
push
lret
fcomps
sbb
hlt
sahf
add
aas
jp
jae
sbb
push
int3
push
in
inc
cli
sbb
adc
dec
loop
mov
mov
fidivl
ss
mov
dec
mov
hlt
dec
lret
popa
frstor
roll
dec
fistpl
add
pop
cmp
fsub
xchg
orb
repnz
push
dec
outsb
mov
loop
mov
iret
divl
cwtl
mov
xchg
xchg
push
adc
loop
xchg
lret
or
shrl
rolb
push
inc
and
int3
or
lock
lods
adc
enter
stos
jl
cltd
cmp
lods
cli
xor
push
mov
add
adc
jb
mov
sti
sbb
ljmp
repnz
fsub
xchg
ficomps
call
adc
ret
mov
mov
xchg
inc
loopne
adc
arpl
iret
inc
enter
pop
pop
xchg
xchg
loop
inc
popa
and
inc
push
push
in
xchg
imul
fsub
shll
imul
and
and
lock
clc
dec
mov
inc
aad
inc
mov
push
sbb
inc
mov
clc
jns
rcll
xchg
fs
js
test
or
loopne
jecxz
pop
pusha
cs
enter
sahf
mov
nop
push
int3
std
pop
add
push
push
bound
sub
xchg
sbb
add
mov
stos
cltd
mov
enter
or
xchg
bound
sbb
dec
pop
stos
mov
int
jl
stos
mov
add
mov
bound
sbb
aam
bound
pop
mov
pop
xor
inc
adc
out
scas
lret
aam
cmp
sbb
popf
mov
jbe
ret
aad
cmp
sub
roll
mov
je
repnz
cmp
loop
sti
insb
xor
adc
inc
repnz
jl
shll
jge
and
shlb
fcmove
jle
out
in
mov
push
and
dec
cltd
roll
push
xor
cmpsb
pop
in
adc
repnz
cltd
sub
lock
add
clc
lret
mov
lock
dec
cmpsl
shl
punpckldq
jno
adc
mov
add
mov
filds
push
jecxz
out
mov
mov
sbb
clc
bound
push
enter
sbbl
add
lods
pop
jno
insb
inc
push
dec
shl
cmp
int3
push
lret
in
sbb
and
fmuls
enter
push
fimuls
dec
and
mov
add
pop
jecxz
popf
add
mov
mov
xorl
outsb
cmc
sub
fucomi
mov
jle
leave
lock
icebp
and
leave
cmp
je
push
xlat
jbe
and
enter
ret
jns
cmp
imul
dec
jle
dec
mov
fsub
xor
pushf
jbe
cmpsb
sub
mov
mov
cmp
pop
pop
cs
cmp
loop
hlt
movsl
fiadds
jbe
xor
pushf
mov
jne
lods
sub
adc
and
andl
cmp
cli
loop
cmp
sbb
sub
and
aam
enter
pop
sti
dec
inc
push
mov
sbbl
push
scas
fsubp
cmp
jecxz
cmpsl
jae
das
push
or
insl
inc
sbb
cwtl
mov
mov
add
pop
loopne
push
xchg
test
and
push
sbb
sbb
add
xorl
adc
sarb
loop
xchg
xchg
pushl
enter
scas
leave
mov
ret
aam
lcall
mov
in
or
dec
and
lahf
addr16
xor
xor
nop
push
xor
fiaddl
fisubs
jle
cwtl
push
scas
inc
lahf
jg
loop
jo
mov
insb
xchg
loope
outsb
mov
mov
push
ds
cmpsb
jg
in
xchg
sbb
mov
in
push
add
test
leave
inc
pop
ud0
negl
mov
pop
and
lret
mov
cmp
mov
fmuls
or
mov
mov
mov
adc
dec
cmp
jecxz
in
clc
dec
jo
rclb
jo
adc
xchg
hlt
mov
dec
jne
xorb
mov
xor
dec
fcmovnu
int3
xchg
push
cmp
loop
icebp
dec
outsb
lock
loop
inc
les
cmp
insb
ret
sbb
jno
popf
xchg
push
mov
push
or
lret
and
pop
lret
mov
shlb
enter
xchg
insb
repnz
mov
mov
xchg
pop
mov
mov
mov
mov
loope
xchg
out
outsl
xor
jne
jle
scas
lcall
std
fildll
es
mov
scas
push
xor
or
insb
xor
in
inc
sbbb
inc
dec
mov
or
fimull
mov
push
clc
lcall
push
call
mov
in
cmp
push
sahf
mov
testl
orw
mov
sti
into
fdivp
enter
xor
jg
or
add
fmuls
cmp
cmc
sub
repnz
mov
mov
mov
bound
jmp
pop
sbb
insl
dec
push
xor
xchg
xchg
gs
mov
ljmp
add
sbb
scas
test
sbb
or
add
pop
jge
das
or
adc
adc
mov
cmp
pop
add
mov
mov
loop
xchg
bound
or
cmp
mov
leave
bound
mov
int3
add
add
sbb
push
cmp
inc
xor
sbb
inc
dec
enter
jnp
ljmp
push
call
sbb
lret
rolb
vpandn
and
xlat
lock
xor
fdivl
and
jle
dec
das
std
sub
clc
xchg
out
ljmp
inc
and
mov
sub
lret
xor
mov
bound
jl
pop
mull
pop
lcall
xchg
and
fistpll
shrb
shrl
fstps
dec
dec
fidivs
js
cld
mov
ret
cmpsl
push
inc
mov
jne
mov
sub
fwait
jno
in
or
bound
jp
filds
rol
xlat
adc
lret
hlt
fsubs
ds
insb
mov
repz
jne
icebp
xchg
ret
jg
sbb
stc
and
movsb
cmp
pop
pop
xchg
and
and
xor
lods
jg
outsb
inc
mov
xlat
pushf
push
movsb
add
pcmpeqw
out
add
dec
loope
clc
pop
stos
mov
cltd
push
aam
out
pop
enter
mov
loop
pop
xchg
mov
add
mov
pop
xlat
lcall
push
popa
jp
inc
cmpsb
pop
pop
test
imulb
fadds
fisttpl
mov
std
jg
adc
pop
push
pop
xor
xor
cmpsl
lahf
rcll
inc
scas
test
xor
rorb
fisttpll
bound
mov
and
pop
add
jle
fsubrs
std
jg
add
outsb
in
inc
xchg
push
xchg
movsl
jbe
imul
xlat
and
imul
pop
jo
sarb
dec
xor
jmp
sbb
mov
out
cmpsl
push
pop
dec
mov
clc
cmpsl
mov
xchg
and
add
pop
add
clc
popf
fcmovnbe
xor
sbb
pop
lea
aam
lods
xchg
rol
push
push
mov
xchg
push
cmp
daa
mov
mov
pop
stos
popf
adc
adcl
scas
push
test
sub
jecxz
xor
jb
push
sti
inc
sub
push
xor
pushf
out
push
adcl
xchg
icebp
nop
cmp
push
loop
pop
jae
popf
add
and
pop
push
ds
ja
das
sbbl
xor
test
and
scas
sub
out
cmp
cmp
data16
mov
in
mov
add
ret
jns
sbb
cs
cwtl
stc
rcl
cld
lahf
loopne
dec
push
mov
push
fsubl
repz
xchg
shl
push
repz
xchg
and
jo
mov
movsb
inc
dec
mov
adc
ficompl
and
xor
add
mov
fucomp
testb
into
and
xchg
cmpsb
lea
fxch
cwtl
nop
mov
add
punpckldq
sbb
and
lcall
push
insl
inc
aad
mov
sbb
ljmp
inc
aaa
adc
xchg
sti
test
cs
addr16
mov
inc
fcmovnbe
dec
xchg
repnz
pushf
into
mov
or
cmp
repz
repnz
test
cmp
inc
mov
pop
add
mov
xlat
mov
inc
or
sbb
gs
mov
cmpl
cmp
sarb
les
fsubp
mov
sbb
pusha
and
inc
adc
sti
stc
xorb
push
lods
fnstsw
mov
outsl
and
fcom
bnd
inc
repz
xorl
std
in
add
cld
shr
jb
jge
push
lret
jecxz
divb
and
pop
add
shlb
pop
dec
push
mov
jbe
rolb
aad
dec
hlt
pop
xchg
dec
sahf
pop
loop
adc
das
mov
int3
fildll
hlt
jl
das
nop
lret
rclb
adc
jb
jbe
or
push
into
jmp
add
jnp
das
cmp
push
pop
enter
cmpsb
xchg
jecxz
mov
lret
inc
push
cli
movsb
imul
test
sub
mov
iret
jmp
lret
shl
stos
fisubrl
je
cmp
or
das
outsb
lcall
mov
mov
sub
popf
jmp
movsl
imul
mov
jecxz
mov
mov
xchg
and
pop
inc
aas
inc
lret
out
mov
dec
mov
test
ret
push
inc
push
push
adcb
addb
xor
xchg
dec
inc
pop
das
loop
add
loope
outsb
pop
xchg
mov
jg
mov
adc
sbb
loope
sbb
fmulp
andb
dec
dec
mov
icebp
xor
add
jmp
xchg
jp
int3
lea
adc
mov
cltd
add
rolb
gs
bound
jmp
push
mov
popf
loop
ror
push
ret
fwait
data16
loopne
xchg
sbb
cmpsb
stos
sbb
push
and
dec
enter
mov
push
out
stos
bound
rorl
insl
push
push
mov
sub
fucomi
aaa
push
pop
sub
mov
scas
loop
lret
dec
bound
xchg
pop
mov
jo
mov
inc
pop
outsl
dec
cmp
jmp
ffreep
sbb
jg
push
inc
mov
add
andl
and
push
movsl
loop
movsb
dec
mov
test
xor
sbb
std
lcall
js
adc
and
into
cwtl
cli
rol
lcall
fcompl
sbb
mov
js
inc
push
mov
push
pop
mov
mov
sub
and
xor
mov
mov
cld
jge
push
inc
lods
mov
dec
data16
test
pcmpgtb
loop
fidivrl
fimuls
lret
mov
sbb
ljmp
jecxz
enter
mov
negl
out
loopne
mov
inc
mov
mov
dec
add
xchg
aaa
sub
ss
xor
lea
sbb
mov
push
ss
test
gs
xchg
xchg
mov
and
bound
test
push
add
mov
push
mov
loope
jbe
ret
push
aam
jl
loop
std
cmp
push
add
push
jne
loop
scas
aas
andl
mov
add
mov
sub
test
inc
mov
test
test
das
js
mov
test
push
cmp
mov
cld
movd
aaa
test
cwtl
sub
mull
sar
lcall
mov
clc
scas
aad
or
flds
mov
incl
fldl
fisttpll
imul
repnz
cmp
and
lret
sti
cmc
int
jecxz
aam
mov
cmp
ja
jnp
dec
jp
jecxz
mov
mov
sbb
lret
sarb
jl
push
ficompl
loop
push
xor
pop
sbb
jecxz
push
mov
cmp
bound
std
clc
fstps
mov
adc
fidivrl
fwait
enter
fdivrs
adc
pop
jge
nop
lret
lret
cs
sub
push
dec
dec
and
mov
sub
ds
lds
cld
fucomp
xchg
mov
inc
in
aad
xchg
icebp
add
xchg
add
mov
mov
bound
in
loop
out
shl
mov
adcl
jbe
and
leave
mov
sbb
mov
pop
cwtl
out
icebp
inc
ss
andl
push
insb
cmpsb
inc
enter
pop
inc
arpl
testb
divb
xchg
pop
or
inc
das
jbe
dec
or
mull
push
rcrb
call
inc
pop
orb
cwtl
fcoml
inc
in
aad
in
popa
push
jg
mov
ljmp
insl
mov
cli
push
sbb
addr16
lcall
xchg
dec
mov
and
movsb
call
xor
mov
pop
lcall
out
or
iret
sub
inc
out
mov
push
iret
roll
js
xor
mov
js
sub
dec
jns
sahf
popf
jp
orb
idivb
shrb
imul
xor
adc
xor
mov
in
inc
scas
shl
mov
lods
and
std
sbb
fdiv
cmp
fnstsw
jmp
jle
fs
imul
negb
repz
aad
cmp
repz
aaa
add
pop
add
shl
or
xor
loop
pop
dec
push
cmp
or
ret
daa
cld
fistpll
fwait
scas
lcall
stos
jecxz
or
das
mov
testl
dec
add
push
jge
rclb
lea
mov
sbb
xchg
es
jnp
jae
stos
jecxz
das
push
push
push
loope
pop
and
or
inc
insb
adc
dec
stos
test
sbb
or
cmp
add
punpckldq
sub
shld
icebp
stc
and
push
ja
pop
es
insb
jg
into
and
dec
mov
mov
inc
arpl
lret
rol
mov
push
mov
insb
pop
enter
cmp
subb
call
mov
xor
lock
ror
inc
fs
movb
mov
jp
inc
pop
scas
stc
outsb
into
ret
mov
push
cmpsl
jne
scas
movsl
dec
loop
mov
dec
xchg
add
popf
sub
sbb
imul
rorb
mov
pop
jnp
or
aas
outsl
and
lret
mov
add
inc
adcl
es
pop
scas
pop
cli
in
lods
push
sbb
jbe
mov
mov
sbb
scas
cmp
pop
out
jae
or
cmp
push
repz
jecxz
rcr
inc
push
fmull
mov
cmp
sbb
sub
enter
lds
loope
scas
inc
decl
fsubl
jae
sub
sub
or
fldcw
mov
and
out
mov
sbb
cmpsb
mov
movups
mov
cmp
pop
popa
jae
cltd
ss
fsts
into
mov
xchg
push
dec
cmp
jns
xchg
sbb
add
in
ror
fdivp
pop
rcll
xchg
sub
stos
dec
mov
sbb
pop
mov
jecxz
push
push
rolb
inc
lods
sub
push
pushf
int
push
xchg
and
jo
in
push
inc
outsb
inc
xchg
loope
sbb
xor
adc
pop
popf
sub
nop
mov
sarl
push
xor
daa
jecxz
dec
and
out
call
add
test
and
inc
ss
andb
test
insb
fsubs
jbe
subb
xor
movb
stos
jecxz
pop
push
push
subl
push
sbb
fistl
add
es
sahf
add
js
or
js
in
jmp
pushl
cmpb
inc
xlat
shlb
in
mov
jecxz
push
mov
pop
dec
cld
fwait
mov
xor
aam
aad
pop
pop
mov
cltd
cmp
stos
and
jg
push
inc
fisttps
pop
mov
out
bnd
fisttpll
in
or
scas
xor
cwtl
xor
les
inc
and
jo
jl
stos
int3
cmpl
pop
arpl
loope
sti
mov
add
mov
bound
sub
stos
mov
loop
xchg
mov
jmp
popf
xlat
dec
cmp
mov
or
ss
das
inc
adc
sbb
pop
push
jecxz
fildl
mov
xor
dec
xchg
xor
inc
mov
sub
in
std
adc
les
push
movsl
push
jnp
mov
jg
sbb
mov
stos
xchg
mov
ss
jecxz
and
daa
xchg
sbbl
loop
fmuls
mov
cmp
lret
or
mov
aaa
lea
repz
mov
cmpsb
adc
lcall
inc
dec
loop
lahf
mov
je
cmc
and
ljmp
pusha
bound
mov
xor
dec
gs
scas
js
divb
inc
jb
shlb
add
outsl
bound
cmpsl
popa
sar
mov
enter
lods
jb
adc
imulb
mov
enter
push
loop
xchg
iret
enter
sub
or
leave
lcall
xchg
mov
out
fs
pop
popa
out
cmp
or
loop
mov
cwtl
popf
int
shlb
cmpsl
enter
repnz
ljmp
jecxz
and
outsb
daa
xchg
sub
into
out
lcall
bound
arpl
insb
pop
stos
popa
mov
addps
stc
pop
pop
popa
popa
lods
ds
xchg
and
dec
sub
sbb
xchg
ds
jns
sub
or
pop
fbstp
mov
inc
mov
mov
mov
addb
sbb
mov
add
mov
stos
and
sub
fs
xchg
mov
sbb
jp
das
hlt
ja
fdecstp
lock
fs
test
stc
lea
pavgw
lds
stc
add
inc
iret
je
mov
sahf
jnp
cmc
ret
mov
adc
or
mov
scas
push
mov
dec
dec
mov
hlt
insb
mov
daa
sub
fistl
sarl
leave
pop
hlt
iret
adc
and
sbb
sbb
and
clc
or
daa
push
repz
jns
mov
in
jae
int3
inc
and
sbb
mov
mov
sbb
and
cmp
sbb
cmc
jbe
inc
dec
das
push
xchg
and
inc
pop
fldt
ja
sub
push
add
push
arpl
stos
add
jp
bound
adc
cmpsb
js
shrb
bound
lret
neg
sbb
sti
lea
xor
add
orb
fidivrl
movsb
dec
dec
clc
jmp
push
lahf
or
push
out
dec
test
pop
jecxz
sbb
lret
cld
rorb
and
mov
mov
inc
cld
in
cmp
popf
or
outsl
in
inc
sbb
lret
out
push
sub
sub
pop
lahf
dec
in
or
push
cmp
repnz
addr16
pop
test
lods
and
or
add
out
mov
add
sub
in
lret
push
cmp
movsl
sbb
icebp
add
int3
int
or
out
sbb
xor
inc
repnz
sbb
or
mov
inc
xor
mov
pop
dec
push
hlt
pop
lcall
dec
das
jp
out
out
fisubrl
jecxz
aad
pop
cli
bound
out
in
push
inc
cmpsb
or
loopne
sbb
mov
je
jp
or
shl
inc
adc
lahf
fsubrl
inc
rcr
jmp
dec
bound
outsl
lcall
push
jae
enter
ret
adc
and
cmp
sub
faddl
dec
jle
mov
jne
add
mov
popa
imul
sub
inc
push
add
mov
sbb
dec
push
js
push
lahf
mov
fadd
push
mov
outsb
add
fisubl
push
fcomps
sbb
pavgb
cs
or
jl
sbb
fimuls
sub
mov
push
sub
js
sbb
bound
xchg
mov
pop
dec
dec
mov
pop
push
pop
aaa
cmpsl
scas
lea
loope
bound
pop
daa
cld
test
inc
fnstcw
pop
ds
mov
dec
bound
inc
sbb
add
jb
jbe
mov
test
sub
and
cmp
jno
cmp
sti
pop
pop
xchg
pop
mov
movb
and
sbb
sub
mov
into
ds
loop
pop
out
pop
sbb
sbb
xor
ret
mov
cmp
add
sbb
cmp
sahf
sub
cmp
test
push
mov
sbb
das
inc
scas
add
push
and
cmpsb
push
test
sbb
add
push
push
xor
cmp
add
inc
mov
push
dec
adc
xchg
mov
loop
es
mov
mov
dec
sbb
jnp
inc
jle
adc
cmp
sub
into
inc
push
mov
outsb
xchg
pop
dec
dec
dec
ret
dec
or
sbb
fimuls
lcall
jle
es
push
pop
jle
push
or
push
cltd
sub
cmpsb
push
out
mov
rclb
sbb
xchg
inc
mov
out
sbb
das
int3
mov
xchg
fmull
sub
test
sahf
das
loopne
mov
inc
outsl
jbe
jno
inc
push
loop
push
sub
rclb
sbb
daa
es
mov
xchg
addl
out
inc
sub
aas
add
stc
xlat
nop
leave
pop
sbb
enter
adc
adc
fsubr
and
pushf
and
xchg
ja
leave
dec
sbb
mov
push
imul
loop
data16
sar
scas
push
dec
bound
or
ret
xor
pop
into
in
and
add
mov
hlt
pop
cmc
movl
pop
and
addb
jne
pop
mull
out
ds
cmc
call
add
mov
test
cwtl
push
cmpb
repz
push
jne
cli
in
add
into
inc
test
xor
stc
pop
loop
in
in
push
sbb
sub
mov
stos
cli
fs
dec
mov
dec
xchg
mov
dec
fsubl
add
adc
add
and
repnz
cld
xchg
fisttps
xor
mov
mov
loope
repnz
cmp
jecxz
arpl
loop
lods
out
shll
mull
lret
pushl
cmpsb
sub
lock
and
dec
aam
scas
test
sbb
ret
or
mov
inc
clc
icebp
inc
mov
sbb
or
inc
jg
fcmovb
cltd
cmc
shl
xor
mov
xchg
bnd
loop
ljmp
jp
ficomps
dec
movsl
lcall
xor
insl
and
push
in
lods
jne
out
inc
pop
adc
enter
push
pop
xor
adc
ljmp
xchg
stos
push
inc
ja
add
into
xchg
or
enter
int3
ficompl
inc
mov
pop
div
mov
add
jns
push
jmp
xchg
dec
lahf
sbb
push
or
xor
and
mov
jecxz
push
stos
mulb
cmpsl
subb
push
dec
jmp
test
jecxz
push
lds
sbb
cld
aam
and
sbb
inc
loop
sti
cmp
mov
sub
mov
or
sbb
repnz
mov
pop
lret
lret
enter
pushl
sbb
daa
fmuls
xchg
js
add
sub
jno
mov
ficomps
in
xchg
js
lahf
fwait
in
arpl
cltd
xchg
lods
inc
mov
or
flds
and
lcall
ret
outsl
and
mov
xchg
mov
call
mov
pushf
pop
int3
repz
sbb
mov
sahf
movsb
sbb
dec
fwait
xchg
cwtl
aam
shll
imull
pop
outsb
mov
clc
mov
addb
xchg
sbb
mov
add
pop
push
movsb
jecxz
sbb
pop
push
pop
out
cwtl
cmp
dec
addb
lret
xchg
mov
jl
cmpl
jl
sbb
loopne
inc
ds
jne
mov
pop
add
shlb
inc
lods
add
jno
fsubrl
add
mov
pop
mov
inc
xor
bound
jne
sbb
div
ficoms
jmp
pop
repz
pop
mov
xchg
or
bound
cmp
es
mov
addl
fdivrl
inc
outsb
sti
add
sbb
fwait
sti
sub
inc
das
rol
jne
add
insb
leave
pop
push
jecxz
xor
pop
mov
cwtl
cmpsb
or
test
push
mov
push
sub
call
cmp
mov
xchg
loop
fcoml
pop
push
pop
dec
xchg
jle
lods
std
and
movb
pop
testb
sbb
lahf
outsb
jge
cmp
push
xor
push
loopne
ljmp
int
fs
jecxz
xlat
and
ret
cmp
xchg
jae
lcall
clc
push
sub
into
xchg
rolb
mov
cwtl
inc
pop
xchg
loope
pusha
popf
jae
movsl
or
pop
ss
xchg
add
and
fyl2x
adcl
loop
pop
sub
repz
mov
js
mov
in
pop
scas
addb
stc
cli
xchg
jo
sub
popf
pop
xorb
in
out
and
xchg
int3
or
sbb
lret
hlt
sbb
cs
push
loope
xchg
sbb
push
mov
or
push
push
xor
add
stos
mov
xor
int3
rcrl
and
cmpsb
repz
inc
push
jnp
add
and
std
call
pop
imulb
sbb
or
lret
push
ljmp
cld
mov
repz
adc
int
sub
insb
jl
pop
pop
int
fadd
cs
in
enter
jns
adc
ret
dec
shll
pop
ret
lods
add
sub
lahf
sbb
push
scas
cmp
cmpsl
push
mov
jecxz
cltd
cltd
pop
pop
mov
bound
das
out
subb
mov
cmpsl
lock
addr16
cmp
and
sbb
pop
cmp
push
punpckhwd
cmp
inc
fstpt
mov
jns
push
loope
je
lahf
cmp
test
fidivl
icebp
sahf
out
mov
mov
and
orb
dec
cli
mov
cmp
loopne
sbb
pop
sub
cs
sub
bound
jae
mov
jae
inc
xor
outsl
bound
dec
outsl
jnp
mov
add
and
mov
xchg
mov
negl
lahf
movsl
scas
cmp
mov
adc
out
cmp
dec
inc
cli
lret
dec
loop
push
fildl
pop
push
mov
jmp
sbb
pushf
mov
cld
pop
pushf
lock
xchg
lds
fadd
imull
dec
loop
add
std
xor
lret
je
inc
xor
lea
into
jmp
cli
xchg
adc
push
inc
mov
push
roll
loop
xchg
scas
mov
imul
xorps
jge
cmp
dec
or
out
dec
or
xchg
pop
nop
inc
jns
imul
mov
cmovae
cwtl
fcomi
pop
sahf
mov
pop
lret
mov
jecxz
call
push
stos
inc
push
gs
aad
lock
mov
xchg
adc
pushf
lods
sti
jbe
cs
dec
dec
or
loop
and
nop
movsl
cs
mov
mov
inc
add
leave
xor
std
jecxz
adc
or
flds
ret
pushf
cmp
xor
and
mov
xchg
aas
sub
std
inc
fwait
sub
scas
sbb
push
push
mov
mov
lcall
loop
cs
mov
mov
push
xor
stos
and
fwait
add
clc
pop
push
mov
cmp
and
inc
xchg
or
mov
pop
loopne
cmp
add
sti
and
pop
cmp
ds
into
loop
push
add
pop
loopne
xcrypt-ctr
cmpsl
fstpt
cmp
mov
cmpsl
mov
jecxz
inc
mov
mov
fdivs
push
fstps
fwait
hlt
jne
negl
or
mov
stos
xchg
mov
pop
inc
test
jecxz
std
xlat
jle
cmc
jo
cmp
inc
inc
xchg
insb
mov
inc
loop
mov
pop
cmpsl
inc
mov
fldcw
cmp
add
loope
ficomps
hlt
xchg
lods
pop
pop
call
cmc
xchg
cli
and
inc
mov
in
std
mov
rcrl
jle
cwtl
gs
mulb
data16
in
adc
mov
dec
mov
jns
sbb
in
inc
lret
and
scas
adc
or
shrb
pop
pop
or
mov
jecxz
add
negb
hlt
mov
pop
push
shll
pop
es
rcrl
loopne
dec
sub
fdivr
hlt
push
sub
les
fs
iret
push
cmp
push
lea
loope
jge
fisttpl
pop
mov
push
push
cwtl
ficoms
js
sbb
stc
loopne
test
inc
jecxz
popa
jo
shlb
xchg
pop
sarl
sbb
into
add
cmpsl
pop
sub
lret
lock
push
fsubrl
lods
push
inc
int3
jg
push
flds
dec
hlt
cs
scas
into
js
push
cmp
mov
fwait
push
mov
outsb
popf
ljmp
ret
insb
mov
pop
or
or
sub
pop
call
xchg
xchg
jmp
pop
lahf
jl
dec
xacquire
sar
cmp
add
add
pop
fmul
loopne
cmp
push
pop
mov
sub
cmp
or
shrl
int3
insl
mov
das
ret
or
xchg
test
jmp
add
or
mov
jo
inc
jg
or
mov
int3
xorl
test
push
call
mov
sub
dec
nop
frstor
cmovp
add
ret
push
fadds
lods
jne
cmp
lcall
sub
jbe
fidivl
add
push
in
dec
jnp
insb
cmp
adc
inc
cld
popf
rorb
sbb
in
loope
sub
push
jno
mov
cwtl
call
sahf
mov
imul
test
out
fst
loop
jo
lcall
lea
add
mov
jmp
mul
xchg
inc
fdivrs
lret
es
cmpsl
mov
jb
int3
push
out
pop
add
in
add
jmp
pop
xor
add
int3
subb
outsl
pop
mov
fwait
jecxz
adc
in
mov
mov
cmc
mov
jecxz
pop
icebp
cmp
jb
inc
mov
pop
stos
push
cs
xor
je
mov
and
push
shll
and
repz
pusha
jno
lds
pcmpeqw
jge
mov
in
cs
adc
leave
xchg
adc
mov
jnp
xor
gs
adc
mov
dec
test
repz
sti
movb
inc
inc
mov
sbbb
dec
and
mov
pop
sub
push
rcrb
fisttps
sub
je
push
in
lret
loop
push
ret
lret
jg
in
faddl
push
daa
xchg
hlt
xor
push
pop
ret
xor
dec
push
ret
mov
cmp
jecxz
inc
ret
lods
repz
cmp
fiadds
in
inc
pop
out
dec
fs
xor
mov
sti
and
scas
por
bound
repz
out
push
ja
xor
ds
sbb
rcrb
sbb
mov
in
sahf
add
aam
call
sub
sub
push
adcl
pop
xchg
xchg
ss
bound
sbb
nop
push
inc
dec
orb
add
xor
sar
add
mov
pushf
int
mov
cmp
or
jg
imul
xchg
lea
gs
cld
ss
mov
mov
pop
cmp
push
mov
or
mov
aas
cwtl
testb
bound
dec
clc
andl
pusha
rcrl
mov
push
sub
dec
xchg
or
lret
aam
movsl
out
cmp
stos
cmp
xchg
test
push
dec
cwtl
add
xor
or
fmulp
sahf
push
pop
pop
dec
outsb
movsb
mov
adc
rorb
out
mov
daa
push
mov
imul
cmovnp
mov
cmp
rolb
bound
mov
xlat
incl
mov
lds
lret
mov
cs
mov
gs
dec
shlb
push
mov
test
and
cmpsl
mov
and
push
mov
xchg
mov
add
inc
xchg
idivb
sbb
rolb
xchg
dec
inc
add
mov
clc
bound
cmp
loop
jecxz
push
jb
sbb
mov
into
outsl
add
xchg
inc
jo
cli
stos
das
mov
pop
fwait
pop
cld
push
imul
arpl
loop
lret
ret
clc
fmuls
filds
push
xchg
add
jecxz
sub
fstpl
gs
adc
lret
ret
adc
int3
popa
mov
cmc
or
inc
popf
and
shll
jnp
mov
pop
cld
leave
sbb
insl
jecxz
mov
fcmovnu
rcr
sti
das
jg
sarb
fwait
iret
xchg
loop
cmpsb
jecxz
adc
out
lock
fmuls
mov
mov
cwtl
push
mov
add
jne
push
xchg
cmp
cmpsl
pushf
addr16
das
rolb
bound
sbb
cmp
xchg
mov
xor
scas
jmp
cmc
push
adc
out
xlat
xchg
lods
cmp
mov
or
pop
int3
ja
pop
stc
inc
in
jp
subb
adc
adc
mov
movsb
fcmovnbe
mov
jo
mov
outsb
cld
jb
loope
mov
in
push
loopne
loopne
mov
adc
arpl
imul
jbe
sub
fldl
mov
cmpsb
and
push
mov
cwtl
aas
jp
lret
mov
dec
lods
js
aaa
mov
loop
repz
das
fwait
bound
bound
in
xchg
xchg
dec
sbb
pop
loop
adc
out
mov
jle,pt
pop
loope
orl
cwtl
int
popf
sarl
mov
sbb
subb
inc
push
push
mov
ss
inc
adc
jne
pop
mov
xor
sbb
adc
aas
lods
xchg
movsb
mov
sub
punpckldq
pop
or
cs
ljmp
sbb
dec
xchg
adc
add
dec
pop
push
ja
icebp
das
xorb
rol
sarl
adc
jp
fmull
ss
ja
lea
int3
jg
repnz
adc
inc
punpckhwd
dec
sub
add
cmp
cmpsb
adcl
xlat
lock
insl
dec
mov
lods
push
add
mov
push
jge
adc
cs
out
or
cli
push
sub
daa
into
fcmovu
imul
test
cwtl
mov
lahf
jae
sbb
push
dec
xchg
loop
fstpt
or
xchg
xlat
pop
and
hlt
ds
push
pop
sbb
inc
jnp
ljmp
movsb
roll
ljmp
inc
push
cmp
mov
or
xchg
xor
dec
sbb
mov
andb
and
leave
adc
ljmp
insb
out
or
bound
js
dec
nop
cmp
dec
repz
ljmp
jbe
int
mov
aaa
xchg
bnd
fcoms
fmul
movsl
into
inc
mov
pop
orb
lret
incl
pop
bound
idiv
fisubrl
pusha
cli
mov
xchg
cltd
jbe
or
int
cmp
cmp
lret
mov
jmp
out
repnz
cwtl
mov
test
adc
ljmp
std
imul
imul
mov
idivl
mov
lsl
add
rcrb
mov
movl
xchg
sbb
ret
int
out
cmp
jbe
and
rcl
xchg
dec
out
inc
cld
xchg
inc
jecxz
rcrb
shrb
mov
call
lahf
xlat
int3
stc
push
bound
incl
push
and
jo
repnz
lret
push
ja
shlb
mov
inc
filds
mov
movsl
rcrl
bound
loopne
loope
push
xchg
cld
lret
mov
repnz
fyl2x
sbb
dec
jb
xchg
jg
icebp
fndisi(8087
or
add
push
pop
or
inc
push
testb
testb
cmp
pop
es
xor
pop
mov
xchg
pop
lods
pop
push
das
fisubs
lods
sub
popl
ret
mov
loopne
adc
mov
inc
mull
imul
pop
mov
push
jmp
call
xor
sbbl
test
shrl
xorb
mov
push
ljmp
mov
fidivrl
or
jecxz
sub
dec
and
leave
xchg
push
aad
and
inc
pusha
shlb
xor
es
sbb
pop
fldenv
fsubl
xchg
or
pushf
add
mov
inc
xchg
sub
aas
and
fmull
bound
out
sti
stos
sub
fmull
fsubr
inc
push
adc
add
scas
pop
cmpsl
dec
jecxz
sti
pop
mov
sahf
loop
xor
sbb
daa
in
xchg
std
adc
push
xor
or
and
rclb
in
iret
dec
cmc
xchg
xchg
and
rcrl
xchg
pushw
sub
int3
cmp
push
mov
sub
xchg
xorl
push
outsb
loop
inc
fs
out
sub
push
repnz
das
mov
jecxz
in
xchg
test
aam
outsb
cmp
xor
xchg
lret
loope
push
add
xchg
je
addr16
cld
push
int3
mov
push
cltd
ret
adc
pop
mov
jne
mov
pop
cmpsl
xor
cmc
mov
mov
sti
mov
sbb
repz
mov
cmpsl
sti
clc
mov
xor
mov
sub
loop
sbb
mov
testb
sti
loopne
jae
pop
mov
out
mov
add
std
outsb
sub
inc
xchg
push
mov
nop
sbb
mov
lahf
xchg
iret
dec
mov
aam
lret
loop
pusha
mov
xor
pop
pushf
rorl
daa
jecxz
in
pop
lahf
pop
imul
and
push
std
repnz
cmp
ds
pushf
cmovne
fnstcw
add
mov
aad
daa
pusha
dec
fildll
pop
mov
faddl
int
movsl
lahf
jle
fwait
rorb
dec
pusha
jae
add
sti
mov
push
pop
fnsave
add
pop
into
mov
xlat
or
cld
sbb
sarb
add
inc
rdpmc
ljmp
push
out
lcall
hlt
xchg
jecxz
test
cmp
xor
dec
xor
iret
cld
das
icebp
notl
stos
jecxz
inc
push
jle
repz
xchg
cs
int
outsl
add
enter
mov
add
jecxz
dec
popf
add
fwait
inc
xor
shrb
xor
push
subb
sub
scas
in
mov
inc
aaa
decb
sbb
nop
sub
stc
popf
mov
or
sub
data16
notl
notb
ret
cmc
jecxz,pn
jg
inc
and
xchg
push
fisubl
add
inc
outsb
mov
adc
insl
xchg
pop
xchg
xchg
xor
into
loope
insb
sub
fcomp
bound
testb
into
dec
or
aam
inc
push
lahf
clc
mov
hlt
ret
push
aad
and
dec
xor
jb
xchg
mov
aas
popf
adc
sbb
arpl
lret
mov
xchg
mov
mov
push
xor
rorl
popa
addl
inc
xchg
cmp
and
out
mov
and
add
or
mov
lods
xchg
push
sbb
into
fnstcw
imul
sbb
adc
inc
mov
mov
xor
ljmp
sbb
add
adc
sbb
sbb
or
xor
es
jecxz
mov
imulb
pop
ret
enter
xchg
mov
sub
or
mov
mov
std
mov
cmp
idivb
jp
jecxz
sub
jo
inc
dec
mov
lahf
hlt
mov
dec
or
mov
lret
pushf
int
shrb
sbb
repnz
sub
out
ss
fwait
cmp
mov
flds
out
push
pop
repz
adcl
mov
pop
inc
repnz
mov
fwait
or
pop
std
mov
inc
sub
pop
and
fisubrs
jmp
rorl
inc
inc
in
jae
cmp
ss
dec
stos
std
stos
mov
call
mov
fstl
roll
js
hlt
iret
dec
jae
ret
sbb
mov
pop
inc
push
aad
xchg
adc
xchg
cmp
fcom
sbb
test
pop
iret
fdivr
lock
xor
mov
mov
mov
addr16
addr16
xchg
bound
xchg
lret
add
in
dec
fidivs
iret
add
mov
scas
sbb
xchg
scas
leave
mov
cmpsb
aad
mov
pop
adc
inc
into
cwtl
pop
xchg
js
inc
xchg
mov
idiv
andl
dec
sub
subl
mov
xchg
mov
mov
xchg
mov
sti
adc
cwtl
mov
loopne
in
push
outsb
movsl
adc
imul
stc
pushf
cmp
psllw
inc
mov
ret
dec
xor
lock
mov
stos
shll
mov
lahf
fwait
cmp
popl
jae
fmuls
clc
push
push
popf
pop
push
loope
adc
and
sbb
outsl
fwait
mov
mov
adc
bound
pop
nop
cmc
sub
adc
lods
js,pn
sahf
sbb
xor
ss
dec
outsl
cmpsb
jae
adc
pop
jbe
scas
addl
shll
daa
adc
push
pop
je
pop
test
cli
sub
or
data16
mov
pusha
dec
cld
int3
popf
out
pop
lahf
jnp
cmp
in
sti
int3
cmp
in
sbb
mov
pop
push
mov
mov
dec
movsl
push
loop
jno
roll
test
jecxz
arpl
cmp
movsl
or
icebp
mov
push
repnz
sub
jecxz
inc
clc
nop
pop
add
cmp
sub
push
mov
lret
jo
mov
dec
nop
imul
je
fcompl
xchg
add
adc
mov
in
das
jg
ret
sbb
ds
fxtract
adc
dec
push
push
xlat
xchg
ds
cmp
dec
cs
mov
hlt
dec
push
bound
rorb
pop
aad
outsl
sbb
xor
add
fcmovnb
enter
inc
cmc
clc
jnp
add
mov
add
loop
sbbl
ja
bound
jnp
and
and
fldt
push
aas
out
push
xchg
popf
lret
fisubrl
leave
popa
pop
or
lock
sub
jmp
pop
aam
add
pushf
inc
stc
dec
inc
ficomps
mov
mov
faddp
mov
aaa
mov
or
loope
sub
jae
cld
pop
faddl
lret
add
and
loop
xchg
movsl
cmp
je
std
mov
sbb
orb
dec
xorl
pop
sbb
cmp
push
gs
add
call
pop
adc
out
inc
test
cmp
js
jg
or
das
mov
adc
outsb
bound
mov
sub
push
cmp
sbb
pop
iret
sbbb
pushf
jbe
aaa
sub
mov
fbld
pop
jl
inc
push
cmovno
mov
in
loopne
lods
sbb
and
pop
pop
fidivs
loop
xor
xchg
loopne
mov
mov
mov
lahf
pop
bound
enter
push
jnp
fdivs
inc
xchg
imul
daa
sbb
loop
imul
in
pop
push
jp
loop
lods
inc
outsb
mov
or
div
and
mov
lahf
dec
or
pop
inc
push
imulb
ret
cmp
push
cmpl
xchg
std
dec
xor
dec
sub
xor
aam
outsl
into
xor
mov
mulb
inc
xor
int3
add
xchg
cmp
ret
test
push
inc
stc
sbb
sub
fidivs
push
repnz
lea
enter
cs
bound
pop
push
std
sub
ss
shrl
pop
sub
push
stc
cmp
push
jl
pop
fdivrs
jg
cltd
sbb
add
and
cmc
pop
and
jmp
adcb
stos
outsb
imul
adcl
mov
fildl
aam
iret
dec
sbb
adcl
sbb
jns
jmp
addr16
das
outsb
and
into
dec
lock
dec
mov
add
aam
pop
popf
jmp
sti
call
repz
pushl
push
mov
rclb
or
test
and
sbb
stos
xchg
mov
adc
xchg
movsl
pop
call
jbe
xchg
jmp
xchg
push
pop
add
adc
and
mov
pusha
mov
sbb
test
daa
and
stos
jo
or
stc
xor
pop
cmc
xchg
dec
lret
pop
call
jg
lcall
mov
aas
mov
es
push
and
xor
mov
aaa
mov
mov
push
jmp
jle
leave
mov
push
add
jge
in
jae
sub
mov
jecxz
mov
lds
das
and
aad
sti
les
test
mov
subl
xchg
in
lret
cmpsb
enter
push
sbb
or
bound
xchg
or
sbb
jp
das
jo
pop
loop
hlt
loope
mov
repz
cld
sub
jecxz
dec
mov
push
outsl
hlt
lock
mov
out
jge
inc
stos
ljmp
xchg
sbb
jbe
mov
sbb
mov
push
lds
cmpsl
out
add
fdivrs
jl
push
adc
mov
and
cmc
lret
pop
bound
mov
addr16
cld
jge
pop
sub
daa
and
push
jnp
mov
daa
pop
lds
push
shll
add
xlat
sbb
xor
push
mov
sti
popf
and
shrl
dec
or
mov
mov
inc
jo
jmp
inc
add
jo
sub
lock
scas
jmp
push
repnz
repz
mov
pushl
jae
lods
dec
add
stos
xchg
stos
and
push
jae
cs
lods
shll
push
dec
or
ljmp
lock
dec
mov
popf
fs
sahf
pop
inc
je
and
sbb
mov
and
jecxz
push
loop
pop
mov
inc
sbbl
dec
cmc
push
stos
hlt
xor
jmp
jo
mov
cmp
or
scas
int3
push
lret
sbb
cmpsb
xchg
or
xchg
inc
les
loop
dec
mov
dec
ret
push
shrb
dec
insl
xchg
xor
sub
inc
sbb
ljmp
push
dec
movsb
cltd
sub
fnstsw
cmp
outsl
nop
cmp
sti
xchg
das
or
jl
sub
out
jl
lahf
fsubl
data16
xor
inc
lret
iret
loope
adc
mov
dec
dec
dec
xor
jmp
push
andb
xor
jb
add
cmc
ss
aad
sub
divl
scas
mov
dec
and
popf
jns
cmp
test
into
lds
push
push
test
pop
lea
andl
testb
xlat
out
dec
loopne
cld
loop
jg
dec
jl
jb
push
xchg
mov
negb
imul
shlb
out
es
and
clc
push
push
roll
inc
dec
aaa
hlt
add
fidivrs
xor
stc
or
cld
sbb
cld
fistpl
or
push
xor
adc
cmp
out
sti
inc
xor
sbb
adc
jns
pop
loope
test
and
andb
jge
shl
inc
inc
pusha
es
pushf
stc
addb
inc
inc
test
or
loop
cmc
loope
pop
and
loopne
inc
int3
addl
int3
adc
pop
push
lock
decl
cmp
int
leave
jecxz
mov
ds
pop
ret
ret
rclb
adc
mov
cmpsl
push
xchg
orl
insl
xlat
jnp
movsl
jae
sbbl
mov
fisttps
fnstenv
idivb
pop
add
out
xor
xchg
imul
xchg
cltd
pop
mov
cwtl
inc
lret
lret
icebp
add
push
and
xchg
mov
mov
cmc
sbb
shll
xchg
sub
js
repnz
pop
pusha
and
es
dec
test
dec
push
into
pop
bound
ret
imul
cmc
mov
mov
shll
sbb
std
int3
js
mov
les
or
clc
movsl
sub
jbe
pop
cmpsb
out
adcl
pop
and
fstpl
cmpl
sbbl
dec
push
insb
rclb
clc
lea
xchg
adc
mov
cmp
movsl
jae
fistpll
insb
cmp
stc
stos
push
push
cmc
push
push
sbbl
push
out
and
cwtl
loop,pt
sbb
jns
mov
adc
popf
pop
dec
or
jp
lret
scas
into
lret
rcr
mov
cwtl
or
inc
mov
popf
mov
mov
lret
xor
leave
or
jno
mov
jns
mov
pop
scas
repnz
scas
push
xlat
mov
add
jecxz
gs
bound
sub
stos
jecxz
out
or
mov
stos
mov
mov
adc
cmp
sub
mov
inc
push
adc
je
cmp
add
or
xor
lret
pop
cmp
outsl
add
addr16
push
fstpl
stos
ret
stos
cmp
inc
dec
gs
jle
adc
pop
bound
scas
or
add
inc
insl
pop
cs
shrb
add
cltd
push
in
and
aad
mov
xchg
mov
aam
orb
and
test
mov
mov
ret
cmpsb
outsb
xchg
mov
iret
push
out
push
orb
fidivs
sub
push
and
stos
pop
jmp
jno
mov
outsb
push
sbb
insb
and
xchg
push
fadds
mov
adc
jg
sbb
push
push
sbb
out
push
cs
jle
pop
fwait
pop
mov
outsl
and
jp
push
mov
sahf
dec
lcall
bound
or
mov
ds
outsb
add
inc
dec
sahf
push
and
pop
sbb
push
inc
or
mov
fiadds
inc
push
sub
sub
mov
sbb
cwtl
sub
dec
dec
das
lcall
das
out
sbb
out
push
aad
mov
inc
sahf
push
push
sbb
into
lcall
dec
repnz
push
or
test
sub
lea
cmpsb
inc
testb
push
outsb
sbb
push
dec
xchg
pop
es
push
lcall
mov
mov
pop
scas
mov
scas
jp
mov
xchg
subb
ret
sub
ljmp
out
sub
cmp
cwtl
xchg
ficompl
inc
mov
stos
movl
and
push
data16
mov
lret
push
das
jle
dec
cs
sbb
lcall
into
inc
push
cltd
cs
sbb
ret
dec
cmp
mov
cwtl
cs
sbb
xchg
lcall
dec
cwtl
sub
clc
xor
inc
jge
mov
xor
add
call
inc
popa
cli
or
rolb
sbb
dec
pop
xchg
repz
cli
xor
rorb
xor
into
mov
pop
inc
mov
or
add
mov
sbb
bound
hlt
pusha
add
pop
jmp
push
neg
jmp
lock
add
loop
dec
into
or
push
add
pusha
or
jecxz
jle
fdivp
adc
add
scas
adc
push
inc
sbb
inc
xchg
insb
cli
pop
sub
or
xor
ret
pop
sbb
repnz
out
add
ret
add
loop
cmp
insl
push
cmp
repnz
mov
xor
jmp
js
insb
mov
sbb
mov
ja
mov
loop
and
popf
addl
xorl
pop
mov
inc
loop
xlat
mov
out
sub
orl
pcmpeqw
sbb
pop
push
loop
cmpsl
xor
push
int3
xchg
jno
mov
sub
out
add
pop
movb
pop
mov
subl
int3
mov
jecxz
and
repnz
mov
sti
add
lret
les
loope
scas
cld
adc
mov
add
cmp
out
loop
xor
clc
lds
inc
dec
stc
repnz
icebp
push
sbb
push
jecxz
mov
cmc
std
int3
das
fdivs
cli
mov
sbb
fisttps
ret
sub
sub
mov
inc
adc
inc
sub
and
push
fsubl
cmp
pcmpeqw
gs
and
pop
dec
cld
nop
dec
xchg
pop
sub
xor
data16
movb
jmp
xchg
or
ficoms
or
and
cmp
sub
mov
mov
adc
push
fldcw
mov
sbb
call
std
int
sub
lret
cmc
or
and
dec
iret
push
or
loop
inc
dec
loope
dec
or
fdiv
loop
insl
sub
adc
orl
sbb
cmp
add
xchg
loop
inc
jo
cmp
xor
sar
sbb
fcoml
dec
inc
hlt
pop
jne
ja
cmpsb
pop
mov
add
pop
xor
bound
mov
mov
sahf
or
push
push
addr16
inc
loop
xchg
push
mov
pop
push
xchg
lock
mov
mov
jecxz
push
sub
int3
paddb
push
mov
mov
lea
push
mov
jmp
sbb
and
mov
leave
mov
cmp
dec
inc
imul
repz
add
adc
mov
ljmp
fstl
into
shll
add
push
leave
xor
sar
loopne
scas
icebp
add
jae
push
cmp
add
je
sub
sbb
xchg
enter
jbe
cld
jns
cmp
xchg
jno
ss
and
mov
inc
sbbb
div
add
sbb
subl
cmp
mov
adc
lret
sub
adc
into
leave
xchg
mov
fisubl
mov
inc
jmp
add
lcall
push
mov
shl
rorl
jmp
mov
sbbb
add
push
inc
mov
jge
into
cwtl
arpl
es
add
mov
push
jne
inc
push
jnp
js
fdivs
sub
xchg
mov
pop
fisubl
push
jne
mov
push
clc
xor
mov
dec
fsubr
adc
adc
in
lcall
cltd
aam
cmpb
jae
out
xor
loop
add
sbb
stc
mov
push
add
adc
dec
in
or
adc
fisubrl
jecxz
fucomp
mov
pop
jg
movsl
and
jecxz
stc
loopne
and
fidivrl
lahf
hlt
mov
push
xor
out
add
ret
mov
jo
mov
inc
mov
push
aas
lcall
sbb
pop
xor
loope
adc
ds
xchg
sbb
mov
pusha
xlat
aad
cmp
ja
mov
mov
mov
cmp
inc
repnz
cld
shrb
cmpb
les
or
adc
orb
lea
sbb
pop
dec
inc
outsl
and
dec
hlt
pop
mov
sarb
dec
and
or
jle
cmp
dec
ret
add
stc
mov
mov
sub
adc
mov
outsb
push
loope
rcll
cld
pop
xchg
fistl
mov
sub
sti
bound
sbb
lcall
fildl
rcll
mov
or
sbb
cld
add
popf
push
les
cmp
stc
movsl
and
push
add
lods
xor
mov
test
push
pushf
jle
xchg
outsb
negb
jle
lds
daa
and
test
jle
sbb
jge
push
fnstenv
ud1
daa
mov
dec
sti
push
ss
mov
adc
lret
std
shlb
dec
mov
movsb
fwait
iret
mov
sbb
cmp
add
jg
or
mov
popf
ret
sub
loopne
jg
push
bound
inc
sub
push
push
movsl
or
pop
fisttps
ljmp
andl
popa
ret
push
and
and
hlt
cmpsb
xchg
dec
jmp
call
ficomps
sbb
fimuls
mov
xor
jecxz
cmp
sub
sub
fldcw
cli
jecxz
push
add
pop
mov
push
mov
subb
dec
lods
jo
and
or
insl
pop
popa
mov
inc
dec
ret
outsl
jne
pop
fcmovnbe
mov
orl
xor
xor
push
pop
xchg
dec
ja
out
subl
dec
inc
sub
mov
das
jg
fwait
dec
in
loopne
push
loopne
add
or
push
ss
sbb
sahf
sub
repnz
dec
insb
das
leave
ja
pop
xor
fiadds
mov
cld
cwtl
mov
ret
jle
jne
fldenv
jecxz
in
popf
out
inc
out
aas
je
fs
and
insb
outsb
push
mov
sub
cli
cmp
repz
or
xor
leave
fstps
lcall
mov
mov
mov
testb
fisubrs
es
dec
push
aad
push
out
xor
icebp
add
mov
shll
aad
push
dec
sub
dec
pop
sub
xchg
lret
dec
jg
mov
fdivs
and
or
in
xchg
sbb
mov
ja
jge
shrl
ss
lods
and
loop
inc
pop
mov
incb
mov
fwait
pushf
mov
xchg
sbb
loop
nop
push
xchg
loop
adc
sub
fbstp
loope
push
cs
popf
push
pop
sahf
fs
push
and
pop
ror
push
ficomps
xchg
mov
pop
loop
int3
pop
push
pop
in
arpl
aaa
stos
jg
je
arpl
add
xor
fistpl
add
imul
mov
mov
dec
addl
add
mov
sub
std
add
les
lea
outsb
js
hlt
add
pop
add
mov
int3
push
inc
xchg
fs
out
fnsetpm(287
jmp
xor
inc
fnsave
inc
loop
cltd
push
sbb
mov
dec
out
jmp
dec
outsb
jne
jg
je
dec
push
call
fs
add
out
jbe
jp
fists
inc
and
mov
xor
mov
aad
inc
mov
add
add
fisttps
popa
pop
jbe
into
test
aas
cmp
add
cmpsb
push
inc
fldenv
mov
pop
cmp
xlat
aam
push
sbb
inc
lds
out
clc
in
pop
pop
shrl
and
pop
sarb
mov
sarl
lea
push
fmull
sbb
loop
stos
into
adc
ljmp
into
mov
rcll
or
jmp
push
push
push
cmc
mov
jecxz
fimull
push
ljmp
fdivl
popf
push
repnz
lret
cs
cmpl
pop
loop
mov
cmp
cmpsb
out
xchg
gs
scas
and
mov
xchg
xorl
cmp
imul
test
jne
out
into
cmp
push
fsub
cmc
cmp
sbb
cmp
mov
or
push
ds
rorb
cmp
adc
ret
fcmove
sbbl
rcr
and
decl
fiadds
out
jp
inc
aam
sub
adc
stos
aad
pusha
in
les
push
inc
aam
std
dec
mov
rcrb
sub
mov
inc
in
cmpsb
cmp
xorl
loop
daa
lret
popf
pop
dec
xor
sub
xor
clc
mov
adc
and
enter
xor
loop
xor
push
mov
mov
and
ret
in
js
pop
adc
in
xchg
push
loop
div
hlt
pop
xor
mov
les
leave
inc
repz
enter
jecxz
push
push
push
pop
push
cld
into
testl
add
add
push
or
push
inc
mov
testb
imul
repz
dec
lods
pop
add
stos
lcall
sbb
lcall
mov
add
xor
pushf
xchg
loope
sub
imul
das
ljmp
jo
cmp
sub
stos
stc
lcall
xchg
mov
fsubs
add
aam
inc
mov
lret
out
hlt
nop
xchg
xchg
fimuls
orb
in
lea
mov
movsl
ss
std
inc
fsubrl
mov
stc
in
sti
cmp
hlt
jbe
dec
fwait
mov
sti
bound
adc
xchg
jp
push
sub
cs
inc
lret
popa
pop
fistpl
xor
add
loopne
pop
out
push
fadds
sbb
rcrl
add
dec
loop
sbb
fidivrs
cli
dec
xchg
adc
or
xor
cmc
sahf
fmuls
and
mov
jae
in
testb
mov
je
xchg
xchg
push
cmp
incb
fdivrs
jae
pop
push
pop
cmp
inc
mov
popf
sar
adc
jno
add
push
pop
rcrl
mov
mov
and
outsb
sbbl
jnp
addl
add
mov
fmulp
shl
push
hlt
or
bound
loop
dec
test
arpl
and
cld
fisubl
push
add
jb
iret
bound
and
hlt
scas
outsb
data16
jmp
cmp
clc
aad
loopne
ret
sbb
mov
mov
fdivs
xor
inc
push
int3
cld
xchg
pop
cs
or
int3
cmp
repnz
xor
nop
ja
arpl
cmp
pop
nop
adc
mov
cmp
dec
sub
lods
pop
push
mov
dec
ret
fwait
lret
cli
jae
mov
jge
mov
bound
cmp
mov
cmp
cwtl
pop
pop
cmp
sbb
hlt
out
fiaddl
xor
mov
mov
push
mov
arpl
xchg
pop
outsb
into
icebp
or
imul
mulb
and
cmp
mov
icebp
dec
mov
lds
stos
xchg
mov
push
rol
insb
scas
lock
rorb
add
into
sbb
iret
int3
jnp
into
or
testb
into
outsb
xchg
ficomps
icebp
pop
jg
imul
jecxz
xor
out
into
in
sbb
lds
mov
bound
adc
pop
pop
stos
and
dec
das
lret
jecxz
repnz
mov
rorb
pop
sbbb
pop
jecxz
and
rcrl
pop
and
leave
jecxz
pop
test
mov
in
rorb
mov
cli
push
mov
xchg
inc
cld
loop
push
pushf
pushf
mov
push
leave
shlb
cltd
inc
mov
mov
add
jae
sub
pop
mov
loop
nop
lret
cmpsl
mov
shlb
inc
add
sti
ljmp
add
jb
pop
mov
sbb
mov
ljmp
pop
stc
mov
fsubrs
dec
inc
sahf
cmp
adc
sbb
insb
or
xorl
add
scas
int3
das
pusha
mov
jb
mov
add
xchg
orb
lahf
dec
int3
mov
fiadds
cmp
dec
sub
cmp
fwait
stos
orl
aad
fs
sub
push
xchg
int
outsb
mov
decb
rclb
je
or
aad
lcall
inc
jecxz
sub
clc
mov
sbb
inc
pushl
xor
and
xor
and
outsb
arpl
ficompl
inc
push
js
mov
fcompl
scas
frstor
enter
push
xchg
sub
and
loope
cmp
pop
jae
sti
or
and
adc
loope
sbb
loope
pop
mov
jo
mov
dec
lock
push
cld
ret
xchg
and
shlb
fldcw
sub
gs
push
cld
cmp
repz
add
imul
push
cmpl
sarl
andl
leave
mov
movsb
cmp
jecxz
aad
mov
sub
push
pop
dec
aaa
xchg
pop
push
mov
pop
dec
loop
sti
cmp
movsl
jns
inc
push
jle
dec
sbb
ds
add
repz
mov
pop
decb
cmp
dec
jl
loop
iret
add
test
push
sbbl
mov
bound
mov
mov
jnp
xchg
div
call
ss
mov
es
jp
push
sbb
popa
push
mov
dec
fmuls
sbb
insb
pop
loop
adc
mov
lret
cmc
mov
mov
mov
jge
jecxz
repnz
mov
push
cmp
filds
mov
fwait
xorl
fadd
es
push
push
movsl
dec
ret
xchg
in
xor
xor
adc
enter
mov
loopne
pop
inc
pop
lods
adc
mov
outsb
adc
jecxz
inc
mov
jmp
adc
fwait
push
aaa
aam
add
adc
or
subb
jecxz
jo
movd
mov
dec
rorl
inc
push
in
ja
dec
pop
jecxz
inc
pop
mov
fs
test
je
dec
xor
loop
imul
cltd
mov
pop
popl
stos
aaa
je
dec
sbb
adc
sbb
outsl
adc
notb
ljmp
cwtl
repnz
push
iret
inc
adc
pop
inc
mov
and
push
rorl
xchg
xchg
jl
lods
push
mov
and
cmp
sti
imul
insl
mov
cmp
fiaddl
push
ljmp
insl
pop
xorl
sub
cmp
pop
dec
cmp
or
jp
lret
sub
mov
cmp
and
and
dec
mov
jb
jle
test
mov
loopne
iret
sbb
ds
pop
out
push
xor
inc
push
ja
es
daa
dec
xor
repnz
push
mov
scas
fisubrl
cmp
jae
push
mov
ja
mov
dec
ljmp
sub
xchg
fimull
jne
fwait
push
sti
jbe
mov
jge
stos
divb
je
jp
nop
sbb
bound
sub
push
stos
jp
mov
je
shrb
and
ds
push
xor
cmp
cmpsb
push
fildl
sbb
inc
jmp
push
imul
adc
pop
out
pop
test
jp
sbbb
mov
iret
inc
add
push
sbb
repnz
sbb
mov
dec
sub
jge
mov
mov
data16
jp
jb
imul
dec
mov
sbb
scas
push
jb
imul
cmpsb
dec
push
inc
push
dec
pop
pop
mov
jbe
out
das
push
sbb
jp
mov
inc
dec
jle
or
mov
fiadds
sub
sahf
lods
adc
ret
dec
sub
into
add
cli
shlb
mov
rcrb
dec
cmpsb
sub
mov
inc
cmp
push
jp
jle
cmp
les
cmpsb
and
and
sub
mov
push
sahf
jg
pop
sub
orb
notb
daa
and
stos
mov
mov
insl
stos
and
and
scas
sbb
aaa
pushl
repz
imul
mov
jp
push
push
clc
enter
test
fcomp
pop
sti
ficoml
mov
mov
dec
in
and
add
pavgb
das
loop
andl
cli
mov
mov
lret
cmp
push
cmp
push
loop
mov
add
call
inc
push
popf
rolb
roll
push
icebp
or
repnz
pop
and
and
fnstcw
outsb
xlat
pop
out
mov
movsl
mov
das
inc
inc
dec
lret
out
xor
xchg
cmpsl
ljmp
stos
cltd
enter
sub
mov
out
scas
and
test
jecxz
fldl
cwtl
fs
xor
or
fadd
orl
cmpsb
xor
fprem
sbb
and
and
inc
xchg
add
movsb
in
mov
push
pusha
add
out
out
lret
xchg
push
jo
fiadds
inc
mov
dec
sub
lahf
pop
xchg
daa
ret
in
xchg
fcompl
push
pop
setbe
popf
stos
add
inc
out
mov
sub
test
iret
push
push
scas
sbb
cwtl
jecxz
aad
dec
jl
addl
scas
sti
ja
mov
dec
popa
mov
xor
pop
push
and
ds
sbb
mov
or
push
rclb
mov
hlt
lret
int3
mov
in
mov
cmc
sbb
adc
cltd
pop
aam
inc
fidivrl
add
cmc
sarb
fwait
sbb
and
cmp
add
inc
add
out
cmc
stos
jae
jmp
cmp
mov
mov
loop
push
jl
jp
push
test
sbb
out
hlt
cmp
scas
adc
push
ja
inc
jle
daa
jle
call
xor
jae
or
into
push
in
iret
pop
loopne
shll
je
lret
mov
xchg
out
popa
push
imul
fildl
loop
shlb
push
notl
add
incl
out
into
push
cmp
mov
insl
bound
mov
jle
iret
mov
inc
mov
adc
and
cmp
repnz
ss
push
and
cld
mov
cmp
mov
nop
sahf
mov
mov
sub
mov
imul
jno
lcall
lods
cmpsl
push
movsl
or
repnz
jl
inc
imull
jnp
xchg
js
mov
sub
jp
adc
cmp
loop
mov
pop
and
dec
mov
add
and
mov
fidivs
out
or
stc
fwait
or
jmp
mov
test
mov
lds
cmp
ror
orl
or
mov
mov
jecxz
xchg
fiaddl
mull
enter
dec
test
iret
sbb
outsb
stc
daa
int3
mov
lahf
dec
mov
fistps
out
pop
jecxz
fsubrs
and
cmp
test
inc
add
pop
cli
es
stos
jg
xchg
dec
dec
and
repz
add
test
adc
jnp
jb
or
test
pop
mov
mov
xchg
loope,pt
repnz
aam
mov
sbb
cmp
and
inc
sub
sbb
imul
lret
or
test
xchg
arpl
mov
loop
ret
in
adc
enter
repnz
lock
lret
and
repz
pop
into
pusha
daa
mov
loop
mov
mov
scas
cmpsl
aaa
add
in
adc
mulb
sbb
lret
out
add
inc
bound
pusha
adc
fisttpll
xchg
in
cli
xchg
je
sbb
cmc
ss
ja
out
daa
fcoml
jns
lcall
adc
cmp
jb
lret
enter
fiadds
es
loope
call
and
jecxz
stc
test
add
or
fmull
mov
int3
leave
push
or
cmc
xchg
cld
iret
lahf
fiaddl
ret
inc
xchg
scas
pmaddwd
cmp
aas
std
mov
pop
lods
xor
out
aam
xorb
arpl
ret
mov
dec
pushf
test
xchg
mov
loop
lcall
and
mov
sarb
std
daa
xchg
jb
lahf
xchg
movsb
add
bound
push
repnz
mov
inc
cmc
sbb
push
jecxz
pop
mov
pop
std
add
repz
push
xor
data16
mov
cmp
mov
inc
mov
or
stc
int3
sbbl
or
jecxz
das
jbe
negl
and
mov
xorb
push
push
sti
cmp
loopne
iret
dec
ljmp
jecxz
loope
loopne
imul
test
inc
int3
xchg
mov
cwtl
rorb
xor
push
es
inc
insl
pushf
cli
mov
roll
xor
sbb
popa
pop
cmp
sahf
and
test
in
push
pop
pop
push
in
and
jne
inc
mov
push
repz
or
ljmp
xchg
mov
xchg
cli
cltd
adc
movsb
push
clc
loop
and
lcall
test
push
nop
or
pop
dec
push
pusha
mov
mov
incl
inc
pop
push
xor
push
lods
and
mov
mov
lcall
fsubrs
inc
sbb
xchg
jp
lahf
sbb
jle
mov
lret
sub
fdivr
jmp
and
push
push
movsl
not
inc
cmp
addr16
or
loope
in
or
sti
fiadds
mov
ret
push
cmc
xchg
push
test
mov
pop
ss
rcrl
push
mov
xchg
popa
or
dec
push
xchg
pop
fwait
dec
movsb
jecxz
pop
inc
jg
lds
cmpb
mov
cld
and
cmp
and
shrl
js
cld
sti
jge
hlt
cmpl
inc
in
push
stos
push
andb
loope
sti
fmul
aas
push
add
jecxz
dec
lahf
loopne
enter
adc
sbb
add
stos
add
sbb
push
add
lods
xchg
rep
add
push
dec
mov
leave
push
jmp
mov
and
pop
sbb
sti
inc
inc
adc
mov
out
add
dec
jnp
push
mov
jecxz
loop
lret
or
fstps
dec
ljmp
cltd
lds
and
lahf
loopne
push
sub
sub
inc
sbb
jb
dec
pop
fdivrs
mov
insl
ljmp
movsl
and
mov
in
push
mov
pop
adc
and
fildll
jne
mov
iret
iret
popw
mov
or
xadd
sub
jmp
xor
bnd
icebp
scas
fistps
pop
pop
test
push
dec
add
jns
sbb
dec
sbb
pop
adc
stc
ret
fbstp
adc
push
das
mov
add
xor
jne
sbb
fcom
mov
setge
and
shll
inc
fdivrs
sub
xor
insb
mov
repnz
push
jno
jecxz
sahf
lret
adc
inc
mov
xchg
pop
mov
icebp
inc
mov
adc
lret
in
push
push
scas
enter
insl
repnz
sbbb
jecxz
and
out
bound
adc
lahf
jae
sub
sahf
mov
test
jae
push
test
loop
xchg
jl
ja
std
sbb
insb
lea
std
notl
push
lods
jno
jecxz
pop
mov
in
mov
dec
cmp
aad
stos
push
jle
adcl
and
outsl
xchg
inc
adc
into
add
outsb
movsb
cmp
push
loop
jbe
pop
mov
inc
add
cmp
mov
xchg
xor
sub
xchg
mov
pop
sbb
loop
stos
repz
fcomps
xchg
or
jle
sbb
and
and
sbb
out
bound
call
test
dec
cmpsb
push
mov
mov
ds
push
mov
inc
pop
mov
pop
icebp
cmp
pop
jl
mov
pop
or
add
xor
imul
repz
mov
mov
xchg
sbb
inc
adcb
pop
fcmovbe
popf
jp
push
mov
cli
lcall
push
add
outsl
lds
push
xchg
push
add
inc
inc
inc
imul
daa
das
cmp
hlt
or
xchg
fdivr
pop
outsb
shrb
lret
in
hlt
add
out
imul
lock
rcrb
iret
std
insl
xlat
scas
mov
lret
adc
inc
ja
fcoms
stc
dec
repz
sub
mov
cs
stc
pop
cmp
sub
jae
mov
fxch
push
repnz
mov
xor
aad
sbb
push
int3
mov
mov
je
orb
cmc
xchg
test
jmp
repz
mov
popf
inc
add
lret
sub
pop
dec
pusha
or
mov
inc
shrb
mov
clc
push
int
fchs
ja
push
in
repnz
in
jge
lock
mov
sbb
call
sub
loop
push
xor
jge
movb
lahf
push
nop
outsl
ds
dec
mov
push
je
sub
jno
adc
arpl
aaa
dec
pop
lock
in
inc
shrl
jecxz
inc
push
enter
inc
adc
jecxz
cmc
scas
stos
ljmp
pop
sub
mov
cwtl
loope
mov
movsb
lret
dec
add
cld
popf
add
xchg
std
xlat
sti
into
popa
or
xchg
std
mov
in
lcall
push
loop
sbb
testl
scas
or
xchg
js
pop
push
repnz
lret
and
lret
ljmp
xchg
mov
pop
addr16
mov
sub
xchg
fistpl
shlb
test
loope
ljmp
addb
sub
mov
iret
ds
pop
pop
aad
ljmp
ja
cld
dec
insl
shll
xchg
mov
mov
sbb
call
jbe
imul
or
ja
xchg
mov
movsl
imul
fcomp
push
roll
leave
mov
push
cmc
add
mov
test
fcmovnbe
jns
pop
lea
inc
mov
add
iret
or
push
int
jg
push
ret
lock
psrad
jecxz
push
mov
sub
xor
lret
adc
mov
or
ja
pop
mov
sahf
stos
lcall
aad
sub
mov
dec
lcall
pop
or
decb
xor
lock
inc
flds
xor
int3
loop
inc
mov
and
sahf
pop
add
sub
call
xor
loop
inc
or
sub
popf
cmp
jmp
mov
adcl
dec
sub
add
xchg
scas
fsubs
loop
adc
cmp
stos
mov
add
sbb
cmpsb
in
repz
enter
mov
jns
lcall
mov
pop
mov
rcrl
and
stos
push
mov
popf
out
pushf
xchg
stc
xor
cltd
fdiv
into
iret
es
out
out
xchg
xor
inc
adcl
push
popf
mov
mov
pop
aam
xchg
push
ficomps
jecxz
inc
loop
jp
in
hlt
out
jle
push
lods
pop
pop
jnp
dec
jmp
pop
lods
dec
mov
sbb
scas
jg
add
jae
les
push
popa
pop
mov
cli
cs
add
mov
iret
xchg
outsl
push
xchg
or
mov
inc
inc
lods
test
or
pop
pop
daa
gs
sub
out
pop
hlt
push
jae
and
xchg
and
test
icebp
mov
sub
push
dec
enter
test
xchg
into
jbe
shrb
add
shrl
hlt
mov
jmp
fsubp
ss
fadd
pop
std
cmp
dec
push
inc
mov
lock
movsl
pop
pushf
fstpt
mull
xor
iret
xlat
cli
out
into
xor
mov
pop
sti
add
inc
icebp
adc
int3
jb
call
das
fisttpll
or
repnz
pop
mov
dec
addl
jns
and
stos
mov
call
pop
enter
jae
jns
pop
sbb
dec
stos
mov
in
sti
jne
push
pop
jae
jecxz
in
jne
idiv
or
add
insl
pop
fcmovb
sub
js
test
inc
fcmovne
pop
clc
inc
inc
and
jns
loop
loopne
ja
pop
push
sub
mov
jo
dec
test
cmp
cmp
adc
cmp
xor
sub
js
xor
cwtl
fistps
sub
and
mov
adc
inc
ret
out
out
cltd
or
repz
mov
popf
daa
jo
pop
push
pop
sbbl
in
loop
dec
btr
add
pusha
stc
popaw
adc
pop
push
pop
bound
mov
repz
insb
mov
jo
mov
pop
inc
xchg
jecxz
push
push
dec
sub
and
sbb
inc
jnp
in
bound
and
aaa
inc
and
add
mov
das
loope
lea
shlb
pop
psllq
add
push
arpl
push
inc
pop
jecxz
xor
jns
and
loop
jae
sub
pop
lock
or
dec
push
dec
hlt
ret
add
sbb
fcompl
loop
cwtl
dec
jne
mov
cmp
ljmp
mov
cmp
xor
lock
xor
sbb
pop
mulb
test
loop
addr16
push
inc
sub
or
push
inc
shll
lock
fcomps
das
pop
mov
and
adc
negl
insb
mov
push
xchg
mov
mov
pop
lahf
pop
orl
fcompl
pusha
gs
add
pop
jo
push
add
cwtl
xchg
cmpsb
mov
repz
mov
inc
sbb
addl
arpl
push
mov
pop
mov
add
inc
jbe
repnz
hlt
cmp
dec
int
pop
sbb
xchg
daa
arpl
adc
xchg
or
in
repz
incb
add
popf
jmp
push
xor
mov
enter
into
sub
pusha
sub
push
mov
adc
sbb
mov
mov
push
stc
sub
inc
movsl
cmp
sbb
bound
lods
add
adc
push
or
cld
std
mov
sbb
pushf
mov
stc
and
mov
pop
xlat
icebp
push
pop
sub
addr16
mov
mov
adc
enter
jne
in
orb
pop
mov
fdivr
es
and
adc
mov
stos
addr16
mov
mov
popa
dec
cmp
or
mov
add
cld
addr16
mov
or
roll
fsts
call
add
in
pop
sub
mov
dec
shl
pop
into
adc
xchg
inc
or
int
add
sahf
in
cld
mov
ret
pop
jl
movsl
dec
lock
dec
sbb
into
sbb
ja
sbb
push
adc
jb
mov
mov
xor
cmp
xchg
dec
cmp
insb
push
add
in
sbb
negl
sub
jp
scas
sub
dec
mov
dec
out
push
cltd
push
dec
xchg
add
xchg
pop
fistps
dec
mov
cmp
and
push
mov
jae
xor
daa
ret
mov
movsl
dec
mov
iret
mov
stos
dec
dec
dec
mov
pop
ds
fs
push
inc
cmp
ret
add
sbb
in
push
fisubrs
out
xchg
inc
and
adc
dec
mov
mov
dec
cmc
jb
test
and
cmpsb
scas
jle
sbb
ret
shrb
pop
inc
push
mov
dec
mov
push
dec
mov
add
ss
jb
outsb
into
lcall
sub
scas
mulb
adc
dec
ds
or
out
push
mov
cmpsb
mov
mov
pop
pop
out
or
xor
jp
loop
inc
ret
jns
ss
dec
mov
sub
pusha
fisubrl
ret
lcall
mov
ds
add
xor
ficoml
testb
sub
mov
dec
scas
push
aad
push
inc
jb
fidivrs
jp
rcrb
lretw
inc
ljmp
add
dec
test
and
mov
and
xchg
mov
pop
cld
dec
bound
push
inc
xchg
or
fwait
push
jbe
mov
cmp
inc
outsb
xchg
sbb
jle
lcall
push
cmpsb
adc
dec
xchg
rorb
adc
cs
insb
jbe
xchg
fldenv
xchg
stos
test
into
loop
movsb
andps
mov
pop
pop
push
ja
or
pop
int3
xor
push
and
sub
test
bound
repz
mov
sub
adc
nop
ljmp
push
jg
ret
in
outsb
adc
inc
jecxz
jb
xchg
pop
mov
add
ret
lret
push
adc
lds
out
push
out
mov
jle
or
into
loop
outsl
mov
repnz
mov
xor
hlt
cmp
mov
inc
push
aas
loop
mov
mov
xchg
dec
dec
and
jb
insb
std
mov
mov
push
mov
in
add
bound
movsl
push
cld
rolb
adc
jmp
rorl
stc
mov
and
lret
jbe
or
rcr
ficompl
test
filds
arpl
in
add
or
es
sub
push
inc
sub
xor
insb
lret
ret
add
fstpl
mov
cmpsb
adc
pop
sub
or
lahf
shlb
push
adcl
test
hlt
cmc
dec
jecxz
push
inc
repnz
push
xchg
ficomps
aaa
je
insl
push
push
leave
jecxz
push
notl
stc
scas
push
rclb
cs
or
add
xchg
loop
dec
mov
in
push
out
loope
sbb
mov
sub
stos
cmp
int3
jg
mov
pop
push
shr
incl
repnz
sbb
into
fmuls
cmpsl
icebp
push
adc
adcb
test
pop
push
sub
lods
pop
xor
jp
movsl
hlt
add
pop
or
imul
je
sbb
mov
outsl
sub
imul
or
push
mov
xor
test
in
or
loop
add
push
dec
sbb
dec
pop
lret
cltd
cmp
decb
bound
aad
and
icebp
push
push
push
xorb
bnd
xchg
aas
sbb
sti
add
rorb
mov
or
and
sbb
sbb
lcall
sbb
outsl
xlat
mov
and
push
jle
ret
xor
xchg
hlt
out
int
and
adc
push
pop
mov
or
jg
push
call
stc
jae
dec
and
inc
stos
sbb
inc
hlt
push
sti
and
sbb
out
out
in
xor
mov
mov
sbb
sbb
call
jmp
inc
pop
addl
xor
aad
push
add
jecxz
cmp
cltd
test
subb
fstps
xchg
xor
sbb
movsb
ret
pushf
dec
mov
xchg
push
push
or
jmp
fldcw
mov
and
loop
ss
inc
out
ss
push
stc
or
inc
ja
mov
mov
dec
lea
lahf
push
fisubrs
outsl
mov
add
daa
sbb
jne
cmpsl
sti
das
push
outsb
mov
push
sbb
sub
aam
rorb
sub
jecxz
es
add
cld
fidivl
loop
jns
cwtl
arpl
inc
mov
dec
into
and
dec
movups
loop
aas
push
mov
jb
jmp
shlb
cli
and
sbb
insl
cmp
andb
sbb
inc
fdivs
jle
fiaddl
pop
xchg
inc
push
out
sub
ljmp
shrl
sbb
push
cltd
imul
inc
sbb
into
data16
add
mov
inc
ss
ljmp
cmpsl
fcmovnu
mov
jecxz
femms
push
ds
push
add
movsl
cmp
mov
jns
pop
jbe
scas
and
in
dec
nop
cmp
xor
lret
lret
ljmp
aaa
sub
mov
xchg
bound
bound
shlb
jnp
fmul
inc
add
mov
dec
test
mov
adc
in
rcrb
inc
add
call
xor
inc
or
rorl
and
pop
dec
xchg
nop
mov
cmpsl
adc
imul
sub
pop
xlat
ret
mov
std
jbe
aaa
scas
mov
aam
bound
iret
inc
inc
mov
cmc
int3
in
xlat
mov
in
dec
pop
and
xor
xchg
push
lret
mov
cmp
or
and
adc
mov
fwait
outsl
xor
mov
bound
shlb
cltd
mov
lods
stos
mov
scas
cmpxchg
add
cmp
mov
stos
xchg
sub
pop
inc
pop
dec
jne
dec
test
push
xor
in
adc
mov
ficompl
in
mov
sahf
mov
idivb
and
add
shlb
cmc
scas
and
sbb
repz
push
arpl
cmp
add
sub
lahf
push
popf
loop
arpl
sbb
outsl
mov
jecxz
adc
fildll
mov
and
push
and
push
popf
lret
add
scas
cli
inc
cmp
iret
lret
loope
shl
call
mov
dec
and
push
fbld
cmp
jbe
push
loop
mov
xchg
xchg
mov
fs
xor
mov
sarb
or
push
hlt
push
clc
push
mov
in
repnz
or
addr16
fldcw
mov
sbb
sub
cwtl
xstore-rng
cmpsl
inc
push
cld
mov
shlb
outsl
test
inc
push
cmp
js
loope
fnsave
sbbl
icebp
cltd
inc
mov
sub
and
cmp
jecxz
into
cwtl
in
push
pop
into
cmp
idivb
js
xchg
sahf
outsl
xchg
or
and
adc
aad
outsb
es
dec
loop
fmull
sbb
or
xchg
xchg
dec
out
das
insl
mov
add
incl
lea
mov
sub
jle
xor
jb
fstps
inc
dec
pop
mov
adc
cmp
daa
inc
jecxz
lea
loop
in
xchg
push
jecxz
cwtl
int
pop
xor
stos
inc
or
cld
loop
shrb
add
arpl
sar
daa
push
and
xor
push
fs
and
sub
cwtl
mov
ss
sbb
popa
or
and
pop
bound
mov
sbb
mov
dec
das
mov
pop
dec
test
loopne
mov
pop
push
incl
leave
into
mov
hlt
adc
cld
fcoml
push
call
adc
sub
adc
into
mov
sub
fistps
lcall
outsl
jecxz
mov
in
or
jnp
shrb
and
jle
shl
lds
mov
loop
sbb
jecxz
or
inc
cld
std
int3
add
cmp
xchg
shlb
div
dec
mov
mov
xor
loop
mov
filds
cmp
in
push
sbb
push
scas
repnz
addl
repz
cmp
call
sub
pop
xchg
cmp
dec
mov
pop
lret
cmp
push
add
sbb
sbb
inc
leave
adc
cwtl
decl
loop
mov
lods
pop
sub
ficoml
and
hlt
mov
cmp
add
fucom
or
push
and
fisubrs
and
jae
daa
call
mov
das
xor
inc
ss
or
dec
test
xchg
pushl
mov
sbb
dec
pop
sub
mov
or
ret
out
call
repz
xor
fisttpll
lods
flds
loop
sbb
push
push
aam
sbb
ss
sahf
cs
dec
stos
jecxz
push
xor
stc
scas
jecxz
jne
lret
fidivl
das
mov
or
mov
ds
dec
xchg
cli
out
pop
icebp
bound
aam
mov
hlt
sub
test
xchg
cmp
rclb
xor
cld
pop
xchg
jp
popf
adc
les
call
inc
dec
shll
jmp
mov
push
lret
jg
or
push
push
adc
fdivr
loop
es
jnp
mov
dec
mov
fisttps
xor
xlat
divb
jge
add
dec
loop
fisubrl
ret
inc
lret
dec
dec
js
mov
sbb
mov
mov
cmp
pop
mov
inc
repnz
xor
popf
dec
jo
cltd
mov
sbb
je
pop
xchg
negl
inc
lods
or
cli
data16
lock
fsub
jecxz
add
push
pop
aam
das
sti
mov
push
enter
fcomi
mov
cwtl
xor
ret
xor
mov
xor
sbb
adc
shll
pop
push
add
std
lret
add
gs
sub
mov
cs
push
xorl
fucomi
popf
sbb
movsl
out
je
jecxz
adc
or
shrb
sub
out
dec
jbe
xorl
cmp
lcall
cmp
add
xchg
or
aam
pop
lds
sub
jecxz
imul
and
mov
pushf
mov
mov
xor
mov
pop
mov
dec
test
shlb
jbe
inc
test
xchg
repz
loop
fstps
hlt
xchg
mov
cmp
jnp
lea
add
dec
or
cmp
loop
mov
icebp
icebp
rcrb
idivl
pop
andl
out
into
jb
xor
mov
std
sti
in
fildll
jmp
xorl
and
jle
rclb
loope
mov
jb
into
mov
mov
or
sub
push
iret
popf
pop
sbb
cli
ds
xlat
aaa
aam
adc
testl
loope
movsb
inc
stos
enter
fcmovne
push
pop
push
pop
sbb
lea
sub
jge
cmc
cwtl
push
sub
push
xorb
inc
fndisi(8087
adc
in
ds
insb
ljmp
cld
enter
hlt
call
sbbl
mov
adc
mov
es
setl
push
out
dec
shrl
push
inc
fdiv
test
cld
sbb
jnp
push
hlt
rolb
push
cmp
push
mov
and
or
rorb
mov
or
push
dec
cmc
popf
bnd
fneni(8087
mov
dec
adc
adc
or
xchg
stos
fists
punpckldq
lock
push
jp
push
in
movsl
inc
in
jnp
adc
hlt
int3
mov
sub
in
fwait
push
mov
pop
movsb
enter
jmp
or
imulb
dec
stos
in
inc
xchg
jnp
mov
or
add
add
fidivl
mov
mov
add
inc
add
fucomip
loop
stos
push
punpckldq
and
xor
icebp
std
sbb
mov
mov
in
xor
mov
jae
leave
cli
test
push
fdiv
cmp
cmc
scas
add
or
sbb
sbb
adc
sbb
xchg
bound
movlps
cli
repz
adc
mov
xchg
std
testb
pop
or
cltd
cmp
xor
xchg
fcmovb
mov
mov
mov
dec
fdivr
and
repz
xor
lds
test
mov
popl
jecxz
rcll
and
cmpsl
push
dec
in
fs
in
scas
pushf
xchg
in
enter
in
sbbl
push
loopne
je
dec
add
addr16
mov
int3
jl
sbb
lret
xor
bound
sub
mov
adc
cmp
inc
add
pop
lret
in
and
dec
icebp
cmp
sti
in
lfs
and
xor
xor
in
add
leave
xor
aam
cs
scas
pop
les
cmp
and
pushf
adc
or
repnz
out
hlt
lahf
sbb
leave
nop
mov
dec
imul
call
or
test
das
test
subb
sbb
mov
pop
and
ret
dec
add
ss
arpl
dec
inc
aam
mov
js
cs
in
testl
cmp
jne
mov
into
cli
out
stos
mov
mov
pop
test
in
sbb
push
mov
fs
dec
sub
ret
rep
mov
xorl
aaa
andb
adc
xlat
divb
mov
clc
xchg
dec
pop
mov
out
add
popa
scas
jns
pop
pop
inc
test
push
cwtl
sbb
sbb
xchg
inc
adc
ficomps
dec
repz
push
dec
roll
mov
mov
pop
jp
sbb
push
xor
out
cmc
lahf
inc
jns
nop
daa
dec
xchg
inc
and
and
ret
hlt
mov
cmpsb
mov
sti
shrl
flds
jo
test
mov
lret
test
icebp
and
jns
pop
push
dec
lods
add
aam
inc
cltd
mov
stos
dec
dec
loop
sbb
xchg
out
fs
fcomps
loop
push
bnd
or
imul
cld
lahf
arpl
push
cmpsb
jno
and
orb
inc
pop
int3
stc
and
adcb
int3
dec
aas
test
out
aas
nop
mov
subb
jg
dec
mov
loopne
fdivr
pop
test
jecxz
test
movsl
int3
in
push
push
jge
dec
repnz
lcall
shll
push
loopne
adc
mov
xchg
mov
jecxz
jnp
mov
pop
push
bound
xlat
sub
inc
ljmp
and
xchg
pop
dec
bound
and
inc
cld
jl
add
or
inc
pushf
xchg
fidivs
pavgw
loope
rcrl
sbb
inc
in
rorl
clc
leave
or
add
sti
add
push
xor
out
loop
mov
push
xchg
jge
pop
ja
inc
push
adc
lret
sub
std
lret
inc
iret
jo
ret
imulb
add
out
leave
jbe
aam
es
pushf
loope
fucomi
sbb
punpckhdq
arpl
push
jmp
les
pop
or
dec
lea
xchg
xchg
inc
aad
pushf
add
xchg
into
fsts
mov
sbb
rorl
pusha
or
stc
incl
dec
cmpsl
jecxz
mov
enter
xor
jae
dec
lea
add
sbb
out
push
int3
mov
fwait
add
ficoml
mov
mov
mov
icebp
out
in
and
stc
push
negb
jmp
or
das
stos
add
jge
mov
vpcmpeqw
daa
loop
add
or
push
sbb
jb
jne
jae
mov
dec
stos
dec
dec
dec
xlat
in
sbb
sub
into
out
pop
je,pt
cmp
or
es
or
adc
add
push
dec
filds
sub
lcall
adc
push
icebp
sbb
mov
int3
add
adc
jle
dec
add
testl
mov
leave
mov
mov
and
and
lock
pop
and
rorl
pusha
dec
pslld
inc
nop
jb
mov
iret
cld
sbbb
jmp
loop
lcall
movsl
psubsb
neg
adc
adc
dec
subb
push
xor
and
lods
cltd
cmp
push
sbb
insb
repnz
fidivl
push
nop
cmp
xor
mov
sub
adc
pop
dec
pop
out
or
notb
enter
push
mov
or
shlb
sahf
call
cmp
push
add
bound
and
inc
outsb
into
sbb
lcall
add
scas
sub
add
enter
mov
sub
xor
pop
dec
push
sbb
daa
sbb
sbb
adc
sbb
mov
adc
mov
sub
lcall
sbb
mov
dec
sbb
mov
addb
and
fmulp
jae
sbb
mov
fdivrs
xchg
push
cs
xchg
pop
push
repnz
cmp
push
dec
sbb
xchg
sub
cltd
mov
stos
dec
fimull
sub
xchg
dec
pop
inc
push
stos
lret
pop
inc
inc
inc
es
jp
test
cmp
dec
sub
ljmp
cli
pop
add
inc
dec
jbe
cli
test
inc
sub
xor
mov
out
sahf
xor
inc
andl
pop
pop
frstor
mov
add
sbb
icebp
sbb
cmpsb
mov
ret
cld
loop
je
int3
fwait
jno
push
mov
hlt
xlat
hlt
out
frstor
push
dec
or
or
cld
jecxz
mov
bound
negl
mov
movsl
lods
push
adc
mov
rcl
clc
pop
push
test
sub
loop
pop
test
mov
lods
push
dec
xchg
scas
cmc
mulb
mov
inc
pop
decl
in
enter
or
in
out
push
and
loopne
mov
inc
pop
repz
loop
xor
popf
pushf
cmpsl
mov
std
ficompl
leave
aad
faddl
jecxz
mov
pop
es
lahf
xchg
icebp
lcall
mov
rcrb
mov
shll
jno
cmpsb
inc
xor
aad
insb
xchg
jmp
ss
add
dec
cmp
pop
fmul
das
pop
bound
lret
out
mov
dec
jmp
mov
sub
dec
icebp
sub
inc
mov
xchg
xor
dec
sbb
inc
out
add
shl
daa
filds
loope
ljmp
push
fisubs
std
js
fcomps
mov
or
sti
xchg
ret
inc
std
and
mov
ret
lds
sub
orl
lret
mov
xchg
and
adc
std
int
mov
cwtl
outsl
adc
call
popf
mov
cmc
cmp
jp
scas
sahf
ret
xor
hlt
inc
add
and
ss
sub
dec
push
jmp
jb
dec
inc
sbb
dec
adc
xor
sub
xchg
adc
lods
push
inc
ret
mov
sbb
test
sbb
out
mov
add
lret
in
loope
push
mov
or
ds
mov
xchg
xor
aam
and
jns
or
inc
gs
dec
pop
inc
insl
or
sbb
add
mov
insl
cld
push
aad
cs
cmc
pop
cli
hlt
cmp
pop
sub
daa
pop
inc
mov
jbe
cmp
push
ret
fcmovne
mov
mov
jne
adc
loop
xlat
dec
jbe
frstor
cmp
cmc
inc
adc
int3
push
pop
ret
fcmovbe
or
loop
add
jo
inc
sbb
lods
dec
inc
fs
loop
stos
andl
mov
push
scas
stos
dec
sub
es
pop
pushf
pop
cmp
repnz
and
and
and
or
xor
stos
inc
popf
or
fcmovnu
jo
fdivp
into
mov
aas
pop
popf
jo
in
fstl
neg
or
ret
jnp
inc
pop
xor
mov
repz
loop
xchg
and
sub
push
loope
addr16
dec
cmpsl
loope
xchg
jb
popa
xchg
nop
dec
push
xchg
mov
mov
adc
in
in
pop
dec
and
mov
iret
icebp
or
mov
cs
int
push
enter
filds
mov
xchg
lahf
int
fs
rcr
add
call
sbb
rcrb
out
mov
cmp
jne
cld
push
xor
dec
adc
cld
in
jle
sbb
pushf
hlt
sbb
or
in
ljmp
xor
push
bound
or
lock
cmp
cmpsl
shll
test
or
cmpsb
dec
jmp
lret
jne
sarl
jb
or
test
adc
hlt
pushl
sub
push
push
repz
fld
arpl
mov
aam
loop
push
popa
cli
push
cld
into
jno
test
inc
cld
push
adc
jge,pn
and
push
pop
daa
dec
imul
mov
and
or
in
mov
push
ret
dec
fsubrl
popf
mov
xor
dec
repz
lcall
mov
sbb
movsb
push
add
mov
movl
add
push
pop
insl
lcall
dec
jecxz
xchg
add
jbe
rcl
cwtl
and
repz
addr16
popf
cs
std
sbb
scas
push
clc
cli
popf
mov
fistpll
icebp
mov
sbb
loop
insl
add
mov
loope
testl
pop
push
movsl
popa
cs
repnz
pop
hlt
sbb
repz
and
test
cmp
sbb
xchg
adc
dec
rorl
bound
or
ret
push
inc
jns
adc
daa
outsb
pop
xor
imull
idivl
lods
adc
pop
les
push
idivl
dec
dec
xchg
mov
insb
cltd
push
into
push
jbe
das
or
xchg
leave
decl
pusha
jmp
std
daa
movsb
dec
xchg
orl
sbb
or
jle
adc
ret
sub
or
fdivs
mov
hlt
jne
fadds
inc
jecxz
ja
jge
mov
loop
out
xchg
mov
scas
mov
out
pop
add
repz
xchg
std
pop
cmp
push
bound
inc
mov
add
mov
rorb
and
bound
push
sbb
mov
push
adc
in
loop
arpl
mov
adc
aam
and
jmp
mov
mov
xor
mov
mov
fucomip
push
xchg
mov
je
mov
f2xm1
rcll
mov
pop
jo
addl
clc
sub
mov
sbb
push
in
movsl
in
mov
mulb
movsl
mov
mov
xchg
shl
clc
lds
xchg
outsl
mov
fstpt
call
jecxz
shl
imul
lods
cmp
inc
lcall
testl
push
in
loopne
inc
bound
xchg
and
sub
sbb
jecxz
in
pop
xchg
in
iret
or
mov
lret
inc
push
mov
cmpsl
dec
inc
divl
jns
das
cmp
push
jecxz
adc
aad
les
mov
lea
mov
enter
pop
xchg
pushf
repnz
pop
mov
or
int
mov
adc
fiadds
cmp
or
int
cld
aad
shll
jne
data16
xchg
clc
jns
fdivrs
imul
pop
sbb
jmp
mov
xchg
and
mov
jg
lret
pop
push
shll
and
jg
das
mov
sub
lret
dec
xchg
inc
and
fsubs
pand
jp
stos
out
mov
negl
xor
pusha
cmp
lret
xor
adc
out
bnd
pop
push
jbe
lea
into
add
cmp
lea
rcr
in
loop
jg
int
fldt
sbb
pusha
inc
out
movsb
push
sub
repz
add
aam
sub
pandn
bound
push
add
pop
iret
push
or
nop
iret
js
mov
jne
lea
xor
mov
dec
into
jp
inc
xlat
add
mov
ret
es
add
pop
mov
mov
in
fidivrl
adc
push
dec
cld
int3
aaa
and
inc
testl
lahf
ja
xor
je
xchg
dec
movsb
adcb
mov
stc
push
dec
rcll
aad
xchg
pop
fabs
cmp
mov
loop
aad
and
in
dec
pop
xlat
subb
leave
inc
jecxz
mov
iret
out
sub
mov
mov
xor
popa
sbb
cmp
jmp
cld
imul
adc
insl
cmp
xchg
push
mov
out
ljmp
xchg
mov
mov
pop
pop
ret
into
and
mov
lret
lock
test
or
cli
cmp
lret
lahf
sti
lret
xor
clc
fldenv
xorb
push
or
inc
add
cmp
add
xchg
ficomps
mov
xchg
fwait
and
xor
cli
pop
ja
out
or
xchg
std
iret
or
cwtl
push
incl
sbb
inc
dec
push
cmpsl
dec
mov
add
cmp
nop
ret
lcall
xchg
mov
cmp
and
add
push
pusha
mov
lret
mov
ret
sti
pop
push
js
mov
xor
dec
adc
push
data16
sbb
ljmp
push
ret
dec
jl
pushf
push
sub
popa
mov
cmp
sbb
nop
pop
jmp
pop
mov
hlt
xchg
aam
fiaddl
outsl
mov
das
mov
mov
scas
mov
mov
mov
shlb
mov
scas
sarb
lock
mov
cmp
rcrb
push
movsb
cmp
dec
cmpsb
ret
fisubl
lret
xchg
in
mov
enter
add
add
mov
hlt
in
repnz
and
jecxz
mov
scas
sbb
sbb
cmp
divb
es
mov
xchg
dec
js
test
xlat
mov
jb
jnp
test
push
add
mov
mov
pop
dec
mov
rorl
loop
inc
sub
mov
bound
mov
xor
int3
fidivl
das
movsb
fistpl
xor
andl
daa
push
sbb
inc
dec
fstp
sub
enter
jecxz
in
inc
cli
xlat
inc
scas
jae
xchg
ljmp
scas
adc
out
cmpsb
pop
shrb
call
subl
dec
bound
jecxz
clc
jno
mov
ja
xor
mov
std
je
xchg
sub
jno
fcoml
jnp
loopne
insl
cmp
dec
repz
lock
sti
xchg
and
dec
outsl
pop
inc
repz
fs
and
push
or
test
mov
or
js
or
loopne
lcall
das
mull
call
sahf
cld
sbb
xchg
rcrl
pop
xor
bound
cmp
and
jg
and
jl
lods
xor
idiv
xchg
bound
push
insb
outsb
mov
int
pop
mov
lret
pop
push
add
shll
les
xchg
pop
push
mov
repz
lret
xlat
mov
aaa
loop
std
push
stos
adc
push
mov
adc
lea
dec
cmp
pop
push
mov
fsubs
inc
sbb
dec
and
jg
popa
push
xchg
in
or
lahf
adc
mov
add
scas
incl
or
ljmp
xchg
idiv
ljmp
sbb
icebp
fucomp
and
or
ljmp
push
loopne
out
mov
loope
cmp
andl
fdivl
addr16
jno
sbb
cmp
fs
out
adc
jmp
or
push
xchg
sbb
xchg
push
jb
and
dec
or
and
or
andl
fbld
out
lahf
push
out
cs
inc
inc
loop
sbb
enter
lcall
jl
bound
add
mov
sub
lock
inc
adc
and
insl
inc
in
lahf
test
imul
add
daa
je
mov
repnz
mov
mov
jecxz
mov
add
lea
ljmp
add
add
and
call
aad
hlt
std
and
imul
pop
gs
scas
cmp
movsb
in
mov
jae
ja
addb
daa
mov
icebp
mov
adc
subl
sbb
sub
lea
add
das
pop
stos
adc
in
test
cmp
in
ja
popf
int3
popa
outsl
push
dec
jbe
pushl
jecxz
pop
xchg
inc
inc
sbb
loope
and
daa
fildll
hlt
mov
sub
enter
repz
int
shl
cmpsb
mov
xor
mov
repnz
rclb
push
mov
mov
decl
icebp
or
mov
jbe
jecxz
and
add
jecxz
loopne
in
sahf
int3
dec
mov
push
in
dec
push
lret
mov
jnp
jnp
cld
sub
aas
fnsave
jnp
cmp
pop
lcall
mov
sub
cmp
lea
push
aam
out
sbb
mov
pop
add
jle
cld
inc
jne
sbb
dec
rolb
mov
pop
sub
test
sbb
repnz
inc
inc
push
xchg
out
fs
jg
in
rcrb
psrad
pop
dec
subl
push
mov
ja
imul
and
xor
adc
insl
cwtl
inc
mov
pop
xchg
js
inc
enter
mov
lods
sub
movsl
pop
imulb
dec
loopne
sbb
jae
inc
pop
xlat
add
and
outsl
jae
lods
or
ja
dec
push
int
iret
loopne
sbb
minps
or
out
movsl
xchg
or
repz
into
cs
mov
mov
in
jl
out
adc
fadds
xchg
cs
push
xor
sub
imul
pop
lods
into
xchg
add
in
xchg
push
nop
stc
inc
cld
cmp
xor
jns
aad
popf
fildll
jne
fdivrl
mov
add
fcmovbe
mov
sub
add
aam
scas
addl
jno
jbe
adc
mov
inc
fwait
pop
std
cmpsb
cli
inc
and
fistpll
repz
scas
jmp
in
fistl
leave
cmp
les
iret
mov
in
add
xlat
and
sub
xchg
mov
rolb
mov
scas
out
lret
xor
cld
enter
and
mov
addb
loop
lret
jns
hlt
movzwl
sbb
repz
adc
or
xor
cwtl
scas
jnp
add
push
xchg
xor
pop
fdivrp
push
pop
cld
cmpsl
push
cmp
imul
adc
or
enter
lods
or
jp
xor
mov
lcall
cltd
dec
ja
inc
bound
add
cmp
or
add
ret
repnz
jg
pop
mov
sbb
out
add
lret
pop
call
aas
sbb
mov
incb
fwait
loope
fbld
pop
insl
and
call
inc
lahf
dec
cmc
pop
rolb
jge
dec
push
scas
les
sbbb
imul
jo
sbb
jge
cmp
movsb
adc
in
cld
dec
rorb
pop
inc
sti
ljmp
mov
adc
andb
das
sbb
pop
sti
out
add
cmp
add
clc
pop
daa
and
mov
mov
xor
mov
in
mov
xchg
aam
push
insb
daa
movsl
je
dec
mov
lds
repz
andb
int3
adc
fadd
nop
push
mov
inc
sub
mov
popf
stos
fimull
inc
mov
rclb
ss
es
xor
fsub
pcmpgtw
cmc
jge
fiadds
mov
sub
push
lock
pop
and
sbbl
sub
jnp
movsb
xor
pop
loop
cmpsl
xchg
pop
inc
loope
sti
das
xchg
adc
push
idivl
mov
bound
or
lcall
pop
addr16
jbe
in
dec
add
inc
dec
ljmp
pop
jp
mov
cmpsb
lock
sbb
pop
or
cs
push
jle
fnstenv
mov
pop
mov
cmpsb
or
push
mov
or
inc
mov
movsb
dec
enter
mov
mov
push
cmovae
sbb
mov
or
movsb
negb
ficompl
cmpsl
lret
jecxz
je
orl
pop
mov
mov
fisubrl
sbb
mov
ljmp
cmp
clc
fbld
and
lret
sbb
popf
in
fs
fldl2e
sub
or
jo
inc
outsl
pusha
adcb
xchg
pop
adc
jmp
je
lret
ss
and
adc
sbb
test
sub
test
loope
pop
jno
sub
cmp
lods
xchg
divb
cmc
push
pop
push
sbb
cmp
push
sub
dec
and
sub
cltd
lods
xchg
shll
mov
repz
or
add
push
les
arpl
les
rcrb
cwtl
in
cmp
loope
cmp
mov
sub
lods
cltd
push
dec
xchg
leave
scas
in
inc
sbb
orl
push
out
ss
add
dec
in
push
push
add
wrmsr
sbbl
inc
mov
or
add
sbb
dec
lret
das
loop
add
divl
in
movsb
push
test
stos
inc
sbb
pop
cmp
dec
lods
dec
adc
mov
in
push
push
pop
aas
add
sbb
sub
or
mov
or
sbb
mov
add
mov
push
jecxz
inc
mov
sub
add
pop
sub
cmpsb
leave
stos
push
pop
cmpb
je
cs
lods
lock
sub
hlt
enter
jmp
lret
jecxz
or
jo
sbb
dec
cmc
rol
addr16
cmp
out
mov
iret
xchg
int
lock
jno
pop
xchg
and
mov
cli
mov
enter
bound
sbb
sub
mov
loop
or
mov
das
cmp
shr
push
and
mov
inc
pop
dec
mov
out
lret
test
popa
pop
fwait
mov
js
stc
inc
iret
scas
or
mov
loop
lret
mov
lcall
outsb
adc
es
and
xlat
lock
pop
push
mov
dec
sub
xchg
mov
adc
out
mov
fwait
xchg
cmc
lcall
out
mov
sub
repnz
or
jge
cmc
adc
jg
sbb
lret
xchg
sbb
leave
push
mov
cmp
test
arpl
jmp
rcrb
mov
adc
adc
adc
mov
mov
add
pop
sbb
mov
jle
in
mov
call
pop
popa
adc
pop
mov
inc
jle
ret
cmp
or
inc
dec
jle,pn
add
lods
mov
mov
pop
daa
push
les
stc
clc
adc
imul
cs
and
pop
jb
push
sub
push
push
add
push
negb
cld
lock
push
mov
inc
or
push
lcall
aam
xchg
ret
push
ret
mov
mov
mov
mov
jmp
cmpsb
dec
push
loop
arpl
xchg
fwait
add
jp
mov
mov
arpl
lock
push
popa
sub
fiaddl
cmp
mov
clc
addl
push
insb
pop
push
loope
sbb
and
lret
jle
xorl
mov
add
add
jecxz
and
insl
mov
stos
sub
sub
ret
aaa
lea
push
icebp
cmp
sbb
lock
sbb
inc
mov
pusha
sub
das
jge
adcb
fildll
jge
arpl
dec
xor
dec
pop
mov
andb
das
cmp
xor
and
data16
lcall
push
notl
sub
andl
stc
inc
imul
adc
dec
mov
pop
push
jecxz
shlb
mov
andl
nopl
loop
mov
fs
jl
or
cwtl
mov
xor
inc
repnz
test
jecxz
xchg
adc
lret
cmpsl
rclb
jecxz
es
out
mov
sub
int
nop
repnz
test
loop
cli
add
xchg
cwtl
push
sbb
addr16
pop
mov
ret
hlt
push
inc
jmp
add
inc
fsubrl
jg
add
add
loop
inc
cs
fdivrs
mov
mov
in
mov
sti
mov
out
aad
bound
imul
jg
fwait
adc
or
lret
mov
inc
nop
loope
ja
push
rclb
adc
mov
pop
push
lret
pop
ret
divl
cmpsl
loopne
xlat
add
and
outsb
xor
in
es
sbb
in
dec
stos
lret
clc
sbb
xchg
pop
mov
fsubs
inc
lret
sbb
push
rolb
cld
fisubrl
fsubl
cmp
stos
dec
add
lret
fisttps
push
test
adc
loop
push
loop
in
adc
lock
xchg
and
cmpl
ljmp
add
in
push
add
nopl
jo
inc
jmp
icebp
lods
pop
icebp
loopne
sub
pop
andl
popf
sbb
xchg
pushf
jg
push
mov
cwtl
inc
push
cmpb
pop
pop
pop
loopne
loope
mov
mov
loope
lds
enter
out
loope
stos
add
push
mov
lahf
sti
ret
or
int
rclb
push
rolb
mul
out
xor
push
xchg
xlat
xchg
sbb
lret
pop
ret
push
loop
gs
outsl
ss
loope
ror
or
lret
popa
roll
fcoms
leave
pop
push
lret
jg
pop
or
sbb
leave
push
jmp
jne
dec
adc
out
inc
push
inc
sbb
add
inc
jae
and
mov
sti
fsubr
jg
inc
add
jne
xchg
push
xchg
iret
jl
mov
repz
roll
push
push
add
repz
repnz
ret
sti
loope
stc
repz
or
mov
stos
inc
or
js
and
addl
xchg
mov
or
lret
or
xchg
iret
int3
inc
jecxz
sub
cmp
lea
lods
add
push
pop
sti
push
dec
jns
mov
and
jo
push
pop
pusha
ret
or
gs
cs
mov
testl
mov
sub
push
in
mov
sti
adc
xchg
cmc
clc
les
push
cmpsl
movsb
dec
mov
sub
xchg
cli
mov
xchg
mov
stc
pusha
icebp
rcll
sbb
test
sbb
push
jge
pop
push
aam
cld
in
fadds
lcall
and
sbb
sbb
sub
pop
push
repz
pusha
mov
pushf
jecxz
dec
dec
jns
faddl
sarb
daa
xchg
inc
sbb
in
repnz
aad
leave
loopne
lods
inc
pop
inc
in
lcall
xchg
or
lds
jno
fidivl
and
xor
push
addl
pop
jecxz
fistpl
mov
fadds
hlt
xchg
mov
cltd
gs
adc
shl
das
flds
push
out
sub
das
je
jecxz
testb
jno
shr
add
or
mov
adc
pop
fwait
push
cvtpi2ps
jecxz
pop
xchg
into
push
cli
negb
fbstp
pop
pushf
lahf
adc
pop
jo
out
sti
push
arpl
adc
cmp
cs
insl
mov
std
into
mov
sbb
cmp
scas
sbb
xor
xor
sub
sub
push
xchg
ja
outsb
negb
ds
mov
sbb
xchg
es
add
lods
sub
out
xchg
xor
hlt
addb
adc
jns
sub
mov
fisttps
shr
cmc
jmp
cs
or
inc
sub
cmp
out
stos
cmpsb
xchg
mull
adc
je
sub
push
lea
dec
pop
jecxz
inc
adc
pop
and
pop
pop
mov
push
aas
pushl
iretw
push
sbb
ret
repnz
lahf
push
adc
cmp
leave
cmp
adc
rorl
xor
cmovb
jl
push
jecxz
pop
add
enter
xchg
negl
jnp
cwtl
lcall
pop
mov
aam
inc
mov
mov
inc
mov
jecxz
mov
cld
cmp
mov
shr
dec
ret
adc
sahf
iret
shlb
call
xor
mov
adc
xchg
sub
jp
xchg
sbb
and
add
roll
das
jbe
cmp
mov
repz
sub
rcrb
cmpsl
jecxz
add
mov
rcl
loope
aas
mov
fidivrs
push
sbb
xor
cmp
pop
or
arpl
xchg
das
pop
cmp
lret
loop
sub
adc
icebp
bound
rcr
sti
push
jecxz
mov
xchg
enter
pop
cmp
and
mov
stc
addr16
sub
xor
inc
or
mov
jle
dec
stos
sbb
aam
mov
hlt
movsl
dec
or
mov
jns
sub
fnstsw
pop
cli
lods
sub
xlat
out
add
bound
js
push
dec
loop
stos
mov
inc
and
xchg
dec
mov
mov
sub
jns
pop
gs
vminss
xchg
mov
mov
add
or
aaa
les
adc
and
inc
sub
decl
cmp
in
loopne
push
lds
test
and
out
mov
sti
shl
mov
mov
jmp
lret
jno
add
out
add
repz
jbe
mov
hlt
out
dec
dec
js
xor
inc
shll
sub
daa
push
mov
fdivs
pop
adc
push
adc
out
into
cmp
mov
stc
inc
lods
xlat
sbb
xlat
insl
popf
jne
jl
je
inc
xlat
out
lods
pop
repnz
add
xchg
and
add
lea
inc
mov
in
sbb
das
jns
adc
mov
or
into
movsl
sbb
div
dec
add
lcall
cmpsb
and
mov
cld
loop
dec
cmp
inc
cmp
mov
ret
xor
pop
mov
fbld
sti
mov
int
or
cmp
lods
adc
pop
mov
iret
jle
cltd
lret
push
loop
out
cvtps2pd
xor
and
lods
add
sbbb
add
mov
mov
and
adc
mov
movsl
push
les
cmpl
mov
push
loope
cmp
xchg
or
bound
je
pop
jae
mov
and
mov
loope
stos
daa
push
loop
jne
test
mov
xchg
sbb
cmp
lret
add
loop
push
mov
cmovns
mov
sahf
jle
jecxz
leave
pop
mov
dec
icebp
xbegin
mov
push
pop
inc
stos
lock
mul
sbb
sbb
cltd
les
pop
rep
xor
sub
and
insb
xor
stos
mov
movlhps
and
push
push
xlat
stos
cwtl
nop
cli
mov
mov
push
lock
stc
mov
add
notb
daa
jnp
scas
push
es
lods
inc
icebp
and
popl
pop
dec
pop
leave
ret
cmpsb
and
and
jne
hlt
mov
jge
dec
aaa
bound
sub
add
fsubr
dec
sti
insl
je
mov
orl
daa
sbb
sbbl
cmpl
fadd
pop
add
or
push
cld
dec
movsl
outsl
loopne
sti
or
loop
fnsave
push
cmp
fwait
psubb
cmp
xchg
dec
or
mov
pop
sbbb
mov
sub
cmp
pushf
sbb
das
and
es
xchg
mov
cld
jmp
lcall
dec
in
mov
add
test
movsb
and
call
cmp
jg
xor
lahf
cmp
sub
jecxz
mov
mov
mov
stos
orl
je
dec
or
add
pop
jg
int3
adc
call
cld
mov
or
loop
dec
sbb
mov
jae
fdivrl
jo
rcrb
xchg
stc
test
pop
xchg
loope
outsl
aam
or
xchg
inc
dec
cmp
scas
ret
push
cld
cmpsb
dec
stos
pop
xchg
sub
pop
test
sbb
sbb
mov
add
movsl
mov
push
inc
mov
and
ljmp
xchg
pushf
push
push
push
sub
mov
add
mov
xchg
lret
xchg
xlat
sub
pop
pop
jne
xor
xchg
aaa
or
cld
int3
stos
mov
inc
dec
mov
dec
mov
jb
cmp
aas
sub
fsub
int3
imul
push
or
sbb
decl
jl
cwtl
inc
cmp
mov
popa
js
pop
sbb
push
ja,pn
les
jle
cltd
pop
hlt
push
inc
jecxz
xchg
or
jo
pop
jmp
and
and
xchg
cmp
int3
lret
lcall
push
scas
pop
loope
pop
sub
adc
lock
xchg
arpl
xchg
adcb
mov
lcall
inc
inc
sbb
pop
jg
mov
std
xor
sub
lock
sub
arpl
xchg
pop
repnz
stos
and
xchg
sub
jmp
call
add
mov
xchg
repz
repnz
ss
ss
loop
mov
add
push
ja
out
mov
loop
bound
jg
adc
into
out
mov
je
call
jne
push
sbb
maxps
enter
fstpt
add
aam
cmp
lret
lret
repnz
leave
adc
loopne
loop
mov
jecxz
inc
aas
mov
repz
ret
and
sbb
xor
sbbb
mov
or
pop
out
stos
fabs
push
xor
xchg
lcall
lret
divb
mov
push
loop
sti
dec
jge
and
repz
stos
xchg
std
xchg
in
bound
call
das
pop
dec
nop
lahf
cmc
add
pop
or
push
jmp
fisubl
xchg
cwtl
rorl
xchg
stos
sti
xchg
push
dec
push
ficoms
jne
call
jae
or
mov
sbb
lret
mov
mov
xor
xchg
mov
push
add
addr16
and
sub
mov
mov
jecxz
das
xlat
hlt
insb
pop
daa
cmp
push
sahf
int
mov
jle
sahf
mov
add
push
sbb
mov
push
xlat
xchg
pop
add
inc
sub
inc
mov
xlat
aas
mov
out
test
pop
sti
popf
idivl
jle
push
xor
mov
sub
sub
mov
sbbl
test
outsb
cmpsb
cwtl
negb
jbe
daa
test
inc
hlt
add
jnp
in
mov
es
jb
dec
mov
in
xchg
jbe
in
dec
add
out
push
sbb
xchg
push
pop
dec
sub
cmp
pop
pop
popf
scas
mov
repnz
into
or
sbb
test
push
add
out
mov
imul
sbb
push
in
push
jp
cmpsb
dec
das
fsubrl
dec
jno
shrb
jg
lahf
pop
je
bound
fs
out
pop
add
mov
hlt
pop
ds
mov
cmpsl
jmp
fisubrl
jecxz
sub
mov
test
mov
fnsave
push
ss
icebp
cmpsl
hlt
xchg
dec
push
movsl
dec
cmp
jbe
sub
lret
cmp
push
pop
cmp
and
repnz
fnsave
add
pop
push
lods
daa
and
mov
subl
fxch
pavgw
or
jb
xor
call
fdivs
mov
mov
mov
leave
push
ficoml
sbb
mov
mov
add
and
das
or
mov
movsb
fcompp
pop
test
dec
into
add
mov
movsl
loopne
cmp
pop
xchg
add
sarl
inc
lcall
jecxz
lret
and
out
add
pop
out
jp
pusha
jecxz
push
xorb
mov
mov
scas
inc
pop
dec
popf
fwait
mov
iret
mov
ret
mov
lcall
lods
movsl
icebp
ret
das
test
jnp
sbb
or
xchg
aad
shll
cmp
sub
add
mov
cwtl
xor
mov
dec
enter
xchg
cmp
push
sbbb
sub
push
push
bound
sar
icebp
mov
jnp
int
decl
mov
sub
mov
repz
jecxz
push
pop
xchg
adcl
sub
xchg
pop
fwait
arpl
dec
jae
push
ret
jae
idivl
or
jmp
ss
mov
cmpsb
jg
jne
mov
out
inc
std
fcmovnb
or
pop
pop
bound
andb
push
push
sub
loopne
sbb
dec
xor
gs
pop
inc
add
or
xchg
mov
clc
and
out
push
fcoml
mov
or
push
xchg
fcoms
xor
cltd
repnz
inc
mov
push
shl
push
inc
mov
cmp
push
shll
fs
xchg
js,pn
mov
scas
inc
mov
loop
sbb
jg
loope
clc
mov
jecxz
add
pop
into
add
inc
jecxz
jp
sub
loope
insb
scas
movb
add
jecxz
mov
sbb
cwtl
lock
xchg
sbb
pop
dec
jae
lret
xor
fmuls
test
movsb
xor
pop
or
cli
lret
fiadds
outsb
sub
push
ret
or
sarl
jno
xchg
mov
lock
repnz
cld
leave
int
stos
ljmp
pop
invd
scas
lahf
insb
xorl
std
or
movsb
ret
push
add
fsqrt
add
pop
lahf
mov
and
out
test
jb
mov
sub
adc
push
jmp
enter
add
test
mov
test
xchg
loopne
into
jl
xchg
aad
and
sub
pop
mov
repz
in
in
rol
in
adc
es
push
lcall
fsubrs
loop
or
adc
pop
inc
adc
sbb
add
or
dec
in
negl
xchg
inc
dec
cmp
movsl
jnp
or
fdivrl
jl
cld
mov
sbb
sbb
fsubrs
lcall
pop
jns
mov
jecxz
int
sbb
mov
jmp
push
xchg
jg
mov
mov
mov
sbb
stos
enter
ffreep
pop
push
and
add
sbb
inc
lods
rolb
adc
in
dec
ficoml
lret
or
pop
xchg
iret
lds
fimull
fcmovnu
enter
adc
sbb
repnz
fadds
dec
dec
rclb
mov
mov
dec
call
mov
enter
inc
dec
bound
in
inc
adc
lds
inc
sub
std
bswap
repnz
cwtl
cli
fsubrs
push
loop
out
and
mov
enter
inc
mov
and
int3
sub
xchg
mov
jecxz
mov
negl
fwait
add
or
fbld
jl
std
sbb
ja
inc
jae
je
add
or
aaa
shll
js
ss
insb
pop
sbb
out
adc
arpl
adc
scas
scas
or
push
ds
ret
mov
mov
push
les
sub
imul
enter
and
rcrb
insl
cmp
cmp
mov
jecxz
jg
stc
lret
sub
stos
mov
cld
hlt
add
xchg
sahf
sahf
add
pop
ja
jmp
push
dec
mov
xor
repz
jne
cld
xchg
mov
leave
xor
push
push
popf
xchg
cltd
pushf
shll
push
jns
push
cmpl
jg
add
xchg
in
sti
sbb
cmp
test
sbb
into
mov
xchg
call
sarl
xchg
mov
pop
lea
inc
and
add
movq
adc
cmp
hlt
cmovno
inc
push
jge
sbb
mov
out
ljmp
or
add
mov
pop
test
inc
sub
repnz
aam
imul
fildl
jecxz
je
scas
pop
inc
add
loop
adc
mov
or
and
mov
cmp
pop
xlat
insb
cli
jae
dec
push
sbb
fcomip
pop
call
sub
js
lahf
pop
or
jecxz
mov
ffree
mov
icebp
pusha
std
ja
cs
rclb
ljmp
mov
sub
lret
lock
xchg
xchg
fcoms
mov
fwait
xor
mov
push
inc
fsubrs
cld
jmp
fimuls
movsb
push
bound
cmpl
cltd
sub
xchg
flds
mov
or
sarl
xor
int
add
jno
fwait
lcall
fsubp
push
add
test
lret
out
push
clc
sub
push
test
loop
dec
pop
ljmp
int3
jae
add
or
mov
sti
inc
subl
jae
or
push
mov
and
pop
dec
aaa
xchg
mov
repz
loopne
dec
insl
dec
enter
cmp
mov
daa
pop
jnp
inc
push
out
icebp
xlat
adc
out
and
cltd
mov
into
pop
rcrl
dec
push
add
lcall
cmpsb
int3
cli
xor
push
scas
mov
pop
mov
mov
clc
stos
sbb
fcmovu
add
testb
jo
fcomps
xor
cmp
mov
pop
pop
sbb
loopne
fldl
repz
fs
lods
scas
daa
cli
or
popa
lret
or
fistpll
andb
fisubrl
outsb
loope
test
hlt
inc
dec
hlt
fdivr
mov
fwait
sub
add
sbb
push
pusha
xchg
sub
mov
cs
xchg
pop
mov
add
inc
dec
mov
fcmovne
cmc
mov
fdivrl
pop
cmpsl
sub
je
xlat
sub
loope
push
adc
sbb
or
mov
push
in
sub
pop
int3
dec
iret
stos
sbb
mov
and
add
aam
repnz
arpl
sbb
sbb
inc
adc
and
clc
inc
and
and
jno
mov
mov
lcall
fdivr
mov
cltd
ja
cmp
jle
lret
out
cli
xchg
pop
cld
xlat
push
adcl
lret
dec
cmp
mov
mov
xchg
xchg
mov
cmp
inc
out
fdivs
ljmp
in
lock
lds
sbb
and
pop
push
insb
add
loop
fildll
jmp
inc
in
lahf
mov
bound
sahf
jno
loop
inc
int
hlt
pop
rorl
inc
mov
int3
adc
ja
add
out
xor
icebp
push
js
mov
dec
cld
xchg
mov
fcmovnu
and
in
int
and
push
out
inc
jno
shll
in
push
mov
mov
pop
sub
sbb
inc
mov
inc
std
sub
mov
and
push
push
and
xchg
loopne
pushf
int3
popf
in
movsb
cwtl
inc
adc
mov
push
sahf
into
sbb
bound
sbb
cwtl
sub
jg
and
lahf
int3
sbb
loop
ljmp
mov
push
jbe
lret
cwtl
mov
xchg
mov
sbb
mov
push
sbb
mov
daa
adc
cmp
and
xchg
leave
sub
mov
fs
sbb
test
loopne
adc
mov
mov
in
insl
mov
push
or
pop
pushf
sbb
test
dec
cmpsl
jge
cli
addb
cld
rorl
adc
out
inc
xchg
or
cmp
mov
sbb
cwtl
xlat
mov
pop
or
lock
nop
xor
mov
clc
sbb
movsl
sbb
sbb
fs
mov
pop
add
popf
daa
mov
pop
fistpll
leave
and
and
aaa
icebp
or
and
xchg
cmp
adc
adc
testl
xchg
adc
push
test
adc
pop
fwait
stos
cmp
lahf
mov
cmpsl
sbb
je
sbb
and
or
jne
iret
insb
call
push
xor
daa
or
mov
xor
mov
fisubs
sbb
sub
icebp
push
push
mov
mov
xchg
or
push
in
xchg
mov
into
mov
mov
shr
je
dec
adc
adc
rorl
xor
push
lret
add
cltd
mov
xchg
popf
xchg
inc
icebp
xchg
out
add
aaa
push
or
push
xor
cmp
das
loope
inc
xor
out
cmpsl
xor
shl
popfw
xchg
movsl
pop
push
xchg
repnz
mov
add
imul
xchg
fwait
push
lahf
sub
lods
push
dec
popf
test
or
mov
xchg
stos
sbb
xchg
or
fcompl
sub
xchg
daa
cmp
pop
testb
icebp
add
jg
mov
sub
arpl
mov
dec
cmp
add
lret
xor
cmp
or
xchg
or
mov
dec
icebp
popf
push
dec
pop
jg
adc
push
outsb
jno
int
pop
xchg
sbb
in
out
or
ficompl
imul
das
or
adc
loop
rorl
daa
ljmp
or
push
test
sub
xor
dec
stos
repz
mov
or
mov
adc
xor
inc
fisttpl
lods
xchg
mov
sbb
lcall
jno
int
add
adc
add
jbe
bound
xchg
rolb
sub
ret
je
mov
in
xor
out
xchg
gs
loopne
push
cmp
jo,pn
jne
aad
or
repz
pop
push
call
je
fimuls
les
testb
mov
data16
das
add
xchg
mov
ja
int
or
jno
or
sub
pop
adc
push
nop
lret
popa
mov
loop
lcall
in
cmp
or
ljmp
cmp
das
lret
jne
add
aam
mov
add
adc
icebp
cmp
xor
test
pop
sub
cmp
js
pop
lea
dec
jbe
das
add
push
cmpsl
xor
mov
idiv
or
stos
xor
or
xor
jns
jnp
and
add
ret
inc
icebp
or
hlt
jno
pusha
stc
dec
cmp
xlat
pop
lret
mov
pop
fnsave
outsb
enter
adc
test
xchg
scas
add
cltd
inc
lods
sub
rorl
adc
dec
mov
lret
push
push
mov
or
mov
jo
dec
xor
pop
leave
adc
bound
dec
adc
lds
pop
loop
scas
push
data16
jl
fisttpl
sbb
lret
and
scas
icebp
or
mov
inc
push
or
and
mov
in
pop
mov
repz
iret
mov
mov
dec
xor
or
mov
and
xchg
xchg
add
popf
pop
aaa
mov
stos
xchg
pop
aam
fwait
dec
mov
add
dec
dec
ja
aam
dec
inc
int3
stos
fmuls
mov
dec
push
adc
sbb
imul
cmp
outsl
push
lcall
mov
add
push
inc
sbb
ret
setnp
fwait
mov
mov
xchg
mov
mov
outsl
mov
push
ret
dec
push
movsb
pushf
lret
addr16
notl
cltd
out
rcrl
add
xchg
dec
ds
or
stc
lret
in
sub
jo
mov
pop
lcall
push
stos
xor
pop
cmp
idivb
cli
insl
sbbb
pop
jg
stos
lret
insb
mov
cli
cmp
hlt
je
sbb
test
mov
nop
scas
cmp
mov
mov
sub
cmpsb
push
xchg
divl
mov
and
fcoms
pop
mov
dec
test
pop
xchg
mov
cli
xlat
aam
je
sbbb
or
push
sbb
mov
rcrl
outsb
xchg
lret
adc
popf
inc
lcall
lock
clc
sbb
xor
test
sbb
inc
cmp
push
xor
loopne
fsts
jmp
test
data16
adc
jecxz
xchg
xchg
pop
int3
xchg
or
adc
push
mov
push
dec
xorb
or
mov
jne
daa
add
js
flds
mov
dec
ret
xchg
je
ds
ret
or
repnz
outsb
repnz
mov
sbb
push
int
shl
les
sbb
xchg
dec
push
in
and
aaa
adc
adc
fsubl
and
sbb
cmpsb
dec
adc
js
sub
repz
ja
sahf
insl
out
fucomip
sbb
and
and
clc
push
or
mov
sti
sbb
out
add
sbb
icebp
or
add
add
xlat
cmp
pop
pop
cmovp
imulb
sbb
xchg
adc
inc
adc
mov
dec
add
test
mov
rcll
insl
leave
negb
sbb
sub
add
test
add
mov
je
inc
gs
fs
sub
lcall
shlb
cmp
add
jge
inc
pop
ljmp
ret
dec
dec
loope
cmp
sti
enter
idivl
jmp
fists
push
and
jmp
or
mov
jns
push
sbb
sahf
xchg
and
dec
jno
sub
idivb
add
clc
or
cmpb
jecxz
or
cs
loope
or
inc
stc
das
push
push
mov
das
adc
sub
mov
inc
add
add
aaa
cmc
sbb
lds
pop
lods
adc
and
push
xchg
in
mov
mov
ret
sbb
or
cmp
xor
or
mov
add
push
cmp
push
jns
and
jg
sarb
cmp
or
xchg
sbb
dec
cltd
insb
sub
insl
cmpsl
idivb
lcall
stos
push
xchg
loop
aaa
fwait
adc
push
mov
test
insb
ljmp
das
fxch
mov
imul
mov
inc
lcall
adc
insl
hlt
push
or
arpl
clc
and
pop
cmp
cmp
cmp
jp
roll
push
je
loopne
or
movsb
adc
or
aam
mov
xchg
call
mov
sbb
insl
lods
cmp
mov
pop
xlat
push
cmp
sbb
adc
dec
ret
aam
mov
mov
lret
jle
mov
sbb
adc
nop
xchg
dec
pop
sub
xor
inc
ljmp
or
sub
inc
clc
add
or
enterw
loope,pn
test
push
notb
wrmsr
adc
inc
test
test
mov
jmp
add
cmpsl
es
cmp
mov
lcall
or
jns
adc
scas
jne
roll
xor
add
sub
aas
jne
hlt
push
or
jmp
or
out
and
dec
and
dec
shl
or
push
jns
arpl
xor
jo
gs
jb
sbb
xrelease
lahf
jg
mov
mul
lock
out
xchg
jmp
or
fldcw
loope
dec
cltd
lcall
dec
mov
lock
jne
popa
pop
inc
imul
sub
mov
mov
adc
sbbb
inc
cmp
cld
sbb
push
clc
cmc
jge
sbb
pop
pushf
movsl
and
pop
mov
notl
mov
sbb
iret
add
cltd
stos
sbb
int3
lcall
and
popf
mov
sub
repz
or
out
or
fildl
andl
fwait
std
push
es
sub
lahf
mov
and
or
ror
mov
cld
or
ljmp
xchg
jmp
add
or
gs
clc
repnz
sub
popf
push
and
cmc
daa
repnz
mov
cmp
sbb
xchg
push
ss
icebp
das
mov
add
xor
xchg
data16
or
mov
sbb
mov
mov
or
mov
xchg
das
mov
push
sbb
pop
xor
mov
inc
or
popf
inc
mov
inc
bound
addr16
pushf
xor
icebp
pop
cld
or
add
stc
jae
or
push
into
xor
icebp
out
push
cmc
imul
loope
or
xchg
or
or
xchg
cmp
adc
sub
xchg
inc
jg
pop
inc
icebp
sub
je
repnz
stc
push
pop
xchg
out
das
dec
push
lcall
push
call
or
and
cmp
inc
repz
in
push
jle
mov
ljmp
or
lods
xchg
mov
inc
cmc
mov
fldt
jae
lret
xchg
fwait
add
mov
nop
inc
aaa
add
repz
mov
or
pop
inc
and
push
fsts
insl
cmp
or
jno
dec
add
lcallw
lods
arpl
sbb
rolb
das
push
push
xchg
movsl
jbe,pn
jo
adc
push
xchg
push
adc
daa
sbb
addr16
push
inc
je
shlb
stos
jno
cld
inc
mov
or
jmp
or
adc
test
push
scas
leave
das
icebp
pop
adc
add
sbb
addl
test
lret
mov
lock
ds
hlt
maxps
dec
sbb
sar
pop
sub
push
out
and
inc
data16
fsubrs
icebp
jp
sub
int3
aad
jb
jmp
ss
hlt
jg
jl
push
shlb
pusha
fwait
lcall
aas
pop
add
dec
jmp
add
scas
sub
push
ret
push
dec
xchg
rcrb
cmc
inc
jmp
cmp
lock
and
cs
mov
adc
and
sub
dec
push
ret
mov
das
cld
and
aad
or
lea
or
call
push
sbb
cmpl
imul
push
inc
push
xor
pop
aam
sub
icebp
or
mov
mov
mov
jbe
cld
xor
mov
mov
push
das
mov
push
cmp
adc
or
enter
jo
inc
or
rorl
testb
add
adc
inc
cwtl
or
repz
jb
clc
cmc
cs
mov
push
pop
int
popf
sbb
mov
sbb
inc
sar
adc
adc
clc
xor
or
jno
shlb
mov
in
ljmp
lret
aaa
lods
mov
mov
hlt
jge
fidivs
push
das
call
push
lcall
in
jg
idivl
addb
push
mov
stos
lahf
inc
mov
or
data16
popa
jge
sahf
inc
out
fnstenv
les
jecxz
mov
mov
dec
sub
cmpsb
add
lea
aaa
xor
sbb
push
mov
cmp
jmp
mov
mov
andl
cmc
insl
ret
push
popf
inc
ret
push
push
in
inc
jae
neg
mov
jbe
fisubrl
mov
aas
das
repz
lcall
mov
jno
repnz
lret
push
push
jp
cmp
sbb
xchg
xchg
rcl
or
fildl
repz
dec
xor
cmc
xor
cld
and
fcomps
int
mov
jl
mov
lock
pop
and
xor
das
bnd
bound
je
rcrb
cmp
add
jmp
or
xlat
and
dec
xchg
or
cli
sahf
pushf
adc
repnz
and
pop
je
or
rclb
ret
lock
lret
sub
mov
jae
call
xchg
or
pop
xchg
jo
cltd
dec
push
testl
push
or
adc
cmp
icebp
in
inc
or
repz
sbb
pop
rcrb
mov
into
mov
ret
dec
je
orl
sub
mov
aaa
and
mov
push
xor
mov
loopne
clc
out
call
int3
lcall
and
lcall
dec
push
add
mov
xchg
stc
push
subb
sbb
lcall
adc
data16
dec
xor
mov
cmp
loop
lret
lock
jge
mov
lea
mull
je
aam
dec
test
jmp
ret
aam
push
int
lock
out
mov
xor
pop
mov
cmp
cmp
fnstsw
jmp
lcall
das
dec
sbb
mov
or
aad
pusha
shlb
or
and
inc
sub
adc
das
push
mov
xor
push
mov
repz
add
addr16
clc
cld
or
cwtl
leave
imul
shrl
ficoml
or
lods
jge
imul
xchg
pushf
sub
lcall
dec
pop
out
lock
push
push
fdivl
pop
add
lods
mov
jo
add
dec
test
inc
add
repz
adc
dec
mov
daa
pop
popf
adc
mov
jb
or
dec
xchg
and
lock
mov
push
cmp
jmp
lahf
add
lret
sarl
fwait
cmc
or
daa
sbb
pop
mov
or
test
in
mov
ret
adc
aam
jp
mov
mov
test
das
lret
in
push
fbld
dec
shll
add
fsubs
arpl
addr16
icebp
cmp
inc
jne
jmp
push
mov
and
shrl
fwait
hlt
pop
les
lcall
pusha
cmp
or
push
adc
or
push
jnp
adc
and
int
adcb
test
mov
lock
lahf
jl
cwtl
int3
lcall
mov
hlt
push
jle
xor
jb
ja
push
aam
dec
idivb
mov
ja
push
jno
mov
int3
cwtl
or
enter
movsl
or
cmc
imul
rcrb
cmp
call
sbb
dec
stc
js
or
test
fisubl
sub
add
push
popa
mov
push
or
mov
out
cs
xchg
dec
sbb
add
repz
lcall
pop
das
cld
pusha
xchg
psraw
cmpsl
js
add
cmp
inc
dec
cld
loope
push
push
std
comiss
xor
int3
sub
clc
repz
xor
stc
out
mov
push
fwait
insl
out
pop
sbb
xor
hlt
cltd
xchg
pop
or
dec
imul
mov
scas
xor
push
sbb
icebp
int
fidivrl
pushf
hlt
and
jb
mov
mov
dec
xchg
adc
sub
cmp
ljmp
sub
or
jnp
sbb
jno
cmpsb
push
loop
sbb
xchg
jns
jns
sbb
testl
testb
leave
jae
xor
mov
mov
retw
mov
xchg
xor
jae
jb
mov
mov
and
loopne
jae
das
repnz
xor
pushf
dec
shl
xor
negb
fistps
sbb
jne
clc
repz
jbe
cs
das
or
imul
add
cld
inc
cmpsl
cmc
xchg
mov
iret
stos
mov
xor
ds
repnz
push
lods
test
arpl
or
mov
or
and
jbe
mov
xchg
icebp
sbb
cmc
lea
clc
jnp
aad
sub
mov
mov
inc
and
xchg
lcall
or
dec
lock
sbb
out
out
jmp
in
in
leave
jae
or
into
lods
in
sub
cs
lahf
xor
icebp
adc
ret
mov
mov
jae
scas
inc
stos
dec
addr16
push
jnp
lods
imul
mov
sbb
or
xor
push
fdivl
mov
or
xchg
ret
sbb
cmp
add
mov
shrb
mov
cmp
jno
pop
sbb
pop
out
sub
clc
cmc
or
mov
inc
xchg
or
cmpsl
xchg
mov
mov
cmp
mov
je
imulb
jb
sahf
jecxz
or
and
mov
fs
jns
mov
fildl
insw
pop
add
jnp
ret
or
in
jne
sahf
push
mov
jbe
pop
pop
jecxz
xor
push
bound
xchg
mov
mov
rcl
int3
mov
xor
stc
cmpsl
or
cmp
outsb
cmp
xor
xorl
and
lods
push
fwait
roll
jbe
mov
mov
mov
dec
subl
ficompl
bound
addr16
loope
pop
push
insl
sbb
pop
sub
gs
jecxz
pop
enter
ja
xor
pop
into
adcl
jnp
sbb
sub
dec
push
jecxz
fsubs
or
sbb
mov
mov
pop
push
jp
out
lret
test
push
inc
xchg
jecxz
arpl
xchg
pushf
lcall
mov
aad
jle
lds
mov
pushf
mov
repz
jno
or
test
cli
push
call
inc
shll
addr16
jecxz
dec
sub
push
mov
sbb
mov
loop
jp
xor
sbb
mov
mov
or
insb
dec
pop
ret
xchg
aaa
mov
cmp
jbe
cld
bound
loop
pop
jmp
add
add
mov
push
mov
adc
in
or
orl
xchg
fisttps
andl
pop
push
sbb
push
push
jmp
push
mov
sbb
mov
cmp
dec
or
ljmp
sbb
xlat
stos
mov
fcomp
push
loop
sub
pop
inc
lock
setp
add
mov
insb
mov
mov
jno
xor
inc
sub
adc
adc
push
repnz
mov
cmp
pop
push
je
bound
sbb
sbb
jb
decb
mov
jns
add
inc
or
mov
xchg
rclb
cmp
or
out
sub
or
js
or
push
jle
lock
add
ss
in
rolb
or
adc
imul
jne
loope
or
xchg
or
lcall
adcb
mov
push
xchg
cmp
dec
ja
or
xor
mov
sarb
inc
cld
sbb
sub
adc
cltd
fsubl
or
ss
sahf
ss
mov
dec
mov
ds
or
jp
or
pop
dec
xor
or
mov
popf
fs
add
add
or
cmpsl
jo
and
bnd
push
fiaddl
jg
mov
lcall
mov
or
jmp
scas
adcl
iret
jnp
sub
into
xchg
flds
push
or
div
sahf
mov
in
test
dec
cmpb
aam
sbb
loop
or
imul
cmc
or
adc
repz
and
dec
adc
jle
xchg
mov
inc
sub
push
cmc
hlt
repnz
push
ss
or
stc
xor
test
cmp
push
dec
loopne
dec
bound
mov
mov
push
or
or
test
std
jle
or
loopne
mov
mov
andl
es
in
or
mov
cmp
orb
dec
or
dec
imul
adc
aaa
clc
sbb
sti
xchg
aas
fs
cmp
jae
popa
or
int
test
or
add
sbb
mov
cld
inc
out
xor
or
test
sub
je
out
cmp
pop
popf
cmp
pop
sbb
adc
or
shr
mov
orl
xchg
and
lret
es
sub
push
mov
or
adc
jno
push
repnz
in
and
xchg
mov
inc
daa
add
divl
mov
xchg
dec
scas
sbb
lcall
pusha
or
pop
jb
or
mov
outsb
or
lahf
jmp
mov
ja
xchg
pop
or
aaa
add
adc
int
or
sti
daa
fs
icebp
push
rclb
fidivrs
xchg
mov
jo
adc
jl
dec
rclb
xor
lahf
and
dec
cmp
jae
or
mov
and
dec
jbe
cmp
imul
push
mov
pop
stos
shrl
push
sub
and
hlt
fcmovb
or
push
mov
or
add
aaa
mov
mov
nop
repz
into
push
or
or
int
jl
pop
xor
or
ss
dec
cmpsb
loop
or
cltd
loopne
mov
pop
dec
pop
or
gs
sti
enter
push
movl
adc
push
add
pop
out
cmp
pusha
dec
add
pop
or
mov
test
or
enter
pop
cmc
or
inc
and
pop
pop
jmp
dec
xor
adc
xchg
or
pop
mull
cmp
pop
fidivrl
cmp
or
fs
shlb
pop
or
add
cmp
lahf
in
incb
or
stc
jae
or
mov
mov
scas
fwait
mov
mov
xchg
dec
push
inc
add
flds
iret
sbb
sub
sub
ja
adc
pop
inc
test
add
lds
repnz
jmp
out
in
js
sbb
loope
ljmp
mov
mov
insl
lea
pop
lret
enter
pop
sahf
leave
lods
std
stos
and
loop
jle
xchg
push
mov
push
and
rcl
popa
fisubrl
jbe
inc
mov
inc
loop
sbb
and
bound
mov
movsl
test
jae
mov
add
or
xorl
ja
add
pushf
mov
lock
pop
jecxz
cmc
jae
and
call
cwtl
std
dec
mov
movsl
sbbl
lcall
dec
loop
add
ja
jecxz
sbb
add
dec
sbb
cmp
lcall
cmpsl
aad
int3
test
inc
lahf
ja
cmp
or
loop
push
cltd
cmp
adc
lcall
pop
out
jns
lret
or
lret
pop
mov
andl
ret
jbe
xor
push
popa
ret
imul
inc
out
repz
arpl
sbb
fnclex
sub
and
pop
jmp
cs
sbb
loopne
mov
orl
pop
push
dec
mov
lea
add
sub
jno
js
gs
and
xchg
push
cltd
push
inc
sti
xchg
and
jno
enter
fistl
fcomi
adcl
enter
insb
mov
jne
enter
mov
jbe
xchg
add
adcb
pop
shl
xor
push
dec
sbb
arpl
pop
pop
lcall
in
lock
push
jg
mov
sub
push
pop
bound
das
sub
ret
popf
add
xchg
rorl
inc
dec
jecxz
pop
mov
mov
ss
lahf
lahf
jmp
in
sti
push
xchg
stos
and
push
xchg
mov
lds
nop
scas
inc
lea
dec
jne
jge
or
pop
mov
mov
inc
loop
xor
pop
xchg
mov
test
pop
cld
nop
jb
mov
out
add
call
dec
in
cli
add
stos
leave
pop
mov
jecxz
ficoml
in
loopne
push
jnp
xor
stos
sub
mov
test
push
mov
aad
xchg
add
inc
and
loope
dec
cmp
mov
pusha
dec
sbb
jb
enter
ljmp
mov
fwait
pop
mov
cwtl
ret
ficompl
jne
repz
jnp
subb
cs
adc
lods
or
loop
adc
and
mov
xchg
dec
shr
std
cltd
pop
lret
sub
or
hlt
cld
lret
andb
cmp
add
pusha
clc
sbb
dec
mov
xor
and
loop
cmp
bound
xchg
or
mov
mov
leave
in
test
inc
mov
fidivrl
and
pushf
or
jae
push
pop
loope
and
scas
inc
or
icebp
mov
sbb
outsb
jae
jg
andl
mov
loope
lea
add
lret
lods
data16
inc
add
jb
test
jp
fs
push
repnz
add
mov
mov
in
insl
ljmp
xor
lods
loope
and
jne
adc
inc
rclb
hlt
out
lret
xchg
push
mov
or
adc
or
loop
push
inc
or
rorb
in
lcall
pop
sbb
mov
pop
es
and
pop
lahf
adcb
or
in
mov
inc
stc
and
in
xchg
out
or
cmpsl
mov
xchg
mov
sub
mov
icebp
cmp
test
adc
or
sarl
or
sbb
neg
cmp
pop
mov
test
sahf
xchg
js
jmp
cmpsb
dec
inc
movsl
outsl
push
icebp
decb
ds
pop
pop
fadd
jnp
or
push
jge
jo
or
scas
push
fmuls
or
pop
sub
out
push
adc
pop
roll
out
daa
mov
ss
xchg
orl
push
sti
push
fstps
dec
mov
mov
push
xor
stc
xchg
and
or
in
and
or
jbe
pop
push
pop
push
or
in
or
sbb
cltd
mov
add
in
xchg
or
mov
or
mov
sbb
or
and
sub
pop
xor
cmc
adc
scas
mov
stos
decb
dec
addr16
repz
or
subl
pusha
insl
addr16
out
sbb
push
or
mov
pushf
lcall
jg
cmp
int
sub
or
fwait
mov
fisubrs
mov
or
into
leave
mov
mov
jle
inc
jae
add
xchg
push
or
mov
lahf
stos
pusha
cmpsb
leave
repz
in
jl
or
std
mov
sub
jbe
mov
divl
or
aaa
jno
sub
or
aam
ret
xchg
or
and
out
adc
fcmovbe
push
fcmovu
insl
cmpsl
imul
das
fwait
out
out
icebp
repnz
inc
xchg
xchg
cwtl
add
add
push
jb
fdivs
adc
imul
mov
push
lcall
fldt
sarb
or
xlat
sbb
sub
add
or
or
rclb
test
lds
out
movl
mov
inc
sbb
jl
fstpt
ljmp
mov
dec
ja
push
fisttpll
add
jae
xor
jg
test
cmp
popa
or
aas
lock
testl
cli
fsubr
xchg
ljmp
or
and
das
add
xor
jecxz
dec
or
adc
mov
and
mov
lcall
lods
or
pop
aas
adc
nop
jmp
stc
orl
mov
or
push
inc
test
jge
mov
xchg
or
xor
add
sbb
or
push
mov
xchg
push
xchg
int3
jno
scas
test
or
xchg
mov
sahf
add
fs
nop
and
test
mov
mov
add
push
or
mov
jns
int
dec
adc
fs
sub
and
dec
imul
test
jmp
icebp
jno
pop
cs
xchg
and
enter
mov
ljmp
pop
cmpsl
lret
pop
or
loop
inc
icebp
sub
ret
sub
loope
std
xchg
xor
adc
or
push
loop
ret
add
fldl
push
lock
jo
lock
and
mov
fwait
test
xchg
cmp
scas
fdivrs
sbbb
jecxz
mov
jb
outsb
xchg
ja
test
int
add
dec
ds
xor
enter
loop
xchg
mov
cli
or
add
pop
lahf
cmp
daa
mov
fstps
aam
cmp
add
rcl
and
inc
mov
loop
or
cld
fildll
popf
subl
push
xchg
int
leave
stc
and
inc
sub
mov
imul
mov
repnz
inc
xor
sub
test
or
mov
jecxz
pop
outsb
xchg
pop
xor
pop
push
dec
push
push
outsb
dec
push
cld
into
or
lret
or
mov
mov
in
or
mov
jne
mov
and
cli
aas
sub
addr16
mov
push
xchg
ja
cli
enter
lcall
sub
lret
pop
mov
dec
sbbl
pop
pop
rcll
pusha
adc
stos
lahf
adc
mov
out
sbb
mov
adc
enter
out
push
incl
dec
push
xor
scas
sub
into
mov
jp
iret
div
xlat
xor
daa
pop
push
sbb
sahf
dec
dec
mov
xor
pop
add
jmp
enter
mov
ja
add
std
xor
xchg
cld
pop
arpl
call
add
cmc
sub
mov
xor
les
mov
mov
andl
out
and
loop
jp
stos
jne
out
lock
dec
mov
dec
mov
jo
push
cmp
cmpsb
sahf
lock
adc
mov
jns
adc
mull
jae
add
mov
cltd
push
loop
iret
sbbl
popa
mov
and
dec
inc
mov
iret
push
mull
loop
ret
xchg
test
sub
sub
xchg
into
lcall
xchg
fdivrs
andb
jnp
or
mov
or
push
andl
cmp
hlt
push
pop
dec
and
mov
sbb
loop
push
aad
mov
inc
cmp
test
inc
lcall
ret
pop
test
jg
sbb
outsl
jle
mov
andb
gs
pop
dec
enter
or
mov
dec
sbb
sub
jns
push
outsb
sbb
add
dec
test
or
arpl
dec
lea
add
or
xor
mov
jl
push
pop
repz
lea
inc
negb
gs
scas
popa
or
lcall
int
push
jbe
jg
adc
mov
ja
movsl
insb
hlt
pop
pop
call
inc
jae
aad
orl
fnstcw
or
leave
pop
push
or
loopne
iret
inc
push
in
or
xor
cmp
or
cmp
or
ja
pop
or
popa
mov
adcb
cmp
leave
cmpsb
sub
ds
sub
cmp
test
out
jle
mov
push
jmp
out
add
leave
jge
scas
shrl
cmpsb
or
int3
insl
xor
cmp
dec
popa
jne
iret
sbb
or
pop
test
pushf
jmp
or
sbb
sub
loopne
mov
dec
jbe
popa
xor
or
adc
lds
insb
sub
stos
cmp
negb
in
or
push
inc
sti
hlt
repz
clc
or
mov
stos
hlt
mov
inc
push
arpl
loope
push
push
test
jae
xchg
jge
lock
data16
or
cmpsl
inc
ljmp
jae
roll
or
stc
jo
jge
inc
testb
pop
movsb
imul
loope
adc
sbb
xchg
mov
mov
adc
sti
aad
shl
add
ljmp
in
test
in
xor
or
pop
jns
or
pushf
push
movb
mov
mov
popf
mov
out
cwtl
or
adc
scas
push
and
mov
mov
cmc
nop
push
popf
sub
enter
test
jnp
pop
push
aad
inc
or
out
sub
dec
rcl
imul
mov
jb
js
aas
push
sbb
lret
cmc
or
movsl
fcoms
mov
out
lods
je
and
es
aaa
lea
and
inc
ljmp
mov
lods
push
fidivl
test
push
call
outsl
pop
and
and
shrb
or
xor
lock
cmp
roll
enter
das
mov
icebp
push
jmp
pop
adc
cmp
loopne
icebp
mov
sbb
stc
test
mov
xor
inc
stos
in
sbb
addr16
or
xchg
cmp
xchg
pop
xchg
push
fwait
popl
or
cwtl
into
mov
outsb
sbb
mov
stc
push
xor
loope
mov
pop
pop
jbe
aaa
add
in
push
orb
bound
add
and
fwait
test
push
mov
js
out
and
mov
std
and
jecxz
pop
lahf
add
or
push
cmpsb
testl
lret
rcrl
mov
test
sbb
inc
xchg
cmp
push
xchg
mov
loope
subb
add
pop
sbb
or
bound
out
pop
and
mov
lcall
rcrl
loop
mov
rorl
add
std
jg
ja
aas
pop
sub
stos
andl
adc
test
inc
fiadds
sbb
jmp
dec
pop
cmc
pop
mov
add
xor
ret
push
jecxz
jg
push
loopne
mov
jo
mov
xor
cs
les
xchg
jg
cmp
scas
sbbl
cltd
repnz
leave
ljmp
int
cs
pop
outsb
or
cmp
pop
xchg
or
inc
sub
push
push
dec
dec
lods
push
push
fidivrl
jecxz
jmp
mov
push
lock
xchg
repnz
daa
bound
shrl
push
lea
xor
push
push
sbb
icebp
inc
arpl
rcrb
bound
js
cwtl
scas
lock
aas
jecxz
out
or
cmp
sbb
xchg
and
sar
inc
test
das
pop
xor
sbb
popa
push
add
inc
jmp
cmp
sub
push
jecxz
mov
scas
dec
cld
xchg
sbb
cmp
cltd
mov
add
sub
cmpsl
push
movsb
push
std
or
lcall
xchg
pop
mov
mov
std
out
or
out
sti
push
hlt
mov
cld
movsb
inc
xor
jecxz
mov
outsb
aad
xchg
pop
insb
stos
sub
xchg
repz
lcall
inc
push
aam
adc
clc
cmp
test
jne
and
fs
ret
xor
lods
mov
xchg
sbb
shr
push
nop
cmp
add
mov
or
fwait
push
iret
movsl
jl
mov
mov
dec
mov
sti
cmc
rcrl
push
xor
daa
mov
into
push
andb
and
ret
sub
dec
pop
loope
subb
push
mov
push
mov
push
es
loop
mov
popf
add
cmp
add
ds
dec
mov
fldt
cmc
mov
test
pop
sbbb
pop
mov
bound
pop
lods
es
loop
jno
mov
push
lods
addr16
aas
xor
ret
mov
add
or
outsl
jae
cmpsl
pop
repz
out
pop
sub
push
ret
popf
test
xchg
adc
shl
or
xchg
ret
jae
sub
and
icebp
notl
inc
push
cli
loop
lahf
jecxz
jne
decl
mov
and
out
push
jle
push
les
mov
scas
and
orl
insb
jge
xor
aam
ja
popf
sbb
jge
hlt
push
pop
icebp
test
mov
imul
push
mov
cmp
mov
stos
mov
push
fstpl
test
cwtl
loopne
dec
out
adc
sbb
or
ret
mov
out
sub
fisttpl
gs
jecxz
pop
cltd
xchg
test
cmp
repz
cmp
loop
mov
imul
lods
sub
pop
cmp
inc
test
add
inc
or
jb
faddp
jl
or
inc
jle
sbb
xor
mov
fs
sub
inc
clc
ret
mov
or
xchg
sbb
push
pushf
push
mov
xchg
test
dec
or
orb
out
add
ljmp
pushf
sti
xchg
xchg
fmull
or
sub
js
loope
pop
scas
inc
imul
test
loopne
jge
nop
pop
cld
insl
or
add
outsb
push
gs
xor
aaa
mov
cwtl
or
into
and
jns
ss
daa
cltd
dec
cmp
cwtl
or
xchg
aam
ds
aaa
or
and
ljmp
rcll
pop
sbb
enter
addr16
ss
cmpsb
cmp
stos
mov
mov
nop
push
int3
loopne
or
fsubs
sub
push
sub
inc
sbb
sbb
or
xor
jp
hlt
or
loopne
and
fbstp
into
push
mov
mov
das
fiadds
push
lret
sub
mov
mov
dec
pushf
aaa
repz
jge
imul
push
mov
or
sbb
mov
xlat
xchg
dec
cs
add
es
cmc
mov
sti
pop
aas
cmp
mov
loope
std
aaa
cmpsb
jle
push
into
rcll
sbb
loope
jmp
fwait
or
sub
push
dec
js
adc
arpl
pop
cvtps2pd
pop
test
sub
faddp
push
push
mov
jo
xchg
xlat
jl
mov
leave
shrl
jecxz
jbe
or
int
js
dec
push
pop
dec
les
lock
xor
int3
hlt
jae
mov
sub
xchg
sub
fistpll
and
fcmovnb
aad
or
add
mov
or
dec
pop
pop
dec
cmpsb
push
or
and
xchg
push
cli
lcall
repnz
inc
push
xchg
mov
mov
jo
pop
aad
inc
insb
add
xchg
xchg
jge
or
mov
mov
pusha
ret
xor
int
divb
push
inc
push
jo
subl
mov
and
or
addr16
invd
out
sub
aas
mov
adc
xchg
or
adc
xor
mov
pop
and
jmp
or
mov
cmp
pop
or
pop
test
pop
aaa
and
roll
stos
imul
inc
jnp
loopne
or
inc
add
adc
mov
enter
dec
sub
add
jecxz
xor
cld
out
or
and
pop
mov
loope
rclb
fiadds
or
jp
jb
or
insl
dec
enter
test
jl
dec
sub
in
data16
push
mov
repz
popf
add
dec
outsl
into
jmp
pop
or
push
pop
pop
cmp
jno
mov
lcall
add
push
iret
adc
cmp
push
mov
xor
repz
sbb
sahf
adc
add
lds
or
pop
lahf
aad
cltd
mov
aaa
ljmp
xor
stos
int
add
push
push
test
and
sbb
sub
jnp
lcall
xchg
adc
jo
cmc
popf
dec
lods
mov
out
into
xor
adc
ljmp
mov
push
int
loopne
pop
push
inc
and
or
xchg
xor
pop
enter
pop
or
loopne
mov
jmp
jne
mov
ds
or
jg
in
cmp
xor
mov
add
xchg
call
sbb
pop
or
and
js
or
loopne
in
daa
test
pop
adc
ret
mov
mov
lahf
aam
push
fwait
mov
push
inc
ljmp
xlat
fcomps
xor
test
jbe
sbb
repz
roll
stos
sub
es
fwait
inc
inc
xchg
jb
or
out
lret
in
mov
adc
lret
shlb
rorl
mov
jle
je
or
popa
aas
xor
test
jns
mov
fld
out
cmpsb
int
cs
or
dec
jg
xor
cli
rorb
lcall
int3
or
stc
dec
sbb
clc
xchg
or
repnz
test
cmp
sub
into
pop
test
scas
add
mov
inc
or
or
lods
out
loopne
testb
xchg
sbb
pop
xchg
call
js
out
jns
or
adcb
push
les
mov
out
xchg
mov
xchg
pop
xchg
push
cmp
mov
jg
daa
jl
or
pop
cmpsl
pop
push
stos
repnz
push
out
push
ret
add
loopne
or
cmp
rorl
xchg
lods
imul
sub
or
mov
push
sbb
or
pop
mov
cmp
sub
or
adc
int
add
std
pop
or
cmpsl
dec
or
push
mov
sbb
aas
sub
or
arpl
out
sub
sbbb
xor
das
loop
fucom
mov
sub
dec
add
sub
or
psubusb
hlt
outsb
add
pushf
ret
sbb
out
aaa
popf
fisttps
push
mov
aam
xchg
sbb
or
or
add
sarl
pushf
jmp
int3
lret
push
iret
movsb
cs
bound
cwtl
aad
test
into
lds
push
scas
es
add
int3
js
out
cmp
mov
add
or
aam
mov
mov
or
popa
sbb
push
and
xor
jnp
ds
dec
mov
int
or
fistps
cltd
mov
pop
xchg
push
or
jl
sbb
int3
adc
arpl
icebp
shlb
stos
rorl
jmp
jecxz
std
rcrl
xor
or
hlt
aaa
or
xlat
and
divb
sbb
cltd
or
jns
dec
orb
dec
add
fistps
es
or
out
faddl
in
cmp
or
jge
dec
test
push
out
or
clc
mov
or
ret
and
inc
push
decb
in
das
fcmovnb
cs
sbb
jno
or
pop
movsb
lcall
notb
fisubrs
xchg
aaa
or
jae
in
jecxz
xchg
push
data16
movb
mov
bound
test
dec
xchg
or
mov
inc
mov
into
pusha
rorb
hlt
or
and
push
enter
test
nop
pop
adc
xor
dec
pusha
sub
jno
idiv
or
pop
ficompl
adc
xor
xchg
outsb
sti
or
test
and
ljmp
jb
push
ds
cmc
push
jae
add
dec
jl
jg
out
lods
xor
pop
mov
sbb
sti
jno
outsb
int
mov
push
test
cmpsl
or
ret
or
xor
or
adc
pop
mov
push
xlat
or
out
movsb
data16
out
cmc
or
jns
cwtl
fdivrl
in
cli
jg
cmovbe
das
sub
scas
dec
cltd
mov
and
dec
and
je
mov
fdivl
sub
cmp
push
rcrb
xor
icebp
xchg
sti
lods
push
out
or
pop
js
pop
and
xlat
cmpsb
fwait
ret
jne
or
addl
inc
cld
mov
cmp
or
jae
test
ret
rol
call
mov
inc
icebp
sbb
cwtl
push
adc
in
pusha
cli
mov
and
adc
mov
cld
mov
and
gs
mov
sub
cld
jl
lret
lcall
shrb
and
lods
jl
xor
daa
xchg
js
rcrb
cmp
fnstenv
mov
or
insl
and
cmp
in
xlat
dec
pop
sbb
cs
xlat
mov
sub
lret
or
fwait
or
sub
lahf
mov
xor
xchg
movsl
mov
into
in
mov
adc
mov
mov
jecxz
lret
rolb
xor
jns
xor
add
mov
es
add
pushf
add
mov
sbb
sbb
lahf
sbb
xchg
lods
repz
sbbl
add
jecxz
bnd
repz
sbb
cmp
stc
jle
cltd
mov
push
or
adc
xchg
cmp
mov
jne
in
cltd
sbb
mov
push
push
xor
jecxz
add
add
lcall
subl
jle
xorb
and
mov
add
mov
or
mov
lahf
jg,pt
inc
cmp
loopne
inc
lods
adc
loop
xchg
icebp
mov
sbb
mov
push
hlt
sbb
fdiv
push
push
repz
jns
aas
cmc
stos
int
dec
jnp
cmc
add
pusha
dec
repz
sbb
pop
aas
aaa
xchg
jg
adc
outsl
sbb
sbb
imulb
pop
pop
mov
out
mov
stc
hlt
or
mov
mov
in
or
insb
jmp
cmpsb
in
fists
pop
mov
xchg
negl
int3
add
dec
lods
or
push
loopne
push
or
imul
jl
gs
mov
mov
add
mov
and
and
xchg
icebp
pop
jecxz
sti
push
fimuls
lret
add
mov
loop
push
aad
bound
cmp
loop
pusha
or
fcmovnu
add
dec
jecxz
push
je
cltd
pop
sub
pop
pop
jae
bound
out
test
ret
pop
data16
cwtl
xor
jg
data16
fwait
popf
cld
call
mov
popf
inc
ljmp
sbb
std
xchg
fwait
xlat
add
cvtdq2ps
lock
push
repz
mov
sti
mov
xchg
loop,pt
dec
adc
add
testl
push
popf
fwait
roll
mov
outsb
dec
jmp
push
repnz
test
jecxz
mov
inc
inc
fwait
cmc
jecxz
scas
shll
loop
cmp
loope
shrl
dec
enter
fdivrs
pop
cmp
daa
and
punpckldq
inc
xor
push
arpl
mov
nop
pop
adc
iret
int3
xchg
cmp
test
push
mov
inc
sarb
adc
fbstp
adc
fldt
push
incl
and
sub
ja
sbb
dec
stos
push
sbb
rcr
push
loopne
xor
addl
adc
jo
adc
aad
fstps
popf
lcall
out
inc
sbbl
cmp
cmpsl
cltd
inc
cmpsb
fsubl
pop
cmp
faddl
mov
push
mov
pop
mov
icebp
add
cli
and
aam
inc
mov
add
bound
scas
les
add
mov
push
cmp
and
adc
outsl
or
jmp
mov
lods
or
xchg
adc
or
aad
jmp
movsb
or
mov
xchg
xor
adc
scas
cmp
inc
jbe
push
or
xlat
loop
mov
inc
adc
rcll
dec
xor
add
movsl
ljmp
xlat
mov
cmpsb
adc
xchg
adc
push
and
je
mov
cmpsl
lds
and
xchg
jae
or
into
push
jbe
ret
test
mov
in
mov
cmp
shr
xor
mov
aaa
adc
dec
lret
mov
or
dec
cmpsb
or
jmp
xchg
jno
ret
out
xchg
xchg
cmp
push
jbe
cmp
adc
cmp
inc
sti
test
int3
lret
xchg
fisubs
mov
xchg
or
add
das
out
jne
subb
fmull
jmp
add
sub
repnz
dec
fldcw
push
jmp
or
dec
leave
sbb
jmp
dec
inc
out
addl
lds
sub
sbb
and
jb
pop
jns
sub
push
stos
out
mov
lea
mov
das
jmp
sbb
mov
int3
jecxz
or
jle
xchg
jbe
mov
xchg
dec
lret
inc
and
cmp
fidivrl
push
cmp
fidivs
xor
sbb
xor
jmp
lea
outsl
lret
or
mov
adc
jmp
cmp
call
mov
sub
and
cltd
inc
enter
push
add
mov
cmc
fsubr
mov
int3
aaa
add
lods
lahf
out
mov
pushf
inc
cmp
je
loop
nop
xor
xlat
popf
or
push
cmpl
lahf
inc
out
sbb
push
out
addr16
je
sub
clc
ret
lahf
std
xor
cmp
cltd
decb
xchg
es
std
fdivr
cwtl
sub
inc
out
inc
addb
pop
cmp
mov
xor
popa
aas
aad
pusha
ja
pop
mov
test
xor
adc
into
in
call
xor
cmpsb
fstpt
xor
lahf
mov
mov
adc
push
mov
pushf
sub
loope
push
leave
pop
fisttps
sbb
fisubrs
cwtl
add
aam
mul
or
or
mov
mov
cltd
push
into
pop
jecxz
push
adc
push
lret
mov
ficomps
mov
dec
call
test
sti
cli
lock
stc
ret
dec
or
call
jmp
or
jne
mov
mov
and
mov
and
or
lcall
sbb
inc
das
sub
dec
ds
inc
addr16
push
jl
cmp
xchg
negb
bound
decb
les
jae
or
movb
fistpll
daa
or
dec
sub
inc
cltd
jp
push
jo
ret
or
mov
jbe
pop
test
jne
inc
stos
movl
or
sbb
adc
or
test
cmp
mov
dec
repnz
orl
imul
add
dec
je
xchg
mov
fisttpll
dec
ds
repz
cltd
cmp
jl
ret
dec
dec
mov
xlat
cmp
sbb
ja
cltd
lods
cmp
xchg
and
movsb
jb
or
push
inc
add
sub
sti
sub
icebp
mov
test
arpl
add
ljmp
mov
push
lahf
jp
push
sbb
jns
lret
movsl
mov
or
pushf
push
mov
or
fistps
jae
add
mov
lret
ljmp
cmp
jae
jg
adc
dec
divb
inc
pusha
sbb
or
test
das
jne
and
ljmp
sti
dec
push
push
cmp
mov
sbb
pop
insl
push
or
push
xchg
in
fdivrs
push
movsl
jge
mov
and
cmp
scas
loopne
inc
fwait
or
mov
or
rorb
enter
testl
test
lahf
cld
in
xor
or
repz
mov
test
mov
xor
testl
nop
in
das
or
fwait
xchg
ljmp
cli
sub
or
jp
sbbl
add
adcb
rolb
enter
fwait
and
add
cmp
or
leave
add
or
mov
xor
mov
sub
in
jge
divb
fldl
stos
les
movsl
mov
or
sti
push
idivl
add
add
sub
mov
jb
imul
popf
in
rol
sbb
sbb
push
or
or
pusha
jns
inc
xor
or
xchg
mov
xor
mov
mov
enter
or
pop
xor
lods
or
sbb
mov
cmpsb
int
dec
cmp
xchg
and
adc
pop
sbb
jno
xchg
stc
jle
repnz
or
clc
jecxz
xor
dec
jp
aas
ja
or
inc
pop
inc
inc
mov
sub
pop
mov
aad
or
call
adc
test
dec
or
push
pusha
jae
popf
jge
in
or
repnz
lds
jg
adc
add
inc
mov
negl
into
adc
or
jo
pusha
sahf
popf
ljmp
outsb
jl
popa
mov
daa
loop
push
or
filds
shrb
imul
hlt
or
loopne
dec
cli
sarl
xor
cwtl
cmp
pop
or
jns
and
or
pusha
pop
daa
or
lcall
imul
jg
sbb
mov
out
cmpsb
fbstp
add
xor
push
or
inc
aam
mov
inc
mov
enter
cmpsl
lods
cmp
mov
or
xchg
pop
mov
sub
cmp
push
push
inc
bound
jno
add
xlat
popa
fimull
mov
shl
js
and
rclb
mov
scas
xor
repnz
xchg
mov
jnp
mov
sub
mov
cmpl
jae
adc
mov
fs
mov
scas
push
pop
cmp
movntps
outsl
push
inc
pop
add
movsl
sbb
lret
lea
aam
push
mov
or
push
sub
or
ret
aaa
rcrl
outsl
stos
or
or
mov
loop
fldt
mov
js
jp
sub
fadd
stos
int3
and
divl
jp
inc
lods
cltd
or
mov
adc
jle
or
in
dec
clc
lret
ret
or
sbbl
add
ljmp
jmp
sub
cmp
or
inc
sahf
mov
or
sbb
data16
cld
popf
and
adc
inc
xor
in
or
and
xor
dec
xor
xor
mov
sub
cli
add
in
and
outsb
pop
sbb
sub
xchg
or
enter
fisttps
mov
gs
aad
dec
and
jne
and
aam
das
xor
pop
mov
mov
add
inc
or
pushf
sbb
mov
je
popf
or
mov
leave
inc
pop
fistpll
mov
dec
aas
add
lods
inc
push
xchg
test
mov
ds
adc
das
mov
lret
lret
fmuls
mov
mov
cmp
andl
mov
add
sti
nop
stos
sub
jle
mov
pop
inc
rcll
sub
das
bound
push
xor
aas
sub
jle
add
fisubrs
pop
or
adcl
adc
cwtl
mov
mov
mov
lods
es
or
mov
lahf
and
xor
inc
or
dec
and
or
jmp
sub
out
mov
adc
xlat
xor
bound
xorl
enter
je
cmp
jno
jo
or
test
movsb
mov
jns
xor
add
sub
orb
lea
loope
inc
pop
int3
or
inc
in
jno
mov
sbbl
mov
inc
push
or
sub
push
pushf
jb
mov
sbb
xor
lcall
mov
lds
ret
into
pop
jge
cmp
dec
ficoml
xchg
scas
enter
mov
mov
inc
jbe
or
push
jl
ret
and
and
cwtl
or
xor
and
or
jmp
cld
or
or
or
pop
negb
push
loop
sub
pop
ds
rcrb
xchg
cmp
xchg
shll
or
push
dec
mov
inc
imull
mov
leave
adc
lahf
xor
stos
and
jb
out
mov
ja
sub
adc
out
or
ret
or
sahf
add
cmpsl
lods
mov
jne
jno
xor
in
nop
fwait
repnz
or
and
push
cmp
rolb
mov
mov
adc
shr
insb
std
or
sub
imul
iret
push
out
inc
in
cld
xor
mov
sbb
mov
cmpsb
lock
repnz
dec
or
fstps
lcall
xchg
aad
mov
xchg
cwtl
push
repnz
or
mov
add
push
cmpsl
mov
enter
ds
jmp
mov
or
and
int3
sub
lds
jo
inc
xchg
repnz
sub
mov
or
sbbl
mov
dec
ret
jg
push
pop
rorl
dec
test
stc
mov
and
dec
rorl
je
fcmovnbe
jb
push
mov
adc
inc
lods
xchg
inc
mov
mov
jecxz
and
push
ret
cltd
xor
push
fldt
enter
push
inc
inc
dec
orb
xor
in
jbe
ror
mov
popf
inc
lret
pop
push
xor
cld
or
mov
mov
xchg
loop
test
int3
jecxz
jge
test
add
push
lea
sub
jmp
call
addr16
mov
lcall
gs
mov
cld
bsf
imul
enter
or
lcall
add
loop
pop
add
cli
adc
cwtl
pusha
popa
or
jne
rorb
leave
int
movsl
xlat
and
mov
xchg
sbb
aas
rolb
inc
pop
ja
inc
out
cmp
or
enter
shll
je
or
xchg
xchg
or
hlt
pop
or
test
adc
jl
sbb
or
cli
imul
or
loope
sbb
cmp
fs
arpl
mov
cmp
sub
int3
lds
or
std
sbb
mov
ja
adc
sbb
dec
or
cs
push
push
into
mov
call
cltd
or
lcall
inc
dec
pop
dec
sbb
push
test
outsl
das
or
or
jb
clc
pop
cmp
mov
cwtl
outsl
mov
jae
or
sub
mov
sub
xor
mov
dec
fsubrl
lock
push
pop
loope
or
pop
rcrb
or
pushf
lret
jnp
sub
or
mov
sbb
fsubrl
mov
cmp
cmp
push
push
sbb
cwtl
adc
fdivrs
jp
in
mov
push
cmpsl
and
push
mov
dec
inc
or
cmpsl
ja
jge
out
imul
dec
adc
xlat
ficomps
lret
or
ret
int3
or
xchg
sub
lret
sbb
pushf
mov
xlat
or
jle
sbb
es
mov
andb
rorl
and
or
ljmp
lds
aaa
sub
sbb
add
push
jne
push
xchg
ja
pop
sbb
inc
dec
or
ficoms
ror
in
shll
or
cltd
imul
test
into
pop
dec
subl
cld
cmpsb
outsb
pop
jg
push
and
cmp
pusha
mov
dec
push
std
cwtl
data16
jo
push
scas
dec
lret
mov
lret
lcall
int
push
inc
testl
jmp
inc
inc
or
pop
push
int3
or
pop
add
nop
jl
or
dec
push
lahf
stos
pop
les
adc
int3
aaa
faddl
mov
adc
mov
cmp
or
sbb
dec
adc
mov
lret
insl
pop
or
ret
das
imul
je
sbb
and
jecxz
adc
subl
les
fsubrl
rclb
jmp
jnp
add
mov
sbb
sub
mov
lea
push
xchg
rorl
or
cmpb
inc
dec
mov
loopne
sbb
bound
sbb
imul
addb
call
or
sub
mov
mov
aam
adc
push
dec
leave
pop
or
xor
xor
jecxz
mov
rorb
cli
loop
or
dec
mov
leave
fs
cltd
or
sbb
or
clc
sar
bound
xor
push
outsl
dec
xchg
repz
xor
imul
adc
xlat
adc
jns
pop
imul
stos
arpl
jae
wrmsr
and
fldl2t
pushf
push
push
xchg
add
pop
or
and
sbb
lret
and
pop
mov
shll
or
fwait
call
jo
add
dec
mov
clc
decl
dec
stos
mov
insl
or
push
add
push
xchg
movsb
aam
mov
jb
or
in
insb
ljmp
test
mov
outsl
stos
adc
or
xor
or
fsubr
inc
insl
mov
std
jl
dec
xchg
xchg
loope
jge
aas
test
cmpsl
xchg
enter
mov
inc
or
inc
push
nop
or
xlat
inc
add
aam
in
push
or
sahf
sbb
jmp
or
clc
jno
in
adc
icebp
pop
ret
adc
ret
int3
aam
pop
jo
outsb
sbb
dec
inc
jnp
repnz
or
jo
or
sub
mov
adc
ret
iret
push
popf
push
add
push
lret
pop
dec
add
repz
pop
cmp
popa
adc
and
stc
push
popw
push
or
fsubrl
xor
imul
and
mov
rclb
push
xor
lods
lahf
cltd
jae
push
shll
iret
mov
in
pop
pop
sbb
mov
cmp
dec
add
pop
jge
cltd
dec
cmp
test
sub
xlat
repz
hlt
push
push
add
pop
push
mov
lcall
and
fdivr
or
mov
loop
sar
in
push
or
mov
lds
xchg
dec
stc
int
mov
mov
sbb
fldl
lahf
das
pop
cmpsl
xlat
or
sub
xor
push
int
or
sbb
xchg
push
or
lea
outsl
sub
jecxz
imul
dec
mov
mov
or
sbb
or
pop
shl
jg
adc
xchg
dec
cmpsl
cli
push
or
or
cmpsb
adc
push
loop
inc
pop
daa
mov
or
adc
nop
js
inc
add
movsb
jae
sahf
mov
sub
inc
cmp
mov
sbb
push
or
cmpsb
or
and
test
rcrl
and
sub
cmp
sbb
jno
dec
cmpsl
repnz
cmp
or
pop
push
out
or
push
add
xor
shl
jecxz
cld
xchg
jmp
repnz
rdmsr
imul
popf
lret
cs
sbb
cmpsl
or
inc
or
rol
fwait
out
cmp
or
cmp
sub
cmp
lret
repz
cli
xchg
inc
and
sbb
add
fucomp
enter
ljmp
js
inc
or
mov
xchg
or
jecxz
imul
push
in
mov
dec
lcall
push
jge
jmp
sub
cwtl
xor
lret
fisttpl
push
rcr
or
pop
cmp
les
stc
orl
addr16
sub
push
xor
cs
mov
inc
fwait
or
test
ljmp
mov
mov
shrl
clc
in
dec
mov
sarb
sub
mov
lods
inc
test
and
dec
pop
adc
dec
dec
stos
fs
aam
addl
or
in
push
lods
xchg
and
sti
lcall
and
pop
test
inc
lret
cli
fmull
push
xlat
mov
leave
rolb
outsl
pop
xor
jnp
cmp
cmp
add
insl
inc
sbbb
mov
or
dec
jnp
add
in
pop
mov
xchg
adc
out
cmp
or
jge
add
adc
lret
mov
add
adc
jbe
or
jg
sub
aaa
cs
or
cmp
lds
sbb
mov
or
pop
pop
push
js
or
les
jmp
cmp
or
cmp
icebp
sbb
fcoms
sbb
dec
ret
jbe
push
loopne
jb
leave
and
jae
loop
scas
or
das
ficoms
fdivrl
jne
popf
adc
pop
fldl
hlt
dec
lods
ja
out
ds
nop
iret
cmp
pop
pop
jmp
fwait
mov
ljmp
pusha
xchg
fcompl
or
in
test
scas
cmp
xor
dec
ret
pop
rorl
or
std
sub
fsubl
les
cmp
xchg
jne
xchg
inc
jmp
test
sbb
cs
pop
xchg
xchg
mov
xor
in
pop
jo
inc
cltd
sbb
sub
add
mov
dec
dec
xor
adc
inc
xlat
int
insl
test
pop
imul
sbb
dec
adc
sub
fbld
sahf
inc
xor
and
cmp
add
and
arpl
adc
daa
sbb
cltd
push
xchg
imul
shlb
xor
test
cli
sahf
mov
lret
or
aaa
push
mov
mov
adc
ficomps
or
shll
ret
inc
mov
or
push
and
pop
sbb
sbb
dec
or
cmpl
sbb
pop
inc
aas
mov
sub
or
or
ljmp
lods
push
mov
push
adc
inc
mov
sbb
out
lret
mov
hlt
or
rolb
rcll
inc
call
jmp
push
ds
sub
hlt
rclb
sbb
popf
or
and
test
in
add
ret
lahf
or
jno
or
push
pop
cmp
inc
mov
aad
jecxz
imul
out
or
mov
and
or
call
les
aam
inc
xor
push
int3
insb
jmp
inc
inc
lea
sub
sub
mov
or
adc
mov
jmp
jno
ja
sahf
mov
push
mov
adc
repz
lahf
ljmp
repz
jle
movsl
cltd
or
rolb
lret
test
jg
add
in
adc
inc
xor
int3
adc
fildll
subb
or
sbbb
mov
repz
pop
cmp
psubsb
imul
sbb
movsl
push
cs
in
dec
or
sbb
jb
lret
or
rcrb
mov
clc
xor
push
rcrl
mov
ljmp
xchg
jnp
mov
jmp
sub
or
xchg
add
pop
dec
lcall
inc
xchg
scas
cs
loopne
pop
dec
or
sub
arpl
aaa
jp
sub
xchg
add
mov
sbb
gs
out
mov
or
xchg
mov
push
js
add
movsb
adc
cmpsl
dec
in
inc
ja
fistpl
out
je
mov
xchg
inc
mov
mov
or
pop
loop
fldz
enter
pop
or
out
cwtl
xchg
jb
shll
and
sbb
cmc
mov
pop
orb
sahf
push
or
addr16
lret
dec
inc
inc
sbb
cmpsb
mov
nop
add
aam
mov
or
cs
pop
aaa
rcrb
push
or
ljmp
or
inc
pusha
mov
or
fwait
leave
adc
or
xchg
xor
icebp
enter
repnz
sub
push
pushf
sub
cmp
gs
cltd
repnz
arpl
or
and
rorl
ss
xchg
sbb
cltd
adc
mov
cmp
lret
imul
out
pop
or
cmc
les
push
adc
xor
mov
cmp
sbb
inc
xor
out
pusha
xor
cmp
jno
test
sub
add
sub
cmp
pop
cmp
or
idivb
add
mov
les
cmp
les
inc
dec
jg
or
cmpsb
add
sbb
cmp
aaa
loop
push
dec
ljmp
js,pt
pop
repz
push
sub
push
jbe
pop
xor
mov
je
je
js
jle
push
or
adc
jle
or
hlt
cmp
cmp
ds
dec
cmp
cmp
push
xor
clc
add
ss
or
movsl
cwtl
into
push
xor
cmp
js
push
and
xor
xchg
jne
js
ljmp
imul
les
test
fisttpl
xor
movsb
test
leave
lods
aaa
mov
in
cmc
mov
scas
stos
cmpsb
lret
imul
js
jle
jl
ljmp
mov
nop
cmp
or
sub
xor
das
xor
jp
push
ds
xor
or
mov
testb
inc
cltd
xchg
test
mov
sub
cmp
ds
dec
push
cmp
cltd
ljmp
pop
xor
or
mov
fistpl
xor
ljmp
xor
add
ss
fisubl
cli
cmpsb
mov
jne
aam
loop
leave
aas
lds
push
mov
fimull
or
data16
cmp
add
mov
xor
mov
aaa
js
jle
push
pop
xor
lea
jle
dec
sbb
inc
and
cmp
add
rol
xor
js
jnp
inc
xchg
pop
and
adc
inc
push
sbb
sbbb
es
clc
cs
add
out
push
push
imul
cmp
lcall
stos
cmp
sub
les
cli
mov
cmp
sbb
out
pop
shrb
and
icebp
ret
js
jle
maskmovq
divl
pushl
add
pushw
xor
repz
cmp
cmp
cmc
out
sub
add
add
mov
mov
gs
mov
test
mov
dec
cmp
out
shlb
mov
lcall
in
mov
dec
push
cmp
mov
mov
sbb
xor
ds
lret
mov
sub
xchg
out
lea
xor
xor
xor
andl
xor
cmp
jle
push
adc
and
cmp
cmp
js
jmp
push
jecxz
sbb
out
enter
push
lcall
js
adc
js
xchg
push
mov
xor
sbb
js
in
push
xorl
lcall
mov
push
or
adc
push
jns
add
push
stc
adc
push
neg
bsr
push
xadd
neg
call
rep
lock
lret
in
pusha
aas
or
cmp
or
hlt
test
sub
adc
das
push
shr
adc
push
arpl
icebp
daa
test
imul
dec
rclb
cld
cld
push
arpl
adc
mov
xchg
shll
push
xor
inc
jecxz
repnz
mov
push
aaa
movb
lea
jne
jmp
push
mov
cmp
clc
xor
add
pusha
or
jmp
push
repnz
pushf
pushf
lea
jne
pushf
movw
jmp
pushf
movw
lea
je
test
add
pusha
push
lea
jmp
mov
icebp
jmp
fneni(8087
imull
or
jmp
mov
xor
mov
or
insl
notb
hlt
out
push
xchg
sbb
push
int3
add
sbb
pop
std
mov
mov
cmc
xor
xchg
dec
in
jns
push
mov
test
xchg
sahf
sub
adc
or
jecxz
dec
or
iret
mov
mov
sbb
xchg
pop
rcll
dec
loop
hlt
and
xor
out
adc
jae
push
rcll
subb
ds
call
sbb
add
out
inc
push
push
mov
popa
leave
sbb
xchg
testb
pop
cmp
lret
in
jbe
jle
jb
dec
les
hlt
mov
cmp
jo
hlt
cli
push
cmp
aas
xor
das
outsb
rcl
popf
aam
movl
andl
ss
ret
out
repz
pusha
push
jb
into
scas
fcompl
mov
arpl
cvtps2pd
add
push
js
xchg
sti
out
stc
sahf
andl
das
ss
lods
jecxz
enter
or
dec
sub
pop
add
cmc
aas
cltd
mov
repnz
stos
mov
rol
xor
mov
pop
fadds
rcll
xchg
push
push
jns
addr16
in
push
push
or
ret
ret
xorl
mov
out
mov
mov
fmull
scas
les
xchg
daa
sbb
pop
pop
xchg
inc
iret
dec
clc
jo
mov
mov
inc
in
xchg
cld
mov
inc
adc
out
push
sub
or
mov
sahf
mov
popf
push
xchg
cld
int
out
sub
fstps
sti
cmp
pop
push
cmc
sbb
cmpb
mov
ret
mov
ret
dec
repz
or
in
mov
jo
push
dec
dec
leave
add
mov
add
pushf
jmp
cmp
jmp
cmc
test
pushf
lea
je
cmc
setl
add
bsr
mov
test
pushf
clc
add
bt
bt
movb
mov
test
mov
bt
test
stc
pushf
cmp
jmp
pop
pop
dec
in
js
inc
and
data16
fisttpl
mov
daa
xor
int3
dec
ja
shlb
dec
subl
cltd
xchg
pop
adc
lods
fnsave
push
lahf
inc
je
shlb
rorb
mov
dec
inc
add
rcr
bt
mov
clc
add
cmp
test
mov
clc
jmp
lea
jae
pushf
pushf
jmp
pusha
lea
jae
cmc
cmc
clc
add
jae
pushf
pushf
pushl
mov
movw
lea
jmp
dec
jmp
pushf
cmp
movzbw
lea
lahf
bswap
not
mov
pushl
pushf
pushf
lea
ja
jmp
sub
cmc
clc
neg
cmc
cmp
setbe
movw
movzbw
lea
bswap
jmp
pusha
test
mov
shld
shr
mov
bt
jmp
jno
jb
out
rolb
sub
lret
sub
aaa
or
rcrb
testl
adc
dec
xchg
stos
mov
lock
jge
and
fnstenv
arpl
in
aaa
gs
push
xor
lods
jg
pusha
test
in
in
out
sahf
cltd
sub
sub
es
inc
divb
jo
insl
imul
or
out
nop
sarb
pop
push
into
imul
cmpl
pop
xchg
mov
and
mov
roll
shr
lock
pusha
call
cltd
mov
lods
push
popa
and
leave
incb
das
sbb
addl
mov
push
aaa
bound
scas
sub
inc
mov
push
ss
fscale
fldenv
outsl
lock
mov
jns
xor
aad
fdivrs
stos
jecxz
jmp
outsb
and
mov
xchg
pop
ja
mov
mov
pop
or
adc
in
imul
je
and
insb
sbb
inc
push
mov
loop
js
sbb
sbb
push
lret
rcrb
mov
rorb
test
sub
je
or
push
cltd
dec
mov
cmpl
ret
sbb
mov
jno
push
xchg
xchg
lcall
rep
pop
or
xchg
rorl
nop
repz
jmp
pusha
xorb
push
aad
sub
jmp
xor
call
rolb
stc
loopne
cmp
in
arpl
into
inc
xchg
mov
ss
push
inc
lods
out
das
movsl
pop
fidivrs
push
popf
inc
push
mov
pop
gs
or
ret
add
popf
clc
push
andb
fstps
aad
mov
mov
data16
pushf
mov
adc
fcompl
aad
dec
dec
adc
ljmp
or
shlb
cmp
cmp
jl
js
inc
sub
sub
icebp
dec
pop
pop
add
jae
not
mov
call
push
push
movl
pusha
movb
pushl
pusha
lea
jmp
bt
bt
add
clc
movw
call
bnd
jecxz
js
mov
stos
fs
sub
sub
sbb
push
fcmove
mov
shlb
dec
and
push
rorb
in
inc
lods
or
sahf
pop
mov
and
and
add
adc
iret
cs
cmp
sbb
jge
push
sahf
push
sbb
xchg
sub
push
sarl
ret
pop
call
in
rorl
push
mov
lds
aas
sti
dec
leave
dec
popf
mov
inc
dec
cmpsb
lret
in
outsl
lods
push
int
rcl
xorl
jnp
das
sbb
mov
outsb
add
or
ja
loop
mov
pusha
push
pop
mov
out
lret
push
jne
stos
sub
imul
inc
sahf
push
push
jecxz
decl
pop
push
repz
push
sub
push
mov
mov
lock
sub
adc
fsts
int
ds
loopne
icebp
ds
mov
pop
inc
jle
std
arpl
paddq
jmp
hlt
pop
mov
inc
pop
pop
adc
push
iret
jno
jno
adc
loope
sub
loop
shl
scas
icebp
pop
jnp
popa
ds
sarl
outsl
jo
mov
test
push
add
push
push
mov
aas
xchg
test
dec
inc
dec
lea
adc
and
push
aad
sbb
ret
loop
mov
add
add
pop
loope
js
pop
push
mov
into
jge
loopne
rorl
sbb
clc
scas
dec
or
icebp
mov
fcmovnb
repz
mov
js
sbb
pop
sti
int
jl
mov
mov
pop
movsl
into
mov
movaps
mov
pop
mov
and
into
mov
inc
mov
stc
jg
jmp
ficomps
sbb
out
shll
dec
leave
ja
outsl
cmp
mov
add
adcb
fs
jns
push
lea
jb
cmc
bt
test
cmp
cmpb
pushf
lea
jne
shrd
or
mov
bsr
mov
cmp
add
push
movzwl
ror
mov
jmp
pushf
pushf
inc
lea
inc
inc
jmp
data16
out
popf
inc
outsb
popa
add
inc
dec
std
out
inc
cmp
fistl
je
xor
xchg
roll
pop
fnstsw
mov
daa
sbb
push
leave
xor
adc
test
fdivrs
jo
cwtl
addl
adc
mov
pop
std
pushf
in
pop
jmp
pusha
jmp
or
jmp
push
pop
mov
pushf
pushf
push
pusha
pushl
ret
lea
jae
push
mov
lea
jne
jo
pushf
stos
movw
lea
jmp
not
bt
mov
or
pushf
rcl
mov
shr
mov
movl
pushf
call
xor
out
and
ja
je
pop
push
fisttpll
insb
sub
repnz
lea
mov
movsl
sbb
jae
or
shl
xchg
mov
jge
stos
int
repnz
push
mov
push
add
popf
inc
imul
xor
jae
sbb
inc
int
or
adc
push
or
imul
xchg
test
pop
dec
ret
adc
pushf
dec
jmp
js
inc
and
push
popa
loope
mov
sbb
in
pop
pop
mov
shlb
and
mov
nop
cwtl
mov
push
xlat
imul
add
and
pop
sti
jno
movsb
scas
adc
pop
sub
jae
push
add
sbb
add
xchg
inc
gs
inc
sub
push
or
sub
xchg
pusha
push
adc
sarl
cld
out
cmp
sbb
rcrb
mov
xchg
aam
mov
or
and
and
mov
jge
add
test
cld
and
xchg
test
adc
aad
js
push
js
and
pop
pushf
push
lea
jae
clc
jmp
bswap
lea
lea
jmp
iret
dec
sbb
out
mov
or
xorb
fidivl
inc
jb
cmp
ja
hlt
orl
data16
ljmp
jmp
adc
pop
xor
mov
add
jl
xor
jmp
add
xchg
jmp
xchg
les
scas
rclb
cmpsl
pusha
imul
or
pop
pop
loop
jnp
sub
fsubs
dec
and
push
test
dec
pop
in
xchg
aam
ja
mov
push
jl
jp
mov
mov
mov
stos
test
hlt
ds
cmpsl
xor
int3
sbb
sar
cmp
adc
mov
in
fs
jno
or
sub
lods
lock
enter
sbb
fisubl
push
xlat
pop
add
xlat
jl
scas
inc
jns
popa
push
scas
xchg
clc
xchg
icebp
movsb
and
fsubrs
lret
movsl
inc
hlt
fisubrl
xchg
dec
mov
or
sub
lcall
cmp
stos
sti
mov
inc
icebp
repz
jp
add
dec
addr16
or
loop
leave
mov
lret
lcall
jp
shrl
and
add
test
gs
xor
orb
sub
add
mov
idiv
pushf
pushf
movb
lea
jb
pusha
pushl
ret
pushf
mov
setge
mov
bswap
not
call
lea
je
test
add
push
mov
pushl
mov
bt
pusha
add
stc
jmp
bt
call
mov
pusha
mov
mov
call
popf
mov
cli
out
jl
movsl
push
jns
ljmp
fdivr
call
ja
cmp
in
or
push
jnp
pop
cmp
inc
stc
or
shll
xor
sarl
jbe
mov
pushf
aad
or
add
jbe
sbb
push
dec
adc
inc
add
xchg
push
add
mov
enter
ret
mov
dec
dec
pushl
inc
mov
pusha
call
adc
inc
sti
out
pop
dec
push
inc
sbb
jmp
mov
jg
push
cld
push
scas
in
pop
jp
mov
test
xchg
testb
xchg
popa
sarl
out
movsl
xor
fisubrs
leave
mov
push
mov
repnz
cld
cltd
jl
mov
out
xchg
xchg
adc
ret
fucomp
hlt
gs
sub
fsubrl
loopne
je
add
ret
pop
dec
int3
outsb
cs
mov
lods
les
jbe
std
cmp
cmp
shl
cmpsl
repz
out
dec
lcall
outsl
test
mov
sub
jbe
lret
dec
sbb
test
cld
lcall
mov
xchg
pop
jo
out
je
pop
pop
xor
jne
cmp
sub
outsl
clc
push
jae
pushf
and
jl
xchg
mov
cmp
pop
adc
outsl
test
mov
mov
addr16
mov
jg
adc
bound
inc
ret
xorb
arpl
pop
clc
out
mov
dec
das
xchg
jl
bnd
int
jnp
xchg
rclb
xor
dec
lea
sub
push
mov
jge
cmp
xchg
sahf
inc
addps
ja
pop
push
rsm
lds
mov
bound
mov
hlt
lcall
icebp
pop
iret
xchg
and
mov
sbb
pop
aas
add
outsl
hlt
xchg
lock
test
out
pop
es
ss
fdivl
into
sbb
xor
mov
jns
pop
test
pop
sbb
mov
out
or
pop
int3
mov
in
sbb
mov
pop
pop
adc
xor
add
mov
cmpsb
int
cltd
mov
xchg
mov
sbb
dec
push
mov
and
mov
rcr
lcall
leave
sbb
out
mov
fdivl
pop
jge
and
arpl
test
push
add
fstps
icebp
mov
fwait
and
cmp
dec
nop
divl
pushl
pop
hlt
test
or
add
rolb
stc
out
fcoml
pop
sahf
cs
ds
aam
adc
test
push
sbb
adc
pop
cmovo
neg
stos
rcrb
xchg
pushf
cmpsl
out
dec
pushl
add
lret
fcompl
aam
xchg
jl
push
ret
mov
fsubr
or
fistpl
mov
add
into
filds
lock
aas
je
or
add
add
sub
ds
add
adc
cmp
and
lods
mov
idiv
pusha
lea
jg
pushf
adc
jmp
add
add
add
shr
shld
shr
btr
bts
mov
mov
shl
bsf
and
add
push
bswap
bswap
mov
mov
pushf
pushl
pushf
lea
jbe
push
seto
jmp
sub
js
sub
pop
adc
loope
mov
push
sub
mov
jnp
sar
repnz
fadd
dec
rorl
jl
cmp
adc
cmp
adc
fcompl
add
add
mov
lea
lea
bt
pushf
sub
push
pushl
popl
clc
pushf
cmp
jmp
bt
clc
clc
neg
pushf
bt
push
cmp
jmp
test
not
jmp
inc
adc
mul
js
dec
aas
xlat
adc
cltd
stc
out
aad
lret
rcrb
sbb
mov
ja
dec
xchg
shr
jmp
popa
aaa
jge
js
push
dec
push
jge
cmp
jbe
ficompl
rcll
test
mov
dec
xchg
jo
in
cmp
sub
mov
rorl
subb
into
data16
pop
push
in
adc
mov
adc
push
mov
insb
xor
int3
icebp
int
lea
sbb
jecxz
idiv
pushl
repnz
pushl
pusha
pushf
jmp
sub
clc
repnz
push
pushf
lea
jmp
call
lea
jbe
movzbw
bswap
mov
or
movsbl
shl
cmp
add
inc
shl
bt
mov
pushf
and
cmc
bswap
add
bswap
movl
shld
mov
test
jmp
jmp
jae
clc
bt
stc
xor
jmp
jo
sub
out
mov
jo
sub
mov
jo
mov
call
adc
add
lds
push
jae
sbb
and
dec
lock
xchg
jmp
cmpsl
lods
pop
xchg
adc
stos
aam
sub
adc
jmp
stos
insl
stos
or
or
cwtl
mov
fiaddl
test
push
or
sbb
imul
mov
push
jmp
cmc
jmp
icebp
cmpsl
repz
out
dec
xchg
int
cltd
sahf
mov
mov
jno
cmp
outsl
cmp
test
repnz
stos
dec
pop
ja
xor
add
push
rcrb
mov
adc
push
pop
shlb
jnp
retw
lahf
sub
stos
push
inc
pop
lret
xor
in
add
fistps
arpl
inc
and
imul
imul
rclb
cmp
lahf
push
je
scas
ja
push
lea
jne
bt
not
mov
bt
test
add
test
jmp
lea
je
movsbw
mov
push
shld
add
lea
jns
btc
neg
mov
cmc
test
call
cmp
pushl
lea
jae
shr
cmp
stc
mov
adc
shl
shr
xor
mov
lea
mov
mov
pusha
call
jmp
add
call
mov
js
mov
or
je
jnp
xor
movsb
mov
mov
repnz
adc
ror
clc
xchg
jae
or
and
xchg
push
clc
div
cltd
jecxz
aaa
fidivs
arpl
pop
fnstcw
pushf
mov
test
mov
mov
inc
inc
std
mov
repnz
adc
cmpsb
scas
les
int
inc
repnz
sbb
cmp
stc
sbbl
pop
cmp
push
inc
push
dec
xor
inc
dec
dec
add
fwait
iret
repnz
mov
mov
cmp
inc
pop
cmp
out
clc
and
push
sub
and
cli
jl
or
popf
mov
shrb
std
test
xchg
inc
cmp
loope
das
test
cmp
fwait
mov
sub
out
jo
ds
dec
adc
dec
jae
push
inc
bound
or
push
das
rorb
ret
jns
lock
daa
cmp
adc
arpl
mov
movsl
sbb
mov
add
xchg
xchg
xchg
sbb
fldenv
sti
xor
push
inc
loop
negb
push
sarb
fistl
popa
pusha
dec
cwtl
lahf
push
xor
mov
mov
int
mov
and
mov
cmc
faddl
fdivl
andb
fcoms
je
inc
cs
inc
lods
jl
movsl
jo
or
push
cmp
xchg
add
pushf
mov
mov
clc
dec
mov
jae
xchg
movb
pop
mov
pop
mov
ret
in
sahf
or
mov
push
add
adc
sub
mov
xor
mov
insb
leave
mov
cltd
mov
in
inc
mov
sbb
fistps
jl
push
cmp
xor
rclb
stos
inc
xchg
jb
ja
jne
icebp
bound
sbbb
les
shlb
jmp
mov
shll
ret
icebp
add
into
ret
adc
mov
movl
push
push
movl
pusha
lea
jmp
push
movl
push
pusha
jmp
add
call
lea
je
cmp
test
add
bt
pusha
stc
cmp
pusha
lea
jb
test
pushf
call
call
sub
cmc
pushf
mov
repnz
push
pushf
pusha
movb
lea
jmp
lea
jb
inc
push
pusha
lea
jmp
not
jmp
or
pushf
lea
je
bswap
movzbw
lea
pushf
movzwl
pushf
mov
movw
pushl
lea
bswap
push
mov
mov
jmp
pop
pushf
pusha
mov
movl
push
movl
movl
pushf
lea
jmp
lea
call
call
cmp
bt
test
call
sub
not
mov
rcl
lea
mov
bts
dec
dec
add
rcl
lea
shld
shr
cmp
mov
movzbw
shrd
add
movsbl
jno
jmp
lea
je
test
pusha
cmp
jmp
mov
lea
jmp
pushf
lea
call
jmp
pusha
mov
pushf
mov
pusha
mov
pushf
mov
pushf
pushl
ret
inc
add
addb
add
shlb
add
fs
add
mov
add
les
add
adc
add
mov
out
or
mov
in
inc
subb
push
lret
rolb
mov
cmp
sub
mov
movsl
lcall
mov
shrb
loop
cmp
adc
sti
loopne
mov
hlt
push
sub
mov
push
jmp
insl
imul
adc
add
adc
lahf
cmpb
sbb
push
movsb
les
add
add
inc
or
outsl
outsb
out
scas
and
jle
jle
aam
iret
call
sub
stc
neg
call
btr
add
shl
rcl
adc
adc
sub
btc
cmp
shl
mov
shr
and
adc
rol
mov
cmp
ror
adc
bt
add
bsf
add
add
not
pushf
pushl
rcr
mov
clc
stc
push
cmp
shr
bt
pushf
cmp
push
call
not
lods
test
bt
jmp
test
pushf
test
call
call
mov
mov
pusha
movb
lea
call
call
jmp
fs
out
xchg
pop
jnp
pop
sub
in
adc
xor
add
pop
movsl
mov
lods
or
jb
mov
lods
lods
inc
xor
push
dec
push
push
sbb
adc
sub
jae
repnz
outsb
ret
jecxz
stos
lcall
out
or
fs
jb
pushf
clc
cmp
clc
cmp
jmp
pushf
pusha
movl
call
inc
lea
pushf
push
pusha
lea
call
pushf
pushf
push
adc
movb
pushf
pushl
jmp
lea
jne
not
movzbl
lahf
mov
pusha
push
pushf
pushl
lea
jmp
pushf
pusha
call
inc
mov
not
pushf
not
mov
inc
call
addr16
jae
out
shll
and
sub
insb
xor
push
pop
mov
hlt
into
dec
int3
aaa
push
pushf
jns
jge
jne
mov
shlb
sub
mov
insb
inc
lock
call
sub
call
or
cmp
cmp
lods
stc
int3
out
mov
in
mov
sbb
ucomiss
inc
push
pusha
pcmpeqd
xchg
push
jo
or
adc
scas
mov
add
out
and
fbstp
xor
cld
adc
fs
sbb
mov
icebp
mov
loopne
mov
lret
daa
dec
mov
mov
push
pop
shll
mov
cmc
sahf
xchg
mov
scas
mov
aas
dec
add
mov
lock
shrb
pop
inc
jne
sbb
xchg
icebp
pop
jno
lea
call
jmp
push
rclb
cmc
fisubrl
inc
jno
jno
inc
sbb
les
cltd
je
je
dec
pop
int3
xor
mov
int
fnstsw
xchg
test
cmp
or
pusha
pop
sub
and
mov
push
loopne
jmp
movzwl
and
mov
pushf
stc
jmp
call
jmp
mov
lea
je
cmp
cmc
cmp
push
pushf
pushl
pusha
pushl
ret
cmc
not
test
mov
cmc
call
jmp
mov
popa
int
js
jno
or
sub
jo
jbe
sahf
and
fwait
inc
xchg
into
popf
cmpsb
in
cmp
insb
sub
jge
mov
fistps
dec
pop
pop
adc
push
jle
cld
pop
stc
pop
cmp
pop
xor
jmp
or
dec
cmp
pop
into
mov
divps
pop
ret
sbb
js
adc
call
xchg
mov
and
out
popf
inc
jle
mov
xor
push
inc
jle
push
std
cwtl
mov
or
nop
ss
add
std
push
xchg
cmp
inc
push
mov
movsl
icebp
fidivrs
xchg
pop
sub
int3
repnz
add
icebp
inc
add
cld
push
jb
jle
imulb
in
jnp
data16
inc
in
cmp
leave
dec
mov
jnp
idiv
cmp
or
aad
mov
sbb
adc
xlat
xor
pushf
sub
xchg
and
loop
mov
out
mov
jge
ljmp
mov
or
or
movsb
outsb
shlb
adcb
idivb
loop
pop
lea
inc
test
xorb
sub
icebp
inc
pop
or
and
xor
fstpl
in
pop
jo
add
iret
xchg
icebp
into
pusha
imul
push
lea
jne
pusha
stos
push
pusha
push
pushf
lea
jmp
aaa
popa
xor
or
pop
test
sbb
cmp
mov
mov
cmp
pop
and
cmp
or
movsl
mov
aam
push
ds
mov
pusha
mov
mov
mov
xor
std
jbe
retw
cli
mov
scas
xchg
cltd
xor
test
rclb
in
lret
ret
addl
jge
imul
enter
fcompl
lds
ljmp
ret
inc
cmpsb
in
insl
mov
movb
add
cmp
xchg
and
jl
add
ja
jp
fsubl
shrb
sti
jmp
notb
mov
not
pushl
call
jb
outsb
enter
sbb
mov
rol
daa
shl
xchg
roll
inc
cmp
adc
ficompl
out
lods
fidivrs
lret
loop
cwtl
jne
push
shlb
mov
cmp
dec
cltd
mov
divb
sbb
pushf
mov
data16
test
push
enter
jno
cmpsb
and
cs
push
and
mov
sti
out
xchg
in
pop
sahf
idivb
add
incb
rcr
mov
mov
mov
xchg
jnp
cmpb
pop
ja
dec
ss
add
out
fidivs
lea
jmp
call
stc
cmp
bt
test
mov
pushl
pusha
lea
je
call
lea
jae
push
xor
call
add
leave
out
mov
pusha
fcmovnb
jmp
out
stos
inc
test
les
add
mov
shlb
inc
ret
je
fs
jecxz
loop
andl
or
out
insl
mov
push
xor
xlat
nop
mulb
and
mov
in
pop
add
sbb
pop
pop
out
rcrl
sti
xchg
mov
int
add
jb
and
movsb
out
push
mov
lds
pop
xchg
sbb
leave
out
insl
fbld
mov
xchg
mov
lret
rcr
push
shll
fcompl
pop
inc
dec
xchg
mov
enter
jge,pn
rorl
add
pop
lcall
insb
fwait
pop
out
shrl
mov
pop
and
jb
or
testb
jl
dec
sbb
lret
sbb
lahf
adc
xchg
in
xchg
das
icebp
jnp
dec
mov
in
in
xchg
pop
fsubrs
std
loop
mov
in
stos
xchg
andb
stos
push
gs
ja
repz
fs
xlat
cwtl
dec
shll
jge
or
pop
push
sbb
pop
adc
pop
and
sub
jge
xor
movsb
lods
cld
fnsave
push
bound
test
ror
mov
cmp
and
test
cmp
pusha
cmc
add
add
cmc
cmp
add
pushf
pushf
dec
pushf
lea
jne
btr
jmp
push
pushl
mov
pushf
mov
pushf
pushf
lea
jmp
mov
pushl
call
jmp
movb
mov
mov
pusha
movzbw
bswap
mov
pushf
call
bt
cmp
test
pushl
lea
je
test
add
bt
cmp
bt
cmp
push
call
dec
pop
or
out
test
push
mov
xor
adc
movsb
xlat
xchg
out
jecxz
sub
mov
outsb
inc
jge
addl
subb
xor
mov
es
push
dec
popf
shrb
sbb
cmpsb
enter
out
inc
flds
sub
aad
mov
jo
inc
xchg
idiv
sbb
aaa
pop
xchg
adc
ret
mov
mov
adc
mov
iret
les
shlb
lret
bound
jb
jle
jp
pop
sbb
lahf
icebp
aam
jns
icebp
xchg
pushf
adc
lea
push
pusha
pushf
pushl
ret
cmp
call
bt
pusha
cmp
cmp
pushf
pusha
pushf
jmp
cmp
call
call
pusha
pushf
inc
pushf
call
mov
push
lea
je
call
pushfw
popw
and
pushf
mov
cmp
xor
push
push
call
cmpb
pusha
call
pushf
dec
mov
cmp
bt
push
shl
call
push
jmp
push
lods
clc
pusha
push
call
call
clc
scas
cli
out
mov
sbb
fs
jle
adc
xor
movl
mov
xor
inc
adc
or
pusha
inc
adc
push
add
rorb
inc
sbb
lret
jno
mov
fsubrp
jbe
ror
dec
xchg
add
pop
mov
test
sbb
cmp
das
out
lds
mov
mov
dec
adc
lock
cltd
popf
icebp
jno
int
aad
pusha
not
call
add
bt
mov
cmp
pusha
mov
jmp
call
push
push
add
out
mov
jb
inc
jne
ljmp
js
das
push
pop
dec
or
sahf
sub
cld
insl
xor
mov
xor
push
mov
push
xchg
dec
cs
ds
push
dec
bswap
cwtl
popf
xchg
sbb
lea
je
lea
movsbl
pusha
mov
movsbw
mov
push
lea
jmp
lods
call
movl
pusha
pushf
lea
jmp
pop
call
mov
jmp
movw
xor
movb
jmp
call
push
inc
ja
inc
dec
pop
cmp
dec
imul
testb
movsb
jp
inc
pop
lds
outsb
enter
prefetcht1
lods
out
sub
dec
adc
and
data16
cmp
mov
cs
sub
push
jb
jne
aaa
mov
and
mov
adc
jg
add
dec
pop
jl
ss
repz
mov
sub
push
das
bound
mov
push
push
xchg
popf
icebp
out
mov
lahf
ljmp
shlb
cmp
inc
enter
in
stc
cmc
xor
jmp
fcoml
inc
aaa
inc
inc
adc
sub
pusha
and
mov
insb
ror
xchg
insl
mov
aas
aas
dec
std
jecxz
ja
mov
fwait
pusha
jmp
pop
orb
adc
xor
cli
pop
pop
cmp
cli
call
enter
jge
xor
ret
mov
mov
int3
filds
or
add
jno
je
cmp
mov
mov
sbb
sub
test
pushf
stc
repnz
pusha
pushf
mov
lea
jmp
jmp
pusha
jmp
call
pop
xchg
vcvtpd2dqx
roll
inc
pop
push
out
sub
mov
movsl
mov
ds
inc
and
or
testb
mov
xor
pop
fdivs
cmp
fnstenv
push
je
fnstsw
pop
push
cmp
repz
sub
xchg
xchg
dec
sub
bound
lahf
sbb
lahf
rcrb
mov
dec
mov
testl
adc
hlt
mov
dec
push
int
icebp
into
les
repnz
jne
gs
xor
fs
insb
add
enter
jmp
mov
lea
call
pushf
jmp
push
xchg
shl
sub
test
cwtl
mov
sbb
outsw
test
lret
fdivl
popa
outsb
or
dec
pop
xor
pop
and
adc
movsl
fildll
repnz
sti
pushf
idiv
mov
sbb
xchg
sti
push
andl
aam
mov
ret
add
sbb
lds
dec
and
jae
scas
jns
je
xchg
push
in
jge
push
nop
jns
add
jo
loopne
mov
in
lret
push
ret
push
data16
int3
or
lcall
jp
stos
ljmp
dec
leave
pop
inc
jne
inc
call
jno
sbb
rcr
mov
mov
push
movl
push
lea
jmp
popf
cpuid
nop
call
mov
not
pushl
pushf
dec
jmp
push
pushf
movb
lea
je
push
lea
jmp
add
add
lahf
pushf
inc
shrd
xchg
pusha
lea
and
aas
sub
xor
pusha
pushl
pusha
mov
cmp
lea
movsbl
mov
das
mov
sbb
cmc
aaa
xor
lahf
mov
pop
lea
push
movw
call
movl
push
movb
call
sahf
push
add
js
mov
xchg
in
cmpsl
je
inc
addr16
addr16
ret
sub
mov
sub
and
ficompl
add
and
fdivrl
sbb
pop
adc
ljmp
sar
or
imul
je
xchg
out
xor
dec
out
or
pushf
and
push
insb
dec
sbb
jl
jg
lret
mov
stos
cli
out
pop
xlat
imul
adcl
cld
xor
inc
or
cmovbe
ja
sbb
aas
adc
add
xor
pop
dec
sbb
movb
lea
jb
clc
cmc
bt
cmp
jmp
cmpb
pushl
call
aas
imul
cmp
scas
sarl
cmp
sub
xchg
pop
dec
push
push
jp
pushf
aas
fcmovbe
mov
cmc
cmp
mov
mov
adc
jo
and
test
xchg
lea
jno
out
mov
mov
call
add
add
test
movzbw
lea
mov
clc
shl
cmc
mov
pushf
push
repnz
pusha
jmp
roll
or
pop
jno
push
xor
loope
pop
xchg
icebp
push
leave
cmpsl
jp
or
push
jo
and
or
cs
mov
jno
or
hlt
pop
xor
add
or
push
mov
int
insb
or
sub
sub
push
add
or
dec
rcll
or
pop
dec
or
popa
adc
jns
or
pop
arpl
out
bound
push
pop
sub
bound
pop
pop
push
pop
stc
shlb
mov
into
fnstcw
xor
jp
or
pop
sti
negb
insb
or
std
pop
jp
push
pop
lock
or
lcall
sbb
pop
jno
or
mov
dec
enter
or
aaa
sbb
in
bound
mov
std
inc
push
pushf
inc
filds
decl
mov
or
pop
pop
addr16
and
insb
or
ja
push
fisttpll
or
lods
pop
sub
stos
dec
adc
bound
pop
pop
dec
pop
setns
insb
or
lcall
pop
arpl
lods
pop
enter
dec
fnstsw
or
pop
sbb
mov
dec
pop
jns
or
pop
add
shrl
loope
pop
pop
fsub
jae
mov
scas
pop
or
xor
insb
or
push
aas
jne
jno
or
imul
insb
or
pop
fdiv
popf
xor
arpl
enter
popa
push
push
arpl
hlt
pop
jge
int3
rcrb
pop
pop
lock
sub
add
or
pop
orl
insb
or
pop
out
mov
sahf
jo
jno
or
push
xor
inc
cmp
bound
stos
pop
pop
mov
jp
or
pop
pop
mov
cmp
push
arpl
mov
imul
push
sbb
sahf
pop
cltd
js
jo
add
lcall
mov
clc
stc
cmp
pusha
call
xor
jmp
stos
pushl
pushf
call
jg
imul
js
jg
pop
dec
jae
outsl
js
or
mov
andb
rcrl
nop
pop
mov
roll
adc
std
mov
xchg
cmp
sbb
pushl
push
fs
pop
loop
jbe
push
scas
mov
pop
aad
leave
pop
ja
cmp
mov
inc
dec
jnp
gs
sub
xor
ss
ret
rcrb
mov
add
push
lret
and
out
loopne
mov
jae
ljmp
xor
cwtl
das
jle
pop
push
pushf
pop
or
jge
in
dec
inc
into
push
sbb
adc
sub
outsb
pop
popf
andl
push
cmpsl
pop
rcrb
push
inc
clc
fcomps
adc
sub
lcall
adc
aad
nop
xchg
fmulp
out
jbe
in
sbb
insb
sbb
dec
xchg
xchg
clc
popf
mov
push
sti
in
popf
pop
and
aam
xchg
les
pop
sbb
out
jg
inc
cmc
cli
cli
test
mov
mov
in
hlt
jne
mov
xchg
rclb
sub
scas
out
mov
lods
es
sub
and
mov
ljmp
xor
push
arpl
sbb
mov
ss
fcmovne
cmp
adc
into
ret
int
jge
cmc
jns
in
xor
mov
xor
lods
push
push
add
fwait
or
push
pop
fsts
inc
add
out
inc
xchg
rcrb
ret
and
xchg
mov
rolb
dec
nop
lcall
jbe
dec
lahf
out
lret
inc
inc
cld
imul
mov
inc
mov
jl
xor
xchg
cwtl
and
out
shlb
out
lds
hlt
divl
mov
or
addl
and
cmp
fs
mov
imul
mov
mov
ds
pop
adc
jno
ja
xchg
mov
shll
into
inc
ja,pt
push
scas
lods
sub
icebp
sub
outsb
dec
fs
cmp
inc
push
lcall
add
xchg
jbe
je
fbstp
sub
cmp
dec
les
adc
mov
int
test
popa
inc
dec
inc
in
lods
stos
mov
sbb
adc
inc
enter
add
pop
outsl
push
inc
inc
sub
aam
sub
sbb
lret
jno
fmul
and
mov
inc
mov
aam
ja
dec
xchg
or
jp
jae
push
push
xor
in
lods
or
clc
mov
dec
xchg
cmpsl
lods
push
test
xchg
jp
and
pop
adc
fstps
mov
dec
out
idivl
jns
mov
cmp
jge
mov
test
or
call
push
jle
mov
mov
jno
cmp
jae
gs
jmp
leave
inc
cmc
mov
fcomps
nop
mov
ret
clc
jg
call
push
xchg
inc
adc
ja
fsts
cmp
std
inc
mov
test
inc
inc
ret
sub
mov
jae
das
xchg
inc
sub
push
aaa
ja
ds
sbb
xchg
rcrl
loop
cmpsb
lods
es
mov
and
js
es
ficompl
dec
sbb
outsb
fdiv
fwait
inc
xchg
icebp
mov
dec
xchg
jnp
ret
sbb
nop
lret
or
rcll
in
and
pop
stos
scas
into
fistl
mov
jne
xor
add
cs
pushf
jmp
cmp
mov
mov
and
fs
add
add
call
insb
lds
jmp
jmp
movzwl
shld
shl
shl
rcr
mov
clc
cmc
cmc
add
call
ficompl
insb
fcmovb
xchg
fstp
jge
popa
insw
mov
push
jle
push
call
and
ret
inc
pop
fcomps
mov
jmp
out
lret
stos
imull
lods
popa
jmp
and
lea
call
bt
add
jmp
inc
inc
push
push
pushf
mov
pusha
push
jmp
jmp
lea
jne
bsf
lea
sub
test
rcr
sbb
aam
mov
rcr
rol
pushf
add
shl
mov
jmp
pushl
test
add
pusha
pushl
push
lea
jmp
jmp
neg
push
pushf
movw
cmp
movsbw
pushf
call
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
js
out
mov
jnp
lahf
call
fcmovnbe
je
sub
call
xchg
adc
sbb
sbb
cmc
out
test
mov
jmp
mov
mov
pushf
jno
jp
scas
enter
sti
sub
rcr
cmp
pop
pop
fnstenv
movd
jbe
cmp
dec
xchg
pop
lcall
xchg
sti
fsubl
pusha
xchg
pushf
jmp
shld
push
mov
rcr
or
call
pusha
movl
push
movl
pusha
push
lea
jmp
jmp
push
adc
js
dec
sahf
jbe
sahf
mov
cmp
shlb
push
xor
cmp
insl
push
jge
dec
ds
cmp
outsb
dec
dec
or
add
mov
cmp
pop
mov
out
add
mov
nop
sub
xrelease
sbb
jae
sbb
cmp
stos
cmpb
popa
movsl
adc
dec
jge
addl
out
xorb
loope
sti
inc
xchg
xchg
in
fwait
mov
xchg
repnz
ljmp
or
icebp
pop
xor
movl
pusha
mov
lea
jmp
call
lea
jb
push
cmpb
pushf
jmp
lea
jge
push
pusha
lea
jmp
cmp
insb
aam
js
sbb
sbb
inc
out
sub
adc
pop
xchg
jnp
jecxz
xchg
mov
clc
test
js
push
daa
push
push
ss
xlat
add
jo
fidivrl
movsb
push
jae
pop
push
sub
stos
inc
fs
pop
call
arpl
stos
jno
xlat
rclb
jnp
clc
pop
sub
into
mov
cmpsb
push
and
test
sub
cmc
repnz
mov
xor
or
push
adc
lahf
icebp
pop
stc
in
mov
arpl
inc
insb
insb
outsl
arpl
call
pusha
mov
add
je
mov
not
clc
rcr
test
mov
ror
jmp
loopne
mov
out
push
fsubr
movsb
add
push
inc
fs
cmp
je
mov
out
iret
enter
iret
aam
mov
inc
and
add
fistpll
and
out
imul
jecxz
mov
add
dec
int
and
mov
fnsave
mov
es
xchg
sub
ljmp
sbb
imul
movsb
add
mov
int3
test
pusha
push
mov
inc
ret
inc
adc
icebp
ds
or
sti
sti
mov
sti
pop
xor
xchg
lock
es
push
add
sbb
enter
cmc
insb
inc
imul
aad
std
or
outsl
lods
push
repz
push
dec
sub
dec
adc
addb
int3
dec
test
loop
jp
push
mov
and
mov
bswap
pushf
lea
mov
pusha
movb
push
movb
lea
jmp
lea
je
stc
bt
add
push
clc
jmp
xor
fs
js
xor
cli
xchg
repnz
fisubl
pop
mov
call
mov
clc
jo
lea
test
andl
mov
jmp
dec
jne
inc
scas
call
pusha
jmp
sub
call
or
shl
js
or
add
sbb
stos
jge
or
mov
mov
cmp
dec
push
aaa
jns
mov
pop
inc
and
or
inc
adc
jmp
pop
nop
mov
xor
add
cmp
mov
mov
and
push
daa
mov
add
push
xlat
xchg
pop
sbb
add
xchg
jg
test
xchg
es
or
rorb
add
inc
daa
push
xchg
bndldx
rclb
or
pop
js
je
add
fs
jne
jmp
jmp
push
push
bt
cmpb
call
pushf
lea
jae
bsf
mov
shl
xchg
sar
mov
neg
sbb
mov
test
sub
push
jmp
dec
dec
sbb
out
mov
xor
ret
in
mov
int
bnd
idivb
xchg
popf
fst
lock
mov
and
arpl
ljmp
ljmp
mov
jmp
sub
js
in
pop
push
scas
imul
std
ljmp
xchg
mov
cld
push
call
shrl
das
sbbb
ljmp
stc
shlb
pusha
push
push
fistps
xchg
push
shl
js
dec
xor
js
insb
pop
cmp
cmp
fwait
sbb
into
xlat
mov
test
lock
xor
push
adc
das
push
push
stc
cltd
repnz
bswap
daa
cmp
add
sbb
xchg
mov
adc
or
inc
aad
jle,pt
xchg
scas
ds
pop
add
push
push
and
dec
mov
xor
mov
mov
add
sahf
xchg
shrb
xor
pop
mov
push
cmp
pop
xor
push
pop
daa
pop
fs
bt
repnz
call
movl
pusha
movl
push
pushf
push
push
lea
jmp
jmp
lea
je
push
lea
je
bt
clc
test
cmp
call
sub
push
jmp
lea
ja
pushf
mov
lea
jb
cmp
cmpb
call
cmp
bt
add
push
jmp
lea
jne
bt
mov
call
lea
jae
test
pusha
push
push
cmp
mov
pushf
lea
jae
test
jmp
ss
shl
js
cmp
pop
inc
adc
push
or
mov
pop
jle
mov
and
jo
rcl
mov
movsb
in
xchg
rclb
and
pop
and
aam
mov
cmp
add
mov
inc
es
je
cmc
add
jmp
movl
pushl
pushf
movl
pusha
lea
jmp
push
inc
setns
inc
inc
call
movb
movb
lea
call
push
adc
call
cmp
mov
xor
or
inc
jmp
jmp
mov
call
call
mov
push
adc
mov
call
pushf
pushf
mov
movb
lea
jle
call
call
push
push
add
out
mov
lcall
or
hlt
stos
mov
dec
nop
dec
adc
orb
icebp
dec
xor
data16
out
add
adc
mov
mov
jne
add
push
insl
shll
rorb
insb
inc
sti
jl
dec
out
int
and
sbb
aad
and
jmp
lret
xchg
scas
mov
addr16
ja
adc
aaa
sbb
scas
cmp
sub
mov
mov
out
sub
xor
into
popf
addb
ja
add
repnz
or
rorl
sbb
jns
int3
rcrb
cli
or
jmp
push
xchg
inc
dec
out
mov
outsl
mov
mov
test
pop
sbb
loop
shlb
adc
mov
fidivs
or
popa
das
inc
js
add
pop
mov
lret
mov
in
jecxz
adc
jle
adc
js
mov
popf
fadds
cmp
out
push
jg
adc
subb
and
and
sbb
push
lods
push
stc
bt
not
bt
call
call
jmp
lea
jne
pushf
call
push
lea
jbe
rol
cmc
sbb
sub
rol
shl
movzbw
mov
adc
mov
shl
lea
bswap
add
bt
pusha
bts
sub
shr
rcl
mov
btc
pushf
add
pushf
movsbw
push
mov
jmp
add
sub
js
or
push
inc
adc
inc
aas
xchg
inc
inc
ret
and
rcrb
push
jle
loop
data16
sbb
fadds
addl
and
addb
mov
lcall
jle
xor
stos
in
daa
push
jae
xchg
push
test
scas
ss
arpl
inc
pusha
packuswb
ret
lock
jno
ja
jo
in
push
cmpxchg
scas
out
adc
or
popa
or
adcl
lahf
lahf
icebp
aaa
mov
lahf
mov
pushl
call
push
call
int3
int3
cwtl
sub
js
xchg
mov
repnz
iret
jmp
lret
shlb
jl
pop
inc
push
cmp
xor
mov
loope
mov
adc
cld
adc
scas
add
dec
in
pop
xchg
jge
sbb
mov
or
push
pop
jg
xor
pop
mov
lret
cmpsb
hlt
jb
cmpsb
lret
xlat
adc
and
push
mov
test
mov
pop
adc
lret
mov
out
iret
fmul
out
and
test
push
add
mov
cmp
loopne
cmp
or
mov
lahf
icebp
mov
xor
push
jne
call
sahf
sahf
lret
js
movb
mov
out
mov
out
shlb
add
xor
add
sub
xchg
in
icebp
lock
add
mov
push
insb
dec
sbb
imul
inc
and
shll
inc
and
xor
dec
add
push
push
push
lcall
movsb
mov
sahf
dec
jp
pop
and
mov
jae
mov
pop
call
jns
mov
mov
mov
jp
push
inc
add
or
lea
or
inc
xor
call
jecxz
repz
clc
pop
dec
dec
xchg
mov
out
scas
xchg
push
nop
cli
dec
movzbl
add
stc
cmc
movl
jmp
stc
push
mov
call
pushf
movl
call
ret
xchg
shrl
js
shll
and
lret
icebp
cmpsb
or
scas
mov
mov
mov
xchg
mov
pop
imull
add
out
cs
adc
addr16
push
adc
ret
adc
sub
pop
fdivl
aad
dec
fsubs
pusha
in
mov
push
mov
jecxz
sbb
or
stos
cmpsl
rol
lcall
mov
push
movb
insb
mov
cltd
test
cmp
inc
and
sti
bound
and
mov
jmp
call
call
push
lea
jae
push
push
jmp
test
mov
cmp
stc
mov
cmc
clc
neg
cmp
clc
pusha
test
add
movb
bt
bt
pusha
xor
jmp
lea
jae
xor
rcl
cmp
mov
sar
add
mov
jmp
lea
ja
rcr
add
mov
test
mov
test
pushf
stc
clc
cmp
pushf
jmp
mov
mov
out
sub
xchg
jp
lods
dec
loop
mov
pop
nop
inc
jbe
mov
cli
xchg
cmp
inc
fs
or
in
adc
or
pop
xor
push
xor
xchg
fs
sbb
pop
inc
lods
pop
and
arpl
sbbl
push
jo
inc
cmp
stc
aas
icebp
mov
popa
rorb
pusha
push
jl
add
sub
js
inc
cmp
ds
xor
sbb
cld
push
mov
adc
fsubs
out
in
jmp
mov
in
sahf
fiadds
mov
pusha
mov
loop
sahf
and
sbb
dec
sub
mov
jne
or
es
cld
icebp
mov
fxch
scas
push
repnz
arpl
fdivrl
cmp
testb
sub
pop
cmp
in
fists
dec
sahf
adc
mov
or
out
dec
dec
inc
loop
mov
mov
out
movsb
xchg
out
mov
imul
mov
inc
sub
and
jg
outsl
out
icebp
imul
fdivrs
xchg
inc
and
pushf
call
imul
gs
xor
cs
insb
add
arpl
out
shrl
inc
sub
aaa
xor
ljmp
and
sub
sahf
into
adc
icebp
add
adc
ds
into
and
daa
sub
jo
push
pushf
lods
int3
mov
jge
int
mov
call
arpl
repz
jo
pushf
pusha
movl
call
call
lea
jae
push
pusha
xor
jmp
mov
stc
repnz
pushf
pusha
pushf
lea
jmp
test
cmp
cmp
call
call
movl
push
pushf
movl
pushl
pusha
lea
jmp
pusha
bt
clc
add
pushf
ror
cmc
test
xor
push
pushf
jmp
dec
iret
fwait
es
cmp
int3
mov
lret
mul
repnz
cmpsb
ljmp
add
rcl
or
aaa
adc
adc
loop
repnz
out
mov
iret
dec
xchg
xor
push
sub
xchg
jae
out
outsl
cmpsl
mov
mov
jno
inc
push
shrl
cmp
testb
mov
push
mov
out
sub
int3
iret
add
popf
popf
cmpb
sbb
adc
mov
dec
inc
pop
xor
cli
in
adc
inc
cld
adc
ds
addl
aaa
jb
stos
sub
mov
push
jmp
imul
lods
jl
roll
mov
push
push
sarb
pop
push
aas
sub
outsb
sub
int
ljmp
dec
or
sti
add
ror
pop
pop
mov
jmp
cmpsb
lods
jbe
jns
xchg
push
sub
int
sarl
push
hlt
adc
pop
les
inc
lahf
lcall
xor
fidivrl
out
sbb
lods
ss
int
int
xchg
test
sub
in
adc
fcomps
test
dec
idiv
shrd
xor
stc
mov
sbb
clc
test
sub
shl
bt
call
inc
inc
pop
daa
out
mov
or
pop
mov
push
pop
insb
pop
push
mov
pop
sub
sbb
lcall
inc
push
les
jb
and
js
and
roll
inc
cmp
or
popf
div
lods
cwtl
cmp
mov
lret
js
mull
leave
clc
mov
bsr
shr
adc
add
call
mov
push
pushl
popl
pushl
pushf
pushl
pushl
ret
pop
pop
dec
and
js
aaa
sbb
cmp
xor
xor
or
push
aaa
push
and
xor
inc
and
mov
pop
push
das
movsl
repz
xchg
mov
jge
jge
aam
cmp
pop
lea
add
insb
cs
dec
pop
aad
add
repz
imul
test
xchg
and
xchg
adc
gs
rcl
pop
add
pop
jnp
pop
pop
inc
sub
out
or
js
hlt
push
inc
dec
hlt
jmp
das
adc
sub
scas
or
mov
fcmove
jle
leave
add
shlb
dec
and
add
clc
xchg
sbb
movsb
movsb
popa
scas
cs
iret
insl
xchg
adc
and
hlt
fstpt
insl
mov
add
mov
lret
add
sub
shrb
int
popf
or
sbb
int3
rol
jle
and
test
lock
jae
pop
mov
call
pop
sahf
cmpsl
jns
jp
arpl
lea
adc
xlat
push
mov
gs
scas
mov
sahf
jle
cli
loopne
subb
mov
fcoms
pop
xchg
dec
push
outsb
mov
sarb
sbb
dec
enter
pop
and
pushf
dec
cltd
lock
and
dec
cmp
adcl
xchg
xchg
dec
dec
xchg
push
fildl
insb
ljmp
mov
outsb
or
fsubrs
shlb
loop
das
hlt
jmp
ficoml
dec
push
rcrl
stc
loop,pt
repnz
popl
adc
ds
out
cwtl
mov
or
mov
data16
xchg
pop
jmp
movsb
dec
and
call
pop
rcll
std
aaa
loope
stc
cmp
jcxz
cmp
mov
icebp
outsb
sub
sbb
add
push
push
add
jnp
jmp
and
jno
insl
inc
int3
add
push
mov
inc
mov
adc
inc
inc
lcall
inc
mov
push
push
cmpsl
add
mov
into
movsl
mov
adcl
add
loopne
inc
pop
jmp
leave
pushf
jmp
movb
call
pushf
lea
call
call
pushf
mov
call
push
pushf
mov
jmp
lea
jne
pusha
bswap
movb
bswap
push
mov
pushf
movzbw
pop
pushl
lea
pusha
pushf
mov
pushf
lea
jmp
lahf
lahf
lret
and
js
out
ljmp
mov
jns
cmp
test
mov
sbb
lods
jb
cmc
adc
xchg
call
in
les
add
cmc
sub
sub
sub
or
sub
mov
xor
or
pop
mov
jb
add
jae
pop
cmp
push
cmp
inc
std
sahf
xchg
xchg
jne
not
cmc
push
stc
bt
and
call
jmp
mov
pushf
push
lea
jmp
push
jmp
xchg
not
mov
movzbw
not
repz
popl
pushl
call
pushf
pushf
mov
push
pushl
pushl
lea
jmp
jmp
mov
pushl
popl
pushl
pushl
push
push
lea
jmp
pop
push
movw
lea
jmp
pushf
mov
decl
push
pushl
movl
mov
lea
jne
js
push
pushf
push
mov
push
pushf
push
lea
jmp
pusha
pushf
mov
movsbw
mov
jmp
pushl
popl
pushf
push
push
movb
lea
jmp
shl
shl
daa
mov
bt
add
bt
mov
pusha
test
cmp
not
stc
push
not
push
bt
cmc
clc
sub
movw
call
jmp
pusha
push
mov
pushf
pushf
mov
lea
jmp
jmp
jmp
push
push
movb
mov
movb
pushl
pushl
lea
jmp
lea
shrd
mov
push
pusha
jmp
pushf
bswap
mov
pushl
call
pushf
popl
call
pushf
mov
mov
movb
push
pusha
mov
lea
jmp
mov
pushl
popl
movb
movb
movb
movb
lea
jmp
jmp
pushf
push
mov
pusha
movsbw
bswap
call
cmc
sub
pushl
push
jmp
bt
movsbw
mov
sar
cmc
cmc
mov
push
sub
pusha
test
stc
shr
pushl
mov
mov
jmp
call
movsbw
pop
rol
movw
lea
push
lea
jmp
xchg
pushf
pop
mov
jmp
pusha
push
mov
jmp
lea
rol
bswap
rol
pushl
lea
lea
push
mov
mov
pushf
lea
jmp
pushl
lea
jne
clc
xor
call
call
inc
mov
xchg
movsbl
mov
pushl
popl
bswap
movsbl
push
movzbw
movl
bswap
pusha
push
mov
movzbw
dec
lea
xor
push
movsbl
rol
pushf
lea
lea
pushl
pushf
push
mov
lea
jmp
pushf
popl
push
call
pushl
popl
pusha
dec
xchg
movl
jmp
pushl
pusha
mov
mov
pushl
lea
jmp
clc
movsbw
btc
mov
cmp
test
pushf
jmp
call
xchg
call
push
pushl
popl
xchg
pusha
movl
not
mov
mov
pushf
dec
pushf
dec
sub
dec
xor
rol
rol
push
pop
lea
movb
movl
push
lea
jmp
mov
call
lea
mov
movsbw
bswap
repz
popl
pushf
bswap
movzbw
mov
mov
movsbw
pusha
pushl
popl
movsbw
dec
push
pushf
movl
movsbl
xchg
mov
bswap
pushf
dec
pushf
dec
mov
call
pusha
pushf
mov
pusha
push
mov
call
jmp
rcr
sar
btc
btr
mov
or
btr
sub
bswap
add
bswap
and
add
cmp
sub
setnp
rol
inc
movzbw
adc
xor
sub
shr
sub
add
shl
bts
rcr
mov
stc
test
clc
pusha
add
jmp
pushf
pushf
popl
jmp
jmp
rdtsc
mov
bswap
mov
push
mov
lea
mov
mov
mov
mov
divl
push
mov
call
xchg
pushl
movzbw
pushf
pop
mov
pop
jmp
pusha
pushf
xchg
bswap
jmp
call
clc
add
pushl
mov
movw
movb
lea
jmp
jmp
push
jmp
call
sub
call
movl
pushl
jmp
cmp
and
stc
cmp
push
cmp
call
add
push
mov
push
push
lea
jmp
bswap
mov
push
bswap
movsbl
call
mov
movsbl
bswap
mov
movsbw
bswap
pushf
mov
jmp
rdtsc
cmp
call
jmp
clc
push
cmc
sub
call
inc
aam
aas
mov
pushf
sub
call
mov
lea
jne
pushf
pushf
mov
jmp
bsf
mov
cmc
add
push
pusha
lea
jmp
push
pushl
pusha
inc
rcl
setb
mov
rol
shr
xor
cmc
setae
sub
movzbl
sbb
test
xor
sbb
lea
pushf
dec
push
and
mov
cmp
test
cmp
cmc
add
jmp
push
pusha
pushf
pushf
mov
mov
pushl
push
push
pushl
ret
pusha
jmp
pushf
push
pushl
popl
pusha
pushf
push
mov
lea
jmp
pushf
pusha
jmp
mov
jmp
jmp
shl
sub
pushf
inc
setg
mov
test
shl
pusha
shr
clc
or
cmc
test
xor
call
pushf
jmp
bswap
xchg
call
bt
add
pushf
pushf
lea
jmp
mov
movw
jmp
call
pushf
btr
xor
movzbw
pushf
rol
adc
movsbl
lea
bsf
xor
sub
bts
movzbw
adc
mov
ror
btc
shrd
btc
mov
bswap
add
bsf
mov
pushf
clc
bsr
shl
xor
setbe
not
ror
mov
jmp
mov
call
mov
pusha
pushf
push
mov
lea
jmp
push
mov
lea
je
repz
mov
dec
push
xchg
call
bt
mov
sbb
neg
mov
stc
pushf
mov
clc
add
movb
pushf
mov
pushf
lea
jmp
jmp
inc
mov
rol
sub
shl
push
mov
jmp
push
mov
pushf
pushf
pushf
push
pushl
ret
mov
not
pushl
popl
movzbw
movl
inc
movsbw
lea
pop
mov
movzbw
lea
dec
stc
jmp
pushf
jmp
dec
btc
daa
mov
sets
neg
inc
push
mov
stc
bt
pushf
cmp
add
push
pushf
jmp
pushl
pushf
pusha
xchg
call
seta
sets
inc
rcr
xor
bsf
shl
add
xor
movzbw
and
lea
mov
bt
bt
pusha
clc
add
push
mov
pushf
lea
jmp
jmp
pushf
popl
pushf
pushf
pushl
popl
pushf
lea
jmp
jmp
sub
movzbl
jmp
push
and
mov
mov
mov
pushf
popl
push
jmp
bswap
push
push
mov
pushl
popl
not
jmp
lea
jno
pushf
mov
jmp
movw
pusha
push
mov
pushf
pushf
popl
call
mov
jmp
pusha
pushf
mov
call
call
jmp
mov
push
movb
mov
jmp
stc
clc
pushl
sub
push
xor
bt
cmp
mov
call
sub
call
push
pusha
mov
movb
xchg
bswap
movsbw
lea
lea
mov
pusha
movzbw
pushf
mov
pop
pop
movzbw
jmp
mov
pusha
not
call
add
shl
mov
sar
neg
movzbw
pushl
popf
movzbw
call
mov
clc
or
mov
movb
movb
mov
lea
je
cmc
sub
push
cmc
cmp
xchg
stc
mov
call
pusha
mov
mov
pushf
mov
call
mov
jmp
push
jmp
ror
pushf
inc
cmc
call
jmp
pushl
push
mov
pushf
mov
push
pushf
lea
jmp
mov
mov
pusha
push
movb
lea
jmp
lea
jnp
mov
jle
mov
call
mov
mov
mov
not
lea
pushf
mov
movw
not
mov
pushl
pushf
movw
movsbw
xchg
lea
call
pusha
push
mov
xchg
repz
popl
pusha
movsbw
call
movzbl
movsbl
lea
xor
mov
test
clc
cmp
cmc
add
pushf
add
pushf
mov
push
pushf
pushl
ret
pushf
pusha
mov
mov
bswap
mov
pushf
mov
push
lea
jg
push
pushf
lea
pop
movsbw
push
movzbw
pushf
xchg
xchg
push
xchg
repz
inc
jmp
movsbw
pushf
movzbw
lea
push
pusha
movb
pushf
lea
jmp
das
mov
pusha
cmp
cmp
test
add
pushf
mov
push
jmp
inc
jmp
shld
mov
push
push
add
mov
push
pusha
lea
jmp
push
lea
mov
jmp
pusha
jmp
cmc
stc
stc
sub
mov
shl
push
jmp
pushf
pushf
popl
push
jmp
dec
neg
add
or
mov
bts
stc
xor
pushf
ror
ror
movsbl
inc
mov
movsbw
inc
movzbw
ror
pusha
pop
rol
sbb
xor
inc
sbb
movzbl
sub
test
pop
call
call
add
mov
movw
movw
pushf
lea
jmp
call
rol
lea
call
pushl
pushl
popl
movb
pushf
lea
jmp
movl
movzbl
mov
bswap
dec
dec
sbb
rcr
jmp
mov
dec
dec
bswap
call
mov
pushf
pushf
mov
push
lea
jmp
mov
dec
pushl
dec
xchg
pushl
popl
pushl
dec
jmp
inc
cmp
test
not
clc
clc
call
movsbw
cld
cld
mov
cld
std
cld
call
pushf
popl
jp
popl
pusha
pushl
push
lea
jmp
mov
pushf
mov
mov
movsbw
movsbw
jmp
pusha
call
pusha
pushl
popl
pushf
movb
pushl
lea
jmp
not
movsbl
xchg
push
push
mov
pushf
dec
call
movzbl
mov
mov
repz
popl
movzbw
mov
movzbw
mov
jmp
pushl
jmp
stc
stc
and
jmp
not
clc
mov
cmc
cmp
add
pushf
pushl
pusha
lea
jmp
pushf
pushf
pushf
pushl
popl
pushf
mov
movb
push
lea
jmp
movzbw
movzbw
repz
popl
call
clc
mov
xchg
mov
shrd
sar
das
mov
cmc
stc
stc
sub
call
cmc
mov
jmp
lea
ja
mov
pusha
movb
pusha
lea
jmp
mov
pushf
push
push
pushl
mov
pushf
jmp
mov
pushl
popl
pushf
movb
pushf
pushf
lea
jmp
call
push
jmp
pushl
popl
movzbl
pushf
pusha
movl
xchg
jmp
not
movzbw
rol
sbb
clc
xchg
lea
dec
bsr
jmp
mov
mov
pushl
popl
movw
movw
pushf
pushl
lea
jmp
mov
jmp
pushf
popl
call
sub
and
bts
shl
mov
push
cmc
sub
pushl
inc
stc
not
call
mov
mov
push
mov
bswap
pushl
popl
push
movzbw
movl
xchg
lea
mov
jmp
pushf
push
bswap
mov
bswap
mov
jmp
pushf
mov
not
push
xchg
repz
popl
xchg
mov
push
jmp
call
pushf
lea
jl
mov
call
clc
mov
push
movb
sub
movb
pushf
pushf
push
lea
jmp
mov
jmp
setae
cbtw
cbtw
mov
pusha
shr
mov
call
sub
call
push
push
pushf
inc
cmc
pushf
call
xchg
call
pusha
push
mov
jmp
shl
daa
aaa
mov
add
mov
pushf
stc
test
sub
stc
push
shl
call
movsbl
pusha
mov
call
jmp
pusha
call
mov
jmp
pushf
mov
mov
mov
pusha
pushf
mov
lea
jmp
mov
dec
lea
pop
inc
dec
bsf
push
xor
call
mov
call
movw
sub
stc
stc
cbtw
cmp
pushf
cwtl
clc
cmc
sub
pushf
movb
mov
push
pushf
pushf
lea
jmp
movl
pushf
pushl
popl
xchg
movsbw
movl
inc
not
not
call
call
lea
cpuid
bt
cmp
stc
clc
sub
push
test
stc
cmpl
jmp
xor
btr
clc
bswap
rol
movzbw
push
lea
mov
movw
pusha
lea
jmp
dec
mov
pushf
pushl
popl
push
dec
dec
movl
pushf
setle
mov
dec
lea
jae
movzbw
setl
dec
xadd
xor
seto
call
add
pushf
lea
jg
push
pushf
mov
pusha
push
pushf
pushl
pushl
ret
mov
pusha
sete
mov
pusha
lea
jmp
sub
bt
mov
movb
pushl
and
pushf
pusha
call
dec
inc
inc
rol
pusha
rol
bsf
adc
xor
xor
shr
jmp
mov
mov
movb
movb
pushf
lea
jmp
pushl
clc
cmp
add
jmp
call
inc
mov
jmp
pop
lea
mov
push
lea
jmp
mov
call
call
rol
not
not
pop
lea
movb
lea
jmp
pusha
push
mov
call
pushf
pusha
mov
push
pushf
mov
call
call
pusha
cmc
pushf
xchg
mov
sub
rcr
call
push
mov
mov
lea
jmp
movl
jmp
btr
add
xor
jmp
mov
jmp
shl
not
movzbl
cmp
pusha
cmc
cmp
sub
pushf
pusha
inc
cmc
movl
bt
bt
rol
movw
movb
neg
lea
jle
pusha
mov
inc
cmc
pushf
jmp
pushf
popl
jmp
mov
sub
pusha
bt
sub
mov
jmp
pushf
pushl
mov
movb
lea
jmp
jmp
pushf
pushf
popl
mov
pushl
pushl
popl
push
lea
jmp
xor
pushf
jmp
mov
jmp
push
jmp
call
pushl
movb
mov
not
jmp
mov
pusha
pushf
lea
jmp
dec
mov
jmp
pushf
movw
cmp
sub
pushf
movb
lea
jg
pushf
mov
mov
mov
mov
lea
jmp
not
ror
mov
bsr
rcl
btc
mov
push
jmp
jmp
call
mov
mov
inc
not
dec
rol
shl
clc
not
xor
ror
call
jmp
pushf
dec
shl
rcr
xor
call
inc
dec
bt
rcl
mov
test
pop
bswap
call
pushf
push
call
pusha
pusha
add
pushl
movw
pushf
mov
pushf
mov
mov
lea
jmp
movb
lea
jne
shl
mov
test
clc
and
bt
jmp
xor
push
rcr
pushl
rcl
rol
push
not
push
movsbw
lea
pusha
pushf
lea
jmp
lea
push
lea
jmp
lea
pushf
pop
mov
inc
lea
dec
shld
xor
clc
jmp
mov
shld
mov
pusha
jmp
lea
jle
push
call
jmp
rol
sar
mov
adc
mov
pushf
add
pushl
call
jmp
lea
dec
pushf
mov
inc
mov
bswap
inc
add
sub
jmp
pushf
mov
pushl
pushl
ret
mov
shl
mov
movzbl
add
sub
bsr
jmp
mov
bswap
bswap
mov
jmp
movsbw
bswap
movl
not
not
lea
movsbw
mov
push
dec
pushf
xor
rcl
rol
call
mov
sar
not
mov
sub
mov
stc
shl
and
mov
jne
pusha
sub
pushf
jmp
pusha
repz
popl
pushf
pop
bswap
pushl
mov
dec
pushl
popl
bswap
dec
movzbw
call
xchg
pop
mov
jmp
pushf
mov
jmp
repz
popl
pop
mov
not
jmp
pushf
call
div
mov
push
lea
jp
push
mov
pushf
pusha
mov
mov
pushf
popl
call
pushf
mov
pushf
call
cmp
pusha
movb
lea
jnp
jne
inc
bt
xorb
jmp
jmp
sub
jmp
mov
mov
jmp
lea
jne
mov
xorb
setae
pusha
mov
movl
mov
movl
lea
jmp
pusha
not
inc
pushf
xor
jmp
mov
call
mov
pusha
movb
call
pushf
mov
pusha
mov
mov
jmp
lea
jne
bsf
bsf
xorb
call
call
shl
xor
movzbw
bswap
rol
rol
not
lea
lea
movb
movl
lea
jmp
pushf
lea
jne
pusha
bswap
ror
xorb
mov
bswap
mov
push
push
push
movl
lea
jmp
mov
bswap
call
push
jmp
call
mov
push
call
call
pushf
call
mov
push
pushl
lea
jmp
lea
repz
popl
mov
lea
mov
pushf
mov
bswap
pushl
popl
lea
not
movl
xchg
pushl
jmp
pushl
mov
movb
movb
pushf
lea
jmp
mov
push
bswap
setb
movw
mov
mov
bswap
mov
push
setne
mov
movsbw
movsbw
lea
jb
pop
pusha
pusha
movw
pushf
pushl
ret
xor
clc
clc
pushl
cmc
sub
movb
mov
push
mov
lea
jmp
pushl
mov
pushf
lea
ja
pushf
pusha
mov
movsbw
pop
mov
bswap
pushl
mov
mov
not
mov
pusha
mov
not
movsbw
push
not
repz
popl
not
inc
movzbw
mov
mov
not
jmp
call
bswap
bswap
pushl
popl
lea
xchg
dec
movl
xchg
mov
dec
movzbw
movsbl
dec
jmp
mov
mov
lea
bswap
mov
movsbw
lea
push
mov
movsbl
mov
mov
xchg
repz
popl
mov
call
pushl
popl
lea
not
movl
inc
movzbw
movsbw
lea
mov
mov
jmp
ror
rol
bts
cmc
mov
cmp
jmp
mov
bswap
push
xchg
movsbw
not
pusha
not
repz
popl
movsbw
call
push
pushl
mov
mov
lea
jmp
pusha
call
pushl
popl
push
push
pushf
lea
jmp
call
jmp
mov
jmp
pusha
call
movw
pushf
push
mov
pushf
mov
call
div
pushf
push
push
mov
pusha
pushf
mov
push
mov
pushf
popl
movw
movw
call
shl
mov
or
push
add
pushf
pusha
pushf
lea
jne
mov
pushf
pusha
lea
jno
pushf
mov
mov
pushf
pushf
push
lea
jmp
cmp
cmp
jmp
movzbw
pusha
dec
test
xor
not
cmc
call
movzbw
jmp
sub
push
mov
pushf
pushf
movb
lea
jmp
mov
pushf
jmp
pushl
pushl
popl
pushf
mov
mov
lea
jmp
xchg
shl
mov
rol
inc
mov
pusha
sub
pusha
shr
mov
mov
jmp
pushf
pushl
popl
pushf
mov
pushf
push
lea
jmp
push
pusha
mov
pushf
pushl
mov
pushf
lea
jmp
clc
mov
mov
shld
push
shrd
cmc
mov
pushf
pushf
add
pushf
pusha
mov
push
movl
lea
jmp
push
lea
jnp
push
call
call
stc
add
bsr
cmp
mov
jno
stc
add
push
lea
jmp
call
lea
jne
mov
pushf
pushf
pushl
lea
jmp
repz
popl
jmp
inc
stc
call
jmp
pusha
rol
bswap
bswap
mov
pushl
lea
pushf
lea
jmp
stc
cmp
jmp
mov
call
test
sub
pusha
mov
movb
lea
jmp
lea
push
movb
movb
mov
lea
jmp
push
mov
pushf
mov
push
pushl
ret
stc
xor
pushf
pushl
push
push
inc
stc
bt
bt
jmp
mov
pushf
pushf
pusha
pushl
ret
bswap
mov
bswap
lea
bswap
call
pushf
add
mov
pushf
jmp
push
call
pusha
xchg
movzbw
mov
pushf
push
mov
pusha
pop
not
movsbl
xchg
mov
mov
pushl
lea
movzbw
repz
popl
movzbw
push
mov
dec
dec
pushl
popl
push
lea
call
and
mov
push
not
mov
shl
xor
shr
pushl
add
mov
setne
pushf
pushl
mov
movb
pushf
jmp
pushl
popl
not
movl
pushf
movl
pop
mov
mov
bswap
dec
lea
jp
adc
xor
pushf
pop
movsbl
rol
movsbl
jmp
pop
not
rol
not
cmp
neg
bswap
pusha
pusha
inc
cmp
sub
cmc
bswap
jmp
sub
jmp
shl
pusha
mov
push
sub
pusha
call
movsbw
mov
call
add
add
mov
pusha
pusha
pushf
xchg
pop
pop
pop
lea
mov
pushf
movzbw
mov
mov
xchg
pushf
mov
call
pushf
mov
pushl
pushf
lea
jmp
lea
jle
push
pushf
popl
push
pushl
push
pushl
popl
pusha
lea
jmp
pusha
mov
call
not
stc
mov
push
cmp
call
movb
mov
ror
pushl
push
pusha
inc
call
mov
push
xchg
lea
movzbl
mov
mov
lea
push
jmp
stc
btc
aaa
notl
bt
push
shrd
setl
mov
call
bswap
pushf
mov
pop
pushl
popl
mov
inc
pop
movl
movsbw
movzbw
not
pusha
mov
bswap
call
pusha
push
pushf
pushf
inc
clc
test
test
sub
clc
test
lea
cmp
clc
stc
stc
sub
jmp
mov
pushf
mov
pushl
pusha
lea
jmp
mov
push
push
pushl
pushl
lea
jmp
movb
push
bt
xor
push
clc
call
mov
movsbw
movzbw
mov
movsbw
mov
pushf
repz
popl
dec
call
push
movsbw
bswap
mov
push
movsbw
movzbw
movsbw
bswap
push
push
jmp
mov
pusha
call
pop
repz
popl
dec
bswap
pusha
mov
not
xchg
jmp
stc
sub
cmc
stc
shr
push
jmp
mov
bt
test
stc
add
push
call
push
rep
xadd
stc
shrd
mov
std
mov
test
pushl
popf
mov
pushf
pushl
lea
jmp
call
movzbw
mov
call
push
mov
jmp
call
lea
mov
push
mov
jmp
cmc
mov
sub
jmp
daa
movzbl
xor
mov
dec
clc
bt
btc
mov
cmp
mov
push
mov
mov
add
stc
cmc
cmc
shld
jmp
pushf
cmp
sub
lea
jo
push
push
mov
mov
pusha
push
movb
mov
lea
jmp
pushf
jmp
jmp
call
cmc
jmp
jmp
jmp
jmp
shr
mov
movzbl
sub
cmp
test
xor
jmp
lea
js
mov
pushf
push
pusha
lea
jmp
call
jmp
pushf
movzbl
pop
call
add
bsr
neg
pushf
shl
and
bswap
inc
mov
call
add
jmp
not
mov
bswap
pushl
movsbw
mov
mov
mov
pushf
movzbw
mov
call
mov
jmp
lea
jb
pushf
jmp
push
mov
mov
pushf
pusha
pushf
mov
lea
jmp
xchg
mov
jmp
neg
lea
jo
pushf
pusha
inc
call
pusha
bswap
bswap
movsbl
lea
pusha
pushl
pushl
movb
lea
jmp
dec
rcl
jmp
jmp
clc
rol
cmp
pushf
add
jp
neg
pusha
pushf
push
inc
pushf
clc
cmp
movb
sub
pushf
clc
lea
cmc
sub
pushl
pushf
call
pusha
mov
pushf
lea
jmp
lea
pushf
pushf
lea
jmp
movsbw
mov
mov
clc
pusha
call
mov
movzbw
mov
call
stc
rol
pusha
pushf
not
lea
movw
pushf
lea
jmp
jmp
add
clc
pushf
rol
jmp
lahf
mov
pusha
mov
cmp
cmc
pushl
cmp
not
push
test
jmp
pusha
pushf
popl
pusha
pushl
pushl
popl
mov
pushf
pushf
pushf
lea
jmp
lea
jne
mov
bsr
sub
xorb
jmp
push
mov
mov
pushf
push
pushf
lea
jmp
add
adc
sar
mov
cmc
cmc
stc
add
pushf
pushf
pushl
lea
jmp
btc
rol
pop
movzbl
bswap
lea
mov
pushf
mov
pushf
lea
jmp
jmp
mov
push
mov
push
lea
jmp
pop
pop
mov
pusha
mov
jmp
mov
call
stc
cmp
cwtl
stc
sub
call
cmp
sub
clc
mov
lea
jmp
shl
test
rol
sar
mov
neg
not
not
mov
bt
cmc
pusha
cmp
sub
bt
test
shl
pushf
mov
call
push
pushf
xchg
mov
movzbw
bswap
bswap
mov
pop
mov
movzbw
movzbw
push
lea
jns
mov
push
jmp
pushf
popl
call
pushf
mov
pushf
push
pushf
call
not
bswap
bswap
mov
xchg
pushl
mov
pusha
repz
popl
not
lea
jge
lea
mov
push
pushf
pusha
pushl
popl
pusha
push
movsbw
dec
movl
pushf
xchg
mov
mov
dec
dec
and
xor
not
bt
rol
jmp
mov
pushl
movb
pushf
mov
lea
jmp
repz
popl
movw
pushf
not
push
mov
dec
inc
movzbw
pushl
popl
pop
movl
push
mov
pop
lea
dec
sbb
xor
bt
rcr
mov
rol
not
lea
push
push
pushf
lea
jmp
push
lea
pop
lea
dec
not
stc
xor
btr
bts
movzbl
rol
jmp
mul
pusha
movb
push
mov
lea
jno
mov
pusha
pusha
mov
pushl
pushf
popl
push
pushl
popl
pushf
lea
jmp
movsbw
dec
btr
xor
pop
pushl
jmp
jmp
bswap
clc
sar
mov
clc
push
pushf
add
push
mov
pushf
lea
jmp
jmp
popl
push
push
pushf
pusha
lea
jmp
cmp
aad
out
push
aad
pushf
inc
aad
pushf
inc
aad
lods
inc
aad
cmc
sub
jge
pusha
aad
lret
dec
aad
xorl
aad
push
pop
aad
sbbl
jge
pop
aad
adc
aad
sbb
aad
sbb
aad
xorl
aad
test
pushf
inc
aad
cwtl
cmp
aad
inc
xor
jge
sub
jge
dec
aad
mov
dec
aad
out
aad
cwtl
cmp
aad
fstpl
lret
dec
aad
mov
jge
dec
aad
in
cs
out
aad
xor
jge
sub
aad
pushf
inc
aad
sbb
aad
sub
aad
adc
aad
js
aad
sbbl
jge
cmp
jge
dec
aad
idivl
aad
mov
cmp
jge
dec
aad
movsl
push
aad
dec
pop
aad
ret
jge
cmp
aad
fisttpll
jge
cmp
jge
xor
jge
pop
aad
adc
aad
inc
xor
jge
dec
aad
out
aad
sbb
jge
ss
inc
dec
aad
faddl
jge
cmp
aad
addr16
aad
pushf
inc
aad
aad
aad
adc
aad
mov
jge
dec
aad
es
aad
addr16
aad
fisttpll
jge
cmp
aad
addr16
aad
sub
jge
cmp
aad
addr16
aad
bound
es
aad
addr16
aad
push
pop
aad
es
aad
addr16
aad
or
jge
cmp
aad
addr16
aad
mov
cmp
aad
addr16
aad
fstpl
es
aad
addr16
aad
cmp
aad
es
aad
addr16
aad
adc
aad
es
aad
addr16
aad
aad
aad
es
aad
addr16
aad
out
push
aad
es
aad
addr16
aad
dec
pop
aad
es
aad
addr16
aad
cmpb
jge
cmp
aad
addr16
aad
mov
aad
mov
xor
jge
inc
aad
faddl
jge
cmp
aad
addr16
aad
dec
pop
aad
iret
sub
jge
dec
aad
idivl
aad
pushf
inc
aad
faddl
jge
push
aad
cmp
aad
pop
inc
aad
pop
inc
aad
xor
jge
pop
aad
mov
aad
push
pop
aad
adc
pop
aad
shrb
aad
mov
aad
jnp
aad
ds
aad
aad
aad
ret
jge
inc
aad
mov
aad
mov
jge
inc
aad
jl
aad
bound
iret
sub
jge
dec
aad
shrb
aad
mov
jge
cs
adc
sub
jge
cmp
jge
dec
aad
mov
pop
aad
ds
aad
lods
inc
aad
xor
jge
inc
aad
sub
aad
leave
inc
aad
fstpl
sarb
aad
aad
aad
mov
aad
jl
aad
bound
xor
jge
xor
jge
dec
aad
adc
push
aad
adc
aad
pop
inc
aad
aad
aad
aad
aad
fstpl
sbb
aad
iret
sub
jge
dec
aad
in
cs
mov
aad
mov
aad
sbb
jge
inc
aad
shrb
aad
mov
jge
cmp
aad
ret
jge
pop
aad
adc
pop
aad
popa
inc
aad
movsl
push
aad
out
aad
out
aad
mov
jge
cmp
aad
mov
jge
dec
aad
lret
dec
aad
aad
aad
idivl
aad
jl
aad
jnp
aad
cmpb
jge
push
aad
cmp
aad
mov
aad
pop
ss
mov
cmp
jge
dec
aad
popa
inc
aad
sub
jge
xor
jge
sub
jge
xor
jge
ss
push
inc
aad
inc
dec
aad
test
cmp
aad
adc
pop
aad
dec
aad
jmp
pushl
popl
pushf
push
push
pushf
lea
jmp
sub
call
pushf
mov
pushf
jmp
push
add
clc
movb
sub
jbe
clc
add
push
call
lea
mov
lea
xchg
repz
popl
bswap
xchg
mov
pushf
pushl
popl
dec
movzbw
mov
movl
movl
mov
inc
lea
jbe
mov
lea
dec
call
jmp
call
bswap
movl
dec
mov
pushl
dec
mov
xor
not
rol
call
mov
pushf
push
mov
lea
jmp
bswap
dec
mov
bswap
xor
rcr
bts
not
rol
jmp
movl
pushl
popl
mov
push
pushf
lea
jmp
lea
jne
test
lea
pushf
mov
cmc
call
jmp
jmp
movzbw
movsbw
pushf
dec
pushf
jmp
call
jmp
mov
push
pushf
lea
jmp
pushf
jmp
pusha
call
add
pusha
lea
jmp
push
mov
push
mov
push
call
cmp
add
cmp
sub
pushf
mov
bt
rol
stc
sub
cmp
xor
pusha
pushf
test
add
stc
mov
cmp
movl
pushf
mov
sub
call
mov
push
mov
movb
mov
call
mov
pusha
jmp
push
pusha
movb
mov
pusha
call
lea
jmp
push
xchg
xchg
mov
jmp
mov
xchg
push
not
push
pushl
popl
jmp
call
mov
pusha
pushf
jmp
call
bswap
pushl
popl
push
movl
lea
bswap
push
mov
movsbw
dec
bswap
dec
shld
lea
xor
movsbl
rol
push
lea
movb
pushf
lea
jmp
jmp
push
call
pusha
mov
xchg
mov
bswap
pushf
repz
popl
movsbw
mov
mov
jmp
push
mov
push
mov
jmp
push
mov
cmp
cmp
movb
add
pusha
pusha
push
lea
jmp
not
dec
aam
stc
lea
clc
cmp
pushf
push
lea
ja
lea
bsf
movsbl
mov
rol
rcl
ror
lea
inc
stc
sub
sub
aad
sub
lea
rol
dec
movzbw
and
bsr
add
btr
shl
sub
movzbl
mov
mov
pushf
mov
not
push
pushf
popl
lea
push
cld
xchg
not
mov
movsbw
movzbl
not
not
lea
push
pusha
std
call
pusha
mov
push
pushf
popl
pushl
push
pushl
popl
pushf
movb
push
push
lea
jmp
pop
pusha
pushf
pushl
ret
dec
xor
mov
rol
pushl
lea
movb
pushf
pushl
lea
jmp
dec
xor
push
xor
call
inc
shl
mov
stc
pusha
push
add
call
jmp
pushf
xchg
movw
mov
jmp
pusha
movb
push
mov
pusha
mov
push
pushf
movb
pushf
lea
jmp
movsbw
mov
bsr
mov
bt
pushf
call
add
movl
mov
lea
jmp
push
call
mov
push
push
pushl
pushf
lea
jmp
rol
cmc
aas
mov
stc
call
inc
sub
adc
bt
shr
mov
rcl
movzbl
mov
jmp
bts
rol
movsbw
lea
pushf
pushf
movb
movb
lea
jmp
pushf
rol
pushf
not
lea
pushl
lea
jmp
mov
pushf
jmp
stc
sub
movl
clc
stc
cbtw
test
bt
movb
cmp
cwtl
pushf
call
push
mov
mov
lea
jne
movzbw
dec
mov
shld
mov
call
mov
mov
lea
jne
rcl
bt
mov
push
push
and
bt
test
cmp
jmp
push
call
mov
movl
xchg
xchg
push
mov
xchg
repz
popl
movsbw
dec
mov
dec
pushl
popl
movsbw
pushf
movl
pushl
jmp
push
pop
mov
mov
pushf
push
jmp
pushf
pushl
popl
pushl
mov
lea
jmp
push
pushl
popl
cmc
add
test
stc
pushf
pushf
pushl
popf
push
pushl
lea
jmp
push
setb
setl
mov
push
pushl
pushf
call
bsr
add
and
mov
mov
cmp
pushf
ror
mov
pusha
mov
bt
cmp
stc
add
pushf
pushf
cmc
shrd
call
mov
lea
je
xchg
pusha
pop
mov
movsbl
call
mov
pushf
call
pushl
popl
pushl
pushf
lea
jmp
mov
mov
repz
popl
not
mov
mov
movzbw
lea
pushl
popl
bswap
jmp
daa
shr
btc
shrd
mov
bt
add
pusha
pushf
popl
mov
call
push
pushf
call
xor
adc
push
cmc
movzbl
pushf
clc
mov
xor
lea
jg
pushf
inc
jmp
sub
jmp
add
jmp
pushf
jmp
call
jmp
mov
call
lea
jb
popl
pushf
lea
jmp
movsbw
jmp
rol
sbb
not
pushf
lea
sub
bsf
rol
sub
bsf
mov
cmc
movsbw
mov
bts
rcr
add
shld
test
neg
sbb
mov
btr
setb
xor
pushf
ror
lea
lea
lea
jg
inc
setb
pushf
rol
cmc
sar
setl
and
xor
rcl
sar
movzbl
dec
test
lea
bts
rcl
mov
pushf
cmc
add
bt
cmp
clc
jmp
mov
pusha
mov
lea
mov
movzbw
bswap
call
mov
inc
shl
test
shl
shrd
sub
pusha
bt
ror
btr
sub
cmp
xor
sub
mov
call
pusha
pusha
call
not
dec
bsf
rol
xor
btc
ror
rol
movsbl
mov
pushf
lea
push
pushf
pushf
lea
jmp
bswap
mov
push
push
mov
pushf
mov
call
not
inc
sub
adc
mov
test
sub
cmp
cmp
add
call
push
call
mov
pushf
popl
call
rcl
btc
aas
inc
mov
push
add
pushl
jmp
call
call
pushf
popl
call
dec
test
adc
xor
rcl
bts
pushl
pushf
rol
not
pusha
bswap
pop
lea
push
lea
jmp
pushf
pushf
jmp
xor
movsbl
pusha
not
rcl
rol
mov
pop
call
rcr
xor
mov
call
call
shld
aas
lahf
mov
cmp
cmp
test
sub
bt
bt
pushf
add
jmp
sub
jmp
pushf
pushf
popl
jmp
sub
call
bt
mov
pusha
stc
call
and
mov
rol
add
clc
mov
call
movl
call
