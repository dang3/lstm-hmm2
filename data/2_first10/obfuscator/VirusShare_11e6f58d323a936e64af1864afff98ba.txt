push
call
ret
ret
dec
dec
jle
sub
int
or
dec
push
dec
fisttpl
sub
jns
add
outsl
xchg
pop
push
cs
adc
sbb
dec
into
sbb
stos
mov
mov
lea
jmp
stos
jo
xchg
int3
xor
xor
push
add
xchg
ret
shrl
cmpb
pop
sub
mov
jmp
mov
dec
and
push
and
and
loopne
adc
imul
or
jae
rorl
or
sbb
lock
cmpsb
out
imul
jl
dec
sbb
mov
lcall
sti
adc
outsl
inc
mov
in
scas
orl
fistps
lea
jnp
sub
inc
sbb
stos
jl
je
pop
cld
call
dec
lcall
jo
adc
cmp
cwtl
int
push
xchg
pop
adc
sahf
cmp
mov
xchg
inc
pop
adc
cmpsl
into
push
ljmp
push
push
pushf
out
jo
int3
mov
mov
sbb
adc
fwait
ror
adc
dec
ret
inc
rolb
jp
repz
dec
ss
fimuls
xchg
lods
vmovsd
adc
push
bound
mov
gs
das
sub
xchg
xor
loop
imul
cmp
pop
xor
add
out
aad
das
cmpl
xlat
pushf
sbb
push
sbb
scas
adc
js
fcmovnb
xor
repz
xlat
clc
ret
mov
in
jns
adc
out
mov
lahf
pop
push
dec
push
push
test
imul
fidivl
push
mov
fdivr
push
cli
sub
sbb
rcrb
out
mov
scas
je
in
or
cmpsw
adc
lea
jae
fstps
ss
movb
push
sbb
insl
mov
inc
repz
jne
mov
psllq
mov
aam
andl
push
mov
pop
mov
mov
push
ret
sub
aad
cmpsl
nop
ljmp
scas
push
sbb
ljmp
fs
lret
ja
ja
xor
add
pop
pop
mov
fxam
jno
adc
mov
pop
dec
ret
out
lret
dec
pop
add
sarw
and
repz
and
ret
les
pop
int
pop
xchg
test
ljmp
lahf
sbb
dec
arpl
mov
pop
loopne
cwtl
lahf
lret
sbb
imul
inc
test
cmp
int
or
sub
mov
xchg
lods
push
push
nop
cmp
bnd
cld
cld
mov
nop
jno
push
outsl
inc
push
dec
in
cmp
scas
mov
add
xchg
scas
mov
adcl
cmp
push
dec
add
les
cwtl
fnstsw
arpl
cmpsl
imul
fildll
lea
test
je
adc
mov
jg
cmp
jp
or
jge
jecxz
out
sub
test
dec
out
in
adc
repnz
mov
pop
cwtl
mov
popa
sbb
dec
and
stc
insl
testb
imul
cld
or
loopne
or
inc
pop
xchg
fwait
cmp
sub
mov
nop
rcrl
jno
imulb
mov
pop
adc
jns
or
xor
sub
push
push
je
icebp
ss
fisubrs
jbe
repz
icebp
mov
movsb
push
and
dec
mov
adc
xor
jle
pop
lcall
dec
test
mov
xor
std
xchg
and
mov
xchg
cmp
loopne
cmp
idiv
je
orl
fwait
jno
ljmp
jno
jb
dec
mov
sub
xchg
jle
je
push
mov
or
jns
xor
jno
or
dec
mov
add
mov
xor
mov
push
in
icebp
lods
fldenv
int3
lret
sbb
jp
mov
push
adc
outsb
les
ljmp
pusha
icebp
daa
cwtl
xchg
adc
lsl
je
or
xchg
int
xchg
sbb
les
xor
sahf
dec
jecxz
and
and
lret
stos
jg
pop
fwait
mov
leave
mov
and
push
pop
mov
sbb
cmp
bound
xchg
cmp
or
int3
jge
pop
pop
sbb
add
sbb
add
scas
popa
push
mov
xchg
cwtl
add
cmpsl
lds
addr16
inc
mov
push
xchg
inc
push
rclb
mov
aad
in
lock
pop
movsl
es
or
les
adc
outsl
repz
cli
mov
jns,pn
ret
xchg
mov
cmp
test
test
sbb
sbb
mov
and
dec
pop
enter
lret
pop
or
mov
xchg
xchg
outsl
mov
fwait
movsl
fldt
dec
dec
mov
ds
mov
stc
jl
cmp
out
fidivrl
or
push
push
mov
mov
mov
repz
mov
or
push
xor
pushf
mov
pop
or
cmp
std
in
popf
cmp
jbe
outsb
push
dec
loopne
movsb
push
sti
push
sub
fisubs
cmpsl
sub
push
test
push
push
inc
jne
mov
cmpsb
adc
iret
or
leave
stc
jbe
jg
out
mov
lret
in
jle
stos
xor
sub
ret
je
mov
scas
xchg
push
sbb
cli
sub
mov
jl
fidivrs
inc
mov
andl
adc
pop
mov
in
sbb
cltd
or
sbb
rorl
adc
scas
xor
mov
push
in
jp
out
sub
push
cmc
lea
int
inc
inc
adc
mov
xor
movsb
pop
sub
pop
sub
lret
cwtl
divb
mov
pop
mov
fidivs
insl
out
mov
xchg
loope
in
sbb
enter
aam
lods
mov
data16
fmuls
mov
inc
notl
stos
or
adc
or
icebp
push
push
daa
loope
jl
test
daa
jns
je
scas
mov
mov
fsubr
jg
mov
sarb
xchg
cmc
inc
xchg
xchg
xor
fistpll
sbb
jmp
mulb
xor
push
aaa
sbb
mov
in
xchg
mov
mov
pop
push
leave
notb
dec
stos
das
into
push
xor
mov
push
xchg
into
mov
ds
jne
lcall
adcb
movb
in
ret
pop
push
leave
push
push
outsb
cld
inc
xchg
out
test
mov
push
and
js
sbb
push
data16
pop
mov
cli
cmpb
pusha
jo
pop
loop
jo
and
inc
inc
ja
mov
adc
and
xor
or
movsb
loopne
andb
sahf
pop
pop
fwait
push
nop
xlat
lock
data16
in
mov
adc
jl
out
in
mov
cmc
jnp
shl
rsm
push
in
inc
cmpsl
cmp
roll
xchg
xchg
loop
lods
jo
mov
jge
and
js
arpl
aam
xchg
in
sbb
pop
fisttpll
mov
lock
xor
mov
ret
loopne
scas
cmpsl
int
ret
and
addr16
fwait
jbe
mov
in
daa
mov
inc
cli
adc
or
out
ret
cmpsl
test
lcall
mov
jmp
mov
xchg
cwtl
mov
jne
jge
dec
inc
dec
movsl
mov
mov
pop
mov
inc
lods
pop
lds
lahf
cld
outsb
pusha
repnz
cmp
roll
std
daa
cmp
xor
test
xor
push
ds
out
jmp
repz
push
mov
xor
mov
push
cmpsb
pop
fnstsw
jns
lcall
add
mov
pop
add
mov
inc
pop
jnp
add
mov
push
mov
ja
add
icebp
xchg
ss
cmp
xchg
dec
lea
in
sbb
push
add
or
cmp
iret
test
test
inc
ss
mov
lock
push
push
movswl
lret
cmp
inc
xchg
mov
mov
shl
cwtl
inc
or
mov
aam
jmp
and
loop
mov
mov
cmp
and
pop
sub
sbb
js
push
test
and
aad
pop
loope
sub
pop
pop
jecxz
xor
mov
mov
sbbb
lods
mov
test
dec
adc
pop
int
lea
aas
mov
mov
xor
sbb
mov
mov
or
adc
xor
cmpsl
bnd
inc
test
aas
pushl
sbb
int
cmpsb
dec
xchg
jb
cmpb
cmp
lods
outsl
adc
mov
aad
jb
dec
mov
inc
popf
cmp
mov
out
jmp
stc
js
shll
sbb
mov
fldz
adc
dec
and
mov
sub
xlat
cmp
mov
scas
dec
fsub
push
ret
cmpsl
jnp
push
scas
pop
jmp
or
fstps
sub
fsts
inc
rcrl
shll
xlat
and
sti
mov
out
lock
pushf
cmp
outsb
hlt
mov
xchg
out
jg
inc
mulb
mov
mov
out
das
rorb
mov
cs
ja
ret
xor
cmp
lods
mov
les
imul
mov
decl
aaa
pusha
in
inc
stos
pop
push
cltd
aaa
xchg
sahf
andl
mov
gs
outsl
nop
xor
lock
cmp
sub
movb
mov
jmp
mov
iret
xchg
cli
xchg
fstl
mov
in
lds
and
rcrb
lret
test
mov
das
rcll
sub
mov
or
pop
imul
mov
or
inc
jb
inc
hlt
fdivrl
out
add
and
add
lret
add
sbb
cmpsl
aam
adcb
mov
jb
mov
mov
and
rclb
adc
dec
stos
cli
ret
pop
push
in
insl
dec
pop
cmpsl
sti
int3
dec
and
sti
pusha
adc
enter
mov
enter
cld
gs
push
fwait
loop
stos
stos
es
adc
bound
mov
lcall
dec
push
jle
dec
or
fisubrs
movsl
out
xchg
lret
daa
push
data16
xchg
push
stos
xchg
ds
out
aas
mov
cmp
into
dec
mov
push
fldcw
mov
jge
stos
mov
es
xchg
inc
jo
test
arpl
xchg
inc
shrb
xor
popa
jp
call
arpl
movsl
sar
fcmovne
shl
sub
or
sbb
xor
iret
mov
sub
inc
and
mov
pop
out
fwait
push
mov
daa
test
sbb
mov
fsubl
int3
add
js
aas
popa
pop
mov
int3
mov
stc
imulb
cli
mov
mov
mov
fists
jnp
mov
test
out
jmp
mov
pop
sbb
adc
inc
push
outsb
add
xchg
lods
lock
mov
jne
pop
sbb
cmpsl
sub
xchg
imul
repnz
outsl
pushf
loope
add
xchg
xor
stc
pop
mov
mov
lods
lock
lret
fs
adc
dec
lds
jge
sbb
fiaddl
sahf
dec
pop
jo
out
push
dec
xor
jbe
imul
mov
loope
push
jp
mov
imul
fstl
fildll
sbb
push
adc
pop
jge
push
xor
adc
fcmovbe
mov
mov
jns
cmp
call
stc
push
lods
inc
cs
dec
pop
jne
adc
cld
mov
inc
sub
outsb
mov
sbb
sub
or
jo
sbb
mov
roll
scas
mov
jno
lods
test
push
mov
out
out
adc
xor
lret
jge
lea
test
nop
and
mov
or
pop
lret
addb
inc
repnz
jge
cmc
rol
xlat
sub
pop
adc
mov
push
jbe
adc
fsts
stos
xchg
xorb
push
shll
push
cmp
xchg
mov
ficompl
adc
jb
lods
push
jle
sub
mov
pop
cmp
jge
in
arpl
lods
adc
gs
jbe
inc
popa
test
cmp
adc
scas
mov
pop
cltd
idiv
sbb
xlat
cwtl
mov
fmuls
dec
jmp
or
mov
cmp
inc
xchg
cli
mov
invd
cmp
and
pusha
lods
negl
push
sub
dec
mov
push
jl
orb
mov
or
fimull
test
mov
fnstsw
mov
rclb
xchg
add
dec
das
cmp
rolb
mov
mov
es
popa
in
dec
enter
sbb
mov
jbe
enter
rcrl
shrl
popa
into
xchg
mov
call
mov
loopne
sub
push
je
outsl
adc
jg
ja
lea
sub
pop
sub
jecxz
mov
adc
aas
imul
lret
fwait
les
mov
jge
movsb
inc
pop
mov
push
xchg
push
stos
mov
inc
incb
ds
mov
fbstp
jge
add
cltd
lea
addb
sub
icebp
push
xor
jp
jne
jecxz
cmpsl
imul
outsl
mov
daa
flds
push
push
and
dec
shl
inc
addb
cmpl
xchg
cmc
dec
pop
jae
dec
aas
ficoms
mov
ja
shrl
jb
es
push
push
arpl
fsubr
daa
jb
mov
pshufw
cmp
cli
in
sti
add
sti
xchg
les
xor
ss
xor
out
sub
cld
pop
pusha
rcrb
cs
insb
mov
pcmpgtb
int3
lret
jmp
scas
sbb
jle
pop
dec
add
lea
aad
repz
stc
xor
lret
pop
ret
arpl
fldl
scas
in
xor
cwtl
adc
xor
out
or
cmc
and
sbb
rorb
sub
pusha
mov
and
dec
ror
dec
dec
les
in
loope
xor
scas
pop
in
xchg
in
in
icebp
pop
mov
mov
adc
push
mov
out
rorl
xor
add
push
mov
cld
push
dec
inc
adc
jecxz
dec
inc
jae
cld
or
icebp
out
movsl
jle
mov
aad
cld
das
stos
sub
out
orl
adc
pop
je
test
cli
jo
adc
mov
push
cmpsb
mov
cwtl
cmp
sti
fisttps
popf
and
js
add
cmp
mul
sbb
js
mov
mov
sarb
aam
pop
rcrb
jno
add
inc
lea
lret
and
jo
dec
mov
lods
mov
or
and
sbbb
mov
fs
cs
out
pusha
jae
sti
pop
xor
std
dec
cmp
dec
jmp
jbe
sub
or
jl
xchg
push
push
pop
shll
or
dec
cmpsl
mov
nop
cmp
and
jo
push
lret
negl
jne
outsb
pop
call
sbbb
jmp
push
inc
shll
jne
mov
mov
cmp
xor
jns
hlt
cmpsl
pop
pushf
xor
mov
or
je
pop
test
ja
mov
adc
pop
popa
pop
iret
sub
jnp
pop
insl
dec
lea
sub
insb
xchg
outsl
std
mov
mov
shll
inc
divl
sub
cmpsb
dec
mov
lcall
imul
insl
jmp
ja
add
mov
maxps
daa
jns
fldenv
xchg
test
daa
xchg
xchg
or
pusha
jae
mov
and
push
inc
cmp
mov
sub
loop
xchg
jge
add
aaa
imul
es
jno
xor
sub
daa
sub
and
out
cmp
rolb
adc
movsl
mov
push
loop
cld
fbstp
je
pusha
mov
leave
sub
je
jp
mov
dec
sahf
dec
aam
add
arpl
loop
in
mov
and
xchg
pushf
aam
decl
scas
rclb
pop
inc
mov
icebp
sbb
lahf
fistps
in
pop
aas
fs
loopne
mov
ret
xchg
int3
aad
cmpb
orb
mov
adc
jp
jp
aam
xchg
or
adc
sub
inc
dec
icebp
std
mov
xor
or
jb
push
adc
mov
cmp
push
xchg
lahf
fidivrl
push
push
ss
sahf
fimull
lds
inc
sub
mov
adc
xchg
sub
mov
inc
adc
lret
xchg
shlb
lcall
movsb
inc
in
or
es
dec
jmp
insl
sub
and
insl
jg
test
lret
pop
push
jnp
mov
add
sub
rcrl
mov
dec
dec
add
loop
repz
fcomps
sahf
mov
data16
dec
out
jg
pushf
repz
mov
inc
pusha
mov
and
daa
xchg
sub
push
mov
in
add
jge
icebp
in
adc
xchg
ret
push
sbb
das
scas
repnz
hlt
leave
outsb
push
mov
fwait
dec
add
add
add
imull
jbe
outsb
jne
stos
add
sar
ret
add
sub
mov
mov
mov
les
adc
mov
iret
les
xchg
push
push
sub
xchg
or
test
dec
cmp
add
vucomiss
int3
jge
dec
dec
in
inc
or
mov
pushl
pop
mov
push
dec
cmc
int3
ret
arpl
pop
xchg
push
sbb
adc
loopne
pushf
sbb
sbb
and
les
pop
fwait
pop
cmc
scas
popa
rcll
or
xlat
mov
sbb
mov
dec
jno
pop
fdivrl
bound
adc
je
or
mov
mov
jg
jl
lods
push
je
stc
rorb
test
jae
loope
das
cmpsb
push
shl
mov
xor
in
or
insl
sub
or
bound
xchg
cmpsb
sarl
xchg
out
jns
inc
jb
inc
add
or
mov
xor
leave
pusha
add
pop
icebp
roll
popa
push
and
sbb
inc
ds
ljmp
sub
andb
xor
nop
sbb
movsb
loopne
out
ds
rcrl
aam
mov
sbb
sub
std
neg
sbb
inc
loop
mov
add
push
bound
daa
fcmovnu
stos
sub
xchg
adc
or
repz
int
scas
xchg
call
sub
js
xchg
les
sbb
movb
fldenv
sbb
add
inc
jecxz
lret
mov
sbbb
jmp
sub
or
xor
pop
ss
pushf
inc
rorl
cltd
lea
lods
and
mov
xchg
inc
mov
jecxz
lods
xchg
adc
add
pop
adc
test
in
iret
pop
mov
ja
out
sub
in
fdivrl
test
push
movsb
test
pop
mov
jmp
mov
rclb
xchg
adc
lods
push
ds
pop
ja
in
pusha
movsl
mov
cs
dec
sbb
stos
shrl
xchg
shr
pop
adc
push
inc
xchg
cltd
das
sub
jnp
cs
adc
sahf
pop
fimull
add
ret
mov
xor
dec
mov
add
outsl
cli
add
xchg
pop
mov
iret
das
mov
adc
inc
mov
and
jae
mov
hlt
dec
pcmpeqw
or
mov
and
fcoms
outsb
mov
push
mov
mov
pop
adc
rcl
adc
je
lods
xchg
xor
xchg
lret
std
test
dec
out
test
or
cmp
add
cmp
mov
mov
repnz
or
jge
in
cmp
insl
out
call
pop
arpl
jbe
cld
xchg
lea
sub
pop
stc
mov
sar
sbb
out
cli
sti
mov
mov
mov
add
and
cmp
cmp
mov
xchg
inc
addr16
je
mov
xchg
movd
je
xor
in
pop
xor
cld
and
push
lds
cmp
mov
sub
push
adc
xchg
dec
lcall
fbstp
shlb
test
test
das
sbb
rcll
cli
push
mov
cmp
sub
ljmp
push
adc
out
lea
int3
mov
dec
lcall
jmp
push
xor
sub
inc
cmp
test
pop
cmc
xchg
pusha
xor
popa
cmpl
mov
dec
test
jne
sarl
paddb
pushf
and
push
pusha
sub
rcll
jae
dec
mov
fidivl
mov
xchg
cld
in
cld
adc
lds
xchg
shrb
inc
shlb
iret
lods
cmp
mov
loopne
repnz
dec
push
push
xchg
fwait
lret
inc
pop
fildl
and
sub
shlb
dec
xchg
jnp
jle
sub
or
ss
inc
pop
inc
iret
and
xor
subl
repnz
mov
scas
gs
and
jns
fs
arpl
sbb
xor
cmpsb
and
inc
pop
scas
mov
or
xchg
cmp
cmp
pushf
lcall
fmul
mov
xchg
pop
pop
imul
adcl
cmpsl
fldl
sub
cmpsl
test
jne
mov
or
add
add
mov
sbb
and
sahf
push
jp
jae
sbb
mov
aas
mov
lods
clc
in
pop
nop
pop
fnstenv
cld
cmp
rorl
mov
test
jo
mov
in
int
in
loope
or
lret
pop
lock
fcomps
or
push
jnp
xchg
inc
push
dec
sarl
mov
xor
hlt
sub
adcb
add
jle
mov
icebp
les
test
cli
push
push
leave
cmp
cld
sbb
mov
pop
mov
xlat
daa
sub
gs
jle
fcompl
rorl
test
sbb
and
sahf
outsl
jge
push
dec
imul
mov
xchg
inc
fistpll
lods
lcall
pop
pop
imulb
sbb
test
pop
pop
and
adc
or
int3
inc
and
push
ss
sbb
inc
sbb
xchg
hlt
cmp
jo
inc
pop
outsl
xchg
icebp
cmpsl
xchg
test
push
fwait
push
int3
movsb
mov
sub
add
into
cmp
out
int
fldl
mov
in
ljmp
xchg
adc
push
pop
scas
sub
es
pop
xor
sub
sahf
aad
clc
mov
mov
or
xor
notl
lea
xchg
popa
lods
popf
mov
roll
test
aad
mov
xor
inc
aad
iret
and
int
jecxz
sbb
dec
cmpsl
xchg
mov
sbb
sahf
aam
cmp
scas
es
dec
pop
pop
cmpl
mov
in
push
xor
data16
push
add
and
movsl
jg
push
sub
pop
mov
and
cmp
xchg
neg
pop
inc
insb
cmp
mov
mov
pop
sarb
js
in
lcall
add
mov
push
es
adc
sub
adc
lahf
fldcw
adcb
push
mov
sbb
jno
ja
pushf
sbb
dec
add
fistps
cwtl
push
mov
scas
sbb
movsl
sub
mov
push
sbb
lock
inc
lock
jecxz
inc
lret
lahf
fsubrs
ss
sbb
sbb
jae
or
and
mov
inc
xchg
pop
add
mov
xchg
xchg
test
jmp
lret
sub
dec
jno
mov
outsb
pop
pusha
adc
lcall
add
pop
adc
das
cmp
scas
pop
adc
fsub
mov
push
push
mov
or
stos
jne
sahf
adc
xchg
sub
fwait
into
xor
push
mov
das
mov
xchg
or
xor
cld
mov
adc
sub
mov
fcompl
cmpsb
xchg
add
pusha
lods
shlb
jae
add
insl
mov
shll
jp
test
push
cmp
add
andb
jl
pop
cmpsl
movsl
cmp
sub
popa
mov
mov
push
mov
xchg
aaa
neg
mov
daa
push
ljmp
jle
stc
mov
testl
xchg
aas
inc
mov
jnp
out
add
cs
sahf
dec
test
iret
mov
xchg
jns
addr16
xchg
sbb
repz
push
add
pop
das
orb
cmc
adc
inc
push
mov
xchg
das
popa
mov
lock
jne
js
stos
pop
test
filds
jl
xor
loopne
fcoml
jg
xchg
mov
xchg
cwtl
mov
push
add
fnsave
sahf
fwait
insb
inc
mov
mov
or
mov
pop
out
fcmovb
mov
mov
aad
imul
rcll
inc
or
xchg
std
ss
pop
push
into
std
jp
xchg
into
pop
arpl
dec
mov
push
dec
aas
mov
pop
sub
mov
outsl
fisttpl
inc
fwait
lods
jg
or
out
pop
aad
pop
fsub
incl
cmp
inc
pusha
out
push
xor
push
or
aaa
ret
pop
mov
xchg
mov
sub
xchg
inc
xor
cli
scas
fldl
add
inc
test
sbb
push
cmp
xor
push
fsubrs
cmp
ret
and
pushf
jbe
lea
inc
dec
enter
xchg
cmp
out
lea
and
pop
mov
rcll
jo
sub
aas
sub
inc
ret
mov
imul
pop
and
xchg
ret
cmp
shr
lock
sbb
jns
or
inc
push
rorb
mov
cmpsl
lcall
and
or
je
mov
ja
jnp
xor
mov
jno
cmpsb
mov
push
cmp
shrb
divb
enter
mov
es
loop
mul
push
movsb
or
ret
loope
and
jns
sub
jns
push
lods
inc
or
push
int
fisubrs
jg
inc
fiaddl
mov
jle
arpl
adc
cmc
mov
dec
test
outsl
mov
push
int
out
mov
sub
mov
sahf
jno
fldcw
cmp
jecxz
in
xor
xchg
fstp
aad
repz
or
ds
stos
dec
repz
cli
outsb
sbb
popf
cwtl
dec
mov
or
cmp
jbe
pop
nop
mov
scas
xor
mov
mov
cld
jmp
gs
xor
mov
adc
shll
insl
or
push
sub
mov
pop
and
ljmp
mov
jp
sahf
insb
in
xlat
pop
xor
push
mov
cmp
cmpsb
adc
inc
pop
fmuls
js
into
dec
adc
xchg
mov
lea
dec
loop
jp
pop
sbb
sub
mov
aas
sti
ds
jecxz
inc
mov
inc
pop
lods
adc
movsl
cmpsb
mov
xor
outsb
ret
sbb
jge
imul
mov
add
sub
shll
push
inc
push
xchg
mov
sbb
xchg
mov
aad
push
mov
test
out
rolb
ret
leave
ret
repnz
stos
fisttps
stc
testb
dec
loopne
xlat
lods
loop
pop
rorb
dec
in
jecxz
mov
stos
dec
addl
dec
inc
push
call
loop
or
push
or
out
and
mov
dec
lret
bound
add
cmp
jbe
shlb
scas
mov
movsl
pop
testl
and
test
sub
shrl
ret
inc
in
ret
or
sub
mov
add
testb
or
add
aas
jns
push
lods
mov
dec
dec
and
cmp
pushf
popa
pop
xchg
bound
cli
inc
mov
lea
int3
dec
mov
int3
xchg
or
clc
cs
arpl
mov
scas
adc
out
mov
push
bound
data16
imul
fiadds
sbb
xor
jmp
mov
fwait
pop
pslld
pop
sub
sbb
push
subb
aaa
pop
pand
add
fdivl
das
xchg
sub
lret
test
out
push
pop
rcrl
add
add
xor
adc
test
das
xchg
xchg
push
xor
or
pop
imul
sbb
sub
jp
outsl
xchg
dec
test
das
sti
pop
adc
loope
push
xor
imulb
rcll
pop
cmp
add
mov
and
xchg
push
mov
mov
sub
sbb
cmp
cs
sub
cmp
xchg
pop
fldl
mov
cwtl
sti
mov
lock
test
pushf
push
mov
or
cmp
aad
andl
pushf
mov
outsl
fildl
mov
sbbl
xor
lahf
sub
xor
sahf
jmp
aaa
jo
push
iret
ficompl
sbb
jo
push
in
ficoml
cmp
cmp
enter
mov
nop
les
mov
mov
jp
sub
mov
mov
cs
lcall
pop
pop
add
mov
dec
scas
fists
xchg
addr16
cmp
call
push
in
mov
mov
xchg
int3
imul
lret
in
inc
and
push
std
xchg
fisubrl
dec
xchg
js
das
mov
adc
jle
sbb
mov
push
lret
mov
daa
xchg
jno
inc
dec
jb
adc
dec
ret
cmpb
inc
adc
repz
xlat
mov
add
clc
fsubrs
jbe
pop
enter
addr16
adc
imul
inc
loope
out
movl
cli
add
xchg
ja
pop
push
cmpsl
mov
data16
push
int3
pop
jns
or
xchg
popl
lahf
adcl
loopne
xor
fisubl
add
push
shrl
cwtl
movsl
ficoms
push
jb
cmp
js
xor
out
andb
or
cs
pop
sub
fisubrl
inc
fadds
sbb
popa
into
lahf
jb
fistps
dec
pop
jo
and
mov
mov
sbb
mov
repnz
sub
sub
fdivp
scas
sbb
mov
mov
mov
sub
out
scas
ss
pop
lcall
movb
shlb
iret
pop
or
or
push
lds
iret
test
jle
lcall
jae
jecxz
mov
out
push
push
ja
enter
inc
outsb
repnz
test
inc
jle
aad
shrb
sbb
xchg
loopne
out
cmp
pop
pop
push
scas
jno
cmp
and
in
mov
jl
inc
sbb
mov
mov
mov
out
dec
inc
in
rclb
jno
jl
sub
addb
in
stos
mov
mov
xchg
inc
lcall
cmc
shll
sbb
loope
cmp
test
adc
pop
insl
leave
mov
and
pusha
ja
mov
sub
clc
mov
sarl
jb
jo
outsl
jle
xchg
out
xchg
stos
sbb
and
ss
push
jl
push
or
and
or
dec
push
adc
fsts
sub
out
loopne
inc
rcrl
repz
jmp
xchg
stos
dec
mov
or
inc
pop
jbe
lea
aad
insb
stos
loop
mov
dec
icebp
cmpl
ljmp
pop
sub
sub
add
out
sti
mov
es
lods
es
into
mov
xchg
push
outsb
adc
xor
mov
jg
fadds
subl
push
and
cmpsl
mov
insb
xchg
sub
aad
clc
or
fs
les
mov
mov
dec
and
pusha
out
clc
adc
xor
gs
and
arpl
and
xchg
mov
scas
mov
xchg
lret
cmp
pusha
xor
call
pop
gs
mov
sarl
gs
dec
or
add
mov
imul
pop
xchg
rolb
in
nop
outsb
pop
imull
int3
dec
into
lea
incl
in
aaa
push
data16
lret
pop
adc
mov
cmpsl
xchg
mov
std
mov
movsb
popa
sbb
push
ja
add
sbbl
rorb
xor
mov
ja
out
dec
inc
cmp
lahf
out
fildll
pop
push
push
jae
gs
xlat
cli
jmp
pop
add
xchg
push
mov
sub
out
cmpsb
shll
shrl
icebp
push
mov
test
lahf
push
pop
mov
push
sbb
mov
mov
stos
push
test
jg
repnz
mov
pop
lds
mov
sub
iret
mov
mov
cmp
les
cmpsl
pusha
cmp
adcl
adc
mov
scas
inc
push
cmp
subl
and
sbb
xbegin
das
dec
mov
imul
pop
xchg
mov
push
mov
shl
push
sub
aaa
arpl
loopne
mov
rcl
repz
arpl
sbb
lret
xor
mov
mov
movsb
mov
pushf
out
push
aaa
pushf
xlat
pop
cmpl
and
dec
aaa
jecxz
jae
cmp
or
es
and
testb
out
out
das
mov
mov
pushf
dec
lahf
push
loop
addr16
ret
out
incb
push
cmpl
jno
pop
gs
aas
mov
pop
fisubl
adc
rcrl
cmc
jb
mov
dec
jp
push
mov
sub
aaa
adc
inc
fdivl
lods
fisubl
fs
nop
test
js
lea
sbb
int3
in
mulb
mov
push
cmp
mov
pusha
lret
add
stc
inc
push
cld
andb
fimull
xor
fucomp
enter
jp
add
pop
mov
jge
and
xor
in
jp
xchg
aas
in
mov
outsl
jecxz
test
mov
out
jmp
push
dec
xor
mov
lret
imul
dec
xchg
movsl
cld
sbb
xorb
inc
or
pop
mov
mov
inc
mov
pop
and
nop
filds
inc
mov
and
mov
dec
rcrb
adc
sub
or
inc
pop
sbb
pop
in
outsb
mov
mov
out
jnp
and
scas
jb
xor
push
lcall
popf
jmp
push
lds
push
aad
jl
push
fildll
or
lret
in
inc
popf
xchg
jl
sbb
dec
push
movsb
dec
xchg
cmpsb
pop
adc
cld
jne
loopne
or
leave
and
lcall
sub
sub
popf
out
adc
or
mov
das
jb
ss
jbe
jno
lods
mov
and
mov
ss
cmp
pop
adc
mov
and
cmc
sub
hlt
test
stos
lds
jg
pop
xchg
dec
pop
fdivs
xchg
aaa
int
cs
xchg
jbe
push
mov
adc
mov
inc
in
mov
cld
mov
test
mov
ja
xchg
fisubl
cmp
adc
pop
sbb
jno
cmp
imul
test
and
lahf
cmpl
sbb
xchg
scas
insl
enter
cwtl
popa
cmc
or
add
jno
std
mov
or
adc
push
loopne
aaa
imul
sub
jg
sub
pushl
ret
dec
test
das
sbb
sub
test
sbbl
lea
mov
shlb
inc
push
xchg
cmpsb
xorl
js
movsb
aas
mov
movsb
test
or
jno
pop
sahf
and
cli
and
jno
into
loop
mul
jnp
lret
or
or
adc
lock
add
mov
lds
outsl
or
movsb
jnp
out
pop
sbb
cmpsb
jne
fnstsw
sub
sahf
push
xchg
mov
flds
mov
cld
into
fs
clc
scas
inc
xchg
imul
jmp
js
push
out
jno
inc
movsl
or
cwtl
aas
das
jbe
lcall
jnp
loopne
fdivs
adc
xor
scas
fisttpl
cltd
idiv
xor
outsl
loope
lcall
aad
arpl
inc
sahf
push
adc
mov
sub
fistpl
out
cmp
jns
push
mov
inc
ret
and
in
loopne
adc
push
and
mov
mov
fwait
jg
clc
mov
dec
adc
mov
adc
sub
push
popf
arpl
push
aas
hlt
loop
les
cmc
jnp
xchg
outsl
jecxz
mov
test
xor
mov
mov
shrl
pop
or
popa
loop
push
lods
jbe
or
adc
lahf
xchg
iret
mov
unpcklps
jge
sub
aam
fmull
pop
adc
sbb
mov
mov
pop
divl
mov
imul
jp
mul
stos
fdivrp
divb
xor
inc
lret
mov
xchg
pop
repnz
cmp
mov
outsb
sub
push
orb
out
mov
fnstenv
inc
xchg
out
arpl
sti
in
adc
add
out
in
les
loop
adc
inc
or
lds
push
xlat
sbb
adc
mov
add
pop
iret
mov
sbb
push
loop
outsl
fdivs
dec
and
out
push
pop
adc
inc
sub
mov
cmp
aaa
inc
xor
push
mov
pop
cmpb
jo
pop
or
adc
in
fwait
cmpsb
inc
cmpsb
dec
fisttpll
jp
les
test
add
data16
pusha
les
dec
outsl
movsb
xor
jo
fisubl
mov
push
mov
mov
or
mov
inc
dec
mov
popf
cmp
cmpsl
das
sub
inc
sbb
scas
mov
stos
nop
fiaddl
pop
call
in
imul
dec
sahf
jp
jo
sub
inc
add
and
shll
mov
lods
lods
xor
mov
popf
in
lret
mov
xchg
ret
scas
cmpl
dec
mov
loope
or
jl
sbb
imul
jmp
mov
pop
outsl
cli
xchg
outsl
mov
lret
shl
mov
int3
mov
jnp
jmp
xchg
pop
rolb
push
cmp
mov
movsl
inc
imul
clc
jge
mov
add
popa
movsl
pop
not
pop
sbb
cmpsb
jge
mov
cmp
mov
subl
pop
mov
cmp
rcl
and
mov
repnz
test
int3
mov
test
pusha
adc
out
jne
cli
dec
ficoml
imull
lock
data16
or
jno
loope
mov
aas
sbb
stc
mov
arpl
add
lret
test
lods
and
mov
mov
je
jg
inc
mov
test
inc
jle
push
add
popl
lock
outsb
dec
mov
aam
push
inc
out
cmp
rol
rcrb
fiaddl
aas
loopne
or
xor
dec
fisttpl
push
mov
jge
cld
inc
pop
xor
ja
lods
fisttps
ja
into
lret
sub
repz
and
popa
dec
inc
xchg
or
cs
adc
roll
push
lods
in
push
iret
mov
push
test
lret
ss
cs
cli
cmp
aas
int3
in
xchg
mov
popa
fimull
out
mov
dec
in
imul
lret
cltd
scas
sbb
loope
add
les
push
inc
ljmp
into
xchg
scas
psubb
mov
sub
mov
fisttps
in
add
inc
outsb
xor
faddp
mov
jno
mov
imul
pop
jecxz
ja
xor
loop
bound
dec
rcrl
cmpsb
ret
fs
and
fiadds
xchg
insl
fcmovbe
dec
cmpsl
push
dec
stos
sbb
sti
fisttpl
cmpsb
aam
cmp
mov
outsl
xor
jmp
xor
rolb
dec
pop
mov
mov
inc
fstpl
lea
lea
cwtl
xchg
sub
mov
mov
jecxz
pop
sub
xor
cmc
aad
add
xor
nop
and
shrb
xchg
fwait
ret
xlat
push
push
popa
out
mov
xor
rcrb
movl
lret
inc
imull
cmpsl
ljmp
push
jmp
ja
ljmp
scas
push
sti
stos
cmpsb
ret
lcall
adc
stc
call
xchg
jnp
aam
sbb
mov
mov
test
stc
cmc
jmp
lock
jmp
pushf
test
aam
xor
xchg
mov
cmp
adc
out
and
and
cmp
testb
jns
pushf
cmp
nop
mov
mov
push
scas
mov
jmp
repnz
or
roll
sub
fidivs
inc
in
outsb
and
cmpsb
sbb
repz
xor
jae
jge
dec
push
add
inc
cmp
and
sbb
test
mov
test
aad
test
add
in
sbb
outsl
mov
cmpl
shlb
ret
in
dec
fucomip
andl
mov
data16
jno
adcb
sbb
pop
out
and
out
jbe
mov
mov
adc
lods
gs
pop
test
popf
add
pop
fstpl
les
mov
xchg
stos
or
push
sub
and
mov
int
add
popf
mov
insb
lock
int3
mov
mov
fidivl
mov
adc
xchg
lods
cltd
aas
push
maskmovq
testl
cmc
sub
jmp
fisubl
xchg
mov
nop
nop
sub
outsb
aad
and
in
popf
imul
ja
jb
lds
dec
mov
cltd
push
sub
jmp
out
push
fdivs
pop
add
cmc
in
pusha
adc
out
xchg
frndint
cmp
sub
jnp
push
push
popf
sub
shll
add
lret
jl
sbb
inc
mov
xchg
xor
pop
xchg
test
inc
in
sub
call
inc
filds
xor
arpl
data16
cmpsb
mov
mov
decl
xor
inc
cltd
add
inc
xor
ljmp
lret
popf
bound
ljmp
cmp
dec
sub
mov
push
movsb
or
mov
dec
and
movsb
and
adc
mov
icebp
pop
lds
xchg
andb
ss
xchg
out
divb
inc
lret
pop
lret
sub
stos
outsb
add
int
xor
ja
sbb
repnz
and
fcoms
sbb
pop
imul
add
popf
daa
xchg
mov
insl
mov
sub
mov
xchg
subl
xchg
movsl
lret
adc
pusha
out
push
jo,pn
add
testl
adc
imul
mov
aam
jae
addl
gs
call
mov
loopne
adc
sbb
mov
cli
add
lods
jnp
jle
jbe
mov
mov
push
add
or
lcall
mov
sbb
imul
sbb
rcr
inc
mov
mov
testb
das
and
jmp
scas
sub
into
jmp
in
das
lock
aaa
fwait
mov
xor
out
xchg
jmp
cmp
cmpsb
movsb
les
sub
add
push
mov
sub
lahf
rcl
popa
adc
fnstenv
iret
xchg
jmp
call
mov
lret
orb
xorl
inc
insb
cs
add
in
mov
into
or
lods
jg
lds
inc
es
daa
pop
push
dec
sahf
jne
jmp
and
push
sub
rcl
cmc
inc
xchg
mov
pop
movsl
fcmove
dec
push
jl
fmuls
xchg
test
pop
lods
repnz
and
push
inc
pop
jg
inc
scas
add
dec
leave
aam
push
ret
nop
popf
sub
mov
mov
jns
sbb
loopne
iret
jmp
add
roll
push
subb
stos
insl
sub
gs
add
lds
and
jae
dec
sbb
cmovns
mov
lods
lods
in
adc
jns
mov
leave
outsl
aad
icebp
lret
fwait
jecxz
scas
push
mov
out
pop
jo
stc
cmc
lea
xchg
jle
sbb
and
dec
out
dec
aas
cmpsl
add
pushf
testb
dec
in
lret
clc
dec
ret
jmp
mov
mov
insl
fdivrl
ret
mov
jb
or
ja
pop
outsb
popa
rep
stos
in
mov
push
scas
or
lret
pop
inc
push
xchg
cmp
andl
bound
bnd
aam
pushf
int3
out
or
enter
hlt
lock
sahf
addl
fildl
cmp
xchg
add
stos
push
xchg
push
cmp
ss
jo
gs
in
sbb
cwtl
xchg
call
imul
std
jns
xor
and
jl
rcll
imull
call
inc
push
add
stos
hlt
cmp
pop
int3
mov
out
xchg
mov
add
adc
sbb
sub
pop
mov
pop
or
nop
cmp
pop
outsb
push
insl
push
pop
aas
adc
mov
loop
mov
iret
mov
sbbb
aad
mov
mov
and
pop
aaa
sub
cmp
dec
inc
cmp
pop
rcr
sbb
mov
in
inc
and
xchg
push
cmp
inc
dec
or
lds
es
and
shlb
dec
sub
sti
jns
cwtl
sub
movsl
add
add
xchg
cmp
push
ret
mov
jge
adc
lods
cmp
sbb
mov
sub
aaa
push
rorl
ss
arpl
insb
xchg
inc
mov
lahf
hlt
dec
xorb
inc
mov
mov
jle
cmp
out
or
lahf
testb
cs
pop
push
mov
add
mov
test
enter
or
aad
popf
adcb
out
fimull
push
movsb
xchg
cmpsl
pop
and
mov
push
ret
xchg
add
inc
stc
sbb
in
inc
xor
gs
mov
lods
mov
cmpsl
stos
dec
xlat
mov
test
fmuls
mov
jp
sbb
popf
push
addb
xchg
repz
out
cmp
scas
call
mov
sub
inc
popf
inc
popf
inc
fs
fisubrs
or
sub
push
xor
pop
push
dec
stos
xchg
cmp
cs
inc
rcll
mov
jle
pop
fwait
or
inc
pushaw
aam
addr16
aaa
shlb
or
scas
mov
cmpsb
or
aad
outsb
incb
adc
mov
imul
scas
inc
dec
dec
aas
out
mov
mov
stos
int
test
std
lock
lahf
out
pop
lods
inc
xchg
dec
mov
insl
pop
adc
fcom
fisttpll
ja
push
push
mov
mov
mov
orb
in
sub
in
add
enter
and
inc
cmp
mov
scas
push
push
aam
loopne
mov
push
jg
insb
jnp
sub
adc
and
pop
mov
dec
adc
cmp
cmp
outsl
out
movhps
or
pusha
inc
fstl
mov
outsb
sub
mov
pop
fadds
lret
inc
xchg
int3
mov
jo
jecxz
sbb
xchg
fisubrl
pop
mul
aam
push
pop
out
jae
lods
sbb
or
and
pop
inc
ljmp
or
push
jg
pusha
scas
in
and
mov
repnz
push
std
es
dec
aas
inc
ret
ja
lahf
mov
inc
fmuls
jle
shll
xor
dec
cmpsb
push
stc
pop
insb
sbb
lods
sub
xchg
data16
dec
out
or
dec
or
jge
out
pop
dec
aas
mov
cmpsb
icebp
into
rorb
or
stos
mov
mov
xchg
adc
cmp
sbb
and
or
andb
inc
dec
pop
mov
out
xchg
sub
and
mov
xor
sbb
jns
call
cwtl
sbb
daa
pop
jo
jne
mov
fisubs
aaa
cmp
jno
or
loop
mov
adc
xchg
dec
mov
ret
in
push
pop
sti
dec
jmp
xchg
pop
nop
sarl
rcrb
lds
mov
adc
lods
or
loopne
aad
pop
loope
negl
xchg
ljmp
insl
es
mov
test
outsb
cmp
pop
pushf
gs
cmp
pop
fcomps
sbb
pop
imul
xor
shll
outsb
pop
sub
xor
mov
jns
dec
lods
xchg
mov
aaa
pop
rol
dec
adc
test
sub
jg
lahf
xor
je
inc
sub
pop
cld
mov
push
cmpsl
cmp
xchg
push
paddsw
scas
xorl
rcrb
loop
add
mov
cltd
leave
pop
cmp
pusha
pop
popf
push
inc
jne
add
sub
xor
mov
mov
bound
add
bswap
orl
aam
xor
push
scas
xchg
pop
scas
mov
int
push
fdivs
sub
push
vandnps
mov
pop
mov
mov
sbb
decb
push
push
add
adc
mov
fisttps
ja
loopne
adc
or
call
out
jns
cmp
and
dec
mov
jmp
jg
lods
popf
jbe
insb
bound
popa
or
leave
ror
ret
adc
xchg
call
in
cmp
imul
push
leave
neg
mov
jecxz
outsb
movsl
icebp
jle
mov
push
repz
scas
push
sbb
push
ja
std
lcall
mov
add
or
xor
testb
xor
xor
cli
xchg
shl
pop
or
sbb
insb
movsb
xchg
fsubp
insb
mov
rcr
fidivs
pop
fsubrs
push
push
mov
cltd
adc
in
jmp
aas
and
aaa
and
loope
mov
pop
leave
push
push
cmp
out
lock
test
popf
ljmp
lea
mov
jl
lods
faddp
jns
mov
jecxz
dec
scas
lret
fidivrs
or
jp
rorl
push
popa
rclb
pop
add
inc
pop
sub
jmp
push
push
jo
mov
les
add
ret
out
dec
mov
je
mov
add
mov
or
mov
mov
fmul
cmp
sub
lea
cmp
add
stos
xchg
jle
dec
mov
inc
fldl2e
cmc
xchg
add
inc
lods
out
aam
push
and
dec
insl
dec
cmp
lcall
ljmp
test
push
aam
and
nop
add
aad
lret
test
fnstenv
std
and
into
xchg
pusha
xchg
test
adc
inc
mov
adc
repnz
test
ljmp
push
addl
mov
sti
ljmp
sub
lret
aas
and
jo
xor
push
mov
aad
lcall
xor
ljmp
xor
das
xor
ss
and
dec
loopne
or
call
push
inc
stos
adcb
sbb
ja
jbe
mov
arpl
stos
adc
inc
or
aad
inc
xadd
xorb
or
adcl
ds
lret
fsubl
xlat
stos
push
test
incb
xor
lea
pop
cltd
fists
inc
inc
xor
sub
lret
cmp
int3
shlb
xlat
mov
cwtl
mov
insl
roll
jo
pop
adc
orl
xor
lret
xor
sbbl
repnz
mov
ljmp
pop
sub
inc
add
insl
fstl
mov
inc
lcall
xorb
cmc
fcmovbe
sub
in
cmp
pushf
mov
push
xlat
mov
mov
js
dec
leave
cmp
cld
xchg
adc
mov
jae
ficompl
in
adc
test
outsl
daa
mov
jp
es
cmpsl
adc
inc
rorb
imul
ljmp
mov
pop
stos
test
and
fldl
lea
pop
pushf
mov
add
pop
or
test
aas
aad
out
aaa
int
js
sahf
sub
adc
mov
outsb
adc
fs
inc
push
fcompl
adc
int
ds
in
push
xchg
jl
xchg
push
xchg
call
int3
push
xchg
sub
shlb
sbb
pop
stos
mov
repz
hlt
fs
add
sub
push
mov
fidivl
lods
push
lret
sub
lahf
ljmp
test
icebp
sub
jl
lret
je
and
pcmpgtw
es
push
sahf
and
xchg
filds
lahf
xchg
xor
dec
sbb
and
shlb
sub
ja
add
push
les
fsts
inc
scas
insl
loope
sbb
jg
mov
stc
fcomps
mov
jl
jecxz
aam
addr16
or
cltd
add
mov
cs
nop
addb
mov
pop
je
dec
rcrb
lods
stc
ss
pushf
add
mov
mov
aad
pop
loope
xlat
lods
mov
cmp
adc
repnz
punpckhbw
pop
jmp
jne
push
adc
ljmp
lea
lods
test
scas
cmp
adc
repnz
mov
pop
adc
out
jmp
pop
out
repnz
roll
xchg
mov
sbb
mov
lea
xor
push
insb
mov
insl
shll
jecxz
negb
aad
add
loop
iret
cld
cmp
xor
jae
leave
fdivl
incb
adc
fmuls
jmp
add
jmp
sbb
icebp
fldt
adc
out
ss
cmp
sbbl
cmp
daa
pop
push
das
dec
cmpl
inc
jl
into
out
lahf
lods
push
mov
lret
fildll
pop
nop
dec
les
mov
mov
cmpsl
fcomps
jmp
cmpxchg
test
repnz
negb
lret
or
pusha
xor
popf
jae
xchg
mov
test
stos
add
cmpsl
imul
or
cmp
jecxz
inc
fs
xchg
xchg
jne
and
int3
daa
mov
loopne
or
mov
je
in
lds
loopne
push
aad
mov
and
into
jno
adc
add
out
push
mov
pop
xchg
aaa
es
faddl
shrl
das
mov
hlt
jae
fsubrl
out
les
jle
sbb
mov
cmp
xchg
push
je
or
push
repz
in
lret
repnz
pushf
pop
adc
fistpll
sub
jmp
mov
dec
fldenv
lret
push
jg
fbstp
lret
bswap
mov
and
cmp
push
shlb
sbb
inc
sub
scas
pop
xor
mov
cmp
sub
fiadds
jo
push
push
scas
adc
adc
sbb
pushl
call
dec
lods
test
lret
shll
hlt
testl
jp
call
out
int3
cwtl
dec
jl
cmpsl
out
pop
pop
aad
push
xchg
fcmove
shld
orl
fs
mov
cmp
adc
repz
out
jne
or
les
jle
out
inc
xor
cmpsl
notl
xacquire
fdivrl
js
je
lods
inc
out
inc
mov
mov
popf
push
inc
lock
and
es
loopne
das
int
clc
adc
out
das
leave
pop
jne
xchg
mov
bnd
xchg
xlat
add
sbb
inc
repnz
cs
enter
in
fdiv
aam
mov
out
mov
mov
data16
je
sbb
xchg
repz
xor
aaa
add
adc
cld
push
fimuls
hlt
jne
sbb
setl
in
adc
push
icebp
push
add
cmp
mov
sti
jmp
xlat
imul
fwait
rcrl
out
inc
repz
cmp
or
int
fsqrt
and
lock
or
movsb
or
insl
push
fnstcw
popf
lahf
xchg
aad
ljmp
or
in
repz
mov
jl
fdivrs
xor
dec
sbb
movsb
enter
lahf
sahf
mov
aam
mov
xchg
jnp
fmull
inc
cld
pop
and
fscale
mov
inc
fisubrs
add
mov
clc
pop
in
ror
ret
mov
adcl
cwtl
pop
fnstenv
adc
lock
sbb
das
sub
jno
push
lret
pusha
push
jle
add
xchg
xchg
or
ret
jnp
pop
adc
cmp
fidivs
push
ljmp
inc
mov
dec
add
in
mov
mov
lahf
or
cmp
jno
pop
jne
ds
mov
cmc
adc
cmp
lret
push
inc
adc
adc
inc
jb
aas
in
mov
je
psubusw
insb
fisubrs
jg
or
mov
sub
mov
insb
adc
lahf
hlt
sub
inc
mov
clc
or
iret
negb
test
jb
mov
adc
ds
loop
clc
dec
in
jnp
push
shlb
mov
push
xor
xchg
adc
inc
push
cmp
sbb
aam
dec
loope
mov
out
jbe
mov
pop
shlb
pop
arpl
push
into
jecxz
xor
cmp
cmpb
push
sbb
pop
jle
xchg
xor
popa
and
lds
jg
jne
mov
testl
push
inc
popf
push
pop
pop
pushf
repz
dec
je
lcall
and
clc
jp
icebp
and
fs
cld
in
pop
aas
pop
or
sbb
mov
mov
pop
outsl
jmp
subb
repz
mov
gs
pop
orb
jecxz
into
xchg
dec
nop
jb
dec
in
mov
je
lcall
stos
dec
cmp
es
rcll
ljmp
scas
cmp
adc
or
dec
ljmp
adc
jle
jb,pn
sti
fs
cmp
mov
imul
push
lock
xchg
mov
dec
fwait
add
add
pop
sbb
ja
lahf
or
leave
jnp
xor
push
push
mov
cld
call
dec
and
and
or
mov
and
dec
pop
mov
les
and
or
jb
dec
movsb
dec
mov
fdivrl
imull
jns
rcl
leave
ret
jmp
enter
jg
pop
call
clc
xchg
and
stc
jb
call
mov
push
test
cld
hlt
sub
movsl
xchg
xchg
arpl
call
sahf
into
add
data16
dec
inc
das
adc
and
sarl
ret
loope,pt
add
xchg
lret
mov
xor
pushf
push
addl
xchg
jecxz
test
and
test
inc
pop
dec
cmp
inc
jnp
leave
cmp
xor
mov
ficompl
xor
cmp
mov
or
in
push
ljmp
nop
test
in
jo
pushf
xchg
insl
lock
out
cmp
jge
and
adc
testb
mov
bound
mov
xor
cmp
insl
lcall
inc
mov
inc
mov
js
xchg
xchg
clc
mulb
xor
sahf
adc
push
bound
or
sbb
sahf
adc
inc
out
cmp
faddl
test
rcll
movl
and
adc
lret
ffreep
lcall
push
sti
jg
bound
shl
push
jo
in
pop
xor
dec
cmp
out
cmpsb
mov
jge
mov
dec
repnz
and
out
cld
popf
jp
pusha
pmaddwd
arpl
xor
mov
push
adc
mov
test
inc
xchg
lcall
mov
fwait
xchg
xchg
jp
ss
arpl
mov
sub
xor
andl
mov
inc
cmpsl
jns
xchg
sarb
sub
xor
xor
mov
adc
inc
cmp
mov
push
test
sub
sbb
out
das
push
movsb
outsb
sbb
jmp
push
pop
jo
and
inc
push
inc
test
push
mov
mov
fdivl
loopne
fdivl
jge
jle
sub
push
bound
or
cmp
adc
or
and
cwtl
jl
jns
in
mov
cltd
sahf
lds
push
aaa
dec
jle
subb
pop
leave
jbe
sbb
adc
ret
sub
outsl
clc
mov
clc
xor
outsl
push
or
sbbl
sti
imul
cmp
pop
xchg
mov
pop
sbbl
test
cmc
push
sbb
adc
add
cmp
scas
addr16
jp
sbb
les
adc
xor
push
jnp
rol
lcall
mov
mov
jno
bound
or
cld
push
int
xchg
repz
test
push
call
xchg
jmp
popf
arpl
push
pop
sahf
jp
push
inc
jle
stos
and
ret
sbbb
and
xor
pusha
xor
cmp
rcl
aad
inc
push
in
push
or
xchg
jno
cltd
adc
sub
and
inc
nop
cwtl
cmp
test
dec
add
cmp
inc
sbb
loop
jbe
mov
dec
aad
sti
arpl
popa
sar
jg
fiaddl
es
shrb
aad
lds
jp
sbb
test
cwtl
dec
rcrl
hlt
xorl
dec
pop
out
mov
shrb
mov
or
ret
lret
test
mov
lret
fistpll
xchg
je
jmp
xchg
stos
mov
fisubs
push
cmp
insb
add
test
cmp
or
das
jg
fimull
and
insl
inc
or
jnp
negl
cmp
push
arpl
push
addr16
loopne
lods
pop
pop
or
dec
cmc
imull
or
cmpsb
pop
and
pop
sub
lods
push
cli
nop
das
xchg
fsubrs
sub
lods
loop
mov
fs
je
mov
sub
movsb
gs
jge
mov
push
push
daa
and
and
mov
jno
adc
add
movsb
mov
dec
sarl
subl
hlt
fildll
pop
jge
lods
push
lret
xchg
test
cmp
aad
js
insl
jp
out
pop
test
add
pop
stos
inc
cmp
adc
imul
jp
mov
mov
pand
in
and
mov
icebp
pushf
xchg
push
cs
fsub
pop
adc
outsb
mov
insb
daa
lret
sbb
dec
cmp
mov
push
pusha
mov
add
inc
push
shl
mov
mov
adc
xor
sub
sub
mov
and
test
mov
jle
aam
pop
mov
mov
das
insb
sbb
mov
or
dec
push
lcall
popf
aaa
jnp
pop
in
mov
clc
sbb
jg
push
cmp
mov
pop
xor
into
xchg
jnp
xor
stos
xor
imul
pop
insb
cmp
mov
jp
pushf
popa
or
xor
xor
mov
or
mov
push
dec
xchg
aaa
sarl
or
dec
sub
cmpsl
xchg
push
test
xchg
sbb
stos
fwait
xor
addb
pop
fldl
es
psubw
subb
pop
cmp
mov
xor
mov
daa
sub
mov
xchg
std
adc
movsl
or
test
mov
pop
or
aam
bound
mov
xor
pusha
mull
xchg
in
adc
adc
mov
or
out
ja
dec
xchg
xchg
fisubl
scas
push
sbb
dec
enter
mov
lods
icebp
lcall
jp
add
add
xlat
dec
gs
shrl
add
dec
push
push
loope
xchg
and
pop
scas
or
lahf
lods
xchg
mov
push
dec
xchg
pop
dec
or
jp
cli
sbb
repnz
mov
push
mov
mov
push
popa
stos
aam
shlb
pop
lret
mov
in
mov
shll
lock
hlt
push
mov
pop
nop
and
adc
push
adc
lock
mov
leave
xchg
cmp
xchg
popf
les
and
mov
lea
stc
ss
addr16
or
fbstp
lahf
adc
mov
lahf
pop
xchg
inc
mov
fsts
xor
mov
inc
in
xchg
dec
int3
aas
sbb
insl
andl
pop
jb
xchg
dec
push
xchg
in
cwtl
cltd
mov
ret
js
imul
mov
pusha
lahf
fcomps
pop
fdiv
ljmp
clc
or
cmc
decl
add
xchg
adc
xchg
jg
and
inc
mov
cmp
cmp
scas
mov
sub
sbb
fistl
movb
jp
inc
lcall
in
xchg
push
in
mov
addr16
mov
lar
lods
add
insl
rcrb
out
xchg
lret
test
not
fistl
dec
movsb
lcall
cli
push
xchg
and
pop
mov
jmp
outsl
insl
jnp
push
xor
xor
inc
xchg
and
fstpl
push
mov
xor
and
xchg
or
and
cld
mov
leave
imul
xchg
mov
leave
sarb
adc
mov
insl
pop
into
mov
dec
cli
jne
jnp
repnz
push
xchg
psubusb
fwait
sbb
test
shll
jb
jnp
sar
pop
add
and
movsl
xlat
push
inc
test
sbb
out
addb
cwtl
pop
jae
add
cmp
pop
out
insb
mov
jmp
sbb
adc
mov
dec
fwait
ja
sub
leave
adc
sbb
inc
jne
cld
out
stos
adc
mov
jne
into
mov
or
jno
push
pusha
repz
data16
jle
jge
pop
cli
outsl
or
das
push
insl
and
xchg
mov
and
sub
aad
xchg
add
cmpsl
or
or
ja
jns
inc
ret
cltd
cwtl
int
call
loop
sbb
rorb
and
adc
inc
inc
inc
loope
das
dec
jns
int
mov
cmp
shll
pushf
pop
mov
or
inc
scas
push
daa
es
nop
test
movsb
cmpsb
popf
loop
lcall
jae
addl
sbb
cmp
mov
jnp
and
pop
jg
add
popa
push
lock
imul
inc
lret
call
push
xchg
rcll
inc
sub
enter
cli
sub
loope
stos
mov
pop
cmp
fisttpll
adc
cmp
mov
cmpsb
jl
repz
and
ss
dec
jne
mov
add
scas
jl
daa
xor
dec
adc
cmp
add
clc
mov
sbb
cmp
dec
xchg
lea
loop
fwait
push
scas
sbb
imul
mov
enter
int3
jne
jle
aaa
jg
pop
mov
mov
rcll
lret
pop
cmp
xchg
hlt
xor
repnz
push
jmp
ss
adc
push
xorb
iret
out
add
jp
out
push
clc
mov
adc
sbb
int3
push
adc
inc
daa
inc
jmp
cmc
cmp
jns
test
cmp
push
push
inc
push
push
push
inc
aaa
mov
call
mov
xchg
int
xchg
xlat
or
fdivrp
xchg
lock
jg
pop
lret
sub
push
out
mov
add
inc
push
les
lahf
add
pop
sub
jle
int
lock
inc
or
pop
jb
repz
cmpsl
inc
mov
mov
incb
pop
jb
jns
in
loop
lahf
xor
xor
in
aas
dec
or
icebp
lret
bound
in
paddsw
scas
xor
and
imul
dec
shll
pop
add
jmp
fldenv
add
mov
rcll
mov
mov
lret
sahf
scas
xor
inc
mov
mov
fsubl
sub
and
mov
nop
mov
and
rcl
dec
orps
jecxz
cmp
lods
cmpsb
or
hlt
mov
cmp
outsl
lret
outsl
outsb
and
xchg
adc
fistps
aaa
xorb
mov
std
movsb
pop
cli
fildll
out
mov
repz
out
ja
xchg
cli
xor
arpl
xchg
xor
loopne
sub
fmull
cmp
push
lods
dec
xor
mov
stos
mov
scas
dec
out
xlat
ret
mov
call
and
jmp
add
inc
cmpsl
xchg
lcall
jo
push
sbb
or
inc
fidivrs
mov
adc
cmp
cmp
ficomps
ljmp
flds
pop
arpl
xchg
add
or
sarb
scas
mov
out
pop
addr16
sub
pop
dec
aad
stos
push
loopne
lret
dec
ret
push
xchg
or
push
aad
clc
stc
push
pushf
push
push
enter
xor
dec
cmc
scas
and
aaa
adc
movl
inc
push
pop
shl
dec
rolb
rolb
xchg
and
inc
jnp
dec
test
loopne
and
pushf
std
cmp
fisttpl
xor
cmpsb
mov
iret
or
adc
inc
bound
test
inc
dec
xchg
add
sbb
mov
arpl
test
lcall
clc
jno
imul
mov
or
imul
out
push
jo
pop
or
inc
push
push
testl
les
cwtl
loop
loop
insb
gs
lock
push
test
cmpb
cmp
stc
jno
mov
int
lods
sahf
adc
lea
imul
cmp
and
lahf
mov
addr16
mov
mov
pop
sub
in
loope
enter
cmpsb
pop
idiv
inc
mov
test
pop
push
xchg
xor
mov
sub
cmp
pushf
ljmp
outsl
inc
jae
fdivl
add
inc
sarl
add
movsb
repnz
cld
fwait
hlt
test
sub
sarb
push
xchg
es
mov
push
jno
out
xchg
ja
pusha
jge
or
dec
xor
push
into
mov
mov
test
sbb
loopne
sahf
test
call
test
mov
mov
pop
popf
shl
pop
pusha
cmpsb
sahf
imul
out
shrl
lret
mov
ljmp
aad
jnp
xor
push
dec
mov
dec
or
push
fcompl
push
jl
out
mov
lret
xor
xor
lds
fs
push
sbb
mov
popf
fwait
mov
enter
pop
test
mov
sub
ret
jbe
push
push
shll
mov
jg
hlt
add
sub
data16
in
jno
or
or
rorl
cmc
sub
ljmp
test
xchg
dec
pop
fwait
jl
dec
and
mov
insb
int
stos
inc
mov
xor
addr16
fwait
iret
jge
test
vmwrite
ljmp
insl
mov
fsub
push
stos
daa
mov
mov
cmp
into
push
pushf
lahf
mov
fidivs
sti
cmp
lret
cmp
sbb
push
call
test
dec
mov
movb
cltd
das
or
mov
mov
enter
fiadds
mov
jp
cmc
xor
adc
xor
dec
lcall
pop
enter
sar
data16
xchg
jo
add
push
jge
pop
scas
lea
test
inc
sbb
loopne
pop
insb
adc
imul
aas
push
push
sarb
ja
call
lret
gs
sbb
rorl
rcrb
adc
add
hlt
mov
inc
cmp
pop
les
adc
xchg
movsb
push
cmp
fidivl
ret
mov
push
adc
xor
xchg
adc
xor
and
fcmovbe
xchg
sbb
cmp
aaa
jl
add
jno
push
cmc
repnz
jecxz
bound
cltd
test
mov
in
dec
pusha
sbb
mov
gs
cwtl
pop
arpl
sub
jb
mov
sti
inc
pop
mov
mov
inc
enter
xchg
xchg
ret
in
cmc
cmp
push
jge
aam
or
jb
xchg
cmp
and
xorps
mov
cmp
mov
or
jae
sbb
sti
dec
xor
out
aas
xorl
nop
addb
cmc
xlat
push
imul
aas
out
add
nop
lcall
jmp
mov
dec
push
ljmp
lods
jg
rorl
push
or
imulb
dec
adc
clc
jo
dec
or
sbb
test
mov
jno
and
movsb
xchg
pop
mov
xchg
daa
sbb
inc
jg
movsl
je
faddp
cmp
push
mov
adc
mov
inc
dec
push
mov
scas
rcrl
pop
pushf
mov
sbb
inc
shll
lcall
lea
push
or
scas
in
inc
outsl
gs
push
in
loope
outsl
addr16
push
lods
ss
push
cld
mov
jns
ficompl
out
adc
pusha
out
push
mov
mov
rcl
in
dec
je
xor
ret
repnz
addr16
sub
xchg
ret
mov
aam
mov
jno
and
inc
movsl
sub
push
arpl
int
les
loopne
or
rcrb
jno
pop
inc
into
lahf
cmp
cs
jecxz
dec
fbstp
sub
xchg
ja
sub
sub
idivb
stc
scas
xlat
dec
orb
lods
jb
ljmp
mov
imul
scas
stos
inc
sub
lahf
cld
pushf
sbb
lcall
mov
jge
push
movl
scas
lea
mov
sti
fwait
inc
xor
xchg
dec
sbb
iret
sbb
cmp
scas
push
sbb
dec
xor
loop
xlat
sti
mov
jmp
into
dec
push
xchg
add
add
pop
xchg
mov
pop
and
test
dec
shr
clc
xchg
add
icebp
je
sbb
jg
inc
pusha
pop
jns
movsb
mov
stos
sub
mov
nop
daa
and
add
pop
pop
push
nop
call
mov
test
mov
int3
sub
sub
add
fcmovnu
mov
outsb
xchg
movsl
jmp
and
loope
cmp
mov
lock
cwtl
push
fistpll
lods
jbe
sub
sbb
test
adcb
sub
mov
lods
div
stos
mov
mov
test
cmpsl
bound
mov
sub
pushf
or
add
mov
iret
mov
bound
mov
ret
cltd
ss
lock
xchg
dec
leave
or
test
cld
mov
and
movsl
stos
xor
jmp
adc
fwait
xorl
decl
inc
fcmovnb
sbb
je
psubw
inc
out
or
into
push
aaa
mov
lcall
or
push
das
push
cmp
outsb
arpl
dec
cmp
adc
lret
shr
pop
mov
jnp
and
pop
cmc
into
jg
jns
sbb
mov
xchg
and
mov
sbb
sbb
dec
pop
int3
pushf
push
stos
arpl
lods
movsl
xlat
ja
sbb
loop
sbb
sbb
leave
or
bnd
shrb
loope
nop
cwtl
fnsave
fsubl
int3
shl
cwtl
inc
or
cmp
pop
dec
jp
outsl
mov
xor
and
push
sbb
mov
jmp
mov
test
popa
fmul
add
imulb
xchg
andl
hlt
cwtl
adc
out
fidivs
pop
outsb
ljmp
orl
pop
sbb
dec
fcmovnbe
loope
fcoms
cmpsl
mov
pop
fisttpll
sub
xor
mov
outsb
mov
mov
rorb
imul
pop
test
push
mul
ss
push
mov
jbe
push
mov
xor
jne
gs
fs
jnp
mov
push
stc
adc
add
xchg
push
push
aad
mov
xor
add
ret
aad
mov
lods
sub
or
in
ja
imul
addr16
mul
jg
mov
negl
stos
cmp
sbb
imulb
shll
test
jae,pn
mov
xchg
std
mov
test
and
sahf
xchg
scas
mov
push
test
leave
stos
arpl
xchg
push
stos
or
adc
cmp
push
mov
mov
inc
dec
inc
or
imul
dec
adc
aaa
ficoms
mov
stc
sub
test
xchg
scas
and
sbb
add
test
insl
cwtl
adc
test
xchg
add
imul
test
mov
icebp
sbb
pop
lahf
sbb
stos
cmc
nop
pop
cmp
add
jmp
mov
add
pop
aaa
les
int
sub
lret
fistpl
jbe
movsb
xchg
mov
xorl
lret
mov
shr
notb
loop
in
sub
lea
es
dec
ud0
rclb
or
add
pslld
mov
lods
dec
mov
add
loop
clc
xor
jne
popa
hlt
sbb
mov
mov
xor
out
pop
cmp
dec
arpl
sbb
outsl
mov
hlt
inc
xor
mov
shl
pop
dec
inc
into
fisubs
sbb
cmp
test
pop
cs
aam
test
sbb
add
pop
lods
cltd
pop
xchg
jmp
int
shlb
push
xor
pop
into
leave
ss
repz
enter
shr
mov
mov
outsb
imul
nop
std
iret
scas
sarb
add
mov
push
mov
push
cmp
in
mov
pop
stc
xchg
xchg
icebp
test
inc
ss
lcall
jmp
or
dec
sub
sub
shll
mov
ret
subb
jmp
fsub
or
in
cmp
pop
pop
cmp
fsub
or
dec
cmpsb
jmp
mov
mov
adc
xchg
pop
dec
cmpsl
add
lods
pop
or
xor
adc
scas
add
loopne
lods
enter
dec
pop
in
or
mov
jg
lds
mov
or
in
xor
mov
divb
push
fs
jns
push
loopne
xchg
xor
adc
sub
clc
cltd
stc
inc
imulb
fidivrs
enter
ss
mov
lock
adc
push
in
orl
insl
or
sti
pop
jb
insl
mov
xor
mov
adcl
xor
cli
pop
push
aad
arpl
addr16
loope
aas
jp
xchg
mov
outsl
sub
adc
pop
loopne
es
shrb
dec
xor
sub
enter
icebp
sub
cltd
outsl
adc
inc
popf
lahf
cltd
mov
dec
mov
es
pop
imul
sub
dec
imul
xor
ret
lds
popf
enter
push
mov
jge
roll
lea
pop
jne
das
cmpb
jbe
lods
add
inc
aad
loop
push
and
dec
js
and
ret
xor
fmull
in
fcoml
out
dec
stos
jbe
ljmp
mov
lahf
adc
jmp
mov
fdivp
into
dec
mov
pop
sahf
adc
and
inc
or
scas
sti
fisubrs
cmp
ja
add
insb
jb
leave
inc
sub
stos
in
jp
cmc
mov
pusha
inc
ficoms
push
adc
mov
test
push
dec
test
fs
push
std
jg
loopne
push
fwait
insl
xlat
cs
stc
stc
dec
add
adc
fs
mov
leave
iret
aaa
cltd
fldenv
leave
cmp
xchg
cs
loope
in
fs
dec
imul
dec
movsb
int
inc
insl
add
push
andb
push
lods
mov
test
add
scas
cmp
movsl
stos
cmpsb
mov
inc
enter
ret
xchg
call
jae
pushf
ficomps
cmp
sub
and
sahf
jb
sbb
cmp
sbb
cltd
movsb
push
cld
pop
fld
mov
mov
cwtl
mov
jle
int3
cmp
fists
fcomi
arpl
lret
inc
repnz
pop
in
ror
mov
cmc
cltd
jae
ljmp
mov
aas
push
xor
loope
sub
ja
imull
mov
mov
fs
xchg
add
and
outsl
in
icebp
sub
data16
sbb
jne
lods
push
test
pushf
jg
pop
fs
scas
dec
inc
and
movsl
stc
mov
push
in
dec
mov
outsl
fcmovne
mov
inc
mov
xor
insl
sbb
loope
jno
cmp
push
sbb
cmp
xchg
jecxz
add
not
adc
jl
sbb
pop
adc
vprotq
jae
movsb
outsb
call
pop
shlb
cmpsl
jb
into
sbb
fmuls
inc
xor
push
mov
imul
jnp
and
inc
mov
adc
pop
cmpl
nop
xchg
or
lock
and
xor
dec
adc
lods
push
pop
add
sbb
jecxz
icebp
stc
fisttpl
and
sti
iret
dec
xchg
pop
dec
outsb
inc
pop
cmpsb
test
movsb
inc
ret
cs
add
pop
dec
ljmp
mov
push
dec
fistpll
std
pusha
sbb
loope
jb
icebp
lcall
mov
cltd
mov
pop
cld
sub
mov
or
fcomp
lsl
cltd
mov
rcrb
dec
inc
mulb
cmp
lcall
scas
aaa
pop
jno
fiadds
jno,pn
sub
inc
xor
enter
mov
popa
jp
mov
cmp
pop
pop
push
mov
xchg
cmp
xor
sarl
sbb
sbb
adc
aas
dec
add
aad
arpl
addr16
dec
jl
test
mov
sti
mov
lret
add
mov
es
xor
aad
aaa
push
cld
dec
das
push
sub
sar
or
nop
iret
ds
adc
mov
in
test
pusha
test
mov
js
aaa
int
fucomi
xor
mov
cmp
and
adc
nop
xchg
mov
sti
or
inc
daa
mov
incb
sbb
xlat
xor
dec
loopne
int
xchg
jecxz
arpl
fistps
aaa
mov
in
pushf
cmc
jb
flds
xor
stc
and
js
cltd
pop
scas
push
cmc
mov
push
or
dec
or
mov
sub
or
int
xchg
js
dec
push
cmp
sub
inc
call
adc
inc
les
add
sbb
mov
or
adc
imul
popa
push
test
fs
ret
sbb
pop
pop
push
adc
dec
repnz
xchg
leave
and
cltd
pusha
xchg
xchg
lahf
jns
dec
test
hlt
mov
pop
fldt
pushl
xor
xlat
push
aaa
cmp
ds
sbb
idivb
jne
lods
cld
push
ret
jne
mov
pop
pop
adc
or
jns
lcall
mov
sbb
lds
test
cli
imul
stc
cmpsb
into
scas
and
imul
jl
ss
ja
mov
sbb
fsubs
sbb
ror
enter
mov
sbb
xchg
lcall
or
sub
adc
and
adc
adc
add
outsb
daa
outsl
jnp
loope
xor
gs
pop
xchg
mov
push
pushf
cld
pop
in
and
push
stos
xchg
push
inc
pop
jne
push
dec
and
mov
imul
sbb
adc
adc
xor
mov
jo
insl
cld
and
stos
icebp
push
fisubl
xchg
nop
inc
and
mov
sbb
test
sub
scas
pop
mov
jl
les
jp
stos
jns
pusha
loop
pop
iret
push
out
loopne
sbb
and
cli
sub
lods
rcrb
fs
ret
cmp
mov
mov
xchg
mov
sub
xor
jno
fwait
lds
mov
push
daa
insb
test
mov
fwait
scas
adc
or
in
mov
lock
int
mov
fnstcw
jbe
or
xchg
out
cmc
fcoms
inc
aam
push
mov
pop
push
push
repz
ja
cli
jmp
dec
dec
jge
lock
aaa
icebp
popf
jecxz
dec
mov
and
add
mov
xor
dec
and
sub
sbb
andl
sub
test
icebp
test
xchg
popa
sbb
pop
into
cmc
pushf
cmp
cmc
mov
sbb
push
or
ficoms
iret
arpl
je
dec
pslld
lret
cmp
dec
sbb
push
sbb
adc
dec
add
mov
and
jle
pop
loopne
xchg
or
xchg
jae
xor
xchg
stos
pop
push
rorl
mov
cmpsb
inc
loop
xchg
mov
nop
mov
mov
jl
pop
notb
add
aaa
mov
adc
push
fcomp
sbb
clc
scas
pminsw
dec
mov
and
pop
sahf
repnz
fisttpl
mov
or
jecxz
mov
pop
lds
fwait
xorb
add
popf
into
mov
mov
xor
int
xor
mov
cmp
jns
mov
mov
sbb
out
push
rcrb
int
dec
hlt
aaa
lahf
lret
jge
inc
cltd
sub
dec
incb
mov
shl
mov
pop
in
pop
loope
dec
pop
inc
aas
mov
test
dec
js
leave
lret
jne
jo
and
fimuls
push
insl
outsl
dec
loop
mov
flds
notl
mov
push
fisubs
cs
push
and
jb
inc
cs
lret
push
aad
loope
test
mov
loopne
xor
std
sbb
push
cmp
std
sbb
out
lret
loop
xchg
add
lods
lcall
arpl
inc
jecxz
clc
lds
out
cmp
mov
mov
orl
iret
movd
repnz
stos
adc
int3
push
push
test
rcrb
aaa
pop
mov
cmp
imul
and
addr16
repz
cld
cmp
push
or
mov
mov
pop
cltd
andb
cmp
or
xlat
xchg
fists
push
ss
cmp
mov
stc
fbld
data16
mov
out
movsbl
dec
cmp
adc
inc
adc
push
movsl
mov
jns
pop
cld
or
cltd
iret
stos
sbb
jnp
push
xor
sbb
dec
mov
or
dec
mov
mov
rclb
push
cmpsl
pop
or
insl
movsb
xor
sbb
or
into
sbb
mov
stos
mov
adc
sarl
xor
mov
fdivl
insb
movsl
icebp
dec
pop
out
cmp
bound
adc
mov
int
and
fdivrp
mov
jno
repz
icebp
sub
adc
pop
sahf
ds
stos
xor
mov
pop
repz
dec
lds
jecxz
inc
sub
fidivrl
int
xor
inc
sahf
or
xchg
cmpsb
test
daa
in
lret
sbb
fwait
stc
in
mov
sub
cmp
add
aam
xor
sbb
lods
jmp
std
cwtl
cs
cmpsl
loopne
loop
pop
and
loopne
jb
fisubs
mov
mov
movsb
fstpt
call
mov
push
rolb
xchg
and
orb
lods
cmp
xor
test
mov
stos
sub
nop
fidivrs
push
or
pop
add
fcompl
or
lock
rol
inc
and
jle
add
sub
mov
call
hlt
shlb
imul
sbb
test
cmpsl
inc
nop
daa
rcrl
data16
add
fstl
lcall
neg
std
adc
mov
cmpsl
push
push
xchg
ja
and
xchg
pushf
push
or
mov
addb
cmpsb
xor
pushf
xchg
inc
jmp
pop
dec
daa
mov
cmc
xchg
push
in
mov
sbb
add
mov
cmpsb
rcll
xchg
lock
jno
dec
fistps
ret
shlb
dec
incb
fmull
sbb
movsl
inc
ljmp
movsb
sbb
or
out
movsl
pop
mov
ret
lods
xor
ds
jns
cmpsl
test
jbe
fwait
push
jge
mov
mov
repz
or
xor
pusha
push
pop
jae
or
jnp
sbb
xchg
sbb
stos
ja,pn
pop
mull
in
lods
and
push
imul
cs
pop
stc
jl
cmp
dec
nop
add
shlb
jno
es
testl
je
cmp
mov
mov
dec
jle
mov
mov
enter
es
or
xlat
inc
sub
mov
aam
xchg
lcall
mov
insb
dec
andl
ljmp
scas
fwait
lcall
mov
sbb
mov
inc
or
repz
fwait
sub
in
movsb
adc
pusha
or
fisubrl
mov
insl
lret
mov
xchg
mov
mov
push
and
ss
mov
fwait
test
mov
mov
ret
inc
jbe
mov
test
into
adc
ja
adc
and
pop
xchg
jae
arpl
push
stc
sub
cmp
mov
dec
inc
xor
testb
iret
push
xor
sub
adc
imulb
dec
mov
mov
lock
mov
fmull
ja
pop
jecxz
lock
outsb
and
ficoms
in
lret
mov
es
pop
ss
adc
jns
insl
pop
and
sub
fdivr
nop
pop
subb
mov
pushf
shrb
mov
cmp
int3
cmpsl
or
call
fucomp
cmp
into
out
addr16
add
jbe
fs
mov
jmp
push
mov
inc
and
inc
xchg
mov
test
inc
cmp
pusha
push
or
ljmp
jo
stos
jmp
mov
fs
adc
mov
icebp
pop
cld
jl
cmp
mov
test
ret
push
pusha
out
push
in
add
data16
inc
sbb
cmp
cld
mov
movsl
aas
inc
into
sbb
ds
cmp
sbb
dec
es
ds
cmp
jg
add
test
add
gs
cwtl
rclb
jo
mov
rcr
fildll
dec
sub
je
or
dec
fsubl
ret
push
cmpsl
push
xchg
push
sbb
push
fistl
cmp
xor
xchg
mov
adc
sti
icebp
in
mov
sbb
xchg
mov
mov
stc
and
call
adc
xor
fincstp
ss
push
sub
arpl
or
loopne
sbb
xor
mov
lock
pop
mov
dec
repz
aaa
shr
dec
out
rcr
xchg
pop
arpl
aam
cltd
loope
push
movsl
add
push
pop
sarl
addr16
roll
cmp
ljmp
jae
mov
xlat
testb
sti
sub
inc
clc
divb
repz
clc
sub
call
addr16
ljmp
insb
lods
and
adc
push
jg
addr16
fcomps
push
jmp
addr16
mov
jbe
or
mov
mov
xlat
lret
in
loop
ljmp
sti
xchg
sbb
cmc
jnp
lret
pop
or
mov
dec
xchg
xchg
and
pop
xor
into
pop
push
pusha
scas
sbb
sbb
jno
shr
mov
fidivrl
js
cmpsl
add
xchg
imul
ret
mov
fmuls
jo
pop
out
add
sbb
fsubl
push
pop
popa
sub
cmpsl
inc
movsl
call
xor
shll
repnz
adc
ds
insl
es
mov
pop
xor
loope
xchg
loope
sub
xchg
xor
loopne
cmpb
cmpb
and
je
pop
fisttpll
popa
inc
mov
jno
test
dec
imul
jne
out
xchg
bound
xlat
push
add
sbbl
mov
aad
and
mov
pop
clc
pushf
pop
faddl
pop
pusha
icebp
jnp
jecxz
mov
mov
add
rorl
pop
and
mov
sub
das
nop
inc
gs
loope
inc
or
and
add
jno
in
mov
inc
je
mov
cmp
jb
daa
aam
dec
cmp
xchg
mov
aad
incb
lret
adc
and
mov
lret
je
cmp
enter
and
add
mulb
pop
into
movsl
sbb
mov
aas
in
loopne
cs
sub
lret
sbb
lods
and
test
lret
xchg
or
xor
mov
out
aam
dec
sub
pusha
push
jne
imul
icebp
fcoms
loopne
cmpsb
js
loop
mov
adc
test
sub
mov
aad
pushf
andb
push
in
cmp
in
jg
je
lea
xor
rcrb
xorb
mov
fdivs
lret
cmp
lret
std
xor
pusha
xor
rcrb
or
sub
cmp
add
mov
xor
mov
call
aad
idivl
mov
mov
out
movsl
insl
add
cmp
fcmovnb
and
add
or
in
cltd
jl
cmpb
cld
inc
sub
xchg
sbb
sbb
mov
or
cmp
mov
and
jns
mov
scas
loope
arpl
cmc
enter
cwtl
leave
pop
lods
inc
in
loop
pop
popf
xorl
pop
sub
rcrl
cmc
sub
hlt
es
add
sub
hlt
cmp
adcl
aam
dec
ds
pop
std
out
mov
cmp
ja
mov
popf
pop
xadd
ss
push
mov
enter
adc
inc
mov
xchg
fsubr
das
and
cltd
and
and
or
jns
movsl
adc
roll
xor
cld
mov
sub
cli
sahf
and
nop
or
push
bound
cld
pop
jno
mov
out
testl
lea
dec
add
mov
push
punpcklbw
mov
jp
jecxz
jae
sbb
lods
pop
xchg
xchg
mov
shlb
adc
aaa
imul
mov
into
popf
adc
test
inc
pop
push
jbe
pop
jno
orl
ret
sub
js
test
jl
pop
rol
out
ss
mov
int3
xchg
mov
push
mov
ss
add
loop
jp
pop
int3
ficoms
movsl
dec
xchg
jnp
jmp
dec
push
loope
jbe
incb
push
mov
imul
fildll
push
or
push
idivb
in
sti
repz
enter
cld
push
int
addr16
mov
call
lds
pop
in
shlb
push
sti
cli
js
mov
cmp
mov
in
push
mov
adc
inc
push
push
xor
pushf
fwait
addb
inc
mov
cmpsl
xchg
lcall
and
jle
xchg
cwtl
xor
fs
mov
je
fsubs
imul
xchg
imul
mov
mov
popa
loopne
mov
mov
push
lods
pop
movsl
or
sub
cmp
pop
pop
enter
stos
jbe
cmp
pop
inc
je
inc
pop
pop
sysenter
mov
sub
enter
enter
int
nop
add
incl
repnz
outsb
push
fiadds
lock
sbb
out
jae
test
cwtl
fildl
data16
fnstenv
movsb
ljmp
cmpsb
push
and
sbb
cmp
pushf
lods
stos
xorb
pop
xchg
js
incb
insb
imul
mov
mov
ss
add
mov
jecxz
pop
ljmp
std
cmp
fstpl
out
fstp
ja
or
inc
call
cmp
imul
xor
js
xor
jl
test
dec
xlat
cld
sbb
push
mov
and
repz
inc
rcr
dec
icebp
les
lods
xor
ja,pn
inc
outsb
xor
aaa
stc
fnstsw
cmp
movsl
mov
in
mov
lret
mov
jno
sub
adcb
inc
cld
test
dec
dec
shlb
mov
push
mov
and
jge
ljmp
aad
lods
xor
jbe
xor
dec
adc
or
sub
int
jge
stc
push
mov
lock
inc
out
jle
and
cmp
and
repz
outsb
or
xchg
mov
and
xchg
xor
xchg
push
jns
js
orb
xor
bound
adcl
test
rorb
insl
fcoms
das
push
push
cmp
mov
in
jle
push
add
imul
test
es
call
faddl
pop
sar
scas
mov
testb
movsb
shl
nop
mov
or
jle
aas
lea
push
mov
add
jge
lods
xchg
mov
pop
int3
or
cmp
js
xchg
scas
clc
lock
fdivrs
call
mov
fidivl
in
mov
cmpsb
dec
rcr
fcomps
arpl
in
sub
mov
in
das
push
repnz
insl
out
mov
xchg
xchg
mov
cmc
inc
sbb
mov
imul
mov
cmc
mov
lock
dec
in
add
call
addr16
and
sarb
pop
mov
mov
mov
aaa
or
and
inc
lock
sub
inc
arpl
dec
push
arpl
xchg
iret
movb
test
mov
push
sbb
dec
xchg
movsl
xor
or
mov
lret
sub
xor
dec
cmc
loope
mov
jno
mov
fwait
pop
je
je
xor
hlt
adc
sub
outsb
pop
pop
or
jno
jmp
test
dec
and
pop
dec
xchg
lea
rorl
test
jp
js
jno
es
or
and
int
push
cmp
and
dec
xor
sbb
push
fstp
mov
mov
fs
jg
imul
rorb
push
negl
not
pop
adc
insb
dec
ljmp
adc
insl
sbb
movsb
outsl
loope
js
adc
dec
xor
sub
mov
repz
mov
fdivrs
inc
rorl
cmp
mov
clc
fwait
out
outsl
lea
sub
adc
inc
ret
scas
sbb
xchg
jbe
std
sbb
dec
es
into
pop
test
rcr
enter
mov
add
pushf
pop
push
dec
sub
or
mov
dec
mov
imul
mov
jne
loop
mov
jns
jmp
mov
pop
call
or
scas
push
pop
movsb
ss
mov
mov
add
lret
sub
pop
xchg
ljmp
xor
sub
dec
mov
fildll
add
pop
inc
aas
sbb
sahf
call
sub
push
mov
adc
xchg
shlb
arpl
dec
stos
icebp
shll
adcb
xor
jno
xchg
cmp
and
out
jns
pop
cmp
mov
and
shlb
xlat
icebp
lods
xchg
clc
movsb
lea
xchg
icebp
imul
jae
out
mov
in
sbb
mov
mov
rolb
jae
popf
mov
inc
dec
jmp
fdivrs
push
das
mov
mov
dec
mov
pop
insb
mov
bound
lahf
fdivs
je
and
out
mov
sub
jle
cmc
push
lods
outsl
scas
imul
adc
or
lds
mov
jecxz
sbb
lea
pusha
pop
add
addr16
movsl
xlat
das
mov
loopne
mov
pop
push
pop
addr16
lcall
sbb
push
fwait
sub
loop
dec
lret
negb
filds
rolb
sub
mov
pop
sub
mov
shll
jle
outsl
pop
and
xchg
call
inc
std
sbb
pop
sbb
push
sbb
aad
inc
dec
data16
sbb
mov
stos
adc
sbb
test
inc
in
cmp
popf
adc
dec
or
insl
sbb
jp
inc
repz
stos
push
cmp
ret
add
dec
jo
out
mov
pop
pop
mov
mov
push
test
pop
jecxz
cmp
pop
cmp
jns
inc
dec
cmp
mov
or
stc
lods
roll
into
ficompl
adc
xor
and
dec
or
cltd
adc
xchg
fisttpl
test
cmpsl
scas
or
lret
jge
inc
or
push
bound
cmpsl
dec
add
imul
adc
stos
fldl
xor
adcb
or
mov
fistpl
fs
or
mov
push
cmp
mov
add
test
cmp
sarb
int
jmp
fisubrl
push
call
int3
imul
xchg
cmp
leave
popf
add
jb
jecxz
push
insb
xor
push
loope
xor
adcl
mov
and
mov
test
sbb
push
cs
mov
pop
xchg
jno
mov
adc
fstpl
jmp
sbb
leave
sbb
pop
mov
in
mov
test
lds
rorb
test
or
mov
sbb
jmp
jge
adc
cmpb
cmpl
and
jl
sbb
rorb
outsl
rcl
inc
int
pop
pop
or
sub
fldl
pushf
inc
subl
mov
cmp
fmul
sbbl
sub
add
push
or
shll
xchg
test
mov
inc
push
cltd
roll
pop
hlt
dec
xor
int3
mov
sub
gs
ljmp
lods
mov
iret
addr16
mov
shlb
loopne
cmp
mov
inc
scas
sbb
out
mov
dec
bnd
shlb
fistpll
out
pusha
mov
lret
popf
aas
test
cmp
pop
mov
xchg
in
sbb
scas
push
inc
dec
incl
jle
loop
shlb
in
sahf
jl
sub
jns
add
cltd
lret
in
push
pop
out
ret
push
fwait
cmpxchg
cmp
ret
inc
push
repz
and
add
icebp
addr16
pop
mov
mov
push
lea
or
aas
mov
sbb
pusha
in
push
dec
jmp
add
sbb
aas
mov
and
and
sbb
bound
mov
adc
pop
loopne
sti
out
sub
je
cld
repz
gs
lahf
inc
sbb
sub
ds
xchg
mov
add
and
push
mov
movsl
sub
das
sub
cmp
mov
sub
pop
xor
pop
pop
loope
adc
pop
xchg
rclb
inc
aas
mov
dec
sbb
out
sbb
adc
dec
push
jle
fsts
mov
mov
cmpsb
cltd
jecxz
hlt
push
pop
leave
xchg
lea
leave
pop
lcall
jo
cmp
pop
movb
or
loopne
dec
sarl
xchg
mov
mov
xor
push
fsubp
lods
fld
jmp
fnstenv
mov
cmp
or
jnp
mov
in
shrb
cmp
in
mov
insl
mov
push
enter
je
push
outsb
fildll
push
or
fmull
pop
popf
mov
lcall
lods
test
cmp
int3
xor
mov
xchg
rorb
lahf
lea
push
rorl
xor
jge
inc
sub
mov
sub
insb
push
pop
ficoml
clc
test
mov
mov
xchg
fcmovnu
push
out
call
les
add
sbb
xor
je
jbe
fsubl
ret
scas
outsl
mov
pop
mov
test
push
push
jbe
mov
std
repnz
fildll
xor
jge
mov
popf
push
fnsave
adc
ljmp
push
mov
xor
std
mov
jno
and
sbb
fprem1
clc
sbb
in
shrb
js
cmp
dec
mov
popf
std
and
push
dec
pop
pop
test
popa
xchg
call
rolb
pop
or
inc
jmp
enter
mov
loope
bound
cli
nop
jno
les
mov
sbb
mov
cmpsb
stos
sub
adc
or
loopne
mov
dec
jmp
jbe
jo
and
ret
ret
shl
scas
test
out
aas
or
mov
out
mov
ds
xchg
mov
jae
call
insb
dec
cwtl
testb
or
adc
lea
xchg
dec
sbb
mov
and
ss
and
mov
mov
push
cmpsb
mov
in
add
mov
or
pop
int3
popf
mov
pop
add
insl
in
cmpsl
ret
sub
add
push
sub
aam
shll
cld
add
int3
cs
dec
ffreep
imul
add
out
repz
shll
les
mov
test
daa
rcl
jle
xchg
cwtl
add
lret
out
pop
add
sbb
inc
and
int3
jbe
sub
cmp
inc
hlt
dec
les
pop
push
mov
decb
les
rorl
pop
fisttps
mov
popa
jl
arpl
push
or
sub
mov
inc
mov
xchg
addl
popa
mov
movsl
pop
xchg
pop
adc
in
sub
mov
mov
adc
insl
mov
mov
inc
leave
daa
flds
pop
fldl
jg
cmp
push
rorb
insl
pusha
fsub
cmp
fdiv
fwait
cmp
jmp
sbb
adc
xor
stc
iret
sbb
mov
adc
add
adc
or
push
enter
outsl
jno
cmp
jb
xchg
xor
adc
aad
cli
inc
arpl
fs
rolb
ret
adc
push
outsl
hlt
repnz
repnz
pop
loop
and
scas
in
shr
aad
dec
in
sub
popa
in
out
popf
xor
sbb
mov
mov
mov
movsb
mov
ss
xlat
jae
cmp
decb
mov
shr
mov
icebp
stos
fildl
xchg
cmpsb
jbe
pop
push
mov
adc
inc
decl
test
pop
sbb
call
rorb
inc
movsl
je
lds
or
sub
xor
clc
inc
mov
rcll
dec
test
movsl
inc
mov
call
aaa
push
enter
xchg
lds
adcb
dec
mov
out
rolb
call
dec
loope
adc
inc
fstpl
repnz
push
inc
xor
ret
cmp
inc
scas
cs
das
ljmp
mov
out
int3
xchg
push
xchg
cmp
push
adc
jl
pop
push
xchg
add
sbb
pop
or
cltd
push
push
pop
popa
jecxz
pop
dec
leave
mov
inc
btcl
dec
and
mov
cmpsb
sub
addb
call
mov
inc
ds
lret
data16
movsl
cmpsl
push
mov
or
dec
xchg
push
jp
insl
xchg
mov
and
das
pop
adc
in
lock
jecxz
fcmovnu
mov
aas
inc
fadd
imul
dec
push
mov
cmc
sub
mov
dec
jecxz
testb
add
pushf
inc
stc
ds
dec
orl
mov
sub
xchg
mov
cmpsl
daa
pop
mov
push
or
cmp
shr
mov
add
cmp
stc
mov
jns
pop
ret
push
mov
in
mov
xor
into
or
in
inc
add
sub
test
mov
inc
fldenv
fdivl
loopne
out
add
mov
mov
ror
pop
and
subb
xchg
push
mov
jo
cltd
and
int
sub
mov
ret
gs
jb
xrelease
clc
push
test
sub
mov
sub
mov
xchg
or
icebp
cmp
cmpb
nop
cwtl
push
pusha
pop
mov
xchg
xchg
xor
jmp
mov
xchg
push
lods
and
inc
jbe
out
mov
insl
pop
jnp
push
and
xchg
mov
lahf
cs
rol
ja
test
mov
loopne
mov
mov
arpl
cmp
pop
mov
adc
jns
jnp
push
ljmp
arpl
sbb
pushf
stos
mov
push
inc
pop
ja
mov
add
pop
push
push
aaa
loope
cmp
push
fidivs
mov
and
cmpsb
pop
mov
pop
ja
in
call
mov
dec
lds
int
xchg
cmp
xchg
fwait
dec
lret
mov
jo
outsb
std
cmp
xchg
add
dec
sbb
leave
mov
pop
dec
mov
push
cmp
mov
mov
int3
cmp
call
hlt
xchg
sub
cmp
push
cmc
inc
adc
test
repz
lds
and
mov
or
inc
push
mov
insb
mov
jmp
dec
pop
ds
mov
xchg
mov
mov
jge
push
xor
dec
scas
xor
sbb
pushf
push
push
addb
mov
mov
ret
mov
loop
stos
cmpsb
movsb
xchg
mov
jle
cmc
dec
mov
xor
ret
xlat
push
and
mov
pop
decl
xor
push
mov
int
pop
or
cmp
push
in
test
cmpsb
into
xchg
sbb
push
hlt
insl
xchg
rcll
outsl
test
fdivrs
dec
cmp
test
adc
xchg
rcl
jl
add
mov
sub
mov
add
sbb
in
sub
or
pop
cmp
and
mov
je
sub
adc
shl
xor
loope
cmp
cmp
mov
scas
adc
popf
dec
leave
lods
cmp
into
dec
jno
andb
in
out
pop
jns
mov
inc
add
loopne
pop
pop
mov
scas
sti
fidivs
dec
clc
and
sbb
pop
lds
gs
inc
mov
enter
out
enter
xor
jg
fldcw
pusha
testl
inc
cmp
lock
stos
idivl
adc
push
xorl
insb
mov
int3
aaa
cmp
lds
sbb
jg
and
cmpsl
loope
sbb
sbb
and
xor
push
dec
or
popf
test
jb
sub
repnz
cmp
mov
push
push
insl
xchg
xchg
lret
cltd
mov
xchg
lret
and
push
fstp
xchg
xchg
std
aaa
pop
pusha
jno
out
or
inc
push
xor
push
push
xor
incl
mov
cs
ja
xchg
and
inc
fwait
push
dec
jle
mov
dec
dec
sbb
sub
sbb
push
inc
and
lods
xor
cmp
push
mov
cs
push
test
sub
loope
call
adc
pop
out
push
inc
mov
fisubrl
out
insb
andl
je
out
or
inc
repz
mov
cmc
mov
cmp
sub
mov
in
push
xchg
xor
xchg
lret
lret
cli
jge
jne
sti
push
mov
outsb
push
adc
xor
shrb
int3
mov
cmpsb
call
int3
sarl
rorl
and
jbe
or
out
jb
jle
arpl
mov
mov
inc
repnz
jnp
movsb
into
fsubl
cmp
xor
repnz
loope
xchg
mulb
push
popa
testb
repz
stos
adc
mov
pop
pop
push
mov
or
and
loopne
cmpsb
shll
gs
cmp
hlt
notb
ljmp
fstp
in
cmp
jge
adc
inc
mov
jae
pop
cmp
cmp
cmc
push
je
adc
or
pshufw
js
scas
inc
ret
inc
or
pop
mov
test
loop
lods
outsb
sub
pop
inc
xchg
jb
addr16
sbb
leave
pop
xor
push
inc
js
sbb
mov
in
sbb
mov
das
into
icebp
cmp
pop
in
sbb
pop
int3
xchg
cmp
test
xor
or
jp
lods
dec
enter
pop
out
mov
lret
sahf
ss
adc
xchg
lock
add
popa
mov
adc
gs
mov
int
mov
outsl
imul
mov
sbb
jmp
mov
into
sbb
mov
mov
dec
ss
std
test
mov
pop
mov
xchg
hlt
xchg
xor
adc
cmp
adc
sbb
pusha
sub
out
mov
xchg
or
fwait
or
shrb
adc
arpl
shll
push
rcrl
dec
xchg
cmp
shrb
push
or
loop
movsl
cmpsb
adc
ficoml
sti
sub
aaa
push
lahf
aam
jno
into
push
dec
jle
lret
pop
idivb
inc
add
jo
jbe
xor
pop
cmp
icebp
push
xor
jmp
adc
jle
mov
mov
rclb
cmp
insb
push
sub
xchg
cmpsl
test
jp
push
push
sub
es
lds
stc
out
cwtl
mov
fiaddl
leave
bound
ret
rorb
aas
popf
cmpsl
cs
lock
fwait
sbb
lock
and
xchg
xor
and
fcompl
add
add
dec
push
lret
pop
push
mov
das
jnp
xlat
or
adc
inc
iret
fstpt
iret
scas
cmpsl
aad
lret
xor
mov
js
add
xchg
fsub
mov
pop
jne
adc
and
mov
rorl
in
fisttpll
and
lods
aaa
xor
outsb
dec
cs
frstor
jbe
imul
push
out
out
movsb
pop
xlat
push
inc
mov
movsl
lcall
repnz
jle
add
aas
or
add
fists
movsl
fisubrl
stos
sub
in
fisttpl
arpl
fwait
shlb
lret
fstl
pusha
sbbl
stc
inc
loop
jbe
hlt
shll
call
cltd
ljmp
insb
adc
jno
mov
add
xchg
imul
sub
cmc
push
adc
jae
push
xchg
test
xor
pop
mov
mov
xor
push
sub
daa
fidivrs
or
int3
pushl
adc
fidivrl
dec
jb
mov
pop
mov
pminub
pop
mov
ret
rcl
cmc
push
dec
test
jns
jmp
pusha
mov
dec
and
dec
jmp
xor
jb
mov
fwait
js
jno
xlat
inc
xor
dec
out
mov
int3
xor
lret
in
mov
insl
sbb
movsl
mov
mov
push
mov
call
xchg
jb
push
xor
xlat
icebp
xor
push
adc
subb
xchg
pop
jne
lret
jmp
outsl
push
xchg
jge
jo
mov
inc
mov
pop
test
repnz
adc
push
sti
mov
pop
das
pushl
add
pop
inc
mov
es
inc
loop
cs
pop
rcr
mov
mov
imul
lcall
cmp
in
cmpsb
pop
leave
mov
out
fwait
rorl
xchg
jge
pop
pop
out
xchg
jo
jns
ret
inc
xchg
xor
xchg
incl
push
xor
push
sbb
cmp
inc
add
xor
jae
or
subb
subb
cmp
daa
test
fnsave
ja
shrb
hlt
inc
xchg
ja
lret
faddp
mov
sub
imul
les
push
cmp
xchg
sub
dec
in
mov
dec
push
leave
and
loope
push
inc
push
jne
mov
sub
inc
and
rcrl
hlt
mov
lods
xchg
xor
out
mov
add
inc
movsb
gs
adc
jle
push
dec
dec
push
test
and
std
xchg
notb
dec
js
sub
mov
cli
jge
pop
scas
mov
sbb
mov
xlat
aas
pop
popa
pop
mov
add
cmp
dec
je
ret
fildll
xchg
sub
sub
mov
sub
loope
add
push
xchg
movsl
pop
pop
push
cmp
mul
mov
or
sub
cld
inc
lods
xor
adc
in
adc
mov
call
neg
inc
xchg
pop
std
mov
hlt
mov
clc
lods
sub
int3
test
ficoml
sub
mov
jnp
xor
jno
add
xor
jnp
test
incl
push
pop
pop
dec
mov
push
inc
andl
lock
mov
add
pop
dec
jb
repz
mov
dec
sub
fwait
pop
mov
pop
insl
aam
lret
and
lds
mov
add
cmpsb
mov
int3
in
sbb
mov
jl
sbb
cld
or
inc
dec
dec
arpl
call
jmp
pushfw
cmp
mov
add
in
in
fwait
xchg
xchg
or
out
push
ljmp
push
loope
dec
push
ljmp
sbb
decl
and
outsb
arpl
pop
jmp
lret
scas
dec
hlt
sbb
std
imul
pop
fwait
arpl
inc
cltd
hlt
pop
cmp
dec
fcoml
cmpsb
jmp
pop
xlat
out
sbb
ss
dec
mov
insb
ljmp
mov
in
xor
in
mov
and
ljmp
adc
out
push
push
repnz
xchg
and
cmp
adc
addr16
sbb
scas
sub
or
push
push
and
push
aad
mov
popf
pop
rorb
push
mov
xchg
push
loope
and
fwait
sub
sub
fsubrl
xor
mov
mov
jmp
mov
andb
xchg
cld
iret
outsl
nop
pop
pop
scas
fsubr
lcall
in
push
sub
les
dec
push
xor
mov
aaa
fadd
fildl
mov
out
sbb
mov
adc
push
aad
sti
lret
xor
sbb
pop
ffree
push
lock
pop
push
sub
push
push
lcall
jnp
out
pushf
mov
shll
scas
jle
out
in
enter
outsl
sti
add
testb
sbb
pushf
ret
orb
jg
cmp
cmp
sbb
arpl
ss
ja
imul
lods
inc
mov
fsts
mulps
lahf
push
stc
adc
cld
inc
push
dec
jmp
inc
jle
ss
cmp
adc
adc
mov
hlt
pop
cmpsb
aam
insl
add
mov
outsl
movsb
cwtl
push
cli
nop
inc
hlt
testb
push
repnz
inc
xor
pop
mov
outsl
mov
and
ja
sub
stc
ret
add
xchg
push
dec
nop
pop
sub
sbb
test
ret
xor
ret
and
pop
aam
movsl
inc
lods
dec
mov
pop
mov
das
xor
pop
mov
or
xchg
int
pop
out
cwtl
test
adc
push
cmp
add
lea
and
dec
je,pn
fabs
es
pop
stos
cmp
dec
scas
or
inc
jbe
lcall
lds
xchg
imull
test
and
mov
push
dec
adc
es
cwtl
rol
inc
outsl
jl
adc
sti
ret
jge
not
push
sahf
popa
mov
mov
push
rcrl
mov
in
ret
pop
xchg
cmp
or
xor
mov
test
add
stc
call
dec
bound
sbb
pop
jg
dec
cli
int
pop
jp
leave
push
aaa
jl
and
ja
loop
cli
lock
pushf
jmp
cmp
sbb
aas
imul
scas
mov
aam
dec
out
or
sahf
jne
jae
inc
mov
shl
mov
test
hlt
inc
insl
lcall
insl
popf
xchg
mov
sbb
mov
or
je
mov
rolb
pop
and
add
out
mov
mov
in
jo
cli
and
pop
inc
imul
int3
jnp
loop
and
add
call
fwait
or
out
and
pshufw
in
cmp
rcll
lods
adc
loop
xorb
or
and
mov
les
sub
inc
inc
mov
inc
xchg
push
iret
aad
and
mov
cmp
add
shrl
push
stc
xchg
out
pop
jg
xor
lret
add
jbe
sbb
les
testb
ja
aad
cmp
enter
scas
subl
lret
push
pushf
cmp
mov
adc
in
sti
popf
aaa
sarb
xchg
inc
fcompl
pop
cmp
pop
rorl
in
xor
or
and
inc
inc
fidivl
in
inc
sti
es
loopne
into
mov
sub
xor
cmp
mov
pop
pop
fadds
aad
pop
int
loopw
cmp
inc
cmp
xchg
cwtl
loope
nop
sbb
out
imul
sub
push
pop
and
push
jo
nop
hlt
xor
fimull
cltd
icebp
xchg
inc
cmp
imul
lret
push
cmpsb
cmp
jecxz
jns
sbb
cli
inc
sub
xor
call
sub
jg
mov
xchg
outsl
xchg
aas
mov
lahf
mov
je
push
push
bound
ret
outsl
int3
cwtl
aaa
mull
lea
jbe
enter
xor
ret
inc
inc
inc
leave
ljmp
repz
mov
ds
mov
ljmp
in
adc
mov
fstps
lds
inc
lahf
adc
mov
stos
mov
dec
inc
mov
jnp
inc
mov
std
into
ja
into
add
std
push
cmp
ljmp
xor
sbbb
test
adc
fldl
xor
lret
shlb
iret
xlat
cmpsl
data16
scas
out
stc
cmp
les
insb
inc
or
shll
fidivrs
push
js
sub
hlt
les
and
sub
mov
incb
popa
sub
xchg
fdivrs
rol
ret
cmp
pop
inc
mov
aaa
ss
cmp
loop
inc
sub
or
mov
and
mov
adcl
and
cmp
jp
jg
mov
adc
rcll
mov
add
xorl
shrl
xor
sub
cmp
aas
push
add
sbb
sbbl
xor
test
sub
cmp
mov
fdivrs
repz
dec
aad
fidivrs
incl
mov
loop
jns
sub
scas
dec
dec
pop
pop
jmp
fidivs
popf
or
mov
lahf
push
xor
cmpsb
mov
jmp
jb
and
arpl
ret
xchg
xor
inc
cmp
pop
rclb
xchg
or
out
jecxz
dec
push
mov
cld
pop
push
inc
pop
pop
xor
mull
repnz
outsb
jo
jge
lock
pop
imul
lds
ljmp
cs
add
pop
or
jne
jne
jecxz
sub
mov
outsl
and
nop
pop
dec
mov
adcb
jge
push
cmp
int
outsl
xchg
in
iret
outsb
mov
dec
xchg
icebp
sbb
aad
mov
push
notb
push
inc
lods
lock
fildl
out
movlps
lret
jge
jecxz
and
cmp
pusha
sbb
orl
pop
loope
mov
push
popa
mov
icebp
jl
inc
mov
sti
jae
pop
sahf
jge
nop
ja
test
mov
fs
cmpsb
out
enter
mov
or
xor
pop
sahf
dec
movsb
jecxz
aaa
enter
stc
mov
push
push
pop
add
mov
inc
fidivl
nop
mov
imul
push
fiadds
jnp
btc
pushf
int3
cltd
popf
fimull
and
xor
fcmovnb
push
pop
inc
lock
fcomi
cmpsb
ret
xor
cmp
jmp
xorb
jl
ja
pop
mov
into
pop
sub
jecxz
outsl
faddp
cs
or
sub
xchg
dec
out
pop
inc
ret
xor
push
test
mov
sahf
mov
sti
outsl
sahf
sbb
add
cmpsb
xor
gs
xor
mov
loop
push
jne
inc
int
mov
fnsave
mov
sub
pop
int3
insl
stc
enter
xchg
repz
sub
ss
cwtl
ljmp
and
add
mov
fs
bound
hlt
xor
adc
push
call
rorb
xchg
and
shrl
and
call
repz
mov
js
adc
sahf
call
lret
fdivrl
movsl
leave
insb
flds
mov
mov
das
cmpsl
negl
xlat
adc
pop
xchg
mov
cmpb
and
leave
dec
insb
inc
je
lret
adc
sbb
and
das
enter
sbb
mov
stos
in
push
or
sub
jb
sub
pop
orb
shll
aaa
arpl
lods
push
popa
pop
and
fstpl
dec
pop
loopne
out
out
mov
stos
fcoml
fmull
cmpsb
adc
aas
pop
mov
fidivrl
call
lret
sahf
mov
sbb
push
push
push
inc
int
dec
daa
out
or
adc
mov
sar
adc
int3
mov
xor
insb
adc
mov
clc
or
ds
dec
or
paddd
push
push
pop
aam
out
pop
popf
andb
sbb
push
sbb
xchg
sub
in
cmp
or
loope
cmp
cld
sub
mov
mov
sbb
jns
les
hlt
lret
stos
test
xor
cltd
mov
nop
adc
insb
sbb
out
mov
xchg
cmp
lcall
loop
sbb
cmp
jl
mov
sbb
movsl
mov
inc
adc
lahf
sbb
icebp
xchg
xchg
faddp
aam
in
mov
mov
lcall
nop
add
sbb
jmp
sahf
cmpsl
insl
call
jne
xlat
jno
loopne
xlat
mov
push
insb
js
sbb
xlat
int
sahf
inc
int
sub
pop
std
ret
cli
xchg
lret
xchg
in
xchg
push
and
lds
ficoms
mov
aaa
test
jbe
imul
mov
mov
pop
loop
mov
into
mov
je
mov
inc
mov
xchg
push
mov
andl
jge
xchg
xchg
add
fcoms
call
std
pusha
adc
repz
lret
sub
mov
mov
outsb
push
shll
fiadds
ss
loopne
div
ljmp
cmp
inc
dec
cmpsl
imul
fnstsw
xchg
aaa
dec
mov
push
das
cmp
mov
pop
jmp
insl
dec
xor
mov
movsb
sub
sbb
popl
push
data16
pop
fnstsw
xorb
mov
fnstcw
cmp
xchg
adc
lods
out
test
rol
push
inc
xchg
mov
push
mov
jmp
das
roll
out
sbb
dec
sbbb
cmp
aas
insb
cmpsl
addl
in
jmp
movsl
or
loop
jl
rcrl
and
das
fs
pop
fwait
and
andb
push
sbb
adc
pop
shll
jno
aam
mov
mov
xor
dec
or
adc
repz
push
cmp
repnz
mov
mov
stos
std
push
mov
add
lds
add
jbe
fisubs
mov
mov
arpl
mov
mov
rcrl
sbbb
sub
sub
cmp
jle
js
inc
out
in
mov
mov
mov
xchg
xchg
jle
out
xchg
hlt
push
aaa
addl
fbld
popa
mov
imul
into
mov
xchg
rcrb
mov
add
pushf
pop
push
or
add
lret
movsb
out
mov
movsb
stc
fadds
fidivs
jle
xchg
sbb
test
push
outsl
loop
cld
jl
mov
dec
inc
sbb
insl
xchg
aad
pushf
mov
dec
add
mov
pop
cwtl
fisttps
sti
les
add
mov
fwait
paddd
repz
dec
out
dec
and
sub
std
xor
sbb
das
sti
jae
ret
inc
int3
out
mov
sbb
fnstenv
stc
pop
arpl
mov
cmc
xchg
jle
mov
pusha
fisubrs
iret
pop
outsb
movsl
push
popa
roll
out
add
lods
mov
push
les
sbb
sub
and
mov
ljmp
imul
fimull
out
loop
mov
popf
sysexit
movsl
mov
ds
adc
cmpsl
fnsave
dec
pop
cli
lcall
pop
jge
popl
outsl
pop
jnp
and
std
sbb
pop
pop
mov
lret
mov
dec
cltd
jecxz
in
push
repz
jb
fxtract
pop
insb
out
mov
inc
dec
stos
push
je
lea
jns
push
mov
mov
call
jo
ret
inc
push
dec
mov
in
rclb
ja
and
push
fists
mov
insl
push
mov
addl
cltd
pop
popa
jecxz
les
mov
mov
mov
cli
inc
cmp
inc
add
xor
dec
test
gs
rcrb
xchg
cmpsb
push
xor
sbb
or
sti
xchg
insl
xor
jbe
xchg
incb
push
in
shll
xchg
subb
les
andl
mov
jbe
in
shr
lret
cmp
into
sbb
filds
dec
adc
or
out
int
mov
lcall
sbb
cmp
leave
cs
inc
or
leave
sub
aam
cmp
adc
mov
inc
lock
dec
out
push
xor
scas
cmpsl
mov
mov
xor
fchs
and
add
mov
jnp
aas
mov
test
lahf
inc
mov
in
add
push
and
adc
push
fisttps
and
jge
xor
rcrb
popa
xchg
and
push
ja
xor
test
in
je
mov
lods
xor
aam
insl
and
adc
ficomps
xor
in
decb
add
lret
lret
sahf
dec
add
cmp
sbb
sbb
orb
xchg
push
cmpsl
inc
sbb
cmp
sbb
jnp
and
nop
arpl
jnp
shlb
in
sahf
or
icebp
xchg
push
mov
call
mov
jge
push
fistpl
xor
pushf
pop
mov
in
test
mov
inc
xor
mov
sbb
xchg
mov
cmc
rclb
or
mov
outsb
inc
mov
hlt
add
loope
test
pop
dec
ss
cld
sub
push
pusha
fstl
aad
insb
cmp
mov
jl
dec
adc
fs
cmpsb
in
cwtl
push
roll
pop
cli
icebp
aas
pop
push
sti
cld
add
or
repz
clc
and
add
mov
aad
aaa
int3
jg
or
fistpll
es
inc
popa
movsb
sbbb
push
es
aad
rorl
pop
sbb
dec
mov
jne
mov
fistps
arpl
cmp
push
dec
mov
push
inc
or
sbb
jae
xor
jae
out
jecxz
dec
dec
sub
dec
add
lcall
dec
adc
xchg
inc
inc
shlb
and
and
sarl
loopne
pop
cmc
movsl
xchg
jp
sbb
dec
int3
and
sti
push
cmp
push
mov
adc
test
js
xor
and
jno
scas
sbb
ret
imulb
stos
sub
pop
fcmovu
push
inc
fisubrs
sahf
js
push
adc
fstp
or
mov
xchg
dec
lea
mov
std
lea
popa
cmpsb
inc
mov
sub
add
sar
and
push
fmuls
sub
inc
mov
incb
xor
jno
dec
ss
mov
movsb
pop
push
hlt
pop
xchg
std
and
xor
xor
test
cmp
dec
cmp
push
mov
pop
popf
adc
out
mov
xacquire
sub
divb
push
sub
outsb
mov
cmp
pop
inc
mov
jns
roll
into
or
orl
mov
dec
push
pop
mov
jge
notb
push
and
add
mov
or
sub
dec
mov
bnd
push
jle
xchg
mov
sbb
push
sub
repz
dec
sbb
out
sti
mov
mov
mov
pop
int3
sti
cmp
xchg
out
imul
insl
pushf
ljmp
data16
movsl
repnz
xor
mov
repz
push
fwait
imull
mov
sbb
and
and
aas
movsl
sub
popa
xor
cld
sbbl
idivb
cmc
scas
jns
lock
or
and
pop
movsl
lcall
in
out
lret
inc
or
fbld
xor
pop
in
js
cmp
xchg
mov
mov
fistps
les
add
popf
fistpl
aas
mov
pop
cmc
pop
fldcw
and
and
fwait
cmp
lods
or
pop
out
xor
cmpl
lcall
push
sub
push
inc
roll
pop
out
das
sbb
in
mov
pop
pop
dec
push
popa
and
lods
dec
sub
inc
mov
jb
hlt
mov
fdivrs
loope
cmpsl
test
gs
js
test
std
push
data16
jmp
jmp
push
mov
jb
xchg
scas
enter
std
es
mov
insl
mov
add
xchg
cmpsl
sub
and
fistps
sub
inc
or
adc
add
push
xchg
jne
lea
andb
jge
out
push
adc
jbe
imul
push
leave
movsl
pushf
jl
ja
pop
scas
jae
movsl
jl
rol
iret
in
xchg
push
inc
int
xchg
pop
sub
mov
mov
sbb
aam
ds
je
cmp
inc
bound
sbb
pop
jnp
mov
dec
aam
fldt
adcb
xor
insb
sub
aam
clc
dec
and
lods
jnp
push
out
sub
xlat
dec
lods
imull
xchg
or
in
or
outsb
idivl
pushf
lock
pop
call
jb
pop
daa
sub
jmp
cmp
xchg
test
push
xchg
adc
call
aam
cli
xorb
jg
js
mov
ss
or
xchg
scas
xor
sub
inc
xchg
sbb
mov
and
cltd
repz
in
pusha
pop
inc
push
cmp
xchg
sub
imul
aam
dec
or
jge
jge
cmp
push
push
mov
inc
xchg
je
adc
inc
cld
push
pop
jg
shll
adc
mov
sbb
test
jg
and
mov
fs
lcall
in
pop
subb
or
pop
shll
cmc
into
inc
insl
dec
jge
inc
mov
jno
cltd
mov
pop
cwtl
mov
clc
mov
int
xor
cmpsb
out
fnstsw
jbe
xchg
xchg
pop
push
push
xor
pop
jl
mov
or
bound
fists
rclb
repnz
shll
sub
data16
data16
jecxz
pop
jmp
mov
js
push
fidivs
ficoms
adc
rorl
cld
xlat
xchg
les
push
pop
sbb
or
jle
cmpsl
xchg
push
imul
mov
inc
jbe
enter
int3
out
sahf
and
scas
jno
xchg
or
jbe
inc
out
imul
push
stc
mov
sbb
int3
mov
cmpsl
outsl
aam
push
jl
fbld
adc
movsb
mov
add
xchg
scas
pop
pop
push
pop
add
aas
sbb
cmp
sbb
call
sbbl
aas
cmp
pop
es
jo
arpl
ret
out
pop
es
xchg
jno
lock
enter
outsb
adc
and
sbb
jmp
std
mov
dec
push
shll
outsl
arpl
je
or
xchg
push
mov
inc
and
jo
add
sub
xchg
mov
mov
dec
xchg
push
push
pop
dec
sbb
movsb
xchg
sub
leave
cmc
cmpsb
or
sbb
aas
lret
fbld
sahf
adc
ljmp
adc
shrb
unpckhps
loope
shlb
inc
fists
or
sar
sti
fsubs
pop
insl
cmp
push
jnp
iret
or
push
cmp
movsb
loope
jle
pop
enter
sub
ss
cwtl
iret
loopne
jns
pushl
and
scas
and
xchg
lods
or
jo
lret
push
fnsave
fs
mov
or
dec
add
pusha
mov
in
and
shll
aam
cmpl
negb
jb
cmc
mov
ljmp
test
cwtl
dec
jl
or
mov
movsb
mov
fs
add
fdivp
mov
push
push
or
stos
test
arpl
jecxz
shr
sbb
xchg
dec
xor
aaa
push
cmc
lret
and
mov
enter
stos
ret
mov
add
jb
inc
sti
ljmp
push
ret
imul
or
mov
scas
fcoms
es
mov
lcall
std
mov
xchg
mov
jbe
jo
or
mov
pop
test
adc
scas
or
sbb
aaa
mov
jp
lret
rol
or
fcmovne
into
push
xchg
sbbb
iret
mov
ljmp
insl
es
push
in
lods
or
mov
inc
and
or
sub
loope
and
in
mov
stc
sahf
ja
cmpsl
rcrb
std
and
lahf
sub
sti
mov
fsubrl
pop
out
lods
insl
dec
xchg
js
out
jb
rep
mov
mov
ret
jb
clc
add
push
mov
out
cmp
es
or
jns
adc
add
jle
gs
inc
xor
das
xor
stos
dec
sub
sahf
sbb
scas
add
cmc
enter
or
fcomi
xchg
xchg
pop
test
adc
jno
int3
push
sbb
cltd
or
clc
rcll
pop
insl
mov
and
addb
in
pop
jne
mov
outsb
leave
jns
adc
scas
sbb
fidivrl
ret
dec
push
rcrl
push
test
xchg
pop
mov
mov
jns
mov
adc
xchg
push
cld
push
ret
push
rolb
mov
xlat
hlt
mov
clc
cmp
repz
stos
xor
push
adc
sub
mov
outsl
scas
and
add
imul
cmp
in
push
pop
xor
es
xorl
add
dec
lds
add
mov
mov
rorb
add
and
mov
mov
cltd
shlb
adc
andb
daa
mov
fnstcw
call
sub
outsb
pushf
xor
sub
adc
cmpsb
aad
inc
adc
mov
jle
sahf
out
sub
imull
pop
mov
je
inc
loop
dec
adc
fs
aaa
push
hlt
pop
movsl
sub
dec
push
pop
je,pt
fwait
mov
sub
fisttpll
pop
adc
xchg
mov
push
mov
sbb
imul
es
jno
daa
idivb
movsb
ficoms
adc
leave
rcll
sarl
mov
das
fcom
sub
mov
mov
cmp
xchg
fldl
adc
cmp
inc
or
or
popa
inc
ror
sti
enter
cmpsl
imull
jns
pop
dec
sub
adc
idivb
or
xlat
sub
dec
fs
nop
sub
cmpsb
sbb
sti
push
jno
fcomps
insb
xchg
bnd
jmp
out
add
rolb
sub
jle
jmp
jle
mov
cmc
push
cmp
cmpsl
jbe
mov
fs
clc
movsl
inc
jne
mov
xchg
lds
or
movsl
jb
jl
stos
jle
stc
jo
lds
lret
arpl
je
sub
out
iret
aas
pop
imul
mov
xchg
shrb
adc
movsl
xchg
and
adc
movsb
pop
xor
pop
jmp
mov
pushf
mov
mov
push
rcrl
jmp
test
inc
push
jmp
mov
sub
shll
dec
rorb
loope
inc
aam
lea
lods
or
xchg
mov
fcompl
roll
xchg
jne
sti
mov
loope
or
jbe
push
dec
cld
jecxz
sub
loopne
add
xorb
sbb
adc
sbb
fbld
pop
orb
xchg
push
sbb
or
or
or
jnp
pushf
stos
push
sub
into
push
add
inc
insb
test
sbb
sbb
testl
adc
inc
xor
rorl
fcmovb
cmp
pop
push
and
int3
xchg
or
sbbl
inc
xor
sbb
lds
add
pop
rcll
adc
xchg
pop
adc
ja
xchg
fildl
xchg
push
jae
imul
rcrl
in
ficomps
xor
pop
lret
nop
scas
inc
icebp
dec
test
and
mov
adc
add
fwait
mov
test
repnz
adc
clc
xchg
mov
aam
ljmp
jns
or
sti
mov
cltd
call
cmpsl
popa
cmp
mov
daa
xchg
cs
mov
sub
xchg
imul
push
add
cmp
cmpsb
sarb
or
test
mov
inc
mov
jns
out
sbb
mov
lcall
mov
daa
popa
fildl
repz
pop
pushl
cmp
dec
shlb
fbstp
mov
push
jp
in
test
cmp
inc
roll
fwait
pop
mov
pop
test
push
repnz
jmp
shlb
imul
lock
jecxz
mov
or
shlb
sbb
cmpsl
rcr
sbb
jb
sub
test
inc
js
adc
mov
mov
arpl
sub
xor
jbe
adc
cmp
cltd
jbe
scas
adc
in
inc
andb
int
xlat
add
dec
dec
xchg
enter
sbb
test
test
mov
fildl
jge
or
mov
in
and
bound
imul
inc
stc
es
popf
push
enter
push
xchg
cmpsl
sbb
jb
or
sub
int
sbb
lahf
sbb
xor
push
xchg
and
leave
les
add
out
jecxz
stc
mov
and
shll
dec
mov
loopne
es
inc
loop
ret
inc
dec
out
lds
divb
aam
jo
in
dec
dec
cwtl
dec
and
xorl
sahf
or
cli
mov
jns
or
pop
jg
dec
sbb
cs
inc
mov
cli
stc
cmp
sbb
jns
pop
cmp
dec
push
mov
lods
outsl
add
sub
bound
push
sbb
cmpsl
faddp
in
jg
aaa
xor
mull
inc
loop
xor
inc
push
inc
push
mov
out
aas
ret
mov
inc
mov
xchg
into
adc
bound
sbb
jne
push
or
notb
clc
adc
xor
xor
insl
rcrl
shlb
adc
push
mov
scas
imul
repnz
pushf
adc
or
lret
pop
xchg
push
fsubrs
mov
pop
ja
mov
mov
js
xchg
lods
arpl
xchg
pop
into
lods
jl
pop
rcll
jo
insl
dec
sub
adc
xchg
hlt
movsb
xor
popa
dec
pop
add
add
out
mov
shlb
mov
push
cmc
into
mov
adc
mov
int3
insl
test
xchg
sbb
fstpt
repnz
xor
ja
adc
add
test
ss
xchg
mov
push
icebp
add
sub
pop
or
fbld
das
movsb
fidivl
sbb
in
push
call
pop
push
je
jecxz
mov
jl
fisubrl
movb
or
add
xchg
adc
in
bswap
pop
mov
xor
or
mov
sub
add
std
aaa
imul
inc
mov
jae
ret
jmp
sub
ja
xchg
sti
add
int
nop
xor
loop
jae
sbb
adc
mov
push
pop
add
shrl
shll
test
cmpl
mov
jb
xchg
in
sbb
incb
adc
std
pop
mov
cmpsl
and
test
into
inc
je
mov
adc
adc
movsb
cmpsl
popf
sub
push
in
pop
mov
sbb
rorl
xchg
pop
push
cmp
outsb
cmp
fsubs
jo
mov
sub
push
sbb
mull
nop
out
cmp
lds
adcb
pop
shll
mov
sbb
or
inc
xor
loop
adc
pop
je
or
xor
xchg
cmovnp
xchg
out
and
rolb
mov
xchg
add
mov
xchg
inc
in
xor
jae
insb
inc
flds
int
bound
mov
cmp
fistl
cmpsl
sbb
lret
mov
push
inc
xor
lock
pop
loop
outsb
inc
push
mul
pop
into
cmpsl
push
test
dec
mov
test
pop
sub
fnstenv
add
hlt
xor
inc
and
dec
imul
das
outsb
sbb
sbb
lods
mov
jno
es
dec
dec
sti
jo
adc
stos
mulb
xchg
sti
rorl
into
in
sub
aas
mov
cmp
divb
mov
mov
jmp
gs
mov
mov
push
mov
std
fisubrl
dec
inc
sub
adc
pop
ja
rcrb
dec
lods
fimuls
test
sub
xor
lea
inc
popa
test
shr
xchg
mov
outsl
jmp
mov
cmpsl
pop
mov
sub
mov
xchg
inc
orl
dec
iret
mov
fildll
add
out
mov
scas
cmp
dec
pop
xchg
test
jae
push
popa
mov
and
add
out
cmpsl
test
cli
cwtl
dec
mov
pop
pop
std
pop
mov
mov
push
daa
jmp
dec
pop
ficoms
inc
inc
pusha
pusha
stos
and
add
insb
aam
in
pop
out
dec
add
test
repnz
and
lods
and
enter
in
jne
jne
int
les
ds
jbe
push
xchg
iret
or
xor
dec
adc
lods
outsb
out
mov
pop
push
fnstsw
jo
nop
add
repz
jo
adc
fisubrl
and
leave
aas
adc
adc
jge
push
adc
xor
dec
push
xor
sahf
scas
iret
dec
out
je
adc
leave
lcall
pop
in
jbe
xchg
sahf
sub
pop
push
xlat
cs
outsl
push
je
popa
fwait
bswap
dec
jo
mov
sbb
add
fucom
inc
add
sahf
jmp
out
shlb
ret
fidivl
cli
jbe
leave
sbb
and
mov
sarb
out
stc
mov
pop
or
fcoml
cli
fwait
sub
lods
sti
imul
xor
mov
push
out
mov
addr16
ficoml
dec
imulb
xor
mov
les
jns
fisubl
shlb
mov
in
sbb
and
sub
or
shl
jbe
aam
aaa
pop
and
mov
sub
sub
in
mov
mov
ja
ljmp
add
ds
outsl
filds
xor
insl
jge
rol
jae
cwtl
lods
xchg
mov
in
xor
add
jno
cmpsl
push
nop
cltd
shl
aaa
sbb
loopne
cmpsb
push
test
jbe
in
adc
xchg
jnp
mov
mov
addr16
mov
insl
xchg
xor
loope
xlat
cmpl
add
std
sbb
test
jmp
mov
in
xor
ljmp
mov
js
push
mov
mov
imul
cwtl
push
cmp
xorb
loopne
adc
enter
add
push
and
pop
inc
call
out
int
je
outsb
ss
dec
dec
or
push
cwtl
mov
repz
imul
mov
aas
dec
lret
inc
pop
fdivrl
js
dec
aad
in
push
call
inc
cmc
jae
les
scas
and
cmp
or
pop
dec
js,pn
adc
pop
mov
cmp
jg
xor
std
insl
push
lret
sub
sbb
or
ljmp
jbe
adc
and
popa
je
movsl
pshufw
bound
jns
add
pop
or
stos
mov
dec
cmp
add
or
loop
imul
xlat
stc
jg
insb
mov
pop
out
jecxz
aas
stc
jb
mov
lds
mov
jns
in
inc
push
nop
repnz
pop
fwait
das
out
sub
ret
dec
nop
xor
mov
pop
mov
push
and
fcomps
bound
sbb
in
scas
in
ljmp
pop
cmp
lcall
loopne
sbb
adc
ja
test
push
hlt
scas
jmp
notl
dec
insl
sbb
add
fimull
dec
pop
sub
xchg
ljmp
cld
xor
insl
push
xchg
or
movsb
popa
gs
pop
je
or
pop
mov
shrl
and
push
mov
cmp
add
je
pop
cmp
jge
jbe
or
mov
nop
lods
outsb
adc
sub
bound
add
sbb
inc
imulb
jo
fwait
lret
mov
cmp
mov
mov
je
sub
sbb
jno
push
cltd
jbe
pop
sub
mov
lock
mov
xor
and
inc
add
mov
push
jmp
out
or
add
sbb
jmp
mov
movsl
out
jne
or
imul
jecxz
or
std
mov
cmc
jnp
pop
pop
inc
fwait
push
jmp
sub
lahf
mov
lods
mov
xor
js
mov
dec
lahf
adc
fadd
lock
jecxz
jecxz
out
cli
imul
aam
jns
les
mov
sarl
aaa
xor
mov
into
ret
pop
pusha
aaa
daa
mov
arpl
mov
iret
cmp
jne
stos
dec
cmp
enter
fiadds
aam
push
pop
xor
inc
sbb
xchg
mov
lock
int3
push
aad
mov
inc
shll
shrb
xchg
in
dec
and
mov
jbe
jge
int
inc
das
mov
sub
xor
dec
hlt
imulb
jae
xor
imul
rcl
pop
and
rcl
scas
lods
fprem
push
loop
test
in
lea
push
push
ror
push
scas
and
dec
sbb
adc
leave
lods
mov
roll
jae
jns
icebp
in
inc
push
push
or
dec
fisttpll
sub
test
pop
pop
pop
daa
into
pop
lcall
adc
test
mov
jp
xor
sub
subl
xorb
xchg
mov
push
scas
daa
add
or
jp
std
dec
sub
jmp
pusha
and
shlb
add
inc
lock
mov
cmpsb
dec
cltd
and
lds
push
mov
dec
gs
outsl
aam
gs
divb
sti
loope
pop
mov
loope
xor
je
fisubrl
add
fs
adc
jno
insl
pop
lret
cltd
inc
sub
jecxz
stos
push
and
pop
push
mov
dec
fistl
filds
pop
mov
and
inc
add
sarl
popf
pop
sbb
mov
stos
push
iret
mov
ret
sub
cs
fisubrl
nop
xor
pop
or
in
mov
xlat
mov
mov
adc
add
out
inc
inc
dec
dec
pop
in
jns
stos
adc
andb
cli
push
dec
movsb
nop
xchg
std
std
dec
push
cld
xor
dec
mov
ja,pn
stos
leave
lods
stc
mov
cltd
adcl
jno
push
push
push
or
sahf
lea
cmpsb
mov
mov
cmpsb
inc
jle
ja
scas
push
pop
test
leave
lods
xchg
je
pushaw
mov
add
jae
mov
hlt
je
adc
sti
or
lea
ds
sti
fstpt
je
mov
or
lods
mov
sub
test
adc
cli
push
repz
out
aam
scas
push
js
jg
adcb
inc
mov
ret
pop
ljmp
hlt
std
in
outsb
arpl
daa
pop
ss
and
jge
jl
cmpsb
idivl
mulb
sbb
lds
push
cmp
lret
jp
sbb
imul
lcall
dec
flds
je
push
push
dec
add
jp
sub
rorl
push
or
jle
icebp
dec
stos
bound
jbe
ret
add
inc
xchg
xorl
xchg
shrb
pop
nop
in
std
jp
shrl
repnz
lret
test
imul
xchg
mov
mov
fiadds
out
test
sub
pop
pop
xchg
nop
test
cmp
xorl
push
insb
lods
scas
cmp
adc
in
dec
pop
xchg
xchg
lds
push
jl
and
jecxz
jecxz
xchg
lock
xor
jmp
lock
out
nop
mov
push
mov
sub
mov
xor
cmp
inc
mov
dec
pop
push
hlt
xlat
mov
fdivrs
push
scas
or
lea
or
cltd
jg
dec
subb
cli
test
shr
push
sbbb
jno
sub
or
in
std
aad
add
orb
aam
mov
lahf
push
add
repnz
inc
out
push
xchg
mov
popf
sub
xor
mov
sbb
add
cmp
movsb
and
es
pop
sbb
jecxz
dec
hlt
dec
das
push
push
fldenv
dec
arpl
popf
push
cld
cmp
aad
jae
push
xchg
fldcw
inc
or
adc
cmp
xor
cltd
int3
sub
call
shl
std
adc
push
test
xor
jle
fbstp
fwait
and
mov
mov
test
pop
ljmp
enter
mov
mov
sub
daa
nop
pop
xor
or
aas
sbb
hlt
xchg
and
xchg
insb
pop
push
adc
and
test
ds
ret
sbb
push
dec
ret
jge
std
xor
outsb
or
dec
mov
popa
loop
mov
inc
sbb
or
ss
lret
ds
movsl
dec
push
ret
rolb
sub
movsl
jp
xchg
pop
mov
insb
popl
sbb
xchg
sub
inc
in
sbb
cmpsl
movsb
aad
test
popa
movsl
xor
sarl
cmpb
lcall
gs
jo
mov
and
jo
xchg
xor
ret
adc
movsl
rcll
inc
imul
push
push
and
add
mov
push
cmp
aad
adc
pop
adc
push
pop
cmp
fwait
and
push
rorb
or
dec
das
lods
mov
mov
ret
scas
imull
arpl
arpl
inc
fnstsw
stos
cmp
aam
daa
xchg
dec
pop
pop
int3
lea
ror
lods
mov
bound
movsb
pop
xchg
test
mov
clc
mov
ljmp
xchg
sar
push
add
mov
subb
push
lock
shlb
cmp
inc
enter
or
es
cld
lds
mov
cmp
pop
ret
das
rcrb
jecxz
or
call
movsb
cwtl
add
push
inc
into
jnp
gs
dec
inc
push
lret
pop
scas
sbb
pop
cmp
pop
add
mov
push
xchg
cmpsl
cld
test
shlb
sub
xor
mov
fbld
sbb
xchg
mov
lahf
cwtl
adc
push
and
cmp
jb
fmul
jl
cmp
sarl
and
scas
sbb
es
or
pop
xlat
lahf
xor
sub
adc
lods
jg
adc
sub
das
int3
shll
clc
pusha
lret
adc
push
sbb
inc
out
popf
lods
rol
pop
lcall
ror
sub
jge
xor
rcr
xchg
jns
test
stos
or
pop
jo
sbb
adcl
inc
mulb
mov
and
adc
aad
dec
jns
out
adc
mov
lock
push
popa
cli
add
arpl
and
mov
sbb
mov
scas
sub
mov
push
sbb
cli
pop
ret
mov
iret
outsl
and
out
clc
test
dec
cmp
xchg
adc
and
pop
mov
mov
adc
xchg
pop
mov
fstl
repnz
ds
inc
notb
test
push
pop
test
mov
lock
int
xchg
movsb
xor
scas
or
fimuls
push
mov
xchg
mov
aas
add
xlat
cmp
scas
push
jecxz
out
rcrb
mov
or
jns
rcrl
cli
mov
sub
add
xor
push
ljmp
dec
iret
movb
sub
xchg
scas
stos
jp
xor
out
in
mov
inc
int
arpl
push
mov
xchg
jnp
into
xor
mov
fisubs
imul
adc
xlat
clc
addb
or
mov
bound
add
xor
addr16
nop
and
or
mov
or
dec
add
andb
fcmovne
ret
iret
sbb
int3
cmp
movb
icebp
js
mov
xor
jecxz
jmp
std
xor
aas
addr16
xlat
add
pop
sub
mov
pop
adc
scas
lret
jns
shl
rol
or
sub
or
jno
enter
dec
nop
pop
aam
cmp
push
sub
jno
out
jae
cmp
xor
fildl
iret
hlt
jae
xchg
data16
dec
insl
sbb
or
pop
movsb
sbb
jb
aad
push
add
es
sub
shrb
mull
fs
mov
or
aam
movsb
xchg
ds
push
push
mov
popf
rcr
fxch
pop
es
cmp
aaa
lods
mov
les
xor
jae
sub
jmp
xchg
push
push
pop
push
outsb
push
inc
mov
aaa
rol
sub
xlat
movsl
loope
sbb
xor
pop
test
outsb
loop
loop
repz
mov
cmc
fdivrs
fistpl
mov
jle
adc
push
mov
inc
push
sahf
sahf
add
xchg
fisubl
scas
aad
xorb
fldpi
adc
insl
lret
cmp
pop
cmp
mov
cmp
loop
jne
xorl
pop
and
stos
pop
dec
dec
inc
aas
push
fucomi
cli
sbb
inc
pop
jle
cltd
mov
cmp
sub
aad
inc
aam
or
iret
adc
add
xchg
bound
repz
cmpsl
mov
iret
mov
ret
pop
aaa
ja
mov
arpl
push
sub
xchg
clc
cmp
xor
cmp
test
adc
repz
push
push
mov
add
jnp
jno
outsl
lods
in
pop
out
sub
es
add
pusha
sub
bound
mov
or
daa
je
orb
xchg
push
mov
mov
scas
sub
mov
mov
dec
mov
xor
test
push
xchg
dec
jb
mov
jecxz
das
daa
xor
js
mov
and
mov
mov
jb
jg
movhps
xor
sbb
add
sbbl
test
pop
inc
loopne
xchg
mov
mov
daa
in
rorb
mov
and
scas
jl
scas
sub
mov
fwait
cmpsl
fldl
in
sub
add
in
inc
and
lret
stos
cmp
add
mov
mov
or
mov
push
lock
xchg
lea
test
push
and
gs
repz
cmp
sub
cmp
out
cmc
mov
xor
push
cmp
incb
cmpl
xchg
push
es
xchg
dec
fscale
sub
scas
mov
push
dec
pop
iret
movsb
push
movsl
and
es
fs
jle
pop
imul
arpl
sub
scas
in
out
or
and
and
clc
test
cli
lret
ss
cmp
mov
push
push
pop
outsb
xor
mov
lds
adc
pop
add
mov
mov
aaa
lcall
jno
dec
jg
sbb
into
aam
arpl
adc
aaa
frstor
jns
fidivs
stos
push
dec
xchg
pop
in
pop
xor
ret
dec
fsts
push
mov
and
adc
scas
xchg
mov
cmp
test
jmp
mov
lcall
test
mov
clc
in
je
dec
and
xchg
mov
cmp
daa
movsb
adc
mov
xchg
cwtl
jmp
aaa
xor
inc
fidivs
jle
xor
push
in
sub
add
lcall
sarb
and
cmpsb
jb
fs
mov
icebp
jg
xor
cld
popf
pop
jle
push
pusha
cmc
addl
gs
aad
dec
sar
and
cwtl
shl
jle
iret
stos
inc
aaa
sbb
sub
lret
mov
movsb
pop
dec
mov
xor
cmp
ja,pt
xchg
adc
mov
stos
xchg
sbbb
cmp
jg
fs
xchg
ljmp
xor
outsl
cmp
sbb
repnz
lods
bound
scas
mov
addr16
cmpb
addr16
and
mov
jge
pop
xchg
cwtl
push
or
jae
call
push
push
hlt
mov
push
sub
push
lcall
in
jo
sbb
fldt
adc
sub
std
sub
lret
scas
inc
std
jno
std
in
xchg
or
jns
jb
push
cld
sar
mov
add
cmpb
push
xlat
int3
pop
sbb
inc
xchg
xlat
adc
je
push
adc
sub
imul
pusha
dec
repnz
mov
hlt
add
es
pop
xchg
jb
rcrb
das
fprem
mov
in
jge
lock
mov
or
pop
scas
mov
hlt
sub
shrl
xor
out
dec
jns
xchg
mov
lahf
dec
cmp
xor
cmpsb
mov
shlb
push
jo
mov
pushf
mov
sbb
out
mov
add
dec
push
mov
xchg
or
mov
adc
pusha
cmp
sbb
jmp
or
js
add
cs
xchg
push
movsl
arpl
mov
pop
ja
xchg
lcall
cmp
jo
pushf
mov
cmpsl
jle
add
pop
or
push
add
jbe
insl
aam
negb
cmp
mov
xchg
sub
pusha
jbe
mov
ret
movsb
movsb
jne
ss
fsts
and
push
pop
or
dec
or
roll
vpshufhw
adc
iret
insl
insl
popf
in
mov
daa
jmp
push
xor
insl
add
jbe
out
adc
iret
test
aaa
xchg
add
popf
xor
and
and
cmc
insl
push
movzwl
adc
dec
inc
lahf
pop
or
inc
adc
cmc
mov
ss
xor
cs
scas
mov
dec
repz
adc
cmp
frstor
faddl
jl
and
out
sbb
inc
out
lahf
stos
pusha
sti
add
lret
or
cltd
clc
aad
xor
mov
sub
out
push
data16
aas
call
sbb
mov
test
cmp
mov
dec
jl
testl
xor
lods
add
divb
cld
or
sub
xchg
sub
jns
jl
mov
jp
loopw
dec
pop
push
or
mov
jle
test
ljmp
jns
jg
popa
adc
mov
fwait
push
sbb
mov
xor
mov
push
push
mov
or
out
or
idivl
lahf
mov
adc
push
sbb
push
dec
and
push
imul
xor
int
aaa
or
push
inc
lret
inc
cmp
cmp
addb
cmpsb
inc
lret
repz
lock
orl
mov
movsb
lock
add
aam
xchg
cld
mov
gs
aaa
int3
pop
push
ret
dec
jecxz
addr16
ret
ja
dec
jecxz
xor
xchg
and
add
push
xor
std
push
mov
push
daa
pop
add
push
or
mov
iret
adc
idivl
movsb
dec
pop
mov
bound
push
pop
add
dec
inc
loop
std
push
adc
out
std
roll
gs
mov
movsl
mov
lea
cmc
jnp
jbe
or
inc
and
cmc
xchg
push
out
or
scas
pop
inc
or
aas
in
mov
adc
mov
dec
and
mov
icebp
sub
add
or
mov
mov
inc
and
loope
pop
popf
mov
fcoms
sbb
icebp
pop
mov
mov
fnstcw
push
insb
sbb
pop
repnz
jns
mov
mov
jle
iret
ret
movsb
dec
inc
dec
sub
mov
pop
test
scas
mov
gs
xchg
repz
sub
fstpt
mov
add
push
push
pusha
xchg
push
jg
movsl
decb
push
movsb
imul
adc
iret
push
into
daa
dec
xchg
push
sbb
xor
jg
es
sub
push
or
dec
data16
sbb
dec
xchg
inc
or
cmp
and
fs
lret
fs
insl
or
ljmp
loop
inc
test
jle
adc
imul
xor
mov
addr16
add
dec
cmp
xor
cmpl
cmp
cmp
xchg
pop
or
mov
cmpsb
ss
mov
cld
cmp
pushf
pop
std
mov
cld
xchg
fldt
aad
aas
das
aam
cwtl
jg
xchg
es
repz
imul
and
sar
push
loope
pop
mov
dec
and
jecxz
pop
or
sub
pop
test
mov
inc
sbb
mov
xchg
aam
test
test
mull
enter
jmp
mov
ja
sub
fisubs
into
jo
mov
xchg
movups
push
mov
roll
lret
xchg
rol
movsb
dec
stos
stos
fld
movsb
ds
out
fsubrs
movsb
push
outsl
out
ds
push
mov
movsl
pop
cwtl
leave
dec
inc
arpl
cmp
xlat
push
dec
mov
mull
add
shl
iret
xlat
pop
push
pop
lds
push
xchg
sbb
mov
jae
fiadds
ds
clc
sahf
cmp
jno
out
dec
cmp
shr
pop
and
and
dec
shlb
xor
mov
jbe
jecxz
mov
cmp
lret
mov
mov
je
xchg
cli
fmulp
dec
push
xor
mov
sub
inc
enter
lret
mov
adc
mov
or
call
les
dec
movsl
stc
fdivr
insl
dec
pop
push
inc
icebp
test
test
lds
mov
lea
lds
xchg
in
sbb
rcll
adc
cmc
cmp
dec
xchg
ret
fnstcw
loopne
addr16
shll
pop
jne
icebp
pop
pop
add
dec
lods
mov
jge
sbb
iret
pop
es
movsl
inc
and
lsl
mov
mov
adc
je
scas
in
push
lret
ret
ljmp
pop
push
call
sbb
mov
inc
fwait
xor
push
jmp
outsl
mov
stos
sti
imul
inc
mov
mov
vpackuswb
rcll
int3
aam
xchg
test
push
inc
imul
push
icebp
xlat
lods
testl
out
mov
sbb
push
lods
lret
aaa
int3
mov
pop
add
ret
repnz
cmc
add
stc
or
clc
mov
inc
mov
fmull
shlb
or
daa
mov
mov
fdivl
xorl
push
jne
mov
xor
xchg
jg
pop
and
pop
sarl
roll
mov
cmc
and
js
push
mov
sbb
test
pop
jo
mov
add
push
stos
std
cmp
inc
std
mov
mov
dec
mov
in
iret
mov
pop
sti
negl
lahf
cmp
add
push
jbe
cmpl
test
and
cld
pop
aad
jge
pop
loopne
cs
je
jmp
push
popa
mov
sar
cmp
addr16
popf
sbb
jno
mov
cmp
xchg
loopne
mov
mov
movsl
sbb
imul
scas
out
enter
int3
xchg
call
inc
loope
shrl
xchg
sbb
or
in
or
jmp
push
pop
adc
sarb
push
adc
mov
inc
adc
xchg
xchg
pop
out
jne
pushf
pop
cmpsl
out
movsb
mov
mov
jp
test
adc
push
mov
sbb
dec
cmp
adc
test
sbb
pusha
clc
repz
mov
call
enter
sub
fdivs
out
std
add
inc
fists
push
jnp
cmpsb
mov
popl
mov
xor
jp
lods
pushf
mov
in
mov
call
leave
jno
mov
inc
jno
cmp
js
pop
xchg
adc
pop
cmp
test
fwait
cmp
js
pop
dec
stos
or
add
movsl
arpl
rolb
fsub
pushl
pop
push
pushf
enter
stos
dec
out
cs
test
ret
and
jno
xchg
jbe
cmp
cld
stc
out
mov
lret
mov
cmpsl
dec
inc
ret
xor
ret
mov
into
mov
ss
divl
xor
popf
jecxz
xchg
jns
js
or
cwtl
jmp
out
loop
sbb
hlt
pop
and
pop
cmpsl
insb
call
pop
cld
mov
mov
je
push
ret
jge
mov
push
xor
icebp
dec
and
cwtl
addb
int3
pop
nop
repz
xchg
in
xlat
pop
mov
cmc
mov
lcall
in
movsl
dec
jmp
push
popf
inc
or
dec
xchg
pop
stos
test
outsl
or
loop
add
adc
push
cmp
test
jecxz
in
add
sti
sbb
push
jg
pushf
fnstenv
adc
sbb
ret
jnp
shlb
push
inc
pop
sbb
xchg
or
mov
sbb
pop
adc
shlb
popf
sbb
sarl
xor
into
mov
dec
mov
xlat
sub
mov
jle
jno
aaa
clc
ud1
jnp
or
fdivrl
xchg
xchg
loope
rcrb
in
xchg
aas
stos
and
call
sar
fisttps
test
sti
pop
addb
push
mov
popa
mov
push
je
fs
add
push
xor
xor
repz
mov
jecxz
push
int
sub
sub
dec
sub
jl
in
mov
jae
cmpsb
movsl
inc
jle
jae
mov
lea
xor
xor
push
cmp
xchg
dec
push
jle
dec
or
inc
out
inc
dec
xchg
es
dec
aam
xor
addr16
xchg
inc
cmp
xchg
ss
repnz
jmp
inc
sub
shl
cwtl
stc
jle
adc
add
movsb
bound
ficomps
movsl
cmp
jle
add
and
repnz
pop
stos
outsb
dec
cmc
adc
aas
xchg
ss
cld
das
add
outsb
sub
jb
dec
ja
daa
inc
cmpsb
mov
mov
jnp
cld
test
call
stc
cmpsb
xor
push
sub
cmp
rclb
lahf
fimuls
in
mov
clc
les
int
xchg
adc
data16
fstps
mov
inc
outsl
mov
pop
std
mov
jp
sbb
push
aad
jo
shll
daa
jecxz
adc
push
out
dec
test
adc
subl
xor
adc
pop
add
inc
pushf
fs
sahf
je
adc
mov
fwait
mov
mov
adc
mov
and
and
insb
cmp
sti
cmc
dec
btc
test
and
test
fsubs
cmpsl
sub
jo
out
aad
sbb
test
pop
loopne
test
push
or
je
rol
jg
mov
arpl
mov
insb
leave
outsl
mov
out
jno
and
mov
jae
sub
xchg
pop
sar
lock
test
inc
dec
pusha
sbb
push
in
sti
loop
jle
idivl
insb
subl
inc
or
add
pop
ret
fsubl
pop
and
stos
rcrb
sarb
lods
cmp
add
mov
jae
inc
xor
sti
aas
ljmp
sub
cmpsl
jge
pusha
movsb
or
push
andl
jbe
addr16
adc
aad
xchg
or
cld
xchg
inc
or
nop
mov
and
int3
ljmp
inc
bnd
aam
add
mov
or
mov
pop
mov
dec
lret
mov
in
cld
movsl
pop
js
mov
sahf
and
loope
mov
inc
pop
imull
mov
sbb
mov
mov
sub
pop
push
adc
xchg
or
mov
inc
clc
mov
iret
addr16
clc
xlat
and
xchg
mov
call
cmp
les
add
jno
popa
xor
and
inc
xlat
pop
fs
xlat
test
lcall
cli
cltd
push
mov
pop
push
ja
fnstenv
jns
sahf
shll
adc
sbb
cwtl
mov
inc
cmpsb
inc
inc
push
into
jp
iret
xchg
jmp
js
out
repz
aaa
xchg
lock
jmp
aaa
loop
imul
dec
sar
insb
mov
fsubs
out
ss
mov
out
out
nop
xchg
mov
dec
mov
jmp
push
xor
sti
push
lods
test
sub
push
and
imull
out
std
or
add
repz
ja
pop
push
cli
sbb
movsb
adc
sbb
cmp
add
push
dec
add
push
add
sahf
jbe
in
mov
insl
jo
lds
ljmp
lret
add
pusha
cmp
jb
mov
je
sti
mov
loopne
cmpsl
lcall
and
lods
movsl
push
lea
cwtl
mulb
mov
cwtl
sbb
pcmpgtw
push
xchg
push
mov
or
or
fucomi
outsl
inc
std
xor
push
orl
addr16
pop
push
xchg
mov
int
insl
pop
add
jne
pushf
fnstcw
ja
in
xor
xchg
popa
adc
sti
in
sub
xchg
dec
hlt
adc
scas
ja
hlt
in
jmp
and
mov
ja
pop
sbb
scas
rorl
mov
int
xchg
int3
into
adc
sbb
jp
out
arpl
cltd
mov
jne
sbb
xor
mov
js
cld
cmc
call
pop
mov
repz
fldcw
mov
into
sti
xchg
cmp
imull
sbb
cmp
sbb
jl
sbb
icebp
movsl
aaa
lods
nop
jl
add
fimuls
xlat
fadds
repz
cld
clc
jnp
out
jbe
sub
sbb
aam
jmp
ja
ljmp
imul
mov
std
push
shrb
xchg
fs
sub
in
lods
jbe
sub
mov
dec
push
hlt
mov
repnz
ja
push
shll
push
lret
dec
xchg
cli
jp
stc
xor
jae
mov
adc
and
popf
adc
mov
aaa
es
inc
xor
sbb
xor
push
sub
sub
mov
jp
aas
cmpl
inc
push
pop
xor
outsb
jg
adc
mov
shll
lret
js
je
fidivrl
cmc
mov
and
push
and
and
add
icebp
pop
dec
clc
stos
int3
scas
push
add
je
fwait
or
adc
popf
dec
sbb
cwtl
xor
inc
xor
fsubs
fcoms
add
cli
jnp
inc
lds
aad
out
sbb
dec
icebp
and
fildll
xchg
and
cmpsb
insb
fildll
sub
jecxz
test
int3
or
mov
inc
and
push
loopne
xor
or
lock
loope
mov
xchg
iret
xchg
sub
rclb
mov
hlt
push
jnp
popf
and
xchg
push
cmpsl
std
fcmovu
xchg
mov
inc
outsl
dec
mov
repnz
mov
fidivl
sub
int3
js
sbb
addb
adc
mov
xor
jno
ret
push
les
dec
lcall
insl
push
fwait
loopne
and
fwait
mov
mov
lret
push
lret
aas
notl
mov
jge
out
adc
or
fwait
and
ffreep
sub
loopne
and
cmc
dec
loope
sbb
rorb
adc
cwtl
cmp
and
jmp
scas
add
dec
sti
mov
jnp
lahf
sbb
dec
xchg
lock
or
mov
xchg
inc
aam
adc
sbb
xor
cli
icebp
lret
xor
ret
ss
jnp
jl
xlat
test
sub
or
movsb
mov
pop
addr16
int
les
outsl
cmp
movsl
mov
mov
lock
sub
inc
out
pop
inc
das
sbb
aas
js
mov
mov
push
sahf
xchg
push
rclb
jge
ljmp
mov
ror
sbb
mov
sub
in
fmull
xchg
enter
icebp
dec
aam
and
jp
inc
pop
adc
rclb
adc
sahf
mov
mov
insl
xlat
jae
jecxz
dec
jb
jno
or
in
fdivs
jnp
mov
mov
rep
repnz
sbb
ret
mov
cmp
sub
leave
push
sti
lret
lcall
out
mov
loop
fnstenv
arpl
and
mov
ja
mov
hlt
outsl
or
int
xchg
push
xchg
mov
pop
adc
fwait
xor
cmp
jnp
fldt
add
ss
or
movsb
cmp
cli
lcall
les
jo
adc
cltd
nop
lods
mov
test
je
jb
outsb
arpl
shrb
push
jecxz
movsl
jnp
cmp
or
fdivl
outsl
fistps
adcb
lds
mov
popf
add
dec
mov
dec
mov
or
sub
sub
leave
mov
fwait
xor
imul
jae
clc
pop
cltd
in
fldl
mov
pusha
mov
lods
cltd
bound
sub
loop
dec
imul
jp
or
aaa
mov
sub
push
pop
rcrl
sti
enter
cwtl
jle
xchg
repnz
mov
adc
pop
xchg
fimull
xorb
dec
aaa
into
lret
lret
xor
mov
push
test
mov
loop
aam
sub
lahf
mov
movsb
ss
loop
adc
mov
jno
dec
shlb
cli
push
ljmp
or
push
dec
xorl
sar
sub
sub
lret
js
jle
xchg
int
cmp
pop
push
nop
loopne
addr16
mov
in
xor
or
push
test
leave
cmp
and
add
ja
xchg
push
sub
enter
push
mov
mov
jb
dec
dec
cmc
dec
stos
xchg
in
or
daa
mov
pop
movsl
jecxz
test
inc
rclb
loop
insb
pop
xor
lcall
insb
adc
lret
in
mull
dec
xlat
mov
adc
push
dec
sahf
out
inc
or
dec
js
cmp
call
out
xor
insl
addl
jmp
ds
lea
cmp
in
fcmovne
fsts
pop
enter
repnz
lods
push
inc
push
aaa
mov
out
es
outsl
fdivrp
xchg
icebp
push
adc
and
sub
dec
mov
xchg
pushf
fisttpl
sbb
pusha
push
lods
xchg
movsb
mov
or
fwait
jns
les
mov
jmp
jne
les
xchg
push
jge
adc
sbb
call
out
lcall
mov
les
pushf
outsl
sti
and
mov
jae
addb
outsl
inc
sub
mov
cmp
cmp
insb
xor
adc
or
aaa
jae
adc
hlt
mov
stos
outsb
sub
xchg
xchg
push
mov
ja
scas
push
repz
decb
notl
jg
xchg
in
mov
rorl
lret
iret
iret
jp
xchg
pop
cmp
jmp
and
incl
xor
cmp
rcrl
neg
in
xor
jb
mov
inc
adc
sarl
mov
push
jp
and
adc
cmpsb
sub
inc
lret
sbbl
xor
pop
dec
ret
aam
call
xor
or
out
jmp
inc
mov
pop
xlat
aad
gs
aad
add
lea
dec
cmp
xor
cmp
add
int
ret
pop
jb
mov
xor
aas
divl
out
out
cs
or
dec
sbb
cmp
lds
lret
out
jg
sahf
mov
inc
inc
mov
frndint
cmp
stos
push
jmp
sub
mov
sti
shll
imul
adcb
push
pusha
pop
test
jns
add
dec
ja
jle
cmp
pop
mov
shlb
out
sub
movsb
out
fildl
mov
inc
cmp
popa
repz
or
lret
cmpsb
and
jns
int3
pop
daa
ds
lods
repz
outsb
pusha
xchg
xchg
sbb
pop
inc
pop
adc
lods
aam
pop
jnp
out
lcall
dec
sbb
jmp
jbe,pt
mov
add
mov
jne
xor
pop
inc
sub
into
mov
jo
sbb
in
bound
inc
sub
rol
cld
jecxz
jge
jmp
sub
repz
lock
shrl
mov
adc
out
mov
cwtl
mov
in
mov
lret
gs
adc
test
mov
mov
adc
sub
repz
scas
movsl
mov
push
xchg
and
mov
jl
mov
pop
or
mov
data16
cmpsl
dec
cpuid
in
imul
arpl
push
and
dec
outsl
mov
sahf
loopne
imul
imul
inc
add
ljmp
sbb
cmc
mov
mov
mov
mov
sahf
je
and
insl
xor
leave
das
aam
xor
adc
push
dec
popf
shl
mov
das
mov
sbb
inc
jge
ret
test
out
pop
xchg
addr16
or
lds
xchg
call
xlat
mov
inc
testl
test
xor
sbb
fwait
add
test
mov
xor
xchg
imul
or
sub
add
cmc
cmp
stos
add
cmc
or
xlat
adc
push
stos
jp
dec
pushf
test
mov
sub
enter
mov
sbb
xchg
dec
daa
aaa
sarb
or
mov
imul
mov
loope
mov
mov
adc
lret
or
in
lcall
bsr
mov
push
jg
addl
jl
pop
xor
daa
shrl
cmpl
jne,pn
or
stos
lret
inc
mov
or
cmpsl
daa
in
mov
and
lcall
fs
bound
xchg
mov
lea
jl
mov
data16
jge
jno
arpl
jbe
jns
imul
clc
push
lahf
and
fnsave
bound
add
inc
mov
scas
push
daa
je
mov
int3
mov
dec
dec
decb
bound
mov
subl
add
jne
pushf
jno
lock
sbb
mov
in
mov
aaa
xchg
cltd
adc
mov
pop
dec
mov
sbb
sbb
mov
in
sarb
hlt
add
mov
aad
mov
imul
jo
xor
std
dec
das
in
fstpl
inc
push
in
xchg
in
insb
and
and
or
cld
mov
add
call
sub
aad
push
lea
repz
sbb
xor
dec
sub
sbb
xor
adc
jns
dec
outsb
fwait
int
or
mov
push
pop
sub
sarl
xor
sbb
test
and
xchg
notl
in
push
fstpl
push
ds
neg
jl
iret
ret
mov
jge
sbb
push
clc
mov
xchg
subb
mov
add
mov
jecxz
mov
sbb
pop
fprem
adc
daa
in
mov
xchg
loopne
push
insl
jno
lcall
pop
jb
rcrb
push
js
mov
addr16
xchg
loop
dec
cld
xor
stos
mov
pop
adc
push
mov
inc
push
dec
xchg
loope
push
xor
push
jbe
jecxz
adc
inc
shlb
xchg
sbb
sti
xchg
sbb
adc
lahf
xor
clc
jge
xchg
add
cmpsb
in
and
outsl
insb
stos
in
pop
sub
xchg
in
mov
repnz
jmp
popa
add
xor
imul
cmp
mov
cmp
sar
adc
icebp
leave
imul
lcall
movsb
xchg
popa
pop
or
test
or
xchg
lahf
dec
xchg
sahf
pusha
out
sbb
movsb
je
popf
adc
mov
push
stc
imul
inc
pop
dec
sbb
sbb
cs
sti
fmull
fistpl
cs
cli
cmpsl
fnstsw
sti
dec
fisubrs
adcl
sub
out
xchg
stos
mov
pop
hlt
lock
add
add
mov
jae
gs
ss
pushf
mov
adc
sub
scas
rcl
mov
mov
or
hlt
daa
inc
ficompl
adc
xchg
fcoml
call
dec
lods
fsubrl
pop
outsl
aaa
mov
sub
add
jle
pop
sub
icebp
scas
test
lret
ret
xchg
lcall
outsb
insl
cmp
clc
aaa
popf
cmp
inc
in
ljmp
test
or
into
adc
stos
mov
cwtl
xchg
pop
test
mov
xchg
mov
mov
movsb
mov
xchg
jo
fcomp
lret
mov
cmpl
and
ljmp
xchg
and
adc
inc
outsl
jle
movzwl
in
mov
xchg
insl
xor
outsb
subb
mov
arpl
cmpsl
xor
xor
jbe
int3
xchg
mov
mov
pop
test
pop
fcompl
inc
adc
xor
out
jmp
cmp
push
cmp
roll
out
outsl
fldt
dec
sbb
aam
call
das
push
push
ja
int3
inc
mov
push
xlat
cmp
in
sbb
test
rcr
test
outsl
sbb
inc
jmp
ja
outsb
sahf
pop
mov
jg
mov
sub
sahf
test
xchg
add
sarl
mul
fidivrl
dec
inc
sbb
dec
outsb
and
sub
push
fstpl
popf
aad
inc
mov
xchg
xlat
call
mov
add
push
test
xchg
addl
sub
and
xor
cmpl
xor
sti
mov
mov
clc
mov
es
loope
dec
outsl
inc
fistpl
xchg
inc
mov
je
fwait
xor
out
cmpsb
mov
negl
ja
movsb
rorl
cwtl
and
push
add
xchg
fisubrl
mov
cmp
push
mov
arpl
dec
sub
out
push
inc
std
mov
pop
pop
pop
sbbb
cmp
imul
sbb
out
out
imul
xchg
pusha
sbb
iret
and
and
mov
idivb
cltd
cmp
push
pusha
sub
push
dec
cmpsb
dec
mov
jae
add
inc
mov
imul
sbbl
jnp
cwtl
mov
or
push
ss
pop
loope
adc
adc
sub
int3
push
call
jge
mov
xchg
jl
dec
lods
pop
leave
sahf
mov
mov
cli
xchg
aas
add
mov
adc
int
fnstcw
jl,pt
lret
xchg
push
or
push
jno
sbb
mov
xor
lock
pop
loopne
test
xchg
rol
adc
inc
das
xchg
or
cmp
clc
mov
scas
dec
stos
cmp
cmp
push
in
xchg
movsb
cli
incb
out
daa
jge
je
shrb
dec
test
lds
ja
hlt
stc
inc
push
adc
mov
inc
data16
stc
xchg
dec
lahf
repnz
xor
out
inc
inc
cld
pop
mov
arpl
add
into
ljmp
aaa
jp
pop
sub
icebp
fidivrl
faddl
stos
test
push
add
or
push
sub
jecxz
mov
cld
push
cmp
rcrl
gs
pop
movsb
lret
ret
fdivrs
ja
lea
pop
jp
in
mov
mov
int
test
int
sbb
inc
idiv
cmp
fstps
mov
pop
lds
gs
xchg
aad
repnz
lret
adc
fidivl
mov
enter
insb
pushf
sarl
mov
leave
dec
mov
mov
cmpsl
inc
movb
cwtl
cmp
std
fisttpll
ret
xor
hlt
arpl
push
shr
outsb
lods
and
mov
loope
ljmp
roll
lret
jo
and
jmp
sbb
mov
pop
lock
loopne
adc
mov
cmp
pop
ja
dec
xchg
mov
cmp
dec
mov
leave
add
rclb
mov
add
sbb
popf
adc
je
test
mov
nop
mov
movsl
pop
xor
insl
loop
icebp
in
mov
lret
stc
mov
test
int
imul
cmp
pop
fdivrl
cmp
xor
and
in
cmp
sub
push
in
and
add
xchg
cmp
out
mov
jns
fwait
lret
xorl
mov
or
pusha
inc
sbbl
lds
sub
add
add
mov
movsl
hlt
int
adc
mov
jecxz
mov
xor
xor
and
xor
repz
pop
dec
mov
xor
push
mov
aas
push
dec
adc
fcomip
shrl
xor
inc
jo
out
data16
xor
cmpsl
mov
add
fists
mov
rorb
rclb
iret
movl
imul
jmp
je
cmp
je
inc
mov
push
outsb
and
adc
add
pop
mov
leave
sub
xor
push
add
mov
mov
lret
pushf
pushf
dec
fsubr
mov
outsb
and
iret
inc
arpl
xchg
lcall
stos
pop
ja
fprem1
jge
aam
subl
push
les
out
in
ja
lock
mov
lds
repz
mov
into
mov
xchg
lods
dec
and
pop
and
test
insl
lock
stos
popa
pop
scas
fcoml
imul
push
sub
jp
hlt
adc
loop
and
fcoms
or
and
inc
negb
adc
stos
fcoml
or
ret
popa
push
ficoml
push
push
pushf
sbb
repz
mov
jno
mov
sub
sbb
jae
push
mov
and
pop
jecxz
xchg
jg
popa
lods
cli
xchg
mov
push
or
pop
outsl
add
add
push
icebp
repnz
jae
lock
dec
mov
nop
outsb
imul
inc
pop
mov
xchg
test
sbb
in
cmpsl
xchg
jle
mov
jecxz
fnsave
add
mov
imul
push
add
jnp
sbb
fidivrs
mov
pop
push
xor
mov
ljmp
stos
pop
hlt
stos
xchg
xlat
inc
cmpsl
cmp
mov
push
fiaddl
imul
loop
jno
fs
xor
in
xor
repz
cli
mov
int3
syscall
cmpsb
inc
or
jg
sti
mov
mov
jmp
lcall
les
aad
xor
or
cmp
dec
shrl
xchg
pop
xchg
add
sbb
fistl
inc
or
mov
sti
sti
mov
scas
clc
mov
pop
mov
mov
js
lods
mov
adc
adc
jb
mov
aam
inc
repz
pop
movsl
lea
xlat
addr16
shlb
pop
mov
add
xchg
and
cld
jbe
shl
decl
jae
push
fnstcw
mov
inc
insl
jl
out
push
loopne
push
mov
mov
xchg
clc
or
ss
push
test
sbb
or
divl
xor
mov
push
xchg
sbb
call
inc
adcb
es
fwait
aas
jmp
popf
push
das
dec
cmp
filds
push
aas
jo
pop
xchg
cmpsb
ret
mov
in
xor
sub
fwait
mov
mov
ds
fwait
addr16
push
inc
pop
xor
push
fldl
mov
fldcw
dec
inc
jecxz
jno
call
addr16
push
jno
or
jo
cwtl
and
xchg
dec
cmpsb
ret
mov
cmpsl
leave
pop
mov
mov
pop
imul
in
and
daa
sbb
xor
mov
outsb
pop
dec
mov
loopne
leave
mov
sti
addr16
pop
sbb
in
cmp
sbb
adc
std
fs
imul
jecxz
and
dec
sbb
icebp
mov
sbb
push
and
add
shl
lret
xchg
loop
loop
push
and
lock
mov
cwtl
xchg
icebp
and
push
test
sub
push
mov
lahf
lds
rol
inc
addr16
add
jbe
lods
dec
and
test
sbb
cli
hlt
repnz
mov
subl
mov
les
insb
fsubr
push
aaa
out
push
adc
insb
mov
es
arpl
sbb
push
cmp
cmp
mov
push
sahf
dec
mov
ja
cmpl
push
addr16
shll
aam
mov
out
mov
mov
ret
xchg
jno
div
test
adc
je
sbb
jae
call
adc
addl
call
add
std
jbe
aas
fisttpll
mov
dec
mov
fwait
fidivrs
or
in
inc
ror
mov
xchg
push
and
cltd
jnp
adc
jnp
cmpsb
push
pause
mov
mov
inc
add
lcall
add
sbb
and
test
adc
inc
popa
iret
adc
push
aam
clc
adc
mov
sub
pop
pop
sub
push
and
mov
in
in
mov
mov
pop
jo
inc
jne
xchg
inc
shlb
adc
pop
jecxz
pop
mov
xor
adc
lock
insl
stos
sub
jae,pn
test
es
mov
ljmp
js
push
lcall
sub
xor
dec
lea
popa
scas
push
nop
les
sar
cwtl
inc
inc
stos
leave
push
les
ficomps
jo
jbe
stc
in
push
mov
mov
mov
ljmp
repnz
outsl
xorb
or
inc
and
xchg
addb
js
jns
mov
outsl
push
pop
test
jns
outsb
arpl
xor
sub
pop
mov
or
xchg
test
xlat
jae
aas
aad
icebp
es
mov
and
insl
lock
fiaddl
push
lcall
loope
mov
outsb
or
mov
xchg
jnp
sub
fisubl
sahf
rolb
repnz
or
mov
pop
adc
iret
push
cmp
pop
cmpsl
jne
fisttps
push
sbb
add
push
sahf
mov
and
lcall
sbb
rcrl
cmp
sbb
cli
pop
lods
push
addr16
xchg
pop
hlt
xor
jae
loope
andl
mov
subl
and
adc
aam
movsb
dec
push
popa
cwtl
mov
imul
mov
scas
xor
mov
pop
dec
mov
sbb
cmp
pop
lcall
pop
mov
push
pop
bound
out
or
stos
pushf
sbb
popa
and
dec
inc
add
pop
jb
jne
cs
xchg
insb
push
inc
cld
stc
add
ss
push
or
je
xor
push
inc
ret
imul
popa
xchg
jnp
int3
std
sbb
add
stos
xchg
cmp
arpl
add
cltd
icebp
mov
or
enter
cmp
add
pop
out
sbb
and
shrb
sub
out
sub
popa
addb
pop
out
jo
fimuls
cmp
jle
push
jle
dec
add
push
adc
jno
loopne
mov
and
nop
data16
and
pop
add
enter
pop
and
nop
mov
adc
pop
adc
cmpsl
int
outsb
std
jno
xchg
mov
ja
jl
test
xchg
mov
jl
cld
dec
xor
sub
popf
mov
das
mov
fmulp
xchg
mov
test
insl
pop
clc
and
and
xor
js
xchg
mov
nop
jle
mov
out
add
pop
jns
stos
mov
fcmovne
inc
int
lock
cmp
movsb
adc
das
cld
inc
loope
add
repnz
shl
movsb
sub
es
cs
nop
mov
mov
nop
ret
push
or
adc
adc
xchg
shll
dec
jns
adc
cli
loope
push
gs
int3
jp
add
dec
mov
adc
dec
mov
mov
pop
or
pop
test
jno
sub
mov
pop
mov
mov
push
sub
and
inc
xor
rcll
inc
fmuls
pop
roll
jle
int3
push
push
cmp
cmp
jbe
adc
mov
xor
add
cwtl
or
xchg
rcrl
gs
int
add
cs
sub
bound
jae
xor
cmpb
imul
dec
xor
ds
inc
mov
jg
xlat
sbb
add
dec
ljmp
test
mov
rcll
jne
imulb
adc
inc
outsb
bound
cmp
mov
xor
sub
sub
mov
add
repz
shlb
mov
aaa
hlt
jnp
ljmp
in
fbstp
jmp
lock
mov
pop
adc
push
mov
jmp
stc
lahf
test
sbb
int
fistpll
mov
add
xchg
clc
fdivrs
call
mov
adc
dec
je
dec
dec
push
pop
imul
mov
pop
jg
mov
cmp
ljmp
cwtl
xchg
jbe
movsl
dec
or
fchs
fldcw
mov
movsl
inc
xor
enter
sbb
js
mov
fmuls
lret
mov
jo
push
and
add
inc
sahf
sub
and
mov
fmulp
lds
mov
jmp
sti
push
das
dec
xchg
daa
int
in
sub
popa
pushf
lea
mov
sahf
mov
les
jp
and
out
cmpsb
cmp
rolb
addr16
ss
push
fs
cmp
out
loope
dec
dec
mov
fst
push
cmc
popf
repz
inc
pop
lret
xor
mov
cmp
loop
scas
lea
xlat
cmp
mov
xchg
sarb
or
int
imul
xor
filds
bound
sbb
mov
inc
sbbb
sub
and
cmp
and
push
sahf
insb
push
stos
cs
pop
sbb
adc
sbb
orb
enter
int
adc
aam
xor
dec
xchg
sbb
mov
cld
cmc
loope
mov
jo
mov
push
fdiv
adcl
repnz
fsubrl
jnp
adc
dec
and
jb
shr
pop
xchg
mov
jecxz,pn
pop
aas
addb
adc
mov
push
mov
mov
mov
inc
cmp
pop
pop
push
jmp
inc
mov
shrl
stc
dec
pusha
mov
call
subl
xchg
inc
inc
test
je
dec
xor
pusha
add
and
jmp
jo
inc
pusha
cmpsb
sub
sbb
adc
out
lods
push
fs
xchg
arpl
movsb
testb
push
adc
leave
out
add
push
jmp
jo
rcrl
dec
enter
rcrb
cwtl
sbb
jnp
js
and
mov
bnd
push
or
fldenv
rorb
xor
mov
sub
cwtl
cmp
andb
or
test
mov
inc
hlt
add
mov
in
fildll
ficompl
sti
aaa
je
popf
jge
inc
lret
push
jbe
notl
xor
push
dec
loop
push
imul
and
rclb
dec
dec
gs
fwait
push
push
test
in
sub
add
pop
jmp
icebp
lret
ficoms
xor
incb
aas
gs
xor
fcompl
xchg
xor
dec
sub
and
movsl
shll
cmp
dec
movsb
addr16
sbb
arpl
shlb
lods
aad
lds
xor
xchg
jge
or
les
sbb
add
pop
and
loop
adc
push
or
jne
mov
fsubrl
xchg
adc
scas
outsb
mov
xchg
femms
jbe
sbb
mov
je
mov
movsb
shl
mov
ret
push
sub
subl
aad
lcall
mov
inc
cs
push
repz
xchg
push
inc
jnp
es
or
outsl
xchg
sbb
push
sbb
jp
sahf
sub
xor
insb
push
adc
or
pop
lret
xlat
lods
nop
jno
mov
pop
and
testl
js
jge
in
imul
push
add
aas
sbb
loope
daa
rcrl
mov
loope
rcr
adc
and
xlat
daa
aad
jb
fistpl
adc
mov
shl
or
mov
sahf
aam
leave
popf
gs
dec
je
push
inc
pop
es
and
arpl
insb
imul
push
insl
jge
or
adc
incl
in
test
xchg
push
fucomp
jp
or
mov
adc
mov
add
addr16
aad
xchg
clc
sub
and
inc
fnstsw
aas
jg
sbb
inc
sub
add
lods
test
sbb
call
fstpt
mov
or
mov
lcall
and
xchg
adc
repz
pop
dec
sub
pop
ljmp
jnp
addr16
mov
or
insl
jle
xchg
dec
je
jne
paddb
fucomp
xrelease
add
xchg
rcr
je
jp
das
fstl
lahf
push
inc
mov
rcl
mov
pop
jl
push
mov
xchg
jl
push
and
jns
or
sahf
mov
inc
adc
mov
lret
fimuls
scas
or
es
add
xchg
shll
loope
and
lcall
mov
mov
inc
jns
enter
sahf
xchg
into
enter
dec
jae
sub
sarb
test
rcrb
mov
mov
dec
mov
inc
sub
out
mov
repnz
sub
pop
imul
xchg
test
or
jge
pop
lods
pop
in
punpckldq
push
dec
xchg
mov
lds
push
repnz
test
xchg
loope
lahf
dec
scas
jno
sbb
mov
push
cmc
lret
add
mov
int3
das
push
loopne
ss
dec
lret
lahf
xchg
in
popf
lds
dec
xchg
xor
or
dec
in
mov
js
fldcw
or
mov
add
mov
rolb
fnstenv
aaa
mov
data16
in
lods
movsl
and
dec
shrl
mov
arpl
aaa
adc
and
addl
ffree
loop
sub
cmc
fs
movsl
lret
das
push
adc
cmpsb
gs
jp
hlt
dec
push
test
adc
mov
out
jg
mov
test
mov
push
sub
mull
iret
mov
cmp
nop
rcrl
sub
enter
xor
mov
sub
jbe
add
and
sti
mov
xor
push
pop
rorb
dec
mov
pop
pop
inc
sub
mov
test
dec
xlat
in
sbb
cmp
mov
dec
cli
test
xor
xchg
mov
lds
icebp
xor
iret
push
jbe
add
mov
add
in
pop
in
mov
imul
test
fnsave
in
push
fcomip
ds
call
jmp
ret
push
push
push
pusha
subb
xlat
stos
push
pop
pusha
or
or
mov
movsb
jbe
loop
in
add
xchg
sbb
mov
mov
or
aad
lea
cltd
fcoml
adc
hlt
xor
xchg
cmp
test
pop
divb
scas
mov
lret
push
lock
ss
lahf
das
lahf
aad
jecxz
fcomi
pop
push
and
icebp
lret
cmp
imul
cmpsl
and
mov
push
in
lock
xor
scas
push
js
inc
add
lahf
aas
outsb
lahf
aam
mov
stos
fidivs
lret
xchg
fdivl
dec
jnp
dec
aas
xchg
test
test
test
xchg
adcl
arpl
add
cmp
jmp
in
mov
jmp
repz
jne
pop
mov
lcall
aaa
xor
lcall
daa
je
test
pop
scas
pop
cmp
gs
push
out
xchg
push
inc
lds
arpl
mov
cli
in
jmp
jno
sbb
nop
jmp
mov
mov
movl
mov
add
notl
cmp
jno
movsl
xchg
jnp
push
in
adc
mov
push
xor
push
aas
pop
pop
int3
xchg
mov
mov
cs
push
xorb
push
sub
adcl
sub
lret
shll
dec
push
stos
dec
xlat
addb
xchg
outsl
leave
bt
sbb
sbb
or
xor
sbb
dec
push
std
mov
andl
or
pop
inc
test
sub
dec
mov
pop
cs
push
sub
sub
pop
mulb
lret
mov
leave
inc
sbb
sbb
dec
pop
lcall
cmpsl
mov
jno
jge
test
and
jge
cmp
xchg
cltd
mov
mov
push
arpl
xor
dec
clc
mov
pushf
inc
xchg
and
dec
add
push
inc
loopne
push
add
popf
in
mov
cltd
adc
mov
cmp
cmpsl
sbb
outsb
mov
test
popa
sbb
cmc
mov
pop
or
push
ret
mov
enter
jnp
mov
cmpsb
mov
int3
xchg
sbb
sarl
test
or
bound
add
jl
cmp
cmpsb
push
jno
adc
lret
sbbb
adc
sbb
or
fisubrs
test
jg
das
mov
js
push
adc
pop
push
daa
sub
and
out
sbb
lret
pop
imul
mov
xor
out
push
or
cltd
ret
sub
sti
insl
lods
inc
pushf
decb
call
push
dec
ret
add
fisubs
push
sub
notb
pop
mov
lods
sbb
dec
std
dec
dec
and
shl
outsl
clc
pushf
fcmovne
mov
cmp
add
gs
test
dec
push
jnp
xchg
test
loope
inc
cltd
inc
leave
mov
ss
mov
fwait
jne,pn
mov
mov
dec
pop
dec
push
fs
rolb
inc
mov
xchg
sbb
push
insb
sub
mov
mov
out
lods
xor
sub
bound
mov
fistpl
jne
mov
insl
push
int3
test
cmp
lods
test
push
push
leave
insl
inc
jo
push
push
fwait
in
bound
add
pop
popa
gs
pop
out
stos
jae
nop
sub
sub
repnz
xchg
add
ja
xlat
mov
imul
jb
imul
push
sub
mov
xorl
popf
scas
sub
and
test
data16
push
mov
sub
jle
gs
stos
add
fdivr
pop
push
repnz
or
sbb
dec
popa
insb
xchg
sbb
adc
fwait
xchg
sahf
inc
mov
pop
std
push
jge
mov
xor
mov
lahf
sarb
lret
and
dec
andb
adc
lock
and
mov
dec
inc
xchg
fcompl
cmp
stc
adc
mov
jns
xor
dec
fisttps
test
fdivr
xor
xor
xchg
sub
cmp
mov
mov
ljmp
ss
out
out
ror
ds
xchg
in
sbb
add
jle
ja
call
dec
inc
test
sub
inc
lret
push
loopne
test
test
mov
in
jnp
sarb
adc
jno
xchg
fdivrp
in
decb
mov
js
scas
dec
js
jb
shll
fisttpll
rorl
push
sbb
in
insl
int
sarl
test
sub
or
scas
and
mov
arpl
sbb
aas
mov
sub
add
push
xor
aaa
jne
lds
push
hlt
mov
jecxz
xchg
cmp
push
addr16
je
fdivp
sbb
fwait
or
aaa
sub
aad
rcrb
ljmp
in
out
notb
ret
push
inc
push
aad
mov
imul
pushf
xchg
lahf
cmpb
inc
push
repz
frstor
push
outsb
xor
xor
aam
jge
mov
and
adc
adc
test
pop
sbb
push
scas
jmp
lcall
push
cltd
insb
in
in
imul
fisubrl
loopw
dec
push
hlt
lods
mov
sub
inc
adcl
dec
fistps
das
int3
int3
mov
mov
stos
lret
data16
xchg
test
mov
and
hlt
mov
in
mov
loop
aad
xchg
fs
jmp
mov
jg
add
inc
mov
pop
sub
sbb
cmpsl
xlat
dec
enter
call
push
lea
mov
stos
out
cli
xor
cwtl
stos
arpl
push
retw
dec
and
aas
adc
loop
imul
imul
sub
in
aam
aam
push
enter
or
and
rcll
mov
lcall
pusha
push
jmp
sahf
cmp
inc
and
lods
jg
cmpsl
shrl
push
rol
ss
adc
push
mov
cli
insl
xchg
push
xchg
pop
das
fisttps
dec
mov
out
popf
inc
test
scas
sahf
loopew
arpl
and
adc
xchg
addr16
fistps
fimuls
scas
mov
jb
xchg
jae
mov
mov
xor
test
add
das
sahf
test
stos
mov
lods
lock
pop
mov
repnz
inc
or
mov
pop
or
rcll
push
mov
add
into
dec
mov
out
lods
dec
adcl
int
popf
sbb
jle
sbb
mov
xchg
inc
dec
sbb
repz
dec
add
repz
cmp
inc
cmc
cmpxchg
ret
jno
push
sahf
aam
jnp
sbb
sbb
addr16
shrl
notl
jle
push
pop
pop
mov
mov
dec
push
adc
xlat
push
mov
aaa
ljmp
loop,pn
push
clc
in
xor
push
jo
pop
ds
mov
xchg
and
mov
inc
mov
or
adc
fcmovbe
rorl
xchg
add
xor
inc
hlt
mov
inc
pop
lahf
pop
ret
pop
lcall
cmp
add
daa
mov
ja
repnz
dec
lcall
ficoms
xchg
dec
push
inc
jnp
ret
inc
mov
mov
test
daa
xchg
inc
arpl
iret
xorb
orl
sarl
test
into
mov
mov
sub
movsl
test
test
mov
scas
cli
mov
push
sub
xor
and
cwtl
orb
aad
mov
xor
lock
adc
scas
loop
push
test
ja
js
xchg
add
stos
in
dec
adc
jo
cmp
lret
sahf
or
movsl
cmp
sub
pusha
sti
hlt
nopl
jae
mov
pusha
getsec
add
pop
inc
addr16
insl
or
sub
push
cmp
push
mov
dec
scas
fidivl
out
int
mov
popf
dec
ja
xor
add
pop
mov
movsb
push
out
lea
lods
or
in
cmp
lods
and
inc
mov
xchg
arpl
or
xchg
mov
adc
lods
sbb
jg
insb
or
in
xchg
mov
push
orl
icebp
dec
leave
add
int
inc
jl
in
add
fwait
test
xchg
sbb
mov
insb
adc
inc
btr
add
mov
xor
mov
rcrl
mov
cmp
adc
popf
or
lret
shl
adc
jmp
fs
daa
mov
scas
xchg
sahf
fdivs
imul
ja
push
mov
adcb
ss
xor
or
rorb
mov
sub
and
push
orl
sub
lods
das
xor
push
das
dec
jle
pop
in
call
sub
and
cmp
xlat
int
or
imulb
pop
cmp
cmp
sbb
lcall
insl
push
mov
int
push
lahf
pop
mov
sar
out
rcll
jb
and
or
add
movsl
stos
push
movsb
frstor
int
jp
inc
mov
shrb
sti
mov
cmpl
into
clc
dec
ja
js
push
adc
adc
push
lods
jne
je
fdiv
negb
push
mov
xor
sbb
jae
imul
out
jnp
dec
daa
xor
pop
nop
xchg
dec
ds
push
outsb
jbe
lock
jbe
nop
mov
es
sub
sbb
mov
les
inc
aas
jle
xchg
out
jo
or
pushf
and
adc
pop
in
sbb
and
lock
pop
std
enter
add
lret
bound
pop
lahf
dec
movsl
hlt
fildll
jge
mov
mov
push
jg
les
cmp
ss
push
lret
outsb
or
mov
mov
mov
xchg
sbb
hlt
cmp
dec
push
rcr
push
imul
sbb
cmc
add
mov
lock
pop
int
xor
xchg
mov
mov
and
xchg
mov
icebp
test
inc
pop
mov
push
add
scas
rorl
inc
pop
aam
jno
push
cwtl
insb
popl
rolb
pop
repnz
test
push
scas
and
sar
and
fistps
jl
add
or
or
cmp
jmp
xchg
adc
fisubl
sbb
jp
sbb
adc
icebp
pop
aam
mov
rol
ss
popa
xor
and
mov
popw
inc
sahf
loopne
int3
lret
xor
dec
inc
xchg
lds
loop
add
inc
mov
mov
mov
lods
das
adc
clc
xchg
xor
push
add
insb
and
iret
jp
loop
ja
adc
repnz
dec
andl
push
scas
add
cmc
or
test
pusha
jae
mov
mov
mov
mov
xchg
pop
mov
mov
sub
es
cwtl
xlat
mov
mov
mov
or
pop
pop
dec
addr16
cmc
xchg
xchg
dec
daa
nop
xchg
pop
add
jne
push
jns
mov
mov
and
mov
lcall
sub
mov
cmp
fcoms
sbb
cmp
stos
mov
xor
dec
inc
test
rol
pop
inc
mov
flds
xchg
stos
sahf
enter
bound
xor
jo
pop
sbb
push
fsubrl
clc
stc
fsubr
sub
orb
out
jae
or
push
aas
cwtl
xor
insl
sub
dec
stos
lods
pop
ret
scas
push
in
add
lock
xchg
mov
push
xor
mov
xchg
mov
pop
loope
sti
fdivrl
shrb
lcall
mov
es
cmp
xchg
cmp
mov
push
mov
jne
sub
push
inc
lcall
xchg
sarl
outsb
imul
out
vpcomud
cmp
cmp
jo
loope
pop
stc
ds
mov
je
inc
and
in
mov
jmp
fcmovb
ret
pop
das
es
mov
pop
out
mov
out
rcrl
das
push
test
repz
xlat
cmc
dec
sbb
inc
jl
and
xchg
add
notl
push
loopne
movsb
push
and
mov
clc
test
mov
adcb
leave
xchg
leave
add
push
call
pop
pop
fwait
or
shrl
pusha
mov
call
cmp
daa
pop
cmpsl
push
int3
adc
xor
jbe
in
cmp
xor
bound
mov
jp
stos
sub
cld
jbe
test
std
jg
lret
xchg
sub
lods
js
sbb
and
lods
sub
mov
in
xor
adcl
pop
mov
and
pop
add
mov
jge
inc
jge
cmc
lods
stos
lahf
xchg
mov
xchg
adc
out
sub
pop
jp
in
adc
dec
inc
xorl
push
fldl
fidivrs
icebp
fcoms
jne
loope
jb
mov
popa
pop
inc
aad
pushw
shl
cs
cwtl
daa
jns
adc
cs
lock
arpl
out
fsubrp
sub
enter
mov
sbb
sub
aaa
and
outsl
popf
call
sub
adc
sub
aas
ja
inc
jp
hlt
mov
iret
mov
and
mov
lahf
mov
adc
sub
in
dec
and
push
pop
daa
dec
or
test
mov
add
ret
mov
sub
shrb
bound
xor
mov
add
sarl
ret
mov
fs
adc
mov
pop
push
filds
mov
repz
push
loop
push
inc
ja
popa
fcomi
out
jae
cmpsb
jbe
in
or
fistpl
test
aam
xchg
dec
push
das
scas
cmp
cmp
jmp
cmp
jo
dec
and
jp
rcll
mov
in
mov
mov
ja
orl
repz
xor
push
rclb
fcomps
mov
jecxz
inc
sahf
rorb
xchg
pop
out
jg
aam
pushf
loope
scas
js
in
add
dec
loopne
and
add
jae
mov
jmp
sub
rcll
cmpsl
mov
push
push
out
push
lods
jmp
cs
adc
add
loope
push
jmp
or
pop
sub
sub
lea
insl
out
jo
addr16
push
or
mov
xor
mov
cld
pop
inc
and
fistpl
fisubrl
sub
das
mov
out
mov
mov
mov
mov
dec
movsb
jmp
ds
rcrl
jmp
jne
mov
fmulp
add
mov
cwtl
mov
aad
mov
movsl
jns
cmp
stc
fldcw
lret
mov
dec
scas
ja
inc
clc
js
popf
arpl
mov
into
cli
fbld
aas
sub
ja
stos
jbe
sbb
pop
adc
call
xchg
out
cli
loope
insl
icebp
lock
inc
cmp
and
sbbb
xor
add
fisubrl
out
pop
int
loop
int3
data16
clc
fisttpl
cli
fs
push
cmp
shr
jge
fcompl
gs
iret
push
push
stos
cld
and
cmp
dec
adc
fdivrl
cli
inc
xchg
or
sub
ss
xchg
mov
xchg
lods
mov
xor
jnp
xor
sbb
das
in
jae
sbb
push
jbe
mov
mov
jo
mov
jl
sbb
pop
fcompl
cmp
bound
mov
call
inc
sbb
and
repnz
or
dec
insl
or
jo
pop
jmp
mov
aam
dec
into
scas
aam
cmp
jmp
jnp
ret
lret
pop
mov
mov
stc
std
cwtl
das
jge
rep
ja
or
mov
ret
int3
mov
repz
cmp
add
sahf
push
xchg
sub
dec
lret
xchg
hlt
outsl
enter
pop
out
ret
mov
dec
je
mov
adc
and
xchg
lret
mov
in
sub
out
outsb
sbb
roll
sbb
and
push
xor
xor
lods
fidivl
aad
dec
inc
adc
sub
add
jl
mov
sbb
shll
and
mov
mov
push
dec
mov
xchg
mov
mov
cltd
hlt
outsl
scas
mov
clc
aaa
jb
sbb
call
jecxz
mov
shrl
out
cmp
dec
mov
sub
jbe
sbb
cld
inc
mov
jno
mov
cmc
xor
cmp
inc
test
test
cli
in
mov
daa
test
and
insb
call
xlat
xor
mov
decb
fmuls
dec
cmp
jecxz
cld
sub
aas
xchg
test
jp
and
arpl
pop
push
cmp
shr
dec
dec
outsl
cmp
mov
jb
shlb
add
pop
rcll
push
or
cwtl
xchg
data16
push
mov
insb
rorl
and
or
dec
mov
or
xor
dec
push
add
sbb
testb
push
mov
and
sub
mov
xchg
push
push
mov
pop
fisubrl
ja
mov
push
repz
loopne
add
leave
adc
pop
or
sbb
into
fisubs
dec
sbbb
movsl
inc
insb
std
icebp
push
mov
int
pop
jnp
in
shlb
out
imul
mov
pop
add
lock
pop
and
sahf
aam
fsts
sub
or
bnd
or
push
push
xchg
push
mov
loopne
xchg
mov
or
lods
out
cmp
mov
pop
loope
push
les
pop
cmc
cwtl
xchg
fmuls
push
lea
mov
jg
imul
pop
movsl
mov
out
aas
sub
sub
push
xor
cmpsb
jo
popf
xchg
add
jp
jns
push
nop
adc
xchg
push
stos
and
push
leave
xchg
adc
adc
popf
loopne
shlb
and
jb
incl
movsl
xor
cmp
jnp
and
in
sub
dec
sbb
adc
ret
or
mov
cmp
daa
shr
data16
pop
lea
push
mov
add
push
inc
inc
mov
unpckhps
push
inc
mov
dec
inc
push
pop
cmpsb
hlt
daa
adc
inc
orl
stc
ds
jge
jns
cmp
jl
imul
inc
fcmovbe
bound
test
pop
mov
inc
bound
lods
and
cmpsb
shrl
shl
pop
mov
sbb
pop
cmp
xchg
int
cmp
lock
push
lock
out
inc
loop
iret
pushf
push
push
push
jg
aas
in
add
sbb
dec
popf
fcomi
mov
pop
or
xor
push
pusha
cltd
mov
jnp
jno
cmp
rcrb
dec
pusha
andl
or
mov
rcl
jo
bound
pop
adc
mov
ret
movsb
cltd
mov
les
sub
pop
out
adc
adc
out
lret
and
xor
jae
mov
adcl
clc
sbb
dec
push
push
leave
loopne
pop
popa
sbb
sub
mov
xor
cmpsl
mov
jge
into
sbb
nop
loope
pop
inc
lahf
xor
outsb
movsb
ljmp
mov
or
pop
pop
mov
arpl
xor
and
or
cmc
jge
ds
xchg
repz
addr16
jno
mov
adc
fsub
jge
xor
pop
inc
leave
repnz
sbb
push
jo
mov
sbb
or
jp
xlat
sub
mov
data16
pusha
and
lods
and
cmp
pushf
sbb
cld
add
aam
das
fdivs
jle
cmp
push
leave
inc
stos
sbb
jecxz
loopne
shll
jge
in
sbb
aas
inc
add
movsl
test
clc
in
outsb
movsb
dec
or
jnp
mov
push
cmpsl
aad
push
jo
adc
scas
push
addr16
out
jb
mov
cld
xor
addr16
cltd
mov
sbb
xor
fmulp
iret
sbb
andb
cmp
mov
dec
inc
sub
subb
and
pop
and
add
mov
lahf
call
scas
repnz
lret
pop
cmp
sbb
mov
xor
mov
xor
cmpsb
or
test
or
insl
ret
fwait
out
repz
in
pop
cmp
fwait
pop
pop
rclb
add
bound
push
jns
arpl
popa
inc
fdivrl
inc
jo
cli
cwtl
xor
pop
push
pop
mov
mov
das
loopne
pop
scas
dec
push
and
xor
leave
or
stc
mov
in
mov
fiadds
incb
cli
push
dec
pushf
cmpsb
addr16
loopne
sahf
in
iret
divb
data16
cltd
test
mov
push
sahf
xchg
insb
adc
mov
and
add
jo
insb
mov
cltd
add
into
das
fcompl
mov
test
add
inc
lock
sbb
add
push
adc
aas
mov
cmp
add
addl
add
imul
sbb
xchg
mov
pop
xor
cli
in
push
cs
xor
jmp
mov
push
fistpll
jmp
pop
mov
in
loopne
and
in
scas
push
rcrl
cs
fdivrl
cmc
xchg
dec
jnp
cmp
fldcw
cmpsb
sub
inc
mov
mov
and
mov
jne
gs
std
sbbb
push
pop
xor
je
sbb
ja
sub
mov
inc
push
insb
cmpsl
pop
add
lret
call
je
les
imul
mov
jbe
sub
ret
cmp
cmp
and
lcall
mov
mov
cmc
mov
and
negb
adc
and
pop
sarl
popa
sub
lret
lahf
lods
push
lahf
jae
test
js
mov
jo
add
and
daa
filds
inc
inc
pusha
adc
lahf
push
pop
test
xchg
cmp
cld
fstl
push
xor
fimuls
dec
scas
cmp
mov
lds
xor
popa
adcb
std
jno
xor
aas
cmp
nop
adc
je
fs
push
loopne
push
stos
inc
inc
fstl
lea
xchg
fsubl
inc
ja
loopne
sbb
xchg
fs
cmp
sbb
pop
in
push
lahf
fisubs
pop
xchg
and
xorb
cltd
pop
push
push
aas
fbstp
jmp
cmp
jmp
lahf
fwait
and
xor
dec
jle
add
test
stos
or
push
xor
lea
dec
mov
jne
push
cmp
shl
dec
pop
repz
add
lret
pushf
adc
lods
inc
add
cmp
push
mov
jbe
fcomps
lret
lea
cmp
sbb
jecxz
and
cltd
pop
xchg
jne
cmc
loop
lahf
inc
cmp
cmp
add
fcmovbe
jle
sub
sub
movsl
cmp
test
sub
rcrb
mov
pop
insl
lret
mov
mov
xlat
add
andb
mov
rol
cmp
xor
out
insl
pop
inc
sarb
or
int
lock
insl
mov
mov
cltd
pop
in
and
and
and
gs
loopne
std
inc
movsl
loope
aad
cmp
rorb
js
xor
pushl
scas
push
aaa
mov
xchg
lea
sbb
cwtl
add
cwtl
in
out
or
outsl
push
cmp
out
mov
pop
jo
test
scas
filds
sbb
push
xchg
enter
inc
xor
dec
add
je
popa
jno
rcr
adc
or
int
mov
sarb
orb
xor
faddl
xchg
fwait
jae
sub
sahf
add
sahf
lods
mov
adc
push
cmc
cld
jae
push
mov
xchg
nop
in
imul
add
inc
inc
xchg
xchg
addr16
adcl
test
xor
jns
mov
in
mov
inc
cwtl
ds
adc
popa
sbb
push
push
lea
xchg
lret
repnz
cwtl
mov
pop
pop
xor
je
inc
xchg
lock
dec
push
shrb
pusha
test
xchg
mov
xchg
dec
inc
and
sbb
jle
dec
push
call
xchg
aas
push
out
shrb
scas
or
rcrl
leave
lret
dec
enter
mov
jb
popa
sbb
push
push
sbb
xor
mov
cli
lret
jmp
shll
or
jecxz
mov
jno
xchg
or
mov
scas
adc
es
pop
xchg
ljmp
xchg
inc
jmp
pop
loopne
repz
rclb
pop
lret
push
aam
and
sbb
pop
fimull
mov
aad
inc
call
jg
sbb
jmp
mov
frstor
push
fwait
push
es
popa
insl
add
xor
mov
mov
dec
das
arpl
out
jb
mov
pop
popa
addr16
mov
jb
pop
movsl
daa
mov
mov
xor
xchg
repnz
sub
pop
jmp
loope
or
cwtl
sbb
pop
inc
fisttpll
and
push
add
das
dec
int3
cwtl
sbb
fs
jns
xchg
add
adc
fsubrl
lds
lret
adc
inc
xor
rorl
jne
cmp
pop
loop
int
ret
dec
inc
daa
dec
add
jae
test
fwait
add
and
mov
pusha
cltd
in
push
in
mov
pop
pop
sbb
lock
pop
mov
test
sbb
xchg
data16
test
sbb
pop
imul
dec
pcmpgtb
mov
and
add
enter
or
mov
sbb
loopne
push
clc
sbb
lods
cld
cmp
jbe
imul
push
test
jne
add
test
fwait
or
scas
inc
adc
inc
aas
dec
aam
mov
es
outsb
cs
push
dec
repz
repz
jge
and
mov
push
xchg
push
push
movsl
cmc
in
sahf
test
mov
add
and
mov
cmp
negb
cmp
rcrl
xchg
jb
mov
sbb
jecxz
cmc
int
ja
out
or
adc
mov
clc
mov
js
jle
sahf
cmp
pop
inc
pop
push
ja
xchg
insl
pop
jmp
cwtl
sahf
repnz
and
hlt
add
icebp
add
push
adc
out
pop
cmpsb
push
adc
jecxz
push
mov
push
pop
clc
out
int
scas
and
jp
fistpll
inc
icebp
dec
stc
out
insl
mov
push
mov
leave
ljmp
pop
mov
lret
inc
mov
push
cmp
cmpsl
dec
and
sub
loope
mov
outsb
idivl
inc
dec
jecxz
add
adc
mov
je
mov
jle
popf
stc
xor
cmp
cltd
mov
xor
mov
das
xlat
push
int3
mov
pop
mov
sub
loopne
lret
enter
neg
rclb
push
loope
push
dec
push
push
jge
xorb
add
jne
or
mov
aad
ficoml
mov
push
mov
outsb
mov
gs
fsts
mov
push
mov
push
andl
mov
lods
add
dec
xor
icebp
mov
cmp
mov
push
leave
cmc
and
xchg
push
push
jne
sbb
addr16
outsb
lock
mov
out
inc
insl
push
mov
pop
insl
pop
stos
mov
int3
and
daa
jmp
xchg
in
jmp
inc
je
mov
clc
hlt
lret
cmpsb
push
inc
rolb
or
pushf
movsb
bound
ss
dec
lret
cmp
cwtl
pop
dec
xlat
loop
sub
xchg
nop
pop
icebp
inc
lods
sbb
lret
xchg
test
shlb
mov
sbb
leave
jl
pop
adc
mov
lret
testl
mov
push
add
stc
xor
lahf
jecxz
and
sti
sbb
mov
cmp
xchg
xchg
mov
setl
pop
inc
mov
xor
jmp
or
in
je
pop
scas
cmpsb
daa
fistpll
lahf
xchg
mulb
std
jbe
cmpsb
div
movsl
add
push
mov
or
mov
push
into
pop
mov
jo
pusha
repz
inc
stos
test
or
and
mov
jns
pop
xor
mov
cmpsb
pop
xor
dec
cmp
ret
dec
sahf
fisubrl
hlt
ret
mov
jb
or
mov
repz
xor
mov
mov
or
or
lret
fnsetpm(287
clc
cmp
daa
out
cmp
push
ljmp
mov
nop
mov
xchg
sarl
inc
pop
pop
jecxz
outsl
dec
test
stos
pop
adc
into
xor
sbb
adc
fmul
fsqrt
loop
adc
lret
push
lods
xchg
je,pn
push
andb
mov
push
movb
xchg
cltd
lock
movsb
cltd
fbstp
adc
inc
xchg
add
push
les
jp
adc
cmpsl
insl
imul
push
and
jmp
call
subb
pop
push
jecxz
add
and
add
insb
loopne
push
out
jecxz
push
push
xor
mov
add
shrl
add
mulb
dec
xchg
push
mov
mov
stos
sbb
jb
or
cs
jb
or
mov
repz
in
xor
xchg
outsl
jmp
xchg
cs
repz
dec
mulb
shlb
or
and
sbb
pusha
dec
ret
fildll
xchg
mov
add
cli
mov
insb
mov
popf
xor
repnz
push
inc
mov
dec
xchg
inc
adc
leave
icebp
and
xor
jecxz
or
jle
pop
or
bound
sub
inc
xchg
xor
xchg
pop
fidivrl
mov
push
xchg
adc
bound
cltd
cmp
cwtl
stos
lds
sbb
pushf
inc
and
fs
out
jl
and
fldcw
push
jg
bnd
imul
mov
add
fcmovbe
rorb
fsts
and
hlt
ret
mov
push
ja
mov
adc
dec
repz
call
and
ja
mov
test
scas
xlat
push
lcall
repnz
lods
std
sub
test
pop
addr16
iret
ret
dec
mov
xchg
pop
rcrb
mov
push
icebp
ror
add
das
push
int3
sbb
ss
into
mov
cmpb
jno
adc
xlat
int
loope
movsb
mov
push
sbb
frstor
lret
dec
in
icebp
repz
hlt
xor
xor
inc
mov
cwtl
jb
clc
das
push
scas
aaa
cld
inc
sub
lea
mov
mov
add
insb
push
mov
loopne
cmpsb
ffree
mov
or
sub
shll
in
fimull
lahf
push
dec
push
dec
pop
nop
pop
mov
xchg
xchg
dec
test
mov
dec
and
hlt
dec
scas
inc
aas
pop
xor
jns
add
pushf
mov
mov
clc
and
rcr
outsb
mov
and
imul
lock
arpl
out
mov
dec
dec
cmp
test
inc
lods
dec
pop
cld
scas
mov
jb
inc
bound
mov
rorb
incb
daa
ds
pop
inc
into
sub
mov
xor
xor
cmp
sub
xchg
xchg
and
adc
push
push
lods
add
push
hlt
pop
xchg
mov
dec
jle
popa
aas
fxch
add
out
xchg
inc
lods
loope
jl
std
adc
loope
js
pop
in
aas
jge
into
and
daa
out
adcl
xchg
sub
xor
nop
test
push
shrl
mov
sub
push
and
imul
arpl
sbb
out
lcall
int3
inc
xchg
out
jg
sub
enter
xchg
les
mov
and
cmp
bound
rclb
clc
arpl
mov
jns
pop
inc
pop
inc
out
cltd
cmp
roll
fldt
stos
inc
xor
aam
pushf
inc
mov
pop
rorb
jns
dec
sti
aam
inc
pop
fcoml
stc
leave
xor
mov
enter
out
pop
push
inc
sbb
orl
cmp
outsb
pop
and
push
lret
xchg
sub
or
ljmp
fldenv
daa
mov
or
adc
ds
xor
jbe
dec
pop
popf
repz
add
out
clc
pop
and
les
jp
test
xchg
push
add
sahf
push
loopne
jmp
inc
out
xchg
outsl
out
mov
dec
mov
iret
cmp
jecxz
in
faddl
loopne
xor
out
rclb
rclb
pop
mov
movsb
ja
stos
outsl
mov
and
jns
iret
inc
jl
leave
pop
lcall
mov
and
in
inc
push
andb
aam
cli
or
test
lahf
mov
iret
mov
std
mov
std
lods
insl
pop
sub
mul
out
add
xchg
in
mov
push
inc
pushf
les
sbb
seta
jbe
add
jbe
lods
out
icebp
cld
sub
inc
loopne
ficoml
xchg
dec
push
sub
enter
fsubr
mov
dec
popf
stc
cmp
daa
push
movl
divl
xor
in
xlat
dec
sbb
sub
xlat
aas
sbb
xlat
ss
mov
je
cmp
mov
jl
test
inc
pop
lods
fucom
in
loope
popa
les
pop
pop
loopne
jle
or
lahf
enter
sub
imul
jne
xchg
repz
inc
push
shll
neg
add
cmp
jecxz
test
pop
lds
adc
cmpsb
xchg
sarb
jns
dec
jns
repnz
xlat
xchg
dec
cli
fiadds
pusha
xchg
push
sbb
or
cltd
dec
push
inc
test
jp
sbb
pushf
imull
pop
mov
stos
jge
std
jo
ja
pop
mov
out
sbb
xchg
jp
imul
xlat
imul
xchg
lock
mov
test
cld
bnd
repnz
mov
push
cli
popa
mov
in
and
dec
les
inc
mov
dec
pushf
pop
jle
fcmovnb
mov
out
cli
pop
and
jecxz
xchg
repnz
jp
mov
pop
sbb
add
sbb
jo
jl,pt
clc
or
cmp
xor
add
aaa
dec
xchg
mov
add
cli
in
notb
adc
sub
daa
inc
xchg
fistpl
movsb
fwait
xchg
mov
scas
das
pusha
xor
mov
and
mov
dec
jbe
test
xchg
int3
mov
or
add
cmp
ja
adc
in
jge
jecxz
fstpl
fs
mov
shll
call
jge
imul
scas
dec
popa
jns
add
inc
add
test
add
xor
lock
and
mov
push
or
xchg
pop
xchg
sub
mov
lods
mov
mov
mov
rcl
dec
xchg
mov
leave
pop
popa
ss
xor
fucomi
and
sub
mov
add
add
sub
xchg
sbb
nop
lea
fwait
pop
adcb
pop
in
jo
pop
fisttps
adc
push
xor
fnstsw
xchg
and
sub
popf
pop
cmpsl
push
mov
iret
cwtl
pop
subl
or
xchg
or
push
jecxz
aas
sbb
sub
add
mov
fldenv
or
ret
push
lods
cmp
ficompl
cmpsb
fildll
shll
sbb
push
add
or
outsl
ja
pop
fwait
push
cmp
xchg
jnp
cmp
sarl
lcall
inc
ret
imull
jae,pt
xchg
les
dec
mov
mov
hlt
pop
and
add
sbb
push
ficoms
adc
inc
pusha
repnz
jne
mov
shlb
adc
stos
and
jmp
inc
test
ds
push
out
pusha
mov
loopew
lret
test
jmp
cmp
notl
ret
sbb
mov
mov
lds
inc
mov
sbb
shrl
lods
xchg
lahf
push
fadds
icebp
pop
xchg
stc
mov
jns
dec
push
imul
push
dec
mov
push
aas
dec
cmp
mov
sub
adc
mov
inc
sub
rcrb
inc
loop
lock
pop
sahf
push
subl
sbb
fxch
imul
dec
and
or
fcmovu
xor
addr16
jge
push
ficoml
xorl
inc
mov
outsl
notl
xor
cmp
mov
aad
imul
add
lock
ja
push
outsb
mov
mov
shll
fcomip
add
mov
stos
loopne
xchg
stc
ja
pop
dec
push
fidivs
push
in
jb
and
movsb
adc
push
cmpsb
imul
fistpl
mov
cld
pop
incl
dec
inc
out
test
stos
pop
inc
and
enter
xchg
push
pop
jno
adc
xchg
mov
popa
and
xchg
test
mov
shlb
fdivr
mov
dec
inc
jnp
xor
add
jecxz
pop
xor
lds
mov
cwtl
rolb
and
clc
ljmp
in
jl
mov
dec
push
dec
test
ds
mov
movsb
cli
mov
in
int
fcom
or
mov
notb
out
into
and
nop
push
iret
out
push
mov
mov
pop
aam
dec
xchg
sub
push
out
clc
shrl
stos
mov
fnsave
subb
pop
sub
mov
jg,pt
dec
jl
lock
loope
mov
pop
inc
jle
xor
cmp
sub
and
xchg
ss
push
pop
push
cli
out
and
sbb
lock
push
mov
cltd
adc
fwait
sbb
in
cltd
cld
lods
cmp
and
jmp
jb
out
mov
mov
data16
jp
insb
add
inc
iret
ud2
dec
mov
das
sarb
adc
and
pop
xchg
xor
lcall
push
and
aam
push
jns
mov
outsb
negb
gs
in
ret
push
push
enter
test
repnz
es
xchg
call
data16
xchg
mov
push
or
mov
inc
jmp
loopne
add
pop
lods
repz
outsl
mov
stos
mov
inc
stc
out
mov
jne
mov
iret
fcmovne
shlb
ret
in
push
jmp
xchg
cmp
inc
push
mov
sahf
dec
loope
in
add
cld
xor
push
push
das
pop
sarb
cmp
jbe
jl
arpl
js
icebp
mov
push
movsl
push
fmull
fnsave
outsl
mov
mov
pop
add
sbb
mov
and
fs
lret
lock
adc
cmpsb
in
mov
loope
push
mov
sbb
icebp
cmp
mov
and
cmp
test
xchg
leave
xor
or
and
lds
mov
or
test
addb
cmp
dec
cmp
jnp
cmpsl
pop
add
add
pop
jle
mov
test
rorl
push
mov
test
dec
fs
adc
std
mov
jl
xchg
push
xorl
pop
fs
xchg
or
nop
movsb
add
push
jmp
test
iret
mov
xchg
adc
ds
mov
xor
pop
out
int3
test
std
sub
fsubr
pop
outsl
mul
pop
mov
adc
movsl
cmpsb
es
mov
stc
cltd
lods
movsb
loope
in
lahf
scas
shl
and
stos
xchg
xchg
in
mov
sbb
sub
cmp
clc
sahf
pop
stc
sub
xor
jl
mov
jns
loope
or
cli
popa
cli
or
pushf
jl
sbb
inc
mov
cltd
xchg
rcl
in
cli
add
pop
jb
rcll
movsb
pop
in
cld
add
mov
lret
daa
pop
aad
in
adc
loopne
mov
sbb
stos
daa
enter
pop
xchg
fstps
idivl
pop
fs
sub
jne
and
lods
fdivrs
orb
sub
mov
push
xchg
xchg
daa
jg
pop
addl
pop
cld
dec
daa
popa
orl
cmp
sub
push
mov
bswap
pop
sub
pop
push
xchg
push
jns
adc
lret
ffree
sbb
repnz
xor
jmp
jo
dec
loopne
jbe
idivl
pop
and
cmp
adc
ja
cmpsl
sbb
pop
or
sahf
pop
mov
jo
push
movsb
mov
scas
dec
movsb
mov
lcall
jnp
adc
push
xchg
imulb
lret
dec
mov
mov
jge
and
and
daa
pop
pop
lret
loopne
icebp
mov
test
fidivl
and
mov
xor
lds
adc
loop
sti
test
add
mov
xor
aam
pusha
jne
lret
pop
mov
mov
jno
bound
sbb
inc
jge
dec
loopne
adc
xlat
mov
add
adcl
and
ljmp
mov
or
in
je
ljmp
dec
mov
xchg
inc
das
movsb
sbb
daa
sub
pop
cmc
inc
jns
sub
fcmovu
xchg
fwait
mov
xchg
mov
int3
btr
js
xchg
sub
mov
mov
into
lret
push
jns
jl
sub
fsubrp
lods
add
movsl
cmp
popa
sbb
sbb
pop
inc
push
ss
sbb
js
push
test
dec
incl
or
ljmp
sub
cmc
ja
mov
pushf
and
mov
outsl
xor
adc
mov
xor
or
leave
mov
sti
pushf
inc
insb
mov
xor
je
in
fisubrl
jbe
mov
or
fildll
std
adc
or
xchg
inc
sarb
sbb
mov
push
scas
cld
lea
and
mov
jmp
mov
push
ds
ret
ret
adcl
out
int3
push
ja
or
mov
mov
and
js
adc
rcr
fbstp
cmp
mov
sub
dec
test
dec
mov
int3
dec
inc
test
push
cmp
push
pop
or
inc
mov
cmp
xchg
enter
mov
shrb
adc
leave
xor
adc
add
add
mov
push
repnz
add
fists
into
cmp
es
int3
xor
cld
rorl
add
in
push
outsb
sbb
movsl
and
fstpl
loop
xor
icebp
cmp
cs
scas
add
mov
rorb
push
cmp
jge
or
sub
test
mov
adc
pop
sbb
lods
cmp
mov
lods
jae
inc
sub
in
decl
into
mov
icebp
call
sbb
xor
pop
fsubr
jb
jae
mov
pop
jb
or
in
push
lods
in
outsb
mov
fldl
push
or
cmp
pop
and
lods
push
adc
push
xor
in
push
loop
mov
movsl
cmpsb
setb
jl
lretw
sbb
push
adc
test
xchg
pop
inc
lods
adcb
daa
mulb
adc
pop
and
gs
sahf
outsl
mov
aas
ficomps
addr16
sarw
pop
mov
sub
insl
je
mov
cmpsb
xor
add
inc
adc
dec
add
cmpsl
cld
sbb
and
adc
dec
push
or
push
sub
loop
jg
gs
pop
xor
clc
xchg
ret
loope
popf
mov
xchg
insb
inc
jmp
adc
inc
jno
stos
adc
jb
or
cmp
sub
mov
test
or
ljmpw
icebp
insl
pop
jp,pn
mov
xor
arpl
rolb
xchg
mov
bound
sub
sbb
xchg
rcrl
jp
xchg
and
repz
decl
push
stos
mov
ret
sbb
in
ljmp
dec
daa
popa
shlb
std
dec
addb
mov
ss
in
cmpsb
imul
das
js
xchg
cmp
push
jbe
loopne
daa
add
mov
rol
ror
adc
inc
add
jo
rcrl
lcall
cmc
add
add
xchg
add
mov
add
xchg
fstl
xor
mov
mov
sbb
outsl
xor
add
sbb
xor
sub
pop
add
pushf
icebp
ja
gs
lods
cmp
int
lret
je
pop
jb
insl
mov
or
add
or
xor
lahf
lock
sbb
sub
mov
daa
jle
pop
dec
mov
loop
lret
mov
pop
fmuls
add
xchg
arpl
cmp
ret
lods
cld
out
cmp
scas
push
and
jmp
shlb
cmpxchg
or
lret
mov
jb
mov
sahf
mov
add
cmp
mov
adc
xchg
jno
xor
xchg
lret
push
je
lret
lock
add
lods
outsl
pop
pop
clc
mov
loopne
mov
rorb
or
cmp
fistps
xchg
jl
push
pop
in
andl
xchg
pop
xchg
cmpsl
test
pop
stc
aas
repz
mov
push
push
mov
cwtl
inc
cmp
pop
sbb
pushf
push
loopne
outsl
outsl
aam
inc
sub
je
cmp
mov
sbb
add
or
push
jne
inc
cwtl
push
aad
sbb
lcall
mov
push
jbe
mov
insb
cmp
stc
push
in
lock
mov
ret
sbb
lock
movsl
pusha
jl
out
and
int
int
fnsave
sub
fimuls
orl
push
inc
imul
dec
inc
pop
loope
lcall
lods
xlat
jno
pop
movsl
pop
push
dec
fcmovnu
sbb
sub
gs
pop
jnp
mov
pusha
movsl
testl
jmp
mov
adc
mov
push
mov
mov
mov
std
rcrb
fistl
popf
sbb
cmp
adc
cmp
add
mov
pusha
enter
dec
cmpsl
dec
sbb
add
inc
out
cmp
fdivrl
xchg
mov
or
push
into
inc
mov
dec
push
in
jmp
icebp
sbb
pop
sub
push
mov
sarb
pop
dec
mov
cmpsb
loop
pop
fisubs
test
inc
fscale
lret
jge
sbb
pop
add
mov
pop
int
lock
pushf
inc
adc
cli
mov
mov
lods
or
push
arpl
or
cmpsb
inc
in
addr16
outsb
mov
dec
pop
jae
enter
je
xchg
filds
test
cmpsb
add
popa
insl
xlat
pop
pop
pushf
clc
imul
loope
fisttps
nop
mov
pop
pop
sti
pop
push
subl
pop
dec
fdivs
pop
scas
out
mov
pop
and
xchg
lcall
lret
call
es
push
cmp
mov
mov
dec
shrl
adc
jb
and
sub
mov
adc
aad
inc
jmp
dec
ljmp
and
jl
std
add
xor
in
cltd
add
push
repnz
xchg
int3
mov
xor
popa
jl
loop
sbb
dec
and
cmp
cwtl
xor
adc
js
xor
dec
or
jae
popf
call
lcall
xchg
and
sbb
cltd
shl
sub
lock
add
dec
mov
ljmp
jp
lods
inc
dec
dec
mov
xchg
sbb
pop
xchg
dec
subb
cmpsl
add
jb
jg
fidivs
call
add
or
pop
sbb
ljmp
mov
mov
jg
cmp
or
cmp
or
xor
xor
mov
ljmp
jmp
inc
ret
dec
decb
lock
sub
cld
dec
adc
inc
pop
or
sbb
test
or
push
sbb
mov
enter
mov
int
fs
in
into
popa
pop
or
pop
jmp
jae
cmp
out
enter
stc
cmp
imul
int
scas
xor
or
fisttpll
xor
cs
jecxz
clc
mov
stc
sbbb
sub
push
lret
test
cmc
dec
add
jecxz
push
mov
lds
gs
jecxz
cmc
mov
into
pusha
cmp
pop
push
popa
mov
scas
jecxz
sub
dec
cmp
xor
addb
stc
xchg
or
and
and
mov
xchg
test
xchg
sbb
std
fidivrl
pop
mov
push
ret
jnp
xchg
lock
mov
jne
imul
cmp
push
sahf
sub
dec
or
sbb
jg
subb
ds
xor
and
stos
xchg
fwait
xor
push
stos
in
push
mov
inc
push
pop
aad
imul
arpl
xor
inc
ds
call
enter
cwtl
ret
mov
outsb
push
sub
mov
stc
rcl
mov
mov
push
js
jnp
add
shlb
std
test
mov
leave
mov
std
nop
rorl
outsb
divb
mov
cmp
pop
ja
lock
bnd
and
xor
sahf
fsubs
inc
xchg
pop
adc
sbb
mov
xor
push
in
xchg
sbb
scas
jbe
mov
neg
cmp
out
add
mov
mov
mov
pop
sub
movsb
dec
inc
pop
stos
in
hlt
mov
dec
mov
and
bound
es
enter
adc
push
jnp
insl
data16
and
sbb
mov
fidivl
adc
jae
xchg
popf
sub
pop
adc
int
insl
mov
xorl
ds
jg
inc
repz
jmp
sbb
xor
cmp
mov
push
sbb
xor
sub
and
divb
cmpb
hlt
jl
cs
mov
sahf
cmpsl
fdivp
lock
fwait
mov
xor
and
and
scas
mov
mov
leave
pop
mov
arpl
push
fisttps
notb
mov
jae
lcall
arpl
add
fs
add
mov
xor
in
push
aas
data16
aas
sub
clc
add
bound
mov
loop
xchg
out
sahf
lods
push
pop
mov
mov
addr16
jl
and
pop
push
or
jo
or
cmp
add
sub
push
movsb
cwtl
sahf
adc
sub
ja
cld
insb
in
outsb
xor
in
fbld
mov
push
mov
aaa
mov
out
inc
sarb
jp
ljmp
dec
popf
rcrb
cmpl
daa
imul
loopne
mov
fsubrs
orl
sub
xor
pusha
pop
adcb
lahf
or
jbe
mov
mov
and
das
jl
jg
aam
nop
lods
in
pop
clc
sarl
xor
mov
aam
jno
inc
aas
stos
in
jge
mov
enter
push
sub
mov
repz
add
mov
pop
mov
pop
ljmp
add
mov
pop
xor
jns
mov
jns
je
insb
movsl
int
jmp
pop
push
mov
xor
fsubl
dec
dec
sub
scas
ss
xor
out
leave
dec
mov
xor
les
cmpsl
mov
lahf
outsb
pop
dec
outsl
xchg
push
movsb
test
div
in
jg
or
addl
dec
js
inc
mov
insb
xchg
pop
popa
aas
daa
or
ret
cmp
mov
dec
outsb
xor
fwait
sbb
sub
add
js
jmp
xchg
and
pop
mov
adcl
push
mov
stos
in
jle
xlat
mov
dec
sbb
subl
stos
mov
adc
lcall
ja
cmpsb
mov
je
out
jb
or
push
shll
je
lret
mov
addb
or
fs
cmp
cwtl
and
sbb
loopne
test
ret
out
insb
sbb
jns
cli
xor
fwait
mov
and
cmp
xchg
jne
cmp
sub
adc
xor
dec
mov
xor
push
or
pop
arpl
dec
mov
js
sti
cmp
sahf
daa
sub
pop
sbb
int3
out
cmpsl
inc
cltd
test
add
test
xchg
adc
pop
push
jmp
mov
ljmp
ss
adc
in
test
push
mov
or
ss
rorl
xlat
leave
add
pop
mov
push
dec
jnp
sar
fidivrs
xchg
inc
dec
xchg
cs
pop
push
or
xorb
pop
lea
and
sub
pop
push
push
dec
jle
mov
xchg
popf
cmp
je
outsl
jae
push
mov
and
rcr
clc
pushf
lods
push
leave
push
xor
daa
ficoml
push
sub
out
pushf
cwtl
ja
cwtl
je
xchg
out
outsl
ljmp
pop
movsb
mov
sbb
sbb
dec
pop
loop
jb
and
sbb
iret
xor
bnd
mov
aaa
enter
aam
cmpsb
mov
fldt
js
cmp
sbb
or
add
push
and
push
xor
test
sub
ja
rclb
lcall
dec
xchg
push
pop
test
scas
xchg
repnz
xor
rcrl
pusha
jae
stos
rcr
fucomi
int3
dec
xor
cmp
jnp
fistpl
or
pop
cmpsl
jnp
shlb
shrb
jmp
xchg
and
mov
imul
lcall
test
mov
shll
movsl
iret
cli
sub
mov
jne
sbb
mov
cs
daa
jo
movsl
loop
xchg
dec
gs
inc
cld
mov
lahf
xchg
jnp
pop
sub
pop
add
stos
nop
test
mov
lret
lret
pop
adc
adc
mov
or
inc
push
add
pop
std
dec
push
cmp
shrl
lcall
cmp
icebp
fcomi
fistl
jg
ret
sub
shr
orb
sbb
pop
lahf
aas
mov
addr16
lret
cld
jbe
daa
aad
push
dec
mov
insb
push
push
and
nop
dec
mov
jecxz
fildll
or
cmp
into
mov
mov
inc
movzbl
sbb
xchg
insl
push
jb
faddl
ret
xor
adc
sbb
imul
lods
sti
or
into
add
test
mov
cmp
sub
daa
divl
mov
std
lcall
jp
nop
pop
sub
xor
sub
enter
adc
pushf
jle
cmc
mov
pop
dec
test
and
lods
insl
mov
sbb
xor
push
jo
daa
xlat
xor
jns
pop
sbb
aad
xor
inc
ss
dec
movsl
lret
aad
cs
sahf
lock
jne
and
fcompl
sahf
cltd
jp
mov
ret
xchg
inc
out
jle
sti
lret
stos
jbe
xchg
js
nop
jae
shlb
arpl
cmp
jecxz
add
pop
push
sub
or
sub
fsubl
cmp
out
mov
out
mov
mov
in
shlb
xchg
mov
hlt
iret
std
lock
mov
fidivl
inc
cmp
jl
aaa
imulb
sarl
adc
add
into
push
lods
in
inc
out
les
sbb
cmp
mulb
addl
adc
fdecstp
lret
mov
xchg
and
vmwrite
jo
xchg
xor
dec
cmp
xchg
jp
xchg
insb
fwait
dec
push
test
jg
push
std
push
repnz
inc
xchg
mov
test
aas
ficomps
lds
imul
xchg
and
or
pop
mov
cmpsb
mov
mov
in
stos
jne,pt
add
xchg
and
testl
jo
xchg
sub
fldl
scas
adc
sbb
lock
sub
in
mov
bound
lock
stc
dec
pop
addr16
or
mov
adc
jl
gs
push
inc
das
ds
into
add
shlb
imul
cmpsl
loopne
or
lret
loop
fs
icebp
cmc
or
lcall
lret
mov
xchg
xchg
fnsave
mov
ljmp
out
lcall
insb
xor
mov
jns
test
fstp
mov
xchg
mov
dec
and
neg
iret
xchg
dec
ljmp
insl
xchg
jp
push
orl
jno
pop
iret
jmp
xor
pop
cwtl
neg
stos
bound
mov
push
pop
adc
imul
add
xchg
sub
lds
stos
jl
cmp
imul
stos
inc
dec
and
lahf
jge
loop
add
scas
jno
push
pop
imul
xor
jecxz
bswap
pop
mov
loope
mov
mov
mov
push
mov
stc
adc
nop
insb
icebp
les
lcall
or
jecxz
jmp
cs
cmp
hlt
sub
push
pop
pop
pop
movsb
push
movaps
sub
fisubl
rcrl
ret
jp
int
cld
fsubrl
jae
cwtl
scas
and
add
jo
mov
xchg
xchg
nop
jae
sbb
mov
sub
mov
mov
ljmp
push
lcall
mov
cmpsb
gs
mov
jmp
cmp
cmp
sub
jo
jge
jg
jbe
dec
mov
iret
sub
xchg
popf
js
out
sbb
mov
sbb
inc
addl
pop
xchg
arpl
nop
fists
leave
int
stc
mov
ljmp
cltd
dec
pop
ret
push
jnp
add
popa
lret
jl
and
mov
sahf
jo
nop
mov
dec
rolb
fxch
mov
adc
dec
lcall
lea
movsl
cmp
mov
movsb
or
subb
adc
sahf
push
adc
pop
loopne
sub
adc
or
scas
xor
mov
out
repnz
pusha
aas
mov
or
add
cld
rclb
or
loopne
outsb
mov
ljmp
cmc
call
and
push
mov
dec
pop
push
aas
cmp
jecxz
js
data16
mov
mov
popf
sub
dec
xor
dec
or
cmp
mov
insl
aas
testl
fadds
and
sbb
lds
subl
daa
xor
cli
xchg
inc
loop
addr16
push
jge
sti
movsl
xchg
icebp
mov
addb
mov
mov
sub
push
sbb
mov
pop
je
loop
mov
lds
xchg
test
nop
mov
lea
cmc
leave
out
mov
insl
out
fisttpl
mov
push
add
add
mov
rolb
mov
lret
loop
push
jnp
pop
jnp
add
mov
test
in
insl
add
jmp
movsb
ss
lods
repz
into
cmp
or
aaa
hlt
aas
cmp
stos
push
pusha
mov
das
cli
and
push
and
mov
push
insl
dec
std
sarl
repnz
push
dec
jmp
shl
sbb
sub
loope
sub
in
push
cvtps2pd
push
jbe
fcompl
out
sub
adc
ret
push
xor
into
cmp
cmp
scas
loope
add
push
inc
dec
pop
adc
dec
cmpb
leave
mov
lock
je
pop
xor
xchg
and
mov
int
jae
add
adc
cwtl
sbbl
aam
lock
in
or
ja
push
add
inc
inc
mov
movsb
mov
cwtl
and
jmp
mov
pop
fcmovnb
mov
push
mov
mov
hlt
adc
popl
jg
ljmp
arpl
stos
cmp
lods
jmp
das
or
fsubl
mov
push
incb
test
fdivs
inc
fsubrs
sbb
and
mov
fnstsw
xor
jmp
xchg
mov
dec
aaa
test
pusha
mov
dec
mov
xorb
les
repz
out
push
dec
scas
scas
rcl
push
mov
xor
cwtl
pop
add
fidivl
pop
sahf
push
repz
bound
hlt
sbb
inc
and
jae
add
add
sbb
jp
adc
rcrb
inc
stc
iret
sbb
stos
movsl
test
mov
lods
pop
mov
mov
adc
scas
push
in
mov
js
ret
jecxz
dec
out
sbb
or
outsl
imul
adc
mov
cmp
pop
test
cmp
pop
inc
test
outsl
inc
int
mov
test
mov
mov
mov
sub
mov
jle
dec
loope
pop
cltd
lds
inc
ds
loop
cmpb
scas
lahf
add
cwtl
es
cmpsl
xor
shrl
sti
divl
adc
xchg
enter
or
out
mov
addr16
or
mov
mov
lock
push
jno
repz
push
sbb
arpl
pusha
mov
sbb
mov
cmp
jg
push
aaa
mov
fadds
test
sub
cltd
sarb
mov
push
adc
xchg
in
mov
inc
push
jecxz
mov
push
xchg
cmc
stos
jo
mov
lcall
pushf
mov
jl
ds
je
dec
cmp
sbb
mov
mov
pusha
movsl
cmpl
ss
stc
or
dec
rolb
dec
cltd
ljmp
icebp
inc
test
leave
js
stc
rolb
ret
stos
cmc
jp
mov
jns
hlt
es
std
scas
movsl
mov
ljmp
or
scas
icebp
hlt
enter
mov
cmp
sbb
bound
add
sbb
mov
push
push
pop
hlt
mov
test
dec
fbstp
add
shlb
mov
xor
inc
fs
pop
sbb
xchg
xlat
sub
jecxz
pop
shlb
sub
xchg
cmp
and
mov
loopne
or
push
xchg
add
dec
inc
into
pop
xchg
sbb
mov
add
jmp
in
jae
test
cld
vpmaddubsw
pop
dec
or
adc
xchg
jae
push
movsl
mov
pop
dec
jl
leave
add
int
cmpsb
add
push
mov
mov
rclb
icebp
ljmp
aaa
mov
es
or
mov
jmp
jnp
jecxz
hlt
jns
stos
push
insl
lods
xchg
mov
imull
cmpb
push
notl
mov
mov
fidivs
in
xor
call
out
je
hlt
cltd
sbb
mov
es
bound
xor
xchg
stos
inc
or
dec
mov
and
vminsd
push
call
stos
xchg
in
push
add
pop
lock
mov
dec
lods
dec
lahf
mov
test
lret
adc
aaa
fildl
decl
push
mov
xchg
adc
cmp
sbb
jl
mov
rcrl
pop
test
and
mov
cmpsl
in
sbb
cmp
ret
arpl
loop
loope
fisubs
insb
mov
outsb
mov
pop
daa
jno
xor
mov
aad
cwtl
test
imul
dec
push
push
lret
or
mov
arpl
lcall
pop
pop
adc
hlt
neg
push
aam
sub
mov
add
cmp
sahf
cld
daa
js
iret
pop
and
cmp
push
in
test
sysenter
in
aad
out
xor
rcrb
jnp
cmp
fistl
pop
and
lock
dec
pop
xchg
rolb
fiaddl
sti
dec
jne
test
sbb
test
xchg
jno
in
and
xlat
mov
lds
sub
pusha
das
cli
fxch
out
out
pop
add
inc
sbb
and
insl
and
cmp
in
in
arpl
mov
fnstcw
xchg
ljmp
jp
loop
sar
aaa
shll
scas
jg
ds
pop
stos
ljmp
cmp
mov
xor
outsl
xchg
cmp
mov
rcrb
mov
and
xchg
sub
cwtl
imul
jb
xor
test
mov
sbb
repz
sbb
fs
iret
adc
int3
cmovnp
jp
fs
cmpsl
adc
movsl
pop
mov
jmp
and
pop
or
sub
cmp
sbb
mov
adc
ret
cmp
loop
push
aaa
mov
jo
jb
lock
lret
test
imul
idiv
test
xchg
or
add
mov
jne
or
cmp
push
out
pushf
sbb
xchg
call
dec
fidivrl
jg
xchg
adc
repz
jp
lret
repnz
adc
adc
mov
and
fnstcw
div
sbb
cld
mov
adc
jo
in
cmp
xadd
dec
fisubl
stc
pop
xor
dec
loopne
adc
jns
aad
sti
mov
pop
sbb
adcb
jmp
jns
in
test
fdivs
push
mov
in
pop
fst
std
fisubs
in
dec
pop
push
and
dec
stos
dec
sarb
jae
sub
jo
mov
lock
inc
stos
lret
out
jbe
nop
inc
ret
iret
xor
xor
adc
dec
adc
sti
into
sbb
cmp
fwait
testb
or
in
and
xchg
into
aad
cmp
cld
or
mov
in
push
mov
imul
cmp
add
and
adc
add
jae
push
fldcw
mov
fistl
lods
mov
sahf
repnz
xlat
xchg
mov
sahf
mov
pop
mov
mov
push
mov
mov
mov
sbb
or
mov
xor
in
cmc
sub
push
fildll
andl
sbb
jbe
sub
roll
inc
sub
test
ljmp
jecxz
inc
adc
cs
xor
cli
sti
mov
cmp
or
mov
cmp
test
imul
xchg
xchg
push
xor
push
xor
mov
push
mov
push
dec
icebp
loopne
jo
sub
cs
loope
sti
xchg
shr
or
mov
mov
into
cli
call
iret
pop
shlb
lcall
in
xor
sub
mov
cmp
or
inc
push
in
sub
enter
jge
les
cmp
cmpsl
pop
jno
xor
notb
and
xor
pop
mov
hlt
bound
pushf
paddsb
scas
cmc
fucomi
std
cmp
popa
cmp
mov
sub
lea
out
cmpsl
pop
sbb
xchg
das
into
pop
add
ffree
int3
into
mov
lret
mov
les
push
fmulp
sub
jno
gs
cwtl
outsb
push
bound
data16
cwtl
cs
arpl
xlat
mov
andb
mov
cld
cmc
dec
xchg
jnp
jl
jb
or
push
cs
mov
xor
push
xchg
aas
sbb
pusha
ja
sbb
add
repz
mov
push
aas
mov
mov
sti
ja
xorb
sub
fsubs
and
cmpsb
daa
inc
sub
mov
adc
cmp
cmp
xchg
xor
pop
add
push
jmp
lea
lcall
adc
cli
je
repz
rcrb
xchg
decl
sbb
filds
mov
xchg
fwait
rcrb
mov
sbb
mov
xor
call
or
incl
mov
xor
idivl
xlat
and
pop
dec
pop
cmp
sub
fcoml
lea
movsb
mov
sbbl
movl
das
pop
xor
aas
int3
imulb
loopne
or
cmp
xorb
sbb
mov
in
pop
sbb
push
test
mov
cmpsb
lea
dec
or
scas
dec
lret
push
xchg
mov
mov
mov
inc
pop
ret
ficoms
mov
inc
push
pop
push
add
and
sub
pop
nop
notb
movsb
enter
jae
xor
mov
mov
enter
jo
mov
mov
cltd
push
aad
xchg
in
subb
cltd
test
jne
inc
imulb
or
add
jb
lods
cmpsl
clc
mov
push
mov
cmp
nop
and
pop
cmp
nop
aam
mov
enter
in
mov
xor
ljmp
jle
push
xor
aam
test
jnp
and
dec
mov
push
adc
aam
addr16
and
xchg
push
push
push
sbb
cs
push
push
xchg
daa
xchg
pop
mov
lret
or
lea
sbb
mov
cs
lea
sub
insl
pop
adc
scas
pop
adc
xchg
insb
pop
jmp
bound
scas
in
nop
jg
sub
fcmovbe
inc
dec
pop
inc
lret
ret
pop
shlb
jmp
mov
adc
cltd
pop
cmp
push
fcoml
xor
movsb
jnp
sbb
movsb
div
xchg
xor
rcrl
js
mov
scas
ret
mov
add
jns
cmp
sub
stos
push
sub
divb
xchg
icebp
push
add
jno
xor
rolb
lods
mov
or
hlt
pop
aaa
and
mov
roll
movsl
std
pop
dec
push
jge
jno
imul
jg
data16
fs
out
mov
fs
stos
insb
aaa
mov
sbb
adc
mov
fldl
popa
fnsave
pop
lods
idivb
push
pop
mov
inc
cmp
push
lods
shlb
aaa
movsb
or
int3
mov
push
mov
push
mov
sub
and
pop
pop
adc
xor
or
and
scas
lcall
push
adc
and
pop
pop
push
fwait
mov
pushf
dec
inc
fs
dec
and
addr16
insb
insb
call
and
cmpsl
or
scas
push
push
sbb
sub
dec
jmp
lahf
jle
push
aaa
jns
sbb
cli
inc
mov
bound
and
lret
lods
hlt
sbb
adc
lock
icebp
adc
ss
int
sub
lret
lret
inc
cltd
bound
xchg
dec
add
mov
insl
into
loope
jne
idivb
scas
add
mov
shlb
imul
push
and
daa
mov
fnsave
jp
inc
jecxz
cmpl
and
cmp
in
mov
cmpsb
sti
jp
mov
adc
sub
or
cs
int3
scas
xchg
push
lcall
sbbb
mov
xchg
mov
enter
ret
in
inc
ret
jbe
mov
mov
push
lcall
jmp
bound
xor
sahf
pusha
add
fwait
movsl
ljmp
cmp
jecxz
dec
fdiv
push
lods
mov
mov
push
pop
and
ljmp
mov
mov
int3
lcall
dec
out
sarb
and
fs
sub
mov
das
popf
adc
movsb
mov
add
nop
lret
cmp
and
ss
mov
sbb
arpl
nop
scas
add
jbe
insl
or
adc
fwait
mov
dec
mulb
fcmovb
daa
fdivrp
or
stc
nop
jge
push
push
add
or
loopne
gs
adc
dec
sbb
pop
stc
insl
jmp
scas
push
or
sub
or
cmpsb
fbstp
lcall
or
xor
addb
mov
fwait
dec
mov
fstpl
in
clc
sub
fwait
mov
imul
adc
insl
pop
out
ds
lds
addr16
scas
sub
and
dec
js
cmp
in
push
fisubs
add
pop
lahf
add
inc
xor
insl
fnstsw
xchg
movsb
inc
add
mov
divl
rorb
int3
push
or
inc
pop
mov
cmc
ljmp
xchg
xchg
jmp
pop
aad
iret
or
cltd
pop
imul
icebp
nop
push
adc
pop
sub
ret
fcmovnu
mov
rorb
pop
mov
test
push
sahf
mov
fs
fstpl
rclb
in
pop
push
push
and
cmp
add
ficoml
push
push
dec
shlb
mov
test
xor
pop
mov
cltd
dec
test
pop
pop
sbb
mov
inc
sub
mov
ficomps
aaa
xor
fcoml
bound
in
notl
enter
dec
cli
pop
sbb
push
cmp
and
out
jmp
xchg
mov
orb
pop
addb
mov
sub
ret
orb
inc
std
inc
arpl
jne
xacquire
pusha
push
cmp
jbe
repz
adc
lret
shll
lock
jmp
sahf
inc
lret
mov
mov
in
filds
adc
push
jae
cmc
hlt
test
or
inc
lods
adc
and
adc
clc
cmp
ficoml
and
xchg
jo
fistl
outsb
leave
and
jb
mov
or
mov
mov
icebp
xor
jp
mov
or
jl
in
pop
inc
push
pop
dec
xchg
adc
xchg
mov
sub
fcmovnbe
xor
or
xchg
mov
add
adc
fadds
cmp
movsb
jl
or
sub
push
popa
mov
adc
jno
mov
arpl
insb
pop
pop
loopne
sub
xchg
mov
push
and
add
js
mov
add
mov
cmp
imul
inc
dec
inc
sub
and
andl
cmp
fxtract
orb
test
jb
push
push
xchg
aad
insb
pop
adc
std
mov
rcrb
ror
pop
adc
mov
xchg
mov
rcrb
or
sub
fstl
add
cmpl
mov
mov
dec
or
add
xor
int3
dec
adc
push
or
fs
add
shll
stc
mov
lock
xchg
jle
lock
roll
psubb
je
iret
imul
subl
pop
jo
stc
mov
dec
sub
push
push
push
adc
or
xchg
lret
test
ds
in
add
pop
mov
jbe
loope
clc
xchg
lret
insb
pop
fcoml
lret
and
jl
scas
sub
lock
shr
add
push
mov
mov
push
ret
hlt
or
xchg
iret
leave
cltd
sbb
push
adc
mov
push
and
inc
adcl
jnp
cli
ja
or
sub
xchg
sub
sahf
notl
jg
jb
es
imul
pop
fmuls
xor
loope
bound
lret
jnp
jp
mov
adc
push
pop
xchg
dec
hlt
add
mov
movsl
out
ja
xchg
incl
jg
bswap
inc
arpl
cmp
and
inc
or
out
xor
or
loope
arpl
and
mov
mov
sub
stos
movsl
pop
or
adc
inc
fstl
mov
shr
pop
pushw
insb
jl
or
xor
cmp
xchg
fsubl
cli
pop
je
data16
inc
inc
faddl
sbb
mov
push
jne
movsl
icebp
fsubrl
pop
sub
mov
jbe
add
call
or
into
movl
jb
leave
xor
dec
cmp
adc
fisubrl
lds
out
or
add
sbb
inc
pop
pop
jmp
or
fucom
sti
push
aad
fwait
in
clc
mov
jl
cmpsl
and
and
cmp
push
aaa
jne
add
pusha
xor
jl
lret
mov
aam
mov
mov
imul
imul
dec
repnz
jge
jg
adc
imul
jcxz
cwtl
push
sahf
mov
stos
push
dec
movl
ret
out
pusha
cmp
push
push
inc
fcmovnbe
mov
inc
js
repnz
daa
cmp
ljmp
cmp
in
test
mov
fistps
rorb
xchg
pushf
por
iret
mov
es
mov
push
dec
gs
fiadds
adc
xchg
stc
adc
ds
insb
jo
mov
jno
jno
cmc
adc
mull
lret
fsubrs
out
inc
add
popf
cs
ret
pop
lret
xchg
hlt
cwtl
in
stos
inc
push
orb
cli
lret
push
mov
arpl
add
xchg
add
adc
shlb
arpl
or
mov
dec
hlt
sbb
push
cli
mov
xchg
inc
xor
arpl
lock
push
push
gs
sbb
mov
enter
mov
in
rolb
cmp
ficomps
test
aad
dec
or
xchg
cmpsl
add
aas
sbb
pop
jne
jp
sub
mov
xor
adc
fs
push
and
push
clc
popa
mov
orb
push
repz
or
lock
pop
adc
adc
inc
loop
cmp
loope
pop
sub
aaa
add
cld
mov
or
cmp
out
jge
jns
sbb
aam
sub
out
pop
fsubrl
cld
mov
bound
cld
jg
test
mov
int3
aas
xchg
cmp
test
mov
mov
lock
out
pop
movsl
orb
shrl
imul
int3
sarl
out
inc
in
nop
mov
mov
inc
idivl
xchg
jbe
dec
and
or
int
push
repnz
and
push
adc
leave
cmp
jbe
mov
mov
mov
cs
dec
gs
pop
cmp
sub
cwtl
sbb
das
dec
ror
rorb
inc
mov
or
call
inc
repnz
mov
mov
dec
pop
adc
stos
movl
test
rcr
idiv
and
rorl
or
aaa
or
movsb
jns
sbb
ss
jecxz
push
std
outsb
jle
mov
jmp
xchg
inc
cmpsl
fisubs
or
jl
pop
scas
xchg
inc
or
daa
mov
dec
arpl
cmp
fsubl
xchg
mov
fcoml
hlt
xorl
jnp
jnp
mov
iret
add
sub
xchg
cmp
addr16
inc
xor
cmc
stos
roll
orb
iret
popa
xchg
push
fiaddl
mov
fldl
sbb
cmp
cmp
outsb
lret
and
lret
daa
imul
das
bound
stos
addb
dec
pop
jle
push
add
xor
es
jo
leave
cli
sbb
stc
pop
jmp
push
jle
sbb
pop
call
dec
popf
in
xchg
insb
jmp
pusha
add
mov
repz
or
dec
sub
add
cld
aaa
adc
cmpsb
add
push
push
pop
mov
add
xor
pop
push
pop
neg
mov
inc
add
xor
fcomps
mulb
jecxz,pn
pop
jae
jmp
pop
mov
cmp
loop
adc
mov
push
dec
fs
ljmp
aas
insb
xchg
mov
sbb
ja
rolb
sub
popf
mov
lods
cwtl
sbb
dec
cmpb
sbb
lods
mov
popf
scas
inc
loop
mov
aad
and
leave
pushl
frstor
call
jae
mov
cmp
add
mov
and
cmp
ret
inc
out
push
push
pop
es
fwait
js
dec
movsb
push
jns
inc
dec
lcall
clc
pop
dec
ret
pop
daa
mov
es
call
jns
inc
and
sub
loopne
imul
ja
stc
inc
mov
imul
xchg
outsb
sbb
int3
pop
and
out
mov
pushf
sti
mov
fstpt
or
jo
lods
sub
fadds
ds
xchg
data16
fcoml
pusha
shrb
iret
popf
mov
or
mov
xor
push
push
aam
and
or
sbb
push
lcall
push
mov
and
jle
add
rcrl
xchg
fildl
jne
pop
les
mov
jns
adc
shlb
mov
mov
in
fnsave
imul
lahf
xchg
jmp
bound
inc
jo
dec
int
sarb
or
cmpsl
jnp
mov
lahf
xlat
push
lock
ret
pop
mov
flds
xor
bound
negl
rorl
stc
push
pop
sbb
mov
ljmp
sub
lar
pop
push
lret
lock
cmpsb
mov
nop
loopne
sarl
jnp
xor
push
stos
xchg
lds
inc
test
adcb
adc
jb
divb
mov
sbb
in
in
fcmovne
inc
sub
push
lcall
xor
test
lret
sbb
and
lcall
adc
cmpsl
push
xchg
mov
fwait
or
iret
ds
mov
out
mov
enter
xor
xor
mov
into
jns
adc
xchg
mov
mulb
xchg
test
divl
shl
in
push
js
int
popf
insl
and
aaa
jp
fwait
push
xchg
jb
out
mov
je
in
xor
in
sub
ret
sub
adc
in
sbb
dec
mov
cmpsb
iret
lret
cltd
and
xchg
sub
pop
cmp
aam
xchg
and
mov
xchg
lret
and
insl
daa
loop
add
add
lods
jae
push
aad
push
mov
stos
push
push
xchg
jle
xlat
sub
movsb
pop
mov
cmp
fsubrs
push
je
lret
out
sahf
lds
movsb
and
sbb
mov
daa
jle
xchg
add
dec
bound
lret
out
mov
mov
insb
popa
mov
jg
out
mov
and
or
pusha
and
push
je
decb
loopne
cmp
sbb
jmp
in
jg
xor
in
outsb
fsubrl
sub
sub
loope
xchg
aam
inc
std
dec
or
mov
adc
pop
idiv
mov
orl
lock
lods
bound
test
xor
sbb
int3
xor
inc
adc
mov
mov
dec
mov
mov
sahf
loope
clc
sub
cs
cld
adc
pop
xchg
es
push
mov
and
add
das
mov
adc
pop
orb
xchg
sbb
push
pop
out
iret
mov
cmp
aad
xchg
ret
and
subb
lods
push
and
jae
movsl
push
and
xlat
pop
dec
insl
ret
jmp
jbe
cli
aas
out
jae
add
adc
jnp
mov
pusha
movsb
xor
dec
push
cli
mov
test
and
stc
push
nop
cwtl
fdivl
test
cmp
pop
jl
movb
loop
add
dec
sbb
leave
sub
lock
out
cmp
pop
movsb
pop
lcall
add
pop
and
push
mov
jmp
dec
add
mov
fisubl
xor
movsl
repz
iret
cmp
mov
jbe
push
mov
xor
adc
sub
js
mov
les
push
movb
jmp
mov
sbb
adc
pop
mov
sub
adc
aaa
mov
mov
jns
or
push
cmp
dec
adc
sarl
inc
dec
adc
jns
mov
cmp
mov
lea
lods
lods
mov
outsl
cltd
adc
pop
xlat
sbb
push
pop
inc
mov
outsb
jl
xor
push
mov
cmp
mov
mov
mov
push
mov
jge
jge
ret
xor
xlat
mov
shrb
std
cmpsl
enter
test
mov
sti
out
cmp
cmp
xchg
loope
fs
mov
push
movsb
xchg
sub
stc
xchg
push
push
adc
scas
dec
rclb
shlb
insb
ja
fisubrs
js
xor
dec
enter
shl
sbb
movsl
jl
mov
in
xchg
scas
jp
dec
jo
add
push
cmp
repz
int
inc
pop
mov
scas
jecxz
repnz
sbb
ljmp
stc
int3
mov
pop
pusha
pop
in
popf
mov
cmpsl
sahf
mov
shl
test
push
jecxz
adc
lahf
sub
jle
mov
stos
mov
inc
or
sar
jnp
jg
adc
ret
lahf
xchg
aas
imul
pop
sub
in
xor
test
imul
mov
dec
xchg
adc
stc
inc
xor
fisubs
jl
sub
cmpsl
xor
mov
push
inc
insb
pop
jge
cmpl
cmp
push
and
or
push
in
sahf
add
inc
cmp
jb
jno
cli
xor
negl
movlps
jle
les
adc
mov
aam
and
mov
orl
jo
and
add
loopne
int3
mov
rolb
adc
test
arpl
popf
shrl
int
dec
in
mov
movb
rcrb
jo
fisubs
or
mov
mov
int3
add
mov
jl
in
bound
ret
insl
mov
jmp
jne
and
mov
push
imul
shrl
jbe
pop
je
adc
int3
push
xchg
push
fwait
adc
or
out
mov
cs
je
and
mov
scas
es
out
dec
and
cltd
repnz
add
xchg
cli
dec
scas
dec
jbe
ficoms
movsl
aas
cmp
jmp
icebp
inc
popf
sbb
adc
mov
add
insb
insl
icebp
test
xchg
push
mov
daa
mov
rcrb
push
sub
ljmp
pop
icebp
adc
jl
popf
test
add
pop
dec
dec
jo
fcmove
fisttpl
pop
xchg
dec
pop
mov
cli
mov
stos
push
stos
add
push
outsb
scas
lcall
mov
xor
mov
jno
mov
mov
push
jg
clc
push
cmpsl
mov
popa
fdivrl
inc
mov
je
sbb
pop
mov
and
shl
cmp
sbbl
push
jns
leave
adc
jns
xchg
cmc
mov
mov
or
sarl
sbb
jecxz
push
xor
fs
pop
shlb
xor
sub
jae
fwait
push
xlat
test
cmp
adc
mov
mov
fidivrs
shlb
or
pop
add
jl
pop
sarl
jns
pop
sub
jb
jmp
fistpll
jns
mov
pop
sbbb
pop
cmp
mov
lock
repnz
rcr
roll
mov
rcrl
mov
xchg
cmc
push
xchg
mov
xchg
cmp
ret
jne
insb
push
cmp
pop
test
push
mov
sbbl
cmc
adcl
fisubrl
cmc
jp
cmp
jno
pop
dec
sub
pop
add
adc
or
mov
mov
pusha
and
sub
lods
aad
add
arpl
and
jmp
sub
mov
cmpl
std
mov
mov
xchg
fisubrs
fwait
mov
jns
xlat
mov
sbb
or
repnz
out
mov
sbb
insb
xchg
xor
loopne
dec
dec
sbb
dec
sub
lds
add
jl
lret
imul
pop
jno
add
sbb
sbb
mov
dec
pop
daa
mov
inc
out
push
aaa
and
lods
dec
jle
add
ljmp
sub
movsl
mov
fwait
push
pop
mov
sbb
cmp
repz
push
loopne
jl
or
cmpsb
lcall
psubusb
mul
cmp
cmp
pop
and
aad
mov
lret
add
mov
jnp
and
out
mov
xchg
inc
and
xor
inc
mov
inc
gs
out
cwtl
rcll
in
std
dec
inc
sahf
or
std
in
sub
test
mov
mov
outsb
dec
insb
cmp
dec
test
gs
fnsave
mov
adc
rorb
mov
cmpsl
jno
push
inc
push
call
lock
int3
push
test
inc
cs
rclb
ret
adc
inc
lahf
aaa
imul
pop
cli
xor
push
pop
in
ret
aaa
jae
cwtl
push
nop
sub
movsl
sti
andb
outsl
push
insb
cmp
sbb
in
sub
sub
pop
xchg
sub
or
sti
sub
cmc
cmp
jg
pop
dec
push
mov
push
push
dec
inc
add
lock
add
stc
cmp
push
jo
leave
jbe
frstpm(287
or
mov
loope
mov
mov
adc
and
push
jecxz
je
cmp
pop
cmp
mov
iret
ljmp
addr16
jp
inc
jbe
ret
jnp
mov
push
jns
mov
divl
pushf
inc
xchg
push
and
xchg
jmp
cld
inc
sbb
cmp
mov
add
ja
xor
sub
aas
mov
add
xchg
jbe
mov
mov
cmpsb
lret
popa
mov
dec
sub
mov
adc
push
inc
adc
push
push
add
das
ffreep
sub
push
popa
mov
jecxz
pop
inc
xor
test
xchg
and
mov
hlt
scas
lock
gs
rcrb
jno
inc
gs
fisttpll
cmp
xchg
fwait
xchg
leave
sbbl
pusha
in
xor
mov
rolb
stos
iret
into
pushf
push
lret
clc
lcall
dec
pop
test
adc
adc
test
dec
dec
inc
inc
sbb
mov
leave
push
dec
aam
lahf
xsha1
cmpsb
or
incl
or
sarb
call
stc
adcl
cmp
ds
pop
clc
sbb
inc
push
aad
mov
inc
pop
sub
dec
aaa
and
sbb
in
xchg
xchg
pop
cmp
cmp
scas
js
jp
xlat
test
enter
inc
aam
ljmp
hlt
push
jno
imull
inc
stos
loop
adc
xchg
jge
lods
stc
into
orl
mov
mov
enter
inc
lret
mov
xorb
add
and
sbb
pop
in
js
fists
dec
mov
mov
or
add
jge
aas
leave
es
stc
sahf
mov
mov
inc
scas
sub
inc
lock
lods
sub
ds
std
repnz
cld
enter
call
into
pop
scas
imul
stos
dec
in
test
mov
incl
push
cmp
cmpsb
lock
xchg
lcall
sub
pop
scas
jnp
mov
int3
xor
sub
rcll
aas
aad
cmpsb
lods
sti
mov
dec
xor
pop
add
mov
sub
push
jae
sarb
enter
sub
or
push
mov
test
filds
int
rorl
mov
fs
or
cmp
or
adc
cmp
orl
push
adc
xchg
push
xchg
push
imul
stc
dec
in
cmc
fisubrs
roll
add
sub
popa
push
or
xchg
dec
cmp
ds
push
sub
push
jae
cmp
repnz
mov
mov
or
xchg
test
clc
or
push
rorl
dec
test
test
push
aas
scas
mov
arpl
xor
mov
dec
sbb
fmuls
leave
mov
dec
dec
lds
pop
pop
test
rcl
sbb
dec
sub
test
inc
pop
jo
mov
lds
pop
jmp
xchg
cwtl
pusha
jecxz
lods
add
jl
xchg
push
loopne
hlt
mov
clc
das
jns
xchg
repz
mov
int
xchg
in
adc
inc
scas
dec
or
xchg
dec
data16
fwait
jecxz
push
xor
sbb
jecxz
lahf
ret
jbe
inc
sbb
pop
pop
add
lret
xchg
stos
sub
sub
out
scas
int3
mov
in
sbb
adc
stos
sub
repnz
mov
rol
cmp
sti
scas
xor
dec
mov
aam
in
aam
popa
loope
jbe
cmpsb
xor
imul
fnsave
sub
mov
adc
cmp
inc
fimuls
jl
cmp
jge
xor
mulb
and
xchg
outsb
aad
jecxz
push
fstpl
loope
adc
xlat
jmp
lock
xlat
js
inc
xor
jge
int3
addr16
xchg
cmp
outsb
out
inc
iret
out
clc
addb
clc
test
jne
aaa
cmp
into
popf
or
add
movsl
inc
mov
fs
push
push
add
rclb
sub
fucomi
mov
mov
pop
test
pop
es
mov
test
mov
and
mov
loop
out
mov
popa
cmc
pop
push
mov
bswap
pop
push
ret
or
in
pop
pop
lock
push
scas
pop
xor
stc
das
add
aaa
dec
mov
scas
xchg
orb
push
mov
dec
or
test
imul
inc
insl
inc
pop
inc
xchg
mov
lret
adc
jae
sbb
xchg
cltd
push
sbb
xchg
adc
cmp
sbbl
insl
pushf
cmpsl
sbb
jmp
call
pop
add
mov
inc
sub
xchg
pop
jb
push
mov
enter
sarb
push
mov
add
scas
and
xchg
mov
sbb
xor
popa
notl
insb
pusha
fdivrl
data16
mov
inc
push
adc
and
std
mov
sbb
adc
scas
jns
stc
xchg
neg
xor
dec
mov
sbb
popf
ds
sbb
pop
stos
leave
cwtl
pop
lods
sti
push
push
mov
pushf
decl
fsubs
daa
iret
push
ds
out
ss
rcl
shrl
cld
jl
mov
sub
loope
hlt
int3
mov
test
xchg
add
sub
xchg
xor
cs
push
jb
sub
cmp
inc
adc
sarb
pop
mov
pop
push
rcrl
je
mov
xor
outsl
and
mov
shll
cmp
pop
push
ret
sarb
das
pop
sti
gs
lcall
je
add
sub
xchg
dec
mov
pop
mov
jle
stos
lret
cmp
sub
jb
mov
pop
jmp
or
cmpsb
lock
icebp
jg
mov
push
xchg
push
adc
or
xchg
jno
mov
leave
ja
int3
sbb
in
cmp
mov
stos
fcoml
imul
cmpl
sub
cmp
leave
push
push
lcall
sbb
aam
jbe
aam
mov
sbb
push
xchg
xor
insl
sahf
test
xchg
outsl
push
shlb
sub
aaa
jne
lea
pop
mov
setg
nop
mov
mov
add
daa
js
xchg
fisubl
cltd
fwait
jae
repz
or
mov
movsl
dec
fidivl
loopne
jge
cmp
xchg
stos
imul
ljmp
lret
mov
out
mov
clc
popa
in
hlt
adc
pop
test
test
xchg
xchg
insl
and
jmp
out
push
sbb
daa
xchg
mov
shlb
into
aad
lret
mov
rorb
mov
mov
inc
aam
int3
punpckldq
cmpsl
cmp
add
cmp
dec
pop
mov
idivl
xchg
sub
dec
scas
inc
lods
aam
sbb
jge
and
mov
xchg
int
inc
xchg
fildll
xchg
cmp
sub
mov
mov
dec
jmp
mov
cmp
inc
cmp
jecxz
sub
sbb
stc
arpl
aas
xlat
push
andb
jns
xchg
stos
shlb
adc
and
loopne
inc
pop
pop
push
loopne
cmc
aam
int
xchg
jne
sbb
dec
scas
or
adc
mov
fs
or
cld
xchg
addr16
xorb
outsl
test
fwait
out
cmpsb
loope
shl
jle
test
daa
pop
xchg
mov
push
lahf
rcl
pop
dec
push
xchg
js
dec
rsm
bound
mov
xor
inc
ja
xor
mov
xchg
dec
outsl
push
jb
stos
fmulp
sbbl
aas
bound
in
lret
push
out
adc
lods
xchg
sahf
das
mov
dec
cltd
icebp
lret
icebp
push
imul
in
test
xchg
sub
stos
loope
std
insl
mov
jb
stc
add
cwtl
ficomps
call
sbb
sub
push
xchg
mov
insl
inc
testb
mov
add
sub
cmp
jnp
fadds
lret
or
mov
or
scas
roll
sub
stos
pop
sbb
pushf
pushf
sbb
ret
orb
mov
inc
xchg
cli
jecxz
mov
ss
out
xchg
lcall
lcall
mov
mulb
sbb
ret
imul
cmp
cwtl
call
jmp
leave
adc
fisubl
shrl
jle
adc
pop
inc
cmp
fisttpll
inc
into
lods
push
cwtl
add
shl
clc
daa
mov
into
subb
add
xchg
std
aam
movsl
out
test
aam
pop
jmp
cmp
jae
xchg
dec
dec
fsub
xor
subl
ss
cmp
xor
sub
ja
jmp
test
std
cmp
inc
pop
mov
xchg
xchg
arpl
mov
int3
fxch
ljmp
aad
rcr
xchg
loop
imul
pop
push
les
pop
rclb
add
std
stos
fucomp
dec
pop
arpl
push
dec
sub
push
mov
dec
jns
das
add
lods
ds
jg
in
mov
in
or
rcrl
pop
or
je
gs
adc
testl
adc
shll
xchg
loopne
and
push
dec
xchg
mov
in
sti
sbb
bound
aam
mov
xchg
jnp
dec
inc
add
lea
fdivrs
xorl
push
loop
or
dec
xchg
inc
mov
in
mov
xor
adc
cmpsb
icebp
js
subl
insl
lea
das
rcrl
into
fdivs
mov
cmp
dec
es
adc
aas
jp
popf
jg
mov
stos
stos
push
mov
mov
mov
sub
sub
push
sub
xchg
mov
insb
cli
dec
dec
ret
movlps
popa
imul
ljmp
sahf
and
leave
sbb
rcrb
mov
inc
jmp
addr16
cmc
out
addb
mov
ljmp
mov
in
and
loop
and
pop
push
pop
dec
das
mov
push
mov
dec
mov
adc
cmc
dec
push
xor
mov
stos
add
sub
loope
pushl
call
push
test
adc
pop
adc
rcll
push
outsl
xor
adc
jnp
sub
xor
ret
adc
mov
outsb
add
in
cmpsb
repz
mov
scas
pop
pop
sbb
cld
daa
mov
test
js
in
adc
xchg
ja
inc
jne
lret
hlt
sub
sub
inc
addb
sbb
adc
sarl
inc
scas
and
mov
in
lods
sbb
inc
and
aaa
repz
sbb
dec
cmp
sbb
std
rol
or
pop
lock
xorl
dec
aad
jnp
xor
inc
out
fstpt
dec
lcall
pop
push
mov
adc
jge
mov
dec
add
push
mov
and
insl
jmp
cs
insb
add
cmpsb
xor
loopne
mov
push
out
leave
cs
push
cmp
jge
jnp
xorl
imul
sub
pusha
pushl
or
movsb
xchg
sbb
sbb
add
outsb
sbb
push
dec
nop
mov
pop
jg
int3
lret
fldl
imul
lock
xor
dec
lea
mov
jo
sub
inc
xchg
add
fmuls
stc
inc
inc
cli
mov
testl
stc
lcall
adc
out
int3
dec
dec
mov
testb
test
call
pop
mov
loope
ds
rcl
xor
aas
jae
fiaddl
int
push
test
pop
adc
cmp
in
dec
cwtl
fidivl
inc
mov
xchg
mov
xchg
xor
mov
sbb
mov
xor
lock
test
push
push
push
cmp
cmp
mov
popa
rclb
out
cmpsb
dec
in
add
push
sarl
call
cmc
int
cmp
cmc
push
xchg
mov
ret
daa
fsts
cmp
push
es
clc
shrb
jecxz
jne
call
hlt
andl
cmp
stos
xchg
popf
and
leave
mov
push
add
popf
gs
jno
mov
jle
jle
ret
inc
fs
push
xor
pop
cmp
cmp
mov
inc
push
mov
sub
sub
imul
push
pop
das
adc
negb
movsl
mov
inc
cmp
out
adc
xchg
or
aas
in
movsl
mov
ss
mov
xorl
loop
pushf
inc
nop
andb
aaa
cmp
and
es
popf
xor
pop
adc
sbb
in
push
inc
int
shlb
mov
xor
xor
inc
sarb
pop
and
dec
push
add
sub
or
mov
jmp
mov
dec
sbb
cmpsl
flds
popf
add
pop
inc
outsl
lahf
xorl
test
push
pop
push
cmpsb
jbe
mov
ja
push
jl
enter
stos
push
inc
jmp
dec
adc
xor
push
mov
imul
adc
push
ja
push
shlb
sahf
and
orb
cmp
int3
cli
ljmp
push
adc
jg
and
test
sub
mov
out
mov
or
test
loope
testl
xor
mov
adcl
and
mov
sbb
cmp
popf
mov
sbb
adc
push
inc
ja
lods
loope
mov
adc
paddusw
cwtl
xchg
mov
scas
in
das
xor
inc
clc
inc
lock
in
xlat
xor
jecxz
iret
je
clc
xor
movsl
or
mov
inc
add
jl
cmp
into
and
push
sub
test
stos
out
xlat
daa
jecxz
outsb
adc
movsl
mov
inc
mov
pusha
mov
or
mov
sbb
daa
adc
xor
mov
dec
cltd
cmp
dec
jne
sbb
sub
arpl
leave
cmc
pushf
lock
and
xlat
push
dec
inc
mov
int3
push
int3
insb
pop
mov
xchg
std
sub
jo
push
pop
sarb
movsb
mov
leave
loop
popa
xchg
xlat
push
adc
loop
add
cmp
xor
out
aaa
sbb
mov
push
test
sbb
jbe
push
bound
dec
sub
aam
imul
adc
mov
sbb
jle
clc
xchg
mov
jnp
adc
cwtl
sahf
xor
bound
jns
leave
jle
cmpsb
roll
xor
das
out
pop
xor
sbbb
jne
cmp
xchg
mov
lock
movsl
ss
or
or
and
push
mov
cmc
sbb
push
xlat
xchg
add
adc
pop
je
out
sbb
mov
inc
mov
push
push
sbb
fucom
mov
test
dec
mov
rclb
pop
jbe
inc
or
add
cs
lret
mov
and
and
jo
aad
daa
imul
cs
test
adc
jne
mov
fildl
xor
sub
dec
cmp
and
aas
xor
add
sub
test
mov
fbstp
mov
pop
mov
fnsave
cld
repnz
add
dec
push
pusha
cmp
pop
jg
jg
jecxz
lret
pop
icebp
andb
repnz
hlt
fs
mov
add
xchg
jo
xchg
and
aad
mov
and
mov
loope
xor
or
add
sub
xchg
add
adc
sbb
pusha
rcrl
test
fidivrs
sub
outsl
shll
stc
or
ret
push
cmp
jns
ja
cmp
es
sbb
dec
loopne
cmc
mov
push
mov
sub
xchg
pusha
pop
popa
shl
fucom
inc
sbb
aas
pop
add
sbb
mov
xchg
rcrl
xlat
shrl
dec
sub
mov
in
xchg
adc
jl
pop
pop
ds
or
mov
sub
in
cmpsl
aaa
pop
xchg
mov
arpl
lret
cmpsb
adc
ljmp
sarl
and
adc
xchg
push
push
cli
inc
sub
jg
push
movb
push
adc
in
pusha
test
lahf
inc
insl
pop
test
out
out
lock
test
add
sbb
push
xchg
sub
popa
clc
loopne
mov
jno
aas
sarb
mov
lea
adcl
pusha
sahf
pop
popa
pusha
cli
hlt
daa
shl
ficoms
arpl
ret
mov
push
neg
ss
adc
lret
xchg
cmpl
adc
and
mov
stos
xor
adc
sbb
cld
sbbl
mov
in
loopne
pop
cmp
shll
xchg
jp
aas
pop
ret
mov
cmp
dec
pop
out
mov
mov
and
outsb
push
mov
sub
mov
bnd
test
in
xor
and
dec
pop
rep
and
repnz
mov
mov
sub
imul
mov
sti
stc
lea
push
enter
icebp
fadds
or
jno,pn
sbb
psadbw
test
arpl
std
mov
adc
sub
ficompl
mov
es
xor
and
sub
sub
mov
xor
mov
dec
sbb
das
xor
push
scas
sbb
add
jl
out
scas
mov
jae
cs
cld
xchg
mov
jbe
mov
sbb
jnp
xchg
call
icebp
sti
scas
sahf
pop
sbb
and
data16
sbb
shl
int
int3
mov
andb
movsl
xor
push
fsubl
cmovbe
into
mov
push
cmpsb
dec
and
mov
or
or
test
mov
and
jl
push
sbb
sbb
jl
xchg
je
xchg
in
out
insb
push
xlat
nop
aas
mov
fildl
pop
arpl
xchg
inc
and
pop
popa
outsb
dec
mov
test
inc
insb
pop
mov
lea
dec
cltd
jns
repnz
loope
clc
push
cwtl
push
jg
stc
rorl
leave
inc
mov
jb
jne
aam
mov
xchg
add
mov
or
push
mov
popf
enter
insl
rcrb
cmp
es
inc
int3
out
dec
dec
rolb
loop
push
xchg
outsl
mov
test
jecxz
dec
daa
xlat
dec
je
push
mov
cmpsb
jecxz
add
cmp
movsb
lcall
outsl
sub
pop
insb
inc
push
lods
and
fbstp
pushf
xor
cmp
sub
push
xchg
and
icebp
je
les
pop
add
das
adc
lret
lahf
mov
hlt
cmp
lahf
xchg
pop
mov
xor
jns
push
dec
ja
pusha
sbb
xor
outsl
jb
sbb
xchg
mov
inc
fs
stos
mov
push
andb
jne
jle
push
pop
lods
nop
sbb
inc
in
shrb
push
mov
inc
sbb
cld
xlat
sub
pop
xor
les
imul
jecxz
mov
sbb
es
lock
clc
repz
jecxz
fsub
in
icebp
lahf
negb
scas
ficompl
hlt
xor
lret
mov
pop
sbb
and
lock
repz
bound
lret
add
xor
loope
mov
idivl
dec
incl
repnz
mov
imul
lods
xor
or
mov
out
call
out
insb
dec
aam
xchg
cli
lock
pusha
call
fidivl
cmp
xor
cld
dec
mov
cmp
lea
inc
add
in
xchg
imull
mov
sub
push
mov
out
jo
mov
fisttps
jle
mov
mov
ljmp
xor
dec
mov
dec
inc
dec
fwait
lock
cs
pop
mov
inc
popf
ja
xor
jne
stc
notl
xchg
out
inc
repz
lods
lds
mov
insl
mov
cmc
ffreep
adc
lea
adc
out
ja
jbe
jg
add
push
pusha
xchg
mov
loop
aaa
std
test
outsb
sbb
jno
and
and
mov
ja
in
nop
mov
repz
stos
jne
lock
sub
jmp
dec
outsl
push
mov
mov
inc
push
xchg
ret
fwait
xor
loope
addl
add
pop
xchg
test
mov
pop
and
aas
inc
scas
cmp
xchg
mov
rolb
pop
sub
in
test
sbb
inc
outsb
repnz
jns
lods
jbe
fistps
mov
mov
sti
es
or
xor
xor
sub
cmpsb
shlb
inc
movsl
sub
nop
pop
cmp
mov
mov
push
ficoml
cpuid
arpl
add
aam
mov
leave
data16
dec
push
inc
cli
pusha
popf
mov
pop
out
xchg
cmp
mov
add
imull
bound
je
call
es
push
inc
loope
scas
or
sahf
gs
xor
xor
out
sub
ljmp
sbb
dec
out
adc
fldcw
add
push
sbb
mov
into
xchg
xor
fmul
rol
pop
cmp
mov
inc
xor
cmp
inc
mov
lods
cmp
pop
lcall
std
sbb
cld
add
iret
shrb
lcall
ret
dec
mov
repnz
pop
push
test
mov
xor
dec
rol
mov
gs
inc
mov
paddusb
cwtl
or
jb
xorl
das
jno
inc
or
nopl
js
xor
sbb
pop
xchg
pop
push
jns
pop
loope
subl
outsb
mov
mov
cmp
pop
adc
out
lret
les
or
mov
dec
mov
movsl
cmpsl
jp
dec
sbbb
push
inc
arpl
hlt
jp
jae
dec
cmp
mov
cltd
loope
adc
xchg
mov
mov
xchg
into
pop
jl
dec
cmpsl
lret
sti
scas
mov
xchg
pusha
pop
js
push
adc
jmp
cmp
adc
dec
push
pop
hlt
outsb
frstor
mov
jne
inc
sti
pop
inc
fsubrs
addr16
loope
push
xchg
fucomp
push
pop
pop
jae
jns
cs
push
add
xor
cmp
jmp
mov
sbb
xor
cli
pop
lahf
lret
imul
jl
xchg
cwtl
repnz
add
fcmovb
test
cwtl
or
mov
sbb
mov
xor
cli
das
jbe
cld
cmp
cmp
pop
dec
inc
aas
mov
mov
dec
repz
push
inc
stos
in
mov
daa
icebp
imul
and
and
lods
and
sbb
fnstcw
aas
test
insl
adc
mov
xor
xchg
sub
pop
add
lahf
xchg
cld
xor
andb
fildll
out
movsl
inc
lcall
push
dec
hlt
fwait
push
fnsave
cld
insb
fwait
add
js
xor
lret
movsl
cs
mov
xchg
sbbb
jns
clc
popf
adc
gs
or
jp
and
movsl
fimuls
jae
out
sub
add
fldl
fsubrp
les
dec
orl
popa
push
push
test
xor
add
sub
jp
xchg
imul
lret
mov
jg
mov
dec
fidivs
test
jb
cmp
sub
stos
cwtl
shr
pop
lds
inc
add
fs
lea
pusha
push
outsb
push
mov
pop
dec
in
pushf
cli
xor
jae
xor
stos
add
cmovge
mov
daa
sub
dec
xchg
pop
test
fisttpll
rclb
repnz
hlt
mov
inc
mov
pusha
fistpll
imul
pop
fwait
clc
and
jo
pop
movsb
push
js
mov
add
movsl
dec
test
push
push
inc
and
inc
push
mov
shl
jbe
jae
mov
or
ret
add
repz
inc
mov
jns
repz
push
lahf
mov
add
xor
jge
and
pop
adc
xor
lahf
add
cmp
daa
mov
dec
shlb
mov
push
mov
incl
jmp
popa
pop
xlat
lahf
xchg
enter
add
jl
repz
pop
pushf
lods
cmp
add
popf
sbb
inc
jg
xchg
adc
rclb
repnz
fs
mov
xchg
sbb
mov
int3
jae
sub
cmp
pusha
mov
aad
sbb
hlt
maskmovq
idivl
cs
imul
fsts
stos
in
stos
shr
hlt
fsts
dec
int
iret
pop
sbb
adc
aaa
cs
push
imul
sti
mov
mov
aas
ret
pop
push
xlat
pop
lahf
pop
into
xchg
testb
insb
sub
test
data16
gs
in
adc
ljmp
loope
fmull
fdivp
popf
and
mov
mov
push
jmp
hlt
lods
sbb
or
movsb
pop
rcl
andb
jae
fldcw
push
fildll
lret
lcall
and
in
aas
push
subl
jae
mov
sub
push
test
or
jp
and
fistpl
add
mov
push
push
jle
insb
mov
enter
xchg
in
dec
mov
jecxz
and
push
push
jnp
mov
notb
inc
lods
mov
aam
and
push
and
sub
push
out
ljmp
cld
mov
jg
xlat
push
fdivs
in
mov
dec
mov
in
fxch
pop
adc
cmp
rcrl
lea
add
shll
inc
imul
push
mov
pop
add
jle
mov
sub
into
fists
xchg
mov
testl
sub
push
and
and
scas
dec
jl
sbb
mov
std
lcall
or
push
cmp
sbb
pusha
cmpsb
enter
dec
cmp
adc
jg
mov
andb
mov
sub
mov
addl
daa
ja
mull
push
cmpsb
shr
cmp
icebp
push
push
das
sar
movsl
mov
enter
push
test
push
inc
jns
mov
test
lret
fcomps
ss
out
adc
dec
adc
in
inc
lret
mov
sbb
test
sub
jl
mov
rolb
pop
insl
jmp
inc
cmp
inc
in
cs
jecxz
push
jo
push
lods
fwait
dec
scas
dec
sub
and
negb
lock
cmp
jmp
sbbb
movsb
cmpsb
addr16
cs
lea
in
insl
sarl
test
fsubs
add
xchg
mov
inc
push
clc
fst
in
repz
cmp
cli
into
cmp
mov
push
jns
xchg
push
mov
movsb
out
mov
sub
mov
inc
push
push
xchg
fcoml
push
mov
inc
sub
test
lcall
pop
popf
mov
sub
jns
jbe
test
mov
bound
and
dec
loopne
sbb
sahf
pop
lock
punpckhdq
scas
loope
fnstcw
mov
push
jp
cs
lods
adc
mov
mov
jb
mov
push
je
xchg
mov
lock
scas
jecxz
cmp
and
mov
cmpsl
xor
les
adc
inc
inc
push
push
add
jbe
pop
pusha
adc
cltd
cmpsb
test
or
dec
mov
inc
enter
pop
jb
cmc
xlat
stos
push
xor
cwtl
lcall
fsubs
arpl
ret
scas
push
loop
pop
and
ja
inc
and
imul
aaa
repz
jbe
hlt
imul
mov
mov
mov
data16
cmpsb
jb
jb
dec
xor
sub
es
es
jae
dec
xchg
fwait
jmp
sahf
jecxz
fidivrs
or
out
inc
test
or
cmp
ret
sahf
fimull
or
mov
mov
xchg
xchg
adc
lret
sub
fcom
enter
xor
insl
stos
imul
scas
int3
int3
out
dec
mov
and
jp
into
je
push
sub
jo
mov
mov
mov
out
jmp
ficoms
std
xchg
out
repnz
popl
push
movsl
rol
call
jge
arpl
out
mov
sub
into
jns
cli
inc
push
fcomps
inc
sbb
mov
daa
lret
jae
jnp
sbb
iret
dec
in
es
pop
lret
xchg
xor
adc
call
push
dec
jp
shr
test
and
out
out
dec
and
mov
dec
jge
jmp
popf
push
push
push
sub
xchg
js
aam
scas
dec
push
cmp
popa
xchg
mov
in
sub
mov
or
cmp
in
movsb
adc
and
bswap
outsl
xchg
cltd
int3
mov
mov
mov
negl
subl
xor
lods
pop
ret
push
xchg
test
fisubrl
movsb
sub
lret
ljmp
sbb
add
xor
dec
xor
or
xor
sbb
sbb
cmp
jg
inc
xchg
cltd
daa
pop
std
adc
loopne
sbb
mov
mov
es
je
mov
jmp
adcl
gs
add
dec
cmp
mov
xor
or
jbe
test
pop
jno
mov
nop
push
pushl
in
leave
fistl
xlat
or
sahf
mov
je
mov
dec
adc
adc
sub
and
add
and
push
and
pop
inc
pop
xchg
push
in
enter
mov
imul
data16
lods
cmp
cmp
pop
adc
sub
jge
push
dec
cmp
popa
jns
daa
scas
xchg
mov
andl
in
mov
inc
mov
or
push
rcl
push
or
jmp
add
cmp
cmp
cmp
movsb
mov
hlt
rorl
test
fcomps
sub
add
outsl
mov
xchg
aad
outsb
pop
fdivrs
ss
cltd
push
adcb
test
push
jne
jno
pushl
fsubl
je
inc
push
mov
stc
sub
pop
mov
xor
mov
adc
dec
sarb
adc
xchg
and
shl
jns
mov
inc
push
xchg
aad
movsb
push
cmp
push
sub
jne
insl
insb
mov
add
mov
call
inc
fcoms
mov
in
cmp
fwait
sti
mov
mov
jge
stos
es
lahf
mov
movsb
push
lds
scas
scas
fidivrl
test
stc
push
in
loopne
push
je
outsl
cmp
jnp
mov
xor
adc
jl
mov
dec
mov
add
jnp
ficompl
orb
inc
test
inc
jno
nop
sahf
inc
adc
jo
loopne
sbb
mov
adc
mov
push
mov
aam
pop
dec
loop
je
notl
mov
sbb
jbe
es
push
cli
cmp
roll
mov
lds
xor
iret
jb
pop
in
adc
and
shrb
lahf
and
jg
or
out
push
mov
lea
out
or
push
iret
sbb
jo
push
lods
jae
cmp
mov
cmc
adc
insl
jge
sbb
mov
fnsave
pop
sub
ficompl
test
imul
fmuls
mov
imul
fsub
xor
stos
push
mov
jmp
mov
jmp
jecxz
jecxz
mov
popf
lea
lahf
mov
fs
xlat
and
lods
out
call
xchg
dec
outsb
sub
aam
sbb
icebp
push
arpl
inc
ds
fisubs
lret
mov
imul
popa
xchg
outsb
jne
cld
or
in
stos
lret
out
sbb
lods
scas
xchg
es
sub
fisttps
outsb
or
inc
call
push
xorl
cmp
adc
and
lds
lret
push
sbb
stos
js
sbb
shrb
add
sahf
ljmp
nop
push
mov
mov
mov
inc
call
ss
sub
sub
jns
sar
inc
cmp
and
inc
in
mov
add
adc
cmp
rorb
jo
pushf
or
insb
mov
cmp
filds
adc
mov
sbb
repz
inc
jg
into
inc
jmp
or
jnp
and
push
xor
jbe
add
and
shrb
add
aad
loopne
xor
mov
xor
movsl
sbb
inc
test
outsb
mov
or
adc
mov
inc
cmp
mov
repnz
mov
inc
push
adc
push
pop
jb
xor
sbb
cmpsb
xchg
outsb
push
mov
jmp
cmp
aaa
lret
test
xor
add
fwait
push
cmp
outsl
cmp
fimull
in
aam
lea
or
ss
mov
push
fidivrs
push
es
mov
dec
enter
insb
pop
xchg
jo
sbb
pop
repnz
jge
add
push
imul
stos
sbb
jns
adc
mov
pop
xchg
or
popf
mov
jo
fcoms
lods
xor
test
lret
inc
pop
movl
sbb
stos
scas
gs
stos
pop
int3
jg
pop
cmp
fisubrl
add
fidivl
jbe
stc
xlat
rorl
xor
call
das
push
push
sub
xor
xchg
hlt
inc
cli
aaa
add
xor
xor
shr
lcall
xor
imul
cmc
mov
push
mov
sbb
cmpsl
jne
fimuls
js
jmp
jecxz
sbb
pop
mov
mov
add
mov
test
cwtl
cltd
adc
sbb
jp
adc
popf
xchg
cmp
inc
mov
dec
or
mov
rcrl
fcoms
adc
push
fstpt
pop
mov
mov
in
xchg
daa
mov
or
incb
xor
and
jmp
xor
icebp
cwtl
scas
or
cmpsl
testb
stos
mov
xchg
dec
aaa
pop
add
subb
rcr
cmp
adc
dec
addb
adc
mov
scas
neg
add
lds
hlt
fdivrs
mov
push
sub
pop
pop
adc
lea
loopne
in
movswl
leave
push
adc
into
imul
hlt
dec
pop
cmc
ret
add
pop
mov
xchg
jbe
lret
shlb
lea
nop
rcll
jbe
cmp
insb
cltd
xchg
int
mov
adc
repz
xchg
jmp
mov
rcrl
sbb
or
pop
out
scas
jl
fidivl
cmp
dec
pop
xor
add
adc
cli
xor
adc
inc
pop
mov
rcrb
repnz
out
scas
mov
cmp
mov
sub
pop
fwait
dec
mov
xlat
adc
pop
push
jae
push
jne
jmp
loop
jae
or
mov
jmp
mov
insb
add
pop
shlb
fildll
lods
in
xor
mov
dec
addr16
je
mov
jmp
pop
mov
rcr
or
rclb
dec
sbb
pop
inc
imul
xchg
mov
sbb
xor
push
and
cltd
scas
or
xchg
adc
add
push
cs
push
aam
std
xor
aas
jns
cmc
repnz
cltd
arpl
inc
mov
or
pop
testb
jno
cmpsb
push
loop
jb
mov
cmpsl
pop
mov
repz
sbb
inc
mov
out
lret
cmc
popf
cmpsb
aad
aas
dec
fxtract
sbb
jge
test
cwtl
lahf
mov
sti
push
pushf
cmp
add
mov
adc
pop
xchg
repz
or
or
mov
enter
pop
xorb
jl
push
loop
or
or
ret
sbb
xchg
lods
xchg
xchg
aaa
sub
add
xor
push
cltd
inc
adc
outsb
sbb
pop
loope
js
stc
inc
filds
inc
lret
mov
push
sbb
sub
fisttpl
lret
enter
dec
fwait
sti
sbb
leave
pop
inc
roll
add
mov
and
add
xchg
adc
das
enter
cmpsl
ret
mov
or
es
jns
cwtl
in
mov
in
and
cmp
inc
mov
iret
fmull
popa
aad
jmp
test
mov
out
shlb
int
sub
fsub
xchg
sbb
ret
mov
lahf
in
and
mov
mov
js
ret
xchg
or
insl
iret
stc
ret
rolb
pop
mov
out
dec
push
mov
test
inc
and
bound
rcrb
vpandn
in
pop
je
push
test
in
or
movsl
dec
aad
jmp
mov
fstps
add
lock
jno
and
lcall
inc
mov
sub
lret
jbe
push
jecxz
shrl
mov
out
push
imul
adc
or
mov
mov
jns
popf
je
rorl
jmp
lea
lret
stos
shlb
test
and
jae
loop
in
test
jmp
call
pop
adc
add
lods
sbb
or
outsl
pushf
dec
mov
and
jno
xchg
add
pop
and
pusha
lods
out
fldcw
ja
mov
fcomps
or
js
or
adc
add
push
jg
in
and
jbe
imul
ja
lock
js
jnp
test
pop
dec
mov
jecxz
jns
mov
push
cli
ljmp
popa
movsl
push
and
cli
jae
movsl
push
push
das
aam
pop
push
cmc
pop
addr16
jns
or
xor
or
stc
inc
icebp
xchg
push
add
ss
ret
jns
and
jle
rclb
or
add
sti
lea
mov
pop
inc
inc
lds
rcr
xchg
jbe
rcl
test
std
out
out
and
pop
rorl
popf
push
pop
mov
jmp
and
add
dec
mov
imul
es
cmp
mov
js
pop
les
xlat
sbb
std
xchg
test
popf
sub
push
sbb
cmpsl
cwtl
and
cmp
shrl
jnp
bound
mov
inc
js
bound
loopne
cmc
nop
xchg
in
push
test
in
popf
sub
add
cmp
mov
or
xor
fldlg2
inc
repnz
adc
dec
xchg
ficomps
cmpsl
movsl
mov
icebp
jp
loope
and
mov
adc
cmc
cmp
mov
inc
xor
dec
fistl
data16
iret
leave
jge
jns
and
scas
imul
xor
or
sub
pop
scas
fldl
lods
cmc
xchg
adc
sar
addr16
pushf
xor
hlt
push
outsl
pop
jbe
cld
xchg
aam
mov
inc
xor
sbb
cmp
imulb
cmpsl
sub
ffreep
add
pop
or
mov
push
mov
dec
sbb
mov
mov
int3
cmp
jo
mov
and
dec
cld
jno
jecxz
icebp
xchg
jbe
nop
lahf
in
dec
sahf
pop
mov
mov
sbb
jbe
mov
or
cmp
out
test
pop
mov
clc
call
and
mov
lahf
jne
pop
aad
fistl
test
adc
push
jb
adcb
jo
ficoms
rcrb
insb
adc
arpl
and
and
rorl
js
mov
mov
cmp
daa
xchg
fwait
cmc
sbb
mov
mov
jg
sbb
and
fdivl
int3
repnz
add
movsb
xchg
push
sti
cmp
mov
mov
test
mov
inc
or
adc
mov
cmp
push
add
cwtl
bound
mov
fnstsw
dec
push
cmp
inc
inc
adcb
in
xor
loope
sbb
repz
push
arpl
xchg
xchg
push
jb
lods
js
lret
adc
dec
inc
andl
in
xor
cmp
dec
lods
mov
sub
shr
xor
cli
rorb
or
js
loopne
mov
add
or
fimuls
sahf
xor
cltd
cmc
into
ret
xorb
test
mov
je
fcompl
sar
add
mov
mov
dec
fbstp
add
push
out
lock
push
and
adc
cmp
jb
xchg
xchg
cltd
dec
pop
bnd
jl
shrb
jne
je
stos
jnp
or
jno
cltd
sub
lods
shl
jg
push
mov
or
mov
ja
jl
fidivs
or
jg
and
lds
mov
or
int3
iret
adc
aaa
outsb
xchg
lods
cwtl
mov
mov
xlat
or
mov
out
pop
popa
leave
nop
pushf
cmp
adcb
scas
xchg
xor
addl
sarl
xor
aas
pop
mov
mov
imul
mov
add
aaa
data16
cmp
das
pop
das
push
sbb
lret
hlt
cmp
ret
gs
jno
int
xchg
cmc
mov
push
sbb
xor
mov
test
and
daa
and
xchg
lea
pop
test
pop
sub
jecxz
jb
outsb
pop
pop
xchg
mov
mov
xor
mov
in
enter
mov
cmpsb
dec
test
mov
nop
divb
jae
and
adc
fwait
dec
push
mov
lret
rcll
nop
fistpl
or
adc
mov
jle
ret
inc
adc
cmp
out
test
sbb
pop
cmp
pop
mov
mov
pand
push
pusha
ss
inc
mov
loope
xchg
mov
mov
or
test
bound
xchg
mov
mov
inc
daa
mov
subb
cmp
addl
adc
adc
push
xchg
es
mov
sti
jp
pop
push
out
mov
dec
rcrl
jb
cwtl
insl
cltd
and
dec
pop
lods
inc
pop
dec
dec
hlt
jge
repz
mov
call
jb
xor
js
mov
fs
inc
daa
jmp
nop
cld
and
aaa
hlt
add
aaa
paddd
movsl
call
push
cmc
mov
ja
lret
xor
icebp
pop
hlt
push
inc
mov
add
lock
and
jne
cmp
hlt
loopne
inc
inc
mov
nop
mov
cld
in
xchg
and
mov
push
out
jne
sbb
cld
call
or
aam
sti
stc
sbb
xchg
test
cwtl
iret
sbb
xor
insl
jmp
mov
adc
lods
inc
push
adcl
fdivr
in
popf
cwtl
push
leave
xlat
pop
add
movsl
cmp
stos
adc
mov
inc
loope
xchg
jg
pop
icebp
dec
cld
stos
aad
dec
das
gs
xchg
mov
mov
movsl
fdivrs
in
inc
jecxz
or
sbb
jle
sbb
xchg
push
shlb
push
loope
ja
push
push
fisubrs
test
mov
pop
sbb
pop
push
xchg
fwait
mov
xor
or
cmp
dec
subb
and
push
or
lcall
and
fcmovnu
ret
mov
out
fdivrs
scas
push
pop
scas
cmpsb
mov
movsb
pop
dec
xchg
push
ds
je
and
out
xchg
in
mov
fstl
mov
mov
inc
ss
jno,pn
mov
hlt
fildl
sbb
jle
cli
in
jp
mov
or
jb
mov
ja
cmpb
icebp
sub
add
xchg
fildll
cs
jg
gs
clc
and
push
enter
xor
xor
mov
or
push
sub
cmpsb
add
or
jnp
and
icebp
bound
xchg
xor
cwtl
xorl
jecxz
sti
inc
jle
mov
jmp
cli
out
fs
sub
imul
pusha
push
test
cwtl
rorb
pop
inc
push
lahf
adc
jle
pushf
iret
jne
dec
roll
jns
sbb
shl
lahf
jae
hlt
pop
push
loop
adc
adc
sahf
in
cmp
aad
sbbl
je
and
dec
jg
cmp
sub
shl
cld
sbb
push
pop
mov
mov
ds
fisttpll
fistps
jnp
divl
or
jl
sub
jle
lock
inc
pop
in
adc
cmp
push
mov
pop
lret
xor
es
mov
bound
sbb
pop
int
add
and
mov
rdmsr
test
insl
cmp
and
aaa
insl
sti
or
out
je
push
xchg
out
inc
je
mov
dec
pushf
cmc
lcall
outsl
outsl
filds
in
pop
xchg
push
pusha
insl
imul
adc
inc
lock
jl
test
mov
lds
xchg
mov
pop
push
jno
les
cmc
in
mov
cmc
daa
ds
and
mov
mov
jns
and
leave
or
add
inc
cmp
sub
adc
aad
add
add
xchg
jge
jns
adc
cmc
and
mov
ss
or
xchg
adc
fildll
jl
ss
push
pop
jl
sub
pop
in
or
cmpsl
jle
xchg
and
test
pop
xor
imul
out
jnp
out
ja
push
sbb
push
rclb
and
insl
xchg
add
dec
push
push
pusha
push
adc
push
ret
arpl
jp
es
stos
mov
add
imul
mov
inc
pop
sbb
jmp
rorb
imul
mov
lcall
and
rol
mov
jle
ret
jp
mov
fs
push
cmp
adc
movsb
test
filds
inc
std
dec
sub
sub
ror
sar
ret
mov
inc
lret
jae
test
cld
das
sbb
or
add
clc
pop
xor
sbb
fidivrl
orb
stc
outsb
jecxz
add
push
sub
adc
mov
pop
movsl
pminsw
push
nop
xchg
cli
cmp
movsb
dec
or
lods
test
xor
and
mov
stc
xor
sub
insl
lods
xchg
xchg
ds
lret
xor
and
sbb
fidivl
sti
jl
mov
and
xlat
fsubrl
nop
jno
clc
mov
sub
dec
pop
cld
sahf
xchg
and
nop
shll
jae
outsl
push
mov
lock
xchg
jecxz
lret
cmp
imul
inc
sub
jae
or
xchg
mov
fucomp
mov
mov
inc
lds
imulb
mov
cmp
adc
out
bound
add
cmpsl
rorb
je
or
sub
push
sahf
ficompl
and
sarb
add
or
roll
mov
sbb
push
iret
xchg
aas
out
jno
fisubrl
inc
ret
out
cwtl
scas
jnp
mov
xor
inc
sub
cwtl
dec
rclb
rol
icebp
mov
cmp
jo
pusha
lret
scas
test
sbb
adc
jne
mov
jno
scas
cmp
mov
clc
les
inc
cmp
pop
unpckhps
inc
scas
fwait
stos
jb
and
mov
sbb
dec
shr
dec
rclb
xchg
insb
cli
pusha
mov
xlat
std
orl
mov
sub
jmp
jp
add
and
xchg
movsb
fisttpll
notl
dec
loope
pop
mov
pop
popa
pushf
sub
and
and
jl
cmp
lahf
scas
dec
gs
pushl
xor
bnd
in
aaa
rcrl
mov
jbe
lock
vmovaps
pop
mov
push
cmpsb
xchg
cmp
andl
pop
xor
xchg
das
fcmovnb
push
adc
call
push
mov
enter
and
add
mov
cmp
je
jbe
loope
mov
out
jge
into
add
add
js
jns
out
inc
sbb
mov
pushf
pop
test
sti
pop
in
or
es
push
push
repz
sub
dec
adc
into
sbb
add
test
not
loope
pop
loope
or
or
enter
scas
lret
or
daa
gs
xchg
lods
dec
xchg
out
lock
dec
jl
lock
mov
fdiv
mov
cmp
cmp
add
in
movsb
pop
and
sub
mov
push
jmp
sub
in
ljmp
popf
dec
jo
outsb
ffreep
cmp
insb
pushf
xor
sub
inc
mov
sbb
xorb
adc
pop
loop
inc
inc
or
out
jb
out
pop
cwtl
iret
nop
add
in
pop
stos
mov
icebp
fsubrl
add
sub
fs
out
xchg
cmp
mov
imul
mov
adcl
push
mov
jmp
bound
adc
cli
xlat
or
int3
insb
testb
adc
cmc
xchg
xchg
test
in
pop
pusha
jne
push
bound
fnstcw
mov
or
inc
jge
js
and
test
xchg
pop
jle
aam
inc
cli
and
mov
adc
push
dec
and
in
xor
inc
add
movsb
fldenv
cs
sub
imul
push
int3
mov
xor
movsb
mov
pop
cmp
adc
lds
and
add
jge
push
cmp
mov
pop
je
pop
adc
fnsetpm(287
cs
dec
adc
push
fwait
js
pop
xchg
aam
test
push
pop
pusha
inc
lea
dec
movsb
xchg
into
lea
je
push
mov
repz
lods
cmpl
fimuls
inc
sbb
push
sbb
inc
out
jbe
dec
popf
jnp
test
xorb
sub
cld
mov
mov
shll
xchg
inc
adc
mov
mov
add
insb
ret
enter
cmp
pop
sbb
sbb
xchg
repz
out
push
addr16
in
sbb
outsb
mov
jae
sub
out
divb
inc
stos
jne
sub
test
stc
push
jle
aam
push
sahf
adc
in
roll
jne
loope
stos
jb
push
ss
lret
into
xchg
dec
sbbl
jg
mov
jae
jae
andb
fidivl
leave
into
stos
xchg
and
xor
mov
or
xchg
repz
sahf
aam
jge
and
jne
add
pop
lds
or
orb
popa
cld
dec
repnz
imul
lret
sbb
lcall
in
pushf
sub
pop
mov
insl
mov
jg
out
sbb
ds
sub
out
js
fwait
mov
sbb
iret
fmuls
mov
nop
jnp
xor
push
js
or
cltd
xor
push
lock
inc
push
test
leave
lods
jecxz
outsl
repnz
ja
xchg
xchg
xchg
pop
dec
rep
cld
test
cli
ds
inc
push
cmp
rcrb
mov
leave
or
sahf
add
mov
and
scas
in
adc
mov
cmc
lea
test
scas
arpl
sbb
test
jno
aas
pop
and
push
pushw
je
movl
lds
into
cmp
pushf
or
jo
arpl
mov
pop
movsl
fidivl
loope
cmp
push
jne
cmc
in
test
clc
sbb
sbb
inc
filds
fsubs
enter
in
jle
hlt
pushf
cld
lcall
test
jb
mov
mov
aas
movsl
loope
test
pusha
or
scas
test
inc
pushf
add
or
push
lahf
addr16
mov
lret
cmp
inc
hlt
test
mov
jbe
xor
mov
push
pop
roll
pop
shrb
in
jge
loopne
roll
xchg
imul
dec
mov
dec
xor
pusha
inc
sub
notl
and
mov
stc
aad
mov
or
inc
push
daa
push
xchg
cmpsb
push
and
int3
push
test
das
js
shll
adc
or
mov
jp
test
ds
jecxz
jne
push
popa
pop
lea
movsl
pop
adcb
push
pop
or
dec
jp
scas
cmpsb
pop
push
add
adc
cmp
push
and
test
seto
sub
pop
clc
mov
pop
cmp
lahf
in
xchg
outsb
movl
das
add
inc
aad
mov
mov
inc
pop
pusha
add
adc
cmpsl
ds
mov
fbld
pmaxub
lahf
sbb
dec
ret
lds
mov
jg
dec
sbb
dec
jmp
mov
push
lds
mov
inc
cmpsl
pop
in
aam
bound
push
iret
scas
adc
scas
mov
sti
jge
cld
xor
divl
dec
dec
jp
pop
push
xor
subl
fdivl
aam
imul
jo
sub
mov
jmp
cmp
fwait
cmp
test
mov
add
inc
mov
jle
and
stos
xchg
shrb
cmpsl
cmp
ret
icebp
cmp
andl
shll
cltd
jle
fwait
mov
rorl
ja
mov
mov
das
cmpsb
fidivs
pusha
xchg
inc
dec
das
int
push
inc
pop
cmpsl
lcall
aad
into
aas
in
mov
sub
pop
xor
or
stos
scas
mov
pop
add
pop
cmp
xor
jb
push
or
in
inc
incb
nop
outsb
stc
test
cmp
push
sti
mov
xchg
or
imul
int3
ja
mov
jmp
shlb
mov
jl
pop
out
pop
jo
push
xchg
dec
add
ja
outsb
mov
movsl
loope
cmp
mov
and
push
cmpsb
sbb
loop
and
jp
push
lods
leave
add
sub
mov
aam
mov
lock
rolb
and
fstp
pop
mov
lcall
pop
inc
cmp
inc
loope
push
adc
sbb
int3
jae
xor
repz
mov
enter
cmp
pop
test
xor
xchg
fwait
pop
sbb
cld
pop
and
pop
sub
mov
sbb
mov
sub
inc
mov
movsl
loopne
sub
inc
scas
enter
or
div
xchg
aas
test
je
dec
scas
jmp
mov
jp
outsb
jl
addr16
adc
loope
mov
sbb
pop
ss
aad
sbb
lods
or
fadd
cmp
clc
jmp
and
js
push
dec
popf
or
call
lahf
lahf
cmc
loop
adc
xchg
fstpt
xchg
pop
in
jne
dec
negb
or
addl
inc
xor
sub
xchg
pop
adc
mov
mulb
inc
in
jns
roll
mov
or
push
xchg
iret
movsl
push
bound
mov
sbb
mov
subl
fcomps
rcl
nopl
xchg
loope
mov
adc
enter
mov
rcrb
int3
inc
loop
inc
mov
mov
inc
mov
add
loop
sub
push
loop
out
scas
jg
pop
push
xchg
xor
or
scas
pminub
add
pusha
sbb
or
pop
mov
fidivrl
cmp
nop
or
sarl
icebp
pop
xchg
xor
movsl
cmp
test
loopne
repz
adc
mov
xchg
dec
mov
dec
leave
push
mov
cmp
sbb
jl
fmulp
hlt
sub
or
mov
movsl
adc
add
mov
cmp
jp
push
cltd
stos
adc
add
sbb
sbb
push
fimull
or
icebp
xchg
sbb
insl
lret
cs
lret
imul
lds
mov
cmpsl
loope
cmpb
fidivrl
push
jb
push
mov
or
out
fwait
cmp
mov
nop
outsb
cwtl
sbb
inc
pop
xlat
fsub
or
enter
jae
mov
cmp
mov
out
scas
insb
stos
mov
pop
or
dec
mov
mov
lods
xor
cs
aaa
dec
lods
pop
clc
xchg
sbb
dec
and
pop
pop
jbe
movb
fsubr
movsb
cmp
pop
pop
divl
xchg
cmpl
out
cmp
cli
push
xor
aam
pop
movlps
sub
mov
pop
ret
add
out
xchg
nop
mov
xor
in
mov
lock
lret
xor
shll
jo
les
adc
fucomip
or
adc
cli
jns
mov
push
rcrb
mov
out
mov
imul
loope
dec
dec
sub
cli
jo
cli
pop
scas
or
pop
xor
push
push
sbb
and
sub
enter
mov
roll
stos
in
lock
enter
ds
mov
std
jbe
cwtl
mov
ds
push
stos
pop
scas
cld
sub
call
inc
inc
push
sub
movsl
mov
dec
or
cmp
pop
or
out
jns
xor
mov
push
std
negb
ret
out
cmp
out
mov
fsts
jle
sub
roll
mov
pop
adc
xor
aam
cmpsb
rolb
sbb
dec
aad
sbb
repnz
or
cmc
pushf
add
cmp
mov
xchg
cltd
es
shll
fsubl
je
xor
std
fimull
jno
xchg
stos
mov
or
and
data16
or
add
adc
insb
addr16
sbb
sub
lods
insb
mov
dec
sarl
sub
flds
es
and
and
xor
stc
test
jno
out
dec
adc
push
imul
pop
push
mov
add
mov
mov
mov
out
movsl
repnz
adc
mov
jmp
ja
cmp
insl
int3
xchg
cmp
sbb
adc
cld
mov
pusha
and
aaa
push
inc
adc
mov
and
mov
fcmovnu
mov
adc
push
push
push
or
cltd
add
sub
ja
rcr
add
je
icebp
lock
sti
loopne
sbb
or
insl
fiadds
clc
cmp
mov
rolb
cltd
cmpsb
in
int
pop
pushf
movsl
shrl
cmpsb
ljmpw
xor
jbe
jne
mov
popf
hlt
movsb
cld
shlb
shl
lahf
add
ljmp
mov
sub
cli
cmpsb
inc
insb
js
aaa
sub
push
addl
iret
or
mov
les
xchg
ficoms
add
jbe
stos
and
lret
dec
or
ja
imulb
imul
outsl
push
xchg
es
xlat
push
mov
add
or
jle
xchg
jge
mov
lea
fwait
in
sbbl
call
test
and
sub
and
mov
adc
add
xor
sbb
arpl
lods
or
xor
je
cld
les
out
cltd
dec
les
mov
enter
aaa
or
inc
sahf
pusha
stos
ja
rorl
cmp
loopne
fbstp
and
dec
mov
mov
neg
jb
int
push
mov
mov
push
nop
movsl
xchg
clc
adc
jl
shlb
fstpt
xor
push
pop
fbld
cmp
cmp
outsl
fwait
lahf
call
push
cmp
icebp
fxtract
frndint
adc
xchg
xchg
stc
out
mov
dec
cmpsl
xchg
ret
scas
adc
mov
shr
lods
lcall
xor
lods
sbb
sbb
ds
out
or
pusha
sbb
dec
xorl
ljmp
inc
jmp
leave
loop
sbb
dec
repnz
outsb
andl
push
shrb
adc
add
ljmp
cld
imul
repz
int3
mov
shl
mov
cmp
sub
adc
pushf
int3
mov
mov
cs
push
push
mov
mov
and
sbb
ss
test
push
test
lcall
in
push
nop
jp
mov
leave
jne
pop
or
dec
pop
sahf
sub
push
mov
xor
cmc
inc
pop
dec
mov
pop
cmp
mov
leave
fsubrs
sbb
add
hlt
enter
popa
sqrtps
testl
imul
inc
sub
and
cmp
jae
mov
push
jb
movsb
icebp
lds
push
sbb
es
out
test
mov
sub
jno
ja
xchg
mov
pop
mull
scas
cwtl
cwtl
jle
jp
imul
rcrl
ss
in
out
cmp
fadd
movsl
dec
cltd
mov
mov
xchg
pop
pop
jmp
das
in
popa
adc
out
adc
or
cltd
out
mov
rolb
lret
scas
ljmp
inc
mov
jnp
stc
dec
xor
adc
and
dec
mov
test
push
xchg
mov
xchg
push
jno
arpl
pop
test
add
pop
mov
xor
cmpsl
push
enter
sbb
pop
int3
mov
fsts
je
aad
int3
cli
mov
aas
cmpsl
insl
stos
push
push
push
rclb
lock
pop
insl
popa
lods
dec
jno
sarb
cmp
mov
cmp
push
addr16
and
and
call
shll
sub
mov
or
push
mov
mov
std
pop
pusha
push
add
xchg
int
jns
adc
sahf
mov
ja
xlat
mov
push
push
cmp
fists
loop
lea
lret
xchg
cld
out
add
mov
xor
outsb
rcl
jbe
lret
push
loopne
xchg
int
fs
sub
ret
pop
cmpsl
imul
add
cmp
xchg
fdivl
rcll
jno
test
leave
mov
sbb
mov
xchg
mov
mov
in
jnp
shlb
inc
pop
lcall
xchg
add
incl
jbe
icebp
int
dec
dec
cmpsl
in
jge
stc
mov
mov
fs
jb
cmp
leave
je,pt
dec
imul
popa
daa
clc
mov
scas
pop
pop
or
pextrw
mov
imul
out
lock
pop
stos
movsb
pop
aaa
insb
imul
push
test
mov
jecxz
pop
pop
jecxz
es
mov
adc
mov
sub
jmp
inc
inc
sub
cmp
push
negl
andb
xchg
pop
xlat
sbb
mov
vmwrite
xchg
mov
inc
push
and
xchg
mov
pusha
rcrb
xor
shrb
mov
nop
sub
and
and
jno
mov
inc
xor
jmp
fstpl
popf
jl
or
lcall
mov
cmp
pop
leave
rcl
pop
pusha
call
mov
cwtl
int
inc
or
push
dec
push
cmp
adc
jae
insb
in
lret
push
pusha
sti
loopne
cmp
lods
ljmp
out
test
adcl
mov
or
cld
popf
dec
xor
les
add
jb
aam
lret
daa
mov
push
inc
push
mov
cmp
lods
sbb
cli
icebp
jnp
cmp
mov
stc
push
fisubrs
dec
jns
xor
cmp
mov
xchg
clc
fs
mov
fiadds
jno
arpl
push
not
lldt
sub
test
jno
push
inc
jno
jbe
int
arpl
cwtl
push
and
and
sbb
andb
lcall
scas
sbb
and
arpl
aam
pop
mov
sbb
jmp
jns
call
repnz
inc
ja
mov
mov
addb
jbe
orb
js
xchg
sahf
mov
jb
arpl
negl
mov
aas
out
rcl
iret
movsb
add
add
push
ret
rcll
ret
jge
js
push
lahf
push
dec
mov
cmc
lds
popf
sbb
cli
or
add
xlat
iret
sbb
push
lcall
mov
jmp
mov
or
push
aaa
daa
gs
sub
sbb
fdivp
jge
fisubs
mov
fcmovb
xor
sbb
jl
add
push
aam
das
outsb
inc
xor
sti
fcom
enter
sub
dec
mov
cld
ja
dec
test
sub
push
adc
fimuls
js
outsb
jnp
inc
lods
pop
push
cmpsb
add
test
stos
or
jnp
jbe
mov
mov
xlat
xchg
and
mov
adc
aam
jg
and
cmpsb
pop
inc
cmp
out
repz
push
rorl
add
enter
test
and
test
adc
roll
cmp
dec
aad
mov
movsl
ds
dec
jbe
dec
mov
pop
aam
repz
xchg
xchg
jle
nop
sbb
repz
aad
pushf
and
pop
ds
cmp
push
jb
mov
mov
jmp
pusha
in
daa
jge
lret
lea
xlat
js
jnp
cmc
std
test
or
rcl
in
aaa
movsb
in
mov
xchg
add
movsl
addb
inc
adc
movsb
add
movsl
xchg
xchg
mov
sbb
mov
sub
fwait
pop
repz
dec
or
jns
negb
out
push
dec
test
getsec
lcall
int
loope
adc
cld
xchg
cmp
and
gs
cmpsb
fstp
gs
sahf
mov
out
lret
sbb
aas
in
fistpll
mov
andl
mov
clc
pop
cltd
arpl
xor
pusha
add
lahf
enter
ret
pop
mov
loop
sbb
push
lret
cmp
popf
lret
rorb
jg
push
daa
cwtl
and
or
mull
sbbb
pop
xor
lods
xchg
scas
mov
xchg
scas
test
sub
fcmovu
imul
rcrl
mov
xor
mov
jns
pop
mov
mov
add
sub
idivb
icebp
arpl
xchg
incb
sbb
fucomp
lds
cli
cmpsb
cwtl
les
int
push
hlt
mov
push
icebp
dec
cmpb
cmp
inc
nop
fldl
adc
and
out
aaa
sub
sub
cmp
repz
add
mov
js
test
add
inc
repnz
dec
in
dec
jno
jl
push
ss
jmp
imul
xchg
aam
das
sbb
lods
and
mov
or
ja
mov
stc
dec
repnz
sbb
mov
sub
popa
xchg
pop
ja
call
cmp
jbe
idivl
scas
ljmp
mov
push
inc
cmp
mov
or
sbb
adc
jle
jo
rolb
popf
mov
addr16
fwait
scas
xor
cmc
xor
out
or
inc
jo
ja
int
adc
cli
test
lahf
lret
xor
mov
ja
imul
pop
je
iret
jl
xchg
dec
sbb
mov
push
push
pop
add
cmp
int
adc
rorl
pop
aam
sbbl
inc
cmpl
fdivs
shll
test
mov
jg
jecxz
xor
push
outsb
out
xchg
or
ljmp
xor
or
xor
pop
and
sti
insl
and
jl
push
inc
pop
ja
pop
repz
xor
repz
inc
movsb
cmp
mov
mov
aaa
int3
les
mov
add
stos
aad
cmp
data16
aad
xchg
into
out
mov
rcl
and
adc
sub
and
jp
or
jne
sbb
fdivrl
push
in
mov
xchg
and
jo
jnp
xor
xor
rcrb
fildll
addb
mov
js
or
add
jae
sub
xor
roll
fwait
jb
andl
flds
jbe
cltd
push
pushf
iret
jg
pushf
iret
adc
mov
adc
flds
cmc
inc
jb
cmpsb
push
mov
jmp
inc
jbe
inc
and
push
aam
cmc
je
inc
adc
in
mov
popf
or
adc
dec
outsb
push
mov
and
sbb
cmp
cmp
push
ljmp
enter
mov
dec
jo
shll
fistps
jle
pop
push
cmp
pop
hlt
xchg
rolb
inc
fwait
adc
jae
ficoml
dec
mov
fldt
mov
pop
pop
inc
inc
lcall
jbe
test
mov
incl
loop
or
or
aas
sub
or
call
lahf
lock
sub
rorb
mov
jle
sahf
out
inc
mov
in
in
mov
adc
xchg
pusha
jb
cmp
test
mov
add
sub
xchg
adc
outsb
ja
jl
adc
shll
jmp
sub
aam
xor
daa
adc
and
lock
mov
cwtl
mov
cs
pop
xchg
inc
mov
push
mov
cli
mov
push
cli
push
inc
les
hlt
pop
jnp
mov
mov
insl
add
out
cmp
push
out
shrl
inc
fiaddl
scas
pop
mov
ja
inc
mov
mov
jle
int
xchg
pop
cmp
sahf
adc
jecxz
arpl
dec
dec
adc
add
shlb
mov
push
clc
add
icebp
xor
pop
or
sti
and
adc
mov
sub
nop
sbb
add
js
jbe
jp
out
in
jo
and
add
lds
cmpsb
repnz
jle
sbb
sahf
xchg
rorb
cmpsb
pop
stos
in
push
movsl
lock
mov
mov
out
cmp
icebp
sub
lret
addr16
and
xchg
orl
sbbl
mov
ds
mov
jmp
hlt
cmpsl
push
fiaddl
lods
loopne
gs
into
mov
add
push
jno
scas
push
insl
push
dec
add
cltd
or
mov
testl
fisubrs
fcmovnu
mov
aam
mov
push
sub
clc
test
xchg
sbb
pop
adc
loope
sub
or
sub
pop
push
daa
mov
mov
lahf
cmpsl
lods
enter
stc
pop
rorl
adc
ret
lcall
or
mov
mov
pop
xor
sbb
jmp
cs
cwtl
cld
mov
subb
in
cwtl
lahf
loopne
lods
add
int3
lahf
xchg
or
dec
push
sbb
dec
repz
add
mov
imul
or
mov
xchg
sahf
outsb
rorl
aam
movsl
jg
in
cmp
xor
xor
notb
xchg
mov
hlt
into
test
push
insb
filds
lahf
roll
aam
push
jno
dec
push
dec
inc
stc
xchg
jle
es
and
push
push
push
push
lock
out
mov
cmc
xchg
nop
push
scas
cmpsl
or
test
or
cmc
rorb
adc
mov
cmpsb
pop
scas
loope
mov
mov
popf
rcrl
repz
pushf
push
xor
add
jns
sbb
fimull
add
fisubs
test
cld
stos
out
in
pop
daa
cmp
lcall
push
pop
repnz
dec
jbe
xchg
fnsave
pop
shrb
decl
frstor
outsb
push
sahf
inc
adc
mov
pop
ficompl
movsl
clc
jge
xor
dec
in
xchg
pop
mov
shrb
mov
lret
jb
into
inc
clc
mov
push
ss
rclb
xchg
cmc
inc
lret
push
aaa
xchg
jle
or
add
adc
mov
dec
lods
sbb
xor
int3
or
jne
push
cli
mov
in
pushf
push
mov
inc
xchg
lret
fldenv
jecxz
xchg
push
fimuls
addr16
jb
mov
pop
mov
dec
lea
repz
dec
mov
inc
cmp
ss
jne
jnp
ss
inc
add
cmp
adc
add
lcall
jbe
fcoms
pop
inc
fcomps
nop
negl
dec
into
aas
sbb
jg
stos
adc
xor
xor
adc
inc
bound
leave
adc
or
jae
nop
push
or
ret
std
subl
into
jecxz
popa
insl
jp
mov
xchg
mov
mov
ret
and
dec
and
mov
insl
jnp
mov
imul
mov
jle
cmp
mov
shll
and
fsubrl
pushl
test
test
popf
lods
lret
orl
adc
js
movsb
cld
cmpsb
jmp
movsl
pop
lods
push
add
cmp
es
mov
add
movsl
cmp
jmp
div
sti
inc
xchg
cmpsb
fidivs
adc
scas
rcrl
leave
pop
rol
mov
and
adc
push
dec
out
lcall
xchg
testl
leave
das
sti
sub
sbb
notl
pop
or
ss
mov
jl
fs
adc
popa
push
sub
das
sar
cmp
imulb
jl
pop
jmp
sbb
mov
mov
or
ret
sarl
loop
dec
mov
jns
or
fisubl
and
mov
addr16
mov
std
mov
jle
pop
mov
mov
push
inc
mov
add
ljmp
add
jecxz
rol
push
in
call
js
cmp
fs
fmuls
clc
add
lea
aam
lock
fcompl
mov
pop
mov
shl
aad
cmp
pop
into
mov
out
and
icebp
jmp
movsl
xor
out
jl
add
push
pop
add
stc
scas
lock
push
xchg
leave
lahf
lods
outsb
sub
mov
shrb
cmp
xlat
aad
lods
pusha
jbe
push
mov
inc
add
sbb
scas
jp
jle
fldl
sub
popa
out
popf
movsl
dec
xchg
adc
mov
clc
insl
int
mov
jmp
ljmp
jp
shl
out
pop
int
data16
mov
ljmp
cli
fldenv
iret
or
jl
shl
sbb
inc
xchg
int3
adc
mov
or
dec
adc
sbb
sub
pop
xorb
inc
or
dec
in
inc
sub
mov
hlt
popa
loopne
push
mov
pop
push
imul
shrb
cmp
xchg
loop
cld
pop
mov
mov
adc
loop
repz
stc
mov
mov
cltd
in
repz
push
aas
pop
pusha
mov
push
bound
out
dec
icebp
jecxz
dec
push
pop
and
stos
or
mov
pop
movsl
pusha
dec
aad
push
nop
insb
inc
ss
or
pusha
ss
inc
insb
cmp
shr
call
imul
xchg
push
leave
mov
jb
sub
sub
push
in
aad
add
repz
out
adc
clc
pusha
xor
jno
or
pop
sub
movsl
in
test
inc
vpsadbw
add
es
xchg
jg
sbb
pusha
add
sub
das
jmp
insb
push
rorl
jmp
loope
pop
bound
sbb
pop
js
sub
repnz
mov
add
test
outsl
lods
cmpl
iret
mov
push
or
or
mov
lods
mov
adc
xor
in
roll
test
aad
outsl
sbb
mov
in
fists
cmp
mov
jne
in
inc
shlb
cmpsb
cmp
push
xchg
sahf
cmpsb
cwtl
lret
push
jns
pop
sub
clc
xlat
mov
scas
psadbw
or
mov
xchg
mov
jg
insl
inc
psubd
int
xchg
push
das
hlt
mov
pop
push
mov
fcmovbe
adc
aam
pop
andb
jmp
movsl
push
and
xor
xor
mov
mov
arpl
insl
sbb
ja
push
das
jle
mov
mov
mov
ret
sub
in
mov
cmpsb
jp
aas
pop
das
sahf
mov
repnz
add
mov
push
add
adc
cmp
xor
pop
add
mov
and
movsl
ss
cmp
sbb
loop
jne
cli
mov
mul
fidivs
lret
adc
fbstp
test
adc
rorl
mov
movsl
sbb
mov
mov
lret
sub
or
pop
jb
fadd
call
cmp
jbe
hlt
mov
mov
int3
les
pop
mov
fnstcw
cltd
xchg
mov
dec
push
jmp
lea
je
dec
mov
mov
sub
jne
cltd
leave
decb
inc
stos
ror
out
push
adc
pop
dec
lds
imul
xor
subl
mov
loop
stos
out
cs
xor
in
jmp
xor
jg
and
adc
jg
inc
mov
imul
lcall
or
mov
insl
mov
mov
mov
lcall
lods
push
sti
ljmp
movb
jae
cwtl
movsb
jp
sub
addr16
pop
rcrb
daa
adc
add
sbb
in
jle
outsb
pop
shrb
xor
ret
mov
cmp
jno
jle
outsb
lods
sub
push
sub
movaps
push
xchg
push
es
fsubrs
into
adc
xor
fimuls
lcall
adc
insl
cmp
push
pop
mov
cmp
inc
dec
shrb
test
scas
cmp
add
pop
jmp
mov
xchg
aaa
push
int3
aam
imul
hlt
hlt
js
adc
test
mov
push
jge
mov
jmp
xchg
pop
cld
das
inc
adc
jl
popf
jmp
lods
xchg
arpl
das
mov
adc
out
jno
ljmp
cmp
and
fisttpl
push
daa
daa
bnd
add
xchg
lds
mov
cmp
arpl
rcrl
scas
fiaddl
imul
test
fdivrl
push
lcall
fisubrs
xor
and
aaa
sub
lret
adc
imul
out
fstl
scas
frstor
or
sbb
cmp
xor
cmc
cmp
movsb
add
je
in
sub
mov
push
inc
sub
inc
les
pushf
rcrl
adc
mov
movsb
loopne
push
or
xchg
enter
aam
lods
mov
jmp
pushf
andl
mov
and
sarb
loop
jmp
into
inc
pop
add
push
sbb
icebp
mov
jb
test
jle
imul
jge
ret
mov
mov
test
loop
mov
mov
mov
adc
rorb
xchg
aam
xchg
cmp
flds
inc
push
xorl
or
adc
aaa
xor
xor
rep
es
jbe
fwait
mov
pop
test
xor
cmc
in
addr16
push
jl
and
push
jb
int
xchg
cs
popf
loop
jno
mov
stc
shrb
sahf
xchg
mov
loope
jle
mov
fdivrs
add
add
lahf
frstor
call
cmpsb
mov
cmp
fs
mov
sbb
movsl
jae
jo
jge
mov
sbb
stos
sbb
fsubrs
ljmp
in
pop
sbb
or
xchg
and
loopnew
jmp
out
faddl
outsl
xchg
push
xchg
icebp
sub
int
xor
imul
xlat
lret
sbb
xchg
and
inc
pop
mov
movsb
lds
pop
outsb
sbb
xor
mov
cmp
inc
mov
push
xor
icebp
inc
mov
dec
js
mov
sbb
jp
xor
shr
popa
lods
mov
cmpb
ja
in
inc
shl
xchg
xchg
and
push
fdivrs
adc
push
push
jmp
xchg
jl
jge
call
test
mov
cmc
dec
jbe
leave
push
ja
jne
mov
mov
jno
dec
cwtl
es
or
rol
jg
pop
pusha
inc
dec
in
imul
sti
adc
mov
sub
int
xchg
cltd
add
test
aad
lods
ds
or
je
mov
sbb
inc
dec
call
mov
jbe
fwait
out
stos
aad
arpl
pop
aaa
jnp
rcrb
jne
psubusw
pushw
shr
cmp
lret
jbe
and
or
sub
jmp
gs
mov
arpl
jmp
test
jne
gs
and
mov
sbb
fldt
scas
xlat
dec
jmp
out
cli
xchg
lock
lcall
movsb
sbb
in
test
adc
and
cmp
add
mov
pop
lcall
inc
adc
aam
push
dec
jp
mov
lcall
adc
pushf
outsb
inc
movsb
stos
mov
xchg
mov
add
addr16
imul
repnz
dec
mov
sub
movsb
adc
fs
cmp
push
sbb
and
adc
cmp
add
mov
xchg
pop
arpl
add
clc
addr16
mov
lahf
xor
les
subb
dec
inc
call
out
or
push
cmp
dec
jge
jge
scas
ljmp
enter
dec
jns
aad
repnz
adc
in
jmp
mov
jbe
jecxz
lcall
pop
fildll
xlat
jecxz
push
call
mov
jns
xor
mov
cmc
in
mov
and
je
lahf
xchg
jecxz
jl
jns
pop
in
jns
fdivrs
xchg
cwtl
movsl
pop
fwait
jl
scas
stc
jnp
dec
test
pop
movsl
push
mov
pop
dec
jg
icebp
mov
ja
jmp
ret
jo
inc
dec
push
push
jne
incb
aad
pop
out
insl
ss
aaa
fsubrp
jge
pop
std
xchg
imulb
out
sahf
mov
adc
jbe
cwtl
inc
scas
jno
cwtl
adc
xor
ljmp
test
and
mov
pusha
push
mov
test
insl
bound
jge
jno
pop
idiv
rcr
push
push
mov
mov
dec
inc
dec
cmp
out
sti
pop
sub
dec
pushf
rorl
negl
lds
xchg
xorb
sti
mov
mov
popa
ss
pop
push
cwtl
dec
dec
jb
jge
cmpsb
xchg
xchg
cmp
mov
call
test
mov
add
insl
or
outsl
ud2
mov
mov
adc
repz
inc
adc
push
scas
adcl
jbe
mov
lock
and
adc
jecxz
in
fldt
push
add
pop
xor
icebp
sbb
add
xor
in
or
les
add
aaa
rcll
out
mov
repnz
loop
xor
sti
inc
pop
pushf
or
ja
or
lea
sarl
scas
frstor
mov
pusha
aam
mov
mov
mov
adc
inc
mov
les
inc
sbb
cwtl
push
jno
add
add
gs
addr16
xor
movsb
ror
fcmovnbe
mov
add
lods
repnz
push
mov
dec
xchg
leave
aas
cli
sbb
and
repz
popf
mov
xchg
jne
sbb
outsb
ds
sub
jns
cwtl
js
adc
pop
scas
out
sbb
sbb
imul
fisttpl
aas
dec
daa
push
cmp
add
shrb
fidivl
push
in
and
push
ret
sbb
notl
fildll
gs
add
cld
push
and
or
fwait
sub
cmp
incb
imul
mov
mov
cwtl
adc
subb
adc
xchg
cmovle
leave
test
insl
add
lds
jae
mov
fs
mov
popf
cli
loopne
sti
push
sub
outsl
mov
add
push
aad
xor
xchg
add
pop
xchg
gs
scas
and
xchg
shrl
mov
xchg
icebp
lds
stos
mov
imul
cmc
mov
xchg
jnp
cmp
mov
sbb
add
outsl
xchg
jae
insb
in
pop
testb
adcl
ficoms
or
popf
xchg
nop
je
gs
roll
sub
pop
cmp
jno
pop
cmp
sub
cmp
into
xor
jae
mov
push
ds
idivl
mov
sahf
decb
jmp
outsl
xchg
mov
dec
push
and
push
sar
dec
or
mov
sbb
add
idiv
roll
push
jge
sub
push
mov
sub
or
and
or
mov
mov
adc
and
push
lcall
shlb
in
sub
inc
mov
mov
cli
fs
or
or
enter
repz
push
mov
jge
hlt
push
pop
repnz
outsb
cld
adc
jb
xchg
mov
int
dec
jns
push
mov
sub
mov
mov
mov
js
mov
jno
ret
repz
sbb
sub
adcb
mov
outsl
xchg
cmp
xchg
and
clc
push
nop
xlat
dec
hlt
mov
inc
jmp
shll
test
in
dec
adc
mov
jge
sbb
mov
inc
mov
xor
pop
mov
dec
in
sub
mov
cmpsb
mov
add
pop
lret
fwait
enter
addb
and
inc
sub
jno
bound
into
mov
push
sub
sbb
dec
mov
add
loopne
dec
mov
fdivrp
ja
stos
mov
inc
cwtl
sahf
lds
mov
fwait
pop
test
mov
mov
jbe
fdivrl
inc
fwait
dec
mov
cmp
notl
dec
incl
hlt
adc
dec
repz
leave
data16
push
push
or
mov
or
and
fsubp
sbb
dec
sbb
jge
and
call
movsb
mov
pop
movsl
arpl
movsbl
mov
jge
jecxz
cmpsl
push
cltd
int3
inc
push
dec
fwait
xor
dec
sub
iret
mov
shlb
jae
mov
ficomps
popa
fidivs
cmp
adc
sbb
mov
imul
jne
fisttpl
add
movsb
inc
notb
imul
cli
je
in
ljmp
out
sti
xor
ret
movsb
jb
sar
loopne
sti
insl
or
adc
inc
xchg
xor
das
cmc
mov
dec
dec
jmp
sub
lods
and
cmp
or
daa
fisubrs
and
xlat
pushf
lahf
repnz
movsb
sbbb
shl
pop
xchg
lods
scas
stos
cwtl
inc
out
aas
inc
add
mov
mov
je
cs
imul
in
lds
movsl
aas
jbe
pop
cwtl
aaa
or
xor
xor
jo
cmpsb
movsl
push
pop
int3
add
xor
mov
mov
pop
add
add
std
cld
je
mov
stc
mov
test
and
inc
fisttpl
add
imul
inc
mov
fwait
jecxz
push
cld
xor
cld
mov
mul
out
or
mov
xlat
fistpl
sub
cli
jno
push
pushf
loope
sbb
repz
es
add
jo
or
orb
subl
dec
mov
cmp
mov
push
xchg
mov
xor
pop
imul
mov
popf
pop
jo,pt
or
dec
loope
mov
pusha
cs
add
push
lret
cmp
incb
mov
call
pop
lret
in
mov
cmp
jmp
add
and
andb
push
cwtl
les
mov
lods
ljmp
repnz
hlt
push
lret
adc
jmp
push
adc
sub
stos
or
in
dec
fxam
div
enter
mov
popf
jmp
mov
aad
cmpb
xchg
lahf
xor
mov
dec
push
rorb
movsb
cmp
push
cmp
and
clc
inc
mov
hlt
push
jle
adc
lods
mov
push
mov
call
into
mov
jmp
dec
arpl
jne
in
xor
mull
scas
cmp
mov
mov
leave
out
rorb
insl
sub
in
and
cmc
sub
push
sub
add
sahf
movsb
je
jns
xchg
into
gs
lods
mov
xor
pop
xor
mov
movsb
aam
pop
sub
jmp
and
xchg
jmp
mov
add
iret
xor
or
xor
push
je
mov
rclb
xchg
ret
ret
lock
xchg
addl
jg
adc
lock
lea
cltd
cmp
jbe
mov
jae
daa
mov
movsb
bnd
leave
cmpl
lds
imul
jmp
sti
cmp
sub
push
rclb
pop
addr16
dec
cmp
lret
jne
inc
mov
lret
inc
xchg
sub
add
hlt
aad
mov
xchg
inc
sbb
push
fcomps
push
push
dec
mov
loop
cs
jle
inc
and
inc
mov
pop
jmp
xchg
sub
repz
add
ret
xchg
sub
int
movsb
loope
insb
jno,pt
push
lcall
sbb
in
sub
xor
pusha
dec
jnp
lds
lock
xor
jmp
subb
sahf
fnstsw
cmc
lds
in
andl
xchg
push
jmp
and
sbb
mov
add
sbb
popl
sub
aas
jb
in
pop
adc
icebp
aad
hlt
mov
pop
pop
dec
fisubs
enter
test
jl
call
pop
inc
mov
std
xchg
fcoms
xor
adc
push
or
imul
xchg
jb
rol
push
inc
xor
inc
nop
or
jl
sahf
pop
test
sub
cwtl
inc
scas
pusha
mov
negl
mov
cmp
nop
in
pop
mov
xchg
xchg
mov
push
leave
pop
int
pop
inc
fimull
sub
popf
xorb
push
add
js
dec
jmp
sbb
nop
out
xor
sub
xchg
insb
pop
cmp
pop
sti
sub
test
dec
push
repnz
xor
lahf
jle
adc
pushf
xchg
daa
pop
int
cli
js
lock
mov
orb
movl
fsubr
dec
ret
andb
mov
sahf
scas
mov
testl
push
xchg
insb
icebp
mov
inc
int
xchg
xor
mov
lahf
lock
sbb
add
mov
push
xor
lcall
push
or
cmp
inc
sub
stos
hlt
mov
mov
imul
pop
and
ret
shr
sti
enter
push
add
outsb
mov
repz
ret
test
inc
bound
xchg
cmp
dec
sbb
shll
lret
mov
out
sbb
xor
jp
push
lahf
js
cmc
mov
sbb
out
pop
pop
jp
mov
xor
push
movsbl
adc
add
imul
push
in
inc
push
jb
add
popa
icebp
sub
stc
cs
jl
or
faddl
jp
mov
adc
push
stc
mov
mov
leave
push
les
cs
jbe
lret
cmp
xor
mov
inc
push
lods
shrb
inc
cld
xchg
dec
push
mov
jns
adc
pop
lcall
add
pop
push
jnp
enter
hlt
xor
dec
xor
addr16
jle
add
dec
jp
jmp
push
loope
in
iret
clc
je
inc
adc
sub
test
dec
aam
enter
mov
jnp
test
mov
push
arpl
jecxz
ljmp
xor
xchg
jp
into
frstor
xorb
inc
mov
imul
xor
ret
mov
iret
sub
or
push
mov
xor
xchg
jg
in
mov
mov
inc
or
inc
push
rcrl
lds
aad
xlat
push
push
repz
or
inc
push
or
mov
andb
adc
and
icebp
lock
cmp
sti
sub
jo
jb
lds
daa
pop
mov
cld
xor
aas
idivl
cs
call
jae
shlb
mov
sbb
rorl
xor
jge
pop
push
daa
out
repnz
shll
and
sub
ljmp
ret
push
psubq
sarl
cmp
mov
sar
jb
mov
scas
test
fwait
cmpsl
and
enter
arpl
cs
lock
jle
jp
lods
xor
sub
daa
add
mov
cvtps2pi
loop
sahf
cli
adc
jo
popa
push
js
mov
scas
sub
cmp
stos
cwtl
stos
bound
outsb
dec
lcall
push
fnsave
inc
jl
xor
int
lahf
xorw
fiaddl
insl
lods
ja
shlb
stc
xor
jecxz
push
mov
decl
cmp
mov
mov
das
outsb
es
xchg
int3
sbb
pop
mov
fildl
sub
push
loopne
int
jb
test
pop
pop
loope
mov
iret
aad
ffreep
lods
lock
push
xchg
jg
dec
out
cmp
jnp
sahf
in
mov
test
add
hlt
cmpsb
mov
jp
aam
pop
xor
roll
icebp
fmulp
pushf
mov
xchg
aaa
lods
xor
adcb
dec
sub
or
pushf
xchg
inc
mov
leave
gs
imul
inc
push
jbe
in
dec
ds
pop
dec
mov
mov
aad
sub
leave
sub
imul
jne
inc
pop
cmp
mov
mov
shrb
jne
clc
cmpsl
push
movsb
cmpsl
outsl
pop
mov
jb
xchg
jle
pop
int
data16
push
cmp
mov
pushf
sub
adc
sbb
inc
or
jno
dec
daa
push
clc
mov
sbb
mov
push
into
adc
mov
push
and
out
jo
lahf
std
rclb
ljmp
cmp
dec
mov
cmp
xchg
pop
les
inc
in
out
sub
into
fdivs
imul
jbe
jle
pop
int3
inc
adc
test
je
dec
in
idivb
lods
push
js
push
jg
sub
jp
inc
xchg
push
test
xorb
subb
xchg
push
outsl
je
xchg
dec
jmp
mov
lcall
mov
cs
pop
test
in
out
sbb
mov
pop
sti
and
or
out
inc
xchg
les
icebp
incl
sti
cmp
xor
jl
bound
pop
aaa
test
and
sti
in
out
dec
movsb
arpl
xchg
lret
lret
push
loope
ljmp
or
aas
mov
cmp
mov
fiaddl
aam
out
dec
add
scas
subb
addl
xor
or
mov
jp
sbb
nop
pop
cmp
mov
add
mov
adc
movsl
mov
mov
xchg
mov
cltd
in
iret
loopne
cmp
pop
insl
fdivrl
in
in
lret
push
sub
scas
pop
mov
jecxz
cmp
jl
pop
jo
out
pushf
push
loop
dec
jbe
adc
mov
ljmp
fldl
adc
xchg
das
mov
xor
xchg
inc
inc
add
outsb
xchg
xor
pusha
divb
or
mov
cmp
lahf
mull
or
inc
fs
add
adc
in
cld
sbb
xor
pop
icebp
pop
pop
inc
in
testb
fwait
cs
jae
push
push
test
je
jnp
insb
dec
and
mov
fcoms
inc
adc
aam
inc
clc
mov
jecxz
sar
lahf
push
and
xchg
mov
out
lahf
mov
daa
ret
pop
fs
and
xor
fdivl
loop
clc
js
test
jno
mov
xchg
xchg
stos
xchg
filds
jnp
and
sbb
sub
push
orb
jmp
dec
push
mov
push
in
fsubs
and
xor
ja
adc
or
mov
sbbb
jnp
mov
adc
scas
es
bound
sarb
jae
iret
pusha
push
fisubl
jno
mov
sti
xchg
rcll
cmp
pop
ljmp
push
jle
mov
inc
mov
out
and
sarb
clc
sub
repnz
xchg
call
cmpb
xor
xchg
mov
cmpsl
out
out
fistps
pop
lock
sbb
and
jb
adcl
add
stc
jle,pt
xor
rcll
or
std
out
jle
es
add
in
loopne
or
inc
xor
xchg
enter
movd
cmp
push
popf
inc
mov
das
push
dec
add
jns
sbb
sbb
sbb
xchg
jb
fldt
es
cmc
or
popf
push
pop
and
lret
push
mov
fsts
ljmp
sub
and
push
jns
cmpsb
addr16
xor
cli
xchg
clc
push
test
xchg
xor
xor
dec
outsl
push
out
sbb
push
or
push
cli
mov
cmpsb
jae
cwtl
cmp
pushf
xchg
mov
adcb
scas
cmc
into
push
push
xchg
sbb
push
fildl
sbb
xor
cmc
shll
enter
push
daa
orl
cwtl
enter
push
xor
sbb
jmp
pop
adc
or
or
lock
jnp
movsb
in
mov
mov
adc
arpl
sar
in
scas
sbb
dec
test
into
fidivs
movsb
add
sub
or
aaa
idivl
es
lcall
loopne
das
pop
jo
mov
cmp
add
sbb
hlt
imul
sbb
scas
push
je
cwtl
lods
or
mov
adc
popf
cwtl
push
lret
or
mov
fsubrl
dec
cs
nop
add
pop
cmp
pop
fistpll
clc
cmpsl
add
movsb
inc
dec
ret
rorl
mov
dec
lret
inc
mov
stos
push
in
aam
arpl
bound
lods
popf
aas
fnstsw
add
in
hlt
jle
mov
cmp
or
gs
jecxz
or
pop
adc
stc
scas
sub
or
in
jnp
pop
push
loopne
and
mov
push
lods
js
jmp
idivb
xor
dec
mov
sub
lret
loope
pop
or
shlb
in
into
cwtl
cmp
and
int3
push
adc
pusha
mov
xchg
sbb
xor
xchg
inc
es
sub
adc
jmp
stos
jmp
xchg
dec
mov
pop
lods
into
mov
lods
push
jo
add
mov
out
dec
mov
orl
outsb
aad
sbb
cmp
mov
hlt
adc
push
sub
fsubrl
sbb
nop
cltd
push
outsb
add
mov
mov
aaa
xchg
jbe
clc
push
add
mov
lret
inc
jecxz
sub
push
cmpsb
dec
push
add
sahf
fwait
dec
sub
aad
push
int
dec
insl
test
xchg
cmp
fwait
lcall
mov
les
jbe
mov
or
xor
das
das
aas
imul
dec
push
pop
mov
je
movsb
pop
mov
add
lock
ffree
je
incb
mov
sub
pushf
inc
cld
rcrb
decb
ret
cmpsb
jecxz
sbb
faddl
sub
aad
mov
jno
mov
mov
cmc
pop
fwait
cmpsb
push
fxch
adc
or
test
sbb
xor
jp
clc
or
out
jae
and
movsb
xor
cli
jge
insl
and
aad
jns
mov
movsb
adc
sub
add
cmpsl
xchg
daa
jge
fisubrs
cltd
ljmp
faddl
dec
xchg
inc
cmpsb
clc
xor
mov
xchg
loopne
sub
jbe
mov
aam
xchg
in
or
push
xor
addr16
pushf
inc
adc
dec
xor
inc
ja
int
mov
adc
mov
insl
std
roll
addr16
fldt
sbb
bound
lahf
clc
sub
and
or
pop
out
jg
push
shlb
fistpl
add
cmp
push
cltd
ss
addr16
push
mov
or
cltd
pop
test
faddl
fwait
pop
fdivs
orl
stos
mov
sub
leave
or
push
mov
test
mov
xchg
mov
adc
and
into
jp
mov
mov
pop
and
mov
mov
jp
stos
mov
pop
xchg
loope
sub
repnz
lret
sub
pop
cld
lcall
loope
mov
cs
sbb
push
fistl
sub
adc
mov
lret
adc
xor
or
out
cli
or
test
aad
nop
jb
ret
idivl
mov
mov
mov
in
sbb
and
xchg
sub
scas
adc
mov
test
inc
fwait
push
mov
pop
xchg
int
stos
xor
mov
mov
int3
mov
insb
push
cltd
ficompl
pop
pop
xchg
pop
ja
sahf
add
dec
in
pop
repnz
arpl
xchg
mov
adc
xchg
push
pop
sbb
stos
fimull
and
cmp
adc
test
les
xchg
cmpsb
inc
xchg
subps
bound
insb
mov
xor
rcrl
and
movsl
out
out
rcl
jbe
stc
ss
mov
adc
pusha
lahf
mov
adc
aad
xchg
outsl
jecxz
int3
lret
mov
je
lret
gs
cmp
sbb
lret
xchg
mov
test
bound
jp
pop
lcall
cmpsl
xor
out
cmpsl
mov
andb
mov
pop
enter
xor
mov
addr16
push
mov
mov
shrb
cld
into
adc
out
and
mov
test
in
jbe
das
stos
lods
aas
cmp
lcall
lock
adc
pop
loop
lock
inc
scas
in
arpl
adc
xchg
lret
sarl
xchg
notl
movsl
sub
push
test
pushf
mov
orb
push
shrd
jmp
nop
fwait
push
loope
dec
mov
iret
in
es
jb
fcmovnb
jg
movsb
invd
xor
xchg
mov
xor
xor
cmp
push
push
daa
xchg
inc
jp
into
into
pop
push
sahf
popf
mov
fisttps
data16
mov
shr
push
mov
cmp
cmp
addr16
xchg
adc
push
ss
sbb
jmp
outsb
fwait
push
and
sti
pusha
in
pop
sub
adc
and
pop
xchg
sub
cld
cs
pusha
xchg
loop
aam
xlat
or
mov
aas
ficoml
mov
mov
cmpsb
or
sbb
punpckhbw
outsl
clc
cli
xlat
popa
stc
jo
loop
sbb
mov
mov
rcll
in
data16
pop
mov
mov
sub
dec
mov
pop
mov
mov
imul
dec
mov
cmp
xchg
sbb
sub
cmpsl
inc
es
test
shll
push
mov
pusha
xchg
cmp
mov
sbb
cmpsl
rorb
mov
sub
scas
test
stos
mov
inc
xor
or
push
xor
mov
mov
stos
cmpsb
popl
mov
sub
enter
xchg
sub
icebp
adc
pop
scas
jb
xor
jmp
pop
insb
sub
gs
add
insb
jl
cmpsl
stc
repz
fdivl
and
fincstp
sub
push
mov
ljmp
ret
cld
mov
imul
mov
cld
inc
lea
test
fwait
add
div
push
in
pop
sub
mov
xorb
mov
ret
in
jns
fsubrl
int
jle
add
lods
and
dec
pop
fwait
cmp
inc
ficompl
ficomps
mov
mov
mov
test
arpl
mov
in
sarb
aad
rorb
mov
dec
adc
popf
movl
cmpsb
sti
imulb
popf
pop
and
push
insl
fdivrp
inc
inc
bound
popf
pop
adc
lods
daa
std
cmp
leave
leave
lods
mov
cltd
out
mov
xchg
test
mov
push
enter
or
outsb
jp
aas
in
in
or
std
mov
mov
push
fs
push
jns
sub
sbb
jp
mov
xor
das
ljmp
and
lea
sahf
jo
rcrl
adc
add
jp
std
sbb
cli
inc
sub
jne
sti
hlt
push
icebp
sahf
pop
or
cltd
xlat
pop
or
mov
mov
pushf
and
lds
test
into
aas
push
push
inc
xlat
dec
aad
cmp
sbbb
jp
sbb
rcrl
in
xor
pop
inc
sbb
jae
cmpsb
and
mov
sahf
inc
xor
add
pop
sbb
jo
imulb
in
jno
cmc
cmp
sbb
icebp
mov
add
xor
data16
fimull
xchg
jg
xchg
lock
mov
loope
jae
xchg
jo
loopne
nop
imul
jge
jecxz
mov
sti
int
xlat
and
pop
jb
mov
mov
int
jb
and
inc
mov
dec
xor
out
jg
push
sub
inc
ret
mov
jno
movsl
sub
arpl
adc
mov
repz
andl
sub
adc
ror
repz
sbb
adc
out
xor
pop
cs
jnp
int3
insl
cmp
into
bound
stos
outsl
mov
pop
loope
push
mov
and
pop
jae
sub
xor
daa
test
das
jb
inc
pop
pop
cltd
in
cmp
test
xlat
pop
push
adc
jbe
out
sbb
andl
sbb
inc
push
cli
push
sarb
enter
inc
sbb
fs
stos
imull
push
add
xor
xchg
add
xor
pusha
xchg
and
aad
aas
xchg
cld
xchg
pop
mov
adc
jl
mov
into
add
loop
ss
sbb
add
fsubrs
add
repz
clc
repnz
jbe
divb
imul
les
mov
cld
loopne
xchg
dec
mov
adc
icebp
push
fstpt
cmp
mov
lods
pop
sbb
stos
or
xlat
cmpsl
roll
inc
outsl
dec
std
ret
gs
out
pop
jmp
jae
shl
ja
std
stc
imul
and
mov
shl
mov
cltd
test
cmp
cltd
xor
aaa
xor
sub
lahf
in
repz
sbbl
dec
out
sbb
inc
xchg
insb
mov
cmp
xchg
cmpsl
fimull
cmp
movsb
mov
daa
and
jae
mov
shl
inc
xchg
int
fcmovnbe
mov
dec
out
inc
orb
pop
aam
jns
push
fwait
jno
rcll
xlat
cmp
pop
inc
icebp
mov
push
inc
cltd
inc
inc
sahf
xchg
ja
clc
sbb
mov
mov
or
icebp
icebp
int3
rcl
cmc
sub
or
push
pop
or
jbe
or
dec
icebp
jmp
movsb
icebp
fsubrl
mov
in
pop
jge
neg
lret
xchg
jns
imul
sahf
test
sub
scas
imul
dec
adc
xor
mov
xchg
dec
pusha
xor
xor
push
pop
xor
movsb
or
daa
sbb
xlat
gs
test
lds
sub
inc
cmp
sub
and
pop
mov
fidivs
mov
or
or
jbe
mov
clc
mov
fcmovb
mov
fstpt
jge
jl
movsl
cmp
push
adcb
clc
lock
fiaddl
jl
adc
scas
in
cmc
in
popa
scas
lds
imul
jno
aam
fcomps
adc
mov
mov
lock
pop
lcall
ret
mov
cltd
fdivl
mov
movsl
bound
nopl
xchg
bound
sub
jns
fsubs
xchg
sub
inc
fucom
stc
cmovbe
addl
enter
sbb
addr16
js
loope
imul
xor
xor
push
loopne
insl
cld
cltd
clc
in
cmp
scas
roll
cld
std
shrl
dec
mov
cmp
subl
pop
sub
movsl
inc
fs
popa
aaa
adc
and
mov
bswap
adc
jno
orl
stos
enter
stos
movsb
mov
mov
dec
or
data16
test
dec
movsb
pop
and
test
sub
stos
fnstsw
sub
lret
dec
in
movsb
mov
mov
shlb
sbb
xor
push
dec
mov
scas
adc
insb
push
ljmp
out
inc
inc
std
mov
pop
inc
ja
sarl
pop
pop
jp
ss
enter
jecxz
push
lahf
xchg
cmpsl
clc
xor
mov
mov
jo
pop
or
push
cli
xchg
stos
jo
addr16
pop
cmp
cmp
test
ficomps
pop
pop
jmp
adc
inc
scas
add
xor
sub
arpl
in
fwait
sub
in
ret
mov
mov
dec
icebp
mov
mov
mov
sub
jno
pop
jle
ret
pop
sub
inc
mov
cmp
adc
shrb
es
push
movsl
push
rcrb
fistpl
int3
cltd
mov
les
inc
mov
movsl
inc
in
xchg
mov
xor
das
mov
push
push
xchg
mov
jmp
outsw
andl
insl
or
pop
mov
mov
add
jnp
mov
fisubrs
pop
sub
inc
jae
lock
jb
mov
sub
cli
repz
xchg
ljmp
sbb
inc
inc
out
push
je
jg
rclb
sub
std
xorb
call
jp
aad
dec
xchg
dec
push
insl
mov
adc
das
or
cmp
outsl
ljmp
inc
iret
jle
push
pop
mov
addr16
add
repnz
js
cmc
mov
adc
sub
lea
or
lcall
lods
adc
sbb
test
shll
ss
in
push
mov
cmp
jno
mov
xchg
or
popf
lcall
pop
clc
repz
mov
cwtl
jecxz
jne
inc
mov
lahf
pushf
xchg
iret
and
fisubs
xchg
cltd
inc
sahf
inc
mov
sub
xchg
add
mov
mov
rorl
push
aaa
push
and
lds
add
fistpl
test
xor
in
test
cs
and
sub
mov
push
out
push
xchg
daa
mov
clc
js
dec
scas
adc
xor
jnp
jo
sarb
stc
mov
or
fdivrl
cmp
sbb
mov
mov
divl
orb
xchg
dec
add
arpl
outsl
scas
cmpsb
mov
or
int
dec
fs
and
sub
add
int
popa
sbb
mov
popf
jecxz
addb
fst
lahf
loop
mov
fstp
into
popa
mov
xchg
xor
mov
fcmovnb
cltd
jne
mov
lret
loope
mov
bound
xor
mov
dec
inc
pop
add
pop
xchg
fisttpll
arpl
inc
rorb
out
adc
add
mov
out
inc
pop
mov
mov
clc
imul
add
inc
sub
jb
adc
rolb
xchg
pushf
push
xor
push
lahf
sbb
outsl
and
cmp
jmp
pop
cmpsb
aam
push
push
jmp
scas
jno
xchg
enter
mov
pop
mov
push
push
nop
inc
jmp
sbb
sub
into
jmp
ds
stos
jp
push
or
fcomps
rcrb
pop
rcl
mov
sub
sbb
das
cs
sbb
cwtl
adcb
fs
loopne
mov
mov
fcomip
call
pop
push
sahf
roll
jbe
sbb
test
sub
out
cmc
adc
inc
pop
pop
dec
out
jle
pop
loope
fisubrl
shr
aas
mov
sbb
call
push
pop
outsl
enter
xchg
aas
rcrb
movsl
inc
loope
add
ret
data16
sbb
mov
call
and
mov
inc
sbb
sub
and
xchg
std
popf
imul
mov
or
cmpsl
cmpsb
bound
in
sbb
sub
out
mov
xchg
push
mov
sub
lcall
xor
dec
inc
std
cmp
sbb
test
pop
cmp
dec
push
sbb
cld
dec
mov
ret
and
xchg
xor
pop
adc
iret
loope
cmp
leave
fisubrs
fdivrs
push
sub
icebp
daa
lret
rorb
fisubrl
push
movsl
lret
and
notl
or
out
jae
ja
stc
scas
mov
aam
and
adc
int
add
xchg
nop
call
jp
push
push
stc
arpl
jno
ret
inc
pop
mov
add
or
int3
cwtl
jne,pn
mov
jge
inc
cltd
repz
movsb
mulb
add
sbb
dec
out
dec
stos
lods
cli
dec
pop
mov
loope
mov
sbb
mov
xchg
leave
js
flds
insl
jle
inc
hlt
xlat
aad
cmp
mov
cmp
mov
ds
push
in
xor
aad
mov
call
xchg
test
ljmp
sbb
repnz
pop
dec
jae
addl
inc
lret
hlt
fnstcw
add
adc
sbb
jo
enter
push
shll
addr16
push
fcomip
into
jae
cltd
mov
xchg
sub
std
cld
inc
loop
mov
mov
lds
jae
lods
cld
mov
xlat
xchg
xor
cli
dec
ficomps
mov
xchg
aad
xchg
mov
inc
xchg
push
and
sbb
cmp
clc
int3
nop
hlt
inc
std
insb
sub
pop
out
mov
leave
cmp
lock
and
sub
lea
ja
sub
inc
lock
js
rol
jbe
pop
lea
add
add
shl
les
adc
and
and
ljmp
or
fwait
dec
jno
cmc
xchg
and
adc
jb
pop
mov
ret
clc
into
pop
or
pop
mov
pop
das
in
add
mov
rdpmc
clc
lahf
mov
bound
stos
ret
pop
adc
loopne
divb
repz
stos
mov
dec
pop
mov
pop
and
insb
xor
lea
jns
negb
sub
jnp
fiaddl
fcompp
in
into
fs
pushl
xchg
inc
lds
mov
adc
movsl
lds
add
iret
jl
xchg
push
negb
mov
add
sub
ret
jl
sti
sub
out
push
iret
inc
xchg
xchg
mov
xor
in
cli
mov
jle
add
push
or
sbb
rcrb
aam
test
dec
fstpt
mov
sbb
push
xor
jge
mov
cmpb
mov
aaa
dec
jg
mov
aas
mov
mov
jg
andl
add
imul
xchg
inc
ja
xlat
loope
dec
rcll
pop
pop
push
sub
push
jmp
xor
cmp
xchg
inc
xchg
pop
xor
mov
mov
xor
mov
pop
popf
into
fs
movsb
xor
lcall
test
loop
ret
xchg
int
dec
ljmp
dec
xchg
xchg
xor
sbb
lahf
hlt
mov
js
aaa
xor
cmp
jmp
cmp
outsl
inc
add
dec
add
push
dec
cmp
hlt
xchg
dec
inc
xchg
pop
sub
jp
push
adc
xor
sub
sbb
push
cmp
test
ret
push
push
fadd
xlat
and
not
push
loop
jg
cmp
mov
adcb
push
adc
aas
aad
sbbb
mov
insl
dec
fmull
jecxz
ja
xor
jne
jo
lcall
mov
adc
push
mov
push
jne
pop
cs
jo
data16
xor
pop
repz
dec
leave
push
xor
std
mov
jbe
lcall
fnstcw
sbb
lret
fst
jbe
fadd
repz
dec
sbb
mov
xchg
int
xchg
lods
mov
scas
lcall
jge
jbe
push
sbb
and
ret
push
adc
enter
ret
cmp
add
or
iret
jno
pop
push
xor
loop
sub
addr16
ret
ret
mov
add
js
test
aaa
rcr
sbb
sbb
sbb
ret
lods
or
inc
or
das
jg
mov
jmp
xor
stos
std
add
and
pop
gs
imul
xchg
pop
jl
arpl
pop
imul
dec
loope
jbe
push
mov
int3
popa
ja
nop
push
in
and
stos
xchg
inc
jb
jno
mov
mov
test
out
aad
ret
lds
and
in
jmp
cltd
jle
adcb
lods
fwait
iret
std
jl
sbb
data16
mov
test
xor
xor
scas
cmp
and
jo
pusha
and
adc
dec
inc
or
fisubrs
leave
jnp
add
and
arpl
mov
int
inc
xchg
imul
push
xor
lock
mov
std
call
xchg
not
dec
pop
push
jb
aam
jbe
jno
pop
int3
je
or
insb
sub
xchg
cmp
xor
inc
ljmp
fwait
lock
cmpsb
fsubrs
push
out
inc
pop
in
add
sti
adc
mov
shlb
std
cmp
adc
push
mov
adc
daa
orl
mov
mov
inc
mov
insl
mov
xor
push
push
adc
sti
dec
out
and
jle
in
or
adc
pop
push
inc
push
je
aaa
out
dec
jbe
data16
rorl
add
ljmp
lret
test
inc
out
ret
and
mov
xlat
dec
jno
mov
out
ljmp
mov
pop
or
add
xor
push
or
pop
add
mov
dec
mov
adc
cltd
sbb
in
pop
imul
jb
mov
imul
or
into
rorb
pop
push
aaa
fstpt
xor
loopne
bound
pop
dec
call
xchg
mov
nop
hlt
push
psubw
or
jae
inc
insl
test
jp
push
mov
inc
leave
dec
int
jp
out
adc
or
dec
push
xchg
fsubl
jo
fcom
inc
lds
inc
gs
arpl
in
jnp
test
adc
lea
mov
jae
icebp
shr
jle
cmp
pop
out
imul
mov
enter
repnz
jnp
mov
lcall
fs
ljmp
adc
mov
out
stos
setle
jnp
call
sbb
jns
fadds
add
std
add
ds
dec
repnz
or
rorb
ljmp
sub
jl
mov
mov
mov
ret
mov
and
push
out
add
pushf
or
out
pusha
popa
sub
std
call
pop
shlb
jo
jnp
mov
enter
mov
jns
cmpsl
sub
clc
cld
in
fcmovnb
xor
add
xor
cli
movsb
into
mov
mov
jp
mov
pushf
pop
dec
jge
aad
pop
push
inc
jb
jb
mov
cld
and
insl
out
add
sbb
out
jns
dec
jmp
test
pop
push
lock
xchg
insl
addl
out
pusha
rcrb
sbb
inc
mov
ja
inc
out
pop
mov
cmp
les
shlb
mov
aas
leave
mov
in
insb
dec
sub
mov
adc
ds
xor
mov
loopne
or
out
shrl
imul
mov
push
aas
movsl
call
outsb
or
insb
loop
int
sbb
lretw
xchg
pop
sbb
aad
jmp
cmp
inc
inc
shl
outsb
pop
hlt
dec
std
je
cmp
test
and
mov
je
sbb
loope
xchg
jne
clc
inc
pop
and
mov
mov
sbb
xchg
fdivrs
mov
scas
pop
test
xor
inc
lret
xchg
ds
pusha
fisttps
xchg
cmp
idiv
jns
sub
inc
push
notl
repnz
and
mov
lret
lea
ret
sbb
cmp
mov
pop
in
hlt
and
inc
fstpt
fistpl
sbb
stc
sbb
in
test
in
imul
movsb
sbb
cmp
push
stc
in
inc
mov
sbb
pusha
jmp
sbb
ja
mov
sub
shrb
imul
and
adcb
jecxz
int
and
insl
mov
and
ljmp
adc
sbb
mov
or
xchg
or
and
push
xchg
pusha
mov
divb
imul
add
pop
xor
add
mov
shll
push
adc
lods
sahf
subl
cmp
lret
dec
push
add
dec
jb
or
push
mov
xor
sarb
xchg
or
jne
pop
and
dec
jmp
out
push
stos
pop
stos
xchg
jle
imul
lods
dec
fadds
shlb
aad
mov
sub
call
cwtl
lahf
and
lret
mov
add
iret
jmp
sub
mov
cmpsb
mov
push
mov
sahf
into
cwtl
stos
push
mov
insb
int3
ret
pop
mulb
pop
jns
push
push
rolb
push
jae
mov
out
and
mov
mov
inc
xchg
xorl
lods
push
nop
mov
pop
jnp
add
cli
jbe
aas
jo
cmc
or
cwtl
dec
jbe
inc
cld
sub
add
xchg
adc
sub
dec
sarb
cwtl
jbe
shlb
or
sbb
inc
push
pop
loopne
pop
adc
sbb
mov
push
in
xor
ds
rcll
sbb
addr16
dec
cmc
and
or
adc
repnz
or
jae
ficoml
adc
jbe
mov
mov
hlt
movb
stos
cmp
pusha
jge
cld
mov
jns
xchg
mov
or
ja
mov
fbld
gs
pusha
bound
xor
fcoms
pop
mov
and
int3
and
int3
mov
ljmp
mov
cmc
jo
and
push
stos
adc
gs
sarl
mov
inc
rorl
pop
les
push
fdivrs
jmp
cmc
and
divl
popf
test
mov
aaa
push
movsb
push
jp
push
leave
or
aam
out
and
inc
fs
std
lret
repz
sbb
xorb
sbb
testb
or
dec
fs
cwtl
push
cmpsb
jne
test
lock
movsb
insb
cld
mov
hlt
shrl
lret
mov
loope
shrb
sbb
hlt
dec
inc
inc
dec
sbb
in
loopne
mov
aas
or
in
sti
mov
cmp
xor
insl
sbb
clc
sbb
inc
fstpt
inc
adc
sub
rcrl
pop
mov
pusha
arpl
pusha
cwtl
pop
push
fistps
out
inc
aas
inc
insl
or
dec
mov
sbb
mov
pop
jecxz
sbb
jae
sahf
pop
gs
int
icebp
int
jmp
icebp
ljmp
cld
in
sahf
xorl
adc
fidivs
inc
cltd
in
jge
push
mov
enter
fwait
adc
dec
int
sub
mov
std
mov
lcall
sub
cwtl
jae
test
insb
fstl
jge
lret
xor
sarl
xor
es
inc
or
mov
jo
or
popa
orb
gs
mov
in
mov
ret
pop
fstps
pop
fxch
push
movsb
cmp
jb
lret
mov
xor
lret
push
push
lea
cmpsb
push
fcoml
mov
sbb
pop
adc
in
idivb
jne
imul
fcoms
sbb
ret
pusha
lea
arpl
jg
mov
fiaddl
inc
jno
xchg
pushf
or
xor
ficompl
enter
push
adc
mov
mov
pop
cmp
mov
inc
xchg
lcall
push
mov
sahf
and
enter
sbb
sub
cmc
rcrb
xchg
data16
mov
outsb
ret
js
enter
aam
jno
cmp
mov
ljmp
adc
or
jno
imul
push
insb
mov
into
leave
movsb
mov
fwait
lahf
int3
call
inc
push
add
pop
call
cmp
add
pop
add
pusha
sbb
divb
sub
lret
ss
mov
das
lods
cli
gs
fcomps
xchg
sub
push
fisttps
lods
jns
mov
daa
nop
mov
mov
rcrb
test
mov
js
fsubl
loope
jmp
fs
inc
das
xor
shrl
les
mov
dec
adc
xor
mov
jnp
cli
stos
sbbl
mov
adc
test
rcr
sbb
add
mov
or
in
xchg
aad
pop
and
data16
negb
repnz
xchg
repz
cmp
mov
js
ja
xor
cmpb
movsl
jno
mov
jl
jp
in
pop
dec
ljmp
mov
xor
dec
outsl
xchg
xor
push
mov
add
xchg
mov
xchg
cwtl
sub
mov
pop
loope
popf
aaa
and
cmpsb
push
or
jp
jb
pop
test
jne
mov
mov
cmp
mov
nop
test
fidivrl
sbb
mov
icebp
cmp
jecxz
cltd
dec
xchg
lods
cmpsl
mov
jo
pop
mov
add
pop
dec
dec
popf
int
inc
inc
jmp
jno
orb
cmp
orl
pop
test
dec
int3
imul
inc
scas
je
les
lret
sub
xlat
aad
cmpsb
mov
call
lret
push
or
sbb
adc
icebp
sbbl
ds
mov
fidivrl
xor
jl
jecxz
lods
or
mov
push
out
stos
pop
pusha
outsb
pop
sub
push
jbe
push
sbb
inc
sbb
pop
sub
mov
pushf
mov
xchg
pop
test
je
rorb
test
aaa
inc
aam
sahf
dec
dec
cli
jbe
mulb
cwtl
ffree
pop
fcompl
sahf
push
bound
std
andb
test
int3
mov
mov
into
xchg
aam
sbb
and
addl
andl
loop
jbe
mov
ret
popa
movsb
scas
jbe
fneni(8087
mov
push
mov
lock
xor
add
fwait
adc
dec
adc
daa
cmp
dec
push
jo
out
jae
cmp
aas
out
xor
mov
jo
popa
xchg
push
int
fiaddl
loopne
mov
aas
dec
mov
das
and
adc
out
mov
rorl
cltd
aas
pop
push
outsb
hlt
mov
pop
mov
les
mov
mov
xor
dec
sbb
subb
xchg
jecxz
aas
vrcpss
icebp
cmc
jmp
in
mov
and
cmp
mov
push
mov
shlb
jo
hlt
mov
xorb
call
lea
sub
insl
aam
xchg
lcall
jns
shll
jb
stos
inc
jmp
in
loopne
cmpsb
imul
cmp
push
ja
ret
clc
mov
repnz
enter
mov
test
mov
cltd
mov
mov
and
add
cmp
jo
movsb
ffreep
pop
shlb
in
loopne
or
mov
sub
jae
int
cwtl
push
ljmp
ret
adc
clc
or
test
sbb
jnp
pop
bound
cmp
mov
xchg
shll
cmp
movsb
mov
aad
xchg
push
in
repz
repz
push
jnp
mov
inc
std
mov
movsl
sbb
pop
add
mov
pop
xchg
xor
jge
ds
push
fstpl
dec
es
push
push
rcll
xchg
mov
insl
lods
adc
push
pusha
push
scas
xor
divb
inc
ja
jecxz
test
repz
insb
cmp
push
jp
and
xchg
clc
dec
ljmp
inc
pop
fucomi
xchg
inc
mov
sub
jecxz
in
sbb
mov
cmpl
mov
fiadds
cmpl
add
cmp
cmp
iret
xor
ljmp
insb
sbb
mov
xor
cmp
shrb
dec
fistps
repz
shll
in
inc
call
outsb
subb
sub
xor
or
push
add
jle
lds
scas
outsl
pushf
sbb
push
mov
pop
cmp
mov
popa
sbb
or
fldenv
jge
cwtl
lahf
mov
insl
addr16
jb
inc
jno
jmp
test
pop
popa
mov
in
inc
stos
sub
filds
clc
cld
mov
push
fs
or
jbe
push
jne
add
movsl
adc
push
movsl
mov
mov
push
jns
fwait
inc
mov
inc
push
adc
aad
andl
lods
xor
movsb
ss
insl
jae
sbb
ret
movsb
into
sbb
adc
push
outsl
jno
fs
mov
jp
cltd
lds
pusha
lods
inc
pop
icebp
loope
sbb
sbb
cld
pop
sarl
fidivrs
inc
xor
jns
fsubrp
js
jle
sahf
mov
xchg
inc
lahf
outsl
inc
js
dec
orl
mov
cltd
jno
std
pop
clc
in
push
mov
in
or
jp
stos
std
push
movsb
inc
sub
stc
icebp
sbb
fsubrs
cmc
dec
ss
or
ror
loopne
sub
lods
test
sub
add
sbb
into
fstl
push
mov
add
xorb
or
mov
jge
fcompl
push
xor
inc
sub
xchg
cmp
lods
mov
repz
add
pusha
enter
not
cmp
inc
jbe
xor
ja
mov
jecxz
xor
sbb
pop
push
pop
mov
cmp
ret
sub
div
cmpb
rcll
xor
jb
dec
stos
shr
mov
in
and
mov
xchg
enter
dec
cld
push
jns
leave
adc
jmp
jnp
cmc
sub
sti
mov
orl
lods
ss
mov
xchg
push
rcll
mov
pop
push
adc
lret
push
test
xchg
repnz
js
iret
add
sbbl
lret
and
ljmp
cmpsl
cmc
adc
mov
lret
inc
pop
cmp
mov
shlb
sub
in
sbbl
das
in
push
les
and
clc
ljmp
and
pop
aam
or
or
sti
xor
fcompl
repz
movsl
mov
cmp
fwait
aad
mov
sbb
adc
lock
xchg
push
fimull
inc
jl
sbb
decl
mov
xchg
call
movsb
xor
push
iret
pushf
inc
mov
mov
and
adc
or
fbstp
push
pop
dec
mov
iret
call
cmpsl
push
add
jo
test
rcrb
jne
out
xchg
dec
scas
xchg
lret
lds
xlat
add
and
shlb
push
jns
sub
dec
push
mov
insb
fldt
inc
jl
notl
sub
out
dec
in
call
cmp
repnz
xor
xor
cltd
dec
cld
pop
or
xchg
cmpsl
mov
iret
clc
movsl
mov
rorl
cli
or
loope
inc
adcb
ret
adc
cmp
or
lea
arpl
fsincos
jp
fadds
in
inc
add
fwait
in
xor
add
inc
fs
fsubrl
xor
xchg
pushf
xchg
push
dec
lods
push
xchg
adc
cwtl
mov
jecxz
mov
test
decl
and
and
mov
cld
cmp
fists
adc
idiv
mov
push
pop
xor
mov
cli
adc
cmc
out
adc
icebp
movsb
or
inc
pop
adc
aam
arpl
inc
xor
out
add
fldlg2
dec
lds
sub
in
sub
xor
addr16
cmp
adc
sbb
ret
lret
mov
aad
xchg
mov
jecxz
es
data16
ret
fisubrl
pop
add
loopne
cmp
ds
adc
cmpsl
in
aaa
imul
nop
mov
push
sti
mov
lock
jns
out
add
sbb
dec
xchg
mov
or
adc
jns
mov
xchg
inc
fwait
ds
imul
inc
xor
outsl
sbb
jmp
fdivr
xchg
test
pop
sub
std
jae
xor
stos
enter
jg
outsl
adc
mov
mov
push
dec
pop
out
cmp
mov
loop
jge
mov
jmp
les
std
adc
std
fbld
ret
push
lret
stc
sub
jg
imul
push
jae
movsl
sbb
fimuls
inc
js
les
or
out
jbe
sarl
cmp
cmp
lock
push
leave
clc
push
ja
rol
jl,pn
xor
test
imull
lea
int3
pushf
push
shll
mov
test
mov
loope
mov
and
jnp
rcl
xlat
push
pop
cmp
repz
cmp
or
and
repnz
repz
sahf
aaa
imul
mov
jno
and
bound
pop
xor
rolb
cli
je
in
jg
mov
cmpsl
or
dec
leave
mov
adc
mov
outsl
push
xor
rcll
cmp
push
mov
xchg
add
mov
xchg
outsl
loopne
scas
mov
cmpsl
xor
xor
insl
jmp
fwait
add
stos
insb
in
mov
adc
pop
int
push
jl
push
inc
jb
sbb
into
push
stos
mov
ljmp
leave
mov
enter
outsl
adc
fildl
fbld
rorb
lret
jecxz
movsb
imul
in
idivb
pop
mov
jecxz
popa
jp
mov
fwait
jae
pop
pop
ss
jo
repnz
icebp
push
cmp
xchg
cmp
sub
xchg
aam
stos
lcall
or
div
add
cmc
or
fidivrs
push
add
aas
pop
jne
mov
pop
ret
fmulp
lock
cwtl
fsubl
jp
cmp
jne,pt
in
xor
ds
repnz
fsts
roll
call
mov
sub
mov
ret
aad
in
push
adc
in
xchg
in
cmp
sub
jno
cld
mov
lods
out
sbb
adcb
push
jne
inc
mov
and
push
mov
dec
fiaddl
insb
cwtl
mov
sub
and
push
mov
dec
jb
pushf
mov
iret
xorl
test
lds
xchg
cmp
icebp
sub
ds
dec
addl
adc
or
rol
sbb
mov
out
fstpt
xchg
push
pop
add
fsubrl
lahf
jle
les
je
add
popf
mov
xor
ds
call
dec
and
mov
pop
mov
idivl
pop
push
dec
mov
jl
mov
mov
cmp
adc
test
imul
rdpmc
insb
data16
cmp
lret
dec
xor
shll
loopne
push
add
clc
enter
and
fbld
dec
iret
push
jb
sub
imul
mov
push
pop
test
fbld
mov
dec
gs
mov
inc
jne
shlb
repnz
fs
pop
insl
push
test
push
add
mov
pop
bound
push
cmp
movsb
push
push
inc
sbb
shlb
sbb
push
or
push
push
adcl
sub
pop
fcompl
jo
stos
inc
jmp
cmp
mov
lds
sub
add
pop
xchg
dec
xchg
out
and
mov
fdivl
ret
pop
jae
sbb
mov
sbb
mov
mov
cs
inc
dec
dec
pushf
xchg
andb
popf
cltd
loope
dec
add
pop
inc
int
cmc
stc
in
roll
sub
data16
xorb
dec
cmc
push
mov
sbb
mov
in
jmp
mov
in
xor
test
push
or
scas
jp
das
jmp
dec
mov
mov
movsl
mov
ljmp
bound
push
mov
jb
aad
outsl
orl
ss
cltd
out
sbb
aas
push
or
or
adc
push
out
lret
push
mov
mov
mov
push
cmp
lds
lods
loope
cmc
das
dec
mov
or
jns
mov
lds
shr
inc
mov
adc
or
leave
push
add
inc
mov
in
xlat
ja
push
cmp
xor
xchg
ror
aam
out
ljmp
in
xchg
pop
and
mov
or
sbb
jle
dec
scas
aad
push
xchg
negb
stc
dec
das
and
xor
adcb
lods
mov
add
cmp
fmull
sahf
pop
dec
cmpl
xchg
mov
xlat
mov
cmp
out
lods
jle
arpl
mov
pop
sarl
int3
repz
test
pop
fsts
fisubrl
or
xchg
cmp
enter
test
scas
lods
push
out
sbb
lret
in
xchg
xchg
cmp
inc
lods
es
xlat
pushf
cmp
mov
outsb
fucom
cmp
sbb
imul
pop
popa
pop
stc
cmpsb
adc
lods
jnp
push
pop
les
rcrl
fnsetpm(287
inc
fisttpl
jnp
xchg
ret
faddp
daa
jns
adcl
ds
loopne
inc
pop
arpl
test
das
dec
add
orb
inc
clc
push
sub
sub
fs
sbb
dec
push
xchg
mov
ret
add
outsb
inc
lods
push
mov
adc
lock
push
push
inc
pop
inc
cli
mov
fsubrl
rcll
sbb
pcmpeqb
dec
repz
jecxz
add
dec
ja
in
mov
jns
subl
outsl
mov
int
jl
sub
insl
xor
imul
test
sbb
js
pusha
inc
test
into
aam
mov
adc
mov
out
inc
inc
das
aas
pop
and
fs
sub
ljmp
dec
fs
fdivrl
adc
add
hlt
adc
rcrl
sbb
out
out
xor
mov
pop
xchg
lods
pop
jl
mov
adc
rcrl
ss
loop
idivb
mov
out
inc
jb
cmpsl
iret
pop
icebp
movsb
mov
and
leave
fs
into
xchg
bound
sub
jns
mov
jl
std
jno
inc
xor
lcall
aaa
repz
mov
jmp
add
addl
rcrb
ja
fistps
mov
pop
push
fmull
negl
pop
movsl
dec
test
aaa
push
loopne
mov
mov
xor
add
xchg
loope
sbb
cmpsb
add
jae
imul
jg
int3
cmpsl
adc
iret
jmp
subb
lcall
jecxz
popa
xchg
xchg
xchg
pop
jg
or
cli
dec
mov
inc
jg
imul
and
frstor
sbb
enter
add
cs
imulb
cmp
pop
lcall
xor
jmp
inc
data16
in
mov
rol
xor
mov
popa
jg
or
dec
out
loopne
stos
mov
sbb
ret
lret
mov
in
sub
add
lret
sub
fs
inc
mov
fs
imul
mov
adc
jae
inc
add
gs
xorl
mov
xor
and
adc
data16
daa
inc
xor
outsl
or
mov
sti
xchg
sub
data16
icebp
or
ds
shrb
jle
pop
sub
pop
imul
xchg
int3
adc
jo
pushf
sbb
pusha
push
sbb
jp
scas
pop
negb
jmp
mov
mov
mov
pop
sbb
xor
pop
xchg
repnz
std
leave
jle
xor
xchg
sub
dec
loop
int
loop
add
and
nop
es
sub
or
jle
sarl
sti
xlat
aam
adc
out
in
add
fnstsw
pop
jmp
imul
test
mulb
add
rolb
xchg
inc
scas
xor
mov
pop
fs
push
sbb
mov
jbe
mov
cli
pushf
sbb
adc
sbb
xlat
cld
fsubl
push
xchg
ficoms
mov
xor
gs
xchg
cld
dec
scas
shrl
or
lret
mov
cmc
cmp
pushf
push
xor
add
push
ljmp
dec
in
jecxz
mov
and
xchg
shrb
add
inc
sbb
mov
cld
pop
xchg
mov
in
inc
xlat
cltd
mov
ss
int3
dec
cmpsl
push
and
daa
and
in
pop
sub
test
scas
xorb
sbb
cmc
cmp
xor
lods
mov
fucomi
out
cmpsb
lret
andb
test
and
mov
and
ficoms
jge
mov
adc
add
mov
xchg
mov
das
int
outsl
inc
stc
pop
sub
jle
aad
jge
sbb
pop
pop
mov
mov
jp
mov
js
and
inc
xchg
inc
sbb
xchg
pushf
sbb
std
cltd
test
and
sub
jg
lret
push
sub
aad
jecxz
pop
sub
ljmp
or
dec
pop
js
cmp
je
xchg
inc
lret
stos
aaa
sub
adc
push
jmp
cvtpi2ps
pop
mov
cmp
shrl
loope
lea
mov
sbb
xchg
in
jbe
adc
not
mov
dec
push
jp
adc
adc
inc
js
jb
test
mov
pop
jb
aas
jae
add
adc
dec
cmp
dec
lock
test
inc
fnstcw
cmpb
push
repnz
lret
pushf
call
mov
or
popf
mov
adc
inc
bound
add
scas
shrl
cmpsb
and
test
sbb
outsl
shll
mov
or
arpl
cmc
mov
xlat
outsl
pop
cmp
imul
cmp
jno
hlt
aaa
repz
lcall
fdivs
dec
adc
sti
ret
test
mov
xor
out
ljmp
jne
mov
sbb
jno
fidivs
sub
ror
int
adc
mov
popa
jb
lods
in
das
out
loopne
push
mov
mov
lret
mov
push
jg
dec
add
inc
das
cmp
mov
cmp
add
sahf
in
xchg
fs
xlat
or
cmp
ss
and
into
or
nop
mov
xlat
lret
cmpl
push
movsb
cmpsl
dec
or
out
cmc
rcrl
pop
xor
adcl
cs
or
cmp
mov
outsb
insb
inc
sbb
sbb
in
sti
cld
mov
movsl
aaa
out
mov
scas
xchg
mov
fiadds
dec
jmp
or
es
clc
testb
dec
or
jne
jp
add
or
adc
pop
js
sub
dec
pop
hlt
add
out
mov
adc
shrl
pushf
mov
sub
aad
mov
incb
shlb
into
sub
mov
inc
cmp
inc
dec
sub
lds
lea
outsl
dec
aaa
repnz
jno
mov
mov
jl
arpl
filds
mov
iret
in
mov
pop
dec
push
dec
das
sub
movsl
imul
scas
xor
sub
cli
cmpsb
test
int3
imul
fdivrs
mov
popa
mov
sbb
out
or
iret
pop
mov
push
je
add
add
cmc
jnp
cmc
add
jge
pop
jle
inc
sub
jno
mov
pop
mov
sbb
jbe
hlt
popa
xor
inc
test
jge
dec
cld
call
xchg
xchg
test
add
and
sub
lds
outsb
adc
push
pop
mov
or
xor
or
mov
in
xchg
aam
lahf
add
out
jl
fwait
icebp
test
mov
mov
lret
sbb
mov
mov
sbb
mov
add
js
mov
add
push
pop
lock
insl
pop
mov
lret
add
xchg
mov
xor
mov
lea
xchg
xor
jae
dec
repz
and
arpl
pop
or
cmp
and
fwait
mov
add
cmpsb
sub
mov
std
lods
cld
adc
test
fucomp
imul
pop
mov
and
pop
mov
ljmp
scas
mov
out
aam
sub
fld
sbb
inc
xchg
jae
jmp
lds
mov
je
lret
mov
mov
xchg
jg
addr16
das
mov
ss
mov
roll
fidivl
faddl
iret
and
int3
cs
mov
push
test
mov
out
xor
lcall
rcll
ljmp
mov
push
mov
cmp
cli
mov
dec
lcall
jns
aam
xor
mov
lcall
fstpl
mov
dec
inc
movsl
pop
stc
fmulp
pop
dec
pop
jmp
cmp
push
add
pop
std
and
repnz
sbb
push
in
mov
ss
repnz
cmpsl
out
adc
shr
ds
test
or
cmp
out
fldcw
xchg
jb
or
into
cmc
loopne
loopne
xor
jnp
xchg
inc
and
and
pop
bound
mov
lret
inc
inc
add
fildl
lcall
iret
in
fistpll
xchg
jae
sub
push
ss
adc
lret
xor
xor
lods
and
xlat
mov
jl
pop
cmpsb
or
adc
mov
mov
pop
jecxz
adc
ss
repnz
in
push
push
mov
enter
sbb
ja
pop
mov
mov
dec
out
inc
inc
mov
imul
cmp
sahf
cwtl
std
pcmpgtb
mov
dec
lcall
aas
mov
dec
movsb
rdtsc
fiadds
xor
lea
pop
xchg
adc
movsb
add
adc
push
mov
int
or
sub
pop
scas
insl
iret
mov
dec
in
push
cwtl
das
mov
mov
loop
arpl
inc
outsb
dec
addr16
xor
repz
sub
or
cwtl
push
mov
aad
pop
jae
mov
adc
lds
pop
pop
dec
add
loop
mov
or
sbb
mov
outsb
sub
adc
ffree
inc
icebp
int
inc
lret
or
mov
xchg
and
scas
jmp
and
dec
sub
cld
data16
jno
iret
das
lret
and
sti
push
adc
cmp
mov
cmpsl
fwait
mov
mov
fwait
shrl
and
jb
mov
dec
jecxz
mov
xor
ret
xchg
scas
rclb
mov
sti
pop
sbb
nop
gs
sahf
fs
add
imul
xchg
inc
xlat
mov
rcll
bound
cltd
jne
jecxz
iret
cmpsl
jnp
imul
cmpsb
inc
and
shl
mov
pop
dec
call
retw
nop
pushf
inc
stc
fs
or
addr16
add
pop
pop
fistpll
mov
dec
mov
les
pop
pop
cwtl
jmp
jbe
test
and
inc
jns
loopne,pt
icebp
pop
sbb
out
mov
lahf
push
mov
popf
jnp
mov
loope
jmp
pop
mov
dec
cmc
sbb
out
xlat
add
push
xchg
lds
adc
out
test
mov
test
ss
leave
ret
mov
adc
adc
mov
out
xor
inc
dec
push
sub
ds
test
inc
mov
call
in
pop
hlt
iret
test
out
push
xor
xor
and
inc
mov
push
or
js
divb
ret
push
and
cltd
cli
push
and
cmp
test
jae
adc
cmp
mov
sbb
sbb
push
dec
mov
stc
sbb
shrl
jecxz
mov
fidivs
jge
add
stos
and
fidivs
push
daa
lds
cmpsl
jne
mov
jg
jns
sub
jecxz
ffreep
es
inc
cld
sbb
loop
aam
mov
popf
mov
pop
push
stos
inc
sbb
pop
cmp
fmuls
mov
pop
pop
sbb
jne
enter
stc
sub
int
rcl
xchg
ret
lret
int
push
mov
sarb
jl
cmp
jno
fs
int
mov
andl
mov
xlat
add
mov
xchg
xchg
test
dec
pop
add
and
or
enter
adc
add
jb
pop
icebp
pusha
push
lahf
shr
or
sarl
js
jge
sub
lcall
mov
scas
cmpsb
mov
iret
aas
mov
daa
cmpsl
mov
jl
xorb
andl
pop
inc
stc
jb
xor
mov
sub
xchg
les
nop
iret
sbb
pop
sbb
int3
daa
cwtl
bound
repz
iret
decb
js
sbb
jne
outsb
outsl
xchg
xor
jb
push
mov
test
cmp
clc
jmp
orb
mov
inc
or
adcl
add
cltd
xor
in
push
sahf
jb
sbb
stos
and
inc
outsb
fimuls
cmc
imul
and
push
or
xor
fidivs
fsubrl
pop
dec
je
xchg
sub
jo
xor
pop
stc
xchg
xchg
or
xchg
dec
mov
popa
inc
icebp
cmpsl
push
inc
ljmp
push
loopne
adc
stos
push
cmp
mov
pop
sbb
test
aas
mov
scas
add
cmp
lret
loop
sbb
fisubrl
jb
sbb
and
push
sub
stos
adc
test
cmp
push
sub
stos
sbb
push
test
sbb
stc
cli
xchg
pusha
test
lock
shll
mov
stos
xor
jnp
xlat
inc
into
pop
inc
xchg
repnz
mov
fmuls
and
int3
clc
clc
inc
pop
aam
push
stos
in
cli
imul
cwtl
jne
push
mov
pusha
subl
cmp
push
or
xchg
lods
stos
loop
mov
stos
lock
std
inc
jmp
cmp
in
mov
or
mov
or
or
lods
cmpsl
out
mov
mov
leave
adc
iret
cmpsl
xor
inc
and
aad
mov
outsb
push
hlt
cld
enter
mov
mov
pop
fdivs
mov
xchg
movsb
mov
push
pop
and
rorb
pushf
pop
pop
pop
xor
xchg
sub
dec
shrl
cmp
out
and
xor
add
arpl
shl
push
ret
mov
cmp
fcomps
testb
mov
inc
and
hlt
pop
xlat
into
adc
es
jp
scas
pop
rcll
mov
dec
ret
nop
dec
insb
push
jp
or
dec
lret
imul
sbb
mov
cmp
cmpsl
into
out
jns
outsb
jl
mov
xchg
add
imul
fldt
or
xchg
mov
ds
popf
cli
lret
imul
dec
inc
add
and
scas
jg
xorl
rcr
dec
rcrl
lds
lods
sti
dec
scas
adc
ss
jo
arpl
mov
cmp
fidivl
jo
lods
inc
fcmovbe
js
jae
ljmp
mov
jl
sbbl
inc
mov
aam
push
orl
or
and
lret
cmp
lods
dec
mov
adc
push
outsb
ror
jo
adc
mov
mov
hlt
test
and
push
mov
mov
insb
andb
adc
out
mov
mov
pop
out
mov
mov
jg
stc
pop
roll
imul
int3
xor
outsb
adc
inc
out
push
push
mov
jmp
ret
add
aam
cmpsl
inc
clc
loope
iret
or
pop
das
dec
in
mov
mov
xchg
mov
sub
xorb
subl
inc
jne
inc
adcb
cmpsb
inc
or
cwtl
cld
das
sub
scas
push
daa
sub
mov
imul
in
and
jle
mov
xor
loop
sar
mov
and
inc
stc
adc
pop
mov
cltd
jae
mov
jmp
dec
call
push
mov
fistps
pop
out
inc
jge
je
paddusw
xor
rcrl
adc
mov
mov
xchg
lock
mov
dec
push
push
call
clc
insb
sbb
popf
pop
xor
lods
dec
lea
das
mov
adc
jbe
dec
imul
xor
daa
sub
xor
cld
push
xor
dec
jnp
jl
sti
inc
nop
insb
or
sbbb
dec
inc
pusha
push
mov
rcrb
cmpsl
and
movsl
mov
jecxz
inc
lods
lods
outsb
stos
popa
xor
inc
ds
aad
sbb
mov
xchg
clc
loopne
popa
ret
adc
jb
out
lock
das
push
mov
movsb
push
bound
and
scas
and
ficompl
and
cmp
pop
mov
pop
cmpsb
clc
pushf
ret
je
jmp
lea
push
pop
pop
xchg
loope
subl
fisttps
adc
mov
jp
mov
cs
mov
adcb
je
rcll
popf
dec
mov
xchg
int3
imulb
mov
sahf
loop
dec
dec
fldenv
fistpl
mov
call
add
shlb
shlb
mov
sahf
adc
ret
nop
jmp
imul
ret
rcl
sahf
push
mov
jmp
ret
mov
mov
jb
mov
ja
sub
fnstsw
rorb
je
pop
flds
and
test
and
hlt
fbstp
test
sbb
pop
sub
push
rclb
out
push
js
xor
imul
jp,pn
mov
jne
sub
aad
and
rorb
pusha
lcall
test
xchg
iret
je
xlat
inc
es
adc
cmp
js
pop
push
pop
daa
push
pusha
mov
iret
xor
xchg
sti
sbb
pushf
or
jnp
and
dec
push
inc
xor
or
mov
mov
cmc
jle
addr16
cmpsb
xchg
cmp
scas
xchg
data16
test
stos
inc
xchg
mov
dec
mov
mov
jl
pop
sbb
lcall
push
pop
sub
pop
jnp
sbb
inc
lret
pop
xor
mov
push
loopne
popf
iret
sub
and
xor
out
add
xor
cld
mov
nop
cmp
fwait
add
je
insb
pop
xor
mov
stc
neg
sbb
pop
cmp
ljmp
inc
or
jae
imul
sub
pop
mov
xor
pop
leave
dec
lahf
pop
sahf
xchg
cli
int3
inc
cmc
mov
idivb
adc
mov
repnz
mov
cltd
gs
int3
jno
int
imul
cli
pop
mov
movsb
sbb
add
push
xor
popa
icebp
aaa
dec
orl
pop
jp
pushf
xor
mov
mov
add
roll
scas
sub
xor
test
cld
popa
push
loop
add
sub
fwait
mov
mov
mov
mov
xchg
rolb
ret
daa
mov
sub
movsb
mov
fisubrs
jo
ds
or
roll
cmp
hlt
add
adc
test
jmp
dec
and
push
icebp
loope
adc
cmp
mov
out
jg
bound
imul
xchg
rol
mov
std
lret
pusha
pop
iret
popf
loop
push
scas
xchg
mov
pop
divb
fisubrl
outsl
fldl
ret
cli
mov
movsl
gs
sti
and
out
jns
test
lret
nop
mov
inc
and
jle
or
push
mov
popf
dec
inc
sub
vmovaps
das
adc
inc
in
xchg
in
mov
sub
faddl
imul
test
stos
daa
cli
pop
adc
scas
pop
add
insb
mov
incl
jnp
jmp
test
mov
push
mov
imul
inc
out
in
add
lock
mov
jge
scas
fldenv
out
mov
in
jno
sub
lock
cmp
enter
movsl
xlat
divb
idivl
jne
dec
orl
roll
lcall
out
xchg
inc
adc
das
push
pop
cwtl
or
mov
imul
mov
pop
dec
faddl
dec
mov
shl
dec
sbb
dec
sub
sahf
xor
movsb
push
sbb
xchg
sbb
or
das
test
shl
xchg
lods
pushf
cmp
in
dec
ss
mov
push
cwtl
mov
pop
nop
xchg
cmp
mov
sarb
cmp
push
xchg
movsb
xchg
repnz
insl
cmp
add
arpl
call
pop
test
icebp
notl
jne
out
in
inc
mov
test
add
dec
lahf
stc
lds
outsb
pushf
data16
cmp
daa
std
mov
and
icebp
outsl
icebp
cs
insb
lret
scas
cmpsb
pop
aas
aaa
stos
adc
push
aam
xchg
outsl
mov
cmpsb
dec
xchg
jb
jb
repz
insb
mov
adc
pop
cmpsb
jnp
out
pop
mov
or
push
and
movsl
jnp
add
in
dec
xchg
inc
add
jg
in
roll
mov
sahf
jg
lret
ds
loopne
movsb
add
stc
stos
lret
lahf
nop
mov
mov
jl
add
scas
aad
xchg
sub
idivl
test
inc
xor
fsub
idivb
mov
sbb
mov
mov
cmp
dec
inc
xchg
mov
ss
xchg
notb
mov
sbb
inc
cmp
ljmp
fwait
push
sub
mov
jne
cmpl
sbb
outsl
jge
nop
and
stc
dec
jo
push
dec
loop,pn
sbb
cld
jg
nop
cs
insb
mov
mov
add
cwtl
cmp
cmp
in
fiadds
lods
xor
lahf
ljmp
xchg
xchg
dec
scas
repz
cmpsl
or
iret
clc
jp
add
sub
sub
lret
repnz
xorb
jne
orl
mov
cltd
daa
fwait
jp
imul
jmp
inc
dec
mov
sub
into
cmp
mov
out
xor
sbbb
sahf
jns
mov
sbb
push
popa
cmp
repnz
scas
or
lods
pop
sti
pop
inc
divl
lahf
imul
jae
cmp
lock
jns
mov
push
imul
push
adc
push
cltd
pusha
mov
movaps
jle
cltd
lret
sbb
data16
fsub
mov
ss
add
adc
push
push
jo
scas
ret
sub
jg
and
push
mov
fisttpl
dec
ficoms
pop
xchg
inc
scas
jle
push
mov
add
int
cmc
leave
adc
stos
pop
jle
test
sahf
dec
clc
mov
lods
xor
add
repz
cli
and
add
inc
or
sub
dec
cmp
add
popl
into
xchg
xchg
fsubrl
sbb
ss
out
mov
or
loope
jno
mov
and
jle
bound
pop
pop
jg
popa
popa
mov
jge
out
cmp
pop
shrb
xor
cmp
push
es
and
sub
data16
in
outsl
add
mov
lea
outsl
repnz
jmp
fbld
cltd
xor
shl
cmpl
ret
fimull
jno
cwtl
inc
lds
out
jb
and
ds
pusha
sbb
cmpsb
adc
xchg
inc
sub
dec
sub
ret
test
les
jl
das
jo
int3
negl
mov
outsl
push
shll
jb
pop
sbb
out
pop
push
daa
lret
xorb
cmp
fdivrs
xlat
aaa
lock
mov
dec
and
in
mov
loope
xchg
sti
rcrb
loope
adc
push
pop
xorb
clc
push
std
push
ds
push
filds
dec
jns
lahf
cmp
sti
test
mov
scas
fstps
fwait
int
sti
loop
cld
sub
and
pushf
aam
mov
mov
dec
rcrl
or
cmpsb
cwtl
mov
lret
dec
sbb
or
mov
mov
cmp
pop
subl
stos
in
icebp
jp
adc
daa
dec
orb
jmp
jge
in
add
adc
xor
fwait
adc
mov
or
hlt
xchg
int3
dec
push
imul
lods
pop
test
je
mov
mov
inc
das
popa
xor
je
jns
fwait
ljmp
lds
ljmp
ljmp
es
popf
cmpsl
rolb
daa
inc
mov
mov
pop
jno
or
stos
lret
jb
jge
push
movsl
aas
add
xchg
and
shl
mov
movlps
mov
int3
js
xor
mov
fcoms
in
fidivrl
adc
dec
fwait
mov
addl
and
aaa
popf
push
or
mov
mov
dec
cmpl
testl
cli
cli
in
pop
cmpsb
loopne
jo
cmp
sub
leave
bound
sub
scas
pop
fnstenv
js
dec
sub
dec
or
ljmp
pop
aam
repnz
push
fldl
push
mov
xchg
fistl
push
and
adc
mov
jle
mov
xchg
xor
iret
jle
mov
sbbb
lea
jns
repz
rcrl
mov
aam
out
ret
adc
sahf
lahf
push
lea
xor
sbb
divb
add
lods
push
mov
rorl
imull
add
pop
in
out
xlat
daa
jl
scas
jno
sbb
pop
lock
pop
xor
jecxz
adc
dec
call
daa
loope
imul
pushl
cmpsb
rclb
push
ljmp
ss
mov
cwtl
mov
sarl
or
jmp
and
mov
sub
leave
out
in
and
xlat
test
std
movsl
inc
xor
repz
dec
stos
mov
outsb
mov
mov
ja
mov
jnp
push
jmp
or
pop
arpl
xor
jb
or
jp
mov
lcall
sub
jge
mov
inc
pop
or
in
xor
cli
int
out
jge
hlt
ljmp
cmpsl
sub
pusha
stos
adc
aam
out
jle
daa
mov
icebp
mov
outsl
and
out
lcall
loopne
mov
pushf
test
sahf
pop
movsl
incb
sbb
pop
icebp
and
adc
bound
and
jp
push
insb
faddp
dec
jbe
mov
rcrl
icebp
ljmp
pop
je
ds
test
push
push
fbld
inc
jle
repnz
push
push
clc
ret
nop
call
dec
aas
es
popf
adc
sub
or
xchg
mov
mov
fidivl
add
out
and
nop
push
fsubrl
mov
push
jl
and
jns
cmp
xor
add
es
mov
pop
jge
push
insb
add
mov
notb
sub
test
ds
inc
in
mov
insb
and
lods
ror
mov
xchg
es
add
inc
outsl
nop
inc
les
movzbl
insb
clc
aam
mov
fsubrp
push
jo
sub
sti
pop
xor
flds
scas
cltd
dec
cmp
popf
add
dec
mov
mov
or
repnz
ret
ja
test
mov
jae
mov
gs
push
and
ret
outsl
mov
hlt
mov
push
fidivrs
pop
adc
dec
and
or
pop
mov
sbbb
mov
jns
stos
iret
sub
addr16
sbb
and
xor
xchg
sub
ret
fldcw
fucomi
pop
and
into
orl
mov
ja
out
fcomps
insl
ja
mov
setns
pop
xchg
rolb
and
jns
inc
mov
jbe
js
jl
pop
into
mov
inc
pop
das
sub
in
cli
and
lret
mov
lods
sbb
popa
sbb
call
lea
adc
sub
add
hlt
adc
test
aad
sbbb
jbe
push
mov
push
sub
mov
and
push
aas
inc
movsb
rcrb
push
pusha
scas
out
divl
or
call
cmp
test
push
add
adc
and
repnz
push
lret
mov
push
mov
das
call
jae
sub
mov
or
sub
or
jmp
das
push
dec
xlat
lods
adc
adc
push
xchg
sbb
imulb
lret
pop
cwtl
jle
dec
pop
jo
xorl
sbb
mov
js
dec
cmp
in
daa
daa
add
sbb
mov
movsb
sbb
lahf
rcl
adc
out
push
ret
push
mov
loopne
imul
repz
jg
mov
out
mov
or
mov
icebp
pop
sbb
stc
jns
orl
pushf
xchg
mov
cmp
sub
or
fmuls
movsl
les
out
ffreep
dec
cmp
pop
pop
das
clc
aas
sub
mov
sbb
cmpsl
insb
inc
std
add
sti
mov
adc
clc
adc
sbb
out
xor
or
movsl
push
leave
dec
sbb
jge
in
clc
xchg
lods
pushf
das
push
outsl
dec
jnp
int3
mov
mov
push
adcl
fwait
or
push
push
ljmp
inc
cli
outsl
sbb
mov
in
push
add
and
and
cmp
in
mov
xchg
pop
push
ss
pop
pop
ret
clc
imul
fs
lret
ret
inc
inc
imul
cs
stos
push
or
sar
scas
aam
daa
xor
in
jge
aas
jle
mov
dec
nop
divl
sbb
nop
leave
dec
lods
mov
push
push
jmp
cmp
xchg
sbb
and
out
lcall
adc
pusha
sbb
and
mov
mov
mov
jle
shlb
fnstcw
push
movb
stos
push
pop
loop
sarl
dec
repnz
js
lods
sbb
out
testl
out
add
add
scas
cmc
out
jnp
out
jg
dec
test
sbb
das
sbb
jae
add
inc
in
add
adc
or
mov
cmp
and
popa
mov
dec
push
cltd
decl
dec
mov
adc
add
out
xchg
xchg
std
movsb
jae
cmpsl
and
shl
cmc
stos
pop
pop
mov
dec
into
xor
add
insl
outsl
mov
or
pop
mov
fwait
out
mov
int3
push
aam
pop
mov
dec
pop
mov
cmpl
adc
filds
add
arpl
xor
jbe
iret
xor
ljmp
xor
iret
cmp
cmp
sub
clc
add
jge
sarb
push
mov
pop
int3
sub
add
cmp
call
sub
cwtl
out
jb
int3
sub
push
jae
aaa
jbe
mov
test
icebp
in
jl
inc
mov
xlat
xchg
mov
cmp
push
mov
push
mov
das
jge
xor
and
pop
mov
clc
hlt
imul
icebp
mov
in
fs
arpl
xchg
fsubs
cmpsl
inc
mov
pop
pop
iret
fs
leave
lahf
icebp
dec
cmp
pop
jae
cmp
or
ja
mov
pop
int3
mov
pop
callw
rorb
rclb
or
pop
mov
mov
aas
orl
cwtl
pop
and
or
fisttps
dec
push
aad
xchg
pop
fsubs
or
cmp
lods
movsb
xchg
sti
adcb
jbe
inc
jg
cs
or
sbb
adc
mov
jmp
outsb
and
mov
ror
xchg
lock
inc
or
adc
mov
fsubrs
sub
mov
icebp
das
jbe
cmp
test
mov
fwait
jns
xor
adc
push
sti
cmp
pop
or
inc
xchg
addr16
mov
std
jge
add
sar
scas
push
sahf
mov
pop
ret
cmpsb
mov
dec
pop
xor
sbb
push
push
jb
sbb
and
in
inc
adc
insb
push
ja
and
push
lock
dec
ds
imul
leave
dec
mov
mov
xchg
std
gs
pop
leave
mov
clc
das
mov
outsb
jle
mov
sbb
xchg
popa
xorb
outsl
paddb
aaa
xor
cltd
push
pushf
hlt
xchg
lret
inc
add
mov
pusha
sarb
or
jnp
mov
pop
xchg
add
jb
stos
and
jns
lds
inc
xor
sbb
dec
mov
aaa
fstpl
and
in
aas
fiadds
jge
loope
into
fidivl
lea
add
out
int
pop
mov
scas
ja
push
cmp
lds
out
flds
pop
push
jno
orl
mov
adc
int3
out
sbb
or
iret
mov
jns
dec
or
mov
mov
clc
fistpl
xchg
adc
fldt
lret
or
cwtl
dec
imul
daa
stos
pop
dec
clc
inc
mov
sub
sti
pop
loop
rol
mulb
sub
cmp
test
scas
sbbl
jl
and
mov
jb
dec
out
mov
xchg
sbbb
dec
lahf
xor
mov
mov
int3
cmp
jbe
outsb
or
xchg
fldenv
testl
adc
sbb
pusha
dec
sub
cld
and
shr
or
shrl
jge
or
lret
add
dec
fwait
test
cmpsl
mov
push
mov
xchg
shlb
insb
xchg
insl
ret
adc
sub
popf
dec
sbbl
call
mov
xor
movsl
adc
mov
xorb
test
lods
inc
add
cltd
cld
push
daa
loop
xchg
outsb
in
ljmp
aas
in
pop
inc
sbb
pop
push
add
xor
lcall
xchg
sub
add
repnz
add
cmpsl
mov
inc
inc
stos
shl
sar
push
or
xor
or
and
push
outsb
adc
aad
inc
jmp
pop
and
inc
leave
jo
mov
cmp
mov
pop
jmp
dec
into
mov
mov
jb
ss
pop
lret
push
lahf
mov
js
pop
fwait
test
rcrl
or
mov
dec
stc
push
xor
ds
jge
in
ret
or
lock
xchg
or
ret
decb
leave
sbb
aaa
scas
jmp
test
in
lahf
xchg
mov
mov
fstpl
xchg
leave
jge
sti
imul
inc
lods
add
sahf
jge
push
movsl
call
test
dec
jae
xor
imul
imul
outsl
cmp
mov
rcl
lret
sbb
dec
xchg
xchg
loop
mov
dec
cmp
dec
mov
mov
mov
int3
and
xchg
scas
sub
mov
ficoml
inc
jmp
or
xor
lds
enter
lds
loopne
loope
orb
pop
add
lcall
cltd
movl
mov
add
dec
mov
mov
mov
lds
cmpsb
lods
mov
inc
inc
sarl
and
in
add
mov
cmc
xor
and
mov
push
inc
sar
mov
jp
insb
test
sbb
aaa
mov
cmp
mov
addr16
rorb
mov
fmul
push
lock
int
pop
jne
xor
ss
bound
hlt
les
sbb
arpl
nop
xchg
setl
push
pop
xchg
push
push
fnstsw
sub
sbb
addr16
in
cmp
cmp
pop
jnp
dec
pop
dec
xor
sub
and
xchg
jmp
hlt
or
pushf
nop
jo
lahf
cmp
pop
mov
or
xchg
bound
imul
and
fistpll
pop
insb
jo
cmp
cmp
jbe
cld
push
add
fists
add
and
lods
adc
rcrl
outsb
sub
pop
mov
xchg
mov
fcomps
cmpsb
sbb
roll
fisttpll
xchg
negb
pushf
sbb
xchg
dec
pop
mov
iret
loope
push
pop
imul
insb
aad
aam
xor
lret
addr16
mov
mov
sub
mov
xlat
inc
push
cmp
addl
mov
je
mov
add
cmc
push
mov
xor
push
aaa
mov
orl
push
pop
cmp
xchg
mov
loopne
and
cwtl
outsb
inc
cld
cmp
adc
sbbl
test
xchg
lock
cltd
mov
lret
jbe
data16
mov
adc
andl
bound
dec
sbb
jecxz
mov
dec
gs
xor
fdivrl
mov
mov
shlb
mov
sbbl
out
sub
dec
pushf
jg
inc
sbb
das
cltd
cli
fistps
add
test
mov
test
or
out
add
jle
nop
inc
into
rorl
xchg
jecxz
push
push
test
test
fxch
pop
mov
fisttpl
inc
or
pop
jecxz
cmp
das
cmp
rorl
js
inc
dec
or
jbe
addb
push
sub
into
mov
imul
cmc
rcll
loop
xchg
stos
and
fistl
and
mov
jge
xor
pop
shl
pop
add
lcall
or
inc
cwtl
out
lods
dec
loop
or
fmull
in
repnz
dec
cmpsb
rolb
pop
cltd
jno
pop
loop
mov
xchg
iret
out
and
xlat
dec
dec
addr16
sbb
jb
inc
aam
es
mov
in
leave
stos
sub
lret
inc
jnp
xchg
mov
mov
inc
fimuls
xor
shll
mov
jno
add
ret
dec
dec
sub
mov
addr16
and
outsl
push
push
std
fabs
push
sub
fistl
mov
xchg
pop
adc
sbb
pop
dec
and
dec
pop
sbb
dec
push
add
mov
imul
push
cmp
cmpsl
and
mov
scas
mov
inc
enter
mov
adc
jmp
repz
out
push
fmul
dec
pop
cmp
rorb
jne
lret
cmp
mov
in
fmull
or
pop
in
add
and
cwtl
andb
sbb
insb
das
jns
aaa
sub
pop
shr
fstpt
mov
in
push
mov
stos
add
sub
popa
mov
testb
mov
rcll
add
adc
jnp
mov
fisubrs
and
inc
inc
aam
push
movsb
pusha
mov
mov
pop
adc
cld
mov
xor
mov
aam
cld
lea
ret
sbbb
ja
test
inc
movsl
mov
out
pop
jo
jb
or
push
stos
dec
enter
cltd
pop
xor
in
jbe
sahf
inc
xchg
fistpl
jno
fstpt
pop
push
push
or
adc
bound
lret
stos
xor
fwait
sub
mov
xchg
push
adc
nop
es
sub
xchg
lcall
shlb
inc
decb
xchg
jbe
insb
xchg
sub
outsb
fisubs
jmp
jg
mov
lahf
add
add
inc
jmp
push
cld
dec
or
dec
das
or
roll
cs
movsb
repnz
inc
roll
repnz
fistpll
iret
sub
push
mov
mov
pop
repnz
mov
int
mov
shr
xchg
loop
push
push
scas
and
cmp
mov
testb
lds
mov
pop
mov
subb
mov
fcompl
xchg
addr16
cmc
xchg
lret
rcr
movsl
mov
ds
or
add
mov
cmp
call
iret
push
xor
sbbl
add
inc
test
mov
mov
dec
xor
test
jmp
pop
add
call
in
or
adc
cmc
mov
sbb
mov
ret
adc
popa
and
movsb
in
loop
inc
rcrl
mov
mov
in
mov
push
sub
cmpsl
fs
pushf
popl
fsts
insb
mov
sahf
in
sub
shl
and
mov
test
sub
or
mov
jno
and
scas
lret
popa
mov
int
cmp
cwtl
ja
mov
cmpsb
mov
hlt
and
mov
paddw
stos
mov
cmp
xchg
lods
call
test
and
lret
mov
mov
mov
sub
stc
mov
jno
int
push
lds
inc
shrb
inc
mov
fisubrl
mov
mov
add
jp
test
in
movsb
sbb
ljmp
pop
bound
fistpl
adc
inc
inc
je
jecxz
mov
jbe
stos
mov
scas
xchg
addr16
mov
cmovb
and
movsl
pusha
sti
and
xchg
call
cltd
cmp
mov
mov
stos
pinsrw
popa
pushf
add
cli
std
lock
push
shll
ljmp
lret
ljmp
data16
int
ret
loope
sbb
popa
sub
addr16
lds
paddusw
inc
stos
mov
cwtl
jl
inc
mov
fildl
data16
mov
sbb
mov
push
lret
lret
ret
xchg
test
in
loop
out
or
jnp
push
aas
imul
jg
stos
je
out
push
scas
xchg
dec
stos
mov
mov
aaa
mov
pop
sti
jmp
xor
std
fs
aaa
sbb
lods
cwtl
push
les
cmp
mov
push
xor
pop
fmul
mov
jns
push
nop
adc
or
mov
push
cmp
push
sub
adc
push
std
inc
roll
push
push
jmp
fcmovnu
in
pusha
push
pop
mov
ds
mov
mov
in
pop
mov
push
push
addr16
push
mov
sub
aas
cmp
lods
iret
jae
test
je
push
or
xchg
mov
lahf
sub
hlt
mov
jo
insb
jno
and
lock
mov
fidivrl
xchg
fildll
mov
pop
push
add
ljmp
std
pop
jle
vmwrite
mov
lret
pop
int
enter
xchg
push
cmpsb
in
dec
xorl
shll
dec
popf
push
ss
sbb
xlat
insb
jmp
pop
ret
inc
dec
mov
sub
nop
out
sub
push
inc
lret
jge
test
cmpsb
and
clc
jmp
ja
fdivr
xchg
push
mov
inc
pusha
jge
sub
ret
inc
jne
ret
in
mov
xchg
mov
test
mov
inc
jne
cmp
add
imul
in
leave
push
mov
xchg
sub
adc
es
ret
or
sub
and
ljmp
jae
mov
adc
shll
cs
add
jne
inc
mov
or
jmp
mov
cmp
pop
mov
into
ror
lods
adc
testl
dec
daa
ret
inc
cmp
or
popl
lds
jle
inc
sarl
les
jle
push
sbb
hlt
aaa
aaa
push
cmp
sbb
xlat
outsl
rol
mov
jne
dec
iret
inc
and
xlat
push
popf
sbb
pop
mov
pop
fwait
cmp
cmp
out
mov
jae
popf
ret
leave
pop
mov
dec
aas
fcomip
add
into
inc
jo
cli
pop
loopne
sarl
add
ror
hlt
or
sub
inc
push
jl
dec
pop
test
xlat
stos
mov
lcall
mov
or
add
shrl
sti
scas
jae
ret
jl
repnz
std
pushf
mov
sub
or
add
xchg
rorb
cmc
mov
mov
xchg
outsb
jg
stc
je
and
dec
out
xchg
js
daa
les
inc
mov
pop
mov
sub
pop
sbb
cmp
ret
pop
subb
pop
and
and
mov
push
pop
dec
insb
push
cmc
repnz
mov
sbb
dec
sbb
sub
push
sbb
daa
popf
jg
popa
inc
and
push
sbb
dec
dec
leave
sub
imul
stos
lret
and
add
push
push
andl
out
movsl
cmp
add
pop
fidivl
mov
jmp
lods
fildl
inc
xor
or
mov
mov
xchg
sti
aas
jl
inc
cmpl
and
push
xchg
xor
mov
repz
jns
or
and
xchg
xchg
stos
push
test
cmp
lods
jp
jle
mov
sub
outsl
mov
xor
or
dec
mov
mov
cmpsb
jmp
je
aad
cmpsl
dec
push
push
cmpsb
aam
mov
cs
sub
mov
cmp
movsb
outsb
fldl
mov
stos
jecxz
nop
sti
mov
popf
mov
icebp
js
mov
int
inc
mov
mov
mov
sahf
cmp
test
std
into
sbb
adc
inc
test
ret
int
stos
das
sub
stc
and
xlat
rol
cmp
jne
je
mov
dec
inc
and
fdivs
push
aad
add
pusha
sbb
icebp
test
push
mov
ja
sub
into
bound
push
test
out
mov
inc
in
test
jge
jbe
xorb
jp
out
xchg
movq
mov
and
arpl
addr16
pop
shll
lea
inc
and
inc
pop
mov
gs
adc
cmp
icebp
push
lock
and
sbb
popf
or
or
sbb
mov
fldl
les
mov
or
cld
push
jnp
hlt
stos
jb
mov
icebp
sub
or
arpl
pop
fdivrs
in
idiv
mov
mov
sti
pushw
xchg
push
loopne
out
loop
pushf
xchg
pop
scas
and
jo
push
sbb
and
loopne
sbb
adc
out
jbe
xchg
or
lea
in
cmp
cmpsl
add
pushl
jb
mov
jl
inc
mov
dec
cmp
add
add
xor
or
repnz
or
xor
test
or
sub
hlt
cmp
push
sbb
xor
in
repnz
pop
push
ret
xor
xor
lret
push
xor
sbb
scas
mov
es
das
and
je
div
mov
inc
out
mov
es
scas
or
sbb
adc
in
aaa
xor
fldenv
rol
and
fld
push
insl
rcr
lret
xchg
or
out
sub
sub
lret
jo
jno
shr
mov
fs
es
movsb
add
mov
test
push
leave
cmp
push
mov
add
in
cmp
cmp
add
enter
lret
mov
mov
out
sub
lcall
sahf
and
mov
push
jmp
ljmp
popa
fldcw
das
xor
enter
idivl
ja
jp
dec
outsl
lock
clc
push
inc
cmp
jg
jae
sbb
pusha
pmaxsw
mov
mov
xor
xchg
aas
adc
hlt
in
push
push
shlb
adcl
sub
push
inc
sub
xchg
and
mov
push
fidivrl
sti
adc
insb
in
push
inc
lds
out
mov
pop
in
and
es
pusha
in
mov
lret
mov
popa
adcl
sbb
pop
xor
cmp
mov
stos
pusha
loopne
adc
scas
in
pop
nop
dec
daa
mov
add
mov
negl
mov
xchg
stos
xchg
and
shll
pop
cmc
xchg
std
lods
mov
cmpsb
sub
les
movsl
cmp
jne
fs
fildll
outsl
daa
mov
in
and
cwtl
mov
jl
jl
mov
fs
mov
pop
loop
out
bound
popf
xor
scas
nop
jbe
adc
push
mov
lods
fisubs
pop
js
fldcw
popa
rol
xor
pop
mov
insl
rolb
add
rcll
push
xchg
lret
jns
inc
mov
or
jle
fcoml
xchg
out
testb
sub
cmc
lock
sbb
pop
cld
in
cmc
test
lret
push
adc
call
mov
add
pop
dec
aam
and
or
cld
and
hlt
repnz
add
mov
out
int
xor
jae
xchg
adc
les
xor
jno
cmp
mov
adc
dec
je
repnz
gs
imul
pop
push
in
add
rolb
mov
cwtl
in
push
sbb
or
sub
into
cmc
arpl
adc
sbb
mov
jo
test
adc
inc
mov
mov
mov
jne
xchg
mov
jne
sub
mov
add
xorl
jl
pop
mov
cmpsb
dec
adc
stos
sub
repz
jbe
jp
pop
fidivs
pop
into
lahf
mov
imul
push
fwait
and
ja
movsb
sub
sbb
xchg
ds
jp
pop
cli
fidivrs
lock
sub
jg
out
sbb
cmp
and
dec
push
push
add
cwtl
cmp
adc
mov
insl
mov
mov
leave
repz
mov
pop
xchg
xor
mov
mov
fnsave
enter
in
pop
test
aas
imul
add
inc
icebp
fsub
out
int
scas
cld
xchg
fstl
addb
xchg
xchg
jae
inc
cli
loop
arpl
and
mov
cltd
cmp
jl
sahf
dec
sbb
test
push
sbb
fisubl
jle
lds
mov
out
ljmp
add
jmp
lock
jl
push
xor
mov
and
mov
sahf
call
mov
adc
jmp
pop
dec
mov
cmp
imulb
mov
out
mov
int
jl
mov
sub
rol
mov
xchg
es
mov
push
fwait
adc
dec
adc
std
call
mov
add
xor
or
jno
jmp
xlat
or
pop
cld
dec
outsl
xchg
mov
popf
cld
rclb
mov
fbstp
cmp
mov
jg
lret
mov
pop
sar
push
ret
xchg
jle
jno
or
aas
push
aam
je
dec
or
mov
lahf
jmp
fimuls
lods
add
sti
xchg
adc
sbb
xchg
push
stc
fistpl
jp
push
ljmp
pop
addb
or
push
in
iret
call
bound
xchg
push
ds
xor
rcrb
scas
jns
pop
movsb
cli
mov
adc
aaa
jecxz
out
popa
adc
xor
xchg
out
lret
adc
mov
mov
enter
jo
dec
push
aaa
adc
dec
fptan
add
or
inc
lock
imul
xorb
shll
jo
test
cmp
pop
or
ficoms
jnp
lea
test
jle,pn
mov
pop
sahf
xchg
mov
rclb
movlps
pop
lcall
pop
sbb
or
lret
push
and
nop
pop
sbb
sub
lds
femms
dec
rolb
clc
inc
aad
or
mov
cmpsb
popa
push
test
movsl
or
js
je
adc
add
cmp
cmpsl
mov
pop
sub
and
arpl
lock
aad
enter
cmc
test
movsl
cld
adc
insb
popa
xchg
sub
les
testl
dec
divb
sarl
ret
pop
mov
mov
cmp
lahf
sti
push
mov
cmp
pop
push
sub
inc
ds
xchg
add
movsb
popf
adc
es
aas
jle
xor
pop
cmp
stos
or
sub
icebp
dec
pop
hlt
enter
mov
jmp
add
xchg
add
imul
cmc
pop
cmp
or
sub
mov
and
outsl
xchg
sahf
cld
push
pop
mov
and
adc
cmp
xor
dec
cmpsl
xor
pop
inc
and
sub
pop
aam
jbe
jp
dec
aaa
mov
push
jge
test
pop
addr16
divps
inc
pop
sbb
loope
jge
in
mov
stos
lods
icebp
cmp
mov
push
pushf
bound
push
push
sub
push
sub
loopne
sub
jne
sbb
or
cmp
lcall
sbb
dec
sub
popf
test
sbb
lahf
add
cli
scas
adc
xor
cmp
cwtl
push
cltd
cmpsl
dec
fistpll
out
inc
inc
aam
cmp
lods
or
leave
lods
and
jno
and
inc
jnp
shlb
in
pop
int3
ljmp
adc
xchg
push
dec
stos
fs
pop
xor
dec
pop
jmp
pop
adc
ss
mov
int3
jbe
cmc
test
mov
add
sub
xor
sub
sbbb
leave
push
gs
ss
int
loopne
fwait
pushf
fcmovnb
mov
mov
push
scas
sahf
sub
lea
bound
movsb
mov
cmc
dec
fwait
adc
cld
lret
scas
test
mov
add
mov
sbb
pop
cwtl
xchg
pusha
xor
sbb
sub
dec
clc
and
call
in
xchg
lcall
xor
jle
add
fldenv
or
cld
fcmove
jmp
cli
pop
xchg
stc
js
out
ret
lret
xor
sub
shll
cwtl
fsubrs
mov
roll
repz
sti
adc
inc
jae
fadds
add
and
mov
test
mov
test
mov
xor
shrl
mov
pop
stc
js
jmp
jmp
loope
push
notl
jb
in
xlat
je
pop
pop
dec
xor
xchg
jmp
int3
idivl
icebp
stos
add
test
inc
sarl
inc
jb
xor
mov
leave
mov
or
jge
sbb
mov
mov
dec
and
dec
and
mov
call
mov
cltd
cmp
pop
js
xchg
xchg
test
ret
push
push
adc
dec
inc
scas
jae
push
popf
arpl
sub
dec
shll
mov
xchg
gs
int
mov
pop
dec
or
orb
add
fcomps
adc
jmp
jno
or
jo
ret
mov
mov
les
pslld
mov
push
mov
stc
std
xor
shlb
lods
cmpl
jnp
in
sub
inc
mulb
jg
jp
push
out
jmp
sti
adc
sti
scas
dec
fcmovu
cltd
lea
jge
jg
dec
cmp
mov
push
mov
cltd
sarl
bound
cli
mov
fstl
inc
popf
fsubs
ret
pop
stos
pushf
out
rcrl
sahf
stos
inc
mov
ficompl
push
lods
fisttpl
aas
stos
cltd
sarb
aaa
fstl
inc
xchg
lods
and
mov
cmp
fwait
int3
mov
out
push
loop
in
mov
loopne
jmp
lcall
mov
lods
push
jns
xor
inc
cmc
stos
leave
iret
mull
jo
stos
pop
test
pop
daa
dec
adc
stos
sub
sub
sbb
inc
call
dec
notl
mov
imul
insl
adc
sbb
out
sub
add
sub
mov
dec
shll
xor
dec
push
into
mov
add
and
sub
aas
mov
cmp
rcll
jne
push
rclb
pop
clc
rcrl
push
mov
and
mov
out
inc
xor
in
xlat
sbb
loopne
out
fcoms
xchg
mov
dec
pushf
lds
out
outsb
popa
mulb
aaa
in
fwait
inc
add
pop
adc
ds
lea
or
sti
jne
aam
lock
dec
das
pushf
add
int
mov
test
inc
mov
pop
sub
addl
inc
repnz
jnp
adc
movb
xchg
xor
iret
nop
pop
dec
mov
push
loope
lods
adc
xlat
cld
mov
stc
add
in
inc
call
push
pop
or
fisubl
int3
mov
adc
add
sub
push
outsb
scas
mov
mov
fstpt
cs
mov
dec
xchg
mov
and
addr16
cmp
lods
inc
xchg
pop
leave
insb
leave
jp
mov
xor
or
in
adc
sbb
sub
sbb
mov
xchg
adc
push
xlat
xlat
imul
stos
dec
xchg
pushf
push
or
adc
push
scas
mov
pusha
nop
sti
imul
inc
mov
cmp
and
push
adc
mov
imul
push
leave
xchg
sar
xchg
popf
or
pop
xor
out
out
nop
stos
jl
test
jl
mov
mov
dec
imul
or
jae
adc
in
jecxz
jle
pop
lcall
mov
mov
mov
mov
ss
jne
jecxz
or
mov
gs
add
cmp
mov
add
jbe
test
mov
test
dec
cmp
jg
js
push
pop
jnp
dec
dec
lret
mov
mov
dec
sub
in
je
pop
stos
inc
ds
mov
scas
sbb
mov
sbbb
in
jp
insb
push
mov
xchg
jae
and
and
adc
andl
iret
ret
sbb
cmp
sub
sub
jae
aad
and
cmpl
sbb
add
mov
lret
das
cmp
jle
mov
and
mov
loopne
daa
lea
cmp
mov
es
mov
jmp
mov
adc
pop
mov
add
cmpsb
xchg
in
push
aaa
add
out
loope
pop
lahf
js
sbb
out
scas
jge
push
test
jb
js
in
sub
jecxz
loope
pop
adc
fcmovbe
xchg
push
xor
aaa
das
es
or
test
je
in
jbe
push
push
xor
push
mov
xchg
pop
dec
rol
cwtl
test
cwtl
mov
outsl
int3
lcall
or
sbb
into
or
ljmp
lods
push
lods
lock
outsb
cmpsb
inc
shll
outsb
mov
loop
das
xchg
loop
and
call
sbbl
dec
mov
mov
mov
dec
push
data16
test
in
add
mov
aas
stos
out
mov
pop
test
inc
inc
mov
in
mov
in
sbb
or
cmc
out
mov
add
mov
xor
inc
dec
xchg
lods
sbb
enter
cli
xchg
ss
pop
roll
movsl
orl
cwtl
call
push
push
pop
adc
shl
jae
jno
jle
jne
xchg
dec
shlb
loopne
pop
sbb
daa
jle
push
cmp
rcrb
shrb
iret
fwait
add
scas
mov
mov
imul
mov
faddl
dec
jno
mov
cld
push
orb
aam
mov
pop
cmc
cs
insb
popf
imul
xchg
and
js
int3
sti
jl
lock
sub
add
out
adc
add
push
xor
cmp
mov
fucompp
cwtl
xchg
in
shlb
add
xlat
xlat
cmp
stc
sahf
dec
pop
xlat
outsb
in
sbb
pop
xchg
es
dec
mov
sbb
fcomi
xchg
andl
pop
adc
fstpl
sub
adc
lods
jmp
push
addr16
pusha
movsl
sarb
lret
dec
out
sbbb
jo
mov
pop
call
mov
lods
adc
pushf
je
and
ss
jnp
cmc
sub
cltd
shlb
jge
or
xor
movsb
imul
jg
push
cmc
lahf
xchg
ds
inc
xchg
rcl
dec
jg
insb
mov
jo
or
xor
inc
aaa
xchg
add
lds
cmpsl
out
push
mov
adc
daa
xchg
xchg
mov
imul
and
jae
ja
mov
xor
cld
mov
pushf
fcomps
push
push
pop
mov
arpl
rorb
push
test
mov
out
inc
xor
in
inc
fisubl
and
xlat
mov
inc
jo
dec
lods
pop
mov
sbb
testb
mov
and
and
cmpsl
or
stc
cmpsl
popf
negl
or
out
pop
pop
fidivrl
mov
rcr
adc
lcall
and
xchg
pop
call
xchg
or
imul
xchg
dec
addr16
in
out
xchg
sbbb
mov
jge
loop
rcl
pushf
movsb
or
lret
dec
push
push
test
push
in
adcb
cmp
push
lahf
pop
mov
sbb
or
mov
fisttpll
xchg
xor
incl
lret
adc
cwtl
cmp
cmc
jae
fsts
int3
xor
fld
xchg
pop
fadd
inc
aam
xor
dec
push
mov
cli
nop
aas
mov
fs
pop
adc
xor
roll
aad
int
jecxz
pop
int
cli
add
fstl
repz
xchg
dec
push
stos
sbb
in
push
xchg
push
aad
lds
and
dec
mov
xor
xor
push
imul
add
addr16
mov
cmpsb
jno
xor
outsb
jecxz
push
test
jmp
movsb
mov
imul
xor
aad
arpl
sbb
cs
mov
lds
xchg
cmp
iret
stc
jl
in
add
push
mov
sbb
andb
lcall
out
movl
insb
inc
dec
in
rolb
mov
aam
adc
and
in
push
xor
js
sub
xor
lahf
stos
cmp
pop
mov
add
into
es
divb
mov
cltd
fstpl
and
pop
jg
mov
call
or
pusha
or
notb
in
int3
pop
in
loop
mov
xor
jg
fs
sub
mov
arpl
dec
pop
jge
cli
or
adc
mov
xchg
jmp
cli
sub
lock
jle
and
xorb
dec
dec
and
int
push
jnp
call
and
cmpsl
xor
xor
xor
leave
fiadds
dec
lret
adc
aas
mov
and
in
inc
mov
in
rorl
pusha
push
adc
cli
pop
lret
xchg
ficompl
sub
sbb
xchg
nop
xor
inc
loope
mov
mov
hlt
ss
jno
lret
inc
psrld
add
int3
mov
xor
push
adc
in
and
mov
ljmp
in
in
mov
stos
xor
fistps
fisubs
cmp
cmpsl
mov
out
dec
cmpl
std
and
jg
push
cmp
mov
inc
sbb
out
lahf
or
dec
loop
inc
pop
or
idiv
sub
pop
fcoms
mov
int
mov
sbb
dec
adc
fsubrs
movsb
pop
sbb
push
outsl
push
fcmove
jo
sbb
out
and
iret
fldlg2
pop
ss
popa
dec
pop
fsubrl
mov
xchg
mov
sub
test
xchg
jle
inc
inc
incb
inc
aas
aaa
fsubrl
lret
jno
mov
cmp
cmp
adc
xchg
mov
test
fwait
adc
iret
cmp
outsb
and
push
call
sti
inc
pushf
mov
lret
hlt
xchg
cmp
iret
shll
fbstp
and
sub
and
bound
aad
xchg
jbe,pn
sbb
mov
and
sbb
and
enter
and
sbb
dec
dec
jae
add
mov
adc
sub
dec
lret
pop
sub
sahf
cmp
shl
test
fisubrs
jl
int3
push
inc
mov
sbb
stos
fcoml
fs
xchg
nop
mov
cwtl
dec
xchg
mov
inc
pop
loopne
fstpl
mov
xchg
xlat
lahf
push
or
adcl
inc
mov
insl
fisttpll
lea
mov
lds
fnsave
mov
out
ds
mov
je
jb
xor
in
xchg
xchg
in
or
icebp
shll
jge
or
sarb
jge
xor
int3
in
sub
adc
repz
dec
jle
frstor
xchg
or
sub
push
xor
shlb
mov
jl
cmp
push
mov
adc
pop
mov
mov
shr
int
js
movsb
push
xor
sub
sbb
sub
test
dec
inc
add
jge
hlt
int3
xchg
jge
leave
push
and
adc
sub
mov
push
adc
push
arpl
dec
aas
cmc
mov
xor
orb
jg
sub
cmc
pusha
pop
fdivr
add
rclb
inc
and
outsb
loope
in
in
pop
cmp
insl
push
imul
es
pop
cli
sbb
inc
das
xor
push
cmp
pop
sub
inc
pushf
mov
mov
xlat
sbb
shl
dec
jge
sar
loope
mov
mov
popf
fisttpll
imul
jl
ret
inc
test
sbb
idivl
mov
dec
fs
stos
add
out
xchg
sbb
in
outsl
out
mov
lcall
rcll
jl
sub
inc
movsb
xchg
enter
xchg
xor
xor
hlt
cld
mov
mov
or
mov
nop
xchg
cmp
add
mov
mov
test
add
mov
ud2
movsb
inc
rcr
xor
and
sub
jp
movsl
mov
mov
icebp
movsb
ficoml
cmpsl
mov
in
mov
insl
clc
or
sahf
jne
mov
call
push
bound
pop
out
lret
stc
adc
popf
enter
pop
pop
add
jmp
xchg
mov
xlat
lock
pop
pushf
std
cmpsb
sub
lock
and
fcmovbe
jge
push
stos
inc
jno
sbb
xchg
mov
fsubrs
aas
fists
inc
xor
adc
lea
fs
shrb
jle
and
xor
mov
les
sbb
lods
sub
xor
mov
mov
scas
or
mov
jno
dec
icebp
aad
ficomps
shlb
jl
shll
or
lret
push
sbb
sbb
movsl
cmpsl
rcl
outsb
out
mov
push
and
xchg
push
lea
sub
pushf
xor
or
movsb
push
mov
ds
dec
stc
test
int
cmp
jmp
mov
xchg
test
inc
les
test
or
cmpsb
or
jmp
push
addl
push
jge
dec
in
pop
adc
ljmp
push
or
dec
pop
and
jecxz
out
loop
shll
mov
cmp
mov
dec
cmp
adc
pop
sub
loop
xchg
and
xchg
push
ret
imul
push
cs
hlt
mov
pop
insl
icebp
outsb
xchg
sub
xchg
lret
pop
push
stos
and
xchg
push
push
pop
jp
adc
je
pop
hlt
dec
ljmp
push
xchg
push
push
mov
repnz
and
cmp
in
ror
int3
cmp
xchg
aas
adc
stos
sub
mov
push
jle
addr16
mov
adc
sbb
in
stos
and
pushf
cmp
xor
inc
jge
sbb
repnz
aam
xor
cmpsb
push
jecxz
shl
dec
sbb
xchg
stc
shll
or
pop
and
jge
inc
pop
lods
popf
pop
aaa
and
sahf
popa
and
int
iret
popl
jmp
enter
pop
movsb
push
outsb
xor
xchg
movsb
pop
and
mov
mov
xor
or
or
xor
jmp
cld
jno
in
call
or
cmp
jae
scas
sbb
icebp
mov
sbb
sbb
lret
add
dec
mov
hlt
add
loope
cmp
or
adc
movsl
xor
xchg
mov
call
fiadds
ss
sub
ja
jnp
mov
imul
ja
mov
inc
sub
gs
les
insl
sbb
out
add
filds
movb
or
pop
mov
dec
inc
inc
or
jecxz
jae
std
test
stos
xchg
rorb
xchg
aas
fwait
imul
xor
test
or
xor
adc
es
adc
in
rcrb
lret
jbe
push
clc
mov
dec
jae
sub
shrb
insl
mov
mov
insl
out
mov
iret
xchg
and
jbe
adc
cmp
push
adcb
lahf
push
dec
or
cmp
leave
mov
xor
into
xchg
dec
in
out
shll
dec
fwait
nop
maxps
sbb
fs
add
jg
loope
shl
xchg
vpshab
mov
ret
cmp
lock
loope
stc
test
jp
push
ret
inc
adc
movsl
adc
into
insb
jecxz
push
in
cmp
inc
scas
sub
aaa
add
mov
sub
mov
sbb
movsb
sbb
xor
repz
xchg
push
mov
mov
pop
mov
push
and
cmp
out
or
mov
in
xchg
cmp
out
test
addr16
jg
lret
out
addb
push
cwtl
add
gs
aas
pop
fistl
js
lds
lahf
movsb
pop
insl
les
in
enter
add
movsl
out
xor
cmp
xchg
lahf
dec
pushf
and
mov
dec
push
fdivl
pop
fimuls
sbb
cs
push
pushf
lret
daa
sub
je
loopne
ja
push
jno
push
inc
and
mov
fiadds
xchg
inc
incb
mov
mov
pop
das
shll
dec
int
cmc
pusha
enter
jge
and
out
int3
hlt
stc
and
or
sbb
jmp
shlb
sub
mov
xchg
pop
xor
lods
adc
das
mov
push
lds
inc
jge
or
test
jmp
stos
dec
shll
mov
test
sub
mov
stos
je
dec
pusha
push
aad
dec
jnp
inc
or
jmp
repnz
mov
mov
xchg
popf
ss
fwait
cli
fimuls
js
in
or
mulb
xchg
xchg
inc
pop
jmp
cmp
imul
sub
jne
subb
lds
pop
xchg
mov
mov
cwtl
shrb
sbb
add
jae
mov
mov
nop
adc
add
add
in
lret
cwtl
call
icebp
fistl
dec
xor
mov
jo
notb
pop
mov
or
cmpsb
or
movsb
dec
sub
fs
mov
and
ja
pop
sar
xchg
pushf
sahf
leave
inc
mov
lds
xor
add
mov
jl
or
mov
fsubl
jge
fldt
xor
cmpsl
scas
mov
push
fs
push
subb
sub
cwtl
pop
std
in
outsb
sti
or
aas
mov
ret
nop
inc
cli
and
rcr
add
loopne
adc
dec
test
mov
inc
add
jmp
js
vcomiss
adc
mov
inc
stc
js
jecxz
adc
cmpsb
xchg
dec
sbb
or
jnp
pop
test
fidivs
xor
aaa
imul
and
loop
push
xchg
inc
cmpsl
adc
pop
sub
mov
daa
fisubrs
bound
test
ja
or
jbe
mov
insl
mov
cmp
mov
xlat
push
xchg
cmp
cmpsl
out
inc
cltd
subb
mov
test
or
outsb
or
mov
pop
lock
lcall
nop
clc
addb
lods
filds
xor
sti
xchg
pop
sbb
or
dec
clc
jg
testl
xchg
and
sub
dec
cmp
adc
mov
xor
push
push
stos
in
pop
jge
or
mov
pop
mov
xor
divb
test
out
lea
ret
dec
add
or
lea
jp
inc
iret
ss
or
mov
xlat
lds
ljmp
pushl
bound
adc
mov
jl
ja
dec
inc
sar
fstl
loopne
mov
cld
std
pop
loop
jecxz
in
test
sti
cltd
or
cs
or
rolb
push
cmp
es
xor
or
inc
in
aad
xor
lds
mov
es
dec
clc
lret
sbb
loopne
mov
adc
dec
sahf
js
xchg
lods
cmpsl
pop
inc
jno
pop
mov
cld
push
adc
pop
and
push
nop
aad
add
sbb
data16
adc
insb
cli
in
cmp
add
pop
inc
mov
inc
pop
jmp
push
popa
xor
mov
mov
clc
sbb
cmp
xorb
loopne
jmp
sarb
jge
dec
scas
clc
daa
jae
lahf
out
push
out
mov
shll
jp
test
in
cmp
cwtl
mov
add
dec
add
mov
jecxz
xchg
sub
fistpl
lods
cli
ret
je
dec
add
movl
aam
inc
inc
mov
inc
or
icebp
pop
jns
test
xlat
shl
adc
dec
adc
or
pop
in
rol
insb
fwait
sbb
mov
ljmp
mov
or
jnp
mov
int
hlt
and
and
jmp
popa
loopne
lahf
mov
loopne
inc
mulb
push
lahf
cmp
pop
dec
lcall
push
sub
xor
add
lea
mov
dec
mov
dec
into
mov
test
push
push
inc
jl
mov
push
fscale
lock
pusha
clc
xchg
cli
jmp
stos
and
aaa
cltd
add
scas
add
mov
xor
adc
call
push
int
mov
inc
mov
out
and
popf
mov
pop
mov
jb
push
mov
mov
adc
das
scas
int
in
sub
jb
cmc
cmp
pop
jns
fiaddl
and
mov
fwait
xlat
inc
in
jmp
mov
cltd
pop
fnsave
mov
xor
mov
or
pop
cmp
inc
cmp
cltd
popa
aaa
out
push
int
add
outsb
mov
cli
lret
loop
jmp
xor
scas
add
add
cltd
inc
shlb
sub
dec
sarb
out
xor
ss
aam
pop
int
add
hlt
push
insb
mov
or
insb
es
lods
or
push
aaa
hlt
in
and
lods
outsl
cld
xor
pop
add
adc
ret
pusha
mov
mov
sub
cmp
mov
push
inc
push
outsb
dec
mov
push
sbb
jl
in
adc
xor
sti
lods
mov
jns
repz
mov
lods
pop
push
xchg
sub
cmp
jne
sub
rcr
pop
sbb
sahf
rcl
ljmp
and
pop
insb
leave
popa
lds
inc
xchg
pushf
sub
test
dec
sub
push
test
inc
std
pop
xchg
imulb
mov
mov
scas
sub
lods
jmp
pop
in
out
lods
cvttps2pi
adc
ss
mov
jae
mulb
cmp
les
and
or
xchg
mov
cmpsb
jmp
xor
xchg
popa
andb
mov
add
shrb
xor
xor
bound
pop
pop
ja
fldl
mov
mov
xor
int3
dec
or
daa
mov
xchg
mov
add
push
in
inc
xlat
fwait
dec
arpl
push
sti
pop
or
mov
mov
cmc
cmpsl
imul
push
imul
sub
push
or
inc
fistpl
shlb
lret
out
add
xor
inc
jmp
insb
cmp
and
mov
add
sbb
lret
loope
push
hlt
jmp
test
call
push
sub
dec
or
xchg
cmp
mov
jo
scas
push
cmp
ja
jmp
or
mov
ret
jns
leave
cmp
cmp
pop
test
or
std
mov
repnz
sub
push
rcl
out
subb
mov
cmp
push
repz
xchg
je
mov
dec
push
aam
adc
adcb
mov
or
push
cmp
mov
cld
dec
pop
adc
mov
sbb
jo
inc
je
test
push
test
cmp
jp
xchg
cwtl
pop
mov
bound
mov
cltd
into
subl
adc
inc
dec
and
mov
enter
test
fistpll
fwait
call
xor
clc
mov
adc
fadds
and
fwait
nop
testb
cmp
pop
push
insb
mov
dec
addr16
xor
push
push
mov
sbb
push
cwtl
imul
pop
in
fistpl
in
insb
js
out
lcall
stc
push
push
ffreep
or
das
lret
and
add
icebp
fisubl
pop
dec
pop
ficoml
test
fwait
iret
out
push
jbe
fs
xchg
outsb
xlat
jecxz
and
pop
ja
xchg
int
and
mov
popa
mov
add
cmpsl
mov
pushf
out
push
dec
push
inc
pusha
mov
push
je
mov
shld
add
pop
fiaddl
fcoml
mov
lahf
jmp
mov
les
int3
dec
pop
mov
and
mov
pop
dec
cmp
imul
xor
pop
rolb
add
test
cs
pop
or
shlb
loopne
adcb
sahf
push
aam
stos
inc
lea
lock
jl
std
popa
xchg
inc
xchg
cmp
jns
lcall
mov
out
xchg
loopne
adc
loop
or
xchg
sub
das
mov
out
icebp
ret
ljmp
sub
push
or
sarl
int
xor
pop
loop
hlt
imul
shlb
cwtl
xor
cmp
dec
and
push
add
stc
sbb
lahf
push
adc
stc
sti
loop
aam
push
sarl
sub
inc
lods
inc
inc
sarb
stc
iret
jbe
inc
out
sub
xchg
insb
sub
fimuls
fs
mov
in
mov
inc
and
call
insb
stc
les
mov
inc
lcall
sub
xchg
jnp
mov
filds
sbb
lret
lcall
xor
sub
iret
lret
pop
push
xchg
xor
push
fldenv
jb
pusha
icebp
push
int
jge
xor
dec
xchg
cmp
in
add
in
or
rclb
in
dec
clc
xchg
push
jnp
dec
mov
jae
ret
mov
stos
push
push
mov
xchg
add
mov
xchg
jno
mov
cmp
fucom
insb
pop
adc
xlat
test
mov
int
push
inc
rcll
cmc
in
sub
jne
push
in
fsubrs
cld
scas
inc
fs
push
xchg
sbb
data16
push
cmp
xchg
cwtl
inc
sub
scas
dec
pop
mulb
inc
sub
es
in
mov
sub
adc
cmc
inc
lret
lods
test
sbb
xchg
scas
cmc
test
mov
sbb
mov
jno
xor
xlat
aam
adc
jae
jb
inc
mov
aaa
ret
pop
jg
js
mov
test
lcall
jp
pop
mov
or
aaa
or
push
rcl
lcall
aaa
into
pop
enter
inc
push
pop
call
jge
sbb
dec
and
xchg
jg
xorb
push
and
scas
leave
ja
push
cmpsl
sbb
or
test
cld
jl
inc
adc
add
mov
pusha
addr16
aas
and
inc
pop
push
jl
mov
adc
popf
or
rolb
cwtl
or
mov
pop
out
fs
shll
dec
movsb
out
sbb
cwtl
js
or
pop
xorb
mov
addr16
mov
xor
adc
mov
mov
std
or
nop
dec
mov
jnp
mov
fcomp
in
xchg
into
push
movsb
mov
pop
pop
jg
addb
or
xchg
inc
xor
and
mov
or
arpl
adc
pop
mov
mov
scas
sub
xchg
sarb
jmp
mov
out
in
inc
sbb
mov
mov
push
pop
sbbl
sbb
movsl
inc
mov
mov
loop
cmpsb
les
push
aad
imul
pop
cli
mov
push
lds
mov
xor
scas
pop
cmp
aaa
sti
pop
cmp
pop
cmp
fldt
das
cmp
and
push
inc
pushf
aad
mov
inc
lods
addb
sub
inc
das
mov
jno
or
scas
jg
jnp
jne
mov
xor
enter
aaa
jb
sbb
enter
pop
sti
lahf
pop
push
cltd
mov
xchg
test
push
sti
into
stos
fcmovne
repz
jb
lock
loop
mov
in
pop
push
push
push
inc
cmpps
add
inc
stos
jne
ljmp
push
inc
xchg
add
pop
sahf
dec
inc
push
adc
push
pop
lods
push
lret
and
arpl
insb
adc
jle
cmp
cmp
lods
outsb
scas
cwtl
mov
xor
add
or
test
inc
mov
xchg
add
pop
add
mov
fldl
fldl
and
fisttpl
icebp
mov
cmp
aad
adc
push
icebp
xchg
ficoms
cmp
ret
hlt
sub
pop
jns
pop
mov
pop
lret
inc
scas
test
mov
adc
call
popf
add
push
das
addr16
call
les
fstpl
test
sahf
jmp
mov
xor
lret
push
pop
ljmp
push
mov
iret
outsl
push
pop
imul
push
fcmove
insb
sti
sub
jns
test
int
xor
mov
push
loopne
xchg
adc
or
int
jno
mov
cltd
mov
pop
pop
jg
enter
fimuls
cmp
push
xor
adc
notl
imul
or
inc
shlb
daa
mov
rorl
ljmp
jb
dec
cmp
add
incl
sbb
shl
ret
loopne
dec
outsb
jbe
xchg
notb
add
pushf
jecxz
push
lahf
adc
push
ja
shlb
pop
cmp
sub
loop
xlat
out
push
movsb
push
mov
pop
push
dec
stc
xor
das
jae
adc
jge
cmpsl
mov
je
ret
adc
mov
adcl
cmpsl
fldenv
inc
jbe
jle
pop
sbb
decl
jge
popl
sbb
jo
and
add
addb
cld
in
les
adc
cmpsl
cmp
and
mov
dec
push
insl
out
leave
out
lods
xchg
idivl
imul
mov
lods
test
fildl
leave
inc
mov
adc
hlt
out
dec
pop
jo
test
push
dec
add
xchg
popa
or
pop
pop
dec
je
notl
lahf
movsl
dec
out
in
stc
mov
mov
imul
add
sub
xchg
movsl
and
xor
push
dec
mov
xchg
push
xchg
test
aaa
mov
cmc
mov
pop
ret
arpl
sub
jl
ret
into
adc
lret
rcrb
add
loope
imul
xor
mov
incl
pusha
mov
ret
pop
push
pop
and
adc
fwait
jo
mov
xchg
sarl
insb
enter
adc
mov
inc
jge
inc
test
stos
out
cmc
jp
pop
cmp
out
jae
movsl
pop
fsubl
cmpsb
pop
inc
jl
sub
adc
clc
mov
cli
mov
mov
cmp
popf
jnp
adc
inc
arpl
sahf
pop
icebp
fucomi
scas
lret
inc
lods
pop
dec
xchg
aas
pushf
mov
es
add
xorl
fwait
cmc
lea
xor
add
loop
sbb
push
imul
and
imul
pop
popf
push
sbbl
mov
jo
mov
stc
xor
stc
leave
lds
ret
repz
push
add
cmc
mov
pop
push
adc
xor
mov
rclb
pushf
add
loopne
aaa
sbb
or
mov
jl,pt
cwtl
clc
ljmp
push
xorb
and
lahf
dec
iret
mov
adc
cmp
adc
fistpll
call
xchg
in
cmp
std
pop
jb
jns
add
sbb
leave
into
into
sbbb
add
out
jbe
xchg
popa
in
out
mov
iret
add
and
cs
and
mov
pop
sub
cmp
adc
jge
stos
jge
mov
mov
inc
addr16
pop
mov
add
or
push
or
fisubs
and
daa
pop
stos
fildl
push
push
jp
cmp
adc
fisubs
mov
mov
push
jae
mov
pop
pop
test
inc
jle
xchg
sbb
and
adcb
fdecstp
into
mov
lahf
cmp
sti
jmp
and
jg
push
mov
push
or
jmp
in
add
call
test
lahf
imul
sbb
mov
movsl
lods
sub
mov
xchg
adc
lds
push
mov
stc
pop
pop
stos
shlb
lcall
mov
and
push
pop
insb
push
xor
sub
jmp
xchg
out
daa
loopne
add
jge
nop
pop
pop
fbld
clc
lahf
inc
leave
adc
mov
cltd
pop
cmp
out
dec
mov
jne
or
stos
in
js
imul
orb
push
ret
mov
in
mov
insb
cltd
inc
jg
pushl
lea
xchg
push
ja
mov
or
mov
push
xor
fisubs
icebp
into
fdivrs
add
xchg
mov
xor
pop
pop
jbe
loop
or
das
xor
jp
cltd
jns
fnstsw
mov
push
jecxz
jle
mov
jg
mov
rcrb
lock
lods
mov
push
pop
jl
push
inc
xchg
pop
lcall
addr16
xchg
insb
xchg
insl
scas
leave
fcoml
xchg
jnp
adc
pop
out
fnstenv
xchg
ror
popl
mov
and
lock
addr16
bound
subl
aaa
sbb
aam
ficoms
pop
inc
outsb
mov
adc
cmp
cmp
mov
aad
mov
mov
dec
jo
xor
and
in
ret
jecxz
inc
pop
xchg
cld
mov
add
cmpl
shrb
sbb
and
das
dec
popf
jg
jg
outsl
ljmp
push
cmp
pop
add
mov
xchg
aad
in
imul
jl
lods
shlb
inc
push
gs
mulb
pop
push
sbb
or
adc
popa
loope
lds
or
jb
sub
addl
rclb
ret
lret
sbb
pop
fidivs
shlb
call
ja
imulb
sbb
popa
adc
fs
or
lahf
int
sti
addr16
mov
gs
xchg
outsb
xorb
jmp
aas
pop
outsl
pushf
adc
pop
inc
xchg
mov
pcmpgtw
mov
cmp
jmp
imul
mov
xor
bound
cmp
sahf
insb
push
push
push
pop
jbe
out
pop
and
lcall
mov
mov
repnz
rorl
call
mov
sbb
add
mov
xor
lahf
out
push
mov
jmp
stc
pop
std
loop
fwait
inc
xor
mov
mov
cmovb
jl
fwait
std
in
pop
testb
iret
pushf
jae
mov
movsl
jecxz
call
pop
cmp
jmp
dec
lahf
neg
leave
icebp
mov
jbe
pop
fstp
pop
bound
js
shrl
scas
mov
fildll
xor
xchg
xchg
lcall
sub
test
scas
inc
or
ficoms
loop
imul
ret
out
int3
mov
mov
and
cmp
jg
jno
and
ret
push
in
pop
cmp
adc
div
sti
sbb
aad
ret
jno
adc
pop
inc
test
sbb
stc
inc
je
mov
dec
jg
movsb
daa
int3
mov
and
ss
seto
cmp
jbe
push
das
xchg
push
dec
mov
xchg
and
pop
mov
leave
xchg
outsb
mov
push
into
push
mov
fmul
xlat
outsb
in
pop
push
add
cmc
inc
jp
push
outsl
xor
jne
pop
divb
jle
xchg
out
xchg
movsb
pop
cmpb
jg
jmp
cmc
or
cmpsb
add
jne
or
aas
adc
and
icebp
pop
out
shll
aaa
loopne
testb
rorl
add
adc
fstl
inc
andl
add
cmpl
mov
dec
sub
addr16
inc
leave
loopne
cmp
insb
shrb
roll
xchg
mov
adc
sbb
inc
and
pop
movsb
idivl
xchg
mov
sub
and
jnp
inc
sbb
ss
xchg
jns
and
inc
or
pusha
cmp
push
xor
lahf
or
out
popa
cmp
je
fdivr
push
sub
fldl
fiadds
cmpsb
ret
inc
or
loope
xchg
and
leave
push
lock
cld
dec
inc
pop
dec
mov
jmp
dec
icebp
mov
pop
xor
loopne
and
jae
pop
std
cld
adcb
stos
je
adc
hlt
sbb
stos
pop
push
addr16
inc
rcrb
mov
dec
jns
repz
inc
push
pop
jns
mov
scas
jl
dec
pop
inc
pop
lds
arpl
xorl
in
sub
scas
mov
ljmp
cmpsl
icebp
xor
lcall
push
arpl
mov
push
mov
dec
aaa
rcll
pop
cli
lock
ror
or
aaa
lds
xlat
and
xor
and
test
pop
mov
push
and
push
lret
inc
or
pop
repnz
sbb
ss
add
xchg
xchg
xor
mov
xchg
test
popf
out
dec
out
sbb
scas
dec
jno
sbb
add
add
mov
movsb
in
lds
adc
mov
push
subl
out
cmp
lret
fsub
mov
push
add
sub
mov
xchg
stc
test
xor
jns
jns
cwtl
xor
sbb
xchg
fimull
ss
xchg
mov
sub
mov
add
push
mov
inc
jo
addl
call
out
popa
jge
aas
shlb
into
mov
pop
bound
int
xchg
and
popa
xchg
xchg
mov
jge
sub
mov
enter
lock
and
add
mov
jle
aam
jno
fidivs
lods
or
jns
jge
sub
fs
daa
add
lahf
jno
mov
outsl
mov
cmp
lods
bound
push
fimull
popf
lods
clc
mov
mov
clc
push
stos
fsubrp
cld
pop
jl
shlb
mov
push
dec
mov
sbb
cmc
fwait
dec
cmp
and
stos
leave
testl
stc
cld
dec
data16
fwait
test
fdivl
mov
push
inc
movsl
jnp
mov
aas
xchg
mov
mov
loope
imul
adc
loope
out
je
insb
popf
fstpt
sbb
mov
dec
mov
lret
cmpb
scas
test
jecxz
test
add
sub
jmp
imul
pop
out
out
jnp
adc
mov
jbe
jg
mov
mov
sarl
push
decb
addb
inc
dec
cmp
sub
xor
and
int3
jb
push
iret
fsubl
dec
xor
pop
cld
mov
lcall
movsl
shl
sbb
call
push
adc
cmp
push
stos
rclb
adc
fnsave
fcmovnb
repnz
dec
and
mov
xchg
sbb
push
dec
repnz
popa
je
pop
xor
ret
or
pop
add
jecxz
js
int3
das
add
sub
out
scas
inc
xchg
pop
jnp
sbb
es
aam
loope
push
jo
dec
nop
out
call
cltd
push
lret
loope
lods
cmpsl
pop
inc
push
cmp
inc
cmp
addr16
jp
pusha
sub
cmc
xchg
setbe
xchg
mov
push
cmp
and
xchg
xor
fwait
adcb
lods
cmpsl
out
xchg
push
push
add
jbe
cmp
lods
imul
fwait
arpl
jns
pop
dec
mov
xlat
inc
add
mov
xorb
or
mov
adc
out
notl
cwtl
sbb
pop
pop
jecxz
imul
dec
or
insl
push
pop
lcall
inc
cwtl
xchg
or
call
lahf
shr
notl
loop
cmpsl
add
mov
lea
ror
iret
dec
pop
xor
ss
mov
js
lods
mov
sahf
mov
xor
inc
xchg
pop
sub
js
popa
shrl
rclb
mov
in
flds
or
inc
insb
pop
repz
arpl
rol
je
mov
jmp
pusha
fmul
pop
or
nop
and
roll
mov
add
hlt
rcr
pushf
ja
jg
leave
mov
mov
ljmp
sarl
xchg
ret
cld
stos
test
frstor
pop
mov
push
addr16
push
test
jae
push
test
mov
xor
hlt
icebp
scas
stc
popa
pop
int
mov
push
mov
loop
lea
mov
rcr
fdiv
movsl
xchg
int3
jle
fisttps
xchg
shll
sarl
popf
test
xor
shll
and
mov
mov
imull
dec
xor
icebp
pop
and
mov
in
shlb
or
xor
arpl
scas
scas
cmc
bound
imul
lret
push
mov
pop
lods
movsb
out
jl
dec
mov
and
sub
or
orb
imul
mov
enter
ret
push
call
rcrb
shl
fs
lds
enter
add
aam
sbb
in
jno
sub
scas
cld
jo
pop
cs
add
in
cmp
inc
cmp
add
dec
mov
pushf
xchg
xchg
leave
jno
push
sbb
sub
movsb
push
popf
leave
and
xor
mov
inc
pop
fxtract
pop
loop
ret
fimuls
inc
xchg
jmp
call
movsb
sub
ss
xchg
jnp
icebp
scas
ficompl
out
sub
push
and
xchg
orl
lea
lock
mov
fidivrl
divl
pusha
mov
scas
jb
adc
adcb
cmp
movsl
cmp
addr16
ljmp
pusha
aad
out
ss
in
inc
xlat
pop
or
pop
add
inc
test
push
int
jge
sti
sbb
push
or
out
xchg
das
rcll
adc
jecxz
jns
cld
lahf
addr16
dec
sbbb
idivl
stos
mov
jae
outsb
xor
xchg
mov
mov
in
xchg
inc
testb
mov
dec
cwtl
xchg
ljmp
xor
jle
fidivrs
add
loopne
inc
mov
xchg
and
clc
add
pop
sahf
cld
fists
es
fmull
cmp
push
scas
add
js
inc
or
sub
jg
ret
sti
pushf
shr
sbb
es
popf
addr16
adc
jo
fwait
jno
mov
fidivl
shrb
sub
sub
xor
push
pop
mov
and
imul
popa
sub
sbb
jge
shlb
stos
push
xor
lods
add
fcmovu
dec
ss
push
jmp
lock
cmpsl
mov
dec
out
mov
jo
rcl
adc
cltd
pop
and
stos
movsl
add
push
mov
aam
pop
out
and
mov
cwtl
fsubrs
push
pop
ret
lcall
fwait
rcrl
mov
adc
jmp
leave
jmp
pop
sub
dec
aas
pop
insb
adc
jge
adc
cmc
jno
or
popa
fimuls
dec
cmpl
sbb
mov
pushf
mov
sub
push
xorb
mull
lock
sahf
insb
cmp
pop
xor
mov
out
in
mov
test
jg
pop
repnz
jnp
bound
inc
pop
xor
nop
fimuls
aam
pop
popf
push
loopne
sub
mov
mov
pop
and
xchg
jle
xor
fldl
cli
add
rclb
jp
sbb
loope
shrb
or
lret
xchg
addr16
rolb
xchg
addr16
out
insb
insl
out
sub
pop
outsl
cmp
mov
stc
ds
stos
scas
pop
push
mov
ret
sub
inc
sbb
inc
jno
add
movsb
mov
sbb
jno
sbb
scas
out
xor
cli
mov
ficomps
in
pop
cmpsb
test
gs
pop
daa
leave
insb
cli
outsb
xor
pop
cltd
mulb
xlat
test
sahf
shlb
inc
addr16
inc
aas
jns
cli
pop
xchg
dec
lods
add
xor
xchg
pop
js
pop
sbbb
nop
pusha
xor
loope
cmp
mov
movb
cmp
scas
call
mov
push
aam
sub
shl
mov
aam
xchg
jp
and
into
cwtl
fdiv
push
mov
les
jmp
xor
rorl
outsb
pop
ret
adc
dec
mov
out
les
std
mov
shlb
mov
loope
or
out
or
loope
shll
cmovne
pop
or
gs
sub
scas
jle
fs
rcrb
dec
adc
cmpsl
cmp
xchg
je
sti
je
sbb
loop
mov
xchg
out
popf
jno
loope
jb
push
mov
rclb
test
movsl
scas
jne
pop
lret
sub
imul
jne
lds
jle
ss
cmp
mov
in
mov
and
sub
or
adc
adc
pop
movsb
and
adc
mov
out
pop
cmp
mov
dec
pop
sub
inc
xlat
ljmp
inc
and
adc
pusha
gs
mov
dec
push
pop
mov
mov
lahf
lea
pop
push
fistpll
sub
lret
sub
arpl
mov
lea
push
mov
sahf
lea
clc
sbb
popf
dec
inc
ds
pop
mov
sbb
sub
push
mov
add
xor
or
rcrl
stc
lods
sub
loope
xlat
xor
mov
psllw
xchg
inc
push
ss
repz
movsb
idivb
in
mov
or
das
cmp
inc
inc
loop
add
fcomps
out
sbb
pushf
and
idiv
inc
mov
pushl
mov
mov
jmp
pandn
movsl
jecxz
cmpsb
sub
pop
cmp
data16
add
or
add
or
xchg
fcomps
pop
ret
sahf
mov
out
push
mov
adc
mov
mov
arpl
mov
mov
mov
icebp
add
es
sub
fs
lcall
outsl
pop
fnsave
lods
in
push
sbb
mov
mov
mov
aas
jno
jb
aam
adc
fstpt
rolb
pusha
jns
xor
mov
popl
sub
and
movsb
cmp
cltd
shlb
xorb
pop
movsl
xchg
mov
xor
fdivr
les
lret
sbb
into
mov
out
popa
dec
shrb
mov
inc
fidivl
cmpsl
adc
ror
cmc
ffreep
das
mov
pushf
mov
adc
cltd
rol
adc
outsb
jae
es
repnz
pop
clc
rorb
jb
aaa
or
popf
jo
inc
inc
dec
cwtl
dec
jo
mov
push
gs
fnstsw
jp
lds
cltd
sub
fsubs
fsubs
adc
xchg
pop
flds
mov
jno
scas
fcompl
addr16
sbb
cltd
dec
push
add
cltd
jne
mov
mov
xchg
inc
cmpsl
pusha
add
sbb
xchg
in
imul
cmp
stos
out
dec
adc
dec
mov
and
aad
cmp
fbld
mov
nop
arpl
leave
enter
hlt
lods
int3
ret
je
imul
imul
outsb
cmpb
inc
enter
cltd
lea
data16
fcoms
or
pop
stos
mov
popf
inc
or
lcall
loop
jae
add
push
cmp
ljmp
sbb
push
push
sub
outsl
ja
pusha
iret
mov
pop
adc
sbb
xchg
aam
push
jl
arpl
shrl
clc
das
mov
push
into
mov
xchg
out
mov
jle
mov
xor
pop
xchg
rorb
loopne
xor
inc
icebp
cmc
popl
jge
lock
mov
sbb
lods
int
xor
mov
pop
sub
xchg
iret
outsb
fists
mov
pop
pop
adc
mov
stos
xchg
and
dec
hlt
call
in
pop
nop
outsb
out
dec
mov
leave
lret
dec
repnz
jecxz
mov
mov
out
loop
sti
pop
sbbl
adc
xchg
mov
jg
ficoms
out
repnz
xor
mov
aas
adc
jo
int3
mov
nop
inc
lret
test
adc
iret
mov
sub
or
cmp
gs
pop
int3
cmp
out
sub
aaa
push
and
sub
sbb
jge
in
push
lock
jne
stos
adc
js
popf
adc
pop
push
mov
int3
jnp
aam
ds
ljmp
gs
or
mov
sub
enter
mov
pop
mov
ret
mov
inc
xchg
pop
mov
imul
adc
inc
or
loope
push
cmp
aaa
pop
pop
repnz
add
cmp
xor
cmc
mov
fwait
mov
out
adc
sbb
fs
test
aaa
xor
dec
fiaddl
sub
enter
jmp
sub
inc
int3
cmpsl
notl
outsb
pop
cmpsb
pop
outsl
gs
add
into
ja
mov
popf
xor
je
mov
mov
negl
xchg
cmp
cmp
sahf
lods
sub
and
out
xchg
sti
sub
adc
pushf
pop
mov
mov
cmp
les
or
sarl
sbb
int3
std
cltd
in
xor
stos
fstpt
jecxz
jmp
insl
push
orl
inc
cmp
jae
aaa
sahf
mov
cmp
xor
ret
push
xchg
mov
xchg
in
sbb
repz
fistps
fcmovb
stc
push
fs
fwait
pop
inc
or
cwtl
addr16
adc
jo
dec
popa
xlat
mov
inc
jle
mov
xor
mov
sub
xorb
dec
mov
add
dec
scas
jb
pusha
dec
ljmp
cmp
push
dec
pop
outsl
pop
cltd
sbb
aaa
mov
adcl
fisubrs
fcomp
clc
leave
out
dec
gs
xor
dec
mov
fimull
stos
fcom
push
pop
pop
pop
fstpl
add
xchg
push
push
push
outsb
ds
jb
mov
xchg
outsl
jae
mov
mov
arpl
mov
dec
cltd
cmpsl
repz
adc
mov
int3
xlat
int3
lea
pop
sbb
pop
pop
sbb
xlat
int3
lock
sub
in
ljmp
stos
xchg
xchg
cmpsl
testl
dec
adc
jg
je
xor
cwtl
xchg
enter
popf
fwait
stc
jbe
cmpsb
mov
inc
pop
xchg
addr16
sbb
mov
scas
lahf
stos
cld
loop
mov
pop
iret
jecxz
cltd
lret
loope
xchg
push
xchg
imul
jne
dec
popa
pop
push
jbe
mov
jb,pn
mov
sti
add
hlt
in
push
shrb
mov
andl
and
das
push
lods
mov
cmpl
jmp
mov
mov
fstl
aas
jnp
mov
std
jno
fiaddl
arpl
aam
pop
pushf
fstpl
ret
push
test
or
adc
popf
or
pusha
pop
call
inc
dec
addr16
scas
xchg
mov
sbb
jb
enter
sbb
ret
loopne
in
jo
lret
stos
ja
mov
add
cmp
insb
sbb
mov
mov
sub
test
adc
outsb
and
fwait
inc
mov
cmp
pushf
pop
movsb
xchg
push
repnz
lock
pop
inc
push
loop
adc
es
ja
icebp
dec
jl
adc
and
sbb
push
adc
pop
push
dec
jl
push
jb
mov
movsb
and
pop
aaa
add
jmp
or
jle
xchg
test
dec
mov
les
xchg
in
add
jae
jbe
mov
mov
pop
out
xor
loopne
dec
dec
stc
mov
scas
lahf
xor
ja
je
pop
mov
ja
jecxz
popf
iret
cmpsl
sbbb
add
pop
shll
imul
jnp
adc
pop
sub
sbb
cmp
xor
gs
xor
ret
mov
ret
and
lcall
pop
leave
fs
and
cmpsl
int
mov
push
xchg
xor
pop
cmp
fisubrl
mov
imul
add
xchg
mov
jns
inc
mov
mov
cmp
push
and
fs
mov
clc
and
push
mov
pushf
jbe
mov
subl
repnz
clc
lods
mov
fisttpll
add
dec
push
cli
lock
mov
xor
adc
push
push
xlat
adc
pusha
arpl
xchg
mov
scas
and
mov
and
or
add
pop
pop
gs
and
and
imul
sahf
and
cmpsl
lahf
pop
mov
cmpsl
sub
mov
mov
mov
nop
enter
int
outsl
neg
test
xlat
sub
daa
cmpb
repz
fcmovbe
mov
mov
or
adc
mov
cmp
or
stc
sti
mov
pop
lcall
pop
or
inc
xor
mov
jbe
jg
gs
iret
and
orl
xor
and
lret
jne
push
mov
jg
xchg
cmp
cld
sbb
xchg
pop
xor
and
inc
js
pushf
dec
cmpsb
mov
rolb
rcll
lds
sub
mov
and
insb
call
cmp
rol
ret
pushl
push
jg
dec
xchg
inc
rolb
repz
xlat
enter
jns
stos
test
pop
repnz
xchg
mov
and
adc
lock
push
ja
jl
subl
sbb
jo
jne,pt
adc
dec
loopne
scas
inc
mov
mov
xor
sub
push
and
adc
add
lret
xor
loopne
pop
scas
add
icebp
stc
outsl
test
je
adc
arpl
push
fucom
cld
testl
pop
mov
pop
push
inc
idivb
cltd
outsl
sti
lcall
in
or
pop
cmp
jl
fsubr
jb
mov
aas
jae
or
mov
xchg
add
and
jp
mov
pop
push
xor
scas
add
push
adc
and
lds
stos
inc
or
sub
cmp
mov
and
leave
inc
xchg
sub
jecxz
inc
fcoms
stc
mov
push
jae
rep
cmpsl
mov
fs
cmpsb
nop
push
das
orb
into
dec
inc
pop
es
pop
rcrl
and
icebp
xor
fcoms
sub
int
adcb
test
sub
lret
xchg
sub
dec
dec
adc
rorb
lods
repz
dec
cmp
jne
pop
mov
push
mov
dec
push
insl
daa
lret
pop
lret
add
mov
out
sbb
inc
sahf
mov
adc
or
add
aam
rcrb
jmp
xchg
mov
jle
xor
cmpsb
mov
repz
insb
ficomps
dec
outsb
in
jns
or
or
mov
mov
sub
push
xor
dec
aam
nop
lcall
pop
xchg
pop
push
sub
jo
jle
shll
jl
daa
sahf
je
sarb
pop
sbb
icebp
push
das
mov
negl
and
negb
sub
pop
and
enter
sahf
sahf
arpl
es
incb
cmp
loope
push
sub
frstor
in
das
leave
ss
fimuls
cwtl
jno
adc
mov
push
out
add
mov
in
pushf
in
je
mov
rcrb
ficoml
cmpl
out
sbb
inc
lea
cwtl
into
stc
cltd
dec
shrb
lahf
jle
adc
dec
inc
aas
mov
and
adc
push
xchg
pop
insl
into
mov
outsb
mov
inc
fsubs
cli
shrb
cld
cmp
inc
adc
adc
in
loop
xor
iret
mov
mov
and
xor
mov
push
hlt
adc
dec
repz
xchg
fildl
xchg
pop
cmp
je
lock
sub
xorl
mov
inc
in
sarb
hlt
or
icebp
push
push
arpl
cwtl
add
fmuls
jg
or
imull
mov
sbb
shl
xchg
mov
dec
jbe
cltd
aad
or
mov
insb
add
pop
lea
mov
test
loopne,pt
test
mov
inc
fcmovnb
sub
imul
jae
stc
daa
in
fs
and
mov
jle
pushf
lds
int
inc
fldl
iret
mov
mov
data16
and
xchg
sub
xor
ret
das
push
ret
or
mov
mov
dec
inc
into
mov
sbb
rdmsr
or
xor
adc
cmp
lcall
lods
jl
fwait
orb
xor
js
cld
jle
scas
mov
addl
jle
imul
push
ljmp
sub
imul
mov
and
shll
mov
ret
jb
or
test
insl
sti
movsb
adc
out
shlb
add
and
hlt
pop
jne
push
dec
push
dec
nop
sub
lock
jle
fists
and
data16
mov
cmpsl
outsb
and
xchg
mov
mov
lods
into
rclb
cmp
out
xchg
push
fnstsw
and
push
add
xchg
stos
push
test
pop
xchg
iret
repz
sub
add
inc
xor
aaa
sbbl
and
or
out
nop
enter
cwtl
xor
lcall
inc
repz
xor
mov
arpl
sbb
or
add
or
call
idiv
xor
mov
push
jp
pop
addr16
lret
sub
ja
jmp
lock
xchg
jb
jge
clc
repnz
stos
xchg
push
pop
rclb
jecxz
fistl
outsb
mov
fstpt
shll
pop
jl
and
incl
push
pop
int
adc
std
jae
xlat
test
addr16
aam
sub
sti
and
cmp
movsb
ret
xchg
std
push
pop
arpl
jnp
cltd
cs
loope
or
cltd
fistps
pop
inc
out
inc
lret
dec
add
pop
mov
mov
xor
lahf
adc
dec
and
push
inc
push
ror
pop
inc
sub
cld
xchg
pop
jnp
fiadds
cmpsl
das
mov
test
fs
dec
xchg
inc
dec
and
mov
ljmp
push
add
fbstp
stc
out
cmp
in
inc
jbe
xchg
dec
mov
or
push
push
ja
rcrb
sub
jecxz
push
imul
test
jae
push
xchg
leave
adc
or
jmp
test
add
mov
xchg
ret
mov
rclb
jmp
cwtl
das
loope
jae
mov
mov
inc
repnz
inc
push
std
adc
sub
jbe
mov
adc
xlat
enter
bound
repz
cwtl
sub
icebp
fisubs
inc
ficoms
dec
mulb
sbb
inc
or
or
lock
sbb
ljmp
push
push
sub
inc
add
fsubrs
ss
imul
sbbb
test
inc
sbb
iret
insb
sub
es
push
mov
sarl
inc
movsl
loope
cmp
rcrb
inc
lahf
add
in
fistpl
das
adc
aad
mov
xlat
test
pop
imulb
negl
jns
into
push
stos
js
inc
icebp
jp
push
pop
pop
xchg
movsb
jae
sbb
sub
mov
adcl
jl
clts
mov
jno
shll
mov
xor
stc
lds
subb
fs
ljmp
leave
rorl
jae
mov
lds
insb
lods
pop
or
jl
sub
add
lea
sbb
ret
in
inc
mov
aam
cmp
stc
shll
imul
pop
out
movb
addb
std
test
pop
mov
xchg
sub
sbb
ret
mov
push
test
imul
repnz
mov
in
inc
inc
mov
mov
adc
add
mov
in
jae
ret
ret
or
sub
movsb
jmp
and
lret
mulb
ljmp
imulb
push
mov
int3
mov
mov
push
scas
xchg
iret
xchg
cmpsl
arpl
into
push
cmp
pop
mov
mov
push
mov
sub
dec
sbb
out
gs
in
jnp
sahf
inc
dec
daa
in
sti
nop
push
loopne
jae
dec
das
shl
mov
dec
pop
cmpsb
add
xchg
clc
fs
dec
pop
xor
arpl
inc
adc
push
in
testl
add
movsb
xor
ficompl
lods
sub
mov
pusha
aaa
out
icebp
fisubs
int3
jo
or
mov
push
push
mov
dec
mov
jns
test
daa
mov
cmpsb
inc
mov
fistpll
jb
or
call
fcmovu
pop
lock
fsubrp
fwait
clc
pushf
mul
sti
repz
or
add
adc
mov
pop
push
popa
xorl
pop
xchg
inc
cmpsb
pop
adc
loop
pop
add
movsb
rolb
je
sub
popa
stos
dec
fwait
push
jb
xor
int3
leave
sbb
mov
mov
push
jle
jns
pop
push
fsubs
std
dec
scas
mov
mov
inc
inc
and
pop
fs
fsubs
call
xchg
js
dec
in
in
jp
add
jp
mov
mov
inc
movsb
test
mov
aas
outsl
cli
jae
cld
aam
mov
lds
scas
sub
jns
xchg
jnp
dec
push
stos
sub
fisttpll
jle
mov
xlat
ss
cwtl
pop
or
push
mov
ret
xchg
xor
mov
xchg
loop
add
xor
mov
push
mov
dec
pusha
jecxz
mov
mov
and
push
mov
fwait
xchg
sbb
daa
aad
push
add
mov
push
enter
mov
dec
mov
jo
in
sub
out
pop
xchg
mov
mov
push
mov
std
mov
sbbb
dec
test
scas
mov
sbb
push
sub
xor
xchg
sbb
leave
cmpsl
iret
push
add
cltd
out
push
fsubs
dec
or
fsubrs
lcall
mov
popa
and
or
xchg
jmp
sub
mov
in
jb
fsubs
xchg
ss
jge
repnz
add
dec
std
call
in
jp
and
rcll
imul
repnz
ja
xchg
das
sub
aad
jl
or
mov
xorl
aad
xchg
arpl
sahf
lahf
jl
push
gs
inc
lret
sub
in
shll
ret
mov
xchg
pop
and
dec
push
test
mov
ss
leave
add
xchg
lcall
idivl
loopne
aas
je
sti
add
sub
adc
mov
int3
xchg
leave
movsb
sub
cmp
add
hlt
cmp
into
xor
lods
xchg
sbb
aas
std
and
pop
mov
mov
pop
jp
testb
pop
shll
div
dec
xor
enter
imull
or
pop
sbbl
hlt
jbe
dec
and
inc
mov
pushf
icebp
dec
sbb
lret
sub
rcr
hlt
mov
enter
adc
mov
movsb
mov
fnstsw
jo
sbb
push
gs
xchg
fstps
dec
jmp
inc
in
dec
stos
hlt
out
stc
push
dec
stos
out
add
mov
sarl
call
cwtl
jle
insb
xchg
inc
mov
mov
daa
push
inc
sarb
test
sti
iret
nop
inc
stos
mov
cmp
out
decb
pop
imul
or
pop
adc
or
inc
fwait
outsl
sbb
movsl
or
mov
sub
pop
fbld
xor
xor
scas
in
in
cmp
in
push
mov
sbb
popa
xor
adc
add
in
dec
mov
or
adc
or
repnz
push
xchg
fwait
gs
jge
or
mov
pushf
lcall
pop
push
incb
fsub
xchg
pop
idivb
add
sbb
imul
pop
pop
jnp
adc
aad
icebp
loop
aam
jmp
sbb
adc
in
jge
mov
movsb
rcrl
cmp
dec
xor
and
cmp
mov
xlat
jmp
or
scas
out
aas
test
arpl
mov
sbb
cmpsb
negl
in
in
aas
andl
imul
mov
sbb
mov
add
mov
inc
mov
add
or
cmp
cs
repnz
pop
mov
ficoms
les
movb
inc
pop
hlt
mov
fdivl
push
pop
push
jae
adc
jge
dec
jp
movb
cmc
adc
sub
push
pop
and
fstps
shl
sarl
mov
jne
lods
mov
cmovge
lcall
bound
push
sub
dec
lcall
mov
cmp
inc
or
sbb
fucomi
in
mov
push
sbb
aad
imul
jbe
sti
jnp
jl
jle
mov
repz
dec
les
dec
fisubs
shrl
mov
push
daa
adc
jle
test
ss
imul
jno
outsb
jbe
scas
stos
jae
and
inc
add
rcrb
insl
dec
cmpsb
or
js
out
and
push
xor
push
mov
adc
jbe
aam
aad
pushf
jmp
xchg
fsubp
ss
aam
sti
pusha
aad
mov
daa
or
mov
xchg
enter
cltd
xor
sub
rcrl
add
test
lods
shrl
inc
mov
xchg
adc
jno
pop
rorl
sub
inc
test
dec
pusha
repz
xchg
leave
fdivr
xchg
adc
lret
jne
sbb
sbbb
stos
outsb
in
aas
or
adcl
loop
adc
ret
in
xchg
mov
imul
xchg
cmp
pop
sbb
fimull
cmpsl
xchg
bound
jno
fdivrl
or
fs
aaa
repnz
mov
or
js
xchg
mov
loop
jmp
das
aad
lea
bound
js
aad
ret
loopne
movsl
jl
push
ljmp
jmp
jecxz
cmpsb
je
xor
ret
jae
movsl
filds
clc
out
adc
cs
or
mov
hlt
fdivrs
es
xor
xor
aam
sub
ja
mov
xor
imul
mov
sbb
fstpl
push
leave
outsl
andb
fisubl
mov
das
or
push
fidivrs
cmp
dec
icebp
cmpsl
imul
sahf
test
mov
mov
sub
xchg
fcoms
rclb
xchg
pusha
cltd
ds
push
add
adc
cmp
pop
push
subl
lock
out
xchg
out
je
fs
stos
aam
add
out
mov
sub
add
xorl
iret
mov
xchg
aas
lea
call
aam
mov
add
inc
insl
and
add
inc
pop
in
imul
aam
stos
ja
mov
inc
dec
dec
xlat
fcoml
mov
inc
arpl
lahf
repnz
scas
out
inc
ds
sti
ja
aam
stc
jnp
ds
sbb
decb
outsb
movsl
fchs
popf
sub
in
and
inc
popa
clc
leave
iret
add
xlat
enter
push
sahf
rorl
cltd
mov
jns
mov
sti
pushf
repnz
shrb
ss
push
add
mov
dec
pop
cmp
bound
dec
out
lods
nop
xchg
out
cmpsb
orb
fstp
cmp
sub
mov
xor
sub
push
jns
jmp
jle
cmp
dec
bound
cmp
xchg
push
mov
jae
test
sub
iret
mov
dec
fstpt
mov
mov
jb
in
add
jns
lds
rcll
inc
idivb
xlat
push
shll
mov
xorb
mov
jmp
sbb
sbb
loop
xor
aad
mov
adc
jb
int3
jo
jp
xchg
add
notl
push
xchg
xor
rcrl
mov
pop
xlat
mov
push
inc
ret
enter
xchg
add
cmc
mov
sbbl
jge
xchg
stos
outsb
loop
jne
test
pop
jge
orl
in
add
dec
mov
fnstenv
adc
mov
jmp
jecxz
lahf
imulb
out
insl
sub
gs
xchg
jg
bound
pusha
imul
das
add
mov
or
xchg
lods
mov
add
mov
adc
out
lock
aad
and
or
out
add
dec
xlat
jmp
adc
or
ret
add
cmc
jl
cmp
rcrb
bound
fcoms
cmp
mov
jnp
pop
push
xor
ss
jbe
mov
or
mov
pop
sbb
shll
jmp
scas
addb
mov
loope
loopne
adc
fdivl
sub
pop
incb
inc
xor
xchg
ja
cmpsl
pop
push
scas
iret
xchg
ficoms
jle
cwtl
addl
ret
push
pushf
push
in
xchg
adc
mov
out
xchg
mov
leave
fisttpl
lds
sbb
pusha
mov
add
call
mov
add
push
add
mov
js
lea
and
loope
mov
decl
ret
dec
sbb
mov
call
dec
xor
mov
lahf
pop
popw
aaa
xor
das
add
mov
cld
sbb
test
sahf
jae
sahf
sub
pop
gs
sub
sahf
xchg
dec
fmul
fwait
cmpsl
jl
je
lea
daa
pop
or
sahf
aam
hlt
jno
pop
mov
das
aaa
loope
outsl
mov
cs
adc
adc
das
movb
mov
in
dec
popf
jle
xor
jae
add
scas
pop
lcall
cwtl
and
sbb
mov
mov
inc
sub
adc
sub
add
fsubr
addr16
push
inc
nop
dec
fidivl
mov
pop
rorl
into
fildll
iret
push
cli
pop
or
or
out
cld
into
out
subb
cmpsl
pop
jl
je
fdivrl
cltd
inc
and
in
xor
xchg
pop
stc
push
shll
mov
out
sti
iret
adc
or
fisubrs
in
xor
lock
flds
stc
inc
and
jl
or
sbb
xor
imul
xchg
jb
std
pop
insl
sub
lret
hlt
in
xchg
mov
aam
sub
aas
jg
incb
sub
sub
push
imul
in
mov
pop
sub
xor
mov
cld
data16
push
cmpsb
cmp
jle
es
movsb
sbb
inc
and
mov
orb
jecxz
cmp
imul
frstor
pop
cmpsb
js
pop
xchg
popf
add
fimuls
jne
mov
and
mov
mov
call
int
orl
cli
cs
es
imul
or
nop
push
jmp
jbe
dec
subl
jno
out
test
mov
roll
inc
inc
mov
das
sbb
lea
jmp
mov
ds
test
push
insb
js
mov
out
xor
cmpsb
cmp
sbb
je
sbb
and
hlt
loop
lahf
ljmp
mov
icebp
ss
lds
fs
hlt
shlb
mov
or
sbb
push
pop
mov
cld
out
mov
xor
dec
mov
stos
lret
repz
inc
mov
rcrb
movsl
push
ljmp
mov
sbb
mov
aas
adc
cmp
cmp
aaa
push
mov
js
ja
xor
xchg
cmp
jns
push
dec
and
call
pop
fsubs
pushf
lock
loopne
sub
inc
mov
mov
adc
jo
mov
push
push
mov
adc
test
jl
sbb
dec
xor
mov
das
cs
xchg
cld
inc
dec
jb
les
push
sahf
inc
leave
jno
jle
sub
stc
inc
or
popf
sbbb
xor
inc
ret
sbb
ds
push
adc
or
inc
fdivrs
adc
xchg
insb
cmp
add
add
aam
push
or
mov
lret
outsb
jo
sub
scas
loop
xor
mov
rcrl
adc
fldln2
or
roll
cmp
cli
lods
xchg
jb
pop
leave
mov
push
sbb
int3
add
std
pop
pop
out
push
xchg
and
repz
cltd
outsb
jmp
xchg
std
jmp
xor
in
bound
dec
std
aam
push
mov
roll
test
mov
rcrl
pop
jge
inc
dec
lods
lds
pop
and
inc
push
cmp
adc
lods
cltd
jle
fstpt
jp
lret
xchg
adc
jns
into
mov
add
dec
imul
ljmp
scas
loop
in
cmc
fdivl
movsl
test
xlat
xchg
mov
loope
insb
js
out
sub
jbe
push
jne
sbb
fs
sbb
xchg
repz
cmpsl
cmpsb
subl
out
add
sbb
sbb
jbe
lea
cmpsl
xor
or
sahf
xchg
rep
lret
callw
ds
adc
inc
mov
nop
sub
fs
or
icebp
sahf
scas
xchg
sbbb
cmp
or
mov
cmpsl
lock
sbb
push
cmp
ljmp
jae
xor
jmp
sub
xor
jle
mov
lahf
ss
shll
addr16
mov
lock
sahf
out
outsb
sbb
mov
sub
int3
mov
push
ja,pn
rorl
add
xor
call
lcall
cs
lods
icebp
inc
testb
stos
repz
sub
pop
xchg
and
add
mov
xchg
mov
into
sub
gs
push
xchg
mov
rol
pop
stos
daa
pop
add
lock
mov
xchg
imul
sbb
jge
push
ja
inc
mov
and
stos
dec
xor
jno
pop
sti
jae
lock
jne
mov
mov
adc
lcall
je
mov
jmp
push
mov
loopne
arpl
push
sbb
dec
inc
aas
and
mov
and
push
jg
adc
lods
add
mov
loop
ds
lahf
dec
push
mov
test
jnp,pt
lods
in
xlat
in
fucomip
sbb
adc
mov
addl
out
insb
lahf
scas
and
lods
mov
pop
pop
pushf
pop
bound
enter
xchg
sahf
fadd
or
rcr
or
inc
add
leave
clc
xor
gs
jbe
popf
and
and
sbb
xchg
add
imul
sub
cmp
push
push
dec
jg
sbb
mov
sbb
jge
or
shlb
push
push
push
mov
aam
adc
and
int
or
mulw
aaa
iret
inc
scas
out
repz
insb
ja
imul
cmpsb
mov
sbb
inc
mov
sub
push
lret
mov
and
adc
call
sbb
std
out
push
shlb
cmp
xorb
fs
call
gs
mov
jp
test
dec
cwtl
movsw
sahf
mov
pop
pop
sbb
call
pop
mov
and
loop
out
push
inc
repnz
ja
mov
nop
insl
cmpb
lcall
jb
inc
js
sbb
mov
push
loopne
pop
mov
add
dec
dec
jp
xchg
cmp
add
popf
popa
test
outsb
dec
pop
add
out
in
xlat
cld
lret
sub
mov
fnsetpm(287
movsl
xor
or
xchg
es
xor
jb
outsb
add
stos
mov
test
in
pop
je
sub
lods
inc
jl
inc
adc
das
xchg
lret
dec
movsl
mov
push
les
rclb
scas
add
mov
repnz
movsl
jl
jo
push
ret
scas
cmp
arpl
mov
push
adc
cmp
filds
jnp
nop
xchg
mov
mov
rol
sub
in
jbe
add
test
iret
pop
int3
movsb
ljmp
inc
push
xor
mov
xor
xchg
cmpsl
lcall
xchg
add
jns,pn
push
xor
sub
cmp
cld
mov
out
mov
ss
enter
das
pop
xchg
lods
push
sub
shrl
push
std
ds
ds
insl
inc
mov
imul
jl
jle
int3
inc
pop
sub
loopne
xchg
or
or
push
mov
mov
loopne
out
fwait
lods
dec
mov
repnz
rclb
inc
addr16
popa
sti
or
mov
cs
frstor
subb
out
imul
ja
sahf
addb
dec
pop
mov
adc
ss
inc
js
push
cmp
mov
iret
dec
or
bound
iret
jae
fiaddl
cmc
jl
mov
lahf
xchg
push
jne
xchg
jns
inc
scas
cmp
test
mov
jno
jno
xchg
imul
sub
out
mov
inc
in
add
mov
push
jmp
lock
mov
fcomps
scas
outsb
push
mov
rcl
fists
setg
and
aad
and
cmp
hlt
cmp
das
lcall
test
adc
stos
sbb
xor
scas
jecxz
popf
add
push
cmpsl
adc
add
or
mov
fwait
or
lret
push
pusha
mov
fs
ljmp
mov
mov
inc
add
je
pop
adc
xchg
test
shlb
fimuls
aaa
push
dec
adc
mov
jecxz
faddp
mov
mov
int3
and
and
fiaddl
imull
pop
les
adcl
sarl
arpl
loop
ljmp
aaa
popf
jno
scas
js
aas
test
xchg
push
out
fdivs
mov
push
inc
sbbb
mov
scas
stos
xor
aad
sbb
jge
jb
jno
mov
test
stos
cmpsl
pop
mov
add
hlt
mov
arpl
and
out
xchg
pop
or
mov
movsl
mov
pop
xchg
jb
and
test
jle
ret
jb
test
addr16
and
out
mov
les
pop
in
adcb
in
jbe
adc
pop
mov
jns
insl
lds
repz
fs
sbb
lea
push
icebp
movsb
imul
xchg
inc
push
or
xchg
fisttpll
mov
sbb
mov
cld
shl
push
push
mov
add
cmc
jle
ret
or
std
sbb
jbe
pushf
fndisi(8087
mov
lea
aad
adc
ja
pusha
sub
inc
mov
dec
out
adc
out
rclb
subl
cmpsb
adc
cwtl
push
fnsave
xchg
and
xor
mov
iret
inc
push
sbb
sbb
jp
imul
xchg
cmp
ljmp
je
xor
in
popf
jmp
clc
add
ret
shlb
outsl
cmpsl
stos
mov
xor
enter
push
mov
shlb
std
rcl
out
idivl
adc
inc
add
xor
jl
addb
adc
jp
sti
in
adc
mov
jle
fisubrl
adc
sub
cmp
and
add
loope
or
push
xorb
js
fwait
sti
jp
int3
subb
ret
stc
push
loop
adc
lret
aad
lods
xorl
cmp
cld
int3
add
addb
js
push
ret
cmp
jns
shll
outsl
ja
insb
xchg
jp
mov
or
or
lock
adc
mov
aas
xchg
push
aad
std
int
xchg
sbb
xchg
out
loope
sub
clc
sbb
sub
call
mov
adc
fcompl
or
inc
fprem
add
lret
hlt
outsl
mov
enter
cmp
add
inc
dec
into
out
xchg
fidivl
imul
bound
call
pop
lods
xor
dec
outsb
inc
and
or
mov
in
mov
sub
dec
fsubrs
mov
clc
xor
cmp
out
std
hlt
dec
add
cli
cmp
mov
fdecstp
sub
adc
jbe
dec
insl
test
mov
pop
ja
out
and
inc
jg
xchg
push
xchg
sahf
bound
inc
adc
mov
sub
fisubrl
cmp
loope
lods
imul
push
incl
mov
test
clc
dec
cmp
xchg
mov
sbb
adc
jle
aad
pop
aad
mov
aam
inc
mov
xchg
inc
inc
xor
sbb
cwtl
imul
mov
xor
push
add
mov
inc
aas
or
call
cmp
call
arpl
sti
int3
ficompl
cmp
pop
lods
out
pop
mov
mov
jnp
dec
mov
pop
mov
test
ret
fcomi
push
pop
in
push
dec
xchg
inc
sbb
test
ficoms
cmp
push
rcrb
fdiv
lea
xor
jno
pop
jno
out
cltd
iret
ljmp
ss
jle
das
fcoml
lcall
sub
cwtl
pop
and
es
mov
pop
bound
rcrl
xor
mov
sub
jp
cmp
xchg
mov
stos
fwait
push
in
add
mov
push
pop
dec
loop
xchg
dec
jecxz
and
xchg
jle
xchg
insl
iret
pop
xor
jmp
shl
lcall
dec
iret
jns
test
pop
jle
testb
xchg
das
or
inc
dec
into
cmc
loope
test
mov
test
xchg
mov
out
mov
mov
in
sub
jp
mov
ss
dec
test
es
push
pop
nop
mov
out
jmp
inc
mov
xor
insb
adc
add
mov
or
add
out
or
pop
fldl
aam
ret
xor
test
scas
dec
xchg
and
inc
outsl
ds
cmp
addl
aam
mov
mov
sub
pop
add
loop
mov
xor
cmpsb
xchg
and
sub
ds
jae
jp
call
lock
call
in
lret
jecxz
cmp
cmpl
pop
roll
test
int
jmp
sti
cmpsl
aam
roll
mov
jo
mov
outsl
movsb
add
add
mov
push
pop
test
pop
movsl
push
xchg
outsb
jecxz
push
jl
je
js
shll
jl
dec
pop
mov
popf
pop
jmp
fstpl
jge
movb
lea
fcomp
rorl
jmp
pop
fstl
sub
sbb
xor
js
sub
xor
cmc
js
int3
popf
cmc
outsl
jecxz
stos
sbbb
dec
popa
mov
lret
adc
lahf
iret
mov
insl
mov
test
push
js
adc
lea
and
cmc
fdivs
mov
popa
cmp
rolb
nop
call
test
movsw
xor
ds
xchg
je
lret
fisttps
in
test
mov
sahf
iret
mov
jo
jmp
push
fnsave
cmp
insb
aaa
pushf
push
pop
or
pop
out
xor
push
fcomps
sbb
push
pop
cmp
or
fimull
aas
or
cmp
call
adc
xor
daa
xchg
push
xchg
pop
push
cmp
popf
test
call
adcl
cmp
scas
gs
fdivrp
jge
pop
xchg
or
sub
inc
jge
test
cltd
je
mov
lret
cld
sub
outsb
bound
test
mov
xor
fimuls
push
les
or
cmp
jp
cltd
pop
add
jo
cltd
and
adc
pop
dec
cwtl
xlat
push
mov
jno
xchg
pop
int
and
and
das
mov
jnp
test
push
push
out
loopew
imul
and
clc
mov
push
fsubrs
loope
insl
push
or
iret
dec
sarl
rcll
dec
mov
scas
iret
add
xchg
outsb
mov
or
mov
inc
aas
add
or
jbe
sub
rorl
xlat
lods
inc
inc
sub
pop
xlat
out
mov
sbb
push
xchg
push
pop
pop
stos
mov
sarl
das
adc
clc
test
test
or
pop
lret
xchg
aas
shl
mov
mov
and
in
push
xlat
mov
sbb
push
adc
cmpsl
ficoms
xor
repnz
bound
mov
test
mov
ss
dec
in
into
inc
cmp
pusha
lret
push
and
sbb
pop
inc
std
jle
sbb
cmp
mov
pop
pushw
add
push
xchg
sub
pop
and
mov
js
cmp
xor
ret
idivb
cli
jmp
cmp
sub
sbb
mov
bound
xchg
sarb
jle
jno
mov
shlb
rclb
dec
pop
push
mov
jle
iret
test
jle
inc
shlb
cmpsl
and
mov
mov
in
sbb
inc
ss
aas
dec
xchg
cmc
hlt
push
and
loopne
mov
inc
jbe
jmp
xor
aaa
lret
inc
dec
xor
mov
add
and
das
in
cld
outsl
jo
or
add
repnz
and
rorl
adc
fdivrl
add
lods
mov
shll
addb
jno
call
loop
push
inc
sbb
jg
sbbl
icebp
cmp
mov
scas
cmpsl
arpl
xchg
sub
xchg
les
cmc
add
scas
repnz
jmp
hlt
jne
and
sub
cld
xor
jge
sarb
aas
scas
push
sub
leave
or
xchg
repnz
lret
xor
in
jbe
fs
cmp
test
stos
sub
jge
xor
aad
rolb
mov
push
arpl
xchg
data16
dec
jo
scas
lods
jnp
or
pop
scas
jmp
adc
jmp
mov
lahf
aaa
in
int
sbb
fwait
repnz
daa
and
dec
jne
pushf
and
xchg
sti
mov
repnz
in
cmpsl
xor
jmp
dec
les
ss
inc
iret
sbb
in
mov
lret
ror
sahf
imul
aas
push
jl
sub
pop
fs
mov
jp
cmp
mov
arpl
arpl
dec
and
and
pop
mov
bound
cmp
pop
xor
mov
sub
cmp
jno
cld
add
scas
jmp
cmp
stos
fnstenv
and
into
aaa
inc
jg
fildll
movsb
inc
xlat
lcall
push
push
pushf
out
or
sbb
ficoml
mov
pop
jne
enter
dec
mov
lcall
xor
int3
cmpsl
mov
push
pop
mov
push
or
test
inc
fiadds
mov
in
into
test
ss
lret
sbb
jo
stos
sarb
imul
mov
inc
cmc
lcall
mov
jle
cwtl
mulb
arpl
cs
fiadds
repnz
sbb
pop
repnz
arpl
sarl
xchg
push
leave
frstor
fcomps
popa
sub
xorb
xchg
push
adc
pop
jp
rclb
jae
leave
xchg
scas
and
test
aam
aas
vmwrite
fsubs
les
mov
inc
cld
mov
lea
sbb
push
rcrb
call
inc
lods
into
dec
push
dec
pop
cmpsl
mov
xor
jns
insb
push
adc
int
jmp
xlat
out
mov
lds
pop
fdivrs
sub
push
push
xchg
mov
ficompl
inc
in
pop
inc
scas
sbb
mov
stc
das
mov
cmp
lea
inc
dec
mov
mov
push
xor
mov
imul
popa
aaa
jmp
push
add
adc
sub
inc
out
dec
pop
test
cmp
jmp
adc
leave
sbb
xor
cs
sub
pop
jae
aam
inc
or
mov
icebp
cld
dec
in
cs
sti
adc
mov
gs
test
in
lods
jns
pop
mov
popa
cld
cmp
pop
fldcw
popf
xor
xchg
dec
mov
mov
fsqrt
dec
imul
shrl
sub
sub
out
enter
test
jl
mov
pop
lret
clc
inc
mov
mov
in
push
mov
icebp
jae
mov
xchg
in
sbb
in
call
lock
fists
and
popa
aas
bnd
stc
mov
mov
int3
stos
pop
fisttpll
mov
jg
fnsave
jmp
mov
test
in
xor
xlat
xchg
sub
dec
lahf
push
push
neg
paddsw
lahf
sub
fistpll
xchg
adc
add
mov
jg
jb
lahf
xor
xchg
and
subb
mov
push
add
gs
cmp
out
int
lret
push
jae
cmpb
test
in
sbb
cmp
enter
jae
lods
mulb
icebp
inc
les
adc
lret
or
sahf
outsb
dec
je
and
aas
dec
mov
jmp
xchg
cmp
pushf
ljmp
jo
xchg
hlt
mov
cmp
dec
sbb
cmp
stc
lods
fdivrp
pop
mov
aam
loopne
mov
mov
rcll
adc
jno
mov
je
inc
rcrl
mulb
push
insb
jnp
imul
imul
lds
lock
hlt
lcall
cmp
add
lods
mov
and
sub
xchg
xor
push
push
jge
cmpsb
aam
sbbl
or
clc
pop
pushf
shrl
sub
mov
push
jle
sub
arpl
addr16
in
movsl
add
into
shlb
sub
add
cli
std
mov
sarl
mov
fbstp
xor
les
in
out
lcall
daa
sub
xchg
cmpsl
mov
cmc
mov
imul
mov
rcll
ja
push
mov
jae
jbe
add
and
stc
insl
shlb
jp
sbb
xor
arpl
cmp
repnz
rorl
inc
icebp
or
dec
negl
testb
es
in
out
testl
fists
cmp
lods
aad
adc
ret
add
scas
loopne
mov
dec
cmpsb
leave
sub
inc
pop
test
mov
pop
xor
mov
xchg
test
mov
movsb
xor
xorl
xlat
aas
sub
sahf
and
out
cmp
jne
mov
or
pop
mov
pop
in
cwtl
scas
jecxz
fsubrp
loop
ljmp
mull
and
xlat
lahf
ljmp
inc
outsb
js
mov
lret
shll
add
sbb
or
pop
scas
mov
in
push
lret
aas
mov
nop
lret
insl
xchg
int
out
or
add
push
aas
jne
andl
xor
leave
add
inc
inc
dec
dec
xor
jbe
dec
inc
repz
imul
cwtl
popa
icebp
iret
arpl
in
aam
sub
cmp
adc
test
dec
cmp
pop
insb
cmp
lahf
inc
loope
js
xchg
adc
es
addr16
mov
lret
mov
fucomi
dec
inc
cltd
inc
mov
sbb
push
pushf
or
xchg
xorps
xor
cmp
test
jo
pop
cwtl
pop
xor
and
out
jae
mov
fnstcw
sub
or
mov
lcall
jnp
dec
inc
frstor
subb
push
ret
pop
dec
inc
ljmp
data16
dec
xor
out
push
in
and
mov
nop
xchg
cmpsl
cmp
sub
ret
idivb
cltd
subb
mov
jnp
adc
inc
dec
roll
mov
sbb
jno
out
sar
pop
jle
ds
out
sbb
mov
call
xor
mov
sub
fwait
aas
pop
fs
inc
mov
push
dec
inc
dec
add
mov
movsl
and
cltd
cld
test
mov
and
lods
mov
rcr
push
push
and
xor
mov
outsl
int
adc
stos
xchg
imul
push
in
sahf
mov
push
ret
icebp
insb
cmp
jb
invd
mov
and
das
filds
push
decl
mov
shr
pop
faddl
mov
pop
nop
sbb
inc
cmp
pop
sbb
rclb
andb
movsb
scas
sub
or
mov
flds
lods
xchg
std
push
popa
fbld
inc
or
scas
ds
test
mov
insb
xchg
xor
test
jg
dec
inc
fbstp
repnz
xchg
imul
cmpsl
je
mov
test
sahf
hlt
pop
fisubl
inc
je
xchg
add
or
push
mov
imul
mov
xchg
mov
test
jecxz
pop
ljmp
stos
cld
mov
sarl
inc
lods
incl
xor
outsb
xchg
es
mov
sub
push
loop
push
or
rolb
stos
mov
pop
negl
cmp
stos
xchg
insl
cmp
pop
fstpt
xchg
lods
rorl
test
int
push
mov
mov
xor
push
stos
adc
jge
sahf
lock
mov
mov
inc
inc
daa
insb
imul
push
mov
mov
push
pop
sbb
out
lret
in
fucomi
xchg
and
or
mov
pop
sti
outsb
test
fcom
and
dec
icebp
adc
mov
loopne
dec
mov
decl
mov
out
adc
or
sbb
cmpsb
sbb
mov
cmpsb
jg
add
cwtl
xchg
xchg
imul
fcomip
aam
insb
imull
push
stc
fsubrs
xchg
call
sub
lret
pop
test
mov
sahf
cmpsl
movsl
mov
sub
or
pop
mov
dec
repz
or
mov
inc
pop
adc
mov
jge,pt
add
pop
lahf
and
push
in
xor
sub
mov
jp
and
cmp
mov
and
scas
lcall
dec
stc
mov
push
jno
mov
xor
mov
push
aaa
andb
fwait
jmp
aad
cmp
arpl
mov
dec
mov
inc
movl
add
sbb
in
pop
add
jmp
sti
int3
or
jb
cwtl
mov
out
gs
out
or
mov
cmp
jmp
in
jmp
outsl
incl
out
cmp
out
push
jno
sub
fcoml
jne
jle
jecxz
jecxz
xchg
xor
push
and
js
push
les
loope
sbb
mov
movsl
shlb
or
lods
les
pop
push
bnd
push
popf
out
mov
aas
inc
in
movsl
arpl
jecxz
cmc
lret
or
cltd
frstor
add
in
sbb
jb
add
inc
fwait
ljmp
xor
ret
xchg
bound
loop
inc
cltd
mov
into
mov
gs
sub
xorb
add
add
mov
sub
sub
xlat
mov
mov
inc
cld
int
enter
lahf
sub
mov
ret
das
movsl
adc
sbb
jne
push
mov
pop
ficoms
sbb
insl
lret
out
xchg
bound
icebp
enter
repz
mov
pop
inc
push
jb
bnd
sub
sarb
rclb
mov
int3
test
cmpsl
lea
rorl
or
mov
add
inc
mull
lods
xor
pop
jecxz
lret
jne
addr16
pusha
push
xor
pop
pop
sbbl
test
int
jp
out
fnsave
stos
push
incl
in
lret
mov
lcall
jae
xor
mov
mov
and
pop
mov
pop
jmp
jg
pop
mov
mov
push
pop
xchg
pop
add
add
dec
into
test
in
push
into
cmp
push
adc
mov
in
mov
add
shl
xchg
nop
lock
push
sub
xor
repnz
jge
ja
xchg
paddsw
push
ret
mov
popf
shrb
lret
pop
out
mov
jb
scas
loop
ret
or
mov
scas
in
rorb
add
pop
inc
push
fidivrs
inc
movsl
nop
cltd
dec
icebp
mov
dec
jmp
and
sub
ss
push
test
sub
leave
loope
xchg
leave
daa
pop
idivl
push
cli
lea
call
cs
divl
adc
bound
lret
divb
inc
adc
cli
fdivrl
or
mov
jecxz
ret
int3
into
jns
hlt
cwtl
lods
pop
stos
mov
int
adc
stos
push
add
adc
adc
mov
xchg
mov
lods
lock
popf
call
out
jb
cmp
cmp
pop
dec
pusha
aas
add
jecxz
jne
out
xor
imul
loopne
mov
cli
cmp
xchg
mov
stos
lea
push
cmp
inc
out
push
imul
xchg
in
adc
fsubl
lret
jge
pop
rolb
xor
adc
icebp
jecxz
adcl
pmaxub
lcall
jnp
mov
cmp
mov
pop
or
mov
rorb
stos
and
inc
arpl
imul
mov
sbb
jmp
push
inc
je
xchg
fucomip
xor
add
inc
orl
flds
scas
mov
in
mov
or
dec
add
js
mov
es
cwtl
pop
fisubrl
sbb
pusha
mov
dec
xchg
or
pop
iret
icebp
jae
mov
xchg
push
mov
and
test
and
clc
call
in
cmp
stos
lods
mov
mov
imul
mov
xor
shll
mov
aam
rorl
or
mov
jp
push
cmp
inc
xor
pop
cli
dec
sahf
popf
mov
icebp
lods
mov
push
ret
pop
pop
push
mov
ficomps
stc
jmpw
sub
lret
sub
inc
imulb
mov
pop
mov
add
inc
jmp
enter
mov
sti
and
fisubl
imul
mov
jns
sub
inc
pop
imul
or
pop
or
enter
jmp
repnz
or
int
xchg
ljmp
mov
lods
sahf
pop
shll
orl
pop
xchg
repnz
push
cmp
push
in
ret
idivl
xor
fistpl
push
xchg
cld
mov
jg
sub
aas
loop
cmpl
or
out
inc
std
adc
push
xorb
pop
addr16
scas
rcrl
cltd
popf
add
lods
lret
sbb
aam
cli
xchg
inc
jno
inc
test
imul
fimuls
pop
ret
or
or
decb
sbb
test
sub
xchg
jle
lcall
imul
scas
and
leave
mov
in
jg
cmp
push
add
cmpsb
dec
sahf
sbb
xor
pop
dec
dec
xchg
push
jecxz
scas
int3
orl
jle
aas
jnp
idiv
jl
mov
sub
ret
addb
mov
xchg
clc
add
mov
fiadds
sub
sbb
js
mov
mov
fwait
pop
loopne
dec
mov
push
add
fisubrs
je
jbe
int
cmp
outsb
xchg
cs
les
lcall
adc
fdivr
scas
push
nop
fmul
in
aam
jns
test
cmovle
fcoml
jge
xchg
je
imulb
fstpt
ds
call
int
cmc
call
leave
imul
icebp
int
sub
aad
call
adc
inc
lods
into
and
mov
aad
ljmp
popa
xchg
in
das
push
push
pushf
cmp
sub
lea
lahf
xchg
out
pop
jnp
dec
cmpsb
jg
out
popa
outsb
call
testl
imul
sbb
mov
hlt
xorb
mov
xlat
inc
aam
jbe
mov
int
sub
cmp
jle
mov
mov
mov
adc
mov
dec
lea
cwtl
rcr
inc
add
stos
cltd
xchg
rorl
pop
push
mov
sbb
out
rcrb
in
in
pop
sbb
shlb
bound
inc
cmp
mov
sbb
pop
mov
jle
int3
push
stos
test
and
mov
mov
sub
subl
adc
inc
jbe
lods
adc
pop
shr
ret
loop
testb
and
inc
jl
fadds
lcall
add
in
ljmp
inc
lds
mov
cs
xchg
es
add
enter
push
mov
and
adc
cmp
mov
cld
test
loop
sbb
jb
in
outsl
data16
inc
fbld
adc
xor
xor
jmp
fwait
cmp
jbe
pushf
and
mov
addr16
and
cmp
loop
adc
sub
jo
daa
sub
int
cmpb
loopne
and
pop
roll
xlat
jb
outsb
mov
sub
mov
shlb
not
sub
mov
xor
jne
fiaddl
push
sub
lock
cmc
pop
mov
xlat
sub
imul
das
xchg
xchg
mov
fnstsw
mov
add
int3
dec
movl
jmp
sub
scas
add
je
roll
notb
mov
je
pop
in
pop
in
gs
fwait
lret
les
add
cmp
push
int3
xlat
and
and
mov
mov
push
and
sub
rcll
mov
push
push
in
mov
mov
lahf
sub
jno
push
adc
imul
mov
roll
rcrb
sub
imul
jb
leave
std
mov
inc
lahf
pushw
pop
loop
sub
sub
mov
out
fwait
mov
fmuls
out
in
push
lods
stos
inc
pop
inc
movsb
mov
push
popa
rcll
into
mov
fst
stos
push
or
and
imul
sbb
xchg
lret
jle
movsb
sbbb
shlb
inc
out
sbb
cmpsl
std
adc
adc
ljmp
xor
lods
add
pusha
inc
frstor
lret
icebp
es
in
mov
push
xor
sub
fnstsw
and
pop
mov
imul
push
and
xchg
mov
pop
hlt
fadd
mov
add
xchg
sbb
dec
xchg
fs
xchg
push
jns
jge
dec
jne
je
xorb
jecxz
xchg
pusha
mov
lods
push
pop
addr16
test
fstl
out
jae
movsl
out
jae
jecxz
aas
adc
cmpsl
inc
mov
pop
std
test
jmp
mov
jo
mov
andl
ret
dec
mov
gs
pop
cmpb
dec
or
inc
mov
into
mov
inc
sub
mov
cmpsb
stos
test
jb
add
shlb
hlt
push
sti
mov
neg
dec
mov
in
push
andb
xchg
xchg
adc
das
and
lret
out
cmp
cmp
in
mov
pop
mov
out
pop
ret
in
pop
mov
xorl
iret
jl
leave
gs
cmp
add
mov
cmp
push
in
mov
push
and
cmp
sbb
sarl
sub
jb
imull
inc
js
push
pop
adc
inc
jp
mov
std
jle
sbb
mov
add
ljmp
js
into
leave
leave
and
or
cvtdq2ps
lret
mov
mov
outsb
add
addr16
fildll
jbe
jb
mov
icebp
mov
mov
out
dec
out
jb
in
lret
scas
sbb
sbb
and
call
xchg
ret
scas
sbb
sub
push
mov
jl
xchg
xchg
sbb
adc
sbb
into
outsl
push
pop
stos
adc
jecxz,pn
cmp
fwait
cmp
mov
xor
pop
or
add
mov
repnz
inc
aas
cmp
mov
sub
cltd
int
ds
xchg
hlt
jl
lock
mov
outsl
mov
mov
cmp
jecxz
lret
adc
int3
xchg
andl
adcl
add
fs
xchg
test
xchg
xlat
cmp
leave
xchg
repz
inc
add
pop
fwait
shll
or
mov
gs
mov
jmp
daa
cmp
rep
cli
insl
mov
dec
scas
jnp
es
cmp
jmp
mov
fisttpll
out
inc
sub
das
xchg
sti
cmc
mov
push
sbb
add
mov
lcall
cltd
cmp
in
xor
cmp
mov
leave
in
dec
jg
into
mov
data16
cmp
nop
sti
cmp
sub
cmp
ja
ficoms
push
xchg
pop
jge
jecxz
loope
dec
inc
pop
xchg
aam
loop
shll
call
dec
leave
fidivl
mov
leave
push
adc
jg
icebp
out
in
or
or
dec
loope
add
and
sbb
xchg
addr16
fisttpl
mov
jmp
inc
push
mov
add
mov
and
mov
js
add
xor
mov
or
jnp
mov
iret
or
mov
sbb
nop
sbb
nop
mov
rsm
mov
mov
ja
enter
pop
lock
mov
xor
inc
push
or
adc
out
test
xor
push
les
daa
inc
scas
mov
xchg
push
es
lea
movsb
push
push
scas
ss
push
fmull
mov
mov
add
adc
testb
int
mov
es
andb
xlat
mov
int3
and
and
and
das
push
dec
andl
push
or
mov
xor
iret
and
les
push
leave
out
cmp
push
jae
jle
pop
mov
aas
jmp
and
pop
pushl
rorl
loop
cwtl
fs
xor
out
adc
pop
cmp
int3
mov
jecxz
call
int
push
sub
sub
inc
xchg
cld
lret
dec
fists
test
lret
mov
les
mov
xor
sub
dec
fwait
push
xor
xchg
arpl
fnsetpm(287
test
mov
mov
mov
mulb
js
out
in
in
insb
inc
xlat
stos
hlt
or
in
int3
bound
in
or
jecxz
ja
xchg
inc
arpl
adc
js
std
mov
jns
cmpsl
arpl
push
mov
js
loope
inc
rclb
xchg
or
js
inc
sub
das
cmp
and
adc
je
pop
xor
pop
and
mov
pushf
mov
fistps
out
push
adc
push
jno
sub
cmp
pop
sarl
arpl
call
imul
nop
inc
add
jno
outsb
hlt
negb
mov
push
cmp
inc
rorb
cmpsb
sub
stc
and
xor
dec
mov
dec
outsb
inc
out
das
inc
aaa
movb
xchg
or
sbb
jbe
js
inc
ds
sub
mov
lods
cmpl
push
repz
sub
lods
sbb
mull
sub
test
and
fldl
and
out
inc
xchg
int3
orl
das
pop
adc
pop
int3
sbb
lods
pop
fsubrl
xchg
push
int3
pop
dec
pushf
ja
xchg
mov
cmpsl
jmp
pushf
cmp
movb
jecxz
jo
jbe
shrb
cmpsb
pop
in
cmp
iret
pop
jne
cwtl
stos
je
xchg
call
cmc
cli
lods
pop
hlt
test
cmc
test
scas
sbb
mov
add
jg
inc
pop
and
ret
repz
mov
dec
mov
test
lret
scas
loope
or
mov
leave
loope
inc
and
lahf
fs
push
in
add
jne
aas
and
add
mov
sti
cld
pop
push
and
dec
rclb
sub
and
dec
jmp
adc
dec
and
mov
add
out
pop
fisttpll
add
jmp
dec
xchg
jae
sahf
push
adc
dec
icebp
test
sub
mov
cmp
or
cmpsl
into
es
xchg
loopne
cmpsb
mov
rcll
add
addr16
mov
mov
sarb
sbb
addb
xor
fisubs
push
into
loope
sbb
mov
imul
lret
cld
inc
mov
insb
add
in
test
sub
decl
cmpsl
inc
inc
int
mov
arpl
mov
xchg
mov
and
fmul
cmpsb
mov
pop
mov
inc
push
sbb
or
stos
and
push
fcomp
popl
jp
pop
sub
add
or
cmp
insb
pop
cltd
cmc
mov
movsb
lock
sti
xlat
xor
fs
pop
push
pop
mov
aam
push
ja
xchg
repnz
imul
out
sub
repz
icebp
inc
jecxz
movsl
in
mov
jl
push
or
pop
sub
inc
loop
jae
sub
push
mov
sbb
shl
shlb
dec
stc
mov
aaa
ss
jecxz
and
insb
cwtl
div
outsl
daa
into
es
xchg
sbb
jp
and
punpckldq
sbb
xor
dec
mov
mov
insb
cmp
sti
lret
test
pop
arpl
jmp
dec
dec
out
test
out
lods
push
pop
loop
popa
adc
sub
mov
inc
int
push
xor
or
sbb
push
mov
mov
push
cltd
adc
mov
sub
xchg
dec
aaa
mov
or
dec
stc
adc
push
bound
out
pop
clc
and
dec
rcl
xchg
xchg
pop
jbe
dec
out
enter
jae
xchg
cmp
pop
call
scas
adc
push
jo
or
adc
into
pusha
xlat
jge
loopne
fcmovb
outsl
and
test
push
dec
loope
addb
mov
or
push
das
mov
push
and
push
jns
and
jecxz
dec
sbb
inc
jmp
add
aad
adc
aas
or
pop
push
aad
add
lahf
repz
cwtl
js
fbld
mov
pmaxub
mov
hlt
cwtl
push
nop
roll
and
daa
dec
pop
jmp
mov
push
adc
xlat
or
ja
cmc
jnp
xor
push
data16
inc
fimull
add
aaa
cmpsl
sbbl
ror
add
into
rorl
pop
cmp
mov
and
mov
xchg
and
std
cli
mov
mov
pop
xor
mov
or
sub
xlat
loope
std
mov
lret
jbe
dec
das
shlb
pop
xchg
js
pop
inc
cltd
add
jp
mov
or
and
or
xchg
push
xchg
sbb
push
sub
push
jl
arpl
into
pop
xchg
mov
in
int3
jle
rcrl
adc
hlt
push
mov
rclb
pop
xchg
jnp
xchg
fs
test
adc
into
lret
mov
mov
faddl
bound
test
scas
adc
jmp
inc
inc
aad
xorl
lret
ret
cmpsb
leave
sub
dec
adc
mov
fmul
xor
addr16
popa
pop
popa
mov
jp
and
cmp
shll
ret
jmp
lahf
add
pop
js
xchg
jl
dec
mov
test
movsl
xchg
je
shll
mov
stos
pop
std
and
outsb
ljmp
xchg
jne
cmp
iret
lods
jl
mov
jb
mov
push
add
add
out
pop
dec
pushf
imul
cmp
pushf
inc
pop
jge
push
xchg
pushf
xor
loope
mov
or
jp
jae
dec
push
loop
push
jmp
push
sti
test
sub
xchg
rcll
rcrl
jno
sbbb
addb
and
std
mov
mov
pop
cmp
loope
mov
sub
jge
ret
dec
loopne
nop
popl
push
shr
xchg
daa
roll
ja
jnp
mov
lahf
idivl
jp
das
push
lret
dec
or
in
xor
or
mov
mov
dec
xor
sub
add
idivl
xor
cmp
sub
dec
rcrb
mov
dec
jb
scas
or
push
push
sub
mov
push
rcrl
and
arpl
les
add
sahf
adc
arpl
jbe
xchg
inc
cmpsb
bound
popf
jnp
ret
dec
scas
push
lods
xor
xor
orl
xchg
fistps
aaa
jo
dec
xor
jmp
xor
je
sbb
mov
pop
xchg
fs
dec
cmp
xor
lds
mov
in
mov
xchg
test
sbb
add
mov
popa
dec
dec
pop
add
jle
xchg
dec
push
mov
jno
out
jnp
mov
push
aaa
lret
mov
add
jecxz
add
xchg
repnz
test
lcall
inc
xor
popf
loope
jno
pop
add
adcb
adc
aas
daa
aam
test
arpl
mov
aam
fwait
pop
pop
mov
scas
cli
mov
xchg
or
test
lock
adc
sbb
frstor
push
dec
mov
pushf
or
mov
ljmp
mov
fsubl
arpl
inc
ss
fwait
mov
decl
jo
jmp
xchg
sbb
jbe
add
out
fdivrs
adc
jnp
imul
xor
dec
int3
stos
out
popf
dec
mov
or
and
mov
xchg
or
movsl
sbb
repnz
sub
jno
jne
fdivrl
int
out
test
mov
adc
out
jnp
lahf
xchg
inc
es
jbe
aas
cmp
xchg
jle
sarb
fwait
bound
push
xchg
mov
mov
pop
push
pusha
das
xor
inc
in
subb
mov
mov
push
add
bound
and
leave
adc
mov
into
mov
mov
jns
fs
adc
divb
mov
mov
fidivl
or
mov
mov
or
mov
repnz
mov
push
mov
into
sub
mov
sub
pop
test
inc
pushl
dec
mov
ret
test
rorl
push
pop
notl
sahf
xchg
mov
sub
test
push
jp
stos
rorb
loopne
lret
fistpll
dec
adc
push
in
or
lcall
aad
shl
ss
cld
call
test
lods
jmp
fbstp
mov
fsubl
imul
aas
int3
add
ret
lcall
mov
hlt
add
cmp
mov
cmp
add
lods
imul
stos
into
mov
iret
xchg
scas
std
clc
mov
jno
test
ret
mov
sub
loope
sbb
stos
dec
adcb
mov
in
adc
cmpsb
pop
sahf
repnz
xchg
push
lcall
and
push
popa
das
push
leave
mov
rcrl
inc
loope
or
sub
mov
and
mov
adc
test
loope
in
pop
test
add
imul
sbb
and
je
stc
inc
in
and
xchg
mov
in
in
add
or
dec
outsl
and
aaa
enter
xlat
adc
icebp
xchg
push
lods
mov
icebp
je
adc
mov
jnp
adc
push
cmc
and
mov
add
or
in
and
repz
nop
or
divl
ret
mov
call
xchg
or
jns
out
mov
dec
pop
mov
mov
add
lods
sub
leave
inc
scas
or
pop
popa
inc
iret
hlt
divb
adc
shrl
in
in
or
dec
mov
std
add
adc
inc
testl
insb
add
insl
pop
adc
loopne
sub
fs
cli
int
adc
popa
mov
mov
rcr
sbb
das
dec
fbstp
pop
jmp
dec
iret
push
dec
stos
dec
push
popf
jnp
cmp
mov
call
push
cltd
outsb
lods
shl
fdivs
jns
xchg
sub
mov
stos
mov
pusha
stos
xchg
lock
dec
xor
xchg
and
pop
clc
mov
in
pop
lea
ss
outsb
mov
leave
ss
std
std
lods
test
dec
daa
inc
jnp
mov
imul
popa
dec
xor
in
clc
push
outsb
add
add
and
or
fwait
xchg
pop
xchg
aas
jbe
mov
add
dec
sub
dec
rorl
lret
jno
xor
jbe
sub
fcoms
xor
aam
test
rcrb
jg
js
loop
andb
dec
sbb
mov
jae
fstpl
stos
aaa
in
cmp
faddl
stos
inc
aas
add
aam
fldcw
not
imul
pop
popf
lret
mov
xor
into
lret
or
push
sti
enter
mov
push
xchg
jecxz
stc
ret
jo
jbe
inc
xchg
jg
hlt
bnd
add
xor
dec
in
inc
or
cmpl
xchg
shr
inc
nop
mov
adc
xlat
cli
or
xor
movsl
addb
inc
push
test
fs
outsb
data16
lcall
lods
or
hlt
fbstp
inc
dec
and
ficoms
pop
lock
mov
sub
shr
das
aad
popf
mov
sahf
cltd
mov
ret
lds
fwait
das
pop
and
pop
ja
jne
gs
sbb
aad
in
das
arpl
int
stos
jp
mov
jp
xor
pop
neg
push
xchg
mov
mov
push
ja
mov
pop
mov
cmpsl
push
sbb
aam
es
and
jl
dec
cld
shll
ret
lahf
or
mov
sbb
jmp
sub
jmp
iret
stc
sub
sbb
enter
leave
jl
dec
adc
pop
xchg
mov
jle
pop
xchg
dec
inc
mov
iret
lods
shrl
rcl
stc
sbb
push
daa
nop
das
push
or
ja
or
fmulp
out
fdivrs
push
ja
lods
hlt
out
jae
adc
fwait
pop
jne
push
cwtl
inc
daa
mov
and
lcall
mov
rol
xchg
stc
std
ss
mov
loop
daa
or
ds
pop
adc
push
rcrl
push
cwtl
or
out
mov
rcr
lret
jns
push
mov
add
data16
push
cmp
mov
addr16
test
pop
sub
insl
xlat
stos
subl
pop
push
push
lods
data16
mov
pop
int
adc
mov
jle
cld
mov
xchg
adc
mov
xor
mov
cld
je
ret
fsubs
xchg
inc
xchg
jae
movsb
roll
mov
test
mov
dec
push
jne
test
pop
adc
mov
lea
sub
popf
push
insb
cmp
inc
lret
fistpll
addl
fimull
mov
stos
adcl
push
mov
jne
or
mov
clc
outsb
push
stos
cmp
fisubrs
cld
enter
mov
inc
xchg
in
subl
push
xchg
inc
pop
xchg
or
out
add
jecxz
add
pushf
in
or
pushf
jbe
lea
fsubs
loopne
imul
lcall
rorl
lock
cld
jo
out
or
cli
xor
js
sarl
inc
rorl
mov
outsb
dec
data16
pop
js
mov
and
sbb
xor
and
sahf
mov
ljmp
ljmp
cmp
pop
add
jbe
cmp
mov
in
inc
stc
stos
pop
test
push
notl
adc
call
jle
into
jp
ss
cmpsl
rcl
lcall
fnstsw
xor
leave
xor
lock
call
cmp
dec
push
mov
aam
jae
movsl
popa
jg
push
inc
aam
pop
cvtps2pd
in
pop
jne
lods
jae
inc
test
inc
sbb
lock
and
pop
push
inc
push
mov
pop
xor
mov
xchg
sbb
and
bnd
push
jo
mov
push
lcall
int
push
jbe
mov
xchg
int
add
xchg
roll
and
jg
in
scas
addr16
push
fcmovb
mov
add
xor
cs
fistps
ret
fistpll
sbb
sub
fstps
rsm
pop
insb
call
inc
and
sahf
push
push
mov
outsb
pop
xor
pop
mov
stc
enter
pop
mov
pop
add
mov
mov
repz
in
std
pop
scas
jns
push
psubsb
cmp
and
out
stos
out
xchg
clc
mov
jmp
into
xchg
cltd
cltd
fcomps
jbe
push
xchg
sbb
mov
daa
inc
aam
xchg
into
jecxz
int3
sub
cli
scas
loope
ficoms
push
mov
cwtl
lahf
popf
ss
pop
mov
int
sub
scas
add
out
cmp
sub
int3
lods
clc
inc
mov
mov
or
ljmp
aad
out
aam
outsl
jp
aas
jo
jmp
mov
jbe
push
fisubrl
or
mov
sbb
or
gs
enter
pop
std
stc
xchg
sbb
push
leave
int
dec
loope
adc
cmpsl
push
or
iret
sub
divl
scas
and
leave
inc
or
mov
mov
xor
add
sbb
adc
fistpll
push
mov
inc
push
repz
xchg
xchg
mov
pop
xor
xlat
xor
fistps
fsts
inc
in
cltd
loopne
stos
inc
mov
leave
dec
cs
push
cmp
fisttps
stc
add
lea
into
mov
sub
push
stos
push
orl
mov
out
repz
adc
jo
je
in
add
lahf
inc
sbb
scas
mov
ljmp
es
int
xor
sbb
imul
loope
sbbb
mov
sub
insb
popa
push
scas
jp
stc
test
lock
iret
inc
sbb
out
scas
sahf
cld
nop
inc
adc
mov
cmpsl
ret
adc
les
cmp
insl
aaa
jle
cmp
or
inc
or
lcall
sbb
subl
xor
jae
lock
mov
push
xchg
insl
call
leave
jns
jns
jno
xor
inc
lock
and
push
add
lret
push
pop
faddl
fldenv
rclb
jecxz
sub
sub
or
dec
xchg
cmp
in
dec
imul
inc
lock
sti
rolb
test
mov
sbb
daa
xchg
jge
mov
test
xor
fcmovne
mov
push
xchg
out
mov
ss
cli
push
sarb
fcmovnbe
mov
imul
imul
add
shlb
repnz
jbe
movsb
out
lods
xchg
add
xchg
cmp
dec
cld
lret
mulb
movsb
out
fiadds
mov
iret
ret
mov
sub
jbe
adc
imul
mov
pop
jbe
shrl
int
shrl
mov
adc
jmp
sarb
shlb
or
cmp
leave
in
push
jle
in
mov
aaa
or
dec
mov
data16
insb
dec
ffreep
imulb
mov
cltd
cmp
xchg
outsl
dec
mov
lcall
pop
mov
sbb
imul
mov
int3
lahf
ljmp
xchg
sub
dec
jns
popf
xor
ja
test
jge
jp
add
pop
js
jl
sub
sbb
xchg
xchg
out
xchg
outsb
cmp
xchg
ja
adc
stos
inc
sar
dec
mov
dec
dec
das
enter
sbb
mov
jecxz
jle
push
les
sbb
pusha
jns,pt
xor
data16
dec
js
int
sub
xor
push
gs
stc
add
mov
and
mov
inc
incl
dec
bound
lret
ja
inc
mov
inc
cli
not
push
pop
decb
sub
popf
pop
aad
xor
cmp
sub
scas
daa
dec
in
imul
push
mov
mov
movsl
inc
stos
lods
repnz
sti
test
or
xchg
lea
sbb
dec
mov
xor
pushf
int3
or
clc
fs
xchg
adc
or
adc
sub
xor
loopne
push
incl
clc
add
jbe
das
cmp
pop
cmp
xlat
lcall
mov
daa
js
dec
arpl
inc
pop
je
cli
mov
test
int3
cs
ret
sarl
cmpb
push
jmp
in
jb
cmp
mov
dec
rclb
lea
pushf
rorb
out
test
aas
in
sub
ja
jns
test
jne
data16
mov
or
fidivs
es
add
cmp
jge
dec
int
cmp
sbb
cmp
inc
inc
cmp
stos
add
out
mov
xor
jecxz
daa
push
xchg
movsb
or
or
mov
mov
sbb
test
add
mov
sub
iret
jg
mov
cltd
shl
adcl
in
mov
jge
mov
mov
push
or
xchg
lcall
fidivrl
and
data16
rcl
dec
imul
push
mov
addl
pop
ret
insl
xchg
testl
cmp
cmpsb
or
mov
into
je
add
inc
push
test
dec
push
ljmp
cltd
ja
sahf
sub
and
xor
cmpl
and
sbb
mov
inc
ja
jp
ss
cmp
add
inc
jecxz
mov
iret
and
dec
fistps
aaa
dec
sarl
xchg
add
push
mov
adc
ljmp
arpl
ret
es
lods
jae
outsl
cmp
lret
clc
sbb
out
out
or
scas
push
popa
popf
adc
scas
xchg
mov
adc
inc
inc
repnz
das
xchg
jb
inc
addr16
scas
jb
stos
fistps
jo
mov
nop
in
orb
test
es
repnz
cmp
insb
inc
push
enter
stos
into
fwait
mov
or
push
scas
clc
jp
mov
add
sub
pop
aaa
cld
add
push
loop
imul
icebp
push
clc
out
fistps
sti
add
test
fcmove
xor
mov
sbb
rcrl
lods
mov
test
addr16
daa
aam
mov
pop
addr16
xchg
mov
adc
cmp
jbe
adc
jle
aaa
jne
dec
sub
aas
mov
push
fnstenv
lock
mov
inc
ja
vpsllw
arpl
add
sahf
mov
sbbl
dec
pop
aaa
sbb
loopne
popf
push
fsts
push
into
dec
jp
ja
sahf
lods
cmc
or
std
movsl
dec
or
adc
push
leave
xor
pop
rorb
lods
insb
mov
leave
lahf
scas
mov
sti
cmp
mov
fistl
mov
mov
js
in
test
cmp
addr16
mov
lods
ret
mov
outsl
sti
jns
xchg
pop
sbb
dec
fldl2e
out
jnp
fstps
sbb
call
xchg
ret
inc
xchg
ja
jnp
cltd
dec
int3
or
push
ss
or
jae
mov
dec
pop
xchg
pop
rclb
fisttpll
inc
mov
jno
cmp
mov
mov
mov
cwtl
xchg
push
add
ds
mov
cld
out
pop
pop
push
movsl
cmpsl
mov
int3
dec
jbe
or
ficoms
jae
popf
not
sbb
mov
das
lret
cmp
jae
add
aad
cmp
pop
push
das
inc
mov
and
daa
mov
pop
adc
xchg
cmpl
clc
sub
jp
inc
jno
data16
ljmp
sbb
mov
xor
mov
mov
push
adc
inc
stc
and
outsb
shl
mov
sbb
xchg
push
lods
lret
mov
push
and
xchg
das
jl
inc
imul
cld
add
xlat
ss
and
pop
push
mov
scas
add
andb
into
cmp
xor
pop
pop
js
xchg
insl
std
xchg
xchg
jge
ds
dec
jbe
rcll
sbb
lcall
adc
pop
add
pop
mov
mov
jnp
lahf
inc
sarl
jae
and
mov
jecxz
test
test
mov
pop
pop
dec
pop
xchg
jne
dec
ror
sub
or
add
adc
cmc
pop
push
rolb
subb
xchg
jg
add
and
xor
sahf
adc
inc
cmp
fs
fisubrs
out
sub
sub
dec
cmp
adc
stos
push
mov
stc
mov
cld
xor
pop
or
ficoms
adc
adc
and
xor
push
stos
pusha
scas
dec
mov
mov
fnstenv
fs
cmpsl
mov
mov
jne
fimull
dec
dec
int
mov
xor
xor
push
push
jecxz
jle
dec
icebp
add
dec
or
faddl
push
mov
pop
cmp
lahf
or
icebp
inc
lods
out
pop
int
xor
cmp
pop
ja
jge
out
bound
addl
adc
mov
mov
sbb
lds
pop
fwait
lcall
cli
inc
mov
das
and
ja
test
rorl
lahf
dec
iret
in
shr
mov
dec
cwtl
in
mov
xchg
xor
sbb
and
ljmp
shr
lret
inc
push
or
movsl
ficomps
mov
aam
jl
and
cmp
push
loope
in
fidivs
testl
jl
cwtl
stos
pop
jecxz
repnz
xchg
mov
jl
xchg
sbb
fucomp
pop
je
push
int
shlb
rclb
sbb
adc
mov
xchg
dec
dec
sbb
inc
xor
pop
jbe
xor
cmp
mov
fiaddl
int
jge
pushl
sbb
aam
inc
mov
and
ja
aad
dec
push
aad
mov
pop
sub
aaa
hlt
jmp
and
bound
jb
sbb
sub
shl
fsubl
clc
dec
inc
mov
push
out
push
lds
cmp
xor
add
or
out
add
xor
adc
pop
adc
loopne
mov
pop
fcompl
dec
sbb
push
fisubrl
pop
andl
sub
in
imul
pop
pop
in
inc
sbb
inc
aam
sahf
fsubr
lahf
loop
jbe
jp
daa
pop
xchg
lret
xchg
out
sub
mov
mov
int
mov
insl
cld
push
repnz
sub
inc
inc
sub
cmp
pushf
ja
sub
xchg
popf
push
push
jb
push
aam
jb
push
subb
mov
fmulp
insb
mov
shl
xor
test
dec
data16
aad
js
scas
cli
mov
mov
insl
or
sti
sbb
add
mov
loop
inc
jmp
call
addr16
and
sub
or
dec
aaa
and
test
mov
and
imul
dec
test
pop
lcall
daa
test
mov
adc
mov
lods
jmp
fstps
inc
repz
loope
cmp
push
icebp
sub
rcrl
xor
sbb
insl
xchg
inc
nop
cli
add
mov
es
orb
push
jns
orl
pop
xchg
data16
fs
dec
imul
arpl
push
add
test
xchg
pop
xlat
fsubr
push
push
es
mov
fcoms
cmp
inc
pop
jne
cmc
and
mull
negb
mov
mov
sbb
call
xor
aas
push
jp
xchg
mov
push
repz
adc
decl
ss
add
insb
add
in
push
adc
jb
dec
es
mov
or
cmp
jae
mov
sbb
dec
cli
sbb
push
test
cmpsb
push
negl
lcall
mov
ret
pop
in
popa
adc
outsl
mov
fiadds
js
and
mov
ljmp
add
inc
jmp
add
outsl
and
add
ss
loop
pop
mov
and
jle
or
enter
cli
mov
mov
mov
sbb
jl
push
xor
push
sbb
and
dec
scas
add
loope
inc
mov
mov
sti
mov
outsl
loope
enter
or
mov
stos
scas
mov
enter
lods
jbe
cs
fldenv
cld
imul
adc
lcall
sbb
adc
xorb
pop
jo
int
inc
int
aas
xchg
sbb
dec
fisttps
inc
mov
mov
sbb
mov
xor
jns
pop
pop
adc
sbbl
lods
mov
aad
bound
xchg
dec
inc
inc
cmp
fsubs
test
pusha
pop
mov
xchg
imul
jns
in
aaa
sbb
in
dec
insl
cmc
lea
jne
shll
mov
bound
es
push
cmp
imul
dec
dec
popf
xlat
js
mov
loopne
in
pop
mov
xor
mov
gs
pextrw
addb
lahf
lret
sbb
mov
sbb
xor
pop
cmpsl
xor
mov
lds
xor
lock
or
aad
inc
lods
jle
jns
in
imull
xchg
out
clc
adc
jge
mov
lahf
pop
dec
cwtl
test
fimull
hlt
fwait
pop
pop
jge
xorb
popf
mov
or
sbb
jbe
push
vunpckhps
sarb
es
inc
mov
or
lock
sahf
lock
cs
xor
orb
push
cmp
mov
pop
cmpsb
pop
inc
sbb
xchg
sbb
inc
dec
inc
xor
stos
subb
mov
insb
into
inc
xor
insl
and
pop
movl
inc
xor
sbbl
lahf
xchg
mov
mov
pop
mov
mov
cmp
rorb
mov
insl
sub
push
ret
ficomps
inc
and
mov
pop
xlat
loop
into
add
xor
inc
jecxz
in
adc
lahf
cs
push
pop
inc
clc
sub
jns
loop
jbe
jae
or
cmp
mov
mov
pop
push
jno
iret
cmpsb
jns
sti
outsb
xchg
lahf
popa
push
ret
jmp
adcl
xchg
js
xchg
mov
outsl
daa
mov
outsl
ret
dec
jge
push
and
adc
sbb
xor
ret
fst
adc
jp
jae
jmp
ljmp
adc
and
pop
mov
push
pop
imul
xchg
dec
or
jmp
adc
mov
inc
js
mov
push
sub
stc
add
and
pop
jecxz
inc
xlat
les
in
push
pushf
sub
clc
pop
out
in
add
dec
out
xor
lret
jle
das
inc
mov
int3
ljmp
pop
repnz
lock
test
xchg
add
jnp
stc
movsb
xchg
xchg
pushf
and
movsb
and
cmp
xchg
aam
xor
or
xchg
loop
daa
adc
lret
fprem
clc
cmpsb
call
sbb
sub
fs
cmp
fistpll
sbb
int
fldcw
push
mov
negl
mov
push
fdivs
adc
pop
xchg
gs
push
jecxz
mov
or
push
out
shr
adc
cmp
loop
sub
mov
icebp
dec
adc
es
mov
or
and
lock
push
mov
or
jl
add
mov
lds
lds
iret
hlt
jg
pusha
adc
sub
stos
enter
xchg
sti
and
dec
inc
hlt
movsb
int
rclb
enter
enter
ljmp
jp
sbb
push
pop
jns
js
cli
incb
and
pusha
shl
pop
jp
mov
and
add
cmp
aam
addr16
nop
aad
cmp
aad
stos
inc
bound
and
fsubl
mov
and
jl
push
dec
fistpll
icebp
lock
mov
and
fstl
loope
or
cwtl
xor
enter
loopne
mov
daa
pop
les
pop
mov
inc
enter
out
cltd
filds
add
leave
jo
mov
xor
sbb
test
jns
js
test
int3
sub
xlat
add
sub
xor
outsw
and
loopne
scas
sub
xor
sbb
mov
cmc
jne
mov
cmpsl
shlb
divb
adc
or
pop
clc
sub
mov
sub
cmovbe
cmp
xchg
pop
and
mov
xchg
cld
push
jp
jge
pop
loopne
mov
outsl
sub
dec
mov
jne
in
adc
hlt
push
ds
cli
pop
repz
dec
add
int
pusha
leave
loop
mov
nop
inc
loopne
mov
sub
movlps
fnstenv
add
inc
loopne
std
sub
rclb
adc
fst
xor
lds
jns
std
pop
mov
enter
sbb
hlt
cmpsb
add
lret
mov
neg
out
leave
add
jns
adc
jp
cmpsl
ret
inc
push
imul
mov
dec
and
lea
xor
adc
xor
repnz
push
or
outsl
xor
hlt
cmp
jae
inc
dec
sub
inc
sub
pusha
inc
ret
sub
ret
push
sti
std
jg
in
in
sahf
xor
andb
add
les
mov
cmpsb
push
or
or
fstpt
imul
cmp
mov
movsl
pushf
movl
or
dec
enter
fcom
and
xchg
mov
xchg
ds
xor
cmp
cwtl
sbbl
add
imul
in
pushf
adc
iret
sbb
pop
xor
inc
jl
ficoms
mov
pop
stc
cmp
inc
in
sbb
mov
movsb
out
push
xchg
mov
mov
ljmp
mov
stos
jp
sarl
jnp
inc
xchg
xchg
dec
jle
mov
inc
lds
cmc
sbb
div
inc
icebp
xor
xchg
mov
sub
in
pop
xor
push
mov
fildll
test
dec
xchg
aad
xor
fdivrl
mov
xorl
cwtl
xchg
cmpsb
ror
jl
mov
xor
sar
xorl
mov
pop
jns
xchg
bnd
adc
repz
ror
adc
test
mov
sbb
movsb
dec
mov
bnd
sarl
inc
ret
je
dec
jae
std
popf
ja
xor
or
cmp
or
adc
bound
mov
mov
clc
mov
xchg
fmull
mov
loopne
sti
jge
jb
cli
adc
inc
or
cmp
add
adc
loope
or
pop
pop
mov
cmpsb
inc
adc
loop
jae
lods
or
dec
mov
dec
jae
adc
mov
sar
inc
andl
repnz
push
jmp
rclb
sbb
mov
mov
sbb
fldenv
pop
sub
jmp
sbb
movsl
loope
rclb
cmp
push
jg
add
shl
pop
fwait
or
sbb
xchg
adc
jmp
adc
insl
xchg
mov
jbe
ds
pop
lods
mov
inc
jb
sub
sub
sbb
push
inc
mov
dec
push
fidivs
sub
loope
mov
jl
sub
pushf
insl
push
lock
mov
dec
ret
dec
cmp
incl
insl
pop
sbb
mov
data16
repnz
icebp
dec
jl
imul
jo
jo
repz
or
xchg
xchg
jb
aas
cmp
icebp
cmpsl
add
call
jle
push
mov
mov
fistpll
cmp
aam
sub
add
mov
popa
push
adc
fnsave
adc
mov
cmp
push
push
daa
cli
aam
sub
add
sbb
xor
mov
mov
test
into
mov
jge
pop
sbb
mov
jecxz
mov
push
loop
dec
daa
inc
or
xor
push
repz
lret
cltd
xor
bound
cs
mov
inc
stos
mov
fildll
pop
icebp
mov
lcall
lods
ds
add
xchg
inc
pop
xchg
mov
jmp
adc
dec
std
test
shlb
xor
sbb
push
push
scas
rolb
dec
sub
jmp
lea
sub
add
icebp
pop
xor
nop
xchg
faddl
outsb
fisttpll
push
adc
sub
jbe
popf
inc
mov
in
jae
xchg
je
icebp
mov
push
xorl
and
arpl
add
outsb
xlat
je
dec
sti
sti
loopne
or
and
test
aas
les
sub
mov
cmp
cmp
sbbb
outsl
dec
ds
mov
and
xor
adc
scas
bound
int3
sub
dec
das
in
dec
mov
movsb
cwtl
mov
aam
add
js
dec
cmp
bound
push
mov
in
lock
sub
fwait
xchg
pushf
xchg
outsb
jge
iret
rcrl
aaa
repz
add
cmpsl
xchg
cmp
add
aad
xchg
sbb
cmpsb
sub
cmp
sub
xchg
add
aam
xchg
out
push
icebp
mov
inc
loope
lret
adc
mov
bound
das
sbb
scas
push
and
lret
mov
lds
pop
mov
fsubs
int
jg
push
sbb
lahf
shrl
mov
push
sub
inc
push
das
test
jb
in
jp
push
xor
mov
dec
fs
xchg
inc
sub
mov
popf
and
fdivr
into
cmc
jl
ds
cli
dec
les
pop
repnz
les
mov
add
xchg
dec
outsl
inc
push
add
leave
les
push
fcompl
push
cld
ficompl
mov
adc
in
jae
sahf
lock
ret
popf
shlb
es
xor
setg
push
lods
mov
jmp
or
das
mov
ja
or
mov
jo
hlt
jecxz
cmp
and
insb
popa
leave
in
sub
lods
mov
or
pop
or
push
sub
push
pop
sub
cmp
mov
je
xchg
and
mov
int3
or
cld
mulb
push
push
mov
adc
aam
cltd
xchg
sar
adc
pop
push
jne
cltd
aas
push
fwait
sub
or
jp
adc
mov
or
and
adc
cmp
loop
clc
jbe
int
loop
pop
in
xor
xor
dec
mov
mov
aas
in
in
mov
dec
jl
jmp
mov
stos
repz
aad
leave
lea
lea
outsb
int
dec
imul
cli
sub
mov
pusha
and
jle
xchg
in
cmpsb
test
pop
xchg
iret
icebp
into
sbb
jl
xchg
push
and
push
movsl
sbb
rolb
flds
dec
xchg
sbb
inc
xchg
xchg
in
pusha
bswap
sub
or
mov
inc
daa
add
add
xchg
repnz
push
and
pop
xchg
ltr
lods
or
imul
push
lock
cmp
in
jmp
cmp
add
neg
xchg
cmpsl
mov
cmp
in
insb
mov
mov
add
add
and
into
sub
xchg
mov
cwtl
fldl
bound
cmpsl
ret
shrl
mov
mov
sub
imul
out
add
sub
sub
fxch
lods
iret
inc
pop
loopne
dec
mov
or
cmp
in
lcall
and
and
leave
mov
pop
testl
add
das
sti
rolb
push
cmpsl
nop
rorb
rorl
jns
aam
stos
sub
cwtl
jmp
inc
sub
xlat
add
pop
push
lods
push
mov
xchg
xor
sbb
xchg
jbe
lea
enter
aad
cs
jnp
mov
repz
sub
xlat
in
arpl
xor
jl
mov
pop
pop
xchg
shll
cld
aas
sbb
push
mov
push
shll
rorl
xchg
mov
or
imul
enter
subl
cltd
movsb
gs
pop
sbb
xchg
adc
xor
add
cmc
xor
jnp
cmc
mov
cs
mov
inc
in
mov
orl
xchg
xor
fsubr
mov
lock
jae
mov
sahf
inc
adc
and
pop
popa
andb
jecxz
lods
fwait
imul
enter
xchg
ljmp
pop
xchg
jmp
inc
mov
popf
pop
int3
ja
mov
enter
pop
or
int3
xchg
sbb
xchg
adc
subl
mov
pop
pop
xchg
xchg
sub
add
inc
out
mov
js
das
icebp
test
cmp
xchg
ret
ret
push
adc
and
subb
jmp
xchg
add
dec
js
xchg
loope
sbb
imul
mov
xor
stc
add
push
cmp
inc
loop
outsb
sbb
repnz
adc
pusha
arpl
loopne
das
add
adc
mov
pop
dec
loop
mov
mulps
or
faddp
pop
mov
dec
cmp
push
xchg
ret
imulb
xor
inc
sbb
in
popf
mov
jp
dec
and
lock
mov
push
cmc
sub
add
add
hlt
pop
cld
jno
push
fldl
decl
addr16
sbb
push
cmp
xchg
pop
hlt
call
sub
cmp
inc
cmpsb
fdivl
cli
and
cmp
xor
mov
in
test
mov
loop
add
dec
movsb
mov
mov
in
push
js
in
xor
cltd
or
mov
adc
es
add
notb
pop
jge
loopne
mov
mov
mov
lock
movsb
int
jle
stc
iret
in
iret
insl
popf
inc
jp
dec
sbbl
and
in
stos
sbb
and
jmp
mov
and
mov
in
arpl
mov
sub
scas
mulb
cmp
dec
cmp
xchg
pop
push
sub
add
stc
sbb
jle,pt
enter
mov
pop
push
sbb
cmp
sbbb
push
push
sti
into
or
and
push
iret
sti
mov
shlb
mov
inc
xor
cmpsb
test
jno
mov
out
sub
aaa
sub
loope
fsub
and
fs
mov
xor
rclb
das
pop
add
mov
adc
pop
jmp
cmp
aaa
fdivl
outsb
push
outsl
lods
dec
mov
mov
mov
sub
dec
test
cmp
dec
aaa
shrl
push
shll
mov
adc
sub
outsb
mov
sbb
sub
lret
add
xchg
rcr
xchg
lods
adc
ljmp
sub
cltd
aad
jle
pusha
pop
inc
loope
push
fdivrp
lods
ret
or
jmp
dec
push
or
or
sub
xchg
mulb
dec
or
inc
xchg
sbb
pop
mov
dec
inc
push
bound
push
cmpsl
push
push
push
jno
dec
subl
cmpsb
call
xchg
cmpsb
fs
aaa
push
xchg
fucomi
ljmp
fdivrs
jb
int
add
fisubs
fsts
cli
sub
bound
adc
jecxz
and
xchg
sti
pop
add
xor
gs
pop
sbb
outsb
stos
mov
shr
push
jne
rolb
xorl
or
rorb
loop
mov
xor
xchg
call
adc
dec
cmp
xor
dec
push
xchg
add
mov
movsb
mov
inc
mov
jne
test
mov
dec
adc
cmc
xor
ljmp
into
loop
rcrl
gs
mov
pop
loopne
in
addb
push
aaa
adc
sub
xorb
lret
imul
lock
ja
mov
dec
insb
and
dec
clc
loopne
outsl
pop
out
mov
adcb
cltd
push
enter
mov
jae
jb
push
mov
or
cmpsl
mov
dec
jae
jle
enter
cs
scas
stc
jo
stc
shr
sbb
cmp
stos
push
jnp
inc
cmp
inc
je
out
in
mov
jns
jb
dec
cld
test
push
pop
mov
lret
enter
inc
aas
adc
jecxz
xlat
hlt
mov
mov
jecxz
stos
and
imul
pop
jmp
negb
cs
pushaw
les
dec
pusha
daa
in
mov
xchg
fwait
xor
jne
inc
sbb
jae
xor
mov
lock
push
fsts
fistpll
lahf
mov
fcoml
dec
sub
rorb
mov
mov
dec
add
sub
xchg
dec
sbb
mov
aas
lods
cmp
xor
ljmp
xor
repnz
test
xchg
jmp
and
mov
leave
sub
iret
mov
push
inc
pop
adc
lret
sbb
jb
mov
add
jno
and
lods
or
sub
mov
inc
bound
mov
pop
mov
sub
add
cli
mov
inc
dec
shrl
les
adc
push
aaa
iret
dec
jne
mov
mov
push
dec
xor
mov
pusha
cmp
rolb
pop
jo
rcrl
jp
xchg
push
xchg
mov
lds
dec
jecxz
jge
out
inc
mov
lea
cmp
jmp
jb
lods
pop
xor
and
pop
pop
sbb
addb
pop
out
fildl
cli
aaa
xchg
add
insl
loop
aad
in
rorb
scas
movsl
xchg
xchg
mov
jl
cmp
aad
xor
in
fdiv
aad
iret
adc
jne
xchg
fsub
movsb
jl
push
nop
mov
popf
or
lock
movsb
pop
pop
sub
cmpsl
sbb
push
pop
mov
sub
fsubs
cld
loop
pop
out
push
imul
dec
jg
cli
std
xor
div
aam
xor
adc
jno
jo
lds
gs
sbb
jae
out
gs
mov
lret
cmp
cld
xor
sbb
or
add
rcr
mov
sti
clc
or
xor
adc
sbb
adc
aad
xchg
outsl
dec
insb
jg
daa
lea
aam
nop
xlat
repnz
jl
dec
xor
push
inc
aaa
adc
out
loop
xchg
add
sahf
xchg
sub
out
enter
int
scas
xor
and
iret
pop
imul
mov
mov
aam
shrb
pop
clc
popa
out
mov
jmp
xchg
lods
cmp
jno
mov
imul
push
pop
cmc
xchg
jnp
dec
negl
and
add
adc
cmp
enter
pop
repnz
fucomi
or
push
mov
mov
pop
insl
xchg
addr16
lahf
aas
outsb
das
lret
outsb
loopnew
xchg
inc
adc
adc
or
je
fwait
in
adc
mov
mov
sbb
mov
sbb
movsl
mov
sub
mov
insb
rclb
and
daa
and
jns
lds
push
insb
cwtl
xchg
popa
mov
or
ja
sbb
enter
test
pop
sahf
aad
inc
adc
aas
jno
pop
out
cmp
add
bound
int
jno
imul
je
mov
fists
int3
jbe
pusha
ja
xchg
and
lret
faddp
out
fidivl
push
addr16
cmc
int3
xchg
je
hlt
xor
mov
xchg
cmpsl
test
in
movsb
lret
stos
lret
cmp
ret
push
pop
js
jg
push
ds
stc
test
test
push
call
mov
rcll
inc
out
pop
xchg
jg
fucom
mov
mov
push
jg,pt
pushf
jbe
inc
addr16
jmp
out
pusha
inc
mov
les
jecxz
out
mov
mov
dec
loop
fst
cs
xor
inc
mov
ljmp
incb
push
lcall
dec
and
or
insl
xchg
cltd
mov
repnz
cmp
and
dec
push
jns
and
je
es
lcall
call
and
dec
lds
adc
in
leave
das
pop
lret
mov
or
mov
cmp
jne
rorb
sub
cwtl
mov
pop
mov
xchg
imul
test
out
mov
and
pusha
xchg
ret
pop
or
sar
in
jl
jp
das
repnz
sahf
arpl
push
mov
inc
icebp
mov
mov
gs
push
pop
cmpl
hlt
dec
xchg
cmp
fldt
adc
pusha
jmp
pop
cmc
push
gs
fstpl
xor
cltd
aaa
in
mov
fbstp
cmp
fsubrs
pop
repnz
cs
sahf
mulb
fistpll
xor
fmuls
mov
cmp
xchg
aaa
dec
push
and
jl
test
dec
scas
sbb
gs
sub
add
mov
push
mov
lcall
lock
mov
sub
popf
and
sub
pop
mov
fisubl
pop
out
cmp
jb
pop
or
pop
loopne
xor
in
or
aas
gs
int
repnz
loop
aam
imul
mov
aam
mov
cltd
rclb
mov
and
mov
pop
and
jg
add
loop
sbb
add
sbbl
adc
or
fnstenv
push
jg
mov
fldl
dec
mov
cmpsb
xor
cld
scas
jnp
ds
daa
pop
loope
scas
push
mov
leave
pop
test
mov
aaa
xchg
pop
sbb
aaa
xchg
adc
push
fstpl
and
pop
aaa
cmpsl
imul
dec
test
adc
fimull
jbe
mov
mov
push
push
xor
mov
pusha
rcll
js
imul
popa
outsb
push
pusha
mov
shrl
fimull
mov
imul
sahf
dec
divb
or
add
outsb
repz
xchg
fadd
add
lods
aaa
sbb
sbb
gs
xchg
repz
cmp
or
aas
stc
inc
and
pop
xchg
fimuls
sub
insb
cwtl
pushf
xchg
fucomip
cmc
js
jp
adc
xchg
loop
shlb
jae
push
into
inc
cmp
sarb
push
ss
rol
pop
xchg
xor
mov
icebp
mov
and
andl
fnstcw
push
add
dec
hlt
mov
jl
insl
xor
mov
fwait
and
imul
incl
xchg
pop
mov
mov
cmpsl
mov
adc
std
fnstenv
pop
cmpsb
jecxz
cmp
dec
mov
aam
aas
jmp
cmc
and
dec
ds
or
mov
sti
ds
mov
ss
dec
in
lret
lcall
and
lods
out
jmp
ss
add
mov
es
xchg
cs
call
daa
pop
lahf
push
inc
mov
inc
sub
xor
cmp
rol
mov
jle
adc
adc
push
mov
aad
jl
cmp
jb
mov
stos
movl
push
movsbl
lret
sub
mov
dec
mov
imul
movsl
inc
shrb
out
addl
inc
int
pop
mov
lods
sbbb
or
jl
stos
mov
enter
push
cmc
shrb
into
xchg
and
int3
jmp
fs
fisubl
add
mov
adc
dec
repz
pop
mov
ficoms
pop
mov
inc
repz
pop
scas
sub
and
push
jmp
mov
mov
xlat
test
loopne
inc
pop
sub
jp
and
jbe
mov
shl
fbld
cmc
mov
cmp
ljmp
mov
mov
adc
mov
xlat
repz
fs
xchg
rcrb
dec
and
leave
lahf
repnz
xor
idiv
js
ret
lret
icebp
imul
add
pushf
sahf
pushl
or
jmp
arpl
or
push
inc
dec
es
arpl
aas
dec
fcoms
sbb
mov
aad
stos
and
or
push
cmp
adc
push
mov
mov
das
loope
jle
push
bound
cmp
jp
mov
push
and
push
mov
and
cwtl
jl
lret
mov
jmp
push
sub
mov
pop
jae
or
push
mov
ja
sbb
jecxz
call
dec
push
sbb
cmc
popa
jp
jbe
icebp
fs
test
sbb
je
push
fdivp
mov
in
pop
sbb
lods
call
jae
in
jb
ret
adc
das
cltd
add
jmp
mov
and
int3
inc
push
bound
lret
in
lock
fs
xlat
cli
sbb
mov
mov
es
or
push
sbb
je
pop
push
pop
ja
mov
push
adc
dec
in
cmp
pop
pusha
push
shrl
dec
frstor
stos
pop
sub
mov
in
mov
push
mov
icebp
xchg
jge
out
dec
mov
aaa
cmpsb
mov
pusha
test
insl
mov
adc
add
into
mov
mov
mov
icebp
in
pop
stc
pop
mov
out
mov
repnz
sub
jge
hlt
lcall
mov
cltd
cmpl
mov
incl
stos
and
pop
jns
stc
adc
in
sarb
adc
stc
mov
xor
mov
xchg
sub
jmp
jae
std
mov
adc
dec
loop
sub
push
pop
mov
and
insl
ret
fstpl
jmp
xor
fcmovne
daa
and
push
in
add
mov
addr16
sub
subb
mov
sub
icebp
ljmp
shlb
mov
adc
jge
adcl
lods
sahf
decb
mov
mov
in
test
data16
ret
cmp
std
xchg
mov
cmp
ds
add
fsubl
xor
dec
jle
movsb
movsl
jmp
xor
xchg
cli
lods
std
jle
cwtl
adc
cs
sarb
mov
adc
std
lods
mov
repz
dec
addb
scas
pushf
fimull
xchg
popf
cld
adc
xchg
in
jp
cmp
mov
or
paddsb
inc
in
clc
inc
loop
xor
sbb
mov
sub
inc
cmp
fdivp
inc
movsl
out
push
pop
xchg
push
adc
adc
shll
cs
push
mov
mov
test
ret
call
dec
xchg
ja
dec
sub
dec
and
scas
inc
outsb
pop
mov
xor
int3
push
repz
push
jle
jmp
int
je
cmp
cmpsb
dec
sbb
jle
xchg
xor
loope
xlat
stos
loopne
insb
ud1
sbb
lods
xor
dec
add
add
dec
jp
stos
in
mov
cld
adcb
sbb
int
sahf
scas
hlt
dec
enter
sub
in
mov
roll
scas
in
mov
xchg
pop
inc
cmpsl
sbb
js
and
addr16
lods
push
test
pop
fwait
push
inc
add
jg
inc
sub
inc
push
push
push
jno
jae
add
pop
push
js
add
pop
ljmp
inc
testb
in
fwait
inc
idivb
dec
arpl
mov
rcr
dec
sub
mov
in
enter
xchg
lret
arpl
inc
cs
push
adc
mov
mov
jle
inc
gs
bound
fadds
add
dec
pop
sub
inc
mov
mov
and
cmp
fucomi
les
pop
icebp
pop
push
xchg
bswap
inc
out
inc
aas
pop
fisttpl
mov
aad
cmpsb
lea
sbbl
enter
inc
bndstx
imul
loope
nop
aaa
bound
sbb
jns
mov
xor
dec
jmp
dec
ds
pop
bound
pop
cmpsb
mov
inc
and
fstps
ror
loopne
subl
push
ja
div
mov
movsb
shll
mov
bound
in
xchg
lock
jb
fldcw
adc
pop
sub
xchg
mull
lock
daa
and
sbb
ffreep
sbb
cmp
stc
add
ss
jge
xorl
fstl
mov
push
movd
push
xchg
inc
fcomip
inc
iret
mov
out
ret
adc
and
lahf
mov
mov
sarb
and
popa
pop
and
test
cmp
les
in
xchg
adc
cmp
dec
jecxz
mov
xor
xor
pop
mov
pop
in
pop
pop
out
loope
out
sahf
aam
jae
xor
or
loopne
outsb
xchg
inc
stc
pop
sbb
fwait
jne
mov
shrl
and
mov
sbb
sub
lea
sbb
cmp
int3
test
rcll
pop
ficoml
dec
push
pusha
inc
inc
subl
in
cmp
rcr
aas
add
mov
mov
stc
sub
cmp
out
pop
decl
call
out
pop
fsubrl
fisubrs
pop
sub
inc
outsb
inc
out
lea
fisttps
pop
add
in
add
adc
imulb
push
mov
mov
sub
std
cmp
mov
into
pop
popa
mov
adc
in
mov
test
addr16
push
adc
add
in
in
dec
imul
pop
cli
and
push
dec
add
sbb
insb
or
into
and
push
aas
add
enter
ljmp
bswap
hlt
scas
leave
push
jl
in
xchg
sub
push
jbe
pop
or
jbe
out
idivl
inc
in
outsb
cmp
lcall
sar
js
jns
repz
lods
sbb
stos
cmpl
inc
mov
rcrb
and
xchg
mov
fmuls
xor
cmp
out
cld
push
data16
mov
cmc
cmp
or
arpl
dec
dec
lods
add
cmp
lea
pop
ljmp
mov
lahf
cld
cmp
call
aas
das
sub
push
mov
add
fwait
out
enter
jnp
repnz
jecxz
mov
gs
aad
repz
cli
arpl
jae
lock
cwtl
dec
jne
iret
xchg
jmp
insb
xlat
or
ud0
sbb
xor
enter
rcr
push
and
daa
fidivrl
jb
jae
jbe
cld
outsb
iret
sbb
mov
xchg
lods
and
test
inc
sbb
push
test
inc
mov
jbe
adc
jecxz
jge
fs
xchg
or
repnz
mov
scas
negb
adc
pop
out
xor
cmpl
imull
mov
adc
mov
mov
push
mov
jl
or
insb
cmp
daa
mov
dec
aas
daa
ss
imul
or
adc
int3
sbb
and
fsubs
or
mov
mov
int3
and
ds
xchg
stc
inc
mov
imul
jle
stos
jne
or
mov
mov
movsb
lods
cmp
fcomps
out
ret
test
or
xor
xchg
inc
add
lret
fsubrl
add
lahf
out
mov
push
dec
mov
cmp
andl
inc
jne
adc
xchg
inc
sbb
shll
dec
add
dec
jae
add
mov
fisttpl
mov
rcrb
mov
jle
pop
cld
loopne
leave
rcl
or
stos
push
adc
repnz
cli
lods
dec
enter
loop
test
sbb
inc
cmp
inc
pop
jge
pusha
dec
push
in
xchg
stos
push
xchg
inc
jmp
mov
jno
mov
enter
pop
lahf
test
call
enter
xor
jbe
cli
out
pop
movsb
xor
call
mov
cs
icebp
in
mov
fsubrs
dec
xchg
movsb
push
jg
mov
jns
cs
inc
scas
mov
push
sbb
mov
js
fadd
pop
fisubl
ficomps
dec
lret
and
out
cmp
out
rcll
pop
mov
adc
lock
mov
pop
mov
push
pop
es
outsb
ss
mov
mov
fwait
test
or
icebp
xchg
shr
push
add
int
push
mov
mov
shrl
pop
push
push
cbtw
sub
jg
or
shld
mov
push
sbb
mov
in
in
mov
pop
push
or
scas
cmpsb
ja
dec
aaa
fisttpl
scas
push
fisttpl
pop
fs
mov
inc
and
dec
sub
sbb
dec
lret
fistps
out
popf
outsb
mov
es
xor
insb
jae
outsl
mov
lahf
or
mov
in
cld
lds
dec
jnp
add
or
test
or
inc
les
jnp
push
movsb
mov
xor
fwait
addl
pop
mov
xchg
into
mov
pop
pop
push
inc
call
sbb
jle
dec
pop
push
aaa
xor
repz
sub
jne
fpatan
repz
frstor
scas
movsl
into
push
or
adc
mov
pop
ja
mov
add
mov
nop
int
add
xchg
adc
adc
ja
movsl
lea
aaa
jae
mov
cmp
jg
sub
cmpsl
stc
mov
adc
pop
cwtl
push
fsts
push
push
out
inc
sub
mov
addr16
pop
das
decl
add
mov
adc
mov
push
cli
jg
cmp
bswap
xor
lods
mov
sbb
sbb
cmp
jne
shll
insb
sub
lahf
jle
loop
aad
aaa
xor
js
add
mov
clc
and
push
lods
loop
pusha
push
cmp
and
fnsave
test
sub
fisttpll
jns
jo
addb
and
les
mov
dec
push
loop
outsl
testb
pop
out
mov
pop
dec
mov
ds
in
add
and
or
daa
add
stos
sbb
sbbb
mov
xchg
xchg
jo
test
inc
imul
aas
sti
fs
sbb
sub
mov
push
pop
mov
loop
cmp
aad
scas
dec
repz
mov
mov
mov
cld
in
push
and
cmpsl
pop
cmp
adc
std
mov
pop
cmp
cli
out
cmp
xchg
pop
data16
push
xor
js
pop
subb
pushf
jge
pop
jge
cwtl
cwtl
xchg
out
lret
push
ljmp
shll
mov
mov
dec
mov
cmp
jecxz
das
xchg
cmp
movsb
in
or
pop
frstor
lods
push
aaa
outsb
jno
aam
popf
xchg
push
adc
bound
mov
sbb
jl
adc
mov
jbe
je
dec
mov
mov
and
popf
cld
cmpsl
and
pusha
mov
xchg
pop
mov
cmp
jg
add
ljmp
or
and
cmc
push
add
mov
adc
ss
pop
aad
das
enter
addr16
sub
ss
add
iret
mov
mov
cmpsb
out
adcl
xlat
pushf
out
xchg
cmp
push
xor
mov
sbb
pop
das
adc
shl
ret
mov
push
xlat
jbe
adc
outsl
pop
xchg
inc
es
cltd
dec
clc
aad
pusha
mov
mov
out
mov
out
fnstsw
dec
enter
js
sub
test
fsubs
call
mov
sbb
int3
jmp
out
pusha
je
push
aad
mov
pop
sub
inc
jecxz
jl
and
sti
cmc
cmc
sbb
push
push
push
and
loopne
decb
xlat
push
mov
or
adc
mov
pushf
leave
pop
fdivs
hlt
sub
pop
jae
out
cltd
sbb
dec
or
pop
les
cmp
cmpl
inc
sbb
xchg
sbb
mov
int
inc
out
push
xchg
mov
mov
cmp
jno
xchg
push
jmp
xchg
mov
dec
xchg
or
jo
adc
jae
or
sbb
out
jns
jbe
xchg
ljmp
cmp
lock
ret
loope
inc
div
mov
cmp
pusha
cmp
cmp
mov
jo
add
cmpl
aas
notl
cmp
icebp
call
ror
sbb
push
xchg
push
fmull
mov
iret
test
loopne
push
xor
stos
sbb
imul
outsb
aaa
sbb
das
stos
push
leave
in
cmpsl
lahf
outsl
cs
aad
pusha
jmp
mov
adc
push
and
cld
xchg
sub
sti
adc
test
sub
xchg
das
xchg
xor
dec
add
mov
sahf
mov
mov
xchg
pop
cmpsb
mov
ret
add
icebp
outsl
xchg
xchg
or
sbb
inc
lock
fdivr
ror
ljmp
insb
mov
imul
cli
loop
dec
push
jle
filds
stc
insl
inc
sahf
xor
scas
jp
jb
stos
mov
cmpsl
jo
inc
mov
rolb
add
mov
inc
hlt
lock
into
push
pusha
or
ds
push
inc
test
popa
std
cld
mov
int
push
js
insb
stc
mov
dec
in
ret
lret
fiaddl
lret
dec
mov
and
mov
add
or
xchg
stos
pusha
pusha
jo
leave
cmpl
ljmp
push
test
lahf
call
inc
inc
push
xchg
add
xchg
jp
out
xor
mov
jecxz
xor
pusha
lcall
sti
popa
mov
aas
push
imul
mov
xchg
push
jmpw
inc
pop
in
ss
stc
call
mov
mov
cmp
jmp
enter
add
push
loop
jno
cld
dec
test
mov
clc
fdivp
std
inc
xchg
ljmp
or
pop
test
xchg
pop
add
jbe
call
aad
push
sbb
movsb
dec
andl
inc
and
js
sbb
pop
xor
stos
xchg
mov
aas
repz
inc
sti
movsb
adc
iret
out
pop
rcll
test
pushf
shlb
out
mov
fists
xchg
adc
lds
lods
clc
aam
push
repnz
mov
gs
sub
cmp
daa
je
xchg
es
mov
xor
fidivl
jae
je
aam
and
pusha
pushf
push
jle
sarb
mov
cmp
es
enter
push
push
mov
fistpll
pop
mov
je
jge
call
push
or
inc
out
cmp
inc
lret
aaa
adc
test
mov
lds
std
std
dec
jmp
sub
in
lock
mov
pop
lahf
mov
cld
inc
mov
data16
jb
adc
insb
pushf
jbe
iret
pcmpgtw
xchg
mov
push
lcall
outsl
push
mov
adc
cmp
and
addb
xchg
sbb
xor
sar
fsubp
cmc
mov
call
test
mov
sub
pop
iret
pop
sub
je
jbe
int3
lret
pop
rolb
mov
shlb
mov
xor
cs
pop
stos
popf
sub
jmp
ss
mov
movsb
in
test
push
dec
int
jne
dec
out
pop
loopne
mov
ret
mov
sbb
xchg
pop
dec
cmc
push
loop
stc
out
test
xor
outsb
mov
daa
inc
pop
sub
lds
aad
jno
lret
shlb
mov
lea
push
or
in
push
xor
jmp
lea
addr16
je
mov
mov
lret
xor
cs
cmp
bound
jg
adc
sti
jb
mov
pop
in
xor
mov
inc
outsb
mov
out
stos
aaa
jl
les
mov
daa
loope
sub
sub
pop
fisubrl
ds
add
and
fwait
gs
sarl
enter
cmp
mul
add
mov
jecxz
les
add
adc
sahf
dec
imul
xchg
enter
adc
outsb
rorl
and
jne
jo
xor
push
adc
adc
pop
stos
sbb
dec
or
mov
xchg
xchg
rolb
xchg
sti
jmp
cmp
lock
sbb
sti
mov
and
pop
cmpsb
sbb
or
push
jne
xor
jge
jae
lcall
push
cltd
push
scas
push
icebp
xor
lods
dec
loop
int3
out
add
fidivrl
ja
test
shrl
cli
jmp
sbb
stc
or
jecxz
pop
mov
pop
and
nop
push
xchg
mov
xchg
jp
sbb
add
cli
int
icebp
adc
lods
loopne
dec
mov
insl
sub
or
sbb
add
mov
repz
inc
movsl
fwait
push
in
xor
orb
xor
xchg
xor
dec
jb
testb
negl
sarb
xchg
inc
or
xchg
outsb
sub
pusha
inc
loop
ss
dec
pop
cmpsl
mov
cmpsb
jnp
adc
scas
fbstp
rorl
cli
imul
adcl
clc
jle
sbbl
adc
xor
jns
push
fwait
in
push
jo
xchg
lcall
out
add
push
mov
mov
lds
movl
xor
icebp
and
fwait
out
sub
lahf
nop
repnz
aaa
in
roll
stc
adc
sub
sarl
shll
mov
dec
cs
es
cmpsb
xchg
ljmp
mov
jns
xor
jae
je
pushw
sbb
loop
pop
xor
xor
inc
adc
cmp
in
jle
std
mov
lock
dec
sub
jnp
aas
add
push
push
and
ror
inc
out
push
lods
xchg
pop
jns
int3
xor
cli
and
sahf
rcll
sub
mov
pop
cmp
pop
nop
leave
es
nop
jnp
notb
daa
lds
mov
or
bound
cld
push
push
inc
sahf
or
test
sbb
and
xorb
imul
popa
push
mov
enter
mov
sub
inc
fidivrs
shll
dec
xor
sub
cmp
scas
pop
leave
mov
mov
push
shl
mov
das
insb
mov
mov
mov
adcl
xchg
xchg
popf
cmp
test
mov
sbb
jmp
aaa
jecxz
inc
das
int
push
fstpl
dec
or
mov
push
pop
adc
cmp
aaa
mov
fildl
xchg
daa
mov
dec
xchg
xor
adc
and
inc
mov
push
adc
adc
push
mov
mov
push
cmpsb
jmp
xor
push
push
sbbb
and
insb
stos
add
jbe
pop
pop
pop
das
insl
and
cwtl
pop
and
xchg
in
cmc
dec
mov
bound
loopne
loopne
pop
sub
leave
int
ds
rcll
sub
dec
sub
repnz
dec
pop
pop
repz
call
jge
jp
shlb
cmp
xchg
repnz
push
lahf
xor
adc
and
pop
sti
xor
cmpsb
cmp
adc
scas
outsb
call
nop
cmp
daa
loop
pop
mov
icebp
js
sub
push
xor
or
call
in
jo
and
mov
jecxz
ror
movsl
inc
pop
lds
or
mov
sbb
cmp
in
pop
rcll
pop
les
pop
push
push
popa
jl
add
out
movsl
cltd
push
testb
data16
mov
xor
in
iret
sbb
cmp
push
stos
fwait
pusha
sub
dec
push
mov
lods
pop
xorb
test
pop
pop
int
dec
or
sub
rclb
mov
sbb
outsl
out
mov
shr
xor
add
push
pop
adc
xchg
cmpsb
dec
mov
pop
dec
xor
jae
repnz
test
or
sub
jnp
dec
sahf
sar
pop
leave
jle
roll
pop
or
or
add
jge
std
mov
push
mov
add
hlt
popa
clc
movsl
pusha
lock
rep
xchg
lds
xor
and
insl
push
test
adc
clc
data16
xchg
adc
pop
arpl
leave
mov
fadds
pop
inc
push
mov
xchg
jb
fdivs
mov
push
xchg
lea
and
mov
sub
pop
dec
dec
fs
cmp
pop
pop
mov
mov
add
jg
cli
fcoml
jo
or
jmp
in
push
push
das
push
dec
lock
cmp
inc
in
subb
repz
pop
insb
into
cmp
insb
mulb
cmp
int
rclb
sbb
ljmp
imul
xchg
ljmp
xor
inc
mov
jge
stos
cmp
shr
add
mov
mov
mov
mov
lret
cmp
movsl
jmp
jb
imul
lcall
mov
push
call
jp
in
push
xlat
or
shrb
orl
es
inc
inc
fidivs
xor
addr16
cltd
mov
mov
gs
inc
jl
xor
mov
inc
test
or
sti
cmpsb
xchg
xor
jg
pushf
out
hlt
sub
adc
push
ljmp
push
test
dec
mov
cmp
ret
std
test
xlat
jge,pt
sbb
cmpsw
pop
aad
sarl
fiaddl
and
push
add
xlat
xor
stos
movsb
xchg
cmc
xchg
movsl
or
push
out
pop
in
aad
dec
js
push
int
jb
mov
dec
scas
imul
rorb
jg
mov
pusha
or
push
insb
movsb
test
pop
push
xchg
shlb
xchg
inc
mov
xchg
addb
shl
xor
adc
fldenv
adc
xor
inc
ficomps
in
adc
arpl
mov
jg
inc
mov
sbbb
adc
mov
into
push
inc
inc
and
pop
or
pop
fiadds
test
pusha
mov
xchg
xchg
inc
les
popf
lret
outsl
and
mov
in
movsl
xor
aaa
out
sub
ss
inc
fstpl
fldenv
test
jecxz
subps
mov
test
or
push
adc
mov
aas
mov
push
or
popa
or
xor
loopne
bound
mov
call
mov
inc
sbb
xchg
rcrl
mov
push
mov
cmp
and
and
push
scas
fwait
cmp
xor
aaa
gs
pop
sbb
in
lret
clc
jne
ja
enter
pop
in
inc
popf
cmp
adc
push
sbb
test
popl
cmp
add
clc
jno
push
pop
ds
xchg
lods
call
iret
sbb
cmp
jl
xchg
push
xor
push
out
ja
dec
mov
push
push
inc
ss
out
test
fst
out
in
iret
rorb
pop
xchg
jmp
xchg
fistps
test
hlt
adc
incb
lea
std
mov
inc
lahf
std
daa
cli
add
push
jo
inc
or
inc
sub
sbb
push
insl
xlat
xchg
imul
cmp
aaa
adc
xor
pop
cmp
stos
mov
or
dec
cmp
cmp
adc
cwtl
out
mov
shll
lret
add
mov
jo
mov
cltd
rorb
ljmp
rcll
and
dec
fistps
nop
movsl
loop
push
adc
in
fdivs
pop
inc
sbb
cmp
rclb
add
mov
mov
mov
xor
inc
adc
cmp
sbb
ret
repz
js
lds
and
mov
or
stos
into
jmp
daa
add
gs
cmp
bound
add
xchg
or
cltd
add
dec
cld
pop
jge
mov
jecxz
ds
in
xlat
ret
aaa
pop
jbe
xor
mov
jo
cli
nop
scas
push
mov
popf
xchg
or
jp
movsb
push
mov
xchg
xchg
subl
add
pop
xlat
mov
dec
je
mov
cmc
adc
in
xchg
and
jne
sahf
ret
cmp
insb
test
pop
push
cld
and
insl
jmp
jae
push
cmp
push
test
push
mov
jg
or
jno
rcl
cwtl
cwtl
cmp
or
jmp
repnz
xchg
and
bound
push
sub
lahf
mov
mov
mov
cld
bound
imul
mov
adc
lods
adc
js
repnz
repz
mov
mov
cmp
das
sub
jge
pop
js
stc
imul
mov
dec
es
lods
aaa
mov
popf
mov
jae
adc
xchg
rclb
gs
cltd
push
lods
sbb
gs
jle
sbb
dec
fcompl
cmp
orb
cmpsl
call
cmp
lcall
add
push
pop
sbb
lock
daa
or
shrl
loopne
jbe
fisttpll
testb
stc
add
insl
push
scas
daa
inc
adc
loope
jge
cs
stc
inc
and
fs
sub
icebp
popf
sti
loop
lahf
mov
mov
fisubl
test
pop
mov
daa
dec
mov
add
inc
inc
stos
jp
pushf
adc
push
andl
xchg
sbb
jno
mov
sub
lret
outsb
xchg
cmp
pop
jne,pn
shlb
fimuls
pop
and
test
jecxz
lods
mov
pop
mov
cmpsl
xchg
push
cmp
int3
adc
xor
test
inc
clc
push
mov
shrl
mov
fwait
sub
shr
xchg
repnz
lahf
leave
stos
jl
out
jecxz
sub
xchg
xlat
jae
out
push
cmc
mov
inc
seta
jnp
adc
jnp
add
jns
xchg
movsl
mov
or
pop
cld
dec
ljmp
add
mov
mov
sub
or
jecxz
ret
cmp
push
sti
sarl
lods
sub
and
fistpll
enter
cmp
adc
sub
add
push
int
popf
leave
jg
movb
js
push
jecxz
jnp
mov
xchg
pop
cmpsl
mov
sbb
gs
cmp
pusha
sub
pusha
cmpl
pop
sub
shll
decl
xchg
lods
xchg
fisttpll
ret
pusha
test
scas
pop
loopne
insb
adc
iret
in
xchg
or
jp
jne
sub
sub
shr
mov
adc
loopne
xchg
add
js
sub
icebp
pop
pop
jmp
dec
adc
imul
in
cmp
sub
mov
in
ljmp
lods
bound
and
pop
pop
cmpl
outsb
mov
pop
cmp
and
jne
cli
ret
hlt
pop
pop
and
or
sbb
xchg
pop
inc
sbb
aad
ret
adc
inc
and
pop
lcall
adc
aaa
fcompl
stos
negl
scas
jl
inc
ret
insb
test
sub
mov
imul
lret
xor
in
pop
out
and
jns
xchg
sbb
push
cmp
adc
cmpsb
pop
test
in
movsb
xchg
jmp
int3
cs
fnstenv
stos
cmpsb
repz
inc
cmp
adc
ret
xorb
mov
inc
mov
add
cmc
pusha
sub
push
cs
jl
cld
dec
push
mov
dec
in
scas
mov
out
jbe
fisttpll
cmp
sub
gs
push
hlt
jb
scas
sbb
xchg
mov
jb
sbb
push
cld
cmp
push
ds
arpl
into
outsb
lods
popf
call
iret
sahf
mov
repnz
push
or
sub
mov
pop
adc
jl
jbe
sarb
movsb
insb
clc
popa
pop
cmpsb
mov
lcall
jg
push
mov
and
jae
adc
pop
lods
je
mov
sahf
cmpl
sti
xchg
loopne
mov
dec
mov
in
in
add
xchg
mov
adc
adc
stos
mov
shll
cwtl
jecxz
sbb
and
int
fisttpll
push
push
jnp
dec
jb
sbb
popf
inc
mov
loopne
cmp
xchg
movl
icebp
lret
mov
cmpsl
rorl
fildl
addr16
or
nop
mov
es
lahf
sub
fimull
or
jle
sbb
into
insl
dec
arpl
test
inc
idivl
js
movsb
pushf
arpl
daa
mov
mov
cmp
rcll
pop
or
add
xor
inc
aam
and
das
insl
cmp
scas
jno
lret
mov
and
and
push
lds
test
lea
mov
ficompl
xchg
mov
mov
in
mov
imul
jb
and
sub
xorb
push
nop
cmpsl
and
sbb
mov
xor
jbe
mov
push
mov
test
sarb
out
das
or
movsb
mov
adc
pusha
sub
decl
aam
and
fimuls
mov
or
mov
xor
pop
dec
or
push
inc
stos
movb
ljmp
xor
push
dec
bound
jp
sarb
lea
ljmp
jae
mov
mov
mov
in
imul
daa
clc
cmp
jp
lods
lods
imul
hlt
test
inc
nop
ja
imul
into
in
or
ret
jo
sbb
mov
fistl
loopne
xchg
daa
push
imul
push
fstl
push
push
sti
xchg
xchg
xorl
out
subb
push
inc
or
test
jb
inc
jg
push
xorb
cs
das
pop
out
mov
fwait
dec
es
cwtl
ss
cmpsl
xor
jle
mov
cmp
cli
les
sbb
fstpl
and
cmpsb
jae
xchg
pop
cli
pop
pop
inc
mov
jne
pop
paddd
and
jnp
inc
xchg
adc
adc
stos
push
mov
scas
imul
pop
sti
add
int
imul
mov
push
dec
adc
xchg
mov
inc
out
insb
cli
rorl
dec
mov
sti
cmpb
js
stos
das
mov
pop
iret
jns
and
xchg
mov
lcall
xchg
or
push
add
lods
cmp
arpl
arpl
jecxz
cwtl
mov
jl
mov
dec
inc
sar
outsl
enter
ljmp
sbb
shr
lods
add
jge
dec
add
popf
adcl
popf
imul
lods
xchg
rcrl
jp
jle
xchg
shll
push
movl
jnp
arpl
sbb
inc
popl
adcb
mov
icebp
or
out
cmpsl
movsb
fmul
inc
inc
cwtl
cmpb
jo
int
push
adc
sbb
xchg
cmp
and
sbb
push
stos
ret
or
int
test
xor
das
in
mov
test
xchg
cmpsb
mov
sbb
or
mul
and
sarl
repz
test
lea
xor
or
scas
das
and
or
pusha
xchg
push
and
jnp
mov
es
jmp
out
jo
mov
in
inc
jne
ja
shl
mov
xchg
push
jnp
dec
notb
mov
stos
mov
mov
xchg
adc
xchg
lcall
stc
into
std
push
incl
mov
or
scas
cmpsb
stos
mov
pop
ljmp
push
lcall
lcall
adc
scas
pop
add
inc
sbb
jne
xchg
xchg
and
leave
hlt
ret
mov
sbb
or
xchg
or
ret
popl
mov
std
test
pushf
fwait
cmpsl
jns
cli
or
adcb
scas
sbb
mov
fs
xchg
pop
sbb
cli
out
xorl
sbb
cmc
mov
xchg
cli
daa
fwait
sbb
icebp
jno
push
sbb
test
inc
ja
and
int
pop
fstps
andb
mov
outsb
enter
std
rcrl
movswl
mov
dec
add
testb
sar
clc
shl
popa
insb
outsl
in
cmp
cmpsl
mov
out
adc
dec
push
popf
fimuls
dec
ret
lds
rcll
mov
sbb
sbb
inc
ret
add
xchg
outsl
dec
lcall
vsqrtsd
mov
mov
mov
in
sub
inc
jns
push
sbb
xor
mov
sub
lret
movb
jb
and
test
pop
jne
cmpsl
push
out
dec
scas
jg
xchg
push
mov
mov
add
daa
loope
mov
icebp
pusha
scas
sbb
std
jo
loopne
xchg
jmp
jnp,pn
lret
mov
test
shll
push
mov
xchg
bound
inc
mov
fs
pop
push
push
sti
insb
sahf
inc
mov
fidivs
cld
add
scas
xchg
xchg
pop
imul
into
mov
xchg
fsub
push
jg
xchg
and
loop
sbb
fnsave
jno
mov
jnp
ret
sbb
adc
inc
sub
lds
push
nop
sbb
das
pop
add
mov
or
xchg
jmp
sbb
sub
sub
dec
pop
das
push
sub
sbb
pop
xor
jp
pusha
dec
rclb
jno
outsb
dec
insb
and
in
jnp
sub
daa
out
scas
insl
mov
mull
adc
push
add
push
add
sub
rcll
js
adc
lds
cmpsl
dec
mov
andb
xor
mov
jmp
and
fstpl
in
cmp
sub
incl
cmp
inc
add
dec
or
and
hlt
sbb
shrl
mov
sub
add
outsb
jo
jno
jl
aad
mov
or
repz
les
sub
das
push
pop
stos
jae
adc
sbb
inc
cmpsl
push
xor
jo
aam
or
es
inc
push
pop
int
xchg
pop
jb
mov
xchg
roll
sub
mov
aad
xchg
inc
negl
or
or
daa
jge
jmp
out
inc
jecxz
pop
push
daa
mov
test
dec
mov
xchg
mov
aam
mov
fdivrl
sarl
mov
fisttpl
lcall
jg
mulb
sub
imul
shlb
sar
adc
das
xchg
mov
adc
cmp
out
in
rorl
and
and
lds
popa
push
pop
sarl
mov
les
rcrb
dec
std
ficompl
scas
xchg
cmpsl
lahf
jo
jle
cmp
fbld
fwait
dec
daa
and
mov
roll
push
gs
mov
cmpsb
cld
mov
je
je
push
enter
or
push
loopne
push
cmp
lods
pop
jb
outsl
aam
jp
cld
ficompl
or
adc
dec
xor
xchg
pop
pop
insb
jge
xchg
mov
push
fadd
popa
fsubs
mov
xchg
inc
cld
stc
stos
mov
loope
push
sbb
nop
test
mov
jae
mov
movsb
push
mov
int
cs
mov
loop
arpl
lret
jle
inc
adc
ret
loope
sub
cld
cmp
rorb
mov
lods
add
sbb
imul
inc
ja
xchg
or
aas
shlb
jl
xchg
xchg
rcrl
xlat
jb
imul
fstps
daa
nop
fdivrs
lret
dec
int
in
jmp
xchg
enter
out
fsubrs
out
in
nop
mov
jbe
adc
fcoms
mov
xchg
test
mov
push
scas
jg
shrb
bswap
adc
pushf
pop
jl
sub
int3
pop
outsl
and
or
dec
rcrl
inc
ret
adc
mov
int3
jns
loop
jno
xlat
idiv
sbbb
mov
mov
aam
push
stos
pop
fistl
sahf
fucomp
dec
loop
loopne
fs
bound
pushf
and
cmp
nop
fld
mov
or
std
and
ljmp
lar
stc
dec
imul
pop
mov
pop
cmp
in
xchg
dec
jmp
mov
sar
mov
jb
lods
in
loopne
insb
mov
sbb
scas
mov
insl
mov
mov
lea
fwait
pop
push
shlb
es
sub
jns
sub
sbb
or
push
setle
push
mov
push
loop
xorl
movsl
addr16
push
inc
stos
fisubl
pop
dec
sub
pop
lea
push
push
push
mov
inc
and
fwait
jns
daa
lea
scas
imul
xchg
out
push
add
pop
pop
xor
sti
mov
cmp
sbb
ss
sahf
push
test
xchg
int
xor
push
scas
mov
add
cli
mov
adc
outsl
nop
adc
fisttpll
mov
sbb
test
cli
inc
nop
aam
std
and
addr16
cmp
popf
in
xor
or
aad
lods
stos
add
loop
add
push
jle
mov
insl
hlt
cmp
lods
clc
cmp
int3
dec
inc
sub
sub
pop
inc
notl
lods
xor
xchg
cmp
push
loopne
pop
cmp
lods
mov
mov
enter
fnstsw
cmp
sbb
popa
xor
or
push
xor
mov
sub
xor
mov
das
push
ja
aam
jmp
stos
rcll
sub
or
or
movsl
and
bound
je
add
out
out
sbb
testl
fs
iret
pusha
push
xchg
stos
cli
int3
in
push
cmp
or
icebp
scas
dec
rorl
stos
dec
add
insb
jb
test
sub
das
sbb
ljmp
test
cwtl
push
pop
repnz
addr16
in
aad
shlb
sarl
fldcw
cld
iret
lods
iret
rorl
decl
sub
arpl
aaa
sbb
mov
cmp
adc
imul
loop
xchg
repnz
fisubrs
pop
ds
xchg
cmp
testb
push
icebp
adc
movsb
adc
ljmp
es
jle
decb
arpl
cs
xchg
call
stc
outsb
fldt
mov
fistpll
fisubl
push
das
inc
ljmp
push
pop
insb
mov
data16
inc
and
mov
loope
mov
jge
jnp
xchg
popf
int3
push
push
jae
scas
stos
jg
mov
arpl
push
adc
pop
mov
pop
dec
int3
std
hlt
dec
pusha
fdivrp
inc
ffree
mov
mov
js
jle
cwtl
sbb
dec
pop
lahf
popf
shl
cmp
add
nop
call
orb
sub
or
pop
xlat
sub
adc
shll
jno
shrb
loopne
sub
inc
push
dec
xchg
cli
cmp
jecxz
push
dec
lds
imul
movsb
das
mov
push
push
pop
dec
int3
or
mov
lcall
inc
jb
sub
out
data16
mov
push
push
mov
xor
inc
pop
pop
sti
jmp
inc
jbe
neg
std
pmuludq
sub
imul
mov
mov
sbb
imul
js
push
aam
bound
and
inc
jo
mov
mov
pop
xchg
out
outsl
mov
xlat
cmpsb
testl
xor
and
mov
mov
inc
xor
cli
call
inc
leave
paddw
dec
aaa
in
adc
pop
xlat
pop
jno
push
ljmp
loope
sbb
jl
iret
lcall
cwtl
dec
sbb
sbbb
imul
cmpsb
sbb
fstps
aas
pushf
lods
lods
push
mov
jb
xor
jecxz
adc
inc
or
int
loop
test
jns
idivb
pop
jle
xchg
and
fs
in
nop
imul
ret
jbe
mov
inc
and
and
cmp
cmpsl
mov
in
sub
cmp
pop
insb
pop
bnd
sbb
lods
pop
adc
add
ds
mov
sub
aas
nop
rcll
inc
lret
or
push
sub
nop
shlb
lret
out
pop
push
push
xor
xor
inc
fcomip
adc
cmp
sub
in
stos
pop
jno
rcr
push
sub
pushf
fcoml
into
add
add
mov
push
fildl
pop
add
leave
fcomps
clc
xchg
adc
leave
xor
fdivs
sbb
movsl
movsl
sbb
adc
jecxz
das
mov
xor
sbbl
ja
xor
mov
lds
sub
xor
lock
into
mov
enter
cltd
xor
or
in
jne
mov
int3
push
pop
jnp
mov
inc
jp
mov
pop
aas
aad
push
mov
jns
adc
repnz
arpl
bound
and
jns
dec
inc
aad
add
lahf
adc
or
cmp
push
loopne
push
xor
rcr
jg
xchg
mov
sub
xlat
test
leave
inc
call
cmp
sub
repnz
outsb
push
das
aas
mov
loope
xor
sub
mov
adc
push
stos
mov
jne
cmp
es
imul
loope
in
leave
fsts
cmp
cltd
cmp
add
xor
das
shrl
jae
cmc
add
out
sbb
or
jp
mov
sbb
push
jle
cmp
das
adc
in
sbb
add
mov
mov
sbb
add
ja
jmp
cs
add
or
insl
sub
rcll
or
add
repnz
sub
pop
cmp
std
roll
cmp
ds
in
aas
or
fidivl
add
lahf
cmp
sub
push
fwait
sbb
pop
push
aam
jle
adc
das
add
xor
push
lahf
fisttpl
out
dec
sbb
fyl2xp1
outsb
cld
mov
movsb
fstl
sbb
fisubs
mov
call
daa
stos
jb
push
pop
xor
movsl
daa
sub
sub
std
data16
popf
mov
mov
fsubrp
mov
daa
dec
sbb
cmp
std
xchg
repnz
mov
push
inc
mov
cmp
not
cwtl
ljmp
mov
dec
jne
pushf
mov
mov
pop
mov
xor
jl
ret
sarl
shl
sub
sti
dec
lods
sbb
xor
mov
lock
push
popf
cli
sub
lret
out
lea
nop
jg
jle
mov
ljmp
or
mov
and
cwtl
add
pop
stos
mov
adc
sbb
sbb
xchg
data16
fcmove
je
push
stos
sbb
inc
lcall
std
repnz
or
rcrb
sbb
ret
add
mov
std
out
xchg
test
jle
push
fimull
test
push
insb
hlt
sarl
mov
cmp
std
mov
rolb
aam
sbbb
dec
pop
rcrb
xlat
mov
or
cmp
dec
mov
sbb
sahf
test
stos
mov
out
cli
in
hlt
fidivs
loop
sub
shr
int
test
test
cli
dec
sahf
xchg
push
sahf
lahf
adc
xorb
lahf
or
out
lods
push
lret
sub
push
inc
jno
scas
xor
aas
pop
sbb
loope
sbb
rcl
call
adc
ret
fdivl
data16
lock
pop
lea
mov
xchg
and
mulb
lock
loope
fcompl
dec
pop
xor
cs
jmp
jo
jg
fbld
pop
into
sub
fcmovne
xchg
iret
cltd
aas
inc
movb
mov
push
jle
fwait
cmpsb
mov
lea
xor
push
es
insl
outsb
jo
ja
nop
shrb
mov
lcall
subl
cmp
dec
pop
lods
pop
sbb
jne
rclb
xor
sbb
pop
addr16
inc
mov
add
arpl
jecxz
ljmp
es
adc
jnp
stc
call
testb
jne
addr16
sarl
imul
cmp
aaa
out
inc
fistpll
movsl
sub
int3
sub
push
cltd
loop
fucom
cmp
cwtl
jno
lea
mov
aam
pop
cmpl
inc
push
lret
movsl
push
sbb
xchg
sub
push
cli
cmp
pop
pop
shlb
adc
lods
insl
test
mov
arpl
call
lods
inc
sub
pop
jmp
sbbl
mov
push
jae
add
in
ja,pt
dec
xor
xor
pop
mov
push
aas
and
jg
adc
inc
sahf
sbb
je
mov
adc
je
rolb
inc
push
in
repnz
test
shrl
mov
popf
pop
fcmove
popa
mov
push
js
fsts
and
jl
sbb
lret
movsl
xchg
repz
and
dec
rol
aam
loope
lahf
pop
rorb
scas
inc
mov
or
mov
jns
cmp
jno
outsb
xchg
aas
mov
mov
add
mov
xchg
mov
cmp
div
jge
push
aas
stos
das
inc
lds
shr
pop
or
out
inc
and
push
and
xchg
clc
and
pop
xlat
cmp
adc
test
imul
mov
mov
and
pop
adc
mov
inc
cmp
mov
adc
jbe
sub
dec
decl
hlt
lret
mov
ret
mov
xor
mov
repnz
leave
out
add
push
loopne
xor
jb
mov
lea
dec
pop
scas
incb
inc
filds
push
iret
pop
jl
push
adc
dec
sbb
cmp
sub
imul
fcompl
xchg
inc
out
dec
test
cli
sub
sub
ffreep
jg
loopne
hlt
lds
mov
jbe
rolb
fistpll
pop
sbb
inc
in
pop
add
cmpb
mov
jl
stc
cmp
sti
jbe
movsl
sub
in
bound
sub
sbbb
cltd
jl
push
push
adcb
fmull
xor
sbb
inc
icebp
add
cs
push
pop
add
fwait
daa
fstpl
push
nop
loopne
nop
dec
sbb
mov
ljmp
scas
fsubrl
dec
cmp
ljmp
mov
xchg
std
imul
push
jecxz
pop
sbb
xlat
dec
mov
int
pop
fwait
xlat
pop
inc
imul
mov
or
adc
roll
pop
xchg
xchg
jle
scas
repz
add
xor
dec
or
cwtl
loop
xor
push
add
shl
mov
pop
nopl
adc
fst
sbb
cmp
cmpsl
jb
inc
xor
or
pop
mov
addb
xor
test
mov
cmp
dec
or
inc
mov
push
outsl
xchg
pop
mov
rolb
pop
jl
je
jle
xchg
addl
and
sub
loopne
int3
and
into
ret
lods
fisttpl
or
cmpsb
pop
push
xchg
das
dec
jno
inc
push
add
dec
mov
ds
sub
shll
inc
sbb
fadds
scas
jae
test
pop
ss
mov
add
cwtl
xor
cmp
xchg
push
sbb
and
mov
xchg
decb
sbb
add
sbb
loopne
cs
xchg
xor
cmpsl
test
sbb
sti
and
mov
jge
js
cmpsl
pushl
loopne
dec
push
ja
xchg
test
rcll
cmc
lds
mov
in
push
push
pushf
lea
test
hlt
pop
mull
push
and
scas
mov
push
pusha
pushf
xchg
jne
sbb
adc
shll
pop
push
mov
sti
arpl
push
repnz
mov
jp
lret
xor
xchg
jne
mov
xchg
sub
movsl
xchg
push
imul
mov
dec
cmc
push
fcompl
and
arpl
rcr
pop
rcr
mov
jle
xor
test
mov
lods
clc
ret
jmp
repz
push
pushf
fwait
sub
icebp
and
jg
pop
jae
sbb
sbb
dec
adc
cmp
adc
mov
test
xchg
and
xor
outsb
xor
ljmp
test
xlat
fwait
mov
arpl
sbb
and
arpl
cli
pop
pop
int3
jecxz
sub
jne
inc
dec
int
mov
adc
es
rorb
les
cltd
add
cmp
pop
sbb
rcrb
xor
xor
dec
scas
es
mov
push
scas
popf
movsb
imull
mov
outsl
dec
adcb
or
pop
push
int3
mov
arpl
mov
loop
mov
mov
fwait
in
inc
push
cmp
add
push
into
cmp
adc
test
mov
inc
xorps
xchg
xchg
std
mov
pop
jmp
stos
in
mov
flds
dec
sub
mov
test
jecxz
push
jp
mov
inc
cli
fwait
test
or
lock
insl
pop
bswap
or
fdivrs
outsb
pop
adc
pop
mov
fnstenv
jle
shll
sub
std
dec
and
xor
add
pop
jnp
jge
ja
cmpb
sub
lcall
push
cmp
insb
movsb
div
icebp
dec
push
fucomi
mov
outsl
ss
in
rorb
ret
or
sbb
and
jmp
adc
test
fldl
push
cmp
fs
sub
xorb
and
bound
inc
shrl
cwtl
add
cmpsb
cmp
mov
fstpl
daa
push
xchg
push
push
dec
cs
out
in
adc
or
adc
lock
adc
cmp
pop
pop
movsb
sti
mov
add
pop
mov
ret
xchg
loopne
adc
mov
aas
inc
mov
sub
movsl
clc
mov
push
leave
ja
sbb
movsl
mov
adc
or
xchg
add
test
mov
cld
int3
add
stos
mov
orl
in
ljmp
push
xor
les
mov
pushf
loop
jle
and
fsubrs
ja
jae
daa
dec
pop
sahf
sub
or
mov
cs
lret
stos
mov
pop
sub
jns
int
adc
jmp
jmp
ss
out
pop
xchg
sub
sub
cmpsb
lods
shlb
or
insb
int3
inc
leave
jp
movsb
pop
gs
popa
mov
sbb
mov
lods
mov
mov
sti
incb
sbb
dec
push
ret
push
push
add
ret
pop
inc
ret
jmp
cmp
fldl
mov
add
push
mov
clc
inc
push
sub
push
or
xor
push
scas
int3
mov
mov
out
pop
sub
dec
loope
cli
mov
das
xchg
fistl
mov
fisubl
fimull
repz
xor
jae
cmc
les
mov
jne
sbb
sbb
int
jb
or
push
lcall
mov
movsb
pop
adc
lods
inc
outsb
pushl
jecxz
sbb
push
fadds
aas
xchg
jle
add
xor
and
mov
aaa
jge
jne
adc
jecxz
lret
into
mov
mov
xchg
sbb
cmp
movsl
test
pop
jo
addr16
nop
jecxz
mov
lret
stos
ja
xor
mov
pop
sub
xor
stos
push
and
pop
lahf
jmp
fdivp
push
pop
xor
imul
scas
hlt
loopne
pop
frstor
cwtl
sub
cmpl
fstl
nop
xchg
ret
jne
lock
sub
ret
insl
mov
mov
jg
adc
adc
jp
cmp
pusha
popf
repnz
lock
cmp
mov
in
sub
mov
stos
sbb
adc
bound
xchg
inc
add
sbb
mov
add
je
cmp
xor
nop
xchg
adc
mov
subb
jb
mov
and
push
xchg
inc
jg
xor
jbe
dec
push
add
and
imul
int
push
out
fstl
xor
and
sbb
dec
mov
js
inc
and
popf
xchg
icebp
movsb
xchg
cmpsl
pop
aad
push
dec
loopne
imul
loopne
mov
dec
mov
sbb
mov
sbb
push
push
jmp
nop
ret
cmp
dec
inc
jmp
call
pushf
xchg
mov
ret
enter
inc
mov
jge
loop
mov
subl
leave
iret
jmp
cmpsb
loop
cmp
lahf
sarl
mov
std
cmpsl
lds
inc
stos
push
lea
push
lock
dec
add
shlb
push
iret
sub
stos
dec
mov
mov
xlat
xchg
pop
clc
pop
fwait
lcall
lods
cltd
cmp
cs
inc
ss
xor
or
dec
cmp
xchg
mov
pop
call
fcompl
insb
mov
je
push
dec
adcb
pop
pop
or
mov
and
cmpsl
clc
test
push
push
sub
mov
fistl
cmp
adc
and
stos
ficoml
or
in
in
or
aas
push
jnp
addr16
test
fcoml
cmp
fcom
rorb
push
outsl
mulb
cmp
pop
stos
xor
sub
adc
jl
cli
mov
sbb
out
xor
sbb
lret
imul
xchg
scas
ja
call
scas
mov
stos
int
mov
ret
out
mov
sar
push
mov
cs
dec
mov
nop
insb
xchg
jge
jp
stos
dec
mov
and
push
mov
push
in
pop
cmp
ds
jno
xchg
mov
out
mov
clc
orl
xor
enter
or
sar
sub
adc
mov
jl
push
mov
jmp
aam
in
shrb
jl
sahf
int
stos
std
add
push
das
mov
mov
push
stos
xor
loop
popa
sub
pop
pop
aaa
ret
push
outsb
movsl
add
int
mov
mov
mov
xor
gs
stos
mov
sarb
mov
out
dec
ds
push
aaa
ret
inc
int3
je
frstor
pop
pop
sbb
leave
sub
and
ret
jbe
mov
xchg
jle
repnz
stos
inc
lods
xor
jo
push
sub
sub
jle
scas
sub
pop
not
dec
ds
sbb
orl
jmp
inc
add
enter
sub
adc
sahf
dec
out
xchg
mov
adc
icebp
adc
dec
js
arpl
hlt
sti
outsl
out
mov
xor
repz
mov
jg
and
or
inc
hlt
adc
cld
push
movsb
mov
mov
es
into
lret
nop
dec
push
cmp
cmp
sbb
xlat
imul
xlat
cmpsl
fidivs
or
pop
add
aas
fdivs
sub
or
mov
sub
add
arpl
jle
sbb
sbb
push
adc
gs
xchg
inc
dec
bound
addr16
jge
and
push
es
pop
dec
test
jecxz
test
adc
jg
enter
mov
ffreep
xchg
pop
sar
pop
mov
decb
jb
ja
rcll
ja
adc
pop
movsl
jns
dec
xor
and
int3
cltd
adc
cmp
sbb
loopne
fdivl
cmp
adc
inc
push
loopne
adc
cmp
mov
jne
inc
sub
stc
imul
jbe
cmpsb
out
pop
orb
xor
sub
scas
add
and
lods
and
loop
inc
jno
les
rorl
mov
bound
mov
xor
or
pop
imul
sbb
inc
aam
pushf
enter
hlt
sub
shl
dec
xchg
cltd
mov
add
xchg
ret
adc
scas
aad
and
int3
mov
pop
gs
out
mov
push
cmp
orl
mov
jno
lret
movsb
sbb
roll
je
sbb
jb
pop
fdivrs
int3
sub
mov
gs
inc
cmp
jbe
inc
xor
movsl
push
movsl
adc
pcmpeqw
mov
xchg
mov
add
sub
mov
jmp
dec
aaa
dec
aam
repnz
or
leave
rolb
int3
xor
outsb
lea
mov
sbb
adc
inc
pop
insl
push
pop
outsl
sbb
aad
inc
movsb
inc
inc
fstpl
mov
arpl
sbb
jg
inc
std
rorb
orb
xchg
add
and
inc
iret
xchg
sbb
enter
add
sub
test
jno
push
push
sub
arpl
jl
stos
scas
cmc
scas
fildll
daa
dec
lock
outsb
pop
push
pop
ret
dec
int
ret
fstps
or
stc
cli
punpcklwd
lcall
stos
fcomps
scas
orb
add
xlat
nop
push
stos
movsb
inc
mov
subw
push
mov
pop
pop
aad
and
inc
mov
cmp
jmp
dec
mov
dec
cmpsl
mov
movsb
rcrb
add
scas
orl
mov
test
push
daa
sub
sbbb
push
clc
cmp
ds
or
push
pop
cmp
leave
cltd
fs
inc
push
pusha
sub
inc
adc
sbb
gs
arpl
lock
les
xor
dec
aas
cmp
inc
adc
or
fwait
nop
ja
dec
lahf
or
gs
jecxz
je
dec
dec
sub
inc
es
addr16
pop
loopne
push
lcall
xor
repnz
jmp
test
sub
sahf
adc
js
int3
outsb
mov
fisubs
lods
mov
push
cmp
insb
and
pop
jg
xor
mov
adc
jge
mov
and
mov
push
leave
push
push
cwtl
inc
jo
xlat
dec
sub
dec
mov
push
sub
and
dec
or
shll
sbb
dec
xchg
add
and
xor
shrb
push
jns
in
or
push
lds
mov
or
mov
dec
shll
nop
daa
addr16
mov
cmp
jp
js
inc
fisubl
adc
push
or
mov
sarb
push
icebp
sbb
mov
mov
push
int3
inc
sbb
inc
iret
or
ja
cmp
xchg
lret
cmp
and
sahf
jp
js
mov
lcall
and
lret
nop
pop
repnz
mov
push
add
rorl
push
lret
xor
lea
popa
dec
push
sti
lea
mov
pop
push
adc
push
sbb
cmp
and
aaa
jne
out
sbb
add
jnp
lock
stos
in
jo
outsl
mov
adcb
inc
push
dec
nop
mov
push
or
xor
outsb
mov
inc
mov
mov
inc
pop
and
dec
push
int3
call
scas
fdivl
insl
and
push
sbb
jg
xchg
xchg
cvtps2pd
sarl
imul
mov
sbb
stc
stc
repz
repz
lock
test
popa
sbb
cmc
jbe
adc
aam
iret
nop
dec
cld
push
jae
popf
or
and
xchg
jbe
pop
mov
mov
xor
or
dec
fildl
movsb
jo
and
popf
loop
cltd
loop
shl
sti
dec
cmp
cmpsl
dec
cmpsb
ja
push
sbb
jge
loopne
hlt
fiadds
insl
cmp
dec
das
in
adc
and
push
movsb
sbb
mov
jecxz
jmp
sub
xchg
movl
add
mov
insl
sbb
sti
cmp
push
lret
mov
push
jmp
hlt
mov
cmp
clc
cld
or
and
rdtsc
mov
push
lret
mov
xchg
inc
das
dec
cli
sarl
mov
xchg
mov
dec
fmull
outsl
orl
or
xor
movsb
push
push
jecxz
mov
rcr
add
mov
int3
dec
popf
adcl
stos
push
nop
out
cwtl
adc
inc
xchg
stos
faddl
in
pop
push
xchg
nop
je
int
push
fsub
fnstsw
sbb
mov
or
xor
daa
cwtl
fmul
mov
xor
js
pushl
sbb
pop
inc
pop
mov
js
andb
fiadds
lock
aaa
adc
dec
xlat
adc
insb
inc
outsl
jns
jnp
data16
dec
and
xchg
dec
add
pop
sbb
scas
mov
inc
pop
mov
lcall
mov
popf
loopne
add
cmp
mov
jbe
fs
add
cmpsb
and
mov
out
xor
cmp
daa
and
jno
lea
push
arpl
jl
xchg
mov
imul
cld
out
xor
call
jo
jne
mov
lahf
sub
xchg
arpl
or
or
bound
adc
popa
gs
pushf
sbb
sub
xor
xchg
add
pop
ljmp
cmpsl
push
xor
lret
mov
xchg
push
push
jne
mov
push
pop
mov
jo
pusha
mov
inc
mov
out
mov
ja
cli
inc
pop
mov
mov
nop
sbb
inc
push
ja
int3
addr16
setnp
out
popa
aad
sub
out
fsubl
fimuls
push
sbb
fstps
loopne
roll
out
pop
push
jge
push
sbb
push
lcall
or
dec
in
dec
mov
cs
xlat
out
cmp
in
jbe
psadbw
dec
mov
mov
ret
repnz
movsl
adc
add
jg
inc
cld
add
push
xchg
daa
push
dec
sbb
mov
pop
jl
xor
xchg
add
sbb
out
stos
bound
decb
std
and
pop
mov
jbe
outsb
sbb
hlt
inc
cltd
adc
mov
inc
inc
mov
lcall
jl
cli
lea
cmp
or
test
fs
mov
push
adc
add
sub
and
xlat
xor
jg
cwtl
xor
out
cmp
and
scas
push
mov
xchg
sbb
pop
aas
cwtl
push
repz
jnp
adc
sub
stos
xchg
mov
imul
pushf
test
imul
imul
xchg
cmp
fwait
sbb
mov
mov
cmp
scas
cmpsb
in
pop
inc
jmp
ja
aaa
and
dec
stc
mov
lods
mov
add
rcr
push
mov
int
fmull
cwtl
lock
rolb
push
inc
cli
int3
test
fisubrl
ffree
dec
pop
out
or
push
inc
scas
fucomp
jbe
adc
inc
loop
aas
movsl
pop
inc
in
popl
jae
lahf
les
test
sbb
cmp
repnz
jl
adc
mov
daa
mov
inc
out
or
mov
and
sub
imul
outsl
push
adc
mov
fidivrl
cwtl
adc
int3
push
cmp
addr16
enter
xor
sub
fisubrl
add
outsb
mov
bound
sahf
imul
scas
sub
movsl
sti
fisubl
hlt
dec
fnstenv
fstl
inc
scas
cmp
xorl
jge
mov
xchg
popf
mov
je
std
aad
leave
mov
out
add
xchg
add
out
out
stc
hlt
or
loop
stc
cmp
dec
push
pop
pusha
cwtl
lcall
movsl
adc
dec
lcall
add
lds
in
push
sub
leave
mov
mov
fwait
pop
xorb
jp
xor
inc
outsl
imul
fcomi
xchg
push
outsb
shl
inc
or
in
mov
jmp
push
orb
js
pop
xchg
add
pop
lods
popa
fwait
sbb
nop
and
repz
loop
pop
cmp
ret
nop
enter
mov
dec
jmp
mov
xlat
sarb
sub
inc
xchg
sahf
mov
jl
pop
push
push
inc
or
daa
jp
in
sub
mov
aad
lahf
sbb
pop
das
movsb
ret
fwait
sub
pop
pop
sbb
jle
pop
jg
shll
inc
mul
loopne
and
xchg
sarl
fstpl
xlat
scas
stc
test
ret
and
mov
cmp
pop
xor
pop
push
jmp
mov
movsl
inc
xor
loopne
and
hlt
sbb
movsb
cltd
cmpsl
sarl
fsubrl
leave
pusha
sub
arpl
cmp
and
mov
aas
lret
mov
xchg
or
testl
fisubrs
pop
mov
inc
mov
and
out
sub
ret
test
shl
shlb
loop
in
dec
push
loop
out
ljmp
divl
jno
sbb
popa
adc
mov
lret
sbb
pushf
sahf
sub
mov
mov
fcmovbe
shrb
push
loopne
cli
mov
xor
in
in
jb
jns
rol
add
das
sbb
data16
subb
jl
andl
jnp
sub
jmp
sbb
pop
cli
mov
mov
cwtl
jmp
xor
inc
mov
xor
mov
xchg
xchg
dec
push
adc
cwtl
sbb
cmp
dec
aaa
popa
loopne
loop
xor
in
leave
adc
fcmovne
xor
xchg
pop
fiadds
aam
mov
pop
jo
jl
dec
inc
outsl
ret
dec
pop
les
rcl
fidivl
iret
xchg
mov
dec
mov
call
mov
jecxz
adc
stc
mov
dec
and
push
push
mov
jecxz
je
inc
data16
inc
pop
cs
aam
inc
insb
mov
jo
mov
out
mov
or
lretw
arpl
jnp
sub
jne
xchg
add
dec
out
dec
mov
int3
lahf
adc
sub
pop
gs
cmpsl
xor
push
je
aad
popa
int3
inc
jl
bound
sub
addr16
cmp
repz
xchg
mov
add
push
ss
inc
mov
jae
lock
lret
cmp
cmpsl
adc
js
mov
int3
mov
cmp
out
imul
add
ret
inc
push
cltd
les
xchg
into
rorb
pop
mov
mov
fsts
fimull
mov
mov
push
cs
aas
or
fstpl
mov
xor
xor
mov
or
pop
mov
fsub
xchg
loop
mov
clc
fstpl
mov
or
in
mov
jae
iret
mov
sbb
push
pop
mov
pop
cmpsl
sbb
leave
popf
cmpsl
lcall
cmpsb
mov
jbe
stos
cmp
and
fcomps
shlb
arpl
mov
bound
mov
and
imul
scas
pop
in
rcll
add
fsubs
filds
clc
xor
jl
decl
xorb
je
sub
xor
js
sti
jge
mov
lcall
scas
test
jg
mov
xchg
or
mov
mov
cmp
sub
jns
enter
pushf
bound
addr16
jge
int
outsl
jp
das
mov
scas
mov
add
sub
cs
inc
std
je
inc
loop
aas
cmp
mov
out
dec
or
int3
mov
int3
mov
dec
push
jecxz
ret
lods
fldcw
push
inc
xchg
sbb
scas
cli
in
in
ret
or
out
jns
lret
sbb
or
sub
xchg
call
pop
stos
add
mov
insb
cmc
sbb
out
addl
mov
sbb
mov
cmp
sbb
push
pop
sbb
lock
outsb
addr16
or
inc
push
mulb
ja
inc
scas
jb
imul
sahf
iret
push
mov
aam
dec
into
lock
xchg
xor
add
add
mov
mov
add
inc
sub
xorb
into
in
addr16
test
lahf
int
jge
mov
mov
popa
mov
add
mov
mov
jne
in
add
pop
bswap
inc
cmp
mov
nop
les
mov
fistpll
mov
popf
dec
mov
mov
sahf
aaa
mov
scas
icebp
enter
in
mov
ja
test
jnp
dec
repz
xchg
test
das
js
and
push
add
cld
mov
sti
stos
cld
inc
pusha
sbb
dec
jmp
xor
pop
pop
add
jmp
shll
cld
and
jo
jg
ret
mov
add
clc
mov
jns
aas
mov
cli
cwtl
cmp
push
mov
mov
mov
insl
sbb
sub
out
shr
and
add
in
lods
je
test
and
out
gs
jnp
fwait
push
mov
loop
ss
shlb
out
sbbb
movsl
inc
cmc
pop
mov
mov
lret
dec
sbb
or
jmp
lret
jl
les
push
push
jp
test
iret
ljmp
imul
fstpt
xor
pop
sti
or
js
inc
xchg
cmpsl
nop
xlat
adc
inc
cmpsb
jnp
or
arpl
push
rolb
pushl
sub
cmc
adc
cwtl
aad
xchg
fcmovnu
mov
sbb
pop
lahf
cmp
pop
dec
inc
addr16
int3
mov
and
pop
fnstenv
cmp
cmc
jle
mov
pop
xor
loope
int
mov
in
outsl
xchg
inc
jo
lret
pop
stc
jle
or
xor
fistpll
inc
sub
out
insb
push
add
sub
add
inc
icebp
mov
push
pop
lds
xchg
jmp
insb
cltd
xor
pop
push
mov
jge
dec
sub
imul
push
rclb
dec
shlb
sub
pop
mov
mov
outsb
ss
ds
cmc
rclb
or
or
faddl
cmpsb
jl
imul
push
sub
psubw
sti
adc
sub
xor
sub
xchg
insl
sti
fistps
clc
fmul
je
dec
cmpsl
aam
push
fs
or
jge
mov
mov
pop
scas
lods
leave
cmpsl
std
add
lret
stc
add
or
mov
sbb
push
lods
pop
xchg
add
mov
jmp
roll
leave
mov
je
std
inc
xchg
or
adc
mov
push
mov
lret
cmpsb
in
sbb
push
jnp
pop
mov
pop
out
movsb
mov
or
mov
and
iret
int
popf
lahf
add
cmpsl
dec
mov
xchg
cwtl
inc
xor
cltd
push
daa
in
jp
xchg
mov
mov
scas
in
pop
push
mov
sbb
lods
jnp
insb
shrb
mov
cmc
rol
push
mov
in
mov
or
push
test
mov
rorl
pop
icebp
in
int3
outsl
je
jb
lret
daa
xchg
cld
push
cmpsl
cmp
bound
mov
inc
push
aad
jge
mov
push
pop
clc
cmpsb
scas
add
out
rcll
mov
xchg
int3
mov
nop
shlb
adc
pop
lods
xor
cmp
jae
arpl
loope
pop
imul
inc
dec
ja
xor
pop
inc
and
out
mov
or
sbb
mov
push
jns
and
inc
mov
add
aam
lods
repz
xchg
inc
ret
sub
lret
adc
jno
add
xor
add
add
pop
decb
sti
mov
hlt
repnz
push
notb
cltd
jmp
int3
mov
int
dec
inc
xchg
or
repnz
lock
enter
push
sar
fsts
pop
and
ds
sahf
pop
mov
mov
clc
mov
adc
mov
inc
pushaw
xor
adc
sub
movl
and
mov
sti
fistps
xor
mov
loope
pop
push
imul
pop
fisubs
cltd
testl
repnz
call
push
push
sbb
add
pop
pop
cs
fisttpl
sub
inc
mov
mov
push
lea
push
adc
test
push
lea
popa
lea
sub
mov
jmp
pop
test
nop
cld
negl
lret
cld
add
es
sbb
jno
inc
test
aas
out
mov
cmpsb
ss
sarb
pop
out
mov
ret
lock
pop
pop
jecxz
in
outsb
and
mov
insl
dec
pop
push
hlt
and
pushf
in
mov
jmp
pop
ret
jg
dec
pop
mov
cmp
pop
mov
pop
pop
lods
js
sub
test
adc
sbb
aam
loope
pop
and
cld
dec
xor
dec
sub
test
aam
inc
es
test
or
or
cwtl
mov
mulb
and
adc
mov
push
push
cmp
jae
iret
lcall
inc
mov
sbb
adc
pop
cmpsb
sbb
sub
and
hlt
out
rcr
rcrb
lods
out
daa
sub
cli
fs
jmp
dec
cmp
sub
cmpl
mov
insb
jge
jns
add
push
cmc
loop
bound
adc
xor
lret
les
subl
xchg
add
pop
clc
loopne
stos
repz
enter
sti
or
adc
sbb
xchg
add
dec
add
dec
add
push
sub
aad
test
push
in
xchg
adc
and
jbe
push
mov
or
dec
rcrb
test
cmpsl
lahf
jns
mov
sub
ret
loop
cli
loop
sub
je
add
sbbb
das
ret
sub
into
jo
pop
dec
mulb
xchg
xor
lcall
add
push
insb
cmp
push
not
bound
jne
xchg
pushf
pusha
fists
jmp
and
push
addr16
js
mov
mov
mov
je
cli
pop
rcll
xor
sub
icebp
xchg
push
sub
lcall
or
cld
push
jae
lds
popa
jle
add
pop
das
jle
loope
call
jecxz
adc
rcr
xor
xchg
into
push
std
js
inc
jno
dec
in
cmc
test
into
mov
adc
faddl
nop
adc
push
xchg
sbb
dec
jnp
or
sub
xchg
lret
mov
jnp
dec
sbb
xor
cli
das
call
rorl
fimuls
and
insl
fistps
lcall
jns
mov
dec
insb
into
fwait
in
mov
jne
int
dec
xlat
dec
sbb
pusha
outsl
jge
sar
mov
xor
scas
cwtl
icebp
enter
sub
enter
sub
stos
mov
cmp
repz
sbb
outsl
dec
lcall
fdivrs
roll
mov
cmpsb
dec
inc
out
cltd
jg
je
mov
adc
pop
xor
dec
sahf
jl
aaa
and
es
pop
xchg
and
mov
sbb
push
push
fildll
inc
jns
outsl
stos
pop
dec
jmp
xchg
add
and
add
and
loopne
jns
inc
adc
popa
add
imul
mov
mov
pop
jo
pop
fadds
pop
cli
stos
jl
ljmp
popf
and
aas
jmp
dec
jnp
dec
mov
cmp
sahf
mov
mov
fmul
cli
movq
rorb
and
push
xor
cmc
mov
shll
sub
mov
or
daa
ljmp
or
cmpsl
pop
push
adc
pop
pop
adc
loopne
xchg
xchg
out
lret
stos
or
xchg
inc
dec
test
push
mov
adc
inc
pusha
flds
inc
pop
mov
pop
stc
pop
mov
ja
lods
notl
pop
push
dec
cmpsb
or
ljmp
js
dec
out
popa
shrb
in
insb
mov
add
mov
or
mov
loopne
shlb
aas
cli
push
mov
scas
into
jecxz
and
dec
enter
adc
nop
xor
das
imul
fisttps
mov
or
aam
arpl
mov
mov
aaa
sbbb
aam
and
mov
loope
jo
inc
pop
repz
mov
mov
sbb
xchg
sahf
gs
or
movsb
pop
dec
aam
test
xor
lret
sbb
pop
lea
std
sub
lods
js
cmp
arpl
pop
addr16
xor
dec
add
cmp
outsw
rcrb
test
inc
cwtl
cli
addb
lds
ss
push
addr16
sbb
mov
sarb
aaa
dec
xchg
cli
cmc
ficoml
icebp
and
jno
inc
lea
daa
or
xor
imul
mov
mov
xlat
or
jge
cmp
or
or
neg
inc
int
sbb
jmp
xchg
xor
insb
dec
dec
shll
mov
xor
jecxz
pusha
imul
mov
leave
mov
fildll
add
rcll
gs
lret
xchg
popa
ret
jo
adc
inc
rcrb
das
out
sbb
dec
jnp
sub
pop
push
je
mov
imul
dec
int3
mov
dec
mov
jbe
mov
int
jb
daa
mov
dec
mull
test
xchg
stos
push
daa
pop
fdivl
repnz
cmpsl
les
test
cmc
adc
andl
cmp
aad
inc
inc
push
insl
mov
mov
out
divl
pop
and
jp
inc
cmp
sbb
jge
mov
add
cmp
xor
fs
imul
js
rol
ja
hlt
sbb
ds
xlat
jns
mov
adcb
sub
sub
popa
mov
stos
jb
cli
fdivrs
push
icebp
inc
and
xor
or
gs
fsubs
repz
fcmovne
xor
inc
or
dec
iret
test
insl
jp
aam
pop
dec
movsbl
or
sbb
inc
repnz
mov
add
int
xchg
mov
push
andb
loopne
sbb
cmc
mov
push
add
ds
push
jne
fists
sub
adc
stos
mov
rorb
lods
mov
jb
scas
and
js
dec
leave
jle
out
lds
aad
mov
orb
jle
leave
or
adc
data16
mov
or
sbb
push
sbb
push
in
lods
mov
lahf
fs
mov
mov
inc
and
std
hlt
xor
out
in
into
add
cmp
out
cmp
inc
dec
in
jb
lea
push
adcb
mov
and
xor
pop
sbb
loope
into
lahf
pop
ret
inc
out
ret
sbbl
cmc
push
cmp
loopne
jmp
xor
and
enter
lock
mov
cmp
ret
sbb
mul
mov
cmp
xchg
sub
pop
in
cmpsb
mov
push
pop
push
cltd
bound
in
xchg
int
ja
lds
mov
jecxz
push
in
push
out
fs
sub
and
adc
dec
cs
xchg
jns
mov
add
mov
pop
cmc
sbb
nop
mov
inc
jae
jmp
sub
mov
pop
push
cltd
sub
in
inc
loop
stos
fs
xchg
mov
and
xorl
inc
lods
add
mov
out
push
or
dec
pop
stc
test
mov
notl
and
inc
scas
cmpsb
push
ret
push
cltd
push
jg
adc
rorb
inc
adc
in
ficomps
aaa
xchg
push
outsb
dec
out
adc
stos
rclb
cmp
addr16
ret
arpl
aaa
mov
add
test
cmpsb
ret
add
mov
inc
push
fwait
push
mov
push
sub
jbe
mov
adc
inc
and
js
nop
push
lahf
xchg
xchg
clc
jns
mov
and
leave
inc
sti
xchg
movsb
pop
xor
fmul
mov
cld
jmp
jne
xchg
push
mov
mov
outsl
push
jne
lahf
cmp
fsubrs
test
pop
out
repz
das
repnz
ret
mov
dec
ret
xor
test
dec
mov
jno
mov
rclb
or
mov
pop
gs
iret
fldl
ret
iret
or
pusha
ret
inc
lret
dec
daa
or
clc
pusha
or
movsl
sahf
into
lds
cld
jnp
subl
shlb
cmp
push
and
xchg
aad
fsubrl
xchg
and
adc
lcall
iret
fwait
inc
xchg
push
into
mov
add
rolb
mov
aas
jno
sti
mov
out
pushf
subl
cs
push
pusha
push
adc
sub
ret
icebp
ret
jnp
sub
out
das
inc
out
jl
sbb
lods
mov
imul
dec
dec
dec
mov
mov
pop
cmp
idivl
mov
add
outsl
pop
lods
jbe
push
xor
lahf
sbb
cmpsb
xor
out
fldl
sub
test
and
mov
lret
bound
or
shrl
cltd
add
repz
test
lret
add
mov
sub
jg
ret
xchg
pop
mov
mov
and
add
jl
popa
loopne
cmpb
xor
sub
push
inc
in
fldcw
mov
push
mov
ffreep
addr16
in
mov
sti
lds
mov
mov
dec
sub
sbb
jae
test
gs
in
imul
dec
cs
or
mov
rol
mov
sbb
sbb
add
jns
popf
imul
xchg
sbbl
cmc
jnp
rclb
nop
inc
or
lcall
scas
mov
ds
lods
cmpsb
adc
jno
fcomps
add
mov
inc
dec
loope
fiaddl
dec
dec
xchg
dec
outsb
inc
xchg
jno
fidivrs
dec
pop
adcb
call
int
movq
popa
in
sub
repnz
mov
mov
fbstp
dec
jo
aas
adc
icebp
insb
int3
int3
es
push
mov
fs
push
aad
push
xchg
cmp
test
imul
jae
pop
push
jl
dec
adcb
mov
shll
sbb
shrb
adc
rorl
inc
ret
aas
jno
scas
lea
pop
ret
mov
lcall
pop
mov
add
pop
or
pop
fsubrp
hlt
and
popa
jno
fsubrp
aad
push
mov
sbb
nop
outsl
fimuls
dec
dec
adc
in
cli
sbb
stos
mov
jbe
pop
ficomps
es
xor
pop
ret
jo
out
scas
jae
mov
iret
inc
xchg
push
or
ror
pop
stos
in
das
repz
xchg
xor
pop
xor
loopne
cltd
mov
jne
xchg
lods
add
movsb
ret
push
insl
enter
xor
aas
daa
pause
shr
mov
inc
xchg
add
es
jb
imull
mov
mov
cli
rcl
push
ljmp
movl
mov
mov
in
insl
mov
dec
lock
push
fdivp
dec
mov
push
stc
lret
loope
or
cmp
cmp
jle
xor
loopne
cmp
and
inc
ret
mov
enter
or
mov
dec
into
push
ss
jmp
xor
adc
jge
inc
cwtl
cmp
jnp
inc
xor
add
push
fcompl
adc
mov
shl
mov
fiadds
pop
fwait
xor
cltd
testl
out
xor
dec
fs
les
and
cli
mov
mov
push
push
xchg
pop
jecxz
jle
nop
loopne
adc
cltd
mov
mov
aam
cmpb
sub
adc
popl
neg
popa
das
and
add
testb
fsubl
insl
cmc
pop
arpl
push
int3
cmp
push
lcall
mov
or
call
iret
push
pop
sub
ljmp
scas
mov
pop
cmp
ljmp
leave
cmpsb
fs
mov
insb
hlt
gs
cli
push
dec
sub
fidivl
andb
rolb
stc
xor
ret
push
test
fstl
and
loope
scas
iret
xorb
or
aam
fs
stos
or
fisttpll
fdiv
aaa
add
dec
sbb
popa
rcll
popa
mov
jecxz
std
inc
lds
mov
cld
call
repnz
addr16
jmp
pusha
fimull
out
xchg
movsl
shl
into
xor
and
xchg
jnp
imul
inc
sbb
dec
sti
add
icebp
ret
push
jnp
lahf
das
pop
sbb
inc
arpl
push
mov
fs
adc
into
xchg
or
cmpsb
fidivs
pushf
mov
add
xor
mov
push
add
dec
fs
int
sub
lcall
jns
lret
into
mov
enter
pop
cmpsl
cmp
xchg
je
jbe
cmc
mov
pop
lret
inc
je
nop
jp
inc
out
rcrl
pop
lahf
or
sub
test
subb
sarb
fsubs
lods
loop
aas
cmp
insl
pop
pop
xor
add
mov
enter
shl
std
dec
arpl
adc
adc
jmp
sub
and
in
cmp
outsl
add
and
jle
mov
xchg
clc
inc
cmp
jno
mov
sbb
inc
mov
mov
imul
subb
aas
or
or
imull
pop
sub
popf
dec
push
clc
pop
stos
push
cmpsb
dec
fidivrl
or
popa
jne
pop
xlat
sbb
int3
mov
sbb
enter
pushf
adc
aam
cmp
int
mov
xorb
aaa
jmp
push
dec
std
push
inc
jbe
cld
fldt
mov
fldenv
lea
movsl
js
mov
test
and
lods
dec
jb
das
add
addb
pop
mov
mov
push
push
xor
and
sub
inc
jb
cmp
cwtl
add
popf
push
call
stc
outsl
stos
inc
scas
test
mov
fld
or
cmp
mov
lret
rolb
dec
lret
arpl
cmp
adc
stos
aas
sahf
jmp
mov
inc
or
jo
lock
dec
mov
cmp
jno
sahf
int3
adc
enter
mov
pop
xor
cwtl
lcall
cmp
cld
inc
movsl
xchg
in
je
fisttpl
xchg
fs
mov
jnp
lock
imul
push
push
mov
std
jno
mov
sbb
xchg
cmp
divl
mov
insl
outsl
xor
test
pop
sub
lods
test
in
mov
repz
loopne
popa
sbb
jns
rcr
lods
pop
flds
push
fsts
and
mov
mov
movsl
and
ja
sub
dec
shlb
and
stos
cli
jp
data16
enter
addl
sub
xor
fiaddl
pop
mov
sub
push
out
sub
pop
pop
cmc
loop
jo
pop
imul
pushf
lret
dec
js
jno
fsubrp
mov
pop
mov
inc
pop
or
sbb
mov
pop
cltd
mov
mov
outsb
cmpsb
dec
xchg
jb
mov
add
loop
inc
fwait
mov
xor
mov
jecxz
addr16
lds
and
leave
push
dec
mov
arpl
mov
mov
scas
push
xlat
mov
sbb
mov
dec
push
popf
or
and
lret
add
sub
push
cmp
inc
and
mov
aad
test
dec
mov
cmc
incl
inc
loope
add
cld
cmp
mov
dec
adcb
lret
ret
jno
lea
xchg
ret
sbb
out
add
inc
mov
movsl
dec
adc
push
dec
mov
std
push
xor
mov
xlat
xor
dec
daa
insl
loopne
lret
dec
push
es
push
xor
push
pop
mov
xor
fistl
and
add
fwait
and
fbstp
in
sub
loopne
xchg
popa
push
or
mov
mov
jp
sub
loopne
popa
jno
dec
push
dec
cmc
test
cmp
imul
fsubrs
jle
fidivl
jb
jl
inc
daa
push
ficoml
sub
outsl
jno
cmp
fsubp
lcall
movsl
sbb
ret
leave
mov
cmp
jae
fistpll
and
aaa
in
outsl
pop
jmp
sbb
int3
mov
loopne
push
sbb
cmp
inc
adc
xor
ret
pop
jb
push
popf
mov
jbe
mov
cmpsl
xor
nop
mov
loope
out
addb
jmp
dec
and
lock
mov
push
je
loope
lea
out
fmull
mov
and
xor
sbb
or
xchg
repz
and
getsec
fld
ja
stos
jl
int
adc
add
inc
and
outsb
pop
pop
out
fucomip
push
mov
jp
dec
shlb
outsb
pop
cli
into
sbb
cmp
jnp
inc
cmp
add
arpl
and
pop
jb
mov
testl
cmp
aad
dec
lahf
cwtl
pop
mulb
je
shlb
out
mov
adc
push
nop
outsl
shll
jl
mov
imul
movsl
inc
arpl
pop
bound
jns,pn
dec
push
test
push
inc
lcall
popa
loopne
mov
push
mov
adc
enter
test
push
aad
gs
and
xor
and
js
or
jo
xor
ljmp
cmp
fstl
inc
les
jmp
outsb
icebp
cmp
inc
cmp
cmp
xchg
jbe
es
shrl
inc
bound
pop
xchg
adc
add
xor
push
iret
add
adc
mov
fistpll
pop
or
jnp
cs
repz
push
lahf
or
fistpll
loopne
xchg
ljmp
and
push
out
out
adc
aam
mov
mov
int
out
sahf
fsubrp
es
xchg
push
sbb
sub
inc
sub
lock
jnp
xor
sarl
cli
jae
pop
insl
rolb
arpl
jno
scas
mov
inc
mov
cmp
and
rcl
lcall
mov
scas
in
gs
inc
out
insl
jecxz
sbb
shlb
mov
sahf
rclb
mov
jbe
adc
and
mov
idivb
mov
pop
jae
mov
and
cmp
xor
dec
test
movsb
mov
psllq
mov
sbbl
cld
sbb
push
inc
mov
push
std
stc
and
pop
cltd
aam
sahf
imul
es
ficompl
test
cmc
std
cwtl
lret
xlat
add
cld
add
call
xor
loopne
and
jge
xchg
mov
sti
add
rolb
and
hlt
cmp
insb
ss
adc
call
ss
cltd
test
cmp
xchg
xor
jne
out
mov
into
shll
addr16
push
jo
movsl
pop
shlb
xorb
es
mov
lds
xor
icebp
inc
bound
xlat
cld
imul
mov
or
mov
cmpsb
pop
inc
push
in
addr16
out
mov
cmp
stos
insl
test
hlt
scas
cmp
mov
cmpl
ljmp
aad
push
loopne
mov
add
push
lods
mov
push
lods
scas
fdivrs
sub
cld
dec
sub
ljmp
mov
sub
out
test
clc
xchg
sbb
push
mov
pop
pop
sub
cld
or
je
xchg
sti
push
cmpsl
jmp
mov
and
mov
mov
xor
gs
pushf
lods
push
movsl
jae
rol
aaa
xchg
into
xchg
pop
pop
aad
jge
call
insl
jbe
jmp
inc
sbb
mov
jnp
dec
push
push
mov
or
or
jp
dec
lods
aaa
xor
add
xor
lock
js
pusha
fldcw
jmp
pop
mov
loope
jo
mov
add
cmp
idivl
loop
faddp
add
xchg
pop
dec
ror
cmp
fwait
cli
arpl
mov
mov
jge
pop
or
je
xchg
xor
dec
pop
mov
rorl
out
jg
push
jecxz
in
cmpsl
les
inc
pop
adc
adc
sahf
insb
sbb
in
lret
cmpsl
dec
xor
inc
jle
ret
mov
mov
dec
aas
adc
mov
xchg
dec
xor
jg
aad
mov
data16
outsb
out
data16
jnp
jecxz
jg
push
sub
pop
roll
aam
scas
jmp
arpl
aas
dec
mov
lret
xchg
jae
bound
adc
loop
xor
pop
fsubl
mov
sbb
jne
cltd
sbb
lahf
movsl
aas
sbb
sbb
notb
ljmp
inc
out
ss
lods
ja
mov
pop
enter
inc
es
repz
arpl
cwtl
in
push
cmpb
sbb
dec
xchg
in
mov
push
test
fistpll
cmc
add
sub
aaa
cmp
jnp
loope
imul
fsubp
lods
cmp
loope
nop
jmp
mov
cld
jbe
jecxz
in
pop
pop
xlat
fiadds
xchg
cmp
and
popa
pop
add
inc
mov
push
or
sahf
inc
pop
test
or
imul
and
or
mov
icebp
roll
mov
cld
xchg
push
or
add
and
int3
sub
ss
in
xchg
stc
inc
push
jmp
mov
ficoml
xchg
and
ss
and
or
aaa
add
movsl
fisttpll
pop
pop
lds
cmp
push
cmc
sub
or
mov
inc
mov
mov
mov
push
rcr
add
pop
addr16
mov
xchg
pop
pop
sbb
mov
les
and
jg
dec
test
les
mov
cmc
inc
push
sbb
imul
and
mov
mov
push
push
mov
xchg
daa
and
mov
fistpll
fistpll
subl
jne
adc
sub
sub
aaa
addr16
imul
or
aas
cmp
adc
adc
cmpsb
pop
xor
adcb
dec
push
shll
xchg
mov
jecxz
pop
sub
pop
daa
xor
mov
or
sub
mov
adc
adc
cwtl
xchg
jns
mov
lcall
aad
lahf
mov
and
jle
fistps
outsb
xchg
stos
jg
push
pop
mov
test
push
in
test
xchg
sub
imul
repz
frstor
xchg
sbb
adc
daa
cmpsb
jge
mov
inc
decl
mov
fwait
jmp
psubb
xchg
cmpl
in
jns
movsl
outsl
xor
fdivs
inc
in
pushf
fisubrs
xor
cmp
stos
xchg
mov
pop
inc
stc
je
outsl
or
ds
out
dec
sbb
insb
inc
popf
sub
aad
and
addr16
int3
mov
cmp
inc
dec
repz
in
pop
dec
out
push
cmp
rcr
iret
xor
inc
bound
jae
inc
jmp
inc
pop
adc
out
mov
xor
loopne
iret
addl
inc
cmpsb
add
xor
bound
mov
xchg
or
test
add
xorl
push
mov
lahf
cwtl
cmp
lock
movsb
adc
xchg
inc
rcrb
fwait
pop
test
pop
in
bound
je
sub
xchg
mov
ljmp
or
addb
mov
push
sbbb
into
or
pop
stc
push
push
ss
xchg
pop
int3
xchg
das
pushf
xchg
mov
or
ret
inc
scas
and
lea
iret
dec
lcall
fwait
and
cmpsl
push
pop
cs
addr16
insb
sub
sub
cmp
fs
pop
dec
movsl
cli
pop
fldt
mov
test
shlb
fistl
or
xor
pop
testb
xchg
aas
dec
add
movsb
push
mov
mov
sub
push
sti
ds
push
aad
into
test
hlt
or
mov
or
cmpl
popf
jecxz
push
cli
loop
cmpsl
pop
dec
sub
xchg
and
push
out
or
xor
push
mov
rolb
jmp
lods
push
rol
sub
out
push
pop
std
aas
push
push
mov
mov
sarb
jge
or
iret
cmc
or
adc
and
sub
pushf
ds
xchg
push
es
jg
and
test
xor
xor
popa
push
xchg
xor
fnsave
push
nop
sbb
aad
lods
shlb
test
rolb
insl
inc
rcl
roll
mov
imull
inc
mov
imul
popf
inc
mov
mov
xchg
shlb
jno
push
adc
and
sbbl
fcompl
xchg
and
mov
sub
aad
std
jl
lret
js
movsb
imul
fmulp
ja
jmp
stos
cmpsl
test
ret
inc
std
in
mov
in
es
pop
inc
in
je
sbb
or
std
jns
ficoms
mov
pop
sbb
test
mov
int
pusha
test
xlat
outsl
pop
test
or
mov
call
xor
dec
cmova
in
out
sbb
add
in
adc
movsl
pop
ja
ret
pop
adc
inc
push
or
cmp
add
dec
cmp
imul
adc
sub
dec
orl
ror
sbb
pop
das
sub
lods
pop
loop
push
mov
lahf
mov
cmp
into
outsl
pop
test
sbb
stos
pop
lods
adc
mov
aam
pop
aaa
xor
xor
mov
xchg
dec
push
push
sbb
fnstcw
int3
call
je
cmp
and
fldcw
in
sbb
push
mov
sar
sub
sar
movsb
pop
inc
repz
and
mov
mov
aad
xchg
xor
dec
push
jge
mov
int
lahf
in
jno
or
fs
ss
push
pop
ficomps
sti
pushf
cmp
xor
call
sub
adc
out
fildll
adc
cmp
sbb
pop
push
mov
mov
lds
adc
xchg
movsb
mov
push
sub
add
ror
and
adc
lods
or
arpl
aam
out
into
fsubrs
fldl
fcmove
imul
lcall
xor
fcmovbe
sbb
clc
test
adc
test
mov
dec
xchg
icebp
test
insl
fcoms
xlat
add
push
sbb
andl
mov
xor
lcall
fiadds
outsb
dec
push
mov
lahf
punpckhbw
jno
xchg
add
push
lea
inc
pop
pop
fsubl
pop
int3
rol
dec
mov
add
leave
aas
sbb
out
pop
loope
aad
lods
aaa
imul
cmp
push
and
addl
ja
movsl
xor
mov
imulb
xor
negl
xchg
sbb
push
repnz
cmpl
rcll
and
aad
nop
outsb
and
and
int3
pusha
mov
jle
add
adc
shrb
imul
xorl
ds
push
mov
adc
mov
daa
mov
push
xor
popf
push
adc
inc
mov
jle
sbb
hlt
or
push
xchg
outsb
je
iret
pop
aas
hlt
inc
ljmp
enter
push
and
ret
xor
enter
int
popf
cmp
adc
mov
neg
push
and
xchg
ret
int3
mov
insl
mov
push
add
jns
in
loop
in
jno
dec
repz
jo
or
stc
ss
pop
insb
cli
dec
push
pop
push
lock
inc
and
mov
mov
out
xchg
and
js
inc
push
mov
mov
jmp
imul
cld
cltd
inc
mov
cmpsb
mov
xchg
ss
in
sbb
mov
add
push
lret
lcall
push
or
and
sbb
pop
in
into
inc
stc
xchg
call
inc
jecxz
lods
popa
jmp
mov
mov
mov
jecxz
out
out
cmpb
xor
aam
mov
in
ja
lods
ja
mov
enter
ret
fcmovbe
jge
mov
cli
out
add
dec
in
mov
daa
dec
imul
loopne
push
incb
loope
outsb
aam
nop
mov
ja
jbe
xor
dec
jne
lds
mov
xchg
push
faddl
add
push
aaa
lahf
pop
sbb
shll
pop
inc
div
adc
rolb
sub
orl
adc
fmull
int
dec
mov
mov
jae
push
fmull
dec
dec
cmp
add
mov
dec
jmp
sub
outsl
lcall
push
pop
mov
test
dec
mov
cmc
mov
inc
adc
fsubrp
or
std
call
xor
mov
insl
orl
repz
movsl
xchg
mov
add
adc
lret
inc
add
push
push
jae
inc
ficompl
dec
dec
inc
lds
jnp
out
nop
addr16
lret
pop
inc
mov
adc
lret
loop
pop
and
iret
push
fwait
movsb
xchg
xor
adc
idivl
shlb
and
lahf
in
sbb
lds
xchg
dec
daa
cmp
push
es
pop
repnz
and
popf
mov
dec
lahf
sbb
sbb
adc
sbb
ss
adc
mov
sahf
lret
pop
mov
aaa
cmpsb
out
call
jne
inc
cmp
mov
xchg
push
inc
std
mov
cs
js
push
outsl
and
mov
pop
test
xchg
xchg
ds
movsl
sbb
adc
sbb
mov
mov
insb
dec
jecxz
add
push
and
out
cld
lret
push
stos
and
sub
pusha
stos
fs
mov
cmp
adc
mov
cmpsl
mov
arpl
mov
xchg
jmp
pop
fmul
push
push
mov
mov
xchg
dec
push
les
jle
mov
fdiv
sarl
push
push
fisttpl
push
aad
outsl
xchg
je
jecxz
push
test
aas
data16
pop
pop
xchg
push
xchg
rcll
jle
hlt
repnz
and
fidivs
mov
push
jno
test
sti
shrb
push
aas
daa
out
cld
hlt
out
push
and
mov
push
mov
ret
leave
dec
mov
les
sbb
sbb
jp
subb
mov
xor
push
fsubr
push
jle
movsl
daa
sbb
ja
add
xchg
popa
pop
imul
fistpl
arpl
sub
sub
scas
xchg
adc
ljmp
dec
add
stos
mov
test
add
jge
fidivrs
hlt
mov
movsl
mov
daa
add
sbbl
stos
xor
cwtl
nop
sti
dec
test
or
ljmp
int
sub
pop
out
push
mov
inc
sub
add
mov
mov
sbb
dec
ja
cmp
fimull
in
sbb
adc
add
mov
sti
repnz
iret
and
test
jl
mov
aaa
leave
aad
mov
or
xor
pop
ficomps
and
or
xor
outsl
dec
push
and
cltd
mov
pop
add
mov
sbb
cmpsl
push
imul
sbb
sbb
fidivs
pop
rorl
jno
pop
cmpsb
nop
out
xor
xor
sar
shrl
aaa
test
pop
pop
subl
in
cld
mov
xor
sti
enter
dec
shl
cs
mov
add
rcr
push
and
fstpl
mov
adc
stc
fisubl
jl
sub
xor
fcmovu
sub
lds
lea
rcll
fmul
mov
dec
sub
lods
pop
mov
les
lea
outsl
mov
ja
and
add
mov
lret
mov
sub
lds
adc
mov
mov
ljmp
xchg
fstl
hlt
xchg
jle
shlb
insl
pop
cli
hlt
and
dec
inc
jns
lds
jle
sbb
pop
pop
clc
dec
std
add
xchg
jl
mov
add
pop
or
jmp
fwait
push
mov
mov
pop
sbb
pop
test
loop
jb
xor
jl
ss
and
add
out
pop
push
aas
es
fiadds
nop
popf
pop
sahf
notb
mov
xor
lret
addr16
fs
sub
xor
cmp
lock
mov
pop
addr16
call
cmp
xchg
mov
loop
ljmp
mov
stos
and
push
mov
cmpsb
xor
xor
xor
outsb
bound
ja
mov
mov
cmp
idivb
pushf
sub
andb
cmpsl
lret
push
xchg
mov
es
lret
xchg
pop
lahf
cmc
push
sub
jg
push
and
aaa
je
push
push
jle
sub
sbb
imul
add
cmpsl
pop
pushf
fs
lret
ror
jae
repnz
int
rorl
stos
imul
test
cmp
data16
cmp
imull
fwait
cmp
jl
sbb
push
rcll
pop
xchg
xor
mov
loope
bound
dec
dec
sbb
mov
pop
ljmp
ds
ret
adc
mov
jo
cmpsb
sbb
dec
push
aaa
loope
fcoms
xor
aam
ds
addr16
mov
push
xchg
pop
xor
and
cltd
lahf
adcl
inc
xchg
pop
push
mov
push
aam
xchg
mov
adc
mov
jl
cwtl
mov
cmp
pop
fadd
or
jnp
dec
rol
gs
je
imul
jg
xchg
dec
enter
and
shl
sub
outsb
insb
mov
and
iret
push
out
mulb
sub
xchg
dec
xchg
pushf
leave
dec
pop
sbb
leave
jae
cld
add
pop
mov
fidivl
add
push
lret
mov
lret
in
sub
pop
iret
sub
pop
adc
jge
mov
cmp
fdivr
and
nop
inc
adc
inc
xchg
xor
push
push
scas
push
pusha
jne
xor
adc
jns
into
jmp
pop
fcoml
mov
and
addr16
sub
lret
iret
pop
sti
dec
adc
daa
popf
or
push
fsubrs
lea
in
out
push
cmp
adc
pop
outsl
lahf
cmp
hlt
inc
imul
sub
add
fldlg2
data16
testb
daa
push
arpl
mov
iret
adc
lcall
in
jle
inc
shl
flds
stc
pop
adc
cmc
stos
rcl
aam
sub
subl
pop
fs
push
inc
mov
and
fsts
aam
imul
xchg
pushl
push
jmp
fs
nop
filds
fsubs
xor
mov
mov
cmp
in
aad
movsl
dec
int
sub
push
mov
push
movb
push
mov
mov
cmc
das
imulb
pop
sub
cli
idivb
loop
sub
dec
idiv
mull
mov
fcmovu
push
std
enter
hlt
mov
mov
jb
aad
dec
rcl
cs
jbe
shl
inc
jno
jl
shll
lods
mov
cmp
xchg
scas
mov
lret
ret
cmp
aam
rorb
dec
jmp
ficomps
adc
and
sub
jl
orb
mov
mov
lds
inc
outsb
mov
push
dec
mov
mov
adc
mov
cltd
xchg
popf
outsl
stos
adc
jno
ret
xlat
sbb
into
rclb
mov
scas
sub
xor
sbb
cwtl
lret
push
sub
inc
add
mov
cwtl
subl
mov
adc
xlat
mov
dec
push
fiaddl
xchg
jae
jl
push
xor
lock
mov
pop
xchg
inc
xchg
adc
mov
inc
dec
es
das
add
insb
mov
and
stos
pop
out
adcl
pop
outsb
cmpsl
xor
in
icebp
fbld
andl
aas
jae
call
pop
gs
pop
lods
sub
leave
lahf
daa
inc
insl
push
stc
stos
sub
lea
push
int
mov
fstpt
cmpsb
sub
sub
xor
scas
ret
mov
stos
inc
pop
popl
add
or
testl
sub
out
xor
gs
push
xor
aam
cmp
fcompl
mov
lcall
mov
cwtl
mulb
pop
insb
shrb
out
push
dec
ret
pusha
dec
pusha
movzwl
jecxz
jns
lock
insb
sti
push
dec
mov
packsswb
adc
movsl
adcb
xchg
pop
nop
in
nop
lret
pop
adc
fdivs
xor
mov
cmpb
adc
adc
popa
movsl
adc
xchg
inc
sub
add
mov
outsl
jae
xor
mov
jge
leave
pop
clc
data16
inc
pop
xchg
add
ja
loopne
out
cmpsl
divl
dec
testb
pushf
pop
ja
push
lds
lods
ret
xchg
xchg
es
stos
enter
inc
enter
loopne
or
in
ret
outsl
xor
push
cmpsb
fcomps
test
call
sbb
xlat
idivl
sti
cmp
jecxz
lahf
aas
sti
ret
or
or
push
mov
dec
inc
push
imul
and
inc
sbbb
mov
hlt
pop
cmp
dec
sbb
je
push
jne
lock
imul
insb
mov
xor
jmp
push
push
das
push
xchg
adc
jae
pop
roll
movsl
bound
or
jb
das
lret
adc
mov
push
dec
fs
fisubl
jmp
pushl
pop
bound
imul
roll
push
popa
lret
mov
mov
adc
lea
popf
xor
lock
out
xchg
pushf
into
movsl
sub
inc
xor
imul
mov
test
outsl
subb
push
pop
adc
jp
inc
loop
dec
pop
xor
xchg
xor
orl
add
stc
push
jno
xchg
fmull
daa
mov
cmpsl
cmpsl
out
icebp
test
sahf
out
clc
in
pop
ljmp
imul
leave
xchg
xchg
push
mov
add
or
inc
rcrb
int3
dec
dec
pop
sbb
loope
adc
xchg
popf
dec
jnp
pop
test
xor
xchg
cwtl
or
dec
out
sahf
lock
add
add
dec
loope
test
push
add
push
sub
pop
dec
jnp
imul
popa
lahf
jl
aaa
adc
add
xor
iret
mulb
mov
xchg
dec
jmp
xor
dec
xor
cmp
lcall
mov
jb
inc
fsub
lcall
push
pop
xlat
xchg
inc
push
and
ja
jnp
daa
mov
lret
mov
outsb
gs
push
inc
in
popw
or
xchg
roll
scas
or
mov
out
scas
adcl
fstpl
dec
xchg
lahf
inc
cs
or
xchg
out
push
push
mov
out
add
dec
rcl
lahf
cmpsl
std
cmc
pushf
ja
es
pop
and
sub
xchg
clc
xchg
push
test
mov
mov
dec
call
test
pop
rcr
mov
pop
pop
test
inc
mov
imul
mov
les
sbb
lea
dec
popf
repz
pop
inc
mov
hlt
insl
call
in
imul
es
fistpll
pop
mov
and
imul
jb
sbb
gs
enter
sbb
mov
in
sub
out
or
stc
mov
call
mov
dec
dec
lods
mov
pop
sbb
mov
add
dec
dec
scas
add
rcrl
addr16
mov
mov
stos
jl
adc
cs
add
jnp
test
jns
push
cld
adc
mov
and
push
lods
imul
cmp
fmulp
inc
ficoml
sub
pop
mov
popl
mov
lahf
xor
xor
dec
cmpsl
aad
cmp
push
std
inc
out
xchg
dec
std
push
inc
rolb
sub
push
inc
mov
test
jae
scas
es
mov
pop
fdivrl
mov
sbb
mov
loopne
inc
fwait
outsb
or
jecxz
mov
mov
mov
repz
inc
pop
add
int3
inc
idivl
je
leave
out
and
pusha
or
cmpsl
insb
add
fadd
mov
les
stos
jno
rolb
cmp
mov
addr16
lods
jecxz
pop
add
sub
xchg
out
xchg
push
stos
xor
and
xchg
imul
cmp
mov
scas
mov
xlat
mov
add
sahf
jb
test
push
pop
xor
pusha
sbb
ret
mov
cli
or
push
ss
xor
mov
cmp
inc
aad
ret
leave
mov
push
mov
mov
leave
push
mov
mov
shrb
jbe
pusha
add
xor
cmpsl
lret
data16
mov
popf
sbb
fs
cmpsb
jb
sbb
test
dec
xchg
stc
jg
push
cld
mov
ret
loope
into
adc
push
sti
in
cmp
sbb
aas
dec
divl
mov
outsb
push
or
pop
xor
rorl
cltd
jmp
loope
xchg
dec
pusha
adcl
and
pop
push
test
stos
cmpsl
mov
gs
lods
loop
pop
stos
inc
xchg
insl
pop
cmpsb
pop
sub
mov
popf
jne
cmp
push
sub
aas
xchg
and
aaa
pop
jge
ja
fs
gs
mov
dec
sbb
jmp
push
loop
fcomp
push
dec
dec
and
sub
sbb
push
scas
mov
nop
enter
fidivs
xor
or
les
mov
in
jmp
cmp
mov
add
jb
cmc
sbb
stos
out
jne
addb
iret
movsl
jno
sbb
rorb
lds
lods
cltd
mov
jae
push
jmp
or
mov
sub
jo
push
stos
fs
mov
lret
xor
pop
sbb
mov
adc
int3
xor
or
push
pop
add
cmp
xchg
out
inc
ret
pop
outsb
faddl
and
pop
cmp
adc
pop
cmp
cmpsb
lock
bound
or
scas
lods
pop
popl
inc
and
mov
mov
sbb
inc
mov
fidivrl
cmc
rolb
insl
scas
cmpsb
fstps
imull
sub
lods
mov
outsl
sub
push
sub
outsl
movsb
jle
inc
inc
insb
adc
out
jae
mov
test
cli
sbb
jmp
ret
push
pop
testb
lods
sbb
stc
negl
imul
add
lds
or
shrb
cmp
mov
xchg
mov
mov
cmpsb
gs
aas
out
fstps
push
psubd
jp
out
xor
add
and
in
js
pop
or
in
sarl
and
adc
movsl
sbb
into
pop
xor
xchg
mov
je
pop
jae
mov
dec
cmpsb
cmp
ds
xchg
cld
out
and
cmp
das
jo
mov
inc
adc
lods
cli
pop
lock
and
stos
jp
dec
jmp
pop
or
pop
sbb
hlt
xchg
inc
add
test
mov
stos
xor
sti
pop
fwait
insl
adcb
lahf
repnz
testl
push
gs
xor
sub
mov
mov
ja
mov
mov
sbb
mov
lock
push
pop
push
mov
loope
cld
fldt
mov
inc
cmp
dec
dec
aaa
adc
lcall
pop
mov
push
push
data16
jp
aas
hlt
imull
lods
fcmove
jge
pop
aas
cmpsl
in
nop
adc
faddl
les
adc
and
pushf
cltd
inc
xor
outsb
cltd
aad
and
cmc
aas
push
pusha
push
xchg
fcoml
mov
mov
or
shrl
inc
pop
and
ds
mov
lret
mov
fstl
xchg
mov
fxch
icebp
fcmovnu
adc
and
fwait
pop
loop
mov
aad
mov
mov
pop
in
and
add
or
into
xchg
fisubl
mov
paddb
jbe
in
dec
ret
pop
aas
jo
jp
in
mov
leave
xchg
ja
jns
stos
or
inc
fdivr
ret
mov
pop
jl
sahf
add
leave
mov
in
mov
push
icebp
add
xor
out
mov
lahf
xchg
dec
xchg
arpl
push
pop
pushf
out
jbe
mov
sbb
pusha
sbb
pop
or
popf
jecxz
jl
xor
mov
mov
mov
adc
mov
sbb
repz
lock
sub
scas
pop
test
in
shld
xchg
xor
cltd
iret
xchg
shrl
jmp
scas
inc
push
fstl
movsl
mov
jno
inc
enter
push
scas
lret
les
mov
sub
andb
and
ja
ret
pop
add
mov
out
push
cmp
notb
mov
mov
sub
jg
mov
cmpsl
test
sub
addr16
mov
scas
in
push
inc
std
inc
movsl
movsb
insl
popf
into
loop
inc
mov
fs
inc
and
fdivs
jmp
push
pop
insb
repz
jae
mov
jns
xor
lods
push
and
xlat
fidivl
roll
repnz
push
mov
jnp
inc
xchg
add
push
add
mov
mov
jb
or
push
jl
loope
sbb
stos
enter
pushf
fimull
jle
cmpsl
outsl
jle
loope
cwtl
jne
incl
les
dec
lret
pop
pop
pop
xchg
push
leave
cmp
jmp
orl
test
lds
rcl
ja
call
push
mov
daa
xor
inc
and
xchg
ret
push
frstor
ret
or
out
and
push
dec
xchg
mov
ljmp
inc
std
idivl
mov
jmp
outsl
push
dec
pop
loop
xor
inc
gs
dec
push
and
shll
xchg
fsubp
jnp
cmpsl
notb
aad
add
shrl
popa
rolb
daa
mov
cs
pop
nop
sbb
cmp
clc
push
mov
stos
dec
dec
sbb
inc
jmp
out
jle
mov
dec
nop
pushf
mov
fwait
scas
lock
call
mov
mov
pop
lahf
jg
adc
jle
je
mov
cwtl
inc
xchg
jecxz
sahf
in
xchg
mov
sbb
xor
or
sub
lret
or
test
inc
orb
and
cmc
dec
adc
es
xor
and
stos
adc
mov
dec
inc
push
ror
inc
inc
add
mov
push
outsl
jle
loop
lcall
jb
or
pop
ds
jns
add
xor
int
hlt
mov
iret
pop
into
xchg
stos
ja
mov
and
jo
out
loopne
cmpsl
jbe
leave
mov
loop
in
mov
movsl
sbb
mov
je
movsb
or
sub
icebp
sub
ds
gs
test
and
mov
out
sub
xchg
sub
jge
dec
cmp
push
jg
lcall
push
outsb
cmp
stos
cmp
call
out
mov
fwait
jns
or
jo
gs
popa
push
cmp
pop
jbe
std
andb
mov
inc
rorl
mov
leave
add
lods
cmpsl
faddl
jl
decl
adc
out
clc
mov
push
test
cmp
jae
pop
icebp
pop
std
lret
inc
es
scas
mov
adc
push
and
jle
xchg
gs
ja
dec
mov
pop
dec
cmc
sahf
push
jl
fidivrl
pop
cmp
rcll
pop
and
call
jb
std
out
in
loopne
imulb
pop
and
push
push
and
test
cmpsb
and
sbb
lret
pop
dec
lcall
xchg
or
lods
sbb
xlat
inc
cld
xchg
lret
xchg
rol
movsb
daa
mov
jnp
inc
and
test
cmp
add
cs
adc
xchg
ljmp
cwtl
es
jmp
cmp
add
adc
xor
bound
in
icebp
daa
mov
mov
add
jmp
dec
fdivr
insl
rcr
xchg
enter
xchg
out
jne
cmp
shll
pop
in
rcll
lds
addr16
adc
lods
idivl
test
dec
xor
ss
std
cwtl
popa
jge
mov
popa
aaa
add
dec
loopne
mov
fidivrl
mov
push
scas
das
or
jmp
mov
je
leave
inc
ret
dec
inc
ljmp
ljmp
pop
adc
mov
nop/reserved
push
xor
ds
lahf
movsl
je
dec
into
inc
mov
jo
bswap
popa
adc
inc
pusha
inc
sub
fidivrl
aaa
movsl
xchg
movsb
shl
data16
push
es
inc
mov
dec
imul
push
in
push
aas
pop
adc
pushf
push
jge
mov
insl
outsl
jno
xor
das
pusha
in
mov
mov
adc
xchg
jo
and
out
and
lret
leave
ljmp
push
pop
pop
sub
mov
jg
int3
dec
mov
cltd
pop
scas
repz
adc
fcmovnu
and
cmp
cli
cli
add
leave
pop
test
xor
adc
sbb
push
jg
ds
int
sub
js
lret
jnp
movsl
aad
pop
ret
subb
adc
cmp
pusha
xchg
sbb
add
nop
inc
pusha
push
rorb
mov
push
daa
enter
sti
jecxz
loopne
je
adcb
sub
repz
push
test
jbe
int3
movsb
pop
arpl
jp
adc
adc
inc
xchg
push
mov
sbb
inc
pop
inc
cld
sahf
in
pop
sub
push
xchg
lret
mov
cmpsb
or
mov
or
lods
inc
dec
pop
aam
rcll
ret
mov
adc
and
mov
xchg
push
bound
pop
add
dec
es
sbbl
add
jno
and
dec
sbb
jmp
lods
cmp
cwtl
xchg
insl
push
and
pop
lret
insb
cld
in
dec
inc
adc
mov
les
lea
rcll
out
or
stc
loope
or
sbb
cld
pop
daa
adc
ficomps
fwait
lea
sbb
jecxz
int
jno
daa
packsswb
insl
xor
test
inc
sti
das
jno
out
ljmp
mov
xorl
push
repz
decb
jb
add
sub
xchg
sbb
pop
in
mov
jbe
mov
icebp
adc
insl
xor
jb
and
lcall
add
xchg
cmpsl
out
dec
loop
jecxz
es
push
test
xlat
push
dec
insb
pop
sti
in
ret
dec
fisubrs
lods
icebp
jmp
rcrl
out
rol
rcrl
rorb
imul
mov
mov
js
popf
test
popf
dec
xchg
push
sub
push
cmp
mov
inc
mov
ret
sbb
add
or
pushf
xor
mov
fldenv
xchg
cmpsb
lret
inc
addps
xor
ret
shrb
leave
fwait
repnz
mov
jb
outsb
adc
dec
shll
enter
subb
mov
pushf
subl
inc
pop
adc
dec
mov
lahf
test
pop
lods
mov
adc
push
jns
jle
clc
mov
negl
ret
int
data16
lcall
je
mov
int
leave
inc
mov
enter
shll
dec
call
out
inc
lret
in
ficoms
dec
xchg
sbb
jge
sbb
jge
push
icebp
push
dec
iret
mov
mov
dec
xlat
jp
pop
dec
mov
negl
jecxz
push
insl
jne
and
cld
popf
pushl
jbe
mov
add
adc
jg
shll
mov
fs
cmpsl
mov
mov
rcll
loope
cmp
in
sub
lahf
cli
jle
mov
ja
decl
mov
jg
inc
in
mov
sbb
cmpsb
sub
inc
insl
enter
data16
mov
sti
xchg
mov
mov
ficoml
mov
and
sbb
add
loopne
addl
clc
das
dec
loope
mov
jae
ret
cld
ljmp
imul
jmp
xor
out
mov
sbb
pop
lcall
push
mov
pop
xor
or
scas
lods
jle,pt
inc
inc
xchg
out
push
xchg
int3
notl
mov
in
adc
or
sbb
insb
icebp
shl
mov
leave
sbb
adc
out
enter
dec
out
movsb
adc
jl
outsb
scas
xchg
scas
add
adc
and
or
xchg
pop
nop
lret
pop
rorl
pop
and
mov
lcall
mov
mulb
mov
pop
mov
xor
dec
sub
mov
in
push
xlat
repnz
jl
push
mov
cmpsl
mov
cltd
push
aaa
or
test
rcrb
or
hlt
add
mov
test
inc
int3
and
inc
add
std
mov
dec
ljmp
xorb
mov
adc
xchg
imul
icebp
dec
ljmp
cmp
arpl
sub
cmc
dec
adc
mov
pop
test
mov
cmp
jge
or
inc
aam
and
adc
dec
movsl
sbb
shrl
mov
fistl
push
js
sub
sbb
xchg
push
sbb
pusha
inc
xchg
or
mov
jns
fadds
jmp
mov
inc
and
or
cmpl
sbb
lock
std
cld
mov
mov
inc
dec
sub
xchg
repz
push
mov
lods
pop
repnz
popf
aas
icebp
fxch
xor
icebp
mov
std
loop
mov
sbb
mov
inc
loope
mov
xchg
nop
cs
loope
out
xchg
ret
stos
shrb
aam
sahf
daa
sub
dec
dec
gs
mov
lods
sub
imul
dec
clc
cld
xor
mov
push
xor
ss
cmp
popf
push
cli
fs
fisubrs
jl
xchg
movsb
jmp
push
cwtl
aam
jge
outsl
add
mov
mov
nop
push
inc
jp
lret
test
arpl
imul
fcompl
xor
mov
lcall
cs
cs
idivb
rolb
in
xor
dec
jp
dec
xorl
mov
imulb
mov
xchg
add
sbb
das
test
pop
inc
out
outsl
add
icebp
xor
xchg
cs
in
adc
mov
cmp
cmp
addr16
adc
orps
sub
mov
pusha
jae
inc
push
cwtl
mov
jns
xchg
inc
add
scas
out
mov
jns
lahf
adc
and
fsubs
dec
ss
test
movsb
push
sbb
xchg
jl
sahf
adc
inc
cltd
cmp
pop
dec
and
push
cmp
adc
xchg
sub
popf
jns
adc
mov
mov
add
std
in
outsb
push
aam
mov
pop
xor
mov
test
push
sbb
mov
push
and
imul
mov
mov
bound
sbb
mov
push
fistl
stos
inc
mov
loop
sbb
or
je
addr16
shl
adc
aas
clc
stos
inc
xchg
fmulp
adc
popf
push
adc
dec
imul
jns
movsb
testl
cltd
fcmove
test
xchg
xchg
sbbl
dec
setno
ljmp
jecxz
lods
xchg
aad
inc
push
clc
lahf
adc
adc
mov
inc
hlt
ja
and
sbbb
and
mov
lret
pop
mov
enter
sub
sbb
pushf
mov
in
xor
icebp
inc
fisttps
movsb
xor
adc
add
movsl
cld
jns
xchg
repz
push
mov
loopne
inc
lcall
dec
or
icebp
insb
cmp
mov
or
push
gs
jge
sar
push
push
jmp
dec
xchg
adc
cwtl
insl
cltd
inc
aaa
mov
push
mov
mov
daa
sahf
mov
sbb
addr16
fnstenv
jo
fistl
into
mov
ds
add
pslld
jae
cmp
pop
nop
int
fsubp
xor
shlb
pop
mov
jle
cmc
rcl
xchg
test
imulb
pop
push
or
jbe
mov
lock
fidivrs
or
or
fistl
push
into
pop
xchg
fidivrl
jns
dec
cld
das
adc
dec
and
into
cld
dec
mov
adc
in
jb
jb
jno
je
push
cltd
and
mov
fsubrs
dec
nop
mov
test
push
cmp
les
and
je
fs
mov
leave
adc
jmp
adc
faddl
lahf
mov
testl
aas
xchg
into
add
adc
test
leave
xor
cmp
movsl
fisttpl
add
sub
out
subb
test
popf
sub
pop
push
std
int3
cmp
and
dec
xchg
imul
lds
mov
sub
adc
cmp
loop
testl
call
sahf
mov
lods
loop
mov
mov
jle
mov
cmp
popa
push
dec
cmp
push
add
pop
aas
xchg
iret
ret
push
adcb
push
in
xor
push
je
pop
fcoms
sub
lahf
mov
les
push
fwait
xlat
lret
loope
leave
push
in
stos
xchg
cltd
cld
xchg
ror
xchg
shlb
js
xor
mov
mov
fsubr
fwait
adc
jge
sbb
dec
fs
lea
xor
repz
lahf
pushf
push
mov
mov
les
ret
or
xchg
stc
mov
xchg
stos
les
ljmp
add
out
and
cmpsl
sbb
mov
pop
sbb
xchg
enter
jge
mov
xlat
jns
ret
lea
cmp
jp
addr16
loopne
fdivl
rclb
std
call
mov
or
shrb
rcll
pop
popa
xor
or
jl
add
push
ret
je
subb
xchg
mov
test
inc
imul
lret
repz
enter
jb
test
daa
iret
insb
mov
stos
fisubl
dec
jge
scas
aaa
int3
shrl
in
pop
nop
cmp
loope
adc
mov
rcrb
or
lcall
inc
pop
in
fcomi
repz
and
fidivl
sub
inc
add
sbb
outsl
fistpll
mov
cltd
pop
scas
je
xchg
xor
popa
adc
imul
xor
addr16
rolb
std
sbb
inc
jle
xor
shlb
push
mov
sbbl
popf
imul
xchg
sbb
cmp
sbb
int3
mov
xlat
sub
push
outsl
sub
mov
insb
push
fnsave
lods
shl
out
jb
fdivrl
jne
test
lret
xchg
cltd
sti
mov
mov
int3
icebp
test
add
mov
mov
jp
mov
cmp
sub
push
mov
and
mov
in
and
test
dec
mov
daa
push
jl
lret
lds
loop
mov
inc
jmp
int3
sub
les
sbb
mov
cmp
pop
out
repnz
sub
repz
or
scas
push
insb
add
les
filds
cltd
subb
cmp
neg
xor
xor
imul
pop
adc
push
xchg
aas
mov
fwait
pop
hlt
leave
arpl
dec
cs
inc
fs
push
and
xchg
or
push
push
push
stos
sbb
ljmp
pop
roll
pusha
lahf
out
mov
jo
mov
in
xorl
andl
pop
aas
cmp
jg
inc
push
xlat
scas
or
xchg
std
jg
lret
mov
fidivrl
data16
clc
cs
ret
wrmsr
xor
es
sub
adc
ja
mov
sbb
jo
or
cmp
dec
xor
pop
out
hlt
or
push
sub
cmpsb
dec
push
in
xor
sbb
movsb
enter
movsl
and
dec
enter
cmp
unpcklps
hlt
jnp
shrl
mov
mov
pop
notb
cmp
push
inc
cltd
add
icebp
hlt
in
jp
filds
shrl
int
test
cmpsb
sarb
enter
shrb
xchg
data16
jbe
pop
cmp
inc
push
out
inc
test
pop
add
out
aam
cmp
and
mov
mov
and
push
mov
scas
xchg
mov
inc
loop
pop
cwtl
inc
dec
jmp
into
int
das
pop
dec
adc
xchg
aam
inc
out
lock
lds
es
push
lock
daa
dec
cli
lret
lret
lds
xor
inc
or
push
lret
jp
lods
je
inc
sarl
or
xor
jl
ss
bound
mov
and
popa
jg
int3
aas
test
and
sub
out
push
adc
xorl
mov
cmpsl
xchg
or
mov
sbb
repnz
mov
pop
mov
or
mov
mov
xchg
js
lods
std
fistpl
inc
pop
popf
aam
lods
sbb
fcmovbe
lret
jle
push
rcrl
out
mov
mov
jb
mov
mov
fidivrs
and
push
mov
jne
xchg
cmp
roll
cmc
test
inc
add
enter
repz
push
mov
gs
or
or
pop
cmpsl
cmp
sub
add
sub
lods
dec
leave
and
add
testb
test
es
push
ja
rep
push
and
push
test
pop
testb
mov
add
lea
lds
lret
cmp
test
xor
jp
push
adc
sbb
jns
add
sub
inc
ret
pop
popf
and
push
mov
mov
push
xor
dec
cld
leave
pop
jne
push
dec
jae
pop
ficomps
outsb
sahf
call
dec
test
mov
and
ret
inc
add
cmp
push
cmpl
fs
out
push
jmp
cld
mov
pop
ljmp
fwait
dec
enter
hlt
mov
add
clc
sub
xlat
in
sbb
xor
sbb
aad
push
ljmp
mov
sub
mov
int
xorl
or
movsl
cmp
scas
mov
xor
add
mov
cltd
cmpl
into
aas
xlat
xor
int
popl
lcall
cmp
push
int
or
mov
je
test
rolb
pop
push
jg
je
adcl
into
imul
add
je
sbb
into
xchg
xchg
fiadds
mov
sub
xchg
jp
push
scas
or
dec
iret
sahf
insb
call
repnz
adc
mov
popf
xchg
jl
ret
sahf
out
cli
sbb
out
jg
incb
pop
test
sub
cs
push
addr16
repnz
sarb
rcr
cmpb
and
sub
xchg
lods
out
and
jle
stc
sub
xor
and
cli
jae,pt
or
mov
mov
andb
fdivr
sahf
or
lea
dec
dec
ljmp
divb
mov
sbb
or
jns
jb
scas
inc
mov
mov
loop
pusha
jae
rol
jmp
pop
loop
outsb
fdiv
and
jp
rcrb
pop
sti
mov
add
cmp
jmp
mov
jecxz
or
push
stos
mov
call
jmp
stos
pop
adc
mov
mov
xor
aad
stos
mov
rolb
sbb
dec
fs
dec
mov
mov
mov
dec
push
inc
inc
aam
scas
jecxz
mov
loopne
in
add
mov
fstps
or
mov
cwtl
sbb
cltd
add
xchg
scas
std
sti
dec
ss
out
lds
jno
push
mov
dec
daa
cmp
push
mov
cld
mov
xor
sbb
ret
xor
inc
in
fisubl
push
cs
dec
cmpsb
xor
ljmp
repz
stc
sahf
xchg
rclb
and
inc
jmp
pop
push
mov
cld
les
cmp
loopne
xor
mov
clc
mov
jecxz
jge
bound
xchg
cmp
out
test
loopne
mov
inc
jb
adc
lcall
scas
push
enter
in
sbb
outsb
inc
movl
fiadds
mov
push
adc
pop
dec
mov
dec
inc
add
adc
inc
sbb
and
cmp
cmp
daa
sbb
sbb
mov
repnz
imul
dec
lret
cmp
cmp
and
sbb
popf
cs
cmp
divb
and
xchg
mov
cmpl
jge
jmp
fwait
sbb
shr
pop
push
movsb
or
xchg
and
xorl
pop
jbe
dec
jae
adcl
lret
aam
push
arpl
or
xor
push
jg
mov
inc
inc
icebp
add
pushf
cmp
mov
pop
out
js
inc
xlat
clc
add
push
mov
mov
sar
pusha
mov
mov
dec
int3
in
hlt
dec
leave
cmp
and
fmull
scas
push
inc
cli
xlat
jecxz
rolb
push
or
out
in
aas
jmp
mov
addr16
fcomps
sbb
sahf
fucomp
mov
inc
rclb
arpl
lret
clc
inc
inc
stos
aaa
ja
cmp
add
cmp
leave
mov
addl
stos
mov
jb
pushf
enter
popa
xchg
xchg
xchg
out
sahf
inc
dec
rorl
add
sarl
push
xchg
push
shlb
xchg
cwtl
sbb
adc
or
cmp
pop
cli
es
mov
sub
cmp
aad
or
adc
repnz
mov
sub
repnz
addb
adc
dec
cmpsb
xor
icebp
xchg
push
jecxz
and
adcl
nop
cmp
out
lock
mov
jns
fs
jbe
mov
push
out
mov
cmc
cli
adc
cld
inc
inc
fstps
movsl
cli
insl
dec
add
loop
arpl
clc
es
add
mov
enter
test
push
in
into
inc
in
mov
mov
dec
std
xor
add
loop
xchg
jne
fsubr
arpl
push
jnp
sbb
pop
in
jb
dec
lahf
sbb
out
pop
pop
and
mov
sub
aam
fsubrp
lret
addr16
adc
cmpsl
dec
js
imul
aad
cmp
jge
pop
push
inc
mov
leave
adc
add
decl
pushl
out
add
jg
insb
push
shl
lods
in
addr16
dec
jns
sub
stos
sub
mov
xlat
mov
shlb
mov
cmpsl
or
jae
repz
mov
xchg
mov
es
mov
mov
cwtl
repnz
cmp
cmp
mov
pop
add
fisttps
mov
adc
aas
or
addb
push
xor
jb
outsl
add
std
xchg
rclb
dec
adc
dec
fmull
lret
inc
lea
xchg
fwait
mov
mov
xlat
out
repz
insl
cmpsl
cmpsl
cmpb
arpl
les
dec
push
adc
in
ja
ss
pop
in
inc
sub
ficoml
gs
inc
jge
add
or
daa
hlt
dec
add
jl
adc
cmpsb
subb
repnz
int
clc
sub
jnp
push
xor
xchg
jae
mov
stc
xor
dec
cmpb
out
les
mov
mov
in
xor
mov
ss
cs
mov
pop
push
jmp
pushf
xchg
sarb
dec
pusha
jb
mov
or
insb
cmp
jp
push
jne
fnsave
mov
and
xchg
mov
mov
clc
push
adcl
inc
xchg
mov
dec
scas
dec
jo
shll
cmp
cmp
push
das
xchg
pop
ss
std
popf
aam
fs
popa
add
and
add
mov
push
xor
jmp
ret
leave
stos
fmull
test
inc
pop
or
push
mov
imul
test
jbe
es
mov
in
notb
or
lea
jp
ret
sti
adc
pop
cmp
sbb
ss
sub
out
rolb
jnp
call
xor
fnstsw
pop
push
cmp
xlat
push
jbe
inc
push
mov
adc
adc
je
test
fwait
add
icebp
mov
cmp
lock
leave
ljmp
jno
inc
add
pop
push
call
push
mov
lret
push
lret
or
ljmp
stos
xchg
stos
jp
adc
xchg
ret
inc
push
les
push
icebp
dec
jb
aaa
add
popa
push
cmp
adc
adc
out
push
mov
inc
daa
out
xor
movsb
data16
shrb
dec
imul
cmpsl
fmulp
hlt
add
jo
add
rcll
inc
and
or
jge
enter
out
test
call
jb
add
sbb
clc
popf
jnp
or
lds
sbb
lahf
rcr
lahf
jne
jecxz
fistpl
ds
add
adc
pop
into
add
cltd
mov
pop
stos
sub
xorl
cmpsb
xchg
dec
es
sub
jb
mov
in
ljmp
mov
out
cmpsb
imul
pop
xor
or
mov
lock
call
add
popf
testb
shll
add
or
or
cld
hlt
push
cli
lds
push
mov
insb
mov
out
mov
daa
ret
jge
or
lcall
leave
lret
sbb
inc
loopne
adc
and
sbb
xor
push
xor
cmp
mov
adc
xchg
in
inc
mov
imulb
into
cmp
mov
stos
pop
int
lock
sub
xor
aam
mov
leave
cmp
mov
js
jmp
inc
mov
aad
mov
or
mov
pop
popa
cwtl
sub
cmp
arpl
sbb
mov
mov
dec
aas
push
xchg
cli
xchg
cwtl
cmp
adc
adc
push
lods
dec
aaa
outsl
or
fisttps
imul
sbb
sahf
fistpl
adc
dec
je
cmp
je
sbb
fucomi
inc
imul
sbb
icebp
divl
cwtl
test
pop
add
enter
lret
xchg
jns
adc
fwait
inc
gs
add
negb
clc
push
push
shl
push
cmp
add
dec
dec
iret
popa
mov
sbb
cltd
jno
cld
outsb
loop
stos
outsb
sti
addr16
repnz
std
pusha
into
arpl
pop
mov
sub
add
les
sti
sub
pcmpeqw
mov
and
jae
aam
ds
sarb
pop
popl
cmp
adc
jae
outsl
xchg
cmpsb
dec
shlb
les
adc
pop
fistps
jg
outsl
aad
dec
jne
aaa
loopne
iret
mov
leave
rcl
sub
pop
jbe
in
movsl
aas
sbb
inc
mov
mov
imul
mov
rclb
lods
fstpl
sub
bound
xor
cmp
mov
xlat
jbe
std
pop
pop
push
xchg
sbb
cmp
and
mov
or
cmp
aaa
leave
ds
mov
std
popa
jns
shl
mov
mov
insl
xor
mov
test
mov
out
jns
roll
xchg
mov
push
in
lock
or
lds
arpl
xchg
xor
mov
add
pop
mov
cs
test
xor
adc
push
std
and
push
ds
icebp
pop
rorb
test
ja
repnz
outsl
clc
cmp
xlat
mov
lcall
je
dec
mov
mov
xchg
push
jl
lods
lahf
test
pushf
fwait
jmp
jmp
dec
jecxz
mov
shll
dec
push
push
pushf
aaa
mov
repnz
insl
and
jecxz
sub
addr16
adc
mov
loop
dec
and
and
and
mov
dec
xlat
pusha
dec
addr16
inc
pop
and
sbb
orl
jns
jns
jecxz
mov
in
pop
jb
mov
pop
pushf
pushl
sbb
cmp
xchg
and
cmp
sbb
imul
pop
pop
mov
adc
adc
mov
inc
rclw
ret
aas
mov
xchg
mov
cmp
ljmp
stc
mov
addl
cmp
decb
fnstcw
movsb
fcmovbe
movsb
ja
or
adcl
ret
mov
pop
das
pop
push
or
dec
xor
test
filds
fistpll
sub
mov
test
or
lahf
imul
push
jmp
push
insl
and
pop
mov
mov
sub
iret
mov
ja
fstpl
out
sar
push
mov
out
xlat
ja
mov
out
dec
out
aad
mov
cld
sbb
mov
test
lods
in
test
xor
int3
repz
mov
push
or
stos
inc
mov
inc
pop
pop
jp
pop
sbb
add
cs
in
adc
arpl
mov
jnp
push
jge
xor
and
outsl
sub
adc
fstpt
mov
and
xor
jmp
divb
xor
xorl
addb
imul
sub
stc
inc
push
test
xchg
jle
cs
gs
movsl
in
clc
stos
sbbb
pop
bound
push
adc
push
mov
imul
in
cmp
and
cmp
cmp
mov
rcrb
shrl
test
jecxz
aad
inc
subl
xor
negl
arpl
dec
mov
aad
fsts
jmp
add
dec
fwait
dec
into
xchg
mov
idivl
loopne
push
dec
cmp
ljmp
mov
push
repz
lret
outsb
jecxz
inc
int3
dec
dec
push
adc
adc
xchg
std
fistps
movsl
lea
sub
leave
cmpsb
or
sub
lods
jbe
jmp
mov
jb
adc
cmp
push
out
hlt
jb
bound
ret
addb
adc
adc
cwtl
out
cmp
xorl
nop
stos
outsl
mov
std
jb
mov
repz
pop
jbe
xor
mov
pop
or
jo
addr16
test
or
scas
hlt
sub
lods
mov
loopne
fwait
clc
hlt
mov
or
arpl
ljmp
into
icebp
sub
and
sbb
dec
push
mov
imul
sbb
mov
xchg
clc
mov
repnz
pop
cltd
mov
icebp
repnz
lret
mov
jbe
mov
inc
into
aam
xchg
aam
inc
push
in
repz
sets
xor
lcall
xchg
pop
movsl
sbb
lea
fcom
fstpl
adc
rol
imul
and
clc
mov
xchg
or
test
lret
pusha
scas
mov
js
hlt
into
cmp
lods
inc
inc
outsl
pusha
adc
cmpsb
push
mov
test
shl
sarb
xchg
mov
pop
addb
call
mul
ss
jmp
repnz
adc
xchg
mov
fdivl
dec
cmpl
jmp
scas
mov
popa
ds
push
fbld
aad
jb
xlat
fstps
pop
adc
push
sahf
outsb
aam
dec
sub
xor
imul
dec
sahf
insb
cmpsl
popf
jmp
sub
or
addl
mov
repnz
dec
into
jae
adc
cmp
cli
into
mov
fldt
dec
popa
cmp
push
out
sub
jbe
inc
mov
push
inc
sub
mov
jb
inc
sub
jb
lods
adc
jmp
cmp
aam
daa
les
dec
cmp
mov
jne
fcmovne
stos
movsl
mov
ljmp
pusha
rcrb
iret
in
fistpl
scas
push
fs
lret
pushf
jg
xchg
insl
mov
es
idivb
add
jle
mov
test
jb
mov
addr16
pop
arpl
jo
xchg
and
pusha
je
mov
jnp
xchg
xchg
dec
mov
jmp
push
ror
shrb
pop
dec
ds
push
adc
push
mov
mov
daa
scas
sbb
dec
pop
loope
jne
dec
and
test
mov
stc
mov
cmp
pop
pop
subl
shll
jbe
mov
adc
fs
lret
loop
shl
lods
or
dec
pop
and
pop
loopne
mov
jo
fsubrl
sti
daa
sub
loop
aad
aam
sub
add
add
pop
test
or
pusha
fidivrl
in
inc
jecxz
jns
mov
cmc
jle
jns
mov
inc
clc
add
push
pop
enter
jmp
lret
test
pop
rol
push
dec
shrl
rolb
xor
mov
dec
notl
scas
push
push
out
push
cmpsl
mov
push
jge
nop
pop
shlb
ss
cld
mov
lds
mov
fidivs
es
sub
ret
and
or
stc
push
data16
or
insl
mov
fnstcw
clc
negb
and
sti
lahf
nop
fs
lods
mov
fiaddl
mov
cltd
cld
ret
mov
out
dec
in
sarb
test
loopne
je
lahf
cltd
lock
or
mov
mov
mov
aad
mov
fadd
push
mov
aas
jb
mov
hlt
cmpb
xchg
mov
inc
dec
jae
movsl
xchg
push
sbb
pop
inc
xchg
pusha
inc
xor
xor
orl
push
add
cltd
insb
movsb
jg
vandnps
pushf
data16
loope
ss
fnstcw
subb
movsl
out
ja
nop
add
and
and
jge
es
push
mov
fcompl
divb
pop
jl
cmpsl
jae
fsubl
push
out
jp
popf
mov
cmp
movsl
jle
je
cmp
pushf
aaa
adc
add
mov
test
aas
jno
cli
lods
jae
subl
mov
rclb
cwtl
sbb
iret
xor
fs
xchg
dec
xor
inc
js
test
outsl
arpl
pop
jmp
adc
lahf
jmp
movsb
jae
pusha
push
das
mov
mov
push
jmp
sahf
push
or
inc
test
push
rorb
stos
push
or
cli
pop
sbb
or
ljmp
cmp
mov
loopne
loopne
push
sub
cmp
lock
adcb
or
push
push
jmp
jmp
stos
pop
jne
in
push
or
nop
loopne
sub
lea
daa
clc
adc
in
sub
add
sub
xchg
ljmp
mov
xor
negl
js
adc
sbb
push
mov
sbbb
push
and
sahf
lods
clc
mov
pop
mov
sti
xor
je
jae
aas
jg
mov
or
leave
iret
dec
jmp
inc
les
ja
je
jle
mov
jg
and
dec
movq
mov
inc
cmp
inc
rorl
lds
sub
cltd
inc
xor
ljmp
mov
notl
xor
mov
repz
push
outsb
sbb
into
or
push
jmp
pop
icebp
adc
ret
arpl
jp
dec
pushf
cmp
sbb
jmp
sbb
rclb
pushf
cmp
out
jnp
stc
icebp
idivb
ret
sbb
fsub
sub
and
in
or
std
xor
pop
js
in
inc
or
imul
std
pop
fwait
add
sbbb
mov
aad
das
and
clc
frstor
cmpsl
lcall
loop
test
xor
movsl
pop
inc
cmc
sbb
jbe
mov
xchg
mov
sbb
pusha
mov
pop
loop
dec
hlt
clc
cmp
mov
jo
popa
dec
pusha
lods
xchg
dec
rorl
mov
cmpl
imulb
cmc
jecxz
aad
out
and
loop
frstor
xchg
cld
xor
sbb
stc
jo
test
ds
leave
sti
xchg
xor
call
lea
sub
push
out
cltd
cmp
mov
test
jecxz
jno
out
mov
mov
shl
outsl
pusha
add
jo
jno
inc
mov
stos
add
and
fdivl
daa
clc
cmpsb
mov
inc
pop
dec
je
vcvttpd2dqx
adc
sub
stos
and
push
mov
cmpb
push
mov
xchg
jg
xor
or
ret
test
jle
iret
pop
outsl
mov
icebp
mov
mov
lods
sbb
sub
icebp
jne
and
xor
xor
pop
nop
clc
jecxz
adc
imul
shll
push
inc
mov
push
pop
fadds
mov
push
cmpsb
jl
xor
out
push
pop
mov
lea
xchg
mov
sbb
mov
adc
lea
outsl
stos
into
std
jnp
lcall
aaa
out
pop
xchg
mov
lahf
cmpsl
cmp
scas
sub
or
inc
popa
sarb
popa
mov
push
cmp
fs
insl
test
lret
fisubrs
pop
sbb
enter
pop
xchg
jns
int3
fisttpl
int3
push
popf
call
cmp
xchg
fildl
sub
cmp
and
insl
pop
in
mov
jns
jmp
adcb
inc
inc
jb
mov
cltd
lret
inc
adc
rorb
push
sbb
xchg
int
add
inc
xchg
sbb
xchg
push
cmp
into
insb
mov
jp
ljmp
xchg
sbb
fstl
xor
mov
jle
ret
xor
loop
or
lods
push
gs
flds
dec
dec
je
enter
je
mov
add
mov
mov
sbbb
mov
sbb
mov
js
xchg
push
xorl
psadbw
out
adc
mov
adc
fcoml
mov
dec
aam
fnstenv
fsubrs
mov
inc
mov
addl
cmp
lahf
dec
jbe
decb
aam
nop
popf
pop
lcall
or
sub
add
pop
lcall
aad
je
xchg
cld
xchg
or
inc
lret
divl
popf
jae
mov
scas
mov
jb
dec
mov
xchg
dec
or
into
adc
mov
pop
lock
mov
or
sahf
sbb
mov
lods
ss
jmp
loop
mov
lahf
jb
insl
or
aaa
and
push
fldenv
jb
fisubrl
and
scas
mov
xor
std
adc
pop
dec
xorl
dec
insb
in
dec
inc
adc
sub
dec
imul
test
iret
and
leave
ficoms
out
rcrl
mov
pushl
and
addr16
rcrl
mov
pop
lods
movsl
imul
inc
sti
mov
clc
or
jecxz
inc
inc
ret
xor
mov
cltd
nop
repnz
xchg
nop
push
pusha
enter
adc
adc
movl
add
movsl
fcoms
imul
in
cmp
es
sbb
push
adc
lock
dec
inc
jbe
xor
push
xchg
sub
push
loope
leave
push
adc
movb
push
outsb
scas
mov
ret
jmp
fdivl
enter
inc
adc
push
xor
cmpsl
dec
push
mov
shrl
cwtl
mov
daa
fnstcw
add
cltd
fnstcw
cmpsb
push
and
xor
xchg
xchg
sub
ja
stc
stos
and
je
in
add
jp
fsubs
jle
xchg
orb
mov
mov
sub
pop
mov
dec
or
pushf
scas
pop
call
clc
jne
sub
or
sbb
sarl
pop
xchg
fbld
xchg
xor
popf
mov
mov
fldt
push
out
clc
xchg
or
pop
stc
adc
das
inc
mov
push
xchg
push
int3
daa
fdivp
inc
int3
dec
jmp
rcll
cld
mov
in
push
mov
sbb
push
mov
mov
imul
rcll
popa
mov
and
subb
push
mov
stc
mov
aas
mov
fcmovb
mov
cli
push
int
hlt
adc
stos
lcall
pop
cmc
inc
sub
jnp
xor
ret
test
jl
repz
mov
mov
mov
inc
leave
loope
out
insb
xchg
addl
in
fldl2e
jnp
sub
inc
lret
sbb
sti
xchg
pusha
xlat
add
js
push
lahf
mov
popf
ja
sbb
adc
push
or
daa
cmp
pop
push
sahf
or
cmpsb
sbb
shll
mov
or
rcll
aaa
add
mov
push
shl
movsl
ret
test
xchg
jnp
xchg
adc
jp
lcall
negl
sub
mov
jecxz
in
sub
add
sahf
dec
pop
icebp
sub
rcll
pop
cli
sarb
mov
in
rcrl
mov
nop
inc
int
adc
test
sub
out
push
inc
fs
mov
push
sub
xchg
xchg
push
data16
push
or
lods
sub
and
rorb
jle
ljmp
push
stc
fbld
mov
dec
inc
cmp
cmpsb
leave
push
mov
adc
into
xor
inc
inc
adc
in
lret
mov
sbb
mov
push
je
pop
mov
push
aad
movsl
ja
push
sub
jmp
dec
dec
xor
fldt
xor
sahf
mov
loope
dec
mov
outsl
in
mov
xorb
adc
mov
das
cmp
push
mov
xlat
rclb
xchg
movsl
cmp
sub
popa
push
sbb
les
dec
mov
xor
sbb
lcall
sbb
pushf
test
sbbl
or
dec
jmp
rcrl
loop
cli
mov
jae
outsl
in
test
divl
icebp
rcll
sub
sbb
cmp
inc
mov
pop
and
test
jbe
enter
lret
inc
pop
pop
pushf
mov
xlat
add
ret
les
pusha
sub
pop
xchg
fisubrl
jp
stos
fs
push
xor
loope
mov
sbb
cld
jno
xchg
jle
out
cli
fisttpl
sub
dec
clc
popf
push
cltd
add
and
aaa
arpl
rcrl
aas
mov
mov
mov
mov
add
insb
jmp
shr
mov
cmp
cld
push
outsl
fnstenv
xor
sbb
std
mov
hlt
ds
nop
sub
cli
push
ljmp
cmp
mov
push
cld
shl
jnp
nop
jg
push
xor
mov
or
push
fistl
movsb
cli
mov
mov
stc
outsb
data16
insb
cwtl
loopne
sub
xchg
movsb
sbb
faddl
mov
pop
mov
cmp
push
pop
icebp
mov
cltd
and
xor
in
mov
daa
push
mov
ljmp
lret
fs
movsb
xchg
and
lret
inc
adc
pop
into
frstor
or
aaa
popa
inc
add
scas
leave
xchg
outsb
scas
mov
jle
add
mov
in
loop
inc
ljmp
fcoms
or
hlt
dec
jns
and
cmp
jmp
cmp
pop
mov
inc
push
mov
or
ficomps
test
inc
adc
inc
mov
in
mov
sbb
mov
jns
inc
shlb
xor
push
aad
icebp
sbbl
add
loopne
mov
and
push
cmc
adc
and
sbb
insb
inc
and
xor
addr16
les
insb
or
mov
push
mov
xchg
xchg
add
push
mov
jg,pn
adc
or
pop
movhps
in
shl
dec
imul
sbb
fildl
ret
push
xchg
test
jg
sarb
inc
es
clc
int3
and
dec
or
xor
push
mov
mov
mov
push
add
xchg
fstp
subb
xor
cmpb
imull
xorl
clc
fwait
add
outsb
pop
jp
push
mov
das
ds
gs
je
dec
and
dec
roll
mov
lods
lret
jne
not
test
data16
push
sub
sahf
fdivrs
or
fucomi
in
sub
rcr
dec
jb
pop
mov
dec
xor
mov
or
lea
js
mov
in
stc
gs
icebp
psubw
push
jae
mov
sub
xchg
imul
adc
ds
xlat
push
mov
lods
shlb
cli
and
push
sahf
fcoms
ret
rorl
dec
movsb
mov
inc
or
insb
fistl
fwait
aad
lcall
sahf
add
inc
sbb
out
and
in
and
jae
pop
fidivl
loop
fcoml
inc
mov
cld
sarl
mov
pop
rclb
sbb
jb
insb
fcoms
jg
call
fadd
test
lcall
repz
sti
pop
movsl
andl
push
push
sub
stos
mov
dec
add
xchg
or
fsts
inc
ror
cld
dec
popa
and
sbb
mov
stos
mov
dec
xchg
cwtl
stc
jns
movsl
lahf
popa
test
mov
jmp
out
jle
mov
out
mov
add
hlt
into
pop
push
xor
mov
movsb
mov
push
into
adcl
adc
cmpsb
stos
dec
ja
push
adc
cmp
and
insl
push
adc
lahf
lods
stos
movsl
mov
add
rcll
jmp
xchg
leave
jg
lock
or
and
daa
icebp
insb
bound
mov
cs
stc
cmpsb
add
lret
in
mov
leave
mov
mov
sbb
xchg
out
push
mov
icebp
push
adc
xor
mulb
mov
shll
mov
cmp
hlt
gs
cltd
and
xchg
gs
xor
add
xchg
lea
mov
xchg
lock
mov
sub
jo
lret
lahf
fcompl
cmp
inc
stc
rclb
fcoml
mov
icebp
cmc
xor
mov
mov
jne
sub
fsubl
ss
cmp
sub
adc
push
std
rorb
jo
jle
cmpsb
jle
test
out
call
mov
test
or
popl
gs
std
les
pop
out
sahf
sub
divb
out
dec
inc
ds
iret
test
cld
dec
sbb
mov
xchg
stc
into
push
sub
sbb
addr16
add
push
sahf
pop
dec
cmp
sub
ret
add
mov
inc
sub
shll
fmul
mul
je
shrb
mov
in
xorb
outsb
rclb
push
icebp
xchg
push
in
push
jp
dec
imul
dec
in
pop
cmp
call
sub
mov
xchg
mov
push
shl
mov
lea
leave
sbb
sti
and
add
xor
inc
popf
jb
inc
ja
jge
in
sbb
jl
mov
xchg
mov
imul
mov
mov
xchg
pop
cmp
andb
mov
leave
mov
jne
push
mov
lret
dec
shl
nop
sbb
pop
jo
shlb
push
mov
dec
mov
retw
stos
push
adc
pop
sbb
not
call
out
mov
dec
mov
fsubrs
fsubrl
cld
xchg
outsl
add
mull
mov
push
loope
stos
adc
aam
cmp
arpl
test
push
int
icebp
jo
sbb
sub
lret
and
jbe
roll
shr
test
sbbl
mov
add
sbb
adc
inc
sub
jl
jnp
mov
enter
shr
call
aaa
in
mov
addr16
and
out
clc
das
or
fwait
mov
cmpl
adc
shrl
sarl
adc
mov
cmp
push
icebp
movsl
mov
sbb
dec
lock
mov
pop
sub
loopne
insl
js
sbb
loop
cmpsb
and
mov
jecxz
pop
js
mov
inc
mov
insl
and
clc
inc
sbb
xchg
aad
mov
aaa
jmpw
ja
addr16
and
pop
adc
lock
test
das
sub
test
cwtl
add
inc
ficoml
insl
lds
aas
lcall
outsl
jns
popf
cltd
test
mov
in
xor
pop
lock
jnp
and
dec
mov
cwtl
out
imul
xor
lock
rcr
repz
jb
loopne
in
jmp
sti
or
popf
mov
jmp
xorl
dec
pop
pop
out
jns
lods
mov
xor
push
pop
fisttps
mov
js
insb
imul
push
inc
push
negb
xlat
fistpll
lds
out
fdivr
jge
inc
inc
fwait
outsl
sti
pop
push
xchg
nop
arpl
mov
fsubp
ret
push
shll
test
inc
inc
jmp
stc
add
push
sbb
jge
fmuls
add
and
movl
fsts
movsl
xor
stos
subb
mov
ljmp
cmc
test
in
adc
mov
mov
mov
dec
and
movsb
cmp
das
cmpsl
jmp
mov
push
loope
ret
int
mov
mov
jb
test
bound
xchg
sbb
mov
and
lcall
cltd
in
bound
cmp
or
fnsave
or
pop
icebp
ret
cli
into
cmp
xchg
inc
pop
bound
test
test
xor
inc
psraw
jns
jno
inc
clc
inc
sbbb
mov
and
test
sahf
mov
mov
fiadds
fistpll
xor
dec
dec
data16
cmp
mov
mov
add
mov
fistl
cmpsl
cmp
inc
jg
lahf
jo
jl
mov
iret
mov
sub
jmp
mov
test
adc
ret
cmp
bound
lds
aas
mov
push
and
dec
push
fsubrs
sub
mov
test
sbb
rcrl
cmp
xchg
inc
cli
or
outsb
fldl
xchg
pop
out
bound
movsb
popf
test
sub
add
jg
imul
jge
cmp
cmp
dec
mov
pop
xchg
fnsave
shl
lea
shrb
idivb
mov
in
xor
enter
sub
icebp
add
fs
dec
mov
aaa
sti
dec
addr16
filds
cmp
inc
and
jbe
testb
mov
and
push
push
das
and
inc
fmul
into
add
mov
push
cld
ret
inc
sub
es
inc
inc
pop
pushl
cmpsl
mov
or
adc
pop
cmp
pusha
cmp
sub
mov
out
and
lods
cli
repnz
push
xchg
mov
cli
or
mov
sbb
fwait
mov
xor
push
jae
stc
cs
pop
mov
rol
inc
mov
addr16
gs
popa
mov
shll
xchg
or
rol
fisttpl
push
mov
pop
daa
cmp
and
sbb
in
in
daa
imul
mov
enter
movb
sbbb
dec
ja
out
cmpsl
and
mov
add
pop
mov
addr16
and
mov
and
mov
cmc
imul
js
popa
cmp
jnp
lcall
dec
sbb
cli
mov
mov
push
filds
in
inc
dec
dec
mov
mov
inc
mov
iret
dec
mov
mov
mov
xor
xchg
dec
pushf
push
loope
cmp
fs
mov
leave
jne
out
jl
sbbb
mov
mov
add
dec
fdivl
sub
cmpsb
push
and
sar
cmp
repz
and
in
mov
cmpsl
lods
mov
loope
inc
ds
dec
cmp
or
and
push
gs
ror
add
or
pop
mov
mov
sahf
clc
mov
fadds
and
das
idivl
sbbl
pop
mov
pusha
add
and
out
mov
std
addr16
dec
gs
inc
mov
movsl
jo
and
sbb
or
in
mov
pop
or
adc
mov
idivb
lods
test
insl
mov
lea
pop
jbe
inc
pusha
cli
ret
dec
or
sbb
mov
sub
sbb
arpl
adc
xlat
or
inc
fsubrs
add
addr16
mov
cs
push
rorb
mov
stos
jb
jo
pushw
sbb
xchg
insl
sub
push
mov
pop
cmp
mov
addl
nop
jge
xlat
jne
cmpl
sar
aaa
scas
mov
inc
mov
sub
shr
cmc
test
jbe
daa
dec
les
jmp
mov
xchg
pop
outsl
adcb
andl
dec
xchg
mov
stos
adc
pop
fidivrl
pop
or
sbb
push
or
push
push
mov
push
out
mov
pop
mov
add
ljmp
aaa
jns
mov
test
movsb
movsl
mov
fwait
inc
sub
sub
arpl
xor
in
js
repz
inc
iret
xor
and
fmull
imul
fcmovnb
lds
js
daa
bound
int3
cmpsb
shl
lahf
in
jmp
dec
add
js
inc
scas
stos
dec
push
into
mov
int3
mov
ret
dec
xchg
xor
scas
xchg
mov
or
into
mov
loop
aad
hlt
test
sti
mov
or
jg
or
mov
imul
lret
and
sbb
jl
cli
dec
addr16
sub
js
mov
xchg
sbb
repz
dec
cld
pop
fisubs
sarb
sarb
push
lods
adc
loopne
sbb
out
mov
jg
dec
sub
inc
xchg
mov
inc
inc
xor
das
mov
jle
ds
push
add
jp
int3
arpl
call
fisubl
ljmp
lock
lcall
sbb
fisubrl
cs
js
enter
jbe
lret
test
push
pop
mov
popa
ss
ret
cld
pop
cmp
cmp
jbe
ret
mov
jo
jo
jno
sbbl
movsb
iret
inc
das
jg
mov
pop
mov
ja
xchg
loop
mov
inc
sbb
cltd
shrl
loopne
in
jae
or
imul
pusha
lea
xor
inc
std
adcl
sub
mov
rorb
or
mov
jge
pop
lods
fadd
repnz
pop
jno
xor
sub
push
insl
subl
dec
cmp
out
test
add
loop
add
push
das
ror
scas
xchg
popa
lds
dec
add
lock
add
add
dec
pusha
cmp
loop
jno
in
xchg
hlt
roll
cmc
test
mov
or
xchg
pusha
mov
cmp
aas
and
lret
sub
lock
orl
add
cmp
test
xor
mov
call
aas
mov
outsb
add
inc
in
dec
push
repz
jae
shll
pop
bound
cmp
pop
in
inc
xchg
testl
das
lods
clc
pop
outsb
lret
leave
inc
jl
xor
addl
repnz
sbb
aad
call
push
xchg
and
notb
les
inc
ljmp
jle
call
lods
out
jo
out
mul
pop
inc
inc
sbb
pop
outsb
mov
cmp
dec
rorl
sti
mov
add
jecxz
inc
push
cmpsl
push
in
jg,pn
aaa
popf
add
inc
add
ret
ss
mov
stc
inc
dec
lret
xor
call
dec
adc
dec
mov
dec
pusha
xlat
inc
jns
inc
cmpsl
movsl
sbb
inc
adc
xorb
push
dec
out
sarl
and
fildll
dec
inc
dec
ret
popl
out
jbe
test
jge
into
ss
fnstsw
and
rcll
mov
jle
xchg
pop
cmc
mov
sub
push
cmp
dec
fdivrl
jnp
jo
mov
cmp
or
je
in
pop
mov
xor
ss
jmp
call
mov
jo
and
loope
aaa
dec
sarl
jnp
and
daa
cmpsb
fldcw
fldcw
sub
jns
les
cmp
addb
sbb
lds
push
push
mov
mov
fmuls
repnz
scas
pop
xchg
subb
mov
cmp
jmp
test
pop
dec
lods
cmpsl
adc
push
test
mov
xchg
outsb
cmp
jnp
daa
inc
and
adcl
fdivr
int
stos
inc
pop
jns
dec
stos
aaa
stc
arpl
jp
in
insl
nop
fsubrs
scas
add
fwait
cwtl
inc
icebp
lods
mov
and
cmp
hlt
rorl
out
xchg
out
aas
rcrb
pop
add
enter
xchg
cltd
xchg
leave
push
add
push
sbb
rcl
lds
xchg
enter
lods
and
aaa
pop
inc
out
testb
call
pushf
or
xchg
rcl
clc
push
jo
shrb
cld
inc
ljmp
stc
xchg
lret
out
fimuls
and
jnp
cwtl
les
cld
mov
or
push
stos
mov
cs
inc
gs
sub
fimull
push
aaa
repz
pop
loop
inc
mov
aaa
imul
xor
mov
aad
imul
lods
scas
movsl
pop
adc
xchg
sbb
lods
imul
adc
xchg
mov
lea
mov
mov
lds
dec
imul
push
or
dec
repnz
clc
or
cmpsb
stc
es
dec
shll
mov
pop
mov
and
mov
call
mov
add
vpunpckhwd
je
jne
das
cwtl
stos
out
mov
mov
dec
int3
pushf
sti
adc
cmc
nop
or
gs
shlb
std
paddusw
loop
ljmp
gs
inc
xor
or
stos
cld
aaa
add
xchg
call
loopne
mov
xor
cmp
mov
cmp
or
out
mov
mov
test
pop
out
shlb
dec
arpl
rcrb
xor
enter
push
adc
out
push
pop
mov
adc
or
adc
pop
fs
out
pop
nop
xchg
mov
clc
in
pop
lret
and
ds
testb
mov
shll
fidivrl
clc
stc
js
or
mov
dec
in
dec
inc
mov
adc
sti
mov
hlt
icebp
xchg
aad
iret
jmp
push
cld
lock
xchg
adc
and
push
imulb
jle
repnz
dec
xorl
or
imul
mov
aaa
mov
lahf
dec
sbb
jbe
push
enter
xchg
xchg
sub
xchg
out
test
mov
aaa
paddd
sbb
scas
fnsave
lahf
pop
sbb
mov
pusha
inc
jbe
and
mov
inc
out
ret
push
adc
es
or
push
repnz
sbb
cmp
cmp
loop
test
lods
icebp
aam
sub
out
adc
test
lods
mov
xchg
in
movsl
test
gs
mov
test
xchg
inc
ficomps
mov
xor
sub
imul
mov
inc
ret
xchg
xor
icebp
cmp
xchg
in
jne
subl
js
je
in
out
int3
adc
fwait
push
add
mov
sub
jp
mov
inc
adc
out
lcall
outsl
sbb
or
faddp
dec
fsubs
push
fidivs
iret
sbb
push
fiadds
lock
add
sbb
rorb
mov
scas
jl
imul
mov
shl
out
fidivrl
jne
sbb
aam
mov
sti
push
bound
cmp
mov
loopne
push
push
pop
fstl
cld
cli
mov
repz
les
mov
mov
jne
gs
rclb
mov
mov
jo
cmp
xchg
and
mov
mov
out
mov
sahf
notl
cs
mov
loop
aad
popa
fwait
dec
mov
push
xchg
lds
sbb
mov
dec
mov
in
in
sbb
sbb
push
mov
push
fisttpll
bound
icebp
mov
push
push
mov
insb
and
mov
dec
jb
lods
sub
mov
add
pop
repnz
inc
jns
cli
sbb
fistps
jns
sarl
jbe
mov
insb
push
lret
mov
xor
cmp
std
movsl
or
jne
stc
cmpsb
adc
mov
rorb
and
dec
iret
mov
dec
add
insl
pop
lds
inc
xchg
addr16
mov
aaa
or
data16
mov
fsubl
call
pushf
pusha
aam
cmp
aas
push
in
fcomip
jecxz
push
sahf
rcr
andl
xor
inc
xchg
rdpmc
sbbl
call
mov
add
sub
cld
mov
mov
and
inc
leave
push
mov
popa
mov
and
push
testl
sub
inc
ljmp
imul
in
test
xor
dec
adc
cltd
xor
or
popa
adc
xchg
ja
ret
pusha
data16
mov
decl
push
fsubrs
cmp
sub
incl
pop
into
inc
jno
lods
fisubs
add
jg
lock
dec
std
cmpb
inc
ret
sti
loope
sbb
lret
aaa
sti
in
sti
movsb
adc
adc
out
sub
sahf
js
cmp
testl
test
xchg
out
and
mov
sbb
xchg
fcmovnb
fisttps
adc
xor
out
roll
xchg
xchg
not
outsl
sub
adc
fsubs
push
jae
xchg
dec
fnstcw
fwait
repnz
fcomp
push
xchg
mov
mov
adc
jl
fldenv
movsb
mov
rcr
lcall
cmpl
mov
push
scas
fyl2x
addr16
pop
nop
mov
test
mov
loop
shrl
jp
sub
jnp
stos
jmp
cmp
adc
add
sbb
add
jno
or
fwait
sub
mov
call
scas
xor
in
cmp
push
cld
fsubrl
cmpb
les
fldl
shlb
cmp
or
aas
mov
out
push
sub
cmp
dec
imul
sub
sub
add
popf
ror
fnsave
arpl
fldcw
mov
jg
jmp
push
clc
shlb
xchg
xorps
sub
xor
repnz
sahf
stc
vphsubdq
mov
pusha
adcl
push
mov
fs
sub
insb
mov
leave
leave
adc
mov
xchg
js
adc
lret
es
fdivrl
arpl
fnstsw
add
out
or
imul
bound
es
lock
ljmp
cmpsb
pop
out
xorl
lds
in
fisubrs
jno
dec
fnstsw
lcall
aam
jmp
js
xchg
and
dec
xchg
adc
mov
fmull
in
call
sbb
xor
pop
outsb
inc
adc
pop
lock
dec
cwtl
push
loope
repnz
lret
add
and
mov
add
sub
lahf
pop
or
fstl
lods
pop
push
mov
cmp
ljmp
mov
xor
shl
lea
outsl
icebp
sbb
je
mov
pop
sub
shrb
cs
xchg
mov
repz
or
cmp
dec
jge
orb
js
ret
ss
pop
sub
movsb
jp
pop
dec
imul
out
and
mov
or
add
jo
dec
jle
in
fadds
test
jne
mov
xor
or
fnstcw
mov
inc
cmp
imul
stos
fdivr
clc
loop
pop
rcll
ja
sahf
inc
leave
popf
cld
adc
fnsave
ss
in
xor
dec
call
lods
pop
repnz
or
cs
cmp
mov
jl
adc
jo
mov
add
adc
and
dec
push
repz
sbb
cmpsb
lods
push
adc
mov
jmp
es
xchg
mov
test
pop
and
and
pop
sub
adc
js
test
sbb
dec
outsb
mov
sub
out
dec
cmp
sbb
popa
or
rolb
and
dec
jl
jle
jmp
cmp
pusha
or
mov
arpl
xor
mov
loope
push
add
xchg
xchg
xchg
dec
sbb
sub
push
inc
or
fisubs
add
mov
popf
sub
sbb
out
dec
mov
test
cli
mov
push
add
inc
push
iret
and
xchg
cmpsl
cmp
mov
jmp
ss
push
jmp
movsb
mov
ds
or
pop
addr16
je
clc
xrelease
mov
add
inc
cmc
hlt
push
xchg
dec
stc
shl
mov
inc
loop
xor
leave
es
es
adc
pop
lock
divb
xor
ja
lea
data16
mov
xchg
jle
add
mov
dec
das
repnz
xor
xor
int3
mov
add
jge
and
mov
push
xchg
icebp
fistpl
fimuls
icebp
or
shll
adcl
sbb
push
xor
std
mov
ret
or
in
pop
cmp
xor
xor
push
scas
in
pop
stos
pop
fdivrl
cwtl
repnz
xor
fs
pop
push
xchg
outsl
notb
sub
in
or
xchg
cmpsl
fwait
mov
shrb
call
pop
jge
aad
lret
adc
push
sub
or
sub
push
cmpsb
cmp
in
inc
dec
jae
jno
popf
ds
cmc
mov
mov
xor
ret
enter
or
leave
clc
in
dec
call
scas
and
jbe
dec
lds
mov
js
decb
pop
pop
test
cmp
jnp
test
sbb
or
jne
dec
add
pop
popf
xorl
out
js
in
and
aad
fnop
inc
mov
cltd
hlt
lret
cli
out
lods
pop
outsl
fisubrl
adc
sub
inc
push
imul
fcoms
lods
maxps
mov
stc
roll
push
lock
pop
push
pusha
loopne
fdivrl
push
mov
in
add
lahf
pop
flds
je
aas
xor
jge
mov
rcll
fwait
adc
and
test
add
out
xchg
sbb
sbb
shrl
stc
sbb
aas
cwtl
mov
push
xor
clc
insl
je
inc
inc
cmpsl
jp
sbb
iret
mov
or
fbld
rcrl
pop
frstor
insb
jbe
and
dec
cld
cs
cmpl
xchg
bound
idivl
push
inc
fstpt
mov
add
in
pop
mov
insl
into
mov
jmp
es
jne
sbbl
push
es
daa
xor
test
sbb
lds
les
mov
imul
add
nop
sub
loope
or
test
lds
xor
andl
sub
inc
xchg
ds
cmp
add
pop
pop
mov
inc
les
jge
rolb
mov
sbb
lea
push
int3
lock
jl
sub
out
mov
addl
aaa
in
jae
mov
add
addr16
adc
sbb
dec
test
es
sarl
xchg
inc
push
sar
inc
xor
dec
sbb
mov
mov
clc
jl
lgs
push
arpl
scas
cmpb
insl
adc
jns
adc
sbb
mov
mov
push
cmp
repz
cmp
and
shl
std
xchg
js
mov
mov
outsb
pop
repz
push
cld
in
pop
pop
xor
pop
icebp
cltd
test
pop
pushf
shrb
pop
push
sarl
dec
mov
cmp
and
fistpll
pop
or
scas
xchg
push
add
loop
roll
test
imul
les
in
mov
push
adc
fs
out
add
mov
popa
inc
shrl
sbb
in
fists
inc
data16
adc
jp
xlat
mov
xor
fistl
call
repz
inc
inc
and
test
fwait
or
xchg
mov
insl
insl
out
dec
and
faddl
fdivp
sbb
shll
hlt
imul
xor
lds
arpl
ret
imul
push
lret
ficomps
dec
lods
or
inc
stos
arpl
sahf
xchg
addr16
std
fbld
les
jo
gs
sarl
mov
jmp
fs
cmp
jp
lock
ds
or
ret
dec
dec
xor
sbb
out
shlb
mov
popf
mov
add
fwait
mov
add
ror
call
jmp
arpl
rcl
inc
pop
mov
push
mov
insl
pop
inc
icebp
aam
mov
xchg
ljmp
adc
lock
in
cmc
imul
fnsave
pop
jmp
popf
sbb
mov
and
or
push
repz
xchg
pop
rcr
in
test
xrelease
jp
mov
mov
push
out
sub
in
loope
xchg
xchg
movsb
add
adc
mov
daa
mov
jbe
mov
push
xchg
nop
jns
psubw
and
or
sarb
add
cld
pop
and
push
pusha
xchg
push
mov
inc
js
pop
jo
inc
inc
flds
jb
sub
add
push
outsb
mov
inc
cltd
push
xchg
repz
inc
ljmp
fnstsw
cltd
int3
cmc
inc
shrw
push
inc
imul
imul
pop
fsubl
xchg
outsl
push
push
daa
sti
rolb
out
ficoml
fucomi
addr16
inc
or
mov
pop
daa
stc
xor
addr16
ss
cs
ds
jmp
mov
push
dec
sub
subl
sub
xchg
push
popf
mov
cmp
inc
ds
daa
xchg
std
cmp
cmp
ds
pop
test
cmp
or
mov
mov
fadd
sbbb
stos
icebp
and
mov
jp
jge
jo
ds
fdivs
push
and
inc
dec
pop
movsl
stc
testb
or
dec
rolb
jns
mov
aaa
int3
push
clc
clc
clc
push
call
iret
push
sbb
decb
and
lahf
inc
cmpsl
jle
sbb
push
and
mov
incb
pop
insl
mov
cmc
test
leave
shrb
aaa
fs
sbb
jns
mov
push
outsb
inc
mov
xor
and
jmp
xor
mov
mov
pop
test
insb
leave
loopne
insl
cmc
push
or
fcmovne
enter
dec
jmp
pop
mov
icebp
enter
xorb
pop
testb
leave
les
dec
mov
gs
xor
jo
ljmp
cwtl
stos
mov
loop
sub
cmc
jp
mov
sub
sar
insb
add
aaa
push
addr16
fcmovbe
ja
adc
sbb
xor
mov
sarl
fldl
ljmp
insb
jp
icebp
js
mov
in
cli
lahf
cmp
pop
add
inc
bound
add
sub
adc
out
xchg
movsb
cmpsb
int3
dec
cmc
icebp
adc
pop
dec
mov
or
jecxz
mov
add
clc
popf
dec
xor
push
add
mov
mov
lods
dec
mov
fmul
or
pop
mov
lahf
jno,pt
pop
add
or
shlb
ljmp
and
jle
int3
stos
mov
mov
lret
xchg
and
aaa
mov
sub
adc
sub
push
adc
shrl
shlb
xlat
mov
adc
adc
adc
filds
sbb
pop
scas
sub
shll
stc
icebp
pop
ljmp
rcrb
pop
xor
ljmp
cltd
sbb
aam
clc
pop
mov
rorb
mov
mov
xor
test
dec
test
dec
push
push
arpl
sbb
lods
sti
jle
aas
scas
fisttpll
xor
sub
lds
clc
leave
lds
movsb
sub
addr16
jge
mov
incl
sbb
mov
jecxz
jg
int
test
sbb
xor
aad
sub
cmpsl
jmp
ja
pop
stc
jmp
pop
xchg
sbb
push
pop
mov
stos
icebp
pinsrw
iret
push
test
lea
mov
js
outsl
push
jmp
and
fdiv
adc
mov
fnstenv
xor
test
movsl
les
cmc
into
scas
js
movsl
mov
cli
pusha
dec
xchg
pop
sbbb
mov
into
rclb
sbb
inc
cwtl
or
cmp
lret
inc
les
mov
jo
addb
stc
loope
push
repnz
and
lret
das
stc
in
aad
mov
stos
inc
mov
inc
xlat
inc
jo
movsb
imul
rcll
push
ret
sti
fadd
adc
or
outsb
mov
mov
sub
add
cmp
pop
addr16
subl
test
repz
idivb
lds
sti
out
test
or
in
xor
out
div
inc
cs
stc
popa
fcoml
cmc
mov
dec
fldcw
shll
sub
add
mov
push
sub
outsb
pop
js
inc
cmp
dec
dec
and
int3
mov
stos
lods
mov
nop
dec
jle
imul
test
adc
gs
sub
mov
cmpsb
jb
sahf
jp
mov
push
aam
mov
inc
daa
sub
push
xor
jmp
rol
xchg
pop
dec
das
fnstcw
push
jle
sbbb
adc
sbb
lea
rolb
icebp
lret
jno
adc
negb
shll
sbb
mov
imul
fldl2e
xor
pop
mov
cmp
mov
sbb
in
addr16
cmp
xchg
jno
add
dec
xchg
add
pop
orl
mov
fdivrs
add
mov
xor
shr
sub
cs
xchg
inc
scas
cltd
dec
int
pop
mov
mov
popf
imul
dec
xchg
in
jge
and
icebp
mov
scas
dec
or
mov
dec
add
aas
push
lea
fnstcw
dec
pop
data16
dec
pop
out
xlat
repnz
int
xchg
ja
add
imul
or
mov
mulb
cli
stos
and
popa
out
in
das
pop
stos
imul
pop
icebp
pop
fs
jle
xor
mov
jnp
ss
ja
popf
ja
jae
dec
xlat
movsl
dec
xor
mov
stos
fsub
pop
mov
push
pusha
mov
mov
leave
cwtd
push
push
adc
xchg
pushf
push
sarl
inc
aam
or
ljmp
dec
xchg
fisttpll
xor
fisttpl
ljmp
pop
inc
adc
loop
xlat
or
cld
scas
mov
ss
into
pop
cli
outsb
fdivrp
mov
mov
jns
adc
inc
stc
movsl
mov
or
lcall
mov
pushf
in
jns
and
jl
leave
bound
outsb
lret
pusha
aam
ss
dec
or
out
outsl
inc
xchg
push
shl
and
test
mov
jnp
xor
push
dec
in
std
push
mov
fisttpl
into
push
lcall
aas
or
enter
mov
sahf
cmp
xchg
inc
sub
fsubrl
xor
gs
xchg
aaa
mov
jb
mov
sbb
xor
pushf
fcmovnb
addr16
es
add
aam
clc
sarl
and
pop
and
testl
sahf
ja
pusha
int
jae
mov
sub
jo
leave
cmp
cmp
mov
cwtl
add
cmp
mov
dec
mov
sub
dec
jae
add
pop
repz
ja
jecxz
inc
aam
in
movsl
xchg
jg
into
dec
mov
inc
shlb
nop
stc
sub
sbb
inc
push
mov
push
les
sbbl
mov
xchg
push
xchg
ret
leave
test
repz
aas
xor
push
add
mov
adc
or
loop
inc
shll
dec
mov
xchg
fisubrl
outsl
mov
mov
inc
push
les
pop
imul
pop
dec
cmp
sbb
call
adc
add
xchg
inc
out
loopne
mov
xor
xchg
test
aam
ret
pop
movhps
scas
cli
xor
inc
int
inc
lods
add
mov
clc
outsb
std
inc
mov
mov
jg
cmpsl
dec
in
xchg
pop
ljmp
or
je
out
sbb
and
je
int3
dec
addr16
and
je
xor
mov
shlb
mov
or
out
cwtl
subl
ret
stos
push
push
inc
push
pop
test
stos
daa
test
ljmp
pop
test
out
outsl
iret
pop
in
sub
icebp
sub
jb
lahf
jno
push
add
cld
int3
mov
lods
push
aam
jl
inc
lock
or
hlt
movsl
cld
mov
test
stc
pusha
test
or
lock
lods
or
aam
mov
and
loopne
fbld
out
pop
cld
shrl
fsubrl
or
sub
push
test
mov
popf
push
cmp
fmul
fwait
stc
sbb
int3
push
mov
sbb
xchg
rcl
subl
dec
out
test
aad
xlat
popf
sub
bound
pop
cmpsl
push
popa
or
stos
xchg
movsl
jne
outsl
outsl
sahf
shll
fistpll
cmp
fwait
push
jne
rorb
mov
clc
mov
shlb
fcoms
inc
setns
and
xchg
mov
cmp
out
hlt
and
repz
dec
sahf
push
mov
push
cltd
in
fcomp
jne
pop
mov
in
pushf
inc
cmpsl
leave
icebp
or
lea
test
sub
fmull
sti
jmp
add
incb
push
popf
das
pop
and
popf
cmpsl
jbe
inc
lock
xchg
addl
jae
std
pop
mov
lds
arpl
mov
adc
mov
addr16
and
lret
cs
mov
shrl
lahf
mov
fdivrp
js
out
inc
insl
or
outsl
sbb
mov
fwait
addl
mov
loopne
mov
jb
outsb
and
xor
xor
jp
xor
dec
loop
rcl
inc
fnsave
jne
std
xlat
pop
pop
pop
push
xor
out
cmpsl
dec
push
xor
mov
insl
cli
imul
or
js
mov
sahf
push
mov
icebp
inc
inc
push
dec
and
stc
sbb
dec
xchg
xchg
out
mov
pop
outsb
cmc
es
jle
or
dec
inc
cli
pop
std
movsb
ret
adc
jae
insl
xchg
loopne
inc
insl
xchg
mov
pushf
jp
mov
jp
ss
ljmp
mov
sbb
jge
nop
dec
icebp
fistpll
int3
loop
pop
mov
mov
or
fiaddl
inc
lock
dec
pop
sarb
std
fldenv
mov
lcall
adcl
fldl
xchg
xchg
or
fcmovnb
stos
das
xor
jmp
loope
push
aas
jb
mov
mov
push
outsl
movsb
push
jo
cwtl
mov
in
pop
fsubs
popa
inc
scas
sub
dec
out
arpl
in
sti
dec
or
cmc
es
sub
shll
sti
outsl
xor
push
jp
push
aaa
or
lret
fidivrl
lods
stos
leave
pop
cmp
sbb
push
mov
mov
lcall
cmp
jno
or
ret
repnz
sub
test
xchg
rcll
add
clc
mov
jo
repnz
out
outsb
adc
mov
mov
insb
push
sbb
jnp
jnp
adc
sub
movsb
mov
scas
into
and
mov
xor
lods
mov
mov
xchg
scas
cmp
mov
iret
iret
cwtl
aam
mov
xlat
shrl
pop
mov
jg
xchg
add
in
in
call
mov
xchg
or
push
inc
lods
pusha
mov
int3
inc
hlt
mov
xchg
xchg
scas
push
mov
xchg
fldenv
jno
or
dec
shll
adcl
lock
sub
mov
sbb
push
or
xor
push
push
inc
enter
mov
addr16
mov
jne
pop
dec
pop
or
xchg
popf
mov
popf
mov
jecxz
push
and
bnd
rclb
lods
lds
jecxz
cs
mov
inc
insb
xor
and
mov
push
inc
repz
sub
nop
mov
sub
jo
int3
fstpt
outsb
and
push
jb
xor
and
rclb
push
jg
je
adc
shlb
loop
jmp
xor
push
xlat
repnz
mov
jmp
test
sub
jae
mov
pop
insb
mov
jmp
xchg
jmp
daa
outsb
mov
loope
aas
mov
add
mov
addr16
sub
repz
dec
dec
xchg
xor
add
call
mov
xchg
xchg
xchg
lret
das
push
iret
pop
imul
push
and
fs
out
dec
fdivp
addr16
xor
arpl
test
loope
rcll
ror
mov
jns
pusha
loopne
sbb
sbb
jmp
mov
jnp
mov
push
mov
fs
das
rcll
out
es
push
adc
pop
jb
fstpl
mov
inc
xor
inc
push
outsl
fsubl
sub
or
fidivrs
pusha
movsl
sar
into
inc
cmpsb
outsl
lods
int
and
popa
daa
pop
hlt
es
ret
pcmpeqw
aaa
jg
outsl
and
push
ja
lahf
dec
cmp
add
sbb
lods
test
xchg
das
inc
enter
jae
mov
mul
aam
and
lock
sahf
adc
or
add
xor
dec
out
jb
ret
aaa
cmp
jbe
xchg
sbb
popf
push
mov
jno
aas
sub
leave
mov
mov
xor
jb
pop
inc
je
mov
popf
sub
lcall
sahf
adc
out
or
test
or
add
sbb
sbb
inc
nop
ljmp
xor
jecxz
cmpb
decb
fistpll
test
sub
imul
imul
and
sti
ljmp
adc
in
sub
xchg
xchg
sarl
loop
jecxz
and
rclb
pop
cmp
push
leave
or
gs
aad
sbb
std
mov
xorl
pop
pop
xor
push
pop
add
sti
push
xchg
das
js
ret
pusha
int3
mov
push
jp
jb
sub
and
scas
mov
fcmove
jns
lret
cs
cltd
imul
repz
mov
push
push
pushl
dec
ss
gs
lods
fs
inc
addl
scas
mov
in
int
and
scas
cld
push
sub
and
jp
xchg
xor
pop
lds
movsl
mov
pop
gs
gs
mov
or
iret
sbb
lcall
sub
sahf
pop
push
data16
jne
mov
xchg
adc
ja
sub
xchg
add
mov
fcomip
add
push
cli
loopne
roll
jmp
push
add
stos
std
aad
scas
loope
fdivrl
scas
cld
sarl
mov
insb
shll
popa
icebp
dec
push
pop
loope
xchg
out
inc
mov
jns
cmp
repz
repnz
shll
mov
mov
sub
fimull
sahf
push
xorl
das
and
mov
xor
pushl
cmp
mov
std
popf
sbbl
out
iretw
add
xchg
push
adc
lret
add
xchg
hlt
rcrb
jecxz
jmp
addb
inc
pop
mov
jae
out
hlt
push
pop
jecxz
test
inc
sar
push
push
ds
xor
add
push
mov
sbb
aad
stos
pusha
inc
xor
mov
in
xchg
aaa
pop
cltd
xchg
mov
inc
mov
dec
movsb
repnz
push
push
ret
jae
lcall
jp
cmp
insb
scas
push
jo
dec
ds
add
xchg
insl
enter
js
sub
push
daa
sarb
cmc
cwtl
ret
mov
test
test
mov
into
out
push
jecxz
cmp
mov
call
and
cmpsl
add
popf
mov
cmp
roll
pop
xchg
mov
shrl
jbe
adc
jg
xchg
push
xor
pop
lret
in
nop
jmp
xlat
push
fcompl
aas
pop
mov
incl
data16
pop
adc
push
je
loopne
hlt
movsl
dec
mov
int3
jmp
arpl
mov
loop
push
jmp
sub
cmp
cmp
test
inc
sbb
addr16
xor
aad
xor
movsb
and
adc
cmpsb
js
nop
scas
pop
stos
and
les
lcall
pop
leave
das
rcrb
std
and
insl
pop
jmp
and
mov
inc
fcompl
inc
inc
xchg
mov
ffree
sbb
fwait
stos
fimull
mov
imul
pop
in
or
hlt
jno
dec
jecxz
xchg
xor
outsb
or
call
fcomip
ja
adc
or
mov
or
dec
jo
mov
jo
aas
jle
cs
popf
std
test
cmpsb
fistps
je
ret
call
cmpsb
mov
xchg
sarb
cmp
and
mov
bound
jle
scas
aad
push
jmp
stos
repz
fdivrl
pop
cmp
sti
mov
add
in
add
or
add
aas
pop
test
cmp
in
lds
je
dec
cmp
lods
or
enter
in
jecxz
sub
cmp
and
push
dec
fsubl
lock
movsb
push
shrl
insl
icebp
xchg
lahf
js
stos
dec
xchg
xor
jb
xor
ja
cmp
and
xchg
fwait
enter
loop
sbbb
cs
popf
adc
dec
scas
stc
stos
xchg
rol
or
xor
negl
push
fnstsw
mov
and
out
shll
fisubrl
ret
arpl
lcallw
push
cmp
sbb
push
mov
cmp
cmp
push
cwtl
popa
and
jmp
adc
out
addr16
loope
push
push
int
and
inc
or
cmp
mov
fs
or
lods
or
jne
xor
daa
cwtl
js
cld
daa
and
cmp
cmc
dec
push
frstor
xchg
fsubp
ds
and
inc
jmp
std
insl
in
cmpsl
jle
leave
dec
jbe
xchg
xchg
push
icebp
dec
cld
pop
int3
mov
jae
dec
xchg
lods
jmp
and
arpl
xor
adc
in
pushf
push
xchg
sbb
lods
or
shll
ja
daa
nop
data16
inc
cld
in
xchg
fsubrs
pushf
mov
loope
shll
dec
loopne
testl
xchg
mov
add
ja
ljmp
inc
out
into
xor
loop,pt
xor
pop
cld
or
jns
leave
xorl
std
jb
add
and
push
mov
push
cmc
lods
loope
rcll
sbb
add
cmp
outsb
sbb
int
decb
daa
xor
cltd
mov
mov
dec
mov
inc
or
or
jl
cmp
add
dec
imul
in
sbb
mov
sahf
mov
dec
outsb
dec
add
lret
jae
cmp
add
scas
pop
and
push
sub
push
xor
repz
add
out
pop
or
dec
in
leave
inc
push
movsl
cmp
repz
jmp
push
aas
and
push
mov
lcall
adc
mov
jg
call
dec
sbb
mov
fldl
jg
add
in
push
shlb
out
sarb
jp
mov
inc
xchg
fiadds
add
cmp
enter
imul
or
inc
mov
mulb
es
or
mov
in
iret
push
rcrl
push
add
mov
jns
jb
xor
inc
stc
out
mov
fisubs
push
inc
cs
add
push
lock
lret
mov
inc
test
xor
in
lock
push
fdivrs
mov
sti
pop
outsb
jle
nop
add
aad
sahf
jl
jae
or
and
rcrl
xchg
sbb
pop
cmp
jl
jns
adc
push
cmp
dec
js,pt
movsb
fmull
adc
rolb
and
test
mov
lret
lods
cwtl
dec
imul
cmp
mov
bound
shl
cld
sbb
push
sub
mov
pop
pop
mov
lret
fdivrl
push
push
cltd
cmp
es
mov
sbb
insb
xor
pop
lret
fs
sahf
fnsave
loopne
push
cmp
out
or
addr16
lds
add
call
sub
sbb
cmp
pushf
cmpsb
cmp
fcompl
inc
jne
sahf
jle
insb
in
xlat
push
sbb
sub
xchg
out
lahf
sub
jnp
gs
into
out
fbld
jl
or
shll
ja
test
int3
nop
fs
mov
fldt
movsb
loop
dec
cwtl
jb
or
out
xchg
mov
sti
sub
mov
gs
mov
xchg
jae
dec
jmp
sbb
nop
pushf
mov
sahf
mov
xchg
out
jae
push
lock
jae
cmp
add
jo
aam
adc
mov
lods
dec
cli
push
out
xor
ret
test
jecxz
ret
lahf
and
je
mulb
xchg
fmuls
sbb
lea
aam
insb
ds
xchg
mov
xchg
icebp
jbe
sbb
xor
jno
sbbb
push
mov
sar
push
xor
and
and
insl
mov
fwait
cmp
inc
scas
out
add
jbe
stc
or
jp
leave
dec
ret
pop
inc
push
mov
xchg
movsl
pop
ret
inc
mov
cmp
leave
inc
std
inc
cld
les
add
in
push
mov
push
arpl
into
ljmp
das
sub
shll
sub
fiadds
push
rcll
cmc
arpl
inc
popf
mov
mov
sti
cmp
test
mov
les
pop
cld
aas
dec
addr16
leave
dec
xchg
dec
xchg
daa
jns
push
cld
jae
cmp
rolb
iret
sub
adc
mov
mov
mov
pop
filds
leave
jbe
je
in
add
lods
fs
xlat
sbb
mov
cld
ret
mov
sub
sti
into
add
ficompl
test
in
pop
mov
fdivrp
loopne
mov
pop
cmpsb
out
clc
and
jmp
inc
inc
loopne
jae
cs
and
in
ljmp
xlat
dec
lcall
loope
and
stos
pop
push
mov
pop
fildll
std
inc
fildl
lahf
ret
and
aaa
mov
pop
lahf
mov
rolb
and
lock
out
pushl
sbbb
mov
and
lock
lds
lret
pop
lods
in
aad
jg
jge
std
push
push
mov
inc
xor
cmp
dec
add
xchg
jo
cmp
repz
cmp
lea
sub
adc
jns
cmp
out
loop
add
je
fcmovb
push
lods
cmp
notb
adc
dec
adc
jecxz
cmp
jo
insb
adc
mov
bound
lret
adcl
jbe
fs
dec
pusha
xor
popf
mov
lahf
mov
sbb
pop
jns
mov
shlb
sub
flds
fs
push
pop
test
mov
movsl
or
mov
popa
test
mov
lock
rcll
sub
add
movsl
jns
push
cmp
cmpsl
shlb
enter
xlat
in
xchg
int3
xor
sub
ss
dec
rcl
inc
stos
push
insb
ret
dec
pushf
pop
jmp
add
notb
sub
inc
cmp
adc
mov
inc
mov
mov
dec
push
imul
cmp
je
jge
loop
movsl
les
fldl
out
std
faddl
dec
mov
into
enter
das
ja
sarl
dec
shlb
aam
and
cmp
btr
lret
mov
sarl
es
in
loopne
test
outsl
jnp
hlt
dec
sbb
loop
inc
and
cs
cmc
test
dec
out
and
mov
orl
xchg
lahf
xor
repz
mov
dec
into
and
push
pop
stc
xchg
fdiv
sbb
cmp
add
insl
sahf
xor
aad
and
movsb
cmc
mul
pop
loop
in
stos
lcall
jecxz
sub
icebp
cwtl
rcrb
mov
pop
adc
bound
test
and
fdivs
mov
pop
pop
xor
mov
das
fdivr
xchg
pop
bnd
cmp
sub
les
jmp
cmpsl
push
repnz
push
sahf
test
in
jp
aad
or
inc
jae
xchg
xchg
jl
sbb
cmp
inc
stos
cmp
jl
jbe
lret
cmp
aad
sub
add
rclb
jge
bt
xor
or
imul
jno
sub
dec
fld
and
add
std
rcl
mov
sbb
dec
roll
adc
lods
pop
ljmp
push
popa
arpl
mov
aad
jg
popf
sub
and
xchg
or
scas
inc
stc
fistpll
inc
add
or
mov
sbb
sub
enter
jmp
test
xor
jmp
mov
aaa
adc
cltd
sub
mov
push
or
imul
xor
sbbb
pop
pop
or
and
stc
cmp
cs
enter
aaa
pusha
dec
jp
inc
jb
xchg
xor
shlb
test
fs
call
out
in
or
push
adc
xor
insl
mov
cmp
pop
push
dec
fsubrl
int
jo
movsb
clc
or
mov
rorl
xchg
mov
jae
mov
jbe
xlat
push
repnz
int
in
and
sbb
sub
cs
sub
sti
out
inc
inc
or
dec
clc
sub
mov
or
cmp
mov
scas
dec
or
movsb
jne
sbb
adc
add
dec
adc
dec
loopne
cmp
mov
icebp
cs
repz
xor
adc
push
iret
fmuls
jge
jecxz
mov
sbb
push
or
mov
cmpsl
and
cmp
ret
push
adc
mov
das
mov
movl
fs
xchg
mov
fs
roll
outsl
mov
mov
adc
xchg
lret
sbb
dec
sbb
popa
test
cmp
jle
push
xor
or
jne
cmp
cmpsl
stc
sub
and
fstps
pop
js
adc
add
loopne
mov
xchg
ret
sub
lea
cli
fisubl
enter
fdivl
out
and
adc
dec
sub
pop
sub
fldcw
repnz
aad
in
int3
push
insl
cmpsl
mov
insl
popa
clc
jae
jns
incb
sub
nop
lret
addr16
daa
xchg
push
movsb
aaa
mov
cmpl
sti
in
and
lcall
lds
andb
das
sahf
stos
inc
xchg
pop
rcll
hlt
fwait
cmpsl
fildl
add
js
sbb
hlt
setl
leave
xchg
cltd
inc
outsl
push
or
fwait
or
int
mov
loopne
mov
shr
cmp
lret
je
bound
sbb
cli
mov
or
inc
nop
xchg
mov
lret
mov
dec
in
mull
loop
cmpsb
mov
call
into
inc
movsb
insl
adc
or
dec
pusha
push
je
pushf
or
mov
icebp
jbe
icebp
stc
cld
dec
xchg
jmp
lret
xlat
or
repz
dec
mov
ljmp
xor
push
push
das
fildll
ficoml
test
push
sti
stos
insb
mov
xchg
dec
and
imul
adc
addr16
and
jb
add
ds
icebp
jae
jge
mov
or
xor
ljmp
data16
add
adc
mov
or
pop
sbb
sub
in
pusha
popa
in
iret
jle
inc
or
push
jg
es
enter
add
adc
out
mov
jbe
dec
mov
jnp
loop
inc
repnz
addr16
cmp
movsl
loopne
sub
adc
imul
xor
push
cwtl
push
das
xor
ret
dec
insl
gs
imul
dec
jne
out
xchg
pushf
mov
cld
mov
fldl
cmp
jae
jo
pop
mov
and
mov
pop
loope
cwtl
out
dec
addr16
cmpl
mov
daa
sarl
aas
jmp
dec
shll
sti
lds
lods
mov
ja
cwtl
mov
test
jb
jmp
test
pop
mov
jl
fcmovnb
stos
mov
scas
std
xor
inc
dec
push
xor
shll
lahf
addb
aaa
jg
pop
pop
dec
xor
jno
lods
repz
or
mov
sub
ja
test
int
adc
fistpll
aam
push
loope
je
jmp
xchg
cmpsb
ror
cmp
or
hlt
pop
adc
mov
aas
mov
dec
stos
mov
xlat
ret
dec
cmp
adc
mov
sub
ljmp
or
mov
std
ja
inc
loope
xchg
cld
lea
mov
mov
arpl
inc
int
and
add
jl
xchg
sub
adc
mov
inc
mov
add
stos
push
sub
mov
out
orb
cld
mov
fs
lea
js
nop
jb
call
cmp
lret
jb
sbb
sbb
imulb
inc
gs
pushf
add
adc
pop
and
or
mov
and
lods
mov
iret
sub
cmp
pushf
push
push
scas
cli
mov
add
popa
adcl
add
dec
dec
mov
jle
jno
int
shrb
xor
cld
scas
mov
popa
xor
or
jp
adc
mov
out
xlat
add
xor
lock
cmp
movb
mov
add
sbb
call
aam
push
xor
inc
xchg
cwtl
or
popf
inc
adc
movsb
repnz
ret
jecxz
into
js
fcomip
inc
aaa
or
repnz
addr16
xchg
cltd
lahf
xchg
xchg
pop
fs
cwtl
adc
stos
mov
jle
sub
pop
mov
std
movsl
xor
jle
fstpt
stc
add
fs
fiadds
mov
sbb
add
pop
mov
mov
xchg
dec
or
adc
add
sahf
push
mov
mov
je
mov
mov
ret
lahf
push
mov
das
mov
mov
fisubl
or
push
lret
xchg
add
daa
and
adc
repz
adc
rorb
pop
or
enter
ret
clc
lods
out
aaa
and
and
add
cld
dec
pop
mov
or
cmp
movsb
push
inc
jno
test
add
jmp
jg
inc
cmp
aad
inc
sbb
inc
dec
jns
outsl
jle
sub
pop
insb
icebp
mov
push
cmpsl
mov
push
iret
jo
fs
xchg
jle
mov
and
jne
shll
add
jne
add
pop
subb
cmp
jno
loopne
cli
aad
movsl
mov
and
fcomip
pushaw
sbb
sub
lret
ret
push
movsl
mov
adc
dec
js
inc
test
and
out
mov
bound
into
xchg
push
dec
rol
nop
sbb
and
adc
fs
ss
je
pop
fistpll
jmp
jl
in
int3
pop
je
cmc
adc
jbe
xchg
jo
enter
push
lock
subb
pop
mov
into
cld
aad
inc
clc
test
add
out
stos
add
cmp
and
out
insl
test
jae
jmp
jae
stos
pop
push
push
test
stos
in
jnp
sbb
clc
dec
ja
mov
add
xchg
nop
iret
shl
aaa
jne
imul
and
push
in
stos
and
dec
cmp
fnstsw
pop
push
scas
dec
call
xor
cmpl
xchg
ret
pop
inc
lods
lds
fimull
test
arpl
ss
xchg
rcrb
lcall
insl
lock
mov
mov
push
inc
mov
cmp
jo
push
adc
adc
leave
aam
and
inc
mov
pushf
push
out
repz
repnz
cmp
mov
jmp
js
call
and
into
sub
ds
lods
xor
jmp
xor
aam
pop
and
sysenter
xor
imul
ret
xchg
shr
adc
push
das
inc
fidivrs
insl
xor
leave
inc
lret
pop
pop
or
mov
dec
pop
repnz
sbb
aad
inc
add
loopne
sbb
pop
popa
shl
subb
mov
aaa
sbbb
pushw
xchg
adc
fs
inc
iret
push
cs
popf
movsb
push
int
or
xchg
jle
arpl
in
sarl
pop
add
lret
popa
out
daa
add
rclb
test
andb
insl
pop
xor
aam
fistpll
dec
push
rcrb
scas
imul
xor
stos
scas
scas
popa
jo
data16
mov
xchg
into
or
icebp
sbb
pop
int
lcall
xor
mov
mov
popl
mov
mov
push
cmpsb
sub
repnz
imulb
cmpsb
repnz
mov
and
or
cmpsb
pop
or
stos
xchg
fwait
aaa
rcrl
popl
mov
xchg
ret
into
jo
in
pop
sub
rdtsc
lods
add
or
inc
jp
divl
cwtl
dec
orb
lods
xor
xchg
mov
and
jle
push
inc
inc
push
lds
push
imul
scas
add
je
mov
inc
cmpsb
ss
cmp
inc
mov
inc
or
pop
pop
mov
lret
mov
or
and
push
cmpsl
bnd
std
pop
mov
lahf
cwtl
jmp
lods
scas
pop
mov
cmp
shlb
pop
jno
and
sub
pop
and
fdivr
sbb
inc
add
mov
lds
cmp
xor
inc
ja
or
mov
pop
rorl
xchg
adc
add
jmp
loope
jl
mov
and
call
mov
inc
iret
xchg
call
scas
test
inc
mov
roll
sarb
dec
test
adc
repnz
push
bound
cs
fsubrs
imul
pop
mov
and
mov
pop
in
push
jne
dec
fisttps
jl
shlb
mov
insl
mov
sbb
lahf
adc
jbe
xchg
enter
push
push
pushf
icebp
and
or
addr16
push
xchg
mov
out
mov
stos
rclb
jge
inc
rcrl
aad
jmp
mov
iret
jp
jecxz
repnz
cltd
dec
jo
outsl
pushf
into
test
push
mov
stos
sbb
test
push
jp
mov
sub
add
or
pop
pop
adc
test
sbb
dec
popa
in
pop
sub
lahf
sbb
inc
mov
sarb
and
xlat
mov
js
adc
insl
lahf
push
lods
test
add
mov
xor
xchg
stos
and
jb
pop
pushf
xchg
lods
pop
inc
or
loopne
cmpsb
or
bnd
jge
push
adc
and
pusha
loop
outsl
jb
gs
mov
lret
out
fsub
ja
mov
jmp
arpl
pop
out
ret
jnp
push
leave
sbb
sub
xadd
pop
cmpsb
dec
arpl
lea
sub
mov
xor
add
or
inc
push
mov
test
sti
hlt
jno
mov
xor
xor
sbb
jecxz
jecxz
imul
cmp
push
sarb
add
jl
enter
mov
cmpsl
rsm
outsb
xor
push
aaa
call
out
iret
popf
mov
jne
sbbb
push
test
std
lods
pop
mov
cmpltps
ljmp
inc
dec
cmp
cmp
fsts
lret
sub
xorl
sub
jecxz
lock
cli
or
lcall
scas
rolb
test
xchg
test
sbb
jmp
insl
in
pop
fst
movsl
mov
mov
push
xchg
xsha256
data16
jg
jmp
sbb
sub
jo
sub
inc
mov
cltd
lock
sahf
out
das
mov
push
sub
shl
xchg
imul
outsb
or
fists
fsts
sar
cmpb
testl
out
ja
scas
aam
popa
add
adc
and
pushf
xchg
cmpsl
jbe
sbb
inc
outsb
scas
add
push
lret
or
ret
lcall
push
ficoms
adc
nop
out
cmpsl
arpl
sub
nop
jae
shrb
add
adc
das
push
adc
js
push
subb
sub
dec
adc
or
push
pushf
xchg
sti
jbe
xchg
xchg
out
sub
jecxz
xchg
aas
stc
mov
rcrl
cmpsb
xor
clc
or
jp
mov
jbe
sub
push
divb
out
popa
mov
cli
xchg
arpl
inc
data16
mulb
call
jo
cmp
gs
dec
fwait
sub
push
clc
push
das
scas
hlt
dec
mov
jnp
cmp
push
rolb
lds
sub
dec
mov
dec
aam
dec
push
imul
mov
pusha
xor
xchg
or
xchg
lds
mov
xorl
gs
xchg
int3
or
cwtl
push
in
lock
lea
sub
push
mov
scas
jb
xor
cmp
push
jl
xor
or
sub
fimuls
pop
outsb
lock
xchg
sbb
fucomi
punpckhbw
sub
sbb
fnstsw
fiaddl
sub
out
fldenv
push
push
out
mov
into
das
pop
push
jae
out
pop
mov
pop
sbb
dec
movsb
and
jle
jmp
mov
jle
in
shlb
cs
movl
pop
or
les
cltd
ljmp
add
pop
sub
icebp
fsubrl
movsl
add
jno
and
xchg
fildll
mov
cld
jbe
xchg
in
jo
popf
aad
jno
ja
lea
inc
test
push
lret
fcompl
and
out
ljmp
mov
popa
xor
and
movsl
jno
shll
insl
jmp
sub
mov
pop
fs
fdivs
adc
decb
or
xor
ds
jo
sbb
lods
xchg
push
sbb
hlt
mov
ret
sti
or
loope
jb
mov
jp
add
adc
pop
add
mov
popa
fdivrs
inc
inc
push
xchg
adc
cmpsb
mov
mov
fisttps
insl
inc
loopne
iret
adc
cwtl
adc
in
shl
xor
or
bound
ds
arpl
xor
xchg
cld
sub
cltd
push
add
sbb
rcll
stc
push
repz
mov
daa
std
xor
pop
and
repnz
es
adc
jb
mov
add
ret
or
dec
test
xchg
shrb
addr16
dec
or
inc
outsl
les
aaa
xlat
jns
add
in
hlt
xchg
pop
and
pop
add
into
pop
jmp
in
aaa
cmpsl
andl
fcompl
xchg
xchg
jbe
ja
je
or
mov
and
xlat
dec
out
iret
mov
stos
shll
and
mov
in
cmpsb
pop
mov
xor
pushf
cmp
mov
jnp
lods
inc
push
jb
gs
in
std
iret
pop
addb
xchg
inc
cmp
gs
jnp
std
mov
xor
aas
mov
lret
je
out
sbb
sub
movsb
out
shlb
aad
or
mov
fscale
pop
out
jns
mov
pop
movsb
sub
cmp
std
and
jne
enter
pop
cli
xchg
cld
sub
cmc
jb
ret
dec
ds
push
sub
out
mov
dec
popa
sbb
mov
aaa
dec
out
dec
jge
xchg
sbb
cmc
fidivrs
call
cmp
call
jns
push
or
mov
movb
jl
fidivs
orb
lock
aas
fdivs
rcrl
mov
xchg
inc
lahf
sahf
xor
xor
mov
push
arpl
lret
xchg
sbb
jecxz
xor
inc
jbe
push
into
cltd
and
mov
mov
imul
mov
pop
push
push
adc
mov
xor
lock
dec
and
in
or
gs
jge
mov
in
inc
jo
push
out
or
into
push
mov
lret
cmp
xor
lea
dec
daa
dec
or
cli
repnz
aas
add
mov
lods
dec
and
mov
mov
xchg
cmp
rcr
sub
mov
xchg
and
inc
insl
sub
js
fcom
xchg
xor
repnz
pop
push
cld
jnp
or
daa
repnz
jl
insb
or
sbb
scas
cli
pop
in
pushf
cmp
xchg
adcb
xchg
jg
xlat
fwait
iret
xlat
jl
aad
mov
int
mov
addb
fstps
sub
add
xorl
loopne
mov
imul
lds
add
push
orl
pop
fcomip
pop
aam
and
shlb
sub
mov
cmp
dec
test
ror
adc
test
mov
dec
outsl
pop
jg
mov
sub
mov
cmpsb
shr
test
and
movsl
jne
xchg
jne
fs
dec
pusha
es
pop
xchg
xor
repnz
outsb
mull
mov
pushf
xor
jne
ret
leave
les
mov
sub
mov
addr16
loop
adc
lcall
stc
jmp
mov
iret
in
cmpsl
insb
cld
div
xlat
pop
dec
into
orl
pop
inc
insb
cmp
insl
cmp
lcall
push
dec
pop
jnp
sahf
aaa
jmp
divb
xor
jnp
aad
shlb
sub
test
sbb
movsl
inc
shlb
inc
push
roll
je
or
xlat
fnstenv
pusha
sub
mov
inc
popf
xor
aam
and
xor
push
mov
fimuls
push
add
mov
sub
add
in
jbe
movsl
insb
inc
sbbb
cmpsb
nop
fcoml
lret
xchg
xor
cmp
aad
sbb
cmp
ljmp
ljmp
push
sbb
push
lahf
mov
mov
ja
xchg
xor
daa
jb
movsl
shrl
clc
push
jl
jno
and
pop
loopne
inc
sbbl
push
sti
cmp
stos
xor
adc
adc
push
lret
test
push
sti
adc
out
aaa
push
push
pop
jecxz
xchg
scas
xor
aaa
out
fdivl
movsb
dec
pop
insb
jo
inc
jge
inc
insl
adcl
ret
push
test
pop
ja
xchg
xchg
ficoms
sbb
pop
add
jmp
mov
add
adc
test
pop
jmp
push
clc
xor
inc
shrl
jmp
or
clc
idivb
outsl
inc
add
jp
pushf
fdivs
lret
std
int
das
push
outsb
bound
sbb
xor
lods
and
mov
int
call
mov
sbb
pop
mov
and
sbb
loop
stc
push
lret
sub
mov
xor
inc
lds
out
test
xchg
out
add
add
cmp
divl
dec
cmp
repnz
cmc
jmp
mov
call
mov
cmp
mov
push
push
xchg
mov
iret
sbbl
push
jae
js
pusha
popa
add
xchg
aam
test
inc
xchg
lret
clc
adc
jns
xor
frstor
jecxz
inc
mov
adc
add
mov
pop
mov
nop
rcr
repz
mov
and
movsl
lahf
pusha
cmpsl
stos
jae
lea
int
inc
movl
in
mov
cmpsl
or
push
jno
daa
lods
push
ror
jnp
scas
adc
fsts
jecxz
push
dec
xchg
mov
insl
adcl
mov
pop
into
cmp
das
add
mov
sub
lock
mov
imul
lea
inc
xchg
test
sar
lock
jecxz
adcb
adc
sub
inc
pusha
repz
stos
push
push
xor
hlt
imul
das
dec
pop
addr16
sbb
mov
mov
rclb
dec
enter
sub
dec
loopne
fwait
pop
insl
inc
mov
dec
mov
add
xchg
pop
push
jns
iret
jae
inc
mov
inc
dec
xchg
bound
mov
push
das
jmp
push
ljmp
into
icebp
stos
je
push
sarb
cmpl
sub
add
rcrb
loopne
mov
mov
push
sub
xchg
imul
cmp
lods
lcall
dec
shlb
lret
or
sub
mov
ss
push
add
mov
leave
lcall
pop
jae
xor
popa
dec
xor
xor
push
fidivl
sbb
inc
nop
stos
rcll
push
jecxz
lods
cmp
fldl
adc
movsb
ja
pusha
pop
and
icebp
lods
adc
mov
adc
lds
enter
jp
pop
fcoml
jg
sbb
xor
std
sti
cmp
xchg
inc
divl
sbb
in
sub
ds
dec
sub
push
mov
aaa
scas
mov
mov
enter
cmpsb
test
cs
jo
fsts
js
add
idivl
mov
xor
aaa
jo
and
mov
into
cmp
and
test
xchg
sbb
loope
lret
orl
inc
or
stos
or
mov
and
repz
cmp
mov
xor
pop
jo
jge
xchg
popl
xchg
imul
outsb
shr
mov
pop
mov
push
jge
adc
push
fwait
mov
inc
add
xchg
dec
xor
lahf
dec
outsb
pop
arpl
jmp
xchg
or
mov
flds
leave
adc
mov
sbb
aaa
xchg
js
xor
inc
dec
sti
smsw
call
push
xor
cwtl
mov
in
jae
mov
test
push
mov
filds
fldenv
mov
mov
adc
mov
cmp
addr16
sub
js
movsl
popa
fcoms
in
rol
stc
inc
lcall
push
in
mov
sbb
shlb
jge
jne
push
jg
sub
cmc
dec
lods
mov
add
sbb
ds
lds
sub
lds
jae
into
aam
add
daa
push
mov
ja
mov
idivb
jecxz
lret
fadd
pop
frstor
dec
lret
int
pop
and
sub
push
mov
mov
push
stc
out
inc
dec
and
pop
mov
pop
jo
stc
push
adc
cld
push
xor
pop
rclb
adc
lds
mov
dec
shrb
imul
push
cmp
or
mov
imul
nop
lret
aaa
imul
mov
mov
sbb
ljmp
sub
jmp
cmc
outsl
je
mov
push
pop
push
sbb
lods
daa
data16
add
mov
cmp
or
cld
cld
les
test
and
or
sub
int3
cmpsl
out
jge
icebp
popa
addl
ds
or
aad
xchg
aas
xchg
and
subb
mov
dec
and
inc
pusha
sbb
add
xor
mov
loopne
std
mov
jmp
push
shl
lahf
xchg
outsb
stos
das
pop
fiaddl
std
pushf
addl
gs
jl
jecxz
ret
xchg
dec
dec
loope
jmp
ja
xor
inc
imul
xchg
mov
cld
ljmp
jne
push
adc
mov
lds
pop
jle
cmpl
and
adc
aam
sbb
fs
mov
jecxz
adc
rclb
sahf
cmp
sbbb
and
xor
or
lods
adc
xchg
mov
aas
sahf
add
pop
into
and
mov
popa
pusha
out
mov
dec
sahf
inc
jmp
hlt
dec
adc
loope
sbb
stc
mov
aad
pop
divl
jae
addr16
rcrb
mov
sub
enter
frstor
cmc
fldenv
fnstenv
bound
cmpsl
sub
dec
inc
fcom
push
lcall
cmp
add
stos
mov
imul
xor
faddp
out
jmp
movsl
lret
fwait
xchg
ljmp
in
jp
fs
push
sbb
mov
outsb
push
cmp
mov
outsl
fists
dec
ret
mov
aaa
loope
into
xor
negl
or
or
sbb
and
or
movsb
lahf
test
popf
shrl
sub
js
jge
lahf
push
or
inc
out
in
adc
in
icebp
dec
jo
mov
push
call
aam
or
dec
dec
testb
test
add
mov
fsubs
push
mov
js
loope
dec
push
jne
mov
addb
cs
push
dec
dec
fld
fisttps
add
hlt
mov
aad
test
jl
mov
dec
jnp
arpl
test
mov
mov
inc
mov
mov
dec
jno
outsb
rcll
dec
mov
jno
sbb
fistpll
data16
push
pop
mov
push
in
fwait
out
fistl
nop
enter
push
and
fldt
jno
push
sub
jnp
push
sbb
adc
pop
jge
mov
aam
sbb
sti
dec
sbb
xor
jle
sub
sti
or
shrl
repnz
movsb
sub
out
inc
outsb
cs
jno
shr
xchg
repnz
int3
xchg
xchg
outsl
arpl
and
jbe
inc
mov
ljmp
inc
outsl
daa
addr16
out
dec
jmp
ljmp
jecxz
in
push
loopne
ss
push
mov
in
xchg
mov
icebp
pop
jl
sbbl
notl
insl
ljmp
or
rolb
cltd
jecxz
shr
std
aaa
xchg
scas
aam
les
cmpsl
adc
or
inc
lret
ja
aaa
out
loope
sbb
repz
mov
jecxz
imul
addr16
dec
movsl
push
leave
jmp
adc
fidivl
out
or
add
pusha
xchg
adc
or
test
cmp
int3
adc
pop
push
mov
mov
sub
add
push
sbb
add
loope
lcall
imul
sti
sti
pop
fbstp
sbb
lock
mov
dec
sub
jge
jnp
xchg
lcall
lahf
adc
adc
xor
test
pop
inc
pop
pop
dec
cmc
mov
push
lret
imul
cmp
sub
sbb
fstpl
imul
data16
negb
dec
rcl
sub
addl
dec
xor
add
add
or
inc
bound
in
mov
mov
mov
adc
push
push
aaa
cs
shlb
out
imul
call
inc
sub
sub
scas
mov
mov
mov
cwtl
fidivl
pop
xchg
mov
out
adc
inc
outsb
cli
lods
cmp
mov
cmp
mov
push
adc
or
cmc
ljmp
mov
mov
aam
call
adc
push
sbbl
mov
orl
adc
dec
pop
mov
mov
jae
loop
mov
mov
jb
fidivrs
cmp
push
cmp
std
ret
dec
mov
icebp
cs
mov
int3
cmp
jo
insl
sbb
xchg
xchg
inc
inc
mov
out
outsl
sbb
shr
jb
in
cmpb
add
aaa
pop
inc
adc
lret
aam
jb
out
call
scas
cltd
pop
sahf
lret
lret
push
dec
sbb
jns
pop
inc
loope
test
xchg
enter
cmp
push
adc
push
xchg
popf
int
int
xchg
shrb
call
std
xlat
test
pop
lahf
mov
sub
mov
lock
sbb
lret
mov
sub
int
or
repnz
jnp
sbb
fwait
fs
add
mov
shrb
icebp
leave
and
adc
jns
xchg
or
inc
fildl
xchg
pushf
lret
or
cli
add
mov
es
push
dec
scas
int
int
pop
in
arpl
movsl
mov
loopne
push
cmpsb
jl
call
jne
inc
jno
int
pushl
inc
iret
aaa
mov
xor
aaa
fnsave
enter
push
adc
sbb
jge
daa
and
mov
add
pop
xor
lea
in
mov
or
or
xchg
es
push
out
inc
out
or
cmc
into
scas
stos
inc
sub
lods
sbb
dec
ja
jnp
mov
leave
and
ret
adc
mov
je
aam
jp
jns
fwait
nop
dec
scas
jge
or
adc
mov
jae
outsb
jnp
xor
out
cld
insb
nop/reserved
cs
mov
out
mov
jg
jle
inc
inc
jecxz
cmpb
or
push
add
lfs
xchg
rep
push
outsb
and
pop
and
jb
adc
cwtl
data16
fiadds
bound
mov
icebp
mov
inc
xor
mov
xor
and
xchg
test
mov
push
or
in
shl
sub
lock
mov
inc
dec
pop
push
jno
sbb
cmp
inc
cmpl
xchg
sub
lock
in
stos
mov
sbb
mov
lahf
pop
fsubl
fiadds
popf
lahf
inc
adc
gs
sbb
out
push
lret
shlb
sbb
mov
cld
call
lcall
add
jmp
cmp
out
push
jno
mov
sub
cs
xlat
scas
or
data16
xchg
xchg
or
push
in
lret
mov
ror
stos
cmc
lcall
stos
and
pop
xor
fwait
js
dec
fisubrl
sbb
out
mov
push
dec
mov
loopne
xchg
push
notb
mov
push
jo
jg
cs
add
ja
in
aaa
mov
pop
dec
mov
dec
sti
leave
pop
data16
jae
xorl
test
mov
cmpsb
fadds
cmpsl
bound
popa
testl
push
jnp
inc
pop
inc
push
icebp
popl
inc
lock
in
jp
push
addl
aam
decl
mov
or
hlt
and
push
add
cmp
jmp
dec
mov
int3
sbb
mov
xor
jne
shrl
mov
mov
jbe
push
mov
xor
mov
dec
xchg
push
and
mov
loop
stos
mov
add
mov
jge
xchg
sbb
int
popf
outsb
inc
adc
push
rclb
adc
xchg
das
push
add
push
mov
dec
sbb
mov
loop
mov
insl
jns
add
dec
btr
adc
std
adc
jae
cmpsl
pop
aad
repz
mov
sbb
shlb
pop
rclb
das
jno
mov
pop
pushf
cmp
push
es
loop
mov
cmp
push
in
icebp
pushf
fwait
and
mov
jecxz
sub
xchg
sub
out
cwtl
pushf
cs
push
jae
jmp
fidivs
xor
jle
mov
insl
cld
cli
cmp
dec
inc
jae
in
and
dec
jg
or
xchg
cli
jno
and
popf
lret
pop
sbb
sub
pop
ror
pop
stc
inc
stos
mov
std
pop
push
dec
pop
sub
lcall
ja
js
rol
out
jp
adc
and
mov
mov
inc
mov
iret
sti
out
fld1
xlat
imulb
sub
loop
loopne
arpl
xor
mov
dec
test
das
mov
shrb
cli
or
test
mov
cs
or
mov
ret
test
cmp
xor
mov
imul
adc
add
mov
jne
sbb
fwait
pop
test
push
std
inc
and
and
ret
cli
fsubrl
pop
fldenv
and
fcmovne
add
insl
mov
xor
mov
loop
xchg
cltd
inc
mov
xchg
js
inc
jbe
cmpsb
mov
cmc
test
dec
and
push
js
sub
xchg
adc
ja
movsl
or
xchg
pop
test
ror
adc
idivl
push
in
xor
mov
fsubs
jmp
les
pop
sub
mov
or
mov
pop
loop
scas
jle
shlb
call
dec
cmp
fbld
cmp
and
xchg
rcl
das
add
add
lds
scas
adc
jno
add
shrl
pop
sbb
stos
dec
pop
jge
inc
imul
dec
inc
lock
test
inc
aad
xchg
adc
outsl
addb
loopne
mov
cltd
shrl
bound
gs
sbb
insb
outsl
inc
pop
shlb
push
or
aas
pop
mov
addr16
fcoms
xor
incl
adc
cmpsb
cmp
out
movsl
jmp
aaa
xchg
jae
xor
inc
lcall
cmpsl
call
lret
fistps
stos
jmp
les
jnp
movl
push
xor
jp
je
and
lds
fdivs
nop
out
scas
pop
adc
pop
push
jno
popa
imul
push
addr16
mov
push
push
stos
movsb
xchg
and
mov
cli
dec
adc
mov
mov
aad
cli
hlt
jge
pop
nop
adc
push
mov
pop
sbb
jmp
loopne
xor
popf
movsb
pushf
cmpsl
sub
cmpsb
jp
mov
sub
movsb
xchg
std
icebp
mov
mov
pop
push
jbe
push
cmp
ret
pusha
outsl
cmp
rcll
cmp
fwait
cmp
push
stc
add
icebp
mov
adc
enter
stos
pusha
ja
popf
rcr
rcrl
cwtl
cmc
xlat
lcall
xchg
add
jnp
dec
and
data16
shll
mov
cli
cmp
inc
popa
cltd
mov
mov
das
cmc
xor
test
or
stc
iret
push
jp
repz
dec
fldl2e
cmp
sbb
mov
mov
xor
add
or
inc
addr16
cmp
dec
xchg
or
out
adc
add
sbb
leave
sub
imul
aam
daa
dec
cmp
and
addb
cmpsl
jne
xor
in
scas
mov
popf
cmp
fdivr
pop
scas
inc
pop
cld
xor
xor
cs
jo
jae
inc
daa
leave
cli
dec
inc
imul
ljmp
lds
jae
fucomip
mov
mov
xchg
and
fdivs
loop
push
testb
mov
push
push
cli
lds
insl
pop
dec
std
aas
xchg
or
in
push
das
mov
aas
insb
lea
adc
lcall
rcrb
xchg
xchg
sbb
fsubrl
add
xchg
xor
outsl
or
cmp
jmp
arpl
adc
push
adc
notb
sub
mov
adc
and
adc
dec
push
mov
sbb
sub
movsl
lcall
and
call
out
sbb
das
aad
xchg
adc
pop
or
cmpsb
mov
fsts
sti
outsb
cmpsb
bound
push
stc
sbb
push
sub
int3
sbb
xchg
icebp
pop
dec
xchg
shrl
push
je
cmp
sbb
out
bnd
xor
push
shll
addb
xchg
and
lret
aad
outsl
mov
mov
enter
lahf
dec
pop
pusha
scas
lcall
icebp
jbe
lret
arpl
shrl
arpl
fmul
dec
or
mov
aaa
adc
mov
adc
add
scas
and
cmp
pop
xchg
push
mov
fnstenv
jp
fbld
or
cltd
enter
push
shlb
and
mov
xchg
out
and
fcompl
ja
rcr
cmp
push
addl
movsb
push
aas
add
aaa
xlat
mov
ret
pop
add
push
xchg
data16
sub
add
scas
and
jecxz
cmpsb
push
outsb
clc
adc
std
gs
lds
insb
add
jge
leave
rcll
rorl
add
into
inc
cmp
push
out
xchg
shll
adc
movsb
ja
mov
sar
fdivl
and
xchg
jl
dec
ss
inc
jmp
jge
dec
adc
loop
cli
mov
xchg
or
mov
jg
test
push
xchg
jp
add
jl
in
push
dec
push
in
imul
mov
pop
fisttpll
sahf
add
outsl
imul
dec
in
outsb
sub
xor
imul
in
xchg
mov
cld
fwait
and
push
adc
loope
bound
adc
mov
gs
add
or
mov
push
cmp
jno
or
pusha
mov
mov
fsts
rcl
xchg
or
mov
sarl
push
or
xor
movsl
sbb
jl
xor
mov
jo
stos
orb
xchg
out
ss
arpl
add
out
mov
mov
cmpsb
aad
push
pop
push
cld
divl
jmp
cmpsb
sbb
lock
inc
test
dec
ja
sbb
push
dec
pop
push
fucomip
dec
adc
test
es
jp
imul
jge
out
mov
xor
sti
sahf
hlt
xchg
out
out
push
and
ds
repnz
sbb
cmpsb
test
notl
push
push
ljmp
dec
cmp
lcall
ds
jge
pop
ret
rorb
jg
lds
imul
mov
adc
test
or
out
ret
mov
push
cmp
loopne
dec
xchg
adc
and
push
insb
orb
mov
ljmp
cmc
add
pop
loopne
std
adc
fistpl
xchg
pop
enter
adc
into
pushf
and
lahf
mov
nop
mov
dec
inc
mov
lods
out
mov
ret
jo
cmp
jae
push
cltd
push
or
in
and
add
stos
clc
outsb
pop
mov
rcl
sahf
je
mov
test
cmp
sbbb
subb
rcr
shlb
or
pop
and
lcall
sub
add
aas
test
scas
jecxz
mov
mov
loopne
xchg
or
xor
aas
lods
pusha
push
or
sub
add
mov
popa
mov
add
daa
or
mov
sub
mov
xor
adc
mov
sti
add
mov
std
and
push
fwait
ret
xchg
out
inc
push
mov
adc
mov
fldcw
std
pusha
inc
mov
mov
sub
mov
pop
cmp
adc
lret
sbb
xchg
cmp
xlat
push
movsl
dec
call
scas
xor
xchg
outsb
insb
adc
into
out
in
sub
pop
mov
pop
pop
pop
xchg
add
dec
in
cmp
sbb
push
sub
fs
outsl
lahf
sarb
out
mov
push
out
sbb
insb
repnz
roll
cmp
sbb
push
inc
fimull
jecxz
mov
imul
mov
dec
jne
movsl
loopne
pop
jge
inc
mov
repz
jns
insl
hlt
cs
adc
push
adc
adc
xor
adcl
add
and
and
mov
inc
cld
in
and
test
cmp
pop
cmp
dec
cmp
pop
enter
popa
shlb
sbbb
push
xlat
jae
push
inc
bound
xchg
mov
cmp
sbb
stos
call
push
cmp
push
xchg
mov
pusha
jae
call
mov
sti
mov
add
loop
and
test
mov
mov
cmp
jl
cmp
jg
sub
std
pop
and
jmp
rcrl
inc
lea
push
mov
cmp
mov
xchg
out
js
test
lret
push
std
repz
outsb
push
je
cs
fs
inc
mov
sub
or
imul
test
xchg
and
xor
xchg
adc
ret
dec
call
sub
or
adc
sub
adc
xchg
xchg
mov
push
pop
sbb
adc
mov
out
mov
adc
and
xchg
push
fidivs
frstor
push
out
call
int3
stos
add
or
pop
ja
dec
ret
std
or
jae
loope
daa
lods
lock
adc
pop
mov
inc
mov
mov
cmp
inc
add
mov
daa
xchg
lret
jp
or
xlat
js
rcr
cs
xchg
bound
inc
loope
add
cmp
loope
rorb
mov
cs
push
and
js
data16
popf
inc
dec
pop
lahf
push
jo
jne
mov
mov
int3
cltd
lds
cld
hlt
scas
scas
and
cmp
rcl
adc
xchg
popa
cmpsl
pop
inc
repnz
push
icebp
loop
cmpsb
jg
pop
xor
std
pusha
ss
lret
in
lret
repz
xor
out
add
aam
xor
mov
sbb
inc
dec
jecxz
ss
mov
mov
push
push
pop
push
cmpsl
sahf
push
add
roll
mov
jb
aas
and
es
ss
in
push
pusha
mulb
outsb
aas
sub
jo
les
xchg
fcoml
fs
push
mov
dec
daa
outsl
mov
into
jmp
pop
mov
faddl
sbb
rcrl
pop
dec
sbb
or
pop
stos
xchg
inc
call
sbb
jmp
in
or
adc
stos
inc
jae
inc
out
jmp
mov
and
mov
lret
dec
cmp
sbb
mov
fmull
push
mov
in
dec
pop
ljmp
xchg
daa
sahf
and
dec
xor
sbb
and
and
cmc
shl
pop
in
jg
adc
and
jmp
push
jmp
sub
sbb
inc
stc
stos
cmp
mov
hlt
cli
mov
sti
leave
adc
mov
lcall
je
lcall
and
sbb
jle
or
arpl
xchg
in
popa
dec
push
xchg
mov
cmp
push
into
daa
daa
cmp
arpl
and
sarl
leave
int
mov
xor
sub
not
or
xchg
push
pop
push
incb
mov
lahf
pop
in
rcrb
add
not
inc
das
imul
jb
xchg
sub
cltd
or
sbb
mov
imul
movsl
ljmp
jo
fs
jbe
or
dec
sub
ss
jnp
lods
pop
xchg
fimull
push
sahf
xchg
pop
ret
adc
lea
dec
mov
lret
push
inc
stos
jbe
pop
incl
fstps
xor
mov
movsb
mov
adc
rolb
lods
pop
jg
arpl
lcall
outsb
imul
xor
inc
dec
or
mov
enter
or
imul
mov
cli
push
movsl
inc
xlat
sbb
pop
dec
push
out
cltd
mov
adc
dec
aad
jnp
or
dec
push
xchg
lret
jg
cwtl
ficoml
inc
lcall
mov
dec
jl
cmp
popa
call
xchg
ljmp
into
pushf
in
mov
das
aas
pop
aas
iret
add
fwait
call
xchg
mov
mov
inc
and
call
mov
inc
jle
sbb
cld
jecxz
pop
cmp
or
push
push
sbb
xor
rcl
pop
cmpb
sub
fst
push
test
mov
repnz
ljmp
cli
hlt
cmp
test
lods
add
inc
sbb
jg
fisttps
inc
inc
pusha
call
mov
mov
es
stc
psubusw
add
into
loope
das
stos
aas
mov
cmp
mov
push
xor
jae
and
push
sub
inc
bound
pop
cmp
pusha
mulb
pop
or
inc
popa
xor
cld
cli
push
jno
adc
into
push
adc
add
xchg
loope
imul
cwtl
xchg
mov
stos
sti
daa
xor
cmp
std
mov
hlt
xor
xchg
dec
push
sub
push
and
ds
addl
sbbb
mov
daa
fs
push
push
fwait
add
cwtl
dec
mov
and
ret
xor
pop
jmp
imulb
inc
mov
fsubrs
inc
sub
sub
stos
push
adc
stos
aad
insb
adc
add
cs
cs
push
push
mov
push
imulb
in
lret
iret
loopne
dec
cltd
fwait
adc
out
cmpsl
xchg
add
movsl
sbb
and
jp
jmp
jge
pop
push
jno
push
and
test
or
xchg
sbbb
ret
xor
fldenv
rcll
mov
or
lcall
push
sar
xor
jno
mov
aad
mov
test
idiv
adc
and
dec
lret
or
cmp
adc
es
nop
movsl
sbb
pop
and
push
xlat
push
decb
test
adc
loope
xor
test
leave
fmuls
stos
call
inc
push
xchg
and
jle
jnp
jae
push
cmp
negb
sub
test
das
jl
shr
stos
or
in
and
frstor
sar
xchg
sti
xor
or
sbb
push
js
adc
and
jb
jbe
shl
adcl
jo
dec
mov
ficoms
daa
add
incb
fisubrs
aaa
pushf
dec
push
dec
xchg
mov
cmpsb
mov
xchg
and
xor
aad
xor
bound
aad
cmp
nop
mov
cmc
movsl
cmpsl
call
ss
sub
sarb
test
fimuls
jno
xor
push
xor
xor
mov
inc
call
push
mov
ljmp
subb
xchg
in
adc
pop
ljmp
lcall
push
std
scas
cli
and
push
lret
lret
inc
ret
iret
lds
xchg
cmp
mov
idivb
mov
mov
ljmp
inc
pop
adc
roll
fwait
or
in
mov
xchg
mov
bound
sbb
adc
adc
sub
pop
jl
loop
bound
in
mov
filds
ljmp
in
inc
dec
cli
jge
or
cwtl
notb
mov
xchg
and
mov
jne
xor
push
xchg
add
.byte
and
mov
add
data16
cld
or
or
in
push
adc
outsb
adc
divl
inc
adc
or
xchg
iret
fucomi
sbb
add
shl
jno
dec
out
jmp
cmpsb
adc
jne
dec
inc
mov
cmc
out
fsts
out
or
mov
jb
lods
xchg
mov
push
or
hlt
adc
daa
push
push
scas
mov
push
inc
jns
fwait
push
in
cmc
adc
in
mov
mov
cli
lret
enter
dec
dec
mov
pop
jecxz
mov
xchg
inc
imul
ss
test
sahf
divl
int
jp
mov
out
add
out
jp
mov
and
insl
push
jne
mov
cmp
jp
mulb
test
sbbb
out
adc
scas
add
xor
dec
mov
mov
sbb
fcoml
cli
inc
rcll
pop
push
dec
addb
loop
pop
push
xor
dec
sbb
sbb
xlat
sbb
jecxz
stos
test
enter
mov
push
xlat
repnz
adc
loope
bound
lds
xchg
call
jnp
xchg
dec
aad
pop
add
es
sub
test
or
adc
xor
xor
inc
test
pushf
mov
dec
xor
loope
das
sbb
dec
negb
repnz
cld
fcoml
ja
stos
aad
push
dec
mov
add
sub
xchg
push
lds
mov
faddp
cmp
mov
adc
cld
cmp
add
popa
leave
push
or
outsb
pop
into
addr16
and
int
jle
xchg
ja
scas
xchg
iret
pop
inc
or
pop
outsb
or
cli
aam
test
dec
adc
mov
outsb
aaa
cmpsb
xlat
and
aad
std
inc
aad
repz
add
in
xor
or
dec
xchg
mov
sbb
ret
xor
cmp
icebp
jb
ljmp
and
add
lret
sbb
test
jle
xor
mov
lods
in
xchg
jecxz
aas
stos
cwtl
roll
pushf
inc
mov
cwtl
push
rcll
test
mov
xor
mov
jo
js
dec
sbb
xor
adc
pop
stos
or
loopne
pop
xor
xor
dec
sbb
testb
dec
jecxz
aad
sub
jle
sbb
out
mov
jnp
adc
daa
add
test
shll
mov
fucomp
popa
lds
jl
push
sti
push
mov
aad
daa
inc
sub
jno
adc
lret
mov
sub
std
jns
pop
or
in
arpl
jne
or
xor
enter
ds
jle
jp
cli
mov
mov
insb
ficoml
or
and
xchg
imul
mov
cmp
cmpsl
mov
jecxz
cmp
xchg
popf
add
mov
dec
sbb
push
xchg
xor
stos
ss
sub
fcoml
je
nop
in
dec
aaa
and
sbb
sahf
fldt
rclb
aad
pushf
aam
pop
gs
bound
adc
ret
xor
in
xor
inc
dec
stos
push
test
fbld
es
jp
aas
jl
call
arpl
stos
ja
ret
push
mov
push
ret
lods
jbe
and
lods
frstor
pop
mov
add
and
gs
and
faddl
fisubs
sub
repnz
xor
or
jae
sub
xor
mov
jne
xor
aas
lods
in
shll
sbb
cmpsl
out
cmc
xchg
push
mov
mov
or
push
adc
ss
repz
inc
out
ret
dec
imul
jae
cltd
push
push
add
leave
mov
push
fcoms
outsl
push
add
adc
fs
es
xlat
inc
and
das
or
inc
dec
es
xchg
mov
dec
insl
cmp
addr16
cld
cmp
lret
rol
push
push
jnp
or
xchg
push
mov
push
mov
fldenv
xlat
ljmp
pop
cmp
mov
mov
bound
div
loope
push
in
bound
xor
mov
sarl
cmp
push
sbb
in
mov
sarw
mov
jbe
ljmp
cli
ljmp
push
pop
ds
in
fstps
hlt
adc
mov
sub
outsb
out
inc
xor
push
les
sbb
adc
mov
and
dec
negl
jle
scas
push
or
cmp
xchg
stc
andb
jnp
xlat
inc
nop
xchg
stc
dec
imul
imul
push
lds
sbb
cwtl
and
sti
add
enter
jecxz
adc
movd
in
mov
xor
cmc
xchg
pop
xor
js
stc
dec
call
and
push
out
jae
or
push
rcll
outsl
jp
outsl
jno
sub
xchg
and
repnz
and
popl
test
repnz
xorl
inc
lret
add
hlt
sbb
xchg
jge
in
or
ja
jl
sub
sbbb
inc
or
mov
mov
loope
sahf
mov
xchg
lock
fists
add
mov
sub
xchg
jp
mov
mov
pop
icebp
pop
sti
lret
add
lods
cld
test
adc
or
pop
fwait
arpl
sbb
es
adc
adc
data16
inc
push
fdivrs
sub
aam
push
dec
stc
rep
xor
ficoml
push
outsl
test
cmp
sarb
mov
cltd
mov
and
repnz
pop
out
shlb
pop
gs
xchg
aaa
xchg
mov
inc
mov
repnz
repnz
mov
sub
popf
pushf
pop
fsubrs
xchg
xor
xchg
insl
loope
imul
test
dec
inc
push
jecxz
jns
movsb
ja
sbb
mov
mov
xor
mov
ljmp
add
cmp
xchg
pop
pop
xlat
mov
ret
xor
int3
movsb
sbb
xchg
mov
mov
sub
fildl
out
shl
lret
jns
stos
outsl
jne
sarb
ss
pop
adc
insl
aaa
mov
repz
lds
xchg
push
sub
lahf
pop
xchg
dec
mov
shll
mov
stos
or
cmpsl
pop
in
push
fs
sub
lock
cmp
jl
std
xchg
scas
pop
push
push
add
nop
mov
lcall
movl
imul
mov
pop
cmp
pop
movsl
sbb
cmp
test
xor
std
aam
out
mov
adc
mov
stos
cwtl
push
cmpsl
jns
mov
dec
fwait
lea
sbb
mov
and
mov
dec
mov
cmpsl
insl
sub
lea
mov
pop
lcall
cli
xchg
mov
das
addr16
and
xor
aaa
mov
xor
sub
in
mov
cli
hlt
sbb
jmp
adc
adcb
out
fistpll
subl
xor
mov
xchg
fs
sbb
repz
xchg
inc
pusha
popl
js
aaa
push
jmp
int
test
xor
nop
and
mov
gs
mov
and
cmc
push
xor
sub
pusha
testb
xchg
shll
data16
jns
or
inc
mov
fiaddl
enter
fwait
test
fnstenv
cmp
loope
add
lea
rclb
xlat
dec
mulb
pop
mov
fwait
aad
or
data16
nop
daa
inc
jp
mov
mov
repz
testl
inc
ss
sub
pop
mov
adc
movb
pop
out
cmp
and
xor
dec
bound
pop
popl
cmp
pop
jmp
inc
dec
add
andl
jl
int
and
or
add
jmp
ss
mov
ss
cmp
xchg
mov
in
adc
scas
icebp
or
mov
push
adc
add
sbb
inc
lds
and
xchg
pusha
aam
pop
adc
jbe
clc
data16
mov
in
inc
sub
or
ret
push
mov
mov
inc
jns
mov
sti
rcll
es
scas
out
adc
ret
test
xlat
in
cs
xor
rcrl
ss
mov
inc
fidivs
inc
pop
int3
scas
push
fidivs
rorb
inc
jnp
sub
lock
into
stos
adc
outsb
cmp
mov
cs
or
fisubs
lods
rcrl
ljmp
das
test
sub
mov
push
jle
inc
jge
dec
mov
xchg
add
repz
pop
inc
pop
push
cli
and
js
fs
xchg
mov
push
xchg
ftst
data16
and
mov
push
repnz
fcmove
lock
sahf
cs
xchg
fbstp
clc
mov
cmovne
push
inc
rcl
jge
jb
push
loope
mov
fyl2x
aaa
cmp
push
and
outsb
lock
adc
xchg
jo
dec
xchg
and
int
add
addr16
cmp
pop
add
and
and
adcl
enter
or
fistpll
mov
lret
sbb
daa
je
int3
mov
xorb
mov
rcrl
lock
add
cld
jo
xchg
pop
jecxz
out
inc
lea
dec
xchg
pop
ds
dec
scas
fdivrs
pop
xchg
mov
popf
insl
mov
add
lcall
jae
divb
jnp
lahf
push
ja
xor
cmp
arpl
push
mov
push
aaa
jl
fisttps
ret
bound
js
lcall
xlat
or
jg
mov
sub
loop
xorb
pop
cmpsb
ja
dec
test
int3
jbe
mov
sub
jle
push
loopne
int
and
jg
pop
jg
xchg
outsb
out
out
fldt
fs
cmp
lcall
inc
cmp
xchg
dec
addb
sbb
mov
js
ja
cltd
sti
outsb
insl
jmpw
in
cmpsl
out
sbb
std
and
popf
add
sub
push
orl
adc
push
in
xor
lods
cmp
popa
in
push
inc
js
pop
mov
adc
es
cmp
lcall
pop
lods
push
dec
xor
jnp
out
and
test
daa
mov
fsubl
cmp
inc
push
xor
dec
loopne
in
roll
xchg
mov
ja
xchg
xchg
mov
pop
cmp
xor
mov
adcb
or
incl
pop
pop
add
pop
push
mov
mov
leave
out
fidivl
mov
pop
push
lcall
or
leave
sub
push
out
je
sti
jge
pop
sarl
jecxz
add
notb
lcall
mov
movsl
negb
in
lret
gs
jmp
test
push
and
pop
loop
pop
sbb
jne
test
cmp
pop
jo
pop
adc
hlt
pop
loopne
enter
aam
jb
cmp
add
push
int3
cmp
std
adc
repnz
sub
cmp
lahf
mov
lods
cs
jns
jbe
mov
pand
ja
in
jmp
mov
mov
addb
lahf
lods
addr16
fisttpl
nop
jle
or
arpl
cs
or
mov
add
dec
pop
sbb
jl
test
xor
daa
fcom
or
sbb
loop
std
movsbl
fcoml
mov
pop
push
jnp
ret
or
xchg
loopne
and
addb
out
aam
js
clc
cwtl
rorl
jmp
aaa
rcrb
dec
adc
icebp
popf
cmp
add
dec
cli
clc
jp
push
jno
sub
push
jae
add
das
movsb
pop
jb
sarb
in
xchg
popa
sub
or
stc
mov
jle
or
mov
in
popf
add
fisttps
mov
lock
mov
jno
pushf
loope
das
dec
mov
out
fcmovnu
ljmp
push
sbb
ja
xchg
sub
jle
and
jne
mov
push
push
push
xchg
inc
into
int3
cld
int3
sahf
inc
sbb
sbb
cmp
and
jg
test
mov
pop
jmp
shl
jle
orb
adc
sub
xchg
adc
out
cmp
cmp
xchg
cmpl
inc
nop
or
ljmp
mov
fidivrs
test
cmpb
mov
dec
inc
jnp
aam
push
xchg
popa
loope
cmp
dec
jge
fwait
dec
xor
lcall
push
dec
mov
sbb
sub
imul
jle
cmc
mov
adc
xlat
rcl
inc
mov
sbb
pop
push
push
sub
ficoms
jl
ja
inc
loope
sbb
cmpsl
jl
jne
sub
xor
fs
movsl
movsl
in
pop
xchg
mov
xchg
pop
nop
fistpl
enter
adc
loope
mov
dec
dec
pop
dec
sbb
inc
push
cwtl
addb
jo
xor
sbb
std
pop
hlt
cmp
orb
mov
roll
popa
mov
adc
lock
nop
les
xchg
sub
decl
leave
dec
mov
jmp
shl
stc
scas
sub
or
push
shrl
add
cmp
mov
testl
das
shr
test
sbb
or
sub
sbb
lock
cwtl
punpckhdq
jb
ljmp
push
lds
or
or
xorb
push
mov
adc
jmpw
iret
enter
adc
fsubl
cmp
jae
fldenv
fistpll
cmpsl
adc
mov
arpl
mov
adc
dec
mov
and
movsl
add
cmp
xor
cli
push
sbb
dec
jge
cwtl
test
xor
sub
or
pusha
mov
dec
push
daa
in
pop
and
or
ret
mov
icebp
imul
pop
gs
push
lods
jbe
and
xchg
imul
jge
adc
adc
addb
inc
dec
adc
leave
aaa
repnz
xchg
insl
and
and
dec
rorb
lods
or
jg
idivl
cld
loope
daa
sbb
loop
inc
cmp
push
xorl
or
xor
data16
jb
shrl
inc
fbld
jne
inc
test
xor
mov
and
dec
lods
aam
xor
mov
fs
mov
jb
pop
imul
fld1
sub
cmp
or
mov
in
sahf
pusha
xchg
rcrl
cltd
sbb
das
mov
xor
cmpsl
gs
ljmp
or
scas
cwtl
sub
sub
ljmp
fidivl
orl
mov
pop
jne
mov
sti
adc
scas
pop
push
push
inc
sti
in
sub
cltd
dec
out
push
scas
test
cld
mov
adc
add
in
sti
jb
clc
inc
mov
dec
jmp
iret
or
or
invd
mov
outsl
aad
xchg
mov
cmpsb
mov
mov
ljmp
inc
out
cmpb
enter
rcr
stc
pop
xrelease
push
or
xor
cmpb
xor
lds
push
jne
sbb
mov
gs
ljmp
mov
mov
jmp
adc
lea
sub
int3
loopne
mov
outsb
push
xor
imul
sbb
xchg
and
sub
mov
fcompl
mov
das
sbb
insl
mov
and
into
sub
mulb
sarb
fists
push
pop
xchg
rcr
and
outsb
lret
fbld
adc
mov
aaa
mov
cmpl
pop
aaa
push
or
ja
fistl
outsl
mov
cmp
movsb
sub
insl
ljmp
loope
xlat
mov
sbb
xchg
jb
cmp
mov
imul
add
sahf
sbb
push
fucomp
pop
fwait
out
inc
addb
push
into
shlb
pop
bound
iret
test
mov
stos
daa
dec
lods
jle
and
sub
mov
inc
fs
lea
cwtl
enter
shll
pop
pop
xchg
pop
mov
adc
jmp
es
xchg
adc
pop
adc
cmp
dec
cmc
loopne
xchg
mov
std
dec
cmp
add
inc
mov
xor
cmp
push
dec
add
pusha
and
push
mov
js
mov
xor
xor
cli
inc
fidivs
sub
cmpsl
out
add
movsb
xchg
sbb
dec
add
int3
jle
pop
out
test
lea
sbb
shlb
push
or
dec
sub
mov
push
push
stc
add
cmpsl
or
lea
jns
and
aas
xchg
leave
test
dec
stos
xor
sub
adc
or
sarl
mov
icebp
xchg
cmp
cltd
test
lods
and
into
dec
xor
cmp
jns
xchg
and
shr
fcomps
sub
mov
iret
mov
inc
cmp
in
sbb
lret
repnz
mov
cmp
xor
and
dec
dec
sti
mov
jg
pop
mov
adc
dec
and
inc
jecxz
aam
pop
pop
mov
inc
sti
jp
xor
or
mov
sub
push
fadds
xchg
setb
mov
inc
sar
mov
jmp
fstps
lock
jg
mov
sbb
unpcklps
cmpsb
or
cs
inc
aam
dec
xchg
aas
lret
xchg
cwtl
jns
mov
es
and
test
fnsetpm(287
mov
sbb
cmp
jmp
bswap
popa
mov
mov
push
iret
call
xchg
sbb
and
inc
xchg
jo
lfs
sub
pop
subl
add
dec
aad
sahf
outsb
jmp
data16
xchg
dec
mov
mov
jp
shr
ja
jle
or
mov
mov
jno
scas
xchg
mov
pop
lret
pop
cmp
jo
dec
aad
cmpsl
or
cmp
jae
aaa
mov
cmc
arpl
xchg
pop
stos
lahf
loop
xlat
pop
in
xor
mov
cmc
imul
stos
rorl
or
in
ret
mov
sub
xor
pop
repz
pop
fdivl
dec
lahf
xor
lock
mov
mov
xor
inc
xor
loope
scas
sub
clc
adc
scas
xor
xor
sbb
inc
ret
adc
add
loope
dec
adc
push
and
sbb
xor
xchg
mov
push
push
pop
jne
mov
adc
xor
clc
xor
lret
dec
mov
pop
std
adc
mov
jle
sbb
cmc
adc
adc
mov
or
xor
push
dec
push
mov
stos
mov
xor
sbb
scas
loopne
out
dec
mov
push
pusha
or
push
lods
xor
xlat
decb
sub
enter
daa
dec
rorl
testl
subb
andb
cmp
add
xchg
movsb
cmpsb
xor
movsb
mov
mov
mov
ja
jp
movsb
stos
rcrb
dec
dec
adc
cwtl
and
sub
mov
and
add
stos
sub
pop
cmpsl
clc
jbe
jb
push
mov
lods
xchg
addb
std
bound
push
dec
jl
cmp
cmp
mov
inc
fs
jp
and
or
mov
dec
std
and
mov
daa
out
fcompl
cmp
outsb
xchg
push
lret
or
orb
inc
test
in
jns
icebp
sub
pushf
int
lea
test
iret
jg
jg
jmp
pop
iret
aam
bound
lea
loop
push
sarb
gs
mov
stos
mov
sbb
pop
push
in
inc
sti
and
addr16
mov
and
decl
mov
int3
pop
daa
test
stos
add
test
and
jbe
adc
ret
mov
xchg
sbb
sbb
mov
rcll
dec
enter
pop
fwait
arpl
jle
adc
push
stc
pop
jmp
lock
cld
shlb
rcr
dec
ja
pop
jmp
xchg
push
and
xor
mov
sub
add
in
add
lcall
icebp
js
or
mov
cmc
cmp
stos
mov
xlat
pop
push
jmp
xor
and
cmc
xchg
pop
pop
xor
xor
mov
jns
mov
and
or
pop
push
xorl
lcall
lods
push
cmp
pop
xlat
xchg
xchg
adc
mov
mov
xchg
sbb
sbb
sub
or
add
in
int3
mov
or
orb
mov
xorb
inc
cltd
testb
mov
mov
dec
nop
push
ret
mov
or
mov
cmp
dec
xchg
jae
xchg
cmpsl
orl
xchg
xchg
xchg
lods
jg
cmpsb
push
xchg
daa
pop
add
scas
add
daa
jno
lret
mov
push
jne
pop
xchg
and
inc
cmp
jb
lahf
adc
leave
sbb
mov
mov
sbb
cmpsb
lods
scas
mov
dec
out
push
mov
int3
push
jbe
bnd
leave
icebp
roll
cmp
clc
add
lcall
arpl
pop
push
out
fs
xor
inc
ret
mov
and
adc
cmc
mov
or
push
and
imul
add
sti
jl
cmc
xor
bswap
lods
push
xlat
sbb
dec
cmp
add
dec
xchg
inc
fidivs
lret
xor
cmp
lahf
push
add
test
sub
aas
and
stos
gs
xlat
adc
jle
loope
orl
pusha
outsl
pop
rcrl
and
mov
int3
into
xchg
push
cmp
pusha
dec
nop
ljmp
jmp
lds
ds
loop
cmp
pop
rcrl
cmp
inc
mov
fcoms
mov
sbb
jle
les
mov
nop
js
sub
mov
mov
sub
adc
sub
jns
mov
aad
aaa
lods
lahf
dec
data16
rol
lods
mov
jle
pop
fimuls
leave
sub
pop
pcmpeqw
fnsave
inc
imul
push
jno
jns
mov
add
vpmovzxwd
shrl
mov
xchg
in
push
xchg
subb
xchg
icebp
cmpsb
movsl
loopne
jae
insl
mov
lcall
or
jecxz
or
loopne
add
mov
mov
mov
dec
das
or
loopne
pop
xchg
movsl
push
cld
ret
and
scas
in
mov
cmpsl
xor
mov
mov
pop
js
mov
xor
and
fistps
bound
lcall
sbb
pop
add
or
div
out
nop
dec
pop
pop
and
data16
cli
push
pop
scas
inc
cmpsl
test
out
push
jp
jbe
stos
in
idivb
push
popa
jl
int
sarb
adc
inc
ret
pop
test
addr16
add
sbb
gs
mov
sarb
and
jno
mov
cwtl
jl
test
ljmp
pop
sbb
fstpt
push
std
lcall
xchg
pop
xlat
subl
je
inc
push
int3
adc
xor
cmp
cltd
inc
or
in
adc
jge
fs
sbb
gs
fs
das
call
push
add
push
jl
xchg
andb
call
xchg
mov
xor
pop
jo
testb
outsl
inc
or
lds
pop
xchg
mov
fwait
.byte
add
dec
add
dec
add
xor
adc
dec
add
xor
xor
add
add
pusha
cmpsl
cmp
add
add
add
or
add
add
push
add
addb
add
cwtl
add
addb
add
add
add
sbb
add
xor
add
add
add
xor
add
js
add
pusha
cmpsl
cmp
add
add
add
pop
add
add
add
add
add
add
add
add
addb
add
add
addb
add
or
add
and
add
pusha
cmpsl
cmp
add
add
or
add
push
or
cmpb
add
push
add
subb
push
or
addb
add
pushf
or
xorb
add
mov
add
add
add
rorb
add
fimuls
add
add
add
add
add
inc
add
addb
add
pusha
cmpsl
cmp
add
add
add
add
clc
or
sbbb
addb
add
pusha
cmpsl
cmp
add
add
add
sbb
jmp
add
sub
add
mov
sub
add
mov
sldt
mov
sldt
rolb
sub
add
call
sldt
add
add
sbb
add
xor
add
dec
add
add
pusha
add
add
js
add
nop
add
add
test
add
rolb
add
add
add
lock
add
or
add
and
add
cmp
add
push
push
add
push
sldt
addb
addb
add
cwtl
push
add
pusha
cmpsl
cmp
inc
outsl
insl
gs
add
adc
xorb
add
cmp
and
add
clc
push
add
pusha
cmpsl
cmp
add
add
add
pop
add
jg
add
pop
add
sub
add
inc
pop
add
pop
pop
add
jo
add
mov
add
mov
add
add
cmp
add
add
add
add
push
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
rolb
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
loopne
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
lock
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
add
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
adc
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
and
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
xor
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
inc
or
add
add
add
cmp
add
add
add
add
add
add
push
or
add
add
add
cmp
add
add
add
add
add
add
pusha
or
add
add
add
cmp
add
add
add
add
add
add
jo
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
orb
add
add
add
cmp
add
add
add
add
add
add
nop
or
add
add
add
cmp
add
add
add
add
add
add
mov
add
add
cmp
add
add
add
add
add
add
mov
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
rorb
add
add
add
cmp
add
add
add
add
add
add
rorb
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
loopne
add
add
add
lock
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
adc
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
and
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
xor
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
inc
or
add
add
add
cmp
add
add
add
add
add
add
push
or
add
add
add
cmp
add
add
add
add
add
add
pusha
or
add
add
add
cmp
add
add
add
add
add
add
jo
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
orb
add
add
add
cmp
add
add
add
add
add
add
nop
or
add
add
add
cmp
add
add
add
add
add
add
mov
add
add
cmp
add
add
add
add
add
add
mov
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
rorb
add
add
add
cmp
add
add
add
add
add
add
rorb
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
loopne
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
lock
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
adc
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
and
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
xor
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
inc
or
add
add
add
cmp
add
add
add
add
add
add
push
or
add
add
add
cmp
add
add
add
add
add
add
pusha
or
add
add
add
cmp
add
add
add
add
add
add
jo
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
orb
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
mov
add
add
cmp
add
add
add
add
add
add
mov
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
rorb
add
add
add
cmp
add
add
add
add
add
add
rorb
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
loopne
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
lock
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
adc
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
and
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
xor
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
inc
or
add
add
add
mov
or
xor
add
in
or
xor
add
sbb
add
dec
mov
add
andb
add
add
call
add
add
add
add
add
insb
stos
or
rolb
add
cmp
or
rolb
add
or
or
rolb
add
fsubrl
add
lods
mov
add
add
add
add
add
add
add
add
add
or
call
add
add
add
add
or
test
add
lods
les
add
add
add
or
in
add
in
or
in
add
add
leave
or
js
add
dec
int
add
rorl
add
add
add
add
movsb
rorl
add
add
xlat
or
add
add
adc
or
enter
or
call
add
add
add
add
fisttpl
add
add
add
add
js
or
faddl
add
push
loop
add
add
add
add
in
in
add
add
clc
jmp
add
jl
or
mov
add
sub
or
sbb
add
add
add
add
add
add
add
or
sub
add
nop
stc
or
mov
add
add
add
add
or
mov
add
aam
or
les
add
cwtl
add
rolb
add
or
add
add
or
and
add
push
adc
sbb
add
insb
adc
adc
add
adcb
add
add
xchg
adc
adc
add
test
or
adc
add
mov
add
add
adc
adc
add
in
or
adc
add
clc
adc
adc
add
pop
add
inc
add
inc
add
push
add
add
inc
add
dec
add
add
inc
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
push
add
push
add
inc
add
inc
add
add
add
inc
add
inc
add
dec
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
pop
add
inc
add
inc
add
add
add
add
inc
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
or
inc
add
add
add
push
add
add
add
add
inc
add
inc
add
dec
add
add
add
inc
add
inc
add
pop
add
add
or
dec
add
dec
add
push
add
inc
add
inc
add
inc
add
add
push
add
inc
add
inc
add
inc
add
dec
add
or
dec
add
dec
add
dec
add
dec
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
addb
incl
add
inc
add
inc
add
mov
add
mov
add
mov
add
mov
add
addb
add
add
add
add
add
add
incl
incb
incb
incb
incb
cld
add
cld
add
clc
add
clc
add
push
add
push
add
jmp
add
inc
add
inc
add
inc
add
cld
add
cld
add
cld
or
cld
ud0
cld
aas
cld
aas
cld
aas
jg
incl
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
incl
add
test
add
add
add
mov
add
add
add
rolb
add
add
add
add
add
add
add
add
push
add
psubb
add
add
add
test
out
jmp
sbb
ficompl
out
fcmovu
jmp
cmp
inc
add
inc
add
jmp
add
jmp
add
jmp
add
push
pop
clc
ud0
cld
pop
aas
aas
aas
cld
pop
clc
ud0
lock
jmp
add
jmp
add
jmp
add
inc
add
inc
add
incl
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
incl
add
lock
add
add
pushl
add
std
mov
pop
std
mov
pop
std
mov
pop
std
mov
pop
std
mov
pop
cmp
mov
push
fldl
add
jl
add
add
data16
add
add
jle
add
jg
add
jg
add
jg
add
jle
add
jl
add
js
add
jo
add
pusha
add
add
add
add
add
inc
pop
inc
pop
incb
pop
incb
pop
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
pushl
aas
pushl
add
call
add
incl
incl
incl
ud0
add
incl
aas
incl
jg
incl
incl
incl
incl
decl
lcall
aas
decl
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
addb
adc
add
and
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
loopne
add
and
add
inc
add
or
add
add
add
std
clc
push
jg
jmp
aas
inc
pop
inc
pop
clc
cld
add
cld
add
cld
add
cld
add
cld
add
clc
inc
pop
inc
pop
jmp
aas
push
jg
clc
std
call
add
add
add
add
add
add
add
add
add
add
add
addb
add
incl
add
loopne
add
mov
add
add
add
sub
add
mov
inc
add
test
add
sbb
add
mov
add
add
add
cld
pop
cld
pop
cld
pop
cld
pop
jmp
adc
inc
adc
incl
jg
add
aas
incl
add
test
inc
adc
jmp
adc
cld
pop
cld
pop
cld
pop
cld
pop
incl
add
add
add
add
add
add
add
add
add
add
add
addb
add
incl
pop
cld
add
pop
cld
add
pop
cld
add
pop
cld
add
pop
cld
add
pop
cmp
add
faddl
add
faddl
add
mov
add
inc
add
add
add
jbe
add
jle
add
jg
add
jg
add
jg
add
jle
add
jl
add
js
add
jo
add
pusha
add
add
add
add
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
pushl
pushl
add
call
add
incl
incl
incl
ud0
add
incl
aas
incl
jg
incl
incl
incl
incl
decl
lcall
aas
incl
add
add
add
add
add
add
add
add
add
add
add
addb
add
incl
add
add
or
add
sbb
add
push
add
sub
add
inc
add
add
add
inc
addl
add
add
pusha
xor
add
sbb
add
push
add
sbb
add
sbb
add
loopne
add
add
add
cld
pop
push
pop
jmp
add
inc
sar
xor
incl
clc
jg
sbb
sbb
jg
push
sbb
lcall
or
decl
test
pop
incl
loope
jmp
add
push
pop
cld
pop
ljmp
add
add
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
mov
xor
xor
xor
xor
xor
xor
xor
add
xor
adc
xor
xor
xor
add
xor
adc
xor
adc
xor
mov
xor
add
cmp
adc
xor
repz
clc
xor
xor
sbb
xor
repz
add
xor
cmp
adc
adc
xor
xor
clc
xor
add
xor
xchg
adc
sbb
xor
xor
repz
aas
xorl
add
xor
xor
adc
xor
xor
add
xor
cmp
adc
xor
repz
xor
xor
xor
xor
cmp
xor
xor
cmp
sbb
sbb
xor
xor
xorl
xor
add
xor
xchg
adc
xor
cmp
cmp
cmp
xor
add
xor
sbb
xor
xor
add
xor
cmp
xor
xchg
adc
xor
clc
xor
repz
add
xor
xor
xor
cmp
xor
xor
xorl
incl
xor
xor
xor
xor
xor
xor
xor
mov
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
and
add
adc
add
add
add
add
add
jl
add
adc
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
add
xor
and
xor
xor
cmp
xor
add
xor
and
xor
xor
xorl
cmp
xor
xor
add
sub
and
xor
cmp
aas
xor
xor
xor
add
and
xor
cmp
xor
xor
xor
add
sub
sub
and
xor
cmp
xor
xor
repz
add
xor
and
mov
cmp
xor
add
inc
and
xor
xor
repz
add
sub
and
and
cmp
repz
xor
mov
and
popl
xor
repz
cmp
xor
and
and
xor
cmp
cmp
xor
xor
mov
xor
xor
xor
xor
xor
cmp
and
and
xor
xor
repz
xor
add
xor
xor
mov
xor
xor
xor
xor
xor
cmp
and
xor
xor
xor
repz
add
xor
xor
xor
mov
xor
xor
cmp
add
xor
xor
xor
cmp
xor
xor
xor
xor
clc
repz
xor
xor
xor
xor
xor
xor
xorl
add
add
add
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
mov
xor
xor
xor
xor
xor
xor
xor
add
xor
adc
xor
xor
xor
add
xor
adc
xor
adc
xor
mov
xor
add
cmp
adc
xor
repz
clc
xor
xor
sbb
xor
repz
add
xor
cmp
adc
adc
xor
xor
clc
xor
add
xor
xchg
adc
sbb
xor
xor
repz
aas
xorl
add
xor
xor
adc
xor
xor
add
xor
cmp
adc
xor
repz
xor
xor
xor
xor
cmp
xor
xor
cmp
sbb
sbb
xor
xor
xorl
xor
add
xor
xchg
adc
xor
cmp
cmp
cmp
xor
add
xor
sbb
xor
xor
add
xor
cmp
xor
xchg
adc
xor
clc
xor
repz
add
xor
xor
xor
cmp
xor
xor
xorl
incl
xor
xor
xor
xor
xor
xor
xor
mov
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
cmp
div
xchg
mov
xor
add
inc
inc
inc
or
mov
xor
popl
add
xor
pop
push
xor
mov
cmp
xor
ud0
xor
xor
cmp
aas
add
xor
dec
pop
ud0
xor
xor
mov
xor
repz
add
xor
inc
aad
out
in
xor
xor
repz
add
xor
dec
pop
ud0
xor
xor
mov
xor
repz
add
xor
inc
aad
out
in
xor
xor
repz
add
xor
dec
pop
ud0
xor
xor
mov
xor
repz
add
xor
inc
aad
out
in
xor
xor
repz
add
xor
dec
pop
push
hlt
xor
xor
mov
xor
repz
add
xor
inc
aad
out
in
xor
xor
repz
add
xor
dec
pop
push
hlt
xor
xor
mov
xor
repz
add
xor
inc
inc
inc
inc
inc
xor
xor
clc
repz
add
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
add
xor
xor
xor
aas
push
xor
add
xor
xor
stos
mov
xor
mov
add
xor
xor
add
xor
xor
xor
clc
repz
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
repz
xor
add
xor
xor
inc
arpl
xor
xor
xor
xor
xor
add
xor
xor
inc
xor
xor
xor
cmp
xor
xor
add
xor
xor
arpl
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
xorl
xor
add
xor
xor
inc
arpl
xor
xor
xor
pushl
xor
xor
add
xor
ss
xor
xor
xor
cmp
add
xor
xor
inc
xor
xor
xor
cmp
xor
xor
add
xor
ds
xor
xor
cmp
xor
xor
add
xor
xor
inc
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
repz
xor
add
xor
xor
xor
inc
xor
xor
xor
add
xor
xor
inc
xor
xor
repz
add
xor
inc
inc
inc
xor
cmp
incl
add
xor
data16
xor
repz
add
xor
xor
data16
xor
repz
cmp
xor
add
xor
xor
out
jecxz
xor
xor
incl
xor
xor
xor
xor
xor
xor
cmp
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
inc
xor
xor
inc
xor
pushl
xor
pushl
add
xor
sub
xor
mov
xor
add
xor
xor
xor
aas
xor
add
xor
arpl
xor
cmpl
xor
xor
stos
inc
xor
xor
xor
cmp
xor
xor
xor
add
xor
inc
sub
xor
xor
xor
cmpl
xor
add
xor
stos
and
xor
xor
xor
xor
add
xor
push
and
xor
xor
xor
clc
pushl
add
xor
stos
inc
push
xor
cmp
clc
cmpl
aas
xor
add
push
inc
mov
xor
cmpl
aas
cmp
xor
add
xor
stos
inc
sub
xor
cmp
repz
clc
aas
xor
add
xor
mov
xor
xor
xorl
xor
xor
add
xor
xor
stos
inc
xor
xor
xor
xor
aas
xor
add
xor
xor
and
xor
xorl
xor
add
xor
xor
inc
xor
xor
xor
xor
aas
xor
xor
add
xor
mov
xor
xor
cmpl
xor
add
xor
xor
stos
inc
xor
xor
xor
xor
add
xor
xor
data16
xor
xor
xor
cmp
add
add
add
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
aas
pushl
xor
add
xor
xor
xor
xor
mov
add
xor
mov
adc
mov
xor
xor
pushl
add
xor
adc
cltd
xchg
adc
cmp
add
xor
adc
xor
cmp
repz
xor
adc
xor
xor
cmpl
repz
cmp
xorl
adc
adc
cmp
clc
repz
add
sbb
xor
cmp
repz
add
cmp
xor
adc
xor
cmp
clc
xor
sbb
adcl
cmp
repz
xor
sbb
adc
xor
xchg
cmpl
clc
xor
xor
orl
adc
cmp
cmpl
xor
xor
adc
xor
cmp
xor
xor
xor
clc
cmp
add
xor
adc
xor
xor
xor
add
cmp
sbb
xor
cmp
add
xor
cltd
adc
adc
mov
decl
xor
xor
xor
xor
mov
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
repz
xor
xor
add
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
add
xor
and
xor
xor
cmp
xor
add
xor
and
xor
xor
xorl
cmp
xor
xor
add
sub
and
xor
cmp
cmp
xor
add
and
xor
cmp
orl
add
cmp
xor
and
xor
cmp
xor
repz
xor
add
xor
inc
xor
xor
xor
add
xor
xor
cmp
and
xor
xor
xor
repz
xor
add
xor
xor
mov
xor
xor
xor
xor
xor
cmp
and
xor
xor
xor
repz
add
xor
xor
xor
mov
xor
xor
xor
xor
xor
cmp
inc
xor
xor
xor
cmp
popl
add
xor
xor
xor
mov
xor
xor
popl
xor
xor
xor
xor
xor
xor
xor
cmp
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
mov
add
xor
and
and
cmp
mov
xor
add
and
and
and
inc
xor
clc
cmpl
pushl
xor
add
and
sub
cmp
xor
mov
add
and
mov
inc
cmp
aas
xorl
xor
and
xor
cmp
inc
cmp
cmp
xor
cmp
popl
add
and
and
xor
inc
inc
cmp
decl
addl
cmp
xor
xor
mov
xor
add
xor
xor
xor
xor
xor
xor
xor
xor
incl
add
xor
xor
xor
xor
pushl
xor
mov
inc
inc
xor
cmp
and
mov
xor
add
cmp
inc
xor
xor
xor
xor
xor
inc
and
cmpl
clc
xorl
add
xor
and
and
xor
cmp
add
cmp
and
and
stos
and
cmp
xor
xor
mov
add
xor
stos
and
and
mov
decl
xor
xor
xor
xor
mov
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
repz
xor
xor
add
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
add
xor
and
xor
xor
cmp
xor
add
xor
and
xor
xor
xorl
cmp
xor
xor
add
sub
and
xor
cmp
cmp
xor
add
and
xor
cmp
orl
add
cmp
xor
and
xor
cmp
xor
repz
xor
add
xor
inc
xor
xor
xor
add
xor
xor
cmp
and
xor
xor
xor
repz
xor
add
xor
xor
mov
xor
xor
xor
xor
xor
cmp
and
xor
xor
xor
repz
add
xor
xor
xor
mov
xor
xor
xor
xor
xor
cmp
inc
xor
xor
xor
cmp
popl
add
xor
xor
xor
mov
xor
xor
popl
xor
xor
xor
xor
xor
xor
xor
cmp
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
adc
add
adc
add
add
add
add
add
addb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
add
add
add
xor
ud0
push
xor
ud0
incl
add
add
push
js
add
ud0
pop
mov
lock
decl
mov
decl
call
incl
out
xchg
xor
push
js
add
ud0
incl
add
xor
push
xor
ud0
incl
add
xor
decl
add
xor
incl
xor
xor
add
add
xor
xor
add
add
add
add
add
add
sbb
add
add
add
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
add
add
add
rol
inc
rol
add
add
add
rol
incl
add
rol
add
add
rol
addb
addb
inc
rol
add
add
add
rol
incl
add
add
add
inc
rol
add
add
add
rol
incl
add
rol
add
incl
incl
incl
incl
incl
add
incl
incl
incl
incl
incl
incl
incl
add
add
add
rol
addb
addb
inc
rol
add
add
add
rol
incl
add
add
incl
add
add
incl
add
add
add
incl
add
addb
inc
rol
add
add
add
rol
incl
add
rol
add
add
add
incl
add
add
incl
add
add
add
incl
add
add
rol
addb
addb
inc
rol
add
add
add
rol
incl
add
incl
add
add
add
incl
add
addb
inc
rol
add
add
add
rol
incl
add
rol
incl
add
add
add
incl
add
add
rol
addb
addb
inc
rol
add
add
add
rol
incl
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
inc
rol
add
add
add
rol
incl
add
rol
incl
incl
add
add
add
rol
addb
addb
inc
rol
add
add
add
rol
incl
add
incl
incl
addb
inc
rol
add
add
add
rol
incl
add
rol
add
add
add
incl
add
add
incl
add
add
add
incl
add
add
incl
add
add
add
rol
addb
addb
inc
rol
add
add
add
rol
incl
add
add
incl
add
add
incl
add
add
add
incl
add
add
incl
addb
inc
rol
add
add
add
rol
incl
add
rol
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
rol
addb
inc
rol
add
add
add
rol
incl
add
rolb
rol
addb
addb
inc
rol
add
add
add
rol
incl
add
add
rol
add
add
rol
addb
addb
addb
addb
inc
rol
add
add
add
rol
incl
add
add
rolb
rol
addb
addb
addb
addb
inc
rol
add
add
add
rol
incl
add
add
add
addb
addb
addb
addb
inc
rol
add
add
add
rol
incl
add
add
rolb
add
add
incl
incl
incl
add
incl
incl
incl
add
rol
addb
addb
addb
addb
addb
inc
rol
add
add
add
rol
incl
add
add
add
incl
add
incl
add
incl
add
add
add
inc
rol
add
add
add
rol
incl
add
add
rolb
add
add
add
add
incl
add
incl
add
incl
add
add
add
rol
addb
addb
addb
addb
inc
rol
add
add
add
rol
incl
add
add
add
incl
add
incl
incl
incl
incl
addb
addb
addb
addb
inc
rol
add
add
add
rol
incl
add
add
rolb
add
add
add
add
incl
add
incl
add
rol
addb
addb
addb
addb
inc
rol
add
add
add
rol
incl
add
add
add
add
add
add
incl
incl
add
incl
add
incl
add
add
add
inc
rol
add
add
add
rol
incl
add
add
rolb
add
add
add
add
incl
incl
incl
incl
add
rol
addb
addb
addb
addb
addb
inc
rol
add
add
add
rol
incl
add
add
add
addb
addb
addb
addb
inc
rol
add
add
add
rol
incl
add
add
rolb
rol
addb
addb
addb
addb
inc
rol
add
add
add
rol
inc
rol
add
add
add
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
add
inc
add
push
add
add
add
add
add
cmp
dec
add
add
add
add
add
push
add
add
popa
add
jae
and
push
add
jb
imul
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
jae
jae
and
je
jns
jo
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
add
popa
add
outsb
add
je
and
arpl
push
add
add
add
add
and
jae
imul
and
outsl
add
and
popa
add
add
push
add
inc
add
add
insl
add
add
push
add
push
add
inc
add
add
jb
jb
outsl
add
and
and
and
add
push
add
inc
add
add
insl
add
add
and
inc
add
insb
add
adc
inc
add
jb
add
je
outsl
add
jns
and
outsb
add
je
and
add
jo
je
jns
str
outsl
add
je
and
outsb
add
je
and
data16
jne
outsb
add
add
add
add
jne
add
je
and
jb
add
add
je
add
add
jb
and
data16
imul
add
add
add
jne
add
je
and
jb
add
add
je
add
add
add
popa
add
jae
add
add
dec
add
dec
add
and
jae
add
jbe
add
and
arpl
popa
add
outsb
add
je
and
arpl
outsl
add
outsb
add
arpl
je
add
push
add
jno
jne
add
je
and
jb
add
add
je
add
add
add
popa
add
jae
add
add
add
and
arpl
insb
add
add
je
and
jo
jb
outsl
add
jb
popa
add
and
popa
add
add
add
add
outsb
add
add
add
add
outsl
add
je
and
add
data16
add
add
je
and
jne
jae
add
sub
add
add
push
add
imul
add
ja
outsb
add
add
outsl
add
imul
add
add
jb
jb
outsl
add
add
add
imul
add
add
add
jbe
add
and
add
add
add
outsl
add
add
add
jo
outsl
add
add
add
dec
add
jbe
popa
add
add
add
outsl
add
imul
add
add
jne
je
push
add
add
popa
add
add
outsb
add
add
add
add
add
add
add
add
outsb
add
add
popa
add
add
outsb
add
add
jb
jb
outsl
add
and
je
outsl
add
add
outsl
add
imul
add
add
add
jbe
add
add
add
add
popa
add
add
dec
add
dec
add
and
jae
add
jbe
add
and
data16
imul
jb
add
add
add
outsl
add
outsb
add
arpl
je
imul
and
outsb
add
je
and
popa
add
add
ja
add
add
jns
and
jb
jne
insb
add
jae
add
add
dec
add
je
ja
outsl
add
imul
add
outsb
add
add
arpl
push
add
add
add
add
outsl
add
je
and
jne
outsb
add
add
arpl
push
add
add
add
add
outsl
add
outsb
add
arpl
je
imul
and
jb
add
jne
jae
add
add
push
add
add
add
js
jo
imul
add
add
add
outsl
add
insl
add
outsb
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
add
add
add
jb
imul
add
jae
and
add
ja
outsb
add
add
add
add
add
jb
imul
add
jae
and
jne
outsb
add
add
arpl
push
add
add
add
add
add
add
add
jo
jo
add
add
outsl
add
outsb
add
arpl
je
imul
and
outsl
add
and
jb
add
add
add
add
outsl
add
je
ja
popa
add
add
add
popa
add
jae
add
add
outsl
add
outsb
add
arpl
je
imul
and
popa
add
outsl
add
je
add
add
outsl
add
outsb
add
arpl
je
imul
and
jb
add
add
add
jns
and
jo
add
jb
add
add
outsl
add
add
jne
data16
add
and
jae
jo
popa
add
add
add
jbe
popa
add
insb
add
bound
insb
add
add
push
add
arpl
imul
add
add
jae
and
popa
add
add
popa
add
add
add
outsl
add
outsb
add
arpl
je
add
add
add
outsl
add
imul
add
add
jae
and
outsb
add
je
and
arpl
outsl
add
outsb
add
arpl
je
add
add
add
popa
add
outsb
add
je
and
jae
add
add
add
jb
and
jb
add
add
jbe
add
add
data16
add
and
jae
outsl
add
imul
add
add
jae
and
arpl
insb
add
jae
add
add
add
add
and
insl
add
outsb
add
and
jb
add
add
add
arpl
add
sub
and
arpl
popa
add
outsb
add
je
and
jae
jo
insb
add
arpl
add
add
add
outsb
add
arpl
je
imul
and
je
imul
add
add
jne
je
add
add
outsl
add
outsb
add
arpl
je
imul
and
jb
add
jne
jae
add
add
add
add
and
insl
add
outsb
add
and
insb
add
jbe
add
add
add
data16
add
jns
insl
add
outsl
add
add
and
insb
add
outsb
add
jae
add
add
imul
and
outsb
add
insl
add
and
je
outsl
add
and
insb
add
outsb
add
add
add
je
and
imul
add
ja
outsb
add
add
add
outsl
add
add
outsl
add
je
add
add
add
add
outsl
add
je
add
add
push
add
outsl
add
add
popa
add
jns
and
outsl
add
add
and
data16
insb
add
jae
add
add
jo
add
popa
add
add
outsb
add
add
outsl
add
insb
add
add
insb
add
arpl
imul
add
add
add
jo
add
popa
add
add
outsb
add
add
outsl
add
and
imul
jo
jb
outsl
add
jb
add
jae
add
add
jo
add
popa
add
add
outsb
add
add
insb
add
add
add
and
imul
jo
jb
outsl
add
jb
add
jae
add
add
outsl
add
imul
add
add
jo
add
popa
add
add
outsb
add
add
outsb
add
add
outsl
add
sub
add
imul
add
add
add
je
imul
je
imul
and
popa
add
add
add
jae
and
jb
add
jne
imul
add
add
add
add
jae
popa
add
add
add
add
and
insb
add
outsb
add
add
add
jb
outsl
add
add
outsl
add
add
jb
outsl
add
add
add
add
add
add
outsl
add
and
jae
outsl
add
imul
add
add
inc
add
add
add
jb
outsl
add
add
outsl
add
add
jo
je
imul
add
add
jb
outsl
add
add
outsl
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
add
outsl
add
imul
add
add
add
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
add
jo
add
popa
add
add
outsb
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
outsb
add
add
outsl
add
imul
add
add
add
jb
outsl
add
add
outsl
add
add
popa
add
imul
and
outsb
add
je
and
jae
jne
jo
jo
outsl
add
je
add
add
add
add
add
jae
jae
and
data16
insl
add
insb
add
and
outsb
add
je
and
jae
jne
jo
jo
outsl
add
je
add
add
jns
and
jo
jb
outsl
add
add
outsl
add
add
popa
add
imul
add
add
add
add
jae
jae
and
popa
add
add
popa
add
add
add
outsb
add
add
jae
add
add
add
popa
add
outsb
add
je
and
popa
add
jae
imul
and
jb
add
jne
add
je
add
add
add
add
jae
jae
add
add
add
jb
jb
outsl
add
and
outsl
add
and
arpl
popa
add
add
add
imul
outsl
add
imul
add
add
add
jb
popa
add
jns
and
data16
outsb
add
je
imul
and
and
add
jb
jb
outsl
add
and
outsl
add
and
insb
add
popa
add
add
add
add
imul
outsl
add
imul
add
add
add
jb
popa
add
jns
and
sub
and
add
add
add
outsl
add
add
outsb
add
and
push
add
add
insl
add
and
and
add
add
outsl
add
outsb
add
arpl
je
imul
and
je
outsl
add
add
add
add
outsl
add
outsb
add
arpl
je
add
add
add
add
arpl
outsl
add
outsb
add
arpl
je
imul
add
add
arpl
outsl
add
outsb
add
arpl
je
add
add
add
add
outsl
add
outsb
add
arpl
je
and
je
imul
add
add
jne
je
add
add
add
jae
and
outsb
add
je
and
popa
add
add
popa
add
add
add
add
jbe
imul
add
add
imul
add
add
jb
jb
outsl
add
and
and
and
and
add
add
add
outsb
add
add
jb
jne
jo
je
add
add
jns
jae
je
add
and
arpl
popa
add
add
add
add
popa
add
add
imul
and
outsb
add
insl
add
add
add
add
arpl
arpl
add
jae
and
add
outsb
add
add
add
inc
add
add
add
add
add
jae
jae
add
add
outsb
add
popa
add
add
add
jb
add
insl
add
outsb
add
add
add
outsl
add
adc
inc
add
add
popa
add
add
add
outsl
add
outsb
add
arpl
je
add
add
add
popa
add
outsb
add
je
and
popa
add
add
arpl
popa
add
add
add
outsl
add
imul
add
add
add
outsb
add
arpl
je
imul
and
inc
add
add
add
add
jb
popa
add
add
jne
insb
add
add
add
add
outsl
add
insb
add
add
outsl
add
add
imul
and
jae
outsl
add
imul
add
add
add
add
add
jae
jae
and
popa
add
add
add
outsl
add
je
and
popa
add
add
add
insb
add
add
add
and
imul
jne
jae
add
add
add
outsl
add
add
outsb
add
jne
add
and
add
je
popa
add
add
outsb
add
add
jne
data16
add
add
add
jae
outsl
add
imul
add
outsb
add
je
imul
imul
je
imul
and
inc
add
jb
outsl
add
add
add
add
add
imul
and
inc
add
arpl
add
add
add
add
add
imul
and
and
and
add
add
outsl
add
add
outsl
add
outsb
add
add
outsb
add
add
add
outsb
add
and
push
add
add
outsb
add
add
jb
add
jp
add
add
popa
add
and
add
imul
and
jo
add
and
popa
add
jo
insb
add
arpl
popa
add
add
outsb
add
add
add
add
outsl
add
outsb
add
arpl
je
add
add
outsl
add
add
add
add
add
add
add
add
add
add
inc
add
outsb
add
add
outsl
add
add
imul
and
imul
jo
outsl
add
je
and
jb
popa
add
add
and
sub
and
add
add
add
dec
add
jbe
popa
add
add
add
outsl
add
je
and
push
add
outsb
add
add
add
add
add
add
add
push
add
popa
add
add
add
add
jne
je
sbb
dec
add
js
and
insb
add
outsb
add
and
insb
add
outsb
add
je
push
add
arpl
add
add
add
add
add
add
outsb
add
arpl
je
imul
and
inc
add
jb
add
jb
adc
dec
add
popa
add
je
imul
and
inc
add
jo
je
imul
adc
add
arpl
je
imul
and
inc
add
jo
je
imul
and
push
add
js
je
str
outsb
add
outsl
add
add
popa
add
imul
add
outsl
add
outsb
add
add
outsb
add
outsl
add
add
add
je
str
add
jne
and
inc
add
arpl
imul
add
outsl
add
outsb
add
add
add
jne
and
push
add
js
je
add
dec
add
outsb
add
or
push
add
jb
outsl
add
add
add
popa
add
push
add
add
add
add
imul
add
push
add
ja
or
xor
inc
add
add
add
push
add
imul
outsl
add
and
inc
add
arpl
imul
add
outsl
add
outsb
add
add
imul
outsl
add
and
inc
add
popa
add
add
add
imul
outsl
add
and
push
add
js
je
sbb
dec
add
and
push
add
and
imul
add
ja
outsl
add
add
add
jo
add
imul
add
add
add
outsb
add
popa
add
add
add
je
jb
add
insl
add
add
jo
add
popa
add
add
outsb
add
add
imul
add
add
insb
add
add
add
popa
add
or
dec
add
add
jne
insl
add
add
jb
popa
add
or
add
add
add
add
outsl
add
add
jb
push
add
arpl
je
imul
and
inc
add
jo
je
imul
adc
add
insb
add
arpl
popa
add
add
outsb
add
add
outsl
add
imul
add
popa
add
add
add
popa
add
imul
add
outsl
add
outsb
add
add
jne
je
je
outsl
add
and
inc
add
arpl
add
add
jne
je
je
outsl
add
and
dec
add
add
insb
add
add
je
or
add
add
outsb
add
add
push
add
ja
or
inc
add
je
je
outsl
add
and
push
add
js
je
or
inc
add
jo
je
imul
and
push
add
js
je
pop
add
add
popa
add
insb
add
add
jb
popa
add
and
push
add
js
je
adc
dec
add
add
insb
add
add
je
and
inc
add
arpl
imul
add
outsl
add
outsb
add
add
imul
insb
add
add
je
and
push
add
js
je
add
push
add
popa
add
outsl
add
outsb
add
add
add
add
add
jbe
add
dec
add
jbe
jns
push
add
jne
jb
jo
insb
add
add
push
add
popa
add
add
jb
popa
add
push
add
imul
add
add
push
add
add
dec
add
insl
add
push
add
add
add
ja
add
inc
add
add
pop
add
jne
arpl
push
add
add
inc
add
jne
popa
add
add
je
add
add
outsl
add
add
and
inc
add
add
outsb
add
add
outsb
add
add
jb
outsl
add
popa
add
add
add
push
add
add
outsb
add
add
add
jbe
imul
and
data16
imul
add
add
outsb
add
add
jne
jae
je
outsl
add
and
insl
add
jae
jae
popa
add
add
add
add
add
add
add
add
jbe
imul
and
imul
je
popa
add
add
add
add
jne
arpl
arpl
add
jae
data16
insb
add
add
add
add
jbe
imul
and
and
and
add
add
popa
add
insb
add
add
add
add
add
outsb
add
je
popa
add
add
add
imul
and
add
jb
outsl
add
cmp
and
and
and
add
add
add
jbe
imul
and
jne
outsb
add
outsb
add
je
popa
add
add
add
add
jne
arpl
arpl
add
jae
data16
insb
add
add
add
add
jbe
imul
and
and
and
add
add
popa
add
insb
add
add
add
add
add
outsb
add
outsb
add
je
popa
add
add
add
imul
and
add
jb
outsl
add
cmp
and
and
and
add
add
add
imul
add
add
outsl
add
je
jb
outsl
add
add
jne
jae
je
and
push
add
and
popa
add
add
popa
add
add
add
outsl
add
and
jb
add
outsl
add
imul
and
arpl
outsl
add
je
jb
outsl
add
add
jb
outsl
add
and
add
arpl
imul
add
add
add
add
add
add
arpl
imul
add
outsl
add
add
add
outsl
add
add
outsl
add
outsb
add
add
add
add
arpl
imul
add
outsl
add
add
add
popa
add
and
outsb
add
and
arpl
outsl
add
je
jb
outsl
add
add
outsb
add
bound
insb
add
and
je
outsl
add
add
imul
and
popa
add
add
add
insb
add
and
outsl
add
and
inc
add
outsb
add
add
je
jae
adc
dec
add
and
push
add
and
data16
jne
outsb
add
add
outsl
add
and
and
add
outsl
add
add
outsl
add
je
add
je
sub
add
jae
imul
jbe
add
add
add
add
add
outsb
add
je
popa
add
add
add
dec
add
and
je
outsl
add
imul
bound
popa
add
add
add
add
add
add
jns
jae
je
add
and
imul
je
popa
add
add
add
add
arpl
imul
add
add
inc
add
ja
outsb
add
add
outsb
add
add
inc
add
insb
add
add
push
add
add
add
insb
add
add
inc
add
add
add
add
outsb
add
popa
add
add
add
insb
add
jo
bound
outsl
add
jb
add
add
outsl
add
insl
add
je
and
inc
add
add
bound
outsl
add
jb
add
add
add
jae
and
outsb
add
je
and
jae
jne
jo
jo
outsl
add
je
and
dec
add
outsl
add
jae
adc
add
outsb
add
je
and
outsl
add
add
and
arpl
insb
add
jo
bound
outsl
add
jb
add
add
add
jne
and
daa
add
add
add
jae
and
popa
add
add
popa
add
add
add
add
outsb
add
and
jne
jae
add
add
jns
and
popa
add
outsl
add
add
jb
and
data16
jb
insl
add
add
add
jbe
imul
and
data16
imul
add
add
outsb
add
add
add
add
add
js
add
jne
je
add
add
jb
je
add
jae
je
outsl
add
add
add
jae
add
add
outsl
add
je
imul
add
add
add
add
add
add
outsl
add
add
add
insb
add
add
add
and
je
outsl
add
add
insb
add
add
add
and
je
outsl
add
add
add
insb
add
add
imul
add
add
push
add
bound
add
inc
add
arpl
add
add
add
add
add
arpl
add
push
add
push
add
add
push
add
inc
add
add
inc
add
add
dec
add
insl
add
add
dec
add
data16
add
jo
add
add
push
add
add
add
popa
add
outsb
add
je
and
add
popa
add
and
popa
add
add
outsl
add
insl
add
add
add
add
imul
jae
adc
inc
add
push
add
add
add
add
add
imul
jae
add
add
outsb
add
pop
add
imul
popa
add
jae
pop
add
popa
add
outsb
add
outsb
add
add
add
outsl
add
or
dec
add
data16
jb
insl
add
je
imul
pop
add
outsl
add
data16
jb
insl
add
add
add
add
add
outsl
add
add
dec
add
add
popa
add
arpl
add
add
add
add
add
add
add
bound
outsl
add
je
push
add
add
add
add
add
adc
dec
add
outsb
add
and
imul
add
je
add
add
add
arpl
add
add
jne
bound
sub
add
jne
and
imul
outsb
add
je
and
imul
insl
add
outsb
add
sbb
dec
add
je
and
add
outsl
add
add
and
je
imul
jb
jae
and
popa
add
popa
add
insb
add
bound
insb
add
inc
add
jb
outsl
add
jo
dec
add
add
js
and
arpl
popa
add
outsb
add
je
and
bound
add
add
add
jae
and
je
push
add
add
and
jo
jb
add
imul
jae
and
insl
add
outsb
add
and
imul
insl
add
add
and
inc
add
outsl
add
jo
dec
add
add
js
xor
add
outsb
add
je
and
arpl
jb
add
je
add
add
outsl
add
insl
add
add
add
outsl
add
add
inc
add
and
data16
jb
insl
add
and
popa
add
add
add
jne
jb
jb
add
je
insb
add
and
popa
add
je
imul
sub
inc
add
add
outsl
add
je
jb
outsl
add
add
popa
add
outsb
add
je
and
push
add
and
imul
add
add
add
jae
and
imul
and
jo
popa
add
add
je
add
dec
add
push
add
popa
add
arpl
add
add
add
add
add
add
outsl
add
add
insb
add
push
add
add
insb
add
jae
add
add
add
add
outsl
add
add
add
add
add
add
add
add
jb
je
add
add
insb
add
add
add
push
add
jae
jne
jo
jo
outsl
add
je
add
add
insb
add
jo
bound
outsl
add
jb
add
add
outsl
add
insl
add
je
pop
add
jne
je
and
outsl
add
and
jae
jns
jae
je
add
and
jb
add
outsl
add
jb
arpl
add
sbb
add
jbe
popa
add
and
add
add
and
outsb
add
je
and
popa
add
add
ja
and
add
popa
add
imul
adc
dec
add
jbe
popa
add
add
add
insl
add
add
and
jae
imul
adc
dec
add
jbe
popa
add
add
add
insl
add
add
dec
add
jae
je
pop
add
outsb
add
popa
add
add
add
insl
add
add
dec
add
jae
je
and
dec
add
add
js
sub
inc
add
imul
add
add
add
add
add
add
add
insl
add
add
dec
add
jae
je
and
add
je
popa
add
add
jb
outsl
add
and
jae
je
jb
add
insl
add
add
popa
add
insb
add
add
add
add
add
jb
imul
and
dec
add
popa
add
add
add
je
and
add
je
popa
add
add
add
add
je
jb
add
insl
add
inc
add
jb
outsl
add
and
arpl
jb
add
je
imul
and
ja
imul
outsl
add
and
add
jbe
imul
and
arpl
outsl
add
je
add
je
sbb
inc
add
jb
outsl
add
and
arpl
jb
add
je
imul
and
ja
imul
outsl
add
and
arpl
insb
add
jae
jae
sub
inc
add
outsb
add
outsl
add
add
outsl
add
jne
jae
and
popa
add
add
add
popa
add
insb
add
add
add
jb
and
imul
imul
bound
insb
add
and
ja
imul
outsl
add
and
inc
add
outsb
add
add
insb
add
add
add
add
add
popa
add
and
outsb
add
and
jo
popa
add
add
je
and
ja
imul
outsl
add
sbb
add
outsb
add
je
and
push
add
and
popa
add
and
dec
add
add
add
push
add
add
outsl
add
insl
add
add
popa
add
outsb
add
je
and
arpl
push
add
add
add
imul
bound
insb
add
and
imul
dec
add
push
add
outsl
add
and
outsl
add
and
dec
add
dec
add
add
and
inc
add
outsb
add
outsl
add
add
popa
add
add
add
and
jbe
imul
bound
insb
add
and
ja
imul
outsl
add
and
insl
add
add
insb
add
add
add
jne
and
imul
add
and
outsl
add
je
and
outsl
add
and
jb
popa
add
add
add
adc
push
add
add
popa
add
and
ja
jb
imul
and
add
jb
outsl
add
sbb
push
add
jb
add
add
add
jb
add
je
imul
and
add
jb
outsl
add
cmp
and
and
add
add
add
add
add
jb
jb
outsl
add
cmp
and
and
add
add
add
add
imul
outsl
add
jae
and
jae
outsl
add
imul
add
add
jb
jb
outsl
add
cmp
and
and
add
add
add
and
outsl
add
and
inc
add
dec
add
add
add
add
inc
add
jns
outsb
add
push
add
outsl
add
jae
and
jae
outsl
add
imul
add
add
jb
jb
outsl
add
and
and
add
outsl
add
add
add
add
jae
jae
and
jae
jo
add
imul
add
add
popa
add
daa
add
add
add
je
add
and
outsl
add
and
popa
add
and
outsl
add
add
and
jae
outsl
add
imul
add
add
popa
add
daa
add
add
jb
add
je
add
add
add
and
jae
outsl
add
imul
add
add
outsl
add
imul
add
add
insb
add
add
add
and
outsl
add
add
sub
inc
add
outsb
add
add
add
push
add
add
add
popa
add
add
and
ja
push
add
and
jae
outsl
add
imul
add
add
jae
and
popa
add
je
imul
sbb
inc
add
je
insl
add
jo
and
imul
add
and
imul
outsb
add
je
and
jbe
popa
add
add
add
arpl
outsl
add
and
imul
add
and
imul
outsb
add
je
and
jbe
popa
add
add
add
add
add
imul
and
imul
outsb
add
je
and
jbe
popa
add
add
add
outsb
add
popa
add
add
add
imul
insb
add
add
outsl
add
insl
add
je
sbb
push
add
popa
add
and
insb
add
outsb
add
and
imul
add
and
outsl
add
je
and
outsl
add
and
jb
popa
add
add
and
inc
add
outsb
add
outsl
add
add
push
add
add
add
add
and
jae
imul
and
outsl
add
and
popa
add
and
imul
outsb
add
add
add
outsb
add
popa
add
add
add
add
add
add
add
add
add
outsl
add
and
daa
add
add
add
add
je
and
arpl
popa
add
popa
add
imul
and
outsl
add
je
and
outsl
add
and
bound
outsl
add
outsb
add
add
add
add
add
add
je
and
arpl
outsl
add
outsb
add
add
jne
je
and
outsl
add
and
bound
outsl
add
outsb
add
add
add
add
add
add
je
and
imul
add
and
outsl
add
je
and
outsl
add
and
bound
outsl
add
outsb
add
add
add
add
add
add
jne
je
and
outsl
add
and
insl
add
insl
add
jb
jns
and
ja
push
add
and
add
jo
popa
add
add
outsb
add
and
insl
add
insl
add
jb
jns
and
jae
je
jb
add
insl
add
add
jb
jb
outsl
add
and
jb
add
add
outsb
add
and
and
add
and
add
add
add
je
jb
add
insl
add
add
add
add
add
jb
jb
outsl
add
adc
add
jo
add
je
jns
and
imul
jb
add
add
add
add
add
popa
add
insb
add
add
add
add
add
jb
add
je
add
add
add
and
and
add
popa
add
insb
add
add
add
add
add
add
add
add
add
add
outsl
add
and
daa
add
add
add
popa
add
insb
add
add
add
add
add
add
add
add
add
add
outsl
add
and
daa
add
add
add
outsl
add
jb
arpl
add
add
add
outsl
add
add
outsl
add
outsb
add
add
add
add
imul
add
outsl
add
add
insl
add
insb
add
insl
add
outsb
add
add
add
jo
add
popa
add
add
outsb
add
add
outsl
add
add
insb
add
add
add
add
outsb
add
add
outsl
add
je
add
add
add
je
and
and
add
outsl
add
add
outsb
add
add
and
arpl
insb
add
jae
jae
and
jb
add
imul
jb
popa
add
add
outsb
add
add
jb
outsl
add
jo
sbb
push
add
outsl
add
add
je
jns
and
and
add
add
jae
and
outsb
add
je
and
add
imul
sbb
inc
add
outsb
add
outsl
add
add
jae
jae
imul
and
popa
add
add
add
add
add
and
and
add
imul
and
imul
add
and
outsl
add
je
and
outsl
add
and
jb
popa
add
add
sub
inc
add
outsb
add
add
add
jb
imul
and
je
outsl
add
add
and
jb
add
add
add
add
add
add
outsl
add
jb
arpl
add
add
je
jb
add
insl
add
inc
add
add
imul
add
outsb
add
push
add
imul
and
arpl
popa
add
add
add
add
jb
outsl
add
and
je
push
add
add
add
and
add
add
push
add
and
imul
dec
add
push
add
add
add
and
insl
add
imul
je
push
add
add
add
insb
add
jae
jae
and
and
add
outsl
add
add
outsl
add
outsb
add
add
and
arpl
insb
add
jae
jae
and
outsb
add
insl
add
add
add
add
insb
add
add
add
and
add
imul
jae
and
add
je
and
add
add
and
outsb
add
je
and
popa
add
add
ja
and
add
jo
insb
add
arpl
popa
add
add
and
sub
and
xor
and
add
add
and
arpl
outsl
add
jo
outsl
add
add
je
and
outsb
add
insl
add
add
add
add
insb
add
add
add
and
add
imul
jae
and
add
imul
and
insb
add
jae
je
and
add
add
and
outsb
add
je
and
popa
add
add
ja
and
add
jo
insb
add
arpl
popa
add
add
sbb
inc
add
outsb
add
outsl
add
add
jb
add
je
add
add
imul
and
and
and
add
add
add
add
popa
add
outsb
add
je
and
outsl
add
add
and
data16
insb
add
and
and
and
add
add
add
add
outsb
add
popa
add
add
add
je
jb
add
insl
add
add
outsl
add
insl
add
je
and
daa
add
add
add
add
add
jae
and
outsb
add
je
and
popa
add
add
popa
add
add
add
outsl
add
jo
outsl
add
add
je
and
outsb
add
insl
add
push
add
outsb
add
popa
add
add
add
jb
outsl
add
add
je
jns
and
jbe
popa
add
add
adc
add
popa
add
add
add
jb
outsl
add
add
je
jns
and
jo
popa
add
add
add
outsb
add
popa
add
add
add
jb
outsl
add
add
je
jns
and
jbe
popa
add
add
add
push
add
outsb
add
add
outsl
add
add
push
add
add
add
add
add
add
add
inc
add
imul
popa
add
add
jne
outsb
add
add
push
add
outsl
add
add
jns
pop
add
add
jae
add
jns
or
push
add
add
add
add
jns
or
push
add
jne
jb
jae
add
jns
push
add
jb
imul
jns
or
push
add
je
jne
jb
add
jns
sbb
push
add
popa
add
insb
add
and
je
outsl
add
add
jb
add
je
add
add
add
add
je
outsl
add
jns
sbb
inc
add
arpl
add
je
outsl
add
and
data16
jb
and
daa
add
add
add
outsl
add
add
outsl
add
outsb
add
add
add
add
add
add
dec
add
je
add
dec
add
jbe
add
inc
add
arpl
pop
add
popa
add
jne
popa
add
jns
or
inc
add
bound
jb
jne
popa
add
jns
add
add
arpl
push
add
jb
imul
dec
add
jns
add
dec
add
outsb
add
add
dec
add
insb
add
push
add
jne
add
jae
je
or
push
add
jo
je
add
bound
add
pop
add
arpl
je
outsl
add
add
or
dec
add
jbe
add
bound
add
or
inc
add
arpl
add
bound
add
adc
inc
add
jae
add
je
imul
and
data16
imul
add
add
outsb
add
add
data16
arpl
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
js
arpl
add
je
imul
and
imul
jae
popa
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
bound
jae
je
jb
popa
add
je
and
inc
add
jb
outsl
add
aas
add
arpl
arpl
add
jae
and
jbe
imul
popa
add
add
outsb
add
add
je
and
popa
add
add
add
jae
and
and
add
outsb
add
add
outsl
add
add
add
add
add
add
add
add
add
data16
add
add
add
jae
jae
and
and
add
jns
jae
je
add
and
inc
add
jb
outsl
add
add
add
add
outsl
add
add
add
add
add
add
pop
add
and
arpl
popa
add
add
add
add
add
outsb
add
add
push
add
add
jne
outsb
add
je
imul
and
data16
imul
add
add
popa
add
add
inc
add
bound
add
dec
add
jb
add
inc
add
jb
add
dec
add
jns
add
dec
add
outsb
add
add
jne
insb
add
add
jne
add
add
push
add
popa
add
add
jb
imul
and
inc
add
jb
outsl
add
and
arpl
jb
add
je
imul
and
jbe
popa
add
imul
je
and
outsl
add
and
jae
popa
add
add
add
jb
jb
popa
add
sub
push
add
jb
imul
je
and
outsl
add
and
jae
popa
add
add
add
jb
jb
popa
add
and
imul
add
and
outsl
add
je
and
outsl
add
and
bound
outsl
add
outsb
add
add
add
popa
add
imul
je
and
outsl
add
and
jae
popa
add
add
add
jb
jb
popa
add
and
imul
insb
add
arpl
imul
add
add
outsb
add
popa
add
add
add
popa
add
imul
je
and
je
jns
jo
add
add
outsl
add
jbe
add
jae
imul
sbb
dec
add
jbe
popa
add
add
add
popa
add
imul
je
and
outsl
add
add
popa
add
add
outsb
add
add
popa
add
add
add
popa
add
imul
je
and
outsl
add
add
popa
add
add
outsb
add
add
add
add
add
add
sub
or
and
add
outsl
add
insb
add
add
outsl
add
add
outsl
add
jbe
add
je
and
jbe
popa
add
imul
je
and
outsl
add
and
je
jns
jo
add
add
add
add
add
outsb
add
add
add
add
add
add
add
add
add
jb
data16
add
and
ja
push
add
and
arpl
outsl
add
jbe
add
je
imul
and
jbe
popa
add
imul
je
and
outsl
add
and
je
jns
jo
add
add
add
add
add
outsb
add
add
add
add
add
add
add
add
add
popa
add
imul
je
and
outsl
add
add
data16
add
adc
dec
add
jbe
popa
add
add
add
jb
add
insl
add
outsb
add
add
outsb
add
popa
add
add
add
popa
add
imul
je
and
je
jns
jo
add
add
jo
add
popa
add
add
outsb
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
outsb
add
js
jo
add
je
add
add
popa
add
imul
je
and
add
jb
outsl
add
adc
add
add
outsb
add
insb
add
add
js
arpl
add
je
imul
and
and
add
add
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
add
imul
outsl
add
and
bound
jns
and
jp
add
outsl
add
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
jbe
add
data16
add
sbb
inc
add
add
je
imul
and
jo
outsl
add
outsb
add
add
outsb
add
add
data16
add
sbb
dec
add
jbe
popa
add
add
add
outsl
add
outsb
add
add
and
outsl
add
add
popa
add
add
outsb
add
add
outsb
add
popa
add
add
add
insb
add
jae
jae
and
je
jns
jo
add
popa
add
je
xor
inc
add
arpl
add
jae
and
jbe
imul
popa
add
add
outsb
add
add
je
and
popa
add
add
add
jae
and
and
add
add
add
data16
add
add
add
jae
jae
and
and
add
arpl
arpl
add
jae
and
jbe
imul
popa
add
add
outsb
add
add
je
popa
add
imul
add
jbe
add
data16
add
or
add
je
jb
outsl
add
add
and
push
add
add
jb
imul
insb
add
add
add
add
outsb
add
je
jb
jne
arpl
je
imul
adc
dec
add
add
popa
add
add
outsb
add
add
bound
outsl
add
je
add
add
js
arpl
add
je
imul
and
and
add
outsb
add
add
outsl
add
add
add
add
add
je
and
and
add
add
and
add
add
add
jo
jo
insb
add
arpl
popa
add
add
outsb
add
add
jb
jb
outsl
add
xor
inc
add
jb
insl
add
je
and
daa
add
add
add
outsb
add
popa
add
add
add
jb
and
imul
outsl
add
jo
popa
add
add
insb
add
and
ja
imul
and
popa
add
add
insl
add
outsb
add
add
outsl
add
add
jb
add
insl
add
outsb
add
add
outsl
add
and
data16
jb
insl
add
je
and
daa
add
add
add
popa
add
imul
je
and
insl
add
je
push
add
add
popa
add
add
and
outsb
add
je
and
jae
jne
jo
jo
outsl
add
je
add
add
add
add
add
add
add
jae
and
outsb
add
je
and
popa
add
add
popa
add
add
add
outsb
add
add
add
and
jbe
popa
add
add
pop
add
outsb
add
popa
add
add
add
jb
add
insl
add
outsb
add
add
add
add
add
add
add
outsb
add
outsl
add
add
add
outsb
add
popa
add
add
add
jb
add
insl
add
outsb
add
add
add
add
add
add
add
outsb
add
outsl
add
add
add
add
data16
add
add
outsl
add
jns
or
dec
add
add
and
add
jb
outsl
add
and
and
add
imul
and
outsb
add
je
and
data16
jne
outsb
add
add
outsb
add
popa
add
add
add
imul
outsb
add
insl
add
adc
push
add
outsl
add
add
popa
add
jns
and
outsl
add
add
and
data16
insb
add
jae
adc
inc
add
insb
add
and
popa
add
arpl
add
jae
and
add
outsb
add
add
add
add
add
add
add
outsl
add
add
add
outsb
add
add
data16
add
imul
or
inc
add
jae
imul
add
jne
insb
add
add
outsb
add
popa
add
add
add
jne
insl
add
jb
imul
imul
jne
je
adc
inc
add
jbe
imul
outsl
add
and
bound
jns
and
jp
add
outsl
add
add
popa
add
add
and
arpl
push
add
and
add
jb
outsl
add
adc
dec
add
je
add
add
and
outsl
add
add
data16
add
and
dec
add
jbe
popa
add
add
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
jo
add
popa
add
add
outsb
add
add
xor
ss
inc
cmp
xor
xor
xor
inc
inc
inc
cmp
aaa
xor
xor
xor
cmp
cmp
inc
xor
inc
xor
inc
inc
ss
inc
inc
inc
xor
xor
inc
inc
inc
xor
inc
inc
inc
inc
xor
inc
xor
inc
inc
inc
xor
xor
inc
xor
xor
cmp
cmp
xor
xor
inc
xor
inc
cmp
xor
xor
xor
cmp
inc
inc
aaa
inc
xor
inc
xor
aaa
inc
xor
xor
aaa
inc
xor
inc
aaa
cmp
xor
inc
xor
cmp
xor
xor
inc
xor
inc
xor
cmp
cmp
inc
inc
xor
inc
inc
cmp
inc
cmp
inc
inc
cmp
inc
xor
xor
cmp
xor
xor
inc
inc
aaa
xor
cmp
xor
xor
xor
aaa
cmp
inc
cmp
inc
inc
inc
inc
cmp
inc
cmp
inc
cmp
inc
cmp
aaa
cmp
cmp
cmp
inc
cmp
xor
xor
inc
xor
xor
xor
aaa
inc
inc
inc
xor
inc
xor
xor
inc
inc
xor
inc
xor
ss
inc
xor
aaa
inc
xor
inc
xor
aaa
xor
inc
xor
inc
xor
xor
cmp
inc
ss
inc
xor
xor
cmp
xor
inc
inc
xor
cmp
xor
inc
xor
xor
xor
aaa
xor
xor
xor
xor
aaa
xor
cmp
inc
cmp
inc
aaa
inc
xor
aaa
inc
inc
cmp
inc
xor
inc
xor
cmp
xor
xor
xor
inc
cmp
inc
inc
inc
xor
or
push
inc
inc
inc
inc
pop
inc
dec
dec
or
popa
imul
gs
add
gs
test
jo
and
jb
gs
arpl
jae
or
imul
dec
outsb
jne
or
jb
gs
je
insb
gs
or
push
imul
popa
jo
imul
add
sahf
mov
jle
dec
dec
jb
inc
insb
imul
addr16
inc
insb
imul
je
add
add
jb
or
inc
je
inc
popa
arpl
inc
outsl
outsb
je
inc
push
je
push
inc
inc
xor
xor
pop
inc
dec
inc
push
push
inc
push
or
outsb
je
inc
outsl
insb
outsl
jb
or
insb
push
imul
js
or
outsb
je
dec
imul
inc
outsl
outsb
je
dec
popa
insl
adc
add
add
inc
outsl
outsb
je
push
je
insb
or
or
jns
jb
jbe
gs
push
dec
insb
fs
jb
popa
je
dec
jb
gs
or
jae
je
outsl
outsb
pop
push
jo
push
arpl
outsb
inc
outsb
je
jb
dec
outsb
inc
jb
popa
je
pop
or
jb
inc
jb
popa
je
or
dec
gs
outsl
ja
pop
or
jb
dec
gs
outsl
ja
or
insb
jae
gs
outsb
arpl
pusha
or
je
imul
push
push
push
popa
outsb
gs
push
push
popa
outsb
gs
xor
gs
add
push
outsl
jo
add
push
imul
push
popa
bound
fs
add
add
dec
fs
inc
push
inc
insb
imul
je
outsl
imul
imul
js
imul
outsl
outsb
pop
or
inc
js
gs
imul
fs
imul
add
dec
outsb
inc
outsl
outsb
outsb
arpl
pop
sbb
je
outsl
imul
imul
outsb
arpl
add
outsl
jb
add
add
gs
sbb
add
push
push
imul
je
dec
outsl
imul
pop
inc
outsb
popa
bound
or
dec
outsb
je
jb
popa
insb
add
ljmp
imul
jne
outsl
dec
outsl
imul
push
imul
data16
cmp
add
push
push
jns
push
jb
jns
push
jns
push
jb
jns
arpl
push
inc
arpl
or
inc
gs
outsb
imul
outsl
outsb
cs
popa
je
or
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rolb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
or
add
js
mov
add
jo
ja
pop
jo
add
clc
mov
add
mov
pop
ja
jo
add
incl
ja
ja
add
js
mov
add
js
mov
jg
clc
xchg
add
jg
mov
add
ja
pop
ja
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
rolb
add
add
add
add
add
add
add
dec
imul
popa
jns
imul
outsl
jo
jo
outsl
fs
insl
push
imul
arpl
or
jo
jo
insb
imul
push
imul
jo
sbb
add
dec
fs
inc
push
inc
insb
imul
push
inc
push
inc
insb
imul
popa
js
imul
outsl
outsb
pop
or
inc
js
gs
imul
fs
imul
add
outsl
jb
add
add
push
push
push
imul
jb
or
je
jb
popa
insb
add
push
imul
insl
jb
push
imul
data16
push
add
add
add
add
int3
add
add
xchg
add
add
gs
adc
push
imul
insl
jae
adc
arpl
gs
add
push
jns
je
insl
add
adcl
je
sbb
dec
gs
popa
addr16
or
push
imul
adc
jns
gs
adc
dec
popa
je
add
popf
push
jns
inc
outsl
outsb
jae
add
add
jae
je
insb
jae
adc
je
jb
add
movl
add
push
imul
add
pop
inc
insb
popa
jae
gs
adc
push
push
dec
inc
outsl
outsb
jae
jae
adc
popa
jb
popa
outsb
je
add
and
popa
jb
je
insb
jae
adc
jns
dec
outsb
outsw
add
sub
popa
jo
imul
outsl
insl
insl
inc
je
insb
add
popl
popa
je
inc
add
fists
fs
arpl
add
mov
bound
add
pop
push
je
push
je
insb
jae
sbb
push
push
push
dec
add
es
outsl
outsb
je
outsl
insb
jae
adc
gs
adc
outsl
insl
inc
je
insb
jae
adc
je
jae
adc
je
jae
adc
dec
popa
jo
add
inc
inc
arpl
imul
outsb
jne
add
xchg
outsb
je
jb
add
int
insl
addr16
imul
je
inc
je
insb
jae
adc
outsl
addr16
adc
je
insb
jae
sbb
inc
insb
addr16
sbb
inc
outsl
insl
insl
inc
insb
add
sub
insb
dec
bound
sbb
push
gs
je
add
push
imul
sbb
push
jb
dec
outsl
outsb
add
mov
js
inc
insb
addr16
adc
inc
jne
je
outsb
jae
adc
push
imul
fisttpll
imul
adc
js
push
adc
dec
bound
add
push
imul
add
xchg
insb
push
imul
jae
inc
arpl
add
movsl
dec
jne
je
dec
outsl
outsb
add
dec
insl
insl
add
movsl
push
imul
imul
push
dec
gs
jo
outsb
je
jae
adc
push
gs
outsb
gs
outsb
imul
inc
push
inc
outsl
outsb
outsb
arpl
outsb
add
mov
je
inc
jb
gs
inc
popa
jae
add
or
inc
js
gs
imul
fs
insb
outsl
bound
add
les
push
je
arpl
imul
adc
push
gs
jne
arpl
je
imul
dec
fs
je
arpl
adc
fs
je
arpl
outsl
outsb
jae
jae
adc
dec
fs
imul
add
inc
dec
fs
push
dec
add
push
dec
fs
popa
jae
inc
outsl
insl
jo
outsb
outsb
je
adc
dec
fs
je
gs
insl
add
mov
fs
inc
push
push
je
gs
insl
add
decb
inc
outsl
insl
jo
outsb
outsb
je
adc
fs
outsl
arpl
je
popa
outsb
fs
add
push
dec
fs
outsb
je
jb
gs
add
inc
dec
fs
dec
dec
popa
outsb
fs
gs
adc
inc
push
gs
jns
adc
fs
dec
dec
popa
outsb
fs
gs
outsl
arpl
je
adc
fs
outsl
arpl
add
in
fs
jae
imul
insl
bound
jae
adc
imul
add
out
inc
inc
push
add
pop
jne
popa
push
arpl
inc
add
pop
jne
popa
dec
push
push
popa
jb
gs
adc
je
insb
jae
adc
insb
popa
arpl
outsl
add
push
insb
dec
gs
jo
xor
adc
outsb
popa
push
jns
gs
adc
outsb
popa
inc
insb
popa
jae
gs
adc
jne
popa
push
outsl
arpl
je
add
push
imul
adc
outsb
popa
push
popa
jbe
add
icebp
jne
popa
dec
jae
arpl
insb
popa
jae
gs
adc
outsb
popa
push
dec
inc
inc
add
xorl
dec
jae
arpl
push
dec
add
dec
dec
push
jns
je
insl
add
in
push
push
jns
gs
add
dec
popa
imul
jbe
push
outsb
fs
outsb
imul
inc
push
inc
insb
imul
push
imul
push
outsb
imul
add
mov
jae
jae
adc
outsl
inc
popa
jo
adc
popa
jo
adc
push
outsl
arpl
xor
jns
adc
pop
dec
dec
push
inc
push
add
lret
dec
dec
inc
outsl
outsb
jae
add
cs
arpl
inc
outsl
insl
jo
adc
dec
je
jo
jb
js
add
mov
push
inc
xor
add
and
jae
jb
jns
adc
arpl
jb
or
push
imul
jbe
imul
jae
add
arpl
imul
popa
push
imul
sbb
dec
ja
push
imul
dec
ja
inc
arpl
je
insb
add
dec
ja
push
imul
sbb
dec
ja
dec
je
je
je
jae
adc
dec
push
inc
inc
dec
add
hlt
push
add
aas
ja
outsb
outsb
je
gs
imul
imul
add
les
outsb
dec
outsl
popa
fs
imul
adc
pop
dec
imul
imul
add
inc
jne
imul
arpl
inc
inc
popa
je
add
mov
push
gs
jne
arpl
gs
imul
imul
add
mov
insl
popa
addr16
insb
jo
adc
dec
inc
js
dec
gs
push
outsb
imul
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
add
add
xor
add
push
add
add
add
add
add
add
add
xor
add
pop
add
add
add
add
and
add
add
add
sbb
mov
add
arpl
push
inc
adc
mov
shl
mov
das
negl
fcmovb
pusha
fldl
push
jo
stos
cmp
sbb
dec
add
pop
negl
xor
add
fwait
add
xchg
lods
push
ds
pop
mov
xchg
fsubrl
imul
aam
ds
pop
shl
add
cs
bnd
iret
cmp
adc
inc
mov
mov
mov
arpl
into
jne
dec
mov
cmp
loope
xchg
pop
aas
jnp
dec
mov
mov
push
inc
mov
sub
fisttpl
mov
lock
pop
sbb
cwtl
xchg
cwtl
mov
sti
lret
mov
push
sub
ret
xor
imul
xchg
xchg
or
imul
hlt
lahf
mov
mov
aad
dec
ret
std
imul
in
ret
rorl
push
xchg
mov
cmpsl
jns
out
sub
cmp
cld
jp
cmpsl
mov
mov
push
dec
outsb
pop
loop
add
test
xchg
cmp
push
pop
gs
test
inc
lret
outsl
repz
jae
lcall
call
jne
cli
jge
lea
daa
movsb
xlat
inc
cwtl
pop
int3
add
test
mov
mov
or
cwtl
notb
mov
pop
inc
scas
xchg
lret
fs
mov
fisttpl
sbb
cmp
out
stc
mov
ljmp
mov
outsl
popf
fmul
add
xchg
repnz
mov
mov
dec
xor
sub
test
mov
inc
xor
repz
in
jnp
jno
movups
inc
hlt
mov
or
out
lds
jp
lahf
add
xor
fs
rcl
in
sahf
dec
sti
mov
and
cmp
bound
testl
sub
inc
mov
push
stos
pop
push
stos
xor
xchg
shrl
pop
jo
xchg
lods
fwait
dec
pop
and
lcall
cmp
dec
pop
inc
xchg
and
notl
in
sbb
test
icebp
cmp
lcall
xor
enter
imul
or
xor
pop
loope
in
inc
andb
orb
pop
xchg
and
inc
int
mov
lret
call
xor
push
mov
jle
mov
outsb
mov
sub
cmp
inc
jns
inc
lods
xchg
or
daa
cmp
push
dec
cmc
test
push
and
mov
sahf
sub
jno
push
dec
int3
inc
imul
jae
loope
mov
xchg
shr
jmp
les
sub
and
gs
hlt
dec
xor
scas
clc
bound
xor
js
xor
jecxz
and
sarl
popf
mov
xchg
stc
mov
sub
int3
xchg
or
ret
sti
fiaddl
dec
jecxz
push
xor
stos
outsl
pusha
loope
mov
aaa
insl
test
xchg
xor
lcall
push
jmp
outsb
and
fwait
scas
imul
push
sub
lretw
ds
lret
dec
sbb
dec
nop
aam
xchg
mov
push
mov
xchg
stos
int
testb
push
popa
shll
or
xchg
push
les
mov
out
jle
stos
andb
mov
in
push
jle
scas
add
imul
mov
add
aam
xor
je,pn
add
push
jns
insb
pop
das
test
mov
cli
push
adc
dec
mov
mov
lret
mov
stc
adc
lods
stos
mov
fists
cmp
pop
push
out
pop
sub
stc
test
movsl
add
xchg
push
pusha
mov
lret
xor
mov
mov
fcomp
cmp
push
loop
push
inc
or
cmp
mov
subb
nop
and
mov
loopne
repz
xor
nop
mov
add
rorb
cmpsb
pop
lret
mov
popf
into
push
sub
sbb
mov
adc
pop
int3
and
mov
or
in
mov
inc
rorb
sbb
cmp
leave
es
cmp
push
mov
inc
or
dec
mov
ljmp
push
push
scas
out
jne
mov
or
pop
pop
pusha
adc
iret
out
jle
cltd
mov
stc
lret
or
mov
scas
mov
iret
or
scas
sti
loope
mov
ja
call
or
dec
adc
insl
gs
pushf
ds
imul
xor
sub
cmc
pop
mov
aad
inc
cmpsl
jmp
lds
lods
pop
sub
std
dec
cmp
lahf
mov
stos
pop
ret
enter
mov
into
enter
fadds
pushf
mov
or
stos
and
adc
pop
pop
in
push
divl
repz
sbb
iret
cmp
rcr
jnp
xor
popa
mov
push
loopne
xor
sti
popa
mov
and
daa
and
pushf
loop
ss
mov
fbstp
dec
push
cli
add
lea
mov
push
push
inc
ret
out
xchg
ds
push
movsl
pop
loop
xor
fldcw
cld
rolb
cmp
adc
mov
add
mov
push
dec
sbb
xchg
fbld
frstor
xchg
mov
rcrb
loop
sysret
ljmp
loope
sub
or
or
pop
push
mov
mov
ljmp
adc
sub
flds
jbe
jle
xchg
pop
lods
popa
xor
sbb
rorb
push
and
mov
je
dec
das
inc
sub
imul
lds
inc
addr16
xlat
insl
add
jo
and
fcoml
inc
inc
in
and
push
js
loope
or
out
dec
popa
addr16
xor
inc
mov
insl
dec
shlb
lds
pushf
lret
jbe
jb
das
int3
sbb
mov
xchg
cmp
mov
test
cmp
push
test
push
mov
out
add
dec
loop
dec
iret
inc
jb
out
in
cmpb
lcall
mov
mov
xor
adc
fstpl
ds
out
dec
fiadds
or
fldl
in
out
pop
pop
aad
movsb
pop
aam
cmpsl
push
or
arpl
lcall
cld
sahf
xor
ret
out
pusha
inc
cwtl
out
xchg
jns
push
je
dec
shll
sbb
fdivrs
les
sbb
add
or
cmp
shr
lock
sahf
fdivr
or
jo
jno
jecxz
idivl
insl
arpl
xchg
in
xchg
cltd
cld
mov
jecxz
inc
ds
lods
mov
cs
fchs
inc
mov
sub
xchg
mov
dec
es
and
mov
movsb
out
ret
sub
out
movsb
scas
jle
push
in
pusha
cmp
mov
mov
lds
xchg
jmp
cmp
mov
dec
mov
xchg
fwait
stos
xchg
ljmp
ret
in
frstor
loopne
mov
xchg
xor
movsb
jge
sub
popf
mov
sbb
pusha
and
xchg
adc
pop
cli
aas
test
adc
push
jl
fst
leave
mov
hlt
pop
pushf
scas
push
pushf
insb
mov
push
jo
rcll
and
lods
shll
es
xorl
lcall
sub
inc
jae
sbb
mov
pop
mov
xor
orb
jb
adc
adc
xor
inc
movsb
mov
cmpsl
dec
adc
nop
fnstenv
xlat
movsb
loopne
cmp
pop
inc
lret
popa
jnp
pop
rcrl
pop
cmp
jl
cmp
jae
mov
lret
mov
push
push
xchg
inc
aad
test
stos
arpl
lea
lea
push
imul
cmpsl
rorl
in
sbb
cs
std
arpl
pop
or
dec
hlt
bound
or
or
xchg
pop
push
sbbb
dec
lds
and
in
popf
retw
sub
jno
aas
arpl
aam
xchg
loope
mov
xchg
adc
imul
mov
fisubrl
adcb
sbb
push
push
adc
sti
cwtl
outsb
push
cmp
mov
mov
cmpsl
cmp
in
and
cs
adc
mov
bound
cmp
adcl
iret
add
ja
xlat
sub
xchg
test
pop
js
xchg
push
jg
xor
jo
nop
or
daa
daa
es
mov
mov
add
outsb
std
mov
movsb
loop
xchg
aaa
inc
cmp
jae
mov
int3
sarl
jge
and
ljmp
fs
incb
cmp
stos
add
fs
mov
add
icebp
shll
inc
out
mov
xor
cld
jo
scas
icebp
cmp
mov
dec
jmp
sbb
jns
cmp
fwait
cmpsb
arpl
jns
mov
sub
pushf
xchg
jl
mov
jge
jbe
mov
mov
ja
lods
adcl
int3
add
movsl
or
in
xchg
mov
call
sub
mov
insl
jbe
cmp
aas
mov
insl
mov
sti
sbb
in
movsl
cmpsl
test
je
gs
enter
ja
scas
add
popf
mov
subl
cmp
lds
pop
movsl
fwait
call
in
dec
adc
jb
add
ret
shl
mov
repz
xchg
loop
aam
pop
jbe
iret
in
movsb
mov
add
pop
adc
jecxz
push
mov
outsl
jnp
enter
cltd
mov
std
scas
das
adc
and
xchg
jne
xchg
push
sbb
jl
fnop
jnp
or
inc
cmpsl
pop
fcomps
outsb
jg
pop
out
mov
enter
bound
push
lcall
sub
push
dec
lods
and
jnp
out
out
mov
imul
into
loopne
into
bound
lret
shrb
inc
pushf
jecxz
test
fs
push
cs
test
or
mov
mov
cmp
ss
inc
cmp
add
jb,pt
inc
fcomps
mov
fisttps
movsl
mov
push
inc
movsl
push
stos
lahf
jae
dec
mov
fs
mov
xchg
mov
mov
rorl
mov
les
or
jl
es
and
scas
std
in
loope
dec
sarl
xchg
inc
mov
loop
xchg
aam
or
imul
int
ficoms
push
bound
sub
push
das
pop
pop
sbb
lret
test
xor
cmp
out
push
jne
cltd
rclb
rorl
aas
inc
cmp
lret
sti
iret
sub
xchg
push
dec
cs
hlt
fwait
in
and
fidivl
in
push
mov
pop
and
repz
mov
out
push
int
mov
ja
or
lahf
inc
lods
movlps
loopne
shlb
or
and
jp
xchg
and
hlt
fsubl
ret
cmp
jle
pop
ja
divb
bound
pushf
testl
lretw
jbe
mov
cmpsl
punpcklbw
sarb
mov
int
es
cmpsb
jge
add
pop
sub
out
push
pop
mov
push
mov
jmp
jno
lds
pop
gs
lock
sbb
jae
push
cwtl
dec
jg
les
mov
clc
imul
stos
jo
add
or
cmpl
aad
push
and
xorl
faddl
pop
pop
xor
sub
mov
or
fsubs
aas
mov
xor
or
dec
dec
sub
jo
inc
sub
xor
add
test
sub
mov
mul
dec
js
lret
fs
call
push
jl
dec
push
pop
outsb
fsubl
push
xchg
mov
inc
cmp
lret
jmp
mov
imul
push
push
cmpsl
scas
sbb
insb
inc
cwtl
xchg
repz
imul
and
fistpl
repnz
in
dec
ljmp
lock
sbb
mul
and
outsl
lods
sarb
test
pop
and
imul
pop
and
jg
push
fwait
dec
push
mov
roll
push
call
push
mov
out
imul
add
ss
hlt
xchg
filds
ds
int3
mov
xchg
mov
divb
mov
or
fistpll
xchg
adc
sbb
fsubrs
mov
dec
inc
rcl
rolb
mov
ljmp
push
push
in
cltd
xchg
shlb
shlb
lcall
repnz
lods
es
xchg
mov
ret
adc
pushf
nop
mov
cltd
or
std
mov
xchg
pop
gs
out
cltd
iret
pop
sarl
mov
jp
dec
xlat
xchg
cmp
movsb
xorb
filds
mov
fcmovnb
add
mov
jae
les
fwait
enter
fldcw
cltd
dec
outsb
es
jp
inc
or
or
repz
mov
fcomps
cmp
push
xlat
and
sbb
das
jmp
cwtl
enter
repnz
fdivl
mov
rorl
inc
subl
cmpl
mov
inc
mov
mov
dec
cmpsl
out
xorb
ret
mov
negl
negb
mov
jne
inc
daa
jae
jo
sbb
addr16
mov
mov
add
aaa
lahf
cmp
mov
dec
ret
and
cmc
add
mov
push
rorl
mov
mov
popa
icebp
xchg
add
sbb
test
fs
cli
sbb
add
fnsave
test
frstor
xor
lods
fildl
sarl
cltd
adc
sbb
xor
sbb
inc
cmp
or
loop
sbb
adc
dec
push
out
mov
sub
mov
aam
mov
adc
jle
inc
nop
leave
cwtl
adc
inc
mov
add
add
sbb
scas
xor
xchg
out
mov
sub
nop
mov
filds
and
inc
movsb
cltd
jb
pusha
imul
mov
clc
add
into
cld
imul
hlt
sub
add
movsl
ljmp
jno
jmp
mov
lret
and
or
and
in
int3
dec
sbb
pop
push
std
dec
nop
or
daa
push
cmc
inc
popf
jge
into
jno
shll
cmpsb
js
mov
rorl
jbe
test
std
mov
test
sbb
pop
mov
jge
inc
es
push
jmp
popf
iret
mov
icebp
mov
pop
push
bound
ficoms
jno
mov
dec
cmp
dec
inc
push
mov
sti
adc
iret
xchg
fnsave
dec
mov
pushf
lcall
clc
shrb
sar
out
sub
sahf
pop
pusha
in
out
fdivl
pop
mov
jl
out
bound
out
je
dec
pop
sar
and
int3
movsl
sbbb
scas
xchg
mov
cmpsb
mov
add
movsl
movsb
push
pop
jg
stos
setp
and
loope
pop
jmp
popf
movsl
clc
push
pusha
and
xor
and
or
arpl
cmp
mov
add
out
lcall
fbstp
xchg
cmp
inc
xorb
out
movsl
and
lret
adc
mov
or
insb
pusha
aas
or
dec
inc
aaa
pop
mov
mov
xchg
xor
ret
mov
push
dec
iret
aad
andb
add
xchg
or
pop
lods
ljmp
push
stos
xor
push
das
dec
jl
jo
shl
push
mov
lcall
.byte
push
inc
hlt
mov
lret
inc
jno
mov
add
mov
add
ret
inc
movzbl
shl
add
add
ret
push
mov
test
sub
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
test
add
or
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
push
push
pop
sbb
pop
pop
pop
pop
test
sbb
pop
and
pop
test
sbb
pop
pop
pop
add
pop
pop
pop
pop
pop
pop
cmp
pop
pop
add
pop
pop
pop
sub
pop
pop
adc
pop
pop
pop
pop
pop
pop
cmp
xor
xor
pop
pop
pop
pop
pop
test
pop
popa
pusha
call
mov
mov
inc
call
stc
push
xlat
or
shl
in
popa
fldenv
orb
cmp
fdivrl
xor
cmp
aad
cmpb
sti
dec
push
inc
pop
andb
out
incl
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
mov
call
mov
push
and
fstps
fwait
mov
pop
jmp
adc
dec
outsl
jl
add
sub
push
mov
pop
or
mov
xor
add
mov
add
add
push
mov
pop
push
popl
mov
push
call
sbb
inc
out
aam
jb
mov
pop
pop
sub
movzwl
add
push
mov
pop
cmp
jne
jmp
xchg
div
fs
xchg
ror
into
out
cld
test
and
add
or
add
addl
jle
sub
mov
jmp
xlat
les
cs
pop
gs
adc
xchg
mov
clc
mov
pop
xlat
rolb
outsb
cmp
ret
aam
psubd
pop
outsl
cmp
jge
dec
inc
mov
repnz
fstpl
andb
push
out
dec
scas
loopne
bound
lods
lds
data16
bound
out
and
push
out
dec
lcall
stos
shlb
scas
mov
mov
cmpsl
dec
bound
lret
add
mov
in
push
in
pop
pusha
sbb
repz
push
out
dec
jns
sub
add
mov
dec
enter
mov
push
out
ljmp
push
and
cmp
mov
lock
das
int
xchg
mov
lds
mov
adc
int
mov
test
xchg
mov
mov
jg
cltd
xchg
cmp
or
or
mov
incb
add
out
test
bound
or
push
inc
stos
lcall
nop
sub
pusha
xchg
stos
mov
les
test
mov
push
sub
adc
xchg
and
sub
cmp
mov
push
loopne
adc
inc
dec
mov
fldcw
out
dec
js
lahf
pop
lret
cmp
xchg
mov
aaa
aad
lret
clc
sti
mov
popf
and
xchg
jecxz
imul
sbb
xlat
xchg
les
inc
push
push
and
pop
clc
pop
jge
xchg
jb
pop
push
and
ret
mov
orb
push
and
js
pop
testb
push
xor
inc
sub
push
xchg
lea
test
or
gs
rcrb
addb
xchg
test
test
sub
adc
icebp
adc
fs
cwtl
ficomps
jge
sbb
clc
sahf
filds
fst
mov
jbe
push
mov
cmp
adc
inc
iret
inc
and
es
jmp
fs
inc
mov
pop
fiaddl
scas
jbe
stos
cmp
ficompl
push
dec
ret
xchg
mov
cmp
jge
cmpsl
dec
fwait
mulb
cltd
add
jle
sub
pop
xchg
aas
fwait
jmp
adc
cmp
sbb
cli
cld
test
mov
pop
or
jge
add
adc
and
mov
cmc
and
dec
mov
pop
clc
add
pop
cmpsl
add
dec
leave
rcl
xchg
push
mov
pop
push
dec
jbe
mov
mov
push
mov
pop
jg
xchg
cld
fwait
dec
jbe
mov
mov
iret
dec
push
mov
cld
test
imul
jne
arpl
mov
sbb
mov
cld
lods
in
test
mov
loopne
cmp
lock
mov
cld
cmp
mov
pop
cmp
push
repz
xchg
cld
test
bound
mov
clc
test
insb
cld
cmpsl
fcomip
imull
push
mov
clc
test
xchg
cltd
ss
mov
clc
test
test
lahf
xorb
lahf
bound
int3
mov
test
sbb
push
mov
std
test
adc
outsl
add
push
mov
jb
dec
mov
imul
adc
cld
test
push
in
mov
push
sbb
inc
leave
inc
mov
push
mov
cld
mov
xor
mov
out
je
cmc
test
or
pop
xchg
repnz
fwait
lcall
clc
lret
mov
mov
sahf
mov
push
sbb
mov
push
sbb
mov
adc
insl
jae
jg
mov
enter
push
mov
jb
push
mov
imul
and
push
insb
cmc
dec
xor
xchg
adcl
cld
sbb
sti
mov
test
sar
test
mov
and
mov
sahf
xchg
lret
cwtl
xor
dec
push
testb
les
push
dec
or
outsb
arpl
cli
add
testb
les
test
xchg
cmpsb
push
dec
or
outsb
arpl
call
lret
enter
ret
mov
mov
pop
loop
cmpb
cmpsb
inc
nop
es
ljmp
outsl
sub
mov
mov
repnz
pop
loop
cmpb
cmpsb
and
adc
mov
mov
cld
mov
and
out
pop
fdecstp
cmpb
cmpsb
and
mov
in
aad
stc
and
push
lahf
sub
scas
ud2
aad
push
mov
inc
mov
enter
ret
lods
mov
and
out
ret
test
mov
cld
mov
mov
outsl
lahf
in
aad
stc
in
push
lahf
js
shll
clc
xor
stos
int3
movsb
insb
or
ss
cld
mov
xchg
cli
cmc
and
adc
mov
insb
or
ss
cld
push
ljmp
or
push
mov
sbb
mov
cld
test
push
mov
pop
and
cmp
outsl
orb
mov
sub
inc
xchg
cld
test
cmp
imul
lret
in
xchg
cld
test
mov
test
sub
dec
adc
test
in
push
repz
lcall
ret
lds
cld
test
filds
ret
out
mov
jmp
pop
or
mov
xchg
scas
cmp
mov
push
xchg
das
dec
push
int3
outsl
mov
int3
insl
cld
in
mov
push
cli
cmp
jmp
jns
and
sub
enter
lods
push
inc
jmp
ret
sbb
xchg
add
out
insb
or
and
pop
adc
bound
es
push
test
test
mov
cld
test
mov
cld
test
mov
cld
test
mov
sbb
push
mov
cld
test
mov
cld
hlt
add
push
int
test
mov
lret
and
cld
test
mov
cld
test
mov
in
inc
ror
ss
mov
in
inc
xchg
and
inc
subl
dec
pop
ljmp
jbe
push
push
push
mov
fisttps
stc
xor
jmp
inc
inc
ds
shlb
inc
gs
jo
push
lahf
leave
dec
inc
sub
xlat
scas
cmpsb
sbb
rcl
movsl
lock
or
xor
mov
movsl
push
jb
adc
pop
test
test
stc
dec
je
int
pop
setns
xchg
adc
mov
insb
xor
dec
cwtl
enter
sub
dec
add
test
mov
lcall
or
sub
test
mov
lock
mov
push
shr
xchg
xor
xor
lock
and
call
dec
xor
push
adc
loop
xchg
cmp
jno
pop
testb
push
repz
push
aas
dec
sbb
or
push
mov
out
aas
bound
push
or
shl
pop
cmpsb
repnz
pop
fcomp
mov
repz
xlat
add
stos
rep
int3
enter
adc
call
push
stos
mov
xor
js
loopne
insl
mov
repnz
pop
int
popa
in
in
adc
es
and
add
icebp
xor
sbb
dec
std
decl
adc
neg
xchg
pop
mov
push
jb
mov
bound
pushf
mov
pop
cmp
loop
xor
sbb
dec
andl
test
test
mov
call
je
cmp
fsubrp
in
xor
and
cmp
icebp
shl
es
ret
mov
adc
sbb
cli
jae
jnp
sub
stos
pop
xchg
out
adc
mov
test
pop
mov
sbb
roll
cs
daa
out
push
mov
sub
lahf
add
out
ds
hlt
mov
dec
and
clc
jp
rclb
imul
jmp
das
orl
adc
jns
lods
mov
and
inc
jecxz
movsb
stos
orb
sti
pop
xchg
fcmovne
xchg
push
sub
adcb
cmc
movl
mov
fsubrs
roll
adc
fsubl
sarl
sub
std
shrb
jns
pop
mov
push
sub
jecxz
daa
jo
pushf
hlt
xchg
and
mov
loopne
dec
mov
pop
inc
pop
fists
daa
mov
imul
cmp
pop
inc
xor
jo
sbb
leave
out
lahf
test
add
add
add
or
add
add
dec
add
dec
add
xor
adc
dec
add
jl
add
jl
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
jl
add
jnp
add
or
mov
jl
add
jl
add
jl
add
gs
insb
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
jl
add
add
add
jl
add
add
add
jge
add
add
add
add
gs
insb
inc
js
arpl
gs
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
movsb
cmp
add
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
lea
add
inc
outsb
das
aas
and
add
add
add
pop
jmp
and
push
push
mov
xor
and
xchg
xchg
lea
movsb
lods
cmp
pop
femms
test
xchg
jp
xor
fs
xchg
outsl
call
test
xchg
dec
adc
jae
xchg
dec
add
sbb
mov
xor
outsl
adc
push
movsl
xlat
addl
push
add
or
imul
aas
movsb
ja
clc
inc
xchg
dec
adc
push
xor
dec
pop
stc
repz
rclb
outsb
add
popf
and
xchg
inc
or
andb
jb
in
sub
dec
fs
loopne
ds
dec
inc
or
dec
xchg
and
lds
mov
mov
inc
stos
sbb
jne
out
mov
pop
sub
in
push
adc
mov
test
add
xchg
cltd
adc
aaa
xor
mov
or
es
imull
sar
mov
or
lds
push
mov
xor
xor
arpl
loopne
shl
adc
sub
dec
cld
pop
cs
push
ljmp
xchg
add
or
cmp
cmpsl
sbb
adc
pop
aas
sub
cmp
push
jne
push
in
lods
ljmp
orb
fs
addr16
or
into
jno
cmpsl
push
jp
or
fldenv
loopne
sbb
lods
adcl
push
mov
shll
ret
mov
bound
add
cli
test
push
lcall
cltd
push
push
fs
and
enter
jns
xor
aas
rol
daa
jle
mov
dec
add
mov
cld
mov
clc
push
test
sub
adc
cli
sbb
adc
mov
or
dec
scas
arpl
lds
cld
inc
jb
xchg
mov
push
push
addb
std
adc
ja
and
fadds
in
xchg
test
pop
jb
pop
lret
jne
jmp
lock
or
lock
and
les
sbb
dec
and
sbb
jae
stos
push
mov
cvtps2pd
pop
in
inc
xchg
das
add
js
ljmp
xor
mov
xchg
cmp
ret
xor
add
push
fdivs
cwtl
jno
leave
lds
pop
insl
sbb
push
repnz
gs
mov
and
xchg
imul
out
imul
jg
sbb
add
dec
xor
decb
xchg
xchg
xchg
xchg
jns
in
jle
arpl
adc
add
adc
ret
push
mov
fcmovne
out
lret
sahf
popl
out
out
addb
je
lock
xchg
add
add
in
lds
cmp
rclb
dec
fnsave
jge
pop
call
pop
add
adc
sbb
jo
ret
cmp
sarb
insb
jge
enter
jbe
jp
mov
dec
lret
sbb
daa
mov
mov
test
mov
in
pop
and
sub
mov
rol
xor
mov
push
or
cmpsb
addr16
sub
inc
iret
adc
adc
inc
fmuls
insb
mov
scas
inc
fcoml
add
or
xor
clc
mov
pcmpeqd
push
pop
int
push
dec
icebp
dec
jmp
cmc
pop
jmp
aas
fdivrs
test
cmp
sub
mov
ljmp
dec
push
add
mov
push
fisubl
fdivs
insb
mov
add
pushf
in
rcrl
aam
sub
cs
andb
inc
push
cmpsl
jecxz
push
lret
push
push
lds
cs
loop
int
inc
aam
js
add
in
call
or
orl
test
adc
cltd
jp
inc
inc
loopne
mov
ja
ds
popf
push
or
cmpsl
dec
ds
fildl
lods
adc
jnp
jge
leave
scas
pop
mov
cmp
xchg
inc
mov
adc
mov
mov
fnstenv
or
add
icebp
xchg
mov
lret
ja
pop
xchg
mov
pop
cmpsl
scas
repz
std
in
jmp
shll
xor
lea
ret
mov
adc
xchg
js
add
pop
icebp
mov
imul
mov
test
push
fcompl
fstps
mov
mov
mov
scas
jge
mov
cmp
jmp
js
outsb
push
pop
xchg
cmp
movsl
adc
jmp
movsl
cmp
outsl
xchg
push
das
fmul
add
mov
pop
les
jae
mov
fnstcw
daa
sbb
mov
shrl
push
std
push
sub
jno
pop
stc
xlat
lret
test
mov
inc
jp
mov
cmp
addb
cmc
mov
ljmp
js
dec
jecxz
loope
out
rcrl
aad
pop
inc
rcr
dec
cs
mov
push
xchg
add
imul
sub
jle
sti
loopne
nop
mov
fdivl
int
xchg
cmc
jne
adc
xchg
roll
push
jbe
fs
add
insl
dec
adc
aam
out
sbb
in
xor
in
lret
mov
fidivl
pop
negl
out
std
jbe
jl
fnstenv
jae
or
and
stos
mov
aad
add
and
mov
out
mov
pop
adc
jmp
mov
stc
mov
dec
jbe
in
imulb
and
cmc
inc
adc
jns
or
fmul
jg
out
rorb
mov
data16
cli
mov
lret
pushf
xchg
push
cmpl
andl
xchg
lcall
clc
mov
push
cmp
mov
sahf
dec
xchg
out
sbb
inc
stc
cld
or
pop
pop
dec
test
jmp
mov
pop
xor
pop
cmp
out
insl
mov
xor
data16
cmp
cmp
cmp
cmp
pop
rcrb
pop
pop
popf
mov
pop
mov
daa
sbb
jp
push
xchg
popf
in
and
rcrb
and
jecxz
push
sub
outsl
or
fcoms
sbb
cs
out
and
adc
or
inc
cmpsb
dec
jmp
mov
out
pop
jle
pusha
idivb
insl
aaa
sahf
sub
cmp
mov
xor
mov
shl
or
jg
mov
andl
ret
les
adc
xchg
add
adc
push
or
int
imul
addl
dec
and
xchg
pop
out
movsb
shll
push
cmp
dec
jmp
arpl
mov
cmp
cmp
push
dec
adc
fists
dec
mov
movsb
xchg
subw
mov
cltd
sbb
in
add
cmp
dec
cmp
imul
fwait
test
mov
andb
call
in
das
lods
xchg
outsl
sub
mov
sbb
pop
lea
js
push
loopne
fnstenv
pushf
sbb
lcall
xchg
inc
shrl
xchg
adc
push
das
mov
pop
add
xor
into
sub
adc
mov
das
cmp
fcoms
sbb
hlt
xchg
es
push
icebp
lret
pop
xor
fisttps
mov
inc
cld
mov
leave
icebp
in
out
je
clc
pop
idivb
pop
loope
sub
aam
pop
mov
sub
std
mov
sahf
mov
sub
push
jnp
push
jmp
jnp
add
ficomps
add
sbbb
fstpt
adc
into
out
adc
adc
cmp
lock
dec
xor
cld
lret
mov
iret
ljmp
mov
or
sarb
mov
add
push
sarl
and
and
lret
fidivrs
push
shl
lret
mov
test
std
push
xchg
pop
je
xchg
jo
sti
jecxz
dec
mov
fwait
push
cmp
mov
sbb
pop
mov
inc
mov
or
jo
pop
scas
addl
xor
ret
fldpi
dec
loopne
and
ss
mov
pop
loop
int
pop
pop
sbb
push
add
cmp
rcrb
sarl
dec
decl
mov
aam
loope
dec
push
cmp
dec
popa
test
scas
add
jg
iret
fcmovb
in
push
std
jge
lret
cmp
mov
or
mov
xor
movsl
in
jecxz
and
pushf
pop
lahf
pop
push
sbb
xchg
jl
hlt
push
pop
mov
hlt
jge
in
mov
subb
adc
lahf
or
pop
inc
loopne
lods
jge
or
sub
mov
dec
fisubrs
jecxz
std
jg
xor
inc
mov
mov
xchg
lds
mov
cmc
add
filds
and
mov
adcb
loope
xor
adc
inc
sub
lea
aaa
adc
xor
dec
insb
jno
aam
jge
mov
cmc
outsl
pop
and
test
mov
outsl
aas
add
or
inc
mov
adc
mov
out
jge
xchg
xchg
mov
adc
enter
or
jno
sbb
popf
jge
adc
mov
daa
xor
cmp
movsl
sbb
and
jle
das
xlat
shll
pop
or
push
ds
xor
inc
jecxz
mov
or
inc
fdivrs
inc
out
cmpsb
out
pop
adc
loop
ror
mov
dec
inc
ja
pusha
mov
dec
push
add
xor
or
xor
bound
int3
and
cmp
ljmp
sbb
fisttpl
mov
js
rcrb
sbb
sub
cmpxchg
and
adc
dec
or
je
sub
gs
xor
ljmp
push
lahf
repz
sar
push
sub
ja
adc
cs
out
rcr
sub
mov
push
lahf
jae
loopne
inc
inc
adc
mov
insb
hlt
ja
xor
enter
sbb
stc
stos
jmp
lods
repnz
cltd
fcomps
cmp
pop
fwait
insb
adc
ss
testb
inc
mov
das
int3
arpl
jl
int
jmp
inc
lret
in
sbb
std
test
xor
pushf
cmp
pop
or
insb
call
mov
pusha
fs
inc
stos
cwtl
or
in
ret
pop
sbb
jle
scas
shr
jbe
cmp
xchg
scas
add
rorb
or
jne
inc
out
push
aad
aaa
fbstp
loopne
pop
xchg
pop
jae
mov
loope
pop
cli
sub
sbb
add
push
and
jne
inc
add
ret
test
adc
movsb
sub
outsl
cmpsb
ret
aad
popf
into
std
loopne
fmuls
fs
sub
xchg
out
insl
mov
aad
rcrl
fnstenv
mov
out
and
pop
add
adc
adc
outsb
xchg
enter
popf
xor
fs
stc
or
in
cmpsl
sbb
mov
jecxz
inc
jns
mov
xlat
cmp
cltd
insl
arpl
lea
mov
jbe
pop
iret
mov
jmp
sub
and
ss
aad
and
cld
mov
sbb
cmp
inc
into
sub
pop
cwtl
iret
push
call
ficompl
push
pop
pop
xchg
aad
add
fstp
ret
ret
outsl
call
shlb
jl
mov
jo
insb
jp
aam
sbb
jno
xchg
mov
sbb
push
adc
lds
push
cmp
test
sbb
shrl
std
xchg
loop
insb
js
xchg
ja
adc
aam
cli
rolb
clc
leave
add
lret
dec
popa
xor
test
test
adc
mov
pop
mov
roll
rcr
loopne
dec
nop
xchg
pop
hlt
jmp
mov
sub
rolb
pop
inc
mov
push
mov
jge
out
test
adc
dec
out
pop
or
cld
insb
or
aaa
in
xchg
sahf
std
xchg
scas
jno
sbb
and
inc
xor
loope
call
loope
cltd
fstpl
jb
outsb
iret
inc
pop
inc
into
cmpsl
fdivs
inc
das
sub
in
inc
jle
lcall
push
sub
inc
fbstp
dec
and
jo
inc
pushf
ret
mov
mov
out
cmp
mov
fsts
es
fdivl
add
cmp
clc
in
jmp
add
push
push
stc
sub
sbb
push
push
push
rclb
adc
inc
jg
mov
cmp
sahf
in
sti
push
inc
jmp
loope
fwait
hlt
dec
iret
add
mov
test
aad
push
xor
or
push
add
fdivrs
or
and
jp
pop
pop
pop
xor
outsl
jl
dec
shlb
adc
push
aaa
icebp
out
out
mov
push
iret
ret
sbb
enter
mov
leave
inc
cmp
inc
sub
scas
pop
push
jmp
mov
mov
ljmp
inc
imul
dec
sub
mov
xchg
fildl
push
xor
xlat
push
out
push
xlat
mov
mov
pop
stos
scas
sbb
adc
ficompl
mov
in
aad
lock
inc
mov
or
imul
xchg
lret
rcr
push
out
xchg
xor
mov
or
je
sub
call
outsb
jbe
xor
mov
lea
ss
jp
in
pop
ret
jmp
fucomip
test
pushf
push
lods
xlat
add
daa
mov
add
xor
enter
lahf
jne
mov
lods
and
in
cmpsl
inc
loop
sbb
jns
popf
std
scas
xor
mov
mov
add
or
ret
lea
jecxz
loope
pop
xor
lcall
ja
dec
and
insl
dec
fdivrl
popf
lahf
inc
aam
cltd
fisubrs
inc
push
inc
and
repnz
xchg
cli
jp
fldl
in
out
xor
xor
loop
xor
xor
add
and
push
pop
jno
mov
pop
add
cmp
pop
xchg
pop
pop
ja
leave
mov
outsl
js
popw
sbb
dec
jbe
ds
lret
loop
sarb
or
pop
or
scas
fcmovne
mov
shlb
nop
fs
repnz
mov
lds
or
ret
cmp
pop
pop
or
adc
mov
loopne
or
pop
mov
jbe
cltd
dec
inc
lret
addl
arpl
gs
cmpsb
and
fidivl
sub
ljmp
push
mov
loop
cmp
sahf
inc
pop
add
cmc
jge
dec
jle
popa
aad
dec
pusha
lods
xor
add
jecxz
and
daa
mov
std
mov
sahf
icebp
push
pop
lods
fdivl
aaa
adc
and
test
inc
sti
in
aas
scas
add
jns
xlat
iret
pop
or
ja
popf
adc
outsl
popf
adc
js
pop
les
adc
mov
imul
mov
inc
dec
add
fists
lds
mov
pop
fstl
pop
adc
vpcmpgtw
mov
inc
ret
fwait
mov
outsb
test
cld
mov
ret
mov
jmp
jmp
cli
jmp
imul
pushf
push
in
mov
call
jge
mov
cli
dec
cmpsl
clc
mov
orl
rcrb
dec
repnz
mov
mov
cmp
sub
jl
pusha
insl
test
jg
pushf
cmp
in
int
jns
mov
and
cmpsb
inc
and
fdivs
push
scas
add
jnp
inc
or
adc
xor
inc
and
out
cmpsb
jg
ret
mov
xchg
jne
outsl
mov
int
mov
push
movsb
inc
xchg
adc
sbb
neg
iret
and
add
push
inc
ret
mov
push
and
xor
xchg
push
dec
fldt
ljmp
ja
out
ss
lds
adc
pop
das
pop
repz
sar
cld
int3
mov
sub
jnp
pop
scas
xor
fldenv
jle
or
test
lds
jl
jge
nop
inc
out
cli
inc
cmp
pop
cmpsl
cmp
arpl
arpl
lret
xchg
dec
inc
scas
movsl
lcall
outsl
cli
fs
stc
into
punpckhdq
and
sub
or
mov
lcall
icebp
mov
mov
loope
out
fadd
lret
mov
sub
adc
xchg
in
jbe
test
and
cld
rol
mov
push
cld
inc
xor
into
lock
mov
aam
loopne
fdivr
inc
push
mov
jl
loope
push
fcmovne
mov
leave
cli
insl
rcrl
movsl
imul
and
in
inc
xor
movsb
ficoml
sub
add
in
stos
sbb
fucomp
sbb
adc
jo
divl
movsb
scas
push
test
push
dec
push
insl
fwait
test
fsubrl
cltd
sbbb
ret
scas
push
rorl
push
pop
cmp
dec
jle
sbb
repz
hlt
mov
fnstcw
or
addr16
je
movsl
pop
jno
push
int
rcrb
movsb
pop
repnz
in
rorl
test
mov
mov
dec
das
addb
add
dec
inc
lcall
cmp
sub
xchg
cwtl
cmp
ffreep
mov
xchg
mov
cltd
inc
cmp
push
mov
in
adc
subl
aaa
aaa
into
cmp
jle
mov
pop
cmp
into
pushl
into
fiadds
sbb
add
test
cmc
rcl
xor
repnz
lahf
in
iret
insl
shrl
add
ja
es
fisubrl
xchg
adc
xor
flds
loopne
jb
cmp
call
add
cmp
jo
sub
mov
stos
add
in
stc
sahf
jno
int
jmp
repnz
add
bnd
dec
mov
movl
gs
daa
or
loopne
jo
movsl
mov
movsb
gs
mov
adc
jge
dec
mov
bound
mov
bound
aam
pop
push
gs
in
push
jg
cmp
pop
xor
insl
or
push
es
dec
mov
or
sub
jo
sbbl
repz
rcll
clc
xorl
inc
fiadds
mov
jp
and
lahf
sbb
sub
or
pop
sbb
jp
sub
inc
cmp
aaa
lods
push
daa
push
imul
jmp
sub
mov
ficoml
mov
push
jp
sarb
mov
insb
aad
gs
stc
adc
cmpb
mov
bound
sub
popa
jmp
popf
aad
je
sub
cmpsb
mov
das
pop
mov
adc
and
scas
push
mov
pop
scas
or
fs
push
dec
int3
or
fucomi
and
cmp
loopne
aaa
inc
push
and
decb
aaa
adcb
imul
mov
movsl
shl
call
stc
clc
adc
fmul
mov
mov
cmpsl
push
addb
mov
je
fsts
cli
mov
mov
aas
inc
dec
cmp
adc
loopne
cmp
jp
fstl
outsl
push
inc
sbb
insb
test
cwtl
mov
pop
mov
mov
test
aas
mov
stc
and
repz
pop
test
push
sbb
xchg
aam
cmp
inc
add
xor
loopne
cmp
jno
ret
xor
mov
ds
inc
push
leave
jecxz
mov
and
mov
or
pop
aas
pusha
add
xchg
push
mov
loopw
test
adcl
push
lret
daa
cmpb
sarb
int
adc
outsb
aaa
pop
xlat
jg
fs
pop
rorb
mov
scas
lea
pushl
or
stc
xlat
cmp
iret
in
mov
sub
cltd
cs
sbb
dec
pop
int
in
dec
jmp
adc
int
rcr
and
in
pop
cmp
inc
xor
mov
push
xchg
ljmp
shlb
sbb
pop
popa
int
dec
icebp
notl
xor
shrb
sbb
xor
inc
ss
pop
lods
bound
shll
cmovno
pop
mov
arpl
jb
data16
lods
pop
stc
push
test
cmpsl
mov
subl
sarb
nop
dec
popf
sahf
repz
cwtl
jae
push
cmp
cwtl
out
mov
add
pop
jle
jmp
test
scas
push
xchg
add
pop
ss
lcall
push
sahf
daa
icebp
push
xchg
cmp
sbb
adc
daa
cltd
mov
push
push
loope
mov
or
iret
cmp
into
rorb
fstpl
fldenv
loop
daa
mov
cwtl
cld
aas
pop
push
and
push
jge
cmpsb
sbb
les
mov
int3
arpl
xor
xor
enter
and
shll
pop
and
call
sub
pop
mov
rorl
fnstcw
jo
mov
adc
jmp
and
aam
out
cmp
fwait
xor
mov
add
pop
xor
jmp
adc
daa
jp
add
call
cmp
repz
pop
daa
mov
ret
ret
sbb
add
repz
pusha
adc
jno
js
pop
mov
fistl
mov
dec
push
loopne
cwtl
lcall
or
daa
loopne
jno
dec
aad
fwait
mov
loope
xchg
jmp
sbb
aas
addps
into
cmc
jp
and
push
inc
pusha
xorl
sub
insl
out
aas
gs
and
sahf
add
xchg
cwtl
cmp
pop
fisubrs
mov
xchg
fiaddl
cs
sbb
mov
pop
dec
les
mov
cmp
and
adc
mov
jle
out
xchg
mov
sbb
xchg
imul
sbb
cmp
out
xchg
ja
and
jae
mov
jge
ret
dec
inc
inc
imul
and
out
inc
cmp
lods
jbe
mov
shrl
fs
into
mov
dec
mov
xchg
fidivrs
inc
xchg
mov
imul
fwait
ret
sub
jne
push
dec
xchg
icebp
adc
and
jns
cltd
mov
mov
pop
pop
pop
mov
mov
sub
popa
add
xor
xchg
push
es
or
stos
stos
push
fcoml
repz
aaa
push
cmpb
push
xchg
test
mov
ficompl
mov
fdivs
addr16
xchg
sbb
sub
and
call
mov
aam
cmp
inc
sub
inc
enter
ljmp
sbb
inc
jb
leave
push
or
sbb
xor
jp
and
adc
cmc
mov
es
sbbb
mov
mov
push
and
stos
xchg
push
push
xchg
loope
mov
sbb
js
inc
movsb
and
mov
cmp
out
xchg
mov
stos
gs
cld
lods
jg
push
rol
push
mov
sub
jns
into
stos
push
cmp
pop
pop
stos
xor
scas
es
jmp
inc
sbb
push
mov
xchg
stos
imul
mov
cmp
movzbl
jle
sub
pop
adc
sub
rcll
pop
cwtl
push
push
or
ja
mov
lods
xchg
imul
jnp
subl
loope
fs
bound
mov
ret
in
fadds
adc
insb
mov
in
xchg
or
rsm
or
cmpsb
ret
push
inc
jno
push
add
mov
sub
imul
imul
inc
lods
push
ret
test
xor
sub
pop
jno
jne
shll
pop
jne
aad
mov
jnp
xor
push
mull
mov
mov
sarb
dec
notl
cld
inc
movsl
or
ror
inc
addb
clc
stos
push
notb
cmp
das
pop
mov
leave
loope
pop
dec
mov
pop
movsl
xchg
lcall
dec
or
pushf
cmpsl
xchg
mov
mov
loope
jb
mov
fnstsw
inc
popf
cmp
stos
scas
aaa
pop
xchg
test
mov
adc
add
mov
mov
push
stos
in
es
pop
push
cmpl
mov
cli
dec
lret
and
jmp
inc
stc
mov
adc
adc
lea
adc
ficomps
inc
add
mov
ds
push
fldl
cmp
neg
pop
ljmp
xchg
dec
int
lret
sar
inc
test
js
pop
es
xchg
jae
or
push
mov
cmpl
and
inc
adc
dec
out
in
sti
popf
push
int3
jge
es
pop
stos
pop
push
js
adc
inc
dec
scas
push
test
dec
mov
fsubrs
lock
aas
sahf
xchg
lcall
cwtl
in
xor
insb
or
cmpsl
jp
pop
or
mov
sub
insb
stc
and
push
lods
xchg
dec
sbb
outsb
test
popa
xchg
xchg
dec
adc
sbb
pop
adc
lods
jns
das
cwtl
ret
mov
int
out
sub
fadds
cmpsb
xchg
sbb
fcomps
mov
and
rolb
dec
imul
xorl
inc
adc
imul
imul
mov
lea
push
les
popf
rorl
sti
add
sarb
int3
sbb
mov
xor
cli
fcoms
mov
cmpsl
sub
add
dec
sbb
std
xor
cli
push
ror
adc
mov
aam
add
or
xor
bound
mov
jmp
cmpsl
aas
sub
pop
ss
loopne
scas
mov
pop
fimull
icebp
loope
xor
stc
xchg
daa
mov
pop
es
inc
dec
adc
cmpsl
je
add
cmpsb
lret
daa
pop
pop
out
add
lret
xor
lock
jnp
adc
mov
enter
imul
sub
fs
in
and
dec
xor
lcall
outsb
rclb
cmp
xchg
faddl
pop
xchg
scas
dec
jno
roll
in
cmp
inc
push
cmc
in
test
mov
push
movmskps
aas
cli
push
dec
rep
into
mov
pop
repnz
mov
sarb
sub
cmp
popa
add
sbb
repnz
dec
pop
xor
push
jo
fs
test
mov
mov
mov
push
addb
push
xor
das
xor
cs
ss
pusha
in
jns
ds
in
add
aas
repnz
xor
push
push
add
js
subl
movb
and
scas
jmp
mov
inc
das
aas
cmpsb
call
push
dec
inc
std
les
push
iret
stc
add
lret
rorb
iret
and
add
xchg
sbbb
dec
pop
jge
movsl
movsb
ret
xchg
stos
std
xor
or
cs
sbb
xchg
dec
push
cwtl
cmp
cmpsl
push
mov
push
cwtl
movsl
jae
gs
mov
mov
push
dec
imul
dec
cld
repz
lcall
test
lcall
rolb
adc
cmpsb
popf
mov
iret
xlat
jbe
out
test
adc
movsb
pop
fwait
dec
mov
add
xchg
iret
sub
and
mov
in
lret
pushf
dec
fyl2xp1
mov
add
mov
add
sub
repnz
jne
out
mov
into
arpl
push
inc
popf
push
pop
ficoms
mov
adc
gs
xchg
or
negl
iret
dec
aaa
lret
pop
fists
cmp
mov
aaa
xor
jbe
pop
pop
bound
cmp
cmpsw
lods
mov
shll
push
and
mov
mov
lock
or
call
sub
xlat
mov
pusha
addl
mov
mov
add
or
xchg
push
add
loopne
ret
adc
inc
dec
pop
daa
mov
pushf
pop
push
dec
movsl
loopne
xlat
lahf
cmp
adc
jmp
xor
nop
lcall
mov
cwtl
int3
ds
loopne
pushf
xor
and
push
in
inc
mov
pop
jae
lds
cli
fists
jo
pop
test
test
jmp
decb
sub
shlb
inc
cmp
aas
ja
scas
xchg
je
loop
pop
das
cmp
dec
xor
mov
stos
rol
int
mov
aam
test
mov
hlt
ds
sub
cmc
stos
jecxz
jge
das
sbb
sbb
clc
push
fwait
pop
push
iret
bound
adc
cmp
dec
fadd
cmpl
jnp
subb
adc
fadds
lea
jmp
inc
rcrb
xchg
push
jle
mov
mov
stos
int3
pop
inc
or
test
mov
inc
mov
lods
lahf
movsb
stos
out
pop
test
cli
pop
and
fcmovu
push
fisubrl
mov
into
movsb
pop
das
out
lret
cli
repz
xor
mov
xor
adc
jmp
xchg
add
fiaddl
sbb
arpl
cwtl
dec
subb
pop
and
jp
loope
xlat
xor
push
pusha
arpl
fidivl
lds
into
inc
ljmp
sbb
pop
pop
push
xchg
add
inc
xchg
hlt
sub
adc
into
sub
sbb
mov
sbb
aas
fistpll
push
or
ror
xchg
imul
jae
int3
in
in
imul
or
cmp
pop
gs
push
in
cli
sbb
aad
lock
mov
out
pusha
inc
clc
mov
aaa
inc
mov
sub
cmpsl
ljmp
aas
push
cmc
jg
leave
lods
mov
call
scas
mov
iret
in
sub
xchg
addr16
dec
or
and
sbbl
andb
and
inc
outsl
xchg
stc
cmp
dec
outsb
lret
mov
in
stos
mov
ljmp
movsb
mov
mov
cmp
lret
xchg
cmp
jb
sub
arpl
and
aad
lods
adc
hlt
pop
andl
insl
cmpsb
stos
xor
mov
and
push
or
jmp
in
jb
lock
xlat
push
inc
push
push
add
addl
adc
or
test
mov
sub
mov
sahf
pop
mov
add
sub
cmpsl
iret
insb
call
outsl
inc
test
sub
insl
xchg
popfw
push
mov
add
enter
cmp
adc
push
leave
aas
or
dec
mov
cmp
aas
sti
pushf
xchg
test
arpl
and
fprem
enter
and
or
sbbb
outsb
cmpsl
push
mov
out
or
cli
xlat
add
jnp
and
lret
push
mov
jmp
popf
inc
ss
cs
push
popa
mov
push
pop
movsl
or
pusha
lods
sbb
xchg
adc
movsb
rorl
mov
leave
je
mov
mov
loopne
add
mov
fistpl
fmull
cmpsl
jae
mov
adc
out
xchg
add
push
in
mov
jb
out
push
jge
or
push
popf
popa
and
repnz
movsb
insl
movsb
mov
push
ja
fadds
push
pop
icebp
and
gs
push
cmp
inc
sbb
js
adc
ret
jo
scas
or
sub
pusha
mov
adc
ljmp
cld
test
adc
stc
inc
fistps
out
test
adc
sub
cwtl
pushf
cmp
arpl
sub
arpl
stos
mov
sub
push
add
push
push
mov
popf
ffree
insb
cmc
and
aaa
sbb
xor
inc
mov
ss
cwtl
xlat
pop
xor
inc
pushf
pop
test
out
es
jo
nop
adc
pushf
shrb
fchs
test
mov
lret
pop
je
ljmp
lods
ret
mov
int3
pop
jle
test
std
push
jecxz
ficoml
rorl
mov
sub
in
stos
sbb
gs
add
movsl
cmp
jg
rclb
inc
inc
and
push
pop
out
je
mov
jle
dec
clc
les
scas
pop
push
jg
sbb
sbb
call
call
rorl
insl
jns
jg
mov
fdivr
sbb
mov
inc
dec
pop
xchg
add
imul
lahf
xor
pop
lret
push
and
mov
jbe
mov
sub
pop
mov
pop
adc
fstpl
jl
repz
cmp
out
addb
adc
add
mov
or
xor
mov
mov
in
ss
pop
daa
pop
mov
int
insl
dec
pop
add
fsubl
loopne
mov
or
cmp
cmp
mov
sub
lock
out
ss
inc
je
xor
xchg
div
fnstsw
fadds
rcrl
bound
fdivrs
push
icebp
mov
scas
cltd
cmp
push
mov
jns
inc
ret
stos
pop
aaa
std
in
adc
pop
and
stc
cmpsl
push
es
mov
mov
mov
xor
add
cmpsb
dec
std
call
mov
sbb
loope
shrl
mov
jle
push
jno
outsl
push
sbbl
push
movl
jno
stc
inc
mov
andb
mov
jg
bnd
xor
sbb
mov
xchg
fists
fnstenv
ljmp
adcl
scas
xor
cli
roll
out
cwtl
aaa
xchg
ds
pushf
push
xor
and
into
stos
mov
dec
lret
movsl
cmp
wrmsr
xor
int
jl
add
scas
les
cmc
stos
popa
testb
xor
dec
insb
leave
call
aad
jmp
xchg
xchg
call
mov
add
jl
jb
scas
daa
sbb
aam
out
cli
mov
sbb
pop
stc
jg
rcl
add
sub
not
push
mov
add
mov
xchg
fists
xchg
pushf
sbb
leave
imul
fs
aas
out
xor
scas
pop
inc
jno
sub
sub
adc
test
push
dec
jae
pop
das
xor
push
and
mov
int
dec
xchg
and
sub
pop
enter
jle
insl
out
test
push
pop
test
call
movsl
fldenv
ja
xchg
lcall
aam
jecxz
ret
inc
insb
push
mov
jge
aam
testb
jl
jb
imulb
aaa
mov
test
and
sbb
ret
aam
mov
cmp
jle
push
cli
and
fucomip
mov
xor
js
push
pop
rorb
cmpsl
inc
push
out
shlb
inc
push
aas
scas
jg
lock
scas
push
loopne
adc
imul
inc
imul
fwait
push
scas
fnstcw
and
call
mov
negl
es
clc
test
mov
xor
test
out
sub
dec
cs
fldenv
sti
mov
loop
sub
int3
mov
push
out
cli
and
add
imul
shrb
xchg
sbb
fistpll
adc
inc
fwait
lock
cmp
lods
imul
sahf
jae
inc
mov
out
mov
leave
and
adc
push
inc
popf
pop
push
pop
rolb
pop
das
adc
cmpsb
jle
and
loop
insb
or
and
xchg
push
aad
mov
insb
pop
ret
jg
push
lahf
sbb
xchg
xor
scas
sti
sbb
xor
test
mov
fmuls
jb
inc
xor
fadds
dec
push
pop
push
and
push
addb
mov
xchg
push
mov
mov
lret
xor
dec
aas
je
push
mov
xchg
lahf
mov
cmp
mov
inc
pop
inc
int
sbb
xchg
inc
add
in
insl
mov
scas
and
mov
sbb
and
in
adc
rcrb
push
jge
jbe
popf
push
xor
cmp
mov
call
xchg
mov
sub
mov
push
add
and
cmc
testl
ret
in
addb
mov
les
xlat
repz
push
pop
out
imul
and
inc
out
sbb
adc
mov
jno
sbb
cmp
jle
jno
pop
mov
mov
or
xor
jmp
pop
mov
das
fs
aas
dec
pushl
test
int
mov
mov
push
inc
andl
stos
jae
out
jnp
pop
jg
sub
lods
loopne
inc
cmp
pushl
mov
insl
xor
cmc
ja
pop
xchg
mov
pop
iret
mov
ret
mov
sbb
and
dec
dec
out
stos
adc
and
xchg
call
es
mov
jno
or
js
cmp
arpl
pop
pop
test
js
js
shrl
movsb
fdivrp
cmp
loopne
or
or
sub
mov
mov
mov
and
rcrl
adc
jg
std
call
add
shrb
sub
cli
mov
hlt
jne
out
push
divb
repnz
fcom
fcom
outsl
fucom
insb
inc
add
shrl
xor
scas
leave
std
dec
dec
inc
xchg
mov
js
loop
jno
aas
cmp
in
lock
outsl
and
iret
ja
sarl
sbbl
aam
sub
add
repnz
shl
lea
gs
xchg
sahf
loop
xor
mov
incl
sbb
jle
insb
xor
lea
pop
pusha
addl
rolb
inc
xor
pusha
mov
sub
shll
fistl
pushf
dec
pop
aad
mov
leave
add
pop
jp
xor
movsb
cli
rcl
cmpl
pop
or
dec
lds
cmp
into
jns
sbb
mov
or
or
lods
clc
fldl
lret
jne
jmp
xlat
call
mov
push
sahf
xchg
mov
inc
mov
adc
mov
in
fwait
push
adc
or
and
adc
or
adc
gs
pop
cmp
sbb
sti
or
scas
out
and
rcrl
pop
lock
aad
jg
sub
lods
enter
enter
cmp
iret
ja
pop
push
mov
jg
pop
jae
sub
ss
push
shrl
xchg
fsubl
add
jp
add
and
mov
cmp
stos
inc
mov
mov
je
in
sbb
or
mov
imul
sub
xor
xor
gs
and
push
and
add
sub
notb
jl
adc
pushf
mov
jecxz
hlt
call
lcall
push
ret
add
mov
mov
and
cmp
std
lea
movsb
dec
fstl
popa
xchg
insb
cmp
cmpsb
call
repnz
cmp
cli
fs
pop
ds
xchg
stc
lcall
or
lcall
jle
sti
jge
push
inc
iret
imul
shl
sub
and
xor
decl
int3
filds
aad
aaa
mov
adc
inc
int3
div
imul
fmull
xchg
jmp
daa
aaa
mov
inc
bound
shl
mov
inc
cmp
add
sbb
subb
sets
in
push
test
in
out
and
test
daa
adc
inc
dec
out
push
pop
mov
mov
dec
pop
leave
aad
scas
xchg
rolb
inc
xchg
pop
jbe
xchg
daa
xor
inc
sub
cmp
dec
jbe
out
and
outsb
dec
nop
dec
mov
outsl
fwait
pusha
sbb
sub
mov
mull
movsb
pop
aad
mov
test
cli
subl
mov
dec
xchg
and
cmpsb
push
cmp
repnz
pop
add
int3
mov
lock
sub
mov
mov
xchg
inc
inc
fstl
mov
test
add
and
push
push
add
sub
lcall
vunpcklpd
sahf
cld
sahf
xchg
lods
push
or
mov
sbb
addr16
or
push
add
out
imull
ss
cmp
iret
mov
push
dec
movsl
xchg
sbb
lcall
jns
sub
sub
pop
or
mov
test
sub
push
es
push
outsl
gs
insb
xor
call
loop
jecxz
sbb
mov
shll
xchg
lea
arpl
out
dec
sbb
aad
mov
sti
lods
sbb
pop
xor
jb
mov
or
addb
dec
mov
lock
push
sti
addl
pushf
mov
aam
mov
push
add
inc
xchg
xlat
cwtl
fwait
dec
mov
js
aas
cli
fldcw
test
in
pop
ret
mov
lea
rep
sub
lret
lods
out
dec
das
out
inc
fwait
push
rorb
xchg
aaa
pop
addr16
adc
fnstcw
aaa
adc
xchg
jb
sbb
push
adcb
popa
sbb
movsb
test
aas
enter
mov
outsb
cmp
imul
loop
adc
hlt
push
cli
xor
or
movsl
push
out
leave
push
inc
sbb
push
xchg
jle
pop
sbb
subl
dec
addr16
jne
add
adc
sub
or
incb
pusha
dec
fdivrl
jecxz
pop
popa
shrb
push
push
add
mov
dec
repnz
cmpsl
pop
das
adc
ret
xor
shll
pushf
xchg
int
les
adc
push
pushf
cmp
or
sbb
scas
iret
out
mov
ljmp
sub
sub
adcl
and
cmp
repz
loopne
enter
push
repz
pop
add
cwtl
jg
fs
add
loop
xorl
frstor
inc
inc
pushf
pop
subb
gs
dec
ficompl
sbb
test
mov
xor
out
inc
xchg
mov
aaa
sbb
and
mov
cmpsl
and
testb
jne
cmp
jnp
fcmovb
mov
sahf
loopne
cld
and
xchg
push
sbb
in
iret
lds
xchg
xchg
push
add
and
xor
add
es
shrb
sar
movsb
and
insb
add
stos
dec
sub
loope
pushf
iret
outsb
jge
xchg
add
cli
dec
sub
and
sub
popf
cmp
sbb
into
cld
mov
lea
cmp
lods
fidivrl
jb
push
or
xchg
dec
scas
jle
fistpll
pop
pop
sub
push
ljmp
sbb
mov
lock
lcall
movsb
push
shr
imul
sbb
dec
cmp
add
cli
insl
daa
mov
jne
push
popf
sub
mov
push
aas
dec
and
dec
arpl
mov
call
pushf
repnz
test
push
xchg
arpl
jno
add
into
pop
repnz
sbb
pushf
adc
test
push
or
aad
iret
outsb
and
push
cwtl
inc
mov
xchg
xlat
push
outsb
shrb
movl
fstpt
cmp
mov
mov
mov
shr
rolb
jp
dec
add
or
push
fwait
mov
mov
lcall
aas
test
inc
xchg
fwait
sub
mov
out
ja
jl
mov
dec
cld
pop
outsb
ljmp
popa
into
inc
fldenv
xlat
sbb
pop
call
je
andb
pop
stos
mov
and
cwtl
sub
sti
lahf
imul
and
int
repz
sub
or
lods
push
mov
pusha
inc
dec
pop
push
and
adc
jne
xchg
push
cltd
mov
lea
in
and
sarl
pop
jns
ss
daa
mov
jae
xchg
mov
adc
pusha
xchg
gs
lcall
stos
xchg
dec
xchg
pop
je
hlt
push
sbb
sti
push
sub
ror
dec
xorl
mov
aaa
add
mov
in
std
jbe
out
adc
pop
cld
mov
xlat
daa
jb
cwtl
enter
dec
xchg
and
adc
add
test
inc
clc
cmp
ret
and
roll
fisttpl
inc
lock
ljmp
aas
rorl
mov
cmpsb
push
and
leave
pop
js
repnz
cld
dec
jbe
test
fwait
mov
mov
fstps
add
sbb
push
mov
mov
inc
push
pop
aam
int3
and
mov
xor
das
test
xor
add
mov
orb
pop
push
ror
ljmp
dec
mov
ss
test
imul
pop
jns
pop
mov
std
rcll
cmp
jmp
jmp
iret
dec
pushf
cmp
or
add
cmp
pop
sbb
pop
jge
dec
inc
cs
scas
in
add
repnz
inc
push
rcl
in
jge
mov
lret
addr16
pop
or
add
pop
push
add
imul
int
jnp
fwait
sub
lret
popa
mov
pop
shrb
fcmovnu
cmp
lds
cmc
test
cli
jo
adc
cmp
fsts
leave
pop
inc
jns
rcll
sbb
or
pop
div
in
mov
scas
cwtl
lods
loopne
cmpsb
pop
add
test
jl
out
pop
bound
cmc
and
test
jnp
in
cmp
leave
cmpsl
inc
xor
jno
push
ret
adcl
jno
aas
out
mov
sbb
das
pop
pop
fs
popf
ljmp
mov
dec
into
mov
jnp
sbb
mov
sub
pop
bound
jns
sarb
mov
push
inc
jg
cld
pop
fdivl
push
in
mov
out
dec
or
push
clc
push
mov
dec
xchg
lods
int
mov
adc
fmul
mov
dec
call
out
mov
movsl
shrb
mov
out
mov
inc
leave
ljmp
loop
jcxz
cmpb
movsl
ret
dec
inc
icebp
mov
pushl
mov
or
je
loop
ja
faddl
cmp
push
jge
sbb
sub
mov
jne
add
inc
pop
fmull
and
cwtl
fwait
mov
xchg
cli
push
fsubs
fucomi
hlt
jge
addb
jno
lcall
std
sbb
jle
ss
adc
inc
loop
mov
jnp
add
repz
in
jecxz
push
sahf
jbe
sub
data16
xchg
mov
or
cmp
adc
dec
mov
mov
aad
shrl
test
pop
sti
mov
mov
and
sub
stos
add
lock
pop
inc
add
cmp
and
pop
das
jmp
repnz
adc
ret
jg
and
sub
push
fildll
xchg
mov
jae
xor
mov
pop
push
scas
mov
mov
fwait
push
ds
int
fadds
lret
inc
xchg
gs
sbbb
jge
nop
mov
xchg
mov
xor
jnp
push
andl
arpl
lds
or
mov
sub
mov
inc
movsb
repz
xor
test
push
lret
pop
fwait
lods
and
lret
adc
push
out
jne
testb
mov
sub
outsl
stos
adcb
xor
push
in
test
push
rcr
sub
inc
imul
mov
cmp
lea
fwait
int
push
inc
fs
ret
popf
mov
scas
enter
insb
scas
notb
pop
mov
adc
jle
inc
sahf
pop
dec
xchg
adcl
jno
mov
testl
pop
outsb
dec
jne
mov
lds
loope
insb
or
insl
cmp
mov
push
imul
jl
pop
xchg
xchg
stos
repnz
popl
add
mov
xorb
mov
loop
call
xchg
xor
cs
jne
xchg
mov
inc
arpl
shl
push
loop
mov
or
test
inc
cs
dec
loope
cwtl
jl
pop
push
mov
inc
push
movsb
cmp
sbb
xchg
mov
mov
loope
es
dec
mov
in
add
sbb
cmp
xor
or
and
test
enter
add
or
pop
jecxz
stos
lods
cmp
push
adc
loop
daa
pop
in
or
jo
mov
imul
movsl
aam
mov
sub
ds
out
and
fiaddl
nop
enter
adc
shrl
sti
push
xlat
pop
fsts
les
mov
pop
jp
sbb
daa
std
ljmp
inc
pop
test
push
sbb
sub
xchg
pop
inc
jne
push
adc
fldenv
mov
ret
xchg
xchg
mov
mov
std
cli
test
rorb
daa
inc
inc
mov
loopne
scas
repnz
pusha
mov
and
mov
xor
inc
sbb
jne
inc
data16
and
xor
aaa
fs
add
sbb
lahf
dec
arpl
inc
xchg
push
rcrb
outsb
call
mov
or
jo
pop
mov
into
inc
test
pusha
push
mov
mov
jmp
rorb
mov
xchg
jnp
jbe
pushf
mov
cmpsb
xchg
jle
ljmp
rclb
pop
aaa
inc
sbb
loopne
push
xchg
jo
or
lea
adc
xlat
into
push
or
or
xor
lcall
fildl
rcll
mov
fcomps
sub
enter
fadds
sub
cwtl
test
int3
mov
cmpsb
leave
push
cltd
mull
xor
inc
push
sbb
stc
scas
jmp
aas
lcall
fcoml
jecxz
repz
push
icebp
aaa
das
jmp
gs
or
dec
in
inc
add
in
pop
nop
xorb
int
lods
gs
int3
aas
hlt
mov
jno
es
or
dec
pop
ss
loop
mov
rolb
inc
xchg
push
fstps
dec
sahf
loop
jecxz
lods
divl
or
call
fstpt
xchg
pop
stc
mov
inc
popa
jae
movsb
addw
icebp
xchg
cmp
out
fsubl
sbb
mov
inc
mov
imul
pop
dec
in
mov
mov
stc
int
ret
test
jmp
ljmp
mov
jmp
jp
mov
imul
jnp
shll
mov
fistpl
into
push
inc
jbe
test
add
dec
dec
jne
daa
sub
ja
fcoms
mov
imul
test
jb
add
adc
dec
inc
xchg
aad
pusha
out
loope
cmp
mov
mov
jae
sarb
lret
enter
ret
sahf
pop
aaa
sahf
inc
insl
and
xor
aam
pop
rcr
test
cmp
out
lods
lock
inc
or
jge
add
iret
dec
sbb
test
cld
cmp
sti
adc
and
pusha
add
add
mov
std
imul
or
dec
and
nop
cmp
xor
daa
mov
xchg
add
sub
or
inc
scas
push
xchg
push
adc
pop
in
mov
mov
mov
pop
je
jns
aam
lods
insb
and
push
xchg
mov
mov
je
cmp
daa
in
cmc
or
inc
jnp
mov
mov
cmp
nop
test
cmc
shl
inc
das
inc
lret
stc
inc
cli
push
call
adc
push
inc
sbb
loop
push
dec
loopne
push
sub
xor
ret
xchg
dec
mov
cmovbe
pop
bound
in
dec
dec
mov
clc
and
mov
cmpsb
inc
in
out
mov
mov
pop
mov
lret
cmp
sub
scas
lock
fcmovb
addr16
push
push
pop
subl
hlt
xchg
and
std
jbe
test
lods
les
mov
adc
sarb
pop
js
adc
xchg
dec
mov
mov
xor
outsl
ss
in
dec
mov
xor
fincstp
test
pusha
popf
mov
or
xor
dec
imul
mov
ficomps
sbb
test
dec
dec
cwtl
or
repz
sbb
out
stos
pop
pusha
mov
adc
or
push
dec
sbb
adc
cli
js
sub
pop
mov
cmc
or
xchg
xchg
mov
mov
adc
repnz
xor
mov
fistl
std
rclb
push
ret
add
xchg
mov
jbe
xchg
cli
lcall
fcmovnb
sub
or
add
popa
scas
xchg
xchg
mov
int
cs
pop
ret
les
sbb
dec
ja
push
cli
jno
shll
and
data16
ret
inc
rolb
cmp
jge
mov
ret
or
sub
mov
push
out
sub
pop
add
fisttpll
mov
cmp
cmpsl
xchg
or
ljmp
or
adc
hlt
cld
xlat
gs
dec
sub
ja
jmp
aad
adc
andb
movsb
push
dec
push
leave
notl
lahf
stc
jl
leave
xchg
notl
or
pop
in
jp
and
or
dec
jno
adc
ret
mov
lods
lea
pop
ficoms
or
adc
or
adc
outsb
cmp
adc
push
xchg
inc
add
pop
cld
dec
fisttps
out
out
and
sbb
je
lea
sahf
xchg
or
mov
mov
cld
leave
lock
and
shr
fdivrp
aaa
xchg
in
jmp
ficomps
jo
js
fwait
hlt
xor
push
aas
nop
lret
repz
fwait
mov
jnp
dec
ja
ja
xor
dec
pop
jge
cmpsl
dec
sbb
imul
pop
ficoms
clc
aas
xchg
das
fsubrs
test
insb
sbb
pop
imul
jmp
jne
lcall
lahf
or
fldt
dec
mov
popf
inc
mov
int3
cld
push
mov
fs
mov
les
pop
xchg
xorb
pushf
or
mov
or
cwtl
lds
fs
mov
cmp
jmp
xor
cs
dec
mov
or
ficompl
dec
xor
sbb
add
std
pop
cmp
sbb
sub
pop
imul
dec
sti
xchg
in
dec
inc
icebp
inc
lahf
insl
decb
int3
mov
lcall
mov
mov
xchg
mov
xchg
adc
dec
mov
dec
scas
inc
mov
push
mov
icebp
rorb
xor
or
aaa
push
xor
jns
lret
test
sub
inc
mov
mov
mov
or
mov
test
dec
icebp
dec
scas
jnp
aam
push
shlb
fstps
mov
addr16
mov
xchg
cmp
out
movsl
jnp
sbb
lcall
xor
daa
inc
push
pop
mov
pop
jecxz
filds
sbbl
push
clc
mov
cmpsl
fnsave
pushf
mov
ret
mov
pop
cwtl
cmpsl
jb
loop
addr16
xor
xchg
enter
mov
mov
jg
xchg
xchg
or
loop
inc
mov
test
xchg
sbb
mov
sub
adc
lds
and
push
fisttps
hlt
lea
jns
pop
pop
mov
pop
mov
push
aaa
fisubrl
mov
pop
or
dec
xchg
outsl
shlb
push
jne
jno
mov
push
shrl
push
pop
adc
stos
sub
sbb
lods
dec
jp
bound
inc
movsl
aad
imul
jae
pop
shlb
or
mov
movsb
fstpt
hlt
es
xchg
mov
jecxz
xor
out
sub
mov
movsb
bound
or
and
in
or
dec
in
stc
sub
add
ljmp
pop
and
and
loopne
stos
jecxz
xor
push
les
push
shlb
mov
sahf
or
xchg
push
pop
addl
int3
pop
movsl
jp
cwtl
sub
inc
aad
cmp
mov
and
lret
sub
sbb
xchg
push
sbb
data16
cmp
inc
in
jb
cltd
aaa
inc
inc
jp
push
jns
rcrl
dec
xor
mov
dec
enter
outsl
add
mov
push
mov
icebp
lock
je
mov
pushf
add
mov
add
xor
aad
sbb
mov
jecxz
or
fmull
lahf
lret
sbb
push
shlb
je
aas
jle
or
rclb
lret
xorb
cmpsl
jmp
or
and
cmpsb
cwtl
sbb
or
mov
rcr
adc
out
mov
jecxz
ret
add
or
mov
lea
sbb
push
les
jge
fildl
sbb
ss
imul
pop
movsb
les
pop
push
loope
mov
pop
and
pop
push
dec
pop
add
or
xchg
adc
cmp
cli
cmpl
adcb
xchg
pop
loopne
mov
mov
xor
imul
xor
insb
sbb
xchg
popl
jecxz
push
in
cmpsl
fimull
leave
test
xchg
cmp
ret
icebp
jnp
jle
test
cmp
adc
add
inc
jns
push
subb
ret
push
loopne
inc
or
repnz
les
mov
es
mov
imul
ret
pop
sbb
mov
dec
mov
outsl
mov
and
test
jp
push
xchg
or
pop
das
add
mov
arpl
xchg
rcrl
push
mov
mov
daa
xchg
les
lods
addr16
adc
xchg
stc
testb
arpl
xor
xorl
jg
jnp
xor
loop
xchg
ficoms
inc
jle
je
cmp
mov
testl
loopne
fsubs
mov
xor
inc
add
call
js
jbe
mov
or
decl
pop
cltd
adc
and
pop
ss
xchg
dec
je
push
sbb
loopne
std
or
xchg
add
popf
adc
out
das
jns
push
lcall
ret
popa
lret
cmp
dec
xor
scas
das
push
or
aaa
inc
mov
xor
push
test
in
fisubs
out
jo
nop
push
mov
loopne
test
lock
add
pop
push
dec
xchg
cmp
lods
jg
test
scas
ror
aaa
push
pop
clc
push
popf
sub
out
jno
movsb
je
pusha
mov
scas
pop
xor
lret
dec
jns
jl,pt
pop
push
stc
sub
cmpsl
mov
dec
test
out
loopne
lock
push
mov
fisubrs
sub
imul
lcall
fbstp
or
pop
shll
push
test
mov
sahf
mov
jp
inc
xor
mov
ret
das
inc
mov
dec
cmp
and
mov
popa
inc
inc
xor
mov
xchg
loopne
gs
mov
out
subb
cmpsb
sbb
add
sbb
std
jg
into
arpl
xchg
stos
nop
push
jns
scas
sbb
test
cli
push
fninit
sub
je
adcl
adc
inc
push
mov
ss
pavgb
into
xchg
in
sub
jb
dec
sti
xchg
in
dec
shrl
into
push
js
imul
decb
fwait
jb
jp
mov
scas
dec
scas
iret
push
rol
xchg
lock
dec
ret
mov
jo
icebp
icebp
cmp
sub
imul
dec
mul
add
fwait
jno
andb
out
dec
lds
gs
dec
cmpsb
xor
andb
sahf
lds
mov
test
ds
ret
jo
add
out
insb
xlat
mov
xchg
int
stos
push
mov
mov
dec
jmp
adc
sbb
adc
subl
jns
lods
push
pop
loopne
sub
mov
push
scas
test
push
sbb
in
inc
jb
and
cld
mov
xchg
pop
loope
test
addl
push
fstps
mov
ret
sub
imul
push
sbb
insl
andl
mov
push
repz
aam
fldl
adc
loope
fxch
push
stos
aaa
xchg
xor
cmc
jo
push
adc
popf
mov
out
inc
inc
sub
daa
lods
das
enter
mov
out
dec
mov
lock
add
sbb
mov
or
dec
or
xchg
scas
pop
inc
or
push
mov
ss
orl
mov
aad
in
mov
repnz
pop
iret
mov
fchs
dec
xlat
mov
add
or
adc
fs
test
aas
cltd
fldl
mov
xchg
push
push
arpl
imul
xchg
iret
add
stc
mov
jmp
test
pop
js
xor
rcll
mov
adc
and
lock
imul
test
adc
mov
sbb
ror
pushf
xchg
negl
scas
adc
fisttpll
movsb
fldt
adc
adc
add
das
add
push
add
mov
fistpll
xchg
arpl
ret
add
fidivl
xchg
std
out
push
les
std
pop
lea
in
loopne
bound
cmp
jo
insl
xor
push
into
hlt
sahf
mov
mov
popf
add
imul
mov
addl
fmull
adc
roll
jge
sbb
data16
xchg
test
push
hlt
lods
adc
jp
pop
and
rorb
jmp
pop
sbb
test
in
xchg
shll
out
call
sahf
mov
addr16
pop
cmp
sbb
dec
imul
insl
sbb
popf
in
and
adc
sahf
ja
add
cld
imul
pop
sahf
insb
inc
jmp
dec
loope
lcall
adc
or
out
pop
popa
xchg
pop
out
pop
xchg
push
int
cmp
mov
cmp
xchg
stos
jne
mov
push
add
fwait
lds
mov
stc
mov
mov
sub
les
xchg
adc
js
inc
lods
xor
cs
int3
insb
add
mov
and
loope
jle
pop
xor
in
push
aad
mov
push
inc
jnp
andb
out
jb
inc
fdivrs
fwait
mov
out
mov
outsb
fs
push
xor
scas
aaa
cmp
lret
iret
fst
test
in
fbld
adc
jbe
or
cmp
leave
outsl
and
xor
fidivrl
cmpsl
inc
rorb
adc
fildll
pop
lods
sbb
mov
ljmp
filds
rcrb
loopne
in
daa
dec
add
xor
movsb
mul
mov
ret
mov
push
jbe
gs
fmuls
into
aaa
ret
or
sbb
sbb
xchg
mov
xor
and
fildl
and
dec
sahf
nop
sbb
out
lahf
or
cmp
cmpsb
mov
add
and
ljmp
das
cwtl
test
jmp
dec
out
repnz
xor
scas
mov
xor
lret
mov
pusha
into
loope
jmp
pop
out
or
ret
aas
fnop
out
dec
rorl
dec
out
jno
loop
or
sahf
scas
lods
in
or
cmpsl
sub
jl
push
mov
mov
ljmp
cmp
mov
hlt
jecxz
and
xchg
xor
leave
mov
fdivrp
lods
test
jno
push
add
xor
dec
leave
or
xchg
xlat
push
out
pop
sbb
mov
xchg
jne
inc
nop
fcmovnu
popf
cltd
xchg
into
pop
push
sub
pop
mov
in
les
dec
inc
add
cmpsb
dec
xchg
jnp
inc
add
sub
xchg
fwait
insb
inc
jmp
int
add
in
dec
mov
test
testb
and
lods
cmpsl
inc
pushf
jns
out
lcall
xchg
rcrb
fsubs
inc
hlt
pop
iret
daa
xchg
xor
fsubrs
int
xchg
aas
aas
xor
xlat
dec
jnp
xor
fidivrl
cmpl
mov
imul
insb
mov
das
je,pn
mov
rcl
jno
sbb
jg
fs
sub
in
cmp
xchg
dec
subb
xor
divl
xchg
outsl
ja
dec
jns
fs
mov
imul
push
add
lahf
mov
clc
sub
push
mov
and
add
jp
dec
cmp
xlat
test
dec
repz
mov
ret
push
rorb
mov
add
inc
ljmp
lds
data16
into
mov
repnz
inc
sahf
rcr
dec
sub
icebp
lcall
push
imul
push
hlt
mov
lret
test
mull
xchg
jl
cmp
movsl
ja
pusha
xor
rol
jnp
bound
push
push
mov
dec
scas
js
jns
stos
pop
jae
lods
mov
sahf
sub
js
or
enter
push
adc
pop
out
sbb
subb
int3
sbb
jge
imul
xchg
nop
loopne
xchg
je
xchg
fstl
push
xor
cmp
push
jmp
sti
call
inc
test
sub
inc
test
testb
mov
shlb
subl
fadds
sbb
pusha
and
scas
std
inc
cmp
cmpsl
mov
inc
mov
push
adc
addb
jne
lea
jg
test
sub
lds
inc
mov
loop
cmp
ret
scas
hlt
popf
addr16
mov
fnstsw
loop
pusha
gs
xor
push
shrl
imul
xchg
jne
jge
movsb
mov
mov
lret
or
and
rol
and
into
lahf
jg
int3
jl
xor
testb
dec
push
pushf
cli
popa
out
dec
cmp
aad
cli
mov
add
adcb
xor
jns
jmp
jmp
dec
cmpsb
cmp
cmp
mov
data16
xchg
adc
out
div
int3
and
xor
xchg
mov
mov
jge
sahf
aad
dec
push
imul
cmp
jle
pop
ds
cmc
stos
push
test
mov
rcr
dec
add
mov
adc
sub
inc
lods
outsb
in
or
or
ret
imul
xorl
daa
push
or
in
repz
mov
or
sbb
fistl
mov
dec
mov
push
jecxz
es
jge
mov
adc
insb
pop
mov
mov
popf
push
ret
mov
push
roll
mov
fsubl
and
in
repnz
out
out
mov
repz
aas
in
fsubr
bound
push
sub
cmp
cmc
ret
mov
or
add
push
mov
jb
mov
pop
out
push
insb
clc
or
aad
gs
stos
nop
pop
dec
int
xchg
out
mov
insl
push
mov
mov
fs
sub
lods
xchg
data16
jecxz
pop
vmread
push
and
cmp
insl
clc
hlt
xorb
clc
mov
popa
dec
addr16
xchg
repz
fadd
dec
inc
push
adcl
stos
inc
push
add
mov
push
into
mov
ljmp
repnz
push
adc
xor
xchg
fucomp
inc
xor
add
push
inc
imul
add
jns
xor
mov
pop
or
mov
cmpsb
sbb
or
pop
push
pop
sub
adc
mov
inc
icebp
sbb
mov
jbe
dec
loopne
pop
in
push
cmp
jbe
dec
dec
ds
add
jle
jne
or
jle
add
or
xlat
xchg
sub
mov
in
push
inc
imul
xchg
jg
outsb
jle
into
into
cmpsb
xchg
out
pop
das
mov
push
fs
jnp
xchg
add
pop
cmpsl
xor
push
outsl
ret
cmp
mov
xchg
or
jmp
inc
inc
dec
mov
sub
cmpsb
add
pop
sub
cmpsb
push
lods
fs
xor
cmp
xor
mov
idivb
inc
sub
lcall
je
lret
movsl
in
jo
cmpl
push
adc
lods
push
and
cmpl
cmp
bnd
mov
rol
lahf
sbb
fs
aaa
jo
jp
mov
inc
mov
add
scas
or
iret
or
movsb
and
adc
xorl
pop
in
push
adc
push
mov
cwtl
inc
or
bound
xor
stos
mov
sub
add
xor
ja
or
xlat
loope
cmp
dec
lock
xor
ds
sub
lods
mov
subb
jl
ret
subb
xor
lods
stos
cmp
rolb
push
dec
sbb
dec
lret
aam
jl
sub
mov
mov
mov
in
xchg
cmp
mov
sbb
test
xchg
gs
ljmp
mov
sub
xlat
mov
das
frndint
fnsave
mov
int
pop
mov
cltd
mov
jp
pop
and
int
icebp
add
dec
test
jecxz
int3
sbb
movsl
jmp
enter
mov
lahf
daa
add
adc
leave
mov
jmp
gs
inc
imul
sbb
stos
outsb
ret
adc
andl
popf
mov
call
movsb
mov
push
out
int3
stc
pop
cmp
push
pusha
dec
mov
out
bound
adc
xor
in
pop
pop
loopne
sbb
leave
pushf
sub
add
dec
and
out
mov
insb
or
imul
sbb
lds
aas
popa
repnz
jmp
xor
sub
jo
cmpsl
jmp
cmp
loop
daa
dec
subl
sbb
outsl
jns
mov
test
jge
xchg
daa
ret
repnz
addr16
push
fmull
or
pop
shl
xchg
push
jns
cmp
pop
aad
sbb
and
orb
inc
mov
mov
inc
dec
pop
cmp
shll
xchg
push
inc
aas
push
fsubrs
insl
add
aaa
arpl
popf
andl
push
mov
cmp
int
inc
push
mov
cmpsb
in
cmp
int
and
and
or
xchg
jns
push
or
cmp
push
pusha
lds
ja
dec
cmpsl
push
push
cwtl
mov
sbb
imul
jo
rcll
lcall
push
std
sub
stos
mov
push
ficompl
ret
sbb
sub
enter
xor
dec
dec
ljmp
sub
out
loopne
lds
mov
xchg
sbb
enter
xor
bound
adc
pop
cmp
adc
pop
lock
pop
imul
enter
cltd
lock
sub
test
dec
mov
idivb
ljmp
mov
lret
push
ss
jle
popa
cmp
and
shl
xor
cs
test
mov
sub
adc
call
push
test
rcll
mov
leave
aas
aam
jbe
sbb
cmpl
push
xor
mov
cwtl
dec
or
xchg
iret
pop
addr16
cmpsl
ficomps
data16
cmpsl
mov
sub
cmp
aas
or
and
xlat
in
test
mov
add
xlat
rcl
dec
sahf
cs
enter
mov
fistl
imul
xor
lcall
inc
mov
hlt
xchg
xchg
push
outsb
pop
jno
cmp
mov
pop
imul
int3
push
dec
fsubs
int3
mov
xchg
rclb
and
es
jo
pop
or
mov
mov
frstor
xchg
iret
lods
jnp
rcrb
mov
fstps
insl
enter
lcall
inc
hlt
sbb
xchg
pop
pop
cli
ret
push
jle
jg
jnp
cmp
test
aad
jecxz
leave
movsl
std
pop
fistpll
push
out
outsb
or
stc
out
fmuls
sub
sub
in
sbb
push
mov
dec
mov
dec
inc
pop
or
adc
sbb
jns
popa
cld
aam
enter
cli
loope
popa
divps
mov
aad
data16
adc
fadds
jmp
and
jb
loope
lret
fs
fs
mov
cltd
in
ljmp
dec
or
mov
mov
leave
sbb
popa
xlat
and
out
cmc
sbb
inc
adc
jbe
xor
dec
sub
xor
lret
test
dec
jle
jg
xchg
xor
xor
sahf
push
es
mov
lahf
daa
inc
out
hlt
dec
add
xor
pop
jecxz
jno
cmc
mov
push
adc
or
int3
out
notb
adc
addr16
lret
cmp
lcall
xor
imul
mov
push
mov
in
inc
test
in
push
ficoml
leave
or
mov
inc
ret
push
inc
loope
ret
and
xchg
repnz
iret
sbb
jne
test
add
mov
shr
xchg
jo
pop
ds
insl
shlb
cwtl
cmp
pop
test
scas
ret
loope
cmp
jle
cli
sub
jle
lds
sbb
jo
insl
push
adc
pop
mov
lcall
lods
insb
cmp
test
rcrl
push
loope
jmp
test
push
cmp
mov
rcll
js
out
subl
mov
xchg
adc
incl
push
xchg
scas
adc
dec
and
push
pop
sbb
das
addl
lret
sahf
iret
test
mov
inc
bound
push
cmp
iret
pop
fsubr
out
push
push
stos
mov
add
ja
adc
outsl
movsb
and
lret
lock
jmp
mov
insb
popf
xor
divb
adc
mov
jmp
push
sbbl
cmpl
adc
pop
xchg
mov
cmp
xchg
cmp
push
cmp
mov
in
jge
cmp
push
arpl
xchg
outsb
dec
sub
cmpsb
or
jp
popf
push
lds
jge
nop
or
push
and
and
insl
in
gs
mov
mov
push
stos
test
pop
ljmp
mov
jnp
pop
jnp
pop
xor
mov
xor
jb
in
les
add
push
push
add
inc
div
cmpsl
push
push
aas
add
xchg
push
mov
pop
outsl
cli
pop
push
std
sbb
movsl
testl
xchg
cmp
es
xchg
sub
pop
adc
mov
jg
pop
mov
in
inc
stc
mov
ret
or
ret
lds
leave
sbb
push
push
fmull
mov
cmp
mov
sbb
dec
mov
push
test
in
negl
mov
lret
or
jbe
sub
mov
pop
push
jge
cmp
add
es
enter
mov
in
or
lahf
aad
daa
sub
cs
popa
sbb
fstps
jge
cmpsb
cmp
fs
shll
push
dec
or
mov
push
xor
lahf
xchg
nop
mov
aas
les
pop
mov
xchg
fldenv
jne
mov
adc
push
pop
mov
test
lods
dec
cmc
lret
test
lcall
jp
stc
stos
push
mov
cli
fstp
add
pushf
rolb
addr16
push
xor
shl
bound
adc
jno
mov
mov
ret
aam
push
sbb
aas
dec
or
in
pop
pushf
push
xorl
fimuls
add
out
dec
mov
push
xchg
xlat
push
rcl
xchg
sub
xlat
and
add
pop
inc
mov
jg
lret
sar
cltd
ficoms
bound
in
nop
shr
fsubl
inc
cmc
sbb
sbbl
mov
jmp
shl
stc
imul
pop
pop
out
pop
lcall
bnd
sahf
int
or
cmpl
in
mov
inc
and
ret
mov
cli
les
cld
sub
gs
scas
sbb
inc
jecxz
ljmp
mov
push
cmp
cwtl
andb
cli
mov
roll
stc
xor
or
imul
sub
cmc
push
pop
out
rcrb
cmpsb
repz
jle
stos
gs
dec
cmp
cmc
mov
shrl
mov
adc
rcll
xlat
add
das
mov
ljmp
fisttpl
lods
jmp
cmp
push
mov
sbb
add
loop
insl
lods
fisttps
mov
movsl
cmpb
dec
mov
xor
mov
mov
arpl
scas
repnz
cmp
dec
cmp
idivl
xchg
push
xchg
dec
push
xchg
lods
sub
lds
js
pop
add
and
mov
cltd
pop
dec
inc
test
insl
xchg
pop
inc
mov
mov
ficomps
aaa
pop
imul
and
push
fcmovbe
or
xchg
out
pusha
in
xor
mov
lret
roll
mov
fcmovu
mov
dec
sti
jp
add
mov
and
inc
cmpb
and
fistl
inc
je
mov
movsl
lret
jmp
arpl
aam
les
das
add
lea
daa
mov
cmp
sbb
fwait
push
xlat
out
cmp
ja
jb
fmuls
inc
mov
fmul
ret
out
push
push
or
push
cmp
push
jnp
jmp
inc
lds
das
push
insb
fwait
add
aam
sub
adc
jnp
arpl
in
mov
cmp
loop
xor
sarl
add
insl
movsb
jne
add
pop
adc
adc
xchg
cmp
sub
cmpsl
xor
test
inc
nop
sub
cli
outsb
inc
jmp
in
imul
mov
sub
in
pop
outsb
fmull
sub
push
and
and
or
pop
insb
sbb
out
xchg
xor
xor
ret
jbe
ss
gs
fcmovnb
test
xor
int3
testl
repnz
or
cltd
inc
pusha
enter
dec
cltd
mov
jbe
and
das
adc
out
dec
repz
push
push
popa
sbb
lock
jle
loop
rorl
orl
mov
lret
xor
jecxz
test
arpl
inc
mov
xor
lahf
popf
sub
push
mov
add
add
inc
cltd
add
and
fwait
push
imul
cmpsl
and
cmp
jae
and
inc
fwait
je
lahf
leave
xlat
lahf
mov
sahf
push
dec
mov
jns
pop
jle
cld
imulb
loopne
cmpsl
loop
jae
or
or
inc
cmp
add
sbb
mov
inc
and
inc
dec
loop
imul
mov
pusha
gs
sub
and
not
adc
mov
lock
outsb
xor
cmp
pusha
test
push
lret
sub
add
lret
mov
xchg
cltd
lods
dec
rcrb
mov
or
pushf
lahf
xor
inc
daa
ja
push
inc
xor
xchg
mov
jno
jle
mov
dec
pop
add
jnp
cmp
fdivrs
cmp
cmp
add
mov
jno
mov
jmp
mov
xorb
cmp
aam
cmp
or
movsl
lock
mov
aas
cmpsb
outsb
cmp
jmp
lods
cmp
mov
imull
or
lods
or
ffreep
or
inc
lea
aas
call
jge
add
lods
dec
dec
xor
xchg
fadds
mov
push
bound
cld
cli
jmp
jne
or
lcall
aas
hlt
and
les
sti
push
and
adc
mov
aaa
and
mov
mov
ds
xor
and
subb
adc
add
shl
xor
scas
icebp
or
jb
int3
mov
jb
mov
shr
bound
ret
les
add
cmpsb
je
mov
cmc
push
and
les
pop
xchg
pop
mov
ret
ret
xchg
xchg
pop
xlat
das
inc
add
or
inc
cmp
lods
fwait
push
jmp
sbb
data16
inc
gs
pop
aam
pop
sarl
mov
out
lcall
dec
sbb
loop
push
pop
add
cmp
sbb
dec
pop
inc
xchg
aad
xchg
pop
mov
out
fsubs
mov
mov
mov
mov
jnp
mov
daa
cli
or
add
fiadds
mov
ja
sbb
pop
or
mov
fsubrl
mov
cmc
les
repnz
aad
cs
pop
loopne
popa
inc
xchg
push
mov
in
fisubs
push
or
addr16
cmp
or
adc
add
mov
stos
push
lret
push
and
movsl
test
mov
cltd
mov
cld
fadds
adc
or
xchg
sbbb
cmp
jmp
imul
sub
repz
push
outsl
jae
adc
aas
xor
sub
outsb
mov
mov
nop
xor
or
clc
icebp
rcrl
jmp
inc
in
aas
inc
rorb
stos
hlt
jbe
adc
sbb
test
pop
test
dec
mov
mov
lods
mov
jbe
pop
jle
pop
jb
inc
mov
movsl
int
dec
ret
mov
sti
subl
loopne
jbe
bound
imul
pop
adc
pop
aad
imul
lods
adc
lahf
or
es
and
mov
rclb
add
vpshlq
in
jl
in
cmpsb
push
push
xchg
test
mov
mov
xor
cmp
fisttpll
insl
in
jo
dec
mov
jne
dec
lock
xor
outsl
mov
sbb
xor
lock
incl
lcall
mov
lret
jg
inc
push
fsubrs
arpl
cltd
lods
sub
or
out
sub
push
or
or
jb
mov
popf
mov
insb
dec
out
mov
addr16
push
jo
dec
test
in
sbb
adc
daa
cld
and
xlat
mov
and
loop
cmp
jl
je
cltd
sbb
fadd
sbb
add
lock
aam
cmpsl
push
cli
icebp
and
cwtl
repz
xchg
add
mov
lcall
xor
xchg
xor
lock
jne
mov
into
xlat
notl
pop
scas
in
stos
xor
lcall
movsb
iret
daa
and
lods
loope
out
inc
jnp
jge
pop
inc
je
cwtl
cmp
pop
pop
iret
mov
inc
daa
hlt
xchg
movb
mov
xchg
jnp
int3
sbb
sub
cmp
les
push
or
pop
and
push
adc
fadds
in
je
sub
test
negl
dec
fcomp
adc
incl
sarb
and
dec
sbb
dec
notl
or
mov
mov
mov
inc
jno
or
insb
add
xor
push
fmull
mov
xchg
jecxz
push
cmp
jnp
stos
xchg
adcl
adc
push
push
ret
jo
or
xlat
xor
imul
in
adc
jl
dec
adc
ja
jge
hlt
lahf
mov
nop
jno
fs
pop
repz
xlat
ret
rorl
mov
adc
pusha
or
xchg
dec
repnz
sub
jne
inc
jns
out
pop
adc
xchg
ret
mov
add
testb
movsl
dec
sbb
xor
aad
push
pop
cbtw
and
shll
incb
ret
insb
xor
sub
lcall
roll
xchg
repz
mov
jo
xchg
movsl
cmp
push
dec
dec
mov
mov
aam
stc
xor
dec
cmpsl
mov
sub
stos
lods
arpl
lahf
decb
cmp
xchg
and
pop
dec
sub
lahf
push
sbb
icebp
mov
mov
dec
jg
lcall
loopne
pop
pop
loopne
out
ret
inc
jg
push
int
jbe
add
or
cli
cltd
sub
add
cmp
mov
lea
jo
sub
stc
mov
frstor
xor
leave
bound
cmp
cmp
inc
mov
pop
lret
xor
push
pop
mov
push
or
fwait
cwtl
sahf
push
jno
sub
pusha
cmc
push
inc
xchg
xchg
mov
dec
outsb
mov
popa
or
inc
xor
test
xchg
xchg
mov
filds
xor
mov
or
push
cmp
push
mov
cltd
or
cmc
and
inc
sbb
mov
loope
dec
in
inc
cmp
les
test
clc
mov
push
or
stos
xor
push
pop
adc
mov
pusha
retw
out
xor
lods
fisttps
mov
add
out
mov
jb
js
or
cltd
mov
xchg
imul
push
sbbl
fwait
sbb
ljmp
insb
xor
or
adc
loopne
cltd
adc
mov
out
inc
pusha
into
out
push
add
or
js
pop
imul
in
and
addr16
cmp
sahf
xchg
push
pop
ret
cmp
shll
outsb
scas
pop
xor
or
mov
and
jl
popf
imul
jge
dec
add
js
mov
jo
insb
std
mov
test
xchg
stos
fwait
icebp
and
mov
pop
ret
push
imul
out
jmp
popf
cmp
clc
sahf
icebp
sbb
cmc
lcall
and
hlt
cwtl
mov
fs
insb
pop
nop
test
jns
or
ret
and
call
scas
dec
outsl
fldcw
rep
jmp
ljmp
mov
shl
loope
push
or
cmp
cwtl
addr16
sti
push
lahf
sbb
repz
adc
adc
cmp
add
fbld
mov
mov
outsl
or
popf
adc
and
fwait
add
dec
push
repz
jne
push
or
pop
mov
push
std
js
js
aaa
adc
aas
lcall
sbb
lcall
add
and
or
adc
imul
int
cs
mov
jns
cmpsl
xchg
pop
sbbl
data16
cmp
loop
sub
mov
xor
jae
jl
mov
in
mov
test
dec
int
ja
das
jge
hlt
ror
sbb
dec
leave
sub
rolb
jp
jl
dec
aaa
in
ds
movsb
or
movsl
or
mov
test
nop
push
int
pop
push
inc
pop
nop
lret
cltd
push
idivb
xorb
dec
subl
sbb
dec
mov
add
es
dec
push
jp
lret
out
pop
push
jbe
jo
fdivrl
sti
xor
and
push
and
stc
xchg
push
sbb
inc
cmp
mov
xor
inc
call
inc
add
cmp
icebp
lods
xor
xchg
push
dec
cmp
add
pushf
test
les
loopne
adc
inc
xchg
inc
and
jecxz
xor
xchg
pushf
out
push
ret
repnz
aas
out
aas
leave
push
stos
out
lods
inc
imul
jp
fiaddl
mov
sbb
mov
push
pop
iret
cltd
test
inc
in
nop
mov
or
cmc
pop
add
mov
xchg
adc
ret
cmp
cmp
sbb
cmp
pop
test
pop
in
jae
icebp
jb
mov
and
loop
mov
adcl
loopne
push
pusha
mov
pop
es
jecxz
lds
out
xlat
rclb
in
and
fists
xlat
xlat
iret
ja
inc
cltd
push
enter
sbb
cmc
test
cltd
call
mov
subb
sub
pop
cmpsl
rcrb
dec
test
push
mov
testl
ficoml
fistl
lcall
mulb
lret
mov
into
nop
jl
test
outsb
ror
dec
aas
call
dec
out
int
cmp
enter
gs
addr16
pop
rcrl
out
dec
push
mov
ds
addr16
ss
xchg
loop
fwait
subb
fwait
push
sbb
cmpsb
add
jl
jmp
fildl
adc
in
xchg
daa
inc
ss
mov
xchg
push
gs
pusha
mov
fcmovbe
mov
fisubrl
xor
fs
cld
or
nop
in
jo
jg
xchg
sbb
call
dec
sub
xchg
cmp
mov
in
cli
cmp
fmull
add
ss
sub
shl
mov
test
fcoml
int
dec
xchg
test
out
gs
push
testb
fdiv
lcall
sahf
inc
addr16
cmp
fsubrs
push
sub
stos
lret
fists
shrl
jecxz
stc
out
es
jmp
repz
mov
pushf
ja
xor
test
push
sbb
add
lods
cwtl
mov
lcall
xchg
sbb
pop
mov
sub
xor
cmp
and
pmaxsw
std
push
cmp
jge
jne
pop
sub
cmp
cwtl
outsl
push
shll
or
xchg
inc
lret
fisttps
cltd
xor
adcb
mov
out
push
cmpsb
xlat
aas
cmp
loopne
lret
subl
mov
mov
push
sbb
leave
out
mov
xchg
movsb
cmp
and
jbe
cmc
ljmp
mov
flds
sbb
cmpl
add
mov
lods
and
lock
jecxz
testb
adc
shr
stc
push
popa
mov
fdivl
stc
lock
dec
sbb
fisttpl
andb
loopne
stos
lock
cmp
xor
das
add
lret
ficoms
pop
call
insl
cs
mov
ror
mov
xchg
cmp
fsubs
cli
in
xor
aaa
test
inc
and
fdivrl
repz
andl
mov
adc
push
cmc
fprem1
cmp
mov
sub
cmp
in
inc
pop
icebp
sti
mov
cmp
data16
add
or
in
popf
pop
xor
ss
dec
adc
fcmovu
mov
and
mov
pop
push
paddb
loop
test
inc
mov
loope
mov
inc
aas
pop
xor
repz
aad
fs
inc
cmpl
xchg
stos
adc
or
sahf
lds
icebp
data16
sar
pop
pop
imull
push
mov
jo
mov
push
push
adc
push
push
fld
popa
xchg
scas
fsubp
subb
mov
mov
mov
jp
shlb
inc
bsf
fnstcw
jg
testl
iret
imul
fcoms
mov
push
push
movsl
mov
bswap
mov
xor
lods
dec
call
enter
movsb
fstl
add
mov
jg
dec
push
sub
addr16
xchg
stc
inc
ja
in
mov
xchg
dec
mov
push
add
in
dec
mov
sbb
xor
fcompl
push
je
and
aaa
mov
xchg
or
sbb
and
xchg
or
or
cli
movsb
push
mov
dec
mov
test
out
movsl
dec
xor
xchg
loope
jne
inc
popa
jbe
shlb
xor
out
sub
arpl
aam
test
sub
and
call
ss
mov
ret
pusha
aad
jg
mov
sbb
jle
cmc
push
jbe
adc
test
xor
shll
popa
dec
push
cltd
popf
inc
nop
pop
add
inc
dec
xchg
out
dec
gs
or
jecxz
pop
outsl
filds
dec
pop
lret
inc
push
arpl
shrb
lds
rcl
inc
pop
and
dec
imul
dec
pop
cmpxchg
pop
aaa
fidivl
mov
mov
rcll
pop
ljmp
aad
gs
std
test
and
lock
mov
aad
lds
repnz
mov
sub
aam
sub
cmp
cmp
cmp
out
xor
mov
adc
shll
bound
cmc
adc
ja
stos
xchg
loop
lds
jo
shll
imul
jne
test
ss
ja
iret
cmp
flds
dec
pop
jne
mov
dec
xchg
out
std
xchg
int3
push
jbe
xor
fdivl
sub
lret
push
sub
jne
adc
cs
pop
push
lock
pop
ja
ss
daa
push
adc
jmp
or
mov
pop
daa
popf
mov
or
add
cmpsb
lods
pushf
or
jp
mov
xchg
aaa
fbld
or
lret
out
lods
push
ss
rolb
push
pop
int3
aas
aaa
or
std
mov
xorb
call
mov
imul
mov
aas
int3
sub
hlt
fdivrs
mov
jo
shlb
sub
rcl
leave
icebp
push
out
addl
mov
mov
dec
inc
pop
or
aad
cmp
dec
jp
cs
adc
and
sub
jmp
call
jmp
pop
pop
shll
mov
cmp
add
sahf
sbb
xchg
and
cmp
jno
push
cltd
ret
sahf
out
fidivs
dec
push
add
idivb
daa
adc
js
mov
pop
test
mov
dec
mov
fdivs
sub
xchg
push
and
dec
icebp
mov
loop
mov
cmpsl
lods
pushf
mov
out
mov
aaa
add
mov
push
out
repnz
hlt
xchg
add
test
ss
push
mov
int3
shll
sub
clc
jmp
and
jo
scas
sub
cld
xchg
bound
outsl
loop
outsl
xchg
jp
aas
insl
mov
sarb
das
pop
xchg
sub
das
dec
xorb
mov
pop
leave
mov
js
xor
bound
pop
ret
jle
add
lock
je
cmpl
add
mov
ds
repz
es
shll
out
inc
xor
adc
in
add
fsubr
mov
out
fimull
xor
push
pop
hlt
push
cmp
or
sbb
ret
orb
lcall
movsl
push
push
xchg
cmp
pop
adc
mov
cwtl
fdivrs
popf
add
pop
cld
push
test
outsl
xchg
mov
out
testl
imul
pop
add
mov
cwtl
sub
dec
repnz
cmp
scas
push
dec
ret
pushf
fnstcw
push
or
scas
int
mov
dec
dec
lcall
bound
faddp
aad
xchg
jns
stos
or
add
and
shrb
jle
push
lcall
lahf
scas
cmp
popa
lret
push
adc
stos
fwait
lods
sub
loope
jno
hlt
dec
popf
enter
push
repnz
fiadds
pusha
sub
jp
fnstenv
imul
dec
test
jmp
mov
sub
sahf
xchg
lds
ret
loopne
lea
dec
lods
fstpl
imul
dec
mov
dec
add
addr16
fidivrl
imul
cmp
pop
in
imul
cmc
adc
sub
insb
or
insb
adc
or
adc
clc
pop
cld
pop
adc
lods
pop
dec
xchg
sbb
sbb
xor
xor
mov
pop
movsl
sahf
ret
loop
jmp
test
and
fnstcw
jo
pop
inc
cltd
mov
xchg
lds
adc
mov
addl
dec
fsubr
jne
mov
sbb
pusha
sbb
xchg
sarl
jo
push
sbb
add
clc
xchg
mov
call
pop
cmp
adc
jb
repnz
inc
es
mov
ds
mov
and
jg
xor
or
mov
cli
in
adc
call
test
jge
cs
inc
add
jmp
fwait
dec
fwait
cltd
dec
pop
test
mov
dec
aaa
enter
cmpl
xor
aam
std
ljmp
dec
cli
mov
aaa
jno
add
cmpl
xlat
pop
jno
fwait
mov
adc
pop
in
cmp
mov
or
lods
jnp
xchg
ss
movsl
lea
mov
cmp
fstpt
or
push
call
cmp
mov
cmp
fsubrs
and
add
mov
add
lock
iret
dec
sub
lds
xor
stos
or
cs
js
mov
jge
in
lods
or
jmp
loopne
dec
mov
rorl
shrb
std
cmc
mov
sbb
insl
or
sahf
or
enter
push
pop
sbb
push
sub
cmp
sub
jl
shrb
fbstp
jecxz
lret
out
stos
into
inc
js
sbb
rcr
or
aaa
xchg
add
or
add
out
in
jbe
fistl
xor
pop
cmp
out
bound
mov
or
pop
icebp
aaa
pushf
lret
fwait
hlt
shrb
lods
lahf
and
xor
addr16
movsl
push
fwait
pop
xchg
pop
jo
mov
scas
pop
mov
sub
mov
loope
inc
or
das
lahf
fimull
ljmp
cli
inc
mov
xchg
inc
inc
popa
mov
mov
js
out
lret
in
stc
fwait
mov
mov
push
add
or
lcall
clc
hlt
in
mov
cs
and
dec
flds
sbb
adc
fistpll
mov
nop
les
sbb
sbb
dec
sub
add
dec
push
push
testb
fdivr
enter
mov
push
jb
jo
pop
xlat
inc
pop
inc
bound
dec
cltd
insb
aaa
data16
sub
je
sti
test
hlt
or
mov
mov
jbe
mov
shlb
lea
cmp
hlt
inc
xor
mov
mov
xor
pop
in
in
add
int
push
sub
imul
jmp
in
inc
aam
cli
and
rolb
inc
push
repz
pop
imull
mov
daa
outsl
sub
mov
cmp
sub
cli
les
repz
and
cmp
daa
hlt
lcall
pusha
test
rcl
shll
enter
push
xor
sub
inc
dec
std
and
out
pop
jmp
int
and
hlt
arpl
lret
lea
mov
xor
outsb
add
outsl
popf
pop
jl
xchg
xor
cld
cli
out
jo
mov
iret
les
sbb
es
jne
dec
int
call
lret
ja
pop
add
fsubl
pop
mov
jge
push
mov
and
push
jmp
dec
testl
ret
push
dec
das
ds
lds
mov
add
int
dec
int
jnp
popf
cmpsb
or
subb
adc
push
xchg
sub
sbb
test
sbbl
ret
cs
or
stos
sub
xorl
in
test
cli
out
leave
inc
mov
stc
fdivrl
lods
jmp
add
inc
and
pushf
jb
push
push
sti
mov
jnp
pop
pop
je
clc
fwait
mov
pop
sbb
push
xchg
call
js
mov
jl
adcb
das
out
test
fiadds
push
pop
pop
lret
stos
mov
out
rcl
shrl
stc
mov
add
xchg
pop
popa
cwtl
nop
sbb
cmp
sub
lea
mov
push
pop
push
push
sbb
add
ss
mov
xchg
mov
dec
rcrb
outsb
jl
and
es
sub
divl
int
cmp
adc
insl
in
nop
leave
or
je
sahf
pop
dec
xor
xlat
dec
cmp
xor
arpl
repz
and
xor
mov
in
pop
aas
or
ret
sbb
jge
int
xchg
xchg
cmp
icebp
mov
or
cli
out
clc
add
scas
sahf
iret
sub
out
jp
fmuls
push
shlb
insb
pop
add
int
fwait
test
jmp
sub
das
shr
mov
stos
ret
lods
cmpsl
inc
mov
dec
jbe
jnp
or
ljmp
mull
out
sti
adc
jg
popf
xchg
aas
outsl
adc
dec
sbb
es
into
incb
cmpsb
or
mov
mov
jg
in
std
xor
in
sub
enter
in
leave
jl
loop
shrb
das
das
jge
insl
repnz
jo
adc
loope
jnp
lret
lods
ret
mov
mov
cmpsl
push
loope
add
das
push
jb
xchg
decl
nop
fcomps
stos
adc
lret
aad
stos
and
mov
dec
jb
cmp
mov
mov
sbb
hlt
loope
aaa
fidivrl
and
or
push
inc
test
cmp
test
add
mov
test
jp
pop
jle
push
ret
adc
cmp
repz
jne
ret
call
clc
adc
mov
popa
out
shrb
cwtl
inc
xchg
inc
stos
cmp
push
dec
test
dec
imul
scas
sub
scas
dec
movsb
stos
xor
das
xchg
mov
push
iret
out
in
fdivrs
mov
pop
shl
mov
aas
les
lahf
shrb
sahf
outsl
mov
mov
ja
xor
dec
shlb
jmp
push
inc
jnp
in
je
daa
mov
mov
notl
ret
clc
in
pushf
dec
sarl
subb
rolb
cmp
fidivl
cmpsb
adc
fcmovnu
and
sbb
push
mov
adc
jmp
jnp
popa
sarb
mov
leave
mov
out
lcall
mov
dec
lock
leave
push
or
negl
push
rorl
daa
xrelease
sbbl
mov
xchg
das
stc
cmp
inc
xor
imul
rcrl
push
mov
hlt
out
sti
adc
add
mov
mov
mov
pop
mov
jno
shll
inc
flds
xor
in
fnstsw
push
fdivr
and
pop
jmp
mov
cwtl
in
add
andb
stos
aas
clc
aaa
inc
jp
dec
cmp
mov
incb
and
arpl
fiaddl
lcall
data16
test
and
xchg
sbb
sub
fisttpll
out
sti
cmpsb
cltd
jmp
add
sbb
bound
iret
js
xor
bound
push
aas
shl
aam
jb
lods
pop
out
lret
sbb
sub
and
lods
enter
mov
cmpb
pop
shrb
xchg
inc
pusha
fcmovu
mov
inc
lock
add
cmp
adc
lods
push
mov
lcall
jle
jle
mov
and
cltd
lret
adc
negl
cmpsb
jle
js
mov
and
xor
inc
imul
adc
push
and
out
stos
xchg
movsb
stos
fisubrs
lcall
lea
aam
pop
test
ss
in
js
mov
mov
adc
outsl
fsts
stos
jbe
int3
cli
and
movsl
jle
adc
or
adc
sti
cli
lods
and
les
mov
int
jle
cmc
mov
and
push
fstpt
mov
xchg
rorb
arpl
cli
stos
adc
jns
pop
repz
xchg
loop
enter
sub
iret
cli
pop
xor
iret
in
xor
imul
jno
fsincos
scas
xchg
inc
aad
dec
add
fcmovu
sahf
inc
or
inc
sub
mov
in
ljmp
cmpl
das
cmp
into
xchg
adc
dec
pop
push
sar
adc
dec
mov
or
mov
mov
fdivs
cli
or
loope
inc
in
adc
push
popf
int3
or
dec
mov
xchg
rcrb
movsb
ret
lcall
mov
lahf
mov
leave
jmp
sbb
sub
movl
sub
lods
jl
pop
js
fisttpl
sub
hlt
cmp
xchg
scas
sar
ds
repz
jnp
jge
out
jnp
fisttpl
je
push
out
sub
add
inc
pop
adc
mov
adc
push
xchg
sub
sbb
repz
ja
jl
xor
push
add
xlat
jp
jge
lds
pop
aaa
ficoml
mov
inc
popl
push
xor
je
popf
adc
aaa
test
loopne
adc
cmc
xchg
xchg
enter
cmp
gs
adc
xor
scas
stc
mull
mov
or
test
gs
inc
push
ret
in
sbb
int
lds
xor
js
aam
loope
or
rcrl
ja
push
lea
mov
mov
xchg
loop
jecxz
mov
lret
xchg
iret
stos
cli
push
adc
lahf
shlb
leave
cmpsb
ss
lods
or
ret
call
jg
cmpsl
cmovp
add
mov
push
shl
xor
movsl
cmpsb
or
xchg
or
lock
roll
cmpsl
push
sub
lcall
out
jle
imul
fdivs
es
and
test
xor
jb
mov
jmp
sar
push
stc
in
call
pop
adc
and
jl
mov
fwait
or
and
pop
lcall
xchg
movsb
mov
sub
call
push
addr16
int
in
xchg
sub
add
adc
sti
lock
pop
hlt
jb
xchg
insl
aas
rorl
icebp
setbe
fldenv
mov
ss
stos
mov
in
sbb
inc
addl
push
lret
adc
jno
mov
mov
shll
inc
pop
lods
adc
rcl
jmp
int
pusha
fwait
aam
lahf
scas
and
ret
ja
push
or
out
aam
fucompp
cld
les
loop
ss
pusha
in
aam
in
addr16
fsubs
jne
jne
jne
xchg
dec
fidivl
arpl
mov
jmp
inc
dec
inc
rolb
test
dec
sbb
arpl
lods
inc
lahf
cmp
jle
ss
sub
dec
scas
cld
push
in
fisubs
ja
in
mov
fs
inc
jp
and
addr16
roll
mov
jp
in
xor
gs
repz
pop
jno
or
or
mov
pusha
cmp
jnp
rcrl
out
xchg
cli
sti
xchg
sbb
jp
lcall
lods
sub
in
adc
mov
test
insb
inc
std
aaa
sbbb
leave
fcoml
mov
cmpsl
fstpt
mov
mov
mov
or
push
outsl
push
out
data16
in
outsb
mov
adc
aad
xorl
cltd
sub
repnz
rorl
inc
pop
loop
arpl
loopne
cmp
orb
xor
jecxz
adc
out
ret
mov
jb
imul
cmc
je
data16
sub
cmp
inc
pusha
dec
out
gs
pop
inc
push
xchg
add
xor
xlat
out
gs
lea
and
test
mov
lahf
cmc
sub
mov
pop
cs
mov
dec
movsb
xchg
sbb
mov
jb
inc
js
inc
xor
add
jae
jns
and
in
or
scas
out
out
inc
sub
movsl
xchg
negl
and
cmp
lds
lock
dec
xchg
sub
jns
sbb
adc
mov
jecxz
jmp
in
dec
cmp
arpl
pop
xor
sbb
je
imul
push
adc
jmp
xlat
inc
dec
add
lock
or
sbb
jle
cmpsb
pushf
pop
int
sub
js
cli
sti
sbb
sbb
fimuls
mov
mov
xor
lods
in
in
imul
add
push
mov
test
jae
lea
negb
cltd
bt
push
add
fimuls
test
out
adc
cs
jle
outsl
push
icebp
xor
addr16
stos
inc
mov
gs
xlat
cmove
push
rolb
push
ret
add
mov
stos
adc
push
mov
je
xchg
mov
add
jmp
in
lcall
or
dec
dec
or
push
out
xchg
mov
dec
add
add
ficoml
adc
rcrl
xor
adc
inc
sub
lea
and
popa
mov
hlt
fmull
aas
test
into
addr16
fucompp
mov
fsubp
int
push
mov
js
sbb
rolb
sbb
adc
add
scas
mov
mov
lahf
pop
mov
in
pop
stc
sub
mov
addr16
aam
push
pushf
or
rol
das
inc
mov
or
or
dec
aad
push
movsl
or
sub
int
frstor
repz
and
add
out
test
cmpsl
adc
pop
mov
cld
icebp
jno
sbb
adc
fs
hlt
je
jbe
push
xchg
scas
addb
lea
test
jge
mov
dec
cmpl
lods
xchg
xchg
fdivs
jnp
push
mov
pop
and
filds
lock
push
cmp
mov
push
adc
pop
add
push
ret
fwait
call
xor
push
pop
inc
mov
push
pop
cmpsl
divl
push
adc
repz
cmpsb
sahf
popf
mov
pop
jnp
stc
into
sbb
es
popf
pop
add
data16
pushf
mov
bound
fwait
adcb
jecxz
sbbl
push
aad
rorb
and
pop
mov
test
cmpsl
pop
lea
mov
cs
xchg
push
mov
cwtl
push
rolb
or
mov
jle
rolb
into
xchg
test
dec
mov
pushf
jge
xlat
ret
mov
enter
add
lds
fdivrl
inc
xchg
stos
or
cmp
add
cmp
dec
or
add
pushf
jne
pop
mov
and
lret
lcall
insl
mov
jge
vpcmpeqd
dec
dec
mov
das
cmp
push
jmp
push
call
or
mov
jno
cmp
ja
xchg
aaa
in
sbb
lds
shl
inc
xchg
fistpll
ret
and
shll
movsl
xor
lret
outsb
fists
sub
aam
and
mov
xlat
pop
jecxz
int
mov
dec
call
add
sub
or
xchg
stos
sub
loop
xor
in
mov
lahf
add
cli
das
adc
lods
aas
pop
jmp
daa
sbb
loop
and
cmc
mov
add
fld
add
inc
in
sbb
xlat
ds
scas
leave
lahf
push
adc
jbe
and
push
fistps
cmp
test
cld
ss
lock
adc
cmp
push
test
and
movsb
xchg
add
push
mov
in
dec
inc
mov
pop
dec
jecxz
je
mov
jo
jg
push
sbb
inc
or
inc
scas
stos
sub
lods
mov
xchg
cmp
outsb
fcmovne
and
inc
je
and
orb
sbb
jecxz
inc
in
test
enter
cmp
ror
icebp
inc
mov
insb
in
mov
lret
mov
push
into
cmp
in
bound
mov
js
add
int
sahf
rcrl
or
popf
enter
or
mov
popf
cmp
pushf
push
and
adc
clc
push
sbb
ja
scas
adc
repnz
ss
leave
lods
stos
repz
or
sbb
mov
mov
rol
je
outsb
sbb
cli
sub
or
mov
aad
push
jg
in
das
repz
lods
subb
das
pop
lods
xchg
mov
pop
push
aad
mov
ds
mov
lds
hlt
lds
cmpsb
stos
cld
call
pop
aas
jae
sub
fcomps
sub
cmp
sbb
push
pop
xchg
add
push
and
sub
xchg
nop
lock
cmpb
fistps
movsb
pop
ss
cmp
adc
outsl
jbe
lahf
bound
push
repnz
push
push
inc
mov
push
stos
popa
popa
add
lods
test
xor
jg
into
repnz
sub
lea
fwait
mov
mov
popf
lahf
pop
mov
cld
shlb
xchg
xchg
xchg
mov
pop
mov
mov
aaa
cli
popa
mov
cwtl
or
in
fmuls
push
add
icebp
xchg
pusha
sub
movsl
push
lods
pop
jmp
sti
and
mov
jecxz
jle
aaa
bsr
and
lret
idiv
cmp
push
out
rcrb
shll
mov
mov
cmp
sbbb
sarb
fistpl
or
and
dec
adc
js
push
loope
mov
mov
shr
out
aam
mov
jecxz
add
out
mov
iret
or
jge
std
addl
cmc
mov
fcomi
jae
les
mov
push
xchg
dec
inc
mov
xchg
pop
push
adc
in
aas
aam
mov
push
xchg
fnop
pusha
mov
mov
adc
fbld
fsubs
ss
add
arpl
into
lds
jbe
jp
icebp
inc
adc
insl
pop
xchg
or
xor
cmc
data16
ficoms
je
xchg
scas
pusha
fdivl
pop
dec
xor
sar
pop
adc
aam
sti
movsl
popa
xchg
sub
and
cmp
aaa
div
clc
iret
xchg
fadds
xor
outsl
mov
sub
and
sbb
in
daa
add
sbb
dec
mov
fmulp
and
das
sti
sbb
cwtl
arpl
jg
mov
fsubrs
clc
js
lea
enter
dec
adc
loop
rorl
cmp
cmp
add
je
push
out
int3
sub
aam
sti
leave
pop
sbb
jbe
imul
shr
push
hlt
mov
into
cmp
and
cwtl
xchg
mov
or
adc
jmp
xor
pop
loope
push
xchg
sbb
shlb
mov
lea
dec
or
lds
int3
pop
fisttps
aad
pop
jns
sti
mov
cmc
mov
loope
add
leave
lret
mov
dec
jmp
testl
and
sahf
dec
fs
jle
or
push
push
in
andb
mov
sahf
xchg
mov
sub
sbb
and
fidivrl
dec
test
repnz
cmc
jmp
enter
push
xor
shll
sbb
iret
leave
pop
jecxz
mov
lcall
push
cmp
mov
sbb
loopne
jmp
lret
add
int3
add
jb
pop
mov
movsl
mov
cli
cs
pop
add
or
loop
mov
mov
out
push
pop
cmp
jmp
icebp
iret
lahf
sbb
cmp
ss
outsb
dec
adc
xchg
and
adc
mov
popa
ret
mov
stos
lea
fstpt
in
mov
xor
pop
enter
ja
adcl
dec
imul
aam
lods
nop
dec
jne
push
loopne
divl
jge
xor
mov
gs
js
cmpsb
lds
jne
in
aas
dec
call
inc
add
insl
add
sub
dec
lcall
or
lds
jns
fcoms
sub
mov
push
push
sbb
sub
movsb
popf
imul
mov
out
push
aas
jne
mov
pop
inc
loope
ljmp
stos
or
sub
add
inc
scas
and
into
loop
repnz
pop
push
dec
cmp
fdivrl
push
aad
nop
push
cltd
idiv
dec
mov
xchg
sub
cmpsl
jnp
dec
mov
lds
call
in
in
xchg
mov
das
push
into
std
int
xchg
push
test
loop
into
shr
mov
sbb
cmp
mov
sub
sub
std
push
xor
pop
insb
fdivrl
rorl
sub
fstpl
pushl
ds
inc
pusha
xlat
roll
pop
cmp
mov
test
mov
out
jo
jnp
pop
mov
mov
push
fbstp
cmp
rcl
sbb
aad
lret
sbb
dec
lock
es
push
dec
clc
call
out
adc
pusha
and
iret
testl
xor
inc
jecxz
stos
mov
jg
and
sbb
push
insb
popa
scas
sti
xor
jbe
and
popl
and
in
jmp
test
sbb
and
je
or
shll
cmc
mov
jecxz
xchg
dec
lret
iret
stos
jnp
or
add
iret
mov
or
jmp
xchg
cli
aam
scas
mov
pop
das
adc
adc
rcll
cmpsl
mov
jl
ja
xchg
xor
cwtl
xor
popf
push
sbb
mov
pushf
push
push
pop
dec
insb
rcr
dec
pop
jl
sbb
cltd
add
popa
lods
mov
sbbb
out
fsubrs
inc
daa
xor
and
sbb
lret
rcl
or
push
cmp
and
pusha
das
call
ret
gs
mov
sbb
pusha
ret
bound
fbld
add
loope
sub
xor
jg
dec
dec
js
mov
cmp
or
inc
dec
std
dec
ljmp
test
add
pop
movsl
addb
adc
xchg
jecxz
push
sti
aaa
enter
outsl
lahf
pop
cmp
mov
add
adc
pop
adc
stos
and
jl
adc
pusha
ljmp
loop
cmp
ja
push
outsb
pop
daa
sbb
fs
repnz
mov
mov
clc
pop
faddp
inc
cmp
in
repz
sbb
test
mov
loopne
dec
pop
xlat
mov
jg
pop
testb
sub
test
addr16
add
and
scas
addr16
fistps
orb
movsb
pop
pushf
outsl
movl
out
and
xor
mov
and
das
cmp
jae
int3
ret
iret
pop
inc
lret
ljmp
dec
dec
lods
dec
lahf
xchg
sbb
daa
push
imul
sbb
test
out
out
imul
xchg
jl
mov
adcb
stos
test
bound
sub
inc
js
mov
loop
int3
pop
aad
mov
sbb
ret
out
adcb
inc
push
fs
mov
jo
hlt
mov
cmp
into
dec
fsts
into
xchg
pop
jl
cltd
mov
loop
cmp
gs
test
pop
mov
pop
xor
cwtl
repz
test
sub
add
iret
stos
loope
out
cmpsl
es
adc
mov
mov
push
imul
pop
lahf
inc
sub
stc
lock
fstp
clc
mov
clc
cmp
add
fisubrs
nop
sub
jg
dec
xor
rorb
into
xchg
sub
test
inc
fwait
ja
mov
push
scas
roll
insb
xchg
pop
dec
lds
outsl
pop
jecxz
loop
xor
jb
incl
fsubl
mov
cmp
xchg
and
movq
push
cmpl
or
movsb
lods
popf
push
dec
jns
push
cmpsb
jp
sub
pop
add
cmova
push
fisubrl
pop
and
iret
pop
outsl
scas
xchg
ja
int3
xchg
xor
xchg
in
and
cmp
clc
add
mov
sub
mov
xchg
int3
das
jae
mov
add
jmp
fisubrl
in
jg
mov
popa
loope
lret
imul
fistpl
mov
inc
in
orl
mov
ffree
jmp
or
xor
inc
les
mov
sbb
or
lcall
shlb
fsts
cmc
loop
xor
jle
daa
jns
dec
lods
xchg
push
dec
xchg
bound
xor
sbb
sbb
cmpsb
loop
ret
cmp
sub
aam
cmp
cmc
xor
inc
and
mov
push
xchg
inc
movsl
clc
call
jnp
loope
mov
ja
dec
push
dec
inc
adc
inc
shl
fistpll
cltd
lds
xor
cmpsb
mov
xchg
ss
cmpb
nop
add
adc
lcall
adc
inc
out
inc
push
sbb
cs
dec
jns
aad
cvtpi2ps
test
push
add
ret
mov
in
mov
ret
fisttps
adc
inc
mov
out
sub
mov
cltd
aaa
add
inc
jae
pop
lock
xor
lock
xchg
arpl
fdivr
sub
cmp
xchg
dec
out
push
mov
out
sbb
push
adc
push
lds
fdivp
inc
mov
sbb
pop
push
mov
pusha
xchg
dec
loopne
adc
mov
popf
add
addl
mov
mov
xchg
shll
jne
hlt
push
ret
daa
leave
adc
lcall
clc
sbb
hlt
stos
enter
push
bound
mov
dec
cs
mov
adc
push
xor
mov
fsub
outsl
test
mov
dec
mov
mov
pop
das
std
mov
add
mov
push
sub
adc
sarb
imul
adc
mov
scas
jmp
imul
addb
jmp
stos
out
inc
fmuls
movsl
add
dec
push
mov
aas
nop
jl
pusha
or
cmp
cmp
leave
jno
je
out
aad
jo
in
mov
popa
or
js
dec
int3
or
leave
sub
mov
add
jne
bound
jp
call
sbb
and
jbe
ret
push
aam
faddp
xor
out
cmpsl
add
shlb
jg
lods
clc
negl
xor
dec
lret
cli
pop
loope
add
out
loop
lret
mov
jo
imul
add
arpl
mov
jecxz
in
xchg
ss
push
dec
mov
aaa
test
adc
mov
push
ss
scas
loope
add
stos
xchg
es
in
fs
adc
dec
push
add
ss
shll
cltd
imul
mov
mov
jo
dec
xchg
cmp
xor
out
dec
test
pop
rcr
mov
mov
out
or
add
fptan
cmp
push
mov
pop
push
jmp
jo
jbe
jne
in
scas
js
scas
cmp
mov
lock
add
mov
std
lcall
mov
sub
repz
jo
fadds
mull
inc
push
loopne
xchg
jg
imul
rcl
fcmovb
pop
jmp
shr
aad
xchg
or
sbb
xchg
pop
push
std
fs
orb
out
mov
sbbl
mov
sbbb
lds
aaa
and
test
mov
cmp
cmp
cmp
dec
outsb
lret
sbb
test
fdiv
daa
test
stos
shll
jno
push
add
fisttps
xor
sbb
ljmp
cmc
call
imul
fisubs
mov
aaa
test
fsubs
popf
adc
sbb
pop
test
cmp
and
inc
xor
adc
in
push
push
lcall
jp
lea
add
fcompl
sbb
outsl
xchg
cmpsb
lock
ja
js
fsubs
movsb
sbb
fdivl
hlt
sub
xchg
roll
inc
jo
sub
mov
addr16
sub
cmp
add
sbbl
dec
dec
imul
or
jmp
divb
out
jae
fadds
lret
mov
mov
cmp
movsb
lahf
std
lret
sub
movsl
mov
mov
in
jle
test
xchg
mov
sbb
dec
cli
cmpsb
pushf
mov
icebp
lock
cvtpi2ps
cmc
stos
sbb
pusha
jl
out
add
loop
loop
mov
lea
aaa
and
rcr
push
ss
add
lock
sbb
mov
test
cwtl
pop
jae
and
push
into
fs
lds
sub
inc
xor
fstps
mov
in
xchg
shlb
mov
sahf
fistl
cmp
int3
rol
loop
in
adc
or
inc
xchg
dec
mov
add
pusha
add
jge
mov
mov
lods
push
and
sbb
sbb
stc
lds
popa
adc
push
adc
sub
adc
lahf
jge
cmp
adc
repnz
jp
add
sbb
out
ja
xchg
dec
es
orl
cmp
mov
aad
in
jl
nop
and
outsl
iret
cmp
jecxz
iret
enter
rcr
nop
and
lret
sub
pop
popf
mov
push
inc
call
push
or
ds
cmp
adc
std
aam
cmp
dec
fidivs
inc
repz
and
lods
mov
insl
aas
stc
mov
mov
jae
gs
dec
test
mov
test
lea
cmp
xchg
rol
jl
lretw
rcrl
dec
lock
mov
add
pop
imul
and
cmp
inc
pop
sbb
and
push
pop
test
push
test
add
cmpsl
cmpl
in
push
or
ret
mov
add
xor
inc
loop
and
xchg
xor
cmp
rorb
xor
sti
sti
es
inc
and
daa
and
lock
pop
lods
mov
jo
lock
sub
push
cs
bound
rorl
or
mov
sub
testl
lea
mov
dec
pop
mov
mov
push
insl
rep
aaa
fstl
adc
add
call
outsl
adc
sbb
scas
mov
fldenv
andb
mov
xor
int
jne
mov
in
je
mov
mov
cmp
sbb
xchg
or
xchg
pop
mov
xor
out
stos
scas
jp
push
xchg
stc
xor
gs
sbb
loopne
pop
cli
aas
leave
clc
jbe
out
icebp
cmpsl
sub
loope
cmp
insb
sub
es
ja
bound
adc
cmp
xchg
ds
ljmp
jns
lea
imul
cli
imul
push
sbb
pop
adc
lea
xor
mov
test
mov
imul
pop
add
adc
roll
iret
push
sbb
xchg
mov
stc
int3
add
cltd
out
mov
pop
adc
in
sbb
lret
hlt
movsl
popl
mov
jns
pop
bound
mov
add
test
es
pop
xor
push
jnp
fisubl
push
xchg
dec
mov
adc
cmp
push
jle
add
pop
jmp
dec
icebp
arpl
mov
sahf
pop
subl
sti
mov
push
fwait
shlb
cmp
cltd
popf
lea
xlat
and
cmp
adc
add
jb
std
push
mov
sub
xchg
out
xchg
xor
out
xchg
push
jmp
sahf
cmpb
je
jp
mov
loope
loop
mov
scas
xchg
mov
sti
xor
mov
sbb
test
or
xchg
aas
sbb
sub
daa
stc
insl
in
inc
iret
mov
pop
xor
push
arpl
jg
adc
sub
loop
inc
jle
pop
scas
add
in
pushf
repz
cmp
ffreep
mov
push
mov
push
jno
imul
fcmovnb
mov
mov
stc
jae
and
push
call
stc
xchg
push
jno
push
add
out
pop
mov
stc
int3
sub
pop
fiaddl
mov
xor
sbb
fld
in
scas
inc
xlat
js
cmpsl
mov
xchg
insl
mov
movsb
scas
fidivrs
mov
dec
sbb
mov
aaa
mov
mov
jg
adc
in
lea
pop
cmp
data16
push
test
test
in
rorl
sbb
mov
arpl
mov
jne
daa
sub
pop
notl
cmpsb
mov
jp
xchg
inc
jmp
lock
or
or
inc
outsb
into
add
jg
sbb
adc
inc
scas
push
pop
jg
xor
test
pop
adc
mov
mov
add
movsb
ja
and
aas
mov
bswap
lret
or
mov
xchg
cmp
xchg
sub
iret
arpl
outsl
add
mov
and
in
or
repz
and
mov
push
mov
inc
and
or
imul
in
push
xlat
sahf
fildl
pop
xchg
leave
das
aad
inc
in
xchg
mov
mov
sbb
inc
scas
icebp
popa
call
invd
fucomip
pusha
ljmp
and
ret
jnp
jp
leave
imul
loopne
insl
repnz
les
repnz
test
mov
cs
aas
repnz
jnp
in
push
aad
mov
pop
shrb
jl
insl
divl
testb
int
js
cmp
pop
into
sub
mov
pusha
xor
fsubrl
push
mov
jns
adc
popf
jnp
or
fldcw
stos
cmp
jne
sub
arpl
jg
dec
and
ret
dec
sub
loopne
mov
ds
push
ret
icebp
sub
pusha
test
lds
int
stos
and
in
inc
or
or
shl
adc
cmp
jne
and
aaa
jns
shll
fwait
dec
insb
sti
sbb
push
cmc
lds
sub
pusha
loope
into
push
shrl
and
add
aad
push
mov
adc
xchg
in
mov
dec
mov
pop
call
lods
xlat
inc
xchg
out
jp
pop
cmp
cmpsb
pushf
cmpsl
subl
mov
inc
sub
push
add
cmp
scas
cmp
cmpsl
data16
cmp
loope
mov
mov
cmp
jp
mov
push
in
inc
lds
cmpsl
sub
mov
or
movsw
and
push
jle
fldlg2
sbb
adc
jle
loopne
je
ret
int
ja
scas
inc
lret
pop
pop
ljmp
cmp
push
mov
sub
loopne
pop
out
jno
sub
mov
flds
ss
rclb
shll
sub
mov
es
push
ja
xchg
pusha
sbb
jns
jg
add
pop
mov
ljmp
ret
fistpl
sti
subb
fcompl
add
xchg
xchg
out
stos
mov
adc
rorl
int
jnp
scas
adc
dec
je
jb
pop
jl
xor
repnz
pusha
loopne
je
push
in
and
in
mov
std
push
mov
lock
mov
leave
xchg
dec
sub
lret
mov
in
dec
mov
icebp
or
pop
and
loopne
cmp
mov
jl
and
inc
adc
sub
out
adc
cmp
mov
or
push
jo
jo
or
aas
sub
xor
loop
cmp
aam
outsb
stos
mov
movsb
hlt
jmp
jbe
mov
mov
clc
xchg
mov
xor
sbb
ficoms
dec
outsb
jnp
ljmp
int
push
pushf
imul
imul
mov
mov
iret
mov
and
insl
mov
mov
out
mov
cmp
dec
jmp
mov
aaa
cmpsl
jns
int3
cwtl
lahf
pop
xor
jmp
mov
or
pusha
xor
divl
dec
xor
bnd
add
nop
mov
adc
push
cmpsb
xor
stos
aas
sub
and
and
xor
addr16
push
gs
xor
add
and
mov
xchg
sbb
stos
jnp
js
scas
je
cld
push
mov
mov
inc
clc
shl
lcall
jl
mov
jg
out
mov
jmp
xchg
inc
jne
loope
into
cmp
dec
stos
and
xor
inc
lods
xchg
push
mov
dec
or
xchg
aam
and
dec
xchg
sbb
mov
pop
jl
jns
jbe
add
jecxz
orl
arpl
inc
add
iret
push
repnz
add
bound
outsl
pushf
pop
ds
mov
in
mov
ret
jns
cmp
pop
mov
out
scas
or
jae
pop
pusha
int3
sbb
jg
adc
aam
ret
int
sub
mov
ljmp
mov
daa
js
paddusb
dec
andl
daa
movsl
jbe
cmpsl
les
cvtps2pi
out
inc
out
movsb
testl
pop
mov
push
out
std
divl
leave
push
and
push
and
dec
imul
in
cltd
shlb
fbld
sbb
outsb
rorb
cltd
push
lcall
enter
push
or
mov
mov
pop
or
aad
jno
mov
xchg
xchg
loop
inc
sub
xchg
cmp
lahf
pop
in
ret
xchg
add
sbb
dec
and
cmp
aas
fwait
dec
cmp
dec
or
lods
mov
js
inc
out
cmpsl
jo
mov
push
mov
cltd
mov
in
pop
ss
aaa
popf
mov
mov
and
enter
xor
jmp
push
cmp
pop
stc
mov
mov
adc
and
adc
mov
or
ss
add
test
rclb
hlt
push
add
mov
addr16
movsb
pop
sbb
popa
pusha
fisttps
sbb
fidivs
bound
incb
mov
daa
addr16
lret
adc
hlt
xchg
loope
ret
sti
nop
lock
das
cmp
mov
mov
cmp
mov
dec
mov
aaa
cmp
or
or
lret
stos
sbb
sub
or
popf
xchg
or
mov
xor
jns
cmp
out
call
mov
std
jg
shl
fisttpl
lds
sub
vmovd
jge
sbb
mov
movsb
test
xchg
mov
lods
in
sub
xchg
rcrl
into
mov
cwtl
shr
ja
cmp
enter
adc
mov
rol
cmp
dec
cmpsl
adc
jecxz
hlt
les
jmp
or
mov
or
ret
push
sub
sub
test
imul
inc
stc
pop
jbe
lods
in
jnp
cmp
outsb
adc
jg
inc
cld
clc
push
or
adc
fwait
out
mov
cmp
test
faddl
in
mov
gs
jmp
cmp
cltd
outsl
pop
inc
add
mov
pop
je
jo
inc
fisubl
loopne
loop
pop
mov
sbb
push
hlt
dec
pop
or
cmp
movsb
jl
je
out
mov
lret
out
rolb
push
mov
popa
dec
jo
test
into
cmpsb
pop
sub
mov
mov
lea
push
rcll
rcrb
arpl
dec
enter
scas
adc
jae
cli
cmp
jle
sbb
ret
push
mov
aad
sub
rol
mov
leave
fsubs
outsl
fldt
loope
cmc
nop
xchg
movsb
or
sbb
dec
adc
ficoms
jb
push
sub
dec
push
adc
jne
mov
push
sub
aas
xlat
mov
ss
fwait
mov
loope
adc
test
and
in
lock
sub
es
inc
dec
pop
lds
loop
mov
or
notl
jno
sub
jb
dec
repnz
rcrl
pop
cld
push
sbb
mov
scas
mulb
addl
subl
loope
ss
adc
sub
xlat
sbb
or
add
loopne
leave
loopne
iret
cmp
mov
jle
lret
cmp
movsb
dec
cmpsb
push
push
addl
mov
sbb
lods
or
xor
mov
in
fistpll
jno
fsin
inc
or
dec
das
fadds
dec
dec
enter
mov
out
xor
sbb
test
andl
jmp
xchg
mov
je
data16
inc
cmp
fwait
and
mov
out
js
sub
sbb
pop
xchg
add
sub
mov
pop
out
jmp
sbb
mov
dec
sub
or
pop
insl
test
and
pop
mov
repnz
andl
add
andb
inc
push
xor
add
popf
jns
repz
sub
sub
andl
cmp
cli
push
mov
jle
pop
arpl
or
fwait
iret
les
pop
push
pop
pop
inc
in
cmp
das
mov
hlt
pop
mov
popf
sub
lods
xor
pop
cmp
pop
jbe
fisubrs
mov
sahf
dec
jns
cmp
xchg
push
mov
mov
sub
loop
or
enter
ror
mov
add
adc
loope
adc
hlt
xor
jne
lahf
mov
hlt
jg
stos
fisttpll
xor
and
mov
jbe
inc
mov
jae
sbb
and
and
inc
leave
call
loopne
jo
sub
mov
mov
in
inc
mov
mov
ret
add
or
lret
dec
jne
orb
scas
repz
inc
insb
sub
testl
test
dec
adc
inc
lods
in
lret
inc
lds
dec
dec
shl
cltd
xor
fwait
icebp
or
das
movsb
jae
int3
dec
scas
lret
xchg
movsl
aas
mov
fsubs
mov
cld
sbb
pop
pop
mov
push
mov
sbbl
shlb
mov
mov
into
jg
roll
ljmp
sahf
jae
mov
lock
into
pop
mov
movsl
adc
and
mov
aad
mov
aad
loope
imull
sub
cmpsb
add
xor
xlat
mov
cmpsb
dec
mov
xor
adc
dec
in
insb
mov
adc
cmpsl
shl
fists
sarb
push
xchg
sbb
sar
mov
out
negb
arpl
ret
mov
and
fwait
out
fnstenv
mov
int
pop
or
negl
and
sbb
arpl
add
xor
int3
ss
lret
mov
add
xchg
xchg
jl,pn
sub
mov
shl
lea
sub
lret
shlb
cld
aas
js
sub
jae
adc
mov
lret
std
mov
xor
fucomip
and
jae
test
jecxz
sbb
mov
push
sbb
lods
and
mov
pop
xor
and
seto
movsb
loop
inc
es
lock
aas
mov
cmp
mov
insb
mov
or
xor
leave
mov
ss
outsb
mov
fisttpll
test
push
lds
push
adc
sub
imul
out
jle
arpl
pop
pop
jae
pop
icebp
movsl
ja
inc
jg
imull
mov
push
xor
lods
fmuls
popa
sahf
fdivrl
xchg
dec
in
ret
push
clc
jmp
xchg
aaa
ror
cld
jnp,pt
das
fmulp
stos
jecxz
lds
pop
and
lds
fs
cmp
push
inc
insb
jp
jl
lea
jo
mov
add
addr16
pop
std
add
xchg
arpl
lock
je
lea
mov
adc
cmp
fistps
imul
xlat
mov
shrl
adc
dec
push
add
pop
nop
or
insl
cmp
xchg
pop
arpl
sbb
cmpsl
sbb
jb
lahf
insl
sbb
popl
jmp
inc
std
dec
xor
fnstsw
cmpl
test
lds
movb
insb
mov
lcall
and
roll
push
mov
inc
or
push
push
inc
add
mov
adc
cs
inc
mov
fcomps
dec
out
sbb
in
ficomps
sub
aas
mov
mov
xchg
jmp
dec
adc
push
dec
es
adc
sub
push
mov
cmpsl
sub
mov
insl
stc
insl
jbe
cmp
lret
fsubrl
test
out
insl
sbb
popa
enter
push
jo
je
daa
repz
or
scas
fsubl
sbb
jbe
mov
mov
pop
int
pusha
icebp
loop
mov
mov
bound
sub
dec
mov
call
ss
lea
das
adc
push
jbe
mov
lods
pop
test
insb
sub
mov
push
xorb
mov
mov
inc
lret
lds
stc
lods
pop
outsb
push
mov
daa
or
enter
ret
xchg
push
and
aas
iret
jo
push
cs
andl
stos
and
std
inc
not
push
sub
adcl
out
adc
adc
pusha
and
cltd
dec
or
aas
or
cli
mov
jns
pop
in
and
sbb
mov
mov
lock
and
dec
mov
push
xchg
aam
mov
pop
pop
mov
pop
add
cmp
xchg
jns
pop
call
pusha
popa
daa
adc
aam
pop
into
shrb
insb
push
pop
lock
inc
push
or
or
clc
out
testb
ds
push
pop
or
jp
push
dec
jne
mov
rclb
mov
lods
jle
aas
mov
outsb
loope
loopne
fistpll
ljmp
lds
mov
mov
lcall
movsl
sbb
push
adc
lea
sbb
call
or
call
int
xor
sbb
js
and
xchg
or
pop
cmpsb
add
cmpb
jnp
fsubs
sub
call
sub
push
pop
or
std
call
inc
je
jp
push
push
cmpsl
outsl
mov
pop
scas
push
jmp
xor
and
sbb
mov
add
pop
cmc
dec
les
add
popa
mov
jo
mov
mov
lods
stos
lock
jae
xchg
push
mov
inc
lods
pop
aam
imul
jbe
push
jno
dec
lock
subl
lcall
lods
scas
dec
icebp
dec
sub
and
xchg
mov
pop
ss
rorl
out
aam
adcl
sub
sbbb
push
mov
jo
movsb
push
test
enter
nop
fnstsw
sbb
cmpsl
lea
add
and
test
xchg
mov
cmp
inc
cld
mov
bound
in
jmp
hlt
mov
arpl
in
pop
gs
inc
sbb
and
mov
add
and
insb
sbb
jl
mov
cs
xor
dec
rcrl
xchg
push
add
sbb
outsb
aas
pop
mov
inc
push
sub
inc
push
adcl
xor
pusha
gs
inc
popf
cmp
pop
je
rcrl
inc
xchg
xor
xchg
or
cmp
and
mov
in
and
push
int3
les
or
mov
xchg
pusha
push
dec
ret
push
mov
xor
insl
fnstsw
and
cli
test
cmp
jecxz
loope
stos
pop
add
ljmp
add
fiaddl
inc
push
lahf
jge
or
pop
fwait
popf
lret
loope
xchg
pop
in
inc
cltd
adc
in
xor
int
dec
xlat
jb
popa
test
das
orb
test
inc
jbe
sub
stos
arpl
rclb
mov
stos
in
xlat
cs
addb
out
cmp
cli
inc
add
gs
cmpsb
jecxz
inc
jle
and
inc
mov
dec
aaa
add
dec
dec
jne
cmp
adc
subb
lods
xchg
xchg
dec
jae
fidivs
shlb
call
sbb
mov
les
pop
lea
mov
and
or
rcrb
mov
jle
iret
popf
mov
mov
jmp
pop
leave
xchg
and
orl
pushf
je
std
insb
xchg
jbe
jns
dec
mov
sbb
test
push
mov
std
add
sub
data16
clc
and
mov
out
addr16
sbb
xchg
and
xchg
jecxz
testb
pop
sub
mov
pop
pop
rorl
in
push
sub
jecxz
or
dec
mov
xor
push
icebp
out
mov
inc
mov
dec
movsb
ret
or
jb
jno
add
jmp
push
dec
mov
ret
xchg
cmpsb
scas
int
jle
mov
xchg
mov
lock
int3
mov
xchg
clc
push
das
ljmp
dec
pushf
insl
jo
inc
popa
ret
cmp
xor
outsl
jo
xchg
out
sbb
test
or
mov
xchg
mov
pusha
or
mov
cmpsb
mov
push
hlt
xor
cmp
sbb
out
lods
pop
cli
mov
inc
push
xchg
push
pop
xchg
lcall
jae
mov
push
dec
ja
push
mov
int3
subl
in
pop
mov
fmull
lcall
insl
xchg
adc
mov
cwtl
mov
sbb
add
subl
ss
dec
outsb
jg
push
les
imul
outsb
in
add
sub
pop
orl
std
sub
mov
pop
mov
popf
cmp
test
xchg
cwtl
push
stos
aaa
testb
xor
pop
movsb
loopne
repnz
pop
lods
pop
mov
or
dec
ret
cmp
in
mov
push
cltd
lret
mov
pop
arpl
push
inc
fdivrl
pop
lret
cmp
pop
xchg
pop
jge
inc
incl
fcomp
jns
sbb
nop
dec
out
jnp
cli
in
xorb
cmp
sbb
aas
pop
xchg
cld
pop
pop
pop
lock
mov
xchg
mov
ret
mov
rep
xor
adc
xor
xchg
scas
sbb
lods
xchg
rcll
sub
sbb
cwtl
jns
fisttpll
mov
aam
movsl
sbb
pushf
add
xor
out
insl
xlat
pop
lret
ffreep
ds
jge
loop
sub
mov
je
movsb
mov
or
lea
jbe
rol
fstps
mov
lcall
aam
mov
adc
icebp
mov
adc
leave
cld
out
into
addr16
sbb
leave
ret
push
mov
sub
roll
mov
and
scas
push
shll
data16
mov
or
sbb
xor
fisubs
sub
insb
sbb
test
decl
ret
or
jb
or
mov
and
fbstp
lods
sti
div
jne
pop
mov
dec
cld
sub
lds
dec
mov
and
addr16
mov
lret
movsb
sub
jb
popf
aad
aaa
sub
stos
pop
into
int
iret
sbb
push
dec
add
push
xor
loopne
mov
cmp
ljmp
inc
mov
testb
adcb
jmp
out
sar
mov
jl
jl
or
cli
lds
pop
adc
push
stc
sub
push
imul
inc
inc
mov
or
xchg
mov
lret
sbb
or
and
mov
xchg
jb
push
mov
testl
mov
add
mov
inc
out
and
leave
jns
jmp
test
cmp
addr16
imul
stc
das
mov
mov
xor
stc
lods
add
cli
aaa
mov
popa
imul
ret
mov
mov
jmp
inc
mull
js
ss
call
push
xor
inc
adc
jbe
pushf
imul
sahf
rol
inc
int
mov
int
mov
or
lahf
bound
inc
push
loop
shrb
mov
mov
aam
jmp
jnp
and
pop
xchg
inc
adc
add
aad
imull
ss
dec
push
fwait
lods
fstl
aam
xchg
out
shr
pop
test
pop
pop
ret
pop
dec
adc
cmp
sbb
push
cld
mov
stos
xor
fistpl
movsb
es
add
push
dec
cs
mov
adc
or
or
cli
and
fsts
scas
and
xor
addl
mov
insb
sbb
jb
and
mov
into
pop
xchg
sub
loop
sbb
cmpsb
fs
xor
ffree
mov
dec
or
mov
dec
push
cmp
push
mov
out
test
jmp
and
add
sub
imul
ss
jb
pmaxub
cmp
inc
inc
ret
lret
or
cmp
ss
xor
loope,pt
adc
pop
pop
xor
mov
lds
dec
or
and
add
xchg
pop
ret
test
insl
cs
js
cmp
stos
aaa
add
mov
pop
push
mov
sub
sti
repz
and
dec
push
ret
enter
jo
lret
in
xchg
stos
cs
sahf
add
shrb
lcall
les
and
push
lret
add
and
jle
in
and
es
lea
out
xor
ljmp
cld
dec
loope
mov
jl
sub
imul
lret
int3
fistpll
fwait
jb
addr16
sub
add
mov
stos
in
insl
mov
sub
icebp
insb
add
data16
xor
jmp
mov
pop
out
dec
pop
cltd
out
pop
cmp
cld
dec
cld
push
addr16
cwtl
xor
test
and
lock
shr
pop
jge
mov
cmp
pushf
lahf
aad
jg
hlt
inc
in
xchg
mov
fdivs
das
xor
das
insl
adc
repz
mov
mov
push
and
mov
push
sbb
lods
scas
fisttpl
in
and
sub
ljmp
xchg
negl
inc
call
dec
jae
int3
pop
nop
and
or
or
xchg
push
dec
je
lcall
fbstp
pushf
xchg
into
sbb
jmp
addr16
stos
fidivl
les
lcall
mov
mov
rol
push
aam
jae
cmovg
pop
cmp
idiv
out
sbb
jle
nop
push
jg
add
rolb
lds
sahf
repnz
inc
cwtl
aas
mov
icebp
inc
aam
mov
sar
data16
lock
and
es
sbb
in
mov
mov
xor
or
mov
jno
je
negb
dec
pushf
fs
pop
xor
inc
dec
cmp
mov
pop
dec
xor
xor
or
lret
pushf
xor
loop
scas
cmp
sub
adc
push
adc
inc
add
push
mov
lcall
fisttpl
cmp
dec
testl
inc
test
inc
fs
add
in
fmulp
stos
inc
mov
jo,pn
xchg
aas
les
stc
or
jmp
fwait
es
movsb
jae
in
outsl
incb
add
das
out
add
out
and
fwait
nop
enter
push
pop
mov
cmp
leave
xor
add
shrl
pop
insl
sysenter
pop
xor
dec
ljmp
int
nop
sub
idivb
mov
pop
fwait
ljmp
filds
adc
scas
cwtl
jp
cmp
rcrb
lcall
imul
or
xchg
fstps
icebp
and
dec
pop
adc
data16
sbb
gs
es
mov
ret
push
clc
pop
test
dec
mov
outsb
cwtl
push
movzwl
pop
ret
jb
cmp
jecxz
or
push
push
aas
sub
loope
or
lahf
adc
jb
leave
insl
pop
sbb
aas
adc
cld
push
inc
shll
add
push
jae
mov
popf
push
nop
jl
gs
jge
dec
scas
fists
xor
fnstenv
sub
loopne
and
adc
mov
xchg
pop
lea
pop
fsubrl
js
imul
stc
add
mov
mov
filds
insb
push
mov
sbb
dec
cmp
pop
xor
xor
inc
shll
fdivrs
popa
mov
and
sub
mov
out
cmp
cmpsb
jl
xor
mov
lds
jno
jnp
dec
mov
cmp
rcr
outsl
fwait
popa
ds
mov
xor
sahf
arpl
repz
jno
push
in
mov
pop
push
aaa
ret
xor
repnz
movsl
sub
pop
jne
cli
lock
iret
fdivs
cmp
adc
ljmp
outsl
inc
pop
or
outsl
orl
out
xor
jnp
jp
mov
or
outsb
sbb
aam
adcl
or
mov
sbb
out
sbb
adc
addr16
jns
mov
fcoms
lods
mov
cmp
xor
fisubl
inc
push
repz
mov
adc
cs
arpl
mov
daa
jae
adc
push
xchg
xor
sbb
pop
ss
pop
clc
mov
jne
jb
orl
loope
lods
lret
lret
in
les
rcll
push
xchg
les
jb
pop
fdivs
popf
stc
cmp
lcall
xor
insb
stos
xorb
mov
imul
mov
dec
jno
dec
jmp
lret
pop
out
mov
cmp
adc
cmp
imul
jg
dec
xor
rolb
or
jl
sbb
dec
stos
push
fcomps
pop
and
data16
std
add
je
inc
repnz
push
cmp
cmc
sub
rcrl
leave
das
cmp
movsb
fcomps
mov
incl
inc
cmp
mov
test
dec
js
aad
sti
dec
xchg
push
dec
icebp
out
jge
repz
out
xor
sahf
lods
in
xor
sti
lods
push
adc
mov
pop
mov
movsl
loop
test
adc
sbb
lds
and
cli
pop
xor
and
ret
arpl
push
cmp
subl
lcall
aaa
mov
mov
int
jbe
insl
inc
xor
mov
in
es
mov
ja
jne
push
mov
mov
aam
cmp
test
popf
pop
fcompl
aad
mov
dec
aad
pop
mov
test
arpl
adc
shrb
push
mov
push
mov
movsl
enter
mov
mov
fcmovne
aam
cmp
das
call
mov
iret
je
jl
xchg
xor
mov
mov
cmp
notb
icebp
lret
adc
adc
andl
xchg
shlb
jmp
sbb
adc
mov
xchg
dec
add
call
mov
cmpsl
fcmovbe
out
sbb
inc
or
int3
icebp
ret
aaa
scas
out
inc
stos
pop
sti
add
inc
add
or
pushf
or
cmpsb
testl
fistpll
lcall
mov
mov
jl
mov
sbb
outsl
insl
mov
aam
icebp
mov
fldenv
sub
aam
jle
into
nop
fstpt
rclb
xor
das
xor
ljmp
adc
push
mov
pusha
out
sarl
jae
fcoms
push
adc
fsubrl
mov
dec
mov
push
call
add
mov
and
jle
sub
out
mov
nop
repnz
inc
repnz
into
rolb
push
and
dec
mov
adc
jno
and
roll
lea
mov
pop
and
cmp
and
inc
enter
xchg
inc
xchg
jmp
int
add
pop
dec
add
add
sbb
xor
lods
lahf
in
add
add
dec
in
xor
ljmp
or
test
mov
imul
or
add
dec
push
lods
cld
jae
adc
inc
pop
xor
push
ljmp
adc
add
loope
aad
in
add
sbb
test
imull
xchg
repnz
or
aam
test
xchg
mov
mov
fcoms
sub
addw
ret
mov
jbe
and
movsb
lret
ja
cmp
dec
inc
push
mov
ds
les
fmull
mov
push
push
sbbb
outsb
adc
push
inc
dec
adc
mov
daa
sub
dec
mov
pop
push
mov
adc
dec
lret
mov
xchg
push
xchg
xlat
cmp
das
and
jl
icebp
push
popf
mov
sub
jg
dec
das
add
xchg
add
cmp
dec
inc
cmp
jle
jb
loop
cmp
push
jg
outsb
adc
add
gs
cli
lods
stos
frstpm(287
daa
outsl
mov
mov
jl
fs
dec
rorl
mov
iret
jle,pt
inc
jg
adc
roll
test
mov
repz
mov
scas
mov
lds
xchg
sub
xlat
icebp
loope
in
stos
es
or
clc
jo
in
dec
inc
fucom
popf
pop
jmp
mov
adc
sti
jae
mov
mov
enter
cmp
daa
cld
mov
mov
cmc
mov
adc
cmp
fwait
and
ror
push
in
pop
decb
push
xor
clc
lcall
inc
push
sbb
lret
notl
mov
je
ja
aaa
push
and
jno
call
sbb
cmpsl
xor
lret
in
or
stc
sub
mov
dec
push
lds
mov
out
inc
or
lods
dec
and
cwtl
pop
decb
cmpsb
into
jne
pop
cmp
sub
outsl
arpl
fs
insb
popa
imull
aaa
push
jcxz
shrb
xor
movsb
mov
mov
leave
fmulp
inc
pop
aaa
scas
cmp
jno
push
cmp
ret
movsb
cmpsl
cmc
mov
cmp
ss
aam
inc
setne
xchg
adc
adc
das
push
in
stos
cltd
ss
int3
fdivrl
mov
add
orl
movsl
or
stc
shl
cmpsl
mov
mov
lret
es
inc
pop
rcrl
stos
xchg
inc
bound
mov
mov
and
push
dec
imul
loop
clc
aas
outsl
dec
out
xor
adc
sub
sbb
lret
shrl
sbb
lods
fisubrs
pop
popf
and
jo
es
std
pop
int3
adc
jp
jnp
sbb
cwtl
fimull
mov
push
outsb
push
xchg
call
push
inc
sbb
adc
xchg
xorb
jl
and
mov
imul
inc
andl
ret
jmp
xchg
xor
jnp
aaa
cmpsb
jp
subl
nop
stc
sub
shll
xor
add
pop
cld
cmp
nop
mov
pop
ss
mov
mov
jge
jbe
sahf
nop
fsubs
mov
dec
aam
out
in
jl
inc
mov
lea
inc
sbb
out
adc
pop
fs
sub
in
jns
adc
imul
xor
mov
sahf
pusha
ret
ljmp
loop
lahf
imul
inc
or
lahf
cs
adc
sbb
xchg
inc
cmp
mov
or
mov
cmpsl
daa
mov
loope
dec
shrl
addr16
cs
add
mov
call
push
dec
sahf
out
push
xor
imul
dec
dec
fistps
mov
out
and
das
pop
dec
xchg
out
sbb
mov
insl
ret
cmc
push
das
dec
push
push
add
jae
jmp
inc
shrl
out
dec
sub
stos
cmp
popa
jg
ds
mov
cs
or
jno
jbe
add
or
gs
inc
pop
out
xchg
shrl
mov
inc
orl
jmp
lock
out
incb
cwtl
pop
insb
push
mov
mov
mov
xchg
pop
push
or
aam
pop
sbb
popa
adc
js
jmp
xor
jo
adc
mov
add
imul
mov
stc
rcrb
inc
mov
sub
jmp
aam
pop
jle
xor
sub
and
adc
pusha
enter
cmp
sub
xor
cs
idivb
lret
sbb
mov
in
mov
pop
movsl
jmp
push
mov
jge
adc
sbb
call
or
cmpl
mov
add
pop
dec
and
xor
in
or
jo,pn
cmpsl
lods
outsl
out
and
dec
jbe
fisttps
inc
jp
outsb
jbe
cltd
in
jmp
xchg
ror
mov
pop
shlb
inc
ljmp
cmpsb
cmpsl
jmp
in
pop
pop
jbe
fidivrl
or
popf
add
xchg
pop
dec
xchg
icebp
sti
bound
sub
nop
and
sbb
push
enter
jg
ss
push
and
pusha
add
mov
xor
adcl
lcall
out
adc
jp
out
mov
mov
addr16
leave
pop
sub
sub
fidivs
imul
pop
pop
lods
bound
mov
js
jne
shr
sbb
xchg
add
je
dec
loope
mov
push
mov
pop
add
push
inc
scas
push
scas
push
in
jge
xor
push
pop
popf
inc
movsl
jge
ret
andl
fildll
clc
mov
lret
dec
jbe
add
dec
je
push
pusha
dec
stos
add
pop
mov
fdivrs
and
sbb
cmpsb
insb
loope
xchg
xlat
cmp
in
cld
lea
daa
rcl
push
iret
and
mov
mov
rcrl
jg
test
mov
mov
dec
leave
outsb
dec
ja
arpl
int3
mov
jecxz
dec
out
int
xor
mov
mov
in
mov
pop
sbb
inc
adc
cli
pop
inc
xlat
subb
sbb
pusha
lea
lock
mov
sub
jb
iret
hlt
cs
mov
sbb
jge
das
lds
test
int3
imul
hlt
jle
leave
and
ljmp
sub
xor
shrl
sub
shr
mov
cltd
jo
jno
xchg
loope
sahf
mov
jo
and
andl
fisubs
push
sbb
cld
ret
dec
push
aaa
cld
mov
mov
cmp
and
pusha
mov
sub
push
pushf
pop
outsl
in
out
sbb
inc
test
in
xchg
jae
adc
fnstenv
mov
out
mov
in
sbb
icebp
pop
push
jnp
insb
arpl
lods
jmp
das
push
add
shll
push
pop
and
jmp
out
inc
jb
fidivrl
xchg
or
ror
add
cmp
or
mov
bound
ljmp
pop
js
or
cmp
or
test
mov
and
push
icebp
pop
sub
pop
js
jle
mov
jp
ds
and
add
in
in
jg
mov
dec
lcall
popa
xchg
ret
test
xchg
or
inc
pop
mov
sub
mov
ret
cltd
add
pop
add
push
xchg
out
jg
xchg
sub
int
fmul
push
sub
mov
in
repnz
mov
imul
cs
in
adc
and
jo
in
push
jno
repz
es
iret
inc
add
loopne
pop
fldenv
push
dec
fadds
shr
add
imul
and
daa
mov
aad
sbb
adc
ss
fnstenv
xchg
mov
inc
jmp
fldenv
lret
push
add
xchg
inc
adc
sbb
lahf
adc
and
cmp
jbe
pop
in
cmp
js
lcall
dec
dec
cmp
inc
add
stos
inc
add
mov
sub
insb
test
lret
xlat
pop
dec
stos
fistpll
cmp
dec
xchg
adc
sarl
enter
ljmp
mov
dec
imul
sbb
cli
and
cmp
xchg
jg
xor
cltd
mov
jo
jge
sub
mov
cli
cli
testl
add
sbb
fwait
repnz
pop
imul
hlt
cmc
push
inc
adc
cmpsb
cmp
mov
sbb
xor
arpl
add
roll
adc
jbe
sbb
adc
out
scas
mov
xor
enter
mov
xchg
pop
xlat
pop
add
xchg
pusha
or
hlt
popf
mov
add
in
pop
es
adc
loope
cmp
shlb
inc
mov
xchg
dec
xor
jl
iret
pop
mov
mov
aas
pop
dec
cmpsl
int3
pop
out
aad
pop
add
pop
jns
mov
lret
rcll
insl
and
aad
sbb
imul
fcmovu
test
test
outsb
mov
das
cmp
int
sub
mov
popa
xchg
sub
mov
shrl
sbb
push
icebp
sbb
adc
in
inc
outsb
daa
das
orb
jnp
jns
gs
cmpsl
ss
add
sbb
or
enter
arpl
out
ds
inc
push
pop
in
xchg
sub
test
push
into
or
and
mov
and
push
lcall
add
jp
pop
push
cmp
outsb
test
cli
sbb
out
test
loop
and
das
adcl
adc
jmp
mov
test
lods
mov
jmp
fcmovu
jb
push
sbb
out
mov
cmpsb
stos
movsb
insl
jnp
cmp
xchg
popf
fistl
out
xchg
leave
inc
loopne
call
rclb
scas
cld
stos
rol
add
pop
rclb
gs
pop
es
mov
mov
jp
jl
test
in
sahf
and
mov
push
loopne
pop
adc
xchg
mov
fsubrs
int3
pop
mov
mov
enter
ja
dec
cmpsb
cmpsl
in
fstpt
lds
dec
rorl
sahf
mov
outsb
out
pextrw
cmpb
lock
popf
cmpsl
mov
inc
ds
cwtl
sub
adc
aad
xor
decl
sub
sub
notb
and
xlat
xor
jg
in
rcl
lock
fsubr
enter
nop
cld
arpl
nop
cli
lods
mov
inc
push
shr
aaa
or
cltd
mov
mov
ret
pop
imul
lahf
jo
jmp
inc
ss
aad
stos
push
xor
lods
and
sub
xor
gs
popa
lahf
cwtl
push
mov
sbb
or
add
mov
pop
nop
add
cmp
dec
pop
lret
or
dec
sbb
sub
pop
call
test
insb
mov
leave
sarl
ss
adc
or
les
push
sub
lock
repz
pop
fdiv
push
int
ror
adc
lock
adc
pop
dec
ljmp
push
xor
loopne
addl
adc
mov
jle
add
loopne
jg
idivb
cmp
or
rclb
inc
daa
ja
jecxz
stc
inc
loopne
popf
inc
ficompl
and
fidivs
notb
pop
sub
shlb
dec
lret
daa
and
cmpb
inc
nop
popa
js
andl
daa
mov
or
lods
sbb
push
outsb
outsb
sub
sar
ljmp
inc
bound
jbe
add
loope
int3
cmp
mov
decl
jne
dec
popa
loop
mov
push
bound
add
cmp
loope
cmp
jo
dec
cld
test
dec
addr16
int
adc
dec
sub
aad
aaa
in
mov
adc
xchg
cmp
xor
inc
and
aad
repnz
sub
out
std
mov
fs
enter
les
jns
add
fistpll
mov
xchg
push
mov
xchg
xchg
inc
jne
xor
cmp
mov
push
xchg
jnp,pn
cltd
pop
sbb
jl
mov
mov
les
mov
add
jo
cmp
mov
gs
negl
pop
ret
jmp
xor
in
out
pop
mov
cltd
inc
push
movb
ljmp
pusha
pop
add
test
jle
aad
xchg
pop
dec
push
ret
push
aad
push
xor
mov
xchg
xor
fnsave
cmp
or
cmp
jo
inc
out
jbe
pop
mov
cmp
pop
cmc
mov
lods
loope
sub
iret
cld
sub
mov
fdivl
xchg
js
hlt
orl
or
inc
cmp
leave
stos
mov
add
out
jb
movsl
xlat
nop
fwait
inc
xor
orb
jnp
movsb
pop
adc
sahf
dec
sbb
ss
sub
movsl
sarl
cmp
mov
inc
add
inc
loope
ret
add
dec
andb
pop
iret
sub
fldenv
out
mov
int3
fwait
cli
pusha
imul
mov
add
cmc
add
mov
push
or
icebp
push
into
sub
mov
and
pop
jg
inc
jg
pop
xor
fdivs
ret
out
jmp
loop
mov
dec
mov
inc
shlb
xchg
repnz
arpl
repz
pop
cmp
jne
adc
inc
dec
mov
bound
mov
cmp
ds
push
arpl
or
mov
jge
xchg
or
jne
in
inc
testb
dec
out
pop
push
les
sbb
jg
in
add
or
popa
out
cmpsb
push
jns
push
ljmp
subl
lods
sub
mov
mov
loopne
pop
sbb
lea
xchg
out
imul
jmp
pusha
push
outsl
dec
orl
sbb
xchg
mov
mov
inc
mov
push
pop
aam
or
out
loopne
fmulp
test
orb
dec
push
rorb
fadds
xchg
jb
out
nop
in
push
cmpb
in
fnsave
push
imul
leave
inc
and
dec
mov
gs
sbb
sub
push
jns
push
xchg
out
leave
add
icebp
imul
mov
xor
icebp
lock
pop
sbb
mov
iret
jb
rdtsc
repz
mull
xlat
push
add
dec
xchg
inc
inc
push
cmp
jo
cmp
inc
ficompl
jo
mov
fwait
cld
addb
pop
sti
adc
push
je
or
mov
out
mov
fdivr
cmp
pop
and
pop
xlat
jl
sbb
mov
pushl
pop
icebp
cmpl
jg
push
imul
pop
push
dec
fisubrs
dec
loope
cmp
and
inc
ds
pop
adc
arpl
stc
out
adc
mov
cmpl
in
clc
jae
cs
push
add
cmpsb
arpl
fcmovbe
test
push
adc
lahf
mov
sbb
pusha
out
in
pop
sub
lds
sbb
in
pop
sbbl
xor
sub
adc
mov
xchg
push
fidivl
sbb
in
cmpsb
jge
push
test
cmp
cmp
repnz
aad
mov
fstpl
cmp
cmp
mov
jle
andb
xchg
xchg
mov
jge
cmpsb
cli
sub
or
mov
fwait
ret
cltd
add
in
faddp
stos
ja
mov
cwtl
push
test
cltd
repnz
mov
jne
ss
and
mov
pushf
test
orl
fldl
gs
push
sbb
and
out
fildl
xchg
lods
pop
cli
mov
cld
pop
adc
sahf
adc
les
arpl
xchg
mov
lds
push
shll
pop
pop
lds
insl
sub
inc
jae
jecxz
jl
cvtps2pi
mov
movsl
mov
jg
decb
ss
jecxz
test
mul
and
mov
mov
mov
jl
jne
imul
out
rolb
dec
aas
sahf
dec
mov
xchg
mov
das
popa
lcall
dec
jnp
mov
ljmp
orl
outsl
icebp
xchg
xor
dec
lods
addb
in
fdivl
jp
mov
imul
push
or
ret
push
mov
pop
sbb
pop
xchg
xchg
pop
jg
pop
xor
cmp
rcrb
jmp
sti
inc
clc
mov
ja
add
sahf
xor
imul
pop
xchg
sub
xchg
in
and
mov
andl
pushf
cmp
or
inc
mov
adc
lcall
inc
add
daa
mov
push
addb
lahf
cmpsb
inc
jmp
mov
hlt
push
xor
cltd
add
sub
sub
xor
leave
xor
es
inc
or
or
push
test
cmp
jae
xlat
push
cmpsl
push
out
outsl
out
adc
sbb
cmp
xchg
cmpsb
in
leave
mov
cmp
add
cltd
mov
pop
orl
adc
fld
push
fs
jle
ja
idivb
sub
cmp
decb
adc
jp
ljmp
push
mov
xorb
les
sbb
rcrl
jo
dec
mov
adc
stos
lock
clc
jg
add
js
push
or
pop
xor
out
jmp
sahf
or
lret
daa
xchg
ljmp
dec
or
insl
ljmp
inc
add
lahf
cmp
cmp
fninit
mov
shl
xor
shrd
jl
xor
add
sub
inc
leave
jmp
addr16
int
jb
pusha
mov
enter
popl
and
mov
not
jl
jmp
outsb
es
int3
outsl
fneni(8087
lret
mull
mov
jno
test
pushf
pop
int
xchg
std
cmc
aam
sete
adc
std
cmp
mov
jne
bound
push
mov
jle
adc
push
cmc
mov
popf
and
push
loope
push
rorl
mov
es
mov
scas
pop
xchg
ss
pop
sub
test
inc
pop
push
cmp
xorb
mov
adc
fisubs
push
inc
jl
int3
lret
mov
lret
inc
push
pushf
std
mov
stos
lret
or
fwait
pop
shrl
xchg
imul
mov
cmpsl
pop
push
or
test
lret
sbb
ret
pusha
mov
cmp
dec
xor
ret
cli
mov
lds
in
adc
push
or
xor
dec
pop
scas
jb
mov
push
inc
in
sbb
cli
cmp
aas
pop
xorl
push
cmc
sbb
rcrl
or
adc
push
pusha
jg
nop
mov
push
cwtl
pop
popa
mov
cwtl
xor
incl
xchg
dec
jo
dec
bound
stc
popf
ds
and
adc
cmp
add
push
xchg
in
leave
outsb
icebp
or
mov
pop
xchg
in
jns
pop
cmp
aad
cli
mov
dec
mov
sub
xchg
jns,pn
pop
xchg
xchg
dec
or
cmpsl
inc
cld
adc
or
aas
cmp
inc
sbb
lret
insb
sbb
mov
shrl
mov
int
repnz
lods
and
iret
adc
icebp
filds
inc
or
cmc
pop
push
adc
xor
xchg
test
mov
push
mov
in
out
xchg
push
push
aaa
inc
push
sbbl
pop
aam
jmp
stc
insl
mov
lea
cltd
into
loopne
jp
xchg
mov
jbe
xchg
dec
fisttpl
mov
add
dec
je
mov
inc
mov
or
xchg
mov
add
jl
imul
in
push
rcll
and
popf
lea
shl
sub
cmp
push
fsubs
pushfw
mov
jne
push
sub
add
pop
xor
shlb
or
lret
and
pmullw
jbe
fisttpll
push
jno
sahf
add
mov
and
and
push
add
enter
xchg
mov
xchg
cmpsl
aaa
pop
test
into
dec
out
hlt
adcl
mov
inc
xchg
js
in
cltd
test
test
adc
into
fidivrl
rclb
aad
xchg
int3
pop
inc
and
and
call
icebp
loope
je
or
jne
ret
mov
lahf
mov
pop
dec
jo
mull
fs
lods
in
aam
aad
push
clc
hlt
popf
jge
aas
dec
add
addr16
xchg
mov
pop
cmp
stos
pop
jl
test
xlat
sbb
ret
add
pop
fstpt
jno
test
mov
mov
dec
ficompl
lahf
movsl
pop
xor
movsl
mov
mov
ret
sbb
inc
mov
or
aas
mov
imulb
pop
inc
mov
ret
ret
adc
push
stos
and
lods
and
mov
imul
jl
mov
enter
cmpsl
stc
adc
je
lea
pcmpeqb
lea
imul
cmpsb
push
add
ss
jg
sarb
or
sar
ss
xchg
dec
into
pop
fisubrl
adc
adc
iret
xchg
xchg
inc
or
cmp
pop
and
pop
notb
adc
fmul
or
pop
in
fs
je
sub
pop
xchg
adc
fimull
and
outsb
mov
inc
das
filds
aad
lret
sar
sub
push
jae
outsl
cs
jmp
xor
or
dec
ret
push
lock
pop
inc
adc
sub
test
jecxz
jge
jle
outsb
or
adc
loop
stos
sbb
arpl
push
or
inc
inc
fucompp
gs
push
mov
adc
cmp
adc
jo
inc
jae
mov
push
mov
outsl
sub
scas
mov
sub
insl
scas
out
dec
lahf
push
xchg
add
and
mov
stc
enter
or
pop
push
test
jmp
lods
xchg
ss
adc
and
cwtl
dec
push
gs
adc
fcmovnb
pop
dec
bound
fcomps
daa
iret
mov
inc
add
int3
pusha
sub
dec
pop
sub
xlat
adc
sbb
cmpsl
push
or
add
inc
jp
and
and
sub
movsb
rclb
mov
lods
push
jnp
pop
push
mov
pop
push
push
test
subb
xchg
test
sbb
jo
mov
ja
xchg
and
xor
jae
and
push
mov
fisubrs
jge
xor
pop
call
loopne
mov
test
dec
inc
loope
les
pop
je
push
xor
ret
movb
sbb
mov
inc
pop
aam
out
and
push
push
idivb
in
pushf
push
or
testb
cld
int3
pop
psrad
into
push
dec
out
and
add
std
adc
inc
jmp
pop
jno
lds
popa
fwait
cmpsl
stos
mov
sub
cltd
push
outsb
adc
adcl
cli
jle
inc
in
xor
xchg
in
lret
push
mov
mov
jo
sti
inc
push
cmp
fbstp
sub
pop
lods
scas
int3
sub
jb
repz
mov
cmpsl
repnz
dec
inc
mov
mov
xchg
cmp
mov
insb
roll
pop
lcall
shlb
test
mov
adc
nop
pop
hlt
dec
loopne
pushf
cltd
and
int
bound
test
imul
add
nop
cmpsb
sub
lea
mov
cli
mov
push
mov
clc
sbb
jge
and
mov
sti
add
shl
in
push
xchg
or
xchg
das
outsl
stc
jmp
ror
sbb
adc
jns
rcrb
jno
or
movl
movsb
jno
jmp
xchg
jo
out
lret
adc
pusha
push
mov
push
inc
js,pn
pop
cmp
movsb
cli
fimull
xchg
mov
xchg
mov
rolb
dec
push
xchg
movsl
inc
cmp
cmp
loop
or
sbb
repnz
pop
mov
stc
into
jno
pop
in
stos
adc
dec
cmp
and
jbe
pop
xchg
shl
jmp
xchg
xchg
xor
add
lret
pop
push
out
xchg
xchg
pop
hlt
and
add
dec
or
out
inc
mov
lret
fcmovne
mov
mov
add
clc
test
push
test
pushf
mov
hlt
xor
sarb
jp
inc
mov
insl
pusha
mov
lahf
mov
mov
adc
mov
sub
sub
adc
pcmpeqw
xchg
inc
xchg
mov
mov
daa
push
dec
sub
xor
pop
push
stc
jmp
cmp
xchg
push
add
sbb
dec
insb
and
inc
sti
sbb
lods
jb
lds
movsl
outsl
add
pop
jns
popf
cwtl
mov
fstl
and
in
hlt
aaa
xor
fadds
bound
aam
scas
or
test
or
mov
cwtl
or
fs
bound
push
xchg
test
ret
pop
jp
int
aad
movsb
fwait
insb
pusha
insl
inc
inc
mov
in
nop
lods
add
lods
clc
xor
sub
inc
mov
arpl
insb
negb
dec
inc
loopne
lods
fwait
add
xor
or
cld
xlat
iret
pusha
sbb
into
dec
sbb
mov
xchg
imul
sub
adc
or
add
xchg
adc
or
push
jno
dec
sbb
inc
ss
and
and
or
es
rclb
add
cmpsb
mov
repz
lret
dec
xor
out
test
fiadds
jmp
cmc
adcl
test
cli
out
sbb
loope
inc
movsl
xor
xchg
in
pop
mov
daa
in
add
das
mov
gs
sbb
xor
fiadds
into
mov
jecxz
sbb
paddsb
lods
loope
xor
aaa
mov
inc
lods
mov
dec
loop
pop
scas
sarl
int3
pop
out
cmp
daa
jb
add
mov
sub
xchg
call
cmp
ljmp
mov
push
scas
jns
mov
shr
sbb
mov
mov
lret
xchg
add
mov
lock
pop
addr16
outsb
int3
mov
cmp
fsubl
sub
sbb
lea
imul
mov
int3
clc
xor
stos
arpl
bound
ss
xchg
sti
mov
pushf
mov
cmp
test
stc
jo
sarl
dec
insl
mov
loope
outsb
negb
mov
pop
jp
out
cwtl
push
out
sarb
loopne
fildll
inc
push
xchg
push
call
nop
jnp
inc
fs
mov
inc
mov
sub
and
mov
dec
fwait
jecxz
jge
push
xor
orl
mov
insb
sbb
push
dec
push
xchg
cltd
sbb
inc
out
arpl
jg
mov
add
sbb
daa
pop
call
lock
xor
dec
mov
mov
mov
mov
xor
pop
inc
xor
leave
outsl
pop
sarb
sub
popa
popa
xchg
outsb
push
dec
xchg
pushf
push
push
jp
in
pop
clc
and
xor
repnz
add
pop
cli
les
pop
icebp
inc
hlt
ret
bound
cmpsl
push
xor
frstor
fsubp
lods
sbb
in
je
leave
stos
sbb
cmp
sub
add
jl
daa
mov
inc
out
test
xchg
das
dec
xor
adc
xlat
out
mov
sbb
out
mov
pop
cmpsb
es
outsl
test
jo
notl
sbb
bound
pop
and
inc
cmp
addl
gs
pop
or
bound
jl
cmp
dec
xchg
fildl
jbe
xchg
adc
push
inc
fidivl
jbe
in
outsb
cmpsl
imul
pop
inc
out
pop
lods
xchg
push
lods
pop
iret
fstpl
cld
push
push
jl
fists
inc
pop
xor
push
outsl
dec
and
dec
mov
insb
loop
pusha
rcrb
xchg
xchg
xchg
inc
push
ljmp
push
es
rorl
sub
cwtl
push
cwtl
lahf
cmp
xchg
sbb
lret
jno
mov
test
sti
scas
fwait
push
gs
inc
jnp
xchg
xchg
icebp
xor
adc
sub
push
mov
mov
test
dec
pop
lahf
push
flds
daa
aad
hlt
fs
aad
cmpsb
adc
sub
scas
xchg
aaa
clc
adc
mov
insl
cmp
add
mov
wbinvd
pushf
inc
call
repnz
iret
push
xor
into
adc
int
push
cmpsl
add
je
or
mov
push
hlt
pop
xchg
add
outsb
dec
fwait
push
bound
pop
sbb
xchg
arpl
pop
loop
mov
aam
mov
jae
jl
xchg
adc
push
and
pusha
push
push
in
rorb
cmp
ror
push
out
out
jmp
rclb
lret
jae
lods
adc
push
fsubl
mov
inc
push
test
add
and
call
xchg
and
xchg
dec
push
daa
and
sub
cmp
or
out
lcall
jbe
loop
jae
sub
add
xchg
stc
pop
jle
scas
icebp
ja
adc
sbb
cmp
nop
lock
mov
sub
mov
je
jmp
mov
push
mov
int3
ss
pop
or
fimull
fneni(8087
jle
adc
cmp
pop
xor
ss
push
pop
fisttpl
sbb
or
mov
loop
test
and
or
fcmovb
sbb
out
mov
add
pop
test
loop
xor
mov
cmp
addr16
push
iret
loopne
jl
loop
mov
inc
sub
testl
xor
sbb
xchg
in
dec
jmp
dec
sbb
aam
sbb
lcall
test
and
in
jbe
fimull
jo
daa
push
aad
jnp
popf
mov
mov
int3
hlt
push
movsl
cmp
pop
mov
push
cmp
in
ret
mov
leave
daa
inc
sti
inc
adc
outsb
arpl
and
sbb
adc
or
fildll
fsub
mov
inc
pop
or
lods
xor
add
xor
je
cs
jae
outsb
and
sbb
sub
cmp
ljmp
xchg
inc
mov
mov
gs
cmp
xchg
int
out
cmp
add
lock
inc
inc
mov
leave
push
stos
jmp
dec
stos
sbb
push
or
jo
push
rorl
popa
or
or
jecxz
inc
push
sti
adc
cmp
push
or
mov
fcompl
scas
pop
shlb
adc
mov
xchg
sub
xchg
test
leave
into
mov
sahf
jne
pop
mov
icebp
aas
movsb
std
xchg
jae
int3
int3
mov
pop
jp
xchg
ret
cld
and
xchg
loopne
jmp
cmp
mov
loope
stos
into
sub
inc
int
ss
leave
sub
in
loop
or
mov
std
out
rorb
hlt
fwait
adc
xchg
call
dec
push
cmp
jmp
shrb
xchg
in
inc
inc
xchg
dec
arpl
jnp
cmp
leave
adc
xor
adc
mov
ret
aaa
aas
inc
sbb
and
inc
fnstsw
orb
js,pt
dec
cld
inc
sub
shll
outsb
dec
popf
clc
inc
xor
fbstp
mov
repnz
into
stos
mov
rorb
push
mov
ret
sub
dec
or
sbb
cwtl
sub
ljmp
jle
xchg
cmp
ds
add
loope
sub
mov
lock
sub
cmp
pushf
mov
sub
mov
jg
das
arpl
bound
adc
popa
shrb
push
adc
aam
test
cmpsl
xor
popa
mov
test
push
or
mov
xchg
pop
xchg
mov
mov
arpl
stc
dec
mov
jae
mov
and
jge
mov
bound
xchg
cmpsb
test
xchg
xchg
add
and
sbb
stos
pop
popa
jecxz
jo
jecxz
mov
je
cs
orb
movsl
je
dec
jno
or
test
lcall
ss
iret
shr
dec
jmp
cld
pop
out
gs
or
jg
mov
jmp
cwtl
pop
xchg
ret
cmpsl
pop
sbb
aad
inc
fcoml
shll
adc
test
push
pushf
adc
loope
sub
cmp
pop
test
dec
fcompl
popf
cmpsl
in
push
jg
xor
aam
int
push
mov
adc
enter
dec
mov
dec
sarl
jae
sub
mov
pop
fldt
dec
xchg
outsb
mov
lock
mov
jmp
in
js
push
push
movsl
or
fmuls
in
xor
daa
pop
addl
cmc
or
xor
mov
roll
mov
leave
cwtl
test
sub
inc
mov
fucom
adc
mov
cwtl
xchg
addb
add
and
in
int
gs
sbb
mov
fwait
pop
sbb
loopne
pop
jne
lcall
mov
fistpl
mov
sbb
cmp
out
adc
mov
adc
cld
fidivs
mov
fildl
mov
pop
pop
pusha
je
test
add
shr
cmp
pop
lahf
jbe
mov
cwtl
ret
hlt
insl
aas
std
out
int3
xchg
cli
push
jae
mov
repz
mov
add
repnz
mov
sbb
sbb
cmp
pop
jge
andb
scas
xchg
or
xor
test
sbb
lds
jle
adcl
outsb
ficoml
js
jmp
aas
sbb
stos
mov
xor
add
pop
outsl
jne
inc
mov
xchg
dec
ja
int
fimuls
movsb
mov
repz
das
xchg
or
scas
pop
es
xor
inc
fisubl
sbb
shlb
xor
adc
std
dec
mov
pushf
popf
push
fiadds
loopne
jg
pop
jmp
add
xchg
data16
sub
mov
push
int3
insl
sub
mov
mov
sbb
push
mov
mov
xchg
subl
mov
dec
inc
jbe
sar
inc
lods
mov
add
xchg
scas
bound
shlb
mov
jnp
es
sbb
cwtl
xor
xor
inc
mov
gs
sbb
std
iret
aam
adc
inc
adc
push
js
and
xchg
pop
rcll
call
xchg
imul
or
jmp
pusha
jne
push
mov
inc
iret
mov
stos
ror
stos
iret
or
clc
xor
inc
pop
inc
jno
jno
daa
sbb
jnp
shll
cld
xchg
lods
sub
lock
xchg
jle
call
loop
and
inc
pop
mov
push
lret
dec
in
sbb
pop
fwait
mov
or
leave
cmp
lahf
es
inc
jle
mov
sub
xchg
aad
and
dec
addr16
xchg
enter
push
mov
pusha
inc
inc
add
adc
loopne
arpl
stc
xchg
shll
adc
push
fisttpl
or
int3
js
fildll
inc
movsl
mov
jno
out
sub
fnsave
xchg
lret
mov
or
pop
out
mov
mov
ret
mov
jge
dec
xor
mov
mov
xchg
test
xchg
inc
mov
add
sbb
fcmovb
lcall
dec
adc
in
or
movsb
je
lahf
adc
cld
popa
push
rol
and
dec
pop
jno
mov
fnstsw
aas
mov
dec
and
std
jp
scas
xor
sbb
pop
mov
movsl
lea
mov
mov
lods
rclb
pop
add
arpl
mov
mov
cmp
repnz
lcall
jecxz
cmp
mov
test
adc
mov
add
inc
hlt
xor
pop
inc
push
lock
pop
andb
inc
lcall
lock
fcomi
aas
xlat
add
sub
add
mov
aaa
hlt
or
inc
pushf
stos
mov
rolb
mov
rclb
sub
and
push
and
sbb
add
mov
sar
lret
cmp
fld
fisttpll
push
int3
and
sbbb
push
std
inc
push
sub
push
lcall
inc
sbb
dec
hlt
jbe
dec
out
pusha
jns
adc
bound
add
es
inc
fisttpll
mov
lock
jecxz
and
lea
movsb
orb
sub
clc
lret
jae
sub
ja
sub
jo
rcrl
test
mov
xchg
inc
nop
imul
out
inc
into
in
and
inc
shr
mov
cmp
stos
dec
insl
call
pop
mov
nop
fmull
pop
pop
rorb
pushl
cmp
push
repz
das
loope
rcrl
outsb
xchg
addl
xchg
lcall
out
mov
adc
jg
mull
shlb
outsl
cli
es
inc
sbb
push
shl
loopne
push
cmc
js
adc
mov
push
lds
push
mov
add
xor
dec
push
sti
pushf
aaa
xchg
aaa
cli
call
stos
mull
mov
int
mov
test
add
jne
add
divb
push
mov
rcrl
inc
jle
hlt
insl
sub
out
mov
inc
adc
fbstp
push
pop
pop
jae
mov
bound
popf
ds
mov
fidivs
jecxz
sbb
sbbl
stos
cmp
repnz
fwait
add
xchg
xor
test
test
xchg
sarl
pop
repz
lds
or
lahf
xchg
fstl
adc
movsl
mov
psubsb
aas
frstor
pop
lret
mov
shll
imul
or
leave
and
add
in
aad
jp
sbb
mov
jbe
sbb
cmp
loope
inc
movsb
into
out
mov
pop
mov
mov
imul
adc
mov
mov
fistl
mov
sbb
jb
add
das
mov
xor
pop
mov
or
sub
cld
mov
xlat
or
add
mov
pop
pop
jecxz
xor
arpl
mov
cwtl
stc
mov
in
cmc
dec
mov
dec
rcll
stc
xchg
and
aam
scas
fs
out
ret
and
stc
iret
sbb
lahf
inc
xlat
sub
xchg
push
dec
push
jne
ljmp
or
popf
xor
adc
dec
push
sub
mov
dec
fs
mov
cmp
fcomps
imul
or
mov
mov
sti
leave
xor
lock
xor
cmc
daa
cmpsl
negl
jae
sbb
pusha
inc
movb
ret
xor
and
or
add
call
popa
repz
int3
mov
add
and
jge
repz
in
outsl
gs
bound
or
jo
push
jmp
cld
cmp
mov
pop
mov
push
call
clc
and
out
cmp
push
add
lcall
cmp
inc
pop
test
gs
cli
jge,pt
dec
and
int3
dec
addr16
or
mov
jnp
icebp
or
shll
fwait
mov
faddl
imul
mov
sbb
mov
out
dec
xor
insb
divb
fisubrl
sub
adc
movsb
mov
or
scas
scas
mov
lds
ret
dec
fnsave
push
stc
add
pop
pushf
or
ja
and
and
data16
iret
dec
mov
xchg
std
mov
lret
jne
andl
inc
loopne
ficompl
pop
jns
rcr
call
roll
bound
repnz
xchg
cmpb
cmpsb
pop
jo
in
clc
mov
cmpsl
loop
lahf
dec
adc
jecxz
sub
subl
lock
dec
and
cli
and
jle
stc
mov
sbb
pop
sub
sub
inc
jle
sub
cli
in
les
fiadds
ss
cmp
sbbl
cwtl
aas
mov
push
stos
jb
mov
sarb
fwait
mov
mov
or
addr16
cmp
inc
loop
mov
push
push
pop
pop
insb
data16
subb
and
pop
mov
loop
bound
gs
roll
sub
xchg
mov
stos
mov
xor
jbe
loop
aaa
jnp
stos
adc
fdivrl
mov
sbb
addr16
sbb
sub
or
sub
or
icebp
inc
pop
fdivrl
adc
inc
push
xchg
pop
lret
mov
jecxz,pn
jo
mov
fists
push
leave
scas
sub
inc
mov
jno
and
lods
inc
sbb
out
test
fldl
call
jnp
stos
imul
or
lcall
xchg
mov
aaa
stos
xor
adc
inc
ret
stc
push
pop
js
or
mov
test
adc
outsb
jg
xchg
imul
jp
dec
pop
nop
cmp
sbb
stos
nop
or
fwait
mov
inc
xor
cmove
add
mov
or
shl
ficoml
into
mov
ficoms
in
pop
ss
insb
xchg
add
mov
lock
lret
clc
or
stc
pusha
daa
andb
add
push
dec
rcr
ljmp
fldt
pop
jae
pop
lods
stos
push
movhps
mov
add
jnp
int3
inc
push
fwait
test
mov
scas
sub
imul
dec
mov
inc
aaa
imul
enter
daa
js
xchg
sti
mov
loopne
sub
arpl
jns
enter
jnp
sti
and
insb
sbb
or
mov
sub
ja
and
jmp
bound
loopne
dec
scas
test
inc
popa
mov
inc
sub
inc
sub
adc
nop
mov
push
add
out
adc
repnz
mov
jl
sbb
mov
in
dec
mov
inc
jle
jl
pop
insl
out
loop
in
cltd
or
mov
insl
cld
test
pop
mov
add
dec
lcall
addr16
inc
cmpl
cwtl
cs
cld
push
mov
push
mov
pop
fs
aaa
cmp
lock
inc
lret
inc
dec
dec
push
sbb
cmp
fadds
in
mov
pop
out
cmp
adc
fsts
xor
add
jne
xor
popa
ror
mov
inc
sar
popa
scas
clc
in
popa
scas
arpl
xor
and
idiv
xor
and
mov
fldcw
wrmsr
int
pop
and
leave
lret
test
lods
mov
dec
daa
lods
sbb
adc
push
lret
pop
adc
and
pop
pusha
jp
lahf
adc
xchg
stos
sub
xchg
fwait
int
ret
dec
frstor
cwtl
ljmp
popa
lock
sti
push
sahf
lods
movsb
cs
xor
fisubl
aad
stc
rcrb
dec
into
aad
cmp
add
mov
jno
xor
cwtl
movsb
dec
in
and
das
pop
aaa
in
mov
fldenv
jb
loopne
aam
adc
mov
adc
sub
shlb
pop
inc
and
in
xchg
ret
fs
sbb
fcomp
xlat
in
xchg
inc
sbb
xor
in
ret
mov
push
shl
dec
pop
jg
cmp
cmp
xchg
daa
cld
loopne
push
jl
push
out
push
sub
mov
mov
and
sti
out
std
aad
sbb
enter
xchg
inc
fcompl
call
mov
dec
lds
ficoms
mov
xchg
dec
cmpl
xchg
jo
lahf
adc
clc
or
js
leave
rcrl
or
aam
add
xorl
mov
in
adc
ja
mov
mov
fisttps
fisubs
adc
xlat
xchg
push
or
repz
lods
jo
sbb
cwtl
mov
decl
dec
jmp
mov
and
aad
rolb
insl
rclb
mov
inc
sbb
mov
js
arpl
sub
mov
repnz
enter
insb
inc
cs
cmp
sbb
mov
mov
mov
ja
in
icebp
popf
push
inc
pop
outsb
data16
mov
lods
add
scas
push
mov
mov
mov
scas
clc
jle
rolb
orb
adc
lea
or
fsubr
push
add
xor
movsb
daa
push
xchg
cmp
jmp
push
sub
insb
mov
add
aam
jbe
xor
fisttpll
rolb
inc
subb
inc
xor
rcrb
jno
pop
mov
cmpsb
clc
sub
push
inc
inc
or
sbb
mov
jns
sub
in
sarl
test
stc
insl
push
adc
push
push
xor
add
sti
mov
dec
jno
leave
pop
adc
cs
js
aam
mov
xor
lret
push
dec
add
sti
xor
icebp
mov
loope
fdivr
xchg
xchg
loopne
fldl
sbb
bound
jg
icebp
inc
pop
xchg
andb
cmp
xor
les
outsb
mov
xchg
pop
pushw
jp
inc
ss
fstl
bnd
scas
cmp
insb
mov
cltd
mov
mov
sbb
jns
sbb
or
push
insl
and
jl
repnz
hlt
leave
cs
xor
cmp
adc
ret
test
sbb
stos
aam
pop
ja
lret
lea
lock
inc
xchg
shr
push
lea
inc
or
mov
dec
push
mov
fdivs
mov
mov
pop
push
mov
push
fucomi
fsubl
ret
daa
mov
ret
jb
les
jmp
vpunpckldq
push
addr16
xor
dec
mov
xor
mov
imul
les
dec
add
push
sbb
cmp
sub
sub
or
xchg
push
hlt
leave
std
mov
aad
stos
xchg
mov
jnp
stc
ret
loopne
xchg
add
mov
or
push
dec
pushf
pop
ret
pusha
je
sub
loopne
negl
push
jb
cli
cmp
fimull
cmpsl
jbe
pop
or
xchg
test
pop
adc
imul
mov
ret
lea
in
or
and
cld
movsl
cmp
dec
dec
jg
adc
scas
xchg
fcompp
cmc
pop
add
jnp
and
cmp
enter
enter
and
stos
dec
mov
adc
push
fsubs
push
dec
dec
xorb
mov
pop
xchg
mov
icebp
add
in
imul
imul
popa
or
fsub
xor
mov
mov
insb
xor
jmp
pusha
xchg
xchg
mov
add
jnp
and
inc
jp
or
pushf
jecxz
inc
mov
mov
fs
sti
js
cld
in
inc
scas
out
lods
popl
push
les
lods
and
loopne
mov
rcr
ret
pop
jne
cltd
cmp
mov
push
imul
jb
mov
movl
fwait
dec
dec
sti
addb
xor
shrb
leave
add
xchg
int
stos
iret
xor
pop
aam
ss
adc
cmc
cltd
add
or
xor
testl
out
or
cli
in
jge
aam
mov
jge
divl
sbb
pop
inc
dec
push
shl
dec
cmp
dec
cli
bound
in
mov
ret
int3
mov
xchg
jp
and
mov
orl
movsl
and
in
push
icebp
cmc
pop
movsb
mov
std
daa
add
cmpsl
or
dec
push
mov
cs
push
std
ja
sbb
popf
ret
add
cmp
leave
sub
pushf
mov
jb
jo
mov
xor
std
gs
cmp
lret
es
xchg
pushf
dec
sahf
mov
cmpsb
in
fstps
cmp
repnz
fcoms
ret
stc
jmp
push
ror
and
jns
fwait
repz
inc
sub
mov
pop
je
mov
push
insb
sbb
dec
dec
xchg
outsl
mov
fs
addl
sbb
inc
pop
inc
lock
cmc
sbb
push
jne
bound
mov
cmp
inc
push
push
mov
hlt
cmp
leave
test
add
mov
lods
daa
inc
lods
pusha
sbb
inc
test
lcall
jecxz
cld
mov
arpl
sbb
mov
dec
lock
pop
scas
loop
scas
jge
pop
iret
das
faddl
ljmp
es
nop
addr16
test
xchg
pop
fcompl
fidivl
xchg
dec
mov
cmp
stos
jb
inc
aam
mov
dec
int3
hlt
mov
inc
adc
xchg
inc
sbb
punpckhbw
fisubrl
dec
dec
test
mov
int3
daa
push
push
ret
xor
adc
adc
addr16
jecxz
xchg
aaa
rorl
lods
mov
aas
fadd
ja
push
xchg
ljmp
pop
dec
inc
mov
and
pop
mov
enter
les
scas
dec
movsb
or
subl
mov
dec
lods
or
aam
fistpll
mov
inc
sub
insl
jmp
dec
movsl
or
call
push
dec
add
fldcw
sti
das
jmp
js
sahf
fcmove
outsl
out
dec
mov
cmp
jp
sti
je
das
mov
inc
cmpl
sub
pop
add
popa
jle
ror
pop
cwtl
mov
pop
std
xor
mov
out
sbb
fisttpll
xor
jl
scas
add
int
in
mov
leave
jne
add
pop
fldcw
data16
xor
outsl
jb
and
inc
cmovo
stos
mov
imul
inc
mov
pop
das
addr16
push
ret
inc
lods
add
cltd
sub
push
cwtl
mov
inc
mov
xor
jge
sbb
and
or
pop
sahf
mov
cmp
sbb
scas
mov
pop
movsl
fsub
shrb
mov
mov
sub
leave
push
adc
daa
sbb
pop
pop
lock
aad
scas
inc
and
cmpsl
sbb
push
add
sbb
cltd
out
pop
das
popf
xchg
imul
test
jns
gs
cmp
out
roll
mov
pop
xchg
loopne
mov
shrl
mov
sahf
push
xor
pushf
mov
jle
gs
loop
xchg
sar
xorl
icebp
xor
cmp
dec
loop
adc
orb
lret
jle
inc
sbb
sbb
mov
pop
push
mov
daa
sbb
adc
loopne
ja
sbb
xchg
sub
adc
xor
jnp
xor
int
or
sahf
repz
mov
inc
loop
lods
push
cmp
mov
mov
mov
xchg
inc
lahf
jnp
mov
pop
sub
xchg
add
mov
gs
dec
mov
xchg
insl
xchg
push
mov
or
lds
je
data16
cmc
cmp
and
push
cltd
mov
cmpsl
mov
and
loop
jp
aam
lods
outsl
cmp
movsl
lds
mov
cmp
inc
leave
xor
clc
dec
cmp
pop
jns
mov
stos
mov
cltd
and
int3
out
fldenv
std
cmp
mov
xchg
sbb
dec
add
ret
gs
dec
or
pop
sbb
push
dec
push
ret
stc
mov
stos
jno
fmull
decl
lods
mov
jno
mov
cmp
xchg
jbe
mov
gs
in
pop
sbb
inc
jmp
lods
add
movsl
in
pop
cli
adc
ja
or
cmc
mov
test
or
cmp
or
out
and
leave
lret
loope
call
push
jecxz
dec
jl
inc
sub
or
sub
gs
adc
adc
inc
mov
adc
mov
shll
mov
xor
sbb
push
mov
xchg
test
sub
xor
xchg
fisttps
add
mov
mov
push
mov
cli
mov
push
push
jo
mov
xor
aaa
cld
imul
stos
test
sub
out
add
inc
mov
cli
add
or
cmp
scas
imull
imul
dec
test
jae
add
jno
adc
addr16
mov
cli
fildl
outsl
pop
arpl
addr16
fstl
or
loop
xchg
ret
test
in
jbe
popa
shr
loope
les
mov
mov
and
inc
adc
mov
call
sbb
xor
das
cmp
in
lret
stos
pop
push
popf
daa
ja
enter
pcmpeqd
or
sbb
pop
mov
cld
outsb
sub
dec
adc
sbb
fiadds
aas
cmp
push
daa
jg
pop
add
addr16
pop
mov
mov
fnstcw
or
xchg
jecxz
adc
mov
aaa
mov
addr16
or
imul
fnsave
cmp
push
lcall
out
jo
jo
mov
sbb
sbb
sahf
bound
inc
aaa
les
js
ds
je
xorb
cmc
fmul
push
dec
out
shll
lahf
cmpsl
lcall
ljmp
dec
into
cmp
repnz
mov
test
jecxz
jle
shl
mov
inc
mov
mov
int3
stos
cs
jp
add
mov
sbb
lds
out
xchg
push
scas
pop
cmp
dec
jp
sbb
cwtl
popf
lret
fildl
or
dec
test
scas
pop
lds
adc
mov
out
jl
fwait
into
movsb
and
imul
push
mov
jnp
or
es
pop
adc
bound
mov
out
pop
and
push
dec
or
pop
pop
push
add
jge
mov
mov
add
jg
fnstcw
mov
lea
adc
outsb
and
rcr
xor
dec
xlat
mov
jne
fs
mov
add
aad
cmpsl
jns
xchg
mov
jo
xor
data16
and
lahf
or
xchg
cmp
shlb
inc
or
pop
stos
imul
rol
test
movsb
std
bound
clc
jmp
cltd
pop
dec
out
lret
cmp
rorb
mov
sbb
addr16
xchg
sub
outsb
test
or
adc
sti
mov
ret
rolb
fnsave
out
mov
xor
xor
test
lds
xchg
sbb
fstpt
mov
pop
enter
mov
into
inc
insl
xchg
mov
pusha
and
mov
std
sbb
push
cld
mov
push
out
pusha
neg
out
iret
cmp
ljmp
and
inc
jg
cmpb
lahf
push
inc
aam
jp
testb
sub
fdivr
insl
imul
andb
push
push
inc
or
into
sub
vunpcklps
inc
mov
push
mov
xor
cli
popa
fidivrs
test
dec
mov
loop
or
sub
mov
ja
inc
xchg
hlt
dec
pop
adc
push
dec
out
xorl
les
repz
fs
aam
and
cmp
fisttpll
jb
jns
xchg
pop
cld
xchg
dec
pop
mov
out
mov
xlat
pop
dec
mov
adc
dec
scas
and
mov
pop
mov
dec
scas
pop
sbb
sub
cli
into
aam
int3
mov
jae
and
pop
adc
dec
pop
fidivrs
mov
loopne
lock
jp
inc
inc
mov
sbb
mov
push
pop
aaa
loop
loop
cli
rcll
pop
sbb
and
jo
ss
push
sbb
cltd
bound
mov
jb
inc
xchg
shrb
jnp
testb
mov
xchg
adc
pop
or
jo
adc
orb
lea
sub
and
sbb
sbbl
dec
fisubrl
sbb
push
push
into
pusha
out
outsl
add
sub
sub
dec
movsb
inc
dec
dec
andl
mov
mov
mov
jmp
adc
push
faddl
push
push
push
mov
pop
push
ja
push
pop
pusha
push
lods
mov
xchg
xchg
inc
into
cltd
ret
lret
mov
in
xchg
jmp
pop
mov
inc
push
movsb
sbb
sbb
sub
mov
mov
adc
add
or
xchg
in
in
ja
cmp
sti
mov
mov
xor
mov
mov
xor
jnp
leave
xchg
xchg
and
mov
pop
or
in
test
jg
xchg
inc
pop
push
or
mov
inc
dec
sub
repnz
push
jge
fdivrs
mov
dec
mov
test
jecxz
outsl
xor
pushw
mov
pop
fcomps
mov
imul
add
icebp
xor
adc
push
push
das
sbb
enter
insb
mov
inc
mov
cmc
xor
shlb
inc
cmp
sbb
outsl
std
daa
dec
inc
ret
loop
in
add
cwtl
cmp
imulb
fnstenv
fsubs
adc
adc
cmp
std
push
dec
hlt
movsl
and
rorl
jecxz
sbb
sub
iret
or
mov
fs
push
iret
xor
mov
sti
inc
push
inc
xor
jmp
xchg
xchg
insb
les
jl
jmp
mov
inc
xchg
mov
cmp
lret
lret
fidivl
jecxz
adc
push
add
pop
fistpll
lret
fldcw
cmpsb
or
sarl
into
ss
mov
out
push
je
jecxz
icebp
mov
push
call
and
pop
mov
pop
test
inc
adc
and
out
push
int
mov
cwtl
insl
push
jnp
adc
jae
jmp
das
in
cli
pop
je
mov
push
xchg
pop
add
mov
xchg
pop
mov
cwtl
sti
push
push
mov
dec
jno
out
insl
nop
loope
in
loope
arpl
test
outsl
clc
add
mov
mov
inc
mov
das
test
jle
sbb
scas
cs
int3
xchg
and
insb
stos
aam
icebp
push
into
dec
adc
movsb
mov
inc
repnz
notl
mov
and
cmpsl
cwtl
push
hlt
inc
xlat
lods
mov
cwtl
iret
push
xchg
dec
in
sarl
sbb
jp
andl
fcoms
xchg
pop
sbb
push
mov
out
fstps
inc
jl
ficompl
ljmp
adc
test
cmpsl
jmp
lds
stc
jle
cwtl
bound
or
adc
dec
das
pop
and
jecxz
cmp
add
push
sub
or
gs
fstpt
mov
mov
xchg
pop
test
push
lcall
mov
test
nop
push
fstpl
int3
jmp
scas
fs
sbb
pop
adc
pop
mov
add
iret
in
repnz
pop
shl
fbld
mov
mov
loopne
xchg
inc
loope
inc
xchg
inc
outsl
movsl
sbb
ret
sbb
fildll
rcl
inc
cmp
ljmp
cmp
scas
sub
ret
call
inc
sub
nop
test
adc
dec
outsb
idivb
clc
jmp
leave
jge
sub
aas
sub
cmp
push
mov
cmc
inc
in
jb
sarl
insl
push
aas
popa
pushf
hlt
push
sbb
xor
mov
and
pusha
rolb
cmpsb
push
enter
mov
and
push
lods
mov
mov
out
mov
test
int3
testb
stos
stc
jbe
jnp
jle
or
subb
scas
ja
jns
pusha
clc
jle
push
bnd
inc
sti
sbb
cmp
sbb
clc
call
mov
loope
add
push
lea
out
adc
jo
shll
ds
in
inc
in
cmp
cmpb
test
ds
add
adc
sub
sbb
mov
in
test
sbb
fisttpll
ret
pushf
pushf
mov
xchg
mov
pop
scas
out
jmp
cmp
xor
test
cmp
in
bound
jge
imul
hlt
fmul
test
lods
or
fstl
rcrb
call
add
cmc
add
adc
stos
xchg
daa
mov
leave
aad
mov
push
push
nop
xlat
divb
fnstenv
jle
xorl
xor
loopne
shlb
int3
inc
xor
mov
or
pop
mov
aaa
in
mulb
out
mov
test
fmulp
inc
mov
insb
pop
xchg
scas
push
inc
inc
ret
in
sub
pop
push
inc
inc
ds
xor
mov
cmp
pop
notl
push
mov
ja
inc
jl
jmp
gs
sub
xor
xor
fwait
dec
stos
adc
notb
jl
iret
fs
mov
test
iret
mov
mov
notl
mulb
xor
jno
int3
dec
setle
shll
cs
aaa
pop
adc
es
cmpb
sahf
or
xchg
sti
push
flds
pop
mov
jns
push
sub
xchg
push
adc
pop
insl
or
mov
or
push
inc
or
scas
pusha
mov
fwait
dec
add
xor
or
push
mov
enter
push
in
xor
push
addr16
test
out
out
mov
and
jnp
into
scas
test
xchg
pop
in
leave
int3
outsb
fwait
mov
lahf
ss
iret
out
cmp
inc
adc
iret
pop
push
xchg
test
mov
and
dec
int
xor
lods
xchg
fst
jnp
movsl
dec
push
add
mov
sar
in
xchg
insb
mov
cmp
jl
push
fwait
push
lods
rcl
ds
aaa
add
mov
add
xchg
push
cmp
in
pop
and
mov
ret
adcl
stos
and
dec
push
adc
insl
leave
std
lahf
into
jns
add
sbbl
mov
insl
push
adc
icebp
adc
inc
loope
mov
mov
cli
aaa
mov
out
sbb
bound
pop
dec
xor
cmp
fdivl
clc
sub
aam
and
push
mov
and
mov
outsb
arpl
jl
jg
ret
adc
lds
or
mov
sbbb
shll
push
jb
sub
test
or
and
cmp
jge
dec
aas
pop
inc
mov
outsl
mov
dec
push
insb
mov
xchg
mov
sub
dec
in
inc
mov
xchg
arpl
and
jp
dec
lahf
xchg
sub
addl
das
test
xchg
pop
imul
and
lret
mov
bound
daa
cmp
push
jp
icebp
int3
cmp
jg
jmp
lea
fcmovne
cmp
outsl
or
lods
sbb
daa
fstps
scas
aad
scas
popl
adc
sahf
cmpsb
sarb
arpl
pop
mov
xchg
pop
pop
ja
into
frstor
scas
data16
filds
js
push
add
fcomps
call
inc
or
mov
dec
rcrl
mov
mov
popa
mov
fistl
in
outsl
movsb
mov
push
add
push
jno
sbb
and
lret
test
mov
ljmp
sbb
scas
push
hlt
cmp
cmpsb
loope
mov
in
or
xchg
addr16
cmpsl
xchg
add
push
lds
insb
or
out
outsb
mov
pop
mov
or
mov
pop
testb
pop
jmp
xchg
push
xor
jecxz
in
xor
mov
out
xor
addl
mov
inc
cmp
xlat
xor
sub
and
in
xchg
add
es
pop
hlt
fstp
inc
xchg
jbe
roll
in
gs
xchg
mov
push
inc
pop
jge
jge
dec
dec
lret
movsl
jmp
hlt
pop
xchg
lock
and
jl
mov
and
mov
pusha
lcall
int
jg
add
mov
lods
pusha
mov
mov
shlb
loope
mov
inc
ret
imul
pop
mov
mov
mov
mov
fwait
push
sub
clc
mov
fdivrs
xor
cld
xchg
push
sbb
mov
ljmp
jbe
movsb
add
pop
stos
stos
or
pop
repnz
hlt
xorb
sub
mov
fldcw
sti
xchg
pop
enter
es
xor
jge
xchg
pop
in
loop
test
rol
sbb
pop
xchg
mov
stos
fcoms
lret
je
bound
rolb
jns
loop
cmp
fsubl
test
cmp
inc
xchg
inc
dec
shll
ret
test
lret
clc
sub
fnsave
push
add
sub
or
push
popa
pop
fisubrl
mov
fildl
pop
or
xchg
inc
repnz
jp
jne
add
sub
dec
jg
mov
xchg
mov
inc
mov
int3
aam
push
fadds
lods
repz
inc
fdivrs
mov
hlt
sbb
flds
xchg
cli
lret
repnz
fisttps
ss
mov
xor
fimuls
cmp
fimull
lock
sti
mov
aad
or
out
ss
aad
add
pop
test
or
decl
xchg
jl
dec
pop
fwait
in
aam
pop
pop
xlat
mov
xchg
cwtl
ss
popf
clc
ud0
rcrb
mov
or
xor
call
mov
mov
lahf
pop
or
mov
mov
into
popf
cmp
iret
loope
sbb
mov
mov
or
mov
pop
add
cmc
lock
int
add
jge
pop
cld
jne
fistl
adc
insb
into
and
push
dec
imul
xor
shrb
adc
or
pushf
loope
jae
inc
jne
cmpsl
sub
stos
xchg
imul
das
imul
movsb
sbbl
pop
imul
inc
in
or
idivl
repnz
mov
imull
add
xor
cmp
cmp
sbb
sub
shl
rcrb
jno
ret
adc
jnp
dec
stc
lock
sarb
cmp
int3
and
and
cmp
or
dec
ds
push
leave
cmpl
jge
mov
lock
mov
jno
icebp
gs
mov
fidivs
cmp
test
fldenv
rcrl
sbb
outsl
fmull
daa
in
jmp
stos
mov
jg
lret
test
adc
loopne,pn
push
jb
mull
dec
es
movsb
mov
cld
inc
cld
dec
insl
mov
lods
cmpsl
test
push
fwait
xor
jp
rcrl
mov
and
cld
addr16
inc
cltd
push
iret
outsb
cmp
nop
fisubl
sub
in
and
adc
mov
and
loopne
push
test
xchg
push
xor
lds
jmp
jle
xor
jae
iret
imul
sbb
lahf
xchg
adc
inc
and
imul
dec
xchg
data16
pop
fildl
shlb
and
jle
dec
and
test
shrl
push
xchg
lret
sub
dec
xor
mov
mov
or
mov
lds
inc
icebp
xchg
sub
or
pop
les
add
addb
add
test
sti
sbb
mov
dec
push
scas
sbb
mov
das
xlat
mov
xor
por
cmp
daa
lcall
dec
pushf
test
mov
xor
add
adcb
movl
pop
sub
call
jecxz
add
outsl
std
push
xchg
mov
sub
js
xor
in
add
inc
je
imulb
mul
out
cmp
add
dec
in
xor
push
fmull
test
pop
xchg
hlt
aaa
inc
dec
lods
dec
std
cmp
sub
push
loope
cmp
ret
inc
aaa
bound
and
sub
ja
cld
mov
mov
add
pop
mov
iret
push
scas
adc
cwtl
mov
sub
scas
adc
and
push
test
imul
push
dec
or
in
shrb
pusha
mov
aaa
in
add
std
loopne
fprem
inc
and
sbb
inc
sbb
loope
xchg
fsts
mov
fmul
push
insb
test
mov
shlb
lods
sub
pop
and
leave
movsb
loope
dec
iret
push
icebp
leave
loop
aaa
inc
jns
dec
rolb
test
dec
mov
loop
sub
fsubrl
pop
out
mov
lcall
sbb
bsr
popa
loop
pop
lods
mov
inc
pop
pop
mov
sbb
mov
idivb
das
loope
dec
aam
pop
shll
mov
cmp
sti
fcoml
lahf
inc
jg
jecxz
jbe
mov
adc
cmp
cmp
fadds
sahf
cmpsb
bound
push
mov
push
jno
mov
sbb
jmp
pop
sbb
das
test
js
call
mov
loopne
inc
filds
punpcklbw
and
dec
nop
xor
dec
mov
jbe
cltd
add
mov
jo
mov
mov
stos
pushf
es
xchg
inc
icebp
push
jno
ret
in
ret
mov
pop
mov
test
cmp
out
sbbl
scas
fdivrp
loopne
out
imul
fcom
add
and
cltd
or
or
inc
dec
jae
mov
movsb
mov
ret
dec
or
rcl
sbb
xor
push
cld
xlat
cltd
jp
ljmp
mov
sub
xchg
scas
and
jecxz
leave
jnp
std
sub
and
xchg
sub
stc
subl
mov
enter
fdiv
hlt
das
dec
mov
or
pop
inc
imul
pop
jl
lcall
sub
stos
dec
inc
jmp
hlt
dec
lea
jne
fsubrl
add
mov
icebp
insl
xor
int3
push
inc
mov
sbb
jb
mov
xchg
sub
push
inc
sub
mov
xlat
mov
jo
scas
ret
push
xchg
ljmp
sbb
lret
addr16
pop
mov
jmp
dec
in
test
fnstenv
sub
sub
sbb
xor
mov
sub
xor
out
movsb
push
mov
jl
mov
add
push
sbb
dec
loopew
in
aaa
or
fnsave
jle
xchg
dec
add
andb
shll
leave
push
stc
xor
xor
mov
sti
add
mov
inc
sbb
and
sbb
lods
xchg
test
push
cltd
push
mov
in
test
scas
xor
pop
fdivr
in
xor
cli
imulb
inc
in
in
sub
cmpsb
jg
xor
adc
test
popf
test
outsl
xchg
adc
xor
insl
cmpxchg
cmp
fsubl
sarb
dec
les
testl
cli
negl
shl
add
xchg
push
mov
stos
push
inc
andb
mov
xchg
pop
xchg
roll
mov
push
inc
es
pop
and
or
or
push
pop
test
pop
push
fwait
inc
adc
and
xchg
enter
addr16
cmp
addl
push
hlt
imul
dec
jbe
pushf
test
loopne
outsb
aad
icebp
fs
test
rcrb
inc
testb
xchg
lahf
stos
mov
in
fldt
push
push
int
jge
sub
paddd
insb
cs
add
mov
out
inc
dec
clc
jno
xchg
dec
lahf
xor
sti
in
stos
mov
and
dec
decl
ret
loopne
push
push
test
cmp
daa
push
iret
mov
out
mov
cmp
daa
lret
sub
arpl
inc
sbb
popa
xor
cmpsl
frstor
and
addr16
clc
fs
push
loopne
pop
sahf
mov
mov
dec
sbb
fnstenv
outsl
cmp
fadds
ret
in
inc
fwait
ret
mov
into
dec
push
mov
int3
loope
jo
enter
decb
ja
mov
xchg
pusha
iret
sub
and
mov
xchg
adc
in
mov
test
lret
stos
bound
jae
aad
clc
cmc
pop
imull
jle
and
ficomps
xchg
pop
aad
mov
fists
mov
jmp
mov
sub
xor
jecxz
push
repz
jl
lahf
imul
lahf
mov
dec
mov
xor
xchg
insl
ss
sub
push
or
mov
push
push
or
fs
pop
jae
push
pop
std
push
push
xor
sub
jg
fsubr
adc
push
pusha
sbb
ret
fdivl
jmp
into
cmp
adc
test
outsl
xor
decb
pop
adc
jge
stos
inc
adc
adc
jb
mov
fidivrl
and
or
adc
sarl
cmc
gs
std
iret
lods
jo
add
dec
sbb
and
std
cld
movsb
jle
push
js
popf
in
mov
mov
jl
add
mov
rcrb
dec
xor
pop
xchg
dec
test
iret
adc
cbtw
in
xor
xchg
lcall
arpl
sahf
mov
aas
cmp
lea
bound
aas
fwait
leave
ja
shlb
orl
cmp
sub
cltd
xor
mov
insl
xorl
dec
sbb
outsl
mov
inc
popa
dec
aaa
jmp
lods
decl
jo
or
mov
xchg
jecxz
and
gs
dec
xchg
add
in
in
inc
sbb
loope
fcompl
adc
and
xor
jg
test
jmp
sbb
in
dec
add
jnp
into
js
loop
sbb
push
subb
jg
jo
push
int
add
insb
pushf
lea
mov
mov
xor
pop
imul
jmp
mov
mov
shll
cs
ss
pop
jnp
mov
xchg
inc
cmpsl
in
xor
dec
mov
xor
add
push
push
jo
fildl
sub
imul
sub
dec
and
je
add
jne
stos
out
mov
cmp
addb
xchg
pop
push
push
mov
xor
pop
add
imul
int3
jl
loopne
push
outsb
xor
inc
pushf
stc
dec
iret
js
cltd
pop
cmp
insl
xor
dec
sbb
xchg
sbb
and
xchg
jns
popa
aam
repz
xchg
pop
inc
jnp
push
mov
fs
and
jge
mov
and
inc
mov
stos
and
sbb
in
sbbl
add
or
sub
sub
push
push
sub
jb
dec
outsl
mov
jnp
cltd
addr16
pop
pop
and
push
dec
mov
incl
xchg
out
and
push
xor
out
scas
repnz
stos
and
xor
call
test
mov
xchg
and
mov
pop
cmpsb
mov
adc
rclb
mov
movsb
and
mov
add
ss
lods
rclb
loop
lods
scas
xchg
nop
xorb
inc
pop
add
xor
pop
dec
jmp
sbb
icebp
cld
and
fdivrs
push
lcall
cmpsl
pop
and
sarl
mov
cwtl
aas
dec
push
jne
cld
insb
outsl
das
adc
inc
jl
cmpsb
dec
sub
pop
inc
aad
mov
adc
cs
sarl
sar
repnz
cmp
movsl
fmull
mov
push
mov
jg
push
adcl
sti
pop
xchg
push
mov
jb
test
xchg
adc
sarb
les
mov
pop
sbb
lea
shll
fwait
test
mov
jmp
mov
test
repz
mov
adc
mov
shll
jl
jnp
jns
mov
loopne
das
jle
imul
addr16
fbld
fisubrl
mov
mov
push
in
aad
popf
les
int
sahf
scas
push
loope
out
test
mov
outsl
or
pop
in
jns
insb
pop
aas
sbb
popf
adc
shll
sub
into
mov
mov
jae
push
jae
push
dec
and
xchg
leave
jno
test
repnz
ret
mov
and
jae
aam
mov
shrl
inc
push
pop
pop
xor
dec
push
rol
push
iret
mov
lods
or
lods
cmp
push
shrb
jp
sar
push
mov
inc
loope
int
sbb
jae
push
mov
dec
fimuls
insb
push
inc
in
pop
mov
xor
popf
ja
cmp
mov
and
mov
xchg
dec
pusha
lods
jae
or
or
xchg
mov
and
add
sbb
dec
xchg
cli
shll
icebp
imull
sbb
or
cmc
pushf
pop
mov
xchg
sub
dec
mov
fmull
sbb
fs
andb
and
pop
leave
call
stc
mov
insb
bound
roll
nop
mov
sbb
mov
jno
and
fnstsw
gs
add
add
push
into
cmp
std
jmp
fsubl
xor
sahf
adcl
lret
jne
push
lahf
push
ret
pop
movsl
xchg
into
push
iret
leave
jle
mov
ss
repz
out
into
pop
inc
cmp
iret
je
dec
pushf
lock
ret
or
pop
dec
lret
aad
insb
lret
pop
outsl
xchg
cmp
and
xchg
outsb
movsl
xchg
das
xor
cld
fisttps
dec
xchg
cmp
repnz
mov
sbb
inc
xchg
xchg
inc
jb
int3
push
push
push
aam
mov
in
outsb
cmp
stc
or
into
dec
stos
mov
pcmpeqw
imul
lret
lds
rorb
ret
in
xchg
or
add
hlt
cmpsb
and
mov
ja
lret
adc
pop
jb
push
push
adc
cltd
std
fldcw
addr16
out
jg
inc
push
inc
in
pushf
sahf
pop
gs
jnp
adc
push
movsb
sub
xchg
ret
jae
or
psubw
mov
sti
test
imul
outsl
fwait
aad
jl
jg
punpckhbw
cmp
rcr
jl
cmp
fidivs
mov
cmpsb
mov
inc
xor
lretw
stos
adc
jecxz
mov
dec
push
adc
add
xor
nop
push
outsl
loopne
mov
es
sbbl
cmp
outsb
lock
clc
sub
leave
in
xor
xchg
outsb
cmp
add
mov
int3
and
outsb
js
clc
jecxz
fidivrs
rorb
dec
mov
xchg
outsl
mov
faddl
mov
fs
das
ret
adc
jnp
aad
lea
lret
add
movsl
sub
dec
cld
dec
mov
nop
sbbl
mov
or
or
xchg
or
ja
int3
aam
fwait
mov
cwtl
test
ds
cli
sbb
push
or
dec
jne
jecxz
loopne
in
xchg
out
xchg
in
xchg
xor
das
dec
adc
scas
test
pop
inc
mov
out
faddl
fs
or
stos
ljmp
faddp
xlat
ds
mov
shl
push
ds
ret
cmp
push
out
jb
jae
aas
add
mov
sti
jnp
fimull
shrb
inc
rclb
ljmp
lret
lcall
stos
inc
inc
or
mov
jae
cmp
cld
xchg
cmp
ja
pop
pushf
cld
jae
pushf
xor
mov
lret
dec
int3
je
mov
pop
add
aam
arpl
test
js
xchg
lea
and
das
or
pushl
xor
popf
pop
or
test
cs
stos
shrb
rclb
es
add
xchg
jmp
sbb
xchg
outsb
int3
mov
jbe
aaa
rcrl
xor
xchg
out
mov
mov
stos
xchg
aaa
push
inc
jbe
pop
mov
fisubs
mov
scas
call
or
int3
sbb
pushf
adc
data16
lods
push
out
test
lods
sti
cmp
movsb
imul
nop
inc
xchg
mov
or
dec
dec
xchg
mov
mov
xor
arpl
mov
jne
dec
ret
dec
ret
insb
or
jl
jnp
pop
in
fidivs
pop
fimuls
inc
or
mov
jmp
into
and
test
pop
rcrl
fsubrl
jbe
xchg
data16
inc
aam
cmpsb
popa
jae
pop
out
out
ret
cmp
and
jl
jno
into
mov
fwait
push
aaa
adc
out
jbe
out
gs
inc
cs
cmp
sti
xchg
jle
jge
data16
loope
mov
mov
lds
in
test
lods
inc
xor
in
and
ds
pop
or
lret
test
scas
inc
daa
aad
inc
jp
les
lods
scas
outsl
dec
dec
sbb
ljmp
jl
sbb
jmp
mov
test
rorl
int3
stos
mov
popl
and
pop
xchg
ret
sahf
test
js
and
je
xchg
xchg
mov
mov
test
cmp
scas
loopne
decl
rorl
push
push
int3
pop
cs
imul
pop
fadd
in
pop
mov
push
lret
jno
pusha
push
arpl
lock
sbb
lret
addr16
cmp
sti
mov
stc
in
int
sti
mov
mov
or
gs
lahf
mov
movsl
lahf
cmp
incb
xor
mov
scas
add
jp
clc
cmp
stc
jns
arpl
xor
jno
pop
insb
cs
addr16
dec
adc
mov
mov
inc
jg
sbb
daa
cmp
pop
or
lcall
sub
push
pop
push
test
je
lret
push
test
add
push
jmp
out
in
and
push
les
mov
mov
cmp
movsb
cli
ret
outsl
mov
hlt
mov
pop
in
cli
cmp
cmpsb
mov
loopne
add
mov
mov
in
mov
mov
ficoms
xchg
mov
mov
lahf
pushf
aad
pop
fbld
lods
mov
mov
add
fdivl
mov
sahf
xchg
cmp
into
mov
xorb
jp
outsl
stc
pop
outsl
and
inc
xchg
in
xchg
or
loope
push
shll
push
jo
adc
andb
mov
ja
repz
xchg
push
lret
add
pop
dec
jnp
sti
pop
test
mov
mov
test
repnz
clc
inc
fs
pusha
iret
imul
pusha
jge
xchg
ficomps
xlat
lods
call
push
stos
inc
dec
mov
sub
sbb
popa
pop
je
fnstsw
inc
cmp
stos
cld
cs
lret
push
adc
xor
ficomps
add
push
outsb
adc
sbb
dec
pop
xchg
jecxz
mov
mov
pushf
jecxz
xchg
dec
or
ja
or
mov
jmp
and
popf
push
jbe
repnz
sbb
jns
jecxz
mov
lds
cltd
outsl
and
mov
aam
sarb
repnz
push
push
leave
adc
add
and
push
push
add
mov
rol
add
cli
push
mov
arpl
lock
outsb
inc
jno
cmp
inc
adc
clc
add
mov
out
mov
cwtl
mov
mov
pop
push
jp
jle
stos
fisubrs
sbb
or
sbb
out
xlat
mov
xchg
push
in
idivb
cmc
or
dec
in
cltd
pop
inc
aas
lods
xchg
lea
or
or
mov
sub
jae
adc
imul
xor
mov
icebp
jae
sarb
inc
movsl
jp
fs
sub
mov
and
cmpsl
cmpsb
add
inc
inc
scas
dec
pop
sbb
aas
mov
dec
outsl
repz
cmp
mov
test
roll
add
cmpsb
outsb
xchg
and
push
pushf
mov
dec
pmaddwd
cmpsb
movsl
sti
pop
push
repnz
aas
push
mov
mov
popa
sub
or
jecxz
or
jns
xor
sahf
pop
sbb
icebp
pop
out
or
jle
ljmp
or
push
std
rol
pop
or
add
push
add
pushf
xor
cmp
sub
lahf
dec
xor
mov
clc
jmp
mov
int
jmp
inc
fs
cmp
xchg
cmpsb
sub
imul
or
int3
cwtl
das
push
inc
cmp
cmp
mov
roll
pop
lods
popf
inc
popa
xchg
cmp
pusha
inc
in
aad
daa
lds
mov
dec
in
loop
cs
or
popa
nop
call
cmpsb
repz
mov
adc
xor
xchg
sbb
movsb
ret
and
push
orb
mov
push
shlb
mov
mov
xlat
xchg
imul
sub
add
movsl
rorb
mov
arpl
int
imul
push
sbb
popf
into
dec
pop
std
mov
cmp
imul
icebp
movsl
jle
sub
dec
cmp
xchg
pop
lods
ret
pop
aad
xor
fnstsw
inc
or
mov
js
mov
inc
sti
outsb
aam
cmp
xchg
cmp
dec
cltd
jno
notb
test
bound
fldenv
int
mov
rcr
fcoml
mov
and
xlat
push
mov
insb
inc
fs
mov
jns
iret
in
sub
fucomip
pop
stos
and
mov
ret
fcmove
push
icebp
push
mov
pop
xor
add
lods
mov
pop
jl
mov
xchg
fsubs
and
add
es
xor
ss
dec
daa
repz
jno
sahf
fsubrs
inc
jp
mov
mov
loope
cmc
popf
icebp
push
jns
xor
cltd
or
mov
sbb
add
push
xor
in
mov
and
pop
mov
inc
insl
jmp
mov
std
and
in
shlb
jle
push
je
mov
mov
jnp
mov
jmp
shll
imul
leave
cmp
jle
add
lds
fsts
push
stc
jnp
pop
imul
ss
scas
mov
jbe
fwait
nop
mov
push
jecxz
je
mov
inc
jmp
ss
xchg
xchg
clc
jne
rcll
mov
popa
frstor
lcall
mov
enter
pop
imul
hlt
popf
std
jmp
pop
adc
ret
lods
adc
cli
push
hlt
fldl
ds
stc
push
mov
into
leave
enter
lods
lret
movsb
push
mov
js
aas
test
int3
lock
jo
sub
test
lods
lahf
out
inc
test
aam
jnp
int
or
neg
arpl
pop
pop
enter
stos
push
stos
jg
ljmp
pop
cwtl
cmp
mov
sarb
imul
cmp
fcmovnu
or
mov
std
insb
rcl
rolb
fnstcw
das
pop
fs
sbb
enter
lret
movb
xchg
sub
cmp
mov
xor
movsl
and
mov
cmpsl
mov
repz
sbb
jge
sbb
ja
xor
roll
insb
lcall
outsl
dec
imul
or
xor
adc
int3
es
xchg
es
or
sbb
adc
mov
in
addr16
jne
push
sahf
outsb
repnz
call
adc
push
loopne
jecxz
or
mov
mov
loope
push
sub
adc
xchg
xchg
add
sbb
iret
lret
cmp
mov
fbld
mov
in
xchg
mov
inc
ficoml
icebp
inc
fildl
mov
add
xchg
addb
sbb
and
pusha
sbb
rcr
cmpsl
xor
inc
push
xor
jle
push
fstpl
data16
enter
pop
and
push
push
push
pop
mov
dec
push
adcb
and
push
cmpl
and
scas
lcall
sub
fwait
jnp
out
mov
mov
out
mov
jl
push
and
adc
push
outsb
cmp
xlat
test
push
fdivs
add
imul
roll
jne
fsubs
lahf
pop
mov
cltd
jmp
cmp
inc
inc
icebp
cli
imul
stos
sub
out
adc
scas
push
push
loope
mov
dec
enter
fiaddl
and
sub
pushf
lods
pop
arpl
xchg
mov
fcoms
out
aam
gs
pushf
cmp
test
adc
gs
sbb
orb
call
daa
pop
fwait
test
aaa
sti
add
jl
xchg
mov
mov
inc
nop
push
data16
test
sbb
es
cmp
xchg
imul
sahf
out
loopne
jns
mov
inc
xor
cs
xor
fs
sub
cmp
out
leave
mov
sahf
cmp
mov
in
inc
and
cmp
push
data16
add
xor
out
popf
push
mov
popa
cmp
mov
icebp
add
inc
outsb
jne
clc
adc
inc
mov
imul
cmpsb
pop
imul
add
add
cld
xor
je
cli
adc
mov
imul
test
or
dec
icebp
pushl
cld
jle
sbb
cltd
adc
jb
dec
jmp
jmp
gs
pop
xor
std
cmpsb
pop
adc
leave
cli
push
jmp
xchg
sti
clc
rcrl
pop
lahf
dec
call
lods
jo
and
scas
pop
jno
xchg
std
or
cmp
add
outsb
jno
divb
mov
leave
divl
loop
sub
je
je
in
imul
movsl
pop
int3
mov
fidivl
loop
adc
jbe
adc
hlt
icebp
dec
push
ds
andl
xor
cld
iret
add
dec
stc
adc
adc
lcall
shll
add
add
out
and
cmp
fmulp
into
sub
sub
jmp
sbbb
push
cmp
shlb
sub
push
xchg
mov
daa
cmp
pop
sub
adc
or
sub
fisubrl
xchg
fstpt
pop
lock
aaa
insb
or
adc
imul
iret
faddl
push
lcall
in
leave
fs
ss
inc
imul
and
jecxz
loop
pop
push
sti
sub
subb
rcpps
leave
fistpl
jecxz
mov
fcoml
fcompl
jbe
mov
pop
data16
adc
push
xor
and
pop
cmpsl
xchg
inc
shlb
in
or
mov
popa
imul
mov
add
mov
inc
jae
xchg
pusha
inc
dec
out
mov
and
pop
jno
popf
mov
nop
clc
call
stc
fldenv
es
adc
dec
bound
sub
call
xlat
mov
leave
mov
fdivs
cmp
inc
loop
jae
int
xor
push
mov
adc
sahf
sbb
adc
or
sub
sahf
cmp
mov
nop
jecxz
lods
cli
xchg
rclb
xor
pop
push
popf
and
popa
mov
cs
sub
arpl
sub
push
int3
mov
orl
sbb
adc
push
inc
mov
xchg
mov
adc
inc
push
sub
cmpsl
inc
call
add
ja
sbb
jne
sbb
pop
fdivrs
jns
adc
fadd
in
dec
adc
into
cld
dec
sub
lret
shrl
jp
in
out
sub
push
jmp
es
mov
test
sub
push
into
mov
mov
cs
cmp
cmpb
push
imul
mov
push
div
addr16
loopne
jl
outsl
lods
in
cmpsl
in
lea
and
dec
jb
jno
pop
sbb
mov
jl
divl
arpl
mov
shl
lret
pop
mov
xchg
sub
scas
lret
sub
xorl
mov
popf
jo
sub
inc
ret
out
dec
bound
pop
ficompl
sbb
xchg
xlat
cmp
ds
std
leave
icebp
rcrb
lcall
add
leave
insl
sbb
jns
push
nop
shr
mov
inc
fcomip
shll
inc
push
push
sbb
inc
mov
fstps
pusha
cld
filds
in
sbbl
jecxz
int3
adc
out
jle
jge
idiv
ss
inc
cmp
push
adc
add
dec
cmpsl
add
jmp
test
push
aad
push
mov
push
cmp
shr
into
clc
lcall
xor
mov
int
sub
mov
mov
mov
sub
fst
add
xor
or
jp
loop
loope
mov
and
jp
pushf
pop
adc
push
imul
sub
adc
adc
dec
inc
cmp
jle
aas
imul
xor
xchg
dec
outsb
lock
jmp
dec
dec
movsl
cmp
xor
add
fs
mov
ret
xor
dec
cli
cmpsb
mov
jmp
sub
pop
xchg
imul
or
ljmp
out
dec
sti
out
or
in
cmpsl
mov
add
and
mov
sbb
ja
lahf
or
cmp
xor
stos
in
int3
fs
das
gs
push
and
add
pusha
sub
jns
cmp
insl
inc
jle
inc
pop
ljmp
and
jno
adc
aas
jb
aaa
dec
xor
into
jmp
sti
test
rcll
xchg
mov
pusha
les
rcrb
pushf
xor
ror
or
gs
pop
mov
mov
imull
test
or
aad
arpl
mov
repnz
mov
mov
outsl
es
cwtl
add
pop
nop
adc
jp
add
push
cwtl
out
and
and
sub
push
ret
jge
imul
xchg
and
pushf
jle
xor
mov
popa
movl
icebp
sub
test
loope
xor
pop
add
sbb
adcb
rcr
push
dec
push
arpl
les
fwait
inc
adc
and
pop
push
or
xor
add
pop
int3
dec
in
push
sub
sub
mov
daa
cmpsl
fldenv
xchg
sub
and
mov
xor
arpl
mov
imul
jo
and
pop
inc
inc
sti
pop
int
loope
dec
rorb
and
mov
mov
les
lret
fs
xor
lcall
push
mov
test
and
pop
jp
aad
cmp
dec
bound
xor
jbe
stos
xor
scas
add
mov
data16
mov
sbbl
mov
pop
outsl
fcmovnb
and
lahf
jne
aam
sbb
xor
fistpl
sub
jmp
enter
movsb
mov
mull
or
or
test
mov
xor
pop
inc
inc
shlb
or
xchg
push
fisubs
lea
outsl
push
pop
push
mov
dec
and
pop
leave
popa
sti
sub
add
ljmp
in
cmp
aaa
fisttps
and
push
pop
aam
cs
ljmp
stc
scas
inc
mov
sub
jns
adc
das
cs
rol
mov
xor
ds
jl
in
jae
ds
or
mov
inc
add
adcl
movsb
or
jg
inc
cmpsl
lret
dec
mov
and
mov
push
sub
repnz
dec
pushf
xchg
dec
xchg
and
sub
add
in
loop
jb
lock
inc
mov
cli
push
push
xor
sbb
mulb
std
outsl
cltd
or
sbb
mov
push
xchg
out
add
push
stos
pop
cmp
ljmp
into
pop
adc
sbb
ja
popf
jl
fidivrl
ret
setb
mov
mov
sub
and
je
mov
cmpsb
inc
inc
lds
fcoms
sub
inc
mov
push
fidivrs
aad
shlb
rcrl
imul
cmp
dec
push
leave
loope
cli
dec
push
xchg
adc
testl
dec
push
dec
mov
sbb
xor
out
mov
jle
add
addl
scas
xchg
or
int3
cmp
pop
clc
mov
dec
jge
mov
mov
cld
mov
fadds
xor
out
shrb
xchg
pop
rcll
pop
ss
mov
xor
add
cld
mov
jmp
lock
ljmp
ret
add
mov
xchg
movsb
in
adc
data16
push
push
scas
mov
ficoms
xor
lea
pop
sbb
scas
je
push
mov
rorl
cld
pop
fidivrl
test
mov
in
test
jno
dec
test
cmp
aas
mov
nop
mov
push
clc
dec
repnz
add
jns
stos
fcmovbe
stc
bnd
cwtl
int3
cwtl
neg
mov
inc
inc
addl
or
or
adc
add
and
fstps
out
fdiv
loop
pop
xor
mov
neg
jge
or
mov
xchg
lock
jnp
push
aad
sbb
inc
arpl
fcomps
mov
into
rorb
fdivrs
imul
push
and
cs
aam
sub
test
dec
in
jg
dec
xchg
and
test
popa
cmp
mov
out
mov
imul
sarb
push
repz
mov
xor
fcomps
lret
filds
pop
loop
inc
cli
cltd
les
hlt
test
cmpsl
rcl
mov
fnstsw
mov
test
cld
jmp
inc
loopw
ds
mov
add
cmp
and
ktestb
xorl
xchg
cmpsb
mov
jle
int3
sbb
int3
mov
mov
ja
sti
popa
mov
int3
test
adc
inc
cmc
das
pop
jo
sbb
mov
mov
inc
push
test
js
std
adc
mov
sti
fisttps
dec
dec
pop
jl,pt
push
mov
dec
hlt
insl
mov
jne
mov
out
hlt
push
rol
aam
inc
mov
cld
mov
inc
adc
pop
test
insb
inc
mov
jnp
movsl
add
mov
mov
call
inc
inc
cmpl
mov
into
jo
int
sub
sbb
loopne
xor
pop
stc
or
sbb
xchg
lret
mov
adc
pop
sub
xor
scas
mov
lock
pop
loope
bound
sub
lds
arpl
cmp
jg
lds
cmp
pop
incl
addb
fildll
jno
mov
xor
inc
jns
mov
std
aaa
cmp
cmp
out
mov
arpl
mov
mov
mov
pop
addb
out
and
popf
test
imul
inc
push
xchg
je
ja
stos
adc
ret
in
cmp
and
cmp
into
push
and
test
jae
test
jmp
xor
and
cmc
arpl
or
sarb
mov
sti
movsb
stc
lret
xchg
or
push
leave
mov
push
push
sbb
cli
or
xchg
dec
or
dec
repz
ja
and
inc
xlat
inc
enter
sub
jae
mov
ret
push
popf
sbb
clc
into
mov
jmp
rorl
mov
cwtl
xchg
in
out
test
xchg
fiaddl
mov
shlb
ret
aad
gs
lods
push
fimuls
cmpsl
pop
pusha
mov
cmc
mov
es
adc
adcl
sbb
sbb
mov
arpl
add
stos
pop
int
dec
jl
test
and
lahf
cld
scas
mov
add
out
in
fdivp
ds
fimuls
pop
pop
inc
add
push
ljmp
imul
add
push
mov
jbe
push
mov
or
out
push
push
push
and
adc
fadds
mov
das
adcl
popa
das
pcmpgtb
mov
adc
lea
or
leave
dec
aam
mov
adc
test
mov
mov
mov
xchg
nop
push
xchg
das
push
pop
lcall
cmp
daa
xchg
add
mov
pop
adc
add
sbb
cwtl
scas
jnp
mov
push
aam
cwtl
xor
dec
das
sbb
jns
push
or
rcrb
push
movsl
push
int
mov
dec
dec
fidivl
sbb
sub
pop
cmp
cmp
or
movsb
jno
ret
repz
push
pop
push
pop
cmp
jmp
push
or
and
int3
xchg
fwait
cltd
jge
pop
mov
lock
lods
pop
cmpsl
imul
sub
cld
jbe
ja
inc
sub
xor
test
fwait
mov
fstp
fcmovne
out
arpl
inc
icebp
nop
inc
dec
cmp
int3
cmp
insl
jle
jb
jp
in
clc
sbb
pop
je
dec
sbb
mov
jge
aas
or
in
and
bound
cld
xlat
cwtl
sbb
into
mov
aad
out
aad
cwtl
fmul
ret
pop
pop
xchg
lahf
dec
jg
cmc
mov
mov
gs
loopne
add
cmpsb
or
into
les
xorl
mov
pop
cmpsb
lea
add
jg
pusha
mov
push
and
add
gs
outsl
mov
mov
adc
call
adc
mov
mov
ror
lahf
inc
inc
cmpsl
movsb
sbb
mov
adc
push
push
lds
into
insl
cmp
xchg
mov
sub
test
mov
adc
sbb
test
fcmovne
jmp
jecxz
jnp
mov
js
pop
arpl
aaa
out
push
nop
popa
ljmp
decl
negl
inc
push
lahf
add
loope
jnp
and
mov
icebp
mov
inc
je
shlb
orl
xor
pusha
jno
jb
out
imul
gs
outsl
scas
pop
cli
test
loop
inc
cmp
into
pop
jp
inc
xchg
stos
shr
sub
jp
pushf
fnstenv
xor
cltd
cmp
add
xchg
sub
jg
mov
xchg
test
mov
sbb
dec
mov
std
into
mov
pop
outsl
iret
ret
pop
hlt
dec
sahf
mov
mov
pop
cld
mov
xchg
repz
cltd
enter
loopne
daa
cmp
daa
arpl
fimull
adc
nop
repnz
xor
out
aas
sti
mov
mov
jle
out
cmp
test
test
mov
pop
or
mov
xchg
bound
lds
push
mov
aaa
add
jae
pop
mov
test
test
pop
xchg
mov
or
mov
out
in
xchg
dec
ds
cli
fistps
imul
pop
jne
subl
dec
xchg
shlb
sub
sti
stc
sub
mov
lods
and
sub
ss
cmp
inc
add
sbb
and
mov
jne
and
xchg
mov
xchg
jp
aaa
pushf
int3
sub
rorb
out
cli
cmp
jns
adc
sbb
pop
mov
xchg
xor
out
shlb
dec
imul
push
test
stc
mov
mov
mov
xchg
es
mov
scas
dec
jbe
sub
aam
out
push
test
adcb
jp
enter
out
ljmp
xchg
cmp
out
movsl
inc
imul
ror
or
or
sarb
xor
out
stos
jle
pop
jmp
fdivl
repz
or
test
or
xor
adcb
bound
adc
xorb
xchg
adc
xchg
add
frstor
jns
dec
sti
cmpsb
aas
aaa
cltd
repnz
call
xchg
leave
addr16
lods
out
sub
leave
negb
adc
lods
xchg
adc
movsl
lock
call
jecxz
push
popf
mov
push
clc
jns
pop
cmp
scas
jae
jae
adc
jecxz
push
pop
pop
mov
or
cs
hlt
inc
xchg
cmp
test
repnz
push
xchg
mov
lods
ror
dec
mov
ud2
les
daa
insl
and
imul
or
lcall
fs
mov
xchg
fwait
stc
pusha
ja
sub
push
shlb
adc
push
xchg
clc
mov
daa
push
ret
test
jnp
xchg
cmc
add
sbb
aam
mov
add
stc
mov
cmpsl
fimuls
xchg
inc
shl
arpl
mov
xchg
cs
aam
sarb
jl
bound
in
loope
negb
jecxz
mov
xor
sub
mov
adc
jno
into
sti
cmp
mov
push
xor
jp
cmp
push
jbe
into
fnsave
aas
cmp
ret
loopne
hlt
ds
sbb
cmp
call
dec
icebp
jnp
xchg
fisubs
mov
xchg
xchg
out
and
xchg
mov
pop
cwtl
ja
ljmp
inc
xchg
push
insb
push
lcall
mov
lret
in
mov
nop
ret
mov
sub
jnp
sarb
ljmp
in
xor
in
and
mov
dec
inc
movsb
add
adc
jno
fsubs
cmp
jb
inc
xor
xor
push
je
ljmp
or
sub
scas
xchg
data16
pop
leave
imulb
aas
aad
cwtl
push
shl
pop
cmp
sarl
adc
outsl
sub
mov
sub
add
cwtl
push
es
jle
in
or
cmpl
sub
les
jmp
push
gs
jge
mov
jecxz
outsl
inc
adc
jbe
push
sbb
sbb
sbb
cmp
sub
dec
cltd
push
push
icebp
vandnpd
jo
jne
dec
dec
test
in
shll
sub
enter
xchg
lea
lea
in
hlt
fwait
aas
mov
xacquire
dec
sub
mov
mov
sbb
pop
aam
cld
test
dec
popa
mov
jbe
bound
xor
and
ljmp
ffreep
test
lret
inc
pop
je
push
call
mov
loopne
push
sbb
and
clc
mov
dec
repnz
inc
sub
test
jmp
adc
call
adc
rcrb
dec
gs
xchg
sub
or
jnp
and
lods
fdivrl
or
les
out
xchg
es
ja
or
jb
jg
dec
xchg
out
orb
xlat
popa
jle
shll
lock
fs
sub
mov
push
cld
jp
repz
or
push
int
aam
adc
shll
ds
lods
xlat
xchg
lahf
lcall
rcrl
xlat
std
mov
js
mov
mov
ljmp
in
cmp
xchg
jo
mov
mov
pop
cmpsl
jns
pop
and
js
inc
ds
cmc
hlt
mov
mov
cwtl
subl
add
imul
lds
mov
mov
lods
lret
ja
push
jb
mov
pop
mov
push
adc
out
push
stc
adc
nop
add
idiv
dec
fs
mov
pop
cmc
pop
in
bound
xchg
insb
jno
enter
aaa
mov
lahf
jo
fidivl
jbe
dec
cs
cltd
aad
pop
xlat
mov
jp
jae,pn
sahf
dec
fidivs
jns
mov
or
adc
cmpsl
and
xor
inc
or
call
mov
sub
mov
sbb
sbb
jmp
push
cmpsl
jle
push
jg
mov
jb
lret
testb
push
xor
int3
stos
xchg
gs
scas
jae
and
rorl
dec
ss
or
bound
fsub
sub
add
mov
enter
mov
xchg
sbb
bound
cmpsb
xchg
push
adc
xor
add
jae
dec
out
mov
fadds
xor
lcall
inc
arpl
lock
inc
pop
mov
into
sti
xlat
xchg
loop
pop
inc
push
add
xlat
sbbb
rclb
pop
movsb
lahf
cmc
sbb
cld
mov
jns
mov
insl
push
sbb
or
out
adc
repz
mov
inc
lret
push
inc
jp
push
cwtl
pusha
push
xor
std
or
int
mov
cmc
stos
push
dec
mov
pop
pop
rorl
and
test
cmp
out
xor
pmuludq
out
or
xchg
mov
cmp
xchg
mov
sbbb
and
ljmp
fisubl
test
gs
push
bound
ljmp
dec
mov
add
add
xor
fldl
sbbl
adc
dec
inc
int3
inc
dec
or
adc
inc
push
adc
cmp
mov
dec
mov
ss
inc
or
fwait
ss
sahf
adcb
shrb
jecxz
out
popf
in
push
lret
adc
sub
mov
mov
arpl
and
xchg
and
cmc
add
jecxz
fdivl
sub
stos
imul
je
or
xor
scas
inc
push
xchg
cltd
aas
das
cmp
cmpsl
inc
out
mov
int
fwait
cmp
push
jae
jbe
dec
xlat
sar
mov
test
scas
jb
inc
imul
dec
call
push
inc
fwait
adc
inc
cmc
xor
cli
xor
clc
test
mov
repnz
clc
pop
pop
pop
bound
orl
inc
adc
push
jecxz
shl
xchg
aaa
sahf
loope
push
nopl
jg
jle
cmpsb
mov
jns
xor
out
mov
mov
loop
lcall
out
mov
or
xchg
lret
inc
sbb
mov
flds
sar
push
lret
imul
inc
lahf
lods
lcall
ret
push
lret
lret
xlat
rclb
jb
pop
sbb
icebp
pop
dec
sbb
imul
jae
leave
gs
inc
and
sub
push
jg
sbb
mov
repnz
jno
pop
xchg
mov
fstpt
rcll
aas
fndisi(8087
ret
shlb
and
call
icebp
rcll
mov
mov
jecxz
push
xor
cmpsb
add
dec
cmp
fldl2t
lahf
sti
cmp
loope
enter
mov
pop
pop
syscall
jo
xchg
clc
push
lret
or
sub
out
lret
sbb
pop
aaa
aam
mov
jns
shll
push
dec
into
sub
pusha
inc
btc
pop
push
in
push
loop
jmp
out
mov
pop
test
nop
pusha
mov
test
data16
test
xor
and
test
pop
iret
mov
popa
rcll
sub
and
mov
cmp
clc
or
mov
daa
stos
cmpsb
cwtl
repz
bound
sub
add
and
ja
in
sbb
sbb
fisttps
adc
out
jmp
mov
call
fs
pop
gs
mov
fistl
pop
pop
inc
cmc
dec
mov
adc
adc
stos
jl
imul
add
aaa
fdivl
jg
and
adc
add
mov
std
or
sub
mov
rorl
or
imul
add
repnz
insl
sbb
shll
fstpt
les
popa
jge
adc
js
jnp
cs
sarl
fistpl
out
ds
xchg
pop
insb
stc
inc
ds
jbe
jge
inc
push
cmp
int3
sub
cmp
cwtl
sub
imul
pop
shl
lret
lods
or
leave
cmc
out
fwait
aam
fisubs
mov
lret
call
call
jns
dec
push
sub
push
cld
fstps
inc
cld
out
xchg
sbb
push
cltd
clc
lcall
lds
dec
mov
sbb
and
iret
ds
xchg
jbe
inc
in
js
or
pop
jmp
and
mov
nop
pop
dec
mov
fadds
jnp
pop
addr16
and
nop
dec
icebp
add
jo
cmc
pushf
lods
mov
int3
je
jae
mov
push
ret
sbb
lcall
pop
ja
test
cli
mov
add
lret
mov
pop
push
ret
fmull
insb
shlb
mov
adc
lahf
aas
sahf
mov
sbb
mov
stos
cmp
test
call
pop
adc
add
scas
flds
lea
xchg
movl
pop
cmp
mov
pop
xchg
jnp
push
insl
xchg
or
adc
add
add
mov
xor
cmc
cmp
das
aam
or
hlt
fs
loop
ret
or
xchg
stc
repnz
fidivl
fwait
xchg
or
or
cmpsb
jg
ja
pop
mov
rcrb
scas
sbb
ljmp
adc
mov
xchg
dec
jmp
ffreep
test
arpl
sub
jecxz
fiaddl
mov
mov
mov
mov
hlt
add
sub
and
push
xlat
gs
adc
pop
xchg
or
das
and
inc
sub
cs
inc
cmp
imul
adc
sub
mov
lea
dec
jge
jns
adc
add
jmp
js
sub
insb
xor
cmp
jle
push
daa
outsb
das
sub
mov
arpl
pop
jbe
aas
jge
jns
pop
fdivs
js
mov
stos
xorb
movsb
inc
adc
aam
aas
add
mov
hlt
cltd
sub
jge
filds
pop
popa
data16
sbb
xor
fldt
pop
iret
xor
loopne
and
mov
add
add
lds
lret
or
leave
pop
and
xor
or
push
mov
int3
mov
and
popa
xchg
xor
shlb
out
cs
push
pusha
pop
scas
xor
fwait
inc
std
lcall
lock
out
and
movsb
test
imul
pop
test
mov
add
cmpsl
shlb
sbb
inc
mov
jecxz
lds
hlt
pop
dec
arpl
mov
pop
stos
lcall
mov
inc
jecxz
rcr
addr16
imul
jle
shl
popa
push
inc
ja
push
mov
fisubs
repz
dec
mov
push
and
add
inc
neg
xchg
repnz
xchg
mov
mov
push
push
fdivs
add
xor
sahf
das
out
repnz
jo
lahf
mov
mov
sti
and
outsl
mov
push
in
sar
and
lds
stos
or
pop
and
jnp
enter
jb
jge,pn
sbb
and
clc
mov
pandn
shlb
dec
push
std
fs
push
inc
hlt
push
or
mov
xor
cmp
movsb
xor
adc
and
ror
out
push
sub
jecxz
add
pop
push
fwait
pop
std
stc
lods
std
push
or
mov
arpl
or
push
rorl
call
mov
mov
mov
rcrb
jl
in
cmp
pop
ljmp
dec
jg
shr
pop
and
sub
arpl
mov
xchg
jnp
into
leave
xlat
sbb
out
lea
jbe
adc
jmp
mov
xchg
dec
arpl
jno
xchg
pop
bound
movsl
fsubrs
shrb
jae
fwait
out
push
push
sti
add
inc
sub
nop
aas
pop
out
push
mov
ret
cmpsb
lods
sbb
test
cmpsl
jno
cwtl
jecxz
enter
pop
pop
jae
es
stos
mov
xchg
dec
mov
js
or
test
fldl
push
mov
in
test
in
add
ds
xor
ficompl
dec
in
xchg
mov
enter
sbb
or
push
mov
mov
ss
push
pushf
hlt
mov
insb
test
lahf
xor
sbb
clc
mov
rcll
sbb
push
push
adc
leave
stc
cmpsl
xchg
das
cwtl
mov
scas
jbe
xor
rorb
sbb
jbe
add
sysret
and
or
adc
sbb
leave
movsl
leave
repz
push
mov
dec
mov
push
sbb
rorl
cmp
std
or
cmp
jge
test
mov
lods
push
pushf
xchg
int
pusha
pop
mov
mov
movsl
jnp
sbbl
cli
xor
cmp
inc
pop
xchg
lds
popfw
inc
pop
cmpsb
lods
insl
movsb
dec
xchg
and
mov
push
sub
sahf
test
xor
and
repnz
daa
fisttps
clc
stc
mov
div
push
incb
fnstsw
sahf
mov
pop
lods
xchg
pop
stos
ret
mov
fst
mov
leave
rcrl
addb
add
push
adc
ss
leave
sbb
lods
push
fdivrl
adc
fldl
xor
popa
jecxz
push
dec
aas
test
adc
fstpt
repnz
in
push
fcoms
push
or
test
cmp
push
sub
inc
enter
popf
daa
fcoms
or
xchg
jg
dec
mov
mov
push
testb
jp
and
adc
imul
xor
jle
stc
pushl
jl
dec
sub
xorb
or
mov
or
ficomps
inc
xchg
negl
push
add
mov
ja
loope
cmc
push
stos
subl
addr16
cli
int3
aaa
cmpl
lahf
xchg
mov
cld
cmp
shrb
xchg
cmc
and
clc
xor
xchg
test
call
clc
loope
movsl
test
cmpsl
or
mov
aas
imul
or
sbb
out
push
mov
rol
push
pop
popf
outsb
fwait
mov
pop
stos
and
sbb
xchg
dec
adc
lods
xchg
aad
inc
mov
mov
fisubs
js
shrl
out
adc
mov
ja
xor
mov
int3
jg
in
adc
jbe
or
jb
in
jecxz
xor
cmp
mov
mov
cmpsb
add
jnp
addr16
cmp
mov
xor
das
dec
dec
mov
jns
inc
call
inc
outsl
mov
jb
mov
jnp
mov
fistpll
in
xchg
mov
fisubrl
enter
addl
cmovo
bound
ret
xchg
adc
and
or
ud1
rcl
lods
mov
fs
mov
repnz
add
lcall
cmp
mov
outsb
jno
dec
mov
push
shlb
jl,pt
sbb
dec
mov
stc
test
and
or
into
xchg
xchg
inc
sti
cmpsb
in
jg
pop
lods
lock
divb
push
jmp
jg
cmp
insb
mov
inc
push
bnd
lea
mov
and
cmp
push
outsb
fwait
add
ret
and
dec
ret
fwait
movsl
imul
aam
cwtl
lods
push
mov
movsb
outsl
jno
pop
xchg
xchg
inc
xor
xor
rorl
xchg
into
mov
adc
sub
adc
ret
xchg
pop
das
pop
sbb
cmpsl
mov
cmp
add
cmpl
ret
mov
das
or
lds
push
jle
xchg
outsl
lret
sub
or
and
das
addr16
in
mov
or
mov
movsl
pusha
push
popa
pusha
test
mov
lods
bswap
rolb
xor
pop
mov
jb
xor
clc
nop
repz
popl
push
and
inc
int
jbe
inc
sbb
ret
stos
xchg
pop
mov
or
test
mov
xchg
out
das
xchg
dec
jl
gs
addl
sub
aaa
inc
sub
lods
in
adc
cmp
and
xor
adcl
mov
adc
lds
sbb
pop
dec
outsl
push
and
pop
and
shrl
jmp
aam
insl
daa
mov
imul
mov
sbb
inc
and
jl
jp
out
xor
mov
test
test
movl
jae
mul
bnd
and
push
adc
cwtl
pusha
jge
in
inc
fwait
xchg
fwait
dec
insl
sub
in
add
gs
and
das
sar
pop
mov
mov
mov
xchg
adc
mov
shlb
adc
xchg
repnz
push
pushf
addr16
add
ret
pop
scas
or
or
stos
out
xor
or
clc
loopne
mov
xor
scas
cld
rcll
or
inc
sub
rcl
faddl
cmp
inc
xor
movsb
sbb
adc
shrb
ret
pop
out
and
dec
xlat
test
ja
mov
iret
bound
add
xchg
cmp
pop
jb
add
push
mov
cmp
loop
jge
jle
and
mov
cld
stos
mov
negb
testl
xchg
movsb
lds
cmp
arpl
mov
xor
xor
jmp
pop
and
es
mov
out
pop
sub
pop
loop
rcrl
mov
sti
adc
inc
insb
repnz
jmp
fdivs
or
ret
out
mov
icebp
sub
cmp
mov
sub
jle
jg
push
inc
mov
sub
push
sti
xchg
sarl
fstp
insl
movsb
ljmp
mov
push
cs
cld
js
add
sub
lea
call
cld
push
sub
fsubs
mov
xlat
mov
lods
or
out
mov
xchg
push
mov
sbb
shrl
mov
pop
pop
and
clc
jg
ss
pop
jnp
subl
sub
adc
dec
pop
mov
test
data16
add
mov
dec
mov
clc
in
cmpsb
data16
push
push
jmp
repnz
mov
dec
bound
sti
subl
sub
leave
mov
cs
pop
lcall
mov
mov
inc
out
push
lock
inc
xor
clc
test
lret
cmc
xchg
inc
cmp
cmp
sub
rcrl
sbb
in
xchg
repnz
cltd
jnp
add
repnz
push
add
or
lret
sahf
adc
pushf
adc
inc
adc
push
jmp
add
fcmovnbe
jnp
stos
test
repnz
insl
int
push
adc
call
mov
xchg
mov
pushf
cld
or
icebp
mov
push
aad
les
hlt
cmpb
ret
push
stos
push
loope
mov
sahf
pop
in
popf
jb
xchg
adc
cmp
xchg
bound
loope
lret
ja
das
dec
mov
pop
cltd
mov
adc
inc
or
jmp
adc
cs
and
test
sub
pop
loope
lahf
jle
fwait
out
dec
xchg
ljmp
std
dec
aas
in
xor
mov
pop
cmp
push
in
repz
sahf
lahf
xor
fsts
dec
add
sbb
hlt
andb
mov
in
insb
jo
or
sti
dec
scas
cli
jb
das
test
loopne
pop
sub
sub
lret
mov
test
idivl
cs
call
loop
or
xchg
lea
and
jo
dec
stos
test
push
dec
lret
xchg
pop
cmpsl
imul
cmp
lock
loopne
push
jns
dec
fstps
mov
pop
sbb
ficoml
std
fwait
adc
and
in
pop
cmpsl
jmp
push
cwtl
popf
testl
xchg
mov
inc
push
jmp
push
pop
cmpsb
dec
rorb
sub
mov
adc
andb
in
jp
ja
mov
lahf
in
mov
sub
xchg
shrb
popa
out
lea
cmp
mov
adc
je
xlat
int
adc
mov
cmp
fwait
rorl
jno
xchg
jle
cmp
flds
inc
inc
mov
and
mov
jle
sub
push
es
in
xor
cld
sti
clc
or
mov
xchg
xor
fsub
xchg
cmp
leave
fcomi
insb
mov
scas
aad
xor
out
inc
cmpsb
mov
adc
icebp
out
pushf
pop
dec
xor
fisttpll
bound
mov
mov
fdivp
lret
or
loop
arpl
ficompl
popa
fisubl
xor
mov
push
pop
jmp
gs
mov
roll
mov
and
cltd
cs
ret
push
xchg
sbb
push
adc
push
inc
mov
jns
cmp
adc
jecxz
mov
cld
cmp
push
push
sub
mov
add
mov
cmpsl
cmp
ret
and
in
xor
adc
fcoms
pop
or
push
pop
push
fs
mov
dec
daa
roll
in
or
xor
je
push
mov
fwait
sbb
test
add
mov
add
mov
cmp
mov
sbb
sbb
and
stos
jne
cmpsl
mov
dec
inc
shll
or
jge
add
pop
fmuls
out
add
sbb
pusha
lock
das
add
mov
cmp
cmp
xchg
push
stc
and
movsl
or
test
push
scas
push
jno
xor
jnp
lret
mov
lahf
cmpsl
jnp
mulps
adc
loopne
mov
stc
mov
icebp
dec
xchg
ss
mov
sti
sbb
je
sub
cmpsl
jp
call
stos
aam
pop
ficompl
jns
mov
in
jne
mov
test
imul
ss
jno
test
cmp
lods
and
repnz
add
bnd
out
or
imul
inc
std
or
pop
cmp
or
push
and
test
pusha
cmp
pop
jl
jo
test
cltd
das
pop
fiaddl
fiadds
add
pop
push
and
in
sbb
cmp
cmp
mov
sub
enter
roll
xchg
cmpsb
adc
fsubrl
xchg
cwtl
loopne
lods
xor
and
and
ljmp
adc
out
cli
mov
adc
outsb
lock
sbb
jb
xchg
lcallw
sti
clc
repnz
rcll
xchg
add
mov
rcrb
fwait
dec
lock
cmp
push
mov
cmpsb
shrl
js
add
call
ja
jnp
dec
dec
repz
mov
and
sub
repnz
adc
insb
jmp
push
push
rcr
inc
or
test
add
mov
test
jno
mov
ja
jecxz
push
in
cmp
inc
jb
and
sbb
mov
int
cmp
and
hlt
icebp
push
push
inc
lea
lods
mul
bnd
adc
sub
mov
jbe
jbe
cmc
pushf
cwtl
notb
jns
xchg
xchg
lock
inc
xor
jb
mov
lock
push
mov
in
mov
cmp
lds
loopne
inc
jnp
gs
arpl
je
je
jecxz
and
adc
clc
aad
popa
mov
mov
lret
adc
mov
dec
dec
fistps
inc
or
jge
out
rcr
adcl
in
in
lods
cwtl
mov
enter
push
xchg
jno
xor
pop
mov
or
sbb
mov
mov
xchg
jnp
or
ds
push
aaa
jge
sub
pop
clc
fdivrp
pop
sub
mov
mov
mov
sub
jp
jmp
jmp
jle
rcrl
imul
aam
jns
push
cmp
sbb
call
ds
push
mov
jb
fs
pop
fisubrs
loopne
inc
sub
xlat
ret
cs
scas
in
loopne
jo
std
xor
sbb
pop
inc
cmp
std
mov
jmp
leave
add
xchg
jl
in
outsl
mov
test
mov
loope
test
inc
mov
incl
outsb
lahf
nop
rcll
roll
mov
or
out
cmp
adc
mov
nop
inc
jo
inc
add
shlb
pop
or
jecxz,pt
sbb
jp
pop
pushf
push
xor
pop
std
push
sbb
daa
dec
add
fsubp
aam
icebp
cmp
fstps
test
add
pusha
dec
xchg
les
mov
stos
push
mov
mov
xor
xor
sbb
ljmp
hlt
mov
inc
cltd
sub
mov
push
mov
xor
nop
arpl
punpckldq
add
pop
dec
nop
mov
sbb
mov
mov
stos
lods
pop
stos
ja
mov
dec
jo
popf
cli
mov
mov
roll
sub
jge
jp
ret
xchg
in
cmp
lret
leave
or
add
mov
jmp
enter
adc
scas
mov
imul
mov
fmuls
test
mov
sub
push
imul
cmp
push
fwait
iret
in
cmp
jae
xor
mov
pop
pusha
add
jno
je
push
or
pop
mov
sub
aam
popf
outsl
rolb
lahf
push
pop
sti
jecxz
imul
int3
cwtl
xchg
fildl
shll
add
lcall
mov
jae
xor
cmp
enter
sti
arpl
mov
sbb
scas
xor
mov
movsb
out
daa
fsubrs
pop
insb
in
mov
lret
jmp
pop
loopne
mov
rorl
adc
inc
adc
mov
add
mov
imul
lods
std
cmp
mov
ror
fimuls
icebp
cmp
xor
or
sub
dec
lods
sbb
int
jns
xchg
dec
loope
jns
add
js
jle
insl
mov
or
jne
cmp
dec
je
repz
xor
aam
push
xor
or
clc
push
dec
push
ds
mov
stos
cmc
push
sub
cmp
push
fistpl
inc
fsubs
pop
inc
push
dec
aad
in
mov
gs
call
stos
push
stos
push
rorb
loope
in
sub
lods
or
add
or
jns
xor
inc
fbld
inc
jns
sub
mov
fcoms
std
movsb
mov
mov
pop
hlt
lret
push
push
or
icebp
sbbb
pusha
cmp
test
push
sahf
fiaddl
mov
xchg
insl
mov
orb
jge
mov
push
popa
xor
ss
and
in
cmp
or
loope
xchg
incb
into
test
jb
sbb
push
lds
xor
dec
js
adc
sub
nop
std
add
xchg
cmp
dec
add
xchg
ljmp
jno
je
sub
ja
fidivrs
mov
xor
xchg
movsl
or
nop
ljmp
push
test
jmp
popa
into
inc
outsl
out
fldcw
sub
xchg
mov
test
inc
sub
dec
hlt
js
pop
cltd
xor
mov
cmp
scas
pushf
sahf
xor
lcall
pushf
jl
cmp
sbb
ds
out
add
mov
dec
loop
sbb
add
or
add
lods
push
in
mov
sbb
push
sti
push
data16
dec
out
cmp
cmp
cmpsl
mov
out
mov
repnz
lret
fwait
xor
sub
cmp
mov
push
add
in
mov
mov
pop
imul
push
movsb
sbb
add
ja
inc
pop
mov
adc
lahf
push
dec
mov
add
or
outsl
imul
fwait
pop
fimuls
shl
xchg
cltd
ret
fxam
pop
call
xchg
mov
pop
sub
jbe
test
pop
rclb
mov
stos
ljmp
aas
mov
mov
repz
cmp
lock
shlb
cmpsl
lcall
int3
dec
xor
cld
iret
fwait
out
sbb
mov
fsub
xlat
mov
aad
enter
fldl2t
push
xchg
or
dec
or
cmpsb
pop
mov
out
outsl
pop
adc
add
add
sbbb
jge
inc
dec
loope
push
test
sbb
mov
sbb
popa
inc
cmpsl
mov
fincstp
xchg
xchg
and
mov
out
dec
icebp
xor
pop
fstpl
rcll
push
ja
inc
sbb
or
cli
dec
movsb
add
sti
inc
je
xchg
add
pop
lcall
and
icebp
andl
xchg
jmp
pop
test
xchg
inc
jle
cmp
and
mov
lahf
rcr
iret
mov
cmpsl
hlt
push
inc
aad
jnp
inc
cwtl
ja
in
fcoms
mov
into
add
out
inc
ljmp
mov
push
jne
aad
decb
push
xor
pop
xor
mov
inc
xor
addr16
fcompl
sbb
or
xchg
and
arpl
or
mov
lret
bound
sbb
cmpsb
movsl
and
fs
ljmp
mov
sub
sbb
and
iret
push
cmp
push
xlat
mov
outsl
push
es
xor
cld
rcrl
ljmp
xchg
and
fucom
jmp
repz
cmpsb
pop
popa
push
in
rcl
mov
les
das
sub
repnz
and
fisubl
outsl
jmp
fwait
sti
inc
or
jno
mov
add
aam
movd
cs
push
cmp
mov
xchg
les
xor
lahf
and
adc
push
daa
jge
lcall
fwait
xor
dec
and
cmp
cs
out
mov
stos
mov
push
movsb
dec
dec
mov
jl
lea
lods
test
sbb
inc
out
sar
xchg
test
aas
or
ja
sub
or
out
cli
ja
adc
pop
in
test
sub
xchg
adc
inc
jmp
dec
dec
arpl
and
lods
add
mov
mov
xchg
push
sub
lea
push
fcmovbe
inc
loopne
nop
sahf
lret
pop
cmp
adc
lcall
and
movb
mov
inc
or
fdivl
or
les
lods
dec
sbb
shll
xor
fs
cmpsl
addr16
adc
xchg
sti
stos
icebp
mov
ljmp
aam
xlat
sbb
cmpl
dec
fstpl
sbb
scas
faddl
icebp
fdivr
or
xchg
inc
mov
mov
cld
ret
jp
loope
rcrl
loop
cmp
outsb
outsb
out
mov
jno
sbb
outsb
ret
inc
stos
fs
mov
in
ljmp
ffree
je
ja
mov
mov
mov
sbb
sahf
cmp
inc
or
mov
adc
mov
jno
xchg
pop
jns
ss
dec
cs
xchg
pusha
repnz
cmpsl
xor
lods
inc
mov
gs
lea
cs
call
popa
out
mov
mov
outsb
add
iret
adc
cmp
pusha
push
mov
fiadds
adc
subl
mov
in
mov
nop
jnp,pt
loopne
dec
fldenv
mov
lods
out
into
loopne
pop
xorl
dec
lret
jecxz
inc
mov
test
aaa
arpl
xor
test
frstor
test
fcompl
test
aaa
dec
xlat
or
lcall
test
dec
scas
jl
sub
sahf
push
shlb
int3
mov
cmc
mov
cld
hlt
mov
sub
dec
mov
jae
jg
sub
mov
add
mov
and
adc
mov
shlb
mov
mov
fs
imul
in
mov
clc
int3
dec
xchg
push
loope
int3
cmc
out
xchg
mov
pop
jae
adc
scas
push
cmp
aam
das
mov
push
xlat
push
sti
jl
and
ja
fdivl
insb
popa
lods
mov
push
cli
or
jp
sarl
aaa
cmp
test
sbb
icebp
stos
jl
dec
mov
shll
cmc
inc
push
call
clc
lcall
leave
inc
xor
inc
imul
cwtl
lods
cmp
mov
enter
aad
imul
push
mov
push
push
test
pop
cmp
dec
out
mov
push
pop
rclb
sub
cmpsw
lret
jns
xchg
fld
push
aad
push
das
in
inc
sub
das
or
cmpb
xchg
imul
hlt
cmc
arpl
xor
jmp
mov
push
outsl
fcomps
sbb
sbb
stos
sbb
js
push
fistpll
fmuls
adc
mov
pop
push
cmp
int3
xchg
ret
pop
mov
test
xorb
adc
pop
jo
jp
sbbb
mov
gs
inc
xchg
mov
into
sub
pushl
leave
add
clc
addr16
or
pop
mov
pop
arpl
xor
scas
xchg
cmc
jle
gs
or
test
mov
pop
cmp
scas
fidivl
iret
push
push
sub
pushf
mov
sahf
or
gs
int3
test
mov
push
repnz
addr16
into
mov
sbb
pop
mov
bound
inc
mov
enter
aam
and
pop
push
fisubl
cmp
cld
pop
sbb
cwtl
decb
fbld
sbb
dec
dec
mov
push
fdivr
cmpsb
pop
mov
push
test
imul
sbb
push
cmp
roll
push
inc
sub
test
ja
dec
icebp
sub
push
dec
psrad
pop
xlat
icebp
lahf
sbb
icebp
sbb
sbb
sbb
icebp
int3
and
rorb
lods
or
or
out
sbb
imul
mov
fmul
push
adc
mov
clc
mov
xor
mov
push
lret
jae
or
xchg
sub
stos
enter
outsl
pushf
daa
jmp
jp
xchg
enter
mov
sbb
adc
fnstsw
outsl
xchg
cmp
sub
adc
add
adc
pusha
ljmp
fbld
xor
xchg
in
inc
fwait
nop
test
mov
sbb
aad
push
pushf
mov
addr16
loopne
cmp
mov
rclb
xchg
cmp
mov
ljmp
dec
idivl
adc
cmpsl
sub
sti
cmpb
scas
jp
cmpsl
or
dec
jle
cmp
dec
or
mov
mov
xchg
jne
push
shrb
pusha
pop
popa
sub
adc
test
sbb
cwtl
test
int3
cmpsl
lahf
adc
sbb
ret
xor
loopne
mov
stos
mov
inc
popf
xor
addr16
cmp
pop
std
lret
push
out
pop
or
fisubl
outsb
ja
in
inc
repz
jmp
or
or
jl
mov
cmpl
pop
pop
mov
mov
pusha
mov
jge
mov
inc
jmp
bswap
stos
adc
fnsave
mov
call
mov
pusha
cltd
leave
xor
sub
push
xchg
adc
sub
ds
jae
cmp
sbb
cs
mov
call
lret
xor
fninit
stc
cmpsl
ficompl
adc
xor
scas
pop
cmp
and
ja
jecxz
fildll
pusha
mov
enter
gs
lahf
fldl
addr16
xor
pop
mov
push
push
adcb
jns
xchg
neg
sub
dec
scas
pop
xor
adc
jo
jb
fsubrs
in
inc
movsl
xchg
cli
test
nop
cmp
pop
inc
bnd
fisttps
adc
xor
outsb
pop
imul
popa
adc
sub
jmp
xor
inc
inc
aas
add
add
scas
data16
mov
addr16
out
mov
arpl
or
ds
mov
mov
adc
ret
lea
xchg
jnp
mov
stc
je
jnp
xor
mov
mov
negb
cmp
and
inc
or
out
insb
mov
fisubs
mov
daa
out
push
outsb
outsl
pop
test
push
inc
xchg
aas
lcall
add
jns
push
arpl
fsubrl
sub
ret
push
stc
inc
movsl
mov
and
shll
popf
jbe
aaa
xchg
or
sbb
mov
adc
mov
jecxz
cwtl
xor
or
ss
mov
sub
dec
add
gs
movsl
movsb
pop
cs
fmuls
mov
stos
mov
and
outsl
pop
dec
insb
out
sub
pop
lods
test
sub
mov
sbb
insb
inc
daa
scas
cmp
fcmovnu
or
xchg
pop
data16
add
mov
aam
rcll
cmp
outsb
and
stos
mov
cmp
int3
pop
pop
loopne
xor
cmp
out
orl
inc
outsb
scas
inc
fistpl
out
inc
cs
xchg
or
stos
mov
mov
xchg
adc
ret
cmpsb
push
pop
enter
jge
daa
das
repnz
in
outsl
lahf
mov
cs
sbb
je
fisubl
pop
ret
add
fwait
clc
addr16
test
stc
jl
lahf
loopne
pop
call
aad
mov
xchg
jno
pop
enter
incl
fnstcw
cmc
insb
xchg
scas
push
scas
push
xor
int
outsb
es
sub
call
fldt
add
ljmp
ss
push
xchg
ror
push
mov
out
cmpsl
add
fwait
jg
and
sahf
jecxz
loopne
push
js
sbb
push
hlt
repz
mov
fnstenv
mov
outsl
movsl
clc
push
pop
pmuludq
sbb
jne
mov
testl
add
mov
mov
jge
out
cmpsl
mov
test
or
std
decb
test
daa
pop
cmp
jno
cmpsb
cwtl
ret
in
and
and
scas
mov
inc
jecxz
pminub
or
popf
jmp
or
orb
sub
outsl
sbb
shlb
jne
int3
adc
test
push
adc
push
cld
sbb
add
roll
sub
cmp
inc
and
out
fimuls
mov
fimuls
shl
push
scas
jecxz
sub
lret
outsl
push
push
mov
xor
cltd
adcb
enter
mov
sub
pushf
leave
pop
es
test
sti
in
out
and
inc
push
out
push
and
cmp
mov
jnp
gs
xorl
mov
jb
fidivs
call
inc
andl
ret
mov
lcall
add
xor
xor
inc
lods
ficoml
fs
fwait
cmpsl
sbb
insb
shll
push
xor
mov
ds
mov
inc
cmpsb
andb
push
lods
cmp
cwtl
mov
les
push
cmpsl
jb,pt
aam
dec
push
std
stos
lcall
mov
lret
insb
and
cmp
iret
lahf
imul
mov
data16
or
xchg
dec
mov
dec
fidivrl
dec
pop
hlt
lds
nop
outsl
stos
xchg
ret
div
or
add
ret
inc
ss
js
stc
cmp
fisttpll
out
aas
int
or
xlat
cmp
out
pop
cmc
shll
sti
das
inc
insl
int
push
arpl
notb
cld
mov
enter
mov
adc
mov
xchg
ret
jmp
mov
pop
aaa
out
adc
mov
inc
dec
pushf
xchg
lock
or
mov
cmpsl
xchg
fmuls
xor
lock
push
out
dec
xchg
pop
insl
repnz
and
xlat
ja
push
push
cs
fcmove
ljmp
and
aad
jbe
ret
mov
dec
mov
ficoml
fs
mov
mov
lcall
pop
leave
nop
jge
lret
xchg
cmpsb
lahf
addr16
in
loope
mov
jp
push
mov
fcmove
add
pop
lret
mov
mov
repnz
fadd
sub
mov
xchg
testl
aaa
inc
cmp
pop
mov
rcll
jmp
ja
push
jmp
add
loope
jle
insb
stc
dec
xor
sub
lcall
or
aad
sub
sub
repz
sub
imul
cmp
push
cwtl
add
inc
ja
js
or
out
push
in
mov
sbb
test
jge,pt
imul
lret
sub
movsl
lock
mov
adc
adc
dec
jg
mov
in
ss
fiaddl
xchg
loop
adc
test
fstpl
addr16
fwait
fwait
pop
addl
cwtl
gs
sbb
adc
hlt
mov
daa
in
rorl
mov
push
bsr
gs
in
xor
jmp
or
shlb
jle
test
jno
sbb
les
fstps
xorb
insl
add
adc
rorb
and
adc
insb
mov
imul
aaa
push
addr16
sti
sub
fcoms
sub
repz
and
adc
aam
movsb
dec
addr16
inc
iret
lahf
push
clc
stc
lock
push
in
adc
in
popa
les
adcb
mov
mov
and
push
pusha
push
lods
xor
and
mov
inc
test
inc
repz
or
pop
mov
mov
fiadds
xor
pop
push
mov
shrb
test
lods
pop
sbb
jmp
mov
icebp
iret
lcall
push
mov
dec
jg
stos
icebp
jo
add
lret
lcall
push
loope
pop
mov
and
mov
lret
cmp
adc
mov
cld
lahf
imul
mov
sbb
mov
cmpsl
repz
jo
insl
xor
pushf
xor
and
cmpsb
pop
loop
pushf
fdivp
dec
outsl
testb
cmp
ret
test
ds
xchg
stos
inc
pop
push
sub
jl
andb
push
fisttps
sbb
inc
mov
es
test
fdivl
icebp
xchg
sub
std
dec
fiaddl
jmp
add
adc
push
pop
mov
in
push
lods
sbb
mov
in
lods
popl
lahf
in
jg
js
std
sbb
or
add
stc
xchg
rolb
jbe
push
mov
push
aam
ret
imul
xor
rcrb
out
es
xlat
lahf
ss
xor
ljmp
add
add
lods
es
xchg
stc
or
fcompl
lret
ds
daa
xchg
fadd
pop
push
inc
cltd
int
stos
mov
popf
dec
mov
sub
mov
fidivl
ds
adc
adc
scas
fists
outsb
mov
mov
fcoms
mov
lret
xchg
dec
out
xchg
mov
fidivs
adc
ja
roll
movsl
mov
jo
mov
jle
xor
and
aas
dec
dec
xor
cmc
in
push
sub
push
or
pushf
xlat
dec
je
gs
js
fimuls
aad
adc
hlt
or
xor
iret
lcall
sbb
dec
xor
jbe
repnz
jns
jg
jge
mov
addr16
ds
subl
mov
push
leave
lcall
or
test
xchg
adc
inc
repnz
mov
xchg
jmp
int
lods
push
pop
divb
adc
rorb
jecxz
es
mov
fsubrl
jmp
fldl
mov
neg
jns
xchg
fnstsw
pop
fmuls
dec
pop
push
or
leave
out
mov
and
cmp
adc
lods
int
dec
ret
int3
xlat
shrl
xor
mov
mov
push
inc
stc
xor
jg
pop
xchg
das
dec
mov
mov
add
in
test
or
aaa
jmp
and
adc
out
push
pop
rol
aas
adc
add
pop
mov
cmpsl
mov
aas
sti
mov
and
pop
sbb
jmp
sub
in
insb
popf
fwait
push
xor
inc
mov
popa
out
fildl
lods
xor
inc
sti
aaa
cli
mov
cmc
int3
add
xor
pop
mov
rcll
sub
mov
sbbb
mov
mov
inc
notl
xchg
jnp
mov
rorb
sbb
mov
icebp
lock
adc
call
cwtl
inc
pop
push
sub
xorl
int3
lods
in
fstpt
inc
and
lods
inc
loop
mov
pop
mov
pop
sub
xchg
pop
imul
cmp
push
orl
cmp
daa
xchg
inc
ss
in
stos
and
or
das
xor
and
jo
dec
insl
loope
movsl
aam
jge
cmp
cmp
mov
mov
bound
popf
add
sub
sar
pop
fstpl
jmp
and
mov
cmpsl
or
loop
sti
or
loopne
dec
out
leave
outsb
out
xchg
cmc
addb
jo
imul
adc
popa
and
fsts
aas
dec
inc
popa
lcall
cmc
jl
rclb
mov
inc
xchg
cmp
jle
fstpl
insb
adc
data16
aas
push
xor
or
mov
adc
lods
push
cmc
cmp
rorb
mov
add
adc
push
pop
adc
xchg
push
imul
dec
and
jg
cltd
mov
sahf
pop
push
es
push
js
jo
mov
loop
xor
ror
jb
mov
add
xor
jge
and
lods
cmp
xor
addr16
jle
pop
lods
adc
sbb
pop
inc
push
cltd
mov
adc
adc
cs
inc
test
out
cmp
mov
popa
jle
pop
xchg
mov
pop
mov
movsb
mov
mov
mov
lcall
pop
lds
inc
xor
jne
nop
or
cmp
push
fs
into
jo
sbb
adc
lahf
jo
in
mov
js
push
mov
out
es
inc
addr16
adc
sbb
bound
inc
inc
push
pop
mov
std
ja
push
scas
sarl
mov
xor
pop
push
xchg
and
adc
lea
add
imul
aam
fldt
xchg
stc
cmpl
adc
cs
les
cmpsl
test
arpl
lcall
adc
das
loopne
loope
jns
arpl
sbb
push
mov
inc
ljmp
int
addr16
mov
sti
dec
mov
or
or
cmp
push
aam
sbb
push
leave
add
mov
rcll
mov
push
jnp
rorb
push
mov
jb
je
push
pop
lods
jl
dec
test
adc
jg
jne
xor
xchg
imul
inc
add
and
adc
xchg
aad
dec
mov
gs
jle
frstor
mov
push
cmp
cmp
lods
lods
aad
jecxz
sarb
fmuls
sbb
dec
sub
jb
in
mov
pop
and
mov
mov
lcall
push
mulb
jo
inc
push
mov
movsl
mov
sub
cmp
dec
dec
loop
or
out
sub
sub
lods
jo
rcll
arpl
cmpsw
adc
daa
dec
pop
les
jmp
enter
repnz
or
aad
popf
in
cmpsl
xor
pop
fldl
pop
pushf
or
fsubr
sar
cmpsb
lock
cmp
testl
xchg
xchg
movsb
mov
shlb
sub
jle
adc
aaa
mov
rclb
stos
jmp
add
or
pop
out
out
xchg
add
enter
pushf
shll
xor
enter
out
lods
je
daa
imul
lcall
pop
and
mov
pop
sbbl
push
xor
stc
xchg
pop
rcrl
mov
out
mov
nop
dec
pop
mov
int3
cmpsb
out
xorb
mov
mov
cmp
cmpsb
faddl
int3
fsubrs
test
or
sar
test
jns
adc
test
dec
shll
jo
pop
sub
mov
imul
in
ret
sahf
in
rorb
mov
fsubl
test
dec
sbb
and
addb
in
xchg
jne
xchg
adc
xchg
insl
mov
mov
pushf
xor
int
in
mov
iret
sub
pusha
pop
sbb
mov
popa
xor
cld
push
testl
jns
and
sub
pop
imul
cmp
scas
sbb
sub
aad
inc
fst
repz
mov
adc
xor
aas
jecxz
loope
mov
iret
in
cmpsl
push
push
mov
jle
mov
pushf
ja
jo
cmp
std
mov
insb
aas
sub
cmp
mov
jb
nop
ss
add
push
loope
push
ss
daa
jge
lods
cmp
shll
clc
adc
dec
ficoml
imul
and
pusha
dec
lcall
adc
movsb
out
add
in
adc
inc
lahf
ja
push
sbb
rolb
stos
lcall
mov
add
mov
in
adc
dec
mov
mov
xchg
cmp
insl
out
adc
lock
jno
sub
inc
push
xlat
cmp
lods
je
gs
js
push
loop
mov
int3
popa
mov
adcb
lret
add
dec
inc
push
mov
sahf
dec
ds
dec
dec
add
fisubrl
pop
out
sbb
xchg
xor
pop
pusha
cmp
nop
sub
mov
xor
sbb
add
test
fldt
pop
jne
cmp
int
dec
test
push
imul
pop
or
adc
jb
jmp
push
mov
frstor
in
out
mov
sti
pop
or
dec
movsb
mov
das
push
cmp
mov
add
fldt
jge
loopne
xchg
jge
push
pop
mov
jmp
leave
pop
pushf
ret
cmp
jnp
sub
outsl
pop
in
jbe
lock
aas
out
lcall
sub
dec
bound
jb
sub
inc
adc
mov
mov
rorb
hlt
pop
shl
imul
fistps
fmul
mov
push
stc
sahf
push
repnz
inc
sbbl
dec
pop
and
outsl
sbb
loope
xchg
jmp
icebp
popa
xchg
mov
mov
stos
xor
ljmp
push
mov
dec
dec
add
insl
or
jge
sub
xchg
pop
loope
add
push
je
sar
scas
xor
repz
ficoml
mov
dec
int
insl
adc
fnstsw
rorb
and
hlt
mov
das
dec
out
ljmp
cli
repnz
jb
push
sbb
mov
sti
inc
xor
popf
inc
sub
pop
std
xchg
push
dec
pop
push
cmpsl
adc
aad
xchg
pop
mov
inc
and
mov
jbe
loopne
jle
push
dec
sbb
andl
sbb
adc
pop
fimuls
pause
sbb
or
and
xchg
mov
ss
or
daa
sub
push
inc
sbb
push
sbb
imul
insb
inc
and
and
fistl
ss
test
mov
mov
lret
mov
ret
jge
push
movsb
pop
push
add
imul
stos
aad
in
dec
cmp
dec
and
roll
scas
and
add
or
lret
mov
hlt
ret
sbb
imul
push
pushw
outsl
shrb
add
lods
xchg
in
xor
push
cmp
in
lret
and
mov
jle
cmp
sbb
cmc
mov
lods
or
in
loop
push
dec
lock
sub
push
stos
push
aad
in
mov
fsubrs
mov
andl
and
mov
adcb
add
inc
pop
jnp
out
test
add
les
jns
iret
imul
add
add
jle
jl
sub
js
sbb
xchg
clc
xchg
or
and
into
stos
mov
mov
inc
in
imul
push
jb
add
xchg
cmp
fwait
cmc
inc
lret
cmp
jb
adc
repz
or
xchg
ljmp
mov
out
sarl
outsl
sbb
insl
stc
pop
or
add
iret
mov
bnd
pop
icebp
clc
inc
in
pop
or
jecxz
es
lahf
dec
mov
iret
lea
or
in
dec
mov
mov
pop
xchg
into
sub
and
push
push
out
fs
pop
call
lahf
add
adc
mov
js
push
dec
lock
xchg
aad
sahf
cmp
aaa
sub
pop
incl
xchg
cld
jmp
loope
aad
pop
fadds
aam
jae
lret
and
inc
dec
mov
mov
add
inc
push
push
decl
adc
push
sbb
imul
mov
addr16
mov
lret
or
lods
push
sti
xchg
adc
mov
adc
adc
inc
dec
into
inc
pop
in
outsb
pop
pop
and
fcom
dec
mov
sahf
or
test
cmpsb
ljmp
push
push
add
jmp
or
cmp
inc
imul
and
mov
movsl
xchg
push
jo
inc
imul
inc
data16
cmp
push
js
adc
ljmp
shrb
pop
mov
pusha
push
sbb
lock
js
lahf
dec
jmp
daa
xor
push
xor
imul
sub
sub
repnz
aam
dec
add
xor
mov
lret
jmp
jns
sbb
inc
xchg
xor
popf
insb
lea
imul
rolb
inc
cmp
mulb
test
shlb
jb
push
fcmovb
cmp
and
test
jbe
dec
sbb
adc
jecxz
cli
sar
jle
fildl
loope
jmp
sbb
jb
adc
movsl
sbb
int3
pop
mov
jle
rcr
arpl
rolb
fsubrs
cmpsb
and
cmp
insl
jne
popw
pop
xchg
cmp
lods
push
cmp
fs
mov
out
xchg
sbb
in
or
scas
push
in
mov
jmp
outsl
xchg
repz
and
push
nop
and
or
fwait
cmovbe
or
int
and
sarb
insb
push
loope
mov
add
inc
lods
or
std
jb
mov
jbe
mov
pop
push
sub
jge
inc
arpl
shll
and
mov
ret
adcl
je
push
pop
lock
cmp
mov
fsubrp
sti
mov
sub
fimull
lcall
mov
test
mov
dec
dec
out
pop
cmp
jmp
xchg
shl
mov
push
rcrl
and
arpl
or
xchg
cmp
pop
test
push
sarl
aaa
cmp
add
dec
das
stos
cmpsl
out
repz
iret
repnz
test
js
pop
and
dec
xchg
out
sub
daa
mov
stos
xor
lret
xchg
cmp
inc
xchg
outsb
inc
imul
roll
movsl
js
sub
jns
mov
jge
popa
test
lods
jmp
int3
outsb
mov
ljmp
das
or
and
lds
pop
shrb
inc
outsb
gs
cmovg
rcrl
shlb
sbb
hlt
dec
adc
sub
movsb
fistpl
sti
and
dec
fstpl
jb
inc
insl
xchg
and
cmp
xor
into
xor
test
or
cmpsb
cmpsb
mov
xor
gs
push
push
mov
out
rcl
cld
out
inc
cmp
or
push
popl
add
mov
loopne
sub
sub
nop
lahf
das
adc
or
pop
mov
cmpsb
pop
lods
dec
add
repnz
insl
jle
aad
add
push
hlt
push
and
pusha
imul
rclb
cmp
jo
lahf
ret
push
and
into
push
cs
cmpsb
fcmovne
push
shl
push
negb
inc
les
cmp
mov
lcall
push
adc
fiaddl
insl
mov
or
in
cld
popa
xor
data16
adc
mov
loopne
rclb
jns
mov
cmc
ret
or
test
mov
push
movsb
mov
es
inc
push
repz
adc
daa
cli
sub
xor
ror
mov
xor
and
cmp
push
mov
mov
push
lods
pop
lea
mov
jno
xor
xchg
push
pop
or
into
lcall
subl
add
out
test
mov
and
xor
push
push
inc
pop
stos
lret
push
cltd
inc
clc
out
enter
fdivs
mov
add
jae
adc
pushf
or
arpl
and
sbb
cmpl
lahf
ds
adc
jae
in
cs
push
fnsave
andb
nop
sbb
sti
jecxz
orl
sahf
sub
mov
mov
movsl
jl
xor
fbld
pop
iret
dec
out
sub
push
jmp
sub
push
sub
leave
test
push
fsts
sbb
mov
jne
std
pop
movsl
pop
pop
clc
sbb
or
adc
rcll
xchg
jge
mov
xchg
push
mov
add
adcb
rorl
fs
mov
cmp
addb
jbe
sub
mov
cld
popf
fxch
cmp
push
jle
sbb
inc
cmpsl
out
mov
pop
dec
scas
imul
cltd
sbb
in
incl
pop
adc
mov
xchg
mov
out
jle
jmp
popf
dec
iret
mov
int3
jg
aas
test
inc
xor
stc
cmp
or
shlb
xchg
or
pop
gs
push
xlat
sbb
sub
pop
fwait
pop
jmp
add
push
sahf
out
scas
sbb
out
fsub
into
scas
sahf
jbe
jae
sub
xor
mov
pop
call
and
enter
or
rcl
clc
cmp
xchg
mov
in
shrb
cmpsl
lods
push
sbb
sarb
movsb
xchg
pop
mov
arpl
mov
xor
sub
inc
adc
dec
xchg
hlt
mov
jle
push
sahf
mov
push
pop
in
aaa
push
mov
mov
in
test
xor
ret
pop
xchg
sbb
push
mov
test
mov
cmp
inc
dec
fs
pop
fldenv
sub
int3
lahf
in
iret
lcall
mov
loop
gs
push
cli
cmp
jae
test
or
cmp
sub
and
add
push
and
add
idivl
stos
clc
loopne
jb
pop
inc
scas
cltd
imul
and
dec
int3
ljmp
push
dec
and
inc
sbb
xchg
jmp
mov
lds
or
inc
in
data16
cmp
fiadds
push
mov
sub
pop
xor
cmp
sbb
out
dec
push
enter
es
imul
es
xlat
outsl
sub
or
mov
sub
fstps
mov
add
ret
lea
andl
mov
xchg
insl
add
iret
xor
sbb
mov
mov
andb
int
cwtl
lret
das
cld
xchg
movsb
add
imul
enter
popf
test
outsb
add
push
in
aad
enter
jp
pop
or
das
add
call
lods
sbb
dec
pop
shlb
aaa
inc
jnp
add
pop
dec
or
xor
add
in
imul
lret
push
sub
ss
imul
in
sub
and
ds
dec
js
mov
jl
out
xchg
jle
insb
ss
inc
dec
sbb
and
lock
bound
call
aam
sub
xchg
adc
sub
lods
push
jne
and
lock
and
mov
push
pusha
test
mov
sti
aad
popa
cmp
mov
ror
mov
sbb
shll
outsl
sbb
je
push
xchg
sub
inc
mov
or
clc
imul
dec
jnp
das
imulb
and
pop
pop
cltd
daa
mov
test
cmc
negb
sbb
and
ds
cmpsl
lahf
imul
lods
fcoms
jbe
rolb
ds
lea
lock
test
or
pushf
fldt
in
loope
leave
or
pop
fdiv
pop
lods
fnstsw
lods
scas
pop
sbb
pop
insb
dec
lcall
adc
mov
cmp
xor
dec
ret
mov
out
outsl
dec
lret
in
push
push
mov
dec
xchg
sub
shr
ret
repz
cmc
adc
daa
shll
lock
jns
mov
push
adc
lock
add
dec
cmpsl
mov
cwtl
repz
inc
add
pushaw
xor
adc
jo
sub
daa
mov
and
pop
jmp
pushf
jo
loope
sub
mov
push
bnd
and
fstpl
mov
loopne
lods
and
cmc
push
into
int
inc
and
xchg
mov
pop
inc
xchg
pop
mov
mov
inc
bound
cmc
lgs
pop
rcpps
inc
sbb
cmpsl
je
mov
addr16
ficoms
cmp
pop
push
movsb
adc
push
sbb
shr
shll
mov
outsl
and
sbb
loopne
adc
inc
sub
sub
jp
mov
pop
xor
mov
xchg
pop
in
gs
out
in
orb
mov
mov
fsubrs
add
movsl
mov
and
dec
mov
dec
test
cld
out
adc
scas
inc
jno
popf
sbb
pop
xor
mov
push
test
imul
jnp
jmp
imull
cmpsl
pop
mov
cmp
and
add
arpl
int3
jbe
lods
xchg
push
es
repnz
sbb
jnp
inc
mov
in
add
xchg
or
inc
and
jecxz
iret
daa
lahf
icebp
pop
inc
adc
sbb
cld
mov
test
adc
dec
jmp
mov
mov
or
subl
inc
xchg
call
jecxz
daa
jmp
inc
mov
cwtl
test
cs
pop
or
int
xor
js
out
ljmp
pop
adc
lds
jmp
fs
lods
jmp
repz
mov
shlb
inc
outsl
sbb
adc
lock
or
xchg
jnp
pop
rclb
push
cltd
bound
daa
xchg
push
pop
insl
mov
pushf
negb
out
out
fcmovbe
push
and
ret
or
lock
rclb
cmp
xchg
sub
mov
int
lods
repz
es
cs
call
mov
xchg
push
fcomp
arpl
jb
sahf
loop
add
mov
pusha
and
fmuls
fiaddl
inc
sbb
out
dec
cli
arpl
adc
jbe
cmp
inc
fistl
addr16
adc
sub
in
ret
pop
testl
push
push
pop
fiadds
add
adc
push
gs
sbb
xor
loop
fsubrs
add
daa
mov
movsb
mov
xor
inc
xchg
mov
test
leave
repz
movb
adc
cmpsb
cmp
mov
mov
mov
arpl
sbb
mov
xchg
and
lahf
xchg
call
shl
xor
cmpsl
sub
sbb
pop
or
shrb
xchg
push
jl
mov
sbb
xor
pop
add
mov
cmp
inc
mov
push
out
outsb
outsb
dec
jp
pusha
xchg
jnp
sub
aad
fcmovb
stos
sbb
inc
sbb
sbb
fnsave
mov
jp
aas
sti
adc
pusha
decl
add
fidivl
hlt
je
imul
xlat
dec
dec
mov
sbb
call
out
lock
push
sbb
xchg
or
clc
dec
mov
inc
arpl
imul
movsl
sbb
iret
jecxz
popf
mov
fldl2t
xor
lcall
and
repz
mov
push
enter
mov
lcall
adc
mov
inc
fistpl
xorb
int3
xchg
mov
pusha
cmpb
or
sbb
adc
sbb
push
iret
enter
mov
or
repz
mov
scas
lods
pop
xor
mov
jmp
hlt
jge
test
shlb
daa
or
imul
out
dec
sub
push
int
orl
js
pop
push
push
xchg
push
or
push
cmp
fiadds
sbb
dec
fistpll
frstor
xchg
leave
ds
mov
iret
push
outsb
mov
lahf
repnz
push
mov
and
xor
sbb
ficoms
mov
jp
outsb
popf
ja
shll
inc
xlat
iret
pusha
testb
xor
pop
xchg
jno
pop
sub
xor
rcrb
sbb
mov
and
outsb
test
inc
loopne
inc
pushf
push
daa
pushf
push
xor
mov
mov
movsl
pop
adc
push
mov
shlb
dec
andb
dec
inc
mov
or
and
and
outsb
pusha
inc
pusha
mov
adc
imul
fimuls
adc
pop
cmp
filds
inc
repz
inc
sub
bound
adcl
popf
cmp
add
fsubrl
xor
scas
ss
test
fs
jecxz
lods
fimull
dec
xchg
add
aad
inc
test
cmp
scas
inc
push
xchg
jl
mov
or
repnz
movsb
xchg
mov
cmpsb
jno
cmp
lock
popf
js
inc
scas
jge
sub
fdivs
dec
repnz
aas
sub
int
in
insl
dec
clc
cld
pop
or
sbb
fcmovnu
ds
jg
mov
push
inc
jle
jecxz
pop
xor
ret
jg
cltd
cltd
mov
and
add
and
bound
mov
sub
int3
push
gs
mov
cmp
or
jnp
push
pop
sbb
adc
xchg
or
into
data16
and
push
jbe
lret
ret
pop
leave
mov
add
arpl
lea
shll
insl
mov
push
pop
dec
std
fs
lock
fisubrl
repz
mov
repnz
jno
outsb
stos
repz
das
mov
mov
add
mov
lcall
idivb
and
mov
pop
aaa
lret
cltd
out
leave
jnp
fs
mov
or
lcall
stos
xchg
fbld
fstpt
cld
leave
inc
pop
cld
sbb
or
or
test
mull
js
jbe
pop
pusha
xchg
and
mov
mov
cmc
push
or
mov
addl
xlat
mov
cmp
das
xlat
movsb
cmp
xchg
dec
mov
cmpsb
mov
ljmp
sbb
sbb
dec
jne
xchg
push
jae
dec
jecxz
fxch
jecxz
push
sbb
es
and
rsqrtps
push
fiadds
push
cld
mov
sub
jae
fcmovu
pusha
xchg
or
xor
xchg
popf
int3
mov
ljmp
cmp
test
jo
mov
jp
lahf
dec
mov
dec
push
jmp
aad
mov
lret
xor
fstp
clc
bsf
jo
dec
cmp
jne
in
mov
or
shl
stos
dec
inc
and
ret
add
sbbl
mov
shrb
out
adc
cmp
lods
xchg
in
daa
repz
ss
fcompl
clc
cli
mov
sahf
cmpsb
jg
andl
daa
sub
shrb
jo
pop
fsubl
outsl
mov
cmp
cmp
daa
adc
mov
mov
adc
loope
sbb
in
and
dec
cmp
in
or
incb
xchg
sbb
daa
or
sbb
mov
add
sbb
das
shrb
xor
jmp
pop
lahf
orb
sbb
jecxz
cltd
movsb
ds
pop
dec
imul
mov
pop
adc
insb
mov
xor
push
adc
test
outsb
jmp
stc
inc
xor
es
orl
adc
jno
insl
mov
jne
push
enter
rclb
stc
mov
frstor
popf
into
cmp
sahf
push
pop
pop
out
push
mov
xlat
dec
pop
dec
dec
pop
insl
xchg
push
xchg
aaa
addl
jne
add
mov
incl
dec
fsubrl
pusha
dec
jle
cmp
test
fildll
inc
stos
dec
lods
push
jmp
imul
hlt
jg
cmp
imul
fucomip
or
inc
in
in
add
xor
test
cmp
push
cmp
leave
dec
and
lea
cld
je
add
and
dec
xor
shl
adc
push
xchg
push
xor
mov
out
xor
pop
push
pop
pop
gs
in
inc
ds
or
sbb
stos
xchg
addb
fdivp
sbb
ss
imull
push
jno
or
not
adc
or
imul
jae
push
push
loop
jg
iret
out
enter
cmc
xor
iret
inc
push
cltd
inc
mov
jge
add
xorl
std
jmp
lods
mov
aaa
jecxz
pop
dec
lcall
pop
loope
mov
mov
aas
aaa
cmp
add
mov
loopne
fbstp
sti
lret
fldt
jl
sub
or
mov
inc
dec
cmp
test
movsl
inc
mov
movsb
xor
or
ret
shl
mov
push
loopne
xchg
xor
scas
shll
inc
or
iret
dec
add
inc
cmp
jbe
insl
leave
xchg
cmp
jge
filds
lock
inc
je
into
movsb
push
out
push
pop
mov
out
jns
push
iret
gs
add
mov
sub
sbb
iret
cwtl
pop
in
inc
dec
dec
lods
mov
dec
into
cmp
loop
add
cltd
imul
xchg
xchg
cmpsb
pop
pop
pandn
adc
sbb
in
mov
and
jle
jle
jle
lods
mov
push
outsl
and
inc
push
push
fnstsw
or
cmp
xchg
stos
lret
mov
xchg
in
mov
shlb
test
push
or
or
xchg
fcmovnb
push
stc
xchg
cmp
jp
push
sub
imul
rcr
sarl
fistps
sbb
xchg
in
dec
or
xchg
adc
into
xchg
mov
push
int3
dec
imul
add
dec
push
rclb
push
test
loopne
idivb
or
inc
mov
or
xlat
xchg
ss
xchg
out
pop
mov
out
or
or
sar
aam
mov
pop
cli
out
push
fisubrs
out
jnp
rorl
fidivrl
push
add
andl
and
jmp
pop
cmp
je
rolb
std
push
call
inc
fnstsw
inc
adc
fists
mov
jns
rorl
jg
sbb
jo
lret
jno
sti
add
adc
jo
and
incb
add
mov
mov
jbe
and
nop
in
test
in
pop
xor
lret
icebp
fcomps
faddl
movb
leave
mov
es
repnz
pop
jle
mov
decb
adc
and
dec
inc
pushf
add
adc
fdivrp
inc
jl
cmpl
enter
sar
dec
test
add
fdivs
in
mov
and
out
cmp
mov
pop
shlb
ljmp
xor
sub
mov
sti
insb
xchg
ljmp
leavew
inc
leave
adc
mov
or
cmp
mov
inc
pop
fistps
push
sub
mov
and
andb
leave
inc
add
mov
das
lcall
adc
aaa
dec
pop
pusha
inc
push
hlt
fwait
dec
or
enter
cmp
jmp
and
pop
mov
lock
mov
ret
mov
movb
loop
pop
jns
xchg
imulb
add
mov
insb
jbe
scas
push
cmp
mov
add
mov
jmp
push
daa
adc
sub
mov
adc
cli
outsb
push
int
xorb
ficomps
out
and
mov
pop
xor
scas
cmp
mov
sub
sub
imulb
aad
dec
fadds
pop
js
xchg
push
xchg
in
int
mov
sbb
mov
xchg
pop
dec
jo
testb
out
inc
push
mov
mov
pop
incl
add
fnstsw
mov
int
out
xorb
fnstcw
inc
out
inc
or
stos
mov
adc
sub
fmulp
and
pop
sub
xchg
nop
cmp
xor
shlb
test
out
ret
xlat
jo
orb
adc
jbe
in
mov
sub
pushf
stos
push
inc
mov
cwtl
dec
or
in
push
jns
fildll
or
jae
mov
loop
sbb
mov
rol
call
inc
and
mov
and
jle
mov
std
jbe
mov
cmpl
xor
mov
mov
scas
adc
dec
shrl
push
lds
fwait
cmp
imul
lahf
ret
push
jp
push
and
loopne
inc
idiv
ja,pn
mov
xchg
cs
sub
inc
inc
fdivrl
cs
dec
jecxz
nop
in
out
nop
ds
push
or
inc
or
jae
daa
in
lods
add
or
xchg
ljmp
mov
xchg
lea
push
add
jnp
adc
cmp
cwtl
scas
adc
cmp
or
inc
fwait
outsl
out
das
loopne
sbb
add
xor
pop
shrl
add
stc
shll
jbe
jbe
or
clc
js
add
xor
dec
icebp
mov
mov
sbb
push
or
mov
jg
roll
mov
loop
testl
js
fsubrs
cld
sti
xchg
push
xchg
rcrl
pop
inc
xor
nop
rorl
add
out
ficoml
mov
cmp
or
cmpsl
or
adc
pop
shrb
sar
pop
jmp
fwait
jbe
adc
std
nop
das
cmp
push
sbb
rorl
call
arpl
cmp
mov
scas
insl
lods
and
xor
aam
gs
pop
jnp
xchg
push
adc
leave
ljmp
mov
jle
dec
pusha
cmpsb
adc
in
in
imul
imul
adc
mov
sub
test
add
dec
iret
mov
add
pushl
mov
cmp
jo
jne
cmpsb
adc
dec
je
push
popf
ret
push
dec
cmc
dec
jno
nop
xor
dec
ja
xor
push
mov
das
fcoms
jns
and
das
lods
sbb
loopne
mov
lret
xchg
dec
pushf
popf
xchg
and
imul
dec
xor
test
ret
movsl
add
pop
adc
inc
arpl
outsb
pop
and
idivl
test
or
mov
clc
push
sbb
mov
xchg
leave
out
or
cmovo
adc
cmpsb
mov
add
cmp
inc
rorl
lock
dec
sub
test
pop
inc
xor
jb
arpl
jo
inc
fwait
xor
sub
xor
push
sbb
pop
outsb
pushf
test
adc
out
or
push
je
rclb
enter
bound
mov
in
mov
add
pop
mov
cmp
out
sub
popf
xchg
cwtl
aam
sbb
or
addr16
sub
cmpsl
sub
sub
lods
inc
xchg
mov
dec
jne
jo
sub
adc
lret
xchg
sub
push
mov
pop
jmp
shrb
daa
int3
fld
or
adc
test
in
xlat
add
inc
mov
jg
mov
inc
adc
movsb
test
mov
xor
mov
jne
les
addr16
adc
xor
lea
pop
shlb
push
sub
fnstsw
fisttpll
xchg
sti
or
jns
int3
sti
and
mov
aas
pop
sbb
shr
loope
std
inc
in
leave
cmpsl
cmpsb
cmp
xlat
xor
lcall
test
xchg
leave
jne
mov
cmp
jl
push
sti
sbbl
or
mov
aaa
pop
les
lods
in
scas
jbe
icebp
out
xor
cwtl
pop
jp
lds
sti
and
mov
int
mov
std
ret
add
sti
out
mov
cmp
int3
jle
mov
ret
and
mov
out
jle
mov
mov
and
xchg
mov
std
push
or
shl
or
popf
sahf
cltd
aad
fsub
lock
push
mov
int3
or
addr16
inc
je
add
sbb
loop
mov
mulb
inc
dec
sti
jg
mov
adc
sub
popf
or
jb
inc
or
shl
xchg
adc
inc
movsl
js
adcb
xor
jge
ds
xchg
sbb
aad
subb
xor
bound
out
cmp
test
jmp
push
sub
stc
fwait
sbb
notl
pop
mov
call
sbb
adc
jbe
bound
repz
gs
push
cwtl
mov
addr16
shll
in
sbb
gs
es
out
or
xchg
in
pop
insb
add
and
mov
bound
dec
dec
pushf
jl
leave
fs
out
lahf
mov
lcall
add
std
xor
add
pop
pop
js
shrl
bound
xchg
jbe
es
cmp
and
push
clc
je
ret
inc
out
je
jne
arpl
mov
push
inc
jecxz
inc
sub
adc
les
sub
mov
dec
cwtl
push
data16
leave
into
push
inc
add
popf
jb
mov
fldt
shrl
or
pop
add
fwait
jno
mov
shrb
ds
aaa
mov
jbe
xchg
test
push
ja
mov
loope
inc
xchg
pusha
adc
jno
jb
mov
and
mov
popa
jl
xchg
hlt
push
mov
adc
mov
call
lock
mov
stc
hlt
mov
mov
out
stos
cs
lea
fcoms
jge
xchg
jae
lret
mov
dec
lcall
test
lret
fsubl
inc
and
and
in
sub
push
dec
in
aaa
dec
push
adc
inc
sub
jl
lds
xor
dec
divb
scas
push
pop
push
jl
sub
scas
arpl
push
test
aam
adc
dec
jb
adc
loope
inc
shrl
adc
mov
and
cwtd
inc
sub
xor
je
ud0
adc
mov
cmpb
mov
push
scas
add
add
pop
scas
das
jg
orl
cmc
je
jbe
inc
cmp
add
adc
jae
mov
sbb
mov
jle
pop
cmpsb
xor
dec
mov
sub
shrl
or
and
adc
aam
shrb
push
cs
inc
divl
push
popf
notb
repz
cmp
push
sti
xor
add
mov
into
repz
lret
testb
out
pushw
hlt
jo
lahf
lock
out
or
mov
inc
pop
mulb
ret
fcomps
xor
jp
jae
xchg
mov
push
adc
das
mov
mov
push
lret
adc
cli
test
inc
lds
lods
stos
cmp
mov
pop
sbb
sbb
popf
repz
pop
fsubr
in
mov
dec
sbb
mov
dec
in
in
mov
scas
inc
sbb
pop
cs
mov
mov
in
stos
pop
pop
push
adc
lret
int3
mov
shrb
or
mov
test
loopne
mov
daa
mov
xor
inc
mov
xchg
and
addl
mov
cmp
adc
sbb
push
leave
inc
or
rorb
jnp
clc
xor
ds
shl
cmpsl
in
repz
xor
add
mov
mov
jl
das
cmp
mul
in
out
bound
movsl
sbb
iret
pop
fmul
xlat
add
inc
inc
pop
dec
mov
enter
cwtl
in
sub
ds
mov
push
cmpsl
mov
sub
lea
shlb
in
ljmp
push
stos
jge
ljmp
xchg
sbb
adc
xchg
sarl
fwait
mov
idivl
insl
sti
mov
dec
xor
add
add
subl
out
rolb
in
out
mov
int3
mov
or
cs
sbb
loope
cmp
xor
in
mulb
cmc
scas
xchg
xor
insl
jp
lds
pusha
adc
in
mov
nop
inc
adc
pop
cmp
sbb
lcall
shrl
push
fdivr
sub
mov
adc
cmp
jmp
mov
data16
mov
sub
jne
xchg
out
jge
stos
xor
cld
mov
ffree
xchg
or
pop
pop
mov
jmp
cmpsb
add
pop
sar
pop
ljmp
imul
mov
stos
jbe
inc
shlb
dec
scas
sub
jecxz
mov
fs
lret
ret
pop
sub
dec
imul
cs
cmp
mov
mov
jnp
mov
ds
dec
out
call
test
arpl
adc
popf
pusha
xchg
sbb
and
rolb
fwait
sahf
into
push
add
mov
stc
and
fwait
jo
adcb
movsl
pop
outsb
jmp
arpl
pop
outsl
test
out
xorl
dec
daa
out
nop
sub
adc
fldt
das
cld
pop
dec
adc
push
idivl
mov
cld
dec
inc
or
std
fs
lock
addr16
xchg
movsl
cs
scas
stos
imul
nop
jmp
rorl
dec
hlt
int3
cltd
inc
sub
lock
repz
sti
ficoml
fcmovnb
or
cmpsl
push
cmp
mov
cwtl
ljmp
enter
mov
push
inc
out
adc
mov
loopne
and
stos
icebp
test
or
aad
mov
xlat
in
xor
fwait
cmpsl
mov
adc
bnd
sbb
jecxz
dec
mov
inc
dec
adc
adc
mov
xchg
jb
xor
shll
cli
lcall
or
and
fisttpll
faddl
xor
cli
pop
das
movlps
mov
sbb
push
jbe
dec
dec
test
and
imulb
cmp
mov
out
push
inc
js
lods
sub
lods
fmull
insl
dec
shlb
sahf
gs
addb
and
mov
mov
lret
loope
mov
xor
lret
loop
adc
mov
testb
outsl
pop
mov
push
cmpsl
ss
pop
fwait
and
ficompl
push
mov
pop
das
mov
cld
pop
push
in
adc
xchg
push
xor
ss
sub
pop
mov
mov
push
insb
out
adc
pop
dec
aaa
push
nop
pop
gs
insl
arpl
xchg
mov
add
lods
dec
inc
adc
sbb
inc
clc
sbb
sbb
sub
and
and
dec
pop
call
incl
cmc
sbb
cmp
fimull
sbb
or
xchg
bound
inc
sbb
les
inc
jae
pop
stc
sub
jp
mov
outsl
cmc
mov
je
es
fwait
repnz
outsb
push
mov
imul
or
push
mov
mov
call
imul
lahf
xor
jg
ret
cmp
adc
test
push
cwtl
es
xor
out
call
jae
xor
js
test
adc
xchg
inc
or
iret
pop
aas
add
mov
jle
mov
lahf
inc
push
into
adc
arpl
sub
and
push
ja
clc
cwtl
dec
or
shr
mov
fcmovnb
mov
loopne
lods
inc
out
push
push
or
mov
and
cltd
and
sub
scas
sbb
mov
xlat
push
shrb
inc
dec
or
inc
popf
mov
mov
push
cs
lods
pop
push
inc
sub
divb
inc
xchg
and
adc
mov
xchg
mov
pop
call
mov
arpl
stos
cs
fs
daa
xor
test
cmp
sti
push
mov
sbb
cmpsb
add
mov
inc
pop
cwtl
mov
pusha
push
jp
or
xchg
push
jne
sub
arpl
popf
adc
mov
xchg
mov
fmulp
lea
cmp
jae
and
fnstsw
leave
sahf
adc
mov
out
sbb
or
xor
mov
movsb
and
bound
or
sub
mov
dec
stc
out
nop
jne
sbb
in
pop
lods
push
inc
lods
lds
dec
lea
in
in
push
adc
scas
xchg
sahf
xchg
push
daa
mov
dec
loopne
aaa
xor
notb
test
inc
ds
leave
pop
pop
or
popf
lock
dec
mov
add
pop
and
sbb
rcrl
outsl
nop
cmp
pop
insl
inc
ret
lahf
fdivrs
dec
in
je
rorb
mov
repnz
push
lret
rol
cmpsl
add
adc
sbb
sbb
daa
icebp
enter
mov
in
fucomip
andl
addr16
and
lret
pop
int3
scas
cs
and
jb
shrl
ret
sub
xchg
mov
repnz
jmp
mov
and
mov
dec
xor
sub
sti
mov
xor
add
ja
aaa
jmp
pop
push
lahf
in
add
in
cmp
mov
sub
fdivs
addb
or
or
mov
jp
lods
ret
or
loop
idivb
fsubr
repnz
add
cmp
pop
sub
cmpsb
iret
push
push
pop
movsb
cwtl
push
mov
movsl
push
pop
iret
hlt
mov
ja
push
or
pop
test
pop
pop
cltd
push
xor
test
aad
jecxz
adc
push
cmp
add
mov
dec
mov
mov
inc
lret
lea
mov
rol
dec
nop
inc
inc
mov
cmpl
popa
sti
les
dec
jecxz
add
popf
incl
or
fsubp
pop
jg
or
push
jo
and
push
jg
or
iret
jmp
movb
mov
inc
mov
xchg
cli
mov
lods
mov
ss
lods
add
mov
sbb
popa
lahf
aad
dec
call
das
jne
int3
aam
ja
adc
shl
outsb
xchg
cmp
mov
cmp
sub
js
test
clc
mov
xor
stos
data16
mov
arpl
insl
lret
add
leave
cmc
cwtl
sub
fwait
add
movsb
repnz
fs
xchg
push
stos
mov
mov
add
push
fidivrl
dec
dec
sbb
into
cli
xchg
fcomps
pop
adc
mov
push
pop
and
xor
dec
sub
into
sub
pop
aam
adc
push
jo
fadds
jmp
add
inc
pop
adc
cwtl
pop
cmp
push
push
ljmp
hlt
repnz
aas
mov
mov
or
jge
mov
imul
xchg
ja
hlt
lock
cmp
cmpsb
pop
mov
loope
adc
mov
orb
iret
incl
pop
iret
mov
nop
mov
fwait
es
scas
xchg
dec
sub
cmp
cmpsb
xor
pop
insl
enter
rcll
jo
and
and
lock
jge
js
adc
insb
clc
adc
pop
inc
mov
and
inc
xchg
shl
mov
pop
jno
dec
jecxz
enter
outsb
xor
push
sub
imul
enter
jmp
add
sub
je
dec
push
fdivrs
lods
xchg
cmp
aad
cmpsb
push
inc
lock
xor
cmp
mov
sub
and
arpl
lea
cmp
fcmovbe
pop
jae
or
mov
shlb
push
dec
imul
clc
push
sar
and
push
outsl
mov
stos
xor
movsb
daa
jecxz
repz
icebp
das
xchg
adc
hlt
movsb
cmp
es
gs
mov
stos
pushf
inc
dec
shll
mov
pusha
inc
cmp
iret
pop
hlt
fsub
fst
push
jae
cmp
es
pop
cmc
je
sub
xor
cli
push
jae
push
add
loop
test
gs
pop
cmp
xchg
out
push
and
dec
fnstsw
pop
dec
into
or
ret
ret
mov
loopne
mov
jno
sbb
iret
lds
pop
sarl
sbb
push
mov
or
ss
cmc
sti
and
push
sub
mov
xacquire
jbe
adc
dec
and
or
filds
popf
sub
xor
daa
jno
aas
int
xchg
fptan
sar
aam
loope
adc
xlat
xor
mov
jl
mov
insl
jge
scas
je
pusha
sub
cltd
xchg
pushf
cmp
das
mov
aas
movsl
test
call
push
mov
rcll
mov
mov
mov
testl
es
adcb
fdivl
gs
les
cs
fs
adc
push
push
imul
dec
jl
int
mov
adc
dec
xor
enter
mov
jmp
pop
test
sbb
jne
pop
iret
and
das
push
ds
stos
insl
mov
adc
dec
sti
pushf
cmpsb
mov
fcompl
and
or
xor
lods
sbb
call
cmc
and
addr16
int
ret
push
adc
mov
xlat
pushf
mov
scas
push
push
rolb
fmuls
ljmp
lahf
mov
cmp
cmp
push
inc
jl
mov
frstor
mov
sub
push
jle
push
jg
cmc
in
jl
les
sbb
rcrl
add
mov
clc
dec
add
adc
jg
xchg
adc
adcb
jg
into
test
sub
test
int3
outsb
fcmovnu
test
push
add
js
pop
outsl
xchg
cmc
push
lods
and
insl
inc
lods
sub
imul
pop
xchg
mov
enter
movsb
jg
mov
shrl
std
addr16
lea
lcall
out
rorl
outsl
mov
and
aad
mov
ja
mov
fidivs
pop
xlat
fnsave
scas
pop
mov
cmp
xor
jno
jle
and
iret
dec
mov
xchg
cmp
mov
daa
add
aam
mov
pop
dec
jl
jb
hlt
jmp
sahf
les
test
mov
sbb
cli
mov
negb
sbb
mov
test
dec
sbb
pusha
pusha
mov
fsubrp
xor
icebp
fildl
dec
cmc
daa
lea
sbb
fstpt
movsl
imul
and
xor
std
jae
enter
out
in
or
pop
testb
mov
into
repnz
test
mov
push
pusha
ret
sbb
popl
dec
outsb
sub
lds
loope
in
rcrb
fs
push
xor
insb
les
or
lret
inc
out
fdivrl
dec
adc
jnp
mov
arpl
jl
popa
mov
cli
outsl
mov
or
dec
dec
addr16
je
xchg
xor
mov
ficomps
lcall
jmp
adc
mov
push
lock
mov
ret
sbb
lret
adc
sbb
push
fadds
out
ja
into
popw
xor
mov
sti
out
dec
add
dec
fwait
cmp
xor
mov
subl
shlb
xchg
pop
test
repz
jmp
fistpl
in
xchg
fwait
xor
push
out
push
add
ficompl
jbe
lcall
sbb
call
negl
or
lahf
push
std
out
adc
in
xchg
rcr
cmp
xor
ror
inc
fs
lret
sub
movsb
or
mov
decl
arpl
and
sub
cmp
pop
ja
pop
xchg
mov
jns
mov
dec
cmp
ret
mov
iret
out
int
imul
imul
flds
ret
mov
daa
ret
and
xchg
pop
gs
dec
push
imul
sbb
fdivr
daa
adc
xor
mov
cmp
and
fwait
imul
pop
pop
mov
call
shrb
cltd
fnsave
repnz
movsl
iret
mov
xchg
adc
pop
adc
inc
xor
jmp
sub
and
sub
add
lret
and
push
incb
mov
cmp
pop
mov
bnd
arpl
cmp
adc
sbb
daa
scas
inc
push
das
mov
xchg
mov
sti
pop
cltd
clc
aad
mov
not
dec
ljmp
inc
dec
push
sub
add
fmul
fimuls
pop
fsub
shlb
movsl
and
popf
add
ret
ret
pop
and
mov
out
in
xchg
xor
push
jle
sub
adc
out
mov
icebp
movsl
jns
call
icebp
xor
movsl
repnz
mov
adcb
xchg
movsb
scas
sahf
mov
xchg
xor
cmp
xchg
and
push
xchg
or
and
lahf
out
xor
lcall
inc
or
mov
add
cmc
data16
es
cmp
mov
push
mov
mov
cmp
xchg
adc
lods
lods
iret
fs
and
js
push
daa
cs
push
xor
inc
xor
jmp
or
movsb
pmulhuw
clc
out
movsb
cwtl
jecxz
data16
movsl
into
mov
push
mov
mov
insb
cmp
hlt
push
jmp
pushf
jne
pop
call
push
daa
addl
in
pusha
mov
shll
loope
mov
mov
push
dec
fwait
mov
aam
iret
jbe,pn
xor
test
lods
jns
arpl
daa
sbb
outsb
mov
mov
sbb
jg
les
jno
test
xor
mov
pop
popf
sahf
negl
cmp
fadd
mov
pop
dec
cs
sbb
movsl
mov
mov
inc
cmp
inc
mov
inc
mov
rol
mov
dec
sarb
mov
repnz
sbb
lea
pop
cmc
mov
orl
add
mov
icebp
imul
mov
sub
add
mov
pop
jns
addb
cwtl
gs
pop
repnz
fmulp
push
outsb
les
jge
lds
fnstenv
xchg
xor
dec
mov
fdivrs
fchs
popf
sub
outsb
stos
insl
test
cmp
test
aad
xchg
cmp
rolb
dec
push
lret
loope
mov
jns
flds
mov
sbb
xorw
lock
jmp
push
cmp
mov
adc
test
inc
ret
sbb
push
jns
mov
sbb
bnd
push
add
jl
mov
inc
loopne
std
xchg
cmp
sub
cmp
sar
cmp
inc
cmp
fwait
daa
adc
sbbb
pop
js
out
adc
mov
lahf
pushf
subl
xlat
subl
or
out
pop
arpl
push
jle
aam
or
call
das
adc
lock
xor
ss
flds
test
add
stos
arpl
mov
sub
xchg
pop
cli
fsts
sbbb
mov
out
jmp
jge
jle
xchg
jno
xor
inc
inc
cmp
ret
pop
rcrb
idiv
aas
lahf
and
les
adc
pop
sahf
inc
xchg
push
and
daa
hlt
ret
or
mov
mov
in
cwtl
mov
or
lcall
test
push
xchg
mov
fisttps
sbb
xchg
imul
aam
push
notb
dec
in
aad
movsb
add
mov
and
inc
inc
lret
call
test
inc
stos
adc
cmp
rcrb
push
shlb
dec
movl
iret
adc
stos
out
inc
xchg
pusha
sbb
in
cld
add
dec
loop
push
gs
add
enter
aam
cmc
inc
mov
into
out
mov
pushf
push
loopne
sbb
mov
test
insl
mov
test
lahf
es
cs
or
or
sahf
test
loop
jecxz
test
mov
mov
test
cmp
cmc
scas
clc
inc
pushf
cmp
adc
xchg
je
pop
mov
jns
xchg
nop
jmp
dec
call
or
in
xor
dec
mov
js
adc
add
or
into
push
mov
adc
gs
or
leave
aaa
mov
dec
test
sub
divl
popf
push
std
cltd
xchg
xor
jge
cmovle
dec
shlb
sbb
mov
pop
popf
push
decb
dec
mov
mov
or
xchg
lea
out
push
movsl
subl
jp
push
dec
lods
and
repz
dec
jle
fcmovu
orb
cmp
cli
lea
push
inc
mov
lcall
add
lods
imul
int3
jecxz
sub
adc
cmc
lcall
mov
push
sub
xor
mov
mov
dec
pop
jno,pt
pop
pop
cmp
sub
xchg
add
jo
fistps
loopne
adc
xor
push
rcl
jae
inc
mov
jnp
sarl
or
adc
and
icebp
js
cmp
mov
les
loope
pop
jmp
mov
ja
es
jp
or
scas
mov
test
add
dec
cli
cmp
frstor
ds
dec
in
stos
cmp
push
or
and
add
lahf
mov
scas
or
adc
sub
pusha
nop
out
popa
add
sbb
dec
insb
mov
popa
adc
jae
jge
stc
jmp
in
ljmp
pop
dec
movsl
push
incb
mov
and
xor
repnz
sub
xor
in
push
jae
divb
lock
sbb
inc
mov
int
add
inc
add
movsl
addr16
js,pt
dec
mov
mov
adc
mov
mov
cltd
arpl
subl
js
daa
mov
xchg
mov
pop
lret
popa
scas
shr
imul
je
adc
lea
data16
dec
dec
pop
push
aaa
cmp
sbb
test
addr16
jne
dec
push
mov
lock
imul
or
xchg
xor
sub
test
add
outsl
mov
xlat
xlat
jnp
or
push
sahf
nop
sub
sbb
loope
shl
mov
mov
mov
jmp
or
and
mov
movb
mov
push
testl
mov
jmp
dec
fdivrl
js
push
cmc
shlb
mov
xchg
mov
in
sti
mov
bound
inc
lcall
jg
stos
add
mov
pop
mov
xlat
or
nop
jb
push
clc
pop
pop
jmp
into
hlt
and
jbe
insl
push
scas
mov
dec
mov
xchg
push
inc
pop
or
int
sbb
mov
xlat
pushl
cli
xor
stos
rclb
or
push
out
xor
add
sbb
inc
adc
and
in
mov
aam
sub
sti
push
cmp
in
jle
sar
cmp
fbstp
jo
out
nop
jl
sub
pusha
push
mov
nop
dec
adc
shl
mov
or
adc
xchg
push
test
jle
dec
mov
xchg
fld1
push
pop
lahf
fmulp
dec
and
dec
in
movb
rorl
frstor
hlt
out
cwtl
dec
xchg
fstps
push
mov
push
faddl
pop
int3
adc
testb
ret
es
sahf
lret
add
adc
loopne
daa
pop
scas
or
hlt
fldenv
leave
gs
dec
cmp
in
std
cli
insl
adc
and
shll
aam
lods
idivl
dec
dec
scas
imul
push
cmp
lock
sbb
cld
and
fsubrl
cltd
cmp
das
cmp
xor
jle
xchg
xchg
and
ja
add
pop
mov
mov
cmpsl
sbb
ds
fmull
ret
into
imul
je
pop
and
pop
jg
sub
adc
or
jnp
pop
sbb
ja
mov
pop
inc
jns
lahf
test
push
ljmp
cmpl
adc
movsb
fisubl
or
jecxz
and
andb
enter
in
addl
aad
add
push
or
xor
sub
xchg
mov
xchg
jp
mov
loopne
lea
sub
lahf
cld
cld
fwait
imul
icebp
xor
fmuls
bound
ljmp
ja
fwait
ss
scas
iret
jae
cmpsl
inc
xor
pushf
sti
mov
stc
dec
bound
pop
ss
mov
imul
clc
das
ja
lds
out
rcll
sub
cs
dec
cmpsl
cld
xorb
and
mov
lds
add
fsub
lods
sub
mov
arpl
scas
mov
mov
dec
or
cmp
std
scas
mov
sub
sar
push
jp
sub
lahf
adc
xchg
xchg
mov
mov
cmpsb
cli
pop
cmovle
nop
push
mov
notl
es
call
test
fmull
jno
ja
and
test
std
cmp
xchg
jae
inc
repz
aas
sti
test
fnstsw
mov
mov
fdivrl
test
icebp
xchg
inc
jne
add
rcr
je
mov
pop
xchg
testl
mov
test
add
hlt
fisubl
lods
les
inc
xchg
into
jecxz
mov
leave
aas
push
pop
lods
jb
stc
mov
scas
xor
mov
sub
and
dec
rcr
cmp
pop
mov
xchg
sahf
test
sbb
adc
fmulp
and
cmp
lods
fistpl
ljmp
rol
cmp
je
xchg
daa
pusha
jo
xchg
push
or
mov
movsl
test
sbb
xchg
mov
add
nop
add
inc
dec
inc
mov
aam
jbe
rorb
lock
testl
loop
ljmp
push
xor
in
sub
add
jnp
call
push
int3
push
push
andl
arpl
push
sahf
bound
gs
rcll
adc
daa
adc
and
add
push
out
pop
aam
ljmp
call
lds
imul
lods
inc
lahf
bnd
in
fldt
sub
adc
and
mov
lds
pop
sub
ret
xchg
and
cli
xor
fnsave
add
mov
aas
mov
pop
sub
clc
mov
inc
stos
rcr
or
popf
out
xchg
out
mov
push
mov
add
pushl
mov
cs
adc
aad
imul
aaa
popa
xor
out
dec
push
sub
popa
push
adc
adc
lds
sub
mov
in
std
es
jle
jle
xor
pop
jg
ret
lea
cmpsb
dec
and
push
mov
push
mov
pushl
ret
cmp
push
outsb
push
pop
inc
inc
or
out
jnp
dec
arpl
or
scas
pop
adc
push
loope
and
xchg
out
loop
aas
addr16
mov
sti
push
test
mov
enter
push
jo
sub
add
lret
cmp
mov
push
xchg
stos
sahf
test
mov
dec
pushl
out
pop
sarl
fidivs
roll
int3
cwtl
sub
mov
xchg
adc
fistpl
jp
xchg
inc
lahf
ljmp
mov
jp
mov
sbb
mov
push
xor
xchg
xorl
mov
add
fst
sarb
jl
dec
cmc
mov
cmp
or
push
mov
lods
cs
mov
mov
rol
fnstcw
mov
adc
add
mov
mov
movsb
lods
dec
xchg
sbb
sub
out
out
adc
mov
pop
push
jns
loopne
cld
out
mov
imul
cltd
inc
lock
sbb
mov
mov
lods
sub
fdiv
cmp
fisttps
push
shrl
imul
insb
ljmp
and
add
cmp
out
out
icebp
jge
and
notl
push
ret
ret
and
add
and
add
mov
bound
and
test
imul
jge
ja
lds
ret
pop
in
pop
pop
imul
sub
mov
xchg
cmp
lds
mov
loop
mov
xchg
mov
repz
test
jb
adc
mov
add
push
ljmp
aaa
xchg
jnp
push
xchg
push
xchg
lods
and
mov
mov
jne
jnp
idivb
addr16
xor
outsb
fwait
add
push
es
cmp
rorb
out
xor
push
jae
dec
addb
mov
fimuls
jns
dec
xchg
clc
out
stos
movsb
ret
xchg
xor
inc
stc
xor
add
fwait
dec
push
inc
out
or
cmp
frstor
jbe
mov
xchg
inc
mov
out
lret
adc
xchg
add
mov
xchg
rcl
cmp
clc
pop
jne
mov
or
outsl
push
pop
jae
push
push
rclb
adc
pop
and
outsl
repz
cwtl
test
outsb
xor
inc
ss
mov
push
xchg
mov
pop
notl
insb
lcall
sbb
mov
fcmove
cmpsb
mov
lcall
ret
into
rorl
inc
mov
rcrb
add
loop
cmp
add
xor
cmpsl
push
dec
push
push
gs
pop
dec
mov
jle
pushl
outsl
es
xchg
jle
loope
icebp
or
daa
mov
ss
jno
das
xchg
pop
mov
xchg
cmpsb
mov
aaa
pop
lods
push
inc
test
inc
mov
jnp
fs
adc
cltd
call
xchg
ret
jnp
mov
sbb
aas
cmp
mov
nop
ja
jge
xchg
mov
sub
sbb
adc
lcall
xchg
xor
mov
adc
or
fsub
jmp
call
adc
xchg
push
cltd
mov
imul
pop
ffree
or
ljmp
xchg
jmp
and
test
add
insb
pushl
ss
jmp
bound
jl
in
jle
sbb
add
in
add
popf
lahf
mov
and
out
outsl
jecxz
ret
xchg
xchg
popf
clc
sbb
clc
roll
and
mov
and
adc
rcll
push
push
enter
inc
xchg
pop
hlt
pop
pop
mov
mov
jecxz
or
pop
shrl
lahf
mov
out
cmpsb
and
ljmp
gs
pop
mov
cmpl
fucomip
shll
pop
int
cli
xchg
pop
sbb
push
outsl
pop
mov
xchg
test
addr16
dec
add
add
mov
hlt
stos
enter
mov
pushl
fdivl
roll
cmp
mov
shl
lods
jmp
sbb
aas
adc
in
clc
fs
ds
mov
pop
push
dec
inc
mov
icebp
out
jl
pop
repz
mov
stos
pushf
cmp
fidivrl
pop
pop
sbb
stc
fldenv
stos
pop
ja
fstpt
xchg
ds
sbb
mov
fsubrl
adc
hlt
adc
pop
shll
lahf
loope
add
lock
arpl
sbb
jns
scas
dec
lcall
mov
mov
and
lcall
xor
lret
pop
push
imul
pusha
push
sbb
ss
sbbl
cmc
out
aas
stos
jo
push
movsl
popf
jnp
push
add
das
dec
out
inc
push
add
dec
and
sub
sub
fwait
xlat
sbb
clc
push
sbb
push
outsl
in
jg
enter
pop
xor
imul
in
into
das
std
add
push
and
lock
or
sub
iret
or
aam
xchg
and
xchg
mov
xchg
and
add
rorl
xchg
aam
dec
jae
add
in
outsl
pop
ja
out
mov
mov
daa
jno
xchg
mov
je
ret
arpl
jns
mov
pop
or
fisubrs
inc
pop
fldt
leave
clc
cld
and
pop
mov
push
or
dec
adc
insb
lea
test
addr16
jo
fstpt
push
into
or
out
repnz
out
inc
jno
insb
lds
xor
push
add
cmp
sbb
jae
add
loope
jo
push
lods
mov
sub
sbb
push
mov
pop
push
insl
js
popa
cs
sarl
fwait
jmp
pop
jo
out
jo
ss
and
push
pop
outsl
dec
sub
aaa
aaa
xchg
jg
insl
sbb
in
adc
jae
ljmp
dec
data16
insb
ror
pop
jmp
dec
ret
movsb
nop
xchg
imul
fsubr
out
movsl
fidivl
xchg
jne
dec
les
stc
ret
out
jle
push
outsb
mov
repz
mov
xchg
jl
sbb
es
cmp
cld
push
pop
ret
lcall
push
jnp
cltd
sti
push
dec
imul
xchg
push
sub
pop
arpl
aam
jl
sub
jp
push
rclb
inc
loopne
in
testl
pop
push
pop
divl
push
jb
jnp
jp
pop
pop
aam
add
dec
adc
out
xchg
sbb
insb
incb
cmp
in
loope
dec
lds
jae
xchg
int
jle
test
add
jmp
pop
push
dec
mov
shrl
fs
jecxz
repnz
mov
stos
lods
push
int
dec
cli
sti
sahf
cmp
inc
or
mov
imull
ret
push
pop
jne
popa
jb
sub
les
push
sub
fists
adc
adc
push
cwtl
cmp
sbbl
iret
pushf
sub
sub
pop
sbb
dec
call
cmp
or
sbb
xchg
std
lock
xchg
add
imul
dec
dec
out
dec
jo
mov
push
push
sbb
stos
cltd
out
aad
lods
out
es
jne
jp
lret
xor
movsl
fwait
xor
addl
jo
clc
les
outsl
aaa
xor
push
lods
inc
jecxz
fwait
adc
or
dec
es
test
or
jnp
sub
push
jle
pop
jb
inc
cmc
cmc
push
add
sub
gs
inc
adcl
mov
sub
jae
sub
pop
mov
inc
or
dec
mov
mov
scas
and
mov
addr16
and
mov
dec
shlb
scas
sub
inc
loope
loop
jne
clc
or
ja
aad
xor
lret
sub
pop
test
clc
pop
lret
mov
outsb
insb
subb
mov
ja
repz
es
fwait
mulb
and
mov
enter
mov
adc
cltd
mulb
mov
fstl
into
push
shrl
lret
jecxz
pushf
jecxz
dec
sub
outsb
and
mov
xchg
sbb
repz
mov
mov
sahf
leave
jmp
decb
bound
and
das
or
scas
test
jle
fiaddl
stc
std
fcmovu
imul
dec
enter
or
addr16
repnz
push
jns
mov
sub
les
mov
aam
or
pushf
imull
mov
fwait
dec
js
mov
cmp
pop
pop
sbb
lds
push
push
cmpsb
mov
mov
dec
add
ds
in
xor
add
int
adc
addr16
bound
pop
outsb
sub
pop
fstpt
push
jp
sub
imul
cs
mov
mov
push
sub
lcall
xor
mov
push
shlb
xchg
mov
jmp
or
fs
xchg
cmp
loopne
push
arpl
test
mov
add
fs
adc
dec
xor
jecxz
sbb
nop
int3
in
sub
and
push
pop
mov
xchg
call
cmpsl
inc
jae
stc
arpl
dec
scas
ja
cmpsb
clc
pop
gs
mov
aam
stos
test
adc
sub
inc
mov
sbb
push
jecxz
pop
cli
mov
ja
pusha
ret
lds
dec
and
ss
fnsave
mov
imul
lret
test
in
mov
fstl
xchg
sub
push
xor
pop
daa
imul
pop
jecxz
and
push
mov
jmp
cltd
inc
ffreep
inc
ficomps
std
dec
call
lods
mov
fmull
ret
imul
mov
int3
pop
sarl
push
mov
jg
pop
addl
fwait
inc
push
fstps
out
push
mov
icebp
pop
inc
cltd
xchg
mov
mov
ds
int
js
mov
aam
jle
push
jl
lods
mov
sbb
fdivrs
xchg
and
cmp
pop
gs
mov
mov
daa
mov
xor
push
not
lods
dec
sub
test
xor
xchg
addr16
mov
into
cs
call
aas
cmp
repnz
test
jnp
adc
in
sub
mov
add
xchg
add
repz
movsl
fldcw
out
into
push
testb
mov
mov
inc
or
dec
inc
and
dec
and
aas
cli
mov
das
jl
dec
and
xchg
shll
cmp
fstpt
and
xor
cmp
sbb
mov
je
adc
jle
fistpll
inc
mov
loopne
das
cmp
or
cs
arpl
mov
sbb
in
inc
dec
rorl
inc
dec
outsb
aam
jno
sub
mov
mov
mov
inc
sub
xchg
cltd
xor
mov
pop
push
lock
jbe
enter
call
in
jo
add
sbbb
call
add
jp
cmp
stos
mov
sbb
mov
jno
lds
movsl
mov
mov
cld
sub
bound
mov
inc
push
mov
test
jo
cmpsl
cmp
pop
stc
in
xchg
jg
call
test
dec
sbb
roll
dec
cmp
mov
jo
cmp
jg
xchg
enter
nop
xorb
dec
sub
add
inc
icebp
add
mov
addr16
mov
jmp
mov
lods
sub
cmp
nop
jne
aas
popa
jg
out
and
aas
xorb
add
jb
push
cmpb
or
int3
cmpsl
mov
add
cmp
fwait
dec
cmp
mov
sbb
or
dec
sti
mov
sbb
sbb
mov
sbb
and
repnz
jge
add
mull
push
mov
cli
fcompl
scas
push
ds
adc
jp
xorl
and
enter
mov
dec
in
das
or
imul
jns
push
enter
jbe
sub
pop
lds
rcrl
addr16
popa
sbb
jne
sahf
mov
push
sahf
xchg
aaa
movsl
mov
xchg
sub
shll
shll
cld
cmc
inc
inc
mov
mov
jl
or
lock
add
fdivrl
out
lods
cltd
divl
fcmovnbe
fnsave
lods
outsb
loope
push
sbb
aaa
outsl
ljmp
les
jecxz
adc
aas
addr16
fisubl
jle
out
xor
push
insl
push
push
inc
sub
mov
subl
jo
and
adc
repnz
mov
ret
sti
jg
in
out
clc
sub
test
mov
popf
dec
leave
xchg
dec
push
rcr
stc
fldt
push
xchg
cld
loop
enter
call
and
bound
pop
fucom
adc
dec
mov
jbe
outsb
jl
ja
sarb
xchg
pop
aas
cmp
or
adc
xchg
cmp
les
lods
lcall
inc
sahf
ss
roll
movsb
inc
or
mov
data16
and
and
pop
xchg
jl
mov
cld
adc
stc
ror
dec
xlat
cwtl
and
mov
or
hlt
sahf
inc
in
scas
or
shll
ror
adc
mov
jmp
sbb
cmp
es
out
inc
lds
inc
mov
mov
scas
into
sbb
mov
lahf
adc
mov
mov
repz
call
popf
shll
cmp
dec
jecxz
pusha
mov
sti
orl
jl
cltd
icebp
movsl
cld
mov
mov
sub
xor
add
cwtl
pop
mov
xchg
loop
xchg
xor
pop
cmp
repz
out
push
push
stos
stos
pop
mov
gs
inc
jg
sti
inc
pop
daa
jg
or
iret
jne
cmpsb
imul
test
push
nop
push
mov
stos
inc
das
and
gs
repnz
lahf
mov
ret
fbld
xor
mov
mov
sti
add
mov
in
sub
xor
movsl
add
mov
lret
dec
loope
fisubs
in
or
aam
cmp
lret
and
js
push
mov
and
pop
cmp
and
dec
loope
call
push
fs
inc
scas
mov
ret
cld
push
bound
fcoms
sub
in
pusha
aaa
mov
insl
or
cli
test
cs
or
inc
fs
cltd
incl
mov
sbb
ss
out
into
stc
push
rclb
add
add
jnp
push
cmp
xor
or
and
mov
mov
cmpsl
push
add
decl
cmp
icebp
outsb
test
sahf
in
icebp
test
push
or
mov
adc
out
inc
sahf
cmpsl
sub
mov
ss
xor
aas
imul
push
adc
add
and
icebp
push
aas
push
cmp
mov
negb
mov
push
scas
data16
mov
cmpsl
incl
adc
or
call
jae
sbb
push
insb
inc
mov
fcompl
in
jnp
nop
divb
cmpsl
mov
rcll
mov
je
mov
inc
mov
insb
loope
lock
xchg
and
daa
jb
lahf
repnz
or
or
dec
pop
adc
fcmove
sbbb
dec
das
cmpsb
jecxz
int
fcmove
dec
jae
jne
lods
pop
xor
add
adc
fbstp
sub
fsubl
xchg
frstor
pop
dec
jecxz
mov
pop
arpl
pop
fisttpll
dec
out
pop
scas
push
mov
sbb
dec
push
jae
les
das
push
jmp
and
sub
filds
roll
and
inc
jg
lret
sahf
cwtl
sbb
mov
push
test
in
lret
cs
inc
mov
sbb
orb
push
mov
inc
pop
and
jns
xchg
insl
imul
add
out
pop
push
xchg
lret
incl
sbb
xor
fstl
in
mov
pushf
fcmovu
int3
sbb
push
jns
cmp
push
sbb
xchg
addr16
adc
push
das
inc
mov
in
xor
into
mov
data16
icebp
xchg
mov
movsl
or
aaa
adcl
cmp
dec
ljmp
and
out
xchg
lahf
push
insl
ret
push
jnp
dec
mov
inc
pop
add
ret
or
add
dec
xor
adc
add
and
xchg
repz
inc
or
mov
popf
mov
insl
cmpsl
dec
test
xchg
xchg
mov
ret
xchg
cltd
test
mov
and
imul
sar
jb
push
repnz
cwtl
daa
in
lods
inc
insb
and
and
pop
cmp
cmp
sub
nop
adc
xlat
rcll
insb
sub
cltd
movsl
lret
lea
xchg
mov
jno
repz
out
sub
jbe
dec
mov
mov
orb
jne
ja
pop
lahf
add
imul
mov
xchg
cmp
loope
dec
adc
inc
mov
scas
stos
data16
movl
std
clc
daa
imul
mov
js
imul
ja
bound
leave
mov
xor
out
mov
jg
xorl
push
ja
mov
dec
sub
pop
subb
push
loope
adc
fbld
hlt
outsb
jp
mov
add
cmp
add
jb
or
xchg
push
inc
movsl
xchg
rorl
dec
pop
fisubl
or
aas
push
movsb
imul
pop
test
or
dec
aaa
inc
and
shl
jb
sub
add
scas
mov
xchg
test
jae
cltd
cld
mov
scas
mov
xlat
mov
dec
xchg
pop
mov
mov
bound
leave
push
or
ljmp
aas
adc
sti
adc
je
stc
rorl
mov
mov
xor
jbe
pop
daa
sbb
xchg
dec
out
rol
std
loopne
mov
push
cmp
adc
xor
sbb
and
std
mov
adc
ficoml
push
inc
sbb
push
push
or
fs
mov
jnp
cwtl
jg
and
mov
into
cmpl
lcall
dec
je
and
lods
mov
push
pop
jmp
push
lock
ret
lods
push
inc
andl
scas
sbb
mov
cmp
mov
add
cs
add
cmp
push
ror
cli
iret
fldl
xchg
jb
and
mov
jne
push
hlt
nop
jns
or
hlt
call
mov
add
mov
cmpsb
cli
or
negb
test
mov
dec
sbb
add
mov
mov
adc
or
add
sub
insl
sub
imul
mov
adc
ffreep
in
int
movsb
push
xchg
aam
sub
xor
sbb
jo
xrstor
mov
repnz
mov
jbe
sub
in
dec
mov
and
mov
xorl
stc
cmp
sbb
pushf
add
inc
arpl
repz
and
iret
fwait
nop
push
xlat
or
fistps
xchg
adc
ljmp
jo
arpl
cmp
mov
bound
inc
movsl
outsb
pop
inc
push
sbb
mov
cs
mov
add
in
outsb
cmp
cli
xchg
notl
jp
rorl
dec
mov
cmp
sub
ja
pusha
pop
cmpl
dec
or
hlt
sbb
dec
and
pop
mov
and
mov
xchg
xor
addr16
call
pop
ret
std
sahf
cmpl
mov
mov
xor
lods
sarl
inc
or
xchg
bound
dec
ljmp
xchg
pusha
push
lcall
cmpsl
dec
icebp
popf
loopne
cmp
sub
loopne
outsb
cmp
adc
xchg
in
insb
iret
icebp
xchg
in
pop
pushf
dec
jg
mov
push
dec
sbb
fists
stos
mov
test
out
clc
jb
xchg
jge
or
or
jmp
ficomps
or
dec
dec
or
aam
inc
clc
rorb
das
ret
mov
add
subl
fwait
jo
imul
stos
and
xchg
pop
add
test
xor
lds
mov
add
cmp
push
call
loope
aas
nop
mov
mov
add
and
mov
mov
in
and
mov
dec
mov
nop
cwtl
inc
das
xorl
lods
jecxz
push
loope
adc
sub
adc
rcll
lret
nop
and
and
and
push
and
pop
roll
pushf
adc
sub
push
rol
lea
inc
out
xchg
dec
push
cmp
jb
adc
dec
lret
mov
xor
mov
inc
push
or
or
cli
out
sub
sub
dec
leave
decb
sub
adc
les
push
pop
loopne
jp
inc
ret
cmpsb
push
jmp
mov
lret
pop
icebp
sar
jle
nop
pop
mov
movsl
rol
xchg
cltd
or
mov
lea
push
shll
adcb
inc
lret
popf
aad
ja
iret
mov
pop
lahf
sbb
lock
outsb
shl
loop
mov
es
push
mov
push
call
inc
and
jecxz
lds
xchg
shr
stos
mov
sbb
and
pusha
or
nop
insb
mov
push
hlt
lret
jb
cmp
xlat
add
jge
inc
pop
int3
push
cmpsb
sbb
int
mov
test
inc
add
insb
mov
fisttps
cmp
inc
test
std
and
popl
push
mov
adc
lea
mov
popa
adc
int3
jl
sbb
or
leave
faddl
dec
mov
hlt
adc
icebp
cmp
lods
popf
jno
mov
cmpsl
mov
cltd
gs
jl
aas
sub
pop
test
outsl
and
push
adc
pop
push
xor
iret
stos
lahf
lods
pop
and
rol
aam
inc
sub
into
cmp
pop
leave
insl
cmpsl
xchg
sahf
rorl
lret
xor
repnz
xchg
addr16
fadds
lea
jle
mov
cltd
push
std
xchg
in
popf
jbe
pop
addl
pop
cld
shrl
and
xchg
gs
out
fldcw
and
sub
hlt
mov
repz
arpl
xor
repnz
scas
cwtl
int3
add
inc
shlb
and
addr16
fcoml
test
orl
or
decl
cmpsb
js
sahf
aas
cmp
movsl
js
je
psubq
mov
dec
pop
inc
iret
lds
shlb
movsb
sub
push
sub
sarb
jg
dec
int
xchg
into
jns
icebp
or
popa
push
sbb
pop
movsb
sbb
adc
fxch
bound
add
fimuls
fcomp
imul
mov
addr16
shrl
es
mov
movsb
andl
loopne
movsl
insb
aam
loope
ret
pop
sbb
xor
sarl
xchg
out
dec
fisttpl
cli
inc
aaa
add
xor
or
sbb
ja
adc
outsb
and
idiv
orw
xor
add
out
push
das
cld
adc
xor
xchg
rclb
sbb
cli
push
cli
jl
mov
ret
inc
jge
shlb
insl
das
cmp
mov
sub
xor
leave
xchg
jge
nop
inc
inc
icebp
xchg
inc
testl
dec
inc
push
dec
push
mov
pop
or
cmc
mov
shrl
clc
pop
jecxz
popa
pop
cmp
cmp
push
pop
sub
jb
cmpsb
fmul
inc
mov
fs
mov
les
imul
xchg
mov
outsl
xchg
in
enter
dec
mov
jge
test
xorb
mov
add
cmpsb
das
adc
sbb
add
int
adc
stc
add
adc
rcl
mov
adc
scas
fisttpl
daa
shll
add
stos
mov
daa
or
xor
jle
pop
in
cld
cvtpi2ps
lret
addb
or
xor
lods
mov
xor
mov
frstpm(287
cs
sbb
mov
mov
test
pop
add
aam
loope
pop
mov
jo
fsubs
xchg
repz
shl
or
jl
xchg
int3
nop
inc
sub
cwtl
scas
add
cmpsl
das
mov
and
jmp
jmp
int3
dec
xchg
inc
test
ljmp
mov
push
dec
pusha
pop
pop
faddl
pushf
aaa
scas
arpl
sub
imul
lret
mov
pushf
scas
negl
cmp
sub
sbb
push
cmpsb
in
xchg
pop
mov
jne
inc
rol
hlt
jns
mov
lret
test
sub
mov
mov
add
lcall
fs
roll
cli
add
push
mov
sbb
das
stos
push
or
in
notb
iret
or
xchg
cmp
dec
dec
cmp
pop
xor
outsl
cli
jbe
jbe
adc
push
int
leave
aas
cltd
cmp
icebp
xchg
mov
xchg
cmpsl
in
fisubs
xor
cmp
cmp
mov
xchg
pop
stos
or
out
or
mov
ss
rol
cmc
push
push
mov
sub
and
dec
pop
nop
pop
jmp
sbb
jl
addr16
rcll
adc
fldcw
xor
and
xchg
sti
rorl
mov
xchg
sti
and
imul
scas
cmc
shlb
iret
pusha
dec
sbb
repnz
sti
insb
cld
jmp
imul
cmc
jbe
out
iret
in
jb
mov
pop
int
mov
loop
and
popf
pop
add
imul
mov
cmc
std
and
mov
in
leave
jmp
imulb
mov
loope
mov
jecxz
dec
xor
add
dec
push
xchg
push
adc
je
push
fistl
outsb
lods
stos
dec
fstpt
lea
push
ss
rolb
adc
test
and
subl
adc
iret
dec
and
xor
aam
or
loop
jg
dec
jmp
mov
ja
repz
xlat
stos
pop
movsl
cmp
push
pop
sbb
sub
sbb
or
hlt
cmp
pop
outsb
insb
sbb
push
test
bound
sti
jle
lcall
push
pushf
imull
mov
std
ja
dec
mov
and
push
insl
jnp
sarb
or
jp
clc
hlt
clc
cmp
leave
into
xchg
jp
aad
jle
push
ret
jno
xchg
cmp
lods
int3
jmp
in
mov
outsl
xor
add
add
loope
imul
cmp
nop
dec
out
stos
popf
aad
jbe
push
sbb
fstl
push
jmp
xchg
aad
xor
add
xchg
mov
xchg
dec
ljmp
xor
outsl
imul
es
xchg
movsl
imul
js
sub
inc
dec
std
fmull
insb
mov
cmpsl
xchg
xor
jno
dec
subl
cmpsb
shlb
loopne
stos
fstl
fisttpll
jne
fwait
out
push
mov
xchg
pop
jecxz
jge
jno,pn
xor
cmp
test
mov
push
jnp
mov
addr16
push
das
mov
scas
adc
cmp
push
jmp
sub
xchg
adc
xor
xchg
jbe
sub
into
push
cltd
push
bound
xlat
mov
fsubrs
xor
cmp
dec
mov
mov
cmpsl
mov
jnp
sbb
mov
int3
or
jb
sbb
mov
imul
lds
outsb
xor
out
jno
jge
loopne
xor
jg
jae
pop
dec
pop
pop
loopne
neg
hlt
cmpsb
fcmovne
out
xchg
movsb
adc
xor
pushf
cli
mov
fsubrs
mov
es
or
test
add
pop
xor
and
cmp
sahf
mov
xor
adc
les
int
lock
sbb
xlat
xchg
and
push
xchg
test
push
mov
out
cmp
cmp
clc
fs
push
push
icebp
dec
cmp
adc
and
aad
lods
repnz
negl
int
adc
push
movsb
les
leave
sub
adc
sub
fsts
push
gs
insb
sbb
out
je
ret
pop
mov
fwait
cmpsb
cld
aam
cld
add
xor
push
push
mov
mov
out
lret
sbb
inc
jg
pop
and
das
push
les
rcr
ss
xlat
push
xor
push
adc
bound
sub
mov
mov
fdivs
jno
stos
xchg
stos
pop
adc
and
lea
dec
sub
push
xchg
adc
jae
fucomip
sub
aad
adc
pop
xor
incb
cmp
mov
mov
jae
push
pop
sar
jge
rcl
sbb
int
adc
imul
jo
mov
ja
jo
cmc
ja
pop
leave
fisttpll
arpl
lea
xchg
and
xor
out
dec
cmp
test
mov
cwtl
jne
pop
adc
jecxz
loopne
jb
dec
jb
jl
mov
lea
push
mov
pop
out
lret
xchg
xchg
repnz
pop
pop
les
and
iret
adc
lea
mov
mov
adc
loope
sbb
pop
xchg
cmpl
cmp
dec
imul
pop
popf
scas
jge
jecxz
int
adc
scas
cmp
out
scas
mov
pop
test
mov
movsl
lret
outsl
scas
pop
xor
fstl
fsubs
test
lock
cmc
rorb
sub
xor
out
dec
vmovd
in
mov
je
jg
xor
insb
insl
sbb
add
int3
jl
mov
sub
fwait
js
mov
pushl
mov
and
test
jg
ror
xor
loope
pop
mov
je
dec
sti
nop
cmp
cmpb
mov
jnp
push
lret
stos
sbb
push
test
sbb
lds
clc
imul
sbb
mov
roll
mov
test
cs
mov
xchg
xor
push
sahf
sub
jns
mov
cwtl
repnz
movb
mov
test
mov
fwait
cmp
mov
es
js
lss
sub
mov
aas
subl
push
and
push
dec
ds
out
paddusw
push
sub
pop
and
fdivs
sub
push
loopne
outsb
cltd
ljmp
aad
pop
cmpl
pop
popa
int3
mov
xor
add
das
mov
subb
sub
mov
sti
push
add
cltd
out
cmp
add
mov
lds
mov
push
sahf
jbe
leave
data16
mov
mov
shlb
loope
add
in
test
pop
sbb
outsl
cmc
mov
jae
repz
aas
add
repz
in
mov
mov
jo
sbb
call
lahf
dec
leave
rcrl
adc
mov
stos
aad
in
in
in
movb
mov
test
xchg
rcl
inc
inc
adc
pop
inc
out
sub
iret
cmpsl
aas
xchg
add
add
mov
rolb
sarl
gs
add
jb
nop
jae
cmp
movzbl
mov
xor
fcoms
pop
rcll
xchg
test
inc
sbb
fsubrl
mov
inc
mov
out
fcomps
pop
xchg
test
insb
rorb
out
cwtl
lods
pop
xchg
aad
pop
or
and
add
inc
xlat
divl
js
sbb
xchg
test
sbb
push
push
out
ret
pop
pop
sbb
movl
jb
vmovsd
adc
sarb
sbb
scas
xor
das
add
mov
addr16
shrl
fisubrs
popa
xorb
lods
hlt
lods
mov
add
mov
cmc
jecxz
bound
push
movsb
test
call
imulb
inc
test
xor
and
lret
insb
movsb
stos
outsb
xor
aam
cltd
repnz
or
ds
enter
icebp
push
int3
mov
sbb
stos
in
sbb
imul
ss
fs
sbb
popa
push
or
mov
test
xor
mov
inc
rcl
fisubl
pop
mov
test
in
push
sub
out
sti
data16
adc
mov
xchg
xchg
and
movsb
int3
pop
in
outsl
and
dec
nop
mov
jb
jnp
ja
gs
stos
lds
mov
jl
fneni(8087
pop
and
sbb
or
imul
in
push
incl
repnz
retw
jae
adc
cmp
movsb
add
loopne
stos
shrb
mov
pusha
shll
sub
pusha
lahf
push
pop
dec
push
call
popf
popa
mov
ret
push
repnz
into
sti
jge
cmp
lds
in
into
pop
xor
pushf
mov
clc
mov
mov
fcmovbe
mov
arpl
jge
scas
insl
mulb
xor
test
es
sahf
ja
lods
sbb
divl
rcrl
inc
xor
jbe
fbld
shl
pop
jecxz
roll
add
xlat
mov
test
fcoml
repz
and
xor
orb
rcrb
iret
cmp
in
add
cld
xchg
xchg
aam
pop
decb
js,pn
pop
in
mov
and
jge
sbb
outsb
xchg
mov
test
cwtd
test
inc
into
jns
rolb
fisubrl
xor
lock
pop
sbb
mov
lcall
inc
mov
fisubs
inc
sbb
testb
jbe
cmp
lock
lock
leave
push
gs
mov
or
call
jge
xlat
ret
loop
adc
nop
rol
push
lahf
xchg
inc
mov
dec
sub
notl
clc
pop
dec
loope
pop
repnz
test
jmp
xchg
push
ficoml
jge
mov
push
cmp
je
shll
mov
insl
sbb
test
mov
mov
pop
cmpsl
out
sbb
dec
jl
xchg
enter
xor
jnp
cmc
popa
orl
xchg
inc
jge
rcll
lea
ret
leave
mov
mov
ds
sbb
cmp
in
xchg
mov
pop
inc
xchg
mov
in
cs
adc
daa
xor
dec
ja
stc
daa
pusha
pop
cmc
sbb
fcoml
add
xor
mov
inc
sub
pop
add
push
adcb
fsts
lret
test
pop
mov
pop
lods
clc
xor
test
sub
jg
adc
sub
testl
dec
and
xor
xchg
jae
out
shrl
mov
jge
inc
adc
xor
mov
xlat
push
xor
xor
pop
jo
push
js
jge
inc
mov
sub
cltd
push
scas
mov
push
movb
dec
ret
shrb
popa
incl
shr
out
out
mov
or
add
lret
mov
mov
lret
shlb
xor
loope
jbe
dec
fistpl
cmp
mov
psubw
mov
push
jle
mov
insl
sbb
lea
mov
cmp
add
aad
fadd
cmpsl
jp
pop
add
mov
arpl
sbb
mov
fstl
mov
jmp
or
push
stos
cmp
jo
stc
cs
clc
sub
xor
pop
inc
pop
lea
cmc
sub
push
push
fistl
adc
mov
dec
iret
push
aaa
outsb
loop
inc
inc
jge
sbb
icebp
add
cmpsb
mov
mov
pop
cmc
pop
jmp
adc
jecxz
push
xchg
insl
cmp
cmp
cmpsl
repnz
fldcw
loop
pop
jmp
scas
mov
ret
mov
and
jle
dec
add
ss
mov
mov
aam
sub
jl
stos
dec
dec
mov
push
xor
cltd
and
lods
fildll
sbb
popf
mov
ret
mov
mov
loopne
and
mov
mov
cmp
out
cltd
cmp
adc
mov
loop
mov
mov
mov
cs
out
or
or
mov
mov
les
inc
dec
lret
je
das
cs
subb
and
inc
pop
stc
or
test
mov
ret
xor
cmp
xchg
dec
out
cli
sub
cld
call
shl
mov
and
fwait
xchg
stos
cmp
sahf
sub
mov
mov
inc
xor
ja
pusha
mov
push
adc
loopne
pop
xchg
shrb
pop
rcll
push
lods
mov
push
push
xchg
test
xchg
pop
sub
aas
push
mov
inc
scas
pop
mov
pop
mov
insl
sti
cmp
nop
xchg
mov
in
gs
xchg
out
sbb
xchg
repz
loop
in
stc
mov
imul
xchg
call
sub
xchg
jbe
pop
aas
filds
inc
bound
cld
iret
stc
mov
fistpl
pop
enter
stos
in
jb
movl
dec
dec
sbb
testb
repz
push
pop
jbe
in
fistps
popa
mov
inc
ja
in
mov
xchg
jno
add
sub
jp
in
pop
lcall
adc
loope
inc
jns
movsb
inc
movsb
jl
mov
popa
lea
sar
mov
or
aad
lcall
adc
push
dec
dec
inc
lock
fwait
ja
imul
lea
inc
sbb
adc
push
jmp
fidivrl
das
and
dec
ror
aad
inc
ss
out
fwait
lods
jge
xchg
divl
jge
out
jno
jnp
repnz
push
sub
imull
into
xchg
insb
sub
mov
cmp
xchg
add
out
jno
lret
cli
adc
lahf
cmpsb
jge
sahf
and
out
adc
jne
stos
pop
mov
jge
insl
pop
mov
push
add
in
adc
fbstp
fsts
push
dec
test
lds
popf
into
cmp
cmpsb
or
mov
or
rolb
jg
shrl
ret
icebp
movsb
outsl
pop
in
adc
xchg
adcl
xchg
sub
jne
push
inc
jmp
lds
lea
ficompl
shlb
or
into
sahf
mov
lahf
repnz
sub
push
cs
and
xchg
daa
decl
adc
aam
fimull
ret
in
ljmp
adc
sub
push
pop
push
pop
mov
ss
rcll
sbb
ficompl
cwtl
shl
and
push
jae
cmp
fwait
ret
sarl
out
sbb
push
insl
jb
cltd
sahf
fstpl
scas
push
jae
mov
pop
push
lahf
pop
mov
pop
fs
mov
cmp
mov
xor
xorl
stc
mov
xchg
int
adc
icebp
xchg
mov
jb
jns
daa
pop
adc
xchg
inc
pusha
loop
ret
mov
mov
jns
fnstcw
mov
add
mov
out
inc
sub
out
or
ret
sub
add
sub
fisubs
mov
mov
loop
cmpsb
test
sub
fistl
mov
jne
lods
pushf
das
fisttps
loop
xchg
or
pop
push
icebp
out
and
aas
or
jecxz
aad
mov
cld
enter
adc
test
xchg
cmc
or
into
and
lods
shrb
stc
push
xlat
jmp
add
cld
adc
in
ficompl
vpshrdw
sbb
xor
push
fstps
adc
cmp
lret
push
in
pop
leave
inc
mov
mov
sbb
test
movsl
sub
adc
outsl
mov
cwtl
in
std
out
int3
fcmovnb
icebp
int
mov
pop
imulb
insb
mov
push
pusha
add
test
sbb
iret
gs
cmp
sub
inc
je
jae
lock
cmp
cmp
popa
movsb
leave
subl
xchg
js
je
gs
in
pop
aas
sbb
jae
std
ja
dec
xchg
xchg
mov
ja
lahf
loope
std
dec
not
out
inc
xor
mov
adc
or
dec
xor
xor
push
shll
stc
ret
in
int3
pop
ja
mov
mov
shlb
cmp
fidivrs
sub
adc
arpl
xchg
xor
aaa
dec
xor
dec
lret
pop
mov
call
mov
aad
jp
ret
xchg
ja
xor
adc
rcrb
divl
fimuls
mov
dec
and
and
push
and
jg
stos
lock
push
mov
pop
adc
dec
pop
adc
in
cltd
popa
test
sub
les
mov
and
cmpsb
fwait
out
test
enter
sbb
insb
scas
sbb
pop
shrb
dec
pop
mov
aad
pop
push
and
xlat
cli
push
mov
xor
arpl
adc
sbb
mov
push
mov
hlt
pop
cmp
push
adc
jge
mov
jbe
outsb
mov
sbb
xchg
push
mov
sbbl
loop
out
mov
sub
fidivl
pushf
push
mov
aad
lcall
sbb
mov
test
mov
call
mov
lret
stc
imul
js
sbb
jo
cmp
nop
shll
mov
cld
xchg
cld
xchg
ja
sbb
pop
stos
inc
cmp
out
xor
fs
cmp
mov
push
dec
aaa
mov
cmc
fcmovnu
sbb
in
add
push
jmp
movsl
mov
call
out
fistps
mov
popa
movsl
rcl
sub
jb
cmovs
cli
cmp
push
sbb
ljmp
and
push
idivl
popf
test
pop
pop
jmp
or
cmp
adc
fisttps
cli
loope
lods
sti
mov
mov
inc
addr16
cmpsb
in
add
negb
negb
out
ss
add
pop
push
dec
sub
cmp
addb
lahf
mov
decb
pop
push
shlb
lahf
scas
add
push
or
jp
hlt
scas
adc
cmpsb
mov
lea
sti
scas
jle
cmp
sti
insl
lock
notb
into
outsb
xchg
mov
adc
adc
out
inc
inc
nop
pop
jge
cmpsl
push
fisubl
jle
shl
rclb
mov
mov
jb
jo
hlt
pop
xor
divb
mov
pop
test
arpl
mov
leave
push
addr16
or
cmp
mov
jb
adc
cmpsb
imul
dec
mov
stos
aaa
hlt
or
mov
add
add
fcoml
outsl
test
xchg
shl
lods
xchg
jge
dec
push
pusha
sub
cmpsb
js
shr
mov
push
sub
sbb
ja
outsb
and
xor
call
pushf
idivb
pop
cli
xchg
xchg
fnstsw
cltd
cmc
call
lret
test
push
test
aas
jno
pop
mov
sub
cmpsl
mov
fists
sbb
adc
pop
mov
adc
inc
mov
jo
inc
sub
sub
inc
or
inc
ljmp
es
in
cmp
sbb
sarl
push
in
and
lock
jmp
sbb
dec
subl
mov
cwtl
adc
or
and
sti
add
pop
mov
mov
vpmullw
movsb
push
pop
imul
scas
jnp
sbb
adc
dec
mov
clc
mov
adc
mov
testb
pop
cmc
dec
and
dec
adc
fnstcw
cmp
fmuls
andb
jl
xchg
sub
cmp
js
in
jg
and
jmp
adc
outsb
shll
stos
mov
gs
pop
popf
pop
jae
fldt
arpl
test
push
push
mov
inc
sbb
dec
int
std
icebp
push
popa
repz
fldt
cmpsl
clc
mov
sbb
dec
adcb
loope
outsl
outsl
clc
cmpsb
jecxz
jbe
movsl
frstor
sbb
mov
fadds
iret
sub
call
push
dec
shll
fs
sbb
scas
rsm
sub
push
jl
movl
lret
shrl
or
call
sbb
pop
int
out
mov
lods
push
int
and
mov
addr16
mov
inc
enter
pop
fisttpll
das
jbe
pushf
pop
xchg
enter
mov
pop
idivl
jecxz
xor
jno
js
gs
xchg
mov
out
sarl
gs
push
dec
roll
stos
mov
xor
lods
cltd
jl,pn
bound
cld
arpl
in
xor
fwait
and
in
mov
fs
adc
push
loop
xor
jmp
lea
cmp
mov
leave
cmp
repz
cli
inc
shl
insl
xchg
fcompp
cli
pop
into
mov
push
fadds
or
int
addb
arpl
int
test
es
hlt
mov
inc
loope
shl
sbb
js
das
xchg
int3
pusha
or
push
aam
ret
fwait
mov
push
pushf
cmpb
dec
push
sub
mov
hlt
xchg
mov
xchg
mov
cmp
mov
pusha
xchg
sub
fwait
or
and
adc
push
xchg
stos
cmpb
inc
cmp
inc
cmc
xchg
dec
cmpsb
dec
mov
push
stos
aam
or
into
push
iret
push
push
cld
and
sub
jge
xchg
xchg
dec
add
imul
sub
xor
ret
loope
push
imul
mov
mov
stos
ljmp
dec
fsts
push
fwait
test
cltd
or
adc
push
scas
cwtl
xor
ss
cs
in
adc
out
in
aas
mov
adc
pop
mov
aad
andl
test
aas
lock
sbb
push
test
and
test
cmpl
dec
sbb
mov
adcl
fildl
mov
cs
icebp
fwait
dec
adc
ljmp
jl
stos
mov
adc
sub
lcall
lods
mov
xor
fldt
lods
cmp
add
and
pop
push
sbb
or
cmp
imul
sbb
fs
and
cmpsb
xchg
mov
lds
lds
aam
xchg
leave
add
repz
add
jno
xor
daa
jg
ret
lret
and
sbb
inc
sbb
daa
pop
mov
xchg
and
dec
loop
lods
cmp
sub
shl
inc
not
in
incl
sti
loope
cltd
sub
aaa
incl
dec
enter
mov
addr16
xchg
mov
call
sbb
add
fldcw
dec
cmpsl
les
aaa
push
jnp
je
mov
cmpsl
sub
aas
data16
xor
repnz
cli
cmpsl
dec
inc
sub
mov
adc
ficoml
cltd
xor
leave
or
loopne
push
lcall
imul
sbb
les
xlat
pop
xor
push
mov
mov
fisubl
out
jmp
jg
cmp
out
scas
lods
cmp
adc
ret
lock
mov
cmc
leave
or
cmc
cltd
xorb
loope
pop
scas
lret
jg
adc
out
out
or
stos
je
dec
or
int
popf
cli
lods
push
mov
xchg
aam
add
mov
xchg
xchg
out
ljmp
cmp
mov
fsubrs
xchg
jecxz
mov
mov
inc
or
cmp
pop
nop
mov
cmc
enter
inc
pop
jno
cmp
andl
lds
sbb
jp
adc
jp
inc
loope
rcll
and
ret
and
jle
in
mul
mov
jo
xor
jno
dec
dec
or
nop
int
cmp
xor
dec
push
neg
jns
pop
pop
sbb
fsubr
cld
movsb
inc
push
int3
shlb
xor
add
mov
sahf
outsb
cmp
sbb
jl
cld
mov
aam
mov
popf
test
data16
jle
ljmp
insb
inc
das
mov
pop
and
add
insb
push
add
pusha
add
mov
stos
push
add
adc
mov
fsubrp
lret
inc
inc
popl
xor
xchg
lahf
lods
xor
xchg
sbb
leave
ja
mov
adc
ljmp
loope
cmp
push
negl
push
movsl
pop
sub
add
add
loopne
mov
xchg
out
cwtl
push
jmp
test
jbe
stc
fs
je
inc
mov
stc
and
mov
leave
jo
stos
xchg
cmpsb
add
jp
or
out
pop
stc
in
xor
rol
jbe
inc
cmc
xor
jbe
cmp
sub
clc
sub
mov
xchg
and
xor
push
sub
leave
add
or
mov
jae
mov
adc
ret
test
adc
sar
pop
xchg
dec
adc
es
sbb
repnz
mov
daa
ss
loop
jo
cld
mov
sbb
mov
popa
push
cmc
enter
and
xor
mov
inc
and
bnd
pop
and
mov
jp
pop
xor
or
loop
xchg
out
xor
nop
xchg
xchg
inc
xchg
repnz
push
stos
dec
xchg
cmp
pop
mov
pop
pop
shll
shll
je
fsub
inc
add
fmulp
orl
inc
mov
pusha
push
mov
mov
xchg
cmpb
sub
jecxz
sub
out
out
mov
cmpsb
adc
xchg
fisubl
or
jg
ret
mov
js
loopne
mov
xor
sbbl
jo
loope
pop
inc
clc
mov
xor
pushf
adc
jp
outsb
cmp
sbb
and
cmp
dec
fimuls
stc
sub
add
outsl
xor
inc
dec
dec
cmpsl
enter
push
dec
mov
xchg
jg
popf
xor
inc
adc
add
jo
icebp
jp
dec
sub
sub
adc
xchg
stos
and
mov
jb
dec
push
cmp
push
flds
mov
int
mov
or
and
mov
notb
cmc
mov
mov
cwtl
or
lds
dec
fdivp
lret
pusha
fcmovb
add
das
fnstcw
faddl
mov
xor
adc
jnp
cmp
cmp
cmp
cmp
test
xchg
or
fiaddl
jmp
mov
shl
mov
iret
sbb
loop
or
add
adc
cmp
ffree
and
gs
mov
js
movsl
mov
sbb
mov
imul
push
fistl
mov
or
fnstsw
jmp
adcl
movsl
js
jbe
cmp
sbb
dec
stc
pop
popa
sub
inc
xor
xchg
xor
js
add
addl
out
and
sbb
add
ret
add
scas
add
shl
cmp
in
xor
aad
ret
scas
ret
imul
cwtl
jo
add
les
mov
cmpsb
sbb
mov
xor
ja
xlat
pop
push
and
and
in
pop
jp
pop
rclb
ds
and
clc
and
mov
test
lock
xlat
inc
ds
cs
test
sub
cmp
jnp
aas
enter
pop
xchg
stos
push
xchg
int3
mov
dec
xchg
test
fsub
scas
and
loop
dec
push
ja
fidivrl
repnz
xor
fnstsw
fcmovnb
dec
pop
ficoms
imul
mov
sbb
ficoml
push
lcall
sbb
aas
out
leave
outsl
cmp
je
fldenv
insb
cmp
in
xor
jge
out
sbb
add
cmp
leave
sbb
xchg
inc
sbb
mov
mov
mov
lock
fs
aas
mov
xor
gs
add
jns
pop
sub
insl
push
jp
into
jl
clc
lds
pop
and
lret
jecxz
stc
mov
pop
adc
lods
repz
stc
and
sub
das
fadds
out
push
add
sbb
xor
int3
pop
repnz
out
fcmove
shlb
movsb
ret
je
lock
xchg
mov
int3
push
xchg
pop
insb
xchg
dec
jl
fisttps
and
xor
sub
dec
daa
jecxz
or
xchg
mov
cmp
cmpsb
bnd
ds
cwtl
dec
dec
ret
jg
cmp
insb
jl
xor
sbb
mov
in
ret
mov
cmpsl
xchg
mov
xor
mov
dec
push
mov
sub
lea
loope
mov
push
call
sub
nop
sub
ret
inc
rorb
fucomi
xchg
inc
lret
idivl
pop
jne
repnz
rorl
jno
int
pop
sbb
out
enter
ret
movsl
arpl
rcl
cmc
jg
gs
and
xchg
ja
and
outsl
not
push
aaa
std
xorl
or
sub
fmull
adc
fnstenv
jg
mov
js
jnp
xor
cmp
or
repz
int3
dec
hlt
pop
ljmp
stos
flds
dec
inc
push
rcl
rcll
dec
and
inc
into
scas
loop
cld
or
dec
sub
mov
arpl
adc
call
sbb
sub
jo
add
cmp
mov
push
leave
push
or
mov
cld
inc
xor
mov
in
sub
repnz
outsb
shll
xchg
dec
insl
fwait
sbb
jmp
pop
mov
mov
repz
into
add
mov
fcmovne
inc
aaa
inc
pop
int3
fldt
negl
sbb
jo
jo
mull
sti
push
pop
dec
sub
add
fldcw
mov
loop
jnp
hlt
sub
or
fwait
or
mov
test
or
test
pop
neg
and
sub
push
sub
pop
xchg
jbe
icebp
fsts
and
or
ficoml
nop
mov
xchg
cltd
jo
loope
in
xchg
xor
into
ret
sbb
add
fadd
push
lcall
bound
ljmp
jo
jp
cwtl
pop
and
ud2
insl
or
pop
iret
das
mov
pop
shlb
mov
insl
jno
dec
inc
stc
jo
inc
lcall
sub
inc
pop
cmp
push
vphsubdq
iret
mov
sbb
es
cmp
dec
std
mov
rorb
jp
or
imul
mov
ss
shll
and
inc
pushf
xor
loopne
sub
shrb
inc
addb
cmp
popa
fs
cmpsl
hlt
je
pop
jmp
int
pop
das
aaa
xchg
jo
test
loope
push
rclb
mov
popf
rclb
mov
jbe
ljmp
mov
pop
xchg
adc
fildl
cmp
jb
jb
dec
cmpsb
ljmp
inc
in
inc
push
sarb
mov
xlat
push
in
mov
out
movsl
pop
mov
pop
and
testb
out
push
jl
xchg
adc
sbb
outsl
sbb
jb
mov
setnp
jg
negb
test
jnp
add
and
popa
or
xchg
in
add
popw
lret
mov
fs
roll
xchg
jno
aam
xchg
scas
ds
arpl
pop
shll
xchg
and
jno
adc
sub
inc
jae
and
cltd
jbe
nop
pop
lahf
cltd
mov
jns
std
xor
lock
add
mov
pop
popa
rclb
imul
test
ja
bound
push
mov
lcall
sub
imul
bound
insb
shlb
scas
inc
leave
jle
push
push
rcl
xor
lret
add
jnp
push
add
adc
push
cld
xchg
cs
or
pop
rorb
das
ss
lds
out
xchg
insl
dec
add
repz
or
add
xor
aaa
adc
pop
dec
jns
xor
or
mov
mov
inc
mov
out
filds
jmp
or
psubusw
jg
pop
xchg
inc
push
xchg
inc
mov
jbe
xchg
adc
ljmp
imul
adcb
fwait
popf
and
sarb
orb
pop
out
xor
or
and
pcmpgtd
jbe
mov
sub
int3
push
out
pop
push
aaa
pop
mov
fadds
outsb
inc
dec
xchg
add
add
jno
mov
sbb
es
js
or
mov
mov
lds
shlb
dec
aad
mov
xchg
cmp
push
daa
aaa
mov
andl
testl
sti
ret
sub
add
repnz
stos
idivl
adc
xchg
ret
scas
inc
sbb
mov
push
sub
ret
xlat
leave
lods
subps
jae
iret
arpl
incb
xor
sbb
mov
or
aas
popa
or
enter
mov
out
je
jg
out
repz
cmp
out
shlb
push
cmpsl
les
aaa
aaa
jmp
mov
ds
mov
or
icebp
into
sub
mov
das
rol
cmp
jae
int
idivl
and
add
xorb
xchg
mov
sar
add
dec
push
push
outsl
sbb
add
pushf
push
adc
jo
and
mov
pop
push
daa
jb
or
cmp
repz
push
pop
mov
and
pop
cmp
mov
test
xchg
push
mov
mov
loopne
xchg
ret
jl
jg
dec
adcb
stc
xlat
movsl
lea
jecxz
ret
jo
pop
das
outsb
jg
mov
xor
xor
sub
sub
out
lods
jb
xchg
shll
sub
push
rol
or
mulb
xchg
mov
pop
push
test
adc
insl
stos
arpl
loopne
push
jnp
sbb
or
imulb
dec
scas
mov
sbb
mov
push
adc
sub
inc
fcomps
lds
mov
aas
push
pop
or
sub
or
xchg
and
divb
testb
xor
adc
dec
test
aad
mov
lcall
mov
xchg
cld
dec
xchg
mov
adc
xor
addr16
xor
sbb
add
rcrb
test
les
adc
lcall
or
pop
iret
pushf
and
xchg
jae
rorl
inc
jmp
and
jnp
pop
xor
sbb
jle
in
popf
pop
xchg
iret
ret
movsl
mov
mov
xor
inc
clc
pushf
fucomip
imul
xor
lret
sbb
dec
jb
push
cmpsb
and
cmp
dec
test
arpl
inc
dec
xor
stc
cmp
outsb
lret
fstpt
stos
pop
jmp
enter
icebp
aad
lcall
xchg
push
daa
pop
pop
or
mov
mov
jne
insb
mov
aad
shl
pop
int3
adc
xchg
cmp
roll
cmp
mov
cmpsb
in
in
dec
mov
cld
loop
lret
gs
xlat
dec
fs
hlt
dec
pop
xchg
pop
inc
shll
mov
cld
inc
sbb
mov
ja
cmpsl
fs
push
mov
mov
adc
push
je
xchg
bound
xchg
mov
sbb
xchg
pop
sti
scas
dec
push
pop
cmp
ret
jg
push
jae
xlat
pop
in
lret
sub
test
adc
sub
sti
pop
mov
or
push
icebp
push
or
mov
and
fcomps
fidivl
and
xchg
sbb
daa
test
jecxz
add
into
push
bound
sub
dec
xlat
dec
js
push
test
out
adc
pop
in
push
jno
ds
push
jae
pushf
mov
mov
mov
or
out
push
jl
mov
sub
jge
and
xchg
movl
mov
cmc
fxch
pop
jne
xor
shlb
arpl
adc
xchg
insb
cmp
mov
push
lods
push
lds
jnp
mov
into
loopne
in
push
gs
mov
pop
inc
xor
int3
mov
out
leave
fdivrs
clc
clc
bound
sti
jg
mov
xor
out
daa
xchg
jns
out
dec
pop
mov
jno
jle
movsl
and
jo
insb
iret
mov
cmp
idivl
xchg
andl
lahf
jo
lahf
test
xchg
sbb
enter
in
sbb
xor
dec
inc
lret
insl
test
daa
xor
mov
mov
call
pop
cs
cli
stc
stos
jl
call
loope
inc
fwait
js
fs
push
sub
sahf
div
mov
jmp
adc
fsubrs
sub
jb
in
cwtl
pusha
dec
in
adc
inc
incb
scas
mov
sub
and
xchg
dec
dec
lcall
std
test
idivb
xor
jb
fimull
clc
mov
sarb
ss
ljmp
mov
cli
sbb
mov
sub
sbb
xchg
mov
cwtl
and
xor
or
inc
sub
inc
cmp
lret
push
jne
push
loope
inc
push
push
push
mov
sbb
in
cld
xchg
repz
pop
mov
xchg
in
and
repz
fists
cmc
xchg
or
lcall
add
mov
xchg
mov
fwait
lret
dec
adc
in
xchg
orl
and
fs
sbb
inc
push
scas
hlt
lcall
imul
test
mov
sbb
jmp
arpl
in
xchg
mov
xchg
push
shr
inc
repnz
jno
test
xor
add
sub
mov
inc
adc
dec
xchg
out
jns
mov
int3
mov
add
addb
sbb
push
sub
cmpsl
add
imul
and
xchg
outsl
adc
jno
and
das
push
sbb
and
mov
cmovg
dec
enter
jecxz
mov
lock
cmpsl
leave
fnstenv
stos
jns
add
ds
leave
sub
aas
mov
dec
inc
mov
sti
sub
ljmp
clc
dec
xor
pop
shrl
imul
inc
pushf
cmc
adcb
dec
push
in
hlt
xlat
push
xchg
ret
add
enter
nop
test
out
and
jno
or
add
aaa
mov
hlt
scas
fcomip
scas
sub
shr
scas
fnstcw
xchg
pusha
add
jns
and
sti
jo
test
data16
out
orb
jno
popa
ds
popl
mov
das
outsb
sbb
out
clc
push
orb
enter
nop
fadds
clc
xchg
mov
push
arpl
sub
js
cli
jo
inc
jg
repnz
aas
dec
mov
mov
and
jnp
insl
stc
or
or
out
pop
hlt
movsb
mov
mov
test
fmull
jbe
shll
popa
std
subb
ja
xchg
insl
xchg
xchg
cs
and
orps
inc
inc
cmp
mov
pop
mov
fidivrl
jl
and
imul
mov
call
aas
sbb
or
sti
cmp
fs
pushf
pop
mov
mov
test
sub
jg
jnp
jp
stc
stc
lock
iret
mov
fstp
cli
pushf
mov
mov
push
test
mov
xor
dec
inc
push
adc
jae
stos
mov
push
out
xor
jae
and
mov
shl
lods
ja
fs
jge
pusha
rcrl
jp
imul
mov
mov
pop
push
dec
xchg
lahf
mov
insb
sub
lods
jecxz
sbb
into
stos
popf
jl
cmc
hlt
xchg
popf
insl
cwtl
xchg
in
mov
inc
cmpsb
dec
push
inc
and
sbb
addb
push
sub
imul
negb
push
xchg
pop
daa
lods
nop
inc
aam
adc
clc
pause
xchg
std
or
rol
xor
ret
push
std
xor
and
and
dec
push
dec
mov
push
lcall
push
xchg
mov
dec
jg
adc
outsl
inc
arpl
mov
pop
mov
cmp
hlt
lods
testl
insl
and
xor
sti
pop
mov
insb
leave
jge
jl
mov
daa
mov
push
pop
mov
nop
push
add
jg
std
or
push
hlt
shl
nop
pusha
stc
sub
sbb
mov
ret
cmp
dec
mov
nop
lahf
sbb
pop
rolb
or
sub
je
mov
insb
fmuls
cwtl
ret
pop
mov
mov
aam
mov
mov
enter
push
add
and
stos
cmp
out
aad
fildl
jmp
testl
enter
or
jecxz
pop
call
sbb
or
push
jbe
loopne
jne
cmp
fs
test
inc
mov
shr
dec
js
sbb
call
test
lea
inc
cmp
jge
ret
or
out
pop
mov
ss
das
sub
add
mov
fidivrs
pop
shlb
js
leave
mov
imul
jmp
mov
cmp
ja
push
ja
cmp
mov
mov
fnstenv
adc
dec
stos
cmp
scas
dec
and
sub
dec
xlat
or
out
push
push
or
in
icebp
scas
pop
dec
adc
arpl
les
sarb
dec
jge
loop
push
sbb
cli
add
mov
mov
pop
hlt
xor
pop
sub
sahf
fbld
ss
xor
js
or
adc
xor
cmp
cld
xor
pusha
dec
lea
mov
in
enter
dec
aad
adc
out
stos
stos
xchg
ja
mov
pop
xlat
xchg
jmp
lock
int
jmp
lret
jmp
dec
int
es
cld
jle
adc
test
dec
cld
xchg
ss
stos
sub
nop
xchg
mov
sti
movsb
jbe
gs
jmp
aas
popf
inc
data16
es
icebp
jl
insb
nop
nop
enter
jmp
sub
in
scas
push
mov
sub
in
fiaddl
xchg
std
xor
outsl
push
fxtract
in
mov
stc
xchg
into
sub
fbld
les
fimull
fs
cmp
push
test
daa
cli
mov
jl
js
mov
pop
clc
xchg
push
scas
lret
imul
int3
ret
inc
push
fwait
xchg
mov
popa
cld
sbb
lods
xor
clc
pop
and
mov
pop
lahf
push
popf
mov
ret
mov
daa
jge
in
pop
lret
inc
inc
mov
mov
ja
cmp
clc
mov
cld
lock
and
sbb
ds
cld
mov
xlat
or
ffreep
sub
insb
inc
shll
mov
mov
push
adc
sub
inc
mov
nop
fldenv
adc
ljmp
lcall
loopne
or
sbb
jns
xor
jne
stc
cmp
jae
adc
dec
imul
inc
push
xor
cli
cwtl
mov
inc
sbb
pop
cmc
addl
movsl
pop
leave
fmull
movsl
int3
std
cmp
pop
adc
mov
movsb
les
in
out
rcr
pop
mov
lret
cli
jbe
mov
cs
aaa
ds
xchg
mov
pop
pop
or
inc
add
and
mov
fwait
sti
arpl
cmpsb
ret
test
lods
and
jl
adc
or
fucomip
dec
mov
insb
notb
mov
fldt
repz
and
push
add
mov
int3
pop
imul
add
pusha
hlt
sti
adc
ss
xor
mov
sbb
inc
or
sbb
and
jp
dec
push
xor
addr16
sbb
fisttps
jg
pop
or
sub
leave
loope
imul
xor
pushf
sbb
sbb
push
sti
inc
mov
in
mov
and
into
popf
fidivl
pop
rcrl
sub
gs
mov
or
cmp
mov
pop
pop
test
xor
cmpb
icebp
lds
mov
adc
add
mov
std
aas
push
jbe
ficomps
mov
sbb
clc
loopne
and
sub
or
push
rcrb
pcmpgtb
cmp
leave
mov
sub
or
jo
jge
jno
mov
sub
inc
cltd
sarb
pushf
das
aam
or
push
mov
daa
aas
cmpsb
icebp
mov
push
jmp
stc
jae
mov
stos
pop
sub
jns
push
ror
mov
push
or
stc
sub
mov
jnp
rcrl
adc
or
push
adc
outsb
adc
std
add
loop
jnp
push
loop
in
loopne
movb
or
jle
jno
fcomip
jge
popa
or
mov
icebp
and
push
or
inc
inc
lret
sti
pop
jno
test
inc
mov
and
imul
xor
jbe
das
add
bound
hlt
add
pop
cmp
push
fistps
push
pop
mov
call
xor
lds
sbb
movsb
dec
stc
cmp
or
stos
mov
mov
out
std
add
xchg
scas
jno
sub
iret
mov
stos
dec
fidivrs
dec
fnstsw
movb
inc
jbe
and
sub
pop
mov
fnstcw
dec
ret
cmpsb
out
add
push
sar
int3
mov
add
movb
in
es
es
jno
mov
mov
push
xor
sbb
aad
xchg
shr
out
sbb
push
rcll
adc
jmp
dec
int
insl
pop
xchg
or
and
aaa
add
push
push
fadds
cld
jb
je
push
or
mov
sub
adc
leave
mov
mov
out
mov
inc
test
dec
repz
push
inc
pop
sub
jne
xor
lock
sbb
sub
in
test
push
xchg
add
mov
fdivrl
mov
iret
mov
mov
mov
fs
mov
fildl
lock
bound
insb
pop
push
push
cmp
outsb
dec
scas
xchg
loope
lock
aaa
das
sbb
or
sub
jo
rol
pusha
pop
lods
pop
xchg
pop
xchg
mov
icebp
and
cmp
iret
mov
rcr
lahf
addr16
or
bound
pop
popl
fsincos
mov
mov
jne
add
outsl
mov
lods
lock
fcomi
loop
mov
adc
cmp
push
jl
fcmovne
lcall
dec
push
sbb
cmpsb
cmc
imul
data16
pusha
addb
sti
shll
adc
insl
orb
cld
in
and
inc
mov
int3
and
cli
cmp
ret
cli
xor
mov
sub
call
enter
daa
sbb
inc
testl
daa
cmp
in
movsb
loop
mov
in
cwtl
subl
ds
inc
add
imull
sbb
sbb
jl
or
push
ds
lock
lods
push
jmp
push
test
leave
pushf
aas
or
xor
out
jno
pop
lret
mov
es
push
out
pop
jb
aad
add
ljmp
mov
xchg
int3
stos
shrb
push
ds
lret
rorl
pop
addr16
addr16
gs
push
das
popa
mov
fiadds
out
push
xchg
pop
jle
jmp
fwait
in
popf
test
and
sub
imul
pop
and
xor
idiv
icebp
fisubs
sbb
xor
sub
lahf
jae
daa
hlt
cmc
inc
xor
gs
push
sahf
das
jns
jp
in
dec
loope
mov
cltd
vaddss
jb
je
pop
pop
or
movsb
jbe
loope
jo
cmp
and
add
xor
notl
out
mov
jo
lahf
push
add
repz
int
jle
mov
push
icebp
lcall
mov
fidivs
outsb
or
or
loope
insl
loope
fnsave
add
mov
es
jmp
and
dec
js
xor
mov
add
roll
aam
cld
xor
pop
jge
aaa
dec
sbb
popf
ret
mov
xor
xchg
sbb
test
sbb
sbb
inc
sbb
sarl
jbe
fwait
test
mov
scas
bound
cmp
inc
shlb
jge
les
jmp
sarb
fsubrs
xor
rorb
cmp
stc
sarl
pop
sub
sar
icebp
jl
test
mov
xchg
inc
cmc
adc
jg
stos
pop
in
imul
test
in
push
repz
and
rorb
mov
inc
push
bound
fsubl
fdivrs
jl
movsb
mov
dec
add
out
cmpsl
addb
incl
pop
xor
inc
push
loopne
and
and
push
inc
mov
jle
orb
ljmp
out
test
imul
shr
sub
outsb
test
imul
mov
cwtl
mov
or
xorb
mov
jns
adcb
push
fnstsw
cmc
sbb
ret
aam
fwait
popl
hlt
jne
xor
mov
sti
mov
es
cmp
xchg
xorl
xchg
jp
mov
loope
fisttpll
pusha
dec
inc
adc
cmpsb
lret
push
int3
mov
clc
jb
test
insl
xorl
add
jp
mov
inc
test
cmp
or
xor
mov
inc
repnz
sbb
test
pushf
mov
inc
test
adc
out
mov
fsubrl
shrl
test
das
or
mov
mov
xor
dec
dec
ss
push
mov
lret
out
das
int3
jecxz
cmpsb
lods
inc
push
inc
std
mov
add
out
pop
sbb
xchg
dec
bound
add
pop
fstpt
inc
js,pn
push
jb
sbb
lcall
aaa
cmp
xor
jmp
loopne
xchg
jp
cmc
sub
jle
jl
int
mov
push
scas
outsl
sbb
popf
xchg
jo
popa
push
mov
add
fs
mov
mov
mov
push
scas
cmp
dec
cmpsb
mov
test
pop
jbe
scas
jo
cmp
mov
call
or
or
repz
adc
push
repnz
jb
inc
mov
xchg
cwtl
inc
idivb
cmp
outsb
cmp
in
adc
ret
nop
popf
mov
aad
mov
and
sub
adc
xchg
movq
xchg
or
xlat
ret
mov
in
lds
fwait
cmp
dec
into
mov
dec
fwait
inc
xchg
add
icebp
popf
push
cld
push
push
insl
pop
xchg
loop
repnz
mov
imul
xlat
ret
lahf
mov
les
or
dec
pop
mov
mov
lret
sahf
push
insl
in
xchg
fs
aad
push
mov
push
pop
push
sub
inc
movsb
loop
pop
inc
movsl
push
adc
fidivl
push
inc
push
pop
jmp
pop
in
dec
xchg
jns
insl
bound
out
aad
jl
in
mov
repnz
scas
push
xor
addb
pop
jl
mov
inc
leave
mov
and
addb
imul
push
push
leave
mov
jo
jo,pt
lock
xchg
repnz
leave
outsl
jbe
cmp
fiadds
jne
pop
ret
movsl
scas
arpl
sahf
jne
push
mov
inc
pop
test
cmpsl
cltd
dec
xchg
xor
xchg
push
pop
out
mov
pop
and
mulb
mov
inc
mov
loope
mov
inc
inc
pop
and
iret
jns
cs
jg
mov
das
jmp
dec
in
pushf
or
add
xchg
mov
pop
int3
into
inc
pop
inc
test
or
test
cltd
mov
mov
mov
xorb
dec
ja
jo
cmpsb
mov
test
out
mov
pop
mov
cld
lods
push
sub
sub
jmp
sub
mov
mov
adc
xor
sub
xchg
icebp
sbb
in
jle
adc
mov
stc
cwtl
adc
out
jnp
clc
cmp
rol
or
mov
and
inc
mov
cld
icebp
scas
out
mov
js
mov
mov
cmp
sbb
movsb
mov
jns
hlt
mov
push
leave
cmp
pop
xchg
sti
and
xor
les
jp
or
jg
mov
and
scas
xchg
in
negb
dec
jmp
loop
dec
add
sub
cmp
stos
inc
mov
stos
lods
dec
dec
mov
rcrb
fs
je
test
xchg
fcomps
xor
stc
xor
mov
test
jae
adc
mov
dec
mov
add
cltd
mov
cmp
stc
stos
dec
mov
push
push
xor
outsb
push
in
or
mov
fiadds
arpl
adc
mov
adc
dec
mov
mov
add
inc
push
scas
or
andb
add
hlt
dec
mov
in
shll
les
or
or
cmp
jo
push
jo
into
cmp
jmp
push
mov
mov
cmp
mov
call
jmp
fists
inc
scas
mov
mov
pop
scas
inc
inc
in
cmc
int
dec
jns
and
aas
sbb
xor
sub
inc
sbb
dec
sbb
mov
stos
inc
push
mov
mov
sbb
push
jno
sbb
pushf
movb
push
stc
out
movsl
inc
ficoml
cmp
in
lods
xchg
mov
rcll
ljmp
mov
repz
ds
mov
add
dec
les
dec
push
mov
xchg
es
movsl
sub
testb
sub
aaa
xor
cmovnp
sub
pop
lock
lods
lods
mov
shrb
xchg
ss
adc
inc
int3
enter
aad
mov
pop
sub
imulb
mov
outsb
inc
xor
mov
outsb
cld
dec
les
pop
inc
scas
jnp
dec
imul
mov
in
cmp
pop
daa
adc
xchg
mov
inc
pop
xchg
movsb
add
insl
xor
mov
das
lret
dec
cli
mov
rcl
and
dec
idivl
es
pop
pop
lods
enter
ds
dec
adc
lods
insl
and
and
cld
insb
call
adc
int
fdivrs
scas
daa
fldl
loopne
xchg
inc
test
insb
pop
sbb
aaa
aaa
call
mov
in
sbb
jo
push
pop
push
cmp
push
sub
arpl
add
ss
shlb
inc
xchg
call
pushf
mov
sti
cmp
add
pusha
aaa
xchg
or
aaa
filds
jns
in
fildll
insl
in
les
pushf
sub
cmp
pop
loopne
mov
stc
cld
shlb
jbe
cmp
or
pop
adc
jnp
int
lret
add
test
pop
mov
sub
test
pop
jg
adc
xor
cmc
or
mov
pop
push
mov
cltd
or
mov
mov
inc
xchg
adc
or
inc
mov
jno
cmpsb
push
data16
xchg
orb
and
push
aas
pusha
ds
cld
inc
xor
mov
and
fbld
inc
pop
xchg
jge
bound
int3
test
into
test
dec
xchg
push
xor
fstps
xchg
out
jge
lahf
fwait
sub
das
cmpsl
cmp
sti
pushl
and
movsl
adc
jmp
fiaddl
rcrl
push
insb
test
into
pushf
or
lods
mov
dec
xor
repnz
adcb
or
fcmovb
std
pop
xchg
or
scas
add
loope
xor
mov
shr
xchg
fisubrl
xchg
js
imul
stos
lahf
aaa
mov
adc
daa
dec
call
pop
pop
adc
xchg
std
roll
rcr
inc
cmp
ret
aas
outsb
int3
and
hlt
mov
andl
push
loopne,pn
push
fmul
sbb
aad
leave
sbb
add
stc
in
int
mov
push
jb
xchg
push
jmp
je
xchg
mov
lahf
shl
xchg
add
mov
mov
js
push
outsb
lcall
out
call
push
ljmp
pusha
sbb
cmp
jb
je
jae
rcrl
call
outsb
add
jne
cld
inc
dec
sbb
mov
jle
adc
test
sbb
dec
push
inc
addr16
or
hlt
or
js
and
clc
lock
pusha
mov
fisttpll
aad
add
mov
add
orl
xchg
dec
in
jns
cwtl
and
loope
ss
in
scas
sub
sub
jmp
ds
sbb
or
lods
mov
add
lcall
out
push
jle
sbb
and
mov
into
adc
insl
jne
stc
sub
vcvtss2si
mov
cmp
mov
pop
fnstenv
sbb
mov
xor
stc
sub
leave
inc
pop
adc
test
leave
stos
je
mov
jb
pop
nop
dec
mov
or
lea
scas
ss
push
sbb
movsb
jno
popa
inc
divb
lret
int3
xchg
mov
out
sub
ds
movsb
cltd
adc
scas
call
jl
xor
insl
sbb
jnp
add
and
xchg
cmp
test
push
fildll
jbe
jl
js
xorl
or
fxch
ss
add
add
fiadds
fildl
ss
sbbl
push
xor
cwtl
ds
cmp
xchg
int
mov
leave
stos
cmp
or
icebp
fldt
in
sub
inc
jae
pcmpgtd
cmp
mov
adc
dec
xor
in
out
and
jns
cmc
lea
dec
jb
mov
repz
fistps
push
aaa
shrl
sbb
dec
shlb
xchg
ret
pop
jl
stos
cmp
add
adc
lock
push
into
insb
lahf
add
aad
xor
mov
inc
cwtl
xor
lock
cltd
nop
xor
in
test
or
pop
or
idivl
push
call
adc
test
inc
dec
pushf
cmp
push
mov
mov
cmp
jno
and
lods
arpl
mov
mov
scas
mov
pop
xlat
scas
xchg
inc
cmp
xchg
and
cmc
movsb
stos
inc
loope
mov
lcall
ret
jp
fldl
sbb
dec
adc
pop
movsb
cmp
mov
mov
or
push
cli
sbb
popf
insb
mov
test
mov
add
mov
sub
inc
xchg
stos
in
lds
jmp
xor
add
aam
pop
push
scas
in
cmc
xchg
dec
push
out
jno
outsl
jo
lret
mov
push
jo
loop
xchg
xchg
lea
mov
mov
mov
outsb
pop
fs
outsl
sub
lock
mov
push
dec
or
gs
fcomps
stc
movsl
cmp
sbb
push
mov
lods
aam
ss
daa
sbb
pop
adc
jg
fxtract
and
mov
mov
mov
dec
and
mov
fwait
daa
stos
pop
sub
xchg
mov
pusha
scas
dec
fildl
mov
aam
xchg
add
in
test
aaa
cmpsb
mov
inc
cld
inc
fstpt
inc
jne
push
bound
or
sbbl
shl
or
jp
ret
out
in
adc
push
jbe
cmp
dec
mov
bound
addl
pop
mov
sahf
outsl
stos
mov
sub
cld
jle
int3
std
mov
adc
addr16
add
mov
sahf
mov
cwtl
xor
outsb
adc
cmp
nop
cwtl
mov
mov
popf
sbb
stos
inc
test
in
pop
sub
mov
dec
fcoml
adcl
adc
sahf
hlt
push
push
es
push
cmp
bnd
jl
adc
sbb
cltd
adc
push
xor
dec
insl
sub
imul
movsl
test
cmp
ret
dec
and
xor
xchg
push
jno
xlat
fidivrs
in
gs
sbb
enter
pop
mov
or
pop
lcall
cwtl
xor
in
lret
ljmp
ret
add
ljmp
fucom
fucomip
call
leave
jo
xchg
fnstsw
dec
shrl
dec
rcr
aaa
les
stc
jmp
xchg
push
pusha
xor
dec
jb
std
mov
jp
rorl
lods
ss
xlat
jae
xchg
mov
andb
sahf
pusha
leave
jecxz
adc
les
pop
pop
into
push
mov
es
lcall
mov
cmp
ds
or
hlt
clc
jp
xchg
xchg
xor
loop
push
sbb
add
jae
mov
inc
xor
scas
or
cmp
adc
and
sbb
pop
and
dec
negb
aas
test
nop
xchg
cpuid
repz
inc
and
fdivrs
jae
jno
adc
sahf
mov
pusha
insl
loop
icebp
sub
and
pop
lods
mov
push
mov
sbb
xor
and
lret
dec
dec
fmuls
jno
mull
outsb
ret
ljmp
xchg
jns
fs
pop
loop
inc
sbb
dec
pop
in
lcall
xchg
popf
dec
mov
jnp,pt
orl
in
mov
call
xor
sub
mov
dec
xchg
xchg
clc
xor
xchg
int
fimuls
dec
jns
shlb
loope
outsb
sbb
inc
adc
push
inc
xor
rolb
fs
mov
aad
and
movsb
add
ljmp
cld
iret
add
std
aas
std
or
add
cwtl
aas
mov
or
sbb
jae
jbe
cwtl
dec
cmp
xchg
lods
xchg
mov
push
jecxz
insb
ljmp
stos
shr
cmp
fidivrl
mov
jle
and
mov
ret
sub
jae
adc
pusha
sub
adc
in
pop
xor
sbb
cmp
aam
and
push
xchg
leave
and
out
ficoms
jmp
jno
lods
xchg
in
sbb
int3
xchg
sub
jo
in
repnz
xlat
and
imul
mov
xchg
push
xchg
sbb
xor
out
imul
out
xchg
ss
into
cmpsb
push
stc
mov
push
cmp
sub
popa
sub
aaa
push
hlt
sbb
jecxz
gs
add
fsts
jecxz
xchg
insb
and
and
sbb
repz
gs
fucom
sub
js
and
mov
push
inc
sub
add
mov
mov
xchg
ds
xchg
mov
jp
pop
mov
fsts
nop
fcoms
lods
dec
mov
push
xchg
jno
ftst
xchg
sbb
or
out
jge
push
sahf
pshufw
mov
xlat
movsl
and
xchg
sub
sub
pop
adc
iret
or
repz
enter
mov
stc
shlb
inc
pop
adc
or
xor
xor
out
mov
jle
in
mov
addr16
adc
add
movsb
adc
repnz
cmp
xchg
enter
and
jp
jno
pushf
cmp
rcll
push
xchg
mov
sbb
sbb
test
divb
or
push
mov
bound
pop
daa
insl
and
xor
out
and
mov
gs
jge
roll
in
mov
mov
inc
mov
pop
jmp
cwtl
pop
hlt
mov
push
sub
sub
mov
repz
aaa
loopne
pop
movsb
ljmp
shlb
popa
xor
stos
out
cmp
push
inc
int
std
test
push
faddl
lcall
mov
aas
cmpsb
adc
arpl
sub
sbb
sbb
xor
push
data16
aaa
cmp
enter
xchg
ljmp
sub
int
ficoml
inc
mov
popf
and
repz
gs
loop
push
mov
jl
push
mov
movsl
lcall
sbb
aam
sti
or
adc
xchg
push
push
bound
sub
ljmp
gs
stos
aam
std
push
inc
addl
xlat
mov
les
add
and
jmp
and
js
js
cltd
jnp
xchg
daa
cmpsl
inc
test
adc
loop
pop
mov
fnsave
loop
movsl
adc
add
sbbb
popf
jmp
lods
dec
call
add
ds
add
sbb
mov
imulb
fildll
fsts
adc
cld
in
xchg
push
fadds
mov
movsl
dec
outsl
insl
or
data16
jecxz
xor
jle
mov
jns
into
push
xchg
ret
pop
shrl
sbb
stos
mov
lods
lret
mov
ret
jbe
dec
clc
lods
loopne
push
adc
and
mov
jle
aas
les
fdivrs
in
jmp
inc
fsubrs
out
inc
adc
in
inc
popf
jmp
nop
or
jbe
dec
iret
mov
test
test
push
insb
jg
cmp
pushl
cmp
movsb
pop
or
pop
nop
and
scas
sbb
nop
shrb
gs
test
lods
xchg
xor
popf
mov
push
in
scas
sub
es
adc
pop
xchg
iret
dec
pop
and
fucomi
divl
push
fwait
psraw
jb
adc
push
clc
jle
loope
mov
enter
xchg
fisttpll
jnp
sub
or
jp
push
pop
adc
push
push
cmpsb
cmp
sbb
je
pushf
shrw
fcmovu
stos
stos
inc
mov
add
push
xchg
scas
mov
int
imul
or
fs
ss
imul
fst
cmp
sbb
xchg
fdivp
push
sbb
pop
add
cmp
pop
xchg
cmp
adc
rcr
popf
xchg
or
and
out
popf
push
inc
in
dec
push
cmp
pop
leave
arpl
test
cld
stc
add
sti
std
sub
or
fcompl
pusha
cmp
lds
daa
loop
dec
data16
cmp
ljmp
mov
cld
test
mov
xor
mov
dec
es
ss
inc
es
sbb
aam
xchg
and
dec
mov
mov
or
xor
das
push
jns
bound
jle
cmp
dec
mov
dec
or
adc
mov
inc
dec
inc
or
pop
sub
icebp
aam
pop
mov
in
adc
ret
arpl
sbb
add
push
ror
imul
adc
mov
insl
fwait
mov
xor
and
add
add
gs
mov
test
pop
inc
idivl
mov
inc
push
dec
mov
cli
mov
bswap
jp
or
mov
and
pop
daa
jl
inc
dec
cmp
or
call
ss
xchg
in
jl
call
push
clc
dec
mov
cli
xor
movsb
mov
out
into
repz
inc
enter
push
mov
add
adc
pop
mov
dec
lock
mov
in
sbb
ret
movsl
xchg
insb
or
lds
int3
jns
lea
jg
mov
je
pushl
call
sub
out
and
test
sbb
inc
lods
popa
int
add
lds
pop
jle
xchg
mov
pop
std
std
inc
adc
lahf
pop
aas
xor
movsl
push
add
adc
add
xchg
rclb
arpl
mov
mov
or
int3
push
ds
das
pop
push
cmpsl
fcmovnb
sub
dec
in
inc
movq
fcomp
and
subl
jge
clc
mov
push
ficoml
testl
jl
insl
jp
and
cmp
sar
lret
xor
insb
dec
sbb
int
xor
das
sysenter
int3
pushf
mulb
aaa
jb
mov
push
cmp
dec
sti
jo
push
add
cmp
cmp
rol
mov
pop
test
fcomip
xor
call
and
mov
lret
xchg
inc
dec
fs
aas
dec
in
mov
lock
mov
mov
mov
mov
stos
cmpb
enter
xor
mov
jg
es
sub
cmp
xchg
stc
rorb
stc
insb
lods
sti
cmp
and
fcomi
push
or
into
sbb
mov
mov
dec
mov
xchg
mov
lret
push
push
lods
in
xchg
mov
test
lods
gs
jae
and
add
mov
pop
lea
ret
leave
mov
loope
mov
out
mov
nop
orl
sbb
mov
pop
mov
adc
adc
je
jge
add
push
dec
outsl
movb
push
in
pusha
in
xchg
jmp
inc
jnp
dec
adc
dec
mov
in
jle
push
sbb
enter
xchg
testl
adc
out
lods
lret
adc
or
pop
ret
ds
mov
sbb
mov
repnz
cmp
sub
jns
adcb
pop
pop
jne
leave
fs
push
lahf
sbb
cmp
xorl
fs
pop
mov
pop
mov
adcl
hlt
addl
cmc
cltd
jae
repz
test
mov
sbb
add
stos
inc
or
rcrb
mov
loopne
lods
inc
or
adc
shlb
fsts
loopne
notb
xchg
fldln2
test
cmpsl
jp
sbb
add
std
addl
push
movsb
or
mov
mov
bound
fdivr
mov
or
ljmp
adc
add
adc
lret
insl
clc
sbb
jno
lret
aam
push
sbb
jecxz
add
mov
jb
inc
sbb
icebp
mov
in
jno
adc
lret
sub
xor
jne
pop
loope
xchg
add
xor
adc
fcomps
addr16
xor
inc
shr
cmc
lahf
sub
xor
loopne
mov
cmp
lods
ljmp
sub
push
jo
and
lret
movsl
adc
push
es
lods
xchg
inc
mov
or
push
inc
xchg
daa
shrl
cmc
add
mov
inc
jnp
dec
ljmp
sbb
cli
sub
sbb
fisttpll
xchg
pop
outsl
xchg
inc
xchg
mov
enter
lahf
sub
test
mov
call
pop
movsl
jns
call
and
fisttpll
iret
mov
aas
dec
mov
sub
movsl
jb
fistps
push
push
pushf
into
cwtl
out
or
sbb
popl
add
push
pop
jmp
data16
and
lods
adc
in
mov
dec
sub
dec
mov
add
inc
cmpsb
insl
movl
int
repz
and
push
sbb
mov
test
adc
inc
inc
fadds
cli
ss
sub
dec
xor
mov
ds
sub
int
xor
mov
ret
push
cmc
in
dec
in
xchg
sarl
adc
adc
int
cltd
jle
jbe
sbb
jno
cmc
stos
mov
sbb
cmp
or
outsl
xor
imul
cmpl
xchg
ds
xchg
movzwl
sahf
out
mov
test
lcall
faddp
pop
jne
pop
push
push
loope
aaa
cltd
shrb
pop
icebp
cmp
mov
cmp
jmp
in
jecxz
jl
add
ficoml
pop
addr16
cmpsl
outsb
mov
leave
mov
pop
mov
add
fbld
jl
shl
sub
out
push
xor
adc
push
inc
pop
inc
xchg
inc
cmp
sbb
mov
aam
xor
push
les
push
push
scas
divl
pop
loope
mov
addb
inc
in
leave
add
loopne
cmpl
jbe
jne
mov
and
popa
sarl
lret
or
pushf
inc
jae
xchg
shl
scas
pop
ret
jp
jecxz
jmp
lods
sahf
mov
sbbl
and
dec
and
dec
adc
sahf
daa
jg
les
jmp
aad
aas
sahf
rorb
insl
sbb
daa
test
xchg
jmp
stos
outsb
or
cmp
loopne
xchg
call
rolb
sahf
push
or
les
add
or
decb
dec
lret
cltd
les
mov
fsubl
push
pop
out
xchg
add
push
vhsubps
scas
mov
lods
filds
push
push
mov
mov
ret
add
scas
das
fcmovnbe
rol
and
dec
push
mov
jno
icebp
ficompl
or
xorl
xchg
fcom
into
std
mov
mov
mov
sub
sbb
mov
add
sbb
cmp
push
sub
out
xor
adc
mov
mov
cld
test
mov
stos
mov
loope
loope
push
lahf
popa
xchg
cmc
ffree
pop
add
popf
and
adc
push
cs
push
loopne
push
or
xchg
adc
xor
loopne
pop
jge
repz
movsb
sub
cmp
pop
movsl
sbbl
add
call
les
icebp
jnp
pusha
sbb
xor
ss
shrl
and
testb
xchg
movsb
adc
inc
dec
or
fimull
repz
cwtl
mov
mov
repnz
gs
cmp
cs
mov
aad
or
pop
xchg
or
mov
shll
or
adc
adcb
xchg
xchg
shl
ret
in
sbb
inc
ss
mov
mov
pushl
push
mov
mov
aaa
gs
rolb
xlat
xor
je
pop
sub
mov
gs
movsl
sbb
stc
jp,pn
push
adc
sub
or
xchg
xor
cmp
dec
leave
sub
repz
in
mov
lret
mov
cmpsb
mov
and
sbb
out
outsb
inc
sub
aas
sbbl
cmpsl
loopne
inc
lahf
leave
sbb
aam
mov
fldenv
adc
out
add
bound
inc
inc
bound
cmp
pop
lods
jg
repnz
push
jnp
xor
sub
inc
out
cld
imul
pop
add
out
loopne
and
insl
sbb
xchg
push
out
push
int3
xor
sbb
xchg
dec
rcrb
mov
sub
dec
cmp
movsb
push
jbe
mov
xor
or
scas
je
insb
popa
or
xor
mov
sahf
mov
cmpsb
mov
fidivs
add
dec
jl
testl
xor
pop
jnp
push
or
mov
je
stc
or
andl
xchg
cmpsl
push
sub
je
mov
in
repz
mov
andl
inc
cltd
pop
mov
hlt
mov
es
daa
inc
jecxz
or
inc
stos
add
and
out
xchg
or
mov
ret
xor
mov
jle
add
int
add
fisubrs
adc
push
jg
add
inc
and
xor
dec
das
fbld
push
repnz
insb
or
jbe
mov
sub
pusha
lahf
inc
xchg
lret
mov
ja
pop
pop
insl
out
jbe
cmpsl
sub
push
rcl
imul
out
mov
inc
dec
andl
popf
and
rol
pop
aaa
sbb
nop
jmp
push
imul
adc
dec
insb
and
or
inc
mov
add
mov
dec
push
cmp
cmp
xchg
aas
jo
cmp
fs
or
movsb
repz
shll
xor
pop
xchg
mov
loope
or
cmp
mov
dec
imul
and
dec
je
dec
mov
cmp
loope
sub
mov
dec
aaa
fnstsw
xor
loopne
iret
push
pop
out
sub
and
pushf
rolb
ljmp
sbbb
lock
mov
or
nop
gs
cmp
jecxz
aas
pop
adc
add
xor
pop
out
loope
and
ljmp
mov
cltd
das
jmp
push
in
cmp
pushf
and
sti
dec
dec
mov
pop
push
enter
dec
fists
pop
test
adc
vmread
mov
cld
cli
mov
cli
or
mov
clc
mov
inc
mov
out
rorb
xor
ficomps
adc
pop
jae
mov
int3
push
fs
rorb
inc
mov
push
pop
jmp
jb
adc
loope
scas
movsl
cmp
popa
out
jecxz
cltd
loope
mov
test
je
mov
int3
inc
push
mov
loope
sbb
ficomps
jne
mov
ret
push
dec
xchg
and
cld
int3
pop
rcl
call
sbb
inc
jne
mov
mov
and
pop
mov
in
cmpsb
sub
and
aad
mov
push
scas
xor
insl
test
inc
or
pop
inc
arpl
jb
push
sar
lea
popa
jno
movsl
xor
dec
mov
xor
fdivrs
adc
mov
lock
add
dec
add
xchg
bnd
xchg
sub
pop
add
in
lods
mov
cs
and
ret
lret
sbb
pop
ljmp
lods
push
aaa
popf
jnp
js
lahf
cltd
into
into
addr16
inc
push
shlb
xchg
jl
arpl
jge
ljmp
and
in
lock
mov
xchg
loop
push
inc
lods
stc
dec
xor
mov
xchg
add
sbb
dec
fwait
cmp
push
lret
popf
sub
mov
dec
and
dec
mov
imul
xor
faddl
scas
pop
xor
sarl
nop
movsl
mov
push
jne
pop
mov
pop
fsubl
mov
mov
pop
jnp
mov
mov
push
inc
push
popa
mov
adcl
jns
adc
mov
pusha
jne
scas
jnp
loope
cli
orl
shl
subb
cmp
jns
jae
leave
jl
movsl
lods
mov
xchg
mov
sarl
outsb
xor
jne
add
jne
out
rorb
icebp
cmpsb
outsl
xor
fwait
jae
xchg
mov
jne
xor
mov
inc
cmpsl
jg
out
jno
dec
nop
in
adcl
pop
aaa
sarb
push
sub
adc
inc
add
movsb
cmp
lcall
cmpsb
or
add
inc
negl
lock
mov
jp
xor
jns
popf
push
inc
sti
add
fmull
push
in
lock
cmpl
incb
inc
push
sbb
and
gs
mov
lret
clc
xchg
pop
aam
jmp
outsl
xchg
sbb
mov
pop
pop
enter
jl
rclb
mov
divl
ds
icebp
stc
cmp
gs
pop
jbe
sahf
cld
test
sti
mov
or
push
shlb
adc
negl
enter
mov
ficomps
sbb
push
push
fnsave
mov
cmp
inc
rolb
adc
out
jecxz
or
cs
push
lea
sub
int3
aad
mov
jle
aam
enter
sbb
cmpsl
pop
adc
vpsubq
ss
rcl
mov
cmp
mov
lcall
pop
scas
ljmp
mov
xchg
add
inc
call
outsb
outsb
sub
inc
notb
adc
dec
pmuludq
push
or
mov
idivl
pushf
xor
test
mov
sub
aaa
pop
cmp
aam
ljmp
popf
push
mov
loop
push
pop
cmp
sub
rcll
fcomp
pop
jge
lea
lret
sub
xor
bound
repz
mov
fstl
push
jmp
pop
jge
dec
adc
int3
out
nop
jmp
fidivrl
cmp
roll
pop
pop
mov
adc
stc
push
mov
add
jo
xchg
inc
frstor
adc
sbb
gs
ljmp
mov
push
adc
loopne
ja
cmp
cmp
mov
rcl
fdivs
lods
xor
jnp
lldt
push
dec
mov
lret
xorl
popa
push
jbe
pop
ljmp
loop
adc
sub
jmp
stos
cwtl
sbb
xchg
xlat
xor
jecxz
fildl
in
dec
pop
pusha
cwtl
pop
xchg
inc
and
leave
popa
popa
mov
mov
ficoml
push
add
cltd
mov
outsb
shl
xchg
enter
cld
xchg
outsl
inc
adc
pop
or
cmp
scas
cmpsb
push
in
loop
xor
fwait
popa
adc
fcompl
pop
ljmp
sbb
inc
lods
orb
loope
mov
adc
adc
add
call
mov
and
out
repz
arpl
fsts
pop
clc
pop
mov
clc
in
ret
sub
repnz
mov
sbb
mov
cmp
pop
icebp
test
popf
dec
mov
int
js
push
test
sub
es
and
shll
mov
inc
int
mov
xor
jmp
mov
adc
pop
cmp
adc
in
in
loope
js
mov
xchg
cmp
icebp
inc
jg
clc
mov
sub
jmp
mov
popa
fcoml
inc
fistl
daa
lret
sbb
and
iret
cmp
lods
imul
push
add
test
cmp
mov
in
cmp
ds
test
sbb
sub
inc
jmp
cltd
adc
add
in
lds
add
mov
push
cmpsb
insb
push
add
fadd
sahf
sbb
sbb
hlt
dec
adc
fdivl
addl
adc
pop
stc
dec
xor
pop
adc
adc
cmp
add
inc
xlat
sub
int3
mov
cmpb
pop
fnsave
mov
xchg
and
shl
int3
jno
xchg
jecxz
mov
xor
jmp
in
movsb
jg
mov
jecxz
scas
repz
xchg
out
fs
mov
xor
mov
mov
dec
push
lods
sbbb
data16
jg
fisubrs
out
sti
mov
arpl
sub
movsl
xchg
vmovlpd
jmp
sbb
imul
push
and
fisubrs
repz
and
cmp
xor
mov
rolb
mov
cmpsb
loope
call
pop
jno
dec
xor
daa
push
addr16
fcoml
test
jne
imul
sub
inc
sbb
subb
or
xor
iret
pushf
xor
rorb
std
icebp
pop
xchg
xchg
mov
xor
loop
cmp
loopne
jno
pop
test
push
jle
adc
and
pop
add
and
push
push
cmc
and
out
in
pop
jl
cmc
aaa
stos
xor
jecxz
jbe
sbb
dec
xchg
or
adc
sbb
scas
adc
inc
cmc
or
js
in
jnp
mov
lret
jno
in
pop
push
cmpsl
sub
push
sub
cmp
dec
mov
and
out
push
call
push
jnp
iret
insb
push
enter
lock
cmpsl
jno
mov
and
push
rorl
in
int3
insl
cmp
mov
test
stc
xchg
int
dec
jge
outsl
or
out
dec
jmp
clc
pop
add
push
fstl
cmp
ja
fldt
pop
mov
frstor
inc
test
int3
adc
pop
adc
and
xor
ret
popa
jns
inc
outsb
sub
aad
test
mov
aaa
and
scas
cmp
cmc
into
and
push
push
movl
mov
pmulhw
mov
push
popf
stc
hlt
sub
aas
fldt
sub
mov
cmp
cmpsl
iret
xor
fdivrs
mov
sub
loopne
push
mov
sbbb
adc
xor
enter
mov
sub
repnz
lock
mov
outsl
out
icebp
xor
lahf
jp
push
imul
xor
mov
cli
xchg
xchg
js
jo
sub
jecxz
outsl
loopne
or
mov
lret
lret
xor
sbb
je
ret
xchg
mov
call
into
insb
mov
out
xlat
mov
inc
mov
rcr
adc
insb
hlt
imul
cmp
xchg
clc
test
jmp
lea
out
dec
sarl
test
imul
insb
testl
subl
popa
int3
rcrb
xor
xchg
fiaddl
xchg
sbb
imull
dec
jae
push
mov
xor
mov
pop
and
aad
js
outsl
clc
and
repz
enter
mov
divl
mov
or
jle
test
mov
shrb
or
jmp
arpl
mov
call
addr16
inc
mov
aad
shlb
daa
mov
aad
push
inc
rcll
pusha
or
fmulp
fstpl
imul
fwait
mov
ss
cli
fs
inc
mov
mov
mov
xchg
pop
pop
repnz
xor
or
sbb
xchg
fstpl
mov
stc
idivb
test
gs
or
xchg
sbb
data16
shll
jle
cmpsl
aam
test
mov
lret
jbe
popl
pop
shr
aad
stc
jecxz
sbb
add
mov
ret
shlb
ja
pop
jp
fidivrs
inc
adc
inc
dec
mov
dec
cltd
in
jecxz
loope
repnz
rcl
pop
call
sbb
mov
cs
es
sbb
outsb
addr16
xor
mov
sbb
aad
fwait
repz
pop
or
cmc
es
and
cmp
lods
addr16
push
cmp
test
shll
xor
movsl
daa
add
mov
subb
xchg
cs
lret
add
xchg
pop
xchg
and
and
jl
cmpsl
fs
mov
ds
or
rolb
rcll
daa
negb
stos
sbb
push
inc
arpl
add
adc
mov
or
push
out
stos
ss
mov
inc
push
sub
push
popf
mov
sar
aam
stos
jb
push
icebp
jmp
dec
lods
sub
pushf
rcrl
inc
fs
adc
stc
mov
js
push
out
push
and
pusha
and
daa
lret
adc
jbe
stos
cmp
sbb
aas
mov
enter
cmp
insl
xchg
orl
dec
arpl
ja
out
icebp
inc
mov
iret
and
mov
jge
int
add
movsl
popf
adc
cmp
push
add
or
test
jmp
mov
data16
and
jno,pn
gs
mov
fcompl
jne
testl
adc
mov
ret
mov
loopne
mov
rcr
fdivr
outsl
mov
push
in
mov
or
clc
adc
pop
jb
addr16
test
or
mov
lret
jo
negb
mov
inc
imul
inc
push
push
repnz
and
jmp
enter
ds
mov
pop
adc
scas
addb
sub
subl
aas
cmc
fwait
mov
cmpsb
jbe
inc
adc
dec
jg
lods
cmp
fcoms
sub
pop
stos
ds
pop
xchg
jb
xor
jl
insb
lret
punpckhwd
loope
scas
jmp
mov
xchg
push
movsl
pop
mov
data16
lahf
in
push
jbe
mov
sub
pop
repz
pop
mov
cld
cs
pop
sub
push
dec
sbb
subl
adc
decb
adc
fistpll
out
daa
add
adc
ds
bnd
fcomi
xor
mov
outsb
test
int
dec
ret
and
sbb
mov
fsubrl
call
xchg
pop
pop
fninit
push
lds
xor
push
clc
jb
lds
dec
mov
jbe
mov
xor
jl
in
xchg
jno
incb
andb
in
sbb
std
jnp
mov
mov
pop
rclb
dec
movb
pop
pop
insb
fucomi
cmp
lret
inc
jg
push
out
icebp
addr16
ror
jg
sub
mov
out
cmp
jbe
adc
adc
shrl
jecxz
adc
add
and
sbbw
ret
repnz
data16
int3
outsb
lea
pop
mov
inc
mov
dec
roll
jp
inc
jmp
and
lods
fbld
inc
aad
pushf
pop
xchg
sbb
push
mov
push
fwait
loope
push
shr
cmp
in
andl
pop
imulb
push
sbb
cli
and
call
xchg
lcall
clc
mov
das
add
jae
fs
push
ja
test
add
adc
jl
push
cwtl
sub
push
ret
aam
arpl
das
fcoms
frstor
jo
pop
pop
lret
iret
ljmp
outsl
pop
push
fs
xchg
je
cmc
inc
mov
and
inc
sbb
lds
inc
jmp
jl
icebp
lcall
xchg
adc
das
cmp
add
lock
out
mov
jmp
shll
bound
idivb
sub
push
jae
push
lcall
insb
movsl
adc
push
inc
sbb
mov
pop
leave
adc
stos
xchg
lcall
repz
mov
mov
cmpsb
adc
jle
add
pop
and
iretw
data16
mov
mov
insb
bound
xchg
movsl
cld
ret
adc
divl
aad
push
popa
mov
scas
fsubrs
pop
and
fwait
in
or
fldl
mov
ss
sub
mov
or
mov
jp
inc
jo
aam
xor
or
test
ja
jmp
mov
xchg
xchg
aam
inc
shl
cmpsl
xor
aam
or
out
xchg
repnz
lret
push
adc
xchg
add
shrb
mov
push
lds
jp
scas
subb
sbb
mov
rclb
xchg
fistps
popl
mov
test
scas
push
popa
adcl
test
insl
ss
adc
adc
pop
add
out
mov
dec
xchg
cmpsb
dec
aas
xlat
out
bound
inc
xchg
xlat
xchg
ss
bound
sub
icebp
ficoml
movb
lcall
dec
jle
sarb
xor
insb
into
rorb
push
push
inc
out
loopne
mov
movsb
movsl
xchg
xchg
xor
sub
data16
jle
add
dec
ret
subb
mov
mov
out
test
jg
imul
fmull
aad
lcall
and
out
push
das
lahf
sahf
sbb
dec
sbb
mov
adc
loopne
cmp
nop
jg
jge
lods
jmp
xor
jmp
incb
sbb
mov
adc
mov
or
adc
lsl
daa
into
call
and
push
fdivr
mov
mov
jg
mov
xor
in
rclb
push
test
testl
aam
xlat
leave
aad
cmc
stc
les
imul
test
sbb
mov
mov
or
push
sub
xor
andb
dec
roll
enter
pop
xlat
pop
jp
popf
in
outsb
mov
push
mov
into
bound
xchg
pop
cmp
add
int
daa
push
pop
jmp
pop
cmp
jecxz
lcall
in
dec
mov
push
insl
mov
int
and
testl
push
push
stc
arpl
push
add
lods
incb
stos
mov
mov
inc
fsts
and
scas
jge
add
repnz
pop
xchg
sbb
jnp
cmp
mov
popa
cld
xchg
das
jmp
cmp
mov
sbb
shrb
movsb
out
data16
xchg
lds
mov
sbb
testb
aas
xor
inc
xor
lock
and
xor
jb
or
xchg
mov
pop
xchg
ret
and
movsb
jb
add
sub
pop
das
sub
jno
outsb
addb
das
fnstenv
xor
sub
xor
adc
sub
sbb
leave
jg
test
ret
lret
or
icebp
cs
pop
and
outsl
pusha
inc
test
mull
xor
jno
jb
mov
idiv
test
hlt
icebp
sbb
fisubl
aas
gs
in
sbb
nop
and
pop
push
pop
fistpll
xor
or
bndstx
xchg
sbb
cmp
ficompl
jl
cli
dec
mov
jle
fwait
arpl
adc
mov
mov
in
xchg
gs
jg
lods
gs
mov
iret
rcrl
adc
sub
fnsave
jne
mov
das
es
and
sahf
lahf
js
imul
adc
test
xchg
or
shl
sbb
mov
xchg
loop
cmp
out
mov
nop
add
mov
bound
stc
repnz
sub
ja
popa
push
aaa
call
sbb
push
test
out
iret
leave
adc
loopne
mov
pop
jb
in
lods
mov
aaa
shl
loop
subb
push
inc
stos
inc
sbb
cmp
lea
or
mov
pop
dec
mov
push
outsl
push
pop
cmp
add
mov
add
mov
push
or
shrl
add
xor
arpl
inc
sbb
jg
dec
repnz
dec
and
iret
xchg
xor
jne
push
and
arpl
push
mov
xchg
mov
jae
mov
call
push
dec
push
xchg
adc
xchg
je
int3
add
cld
mov
enter
and
push
dec
in
xor
call
ret
rol
push
xchg
loope
xor
sar
cmp
cmp
push
cmpsb
sbb
jmp
flds
or
sub
pop
jbe
fimull
mov
cltd
inc
push
or
sub
push
mov
xor
scas
pop
pop
repz
push
push
nop
adc
push
arpl
adc
cs
xabort
pop
into
dec
push
popl
test
pop
mov
mov
fnsave
xlat
inc
adc
nop
inc
les
mov
cld
test
imul
and
jecxz
jb
pop
and
movsb
sbb
adc
add
cmpsl
add
arpl
pop
adc
out
pop
push
push
and
into
pushf
pop
add
and
jle
cmp
popa
lret
call
sbb
aas
mov
xchg
aad
and
mov
std
or
ret
lahf
and
mov
add
mov
popf
jg
outsb
mov
ss
cmp
loope
imul
sbb
xor
add
lahf
out
xchg
or
mov
or
dec
mov
adc
inc
shrl
and
repnz
imul
test
fisubs
in
add
inc
xor
addr16
insb
inc
out
scas
mov
test
sub
push
adc
inc
repnz
mov
jne
jno
ja
mov
add
cli
add
std
stos
push
xchg
dec
mov
andl
and
mov
imul
inc
in
mov
push
cmp
in
jp
outsb
cmp
add
clc
or
dec
jg
push
pop
movsl
cmpsb
hlt
jae
pop
mov
sbb
cli
fidivrs
out
and
mov
out
int3
fs
add
scas
fldt
mov
ljmp
pop
pinsrw
je
fwait
inc
rcl
cmp
mov
test
sub
outsl
cmp
mov
push
pop
xchg
cmc
lcall
dec
divb
popf
fsubp
add
push
arpl
pushf
std
push
fmulp
adc
xchg
and
int3
mov
jae
mov
sbb
sbb
xor
aaa
jp
adc
std
mov
lcall
pop
movsb
call
inc
ljmp
call
fstp
movsb
enter
mov
jnp
adc
dec
cmpsl
ud0
pop
outsl
or
sbb
ljmp
dec
cmpsl
fisubs
add
sub
dec
and
mov
pop
imul
and
test
loop
xchg
pop
fidivrl
fwait
lock
bound
xor
push
xor
push
imul
fidivrs
mov
pop
movl
push
nop
jne
push
nop
or
popa
mov
mov
lret
insb
idivb
push
rcl
inc
sub
faddp
jge
mov
cmp
mov
lcall
shll
mov
je
test
mov
pop
xchg
pop
cmpsb
pop
aad
xor
dec
sub
pop
in
into
pop
mov
mov
inc
icebp
orb
push
into
loopne,pt
shll
adc
cwtl
xchg
dec
inc
and
jno
jno
repz
cltd
fistps
in
push
and
dec
movsb
pop
mov
or
pop
int
push
shlb
or
or
scas
push
lret
loop
bnd
rorb
mov
mov
jg
shrb
adc
push
or
outsb
mov
inc
push
mov
ds
int3
mov
popf
fsubs
push
pop
sub
das
jg
or
cmpsl
sub
ret
jg
adc
fwait
dec
iret
push
fstpl
arpl
or
adc
xor
push
pop
not
pop
jnp
hlt
add
lods
pop
mov
xor
cld
and
pop
sbbl
dec
cmp
jno
jmp
dec
mov
jne
and
nop
rclb
cmpl
xlat
ret
cwtl
sbb
or
movsb
jle
cld
jne
cmpsb
insb
cli
test
sti
es
xchg
popf
jl
push
cmp
dec
sahf
lret
aad
mov
fisubrs
mov
in
xchg
shr
xchg
std
fmul
fmul
mov
aam
xor
lock
scas
mov
loop
sub
jno
pop
and
mov
pusha
jns
sub
or
sub
cs
pop
jo
mov
pop
adc
test
pop
dec
pop
repz
xchg
xchg
test
adc
adc
add
or
xor
rclb
inc
jb
orb
cmp
jg
or
dec
movsb
sub
inc
and
mov
lret
xchg
jo
jmp
add
ja
cld
mov
aam
subb
je
pop
adcl
xlat
push
xchg
push
sbb
aad
loop
inc
lock
insl
pop
je
inc
push
dec
in
lock
mov
jne
jge
aaa
cltd
lods
lcallw
or
jp
xchg
call
push
lods
aam
dec
rorl
adc
xchg
fnstenv
dec
ja
add
sahf
lahf
dec
mov
pop
mov
pop
pop
or
cld
stc
out
xor
mov
in
fistps
mov
jo
push
stos
lock
xor
jne
nop
inc
or
pop
pushf
imul
push
imul
xor
cs
ret
ret
or
jb
ljmp
fsubs
stos
xor
dec
inc
out
pop
dec
std
call
adc
daa
xchg
aam
xlat
push
mov
xchg
xor
mov
inc
stos
mov
sub
lds
stos
add
dec
test
adc
mov
lcall
fxch
dec
jmp
xchg
in
cmpb
inc
cld
lods
jp
stc
jbe
repnz
shrb
rolb
pmulhw
loopne
inc
add
enter
mov
dec
add
test
ret
cli
mov
mov
call
outsl
fs
icebp
xor
sub
push
leave
insl
fwait
popf
jbe
ficomps
mov
push
mov
jp
xor
xor
pop
mov
insb
sub
inc
int
cmpsl
adcb
xchg
pop
xchg
mov
cmpsb
sti
xchg
xor
shll
dec
dec
push
je
and
and
and
loop
sbb
mov
inc
hlt
jecxz
loopne,pt
ja
das
cmp
in
sti
imulb
push
mov
push
aad
xor
xor
push
or
out
testb
jae
adc
out
add
dec
mov
mov
add
and
loope
xor
or
sbb
xchg
sbb
and
xchg
fwait
jl
gs
das
xor
cmpl
call
loopne
scas
mov
test
loopne
cwtl
icebp
lea
hlt
push
mov
mov
inc
inc
cmp
dec
inc
jp
jns
ret
sbbb
jo
mov
imul
and
pop
loopne
stos
mov
dec
or
rorb
roll
mov
sub
sub
mov
movsb
mov
pusha
mov
fs
in
or
xchg
mov
pop
shll
rcl
fistps
enter
dec
xor
popf
das
cwtl
inc
pop
add
adcl
xor
loop
ret
loope
xor
fisubl
pop
je
stos
aas
lds
adc
sbbl
fnstsw
push
sub
int3
xchg
sahf
sub
cmpsl
roll
andl
dec
je
cmp
dec
test
imul
jmp
mov
mov
out
cmpsl
pop
xchg
mov
fucomp
dec
jge
out
cmc
mov
push
sbbb
xor
test
xchg
sbb
in
mov
xor
inc
push
adc
notl
in
cwtl
insl
push
movsb
gs
xor
lods
add
lods
imul
stc
lcall
fwait
pop
jge
hlt
pop
mov
and
hlt
jge
cli
lcall
inc
das
test
aas
rcl
inc
pop
jno
and
inc
lcall
xor
sub
adc
int3
inc
roll
roll
adc
jp
mov
mov
adc
fimull
xchg
sub
dec
xor
sarl
mov
cmp
in
cli
int
repz
xorb
jmp
mov
pop
fwait
negb
imul
push
xchg
loope
cltd
jne
aas
add
push
add
daa
dec
repz
inc
lret
or
lret
movsb
or
add
cmp
adc
cmp
mov
imul
call
pushf
inc
into
xor
mov
mov
rorl
lret
cmc
cmp
dec
int3
fimuls
mov
aaa
int
cltd
xor
sbb
scas
cli
add
loopne
add
dec
or
push
ficomps
pop
jge
les
push
mov
push
in
stos
sbb
pop
movsb
cmpsb
rclb
negl
jno
dec
fidivrs
sbb
lea
pop
fcompl
pop
xor
and
test
inc
and
xchg
mov
inc
ror
mov
dec
push
adc
or
xor
and
in
push
lcall
sbb
je
jo
pop
cmp
lahf
call
pop
xor
sub
icebp
lcall
adc
jo
adc
jmp
loope
fistpll
adc
pushf
arpl
xor
movsb
xchg
mov
ja
cmp
or
xor
jle
lods
push
cltd
lock
ljmp
mov
cli
stos
push
dec
jge
adc
frstor
sbb
stos
inc
sbb
enter
push
out
lret
jne
ror
jmp
or
pop
rcrl
loopne
sbb
cwtl
sbb
and
jge
dec
jl
xlat
xchg
ja
or
sbbb
addr16
mov
ss
dec
test
jg
jno
stc
mov
lret
out
and
dec
push
repnz
in
adcl
push
sub
mov
jg
pusha
mov
mov
push
xchg
cmc
mov
xchg
jb
fdivp
pop
dec
cmp
or
and
cmpsl
pop
daa
loopne
and
xor
shll
push
mov
mov
mov
xchg
fsubr
inc
xor
lods
mov
loopne
xor
cmp
leave
fnstenv
out
push
inc
daa
hlt
jg
test
or
es
das
pop
mov
pop
addl
xor
mov
repnz
mov
scas
cltd
xor
sbb
ret
scas
sub
and
pop
pop
sbb
arpl
loope
xchg
push
mov
clc
inc
cmp
push
out
mov
push
insb
stos
sbbb
test
sarl
fdivs
dec
leave
mov
jmp
pop
inc
inc
push
pop
fwait
in
roll
or
mov
sbb
and
mov
out
popa
xor
or
mov
lahf
pop
push
push
xor
jecxz
cmp
sub
xchg
cltd
mov
sti
pop
popf
aas
add
arpl
ficomps
or
mov
fdivrp
jle
cmp
lret
fdivrs
std
scas
jne
enter
inc
call
fcoml
cli
fldl
subb
fwait
jmp
adc
aaa
push
cmpsb
sti
jp
cmpsl
hlt
enter
cmpb
rcrl
bound
sti
pop
inc
xor
test
mov
dec
bound
pop
aas
xor
enter
loope
je
xor
dec
dec
jb
das
mov
cmp
dec
xor
pop
addr16
sar
cli
clc
int3
pop
cwtl
pop
mov
or
pop
xchg
xlat
and
ret
fistl
int
mov
aaa
sbb
cmp
ds
inc
jbe
nop
add
dec
dec
das
jne
xorl
rcrl
call
add
cmc
jne
sub
adc
dec
inc
adc
test
mov
mov
loop
cs
mov
mov
mov
mov
sbb
cwtl
leave
mov
adc
rcrb
sub
je,pn
das
jns
jle
adc
mov
fwait
inc
mov
stos
fucomip
movsb
jge
mov
push
imul
lds
or
aad
xor
js
icebp
clc
pop
inc
pop
mov
out
test
ljmp
imull
and
xor
sub
lods
mov
mov
repnz
xchg
adc
dec
cmp
mov
pushf
xchg
lock
xor
out
mov
add
xor
addr16
les
adc
daa
and
mov
ljmp
xchg
mov
pop
jnp
mov
jne
cmp
mov
sahf
push
in
rcr
shl
pop
inc
pop
lret
push
insb
sub
sbb
add
stos
subl
dec
sbb
sahf
cmp
lods
lea
das
loope
xchg
adc
and
out
lods
outsb
repnz
out
out
mov
imul
pop
cmpsb
and
leave
sbb
xchg
aas
mov
and
call
or
ret
cli
mov
mov
arpl
call
lret
xor
clc
fwait
cmp
inc
jbe
add
xlat
adc
and
jno
insl
aaa
mov
pop
jecxz
iret
push
ss
add
xchg
push
cmc
dec
repnz
fnstsw
lret
sub
inc
or
xchg
cmp
xchg
das
jns
cmpsl
mov
inc
sub
shr
push
dec
idivb
push
jno,pt
jne
into
mov
mov
mov
dec
add
imul
xor
sbbl
mov
les
or
adc
nop
test
imul
imul
mov
xchg
dec
push
aaa
sbb
lods
add
jmp
xchg
push
out
iret
add
fwait
cmp
pop
roll
xor
and
fistpl
jge
cmp
or
adc
mov
xchg
and
mov
clc
shrb
fs
popf
adc
dec
pop
pop
sbb
adcl
testl
mov
jo
repnz
sahf
sub
dec
mov
leave
stc
incl
stc
mov
clc
nop
cmpsb
push
leave
aam
mov
ret
cmp
add
and
push
push
cld
adc
sbb
fidivrs
xchg
add
mov
into
xor
mov
mov
pop
pop
or
cld
mull
cli
fnstcw
ret
test
inc
aas
imul
or
sbb
in
aas
mov
imul
mov
out
pop
or
mov
mov
sti
or
sbb
sbb
mov
in
mov
int3
inc
xchg
adc
movsl
mov
outsb
lahf
pop
pop
cs
and
add
cmp
xlat
loope
mov
adc
pop
out
push
sarl
add
pop
and
pop
rcll
fisubs
ss
or
jmp
cmp
pushf
adc
or
mov
jmp
pop
lods
inc
mov
sbb
xor
mov
dec
shll
sahf
cs
mov
fdivs
in
xlat
sbbb
rolb
xor
sti
lods
inc
sarb
mov
subl
outsl
arpl
and
xchg
mov
xor
in
lahf
dec
mov
mov
adc
stos
out
dec
loope
mov
xor
sbbb
mov
inc
dec
inc
lock
push
mov
fld
cmc
add
movsb
jae
push
dec
pop
bound
mov
in
and
xor
add
adc
iret
mov
icebp
xchg
push
dec
repz
test
sub
pop
fmull
xchg
and
and
or
stc
fisttpl
ds
nop
or
dec
cmpsb
xor
out
or
es
xor
push
mov
adc
pop
addr16
xor
sub
cwtl
mov
repz
das
pop
lods
inc
jae
imul
xchg
out
lds
je
and
and
leave
inc
aaa
gs
rcll
xor
fidivrl
xchg
inc
aaa
in
pop
stc
mov
jb
enter
jnp
and
leave
jne
in
popl
add
inc
imul
stos
cltd
and
leave
push
mov
adc
popa
incl
insb
mov
xor
add
stc
ret
push
stc
iret
jmp
inc
inc
dec
lods
fstps
pop
xlat
imul
cli
jbe
mov
push
dec
jg
testb
push
adc
scas
gs
cs
add
cld
movsl
adc
push
jae
iret
and
pop
lret
pop
movsb
sbb
cld
loop
jmp
mov
mov
or
sbb
aas
jle
push
and
pop
dec
cld
xchg
out
inc
pop
xlat
pop
cmp
lods
sarb
test
adcl
outsl
push
jnp
sbb
aas
mov
xchg
inc
pop
pop
mov
out
add
test
loopne
scas
mov
js
adcb
lock
xor
outsb
xor
mov
out
in
push
adc
aaa
add
xchg
gs
jle
loop
inc
xchg
cmc
mov
adcb
lea
xor
icebp
push
xchg
adc
mov
shl
jns
pop
movl
mov
rcrb
lods
inc
mov
ret
pop
push
push
cmc
sbb
push
cmc
push
push
repnz
dec
or
dec
lods
pcmpeqb
inc
and
call
pushf
cmp
aam
mov
jmp
mov
enter
movsb
xchg
sub
divb
push
sub
push
movl
cltd
cmc
test
lds
sub
mov
xchg
insl
push
push
mov
mov
cmp
sar
orb
pop
jmp
aam
je
pop
xchg
mov
mov
sub
cwtl
pop
pop
gs
arpl
mov
sbb
jno
outsb
fbld
push
stc
les
test
inc
ss
adc
cmc
xchg
enter
pusha
push
rcr
lds
adc
inc
mov
xchg
push
mov
xlat
sbb
neg
dec
jl
stos
imul
movsb
aam
mov
out
pop
xchg
mov
mov
in
sbb
clc
out
inc
xchg
and
mov
aam
cmp
sub
pop
clc
lds
cld
xchg
in
adcl
sub
inc
ja
pop
mov
and
pop
adc
cld
jmp
add
repz
inc
hlt
out
xor
jne
jns
rclb
sbb
push
cmp
leave
int3
sbb
clc
push
sub
std
mov
mov
push
sub
fstl
push
cmp
loop
jp
mov
imul
xor
filds
int
popf
dec
js
dec
mov
rcrb
adc
imul
lahf
fdivrl
xchg
sub
sub
sbbl
mov
fnstenv
jb
adc
or
inc
fstps
push
aad
in
out
mov
cmp
fs
sti
pop
mov
pop
jl
sub
push
cld
mov
pop
pop
sub
imul
inc
setns
adc
bound
hlt
out
jle
outsl
into
pop
cmp
out
cmp
andl
leave
fdivrs
fsubs
jnp
dec
outsl
jmp
sub
lahf
cli
sub
mov
pop
out
xchg
outsl
div
repz
push
and
scas
jo
in
and
in
inc
mov
inc
jne
dec
push
sbb
out
xor
mov
xchg
jge
lds
mov
lods
out
jb
insl
pop
mov
mov
int
fs
jbe
mov
idivb
mov
inc
aam
iret
js
test
loop
repz
lcall
xchg
adc
call
rorl
xlat
xorb
pop
sbb
shr
int3
mov
and
iret
push
test
outsb
sbb
push
daa
push
push
ficompl
xorb
inc
mov
js
xlat
ja
or
adc
ss
ds
leave
and
mov
pop
inc
outsb
repnz
xchg
xor
dec
orb
dec
lret
outsl
dec
out
cmc
into
retw
dec
xor
or
and
fidivl
in
or
mov
inc
sbb
testb
into
loop
sub
test
gs
lret
push
adc
call
dec
cmp
sbb
or
xorl
jecxz
add
daa
jno
inc
cs
mov
jno
loopne
scas
ljmp
addr16
je
jmp
mov
cmpsl
into
xor
jnp
lock
mov
out
cmp
adc
fwait
ss
mov
ret
cmp
mov
xchg
bound
sub
jmp
jl
test
jle
add
inc
cmp
repnz
in
je
and
sub
lcall
xacquire
nop
daa
shll
jmp
fsubp
test
add
jge
cmpsb
mov
push
adcb
sahf
push
imul
pop
sub
hlt
mov
cli
lods
lcall
fmull
mov
lock
repnz
test
cmp
mov
sub
jmp
popf
movsb
test
out
iret
jns
clc
imul
pop
inc
pusha
popf
stos
idivb
xchg
cmp
inc
jmp
cmc
push
jbe
addr16
push
mov
add
dec
testb
inc
cmp
dec
lahf
loop
push
lds
in
test
insl
nop
popf
cmpsb
mov
mov
leave
cmc
sub
popa
jmp
pop
pusha
dec
or
fidivrl
sbb
das
and
mov
cwtl
test
dec
test
add
inc
in
cmc
aaa
in
mov
push
aam
jnp
xchg
popf
test
sub
pop
mov
adc
xchg
insb
mov
mov
mov
inc
jns
adc
popa
movb
cmp
test
mov
xor
adc
jne
test
lcall
cltd
sub
cmp
inc
call
ss
stos
outsl
insb
mov
add
lahf
mov
mov
mov
ja
mov
cmp
sbb
mov
xlat
fldcw
lods
jp
or
movsb
loop
xchg
inc
mov
add
rorb
sbb
pusha
mov
in
xchg
rorb
jg
aam
outsl
daa
sbb
in
jnp
ss
js
mov
ss
mov
dec
pop
pop
aam
or
and
sbb
push
xchg
mov
imul
insb
iret
or
fimuls
push
jne
lret
cmp
xchg
dec
out
shll
lcall
dec
fisttpll
jns
sbb
add
ds
pop
in
xchg
pushf
push
pop
jle
fs
fstpl
testl
aaa
jmp
aam
lret
adc
jl
or
dec
es
lcall
popfw
adc
dec
nop
and
shrl
repz
inc
into
sbb
xchg
pop
sub
add
pop
sub
xor
aam
test
or
xor
push
sbb
aas
movsb
fs
nop
aas
cmp
in
jp
mov
and
repz
ss
xchg
adc
rcl
xchg
xlat
dec
push
jmp
js
jae
icebp
nop
xchg
cmp
test
in
sub
pop
cmp
mov
out
cld
pop
jae
outsb
cs
pop
jno
int3
cmp
sbb
adc
sub
mov
mov
imul
repnz
push
nop
sti
jge
movsb
push
dec
fs
bound
adc
sbb
pop
add
lcall
movsb
mov
in
ljmp
push
cmp
sahf
popf
test
mov
push
dec
jecxz
xor
push
imull
xchg
stos
jae
loopne
in
test
inc
push
lahf
aas
jo
fidivrl
imulb
imul
gs
jae
sbb
mov
iret
int
sub
inc
imul
push
xchg
sbb
pop
jo
jbe
sub
fsubl
loopne
pop
xchg
pop
mov
repz
scas
add
xchg
stc
dec
int
repnz
mov
fisubs
rol
int3
sbb
jno
imul
ss
pop
insl
lcall
cmp
rcr
test
popa
outsl
cmp
rcll
push
out
in
xchg
fisubrl
add
push
or
push
cmp
inc
shll
stos
lods
xchg
mov
add
shll
cmpsb
loopne
mov
jb
push
repz
test
cmp
lcall
ljmp
es
push
out
and
mov
push
lock
popf
cs
mov
arpl
xchg
inc
mov
or
outsb
inc
or
in
scas
and
pop
xor
pusha
daa
lret
mov
jmp
imul
inc
mov
cltd
push
jno
or
filds
andl
aad
cmp
jmp
dec
mov
xchg
xchg
pop
mov
pusha
jle
test
fiadds
jl
out
dec
sub
repnz
ja
or
ss
scas
xchg
sub
mov
cs
push
cmpsb
inc
push
cli
pop
in
pusha
mov
fwait
sbb
in
xchg
dec
dec
es
cld
sbb
cli
push
arpl
fdivl
and
cmp
sbb
ds
xor
popa
sbb
in
pop
lods
roll
inc
inc
lock
inc
jp
or
xchg
fnsave
cmp
add
pop
dec
add
push
adc
shlb
push
iret
bnd
and
push
dec
mov
daa
adc
mov
mov
fwait
jo
lahf
xor
btr
sub
adc
xchg
ljmp
dec
cmp
cmp
or
in
fstpt
mov
dec
mov
push
gs
imul
notb
adc
nop
fiadds
cmc
in
gs
xchg
add
adc
pop
sbb
pop
sar
or
and
into
lods
add
add
push
xchg
stc
inc
in
adc
cmp
mov
aas
add
cli
ljmp
push
cmpsb
fisubrl
sarb
jle
data16
push
push
das
loopne
push
mov
loop
repnz
mov
in
ds
fdivl
xor
loop
jnp
mov
popa
rcr
mov
push
sbbl
mov
mov
mov
sub
icebp
or
adc
mov
aaa
adc
adc
lods
xchg
xchg
ret
xor
test
mov
or
adc
jmp
lock
movsl
out
js
cmp
mov
and
fldenv
in
or
sbb
cwtl
xchg
jge
repnz
scas
inc
adc
dec
add
pop
mov
sti
movsb
cmpsb
pushf
dec
cld
aad
jg
stos
lods
aaa
push
mov
xchg
in
adc
ljmp
insl
clc
xchg
clc
inc
sbb
aad
lret
cli
iret
rcr
stc
cmp
push
into
mov
mov
arpl
outsl
scas
mov
cmpsb
inc
mov
cmp
sbb
sub
xor
xlat
adc
sbb
xor
dec
inc
push
dec
fstl
xor
scas
mov
in
repz
iret
dec
push
jae
pop
call
adc
inc
pop
jmp
pushf
pop
xchg
dec
inc
leave
in
jae
aaa
xchg
lret
sub
out
stos
test
fwait
or
inc
inc
jge
ret
aaa
into
inc
adc
ljmp
mov
push
lret
dec
sub
mov
xchg
mov
cmp
aam
out
xlat
sub
rcrb
xor
dec
cmc
fs
movsl
das
cs
pushf
arpl
pause
jns
test
mov
outsb
cltd
cmp
sub
pushf
enter
or
cmpsl
call
mov
ja
pusha
rclb
xor
je
jmp
or
arpl
pop
outsl
out
mov
mov
inc
int3
mov
fiaddl
mov
mov
sub
jno
xor
cmp
mov
repz
mov
stos
adc
std
mov
std
xor
dec
insl
cmpsb
xor
xor
xor
cld
push
adc
pop
loopne
insb
cwtl
sbb
jmp
scas
mov
rol
inc
pushf
popf
fwait
stos
sarb
pop
mov
xor
sahf
testb
loopne
pushf
loop
imul
cmpsl
sti
and
addl
push
cmp
in
sub
inc
movsb
fs
dec
jnp
test
addl
mov
stos
jecxz
pop
int
adc
jecxz
push
mov
cmp
dec
inc
add
mov
xchg
cmc
int
add
mov
dec
icebp
pop
or
xchg
inc
pop
in
jmp
inc
fsub
or
mov
rdmsr
jns
movsl
xor
pop
xchg
push
mov
sbb
sub
xchg
cmp
pushf
aaa
int3
scas
loopne
int3
fbld
mov
jmp
add
xchg
inc
jl
jnp
ds
cs
movsl
and
xchg
scas
jne
sbb
mov
into
add
out
cmp
xor
inc
imul
fnsave
fucomi
mov
andl
lods
leave
mov
xor
jne
xlat
movsl
and
and
or
jmp
mov
pop
mov
jno
jne
data16
aas
push
pmuludq
mov
rorb
leave
lret
or
xor
or
sub
movsb
and
adc
jge
xchg
scas
test
sub
cmpsb
jnp
xchg
cltd
jmp
rolb
out
xor
sbb
aaa
jp
dec
andl
push
mov
shr
aas
es
cmp
dec
es
mov
jns
push
out
mov
outsl
cmpsb
dec
add
nop
insb
jmp
xchg
outsl
push
and
add
mov
ljmp
mov
pushf
lods
cmp
cmp
fincstp
in
fildl
ficomps
cli
push
mov
sbb
pop
inc
lret
out
push
push
dec
cmc
and
mov
jecxz
aam
or
lea
je
dec
xchg
fists
adc
test
or
in
cltd
clc
pop
aad
negb
scas
jg
imul
pop
mov
sub
inc
sbb
push
push
jp
mov
in
ss
jno
vpminub
pop
jp
andb
stos
mov
xor
fdivrl
xchg
ss
cmp
test
ret
fs
mov
jmp
inc
jle
ficomps
testl
mulb
ljmp
lods
daa
test
cmc
sub
xchg
cltd
shl
popa
jle
inc
push
clc
xchg
ficompl
aaa
andl
push
in
iret
or
cmp
xchg
inc
aad
testl
jns
pop
xchg
pop
add
mov
stos
fimull
and
jl
fidivs
cld
outsb
outsb
xchg
or
cmp
aam
mov
xchg
loopne
jne
test
jnp
cmp
insb
aam
jecxz
xorb
cld
aaa
cwtl
stc
adc
xchg
cmp
mov
sbb
mov
mov
les
icebp
jg
fidivrl
xchg
sahf
mov
inc
jecxz
movb
outsb
icebp
pop
sub
lds
pop
ds
jno
xlat
cmc
mov
add
pop
lret
mov
mov
mov
sbb
js
fsubl
push
mov
mov
jmp
les
lods
rorb
ljmp
xor
sub
lahf
or
rcr
lds
jle
xchg
stos
cmc
cltd
test
lret
inc
cli
jge
sbb
pop
cmp
popa
stos
fadd
inc
or
mov
jp
arpl
or
jmp
scas
jbe
mov
scas
cmp
jnp
push
inc
pop
jo
aam
mov
pop
pop
dec
jno
xchg
sahf
or
push
ljmp
es
mov
stc
call
popa
inc
loopne
jmp
mov
jmp
pop
sub
andl
inc
test
mov
inc
add
arpl
jae
je
mov
rcll
cmp
xchg
popa
push
cmpsl
or
cmp
ss
dec
xor
fwait
inc
mov
call
out
outsl
sti
and
dec
jae
pushf
orb
push
adc
jo
cs
loope
jb
inc
add
aad
scas
cltd
and
dec
dec
jmp
lds
int3
outsl
mov
mov
iret
fadd
fnsave
xchg
movsb
jg
mov
fstpt
in
pop
jns
push
sbb
in
mov
cmp
push
les
inc
ficoms
inc
js
std
jp
dec
std
fimuls
ret
mov
adc
dec
nop
sub
mov
fimull
ss
add
fwait
hlt
mov
out
sub
cmp
aad
out
mov
push
in
fnstcw
add
mov
addr16
cmp
pop
dec
lret
push
sti
clc
sti
popa
sbb
lods
jns
fs
sub
add
adc
jg
aas
jp
insb
mov
sbbl
dec
negb
mov
stos
sahf
sub
push
lods
pop
xor
adcl
mov
jns
int3
pusha
shl
jbe
jl
scas
sbb
sbb
loopne
adc
inc
or
idivb
das
xchg
hlt
push
xor
and
dec
and
mov
and
int
push
hlt
out
ss
inc
and
dec
jp
repnz
hlt
in
fbld
add
mov
and
pop
enter
fistps
push
dec
stos
sbb
lret
and
add
jge
dec
push
pusha
push
into
shll
ret
cmpsb
sub
jp
negl
push
cmp
es
cmp
incb
stc
in
arpl
lds
add
sbb
inc
movsl
lods
js
fs
bts
outsb
xor
ret
lea
in
lods
rcrb
fstpt
dec
test
dec
repnz
push
aam
push
orb
lea
cmp
in
push
adc
or
cmp
jno
cmp
mov
mov
xor
sub
leave
push
jg
dec
cwtl
xchg
or
mov
loope
fwait
sub
pop
stos
and
in
mov
mov
lret
jl
mov
nop
mov
lahf
outsb
jmp
inc
adc
hlt
or
pop
push
xlat
jo
pop
push
cld
lock
push
push
pushf
cmp
clc
incb
xchg
test
stos
icebp
in
or
icebp
call
push
ss
aaa
cs
jno
ljmp
rcr
mov
mov
jno
int3
fildll
imul
sbb
inc
es
pop
lret
pavgw
push
push
add
jl
add
mov
enter
cmp
mov
xchg
or
add
stc
sbb
sbb
mov
jp
sub
ljmp
lcall
es
out
or
scas
push
jbe
and
rclb
add
mov
inc
jae
inc
add
pop
popf
adc
in
movsl
sub
and
xchg
mov
mov
loopne
pop
push
in
xor
out
in
daa
cli
pop
adc
dec
xchg
ljmp
daa
adc
dec
in
arpl
mov
and
or
xor
cli
mov
hlt
jge
pop
sub
notb
lock
xor
sbb
clc
imulb
cmpsb
fldenv
jne
dec
jp
fs
add
cld
leave
bound
cltd
xor
sbb
cmpsb
ret
or
dec
enter
int3
inc
into
xchg
xchg
out
jl
daa
push
scas
cmpsl
aad
ret
les
jmp
mov
cli
mov
cmp
cmp
lcall
pop
div
xor
notb
and
test
sbb
sbb
shrb
imul
out
arpl
pop
ret
push
and
sub
push
in
xchg
and
pop
mov
jb
je,pt
dec
cwtl
into
push
punpcklbw
je
je
sti
push
mov
sbb
ss
cmp
or
or
icebp
dec
nop
inc
lret
loopne
into
test
push
sbb
xchg
add
cs
cwtl
or
xlat
inc
icebp
add
shrl
dec
into
nop
jnp
fs
std
jo
push
or
xchg
ret
dec
xor
lods
aas
int
fs
loopne
xor
cmpb
mov
sbb
mov
push
lahf
insb
inc
mov
pop
sub
xchg
sbb
in
roll
dec
jae
sbb
scas
jmp
xor
sbb
xchg
sub
les
mov
ss
icebp
sbb
lock
shr
lods
lcall
fidivs
shrb
and
neg
iret
sbb
adc
xor
mov
daa
fcompl
out
pop
xchg
push
out
mov
sub
pop
add
pop
stos
fmull
les
stos
sub
sub
sarl
aas
mov
dec
jae
and
mov
push
pop
dec
lret
jbe
adc
pusha
xorb
pop
pop
xchg
add
test
dec
xchg
shrb
push
pusha
pushf
jo
hlt
fdivrl
mov
push
inc
subps
inc
cmpl
xor
xor
cmp
aaa
xchg
cld
jno
outsb
sub
dec
jp
jle
stos
jp
dec
mov
add
xchg
dec
ja
aaa
loop
repz
mov
fdivl
insl
jge
sbb
enter
in
inc
push
lret
push
stc
or
jge
test
jecxz
cmp
inc
or
out
jmp
insl
mov
sub
xchg
loope
mov
movsb
adc
push
popa
popf
ret
cmc
xchg
mov
iret
daa
mov
stos
in
fldcw
fistl
hlt
pop
cli
push
jbe
jl
scas
mov
gs
sbb
or
sbb
outsl
shrb
rcr
dec
inc
and
sarb
cmc
xchg
adc
cmp
nop
in
movsl
push
popa
cmp
jge
scas
and
jp
jnp
cmc
out
int3
jnp
rclb
shr
cmp
andb
dec
iret
mov
shll
outsl
mul
stc
jle
andl
pushf
imul
mov
cmp
adc
sub
cmp
lock
inc
ljmp
jno
inc
iret
subl
sarb
jbe
fisubs
mov
fcomi
aad
and
mov
xchg
mov
pop
inc
and
into
pop
sub
adc
pop
fidivs
js
inc
les
sub
pushf
and
sbb
mov
jecxz
movsl
mov
loope
stos
stos
je
stos
es
mov
mov
add
push
add
push
xor
mov
icebp
divb
or
bound
mov
or
xlat
push
enter
mov
arpl
or
mov
repnz
clc
int
sbb
jnp
cmp
and
cs
jae
sbb
test
nop
push
push
push
mov
or
xor
mov
test
mov
movsl
xchg
mov
sub
ficomps
shl
out
outsb
jb
imul
shrb
adc
lret
xchg
add
pop
lcall
or
pop
in
daa
lods
sub
aaa
adc
roll
adc
mov
inc
rdpmc
aaa
xchg
loopne
call
jle
cld
or
jecxz
aad
sbb
addr16
cmp
mov
pop
rorl
sbb
sbb
fwait
movsb
rorb
bound
adc
mov
xchg
in
test
mov
pop
xchg
test
je
ljmp
pop
out
daa
lods
das
out
xor
mov
jl
out
inc
sahf
pop
dec
test
push
out
fsub
xchg
sub
out
push
inc
cwtl
aam
shlb
jnp
jle
adc
in
stos
sbb
insl
dec
cmp
in
xchg
aad
pushw
jmp
pusha
inc
or
jns
pop
sti
repnz
mov
xchg
movsl
xchg
fbld
push
jae
movsb
dec
push
add
mov
push
cmpsb
add
popa
or
cmc
vcvtps2dq
movsb
rolb
int
pop
xor
and
add
cmp
das
and
daa
dec
cmc
popa
and
mov
mov
dec
mov
std
test
dec
inc
stos
or
xchg
push
fwait
std
das
fs
fiaddl
sub
iret
mov
les
or
sahf
or
ds
insl
rcll
mov
xchg
jg
dec
mov
sub
sbb
push
out
mov
mov
iret
imul
repz
push
cs
divl
xor
add
push
sahf
fmul
in
shlb
add
aad
jbe
imul
out
cmp
inc
add
push
lods
int3
push
pop
jno
aaa
loop
fists
xchg
sahf
push
cmp
or
mull
fwait
mov
and
daa
cmpb
jg
add
xchg
ss
hlt
scas
xorl
push
cwtl
insb
lea
jns
imul
into
inc
jge
ja
xchg
pop
andl
lahf
inc
pop
jge
data16
jo
pop
add
cmp
adcb
mov
into
add
mov
into
dec
iret
mov
shr
pop
repz
scas
clc
or
push
xor
xchg
adc
pop
dec
xchg
and
aaa
jecxz
fisubrs
mov
pop
shlb
cmp
loopne
incb
push
movsl
sarl
scas
rorb
ds
into
ret
cld
sbb
int
xor
xor
cmp
jae
mov
push
and
xor
pop
and
leave
in
data16
je
push
out
pop
mov
test
mul
add
sub
fnstsw
inc
je
cltd
ficomps
xchg
popa
cltd
add
mov
mov
lret
lahf
and
fbld
repnz
cs
dec
arpl
add
xchg
jg
inc
ljmp
mov
ss
cmp
call
pusha
mov
pop
insl
pop
ret
inc
movsl
pop
add
jae
xor
rcll
mov
or
cmp
push
pop
loope
test
out
fbstp
add
pusha
scas
mov
mov
movsb
inc
sbb
cmp
sbb
aad
fcompl
cmp
in
sub
out
add
test
negb
add
inc
ret
xchg
push
lods
daa
mov
data16
cmp
sub
stos
loop
sub
mov
loopne
into
xorl
cli
pop
jecxz
fwait
out
ljmp
xor
xchg
xchg
and
push
shrl
pop
fs
mov
cmp
jle
jb
das
lock
and
ljmp
lods
repnz
cmp
iret
push
sbb
xor
fsubrs
cmpsb
or
mov
ret
negb
jle
into
daa
fdivrp
adc
in
imul
jbe
aam
es
mov
inc
out
popa
cmpl
inc
xor
nop
adc
xor
cld
xchg
xor
insl
mov
inc
fs
stos
pop
sarb
div
lods
push
mov
mov
or
rcr
jae
sti
inc
scas
mulb
push
data16
gs
loop
in
xchg
fs
inc
adc
in
in
lret
lods
out
insl
adc
cmp
dec
or
fldcw
mov
and
jae
int3
mov
aam
push
inc
mov
jp
fcmovne
mov
aam
xlat
mov
xor
xrelease
out
cld
pushf
jae
pop
outsl
cmp
cld
sub
popa
push
mov
xor
mov
fabs
mov
shlb
sbb
jl
cli
inc
lret
out
pop
clc
icebp
xor
lea
or
icebp
stos
cmp
fs
adc
aam
arpl
adc
mov
cli
ret
add
cmpsl
pop
ja
cmc
pop
lods
shrb
cmpsb
lret
xlat
mov
xor
and
bnd
add
jo
dec
adc
add
sbb
inc
fsubr
or
out
pop
pop
lods
ret
lret
mov
jl
and
shll
dec
pop
ret
mov
jbe
mov
jl
fiadds
dec
push
sbb
outsl
push
hlt
mov
out
pop
popf
mov
cmpsl
shlb
mov
cld
cmp
inc
mov
and
aam
push
push
inc
ja
pushf
mov
decb
addr16
jmp
adc
in
pop
js
sub
inc
push
movsb
repnz
inc
and
imul
int
lret
pop
mov
push
repz
or
in
fadds
push
in
add
lcall
icebp
and
sti
mov
xor
test
mov
pop
sub
rolb
in
cmpsb
jnp
xor
xor
and
push
xchg
and
movsl
cmp
int
add
mov
notl
xlat
in
lock
fs
push
lea
mov
aaa
jl
pop
push
pop
mov
mov
sub
jnp
cmpsl
fs
in
push
dec
lahf
xchg
scas
jecxz
sarb
jne
sub
dec
mov
popf
mov
in
mov
jb
ret
fchs
jbe
mov
jg
cmpsb
and
jb
adc
shrb
and
ss
jle
cwtl
scas
or
loop
lock
in
mov
std
inc
xchg
lock
mov
insb
sub
xchg
push
mov
xor
shlb
adc
vunpckhpd
pusha
out
fcmovbe
add
xchg
mov
out
popa
and
push
push
mov
ss
fldcw
scas
aaa
jge
ds
dec
dec
cmp
aaa
mov
add
add
mov
adc
lock
setne
dec
cmpsb
cmp
lahf
out
push
leave
imul
shl
mov
jp
cld
cmc
stos
fst
addl
lods
pusha
pop
jns
or
inc
ret
test
xchg
mov
push
xchg
cli
and
rclb
pop
fisubl
nop
test
icebp
das
dec
out
imul
lea
pop
push
xor
outsl
adc
or
lret
dec
lock
push
xor
sub
loopne
bound
jg
sbb
cld
popa
mov
jb
xchg
sub
cmpsl
cld
out
mov
daa
sbb
push
clc
es
push
out
adc
pop
pop
push
aas
fmuls
xorb
push
jl
lods
cmpsb
mov
rcr
ret
adc
xor
push
jbe
enter
enter
out
xor
jns
pop
xchg
lods
fmul
call
stc
xor
ret
xchg
dec
test
in
sbbb
push
dec
xchg
lock
ss
lcall
sbb
mov
or
pop
ret
push
mov
jnp
xchg
icebp
test
es
in
imul
ja
mov
fs
mov
pop
xor
dec
mov
test
pop
cmc
pop
lret
cmp
loope
es
jecxz
mov
add
scas
mov
stos
and
push
add
dec
sub
pop
std
xchg
push
lret
mov
stos
ret
cmp
sub
xor
enter
jecxz
test
push
adc
pop
add
dec
xchg
das
push
repz
mov
addr16
jg
fnstcw
mov
and
subb
mov
add
mov
fdivl
cs
mov
sbb
xchg
stos
lock
fld
mov
es
pop
iret
jge
and
cs
sbb
fcomps
icebp
lea
and
sahf
mul
jno
jg
push
scas
add
in
push
cltd
cs
sbb
push
xchg
jecxz
lods
jp
mov
lahf
loope
mov
cs
outsl
ret
adc
js
mov
in
shl
icebp
out
fsubs
xor
movl
pop
lds
inc
push
stos
and
sub
ret
repz
ffree
inc
cltd
testl
cld
mov
daa
cmp
jp
xor
fwait
mull
shlb
mov
mov
popa
push
sub
xchg
ret
imul
push
cmpsb
mov
aas
stos
sub
iret
into
das
lcall
pop
mov
pop
clc
pusha
dec
dec
push
rcll
push
push
shll
adc
mov
lea
jge
inc
bound
inc
fwait
jae
addl
scas
out
mov
adc
cltd
pop
adc
sar
inc
sbb
fnstcw
notb
icebp
push
aas
cmpsl
das
popa
mov
push
mov
div
fdivrl
fnstsw
sub
sbb
sbb
mov
push
icebp
pop
lahf
pop
fiadds
ljmp
pusha
stc
fdivs
xor
and
fisubl
cmp
popf
sbb
adc
dec
lods
xchg
lds
jne
lahf
pop
lret
pusha
mov
jno
mov
pop
test
test
dec
cmpsb
test
enter
xchg
jge
lods
loopne
ljmp
popf
dec
pop
or
sbb
push
ret
pop
adc
sti
int3
push
mov
fcoml
xchg
popf
loope
fstps
lods
mov
call
mov
or
or
shll
lock
mov
inc
cli
pushf
fs
jnp
stos
cltd
inc
pop
js
imul
lahf
test
pop
xchg
inc
dec
add
or
xchg
and
insl
mov
stos
inc
pop
test
push
and
push
mov
leave
loopne
mov
js
push
cmpsb
lock
aaa
in
sbb
out
sub
fnstsw
fisubs
out
decb
jnp
sahf
fidivrs
or
xchg
mov
add
adc
and
jle
sub
jle
les
popf
mov
mov
jae
adc
sbb
and
shrb
jecxz
scas
gs
mov
shrl
sub
mov
adc
aam
js
mov
pop
push
add
shlb
mov
fldt
inc
xchg
xor
dec
into
mov
loope
dec
movsl
pop
pop
int
push
out
inc
add
cld
dec
daa
cwtl
sahf
aas
add
int
add
mov
sub
pop
adc
or
sub
pop
mov
push
lcall
pop
push
sbb
repnz
inc
add
movsb
pop
stos
test
gs
ss
scas
push
add
dec
test
xor
push
shr
lahf
adc
int3
or
xchg
cltd
sbb
insl
stos
jnp
sbb
into
xchg
cmc
pop
out
and
push
add
lret
xor
or
and
xor
jno
jp
lret
repnz
repz
clc
popa
aam
sub
and
outsl
pop
in
nop
or
xchg
cmp
xchg
sbb
or
mov
ret
jmp
xor
in
xor
loopne
cmpsl
rorb
adc
inc
lcall
repz
jg
es
or
fisttpll
sarb
pushf
xor
out
movsb
fstps
mov
or
outsl
push
shl
jmp
scas
lds
rcll
and
jmp
push
imul
mov
leave
cmpsb
push
mov
in
test
xchg
adc
sti
push
repz
ljmp
cmp
push
dec
mov
ds
mov
push
in
loop
xchg
fnsave
psubq
shll
cmp
mul
mov
add
scas
imull
jbe
xlat
mov
movsl
in
aam
push
dec
pop
jns
cmp
cmpsl
fs
and
adc
xlat
dec
pusha
loopne
loope
or
xor
std
jnp
jo
inc
mov
test
sub
popf
xor
jg
add
sub
loop
movsl
jns
pusha
sbb
lahf
imul
and
sbb
inc
push
cmp
rcrb
pop
jg
mov
and
shrb
dec
insb
jp
cmp
sbb
mov
jno
push
lahf
repnz
adc
push
cmp
out
loopne
jo
inc
adc
stos
fwait
xor
pop
push
sub
insl
add
jp
adc
xchg
sbb
fldt
rolb
inc
inc
sbb
adc
mov
loopne
mov
outsb
add
cmp
iret
repnz
inc
adc
jmp
jmp
and
testb
lods
cmp
sti
dec
jnp
xchg
test
ret
iret
and
dec
es
iret
xchg
je
add
add
cmpsl
out
cmpsl
or
decl
lahf
popf
and
jbe
testb
outsb
jns
cwtl
cmp
out
inc
push
jo
loop
cmpsb
mov
lods
adc
imul
cmpsl
xor
lcall
jnp
in
and
cmpsl
fldt
cltd
jp
test
inc
inc
or
inc
fbstp
jmp
call
mov
xchg
mov
insl
repnz
and
idivl
call
sbb
mov
and
incl
add
fisttpl
pop
popa
loope
test
je
adc
out
mov
cmp
pop
add
loope
out
fidivs
adcb
xchg
int3
jno
adc
mov
xor
popf
iret
dec
clc
push
hlt
mov
js
or
imul
and
add
cwtl
dec
test
inc
jle
jne
out
lahf
jns
jg
push
xorb
mov
loope
cmp
imul
pop
negb
out
pop
cmp
int3
sbb
into
jmp
shlb
test
lret
cmp
or
xor
mov
mov
mov
cmpsb
add
orl
js
shll
pop
dec
adc
pop
shrb
pop
fimull
imul
push
jmp
mov
sbb
jnp
mov
dec
das
pop
in
aas
mov
mov
add
and
jae
push
jne
test
and
dec
or
xchg
ss
mov
fstpl
sarl
add
in
dec
lock
insl
mov
jg
cmc
push
xorl
test
fsubrs
mov
jl
xlat
pop
inc
jnp
mov
jnp
jbe
es
pop
pop
test
add
arpl
cmp
call
test
outsl
test
popa
mov
test
jo
fists
mov
mov
add
and
sbb
inc
sub
push
mov
mov
cld
dec
push
add
pop
enter
xchg
not
sub
scas
lret
push
roll
les
xchg
and
push
nop
sbb
adc
and
lret
sbb
xchg
shrb
cmp
cmpsb
or
jge
dec
test
les
dec
xlat
or
jmp
add
les
pusha
dec
popa
mov
inc
cmp
xchg
out
es
add
ja
and
lret
jb
mov
sarl
loopne
add
sub
test
mov
mov
push
push
aad
inc
mov
pop
cli
jp
jns
dec
shlb
jmp
cmc
add
dec
or
mov
push
cmp
pop
stos
jp
adc
cmpsb
jo
xor
xor
ljmp
pop
popf
bound
in
or
movsb
mov
push
les
test
test
fnstcw
pop
and
lock
clc
xor
inc
clc
aas
fsubrs
mull
inc
and
ss
mov
mov
scas
mov
pop
aas
fldz
mov
mov
aad
add
rcrb
inc
lret
add
mov
je
fdivrl
sub
mov
pushf
jb
or
test
out
inc
xchg
dec
push
add
stos
and
push
sub
mov
loopne
shr
mov
inc
fldl
mov
frstor
add
cmc
das
push
in
out
clc
adc
dec
xlat
mov
frstor
sub
repnz
sbb
push
cmpsl
jnp
push
out
bound
sub
test
hlt
sbb
test
movsb
cmpsl
push
sbb
pmovmskb
jmp
aas
popf
shrl
lods
jmp
fidivrs
dec
pop
push
pop
int
scas
scas
push
jp
mov
cwtl
fidivl
or
lods
popa
mov
mov
mov
jmp
inc
cli
sbb
out
clc
cmc
lods
mov
cltd
push
hlt
inc
adc
or
aad
bound
inc
negl
and
test
mov
lods
mov
mov
and
aam
xchg
jle,pt
mov
sbb
pop
test
dec
stos
add
or
adc
cmpsl
jmp
or
push
ret
lds
push
shrl
cmp
mov
aas
mov
push
mov
cwtl
or
adc
inc
xor
mov
sub
mov
xchg
sbb
push
cmpsb
mov
jge
out
enter
cmpb
in
lods
mov
mov
int
or
fadds
mov
icebp
inc
pop
sar
fists
stos
sbb
lea
jo
xlat
push
dec
add
pushf
add
andl
fs
insb
inc
ljmp
leave
xor
mov
mov
popf
sbb
sbb
or
out
ret
nop
mov
inc
aad
xchg
popa
push
mov
call
xchg
inc
repz
and
test
ficompl
je
lret
push
movsl
pop
cmp
cmovs
orl
adc
ljmp
cmp
hlt
cmpsl
div
stos
jle
dec
rcr
divb
je
or
add
adc
and
mov
sub
push
mov
sarl
repz
shll
negb
jae
jne
in
mov
and
push
enter
jo
mov
pop
shrb
mov
inc
mov
jle
mov
nop
fmull
sub
dec
imul
add
mov
mull
nop
mov
xchg
jno
inc
test
add
jns
enter
leave
fcmovnbe
inc
lock
out
pop
dec
add
sbb
rorb
shll
or
dec
das
stos
dec
mov
mov
dec
mov
jae
call
jns
push
insl
mov
mov
js
lcall
ror
and
cmpsl
jecxz
mov
dec
and
jbe
addl
cmp
rcrb
pop
stos
jp
jecxz
mov
fsts
dec
cmp
lods
out
cmp
fisttpll
insb
sahf
mov
or
jecxz
mov
add
andl
dec
mov
adc
xor
lea
jmp
test
outsb
push
inc
sub
sub
shl
dec
notb
aad
dec
pop
adc
shlb
lret
lcall
pop
cmp
mov
dec
pop
popf
insl
xor
data16
inc
cmp
pushf
pop
cmp
adc
add
outsb
push
pusha
add
outsl
jge
sub
mov
negl
pop
sarb
roll
mov
xchg
mov
xchg
sahf
int3
mov
sub
push
or
enter
imul
flds
mov
je
cmp
into
adc
shll
int3
push
and
sbb
push
adc
fcos
shll
not
lock
mov
nop
stos
or
push
sti
js
outsl
fistpl
mov
sbbb
nop
out
or
loopne
add
sti
and
xchg
cmpsb
mov
inc
push
mov
dec
aam
pop
xchg
loop
pop
aad
jb
popf
test
mov
cmp
fmull
mov
xor
mov
push
mov
jmp
add
jo
push
sti
loopne
cmpsb
mull
xor
popa
adc
or
shll
cmc
and
mov
adc
cmp
push
not
xchg
inc
call
mov
xor
jo
xchg
fwait
ret
jb
ja
in
ret
clc
jbe
inc
add
sub
xchg
adc
test
push
mov
int3
clc
insb
pushf
and
mov
aam
pushf
lock
push
ficoml
or
push
xor
imul
mov
push
out
repnz
popa
fisubs
and
out
add
xchg
flds
stos
sbb
adc
push
inc
add
pop
ret
ror
inc
adc
cmp
mov
adc
pop
pop
clc
cwtl
mov
and
xchg
fdiv
pop
inc
mov
fnclex
imul
nop
push
lds
dec
das
sub
jle
sbb
test
or
mov
xchg
repz
lcall
cld
and
addl
out
or
xchg
xchg
inc
mov
cmp
dec
dec
fcmovb
ret
or
sbb
sbbb
in
mov
repnz
in
sbb
icebp
out
sbb
pop
sub
dec
and
lods
test
cmp
scas
xlat
mov
mov
test
mov
and
gs
or
fdivrs
sub
hlt
pop
int3
mov
notl
sub
sub
inc
repz
pop
mov
stos
jle
sti
imul
adcb
repnz
das
inc
xor
mov
mov
sub
ret
stc
and
imull
addr16
out
fs
mov
push
xorl
jnp
xlat
mov
mov
call
stos
dec
out
xor
lea
push
movsb
adc
mov
jle
sbb
mov
mov
jle
push
cmp
jle
dec
lret
fnstenv
jns
lahf
cmp
mov
cmpsb
sub
hlt
adc
xchg
mov
sub
add
inc
push
les
shr
stc
mov
stos
push
mov
mov
adc
xor
loop
jp
leave
cmc
subb
inc
movsb
xchg
es
pop
jle
cwtl
mov
fadd
outsl
push
out
mov
pop
sub
lret
jecxz
fucomip
test
sub
cwtl
adc
in
mov
pushf
and
addl
xlat
inc
adc
aam
dec
push
cmp
cmp
call
inc
adc
insl
test
mov
mov
cmp
xor
mov
aad
in
jns
fsubrs
pusha
xchg
bound
loop
fisttps
adc
xor
aas
aam
xchg
add
dec
outsl
pusha
cli
xchg
or
nop
loopne
adc
pusha
xchg
xor
pop
dec
ja
or
push
pop
rcll
outsb
cmpsb
jp
loopne
xor
cmc
test
cmp
jecxz
pop
or
insl
inc
jo
loopne
je
mov
fs
cmp
and
ss
jns
ljmp
xchg
sub
xchg
test
shlb
push
dec
aaa
jae
cltd
fsubr
dec
xchg
dec
not
fs
popf
jle
add
lods
sbb
push
sbb
jmp
xchg
lds
adc
xchg
repnz
xchg
je
outsl
inc
xchg
mov
or
mov
movb
pop
inc
push
mov
and
scas
cmc
in
adc
sbb
stos
fidivrl
and
fcmovu
dec
jo
lret
or
push
mov
jne
nop
subl
out
mov
shl
ror
rorb
es
xchg
add
jae
jge
stos
aaa
fwait
sbb
push
sbb
xchg
pop
and
out
std
mov
mov
mov
out
or
test
pusha
mov
adc
sub
pop
test
dec
adc
mov
lret
xchg
scas
stos
and
push
rorb
mov
or
lods
in
mov
iret
sahf
mov
jl
in
add
rorl
mov
sbb
int
aaa
cwtl
ljmp
pusha
out
and
out
jnp
test
out
iret
add
mov
pop
jne
iret
fisubrl
cltd
mov
dec
adc
in
iret
das
insb
pop
add
push
lods
cmp
fildll
pusha
outsb
push
fmul
xor
aam
je
scas
mov
rcl
into
xchg
mov
sahf
push
mov
insl
lea
xor
aam
scas
int3
push
pop
and
adc
les
loopne
jns
insl
pushf
inc
arpl
pop
pushf
fnstenv
fildll
int3
pusha
xor
sti
jg
or
popf
fs
jle
rorl
fstpt
cli
mov
inc
mov
lahf
not
inc
mov
in
push
pushf
rcll
push
hlt
out
jge
mov
es
dec
pop
pop
outsl
add
lock
pop
movsl
les
notl
jbe
or
xchg
repnz
daa
push
mov
aad
mov
dec
sub
lock
outsb
mov
aaa
lahf
xor
jae
or
shll
sub
out
popf
notl
daa
xchg
and
push
sub
fnsave
inc
mov
jmp
enter
shrb
jg
or
inc
imul
das
jbe
inc
adc
out
scas
in
bound
out
inc
dec
imul
test
xchg
push
aad
xlat
jecxz
jns
xchg
in
xor
mov
add
out
aaa
mov
jno
push
pop
and
xchg
and
subl
out
inc
mov
mov
adc
ds
cmp
scas
or
leave
or
je
daa
mov
mov
mov
add
jp
ja
cmp
or
clc
mov
mulb
mov
int3
dec
sahf
push
mov
pop
xchg
dec
mov
cmp
loope
loope
ds
or
xor
mov
mov
xchg
adc
test
mov
loop
push
xor
fistpll
clc
mov
daa
divl
and
fdivs
arpl
cmp
or
shrl
stc
mov
stos
divps
es
test
imul
test
mov
pop
xchg
pushf
cltd
into
popa
and
push
arpl
push
mov
push
je
xchg
loopne
push
jbe
add
out
cltd
sbb
jl
xlat
std
mov
pushf
cltd
mov
icebp
or
fistpll
insl
add
push
stos
mov
jnp
imul
andb
xor
xchg
add
rolb
lods
jo
outsl
das
xchg
mov
lret
arpl
out
xchg
adc
adc
xchg
outsl
test
push
push
push
adc
test
adc
mov
push
repnz
jno
data16
jno
mov
mov
jl
out
pop
in
mov
or
pop
mov
ds
mov
shr
mov
mov
push
inc
test
cmp
popa
aad
imul
sub
sbb
sbb
cs
inc
not
iret
pop
push
sub
mov
adc
lds
or
xchg
inc
repnz
mov
xchg
notl
or
scas
xchg
cmc
and
pop
cmp
testb
or
lret
imul
test
in
or
addr16
nop
jecxz
xor
add
xchg
or
jmp
mov
and
out
bound
sub
jmp
add
fsts
imul
add
test
and
insl
shl
jnp
loope
pop
xchg
mov
loop
lahf
dec
push
bound
dec
arpl
or
addr16
dec
adc
jbe
adc
or
lods
dec
sbb
fwait
test
push
aas
jg
mov
jb
push
cli
mov
fldt
jle
mov
aad
mov
sub
pop
or
and
push
push
iret
xchg
scas
mov
xchg
xor
cmp
dec
ljmp
movsb
inc
lods
insb
ret
sbb
in
out
iret
int3
ja
inc
sbb
xlat
data16
repz
sub
and
cwtl
imul
xor
and
mov
or
adc
mov
icebp
cmp
mov
inc
out
and
and
cwtl
xchg
and
adc
gs
movsl
pop
push
daa
lcall
push
test
adc
cmp
mull
insb
cmp
dec
xor
addl
js
testb
mov
aad
mov
push
pop
cltd
sub
push
push
jne
mov
rolb
popa
in
sub
shlb
fstl
adc
xchg
sti
sahf
in
jns
sbb
test
std
movsl
bound
push
mov
cmp
out
and
jno
mov
sbb
adc
cmp
nop
lcall
or
int
and
mov
adc
scas
xor
pop
jmp
and
fcoml
add
aas
xor
popa
sbb
mov
mov
out
cmp
aad
sbbb
dec
das
mov
pop
cmp
mov
mov
scas
jmp
push
out
orl
roll
xchg
iret
imul
dec
lcall
lcall
jge
jge
jnp
add
mov
adc
sub
clc
sarl
mov
sub
inc
pop
int3
outsl
adc
cmp
sar
test
add
ja
fcmovne
sbb
pop
and
add
mov
adc
scas
sahf
sub
cmpsb
mov
mov
push
xor
xchg
data16
pop
sbb
popf
sbbb
xchg
fwait
loop
pop
push
and
dec
pop
xor
xchg
cltd
fs
lcall
push
sbb
out
add
in
push
dec
pop
xchg
and
mov
cmp
cmpsb
int3
es
mov
aam
jge
sub
xchg
or
mov
pop
sbb
call
jge
dec
std
pop
pop
xor
pop
daa
mov
cmc
cmp
lods
hlt
and
inc
icebp
add
inc
or
cmp
inc
cli
mov
lods
push
dec
rolb
in
xor
pop
idivb
adc
jae
repz
and
jb
aaa
mov
subb
jno
mov
xor
jl
add
mov
pop
lds
mov
mov
stc
dec
bound
lret
mov
adc
lea
inc
sub
mov
pop
loopne
js
mov
adc
cmp
cmp
mov
and
push
xchg
mov
mov
or
add
jp
in
jne
xor
sub
out
and
cwtl
push
adc
lds
imul
rorl
and
leave
and
arpl
xchg
in
add
into
mov
jnp
clc
sub
cmc
pop
inc
dec
push
outsl
in
cmp
push
pushf
aaa
out
mov
scas
leave
mov
jns
add
add
outsl
sub
cmp
and
nop
xchg
adc
pop
lods
mov
inc
aam
xchg
push
scas
repnz
inc
xchg
dec
leave
xchg
mov
int
outsl
fdivrl
movb
je
mov
lret
adc
lret
adc
mov
fdivp
andl
clc
xchg
out
mov
fs
sub
jns
and
dec
imul
into
or
sub
and
add
sub
lea
add
adc
xchg
cmpsb
int
lods
pop
jns
mov
pop
je
rcll
sbb
test
gs
testl
sbbb
adc
and
gs
xchg
add
mov
mov
or
icebp
add
adc
fistpl
stos
dec
dec
jnp
sbb
add
scas
xor
xchg
lds
mov
bound
cmp
addr16
imul
leave
cmpb
subps
xor
sub
sub
bts
mov
pop
ret
inc
pop
fldenv
ja
ljmp
cmp
lods
mov
fmuls
sub
xor
push
xlat
sbb
xor
into
ret
sbb
lock
daa
mov
in
fwait
xor
mov
jnp
xchg
add
push
loop
ja
mov
xor
sti
loope
dec
pop
jns
sbb
adcb
mov
pusha
cli
repnz
cli
nop
test
or
jmp
scas
sub
test
cmc
mov
ja
or
lods
rol
in
fadds
mov
xor
mov
xchg
mov
orl
cmp
xchg
push
mov
inc
out
int3
push
test
push
mov
sub
imul
mov
xchg
fucomi
aaa
or
adc
jbe
mov
xchg
loop
lods
and
xor
stos
sub
call
pop
dec
rorl
or
adc
xchg
pop
jo
fstpt
xor
mov
nop
xchg
xchg
dec
imul
xchg
aam
test
adc
pop
shl
mov
xor
cmp
mov
out
int3
lea
cmp
jle
shlb
stos
lahf
adc
sbb
xor
lcall
enter
test
scas
packuswb
xor
pop
mov
push
sbb
adc
gs
in
pop
lock
pushf
xchg
fmuls
mov
leave
icebp
es
dec
cs
pop
loopne
xor
dec
and
pop
sub
jl
fidivs
push
xor
fwait
inc
popa
sub
push
sbb
sti
pop
or
cmpsl
pop
dec
roll
cmp
cmp
aad
mov
cs
fwait
ss
mov
lret
filds
scas
jo
xor
pop
outsl
sahf
mov
iret
clc
mov
imul
sahf
outsb
xchg
shrl
out
cmp
outsl
xchg
xor
xchg
test
and
push
out
roll
fstpt
dec
jle
push
push
mov
sub
push
into
add
pop
or
add
movsb
pop
pop
push
xchg
push
mov
xchg
inc
sub
dec
sbb
out
shl
mov
js
pop
add
lcall
or
fld
mov
cmp
aam
pop
in
sbb
out
cmpsl
mov
or
loop
mov
shlb
inc
rcr
jl
add
jb
jp
adc
pusha
adc
ds
xchg
rclb
out
fistpll
ljmp
mov
mov
icebp
clc
ljmp
ds
ss
lds
mov
pop
sub
dec
mov
add
push
negl
insb
sbb
call
imulb
rorl
fstpl
fisubs
push
in
dec
mov
jne
bound
jg
mov
dec
in
jae
lahf
xor
pop
jne
ret
add
xor
sahf
inc
lods
mov
ljmp
lret
xchg
mov
push
hlt
push
inc
rcrl
and
loop
xchg
jne
enter
pushf
popf
mov
shlb
cwtl
cmp
xor
mov
fidivl
dec
xor
mov
jecxz
leave
ret
lcall
lods
or
or
mov
mov
mov
inc
adc
pushf
adc
cmpsl
int3
rcr
mov
jnp
loope
out
jne
jae
mov
cmc
mov
or
inc
mov
and
jmp
cmp
mov
jmp
jle
adc
push
fidivl
pop
clc
bound
adc
sbb
insl
cmpsl
xchg
cltd
cli
xchg
das
xchg
and
or
jecxz
jl
cmpb
mov
stos
mov
mov
add
sarl
push
cs
enter
gs
idiv
bnd
orb
sbb
popa
stc
pop
inc
xor
cmp
mov
ds
mov
mov
int
cltd
lahf
inc
pop
add
fs
sarb
out
push
fs
xor
jb
dec
or
out
cs
ja
add
xor
jmp
jb
push
mov
push
mov
scas
pushf
and
and
enter
add
mov
movsl
pop
movsl
dec
pop
jb
jl
loope
repz
popa
or
je
gs
subb
and
dec
call
clc
jns
loop
mov
out
dec
icebp
divb
fidivrl
or
lock
cmp
jne
lahf
orl
cmpsb
mov
add
sub
pop
inc
insl
mov
lock
pop
cmp
rolb
xchg
sbbb
sbb
icebp
push
inc
out
ljmp
addr16
jno
sub
fwait
insl
cld
hlt
call
call
ss
xchg
cmp
adc
add
jmp
test
inc
jbe
mov
jns
jge
and
xor
dec
cmc
mov
pop
and
pusha
inc
mov
push
xor
mov
imul
mov
xor
dec
or
push
and
push
mov
rcrl
mov
aad
pop
mov
mov
data16
mov
push
adc
adc
cwtl
arpl
into
shll
inc
cmp
xor
daa
xchg
xchg
jle
push
mov
add
cmp
and
xor
pop
sbb
outsb
in
jge
mov
push
shlb
mov
loope
ret
das
cmp
rep
dec
cmp
push
mov
cmp
mov
sarb
addr16
or
push
les
mov
clc
test
cmpsb
inc
cwtl
stos
test
ret
mov
adc
sub
into
jmp
sbb
loopne
test
fidivrl
movsl
sahf
enter
rolb
ffree
mov
xchg
addl
push
jmp
add
dec
js
es
pop
test
adc
jns
add
sub
mov
mov
ret
addl
or
push
or
sub
test
fldt
jp
jp
out
adc
repz
pushf
insb
fs
icebp
add
push
xchg
fimull
adc
call
icebp
or
mov
and
loope
jmp
pop
and
jne
add
hlt
ror
inc
shl
xchg
inc
stc
sub
pop
mov
iret
sbb
cmp
or
lss
adc
insl
pop
pop
rcl
mov
daa
xor
mov
ret
sarb
addr16
mov
pop
fwait
loope
push
fstps
fists
out
push
aad
lret
ja
dec
scas
fwait
daa
test
add
unpckhps
jle
and
or
cmc
stos
cmp
inc
fistpl
add
cmc
fcoms
cwtl
pop
daa
add
push
sub
push
ss
iret
push
call
xor
mov
repz
in
fst
xor
dec
fistpl
test
push
movswl
add
mov
out
mov
mov
popa
jno
xlat
ret
pop
aad
imul
pop
sbb
out
int3
popa
popf
mov
je
add
dec
jmp
call
movsl
js
sbb
add
ljmp
cmp
cmp
jo
jl
jo
jno
xor
mov
add
mov
mov
repnz
stos
cmpsl
sbb
fmul
dec
test
nop
mov
inc
add
push
add
les
pop
or
dec
nop
mov
mov
fbstp
nop
movsl
insl
mov
mov
pop
int
test
mov
mov
ljmp
daa
sbb
insl
or
xchg
sub
call
jle
fmull
imul
push
cmp
mov
xchg
out
push
xchg
jl
je
jecxz
and
shrb
inc
cmpl
pop
jno
loope
sbb
adcb
fs
fildll
or
and
mov
xchg
enter
daa
shrb
prefetchnta
in
loop
jne
push
jne
sub
sub
gs
lods
ljmp
movb
cmp
inc
cmovle
insb
add
repnz
mov
movsl
jns
outsb
add
lcall
rorb
xchg
mov
jle
sti
jnp
sbbb
data16
inc
sub
inc
mov
andl
icebp
xchg
movaps
loope
push
decb
stos
popa
or
adc
enter
xchg
xlat
pop
mov
outsl
xchg
sahf
adc
dec
jle
or
scas
sbb
dec
sub
fmull
add
imul
shll
xorl
inc
dec
push
pop
stos
add
push
fs
hlt
clc
ficompl
pop
jns
inc
inc
and
jmp
data16
fiadds
inc
sub
lea
mov
out
mov
fldt
loope
popf
addr16
mov
push
jl
mov
sub
xlat
fwait
roll
jb
add
nop
movsb
lahf
test
or
out
inc
mov
mov
add
cmp
test
mov
xchg
inc
push
in
cwtl
add
xlat
inc
pusha
shlb
aad
addb
sub
dec
xchg
mov
lds
imul
sub
xor
sub
hlt
mov
lahf
push
jp
sbb
jbe
popf
inc
mov
mov
orl
daa
mov
inc
pop
sti
pushf
inc
dec
gs
lcall
ret
iret
pop
jecxz
fs
pushl
pop
cmc
mov
sti
mov
xor
cld
add
and
add
jp
cs
clc
pushf
lea
addb
jge
out
movsl
mov
push
or
into
popa
mov
cmp
inc
mov
mov
push
mov
outsl
mov
xchg
xchg
adc
sub
shrb
repz
mov
pop
mov
dec
test
mov
mov
push
jns,pn
mov
mov
movsb
push
popa
cmp
shlb
das
stc
push
testl
arpl
pop
xchg
adc
xchg
pop
cli
aaa
movsb
or
add
sbb
pop
mov
or
adcl
out
clc
lock
jnp
xchg
xor
adc
cli
and
push
cli
inc
nop
imul
leave
jg
push
data16
insb
push
dec
lret
movsl
repz
jg
or
popa
js
xchg
jae
dec
sarl
sub
stos
push
ds
xchg
loop
and
ljmp
rorb
pop
mov
addr16
insb
add
push
aaa
insl
xor
or
jmp
movsl
rcrl
push
je
and
sbb
loope
testb
test
insl
jae
mov
ret
stos
lret
bound
les
imul
add
imul
in
adc
jle
leave
or
push
push
mov
insl
sarl
or
ljmpw
ss
pop
xchg
sub
mov
loope
paddusw
les
adc
imul
sbbb
es
cmc
and
leave
mov
ret
dec
andb
jnp
xor
out
hlt
hlt
xchg
xor
dec
movsl
cmp
push
fcom
test
test
sub
fsts
xchg
adc
out
fnstsw
or
inc
inc
aaa
jp
hlt
clc
int
daa
adc
xchg
pop
shll
pop
ljmp
inc
push
mov
xchg
scas
data16
dec
dec
sahf
push
ja
xchg
sar
push
insb
ljmp
mov
adc
and
stos
in
jns
push
icebp
imul
shll
and
lock
out
addr16
push
stc
std
fstps
cltd
inc
cs
popf
out
mov
les
not
cwtl
xorb
inc
pop
stc
loopne
sbb
les
xchg
pushf
sbb
mov
std
lods
in
lahf
inc
inc
dec
std
mov
adc
xchg
loop
rorb
xchg
inc
nop
cmpsb
mov
sbb
rorb
dec
shll
imul
cmp
in
in
ret
cld
out
jae
dec
repz
push
std
test
dec
xchg
stos
dec
cld
sarb
adc
cltd
les
repz
test
dec
rcrb
outsb
dec
adc
filds
icebp
push
mov
inc
mov
pop
outsb
xchg
out
mov
jae
cmp
jae
and
jecxz
bound
cmp
adc
sbb
ss
xlat
lcall
es
pop
jge
dec
movsb
push
loop
pusha
adc
scas
scas
inc
divb
sub
mov
orl
mov
lods
mov
and
js
xor
add
jb
pop
mov
dec
sarb
cmpsb
pop
mov
dec
loop
lret
mov
ret
inc
jns
mov
pop
lock
jo
sbb
dec
.byte
push
popf
xlat
