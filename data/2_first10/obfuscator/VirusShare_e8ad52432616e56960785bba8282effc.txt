add
add
or
add
sbb
add
ficompl
xor
add
add
mov
add
or
add
add
adcb
add
ficompl
xor
add
add
add
add
pop
add
add
mov
add
mov
add
ficompl
xor
add
add
add
add
addb
add
push
add
adc
add
ficompl
xor
add
add
add
add
test
add
add
add
add
add
add
pop
add
add
add
dec
add
push
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
jg
mov
mov
out
xor
aad
add
jp
daa
out
jno
cmc
fimull
arpl
sub
cmp
push
popa
mov
pop
mov
aam
inc
add
in
fwait
std
xor
es
insb
sahf
je
test
scas
or
dec
pop
nop
xorb
loop
fidivrl
fs
fnstsw
xchg
pop
jns
in
mov
int
arpl
outsl
inc
jne
fwait
jmp
out
ret
ljmp
jne
dec
inc
and
ror
push
push
jne
aam
test
andb
jle
fs
les
sbb
je
lea
mov
xchg
and
push
rcrb
sbb
push
fwait
sbb
loope
rorb
ljmp
inc
mov
mov
std
mov
cs
sub
aas
out
stc
shll
fs
xchg
and
jo
mov
pop
pop
mov
and
in
in
stos
push
mov
jo
daa
imul
lds
adcl
mov
ljmp
and
sub
xor
mov
fcom
lods
lret
sbb
flds
cmpsl
repz
lea
rclb
gs
sti
sub
xchg
movsl
pop
mov
scas
pop
lods
xchg
cmp
fcoml
shl
andw
lcall
lds
xchg
femms
add
xchg
imul
jnp
loopne
inc
add
mov
dec
cmp
sub
inc
imul
or
hlt
xor
sbb
scas
fstp
pop
jg
xor
sti
sub
pushf
jle
push
cli
jbe
sbb
js
scas
and
fistps
push
push
jae
lock
fwait
shlb
push
test
popf
rcll
xchg
pushf
adc
sbb
jp
pop
ja
push
mov
adc
mul
xor
pop
pop
stc
mov
int3
add
es
xor
pop
adc
push
and
push
cmp
add
scas
popf
inc
roll
cli
xchg
jbe
addr16
decb
inc
test
push
push
sahf
push
das
inc
test
dec
int
pusha
cmp
das
and
lds
mov
push
insb
fcomip
xchg
sbb
aam
mov
inc
jmp
jp
mov
adc
mov
ss
sub
push
iret
push
stc
popf
call
ljmp
outsb
add
push
jns
xor
divl
in
in
es
iret
and
push
adcl
loope
xor
jnp
ja
xchg
imul
mov
cmp
adc
and
xchg
enter
cmp
aaa
repnz
ds
push
icebp
shr
xor
jb
lret
sbb
lret
addr16
mov
pop
popf
stc
mov
icebp
dec
imul
int
cmpsl
sub
orb
lock
xchg
arpl
js
xchg
or
adc
popa
jb
sub
sbb
push
addr16
cmc
cli
leave
xor
cmp
sub
loop
into
sub
cmp
stos
sbb
pop
test
test
hlt
repnz
addl
jmp
jno
mov
sub
jne
mov
sbb
fs
inc
xor
sbb
dec
popf
divb
sti
aaa
sub
jg
jge
lods
test
dec
xchg
out
sbb
mov
xor
xlat
pop
adcb
stc
inc
jecxz
jne
sahf
add
outsb
addl
adc
lods
push
cltd
movsb
add
xchg
rorl
notl
inc
mov
ljmp
push
rorb
and
mov
lods
inc
push
xchg
sti
movsb
lahf
js
or
xchg
jp
sbb
or
or
cmp
je
icebp
pop
cmpsl
jo
cmp
pop
inc
lods
dec
add
and
test
in
pushf
push
jne
add
fimuls
sbb
mov
cmp
out
repnz
push
and
negl
inc
xor
push
fsubs
push
arpl
add
push
xor
sub
sarl
cltd
mov
pop
fs
mov
js
push
xchg
testb
and
loopne
jbe
mov
les
les
mov
out
pusha
stc
test
pop
sbb
push
xor
and
rcr
out
jg
scas
and
pushf
ja
fistps
adc
cli
pop
cmpsb
xor
push
inc
out
movsl
repz
andl
push
push
jno
jbe
js
jp
cwtl
and
xor
inc
add
scas
xor
xchg
or
cmp
pop
and
pop
xchg
add
ret
add
pop
sbb
dec
cmc
mov
xchg
sbb
lret
imul
mov
iret
ds
adc
jo
mov
or
sub
adc
xchg
push
and
out
sar
lea
outsb
and
mov
mov
or
cmpsl
xor
and
push
lcall
jmp
lds
lock
inc
adc
ficompl
rdpmc
push
call
sbb
movsb
xor
xchg
push
mov
cmpsb
les
push
test
std
jecxz
in
lret
mov
dec
dec
and
dec
pop
pop
test
into
add
lea
push
in
bound
sub
lahf
cld
cli
xchg
je
inc
xlat
dec
jl
sbb
arpl
rcl
std
or
iret
jg
ficoml
sbb
shrl
push
jp
popa
pop
add
inc
mov
xchg
int3
jb
imul
outsb
xchg
dec
lock
cltd
add
fstpl
mov
cwtl
nop
adc
pusha
sub
push
sub
ret
stos
rcl
sbb
xchg
lahf
mov
mov
pop
sbb
adc
addr16
int3
test
mov
xchg
sbb
sbb
repz
dec
dec
push
int3
fs
push
stos
cmp
mov
in
xor
inc
mov
in
jb
inc
insb
xchg
inc
mov
or
mov
iret
inc
xchg
cmpsl
mov
clc
mov
hlt
fnstcw
dec
dec
insb
and
add
jbe
aas
mov
mov
scas
stos
test
repz
jge
pop
fucom
loop
nop
shrb
inc
fcomps
push
popf
loope
or
mov
pop
sub
push
out
push
jbe
xchg
call
add
mov
ss
fsubl
std
push
popf
push
int3
sbb
shll
ljmp
push
mov
xchg
jge
pop
in
jno
aaa
dec
or
or
lods
cmpsb
mov
pop
lock
mov
ljmp
ljmp
fists
aam
mov
jle
pop
popf
loope
pop
sub
pop
iret
mov
and
shrl
push
mov
xor
in
mov
les
aaa
fildl
xor
in
scas
inc
mov
sbb
aas
sbb
adc
fldcw
xor
fs
nop
xchg
jo
adc
dec
and
movsl
fcoml
mov
loope
movsb
data16
out
addr16
in
loope
dec
cmp
cli
cld
pop
in
scas
push
inc
lret
test
dec
mov
pop
popa
mov
loope
negl
es
in
lea
int
aaa
movsb
adc
int3
pop
jae
or
mov
es
mov
movsl
cmc
mov
pop
sub
push
stc
fcoml
pop
cmp
popa
fwait
ljmp
dec
pop
outsb
ja
pop
xor
jae
iret
lea
out
cmpb
jo
xchg
adc
xchg
mov
pop
push
movsb
fstl
lret
push
leave
aam
mov
std
jge
cmc
mov
or
jno
push
adc
cmp
shl
and
test
mov
cmp
scas
sub
pop
and
xor
mov
mov
mov
dec
mov
inc
stc
stc
test
mov
xchg
xor
out
fcompl
and
mov
mov
pop
jge
xor
sbb
scas
jae
outsb
out
push
cmp
xchg
movsl
js
mov
rol
mov
push
ja
fbld
sbb
adcb
orl
pop
jns
pop
push
push
cmpb
int
jae
test
or
jo
bound
xlat
out
cmp
mov
ror
fs
fdiv
cmpsl
jg
mov
imul
ja
pop
push
gs
or
pop
loopne
cmp
inc
leave
xor
xor
dec
cmp
pop
movsb
sub
xchg
mov
pop
mov
stc
sub
adc
orb
jbe
fwait
leave
popf
sbb
xor
fldenv
ljmp
sub
xlat
nop
cltd
push
lea
aad
out
ret
test
ret
mov
fcomi
inc
scas
insl
sbb
test
cmp
mov
mov
lock
push
xchg
jmp
ljmp
mov
add
xchg
cmp
jno
pop
dec
fwait
mov
into
and
or
xchg
add
dec
fidivs
out
pop
ss
xchg
mov
xchg
enter
cmp
jb
fwait
pop
cmpsb
imul
addr16
and
cmpsl
mov
insb
aas
out
sub
sti
movsb
mov
stos
in
push
mov
pop
lods
out
cmp
shrb
mov
inc
lret
xor
stos
mov
sub
mov
mov
std
pushf
xchg
adc
xchg
popf
jge
mov
lock
rorl
aad
fwait
push
mov
mov
cmp
scas
in
xchg
sbb
push
dec
cmp
orb
xor
test
push
pop
mov
sbb
pusha
dec
andb
cmp
orl
adc
icebp
aad
push
das
xchg
movsl
into
inc
arpl
pop
jmp
mov
jae
inc
push
cmp
inc
loopne
add
shlb
in
mov
sbb
or
fwait
push
outsl
sbbl
popf
mov
jmp
inc
jb
aaa
jns
cmp
arpl
daa
jne
adc
push
mov
xor
cmc
cld
and
scas
sbb
cmp
loopne
nop
sbb
ds
jp
fisttps
cmp
cmpl
insl
mov
sub
std
mov
call
lock
lock
push
mov
aam
xchg
test
bound
adc
pushf
nop
lods
aas
xor
dec
outsb
outsl
fnsave
loop
sbb
inc
xor
aad
sub
cwtl
xchg
mov
cmp
push
repnz
push
aaa
mov
dec
mov
jg
inc
decb
jecxz
es
pushf
call
and
leave
mov
inc
mov
stc
out
loopne
mov
aas
mov
int3
mov
pop
jns
jno
sbb
xor
sub
mov
push
ret
push
sbb
lock
dec
rclb
push
push
push
mov
jne
pop
mov
adc
dec
shll
xchg
es
insb
lret
mov
or
or
xchg
pop
push
imul
aas
popa
daa
addr16
cli
push
into
fst
lods
fidivrs
cmpl
gs
insl
aad
pop
out
inc
push
mov
adc
imul
adc
adc
outsb
xor
xor
mov
ss
out
lods
mov
movsl
stc
cmp
into
push
cmp
dec
cmp
xchg
dec
mov
dec
cld
cs
mov
out
scas
lret
jb
loope
pusha
dec
stc
movsb
push
outsl
pop
dec
decl
stos
out
test
rolb
testl
xor
jp
push
and
inc
xchg
ret
mov
jmp
fdiv
mov
pop
adcl
orb
movsl
push
cmp
leave
enter
pop
cmpsl
mov
sbb
or
cmpl
sub
cmpb
adc
mov
xchg
ja
cmp
in
mov
xor
xor
xchg
jmp
jo
cmp
dec
sub
ljmp
cmpsb
adc
adc
into
cmp
push
sahf
dec
cld
jno
gs
pushf
add
dec
xchg
pushl
jns
cmc
add
call
and
pop
xchg
pusha
mov
inc
ret
shlb
popf
jge
fwait
ret
jne
xchg
loopne
stos
dec
loop
in
fistps
mov
xlat
adc
out
xor
adc
inc
xor
sahf
outsl
dec
hlt
adc
aaa
movsl
out
call
inc
mov
out
jge
cmp
repnz
punpckhbw
inc
shll
loope
in
insl
outsl
and
jo
popa
or
or
xor
sbb
or
fs
out
mov
push
jecxz
push
popf
out
push
jle
inc
push
push
ret
pop
adc
aas
adc
les
dec
cmp
push
push
aam
jns
mov
divb
pushf
cmp
scas
es
clc
and
mov
dec
or
sar
lret
xchg
inc
push
adc
mov
sub
loopne
cwtl
dec
mov
push
mov
mov
cmp
mov
fs
imul
or
push
mov
call
in
int3
fdivrs
dec
scas
das
pop
jb
mov
push
and
out
lret
xchg
cmpsl
sbb
outsb
mov
jmp
dec
cmpsl
loop
dec
push
mov
push
rcr
xorl
jae
pop
cmp
xlat
mov
xor
adc
call
ljmp
xchg
dec
sub
dec
cmp
pop
repnz
insb
int
pop
or
mov
imul
aaa
iret
sub
in
pop
int3
inc
outsl
pushf
push
adc
add
push
ret
adc
sub
inc
lods
inc
xorb
adc
push
mov
addl
je
lods
pop
jmp
or
in
add
push
sbb
xor
lahf
mov
mov
scas
repnz
and
repz
xchg
movsb
icebp
mov
dec
cmp
inc
inc
mov
and
pop
mov
fistpl
push
fsubrp
iret
aaa
nop
add
imul
in
cmp
push
pop
lret
inc
repnz
mov
adc
div
outsl
int
js
jmp
lret
adc
out
jno
jecxz
pushf
lods
fwait
lods
stc
pop
jns
inc
out
inc
push
das
mov
adc
adc
sbb
cmpsb
xlat
mov
hlt
mov
ja
pop
popa
test
jne
jnp
lret
push
adc
sti
mov
cmc
push
test
jae
in
or
iret
andl
fs
into
add
or
fdivs
iret
add
push
push
jle
add
xor
in
pop
in
adc
cltd
or
fidivl
push
nop
dec
cmove
cltd
popa
mov
adc
dec
sbbl
pop
cs
sub
cmp
push
dec
or
cmc
je
dec
aas
mov
bnd
jmp
sbb
repnz
inc
jno
dec
fistpl
cli
sbb
in
lods
addr16
push
adc
xchg
leave
iret
pop
dec
in
dec
clc
or
pusha
stos
loope
in
adc
mov
push
ja
cs
fldt
ja
push
and
ss
sbb
push
mull
mov
aaa
sbb
flds
jne
push
adc
rorb
repnz
ja
popa
enter
push
in
dec
or
mov
mov
cmp
mov
cmp
lods
mov
and
mov
imul
xchg
lock
inc
cli
add
lcall
mov
sarl
data16
or
addl
inc
in
mov
cltd
xor
jne
sahf
cs
add
into
mov
mov
dec
sub
mov
add
movsb
xchg
filds
and
mov
mov
add
incb
aad
xchg
cli
in
push
jmp
scas
popf
jp
or
shlb
mov
int
xchg
ret
call
xchg
mov
push
out
xchg
movsb
mov
pop
dec
arpl
adc
nop
sbb
bound
shrl
pop
js
outsb
rclb
leave
pop
lret
test
out
pop
ficoml
mov
mov
sub
bound
js
std
fs
cmp
adc
popa
mov
dec
or
jmp
pop
sub
leave
jl
push
das
push
xor
lahf
fs
cmp
pusha
mov
cmp
int
add
pop
ds
pusha
psraw
paddb
xor
mov
push
mov
pop
fmuls
cmp
mov
xchg
jb
fimuls
int3
dec
jbe
jl
push
repz
push
adc
test
add
hlt
icebp
test
add
scas
jl
jecxz
popf
lock
fiaddl
sti
ja
into
mul
sub
stc
dec
ficompl
call
fdivl
cmp
outsb
adc
lahf
cwtl
jmp
and
fcoms
jb
sbb
lock
mov
insb
mov
dec
call
daa
popf
pop
sub
mov
ss
dec
add
aam
subl
mov
sti
lahf
fisubrl
push
xor
gs
jecxz
dec
fsubrl
xchg
add
pop
leave
iret
ss
xchg
xlat
inc
mov
push
repnz
loop
mov
jg
sbb
ljmp
or
jle
and
lock
xor
cmp
and
mov
mov
jae
fs
cs
lret
inc
in
sbb
push
in
js
ljmp
pusha
jp
lds
push
jge
mov
xlat
jle
fdivl
pop
repnz
out
jnp
nop
add
cmc
std
in
sbb
xchg
test
adc
pop
cmp
sti
xor
xor
pop
iret
loopne
push
push
jns
xchg
setge
or
test
cmp
outsb
mov
cmp
jecxz
jle
sbb
adc
sbb
lahf
dec
mov
cmpsb
bound
cmc
lahf
sbb
stc
cmp
int
pop
ds
sbb
lret
pop
test
push
lds
lcall
push
lret
sub
lock
imul
lret
mov
add
xor
clc
rorb
and
addr16
or
xor
mov
pop
fwait
dec
out
adc
mov
rorb
lahf
popa
push
iret
shrl
pop
sar
fwait
xchg
test
into
push
dec
xchg
dec
loopne,pt
jecxz
iret
dec
jl
testb
pop
pop
aas
pop
inc
insl
jbe
jle
fldenv
add
mov
jb
repnz
adc
inc
into
pop
inc
clc
add
and
outsw
sbb
push
sub
or
cs
cmp
pushf
sub
fs
mov
cmp
sbb
add
lds
movsb
scas
les
sub
icebp
push
jmp
jb
das
scas
mov
sub
pop
mov
mov
out
mov
es
push
pusha
arpl
out
cmp
dec
lods
or
ffreep
fcomi
mov
xchg
gs
xchg
fcompl
dec
ss
adc
mov
and
in
mov
inc
jbe
and
in
pop
push
xor
into
sub
sbb
gs
out
loope
mov
xchg
pop
lahf
lcall
pop
xlat
fcmovb
dec
xor
push
jnp
mov
into
jge
rol
scas
sbb
lods
call
ss
divl
in
sub
mov
icebp
xchg
push
into
dec
pop
movsl
mov
jp
and
mov
out
sti
sub
outsl
leave
lret
addr16
imul
mov
and
and
jno
ret
mov
daa
push
test
dec
pop
add
or
jo
adc
jne
pusha
int3
cmp
mov
push
xchg
sub
or
loop
adc
dec
adc
lcall
mov
mov
lahf
sbb
insl
mov
cwtl
sub
popf
push
imul
push
lret
cmp
bound
cmp
popa
and
data16
ja
test
nop
fdivp
xchg
inc
sbb
out
sbb
pandn
popa
sarb
push
jbe
mov
out
les
and
inc
sub
mov
lahf
inc
add
test
push
jmp
scas
dec
cs
les
mov
or
sub
and
dec
jge
push
pop
push
mov
push
or
int
int
cmp
inc
in
cmpsl
icebp
mov
jmp
xchg
fistps
push
and
fstpl
cmpsb
cmp
cmp
push
jnp
lcall
lds
xor
xchg
andl
scas
xor
leave
test
sti
jnp
cmpsl
inc
sub
xor
negl
stc
push
and
insl
hlt
lcall
out
lret
or
push
inc
jns
jnp
test
pop
pop
adc
sub
sbb
or
and
inc
mov
ja
cltd
mov
or
fwait
inc
add
adc
sub
sbb
and
std
mov
inc
jns
cmp
out
jg
lods
push
out
fistps
xor
cwtl
mov
mov
and
popf
mov
inc
xor
hlt
in
xchg
jle
or
cmp
sub
rcrb
loope
sub
cmp
daa
insl
repz
xchg
dec
adc
ss
and
shlb
mov
clc
or
cmp
sti
int
mov
jl
out
into
or
lret
add
popf
push
cli
pop
ja
mov
daa
pop
dec
out
pop
in
jbe
pusha
pop
icebp
cmp
sbbl
outsb
add
shlb
pop
int3
test
xchg
push
es
push
mov
fmuls
or
dec
cmpsb
mov
or
xchg
mov
out
scas
sbb
and
sub
andb
jo
test
xchg
xchg
mov
sbbl
inc
pop
push
or
aas
bsr
and
rcl
inc
pop
mov
dec
pop
ja
cmpsb
mov
push
mov
pushl
xchg
inc
cmpsl
gs
push
add
pop
mov
jmp
cmp
sahf
lea
mov
and
orb
mov
xor
test
or
or
scas
pop
fistps
or
out
scas
mov
jno
push
and
pop
push
jns
jbe
and
loope
ja
xchg
dec
sbb
push
std
adc
lods
adcb
insl
cmpsl
jg
adc
into
int
sub
mov
loopne
out
nop
adc
sub
call
movsl
lock
pop
or
pop
cmc
jbe
mov
sub
call
push
out
mov
jns
mov
aam
or
fwait
sbb
mov
in
jg
hlt
icebp
or
in
mov
lahf
xor
cs
in
insb
jmp
add
sahf
pop
cltd
mov
jp
mov
xor
bound
dec
add
xor
test
push
push
push
push
movsl
out
out
mov
sbb
pop
jnp
mov
jne
cmc
inc
rorb
in
test
jnp
iret
nop
mov
out
lea
seta
xchg
nop
push
xorb
in
pop
std
js
sbb
nop
lock
sbb
xor
xor
cmp
add
je
jae
add
int
xor
jp
aas
cli
adc
add
fwait
ret
mov
dec
loope
or
pop
jp
repz
or
push
mulb
hlt
add
movsb
iret
daa
inc
adc
mov
fldcw
add
sbb
mov
and
pop
mov
pusha
adc
mov
add
jae
pop
jl
add
mov
jo
adcb
dec
mov
mov
jo
push
rcll
out
mov
adc
add
mov
repz
xor
fbld
test
mov
add
xlat
aad
inc
loope
fs
cmp
push
jecxz
xchg
idiv
xchg
jmp
jp
jp
mov
aas
sbb
test
jg
ljmp
fnstenv
push
pop
out
lock
inc
jo
inc
ss
or
xchg
dec
clc
sub
out
jne
loop
sarl
inc
rorb
inc
or
out
int3
mov
adc
push
std
icebp
je
inc
dec
leave
mov
jb
jo
lea
xor
pop
inc
outsb
jns
sub
xor
xor
jb
lcall
aas
adc
push
lahf
shr
cmpsb
inc
jecxz
fisubs
xor
mov
aaa
or
sub
daa
mov
imull
xlat
and
cmp
mov
or
das
pop
in
cmpb
mov
pop
mov
inc
inc
and
mov
hlt
daa
cmp
adc
repz
add
movswl
hlt
imul
icebp
xchg
in
or
cld
ret
mov
mov
stc
or
rol
lret
push
orb
or
and
push
jae
xchg
out
movsb
jmp
jl
test
hlt
aas
push
jbe
aaa
leave
pop
rorb
mov
cmp
cs
aad
std
and
and
mull
pop
xor
out
add
pushf
add
push
adc
imul
inc
inc
mov
pop
in
push
mov
std
popf
lds
inc
sbb
pop
lcall
repz
mov
lods
and
pop
pop
sbb
stc
fsts
outsw
cmp
fcmove
mov
mov
dec
pop
adc
sahf
loopne
inc
aad
jl
mov
adc
ja
xchg
cmp
cmp
pop
mov
inc
jge
pushf
mov
dec
mov
loope
mov
in
ja
movsl
push
mov
insl
xchg
jge
adc
sarl
jo
inc
sbb
icebp
mov
or
out
ror
shr
aas
mov
mov
jo
mov
mov
insb
cltd
out
fdivr
sbb
das
mov
addr16
out
ljmp
xchg
mov
icebp
imul
and
lods
mov
push
jg
shll
stos
pop
push
ss
test
sub
cmp
add
pop
in
in
js
adc
cmpsb
pop
cs
div
pop
and
dec
clc
repz
aaa
mov
jno,pn
ret
lock
lds
sub
mov
jmp
pop
fs
push
jo
xchg
cld
testb
dec
sti
inc
arpl
lret
mov
lods
test
jmp
loopne
repnz
add
mov
movsb
push
cmpsl
or
subb
iret
bound
cmpsb
enter
jnp
xor
dec
sub
xor
les
addr16
adcb
faddl
pusha
imul
popa
push
ljmp
mov
aaa
inc
ja
outsl
outsb
jle
cmp
fsubrs
xchg
sbb
jb
sbb
push
xchg
loop
mov
add
lcall
orl
fwait
int3
sub
rcrl
or
bound
aaa
loope
pushf
aas
xorb
cli
lret
add
and
test
inc
adc
add
xchg
notb
xor
mov
and
imul
mov
shrb
push
cmpsb
arpl
mov
sub
sbb
mov
ret
decb
pcmpgtd
mov
sbb
cs
in
movsl
loopne
pop
imul
mov
fwait
jge
scas
cmp
loope
xchg
popf
mov
and
cmp
dec
lock
jo
xchg
or
pushf
ja
push
xchg
pop
call
aad
adc
cmp
cmp
repnz
out
int3
lret
push
jge
jbe
inc
mov
sub
add
imul
mov
in
pop
rcrb
jg
sub
test
sbb
push
xchg
inc
adc
sahf
mov
js
fstpt
jae
mov
outsl
cmpsl
repnz
xchg
nop
mov
xchg
cmp
mov
jo
sub
xor
push
mov
or
inc
mov
mov
pushf
test
inc
or
mov
int3
sbb
pop
push
pop
imull
jl
mov
orl
pop
jge
xor
cmp
xor
fstpt
sub
inc
dec
fwait
mov
xchg
adc
jns
movsb
int
or
mov
mov
imull
pop
mov
xor
add
in
fidivrl
pop
mov
pop
xchg
iret
pushf
inc
push
mov
push
loope
push
in
int3
mov
cld
rorl
aaa
mov
jb
lret
daa
addr16
popf
or
shll
repnz
mov
addr16
nop
and
nop
xlat
test
dec
daa
xchg
sbb
jae
repnz
mov
cli
push
shl
fldt
add
add
idivb
xor
mov
and
ds
rcl
jp
jnp
pop
ret
pop
pop
add
lret
in
mov
lcall
jg
js
mov
insb
jp
push
insb
enter
test
and
cli
inc
testl
adc
pop
mov
ja
jne
pop
or
inc
fdivrl
pusha
pop
shll
shl
ja
mov
and
xchg
test
rcrl
imul
jns
sub
mov
insl
xchg
push
mov
std
cmp
cmp
xor
rolb
xchg
test
pusha
jo
and
dec
stos
lcall
scas
mov
fildll
mov
aad
div
cltd
adc
or
mov
nop
sbb
test
popa
lea
stc
into
lea
dec
xor
mov
cmp
cli
mov
out
adc
mov
daa
jbe
out
test
dec
aas
mov
sbb
cmovl
cmp
push
es
negb
cld
rsqrtps
jge
jp
scas
inc
imul
ds
xchg
sbb
xor
mov
icebp
mov
xchg
xchg
stc
sbb
outsl
nop
cmp
jns
cmp
cmc
in
lock
xchg
lods
adc
int3
sbb
lcall
pop
divl
pop
scas
sub
push
shl
push
es
adc
out
jle
xor
pop
lret
mov
sbb
ret
loopne
sub
or
mov
cmpsb
mov
int
es
xor
push
add
repnz
ss
loopne
loop
icebp
je
in
jbe
out
jecxz
lret
or
jb
pop
sub
cmp
sbb
ret
mov
cwtl
mov
repz
insl
incl
out
dec
enter
push
test
and
push
cmpsb
jg
lret
dec
jo
mov
xchg
mov
sub
push
sub
daa
mov
int3
push
mov
push
push
adc
out
ljmp
pop
push
sub
inc
ljmp
adc
add
cltd
ret
cli
jae
je
es
subb
leave
stos
jbe
jo
pushf
js
xchg
test
out
cld
sub
sub
mov
out
pop
mov
xchg
mov
orps
aas
sbbl
xchg
sub
jnp
pusha
cmp
pop
adc
push
popf
je
in
jo
push
jp
cmp
lahf
jmp
out
roll
xchg
push
pop
loope
loop
imul
repnz
icebp
je
push
mov
sub
imul
dec
cmp
filds
or
movsb
jecxz
mov
sub
xchg
xchg
adc
jae
fistpl
jno
ja
xor
pop
movsb
push
jo
fstpl
lods
test
cmp
jmp
jecxz
outsb
add
mov
ss
or
aaa
and
sbb
and
ljmp
fs
push
fidivrl
xchg
adc
xchg
add
xchg
test
xchg
or
inc
shrl
sbb
imul
js
and
call
cmp
adc
aaa
dec
movsl
jae
xchg
inc
adcb
lcall
in
or
test
pop
jae
dec
stc
inc
pop
mov
adc
jbe
jnp
jb
aaa
sbb
adc
loope
aad
repnz
push
push
les
push
sbb
dec
pop
push
mov
mov
nop
stc
jo
add
shrl
dec
lret
inc
out
lock
push
xchg
dec
aad
and
mov
pop
dec
ret
cmp
inc
fs
mov
pop
push
add
lods
xchg
arpl
xlat
jecxz
push
add
cli
adc
push
lods
test
sbb
xor
stc
sub
in
fisttpl
lea
loop
jb
decb
mov
or
call
arpl
mov
mov
cmpb
and
out
or
jnp
aaa
mov
adc
add
push
inc
jl
int
push
jno
and
aas
push
les
cmpb
pushf
pop
xchg
cmp
add
in
or
out
add
jo
mov
pop
cld
inc
mov
dec
xchg
lods
mov
mov
inc
lods
aad
fcoml
ljmp
bound
and
inc
jp
sar
sub
test
xor
scas
sbb
call
cmpsl
loop
rorl
inc
sub
aaa
or
test
push
enter
leave
pop
lods
sub
add
andb
into
dec
xor
aaa
cwtl
ja
inc
add
mov
push
jecxz
inc
leave
inc
mov
imul
inc
cs
or
pop
jecxz
pop
or
mov
outsl
mov
xchg
dec
movsb
lods
inc
aam
push
testb
ret
lret
fs
aam
leave
pushf
ss
adc
adc
pop
iret
cmp
sbb
addl
inc
xchg
nop
push
fsub
lods
sbb
sbb
push
test
adc
popf
clc
sbb
push
add
loope
std
jle
testb
arpl
xor
subb
jbe
fwait
add
mov
ret
adc
into
loop
pusha
xor
adc
or
mov
pop
and
sub
add
mov
cmpsb
sbb
sbb
xchg
sbb
cmp
call
mov
lea
xor
and
stc
pop
je
push
in
mov
jnp
cmc
out
sahf
push
cwtl
sbb
sbb
inc
hlt
iret
data16
pushf
faddl
subl
mov
scas
xor
cmp
jne
mov
dec
sub
jmp
sub
pusha
fs
popf
mov
pop
ret
pop
inc
adc
and
xchg
jo
adc
mov
imul
mov
dec
int3
les
std
in
outsl
clc
jmp
add
pop
cld
push
add
inc
negb
int
iret
fsubp
fidivrs
and
sub
dec
mov
popa
sbb
jb
gs
sbb
or
push
getsec
and
xchg
push
adc
and
stos
xor
xor
mov
inc
jmp
arpl
std
out
sub
test
and
cmpsl
push
mov
push
or
jg
dec
inc
jmp
hlt
jnp
cmp
push
push
mov
cwtl
mov
inc
mov
pop
das
insb
jo
aam
test
xchg
ret
push
js
adc
iret
cmp
push
mov
lcall
sbb
ret
lahf
mov
xchg
cwtl
mov
jl
mov
push
xchg
jo
es
xchg
mov
xor
pushf
or
faddl
cmp
cs
rcr
cmpsl
mov
fistps
mov
cmp
bound
in
enter
mov
scas
mov
cmp
enter
hlt
shrb
push
mov
sub
sbb
pusha
adc
inc
popa
fs
push
jl
push
add
mov
ftst
pop
loopew
push
sbb
xor
mov
inc
xor
insb
loop
movsl
ljmp
pop
vpshaq
or
addr16
xor
adc
inc
cmpsl
adc
adc
imul
out
into
cmp
repz
jp
and
mov
fldcw
rorb
add
outsb
xchg
adc
mov
ret
cmpsb
je
or
dec
js
xor
push
ret
jl
add
inc
and
loope
fldl
xchg
sbb
xor
or
stos
and
shl
jmp
push
mov
ror
sub
inc
bnd
imul
mov
dec
xchg
push
pop
jle
add
adc
cli
sub
sbb
jle
movsl
pushf
pop
sbb
cld
ja
icebp
cwtl
xchg
pop
inc
push
lcall
aaa
cmpsl
sbb
mov
negb
pop
and
and
push
jg
adc
jmp
sub
xchg
mov
aad
xorl
add
push
ss
xchg
mov
popf
enter
es
andb
inc
mov
in
push
jno
sub
stos
dec
call
jb
or
mov
int3
push
add
sbb
fbld
and
std
stos
pop
adc
pop
jae
xor
xchg
lret
jcxz
jnp
jle
sbb
add
mov
cmc
mov
jbe
repz
shlb
xchg
loopne
push
cmpsl
aam
dec
xor
or
xchg
sarb
sub
in
ret
jno
fnstsw
push
aad
popf
clc
test
mov
nop
cld
dec
inc
imul
dec
addb
pop
mov
and
pop
push
in
mov
mov
cmp
sbb
mov
gs
mov
fs
adc
fsubl
pop
pop
push
jnp
cltd
ftst
pushf
xchg
xchg
ss
std
in
pop
jae
xchg
sub
ljmp
push
dec
mov
xor
test
pop
inc
jmp
sbb
xchg
stc
pop
xchg
aad
mov
fld
je
xor
imul
mov
fldl
xchg
test
test
adc
aad
jecxz
sbbb
lds
mov
xor
jecxz
pop
dec
jecxz
test
cmp
popa
and
mov
pop
pop
ret
test
push
pop
pusha
sub
cmp
jo
jnp
sbb
in
int
xchg
cmpsb
mov
int
scas
mov
imul
adc
insl
div
cltd
cld
push
push
cld
xchg
push
xor
add
fsubrp
mov
adc
ljmp
icebp
mov
imul
and
loopne
xchg
ja
daa
push
xchg
jp
in
mov
outsb
rolb
or
sbb
arpl
inc
stos
popa
fcomi
push
adc
gs
cmpsb
pop
sbb
shl
dec
ljmp
cltd
mov
out
cltd
jle
mov
movsl
cwtl
inc
clc
adc
dec
data16
into
adc
ror
or
pop
pop
mov
rclb
pop
ja
and
xchg
jns
out
imulb
mov
add
in
test
inc
scas
fcmovb
dec
mov
mov
loopne
insb
mov
xchg
inc
cmp
mov
jo
sub
cmpsl
sub
faddl
pop
or
and
insl
in
fcmovnbe
jmp
lock
sbb
jg
imul
pop
adc
loope
push
mov
out
clc
xlat
mov
pop
mov
call
fs
push
mov
cmp
add
fiadds
mov
sub
xor
push
dec
push
pusha
pop
and
sbb
xor
je
adc
mov
inc
insl
xchg
clc
jg
jmp
pop
add
fnsave
mov
dec
xchg
or
and
leave
shl
push
cmp
pop
ljmp
xchg
add
mov
cwtl
mov
and
and
lcall
xor
pop
cmpsl
gs
testb
fcoms
mov
aad
aas
dec
lock
mov
arpl
fsts
sub
loope
rcrb
sarb
cmovns
xor
stos
mov
gs
dec
cmp
cltd
shll
adc
stos
subb
pop
lret
mov
mov
xor
dec
dec
jge
push
decl
mov
mov
inc
xor
ret
and
or
xchg
jb
test
sub
mov
xor
dec
repnz
jns
outsb
cmp
xor
mull
nop
and
test
and
add
sarb
pop
rorl
jns
pop
movsb
pop
xchg
push
pop
mov
push
cmp
or
movsb
test
in
or
lock
outsl
push
imul
scas
lret
mov
cmp
std
mov
push
lret
inc
aam
aas
push
mov
mov
enter
mov
ret
lahf
adc
mul
add
xchg
lock
xchg
and
push
stc
test
nop
movsl
outsl
cmpsl
xchg
imul
lds
jg
fimuls
in
adc
idivb
clc
out
mov
stc
dec
xchg
mov
pop
pop
sub
sbb
dec
cmp
enter
call
pop
mov
or
iret
adc
in
cmpb
fbld
push
jb
test
xchg
ret
jge
and
mov
pop
xchg
push
lret
dec
repnz
add
jp
pop
add
mov
in
and
scas
stos
sbb
sub
dec
sbb
add
hlt
inc
sbb
cmp
ds
xorb
shlb
xchg
xchg
loop
das
mov
adc
jge
jp
cmp
lds
rolb
mov
push
scas
lcall
ja
xchg
mov
les
frstor
mov
flds
cltd
push
inc
aaa
movsl
mov
outsl
hlt
rclb
out
add
je
or
mov
mov
ds
inc
das
adc
cmp
outsb
hlt
mov
loop
adc
insl
xlat
pop
cmpsl
imul
sub
pop
xor
dec
jecxz
mov
and
rcrb
test
sub
or
fs
inc
std
hlt
jmp
idiv
mov
push
test
cmp
adc
and
repz
lods
cmp
out
jecxz
xchg
subb
inc
sahf
inc
int
and
mov
dec
sahf
in
adc
sub
sbb
dec
cmp
xlat
adc
pop
xor
adc
or
pusha
mov
mov
lret
push
inc
pop
mov
jle
mov
mov
mov
cmpb
mov
mov
or
jge
mov
or
leave
xchg
pushl
and
js
and
mov
hlt
push
adc
stos
lods
xchg
and
cmp
leave
inc
out
scas
test
dec
out
addr16
jb
dec
jmp
inc
repnz
mov
mov
mov
jecxz
inc
push
dec
xchg
xchg
nop
pushf
jbe
inc
mov
add
pop
xor
aad
repnz
mov
sbb
add
imul
pushf
arpl
test
sub
cmpsl
lds
mov
and
lcall
mov
adc
gs
mov
jge
dec
shll
test
out
fsubs
divl
bnd
data16
add
mov
inc
out
cs
orl
jle
clc
push
popa
adc
rcl
mov
ja
jmp
jle
out
lcall
or
addr16
pop
add
xchg
rclb
pusha
and
popf
mov
xchg
adc
sub
add
jae
sbb
shll
push
xchg
push
shlb
push
out
pop
lret
jmp
adc
inc
ljmp
xor
or
or
xchg
ss
loop
sub
jae
xor
testb
inc
mov
inc
cmp
add
sub
ficomps
repnz
mov
lret
das
icebp
jge
out
xchg
jno
ljmp
cld
or
sub
ret
mov
stos
dec
ret
inc
das
and
jmp
mov
sbb
sbb
mov
push
sarb
ror
rcr
push
icebp
ljmp
xor
imul
sub
in
es
jbe
popf
lea
mov
faddl
sub
outsb
push
idivb
mov
sarb
aas
and
std
gs
push
pop
test
add
pushf
add
dec
mov
mov
and
aaa
add
xchg
push
addr16
sub
aas
xor
jbe
testb
lock
rcll
daa
and
jecxz
push
jb
jbe
ret
dec
mov
mov
mov
inc
xchg
mov
aaa
ret
push
nop
adc
push
mov
jge
dec
push
js
mov
dec
xor
sbb
add
pusha
push
mov
mov
jae
lods
cld
push
jnp
sbb
sub
call
and
mov
jge
outsl
jnp
jge
sub
jle
lods
or
and
mov
mov
push
push
or
in
xchg
stc
rcrb
shl
mov
or
jnp
hlt
daa
bound
cmp
xchg
mov
inc
xor
lcall
adc
pop
std
mov
gs
rol
lock
bound
fs
stos
imul
pop
cmp
jb
pop
and
xor
pushf
rorl
mov
add
cs
push
dec
and
mov
cmp
dec
test
imul
xchg
es
and
mov
inc
icebp
mov
rcll
rclb
ret
fsts
cmp
and
push
cld
fsubrl
repnz
nop
sbbb
cmp
repz
add
sbb
sbb
mov
in
or
rcrl
xchg
negl
mov
pop
negl
sti
add
jp
dec
xor
test
sahf
orl
mov
add
mov
cmp
sub
sbb
or
lock
sbb
shl
nop
jnp
inc
mov
mov
xor
mov
popf
lds
mov
sub
syscall
fwait
add
push
jb
mov
mov
data16
fidivs
int3
add
sbb
pop
inc
jns
jno
or
shl
sbb
fistpll
into
xorb
fidivrs
movsl
test
mov
sub
or
cltd
cld
cmp
dec
out
jnp
daa
aad
ret
xor
cli
sub
jne
cld
lcall
andb
out
inc
mov
out
push
pop
xchg
mov
imul
pop
pop
mov
cltd
xchg
sub
lret
cmp
xor
shrb
hlt
push
outsl
cwtl
adcl
mov
pop
or
xor
and
in
pop
cmc
lahf
add
add
inc
sbb
jno
inc
jge
aam
outsl
push
or
and
je
mov
adc
xchg
cmp
pop
addl
movsb
mov
outsb
mov
mov
sbb
ljmp
mov
ja
je
addb
inc
xor
cmpl
popa
mov
push
lret
nop
push
loop
or
popf
jb
sbb
pop
xor
push
lea
xchg
mov
cmp
push
pop
ret
shrb
js
cmp
dec
xchg
jae
or
mov
mulb
or
je
das
jne
les
cltd
jbe
ds
dec
mov
cs
fcompl
mov
lret
or
adc
out
lock
jl
cmp
or
push
pop
psubusw
adc
xchg
sbb
out
mov
dec
jae
pusha
loop
dec
lahf
sbb
push
mov
cltd
aaa
dec
dec
lock
adc
mov
adc
lcall
cmp
mov
nop
imul
fs
lret
out
into
push
pop
in
pop
iret
insl
int
repz
dec
mov
mov
aas
push
fs
mov
icebp
inc
inc
inc
int
mov
lea
addr16
iret
push
xor
cmp
cmp
cld
sbb
test
pushf
enter
jle
and
push
adc
js
push
xchg
outsl
dec
fsubs
jb
sub
jl
call
lods
iret
in
arpl
pop
icebp
sarb
aad
pop
sub
imul
outsl
xor
jecxz
sub
jne
lret
inc
jge
testb
mov
dec
jns
pop
sub
pushl
jge
stos
ss
dec
sti
scas
xor
inc
and
aaa
push
fs
loop
out
xor
dec
fnstenv
xor
pop
in
into
mov
test
mov
pop
in
and
insl
ret
jl
mov
push
cmp
shlb
inc
std
scas
lea
xchg
add
jb
dec
push
adc
add
jnp
mov
roll
and
or
cmp
sbb
add
std
jne
pop
xor
ljmp
mov
pushf
divb
jbe
shlb
ja
cld
and
mov
sub
lds
es
add
or
scas
not
push
push
movsl
sahf
fwait
cmpsl
out
xor
lock
jnp
or
sbb
mov
mov
add
shlb
cmpsl
xor
jp
icebp
movsb
das
jae
test
pop
jge
pop
ja
out
sub
cwtl
bnd
xor
adc
nop
xlat
sti
insl
in
xchg
jb
lods
arpl
enter
mov
fcoms
fcomps
mov
push
inc
movsb
and
test
jns
mov
inc
les
add
mov
decb
ja
ret
push
loope
xchg
cli
pushf
fs
jbe
es
insl
sarl
dec
and
push
mov
xchg
pop
loopne
push
and
jle
mov
iret
mov
push
xchg
sti
pop
cmp
push
cmp
es
icebp
xor
inc
mov
adc
or
mov
lahf
mov
clc
jno
or
gs
mov
sbb
iret
jp
pop
cmc
imul
mov
and
pop
mov
andl
ret
dec
pop
into
in
or
push
lds
outsb
mov
lret
jl
mov
push
pushf
add
xor
icebp
pop
jae
dec
sbb
push
inc
jmp
les
push
aas
pop
out
adc
inc
gs
test
adc
or
pusha
mov
out
add
mov
inc
xor
lods
lahf
sub
and
mov
into
pusha
arpl
sar
out
mov
adc
movsb
loopne
arpl
add
pop
mov
outsl
mov
ret
sub
mov
and
push
shr
inc
stos
es
testb
push
pop
jno
and
repnz
dec
mov
dec
sub
jge
clc
mov
push
sub
or
inc
adcb
cmp
inc
push
popf
rcl
sbb
add
add
cmp
xor
sbb
mov
and
xlat
xchg
xchg
mov
dec
mov
shlb
cmp
jbe
lea
add
push
arpl
adc
enter
xlat
cmp
dec
adc
sub
sbb
mov
orb
lock
or
mov
fdiv
mov
hlt
ljmp
xchg
sarl
push
mov
and
das
in
pop
cmpsb
fwait
mov
sbb
stos
inc
xor
das
inc
add
xchg
mov
ljmp
mov
sub
ljmp
inc
loopne
sub
inc
mov
pavgb
int3
mov
push
lods
xchg
xchg
test
fisubrs
mov
or
adc
push
inc
rcrl
lea
xor
stos
mov
fdivrl
pop
add
jmp
repnz
jne
cld
clc
mov
add
repz
insl
push
sub
or
jbe
inc
mov
and
sub
dec
addr16
sbb
or
jecxz
fdivr
mov
cmp
popf
int
or
insb
fcomp
cwtl
add
add
mov
mov
movsb
xchg
in
push
sub
mov
inc
jle
xchg
iret
jle
leave
popa
xor
mov
mov
jg
addr16
fsubl
popa
jg
addr16
inc
ss
push
lcall
mov
mov
mov
std
sarb
and
lret
dec
mov
and
sub
rcr
stos
add
xor
jnp
fiadds
lahf
push
scas
mov
rcrl
or
in
cld
dec
arpl
dec
ret
xchg
loopne
sbb
push
jae
test
in
fisttps
xchg
mov
mov
jl
pop
adcl
fwait
test
fmuls
pop
outsb
mov
adc
dec
les
aas
push
pushf
sti
or
mov
ja
lods
sub
mov
les
jnp
fsubp
jmp
xchg
adc
ljmp
push
rcrb
push
mov
push
loope
call
out
mov
lds
pusha
insl
hlt
jmp
sahf
je
daa
mov
rcrb
cmpsl
into
cwtl
jge
ret
outsl
cltd
popf
jmp
pop
xchg
sbb
push
cltd
pop
shrb
lea
repz
jge
or
mov
mov
jnp
push
ss
jge
mov
jmp
pop
fisubs
lock
in
les
sbb
stos
jns
pop
or
in
dec
nop
adc
wbinvd
inc
mov
andb
cmpsb
adcb
out
jae
shrl
push
push
xchg
scas
out
test
repnz
jle
push
mov
pop
xlat
or
out
scas
add
sub
movsb
sub
lcall
outsb
inc
or
rorl
orb
mov
dec
cltd
sbb
ret
mov
fmul
mov
decl
das
sbb
inc
gs
aad
adc
sub
inc
out
rcr
mov
add
xchg
in
xor
mov
pop
pmulhw
daa
push
sbb
pop
int3
cs
mov
lahf
mov
jns
push
out
jae
xor
pushf
adc
sbb
fsubrs
pop
inc
jle
cmp
nop
xchg
mov
mov
test
adc
mov
push
arpl
sbb
dec
xor
lds
sbb
mov
inc
cmp
push
out
lcall
loope
iret
add
mov
jbe
adc
out
call
imul
sub
cli
scas
pop
jle
xor
push
je
lods
filds
clc
mov
lcall
adc
xlat
je
sbb
mov
pop
mov
or
cmp
negb
cli
cmpsb
lahf
in
ret
ljmp
and
fdivrl
test
and
dec
sbb
outsb
sti
popf
andl
fidivrl
lret
rcl
jl
inc
mov
sbb
loopne
mov
sar
sbb
or
repz
xchg
xchg
mov
call
sbb
push
and
jb
jl
cmp
or
pop
cmp
and
push
orb
pop
imul
lods
pop
test
cmp
add
push
insl
inc
push
fldcw
ret
daa
jecxz
hlt
mov
mov
sbb
sub
ret
cmp
lods
movsl
lock
add
aas
sub
cmpsl
sub
sbb
sti
mov
icebp
lret
bound
sbb
shrl
into
jmp
pop
pop
and
jl
out
rorb
pop
or
jle
ds
pop
push
xchg
mov
stos
mov
or
jnp
dec
lcall
sbb
mov
pop
push
push
mov
ljmp
add
orl
fstpl
ja
sub
sbb
ja
or
push
scas
jns
or
push
mov
cmp
fsubl
mov
aad
pop
mov
gs
ret
push
fisubrs
mov
orl
sbb
sub
or
cwtl
sbb
addl
mov
or
outsl
repz
jne
inc
cmp
int
cmp
add
mov
cwtl
cmpsb
out
sub
push
cwtl
mov
jno
nop
add
das
daa
mov
in
add
shll
sub
pop
daa
daa
pushf
push
adc
add
pop
mov
js
sbb
cli
lcall
jge
outsb
aam
out
sub
scas
les
into
adcl
mov
mov
adcb
rolb
sti
ret
loop
jae
push
and
je
pop
test
call
test
cmpsb
cli
inc
sub
sub
sti
jo
fwait
sbb
xor
out
ret
sbb
aam
pop
mov
es
frstor
push
push
dec
loopne
cmc
test
sub
cmp
aam
iret
in
loopne
jecxz
out
cwtl
inc
push
push
xor
enter
and
jnp
xchg
out
int3
shrl
mov
rorl
dec
mov
adc
sbb
bound
mov
push
je
xchg
gs
cwtl
adc
in
adc
aad
sbb
jl
sub
arpl
clc
lretw
cs
sbb
sub
leave
lret
loopne
jb
mov
mov
nop
loope
xchg
sbb
pop
inc
cltd
clc
popf
cmp
inc
xor
xor
push
mov
and
and
xor
pushf
and
repz
loop
mov
out
jl
xor
popf
cmc
push
mov
pop
lods
in
xchg
add
and
jne
jo
adc
cld
in
mov
mov
andb
out
hlt
cwtl
cmp
pop
adc
push
iret
mov
clc
jno
imull
idivl
pushw
pop
mov
loopne
inc
xor
sbb
sti
sub
mov
inc
rorl
lret
popf
sbb
and
popa
xor
sarl
loope
in
dec
rcrb
or
sbb
push
pop
jno
xchg
test
mov
xor
and
cli
outsl
ret
test
lods
cmp
pop
ja
negb
cmpsb
xor
cmp
cmpsb
cwtl
popa
xchg
or
or
aad
mov
aam
add
xor
inc
sub
bnd
call
jle
sbb
imul
push
js
js
aas
adc
or
pop
cmp
push
dec
adc
dec
repz
outsb
pop
mov
lret
frstor
xlat
jle
push
and
sub
xor
dec
pop
enter
scas
cld
push
inc
cmc
add
add
jge
sub
lds
cs
orb
out
mulb
outsb
mov
scas
lret
jbe
fs
cmp
jge
or
arpl
sbb
jns
sahf
sbb
inc
clc
xor
push
cld
lret
leave
ds
int3
rcrb
push
cs
fsub
lret
sub
ffree
aaa
cld
sub
dec
test
call
push
xchg
add
adc
sub
xor
sbb
inc
pop
pop
hlt
jne
cs
mov
sub
adc
lds
loope
sti
stos
pop
scas
inc
sahf
push
neg
mov
cmp
scas
inc
xchg
pop
ja
aam
repnz
xlat
jg
fs
ret
inc
stc
mov
sbb
mov
xchg
and
or
pop
pop
cld
jl
mov
inc
stos
aad
dec
sbb
rcr
int
sbb
sbb
out
mov
add
sub
in
jnp
rclb
aam
xor
mov
loop
repnz
lea
cmp
push
icebp
ljmp
fisubrl
ds
mov
je
int
mov
push
inc
jecxz
and
js
pop
xor
fistpll
test
or
adc
xor
dec
sub
jnp
and
jge
into
and
test
jp
subl
xor
lods
fwait
pop
dec
test
adc
xchg
push
cld
cld
ret
push
aad
xchg
rol
xor
jnp
push
push
andl
xchg
shl
and
or
insb
push
dec
shlb
dec
outsl
popa
mov
cmpsb
adc
sub
les
fwait
hlt
in
insb
mov
xchg
xchg
leave
xorb
insb
inc
scas
outsl
cwtl
adc
out
sbb
in
hlt
mov
bound
xor
lahf
shll
dec
sbb
sahf
fucompp
mov
jge
sub
push
lret
cmp
nop/reserved
jbe
jge
xor
fcomps
stc
inc
out
push
pushf
mov
cs
hlt
test
fdivs
sarl
sbb
gs
inc
fwait
cmpsl
jp
inc
into
in
data16
mov
sbb
jb
stc
fmul
js
int
mov
adc
push
cs
cmp
scas
xor
mov
sahf
addr16
sbb
aas
outsb
mov
and
fwait
sbb
dec
ljmp
lods
mov
jge
add
outsb
sub
jge
mov
lret
sub
outsb
verw
js
sbb
popa
mov
popf
push
mov
sub
iret
mov
add
jmp
sub
lahf
xor
xchg
xor
cli
cld
aas
addr16
gs
call
pop
lret
or
gs
test
sub
jae
sub
orl
fisubrs
fwait
mov
mov
sbb
iret
or
pop
dec
aas
adc
gs
or
mov
into
xor
sbb
jmp
mov
jae
jmp
push
inc
neg
in
bnd
rcr
inc
movsl
jnp
add
mov
test
mov
test
xor
add
adc
pop
rcl
loop
pushf
xchg
or
xor
aad
inc
adc
repz
xor
cmp
dec
pop
xor
mov
test
xchg
inc
and
iret
dec
jg
insl
js
mov
xchg
outsl
jnp
sbb
xchg
mov
mov
adc
xchg
cltd
fbld
cmp
sbb
mov
dec
sbb
xchg
call
xchg
or
inc
mov
mov
and
sbb
cmpsl
sub
into
push
scas
dec
pop
push
mov
es
or
lock
shrb
inc
pop
add
imul
mov
jae
mov
push
inc
sbb
lcall
add
int3
pop
ret
fidivrs
pop
dec
ret
stos
pop
xchg
mov
lods
icebp
jae
daa
imul
call
xlat
sbb
push
cmp
cmp
fisubrs
mov
mov
pop
adc
fisubrl
sub
push
push
mov
idiv
xor
inc
aam
icebp
cmp
popa
stc
sahf
lret
into
ss
and
cmp
stos
and
mov
mov
jp
jne
js
daa
jp
cwtl
mov
out
or
push
cmpsl
and
inc
push
push
cwtl
xlat
out
js
inc
ljmp
dec
inc
mov
lods
sub
inc
xchg
out
jmp
cmp
inc
pop
jl
les
push
push
aas
inc
or
add
jmp
mov
mov
rcll
push
pop
cli
pop
nop
test
mov
rcrb
xchg
ljmp
jmp
inc
in
push
push
adc
or
sub
push
aad
notl
add
xor
xchg
fwait
ljmp
inc
fdivs
orl
jne
mov
jo
cs
adc
inc
stos
and
cmp
lret
pop
popf
cmp
lahf
or
sub
add
aaa
mov
jmp
movsb
xchg
push
sub
or
fldenv
xlat
insl
mov
inc
push
popa
jnp
and
mov
icebp
ret
test
adc
fidivl
mov
dec
cmpb
in
cmp
ljmp
std
cmc
jns
mov
into
pop
out
testl
mov
and
jb
push
out
pop
mov
stc
out
addr16
cmp
fpatan
adc
repnz
cmpsl
dec
push
cmp
loopne
shl
mov
sti
cltd
test
outsb
ltr
test
push
rcr
fiaddl
imul
mov
stos
cld
pop
ret
sbb
popf
jno
mov
stos
mov
in
xor
push
insb
cmp
arpl
cmp
xchg
mov
fmul
dec
fs
adc
add
pusha
mov
mov
call
pusha
adc
pop
xchg
nop
test
stos
add
cmc
inc
repnz
repz
cmp
adc
add
jge
fisttpl
fstpl
cmp
shlb
sub
cmc
sbb
packssdw
jo
hlt
push
and
mov
cwtl
out
gs
pop
push
js
push
rcrl
mov
stc
leave
dec
aaa
outsl
push
pop
sahf
sbbb
loop
addr16
xchg
mov
cs
mov
pop
jecxz
dec
dec
add
notl
adc
add
out
bnd
stc
sbb
stos
dec
daa
fiaddl
jp
mov
out
pop
adc
sbb
inc
cmp
adc
mov
fstps
and
pop
adc
add
scas
neg
int
in
cmp
inc
movsl
testl
or
fldl
push
or
adc
fs
bswap
push
shlb
out
lea
cmp
xchg
in
ret
adc
cmp
inc
pop
call
rcl
ds
pop
push
popf
cld
sbb
lahf
pop
push
mov
xlat
sahf
test
cmpsl
iret
jle
jecxz
dec
mov
sub
jge
jle
or
inc
adc
sub
repz
aaa
call
mov
int3
stc
arpl
roll
mov
scas
stos
pusha
and
rcrl
cmp
mov
jns
or
leave
sti
cs
rcrl
mov
mov
cmp
les
jnp
add
mov
es
mov
jge
inc
insl
add
dec
add
lods
je
sbbl
adc
xor
cwtl
insb
movsl
push
xor
or
jne
jl
sahf
mov
pushf
lret
dec
div
xor
das
stc
cwtl
dec
insl
popa
das
jge
fstl
repz
mov
mov
pop
sub
stos
hlt
cmp
orb
mov
repnz
fidivs
mov
push
ret
test
push
fidivrs
mov
jae
or
mov
add
pop
pop
xchg
push
add
stos
imul
mov
ljmp
push
loope
sbb
int3
push
push
outsb
lahf
out
loopne
inc
inc
jo
in
sbb
loope
add
push
lock
and
xor
dec
sahf
mov
add
cmp
cmpsb
adc
out
xchg
pop
push
xchg
movsl
add
or
mov
iret
js
mov
jae
mov
mov
retw
mov
mov
js
lcall
mov
push
cwtl
pushf
sub
lcall
push
push
pop
xchg
iret
mov
add
loopne
pusha
mov
lods
xor
imulb
arpl
mov
cmpsl
je
and
sub
mov
mov
xchg
imul
jp
stc
jb
cmp
sub
cs
jae
lea
addb
stos
adcb
in
inc
cmpsl
jb
mov
test
push
ds
xlat
mov
pop
jno
add
inc
add
sub
sub
sbbl
mov
mulb
cmp
sbb
push
lods
jns
stos
and
jne
add
xchg
ds
lret
clc
call
and
pop
jle
lods
jne
xchg
jne
cmpb
xchg
inc
jne
sbb
andl
sahf
rdtsc
fsubl
xor
fs
dec
icebp
scas
insl
test
jnp
flds
sub
jno
jbe
int3
xor
push
sbb
jmp
mov
pop
sbb
or
repz
jg
lock
mov
mov
jmp
nop
xor
mov
pop
cmp
fadd
mov
jmp
bound
shrb
fbld
arpl
lcall
xchg
lods
sbb
dec
in
xor
imul
mov
in
arpl
hlt
jne
sbb
adc
add
fs
outsl
and
dec
cmpsb
fcoml
dec
fadds
sbb
test
movsb
mov
lahf
sbb
jns
nop
mov
cmp
mov
scas
dec
jmp
data16
movsb
mov
push
xlat
dec
testb
dec
je
and
stos
outsl
aam
push
jmp
mov
fists
sub
or
mov
adc
leave
xor
in
xchg
orb
xchg
in
lret
iret
mov
xchg
popf
cld
lahf
lock
push
or
inc
jbe
jg
movsb
and
iret
lods
cmpb
imul
or
ds
mov
xchg
jo
pop
inc
in
sub
test
lret
aaa
cmp
mov
cld
pop
push
int3
sbb
jmp
lcall
push
sbb
mov
cmc
stos
dec
xlat
cmpsl
pop
and
dec
out
gs
aad
add
lcall
in
xchg
dec
ffree
sub
das
xchg
push
push
or
or
jno
daa
shlb
gs
es
dec
dec
ss
dec
push
stos
lret
filds
lcall
lods
jp
jecxz
cmp
cmc
lret
mov
push
shll
or
xchg
fnstenv
sub
jg
lret
lcall
push
push
inc
mov
dec
mov
mov
push
mov
mov
ret
ss
enter
jnp
pop
insl
in
mov
xorl
xor
enter
rcll
add
pop
jae
push
js
andl
mov
ds
lods
imul
loop
sbb
in
in
push
push
mov
mov
xor
inc
orl
fs
cmpsb
pop
ret
call
cmp
insb
fcoms
add
or
inc
cld
dec
test
pushf
movsb
aas
lock
adc
push
fiaddl
imul
mov
repnz
scas
adc
dec
jle
lds
sets
fistpl
xchg
add
dec
aam
mov
imul
outsb
push
icebp
insl
mov
test
jb
lahf
jl
push
ljmp
out
call
ds
filds
int3
cmp
mov
add
loope
mov
mov
push
lods
xor
rcll
ljmp
mov
jb
imul
pop
icebp
sarb
rorl
imul
insb
pop
nop
mov
hlt
inc
and
insb
pop
fmul
sbb
lahf
mov
push
stos
faddl
aaa
inc
leave
pusha
dec
sub
mov
aaa
xchg
outsl
cmovne
mov
inc
pusha
sub
mov
dec
and
fnstsw
add
mov
sbb
cmp
cmp
clc
lret
jge
ret
mov
inc
stos
test
lds
cmpsb
push
jmp
int3
decl
push
jmp
add
jo
or
xchg
sbb
dec
fstps
inc
aaa
and
outsb
adc
in
enter
pop
mov
jno
in
fisubl
fcomi
xor
sahf
pop
scas
jl
mulps
jle
xchg
or
add
std
addl
jle
mov
ja
scas
mov
data16
push
in
sub
mov
mov
loop
mov
xor
test
mov
test
sub
insb
lcall
rclb
imul
jl
pop
or
jecxz
ljmp
add
shlb
shlb
and
in
xchg
mov
loopne
jl
repz
sahf
shl
push
and
in
sub
cmpsb
cs
cs
adc
ljmp
daa
out
jg
add
lret
push
aad
mov
push
jle
lea
sbb
push
rorb
lock
xor
adc
jl
les
sub
sarb
jnp
adc
imul
sub
daa
push
pop
lahf
cmp
cmc
inc
shll
ljmp
out
int
daa
outsb
in
and
stos
call
jb
dec
mov
xor
add
xor
outsl
fimull
ljmp
stos
cmp
xor
mov
or
das
bound
stos
push
sub
mov
insb
adc
iret
lock
cmp
cltd
std
push
std
sbb
dec
push
jecxz
in
jne
in
fwait
cltd
dec
ds
adc
push
push
or
mov
mov
repz
insb
std
push
jnp
push
xchg
clc
add
push
sub
mov
jb
pop
cmp
mov
loope
mov
or
jl
cmp
lretw
test
sbb
adc
sub
xlat
jno
sub
xor
rcl
mov
cmp
push
out
push
mov
pop
scas
mov
out
outsl
andb
shl
sbb
jp
mov
es
call
fwait
jmp
mov
add
cld
inc
stos
shrl
sub
or
cmp
dec
mov
mov
out
in
das
imull
pop
cmp
push
add
call
and
enter
mov
cmc
stos
cltd
mov
mov
xor
jmp
sbb
je
jl
add
pusha
push
repnz
mov
ret
push
or
mov
lea
sbbl
lahf
mov
add
inc
push
cmp
jno
das
push
mov
cwtl
inc
xchg
sub
sbb
push
inc
fsubrl
or
aaa
jl
or
xchg
iret
push
imul
mov
add
jno
mov
mov
push
scas
jo
in
arpl
aad
mov
mov
enter
and
mov
cld
add
subl
ret
xchg
nop
roll
arpl
das
dec
icebp
cmpsb
sbb
xlat
push
aaa
dec
dec
push
inc
lods
shrb
push
inc
ja
and
dec
mov
in
aad
push
data16
xor
mov
mov
pop
scas
cmp
or
push
push
bound
fisubrl
cmpsl
and
in
add
fisubs
jno
hlt
mov
jle
in
testl
and
stos
xchg
adc
add
inc
sub
loop
and
adc
out
inc
lea
pop
xor
ljmp
mov
inc
faddl
xchg
dec
jo
cmp
push
mov
nop
dec
in
lods
lods
mov
imul
test
dec
outsl
jmp
in
mov
repz
shrb
cmpsl
mov
xorl
jecxz
shrb
pop
adc
inc
sub
sub
test
add
sub
inc
push
stos
push
mov
dec
adc
push
cltd
test
pop
mov
pop
ljmp
sub
jp
adc
cs
mov
mov
mov
outsb
loop
fiadds
arpl
sti
adc
pop
je
add
xor
loop
fidivl
ret
test
js,pn
mov
adc
push
push
hlt
push
jl
jnp
ret
jge
xbegin
test
sti
and
add
inc
out
cmp
imul
mov
jo
dec
sbb
mov
dec
push
add
xor
das
test
sub
sbbl
cmp
out
fcmove
xor
push
dec
insl
xor
cmp
repnz
xchg
dec
shr
cmp
repnz
xor
loopne
ja
mov
lret
scas
xlat
lds
pushw
rcrl
daa
and
add
push
or
xor
mov
gs
shl
rolb
int3
rorb
mov
cmpsl
scas
pop
addr16
jmp
jmpw
sub
loope
rcll
sub
push
sub
mov
ret
jecxz
xchg
pop
in
xchg
xchg
movsb
pop
notb
xchg
aam
lret
cmp
add
pop
adc
or
mov
lods
inc
jns
loop
fistpl
cmp
push
into
sub
outsb
hlt
xchg
sbb
and
sahf
arpl
fnop
add
push
pop
inc
xchg
mov
mov
adc
inc
xchg
sbb
dec
sarl
es
test
ret
pusha
push
cwtl
mov
pop
int3
add
out
outsb
test
inc
movsl
push
xchg
ljmp
sbb
cmpsl
jb
or
and
adc
mov
pop
mov
adc
nopl
xchg
mov
xchg
adc
int3
test
and
xor
sbb
xchg
xor
sub
jle
sub
mov
stos
stc
inc
mov
pop
or
mov
adc
popf
mov
mov
xor
ja
dec
in
cmpsl
cli
inc
dec
and
mov
scas
repnz
ret
insb
icebp
push
adc
add
add
fistps
sbb
enter
sbb
jp
inc
out
mov
sub
ds
jae
cmp
hlt
cmc
mov
das
cmpsb
retw
loop
fadd
xor
xor
test
in
mov
shrl
xchg
imul
std
adc
xlat
push
or
cmp
lods
cli
shl
add
mov
adc
loopne
jo
adc
xor
lret
call
push
xchg
out
out
cmp
mov
push
cli
aam
xchg
mov
fucomp
mov
and
fstpt
cmp
aas
test
je
mov
into
cs
cmpsl
in
or
sarl
jecxz
mov
sub
mov
cmp
lret
jno
lods
daa
push
test
xor
ror
outsb
push
js
stc
idivb
inc
aad
into
sbb
rolb
ret
lcall
sbb
cld
adc
or
repz
adc
pop
push
push
outsl
adc
inc
rcrb
jecxz
fistpl
rcr
lea
add
dec
and
in
jae
in
cmp
dec
loopne
mov
in
xchg
cmp
mov
mov
cltd
mov
call
jns
jae
mov
pushf
jg
adc
xor
stc
or
mov
jns
mov
out
rclb
arpl
rep
stos
adc
leave
shl
lahf
dec
loop
sbb
xorb
mov
jp
cmp
adc
cmc
sbb
out
imul
mov
sbb
stos
push
int
mov
or
mov
adc
imul
cmc
stc
and
sbb
std
or
pop
aas
jle
xor
test
xchg
dec
add
mov
mov
pop
xor
aas
ds
inc
clc
mov
idiv
cmp
mov
loope,pn
adc
lret
mov
jp
aad
mov
push
mov
pop
mov
enter
andb
scas
sub
mov
push
push
jg
jb
jb
inc
xor
fwait
cmp
outsb
or
adcl
icebp
mov
ljmp
dec
daa
xlat
sub
andb
adc
pop
add
fiadds
and
sub
sti
mov
mov
repz
dec
pop
mov
sbb
mov
loopne
arpl
sub
xor
pop
leave
xor
and
enter
lods
and
or
sub
cmp
je
call
xchg
jae
xchg
and
or
fidivl
mov
enter
or
test
jmp
and
lds
rcrl
xor
or
andl
and
cmp
jnp
cld
out
fwait
gs
gs
jne
sahf
sahf
fisttpl
push
sarb
mov
pop
aaa
sarb
icebp
mov
mov
mov
push
lds
add
aad
out
mov
dec
xorb
das
fwait
les
inc
xor
xchg
inc
adc
inc
jae
jp
or
repnz
xchg
sub
pop
aad
int
xchg
repnz
cs
call
mov
xlat
inc
dec
push
test
fs
mov
or
cmp
xchg
pop
fs
cmpsl
popa
sti
sti
loopne
push
pop
sub
test
add
xchg
push
pop
mov
cmc
je
or
jge
inc
jle
xchg
jecxz
cmp
mov
dec
cmpsb
aas
loope
or
mov
push
inc
daa
or
cld
dec
in
sbb
add
aam
xor
dec
ss
mov
stos
jno
mov
mov
lds
stos
push
lods
sub
adc
add
shrb
mov
pusha
sub
sub
add
das
adc
pop
jno
xor
pop
push
and
inc
hlt
pop
or
insl
inc
adc
mov
enter
push
sub
and
in
mov
dec
mov
adc
dec
cltd
sub
push
xlat
xor
mov
fcmovne
out
xchg
mov
shll
and
das
pushf
mov
je
xchg
fdivrs
mov
xchg
mov
sbb
sahf
mov
xchg
jne
movsb
xchg
int
in
add
jb
fcoms
rcll
cltd
inc
adc
and
sub
shlb
mov
mov
daa
and
mov
add
je
lcall
gs
xchg
rcrb
mov
push
lods
pop
shll
sub
test
into
dec
in
or
daa
arpl
es
sti
or
test
cli
popf
mov
push
popf
sub
jns
xor
mov
mov
and
inc
addr16
arpl
pop
jns
mov
or
cmp
aaa
sti
mov
stos
or
pop
inc
clc
notb
cltd
rorl
sahf
bound
in
adc
jl
int3
rcll
jmp
add
jp
and
ret
subb
mov
dec
aad
mov
inc
mov
aas
aas
push
ja
inc
xacquire
dec
cmpsl
xchg
lret
mov
rcl
je
movsb
inc
ret
xorl
inc
lods
add
js
fwait
cmp
jo
adc
leave
into
incl
aad
pusha
sbb
lret
sbb
stos
jo
stc
popl
mov
push
std
andl
push
fs
pop
outsb
cmp
or
jg
cwtl
pop
adc
adc
lahf
jo
std
and
jb
xchg
add
lea
inc
jnp
mov
test
adc
orb
mov
repz
sbb
cmp
pop
jbe
dec
mov
clc
movsl
subl
hlt
gs
xchg
shrl
pop
sbb
mov
dec
mov
inc
ret
aad
aaa
add
pusha
frstor
repz
and
mov
xor
je
test
cmpl
inc
cltd
adc
int
push
int
ret
int
and
or
lcall
xor
out
repnz
pop
shll
xor
mov
jne
rsm
inc
inc
sbb
xchg
mov
mov
arpl
sbb
sbb
andb
mov
scas
mov
inc
aad
dec
inc
cmp
repz
les
daa
push
fwait
shll
and
add
dec
mov
into
iret
jne
adc
dec
inc
cwtl
outsl
test
mov
scas
psubsb
pop
push
adc
cmp
int
out
arpl
jl,pn
mov
add
sahf
xchg
and
imul
enter
jl
jnp
in
and
rclb
or
scas
cmp
mov
xchg
clc
adc
int
mov
bound
cmpsb
xor
je
pop
push
aad
ja
jmp
orl
movl
mov
sar
xchg
mov
sub
insl
scas
xchg
adc
push
mov
imul
lret
xchg
jo
rol
js
adc
inc
push
lea
mov
test
sub
adc
les
lea
xchg
cmpsb
jo
jae
aad
and
std
sar
add
fildl
mov
imul
mov
aad
bound
je
imul
add
ss
fwait
add
mov
jle
jle
sbb
mov
xor
scas
rep
cltd
add
dec
push
push
mov
imul
jno
jno
and
fisubs
sbb
mov
call
xchg
dec
sbb
jmp
cs
jno
fwait
xchg
mov
pop
pop
inc
aad
or
mov
xchg
cmp
sbb
ljmp
mov
push
lods
jne
lret
pop
push
test
scas
push
stc
loope
rorl
sub
inc
cmp
les
sarb
sti
or
mov
ret
jb
jb
inc
cmp
bound
xchg
push
movsb
mov
out
push
add
pusha
call
insb
iret
add
jmp
xor
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
add
inc
add
nop
inc
add
add
add
add
add
add
add
