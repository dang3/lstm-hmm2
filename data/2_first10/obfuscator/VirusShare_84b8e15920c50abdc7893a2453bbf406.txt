jg
das
dec
dec
fsubr
loopne
and
cmc
and
shrl
xchg
adc
in
jle
push
or
sub
pop
pop
into
xchg
pop
rcrl
cld
and
jbe
inc
frstor
add
add
scas
dec
adc
jge
mov
clc
mov
imul
ja
xchg
sbb
fldl
push
xchg
sub
test
pushf
imul
adc
cmpsb
mov
cmpxchg
xor
nop
jge
dec
test
and
nop
inc
dec
lds
mov
ljmp
push
and
jmp
andl
push
mov
push
add
jbe
out
faddl
xchg
and
and
repnz
lcall
or
sub
rcr
pop
popl
stos
mov
pop
mov
sbb
andb
jnp
loopne
enter
cmc
mov
lds
cs
jp
loope
daa
pushf
jb
or
adc
lahf
fldl
shr
pop
sub
iret
repz
sbb
shrb
and
pop
sti
sub
or
xchg
in
outsb
test
ret
sbb
inc
and
add
fcmove
xor
pop
out
jo
xchg
packuswb
jne
aad
arpl
push
push
mov
aad
gs
int
push
aaa
or
push
sub
inc
pop
xorb
jge
cmp
jnp
jecxz
aaa
rcr
ljmp
aam
popf
mov
rol
daa
sbb
inc
push
iret
lret
and
xchg
inc
loopne
aam
into
cs
dec
das
pop
in
lock
pop
mov
repz
xchg
aam
ljmp
jle
ljmp
inc
test
push
push
loop
dec
dec
push
sub
mov
cwtl
mov
or
dec
mov
shrb
lock
xor
es
fnstenv
pusha
jecxz
aam
fdiv
mov
and
push
repnz
jp
push
add
in
call
outsl
loopne
lcall
ss
stos
sub
je
dec
add
addr16
out
push
mov
jge
lods
adc
jp
pop
loope
insb
dec
dec
insl
daa
pop
dec
dec
pop
pop
add
jbe
push
adc
aad
xor
aad
jne
xchg
pop
mov
add
dec
xchg
mov
jmp
push
mov
loopne
pop
mov
sti
imul
mov
gs
mov
cmp
add
push
rorl
aad
rcrb
aas
xchg
ss
imul
ss
icebp
dec
and
add
sbb
cmpsl
jo
inc
int
aas
ds
bound
stc
sub
sahf
les
fsubrs
out
xor
es
dec
mov
in
std
ljmp
cmp
out
sbb
cli
dec
dec
xchg
push
and
cmp
jb
mov
add
cmp
imul
movsl
xor
and
sar
adc
dec
test
jo
pusha
push
dec
jle
int3
push
xor
push
pop
mov
in
lret
xchg
sbb
cmpsl
adc
sti
test
xor
arpl
rorw
mov
test
jle
stos
mov
mov
mov
mov
lea
push
movsl
je
lcall
mov
and
inc
pop
adc
pop
push
cs
xor
in
insb
pushf
es
lret
xor
xchg
test
loope
xchg
mov
nop
test
std
and
loop
sti
pop
int
inc
jno
lods
mov
xor
or
inc
das
sbb
es
or
push
pop
inc
pop
scas
or
imul
add
dec
mov
xchg
orl
xchg
mov
cmpsb
nop
in
pop
xchg
inc
data16
cld
hlt
mov
fwait
push
repnz
xor
xchg
stc
pop
sbb
add
mov
lcall
dec
jbe
jo
adc
add
int
rcrb
sub
fidivl
push
call
pop
cmp
stos
loop
imul
movsl
decl
push
or
sub
inc
mov
pop
or
pop
jge
xchg
jne
jmp
jg
inc
mov
cmp
lock
add
fmuls
scas
nop
imul
mov
mov
cmpsl
mov
loopne
fstpt
ret
stos
gs
lods
adcb
fwait
mov
and
into
imul
xchg
gs
dec
cmpsl
jle
mov
test
xchg
fucompp
inc
cmp
bound
pusha
std
aaa
fbld
pop
iret
jne
insb
stos
lods
xchg
out
add
insb
imul
pop
cltd
fnsave
add
inc
sti
fcoms
adc
xadd
stc
mov
sub
test
ljmp
mov
dec
lcall
movsb
xchg
sbb
insb
movsb
xor
movsl
mov
jle
xchg
sbb
or
and
lret
movsb
push
in
out
in
xchg
mov
dec
jne
sarb
cmpb
ljmp
mov
pop
add
rcrb
cmp
nop
sahf
fwait
and
mov
iret
xchg
fidivl
push
pop
mov
fs
shr
mov
fistpll
rcl
lea
sub
fcoms
sbb
push
pop
adc
mov
fisubrs
incl
ja
add
stos
or
cmpsb
mov
xchg
test
loopne
and
cmpsl
ja
pusha
mov
xor
sub
jb
mov
xchg
xchg
int3
stc
jne
jnp
loope
sub
arpl
cltd
test
mov
idiv
pop
pop
sbb
adc
inc
add
dec
divps
adc
pop
int3
in
xchg
stos
mov
call
or
lock
loop
inc
cli
xchg
cld
fwait
pop
cmp
in
cwtl
jns
hlt
cmp
daa
cmpsl
push
push
ret
or
in
mov
pop
dec
mov
or
add
out
loop
or
cmp
jbe
or
cmp
mov
inc
lea
lds
push
adc
dec
jnp
nop
dec
jl
imul
mov
cs
mov
icebp
addb
xor
jecxz
fisubrl
pop
int3
notl
inc
lret
cli
xchg
leave
and
mov
dec
adc
gs
repz
push
scas
sub
ret
dec
cli
pusha
push
mov
addr16
sbb
mov
add
cli
inc
or
gs
push
push
mov
or
jl
xchg
aas
es
inc
testl
dec
scas
rolb
dec
nop
test
push
or
or
jl
add
add
jmp
jle
ljmp
mov
aad
orb
jo
mov
stos
jno
int
outsb
xor
or
xchg
ljmp
sub
adc
pop
push
into
mov
xchg
dec
jno
jno
cmp
cwtl
mov
xchg
in
or
test
pop
test
adc
call
add
and
mov
push
mov
popa
sbb
mov
cmpsl
inc
lahf
sbb
or
mov
push
dec
sti
pop
test
sbb
cmp
jl
pop
and
lock
pop
cmpsb
push
mov
cmp
out
add
enter
push
stos
stos
nop
clc
dec
mov
pop
mov
inc
mov
inc
scas
cmp
inc
shrb
jno
je
idivb
push
jg
test
addr16
and
outsb
lahf
aad
lret
mov
popa
leave
jge
adc
push
sbb
ljmp
bound
cmp
dec
lahf
or
sub
outsb
add
add
cmpb
dec
xor
mov
je
sti
cmc
push
mov
out
test
in
or
mov
outsb
lahf
jge
push
imul
mov
cmpsb
push
mov
xor
imul
test
cli
push
inc
push
insb
pop
imul
ds
mov
push
pusha
lods
mov
cld
fbld
push
test
pop
jmp
les
lret
xchg
xchg
and
adc
fsubrl
data16
test
lea
jb
popf
pop
negl
adc
fdivl
cli
xchg
cmpsb
jg
sbb
xor
sti
adc
cmpsb
xchg
pop
adc
sub
das
cmp
je
xlat
in
mov
mov
lahf
hlt
aas
cmpsb
sub
add
icebp
pop
pop
and
push
mov
into
and
mov
cmp
xchg
mov
fadd
pop
push
ficomps
xor
iret
in
pop
mov
out
lds
test
arpl
pop
jo
loop
sqrtps
cmp
scas
scas
dec
enter
pop
sbb
adcb
xchg
jmp
dec
mov
je
sub
jecxz
scas
ljmp
or
shrb
xcrypt-ofb
cmpsl
stos
dec
rcrl
fdivrs
mov
inc
add
and
sarb
cmpb
call
ret
std
add
cltd
mov
notl
std
mov
fnstenv
in
xchg
xchg
clc
dec
in
inc
retw
mov
jae
xor
rcrb
or
push
mov
test
push
mov
dec
jb
cld
clc
sub
jno
xchg
push
push
in
dec
pop
imul
or
dec
std
fldl
sbb
or
jg
popf
or
icebp
or
es
scas
inc
mul
inc
xchg
mov
fwait
test
mov
push
pop
mov
ret
pop
rcl
push
push
cwtl
imul
adc
orb
movsl
loopne
cwtl
int
ja
jmp
sub
push
jmp
mov
loopne
stos
jae
inc
mov
ficomps
enter
inc
cmp
push
jnp
dec
sarl
fbstp
adc
jmp
jg
pop
inc
push
insl
call
adc
or
pop
ret
dec
cmp
push
mov
xor
cmp
jge
cmpsb
insb
sub
mov
cmp
lahf
xor
cmp
or
out
xchg
lds
les
cld
lahf
repz
mov
mov
ret
mov
rorb
int3
mov
into
and
and
mov
idivb
jmp
lds
pop
int3
out
jae
push
mov
xchg
cmp
insb
frstor
mov
pop
sbb
cmp
push
add
inc
and
fidivrl
or
nop
adc
fdivs
call
push
fs
mov
arpl
lret
fdivrp
incb
sub
rcl
sbbl
cmp
lcall
and
sub
sub
lret
jb
cmovge
hlt
pop
dec
stos
hlt
or
popf
xchg
mov
mov
add
insl
enter
push
lods
push
add
ret
jno
sbb
xchg
loope
jge
fildll
or
jns
fstpt
and
xchg
std
mov
cmp
cltd
adc
sbb
lods
push
inc
fisubrs
add
inc
js
ret
mov
jg
mov
pop
out
ja
adc
dec
sbb
mov
sbb
inc
imul
movsb
push
or
enter
es
add
das
and
sti
clc
mov
jno
lods
or
mov
frstor
out
sub
jp
pop
xchg
dec
out
cltd
add
outsb
and
jb
mov
push
inc
xchg
gs
movsl
adc
and
jmp
int
loope
jb
fdiv
mov
inc
inc
fwait
pop
xor
jp
outsb
sbb
jmp
adc
sub
popf
xchg
sub
xchg
mov
jb
movsb
jne
daa
push
xchg
fsubrp
fwait
ja
jp
mov
std
lea
loopne
adc
mov
into
aas
jo
rolb
test
push
cmp
enter
mov
arpl
dec
fwait
push
lock
test
xchg
adc
sbb
fstps
outsl
sbb
mov
xor
imul
jg
sahf
adc
test
mov
inc
ret
bound
enter
jg
mov
sub
andb
push
lret
xor
std
shrl
jp
cwtl
inc
add
std
nop
pop
lock
aam
jge
push
mov
sub
mov
jb
add
test
cmpsb
fs
and
add
pop
jne,pn
shrl
dec
ficomps
xchg
clc
mov
mov
shlb
sub
lret
vmovlpd
les
add
cmp
and
or
mov
mov
mov
insl
imul
xchg
test
imul
mov
js
jmp
push
jns
push
pusha
fists
andb
inc
sbb
xchg
sbb
jge
push
add
inc
shll
ss
jecxz
lea
cmp
in
jmp
jne
inc
call
mov
arpl
and
inc
mov
fcoms
das
pusha
cwtl
lods
dec
shlb
and
insb
jnp
mov
adc
xchg
add
cmp
icebp
and
mov
mov
scas
out
mov
or
cmp
in
add
jle
scas
adcl
mov
sti
add
ret
pop
cli
insl
call
cmc
dec
jnp
and
pop
outsb
jp
push
mov
adc
xchg
mov
addr16
add
jmp
cmpsl
shrl
pop
adc
enter
sahf
mov
pop
sub
jne
pusha
test
push
mov
into
push
jno
or
push
or
xlat
add
mov
cmp
inc
icebp
popf
inc
and
mov
mov
mov
div
jle
jno
leave
insb
aas
cmc
repnz
in
addr16
sub
cmp
mov
roll
fs
das
mov
notl
loopne
jl
lea
mov
out
add
and
lods
adc
clc
loopne
ljmp
cmp
jle
cmp
or
call
sbb
sub
cwtl
jmp
nop
fadd
js
push
push
push
dec
sar
pop
aam
aas
push
outsl
pop
jbe
dec
add
andb
orb
int
jns
xchg
mov
mov
adc
js
dec
cmp
dec
jne
mov
rcr
mov
inc
int
push
jbe
mov
mov
inc
pushf
push
sti
and
out
fwait
pop
pop
jno
iret
ret
insb
cmp
mov
popf
out
xchg
icebp
xor
shll
movsb
push
sbb
cld
add
out
cmp
clc
int
aas
adc
mov
mov
pop
aaa
add
sbb
adc
orl
enter
mov
jne
test
test
lds
aad
add
mov
jae
test
sahf
xor
pushf
xor
pushf
movsl
push
cwtl
enter
xlat
mov
push
lods
lret
rcrl
inc
xor
mov
mov
cwtl
aam
gs
or
out
or
stos
div
sbb
or
jo
pop
xchg
call
mov
sahf
popl
mov
pop
ficoml
cmp
push
pop
pushf
repnz
test
pop
aam
push
dec
cmp
jg
dec
iret
insl
sahf
mov
push
or
or
adc
sahf
lret
pop
test
mov
or
jnp
cmpsb
insl
or
xor
imul
leave
dec
xchg
add
sub
loope
adc
cmp
fld
cmp
imul
cli
sarl
jno
jle
imul
cltd
mov
sub
push
jg
cmpsb
xchg
je
imul
xchg
scas
xchg
les
dec
ret
or
rorb
gs
fucom
aaa
dec
es
add
jbe
mov
dec
lret
cmp
outsb
aaa
ja
sub
imul
inc
or
insb
xchg
fistl
add
push
imul
ljmp
fldt
arpl
pushf
and
xchg
cmpsb
int
jl
push
cmp
jnp
das
xor
cmp
insl
and
mov
lds
test
popa
add
mov
sub
outsb
or
inc
pop
repz
jp
dec
or
les
in
imul
sub
int3
insl
out
or
dec
outsl
pop
xchg
xor
sti
mov
test
gs
push
lds
and
inc
shr
dec
in
stos
or
jae
and
cmc
popa
sbb
push
incb
and
jg
sub
jge
movl
inc
pop
std
push
ljmp
div
daa
popa
push
imul
sarl
jnp
aam
vpbroadcastd
xchg
outsb
dec
cmp
xchg
out
cmp
mov
add
sub
int3
divl
cli
push
jge
push
dec
lds
sub
inc
mov
push
sub
push
test
add
dec
mov
cli
pop
adc
lods
inc
lret
add
lds
cwtl
mov
pop
adc
push
mov
sbbl
cli
mov
call
lds
cld
in
adc
in
andb
xchg
jae
movsb
pop
jecxz
push
adc
inc
mov
or
stos
mov
pop
shrl
out
sub
clc
leave
xchg
xorb
repz
dec
into
mov
push
jnp
mov
lret
and
xchg
int3
lods
and
fisubs
aad
out
pop
dec
and
mov
xchg
or
xchg
pop
cmp
and
daa
mov
and
push
mov
xchg
repnz
nop
dec
xchg
ret
rcrl
lret
or
cmpsl
xor
jno
push
pop
dec
or
fildl
sub
mov
fisubrs
adc
jmp
cli
pop
lret
arpl
movsl
rcr
fcmovu
mov
and
lcall
inc
aas
sbb
jmp
test
sahf
stos
push
clc
cltd
jbe
fs
ljmp
push
inc
lds
add
loopne
movsl
or
ds
cltd
in
mov
sarb
push
dec
xor
dec
and
or
xor
icebp
hlt
shll
xor
xor
adc
pop
daa
in
lods
inc
cwtl
notl
enter
shrb
pcmpgtw
push
push
stos
popf
cmc
bound
sti
popa
sbb
sarl
push
je
stc
sub
imul
and
cmp
push
dec
insl
jmp
mov
rol
xor
loop
movsb
les
xchg
rorl
pop
cld
push
pop
mov
mov
dec
pop
insb
or
pop
cmp
pop
movsw
aad
fcom
cmpl
out
add
in
pop
push
lcall
in
addr16
add
shl
add
jns
je
cs
inc
test
adc
iret
or
dec
xchg
loopne
leave
and
inc
sub
adc
xor
mov
icebp
jecxz
std
cmp
std
mov
push
xchg
sahf
loop
adc
divb
iret
mov
jge
pop
outsb
lock
lret
mov
add
in
rcll
adc
int
outsb
inc
push
mov
mov
aas
test
ja
imul
cmpb
inc
test
mov
imul
inc
aaa
sbb
shll
and
inc
pushf
lea
cli
push
and
cmpsb
mov
les
lds
xchg
jbe
mov
imul
scas
pop
nop
or
dec
cltd
pop
add
add
sub
cmp
push
mov
and
inc
sbb
jg
out
dec
lock
aad
inc
out
rol
insl
fstpl
inc
into
lcall
mov
jmp
and
jb
inc
xchg
adc
cmc
inc
mov
jbe
xchg
ret
sub
mov
xorl
gs
movsb
stos
sbb
aas
fcmovnu
mov
cli
out
ljmp
std
xor
aad
push
clc
push
test
dec
fstl
and
cs
dec
loopne
rol
arpl
sub
mov
fists
ss
jno
icebp
or
xchg
out
mov
jae
imul
mov
cmc
cmp
push
nop
test
mov
cmpsl
jnp
cwtl
cmp
stos
out
xor
sbb
jge
nop
ljmp
or
xchg
push
rolb
inc
stc
xor
test
lea
xchg
outsb
push
ja
icebp
movsb
xchg
or
aas
push
cmp
xchg
rorl
test
addr16
iret
lds
stos
xor
pop
and
jg
push
in
fwait
in
movb
shll
popa
ret
sub
pop
inc
cmp
or
dec
and
jbe
subb
lahf
outsb
cli
mov
pop
ds
test
cmp
add
imul
xchg
inc
cmp
push
dec
xchg
lds
jne
test
fnsave
scas
push
js
sub
sbb
mov
sub
mov
and
rorl
xor
adc
int3
les
xor
fwait
int
mov
and
iret
pop
sub
mov
add
jle
sub
fisubrs
daa
das
sahf
xchg
cmpsl
mov
push
xor
sarl
jmp
test
in
aam
sbb
cvtps2pd
push
iret
lea
nop
out
pop
jo
jns
adcb
or
xor
arpl
aas
loop
jp
aad
mov
xchg
je
or
jecxz
cmp
push
cs
xor
shrd
cmp
mov
xchg
sub
dec
ret
mov
inc
clc
dec
repnz
push
jne
pushf
icebp
fwait
cs
std
jne
out
add
loope
and
mov
add
jmp
add
pushf
addr16
xor
jbe
ficompl
jbe
cmp
into
enter
and
outsb
pop
inc
xor
incl
inc
dec
and
rorl
push
into
lods
mov
dec
out
mov
cmc
mov
fists
fadd
jo
or
test
jne
mov
rcrl
mov
scas
fmuls
push
or
loope
xor
mov
push
mov
adc
inc
roll
js
xchg
or
insb
out
push
mov
cmp
sbb
mov
push
lea
xchg
cs
add
xlat
dec
iret
gs
cmp
cmpsl
inc
cmp
data16
insl
imul
sub
mov
jne
fisttps
xor
pop
aam
or
hlt
xor
cltd
xor
mov
or
pop
outsb
or
ret
je
js
cs
loopne
rorl
xchg
cmp
xchg
push
je
jae
mov
out
addr16
leave
inc
mov
bswap
fildll
sarl
scas
adc
or
or
cwtl
and
inc
jb
mov
or
testl
scas
imul
cs
lret
jns
xor
sbb
test
daa
shlb
out
sub
out
sub
nop
push
or
shll
push
dec
add
adc
mov
cmp
mov
push
cwtl
jo
pop
xor
aas
inc
cmpsl
or
ret
ljmp
mov
jae
fsubr
jb
insl
shll
notb
cmpsb
in
sbb
adc
dec
fadds
in
cs
xchg
cwtl
sub
cld
lcall
jl
sbb
pop
push
mov
cmc
les
lret
lea
call
inc
push
pop
arpl
xor
jnp
imul
cmp
in
loop
leave
xchg
pushf
push
or
jp
mov
mov
push
fcoml
xor
js
outsb
mov
mov
scas
sahf
inc
adc
lret
jmp
add
push
push
jecxz
sub
idivl
gs
arpl
xlat
pop
xor
xorl
xchg
andl
pop
adc
out
out
sub
out
adc
das
push
sbb
daa
aam
aad
mov
xchg
test
movsb
sbb
pusha
mov
mov
push
sbb
pop
cld
movsl
dec
inc
jmp
sbb
add
out
mov
and
stc
add
or
sahf
testl
push
in
xor
add
rcll
les
in
cmp
out
test
dec
xor
push
aaa
push
xchg
fiadds
pop
cmpsb
mov
sub
cmp
jnp
into
cs
lods
in
gs
insb
sub
or
lods
arpl
in
fmull
gs
fistl
fs
aas
sub
lahf
mov
out
rorl
int3
xchg
jo
nop
pop
cwtl
stos
outsl
dec
xor
clc
pop
insb
mov
je
pop
sbb
mov
sub
or
pop
or
and
or
test
mov
ja
dec
or
out
test
mov
cmp
arpl
inc
mov
mov
syscall
mov
lret
shll
or
lret
xor
mov
dec
stc
aam
in
hlt
enter
mov
or
adc
inc
dec
nop
xor
xlat
jle
jmp
je
mov
mov
enter
ss
jb
mov
js
addb
xlat
jbe
mov
mov
das
pop
rcrb
jno
xchg
pop
popf
inc
xlat
out
xchg
lahf
loope
gs
ljmp
xor
notb
cmp
mov
dec
inc
add
out
test
mov
test
adcb
sub
movsl
pop
movsb
mov
out
cmpsb
test
dec
xchg
sub
jmp
out
cmp
das
adc
push
sub
loop
test
lods
jae
jo
adc
test
add
adc
sti
mov
jbe
and
xor
mov
or
push
cmpsb
add
out
push
dec
inc
ljmp
push
stos
ja
adc
js
enter
pop
push
xor
mov
sub
cwtl
fsubl
inc
addr16
ljmp
inc
mov
shrl
fcomi
or
int
pop
inc
sbb
in
faddl
test
push
xlat
enter
popf
mov
loopne
cli
int3
shlb
stos
movsl
in
sti
stos
js
xchg
pop
jge
jecxz
sti
ljmp
cmpb
mov
jg
cmpsb
sub
hlt
mov
shr
rol
mov
push
xor
push
pushf
dec
adc
sub
dec
imul
movsl
inc
cmc
mov
dec
and
pop
mov
js
cmp
pop
and
sbb
mov
jg
push
push
pop
mov
jle
inc
and
xor
xor
rclb
sbb
dec
jge
mov
push
insl
enter
or
enter
push
movsb
outsb
sub
add
pushf
outsb
negl
xchg
rolb
es
pavgb
enter
mov
fldl
dec
lret
push
cmpsl
call
jge
test
jns
in
loop
pusha
xor
push
cli
insl
or
hlt
daa
lcall
and
bound
mov
mov
adc
and
sub
mov
ret
mov
loopne
fs
test
lock
and
addl
sbb
xchg
adc
movsb
ds
mov
int3
xchg
pushf
aam
adc
inc
jl
xor
nop
loopne
add
xchg
inc
mov
scas
or
rcl
in
dec
jnp
aas
dec
dec
lcall
jge
testl
lcall
std
rcrl
nop
push
xor
dec
mov
ljmp
shl
loop
lret
push
pusha
mov
outsb
push
bound
sub
adc
pusha
mov
xchg
xchg
mov
daa
push
jp
ds
adc
arpl
in
icebp
pop
stc
add
insb
jg
or
xor
nop
jge
cmp
mov
mov
fstpl
nop
movsl
bound
push
or
lods
lret
lds
insb
adc
jl
jp
std
loop
mov
pop
mov
gs
cli
lret
inc
bound
ret
pop
pop
adc
or
cltd
pop
fcmove
fidivl
lds
xchg
ret
mov
shrl
ja
pop
jae
xor
jmp
pop
xchg
jmp
js
sub
xor
pop
inc
data16
in
xor
icebp
xor
int3
ret
push
int3
in
stos
lods
fildll
pop
dec
add
or
outsb
adc
jne
cltd
sbb
pop
test
jp
sub
in
data16
jns
sbb
and
dec
nop
mov
adc
lods
mov
jge
or
add
in
sub
xor
jecxz
dec
dec
scas
fwait
cld
inc
iret
xchg
pop
add
ret
leave
lcall
pop
subl
add
pop
dec
pop
das
test
push
pop
inc
inc
sbb
inc
pop
xlat
mov
ret
inc
test
aad
and
cltd
cld
jnp
insb
leave
and
pop
cmp
push
ds
mov
sar
adc
ret
pop
xor
int3
pop
icebp
push
push
inc
push
inc
jnp,pn
jae
dec
jg
inc
add
mov
dec
mov
arpl
mov
js
xchg
test
out
adc
add
nop
xchg
or
in
push
rolb
mov
adc
xor
data16
add
mov
lock
cmpsl
xchg
scas
loopnew
fwait
adc
je
xchg
jb
adc
push
dec
test
cmp
mov
cmpsl
dec
mov
mov
je
fistpl
aaa
mov
and
or
add
lcall
sbb
loop
pop
mov
lret
inc
adc
dec
jmp
or
outsb
lcall
outsl
xchg
sub
xchg
pop
in
cmp
fdivs
cmpsb
daa
or
mov
aam
in
inc
fldcw
cmc
mov
sbbl
test
dec
sahf
aaa
mov
imul
dec
insl
mov
nop
sub
pop
push
imul
push
xorb
or
cs
cld
repz
lds
dec
jl
clc
aad
inc
dec
lds
std
dec
sub
mov
jp
cmp
adc
and
movsl
cltd
dec
or
aad
cwtl
pop
mov
addw
sbb
enter
test
or
cld
test
push
push
and
xorb
push
cli
inc
xor
fisttpll
jg
xchg
jb
or
cmpsb
daa
call
loopne
adc
aam
xor
and
roll
negb
and
iret
loope
adc
test
mov
scas
xor
mov
inc
std
jmp
les
cltd
rcl
mov
aam
or
bound
adc
sti
int
jo
hlt
mov
cltd
out
and
ja
call
punpcklwd
dec
push
repnz
mov
cmpb
sbb
cwtl
scas
push
scas
and
push
int
stc
repnz
cmc
add
arpl
in
jbe
stc
lret
mov
sahf
inc
ret
or
inc
pop
repnz
pop
add
cwtl
jbe
daa
jmp
dec
jecxz
sub
sarb
mov
mov
aam
xchg
push
sahf
jecxz
jg
sarb
loope
mov
fadds
cmp
adc
pusha
mov
clc
mov
inc
add
and
popa
jle
xor
int3
mov
sti
pusha
add
jg
mov
insw
or
es
xchg
push
mov
pop
xchg
mov
cmp
mov
sbbb
in
push
loope
mov
xchg
adc
jnp
icebp
or
popa
jb
dec
dec
stos
outsb
je
xchg
cmpsl
arpl
sbb
rcrl
sub
pop
loope
cltd
icebp
je
movsb
xor
xlat
lret
sbb
inc
and
or
cmp
pop
je
xchg
mov
xchg
xchg
pop
shlb
daa
incl
jbe
adc
stos
dec
cld
dec
sbb
jle
mov
fildl
xchg
mov
jo
sti
inc
sbbb
sub
fnstenv
icebp
mov
add
ret
jne
loopne
xor
ja
into
jnp
loopne
mov
cwtl
stos
mov
ljmp
cmp
cmpsl
repz
push
inc
add
fisubs
pop
xlat
jnp
sbb
cmp
iret
cmp
and
pop
adc
into
lahf
jno
pop
xor
cli
sub
push
aaa
adc
adc
into
fwait
jp
xor
jmp
and
mov
idivl
sbb
mov
ljmp
leave
jl
movsl
or
fisubrl
jmp
ret
mov
jmp
stos
dec
sbb
stos
push
das
lcall
mov
xchg
adc
lock
mov
push
cmpsb
xchg
pop
arpl
clc
imul
jo
adcl
notb
dec
addr16
negl
je
xor
dec
daa
jbe
add
inc
scas
cmpsb
ret
mov
xorl
mov
cmpsl
cmp
nop
push
jbe
jno
jne
sub
imull
add
sbb
adc
out
ret
xchg
movsl
or
xchg
shrb
leave
hlt
dec
rcrl
mov
sti
out
pop
xor
test
pop
inc
call
add
lret
cld
pop
ja,pn
mov
ss
test
rcrl
out
and
fdivrl
subl
push
or
shlb
jp
dec
push
out
cmp
push
nop
dec
sub
pop
sbb
inc
rorb
mov
or
pop
cmp
pop
cmpsb
push
stos
cmp
mov
sbb
sbb
jecxz
mov
repnz
pop
dec
cmp
leave
adc
popa
imul
or
push
jle
inc
outsb
inc
sbb
bnd
icebp
adc
jns
lret
xchg
addl
enter
sub
mov
cmpsb
pop
cmp
push
push
jnp
push
arpl
ss
out
int3
nop
sub
pop
jo
mov
add
test
shlb
fidivs
mov
pop
and
dec
cwtl
xchg
icebp
sbb
rcll
popa
adc
scas
dec
insl
jecxz
inc
and
int3
add
call
dec
test
mov
push
pop
jge
and
adc
xchg
movsb
and
xorl
dec
lods
insl
pop
and
xchg
mov
jbe
popf
and
and
sbb
fbld
orl
sbb
imul
popf
test
push
sbb
pop
jo
jl
inc
sbb
test
scas
lcall
and
fisubl
mov
ss
sti
clc
cs
push
adc
mov
dec
xchg
add
pusha
cmpsl
push
or
aad
cmpsl
sub
mov
ret
push
icebp
mov
rorl
dec
jno
pop
sbb
ja
insl
and
cld
test
inc
aad
rolb
fnop
sbbb
and
into
cld
aam
xor
push
sub
idivl
xchg
jl
mov
movsl
outsl
jne
ret
shll
rorl
orb
fisubrl
arpl
mov
fcomps
ror
jae
movl
jl
or
xlat
and
and
sahf
mov
dec
dec
adc
cmpsl
mov
mov
xor
dec
xchg
mov
jle
scas
pop
mov
cmp
adc
add
pop
dec
int
enter
mov
rclb
xor
mov
divl
hlt
rclb
xchg
mov
subl
mov
dec
stos
lahf
inc
sarb
addl
adc
push
int
daa
pop
push
xor
dec
outsl
lahf
and
mov
mov
or
out
in
cs
pop
pop
xchg
pop
fwait
rclb
je
fbld
pop
test
mov
stos
js
je
add
jae
dec
push
adc
inc
inc
leave
jb
mov
xchg
insb
cmpsb
cmc
clc
int3
jg
fsubs
jbe
in
fdivrl
and
test
jns
sub
decb
insl
xor
or
addl
push
cltd
sbb
repz
pop
call
aas
jns
inc
lahf
inc
vucomiss
or
xor
out
rcrl
int
ds
jg
dec
out
scas
mov
push
lea
or
lret
or
pop
push
stc
xchg
dec
lea
push
insb
mov
fucomp
mov
pop
and
pop
inc
out
jg
in
xchg
xchg
frstor
test
in
loope
sahf
subb
mov
xchg
xor
loop
or
cltd
push
cmp
scas
decb
rcll
ss
push
lods
icebp
out
in
flds
sbb
inc
mov
out
xorb
fisubs
loop
inc
xlat
pop
and
cmc
jae
dec
out
lret
cld
into
test
cmp
loop
adc
mov
jle
pop
int3
jg
push
nop
dec
daa
adc
dec
push
cmp
lret
jle
movsl
loop
and
add
in
popf
and
mov
cmp
leave
orl
jno
mov
dec
insl
addr16
jne
and
lods
ss
sbb
mov
fdivs
in
cld
sbb
stos
cs
les
test
or
push
jnp
arpl
out
addb
inc
xchg
xchg
inc
dec
mov
xchg
and
pop
push
repnz
cmp
or
dec
imul
or
ss
nop
rorl
sbb
mov
adc
add
inc
fs
mov
add
or
out
sbb
jle
movsb
repz
mov
add
mov
mov
fisubl
sbb
push
ss
pop
cmpsl
testl
testl
iret
mov
in
dec
or
sub
pop
std
nop
xchg
lret
les
adcb
dec
xor
test
lret
pop
push
pop
sub
rcr
xchg
test
insb
mov
rcl
cmp
call
push
icebp
negb
sbb
jecxz
and
imul
xor
in
add
mov
sbb
scas
inc
in
in
enter
push
mov
iret
cltd
lahf
jecxz
dec
push
xchg
arpl
dec
cmp
dec
scas
jg
stos
shlb
pop
or
nop
mov
xchg
rclb
hlt
repnz
xor
inc
scas
lret
push
adc
loope
xchg
adc
lock
sbb
inc
pushf
mov
sub
sbb
mov
shrb
fsubs
and
lahf
adc
pop
rcl
das
sub
pop
xchg
xchg
push
shll
sbb
inc
push
sbb
xchg
mov
push
adc
add
xor
sub
dec
adc
mov
cmpsb
rcll
jno
mov
add
mov
dec
xor
sbb
cmpsl
jl
out
je
pop
rcrl
fst
imul
ret
out
repnz
test
aam
fs
and
in
arpl
mov
pop
icebp
xchg
push
rorb
mov
dec
fdivl
xor
cld
movsb
mov
push
imul
leave
int3
mov
cltd
mov
xor
jmp
test
push
stos
jb
cmp
bound
xchg
ret
cmp
icebp
cld
sbb
sbb
inc
out
loop
ss
rcrl
mov
push
pop
pop
lret
jae
arpl
and
sbb
gs
jns
jo
out
xor
pop
mov
das
and
lods
xor
and
aam
imul
fs
xchg
cmp
mov
std
jmp
lods
mov
outsb
je
cmc
sbb
mov
push
sub
push
xor
xor
jno
pop
rorb
xchg
jne
mov
mov
lds
int
mov
pop
pop
add
push
adc
das
sbb
jmp
gs
movsb
push
das
out
add
popf
cmpl
inc
pop
pop
dec
pop
xchg
mov
push
dec
mov
mov
adc
outsb
jge
andb
push
lcall
xchg
jns
push
movsl
gs
adc
jns
in
add
inc
ss
cmpsl
push
nop
jmp
xor
jns
xchg
sti
outsb
mov
push
sbb
jl
enter
and
mov
sub
mov
lret
mov
imull
jp
adc
lods
or
inc
inc
jns
pop
mov
xchg
xchg
cmovl
fisttpl
fsubrl
cmp
cld
push
mov
lea
xchg
imul
nop
call
lret
rorl
jg
adc
inc
pusha
js
push
pop
or
cld
fwait
subb
push
dec
jp
in
cmp
ljmp
mov
dec
imul
orb
sbb
dec
imul
cmp
je
movsl
xlat
fwait
xor
and
jecxz
ror
mov
dec
xlat
jmp
adc
jmp
dec
cmpsb
jg
movsb
lea
fsubrs
hlt
pop
jp
xor
in
fdivp
sub
aas
jge
lods
pushf
mov
lret
jne
fisubs
imul
adc
inc
scas
mov
cmpsb
push
adc
xor
mov
xchg
and
dec
test
testl
lahf
dec
xchg
iret
dec
push
mov
xlat
lods
adc
push
dec
push
call
inc
mov
pushl
js
shl
std
fisttpll
and
arpl
jbe
adc
or
lahf
outsb
push
adc
and
mov
inc
jo
push
and
jecxz
aad
and
sbb
mov
lahf
and
bound
and
stos
stos
push
cmp
add
jp
jne
kaddw
fldenv
pop
jmp
push
sub
mov
lahf
pop
fcompl
out
xor
pop
and
faddl
xchg
out
push
mov
jecxz
mov
pop
and
cmp
in
pop
adc
aaa
sub
or
ffreep
and
movzwl
pop
cmp
mov
sbb
push
lret
aam
mov
lods
cmp
sbb
mov
fwait
xchg
punpckldq
mov
bnd
or
or
sbb
push
sub
mov
out
dec
xchg
mov
out
and
jl
cmp
push
stc
mov
test
or
lods
and
and
add
lods
sbb
mov
lods
xor
insl
or
or
inc
pop
fsubs
daa
flds
flds
leave
pushf
pop
sub
idivl
xor
cmp
adc
sbb
stos
in
test
aad
cmp
rcll
xor
xor
push
mov
shll
rcr
int
jo
out
mov
jne
je
outsb
push
sub
push
dec
xor
out
cmc
jno
xor
push
imul
stos
jnp
cmp
roll
adc
cmp
outsl
pop
into
loopne
jp
jns
cli
xlat
in
nop
mov
rcl
sbb
xchg
mov
ds
xor
imul
fwait
xor
ret
jae
cmc
lea
in
adc
fsub
push
mov
dec
insb
mov
test
xlat
sarb
sub
adc
pand
aad
fucomip
movsl
xchg
push
mov
cltd
xchg
into
inc
and
xchg
sbb
fcomps
sbb
mov
sbb
sbb
push
xor
sti
mov
xchg
pop
out
pop
mov
xor
cmp
mov
lods
or
lret
sbb
mov
mov
dec
andb
ret
cmp
pop
cltd
sbb
pop
push
addb
test
mov
inc
int
scas
mov
daa
test
bound
push
jmp
push
mov
dec
xchg
mov
and
pop
and
inc
int
jne
mov
inc
loope
and
cmp
push
in
xchg
jbe
jle
sub
hlt
cmpsl
xchg
out
push
push
jg
lret
ss
dec
push
pop
xor
push
pop
jl
fwait
mov
add
xchg
mov
adc
in
daa
bound
adc
xor
sbb
fstl
std
dec
inc
nop
mov
out
repnz
pop
xchg
cmp
rcl
lret
pusha
call
decl
jle
cmp
jmp
dec
push
cmpl
rorl
fsubl
jge
cmp
jno
jl
push
mov
and
cmc
fistl
dec
dec
adc
movb
sti
cmp
fldl
fwait
jmp
sub
adc
fsubrl
xchg
jmp
shrb
xchg
ss
cmpsl
lcall
dec
out
nop
mov
xchg
xchg
rcll
stos
xchg
mov
daa
mov
lods
push
or
xchg
lods
das
mov
into
repnz
test
jp
or
popa
out
loopne
or
mov
xchg
cmp
out
outsl
or
fnstenv
sti
xor
stc
xchg
fcmovnb
sub
bound
inc
xlat
sub
fwait
mov
movsl
sbb
dec
mov
or
jnp
dec
in
and
or
xchg
add
and
loope
fadds
in
mov
addr16
pop
adc
sti
out
adc
dec
or
mov
roll
fists
add
loopne
fs
sub
jmp
mov
shrl
sarb
jnp
fisttpl
test
neg
pop
jecxz
pop
sub
push
mov
int
jge
xor
into
lret
and
cli
out
or
int
scas
and
pop
jo
in
fwait
jns
jnp
cmp
xor
les
xor
es
enter
add
or
xor
movsl
stos
shrb
or
sbbb
sbb
pop
xchg
into
or
lcall
movd
add
scas
arpl
pop
ja
pop
cmpsb
ret
aas
mov
xchg
aas
xor
sbb
dec
sub
or
mov
in
stc
inc
lahf
push
inc
faddl
sbb
mov
jg
rorb
mov
sub
push
cmc
mov
dec
cmp
in
dec
jns
shll
ja
sbb
cmpsb
ror
orl
jle
push
dec
sub
test
sub
xlat
mulb
push
es
add
sbb
pop
and
or
iret
fiadds
fwait
jecxz
mov
mov
icebp
xchg
mov
repnz
mov
xchg
popf
movsb
pop
movsb
push
imul
lods
inc
and
adc
cmp
sbb
insl
in
xchg
and
jg
or
xor
pop
mov
repnz
stos
dec
push
subb
push
dec
jnp
add
lret
hlt
je
cmp
cmc
pop
adc
inc
dec
lret
sti
icebp
sbb
sub
pop
or
stos
and
xchg
mov
and
test
push
mov
jae
loopne
fldenv
lret
add
shrb
out
xchg
adc
cmp
sbb
in
mov
sub
mov
adc
aaa
sub
negb
je
inc
fld
and
dec
sbb
sbb
pushf
lock
popa
loope
xlat
push
add
sub
add
insl
into
in
sbb
shl
int
pshufw
push
je
xchg
dec
ret
push
sub
jnp
and
out
je
cmp
sub
mov
imul
sub
add
mov
stos
ja
rorl
or
cld
mov
lods
fwait
cmp
stos
in
int
lds
dec
fsub
divps
rcl
push
into
movsb
ljmp
push
lcall
pop
push
mov
xlat
jnp
jno
mov
dec
mov
and
arpl
rcrb
or
rcrb
or
scas
jmp
pop
mov
stos
loop
cmpsl
mov
mov
jp
mov
xlat
push
cltd
sub
in
xor
push
fstpt
leave
fwait
jno
mov
jp
cmp
lds
sbb
repnz
mov
xchg
mov
daa
mov
fmuls
aaa
mov
mov
imul
addl
loopne
adc
push
lods
xchg
stos
out
cwtl
sbb
xchg
lock
inc
out
push
pop
lret
ss
in
push
cltd
jecxz
mov
dec
fstpt
inc
push
ret
clc
adc
dec
mov
push
stos
bound
dec
push
mov
jecxz
and
pop
mov
addr16
push
sbb
pop
inc
sub
mov
mov
movsb
repnz
ds
insb
fadd
push
mov
loope
dec
push
test
jne
inc
jp
xor
sub
fisttps
sub
add
pusha
jge
xor
in
pop
test
or
js
or
in
inc
cmp
ljmp
cmpsb
les
cld
mov
mov
out
dec
and
xchg
adc
les
xchg
repnz
add
cmp
scas
mov
loopne
sahf
in
pop
mov
or
stos
ret
insb
lret
dec
cmp
icebp
jle
imul
and
ret
fsubr
pop
sub
push
xchg
ljmp
mov
lcall
mov
add
push
mov
jg
mov
int3
in
jle
adc
cmp
xor
inc
movsb
xchg
mov
add
jecxz
push
dec
leave
sbb
jecxz
hlt
pop
mov
xor
lahf
les
icebp
push
notl
fistpll
in
fists
dec
cltd
imull
in
stos
add
mov
into
sbb
out
pop
mov
sub
and
fiaddl
daa
push
push
jb
jg
jp
dec
xchg
jne
loope
cmpsl
lea
add
scas
and
mov
sub
sub
daa
push
mov
xchg
dec
sub
ret
dec
in
fisubl
ljmp
jecxz
test
jge
and
push
inc
pop
dec
cmc
jge
and
mov
lahf
je
popl
xlat
movsl
or
aas
sub
jb
fistl
dec
xchg
sub
in
jb
std
mov
mov
ss
xchg
xchg
jbe
ja,pt
pop
pop
ret
outsb
jno
and
jbe
mov
add
lret
dec
pop
cmp
rclb
inc
dec
std
mull
lea
mov
mov
sbb
jecxz
inc
xor
divb
subl
jl
int3
push
cli
push
shrb
sbb
outsl
iret
jb
inc
out
loopne
push
fistps
add
dec
into
or
scas
jno
loop
xor
push
pop
xchg
hlt
pusha
je
fcoml
inc
jle
mov
jbe
push
jo
pop
addr16
mov
cmc
mov
mov
cmpsl
fmuls
jge
mov
xchg
lock
cmp
and
add
jnp
sbb
rol
xchg
xor
and
cwtl
pop
sti
in
push
jb
pop
jb
shrb
xchg
in
je
ret
in
lods
pop
inc
adc
lods
in
cmp
fdivl
lods
data16
scas
sbbl
in
testb
clc
mov
pop
lods
pop
ret
cmp
ret
je
andb
mov
dec
sbb
mov
mov
xchg
or
adc
pop
add
push
and
mov
insb
dec
pusha
pop
jmp
add
jg
xchg
lea
int
std
xor
std
and
mov
ljmp
push
call
or
mov
lods
mov
je
sahf
sbb
or
movsl
mov
lret
sbb
imul
je
cmp
lods
std
enter
scas
sub
pusha
jnp
mov
mov
jnp
inc
dec
out
jnp
pop
into
xchg
mov
mov
dec
jp
subb
test
xchg
add
icebp
mov
jmp
les
leave
cltd
jns
sti
adc
jmp
jmp
jle
sbb
or
xor
cmpsl
cli
push
adc
out
bound
cli
xchg
pop
movsl
sub
ror
jb
loop
aaa
dec
int
fdivs
pop
fstp
pusha
adc
push
push
jb
mov
push
rolb
ficoms
es
mov
jmp
incb
ror
add
jns
mov
pop
daa
frstor
add
lahf
xor
inc
xchg
aad
jge
mov
in
mov
out
dec
fcomp
mov
jmp
outsl
inc
jns
inc
xor
aas
test
push
push
xor
cmp
lret
cwtl
shll
dec
mov
mov
sub
insb
cmpsl
mov
and
inc
in
lods
or
adc
mov
push
mov
ja
jg
xchg
out
jp
ret
outsl
out
mov
adc
mov
add
repz
bnd
test
jp
push
in
mov
aad
xchg
sub
mov
sbb
sub
ss
ja
rcrb
push
repnz
lahf
lods
rcrl
pushl
cmp
sub
daa
mov
mov
sbb
fs
aam
nop
cmp
or
and
push
pop
xorl
push
inc
in
js
cmp
sub
aas
cmpl
testb
ja
shl
in
adc
repnz
sub
or
fnstenv
mov
and
mov
loope
adcb
fs
in
insl
mov
push
xor
imul
cmp
jbe
scas
inc
inc
arpl
js
sbb
jge
mov
inc
repz
inc
fsubr
push
xor
fwait
pop
mov
js
and
ds
push
push
mov
rclb
lods
cmp
jns
push
cmc
push
sbb
xchg
mov
sbb
nop
cmp
sar
gs
push
out
popa
adc
xchg
sbb
xchg
xorl
lods
frstor
push
sbb
inc
sbb
mov
mov
dec
rolb
dec
cmp
push
shr
imul
xchg
daa
iret
out
mov
aam
mov
cmp
xchg
jne
jmp
jne
fstps
pop
pop
mov
incl
mov
push
xchg
pop
pop
test
cwtl
mov
jle
mov
jecxz
push
adc
loop
xchg
daa
xor
inc
jp
sub
scas
aaa
iret
sub
mov
jmp
sti
fnstsw
adc
or
imul
push
sbb
add
test
xor
ljmp
jp
jmp
mov
pop
lcall
and
into
push
nop
iret
or
mov
add
je
mov
test
xchg
ja
pushf
xchg
cwtl
pslld
ljmp
jecxz
inc
addr16
push
inc
xchg
mov
adc
pushf
push
das
mov
std
inc
into
sbb
inc
fcmovb
xchg
aam
mov
arpl
and
sub
sub
mov
push
sub
ret
stos
sub
into
adc
dec
fldcw
xchg
movsb
popf
add
arpl
and
pushl
inc
int3
mov
mov
scas
arpl
inc
fcmovnu
sahf
adcb
mov
frstor
pop
iret
xchg
xorb
adc
push
popf
jnp
loopne
push
mov
repz
aaa
jne
mov
pop
fimull
cltd
jg
cs
mov
jb
jmp
out
push
jo
ja
inc
loopne
movsb
mov
sbb
jle
push
sbbb
ficoml
dec
clc
out
push
push
imul
cmp
in
push
ret
jl
push
add
mov
lret
das
leave
fisttpl
jne
mov
or
mov
enter
ljmp
cltd
xor
mov
cli
cli
fists
insb
push
mov
mov
inc
js
addr16
mov
fmuls
xchg
mov
scas
mov
jle
fsubs
movsl
jl
mov
sbb
orl
or
dec
loopne
xor
cltd
jns
sti
and
jle
add
in
push
jle
cmp
jge
xchg
add
sub
cmp
mov
addr16
cs
push
nop
and
cmp
arpl
ret
jge
add
jg
add
dec
cltd
aas
repz
jmp
jo
das
mov
push
add
div
or
cmp
fldcw
adc
sbb
fiaddl
gs
hlt
das
mov
add
inc
arpl
sub
insb
pop
fildll
dec
pop
out
mov
scas
xchg
mov
out
adc
stc
sbb
push
fsubl
or
mov
icebp
iret
movsl
mov
and
jno
push
mov
and
pop
pop
arpl
jle
loopne
inc
mov
xlat
mov
dec
adc
ret
pop
dec
pop
cs
movsl
xor
ja
push
cwtl
mov
or
push
mov
divps
ret
out
adc
xor
pop
cmp
dec
pop
andl
pusha
call
jmp
push
add
add
leave
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
rol
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
roll
