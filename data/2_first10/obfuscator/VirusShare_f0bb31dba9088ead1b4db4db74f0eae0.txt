xchg
outsl
cltd
sbb
add
add
add
add
rcrl
stos
xchg
add
idiv
in
inc
jb
xor
dec
mov
or
add
mov
add
sub
jg
inc
xor
mov
sub
dec
pop
dec
push
pop
push
mov
pushl
jne
sub
dec
mov
inc
mov
ret
mov
dec
add
mov
dec
mov
push
aaa
mov
dec
dec
jb
or
jne
push
inc
ss
mov
outsl
push
push
add
arpl
add
xchg
dec
mov
mov
div
fcomi
dec
imul
outsb
out
push
push
push
ja
std
jb
add
pop
lret
push
ja
jmp
jns
call
std
ss
dec
jmp
jp
mov
xor
add
mov
jl
je
push
dec
add
push
bound
int3
mov
dec
add
jmp
mov
mov
mov
push
call
sbb
sbb
mov
jmp
push
push
add
push
jb
ja
pop
daa
aaa
xor
push
push
cmp
push
in
jg
imul
push
arpl
in
mov
add
jg
inc
insb
pushl
inc
dec
jmp
inc
repz
pop
fdivrp
mov
jmp
add
shll
insl
dec
insl
out
ja
pop
cmovno
rolb
push
mov
mov
inc
push
addr16
rcll
push
mov
dec
inc
jbe
and
lods
xlat
bnd
dec
adc
xor
js
icebp
mov
or
cmp
aaa
jb
fs
call
dec
ja
add
inc
ss
addr16
pop
xor
loope
je
sub
inc
ja
dec
mov
push
sub
outsb
ljmp
mov
dec
pop
je
cmp
decl
pop
add
dec
fucomip
pop
fisubrs
xor
sarb
push
out
loope
mov
insl
dec
je
cmp
leave
mov
and
mov
int
mov
insb
je
dec
daa
lock
mov
mov
inc
push
pop
inc
add
mov
outsl
ja
pop
aaa
dec
cmp
xor
fs
cs
cld
xor
sub
ja
push
or
in
call
roll
xor
leave
mov
push
cmpsb
jmp
inc
add
pushl
in
mov
sti
std
lahf
mov
addl
mov
lods
jecxz
xchg
cmpb
je
mov
fcmovnu
scas
jns
outsl
jno
mov
mov
add
stc
dec
in
fnsave
push
sbb
popa
outsb
jb
outsl
test
xchg
je
inc
push
hlt
testb
push
in
testb
jae
inc
leave
dec
jmp
xor
rcrl
xchg
lcall
push
mov
imulb
outsl
aaa
xor
repz
sbb
aaa
push
leave
ret
in
insl
stc
jecxz
bound
push
pop
data16
mov
push
inc
rorl
ret
or
test
mov
jae
pusha
inc
dec
jmp
push
sub
adc
xchg
dec
out
dec
push
jnp
cld
add
cli
pop
inc
arpl
mov
rcrl
shrl
je
pop
mov
jmp
aaa
jbe
bound
or
out
sub
push
push
dec
mov
fwait
sti
pop
or
ja
jmp
ja
mov
mov
mov
inc
dec
testl
fildl
repz
addr16
mov
dec
mov
xchg
or
inc
and
aaa
jb
jmp
fs
sbb
adc
insb
jne
xor
out
dec
push
jmp
hlt
xor
jecxz
push
adc
imul
call
fs
out
and
call
jns
dec
dec
mov
dec
aam
xor
std
jg
rcll
leave
inc
jmp
push
inc
cmp
mov
aaa
dec
int
push
adcb
inc
mov
jl
inc
adc
data16
fcmovu
in
adc
jo
fadds
sbb
das
dec
call
mov
movl
pop
fsubrs
push
mov
xchg
pop
jne
imul
pop
mov
popa
arpl
mov
xor
icebp
call
xchg
jae
addb
inc
jb
jns
jp
pushw
push
fidivl
push
inc
jmp
inc
inc
push
int
js
xor
into
ret
dec
stos
push
pushf
sti
sbb
jmp
inc
inc
add
pop
into
lock
mov
jne
iret
pop
fnsave
mov
outsb
cmp
lea
or
dec
push
inc
cli
xchg
mov
dec
pop
add
in
out
push
jb
pop
dec
dec
lret
sub
mov
out
jns
out
outsl
pop
jg
arpl
dec
xor
stc
sub
push
inc
sub
dec
int3
sahf
jbe
dec
jns
mov
push
jae
add
arpl
ja
push
push
jo
call
fiaddl
push
cltd
insl
ja
xor
push
and
mov
push
or
dec
xorb
fisttps
sub
mov
out
xor
movlps
outsl
fldt
and
in
mov
adc
movsb
push
ds
jp
cs
lcall
mov
gs
sub
das
sub
sub
xor
ficoms
ds
aaa
testb
inc
jbe
jmp
mov
jecxz
dec
data16
jp
mov
sbb
add
fisubs
in
out
data16
mov
jmp
inc
xchg
add
pop
or
adc
fnstcw
and
cltd
repz
ds
sub
fwait
mov
push
dec
imul
pop
adc
push
out
pop
daa
adc
cmp
push
and
mov
popf
adc
adc
scas
movsl
pop
lods
pop
lcall
mov
adc
popf
mov
sbb
in
dec
cltd
xor
add
push
jle
jmp
push
or
ss
jmp
add
data16
idivl
filds
aas
wrmsr
and
jecxz
movsb
and
lret
fisttpl
jecxz
cltd
add
aas
lret
sub
and
add
aas
or
mov
cmpsl
mov
lea
inc
in
repnz
addr16
mov
ret
dec
jmp
xor
leave
sub
jb
pop
pop
adc
xchg
jmp
repnz
ss
and
cmp
lods
add
lods
addr16
pop
or
les
jb
jbe
mov
fldenv
push
bound
push
fldt
jns
and
shrl
adc
inc
add
sbb
mulb
sarl
cmp
sub
aaa
push
pop
ja
mov
fwait
push
aaa
or
mov
jmp
cmp
shrl
adc
add
dec
ja
rorl
jmp
dec
cld
sbb
enter
or
push
pop
int
push
pop
push
pop
sahf
out
imul
cmp
testl
int
adc
pop
cmp
cmp
cmp
xchg
or
cmp
popa
dec
das
add
add
jbe
rorl
add
xor
rorl
pop
push
pop
xor
cmp
or
push
or
xor
xor
pop
insl
in
andl
stos
pushl
in
sub
jmp
cltd
pop
cmpsl
adc
movsb
push
in
and
cmc
push
pushl
cmpsl
mov
xchg
outsb
out
pushf
scas
mov
mov
sbb
cs
gs
add
jecxz
pushf
cmp
jb
jmp
out
test
pop
cs
outsb
sti
scas
in
mov
xor
gs
add
xor
aam
in
fucomi
or
cmp
or
mov
insb
test
fnsave
add
out
cmp
int
pop
mov
mov
lods
loopne
roll
in
es
cmpsl
dec
mov
jmp
aas
push
or
or
jae
sbb
mov
cltd
adc
or
mov
adc
sahf
into
mov
xchg
bound
add
mov
adcb
jb
pop
cmp
test
fidivrs
or
xchg
inc
jbe
or
xchg
mov
jmp
insl
in
cmp
and
dec
repnz
mov
mov
imul
outsb
cmp
loope
cwtl
and
test
std
xchg
insb
in
sub
dec
jb
push
push
push
fcompl
std
push
fimuls
ud2
adc
add
mov
and
xchg
mov
lea
lock
mov
inc
jbe
and
xor
ss
shlb
int
sub
aaa
adc
pop
call
dec
das
cmp
jl
fimuls
pop
insb
xor
lahf
lods
cmp
mov
popa
daa
fdivrp
xchg
or
push
lret
xchg
stos
inc
mov
sbb
xor
dec
or
lcall
push
dec
ds
xchg
cmp
jbe
data16
divl
dec
mov
sub
mov
jecxz
pop
adc
or
sub
or
sbb
orl
sbb
sbb
lcall
fs
xchg
cwtl
dec
fsubs
xchg
pop
mov
add
xchg
or
data16
dec
xchg
cmp
sbbb
cmp
movsl
xor
mov
mov
mov
outsb
das
sub
mov
cmpsb
push
push
iret
cmp
out
in
fsts
insb
xor
cmpsb
fists
lea
mov
jno
xchg
fdivs
in
adc
sbb
insb
sub
inc
movsb
jecxz
pusha
mov
lret
mov
pushf
dec
mov
and
mov
fisubs
mov
jno
push
fldl
and
scas
les
popa
dec
and
movsl
add
dec
and
sbb
shll
lcall
pop
nop
adc
inc
adc
push
mov
sbb
fsts
push
leave
adc
addr16
mov
xchg
push
bound
std
data16
xchg
js
mov
adc
pop
sub
and
push
data16
in
mov
mov
es
pop
or
xchg
pusha
inc
mov
add
sbbl
dec
es
mull
pop
mov
sub
enter
dec
adc
pop
insl
sbb
jnp
mov
cs
cli
jnp
and
mov
std
jp
mov
jmp
jp
orl
push
pop
xchg
adc
pop
std
fucomi
mov
cmpsb
inc
in
jae
or
add
in
mov
push
pop
mov
in
pushl
adc
stos
push
lea
mov
pop
outsl
cld
in
pop
adc
add
adc
xchg
sub
ja
in
sbbb
outsl
and
mov
mov
or
cmp
fldt
test
push
sbb
pusha
sub
mov
lea
aas
xor
xchg
outsb
lea
pop
outsb
fbstp
dec
out
xchg
cmp
adc
sub
pop
hlt
inc
gs
test
cmpsl
xchg
jp
bound
insl
dec
push
fsubrs
and
xor
mov
inc
dec
and
nop
jns
mov
and
xchg
cwtl
xlat
and
fldenv
mov
sbb
mov
jnp
sahf
and
sub
pop
imulb
cli
out
cwtl
sub
xor
cltd
sub
or
into
add
push
inc
outsl
dec
sub
enter
push
inc
push
sub
dec
or
ficoml
or
movsl
and
adc
jns
adc
out
lret
xor
int3
fidivs
cmp
mov
cmp
aas
jmp
lods
cmc
fcoms
and
cmpsl
xor
or
pushl
sbbl
aas
sub
pusha
loopne
pop
out
pusha
jg,pt
lret
test
push
rcll
cmpsl
mov
sub
dec
push
and
ret
lret
aad
mov
pop
stos
adc
ss
push
icebp
imul
into
or
mov
and
dec
js
or
mov
push
xchg
jo
mov
push
jbe
cmp
mov
xchg
cltd
loopne
jecxz
hlt
call
dec
lods
rcrb
xchg
jge
mov
mov
lret
leave
push
leave
mov
loop
pusha
jne
and
scas
idivl
sbb
and
cmpsl
xchg
mov
xor
jns
and
sbb
aam
sbbb
lcall
pmulhw
cmpsl
xor
inc
repz
add
mov
fldenv
xor
xchg
xchg
and
bound
or
mov
gs
xchg
push
jecxz
in
jo
push
jb
sbb
lret
andps
push
and
push
fcoms
add
inc
gs
cmpsl
or
jne
sbb
and
sub
out
jp
and
ljmp
in
imul
add
cmc
mov
idiv
das
cld
ds
mov
fs
divl
inc
add
add
mul
repnz
out
cmpsb
out
mov
std
jae
add
push
repz
in
hlt
sbb
or
rep
adc
jge
jbe
cmp
call
fiadds
mov
pop
inc
jmp
add
jge
jecxz
gs
leave
or
ds
sub
add
push
xorl
and
shrb
xor
push
fldt
mov
shl
in
sarl
push
pop
xchg
je
imull
add
fs
bnd
int
lea
add
jle
iret
jae
sbb
out
or
in
xchg
out
add
cmp
add
out
out
jle
push
repz
out
jnp
enter
out
jne
divl
negb
je
out
fwait
pop
stc
push
imul
add
iret
jbe
mull
add
push
cmp
popa
out
out
inc
out
or
repz
clc
fs
insb
xor
nop
or
jp
movsl
sti
inc
std
mov
pop
dec
add
enter
add
cmp
cmp
pop
mov
rorl
sti
mov
nop
cmpxchg
mov
dec
dec
jnp
ret
outsb
lret
fildl
inc
xchg
dec
dec
ss
js
jae
jge
fwait
push
mov
add
ret
jae
sub
adc
jmp
out
gs
lods
repnz
sbb
fildl
dec
add
int3
out
xchg
sub
outsb
outsb
adc
fdivs
inc
and
daa
sbb
or
xchg
inc
repz
je
push
add
and
mov
and
mov
jae
out
lahf
and
cmp
repz
xchg
insl
enter
pop
sahf
jg
out
repz
add
shrl
popf
loope
test
jo
repnz
mov
fiadds
cmp
xor
loopne
std
add
xchg
mov
out
loope
aad
or
dec
rorl
in
mov
testb
jge
jno
pop
xchg
out
mul
ds
jno
cmp
bound
cmp
mov
pop
dec
mov
sub
lahf
or
or
jl
fs
push
add
mov
mov
inc
js
mov
repnz
jmp
scas
in
mov
out
sbb
das
lahf
out
or
or
xchg
into
scas
stos
jl
test
sbb
and
mov
setg
sahf
in
jmp
pusha
sbb
int
xchg
xchg
mov
lahf
cmp
and
sti
insl
out
sbb
jb
cmp
xor
iret
fs
pop
pop
out
add
out
inc
sbb
mov
add
and
dec
lret
in
inc
jne
stos
jb
push
mov
push
push
dec
jae
or
xor
add
fnsave
sbb
in
jae
scas
iret
repz
ret
sub
outsl
mov
add
mov
or
out
pusha
add
test
xor
stos
sub
lcall
xchg
add
neg
fdivs
adc
pop
leave
in
inc
popa
nop
fwait
xlat
adc
cmc
cmpsl
cwtl
addl
cmpsl
add
xor
jae,pn
insb
sahf
push
cmpb
pop
add
and
fsubl
and
xchg
test
push
pop
add
adc
push
das
int
xchg
shrb
or
sbb
ss
jns,pn
and
pop
jge
cmpsl
addr16
push
clc
std
subl
cmp
and
popa
xor
imul
jle
jne
scas
xor
and
mov
shlb
sbb
add
mov
jge
repz
in
sub
cltd
icebp
inc
mov
fcmovu
movsb
cmp
fbld
pop
mov
xchg
add
fcompl
mov
cmp
shll
adc
lea
scas
loop
in
sbb
shll
jg
inc
into
push
je
cmp
lret
fcomip
mov
into
and
mov
cmp
iret
adc
xor
cmp
pop
in
out
icebp
add
xor
lret
daa
push
jnp
loope
sbb
xchg
repnz
mov
test
fdivr
shr
rcl
not
jl
in
sbb
jae
jge
sti
cmp
mov
mov
ljmp
sbb
mov
cmp
arpl
in
nop
xchg
fcoml
mov
push
cmc
cmp
mov
popf
or
hlt
ss
leave
cs
lret
int
push
ret
inc
ds
cmp
sbb
mov
ret
cmp
nop
int
pusha
les
push
sbb
dec
add
sti
or
and
add
and
pushl
add
scas
cmp
popf
je
jae
rolb
xor
mov
movsb
iret
pop
pop
shl
negb
inc
shlb
pop
inc
sahf
push
push
or
sub
inc
into
pusha
das
ss
out
cmp
xchg
gs
xorl
ja
xchg
repnz
test
sahf
adc
ret
and
or
cmp
adc
mov
cmpsl
fildl
iret
cmp
or
bnd
dec
mov
aaa
out
xlat
imul
pop
sbb
add
dec
mov
add
aas
pusha
ds
cmpsb
xchg
js
ret
and
push
inc
or
fadd
push
sub
dec
lcall
xchg
test
hlt
loopne
pop
mov
xor
and
ds
add
jg
inc
daa
xchg
cmp
mov
push
or
mov
pop
into
jne
push
mov
adc
jmp
mov
or
xlat
in
xchg
and
jl
and
add
leave
aad
loope
sub
ret
sbb
add
jno
or
out
repnz
mov
and
add
fwait
jbe
fbld
outsl
ljmp
dec
fs
add
lahf
fistl
xor
pushf
cs
xor
adc
and
lahf
xchg
outsb
xchg
in
xchg
mov
aam
fdivs
push
dec
jo
in
sar
leave
cmp
dec
mov
vmulps
lret
fadds
sbb
in
nop
mov
xlat
jb
inc
mov
mov
jmp
xor
sub
sbbb
inc
fisubrs
pushf
jge
enter
rcrb
pop
jecxz
adc
out
add
jmp
clc
out
xchg
adc
hlt
push
cmp
sbb
xchg
imul
mov
lcall
xorb
push
in
push
cmc
mov
int3
sbb
fcmovnb
cli
insb
sahf
pand
pop
sub
xchg
sahf
js
mov
mov
cwtl
in
dec
jo
subl
cmp
xchg
xchg
add
and
movsb
repz
xor
aas
or
sub
rorl
adc
cmp
iret
popf
out
mov
inc
iret
out
rcll
shlb
enter
arpl
iret
dec
dec
lcall
rcrb
pop
jbe
jmp
cs
xor
mov
add
stc
push
test
js
jl
negb
iret
repz
fldt
lods
or
add
cmpl
sub
mov
push
dec
or
andb
xchg
insb
lock
xchg
lods
andb
mov
aam
adc
daa
stc
aam
test
adc
xchg
mov
cmpsl
add
fwait
add
lock
repnz
sarb
hlt
out
push
sti
adc
jo
repnz
push
insb
adc
mov
cmp
icebp
outsl
cmp
ja
adc
dec
imul
lea
pushf
xchg
das
adcl
push
push
xchg
lds
jae
xchg
rcll
sub
push
lahf
dec
cli
xchg
pushf
lsl
cld
in
or
cs
sahf
mov
sbb
mov
jl
inc
push
adc
icebp
mov
mov
iret
pop
clc
jae
xor
fs
sub
dec
sbb
push
popa
sub
add
cmp
arpl
les
arpl
cmp
jns
je
or
mov
push
call
rorl
in
lock
sub
inc
add
sbb
fnstcw
sub
int
mov
cmpsl
mov
cwtl
fdivp
stc
fwait
jl
sub
jl
mov
inc
cmp
xor
jmp
fs
stc
and
repz
or
or
loopne
mov
xchg
lret
bound
sbb
mov
inc
cmc
popf
add
sub
gs
inc
push
in
inc
adc
and
dec
fincstp
jecxz
dec
dec
shlb
lahf
out
and
arpl
pop
cmp
subl
dec
into
pushl
rolb
ret
icebp
mov
mov
ja
mov
repz
adc
arpl
dec
xorb
dec
enter
daa
xor
jecxz
dec
push
imul
ret
and
andps
stc
dec
push
loopne
in
ljmp
test
mov
repz
pusha
and
or
orb
fidivs
loope
movsbl
les
insl
push
ds
movsb
push
imul
repz
sub
cmp
fnclex
and
pushf
adc
jbe
or
xchg
aad
push
les
out
push
pop
cmp
sbb
out
adcb
es
cmp
fdivrl
push
lahf
loopne
add
shrb
gs
add
lea
stos
jne
jb
jae
ds
inc
rcll
fdivs
scas
outsb
or
dec
add
inc
shl
xor
ss
jbe
mov
jmp
rolb
bound
push
aad
sub
mov
stos
mov
sti
sbb
lods
out
and
cmp
pop
call
mov
sbb
mov
ror
mov
int
inc
sbbl
mov
mov
leave
jae
movsl
pop
shll
in
out
adc
cmpsb
xor
lcall
lea
mov
aas
call
imull
fs
aas
ljmp
jne
rcrl
pop
gs
addr16
mov
cmpsl
flds
and
movsb
bound
mov
int3
mov
mov
inc
cmpsl
ss
add
dec
in
mov
xchg
fst
lcall
std
loope
sarl
mov
ds
adc
mov
adc
loope
xor
das
or
dec
inc
cwtl
add
pop
sbb
cmpsb
cmp
adc
cwtl
test
sbb
xchg
dec
test
sub
bnd
in
xchg
scas
cmpsl
inc
pop
sub
mov
daa
dec
inc
divb
xor
cmpsb
int3
ret
xor
mov
lods
adc
sbb
scas
cs
cmp
es
jb
sbb
or
stc
cmc
lds
sahf
inc
add
xchg
xchg
xor
enter
or
addr16
rcl
mov
sti
jns
xchg
pop
mov
jne
dec
mov
dec
inc
pop
xchg
xor
lcall
push
jmp
jmp
sbb
in
gs
sub
je
push
test
dec
inc
xchg
cmpsb
cmp
xchg
mov
mov
test
or
adc
inc
jp
jmp
add
inc
push
out
jbe
add
inc
mov
imul
lret
mov
adc
out
mov
xor
and
jecxz
out
stc
outsl
add
sub
xchg
sbb
adc
and
enter
imul
mov
or
adc
insl
push
outsb
push
xor
push
mov
add
mov
jbe
scas
in
jmp
insb
call
xchg
jne
mov
cmp
repnz
in
stc
mov
js
pop
jb
lcall
inc
fldl2t
daa
mov
mov
out
test
jle
lock
shl
mov
pop
std
jb
lea
pop
ss
popf
pusha
in
enter
lock
pop
or
test
inc
pop
dec
adc
mov
ljmp
pop
inc
adc
adc
inc
xchg
sbb
outsb
outsb
push
xchg
out
xchg
xor
mov
push
daa
add
xor
inc
sub
sub
cmpsl
out
icebp
xor
pop
sbb
cmpsl
and
push
ja
add
mov
shrl
push
add
and
adc
lock
or
xchg
rorl
rcl
scas
mov
mov
pop
dec
cmp
decb
out
sbb
daa
rcr
subb
sbb
in
mov
aad
fwait
add
repnz
sbb
mov
cmpsl
inc
cs
mov
fistpl
cmpsl
es
sbb
xlat
inc
ficoms
pushf
in
cmp
rcr
leave
mov
push
push
jp
fistpll
adc
outsb
aas
js
mov
movsb
pop
int3
test
adc
outsl
push
lods
sbb
sub
pop
push
jmp
mov
roll
bound
xlat
mov
jg
add
fs
xchg
inc
add
je
push
icebp
lock
rorl
mov
movsb
mov
push
jle
loopne
nop
loopne
into
push
lret
fstps
jp
movsb
dec
sub
mov
cs
fldenv
fldenv
jnp
ds
fmul
in
jmp
ss
dec
xor
test
cmp
leave
mov
add
ss
out
jg
loop
mov
insl
fstp
lahf
mov
jmp
ss
lcall
test
xchg
aad
or
cmpsl
loope
scas
dec
fimuls
add
imul
and
nop
add
outsl
xor
mov
cmp
shrl
leave
inc
daa
jns
nop
je
push
loope
ret
mov
mov
add
fsts
pop
gs
mov
jae
add
xor
outsb
mov
jb
push
sahf
data16
ret
loope
addr16
leave
je
dec
ss
inc
fsts
jp
add
stc
bound
or
ja
aas
in
xor
sbbb
mov
add
imull
mov
add
sbb
add
cmpl
outsb
push
addr16
dec
outsb
in
insb
push
xlat
adc
jle
or
sti
push
dec
repnz
imul
imul
ret
xor
mov
adc
mov
mov
adc
sbb
ja
push
pop
popf
mov
mov
pop
mov
cmp
and
pop
pop
test
hlt
std
sbb
fnstcw
add
clc
rcl
pop
or
push
xor
mov
inc
add
push
and
or
adcl
fdivrs
add
fisttps
inc
mov
xor
jbe
out
arpl
gs
fwait
add
dec
ret
push
lea
jg
das
inc
loop
and
fistl
mov
xor
int
fs
daa
adc
sbb
sub
sbbl
cmp
je
lret
sub
xor
or
push
xchg
mov
mov
xor
in
xor
iret
mov
lods
popa
push
shlb
loopne
jns
pop
popl
add
xchg
push
jge
int
or
mov
jns
movsb
sbb
incl
popf
retw
mov
icebp
mov
es
adc
rcrl
mov
cmp
xor
mov
loope
pop
push
roll
iret
mov
jno
add
adc
push
or
in
mov
or
jp
mov
xor
fbstp
xchg
leave
add
mov
xchg
mov
pusha
hlt
pop
jb
jle
sub
aas
jmp
and
orb
loope
ss
aas
and
ljmp
mov
or
dec
mov
jp
adc
cmp
fbld
sbb
and
push
sahf
jmp
popa
xor
int
mov
mov
jbe
pop
popf
lock
sub
int
push
fildl
pusha
xchg
fs
out
movsb
mov
dec
or
add
fucomip
sbb
lock
pop
xor
add
cmp
xor
cmpb
inc
out
sbb
fs
mov
dec
stc
or
or
rorb
push
mov
mov
mov
icebp
push
fcoms
je
imul
repz
pop
jg
mov
outsb
pop
sbb
jns
je
adc
pop
xchg
xlat
mov
mov
lea
dec
call
mov
xchg
idiv
cmp
aam
sub
sbb
addl
je
sbb
mov
or
or
sbb
lods
pop
idivl
popf
es
and
in
shll
leave
repz
xor
pop
sub
js
mov
jmp
out
add
dec
in
imul
insb
sarb
out
xor
mov
add
lret
loopne
shrl
push
jno
imul
rcll
ja
xchg
int
push
inc
push
push
mov
mov
dec
sub
cmp
in
mov
adc
dec
pop
adc
dec
cmpsl
sub
cs
je
je
dec
add
dec
idiv
add
js
sub
and
jl
mov
sub
loopne
dec
or
pop
xchg
in
inc
cs
and
cmp
mov
cltd
test
jbe
mov
lock
xor
ss
xchg
in
ljmp
add
js
cmp
or
gs
ljmp
aam
pop
add
mov
pop
jno
jp
jl
sbb
popa
xor
push
mov
dec
daa
jo
or
cmp
xchg
xorl
jge
sti
popf
or
push
cmpsb
in
decl
sbb
scas
aam
loop
ljmp
sahf
sub
sahf
or
pop
std
adc
jl
fwait
out
leave
jo
inc
das
movsb
adc
aas
pop
int
mov
movsb
mov
mov
pop
inc
xor
adc
aaa
cmp
sbb
inc
adc
loopne
cmp
loope
push
mov
cmp
aas
and
int3
mov
cld
dec
insl
jo
and
outsb
jmp
add
sbb
imul
call
push
dec
scas
mov
sahf
mov
mov
fs
push
inc
ds
or
or
lds
adc
imul
rcr
mov
out
pusha
adc
aad
adc
xor
or
out
loop
push
iret
nop
test
bnd
mov
jae
leave
lock
out
outsb
lcall
jmp
dec
add
fs
push
dec
pusha
je
cmp
adc
xchg
data16
add
xor
jbe
popa
push
push
ret
cmpsb
test
xchg
cltd
insl
int
sub
and
movq
jle
push
scas
das
imul
lcall
cmp
xor
cmp
push
fisubl
lahf
mov
xlat
stos
inc
inc
mov
sbb
ds
pop
fldenv
popf
jno
popa
ret
cmp
xor
jmp
fistps
lahf
push
pusha
adc
je
push
ret
mov
adc
xlat
pop
cmp
push
stos
xchg
adcl
xor
fwait
pop
lds
add
test
test
lcall
mov
popf
jo
xchg
push
incl
es
push
addl
mov
dec
testb
dec
repnz
cmpsl
repnz
jns
or
push
pop
dec
push
fidivrs
jle
pusha
mov
in
xchg
rcrl
es
sti
daa
jge
sbb
lret
jne
cmp
cli
and
repz
jle
jle
inc
dec
mov
push
xchg
xlat
std
int
rorb
inc
lcall
dec
sbb
push
xadd
repz
clc
jl
add
sbb
xchg
adc
xchg
add
movsb
and
pop
pushf
mov
insb
mov
jge
mov
lods
add
xchg
xor
and
inc
adc
out
repz
mov
mov
jmp
adcl
data16
jae
inc
inc
idivl
or
push
dec
add
mov
lahf
test
pop
sbbb
dec
sub
sahf
add
in
jg
adc
fsubrl
test
pop
jno
les
xchg
cltd
and
dec
mov
mov
aaa
push
imul
mov
jecxz
shl
aad
jb
adc
push
adc
ret
daa
fsubs
scas
inc
ss
and
inc
and
test
add
adc
shlb
cwtl
nop
negb
lds
and
mov
loopne
xlat
hlt
imul
push
dec
test
shrd
movsl
or
cmpsl
or
sbb
fcompl
cmpsb
je
jmp
xor
jne
loop
sbb
iret
xchg
cmp
dec
add
pusha
xchg
data16
mov
into
adc
sub
cs
push
insl
test
mov
jne
jno
test
mov
dec
xor
push
cmp
hlt
and
bound
jecxz
outsl
fadds
mov
xor
cmp
pop
popa
fsubs
out
out
nop
xchg
cld
adc
pop
divb
incl
cmp
mov
call
xchg
clc
ds
jne
and
dec
and
add
test
insl
dec
shll
mov
dec
test
or
enter
clc
pop
push
xchg
jne
arpl
sub
cltd
pop
mov
adc
and
jnp
push
sbb
push
dec
add
add
mov
add
aam
ljmp
cmp
test
fdivrl
ljmp
data16
aam
test
pop
test
aaa
cmp
rclb
dec
xor
inc
ss
add
aam
or
inc
mulb
sbb
adc
xchg
xor
dec
sahf
or
pushf
imul
ss
xor
loopne
mov
xchg
rcrb
pop
xorb
incb
subl
adc
mov
outsl
test
in
sar
jo
fildll
pusha
jmp
xchg
lea
adc
mov
xchg
in
jle
add
xor
dec
pop
xchg
xor
inc
lods
push
js
xchg
jecxz
dec
sbb
mov
pop
in
sub
pushl
sbb
scas
add
cwtl
test
and
jbe
fildll
repnz
sbb
fs
in
inc
push
mov
adc
je
call
hlt
insl
fistpl
clc
mov
stc
enter
decl
repnz
push
sub
shlb
test
adc
sbb
push
sarl
stc
xor
pop
mov
jns
or
lahf
loop,pn
out
jb
sbb
fdivrs
add
inc
cwtl
cmp
sbb
mov
dec
push
mov
into
cmpsb
imul
in
dec
andb
int
dec
ss
fsubs
lahf
pusha
jbe
cmp
fnsave
lret
lret
pop
xchg
lds
dec
lcall
insb
jb
sub
imul
loope
dec
mov
enter
stos
cwtl
adc
dec
xchg
out
gs
xchg
push
sub
xchg
bound
hlt
test
xor
cmp
xchg
lret
xor
insb
add
jge
mov
add
les
and
jl
lret
pop
notb
lret
jae
cld
pop
addr16
fists
mov
dec
fstp
inc
js
add
pop
and
jge
xchg
dec
sbbl
into
sbb
fmul
add
xchg
push
rcrb
jbe
jns
nop
in
pop
shrl
scas
push
loope
inc
icebp
jb
loop
bound
mov
dec
or
enter
je
adcb
mov
loop
mov
imul
leave
or
popa
mov
dec
mov
outsb
fisubs
ret
mov
cwtl
lcall
inc
adc
lock
push
fistl
daa
jl
or
das
push
jmp
dec
push
js
or
fucomip
jmp
xor
imul
dec
imul
mov
cmp
ret
stos
sub
fsubrl
pop
jne
jg
add
popa
cmp
lods
jmp
jo
les
das
pop
adc
insb
lret
sub
mov
stos
and
es
sub
aad
sub
es
cmp
add
mov
mov
xchg
int
outsb
ja
dec
nop
push
xor
and
inc
outsb
les
mov
nop
and
sbb
fidivl
xchg
push
pop
pop
jg
mov
fmuls
mov
mov
fbld
dec
sbb
dec
mov
leave
mov
jle
nop
sahf
andb
arpl
imul
inc
dec
mov
jae
xchg
mov
adc
jno
daa
je
inc
add
inc
push
repz
das
push
or
std
pop
or
xorb
fldl
movsb
inc
movsb
and
arpl
dec
push
or
mov
adc
cmpsb
mov
cmp
adc
mov
dec
dec
add
mov
pop
ret
leave
fcmovb
xchg
xor
sbb
js
sbb
movsb
mov
xchg
adc
push
arpl
mov
ds
cmc
subl
lret
inc
test
cmp
adc
insl
mov
inc
cmp
aam
dec
mov
in
adc
pop
aaa
cmp
imul
and
dec
and
ret
nop
push
mov
cld
iret
ja
or
add
loope
loop,pt
inc
repnz
or
or
iret
sbb
dec
sub
inc
add
inc
mov
and
sub
mov
xor
push
or
test
mov
mov
mov
xor
in
mov
and
enter
mov
mov
dec
add
clc
lds
mov
jg
inc
or
mov
and
lods
in
ret
push
push
cmp
inc
mov
dec
sbb
jmp
shrb
push
jno
sbb
fldt
mov
sub
pop
es
addr16
cmp
inc
push
lock
call
jno
and
and
sbb
jnp
xchg
imul
cmpl
inc
lahf
insl
outsl
dec
jle
xchg
mov
fadds
daa
dec
inc
imulb
sbb
fdivl
pop
mov
adc
adc
addr16
mov
xchg
jne
jle
and
mov
xchg
pop
enter
mov
sub
lcall
bound
loopne
imulb
call
xchg
cli
xor
stc
or
aam
aas
cld
and
shll
add
jae
xchg
sub
jmp
pop
sub
scas
clc
ficoml
xor
dec
ja
adc
jl
sub
mov
xor
mov
push
pop
xor
xchg
mov
scas
mov
add
std
sar
pop
js
cltd
push
xchg
xor
xchg
cmpl
movsb
leave
sbb
rol
mov
mov
sahf
jmp
mov
xchg
movsl
push
or
mov
pushf
xchg
lods
aas
leave
xchg
test
dec
outsl
push
xor
adc
xchg
cmp
mov
mov
adc
in
mov
enter
lods
ss
mov
xor
or
cmp
xor
in
jg
outsb
mov
xor
jmp
add
fiadds
arpl
sub
call
sbb
je
cwtl
lcall
stc
push
jle
jns
inc
out
nop
das
decl
or
pop
xchg
fbld
adc
out
nop
and
mov
push
mov
xor
jl
adc
call
xor
or
add
nop
cmpsl
dec
repnz
stc
loop
sbb
dec
or
and
mov
inc
add
and
jae
sbb
jl
call
imul
adc
sbb
push
mov
sub
xchg
stos
xor
lock
dec
js
mov
popa
aas
sbb
sbb
jg
xor
and
cs
cmp
bnd
inc
rorb
jnp
or
iret
out
nop
outsb
sti
insb
pop
test
repz
fcoml
and
loope
popl
nop
pop
xor
jmp
sub
addr16
cmp
into
pop
jns
insl
add
cvtpi2ps
xchg
aas
stos
dec
mov
pop
and
lds
sar
dec
movsb
sbb
inc
xchg
pop
jl
pusha
nopl
bound
sbb
idiv
ss
imul
pop
xchg
dec
addr16
into
mov
shrb
cmp
leave
incl
mov
hlt
lahf
add
ja
push
push
das
xchg
mov
rcl
popf
das
xchg
lcall
test
sbb
out
or
fs
sub
mov
vzeroupper
jb
inc
ljmp
or
add
mov
mov
push
or
mov
fisubrl
cltd
xorl
dec
mov
adc
repnz
nop
inc
and
pop
ljmp
push
pop
and
sbb
lds
xchg
jo
mov
and
insb
mov
lods
call
cmp
in
and
andl
xchg
cmp
rcl
xchg
dec
inc
and
adc
push
dec
add
es
jmp
xchg
cwtl
movsl
addr16
add
nop
and
sbb
xchg
or
arpl
jno
adc
jl
lock
lods
lahf
adc
scas
or
out
xor
stc
dec
and
sbb
test
cmc
pop
ffreep
addb
and
gs
clc
adc
out
xor
sbb
xchg
mov
jl
inc
cmp
adc
es
xchg
in
imul
mov
jbe
scas
dec
push
aaa
jp
mov
sbb
sti
jbe
ret
mov
push
adc
cmp
inc
mov
pop
adcb
fdivs
push
jne
sbb
stos
hlt
mov
xor
xor
xor
iret
mov
je
add
loop
sbb
scas
mov
addr16
mov
pop
ss
repnz
push
sub
aad
and
movb
sub
das
push
rclb
jmp
out
insl
or
push
das
and
cwtl
test
sub
pop
add
decl
enter
xor
jl
lds
xchg
sub
push
add
mov
and
sub
out
shrl
cmp
dec
add
or
leave
cld
test
sbb
imul
std
sbb
mov
cwtl
push
stc
cmp
xor
lahf
mov
fstps
xor
icebp
test
inc
pop
jae
ret
adc
or
adc
mov
add
mov
jnp
ret
clc
pop
enter
popf
lea
movsb
daa
imul
xchg
push
cld
stos
xchg
sbbl
jmp
ret
rorl
loopne
and
fwait
mov
or
dec
std
dec
fsts
add
adc
rcll
adc
je
fs
je
mov
xor
xor
add
xor
xor
call
push
rolb
mov
arpl
xor
jae
mov
mov
or
mov
xchg
rclb
pusha
mov
shr
ljmp
push
mov
inc
js
or
mov
test
in
jb
popa
dec
xor
add
lods
xorb
or
or
xchg
rcr
xchg
adc
sbb
cmp
push
sbb
andl
pushf
shlb
mov
shrl
rorb
fistps
mov
sbb
int
pop
fistpl
jne
push
push
push
jge
sub
and
add
aam
daa
inc
push
dec
call
or
je
sti
inc
jb
xor
mov
sbb
add
das
loopne
shrl
add
xchg
mov
out
in
dec
movsl
sub
dec
jne
cmp
mov
xchg
adc
or
and
and
daa
fstl
or
or
rcr
xorb
push
incb
addr16
adc
bound
or
xlat
add
mov
rorl
and
out
or
cwtl
bound
sbb
and
dec
mov
push
aaa
pusha
xchg
mov
ss
dec
testl
fucomp
adc
mov
fwait
xor
lret
or
add
sbb
lret
lods
rol
fs
hlt
pop
ficomps
call
inc
fs
inc
mov
jmp
roll
out
or
xchg
jp
mov
and
sbb
mov
inc
rclb
cmp
imul
and
xchg
cli
or
sti
sbb
mov
pusha
mov
sbb
xor
mov
inc
push
fsubl
push
sbb
sbb
shr
imul
mov
and
dec
add
aam
inc
jg,pn
xor
loopne
and
in
lret
and
fnstcw
sbb
pop
and
adc
pop
xor
lea
gs
xchg
xchg
cltd
lret
xor
test
test
jge
aaa
dec
repnz
fs
mov
repz
les
add
ficoml
push
or
loop
pop
orb
daa
mov
and
pop
pop
nop
mov
xor
mov
adc
mov
add
jns
sarl
pop
hlt
pushf
out
xchg
mov
mov
in
push
nop
xchg
stc
aad
call
movsb
jns
or
cwtl
xchg
and
mov
add
call
popf
inc
pop
inc
jbe
mov
sbbl
pop
inc
sub
in
je
inc
dec
or
push
pop
int
shrl
and
inc
xor
clc
xchg
shlb
pop
mov
and
jmp
imul
fcompp
dec
inc
popf
dec
cli
jb
orl
add
inc
pop
push
or
xorl
xchg
add
mov
inc
adc
push
ds
test
sub
out
mov
rcrl
push
add
stos
test
sti
push
ss
dec
mov
aam
add
xchg
mov
out
add
mov
std
lods
sbbl
dec
out
sbb
shl
scas
xlat
scas
jo
sahf
add
repnz
inc
fisubs
fmulp
push
adc
inc
iret
cmp
add
scas
push
lcall
decl
repnz
lea
daa
or
scas
pop
cwtl
xorb
movsl
test
pusha
lahf
push
lahf
cmpsb
adc
or
xchg
push
xchg
frstor
daa
add
aad
andb
mov
add
mov
call
stc
loopne
push
fistps
inc
movsb
ret
ljmp
add
shll
pusha
fisttps
stos
stc
adc
gs
adc
xor
sub
ljmp
or
push
and
nop
add
pop
mov
fnop
subb
andl
inc
es
mov
or
mov
fsubrs
cs
lret
dec
xor
mov
inc
add
push
xor
cmp
pop
xor
cwtl
movsl
shlb
ret
test
pop
sbb
xor
dec
scas
out
mov
sbb
std
jecxz
pop
xchg
cmp
cmp
aaa
jb
xor
into
inc
mov
and
pop
dec
mov
xor
cmp
dec
push
cmp
add
jo
cmp
out
xor
xchg
mov
add
cmp
aas
fs
add
sub
add
iret
mov
mov
test
test
sub
xchg
fsub
ret
mov
jl
mov
jecxz
jp
popa
fnstcw
movsl
pop
sub
cmpsl
bound
mov
js
xchg
xchg
xchg
iret
and
popf
in
cmp
xor
lock
jl
dec
aas
adc
push
dec
add
dec
or
mov
ds
test
fmuls
and
inc
cmp
adc
enter
pop
add
adc
loopne
or
mov
incl
loope
dec
or
cs
aas
sub
lods
xchg
mov
and
add
lret
in
sub
push
sbb
push
test
outsl
sbb
into
and
mov
popa
test
and
lahf
jp
ds
or
add
mov
fwait
cmp
shrb
or
data16
pop
xor
dec
sbb
fs
ds
dec
sbb
cmp
shl
sbb
pop
ja
xchg
andl
test
add
jo
mov
cmp
in
add
imul
fadds
daa
aad
movsb
xchg
sub
pop
fs
and
mov
inc
fldenv
mov
jbe
xchg
adcb
push
mov
xchg
int
sub
inc
out
arpl
rorb
fidivrs
ficoms
xchg
out
jmp
js
insb
add
leave
and
gs
pop
add
xlat
mov
dec
lds
into
pop
and
xchg
inc
outsb
rcrl
sub
fldcw
push
sub
add
loop
xor
cmpsl
and
test
call
or
es
mov
inc
repnz
test
add
xchg
xchg
push
xlat
push
cmp
js
cmpsb
outsb
mov
pushf
xor
cmpl
xor
push
movsb
stos
es
fwait
xchg
or
nop
movsb
cmpl
nop
jmp
dec
ficomps
test
rcrb
cmp
lcall
inc
sub
fnsave
es
lret
dec
dec
push
mov
cltd
nop
pop
dec
ja
cmp
add
jne
cmpsb
xchg
addr16
mov
and
or
pushf
mov
lcall
fs
or
xchg
sub
xchg
pushf
in
call
aam
inc
lods
rol
and
sbb
push
push
sbb
out
lods
hlt
shrb
mov
ret
push
gs
pop
inc
xchg
xchg
cmp
xlat
and
xor
mov
cmp
push
mov
pusha
inc
inc
imul
test
movsb
xchg
pusha
adc
scas
imull
xorb
jne
js
xor
dec
or
insb
es
in
fs
adc
push
sub
mov
lods
mov
cs
bound
mov
or
mov
xorl
aas
sbb
dec
inc
cmp
dec
pop
pop
or
add
mov
inc
sub
mov
or
xor
pop
adc
clc
fdivr
mov
test
sub
and
aas
cs
mov
push
jle
add
mov
jne,pt
outsl
mov
jnp
dec
pop
fadds
add
mov
addr16
mov
xor
sub
aaa
fchs
fs
mov
call
dec
and
sub
bound
sarb
sub
adc
xor
mov
sarb
or
add
inc
and
and
sbbb
sbb
jnp
adc
fisttps
dec
mov
push
and
fnsave
leave
cmp
push
pusha
lods
push
mov
and
push
jg
xchg
push
adc
shll
test
cwtl
in
aaa
inc
inc
aas
mov
f2xm1
lods
jecxz
jmp
dec
sbb
add
or
sbb
dec
ss
movsl
ret
sbb
repz
mov
rcll
mov
push
dec
pusha
stos
or
out
int3
pop
jl
subb
xor
jnp
cmp
push
and
add
push
bnd
add
and
and
xor
cmp
pop
shll
mov
add
sub
sub
cwtl
inc
out
sti
and
out
add
adc
in
rorb
xchg
imul
cmp
adcl
mov
leave
aaa
mov
xchg
mov
or
cmp
add
fisubl
popl
push
and
xchg
mov
fpatan
push
cs
mov
fisttps
fistpl
sbb
andb
sbb
leave
pop
add
adcl
repnz
aad
mov
push
test
xor
andb
jp
je
scas
test
sbb
in
nop
cmc
cmp
shll
lahf
jle
add
out
fs
pop
add
mov
adc
arpl
add
or
sbb
das
pop
inc
mov
push
push
dec
and
push
xchg
data16
cmp
cli
xchg
pop
mov
out
in
or
sub
pop
mov
fcomi
cmp
loopne
xor
sub
adc
test
cmc
mov
icebp
fs
pushl
enter
mov
sbbl
cmp
das
cmp
enter
lcall
popa
adc
or
sbb
stos
test
gs
test
test
iret
mov
call
add
xchg
push
sub
jmp
loope
mov
mov
fcomps
cmp
cmp
test
add
xor
inc
xchg
rol
jecxz
jo
popf
push
push
or
mov
adc
cltd
loop
sbb
adc
mov
add
or
push
loope
and
and
adc
sbb
push
jno
jmp
mov
out
and
pop
xchg
or
vprotb
cmp
mov
les
sti
cmp
pop
fcoms
and
xor
push
cld
push
iret
insl
sarb
adc
push
xchg
xchg
ret
mov
imull
adc
mov
sub
sbb
push
dec
push
fwait
mov
jmp
mov
dec
cmpsb
mov
mov
jae
sub
fiaddl
or
push
clc
leave
cmp
nop
leave
into
mov
shl
cmp
mov
mov
aad
call
jbe
fildll
enter
or
xchg
gs
mov
jbe
and
inc
sub
jae
jno
sub
out
lcall
and
icebp
cmp
mulb
jl
or
call
sbb
push
pop
flds
add
leave
repz
or
cwtl
or
inc
adc
lds
loopne
es
out
jmp
xchg
xchg
fisttpll
into
cmpsb
xchg
lret
sub
movsl
out
adcb
test
pusha
sbb
jg
call
movsb
jns
and
jns
lret
mov
xchg
push
js
and
xchg
or
dec
es
adc
and
xchg
adc
stos
pop
movaps
sbb
add
pusha
cmp
int
add
mov
stc
in
push
scas
addr16
mov
jo
sub
pop
jbe
jo
mov
jo
and
cmpsb
js
xchg
pusha
and
or
orb
jne
dec
mov
dec
inc
inc
sti
cmpl
push
push
mov
push
add
xchg
lret
js
out
add
ret
xor
xchg
cmpsl
or
cmp
push
jp
ja
sbb
xchg
lret
jp
std
enter
loop
cmp
xor
xchg
lcall
push
xchg
cmp
pusha
in
and
adc
cmpsb
mov
or
sub
sbbl
push
enter
mov
push
aam
jmp
test
xlat
fiadds
cmpsb
cmp
sbbb
mov
dec
xor
nop
int
add
add
inc
dec
subb
das
dec
pop
lahf
xchg
int
xchg
adc
sbb
out
insb
xchg
push
and
sbb
clc
sbb
jge
xchg
adc
sbb
ficoml
sbb
ja
fldt
cs
addr16
cmp
sbb
xchg
sub
mov
inc
call
or
jecxz
or
pushf
cmc
sbb
sahf
push
inc
and
movsb
std
or
pop
mov
addr16
add
addb
or
inc
dec
pop
sbb
je
xor
adc
mov
loop
nop
jnp
shlb
clc
push
ljmp
ficoms
add
sarl
jp
fwait
xchg
sbb
cmp
xor
push
or
adc
inc
push
test
mov
and
loope
mov
jo
mov
push
jns
mov
and
rclb
sbb
xor
out
nop
nop
lret
es
mov
inc
mov
add
jne
out
sahf
xor
jnp
mov
sbb
or
cmp
pop
or
lds
into
mov
jnp
xor
sbb
or
jbe
add
out
push
loop
dec
lcall
sbb
or
jge
and
jno
pop
repnz
inc
inc
addb
or
pusha
sbb
loope
es
fsub
jne
push
inc
je
out
nop
dec
xor
bound
sbb
xchg
cwtl
movsb
negl
lods
in
mov
cmpsl
in
or
shlb
pop
mov
je
adc
sbb
cwtl
cmp
xchg
inc
mov
jb
in
add
mov
sbb
loop
jnp,pt
loop
fs
dec
push
pop
enter
push
out
jbe
pop
repnz
cmpsb
xor
jp
mov
dec
xchg
outsl
fisubrl
sbb
clc
pusha
enter
cmp
out
in
or
mov
inc
pop
fstpl
xchg
test
inc
lods
xor
aam
pop
push
leave
test
cmp
sbb
push
add
fwait
pop
rorb
jp
shll
sar
sub
dec
push
or
dec
or
test
pop
push
lock
ret
xor
iret
dec
or
sbb
and
je
add
xor
xchg
popa
mov
pop
ret
mov
push
and
movsl
xor
push
nop
add
jbe
js
dec
ss
sbb
sbb
es
dec
das
je
push
dec
sahf
inc
ds
cmp
iret
mov
pop
push
dec
push
fldenv
inc
pop
cmp
fldenv
dec
inc
lods
dec
popa
adc
dec
repnz
stc
fs
adc
push
popl
hlt
ret
inc
ret
pusha
mov
dec
loopne
popa
lods
xor
cli
mov
mov
cld
mov
imulb
rolb
ret
imul
ljmp
push
and
xor
push
sar
push
adc
jne
or
inc
sahf
cwtl
sarb
dec
pop
je
sub
pop
sbb
add
xchg
jg
jnp
fldenv
sbb
adc
stc
aam
push
jno
adc
lock
lcall
sar
sbbb
xor
push
rcrl
and
ds
dec
mov
jbe
stos
pop
sbb
xchg
push
inc
lret
or
jmp
sbb
xchg
inc
pusha
cmp
mov
xchg
jb
in
or
xlat
outsl
test
inc
lods
xchg
inc
jb
mov
sub
mov
movsb
mov
lods
cmp
aam
xor
and
add
lcall
add
test
in
repnz
inc
push
inc
adc
or
push
jbe
sbb
pop
addb
pop
mov
ret
bound
in
xchg
inc
mov
add
repnz
or
inc
mov
mov
lcall
inc
js
cwtl
addr16
pop
add
scas
popf
rolb
jg
pop
push
add
dec
pop
pop
jo
dec
push
pop
inc
dec
sbb
sbb
in
add
test
cmp
adc
cltd
jne
xchg
xchg
mov
mov
xlat
and
jmp
lahf
out
aad
xor
dec
inc
pop
push
xchg
lock
loopne
test
mov
dec
lret
in
addl
add
pop
mov
orl
mov
nop
imul
jo
add
shlb
sti
mov
movsb
stc
imul
and
test
sarb
add
xor
leave
addr16
cmp
sub
jbe
inc
sbb
inc
lret
inc
or
push
push
push
push
cmp
mov
xor
mov
add
mov
nop
jl
xchg
add
mov
sub
nop
out
fs
adc
cmc
add
cmpsl
xchg
xchg
nop
mov
sbb
push
xchg
aas
and
arpl
fs
aam
sbb
mov
mov
xor
orl
fiaddl
or
rcrl
pop
es
mov
aaa
and
add
jg
imul
jae
or
add
jnp
fdivrl
mov
shr
and
lods
inc
popl
lret
mov
add
pop
outsb
jne
lcall
add
outsl
fs
or
inc
cli
ljmp
mov
adc
pop
mov
xchg
xchg
int
in
add
enter
mov
in
cmp
inc
jle
je
pop
in
inc
dec
in
inc
adc
ficomps
mov
pop
in
lods
push
sti
mov
add
dec
cmpl
and
loop
xchg
add
fucomip
jmp
and
int
jl
and
mov
cmpsb
jp
adc
adc
ds
es
fidivs
aam
test
pop
jp
test
add
add
xor
dec
cli
ja
cmpsl
leave
or
in
sub
sbb
push
xchg
adc
fldl
loopne
xchg
mov
cwtl
rep
leave
and
xor
ja
leave
scas
add
adc
fistl
into
cld
mov
mov
in
sbb
add
das
push
xchg
jae
and
push
xchg
cmp
imul
xchg
mov
imul
add
lods
loop
imul
adc
add
add
jae
das
mov
add
and
loopne
jns
push
filds
mov
sbb
add
orl
loopne
pop
push
mov
xchg
loop
das
jbe
pop
jle
imul
push
push
jne
rclb
jp
and
push
and
in
stos
adc
fdivs
lea
sahf
fistpll
pop
data16
and
pop
sti
dec
and
fmull
aas
dec
cmpsb
add
xor
or
pushf
or
cmc
rcr
insb
int
out
add
sbb
mov
push
hlt
sub
sub
cmpsb
push
push
out
or
pop
mov
in
ffreep
jae
cwtl
add
je
add
frstor
adc
fnsave
mov
sahf
mov
pop
push
sub
cmp
cmp
sbb
add
mov
xor
push
or
push
repz
mov
aaa
add
adc
out
mov
adc
roll
jg
mov
fildl
lock
cmp
inc
inc
lea
push
xor
orb
fstp
push
sbb
in
cmp
pop
test
fmuls
ljmp
inc
dec
add
push
nop
jp
add
cmp
je
cmp
push
test
ds
shll
inc
out
or
shll
insl
fistpl
adc
and
dec
ljmp
in
jb
xchg
mov
movsb
sub
push
iret
inc
gs
inc
xor
inc
ds
repnz
mov
bts
lret
pop
pusha
mov
rorl
outsb
in
movb
jae
mov
mov
mov
outsl
ret
mov
mov
adc
pop
and
das
cmp
xchg
push
shll
xor
or
loope
xchg
pushf
inc
mov
add
repz
sti
mov
rcl
ss
mov
pop
jo
fldt
sub
jo
loop
lock
add
or
xlat
sbb
add
imul
xor
mov
dec
hlt
insl
cli
das
jge
push
loop
test
int
std
lock
sbb
outsl
mov
ss
leave
or
push
and
ds
das
icebp
pop
lea
stc
fwait
adc
repnz
jne
cmp
fistps
inc
push
jmp
add
mov
pushf
cmp
fisttps
jg
enter
pop
mov
cmpsl
out
rep
frstor
mov
mov
nop
jl
cltd
dec
ja
mov
and
pop
sub
add
pushf
jge
dec
mov
ret
fidivs
movsl
mov
jmp
aaa
sbb
dec
pop
lret
shr
pop
inc
mov
addr16
xchg
push
in
pop
jbe
mov
insl
rcrb
mov
lock
cmc
div
xorb
cmp
push
inc
jl
xor
pop
or
pop
xor
in
fmull
xor
rcl
inc
jne
or
fldl
cmc
outsb
mov
pop
mov
mov
fstp
cmp
xchg
pop
mov
pop
jbe
jae,pn
jae
pop
jge
lahf
dec
pop
jmp
mov
jnp
arpl
dec
push
fsts
inc
cmpsb
pop
leave
mov
or
insb
int
cmpl
or
mov
cli
push
dec
jo
mov
sub
aaa
sarl
pop
xor
mov
rorl
sbbl
filds
inc
div
mov
mov
mov
jns
out
frstor
les
mov
lods
inc
inc
roll
push
gs
mov
loopne
iret
mov
mov
mov
xchg
leave
je
cmpsl
stos
fcmovnbe
xor
in
lea
adcl
sbb
stos
test
jo
cmp
fwait
in
lahf
adc
mov
outsb
jl
mov
pop
xchg
cmp
or
fwait
dec
sbb
bound
and
dec
cwtl
lea
mov
inc
mov
and
pusha
dec
fsubr
fld1
pop
mov
push
loope
add
push
addl
subb
mov
mov
cmp
jl
psubsw
pop
inc
xchg
adc
mov
movsl
cmp
lahf
mov
aam
adc
ja
push
pop
adc
das
push
fdivs
xchg
jae
adc
adc
sbb
pop
pop
add
jecxz
mov
fsub
mov
jbe
xchg
shrl
sti
or
xchg
mov
shl
push
jno
mov
idiv
testl
pop
mov
and
mov
pop
xor
outsl
or
pop
cmp
push
popf
into
stos
lods
mov
mov
xchg
sarl
sbb
add
jl
sbbl
cld
dec
sub
fnstsw
pop
ss
and
insl
dec
mov
ds
lods
test
into
std
fmuls
repnz
out
xlat
movl
jbe
jno
ja
fadds
jbe
das
shll
fldl
test
sbb
inc
shl
and
xor
mov
sahf
popf
int3
and
and
int
pushf
jmp
cwtl
mov
cltd
cmp
fidivrs
subl
inc
fsubrp
fldt
sbb
pop
mov
cmp
inc
sarl
pop
cltd
or
add
or
mov
sub
fidivl
add
pop
sbbl
mov
mov
jno
xchg
mov
pushf
cmp
mov
add
mov
mov
mov
dec
lds
loop
pusha
adc
add
adc
imul
fwait
xchg
movb
cli
adc
out
dec
seta
mov
adc
test
add
jl
cmpsb
fcmovnb
mov
and
dec
xchg
fistpl
lods
and
xchg
ds
in
sbb
mov
sahf
dec
lcall
dec
imul
pop
jp
pusha
rcl
popf
cld
icebp
sub
ss
bound
test
cmp
or
dec
add
pop
push
insb
jno
out
adc
sbbl
fimuls
in
call
test
ljmp
jmp
inc
cli
pusha
or
xor
imul
aaa
stos
dec
cwtl
add
setge
je
cmpb
xor
jo
push
dec
stos
mov
sbb
xchg
cli
loopne
int
xor
pop
xor
imul
jo
lods
push
inc
lret
mov
lods
adcl
addr16
push
mov
add
pop
das
xor
subb
sbbl
pop
mov
push
or
imul
cmpsb
lcall
xchg
xchg
sbb
jecxz
mov
push
int3
sti
fstpt
push
mov
test
adc
xor
xor
push
push
mov
mov
mov
sub
das
fidivl
sbbl
pusha
dec
inc
jae
aas
sbb
mov
jae
mov
xorb
inc
add
in
xor
in
cs
ljmp
pusha
mov
xor
jns
adc
rclb
cli
xchg
inc
adc
in
loop
push
or
push
xor
insl
dec
jnp
sti
add
or
scas
mov
add
xchg
je
dec
jge
daa
clc
and
mov
mov
add
or
sub
xor
mov
inc
out
leave
fsubl
loopne
jb
sti
out
pop
inc
pushf
cli
inc
inc
mov
push
push
xor
push
and
dec
orb
out
fmull
pop
adc
push
or
loop
cmp
nop
pop
insb
sbb
adc
pusha
mov
adc
shll
rcll
std
lret
incl
dec
out
aam
push
js
aaa
pop
push
hlt
into
jge
aas
inc
inc
ss
in
xchg
and
fs
add
test
filds
jne
add
jmp
xor
xor
in
loop
or
por
outsl
arpl
shlb
jge
pop
ret
jb
ss
xor
es
call
popl
lcall
xor
mov
cmp
adc
adc
lods
mov
aaa
sub
adc
push
push
gs
xor
push
xor
sub
fstps
mov
andb
into
jg
push
mov
mov
dec
xlat
jg
js
shl
sub
dec
sbb
add
push
xor
mov
andb
mov
icebp
test
jne
or
icebp
enter
icebp
push
mov
lahf
lea
inc
jl
xor
push
sarl
ss
jg
daa
push
scas
orl
loopne
cmp
icebp
adc
xor
inc
ficompl
call
fldl
push
clc
sub
cmp
and
shrb
fcomps
push
aad
mov
jbe
aaa
test
hlt
mov
dec
push
sub
stc
cli
out
fdivrs
int
mov
xlat
or
rorl
adc
or
mov
mov
nop
data16
popf
sub
fisttpll
pop
cmp
add
lahf
adc
jecxz
imull
xchg
mov
push
mov
xor
dec
jne
mov
adc
stos
add
in
nop
sbb
lods
bound
lcall
inc
mov
xchg
adc
sub
aad
add
addr16
jp
sub
add
test
inc
in
sbb
sub
js
lds
add
sti
inc
pop
push
mov
insl
ss
imul
je
imul
imul
adc
loope
push
dec
or
or
aas
mov
mov
cmpsb
rcrl
sub
adc
cmp
cmp
cli
jnp
insb
and
and
rorb
fisubrs
lds
pop
aas
mov
ljmp
movsb
sahf
fs
dec
and
sbb
ret
jecxz
sti
fidivl
push
adc
bound
fs
sahf
inc
push
aaa
xor
xchg
ret
inc
sub
out
dec
pop
mov
lock
enter
jecxz
cwtl
mov
enter
add
cmp
out
scas
nop
adc
lock
inc
mov
xorl
shlb
adc
pop
lea
cmpsb
sbb
cwtl
in
sti
std
xchg
fbld
pop
add
and
pop
loope
fcmovb
xchg
loope
sbb
mov
pop
daa
cwtl
mov
cmpsb
mov
out
push
mov
pop
cli
cmp
push
mov
and
test
in
dec
jno
push
std
pop
xchg
aas
push
movsb
cmp
pop
pop
push
mov
ror
mov
bound
into
xchg
mov
xor
mov
xor
adc
dec
std
inc
pop
mov
add
lock
mov
movsl
cltd
push
clc
pop
rol
sti
lods
sbb
xchg
mov
lret
ficoms
jl
enter
push
pop
pop
repnz
int
cmp
jge
push
fisttpll
inc
push
push
add
test
mov
fstl
inc
or
jnp
and
movsl
push
lahf
xchg
les
popa
push
and
je
pusha
cs
and
lcall
mov
sbb
sub
mov
mov
mov
xchg
data16
out
mov
cld
jbe
mov
aad
add
jg
insb
insb
movzwl
mov
subl
mov
cli
negl
cmpsl
add
ret
daa
cmp
inc
popa
ret
xchg
mov
sbb
xlat
test
arpl
bound
mov
maxps
aaa
loopne
call
adc
fdivrs
mov
jo
pop
imul
orl
fdivrl
sbb
sub
rol
lret
add
ret
cli
and
popa
lea
and
punpcklwd
mov
jg
push
dec
sbb
inc
xchg
or
fnsave
mov
lock
or
inc
in
xor
inc
fistl
push
sbb
fidivrs
out
xchg
iret
jb
mov
jb
scas
xchg
repnz
imul
test
xchg
lock
jbe
xor
orl
imul
loop
lock
push
dec
mov
popf
cmp
sbb
jns
sub
push
sbb
inc
lock
adc
lock
sub
std
xlat
mov
in
or
aam
cmp
mov
rorl
sbb
sbb
ret
outsb
add
out
sbb
mov
lods
mov
dec
mov
sbb
aaa
and
pop
mov
daa
insb
jecxz
ds
xchg
mov
mov
push
xor
das
or
add
push
loop
or
fldt
pop
mov
jae
lea
in
dec
or
aaa
mov
sbb
mov
fwait
out
sarl
pop
or
rol
cmc
scas
dec
pop
sbb
push
jle
xchg
xor
push
mov
push
cmp
es
fmull
dec
insb
cmpsb
js
pop
sbb
pop
scas
or
add
xlat
movsl
xor
push
arpl
ss
xor
push
scas
add
dec
mov
jnp
lods
add
inc
mov
scas
notl
mov
clc
jne
mov
clc
add
add
fnstsw
in
dec
sub
push
mov
sahf
mov
outsl
int
jge
lods
inc
mov
pop
inc
mov
xchg
and
ret
and
push
inc
sub
push
cwtl
cli
hlt
cmp
pop
add
adc
test
xchg
sti
cs
lds
adc
mov
mov
dec
and
push
adc
push
add
mov
mov
mov
push
xchg
jmp
nop
aaa
daa
or
lods
pop
mov
enter
fistps
mov
popf
test
mov
adc
push
inc
push
mov
out
push
std
outsl
aaa
dec
cmpsb
or
movsb
pushf
stos
cwtl
push
mov
cmpsb
rcl
cmpsb
pop
das
ljmp
dec
rorb
dec
cmp
cli
mov
sbb
fsubrl
cmp
dec
mov
mov
and
ja,pn
fcoms
les
cwtl
loopne
aas
cltd
xchg
inc
imul
xchg
mov
xchg
lea
or
or
and
ds
pop
ret
mov
sbb
sub
iret
xor
sub
jo
sub
jecxz
pop
je
scas
and
cli
cmp
add
or
sbb
sbb
rclb
push
lea
adc
xchg
mov
dec
sbb
lods
jne
push
pop
adc
out
sti
push
sub
jno
xchg
adc
xchg
inc
inc
mov
aad
cltd
adc
and
dec
lcall
jl
addr16
fdivp
movsl
or
fstp
fisubrs
fs
inc
and
fadds
pop
pop
xchg
add
jp
mov
test
and
movsl
push
push
add
push
xchg
sbb
mov
popa
push
sbb
sbb
test
cltd
lret
add
mov
cmp
ret
dec
int
xchg
add
pop
scas
sbb
jb
rcl
hlt
sub
sub
add
nop
push
pop
ss
testl
pop
ljmp
push
outsb
ljmp
xor
xchg
pushf
rolb
xor
ss
sbb
pop
nop
loop
mov
mov
pop
and
mov
inc
das
mov
pushf
out
sub
mov
mov
push
xor
decb
dec
push
inc
ds
push
pop
out
stos
clc
icebp
inc
int3
push
insb
push
mov
ds
sub
sahf
test
out
js
sbb
sub
jp
xchg
inc
sbb
insl
or
aaa
call
inc
mov
jecxz
dec
sarl
pop
nop
out
in
dec
sbb
or
iret
hlt
sbb
cmp
sub
push
in
dec
dec
aas
test
mov
idivb
aaa
test
or
fcompl
in
sti
movsl
sbb
loopne
mov
jne
mov
sahf
hlt
testb
dec
and
call
push
aam
dec
inc
stos
mov
push
jbe
mov
movsb
and
inc
jne
inc
and
fldt
mov
addl
xchg
nop
adc
mov
xchg
push
mov
andb
js
xor
inc
add
dec
add
pop
nop
mov
jge
mov
mov
mov
dec
je
imull
roll
push
and
and
adc
insb
adc
call
dec
insl
pusha
jb
xchg
fimuls
daa
push
mov
dec
add
cmc
das
jbe
cs
dec
xchg
push
insb
je
addr16
mov
outsl
and
pop
mov
and
dec
inc
sbb
and
sbb
cmpl
add
mov
xor
pop
sbb
js
pop
in
push
xor
inc
movsl
push
xlat
insl
loope
push
add
or
les
xchg
ffree
ret
es
imul
push
iret
adc
or
mov
fnsave
lock
pop
jl
xlat
insl
push
mov
adc
sub
aam
dec
pop
xchg
sub
push
mov
pusha
jnp
insb
jb
nop
int3
cmp
inc
dec
das
jbe
aaa
out
push
push
add
test
lods
sarl
pcmpeqb
pop
push
fildl
shrb
lods
outsl
shr
inc
mov
psrlw
lcall
ror
jge,pt
mov
repz
mov
pop
jb
push
ret
cmpsl
jne
insl
mul
and
movsb
js
xchg
and
push
pop
mov
add
push
and
inc
cmpsl
dec
ret
sbb
add
push
subb
jb
cli
push
nop
sub
add
aad
jae
ffreep
jg
lods
aaa
call
and
mov
test
rclb
add
mov
adc
notl
mov
mov
jae
adc
les
add
add
dec
addr16
in
imull
repz
fnstsw
lods
jmp
add
fwait
add
gs
dec
cmpb
shrl
test
into
lds
or
ljmp
xchg
sub
mov
movsl
insl
scas
cs
jo
mov
imul
mov
and
aam
xchg
mov
lods
jmp
fmul
adc
mov
inc
outsl
mov
lahf
and
pop
pop
pop
cld
stos
stos
xchg
or
add
fcomps
adc
and
mov
jbe
ss
sarb
push
mov
movaps
sub
mov
pop
fsubr
or
pusha
popf
push
xor
enter
jno
scas
in
jge
sbb
sbb
mov
jge
adc
dec
test
fstl
mov
mov
adc
sub
bound
clc
pusha
jecxz
xchg
aam
sub
add
cmp
insb
or
mov
data16
and
inc
add
mov
pop
aaa
mov
sub
jbe
loop
lea
ja
push
stos
fadds
mov
ja
fists
add
ja
roll
pop
cmovno
or
and
or
leave
cmpb
sar
shlb
aad
lcall
insl
fisttps
cmp
cmpsb
jmp
jo
subl
add
lret
fwait
push
push
aad
cmc
jnp
and
stos
sbb
push
arpl
jo
pop
mov
call
sbb
mov
mov
insb
pop
icebp
in
shrl
push
cmc
push
outsb
lret
mov
ficompl
mov
cmp
daa
lfs
mov
icebp
jge
orb
aam
jl
adc
loop
mulb
inc
sarl
hlt
adc
out
ret
pop
sbb
aas
mov
inc
push
dec
sub
jp
lea
rcr
dec
rolb
add
insl
push
les
stc
cmpsl
add
push
and
cltd
repz
sub
or
mov
jge
mov
add
inc
jle
test
popa
adc
push
cmp
fnstsw
add
ss
in
popa
repz
jbe
je
add
clc
aam
xchg
fbld
mov
sub
push
fdivrs
or
lret
push
fldcw
adc
mov
add
repnz
jbe
and
test
mov
or
mov
jbe
mov
int
pop
js
or
gs
inc
pop
adc
sbb
dec
adcl
mov
or
cmp
mov
notb
push
adc
mov
xor
cmp
aas
xchg
test
cmp
ret
push
inc
sub
dec
jl
iret
out
dec
xchg
sbb
outsl
fstpl
fs
test
pop
lcall
mov
rcll
inc
dec
cmp
sbbl
fwait
les
xor
leave
icebp
insl
fsubrs
in
mov
add
sti
or
addr16
push
xchg
movsb
addb
jp
sbb
sub
out
sub
jne
lock
jnp
fimull
or
jp
dec
lods
add
mov
shrl
inc
mov
test
popa
sbb
faddl
aaa
cli
xchg
jo
sbb
clc
mov
and
dec
and
cli
and
lods
add
mov
push
gs
or
movsl
or
popf
aaa
sub
cmpl
stc
mov
loopne
mov
mov
adc
mov
cmp
mov
and
and
fidivl
mov
pop
sub
dec
shrl
xor
test
dec
ljmp
popf
cmpl
cmp
push
ret
sub
cmc
sub
cli
mov
inc
and
cmp
popw
jnp
subb
nop
mov
mov
fwait
test
cmpsb
lret
js
and
mov
leave
shl
add
push
aam
or
dec
out
popa
shll
inc
adc
pop
inc
or
int3
xchg
and
cmp
mov
in
push
fwait
scas
rcrb
pop
jbe
add
push
loopew
ficoms
je
loope
iret
sbbb
and
test
sbb
or
sub
jecxz
add
inc
inc
xor
in
lods
loopne
adcb
les
in
stos
pusha
mov
enter
lea
leave
fcompl
lds
sbb
pop
inc
or
xchg
mov
push
test
adc
cs
icebp
cli
pop
rcrl
or
adc
pop
rolb
add
push
ljmp
mov
and
inc
push
sub
inc
loopne
mov
and
arpl
sarb
clc
inc
and
push
or
xchg
adc
clc
xchg
fisubs
adc
adc
aas
push
insl
dec
mov
test
and
lods
mov
mov
xor
mov
movsl
lret
repz
inc
xchg
mov
icebp
cmpb
stc
mov
stc
fs
mov
sub
mov
aad
orb
lret
mov
or
and
insl
sub
adc
scas
je
mov
and
stos
mov
push
std
test
mov
add
mov
and
out
mov
shlb
xor
push
call
mov
cwtl
and
aaa
mov
jae
cmc
lods
add
mov
movl
or
cmc
daa
sub
pop
inc
hlt
rolb
pop
pushf
add
std
in
int
shll
pop
imul
fisttpll
leave
lods
or
dec
stos
dec
lret
add
mov
scas
mov
or
add
mov
dec
push
mov
or
add
pop
push
adc
imul
push
jnp
adc
jae
divb
ret
out
xchg
pop
push
pushf
adc
pusha
xor
and
push
jbe
jmp
cmp
sub
sbb
pop
scas
jecxz
mov
insb
test
clc
or
mov
rorb
je
add
mov
or
adc
daa
loopne
or
ljmp
fadds
cmpsb
not
xor
rcl
cld
test
mov
pop
test
pop
loopne
jl
jo
jmp
jmp
xor
pop
cmp
test
dec
shrl
or
add
cmp
dec
adc
mov
dec
xor
test
ret
add
mov
iret
lock
mov
mov
pop
out
push
jnp
clc
addb
cmp
fwait
ss
lods
xor
or
scas
lea
xchg
mov
mov
sub
icebp
sbb
sbb
repz
idivb
mov
aaa
aad
sbb
lahf
addr16
xlat
push
sub
lock
divb
into
pop
movsb
xor
or
in
fimull
pop
data16
sbb
mov
insl
pusha
loope
mov
pop
in
and
out
push
repnz
jg
mov
in
jnp
popf
mov
lret
clc
xchg
cli
mov
inc
mov
adc
push
popf
inc
rorb
pop
and
xchg
mov
mov
inc
iret
aam
pushf
push
ljmp
flds
mov
add
lods
arpl
or
or
or
pop
lods
hlt
shll
mov
roll
xor
aad
jbe
inc
sbb
rolb
outsl
imul
aaa
jle
sub
inc
lods
mov
pop
fcmovne
test
push
inc
lea
ret
pop
lcall
sbb
or
lea
enter
jo,pn
dec
mov
jnp
fadds
pop
lcall
ss
rorl
out
cmc
add
push
jp
xor
mov
insl
mov
rcr
daa
mov
add
imul
imul
cmp
scas
mov
xchg
push
add
fdivs
inc
ret
pop
mov
sar
or
flds
mov
subb
inc
xor
or
popf
aam
xorl
cmpsb
fiadds
xchg
sub
mov
pop
aad
iret
cltd
insl
clc
dec
jl
jge
das
cmpsb
push
mov
outsb
andl
jb
fs
movsb
mov
addb
mov
enter
lds
xor
push
jl
add
mov
jb
insb
adc
lea
mov
loopne
not
sub
mov
negb
dec
je
daa
and
push
pusha
inc
or
mov
sub
sbb
scas
sbbl
jecxz
and
push
in
mov
das
xlat
xor
jle
xchg
and
xor
roll
pop
stos
aad
xor
dec
mov
imul
shrb
jns,pn
mov
pop
pop
jle
inc
sbb
inc
push
mov
cltd
add
mov
mov
popl
jno
mov
pusha
xchg
sbb
popf
call
sub
fs
test
jb
xor
roll
mov
jle
dec
shll
fidivrs
iret
or
shl
ret
je
inc
shll
leave
addr16
dec
fstpl
cmp
int3
dec
and
xlat
xor
add
inc
adc
bsf
add
sbb
adc
sub
mov
inc
jecxz
push
sbb
mov
mov
pop
popf
adc
cmp
movsl
js
popa
add
stos
testl
hlt
sub
fildl
int
sti
shr
test
pop
xchg
sbb
les
jne
mov
xor
mov
hlt
call
pushf
push
jmp
jae
cs
mov
lahf
push
fsubrs
push
pop
push
pop
inc
mov
push
cmp
mov
xor
add
aaa
lret
push
xlat
jmp
xchg
or
ljmp
sbb
push
adc
call
or
push
mov
mov
or
roll
add
or
push
or
cmc
jmp
push
cltd
mov
in
es
subb
inc
inc
mov
pop
and
pop
shl
clc
inc
add
xchg
add
fstpl
jmp
jle
data16
faddl
or
add
call
jecxz
pushw
in
push
ret
push
insb
fadds
cltd
mov
fcmovnbe
pop
sbb
fnstcw
push
rcrb
adc
push
xor
mov
ffree
add
mov
and
or
cli
ret
or
and
ds
inc
ja
pop
loopne
sub
nop
add
data16
aaa
loop
rorl
jno
xchg
jg
jbe
mov
add
loope
and
je
or
data16
jne
jno
cmc
push
js
xor
jle
xchg
push
and
pop
pop
xor
push
push
mov
leave
mov
sub
cmpsl
sub
xchg
jnp
mov
subl
mulb
fmulp
pop
inc
jge
das
cwtl
aaa
rcrb
sbb
sbb
xchg
in
xchg
mov
addr16
xor
sbb
adc
cmp
inc
daa
push
push
sbb
ret
push
ds
mov
inc
add
orl
push
or
mov
leave
aam
lcall
clc
xchg
and
sti
orb
mov
outsl
and
jmp
clc
push
outsb
and
clc
das
xorl
popf
sub
add
rolb
push
or
push
or
mov
clc
mov
jb
aas
jnp
sub
mov
fcomps
fdivr
mov
ret
aaa
arpl
bnd
filds
fistps
in
in
into
xor
out
das
mov
sbb
jl
push
andl
ret
scas
std
inc
lock
mov
ss
dec
js
fwait
and
sahf
imul
out
and
aad
repz
iret
dec
xlat
push
dec
add
pop
pop
jp
xchg
or
xor
pop
shll
dec
std
mov
jne
jae
jo
and
push
ret
inc
sub
xor
aam
sbb
push
cmp
mov
shll
sbb
pop
shrl
dec
sub
arpl
sahf
fimull
pop
call
icebp
test
push
shrl
inc
inc
arpl
rcrb
mov
lock
push
push
adc
mov
pop
sub
fildl
dec
or
dec
pop
jno
daa
pop
aam
push
push
clc
aas
out
mov
movsl
xchg
or
fsubr
ljmp
dec
lods
and
mov
fdivr
push
or
lcall
in
push
out
int
outsb
test
inc
push
stos
inc
cmp
mov
mov
dec
cs
push
rolb
mov
xor
or
add
std
jle
pop
mov
add
pop
inc
cmp
enter
mov
add
push
les
jo
inc
stos
mov
cmc
push
xor
jo
sahf
in
cld
outsl
adc
fmull
inc
pop
cwtl
ret
ret
scas
inc
subl
push
mov
mov
xchg
pop
xor
jne
push
popa
jnp
lods
pop
xor
sbb
or
lds
cmp
dec
faddl
xchg
jnp
into
js
lock
mov
jl
leave
or
hlt
inc
fdiv
sbb
iret
sbb
inc
mov
mov
stc
dec
mov
inc
fsub
scas
sub
orb
pop
rolb
mov
outsl
fldl
inc
cmp
ja
cmc
lea
push
adc
mov
or
sbbb
mov
dec
inc
push
mov
push
sbb
test
sub
popl
push
push
mov
add
mov
mov
test
inc
fimuls
aam
fcoms
or
cmp
cmp
fdivrl
or
lea
push
pop
hlt
or
pusha
push
xor
push
mov
fmull
int
mov
repnz
sub
and
sub
gs
cmpsb
mov
ret
ficoml
or
fisubs
xor
jo
mov
rorl
fadd
xchg
mov
rcrl
outsb
sbb
ss
pushf
xor
mov
leave
popa
mov
test
cmp
adc
add
sarb
in
loop
xor
stos
mov
lcall
mov
adc
dec
mov
shrb
jnp
add
test
inc
push
xchg
ret
mov
decb
lea
xlat
js
outsl
sbb
sub
mov
in
fcmovb
pop
dec
adc
shrl
sbb
fnsave
xor
outsb
and
test
mov
arpl
push
add
adcl
subb
pop
das
adc
je
jmp
mov
mov
and
jmp
mov
or
ja
pop
fldenv
lea
adc
lea
rcrl
leave
std
popl
pop
mov
cmp
inc
sti
lds
loopne
lods
xchg
leave
insb
das
cmp
or
inc
insl
inc
out
cld
sbb
cwtl
repz
jl
dec
jae
scas
inc
mov
ss
fstp
outsb
aaa
loope
jbe
mov
nop
inc
inc
add
stos
mov
pop
fwait
mov
mov
dec
xor
lods
dec
inc
ds
mov
stos
or
in
inc
das
cld
outsl
in
sub
or
aam
pop
and
arpl
mov
xchg
je
ss
pop
in
cmp
mov
jbe
fdivrs
rorl
stc
push
jno
add
cmp
push
movsl
mov
mov
jl
or
push
js
add
mov
das
lds
das
insl
jge
mov
or
mov
movsb
ficompl
mov
add
lds
or
adc
dec
testb
jne
fnsave
xchg
lock
fdivrs
jecxz
cmp
dec
push
or
in
mov
fs
push
pop
pop
xor
jne
outsl
xor
cmpsb
orb
jmp
ss
popa
mov
jmp
mov
pop
add
mov
add
mov
mov
repz
sbb
mov
movsl
xor
xlat
dec
xchg
inc
in
ljmp
enter
ret
outsl
and
xor
push
les
mov
sbb
test
daa
sub
lds
loop
fcompl
shll
lret
add
mov
jne
and
in
pop
or
xchg
dec
sub
stos
int
shrb
inc
xor
and
jbe
add
push
in
pop
adc
roll
outsl
xlat
adc
shlb
mov
fsubs
test
faddl
jnp
add
mov
sub
mov
mov
addl
jne
or
add
hlt
mov
inc
out
into
inc
dec
pop
mov
mov
push
aaa
dec
scas
push
mov
add
xchg
out
cmc
iret
faddl
mov
mov
vpmaddwd
paddw
jne
push
ret
fdivr
and
push
pusha
mov
xor
shl
test
outsl
adc
push
fmulp
dec
int
or
mov
mov
push
daa
mov
mov
adc
fwait
adc
pop
and
jbe
xor
xlat
pop
push
insb
adc
pop
jl
lock
ret
gs
inc
mov
xor
cmc
mov
inc
push
inc
pop
jbe
pop
popa
scas
sti
cmp
pop
and
adc
lret
sbb
mov
mov
xchg
aam
jl
into
add
jae
sti
push
jg
adc
hlt
jne
ja
sbb
je
and
add
je
fldenv
inc
jg
jbe
imull
dec
xchg
add
cld
jge
nop
stc
aad
data16
clc
sbb
movb
aam
hlt
daa
inc
popf
jne
adcl
in
push
fildl
cld
in
jns
lret
jp
inc
xchg
adc
push
sbb
shll
outsb
or
clc
push
sbb
imul
jecxz
xchg
jp
dec
jo
push
mov
cmp
ret
cs
aaa
or
push
push
and
mov
sbb
or
add
sbb
inc
in
or
loop
dec
clc
pop
push
mov
adc
pushf
gs
xor
xor
xor
sbb
int
stos
add
aam
stos
test
in
sbb
xor
and
xchg
movsl
shrl
sub
call
cmp
jne
jne
std
cmp
incl
mov
add
pop
movsl
add
add
sbb
loopne
outsl
out
shr
in
arpl
jecxz
ret
cmp
mov
dec
loopne
mov
push
xor
jns
pop
or
pop
popa
loope
insl
jb
inc
or
out
stos
inc
stos
add
jo
push
jbe
jmp
mov
inc
adc
push
sarl
in
lods
push
cmp
call
cmpsl
data16
xchg
fs
pop
push
lea
push
cld
shr
mov
push
add
in
sbb
fistpl
jl
inc
adc
mov
clc
push
sbb
xor
sbb
addb
rcrl
mov
push
inc
push
xchg
add
inc
sbbb
sbb
inc
xchg
push
push
inc
jne
or
sub
push
push
or
mov
out
dec
push
stc
sbb
je
cmc
mov
inc
xchg
sbb
data16
push
or
cld
add
add
jb
mov
cmpsl
daa
jns
mov
fcmove
inc
mov
std
inc
and
push
out
jmp
orl
das
or
cmp
fs
push
ljmp
flds
jle
jle
in
jne
inc
push
loope
mov
push
divl
xchg
out
ds
push
and
sbb
pushf
loope
cmp
das
jmpw
pop
xor
int
ljmp
enter
adc
jb
jnp
or
in
pop
sbb
stc
movb
pop
in
pop
jle
sahf
add
mov
push
ds
xlat
or
jbe
xchg
push
pop
outsl
mov
lea
dec
jnp
clc
ret
or
jecxz
sbb
xchg
hlt
out
push
call
mov
adc
cmp
mov
jbe
mov
jae
inc
jp
jg
cmpl
xchg
cmp
dec
loop
jo
bound
mov
add
add
jae
call
movb
outsl
outsl
testl
sub
movntps
outsb
xchg
mov
lods
shr
push
xchg
shll
cli
xor
jbe
or
sahf
negb
in
cltd
sbb
aaa
inc
leave
and
jmp
jecxz
test
jnp
sbb
loopne
add
inc
out
popf
inc
sbb
movsl
scas
mov
add
lcall
lcall
ficomps
lods
insb
or
in
cmp
cmp
ret
or
ret
in
push
ret
pop
add
sarl
and
pop
push
les
cmpsb
mov
push
mov
enter
ret
popa
imul
cmc
inc
lea
out
femms
int3
mov
xchg
loop
mov
ficomps
jnp
fisubs
filds
or
add
ret
and
imul
inc
cmp
popa
ret
mov
fcompl
jne
sbb
pop
or
insb
sub
cmpsb
pop
and
adc
call
lcall
test
in
xchg
ret
push
sub
mov
push
add
pusha
inc
pop
inc
lods
and
insl
jnp
pop
aaa
das
repz
mov
push
arpl
sbb
out
cmp
icebp
lock
jo
dec
and
lss
outsb
jo
mov
scas
jno
dec
jae
mov
mov
in
aad
push
add
jge
unpckhps
sti
fcmovb
xchg
ret
mov
and
push
arpl
adc
movsl
fucomp
add
sub
fimuls
inc
inc
xorl
mov
adc
mov
dec
lret
xchg
pop
mov
les
jno
add
mov
pop
outsl
mov
push
jb
push
inc
std
sahf
inc
fstpl
icebp
and
push
inc
adc
je
fisubs
xchg
and
mov
xor
hlt
jbe
outsb
inc
pop
addr16
dec
sub
ds
adcl
ss
loop
push
mov
sbb
rol
lea
jno
loop
imulb
data16
and
outsl
loope
dec
add
dec
lods
jl
fistps
xchg
movl
inc
aas
lret
ud1
pop
imul
mov
mov
push
or
aad
cmp
jbe
loop
sahf
mov
imul
xchg
push
sub
sbb
push
mov
mov
mov
enter
xchg
shll
roll
sbb
dec
mov
dec
imul
pusha
sti
ret
and
gs
push
pop
rcll
mov
jecxz
pop
call
push
sub
mov
fbstp
icebp
mov
leave
shrb
fcompl
push
test
xor
mov
add
cmp
jne
sub
inc
mov
pop
mov
mov
movb
mov
mov
fucomi
cld
stos
add
fldenv
lods
mov
adc
rcr
xor
clc
rol
hlt
lds
jb
pop
push
jl
adc
ss
es
lock
lcall
push
shll
cld
pop
jmp
ret
xchg
leave
jmp
cmp
mov
mov
and
daa
dec
add
sbb
xor
push
repz
iret
mov
mov
icebp
lods
andb
pop
pop
bound
and
mov
cmp
mov
rcr
test
repnz
addr16
sti
sti
mov
mov
sub
mov
mov
jbe
or
xchg
into
adc
jbe
mov
pop
jno
mov
push
outsl
clc
mov
daa
dec
insl
cltd
fnsave
loopne
std
nop
jbe
sub
push
outsb
call
add
adc
xchg
movsb
mov
loope
dec
pop
inc
notl
inc
loope
pop
fdivr
je
mov
dec
lahf
inc
ds
pop
xchg
add
mov
or
out
and
sahf
cwtl
add
sbbl
sbb
pop
sub
jmp
cmp
jp
push
xor
mov
adc
push
xor
adc
sbb
sbb
mov
sbb
jno
sti
mov
mov
and
and
xchg
insb
sahf
mov
adcb
jae
sbb
popa
int3
xlat
pusha
mov
mov
sti
add
pop
cmp
lea
mov
dec
mov
je
loop
test
popf
push
sbb
lock
xchg
jp
mov
mov
fbld
test
shr
inc
mov
cltd
fs
ss
in
xor
rcll
fcomps
sbb
or
or
cmp
and
sbb
jge
inc
insb
loop
ljmp
jne
pushf
xchg
pop
mov
mov
adc
ret
insb
outsl
test
pop
punpckhbw
testl
out
addr16
sub
out
sub
rcll
add
push
rorl
xchg
mov
lret
and
and
sub
push
sbb
rolb
xchg
ret
jbe
mov
fdiv
or
sbb
fstpt
pop
faddl
and
pop
pop
ljmp
insb
push
jae
loopne
das
andl
dec
pop
cmpsb
ror
sti
dec
aas
cwtl
sub
fldenv
jmp
cmp
and
outsb
outsl
cmp
mov
out
aad
push
mov
jne
ret
mov
add
push
call
cmp
aaa
adc
rcl
add
cmp
or
int
push
sbb
out
inc
lds
push
or
push
std
dec
out
popa
in
sub
je
mov
inc
and
jp
push
xor
adc
jg
rclb
es
xchg
es
mov
xor
pop
sub
scas
dec
add
and
pushl
cli
aad
add
sub
in
mov
decb
sub
inc
stc
xchg
sub
push
or
push
mov
mov
scas
sti
sub
mov
mov
jmp
ret
jge
add
mov
mov
cmp
ret
jbe
sbb
cmp
push
rorb
outsl
jno
adc
data16
jl
fsubp
xchg
adc
xor
nop
inc
cmpsl
jp
test
jmp
pop
inc
or
lcall
jo
inc
add
int3
es
mov
pop
xlat
decb
test
call
mov
mov
bound
mov
fildl
dec
inc
aam
jmp
pop
scas
fcoms
repz
adc
rolb
in
dec
mov
lods
pop
inc
fadds
and
or
add
mov
jp
stos
add
fstl
xlat
lds
dec
xor
arpl
fbstp
shll
add
repnz
push
mov
mov
mov
cld
and
cmp
xchg
add
shrb
xlat
test
out
call
push
or
add
frstor
xchg
bound
or
adc
pop
pop
sti
mov
ss
push
mov
pop
out
mov
rolb
add
aas
out
mov
cltd
or
mov
xor
imul
test
decb
mov
fs
std
cmp
mov
push
mov
cmp
jge
push
lret
aaa
cmp
pop
jge
ljmp
stos
push
outsl
aaa
mov
js
add
outsb
aad
adc
outsb
test
push
in
lahf
add
adc
mov
mov
pop
out
lcall
insb
les
fcoml
and
mov
je
add
lcall
into
xor
adc
pop
fsubrl
sahf
mov
or
push
sbb
jbe
fnsave
or
and
inc
adc
mov
rcr
addr16
mov
es
ja
jne
decl
mov
enter
fadd
lea
stos
insb
push
arpl
add
push
sub
fadd
add
dec
xor
jo
in
dec
pop
pop
decl
or
mov
bound
aaa
adcb
vphadduwd
into
popa
lods
pusha
adc
js
push
jge,pn
mov
ret
cmp
mov
lods
xchg
sbb
adcl
pop
shlb
mov
sbb
lahf
int
shll
fistpll
jl
mov
mov
xlat
sbb
mov
sbb
adc
sbb
out
adc
mov
ss
imul
pop
dec
aad
fs
push
bound
aaa
mov
aaa
push
mov
insl
mov
cmp
pusha
ljmp
lock
adc
insb
into
xor
aad
fcomps
test
fists
jne
orl
xchg
adc
lea
mov
cmp
icebp
inc
inc
pop
test
push
mov
cmpl
je
jge
xchg
mov
pop
or
mov
pop
je
callw
divb
sub
mov
pushf
shrb
rcrb
jecxz
iret
mov
es
xor
push
les
xchg
cld
fcmovnbe
and
mov
adc
or
iret
sbb
sbbb
in
mov
sbb
add
dec
inc
or
mov
dec
xor
or
cld
test
mov
and
push
mov
lock
push
inc
push
sub
mov
in
addl
xchg
loopne
bound
mov
test
lret
sbb
cmp
nop
cmp
pop
and
fstl
aam
mov
loope
dec
jg
aad
aad
push
and
ja
outsb
or
je
cmc
je
pop
div
add
pop
add
or
lock
mov
addr16
push
lods
adc
scas
imul
gs
xchg
mov
sbb
outsl
lds
or
ficompl
adc
and
mov
add
mov
sbb
aad
fildl
cltd
add
add
nop
out
orl
shll
loope
insb
mov
popa
incl
add
adc
adc
mov
aaa
insb
push
adc
aad
or
ljmp
adc
loope
xchg
fstpl
mov
popf
add
cs
mov
fidivrl
sbb
push
xor
mov
dec
and
aaa
sbb
in
fisubrl
dec
xchg
or
outsl
xchg
lods
cmp
xor
or
sub
push
rcll
mov
add
loopne
stc
mov
push
inc
dec
add
mov
mov
sub
jmp
mov
cmp
cs
cmpsl
push
js
or
mov
pop
sbb
push
xlat
insb
movsl
push
pop
mov
in
xchg
push
mov
and
sahf
fdivs
pop
or
lds
rolb
mov
mov
pop
mov
pop
and
and
scas
mov
sbb
fmull
je
xchg
inc
cmp
cmpb
mov
push
cmp
rclb
add
mov
push
mov
add
mov
sub
cs
jno
stos
fsubrs
mov
jp
mov
xchg
gs
and
cmp
dec
fadds
lds
sti
mov
dec
cmp
pushf
inc
gs
std
stos
adc
fwait
inc
loopne
jo
adc
add
pop
xor
insb
lock
cmpsl
daa
xor
popf
inc
xchg
add
jno
daa
scas
or
out
cmp
mov
sbb
lcall
and
movsb
fcmovnb
jbe
xchg
mov
mov
cmpsl
xor
cli
push
mov
xor
fcomps
jne
and
push
xchg
loope
outsl
xor
ja
push
and
leave
mov
cmp
lret
cmp
es
aaa
and
mov
sub
pusha
cmpsb
sub
outsb
insb
arpl
test
les
popa
aad
mov
fwait
pop
adc
inc
fs
in
loopne
mov
dec
xchg
pop
or
cmpsb
inc
lock
mov
in
in
rol
cmpsl
std
in
orl
jnp
sahf
or
les
fcomp
inc
fmuls
js
cltd
dec
adc
mov
aaa
daa
fimuls
mov
fidivrl
enter
cmp
xlat
push
ficoml
stos
sub
mov
fildll
fistpll
adc
pop
in
loop
jb
mov
mov
jo
fisttps
mov
fsts
cmpsb
push
fildll
push
mov
fldl
adc
adc
sarb
pop
addb
fucomp
mov
popa
mov
lea
pop
int
xorb
pop
pop
orb
pop
loop
mov
or
push
push
fdivr
clc
rorl
jbe
rol
push
or
insl
adc
cwtl
push
movsl
clc
push
loop
jns
jo
mov
fstpl
pop
jnp
mov
push
aam
mov
arpl
arpl
je,pt
stos
je
test
lock
xchg
shlb
mov
gs
aaa
mov
test
cli
pop
insl
das
mov
push
decl
xchg
and
or
andb
mov
push
mov
add
push
dec
add
or
lock
ret
dec
daa
ret
rol
les
inc
pop
ds
out
stc
or
or
sbb
data16
pop
js
clc
push
xlat
pop
in
je
dec
icebp
dec
test
cmp
cmc
fbld
insb
push
or
cmpsl
aaa
sahf
shlb
neg
imul
mov
imul
movsl
orl
imul
cs
jle
mov
mov
loop,pn
jl
sub
scas
sbb
aaa
sbb
fdivr
or
loop
decl
mov
jmp
ss
push
insl
fildll
ret
inc
rorb
mov
cmc
jg
fnclex
mov
pop
xor
cvtps2pd
xchg
inc
mov
leave
push
sahf
add
cmpl
xor
or
jmp
inc
sbb
push
xchg
xor
dec
jo
jl
jno
mov
mov
daa
push
dec
jl
cltd
adc
mov
lret
push
aaa
insl
imul
cmp
jge
lods
bound
pop
outsb
adc
push
shlb
stos
xor
push
ret
mov
mov
cs
sub
imul
pop
daa
and
enter
xchg
cli
jle
ds
push
inc
fsts
or
daa
lea
cli
mov
jmp
sbb
adc
int
inc
add
test
fcompl
sub
pop
xchg
mov
mov
cld
movsb
ret
ja
sbb
mov
data16
push
mov
cmp
neg
repz
push
mov
push
cmp
inc
jl
imul
lods
ret
ljmp
or
call
pop
jle
mov
ljmp
leave
aaa
jl
hlt
je
insl
fs
dec
insb
sub
jns
in
stc
das
cmp
inc
ljmp
sbb
movsl
mov
rcll
nop
imul
gs
mov
sbb
inc
pop
jl
fistl
cmp
mov
nop
sbb
lret
fildll
out
mov
cs
fsubs
sbb
pop
jo
loopne
shrl
imul
mov
xchg
arpl
arpl
scas
pop
cmp
mov
or
mov
ss
pop
xor
sbb
cltd
cmp
pop
mov
test
scas
stc
mov
push
ficomps
clc
fwait
addr16
add
jb
mov
dec
or
les
ret
inc
insl
fcomp
lret
pop
push
ljmp
and
adc
int3
adc
cmp
and
xor
and
mov
jl
outsl
add
fiaddl
or
pop
pop
test
ss
test
mov
sub
out
pop
mov
scas
ficoml
mov
clc
adc
jp
not
push
call
je
dec
stos
es
jns
cmpsl
mov
repnz
fildl
jno
aad
mov
inc
in
jne
aas
jne
cmp
adc
in
lret
add
hlt
rcrb
xchg
ds
adc
outsl
dec
mov
sbb
mov
rcr
sbbb
jle
cmp
jp
cmp
dec
fcmovu
mov
inc
or
sbb
ret
inc
lock
paddusb
shll
push
cmp
out
adc
mov
and
out
or
cmp
movsbl
lds
sub
push
mov
test
mov
in
mov
loope
ss
xchg
pop
add
pop
xlat
push
popa
rcll
fiaddl
jnp
push
ljmp
test
jl
pmulhuw
push
cmp
fisubrl
pop
dec
jnp
sbb
adc
push
jae
shrl
lcall
popf
pop
outsb
mov
dec
mov
adc
pop
sub
push
and
xor
mov
leave
inc
inc
in
push
dec
dec
int
addps
xor
inc
mov
or
call
cltd
lods
test
das
cld
jo
imul
cmp
lcall
pop
mov
or
adc
mov
mov
cld
jge
rcl
std
das
add
loopne
ret
pop
shll
addb
xor
imul
push
daa
in
jno
shll
add
sbb
test
adc
pop
shl
and
add
inc
xor
cli
data16
ss
lods
dec
pushl
pushf
in
or
xor
jbe
add
cs
pop
pushf
jb
aam
cmpsb
iret
aad
mov
aas
gs
pop
cwtl
popa
and
pop
jg
rorl
cwtl
mov
ficoml
loop
add
je
add
push
pop
cli
testb
sbb
aam
sub
pusha
xor
xor
mov
sbb
inc
ret
lcall
cmp
arpl
mov
movsb
data16
js
inc
xor
bound
lcall
jecxz
movsl
popa
and
outsl
comiss
bound
dec
and
ljmp
jmp
jmp
idiv
clc
xor
popa
stc
xchg
lds
nop
pop
and
xor
lods
loope
dec
fwait
pop
push
mov
cmp
out
jecxz
lea
fidivrl
fdivrl
jge
push
fisttpl
mov
inc
loope
adc
sarb
inc
icebp
scas
and
into
and
inc
pop
pop
xor
add
xchg
push
cmp
add
jecxz
xchg
stos
sbb
rol
or
lret
push
fdivl
inc
sub
add
push
fsubrl
leave
add
jl
mov
and
xor
mull
arpl
push
adc
adc
pop
sarb
clc
lods
popa
cmp
add
aam
aaa
cmp
mov
push
pop
lcall
cmp
insb
insl
ret
mov
jae
arpl
and
or
and
aaa
outsb
insl
or
mov
mov
push
test
cmc
jp
insl
jge
out
pop
sbb
or
pop
mov
pop
addr16
nop
or
fstpt
push
incl
adc
hlt
mov
test
inc
out
mov
ss
lret
dec
jnp
ret
mov
mov
mov
popa
add
push
inc
mov
cmp
pop
fs
mov
dec
call
imul
test
lock
js
jne
fdivl
mov
sti
jo
jb
mov
push
dec
fs
lods
fwait
add
cwtl
pop
add
adcl
hlt
push
jns
xor
mov
addb
and
nop
mov
ret
jmp
leave
pop
sub
les
lret
add
aas
or
pop
in
add
loop
outsb
add
pop
mov
jge
or
pop
xlat
sbbl
mov
inc
in
xor
dec
mov
cmpsl
cmpb
inc
cmp
sub
pop
sbb
dec
xor
scas
stos
lret
sbb
loopne
aas
xlat
jb
pop
push
push
mov
hlt
rcrl
push
rorl
adc
std
in
lods
daa
jge
dec
dec
pop
add
inc
mov
jmp
inc
movsb
pop
inc
mov
cmp
pop
mov
xor
push
sbb
stc
cmp
pop
repnz
jnp
push
out
stos
lods
xchg
ret
hlt
rcrb
cmpb
in
ficoms
mov
pop
ljmp
adc
or
int
mov
and
outsb
outsl
pop
inc
push
test
sbb
or
push
jbe
mov
test
push
adc
sub
xchg
mov
inc
test
inc
inc
pop
loope
out
aam
mov
sbb
pop
mov
adc
int3
repnz
sub
fdivp
jmp
mov
jne
loopne
aam
sub
iret
pop
mov
fnsave
push
js
adc
inc
mov
sbb
test
or
daa
fisttpl
inc
xchg
sub
fcmovnbe
jbe
inc
lds
cld
pop
jno
into
add
test
mov
nop
push
stos
add
insb
add
imul
cmc
addb
clc
outsb
leave
push
stc
mov
leave
fldcw
enter
incl
add
pop
jmp
mov
inc
mov
inc
shlb
lcall
lcall
mov
scas
and
or
pushf
add
mov
cmp
push
call
mov
notb
std
scas
lods
fsubrl
sub
shlb
hlt
sbb
int
lret
add
jno
mov
dec
std
popf
loopne
cmpsl
lods
xchg
jl
jnp
adc
fcomps
or
inc
pop
orb
cmp
rcl
add
or
repnz
icebp
pop
mov
mov
xor
mov
dec
lock
fdivs
mov
sarl
pusha
filds
les
adc
lret
shrl
push
mov
cmpsl
mov
mov
dec
pop
and
mov
mov
fcmovnbe
pop
mov
mov
jno
mov
or
push
or
jne
cmp
push
fidivrs
jmp
mov
cwtl
xchg
lea
adc
adc
aaa
mov
pop
shll
scas
scas
or
xchg
loop
int
or
mov
xchg
add
das
mov
insl
loope
adc
dec
add
add
das
hlt
lods
inc
jo
ljmp
insb
push
clc
cmp
mov
fs
add
loope
xchg
add
rcr
dec
mov
sub
hlt
repnz
fsts
mov
inc
mov
dec
push
cmp
shlb
insl
xor
and
js
dec
and
test
divb
addr16
inc
cmp
mov
xlat
mov
or
push
xchg
jg
dec
mov
cli
xchg
orb
mov
add
push
inc
pusha
ljmp
xchg
and
fsubrp
jle
jle
fiaddl
push
ret
sbb
xor
jp
cmpb
mov
mov
shl
inc
jmp
nop
outsl
daa
fldt
mov
xchg
pop
sub
aam
mov
shrb
mov
jnp
push
inc
cli
mov
out
js
mov
mov
adc
test
fimull
cmp
insb
in
push
xchg
pop
pop
mov
sub
outsl
mov
add
ficoml
xor
or
notl
loope
xchg
adc
jo
sti
popf
pop
mov
out
mov
lea
mov
je
inc
js
fwait
mulb
outsl
bound
insb
sbb
sub
mov
sbb
xor
jns
das
in
loopne
call
inc
add
mov
fstpl
repnz
cmp
lcall
cld
int
mov
and
hlt
adc
push
lahf
cmp
adc
adc
cmp
js
pop
xor
jo
or
dec
cmp
jno
adc
add
scas
mov
shl
fs
stos
and
ret
push
push
aam
loope
in
pop
aas
sbbl
push
mov
ret
in
mov
push
xor
or
out
and
dec
cli
rcrl
xlat
fisttps
orb
mov
pop
out
adc
sub
enter
cwtl
dec
insb
pop
stos
or
loopne
push
or
fidivl
mov
xlat
push
outsb
pop
add
pop
cmpsb
lods
add
adc
xor
jne
mov
clc
test
push
fwait
pop
adc
roll
sbb
inc
data16
sbbl
fdivl
mov
shlb
lds
xchg
mov
cmpsl
ret
sub
pop
fsts
je
test
mov
movsl
or
rolb
and
dec
loopne
pop
clc
dec
push
mov
sub
sub
fldcw
jl
add
aad
sub
or
xor
mov
cmpsb
pop
cmp
inc
sbb
fisubl
mov
imul
ljmp
xor
inc
pop
je
outsl
ds
iret
fsubrs
insb
add
les
sbb
loope
in
es
js
xchg
dec
lods
loop
fcomp
cmc
inc
and
insb
test
stc
mov
sbbl
sar
cmp
cmp
add
xor
cld
les
rorl
dec
pop
push
xchg
es
or
int3
lret
xor
cmp
out
sahf
es
sub
js
in
rcr
outsb
cmc
das
in
cmpsl
dec
icebp
or
pushl
movsl
add
rcrl
loope
sub
fstpl
enter
adc
add
add
clc
mov
push
xchg
ljmp
dec
aaa
mov
pop
in
es
sub
fidivrs
test
jbe
pop
jge
sahf
pop
xchg
repnz
mov
add
sbb
pop
pushf
mov
cmc
push
jae
or
and
es
dec
xchg
leave
fnsave
dec
aam
lods
push
inc
xchg
xor
shll
jecxz
imul
push
pop
adc
or
push
sbb
xchg
pop
cmp
jmp
mov
mov
fdivr
ljmp
or
js
ljmp
sahf
pop
pop
jge
aaa
xor
fstpl
fcmove
and
xor
push
pop
aaa
sub
shrw
sbbb
cld
add
push
outsb
push
daa
leave
lret
dec
dec
jnp
outsl
adc
and
add
ret
js
stos
das
ficoms
ds
and
cmc
cs
popa
jg
rorb
pop
scas
repnz
fcoml
pop
cmc
xchg
loope
mov
lea
mov
push
lock
and
dec
xor
pop
outsb
sbb
cltd
mov
inc
add
jbe
add
test
cmp
insb
call
fldenv
lds
sub
leave
sahf
cltd
and
shll
fs
testb
ljmp
fsubrs
dec
arpl
jmp
mov
add
mov
popf
push
roll
inc
mov
cmovo
je
fistpl
dec
inc
js
out
or
mov
out
pop
testl
hlt
fldl
sbb
ret
out
cmp
adcl
pop
add
mov
sbb
js
neg
and
mov
lea
pop
xor
ret
push
insl
mov
enter
mov
bound
pop
pop
adc
sahf
adc
sub
push
hlt
aaa
sub
movsb
jne
scas
pop
jp
mov
repz
ss
xchg
mov
filds
movb
aaa
leave
jl
xchg
fstpt
sar
jl
inc
push
mov
add
inc
insl
roll
inc
sti
adc
cmp
sub
mov
stos
fs
sbb
xchg
pop
mov
adc
add
hlt
shlb
push
and
add
mov
mov
sbb
adc
cmp
cs
jmp
push
shll
lods
and
mov
movl
inc
jns
int
xor
and
sbb
repz
push
cs
iret
jp
mov
js
cmpb
fs
pop
adc
mov
faddl
pop
pushl
loopne
push
jb
xchg
and
insb
call
fsubrs
inc
leave
sti
pop
lds
scas
jmp
dec
dec
fistpl
movsl
xchg
gs
lock
imul
mov
ret
pop
jecxz
push
shll
fildl
mov
bnd
bswap
mov
call
and
add
cmpl
fidivrs
mov
mov
in
dec
or
adc
inc
decb
mov
addl
dec
js
imul
ficompl
jge
int
add
adc
sbb
clc
test
pop
test
jbe
mov
movsl
push
arpl
outsl
ljmp
lods
popf
das
inc
or
push
outsl
stos
sub
ja
hlt
sbb
mov
inc
or
mov
stc
and
inc
mov
mov
add
push
mov
xor
sahf
push
push
pop
xchg
cwtl
sbb
fldl
mov
stos
or
ljmp
dec
in
mov
pop
fs
mov
xchg
outsl
aam
inc
mov
sub
sub
psubusb
xchg
cld
pop
daa
sbb
es
and
aam
push
push
adc
out
outsb
jbe
and
pop
js
bound
push
rcl
lcall
inc
jne
fisttpl
test
jle
das
jbe
stos
mov
or
mov
and
cmc
jnp
nop
call
inc
in
mov
subl
mov
jge
pop
jae
sbb
jg
mov
dec
xchg
add
add
pop
mov
rclb
addr16
jne
in
add
pop
fwait
mov
sbb
repz
in
mov
xor
das
dec
jns
addb
mov
movsb
addl
mov
adc
and
jg
mov
pop
rorb
clc
fcmovnbe
scas
addb
pop
subb
and
leave
pop
lret
loope
mov
aaa
adcl
orb
bound
addr16
pop
les
or
cmp
or
rep
add
mov
in
cld
in
pop
dec
dec
pop
adc
jg
repz
out
adc
pop
cs
cld
add
or
icebp
rolb
sbb
fiaddl
neg
mov
jmp
imul
sub
xchg
add
mov
mov
adc
imul
dec
hlt
xor
dec
sahf
push
pop
mov
cmp
outsb
mov
inc
ljmp
movsl
jbe
clc
sub
loope
rorl
push
add
das
jbe
mov
call
das
hlt
fldenv
jp
fwait
aam
mov
jae
cld
call
or
lds
aam
mov
bound
mov
push
dec
and
jmp
adc
pop
and
orl
xchg
jns
mov
in
adc
mov
push
pop
es
sahf
adc
add
push
or
sahf
pop
mov
insb
insl
sub
in
outsb
lods
mulb
mov
sub
sub
push
scas
out
pusha
ror
push
xor
xchg
into
pusha
lock
or
outsb
loopne
je
mov
cmc
push
mov
sbb
std
addl
aam
andb
pop
addl
fsub
call
push
push
add
fisubrl
adc
xchg
mov
lds
dec
inc
cmp
das
addr16
outsb
int3
cli
orl
je
mov
sub
outsb
pushf
movsl
scas
or
nop
jmp
imul
mov
xor
fcompl
mov
dec
jbe
sub
xchg
das
jl
cmp
or
xchg
inc
jl
pop
cli
ficoms
decl
xor
hlt
sub
adc
cs
mov
sbb
arpl
das
outsb
pusha
mov
and
out
mov
jb
fwait
aaa
mov
shll
mov
pop
mov
cli
lods
stc
sbb
lods
mov
or
cmpsb
mov
push
cmp
shlb
rcrb
clc
ja
loope
mov
mov
jmp
xchg
test
jmp
lds
or
jno
test
jecxz
pop
lock
or
mov
les
adc
outsl
invd
pop
jecxz
dec
mov
mov
xor
push
ss
mov
aaa
lea
pop
add
arpl
or
xor
add
dec
popa
xchg
stc
ss
shrb
orb
pinsrw
iret
cld
fnstsw
sbb
sar
and
xor
sbb
and
cmc
inc
jge
sub
ljmp
pop
aas
mov
xchg
cmp
cld
shll
mov
sti
insl
pop
xor
sub
lods
or
call
cmc
testb
stos
add
test
adc
test
add
in
mov
cmp
mov
daa
inc
mov
pop
test
mov
jl
adc
rorb
enter
and
adc
and
add
sub
adc
scas
jecxz
jp
push
imul
jnp
push
dec
xor
push
add
pop
cmp
xchg
inc
orb
mov
pop
cwtl
imul
arpl
sbb
aas
shr
rclb
mov
push
or
pop
push
jge
fcmovb
push
mov
add
outsl
in
pop
or
fistps
mov
mov
pop
shlb
pop
dec
add
call
mov
push
incl
arpl
dec
cmp
and
mov
xchg
xorl
mov
mov
movsl
pop
or
jl
int3
or
sbbb
enter
xchg
pop
inc
push
add
xlat
pop
mov
xor
inc
pop
xor
push
push
shlb
pushf
out
clc
notb
inc
cmp
fidivs
movsl
fcomps
js
mov
sbb
push
mull
cmpb
xchg
dec
inc
push
test
pop
pop
jae
sub
or
adc
lea
adc
adc
xor
push
aas
pop
cli
sbbl
inc
out
xor
push
xchg
dec
addr16
outsb
or
scas
roll
hlt
sub
and
or
lock
jb
jecxz
repnz
mov
ja
mov
fsubs
mov
in
cli
ret
dec
jl
je
fstps
mov
inc
scas
sub
add
sub
lods
cli
xadd
frstor
rcrb
adc
xchg
enter
mov
int
pop
adc
sbb
test
call
add
iret
mov
xor
sti
inc
pop
adc
dec
inc
les
add
jge,pn
js
xchg
cmp
cmp
imul
stos
ret
mov
adc
or
jo
add
loop
adcb
out
lahf
adc
mov
mov
and
scas
mov
mov
cs
mov
xchg
sub
call
pusha
insb
push
or
inc
rcrl
sbb
xchg
mov
das
dec
inc
or
mov
jno
inc
mov
add
imull
insl
stos
jge
cmp
sti
mov
sub
mov
push
xor
xor
ljmp
dec
divb
dec
jmp
lods
cmpsb
hlt
icebp
and
xor
push
mov
mov
js
sbb
jle
jne
pop
xor
lock
and
cmpsb
filds
andl
xor
lea
not
mov
call
in
xor
xlat
pop
imul
push
dec
lea
mov
outsb
pop
xor
sbb
mov
dec
xchg
repz
fidivs
scas
jae
add
es
shr
mov
out
lret
pop
out
dec
push
loop
mov
xchg
ss
in
dec
lahf
or
jl
xor
pop
sbb
clc
test
decl
push
dec
lds
push
test
xor
mov
call
cmpsl
gs
dec
and
push
push
add
es
xchg
cs
sbb
sub
scas
orl
shlb
outsb
pmuludq
sub
decb
les
jo
dec
test
in
inc
mov
cmpsb
sub
push
or
ss
call
rcrl
ljmp
xchg
sbb
pop
aam
je
jmp
loope
enter
ficoms
xor
icebp
sub
shll
xorl
jbe
int3
adc
cmpb
repz
jle
inc
inc
int3
mov
in
mov
jg
xchg
call
pop
mov
clc
jbe
or
subb
mov
jmp
jno
sbb
jp
xorl
and
lret
call
rorb
and
jmp
test
cmc
enter
mov
or
mov
adc
insl
insl
push
cltd
into
pushl
mov
pop
mov
jne
cmp
jl
into
pushf
or
adc
jp
pop
sbb
aam
inc
inc
bound
into
jns
pop
jecxz
cmpsb
adcb
add
lds
xchg
outsb
aam
call
and
push
lock
divl
xchg
adc
std
into
sahf
loopne
cs
sti
adc
sahf
push
pop
adc
add
fbld
rorl
dec
xchg
sar
out
mov
or
xor
pop
aas
movsl
inc
push
jne
inc
rcrb
cmp
mov
mov
aas
push
cmp
xor
pop
adc
xor
mov
sub
mov
sbb
fisttps
mov
test
test
mov
pop
dec
aaa
sub
lret
push
adc
sub
inc
ret
jb
stos
push
lods
jns
decb
or
lods
adc
fwait
sbb
aaa
imul
jbe
dec
fwait
jbe
fidivrs
mov
mov
add
mov
sub
xchg
mov
out
or
test
sbbb
testb
pop
xchg
mov
int3
aad
xor
pop
mov
in
fisttpl
push
mov
push
fidivl
or
mov
or
mov
das
cltd
add
mov
or
pop
ss
sub
mov
cs
enter
push
fldt
js
nop
jae
dec
fdivrl
pop
and
out
push
jnp
leave
add
mov
nop
dec
adc
mov
and
setbe
lods
jmp
mov
xchg
adc
push
insb
push
test
fadd
inc
xchg
cmp
push
arpl
dec
orl
xchg
push
outsl
rol
dec
xlat
xchg
pop
sbb
loopne
mov
mov
mov
pop
mov
mov
push
sbb
cmpl
mov
add
in
movsl
mov
sbb
jne
ljmp
ljmp
mov
add
pusha
jl
shl
scas
push
mov
pop
movsb
xchg
movsb
xchg
imul
pop
pushf
loope
mov
fstpl
out
add
cmc
outsb
ja
push
adc
jp
pop
xchg
xlat
and
mov
andl
add
pop
jle
mov
pop
rorl
insb
xchg
jne
loopne
jmp
sub
repnz
sub
inc
fstpt
pop
repnz
sub
xchg
xorb
pop
mov
dec
pop
call
decl
fiaddl
mov
mov
ss
adc
dec
fdivs
movsb
lcall
hlt
movsb
xor
adc
inc
ret
idiv
std
aaa
daa
and
pop
lret
jns
mov
shr
outsb
fidivs
mov
gs
lods
pop
test
popl
in
lea
fsubrs
rclb
mov
test
fninit
pusha
pop
dec
dec
das
das
aam
shrb
xor
aaa
fcmovne
adcb
inc
sbb
cmp
add
fs
push
jbe
imul
add
push
cli
stos
add
pop
loope
jns
loopne
ljmp
je
in
mov
mov
fs
mov
push
js
xchg
mov
sbb
xor
mov
sbbb
jle
inc
mov
cmp
xchg
fcomps
xor
cltd
das
pop
adcb
les
mov
mov
les
andb
inc
jno
bound
or
call
mov
dec
movhps
push
inc
aaa
mov
sub
inc
xchg
fstl
idivb
insb
jb
inc
stos
in
adc
ljmp
lods
fdivp
insl
mov
fcompl
cmp
jle
dec
jge
pop
dec
test
enter
cmp
loopne
bound
orb
pop
mov
sti
jnp
and
inc
ret
mov
xchg
test
iret
xor
lock
lea
and
mov
jge
mov
mov
jl
inc
lock
fstl
sbb
xchg
inc
pop
rcrb
xchg
das
in
jp
aas
jmp
dec
xchg
push
fnsave
aas
in
je
sub
add
cwtl
into
sub
adc
das
in
loopne
pop
and
dec
aas
sbb
es
add
daa
push
jae
insb
loop
and
add
icebp
fstp
shrl
xor
sbb
mov
adc
push
ret
inc
std
cmpsb
sbb
lods
adc
aam
xor
pop
jnp
das
sahf
es
imul
insl
in
push
mov
jns
jg
push
sti
movsb
decl
mov
into
orb
aad
mov
mov
cmp
int
rorb
movsl
rcl
js
outsb
jbe
lds
fwait
mov
jecxz
xlat
xchg
in
pop
imul
lock
lret
mov
fst
push
pop
fwait
pop
sub
mov
xchg
call
popf
add
cmp
mov
mov
lret
push
fisttpl
jge
push
hlt
jl
sbb
pop
aaa
add
dec
cwtl
lods
sbb
mov
rclb
cmpsb
push
jbe
mov
push
add
in
jns
mov
add
bound
cld
jg
rolb
push
xchg
scas
faddp
loopne
push
adc
cmpsl
xor
sbb
outsb
out
or
pop
outsl
cmc
jnp
or
sti
das
sub
mov
fwait
and
repz
stos
adc
aas
cltd
insb
or
out
lock
dec
scas
popa
adc
outsb
ja
push
fisttpl
xchg
insl
mov
mov
loop
jns
insb
ja
or
cmp
and
sub
lds
jmp
xchg
xor
xor
xor
sub
outsl
incb
mov
bnd
ret
out
mov
xor
je
outsb
lea
pop
adc
lret
jbe
fs
mov
add
lock
jnp
and
adc
inc
mov
fistpl
icebp
js
es
call
loop
in
icebp
jmp
or
or
mov
mov
dec
push
mov
mov
shlb
or
and
cmp
cltd
push
clc
in
cmovl
into
adc
dec
cmpb
adc
icebp
testb
sti
std
icebp
push
pop
insb
addb
fiadds
aam
insl
out
jecxz
inc
lods
stos
movsl
bound
test
mov
mov
bound
insl
xlat
stos
call
jae
mov
jb
and
push
inc
xor
ds
outsb
cs
push
sarb
repz
xchg
sarl
mov
mov
cmpsb
mov
push
jp
xor
or
adc
pushl
jle
dec
into
pop
and
cmp
call
inc
jo
fstl
xor
cmp
pop
sbb
jp
les
lea
ficompl
mov
adc
and
popf
push
test
sbb
fwait
pop
push
test
push
cmpsl
in
mov
pop
jne
pop
popa
outsb
jno
push
jb
push
xchg
outsl
push
jmp
pop
fistpl
insl
mov
outsl
sub
addr16
sbb
test
and
in
inc
mov
das
pusha
push
out
and
jae
sub
xchg
sbb
or
inc
in
add
inc
adc
insb
mov
sub
sti
fnsave
mov
ds
inc
inc
inc
xchg
mov
test
dec
pop
sbbl
cmp
xchg
pop
scas
dec
inc
imul
mov
push
mov
outsl
scas
mov
xor
sbb
push
mov
loopne
test
jge
push
leave
stos
dec
dec
pop
push
push
dec
mov
pop
sub
xor
push
sub
xor
mov
mov
or
insb
pop
sub
add
andb
subb
xor
rcl
mov
xor
xor
nop
mov
or
cltd
jne
mov
mov
iret
mov
sbb
mov
in
sub
testb
and
ficomps
insl
fnsave
loop
in
clc
mov
mov
mov
jns
push
pop
inc
adc
outsl
adc
mov
add
xor
pop
popa
dec
push
pushl
test
inc
jle
das
add
jo
fistpl
pop
dec
xchg
movsl
xor
arpl
inc
or
push
testl
out
cmp
imul
pop
xor
fadd
adc
out
jge
out
stos
pop
out
jge
push
loopne
mov
lods
outsl
adc
sub
mov
loope
movsl
movsl
and
or
or
js
popa
test
addb
jg
orl
fbstp
pop
mov
mov
and
jno
insl
inc
add
in
outsl
and
lcall
push
outsb
test
test
push
imul
xor
mov
jl
jp
xor
cmp
imul
notl
xor
or
xor
jge
std
add
xor
outsb
les
cmp
inc
pop
loop
inc
inc
mov
add
dec
dec
cld
stc
xlat
gs
lds
mov
test
fnsave
or
cmp
and
pop
xchg
cmpsl
shll
mov
xlat
fdivrs
jbe
mov
aad
mov
loopne
shrb
sbb
jnp
popf
daa
adc
fidivs
or
xchg
sbb
push
dec
das
daa
pop
in
imul
xor
jne
xchg
outsb
pop
cmp
aam
loopne
sbb
add
fcoml
xor
cs
loop
nop
or
movb
rdtsc
pop
mov
lods
iret
add
aas
add
data16
push
xchg
shlb
movsl
pop
or
push
mov
outsl
jge
repz
lret
ds
sti
outsl
dec
jecxz
rcl
mov
mov
out
or
or
mov
inc
jl
sbb
jmp
loop
mov
je
fisttps
add
mov
pusha
xchg
jb
pop
aad
mov
cmpsl
xlat
mov
xor
negb
outsb
mov
popa
js
out
cmp
dec
icebp
outsb
sbb
lret
add
test
cwtl
pop
popa
push
mov
sbb
add
add
hlt
adc
int3
pop
mov
mov
push
mov
sarb
cmp
popa
ja
or
js
cmpsl
push
outsl
or
insb
mov
sub
push
cld
movsl
inc
lahf
insl
inc
push
ss
fwait
inc
cmpl
loopne
fwait
push
pusha
push
fbstp
aam
fcmovne
popf
and
sti
pop
jne
bound
sub
xlat
push
jo
push
and
inc
mov
and
pushf
add
xchg
lea
inc
mov
lahf
leave
mov
mov
xchg
out
xchg
sbb
inc
jl
sub
mov
adc
push
pop
sbb
sbb
in
add
mov
or
fldt
mov
mov
fcomi
cmp
cmpl
and
jbe
loope
xor
inc
dec
adc
dec
push
push
outsl
loopne
or
shll
push
pop
dec
mov
ja
jge
fisttpll
inc
mov
outsb
xchg
sbb
cmpsb
or
out
push
in
pop
std
pop
sbb
jb
shlb
ds
cwtl
jmp
sub
gs
repz
loop
inc
fadds
mov
outsb
mov
jle
xchg
fstpl
dec
cmp
or
repnz
ret
fdivl
in
lods
ret
push
call
stos
inc
lock
push
ljmp
jae
fmul
mov
dec
xchg
sub
popl
sbb
es
ds
repz
jg
add
decl
xchg
loope
cmc
dec
pop
push
dec
leave
lret
insl
push
aad
ja
push
push
inc
fadd
add
adc
std
in
sbb
push
xchg
pusha
call
adc
cmp
pop
jp
ljmp
push
jge
sbb
add
or
lahf
mov
sti
mov
rorl
inc
insl
mov
fidivrl
popa
lods
mov
popa
xchg
pop
mov
or
lock
pop
clc
inc
lcall
sahf
inc
daa
and
sub
dec
or
or
push
lods
fisubl
push
push
dec
sbb
sar
cmc
xor
jmp
sbb
mov
add
pop
push
push
dec
cmpb
mov
mov
push
mov
insb
cmp
in
sub
rcll
in
push
jo
dec
cmp
adc
ficoml
lds
shlb
into
mov
loope
ficomps
mov
and
jecxz
pop
lea
bound
mov
adc
mov
test
lods
js
ljmp
inc
ret
cmp
adc
xchg
decb
cli
mov
push
in
insl
mov
adc
mov
inc
test
shrl
sbb
jmp
incl
test
pop
push
pusha
roll
std
imul
add
sub
push
sbb
outsb
imul
stc
cmp
fiadds
dec
pop
add
jp
mov
mov
popa
adc
mov
jp
push
gs
popa
incl
scas
adc
jg
mov
lret
inc
add
inc
stc
mov
xchg
inc
push
cmpb
js
adc
fadd
mov
lahf
add
ud0
movsb
fstps
mov
and
stos
sbb
sbb
fsubrs
inc
sub
mov
mov
je
sub
sbb
lods
or
imul
or
outsl
roll
fwait
int3
xchg
int
fldcw
ljmp
out
in
int
pop
enter
insb
pop
popf
gs
int3
mov
ds
pop
mov
push
sbb
xchg
test
fisttps
out
cmc
inc
push
dec
pop
js
add
jne
add
jo
inc
roll
mov
and
je
pop
sub
scas
loopne
mov
xor
sbb
insl
sbb
xor
jge
dec
or
insl
ret
pop
inc
lds
xchg
inc
cmp
add
cmc
sbb
dec
test
sbb
shll
push
dec
in
pop
inc
lahf
dec
es
adc
and
jmp
sarb
xchg
mov
outsb
xor
test
lds
push
mov
mov
push
movl
pop
std
xchg
data16
les
jge
dec
mov
mov
outsl
jae
xchg
mov
arpl
push
and
stos
push
sbb
inc
mov
xchg
test
test
mov
mov
xor
pop
pop
lock
insl
mov
outsb
sub
bound
adc
jmp
loop
add
sbb
jg
pop
jecxz
push
mov
xor
test
jg
push
jbe
dec
cltd
sbb
out
repnz
fmul
sub
or
pop
cmp
jp
mov
jbe
add
gs
mov
xchg
mov
cli
lcall
inc
adc
enter
int
xchg
ljmp
push
jecxz
sub
or
mov
or
and
mov
orl
psllw
pop
mov
imul
sbb
xchg
shll
push
or
mov
mov
outsl
jge
or
mov
or
fs
out
sbb
cmp
jecxz
inc
or
push
and
push
jnp
add
push
loopne
mov
movl
cmp
std
push
mov
test
push
mov
push
mov
sarl
or
push
cli
sti
icebp
add
inc
xor
outsl
jmp
or
jne
jge
jl
cmp
fistps
jb
and
push
jl
push
and
mov
insl
adc
sbb
mov
mov
hlt
push
rcrb
mov
es
dec
out
sbbb
mov
loop
pop
ret
ljmp
inc
push
xor
jo
int3
int
mov
cwtl
xor
jl
cmpb
call
outsb
and
jnp
pop
jle
xlat
mov
cmp
jne
sbb
adc
lods
int3
leave
shll
outsl
add
mov
aad
fldl
les
push
cmpsb
xor
fidivs
xchg
add
pusha
les
sahf
mov
sbb
xor
fisubrl
and
das
gs
mov
popf
sbb
pop
jno
xor
push
fwait
adc
jle
add
dec
clc
orb
loopne
adc
mov
das
ss
ds
std
xchg
xchg
mov
push
js
imul
leave
fwait
cmp
jo
mov
lret
test
fnstenv
roll
jg
jg
pop
mov
jae
cmpsl
lods
cltd
jecxz
not
pop
push
je
and
inc
ljmp
mov
mov
push
xor
dec
fnstsw
jns
jae
in
bound
sbb
out
mov
pop
sbb
push
call
dec
sub
push
jl
test
test
pop
or
roll
push
orb
mov
loopne
jle
jne
jo
and
aad
or
imul
outsb
push
outsb
cwtl
test
mov
sti
inc
call
nop
aaa
scas
cmp
icebp
and
or
scas
adc
call
or
lods
jge
enter
jbe
mov
xor
adc
jnp
addl
hlt
test
sub
or
aaa
sbb
fcomip
std
outsl
std
push
aad
mov
rclb
xchg
sbb
pop
rcll
sbb
ljmp
cmp
xchg
and
xchg
push
inc
pushf
stc
in
inc
and
jecxz
rcll
insb
cld
inc
imul
cmpb
test
call
mov
push
add
mov
iret
mov
push
add
mov
mov
mov
add
mov
mov
dec
js
xor
or
fimull
adc
jp
lret
ror
jl
pop
aaa
pop
xchg
adc
jecxz
jno
or
xlat
testb
sbb
mul
insl
adc
stc
outsb
cmp
out
imul
lahf
cmc
fcoml
push
mov
rcpps
adc
dec
xor
cmp
sbb
mov
sub
cwtl
xor
in
push
les
fcompl
mov
push
adc
and
sbb
cld
push
jne
popa
fwait
stc
inc
pusha
sti
lret
push
dec
inc
enter
imul
and
mov
inc
or
xorl
mov
jns
popf
cmpsw
adc
test
cmc
shll
incb
xchg
fstpt
push
sti
test
or
mov
mov
pop
jle
inc
and
cli
sbb
stos
or
fimull
mov
lahf
push
cmp
add
test
adc
movsl
das
fnstsw
hlt
pusha
and
add
dec
xlat
or
xchg
ss
mov
adc
repnz
loopne
add
call
push
push
xchg
xor
lds
sbb
pop
outsl
xor
sub
sub
xor
cwtl
fistpll
in
xchg
data16
sbbl
pop
fimuls
es
mov
cmp
adc
sbb
sahf
xchg
js
dec
aas
test
push
adc
mov
je
fs
xor
nop
mov
rclb
cld
add
nop
in
icebp
jbe
inc
xor
dec
shlb
lcall
xchg
xlat
add
sbb
xor
cmp
mov
and
push
lea
ret
testb
movsb
cmp
xor
sti
push
stos
mov
addr16
loopne
pusha
test
insl
bound
scas
pop
test
shll
jl
orb
fs
je
js
jge
add
arpl
lea
xchg
xchg
shrb
sub
push
push
push
mov
dec
sbb
or
outsb
mov
shl
sbb
fldenv
test
inc
stos
sub
inc
mov
lock
adc
pop
or
movsl
fcmovnbe
in
pop
cmc
or
mov
pop
mov
mov
mov
stc
loope
cli
xchg
jmp
sbb
lcall
test
sarl
push
enter
js
mov
out
ljmp
xorl
cli
mov
fcom
inc
test
inc
push
fsubrs
pop
dec
add
jb
popf
rcr
pusha
pop
jb
mov
loope
aam
cli
movsl
cld
or
inc
fadd
mov
jge,pt
popa
push
ds
fcomi
in
das
out
pusha
mov
dec
inc
sbb
fstl
jbe
cwtl
lcall
stos
add
icebp
pusha
das
aaa
inc
cmp
mov
dec
sahf
adc
push
stos
ret
or
mov
mov
movswl
and
std
sbb
push
out
pop
add
test
jp
hlt
mov
cmp
mov
ret
pinsrw
in
in
out
aad
fstpt
les
call
popa
lret
pop
mov
adc
xchg
testb
mov
outsb
rcrl
movsl
loope
cld
shr
dec
cli
xchg
popa
xchg
add
sub
mov
stc
add
and
jne
jp
filds
in
add
mov
push
push
in
add
or
cmp
outsl
insl
fldenv
fisttps
add
xchg
cmp
insb
cmp
cmp
jnp
rorb
cmp
lods
sahf
mov
fcomip
test
movsl
fistpll
dec
repz
xchg
push
in
inc
iret
add
and
or
call
fs
enter
or
mov
pop
add
pop
outsb
inc
pop
sti
push
jmp
mov
fstps
jno
mov
fiaddl
lods
adc
int3
shrl
mov
ljmp
stc
push
or
ss
jne
push
lcall
shrl
and
mov
loop
and
xor
lea
pop
mov
pusha
das
in
jg
std
leave
imul
add
add
je
loope
iret
dec
fxch
add
test
dec
in
dec
icebp
fdivrl
or
test
pop
inc
ffreep
pop
outsl
add
push
and
test
sbb
cmp
fwait
in
icebp
mov
push
pop
xor
pusha
clc
or
jno
jb
xchg
mov
add
mov
int3
stc
mov
sbb
jmp
inc
or
imul
add
jbe
dec
inc
outsb
cmpsb
add
inc
pop
mov
lock
cmp
adc
push
xchg
out
clc
mov
inc
mov
add
sbb
mov
xor
clc
idiv
inc
iret
js
divb
rorb
out
movsb
mov
pop
cmp
inc
js
jl
sbb
jnp
mov
mov
stos
adc
sub
mov
incb
gs
test
loope
inc
hlt
mov
orl
cltd
test
and
rolb
loopne
call
in
enter
adcl
iret
jge
mov
inc
out
repnz
xchg
xchg
cmp
pop
cs
xor
adc
jne
test
sbb
dec
scas
push
push
fstpt
sub
ja
stos
xchg
inc
dec
mov
and
push
push
pop
pop
into
mov
sahf
adcb
xor
mov
arpl
jne
call
fstpl
int3
xchg
pop
mov
fdivr
jp
push
je
mov
mov
lcall
ss
rorb
daa
std
outsl
pusha
or
pushf
jle
js
mov
pop
add
cmp
rolb
push
mov
lds
das
pop
xor
fisttpll
idivb
or
mov
mov
inc
stc
shl
jmp
aas
fmuls
mov
out
scas
pop
xchg
cld
cmp
jbe
pop
in
mov
sbb
hlt
xor
jmp
pop
outsb
lods
mov
loope
insb
repnz
mov
orb
xchg
jmp
ret
js
add
leave
std
add
je
popa
inc
ljmp
leave
jg
sub
imul
mov
call
insb
adc
outsb
adc
loope
shll
outsb
or
xor
pop
inc
sarl
pop
and
fdivrl
mov
mov
in
imul
mov
mov
sub
adc
sahf
out
pop
mov
jle
pop
imulb
cmpb
lret
test
aam
push
out
fnstenv
mov
or
pop
fs
jp
sub
test
nop
pop
jbe
jbe
ret
daa
cmp
je
loop
je
pusha
lret
fimull
add
inc
add
sbbl
and
mov
ds
clc
mov
pop
mov
xlat
iret
xor
dec
pop
mov
aaa
popf
scas
add
int3
popf
dec
jecxz
aaa
ljmp
stos
inc
loope
add
cld
in
xlat
lret
push
in
test
or
jns
xor
pop
mov
rcrb
frstor
or
xor
fwait
addb
sub
inc
adc
lods
ficompl
push
adcl
mov
je
decl
cli
jbe
jbe
add
pusha
cltd
and
shll
lods
mov
sbb
inc
aad
mov
leave
xchg
fcompl
dec
pop
push
sbb
jg
popf
adc
sbb
cltd
dec
popf
loope
test
and
xor
in
mov
test
sub
mov
cmp
insl
jae
pop
cld
pop
nop
jnp
aaa
mov
aad
cs
xchg
aaa
cmp
and
jns
test
fsub
icebp
jne
outsb
pushf
int
jmp
or
jne
push
insl
or
loope
xlat
inc
mulb
mov
outsb
lods
mov
and
add
in
add
je
les
or
sbb
test
mov
rcl
filds
or
jle
xlat
xchg
or
and
mov
push
stos
les
add
xor
pop
add
or
xchg
push
jo
pop
add
pop
ja
std
mov
into
push
es
mov
loop
movsl
das
xor
int3
pop
pushl
mov
clc
lock
push
xchg
inc
rcrl
mov
out
push
mov
push
add
dec
outsb
add
and
outsb
insb
dec
pop
repnz
mov
mov
mov
cli
and
or
insl
push
pop
xor
incb
fisttpll
and
or
arpl
jbe
rol
ret
and
in
movsl
cmp
loope
mov
mov
push
jge
sarl
pop
sbb
shlb
pushf
js
jge
repz
mul
sti
pop
bound
pushf
push
mov
jo
xchg
sahf
in
and
xchg
mov
nop
mov
popf
xchg
jnp
jnp
mov
aam
enter
mov
loop
push
aaa
sbb
popf
shl
popa
fisubs
js
jp
add
out
add
shlb
push
call
ret
std
push
fildl
xchg
clc
loopne
aad
jb
jle
lods
dec
insb
call
jae
mov
fistpl
mov
cwtl
icebp
pop
lahf
jmp
adc
add
add
js
lods
add
mov
add
add
push
das
mov
adc
aaa
mov
fidivrs
repz
insb
cmpsb
cs
push
mov
pushf
jno
jbe
pop
mov
inc
sub
fbld
fistps
push
pop
push
mov
movsl
push
inc
pop
inc
jo,pt
das
adc
and
mov
push
push
daa
adc
mov
pusha
sti
mov
test
rol
rorl
test
mov
jbe
mov
sbb
xor
mov
mov
inc
stos
test
cmovae
ret
inc
fst
repnz
jmp
cmp
call
jmp
cs
sub
shlb
inc
pop
dec
push
jp
pushf
inc
and
lock
outsl
fcoml
push
lock
ret
cmpsl
jnp
cmpsb
fimuls
cli
jl
loop
fidivrs
fwait
das
dec
enter
pop
or
sub
jne
arpl
push
ss
mov
fisubrs
mov
push
cmc
add
jo
std
in
mov
repz
push
shrl
add
inc
fistpl
movsb
not
fcmovu
test
push
push
mov
les
pop
into
ljmp
outsb
sub
dec
in
mov
ret
in
lods
xchg
xor
pop
rcl
loope
jb
lret
sbb
dec
sbb
pop
mov
lcall
mov
idivb
adc
es
add
xor
or
inc
fdivrl
jp
xchg
mov
loope
sahf
scas
jns
das
mov
cmp
pusha
popa
xlat
sub
fimull
jle
and
aaa
sbb
hlt
nop
cmp
or
push
stos
fstps
arpl
pop
jl
out
push
dec
dec
inc
add
add
push
fistl
add
sbb
les
pop
sub
xor
or
pop
shll
pop
add
mov
mov
inc
dec
mov
movswl
daa
je
dec
mov
add
outsb
arpl
mov
pop
je
or
inc
xlat
fstl
shll
insb
pop
cmpb
cmpsb
push
scas
mov
rcrb
jmp
and
imul
mov
dec
add
sbb
pop
mov
and
add
rcrb
and
lods
lods
fistl
icebp
sti
lcall
mov
mov
daa
fstpt
andl
and
enter
daa
call
and
add
and
aaa
orb
add
add
push
sbb
jmp
and
es
imul
fucomi
or
inc
push
imul
sbb
stos
pop
fimull
andl
cmpsl
cmpps
mov
sahf
add
shlb
cs
push
rcr
push
pushf
popf
jg
or
xchg
pop
adc
push
adc
loope
add
test
adc
imul
xor
fisttps
xor
dec
sbbb
jae
in
jl
mov
iret
out
add
cmp
add
mov
pop
inc
loopne
lret
test
mov
mov
scas
sahf
adc
adc
mov
adc
adc
mov
outsb
orl
adc
push
pop
cs
jmp
cmova
mov
mov
in
adcl
lea
add
imul
pop
lret
sub
pop
pusha
mov
insl
pop
pushl
xchg
fwait
mov
ja
mov
fwait
test
jne
adc
icebp
xor
pop
add
lea
rcr
push
das
dec
add
mov
mov
lret
fadds
stos
scas
orl
call
aam
ret
ret
add
pop
push
jmp
stos
push
and
ss
rorb
push
or
or
imul
jl
add
adc
or
sub
pop
adc
mov
adc
cli
or
push
pop
xor
cmpsb
inc
dec
jbe
out
ret
jle
xor
mov
and
imul
out
cmp
xor
sbb
rorl
imul
das
daa
add
pop
xor
loop
pop
pop
xchg
mov
xchg
pop
mov
adc
cli
insb
sub
sub
inc
mov
mov
iret
push
cmp
and
xchg
add
outsl
push
enter
jns
add
inc
in
push
in
xorb
mov
ljmp
leave
orb
outsl
icebp
jae
leave
mov
jp
dec
xchg
adcb
xor
in
dec
adc
das
xor
jnp
popa
dec
adc
pop
push
lret
in
fildl
sub
cld
or
stos
xchg
pop
mov
outsb
dec
jecxz
rclb
inc
xchg
insb
jbe
dec
inc
inc
mov
shlb
jne
daa
sub
mov
sbb
subl
cmp
gs
mov
xor
enter
cmp
dec
fwait
cmp
fimull
insb
dec
imul
cmp
popf
xlat
jns
push
jo
push
ss
bound
fadd
data16
inc
cltd
out
xchg
arpl
adc
das
fnstenv
mov
push
cmpsb
push
mov
leave
ret
xchg
or
mov
gs
xor
push
insl
jg
loopne
pop
gs
jmp
filds
and
test
inc
insb
cs
sub
mov
push
inc
lods
mov
mov
mov
sbb
xchg
dec
inc
add
filds
push
mov
sbb
mov
lret
mov
nop
popa
aaa
bound
das
ret
fcmovb
push
shrb
add
arpl
pop
mov
fwait
pop
sahf
ficomps
xchg
stos
jp
push
inc
xchg
or
sub
ss
imul
jae
or
fidivs
ss
je
fstpl
int
ficomps
xor
lds
sbb
pop
call
lock
rcr
xorb
test
mov
fidivl
xor
int
in
mov
lea
add
aaa
ficoms
sbb
push
lods
pop
mov
adc
shl
pop
adc
in
fwait
mov
jb
and
pusha
test
push
roll
mov
push
lods
pop
nop
add
fidivl
js
addr16
and
sbb
sti
pop
sub
testb
add
bound
movlps
push
or
es
add
mov
pop
push
xchg
xchg
add
cmp
imul
mov
jne
outsl
outsl
loope
cmp
dec
mov
mov
add
xchg
std
outsl
dec
ja
das
movl
mov
jmp
or
dec
rcrb
dec
es
push
jl
add
cpuid
stos
daa
and
xor
cmp
pop
test
jecxz
jp
and
fwait
jg
sbb
mov
adc
ret
mov
insl
sbb
in
cmpsb
or
ds
data16
or
pusha
mov
lock
push
pop
push
lods
mov
adc
dec
loope
jge
popa
cltd
push
add
fs
inc
shrb
out
ret
or
je
call
lds
adc
clc
mov
sub
sbb
stos
ljmp
inc
outsl
cltd
cli
roll
jo
orb
mov
fisttpll
jnp
xchg
imul
cmpsb
into
aaa
fldln2
daa
sbb
lcall
jae
lcall
call
sub
cmc
lods
add
js
lods
push
mov
push
cmp
cmpsl
jne
jb
mov
mov
xchg
pop
test
push
dec
or
inc
rolb
mov
xor
push
mov
mov
or
call
test
add
mov
mov
subb
int
in
divb
mov
rclb
jp
mov
gs
mov
pop
mov
test
aad
xchg
fmuls
mov
pop
sbb
sbb
ja
dec
das
inc
in
mov
add
or
mov
dec
mov
xchg
ss
mov
clc
inc
and
test
shll
ss
xlat
or
mov
pop
into
das
sbb
rcrb
scas
jbe
icebp
adc
cmp
xor
aam
fcmovb
rcll
in
adc
fldt
jbe
and
xchg
jb
mov
pop
mov
push
jnp
add
mov
scas
fwait
test
lcall
loop
mov
std
jge
add
push
sbb
add
jp
cmc
jbe
pop
imul
cmp
mov
fisttpl
and
std
xchg
jne
mov
gs
mov
out
and
movsb
jne
imull
test
ret
jne
mov
cli
and
imul
or
mov
jbe
inc
pop
mov
sar
mov
mov
lret
add
test
dec
push
aas
imull
cmc
jo
mov
pusha
mov
add
inc
lock
pop
test
addl
push
xor
stos
popa
push
pop
adc
data16
das
push
mov
mov
mov
fcmovnb
fcomi
add
push
ja
and
pop
pop
mov
mov
cmc
aaa
cmp
sti
gs
sub
ja
outsl
inc
mov
test
sahf
lea
loop
mov
adcb
cmpsb
outsl
xchg
lret
pop
jbe
jecxz
in
mov
emms
adc
insb
or
add
cmp
adc
jge
mov
add
mov
push
xchg
fisttpl
mov
push
push
test
stos
mov
xchg
dec
insb
aaa
loop
jg
sbb
aad
sub
movsl
mov
and
push
inc
testl
push
call
add
add
push
mull
cmpl
jo
fbstp
pop
cmp
pop
or
aad
adc
mov
fdivl
add
add
or
fcomp
pop
inc
pop
xor
test
mov
leave
gs
mov
outsl
xchg
jbe
pop
in
add
xlat
and
or
sbb
and
repnz
sti
add
sti
pusha
testb
jg
jae
and
cmp
adc
jmp
test
popf
imul
sahf
bound
adc
mov
or
fistpl
insl
cmp
sbb
lods
add
fldt
stc
imul
lods
push
je
or
inc
push
push
xchg
jl
fucomp
and
xor
cmp
and
xor
mov
xchg
nop
lods
add
out
add
punpcklbw
scas
xlat
mov
lock
insl
stc
nop
dec
mov
repz
jp
add
lock
push
pop
stos
jge
enter
push
adc
cwtl
add
fldcw
lock
icebp
imul
mov
lret
daa
nop
call
sti
sub
xchg
fadds
ljmp
loopne
push
divl
xchg
scas
add
bound
dec
enter
push
push
cmp
add
pop
sbb
popa
cltd
push
add
add
ja
icebp
leave
mov
clc
rcll
or
cltd
pop
or
pop
xor
adc
aam
fnstsw
insb
dec
je
in
cmpsb
push
inc
dec
loop
outsl
outsl
sbb
mov
dec
rolb
pop
mov
xor
push
out
fistpl
fstl
dec
test
mov
jb
and
and
lods
cmpsl
lods
or
jae
pop
fdivs
addl
push
push
lds
stos
push
xor
xor
clc
in
pop
add
inc
push
or
xor
lahf
cmp
adc
jns
fidivs
je
and
push
or
lods
in
sub
fs
sbb
jno
mov
dec
fimuls
and
mov
jl
outsl
gs
arpl
xchg
add
xchg
mov
std
add
pushl
jb
sbb
mov
ja
in
pusha
nop
js
or
mov
pop
push
fistl
mov
pop
sbb
push
addr16
sub
mov
stos
cmp
ja
fstl
cs
push
sbb
add
inc
fcom
cmc
dec
and
xchg
push
mov
fxch
gs
jg
push
mov
fnstenv
loope
loop
mov
movsl
mov
ds
stos
jp
fnstcw
lods
mov
shll
add
mov
mov
testl
in
adc
add
test
movsl
mov
xor
dec
out
xorb
xor
jne
jge
lock
adc
ficomps
mov
inc
adc
sbb
mov
popl
jb
loope
mov
insb
bound
mov
aad
adc
mov
pop
rcrl
fldcw
fildl
add
outsb
xlat
mov
loopne
mov
mov
loop
repz
lea
pop
out
push
insl
xchg
cmp
mov
lock
ljmp
mov
andb
cld
iret
mov
sub
shll
fistps
push
cmp
cltd
lea
aas
adc
fwait
aad
flds
jg
sub
dec
cmp
sahf
pop
dec
pop
push
addr16
sbb
dec
hlt
mov
mov
aad
mov
into
dec
sub
sub
arpl
test
push
dec
push
ljmp
sub
fmuls
push
mov
or
push
mov
adc
mov
mov
inc
dec
sub
cmc
shll
pop
sub
popa
je
mov
loop
cmp
dec
push
xchg
pop
xlat
cli
imul
dec
or
hlt
cmc
and
imul
jbe
jb
lods
sub
or
mov
inc
pushf
push
mov
lods
lret
gs
fiaddl
out
sbb
sbb
adcb
out
std
cmp
testl
stos
out
jecxz
mov
add
push
cwtl
push
inc
sub
lahf
data16
pop
and
cmp
and
out
mov
or
in
fmul
cmpsl
and
dec
addl
adc
dec
andl
and
or
jb
and
sahf
mov
and
sti
push
pop
fs
or
dec
lock
dec
inc
xorl
dec
decl
movsb
dec
punpckhwd
daa
fldt
pop
into
js
jns
xchg
dec
lock
iret
div
fwait
dec
or
adc
enter
adc
lds
inc
add
mov
push
sbb
dec
jno
shlb
add
xchg
xor
jno
lea
push
out
adc
or
test
outsb
shr
pop
ret
dec
mov
jns
outsb
andb
or
sbb
add
mov
mov
cmp
dec
xchg
dec
jmp
jb
jmp
adc
push
shl
and
dec
add
add
dec
inc
jne
mov
inc
arpl
repnz
sbb
jns
adc
sub
pop
cmc
aam
jge
push
mov
testl
mov
sbb
sbb
sbb
jb
in
pop
dec
mov
dec
outsb
dec
xchg
pusha
hlt
inc
pusha
enter
push
sbb
jne
dec
add
cmp
pop
aas
xchg
jnp
cmp
imul
and
push
in
adc
rcr
xor
popf
imul
push
push
add
je
inc
mov
cmp
daa
fcoms
pop
test
jns
push
adc
mov
popf
inc
push
mov
adc
mov
fcomip
cmp
add
pop
jmp
push
or
jmp
mov
xor
push
iret
mull
popf
cmpsl
xchg
enter
dec
scas
sbb
push
js
push
add
cmp
mov
mov
mov
rorb
sbb
imul
imul
dec
dec
aad
xchg
mov
sub
out
lods
adc
pop
iret
seta
or
sbb
and
jb
decl
cltd
test
movntps
stc
fs
test
mov
stos
xlat
unpcklps
pop
pop
push
outsl
sub
cmp
push
cmp
lahf
xchg
push
pop
in
incb
jge
subl
pop
sub
mov
test
adc
test
sbb
xchg
test
xchg
mov
sub
pop
imul
andb
jno
xor
addr16
inc
ffree
pop
rcl
mov
mov
ja
das
addb
xor
out
lds
orb
jbe
mov
add
addr16
test
mov
imul
xor
mov
mov
jae
das
mov
inc
pushf
daa
aaa
test
stos
aam
and
loope
cmp
push
jo
stos
jp
or
add
test
adc
pop
das
and
mov
push
outsl
inc
or
mov
inc
xchg
xor
add
add
dec
pop
pop
cld
fcoml
inc
cmp
stos
mov
mov
inc
jg
out
mov
gs
out
insb
mov
sti
xor
aaa
mov
inc
adc
xor
jl
aad
hlt
jbe
adc
mov
mull
pusha
or
push
pop
jne
mov
ss
mov
mov
adc
wrmsr
cmp
jne
bound
push
fwait
pusha
popa
ret
sbbb
dec
iret
mov
jnp
push
adc
add
or
ss
inc
inc
inc
and
das
sbb
mov
es
pop
loopne
in
mov
icebp
rorb
mov
mov
imul
cmp
cmp
jge
ds
mulb
mov
test
xorl
testb
fistpll
mov
jmp
mov
add
fdivp
mov
cmp
fistl
add
into
and
mov
jle
lret
or
push
leave
cmpsl
xchg
ljmp
inc
xchg
push
mov
js
cld
je
push
sbb
loope
lret
stc
data16
sarl
movsb
test
jge
imul
shrl
pop
subb
and
jg
mov
andb
fldl
jbe
mov
adc
ja
xlat
push
add
mov
add
or
jb
xchg
mov
jge
mov
loopne
insl
daa
xor
and
lods
jo
push
cmp
iret
pop
popf
adc
data16
cs
mov
pusha
push
mov
pop
xadd
push
cmpsb
adc
sub
dec
mov
adc
and
add
dec
outsb
inc
ret
pop
add
leave
sbb
adc
into
dec
dec
pushf
pop
dec
sbb
mov
setbe
mov
pop
out
mov
outsb
icebp
mov
test
inc
outsb
das
or
mov
insb
pop
xchg
add
and
nop
jbe
jne
cmp
push
decl
outsb
xchg
insb
call
shll
jmp
xchg
push
int3
inc
pop
pop
es
push
hlt
mov
out
pop
jno
mov
push
dec
adc
add
roll
movsl
push
std
fstpl
icebp
jb
xchg
sub
ds
je
jecxz
sub
add
data16
push
add
cmp
inc
add
add
fimuls
sub
mov
push
sbb
mov
cmpsl
jb
aaa
push
rcrl
arpl
cmp
leave
or
xchg
adc
jo
enter
fs
gs
in
pop
pop
daa
or
leave
xor
adc
ret
frstor
stos
ficoml
inc
leave
iret
popw
sbb
inc
insl
xchg
lock
cmp
push
mov
jo
cltd
mov
movsl
orl
mov
adc
dec
dec
loopne
orl
orl
addr16
xor
fnsave
outsl
or
push
shlb
adc
inc
int
movsb
dec
lods
mov
cli
jbe
hlt
into
outsl
hlt
and
pop
cltd
xchg
aaa
sti
adc
jle
mov
or
stos
enter
in
or
in
dec
push
pop
rcrl
jmp
sub
cmpsl
mov
hlt
jg
fs
out
dec
cmp
sbb
adc
daa
push
ffree
push
aaa
mov
mov
and
and
xchg
fwait
jb
fimuls
test
je
adc
and
js
inc
jmp
adc
add
sub
fdivl
outsl
pop
arpl
mov
pop
inc
mov
push
cmp
ret
shl
imul
lahf
rclb
insl
or
add
pop
mov
shl
mov
adc
jecxz
loopne
mov
roll
push
ss
sahf
es
xor
pop
fadds
mov
xchg
stos
inc
test
rolb
jnp
test
sub
lret
test
fisubl
xor
xchg
js
adc
and
imul
pop
daa
jmp
jnp
mov
adc
cmp
fistps
or
and
or
scas
lods
and
sbb
out
in
cmovl
aam
test
sahf
ret
add
adc
je
or
mov
call
mov
inc
shll
add
fsts
js
or
pop
scas
push
xchg
out
mov
filds
pop
jecxz
lahf
lock
mov
enter
or
inc
push
xor
xor
xchg
fstpl
and
mov
inc
fistps
adc
ds
dec
inc
imul
ja
and
cmp
pop
out
les
jle
inc
cmp
adc
or
jl
mov
std
add
xor
pop
int
bound
pusha
cmp
mov
pop
call
push
pop
fcmovnu
ret
mov
sahf
leave
aad
xadd
and
cmp
lret
xorb
pop
xor
mov
push
fldcw
mov
jbe
in
aas
clc
push
sbb
dec
mov
in
aam
pop
pop
dec
testl
aam
and
adc
movsl
in
leave
push
leave
hlt
stc
imul
test
xchg
cmpl
mov
std
insb
sbb
inc
pop
xchg
outsb
dec
dec
jae
mov
bswap
sbbb
jecxz
push
mov
sbb
dec
mov
sti
and
push
fs
add
fcompl
jl
sbb
add
repz
daa
insl
jg
cmpsb
jnp
cmpsl
push
jp
xchg
xor
notl
add
cmpl
cmp
imul
pop
aaa
jne
mov
pop
pop
cmpsb
jnp
mov
xor
sbb
pop
xchg
jbe
jnp
jns
push
es
movsb
push
test
and
outsb
jbe
cmpsl
aaa
test
out
clc
jo
je
push
test
stos
jle
imul
sbb
xlat
add
mov
es
cwtl
in
rcrl
jecxz
sub
ss
test
cmpsl
dec
xlat
adc
fistpll
cmc
rcll
std
or
dec
push
daa
add
sbbl
bound
mov
and
cmc
dec
in
mov
pop
mov
sub
call
add
pop
std
sub
cwtl
in
add
dec
lods
sbb
cmp
mov
mov
cmp
jp
and
idivb
out
mov
test
xchg
and
jecxz
pop
insl
add
push
xor
addb
cmp
inc
adc
loop,pn
icebp
fsincos
les
cmp
in
dec
pop
adc
jno
pop
sahf
sbb
push
in
cmpl
dec
and
pushf
pusha
movsb
adc
jle
test
dec
jge
int
fistps
pop
pushf
test
sbbl
xchg
pop
or
push
je
ds
xchg
dec
push
sub
icebp
sbb
in
iret
pop
cli
push
inc
insl
xor
mov
jbe
insb
and
push
adc
add
jae
call
stos
cmpsl
dec
sbb
push
outsb
sbb
xor
movsb
inc
mov
or
repz
cltd
inc
pop
into
jp
icebp
addr16
mov
mov
xchg
mov
inc
bound
mov
inc
fisttpl
movsl
add
repz
outsl
mov
shll
vmovups
jne
roll
jp
xchg
in
fcoms
imul
dec
push
adc
fsubrp
mov
out
mov
mov
mov
or
sahf
shll
fistpll
fsubs
add
loopne
adc
divl
lahf
cmpsw
inc
adc
or
cmpsl
xchg
add
or
popf
lcall
xchg
dec
ljmp
rorb
inc
cmpsl
cmp
imul
aad
cmpsb
mull
and
and
xor
mov
or
es
dec
xor
fcomi
adc
daa
gs
call
hlt
and
popf
mov
inc
loopne
imul
xor
stos
fucomp
ret
rcrb
dec
inc
daa
mov
sbb
aaa
sarb
xchg
cmpb
fwait
pusha
mov
mov
std
notl
sbb
dec
clc
xor
adc
mov
or
hlt
mov
sbb
dec
mov
fs
fbld
push
enter
inc
outsl
sub
pop
jmp
adc
ret
xchg
lcall
push
cmp
add
cmp
xlat
push
fsubrs
int
sbb
xchg
jg
inc
push
das
jbe
fs
cmc
mov
outsb
lods
adc
inc
shll
sbb
and
mov
or
cmc
xor
lock
xchg
mov
cmc
lea
dec
xchg
ss
imul
adc
mov
or
push
dec
sti
xor
nop
lods
dec
ss
or
cltd
mov
arpl
jmp
xchg
cmp
std
ljmp
or
imul
imull
push
sub
pop
test
mov
push
sbb
fisttpl
fdivrs
std
jecxz
mov
xchg
adc
xor
and
xchg
mov
shl
leave
inc
pop
shrb
ss
cld
mov
mov
xor
dec
mov
jmp
push
add
push
xchg
lcall
jb
push
inc
cmpsl
repnz
movsl
mov
push
pushf
aad
cmp
fldcw
std
pop
xchg
dec
jno
test
psrlq
into
cmp
cmpsl
dec
ret
push
add
add
int
sub
mov
ja
or
pop
jae
mov
jl
push
cmp
pop
xchg
in
aaa
xor
cmp
xchg
aaa
inc
dec
jmp
and
dec
sbbl
mov
push
imul
lock
addr16
iret
insb
sbb
xchg
dec
pop
sbb
ficoms
lock
cmp
mov
pop
adc
push
adc
jle
sub
repz
mov
loopne
bound
adc
xchg
inc
inc
dec
sbb
and
out
push
call
add
dec
mov
or
es
es
mov
fs
xor
push
add
jp
inc
mov
add
jle
pop
ljmp
loope
aaa
xchg
rcll
or
call
cmpsl
loope
xchg
outsb
lcall
mov
add
push
push
dec
push
cmpsl
je
mov
pop
movd
test
dec
in
pop
notb
push
jae
xchg
lret
sub
pop
fsubp
mov
testb
sub
push
push
ja
cmp
pop
dec
or
mov
out
out
or
cmpl
mov
insl
jg
call
iret
outsb
bound
ret
jmp
das
sub
mov
jge
cld
dec
test
sub
lea
push
sub
adc
pop
mov
push
lahf
in
popa
jmp
xor
in
sub
loope
arpl
mov
add
jo
out
in
xchg
addl
add
mov
xchg
mov
dec
ret
jbe
aam
es
mov
or
sbbl
and
mov
sub
lods
cli
outsl
jecxz
nop
add
dec
pop
aam
js
sub
add
and
add
mov
inc
inc
jnp
inc
in
pushf
or
loope
fs
xor
or
inc
dec
cmp
xor
jl
mov
dec
push
les
add
lods
sbb
mov
adc
pop
call
mov
sbb
dec
lds
adc
cmpsb
mov
addb
adc
outsl
imul
loope
mov
pop
cli
lcall
xor
bound
pop
add
cli
test
les
add
in
lods
pop
adc
leave
sbb
dec
push
or
loop
mov
subb
fnstcw
mov
lahf
jnp
aaa
xor
in
mov
fcoms
mov
cmp
jmp
lods
push
in
nop
cmp
inc
mov
ljmp
ljmp
pop
xchg
aaa
sti
loop
mov
fmul
push
pop
xor
push
shll
mov
xor
mov
cld
push
mov
xor
jnp
mov
rcll
sub
push
jo
add
adc
ss
mov
enter
nop
lock
les
push
inc
ss
mov
fdiv
mov
das
xor
inc
pop
sarb
dec
add
por
mov
xor
ret
mov
mov
xchg
out
jne
mov
xor
es
mov
or
jbe
ljmp
in
into
xchg
lock
or
mov
or
or
fildl
pop
cmp
pop
sub
int3
cmpsl
cmpsb
sub
inc
sti
sbb
cmp
test
gs
das
sbb
sbb
inc
mov
nop
sub
test
lock
fdivrs
xchg
jmp
xchg
popa
push
addl
rorb
push
pop
push
subl
popa
rcrb
movq
mov
clts
and
hlt
push
decl
push
push
or
insl
mov
jo
sbbl
loope
or
test
push
pop
jb
mov
loop
fs
in
xchg
in
shll
push
sbb
stos
clc
pop
and
mov
mov
xor
and
or
das
vmovaps
mov
jg
inc
pop
xor
out
sbb
mov
in
jmp
xchg
mov
ficompl
mov
ret
pop
cli
pop
fldl
hlt
shll
popa
rcl
rcrl
xchg
jmp
sub
and
js
cli
imul
adc
dec
frstor
lahf
and
dec
mov
int3
sub
imul
sub
in
and
inc
mov
test
dec
lods
xlat
into
pop
cmc
sbb
subb
push
sbb
movsl
jmp
dec
and
mov
popf
shll
idivl
data16
push
imul
sbbb
mov
das
cmp
pop
or
lcall
decl
stc
aad
dec
fbld
sbb
dec
jo
hlt
sahf
ja
sbb
and
mov
adc
jmp
outsl
mov
cmp
call
cmp
ds
xchg
push
insb
aam
jg
test
sahf
aaa
shll
shlb
int3
insb
cmpsl
orb
pop
mov
cmp
fldl
mov
shrb
inc
mov
mov
js
ja
inc
scas
test
sub
bound
lock
fcomps
dec
and
sub
add
or
ss
data16
pop
std
fdivrs
push
adc
xchg
ret
roll
mov
jo
aad
fwait
add
jo
cmp
dec
popa
cltd
cld
cmc
mov
xchg
and
xchg
test
or
pop
rcrb
mov
cmp
movsb
inc
push
iret
jmp
push
xor
in
pusha
mov
sbb
mov
dec
nop
or
jnp
ljmp
xor
jl
test
je
pop
jns
sub
cmp
mov
clc
mov
xchg
push
sbb
sbb
inc
aaa
adc
mov
xchg
jmp
dec
pop
push
and
movsb
sbb
fcmovb
mov
into
das
icebp
adc
cmp
adc
into
pop
inc
push
xchg
test
dec
add
test
add
mov
dec
lods
out
shlb
jno
sti
xlat
popa
mull
adcb
inc
add
pop
adc
and
sti
and
inc
mov
adc
arpl
insb
adc
mov
loopne
cs
dec
data16
inc
sub
cmp
or
jp
mov
dec
cld
xchg
push
add
mov
xchg
mov
or
je
push
int
sub
or
fistps
and
pop
outsb
and
outsl
or
andl
cmp
je
add
iret
data16
clc
clc
icebp
xor
cmc
loopne
push
pop
insl
dec
mov
faddl
icebp
das
lret
nop
shlb
js
add
dec
or
pop
mov
add
loop
shrb
cmp
es
xor
pop
daa
je
adc
mov
and
fistpl
or
subb
je
xor
mov
pop
pop
les
fiaddl
stc
test
pop
lods
mov
mov
leave
mov
adc
lock
push
xchg
std
jmp
add
adc
sbb
sahf
or
push
mov
clc
iret
dec
cmp
jno
xor
leave
cld
rorb
pop
inc
mov
movsl
push
repz
les
xchg
call
jmp
test
imulb
or
push
push
mov
int3
pop
das
xorb
ljmp
shll
test
sahf
pop
lea
pop
faddl
mov
and
mov
xchg
sub
dec
cmpsb
pop
mov
push
adc
sbb
mov
dec
pop
cmpsl
ljmp
test
mov
sub
mov
pop
adc
mov
push
out
jb
popa
sbb
jae
loop
pop
mulb
insb
call
jnp
push
int3
xor
mov
mov
movsbl
jno
inc
mov
inc
adc
mov
subb
ja
orb
jp
pop
mov
cmp
and
shll
mov
lret
loopne
testb
xor
dec
mov
pusha
outsl
dec
push
arpl
in
popf
fs
xchg
cltd
scas
dec
fwait
loop
xlat
pop
or
sbb
mov
andl
mov
push
mov
lods
in
ja
cmp
sub
aas
push
push
mov
test
lock
jmp
shll
or
test
mov
sbb
xchg
jbe
dec
aas
fadds
add
or
mov
pop
dec
in
andb
stos
test
in
call
sbb
lret
arpl
sarb
cmp
sbb
or
sahf
mov
xchg
idivl
mov
incl
adc
add
or
xchg
push
rolb
repnz
daa
xor
adc
mov
rclb
jg
sbb
and
push
fs
cmp
in
pop
loope
mov
and
jle
loope
pusha
pop
arpl
push
adc
ja
sar
jns
les
je
cmp
xchg
and
xchg
pop
out
dec
addr16
divb
sbb
xchg
lods
es
xchg
repz
sbb
notl
lods
jle
jp
clc
loopne
call
jnp
sarl
push
mov
push
dec
xchg
mov
push
add
jae
call
rclb
sbb
xchg
lea
je
xchg
je
scas
mov
fbstp
sub
cs
xor
or
les
mov
mov
dec
lock
xlat
push
mov
xchg
inc
fisubs
daa
jmp
outsb
nop
add
mov
sub
les
insb
pop
adc
into
adc
and
cmp
lds
movsb
inc
push
pushf
test
popl
bound
or
or
xor
push
jae
mov
inc
add
jmp
mov
pop
in
dec
adc
cmp
aad
sub
add
adc
push
dec
out
and
and
push
int3
idiv
mov
pusha
movntq
mov
ficompl
jp
test
pop
aam
xor
mov
cmp
or
xor
aam
daa
jmp
inc
jne
fcompl
mov
mov
push
xor
xor
fidivrl
mov
ss
clc
jp
add
shl
sahf
in
ja
test
cmp
adc
jmp
push
sbb
push
lret
pop
fucomip
inc
ljmp
scas
and
dec
inc
and
lds
js
push
jge
pushf
push
leave
ret
pop
inc
jge
push
push
sti
into
mov
inc
lods
popa
add
bound
mov
pop
push
inc
das
repnz
ljmp
mov
test
mov
or
push
cmc
and
loop
sbb
and
mov
mov
push
bswap
jmp
stos
jge
sbb
cld
push
imul
sahf
dec
sbb
ret
imul
adc
popa
idivl
inc
sbb
mov
or
xchg
ret
mov
dec
mov
pop
orl
push
adc
adc
mov
call
popa
and
mov
mov
inc
ja
rcll
jg
mov
xlat
stos
cld
inc
inc
ds
mov
bts
rcll
mov
movb
sbb
out
arpl
call
je
xor
outsl
movsb
inc
sbb
insb
lock
data16
xor
cs
repz
sub
dec
call
xchg
fistps
pop
lahf
in
rol
jp
xor
popf
cmpsb
stc
lock
hlt
push
and
mov
ljmp
rcll
push
lock
mov
sub
data16
or
and
pop
or
subl
lea
subb
mov
addr16
jno
cmpl
js
lds
ret
cmp
and
subl
movsb
mov
or
xor
and
movsb
shlb
xchg
pop
xorb
packsswb
test
aam
std
mov
dec
icebp
ret
hlt
cmc
jmp
mov
cmp
lcall
ss
adc
cwtl
in
divb
mov
out
and
addl
adc
ret
jg
or
or
and
lea
stos
mov
xchg
or
push
imul
adc
shl
arpl
mov
das
mov
sub
jmp
pop
fnsave
mov
push
out
or
test
inc
sbb
xchg
into
jo
sbb
push
lods
mov
bound
push
jne
sti
xor
push
clc
clc
add
pusha
and
jnp
mov
insb
adc
pushl
mov
lods
fbstp
pop
setl
inc
jbe
adc
cmp
ja
add
or
out
jmp
sarb
incb
bound
loopne
iret
xorl
lcall
push
unpcklps
dec
icebp
loope
test
sub
sahf
outsl
rorb
test
or
outsb
sbb
mov
or
jmp
jno
popf
adc
xor
fstpl
dec
jle
pop
out
fistps
lock
inc
pop
ret
mov
mov
call
sbb
sbb
jecxz
mov
xchg
pop
inc
push
arpl
xchg
jge
les
xchg
or
pop
dec
das
mov
push
pop
push
adc
xor
mov
pop
popa
add
jbe
pop
das
or
popa
stos
inc
sarb
sbb
adc
push
addr16
idivb
aad
xor
dec
push
pop
mov
aas
loope
adc
jbe
or
dec
push
imul
int
orb
arpl
cmpl
mov
cmpsb
ds
ja
jl
mov
cmpsl
repnz
add
lds
push
pop
push
xchg
or
das
sbb
xchg
sbb
mov
dec
adc
xchg
cli
push
and
sub
push
lds
sub
das
push
mov
mov
add
add
lret
sbbw
dec
mov
adc
inc
pushf
mov
in
inc
loop
sub
push
xchg
jo
cmp
mov
test
inc
adcb
lahf
sbb
cmp
xor
insb
adc
and
orb
adc
mov
mov
cmp
movsl
rclb
int3
cmpsl
push
ret
shl
popf
adc
pusha
cmp
fstpl
inc
dec
sarb
inc
addb
dec
enter
jge
loope
enter
fdivrp
mov
movsl
loopne
negl
pop
inc
jecxz
adc
sbbb
add
iret
inc
push
add
cld
or
faddl
and
arpl
int3
stos
pop
xlat
sbb
add
filds
mov
in
roll
cmc
loope
or
push
add
jne
mov
sub
test
std
sahf
lock
push
inc
mov
gs
mov
jmp
push
add
sbb
sbb
lret
outsl
nop
mov
jl
adc
push
lock
or
insb
xor
xor
push
mov
fcoms
pop
fldl
negl
inc
stc
sahf
imul
fimull
divb
int
xchg
add
and
push
mov
jmp
rol
pop
adc
and
test
scas
or
cld
push
or
ret
sbb
push
loope
add
daa
sbb
mov
mov
outsl
flds
aad
popl
fcos
outsl
arpl
into
sbb
jmp
adc
adc
xor
js
fadds
dec
dec
push
ret
sub
jo
shld
jmp
popa
dec
xchg
xor
mov
add
or
sbb
out
and
pusha
psraw
inc
scas
add
es
sub
jecxz
ljmp
pop
repnz
cli
cwtl
je
xor
jmp
pop
clc
and
xchg
cmp
mov
fcom
inc
xchg
xchg
adc
addr16
add
xchg
mov
sbb
je
cmp
and
int
mov
jns
nop
adc
push
rolb
push
fisubs
lock
jae
sbb
and
dec
lock
pop
lock
mov
sti
pop
add
xor
fwait
sbb
hlt
shll
or
or
pop
stc
xchg
jl
mov
lods
frstor
pop
or
sbb
sarl
sahf
insb
cmc
fs
je
jge
jae
addl
sbb
mov
xor
int3
in
inc
jmp
loopne
xchg
push
ss
pop
popa
nop
enter
jno
mov
mov
outsb
xchg
mov
sub
lods
sbbl
call
movsb
fmuls
and
cmp
stos
mov
js
dec
or
fxam
repnz
push
xor
rolb
int
and
push
inc
aaa
leave
inc
je
aaa
imul
decl
sub
das
and
mov
rcr
sbb
mov
cmpsl
cmp
sarl
jae
mov
add
lock
mov
outsl
inc
xor
icebp
push
xor
mov
lea
sbb
and
dec
stos
push
rolb
cmc
rcll
fcoml
push
cli
lcall
lock
xchg
push
xchg
cmp
lock
insl
jl
lock
and
mov
mov
stos
add
subb
out
cld
jg
fcmovne
negb
adc
divb
and
add
or
rorl
push
rcr
data16
sbb
inc
enter
adc
xchg
jle
push
jo
int3
xchg
xchg
pop
stos
mov
add
fistl
rorb
jp
lock
xchg
shlb
aaa
sbb
jmp
push
add
push
and
lds
jb
bnd
fsts
cmpsl
lret
xchg
lds
cmp
and
inc
in
sahf
sahf
push
addr16
gs
addr16
xchg
je
ljmp
into
subl
pop
shrl
jle
inc
xor
orl
dec
iret
mov
lds
mov
mov
pushf
rcr
and
add
ret
sub
mov
pop
sub
mov
call
es
mov
adcb
and
call
jmp
inc
cmp
jge
or
jbe
lea
mov
sbb
jge
lcall
jo
cmp
xor
xor
fcoms
mov
lret
ds
inc
adc
inc
mov
adc
xor
cmp
fildl
sti
loopne
mov
add
mov
subl
xchg
sbb
push
dec
je
insb
jmp
mov
daa
or
pop
inc
movsl
pushf
shlb
jmp
cwtl
xchg
bound
mov
enter
fnstsw
clc
js
fs
rorl
repz
out
rcrl
cwtl
add
in
xor
sub
sahf
into
dec
push
addl
cli
lret
jns
mov
xchg
add
rcll
sbb
pop
xor
push
negl
sub
xchg
adc
lods
nop
push
adc
fwait
add
cmp
and
repnz
xorl
test
cmp
divl
push
and
ss
and
inc
nop
xor
xchg
fwait
aam
aas
lret
xor
xor
adc
push
filds
nop
push
or
neg
push
jae
lcall
inc
inc
cmp
hlt
xor
sub
cld
hlt
cmp
outsb
add
push
pop
xor
pusha
fbld
sbb
stos
jmp
jae
mov
pop
ss
imul
fdivrl
divl
or
pop
inc
add
es
add
pop
outsl
mov
add
mov
xor
mov
mov
test
or
scas
add
push
roll
data16
ljmp
out
add
sarl
adc
add
adc
pop
pop
cltd
xchg
sahf
in
sbb
dec
push
sti
aas
pop
daa
dec
add
mov
gs
push
loop
and
push
push
add
or
xor
out
pop
shll
subl
add
into
cmp
xchg
add
pop
jmp
add
insb
mov
mov
cmc
dec
popf
out
and
xor
add
das
pop
stos
lret
enter
sub
loope
cmc
mov
mov
repz
xor
jnp
push
pop
iret
ja
sbb
insb
fisttps
jno
xchg
scas
add
adc
movsb
sub
ja
movsb
sub
sahf
sbb
pop
das
call
cmp
lcall
dec
mov
or
leave
xlat
pusha
sbb
sub
sub
movsl
test
push
add
xchg
data16
xor
and
jmp
jecxz,pn
js
xor
mov
mov
push
pop
jmp
imul
popl
dec
add
aaa
gs
and
int3
add
repz
sahf
mov
movsb
jne
or
xor
or
xlat
mull
loopne
test
add
add
adc
sbbl
xchg
xchg
mov
or
mov
xlat
add
ja
mov
pop
les
pop
out
scas
imull
pop
dec
sahf
jp
add
int
or
mov
sub
jns
subl
dec
pop
roll
adc
jmp
daa
outsl
cmp
dec
movsl
ds
js
aad
dec
adcb
test
dec
fisubrl
mov
sub
pop
and
mov
leavew
aaa
idivl
shrb
roll
adc
mov
loopne
and
sahf
add
xchg
test
or
pop
fisubs
mov
into
xor
fs
in
loopne
cs
lea
sub
sub
outsl
push
sbb
mov
loop
js
imul
inc
xor
insl
orb
sub
inc
sbb
mov
and
and
shr
inc
mov
or
dec
cmp
imul
or
test
mov
sbb
xchg
fadd
fldenv
push
adc
clc
shll
mov
xlat
xchg
icebp
rcl
dec
es
stc
imul
and
nop
or
push
popa
dec
add
cmp
push
jns
adc
sbb
addb
test
bound
sbb
sub
nop
int
je
and
daa
pop
filds
cmp
cwtl
add
fdivr
and
andl
jl
adc
jmp
out
lcall
leave
mov
jmp
lds
outsl
sbb
lds
inc
sub
inc
lods
jno
cwtl
nop
test
pusha
loop
and
lret
xor
jo
test
pop
xchg
sti
sub
add
aam
cmpsl
popa
sarb
lock
push
jecxz
inc
mov
sbb
mov
or
add
mov
lods
mov
aad
sbb
imul
fisubrl
and
mov
mov
ja
lret
rorl
cmp
push
mov
jle
and
xchg
insl
mov
lahf
orl
xor
mov
xor
popa
sbb
xchg
pop
add
add
cmp
add
jne
xor
push
jbe
scas
test
inc
lock
sahf
sub
sbb
mov
rol
test
mov
bound
sbb
popf
add
push
jb
aad
fcomp
test
or
cmpsb
dec
push
shlb
fisubs
bound
adc
and
pop
je
adcb
mov
or
mov
push
cli
xchg
and
testl
pop
jle
pusha
pop
and
pop
sbb
sahf
fcom
xchg
in
push
jo
movsl
enter
test
mov
jl
push
iretw
out
or
lea
jo
loop
outsl
xor
add
and
mov
cmp
dec
loope
nop
sbb
mov
rcr
adc
into
lock
or
cmp
addb
add
fwait
add
adc
sbbb
call
fistps
inc
sbb
mov
mov
dec
push
add
call
mov
mov
arpl
mov
stos
adc
dec
dec
sbb
out
in
out
push
outsl
bound
mov
or
out
mov
or
xchg
push
mov
insb
loop
push
insb
arpl
stc
jo
mov
mov
mov
addb
sub
out
cmp
cmp
mov
roll
mov
xchg
shlb
jb
subl
cwtl
cltd
inc
jmp
add
sbb
ret
push
sbb
stos
cmp
inc
mov
jae
mov
and
adc
cmp
mov
add
pop
ret
stos
and
cs
add
roll
xchg
mov
daa
mov
sub
sbb
xchg
or
mov
jns
movsb
test
inc
pusha
push
rorb
popa
lods
push
mov
fwait
addr16
movsb
adc
pop
rorb
inc
cmp
jb
dec
cld
mov
daa
mov
jg
cmpsb
jno
mov
mov
fwait
mov
mov
cmp
xor
dec
es
js
mov
enter
push
insl
insb
fisubl
and
inc
push
arpl
dec
mov
mov
pop
inc
lock
xor
and
jae
into
imul
daa
adc
mov
adc
inc
add
in
push
lods
dec
ss
repnz
filds
enter
jle
adc
and
jae
addr16
ljmp
inc
dec
shlb
outsb
popf
inc
pop
jmp
clc
dec
out
inc
sub
add
mov
jae
pop
ljmp
daa
mov
cmpsb
adcl
std
ja
sub
add
mov
push
adc
iret
adc
inc
jo
fistpl
mov
dec
lock
dec
dec
repz
sbb
xchg
sbbl
clc
je
bsf
dec
or
arpl
mov
lret
xchg
in
pop
inc
dec
pop
mov
xor
aam
roll
mov
aaa
dec
adcb
adc
mov
pop
mov
cmp
lods
xor
add
nop
mov
mov
imul
xchg
cld
inc
mov
cmp
ds
sub
mov
iret
sbb
sbb
add
jecxz
push
push
dec
testb
mov
stc
cmp
cmp
jmp
inc
jecxz
xorl
push
adcb
sub
in
sbb
or
cmp
ret
sbb
push
lds
popf
aas
inc
loopne
sbb
mov
mov
lods
stc
movb
shrb
cmpsl
fprem1
push
rorb
or
nop
sbb
sub
add
sbb
cmp
es
add
or
insl
cmpsb
lea
jge
scas
adc
xchg
add
iret
cmpsb
jl
inc
call
fcomps
and
cmp
int3
xor
movsl
push
fbstp
popf
xorb
mov
and
push
clc
and
loope
fadds
dec
inc
shrb
popf
repnz
sub
pushf
shlb
cmp
in
mov
dec
or
sub
mov
in
jb
adc
add
mov
or
xor
xlat
push
adc
inc
sbb
xor
or
pop
xor
add
scas
lods
cltd
mov
lods
sbb
pop
cwtl
loopne
mov
lret
testl
jno
clc
push
ljmp
dec
and
or
popa
ret
xchg
int3
out
jg
push
mov
cli
jnp
les
sub
push
in
xchg
push
inc
data16
and
fadd
xor
lcall
adc
call
xchg
add
inc
cld
add
add
mov
xor
add
mov
shlb
jno
add
adc
loop
fistpl
adc
fs
mov
adc
or
mulb
ret
fdivl
loope
jne
and
push
and
mov
sti
repz
push
or
pop
jmp
nop
add
add
mov
mov
pop
jl
xor
jle
jle
stos
rcrb
movsb
lcall
xor
imul
cli
sahf
pop
sahf
sbb
sub
push
sbb
sub
ss
std
xchg
lret
call
or
movsb
into
adc
test
pop
cwtl
jge
xchg
cwtl
cmp
or
cmp
les
sub
sbb
outsl
or
cs
or
sub
out
push
cmp
arpl
push
pop
cmp
push
xchg
or
sub
lahf
push
ret
mov
lret
push
sub
nop
cld
jb
das
bound
pushf
mov
ja
push
xor
dec
mov
inc
xor
jns
mov
les
bound
push
sbb
sar
cs
aaa
push
or
adc
push
subl
loop
sbb
sub
cmp
aaa
add
and
stc
dec
imul
jmp
dec
test
lods
stos
out
fs
jo
frstor
pop
out
or
sahf
adc
xor
or
std
jnp
dec
leave
fnstcw
xlat
adc
sahf
mov
add
jnp
dec
pusha
pop
inc
mov
fimull
test
arpl
iret
sbb
pop
iret
xor
cmp
in
push
pop
out
add
xchg
fs
fnstsw
in
insb
push
rol
leave
mov
daa
cmp
xchg
inc
in
repz
jb
out
push
or
insb
gs
lock
ds
lds
loopne
cmp
xchg
mov
or
adc
pop
cmp
out
add
shlb
xor
dec
loopne
xor
les
push
or
nop
pop
push
in
cs
imul
jmp
sbb
or
xchg
sbb
loop
xorl
mov
jnp
jns
outsl
xor
mov
test
icebp
xchg
push
aam
std
adc
leave
imul
sbb
push
les
ficoms
or
ror
or
aam
and
add
in
push
cmp
xchg
insb
test
pop
jo
clc
or
shll
das
jne
dec
jl
imull
ss
mov
sar
outsl
push
sub
add
das
outsl
iret
inc
pop
xchg
out
dec
leave
fsubs
mov
in
rclb
pop
pop
jge
or
push
mov
aad
inc
or
cmp
dec
push
or
dec
inc
add
stc
idiv
xchg
addr16
into
idivl
inc
roll
jno
ljmp
shlb
mov
add
and
mov
or
ret
jmp
xchg
push
sbb
mov
test
dec
fs
xchg
lret
mov
lock
movb
test
add
mov
sahf
mov
mov
scas
sar
lcall
inc
movsb
mov
xchg
aaa
sbb
cmp
and
rcr
inc
pusha
xchg
call
pop
jns
std
and
popa
sbb
scas
stos
mov
jge
hlt
test
popl
cmpl
jecxz
negl
or
and
dec
sahf
and
cld
flds
xor
and
jmp
ljmp
jno
push
xchg
inc
jbe
add
lock
shlb
push
scas
jb
and
mov
test
push
jns
test
shll
add
pop
push
or
repnz
loope
rcr
movb
pop
outsl
mov
out
or
shll
mov
adc
mov
stos
inc
test
rcrl
push
movsb
and
pushw
fs
lahf
push
add
inc
test
sub
and
and
sbb
xor
push
mov
rol
shll
sbb
xchg
arpl
pusha
push
insl
push
adc
inc
cmpsb
in
cmp
je
cwtl
or
mov
dec
cmp
popf
mov
add
movsb
adc
xchg
push
push
out
rorb
in
add
inc
mov
mov
mov
int
xor
lock
addr16
jmp
mov
into
js
loop
jg
sbb
and
aaa
xchg
mov
and
inc
inc
rolb
add
sub
addl
aam
enter
lcall
sbb
js
ljmp
xchg
adc
and
js
and
punpckhwd
cmp
adcl
jge
mov
or
lock
inc
sahf
or
sti
xchg
iret
in
sbb
nop
cs
jo
aad
in
addb
lock
add
lods
cmp
insl
add
sahf
lcall
cmpl
mov
xorl
fnsave
push
lret
into
dec
lcall
xchg
dec
adc
dec
lds
lods
mov
xchg
cmp
in
imul
lock
adc
jno
pop
in
mov
sbb
push
add
xchg
push
pushf
mov
push
movsb
lcall
lahf
lret
scas
xchg
adc
sbb
and
sub
xchg
out
push
mov
xchg
mov
insb
add
pop
aas
out
push
xchg
aam
cwtl
xor
ror
xor
mov
sub
mov
jnp
jp
and
or
xchg
punpcklbw
cmpsl
rol
in
and
lret
incb
and
fmul
call
and
mov
data16
jmp
or
inc
lahf
lods
jmp
fs
pop
lock
enter
aaa
ss
mov
push
fisttpll
in
push
pop
popf
mov
xchg
movsb
mov
push
pop
adc
aad
stos
or
push
call
jl
jbe
push
mov
jp
add
icebp
and
cmc
add
loopne
or
lds
inc
outsl
xchg
dec
push
sbb
xchg
sbb
xor
lods
mov
sub
dec
insl
ret
sbb
jmp
xchg
mov
inc
or
aad
and
cmpsb
fcomip
aas
xor
orb
ret
inc
and
mov
popa
push
xor
cmp
xchg
out
xor
mov
je
loope,pn
idiv
xchg
movsl
mov
mov
mov
push
test
subb
add
and
or
int
mov
inc
aam
fsts
loop
fcmovne
pop
int
stc
rclb
or
sbb
addr16
cmc
ret
shl
leave
cmp
add
mov
fisubrl
aas
jne
push
insb
mov
push
dec
popa
movsl
ret
and
xor
add
pop
mov
iret
mov
mov
leave
push
arpl
into
sbb
inc
shll
inc
pushf
outsb
xchg
jo
add
data16
hlt
adc
xor
xor
fnstsw
sub
and
dec
pop
rolb
pop
push
add
fmuls
dec
push
pop
lds
cltd
xchg
pop
rcll
push
mov
sub
movsl
sbb
and
mov
cmp
cmpsl
les
push
inc
rcll
pop
jl
mov
btr
or
repz
adc
adc
xchg
call
push
int
xchg
jl
push
int
adc
add
loope
fwait
scas
mov
push
mov
or
popa
adc
sbb
sbb
mov
and
sbb
int
dec
mov
leave
mov
push
dec
enter
inc
xor
xorl
das
ds
dec
adc
xor
and
stos
push
pop
xor
xchg
into
pop
inc
jae
and
pushl
mov
test
inc
addr16
xchg
push
rorb
sbb
cmp
adc
ret
mov
rorl
cwtl
or
das
es
mov
push
stos
mov
sub
insb
aam
sub
dec
push
add
sub
inc
ret
and
xchg
push
mov
sahf
mov
orb
xor
stos
fldl
jg
pop
or
cmp
dec
xor
sahf
adc
mov
xor
xor
xchg
xor
mov
cmp
test
or
jle
addr16
jg
sbb
adc
jo
pop
fiaddl
adc
scas
adc
test
fdivrs
jmp
jae
loop
rolb
xchg
push
rcl
call
pop
and
add
mov
mov
pusha
mov
cs
std
pop
cli
add
push
outsl
pop
cmpsl
dec
in
dec
xor
mov
jmp
sub
pop
inc
pop
dec
adc
xor
push
jge
repnz
pop
dec
imul
mov
xchg
ficomps
sbb
ret
repz
inc
fmul
adc
mov
mov
test
lahf
sub
mov
in
out
and
leave
sbb
gs
filds
xor
popa
rcll
das
jl
mov
xor
int3
sub
lea
arpl
sub
adc
sub
icebp
adc
imul
add
in
pop
shlb
mov
call
adcl
ret
jae
xchg
cwtl
mov
subl
cmp
mov
sub
dec
adc
in
adc
jmp
xor
push
outsb
das
add
mov
leave
or
and
enter
or
fisubs
xchg
push
incl
popf
rol
pop
call
xchg
cwtl
cmpl
nop
into
cmp
lds
je
rcrl
fldenv
jb
movsl
nop
pop
add
add
add
pusha
rorb
jmp
test
push
repnz
fmuls
push
ret
js
mov
cmp
pop
push
sbb
adc
fs
dec
sub
mov
fildll
imul
sub
adc
cmp
add
lcall
mov
mov
push
xchg
adc
xor
dec
inc
nop
sahf
inc
and
mov
jnp
inc
jne
pop
cmpsb
add
dec
and
stos
pop
test
adcl
aas
push
dec
push
mov
mov
cmc
jne
call
fstl
mov
cwtl
inc
pop
sbb
pop
testb
inc
xchg
andnps
or
mov
pop
push
push
jns
data16
movsb
mov
or
pop
int
test
jp
gs
stos
xchg
and
in
push
xchg
inc
sub
inc
lds
jp
and
leave
jecxz
or
xchg
sbb
out
dec
inc
and
inc
mov
push
dec
leave
std
xor
add
inc
push
push
xor
hlt
adcl
push
ds
outsb
xchg
rcrb
sub
and
out
add
jbe
in
mov
xor
sub
pop
add
sbb
mov
dec
shlb
fiadds
push
push
sbb
mov
mov
insl
ds
mov
jecxz
lods
mov
int
lods
pop
inc
rorl
shrb
mov
xchg
inc
daa
popf
in
in
je
push
cmp
js
rcrb
adc
cmp
pop
sub
imul
inc
jno
mov
add
pop
sub
pop
enter
xchg
loope
flds
sahf
fstps
aas
and
test
cld
insb
push
popf
shlb
fst
add
mov
and
rcrb
movsb
out
cmpsb
mov
cmpsb
sbb
mov
dec
fs
je
push
or
ss
rorb
mov
cmpsl
mov
cmp
xchg
dec
dec
xchg
rolb
dec
xor
push
ret
repnz
lret
or
pop
mov
je
test
shlb
push
int
leave
sbb
adc
or
pop
sbb
inc
rorb
loop
jo
adc
insl
pop
sub
xor
jae
bound
cmp
sti
or
test
leave
and
sub
xchg
dec
jo
mov
das
xchg
cmc
add
sub
mov
xchg
jp
push
inc
push
ret
enter
adc
jo
push
mov
popa
in
inc
or
inc
addb
std
xor
imul
bound
lcall
dec
leave
into
scas
pop
sbb
and
mov
notb
inc
movsl
lds
add
push
pop
dec
inc
lds
pop
leave
inc
mov
loop
push
mov
xchg
popf
aad
lds
jecxz
or
pushf
mov
pop
mov
and
cmc
jo
sar
mov
pop
inc
xor
fstpt
sub
iret
pop
pop
stos
sub
xchg
adc
test
inc
mov
pop
push
in
cmp
lret
or
jp
jle
xchg
insl
jl
test
dec
push
sbb
sbb
push
imul
xor
sbb
xchg
inc
shll
pop
out
cmp
inc
scas
push
ljmp
push
dec
xchg
mov
push
xchg
push
inc
sub
or
jne
jmp
and
pushf
cmp
add
inc
mov
movsl
pop
sub
adc
dec
cmp
nop
and
test
inc
in
sbbb
mov
sub
retw
xlat
cwtl
cmc
lret
add
xchg
add
nop
cs
insb
dec
sbb
ja
cmp
dec
sub
movb
inc
inc
pop
cld
push
push
pop
pop
divb
imul
dec
dec
aad
dec
enter
inc
in
push
in
and
pop
call
xor
sub
std
inc
jp
dec
inc
inc
push
sbb
add
subb
add
or
mov
or
fs
xchg
jno
shrb
dec
jle
insb
pushl
xor
sbb
repnz
dec
xor
adc
sbb
insb
add
xor
pop
cmpxchg
cmp
push
and
mov
dec
in
dec
sub
lock
mov
insb
mov
add
cmp
scas
push
dec
or
ds
adcb
push
sbb
outsl
in
push
adc
mov
or
dec
and
jp
leave
push
push
pop
mov
and
je
mov
jb
xor
jp
and
mov
shlb
inc
gs
add
cli
or
pusha
push
repnz
daa
shll
test
je
je
inc
das
imul
and
inc
lret
and
xchg
mov
dec
push
into
jl
inc
cli
push
mov
and
and
inc
loopne
xor
or
lea
xchg
add
push
andl
loop
adc
mov
test
push
bound
xchg
add
dec
cmc
les
jnp
orl
or
orl
or
cmp
movsl
add
outsb
aad
and
push
cmp
mov
sub
les
mov
push
inc
push
and
jnp
scas
popf
popf
test
pop
add
movsl
xchg
cmp
in
adc
adc
jnp
or
rcrb
inc
mov
or
scas
test
je
sahf
or
sub
movsb
or
popa
pushf
push
leave
mov
cmp
add
xor
leave
shrl
rorb
lahf
rclb
mov
dec
xchg
cmp
xchg
push
dec
jp
inc
clc
jno
lahf
dec
cmp
inc
adc
mov
mov
sbb
cld
push
cmp
arpl
jns
pop
xchg
enter
rorb
ret
sbb
mov
clc
xor
ret
ds
mov
push
sbb
loop
ret
lea
cmp
inc
pop
dec
mov
pop
sub
add
inc
pop
push
les
xchg
gs
inc
ja
push
inc
sub
xor
in
orb
outsl
xor
mov
sub
push
in
add
movsb
inc
jle
xor
mov
mov
mov
add
jmp
mov
mov
sub
or
cmp
mov
es
nop
int
jmp
fldt
jecxz
add
lods
mov
repz
cmp
push
lock
or
lahf
or
test
pop
out
fisttps
pop
push
add
adc
xchg
push
sbb
mov
dec
cwtl
add
sub
test
ficompl
mov
test
cwtl
inc
and
xchg
call
shrb
xor
lods
adc
loop
mov
pop
cli
lret
pop
add
cmp
sub
sarb
adc
ret
ret
mov
push
dec
int
cwtl
add
push
dec
lcall
stos
arpl
dec
inc
and
adc
test
dec
jl
nop
inc
inc
push
cmp
mov
das
fucomip
xor
xchg
rcrb
sbbl
dec
aad
inc
and
and
hlt
jo
xchg
gs
pop
jo
push
dec
call
cmpb
ret
pop
inc
mov
add
push
inc
outsb
pop
adc
inc
stc
scas
mov
jle
movsb
sahf
ss
aam
jp
cwtl
shrb
in
inc
roll
add
mov
mov
jp
sub
adc
adc
dec
mov
mov
inc
mov
sub
addb
and
mulb
or
mov
dec
pop
adc
adcl
or
dec
xchg
cld
sub
ret
pop
in
filds
sbb
pop
pusha
xor
jae
outsl
and
movsb
orl
insb
fsubl
xor
sub
shrl
aad
mov
push
test
nop
mov
dec
pusha
push
push
xchg
and
and
adc
sbb
adc
cmpsl
popf
mov
sbbl
add
lret
dec
std
sbb
or
aaa
idivl
movsb
test
les
inc
sbb
push
jne
fucomi
fs
andl
add
js
pop
movsl
ret
cs
shrb
ja
out
push
subb
cmp
inc
mov
enter
cmp
add
inc
cmp
lock
pop
adcb
jo
adc
test
xchg
lds
adcl
push
lock
cmp
cmp
inc
ret
and
pop
xchg
daa
mov
insl
addr16
pop
lods
enter
sbb
int
push
jg
mov
les
rclb
addl
in
or
cmpsb
cmp
andb
ljmp
and
leave
push
xchg
les
mov
sub
pop
in
jno
lds
add
pushf
clc
mov
rcll
insl
cli
andb
dec
xor
insl
xchg
aas
push
mov
out
cs
xor
sbb
pushf
mov
or
and
cmp
arpl
adc
aam
adc
or
lds
jmp
dec
sbb
lods
sbb
ljmp
gs
inc
lds
inc
fbld
negb
movsl
add
mov
mov
sbbl
in
add
clc
jecxz
mov
mov
mov
mov
inc
ss
sbb
lcall
lock
xor
nop
arpl
mov
push
ret
sbb
dec
jbe
mov
loope
xchg
imul
lds
aaa
enter
cli
sbb
ljmp
cmp
es
fsts
orl
inc
sbb
pop
popa
loop
cs
adc
jne
cmp
movsb
pop
dec
rcrl
sbb
or
popf
das
sub
jae
adc
movsb
and
leave
aad
push
add
xchg
add
push
cmp
add
mov
add
adc
test
adc
cld
pushf
aam
xor
pop
add
hlt
add
lea
aaa
jb
in
pusha
dec
push
add
out
mov
jl
inc
adc
dec
pop
pop
ja
hlt
and
sti
push
add
pushl
sbb
shrl
jecxz
pop
dec
mov
idiv
lods
data16
ret
pusha
sahf
xor
lea
shlb
push
jo
sub
shlb
arpl
fstps
push
test
lods
inc
mov
test
xchg
mov
call
and
cmc
inc
lahf
xchg
push
add
and
push
data16
movzwl
mov
and
mov
or
sahf
sarb
int
popa
jno
or
push
iret
repz
push
pop
adc
xchg
inc
jecxz
test
or
cmp
jne
dec
sub
fstl
loop
mov
stos
push
popf
inc
mov
out
dec
add
pop
sbb
mov
mov
subb
out
roll
sbb
aad
mov
cmp
jl
and
dec
or
mov
imul
add
sub
adcl
and
dec
std
sub
pop
iret
fsubr
mov
push
dec
leave
and
dec
mov
xor
push
or
lods
icebp
xchg
adc
dec
xor
pop
adcb
push
std
pop
jb
push
mov
mov
stc
mov
mov
aad
ret
lds
lock
or
add
aaa
pop
cltd
fsts
movsl
rcll
jecxz
imul
and
inc
rolb
and
or
mov
xor
sbb
add
stos
add
push
repnz
inc
invd
movb
dec
mov
mov
add
loop
lahf
sub
movb
mov
addr16
imul
mov
mov
movl
jge
jno
test
sarb
dec
ljmp
mov
inc
mov
lods
add
pop
js
mov
pusha
and
xchg
add
xor
jno
sarb
xor
jns
sti
testl
popa
repnz
fwait
insb
adc
dec
xchg
dec
or
jno,pn
adc
iret
mov
sub
ret
add
ss
stc
mov
jae
dec
inc
aas
js
pop
pop
pop
dec
dec
cmp
cmp
popa
add
mov
mov
loop
cmpsl
mov
andl
or
hlt
fld
cs
inc
jle
push
jnp
stos
add
cmp
rcll
xchg
sbb
addl
mov
lock
shll
mov
jo
shl
adc
adc
lock
and
aaa
xor
add
mov
ret
push
or
mov
repnz
sub
inc
dec
inc
mov
xlat
adc
sub
out
ror
cld
in
dec
or
mov
adc
into
ret
lret
jae
push
inc
mov
les
pop
js
bound
jns
cmp
push
mov
enter
jmp
xchg
lea
push
sbb
loop
dec
js
lret
cmp
pop
mov
mov
cmp
jbe
adc
mov
ss
push
cmp
aas
xchg
xchg
ljmp
dec
ret
dec
push
cwtl
shlb
xor
dec
inc
xchg
sti
daa
or
mov
xor
pop
pop
and
cmpb
cld
dec
loop
sbb
stos
push
dec
or
rorl
mov
cmp
int3
pop
push
mov
test
into
scas
pop
andl
fistps
addr16
xchg
inc
sub
sub
fstl
mov
or
xlat
fs
movsb
and
popf
les
add
roll
pop
dec
inc
ss
sub
jae
pop
addb
addr16
add
add
es
sahf
push
repnz
dec
aad
addl
xor
jle
popa
cmp
bound
push
adc
test
aad
mov
jnp
xchg
pop
push
push
shrl
dec
mov
jp
inc
hlt
push
mov
lods
mov
mov
adc
sub
enter
jnp
pop
ret
clc
je
pop
lret
add
add
xchg
cmp
jbe
shlb
pop
pop
lcall
and
or
push
pop
adc
mov
push
and
dec
jbe
push
bound
add
repnz
sar
and
xchg
je
lcall
sub
jns
inc
push
mov
loop
nop
add
je
stos
test
vmwrite
dec
pusha
movsl
inc
ret
pop
dec
adc
inc
push
push
xlat
lcall
mov
mov
mov
loopne
or
test
add
xchg
flds
adc
and
or
xor
and
xchg
adc
cmpl
fmuls
pop
dec
inc
or
sahf
stc
inc
and
adc
popa
lret
pop
xchg
movsl
inc
push
mov
inc
imul
or
or
int3
lock
add
and
int
sahf
js
addb
pop
mulb
inc
adc
add
aad
inc
cmpsl
in
shrb
mov
inc
jo
bound
and
xor
adc
mov
dec
push
mov
fs
out
pop
aam
in
mov
int
and
push
jo
das
loope
fs
mov
and
mov
outsl
jmp
rorb
loop
xchg
and
mov
cs
cmp
aaa
jae
into
mov
pusha
cmpsb
xchg
lcall
leave
add
scas
or
pop
inc
test
stos
add
pop
jl
shrb
pusha
xor
test
add
ljmp
inc
sbb
jmp
mov
cld
jp
pusha
mov
push
sub
add
test
ret
and
lods
adc
ss
shl
enter
rcr
push
inc
push
jle
shll
xchg
mov
bound
jns
shll
lret
or
push
or
and
inc
add
daa
roll
sbb
sbb
pop
add
ret
int
movsl
subb
ret
mov
stos
sub
ja
jl
inc
test
add
jo
or
lret
add
adc
lea
xor
mov
aaa
xchg
push
push
xor
pop
or
popa
inc
andl
dec
ss
inc
ficomps
jo
or
pop
and
jae
pushl
mov
pop
pop
push
ret
cmp
xchg
inc
dec
daa
rorb
insl
pop
dec
mov
repnz
test
fwait
leave
scas
lock
jmp
movsb
arpl
jo
push
popa
adc
shlb
dec
mov
and
xor
adc
mov
xchg
add
repz
inc
rolb
push
stc
push
xchg
cmp
adc
scas
hlt
sarb
jne
loop
scas
mov
or
fld
ret
xchg
or
loop
xor
popa
sbb
bound
fisubrs
push
push
add
lea
aad
int
jns
inc
xchg
shrl
mov
push
push
pushf
ror
leave
jl
pop
rcll
push
lods
and
adc
inc
sbb
sbb
jo
movsl
mov
cs
addr16
or
xor
std
incl
cltd
adc
xlat
popa
ljmp
test
shlb
dec
cmc
push
sub
dec
add
arpl
mov
adc
dec
add
jno
daa
mov
shlb
or
sub
fbstp
mov
cmp
or
inc
cmp
test
clc
neg
dec
and
pusha
push
cmp
mov
cmp
dec
cwtl
cmp
repz
nop
adc
push
aaa
mov
and
xor
std
xor
and
aas
pushf
jo
dec
push
xchg
insb
call
ds
fmuls
js
call
je
sahf
scas
xchg
lret
and
rorl
mov
pop
lret
push
mov
inc
aaa
push
nop
insl
dec
jl
cmpsb
mov
stos
sbb
arpl
jnp
xchg
sbb
xorl
repnz
xchg
into
jo
js
mov
adc
mov
push
or
stos
gs
lea
mov
loop
test
cmp
or
dec
and
sbb
push
pop
sub
sbb
jbe
and
in
xor
ficoms
lret
insl
js
cmp
inc
push
push
sub
push
incl
in
cmc
xor
cmc
xchg
pusha
add
push
rcrb
rclb
sbb
sbb
dec
or
xor
shrb
leave
xchg
mov
rclb
or
dec
xchg
jg
insb
dec
sub
in
jbe
xchg
lea
inc
sahf
jae
mov
add
in
xor
or
inc
xchg
cmp
das
mov
subb
add
in
in
aaa
inc
push
dec
and
cmp
dec
pop
ret
add
sub
nop
mov
cmp
cmp
inc
sbb
xchg
inc
jl
jns
data16
cmp
daa
cmp
xor
in
shl
es
mov
cld
testl
cmp
add
mov
das
js
xchg
jo
sbb
push
mov
dec
push
stc
dec
lahf
mov
sub
call
gs
inc
inc
call
xchg
cmp
outsb
lods
jmp
or
push
into
mov
push
pushf
jno
pusha
enter
das
test
and
aam
cmp
rorb
inc
mov
pop
sub
int3
adcl
dec
ret
inc
mov
jge
adc
pop
pop
icebp
jle
pushf
pop
addl
mov
or
mov
mov
shlb
jo
xor
push
mov
scas
arpl
add
sbb
fnstsw
xor
push
mov
ret
les
insb
lret
sbb
fcomps
inc
pusha
and
lock
loope
add
cmp
xchg
decl
arpl
or
ja
inc
xchg
inc
nop
sbb
mov
ljmp
ret
rcr
xchg
movsb
sahf
add
inc
add
cmp
and
add
ss
setae
mov
ret
jbe
test
and
inc
xor
test
andb
add
xchg
mov
test
push
lret
cmp
mov
unpckhps
movsb
add
cmc
jo
and
sub
xor
xchg
aam
jnp
insb
lahf
and
push
enter
pusha
dec
sbb
pop
stos
pop
gs
adc
and
outsl
xchg
es
inc
inc
orb
sahf
and
sbb
js
dec
out
cmp
mov
rcr
stos
fs
jo
inc
dec
pop
inc
je
imul
add
adc
add
out
or
mov
and
pop
aam
and
dec
cmp
sti
scas
or
mov
inc
or
jecxz
test
mov
and
pop
rorb
xor
call
ljmp
dec
sbb
and
sbb
jns
dec
and
mov
pop
or
jl
push
mov
sub
lods
mov
mov
bound
nop
ret
shrl
sub
cmp
imul
pop
add
adc
mov
das
lcall
mov
push
cs
addb
pop
pop
inc
xor
mov
xchg
adc
xchg
outsl
and
or
cs
aam
es
pop
mov
push
jo
inc
xchg
ret
popa
xor
push
lret
or
jae
or
les
clc
cmp
adc
mov
pop
inc
cmp
inc
cmp
mov
shlb
fwait
imul
sbb
xor
imulb
scas
cmp
adcl
test
orl
test
jecxz
js
pop
xchg
jae
jp
fisttpll
call
push
mov
lds
push
imul
sub
subl
test
js
ja
test
fists
test
out
xor
jmp
xor
movb
cltd
xchg
adc
xor
pop
jp
inc
inc
adc
push
adc
les
mov
jo
add
push
add
mov
nop
xor
dec
cli
inc
or
mov
rcrb
dec
dec
nop
cmp
cs
jge
shr
or
xor
addr16
add
sbb
xor
push
push
jge
repz
mov
xchg
je
or
stos
sbb
mov
stos
add
sti
lret
les
or
pop
xchg
pop
jb
adc
adc
loop
mov
rclb
push
mov
sbb
test
or
jo
lahf
dec
pop
shll
xchg
fsubrl
mov
push
sub
pusha
push
mov
push
or
test
mov
adc
sub
and
test
int
dec
aad
mov
test
jmp
movsl
sub
mov
sub
cmpsl
bound
dec
mov
movsb
or
lods
jae
rorb
hlt
sbb
and
rclb
jmp
mov
xor
add
ja
sti
stos
sarb
fcoml
inc
inc
push
mov
sbb
pop
and
mov
sub
daa
cli
and
mov
shll
add
adc
sbb
adc
daa
xchg
daa
fistl
adc
mov
jge
or
popa
add
pop
inc
xorl
mov
ja
and
sub
int3
addb
xchg
not
scas
gs
mov
test
cmpsl
jns
xchg
push
addr16
seta
movsb
sbbl
stc
push
enter
mov
adcb
or
mov
sbb
lcall
jl
je
and
sub
movsl
in
mov
mov
or
push
add
pop
lods
cmc
out
pop
divb
mov
rolb
mov
fstps
inc
movsl
dec
imul
fstpt
insl
jns
pop
imul
push
aaa
nop
aam
inc
cmp
test
inc
jo
cmp
jecxz
cs
aas
push
add
xor
mov
inc
xchg
test
or
lcall
mov
lcall
sahf
mov
mov
lahf
idiv
add
or
mov
jg
data16
fbstp
idiv
add
mov
pop
call
fisubrs
outsl
daa
mov
pop
mov
mov
cmc
imul
cmc
pop
aas
mov
gs
add
mov
pop
mov
pop
aaa
xchg
cmc
pop
xchg
mov
daa
mov
outsb
mov
add
incl
aaa
mov
imull
mov
mov
mov
xchg
or
cmc
pop
lahf
movzwl
mov
call
push
mov
fnsave
jbe
mov
sub
std
or
std
out
outsb
mov
xlat
pop
fidivs
xlat
mov
mov
mov
movd
mov
mulb
adc
fistpll
jne
jbe
mov
pop
fbld
jae
xor
pop
pop
cmc
mov
xlat
insl
pop
decb
mov
notl
fnsave
pop
xlat
cmc
mov
push
cmpsl
pop
xlat
xor
mov
sbb
mov
sahf
and
jg
pop
daa
popf
jae
mov
mov
or
xlat
xor
jo
push
mull
pop
inc
sub
push
mov
out
scas
mov
aaa
lahf
negl
fsubrs
mov
int3
mov
jbe
ja
ss
jg
push
testl
divl
aas
mov
pop
out
std
add
sbb
dec
jg
xor
xchg
divb
imull
mov
mov
out
insb
jmp
pop
daa
jmp
ret
mov
jbe
iret
fistps
jne
lcall
adc
pushl
jnp
mov
xlat
repz
das
mov
mov
xchg
mov
incb
negb
pop
jae
arpl
inc
push
addr16
getsec
repz
dec
xlat
xor
ja
xlat
xchg
mov
aaa
arpl
xlat
mov
xor
add
jg
mov
pushf
pop
fbstp
jle
mov
add
mov
mov
sub
dec
jbe
lahf
das
mov
or
xchg
dec
ds
mov
xor
push
or
scas
jbe
daa
inc
out
ret
jne
inc
pop
pushl
popa
jae
push
std
ja,pt
mov
testl
sub
sbb
outsl
push
repz
shl
pop
add
ror
mov
or
out
arpl
pop
or
mov
add
scas
pop
sub
mov
test
mov
sbb
inc
mov
push
aas
ds
ja
jmp
xlat
sbb
hlt
sbb
daa
das
stos
xor
mov
and
jg
pushl
sbb
pop
out
repnz
stos
mov
push
in
outsl
call
cltd
inc
jg
mov
and
jno
jg
sub
mov
push
imul
xlat
daa
or
stos
cmp
stos
push
aad
xchg
push
daa
mov
out
lret
pop
lods
push
lahf
sbb
aas
dec
outsb
sti
jl
dec
mov
stos
fisttpl
mov
mov
fwait
mov
js
lret
lock
sub
cld
push
cmp
repnz
xchg
pop
xchg
cmpl
icebp
jno
mov
fcoml
sbb
fistps
adc
aaa
push
test
sbb
data16
inc
and
pop
add
jmp
sbb
das
jmp
and
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
fidivs
gs
push
adc
add
je
mov
gs
cmovle
push
sub
pushl
sub
jb
cmovne
je
jb
arpl
jae
outsb
sub
cmp
inc
outsb
jbe
out
int
std
outsl
outsb
insl
outsb
je
jae
adc
insl
inc
jbe
out
mov
mov
insb
jne
push
data16
imul
dec
push
ss
popa
insb
inc
insb
insb
pop
mov
jbe
inc
gs
jne
outsl
nop
push
pop
fiadds
mov
mov
jo
pop
jnp
int
and
push
outsl
dec
cmp
mov
ret
push
jmp
and
push
jns
gs
and
sbb
lods
mov
jns
and
sub
imul
mov
popa
xor
inc
xor
aas
or
pop
push
scas
shlb
je
jbe
push
ljmp
rcll
pop
add
dec
mov
push
sbb
mov
insl
pop
xor
jae
sbb
cmp
push
dec
outsl
mov
jae
idivb
pop
mov
jb
or
push
outsl
imul
mov
push
test
pop
jae
faddl
js
sbb
dec
cmp
and
push
in
popa
pusha
sbb
inc
inc
push
scas
mov
fs
jae
js
in
cmp
imul
es
jo
or
pushl
nop
adc
aas
add
lock
lock
push
inc
adc
add
xor
pop
add
add
dec
add
pop
adc
inc
lods
imul
or
push
push
or
add
popf
mov
add
push
push
xor
in
mov
pop
push
add
mov
or
lock
and
imul
fidivrs
lret
mov
shrb
and
push
or
jnp
jb
and
jb
add
movsb
xor
daa
inc
add
sub
jae
adc
add
cmp
adc
push
xchg
ja
scas
fwait
inc
jbe
xchg
lahf
mov
mov
cmp
arpl
and
mov
or
push
add
push
sbb
mov
daa
inc
jo
xchg
mov
sbb
shll
add
add
incl
add
adc
mov
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
