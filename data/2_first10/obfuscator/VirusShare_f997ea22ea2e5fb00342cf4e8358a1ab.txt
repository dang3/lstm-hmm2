xchg
and
fwait
or
fcmovu
pop
sub
push
xor
adc
fisubs
imul
aam
popa
xlat
fldt
and
cmp
shll
push
daa
outsl
mov
mov
jmp
xchg
fcmove
ds
loopne
mov
cmpsl
push
in
fcomps
or
test
or
push
idiv
movsb
mov
fdivs
pop
lcall
test
xchg
das
jns
mov
adc
test
add
gs
movb
fsub
mov
jge
js
and
repz
and
cmp
out
mov
and
add
or
scas
pop
jae
and
ds
push
cmpsl
cli
and
mov
idiv
lods
inc
cmp
sar
sbb
fwait
fwait
sub
xlat
cmpl
mov
loope
js
push
out
jge
xchg
jnp
dec
xor
mov
movl
mov
test
pushf
call
fbld
mov
into
adc
insl
clc
push
insb
add
pop
in
push
sub
dec
cmp
mov
gs
and
call
fstl
sub
dec
movl
pop
fsubr
icebp
inc
xchg
pop
in
and
mov
and
popf
cli
js
js
sub
xor
xchg
lods
cli
dec
mov
sti
or
fcomi
stc
test
sbb
loope
movsl
ss
add
clc
cmp
pusha
call
push
cmp
faddp
fwait
push
push
lea
lahf
dec
mov
sub
cmp
rorl
in
lea
or
ja
mov
or
cltd
jl
xchg
data16
shrb
mov
cli
pushl
xchg
inc
stos
inc
adc
sbb
cmp
stos
fninit
dec
sbb
and
movsb
into
neg
aad
dec
icebp
scas
pop
mov
push
movl
pushf
mov
movl
pushf
pusha
lea
jmp
add
dec
outsl
arpl
inc
jb
gs
arpl
adc
test
sarb
repz
inc
mov
sub
jnp
sub
dec
lret
sbb
or
and
cli
repz
xchg
jmp
in
shl
xor
ljmp
outsl
pushf
lret
dec
or
push
movl
f2xm1
jae
push
or
inc
imul
sub
lret
shll
dec
cmp
pusha
pushf
mov
movl
call
pushf
push
mov
mov
pushl
ret
lea
jae
test
cmc
sub
push
mov
lea
call
call
mov
push
jmp
mov
cmc
push
cmp
cmp
test
pushl
jmp
mov
adc
sub
fimull
lods
pop
roll
pop
add
mov
xchg
mov
jns
cs
inc
shlb
cmp
sbb
add
sub
in
mov
cmc
data16
not
lea
pop
das
cmp
sahf
mov
mov
repz
ret
fwait
adc
jnp
xchg
dec
adc
shll
test
cmp
sub
mov
adc
mov
pop
pop
and
inc
adc
movl
lea
jne
bswap
and
or
bsr
xor
rcl
rcl
bsr
mov
sub
neg
add
jmp
add
repz
mov
mov
fwait
pop
jno
in
add
jb
es
stos
andb
pop
ds
jno
ficoms
fwait
push
rclb
and
dec
dec
lret
rorl
gs
sub
insl
call
int3
clc
fdivp
pushl
dec
pushl
cmp
cmp
pushf
shl
pusha
lea
ja
not
pusha
lods
stc
cmp
cmc
cmp
neg
call
lea
jb
push
pusha
pushl
ret
cmp
push
jmp
cmc
pushf
pusha
sub
cmp
call
pop
mov
mov
pusha
pushl
push
pushl
ret
aaa
xor
mov
iret
cmp
xor
dec
xchg
push
std
loop
adc
sbb
jle
cs
fwait
push
mov
cmc
es
shll
cmp
lods
orl
aas
mov
xchg
repz
rsqrtps
xor
add
xor
sahf
sahf
pop
stc
cli
add
aam
dec
dec
lods
pop
dec
inc
push
xchg
jnp
push
mov
sbbb
inc
andl
call
mov
ret
in
aas
jo
sbb
dec
shrl
call
int
repz
xor
fs
sub
fwait
push
pop
filds
cwtl
insb
pusha
sar
int
mov
sahf
mov
fldt
push
cli
or
or
mov
push
fcompl
rep
push
outsb
lret
imul
push
push
mov
mov
mov
mov
stos
inc
fdivrp
lds
fiaddl
or
fmull
push
das
sub
inc
mov
and
cmp
jb
hlt
rep
xchg
xchg
movsb
lods
sbb
les
mov
filds
mov
push
inc
out
pop
in
mov
das
adc
mov
or
inc
nop
adc
dec
mov
movb
pushf
pushl
ret
lret
rcr
add
jno
gs
out
pop
lcall
shll
adc
fwait
xor
xchg
shlb
cmp
mov
movb
outsb
ds
mov
ret
push
push
jl
sub
sub
mov
idiv
jne
aas
aas
adc
in
inc
scas
jns
xor
and
pop
push
lahf
in
xlat
sub
mov
add
rcr
test
xor
jno
sbb
or
or
push
jecxz
or
ss
in
xchg
ficoms
mov
pop
push
je
push
daa
sbb
pop
orb
lock
fsubr
adc
aad
out
fldenv
xlat
fstpl
dec
push
jae
orl
mov
mov
ja
rcrl
pop
mov
pop
stc
sbb
imul
cmpsl
mov
fwait
or
dec
test
in
mov
pop
dec
ljmp
scas
lods
in
popf
jne
faddp
and
and
cld
push
decb
cmp
enter
pop
adc
call
fdivr
test
arpl
dec
rclb
or
mov
dec
mov
cltd
push
fdivs
inc
xchg
fisubl
repnz
pushf
lea
ja
jmp
stos
pushf
setae
jmp
dec
or
rcr
mov
popa
cltd
and
pop
rorl
scas
hlt
movsb
add
outsl
int
fwait
sarl
and
sub
xchg
dec
xchg
pop
add
cs
cmp
arpl
pop
push
in
add
out
ret
movsl
rolb
jo
pusha
pop
xor
add
mov
jle
jle
push
jge
test
push
jg
outsb
jbe
mov
jns
jg
xor
addr16
dec
jns
cmp
and
ror
lret
jmp
jle
xchg
ret
adc
popf
and
and
mov
inc
es
das
stos
popf
test
fs
pop
es
fs
sub
mov
mov
xchg
movsb
jecxz
xor
lcall
int3
test
jb
and
shlb
enter
addr16
stos
pop
pop
icebp
mov
cli
mov
test
pushf
xchg
mov
cmc
dec
testl
sbb
pop
insl
jp
ds
pop
stos
xchg
pop
inc
push
inc
jbe
xor
xchg
cmpsb
cld
std
sbb
aaa
popl
call
and
dec
into
sbb
cmp
test
scas
mulb
dec
out
in
lods
rorl
xchg
push
push
and
movl
sbb
ss
or
addr16
sbb
test
daa
movsb
ja
push
test
test
add
mov
jno
sub
or
test
nop
mov
sbb
add
pop
movzbw
sub
inc
lea
lea
pusha
test
stc
sub
call
lea
jae
shr
dec
mov
bsf
adc
call
call
pusha
pushf
jmp
pushf
lea
ja
jmp
dec
out
ret
faddp
push
fsubs
sahf
mulb
outsl
add
add
cmp
dec
push
and
rorl
jl
daa
mov
jae
sbb
repz
jo
sbb
data16
mov
dec
out
aad
inc
inc
daa
jg
lods
and
jns
nop
dec
out
jle
or
scas
repz
mov
enter
cmp
push
push
lea
jae
push
mov
pusha
add
pushl
jmp
call
cmpsl
repnz
faddp
or
sub
lcall
cmp
mov
xor
xchg
lods
mov
fsubs
or
fwait
addr16
add
aaa
mov
mov
xlat
dec
push
or
mov
jl
movl
push
cli
mov
jb
dec
or
add
jo
dec
shlb
faddp
xchg
pop
pop
ret
adc
mov
adc
fistl
push
cli
pop
fistpl
jecxz
mov
ljmp
es
popa
insl
xor
xchg
rcrl
out
cld
lds
cld
out
and
nop
add
mov
jb
aas
js
add
jae
int3
xchg
adc
leave
inc
lahf
fstpl
inc
call
mov
mov
xchg
int3
iret
cs
adc
mov
pop
scas
loopne
xchg
and
cmp
stos
out
lock
inc
xchg
mov
imul
fldl
fbstp
mov
add
aaa
and
pop
push
shl
add
adc
fdivl
sahf
movsb
ds
lds
repz
fdivrl
adc
ss
arpl
daa
lock
pop
aas
dec
sbb
stc
rcll
inc
dec
jle
shlb
movsl
jl
mov
icebp
jg
ret
jb
sahf
inc
ret
and
lods
adc
insl
ds
inc
out
mov
xchg
adc
sbb
lcall
jnp
jae
and
cltd
inc
cmpsl
js
mov
jge
xchg
xor
or
in
pusha
pop
add
adc
fisttps
pop
int3
subb
mov
nop
cltd
jmp
ret
fdivr
jbe
pushl
jecxz
out
insl
rclb
adc
push
mov
xchg
inc
and
insb
jl
jb
mov
cmpsb
sub
cld
lea
sti
loope
jle
ds
inc
xchg
push
xchg
in
ds
je
test
push
push
push
aas
ret
xchg
adc
jge
cli
cmp
cmpsb
es
lcall
inc
repnz
clc
jb
fisubrs
jecxz
fstp
mov
cmp
in
dec
ret
push
and
pop
pop
pop
cmp
jae
insl
xchg
test
dec
xchg
jle
test
subb
lcall
ret
test
adc
and
int
push
scas
es
jae
jmp
add
repz
ret
inc
push
mov
push
mov
int3
mov
or
out
aad
jo
and
movsl
xchg
lock
mov
fs
mov
shr
jns
cmp
bnd
xor
aaa
bound
cli
sub
int
clc
cmp
imul
cmp
cld
dec
mov
lea
add
cmp
push
push
insb
or
cmp
test
cmp
cmp
jno
enter
fucomip
mov
xchg
xchg
popl
mov
data16
rcrl
popa
sti
out
fwait
insb
fwait
sub
movsb
loop
xchg
dec
mov
pushf
sbb
sub
popf
jl
subb
sub
and
inc
adc
add
ficompl
cli
cmp
pop
push
mov
sub
push
mov
pop
fldt
mov
sbb
push
xlat
out
and
loop
repnz
bound
daa
mov
fsubl
mov
dec
sarl
dec
xor
jae
int
lahf
andl
sub
push
shrb
pop
inc
push
add
adc
sbb
mov
mov
popa
or
sarb
mov
mov
lret
test
incl
dec
adc
jg
ror
xor
mov
inc
mov
mov
popa
aad
jo
push
sub
stos
subl
out
xlat
push
mov
jmp
loop
mov
lods
jae
leave
icebp
jecxz
adc
jmp
jmp
idiv
pop
aam
cmp
mov
sbb
popf
orb
sbb
subl
push
dec
xor
adc
or
add
scas
jl
in
std
cmp
sub
sbb
pop
mov
xchg
and
cld
repnz
add
pop
mov
loop
mov
jl
nop
mov
lcall
adc
add
in
pop
sbb
pop
push
xchg
mov
lcall
jg
pop
and
inc
cltd
cli
arpl
xchg
mov
or
push
aaa
add
inc
mov
jl
pusha
xchg
bound
sti
mov
push
fimuls
mov
aas
mov
out
inc
adc
inc
dec
xor
into
jle
pop
in
pop
mov
ja
jns
mov
lahf
fimull
sbb
mov
into
sbb
or
inc
or
movsl
cmp
pop
pop
xor
or
imul
div
xchg
je
aam
data16
and
test
pop
fdivs
xor
adc
dec
and
sub
pushf
aam
mov
pop
add
daa
dec
jbe
push
push
mov
add
daa
sbb
sbb
sbb
sub
push
xlat
pop
sub
stos
or
clc
call
addr16
popf
sbb
add
cmc
aad
cmp
and
xlat
lock
add
outsl
ret
add
push
pop
adc
aaa
add
inc
daa
out
leave
test
mov
es
lcall
fistpll
mov
mov
leave
and
in
test
cmp
fwait
lcall
sub
jle
add
xchg
sub
xchg
xor
mov
jae
jne
mov
pushf
mov
cmp
jl
lods
jecxz
xor
mov
add
pop
xchg
jp
ds
jmp
fsubrl
daa
shlb
cmpsl
mov
fwait
sub
cmp
test
sbb
lock
data16
mov
jecxz
jle
or
inc
or
fbld
add
into
sub
xor
mov
or
push
je
add
add
or
and
add
xchg
mov
ja
lock
jo
dec
leave
sub
arpl
cli
out
jg
data16
fistpll
rclb
jmp
push
add
xor
andl
imul
mov
adc
movsb
ljmp
inc
xchg
adc
pop
rcrb
cmpsb
jecxz,pt
pmovmskb
sbb
jne
fmuls
adc
sbb
dec
aas
adc
sub
xor
mov
cmc
fs
mov
rorb
pop
xorl
lret
leave
sub
insl
mov
les
int3
pop
sub
dec
xchg
pop
fsubrl
sbb
lcall
mov
test
and
mov
cmpl
insb
in
inc
dec
adc
jp
or
mov
scas
xor
mov
leave
sarl
xor
loopne
divb
lods
hlt
mov
je
xor
ffree
cs
pushf
pop
push
xchg
fs
sub
xchg
stc
mov
pop
xor
inc
out
in
fdecstp
mov
inc
imul
mov
lcall
xchg
jb
pop
xlat
mov
jb
adc
das
rcll
repz
jne
xor
and
lahf
test
loop
cmp
mov
mov
sub
dec
xchg
ja
loopne
mov
hlt
dec
rcll
xchg
push
push
and
xchg
imul
xchg
inc
xchg
xor
insb
cmp
jo
shr
out
cmp
out
sub
pop
pop
scas
and
dec
imul
adc
cmp
dec
addb
aas
vshufps
insl
or
out
mov
push
pop
cmp
mov
cmp
loop
sti
sub
push
shlb
xchg
jp
jmp
mov
ret
push
mov
and
inc
mov
mov
mov
mov
sbb
stos
pop
fldcw
stos
lds
jl
ds
jno
xchg
ss
cmp
shlb
pushf
mov
dec
rcrb
jmp
test
mov
loop
in
jg
xor
repz
add
cltd
cwtl
dec
mov
test
out
inc
std
push
push
push
std
and
cli
sti
outsl
sbb
ret
pop
jb
ret
movsl
outsl
loopne
shlb
js
push
lea
inc
jne
push
out
and
shll
sub
cwtl
scas
ja
outsl
insb
cmp
add
mov
in
pop
cs
in
aad
lcall
push
jl
mov
push
lret
pop
in
aad
mov
roll
jmp
test
xchg
adc
mov
js
pop
xchg
cld
repnz
and
lahf
jne
add
sbb
and
rcl
les
fistps
into
fisubrs
in
shlb
and
in
mov
fldcw
fsubl
mov
pusha
xchg
push
mov
data16
aam
add
out
fimull
mov
adc
or
cli
push
cwtl
pop
lock
hlt
adc
cmpsb
mov
mov
ja
cwtl
mov
js
xor
dec
pusha
es
enter
loope
push
jo
mov
cmpl
lahf
addr16
mov
fwait
sbb
in
lea
jae
pusha
adc
adc
mov
adc
mov
inc
cmp
in
hlt
sarb
or
daa
cmp
jg
pop
and
jbe
jecxz
je
ret
mov
cmp
xor
fs
xor
push
sbb
and
push
lahf
push
repz
push
mov
shlb
cmp
xor
mov
sbb
push
lret
pop
pushl
adc
int3
lret
adcl
jecxz
mov
sbb
inc
sbb
mov
addl
cmp
sub
shll
xchg
mov
cmpsl
push
in
mov
cld
mov
push
mov
jae
pushf
in
sbb
adc
push
add
inc
inc
xchg
dec
out
sub
inc
xchg
xor
mov
cmp
jge
mov
dec
jns
lea
add
jmp
leave
cmp
pop
push
fwait
jbe
sbb
sub
ds
sbb
orb
ret
push
mov
rcrl
inc
adcb
mov
push
cli
xchg
jno
mov
fildll
inc
jecxz
jle
mov
cwtl
cltd
inc
js
sbb
cwtl
dec
adc
ja
cmc
xchg
or
mov
data16
xchg
sbb
dec
or
lods
mov
test
and
test
sub
dec
mov
sub
imul
pop
test
imul
or
gs
xchg
jmp
push
out
hlt
inc
pop
push
leave
lods
push
imul
jno
xor
gs
mov
ficompl
les
outsl
stc
xor
add
clc
dec
mov
add
gs
adc
pushf
cmp
pop
movsl
mov
xor
stc
lahf
sbb
mov
cld
sbb
pusha
dec
jo
cmp
inc
imul
xor
xor
mov
repnz
mov
push
push
inc
fs
cld
pop
aad
inc
mov
je
and
push
stc
lds
mov
test
pushl
add
inc
push
mov
sbb
lds
cmp
std
ja
mov
imul
popf
cld
xor
sbb
push
aad
xchg
int
leave
or
rorl
int
lods
jnp
jle
push
sub
mov
xor
push
outsb
insl
push
sub
outsl
sub
push
push
out
cltd
push
mov
insl
iret
dec
jns
xorb
jmp
sub
jne
aaa
test
pop
xor
xchg
pop
and
scas
aaa
mov
sub
and
shlb
aam
lock
popf
inc
scas
fs
dec
les
cmp
pop
and
mov
add
sbb
cmpsb
aad
cmpsb
ja
repz
jno
imul
xor
adc
xchg
hlt
dec
testl
mov
mov
aad
sbb
push
mov
andb
fdivrl
mov
leave
add
and
and
hlt
mulb
fbstp
and
pop
jp
jecxz
adc
shlb
flds
roll
repz
xchg
pop
in
les
dec
pop
aas
or
cs
sub
pusha
ljmp
mov
push
jno
and
data16
xchg
lret
cwtl
mov
mov
in
adcb
enter
push
xlat
hlt
cmc
les
jle
lahf
popa
movb
lcall
movsl
fimull
mov
jg
pop
mov
mov
flds
dec
int3
movsl
test
das
std
clc
xchg
mov
pand
adc
mov
jp
push
jns
and
leave
hlt
int3
fistps
add
xor
fucomip
cmp
stos
clc
nop
outsl
add
xchg
je
test
int
rcrb
mov
es
mov
mov
out
mov
cli
stc
lcall
mov
repz
xchg
jb
mov
mov
inc
push
xor
outsl
push
ss
arpl
gs
mov
pop
test
xchg
outsl
js
jmp
mov
in
lods
ret
loop
mov
repz
fisttps
xchg
inc
adc
inc
repnz
mov
int
out
je
outsb
aad
movsl
xchg
orl
std
popa
sub
imul
xchg
mov
push
fbld
or
movsl
sbb
jo
mov
cmp
adc
push
sub
push
sbb
sbb
inc
xor
push
in
rorl
rclb
mov
lahf
aaa
insl
sbb
cmpsb
jae
mov
out
cmp
movaps
bound
sti
enter
call
cld
subl
iret
js
jno
lods
add
das
clc
shll
push
mov
cld
mov
loopne
mov
lock
jo
push
push
stc
inc
vpminub
lahf
ret
push
adc
add
jae
and
and
sub
out
cmp
jge
xchg
add
xchg
push
or
ljmp
xchg
pop
push
test
push
mov
fadds
test
add
sbb
push
repnz
dec
adc
jmp
xchg
xor
cmp
xchg
sub
mov
adc
inc
mov
pop
mov
sub
stos
icebp
adc
mov
dec
xor
int3
cmp
pop
and
sbb
aad
mov
xor
inc
lcall
out
sub
mov
jg
loop
loop
jl
lcall
jge
cli
adc
sar
outsb
daa
pop
fnstenv
bound
aam
jb
insb
aam
jle
or
call
jle
movsl
jb
mov
sbb
dec
mov
shr
push
sub
adc
dec
sbb
clc
pmaxsw
mov
daa
lock
fimuls
fiaddl
test
adc
lea
decl
fsts
das
or
sub
jnp
adc
fildl
cmp
pop
xchg
in
mov
idivl
testl
cli
mov
mov
scas
pop
jg
dec
inc
arpl
fimull
xor
cmp
dec
les
stos
xchg
sub
mov
lret
nop
mov
fsubrp
xchg
es
flds
sbb
call
loop
mov
test
xor
push
xchg
lret
adc
mov
and
push
enter
shlb
flds
mov
sbb
or
into
mov
or
jg
mov
and
call
pusha
lea
jge
pushf
lea
jb
pusha
pushl
ret
push
pushl
lea
call
jmp
cmpb
pushl
jmp
movb
movl
movb
mov
pushf
pushl
lea
jmp
mov
call
imul
pusha
pusha
call
pusha
mov
bswap
mov
call
pop
add
lods
and
sbb
scas
cmp
cli
movsl
in
daa
xchg
in
test
push
dec
pushf
sbb
and
icebp
fistl
jno
mov
and
movb
cmpsb
insb
pand
mov
movsl
jnp
or
lret
lcall
inc
inc
js
jmp
lods
inc
inc
in
jnp
pop
xlat
sub
imul
push
or
pop
cmp
xor
stc
or
pusha
adc
pusha
pushf
pushf
mov
pushl
ret
mov
rol
call
imul
call
mov
push
xlat
faddp
movsb
daa
push
adcl
mov
lret
lods
std
call
insb
clc
xchg
lret
data16
jae
out
daa
cmp
xchg
mov
xor
and
rorl
orb
jno
aaa
sahf
xchg
dec
xchg
out
xchg
lahf
and
inc
int3
stos
inc
sbb
test
mov
lahf
add
dec
fisubrs
fwait
lret
rolb
xacquire
leave
fucomp
aaa
sub
xlat
faddp
int
int
push
mov
mov
push
mov
stos
cmpsb
mov
lahf
sbb
jns
pushf
xchg
sub
subl
jnp
mov
sub
or
cld
xchg
cld
loop
and
pop
aad
mov
jae
in
ljmp
pop
scas
mov
scas
enter
cld
das
adc
mov
lods
mov
shll
mov
ret
adc
dec
xchg
dec
ficoms
push
out
mov
adc
xor
and
cmp
mov
lods
mov
inc
cmp
dec
mov
add
mov
and
fcomps
daa
loopne
jle
out
push
repz
adc
addr16
cmpsl
jbe
arpl
or
mov
push
and
cmp
push
fcomp
ret
stos
dec
cmc
fists
sahf
fdivrl
push
add
cmp
mov
xchg
push
mov
out
repnz
add
enter
add
dec
ljmp
pop
ret
mul
cli
mov
stos
test
and
aam
cmp
les
in
loope
mov
dec
cmpsb
scas
cmc
mov
pop
fdivr
push
and
mov
mov
add
adc
cmp
cmpb
pushf
push
lea
jne
btc
xor
dec
mov
test
shr
shl
pusha
add
call
jmp
lea
je
bt
stc
bt
call
clc
call
sub
xor
setno
call
dec
xchg
pusha
ret
cmp
jecxz
rcrl
pop
cmc
shll
movl
insl
cmp
jp
push
cmp
cmp
push
mov
lds
imul
inc
loop
and
jle
jo
jp
or
adc
movsb
insl
sar
cmp
push
clc
insb
jmp
cmp
test
add
sub
jg
add
pusha
dec
pusha
lea
jne
bsr
rol
bswap
cmc
mov
clc
pushf
jmp
call
movl
pusha
push
lea
jbe
push
movl
push
push
mov
pushf
lea
jmp
mov
test
shl
shl
mov
test
push
mov
not
bsf
bts
push
ror
movzbw
push
mov
xadd
and
push
btc
push
jmp
ja
cmc
add
jno
pusha
movb
lea
jne
push
push
pushfw
popw
inc
or
mov
pusha
pushf
neg
cmc
pushf
rol
cmp
clc
call
or
fcmovu
ret
iret
xor
and
push
dec
and
jne
jo
or
cltd
dec
jb
imul
push
push
cmp
add
mov
mov
ss
fs
dec
jmp
and
mov
int3
or
pop
stos
je
test
mov
movsl
sub
pop
mov
mov
and
fnsave
push
jecxz
fbld
fwait
cs
faddp
cmp
xchg
test
rorl
xchg
lcall
sti
ljmp
dec
ds
xor
xor
out
daa
cmp
and
inc
jnp
pop
movsb
mov
lods
das
inc
lret
stos
or
jp
popf
lds
and
push
in
ret
and
gs
cs
inc
out
lret
mov
inc
js
sarb
cmp
jecxz
fs
call
call
pop
lahf
jae
faddp
and
pop
rorb
aaa
ficompl
les
mov
loope
push
fdivs
add
or
mov
jo
mov
loope
cwtl
add
xor
sarb
aam
movsb
mov
adc
adc
xchg
add
leave
mov
mov
movb
lea
jmp
shr
test
mov
bt
pusha
cmp
pushf
lea
je
cmp
pushf
stc
call
add
jmp
push
ret
push
cmpsl
cmp
mov
cmc
xor
rcrl
movsb
xchg
lahf
leave
cli
mov
push
mov
sub
test
cmp
jns
orb
test
stos
ret
aam
dec
ret
call
sahf
data16
fs
xchg
lret
outsl
and
add
adc
adc
mov
inc
out
push
stos
sub
sbb
xor
icebp
andb
orb
arpl
mov
xor
jle
pop
out
pop
lret
addb
mov
push
xlat
pop
pushf
popl
jle
dec
mov
mov
rorl
xlat
mov
loop
mov
mov
cmp
jnp
mov
push
test
or
out
dec
loope
push
sbb
cwtl
pop
sbb
sub
insl
ja
js
xor
fwait
cmpsb
jge
rcll
xor
outsl
push
xchg
mov
jecxz
ljmp
or
dec
add
mov
loope
sbb
cmp
add
dec
cmpl
rcrl
out
sbb
mov
push
and
lahf
jo
fiadds
rolb
insb
rcrl
inc
sbb
or
or
xor
lock
sub
js
sub
cmp
dec
pop
push
xchg
out
arpl
ja
in
cmc
or
test
cmpsl
xchg
js
xlat
leave
mov
hlt
jp
inc
push
aam
mov
ljmp
mov
jbe
int
mov
push
orw
adc
cmp
xchg
ret
push
xchg
xlat
dec
mov
xchg
fidivl
popa
in
fsubrp
xchg
jecxz
and
jmp
loop
jp
int3
ja
lea
scas
cmp
icebp
mov
inc
into
cmc
aad
inc
mov
cmp
mov
push
fmulp
xchg
sub
mov
pop
sub
stos
inc
aad
cmp
out
sti
sub
std
xor
jmp
adcl
popa
in
cli
call
int
mov
cmp
cltd
and
sub
test
mov
mov
call
jae
loope
popa
ret
outsl
sbb
sbb
jbe
jecxz
add
and
mov
addr16
pop
pusha
or
adc
and
xor
jecxz
gs
sbb
sub
sub
ret
call
jmp
mov
scas
jns
adc
fists
aad
lahf
outsl
jbe
out
sbb
xor
out
aaa
fistpll
je
movsl
mov
mov
ss
cmp
pop
jo
inc
lret
in
addr16
jp
fwait
sub
mov
inc
rolb
ret
loopne
fsubr
stc
jmp
adc
or
aam
outsb
add
mov
pushf
sbb
push
push
fstps
sar
pop
or
outsb
adc
sub
sbb
and
mov
mov
mov
das
xchg
or
icebp
sbb
cmc
pop
shll
idivl
push
dec
or
aas
pushl
xchg
inc
negl
pusha
lock
loope
addr16
ds
add
imul
mov
nop
xchg
pop
loopne
ret
xor
dec
mov
cs
dec
pushf
mov
xchg
movsb
jb
dec
adc
adc
ja
mov
and
mov
mov
mov
sbb
mov
pop
sub
enter
dec
aad
jno
mov
je
aad
sbb
pushf
jno
aad
mov
mov
and
sti
sub
inc
testl
jne
fs
jbe
sbb
sbb
sub
xchg
movzbw
or
stc
mov
ror
pushf
mov
test
bsf
xadd
add
btc
shr
sub
or
dec
mov
sub
shrd
bt
bsr
add
pusha
mov
lea
pusha
pusha
mov
not
lods
push
stc
jmp
imul
gs
xor
cs
insb
add
ret
aam
cltd
cld
inc
mov
xor
push
cmovnp
inc
hlt
ljmp
out
push
lret
loopne
lds
into
cmp
out
sub
sub
cmp
cld
aad
jge
fidivl
aas
fstpl
cmc
mov
cltd
std
je
or
and
test
test
lcall
mov
sahf
push
bound
cmpsl
sarb
ja
sbb
jl
or
mov
sbb
pop
inc
pop
mov
and
and
pop
xor
push
and
adc
andb
int
fsub
faddp
mov
xchg
or
sahf
adc
sbb
in
and
pop
into
jb
jns
push
mov
inc
repz
push
das
cmp
lcall
das
cwtl
mov
push
pop
pop
jmp
xor
cltd
dec
sbb
insb
in
jmp
lock
jo
pop
pop
sbb
xchg
into
xchg
mov
cwtl
push
and
into
test
inc
cmp
imul
pop
pushf
lea
jne
not
push
mov
mov
pushfw
popw
pushl
mov
jmp
xor
loop
ret
movsl
std
movsb
add
icebp
sub
jecxz
add
pusha
xchg
adc
ret
sub
and
imul
and
pop
aad
sbb
sub
sub
das
in
sub
pop
data16
jns
lea
and
adc
lcall
cwtl
inc
pop
addr16
lahf
sub
ret
stc
push
fisubl
fs
call
pusha
jmp
mov
push
faddp
push
rcrb
dec
cli
sub
pop
mov
pop
sbb
test
rorl
inc
or
mov
dec
lahf
je
jns
inc
ret
sub
pop
push
inc
nop
lret
mov
test
push
insb
inc
enter
pop
mov
pop
scas
ss
mov
sbb
xchg
or
mov
dec
jno
mov
inc
ljmp
dec
adc
dec
aas
push
jae
fistpll
pop
jge
sbb
fs
jne
pusha
neg
shl
mov
inc
stc
clc
sub
call
jmp
and
xchg
jecxz
ret
sub
js
inc
mov
inc
inc
fwait
aad
xchg
adc
loope
cltd
cmp
js
adc
daa
pop
cmpb
fistpl
cmp
shl
jge
push
push
xor
loop
sbb
jg
push
xchg
bound
add
movsb
sbb
mov
insb
sbb
push
mov
mov
cmp
or
mov
cwtl
mov
jne
pusha
add
in
ret
xchg
push
dec
jmp
dec
scas
repz
pushf
push
xchg
jmp
mov
stos
mov
je
jns
es
in
daa
aas
lahf
mov
shl
pop
mov
shr
lret
push
test
pop
ja
clc
cld
mov
inc
adc
cmp
sbb
jle
int
mov
pusha
adc
ret
in
lcall
push
and
dec
in
ret
cmp
sub
insl
xor
xor
in
shl
in
push
xor
sub
in
push
sub
repz
jl
out
in
data16
xor
scas
scas
xor
mov
leave
or
adc
rcl
call
not
adc
sbb
add
push
leave
and
adc
pop
lcall
jmp
addb
cmp
xchg
push
lret
rolb
or
mov
insl
enter
cli
data16
mov
loope
mov
sbb
mov
aad
pop
stc
test
and
lods
lods
sahf
adc
pop
mov
pop
cmpsl
sahf
mov
and
mov
insl
jne,pn
shl
loop
jb
movsl
cmp
jno
cld
hlt
xchg
fs
mov
jb
jg
adc
mov
sbb
fildl
into
cld
stos
stos
mov
add
lods
xchg
cmp
aam
cmpl
or
pop
icebp
add
in
ret
roll
xor
sbb
mov
cmp
scas
adcl
repz
add
fstpl
cmp
ret
mov
mov
inc
in
sbb
mov
inc
ret
add
test
scas
stc
and
xor
sahf
sbb
inc
cltd
adc
adc
mov
out
add
inc
inc
arpl
lods
or
icebp
test
ss
imul
and
insl
xor
mov
out
ret
lods
sbb
dec
mov
daa
rorb
xchg
daa
cmpsb
jae
jl
fs
call
js
dec
imul
pop
scas
cmpsb
outsb
decl
loope
xchg
and
jnp
or
sub
lret
stos
cmp
das
xor
jecxz
dec
cmpsb
jp
cmp
iret
hlt
jae
ss
sub
das
out
or
les
repz
jnp
sub
call
lock
lahf
cmp
xchg
lret
fistpl
out
mov
arpl
imul
push
call
enter
sti
daa
cmp
lcall
cmp
aas
mov
sti
sbb
ljmp
pop
fldenv
add
aad
shlb
xor
push
sahf
std
repz
pop
ficomps
push
push
lret
aas
jmp
fdivrs
mov
test
jno
xor
lea
jne
clc
xor
sub
mov
xor
add
shl
test
call
push
fists
faddp
addl
insl
jno
ljmp
dec
jo
out
ja
sub
scas
negl
push
mov
xchg
arpl
ds
inc
jns
or
mov
js
push
add
add
mov
out
mov
jno
outsb
push
out
fmuls
out
lods
pusha
clc
clc
clc
neg
pushf
rol
clc
cmp
cmp
test
xor
jmp
dec
stos
call
sti
scas
cli
insb
les
push
iret
pusha
fwait
pop
pop
enter
and
or
pop
cmpsl
bound
xchg
cmpb
or
jo
push
and
rclb
pusha
push
pop
dec
fdivl
fucom
mov
xor
sbbl
inc
xchg
subb
mov
divl
ret
dec
mov
adc
fmulp
dec
dec
inc
mov
dec
adcl
cmp
inc
sub
in
add
mov
cwtl
popa
addr16
sbb
jae
or
jnp
fdivrl
mov
mov
lods
sub
clc
aam
jle
sbb
push
push
jns
mov
sub
fstl
loop
fcomp
push
test
cmc
inc
fwait
fs
xchg
sahf
cmp
mov
adc
push
jae
sub
xchg
dec
and
lahf
jae
cld
in
jnp
imul
dec
jecxz
pop
sahf
push
les
mov
lahf
out
mov
inc
cmp
loope
fidivrs
inc
lea
xchg
and
jnp
pop
pop
xchg
int
push
sub
jae
fwait
cld
dec
jae
out
cmp
push
in
fstpt
xlat
lcall
kunpckwd
or
cltd
dec
dec
inc
jmp
cmp
push
push
push
ficoml
fs
in
sub
mov
sbb
sbb
mov
and
mov
into
mull
aas
mov
adc
sbb
scas
mov
fdivrl
dec
sti
iret
xor
aas
lret
jge
leave
shll
pusha
sbb
dec
std
xor
out
or
div
cmp
jnp
aad
xor
sbb
fs
subb
sahf
sub
sti
dec
xor
cmp
repz
sti
xor
dec
push
fcomi
mov
adc
push
mov
sbb
or
mov
sbb
add
pushf
std
mov
lret
iret
adc
pop
jo
adc
adc
sbb
xor
pop
and
fmull
iret
pop
std
movsb
insl
mov
fstpt
inc
push
insb
adc
jne
repz
mov
add
push
xchg
cld
jnp
mov
int3
xor
xlat
int3
mov
push
adc
in
insb
cmpb
add
add
in
xor
or
xchg
int
sbb
jle
shl
add
jmp
arpl
mov
in
aas
xchg
push
repz
and
mov
je
imul
int
movsb
cld
jmp
jb
jmp
push
bound
int3
rcrl
push
mov
inc
push
jl
ret
mov
insb
fwait
jb
sbb
push
inc
push
push
push
mov
push
fsubl
add
adc
addr16
repz
push
fs
mov
fwait
das
mov
popf
xor
push
jecxz
pusha
pop
arpl
jns
mov
das
dec
std
push
enter
cmpsb
mov
mov
mov
into
imul
add
mov
mov
es
fucomip
push
rcr
jecxz
xor
dec
add
adc
add
xor
xchg
decl
mov
inc
pop
imul
roll
mov
out
insl
inc
jno
inc
jns
hlt
jge
push
fstcw
dec
scas
fwait
pop
xchg
mov
nop
inc
push
aam
mov
sti
pop
mov
or
in
fwait
push
and
mov
mov
lcall
mov
push
sub
loope
cmc
ljmp
mov
repnz
mov
cmc
pop
fs
mov
jmp
add
push
stos
lret
push
pop
and
push
pop
push
int3
mov
test
sbb
push
inc
mov
pushf
dec
sub
fcompl
es
push
popa
dec
mov
inc
xchg
push
notb
xchg
adc
mov
push
mov
test
mov
adc
or
lret
repnz
enter
int
rcll
lret
sub
jg
call
add
cmp
or
xchg
xchg
and
mov
mov
mov
jb
lods
popf
dec
push
cmp
mov
fdivs
mov
je
or
les
lods
dec
cmp
xlat
pop
xor
dec
arpl
fsubrs
test
jmp
pop
les
dec
fs
ret
int3
dec
rorl
jp
xor
insb
dec
sbb
sub
clc
loopne
push
xchg
scas
adc
andb
pop
inc
int
sub
add
pop
aad
sub
or
pop
pushl
jle
mov
push
cmp
fnstcw
dec
push
pop
add
push
insb
mov
imul
ficomps
repz
sub
roll
out
and
pop
dec
test
das
cmc
js
das
mov
lret
inc
push
ss
xchg
aaa
mov
sar
mov
aas
mov
cwtl
push
ljmp
pop
and
subb
cmp
jae
enter
mov
lahf
stos
xor
inc
pop
xlat
mov
mov
mov
stos
add
or
xchg
pop
xor
int3
insl
pop
xchg
push
mov
dec
test
repnz
rclb
loopne
rorb
jl
mov
xor
mov
add
mov
jae
jns
cld
ret
add
das
dec
inc
int
test
and
imul
xchg
jae
pusha
lds
mov
ss
inc
sbb
pop
cmpsl
xor
mov
lods
std
xlat
xor
dec
inc
pushf
push
xor
inc
sub
sbb
roll
daa
push
dec
push
dec
jg
sti
fwait
cmp
mov
fistpll
int
add
hlt
pop
jae
sbb
sub
push
pushf
push
out
rolb
fs
jnp
ud2
mov
ja
stos
dec
inc
mov
mov
cltd
cmp
movsl
add
pusha
mov
lahf
lock
imul
jle
iret
mov
std
adc
je
push
inc
rclb
adc
fimuls
sub
jl
sbb
outsb
jno
jg
sahf
inc
mov
mov
mov
or
sub
sub
jp
or
mov
dec
jl
jmp
mov
sarl
je
fs
dec
int
cmp
stos
adc
jl
hlt
add
jmp
mov
out
push
push
fwait
scas
test
pop
sbb
nop
lret
mov
std
sub
test
jp
lret
leave
pop
push
mov
mov
call
nop
mov
mov
lret
push
fstps
cltd
andb
fistl
fwait
into
push
inc
pop
loopne
or
sbb
ror
adc
pop
and
sarb
adc
mov
int
aaa
idiv
xor
sbbb
lret
clc
stos
jecxz
mov
mov
rorl
pop
test
dec
cmp
mov
mov
icebp
pushf
mov
std
insb
les
mov
fdivp
or
jns
lcall
lret
mov
mov
fcoml
fwait
lods
mov
fists
aam
mov
scas
push
lahf
inc
cmpsb
es
shl
mov
dec
cwtl
push
fcomps
scas
and
adc
sahf
push
outsb
push
cmp
inc
lahf
pop
jno
roll
test
xor
je
jl
lds
and
push
and
jae
std
arpl
mov
cmp
jns
lret
fwait
cs
pushf
mov
pop
or
mov
dec
xchg
xor
jg
inc
sub
sbb
jecxz
mov
fsubrl
mov
mov
push
mov
mov
push
lods
cwtl
imul
or
cmc
push
hlt
lods
sbb
dec
arpl
insb
push
xchg
mov
mov
or
movsb
mov
ret
arpl
das
add
jns
dec
adc
sub
push
into
cmpb
dec
adc
push
mov
mov
ljmp
fwait
pop
mov
hlt
xor
rcr
xchg
lods
jl
xor
inc
outsb
dec
mov
jle
sahf
mov
or
push
dec
sbb
shll
jecxz
fists
jae
sub
les
icebp
test
iret
or
jo
add
scas
mov
push
das
adcl
inc
mov
push
inc
inc
cmpsb
clc
pop
dec
repnz
movsb
mov
int3
decl
push
inc
jns
lds
jg
push
xor
out
dec
pop
movsbl
fwait
ret
mov
jg
in
cmp
inc
lahf
lret
out
sahf
lods
dec
pop
clc
loop
mov
mov
bound
push
or
push
push
sbb
dec
dec
mov
rcrb
cmp
lret
cmp
outsl
pushl
rcr
push
sahf
stc
dec
jmp
mov
mov
mov
jb
jae
scas
cmp
sbb
arpl
dec
sub
mov
imul
ljmp
inc
mov
fisttpl
jge
dec
push
dec
jp
mov
jge
adc
mov
addr16
sbb
jl
pop
test
push
add
mov
add
cld
pop
jle
jmp
iret
arpl
out
addb
lock
es
inc
iret
push
subb
mov
add
xchg
fstp
jnp
adc
lods
dec
or
cmp
dec
jns
enter
inc
aam
push
add
int
add
mov
jns
dec
pop
pop
into
and
xor
jmp
sti
mov
ret
or
mov
dec
adc
inc
and
mov
mov
sub
lea
jecxz
or
inc
rcrl
add
mov
stc
loopne
dec
push
mov
xchg
scas
lret
sub
push
aad
mov
dec
and
movsb
aas
sbb
loop
push
mov
insb
inc
jl
lret
hlt
clc
stos
cmp
stc
jns
cld
mov
jnp
dec
cmp
pushf
cmp
xchg
push
inc
aad
mov
or
add
adc
mov
mov
or
and
push
xchg
shrb
adcb
push
aas
sbb
mov
stos
int
loopne
in
cs
adc
cmpsb
mov
jl
mov
ja
faddl
rolb
adc
imul
incb
cmpl
lret
pusha
pop
pop
nop
push
shll
mov
dec
pop
add
adc
jle
ret
mov
sbb
mov
in
inc
outsb
fsubl
push
or
enter
fsubs
jns
loopne
aam
push
sbbl
or
imul
fnsave
pop
lret
dec
pop
fwait
xchg
test
sbbb
fldpi
fs
ljmp
push
sarl
pop
pushf
pop
add
sub
sbb
dec
pop
push
push
mov
in
stos
adc
push
les
pop
outsb
add
mov
jae
push
dec
pop
inc
xchg
jge
xchg
dec
push
pop
popa
jns
or
mov
imul
fs
push
in
movsl
aam
and
in
lods
xchg
test
mov
inc
aad
pusha
and
call
mov
int3
sub
out
mov
das
arpl
into
xor
xchg
mov
jg
dec
repnz
dec
sbb
xor
fldenv
jecxz
sbb
jnp
add
loopne
pushf
mov
xchg
jl
iret
aam
mov
pushf
fwait
cld
push
xor
mov
xchg
in
inc
mov
sbb
rorb
mov
in
cmp
cmp
xor
pop
or
pop
sub
bound
inc
pop
std
cmp
cmc
cmp
aas
or
sti
add
ret
xchg
and
and
cwtl
jne
or
aam
fsubrs
push
cli
testl
fcompl
jecxz
add
lcall
mov
mov
roll
jecxz
and
rcrl
inc
ds
jns
mull
lahf
inc
inc
sub
fsts
scas
pop
movsb
repnz
pop
imul
clc
jle
outsb
pop
test
sti
dec
mov
les
and
add
out
jnp
int
cmp
int3
fnstsw
testl
pop
adc
push
jg
jnp
je
dec
orb
push
mov
dec
sub
js
push
fdivr
dec
sbb
movsl
fwait
out
cwtl
inc
fs
push
mov
dec
lds
lcall
outsb
dec
xchg
int3
shl
push
add
pusha
dec
push
fsubrs
call
aaa
movsw
jl
jns
inc
add
mov
push
cmp
cmp
and
adc
clc
push
xchg
mov
dec
cmp
sti
mov
aam
or
sbb
sbb
mov
bndstx
mov
mov
and
jnp
jb
mov
mov
jo
les
inc
dec
push
loope
and
in
or
test
scas
sbb
mov
fsubrl
pop
mov
xor
icebp
lods
cmpsb
inc
jbe
jo
push
xchg
mov
sbb
aam
mov
inc
cmp
inc
sbb
mov
ljmp
fiadds
mov
insb
jns
sarl
push
mov
ret
repz
push
js
scas
jmp
call
dec
lahf
pop
xchg
jg
divl
clc
icebp
cmp
mov
pop
jle
jo
int3
pop
or
cwtl
push
out
lahf
push
das
mov
rcrl
pop
andl
clc
dec
in
fcmovnu
add
sahf
add
fwait
cmp
push
mov
jnp
cs
das
pop
jae
iret
cltd
scas
inc
aas
std
pop
sub
sub
insb
sbb
dec
cltd
rcll
sub
cmp
shll
int3
call
mov
push
push
adc
and
clc
repz
lret
add
int
jecxz
loopne
xor
out
clc
push
mov
gs
push
js
and
mov
lods
jb
std
lods
add
outsb
mov
sti
adcb
jg
jne
inc
and
pop
xchg
sbb
adc
xor
in
dec
cmpsl
mov
jge
pop
inc
lahf
int
test
mov
clc
movsl
pushf
in
sub
sub
mov
pop
icebp
jbe
cld
lret
adc
xor
fwait
mov
shlb
push
add
std
fildl
or
clc
aam
imul
cld
jg
sub
jno
fidivrs
sub
dec
into
jmp
and
fisttpl
sbb
dec
push
scas
aam
js
adc
inc
jge
cld
div
fstp
test
cmp
push
pop
std
dec
cwtl
insb
mov
dec
inc
inc
jecxz
sbb
es
into
fcoms
inc
push
nop
scas
cltd
mov
paddusb
rol
ret
fstpt
repnz
or
dec
adc
cmp
and
mov
movsb
inc
mov
ficoms
sub
dec
into
pusha
ret
jmp
mov
insb
mov
sbb
push
scas
mov
ds
or
int
sbb
pop
mov
adc
dec
jecxz
in
ljmp
into
mov
sbb
arpl
cld
icebp
xor
mov
ret
imul
jle
stos
pop
cmp
scas
and
mov
push
push
mov
shll
and
pop
dec
test
mov
mov
into
lods
insb
arpl
in
cmc
inc
jnp
inc
ret
fwait
sub
mov
sahf
xor
inc
cmpsb
outsl
push
mov
aas
outsb
sub
push
sub
add
hlt
aam
jg
addb
pop
mov
jle
mov
sub
adc
or
repz
hlt
jecxz
aas
or
mov
push
dec
fmulp
imul
push
lods
sub
dec
adc
mov
call
inc
pusha
pop
jmp
sbb
mov
outsb
je
adc
jo
call
xchg
mov
ret
pop
andb
xor
xor
sar
imul
fstl
jns
xor
fs
inc
shll
dec
inc
xor
mov
jle
mov
mov
sub
jns
add
push
test
inc
je
cli
mov
out
scas
sbb
sub
lods
aas
xor
shrb
daa
cmp
bound
je
pop
decl
sub
test
cmp
mov
push
pop
lods
iret
dec
pop
imul
push
ficomps
push
cmc
pop
call
inc
dec
push
inc
xor
addl
xchg
into
in
movsl
fwait
sbb
mov
dec
fcmovne
aad
repz
or
ret
mov
cmp
adc
neg
icebp
mov
cmp
push
cmp
scas
pop
sarl
movsb
ja
adc
testl
icebp
cmc
pop
cltd
mov
lods
in
push
movsb
jmp
jae
dec
jge
mov
scas
cmp
sbb
aad
lea
in
cmp
and
mov
or
icebp
jle
mov
in
pop
out
fstpt
add
pop
or
mov
add
stos
or
enter
lds
rclb
pop
xor
ja
jne
mov
daa
add
inc
pop
mov
xor
push
pop
call
test
push
pop
insb
mov
sbb
xchg
dec
lret
push
sti
in
insb
dec
sub
pop
repz
lea
jecxz
fcomps
cmp
sbb
xor
int3
fisubs
add
stos
pop
lods
mov
xchg
aad
sub
int3
es
or
inc
push
mov
cmp
notb
aaa
popa
lahf
mov
andb
out
pop
push
push
lods
cmp
scas
push
repnz
fnsave
xor
popf
pop
sbb
mov
mov
dec
sbb
mov
mov
popa
dec
repnz
add
pusha
push
fbld
fcmovnb
inc
push
outsb
sub
incl
in
push
dec
inc
clc
cmp
mov
xorb
and
mov
test
or
ss
adc
jle
pop
xchg
add
daa
push
out
pop
decl
clc
mov
pop
jns
into
iret
lcall
fs
jnp
iret
sub
xor
decb
or
mov
xchg
xchg
fwait
test
decb
fcoml
aam
dec
pushf
lods
and
shrb
xchg
push
out
jo
push
adc
fsubs
test
ljmp
stos
loopne
repnz
mov
sub
push
pop
fisttps
fistpl
or
adc
imul
xchg
cmc
cmp
repz
and
fwait
shll
aad
aas
jbe
ret
xlat
clc
je
jo
pop
jae
orl
lea
in
or
xchg
add
icebp
mov
insb
adcl
mov
and
push
mov
dec
jle
push
mov
lret
int3
pop
addr16
and
cmp
mov
pop
mov
mov
sbb
out
jnp
shlb
push
stos
fstpl
pop
push
adcl
bnd
out
xchg
inc
out
call
sar
adc
lock
in
inc
das
rcr
repz
cmpsl
sbb
mov
cmp
pop
add
cmp
stos
and
inc
loopne
movsl
adc
test
inc
push
jae
mov
repz
cmp
gs
cmc
push
aam
fstps
and
cmp
mov
lods
sub
shrb
stos
xchg
shrl
xchg
int3
movb
inc
add
inc
and
or
dec
add
and
lret
cmc
add
jl
ljmp
jg
xchg
add
insb
cmp
jecxz
gs
xor
xor
stc
pop
xor
dec
push
cmp
sbb
rorb
fs
loopne
xchg
jno
cmp
sar
mov
sbb
adc
mov
jbe
push
add
push
mov
jmp
dec
mov
xor
xor
rclb
out
dec
adc
cmpl
fwait
push
dec
movsl
in
loope
enter
jle
loope
les
mov
adcb
add
adc
xchg
pusha
inc
push
aam
mov
sbb
jb
int3
jmp
cmp
xchg
int
fwait
jb
push
push
cmp
jbe
inc
push
cmpsl
enter
xchg
flds
and
or
ficompl
sub
mov
mov
and
mov
mov
cld
jbe
xor
fildll
cs
dec
adc
pop
ljmp
sbb
dec
adc
push
cld
mov
imul
inc
xchg
xchg
fsubl
push
clc
inc
add
dec
in
cmc
les
jb
push
int
imul
scas
inc
xor
mov
adc
dec
ljmp
jb
push
adc
lret
push
mov
fsubr
pusha
xlat
mov
xchg
cld
pop
test
xor
ja
inc
pop
cli
lret
dec
mov
jge
outsb
stos
jmp
addb
jno
fsubl
push
mov
lcall
push
push
mov
test
mov
lret
outsl
sub
daa
push
popl
jne
dec
mov
inc
sub
ret
xchg
mov
dec
fisttpll
int3
hlt
cltd
sub
int3
ret
mov
sub
ret
movsb
int
mov
mov
scas
pop
mov
mov
cmp
xchg
sarb
cwtl
imul
inc
repnz
popf
dec
fmull
into
fistl
sub
je
pop
pop
mov
jl
jns
outsl
scas
jle
cmc
xchg
adc
call
data16
pop
xchg
ja
inc
adc
mov
push
push
inc
stos
jo
jp
mov
mov
and
out
repz
nop
jne
cmp
stos
fcmovnb
rcll
stc
pop
mov
mov
adc
fisttpll
ret
loopne
inc
sbb
fwait
push
mov
sbb
aam
mov
lods
mov
inc
data16
xchg
out
xor
inc
dec
mov
sub
inc
inc
dec
sti
daa
cmpsb
fisubs
pop
xchg
xchg
add
mov
ret
inc
cmp
push
sahf
dec
fmulp
inc
sbb
out
mov
movsb
aam
js
jno
call
shlb
mov
push
mov
dec
scas
emms
jmp
cmc
stc
push
inc
mov
sbb
daa
push
mov
push
pop
call
jbe
pushf
dec
pushf
js
or
out
fwait
std
add
gs
orb
lret
sub
jecxz
jnp
imul
jecxz
jns
and
inc
pushf
push
xchg
nop
jnp
repz
xor
gs
ljmp
xchg
shl
xchg
icebp
jl
pop
mov
ret
and
out
dec
add
inc
jb
js
push
mov
dec
inc
loopne
mov
stc
outsl
xor
imulb
movsb
stc
pusha
jmp
xchg
or
ficomps
scas
dec
int3
mov
pop
cmovb
pop
mov
ss
inc
sub
aad
or
jb
out
adc
data16
pusha
sub
push
jmp
gs
xor
add
pop
fwait
sbb
mov
les
pop
stc
pop
pop
subps
fisubrs
test
mov
sub
cmp
or
fdivrs
adcb
clc
dec
cmp
call
ret
nop
fistps
jae
cltd
movsb
jg
sbb
xor
lea
shll
fwait
mov
cmp
adc
js
into
repnz
xchg
lret
xchg
push
and
ficompl
jge
jne
adc
outsb
mov
cmp
pushw
mov
mov
jne
ret
mov
punpckhdq
add
xchg
jnp
pop
dec
cmpsl
mov
imul
js
push
shrb
ljmp
or
les
les
push
mov
bound
stos
and
jmp
lcall
jmp
xchg
ljmp
lods
dec
inc
cmp
pop
sahf
push
and
fwait
mov
pop
dec
jo
fldcw
imul
push
xchg
adc
pop
fwait
inc
pop
orl
push
out
testl
push
dec
inc
ljmp
mov
call
cltd
nop
imul
or
add
pop
cmp
jae
sub
push
pop
cmp
xor
incl
jg
fldl
repz
daa
xor
bound
imul
inc
jle
dec
daa
dec
mov
mov
jno
in
cs
xor
fdivs
sarb
inc
dec
rcll
jl
popf
sar
pushl
bound
lahf
dec
add
inc
pop
arpl
add
mov
fsubs
or
jae
insb
sahf
jge
shlb
int
inc
jne
jb
mov
push
xchg
mov
ja
loopne
pop
inc
cli
ficompl
adc
rcrb
ds
enter
aas
xchg
cmp
inc
inc
fisubl
jp
mov
out
dec
xchg
test
test
int
dec
incb
ret
fwait
in
mov
jns
push
mov
inc
inc
push
xchg
in
fwait
iret
jl
xlat
push
push
aam
leave
cltd
push
fsub
sub
shr
pop
add
sub
push
sub
negl
mov
push
dec
sbb
outsb
inc
lret
fs
jns
cmp
fwait
adc
jl
mov
cmp
or
iret
mov
daa
add
xor
mov
stc
mov
fisttps
push
sbb
pop
pop
xor
sbb
push
and
fsub
lret
pop
or
fistl
fildl
out
push
fnsave
loopne
addb
or
clc
jnp
dec
sarl
inc
cmp
xor
mov
xlat
js
fistl
int3
repnz
mov
sub
mov
pop
decl
push
subb
jbe
dec
or
or
jmp
xchg
mov
mov
push
loopne
scas
sbb
or
cmc
mov
ds
sbb
inc
xchg
mov
mov
std
sbb
inc
dec
jp
or
rclb
sub
inc
insb
mov
pop
cmp
push
repnz
int
dec
inc
enter
lods
inc
and
fcmovu
scas
sti
int3
scas
iret
sahf
mov
pop
or
mov
pop
xor
call
mov
mov
int
pop
insl
cmp
lods
dec
sub
call
push
push
adc
jl
jb
out
hlt
jle
fabs
adc
push
mov
jmp
adc
mov
fwait
ds
xchg
cmp
cld
imul
jno
fdivp
lds
push
mov
push
xchg
lock
adc
fcomps
or
fisubrl
and
and
mov
js
cmp
cmp
sub
aas
ret
jnp
inc
addr16
and
adc
into
mov
jg
lea
decb
adc
inc
dec
fs
mov
into
pop
sti
mov
dec
out
pop
jns
mov
cmp
insb
mov
push
push
dec
andw
xlat
lods
adc
int
loopne
or
xor
push
inc
subb
pop
pop
scas
popa
jmp
mov
inc
pusha
jle
xchg
jne
jbe
mov
dec
mov
hlt
imul
inc
test
mov
lcall
jl
mov
jmp
sub
pop
xchg
lahf
clc
inc
xor
cmpsl
fisttpl
mov
in
bound
fs
fidivs
hlt
daa
popf
jne
ja
mov
pop
mov
push
add
mov
outsb
inc
ja
leave
decl
sub
fcmovne
push
mov
cmpsb
sbb
mov
scas
and
outsb
call
cwtl
int3
push
jnp
push
mov
dec
push
push
push
outsb
jle
inc
xlat
or
inc
mov
int
out
add
inc
scas
mov
push
int3
or
insb
test
add
lock
jnp
push
xchg
xor
jo
jl
adc
mov
pushf
dec
call
or
sbb
test
out
pop
mov
loopne
push
dec
cmp
inc
dec
mov
icebp
cmp
inc
mov
int
mov
inc
fcmovb
ficomps
push
pop
cmc
fmuls
jns
xchg
dec
pusha
pop
pop
mov
jl
jbe
in
dec
jno
inc
inc
adc
pop
inc
and
call
popf
adc
sbb
inc
add
icebp
js
inc
mov
jmp
add
ds
push
sbb
aad
and
lods
jnp
push
icebp
cmp
xor
add
rcr
pop
mov
adc
xchg
je
pop
sbb
push
aam
roll
mov
movsb
jae
push
sub
inc
fs
push
clc
enter
dec
or
dec
loope
lcall
jg
sub
ja
stc
sbb
in
xchg
dec
inc
lcall
dec
mov
pop
xchg
inc
jne
lahf
pop
push
fs
mov
popf
push
jmp
pop
sarl
cs
mov
push
mov
insb
jl
dec
aaa
cmpsl
cmpsb
mov
in
test
add
ljmp
jnp
xchg
push
js
jl
pop
bound
mov
push
push
inc
push
add
pushf
adc
push
fsts
movsl
pop
and
jg
bound
in
push
dec
out
and
mov
mov
mov
jmp
sbb
inc
loopne
ret
xlat
mov
dec
cmpb
mov
inc
mov
push
add
mov
jecxz
xor
arpl
sbb
jnp
xor
dec
xchg
jae
arpl
push
push
negl
idivl
xchg
dec
adc
outsl
fwait
out
int
loope
fneni(8087
shll
inc
cli
fnsave
pop
aaa
push
or
jne
pop
inc
fs
mov
mov
mov
cmp
loopne
fsubrl
leave
cmp
aas
xor
inc
pop
inc
inc
cmp
push
mov
icebp
es
punpckldq
sbb
push
rol
daa
mov
iret
adc
dec
xor
dec
xchg
cltd
xchg
cs
add
sub
mov
push
dec
icebp
mov
dec
sarl
mov
push
cmp
mov
ljmp
adc
pop
enter
mov
filds
push
push
mov
xchg
lret
dec
jbe
jecxz
movsl
dec
fistl
fsubrp
push
add
inc
add
inc
mov
in
add
xchg
insl
ss
scas
aaa
mov
mov
xchg
dec
mov
adc
jae
pop
sti
inc
aaa
dec
lea
fimull
aam
sub
push
stos
movl
cs
pop
dec
pop
inc
sub
mov
xchg
mov
mov
push
imul
jp
lahf
push
mov
cmp
sbb
enter
xchg
je
or
push
pop
inc
bound
in
jnp
in
dec
loope
sbb
add
pop
push
xor
je
mov
sti
push
jno
int3
push
inc
cmp
fildl
dec
loop
ffree
add
add
pop
mov
push
leave
jae
out
mov
fadd
pop
dec
xlat
sti
push
aaa
pushf
aaa
mov
and
adc
dec
and
cmpb
inc
out
sub
mov
cmp
ret
sti
and
lea
or
pop
dec
or
push
cmp
stc
mov
and
nop
add
popf
les
fdivrs
sahf
cs
je
loopne
imul
jb
push
cwtl
icebp
shll
movsb
fists
pop
mov
push
push
lahf
push
pushf
xchg
mov
in
jge
dec
dec
fs
cwtl
inc
es
std
cld
push
mov
ljmp
and
jg
out
dec
loopne
in
mov
add
dec
sbb
ficompl
shll
idiv
loopne
fmuls
and
mov
jl
and
mov
andb
jo
sub
xor
and
jl
jnp
dec
mov
fiaddl
jne
dec
jae
mov
icebp
cltd
insb
xor
and
sub
jmp
jne
dec
or
adc
clc
icebp
insb
fistl
ds
pop
lods
and
cmp
loopne
push
sbbl
jnp
sbb
test
xchg
decl
insb
push
push
movsb
inc
loopne
mov
imul
fldl
add
arpl
mov
push
sub
adc
mov
sub
es
mov
jbe
xchg
imul
xor
jl
jl
sub
and
add
mov
mov
sub
fwait
add
mov
dec
jg
outsl
or
push
sub
and
mov
insb
fwait
inc
mov
popf
pop
push
adc
rclb
ficompl
imul
fs
add
or
xchg
lcall
jno
sbb
dec
outsl
and
inc
lret
call
jecxz
int
push
dec
ljmp
mov
wbinvd
inc
mov
sbb
push
daa
out
es
inc
jnp
mov
pop
rorl
shl
cmp
mov
cld
inc
fs
lahf
unpcklps
xor
pop
sbb
arpl
sub
and
mov
cmpb
cmp
lds
mov
outsb
fisttpll
push
std
mov
sub
mov
sub
fwait
or
fnstenv
cli
cmp
mov
xor
push
push
scas
arpl
les
stc
sbb
clc
inc
ss
cmc
into
arpl
sbb
xorl
shlb
inc
sub
hlt
xchg
cmp
pop
into
pusha
pop
sbb
fwait
push
mov
repnz
jae
stc
dec
lret
sbb
int
adc
jno
push
int3
sbb
and
pop
mov
mov
adc
jnp
mov
test
dec
sbb
imul
loope
ljmp
outsb
rcl
push
sbb
fistl
inc
push
outsb
and
xor
lret
pop
add
inc
les
adc
jg
shr
add
push
jbe
idivb
xchg
bound
dec
cmpb
adc
jge
cmp
daa
mov
mov
ljmp
mov
popa
jns
aaa
add
subl
dec
sti
pop
inc
push
cmpsb
arpl
leavew
sub
cmp
sub
dec
fucomi
xor
aad
lods
dec
popa
mov
idivb
stos
mov
jg
rol
xchg
push
ret
jns
push
push
int3
or
inc
sub
sub
loopne
sub
iret
jp
xchg
hlt
negl
add
adc
push
mov
sbb
addb
sbb
jp
popf
cmpsl
test
in
fs
jge
ret
adc
daa
pusha
mov
sahf
insl
mov
and
test
cmp
ds
mov
add
jb
dec
mov
sbb
out
push
inc
push
jg
jns
adc
ficomps
push
cmp
fldcw
cli
aaa
clc
dec
js
adc
and
call
dec
dec
pop
das
push
popf
aad
inc
movl
rcl
aaa
into
mov
push
mov
adc
and
push
pop
jns
out
lock
dec
mov
sub
jae
cmc
outsb
cmp
cmp
fldcw
stos
pop
rorb
mov
mov
int
dec
testb
mov
xor
fs
add
std
inc
mov
fidivrl
xchg
push
ficompl
imul
xchg
ret
lret
push
dec
push
cs
int3
std
push
or
xor
ud1
push
repz
das
arpl
lock
add
out
repz
insl
lea
into
jge
test
jae
stos
pop
mov
or
sbb
sbb
fidivrl
xorb
mov
mov
cmp
jle
dec
mov
dec
imul
push
inc
add
aaa
ret
or
fs
arpl
mov
out
sub
xchg
test
dec
mov
stos
sbb
leave
fdivrp
ss
psllq
fwait
sub
push
xlat
repnz
xchg
sbb
add
std
insb
mov
inc
jno
lret
mov
dec
popa
cmpb
dec
out
inc
fcmovnbe
pop
cs
sti
fucomi
mov
push
test
mov
add
into
lock
imul
jb
ja
or
daa
ret
adc
inc
pop
cmp
cmp
inc
mov
push
in
mov
and
mov
adc
fwait
and
mov
push
aad
frstor
icebp
adc
xor
cmovg
dec
mov
ficoms
sub
add
mov
add
fs
incl
inc
fisttps
adc
in
jbe
pop
sarb
mov
jge
mov
push
push
loope
inc
pop
ret
fists
pavgb
cmc
mov
push
sbbl
sti
sbb
add
push
lahf
in
jns
push
iret
nop
push
imul
push
mov
jle
jbe
jns
sti
jno
cmc
fs
and
jne
xor
push
mov
push
gs
sbb
adc
stos
dec
pushf
or
or
sub
test
xor
push
and
xlat
sub
push
ret
and
loopne
test
testl
cli
jnp
adc
daa
jg
jl
and
or
nop
jecxz
xchg
pusha
and
dec
dec
push
daa
shrl
iret
cmp
add
loope
jne
fdivp
pop
mov
lock
imul
mov
pop
arpl
jmp
mov
aaa
push
into
ret
test
adc
sbb
cmc
enter
fdivrp
pop
shlb
inc
and
or
inc
xor
dec
fisubrs
push
lahf
aad
mov
int
sti
mov
inc
jg
inc
mov
sub
popf
fistpl
stos
cmpsl
jecxz
fisttpl
mov
fnstenv
inc
mov
dec
mov
xor
or
aaa
pop
out
faddl
mov
push
ror
fs
loopne
ds
inc
push
fcompl
cmp
dec
into
pop
push
outsb
fiadds
sbb
lods
mov
push
sbb
mov
adc
mov
cmp
add
and
mov
lret
rcr
xor
add
sub
mov
jbe
mov
jns
dec
lret
mov
push
dec
mov
fnstenv
or
rcrb
fcmovne
xorb
push
pop
fldenv
cwtl
movsl
sub
fdivs
fcoml
pop
lods
dec
bound
cmp
pop
ljmp
rorb
jns
mov
popf
mov
push
pop
movl
arpl
out
enter
cmp
push
xor
ljmp
hlt
dec
movsb
pop
dec
add
push
shrl
repz
mov
pop
add
adc
sbb
adc
movsl
dec
fs
sub
push
cmp
fisubs
or
inc
pop
mov
inc
cmp
push
leave
outsl
rorb
loopne
mov
pop
cmpl
xor
enter
pop
cmp
sbb
add
or
fcoml
adc
pop
fldcw
jnp
push
pop
jne
cmpsl
push
mov
inc
daa
dec
pop
jae
xchg
aaa
add
sarb
int
mov
add
xlat
out
popf
dec
clc
jnp
insl
pop
sahf
sbb
pop
xor
dec
shl
stc
xor
iret
fsubl
aaa
or
xchg
adc
jns
data16
add
testb
ret
dec
xor
push
xor
hlt
je
pop
xchg
imul
sub
push
imul
lcall
push
and
iret
jne
fisttpll
sbb
movsb
out
test
pop
aam
fldt
push
push
insb
js
in
and
add
test
es
rcll
test
test
popa
jns
test
test
sahf
pop
push
addr16
push
ljmp
adc
enter
mov
inc
popa
or
movsl
adc
jp
out
push
jg
adc
sbb
shrb
sarb
sub
inc
cld
inc
sbb
pop
mov
cwtl
sbb
rclb
dec
pop
dec
jns
addr16
outsl
sti
mov
pop
inc
pop
mov
aas
fldl2e
push
jl
pop
int3
push
pusha
icebp
pop
xor
sbb
shl
es
stos
jne
pop
test
xor
nop
cmp
pop
fwait
aad
push
and
push
pop
lcall
cmp
mov
cmc
mov
dec
mov
add
in
jl
and
sarb
sbb
lret
cvtpi2ps
pop
rorl
sub
jo
pop
fdivrl
dec
mov
pop
pop
sbb
pop
lock
or
jbe
cltd
stos
clc
gs
inc
sub
sarb
add
pop
xchg
push
lret
or
cmp
stos
outsl
inc
sub
mov
adc
pop
cli
iret
fbstp
mov
mov
inc
cmp
mov
lds
jp
div
dec
pop
sbb
in
sahf
jae
inc
jmp
pop
mov
inc
push
repz
cmp
mov
dec
xchg
and
stc
push
mov
out
inc
insl
dec
xor
sbb
push
sbb
xor
pop
jmp
lcall
or
sbb
dec
inc
test
ret
fcmovu
jb
pop
out
jge
aas
stc
push
fwait
mov
rcr
cmpsl
loop
inc
and
push
push
into
sbb
inc
dec
sbb
shrl
push
inc
shlb
stc
jl
mov
pop
dec
js
xchg
mov
arpl
jge
sahf
dec
pop
popa
sub
or
mov
es
sbb
add
movsl
xor
push
and
adc
lods
jg
les
loop
dec
mov
push
pop
sbb
sub
jno
push
cmc
fwait
push
lock
push
jg
inc
pop
cmp
popa
out
dec
and
cmp
fisttps
cltd
and
mov
sbb
cmp
fdivrs
inc
hlt
pop
jno
stc
es
popa
int
rcrl
ds
fbstp
popa
fisubrl
jmp
std
push
add
popa
mov
gs
inc
or
pop
aas
and
stos
sub
dec
repnz
fcmovne
popa
ljmp
loopne
fldcw
ret
dec
inc
roll
lret
mov
daa
xor
insl
loopne,pn
insb
adc
dec
adc
lret
xchg
sbb
pop
testb
push
dec
xor
xor
mov
xor
repnz
dec
sbb
out
jp
test
bound
mov
popa
adc
movsb
imulb
pop
push
int
fwait
jmp
pushf
dec
dec
mov
inc
imul
jg
fwait
lods
sbb
mov
adc
cld
loop
roll
mov
stos
pop
imul
jae
outsl
xchg
fmull
mov
outsb
ss
inc
pop
jns
idivl
mov
cmpsl
loopne
subb
sbb
sub
imul
push
lods
divb
sbb
fldenv
jecxz
sbb
xchg
sub
jns
cmp
js
daa
pop
pop
imul
inc
mov
inc
jb
into
push
jbe
stc
sbb
adc
or
mov
sub
pop
push
fwait
add
test
stos
adcl
mov
jl
jno
sbb
sub
jg
sub
xchg
mov
sub
xchg
sbb
adc
jns
popa
mov
lret
adcl
rcll
stos
and
hlt
dec
lcall
mov
fists
inc
inc
push
das
mov
in
jno
xchg
push
pop
shrb
jg
stos
sub
adc
mov
push
ficompl
mov
test
ret
pop
pop
jbe
mov
sbbl
jno
xor
fnsave
fsubrs
push
sti
or
aas
xchg
adc
sbb
sbb
imul
push
and
pop
mov
adc
cmp
insl
push
and
push
pop
push
dec
lret
xchg
repnz
test
mulb
sbb
mov
dec
jnp
fwait
push
sub
fmull
repz
fwait
lods
mov
rep
fistl
call
push
xchg
gs
gs
sti
sarb
ror
nop
fidivl
aas
or
sbb
sub
sbbb
jp
pop
or
jb
dec
lods
pop
push
adc
addl
push
dec
pop
dec
cmp
aas
pop
jnp
ja
pop
adc
push
inc
lods
push
arpl
dec
ja
xchg
sub
pop
rorb
addr16
les
bound
into
roll
stc
fs
add
dec
loop
push
or
pushf
cmp
mov
mov
pop
jle
insb
out
scas
jno
cld
sub
mov
push
push
jle
adc
sub
adcl
inc
mov
lods
xor
pop
jmp
fsubrl
inc
pop
push
addb
sub
jecxz
fmull
rcl
dec
std
out
or
xchg
orb
mov
sub
stc
int3
stos
ret
lods
dec
leave
add
call
icebp
adcb
out
in
inc
mov
cltd
in
mov
loope
dec
js
sub
jp
inc
es
dec
mov
and
cwtl
stc
imul
sub
fcomps
out
inc
inc
cmp
inc
cmp
leave
mov
iret
jns
aam
loop
sub
and
aam
sub
addr16
jno
out
jo,pn
xchg
cli
xchg
add
cbtw
mov
les
andb
fldl
dec
gs
jl
clc
out
movsb
imul
fidivrl
push
mov
cmp
jns
fcompl
sub
aad
loopne
mov
pusha
es
mov
sbb
inc
test
in
mov
mov
ljmp
pop
enter
js
popa
dec
inc
mov
add
mov
sbb
mov
push
mov
jbe
pop
mov
add
cmp
orb
mov
pop
mov
sti
decb
imul
cmc
fsubrp
sbb
inc
mov
fdivrl
sbb
jno
cltd
push
jmp
jle
fwait
inc
mov
imul
jns
aam
and
ret
mov
int
sub
inc
pop
pop
andb
dec
sbb
enter
or
ds
xor
dec
test
mov
dec
or
std
loope
dec
cmc
lcall
in
ret
fs
shll
or
jno
pop
arpl
in
stos
cmpsl
or
dec
or
sub
sbb
cmp
pop
lock
fnstsw
jae
aad
or
cld
push
pop
fwait
jl
mov
pop
push
mov
jmp
jae
mov
mov
or
adc
movsl
test
push
std
into
mov
gs
mov
sbb
hlt
out
mov
mov
jmp
mov
inc
or
shll
fistpll
push
and
sub
cmp
dec
in
fwait
jno
loopne
ficompl
jl
push
pop
xchg
lret
inc
sti
lret
stos
adc
imul
sar
cli
mov
mov
out
push
in
jmp
fisttpll
push
fildll
popf
std
inc
dec
sti
inc
push
jne
push
mov
pop
cmovb
add
sbb
pushf
jne
mov
push
jae
sbb
fldcw
inc
cmp
sbb
fwait
ljmp
jne
loope
out
mov
push
jns
mov
cmp
out
push
mov
inc
fisttps
call
sbb
pop
insb
or
adc
pushf
pop
jp
popf
push
shlb
iret
fs
dec
jb
adc
ja
rol
dec
xchg
push
mov
and
sub
xchg
add
incl
or
shrb
jae
inc
int
addr16
xchg
mov
cld
pushf
cmp
xor
bswap
or
and
sbb
adc
insl
repz
push
mov
mov
xor
sbb
sub
leave
push
popf
idivl
sarl
cltd
scas
push
bound
es
jg
in
dec
jge
inc
cmp
cld
fdivs
inc
scas
popa
pop
fs
stc
ffree
xchg
dec
mov
bound
push
out
push
fnstsw
pusha
dec
test
outsb
sub
jg
add
cwtl
roll
icebp
loop
rolb
sub
and
pop
mov
xor
movsb
cmp
push
lret
pop
mov
xor
pop
popf
pop
jae
pop
mov
inc
sbb
fs
xchg
dec
test
repnz
fistps
xor
int
jmp
ret
mov
mov
push
js
mov
adc
das
ror
fidivrl
mov
out
sbb
add
xchg
dec
jg
or
inc
jg
and
pop
dec
or
lea
cmc
pop
dec
jae
xchg
add
jns
outsb
sbb
push
out
xor
fisttpl
pop
cmp
and
dec
out
dec
repnz
inc
pop
jne
lahf
and
sub
xchg
cmp
pop
test
and
push
fisttpl
pop
or
dec
cmc
pop
cmp
fmuls
ds
inc
cmc
mov
addr16
jns
xor
xchg
out
xchg
mov
pop
js
add
sbb
jl
dec
cs
jbe
aam
mov
pop
mov
std
sbb
inc
pop
sbb
push
pop
repz
mov
adc
lods
rolb
cmc
inc
in
jnp
inc
cs
xchg
mov
adc
inc
and
sbb
stc
rcrb
sbbl
cltd
shll
mov
jo
std
push
mov
icebp
std
in
inc
rolb
mov
fsubs
aam
push
sub
and
or
idiv
std
les
push
lret
fmull
xor
shlb
push
dec
mov
jl
imul
scas
mov
mov
nop
jp
sub
das
imul
inc
leave
mov
pop
mov
rorl
pushf
cltd
pop
and
xor
mov
jmp
dec
insb
inc
shr
push
int
dec
les
xchg
jg
dec
add
hlt
add
lret
scas
lods
stc
dec
dec
push
jmp
loopne
test
xchg
sbb
pop
lods
cmp
sbb
loopne
pop
inc
push
xchg
out
mov
push
ret
cmp
mov
icebp
loopne
mov
adc
lcall
movsb
mov
jle
pop
insl
cmp
lahf
aad
jae
push
lods
push
inc
pop
xlat
inc
jge
ja
pop
cs
adc
pop
movsb
imul
xor
sti
mov
and
outsb
lret
stos
iret
shrb
mov
dec
addr16
pop
iret
in
in
aad
push
mov
add
dec
aad
inc
ret
cmp
sbb
fs
icebp
pop
push
mov
sub
insb
aaa
arpl
ss
add
mov
mov
outsb
pop
test
jecxz
jns
or
arpl
mov
inc
fs
fisubl
cmp
aas
mov
aaa
xchg
xor
sub
mov
test
stos
or
xchg
stos
ljmp
xlat
iret
aaa
mov
mov
pop
add
dec
and
stos
pop
fisubrl
aam
mov
dec
cmpsb
cmpsl
jg
or
or
jmp
and
xor
push
les
xor
pusha
mov
xor
xchg
int3
das
push
mov
cmpsb
push
addr16
cmp
js
fiaddl
hlt
movsb
neg
jmp
fwait
lods
rorb
jo
sarl
dec
orl
mov
or
jnp
dec
and
or
scas
sub
or
xor
push
imul
aam
rcl
dec
jp
aad
or
ja
cmpsl
dec
ret
mov
mov
push
pusha
dec
insl
dec
lods
inc
inc
scas
repz
dec
sbb
mov
jle
pop
mov
int
mov
pop
mov
repnz
pop
push
add
imul
or
aas
push
inc
xchg
ret
xlat
mov
sbb
jl
jnp
adc
mov
pop
dec
xor
lret
sbb
push
dec
push
ss
mov
jp
pop
cmp
fistl
and
sbb
loopne
dec
jmp
jae
cmp
mov
data16
fwait
in
iret
pop
test
popa
je
xlat
in
cmp
pushf
out
lret
out
repnz
pushf
mov
push
cmc
dec
rorb
dec
pop
mov
cltd
out
mov
inc
dec
jo
and
cmp
or
decb
dec
pop
loope
sahf
mov
lret
jae
fwait
out
bound
or
jge
jmp
push
jnp
jns
add
mov
dec
ret
sahf
std
inc
xor
dec
std
dec
mov
cld
rol
test
sub
arpl
js
and
pop
push
xchg
xchg
stos
aad
inc
adc
dec
lock
fldt
dec
call
rcrb
inc
mov
inc
rorl
pop
dec
das
xchg
or
jecxz
arpl
into
loopne
lcall
inc
sbb
mov
and
xchg
dec
incb
push
jp
dec
int3
xor
fimuls
sub
push
bswap
lea
dec
or
inc
arpl
bound
testb
inc
jbe
inc
shrl
push
orb
dec
lods
inc
cmp
dec
cld
xor
cmp
or
dec
add
or
notl
push
and
rcl
xor
cmp
mov
push
mov
cmp
fwait
sub
push
sub
lods
or
mov
mov
repnz
into
repnz
inc
sub
lret
icebp
jb
mov
sbb
out
jmp
lods
push
mov
sub
jns
cltd
das
push
inc
jge
xorb
push
fdivr
imul
cld
inc
mov
cs
lods
fwait
push
movsl
sub
or
in
stos
cmp
test
sub
or
jo
fwait
or
cltd
idivb
scas
ret
sahf
xchg
dec
dec
pop
lods
js
inc
scas
popf
sbbb
push
enter
cmp
insb
pop
aas
pop
pop
addb
outsl
mov
stc
jg
test
repnz
push
lock
push
repz
in
sub
mov
jno
xchg
sbb
or
push
fcomp
inc
mov
repnz
jno
jo
mov
nop
mov
jmp
cmp
push
cs
pushf
dec
js
mov
mov
insl
jmp
filds
pop
fwait
pop
hlt
mov
sbb
push
dec
xchg
xor
pop
int
inc
insb
shrl
fs
cmpsb
inc
inc
ffree
or
ljmp
loope
fdivl
dec
out
cmpsl
test
jl
out
push
leavew
in
sub
ret
cmpsb
dec
xor
es
push
push
jmp
mov
xchg
mov
jo
jl
jl
push
mov
mov
icebp
into
aad
push
mov
imul
adc
std
int
mov
sub
mov
fs
mov
pop
int
cmpsl
and
dec
mov
sti
jns
enter
movsb
rcrl
stos
repz
lea
mov
mov
push
fs
xchg
cmc
ja
jge
inc
jae
pop
outsb
mov
fwait
push
aam
xor
repz
loopne
adc
dec
out
adc
repz
cmp
cmc
mov
xchg
in
sub
jle
dec
cli
fstps
andl
mov
dec
inc
js
pop
fwait
outsb
fwait
mov
arpl
in
lock
dec
enter
jnp
insl
hlt
ret
ret
jle
loopne
sti
cmp
repnz
and
shrl
pop
in
lret
xor
das
jns
pop
js
dec
pusha
fisttpl
mov
and
inc
out
mov
into
xor
call
inc
mov
xchg
std
mov
add
orb
cmp
test
divb
inc
sbb
ret
sub
out
xchg
jo
jecxz
adc
pop
mov
mov
rclb
es
sti
sarb
mov
and
cs
or
add
cmp
cwtl
mov
cltd
push
adc
add
jne
fsubp
jae
fdivrl
aaa
fistpll
xchg
inc
aam
or
rcr
push
jg
dec
dec
pusha
sub
lock
or
insb
pop
dec
in
imul
dec
sub
es
test
incl
arpl
lahf
mov
mov
mov
in
push
clc
xor
pop
inc
mov
test
incl
dec
xor
lahf
lods
fsubl
cmpsl
push
pop
or
cmp
and
push
lods
repz
or
hlt
mov
push
xor
push
scas
dec
addb
mov
sbb
pop
xchg
out
stc
inc
cltd
push
leave
les
mov
xchg
scas
mov
jle
ret
idivl
fbstp
inc
jg
inc
dec
fcoms
std
sbb
cmc
xchg
adc
xchg
xor
pushf
xchg
cltd
mov
insb
pop
loope
jne
mov
iret
cli
push
cltd
repz
aam
iret
jo
sbb
jmp
pop
adc
repz
jb
pop
push
adc
dec
mov
lret
push
insb
sub
testl
int3
mov
aas
fidivrl
aam
in
or
sti
mov
daa
jns
xchg
jne
push
fisttpl
fstpt
sbb
aad
lret
push
adc
jge
sub
cmp
push
cld
adc
jbe
test
movl
sub
push
mov
inc
cmp
adc
int
add
test
mov
out
or
pop
es
sub
arpl
jo
scas
or
dec
mov
adc
es
sub
cmp
je
push
push
in
in
inc
ja
and
adc
imulb
sub
xchg
xchg
and
mov
inc
inc
lret
inc
xchg
cmp
inc
cmp
stc
mov
dec
ds
pop
lods
mov
mov
iret
pop
jg
test
sbb
fs
out
repnz
sarl
data16
and
orb
fs
ret
jg
jmp
jnp
and
xchg
inc
pop
insb
mov
push
mov
mov
jb
ja
insl
add
inc
inc
mov
jnp,pn
jl
push
push
imul
cmc
jl
jg
and
and
loopne
pushl
js
and
sub
in
dec
or
adc
aas
mov
out
cmp
pop
daa
pop
mov
mov
or
jno
xchg
pop
bound
dec
jl
sarb
iret
enter
mov
movsb
adc
in
xor
fsubp
rorl
das
pop
pop
inc
jbe
lcall
mov
das
push
aam
cltd
or
jg
cwtl
push
dec
insb
jl
pop
les
sbb
push
add
les
push
and
mov
or
jmp
stc
ret
sbb
hlt
dec
mov
pop
js
jae
fs
push
and
movsl
lds
fcomip
push
inc
inc
dec
gs
pop
push
jl
mov
int3
jge
out
cmp
lahf
jns
call
xchg
push
subb
jae
mov
or
fwait
push
push
xor
pop
cmc
or
push
clc
cltd
iret
int
dec
mov
jo
xor
mov
pop
inc
jns
cmpsb
loop
mov
mov
mov
pop
test
sub
in
push
sub
call
pop
jne
and
out
mov
inc
lret
sbb
dec
push
or
aaa
aad
or
pop
push
mov
scas
lea
push
mov
jae
popf
sbb
mov
add
pop
adc
sbb
sbb
sbb
jae
pop
dec
jecxz
xor
inc
push
add
or
pop
in
fwait
je
pop
es
pop
adc
frstor
aam
pop
and
add
fcmovu
and
popa
push
mov
mov
mov
pushl
fcmovnbe
mov
sbb
lea
and
jns
lods
jno
movb
and
mov
inc
sbb
rcll
in
mov
inc
ss
loope
mov
xor
fs
popa
or
dec
int
jae
jg
das
fildll
out
push
dec
inc
and
xchg
xchg
stc
add
fiaddl
aad
push
push
jmp
sbb
and
insl
stc
pusha
add
fldl
dec
mov
add
fs
scas
out
sti
ljmp
or
test
sbb
mov
sbbl
and
rep
aad
mov
xor
mov
xchg
cmc
out
mov
fsub
ret
jns
rolb
arpl
pushl
adc
jae
mov
mov
inc
add
int3
sti
mov
stc
push
pop
test
inc
shll
push
mov
inc
push
hlt
inc
fwait
pop
pop
pop
int3
mov
mov
mov
cmpl
xchg
xor
ficoml
js
xchg
int3
xor
shrb
push
xor
pop
adc
jno
loop
fcompl
xchg
pop
cmp
adc
aam
rorl
scas
add
cld
cmpl
add
fwait
jne
mov
sbb
sub
std
imull
fists
push
dec
jl
mov
xchg
xor
mov
rorl
fsts
and
mov
ror
repz
cmpsb
orl
cltd
inc
lret
dec
push
repz
sarl
mov
mov
jnp
movsb
in
mov
sub
lret
ret
insl
inc
lret
jb
sbb
inc
jg
push
cmpsb
sub
inc
daa
int3
aaa
inc
mov
mov
pusha
cmpsl
fldl
insl
pop
inc
mov
mov
jl
jae
dec
ss
mov
mov
fwait
int3
push
icebp
dec
push
fistpl
outsb
xor
leave
fiadds
out
jne,pn
push
lret
sbb
jecxz
push
jnp
mov
mov
dec
call
popf
sbb
mov
mull
cs
imul
pop
mov
lods
push
sbb
int3
adc
lds
add
adcl
aad
sub
repnz
pop
lea
mov
sbb
ret
out
and
clc
iret
int
dec
push
xchg
aaa
pop
lcall
push
dec
jne
jl
add
repnz
test
xchg
arpl
test
test
enter
and
xor
sub
dec
push
jnp
dec
dec
or
or
pop
mov
push
fdivrp
xor
scas
nop
pop
sbb
nop
loope
fwait
mov
jnp
mov
adc
jns
aas
mov
dec
mov
in
jl
sub
mov
popf
ja
adc
and
cld
pop
data16
gs
and
iret
testb
faddl
jnp
jnp
pop
loope
in
stos
ljmp
dec
mov
or
mov
js
hlt
push
sub
leave
mov
cwtl
adc
sub
bound
cmpsl
dec
in
fs
loopne
in
inc
sub
imul
mov
sbb
pop
shrb
cmpb
adc
fwait
inc
or
lret
loopne
enter
loope
ja
push
dec
in
sbb
insw
add
cmp
fsubs
and
sub
lods
popl
mov
mov
addr16
jecxz
aad
in
cltd
dec
repz
lods
push
repnz
fldt
sbb
jge
push
sub
add
lret
and
sub
jne
jge
jbe
out
dec
mov
shlb
add
jns
aam
adc
sbb
pop
or
sub
mov
mov
fcompl
js
dec
pop
mov
pop
popa
fcmovbe
fwait
inc
ljmp
lea
sti
xor
scas
push
cltd
fiaddl
sbb
imul
cwtl
push
cltd
out
push
mov
je
fistpl
mov
pop
cmp
psrlq
xchg
push
fcmovnu
xor
adc
mov
arpl
mov
movb
les
iret
int
push
mov
or
flds
push
pop
das
cmp
add
xor
or
xor
lock
or
movsb
dec
dec
and
loopne
fldl
mov
fcmovne
test
xlat
mov
jle
cmpsl
movsb
pop
mov
xchg
push
mov
mov
insl
into
push
mov
jb
rcr
lret
add
push
mov
xchg
arpl
pusha
fisubrs
sub
add
call
hlt
cmpsl
xor
sub
sub
mov
sbb
out
pop
pop
mov
sahf
fldenv
fstl
into
mov
add
dec
or
and
mov
dec
dec
mov
add
mov
push
icebp
mov
adc
inc
pop
pushf
mov
cmc
inc
test
jl
mov
aad
pop
push
mov
fs
dec
sbb
es
mov
imul
cmpb
imul
dec
imull
push
test
pop
loop
lods
iret
dec
inc
adc
inc
xchg
and
repz
dec
xchg
lods
int
hlt
xchg
into
call
sub
mov
pop
jno
pop
xchg
addl
inc
fidivrl
xor
fnsave
pushf
jp
add
mov
mov
clc
jl
pop
sub
jo
fwait
add
sbb
cmp
decb
mov
loop
sub
repz
push
lods
arpl
ficomps
sbb
jbe
std
in
xchg
push
mov
or
js
jbe
cmpsl
mov
push
adc
inc
pusha
in
data16
lods
sub
fdivrl
loope
faddl
xorb
imul
imulb
jnp
sbb
inc
in
imul
stos
clc
fimuls
fwait
jl
out
lret
push
pop
aad
and
jne
push
push
adc
mov
pop
add
jnp
jno
mov
push
mov
xlat
ret
pop
movsb
push
lret
aad
nop
mov
and
shll
jp
mov
pop
mov
mov
gs
inc
push
push
int
and
pop
push
cmp
xchg
sti
fistl
jbe
xor
jae
mov
out
mov
xchg
sub
push
shlb
sub
dec
jl
scas
xchg
dec
dec
and
nop
es
sbb
xor
mov
jl
jne
pop
orb
pop
sbb
pop
idivl
fsubrl
insl
pop
mov
mov
bound
add
inc
and
cmc
adc
mov
pop
jmp
sbb
imul
mov
aad
pop
repnz
mov
ljmp
pop
jg
push
fbstp
sub
mov
dec
xchg
push
sti
push
js
lods
adc
imul
xchg
cld
push
inc
and
jb
cmp
push
outsb
mov
add
push
sbb
insb
popl
bound
stc
jl
je
xor
push
jge
loopne
je
jne
and
das
mov
mov
sub
mov
inc
dec
mov
aam
test
popa
cmp
sbb
add
movl
sub
lret
daa
lret
add
fs
int
add
mov
decb
xchg
out
dec
xor
mov
ds
mov
pop
out
call
add
pop
mov
mov
or
stos
aas
gs
adc
std
xchg
jbe
sbb
out
enter
loopne
pop
mov
dec
cmp
inc
mov
or
or
arpl
xchg
sbb
leave
xor
push
jns
add
mov
xchg
lock
mov
sub
push
in
xchg
lcall
and
outsl
sbb
loopne
hlt
or
sub
sub
ljmp
sub
xor
push
aam
dec
fstpt
stos
mov
pusha
aam
jmp
loopne
mov
mov
push
inc
in
fwait
sbb
andb
arpl
sbb
jnp
adc
js
lods
xchg
shll
loope
mov
mov
enter
out
imul
popa
add
mov
mov
test
cmp
mov
sub
jns
lret
ds
pop
movl
pushaw
and
fistl
xor
or
int3
out
dec
test
sbb
and
popf
push
xor
mov
lret
into
push
mov
mov
push
sarl
clc
insl
lahf
pop
shll
dec
iret
mov
stc
lahf
cmp
sbb
cmp
or
test
jl
add
aam
jo
ss
aaa
cs
int
add
fisttps
lods
inc
cmpsb
pop
dec
int3
xor
adc
adc
jmp
out
addl
lahf
jns
fstps
sahf
adc
insb
jge
adcb
into
out
in
daa
inc
fwait
icebp
out
push
sub
jp
mov
shrb
lahf
mov
call
sbb
xor
cmpsb
sub
lahf
test
jns
sub
test
push
mov
push
ret
rcl
cmp
scas
scas
lret
cltd
andb
fwait
dec
and
stos
stc
push
adc
bound
std
out
add
dec
pushf
pop
js
cwtl
ret
dec
xor
iret
push
ret
ljmp
cmp
scas
popf
out
lret
dec
mov
pop
pop
jge
iret
scas
sub
mov
push
imul
pop
cmc
jl
mov
push
fwait
cmp
sbb
arpl
addb
lret
out
lret
sub
icebp
call
jmp
int3
je
sbb
lret
pop
inc
add
push
hlt
std
or
cmpsb
pop
es
ds
jl
lahf
inc
fcmovne
int
shrb
or
sbb
testl
jecxz
push
mov
ret
mov
cmpsl
cs
ror
add
dec
int3
xlat
dec
fwait
daa
stos
cld
outsl
adc
call
shll
shll
jg
adc
xor
sbb
push
mov
mov
mov
cs
xor
inc
iret
push
shlb
and
jmp
dec
sub
cs
pop
data16
push
xchg
pop
adc
inc
mov
lret
pop
jle
sub
in
add
pop
xchg
dec
in
lock
cmp
aas
sub
mul
out
test
pop
push
jae
mov
sbbb
mov
xor
jecxz
je
inc
cli
les
dec
mov
orb
adc
popf
insl
lds
js
inc
inc
je
cmp
insl
addr16
pop
push
pop
aam
adc
mov
mov
int
jae
stc
xor
push
push
inc
iret
cmp
mov
fiaddl
loope
testl
cmp
xchg
sub
pop
in
or
xchg
jo
pop
cld
jmp
xchg
pop
or
dec
cld
lcall
int3
dec
in
push
lds
xchg
xchg
mov
jmp
mov
fbld
int
and
sbb
hlt
arpl
push
add
jo
dec
mov
cmp
lret
dec
and
sbb
cs
mov
mov
loope
mov
inc
xor
in
int
sti
pop
repnz
ja
lahf
push
test
xchg
mov
lret
adc
dec
movsb
mov
into
dec
int3
inc
cs
add
loop
outsb
dec
cmp
mov
leave
jns
inc
arpl
or
inc
imul
pop
fidivrl
xor
or
pop
mov
loope
pop
pop
push
fwait
xchg
jp
dec
mov
aad
aam
adc
cltd
inc
xlat
lods
cmp
repnz
and
jne
sub
pop
inc
xor
jecxz
ret
std
sbb
rcrb
ret
lea
call
mov
add
nop
test
adc
cwtl
pop
icebp
or
mov
fidivl
sbb
out
xor
inc
mov
xor
sub
sarb
fwait
int
inc
mov
mov
inc
sub
push
dec
ret
jmp
jp
insb
into
cmpsl
leave
or
mov
cmp
xchg
xor
les
mov
mov
sbb
testl
add
lods
xchg
fisttps
push
mov
addr16
scas
adc
scas
out
push
inc
add
jp
in
xchg
xchg
sub
mov
adc
adc
ja
call
mov
fs
xchg
jne
imull
cmp
jae
sbb
mov
imul
pop
fstpt
xchg
jo
movl
in
and
dec
stc
movb
std
inc
adc
mov
test
int
add
std
push
bound
inc
ja
xchg
inc
jae
add
dec
mov
or
pusha
xor
dec
pop
sbb
cltd
lahf
xor
int3
mov
mov
ljmp
add
int3
mov
jmp
scas
and
fwait
or
pop
push
sbb
mov
je
int
addr16
int
clc
pop
adcb
sub
mov
imul
mov
fstl
lods
cltd
pusha
mov
in
xchg
mov
bound
add
adc
mov
pop
xlat
add
push
inc
ja
pop
and
dec
dec
ds
inc
mov
pop
cwtl
in
cli
add
push
fisubrs
push
cmp
loope
xchg
xor
and
push
sub
inc
fdivrl
negb
or
scas
mov
sub
in
clc
or
sbb
cld
sbbb
loopne
lret
lret
outsb
jecxz
jae
adc
outsl
add
pop
sub
xor
xlat
ficoml
cmpsb
sub
inc
adc
push
lods
xchg
pop
mov
scas
lock
jnp
leave
std
dec
decl
cmp
jae
pop
test
push
pop
push
pop
leave
push
fbld
mov
lcall
stos
es
hlt
jp
decl
in
insl
jno
gs
mov
jge
jl
mov
jecxz
or
push
imul
sub
daa
and
cmc
rorl
fs
mov
das
jl
mov
dec
lret
cmp
jb
repz
pop
insl
adc
ficompl
out
fistps
jae
repz
dec
or
loope
adc
sbb
cmp
in
insl
mov
add
arpl
push
push
dec
fdivrs
int3
sub
inc
lret
push
xchg
dec
daa
cmp
cmp
mov
fistpl
or
mov
add
fs
ret
sti
mov
jmp
mov
push
cmp
pop
or
pusha
daa
pop
cwtl
jmp
cld
sahf
js
sub
xchg
sub
dec
shlb
arpl
mov
or
std
sbb
gs
ret
sbb
pop
push
mov
pop
dec
adc
xor
sti
adc
fs
mov
jo
das
addr16
push
push
loopne
push
pop
orb
test
mov
fidivs
sub
dec
xlat
cmp
adc
push
mov
adc
sbb
dec
jle
mov
dec
dec
inc
pop
cmp
inc
cmp
sbb
xor
insl
adc
dec
fidivl
jae
fwait
jmp
xor
or
xor
cmp
int
mov
fs
sbb
dec
popa
sbb
gs
fidivrl
fucomi
mov
adc
add
out
push
mov
imul
and
pop
cmp
xorl
xchg
jns
cmp
inc
adc
push
stc
jmp
sbb
fisttpl
jecxz
jb
xchg
mov
data16
xchg
fs
js
fiadds
xor
mov
test
pop
call
mov
sbbb
inc
mov
jno
shl
pop
sbb
mov
fbld
stos
jg
adcb
js
adc
pop
imul
dec
mov
cmp
jnp
jnp
inc
mov
mov
loope
popf
lcall
pusha
mov
jg
mov
pop
and
negl
and
fimuls
sbb
dec
inc
mov
mov
addr16
xlat
pop
gs
bound
mov
test
movsb
push
das
cmp
or
ret
mov
cs
mov
enter
and
enter
or
push
movsb
xor
sub
cmp
icebp
testb
xor
jnp
pop
ljmp
sti
inc
xor
aam
jg
cmp
jle
clc
dec
add
hlt
mov
cwtl
xchg
pop
in
fidivrl
xor
push
test
js
sbb
in
adc
icebp
mov
cmp
scas
sti
les
pop
or
aad
mov
cmpsb
stc
inc
lods
data16
mov
arpl
aam
or
inc
int
push
mov
gs
out
mov
lds
xor
gs
push
inc
in
sahf
iret
dec
and
cmp
pop
repz
shl
fwait
int
lret
mov
hlt
fimuls
call
fdivp
or
mov
gs
rcl
pop
std
repz
mov
cmc
mov
outsb
inc
repz
lahf
cmp
dec
arpl
cmp
pop
inc
nop
shl
push
sub
scas
in
adc
dec
clc
les
and
icebp
jbe
mov
fsubrl
cmp
xchg
adc
cmp
stos
ljmp
inc
pop
mov
xchg
jo
jae
xor
sbb
in
stos
cs
push
stos
inc
push
add
pop
mov
or
insl
push
dec
inc
outsb
push
sub
data16
cmp
jnp
jmp
jbe
pop
mov
jne
popl
outsb
daa
inc
rolb
xchg
xchg
es
lahf
je
inc
int
gs
icebp
cwtl
test
jge
inc
aad
jl
repnz
inc
fstl
fcmovnbe
push
movsb
scas
push
sbb
inc
ss
adc
mov
fmuls
and
out
nop
das
push
xor
mov
dec
jle
popa
dec
scas
and
lods
pusha
lea
in
adc
push
cmp
cmp
inc
add
sbb
inc
mov
jb
mov
stc
inc
pop
leave
fisubrl
jg
sbb
jg
lds
mov
xor
call
cmp
cli
test
popf
lea
imul
push
or
push
fwait
jno
sti
test
mov
add
pop
rcrl
jbe
mov
icebp
sbb
das
in
jg
inc
loopne
xor
jmp
push
mov
pushf
out
add
pusha
cmp
lock
dec
sbb
mov
popf
push
jne
push
jl
and
adc
mov
xchg
loope
or
mov
mov
fists
or
add
pusha
xorb
das
push
out
mov
jmp
push
cmpsb
xchg
inc
and
pop
and
aad
push
sub
xchg
call
xchg
mov
sbb
dec
or
inc
mov
leave
jbe
mov
dec
mov
out
and
insl
push
das
push
add
outsl
data16
shll
mov
xlat
repz
ret
or
push
fisubrs
inc
push
jecxz
lods
push
out
fimuls
or
mull
and
xchg
or
mov
outsb
inc
jnp
xor
lret
shll
dec
cmc
popa
mov
int
out
iret
jmp
ja
sbb
mov
mov
push
mov
out
test
loop
mov
inc
mov
fldenv
in
xchg
in
jno
scas
imul
add
sti
sbb
sbb
inc
sub
jbe
das
inc
test
xchg
or
into
adc
aam
fistpl
jle
push
pop
daa
jg
fwait
add
add
mov
inc
pop
es
pusha
rorl
negb
dec
dec
sbb
pop
test
adc
adc
insb
fisubrs
in
inc
testl
add
xchg
dec
mov
loopne
jg
add
mov
or
mov
mov
mov
lahf
jns
jns
shrb
mov
js
loopne
sbb
pop
jns
jno
pop
outsb
jmp
and
push
push
push
jbe
add
mov
stc
sbb
daa
mov
jl
jae
mov
loope
cli
xor
and
sbb
or
outsb
add
scas
aad
icebp
inc
mov
lods
pop
sub
out
inc
xor
or
out
jno
cmp
push
sub
arpl
xor
out
ja
push
push
or
lea
cmc
dec
jl
test
mov
sti
sti
setb
or
jae
je
out
cld
inc
and
out
addr16
les
inc
pop
inc
dec
and
mov
pop
not
into
movsb
notb
sarl
iret
dec
jg
or
sub
adc
mov
sub
idivb
jmp
fwait
dec
shr
data16
int3
iret
rclb
sbb
test
jnp
fwait
mov
nop
cs
sub
sbb
std
xchg
push
jae
inc
xor
jbe
out
aam
sbb
mov
sahf
or
fbld
jge
neg
ss
ja
lret
icebp
ja
ja
call
xchg
dec
scas
push
repnz
dec
ja
inc
rorb
pop
jb
loopne
xchg
scas
add
pusha
and
cs
and
cmp
cmp
and
mov
ljmp
pusha
push
lcall
adc
ja
inc
jl
les
inc
nop
bound
mov
pop
or
clc
xchg
cmp
mov
xor
fisttps
lcall
ret
out
or
add
dec
jg
mov
or
out
pop
push
pop
sarb
sub
mov
daa
sahf
jle
sub
sub
mov
adcl
push
in
push
push
add
jnp
xor
mov
repz
pusha
mov
in
sbb
ret
pop
mov
jg
push
cmp
mov
dec
inc
dec
add
mov
aas
lods
cmp
xor
jo
add
ret
fistpl
aam
fisubrl
cmc
dec
mov
jns
or
jg
mov
test
les
sub
mov
in
stos
insl
sbb
dec
inc
jns
enter
arpl
sub
adc
mov
int3
mov
popf
gs
push
dec
push
xchg
lret
dec
mov
in
testb
mov
mov
ljmp
jecxz
je
dec
fmulp
jns
inc
loope
outsb
rcr
xchg
out
sub
add
pop
lcall
mov
lods
and
push
and
inc
shlb
lds
pop
jbe
mov
xchg
pusha
stc
mov
mov
adc
aam
add
inc
mov
jp
aad
call
movsl
push
jno
mov
xchg
pop
and
jle
in
push
fst
sub
push
dec
insl
mov
int3
mov
inc
lret
jmp
mov
int
out
mov
mov
dec
rcrb
cmp
xchg
ja
mov
fsubp
out
arpl
cmpsl
add
dec
add
mull
mov
pop
in
outsl
dec
jecxz
enter
cmp
inc
out
mov
mov
add
mov
fs
sub
cltd
push
inc
mov
sbb
dec
scas
jno
sahf
shrb
xchg
or
ss
mov
xor
int
jne
loopne
push
loop
inc
mov
repz
jle
mov
fwait
jp
dec
push
fidivl
sub
ss
push
or
cmp
jg
mov
mov
and
mov
mov
fadd
dec
mov
lahf
mov
jg
hlt
mov
fcomps
mov
mov
push
dec
mov
dec
mov
xchg
aad
add
pop
insl
xlat
jae
or
mov
or
jg
aam
inc
stos
iret
dec
sti
in
adcb
mov
rcll
daa
cwtl
lret
push
inc
jns
lods
out
in
xchg
es
pause
call
xor
mov
pop
pop
dec
jg
hlt
pop
pop
pop
add
int
dec
mov
fnstenv
push
push
scas
incl
iret
pop
adc
stos
imulb
pop
rorb
jecxz
pop
testl
mov
rcr
cmp
loopne
mov
fs
das
cmp
dec
loop
or
sbb
fistpl
mov
leave
out
shll
je
out
push
add
bound
or
fs
mov
jle
xchg
dec
scas
aas
dec
loope
incl
jle
dec
inc
dec
stos
jg
dec
pusha
mov
jp
cmp
daa
adc
jecxz
pop
es
cmpsl
xlat
pop
push
icebp
inc
push
mov
popa
sahf
and
pusha
pop
aam
push
mov
dec
xor
in
pop
pop
insb
or
loopne
jns
shrb
jae
add
mov
push
bound
jecxz
repz
test
pusha
hlt
adc
popa
cld
push
mov
imul
int
sbb
std
mov
dec
je
outsb
les
cs
lcall
push
xor
dec
mov
mov
lds
aad
add
inc
addr16
ret
out
dec
adc
push
es
push
jge
or
sub
jno
mov
je
dec
sahf
mov
push
and
mov
inc
andb
xor
pop
and
push
mov
cmp
mov
in
inc
xchg
call
inc
push
repnz
sub
lcall
add
pop
mov
ret
je
fcomip
pusha
mov
inc
cmpsl
stc
jns
sub
shlb
test
push
adcl
ljmp
sbb
inc
mov
adc
dec
dec
es
or
dec
add
in
gs
pop
inc
sahf
push
mov
adc
fwait
std
inc
out
rclb
testl
xchg
adcl
push
inc
stos
in
jns
ficoms
dec
out
mov
sbbl
testb
adc
test
clc
adc
nop
test
sti
sbb
mov
es
add
mov
cmpsb
mov
repz
push
mov
dec
out
mov
jg
iret
test
push
fcomps
push
mov
loop
jl
stos
std
ds
cmp
mov
mov
mov
cmp
shr
mov
loope
into
add
sbb
dec
sub
and
add
dec
ss
or
adc
idivl
sbb
mov
cmp
and
ret
inc
mov
dec
or
mov
das
dec
inc
pop
fcomip
lahf
push
xorb
mov
fiaddl
cmpsb
add
or
testb
mov
mov
add
pop
jecxz
je
mov
stc
imul
sbbl
mov
cli
jo
fmull
dec
mov
sahf
xor
push
jnp
fstps
jle
es
xlat
pushf
das
ret
jbe
inc
sbb
outsb
push
and
int
ljmp
push
popf
and
sub
iret
insb
fbstp
push
std
rcl
addb
movsl
shlb
add
mov
cli
jno
cmpsl
jnp
sbb
mov
adcb
imul
mov
int3
adc
sti
and
jbe
rcll
push
fs
popf
iret
xor
adc
dec
lods
hlt
addb
adc
jle
scas
cmpsl
inc
arpl
pushf
fldenv
xchg
push
ja
lds
repz
mov
inc
enter
dec
ret
loopne
je
inc
mov
pop
jecxz
orl
stos
les
push
subb
fnstsw
xor
scas
roll
jae
pop
ret
jns
aam
nop
out
push
mov
ficompl
aas
mov
push
data16
and
sti
nop
mov
cmovno
mov
mov
sub
mov
fidivs
mov
sbbl
stos
fwait
test
fbstp
push
xchg
mov
fistpl
mov
pop
in
insb
pusha
xorb
dec
lahf
xchg
fxch
add
pushl
test
mov
jae
mov
xchg
cmp
jl
stc
sbb
mov
fs
add
push
pusha
filds
out
lods
mov
cltd
push
sbb
insl
loope
jae
fwait
aas
cmc
jg
jnp
pop
cmp
mov
ds
mov
push
push
es
push
imul
decl
test
je
jns
pushf
push
pop
xor
imul
push
cld
push
inc
or
sbb
mov
lret
sarb
cmp
mov
cmp
push
inc
fimull
dec
push
fdivs
mov
nop
mov
std
dec
mov
std
clc
repz
pop
mov
in
add
mov
cwtl
inc
jno
sub
nop
xor
adc
jns
sbb
outsl
lcall
inc
lret
je
sbb
fsubrs
lea
xor
push
mov
aas
fildl
pop
cli
cmp
mov
jno
jl
add
push
xor
xor
adc
pop
mov
push
inc
jp
and
push
sti
call
cli
repz
sbb
fildll
in
jl
jg,pn
jl
addb
or
pop
ret
inc
mov
cmp
je
ret
mov
loope
testb
popa
lahf
push
cli
outsl
pop
jg
sarl
add
sub
test
or
insb
jno
repz
pop
xor
dec
cmc
fwait
pop
and
push
push
pop
cmp
pop
sbb
in
outsl
notl
jno
mov
in
inc
mov
mov
into
inc
mov
cmp
mov
xor
cmp
xor
pusha
or
adc
xchg
dec
mov
jnp
lcall
in
lahf
inc
push
test
xchg
push
xchg
mov
or
dec
jnp
mov
push
cmp
adc
push
pop
rorb
inc
jmp
cmp
sub
jo
dec
and
mov
mov
rolb
sub
cltd
dec
fnsave
ds
jne
mov
add
sub
or
bound
clc
ljmp
dec
imul
cld
xchg
fidivl
xchg
out
jecxz
jge
lahf
pop
pop
mov
mov
jp
inc
sti
dec
mov
inc
push
fiadds
out
jnp
aaa
dec
jge
das
push
push
xchg
add
inc
enter
jnp
mov
loope
xchg
aaa
sbb
loope
jecxz
dec
lcall
ljmp
inc
jl
fimull
lret
pop
adc
mov
xchg
pop
jno
iret
mov
push
imul
xorb
jmp
aas
fidivl
add
and
jae
and
out
mov
sbb
add
cmpsl
push
into
rolb
cmpl
stc
cmp
mov
xchg
xor
add
sbbb
out
adc
lahf
push
in
in
sahf
mov
notl
mov
push
in
jae
les
sub
test
adc
cmp
cld
sub
icebp
int3
and
adc
dec
mov
push
sub
insl
dec
int3
sbb
mov
inc
pop
dec
int
add
lods
pusha
aad
cmp
mov
mov
sti
xchg
aam
add
out
sbbl
mov
scas
mov
mov
imul
inc
rorl
sub
jnp
mov
push
cli
leave
add
pop
or
enter
or
iret
push
push
addb
push
lahf
xchg
dec
and
sbb
std
idivb
mov
test
bound
mov
jbe
jne
cmp
jmp
cmp
and
push
add
out
inc
push
dec
inc
lcall
jno
mov
jg
dec
insl
and
sbb
add
psubw
rolb
lret
mov
jno
std
and
dec
repnz
outsb
lcall
push
xchg
dec
mov
stos
stc
aam
inc
cmc
daa
subb
aam
dec
shr
dec
jmp
andl
out
ja
stos
adc
fldpi
sti
sarl
insl
xchg
fs
add
add
fildl
std
pop
pop
fwait
ror
loopne
out
mov
shl
pop
push
add
cmpl
mov
ficoml
in
pop
mov
test
xor
mov
shll
fisttpll
cmc
cmp
mov
stos
fists
lock
insb
mov
shll
mov
pop
push
mov
lahf
mov
pusha
xchg
rcl
jle
sbb
xchg
mov
rclb
sar
inc
in
into
or
int
fcoml
mov
pop
std
insl
mov
sub
sub
out
and
movsb
loopne
xorl
in
stc
insb
pop
mov
aad
clc
jl
cmc
shr
inc
sti
inc
mov
frstor
xchg
push
and
out
lret
jmp
jp
xor
or
pop
mov
add
enter
jmp
jmp
mov
mov
outsb
jmp
push
xlat
cltd
test
leave
shr
inc
xchg
scas
das
jbe
pop
sti
ficompl
mov
fs
ja
mov
adc
divps
jno
sub
cltd
stos
mov
lahf
dec
dec
les
repz
xchg
inc
jno
fists
addb
mov
adc
lret
cmp
pop
sub
lcall
sbb
dec
cmp
popf
sarl
out
pop
lcall
imul
jp
or
cmp
movsl
inc
cmp
jge
inc
mov
movsl
stos
ds
shll
or
sbb
rorl
outsl
adc
daa
fisttpll
push
movsl
or
xor
es
shrl
jp
js
pop
mov
xor
pop
test
dec
xor
pop
xchg
add
out
mov
sub
or
shrl
int3
dec
sub
pop
pop
cwtl
lret
fnstenv
jno
adc
addr16
push
test
cs
sub
sbb
inc
and
fnstsw
add
push
cmc
scas
movl
clc
jno
rorl
or
in
rcr
cmp
or
scas
or
xchg
jno
cmp
jmp
mov
dec
loope
js
inc
xor
lret
in
sbb
scas
push
out
lcall
add
xchg
rorl
mov
dec
pop
stos
jno
out
clc
and
or
icebp
fsubs
pop
push
add
mov
or
hlt
push
pop
adc
xchg
nop
inc
lods
icebp
dec
dec
out
add
pop
sbb
cmpsl
aad
mov
shrb
imul
mov
dec
ret
pusha
movsb
fstps
ss
inc
test
movsl
sbb
or
dec
inc
dec
loop
es
cmp
cld
mov
push
ljmp
mov
sarl
out
add
stos
pop
push
lret
inc
fldz
repz
and
popf
push
je
mov
or
stos
add
imul
cwtl
sahf
cltd
insb
and
int3
adc
push
sbb
pop
rcrb
inc
mov
into
scas
xchg
adc
out
dec
push
fnstenv
mov
add
dec
incb
cmp
in
call
mov
cmp
inc
mov
in
inc
sbb
mov
jp
call
repnz
in
ds
cmpsl
pop
imul
sub
xor
out
and
out
mov
pop
mov
pop
sub
add
pop
call
sbb
mov
jg
arpl
sub
xchg
mov
fnstsw
mov
arpl
mov
pushf
lretw
mov
into
dec
adc
push
mov
sub
repz
aam
ret
std
ret
or
int
scas
fcomp
dec
in
dec
push
mov
imul
bnd
mov
addr16
push
and
arpl
ja
jl
leave
dec
pop
push
add
pop
mov
mov
fldl
push
out
bound
xchg
pushf
dec
cmpb
int
jo
jmp
pop
mov
mov
pop
jb
into
mov
sbb
sbb
or
lret
jle
insl
cmp
enter
sub
repz
inc
nop
clc
mov
outsb
fwait
mov
pop
xlat
ljmp
test
iret
push
inc
int3
leave
pop
push
ret
sbb
out
mov
lret
push
int
in
add
imulb
pop
mov
lods
inc
aam
mov
inc
repz
in
cmc
es
pusha
adc
jnp
es
sbb
mov
jmp
sub
add
insb
pop
xlat
nop
or
sbb
loope
shlb
mov
fstpt
xchg
dec
aaa
sbb
cmp
jmp
push
bound
xor
and
test
sbb
sub
sti
and
dec
fistps
cltd
mov
iret
add
xchg
subl
mov
push
cmp
std
inc
mov
pop
mov
ret
mov
xor
js
mov
leave
push
mov
xchg
stc
mov
je
sbb
iret
cwtl
xorb
add
adc
mov
push
cmp
sbb
adc
scas
lds
add
dec
fmull
shrb
out
and
fsubrl
inc
add
movl
mov
add
add
sti
fs
mov
imul
xor
mov
test
mov
dec
stos
mov
xor
stos
cmpsl
xlat
xchg
jg
ljmp
and
sbb
jl
ficoml
outsl
push
push
dec
mull
andb
or
or
fwait
adc
cs
mov
pop
dec
out
pusha
add
cld
fnstcw
ljmp
loop
push
int
mov
jl
test
push
scas
xchg
sbb
pop
or
xchg
int
cmp
sbb
sbb
imul
dec
fwait
jl
mov
xor
adc
pushf
in
or
push
loop
je
sub
insl
adc
push
ds
aam
call
inc
fmuls
in
mov
fadd
xchg
lcall
insl
mov
ss
cld
xchg
imul
std
cmc
mov
mov
jnp
cmp
imull
scas
jl
fwait
int
arpl
jbe
nop
xor
mov
bound
xchg
pusha
mov
push
iret
adc
fisttpl
mov
sub
cli
and
sbb
xchg
iret
leave
xchg
xor
pand
mov
mov
es
mov
pop
dec
sub
int3
and
outsl
mov
adc
ficomps
push
cmp
loope
repnz
adc
jmp
add
imul
jbe
mov
lcall
loope
dec
insb
sbb
divl
hlt
xchg
dec
cmp
repz
addr16
loope
fwait
mov
xchg
mov
in
xchg
dec
mov
fsubl
repnz
cmp
clc
mov
push
popa
insb
jge
jg
or
in
add
std
rorl
mov
push
cmp
aaa
xor
bound
jecxz
jl
movsl
fsubrl
add
mov
ja
cs
pop
repz
adc
or
int3
jl
cmp
iret
mov
rcr
sub
push
push
arpl
pop
mov
xchg
lret
lods
bound
cmp
lods
aad
cmp
imul
jp
inc
repnz
lods
ds
fsubrs
xor
iret
sahf
cmp
inc
pop
in
daa
call
cmpsl
iret
cmp
mov
pop
pushf
inc
push
sti
xchg
ljmp
cmpsl
out
arpl
stc
cld
sub
ja
popa
mov
mov
push
leave
popa
push
shrl
cld
movsl
mov
adc
inc
push
mov
xchg
hlt
fdivr
insb
pop
cmp
or
sahf
xchg
loope
aam
mov
dec
mov
rclb
jp
loopne
lret
cltd
inc
ror
pop
stc
sbb
jp
pop
push
cwtl
cmp
loop
lret
jno
dec
mov
inc
outsb
adc
sub
scas
into
sbb
push
jge
inc
pusha
in
add
test
fmull
jle
xor
ja
pop
add
mov
push
jl
out
xor
shlb
jle
xlat
adc
inc
jae
pushf
icebp
inc
fs
into
mov
dec
pop
les
xchg
mov
insb
addr16
aas
insb
jecxz
add
dec
push
ret
mov
inc
pop
clc
pop
cmc
mov
mov
or
loope
xchg
pop
jl
cmp
inc
neg
lahf
jmp
jno
cmc
pop
orl
cld
push
push
sub
pop
mov
sbb
and
sub
add
cmp
push
adc
inc
and
or
bound
or
jmp
or
jae
daa
insl
jl
fst
xor
push
lret
mov
test
push
sbb
mov
lret
push
repnz
xchg
push
mov
inc
jge
repnz
cmpsl
inc
data16
test
into
jbe
cld
jge
add
mov
data16
sbb
inc
fwait
mov
stc
in
sub
pop
mov
js
je
jbe
xchg
xor
out
ret
clc
ret
in
or
push
mov
adc
xchg
xchg
mov
cs
aas
add
xor
and
sub
mov
pop
fistpl
je
unpckhps
mov
out
pusha
scas
fsubrs
sub
in
xor
inc
or
xlat
and
ror
es
inc
out
or
xor
cmp
subb
sbb
mov
jns
fisttps
outsb
inc
mov
stos
aam
dec
add
pop
decl
aad
cmp
mov
pop
inc
inc
xor
jno
jl
loopne
sbb
pop
push
push
dec
push
ljmp
pop
push
mov
popa
dec
cmp
adc
push
les
mov
cmp
lock
repz
fimull
adc
lret
pop
cmp
ljmp
sbb
jle
iret
inc
test
jb
jle
loope
mov
add
or
push
lock
jle
add
addr16
inc
lcall
jbe
sub
js
xor
rcrb
iret
push
inc
mov
pop
dec
pop
addr16
dec
push
lcall
mov
push
jnp
inc
cmpl
cld
jbe
jg
fildl
mov
mov
fiaddl
mov
addr16
xor
int3
mov
mov
sub
sbb
ret
xchg
mov
daa
mov
cltd
xor
out
imul
jmp
push
idivl
pop
mov
or
mov
jb
in
aad
loope
adc
xchg
mov
inc
adc
add
jb
or
or
fwait
inc
push
pusha
hlt
mov
cltd
inc
pop
lcall
sub
sub
lahf
xlat
cmpsl
cmp
hlt
mov
sti
data16
and
mov
adc
repz
pop
xor
faddl
aaa
add
pusha
cmp
mov
or
or
push
out
xor
push
push
outsb
imul
adc
jl
faddl
jns
shll
das
dec
mov
push
jecxz,pt
xlat
xor
jle
dec
xor
mov
sub
adc
inc
pop
bound
sbb
iret
jg
mov
stc
add
push
xchg
inc
lock
push
xor
dec
icebp
xor
pop
cs
call
sbb
mov
sahf
repz
cmp
add
xchg
int3
out
addr16
popa
test
loope
cmp
sti
push
mov
pushf
fs
aas
mov
pop
mov
roll
clc
fcompl
mov
pcmpgtd
sbb
outsb
jae
dec
test
rcr
inc
xchg
lods
dec
mov
mov
sub
ret
cmp
dec
leave
adc
call
xchg
mov
and
idivl
mov
outsb
pop
movsb
mov
ficoms
xchg
fwait
or
add
add
test
pop
inc
adc
leave
or
out
mov
pushf
mov
lea
sbb
ror
jl
mov
int
jae
dec
push
mov
mov
fimull
xorb
std
dec
or
ljmp
and
jnp
mov
movsb
daa
fwait
mov
repz
inc
scas
pop
inc
push
ljmp
out
xor
xor
inc
in
cmp
add
mov
dec
inc
fwait
xor
fildl
pop
add
sbb
dec
out
add
pop
cmp
jbe
and
mov
xchg
jae
pop
out
mov
sti
and
and
xor
fistps
fwait
ljmp
mov
and
and
cmp
call
out
loopne
ficomps
add
or
test
in
mov
pop
repz
add
cmp
inc
rclb
inc
arpl
and
push
lret
roll
pop
adc
outsb
stos
dec
ret
cmp
out
std
ds
pop
lock
mov
js
dec
jnp
pusha
popf
push
lods
fistpl
in
sbb
xchg
shrl
mov
testb
push
imul
out
sti
mov
jge
push
lret
flds
fwait
decl
or
shrb
out
stos
jg
lret
push
sub
lahf
dec
lds
movsl
dec
cmpsl
bound
sbb
fs
push
into
pop
cmp
in
es
aad
xor
arpl
mov
data16
and
lahf
cmp
dec
mov
fdivs
inc
and
mov
add
mov
daa
loop
data16
icebp
rorl
mov
pusha
xchg
stos
dec
cmp
lods
pop
lcall
inc
dec
xor
add
outsb
dec
sahf
ds
subl
sbb
xor
mov
dec
mov
das
mov
dec
iret
mov
fidivrl
les
mov
loopne
cltd
pop
pop
hlt
mov
or
xor
inc
cmp
dec
inc
test
push
aaa
cwtl
xor
pushf
pusha
jne
stos
jbe
cmc
mov
jp
mov
inc
popa
sbb
pop
dec
ljmp
pop
inc
xor
test
inc
inc
adc
ret
int3
xchg
mov
lea
adcb
jae
or
add
mov
jecxz
pop
push
mov
stc
jnp
mov
fwait
rcrl
enter
sbb
pop
inc
mov
enter
add
cmp
sbb
hlt
jns
mov
push
xchg
dec
movsb
inc
push
jge
push
lods
add
scas
push
fisubrl
adc
andb
cmc
sub
fdivrl
jno
push
out
jbe
lods
and
mov
inc
and
filds
cltd
mov
in
push
fwait
mov
aad
int
cmc
dec
sti
push
pop
cmp
dec
xor
rcr
xchg
cs
iret
idiv
les
sub
adc
mov
rcll
pop
mov
xchg
xor
test
in
fs
call
jl
push
mov
mov
cmpb
ja
or
xor
jle
lret
xchg
mov
push
dec
xor
sbb
jmp
xchg
lret
pop
into
add
cmp
inc
nop
pop
stos
jl
pop
fimull
fcoml
dec
cmp
cmpsl
lcall
shll
jge
mov
sti
xor
or
inc
lds
imul
cmp
xchg
push
repnz
xchg
sub
mov
adc
es
popf
bound
xchg
push
pop
jmp
lret
popw
cli
or
roll
test
jbe
jo
int3
inc
es
pop
in
lods
add
clc
sbb
outsl
mov
popa
push
xchg
and
cmp
inc
and
gs
or
jnp
jmp
fabs
mov
xor
jae
dec
lods
and
inc
into
push
pop
cs
cwtl
stc
out
inc
mov
cltd
int3
rcl
aad
fwait
jl
push
inc
push
pop
addr16
adc
in
fcmovnbe
bound
push
adc
fcmove
ljmp
icebp
xchg
or
and
add
or
cmp
mov
mov
pushl
jns
rcl
xchg
lret
out
cmpsl
pop
dec
xchg
nop
mov
add
sub
cwtl
add
pop
pop
mov
xchg
inc
inc
mov
inc
mov
add
jo
or
pop
scas
out
xchg
std
int
or
cmp
or
ljmp
gs
outsl
inc
outsl
in
push
jae
push
adc
sub
push
sti
xor
mov
ja
je
cmp
jo
inc
mov
push
pop
mov
jb
xchg
repnz
aam
ljmp
cmp
pop
mov
mov
pushl
mov
scas
dec
mov
push
mov
scas
lods
andb
mov
mov
cmpsb
add
dec
push
push
jno
test
ret
mov
fmull
shll
mov
add
cmc
inc
pop
jbe
lods
mov
fiaddl
fwait
int
mov
cmp
scas
mov
add
in
test
sti
jg
rcr
sti
mov
cmpsl
push
sbb
dec
xor
mov
jg
adc
push
cltd
sbb
mov
test
fnstenv
out
xor
sbb
fmul
jl
adc
ret
mov
popf
in
xchg
xchg
jno,pt
sbb
xor
xchg
fmull
repz
andb
push
pop
pop
mov
jmp
loop
inc
push
idivb
jp
mov
dec
fisttps
cmp
pushf
mov
movsb
negb
pop
ljmp
xchg
stos
adc
repz
notl
mov
imull
push
bound
cwtl
test
pop
je
and
mov
lret
sub
push
pop
mov
push
in
pop
ljmp
imul
stos
iret
es
data16
jl
add
lret
aas
mov
aam
jl
lods
sbb
es
fwait
mov
add
and
push
inc
es
test
loopne
adc
daa
add
lds
inc
sbb
icebp
loope
stc
repz
jns
bound
mov
test
sbb
fwait
push
mov
ds
rclb
insl
and
idivl
pop
sahf
sub
clc
jecxz
aam
and
pop
pusha
rcrl
cmp
jnp
ds
sub
out
bswap
mov
xchg
popa
xor
mov
stos
xlat
outsl
dec
xchg
pop
jbe
loope
out
xchg
pop
arpl
push
je
mov
and
gs
daa
cmp
sub
lret
fstl
xor
mov
push
jne
es
out
repz
jae
jmp
cwtl
shlb
ds
out
imul
add
inc
cltd
xchg
fisubl
repnz
mov
jg
and
leave
aam
loopne
test
dec
lds
push
mov
jae
lds
inc
sub
push
out
add
inc
pop
aad
fimull
sbb
sub
std
test
mov
loope
shlb
xor
pop
mov
xchg
fstl
std
imul
nop
jmp
sbb
into
jns
mov
rcrb
push
pop
dec
cmp
jge
xchg
mov
loopne
icebp
scas
lds
adc
std
dec
mov
cmpsl
jecxz
mov
iret
mov
pop
mov
and
fadd
add
cmp
jnp
pop
enter
cmp
cld
fcmovnb
test
jb
divb
inc
dec
mov
push
jl
push
js
test
int
jnp
sarb
stc
dec
xchg
fcmovnu
clc
mov
jae
shrb
in
rol
cmc
divb
ret
jns
push
pushf
imul
dec
mov
aad
add
sbb
inc
subl
dec
push
or
dec
or
jl
js
push
push
pop
adc
jbe
lret
xchg
push
into
xor
fdivl
cmp
mov
jmp
push
punpckhdq
cwtl
call
shrl
mov
inc
cmpsb
sahf
outsb
ret
inc
pop
mov
out
adcl
mov
mov
inc
popa
mov
add
imul
inc
cwtl
shlb
inc
clc
es
inc
cmp
popa
lock
pop
inc
dec
stc
es
dec
mov
mov
cmpsl
push
xchg
ret
jmp
or
jecxz
test
iret
fistpll
sub
and
sub
fcompl
xchg
sbb
jmp
dec
xor
cmp
cli
lret
mov
jne
flds
repz
push
mov
negb
lods
in
pop
pop
into
pusha
inc
outsb
jle
dec
insl
rcrl
rorl
add
mov
xchg
scas
fwait
movsb
pop
loop
add
adc
jg
leave
pop
fdivl
pop
les
rclb
inc
add
cmp
cltd
xchg
mov
adcl
rsm
test
in
pop
or
sarl
mov
jmp
cmp
dec
jne
ret
dec
insb
push
jl
test
mov
push
dec
and
or
jbe
xchg
cmp
cmp
iret
inc
int
jnp
inc
loop
lcall
outsl
add
pushf
jne
test
cmp
ficoms
push
and
testb
adc
mov
sbb
aaa
jae
xchg
out
vmread
stc
fwait
mov
and
insb
incl
out
inc
dec
ljmp
test
es
mov
dec
rcll
mov
adc
and
mov
push
in
adc
ret
xor
testl
repnz
daa
sbb
fs
ret
xchg
adc
cmp
cmp
cmp
push
add
ror
inc
pop
cltd
and
aad
dec
mov
sbb
cmc
cli
insb
adc
and
bound
ret
dec
repz
jne
into
scas
mov
test
dec
pop
out
dec
mov
xor
push
jo
and
call
sub
pop
add
mov
sbb
mov
incl
mov
adc
push
jmp
js
fs
sub
pusha
sub
imul
push
cmp
fistl
cmp
dec
jo
stc
jg
cltd
and
mov
sti
sbb
test
add
enter
movsb
xor
or
mov
xchg
inc
iret
mov
lcall
jecxz
int3
ljmp
pop
fcompl
sub
mov
int
into
mov
pusha
or
pop
stos
test
and
or
addr16
nop
xchg
pop
mov
fcmovb
js
cmp
aam
cmpb
and
push
loope
dec
adcb
and
imul
cmpsb
cmp
in
jg
mov
in
shrl
pushf
dec
sub
rcr
jae
icebp
pop
adc
jnp
adcb
incb
xor
aam
pusha
jmpw
je
iret
push
sub
mov
pop
decl
add
in
push
push
out
jp
pusha
orb
cli
xlat
rolb
inc
inc
test
mov
inc
mov
mov
adc
icebp
dec
mov
inc
shll
loop
cmp
mov
popf
pop
fwait
mov
jne
dec
inc
and
sti
js
rcrl
and
or
das
lahf
dec
ret
mov
or
fwait
repz
orb
cmp
jns
shlb
mov
sbb
xchg
div
push
inc
fs
ficompl
jae
pop
js
dec
jl
shrd
jno
imul
inc
lods
mov
dec
sub
or
jnp
lods
xchg
fsubrl
add
jg
mov
push
fisubrs
adc
adc
ror
out
mov
cs
push
aad
push
mov
fmull
xchg
stc
inc
fisttpl
dec
repnz
pop
xor
jecxz
lds
add
pop
add
and
mov
pop
popf
mov
scas
int3
sti
or
mov
mov
mov
pop
dec
push
adc
cmpsb
lcall
mov
stos
lret
ljmp
mov
jno
adc
jns
idiv
mov
sbb
add
inc
jl
insl
mov
dec
stc
les
jbe
test
sahf
push
jns
aaa
inc
in
dec
imul
cltd
cld
push
jecxz
aam
adc
or
stos
cltd
jl
mov
cmp
das
stos
mov
sbb
sbb
jp
mov
shr
lret
and
cmc
push
rcrl
add
enter
pop
xchg
inc
arpl
jns
jg
stos
fildll
cmc
mov
jb
mov
dec
test
xor
sarb
or
fdivl
cmpsb
and
xchg
jb
das
insb
xor
cld
push
sti
and
psubsw
or
push
call
rorl
mov
jp
clc
sbb
ret
mov
jge
and
lea
cld
jl
cmpxchg
push
xchg
and
scas
lahf
jle
imul
jge
mov
dec
rorb
add
iret
sahf
push
mov
mov
decb
xchg
jmp
cwtl
mov
addr16
mov
pop
stos
inc
jl
jb
and
sub
mov
dec
dec
lods
bound
insl
push
and
inc
insb
mov
stc
push
xor
adcb
sahf
jmp
pop
out
push
call
ret
sub
xchg
aad
pop
inc
in
push
add
xchg
movntq
out
mov
test
lea
push
in
mov
inc
gs
mov
xchg
add
xchg
pusha
rcrb
cmc
pop
iret
sub
dec
mov
mov
xchg
outsb
or
movsb
dec
mov
mov
sti
psubb
ret
faddl
push
jne
sahf
mov
or
jg
std
out
popf
cmp
push
out
je
pop
jl
xor
add
fstps
or
ljmp
fwait
std
sub
jns
cmp
mov
inc
xchg
aam
popf
jno
out
push
jmp
mov
subl
les
cs
sti
rcrl
mov
test
mov
in
dec
notl
int3
leave
lcall
mov
inc
je
dec
pushf
repz
adc
int
stc
rcrl
mov
mov
mov
dec
sub
mov
shrl
inc
pop
psubb
or
jnp
push
jp
mov
push
mov
mov
jmp
xchg
cltd
aas
ds
fsub
cmp
lcall
fcmovbe
shrb
daa
push
inc
jbe
dec
mov
xchg
lahf
mov
enter
fcmovb
xchg
jbe
or
jmp
push
cmc
xchg
or
cmp
mov
jl
test
jo
cmc
push
mov
jo
cmp
xlat
jle
addr16
icebp
dec
shlb
mov
xchg
pop
push
mov
xchg
mov
pop
or
fcomip
rep
jge
idivl
test
bound
aam
lcall
iret
and
adc
push
cmp
lea
xchg
cmpb
dec
lods
fdiv
ficomps
in
jno
xchg
clc
test
mov
and
push
fdivl
dec
out
clc
xchg
mov
scas
stc
pop
adc
fidivrs
mov
mov
mov
mov
jae
push
xor
int
dec
imul
test
int3
mov
inc
cmp
inc
clc
push
cli
adc
push
mov
xchg
dec
mov
adc
sbb
pop
aam
sbb
mov
lretw
mov
xor
out
shll
mov
push
dec
xchg
or
cmpsl
lahf
dec
cmp
div
adc
xchg
aam
dec
test
hlt
jno
adc
mov
or
xchg
rorb
cmp
enter
or
mov
je
push
jmp
dec
sbb
mov
pop
inc
push
or
es
inc
orl
pop
adc
out
jg
sbb
test
push
lret
push
movsb
ret
fidivl
mov
sub
enter
pop
cmpsl
adc
cmp
daa
arpl
out
loopne
in
xor
sub
scas
fcmovb
lods
jno
dec
popa
int3
out
cs
rorl
test
cmp
lret
or
sub
dec
loopne
ss
cli
and
pop
je
push
cmp
test
sbb
test
cmc
mov
hlt
adcb
cmp
mov
push
es
jge
bound
mov
popf
sbb
inc
pusha
leave
cmp
inc
and
icebp
loopne
orb
sbb
push
inc
xrelease
ss
pop
sub
aam
xchg
mov
cltd
stos
and
ja
xchg
and
jno
cli
lret
ficomps
mov
rcll
mov
cmpb
inc
sub
sbb
and
rclb
xor
mov
pop
sbb
clc
sbb
mov
pop
pop
sub
pop
inc
pop
xchg
sub
or
aad
mov
push
mov
insb
mov
test
mov
test
lods
push
scas
dec
fnstenv
mov
push
push
push
jno
out
jg
mov
push
or
out
aam
jnp
movsb
push
arpl
out
add
jg
leave
les
mov
ret
mov
repz
iret
cmp
inc
xchg
leave
sbbb
or
lahf
aam
inc
shll
add
fistps
jns
arpl
stc
sbb
in
mov
dec
rcr
jno
jae
dec
cwtl
fldl
cltd
lods
mov
loop
cmc
int3
repnz
pushf
testl
jb
push
mov
add
jge
xor
dec
jb
fucomi
roll
xchg
inc
pop
pop
out
push
dec
loopne
in
adc
xor
jb
dec
cmpsl
xchg
cmc
dec
dec
aaa
cmp
fs
ret
jbe
inc
jg
pop
sub
test
rcr
and
inc
dec
mov
mov
mov
ret
sbb
sub
mov
les
mov
sub
cmc
xlat
xchg
lret
add
jnp
dec
mov
or
iret
xchg
fstpl
fs
popa
out
sbb
mov
cmpsl
in
inc
ret
xor
shlb
in
insl
pop
xchg
fsubrl
mov
cmp
sbb
in
xchg
cmp
mov
mov
jae
cmp
inc
cmpsb
mov
iret
adc
aas
fidivs
xlat
mov
sbb
cmpl
test
popf
xchg
jae
mov
data16
sbb
or
mov
movsb
inc
out
cli
sub
mov
lcall
std
adc
es
sbb
andl
movb
repz
inc
push
ja
fcoml
movsl
std
dec
mov
mov
push
hlt
hlt
dec
clc
mov
jg
ss
push
adc
repnz
jmp
mov
xchg
inc
rcr
ret
mov
push
sbb
dec
xorl
cmpsb
mov
test
lret
popl
in
filds
dec
es
loopne
mov
insb
sbb
aam
mov
imul
xchg
dec
aad
cmp
adc
fistps
adc
push
sub
push
cltd
cli
mov
sbb
loop
mov
pop
inc
cmp
adc
mov
inc
jnp
jb
push
test
xor
popa
lret
pop
inc
call
mov
jg
cmp
inc
inc
imul
add
dec
cmpsb
flds
hlt
fcmovbe
jge
xchg
inc
imul
cwtl
xor
jne
pop
cmpsl
rclb
repnz
mov
mov
mov
mov
pop
out
xchg
in
ror
std
pop
push
sbb
into
jbe
push
clc
test
push
jmp
push
repnz
or
clc
insl
pushf
fs
in
orb
or
mov
dec
das
inc
es
cltd
cmpsl
push
adc
sar
cmc
dec
movsl
add
cmp
or
ficompl
cmp
mov
data16
int
xor
xor
lret
dec
dec
mov
outsb
es
push
inc
adc
jmp
stos
fwait
mov
inc
js
int
arpl
fcoms
movsb
pop
arpl
testb
daa
mov
mov
negl
push
scas
mov
sub
rol
iret
or
mov
lcall
jecxz
pusha
imul
lahf
pushf
add
xchg
mov
rcll
ficoml
mov
aam
mov
sub
xchg
sahf
mov
fistl
in
mov
in
into
xchg
scas
out
or
and
mov
movsl
dec
push
adc
or
xchg
mov
add
inc
pop
sub
or
pusha
push
inc
out
add
cmp
std
test
repz
scas
testb
outsb
jne
jno
mov
cmc
inc
sbb
push
cwtl
je
fisttpl
push
adc
sbb
inc
or
rcrl
dec
jnp
negl
jl
mov
inc
mov
lock
pop
sbb
xchg
jo
out
mov
adc
mov
jnp
nop
inc
adc
lcall
jmp
andb
jns
aam
clc
in
es
fsubrs
xchg
cmc
inc
xchg
xchg
lret
mov
clc
iret
orb
pop
ret
inc
xchg
pop
and
sub
fbld
push
movsl
push
or
xchg
and
pop
mov
mov
movsb
aaa
adc
mov
cwtl
push
pushf
inc
insb
adc
pop
sub
mov
inc
pop
mov
push
jb
je
imul
add
inc
out
cmc
mov
or
push
xchg
mov
ret
loope
sub
ret
popa
xchg
dec
push
arpl
sub
pop
pushf
jecxz
ret
cmp
add
imul
jnp
int3
add
mov
ret
es
dec
repnz
imul
fsubr
jmp
jecxz
pusha
mov
inc
mov
lods
mov
push
dec
pushf
fcmovnb
cmc
into
ss
mov
or
cmovle
mov
rcll
push
iret
mov
or
xorb
imul
add
das
jb
mov
scas
mov
mov
mov
jle
fs
xchg
sbb
mov
popa
adc
fisttpl
es
out
das
push
mov
pop
mov
xor
lret
and
imul
or
inc
out
jo
jb
pop
in
enter
mov
cmp
dec
mov
xor
das
add
out
adc
repnz
dec
ret
sub
loopne
repz
popl
inc
jns
test
orl
sbb
loope
inc
or
insb
fdivrl
data16
mov
inc
mov
push
jg
test
nop
mov
push
xchg
test
inc
cmpsl
rcrb
out
sub
sub
int
push
lahf
mov
sub
fs
xor
jns
popf
mov
shlb
insl
adc
movsb
jno
mov
mov
fisttpl
je
jnp
push
hlt
imul
or
push
jbe
push
inc
insl
jno
jb
movb
mov
cmp
push
add
shll
rcrl
xchg
test
fnstenv
leave
cmp
hlt
andnps
ss
in
sub
lahf
pop
ljmp
test
into
test
rcr
fmull
lds
xorb
push
call
mov
rcrl
jb
cmp
cwtl
insl
jnp
jbe
cmp
xchg
inc
jno
aad
or
imul
cmp
jo
adc
ja
mov
adcb
jno
repz
aam
scas
rolb
jecxz
push
xor
jmp
out
fidivrl
jmp
test
imul
andb
les
scas
iret
pop
mov
je
jl
jp
xchg
and
inc
fs
sub
inc
push
inc
data16
ret
jne
sbb
push
xchg
mov
mov
pop
push
imul
dec
out
sbbl
ds
mov
dec
sub
nop
mov
cwtl
sub
add
inc
mov
sub
inc
shl
cmp
sbb
push
dec
sbb
gs
das
inc
adc
sbb
in
add
inc
or
push
in
jge
mov
xchg
dec
mov
sub
stc
or
xor
mov
add
imul
das
js
mov
aas
xlat
mov
hlt
ds
xlat
pop
inc
stc
lea
jge
imul
pop
pop
and
imul
pushf
addl
shll
aad
iret
shl
leave
setbe
adc
inc
les
add
pushf
lahf
outsl
push
adc
mov
popa
jnp
sbb
insb
rorl
test
ret
shrl
jecxz
lret
imul
inc
jl
pop
xchg
dec
sbb
imul
fsub
daa
std
mov
cmp
cmp
test
jl
ja
mov
sub
in
outsl
scas
movsb
inc
xor
or
inc
loopne
test
stos
fwait
jae
pop
dec
addr16
mov
subl
xchg
fcmovnu
xchg
out
adc
cwtl
leave
iret
cmp
add
scas
sahf
pop
sbb
dec
lahf
inc
jmp
dec
jp
fsubrl
cmc
imul
dec
loopne
jmp
cmp
fwait
or
cmpsl
dec
nop
stc
fwait
jp
jns
fdivrs
stc
xor
xor
sbb
or
int
sbb
mov
sub
je
in
lahf
pop
fwait
mov
adc
ja
add
xlat
sub
pop
sbb
jno
push
imul
push
loopne
or
lret
inc
xchg
cltd
pushf
hlt
cmpsl
int
pusha
sbb
and
test
popf
or
pop
mov
hlt
arpl
push
cltd
fidivrl
mov
adc
inc
icebp
decl
xor
fsts
mov
jns
repnz
lock
push
jbe
cwtl
inc
mov
cmc
stc
ja
mov
testl
cli
mov
lds
cmp
fwait
dec
mov
jmp
inc
clc
sahf
jle
sbb
cld
xor
inc
movsb
jne
xchg
jge
pcmpeqd
repnz
imul
movl
dec
and
mov
cmp
lods
dec
iret
frstor
add
jb
js
out
or
inc
jl
iret
rorb
imul
pusha
add
inc
mov
lcall
dec
clc
daa
divb
cmp
xor
rcr
cld
lock
push
sbb
sarl
aaa
in
lock
pop
xor
notl
repnz
adc
xor
sub
push
into
adc
ds
sub
dec
shl
push
xchg
outsl
inc
arpl
jae
ds
adc
pusha
mov
aas
cli
dec
stos
aad
adc
aaa
call
mov
dec
dec
and
pop
mov
outsb
push
imul
mov
jg
mov
add
xchg
push
fisubrl
sub
cmpsl
push
stos
pop
shlb
pop
cmp
pop
jmp
push
mov
inc
push
jge
push
inc
mov
fcomip
inc
push
inc
push
aam
add
or
sbbb
mov
push
dec
mov
popf
pop
cmp
popf
sbb
dec
mov
mov
pop
sti
jns
loopne
fmul
mov
iret
cmp
push
add
stos
cmp
dec
xor
sbb
xchg
xor
in
jno
xchg
ret
xor
pop
cmp
std
adc
scas
add
ds
cwtl
push
xor
cmp
ret
cmp
cs
dec
test
push
fisttps
mov
fistps
pushf
jecxz
sti
pop
inc
sub
fs
fstpl
or
aam
pop
xor
call
mov
xor
xor
fsubr
aas
jg
in
stos
shrb
xchg
negl
sub
cmpsb
and
jg
sub
dec
out
ret
in
push
xor
push
pusha
comiss
pop
into
out
pop
ljmp
in
inc
pop
mov
lcall
or
inc
aam
lods
pop
int
pushl
cmpsb
lahf
jl
adc
dec
mov
sti
add
push
jns
mov
mov
or
inc
mov
jge
jl
ljmp
cvtpi2ps
inc
mov
inc
dec
sub
outsl
sbbb
pop
xchg
dec
bound
adc
cmp
mov
scas
insb
mov
sahf
dec
push
mov
cmp
jmp
cmp
fwait
cmp
pushf
lods
andl
dec
clc
test
loopne
negb
sub
adc
out
inc
fbstp
inc
out
sbb
pop
jo
dec
imul
mov
jae
shr
pop
jl
mov
inc
loopne
cwtl
mov
stos
mov
aam
mov
mov
pop
push
mov
lret
gs
push
xor
inc
imul
sbb
cld
jnp
mov
out
cmp
inc
sahf
mov
cmp
iret
sbb
jecxz
jnp
add
mov
add
in
arpl
pop
sub
mov
fists
out
lar
jl
mov
and
inc
fs
sub
fistps
sub
cmc
loop
dec
test
stos
jns
sbb
in
push
insl
inc
nop
lahf
mov
fmull
clc
lods
iret
pop
cmp
pop
in
or
shll
push
test
sub
cmp
xlat
iret
adc
inc
mov
cmp
leave
imul
dec
adc
mov
cmp
mov
aas
dec
pusha
or
jecxz
cmp
hlt
sbb
iret
movzbl
daa
sar
sahf
das
sbb
jae
es
mov
scas
inc
mov
cli
lahf
sub
push
push
cmp
push
imul
push
stos
mov
adc
jbe
movsl
and
add
pop
mov
jg
xchg
arpl
push
sbbl
and
loop
push
jmp
test
test
ret
loop
pop
dec
and
push
vcomiss
adc
lock
ss
cmp
sbb
add
outsl
cmc
pushf
push
js
jl
inc
sub
and
fidivrs
nop
and
jae
and
mov
mov
xor
out
xor
sbb
rclb
int
fists
sbb
adc
xchg
pop
into
cmpsb
dec
and
mov
mov
in
pop
ljmp
sub
shrb
mov
insl
imul
fsts
inc
xchg
adc
shrl
mov
rcrl
add
push
jmp
data16
dec
daa
xchg
stc
jae
push
xlat
mov
std
je
int
std
mov
or
cmp
push
xchg
es
and
stos
cmp
push
sub
jmp
xlat
sub
popf
icebp
repnz
cmp
jle
xchg
add
in
pop
mov
ja
sub
sahf
shrl
mov
push
test
ret
lret
dec
lds
cltd
xor
in
daa
imul
push
xchg
sub
jg
ss
sub
dec
jnp
mov
inc
pop
pop
add
push
xchg
clc
mov
pop
jae
lcall
sbbb
and
lcall
fidivrs
and
in
mov
pop
or
mov
cli
jno
mov
pushf
xchg
sar
lret
mov
inc
dec
shl
dec
push
jo
xor
push
xor
jnp
and
xchg
cmp
jno
jl
test
imul
fmul
dec
lods
mov
rorb
mov
xchg
mov
or
jo
jmp
addb
je
cmpsb
mov
or
insl
pop
stc
fnstcw
mov
push
inc
aaa
mov
les
push
cmp
test
xchg
adc
xchg
sub
test
sub
mov
addr16
dec
mov
xchg
pop
mov
test
push
xchg
in
fldt
mov
fucomi
and
mov
js
pop
xchg
loope
jl
daa
inc
or
out
nop
mov
loopne
divl
push
or
loopne
jo
jmp
jecxz
xchg
popl
inc
sub
int
dec
fdivr
push
and
inc
aas
xchg
or
add
mov
fisubrl
lahf
pop
es
inc
jno
add
cmp
sub
pop
cli
mov
dec
pop
xchg
lds
dec
dec
ficoml
sbb
in
data16
sbb
jbe
fcomp
push
sbb
es
clc
fisttpl
std
mov
data16
sub
mov
or
inc
push
jns
and
ja
jl
adc
ficoml
out
arpl
repz
out
cmp
mov
sbb
push
ret
pop
jecxz
adc
nop
cmp
hlt
push
jle
call
inc
jl
push
jno
in
leave
push
arpl
stos
lock
push
into
scas
mov
and
mov
ret
fbld
and
pop
insb
mov
jmp
imul
pop
es
push
adc
pop
shrb
insl
rcr
std
lret
dec
nop
pop
fistl
jae
hlt
push
jo
mov
adc
dec
jns
addb
int3
xchg
std
ds
adc
inc
addr16
push
fistpll
ficomps
roll
sub
out
push
testl
sar
inc
roll
fldenv
int
pop
push
dec
mov
mov
arpl
inc
data16
bound
aad
sub
mov
repz
gs
lea
mov
shl
fwait
xchg
inc
scas
sbb
push
cmp
sbb
mov
sahf
fcompl
inc
xor
sub
mov
popf
cmp
imul
or
shrl
cmp
jo
pop
jnp
mov
rorl
stc
pop
sbb
bound
and
sbb
lods
jne
fwait
rcll
jno
cmp
adc
fwait
add
adcl
xor
scas
inc
adc
xchg
dec
add
in
xor
sub
gs
pop
adc
repz
les
pusha
cmp
nop
cltd
push
ds
xchg
paddb
ja
icebp
dec
push
shl
aas
iret
add
push
insl
push
int3
mov
xor
fs
mov
inc
das
mov
lret
push
sbb
ljmp
push
aaa
xchg
roll
mov
popa
mov
dec
and
sbb
dec
loope
adc
dec
adcl
dec
je
out
in
pop
pop
xor
dec
fists
adc
xchg
mov
pop
dec
jmp
xor
insb
fwait
ret
adc
lcall
jo
int3
mov
dec
ljmp
inc
mov
sti
and
pop
cmpsb
into
repz
pop
mov
lahf
aaa
stos
das
cmc
cwtl
mov
xorl
dec
push
loop
nop
adc
mov
or
add
cltd
adc
jae
stos
ficoml
sub
lcall
jbe
and
pop
adc
lret
mov
xchg
fcompl
sub
loop
mov
jge
lret
jmp
cs
stc
int
cli
int
inc
rol
dec
dec
in
shll
pop
icebp
add
mov
inc
les
pop
js
jl
in
mov
sub
lock
cs
dec
shlb
mov
pusha
pusha
inc
mov
jecxz
sbb
stos
sahf
jb
in
inc
dec
push
jg
mov
pop
mov
out
jno
mov
add
adc
cwtl
sub
mov
push
jb
sarb
adcb
cmp
adc
fistl
in
iret
cs
jg
dec
frstor
sub
mov
lock
cmp
sbb
pusha
in
mov
push
push
hlt
mov
stos
push
mov
cli
mov
js
add
ja
adc
jns
and
sub
jne
or
jecxz
xchg
mov
leave
scas
mov
add
push
mov
idivb
ja
or
cmc
jmp
push
mov
sbb
pusha
leave
inc
lods
mov
test
shr
pop
push
int
mov
or
int3
call
ret
push
jno
mov
dec
jl
lock
loopne
inc
dec
sub
shlb
mov
adc
testb
mov
imul
jo
pop
or
int
pop
dec
test
fldt
mov
movl
push
insl
aad
movnti
push
add
bound
xchg
movsb
cmp
rorl
int3
sub
cld
fdivrs
xchg
cli
vmwrite
inc
inc
outsl
sub
mov
pop
enter
and
jge
jnp
cmpsl
inc
xchg
jl
adc
cmp
mov
fs
mov
fnstcw
pop
jg
inc
pop
popf
dec
inc
cltd
mov
add
int3
mov
fwait
mov
pop
and
repnz
cmp
mov
jl
mov
sti
adcb
mov
cltd
insb
stc
outsl
dec
push
incl
out
idivb
cmp
push
xchg
aas
push
movsl
push
fidivs
int3
loope
nop
pop
inc
inc
in
ljmp
dec
adc
in
jg
pop
or
mov
xchg
add
aas
and
push
arpl
cld
cmp
mov
sub
sbb
popf
clc
mov
test
cltd
or
push
js
pop
mov
pusha
fbld
jmp
mov
adc
mov
mov
mov
enter
push
sub
movaps
adcb
sub
cmp
mov
jecxz
pop
push
daa
repz
push
cltd
jno
test
xchg
push
idivb
sbb
rorl
push
clc
push
mov
imull
enter
ljmp
pushl
and
inc
inc
dec
sbb
xor
cmp
cmp
pushf
mov
pop
mov
or
bound
mov
jnp
repnz
add
dec
cli
xor
loopne
jbe
roll
cltd
pushf
cmpsb
or
ret
push
cmp
xchg
pop
fwait
dec
call
roll
push
movsl
cmp
mov
adc
mov
xchg
outsl
pop
test
icebp
sub
into
add
popa
int3
mov
dec
sarb
mov
shlb
add
xchg
out
adc
repz
dec
lea
pop
adc
mov
adc
sub
call
test
jno
test
imul
dec
lret
inc
push
and
int3
rolb
lds
xchg
fmull
sbb
pop
outsl
js
sti
jbe
sarl
aad
test
imul
jecxz
mov
jbe
pushf
dec
cs
dec
insl
jmp
xchg
fisubrl
lods
nop
xor
xchg
negb
test
aam
ds
xor
out
movsl
inc
iret
mov
je
in
or
mov
add
dec
mov
mov
iret
jb
std
clc
push
push
jo
sbb
fwait
sub
movsl
add
xchg
push
lods
out
imull
cmpsb
rorl
jae
jae
cmpsl
stos
mov
and
dec
mov
inc
sti
data16
push
pop
mov
sahf
shrb
pop
ljmp
inc
scas
andl
in
lret
gs
xor
dec
cmp
jno
lds
int3
lods
rorl
mov
inc
jg
mov
fwait
cld
xor
mov
insl
inc
dec
pop
rolb
xchg
mov
cmp
imulb
mov
or
lret
or
sub
mov
insb
iret
test
mov
out
scas
ds
and
push
xor
cmp
push
pop
mov
xorb
xchg
fisubrs
cmp
movsl
mov
push
pop
cmp
cmp
outsb
cld
pop
out
ds
jae
je
or
sub
sar
inc
scas
jmp
pushl
shl
scas
jbe
aam
add
ret
lock
jbe
push
or
inc
push
repz
dec
xor
es
das
shrb
iret
push
cmp
ja
add
and
popa
mov
loop
cs
aam
je
stos
loope
fmul
into
fwait
imul
cmp
int3
xchg
int3
stos
inc
mov
pop
pop
push
pop
jbe
xor
mov
dec
xchg
cmp
mov
gs
fdiv
sub
stc
push
inc
sti
cld
lret
clc
loop
cmp
push
push
adc
cmp
imul
ret
mov
push
mov
bt
orb
movsl
adc
inc
sub
loopne
push
or
fwait
adc
or
ret
repz
inc
subb
dec
add
ja
mov
sub
inc
pop
sbb
jnp
sbb
xor
lods
push
loope
fistpl
stos
ljmp
rorl
in
sbb
jmp
insl
pop
inc
loope
orb
lods
pop
movsl
cwtl
xchg
sbbl
stos
lcall
push
or
xchg
pop
mov
inc
jl
cmpl
mov
or
stos
fwait
movsb
or
xchg
cmp
jle
or
scas
stc
jns
add
mov
push
ja
or
ljmp
addr16
cltd
enter
jno
inc
dec
mov
push
inc
sti
jo
orl
in
cld
push
ret
mov
xor
insb
mov
xchg
cmp
popa
push
lock
cmpsl
rcll
cld
dec
pop
inc
int3
pusha
data16
jo
jnp
test
dec
insl
dec
dec
inc
adc
dec
into
push
mov
rcll
ljmp
in
and
and
pop
cmp
ret
inc
mov
mov
adc
fwait
cmc
push
in
loopne
fisttpll
cmp
mov
fcomp
ja
mov
in
out
cs
es
out
xchg
xchg
mov
sar
mov
cmp
cmp
lret
and
and
add
sub
push
cld
jecxz
cmp
jl
mov
mov
push
mov
push
jns
rclb
xchg
mov
fwait
or
fwait
sbb
in
pop
xorb
fisubs
add
mov
ljmp
mov
pop
mov
inc
dec
pop
aaa
mov
xlat
stos
mov
pusha
pushf
ror
fs
scas
cmpsb
clc
shll
into
mov
inc
and
sbb
pop
inc
sub
xor
dec
mov
lea
ror
mov
icebp
push
adc
or
jmp
popf
testl
push
clc
jecxz
fucomip
in
shll
add
inc
loop
pop
mov
pop
daa
mov
jmp
lret
fidivrl
adc
cmpsl
push
mov
dec
adc
push
push
mov
jp
nop
adc
push
cwtl
xor
mov
jmp
sbb
jl
push
mov
jae
inc
sbb
sub
sub
imul
jnp
mov
call
arpl
add
push
adc
push
pop
dec
jmp
mov
jbe
add
js,pn
and
addb
shrl
sti
sar
loop
aaa
mov
push
or
pop
pusha
jle
mov
mov
imul
fwait
jns
xchg
cld
lods
flds
or
pop
xchg
fdivrl
mov
out
cmp
outsb
fwait
adc
cmovle
outsb
pop
jg
movsb
sub
add
daa
jno
inc
les
jmp
cld
jecxz
dec
sbb
xchg
rclb
or
cmp
js
sbb
cs
mov
mov
test
rcrb
aas
pop
or
dec
dec
pop
and
pop
pop
cs
in
aad
addr16
dec
cmpsb
xor
xchg
inc
adc
jl
jmp
xchg
inc
lods
fwait
inc
jns
fdivs
and
adc
arpl
jmp
push
int
sti
iret
push
sarl
xorl
bound
mov
iret
xchg
cmp
mov
loop
jmp
std
sbb
jae
inc
jl
loope
jg
mov
ja
push
cmp
adc
lds
fs
xor
in
mov
fs
mov
push
out
xor
pop
mov
pop
aaa
dec
mov
out
dec
inc
movsb
insb
roll
cmp
in
decl
pop
aam
inc
popf
inc
add
xchg
or
dec
clc
lods
sub
dec
loope
dec
dec
jecxz
nop
jecxz
sarl
cltd
add
loope
adc
push
std
hlt
sub
inc
pop
or
scas
push
jbe
pop
shll
inc
or
pop
pushf
or
sub
in
mov
daa
outsb
dec
icebp
pusha
dec
inc
je
in
pop
out
daa
faddl
clc
pop
xor
jmp
fs
cld
mov
adc
insb
sbb
add
push
ja
lods
and
jb
jle
lock
jbe
mov
cld
sahf
das
loopne
jl
mov
js
add
je
mov
outsb
dec
cmp
cs
push
jno
push
mov
faddl
test
imul
inc
dec
out
test
shr
mov
add
and
int3
inc
fs
rorb
dec
ja
mov
sbb
movsb
add
mov
xor
dec
push
jae
clc
adc
and
ffree
cmp
cltd
xchg
push
or
adc
mov
add
sbb
aam
lret
imul
sbb
pop
repz
pop
cmp
repnz
pop
in
adc
jns
or
cmp
pusha
cltd
xor
stc
jmp
add
xchg
pop
repz
pop
lret
mov
push
loope
test
adc
add
push
out
jg
pop
add
jno
fists
xor
xor
dec
mov
inc
or
mov
mov
loopne
mov
cmp
xchg
fcomps
and
add
idivb
aad
stc
mov
xor
outsl
mov
inc
xchg
fstpt
push
inc
outsb
call
cmp
and
pop
mov
int
mov
mov
xor
repnz
mov
inc
cs
push
mov
jne
pop
idivb
cmp
ja
jae
mov
jnp
pop
movb
jns
and
mov
push
jno
stc
inc
or
in
lods
push
sub
and
pusha
and
imul
stos
mov
gs
jle
in
fs
push
pop
mov
iret
sub
mov
or
aas
repnz
setae
sbb
inc
pop
dec
push
push
ror
insb
sub
cltd
ret
rorb
mov
je
dec
loope
pop
jne
inc
stos
outsl
into
push
add
adc
nop
cld
xor
push
ds
mov
cltd
inc
mov
push
xchg
outsb
movaps
inc
adcb
testb
push
stos
daa
pop
dec
pop
sub
dec
xchg
push
and
ret
mov
and
xchg
jnp
xchg
movsb
jl
stc
orb
mov
rcrb
dec
fisubrs
pop
mov
fildl
mov
movnti
or
dec
dec
sbb
fldt
in
lret
mov
int3
mov
inc
jge
mov
lcall
lea
out
push
addr16
pop
out
push
stos
jle
into
jns
dec
mov
xor
jecxz
adc
clc
fdivrl
push
repz
adc
xlat
push
inc
cmpsb
in
pop
xor
loopne
rcrl
iret
pop
jle
mov
bound
push
xor
sub
cmpsl
pop
jbe
inc
movsl
fidivl
cmp
pushf
dec
mov
ja
hlt
movsl
in
push
ja
inc
sub
fucomp
test
jl
sub
pop
xchg
mov
lds
das
push
xchg
dec
sbb
mov
push
jo
cmp
xor
scas
inc
mov
push
sbb
dec
outsb
fcompl
sub
sub
inc
mov
dec
lods
jle
outsl
push
push
xchg
cmp
pop
sub
push
ffreep
fistpl
in
popa
out
daa
in
jb
adcl
inc
je
or
pop
sbb
fstpl
lods
mov
sub
add
daa
push
test
dec
out
push
add
jne
pop
dec
xorl
xchg
push
lret
pop
icebp
pop
and
mov
mov
xchg
fisubl
pop
cwtl
mov
ret
cmc
fdivrl
inc
icebp
in
mov
sahf
shlb
rcll
dec
aam
sbb
pop
loope
roll
stc
inc
pop
mov
iret
fsts
or
insl
dec
out
mov
push
fs
push
std
mov
pop
inc
mov
pop
xchg
cltd
addr16
pop
ror
cld
lds
pushl
in
pop
xor
mov
mov
pusha
jp
sti
cld
ja
fwait
pop
mov
inc
push
cli
les
mov
pop
xchg
push
clc
arpl
mov
imul
cld
add
fimull
dec
jg
mov
push
cmp
jns
es
push
mov
rep
xor
js
inc
add
mov
dec
data16
data16
pop
pop
decb
mov
roll
fbstp
jmp
imul
stos
mov
jp
mov
cmp
decl
cs
popa
add
call
sarb
es
pusha
and
and
xchg
rorb
sub
mov
sbb
pop
dec
nop
lcall
lahf
cs
sbb
inc
sub
or
xchg
imul
cmp
insl
sbb
and
sbb
mov
push
and
adc
sti
ror
push
dec
jle
movsl
aas
cli
sbb
xchg
mov
clc
std
mov
lahf
sub
mov
mov
and
push
push
mov
push
stc
lods
sbb
imul
push
push
or
jecxz
mov
ret
or
jne
dec
jmp
jae
repz
hlt
dec
inc
not
sar
mov
iret
adc
dec
clc
mov
push
aam
dec
jbe
repz
mov
inc
popa
dec
outsl
mov
pusha
in
adc
mov
shrb
rorl
repz
jns
in
inc
dec
dec
insl
test
fidivrl
std
ljmp
shll
adc
add
adc
cs
pusha
or
jg
test
dec
pop
mov
push
mov
fidivrs
push
pand
popa
and
cs
out
insb
cmpsb
mov
push
push
rcr
adc
pop
push
hlt
jmp
sub
addr16
jmp
movsb
mov
add
lret
inc
dec
and
jg
xor
dec
and
or
insb
sbb
adc
in
mov
pop
int3
sub
cli
mov
jl
out
pop
dec
scas
cltd
aaa
imul
cmc
dec
loopne
mov
xor
testl
xor
add
xor
xchg
push
mov
fcoml
jp
cmp
call
in
jecxz
inc
mov
push
jne
mov
add
and
mov
xchg
aaa
mov
inc
add
and
loop
jmp
jae
jl
push
adc
enter
lahf
test
addb
out
push
jne
es
fbstp
dec
shrl
test
test
xor
adc
fldcw
mov
jno
sub
push
hlt
cmp
push
icebp
negl
movsl
xlat
or
addr16
sub
rorb
adc
jae
pop
xor
inc
pop
pop
jmp
inc
test
jle
jbe
rcrb
inc
bound
push
mov
mov
jle
into
jae
push
pop
pushf
inc
lret
loope
and
push
jnp
xchg
jno
repz
fnstsw
arpl
loope
int3
iret
inc
pop
fwait
jmp
mov
inc
nop
fcmovbe
test
fs
inc
mov
xchg
repz
nop
pop
pop
add
sbb
add
push
mov
sbb
xor
dec
mov
sti
aad
mov
iret
mov
je
pop
xchg
xchg
aaa
inc
dec
repz
jno
cmp
push
cmp
out
filds
inc
sbb
inc
xlat
sub
pop
dec
xchg
lea
jbe
sarb
or
push
insl
add
ret
outsl
dec
adcl
jno
out
pusha
cmp
sub
jmp
popa
sbb
fwait
push
jbe
or
iret
add
push
or
dec
clc
pop
push
into
mov
pusha
mov
pop
ficomps
pop
cmpsb
xlat
push
lahf
scas
dec
test
lcall
dec
inc
ja
inc
xor
std
lcall
adc
idivb
jmp
data16
sti
jae
and
shrb
lds
aas
ret
std
int3
adc
pop
stc
xchg
mov
mov
loopne
out
std
fbstp
movsb
xor
repnz
inc
mov
pop
rorb
test
pop
les
adc
push
inc
out
push
divb
popa
addr16
test
lods
pop
daa
lds
sub
shrb
aaa
jae
xor
or
push
mov
pop
jg
jnp
sub
bound
pop
dec
shll
jne
ret
xchg
lods
jl
clc
jmp
push
xor
scas
add
pop
ret
addr16
xor
mov
pop
push
jno
add
xor
add
xor
aaa
out
ja
test
testl
fucomp
in
pop
sub
scas
out
fwait
data16
and
push
mov
xchg
rcll
fs
sub
mov
inc
jns
ja
subl
inc
rcrb
xchg
sub
and
insb
sub
sbb
push
sbb
push
jle
adc
mov
cmp
or
and
sub
fmuls
inc
inc
mov
jmp
pop
add
scas
fistpll
lea
fwait
aas
leave
outsb
out
sahf
mov
pusha
rorb
shl
lret
inc
inc
jp
adc
pop
nop
jns
pop
cwtl
fldcw
cmp
mov
imul
out
jl
mov
xcrypt-ctr
cmpsl
fiaddl
es
lock
lds
or
xor
decl
mov
jno
aas
aam
movsl
rolb
sub
xor
jb
pop
ds
push
add
mov
push
jmp
push
dec
rcrl
mov
fistps
jne
push
aad
stos
sar
add
push
adc
inc
mov
mov
mov
cmp
popa
fwait
push
movsl
adc
shll
mov
lret
mov
add
aas
push
cld
xchg
pop
scas
or
mov
adc
sarl
jno
mov
loopne
pop
lods
add
jmp
dec
repnz
les
push
sbb
add
mov
sbb
pop
mov
jg
add
out
pop
xor
inc
add
leave
push
mov
lods
mov
inc
movb
jno
in
lds
test
cmp
or
sbb
lock
inc
mov
mov
stc
data16
mov
subl
aad
pop
cmpsb
aam
cmp
inc
xor
add
pushf
pop
sub
icebp
mov
cltd
pop
std
nop
fs
lcall
or
push
std
or
push
leave
jnp
adc
fwait
xrelease
das
test
dec
cmp
xchg
sub
ja
inc
xchg
dec
loope,pt
cmp
mov
test
mov
pop
xor
mov
cmp
cmp
jbe
sub
fstpt
push
lcall
arpl
enter
cmp
mov
int3
push
cltd
filds
dec
sbb
loopne
push
testb
into
dec
sahf
lcall
mov
xchg
jb
nop
mov
pop
add
mov
test
push
pop
loop
lds
jg
mov
insl
aad
push
rcrl
and
in
int3
scas
pop
flds
loopne
iret
stos
or
add
ja
adc
jecxz
aam
cmpsb
incb
popf
mov
aaa
push
enter
test
sub
push
outsb
dec
pop
stos
fs
ljmp
add
pop
inc
sub
notl
leave
mov
stc
push
mov
popf
rol
mov
clc
dec
inc
or
dec
stos
out
xchg
pusha
lret
shl
cld
mov
dec
sar
dec
push
cmp
push
pop
scas
xchg
jmp
int3
xchg
mov
cmp
mov
in
pop
jge
nop
sete
notl
shlb
mov
and
cwtl
cmc
mov
or
maxps
mov
cmpsl
adc
push
jnp
sti
sbb
sarb
addr16
xlat
icebp
cmp
lcall
xor
add
xlat
cmp
cmp
test
js
cltd
fdiv
inc
imul
icebp
adc
mov
addr16
insl
sbb
in
xor
inc
inc
cmp
adc
mov
jns
mov
pop
mov
push
adc
gs
mov
jecxz
out
jge
out
cwtl
repnz
push
fsts
ret
decb
jnp
repz
adc
jg
icebp
xor
shl
cld
push
mov
inc
lcall
xor
cmp
dec
mov
pop
fs
imul
xchg
jno
popa
sbb
je
jl
shlb
dec
pop
cmp
push
gs
fsubrl
andb
pop
lods
out
cmp
pop
adc
mov
xchg
mov
rcr
jecxz
popf
xchg
fisubl
xlat
mov
jns
mov
js
dec
or
adc
xchg
inc
pusha
fidivl
mov
bound
scas
decl
mov
repz
les
pushf
and
test
ja
rcrl
arpl
repnz
ret
push
dec
idivl
add
inc
cmp
mov
xchg
xchg
aas
lods
sub
push
pop
loop
dec
sub
es
in
scas
cltd
mov
out
inc
clc
lcall
dec
dec
sub
push
icebp
vrcpps
push
orb
cmp
lret
dec
jnp
push
insl
movsb
sbb
jb
loop
pminub
or
in
shl
aad
xor
cmp
push
pop
cmpb
sbb
push
mov
adc
popf
and
mov
ss
cmp
arpl
mov
movl
js
mov
cmpsb
mov
out
push
push
mov
cld
jnp
adcb
ss
pop
into
into
inc
push
mov
sub
lods
ficoms
push
jae
mov
sbb
jge
mov
mov
repz
mov
inc
call
cmp
mov
mov
ss
ds
ficomps
pcmpgtb
imul
sub
inc
loope
sbb
push
scas
popf
mov
mov
jp
fisttpl
icebp
fs
int3
out
dec
movsb
mov
sub
pop
rclb
movsl
aam
or
repz
clc
xlat
or
enter
cmpsl
xor
fstpt
jecxz
inc
cmpsb
and
push
cmc
dec
pop
and
push
jmp
ja
inc
push
les
xchg
mov
jecxz
sbb
jmp
mov
fs
movswl
out
mov
dec
cwtl
or
dec
hlt
mov
stc
or
pop
ja
push
iret
movsb
xchg
aaa
rorl
mov
push
roll
cwtl
push
mov
outsb
out
es
out
pop
cmp
push
fisubrl
mov
stos
fs
mov
ljmp
cmpl
and
sarl
inc
mov
adc
sub
mov
ja,pt
repz
imul
ror
inc
dec
aad
push
fiadds
aaa
or
sub
sub
stc
or
pop
int
std
mov
inc
cmpsb
pop
repz
data16
pop
push
in
mov
fisubrs
lods
dec
das
cs
xchg
fdivl
xor
mov
xor
addr16
sbb
or
pop
add
fwait
jo
sbb
leave
sti
in
adc
addr16
in
cmp
push
lret
hlt
jo
rcr
jmp
out
mov
push
mov
jb
imul
ret
scas
jle
xchg
in
cmc
fsub
xchg
aad
mov
jnp
cmp
mov
in
in
test
xor
mov
adc
add
cmp
cld
xchg
daa
repz
jbe
es
sarl
mov
fistpl
and
and
push
cmc
shlb
outsb
push
add
cmp
lahf
or
mov
out
inc
push
fldt
dec
mov
mov
mov
pop
sub
out
jl
jne
dec
nop
xchg
xor
inc
iret
and
cmp
push
mov
push
jge
jecxz
std
lds
xchg
mov
lock
imul
addb
cmp
ret
sub
ja
and
mov
mov
sbb
sbb
imul
xchg
dec
mov
jno
mov
aam
inc
mov
mov
ljmp
sub
data16
adc
test
mov
test
loop
mov
rolb
sbb
rcrl
nop
inc
xchg
pop
out
fwait
stc
cmp
repnz
mov
das
cmp
iret
xor
jg
jo
das
mov
lret
jno
shlb
push
js
mov
xor
adc
ja
pop
inc
or
aam
jne
inc
call
fldt
or
pop
pop
rcr
ss
cltd
pushf
mov
fwait
iret
std
rcrb
mov
ret
icebp
fmul
aam
xor
mov
mov
rcll
push
or
jno
mov
test
xchg
shl
andl
movsb
push
pop
dec
fdivr
pop
mov
adc
xchg
dec
cmc
mov
dec
pop
sbb
out
fisttpll
jge
std
mov
push
stc
push
or
pop
jne
lcall
fdivrs
add
adc
arpl
mov
stos
dec
stos
inc
xchg
sbb
cld
mov
jbe
imul
mov
add
xchg
mov
xchg
inc
mov
inc
and
lods
xchg
data16
loopne
sbb
pop
cmpsl
js
mov
mov
pop
jmp
dec
inc
jno
pop
jmp
mov
fscale
test
test
repz
inc
mov
pop
shll
and
dec
call
les
in
ret
push
jmp
lret
aaa
icebp
add
ss
push
dec
push
nop
or
scas
and
inc
mov
mov
sti
adc
pop
pop
cmpb
mov
and
pop
adc
ja
cmp
and
xor
mov
add
or
xlat
xchg
les
mov
adc
stos
daa
out
and
fcmovnu
mov
sub
pop
jae
add
jb
into
mov
jnp
sub
mov
inc
loopne
divb
imul
pop
and
in
ljmp
push
sbb
repz
pop
shrl
pop
mov
add
loopne
in
push
mov
shll
stos
ret
mov
mov
sbb
cmp
jle
sub
mov
cvtps2pd
fs
fidivl
and
mov
adc
sbb
movsl
insb
adc
push
stos
imul
mov
iret
fstpt
cmp
xor
iret
push
mov
clc
mov
loop
jnp
mov
ja
pop
and
jg
pop
inc
mov
mov
inc
clc
adc
out
or
mov
pop
cmp
pop
std
mov
push
sbb
mulb
inc
xchg
ds
cmovs
add
ficoms
or
stos
sub
out
ja
mov
shll
pop
xchg
fdiv
mov
jno
scas
and
xchg
shl
jae
jb
and
xchg
in
mov
push
jg
mov
cmp
mov
inc
inc
cltd
sbb
adc
jmp
sub
inc
adcl
clc
outsl
aad
jno
and
jb
or
pop
mov
sub
pop
data16
sub
dec
lcall
push
les
mov
in
jg
jnp
test
jl
icebp
mov
add
sub
mov
xchg
test
iret
mov
adc
and
rcrl
out
jl
pop
and
and
sbb
cltd
pop
jno
outsb
fmuls
push
cltd
mov
out
idivb
push
mov
fisubrl
mov
lret
test
gs
int3
xchg
push
sbb
mov
mov
orb
repz
lahf
jmp
cmc
shl
shll
mov
inc
and
push
outsb
popa
test
mov
push
push
mov
dec
sahf
fstps
les
cwtl
inc
cmpl
fwait
nop
lahf
fwait
jnp
jmp
pop
movsb
sbb
jmp
add
xor
xchg
pop
icebp
pop
mov
fisubs
andb
popa
fcomps
repz
fisttpll
cltd
xor
add
pop
sub
cmp
cmc
pop
xor
and
push
pop
and
int3
imul
mov
insb
sub
xor
shll
lret
adc
insl
fdivrs
movsl
hlt
xorb
dec
sbbl
out
cmpsb
in
inc
lds
rorb
adcl
test
loope
add
rol
inc
push
cmp
jo
jmp
test
xchg
lds
inc
dec
icebp
iret
adc
cmp
std
out
and
add
fildll
xchg
sub
lods
mov
push
and
inc
mov
ljmp
add
inc
push
xlat
dec
jg
mov
add
sbb
icebp
std
or
out
push
loop
mov
mov
mov
push
sti
dec
xchg
cmc
dec
mov
add
sbb
imul
adc
call
cld
loope
and
cs
jno
jne
shlb
flds
loopne
popf
out
inc
aam
int3
sbb
clc
int
leave
mov
jo
cmp
fwait
daa
xchg
mov
or
imul
dec
int
ds
cs
xchg
int3
sahf
lahf
push
pop
aam
subps
adc
sub
enter
lret
jne
fs
stos
les
ret
stc
mov
lea
scas
push
push
or
fstpt
push
mov
adc
fimull
jl
mov
adc
dec
sbb
aam
insb
inc
pusha
push
test
mov
cltd
imul
push
add
sub
fucomi
inc
cmp
push
xchg
cwtl
jno
dec
test
xchg
aaa
lea
pop
test
roll
nop
bound
scas
cs
push
add
inc
mov
inc
sbb
mov
fidivrs
and
arpl
pusha
or
rcrb
pop
stos
inc
pop
mov
pop
mov
cs
sarl
es
sbb
mov
jno
pop
jno
cmp
mov
lds
lret
ja
pop
int
cli
xchg
push
lret
push
in
mov
jl
mov
bound
push
inc
jge
jle
icebp
daa
movsb
fwait
push
shll
cld
fisttpl
mov
loope
shrb
add
cmpsb
test
ja
xchg
test
jmp
lcall
movb
daa
push
adc
jp
pop
xlat
jmp
cmpsl
jl
jl
dec
inc
sbb
rclb
mov
pop
inc
cmp
fldenv
or
ret
pop
xchg
add
add
ror
lret
scas
fs
mov
mov
pop
mov
xchg
sub
mov
cmp
out
in
scas
mov
rclb
cld
int
inc
push
leave
pop
dec
sti
mov
icebp
into
sub
inc
gs
in
fsubrl
rcrl
and
pop
iret
mov
fisttpl
aam
dec
inc
sub
pop
jb
rcll
add
lcall
fistps
out
jle
add
pop
cmc
ljmp
push
aaa
mov
in
mov
mov
andb
pop
push
sahf
fldenv
xlat
and
dec
push
rep
mov
adc
push
dec
mov
inc
push
inc
jae
adc
sub
mov
fwait
scas
xchg
jnp
dec
adc
scas
je
push
jp
aas
xor
inc
mov
mov
ret
push
cmp
cmp
and
mov
cmpsb
ficompl
jg
mov
popa
mov
cld
fwait
in
pop
pushf
dec
adc
and
orl
daa
imul
jecxz
inc
in
push
mov
sub
inc
insb
loope
xchg
ja
push
and
arpl
mov
repnz
jno
sbb
mov
mov
jl
cmc
mov
std
pop
mov
cs
int3
fimull
loope
or
filds
mov
icebp
imul
subl
je
pop
xor
faddl
pop
push
push
dec
cmp
push
push
sub
clc
in
push
out
subb
push
and
jg
push
jno
cmc
push
inc
sub
jecxz
arpl
dec
jg
xchg
xor
pushf
mov
aam
lea
fldl
pop
pop
pop
sti
repnz
filds
mov
jg
mov
repz
mov
icebp
mov
and
mov
or
adc
dec
adc
inc
dec
xchg
roll
pop
dec
int
fistps
mov
mov
push
lock
mov
xchg
fs
dec
xor
icebp
xchg
sbb
lds
out
fwait
push
pop
js
mov
xchg
std
jbe
sbb
add
rorb
hlt
and
add
mov
xchg
inc
push
inc
loope
sbb
dec
mov
pop
mov
mov
mov
je
int3
jbe
rcll
lahf
sbb
aas
inc
popf
adc
sbb
sbb
cwtl
std
sbb
frstor
or
add
xchg
xor
daa
cmp
sahf
mov
dec
subl
inc
imul
push
loopne
add
xchg
std
pop
push
cmc
or
fisttpl
fisttpl
ror
ret
nop
jl
xchg
inc
icebp
push
or
lcall
cld
sbb
xchg
xchg
arpl
inc
push
lods
mov
inc
ret
daa
mov
jo
outsb
xor
pushf
movb
cmp
ss
pop
add
sbb
testb
add
loopne
pop
lret
mov
movsb
test
clc
popa
push
enter
loope
xor
mov
out
scas
imul
dec
mov
ja
incl
dec
mov
push
cmp
mov
rol
ljmp
push
adc
jno
push
dec
pop
jnp
push
cs
subb
in
and
into
xor
mov
inc
ror
jnp
adc
pop
lea
sbb
ja
es
xor
mov
dec
out
imul
popa
iret
ficompl
and
add
movsl
xchg
in
jg
dec
repz
mov
jmp
iret
incl
icebp
mov
add
dec
hlt
rorl
or
xlat
orb
fwait
insb
sub
out
pop
repz
mov
std
cmp
mov
nop
aas
je
mov
push
xor
loope
pushf
xor
out
test
imul
loop
fwait
dec
xchg
inc
cmp
fcmovbe
pusha
dec
lods
mov
inc
notb
aas
ja
mov
in
scas
outsb
pop
fnstenv
imul
lea
jae
hlt
lret
jge
push
push
sub
aaa
fstps
fbld
pop
or
idivb
arpl
cmp
or
imul
aas
inc
orw
push
xor
sub
ret
mov
icebp
push
hlt
dec
fimuls
lahf
bound
aas
dec
fsubr
mov
iret
push
pop
jo
xor
inc
jbe
fnstcw
sbb
mov
rorb
in
adc
lods
pusha
stc
inc
call
and
dec
ljmp
inc
push
cmp
mov
dec
stc
aas
lret
push
fadds
mov
fwait
jb
outsb
ss
fldt
mov
lahf
pop
inc
subb
jns
int3
add
pop
mov
loope
push
push
xor
call
cwtl
imul
mov
push
inc
jmp
pop
add
outsb
cli
xrelease
out
mov
push
addb
adc
mov
cs
jmp
fistps
cmp
adc
imul
lea
dec
rclb
fisubs
push
mov
gs
popf
push
mov
test
xchg
loope
lret
push
cwtl
lret
in
inc
das
fiaddl
cmpsb
cmp
mov
jo
lcall
push
add
dec
inc
lret
adc
and
jmp
pop
and
mov
pop
aad
add
mov
xchg
pushl
stos
movsl
clc
push
cmp
cmc
loop
or
scas
sbb
or
xor
xchg
xor
jbe
mov
sbb
int3
cmp
fs
shlb
loop
lahf
pop
movsl
scas
jbe
pusha
fimuls
lea
fldcw
hlt
es
jo
push
iret
jg
pop
enter
and
adc
mov
lahf
jmp
cld
mov
mov
cmpsb
push
xchg
loope
mov
mov
xchg
xchg
push
dec
in
out
loopne
pop
lea
jg
out
stc
imull
mov
xchg
addr16
inc
sbb
mov
or
xchg
cmp
mov
push
scas
xor
pop
mov
pop
push
jl
insl
sbb
pop
into
pusha
dec
fdivrp
push
push
inc
inc
adc
sbb
arpl
std
or
inc
jno
rorb
popa
fisubs
call
adc
push
pop
call
cmp
dec
xchg
jo
imul
mov
inc
bound
pop
fstpt
decl
ss
inc
fimull
stos
loope
adc
test
aaa
add
push
cmp
sbb
iret
test
or
dec
dec
or
outsb
xchg
adc
inc
sbb
sub
jp
and
fdiv
popf
ljmp
mov
xchg
pop
push
pop
and
sbb
sbbb
or
fwait
mov
and
jecxz
mov
and
push
pop
inc
dec
xlat
mov
jns
jns
movsb
jmp
dec
cld
movsl
sahf
mov
in
lods
xchg
add
movsb
pop
enter
decb
out
lret
add
xchg
aas
inc
dec
jne
fwait
sub
shll
enter
out
js
shlb
incb
xlat
cmovg
inc
xchg
test
or
inc
xchg
mov
mov
cmc
sub
popf
xchg
nop
mov
popa
mov
add
fidivrs
jl
jno
dec
add
xchg
test
mov
jecxz
rorb
int
inc
adc
std
sub
and
out
push
shrb
adc
es
add
ffreep
in
inc
andl
xchg
stos
in
add
pop
sbb
push
outsl
mov
repz
pop
mov
ljmp
xchg
xchg
dec
add
push
inc
into
fcom
imul
pop
xor
xchg
int3
and
stc
push
ljmp
lods
mov
loopne
mov
ss
es
out
fsts
out
add
cmpl
les
dec
lret
orps
lret
push
inc
in
push
mov
jne
xchg
dec
mov
cmc
mov
cmp
sbb
loopne
cli
push
push
icebp
cmpb
xchg
rolb
out
fwait
inc
ss
idiv
mov
and
shll
ja
out
mov
inc
fs
fimull
pop
nop
dec
jae
mov
movsl
sbb
inc
push
ds
jnp
mov
pop
push
jns
gs
push
in
imul
sbb
mov
xor
icebp
mov
push
inc
call
sbb
pop
pop
pusha
in
daa
cmpsl
mov
pushf
sub
cmp
jne
pop
sub
xchg
dec
in
push
fs
dec
xchg
lods
mov
push
jns
out
mov
sbb
push
iret
adc
pop
scas
push
mov
fldcw
jae
int3
stos
loopne
xchg
or
je
shll
lods
push
cmpsb
in
cli
cmp
dec
test
ret
adc
sbb
aaa
into
jns
int3
inc
adc
insb
or
xor
negl
dec
lret
mov
jae
cmp
ret
push
cmp
pushf
xchg
jmp
sarl
jl
fildl
loope
jns
fdivs
lret
pusha
mov
jno
or
into
mov
lods
sub
in
lods
xchg
popf
sub
shll
mov
jbe
sub
lret
in
movsl
add
dec
xchg
fistpll
sub
sub
jae
inc
rorl
adc
pop
push
pop
int3
repz
dec
mov
fnstenv
cmp
push
lods
inc
stos
in
push
push
cmpsl
cmc
cmp
push
mov
mov
leave
repz
test
xor
add
xchg
push
push
repz
mov
cmp
imul
pop
cmp
add
icebp
data16
or
add
cwtl
adc
aas
sub
jle
aad
enter
push
es
test
mov
push
mov
les
aam
jae
into
mov
fimuls
std
mov
sbb
pop
jg
adc
jle
or
add
dec
out
hlt
pop
mov
cli
je
mov
ljmp
mov
fimuls
pop
mov
jns
sub
xor
insb
int3
jbe
jmp
mov
test
pop
callw
mov
mov
xlat
in
adc
dec
jns
mov
das
dec
stos
int3
loop
mov
and
xor
movsb
rolb
clc
push
inc
dec
mov
outsb
inc
imul
std
and
scas
rorb
dec
out
xor
pop
mov
mov
jns
lret
jl
scas
pop
sbb
xchg
stos
jl
loope
sti
repnz
rorb
iret
dec
sbb
sbb
jp
jmp
pop
xor
imul
arpl
bswap
stos
jecxz
addb
lret
jno
cmp
xchg
or
fstps
sti
adc
ret
repz
sub
testb
dec
push
cltd
or
ret
dec
gs
adc
sbb
stos
les
push
emms
repz
pop
sti
xchg
fstp
dec
xor
xor
sub
aad
mov
cmc
sub
dec
pop
test
push
jg
cmp
sbb
and
lock
nop
mov
fwait
xchg
mov
xor
adc
mov
iret
inc
or
jmp
dec
dec
mov
fwait
mov
ja
cmc
jns
adc
or
mov
rcl
fsubp
inc
mov
inc
int3
jae
repz
mov
enter
xchg
clc
ret
push
mov
adc
pop
fucomp
mov
loope
pusha
fxch
bound
out
stc
arpl
ds
shll
mov
jns
pop
aam
mov
sub
cmp
test
rcl
sbb
jle
aam
outsl
pushf
imul
js
sarl
mov
jne
out
xor
jmp
add
fucomip
fs
jle
dec
pop
fs
daa
sub
cli
pushf
mov
pop
call
int3
push
pop
dec
aaa
dec
xchg
aas
mov
sti
insb
sub
sub
leave
mov
mov
jmp
ret
jl
mov
sahf
ret
ljmp
adc
add
dec
mov
push
nop
movsb
ljmp
mov
adc
dec
fiaddl
ss
push
movsl
test
mov
pop
and
imul
xchg
lods
dec
cltd
mov
out
dec
scas
fs
pop
or
pop
push
mov
scas
pop
dec
nop
dec
cmpsb
lcall
dec
mov
fistpl
sbb
arpl
insl
mov
mov
outsl
inc
pop
dec
inc
mov
rol
sti
xor
in
jp
sub
mov
jbe
rorl
loope
xchg
mov
sub
or
pop
in
cmp
push
mov
dec
lock
popf
pusha
dec
in
dec
aas
jne
pusha
inc
push
jnp
scas
inc
std
dec
lea
jmp
shll
cmp
add
and
sbb
cs
enter
push
fimull
out
or
icebp
sbb
add
in
ljmp
clc
jle
imul
inc
movsl
dec
addl
mov
jl
divb
mov
fbld
mov
cmc
pop
jnp
mov
mov
lods
fwait
and
ror
pop
cmc
xor
in
inc
loope
sahf
das
adc
out
stos
push
das
clc
aam
xor
dec
shrb
sub
mov
dec
adc
pop
inc
jb
push
cld
ficoml
ss
lcall
adc
or
jnp
call
mov
cmpsl
mov
mov
and
aad
rol
stos
gs
rorb
in
ljmp
xchg
cltd
pusha
cmpsb
mov
sbb
stc
hlt
nop
xor
add
push
xchg
or
fs
iret
sbb
cltd
mov
sbb
mov
rcrb
pop
jmp
dec
push
jno
dec
inc
negl
mov
nop
inc
xchg
add
push
pop
jmp
jno
add
push
or
imul
push
lahf
or
inc
or
push
popf
jl
mov
movsl
pop
sub
aaa
stos
sarl
insb
pop
jmp
inc
push
ss
xchg
test
stos
sub
jo
mov
mov
cmpsl
lods
stos
push
lcall
aaa
dec
mov
fwait
jl
repz
hlt
dec
sahf
cmpsl
push
loop
imul
pusha
cltd
repnz
push
mov
ljmp
insb
push
mov
push
pop
adc
adc
sub
icebp
not
popf
mov
ss
lods
flds
mov
sbb
jns
pop
mov
fldl2t
jbe
push
int3
pop
jno
xorl
nop
into
jge
rcrb
jmp
jge
ficomps
out
aam
cmp
inc
lods
push
fimull
dec
iret
sahf
scas
scas
mov
xorb
mov
cmp
sbb
cmp
dec
cmpsb
lcall
repz
xchg
rorl
push
push
mov
jns
into
push
daa
out
or
sub
popf
cmp
mov
iret
insb
xor
fwait
pop
icebp
div
push
es
das
ficomps
mov
push
inc
ja
pop
ficoml
data16
sahf
push
sub
jl
jno
movsb
dec
dec
push
add
negl
mov
jl
daa
add
cmpsb
popf
fldt
jbe
repz
pop
and
divb
push
mov
lret
jl
mov
popf
jae
cmp
es
incb
das
jmp
ljmp
cmc
cmp
fwait
cmp
cmpsb
sbb
stos
fidivrs
int3
fcom
andl
dec
lods
in
or
mov
push
dec
loope
ss
stc
mov
mov
into
mov
int
adc
cmp
sbb
dec
xlat
in
movsb
xchg
ja
mov
cmp
mov
mov
or
into
ficomps
fisubl
loopne
pop
inc
sub
dec
sti
std
out
pop
fdivs
mov
jbe
add
out
cmp
mov
ja
ja
ljmp
es
testb
sbb
push
les
push
inc
push
dec
inc
jno
stos
push
ficompl
lock
adc
jae
ljmp
push
pop
push
push
scas
in
mov
int
sub
jecxz
test
dec
int
mov
jae
shrb
mov
aam
add
dec
mov
int
push
sbb
mov
out
mov
sub
pop
dec
scas
leave
stc
cltd
mov
pop
sbb
push
dec
mov
leave
cld
fwait
subb
add
dec
int
dec
dec
push
adc
aaa
sysexit
adc
push
xorb
mov
mov
xchg
pop
cltd
push
outsl
int3
push
add
scas
pop
sbb
mov
enter
adc
jo
aad
cmpsb
or
rcrl
push
or
add
jp
adc
mov
mov
aaa
stos
in
mov
in
loop
xchg
inc
imul
pushf
lds
mov
hlt
xor
sbb
or
dec
add
stc
adc
xor
sbb
cs
push
sub
and
stos
dec
pop
fmul
jne
std
imul
es
mov
repz
fcmovnb
inc
dec
cmp
sbb
mov
jno
das
pop
out
popf
inc
enter
out
xlat
loope
add
in
test
sbb
dec
mov
outsb
dec
ljmp
inc
ret
in
shrw
mov
inc
nop
fildll
jbe
shrb
aaa
sbb
repz
into
ljmp
imul
cmpsb
or
cltd
sbb
push
add
xchg
pop
push
lret
mov
out
push
mov
out
pop
or
add
out
cld
fstpt
mov
inc
inc
sbb
pop
ds
inc
push
pop
mov
dec
cs
jge
incb
ret
bound
fs
mov
mov
and
insb
push
outsl
pop
jmp
pop
mov
mov
push
nop
sbb
fwait
sbb
pop
movsl
pop
xchg
es
adc
mov
lret
int
adc
jg
je
jmp
pusha
iret
mov
and
xchg
push
and
xor
dec
out
inc
out
push
jecxz
lret
adc
mov
and
js
and
mov
or
mov
into
fadds
aaa
addr16
dec
pop
jno
and
popa
popf
xchg
inc
sbb
mov
mov
imul
mov
aam
pop
das
push
jle
out
aas
mov
cld
jecxz
lds
sub
xlat
in
inc
jne
lret
adc
cmpl
bound
imul
dec
into
std
push
daa
cs
and
cmc
inc
xlat
or
dec
scas
loop
dec
insl
stos
and
sbb
pushf
mov
and
out
rolb
mov
pop
not
push
xor
test
push
lods
lret
js
jne
fs
and
xor
or
cmpsl
das
push
sbb
dec
pusha
sub
lods
and
pop
add
pop
add
imul
mov
push
push
shl
sti
sbb
cmp
gs
mov
inc
mov
cmc
ss
jno
test
jl
mov
jge
push
sti
jno
dec
mov
cmc
sub
into
jae
mov
jl
pop
dec
enter
sbb
cmp
mov
dec
popa
inc
pop
inc
pop
xchg
ffree
cmp
jg
mov
mulb
jno
test
sub
adc
pop
mov
sbb
sti
in
sti
bound
out
pop
jl
pop
push
popa
cmc
push
push
fwait
pop
lds
dec
lcall
icebp
mov
sub
bound
xor
nop
cmp
jge
mov
movsb
js
push
loop
les
xchg
cmp
lret
xchg
dec
shr
outsb
fwait
jae
cmc
lods
stos
leave
mov
pop
xchg
imul
stc
imul
jne
push
mov
mov
fisubrl
ret
lods
pop
popf
adc
clc
jb
pop
gs
movsl
out
arpl
mov
cs
shll
in
adc
and
pop
add
out
cs
dec
icebp
loop
mov
mov
repnz
mov
lret
daa
or
loop
xchg
jp
into
ljmp
inc
push
fwait
and
es
mov
dec
dec
mov
mov
pop
push
inc
imul
gs
sub
rcl
add
stc
imulb
insb
and
or
inc
or
xchg
inc
and
mov
inc
cmp
add
je
faddl
out
mov
mov
pop
insb
sbb
sti
test
lods
daa
mov
xchg
add
pop
ss
mov
lahf
mov
mov
lods
cmp
dec
jne
cs
fcoms
add
imul
cmp
sbb
or
cmpsl
add
mov
testb
stos
testl
mov
adc
sub
lea
in
add
jmp
xchg
push
int3
ficompl
stos
rorb
cltd
int
pop
pushf
fdivrl
ret
outsb
lret
loop
mov
pop
xchg
cmc
cmp
arpl
jb
add
lret
sbb
mov
sub
imul
jno
stos
pop
xchg
xor
pop
mov
push
inc
cmp
fs
scas
adc
add
negl
add
in
jnp
leave
inc
mov
sub
loope
and
jge
mov
pop
mov
movsl
sub
or
test
sbb
xor
sbb
push
enter
lahf
jbe
jg
insb
sbb
pusha
cmp
add
jnp
jno
dec
mov
push
sbb
adc
mov
fwait
fs
xor
push
push
dec
fstpt
adc
jle
push
jp
push
out
in
mov
test
fildl
int3
scas
sbb
icebp
sahf
jecxz
xor
stos
inc
dec
push
adc
add
dec
jecxz
test
stc
inc
sarb
jnp
rcl
jg
roll
rorb
pop
hlt
mov
adc
jae
dec
test
mov
jl
inc
dec
mov
cmpsl
mov
jg
mov
out
sbb
cli
lods
xchg
mov
dec
mov
adc
nop
loopne
jg
fiadds
insb
cmpsl
in
movsl
push
out
or
mov
mov
mov
fldl2e
frstor
sar
sbb
xchg
xor
mov
sub
std
sbb
pop
push
mov
inc
inc
dec
mov
mov
popf
mov
sub
xor
mov
xchg
sbbl
mov
pop
jns
push
loop
js
jecxz
gs
aad
sbb
and
ret
fldcw
push
mov
push
xor
xchg
sub
or
scas
inc
inc
inc
shl
add
xor
mov
jge
push
xchg
fnstcw
ja
not
mov
insb
dec
in
mov
mov
inc
inc
jge
fbld
lea
dec
and
jo
pushl
daa
fs
out
in
ret
in
and
fdivr
movsl
push
dec
mov
jnp
add
mov
scas
leave
and
mov
mov
inc
cmp
inc
ljmp
pop
dec
or
xor
aad
sti
fisubl
push
scas
imul
repz
jl
adc
mov
popf
push
mov
adc
xchg
dec
jno
inc
mov
pushf
mov
jge
fcoms
lods
inc
scas
movsl
cmp
jp
in
inc
sub
xchg
pop
aas
sbb
inc
das
sub
jo
in
mov
fwait
push
mov
call
lcall
lods
cmp
add
push
in
xchg
jl
or
xchg
adc
mov
push
cmp
push
push
lret
lret
push
sbb
rorl
fmull
cmc
outsb
cmp
das
insb
jmp
pushf
push
adc
decl
pop
mov
in
cmc
mov
fcomps
pop
in
js
sbb
sub
fcompl
mov
sbb
out
lock
or
jb
aam
fsubrl
mov
iret
daa
add
out
ret
cmpb
stos
adc
or
addr16
subb
js
jmp
lret
cmp
cmc
fisttpl
xchg
fildl
inc
jns
das
jl
add
push
jp
test
mov
iret
xor
ret
cmpsb
outsl
loopne
incb
test
mov
into
mov
lea
dec
fs
or
inc
arpl
pop
mov
into
sbb
mov
int3
sbb
out
cmc
mov
pusha
lret
xchg
jnp
in
in
out
stos
lahf
es
shlb
inc
movsl
jmp
sarl
push
leave
std
call
jge
jae
int
pusha
repz
fs
push
push
mov
cmp
sub
cmpsb
scas
in
pop
iret
outsb
sub
cltd
jge
mov
fwait
negb
mov
add
push
jg
stos
cld
jmp
mov
cmc
cmp
cmp
in
sbb
ret
adc
repz
lret
and
mov
lock
inc
xor
mov
sbb
inc
cs
insl
add
je
pop
int3
fcom
enter
fimuls
mov
xor
mov
inc
sub
std
pop
cmpsl
das
dec
jp
xchg
push
mov
xor
hlt
xor
xchg
fwait
fs
mov
or
pop
js
aas
mov
jmp
mov
enter
fnsave
cmpsb
outsb
enter
xorb
int
loopne
mov
mov
movsb
push
and
mov
inc
inc
pushf
ret
sub
mov
dec
leave
xchg
push
mov
cld
mov
pop
inc
dec
cmpsl
in
push
icebp
jns
pop
fcomps
repz
dec
pop
inc
cmp
stos
insb
adc
fistpll
push
aam
shl
jge
call
mov
sbb
jae
lret
decb
jmp
fiadds
mov
push
aas
decb
adc
sbb
mov
scas
or
jb
sbb
aam
mov
sub
jecxz
jno
lret
pop
in
pop
inc
cmp
int3
dec
xor
pop
cld
hlt
pop
dec
cmp
icebp
int
lret
jno
push
pop
cmpsl
insb
fwait
mov
jl
imul
jno
mov
cld
lret
iret
mov
mov
fdivl
sub
jl
xor
inc
push
add
fildll
lret
push
push
mov
pop
xlat
dec
or
jb
movsb
or
xor
lret
lock
std
clc
mov
push
cmpsb
in
dec
sahf
lahf
sub
fidivrl
adcb
ja
sbb
roll
adc
fsub
sub
fsubs
jecxz
daa
das
loope
xor
push
lock
addl
cmp
data16
dec
push
jmp
rclb
repz
and
mov
adc
pop
loopne
jae
movsl
cmp
jle
xor
sahf
fidivl
aad
cmp
push
dec
push
push
add
mov
ret
cmp
inc
ret
add
leave
mov
ljmp
rcr
pop
nop
rcr
cmpsl
out
cmp
stos
in
fisubs
decl
shrb
xorl
pop
pop
mull
dec
out
inc
icebp
in
or
fs
rol
jno
fistl
orl
xchg
int3
rorb
and
inc
and
jl
out
mov
jp
sbb
mov
sub
xchg
jb
push
fsts
lret
cmpsl
jl
mov
dec
pop
mov
sub
int3
int
jecxz
insl
ja
lcall
sbb
and
inc
dec
and
cmc
jecxz
in
in
orb
shrl
push
mov
cmp
lods
rorb
mov
adc
adc
popa
pusha
xor
mov
mov
or
push
subl
mov
les
fcompl
or
cmp
adc
cmc
cmc
aaa
jae
lea
outsb
jle
outsl
jnp
sbb
mov
push
das
dec
dec
xorb
and
jg
pop
pop
enter
arpl
fwait
mov
mov
cmp
xor
cmp
ret
iret
inc
fs
dec
jmp
pop
ds
push
adc
or
push
sub
outsl
mov
jg
xchg
daa
adc
daa
popf
cwtl
mov
push
dec
add
cmp
mov
dec
cwtl
add
repz
adc
or
sub
adc
outsb
mov
sub
popf
mov
xchg
mov
aam
dec
lea
mov
cmc
cmp
mov
les
call
std
shrl
mov
mov
stos
fisubl
movsb
push
xchg
iret
adc
xchg
add
push
push
mov
int
mov
mov
scas
jl
mov
push
add
cmpsl
add
push
repnz
push
jmp
imul
cmp
jnp
xchg
dec
fsubrl
xor
mov
dec
or
add
into
dec
pop
and
dec
add
mov
push
cmp
imull
incl
sbb
mov
adc
inc
iret
je
jno
pop
pop
scas
dec
int3
mov
push
dec
outsb
dec
aam
xchg
mov
mov
pop
mov
dec
lcall
or
clc
into
nop
inc
and
fwait
mov
mov
inc
push
ds
gs
jne
push
push
call
ja
popf
fsubrs
xor
cmp
add
ds
mov
jle
loopne
mov
inc
fisubl
or
jno
xor
and
xchg
cs
stos
pop
aas
into
clc
ret
pop
cwtl
dec
jl
sbb
inc
dec
push
lea
xchg
ss
add
pop
sub
push
dec
inc
jo
mov
loop
stos
sahf
leave
out
stos
in
je
hlt
iret
ret
sbb
faddp
dec
jbe
cmc
jnp
mov
sti
pop
test
fnstsw
stc
je
pop
adc
inc
jge
pop
add
adc
dec
fnsave
mov
data16
mov
jecxz
add
inc
pop
pop
or
pop
mov
jge
jg
ja
cmpsl
pop
mov
xchg
mov
subl
enter
jmp
fdiv
rcll
mov
sub
push
mov
mov
mov
jecxz
in
test
scas
dec
int
jne
jmp
mov
std
pop
popf
icebp
jl
and
sbb
sbb
sti
mov
fildl
ja
ds
jb
fdivl
mov
and
inc
dec
lock
xchg
iret
jne
cmp
mov
mov
xchg
mov
mov
adc
ret
mov
sub
mov
dec
mov
sbb
xor
xor
sub
loope
and
decl
mov
int3
dec
cmp
fwait
inc
cmp
adc
jno
pop
pusha
pop
xchg
jne
fimull
hlt
leave
cmpsb
in
inc
fisubrl
jno
xchg
jg
inc
sub
add
mov
lods
in
ret
mov
pop
cld
pop
std
mov
add
test
push
adc
fidivrs
cmpsl
dec
lcall
adc
int
xrelease
sarl
push
ja,pn
hlt
nop
fisttps
insb
push
mov
pop
inc
std
lea
push
ljmp
mov
add
push
icebp
mov
and
lock
sub
xchg
adc
fs
cmc
add
pop
adc
scas
imul
aam
lods
roll
push
push
out
pushf
push
jecxz
hlt
scas
sti
jle
pop
shlb
inc
pop
xchg
cs
ljmp
sbb
dec
fcoml
push
das
add
sbb
gs
iret
ficoms
and
xchg
xor
cmc
push
nop
sbbb
dec
jns
rcll
push
adc
mov
mov
addr16
xor
xor
lret
fs
lcall
roll
fnstcw
mov
imul
call
int3
xor
hlt
cld
test
push
add
fwait
icebp
mov
frstor
cmp
cs
mov
mov
leave
test
scas
mov
mov
mov
jnp
in
repz
push
push
out
xor
cmp
mov
out
fnstenv
aam
push
fsubrp
leave
push
pop
jmp
adc
push
shll
adc
mov
cmc
mov
jecxz
cmp
or
dec
dec
movsl
in
jbe
sbb
aaa
lock
sbb
ret
adc
sub
cmp
fdivl
push
sbb
jbe
push
cmc
aam
sbb
jle
cltd
push
lods
cmp
inc
inc
jo
jbe
mov
and
sub
fs
and
add
lea
fstpt
pushl
jbe
aas
pop
xchg
jno
movsl
inc
sahf
sti
cmp
jl,pn
outsb
in
jae
cmp
les
dec
in
cli
adc
sub
fmuls
cmp
and
mov
leave
push
sbb
ret
mov
imul
sbb
dec
mov
in
shlb
mov
mov
loope
sbb
mov
inc
mov
add
icebp
fdivs
dec
cmp
rcrl
push
mov
jmp
adc
out
les
inc
jae
rcrl
and
pop
fisttpl
xor
ss
cwtl
imul
push
cmp
cmp
sti
pop
mov
pop
add
lret
lahf
inc
pop
lahf
pop
lods
cmpsl
or
push
adc
test
adc
adc
xor
push
test
mov
pop
insb
pop
ficoms
jg
adc
sbb
mov
enter
add
inc
mov
fisttpl
or
push
stos
jae
push
pusha
push
filds
sbb
int3
jg
jmp
add
mov
insl
or
and
cwtl
mov
fs
cmp
rclb
repnz
xor
mov
fcoml
dec
data16
mov
adc
adc
xor
push
imulb
xor
pop
dec
lods
rcl
jl
js
rolb
add
push
xchg
dec
lods
mov
hlt
and
pop
mov
mov
pop
add
shlb
fcoml
jp
bound
jno
xchg
pop
jno
sub
out
push
in
push
scas
loope
and
lcall
jmp
or
cwtl
jbe
mov
je
push
sub
fiadds
jne
aam
sbb
shrb
int
fptan
xchg
xor
jb
inc
sub
cmp
or
push
mov
fwait
shl
dec
sbb
lret
or
mov
insb
xchg
add
push
dec
cmp
and
leave
cmc
push
daa
stos
fsubl
mov
in
ret
fwait
cmp
jl
sti
pop
cmpsb
out
cmp
roll
mov
arpl
movb
cmp
sub
adc
js
sbb
dec
scas
inc
fistpl
cmc
test
iret
rcll
fists
xchg
push
mov
out
iret
push
jno
rorl
sbbb
cmpsb
sub
int
mov
inc
aam
cmc
mov
scas
fdivs
dec
pop
in
scas
xchg
imul
and
jle
xchg
sahf
ja
add
shr
adc
jle
imul
mov
repnz
int3
fcomip
add
mov
scas
cmp
pop
inc
fisttps
shl
pop
cmc
outsl
adc
push
jns
and
push
inc
iret
incl
xchg
xor
xchg
repnz
test
jb
cld
andl
shrl
pushf
mov
lahf
enter
pop
mov
mov
cli
inc
fcoml
ljmp
xchg
popf
sub
imul
pop
mov
paddsw
pop
sbb
adc
test
bound
shlb
repnz
cmp
mov
insb
mov
inc
test
sti
leave
jg
bound
mov
insb
mov
jne
dec
mov
fwait
or
dec
stc
cmpsb
jge
subl
shr
fs
cmp
sahf
mov
xchg
add
test
je
es
inc
pushf
and
sub
pushf
mov
inc
adc
add
dec
pop
outsl
mov
mov
mov
pop
loope
xor
cwtl
pop
ds
xor
mov
and
mov
fmull
pop
out
divb
clc
inc
sub
pop
and
sub
add
ss
nop
aam
xor
loopne
adc
stos
fistpll
push
int3
jl
or
sbb
jl
daa
xlat
fwait
mov
js
adc
stc
jno
add
dec
mov
stc
frstor
es
sbb
pop
pop
cltd
out
subb
add
mov
mov
pop
xor
jae
test
mov
vrcpps
cmp
cld
adc
mov
addr16
cmp
scas
cmp
push
mov
sub
push
inc
push
add
push
push
aad
cltd
repz
or
mov
xor
mov
pop
icebp
lahf
lods
jnp
aaa
sub
dec
inc
fcompl
xchg
sub
mov
sahf
mov
pop
inc
mov
pop
gs
ret
xchg
inc
jmp
or
loopne
cltd
inc
ja
jl
std
adc
mov
mov
ja
mov
mov
pop
cmpsb
into
inc
lcall
fwait
dec
inc
stos
mov
inc
xchg
jae
cmpsl
in
ljmp
bnd
jl
repz
imul
mov
push
loope
push
mov
lret
cmp
add
jg
pop
push
mov
mov
stc
and
push
mov
fwait
sbb
xor
push
enter
inc
cmp
mov
test
mov
rcrl
ja
test
push
mov
lock
push
cmp
xchg
or
mov
int
fimull
insb
push
or
mov
push
adc
inc
rcrl
push
inc
jmp
in
jp
or
pop
mov
mov
inc
cmp
js
cltd
cmp
cmc
mov
cltd
jae
mov
sub
jecxz
fisubrs
mov
scas
add
jl
jg
jmp
or
sub
mov
in
filds
fisttpll
add
xchg
aas
xor
cld
mov
sbb
push
rcl
fisttps
shlb
jmp
xor
je
adc
stc
add
mov
push
int3
cmp
mov
insl
xchg
adc
mov
inc
jmp
xchg
dec
int
das
pushf
add
jg
inc
mov
ret
inc
cmpsl
push
pop
loope
inc
es
fidivrl
pop
add
sahf
or
int
or
or
aam
adc
push
pop
push
xor
out
scas
sub
arpl
cmp
cmp
dec
xchg
xchg
sarb
jl
sbb
int
cld
lods
adc
push
test
movsb
inc
bound
sbb
jl
je
addr16
cld
inc
pop
jo
nop
icebp
xor
or
sti
int3
xchg
fbld
jl
rorl
mov
xchg
shll
push
mov
inc
jmp
hlt
divb
shll
and
enter
sti
jnp
dec
push
mov
mov
xor
mov
subb
xchg
xor
fcmovnbe
push
sbb
lock
aas
movsb
dec
mov
adc
sub
mov
inc
adc
out
mov
push
jle
test
into
mov
outsl
lea
inc
push
in
lds
adc
jbe
pop
xchg
add
cmpl
shrb
stos
fcompl
mov
inc
push
inc
and
xchg
aaa
jp
scas
repnz
int3
dec
cmp
icebp
adc
xlat
pop
jle
dec
lea
push
cmp
pushf
xchg
and
lcall
push
addr16
xor
cwtl
push
sbb
out
xor
jmp
imul
mov
dec
xchg
movsl
jle
cmp
daa
push
outsl
movsb
in
stc
mov
scas
sbb
rorl
jno
mov
xchg
jg
int3
out
sub
sbb
sar
push
add
or
mov
add
jne
xor
adc
push
adc
int3
testb
mov
mov
cmp
sahf
movl
outsb
jp
mov
jno
mov
mov
sub
mov
jns
fwait
sbb
cmp
mov
out
pop
movsb
mov
clc
lcall
jmp
mov
adc
test
out
pop
mov
pop
cmpb
mov
in
mov
imul
jl
mov
adc
mov
lahf
jmp
lods
sbb
xor
iret
cld
pop
rclb
dec
jl
inc
push
xchg
shll
int
cmc
out
es
repz
pusha
es
loope,pt
inc
push
dec
imul
mov
xor
jg
fidivrs
and
cmp
std
jbe
mov
adc
test
adc
loope
add
mov
lret
addb
inc
mov
imulb
jmp
imul
cmp
cmp
jnp
out
sbb
jp
sbb
outsl
aaa
shrb
clc
cmp
icebp
jno
mov
dec
dec
mov
dec
mov
ja
mov
icebp
or
jmp
push
out
adc
mov
fs
iret
mov
push
insl
jge
push
test
je
add
jl
ja
jp
fisubrl
mul
jle
cltd
xchg
push
fcmovu
mov
out
inc
pop
into
push
add
imul
pop
mov
jno
push
jl
or
pop
jns
fsubs
lahf
pop
repz
sbb
fst
xorb
out
stc
mov
adc
inc
enter
xchg
mov
sbb
arpl
jmp
mov
fsubrl
mov
mov
shlb
fmuls
sbb
push
push
add
jns
mov
lret
mov
mov
mov
ss
fwait
and
es
rorl
or
pop
les
iret
icebp
mov
cmp
dec
push
dec
mov
mov
fsubrs
outsb
arpl
call
cs
fs
lcall
mov
jge
pop
adc
cld
jb
dec
add
aaa
int
jb
aam
cmp
push
int
mov
and
cld
outsl
sti
pop
sti
les
xor
imul
cs
xor
cmpsl
xchg
add
fidivs
out
aad
ffree
mov
xchg
in
add
stc
sbb
mov
mov
mov
rorl
lret
in
fisttps
inc
fisttpl
jle
sub
cld
pusha
outsl
in
push
pusha
pop
cmp
adcl
push
inc
clc
fisubrs
int3
jg
icebp
adc
das
push
mov
or
out
andb
int
repnz
jb
sar
dec
and
ljmp
xchg
sbb
pop
sbb
loopne
mov
int3
sub
fldcw
push
mov
fistl
push
arpl
mov
add
std
pop
dec
dec
jbe
push
repz
xor
outsb
mov
lods
clc
enter
sbb
xchg
push
jl
inc
inc
scas
ffree
jo
adc
or
sbb
in
or
dec
jl
mov
or
push
jecxz
mov
pop
test
movsb
add
or
int3
add
test
adc
imul
push
dec
mov
inc
inc
push
arpl
es
push
dec
mov
jl
sbb
inc
inc
bound
mov
mov
jbe
mov
fisttpl
mov
mov
add
xchg
dec
stos
negb
sbb
pop
daa
mov
xor
vorpd
inc
jp
dec
in
pop
jbe
push
int3
add
inc
and
in
out
sbb
pop
push
inc
pop
cmp
mov
sahf
test
mov
adc
mov
dec
fwait
out
mov
ret
xor
std
cmp
mov
mov
or
push
push
fmuls
add
mov
in
dec
aaa
dec
push
sub
sbb
and
mov
sub
jne
sub
cmp
pop
push
jmp
imul
dec
sbb
imul
loop
xchg
mov
lcall
call
mov
mov
lea
pop
int3
pop
popa
add
sub
push
sbb
xor
adc
in
jbe
sub
dec
shl
mov
mov
inc
push
inc
xorb
loope
test
add
mov
sbb
lahf
inc
dec
imul
lret
jo
lahf
lods
inc
pop
jae
je
inc
es
and
xorl
addr16
and
out
or
mov
pop
or
imul
push
insb
pop
rorb
sarb
aas
aad
pop
enter
mov
add
je
push
repz
dec
pop
pusha
mov
sbb
daa
sub
cmc
inc
icebp
and
pop
inc
push
fnstcw
in
pusha
mov
cmc
sbb
pop
sti
jge
ja
fdivl
sbb
mov
inc
dec
lret
lock
out
inc
std
test
test
aad
or
mov
and
jb
stos
sub
mov
movsb
fsts
mov
jno
push
mov
jnp
push
repz
mov
and
mov
jl
jns
ret
xor
inc
test
adc
lret
mov
mov
xchg
push
mov
pop
imul
sbb
add
into
cmp
es
dec
push
insl
loopne
add
mov
cmp
dec
jnp
enter
cmpb
mov
fucomi
jl
mov
sub
inc
jbe
insb
in
push
mov
je
cmp
fwait
stos
les
imul
imul
in
leave
add
push
fcompl
andb
inc
bound
or
les
and
fwait
inc
mov
int
and
icebp
lods
or
out
pop
decl
mov
jmp
xchg
test
mov
sub
inc
push
cmp
cmp
inc
lea
sbb
add
add
adc
es
mov
inc
shrl
subb
cmc
dec
mov
repz
mov
pop
add
notl
fcomip
or
and
pop
push
cmpsl
aaa
mov
inc
push
jge
sub
mov
inc
push
pop
enter
dec
bound
fdiv
jnp
dec
xorl
cwtl
fwait
test
or
out
jnp
std
pop
imul
aam
xor
enter
or
clc
fbstp
jnp
test
jb
in
cmp
sub
clc
ret
ror
test
pop
adc
movsl
inc
push
push
push
out
cmp
and
shlb
xchg
xor
adc
jo
push
insb
push
js
add
out
jb
xchg
ret
insb
sarb
jae
fbstp
or
mov
mov
or
popa
rclb
xor
aad
or
cmc
fwait
jno
lret
pop
inc
xor
insb
and
sbb
fwait
sub
adc
cmp
pop
jmp
data16
rolb
pop
ret
fbstp
test
incb
movsl
out
jmp
push
mov
xor
and
pop
sbb
or
inc
mov
mov
jle
mov
movsb
or
icebp
sbb
sahf
je
lods
xor
or
subl
mov
std
push
lcall
and
test
cmpl
cmp
std
pextrw
jae
jno
xchg
fists
mov
xchg
ja
es
add
cmp
push
cmc
loopne
fisttpll
pop
ret
sbb
call
xchg
jo
cmp
push
inc
fwait
mov
inc
icebp
dec
cmpsb
cmc
mov
push
dec
add
inc
flds
cmc
bnd
mov
leave
push
mov
cmpsb
or
jl
push
jg
ljmp
jo
or
add
mov
mov
xchg
or
shl
es
push
push
sbb
fwait
and
adc
sahf
jnp
fists
cmp
ret
pusha
xchg
rorl
rol
ret
pop
mov
mov
mov
pop
into
loope
mov
mov
xchg
in
pop
inc
test
fwait
and
pop
mov
sbb
xchg
mov
cld
lds
clc
inc
pusha
iret
rcr
jle
pop
or
dec
leave
clc
inc
push
pop
std
ja
lods
jbe
sbb
ss
loop
xchg
fisubrs
mov
jecxz
out
push
and
mov
cmp
std
shll
subl
cs
lds
out
adc
adc
flds
inc
mov
pop
cmp
in
add
cld
iret
ljmp
into
xor
mov
push
jmp
inc
pop
mov
mov
in
ret
pop
inc
fmull
sti
stc
cltd
adc
jns
call
fwait
lods
nopl
mov
sub
jae
push
mov
jns
push
sbb
cmc
out
pop
jae
pop
mov
div
mov
jbe
iret
inc
lea
ret
out
and
jge
icebp
pop
inc
xorb
sbbb
sub
data16
lahf
into
pop
dec
jmp
cld
and
out
fwait
adc
mov
pop
popf
xchg
shr
jmp
xor
xor
idivl
pop
cs
iret
fnstcw
pop
jno
and
xchg
xchg
dec
hlt
scas
inc
mov
jbe
xor
mov
push
pop
pop
pop
iret
cmpl
dec
cmp
push
stos
negb
mov
adc
ss
shrl
push
sahf
mov
add
scas
das
dec
pop
push
inc
inc
in
mov
imul
and
popf
ffreep
daa
cmc
call
shll
cltd
dec
fadd
inc
cmp
push
test
inc
mov
jl
lret
nop
pop
jp
dec
adc
cmp
popf
add
in
sbb
mov
pop
cmp
inc
and
lret
push
invd
sahf
push
lret
mov
icebp
jecxz
lahf
jbe
ds
inc
cmpb
dec
cs
aad
pop
mov
pop
andl
clc
jg
push
mov
fdivrs
popa
mov
mov
mov
mov
lcall
lods
push
fnsave
fwait
add
or
inc
bound
dec
imul
push
imul
outsl
es
in
push
cltd
lock
add
dec
xchg
scas
inc
sub
mov
cmpl
stc
rorl
inc
nop
inc
test
insb
out
jge
push
jno
fisubs
in
ret
lret
in
mov
clc
cmp
mov
pop
ret
pop
mov
mov
out
cmp
xchg
mov
lahf
ss
bound
sbb
lcall
dec
sbb
pop
xorl
rcll
sahf
xor
stos
adc
jne
in
inc
aaa
call
mov
sbb
add
leave
and
jnp
mov
inc
jno
dec
add
xchg
and
ja
cmp
test
mov
or
adc
mov
cmp
push
push
ret
and
lret
xor
scas
fwait
dec
push
negl
mov
iret
push
push
jae
movsb
repnz
xchg
jae
push
or
mov
inc
jb
imul
sbbl
pop
popf
or
repnz
or
das
into
roll
aas
sub
inc
or
mov
arpl
sti
push
mov
stos
pushf
aam
fimull
cmp
xchg
int
sbb
lods
mov
dec
sahf
adc
dec
mov
movsb
mov
jl
lret
push
add
lock
ja
pop
cmpb
call
cli
jl
adc
pop
shll
pop
cmc
cmp
dec
sub
les
in
imul
insb
sbb
or
ret
pop
mov
loope
adc
pop
cmp
pushl
je
in
stos
mov
dec
dec
fcomi
sbb
clc
mov
pop
xor
inc
jl
adc
mov
inc
mov
ds
and
jmp
mulb
hlt
add
out
aam
pop
inc
jae
sbb
lcall
or
push
mov
sbb
dec
jb
sub
sub
shll
fdivl
mov
int3
pop
fisubrs
test
push
push
xchg
pop
adc
test
push
lods
rcrl
movsb
iret
and
xchg
mov
ja
and
push
cmp
dec
sub
or
cmp
hlt
shll
mov
push
add
ret
xor
jns
push
data16
cmc
dec
jl
mov
es
iret
lods
push
dec
fstpt
mov
das
lcall
cltd
dec
outsb
cmp
dec
enter
fimull
dec
shrl
out
add
cmp
mov
xchg
dec
dec
push
dec
scas
xchg
testb
mov
mov
lahf
adcb
jnp
inc
push
popa
inc
xlat
sbb
mov
scas
sbb
imul
cmpsl
lret
pop
ror
imul
shlb
adc
inc
fsubr
shlb
xor
jg
pop
jge
fildl
or
mov
jb
ret
push
cmc
dec
movsb
cmpsl
and
cmp
mov
adc
fsubrl
pop
mov
ret
ja
arpl
pusha
lahf
popa
sbbl
cmc
ret
cmpsb
inc
clc
jle
jne
mov
fisttpll
inc
sbb
inc
jb,pt
pop
mov
push
mov
movsb
adc
xorb
sbb
mov
sbb
xchg
addr16
movsb
xor
jne
hlt
push
shlb
lret
mov
and
into
adc
mov
cli
dec
mov
aas
mov
js
cmpsl
jb
sbb
jmp
repnz
pop
decl
frstor
jmp
lahf
or
dec
add
jp
mov
xor
push
mov
mov
cmc
mov
fwait
push
mov
ret
out
mov
inc
push
cld
push
mov
jno
stos
pop
mov
add
addl
sub
xchg
dec
sbb
add
ret
inc
sub
inc
ficompl
notb
ficompl
data16
out
daa
leave
jecxz
std
add
mov
ret
mov
cld
inc
xor
imul
nop
or
mov
clc
or
sub
mov
icebp
mov
das
subl
nop
insb
fmull
cmpsb
jbe
stos
data16
and
int3
test
loope
shrl
aam
dec
sarb
mov
in
bound
jb
mov
mov
dec
mov
int3
bound
cmp
inc
add
mov
or
pusha
dec
xor
jecxz
scas
adc
cmp
inc
sbbb
gs
ds
popa
push
ret
insl
into
repz
pop
sub
sahf
xor
cmp
mov
or
dec
sahf
fcmovnb
cmpsb
into
out
sahf
hlt
jb
lret
jmp
jbe
add
jae
in
and
pop
dec
xchg
stc
out
jl
or
iret
push
stos
xlat
cmp
dec
pop
adc
imul
hlt
sub
mov
stos
add
mov
into
aam
push
mov
add
xor
loopne
sub
xor
das
mov
shlb
shr
cmpsl
dec
push
int3
repz
std
pop
icebp
aad
stos
add
mov
in
mov
ret
aaa
push
jno
inc
cmc
and
dec
adc
clc
inc
cmp
hlt
mov
cmpsl
scas
das
stc
test
dec
dec
ljmp
dec
mov
adcb
fxch
stos
shrl
lds
lahf
mov
mov
mov
imulb
lds
nop
movsl
push
mov
out
adc
cmc
daa
fwait
add
adc
jl
mov
or
mov
in
rolb
sbb
dec
imul
mov
dec
aam
push
dec
cwtd
in
rorl
mov
pusha
push
sbb
push
ja
push
adc
cwtl
int3
fldl
inc
dec
pop
cwtl
out
dec
pop
lods
out
cmpl
mov
enter
mov
fisttpll
das
pushf
cmp
jmp
and
sbb
sarb
xchg
jg
inc
fidivl
push
and
mov
push
xor
mov
jno
test
es
ss
mov
aas
sub
sub
add
cltd
sbb
mov
mov
or
push
shll
movsl
mov
sahf
xchg
leave
ret
inc
cmp
int
sub
addr16
jmp
push
ds
jl
jbe
mov
push
mov
pushf
dec
sbb
inc
xor
shr
gs
imul
pop
adc
daa
pop
nop
int3
adc
test
jns
jbe
addl
sarl
xchg
inc
cld
xchg
lahf
mov
mov
jl
mov
rolb
mov
cli
sbb
inc
pop
push
xchg
xchg
pop
mov
sub
aad
push
call
loope
movsb
hlt
arpl
pop
lea
popf
mov
mov
jge
mov
andl
xorb
idiv
ficoml
xor
ja
push
and
push
mov
mov
push
jns
mov
das
cmp
xor
lcall
mov
in
add
flds
mov
mov
xor
divl
xor
mov
fidivrl
sbb
lds
inc
push
mov
pop
sbb
adc
add
or
mov
hlt
inc
push
cli
pop
das
mov
push
add
fwait
mov
inc
xlat
add
rclb
lcall
dec
pushf
lahf
mov
pop
lret
mov
mov
sti
inc
adc
or
loope
jl
mov
lret
cs
dec
mov
sub
rolb
mov
jecxz
mov
mov
in
cmpsl
dec
hlt
adc
fcoms
movsl
std
or
das
jl
daa
stos
rorl
fisubl
sub
aad
test
pop
push
xchg
arpl
dec
lahf
fs
jmp
mov
das
push
jbe
or
lods
imul
aam
mov
mov
dec
pop
or
dec
sub
mov
movsl
mov
cli
push
pop
sub
dec
cmc
cmpsl
xchg
in
lods
xchg
in
xchg
imul
cli
push
cmp
sub
cld
fildll
jg
cmp
sub
sbb
out
mov
push
pop
loopne
pop
loope
adc
lock
xchg
pop
and
push
inc
repnz
icebp
fwait
cltd
mov
ficoml
push
mov
add
test
shrl
dec
jmp
mov
mov
pop
insb
push
xchg
push
xorl
mov
nop
sbb
imul
jmp
and
dec
xchg
lods
mov
push
xchg
arpl
dec
rorl
mov
or
mov
push
add
rcrl
fmul
cmpsb
mov
inc
dec
js
sbb
and
mov
shll
ja
sti
cmpsl
cmpsb
dec
add
push
pushf
es
and
jne
inc
popa
cmp
cmpsl
insb
aad
mov
scas
movsb
mov
jecxz
push
repnz
and
sbb
icebp
sbb
adc
sbb
lcall
scas
mov
cmp
ja
test
inc
bound
inc
out
jg
sbb
jl
xchg
dec
cltd
out
dec
sti
daa
inc
out
sbb
cmp
arpl
inc
mov
scas
inc
ja
test
cmp
sub
cmp
imul
cmp
cs
mov
jno
iret
mov
jne
adc
lods
xchg
adc
mov
push
mov
adc
jno
mov
sbb
xchg
jnp
pop
adc
daa
clc
les
das
mov
cmp
repz
mov
xchg
lods
jno
sub
imul
xor
test
in
inc
loope
dec
in
cmp
sbb
mov
pusha
cli
sti
ror
pop
incw
or
push
outsl
mov
pusha
sub
test
pop
outsb
adc
scas
cmp
mov
and
mov
aam
imul
loop
insl
mov
xor
mov
adc
and
mov
jns
or
mov
cmpsb
xlat
test
cmp
dec
pop
fs
mov
mov
jle
cli
dec
in
mov
int3
ljmp
je
adc
mov
mov
es
inc
pop
orl
movsb
loopne
sbb
js
mov
pop
lods
dec
pop
cmp
jecxz
in
push
dec
inc
mov
pop
push
lahf
adc
icebp
jb
sub
out
xchg
ds
dec
adc
fistps
scas
pop
mov
inc
pop
push
sub
mov
adc
mov
mov
or
mov
loopne
xchg
add
cltd
jl
pop
out
inc
mov
dec
imul
fnstcw
inc
pop
xchg
stos
ja
out
stos
scas
adc
int3
loopne
stc
fiadds
pop
inc
test
repnz
mov
arpl
fistps
insb
lea
add
push
pop
popa
push
jg
cwtl
frstor
sahf
mov
sub
cltd
jle
cmp
cmpsl
iret
pushf
hlt
mov
icebp
and
filds
rcrb
outsl
hlt
fiadds
insb
mov
adc
cmp
inc
add
jle
xchg
mov
fwait
pushf
sub
out
pop
push
cmp
add
push
mov
dec
out
in
cwtl
mov
iret
inc
mov
jb
add
sub
lods
xorb
dec
sbb
xlat
cmc
ja
pop
mov
int
xchg
inc
in
insl
pop
sbb
jmp
icebp
jo
int
jnp
js
add
pop
test
mov
jns
in
cwtl
dec
push
xor
inc
aaa
jg
jnp
loope
pop
jb
mov
jae
insb
cmpsl
test
jo
jns
flds
add
xlat
xor
int3
mov
popf
inc
leave
add
es
pop
aaa
jmp
aam
inc
sbb
es
setg
xor
xchg
xor
push
iret
insb
jle
xchg
push
outsb
mov
mov
fadd
mov
rcrl
jno
mov
out
ret
and
fistps
xchg
inc
into
xchg
enter
gs
ja
ja
lods
into
and
push
and
and
clc
push
jno
xchg
add
sbb
iret
pop
sarl
fcomi
pop
outsb
mov
stc
loope
sub
out
insb
pop
lods
cmp
push
lock
pop
jmp
outsl
mov
push
mov
ja
pop
cld
iret
repz
adc
adc
xchg
pushf
sbb
sub
shll
inc
mov
movl
cld
mov
loope
fisttpl
mov
loop
jne
jno
sub
xor
sti
sar
xchg
not
dec
mov
add
xchg
ror
push
jmp
sti
insl
push
push
loopne
pop
cwtl
std
out
push
mov
dec
sub
push
test
rorl
xor
je
cld
cmp
mov
movsb
in
xlat
fnstsw
clc
fmul
fwait
movsb
addb
dec
lock
mov
in
and
pop
sub
or
scas
popf
and
wrmsr
sbb
mov
mov
out
cs
push
mov
into
xchg
xorb
leave
ret
lcall
imul
lahf
pop
pop
inc
lea
outsl
jb
divb
jns
inc
icebp
inc
cmpsb
sarb
fistps
jmp
sbb
out
jae
xchg
cwtl
jno
xchg
fisttpl
cmp
fidivrl
sub
in
fsubrs
cmpb
adc
aad
fs
dec
xchg
jg
imul
fmull
xchg
das
or
mov
cwtl
imul
dec
push
dec
enter
movb
in
std
movsb
mov
jae
cltd
mov
pop
sub
mov
push
fstp
add
into
pop
adc
and
xchg
movsl
pop
loopne
ljmp
rep
mov
xchg
mov
dec
fucomip
push
std
insl
push
mov
int3
movsb
inc
stos
adc
xchg
or
mov
mov
stos
push
jmp
cmpsl
push
imul
mov
adc
sbb
and
or
push
fistl
and
test
fstpl
and
jmp
dec
cmpsl
mov
ljmp
push
push
cmp
fldt
sub
jge
sarb
movsl
inc
cld
xor
sbb
pushf
jg,pt
call
jae
pop
data16
add
jle
jg
mull
mov
repz
add
xchg
enter
test
es
sti
jo
sub
test
push
dec
mov
or
insl
or
pop
or
or
add
or
data16
es
xlat
ljmp
out
pop
je
outsb
pop
cli
mov
xor
insb
mov
mov
loop
xchg
and
xorl
jbe
xor
pop
adc
stc
insb
mov
adc
mov
aas
jae
pop
ss
aad
data16
push
scas
mov
inc
orb
shll
lret
nop
fstp
xchg
jl
orb
pop
sti
mov
mov
test
xor
fstpl
mov
rcrl
int3
loopne
or
jb
rorb
inc
dec
sub
out
jns
in
and
loopne
dec
in
pop
sub
repz
jae
jo
push
scas
in
loope
int3
out
and
jnp
cltd
jnp
xor
mov
pop
pop
xchg
mov
jnp
sbb
stos
lahf
loope
popf
or
sub
icebp
pop
rolb
sahf
bound
lret
push
std
xchg
fiadds
mov
mov
fcmovu
cmp
inc
rorb
lods
addr16
jns
cmp
nop
inc
roll
sbb
out
jbe
dec
out
hlt
sbb
int3
std
inc
cmp
mov
push
test
mov
jno
popf
dec
and
inc
xchg
lods
insb
dec
ds
and
pop
dec
sub
push
mov
sub
xchg
mov
in
add
imul
out
js
pop
sub
cmc
stc
stos
imul
enter
push
jno
loope
clc
mov
fwait
push
or
lret
scas
cltd
movl
mov
ljmp
dec
dec
push
jmp
mov
loope
add
jmp
xchg
or
xchg
dec
dec
mov
push
sub
pop
xlat
adcb
test
fiadds
sub
adc
mov
xor
push
sub
jno
andl
ret
int3
out
cmp
inc
inc
movsb
adc
mov
sbb
pop
push
and
mov
aas
test
ret
cmpsl
pop
out
mov
mov
lods
mov
int
xchg
cmc
fidivl
inc
mov
inc
push
imul
addl
mov
pop
fisubrl
test
pop
mov
ja
jbe
adc
leave
sbb
push
jno
orb
pop
dec
and
mov
filds
pop
push
mov
ret
decl
push
aad
inc
mov
std
push
xor
xor
in
xlat
mov
mov
cmp
xor
subb
pop
inc
std
bound
aad
rorb
inc
sub
jb
int3
pop
mov
mov
lahf
call
sti
outsb
ss
push
sub
scas
pop
push
sbb
dec
jg
push
dec
aad
push
movsb
jg
xlat
push
inc
jecxz
xchg
and
adc
adc
sbb
xor
and
aad
jmp
dec
push
sub
test
movl
mov
jle
pop
mov
mov
mov
stc
int3
addr16
sub
push
inc
orl
dec
movsb
xor
pop
lret
xlat
adc
xchg
int
push
mov
dec
sbb
adc
in
pop
je
dec
add
repz
cmp
push
out
sbb
fcoml
inc
add
push
clc
popf
cltd
test
orb
dec
xor
jbe
mov
fs
into
sahf
adcl
scas
int3
inc
push
outsl
mov
inc
sub
enter
or
addr16
js
in
and
sub
nop
sub
out
sbb
cld
mov
fucomip
sysret
inc
dec
pop
sub
add
imul
sub
jno
cmc
adc
mov
adc
cs
sbb
fidivs
insl
mov
add
mov
lds
xorw
pop
mov
cmpsl
arpl
mov
bnd
inc
cmp
xchg
push
sti
test
leave
xchg
pop
pop
inc
sbb
test
ficompl
cmp
adc
xor
shr
mov
inc
inc
fucom
push
fldt
imul
sarb
mov
cmp
dec
or
loopne
pushf
repz
or
ja
mov
adc
xchg
clc
iret
add
popf
xor
fistpl
jecxz
in
cmc
cs
fmull
pop
fdivs
jmp
mov
out
adc
push
inc
inc
xchg
dec
and
pop
sbb
pop
frstor
test
xor
imul
cmp
sbb
adc
xchg
in
insb
cwtl
jmp
mov
fimull
decl
mov
pusha
push
clc
mov
mov
cwtl
sti
scas
cltd
sub
ror
int3
rcl
arpl
mov
jmp
pusha
ficompl
ljmp
push
dec
xchg
mov
jg
lcall
fwait
mov
add
adc
xor
dec
mov
inc
cmpsb
les
sub
sub
and
pop
cmp
nop
mov
out
nop
ror
pop
push
js
xchg
jp
xor
mov
and
loope
pop
adc
popa
push
scas
mov
js
xchg
sarb
xor
xchg
push
pop
pop
pop
loop
push
cmp
bound
aas
mov
push
push
push
push
adc
push
push
les
sti
push
jns
movsl
imul
push
adc
pop
adc
dec
mov
pop
dec
mov
cmpsb
clc
xchg
cmp
jl
add
into
mov
cmpsb
xor
mov
sbb
cmp
js
dec
sub
add
dec
rorb
jl
mov
xor
fwait
push
mov
decl
scas
inc
dec
lods
push
sbb
dec
adc
sub
mov
popf
jle
mov
mov
mov
jno
fistpll
mov
xchg
arpl
cs
mov
roll
cmp
in
aad
xchg
mov
addr16
jo
arpl
xor
sub
ret
outsl
shl
and
mov
jecxz
loope
pop
cmp
xor
pop
mov
dec
sub
out
fcmovnu
inc
cmp
sub
shlb
test
movb
and
sbb
push
cmp
stos
int
shlb
push
dec
jno
aad
rcr
rolb
jae
aad
add
imul
daa
add
sub
xchg
sub
pushf
shl
mov
and
cld
mov
test
inc
cmc
mov
pop
lcall
cltd
inc
fiaddl
sbb
inc
pop
insb
mov
mov
pop
jge
insb
mov
pop
adc
es
xchg
mov
imul
in
xor
or
push
and
adc
sbb
dec
mov
sbb
jmp
icebp
pusha
lea
repnz
ljmp
pushf
push
mov
cmpsl
mov
push
mov
jmp
xchg
push
cs
push
iret
mov
lcall
stos
lret
or
pusha
repnz
scas
and
sub
fdivrl
xor
adcl
dec
repz
jg
jp
lods
ret
iret
sub
das
jnp
mov
cld
cmp
cmp
loope
mov
jne
or
dec
jno
mov
dec
out
mov
fisttpll
pop
aad
fisttpl
sub
xor
cmp
or
es
cmp
leave
adcb
mov
dec
pop
dec
aad
imul
stos
arpl
imul
stos
movsl
jge
fdivr
nop
stc
fldt
pop
out
xchg
mov
movsl
jg
into
arpl
mov
mov
inc
push
hlt
gs
jg
in
add
scas
pop
mov
mov
ss
notb
stos
cld
je
mov
mov
mov
mov
cmp
mov
mov
rcll
test
jmp
jnp
sub
movsl
and
ficompl
xchg
stos
loopne
xor
popf
xor
push
jne
imul
sti
inc
nop
das
pop
insb
adc
adc
ss
sbb
sub
fs
push
add
adc
rclb
inc
in
or
fwait
dec
or
or
push
fucomi
push
and
xchg
repnz
loopne
cmc
xchg
mov
cmpsl
lcall
mov
aaa
sbb
jmp
dec
mov
fcoml
xor
mov
pop
xchg
inc
shl
mov
leave
xchg
std
xchg
inc
sub
pusha
das
loopne
sub
sar
mov
fstl
ret
jns
pop
push
rcrl
xor
mov
rcrb
mov
xchg
imul
loopne
ljmp
xchg
adc
mov
lret
inc
sub
mov
or
fsubrl
dec
movsl
inc
ss
mov
std
xchg
test
mov
rorb
orb
jl
xor
sbb
dec
dec
lods
adc
cmpsl
pop
dec
mov
in
test
xchg
aaa
inc
jae
jno
or
lret
mov
mov
in
pop
jae
pop
xchg
adc
pop
mov
ja
leave
sbb
lock
andl
dec
add
lea
mov
dec
loopne
aam
pop
inc
sub
xchg
outsb
jns
aam
sbb
out
mov
mov
outsl
sbb
ja
adc
loopne
pop
aam
popa
ds
inc
mov
sti
fs
gs
fcomps
mov
out
or
sbb
loop
push
push
and
pusha
jge
dec
and
lret
or
js
push
xchg
dec
mov
stos
lds
and
ljmp
repnz
cld
add
imul
je
cmp
jnp
out
lcall
and
mov
cmp
xchg
pop
push
push
sub
imul
out
sbb
dec
mov
mov
mov
jne
pushf
int3
test
xchg
inc
ljmp
orb
xchg
jmp
bound
fcompl
cs
push
into
xor
xlat
fisubrl
lret
jle
fmull
rcrb
ja
into
mov
divb
sbb
fwait
xor
pusha
mov
rcrl
add
mov
inc
lret
mov
and
sti
addl
into
pop
jae
movsb
outsl
movsl
mov
mov
cmp
rcrl
rorl
mov
xchg
lods
ret
cmp
pop
push
mov
ljmp
and
xchg
push
loopne
push
mov
push
movsl
push
and
sbb
popa
repz
sub
pop
les
in
xchg
ja
sbb
loopne
cltd
sahf
loop
mov
aad
jecxz
stc
rorl
fbstp
nop
call
dec
inc
push
test
pop
adc
imul
lahf
sub
aam
outsl
mov
clc
adc
pop
out
push
ja
lea
lret
icebp
cltd
inc
hlt
jecxz
adcb
out
mov
push
inc
scas
cmpsl
jmp
out
fwait
lock
and
sub
dec
push
fcomi
leave
lods
and
out
pusha
dec
aas
hlt
hlt
and
mov
inc
sbb
shrl
int
and
pusha
dec
or
fisttpll
xchg
out
push
cmp
fstpt
mov
dec
add
mov
dec
addb
aam
adc
or
jns
aad
jp
pop
hlt
mov
lods
fbstp
fisttpl
dec
xchg
inc
mov
adcl
mov
movsb
sub
das
fldenv
ljmp
push
jno
xor
mov
fwait
aam
add
insb
push
sbb
ss
push
aam
cmp
gs
sahf
jmp
dec
cmpl
das
push
push
mov
sbb
or
mov
movsb
xlat
xor
or
mov
push
push
ljmp
stos
cld
sti
jns
int
cld
cmp
mov
pushf
cs
add
xchg
dec
testl
dec
jbe
loopne
ret
cwtl
rclb
dec
sti
adc
mov
mov
lds
into
fsubr
scas
mov
push
icebp
dec
sbb
sub
xorb
and
fsubr
mov
adc
sbb
ljmp
clc
adc
mov
rorb
and
jbe
nop
dec
sub
xor
mul
push
jl
mov
jno
push
mov
out
aad
or
pop
icebp
inc
push
out
sub
jmp
mov
xchg
sahf
mov
pop
mov
jbe
loop
jl
movl
and
outsb
mov
popf
adc
cmp
push
ljmp
test
jns
or
aaa
mov
pop
adc
and
push
std
jle
push
dec
add
hlt
pop
mov
jle
push
push
cmp
sarl
push
orl
lahf
dec
out
inc
inc
adc
fidivrl
lret
pop
mov
ret
push
lret
int3
pop
and
ss
inc
push
xor
cmp
pop
cmc
dec
push
mov
push
popf
push
addb
push
roll
data16
jb
rorl
mov
xor
push
adc
lds
mov
xchg
call
mov
push
mov
popa
sub
ja
scas
out
dec
sub
fcoml
jne
lret
sub
sbb
mov
xor
arpl
dec
mov
sub
lcall
dec
ja
lods
popa
iret
fimull
stc
mov
lods
jo
nop
movsb
incl
mov
mov
int
into
stc
sub
mov
add
fisttpl
jb
jmp
movl
sbb
dec
or
pop
repnz
jle
jg
fwait
aas
mov
enter
sahf
jmp
mov
aam
imul
ja
jg
push
mov
fsts
dec
aad
sbb
sub
test
jns
fimuls
mov
pop
jg
ljmp
adc
std
jl
lea
stos
pop
stos
xor
repz
addl
mov
xor
inc
ret
loop
push
mov
sbb
out
sub
push
scas
aam
adc
mov
loop
xor
out
into
fnsave
cmpsl
jg
pop
stos
xor
mov
movsb
dec
mov
dec
data16
lahf
dec
xchg
fwait
mov
mov
mov
jmp
cmp
mov
adc
in
jg
test
nop
icebp
jnp
xchg
loopne
push
out
mov
fcmovnbe
dec
mov
pop
repnz
pop
bound
sbb
lds
outsl
ficomps
pop
dec
call
push
dec
ret
add
push
inc
int3
adc
jecxz
mov
mov
mov
mov
lods
sbb
inc
lods
fwait
lret
mov
fiaddl
repz
cltd
pop
jp
mov
jb
pop
jbe
mov
cs
popa
dec
mov
in
out
movsl
xor
xor
jge
xchg
fisubrl
bnd
xor
sub
xor
push
or
sub
push
sbb
ret
std
sub
or
pop
fimuls
push
xchg
mov
push
dec
hlt
mov
scas
loope
push
loop
mov
pop
mov
pop
jl
push
mov
movsb
push
jae
dec
push
loop
push
mov
push
inc
mov
lret
adc
stos
in
dec
jg
mov
inc
outsb
pop
roll
sbbl
jg
gs
jmp
jg
sub
sti
out
or
dec
pop
mov
mov
test
out
push
les
in
out
imul
scas
jb
rep
cmp
lock
mov
mov
clc
out
xchg
add
push
jbe
sbb
repz
push
inc
aam
dec
dec
scas
lods
nop
repnz
fs
and
push
mov
mov
add
rcll
cld
lcall
mov
pop
fbstp
push
mov
mov
or
and
mov
jmp
loope
or
out
mov
jmp
jg
neg
inc
rcll
inc
mov
mov
add
cmc
xchg
cltd
and
pop
loopne
ja
es
stc
jbe
jns
pop
aas
test
xchg
jp
lods
mov
and
xor
rcrb
and
jl
imul
jge
es
insl
mov
sbb
mov
cmp
cltd
add
mov
addr16
int3
dec
mov
xchg
jne
test
sbb
out
lea
sbb
mov
cmp
dec
aad
sbb
pop
sti
xor
mov
arpl
pop
mov
lret
cmp
in
inc
in
jns
sbb
loop
adc
mov
inc
adc
pushf
push
or
push
ljmp
lods
ret
mov
mov
shrb
dec
ret
sub
sbb
xor
xlat
das
cmp
mov
mov
add
jmp
and
fmull
les
enter
je
inc
mov
les
pop
push
scas
lds
inc
push
leave
popf
mov
cld
or
fnsave
mov
rorl
push
test
frstor
sbb
mov
stc
rcr
sub
mov
cs
sbb
jno
inc
orb
jb
cmp
in
jmp
arpl
adc
out
popa
bound
jge
loopne
fimull
fistpl
int3
jns
and
rcl
iret
dec
xchg
xor
ret
gs
je
or
sbb
pop
inc
xor
fstpt
ret
jle
imul
adc
out
test
sbb
jbe
imul
adc
cmp
inc
fcmovb
shr
inc
jbe
out
fidivrs
inc
cmp
lock
jl
mov
fnstcw
jg
sbb
sti
sbb
js
out
aas
daa
fs
or
fistl
lahf
fwait
cmp
xor
cmpsl
pop
inc
and
push
mov
jl
and
je
aam
push
dec
pop
xor
ss
push
cmpsl
xchg
dec
xorb
lds
sub
das
fisubrs
mov
sub
push
mov
add
insl
xor
ret
movsb
sub
push
fsubrs
test
mov
pop
pop
jo
pop
data16
xchg
test
jl
jmp
mov
cmp
dec
pusha
mov
insb
sub
sbb
adc
inc
jecxz
dec
and
mov
sbb
dec
push
inc
int
pop
adc
and
repz
jb
pop
decl
inc
sbb
mov
pop
es
add
jbe
push
jl
std
aas
jo
dec
in
jge
lods
dec
or
sti
jl
jecxz
push
adc
pusha
push
test
cld
pop
jl
insl
mov
aas
mov
push
mov
adcb
fcoml
call
jnp
push
fwait
sub
sub
push
fs
pop
sbb
repz
add
mov
popa
pushf
prefetch
fbstp
mov
mov
jae
pop
mov
mov
jl
jle
and
movsl
mov
into
cmp
jecxz
out
fdiv
xor
push
stc
arpl
sub
pop
jmp
jns
loopne
fs
inc
xchg
je
and
push
stos
negb
or
push
mov
cli
xchg
cmp
cmpsb
push
push
std
mov
mov
iret
xor
mov
rcrb
outsb
push
add
jge
and
add
jne
mov
push
ret
clc
aam
dec
decb
xchg
in
shrb
push
stos
repz
inc
mov
movsb
mov
sbb
stos
inc
loop
xchg
stc
dec
xorb
mov
shrb
xor
dec
inc
fisubl
jno
scas
add
into
das
add
xchg
lcall
xor
mov
les
out
sub
pop
add
cmp
mov
cwtl
pop
pop
cltd
and
xchg
test
and
fwait
and
lock
adc
jae
cmp
out
js
cmc
dec
sub
addl
mov
pop
jbe
mov
adc
and
pusha
adc
movl
ljmp
and
and
mov
or
cmpsl
mov
pop
push
loope
cmc
push
mov
test
enter
imul
xlat
cmpsl
insb
bound
cmc
jl
fwait
ret
imull
inc
lret
mov
cmp
icebp
test
movsl
push
xchg
out
xchg
jp
jg
pop
mov
mov
sbb
movsb
jp
xchg
add
mov
adcb
enter
shll
push
enter
xchg
lods
or
out
pusha
jecxz
xchg
xlat
pop
cli
sbb
fnsetpm(287
es
movl
mov
mov
cmpsl
insb
sbb
mov
pop
jp
xchg
imull
dec
loope
fdivrs
call
push
out
mov
aad
dec
mov
jae
icebp
mov
pop
xchg
pop
stc
fistpl
mov
mov
lahf
jmp
mov
adc
add
jae
push
aaa
jecxz
lds
push
add
add
adc
adc
ja
lahf
mov
pushl
cmp
inc
inc
mov
inc
jge
ret
daa
out
nop
and
cmpsl
test
mov
shll
ret
mov
sbb
pop
subb
sti
add
repnz
int3
testb
pushf
adc
imul
incl
adc
jl
push
repz
rcll
ror
minps
mov
cld
inc
fiaddl
pop
pusha
xlat
aaa
mov
dec
out
adc
aad
sub
jg
aam
xchg
pop
cmpsl
adc
fidivs
sub
dec
mov
adc
push
outsb
iret
fldl
pop
decl
jbe
xchg
into
dec
or
sbb
mov
sbb
sbb
das
inc
cmp
loope
inc
push
arpl
in
inc
dec
fwait
notl
push
add
add
xchg
sbb
push
ffreep
jno
ret
fwait
ret
xlat
mov
fsubp
jl
xor
push
pusha
push
in
adc
aam
test
mov
sbb
pop
jg
mov
imul
in
pop
and
jae
cld
fcomps
inc
push
dec
fisttpll
or
shll
pop
adc
int3
stc
dec
or
jb
add
pusha
mov
push
rorb
into
js
lods
outsl
dec
dec
xchg
movsl
xlat
fld
iret
mov
xor
jae
mov
or
mov
cltd
test
sbbb
sahf
lods
stos
mov
aam
push
and
push
sti
push
notb
or
adc
fimull
jae
mov
shll
push
mov
xor
fidivrs
mov
loope
mov
cmp
sbb
pop
mov
sub
push
lahf
das
mov
stc
movsb
test
testw
lret
fmuls
mov
mov
rcl
jecxz
out
lahf
jnp
cmp
sbb
push
or
aad
sub
or
dec
jnp
push
pop
popf
movsl
imul
bound
je
xor
xchg
dec
xor
aad
mov
mov
das
xchg
push
dec
stos
sbb
pop
int3
and
dec
inc
movsl
jb
hlt
or
nop
inc
adc
dec
xchg
loope
add
mov
mov
mov
jno
cld
mov
inc
ja
lea
dec
test
jg
fidivs
pop
xchg
fs
jns
cld
insb
movl
xor
xor
adc
outsl
ret
lret
xchg
imul
out
addr16
cld
or
bound
out
xchg
push
mov
jp
pop
loopne
adc
fbld
dec
and
xchg
jmp
pop
inc
sarl
dec
jno
aad
cmp
jb
cwtl
scas
mov
mov
mov
popa
pop
and
movsl
mov
dec
test
sub
pop
loope
outsb
xchg
fwait
add
and
adc
mov
or
cmpsl
outsl
mov
cmpsb
inc
jns
ficompl
int
or
hlt
push
out
add
prefetch
mov
cs
or
in
push
or
jo
pop
mov
outsw
adc
dec
pop
jns
fimuls
loope
aas
fisttpll
jnp
ficoml
xor
int
and
mov
imul
xchg
hlt
or
in
or
and
mov
dec
aas
push
sub
lret
push
push
out
push
or
cmp
adc
fidivrs
aad
fimuls
adc
pop
sub
pop
es
frstor
sub
ljmp
arpl
jge
dec
or
dec
ret
xchg
pusha
adc
loop
loop
mov
mov
divl
out
pop
rorl
jnp
pop
les
mov
mov
lahf
add
add
js
or
mov
mov
jae
fisttpll
inc
sub
imul
dec
pushf
rcrb
repz
add
cld
out
jae
add
das
jno
in
mov
or
jno
sub
and
sbb
mov
xor
push
sub
or
out
and
test
clc
jmp
mov
imul
push
pop
cmpsl
fimull
xchg
push
dec
xchg
sahf
xchg
clc
fcomp
rorb
sub
pop
jle
data16
fmull
nop
sahf
push
fnstenv
or
nop
std
mov
aas
stos
cmc
fwait
mov
or
mov
imul
pop
sub
in
dec
subb
cld
mov
out
push
xlat
sti
lret
or
rclb
xor
lcall
sub
mov
test
and
sub
stos
push
outsb
lret
jne
div
hlt
incl
and
sarl
lret
push
or
cwtl
lret
add
cmpsl
dec
insb
dec
out
and
addr16
clc
cmp
adc
mov
cmp
jl
dec
in
rcl
fistpll
imul
fnstcw
cli
jno
sahf
xor
gs
imull
imul
outsb
push
fisubs
jecxz
mov
adc
jle
std
popf
scas
cmp
push
int
repz
popa
scas
push
adc
adc
pushl
repz
pop
fildll
cli
adc
nop
popa
movsb
mov
test
stos
sub
mov
scas
xchg
adcb
clc
pushf
pop
pusha
adc
inc
cmp
imul
xchg
sbb
rcr
lods
int
mov
enter
push
fdivrs
mov
dec
ficoml
aaa
push
and
js
push
mov
xor
fwait
xlat
aaa
cmp
mov
popf
loope
cltd
dec
stos
push
dec
mov
sbb
mov
hlt
cmpb
repnz
jo
cltd
mov
pop
mov
je
dec
rclb
inc
cmp
ficoml
imul
iret
icebp
pop
adc
xchg
in
jmp
or
fisttpl
adc
pop
add
insb
jmp
push
daa
or
or
nop
sub
out
inc
sbbb
pop
adc
call
stos
inc
pop
mov
dec
or
cmp
cmp
dec
dec
xchg
or
lock
dec
ds
daa
scas
insb
inc
jns
outsl
dec
repz
mov
inc
xchg
cmpsb
cmp
pop
mov
int
call
inc
pop
inc
sub
cmpsl
in
icebp
mov
xor
mov
push
adc
mov
cmp
pop
jg
rclb
mov
sbb
push
xor
je
push
adcb
sahf
pop
jmp
int3
rorb
inc
mov
inc
jle
mov
fwait
imul
fstpt
dec
jo
fimull
mov
xlat
push
rcll
push
pop
push
ljmp
and
int
out
push
out
mov
pushf
mov
mov
ficoml
mov
pusha
mov
push
sub
xlat
loop
mov
lahf
stc
xchg
sub
cmp
add
ja
clc
aad
push
mov
mov
mov
inc
dec
inc
flds
out
xchg
mov
adc
int3
cmp
xchg
inc
shlb
jo
cmpsb
inc
sti
lods
add
xlat
mov
xchg
jg
sub
aaa
mov
sub
fimull
mov
mov
push
fidivrl
nop
sarb
outsl
jmp
repnz
mov
add
cld
push
sbb
iret
out
cld
ss
pop
sahf
add
inc
pop
stos
testb
mov
jnp
add
sbb
ficompl
in
movsl
out
outsl
and
and
popa
jecxz
sub
fimuls
popf
push
inc
mov
mov
dec
dec
rolb
mov
in
lret
adc
inc
cmpb
push
mov
sub
add
jl
dec
mov
gs
xchg
frstpm(287
mov
mov
mov
dec
dec
shl
push
mov
test
cmp
int
pop
fwait
scas
adc
mov
cmp
inc
sbb
ljmp
pop
mov
and
sbb
lret
mov
add
adc
xor
xor
or
jb
mov
push
out
pop
push
jl
cli
fbld
sbb
cmp
loopne
mov
inc
sbb
popf
mov
pop
nop
sub
cmc
incl
sbb
fwait
add
mov
push
push
addb
adc
into
sbb
daa
pop
push
dec
stos
sub
push
pop
push
cwtl
push
aas
and
xor
add
pop
lods
ficoml
fildl
mov
sbb
sub
arpl
lret
jnp
sub
push
pusha
inc
sbb
loop
lods
add
gs
adc
and
add
inc
pusha
int3
cmc
test
pop
mov
push
pop
fwait
and
xor
das
adc
lock
adc
lds
push
add
ss
sbb
jp
jecxz
push
rep
add
sub
add
mov
mov
xchg
mov
mov
ja
test
aas
sub
rcr
ds
jb
adc
push
shrl
mov
fwait
or
sub
sub
mov
aad
imul
sbb
xchg
rclb
lcall
loop
sbb
xor
lcall
inc
sbb
sbb
imul
cli
addr16
ja
pop
ficompl
cmpsb
xchg
fstpt
shrb
push
dec
adc
jg
mov
stc
xchg
mov
lcall
dec
dec
sahf
js
add
bound
and
fidivrl
stc
push
in
lret
inc
dec
jnp
cmpsl
sub
iret
lret
add
jl
add
test
mov
sbb
adc
fdivr
xchg
xchg
xor
insl
test
add
shll
mov
jp
cltd
mov
fldl
int3
mov
ja
fwait
scas
add
idivl
ss
dec
xor
cmp
loop
cmp
sbb
inc
scas
mov
push
cld
or
es
pushf
sub
and
in
push
pop
adc
sbb
add
jmp
inc
adc
xor
cmp
adc
adc
inc
stc
push
test
mov
pop
movsl
jb
or
enter
stos
adc
cmp
ret
dec
es
or
imull
sbb
jne
rcll
pop
inc
sbb
cmp
inc
dec
dec
mov
pop
and
xchg
fsubrl
adc
mov
mov
pop
in
hlt
pop
and
xor
push
add
inc
fistpll
movsl
js
outsl
mov
nop
fidivs
jmp
or
scas
xlat
inc
mov
imul
mov
rorb
mov
cwtl
add
push
cmpsb
mov
push
es
cs
rorl
cmp
scas
jl
cmc
jge
xor
jb
or
sub
add
push
jle
fidivl
cmpsl
push
dec
loopne
cmc
into
cmp
bound
mov
testl
rorl
fwait
cmpsb
imul
imul
xchg
cld
orl
jne
in
inc
or
pushf
jbe
cmp
jl
in
push
dec
mov
shrb
outsl
out
rcrb
push
and
mov
ss
arpl
xchg
pop
xlat
xchg
stc
dec
mov
sub
dec
jno
icebp
fwait
mov
cltd
xlat
mov
daa
gs
fcmove
inc
sub
test
jecxz
fisubl
jb
es
add
inc
mov
inc
out
in
push
adcb
popl
cmc
cmp
sbb
jl
mov
xchg
jbe
lea
xor
xchg
jl
in
aaa
int3
dec
inc
inc
cmc
xor
ds
fiaddl
addb
sti
out
fnstsw
nop
pusha
jnp
add
pop
fwait
sbbl
aam
mov
mov
mov
cmp
jle
cmp
and
movsb
jg
adc
mov
sub
stc
insb
popf
dec
fisubl
push
push
inc
inc
jo
xchg
fsubrl
aad
sbbb
ret
mov
pushf
fcomi
mov
push
push
mov
sub
add
mov
dec
sub
movsl
stc
repz
lea
imul
pop
inc
pop
adc
xchg
imul
or
and
mov
ret
mov
int
add
and
shlb
sarb
fldcw
js
or
bound
cli
ds
fistpll
xchg
push
scas
mov
sub
test
cmpsl
or
pop
cmpsb
sub
mov
push
fidivl
in
fwait
scas
sbb
sub
or
cwtl
mov
sbb
add
cmpsl
orb
or
pop
dec
mov
dec
hlt
shl
out
mov
out
xor
adc
ja
mov
cmc
test
mov
add
jecxz
dec
in
int
insl
dec
imul
pop
in
mov
jge
in
in
hlt
popf
mov
push
test
repz
fidivl
loope
and
repnz
call
cmp
jb
shlb
dec
cmp
pop
sbb
loop
lahf
mov
push
dec
or
cmp
fldcw
mov
fstpt
mov
add
int3
adc
jns
add
or
out
or
fsub
sub
mov
mov
int
dec
mov
and
jecxz,pn
shll
sbb
insl
mov
mov
adc
xchg
adc
cltd
inc
shl
cli
stos
aas
imul
xor
dec
jb
inc
or
push
cmp
cmp
cmp
int3
fisttpl
mov
xchg
add
pop
push
push
stos
orl
xchg
jmp
jnp
inc
bound
mov
daa
mov
mov
inc
or
mov
push
xchg
fadd
in
push
adc
xchg
test
lea
ja
mov
rorl
in
into
into
dec
in
jmp
add
sub
add
ficomps
dec
pop
fwait
mov
repnz
cmp
es
jp
or
push
fimull
xchg
cmp
mov
pop
push
push
lcall
fwait
xor
mov
and
cmp
adc
int
jae
adc
adcb
cmp
aad
xchg
xor
adc
shrl
xchg
pop
inc
jno
jmp
xor
insl
pop
cmc
sub
or
pop
adc
jbe
cmc
cmp
dec
out
push
xchg
xchg
push
mov
test
push
pop
inc
xor
or
jnp
jae
int3
dec
aas
sar
push
cmc
inc
cmp
and
jae
and
outsl
push
sub
rcr
sbbb
aas
arpl
mov
and
ds
sbb
cld
sub
mov
xrelease
out
xchg
shrb
insb
and
fs
sub
lahf
lds
jg
mov
sahf
xor
xchg
pop
jnp
sahf
je
dec
mov
dec
adc
xorl
add
xor
mov
stos
pushf
mov
or
mov
or
fcoms
push
pop
mov
mov
add
int
sub
or
jns
xlat
xchg
pusha
dec
mov
sub
pop
lock
sbb
mov
mov
stc
push
add
xlat
je
aas
es
or
lret
mov
jo
test
xchg
shrl
mov
imul
dec
push
mov
cltd
mov
add
fcompl
stos
in
and
stos
mov
je
sti
mov
push
ret
test
dec
mov
sbbb
sub
mov
sbb
out
pop
inc
inc
mov
movsl
icebp
dec
movsb
or
xchg
out
rclb
and
enter
sti
xor
pop
xchg
xchg
jo
fdivrl
push
iret
pop
stc
icebp
mov
mov
inc
pop
sbb
mov
outsb
fstpl
fs
mov
adc
rcl
add
data16
out
xchg
sub
in
cmpsb
xchg
jge
pop
pop
inc
push
clc
mov
shr
insb
rorl
cmp
iret
aas
xchg
aas
sti
inc
mov
ljmp
or
cmp
stc
dec
int
push
cltd
popf
dec
adc
sbb
or
data16
xchg
or
pop
es
leave
sbb
push
push
mov
aaa
push
mov
je
jge
test
outsl
mov
dec
fwait
pop
and
rclb
jp
xor
push
push
dec
into
sbb
nop
cltd
fisubl
or
fsubrl
pop
pop
pushf
imul
js
dec
addr16
inc
cmp
rorb
sub
push
mov
mov
gs
jl
sahf
pop
push
ds
jg
sbb
mov
repnz
call
pop
out
or
inc
jnp
fmuls
jne
sub
sqrtps
or
fidivrl
cli
jge
mov
mov
lds
push
push
adc
cmpsb
sbb
in
jnp
inc
and
or
int3
push
mov
lahf
add
fldl
faddp
cli
aam
xor
or
sarl
bndldx
loope
or
sbb
xchg
repnz
cmp
lret
mov
mov
test
stos
adc
pop
pop
inc
popa
sahf
cmp
inc
arpl
xchg
fnstsw
icebp
stos
and
pop
or
xlat
rcrb
into
outsl
and
cmc
push
push
cmp
jl
shlb
sbb
iret
scas
dec
iret
pop
insb
pop
lods
rol
xlat
in
add
pop
or
mov
int
loope
inc
mov
jbe
pop
pusha
mov
push
mov
fistpll
sbb
into
cs
sub
dec
xor
dec
in
sub
xor
jg
xorb
fcmovnbe
loopne
outsb
jmp
jae
dec
push
inc
jae
cmpsb
jbe
add
fs
cmp
mov
cltd
jno
xchg
nop
shrb
cmp
pop
mov
push
sbb
cmp
xor
adcb
xor
ret
xchg
imul
in
xor
fcomps
leave
cmpsb
test
pusha
jl
aad
in
xchg
adc
iret
ja
jo
jae
out
xor
sahf
stc
inc
mov
mov
or
scas
pop
mov
roll
fisubrs
push
fdivs
cs
pop
arpl
inc
rorl
mov
scas
jmp
mov
sbb
enter
add
ja
mov
aaa
mov
cwtl
dec
cmp
pop
enter
rorl
mov
outsb
cmpl
jbe
cmp
pushf
mov
xor
test
pop
xchg
movsb
inc
dec
lret
pop
pop
sub
aaa
daa
pop
test
rclb
or
sbb
pop
shr
lcall
push
pop
pushf
inc
out
dec
push
mov
pop
mov
fwait
add
pop
pusha
inc
pushf
sub
dec
sti
push
jae
jg
aaa
lcall
adc
jnp
cmp
push
push
dec
nop
out
cmp
lret
rcr
inc
xor
out
dec
test
mov
mov
pop
aad
fcompl
les
fimull
je
pop
pop
jae
insl
aam
xor
imul
in
sub
pop
push
cmp
mov
in
aaa
push
loope
inc
aam
cltd
popf
xchg
mov
jb
fcom
repz
dec
add
ret
jg
js
pop
outsb
je
xchg
mov
pop
add
xor
jle
and
mov
lods
or
repnz
cltd
mov
push
pop
test
lret
mov
arpl
stos
call
hlt
xchg
xor
sbb
out
cld
inc
rorb
add
pusha
scas
cmp
sti
pop
imul
fmuls
and
lret
mov
rcl
pop
mov
pusha
outsl
neg
pop
sbb
addr16
xchg
neg
ja
pop
mov
or
mov
push
pop
popa
fisubrl
ljmp
dec
mov
loopne
mov
inc
add
lcall
push
cmp
ja
sbb
adc
mov
stos
sub
dec
test
push
lahf
out
mov
in
es
stos
add
insb
push
inc
bound
insb
fistl
fwait
pop
hlt
or
dec
jb,pt
mov
in
inc
sub
adc
sbb
popf
mov
xchg
add
test
testb
mov
shrl
xchg
sahf
jne
xor
addr16
sub
adc
and
repz
push
inc
test
adc
xchg
mov
push
std
popf
cmp
enter
push
jecxz
xlat
xchg
es
mov
pushf
pop
popa
mov
mov
aad
jb
and
inc
mov
movsl
fdiv
cmpl
dec
loopne
std
mov
jb
pop
insb
test
jo
add
mov
dec
add
xchg
mov
adc
push
inc
hlt
cld
test
pop
vmovlps
je
pop
mov
and
xor
imul
jb
mov
cmp
inc
iret
fcomip
jle
xchg
sti
ss
sub
mov
pop
data16
push
jecxz
jns
aas
xchg
lea
sub
in
jnp
push
sbb
pop
xchg
and
fildl
out
fs
pop
enter
bswap
push
testl
mov
out
rol
mov
scas
adc
addl
xor
test
jle
bnd
in
int
ja
enter
mov
cmp
xor
out
adc
test
adc
ret
sahf
lret
or
lcall
xor
xor
sbb
mov
inc
aam
cltd
lret
jg
jmp
mov
in
sbb
fimuls
xchg
or
pop
sbb
movsb
iret
mov
into
inc
and
cmp
jb
jns
xchg
pop
mov
inc
pop
mov
fldl
shll
lret
mov
jo
mov
inc
ja
or
scas
add
or
js
std
orb
inc
js
data16
repz
shrb
dec
out
in
inc
lret
repnz
sti
or
sbb
lcallw
and
xchg
out
dec
in
jecxz
xchg
xchg
mov
sbb
xchg
divb
dec
repz
add
lret
jg
dec
dec
loop
inc
in
mov
add
ror
cwtl
iret
sbb
fwait
movl
mov
ljmp
aam
ds
add
pop
mov
sbb
sub
mov
inc
push
ljmp
std
pushf
jl
mov
inc
or
adc
out
insb
push
shll
push
adc
add
scas
sub
or
push
aam
pusha
fxtract
popa
mov
jp
xor
add
mov
inc
insl
jg
imul
cmp
aad
test
and
jg
call
mov
pop
pop
outsb
fmuls
adc
jno
adc
fs
add
mov
push
stos
rcr
lcall
dec
movsl
sub
mov
in
bound
rcl
jnp
jae
and
and
sbb
add
adc
lea
push
lahf
movsb
ljmp
icebp
mov
pop
xor
adc
inc
mov
push
or
push
sub
pop
movsb
jbe
dec
cli
es
push
jne
adc
aad
es
or
add
fwait
inc
inc
je
add
jne
cmc
mov
es
outsl
push
fcoml
mov
int3
push
repz
inc
jmp
ror
stos
lock
sbbb
repnz
dec
scas
inc
and
lea
inc
dec
xor
push
xchg
jg
in
stos
mov
scas
sbb
cli
call
data16
out
sub
push
push
rcll
sbb
inc
fisubrl
add
jno
das
std
xor
sbb
xor
inc
pop
cmp
pop
insl
cltd
jbe
cwtl
jg
stc
repnz
jp
pop
ja
mov
sub
int
cmpsb
and
pop
pop
mov
push
pushf
repz
movsl
jae
lds
insl
mov
inc
daa
aad
mov
mov
push
rolb
movaps
sub
sbb
imul
test
fmull
aas
mov
cltd
adc
stc
dec
mov
scas
inc
inc
icebp
stos
cld
mov
dec
ja
leave
dec
mov
fisubrs
cmp
sub
or
outsl
imul
and
mov
sub
mov
dec
dec
jmp
jp
inc
xor
es
fnstcw
mov
mov
xchg
call
mov
mov
jle
inc
ljmp
push
xchg
add
pop
out
fadd
popf
sbb
xchg
push
mov
fwait
repz
es
cli
ret
data16
adc
sub
mov
mov
loopne
jmp
cmp
adc
cmp
pusha
sbb
paddusw
sbb
sbb
scas
rorl
jmp
fld
and
nop
aam
movsb
in
push
or
push
jecxz
gs
ds
andb
aas
scas
stos
inc
mov
sbb
jg
mov
jg
cmp
push
lea
jae
dec
mov
push
mov
sahf
inc
lret
repz
cmp
int3
sub
pop
sbb
xchg
adc
jno
jmp
or
fiadds
fwait
aad
stos
fwait
sub
and
loopne
sbb
mov
iret
jae
mov
jmp
aaa
mov
push
mov
jl
jo
shl
mov
nop
mov
xor
lds
es
addb
mov
loope
call
and
dec
mov
or
repz
inc
xor
xor
adc
pop
push
inc
fsubl
push
in
mov
inc
push
cmc
xor
nop
mov
pop
xor
in
cmc
jecxz
sahf
mov
push
dec
mov
cmpsb
mov
lds
cmp
mull
test
mov
sub
push
jnp
xor
jmp
dec
outsb
pop
std
flds
fidivrs
pop
sbb
movsb
jns
rcll
je
dec
movsb
daa
dec
mov
rorl
cld
add
xchg
int3
dec
pusha
leave
jg
pop
jno
imul
js
aad
jb
ja
sbb
addr16
mov
mov
pop
test
pop
mov
pusha
mov
punpckldq
mov
push
cmp
sub
out
pop
cmp
xchg
fistl
test
ror
insl
inc
push
jae
sbb
push
lea
in
or
arpl
xchg
call
pmovmskb
rcrl
mov
test
addr16
mov
or
mov
sbb
cmp
push
bound
push
xchg
jp
xor
mov
inc
mov
and
pop
mov
push
mov
lods
in
repz
ss
cwtl
inc
loope
scas
jge
fnstenv
cmp
lretw
xchg
mov
pop
cmp
sar
lds
scas
test
shll
dec
mov
jns
pop
sub
push
arpl
add
dec
sub
mov
stos
push
testb
shrb
jmp
cmp
mov
fwait
jmp
inc
dec
jg
mov
sbb
jge
ret
pop
fucomi
jbe
cltd
mov
icebp
cmpb
popf
shlb
dec
dec
adc
push
scas
fwait
shl
rcrb
adc
std
fcoml
fbld
push
mov
shlb
inc
gs
iret
inc
lahf
lock
mov
inc
ror
inc
cmc
mov
imul
or
pop
pushl
xchg
fwait
sbb
imul
dec
hlt
movsl
dec
adc
adc
pop
jle
in
dec
cmpsb
scas
test
data16
cmp
cmp
xchg
test
or
push
mov
cmc
and
adc
and
add
pop
dec
dec
ja
repnz
mov
push
dec
pop
lret
inc
int3
in
and
lret
insb
jnp
xor
dec
inc
aaa
and
and
jecxz
push
mov
cmpsl
xchg
mov
mov
fwait
test
jecxz
lret
nop
ret
ds
push
jno
stc
in
faddl
iret
or
jl
pop
stos
cs
rol
lods
push
jnp
mov
jg
cmp
testb
aam
add
fnsave
fs
lock
cmp
outsl
nop
or
fwait
rcll
mov
jmp
adc
mov
fs
lock
adc
testl
outsb
or
jns
mov
fwait
xchg
jb
push
add
fs
inc
xor
jge
cld
cltd
xlat
loopne
fnsave
mov
inc
test
mov
inc
fisubrl
lea
mov
mov
lahf
pop
rorl
mov
outsb
pop
dec
loope
add
xlat
stos
stos
ja
push
pop
pop
shr
mov
aad
xchg
imul
mov
mov
jl
loop
adc
dec
pusha
mov
adcb
cmp
push
fldenv
dec
inc
fwait
dec
test
push
sahf
pop
add
fsubl
inc
outsl
inc
push
rcr
psllq
stc
fsubrl
fcompl
jmp
std
xchg
cld
mov
fcomps
mov
push
iret
pop
int3
sub
push
insb
ret
lods
push
jge
jne
int3
mov
mov
jne
in
imul
in
xchg
push
enter
xor
cli
cltd
les
inc
jmp
ds
idivb
xchg
daa
std
ja
scas
mov
sub
add
lret
add
lret
dec
adc
mov
or
sub
or
insb
test
jecxz
mov
int
dec
test
addr16
into
cmp
out
insl
fwait
jb
iret
cmp
push
imul
les
in
inc
push
sub
imul
pop
dec
mov
mov
sub
mov
push
or
es
fdivrl
jmp
mov
sbb
sub
imul
pop
adc
roll
iret
adc
jge
decl
jne
jnp
in
mov
out
adc
es
shrb
std
scas
mov
aas
add
lahf
jnp
dec
ret
dec
jae
stos
std
jns
aas
xor
idiv
repnz
dec
jnp
push
mov
push
push
sbb
mov
mov
inc
add
xchg
std
or
mov
scas
lahf
dec
pop
in
xchg
cli
mov
pop
mov
shrl
in
or
je
out
pushf
lds
out
out
fadd
pop
scas
inc
pop
jmp
pop
fwait
ja
movsl
lahf
mov
pop
mov
pop
clc
ror
pop
cwtl
push
mov
out
cmpl
mov
push
nop
cmp
ds
fnsave
or
add
ret
movsl
insl
fs
pop
addr16
test
sbb
jmp
mov
xorb
jne
sti
into
push
jg
push
mov
ds
mov
lds
push
imul
cmpsb
into
lods
push
pop
arpl
add
mov
push
lahf
lods
inc
mov
testl
stos
and
inc
test
out
jl
imul
xlat
add
ret
pop
mov
mov
sub
sbb
inc
aad
cmp
mov
cs
xor
repz
add
jmp
shll
nop
pop
stos
testb
jmp
inc
dec
mov
icebp
add
cmc
mov
fimuls
popf
adc
loopne
mov
and
mov
sbb
pop
mov
xchg
mov
test
in
in
mov
dec
jae
daa
cmpsb
mov
adc
je
sub
inc
leave
mov
dec
jge
out
xor
pop
add
mov
jge
sub
mov
sbb
add
push
inc
jno
xchg
call
xchg
inc
mov
or
cmp
out
lods
push
in
ficomps
stos
push
xchg
lret
cli
cmp
lcall
xchg
sti
push
push
push
and
cmp
cmp
sub
cmc
push
inc
adc
adc
filds
mov
sbb
iret
inc
dec
pop
cpuid
mov
dec
dec
dec
jmp
jbe
shll
sbb
jle
sbb
pop
fisubrl
mov
movsb
filds
mov
cld
fcoml
pop
mov
xchg
jg
cld
and
stc
xor
xor
imul
pusha
fcmovu
or
jmp
mov
cld
cmc
pop
jae
push
jp
fmull
jb
clc
cmp
popa
xor
mov
icebp
stc
cltd
xor
popf
push
negb
pop
sti
jmp
dec
iret
repz
stc
fs
mov
lcall
push
in
sub
mov
and
cwtl
jg
fistpll
mov
out
ljmp
add
movsb
out
mov
lods
aam
dec
pop
mov
pusha
jne
ljmp
cmpsb
js
xor
shrl
dec
repnz
je
or
dec
cmc
sub
insb
fistpl
cmp
mov
ror
mov
in
sub
clc
sbb
sbb
jg
or
cli
cs
xchg
popa
fisttpl
cli
fidivl
fwait
icebp
ficompl
pop
inc
fcmovbe
jmp
fbld
mov
cltd
insb
dec
cmp
sbb
mov
sbbb
data16
mov
jno
test
mov
pop
insb
neg
les
sti
pop
in
sti
sbb
dec
mov
mov
movsb
mov
hlt
sbb
out
mov
add
in
inc
ss
ret
mull
repz
int
test
sub
lret
cmp
pop
addl
jmp
add
mov
cmp
icebp
cmpsl
idiv
sbb
jmp
lods
and
aad
cltd
icebp
cmp
pop
push
jp
imul
fwait
mov
add
cmp
jle
jg
sbb
push
and
or
out
hlt
mov
stos
cmovno
fs
test
add
mov
ret
rolb
testl
sbb
pop
xchg
std
fiaddl
mov
sti
cmpsb
scas
out
imul
mov
ss
sub
mov
pop
int3
mov
daa
push
loop
sbb
adc
push
jno
lcall
jecxz
pop
out
push
adc
pop
push
mov
inc
mov
ljmp
cmpsb
adc
or
and
outsb
adc
xorb
dec
in
rolb
shl
add
imul
mov
inc
inc
aad
xorb
shr
aam
jl
pop
and
ss
cmp
fisttpll
xor
push
and
push
pop
xlat
fildll
xchg
pop
jmp
pop
mov
enter
xor
or
fnsave
std
testl
shr
test
and
mov
xchg
popa
xor
sarl
sti
sub
fnstenv
adc
jg
shlb
stos
cltd
daa
or
call
outsl
jne
and
adcl
mov
insl
pop
mov
adc
cmp
and
and
inc
add
pop
pop
mov
xlat
in
addr16
dec
dec
inc
push
mov
leave
call
xlat
fs
or
xchg
pop
adc
cmpsb
mov
js
mov
sbb
cmpb
mov
push
pop
xor
sahf
cmp
add
scas
mov
stos
or
out
adc
dec
shlb
cmp
inc
cmpsl
into
sub
dec
fwait
ret
jmp
mov
sub
rcrl
sti
jl
inc
lret
lods
dec
ds
icebp
jbe
jns
push
int
push
dec
and
lahf
add
insl
push
jo
dec
add
xchg
dec
popw
les
xchg
lods
arpl
xchg
cmp
lret
aad
dec
scas
arpl
mov
push
jns
jb
les
and
sub
cmp
subb
inc
loop
cmp
lcall
lods
mov
and
adc
push
xor
mov
xor
sub
pop
fldt
mov
out
push
xchg
jl
pop
or
mov
jno
je
cmp
jnp
cmp
mov
mov
sub
push
adc
or
lods
std
std
inc
cmovl
fidivrl
xor
pop
pop
shrb
push
mov
push
mov
xor
sub
sub
or
jge
mov
daa
push
mov
cmp
jmp
idiv
mov
mov
adc
cmp
sub
int
mov
out
bound
repnz
mov
push
add
jmp
aad
dec
int
rcll
dec
or
jno
pop
sub
jbe
loope
inc
ror
sbbb
mov
not
sarl
mov
out
mov
dec
inc
push
rorl
mov
adc
std
sub
cmp
xchg
mov
pushf
movsl
jnp
cmpsl
jg
pop
jl
pop
clc
and
sbb
and
pop
mov
jns
cmp
aad
add
xlat
outsb
inc
stos
aaa
jno
add
pop
cmpsl
fidivrs
ljmp
sub
push
das
mov
mov
in
fldcw
pop
xor
jne
push
jno
mov
pusha
inc
lahf
pop
mov
inc
es
sbb
fwait
and
test
cmp
sbb
dec
test
mov
pop
mov
loopne
sbb
mov
dec
mov
and
inc
sub
ja
daa
mov
sbb
in
stos
ljmp
cmpsl
mov
lock
adc
mov
sub
int
xlat
sub
testl
out
imul
inc
push
mov
push
push
xchg
cmp
jecxz
out
imul
or
test
pushf
mov
pop
jge
jmp
xor
dec
fdiv
mov
loop
adc
ret
jno
jbe
cmovae
pop
and
mov
je
dec
shrl
outsb
aas
cmc
ficompl
in
xor
cmp
test
mov
dec
xor
dec
add
xor
push
in
sarb
xchg
xchg
iret
lods
bound
lret
pop
jmp
jns
mov
into
ss
push
int3
mov
xor
push
mov
adc
add
sub
iret
mov
jae
int3
rcll
sub
jle
mov
jecxz
dec
sbb
imul
loope
or
dec
loope
aam
xor
call
mov
mov
outsb
or
lods
pop
xchg
int
inc
jnp
and
xchg
push
mov
cltd
mov
test
push
sub
int
leave
inc
loop,pt
mov
cmpsl
or
push
push
pop
sbb
addb
xchg
pop
mov
mov
lock
mov
daa
inc
ret
jle
pop
and
jle
inc
push
cltd
pop
out
mov
xor
lods
adcl
inc
dec
xor
sub
pop
cmp
mov
xlat
test
call
loopne
dec
mov
push
or
adc
in
mov
cmp
int3
negl
jae
adc
repz
xor
cmp
push
jns
aad
jne
push
adc
and
ja
jl
mov
dec
dec
mov
lcall
inc
aas
movsl
pop
sarb
dec
dec
stc
ja
sub
scas
mov
mov
push
adc
fwait
lock
mov
mov
daa
dec
dec
push
sti
xchg
pop
mov
mov
or
incl
jg
sbb
std
jmp
je
int
adc
and
sbb
fiaddl
bound
push
mov
test
shl
dec
dec
push
ljmp
stos
ljmp
or
push
mov
cmpsl
inc
ja
das
loope
dec
adc
lods
or
dec
and
adc
sbb
push
push
test
test
push
push
test
xchg
jg
inc
call
cld
cmpsw
rol
jg
adc
ds
repnz
adc
int3
and
pusha
mov
push
in
mov
std
out
sbb
push
pop
xchg
arpl
fistl
sbb
pop
enter
dec
into
xor
sbb
scas
popf
repnz
xchg
dec
mov
push
ds
mov
add
mov
pop
lcall
aas
mov
xor
jmp
inc
mov
pop
push
jge
sbb
insl
clc
jmp
int
iret
cmp
sub
mov
nop
pop
repz
dec
insl
popa
imul
aad
inc
ficoml
and
cltd
pusha
and
mov
and
adc
jns
mov
clc
dec
mov
jl
jg
mov
sub
dec
adc
fisttpl
inc
cmpsl
rorl
test
movsb
cmpb
mov
in
stc
mov
sti
xor
lods
frstor
dec
pop
cli
mov
fwait
subb
jge
push
mov
ja
xchg
pushf
jb
scas
inc
test
ds
iret
icebp
adc
cmc
mov
or
push
lods
cmc
inc
push
lret
add
js
dec
mov
fldcw
push
push
fimuls
inc
push
rolb
cld
fcomp
mov
jo
rorl
push
stos
push
cmpsb
inc
aam
mov
jnp
mov
dec
stos
dec
pop
fs
dec
xor
dec
movsb
ljmp
adc
add
in
std
sub
mov
push
cwtl
jp
xchg
sbb
mov
cmpsb
adcb
lcall
call
sub
dec
ss
dec
mov
xchg
div
call
incb
cmp
stos
jb
pop
mov
cli
jmp
call
xchg
or
arpl
fwait
xor
jns
xor
out
push
aaa
out
add
or
insb
and
outsl
shlb
mov
jne
mov
xchg
inc
jl
scas
pop
push
out
mov
pop
adc
push
imul
xor
dec
mov
mov
or
movb
cmpsl
or
inc
push
cmc
nop
push
jmp
test
insl
adc
push
pop
jge
inc
mov
push
and
adc
or
and
pop
xor
mov
or
ja
subb
lds
lds
pushf
dec
pop
in
and
cmp
out
lea
sub
ffreep
sbb
pop
add
out
cwtl
and
inc
jno
int3
mov
mov
fisttpl
push
xor
push
fisubl
arpl
add
cmp
hlt
sbb
sti
scas
mov
scas
movsb
loope
test
bound
xlat
faddl
mov
xchg
daa
push
mov
outsb
aas
jg
adc
pop
dec
cld
dec
hlt
mov
cmp
jle
arpl
jl
mov
sbb
dec
add
push
dec
xor
mov
fsubrl
popf
pop
sbb
shll
jo
test
add
add
mov
dec
cltd
fcomps
mov
or
loope
imul
lahf
cltd
lods
mov
movsb
andb
cmovs
sub
mov
or
out
cmp
add
cmp
mov
pop
jb
js
add
or
cmc
jnp
cmp
or
sbb
mov
and
dec
dec
or
sub
lcall
lods
dec
jb
mov
into
cmp
inc
jg
mov
jmp
adc
mov
pop
mov
xor
mov
sub
sbb
out
jne
sub
in
add
sbb
incl
inc
sub
sub
pop
or
inc
jp
jno
lods
pop
js
stos
push
mov
cmp
incb
testb
gs
jo
mov
jmp
addb
in
in
hlt
and
js
pop
iret
jmp
cmp
into
pop
mov
push
xchg
repnz
aad
fsub
mov
cmpsl
pop
rol
mov
mov
in
aam
pop
sbb
inc
dec
add
jne
mov
dec
pop
repz
dec
cmp
into
cmpsl
pop
das
aas
repz
xchg
push
iret
sub
das
sub
jnp
push
dec
mov
mov
xchg
pop
push
std
mov
jl
divb
inc
jmp
mov
pinsrw
fcompl
adc
cmp
ret
cltd
imul
orb
std
mov
cmp
fmul
add
ljmp
jecxz
cmp
pop
push
scas
stc
inc
movsl
and
lods
insb
inc
mov
push
cmp
sbb
shl
xor
inc
or
xchg
fs
xchg
int3
imul
ja
aas
mov
test
repz
fmul
push
fwait
sub
imul
dec
adc
test
into
es
xor
movsl
ret
xor
repnz
pop
xor
xor
fcmove
inc
cmc
lods
mov
inc
and
clc
fimuls
cmc
cmpsb
jb
je
jge
imul
push
and
mov
jne
imul
rorl
ds
popf
add
push
or
nop
hlt
mov
pop
jg
pop
repnz
cs
arpl
sbb
imul
roll
repz
lahf
mov
xchg
fcmovnb
ja
mov
inc
lret
mov
xchg
jg
inc
idiv
inc
js
and
js
jecxz
mov
frstor
xor
push
sub
pop
mov
jbe
cs
mov
stc
pop
ret
lahf
cmp
fstpl
dec
pop
cmc
jle
jmp
mov
pop
in
cs
ja
jl
add
xchg
dec
pop
add
pop
push
dec
cmc
pop
cmp
fcmove
xchg
pop
fdivrs
fistps
ljmp
sub
cmp
adc
pop
inc
jmp
inc
in
ja
lds
shlb
pusha
repz
movsl
das
pop
movsl
lods
leave
sbb
loope
add
jecxz
push
dec
mov
mov
loopne
pop
pop
jge
je
out
mov
jo
test
sub
mov
scas
pop
inc
add
clc
jmp
jo
cmp
xor
iret
fdivp
fldt
inc
push
push
xchg
xor
ja
xchg
rcrb
jb
sub
mov
xor
rcr
mov
flds
dec
xor
pop
dec
andl
mov
or
push
or
inc
cmp
cmc
arpl
lret
mov
cmp
cmpl
fdivrl
fisttpl
sbb
sbb
ljmp
fisubl
push
push
cmpsl
add
adcl
cmp
fcmovnu
test
stos
mov
pop
push
add
inc
xchg
hlt
daa
hlt
jo
or
mov
pop
mov
pop
mov
inc
ss
scas
sub
lahf
data16
mov
mov
int3
sub
mov
aam
sbb
fstpl
aas
xchg
xchg
rol
sbbb
inc
insb
test
mov
push
mov
lret
dec
mov
adc
nop
jae
fcoms
xchg
repnz
fldt
dec
or
ds
pop
mov
shrb
int3
push
aam
test
jecxz
idiv
mov
out
inc
into
sbb
push
ljmp
cmpsb
xchg
and
popf
jg
cltd
mov
inc
jmp
cmp
push
cwtl
mov
mov
mov
das
jmp
mov
cmpsl
or
loopne
out
test
inc
outsb
pop
or
mov
push
adcb
nop
mov
das
je
adc
faddl
jno
cld
dec
loopne
stos
dec
mov
ljmp
das
mov
xchg
or
pop
add
inc
fcomi
mov
inc
addr16
pop
push
jb
js
xor
mov
leave
sub
lahf
inc
ficomps
cmp
popa
mov
fucomp
jl
mov
mov
movsl
or
cltd
orb
mov
adc
loope
and
out
jle
add
adc
mov
fildl
inc
xchg
cld
sub
popa
ja
sub
imul
mov
adc
and
cmp
pop
sub
and
xchg
stos
nop
mov
addr16
push
cmp
push
sub
add
pop
cmp
jp
cmpb
mov
jne
in
sub
sub
mov
or
adc
cmc
mov
xchg
jnp
mov
mov
fimuls
add
cld
popa
iret
and
cltd
jge
mov
xor
and
pop
mov
sub
cmc
push
lock
pop
jmp
xor
sahf
fucom
repnz
jnp
pop
mov
int3
adc
inc
fisttpl
jecxz
adc
andb
js
dec
mov
repz
mov
xchg
lods
lret
cmp
outsb
pop
mov
adc
pusha
xchg
or
sbb
push
lods
mov
movsb
pusha
mov
mov
out
test
mov
jb
mov
notb
or
loope
jns
ja
sub
and
cld
arpl
push
dec
shrl
stos
mov
imul
aad
in
stos
jl
push
int
loopne
es
ja
xchg
inc
sbb
adc
cmpb
adc
cmp
mov
push
mov
sbb
xchg
dec
sub
jne
and
shll
push
mov
push
mov
repnz
lods
cs
jae
in
mov
adc
imul
add
or
push
push
rorb
mov
mov
pop
and
jo
mov
jl
aam
ret
shll
push
mov
mov
xchg
popf
mov
pop
or
cld
ficompl
rol
rcr
fisubl
div
lock
out
shrb
cmpsb
push
dec
gs
cmpsl
sbb
rorb
aas
jmp
hlt
dec
call
rcrl
push
push
stos
push
mov
jb
fadd
stc
ficomps
add
imul
xor
std
adc
leave
pop
dec
xchg
sbb
inc
or
or
aam
sub
in
jl
sahf
adc
jnp
repnz
dec
iret
pop
shll
sbb
rorb
in
mov
xor
incl
outsl
jg
mov
mov
and
roll
add
xor
loopne
mov
cmc
dec
adcl
stos
jecxz
push
inc
cli
fucom
mov
aam
xchg
negl
push
xchg
and
outsb
jns
xor
pop
nop
add
dec
outsl
jmp
cmc
cmp
popa
pushf
mov
pusha
addb
fcmovu
or
cmpsb
popl
scas
dec
add
mov
inc
lret
cmc
notl
and
mov
push
or
pusha
push
mov
pushf
mov
into
data16
hlt
adc
or
inc
test
ret
pop
jns
icebp
mov
sbb
aas
inc
adc
mov
push
int
add
adc
adc
dec
mov
mov
fcmovne
fs
or
sbb
cmp
add
data16
mov
gs
out
outsl
loope
xor
push
inc
fwait
mov
add
pop
out
sub
push
xlat
sub
sbb
js
xchg
repz
scas
mov
xor
lcall
mov
adc
mov
outsl
inc
push
lods
clc
and
out
in
dec
ret
or
sub
adc
addl
int3
enter
add
pop
mov
sbb
sub
mov
sbb
ds
sub
mov
test
and
push
jnp
mov
mov
testl
sbb
inc
mov
pop
or
loope
arpl
jmp
mov
lret
arpl
pusha
in
jae
dec
fmull
jae
mov
ret
orb
ret
xor
ucomiss
mov
dec
cmpsl
cmp
inc
dec
inc
push
call
jnp
fdivs
cld
xor
enter
sbb
sarl
lods
cmp
and
inc
cmpsb
je
jg
dec
fcoms
xor
test
push
pop
addr16
mov
dec
push
xorb
nop
pop
lahf
scas
xor
mov
inc
test
leave
enter
or
call
mov
mov
call
mov
dec
xchg
and
or
shl
jb
rol
cmp
mov
mov
cmp
imul
dec
mov
xlat
mov
sbb
add
fsubp
sub
out
jl
rorb
dec
jb
lods
jmp
and
shll
pop
ds
sbb
dec
push
hlt
test
dec
inc
addr16
out
mov
pop
sub
cmp
dec
into
clc
in
jns
fs
cwtl
pop
and
sub
sti
add
xor
and
jge
int3
push
mov
imul
jl
and
call
ds
fiadds
cmp
jl
jo
mov
push
xor
sbb
push
mov
fisttpll
scas
push
push
pusha
aas
sub
stos
fbstp
fsts
dec
jno
xchg
add
int3
mov
mov
and
movsb
repz
in
and
jmp
fbld
mov
sbb
das
jle
iret
add
lret
mov
push
imul
push
loop
scas
xlat
movl
push
test
popf
jae
push
mov
mov
xor
push
push
adc
cmp
xor
mov
dec
repnz
rcrb
inc
mov
inc
push
lcall
mov
adc
mov
xchg
pop
cld
fistpll
push
fwait
cmp
sub
push
cmp
test
es
mov
in
inc
cmp
push
mov
xchg
imull
sti
add
lods
cmp
mov
jg
jecxz
mov
jmp
dec
mov
gs
adc
inc
or
push
inc
adcb
cmp
shlb
pop
jg
jmp
jp
sub
sub
adc
aad
pop
xchg
and
pushf
xor
int
or
pusha
std
dec
mov
jp
les
nop
mov
lods
adc
inc
das
out
and
mov
fwait
inc
sti
in
scas
enter
mov
xor
in
mov
add
cmpl
maxps
xchg
xor
push
jbe
sarl
xchg
cmp
sbb
mov
xchg
push
js
adc
or
je
pusha
cmp
sub
jge
cmp
mov
int3
jg
mov
cmp
mov
mov
xchg
mov
adc
add
inc
jnp
sub
data16
iret
mov
lds
pop
push
xorb
or
out
fstpt
cmp
ficomps
scas
mov
fisubl
inc
dec
call
xchg
inc
mov
xlat
movsb
gs
or
fstpt
dec
push
dec
aas
cs
mov
add
push
inc
dec
shrb
es
sub
fwait
mov
adc
pop
das
mov
test
ret
push
scas
fimull
sub
cmp
adc
mov
and
fs
mov
push
stc
xchg
mov
ja
fwait
negl
dec
pop
sub
out
out
jmp
das
xchg
test
scas
push
iret
mov
dec
or
lret
arpl
and
push
mov
fildl
push
dec
fdivrs
cmp
dec
imul
mov
scas
xor
fisttpl
xor
pop
mov
dec
sub
test
cltd
insb
popa
jo
or
pop
hlt
push
add
sub
cld
add
cmpsl
je
mov
pop
push
jb
add
inc
or
movsl
nop
jmp
hlt
pop
cmp
inc
lea
push
das
jnp
arpl
subl
ss
cmp
jb
cmp
imul
lods
jmp
cltd
ret
in
or
sbb
mov
pop
xchg
inc
inc
iret
and
mov
cwtl
mull
mov
sub
mov
scas
mov
jns
push
fcmovne
xor
int
aam
loope
push
bound
mov
sbb
mov
sub
das
fs
add
aas
insb
and
pop
test
xlat
add
into
ljmp
fimull
aaa
jbe
cli
pop
cmpl
push
mov
les
jae
add
shlb
inc
adc
adc
push
and
push
in
into
rcrb
cmp
jo
push
push
lahf
inc
xchg
test
or
pushf
hlt
fisttpl
cmpsl
jbe
jno
lret
sub
mov
xchg
lahf
fs
idiv
lea
cmp
das
jecxz
sbb
stc
stos
fsubrl
orl
gs
nop
fisubrs
imul
ret
and
mov
aam
pop
cmp
fs
mov
lds
stos
and
fdivrs
inc
insl
lcall
jl
adc
jl
sub
sub
inc
xlat
rcrb
scas
insl
arpl
xor
and
cs
and
push
push
addb
pop
or
jp
mov
decb
int3
bound
sbb
jecxz
rol
sbb
sbb
dec
inc
adc
xchg
ljmp
jae
ds
pusha
mov
sahf
inc
add
dec
repz
sub
icebp
push
push
iret
pop
int
sub
sbb
ret
into
mov
push
pop
jg
mov
adc
push
gs
es
fiaddl
mov
inc
je
inc
subl
mov
cmp
and
rolb
shll
nop
mov
imul
cmp
cmp
int
ret
push
rcrb
and
xlat
add
inc
mull
jo
stos
in
jae
andb
in
xchg
mov
add
or
lods
cltd
pop
aam
cwtl
mov
mov
or
loopne
shrb
pop
dec
mov
mov
pop
pop
pop
clc
int3
fwait
xor
push
sbb
or
push
mov
pop
lea
out
dec
sbb
pop
xlat
cmpsl
mov
push
add
jmp
dec
scas
bound
push
push
filds
orb
mov
out
insb
repnz
xor
rcl
or
clc
add
xor
ja
filds
pusha
inc
push
push
pop
stos
and
ds
daa
pcmpeqb
stc
imul
jmp
inc
and
xchg
mov
int
cmc
imul
jns
cltd
testb
shrb
pop
jb
stc
daa
mov
stos
cwtl
cmp
dec
mov
mov
mov
mov
jmp
or
imul
and
xchg
in
loopne
inc
in
dec
mov
ss
ret
or
repz
popf
dec
pop
lods
xchg
mov
dec
xchg
jmp
jns
dec
jge
inc
jl
icebp
lods
stc
fwait
fnstsw
dec
push
mov
mov
mov
imul
sub
fmull
mov
imul
push
xlat
jbe
inc
js
inc
aad
rorb
cltd
fwait
iret
cmpsl
fisttps
stc
inc
sub
adc
rorb
movsb
adc
in
in
icebp
fimuls
stos
pop
or
mov
jb
sub
pushf
mov
cmc
mov
cmp
sbb
mov
dec
loope
mov
jg
dec
lcall
aaa
jle
pop
cmp
push
sbb
xor
daa
lds
insb
jecxz
sbb
in
movsb
lahf
hlt
std
xchg
pop
cltd
xchg
sub
rolb
mov
orb
mov
insb
lahf
or
sarl
or
xor
dec
fidivs
mov
fucomp
pop
popf
jecxz
cmp
testb
popl
mov
sbb
or
and
dec
add
inc
ljmp
ja
fldl
and
mov
mov
xchg
xor
fadd
lods
into
jb
sti
cwtl
popf
js
int
inc
cmp
fcoml
sub
incw
cltd
and
movsl
mov
inc
sub
into
mov
add
fcoms
inc
jl
adc
addl
cmc
in
test
ss
cmp
or
cwtl
mov
mov
pop
rclb
adc
test
pop
aas
fsubrl
lcall
fsubr
orb
xor
rclb
pop
test
xchg
jno
dec
cmp
andl
pop
dec
movsb
aad
das
dec
inc
dec
push
mov
stos
stc
inc
fsubrs
xchg
sbb
fldl
push
jmp
imul
adc
rolb
jae
in
pop
sub
ja
testb
pop
or
xor
or
test
dec
sbb
push
jns
sub
dec
push
pop
xchg
and
test
ss
push
and
insl
mov
dec
xchg
ja
cmp
mov
je
dec
insl
push
lahf
sbb
subb
jae
in
clc
fmull
in
push
pop
jecxz
lods
or
pop
jnp
flds
or
mov
fcomps
into
int
shlb
aam
adc
jecxz
cld
xchg
or
daa
into
fld
push
cmp
pushf
cmp
sbb
cmp
out
cmp
ljmp
push
push
adc
popf
mov
jecxz
iret
cmpb
cmp
xor
test
adc
adcl
jecxz
mov
lds
or
adc
dec
sahf
enter
inc
loope
push
xor
pusha
inc
xchg
out
and
dec
cwtl
dec
arpl
sbb
add
lds
cmp
xor
mov
adc
repz
gs
dec
push
jo
popf
outsb
repz
mov
xchg
lock
mov
dec
pop
jno
inc
mov
push
ljmp
fcmovnbe
repnz
jbe
nop
lea
push
cmp
dec
jnp
pop
pop
jp
jg
push
pop
mov
dec
and
xchg
fwait
out
out
and
xchg
dec
push
adc
lret
mov
cmpsb
push
gs
negl
aas
dec
xor
jno
mov
mov
insb
ja
cmp
and
mov
mov
in
push
push
stos
ljmp
dec
dec
mov
cmpb
imul
andb
aas
sub
in
call
in
jno
add
movsl
pusha
cmp
clc
dec
adc
es
jae
insl
push
jne
jns
dec
pmuludq
pop
repz
mov
cmp
mov
xor
mov
add
jecxz
push
dec
fisttpll
or
inc
in
iret
clc
and
adc
out
sarl
mov
adc
mov
fwait
ljmp
push
loopne
pop
or
pusha
pop
mov
push
inc
push
inc
sub
mov
pusha
rorl
push
cmpsb
mov
or
call
in
mov
cmp
jbe
jg
nop
cmp
int3
mov
inc
out
into
push
jns
iret
sar
mov
jb
clc
inc
js
test
loope
inc
jp
push
pusha
mov
rcrb
xchg
jl
mov
add
mov
inc
adc
xor
mov
adcb
test
push
sahf
scas
sbb
jns
lea
sbb
inc
filds
sub
icebp
lea
jmp
adc
shlb
fsts
dec
int
pop
out
stc
iret
sub
int3
xchg
or
cmc
cld
iret
rorb
dec
lock
pushf
or
inc
mov
test
addb
dec
push
push
jmp
loopne
push
push
in
fstps
imul
loope
and
ja
adc
sbb
xchg
or
mov
pop
ds
and
arpl
xchg
test
lods
lods
ss
xorb
dec
cmc
xchg
fwait
inc
and
push
out
mov
xorl
mov
jle
push
neg
push
adc
rcll
mov
sbb
add
xchg
pop
loopne
pusha
sub
fdivrs
jns
xor
cmp
jnp
mov
imul
sub
es
sub
fmul
nop
dec
out
pop
jbe
push
loop
ficompl
mov
and
inc
dec
fdivs
and
test
cmp
mov
fisubl
leave
int
sub
pushf
stos
rorb
sub
sbb
jno
mov
popf
jge
in
fs
dec
test
repz
jb
pop
je
xor
mov
jl
iret
push
std
fs
jmp
int
andb
inc
inc
cli
mov
nop
into
sbb
lods
popa
jae
dec
rcrb
push
dec
lcall
test
stos
or
mov
cmpsb
adc
lret
push
lcall
mov
int
sbb
aam
loope
inc
sbb
popa
pop
lcall
sbb
imul
and
dec
push
shlb
pop
data16
pop
mov
pop
popa
out
fistpl
inc
adc
inc
fisttpl
insl
cmpsb
filds
inc
pop
xchg
int3
pop
out
xor
mov
push
test
adc
fidivl
push
rorb
xor
sbb
dec
push
mov
jp
addr16
rorb
mov
mov
cmp
loopne
loopne
pop
inc
es
or
cmpw
sbb
inc
sahf
mov
mov
adc
pop
mov
test
xlat
icebp
repz
jne
nop
push
sarb
ret
sub
jmp
or
jmp
inc
push
imul
push
das
inc
adc
stos
xchg
insb
and
mov
std
jp
jmp
cltd
shll
popa
pop
into
enter
in
sbb
and
mov
or
in
add
pop
pop
es
imul
adc
adc
lret
test
insb
movsl
adc
mov
xchg
call
lea
mov
or
mov
add
testb
insb
push
mov
test
ja
gs
nop
aaa
fcomi
daa
imul
in
orl
jnp
in
inc
dec
cs
filds
xchg
cmp
cmpsb
xlat
mov
mov
or
pop
aas
mov
movsb
pop
mov
inc
inc
inc
sar
icebp
push
mov
imul
xchg
shlb
push
jns
ss
inc
add
incl
repz
push
add
push
mov
pop
or
pushl
add
outsl
mov
dec
jno
mov
leave
inc
dec
fistpl
inc
cwtl
fisttpll
das
adcb
mov
fcomps
push
test
stc
pop
ss
push
iret
dec
push
dec
sbb
out
jge
cmc
ja
pop
loopne
repz
test
fldt
movsb
fnstsw
mov
or
lods
sub
dec
dec
sub
in
cmp
mov
ljmp
pop
aam
and
adc
pop
or
push
adc
mov
outsb
xor
push
cmp
mov
cmp
sbb
in
mov
pop
mov
icebp
daa
insb
sbb
popf
mov
inc
mov
fldt
push
lret
and
rcrl
dec
xor
mov
jb
ret
push
lret
inc
pop
mov
pop
in
push
out
leave
aad
pop
and
mov
push
pop
mov
push
push
test
fs
faddl
push
sahf
mov
dec
not
xchg
out
xchg
push
jecxz
adc
or
xchg
or
out
push
mov
insl
repz
and
mov
mov
add
jno
sbb
pop
je
jns
jmp
xchg
push
mov
and
in
cmp
inc
adc
gs
arpl
cltd
lret
movsl
movsb
sub
sub
fcmovu
jbe
pusha
js
xchg
popf
xor
mov
scas
or
popl
ds
or
out
std
jo
jno
jecxz
test
lret
shl
xchg
jnp
sub
jl
fnsave
push
adc
cmp
mov
pushf
lods
mov
cmp
sbb
mov
dec
inc
mov
outsb
fcom
popa
dec
fwait
sar
cltd
lods
shlb
jno
nop
pop
fxch
imul
sbb
sub
jo
pusha
popf
mov
ret
mov
jmp
in
fnstenv
ret
push
xlat
arpl
mov
jnp
mov
std
aam
mov
add
mov
cli
and
jo
movsl
les
cmp
popf
mov
ja
out
mov
mov
mov
and
sahf
in
and
cmp
push
int
sysexit
add
cs
jo
or
mov
das
jg
cltd
push
idivl
mov
aas
imul
cmp
mov
jno
adc
ja
js
xor
mov
into
sbb
insl
or
jg
fldt
sub
or
push
mov
dec
nop
jmp
mov
pop
in
movsl
cmpsb
arpl
lcall
insb
imul
cs
gs
out
cmp
add
ret
incl
jo
xor
aad
f2xm1
out
xchg
in
popf
mov
lods
dec
lret
mov
jle
je
out
cmpsl
inc
add
inc
sbb
cmp
dec
idiv
ja
cmc
jo
pop
ja
cmpsb
dec
xchg
aaa
ss
push
dec
or
sbb
cmp
mov
xor
repnz
sbb
jmp
or
clc
repnz
pop
adc
and
stos
mov
insb
cmpsb
scas
in
daa
or
inc
popf
mov
or
mov
roll
cmp
out
add
pushf
push
bound
pop
dec
mov
notb
adc
sbbb
sbb
inc
mov
pop
nop
testb
push
inc
mov
jno
cld
or
push
mov
mov
rorb
movsl
popa
push
mov
fmul
pop
add
fidivrl
mov
push
fs
inc
sub
mov
popl
or
ljmp
fidivs
lods
xchg
sbb
add
pushl
sbb
clc
push
inc
imul
fldcw
js
inc
cmpsl
pushf
loopne
mov
out
push
dec
push
ljmp
sbbb
add
mov
mov
popf
imul
pop
outsb
stc
xchg
in
push
xchg
roll
sub
and
xchg
pop
enter
lcall
inc
iret
mov
stos
test
shl
pop
cmpsl
adc
subb
rorl
xor
stc
cmc
sbbb
pop
xor
jo
push
test
push
gs
into
jle
out
ds
ja
addb
inc
dec
test
ja
mov
pop
je
mov
icebp
lahf
cmp
sahf
mov
orb
vmulsd
imul
je
dec
hlt
movsb
jmp
sub
stos
pop
sbb
and
dec
and
mov
enter
iret
es
ret
or
test
sbb
pop
xchg
les
mov
lret
push
je
gs
jne
loop
xor
test
stc
sbb
sub
jge
stc
stc
push
repz
mov
push
mov
sub
add
cmp
sbb
cltd
add
loop
sti
inc
inc
and
pop
leave
imul
pop
out
push
ss
fdiv
fsubp
inc
adc
loope
mov
mov
xchg
inc
shl
push
inc
scas
std
fisubrl
in
jle
push
or
fldenv
das
xchg
cmp
out
imul
lret
insb
fbstp
push
add
sbb
mov
push
shlb
sub
mov
ret
xchg
pop
mov
adc
mov
and
popa
or
mov
sub
lret
xor
mov
bnd
mov
push
gs
lods
rorl
jae
out
adc
adc
pop
add
inc
xor
aas
les
inc
pop
bound
xor
mov
mov
stc
cltd
jl
sbb
jno,pt
pop
dec
pop
mov
loope
ret
cld
stos
dec
nop
jle
adcb
lods
test
mov
pop
push
icebp
dec
xchg
or
jl
dec
clc
aaa
xchg
cld
mov
in
std
jbe
sub
push
sub
jg
and
mov
cmpsl
arpl
cmp
or
cwtl
add
push
fldl
test
decl
ficompl
add
xchg
sbb
push
push
cmp
loopne
js
mov
stos
push
pop
xchg
sbb
outsl
js
dec
mov
test
cmp
mov
mov
jl
jl
add
aam
call
inc
push
stc
push
les
fbstp
sbb
inc
js
dec
and
popf
inc
lods
xor
sbb
int3
cld
sub
dec
or
lock
shr
sbb
orl
sahf
cld
addr16
inc
jb
jno
push
jl
push
ror
sti
das
xchg
mov
lcall
xor
adc
sub
jmp
std
sub
cld
cmp
imul
adc
push
outsb
lods
dec
ds
incl
fisubrl
adc
mov
inc
movsl
add
outsl
inc
push
and
pop
mov
mov
lea
adc
mov
fmull
lret
add
pop
imul
mov
cmp
inc
daa
inc
ja
ret
mov
mov
adc
in
lods
mov
fmulp
sub
std
les
fs
fcomi
mov
addb
cltd
add
pop
xchg
and
jb
daa
xchg
inc
mov
or
inc
fdivp
cmp
pop
mov
xor
data16
inc
add
adc
jae
lahf
adc
cmp
mov
cli
dec
adc
ss
cmp
cmp
add
scas
leave
mov
filds
and
insl
sub
popf
jl
outsb
cltd
or
in
push
out
cmp
sub
add
cmpsl
fnstsw
test
push
mov
mov
ret
xlat
cmp
and
mov
sbb
xlat
stc
pop
mov
std
mov
sub
push
test
ficoml
movsb
and
or
dec
jmp
cmp
jno
inc
and
xorb
jle
and
sti
shrb
aas
mov
cmc
nop
int
jl
inc
cmc
rcrb
push
dec
jge
mov
rorb
or
pop
and
rcrl
sub
enter
std
ret
filds
sbb
cmpsl
mov
push
inc
aam
push
mov
int3
push
xor
rorl
popa
push
loop
add
test
icebp
cmp
outsb
negl
push
sarb
and
test
rcrb
pop
fisttps
nop
cmp
jb
inc
aas
lret
adc
jno
imul
adc
cmp
and
fwait
mov
sub
inc
dec
out
mov
rol
les
imul
test
stos
flds
sbb
push
in
and
ret
sbb
outsb
push
mov
int
lods
jecxz
jmp
inc
xor
jno
cmp
in
xchg
jg
repz
jnp
push
fmul
pop
int
and
dec
xchg
or
gs
jns
rorl
dec
or
ret
cmpsl
push
sub
fimull
lods
mov
fs
mov
mov
sbb
std
jle
push
out
aas
mov
in
dec
leave
add
mov
lret
sti
push
inc
jno
bound
xchg
push
mov
mov
mov
out
int
pop
or
out
sti
adc
inc
adc
aam
lret
xchg
push
sbb
scas
scas
mov
repz
sti
mul
and
mov
pop
inc
xor
xor
mov
inc
pop
inc
add
dec
pop
jg
or
fldenv
jb
in
shl
pop
out
push
int
mov
cld
and
dec
xchg
inc
mov
aad
fdivl
std
in
mov
ljmp
in
dec
or
sbb
dec
out
jns
dec
pop
adc
mov
popa
adc
mov
xchg
fildl
lods
xlat
mov
jns
daa
mov
lret
xchg
test
pop
sub
or
xlat
lock
imul
add
pop
ja
cmp
adc
adc
movl
cltd
lretw
mov
adc
cmpsl
pushf
inc
xchg
test
rorl
mov
in
ds
inc
mov
sti
mov
mov
xor
out
or
into
rep
roll
jmp
inc
in
fimull
push
imul
add
test
movsl
inc
xchg
pop
push
mov
flds
in
xlat
imul
jo
push
sahf
adc
dec
fwait
cs
inc
dec
in
daa
pop
sub
cltd
nop
fistpl
jg
and
mov
sbb
leave
push
sub
ds
sbb
stc
arpl
into
adc
lcall
inc
sbb
pop
repz
inc
out
push
negb
movsb
cmc
aam
xchg
sub
pop
sbb
add
fdivp
push
or
or
fs
in
jnp
int3
cmpsb
mov
or
mov
mov
icebp
push
sbb
loope
idiv
pop
mov
sub
stc
shll
arpl
rorl
clc
xor
dec
mov
xor
divl
loope
mov
xchg
mov
jmp
std
mov
sbb
pop
outsl
sbb
xor
popf
xlat
xchg
mov
push
push
lods
fucomi
or
xor
sbb
rcll
inc
insb
fwait
std
or
ljmp
aaa
fbstp
pop
pop
mov
xchg
sub
lret
jnp
out
cltd
cmp
xor
dec
ss
jno
addl
pop
enter
std
mov
stos
aam
loope
or
pop
inc
inc
cmpsb
jp
xchg
dec
mov
push
dec
out
and
outsb
jne
int
and
xor
sub
movsl
incb
dec
or
mov
in
ss
mov
hlt
mov
shll
push
adc
jo
icebp
mov
int3
add
jbe
xor
mov
movsb
push
add
lahf
add
and
jno
sarl
jmp
orb
fsts
dec
cmc
ret
push
add
lret
xchg
pop
lock
mov
push
popf
push
movsl
push
int3
mov
cs
inc
mov
xlat
cmp
std
imul
sub
pop
dec
push
add
pop
jmp
fwait
fwait
and
iret
push
adc
mov
fidivrs
mov
mov
aam
push
mov
loopne
and
mov
adc
es
inc
sub
xor
testl
movsl
insl
ss
sbb
push
add
xor
push
adc
ss
push
xor
in
fwait
dec
push
fsubr
fisubrs
jns
lcall
or
out
fcmovnu
bound
pop
fs
inc
lods
mov
adc
mov
aad
int3
pop
jns
pop
shrb
int3
push
mov
or
stos
or
sub
jb
fucomi
xchg
xor
pop
outsb
mov
or
mov
lahf
in
dec
mov
fucomip
dec
out
orb
je
inc
iret
in
pop
push
sbb
inc
js
xchg
xor
stc
cmp
or
repnz
subl
xlat
ss
cltd
in
mov
ss
xchg
out
dec
out
rcrb
andl
loop
movsl
daa
fcoms
xor
repnz
mov
mov
add
or
pop
popf
jp
lods
lods
sub
stos
or
sub
adc
gs
xor
jno
mov
ret
and
jo
int3
mov
in
xchg
ror
call
mov
or
fstpt
pop
mov
and
fsubs
sbb
outsl
js
lods
cmpl
sbbb
in
pop
int
pop
cmpsl
mov
int3
into
sahf
mov
jbe
xchg
repz
xor
fmull
xor
aad
pop
jne
insb
gs
sbb
test
subl
clc
into
int
mov
into
stos
daa
add
repnz
inc
jg
loopne
fidivs
insb
fistpll
imul
cmp
lret
add
jl
sbb
pop
pop
mov
jle
cmp
fsubrl
dec
popf
pop
fsubrl
cmp
jno
push
out
xlat
push
lret
rolb
cmp
mov
js
and
pop
mov
pop
inc
hlt
jo
pop
adc
mov
adc
je
push
adc
sbb
add
lret
and
adc
adc
mov
fstpt
push
mov
fisubl
std
sbbb
imul
jbe
xchg
sbb
lret
push
inc
sub
xchg
loop
fimull
mov
inc
cmp
pop
outsb
jl
loopne
ror
jmp
in
mov
dec
jg
les
syscall
jnp
jno
inc
inc
add
ljmp
cmpb
lock
sbb
loop
cmpsl
mov
or
shrb
push
loope
xor
bound
mov
jns
js
inc
std
pop
insb
clc
mov
jp
xor
icebp
push
test
push
jp
data16
xchg
jae
lods
dec
mov
pop
push
rcrb
lock
cld
push
cmp
and
test
or
xlat
aaa
std
dec
mulb
in
lcall
pop
dec
das
movsb
std
ja
dec
mov
sub
call
mov
ret
lcallw
jns
mov
inc
mov
sbb
out
scas
lock
sub
or
jnp
or
sbb
add
lret
mov
rcrl
mov
lea
jmp
jnp
xor
mov
add
inc
push
ds
int
xlat
pushf
mov
inc
cltd
push
dec
popf
pslld
in
push
aam
scas
outsl
inc
lret
inc
icebp
cld
test
cmpsl
jg
ds
lods
aad
jmp
push
inc
inc
inc
lea
mov
dec
dec
mov
gs
into
fists
shrb
push
sti
mov
sub
cltd
mov
jae
jae
imul
dec
pop
addr16
pop
jnp
dec
pop
fcom
icebp
sbb
jae
stos
fstpl
ja
sub
mov
dec
out
fwait
sbb
xchg
loope
jle
ja
and
fwait
mov
popf
xchg
xchg
add
jg
filds
outsb
push
cltd
xchg
push
add
rcll
fidivrs
decl
dec
jnp
or
out
cld
lcall
push
fistpll
mov
leave
mov
add
stc
sub
enter
out
or
filds
adcl
idivl
cltd
pop
push
icebp
mov
call
xchg
push
mov
lock
push
scas
and
iret
pushf
add
push
mov
cmp
dec
testb
rol
push
wbinvd
fs
les
jns
inc
push
inc
ja
repnz
rcrb
lret
push
js
stc
jae
mov
sbb
xor
ja
add
sub
pop
push
sub
mov
xchg
pop
cmp
ljmp
xor
fdivrs
pop
and
into
js
or
fimull
adc
int3
outsl
pop
inc
or
mov
mov
rorl
cmp
fidivrs
js
lods
pusha
mov
add
push
dec
pop
and
call
repz
idiv
ss
mov
xchg
sbb
leave
adc
or
ret
cwtl
aam
dec
push
jae
pop
mov
cmp
mov
lahf
rcll
icebp
sbb
mov
insl
sbb
add
sbb
add
push
cmp
dec
cmpsb
das
test
mov
imul
mov
pop
daa
mov
lock
push
fldcw
lods
inc
loop
inc
dec
mov
outsb
inc
mov
aam
pop
lret
scas
ljmp
scas
add
jle
inc
or
and
lret
rcr
les
inc
jae
mov
mov
imul
xchg
addl
sahf
call
call
int
jnp
mov
out
cmp
inc
fs
movsl
fs
jl
add
imul
outsl
sbb
stc
push
jbe
add
pop
sbb
sar
into
mov
cmp
and
and
aaa
fs
std
into
fwait
dec
ret
push
mov
inc
iret
repz
punpckhwd
push
xor
inc
inc
cmp
or
cmp
jnp
repz
and
stos
mov
iret
mov
xor
sub
jmp
mov
or
icebp
icebp
inc
xchg
sbbl
repnz
stos
das
cltd
je
jbe
cmp
sbb
xchg
out
push
mov
sub
je
aad
arpl
jo
inc
pop
or
fldcw
push
arpl
mov
rcrb
sbb
jp
mov
mov
jne
fbstp
decb
or
add
das
test
mov
jns
jns
push
jo
outsl
out
dec
fidivl
sbb
je
sti
mov
dec
std
push
loop
pushf
push
inc
xor
ljmp
pop
sti
ret
push
mov
pop
int
mov
sarl
cmc
hlt
jo
xrelease
loop
and
jo
adc
xor
push
inc
into
mov
mov
pop
ficompl
int3
sti
ljmp
inc
test
push
mov
xchg
cmp
pop
xchg
jecxz
stos
push
lds
xor
xor
leave
adc
hlt
or
rorb
sbb
cltd
fadds
sbb
sbb
imul
leave
dec
cltd
mov
adc
xchg
mov
push
insb
mov
inc
ror
or
inc
push
scas
mov
lahf
dec
jmp
pusha
cmc
jl
sti
jl
faddl
push
pcmpeqb
ficomps
dec
pop
adc
nop
in
outsb
inc
in
xor
hlt
call
loopne
mov
pop
rorl
test
add
pop
xlat
xor
mov
inc
inc
test
pop
xchg
inc
mov
into
incl
xchg
outsb
aas
rcll
xor
iret
mov
xor
or
subl
cmp
sbb
fwait
sbb
adc
or
inc
jecxz
ret
ja
mov
lods
sbb
jg
push
lea
std
sbb
mov
dec
jbe
inc
add
adc
mov
imull
sbb
loopne
mov
sub
fisubrl
outsb
flds
les
cmp
iret
cmp
cmp
rcll
scas
arpl
js
jg
and
sbb
sub
iret
fwait
sti
cmc
xorl
fcompl
loop
cmp
loop
or
adc
enter
and
aad
cmp
and
leave
mov
scas
jl
mov
cmpsl
push
cs
mov
test
rcrl
lret
test
aad
mov
out
pop
xor
jae
lret
push
arpl
mov
push
and
lea
scas
jbe
mov
repz
adcl
addr16
cmp
mov
sub
les
mov
xchg
xchg
inc
mov
rclb
pop
lods
adc
jge
add
mov
sarb
adc
scas
cmp
fstpt
mov
lock
xlat
mov
dec
mov
jns
add
sti
dec
push
loope
mov
fidivl
inc
push
mov
loopne
mov
pop
outsb
gs
rclb
sub
adc
repz
and
js
mov
and
imul
test
jmp
loop
push
bnd
sbb
adc
inc
lret
cli
dec
inc
in
sbb
shlb
mov
xor
adc
aad
je,pn
dec
mov
push
mov
mov
and
add
rep
lea
ffree
ret
scas
sub
push
mov
and
inc
cmp
push
mov
push
cltd
fimull
jmp
lods
outsl
mov
xor
pop
inc
xchg
lret
jbe
insb
pop
ret
jge
test
jecxz
iret
jg
adc
sbb
pop
call
push
push
fidivl
fs
mov
pop
in
xlat
sbb
jb
push
dec
test
test
push
xchg
iret
adc
das
rcll
adc
imul
mov
fucomi
mov
out
jg
inc
xlat
pop
imul
movsb
cmp
or
dec
mov
push
mov
jb
lds
pop
or
inc
shlb
push
pop
inc
repz
aam
jl
cmp
decl
sbb
sti
mov
in
pusha
in
xchg
cltd
mov
jne
jno
adc
xor
imul
int
add
xchg
jl
rclb
dec
fstps
pop
mov
jmp
add
cmp
and
push
xorb
imul
fwait
adc
mov
fstps
push
lods
repz
jle
pop
imul
sub
mov
cwtl
pop
push
sbb
cmp
popf
clc
adc
insb
mov
mov
mov
and
dec
fwait
pop
and
mov
out
in
mov
sbb
fstl
xor
dec
leave
mov
jg
lret
cmp
arpl
adc
repz
out
jno
enter
adc
ljmp
mov
fdiv
lret
decl
int3
jae
sbb
jecxz
popf
scas
mov
rcr
xchg
mov
push
outsb
std
cmpsl
les
pushf
push
mov
inc
dec
into
pop
mov
xor
mov
add
lock
mov
sub
add
fisttpl
popl
mov
punpckhdq
jl
test
push
in
push
inc
push
lds
pusha
or
mov
cs
mov
lods
xor
and
daa
add
adc
inc
mov
daa
nop
sub
loopne
inc
movsl
je
mov
repz
out
cltd
or
hlt
mov
mov
sti
push
cmc
testl
mov
dec
idivw
movsb
add
lods
sbb
leave
arpl
dec
dec
fldcw
adcl
dec
or
pushf
fstpt
mov
sub
daa
inc
inc
in
stc
pushf
pop
sbb
mov
dec
sub
push
mov
sbb
and
faddp
in
sub
fsubrs
inc
inc
pop
pop
fwait
test
test
push
mov
mov
push
cmpsb
mov
daa
outsl
push
shr
fwait
repnz
push
in
ss
test
out
aam
ja
outsb
daa
xchg
and
mov
xchg
xchg
inc
rolb
pop
or
jp
or
rolb
xor
fxch
jmp
mov
scas
addb
mov
insl
sub
jmp
jecxz
popf
push
mov
out
data16
sti
outsl
rcrb
enter
cmp
push
jo
hlt
outsb
adc
hlt
in
scas
mov
jmp
fisubrl
idivl
ja
sbb
pusha
mov
push
push
jmp
sub
lock
adc
sub
and
and
loope
shl
daa
jno
test
loope
push
std
fisubl
pusha
xchg
mov
push
pop
jmp
rcrl
out
fisubrs
mov
mov
loopne
fimull
sbbl
mulb
iret
inc
inc
add
cmp
dec
insl
imul
mov
mov
in
and
pop
push
sub
dec
int
arpl
inc
pusha
idivb
into
loope
pushl
daa
xchg
aad
clc
mov
dec
mov
lcall
hlt
inc
cmp
mov
add
cltd
xchg
xor
mov
inc
outsb
lret
jl
sbb
pop
xlat
inc
xchg
or
in
scas
or
pop
lcall
cmc
adc
sbb
fnstcw
cmp
xchg
and
incl
popf
jae
dec
test
push
mov
lea
lret
in
inc
fucom
dec
jne
xchg
cmpsl
and
shll
cli
pop
jl
and
and
mov
mov
outsl
inc
cmp
repnz
cs
fcmovu
nop
rcll
xchg
pushf
jno
mov
lods
pushf
fldenv
push
mov
pop
push
repnz
cmp
mov
push
add
ds
arpl
fs
mov
scas
ret
pop
inc
or
inc
add
ret
xchg
mov
pop
xchg
mov
jp
inc
push
pop
cmc
es
adcl
sti
adc
fildl
roll
bound
pop
add
fildl
mov
outsl
push
inc
add
das
push
movb
mov
xlat
scas
cli
mov
out
adc
push
sub
jno
aam
push
mov
ret
hlt
loope
cld
adc
jg
mov
push
icebp
mov
jg
or
in
mov
mov
or
adc
rcll
mov
mov
push
loope
mov
into
rcrl
dec
or
pusha
leave
sbb
inc
cmpsl
mov
push
decl
pusha
push
in
inc
pusha
xor
nop
mov
sti
fildl
mov
popf
xor
push
test
cmpsb
sbb
mov
sahf
das
push
subb
mov
dec
adc
push
push
sub
lds
xorb
ja
rcll
fs
pop
daa
cld
cli
mov
push
test
cmpsl
add
out
mov
push
or
sub
or
aam
popf
enter
pop
xor
pop
mov
test
xchg
push
scas
out
jp
in
add
mov
pusha
shll
jl
dec
dec
inc
sub
in
fisttps
cmp
fildl
mov
iret
add
mull
cmp
imul
xchg
cltd
data16
mov
or
jle
sub
jl
repnz
xorl
mov
imul
push
mov
rorb
jmp
inc
xchg
iret
jns
icebp
cmp
push
pop
xchg
je
cmpsb
mov
mov
cmc
mov
lahf
xchg
dec
insb
inc
pop
cmp
adc
cmp
push
or
mov
dec
and
call
jno
mov
mov
dec
loopne
ljmp
cmpsl
out
jg
pusha
in
mov
enter
iret
push
push
fwait
push
mov
pop
adc
dec
inc
jo
test
mov
mov
jbe
jl
jne
sbb
or
fwait
dec
inc
inc
cmp
push
mov
mov
xor
cmc
adc
adcl
cmp
sub
push
icebp
jecxz
fstpl
inc
pop
dec
adc
les
cmp
push
mov
stos
push
sarb
jle
push
std
mov
mov
pop
lret
lahf
dec
mov
in
fcos
dec
cmp
movsl
adc
or
ret
mov
repnz
or
mov
pop
cmp
insl
jle
pop
das
mov
cmp
mov
cmpsb
push
stos
out
add
push
sbb
add
lahf
fidivrl
xchg
inc
aam
ficompl
pop
ja
in
jp
ss
loope
mov
lea
inc
sbb
call
xor
jmp
mulb
sti
cld
dec
push
mov
loope
in
push
cmp
das
popf
loop
cmp
rorl
shrb
mov
pop
add
rorb
out
cwtd
cs
push
jno
inc
mov
mov
repz
lret
pop
fs
mov
xor
inc
dec
jecxz
loope
pusha
mov
int
mov
les
testl
mov
fldl
mov
or
cmp
push
lret
push
test
mov
mov
push
repz
bound
ss
push
mov
nop
movsb
dec
sub
jg
mov
std
jle
insb
sti
dec
aad
pushl
mov
cmpb
sbb
sti
rcll
and
sub
mov
insl
pop
je
cli
adc
fildll
roll
int3
test
push
rorb
push
mov
mov
add
add
cld
rorl
sub
mov
test
test
push
popf
sub
dec
cmp
mov
clc
mov
jg
mov
or
out
sbb
movaps
mov
cmp
bound
test
sbb
lahf
rorl
add
or
sti
xchg
push
adc
out
mov
fidivl
pop
adc
stos
sbb
xor
xchg
and
pop
bound
cmp
add
cltd
ljmp
mov
fwait
push
shl
cmp
or
xchg
or
push
inc
cmp
mov
pop
iret
push
int3
mov
insl
fwait
mul
dec
cmp
mov
bound
dec
pop
ss
insb
sub
aam
aad
fistpl
outsl
cmp
repz
pusha
outsl
clc
xor
aaa
or
sub
xchg
xor
idivl
mov
xchg
pop
cmp
sub
leave
inc
out
jns
add
mov
lock
aad
cmp
dec
lahf
inc
jno
jmp
lds
es
jns
aaa
add
stos
fldcw
mov
and
movsl
and
add
pop
mov
or
add
sub
in
adc
test
cmp
push
dec
mov
les
int
sub
and
xor
adc
xor
add
cmovle
sbb
lcall
hlt
shrl
pop
adc
mov
in
dec
movsl
jge
lods
ret
mov
push
adc
repz
cwtl
inc
fs
in
enter
inc
xchg
out
jno
lcall
cli
sbb
push
ss
mov
push
insb
sub
lds
fwait
mov
fsts
mov
lret
ret
dec
stos
jno
jmp
mov
inc
mov
push
inc
cmp
xor
xor
add
aas
and
scas
or
xorb
cmp
mov
fsubs
mov
xor
jne
test
out
aad
icebp
mov
jle
out
pusha
in
jne
jl
sbb
imul
push
adc
mov
imul
ljmp
into
psubq
and
jb
xor
daa
xchg
pop
into
mov
dec
fs
insb
jns
pop
lds
xor
aas
sti
repz
jl
sti
sbb
dec
pop
iret
jne
mov
mov
je
mov
movsb
or
mov
xor
inc
pop
or
jmp
or
inc
out
or
or
cltd
movsb
push
mov
imul
clc
or
pop
in
sbb
lret
adc
cld
pop
inc
push
idivb
int
mov
mov
stos
pusha
push
loop
je
dec
and
jmp
xchg
mov
mov
negl
adc
aas
pop
int3
int3
fsubrl
data16
pop
mov
fldt
mov
cld
mov
rorl
pusha
sub
dec
stc
mov
jns
test
jno
add
mov
mov
nop
out
aad
stos
pop
and
addr16
imul
sub
mov
dec
dec
stos
pop
sub
cli
inc
imul
inc
dec
add
push
cs
call
repz
pop
dec
cmp
inc
mov
repnz
inc
movsb
mov
mov
sbb
mov
pop
mov
dec
sub
dec
pop
adc
dec
shl
lret
mov
into
inc
mov
in
aad
sub
push
daa
sbb
scas
test
xchg
push
lods
and
in
dec
pop
push
inc
jecxz
pop
sbb
insl
inc
repz
push
inc
insb
cld
das
mov
jge
pop
pop
jnp
mov
ja
popf
mov
sub
mov
pop
cli
jnp
ja
jle
xchg
test
or
mov
push
inc
test
and
or
xor
hlt
and
sti
fildl
mov
dec
xor
jg
mov
pop
xchg
testl
pop
js
sub
aad
push
sub
push
ljmp
cli
mov
inc
dec
fiadds
add
inc
push
dec
imulb
cmp
out
aas
add
jbe
mov
aad
cmp
addr16
addl
jno
push
cmp
jnp
sbb
subb
mov
jne
movsb
clc
pop
mov
add
scas
xchg
bound
inc
sub
xlat
popf
inc
es
fisttpll
in
mov
xorb
push
push
mov
xor
adc
frstor
lcall
repnz
xchg
test
lock
jns
xlat
mov
jo
inc
pusha
cmpsb
pushf
lds
aam
adcl
xchg
scas
add
pop
addr16
inc
test
adc
or
add
push
scas
mov
loop
lea
mull
sarl
imul
sbb
fs
lret
cmp
les
mov
jecxz
fidivs
jg
call
imul
dec
jle
out
clc
sub
cmp
mov
sub
adc
sti
imulb
jne
iret
stc
push
inc
inc
sbb
adc
mov
ret
mov
inc
or
psadbw
jo
or
push
cld
lods
cmpsl
sarl
fimuls
divl
add
xchg
out
push
out
mov
movl
sub
jne
push
sbb
mov
push
mov
test
lcall
les
into
js
sub
mov
add
pop
int3
dec
mov
push
mov
xchg
adc
pop
xchg
xor
insb
push
mov
popf
imul
std
xor
pop
lret
sbb
pushf
test
mov
loope
fcomps
lods
or
push
mov
push
out
iret
dec
inc
test
sub
dec
add
stc
jns
fsubrs
rcl
cltd
xor
icebp
mov
cmovae
lret
sub
shl
jo
mov
repz
cmp
dec
movl
xor
out
or
fs
mov
jmp
imul
cmp
dec
jmp
mov
add
imul
inc
pop
lret
fiaddl
cmp
stos
cmp
sub
dec
loopne
outsl
repnz
adc
int3
jns
pusha
iret
dec
xchg
stc
jl
es
je
in
xor
outsl
push
jp
sbb
pop
adc
roll
pop
dec
das
iret
pop
mov
xlat
mov
sbb
jb
movsb
xchg
add
cmpb
sub
fisttps
inc
pusha
inc
jo
notl
inc
popf
mov
and
jg
lds
adc
in
inc
or
cmp
push
stos
out
dec
in
jmp
jp
daa
push
hlt
pusha
xchg
push
inc
inc
arpl
out
and
mov
jmp
adc
sbb
and
mov
out
push
jecxz
cmp
jg
or
push
jno
mov
inc
add
insb
jmp
gs
pusha
dec
push
push
pop
fistps
dec
pop
xchg
pusha
mov
xor
pop
xor
movb
dec
dec
in
cs
pop
jmp
imul
xor
pop
push
orl
pop
insl
xchg
mov
inc
fs
jecxz
pop
mov
out
adc
jb
sbb
or
mov
movsb
insl
ret
popa
push
dec
test
popf
stc
fwait
decl
sarl
xchg
cs
iret
fdivrs
lret
xchg
sub
dec
sbb
dec
lret
ja
mov
sub
mov
add
lahf
jmp
cmp
iret
das
out
inc
mov
mov
jle
popa
inc
dec
repnz
mov
stos
lods
cltd
fcoms
data16
pop
mov
sub
insb
jns
aam
sub
fcmovnu
push
inc
es
scas
mov
fisttps
addr16
movsl
inc
call
je
push
pusha
cld
aam
fisttps
push
mov
addb
pop
mov
or
xor
push
xchg
sbb
stc
sub
dec
shrl
dec
icebp
inc
adc
mov
test
sub
sub
aam
out
aaa
ret
ja
mov
arpl
outsb
jae
sbb
dec
out
insl
mov
leave
arpl
fxch
ds
inc
dec
sbb
rorl
ss
pop
mov
outsl
mov
out
sub
jmp
xchg
push
lret
jecxz
and
add
or
out
jmp
rcrb
test
dec
enter
fcmovnu
sbb
sbb
addl
imul
outsb
sub
cwtl
loopne
add
or
popf
cltd
pop
push
or
cmp
jns
add
stc
push
inc
or
sbb
out
gs
cmpsb
mov
mov
xor
jmp
sbb
imul
pop
mov
out
push
mov
inc
sti
cmpsb
xchg
jmp
jecxz
mov
push
mov
fwait
pop
cmp
mov
mov
adc
xor
bound
xor
out
jb
fcmovnu
and
test
jno
jo
imul
and
and
jmp
cmp
iret
mov
insb
push
add
adc
lcall
adc
inc
or
pop
jg
sub
mov
dec
pop
cs
push
fs
jae
sbb
lods
sub
pop
pop
inc
insb
mov
add
icebp
inc
cld
xor
pop
xlat
mov
push
jg
aaa
cmp
jno
clc
rclb
sub
stc
sbb
mov
mov
lea
xchg
adcl
nop
adc
add
mov
cmp
inc
sar
mov
mov
jno
or
add
inc
pop
addr16
sbb
mov
mov
out
fcoms
mov
mov
mov
loope
pushf
mov
sahf
add
scas
cmp
jne
ja
cmp
mov
pop
and
es
mov
div
mov
jbe
cmp
iret
mov
ja
decb
cmp
iret
inc
cmpsb
test
jae
sub
aaa
mov
out
mov
sahf
push
and
adc
mov
add
fcmovnbe
inc
ret
cmc
push
fsub
aaa
mov
sub
cmpb
daa
les
pop
push
cmpsb
pushf
mov
xchg
sbb
cmp
jl
in
jnp
mov
sub
cmp
adc
dec
repz
lods
sub
push
sub
shrl
hlt
mov
movsb
add
fildll
push
popf
cmc
mov
out
aas
cmp
test
push
adc
pop
mov
cltd
sti
int3
repz
shr
adc
jl
out
aam
jo
sbb
adc
pop
mov
jne
xchg
mov
ja
push
dec
mov
jl
imul
pop
push
jnp
push
xchg
push
shll
adc
mov
jg
pop
sahf
inc
jo
faddl
cmp
xchg
dec
dec
mov
xor
cltd
imul
std
pop
scas
add
mov
mov
jle
push
or
fisubrl
mov
scas
dec
daa
ret
sbb
and
mov
cmpsl
jmp
lahf
xchg
mov
jecxz
xor
ret
add
xorb
jne
mov
mov
pushf
leave
jb
repz
cmpb
rcrl
ret
icebp
icebp
add
add
inc
mov
xchg
cmp
mov
in
roll
push
lea
negb
iret
stc
sub
inc
jno
sti
shlb
iret
outsl
je
pop
movsl
testb
lods
fstps
mov
dec
mov
lcall
cmpsl
mov
mov
jmp
jg
out
jo
push
mulb
mov
cli
fwait
imulb
jmp
je
mov
stc
pop
pop
jl
dec
mov
mov
add
inc
iret
int3
mov
mov
sub
repz
add
stc
pop
mov
sbb
xchg
movsl
fcomps
add
sub
aad
push
mov
jmp
or
mov
push
shl
jb
adc
mov
cli
rcrl
dec
in
adc
dec
call
sub
pushf
xor
pop
mov
or
dec
out
fwait
out
jle
mov
test
imul
inc
out
mov
pop
cmpsl
xchg
lahf
in
daa
push
movsl
mov
fs
jbe
scas
ljmp
imul
fs
out
pop
mov
lea
mov
jnp
test
popf
scas
fstpt
xchg
rcll
sbb
jl
test
push
lods
icebp
shll
or
or
push
jmp
outsb
ret
jg
push
mov
pop
repnz
pop
mov
sbb
inc
stos
adc
ret
pop
test
roll
testl
repz
inc
les
imul
inc
cmp
fildl
cmpsl
test
ficoms
adc
sbb
call
or
or
sub
lcall
dec
cmpsb
inc
or
jg
int
movsb
dec
icebp
xor
mov
test
test
mov
dec
lock
lret
popfw
shll
push
stos
scas
fistps
mov
inc
mov
test
xor
je
sub
outsl
push
mov
pop
cmpsl
mov
adc
add
fildl
mov
add
xchg
loope
es
pop
rcl
aam
jl
mov
and
mov
sbb
outsl
pop
scas
stos
mov
sub
mov
mov
mov
daa
push
mov
pop
xchg
mov
or
ljmp
gs
jbe
fisttps
or
inc
ficompl
sub
jecxz
enter
cmpsb
inc
cmp
adc
dec
and
push
mov
and
stos
rcll
add
push
pushf
aam
cmc
mov
test
fstps
dec
mov
sti
out
add
jge
jae
mov
lret
mov
aam
pop
cmc
cmp
push
or
int
mov
jnp
shl
cmp
sub
loope
push
xchg
pop
and
push
cmp
push
sbb
adc
sub
test
jl
inc
adc
cmpsl
sahf
and
inc
sbb
rorl
loope
jnp
add
inc
out
mov
aaa
stos
aam
imul
jmp
repz
adc
pop
lea
stos
test
or
sub
add
ret
add
loopne
punpckhdq
je
push
xbegin
sub
lret
fstps
xchg
jge
sbb
int3
dec
fs
sbb
and
push
stos
inc
fildll
xchg
sti
scas
jl
jae
mov
xchg
xor
mov
fnsave
stc
xchg
adc
orl
cltd
adc
cld
lcall
jl
or
or
leave
in
sbb
xchg
mov
out
les
xchg
cmpsl
imul
mov
dec
sbb
loop
clc
push
mov
loope
or
inc
andl
insb
in
notl
js
cli
mov
ja
addb
mov
mov
movsl
mov
in
pop
jb
adc
popf
jle
cmc
add
ljmp
ret
ret
cmc
rorl
push
pusha
mov
call
fisttpl
push
dec
jmp
jns
sub
and
sbb
movl
add
mov
mov
mov
pop
lahf
movb
sti
lds
aam
or
xchg
ds
fwait
pop
mov
mov
enclu
sub
movsl
rsm
outsl
and
push
xchg
cld
bound
in
imul
cwtl
mov
pop
mov
mov
test
test
mov
jg
rclb
xor
and
cld
pmaddwd
stc
adc
shlb
imul
scas
or
mov
pop
and
inc
repz
mov
inc
xchg
mov
fistpll
adc
xor
jae
test
mov
mov
cli
sbb
dec
shlb
jbe
pop
adc
fildl
adc
push
into
cmp
lret
scas
jge
imul
mov
dec
mov
pop
dec
jns
adc
jbe
subl
scas
push
cmpsb
int
std
push
popa
mov
jno
lds
jmp
mov
cld
insb
push
xor
mov
add
orb
popf
sub
fidivrl
xor
sti
mov
sub
dec
pop
dec
lcall
or
cltd
pop
xchg
xchg
cmpsl
aam
clc
outsb
into
or
add
js
ret
aas
mov
dec
push
xchg
mov
sahf
xor
add
daa
add
mov
clc
cwtl
pusha
outsl
jp
out
sti
mov
rorb
fisttps
hlt
xchg
pop
dec
stc
pusha
cli
scas
test
mov
xor
cmc
sbb
movsb
idiv
dec
and
jne
mov
mov
adc
ja
sbb
shll
adc
push
sbb
sub
mov
dec
pop
int
dec
pop
mov
jae
or
lcall
dec
mov
push
push
repz
lcall
out
pop
dec
mov
inc
pop
sbb
lret
mov
scas
dec
mov
lret
or
xchg
push
mov
leave
test
outsb
aaa
fisttpll
dec
shll
lret
jg
jns
pop
push
mov
jecxz
pusha
test
repz
and
xor
pop
mov
out
sbb
jecxz
fisttpll
or
daa
cmpsb
jmp
fidivrl
imul
test
ss
dec
xchg
push
dec
push
movsb
mov
jmp
lcall
and
rcr
dec
dec
sbb
mov
stos
cmp
leave
fildl
bound
cmpsl
add
clc
xor
subb
inc
mov
in
repnz
and
andb
imul
push
int
cltd
jnp
icebp
frstor
int3
jmp
push
mov
test
arpl
sarl
mov
cs
in
movsb
fists
and
jns
jmp
inc
push
jl
lea
lods
push
ljmp
test
cmpsb
out
icebp
rcrl
pop
in
ret
push
ljmp
sti
mov
js
cwtl
cli
dec
lcall
pop
pop
jae
push
movsl
jge
sarl
inc
sar
loopne
sti
cltd
shrl
shl
or
popa
ljmp
pop
add
mov
insb
pop
mov
jecxz
push
jmp
dec
pop
xchg
inc
xchg
mov
lock
sbb
rcll
insl
or
cmp
pusha
mov
jo
xor
mov
repnz
sbb
jns
fdivl
dec
out
jno
jno
ss
div
orl
out
in
and
xchg
xor
mov
push
sub
push
sub
xchg
jmp
cmp
mov
mov
int
inc
cmp
rorl
mov
lods
fimull
sti
mov
add
cmpsl
icebp
dec
arpl
cmpsb
push
frstor
fcoms
std
dec
stos
fs
sbb
in
inc
xchg
sub
sub
push
ret
cwtl
sbb
sbb
loope
repz
pop
stos
js
sbb
or
sbb
push
lcall
dec
mov
out
aam
cmp
out
fistps
movl
and
test
in
fucomi
xlat
rcr
xchg
sbb
sub
jns
pop
jae
cmp
push
jns
mov
out
pop
push
fwait
je
cwtl
xchg
mov
fistpll
cli
pop
dec
ljmp
cwtl
push
out
or
xchg
cmp
lret
test
lock
jmp
push
pop
fstpt
flds
ret
repz
imul
inc
inc
dec
cwtl
outsl
inc
dec
jmp
mov
pop
dec
mov
addr16
std
arpl
jmp
out
mov
fcmovnu
mov
subl
inc
loope
mov
fwait
test
fbld
mov
cmp
jne
ss
out
add
rol
enter
mov
and
cmp
mov
jnp
lret
fistl
mov
mov
lret
push
sub
xor
imul
xchg
mov
ficomps
out
mov
dec
pop
jno
mov
pop
aad
pop
mov
idivb
or
inc
mov
aaa
in
mov
sbb
fimull
push
xchg
xchg
add
aam
xchg
arpl
stc
fs
push
mov
sbb
out
xor
rcrl
aam
loopne
push
mov
push
fidivrl
leave
and
test
cmp
mov
jecxz
push
adc
mov
adc
pusha
sub
iret
in
sbb
dec
aaa
ja
inc
js
adc
mov
dec
jnp
add
cmpsb
out
lcall
jp
adc
ss
ret
std
iret
jo
cli
sti
lret
fldcw
or
mov
call
dec
ljmp
rclb
js
inc
or
or
pop
loopne
das
mov
in
push
fs
pop
adc
imul
push
mov
cmp
incl
mov
mov
cmpsb
dec
and
jb
pop
aam
sahf
pop
cmp
sub
lods
inc
or
stc
dec
cmp
pusha
les
sbb
sbb
sahf
jbe
push
add
adc
das
enter
fidivrl
fcmove
push
call
add
sub
push
pop
push
mov
pop
movsb
push
inc
jmp
jnp
fwait
repz
ja
inc
sbbb
dec
rorl
xor
mov
test
xchg
dec
and
push
sbb
jg
and
mov
adc
lds
and
shlb
gs
cltd
push
daa
inc
int
and
aas
popa
imul
xor
mov
cmp
push
dec
jbe
cmp
add
cmpsb
adc
dec
xor
clc
dec
mov
fimuls
incb
pusha
lret
mov
lret
cmc
xor
inc
sub
sbb
pusha
mov
xchg
and
imul
fmuls
lods
fwait
push
imul
mov
div
ds
mov
lcall
mov
add
push
insl
clc
pop
xchg
xchg
jge
shrb
fcmovbe
xchg
mov
cmp
js
rorl
inc
push
in
cmovle
stos
sbb
sbb
gs
scas
lods
pop
dec
mov
popa
lods
out
sti
mov
iret
dec
adc
dec
jbe
sub
in
test
lret
push
push
mov
sub
insl
nop
aam
mov
jno
or
lock
cmc
mov
js
push
and
mov
mov
dec
sbb
cmp
ja
mov
or
dec
repz
adc
and
dec
loope
jp
bound
lret
jne
rcr
dec
ljmp
dec
mov
sub
mov
push
cmp
mov
jg
adc
das
dec
mov
inc
pop
sbb
popa
mov
nop
inc
jne
sbb
aad
push
mov
ljmp
shl
rcrl
into
pop
or
fildl
dec
mov
mov
orl
insl
jae
add
aas
cmc
mov
sbb
in
lds
ja
cmpxchg
pusha
pop
rclb
call
jecxz
cld
or
out
xchg
mov
push
nop
lahf
addl
scas
pushf
mov
pop
imul
es
xchg
lcall
mov
push
inc
sub
push
aas
jge
xchg
fs
into
xchg
xor
mov
arpl
inc
ret
cld
adc
roll
push
xor
jl
daa
loope
fwait
sub
sbb
mov
sbb
jmp
push
sub
xlat
jns
mov
push
sti
and
adc
icebp
cmp
sbb
mov
in
dec
ja
add
ficoml
ljmp
daa
inc
pop
fwait
icebp
mov
cmp
into
mov
je
or
stc
add
mov
insb
or
pushf
rolb
stos
icebp
dec
in
dec
cltd
cmc
enter
jnp
push
jnp
pop
cltd
leave
pop
mov
pushf
add
pop
pop
sub
dec
pop
pop
and
test
repz
fabs
aam
cld
jno
jae
fsubrl
data16
filds
sub
mov
mov
inc
call
outsl
xor
or
cmp
ja
int
movsb
scas
fadd
jmp
mov
jl
leave
push
sub
jmp
das
xchg
call
pop
sbb
and
mov
jle
jl
aam
mov
xor
push
and
push
imul
ljmp
out
xor
repz
hlt
xchg
add
sub
cld
mov
cmp
in
cmp
test
mov
andl
jb
push
enter
lret
mov
cmp
pop
sub
inc
fsubr
push
cwtl
ret
dec
push
inc
fidivs
mov
mov
xor
or
adc
and
mov
lods
imulb
pop
icebp
inc
pop
jmp
movsl
push
sbb
pushf
xchg
jmp
lds
repz
imul
dec
fisttpll
mov
shll
mov
sbb
jno
jbe
mov
lods
cmp
fbld
lds
lret
mov
imulb
xor
dec
mov
dec
mov
fildl
dec
dec
jnp
push
xor
scas
pop
fisubl
xor
leave
xor
inc
jg
mov
adc
cmc
mov
or
push
sub
jno
dec
add
cmp
roll
cwtl
dec
addb
mov
jecxz
js
dec
mov
mov
cmp
out
mov
ja
inc
bound
rcrb
loop
test
jmp
dec
push
out
sti
cmc
xchg
sub
mov
adc
push
push
es
mov
lea
sub
lret
jnp
fcompl
outsb
mov
jl
xchg
lods
in
sub
sbb
and
stc
hlt
mov
fwait
dec
xlat
je
loopne
or
imul
dec
xchg
sub
sarb
cmp
decb
cmp
add
cmp
fidivs
subl
arpl
push
mov
mov
xchg
xlat
test
dec
jg
dec
xorb
ja
clc
je
decl
pop
outsb
lret
or
mov
fcomps
pop
jno
and
inc
sbb
icebp
repnz
dec
adc
pop
mov
cli
push
cmp
popa
dec
xchg
pop
scas
daa
pusha
jp
push
cmc
bound
mov
pop
enter
call
adc
push
sbb
out
fwait
jae
xchg
push
and
sbb
xor
adc
insb
mov
jg
pop
dec
ss
mov
push
and
dec
movsb
out
imul
rorb
outsb
js
pop
movsl
ljmp
cmp
aas
xchg
xchg
mov
sbb
cmpb
sub
xchg
jnp
dec
out
jbe
adc
add
lods
lods
or
adc
rol
sbb
repz
inc
adc
push
lret
jns
stos
dec
movsb
inc
jb
jbe
xchg
sub
aad
das
push
inc
addb
jae
mov
cli
mov
pop
wrmsr
xor
cmp
sahf
das
mov
jae
or
mov
mov
call
daa
fstpt
mov
push
pop
sti
stc
cmp
call
xlat
inc
fcmovne
or
es
dec
aam
repnz
andl
ficoml
mov
shrb
push
stc
outsl
movsb
cli
inc
jnp
xor
sbb
xor
dec
scas
in
sahf
or
iret
scas
cld
repnz
pop
pop
testl
ljmp
std
fistpl
mov
xchg
dec
push
cwtl
in
loope
and
addb
lock
pop
ret
shlb
call
xchg
and
lea
mov
jl
loope
dec
cmp
orl
push
and
mov
rcrl
cmp
sti
xchg
sub
jmp
js
mov
mov
adc
dec
icebp
lock
pop
lea
sarl
pop
inc
jp
idivl
leave
pusha
push
shl
or
mov
dec
movsb
jecxz
push
push
pop
xorl
movlps
rorb
lret
mull
fsubrs
imul
aad
cmc
orb
mov
dec
inc
mov
inc
cmc
imul
scas
jg
hlt
dec
fildl
mov
enter
xor
or
mov
jmp
mov
add
push
sahf
scas
inc
adc
insb
pop
mov
cmp
int
push
dec
mov
xlat
test
add
xor
inc
lret
fistpl
xchg
adc
out
push
les
iret
jae
ficompl
mov
repz
fld
mov
insb
aad
scas
fstpt
or
adc
mov
push
adc
or
gs
mov
add
js
jl
push
into
pop
mov
cld
pop
inc
xor
push
jp
xchg
or
dec
mov
repnz
mov
aaa
lods
daa
lods
pop
pushf
fs
xor
jb
iret
je
arpl
sbb
in
sub
inc
pusha
mov
mov
vpunpckhdq
cmc
sti
inc
loope
mov
xchg
push
jmp
imull
mov
pusha
fbstp
mov
iret
sub
cmp
fisubl
xchg
rcll
add
or
popf
jne
fcompl
dec
push
jo
inc
pop
push
pop
add
cltd
mov
xor
das
add
gs
xor
clc
sbbb
jl
pop
adc
push
sub
inc
jae
cmp
outsb
bnd
loopne
je
rolb
fcompl
push
xchg
in
lret
ficoml
outsb
mov
push
cwtl
pop
mov
in
into
shlb
jb
or
inc
not
pop
adc
jb
cs
push
shlb
push
mov
mov
cmp
push
mov
data16
xor
or
dec
enter
xchg
fsubrl
nop
es
popf
push
cmp
lea
gs
push
pop
mov
jbe
add
insl
add
push
mov
imul
es
daa
mov
fwait
repz
jl
add
push
out
test
pmaddwd
and
push
mov
sub
sti
push
push
pop
mov
push
lahf
int
inc
inc
dec
jle
or
hlt
push
aad
add
jl
arpl
pop
sub
jmp
in
pop
ja
lods
addb
fwait
outsl
data16
jecxz
sub
sub
mov
rclb
mov
mov
mov
mov
ja
adc
scas
daa
nop
mov
and
fwait
ret
mov
adc
cmp
scas
dec
cld
and
in
rcll
scas
mov
dec
es
cwtl
jg
lods
sarl
mov
insl
pop
cmp
popf
sbb
mov
ss
orl
aaa
sub
xor
jae
jnp
in
out
stos
icebp
pushw
pop
movsl
cmp
dec
xor
jmp
push
sub
inc
iret
aam
outsl
pushf
mov
lret
push
popa
inc
or
call
repnz
fstpl
in
push
mov
mov
std
repz
out
lea
movaps
dec
in
cmc
dec
push
fs
enter
pop
push
mov
jmp
push
loopne
push
fs
fldt
iret
fisubs
cltd
dec
mov
lods
imulb
stos
cmp
cmp
scas
sbb
mov
mov
es
lret
bound
and
mov
inc
les
mov
shr
insb
sbb
xchg
lahf
ds
jnp
pop
mov
xor
cmp
push
ret
fwait
and
fistl
mov
lret
add
pop
sub
pop
sti
xor
dec
sub
jae
call
cmp
pop
fdivrp
stc
rcrb
sbb
or
fiadds
push
sti
mov
lret
cltd
adc
movsl
sahf
mov
iret
mov
out
pop
and
mov
dec
or
call
fildl
dec
pop
ficoml
aad
lahf
int
dec
mov
jnp
ret
xchg
jnp
insb
jmp
sub
dec
xchg
adc
push
cmp
jae
fnstenv
push
sub
jno
push
insl
movsb
jl
mov
mov
mov
fimuls
mov
xchg
add
dec
lods
cmp
fiaddl
and
push
les
addb
aam
lahf
mov
popa
fwait
scas
imulb
xchg
ficoms
pop
pop
sarl
push
dec
jg
fisubrl
lods
inc
pop
sti
mov
adc
arpl
cmpsb
xchg
subl
mov
add
dec
push
or
adc
cmp
fidivrs
and
fldl
push
pop
pop
jp
xlat
mov
fstps
jmp
push
push
lods
cwtl
and
inc
add
xchg
shlb
inc
stc
xchg
mov
in
push
insl
mov
rcl
push
mov
mov
xchg
cmc
dec
mov
stos
scas
testl
inc
loopne,pt
dec
das
dec
cmp
lods
outsb
and
cmc
leave
movsl
inc
cltd
sbb
push
pop
dec
loopne
xor
test
pop
in
xchg
push
pand
xor
out
ret
sub
dec
cmp
mov
mov
and
dec
mov
jne
dec
mov
icebp
jo
fisttpll
call
scas
mov
or
stos
xchg
and
lahf
stos
xor
xchg
and
test
cmp
and
icebp
roll
jns
push
lcall
insb
repz
mov
push
imul
mov
daa
mov
xor
pop
mov
push
push
lea
cmpsl
call
mov
jne
cmp
inc
sti
jp
pushf
test
cmp
ficompl
js
push
das
sub
mov
insb
jmp
add
dec
cmp
and
add
mov
inc
mov
cld
mov
jl
ljmp
and
call
inc
dec
push
cmpsl
lret
adc
sbbb
lods
adcb
push
jbe
stc
dec
add
cli
mov
xor
js
push
cmpsl
je
ret
roll
cmp
inc
dec
add
dec
imul
push
fsubr
fs
inc
jnp
out
aad
hlt
test
call
fiadds
xor
sti
xor
rcl
jb
aaa
cmp
push
inc
add
sub
jb
into
add
clc
xor
aam
fadd
pop
mov
mov
fidivl
push
mov
mov
jg
ljmp
test
xchg
jg
imul
mov
pusha
sbb
add
cli
scas
cmpsb
js
pop
inc
cmp
xchg
xor
test
into
ss
sub
mov
test
orb
push
adc
jl
inc
sbb
cmc
pop
andb
inc
cmp
dec
xchg
push
inc
xor
shlb
into
push
cmc
push
nop
dec
cmp
pop
out
inc
pusha
dec
fadd
xor
or
scas
jnp
xchg
in
in
sub
mov
in
xlat
push
and
insl
mov
cmpsl
insb
fwait
pcmpgtb
cmc
add
mov
pusha
or
mov
adc
out
jbe
inc
xchg
pop
push
imul
pop
mov
pop
cmpsl
jg
int3
cmp
lret
inc
sbb
jbe
imul
cltd
adc
pop
xor
loopne
mov
pop
hlt
lcall
in
ret
ret
setp
sbb
push
sub
fcoml
jno
fisubrl
sti
xlat
gs
sub
jae
xor
jno
out
push
dec
mov
inc
add
loopne
rcrb
mov
inc
dec
aam
xchg
sub
xor
ret
jg
mov
in
sti
dec
dec
mov
xor
scas
add
shrb
in
aas
dec
lret
sub
cltd
jmp
jns
jne
icebp
dec
clc
add
adc
push
mov
movsl
cmp
push
or
call
push
dec
arpl
dec
sbb
push
and
scas
lret
outsb
jmp
fisubrl
jo
andb
push
fisttpll
cmp
fcomip
ja
scas
xorb
cmpsb
xchg
sbb
dec
mov
es
cltd
std
or
push
mov
ret
pop
cs
fcomps
inc
lods
icebp
mov
push
pop
mov
jl
mov
jo
jnp
add
hlt
cmp
in
sub
jecxz
iret
push
lret
fs
push
xor
sets
mov
lock
int
add
xchg
icebp
xchg
inc
in
rorb
add
repnz
outsb
sbbb
popa
jmp
adc
or
dec
ja
inc
aas
or
cltd
mov
pusha
add
xchg
and
pusha
dec
scas
movsl
pop
roll
ljmp
and
mov
shrl
test
outsl
or
fiadds
mov
inc
enter
lea
pushf
lret
inc
fcomp
mov
daa
push
dec
mov
outsb
and
shl
add
pop
loope
outsb
and
mov
roll
rcrl
aam
mov
addb
adc
movsl
mov
mov
jg
push
xor
xchg
pop
adc
sub
sbb
jne
imull
rcr
xchg
outsb
in
iret
cmpsb
bound
sahf
and
dec
or
lret
outsb
mov
jbe
sub
clc
jl
repnz
sub
in
mov
sub
neg
push
fwait
aas
inc
in
jmp
jl
push
out
mov
add
mov
mov
sbbl
aas
push
addl
add
out
mov
lods
adc
dec
lret
mov
mov
loop
aad
test
ror
mov
mov
inc
push
cmc
std
das
inc
mov
mov
bound
xor
sbb
iret
adc
cmc
or
outsb
ja
loope
mov
push
iret
lcall
std
ja
fldcw
mov
and
daa
inc
mov
pop
std
add
aaa
sub
inc
fwait
jae
dec
pop
dec
mov
xchg
jmp
sahf
cmp
outsl
and
jmp
inc
and
sbb
js
dec
sbb
adc
out
jge
pop
adc
loope
cmpb
rcll
out
cmpb
mov
insb
adc
push
ficomps
xor
lret
dec
pusha
pop
pop
add
pop
mov
mov
test
stos
mov
mov
cld
push
popf
rcll
aas
enter
cmp
mov
mov
pop
xor
cli
aam
mov
lret
std
fcmovb
repz
mov
mov
push
js
lahf
ja
fildl
xchg
or
fstpt
adc
jne
rorl
fdivrl
pop
inc
and
fstl
mov
pop
lods
xor
mov
enter
and
or
dec
clc
jns
push
hlt
pop
mov
stc
lds
sbb
push
sbb
fisttpl
and
rorb
adc
scas
sahf
xchg
stc
add
dec
mov
mov
stc
pop
and
mov
sub
cs
sbb
sub
int
shlb
xlat
xor
popa
sbb
scas
add
jmp
shl
cltd
cmpsb
rcll
mov
test
fs
xchg
adcb
mov
daa
cmovle
jge
je
mov
ds
inc
cmp
cmpl
movaps
or
inc
adc
out
cmc
enter
sbb
pop
mov
mov
inc
aad
es
negb
scas
inc
dec
sbb
mov
dec
or
sbb
pop
iret
pop
fiaddl
pop
fisttps
gs
fmull
std
stc
push
add
frstor
popf
or
sub
adc
cmp
dec
add
rol
pop
out
push
dec
inc
mov
call
jne
mov
mov
mov
sahf
add
iret
mov
sub
jmp
cltd
mov
xchg
cltd
clc
push
cmp
inc
iret
mov
mov
push
push
mov
iret
or
sbb
dec
fldl
mov
xchg
pushl
cmpsl
dec
push
ficompl
mov
sub
add
fs
jmp
in
je
jmp
fcmovnb
fwait
push
jae
push
push
in
in
lret
lret
lods
xchg
sub
add
sbb
or
outsl
lahf
xlat
rolb
pushf
or
in
out
sub
jg
rcrl
sub
xchg
lret
xor
fwait
dec
mov
jns
mov
lret
shlb
mov
pop
xchg
sub
imul
jnp
movl
mov
inc
dec
shr
out
imul
mov
pushf
xor
push
add
cmc
xlat
rolb
xor
inc
mov
stc
cmp
cwtl
sbb
cld
test
aas
push
in
mov
sbb
push
in
clc
das
mov
aaa
mov
int3
into
sub
xorb
fiadds
insb
mov
inc
sub
pop
mov
adc
fwait
aad
xor
inc
push
pop
fstpl
adc
push
stc
mov
jg
inc
daa
mov
adcl
rcll
push
andl
dec
jl
arpl
data16
mov
and
pop
fiadds
and
xchg
dec
lods
fisubs
sub
fwait
inc
mov
adc
pop
mov
outsb
push
in
mov
sbb
mov
adc
out
jl
inc
mov
xor
das
xor
movsl
ds
jbe
jg
mov
sub
movsl
push
xchg
sbb
in
int3
aas
push
outsb
jns
cltd
ret
fisttps
je
cmpsb
cmp
dec
fldt
cmpsb
jl
xchg
icebp
test
add
fldt
jns
lret
test
xor
hlt
mov
shl
mov
push
adcb
cli
cltd
mov
fists
push
pop
push
xor
movsl
xor
jg
jns
outsl
push
sbb
inc
dec
mov
pop
cmp
jae
cmp
mov
daa
mov
jg
push
and
out
pop
pop
sub
loopne
stc
push
cmpsb
scas
or
cs
jne
ret
push
fs
divl
xlat
ja
icebp
mov
inc
into
cmp
shr
mov
lahf
sbb
xor
clc
push
imul
mov
sti
add
imul
or
cwtl
xchg
lods
jno
sti
cwtl
test
test
mov
enter
xchg
bound
es
xchg
jle
pop
dec
mov
inc
push
in
nop
mov
aas
fwait
lds
enter
lahf
in
mov
xchg
fwait
jbe
push
jl
mov
int3
scas
call
aas
sbb
push
mov
xor
mov
ret
jle
jbe
and
aad
jp
js
out
sbb
arpl
insb
lahf
out
repz
add
adc
and
sbb
jns
rcrb
cmp
dec
scas
xor
pushf
negl
sti
test
dec
jg
sbb
ja
jnp
in
pop
jp
mov
mov
pop
ret
dec
cli
dec
rclb
test
test
ds
push
aas
popf
pop
jle
push
jo
dec
pop
call
mov
mov
push
pop
and
push
shlb
out
imul
stos
rol
mov
pop
ficomps
sub
movsb
xlat
lahf
pop
dec
sub
mov
ret
dec
iret
mov
sbb
mov
das
mov
lea
add
movsb
xor
filds
mov
pop
cmp
and
daa
ja
sbb
mulb
push
and
mov
mov
ja
xchg
inc
xorb
or
out
pop
inc
cs
mov
cmp
pop
jecxz
pop
imul
je
imul
add
call
into
pop
mov
mov
adc
clc
jae
push
neg
repz
dec
or
jmp
push
out
pop
push
test
scas
and
dec
dec
test
addr16
add
sbb
das
adc
out
fisttps
out
add
jno
push
imul
sbb
stc
jbe
jno
loop
pop
add
adc
mov
cmpsl
xchg
jbe
and
fmul
mov
sub
xchg
dec
pop
cmp
mov
data16
test
mov
add
and
std
dec
or
pop
jmp
fcmovb
add
xchg
lcall
loop
scas
mov
loope
cs
ljmp
mov
fildll
push
pop
movsl
incb
fisubrl
mov
mov
and
push
or
jp
fsubp
insb
mov
jo
fistl
xchg
jno
aas
cltd
std
jmp
testb
pushf
push
jnp
fwait
cmc
es
sbb
lea
push
dec
mov
dec
xchg
mov
jnp
adcb
rorl
or
scas
xchg
mov
jmp
mov
fsts
popf
sub
add
jns
loopne
cmpsl
scas
dec
push
addl
or
ret
scas
or
mov
cmp
mov
mov
dec
jl
and
test
sbb
test
sbb
pusha
and
fwait
stc
sub
jg,pn
mov
cmp
fwait
loop
mov
jno
xor
cmpsl
lcall
jae
mov
inc
lods
cmp
cmpb
mov
dec
jg
lods
dec
pop
mov
call
cmpsb
xchg
jmp
fisubrs
fwait
je
jne
rcrb
mov
lahf
mov
insb
mov
sbb
lea
jmp
cld
imull
ds
jle
jp
mov
or
test
ret
jnp
imul
dec
mov
sub
adc
push
shl
and
push
pop
aam
jae
sub
push
sti
cwtl
inc
ret
sbb
mov
dec
and
inc
inc
add
inc
aam
xor
xchg
sbb
lcall
out
cmpsb
mov
jno
lock
mov
loopne
mov
sub
cli
mov
movsb
aam
daa
cmp
out
lds
jb
xchg
cmp
dec
push
lcall
loope
imul
ficoms
mov
jl
jg
lret
sbb
mov
sbb
mov
pop
pop
out
xor
pop
aad
pusha
adc
int3
jecxz
fidivl
ljmp
sub
gs
pusha
adc
fwait
inc
repz
lcall
arpl
scas
pushf
mov
cmp
js
sbb
ss
loopne
in
sbb
pop
push
dec
sti
dec
arpl
fimull
inc
icebp
cwtl
and
aaa
mov
fiaddl
popa
pop
mov
ljmp
jns
cs
xchg
jnp
jbe
movsl
push
sahf
mov
push
dec
pop
jle
ror
shll
cs
scas
std
pop
movsb
imul
jnp
fwait
data16
stc
outsl
jl
popf
sbb
push
aad
or
nop
inc
mov
pop
sub
cmpsl
dec
push
loopne
or
add
shrb
stos
out
in
fidivrl
es
sub
andb
push
xchg
mov
jp
daa
pop
out
enter
stos
sahf
jno
inc
dec
sbb
iret
not
lds
jno
xor
imul
dec
ret
sbb
mov
sub
dec
lret
mov
shr
sub
insl
dec
mov
jg
dec
mov
loope
fcompl
xor
loopne
mov
rcll
mov
mov
int
fwait
jo
adc
mov
pop
inc
adc
pop
lahf
cltd
rcrb
mov
cmp
fcoms
das
and
mov
jp
and
xlat
and
lcall
and
out
fcoml
jmp
pushf
mov
testb
movsl
sbb
sub
lods
out
pop
out
jno
xor
cmc
pop
pop
mov
inc
popf
repz
mov
xor
sbb
mov
cwtl
jle
test
out
mov
mov
and
jae
adcb
js
cmc
or
jecxz
jl
push
dec
mov
adc
iret
lret
imul
je
cwtd
jl
push
scas
cmp
jg
in
mov
mov
fsincos
icebp
addr16
cmc
std
mov
nop
in
or
mov
xchg
cmpsb
mov
out
inc
inc
mov
mov
rorl
sbb
lret
jp
inc
ja
mov
mov
mov
pop
fsubs
dec
mov
ficomps
xchg
jg
adcb
mov
and
in
ret
push
addl
lds
stc
or
or
and
daa
fdiv
add
inc
out
sbb
arpl
xchg
push
pop
sub
push
add
add
mov
ret
mov
int3
mov
pop
sahf
jae
mov
adc
ret
aas
push
jne
dec
xchg
or
out
jo
fs
mov
je
out
and
push
scas
scas
imul
mov
mov
roll
cmp
js
pop
or
pop
loop
xchg
or
adc
mov
gs
fildll
testb
ficomps
mov
pusha
jl
ja
sbb
or
repnz
and
add
mov
lods
push
cmp
in
push
jl
lcall
int
leave
orb
ss
inc
js
and
xor
xor
nop
repz
les
fwait
rorl
dec
sbb
jg
pop
jns
sbb
test
push
sti
cmc
rorl
jbe
mov
cltd
les
pop
push
fldt
jbe
sub
fisubrs
pop
mov
dec
add
int3
in
mov
xor
fs
sub
mov
sar
dec
or
push
cwtl
imul
jge
icebp
push
es
mov
aas
vpaddd
mov
xchg
daa
jecxz
es
sbb
inc
xchg
lahf
pusha
jae
mov
inc
sahf
call
and
mov
lret
repnz
out
add
call
push
sbb
cmpsl
hlt
in
jmp
pop
inc
or
bound
mov
pop
mov
xchg
in
into
out
cmp
cwtl
je
push
es
jnp
xlat
ss
push
jg
xchg
dec
jle
daa
pop
push
jo
push
adc
cmp
cmp
into
mov
adc
ss
imul
inc
sub
mov
call
push
in
ja
xlat
and
outsl
xchg
sbb
inc
bound
scas
sbb
aam
cmpsl
test
xchg
ja
cli
dec
mov
incl
call
into
cmp
add
hlt
imul
std
mov
cmp
dec
decl
hlt
or
ss
mov
and
dec
mov
adc
mov
dec
mov
ret
cmc
xor
dec
and
icebp
inc
push
jle
adc
iret
mov
mov
aam
xor
pushf
test
add
mov
movsb
out
shl
mov
mov
sub
lret
push
call
or
jp
and
push
fstpt
dec
divb
mov
sbb
hlt
ret
jmp
pop
inc
xor
and
jg
jg
jno
mov
and
mov
dec
popa
mov
imul
lds
pop
sbb
hlt
and
mov
out
add
inc
dec
pushf
mov
mulw
and
add
jmp
add
add
cmc
jno
adc
sbbl
inc
push
pop
test
les
ja
mov
lea
fstps
adc
dec
or
shll
adc
das
ljmp
fisubs
js
cmp
add
cmp
mov
xchg
repnz
lahf
xor
filds
sub
push
mov
movsb
cmpsl
ja
sub
pusha
sub
nop
mov
or
jge
lods
les
stc
jnp
lret
jg
hlt
pusha
add
imul
adc
push
es
and
jno
xor
repz
jg
dec
inc
mov
adc
or
mov
ss
es
mov
enter
xor
pop
or
and
sar
insb
insb
jae
lcall
addb
pop
push
push
test
xchg
pop
adc
mov
in
fidivrs
or
push
aas
ret
fnsave
sub
in
shll
push
repz
mov
stos
mov
cmpsb
pop
leave
adc
mov
imul
inc
jg
dec
inc
sub
adc
gs
movsb
aam
push
lock
outsl
outsb
mov
testb
int3
dec
mov
and
mov
jg
outsl
mov
mov
in
lods
add
mov
movsb
aad
lds
dec
inc
push
lcall
push
inc
js
pop
cwtl
mov
fucomip
les
cmp
js
ss
ds
out
aam
mov
fisubl
cmpsb
sub
nop
mov
or
loopne
adc
es
cli
cmpb
call
pop
fcoms
fdivrl
mov
xchg
dec
or
fisubs
xor
notl
jl
cmp
out
stos
sahf
fsubrs
or
hlt
call
jge
rcr
mov
push
imul
cld
sub
mov
cld
push
dec
xlat
sub
clc
mov
pop
xchg
jno
or
mov
inc
fbld
in
and
scas
subb
pop
push
mov
push
inc
dec
sbb
lcall
inc
insl
fs
popa
adc
stos
mov
das
sub
push
iret
int3
add
in
hlt
push
pushf
das
and
and
test
xor
icebp
movsb
mov
lock
fmuls
cmp
rolb
fstpl
gs
std
and
adc
jnp
inc
fstpt
sbb
pop
imul
shll
ret
pop
mov
sbb
cmp
mov
jns
pop
in
push
in
lods
sub
dec
iret
jns
data16
jno
cmp
mov
inc
loopne
push
pop
mov
rcrb
and
mov
cmpsb
cmp
cmp
xor
xor
jge
dec
mov
pop
sbb
inc
push
jle
hlt
mov
jl
mov
sbb
mov
das
fwait
fwait
int3
ss
test
out
pop
jnp
jg
or
mov
xor
shlb
push
dec
sahf
inc
pop
je
insb
sub
mov
add
jl
adc
pushf
jg
add
aam
add
inc
dec
xchg
cmp
pop
jle
imul
out
mov
cltd
cmc
add
ficomps
inc
jbe
fxch
and
sarb
dec
in
push
nop
pop
push
dec
xlat
adc
inc
jbe
mov
shrb
sti
cmp
and
insb
sub
fcoms
lahf
dec
arpl
popl
mov
jecxz
jo
pop
or
pusha
sbb
and
pop
aam
sub
loope
mov
pop
sub
mov
in
fcmovu
add
xchg
aaa
imul
dec
es
dec
xchg
sub
pop
push
pop
popl
cmp
mov
dec
push
sti
add
addr16
inc
ret
lret
sub
pop
ss
sbb
imul
imul
cmp
cltd
push
int
xor
imul
push
mov
xchg
mov
xchg
stos
cmp
cmpsl
mov
mov
inc
mov
dec
jne
add
test
mov
sub
sbb
imul
mov
insl
imul
mov
sarl
xor
stos
or
in
dec
mov
xchg
ret
push
je
jecxz
pushf
add
jl
add
add
xor
insb
push
or
cmc
mov
inc
mov
repz
and
out
dec
cmp
sti
ss
jnp
cld
cmp
repz
jae
mov
pop
das
or
gs
insl
cmp
adc
dec
in
clc
sbb
ds
sub
inc
push
cmpsb
dec
int3
pop
aam
aad
jno
sbb
ficomps
and
jno
cmpl
ds
and
js
add
push
call
cltd
out
pop
popf
sub
mov
dec
mov
xlat
pop
lea
imul
ljmp
and
out
loope
gs
push
sbbl
test
scas
inc
add
in
adc
out
fneni(8087
mov
pop
aaa
imul
pop
sbb
mov
hlt
or
pop
arpl
xchg
test
mov
addr16
ret
sub
xchg
or
into
fwait
xor
or
mov
cmpsl
push
sbb
fadd
push
ret
pop
xchg
xlat
hlt
inc
push
pusha
jg
xor
sub
push
cmp
loopne
sub
add
dec
repnz
dec
adc
fstpt
dec
mov
ret
mov
out
gs
or
sub
and
stc
push
loope
popa
xor
inc
and
push
jb
cmpsb
pusha
xchg
sti
adc
js
je
and
sub
cs
xor
mov
jl
dec
dec
xor
push
and
mov
xor
xchg
and
push
cmp
dec
jl
and
mov
popf
cld
dec
mov
fisttpl
jp
aas
and
ret
das
jle
xor
mov
test
dec
inc
add
int3
xchg
pop
ss
je
mov
call
adc
and
cmp
add
add
dec
or
insb
lock
sbb
fsubp
nop
and
mov
sub
cmp
ret
fisttps
mov
mov
jae
shl
fcmovne
pop
repz
es
cmp
in
cld
push
arpl
dec
popf
clc
dec
scas
push
repnz
scas
dec
add
stos
inc
mov
sar
dec
clc
testb
xchg
imul
fs
pop
movsb
int3
insb
scas
jae
push
bound
mov
movb
fs
xchg
adc
cltd
inc
jg
xchg
sti
imul
adcb
lahf
push
sbb
xor
out
cmp
pusha
pushf
dec
add
jge
pop
pop
xchg
lret
pop
add
insl
test
pop
sbb
mov
sbb
adc
xchg
xchg
push
mov
xchg
dec
dec
xchg
test
les
mov
xor
push
sbb
push
jae
xor
cmp
sub
sbb
stos
add
or
iret
mov
cmc
inc
inc
fnstcw
cmpsb
rcr
jno
mov
outsl
movsl
mov
test
sub
mov
stos
jbe
int3
cltd
cli
sbb
sub
lret
sbb
xchg
gs
jle
inc
sbb
sub
addr16
test
sbb
sbb
icebp
sub
mov
cmpsb
testl
fwait
sub
dec
pop
mov
mov
sub
mov
imul
fimuls
mov
push
jb
push
adc
lret
aam
mov
pushf
xor
push
inc
es
ds
out
mov
push
push
cs
mov
push
jae
rorl
scas
sub
or
inc
aam
pop
lret
icebp
mov
xor
in
and
addl
dec
test
imul
faddp
push
push
jmp
dec
sbb
xchg
leave
and
lods
xor
push
arpl
js
imul
fldl
pop
pop
jnp
imul
push
iret
mov
add
xor
cmp
movl
xchg
mov
adc
daa
dec
xor
idivl
lret
mov
mov
or
pop
or
pop
cmp
fimull
fcmovu
ret
es
fwait
ror
and
dec
fcom
jmp
sub
cmp
lret
mov
daa
jl
pop
mov
mov
pop
adc
sub
push
pop
out
or
dec
add
ret
pop
mov
pop
jle
xchg
popf
xchg
mov
cmpb
out
out
pusha
std
cmc
in
push
pop
push
ja
ljmp
sarb
sbb
mov
js
fistpl
icebp
inc
mov
push
popf
jl
outsb
xor
mov
pop
cmp
shr
mov
jbe
push
pop
sub
jno
popf
push
das
leave
sub
test
into
into
pushf
push
mov
sbb
out
jno
out
pop
inc
mov
out
sbb
and
pop
lods
pushf
scas
dec
out
lods
and
push
cwtl
push
push
pop
or
jp
cli
jg
dec
pop
das
sbb
imul
mov
dec
push
dec
jecxz
push
xor
push
xchg
mov
sub
shl
xor
fistpll
fmuls
punpckldq
cmpb
clc
adc
and
mov
adc
arpl
fwait
xor
mov
or
insl
dec
xor
cmp
sub
bound
cs
sbb
dec
add
jp
dec
ja
adc
xlat
in
inc
jae
mov
repnz
mov
divb
and
adc
jl
notl
scas
testl
jg
call
push
cmpsb
mov
mov
xchg
sub
dec
jnp
call
daa
inc
shrl
fisubl
jle
lret
cmc
das
adc
es
dec
decl
xchg
ja
add
hlt
orl
cmpsb
movsb
inc
jle
inc
adcb
cmp
xchg
push
bound
dec
cmp
cmp
mov
fsubs
inc
arpl
sub
mov
xchg
shrl
jb
out
insb
mov
stc
nop
pop
mov
xor
dec
mov
jecxz
scas
mov
xlat
jl
dec
aaa
jl
icebp
mov
lods
xchg
es
outsl
mov
jmp
mov
push
ds
fstpt
inc
jns
mov
and
mov
dec
out
xchg
daa
stos
jnp
mov
dec
jae
ss
mov
fadds
pushf
mov
scas
mov
xchg
adc
dec
or
or
and
sbb
movsw
sbb
daa
cs
sti
push
push
bound
mov
aaa
xchg
adc
movsb
dec
pop
fcoms
jae
add
jl
dec
mov
and
loope
daa
repnz
mov
jno
in
cmp
add
jge
cmc
mov
push
push
outsl
jl
mov
aad
dec
adc
mov
lds
lods
fisubl
test
and
sbb
dec
arpl
push
add
int
mov
mov
cld
in
fnsave
fwait
shl
push
sti
das
stos
scas
mov
fs
adc
pop
adc
out
cwtl
fbld
mov
pop
std
add
inc
and
insb
pop
jno
addr16
adc
dec
inc
push
mov
xor
jmp
push
andb
xchg
pushf
mov
mov
mov
push
xor
insl
dec
jns
push
scas
cmp
mov
add
int
mov
arpl
imul
in
sarb
xchg
orb
mov
loopne
in
jns
push
inc
cwtl
scas
cld
iret
es
call
or
mov
sub
or
lret
fs
dec
xchg
pop
repnz
mov
cmc
test
mov
sarb
ret
dec
inc
and
cmp
shrl
jbe
and
sbb
fstpl
push
in
mov
xor
mov
push
ret
nop
inc
imul
xor
icebp
jge
inc
leave
adc
pop
mov
mov
sub
sub
push
in
dec
sti
jmp
push
loopne
fldt
sub
xchg
adc
push
stos
push
pop
and
jbe
inc
mov
cs
out
adc
mov
pmaddwd
cmp
push
in
js
sub
sbb
testl
stos
fwait
mov
pop
aad
push
push
popa
or
stos
inc
adc
sub
cmpb
cmp
loope
cmp
mov
ja
stos
clc
and
fwait
dec
call
fwait
jg
xor
mov
je
push
pop
xchg
sbb
mov
mov
sub
sub
adc
push
jbe
pop
fisubrs
sub
dec
repnz
dec
sbb
sbb
and
jmp
daa
roll
out
mov
pusha
cld
mov
ret
sbb
out
cmc
lea
inc
jb
sub
in
sti
mov
in
mov
shl
rcr
mov
adcl
inc
aad
xor
jg
jg
es
aas
dec
dec
sarl
sbb
fisubrs
stc
pop
xor
jge
pop
sbb
cmpb
inc
xor
dec
sbb
pop
pop
xor
pop
xchg
insl
dec
sub
stos
push
dec
sarl
out
subl
dec
fidivl
lods
outsl
jl
pop
lods
loope
sub
cmc
sub
rorl
dec
and
stos
mov
dec
int3
mov
stos
ret
sub
xlat
orl
xchg
mov
fwait
pop
or
iret
xchg
pop
stos
dec
ja
adc
sahf
popf
fwait
ja
adc
in
es
roll
inc
shrl
mov
ret
out
jg
lock
imul
cmc
fs
and
mov
fmull
and
xchg
lahf
shll
xchg
cmp
shll
fimuls
mov
fwait
cmp
add
rol
iret
xor
mov
adcb
inc
pop
cmp
inc
rcrl
aad
mov
nop
xor
xor
push
cmc
xlat
out
and
xor
lret
insb
jae
lods
cmp
mov
or
mov
jbe
pop
jl
mov
xchg
pop
or
sbb
enter
push
mov
movsb
fwait
and
jb
or
or
cmp
dec
movsl
insb
cmp
fldt
popf
stc
js
outsl
mov
pop
xchg
xor
jp
addb
cs
jle
addb
out
sarb
adc
jo
push
scas
int3
aas
mov
lea
jmp
sti
jg
int3
repz
in
and
xchg
pushl
mov
out
test
xor
mov
sarl
and
sti
mov
mov
mov
mov
out
out
xchg
push
mov
adc
inc
fists
leave
fildl
fdivl
jge
adcb
pop
fs
sti
mov
push
cmpsb
je
jne
ss
jp
jno
cmpsb
aaa
clc
jbe
sbbb
cmp
pop
dec
fistpll
push
out
jle
shll
sahf
jg
arpl
mov
sbb
cmc
jne
js
sbb
xchg
jmp
bswap
out
imul
test
lret
std
sbb
mov
lods
aas
rorl
hlt
push
mov
test
je
int
jae
add
sti
rorl
dec
xchg
push
fsubs
lods
shrb
test
push
aad
test
push
inc
mov
ljmp
adc
push
inc
xor
icebp
mov
clc
lcall
jns
mov
movsb
inc
pop
mov
inc
adc
mov
adc
adc
fsubl
cs
sbbb
xor
mov
add
jbe
adc
sbb
test
jae
shl
ss
push
subl
dec
mov
push
pop
mov
fisttpll
aaa
mov
test
mov
push
xchg
ja
xchg
add
repnz
pop
cmp
mov
jnp
pop
or
inc
mov
jl
fwait
mov
lock
xchg
dec
pop
inc
push
cmc
xchg
xlat
data16
out
cld
aam
pop
add
stos
add
ja
popf
lds
pop
dec
scas
pop
loope
xchg
pop
adc
fcmovu
popf
addr16
mov
test
js
dec
mov
cltd
rol
loope
fucomi
xor
adcb
mov
add
js
sbb
sbb
mov
dec
cmp
faddl
pop
sti
cli
cltd
dec
or
pop
test
pop
loop
and
pop
xor
aas
fnsave
add
aas
sub
pop
fistl
mov
clc
pop
cmp
in
adc
add
jmp
push
adc
subb
mov
ret
les
push
fs
stos
ljmp
or
push
je
loope
out
int
inc
ljmp
mov
cmp
sub
cmp
xchg
jl
fwait
in
ret
shll
cmp
dec
xchg
mov
inc
dec
pop
add
pop
mov
roll
and
xor
cmpsb
inc
aam
in
je
nop
or
adc
cmp
cmp
mov
mov
sahf
sub
mov
pusha
push
fwait
insb
gs
pop
test
ss
jl
mov
fistpl
push
out
xchg
dec
dec
jl
mov
in
mov
out
add
mov
add
dec
adc
fcmovnb
push
mov
int
push
add
data16
lcall
test
int
movsb
and
jecxz
or
cltd
lds
dec
or
sub
outsb
cmp
sub
out
push
mov
dec
dec
dec
shll
lds
xchg
repz
inc
sbb
sub
xchg
fiadds
stos
sub
mov
fnstsw
loopne
insl
sub
mov
fildl
mov
mov
mov
int
int3
lcall
mov
testb
mov
lods
sub
mov
mov
das
outsb
mov
loope
stc
sub
mov
je
pop
mov
roll
adc
cmc
cwtl
or
push
pop
mov
sbb
dec
aas
pop
iret
sub
clc
xor
rol
insb
test
pop
jmp
sbb
stc
sti
repz
ret
pop
pushf
dec
cwtl
cmpsb
push
inc
sbb
pop
and
dec
dec
sub
cmpsb
jb
and
inc
or
pop
out
mov
ljmp
dec
fisubl
les
fmull
daa
lret
arpl
mov
cmp
cmp
negb
dec
es
loopne
popf
push
cltd
jae
and
cmp
add
jl
push
les
mull
push
sbb
leave
inc
lock
mov
mov
jl
lcall
dec
das
testb
ret
ljmp
testl
into
out
std
and
shr
rorl
mull
test
loop
push
or
hlt
int3
fs
adc
pop
pop
fbld
mov
ja
mov
fistpll
push
cmp
fstpt
fcoml
shr
cmp
inc
and
test
fisubrl
jecxz
xchg
sbb
jg
fs
es
repz
insl
xchg
push
dec
adc
scas
or
dec
xchg
or
mov
mov
std
neg
pop
mov
xchg
or
rcll
js
inc
sub
mov
loopne
mov
sbb
mov
fstl
jnp
push
iret
xor
gs
divps
dec
mov
out
mov
je
lods
or
adc
fcoml
or
std
nop
sub
orb
inc
sbb
cmp
push
les
push
or
shlb
mov
movsl
mov
iret
xchg
dec
dec
mov
pop
mov
lds
icebp
flds
sbb
mov
sub
mov
cmpb
test
ljmp
pop
xor
sub
leave
pusha
in
fidivrl
xchg
fistpl
test
mov
loope
stos
xchg
mov
and
ds
cmpb
jno
pop
inc
xor
imulb
mov
mov
ret
dec
push
adc
pop
daa
inc
mov
mov
or
les
sar
mov
ds
inc
and
test
dec
push
mov
imul
mov
test
aad
mov
notb
xor
push
in
pop
xchg
fistps
out
out
fisttps
mov
popa
fmull
insb
int
test
inc
mov
mov
xchg
cmp
or
and
inc
xchg
sbbb
fildll
fstpl
add
out
sub
mov
daa
push
dec
insb
xor
or
hlt
cmpl
rolb
cmp
mov
shll
mov
repnz
dec
inc
dec
or
sbb
std
in
hlt
ss
inc
repz
inc
inc
mov
fiadds
dec
mov
xlat
fmull
sti
push
int3
or
outsl
insb
jae
sub
push
popa
xchg
imul
jae
or
jmp
xchg
mov
and
and
pop
push
or
mov
imul
add
into
fs
jb
xchg
out
ret
jl
jns
data16
mov
das
cli
aam
jg
lret
pop
pushf
subl
inc
fneni(8087
sub
mov
pop
sti
mov
push
push
fldcw
sub
fldt
jnp
popf
pop
cld
inc
fs
pop
fwait
ret
inc
std
aam
mov
dec
pop
jecxz
jnp
inc
sbb
mov
push
cwtl
cmp
nop
xchg
jge
push
push
and
sbb
stc
es
movsb
and
mov
jl
inc
mov
xchg
test
daa
shlb
jle
or
imul
sub
jl
pop
frstor
sub
imull
imul
push
out
dec
mov
jmp
iret
mov
jo
xchg
or
dec
inc
sar
sub
ja
insb
loopne
jno
jl
mov
sbb
xor
sub
aad
push
nop
in
sub
cld
dec
pop
in
xor
push
mov
shlb
imul
dec
cs
lret
mov
fsubs
mov
inc
cmp
push
fimull
jnp
cmpsb
imul
shl
cs
cmp
and
imul
call
adc
loopne
mov
jecxz
int3
ret
arpl
mov
push
insl
in
fwait
mov
cmp
sub
pop
dec
clflush
mov
push
pop
adc
pop
das
and
sub
imul
inc
int
int
jg
jno
call
add
push
xchg
fsubs
sub
lret
loopne
pop
mov
int
dec
adc
sbb
out
call
mov
arpl
test
and
jecxz
push
ret
inc
inc
xchg
xchg
jae
cmp
pop
sub
lcall
push
sbb
outsl
repz
push
mov
out
leave
sbb
lea
lock
pop
mov
push
es
cli
xor
xor
sbb
push
dec
add
ss
fstl
lahf
mov
je
ror
mov
push
rolb
outsb
inc
mov
pop
das
or
xchg
aas
or
cmp
xchg
lret
rolb
pop
xor
ljmp
std
jl
sahf
sub
xchg
shll
dec
iret
test
adc
clc
inc
dec
outsl
in
xlat
andl
mov
je
addr16
mov
int
mov
decl
insb
cmp
mov
pop
fstl
stos
mov
pop
cmp
add
or
pop
mov
mov
lds
dec
rorl
cmp
cwtl
lcall
fcompl
add
into
xchg
cmp
jg
ret
push
mov
shll
call
jg
icebp
push
iret
pop
rorl
stc
iret
movsl
daa
push
pop
mov
adc
xor
sbb
movsb
jne
aaa
dec
inc
xor
lea
pusha
xor
and
mov
jb
les
notl
push
or
dec
jmp
mov
inc
notb
das
pop
adc
std
mov
int3
xor
mov
cmp
arpl
out
test
les
pusha
push
push
jl
inc
imul
stc
inc
into
xchg
pop
mov
add
mov
pop
cmp
add
aas
pop
xor
mov
mov
cwtl
sub
mov
sub
jl
or
data16
pop
push
lahf
jg
fwait
cmp
out
push
pop
inc
fstpl
popf
dec
jmp
xchg
pop
orb
adcl
clc
sub
in
in
mov
call
push
sub
and
lret
mov
cmpsb
iret
inc
cmc
cwtl
std
jb
cmp
and
mov
push
fimuls
push
or
sbb
mov
cmp
inc
mov
sbb
mov
jmp
push
or
loope,pn
cs
push
popa
out
adc
push
scas
mov
sub
pop
addr16
es
jbe
or
pop
cmpsl
rorb
jnp
push
xchg
mov
mov
repz
lea
lret
dec
dec
jg
addr16
cmpsl
jns
aam
daa
stos
dec
jno
ret
mov
leave
inc
aas
or
mov
sbb
and
cmp
data16
jle
mov
jg
imul
sahf
fmull
loope
fiaddl
ja
sbb
or
cmpsl
xor
ret
int
sbbb
shl
fsts
cmp
fdivl
dec
xor
cmp
jg
mov
push
cmp
sub
imul
loop
jno
and
test
orl
pop
scas
jl
fwait
pop
sbb
scas
pop
mov
and
inc
sti
fs
and
jnp
pop
dec
int
or
arpl
jmp
in
cs
loope
and
pop
or
fimull
jb
and
xor
and
dec
jle
pop
or
sti
out
mov
insb
push
push
jbe
pop
xchg
into
lds
jge
dec
ljmp
lret
cli
dec
sub
push
push
cmp
pop
mov
add
fwait
in
lock
cmp
jbe
mov
ljmp
out
arpl
dec
outsl
xor
test
push
mov
push
fidivl
xchg
cmpsb
adc
xor
sahf
mov
dec
pop
ret
popa
push
aas
or
pop
cmp
orb
arpl
inc
sti
cs
lock
ja
xchg
push
mov
mov
aam
adc
push
test
pop
mov
cltd
loopne
mov
sbb
clc
pop
xchg
xor
jbe
push
fwait
mov
pop
jle
jmp
ret
outsb
adc
iret
aas
push
or
loopne
or
pop
mov
jmp
sbbb
iret
sub
ss
gs
roll
and
push
mov
insb
sbb
movsl
sub
jge
repnz
ds
add
push
cmp
or
inc
pop
pushf
ja
int3
mov
pushf
mov
xor
stc
push
ss
icebp
lcall
cltd
fistpll
fisttpl
add
outsl
mov
xor
push
repnz
pop
stc
sahf
push
outsl
shlb
push
mov
sbb
rsm
rcrl
inc
mov
testl
lds
xchg
jecxz
out
xor
stc
outsb
xor
sahf
dec
jbe
and
cmp
mov
movsb
dec
clc
dec
inc
dec
fs
pop
aas
mov
mov
js
insl
jae
into
gs
mov
fildl
mov
outsb
and
iret
jmp
maxps
cld
icebp
add
jp
cmpsl
xchg
mov
data16
mov
insl
xorl
xchg
lods
pop
mov
pop
pop
dec
pop
sub
stos
roll
add
mov
add
scas
xchg
xor
cmpsb
cltd
fsts
jnp
inc
cmc
fs
ja
sub
clc
jmp
fwait
jp
sahf
inc
push
hlt
enter
mov
push
xlat
adc
push
add
xor
adc
mov
mov
shl
mov
std
imul
add
jbe
sahf
add
inc
ret
mov
lahf
cmp
movsl
in
adc
push
nop
inc
add
shr
xor
loope
adc
jns
pop
pushf
inc
xchg
into
cmc
std
cltd
cmp
xchg
in
and
fwait
cmpsl
jb
mov
cltd
sbb
lock
inc
bound
popf
sub
das
xor
fdiv
loope
call
cmp
and
mov
or
test
pop
shld
test
xlat
cli
into
adc
mov
arpl
mov
mov
dec
into
cltd
mov
jge
push
mov
mov
pop
cld
daa
mov
pcmpeqw
add
roll
mov
sbbb
pop
dec
adc
sarb
js
cmp
push
push
fstl
sub
scas
xchg
xor
dec
test
dec
pop
clc
sub
mov
mov
lods
dec
orl
xchg
adc
or
cmp
push
in
hlt
dec
push
mov
shl
mov
xchg
adc
sub
or
jmp
mov
shlb
sarl
mov
mov
xchg
repnz
test
dec
imulb
pop
imul
cld
mov
sub
sbb
sbb
pop
adc
subb
movsl
add
ficoms
mov
push
cmp
pop
and
jecxz
jp
sbb
sub
pop
and
ljmp
test
pop
mov
or
je
add
in
xchg
cmc
idivb
and
push
jp
cmpsl
sbb
dec
inc
mov
gs
xor
dec
iret
dec
mov
stc
cmp
fcoml
fcmovne
jg
loop
push
push
sbb
push
mov
or
pop
sti
adc
mov
mov
ret
inc
bound
test
pop
mov
or
movsb
hlt
ljmp
or
xchg
test
popa
loop
ror
adc
pop
cmp
aas
xchg
jp
jnp
push
pop
outsl
cmc
notl
jne
lea
cmpsb
mov
pop
pop
xor
sbb
jg
mov
pop
pop
arpl
repz
sbb
idivb
sbb
outsb
imul
sub
push
mov
xchg
jbe
pop
shll
or
mov
mov
shlb
imul
fwait
add
inc
push
mov
out
aam
scas
movsl
dec
ror
jae
test
lahf
jnp
loopne
dec
mov
cmpsl
stc
xchg
fcomi
mov
cs
neg
sbb
jl
rcrl
sbb
mov
subb
ds
mov
mov
jmp
mov
ret
popa
or
icebp
pop
cmp
inc
movsb
inc
jae
fs
inc
add
jo
icebp
xchg
decb
js
add
mov
adc
scas
fxch
stos
sarb
ljmp
cmp
scas
fcmove
add
mov
addl
popa
shrl
or
adc
inc
jp
out
insl
cmp
jnp
add
movl
fbstp
and
xorb
xchg
movsl
scas
xor
lret
pop
insb
push
in
sbb
dec
mov
nop
mov
pop
jbe
pop
shlb
push
push
and
cmc
mov
inc
data16
pop
adc
push
out
mov
cmc
fcmovnbe
add
mov
cmp
mov
stc
and
repz
fisttpl
arpl
xor
jbe
pop
cmp
fisttpl
arpl
add
xchg
les
pop
inc
sub
push
push
mov
and
lods
dec
jnp
pop
push
mov
test
mov
mov
addl
push
ja
adc
inc
mov
test
push
enter
fisubrs
pusha
push
adc
stos
xchg
aam
mov
test
adcb
adc
addr16
pushf
ret
outsb
inc
and
push
add
ja
mov
mov
sbb
cmp
stos
and
sahf
mov
repnz
mov
bound
fwait
push
sar
lcall
push
aad
cmp
jge
mov
sub
pop
cltd
cwtl
or
push
push
stc
mov
movsl
rcrl
setp
je
dec
push
pusha
dec
jno
dec
das
addr16
enter
mov
jno
sub
sub
mov
xor
lods
fwait
aas
pusha
add
outsl
test
push
mov
cmpl
pop
xor
or
std
out
movsb
dec
mov
inc
and
xchg
aam
call
lret
jle
and
fsubr
ja
mov
nop
sbb
push
jp
push
inc
sbb
jle
fwait
pop
mov
loope
les
adc
add
cmp
movsl
sahf
mov
xchg
fiaddl
mov
xor
or
out
or
rcr
push
and
xchg
lret
pop
popa
test
jns
lret
xor
or
cmp
sbb
push
add
std
mov
shll
daa
ds
sub
je
cltd
push
cmp
sbb
jp
jge
imul
push
pop
mov
push
sbb
es
sbb
popa
negb
sub
jl
call
jecxz
mov
lcall
push
or
pop
or
cmp
mov
ds
pop
mov
lahf
mov
inc
jge
mov
cs
lcall
push
sbb
fldenv
lods
xchg
mov
pop
push
fwait
dec
jae
mov
adc
cmpsl
push
jmp
cmp
mov
mov
in
jnp
rclb
sbb
testb
jl
jg
cltd
pop
or
fimull
aad
dec
test
rol
ds
ja
pop
and
adc
hlt
adc
adc
pop
call
and
push
loopne
jle
orb
adc
sbb
or
xchg
mov
push
jno
adc
push
jmp
sbb
xchg
repz
imul
popa
jne
sub
sbb
jbe
mov
sbb
out
movsb
sbb
push
or
jae
xchg
test
movsb
enter
fwait
sub
ja
lahf
dec
pop
idiv
mov
adc
mov
dec
mov
cs
push
sub
cltd
mov
les
mov
add
mov
cwtl
jecxz
or
pop
ret
lcall
cltd
in
or
movsb
push
inc
jo
jno
or
dec
jae
jle
and
pop
xchg
cmp
fwait
cs
and
add
add
pop
dec
add
pop
jmp
push
mov
incl
cmp
jnp
mull
pop
push
scas
push
jo
mov
mov
mov
movsl
pop
shll
dec
dec
in
ljmp
jecxz
int
mov
int3
repz
les
mov
mov
sbb
mov
sti
fsubl
add
fs
or
sbb
push
sub
mov
adc
mov
mov
sbb
adcl
cwtl
mov
pusha
mov
dec
push
lds
cs
pop
rcrb
paddusw
mov
mov
xlat
nop
cld
mov
iret
es
inc
out
mov
push
fistps
inc
push
and
or
aam
outsl
mov
jmp
mov
inc
sbb
push
adc
aad
jl
sbb
dec
icebp
and
adcb
adc
push
xlat
les
push
jnp
cmp
pop
xor
lret
fs
cmpsl
or
inc
mov
ja
jno
cmp
cmc
xor
or
mov
lcall
test
jle
pop
and
movsl
lods
sbb
loope
push
mov
cmp
movsb
sbb
and
mov
loopne
dec
pop
lcall
or
int
adc
in
sbbb
lret
out
dec
push
mov
lcall
pusha
sbb
aad
mov
pop
mov
rorb
pusha
push
xor
jp
or
pop
or
and
loopne
sub
jno
sbb
dec
loopne
sub
jg
in
fisttps
stc
mov
js
inc
repnz
test
insb
in
jns
push
inc
inc
in
mull
mov
fmuls
outsb
xor
mov
aad
jnp
fiadds
loope
dec
shll
or
inc
pop
and
cltd
addr16
lcall
xor
imul
or
roll
jno
add
dec
mov
jae
imul
and
clc
outsl
xor
add
push
push
data16
aam
imul
push
mov
mov
xchg
scas
add
jo
repz
mov
push
dec
cmpb
inc
add
pop
xor
adc
jge
int
or
cmp
test
fidivrl
mov
adc
rcl
dec
mov
and
loop
test
mov
sub
pop
sub
xlat
inc
cmp
jns
ja
inc
pop
loope
sub
sub
stc
jae
mov
mov
out
xchg
xchg
dec
icebp
sub
jb
out
mov
sbb
mov
andb
jmp
dec
inc
inc
lods
xor
lret
mov
jo
pop
rolb
jge
jbe
flds
movsb
das
mov
push
cs
jmp
out
dec
outsb
mov
lcall
dec
xchg
and
mov
insl
add
pop
dec
cmp
inc
push
add
out
add
cmp
xor
push
jo
adc
xchg
jmp
inc
ret
rclb
cmp
aaa
push
call
and
pop
aaa
sub
ja
nop
imul
adc
arpl
lret
xchg
mov
out
push
or
jl
push
pop
aam
inc
std
lock
adc
jecxz
and
mov
in
test
jl
inc
shrl
mov
jl
scas
int
les
out
inc
ret
pop
lret
popa
dec
int
inc
dec
add
xchg
loopne
stos
xchg
mov
xchg
test
jge
lds
ret
lods
adc
ficompl
sar
jne
mov
clc
inc
mov
sbb
cmp
dec
push
mov
fnstcw
cmp
inc
enter
xorb
pusha
mov
xor
movsl
mov
iret
stos
push
clc
in
fldl
jnp
lcall
mov
push
insl
pusha
in
in
push
dec
inc
and
test
clc
push
adc
and
dec
mov
mov
lds
dec
out
push
push
adc
sub
mov
scas
push
fcoms
or
dec
repz
adc
inc
push
xchg
jg
inc
sbb
mov
dec
sbb
sbb
mov
rcr
jns
sbb
fnstcw
cmp
mov
shll
das
xchg
scas
sub
popa
jnp,pn
sub
cmp
pop
ja
and
jg
and
sbb
pop
and
mov
inc
mov
call
loopne
mov
fs
cltd
and
int3
ret
out
fstpl
sub
cwtl
pop
movb
sahf
mov
dec
dec
dec
pop
mov
inc
bound
and
addr16
out
jnp
fs
mov
sbb
xor
fmulp
mov
idivl
std
mov
rcll
in
adcb
fidivs
mov
mov
add
jae
out
pop
mov
nop
cmc
inc
mov
inc
sbb
outsb
push
repz
cs
test
lahf
int3
fistpll
andb
push
out
sub
push
mov
mov
sti
jo
fmul
xor
xchg
in
out
mov
loop
fwait
or
jmp
push
std
pop
mov
pop
mov
xchg
ja
aas
imul
xor
push
jl
jl
sbb
gs
mov
aam
lods
adc
or
pusha
inc
sti
dec
ljmp
or
inc
popa
aam
insb
sbb
mov
daa
inc
jp
dec
insl
lret
fisttpl
mov
pop
mov
loope
push
movsb
xor
arpl
sbb
mov
pop
inc
fwait
mov
jp,pn
stc
mov
cmpsl
in
mov
dec
scas
repz
cmpsb
pusha
repnz
mov
or
mov
pop
imul
iret
xchg
int
std
testb
les
pop
push
mov
mov
mov
into
xor
pop
pop
popa
or
std
mov
push
dec
pop
push
xorb
jl
xchg
adc
inc
and
pop
lret
fs
repz
sbb
lret
test
and
fsts
shl
push
jmp
push
cmpsb
popf
movsb
mov
pusha
mov
sub
jo
mov
sub
adc
je
repnz
test
mov
sub
sub
imul
add
dec
iret
call
mov
test
xchg
or
nop
outsb
push
stos
fildll
out
mov
push
push
xlat
divb
xchg
mov
pop
mov
and
fmull
sti
mov
inc
dec
adc
mov
mov
lea
iret
out
in
sbb
addr16
pop
mov
cmp
dec
or
std
outsb
lods
mov
xchg
xlat
push
add
add
cli
in
out
stos
xlat
push
repnz
mov
insl
movsb
dec
shl
stos
mov
ja
cmp
aam
sub
xchg
pop
mov
popf
add
cmpsb
into
inc
inc
pop
dec
jg
mov
je
inc
jae
jmp
sbb
pop
mov
jns
imul
cmpsl
iret
in
dec
jb
pop
pop
jo
cltd
sarl
mov
fimull
rorl
lcallw
mov
daa
inc
xor
jg
out
jp
icebp
mov
mov
ret
add
std
mov
nopl
pop
les
cwtl
pop
inc
sub
in
jns
out
cmpsb
jno
mov
or
enter
imul
fnstenv
ret
test
jne
lods
xchg
push
jp
inc
pop
jo
movsb
shlb
out
subl
xor
xchg
int3
pop
inc
push
jmp
and
negb
repnz
in
xchg
sbb
inc
cmp
push
arpl
rcll
jge
pop
and
or
mov
ret
lods
cmp
mov
dec
dec
lea
mov
je
lods
cmp
jno
call
cmc
inc
mov
pop
xchg
popf
pop
ret
sbb
mov
lahf
pop
cs
inc
inc
ss
push
into
imul
sub
sub
aad
jb
push
mov
inc
push
sub
jno
decl
dec
inc
pop
fs
jo
es
mov
stos
mov
sbb
jmp
cmpb
mov
in
lea
stc
loopne
mov
mov
call
xchg
cmp
mov
jmp
mov
inc
nop
test
push
sub
ret
jge
push
pop
adc
clc
push
cmp
cmp
sub
stc
adc
rorl
push
mov
mov
inc
pop
or
stc
xor
mov
sbb
mov
les
dec
mov
subl
pop
fsubrs
out
inc
sub
cs
pusha
cmp
mov
jmp
fwait
idiv
out
cmpsb
pop
add
arpl
out
shl
or
inc
fidivrl
push
imul
sub
rcll
dec
add
mov
imul
or
sbb
movsb
mov
fildl
incl
or
mov
push
mov
lcall
movsb
pushf
insl
pop
mov
aas
repnz
icebp
addr16
fisttpll
mov
ret
sbb
or
into
call
sbb
and
sbb
movl
pop
in
jns
mov
adc
push
mov
pop
fwait
adc
je
fwait
pop
je
dec
jbe
lret
xchg
fwait
xchg
rcr
xor
mov
or
jecxz
loope
lods
jg
repnz
ds
cli
adc
pop
test
push
lods
adc
repnz
inc
inc
shr
mov
inc
mov
mov
xchg
test
imul
int3
inc
xchg
loop
or
mov
fbstp
inc
rclb
pop
mov
add
aas
arpl
push
mov
ja
xor
iret
cmp
and
insb
mov
adcb
adc
or
add
pop
mov
inc
cmc
fwait
fs
shl
push
inc
mov
lock
push
mov
scas
out
sbb
add
xchg
jae
cmp
ret
rcll
jl
xor
push
sub
and
xor
jne
add
ficoml
mov
pop
or
xor
fsts
mov
sbb
sbb
sti
mov
pop
and
xor
jmp
pop
cmp
push
mov
lret
int3
jae
xor
sbb
add
jl
pop
fnstenv
pop
push
popf
mov
pop
push
add
jnp
xor
and
push
outsb
scas
cmp
call
pop
bound
cs
jl
sbb
stos
push
jp
loope
js
or
dec
sbb
loop
adcb
sbb
adc
mov
lea
ljmp
ds
mov
add
push
shl
iret
dec
ret
push
dec
mov
movsl
arpl
push
in
adc
adcb
pop
or
mov
or
movsl
mov
and
adc
mov
cmp
adc
aad
out
lods
adc
int3
and
imul
imul
adcb
inc
or
call
push
das
mov
aas
fisttpl
inc
jae
and
cmp
insb
mov
fcmovbe
mov
xcrypt-ctr
cmpsl
pop
pushf
cs
jb
in
push
mov
addr16
cmp
inc
pushf
sbb
push
loope
test
enter
mov
dec
mov
test
fsubl
xor
cmpsl
pop
pop
outsb
lret
insb
inc
adc
loop
jo
das
xchg
out
pop
jbe
inc
ficoml
fs
fbstp
dec
cmpsb
xlat
push
scas
pop
and
push
cmp
adc
mov
inc
push
test
int3
jne
dec
pop
mov
inc
pop
int3
dec
mov
mov
xchg
jb
and
push
cltd
mov
xchg
sub
enter
lahf
ds
mov
ficompl
sub
inc
jecxz
mov
adc
cmpsl
inc
inc
sub
ret
shll
cmp
fidivrl
and
in
cltd
sub
push
addr16
xor
out
xor
mov
and
pop
pop
inc
push
mov
mull
mov
sbb
add
cmp
pop
in
or
and
push
inc
mov
fcompl
iret
nop
pop
mov
test
inc
dec
mov
add
xlat
cmp
cmp
inc
enter
inc
xor
cmp
or
pop
dec
dec
outsl
push
mov
imul
cmp
in
leave
or
mov
in
pop
jo
add
mov
add
dec
lods
shll
adc
push
mov
into
jnp
and
mov
cli
pop
sahf
pop
push
mov
jae
jae
mov
mov
xor
adc
testl
into
das
in
ret
adcb
jb
pop
jb
and
fsin
test
dec
lcall
stc
inc
ret
adc
inc
inc
dec
or
jl
cmp
sti
aad
fnstsw
mov
data16
shr
sub
icebp
ret
adc
mov
xchg
repnz
cltd
pop
sub
test
lea
mov
jno
bnd
shrl
mov
xor
adc
mov
dec
mov
cli
push
mov
or
jb
sar
loopne
mov
xchg
sbb
lea
sub
ret
add
mov
lods
pop
stc
out
sti
cli
dec
jmp
cmp
push
or
dec
nop
xchg
cmc
mov
mov
in
cmp
cli
fwait
ja
jl
mov
or
xor
arpl
dec
dec
mov
aas
push
mov
enter
cmp
mov
rclb
add
fldt
dec
pop
shrl
ret
in
xlat
int3
adc
rorl
cs
call
cmp
xor
pop
jne
jle
mov
inc
mov
lret
pushf
aad
imul
scas
or
test
aaa
or
push
jnp
cmp
dec
jg
and
lock
in
idivl
in
and
mov
test
pop
inc
hlt
insb
mov
xchg
or
lahf
mov
fisubrl
mov
mov
jmp
sbb
dec
int
and
mov
insb
push
gs
push
mov
dec
int3
ret
inc
jl
and
roll
es
pop
fdiv
xchg
aam
mov
jge
into
out
scas
jbe
pop
jb
cmp
or
stos
bnd
sbb
and
add
fcoml
out
arpl
ja
sbb
mov
xchg
push
adc
scas
inc
add
test
dec
jp
hlt
sub
jb
leave
int3
add
aas
mov
push
bound
xchg
mov
mov
push
mov
test
cli
or
jle
xchg
sub
push
mov
pop
ret
mov
and
les
sbb
lret
jmp
add
loopne
push
cwtl
pop
rorb
fwait
in
loopne
out
lahf
imul
leave
movsl
sbb
jb
pop
xor
xchg
cmp
push
jg
mov
dec
test
adc
arpl
dec
fstps
dec
xchg
sub
ret
ftst
sbb
fimull
aad
lahf
xor
sbb
dec
mov
mov
dec
mov
dec
lods
mov
out
xor
lret
mov
cltd
cmp
add
jnp
dec
push
mov
pop
mov
jg
fldenv
jmp
mov
ja
jb
lea
jecxz
dec
mov
popf
jl
xchg
xor
cmp
daa
fldt
mov
testl
adc
shlb
lea
sub
sbb
lret
cli
sub
push
xlat
adc
mov
cmc
mov
ret
dec
cld
mov
roll
outsb
ljmp
negb
mov
ja
enter
jmp
insl
movsb
mov
leave
pop
fbstp
aad
clc
enter
or
testl
dec
dec
cmpsb
jae
mov
sub
dec
push
sub
cmp
jo
jl
aaa
pop
sbb
sbb
push
leave
fidivs
mov
out
xor
cmpsl
and
dec
pop
popf
dec
bound
cmpsb
fadd
mov
mov
cmpsb
inc
shl
ficoms
mov
sub
fwait
jmp
cmp
sbb
scas
insl
pop
jns
xchg
add
pusha
mov
cs
je
sub
dec
sub
dec
pop
push
mov
out
cmp
mov
xor
sbb
add
movsb
xchg
jmp
in
jg
inc
pop
mov
loopne
sbb
mov
push
mov
pusha
fwait
rorl
repz
ja
negl
js,pn
movsl
cld
mov
loop
push
pusha
dec
jl
cmpsl
cmpb
pop
push
jge
repz
repz
jmp
ja
sahf
push
cmpsb
call
sti
es
dec
ja
pop
mov
mulb
inc
or
inc
ficoml
inc
jecxz
push
iret
mov
aas
pop
mov
addr16
data16
inc
inc
lds
scas
cmpsb
xor
loop
in
xor
jge
loope
add
adc
dec
sbb
fdivl
cmp
pop
mov
lea
mov
sarb
rorb
cwtl
mov
scas
shll
ja
push
mov
or
popf
and
je
shl
mov
cltd
and
dec
cltd
jnp
xlat
loope
movsl
movsb
loope
sub
push
sbb
mov
shrl
ret
jl
lahf
sub
pop
mov
cltd
fidivrl
popa
sbbb
dec
cmp
mov
test
scas
adc
cltd
lea
xor
add
cmp
in
loope
stc
dec
push
scas
jmp
jg
cmp
cwtl
sub
lcall
dec
xor
loop
xchg
and
std
mov
ss
inc
lods
ss
pop
add
jge
scas
cmp
pushf
push
je
jne
orl
lds
cmpsb
mov
outsl
stos
gs
sub
pusha
cmp
into
mov
out
cmpb
out
dec
movsb
cltd
lret
add
loopne
mov
aaa
mov
sub
xor
mov
mov
ret
daa
lods
aad
fwait
in
pop
arpl
xchg
test
push
inc
mov
pop
ja
dec
icebp
shll
mov
test
inc
push
xor
xor
insb
xabort
mov
pusha
dec
inc
xor
sub
rcr
mov
cltd
mov
and
pusha
jg
ja
or
and
adc
push
imul
cmc
out
push
xchg
ror
sbb
movsl
pushf
pop
mov
or
fsubr
xchg
add
mov
fstps
out
fwait
or
push
mov
hlt
xchg
add
pop
mov
stc
jns
std
in
xchg
fbld
mov
mov
inc
lret
mov
sbbl
jle
jno
mov
stc
or
pop
jnp
cmp
push
cli
in
sub
lods
push
cwtl
sarb
fisttpl
test
lret
das
jnp
pushl
dec
shl
xchg
out
push
cmc
pop
add
es
lret
mov
lock
pop
xor
push
fdivl
clc
cmpsl
mov
imul
pop
add
xor
push
push
lods
push
mov
fwait
jb
es
test
js
roll
cmc
testb
push
cs
not
push
test
mov
into
sbb
lret
divl
add
stc
call
cmp
fmul
data16
inc
inc
sub
mov
lcall
xor
icebp
out
outsl
push
notl
and
mov
jb
pushf
mov
push
mov
leave
dec
test
subl
das
jg
js
ja
mov
dec
push
xor
sbb
jne
test
cmc
mov
pop
enter
sub
mov
movlps
inc
push
xchg
movsl
lahf
movsb
icebp
out
out
cs
fmuls
jae
push
cld
cmpsb
or
scas
leave
sub
movsl
es
or
aad
or
or
xchg
daa
pop
fisttpl
insb
cmp
jnp
ret
push
lods
pop
sub
cmp
push
mov
mov
rclb
pusha
mov
mov
adc
je,pt
pop
adc
mov
ret
dec
insl
dec
mov
lret
addb
or
and
test
icebp
dec
int3
mov
call
jl
cli
ret
outsb
xchg
push
into
lret
std
mov
mov
aad
pop
arpl
lods
rorl
ficoml
sub
xor
add
xchg
test
lock
cld
fwait
adc
shrb
iret
push
push
mov
and
xor
neg
shl
mov
push
jae
aam
push
push
jecxz,pn
imul
cs
lea
cmp
insl
pop
cli
push
stc
push
cmp
pusha
dec
mov
int
cmp
fadd
cltd
dec
xchg
or
mov
int3
push
xor
mov
insb
cmpsb
adc
inc
pop
mov
add
inc
cmp
aad
dec
push
mov
xor
cli
cmp
adc
sbb
cs
add
adc
fidivs
cli
adc
push
sub
insb
nop
sub
add
add
sbb
mov
push
dec
iret
jo
push
cmc
inc
es
mov
pop
test
or
dec
incl
dec
and
dec
jg
cmp
xor
inc
dec
bound
mov
inc
mov
je
xor
aaa
jne
sti
dec
int3
rclb
out
shrl
cs
sbb
testl
sarl
pop
fbld
std
cltd
in
lcall
mov
dec
test
fwait
dec
push
lods
mov
xchg
mov
out
pop
add
insb
bound
jne
add
push
jmp
push
jno
and
daa
jae
inc
repz
mov
lahf
push
cmpsl
idivb
dec
mov
push
dec
sub
jle
jle
das
scas
jle
int
hlt
subb
cmp
fimull
add
jne
add
jmp
loopne
cmpsb
faddl
add
add
stos
insl
dec
dec
add
inc
sahf
mov
xor
mov
dec
jb
cmp
scas
add
xor
dec
cmp
andl
cmp
cmp
mul
xor
cs
push
add
xorb
rorl
cld
cmp
mov
add
repnz
jae
jmp
scas
push
into
fcomps
mov
movsb
or
mov
pop
scas
mov
scas
pushf
jno
stc
hlt
sbb
xchg
movsb
fidivl
inc
nop
rclb
or
cs
mov
movl
mov
test
jle
mov
aad
jg
mov
test
pop
pusha
aad
rorl
inc
sbb
push
dec
dec
shrl
stos
jg
movzwl
sbb
es
mov
daa
push
and
fidivrl
js
scas
jl
xchg
sub
movsb
jl
mov
sub
daa
lea
repz
adc
nop
enter
sub
push
jg
daa
add
xor
push
popf
and
cltd
into
xchg
add
jns
or
stc
fisubl
pop
fildll
movl
test
xchg
ss
inc
movsb
daa
dec
fwait
sbb
xchg
xchg
pop
inc
sub
or
ljmp
add
mov
lret
or
clc
je
shl
mov
scas
jmp
repz
push
lods
jo
subb
inc
inc
adc
sti
xchg
mov
dec
and
pop
inc
mov
addl
ds
fistl
mov
fidivl
dec
dec
test
mov
sbb
and
pop
mov
mov
stos
push
je
or
pop
mov
dec
lods
iret
inc
les
inc
iret
imul
orb
jno
pop
aad
movsl
and
mov
nop
pop
orl
hlt
fnstenv
imul
pushf
cld
dec
cmp
fmull
aas
pop
cmc
inc
pop
xchg
inc
jnp
dec
lea
popa
mov
dec
rcrl
push
das
adc
pop
jecxz
daa
les
mov
loope
dec
lret
decl
xlat
daa
leave
les
jo
sbb
mov
mov
adc
jp
push
insb
sub
dec
ja
sub
or
aas
cmp
jns
movw
mov
ret
nop
cmp
cmp
push
data16
ret
cmpsl
lock
or
push
jl
mov
mov
mov
xchg
mov
push
mov
lahf
mov
arpl
fistpl
jb
jnp
xchg
dec
dec
clc
lahf
ret
cmpsl
mov
rcrl
scas
arpl
cmp
dec
stos
or
push
movsl
xchg
adc
cld
xor
pushf
flds
fwait
jl
mov
push
hlt
jecxz
stc
mov
repz
xchg
fidivrl
and
and
loope
dec
pop
xor
faddl
jno
push
sub
iret
mov
fwait
mov
inc
or
into
ljmp
lret
mov
adcl
xor
testb
int3
mov
push
mov
sub
xchg
es
repnz
jne
mov
jae
and
mov
int
push
daa
loopne
repz
cmp
scas
scas
mov
inc
notb
jl
dec
pushf
push
jge
repz
cld
jns
xor
ja
fmull
cld
mov
jnp
out
adc
or
xor
mov
ss
adc
inc
or
fdivrl
pop
inc
arpl
mov
jo
movsb
add
pop
std
fcoms
or
out
divl
jns
shlb
push
loope
lods
mov
stos
dec
mov
sbb
inc
mov
mov
xchg
cwtl
gs
lods
add
idiv
push
push
leave
insl
pop
fildl
gs
cs
sbb
xor
mov
jne
push
pop
xlat
in
out
jge
sbb
pushf
stos
filds
mov
repz
cmp
iret
into
mov
shrl
hlt
sbb
dec
add
add
fcomps
mov
jmp
sti
mov
pop
jne
arpl
xchg
pop
shll
inc
push
or
cli
and
or
and
adc
in
test
adc
mov
nop
adc
sbb
in
dec
adc
fildll
fsubrl
or
pop
ficoml
imul
lahf
adc
and
int3
add
push
movsb
cmp
mov
jmp
fidivl
fcoms
ja
int3
cld
sub
bound
ret
dec
ss
lret
and
push
jo
hlt
inc
jnp
es
sarl
sub
into
push
mov
xor
mov
scas
sub
jg
rcrl
and
xor
js
movsb
pop
inc
adc
fcmovnb
dec
push
jno
push
in
mov
fisttps
jno
push
mov
rcrb
sub
jl
movsb
punpcklwd
jg
jp
out
pushf
lahf
movsb
loopne
mov
mov
push
mov
add
jne
outsb
jbe
fldl
ficoms
mov
orl
adc
js
fwait
push
mov
mov
cmp
sub
dec
sbb
stos
fisttpl
or
imul
pop
dec
int3
mov
xor
insb
mov
lret
ret
in
repz
pop
pusha
je
xlat
dec
inc
push
mov
jl
mov
rolb
sbb
and
push
inc
fildl
push
lods
dec
push
dec
testl
imul
scas
lds
dec
cltd
aam
jbe
cli
fldt
mov
or
and
sub
mov
das
in
fcoml
cmp
sub
aam
jnp
fbld
fildll
out
ret
cs
mov
iret
lea
push
inc
sub
pop
aad
mov
insb
sbb
inc
mov
sub
mov
cs
leave
aas
popf
stc
aas
xchg
mov
and
ret
jnp
inc
lods
pop
cmp
sub
sub
pop
or
mov
sbbb
xchg
in
dec
dec
pop
stos
incb
push
dec
sbb
push
sub
mov
aam
imul
cmc
xor
xor
fsubl
les
shrb
hlt
popf
jae
or
pop
mov
dec
fimuls
adc
loope
bound
mov
mov
in
fnsave
pop
cli
rcrb
lahf
imul
stos
push
lret
mov
pop
repz
in
neg
jg
sbb
and
push
adc
stc
fisubs
call
outsl
pop
sbb
jne
mov
inc
and
cmpsb
test
int3
push
inc
dec
mov
ss
icebp
lret
push
in
cmpsl
scas
jmp
ret
and
repz
or
jbe
hlt
movl
in
inc
dec
sti
cmc
popa
pop
jno
push
add
push
xchg
mov
inc
and
cmp
in
adc
lds
cld
aad
js
cmc
push
push
popf
bound
pushf
add
mov
jmp
mov
stc
test
cmp
les
push
fwait
movsl
xor
dec
push
inc
or
stc
fisttpl
mov
popf
jle
inc
scas
and
jb
mov
aad
inc
cmp
jb
movsb
mov
mov
xchg
inc
and
xchg
test
fcmovnbe
lcall
fcompl
pop
dec
pop
out
out
push
mov
xor
xchg
jg
sub
pop
push
inc
cmpsl
push
mov
sub
ret
testb
jp
stc
jmp
arpl
lock
inc
or
sbb
and
pop
mov
imul
out
add
sbb
imul
add
jns
mov
mov
inc
repz
xchg
cwtl
or
fbld
jae
mov
bound
mov
enter
mov
jnp
cmpsb
aas
lea
ljmp
test
aam
push
shl
arpl
call
fld
int3
orl
mov
jg
out
dec
jnp
icebp
imul
test
push
or
or
mov
rcl
imul
jno
adc
test
imull
push
pop
lods
gs
test
fimuls
outsw
adc
cmp
xchg
ret
sub
aam
stc
rcrl
adc
les
xchg
inc
add
sbb
imul
into
cltd
hlt
pusha
xchg
sahf
out
stc
mov
push
repz
ret
loopne
movsl
jge
add
cltd
mov
cmc
imul
sbb
inc
mov
inc
int
push
mov
rcr
adc
pop
ss
popf
pop
cmc
fbld
psubsb
rcr
mov
jnp
push
fistpl
ret
or
mov
sub
adc
push
ret
stc
push
push
xchg
loop
inc
fwait
cs
push
bnd
les
pop
inc
dec
jge
popf
sarb
lock
fwait
mov
push
sbb
fistps
fldt
sbb
push
sti
mov
je
dec
mov
or
ljmp
inc
mov
cmc
sbb
jnp
outsl
call
mov
add
dec
cs
inc
dec
xor
add
push
lcall
mov
dec
rol
and
gs
lret
nop
mov
pusha
sub
dec
mov
mov
ret
xor
rorl
scas
push
ds
in
imul
jbe
outsl
and
subb
pop
mov
fnstsw
adc
add
jg
and
xor
push
and
cmpb
cltd
dec
lret
mov
aad
add
pop
jge
pop
mov
xchg
ljmp
fwait
int
pop
mov
cmp
adc
outsl
pop
and
mov
adc
cmpsl
stos
pop
lahf
fstpt
pop
cltd
pop
sbb
mov
adc
cmp
jns
cmp
jecxz
add
int
je
dec
sub
int
or
aas
lea
pop
sarl
call
adc
xor
std
cmp
mov
push
or
pop
push
imulb
insl
adcl
sbb
jl
push
mov
imul
dec
mov
es
and
and
push
cmp
xorb
imul
jbe
std
adc
movl
dec
jl
fwait
popl
into
out
icebp
test
pop
movups
xchg
iret
sub
jl
test
mov
shll
fimull
cld
mov
sbb
rolb
push
or
cld
jl
fstp
sub
nop
add
cmp
ficomps
jne
movlps
mov
mov
daa
inc
push
xlat
push
stos
sub
mov
ds
add
std
dec
mov
cmpsl
mov
lahf
or
jbe
sbb
out
xchg
mov
jae
adc
ss
jmp
sbb
xchg
cmp
add
aad
pusha
repnz
mov
inc
fistl
sub
inc
sbb
shl
data16
testb
shll
dec
add
test
stos
adc
or
repz
fisttpl
stos
arpl
add
nop
inc
ja
subb
push
pusha
cs
out
ffreep
jg
sbb
sbb
jmp
sub
loopne
in
push
inc
mov
jbe
lods
dec
stc
popf
fmuls
mov
mov
adc
lret
faddl
inc
in
hlt
or
mov
out
sahf
fcomp
dec
pop
in
fsts
jl
ja
adc
xchg
or
fcompl
sub
pop
cwtl
fs
shl
stc
fisttpl
sbbb
cmc
pop
cld
mov
repz
into
jle
sub
xor
out
int
xorb
cmpsl
ret
mov
nop
mov
sub
lea
out
test
shr
mov
bound
lret
and
outsb
xor
cltd
push
mul
dec
mov
push
dec
jbe
idivl
out
adc
jecxz
scas
ss
push
inc
test
mov
lcall
push
xchg
jg
fisttps
cmp
sub
xchg
sub
inc
sbb
cld
pop
pusha
shll
mov
out
lea
mov
repnz
call
dec
jmp
lods
xchg
sahf
xchg
adc
mov
dec
jg
shlb
xor
sbb
clc
insl
out
fs
jg
push
adc
dec
inc
sub
ss
lods
int
loopne
test
sbb
or
aad
pop
pop
mov
adcb
cltd
fcoms
test
inc
cmp
rorl
jg
lea
fstl
fimull
cs
repz
nop
inc
pop
lret
cmp
push
mov
scas
imul
adc
and
dec
loopne
xor
jg
xchg
sub
call
repnz
loopne
mov
jo
inc
ljmp
lcall
jns
fildll
int3
mov
pop
scas
jnp
xlat
xor
add
pop
ror
sub
and
cmpsb
dec
pop
fistpll
jno
movsl
lret
adc
insl
mov
sbb
loop
pop
mov
stc
loop
cmpsl
xchg
enter
movsb
shrl
pop
push
shll
pushl
dec
mov
dec
mov
jle
imul
mov
cmpsb
and
out
sbb
mov
pusha
dec
fwait
jmp
sub
test
push
aam
dec
cld
mov
jg
call
inc
jecxz
pop
inc
mov
dec
out
or
mov
sbb
fildll
in
jb
mov
sti
mov
push
xor
jnp
sbbb
nop
pop
jmp
fwait
ja
std
in
ret
pop
dec
or
dec
and
aaa
inc
and
jbe
fisttps
cwtl
xor
pop
xlat
push
test
js
jbe
lcall
pop
pusha
out
xchg
lret
inc
jb
xor
test
fwait
xorb
fwait
cltd
adcl
les
cltd
or
dec
lcall
in
mov
push
in
mov
test
data16
sub
pop
in
dec
cmp
mov
add
insl
pop
stos
jl
xor
into
sbb
pop
pop
and
or
idivb
push
movsb
sahf
pop
pop
dec
jmp
arpl
sbb
sub
jl
movl
xor
loopne
mov
int3
inc
or
xor
dec
jno
dec
inc
xor
lds
aas
imul
sbb
mov
add
notl
mov
adc
int
fdivl
adc
test
stos
aad
stos
pop
xchg
fiaddl
clc
sbb
push
bound
das
mov
push
inc
cmp
xor
push
scas
jl
pop
outsb
xchg
test
cmpsb
add
xchg
stos
inc
push
int3
pop
cmpsb
cs
cmpsl
leave
rclb
mov
jle
outsb
stos
push
and
lods
mov
js
or
and
xor
mov
sub
es
nop
scas
jecxz
je
ret
push
in
int
and
push
int3
dec
imul
shll
mov
push
inc
dec
movsb
dec
push
cmp
push
in
test
adc
movsl
mov
pop
les
pop
mov
popa
add
shrl
ret
imul
pop
cmp
pop
xchg
xchg
adc
jnp
into
scas
outsb
adc
rep
mov
mov
jg
imull
sbb
adc
stc
mov
adc
push
jno
fistpl
mov
dec
rorl
ret
jnp
fs
xchg
or
fidivrl
imul
xchg
sbb
aad
test
mov
dec
js
adcl
push
push
xor
mov
loopne
xchg
adc
push
fs
mov
adc
mov
lahf
push
push
fistpl
mov
inc
sbbb
push
push
gs
stc
pop
dec
mov
jo
pop
jmp
cmp
les
insl
jl
push
in
fs
mov
cmp
mov
in
pop
cltd
ficompl
lcall
sbb
sub
daa
dec
enter
lahf
test
cltd
scas
pop
pop
test
das
call
out
rorl
out
sub
or
call
adc
and
mov
roll
dec
shlb
and
loope
jp
les
call
adc
movsb
icebp
js
xor
pop
jmp
xor
sub
dec
fimull
ret
add
fmull
sub
insl
mov
or
mov
and
data16
popf
imul
add
inc
mov
test
sub
adc
or
jl
sbb
mov
pop
pop
mov
sub
jo
dec
xorb
mov
roll
mov
mov
js
lahf
mov
and
jl
sbb
cs
ds
imul
push
imul
js
fidivrs
sbb
push
mov
jno
pop
or
sahf
fiaddl
cmp
out
fimuls
mov
push
imul
and
shrb
ja
cld
adc
push
inc
mov
fisttpl
shll
mov
mov
jnp
insb
scas
es
icebp
in
out
or
clc
add
dec
into
mov
xchg
jnp
lcall
sbb
loope
pop
or
fwait
mov
movsl
dec
lods
iret
icebp
mov
hlt
dec
mov
bound
loop
and
and
sub
jno
andb
mov
push
jmp
or
xor
and
cltd
inc
inc
cltd
fildl
adc
addl
sub
add
cmpsl
out
cmpsl
loopne
cmp
mov
out
dec
cmp
xor
test
out
test
inc
scas
std
fcom
fucom
or
fisttpl
aad
lods
add
mov
add
cltd
mov
mov
sub
xor
lods
aam
push
je
mov
sub
fcompl
dec
sub
inc
lcall
inc
pusha
and
mov
hlt
mov
mov
add
push
movsb
scas
jl
dec
neg
fldt
movsb
sub
es
dec
pusha
andl
aas
mov
repnz
jp
mov
clts
js
inc
xchg
inc
push
adc
sub
pop
outsb
sub
stc
cmc
xchg
incb
mov
iret
adc
fld
mov
int3
insb
loope
push
setne
inc
xchg
add
cmp
push
fstl
push
ficoml
aas
cld
cwtl
fistpll
mov
incb
mov
mov
fiaddl
les
imul
out
decb
test
leave
push
jmp
adc
mov
pushf
cmpsl
repz
push
and
cltd
nop
xor
imul
xor
jg
push
mov
inc
mov
dec
lods
cli
add
testb
mov
gs
pop
out
sbb
mov
push
sahf
add
push
adc
orl
orl
or
mov
cmpsl
ficoml
xchg
jne
push
add
push
mov
xchg
inc
iret
mov
cmpsb
lock
sub
mov
mov
sbb
mov
ljmp
xchg
mov
and
ss
fs
out
and
mov
movsl
jge
sub
jecxz
sbb
add
in
movsb
data16
scas
lock
cmp
repnz
pop
gs
inc
das
sub
xchg
xlat
je
jp
imul
jae
cltd
inc
dec
fidivl
sbb
sub
and
hlt
push
cmpsb
inc
insl
dec
mov
xchg
push
and
mov
cmc
pusha
mov
test
inc
fisubl
sahf
stos
mov
rcll
enter
in
shlb
mov
pop
aaa
ja
push
jae
stos
dec
lods
decl
dec
and
jne
cwtl
xchg
sub
loop
jmp
cmp
repz
test
mov
test
jge
and
sti
sub
xor
mov
movsb
push
loope
cmp
in
pushf
jg
cmp
adc
out
repnz
xor
fstl
sub
xor
ja
insl
jb
sub
mov
addb
imul
mov
sarl
sub
xchg
and
push
xor
cmp
add
jg
daa
push
adc
mov
push
jle
adcb
bound
mov
pop
cli
inc
inc
movsl
xor
test
cs
push
daa
mov
rcrl
and
push
cwtl
xor
imul
and
sbbb
push
and
mov
movsl
fadds
sbb
jl
nop
roll
scas
sbb
int
jno
inc
mov
and
push
or
add
inc
push
cmpsb
lahf
hlt
lahf
into
inc
jb
imul
pop
lea
ljmp
sahf
push
lea
push
mov
jae
inc
loop
dec
xor
stc
into
je
xorb
cmp
push
and
add
jo
adc
pop
cmp
daa
cmp
clc
adc
out
stos
lods
or
dec
out
jecxz
repnz
mov
addr16
push
add
adc
les
addr16
pop
mov
mov
nop
sub
movsb
dec
and
mov
adc
clc
xlat
and
clc
shlb
mov
dec
lret
jecxz
mov
xchg
imul
sub
popf
out
mov
jge
mov
loope
sub
rcrb
rcrl
jae
push
cmp
test
inc
xchg
sbb
inc
dec
fs
inc
jecxz
pushf
jno
push
jl
dec
inc
and
in
add
les
les
test
push
rorl
add
or
decb
add
mov
dec
mov
fstp
and
jg
sub
dec
adcb
rolb
jle
inc
inc
mov
mov
in
adc
jge
out
mov
and
out
lea
leave
push
pusha
adcl
inc
jle
cltd
xchg
fs
cmpb
sarb
popf
mov
shl
mov
orb
jno
push
daa
inc
or
inc
mov
pop
cmp
jg
or
ret
mov
aam
inc
mov
jge
and
fnsave
fisttpll
fyl2xp1
jp
mov
fwait
mov
cmpl
jge
test
dec
es
sbb
mov
mov
popf
inc
jl
insb
pusha
and
or
cmp
and
aas
xchg
xor
test
add
xchg
mov
rolb
ficoms
aam
js
xchg
mov
sarl
pop
pusha
mov
iret
ljmp
xor
add
jnp
inc
inc
adc
pop
add
xchg
movsl
dec
cmp
xchg
test
dec
jp
mov
rclb
mov
fcompl
shr
sub
lahf
push
cmp
adc
inc
pop
ja
push
je
adc
adc
mov
int3
roll
stc
loope
push
pusha
mov
pop
mov
mov
loop
sub
imul
movsl
out
mov
addr16
mov
ds
and
push
fimuls
cmp
jne
cmc
mov
jae
fldcw
in
int
inc
ljmp
data16
fdivl
xchg
add
fistl
icebp
inc
rcl
dec
nop
mov
cltd
aas
cmc
jmp
js
or
cld
xor
jno
mov
cli
test
pop
sbb
cwtl
insb
ds
daa
inc
mov
dec
pop
mov
push
in
lcall
jbe
call
push
mov
cmp
cmp
jae
inc
xor
adc
mov
mov
mov
andb
pusha
pusha
scas
adc
cmp
aaa
out
je
js
fimull
mov
mov
fstpt
pop
add
jle
mov
dec
add
or
mov
xchg
mov
ja
push
add
into
cltd
bnd
pop
xchg
push
jp
icebp
add
inc
imul
pop
inc
orl
pusha
out
or
dec
xchg
stos
popa
or
jl
mov
pop
rcrl
dec
mov
dec
pusha
xchg
inc
cmp
sub
sub
les
mov
adc
sbb
out
push
fisubs
arpl
push
push
mov
jg
and
int3
imul
mov
ljmp
pop
add
cmp
sbb
je
nop
stos
mov
sub
mov
dec
in
dec
mov
fcomps
mov
pop
push
pop
in
inc
popf
sbb
int3
mov
rcrl
cmc
push
popf
xchg
push
xchg
adc
sbb
push
push
pushf
ret
xchg
in
movsl
mov
mov
jp
xchg
test
movsb
test
jae
movsl
repnz
sbb
dec
sti
sub
cmp
call
cmc
pusha
aam
push
inc
ljmp
aas
jg
repz
mov
sti
xchg
mov
loope
cmpsl
push
cmp
mov
inc
pop
jl
push
jl
cs
adc
fsts
int3
lret
inc
add
pushf
fucomi
nop
pop
gs
adcl
add
mov
push
test
jae
mov
mov
pusha
clc
lods
mov
pop
lea
lret
or
lock
mulb
jp
iret
adc
sahf
inc
cmc
add
jmp
xchg
insl
out
xlat
bound
imul
enter
xor
arpl
outsb
mov
or
push
lret
das
sub
js
and
cs
dec
or
sbb
mov
repz
sbb
out
push
ficompl
sub
adc
xchg
adc
mov
sub
xor
jle
jp
jns
xchg
mov
int
imul
loopne
loopne
xchg
mov
xlat
pop
imul
xor
fidivl
mov
push
pop
jno
adc
dec
fimull
ds
aam
jo
sti
shll
push
cld
fisttpll
push
and
repz
nop
neg
cld
dec
mov
sbb
sub
pop
mov
addl
add
loope
test
cmpl
pop
push
insb
popa
sbb
aam
arpl
sub
adc
imul
sbb
jb
int3
dec
push
movl
mov
ljmp
scas
in
in
pop
push
stos
push
ja
mull
gs
pop
jo
shrl
add
push
addb
cltd
rcll
jae
jbe
loopne
mov
push
imul
ja
mov
and
push
pop
sarb
lock
inc
pushf
clc
outsl
lret
dec
shlb
dec
sub
add
jae
cmpsb
lds
push
mov
orl
pop
loop
push
cmp
xchg
push
sub
inc
dec
mov
ds
ret
subl
outsb
sbb
adc
jbe
fisttps
hlt
and
jae
mov
hlt
fimuls
icebp
fildll
fstps
adc
mov
mov
fwait
dec
mov
ss
lahf
outsb
push
clc
push
es
dec
jmp
out
idiv
and
dec
add
out
jno
pop
mov
xor
pushf
push
mov
cwtl
or
inc
jno
popf
jg
or
ds
pop
cmp
xor
dec
add
cmc
lock
xchg
fsubs
or
notl
pop
inc
rdmsr
mov
sbb
inc
jle
addr16
inc
pop
sbb
sbb
jnp
in
stc
popf
cs
jecxz
dec
out
sub
scas
ja
adc
cmp
jl
loop
cmp
idivb
dec
mov
mov
ret
mov
adc
loope
fldcw
mov
pop
rorl
pop
dec
ret
mov
out
inc
cmp
pop
js
pop
mov
push
fdivrp
mov
scas
ret
jno
inc
lret
sub
sbb
inc
js
das
rcrb
shlb
and
inc
shl
push
dec
movsl
addr16
dec
arpl
jmp
lret
rolb
std
inc
es
mov
je
icebp
mov
mov
adc
test
int3
fidivs
cmp
push
adc
or
adc
test
pop
dec
mov
or
cmp
cld
mov
fnsave
xchg
pop
inc
jae
dec
outsl
cs
pcmpgtb
dec
jmp
lea
sub
xor
int
and
jecxz
lea
stc
aas
or
test
and
sub
ret
xchg
daa
cmpsl
mov
inc
test
push
jl
mov
dec
jo
mov
xor
es
bound
add
cmp
cmp
mov
jno
xor
dec
ret
pop
cld
enter
mov
jg
mov
insl
dec
cmpb
shll
adc
into
cmc
icebp
jl
pop
xchg
xor
sub
inc
stos
ret
jp
mov
imul
daa
or
sbb
je
insb
stos
xchg
and
loop
mov
mov
ret
dec
dec
cli
dec
rcrl
inc
adc
ds
dec
daa
adc
aas
mov
orb
dec
jecxz
push
std
dec
call
popf
cmp
mov
sbb
jle
jb
andl
sbb
nop
inc
outsl
push
loope
xchg
idivl
sub
dec
cmpsl
ret
test
and
ljmp
xchg
loopne
cld
fcomi
sub
ret
fildl
fld
mov
cld
add
fcom
adc
jl
pop
sbb
mov
pop
das
adcb
jno
jb
dec
pop
add
out
sub
test
rcrl
sub
adc
dec
scas
add
inc
call
ja
sbb
push
mov
mov
and
inc
adc
cmc
xchg
pop
push
mov
js
jbe
into
mov
cmp
mov
sub
mov
adc
add
adc
into
push
push
stc
sub
mov
jno
bswap
cmpsl
test
mov
stos
dec
inc
or
sbb
and
jo
inc
cmpsl
mov
out
out
cmp
sbb
mov
fucomp
sbbb
test
xor
pop
cld
imul
push
negl
ror
inc
ds
inc
insl
fwait
jmp
inc
repz
mov
dec
out
es
shll
stc
iret
fcmovne
lahf
aam
data16
pushf
xor
out
fs
imull
jo
out
sti
sub
jg
dec
sbb
add
mov
sti
enter
imul
xor
fs
notl
adc
icebp
or
dec
test
std
mov
in
pop
aam
pushf
inc
bound
sbb
rorb
inc
iret
pop
nop
aad
jge
mov
ss
mov
push
popa
es
fbstp
push
dec
mov
cmp
lahf
in
test
or
fisttpl
pop
aaa
ret
adc
jl
mov
mov
fisttps
movsb
movsl
adc
ficoms
mov
fs
mov
imul
mov
mov
out
xchg
out
add
cmc
jl
xor
pusha
xor
mov
mov
mov
inc
clc
addl
in
lods
xchg
jg
sbbb
pushf
aam
push
jne
inc
pop
sub
aam
nop
mov
xchg
pop
cmp
push
in
in
mov
icebp
adc
add
xchg
stos
mulps
inc
repz
or
stos
mov
pop
sbb
stc
mov
cmpsl
out
mov
and
insl
mov
out
arpl
out
test
fs
orb
lea
inc
iretw
push
cltd
and
cmpsl
pop
mov
outsl
push
xchg
xorb
mov
jne
pop
mov
sub
ss
pusha
and
pop
iret
adc
lea
sbb
sub
or
lret
insb
fmull
dec
cwtl
mov
jecxz
clc
jb
mov
ja
stos
imul
xchg
fwait
adc
jns
fdiv
mov
add
sub
lock
fs
pop
jns
stos
or
fwait
pop
or
jmp
inc
bound
sbb
daa
aam
mov
inc
adc
xchg
push
js
xor
or
jmp
repnz
add
jo
jecxz
dec
mov
add
inc
mov
bound
shrb
mov
sbb
sub
mov
idiv
mov
cs
mov
jnp
cld
inc
cmp
dec
arpl
cmp
pop
or
push
negl
xor
mov
dec
sub
mov
orl
mov
adc
xchg
sbb
mov
das
jecxz
fistpl
jns
stos
cmpl
fildl
ret
jecxz
stos
lret
push
xchg
pop
test
mov
dec
mov
or
cmp
scas
ficoml
stos
pop
inc
shufps
sub
fistps
xchg
lcall
push
out
push
and
push
adc
lods
pop
jp
adc
ds
and
push
fistl
mov
push
fisubrl
fisttpl
sub
mov
lods
adc
push
mov
sub
sbb
push
jo
adc
mov
sahf
int3
rcll
cli
xchg
loope
cmp
cmp
shl
pop
dec
xchg
dec
cli
sahf
pop
push
stc
loopne
cmp
fwait
pop
loopne
jb
mull
lret
push
stc
jno
rolb
loopne
jno
add
jle
pop
push
iret
leave
sbb
imul
pushf
and
ror
jb
cmp
sub
mov
shll
mov
dec
inc
pop
orl
sahf
pushf
in
inc
fs
add
repz
adc
jl
jl
mov
popl
repnz
int3
mov
ret
cltd
or
cmp
nop
std
cmp
dec
cmpsb
cmp
int3
pop
frstor
push
adc
enter
pop
inc
aaa
pop
xchg
mov
mov
rorb
mov
cmpsl
push
fwait
nop
cmpsb
xchg
jno
mov
jle
mov
mov
jno
fcoml
scas
push
xor
jae
mov
push
fmull
adc
add
aam
stos
jmp
mov
pop
jbe
inc
sbb
jl
mov
in
lds
add
push
xlat
jo
fwait
mov
aad
inc
shll
mov
cs
cmc
test
jmp
aam
pop
dec
cmp
and
arpl
shll
into
into
xor
lock
fsubl
jle
je
adc
jb
pop
insl
out
mov
sub
mov
loopne
pop
dec
in
mov
ja
into
mov
push
pop
dec
xor
cmp
cmpsb
xor
push
cmp
and
xchg
hlt
sbb
jge
sub
sbb
or
lahf
leave
jge
je
fld
xchg
es
push
mov
mov
stos
ljmp
inc
mov
cmp
out
pushf
cmpsb
add
adc
adc
rcr
aam
and
cmpsb
sub
jno
js
push
mov
out
mov
movsb
mov
push
inc
mov
inc
jge
or
pop
xchg
repz
pop
adc
xchg
in
mov
sbb
mov
sar
add
xchg
sbb
icebp
cmp
scas
std
xchg
xor
aad
call
push
bswap
and
test
add
popa
mov
mov
cmc
aaa
mov
cmp
es
out
sbb
cli
lret
out
dec
imul
cli
add
pop
add
push
add
mov
mov
arpl
pop
mov
movsl
repz
sub
push
dec
jno
dec
push
jl
orb
jo
sub
arpl
dec
xchg
mov
jns
mov
xchg
or
push
ret
mov
iret
xchg
cmpsb
andl
out
sti
movsl
loop
jns
xchg
sahf
xchg
pop
ja
push
and
inc
cmpsb
mov
dec
pop
jno
mov
fwait
and
mov
mov
arpl
test
mov
inc
xchg
inc
inc
enter
and
out
dec
cmc
mov
mov
ja
mov
jbe
pop
cmp
jb
ljmp
dec
add
sbb
mov
nop
cmp
loopne
mov
or
adc
fisttps
mov
enter
lods
ret
je
dec
inc
int
dec
test
or
mov
jnp
ret
xchg
add
stc
adc
rcl
add
sbb
stos
xchg
popa
les
inc
adc
dec
xchg
inc
lods
sbb
mov
mov
mov
dec
or
adc
pop
pop
fldcw
add
mov
sub
mov
int3
rorb
jae
lret
mov
cmpsl
ss
lcall
sarb
pop
ja
rorl
add
cli
cmp
sbb
icebp
insb
into
movsl
pop
fdivs
movsb
dec
loopne
cmp
dec
push
mov
mov
jecxz
hlt
mov
xor
push
ret
movsb
aaa
insb
loopne
push
stos
lds
cmp
mov
icebp
jbe
jl
lds
scas
and
arpl
push
xchg
sbb
jle
scas
or
call
scas
and
cmpsb
scas
and
push
sub
inc
lcall
sbb
dec
stos
out
mov
enter
sbb
imul
out
and
cmpsl
mov
jecxz
add
sub
push
fistl
test
fld1
popf
inc
les
adc
or
icebp
movsl
das
or
sbb
xchg
fyl2xp1
insl
stos
pop
iret
cmp
stos
cmp
jnp
stc
cs
fwait
push
mov
mov
imul
add
dec
add
adc
lret
lret
iret
shlb
and
xchg
cmp
sti
fsubl
mov
repz
or
loop
test
les
lock
loopne
adc
mov
sub
leave
adc
scas
imul
in
hlt
mov
ja
add
filds
sbb
fmul
jae
rcll
fisttpll
mov
loopne
clc
popf
jns
push
sarb
pop
outsb
xchg
dec
add
dec
pop
out
jne
ret
mov
mov
push
outsl
cmc
sbb
stos
push
jg
mov
adc
insb
int
iret
dec
fbstp
mov
rcll
xlat
inc
pop
jmp
sbb
inc
imul
fcoms
jno
jle
dec
loopne
outsb
mov
and
fists
dec
out
mov
and
test
stc
push
sub
fistps
jmp
xor
les
gs
fcomps
dec
addb
adc
xchg
dec
fldcw
call
hlt
xor
xlat
xchg
dec
loop
sub
push
sub
aam
and
sti
add
in
sub
repnz
dec
xchg
mov
dec
pop
pop
adc
frstor
pop
sbb
movsb
mov
test
jg
pop
imulb
xchg
or
pop
rcrl
mov
jl
inc
jg
in
mov
out
inc
mov
dec
dec
push
sbb
mov
xchg
popf
sub
cmp
lret
ja
leave
lahf
push
cmp
jbe
in
push
or
movsl
pop
add
cs
xchg
or
out
xchg
testb
push
orl
pop
lahf
lock
or
push
add
sbb
loopne
cmc
mov
sbb
in
call
call
popf
lea
sti
sbb
mov
pop
mov
lret
push
lcall
cmp
pop
jg
mov
int3
push
mov
adc
jl
xchg
shl
mov
rorb
in
imul
push
mov
jo
or
fcmovnb
adc
pop
bnd
dec
dec
mov
jnp
push
push
adc
mov
les
sti
cmp
jg
mov
mov
repz
movsl
aam
xchg
add
in
inc
inc
data16
inc
ja
repz
adc
mov
pusha
jl
inc
sbb
iret
stos
fidivrs
outsl
mov
add
loopne
je
sub
xchg
repz
inc
xor
fst
lret
sbb
mov
flds
loopne
dec
repz
leave
mov
cmp
sarb
cli
xlat
mov
shrl
pop
adc
mov
dec
mov
pusha
sbb
mov
pop
cmpsl
push
xchg
pop
movsb
inc
sti
mov
cmc
cmp
ret
test
adc
mov
mov
jno
jno
xor
jmp
or
icebp
push
or
xor
dec
cmp
jg
ficomps
scas
jnp
and
mov
cs
lds
inc
adc
push
cmp
imul
popf
aad
popa
arpl
ss
add
or
xorb
mov
cmp
push
stos
jl
xchg
xor
roll
dec
push
mov
pop
inc
push
cmp
xor
stos
out
clc
mov
ljmp
sbb
cwtl
or
adc
cltd
fwait
pusha
push
push
push
lret
pusha
cld
jge
into
sbb
jl
push
inc
mov
xor
pop
xor
push
icebp
mov
push
push
dec
and
and
scas
ljmp
pop
mov
movsl
mov
dec
fidivrs
pop
idivb
mov
xor
fstps
inc
jns
pop
push
sub
dec
pop
push
push
loopne
cltd
mov
and
jnp
movsb
mov
clc
push
dec
loopne
inc
into
jno
outsl
pop
mov
mov
xor
or
stos
push
push
aam
mov
mov
inc
sub
and
aad
jp
addr16
jb
mov
and
sub
into
stc
icebp
cltd
movsb
pop
add
xchg
imul
insb
jl
loope
adc
inc
sbb
or
jbe
mov
ja
sbb
inc
jl
jl
lock
dec
ficoml
jns
mov
ret
pushf
mul
lods
add
mov
imul
je
push
mov
in
int3
arpl
lods
daa
push
or
xchg
es
mov
les
push
adc
mov
mov
mov
adc
imul
mov
xorb
xchg
lret
mov
in
je
cmp
mov
cltd
fidivrl
gs
mov
dec
mov
cmpsl
cld
shl
pop
ss
pop
jno
jle
fiaddl
xchg
adc
ret
or
mov
fldcw
push
in
fwait
mov
or
xor
cld
mov
mov
sbbb
inc
xor
cmp
push
xor
daa
dec
arpl
cltd
lock
imul
popf
xchg
in
cmpsl
mov
mov
push
jnp
sahf
ss
cmp
mov
mov
out
ret
or
pop
pop
fs
push
inc
cmpsl
mov
xor
pop
jle
mov
insb
sub
jmp
loope
sbb
sub
jle
cwtl
fnstcw
xchg
mov
cltd
mov
lods
lret
imul
mov
inc
or
scas
xchg
rcrl
shrl
aaa
adc
jl
cwtl
xor
pop
mov
out
aaa
or
out
and
loope
cmp
scas
sub
into
jmp
add
lret
add
sbb
fisubs
and
fbld
test
jmp
jno
dec
fisubl
enter
fs
enter
sub
jno,pn
push
cli
pusha
mov
cmp
test
dec
jns
aam
inc
pushf
sbb
test
imul
cmp
jmp
mov
cmpsl
imul
pop
mov
fimuls
xchg
loop
add
ja
mov
jae
xchg
xor
sti
push
pop
or
mov
cmpsl
xor
dec
dec
xor
dec
inc
fwait
mov
pop
inc
pop
icebp
repz
push
aaa
xor
jns
in
xchg
popf
pop
mov
mov
mov
jno
pop
dec
mov
inc
sub
test
mov
idivb
pop
push
hlt
sbb
fdiv
jmp
push
leave
es
data16
ljmp
jbe
mov
ret
cli
sub
jno
and
int3
call
dec
sbb
sbb
cmp
lods
dec
add
data16
and
pop
lock
push
ret
pop
push
imul
insb
sub
out
sti
fucomi
in
pusha
in
pushf
in
cmpsl
cltd
aas
lods
idivl
inc
inc
sub
inc
mov
rcl
jp
cmp
xrelease
imul
sti
into
popa
scas
fisttps
add
or
jge
adc
cld
pop
fmull
jmp
fs
add
out
out
sub
jle
and
test
daa
sub
pop
sbb
je
jmp
mov
cmpsl
pushf
outsl
iret
dec
adc
inc
dec
mov
pushf
sti
push
std
xchg
sub
xor
mov
or
mov
mov
pop
inc
arpl
pop
dec
or
bound
jnp
mov
add
pop
imul
mov
addr16
imul
and
mov
pop
and
or
sbb
jnp
mov
shll
mov
sub
cmc
pop
popa
shlb
inc
mov
cmp
rol
sbb
mov
pop
mov
cs
repnz
nop
enter
pop
imul
xchg
sti
mov
push
xchg
int3
cmp
dec
mov
pop
rcll
enter
adc
pop
xor
ret
pop
lahf
jmp
push
jno
rol
mov
mov
cli
pop
ljmp
aam
or
jbe
ret
mov
sbb
mov
stc
mov
inc
pop
jg
out
rorb
je
test
jb
xor
cmp
popf
fwait
nop
xchg
dec
dec
push
jmp
inc
mov
mov
push
push
lret
mov
in
inc
mov
scas
push
dec
sbb
fsubs
scas
mov
sbb
dec
fistl
jne
test
jns
fisubrs
xchg
sub
dec
or
push
cmp
jg
pop
ljmp
mov
pop
pop
and
icebp
fisubrs
arpl
adc
and
adc
mov
push
adc
mov
jnp
popa
inc
jecxz
dec
jge
cmp
add
push
cmp
ret
shlb
ds
push
clc
fwait
fs
or
adc
jbe
cld
addb
out
sub
jp
sub
rcrb
push
xor
sub
jmp
xchg
xchg
add
je
push
add
aad
add
cmpb
mov
mov
sti
adc
push
jle
inc
mov
pusha
jns
push
sbb
aaa
dec
lcall
sbb
push
jbe
dec
xor
out
outsb
mov
fdivs
mov
mov
lret
pop
clc
in
mov
adcb
xlat
adc
dec
xor
out
pop
test
out
popf
das
insb
push
sub
nop
inc
test
mov
fiaddl
mov
xchg
sti
push
fidivl
orl
xlat
movsb
jge
pop
pushf
iret
mov
push
stos
push
loopne
shr
mov
cmp
lods
sub
pop
cmpsl
adc
jmp
mov
dec
mov
fistpll
mov
mull
int3
andb
fbstp
fs
and
xor
mov
push
pop
pop
mov
sbb
mov
and
jno
sbb
out
aam
adc
cmp
jno
and
add
jmp
das
in
pop
jg
clc
xor
mov
mov
sbb
loopne
xlat
adc
add
cmc
or
inc
or
jl
dec
dec
mov
lds
mov
movsl
cmp
push
pop
jg
inc
mov
scas
dec
mov
jmp
xor
call
sahf
int
js
jno
in
test
xchg
lock
shll
mov
notl
add
aam
adcb
push
xchg
pushf
movsb
cmc
or
call
mov
rcr
sbb
maxps
jmp
sti
divl
cli
push
lods
fwait
mov
inc
sbbb
add
adc
nop/reserved
cmp
inc
lret
nop
inc
shll
addr16
sub
ret
outsl
jo
aam
jbe
aad
xlat
pop
ret
movsl
xor
add
push
sub
push
jge
push
add
ret
sbbl
add
fsubr
pusha
dec
shrl
inc
sbb
data16
pop
jo
cmp
push
lret
mov
je
ja
cli
fsts
data16
cmp
inc
push
sub
mov
cltd
dec
cmp
sbb
cmpsl
xor
and
fstpt
jne
dec
adc
int3
pusha
pop
ds
lahf
fdivs
inc
jmp
push
pop
ds
jl
es
out
push
pusha
ja
or
pop
xchg
dec
and
mov
js
mov
cmpsl
and
pop
pop
lcall
es
mov
cmp
nop
mov
xor
jno
dec
add
int
pushf
data16
out
imul
adc
repz
inc
pusha
pop
test
cmp
jecxz
mov
mov
stos
mov
mov
mov
mov
dec
jg
pop
lds
inc
dec
push
cmp
cld
pusha
jbe
mov
aaa
into
jns
int
sbb
push
arpl
mov
xchg
pop
cli
xor
push
call
fidivs
ss
dec
mov
testb
add
xor
jne
cli
mov
outsl
mov
mov
cmp
dec
cld
mov
or
push
out
loopne
lods
fdivrl
mov
cmpsl
rcrb
lret
jge
cwtl
pushf
lea
arpl
sub
mov
mov
push
cmp
pop
sbb
mov
ret
rorb
out
sbb
out
rorb
adcl
pusha
cmc
mov
mov
inc
movsl
outsb
dec
dec
pop
adc
or
bound
jb
lret
mov
xchg
cltd
mov
je
push
sbb
inc
dec
jo
or
and
popa
cld
cmp
sbb
rolb
lea
sub
daa
repnz
pslld
pusha
std
xchg
pop
out
pop
ja
or
adc
push
add
pop
mov
dec
jnp
loopne
fmul
sbb
pop
or
dec
push
or
xchg
sbb
jae
xchg
dec
mov
dec
test
nop
jg
cmp
dec
in
das
fcoml
adc
pop
repz
stc
fs
incb
jl
pop
insl
jle
lods
mov
aam
test
mov
nop
push
mov
mov
and
jns
cs
in
or
adc
int3
cmp
inc
dec
test
sbb
mov
lcall
stos
aaa
cs
ja
fdivs
jb
fwait
sub
adc
orb
and
imul
mov
xor
push
loopne
mov
jl
pop
aas
push
fisubl
aam
pop
inc
or
movsb
rol
add
int3
mov
mov
jg
ja
adc
mov
arpl
pop
mov
pop
enter
xchg
idiv
dec
and
xor
sbbb
jl
mov
and
cmpsl
xchg
xchg
fcomp
pop
lds
pop
inc
mov
stos
adc
mov
sti
fwait
dec
cltd
jae
push
cmp
imull
pop
or
inc
mov
cwtl
push
xchg
sub
or
sti
fwait
sbb
dec
fwait
int3
sub
add
sbbb
and
dec
fs
scas
shll
jg
push
imul
jl
sbb
inc
add
std
clc
aam
shll
adcb
pop
repnz
mov
std
nop
or
push
sub
mov
fwait
jns
es
test
mov
iret
jae
inc
bound
pop
and
jmp
insb
enter
repz
dec
push
inc
cmpsl
gs
jnp
idivl
mov
mov
ds
dec
imul
aad
movsl
inc
sti
ljmp
inc
xchg
arpl
mov
inc
push
xor
into
icebp
in
mov
cmp
push
mov
dec
aad
mov
xchg
jl
cli
jl
jbe
xchg
cltd
inc
rolb
mov
xor
pop
das
mov
cmp
add
push
and
fstl
stc
inc
les
cmp
jbe
jl
jne
imul
aad
pop
les
cmp
push
and
jecxz
jnp
mov
mov
xor
jae
mov
popf
dec
sbb
ja
xchg
and
arpl
cmpsl
xor
xchg
pop
pop
fstpl
adc
sahf
or
jp
pushf
push
xchg
mov
in
ljmp
and
stos
clc
xor
push
inc
ja
jno
xchg
fwait
mov
arpl
xor
bound
xchg
ljmp
jmp
cmp
sbb
adc
sbb
test
scas
jbe
dec
sbb
sahf
and
rorb
jb
mov
add
adc
stc
enter
adc
cmp
jb
aad
push
les
mov
add
xchg
inc
add
movsb
adc
mov
jns
test
cmp
xchg
inc
jmp
pop
ljmp
sahf
ror
pop
mov
shll
loopne
cmpsl
jp
sub
lahf
mov
cmpsb
shl
or
add
fmuls
mov
adc
lret
sahf
push
pop
or
push
shll
cmp
inc
push
inc
jle
jbe
push
subb
mov
sahf
imul
pop
add
pop
mov
sub
push
lods
into
pop
xchg
je
push
fwait
gs
mov
pushf
adc
inc
cmp
hlt
rolb
cwtl
fwait
rcll
add
xor
mov
sbb
or
pop
jl
dec
or
fwait
cltd
xchg
xchg
sbb
nop
ljmp
add
mov
add
js
lea
loope
dec
mov
pusha
repz
mov
into
in
push
push
notb
sbb
and
sbb
nop
aad
cmp
ret
inc
cmpsl
mov
fistpl
pop
and
jo
adc
xchg
lahf
jp
nop
pop
mov
sbb
mov
aaa
jns
cld
mov
mov
out
pop
mov
push
das
push
mov
jge
aam
jmp
inc
js
imulb
ror
jmp
mov
cltd
lods
out
xlat
xchg
sbb
addr16
add
mov
cmp
movb
adc
dec
mov
lret
push
cmp
and
ds
lods
nop
push
xchg
loope,pt
cmpsb
xchg
push
js
xchg
xlat
dec
xchg
loope
scas
add
into
repz
and
xchg
sub
imulb
lods
pop
pop
cmp
in
subb
mov
fwait
or
xchg
fwait
sbb
dec
fcomp
sub
and
push
mov
loope
sti
add
stos
xor
int
lods
cmp
dec
xchg
out
pop
mov
stos
xchg
and
mov
mov
sbb
cmp
es
add
xor
jmp
jb
fstp
push
jnp
push
mov
sub
adc
dec
sti
mov
cmp
sbb
jmp
xchg
xor
in
cmpsb
jg
popf
int3
sub
mov
push
mov
hlt
dec
push
and
into
cmp
dec
add
dec
xor
sub
or
sub
mov
inc
or
and
and
xchg
push
xlat
ja
jle
jl
jp
jbe
jb
and
negb
mov
lock
dec
popa
fbld
xchg
push
push
ret
cmpl
pop
scas
push
fstl
adc
shr
jecxz
push
lock
iret
fwait
xchg
out
dec
sbb
mov
out
mov
fimull
mov
dec
mov
adc
pop
lret
cmp
xor
inc
push
xor
or
int
fldl
mov
jmp
ss
lods
negl
sahf
scas
cs
loopne
fsubrl
aad
add
push
sub
mov
cmc
dec
or
lret
and
mov
lea
notl
mov
jo
pusha
pop
mov
or
or
inc
repz
in
rorl
sub
cmc
xlat
lcall
add
inc
and
mov
cltd
loopne
cld
and
xchg
jo
es
push
sbb
inc
nop
sarb
lret
test
cmpsb
shrl
arpl
add
mov
stc
mov
dec
dec
jge
imul
ljmp
jmp
dec
sbb
mov
jns
lahf
in
or
ja
xchg
pop
and
mov
sti
mov
xchg
popf
clc
sbb
dec
pop
cmp
cmp
cltd
and
out
or
shrb
and
cmpsb
add
sbb
jns
ror
iret
jl
iret
repz
jg
cltd
ds
leave
sub
fwait
pop
insl
popa
lds
adc
iret
dec
decl
jnp
mov
in
push
arpl
push
cmpxchg
hlt
jmp
mov
push
pop
ret
pop
loope
and
push
scas
mov
mov
mov
out
push
mov
pop
dec
outsb
sbb
pop
fcmovb
out
fiaddl
or
add
xchg
dec
imulb
scas
and
dec
sub
sbb
aam
stos
cmpsb
dec
and
cmp
xchg
ja
and
sub
lcall
push
movl
jb
jl
fimull
testb
enter
rcrl
mov
and
fs
pop
fwait
or
lods
dec
jnp
aam
jno
cmp
pop
and
dec
fs
mov
cmc
lret
sub
mov
ret
cmp
hlt
gs
dec
add
pop
add
aas
fidivs
mov
push
mov
push
nop
push
jmp
inc
fmul
mov
in
stc
imul
iret
mov
cmpsl
je
loopne
int3
cltd
and
mov
xchg
adc
mov
mov
and
sub
push
cli
fwait
icebp
daa
sbb
jecxz
jbe
fmuls
xchg
mov
popf
rcll
add
aaa
push
pushf
test
aad
mov
fiaddl
ss
jmp
fidivrs
add
or
jle
aas
repz
mov
lahf
adc
jmp
push
and
adc
or
pop
mov
pop
or
lret
ds
addb
sbb
inc
sub
ljmp
test
inc
je
jae
out
rcr
push
add
out
aad
test
pop
or
popa
es
jg
lret
adc
sbb
or
cs
sbb
lss
hlt
movsl
xchg
test
pop
cwtl
mov
mov
dec
mov
pause
in
orl
add
roll
pushf
cmp
or
int
push
inc
lea
push
mov
jmp
subb
sbb
push
sub
xchg
lret
dec
lahf
outsl
add
mov
push
je
sub
jmp
xchg
fidivrl
lods
loopne
clc
inc
sub
lahf
in
std
ss
mov
idivl
lock
cmp
xor
dec
jge
test
insb
pusha
rorb
imul
sub
repz
ljmp
inc
sub
dec
push
ret
sbb
movsb
xchg
sahf
dec
out
popf
mull
in
popa
jecxz
pop
cmp
ret
jge
or
lods
jp
add
mov
mov
cltd
aad
sub
sub
ret
daa
icebp
jo
cwtl
mov
and
sbb
dec
pop
mov
pop
mov
jle
inc
mov
sti
fcomip
decb
out
add
cmpsb
lods
stc
lods
out
addl
test
inc
inc
test
lcall
outsb
cmp
push
jb
pop
int
cwtl
mov
mov
sbb
shrl
push
jl
repz
cmpsb
lods
stos
fcomps
jle
aas
mov
jnp
xchg
adc
jne
stc
in
jl
or
mov
add
loope
add
hlt
pop
push
arpl
mov
repnz
xor
xor
mov
inc
loopne
push
sahf
sub
clc
data16
jl
add
push
sub
jl
cmp
sub
jge
ret
sub
dec
mov
mov
sub
jmp
rcrb
cltd
testl
mov
insb
ja
sbb
dec
cmc
mov
fwait
jbe
pop
add
imull
xor
dec
mov
add
ret
mov
fidivrs
stos
je
imul
xchg
fistpl
or
idiv
pushf
dec
in
sbb
push
pop
pop
ljmp
loopne
fnstsw
data16
pop
sbb
jns
mov
xchg
lret
push
mov
xor
xlat
push
inc
pop
das
and
roll
mov
nop
mov
in
lds
jnp
imul
aam
pop
adc
sub
inc
aaa
outsl
cmpsb
lods
pop
lods
mov
icebp
movsb
pushf
fisubrl
repnz
xor
popl
sub
mov
inc
or
inc
fimuls
xchg
jle
xchg
in
dec
xchg
hlt
sbb
add
popf
push
or
mov
je
pop
mov
into
mov
inc
or
jmp
hlt
mov
mov
dec
mov
jnp
mov
lcall
cmc
xlat
adcb
roll
je
test
sbb
fisubrl
mov
cmpsl
adc
jle
jg
mov
ja
mov
push
xchg
push
popa
ja
jns
adc
or
pop
push
in
cmpsl
mov
cltd
call
mov
pop
mov
sub
cs
sbb
mov
ret
lahf
inc
jl
pop
mov
pop
cld
pop
scas
mov
stos
cmp
and
dec
arpl
scas
arpl
add
aad
xor
stc
mov
les
fwait
cli
push
movsb
mov
hlt
fiaddl
mov
pop
sahf
sbb
mov
mov
and
and
stc
repz
mov
mov
xchg
mov
cmp
pop
sbb
cmc
clc
orl
aaa
imul
pop
jb
pop
jno
dec
and
fndisi(8087
inc
outsl
mov
stos
jmp
lock
aas
jmp
jns
shlb
movlps
mov
daa
and
pop
and
imul
movsb
mov
mov
mov
inc
xchg
push
ja
cmc
pop
cld
jg
jp
ss
scas
cwtl
outsl
xorl
fnsave
xchg
or
jnp
sbbl
pop
xchg
cs
jp
pushl
loopne
repz
and
repz
mov
mov
rolb
out
data16
aam
rorb
pop
jge
push
pinsrw
lea
sub
clc
pop
ret
xor
adc
dec
or
mull
inc
imul
enter
inc
cmp
clc
xchg
fs
fimull
dec
insb
int3
andl
call
rorl
scas
mov
js
lcall
test
mov
in
pushf
dec
imulb
jb
mov
es
jg
mov
mov
jno
mov
cmp
insl
cmp
out
adc
iretw
pop
pop
mov
ret
cmp
jno
in
mov
ljmp
and
mov
lods
jb
cmp
jp
inc
dec
mov
add
rcrl
dec
pop
fnsave
pop
adc
jg
jl
fdiv
adc
add
jns
out
jno
jl
add
fsubs
mov
imul
cs
mov
mov
cmp
push
jbe
cmp
cmp
mov
mov
pop
aam
or
aas
dec
mov
push
aam
push
cli
add
outsl
xchg
sbbb
pop
mov
dec
mov
pop
or
sbb
mov
lret
stc
push
xchg
pop
mov
sbb
ljmp
add
mov
setnp
jns
mov
jmp
lcall
pop
jge
sub
aas
mov
or
cltd
mov
and
dec
out
push
mov
lds
and
mov
mov
sub
inc
fcoml
mov
mov
lea
imulb
jno
imul
jecxz
mov
icebp
fildl
jmp
fwait
xchg
imul
jb
mov
out
sbb
mov
cwtl
or
enter
cmp
pop
mov
jecxz
fdivl
add
mov
divl
mov
sbb
or
jmp
xchg
jnp
adc
sbb
es
cmp
ret
std
xchg
adc
aaa
cmp
xchg
jno
test
mov
mov
test
jno
or
xor
inc
push
and
outsb
movsb
jnp
and
fs
pop
cmp
mov
cmp
inc
testl
add
adc
shlb
sub
test
les
data16
mov
outsl
add
aaa
negb
jmp
mov
jle
cmp
mov
sbb
push
xor
push
lods
xchg
adcl
rcrb
add
arpl
mov
jle
xor
pop
test
repnz
enter
sbb
es
imul
push
or
dec
fbstp
mov
xor
jge
or
insb
ss
fwait
add
mov
loop
sahf
pop
adc
mov
jg
xchg
mov
push
mov
push
adc
out
push
jmp
adc
mov
movsl
inc
mov
ret
push
inc
arpl
shll
push
jae,pn
cwtl
jne
mov
dec
add
pop
dec
xchg
xlat
sbbl
int
pop
je
sbb
call
mov
dec
push
dec
inc
gs
mov
cmpsb
fnstsw
cmp
or
sub
pusha
dec
cltd
sub
dec
mov
cmp
sbb
mov
inc
xchg
jmp
inc
push
in
jl
faddl
cmp
add
sub
mov
loopne
or
cmp
sub
dec
addr16
es
sub
jno
icebp
pop
stos
and
cmp
aad
sub
xchg
ja
mov
shll
mov
cmpl
sub
cmp
addr16
popf
movsl
mov
add
out
mov
jmp
push
mov
movsb
jno
add
stos
xor
dec
mov
dec
lret
sub
ds
sbb
icebp
out
fcmovnu
sahf
lahf
pop
fwait
xchg
orb
dec
and
and
inc
sub
call
xchg
sarl
out
xor
jmp
lahf
pop
inc
jmp
adc
sub
cmp
push
mov
push
loopne
negl
fs
xor
adc
xor
push
outsl
and
aad
inc
lcall
and
cmp
add
cwtl
jno
pop
xchg
inc
push
xchg
lcall
stc
cmp
ss
mov
aam
cmpsb
jnp
adc
es
int
pop
mov
leave
pop
in
add
loopne
cwtl
clc
dec
aam
jae
into
dec
jo
mov
inc
xor
push
test
sub
stos
push
add
adc
inc
int
fs
sbb
pusha
and
push
mov
data16
xor
cmp
and
test
jp
fimull
dec
inc
fwait
mov
ja
xchg
nopl
jmp
jo
inc
bound
mov
jecxz
sub
dec
call
mov
pop
scas
push
mov
pop
bound
dec
inc
push
ljmp
nop
dec
scas
rcrl
imul
sub
jge
rorl
lahf
pop
inc
or
mov
push
loope
cmp
fcoml
clc
data16
mov
push
pop
sub
insb
lea
stc
dec
inc
adc
flds
pop
mov
push
movl
outsb
inc
ja
and
pushf
push
out
not
pop
xchg
jge
or
sbb
mov
mov
mov
dec
scas
cmp
sub
mov
sbb
jle
adc
cmp
scas
shrl
int3
adc
outsl
mov
leave
adc
imul
hlt
fwait
xorb
js
es
mov
leave
jg
xor
pop
dec
jl,pn
xor
mov
cld
movsb
lret
jbe
jge
scas
arpl
in
xchg
ret
loope
xor
cmp
hlt
outsl
or
cmp
inc
inc
inc
cld
mov
mov
jnp
xchg
xchg
and
and
mov
pop
dec
push
movsb
loop
paddd
sarb
loopne
pop
hlt
aas
das
inc
es
mov
xlat
or
dec
jmp
push
imul
imul
jmp
xchg
xor
andl
lods
mov
iret
pop
xchg
in
xor
jg,pn
loop
xor
and
or
aam
rcl
or
sub
cltd
pushl
sub
add
cmpsl
lret
push
add
pop
out
mov
fwait
icebp
push
fcmovb
inc
add
and
sti
xchg
jno
mov
out
rep
jae
cmp
ret
mov
mov
mov
or
inc
xchg
mov
mov
ja
dec
loop
pop
dec
push
push
mov
pop
les
cmc
or
mov
dec
inc
movsw
imul
mov
and
pusha
into
xor
cmp
jbe
mov
scas
test
pusha
pop
sbb
xchg
js
push
mov
jnp
pop
shrl
xor
pop
sub
dec
sti
jae
jg
xchg
add
in
pop
add
sub
mov
mov
xchg
jnp
add
mov
cwtl
stos
bound
jne
mov
ret
mov
aam
jns
jno
sub
pop
rorl
fwait
popa
or
cld
gs
js
test
jno
repz
shlb
jbe
out
fadds
rcrl
or
int
jns
test
xchg
push
out
enter
sub
dec
decl
pop
je
sbb
stos
push
sbb
or
or
mov
mov
ret
out
cwtl
jae
and
rorb
add
inc
cmc
jl
push
dec
mov
imul
jmp
dec
sbbl
mov
xchg
iret
idiv
mov
movb
push
fidivs
adc
in
push
push
outsl
sti
jmp
add
mov
pop
xchg
mov
xlat
int3
or
out
pop
cwtl
inc
int3
jne
or
hlt
sti
dec
xor
inc
push
lret
xchg
loope
sbb
sbb
xchg
cs
jae
leave
ljmp
jne
scas
test
ret
push
mov
lret
jle
fs
stos
ss
dec
sub
sbb
or
sub
adc
jmp
sbb
movsl
xor
mov
cwtl
jmp
push
xlat
ds
mov
mov
push
adc
pop
dec
jecxz
jp
inc
sub
fwait
xor
adc
pop
testl
pushf
repz
mov
pop
sarb
mov
es
lahf
fld
mov
add
mov
xor
or
imul
mov
out
es
cmpsl
sbb
push
jge
imul
mov
in
sub
pop
push
out
fsubl
ja
icebp
sbb
mov
dec
push
push
adc
dec
sbb
fidivs
imul
xchg
add
gs
xchg
inc
pop
adc
lods
inc
push
stc
cmpsl
test
push
jg
leave
jae
ljmp
mov
push
lock
std
ja
mov
push
mov
push
xchg
fstpt
pop
add
int
cmp
in
mov
and
push
out
mov
leave
imul
and
mov
xor
int
sbb
shll
mov
mov
dec
arpl
jmp
ljmp
neg
push
cmc
lcall
inc
mov
xchg
cmp
out
repz
lret
or
mov
test
dec
in
movsb
jecxz
ret
loop
clc
and
xorl
mov
xor
rorl
sti
mov
or
pop
xor
loope
arpl
out
and
dec
mov
mov
push
or
test
stc
or
adc
mov
cs
push
aad
je
addl
xchg
inc
inc
test
jb
mov
movb
imul
push
xor
cmp
ja
lcall
mov
ljmp
aad
push
jbe
mov
mov
sbb
mov
push
adc
test
push
iret
jbe
popf
aaa
in
sub
push
mull
fcmovnb
stos
dec
jg
jp
cwtl
lret
inc
push
movsbl
icebp
xor
sub
les
pop
mov
or
and
fxch
cltd
cmp
dec
or
jmp
outsl
or
pop
cmp
mov
lcall
jl
inc
cmpb
mov
mov
movsl
add
dec
data16
or
jg
popf
pop
cmp
ja,pn
sbb
xor
and
iret
pusha
push
mov
push
dec
pop
outsl
push
jnp
shrb
loope
adc
movb
xlat
iret
mov
xchg
mov
fisttpl
imul
fidivrl
xor
into
cli
adc
cs
sahf
arpl
call
jbe
sub
inc
lods
shll
pop
fwait
push
sub
sbb
xchg
pop
testl
shlb
aaa
ds
mov
mov
aad
adcb
pop
imul
mov
aas
jecxz
cs
pop
int3
mov
dec
pop
cmc
bound
push
adcb
imul
lret
push
mov
xor
fs
xor
sahf
dec
gs
out
mov
dec
es
data16
sahf
orl
lret
and
jns
jl
add
or
push
add
aad
gs
out
rcll
jge
jecxz
popa
iret
sbb
fldl
adc
jbe
sbb
xor
add
pop
pop
pusha
xor
or
cmp
or
loope
gs
jb
dec
outsl
push
aad
push
xchg
cs
ja
bound
inc
cmp
jl
mov
sub
mov
and
dec
xlat
enter
leave
lods
mov
cmovnp
sub
nop
out
dec
sub
mov
rorl
xor
jnp
loope
dec
loopne
ja
ds
aam
cmp
or
adc
pop
call
idivl
fucomip
mov
pusha
mov
lret
lods
mov
add
jg
icebp
in
sbb
mov
cmp
cltd
mov
data16
pop
sbb
sub
loope
mov
ror
adc
cmp
jnp
mov
rcrl
push
into
stos
fsubrl
orb
pop
dec
cmp
pop
cmp
inc
push
int3
cmp
in
inc
inc
mov
mov
and
push
xchg
push
push
cmp
adc
les
push
fstl
js
jns
icebp
fists
push
dec
inc
inc
or
sarl
and
add
mov
xchg
add
mov
sbb
sbb
lds
mov
jl
fnstsw
push
adc
xchg
aas
lods
push
cmp
xchg
movsb
pcmpgtd
adc
mov
sbb
mov
shlb
fwait
inc
pop
mov
aam
dec
xchg
jl
data16
lahf
sbb
icebp
cltd
jb
cmp
add
push
loope
scas
sbb
dec
lods
mov
adc
and
daa
cld
icebp
pop
add
es
movsb
iret
loopne
mov
in
dec
jb
into
cmpb
shll
pusha
data16
out
jp
inc
mov
call
loope
jae
sub
pusha
leave
adc
fadd
jae
sbb
push
add
outsl
or
scas
mov
repz
inc
sbb
clc
jno
jp
aam
mov
cmpsl
inc
xor
stos
xchg
fdivr
fdivl
vxorps
int
dec
push
stos
flds
xor
lea
mov
push
pop
adc
xchg
arpl
aaa
xor
icebp
cld
inc
lahf
jl
sbb
aam
ja
mov
sbb
cmc
push
mov
cmp
pop
mov
fiadds
push
push
xor
mov
out
sbb
nop
pop
xchg
aam
or
jno
or
and
sbb
mov
inc
mov
imul
call
push
loop
push
mov
fdivrl
cmpsb
push
dec
mov
nop
mov
sub
aaa
mov
mov
mov
push
shlb
or
push
xchg
dec
jne
jle
mov
stos
nop
or
xchg
pop
sbb
jae
adc
test
into
dec
jg
xchg
movsb
and
into
sti
jae
into
or
subl
push
mov
push
sbb
cmpsb
jbe
xchg
dec
mov
adc
iret
add
dec
pushf
mov
in
jg
data16
roll
sbbl
jno
fcmovbe
in
fwait
and
sahf
xchg
inc
pop
inc
cli
std
jns
jg
jp
out
scas
iret
xlat
pop
stos
push
stc
cli
adc
mov
imul
add
into
inc
jnp
mov
insl
xor
lret
das
jmp
stos
addr16
dec
imul
pop
gs
and
sbb
adc
xchg
dec
cmc
cltd
in
lea
inc
ljmp
imul
movsb
mov
fnstenv
scas
jmp
in
das
dec
jo
test
adc
fimull
pop
lret
mov
or
pop
adc
ret
rclb
and
into
rclb
imul
shll
cld
insb
sub
scas
rorl
jno
sbb
addr16
dec
cwtl
adc
mov
pop
movsl
mov
movsb
lret
mov
inc
mov
movsl
mov
fcomi
mov
sbb
pslld
icebp
cltd
aas
ret
mov
push
cmp
xchg
es
xchg
xor
popa
adc
dec
mov
xchg
jnp
in
add
cmp
and
mov
std
sbb
pop
cmp
lea
add
mov
fldt
mov
bound
push
les
xor
addr16
fs
xchg
xor
ret
mov
adc
jae
je
xchg
cltd
call
or
aam
jno
add
mov
xor
stos
mov
movsl
pop
jle
mov
dec
xchg
mov
scas
inc
inc
adc
adc
inc
inc
in
pushaw
cld
in
jnp
insb
clc
int
std
pop
cmpsl
and
add
mov
push
xor
mov
xor
sbb
mov
sbbb
pop
sarb
roll
push
or
jns
mov
movsb
and
sub
test
xor
lahf
popf
and
mov
or
out
stos
adc
pop
push
fisubrs
cltd
repz
shrl
or
ret
cmp
pop
js
jge
dec
push
mov
mov
or
cmc
aam
out
jae
daa
mov
lret
sbb
fmuls
les
jl
inc
xchg
push
jo
pop
inc
and
pop
xchg
lods
out
das
inc
incb
mov
cltd
adc
and
fcoml
fucom
mov
insl
inc
push
in
mov
lods
loop
mov
int3
lret
sub
add
dec
icebp
push
pop
imul
jno
jno
cwtl
rcll
mov
loopne
out
mov
mov
or
daa
inc
cmp
inc
insb
mov
mov
test
hlt
std
inc
lahf
lea
mov
std
cmpsb
dec
pop
mov
movsb
mov
aam
jno
test
xchg
xchg
outsl
in
icebp
fs
fldl
call
cs
fildll
hlt
push
cmp
mov
repz
dec
mov
les
or
fisttpl
jo
idivb
dec
push
fistpll
dec
dec
push
dec
stos
rcrl
inc
and
insb
mov
pop
sub
pusha
mov
add
fwait
xchg
fisttpll
jno
pop
inc
mov
pop
int3
mov
movsl
xchg
loop
and
sbb
arpl
mov
dec
pop
dec
dec
jbe
xchg
or
movsl
jle
adc
mov
repz
daa
pusha
or
idivb
xor
out
push
mov
mov
xchg
cltd
popf
dec
mov
mov
or
dec
loope
dec
adc
jp
adc
es
mov
jecxz
in
cmpsl
mov
call
dec
pop
lods
or
data16
add
fimull
jne
imul
inc
imul
pop
adc
icebp
and
fucom
xchg
out
pop
push
adc
fidivl
mov
add
add
mov
inc
dec
add
fwait
loopne
sbb
das
mov
or
clc
cld
mov
push
cld
cli
or
out
sti
mov
push
int3
and
sarl
push
fbstp
idivl
imul
mov
lcall
or
pop
mov
inc
dec
add
pop
sbb
sti
push
dec
sub
jg
addr16
adc
mov
shll
mov
xor
shrl
xchg
and
push
mov
clc
mov
jb
movsl
or
hlt
mov
fcoml
aas
clc
mov
lea
pop
clc
adc
and
pop
roll
test
sbb
xor
pusha
jae
lcall
std
adcb
mov
mov
pop
inc
sub
mov
cmp
fdiv
nop
push
jo
jbe
aad
leave
mov
shrb
jp
roll
cmp
imul
loopne
mov
cwtl
pop
xchg
cmp
xchg
xchg
movsb
data16
mov
inc
add
push
sti
inc
ds
cmp
outsl
popa
inc
pop
xor
scas
sbb
pushf
xchg
push
mov
mov
and
dec
imul
in
shlb
cmp
in
cmp
lds
pop
mov
loop
cmp
rorb
test
and
inc
adc
mov
loope
fbld
sti
jp
subl
les
clc
pop
sti
fsubl
hlt
sub
cmp
mov
out
push
dec
sbb
adc
cmp
cmp
mov
shr
int
xchg
lret
push
stc
jg
jle
adc
test
negl
inc
adc
out
xchg
mov
and
stos
sbb
sbb
hlt
cmpsl
jno
mov
outsl
scas
jne
lock
stos
fcompl
fmull
sub
sar
xchg
mov
mov
popa
mov
inc
push
pop
outsl
cs
int3
mov
xchg
jnp
inc
cmovbe
pop
in
pop
fimull
mov
pop
outsl
fwait
mov
ror
adc
loop
fisubl
lods
mov
or
lock
dec
jno
dec
dec
sub
inc
jae
pop
shr
mov
addr16
cltd
add
xor
nop
sarl
mov
push
shrb
push
adc
jmp
incb
or
xor
hlt
xor
daa
push
lea
cmp
repnz
push
pop
mov
or
push
jmp
xlat
jg
scas
or
mov
cmp
mov
xchg
mov
sbb
inc
iret
mov
sti
dec
fstl
fcompl
test
orb
dec
int3
push
push
add
sub
stc
fidivl
jp
orb
mov
cmpsl
jl
mov
loop
shll
mov
cmp
mov
sbb
xlat
dec
orl
xor
rclb
xor
pop
jnp
mov
mov
mov
xlat
push
adc
dec
push
push
in
fimuls
mov
mov
arpl
mov
dec
sbb
mov
sti
pop
je
push
fisttpll
arpl
in
stos
dec
or
and
lcall
mov
stos
mov
push
imul
fstpl
cs
mov
pop
mov
xchg
out
mov
lret
add
les
pushf
mov
inc
in
add
out
push
push
ss
popa
pop
movsl
lret
jns
mov
push
push
mov
jae
shlb
loope
mov
rcrl
dec
sbb
cmpsl
jmp
aas
in
jae
in
ja
mov
dec
mov
nop
and
xchg
dec
dec
inc
xor
fcom
roll
in
pop
jl
mov
nop
pop
cmp
mov
ljmp
inc
mov
pop
shrb
pop
xor
or
cmp
jl
xor
mov
dec
mov
test
inc
nop
lahf
adc
nop
push
pop
fidivs
push
dec
mov
dec
cmp
jb
rol
xchg
jecxz
cli
adc
nop
push
mov
int
imul
dec
cmp
cs
fs
hlt
sbb
imul
scas
push
pop
call
push
mov
test
inc
pop
mov
test
adcl
xchg
gs
jns
fsubrl
push
sub
aam
mov
lcall
inc
mov
jae
sbbb
jb
je
mov
push
mov
pop
mov
cltd
add
ret
lock
mov
cltd
jg
cmc
xor
mov
mov
lea
mov
loope
mov
loop
shl
xchg
push
fs
or
mov
cmp
int
push
sbb
push
jnp
jg
neg
orl
push
insb
mov
xchg
pop
and
leave
fs
dec
dec
jmp
xchg
jge
loop
sub
pop
cmc
ljmp
inc
sbb
mov
and
jl
and
icebp
mov
inc
jecxz
jecxz
dec
xor
leave
mov
lock
mov
push
jo
pop
dec
pop
inc
in
fidivs
pop
divl
mov
insb
insl
mov
add
and
inc
js
and
cmp
xchg
cltd
adc
es
xor
and
inc
in
xchg
push
test
dec
cmp
or
add
adc
pop
pop
rolb
inc
popl
icebp
or
mov
sub
pusha
testl
addr16
mov
test
popa
pop
mov
sub
xlat
stos
pop
loope
mov
iret
inc
rcrb
push
inc
push
mov
aad
pop
pop
mov
xchg
mov
inc
or
test
popf
shrb
lds
out
xor
pop
fmuls
je
idiv
dec
jl
jg
fistps
xchg
or
mov
sarl
rcll
mov
cmp
lea
or
add
data16
outsb
xor
xchg
jle
dec
dec
ljmp
shlb
dec
dec
mov
push
cmc
imul
jo
inc
scas
int3
push
fndisi(8087
add
fwait
add
ljmp
jb
inc
pop
in
mov
pop
or
cmc
jle
mov
std
je
xor
xor
fimuls
or
or
stos
stc
stc
push
pop
jns
arpl
arpl
push
push
fimull
pop
int3
add
push
push
and
scas
inc
lock
std
cmp
aad
add
cmp
mov
repz
mov
push
fnstenv
adc
sub
lods
pop
fnstsw
xor
inc
cs
fcmovb
mov
mov
shll
cmpsb
sarl
dec
pop
add
out
imul
inc
sub
addl
insb
push
leave
push
iret
push
hlt
push
xchg
pop
dec
enter
std
inc
ljmp
mov
xor
jae
and
loopne
mov
cmpsl
aad
sarl
leave
jno
mov
loopne
lea
mov
jl
sub
sub
fiadds
out
inc
add
repnz
pop
ja
mov
adc
mov
adc
xor
inc
sbb
sbb
ret
and
insb
cmp
repz
bound
xor
mov
iret
lcall
incl
cwtl
outsl
dec
jns
pop
call
mov
mov
lret
xchg
cli
rcll
aam
mov
in
into
jae
jmp
inc
stc
sub
lahf
out
jno
lcall
adc
fnsave
js
mov
mov
int3
or
stos
lock
jnp
pop
cmc
mov
popf
mov
mov
ficoml
mov
push
dec
aam
inc
jg
shlb
js
fisttpll
sbb
dec
cmc
fdivr
cmc
sbb
sub
mov
jl
mov
push
mov
ret
mov
sbb
mov
jb
into
mov
jnp
sarl
sbb
into
cmpsb
or
or
push
jmp
jg
ss
jb
mov
popl
mov
in
fwait
dec
push
jns
lret
jno
pop
mov
fdivrs
in
jo
shr
not
push
rcll
pop
mov
imul
cmp
sarl
mov
jecxz
dec
mov
mov
mov
in
lods
and
jmp
stos
jp
pop
es
or
inc
mov
mov
push
mov
call
test
std
outsb
clc
mov
call
icebp
mov
mov
mov
addr16
fs
adc
xchg
js
pop
mov
mov
repnz
jb
mov
pop
rorl
leave
xor
dec
pop
test
fwait
es
xor
add
or
cmp
pop
mov
faddl
stc
adc
jl
imul
cld
xor
sarb
decl
push
sbb
push
xor
es
or
push
mov
mov
sub
mov
lahf
mov
mov
cmc
mov
push
adc
sbb
add
fstpt
dec
push
dec
inc
push
iret
shll
or
xor
xchg
or
lcall
loope
into
cltd
xchg
out
cmp
inc
add
stos
leave
imul
sbb
iret
add
xor
inc
ret
dec
cmp
push
pop
icebp
mov
xor
pusha
mov
pusha
cmpsl
jg
inc
cmp
std
pop
loopne
adc
subl
mov
cwtl
and
enter
adc
add
xchg
jg
shll
sbb
jl
idivb
rcll
jle
mov
bound
jbe
pop
sbb
insl
xchg
bswap
stos
sub
je
dec
pop
xchg
add
mov
imul
out
xchg
jbe
dec
cmpsl
ret
sub
and
mov
sbb
loop
imul
jno
push
mov
mov
push
lds
hlt
add
dec
test
stc
sti
pusha
mov
das
lods
out
aas
fsubrs
or
out
test
dec
into
imul
jbe
and
in
inc
push
loop
cmc
cmp
ja
sbb
cmp
fdivp
or
sbb
pop
mov
sub
dec
sub
inc
or
insl
movsb
mov
fistps
fdiv
mov
aam
sti
sub
jg
outsb
jne
inc
mov
or
xchg
mov
sar
and
mov
sbb
mov
in
mov
es
push
cmp
add
int
fwait
sub
dec
loopne
push
mov
insb
mov
pusha
jno
movsl
fcoml
aas
add
and
jns
fidivs
adc
scas
popf
adc
pop
lahf
stos
pop
or
aad
add
stc
adcb
mov
fwait
into
push
cs
fst
push
lret
imul
push
inc
mov
in
add
jae
mov
and
ljmp
sbb
inc
push
or
fisttpl
repz
dec
adc
adc
push
jle
stc
repnz
pop
add
add
fists
enter
sti
push
out
fldcw
es
mov
test
fwait
mov
addr16
or
stos
push
add
pop
repz
jnp
iret
pop
nop
aas
mov
cltd
mov
fidivl
scas
imul
mov
mov
mov
push
sbb
add
loope
inc
aad
andl
clc
and
hlt
sbb
cli
hlt
pop
sbb
pop
jg
out
dec
xor
scas
mov
push
cmp
lahf
jno
pop
ss
pop
scas
jmp
jne
or
add
jmp
notb
rolb
loope
dec
bound
outsl
test
test
mov
jbe
jge
incl
add
pusha
jmp
mov
dec
ficoml
cmp
push
mov
test
mov
movsb
pop
ss
repnz
lods
mov
icebp
cltd
cmp
pop
out
fstl
xor
lods
clc
loope
mov
rol
pop
add
dec
cmp
inc
sub
jmp
lock
and
cmp
or
cltd
cmpsb
sbb
jp
cwtl
mov
ja
inc
xor
xor
inc
cmpsb
or
enter
mov
pop
xor
mov
std
jmp
jge
xlat
cmc
jnp
mov
mov
mov
pop
and
mov
sub
cwtl
pop
xchg
xor
mov
push
add
leave
fwait
sti
insb
sbb
cwtl
lods
int3
int
ficomps
mov
jle
mov
dec
inc
cmp
sahf
out
mov
add
dec
into
mov
mov
jnp
dec
mov
pop
gs
cmpsb
inc
push
push
ret
dec
ljmp
xorl
fcompl
psrld
jle
jl
push
mov
pusha
mov
leave
arpl
xchg
sbb
in
je
adc
mov
dec
les
or
pop
int3
inc
pusha
xor
fmull
int
jge
dec
jg
inc
mov
fisttpl
lods
mov
jmp
mov
mov
mov
out
inc
mov
inc
imul
cmpsb
dec
shlb
test
sbb
sbb
pop
dec
dec
push
xchg
cltd
jno
rcrl
jno
push
add
das
or
mov
das
add
rclb
ja
cmp
cmpsb
adc
bound
jo
inc
or
imul
leave
jecxz
loope
and
test
out
push
fwait
mov
jle
imul
mov
orb
fwait
push
adc
mov
adc
sarl
ret
hlt
mov
nop
cmp
jnp
push
inc
ja
pushf
lret
mov
inc
nop
out
fsubp
dec
dec
loopne
aam
daa
and
sub
xchg
xchg
xor
test
xor
lock
into
and
movl
inc
inc
lret
mov
sub
test
push
mov
shrb
pushf
outsl
cmc
or
sub
insb
fists
icebp
or
test
mov
cmp
shrl
cmovo
imul
jno
lods
pop
cwtl
jnp
sub
inc
xchg
inc
push
adc
je
mov
xor
out
push
ljmp
popa
div
out
jb
test
sub
insl
mov
jno
rolw
cs
cltd
adc
sub
in
dec
and
jae
orl
jnp
adc
or
lea
inc
fistpll
movsl
sbb
jns
jbe
ds
clc
jl
bound
push
or
push
and
loope
xchg
and
xor
inc
push
xor
and
mov
lahf
mov
jle
std
fprem1
pop
aaa
movsl
jg
sub
rcrl
fwait
mov
or
fstps
sti
cwtl
sub
aaa
sti
dec
mov
outsb
cmc
add
daa
gs
jb
xor
fidivrl
mov
sti
sarb
xchg
nop
or
inc
dec
sbb
hlt
pusha
xchg
mov
cmp
pop
push
xchg
test
xor
dec
pop
dec
pop
mov
push
dec
sbb
icebp
data16
je
ret
call
mov
es
dec
repz
jns
aam
in
loope
mov
out
in
mov
movsb
mov
cmp
jge
dec
lods
mov
mov
repz
xchg
cmpb
cld
enter
outsb
adc
stos
xchg
test
fbld
sub
jbe
push
lods
fmull
push
leave
daa
inc
mov
cmpsl
orb
jne
pop
pop
stos
mov
mov
adc
sti
sbb
insb
sub
push
or
aaa
inc
add
add
fs
daa
and
xchg
push
lock
mov
mov
or
or
jne
movsl
cs
fnstenv
inc
imul
push
cmpsb
lds
and
jl
xchg
in
jb
mov
sti
ret
or
mov
xor
xor
jl
cmp
xor
add
mov
fcmovnu
mov
test
sbb
lret
mov
mov
jnp
and
lods
add
jmp
fdivl
outsl
call
mov
mov
xchg
ffree
mov
mov
add
stc
cmc
popf
mov
movl
movb
push
mov
mov
dec
mov
jno
xchg
sub
adcb
cmp
pushf
aas
push
fwait
cltd
push
adc
nop
mov
rcrl
cld
push
pop
ret
xchg
movsb
sub
fidivl
cmp
inc
jno
test
nop
dec
jmp
pop
xor
fcomps
cmp
fsubl
pop
imul
jb
data16
test
xlat
hlt
mov
inc
loop
gs
adc
imul
scas
add
lods
movsl
fsubs
jmp
pop
aad
inc
daa
ljmp
icebp
dec
outsl
xor
adc
pop
dec
add
dec
mov
cmp
inc
inc
push
popf
push
test
repz
fs
adc
sub
js
lea
push
pop
adc
out
push
std
subl
icebp
dec
repz
mov
scas
pop
mov
xchg
cmpsl
sbb
pop
std
mov
nop
pop
in
inc
fwait
sub
adc
pop
xor
dec
aad
jae
mov
cmp
dec
mov
sbb
lahf
fs
icebp
out
jmp
push
lods
xchg
pop
dec
inc
push
in
adc
push
in
bound
xor
sub
ss
loop
les
jg
cld
pop
mov
iret
lods
repz
adc
sub
test
xor
pop
call
xchg
and
lret
jnp
mov
dec
fidivrs
hlt
mov
bound
jmp
xor
pusha
lds
and
jg
out
cmp
divb
es
insb
mov
adcl
mov
loope
fidivl
xchg
mov
and
repz
insl
cmp
mov
jl
ret
mov
sub
dec
ror
xchg
lods
js
pop
push
add
fisubs
wrmsr
xor
lret
pop
xchg
ja
cmp
ss
fs
scas
or
iret
cmp
fmulp
imul
cmp
test
add
lds
pop
out
daa
push
cmc
into
and
and
decl
mov
inc
dec
call
in
and
add
pop
test
sbb
inc
push
iret
stc
pop
fdivrp
mov
adc
xor
pop
aas
sub
pop
mov
jb
dec
xor
arpl
ret
push
and
xor
push
addr16
cltd
push
inc
jns
sub
jae
test
xchg
shll
js
frstor
std
pop
in
into
mov
mov
loopne
jns
neg
lea
xlat
aad
dec
addr16
jb
cld
je
push
xor
jno
incl
cmp
and
and
sbb
add
imul
mov
inc
mov
inc
pop
mov
js
dec
pop
stos
std
mov
cs
test
sbb
and
jns
adc
cmp
ret
test
stc
loopne
jae
mov
inc
outsl
fwait
xor
pop
pop
push
fmuls
shl
xchg
cwtl
push
pop
add
ss
fcomps
lcall
add
jecxz
cs
stc
jge
jg
data16
mov
pop
orb
pushf
fcoml
mov
inc
movsl
pop
inc
dec
out
cmp
arpl
cld
or
lods
xchg
jo
adc
imul
movsl
mov
cmp
test
pop
mov
mov
test
scas
push
imul
xor
lds
dec
mov
into
push
sbb
jl
fucomp
test
or
pop
or
xchg
into
cs
cmpsl
push
pop
mov
leave
and
inc
test
arpl
dec
dec
gs
or
sub
mov
scas
idivb
nop
push
lret
shlb
push
add
jne
mov
and
movsb
inc
jl
inc
xor
aad
dec
out
and
int
ret
sbb
popa
mov
adcl
mov
sbb
mov
jns
daa
lret
sub
xor
push
fs
loop
pop
cmp
xchg
fs
fadd
inc
mov
add
js
push
lcall
jnp
xchg
ja
sbb
push
lret
sub
cmpsl
inc
popf
popf
xor
fstps
jecxz
push
and
adc
jnp
sub
std
sbb
mov
adc
cmp
jge
mov
dec
or
mov
ja
mov
jae
or
and
incl
lahf
jp
xchg
add
dec
stos
jl
decb
iret
inc
std
inc
or
add
jl
push
dec
push
cmp
jecxz
adc
gs
inc
push
pop
dec
inc
jae
and
test
stos
scas
cmc
and
inc
fs
cmp
add
jmp
add
aad
pusha
movsl
cltd
push
cmc
ja
sub
les
cmp
push
frstor
into
mov
aam
jmp
add
inc
testl
call
mov
sbb
es
rcr
and
lods
cli
sub
cmp
mov
jnp
xchg
push
loope
aad
mov
push
pop
subb
pushf
add
lea
xor
push
ljmp
push
sbb
stos
lods
xchg
mov
iret
mov
xlat
mov
pop
movups
adc
and
rcrl
in
rep
dec
out
pop
stos
cld
std
xchg
pop
add
idivl
cmp
dec
sub
fstpt
xchg
in
jl
stc
push
jecxz
loopne
psrld
dec
cltd
cmc
cmp
outsl
pusha
out
popf
mov
mov
mov
cld
mov
clc
xchg
fdivr
xchg
xor
xchg
pop
jecxz
push
or
mov
sub
sbb
into
mov
lods
out
ret
aaa
adc
out
notb
add
xchg
xchg
dec
dec
sub
xor
sbbb
pop
sbb
mov
hlt
cmp
in
inc
inc
inc
cmpsb
outsl
adc
pop
mov
and
ret
mov
fcompl
leave
fmull
dec
mov
pop
inc
pushf
fwait
cmp
mov
scas
jmp
fisttpll
or
popa
icebp
xlat
adc
mov
sub
and
test
je
push
or
pop
jae
nop
dec
mov
ljmp
push
mov
push
imul
mov
pop
mov
test
ds
jbe
push
addr16
fcoml
cli
pop
mov
sub
push
aad
xchg
inc
mov
mov
xor
sbb
sahf
inc
inc
loopne
outsb
mov
sbb
pop
mov
jbe
sbb
mov
fmul
add
mov
mov
pop
push
inc
jecxz
sbb
add
movsb
mov
or
addb
inc
mov
mov
movsb
pop
jbe
fisttpll
and
pop
fs
and
adc
enter
xor
in
push
cmc
jge
mov
jno
push
pop
mov
dec
mov
jge
or
dec
mov
adc
inc
dec
add
or
lods
mov
mov
cmp
push
xchg
mov
sbb
xchg
cmpsl
fwait
push
jle
dec
into
pop
jmp
sbb
mov
jge
pop
fistl
jne
idivb
mov
scas
pop
push
inc
bound
jge
ja
cmpsb
pusha
adc
cmp
aam
dec
lahf
repnz
mov
adc
test
dec
mov
add
add
hlt
sahf
mov
movsl
ss
xor
or
pop
mov
and
inc
jae
sub
scas
or
hlt
and
adcb
fsubrl
sbb
sbb
cltd
dec
fdivs
sbb
jg
sbb
in
ja
dec
mov
pop
je
or
push
push
cltd
arpl
or
mov
add
dec
or
lret
xchg
ss
push
nop
fs
inc
cmp
lods
pop
loopne
xchg
push
stos
jl
mov
fildl
dec
xor
sti
ljmp
repz
mov
lret
sahf
push
add
add
inc
je
test
xchg
push
push
sub
or
lret
out
pop
push
and
jns
je
or
pusha
xor
fwait
xchg
aas
inc
and
int
nop
lahf
out
and
inc
adc
push
bound
cmp
aas
adc
fiaddl
shrb
sub
dec
inc
int
jbe,pn
adc
adc
mov
es
mov
mov
xor
imul
pop
repz
cmpsb
in
cs
lds
inc
pop
subb
mov
jmp
pop
mov
push
fnstsw
xor
mov
dec
sub
mov
les
mov
mov
or
loopne
mov
mov
enter
aad
dec
add
cmp
mov
add
fisttps
popa
hlt
mov
xlat
ret
iret
jmp
test
mov
push
lret
test
lcall
push
or
pop
cmp
cld
mov
dec
fisttpl
arpl
dec
push
sbb
int3
sbb
in
rcrl
pop
sub
fdivr
jmp
out
clc
cltd
cmp
xchg
mov
jbe
inc
cmp
add
js
mov
xchg
testl
jbe
or
cmc
xchg
addr16
mov
into
pop
pop
stos
imul
mov
push
int3
mov
pop
stos
lahf
push
mov
cwtl
daa
xchg
push
jbe
pop
adc
push
dec
mov
inc
jecxz
aas
js
jg
push
fcompl
xchg
call
sub
daa
fcomps
jbe
inc
dec
pop
cmp
push
and
cld
inc
test
pop
das
dec
pop
xchg
sbb
xchg
cmp
pop
ja
popf
sarb
pop
shll
mov
dec
call
fcmovbe
adc
ja
xor
stos
push
insl
bound
jl
sbb
cmpsb
insb
adc
and
shrl
and
cmp
fwait
xchg
ljmp
idivb
mov
stc
push
mov
loopne
daa
mov
rcrl
scas
xchg
popf
cmp
jnp
fsubs
mov
hlt
test
ljmp
les
jmp
cmpsl
shlb
sub
mov
jno
cs
lods
mov
mov
mov
jg
in
shll
lea
dec
imul
sbb
mov
jmp
mov
hlt
push
fcmovnbe
es
rcrb
jl
mov
out
cmpb
pop
push
in
push
and
add
pushf
or
aad
fs
stos
repz
sbb
data16
cmp
stc
jnp
mov
xchg
jp
or
push
mov
cmp
or
fs
sar
push
stos
std
mov
shlb
xor
dec
push
mov
jae
pop
test
sbb
pop
iret
lods
dec
iret
mov
sbb
pusha
sub
mov
jno
out
xchg
mov
cmc
cmp
lret
xchg
movsl
mov
dec
sub
jge
sub
add
pop
in
sbb
push
shlb
stc
add
dec
dec
push
or
into
stc
jnp
dec
sti
push
add
jno
or
rcrb
mov
push
ljmp
addr16
repz
repnz
push
mov
jb
cld
push
testl
sahf
add
cmc
push
push
imull
cwtl
mov
repz
lahf
inc
sti
icebp
cmc
inc
xlat
sbb
popf
jb
inc
adc
divl
push
test
orb
shr
jmp
ss
dec
add
inc
push
mov
jbe
xor
add
shrl
out
sbb
popf
iret
rorb
push
roll
cmp
dec
cmpsb
in
cmpb
jmp
ja
push
repnz
push
jp
nop
cmp
dec
mov
pop
iret
mov
out
fdivl
sarl
sbb
xor
inc
adc
mov
jle
cmp
dec
push
mov
cmp
or
xor
xor
test
lret
sbb
out
xchg
test
ficomps
jecxz
ret
in
jle
jnp
dec
mov
filds
mov
ss
gs
pop
mov
ss
xchg
les
jmp
dec
inc
xchg
into
nop
or
push
mov
cmp
inc
sub
inc
lahf
inc
add
cltd
cmp
icebp
iret
dec
or
inc
mov
int
mov
dec
sub
das
jb
jbe
lcall
push
bound
sbb
and
mov
addr16
popf
jnp
leave
call
subb
push
jmp
enter
mov
out
mov
loope,pt
and
xchg
xchg
dec
sub
inc
idivb
mov
fildl
aas
loopne
xor
pop
cli
lret
jle
repz
movsb
adc
pop
outsb
imul
and
add
insb
fwait
sub
or
mov
xlat
outsl
jae
push
negl
pop
push
ja
cmc
jb
jecxz
push
xchg
mov
out
out
aam
subl
out
xchg
pop
cli
fisttpl
jg
je
subb
fwait
dec
fiaddl
iret
std
xchg
push
jl
sbb
cwtl
into
push
sub
jl
out
dec
leave
jle
add
fdivrs
es
cltd
out
dec
add
fsubr
and
incl
inc
push
loope
adc
cltd
fdivrs
or
jecxz
rcll
movsl
mov
aam
pop
movb
call
daa
lahf
filds
mov
and
shrl
int3
cld
xor
bound
cmc
popl
mov
mov
xchg
xor
out
sbb
jbe
add
add
es
add
jp
bound
nop
cmp
push
push
cmpsb
ljmp
inc
sbb
adc
and
mov
inc
mov
das
inc
push
sbb
jg
cmc
push
stc
lock
lods
dec
into
cltd
xor
inc
xor
movsl
loopne
push
push
out
pop
sub
jno
pop
pop
mov
add
xchg
mov
mov
in
aas
rcll
sub
jae
fwait
xor
inc
xor
xlat
sti
cld
pop
movsl
mov
js
push
xchg
xlat
jno
repnz
mov
cmpsb
ret
add
or
cs
out
jb
adc
jle
cmpl
cld
icebp
mov
test
loope
xchg
bnd
out
dec
shlb
insb
jno
adc
inc
pop
and
mov
xor
popf
mov
std
clc
das
mov
clc
pop
or
addr16
in
das
sub
pop
adc
adc
rcll
push
bound
subl
xor
push
jb
jl
fnstenv
adc
fstpt
jbe
jno
ss
cmp
jl
push
nop
adc
out
int
xor
jae
repz
popf
inc
xlat
ja
stc
clc
adc
cmp
ret
cmc
mov
in
fldenv
add
test
lahf
leave
ljmp
aaa
xchg
push
jbe
pop
aaa
mov
cmp
aad
mov
or
and
scas
pop
sub
inc
sti
dec
push
iret
push
iret
and
mov
das
mov
cmpsb
ja
mov
fsub
stos
and
mov
jp
loopne
sub
cmp
push
push
mov
dec
mov
pop
push
pop
xor
dec
arpl
aad
adc
jno
sub
std
add
insl
pusha
mov
jnp
push
inc
lret
jne
test
ja
sti
lock
stos
clc
inc
xor
push
call
lret
ljmp
adc
push
fisubl
push
sbb
sub
scas
xchg
sub
sub
arpl
mov
jne
pop
sbbb
cltd
fsubs
push
add
dec
in
or
mov
and
gs
int
aas
sub
iret
or
mov
mov
scas
and
pop
jae
mov
out
mov
call
sbb
fisubrl
jge
je
add
stos
daa
pop
pusha
cmp
sbbl
rep
push
cmp
mov
call
mov
scas
dec
ret
mov
test
cmp
dec
xor
mov
push
mov
or
xchg
lret
in
into
add
xchg
pop
mov
xor
rclb
testl
cltd
cwtl
sbb
pushf
pop
inc
out
roll
imul
and
pop
cs
mov
aas
andl
in
out
out
pop
int
cmp
sub
and
sbb
in
jne
mov
pusha
xor
pop
popl
mov
inc
icebp
lods
out
inc
ja
es
movsl
adc
loopne
xchg
mov
cmp
insl
mov
lock
inc
push
mov
or
cltd
add
push
fisubrl
jmp
or
rcr
dec
add
sub
inc
push
cmp
or
dec
push
inc
dec
xchg
sbb
push
adc
rclb
adcb
jmp
repz
outsl
dec
jno
sub
dec
xor
mov
sub
jl
shrb
mov
xchg
insb
stos
fcompl
addr16
add
mov
int
sub
xor
icebp
push
mov
cmpsl
movsb
jle
dec
dec
fbld
mov
add
popa
pop
inc
arpl
jg
push
test
movsb
pop
out
pusha
iret
int
and
mov
and
push
xor
popa
add
imul
mov
je
adc
inc
inc
fs
push
lcall
add
insw
mov
loop
jae
int3
push
jle
sbb
daa
lds
arpl
mov
inc
lods
nop
lods
bnd
lods
or
bnd
out
jl
testl
jbe
push
fwait
cmp
ds
out
lret
in
mov
or
dec
cmp
mov
and
stos
loop
xchg
adc
adc
daa
cmp
or
out
mov
in
lret
fwait
and
cs
lret
out
pop
fisttpl
loopne
cmc
aad
lret
or
ror
adc
loop
xchg
jle
adc
scas
jb
dec
sub
aad
sbb
in
cmp
jg
xor
aam
insb
pop
or
mov
adc
sub
inc
dec
cmp
cmc
push
mov
mov
xor
clc
push
jns
dec
add
call
lahf
pop
stc
ljmp
addb
loopne
jmp
cli
mov
cld
adc
mov
imul
es
or
sbb
cmpsb
andb
fmull
add
mov
das
or
inc
inc
xchg
das
imul
mov
xor
push
pop
jecxz
push
xor
das
fisttps
inc
test
in
xor
idivb
sub
mov
xchg
pop
jge
pop
pop
sbb
outsb
rorl
cmp
cli
ffree
mov
and
cli
cltd
pop
mov
shrl
das
or
push
inc
mov
pop
cmp
ljmp
inc
in
ds
notl
xor
pop
lret
subb
out
test
stc
cs
add
mov
js
jb
xor
or
test
sbb
gs
pop
scas
xchg
jno
inc
adc
data16
inc
pop
int
mov
inc
push
mov
mov
data16
mov
jo
jmp
pop
imul
mov
call
gs
pop
fisubl
pushf
out
stos
std
enter
punpcklbw
jnp
jl
mov
es
mov
bound
and
in
cs
inc
cmp
xor
inc
mov
cmp
jae
adc
jecxz
push
xchg
sti
fucomi
pop
std
pop
sub
fs
testb
pop
cmp
sub
divb
into
cltd
test
dec
fidivl
fisttps
mov
lret
dec
push
sub
dec
sub
loop
adc
push
addr16
xor
fs
cmpsb
int
xchg
fcomps
lret
jo
int3
fsub
subb
lret
sti
jl
push
xor
jmp
repnz
push
ror
sbb
cmpsl
imul
inc
push
inc
mov
insl
jl
rorl
insl
lret
dec
test
repnz
and
xor
xchg
mov
add
lahf
sbb
mov
shll
adc
inc
jle
adc
push
aad
adc
icebp
sbb
inc
pop
cmp
dec
rclb
shlb
hlt
pop
in
push
mov
jecxz
mov
ja
pop
pop
jne
jae
sbb
icebp
mov
dec
push
fisttpl
js
cmp
cmp
movsb
cmpsl
mov
loop
iret
std
shlb
loope
in
hlt
adc
push
push
jge
pop
ret
nop
clc
faddl
insb
and
pusha
shl
ret
mov
ficoms
shrl
int3
fs
aad
call
mov
clc
push
xor
pop
sti
jl
int
aas
fildll
sbb
jle
cli
cmp
mov
std
mov
adc
mov
jbe
ss
xor
repnz
ret
pop
mov
pop
push
cltd
and
in
bound
pop
sbbb
mov
push
fwait
mov
rcl
and
shlb
aad
cmpsl
lret
fdivrs
pop
fistpl
mov
sub
daa
fdivrp
xor
daa
dec
imul
jbe
jle
sbb
stos
les
push
mov
xor
cld
inc
aad
mov
fwait
jnp
out
out
mov
cmp
aam
push
xor
mov
add
xor
mov
jbe
pop
mov
mov
sub
push
mov
mov
adc
mov
into
dec
lret
lcall
inc
stos
pop
ret
jg
dec
xchg
pop
adc
in
dec
in
pop
push
xchg
std
dec
outsl
mov
pop
inc
ret
xor
cmp
aas
clc
pop
test
fbld
mov
jo
inc
jbe
mov
jnp
rcrb
pop
scas
inc
xor
mov
jmp
data16
cmc
lahf
pop
jle
icebp
ficompl
test
enter
outsb
fs
ret
cmc
xchg
or
jnp
cmp
mov
mov
dec
cmp
shl
sarl
cmp
leave
adc
adc
test
jno
sub
add
cmp
fs
push
jns
xor
jnp
es
sub
lcall
push
scas
sbb
dec
loopne
mov
in
test
mov
xchg
insl
adc
jbe
dec
out
inc
jno
test
jmp
idivl
gs
shl
dec
xchg
adc
sub
adcb
ret
mov
mov
inc
pop
icebp
lahf
pop
push
fbld
outsb
dec
xchg
test
lea
aad
push
xchg
inc
mov
insb
push
leave
mov
loop
roll
push
insb
jae
outsl
mov
adc
out
aaa
bts
pop
imul
aaa
sub
xchg
cli
push
and
and
ljmp
dec
push
dec
stc
movzwl
sbb
mov
insl
fisttps
sub
cmc
pushf
nop
mov
rcl
jle
insl
sbb
iret
add
xchg
push
mov
and
stc
mov
xchg
sbb
fcmovne
rcll
clc
xor
sub
dec
and
mov
jmp
jg
and
push
scas
mov
pop
mov
add
cmp
les
icebp
mov
faddl
sub
jno
xchg
cmc
xchg
loope
dec
repz
jbe
andl
cmp
stos
fbld
adc
push
mov
sub
push
imul
jg
enter
lock
xor
adc
movsb
imul
dec
ljmp
cld
mov
mov
sbb
cmc
cld
addb
mov
cmp
inc
mov
ror
ss
pop
sbb
xchg
das
movsb
xor
imul
rol
add
pop
mov
sbb
sbb
jmp
pop
mov
fcmovnb
inc
insb
rcll
fisttpll
mov
mov
into
stos
rdmsr
sbb
inc
and
fsubrl
push
scas
dec
mov
cmp
jl
xlat
pop
lods
cmpl
jmp
xlat
jmp
jbe
push
das
jge
iret
dec
mov
loop,pn
mov
push
mov
sub
mov
je
or
mov
aaa
in
xchg
cmp
aas
ret
lahf
dec
dec
lret
xor
ret
arpl
icebp
adc
lret
sti
mov
jne
jae
adc
or
jg
jae
push
sti
dec
push
inc
mov
loop
sub
mov
hlt
es
dec
out
out
fsubrl
mov
dec
std
es
push
mov
enter
ficompl
push
jmp
adc
out
add
mov
push
pop
das
stos
sub
outsl
mov
movsb
xor
jl
notb
inc
dec
cs
negb
and
mov
ret
dec
dec
andl
mov
popf
dec
movsb
test
xchg
dec
mov
inc
enter
xchg
das
seto
push
lods
lret
in
andb
push
dec
dec
mov
daa
adc
decb
cmpsl
data16
jnp
movsb
jge
xlat
cmc
add
dec
sti
pop
add
xchg
movsl
mov
push
mov
mov
mov
jnp
jno
inc
stos
cmpsl
insl
dec
repz
cwtl
leave
test
mov
scas
lods
push
xor
push
jl
filds
loopne
jns
in
fisttps
ljmp
es
cmp
scas
mov
cltd
mov
sti
dec
test
sub
mov
ret
jbe
test
shlb
loopne
xor
jmp
pop
ds
jg
xchg
adc
sbb
push
jl
jp
pop
or
popa
jo
inc
repnz
pop
movsb
shr
test
aas
out
adc
push
fcomps
fisubrs
mov
and
movsl
mov
or
js
dec
mov
repnz
jecxz
mov
je
mov
rcll
dec
pop
sub
adc
dec
push
dec
pusha
shll
sti
mov
dec
cmp
cmpsl
pusha
push
out
jns
push
adcl
cmpsb
mov
mov
jg
jo
in
popf
xor
pusha
std
mov
sbb
fldl
inc
pop
jmp
sbb
push
loope
adc
aaa
es
imul
call
xor
pop
adc
mov
sbb
mov
in
add
jecxz
test
lds
inc
sbb
pop
test
adc
addr16
and
fiadds
mov
cmc
xchg
push
outsb
inc
push
sti
cmp
mov
jns
fists
movsb
push
push
lea
inc
sub
push
jl
sbb
fiaddl
mov
sbb
movsb
pop
shrd
mov
in
push
or
aas
jge
mov
adc
xlat
daa
adc
or
clc
clc
mov
cmp
mov
mov
cmp
inc
jo
inc
sbbl
repnz
mov
mov
jg
mov
pop
scas
jg
xor
in
sti
sbb
fcmovne
test
fiadds
xchg
scas
push
mov
das
dec
add
or
add
add
jmp
adc
add
mov
lret
push
push
out
pop
mov
scas
cwtl
xor
out
cmpsb
xlat
sti
out
jnp
fcmovu
ret
xor
lds
pop
jg
and
shl
pop
dec
in
movsl
rcr
dec
mov
int
and
sbb
aam
lock
push
jno
sbb
mov
in
sbb
and
lahf
sub
push
cmp
add
int3
lods
adc
mov
dec
inc
mov
cltd
les
cltd
mov
mov
pop
inc
cmpsl
ret
hlt
shlb
pusha
dec
out
scas
imul
jl
aad
ljmp
cmp
inc
ss
ret
xor
rorb
imul
pushf
jg
stc
sti
cmp
xchg
lea
dec
icebp
pop
test
sub
shl
aas
cmc
mov
mov
lds
mov
cmpsb
rorl
cmpsb
subb
in
pusha
mov
aaa
aam
mov
sbb
in
xchg
push
lcall
jb
or
inc
xchg
call
jmp
imul
push
sub
imul
int
mov
dec
loope
push
nop
subb
cmpsl
in
jne
pop
ficoms
push
xchg
imul
rol
or
loope
cmp
add
ljmp
aaa
cltd
out
jae
fcmovne
mov
xchg
adc
xchg
xchg
fwait
pop
and
stc
push
sub
inc
jns
loopne
lea
std
iret
inc
push
bound
jae
sub
pop
ret
jmp
push
fnstenv
dec
sbb
in
aaa
cmp
cmc
call
mov
sub
out
mov
mov
mov
dec
cli
sub
mov
cltd
mov
fimull
jg
je
pusha
mov
inc
lods
mov
mov
cmc
fildl
mov
into
in
mov
mov
push
loope
out
dec
inc
mov
out
adc
adc
jns
push
rcrl
xor
int3
xor
leave
mov
pop
xchg
cmp
sub
out
test
ss
push
mov
push
in
imull
int
ret
scas
jae
loope
les
repnz
cmp
in
je
mov
push
push
mov
mov
inc
add
mov
es
jbe
aas
xchg
cltd
and
dec
pop
repz
pop
cmp
cmpsl
mov
dec
push
mov
xchg
cwtl
mov
inc
push
xor
pusha
adc
data16
outsl
and
dec
pop
mov
movsl
ret
mov
pop
xchg
sub
jmp
call
ljmp
push
mov
fcmovb
in
mov
fcoms
outsl
mov
ficoms
add
dec
pop
add
aad
add
xchg
dec
scas
push
cmp
fisubs
pop
in
out
pop
mov
mov
mov
cmp
add
jg
or
in
add
push
stos
mov
mov
push
fstl
sbb
sbbb
xor
lods
dec
pop
jb
daa
mov
repnz
mov
lods
iret
mov
ret
mov
dec
ja
jns
xchg
add
data16
cmpsb
mov
pop
mov
addb
stos
xchg
inc
push
out
pop
or
les
push
mov
or
fisubs
fisttpl
mov
and
push
cmp
push
movsl
mov
jecxz
hlt
jle
ret
in
int
loop
pusha
dec
lock
dec
cmpsl
cmp
lret
and
inc
mov
rcrb
push
xlat
mov
push
mov
jecxz
mov
xlat
add
aam
pop
outsl
fucom
sbb
xlat
cmp
xlat
loope
cmc
add
scas
pop
lea
xchg
pop
push
or
stos
xor
add
or
mov
mov
inc
add
sbb
mov
daa
push
mov
mov
sbb
mov
cltd
icebp
mov
dec
dec
loop
mov
push
fcompl
stc
cmp
adc
jb
pop
add
and
int3
adc
mov
mov
mov
pop
push
sahf
ret
jmp
into
or
aad
lcall
push
inc
mov
pop
sbb
imul
out
fcmovu
adc
jle
xchg
xchg
fwait
lcall
mov
pop
test
xor
repz
sbb
lcall
mov
fstl
jl
data16
fiaddl
out
nop
popf
jne
aas
pop
ficompl
cmpsb
call
or
mov
add
dec
je
inc
xchg
clc
xchg
mov
fdivp
ljmp
aas
loopne
fisttpl
fisubs
mov
sbb
pop
jnp
mov
out
test
push
pop
xor
mov
and
xor
test
mov
mov
in
pop
xchg
mov
cmpsb
fstpt
imul
stos
inc
mov
pop
dec
lods
push
sti
sbb
hlt
mov
lock
pop
sub
icebp
jge
jg
and
or
inc
add
ficomps
loope
xchg
ficomps
aam
mov
mov
pop
add
dec
pop
int
pop
jb
pushf
aad
sbb
push
mov
imul
cld
lds
in
and
ret
push
inc
xchg
fwait
cmp
push
add
andb
sbb
jl
sub
push
jecxz
incb
mov
mov
push
popf
fs
pop
jmp
adc
or
ret
sbb
fsubrl
shl
cwtl
ds
add
dec
jecxz
int3
jae
xchg
add
xor
sbb
push
daa
mov
sbb
or
sbbb
leave
jl
sar
sub
mov
xor
mov
in
lea
aam
mov
push
dec
loopne
mov
cmc
out
gs
dec
lods
jno
faddp
stos
test
bnd
mov
movsb
cmp
arpl
adc
fistpl
jg
and
jl
xor
adc
data16
jmp
cmpsl
inc
repnz
clc
push
inc
jg
fdivrs
push
sarb
inc
aas
div
icebp
fwait
jmp
push
pop
ja
faddl
cmp
xchg
mov
mov
jbe
xchg
test
stos
sbb
repnz
jae
subb
xlat
scas
sub
inc
jg
dec
andl
xchg
lcall
mov
std
aad
mov
dec
mov
push
jns
mov
test
pop
in
pop
hlt
fisttpll
adc
add
add
xor
xchg
xor
shr
mov
sbb
dec
insb
add
in
jle
insb
ffreep
or
test
sbb
ljmp
mov
mov
jge
and
add
cltd
mov
adc
outsl
pop
cltd
inc
inc
and
jmp
cmp
dec
xor
or
and
fistl
iret
sbb
mov
add
outsb
pop
push
nop
jl
or
into
add
dec
sbb
push
push
fiaddl
dec
mov
mov
jecxz
test
leave
cmp
fwait
mov
in
jg
sbb
enter
in
fcoml
mov
fisttps
pop
call
add
lea
jae
jb
mov
std
mov
mov
jg
fmull
jp
mov
lods
data16
es
xchg
cs
jge
leave
add
lret
out
in
dec
mov
test
jno
rclb
insb
push
stc
cld
loop
arpl
ror
int3
enter
lcall
nop
pop
stc
cmp
cmp
cmp
aam
loop
mov
out
xor
js
push
mov
xor
cltd
jo
or
outsb
pop
cmp
dec
mov
stc
add
repnz
or
test
and
fisttpl
sbb
imul
jae
ds
in
add
xor
xor
push
les
cltd
adc
mov
inc
xchg
test
loope
lcall
xchg
stc
or
sbb
jnp
dec
xchg
es
mov
ss
and
pop
inc
adc
cmp
pop
mov
adc
add
xor
pop
pop
scas
lock
outsb
push
mov
lea
adc
push
add
xor
lret
lods
cmc
fiaddl
lea
mov
jg
jmp
jg
iret
pop
imul
or
rolw
stos
or
inc
or
mov
add
out
xchg
cwtl
fldenv
jnp
mov
nop
adc
pop
sbb
xchg
pop
pop
inc
lahf
shlb
lock
pop
pop
aam
pop
dec
jne
jmp
enter
sbb
rol
sbb
jecxz
pop
std
inc
mov
insb
rcrl
loope
sub
cmovae
icebp
ljmp
jae
inc
mov
cmp
mov
daa
adc
push
push
pop
hlt
scas
pop
shlb
andb
push
stc
push
loop
cmpsb
mov
cs
lret
dec
into
sbb
mov
outsb
xchg
cmc
mov
mov
mov
push
mov
mov
pop
or
lods
movl
stos
mov
sbb
cmpl
add
and
out
cmp
push
push
lds
or
mov
jg
lods
or
push
adc
dec
dec
fs
cmpsl
or
dec
or
stos
lcall
jbe
jb
inc
ret
testl
fwait
pop
es
loopne
ret
xlat
dec
out
iret
subb
ja
out
out
push
add
iret
cmp
popf
jl
cmp
pop
adc
ja
ret
mov
lds
fstpl
xor
or
out
stos
sbbl
fwait
xlat
and
pop
add
pop
insb
ja
xchg
jg
sub
mov
in
adc
repz
inc
jo
jg
sub
push
jmp
daa
inc
xchg
pushf
out
fbld
aas
fisttpll
dec
push
mov
cmc
scas
lods
pop
imul
mov
jmp
push
mov
lods
mov
jae
fs
test
jge
dec
sbb
stos
ljmp
daa
inc
or
push
jp
mov
dec
mov
sbb
cwtl
adc
jl
packsswb
cld
or
cld
jg
mov
sti
cmp
addl
xor
jae
mov
inc
test
fsubs
sti
ret
xchg
mov
nop
pop
pushf
jns
cltd
dec
pop
inc
int3
add
lds
mov
aam
nop
sub
out
mov
fmuls
insb
sub
ss
add
xchg
pop
inc
scas
mov
cmp
data16
sti
divl
testl
dec
ds
mov
adc
inc
jns
lock
out
fs
fsubrl
mov
mov
jg
mov
sarl
or
dec
lods
inc
je
and
inc
into
inc
dec
mov
bound
mov
pop
xchg
and
clc
stc
movsb
add
stos
test
decl
insb
sti
mov
mov
push
add
rorb
adc
sub
and
push
outsb
dec
iret
dec
mov
dec
mov
into
sub
adc
mov
test
and
movsl
push
clc
mov
push
repnz
jmp
jae
mov
and
test
inc
dec
dec
xor
addr16
sbb
cmp
rcrl
mov
in
stos
mov
orb
nop
mov
test
mov
pop
cmp
loope
jmp
mov
mov
sbbb
xor
scas
pop
adc
fisttpl
ret
mov
lods
lods
mov
das
add
mov
push
push
mov
or
imul
shlb
dec
jbe
insl
lods
fwait
jb
or
insb
push
cmc
add
jmp
bound
fdivl
mov
into
mov
js
mov
mov
test
and
idivl
jmp
fs
mov
das
cmp
xchg
jbe
nop
sbb
test
into
arpl
adc
std
movsb
movlhps
lar
lods
push
out
cmp
pop
mov
push
fwait
mov
repnz
aam
jnp
out
ficoms
test
push
repz
es
lret
jmp
fnstcw
out
push
movsb
adc
stc
fstpt
dec
outsb
mov
jg
fisubs
dec
ss
xchg
lret
cmp
jns
sub
je
adc
cwtl
mov
aad
mov
enter
push
pusha
mov
cmp
repz
mov
jns
jb
inc
mov
xchg
cmp
lods
pop
loopne
in
dec
fucomi
pusha
or
scas
stc
fcmovbe
xor
cmp
jmp
pop
pop
sahf
idivb
popf
pusha
stos
into
adc
arpl
xor
mov
mov
repnz
inc
sub
pushf
mov
cmp
stos
inc
dec
sbb
das
add
sbb
xchg
ficoms
jecxz
inc
adc
xchg
les
jnp
rorl
nop
xchg
repnz
cmpsl
jmp
cmp
lahf
mov
or
add
xor
inc
faddp
jg
jae
xchg
xor
stc
push
pushl
fmull
mov
cmp
add
jno
add
push
hlt
call
dec
push
xchg
or
mov
xor
js
push
mov
mov
push
xchg
cli
mov
ja
pop
cmp
lea
out
js
hlt
iret
and
push
xchg
fidivl
pushw
cmc
ret
dec
jno
push
out
and
js
mov
rclb
das
pop
jg
dec
sub
add
ss
mov
out
loope
xchg
mov
bound
pop
mov
ljmp
fs
push
mov
xlat
or
pushf
imul
ret
jmp
push
push
pop
inc
inc
sub
test
pushf
mov
jo
mov
fwait
sbb
jg
aam
sbb
pop
iret
cld
jbe
and
mov
lock
insl
inc
jp
fidivrl
popf
movsl
xchg
sbb
sbb
arpl
test
vpsraw
or
adc
jge
out
movsb
add
outsb
mov
ret
cltd
lret
mov
mov
pop
fdivrp
pop
sub
lock
rorb
aas
jp
fdivrl
movsl
scas
je
xor
sub
mov
out
cmp
pusha
fldenv
inc
sub
and
and
sub
dec
push
and
ljmp
mov
jno
and
pop
and
mov
and
int
in
pop
pusha
cmp
repnz
aam
xchg
jnp
nop
filds
add
shlb
sti
inc
movsl
outsl
xchg
icebp
dec
pusha
daa
xchg
in
imul
js
or
sub
jecxz
sti
mov
push
mov
adc
xor
stos
mov
insl
pop
mov
pop
pop
jnp
sbb
dec
mov
and
cmpl
mov
mov
sub
repz
movsb
push
mov
cmp
jl
jg
imul
fwait
mov
add
scas
mov
sub
test
notb
xor
push
sbb
hlt
movsb
stc
into
sti
mov
adc
das
mov
mov
adcl
cmpsl
adc
mov
repnz
pop
jb
fcmovne
dec
pusha
inc
mov
inc
fwait
test
jecxz
subb
faddl
push
cltd
stc
gs
das
bnd
xchg
sub
je
das
add
nop
dec
fmull
movsb
addr16
ret
mov
xchg
inc
in
sbb
pop
movsb
rcll
fwait
iret
inc
jl
pop
sbb
decl
dec
jecxz
push
and
outsb
insl
lret
daa
shlb
adc
and
add
in
or
je
ret
jno
ss
imul
push
out
insb
cmp
jge
sbb
scas
push
ja
rcrb
pop
inc
lret
pop
outsb
cmp
dec
pusha
fucomi
ret
insl
negb
jnp
or
outsb
sub
cltd
fwait
sbb
jle
pop
adc
outsl
sub
add
repz
repz
pop
mov
inc
dec
hlt
stc
cs
sub
and
stos
pusha
in
or
and
push
push
push
push
and
push
sti
mov
pop
dec
mov
std
mov
push
cs
mov
es
xor
jo
nop
rorb
popa
fwait
mov
repnz
mov
flds
jnp
mov
popa
imul
adc
es
push
jnp
xchg
stc
adc
and
test
dec
add
adc
es
mov
loope
cltd
in
sahf
mov
fisttpl
cmpsl
pop
js
push
int3
jg
inc
addr16
mov
dec
sub
pop
sub
jl
int
push
call
fdivl
push
pop
pop
xchg
fsts
pop
mov
ss
jae
cmc
mov
sbb
in
jns
push
decl
dec
jnp
dec
mov
inc
add
jg
mov
push
jae
pushf
xor
iret
sti
leave
bound
sti
jne
std
ffree
hlt
test
pop
into
ja
mov
or
pop
mov
xchg
lcall
pushf
rorb
jl
xor
sbb
fnstcw
vmovq
jo
pop
scas
jle
fwait
jle
fs
add
mov
cmp
mov
ja
adc
xchg
in
pop
push
pop
shll
bnd
in
insb
nop
pop
mov
sub
loope
push
shl
jb
sub
roll
adc
add
int3
add
dec
xchg
jbe
xor
stos
mov
jno
into
fiadds
in
mov
push
imul
lods
or
cwtl
pop
mov
cmpsb
xchg
adcl
jno
repz
scas
aaa
push
cmp
adc
fcoml
cs
and
jp
inc
sub
repz
inc
subb
mov
out
in
mov
push
dec
mov
pop
mov
and
jge
jnp
fisubrl
out
insl
mov
adcb
xor
sbb
aaa
int
lahf
cmp
push
add
std
mov
xchg
xor
mov
add
dec
lcall
jge
loope
and
jae
dec
mov
mov
imul
faddl
jno
cmpsb
int3
mov
int
sar
adc
xchg
mov
sub
ja
mov
dec
dec
xor
cmp
fildl
push
pop
mov
dec
stos
jg
fidivs
dec
push
mov
push
movsb
sarl
stos
mov
inc
jno
mov
cmp
in
icebp
jae
addl
xchg
jae
sarb
in
cmp
pop
mov
sbb
pop
xor
mov
mov
daa
cmp
int3
mov
add
xchg
imul
inc
or
arpl
dec
xchg
jle
sub
mov
and
inc
ret
lock
jg
jno
mov
or
mov
iret
dec
sbb
add
ja
and
jb
mov
les
inc
jnp
aaa
in
aaa
ficompl
dec
mov
jno
mov
mov
out
dec
or
imul
xchg
mov
jbe
xchg
mov
dec
jnp
xchg
decl
sub
mov
aad
push
sbb
sub
dec
dec
nop
dec
inc
decb
mov
cmc
lods
mov
adc
jno
or
insb
sub
xchg
xor
push
sbb
jae
add
push
pop
mov
ljmp
popa
mov
sub
dec
stos
cmpsl
and
fidivs
push
jg
and
sbb
mov
mov
lds
fldt
xor
jg
popl
in
sub
vfrczss
vminps
add
jnp
push
xchg
inc
rolb
cltd
cli
or
pop
fdivs
mov
mov
pop
push
test
sbb
lret
pop
jl
icebp
mov
xlat
fcmovb
mov
pop
xor
xor
pop
mov
loop
cmc
mov
mov
adc
rcrb
jbe
mov
lods
mov
loop
push
push
mov
adc
imul
sbb
cmpl
xchg
push
mov
out
ret
or
loope
inc
cmp
loope
pop
adc
int
arpl
std
push
mov
inc
ja
fists
sbb
pop
mov
cltd
shl
cli
js
fadds
sub
stos
nop
popf
jbe
push
adc
sbb
mov
in
push
sub
fistl
clc
add
inc
cmc
mov
xchg
sub
in
es
jne
or
dec
add
incb
in
mov
xchg
xchg
adc
jl
inc
mov
pop
into
and
lods
or
insb
adc
or
cld
stc
mov
dec
dec
pop
cltd
push
mov
sub
xor
mov
mov
std
mov
jecxz
or
jae
xlat
push
adc
inc
inc
rcrl
inc
dec
loopne
data16
xor
movsl
jge
fnstcw
cmp
mov
pop
mov
into
mov
mov
xchg
rorl
push
jae
fldt
pop
mov
test
les
adc
lcall
sbb
mul
pop
jmp
pop
mov
imul
data16
int
inc
aam
dec
xor
push
rcr
cwtl
lods
jns
sub
cltd
shrl
daa
data16
es
mov
xor
sub
nop
pop
sbb
push
sbb
add
xorb
mov
xor
outsl
cmp
mov
pusha
ret
dec
outsl
xor
in
lahf
or
push
xchg
mov
pop
inc
fs
outsl
and
cmp
pop
inc
stc
push
mov
pop
or
xor
in
ret
sbb
inc
dec
pop
fdivrs
ja
cmp
cmpsb
mov
jg
dec
sahf
fistpl
icebp
pop
icebp
push
add
mov
push
std
push
or
inc
addr16
pmuludq
mov
xor
mov
mov
xchg
les
rcr
push
mov
jo
jmp
mov
push
mov
call
rcll
push
ret
fdivrs
adc
dec
in
dec
jg
sbb
cs
popf
xchg
dec
push
adc
pop
cli
and
rcrb
mov
les
jl
into
imul
pusha
out
add
aad
dec
pop
cmp
add
adc
nop
sbb
stos
mov
orb
loope
xchg
jae
jmp
jne
call
sbb
pop
data16
ja
jg
or
pop
shl
jmp
adc
and
cmc
das
lock
fcmovnbe
mov
dec
jo
js
push
hlt
jl
shrb
or
std
mov
out
jnp
mov
cltd
mov
inc
es
xor
sarl
mov
in
xor
xor
jnp
pop
test
repnz
mov
adc
mov
adc
dec
out
mov
outsb
out
fildl
push
push
or
mov
and
sub
shl
cwtl
cmp
adc
push
adcb
sbbb
add
jle
xor
mov
sub
and
adc
rcrl
cs
xlat
icebp
aas
jne
dec
loopne
add
xor
push
cmc
es
das
mov
adc
mov
cli
xor
mov
cmpsl
inc
pop
dec
and
repnz
mov
in
jecxz
aad
cmc
jge
rcrl
ret
sub
jg
push
sbb
mov
xchg
pushf
sbb
ss
add
arpl
adc
jbe
pop
sub
sub
push
loop
mov
cmp
sbb
inc
fdivl
and
iret
mov
mov
lret
xchg
idivb
ficoml
das
jno
subl
nop
leave
dec
lods
loope
in
lcall
in
pop
mov
or
sbb
xchg
ljmp
icebp
gs
rcl
jb,pn
sar
add
mov
arpl
sub
inc
adc
push
sbb
movsb
ficomps
insb
jno
lea
mov
cli
hlt
jno
mulb
jno
cmp
jno
insl
or
mov
push
mov
testb
add
jg
dec
adc
add
popa
push
shll
pop
push
clc
shrl
addr16
xchg
lcall
sbb
adc
jns
push
mov
test
and
lret
pusha
cmp
cmovae
xor
cmpsl
xor
mov
outsb
ficoms
push
push
imull
roll
xchg
jb
push
ljmp
imul
loopne
in
xlat
adc
dec
rol
or
cli
cmp
add
xor
xor
not
fimuls
mov
fs
mov
out
int3
or
stos
or
jae
fwait
jle
shrl
pop
mov
clc
cmpsl
in
nop
cltd
xchg
mov
test
pusha
jno
pop
daa
push
push
dec
imulb
stos
ja
dec
and
xor
mov
in
mov
push
push
cmp
ljmp
out
rcrl
mov
push
jg
sbb
mov
mov
ja
dec
dec
loop
popa
xor
mov
cmc
jnp
repnz
add
jns
sbb
test
add
imul
fs
cmpsb
bound
mov
jb
movsb
adc
mov
sahf
push
sbb
cltd
push
adc
cmp
dec
adc
adc
pop
mov
std
cmp
nop
das
lret
fisttpl
lea
popw
xorb
mov
cmp
mov
cmp
and
pop
push
mov
cltd
push
and
jle
out
push
jle
int
movsl
jbe
pop
in
aam
sahf
montmul
cmpsb
pop
orl
cwtl
hlt
stc
add
push
pusha
inc
movsl
sarb
in
lea
inc
popa
cmp
notw
shr
sub
cmp
jmp
ret
push
or
js
sub
fmuls
sub
std
fimuls
inc
das
add
sub
lea
adc
push
cmp
jnp
std
xor
fwait
decl
jl
mov
inc
inc
xor
xor
dec
mov
xchg
pop
in
cs
sbb
lods
fstl
jb
push
or
jns
pop
add
lahf
mov
xchg
xchg
pop
mov
jecxz
dec
ljmp
inc
mov
mov
add
mov
cltd
cmp
fdivrs
incb
mov
ss
movsl
outsl
pop
jmp
cmp
sbb
push
push
dec
pop
pop
xlat
std
cmp
data16
push
xor
pop
fiadds
repz
int
lods
popa
jmp
fdivr
inc
fsubs
mov
jae
in
xor
inc
push
pop
jl
fdivrl
xchg
jmp
in
push
push
sbb
sub
xor
leave
cmp
jge
lock
stos
mov
add
cmp
sub
lods
adc
ret
ret
fwait
test
cmp
sub
ja
stc
or
or
in
enter
sbb
mov
jmp
xchg
jns
icebp
xchg
add
lahf
imull
sub
cmpsl
mov
add
int
jecxz
enter
push
inc
subb
adc
ss
pop
movl
lcall
jle
fidivl
ljmp
adc
iret
scas
sub
shll
sub
sub
sbb
movsb
cmp
shll
dec
in
cwtl
pop
out
rcll
sti
adc
mov
inc
insb
dec
sbb
mov
pop
add
ja
push
inc
lods
push
rorl
loope
or
cltd
xor
pop
mov
fisubl
inc
mov
push
jecxz
lds
mov
xchg
dec
push
add
xlat
mov
sub
push
or
fmuls
jle
int
lods
and
push
add
dec
rorb
rclb
or
aam
and
inc
or
dec
dec
cmp
int
in
mov
pop
inc
and
adc
mov
pop
test
cmc
mov
xlat
out
cmp
dec
iret
cltd
xchg
shr
adc
mov
or
iret
movsb
push
pop
fidivl
lock
lahf
inc
das
inc
lods
movsl
pop
loope
sbb
cmp
outsl
and
mov
xlat
sbbl
mov
mov
mov
pushf
push
into
stc
test
sti
push
mov
clc
call
xor
aas
shr
dec
and
mov
push
xlat
xlat
movl
push
mov
mov
mov
popa
orl
add
mov
add
mov
lahf
negb
xor
cmc
cld
jnp
and
jl
clc
sub
cltd
ret
push
roll
loope
xchg
loope
inc
dec
jns
inc
clc
mov
adc
mov
jg
jl
cld
inc
pop
mov
mov
lods
and
movsb
ret
ret
popa
adc
sbb
cld
lcall
ljmp
mov
push
test
mov
aaa
dec
inc
pop
test
or
mov
mov
test
clc
sti
or
or
pop
mov
push
xor
push
jnp
roll
inc
and
mov
push
jmp
inc
hlt
or
repz
adc
gs
int
popf
push
repnz
mov
orb
popf
push
loop
scas
cld
jle
mov
testl
jae
imul
out
iret
xchg
xlat
mov
mov
adc
aaa
not
fs
adc
xchg
imul
mov
mov
lea
jnp
aad
or
iret
std
add
sub
mov
inc
lods
jle
scas
mov
pusha
cmp
and
jno
in
fcoms
pop
inc
mov
cmp
push
mov
mov
cmp
mov
push
std
imul
jns
data16
cs
scas
pusha
je
adc
dec
jmp
rcrl
cmp
or
sbbb
and
hlt
popf
data16
bound
rorb
fs
out
mov
dec
arpl
scas
les
fisttpl
sub
push
or
dec
mov
cwtl
int3
jg
addr16
cmp
pop
push
test
push
mov
dec
sbb
xlat
sbb
negl
jb
push
lock
cmp
push
cmp
jg
stc
jle
mov
cwtl
mov
popf
cmp
subb
lock
das
dec
mov
adc
inc
sub
cltd
shr
iret
sbb
outsb
mov
jnp
pop
push
push
addl
flds
sahf
fdivrp
das
sub
sub
push
ljmp
mov
addr16
jmp
mov
dec
dec
repnz
je
lds
pop
aaa
push
inc
dec
in
rol
mov
lods
arpl
repz
adc
xlat
xor
ja
inc
jno
add
incb
aaa
and
inc
jns
push
rolb
sub
mov
add
ret
lret
loop
inc
in
inc
inc
xchg
aaa
ss
pop
and
fiadds
ret
icebp
mov
hlt
dec
test
sbb
and
add
lock
fldcw
jae
adc
mov
mov
pop
xchg
xorb
dec
out
dec
nop
call
mov
scas
xchg
lret
mov
adc
outsb
pushf
jg
sbb
dec
push
sti
fwait
mov
xor
xor
inc
cmc
cmpsl
inc
rcrl
dec
insb
pop
mov
jno
xor
int3
dec
sub
xor
add
jecxz
jg
cmpsb
xchg
fcoml
jp
adc
cmc
jle
mov
cmp
pop
mov
jb
adc
cmp
jge
pcmpgtw
or
arpl
mov
and
pause
push
aas
sub
pushf
inc
lea
xor
xor
shll
in
into
jnp
mov
xor
andb
xchg
or
cmp
mov
xchg
call
into
popl
cltd
test
loope
dec
or
ljmp
sti
inc
jo
jl
adc
or
mov
mov
lods
pop
out
ret
pop
sub
and
push
push
addb
push
inc
pusha
lahf
movsb
mov
idivl
stos
paddb
mov
sub
out
xor
cmpsb
sub
xor
jns
jo
dec
clc
sbb
mov
fsubrl
std
daa
mulps
dec
test
out
cmpsb
leave
inc
into
mov
or
mov
dec
push
insb
sbb
mov
fsubr
inc
xchg
cmp
lods
mov
and
inc
sub
cld
ror
dec
mov
mov
leave
fiaddl
mov
mov
les
inc
cli
or
jne
inc
mov
xor
scas
pop
cmc
js
mov
add
imul
xchg
cld
mov
fimuls
or
aas
mov
adc
jge
or
fnstenv
loop
jno
jp
push
jae
addl
fwait
cltd
sbb
shl
or
adc
aas
pop
enter
sub
int
lcall
push
pop
in
push
fwait
mov
rorl
loop
je
mov
vmovntps
jno
jns
sbb
jmp
outsb
pop
cmp
lea
push
mov
iret
inc
jg
cld
jno
test
sbb
or
cltd
jo
out
add
popa
lcall
jo
cli
xchg
jl
mov
fstsw
lock
push
and
mov
test
mov
test
hlt
xchg
pushf
insl
pop
push
fcompl
jmp
mov
testl
push
nop
adc
jge
mov
dec
imul
sbb
adc
inc
sahf
push
xor
push
in
lods
jecxz
cwtl
mov
psrlq
loopne
push
fimull
das
cli
push
data16
mov
add
and
inc
cli
add
clc
xor
inc
mov
mov
dec
pusha
pop
inc
xor
pop
int3
in
mov
sbb
stos
scas
out
push
mov
outsl
dec
cmp
mov
sub
xlat
call
not
mov
out
sub
adc
inc
sbb
into
imul
notl
mov
xchg
loopne
bound
sbb
js
push
pop
pop
push
fucomip
out
int3
pushf
das
jg
mov
jo
data16
shl
notl
add
out
and
clc
xchg
in
ja
cltd
aam
push
rcl
sti
mov
test
roll
out
pushf
scas
mov
sub
in
or
stos
mov
rorl
and
cwtl
inc
scas
inc
sub
cmp
and
bound
pusha
xchg
dec
ret
cmc
xlat
out
je
jl
shll
lret
push
nop
xor
lahf
cld
push
xchg
cmp
icebp
jb
lods
inc
out
push
sbb
pop
mov
cs
jno
xor
pop
mov
shrl
push
test
loop
sub
and
or
adc
sub
mov
or
and
inc
lret
arpl
sbb
and
sub
cli
mov
or
mov
jmp
mov
cli
dec
cmp
in
lcall
mov
jg
jbe
dec
fstps
mov
add
imul
ret
and
jnp
cltd
fdivs
inc
fcompl
pop
rclb
icebp
pop
mov
xor
ja
andb
mov
mov
xchg
jecxz
sti
jae
test
out
es
test
jmp
fcmovb
xchg
stc
dec
sbb
and
cltd
push
cmp
cmp
push
xlat
cs
out
xchg
movsb
out
sub
aad
sbb
cmp
loop
cmp
jno
fcomip
push
sbb
push
inc
push
lret
imul
push
xor
add
jg
and
pop
xchg
sub
sar
outsl
push
cmp
inc
ret
aas
or
jmp
cmp
rcrl
testl
jae
pop
outsl
cmp
sbb
adc
popf
mov
fidivrs
sub
in
incl
cwtl
movsl
outsb
mov
push
and
outsl
jae
mov
push
mov
inc
lods
and
dec
mov
ljmp
mov
mov
sar
mov
clc
sub
sub
and
inc
mov
les
test
nop
out
je
mov
dec
sbb
mov
out
dec
adc
inc
sbb
fistpl
push
or
xchg
inc
dec
fidivs
dec
ss
loop
fwait
xor
cmp
lock
sub
or
mov
hlt
jl
mov
sahf
out
das
out
sub
pop
inc
xchg
lods
lods
add
pop
icebp
sbb
pop
jnp
lahf
test
sahf
dec
inc
in
xor
ficoms
push
sbb
insb
sub
test
mov
pop
dec
dec
das
inc
movsb
aas
jecxz
mov
or
out
sbb
dec
cmp
ficoms
icebp
popa
jl
push
out
mov
mov
pop
scas
out
lret
inc
out
ja
adc
sub
rorl
jns
push
sti
and
add
scas
pop
arpl
arpl
lret
inc
ds
frstor
imul
fistpl
or
adcl
fistpll
arpl
scas
mov
xor
xchg
jmp
fdivrs
push
scas
repnz
dec
or
push
stos
sahf
ss
adc
mov
jecxz
mov
inc
xchg
xor
gs
sbb
dec
mov
fwait
pushf
inc
scas
fnstsw
mov
sahf
xchg
inc
fs
call
mov
xor
jno
mov
movsb
and
aad
mov
inc
mov
mov
daa
fisttps
into
imul
lret
cmpsl
sbb
test
cmp
aas
sbb
mov
mov
dec
mov
stos
bound
mov
adc
adc
das
dec
xorb
inc
jb
cmp
sub
fstpl
adc
sbb
mov
and
arpl
cmpsb
fiadds
mov
fistpll
xor
mov
push
mov
cs
mov
ss
lods
xor
jge
mov
push
roll
movsl
cmp
sub
or
mov
mov
sub
mov
repz
fimull
arpl
movsb
dec
out
pop
cmpsb
stos
lahf
mov
out
icebp
and
shl
negb
stos
nop
xor
nop
cmp
test
insb
cmp
xchg
jge
mov
push
mov
test
stos
inc
nop
push
ja
js
mov
push
or
dec
iret
popf
fwait
sti
cwtl
fisubs
push
scas
pop
add
dec
cmp
lock
jb
lret
add
adc
lcall
cmp
sbb
into
mov
push
test
xchg
jno
pusha
repnz
sub
xchg
inc
je
inc
imul
in
sbb
arpl
or
adc
dec
add
lea
imul
jbe
sub
dec
mov
adc
movsb
xchg
adc
lods
in
cmp
jae
jnp
push
mov
sbbl
std
xor
add
mov
mov
pusha
add
iret
arpl
sbb
sbb
mov
adc
push
mov
shl
or
ficoms
fst
sti
mov
packuswb
das
ss
mov
jecxz
mov
cmpl
jns
adc
cltd
mov
hlt
pop
inc
jle
adc
testl
mov
pushf
mov
pop
repz
jp
call
or
fwait
movsb
xor
in
fucom
decl
push
sti
ljmp
in
jecxz
fcmovne
xchg
pushl
outsl
mov
icebp
aaa
mov
outsl
mov
iret
ss
cld
es
jae
popa
inc
add
in
jbe
sub
push
jle
outsb
adc
push
call
iret
push
mov
cmp
adc
sub
dec
mov
dec
popf
gs
repz
rolb
stc
cmp
dec
out
mov
out
int3
mov
sarl
push
mov
or
cmp
pushf
testl
lret
bound
and
in
mov
dec
sti
incb
or
cli
adc
pop
push
inc
sbb
lret
outsl
mov
popa
lcall
pushf
or
push
push
push
rclb
or
int
js
ds
jl
sub
or
sbb
or
cli
mov
lret
xor
jmp
mov
sbb
cltd
std
es
movsl
orb
jnp
fimull
cld
js
push
jl
dec
dec
pushf
es
and
add
add
inc
cld
addr16
divl
fadds
sbb
mov
fcoms
cmp
pop
nop
clc
mov
pushf
or
sbb
hlt
adc
jecxz
or
sbbb
mov
xor
stc
jb
sbb
dec
fldenv
jmp
mov
gs
push
dec
cpuid
ror
fs
les
mov
jle
xor
sbb
imul
movsb
cmp
mov
mov
dec
sti
shrl
loopne
outsb
push
lods
gs
stc
rcrb
mov
push
fimuls
arpl
pop
add
fucomi
pop
sahf
sub
ja
fisttps
cmp
idivl
mov
imul
cmp
or
insl
jl
sub
repz
decl
jo
mov
push
iret
inc
loop
movsl
cmp
rorb
xlat
dec
mov
in
fistps
lahf
sti
and
inc
sbb
jp
cmp
enter
inc
mov
xchg
cmp
fmuls
imul
jbe
lods
orb
stos
ja
and
push
push
int3
pusha
push
fisubl
and
es
mov
insl
repz
cmpsb
cmpsb
xor
xchg
jnp
mov
push
stos
out
aas
cmp
cmp
jno
sbb
sub
or
call
inc
fstps
inc
inc
pop
stos
pushf
cmp
cs
imul
es
fimull
rorb
not
enter
jg
pop
adc
mov
fidivrl
dec
inc
xorps
mov
inc
adc
fucom
fs
sbb
mov
mov
das
sub
fwait
and
push
out
fwait
and
pushl
jno
loopne
fistps
shrb
lahf
cld
mov
cmp
fmull
stos
in
adc
repz
mov
mov
sahf
sarb
shl
notb
aam
mov
and
jmp
add
or
cwtl
lea
imul
adc
or
sub
ficomps
aaa
or
adc
sbb
pop
nop
leave
jns
fdivs
popa
into
fwait
ljmp
dec
mov
push
dec
call
sbb
sub
fistps
daa
dec
jae
stos
loope
mov
pop
pop
xchg
jae
inc
inc
decl
imul
push
dec
cmp
repz
xchg
std
add
aaa
dec
js
mov
xor
das
fidivrl
jne
mov
outsl
inc
cmp
jg
pop
adc
ja
dec
imul
mov
popf
jg
rcrl
lahf
xchg
fs
stc
mov
sub
imul
arpl
jae
mov
adc
aad
cltd
movsb
stos
fwait
dec
js
mov
fistpll
dec
lock
mov
cmp
movsb
xchg
pop
inc
mov
and
in
ss
fwait
inc
cmp
gs
jg
in
lret
popf
mov
ds
in
jno
pop
push
test
fcmovb
cmp
int3
roll
jbe
xor
mov
mov
xchg
lods
fisubrs
pop
add
add
scas
mov
lahf
push
push
jns
mov
pop
jmp
push
and
mov
jno
scas
sbb
imul
mov
sub
mov
in
lea
dec
scas
push
test
add
pop
mov
das
bound
dec
sahf
push
lods
adc
add
rolb
push
and
ds
pop
or
xchg
or
ja
mov
jg
nop
dec
jle
outsb
mov
push
vunpcklps
dec
andb
sbb
jle
hlt
cmp
mov
sbbb
lds
mov
mov
pop
cmpsl
push
into
cmc
addb
loop
fwait
nop
mov
sets
and
sub
ror
call
adc
ds
or
inc
dec
mov
mov
cmp
iret
fdivl
js
std
ret
js
out
jge
adc
adc
lret
mov
xor
scas
in
repz
rcrb
testl
pusha
mov
lret
dec
add
mov
pop
xchg
icebp
cmp
mov
arpl
mov
dec
pop
test
pop
scas
xchg
adc
rorl
rol
mov
icebp
xchg
ljmp
insl
sub
mov
cmp
pop
cmc
push
mov
pop
or
pop
mov
cvtdq2ps
sub
test
ffree
repz
xchg
sti
dec
mov
cli
fwait
push
outsb
push
xchg
push
or
and
push
iret
push
xchg
push
nop
jmp
pop
fmull
shll
outsb
push
pusha
pop
push
ja
mov
mov
pop
decl
mov
pop
sti
mov
or
int
lods
push
dec
pop
jg
in
mov
inc
nop
inc
inc
inc
jmp
jns
or
fs
shll
nop
sbb
jne
add
fiadds
repz
loope
iret
cmp
mov
dec
pop
pop
pop
mov
mov
rcr
pusha
pop
xor
test
int
loopne
adc
dec
fsubrl
dec
pop
mov
fstp
in
cmp
inc
push
sbb
mov
fnstenv
cmp
cmpl
shrl
inc
pop
cmp
jns
lahf
out
aam
out
popa
insb
fistl
or
push
out
stc
dec
or
jns
fistpl
mov
stos
xchg
cwtl
jbe
les
pop
adc
fstl
cwtl
loopne
rorb
push
rorl
loopne
inc
push
dec
mov
jo
cltd
cs
fildll
mov
dec
and
mov
push
cmp
loop
mov
xchg
ja
pop
mov
sub
jmp
dec
sbb
cmp
sub
mov
inc
dec
ja
lret
dec
inc
repnz
sub
mov
fildl
cld
ja
test
push
xchg
add
sahf
aaa
pop
pop
leave
out
or
lcall
jmp
xorl
iret
repz
vpshufhw
insb
mov
enter
loope
pop
dec
scas
movsl
cld
imul
push
icebp
mov
out
dec
scas
dec
bound
inc
mov
mov
outsl
fcomps
fcoml
inc
jbe
jge
test
sub
xchg
shl
imul
mov
push
repz
lods
dec
fidivl
pushf
mov
popa
cmp
inc
pop
sbb
xchg
mov
xchg
and
repz
add
add
in
inc
mov
outsl
mov
out
inc
or
mov
lret
aad
lods
scas
inc
stc
xor
ret
add
adc
mov
clc
cmp
inc
push
cmp
hlt
cltd
jl
pop
mov
fs
sub
cmp
popa
pop
dec
mov
push
lret
sbb
mov
sbb
arpl
imul
or
les
out
mov
mov
je
push
fwait
subl
repz
xchg
fst
pop
enter
jmp
mov
call
cltd
mov
int
jne
mov
pop
mov
xlat
inc
test
out
xchg
push
add
or
ficompl
mov
mov
loope
push
inc
inc
push
ja
gs
jns
sbb
jmp
xor
iret
mov
in
mov
xor
bound
lods
xor
mov
xor
sbb
mov
jl
dec
aam
jb
cmc
and
xchg
pop
enter
sarl
fnstsw
rcrb
or
pop
negb
shll
jge
aas
cltd
jne
xchg
sbb
fs
inc
dec
imul
ja
clc
arpl
or
pop
sbbl
sbb
cmpsl
mov
cmp
sbb
dec
inc
testl
outsl
js
into
notb
fildll
popf
xlat
sahf
dec
scas
es
pop
inc
inc
sub
int
dec
pop
lods
push
pusha
jns
fsub
jno
and
xor
add
pop
mov
test
jmp
clc
inc
xor
stc
push
mov
adc
pop
jae
bound
iret
out
xchg
fwait
mov
or
inc
arpl
inc
jg
aaa
mov
jecxz
pop
sub
or
sub
pop
push
outsb
push
in
xor
cld
pusha
mov
addr16
dec
or
movsl
out
mov
cld
andl
ja
outsl
and
iret
cmp
mov
and
or
rorb
ljmp
cmc
mov
clc
pop
in
das
movsb
ss
cmp
sub
sub
pop
outsb
push
outsl
sti
cmp
inc
jle
push
dec
out
pushf
pop
dec
cmpsb
mov
sbb
push
jge
adc
cmp
pop
sub
loope
pusha
dec
push
ret
rcl
jp
lock
jno
inc
xor
lds
leave
pop
movsl
sbbl
ja
bound
push
inc
mov
mov
pop
js
xchg
jb,pn
pop
les
mov
daa
sub
das
pop
mov
or
aaa
int
lods
and
sbb
idivb
repnz
mov
or
movl
dec
cmp
mov
dec
or
mov
jmp
cmp
mov
jge
jp
push
mov
mov
fiadds
shll
push
pop
add
cmp
ja
cs
fdivrp
stos
or
cmp
mov
fldcw
and
push
int
je
ja
xchg
into
xlat
movsl
insb
pusha
jmp
addb
gs
test
subb
sbb
arpl
mov
jno
xchg
jge
dec
dec
pop
mov
sbb
std
fwait
subb
add
jae
nop
movsb
dec
push
mov
mov
sub
scas
in
pop
mov
dec
out
sbb
dec
mov
imul
rol
mov
inc
outsl
fcmovnb
adc
jnp
or
fistpll
mov
pop
fstpt
arpl
ja
xlat
sbb
pop
lods
in
dec
lods
dec
xchg
pop
rcrl
ss
push
push
xor
cli
imul
in
outsl
mov
fwait
das
outsb
or
cmc
mov
add
mov
push
sbb
mov
adc
inc
enter
neg
ror
es
std
negl
ret
xor
adc
or
insl
and
push
shll
push
mov
inc
bswap
mov
mov
add
adc
dec
xchg
pop
jnp
lock
imul
jbe
lahf
jge
hlt
in
push
or
inc
pop
sub
test
mov
push
cmp
jnp
sti
ficoms
inc
inc
out
outsl
adc
mov
mov
xor
sub
push
push
lret
in
adc
int3
cltd
imul
inc
fwait
jns
movsl
aaa
test
inc
push
pop
enter
dec
xchg
pop
sbb
dec
call
jno
mov
fwait
pop
dec
inc
je
add
fidivl
jbe
xchg
adc
mov
ficoml
lds
lock
aaa
decb
push
jge
stos
fldt
inc
dec
and
rorl
mov
clc
nop
popf
cmp
call
movsl
imul
inc
xor
popf
pop
movsb
cmpsb
sub
push
movsb
mov
sub
pop
mov
aad
mov
pop
fwait
mov
sub
sbb
hlt
inc
lcall
xchg
mov
adc
scas
mov
add
push
pop
mov
bound
push
add
mov
xor
repz
out
inc
or
pop
mov
test
jg
xchg
push
negb
stc
or
subb
test
sbb
inc
es
imul
mov
pop
iret
dec
test
sub
dec
decl
roll
pop
das
out
add
repnz
fidivrl
adc
cld
fisttpl
mov
jle
pop
ds
popa
inc
xchg
mov
in
xchg
aas
dec
inc
ljmp
cmp
inc
jmp
mov
fcmovu
insl
sub
ljmp
clc
jg
lahf
or
inc
int
lret
push
imul
sub
das
adc
rorl
mov
fdivs
adc
aas
push
fidivl
add
xor
ja
fwait
and
or
cmp
stc
lret
push
cmpsw
lcall
nop
mov
sbb
std
imul
dec
aam
cld
outsl
pushf
dec
daa
rorl
xchg
dec
and
mov
mov
mov
pop
imul
ss
ret
repz
negb
ficompl
addr16
adc
fnstenv
push
xchg
pop
push
int
loop
mov
jbe
cltd
xlat
int
test
mov
sub
sbb
das
cmpsl
aad
mov
jg
popf
mov
inc
movsb
test
or
xchg
nop
sbb
cmpsb
fwait
scas
and
cs
movsl
xlat
jg,pn
fsts
sbb
cmc
adc
or
in
aam
shrl
push
pushf
fdivrs
dec
add
icebp
sti
adcb
prefetcht1
lahf
pop
ja
jg
xchg
mov
push
pushf
and
loopne
push
pop
xchg
push
dec
mov
nop
lahf
jne
fsubp
push
pop
scas
cmp
outsl
stos
pop
shl
adc
repnz
repz
lea
mov
add
mov
in
arpl
int3
insb
push
mov
xor
push
pop
hlt
scas
repz
data16
sar
xor
push
fs
sbb
jle
push
out
mov
std
fists
pop
mulb
xor
mov
rorl
and
add
in
iret
cmp
inc
sbb
imul
adc
and
and
leave
je
repnz
push
lods
lcall
repz
cmpsb
cmp
sub
sbb
sahf
add
cmp
fcompl
pop
adcb
inc
gs
cmp
cltd
fiaddl
pop
dec
cmp
repz
ds
xor
faddp
mov
ss
jmp
popf
push
cmp
mov
movsl
xchg
xor
push
pop
fwait
insb
inc
and
gs
jp
pop
and
pop
mov
jnp
scas
add
negl
fwait
pusha
add
pop
jnp
xor
iret
or
pop
out
xor
loope
pop
stos
arpl
inc
mov
rorl
mov
add
fimull
fldl
push
mov
mov
cmp
negl
sbb
dec
or
cmp
sbb
fisttps
jmp
sbb
mov
out
mov
or
ss
jno
pop
pop
ret
xchg
mov
mov
mov
jne
mov
inc
in
adc
out
add
repz
fistps
mov
cmc
jnp
mov
mov
inc
bound
sbb
loop
aas
or
test
in
and
mov
ret
xchg
std
and
sub
cli
sub
push
outsl
pop
xor
out
cmp
adc
rcrl
mov
lret
mov
int
lahf
into
icebp
add
mov
mov
dec
int3
daa
or
sbb
int3
cld
es
clc
pop
mov
add
fwait
in
mov
mov
sbb
out
jnp
adc
mov
out
jg
mov
pop
mov
sub
std
insb
jno
pusha
mov
in
add
pop
sbb
int3
sub
push
popa
inc
dec
and
jmp
iret
add
clc
sbb
jmp
test
xorb
addr16
pop
sbbb
movsb
in
mov
inc
inc
out
mov
mov
mov
out
sub
jno
repnz
adc
jl
stc
dec
cld
or
sbb
mov
cwtl
xor
cltd
outsb
mov
pop
sbb
mov
push
sub
push
stos
cmpsl
dec
or
iret
mov
xor
int3
jle,pt
xchg
rorl
jg
dec
mov
mov
daa
xor
ja
iret
sbb
push
es
cltd
lea
and
mov
insb
fisubl
add
es
es
fsubrl
insb
push
adc
or
inc
push
ja
jge
and
jne
jns
push
popa
mov
out
das
pop
mov
ds
mov
pop
jle
jae
inc
ret
lods
sbb
je
push
scas
and
dec
cmp
mov
dec
adc
movsb
cmpsl
mov
push
cmp
pop
or
cld
icebp
iret
add
and
mov
pop
xor
sub
add
hlt
mov
cmp
aaa
jo
sti
std
sbb
inc
push
mov
daa
rorb
dec
cmp
pusha
stos
out
cmc
jnp
cmc
dec
iret
addl
nop
xchg
push
es
and
push
cmp
in
cmpsb
inc
dec
xchg
mov
or
sbb
jecxz
and
repnz
cs
xchg
imul
sub
fldt
dec
dec
test
dec
push
lret
xchg
aaa
push
dec
adc
fwait
push
cmp
popa
sti
mov
mov
cmp
jno
movsb
xorb
es
sub
jecxz
pop
cmc
mov
in
add
and
xor
lock
sub
inc
std
inc
cltd
dec
add
movl
sub
cltd
faddp
rcll
in
dec
xchg
sbb
mov
mov
fsts
cmpb
jns
mov
cmp
dec
fstpl
xlat
fnsave
out
adc
test
loope
lahf
pusha
orb
mov
lret
into
int3
mov
movsl
xor
sub
or
inc
movl
jno
daa
jg
xchg
test
insb
or
xorb
pop
cs
mov
out
das
cmp
pop
ret
jg
sub
mov
inc
ret
and
and
out
inc
dec
aas
outsb
or
mov
push
push
xchg
test
push
pop
jne
fwait
scas
adc
insb
pop
pop
add
addr16
mov
mov
dec
in
sub
jge
and
mov
mov
xchg
nop
dec
popf
xorl
fiaddl
in
or
aam
add
mov
push
jno
cs
outsb
sbb
addl
inc
add
in
push
je
pusha
divb
xchg
mov
mov
mov
rcll
dec
stos
or
inc
jbe
mov
rclb
sbb
fdivs
test
imul
jg
push
pop
or
int3
push
push
and
mov
adc
clc
adc
push
mov
addr16
notb
mov
add
add
dec
cmpsl
xor
lock
ror
mov
cmp
fs
cmp
imul
ficompl
daa
nop
xchg
into
pop
out
jp
mov
iret
popa
cmpsb
mov
mov
jg
pop
mov
xor
adc
or
cltd
sub
roll
pop
mov
jg
lds
jmp
dec
mov
push
addr16
jne
mov
ss
lea
mov
mov
cmp
in
mov
add
popf
adc
out
ds
pop
cmp
inc
push
pusha
dec
test
push
jb
mov
inc
es
cmc
sbb
outsb
dec
je
mov
mov
clc
clc
loopne
pop
imul
xorb
sbb
cmp
mov
fwait
mov
push
incl
lahf
movsl
inc
mov
xchg
pop
fnstcw
lret
inc
loop
pop
outsb
sub
dec
leave
sti
pop
in
cs
pop
in
jb
push
bound
xchg
mov
cwtl
pop
icebp
pushl
xchg
mov
pop
xchg
push
fs
loop
sub
orb
fwait
in
and
les
flds
pop
std
mov
mov
mov
repz
es
mov
cltd
mov
dec
mov
mov
aad
add
sbb
xchg
sbb
inc
jne
cmc
dec
outsl
int
and
pop
cmp
push
es
xor
out
cmp
cmpsb
scas
out
rorb
fsubr
enter
imulb
adc
mov
fldl
insb
dec
sub
daa
add
pop
mov
dec
mov
aas
pushf
in
xchg
fs
xor
inc
inc
sbb
xor
push
sbb
sub
shrl
push
pop
sbb
out
int3
push
shrb
adc
jmp
pop
cmp
cmp
loope
in
out
mov
rcr
cld
das
pusha
push
jecxz
pop
jp
push
sarb
and
gs
dec
hlt
add
iret
test
jno
jp
fldcw
movsl
xchg
xor
jbe
fucom
iret
loopne
imul
inc
push
cmp
jp
aas
leave
and
jl
mov
lods
xor
adc
jg
lods
int
dec
jg
mov
push
jae
mov
push
into
dec
pop
sar
push
jb
sbb
pop
cmp
cmp
fisubrs
pop
pop
xor
inc
or
fs
outsl
rcll
mov
leave
cmp
cmc
insl
xlat
addr16
sahf
ljmp
or
and
jae
pusha
mov
mov
jmp
inc
std
test
mov
mov
pop
push
icebp
mov
out
and
xchg
jnp
push
sub
and
sti
mov
jge
cmp
xor
jecxz
fs
outsl
mov
and
mov
ljmp
cltd
fdivr
push
mov
pop
out
dec
inc
ds
xor
sbb
sbb
out
fadds
xchg
pop
xchg
xor
dec
fwait
test
idiv
fnstsw
fnstenv
jo
popf
sbb
add
in
test
cmp
pushf
inc
push
pop
out
adc
sbb
push
sbb
pop
mov
imul
es
sbb
sub
lea
mov
je
xor
ljmp
mov
jmp
xlat
lds
mov
ja
repz
jecxz,pn
push
dec
or
popa
loope
ss
xchg
dec
std
cmpsb
aam
inc
dec
mov
jnp
jno
dec
dec
jecxz
fmull
mov
cmp
jb
adc
pop
add
mov
data16
mov
sub
mov
or
dec
test
sub
mov
aad
into
push
pop
pusha
std
mov
mov
sub
imul
xor
nop
sti
out
push
mov
pop
inc
frstor
and
or
cmp
fnstcw
push
lret
mov
cld
sub
mov
mov
les
movsb
incl
or
adcb
shll
inc
sarb
iret
sub
add
ja
aam
cwtl
hlt
or
dec
daa
cmp
add
stos
lret
mov
fwait
mov
fxam
iret
aad
pushf
inc
cmp
test
adc
mov
cmp
loopne
je
adc
pop
or
inc
sub
lods
xchg
lods
jecxz
mov
inc
insb
test
lods
dec
sub
push
insl
push
jns
inc
push
push
mov
cwtl
and
adc
mov
or
testb
fsubrp
mov
inc
test
sbb
rcpps
subb
sub
jo
jmp
jle
out
dec
xchg
stc
sbb
mov
hlt
jne
cmc
in
into
out
pop
jb
push
mov
push
rcll
pop
dec
jno
push
shl
xchg
js
sbb
push
xchg
imul
push
leave
push
ja
nop
adc
xlat
jmp
testl
jp
add
mov
pop
ret
movsl
imul
pop
jge
jnp
sub
xor
ljmp
push
add
cmp
pop
pop
xchg
leave
jl
add
jbe
test
mov
or
mov
mov
pop
and
cmp
mov
fbld
or
inc
push
inc
adc
xchg
jmp
sbb
add
in
das
out
movsb
push
mov
bound
lahf
push
ret
cwtl
leave
imul
xchg
pextrw
xchg
cmp
repnz
subl
mov
add
mov
sbb
push
mov
xchg
data16
add
loop
addr16
cmp
pop
and
and
daa
cmp
ss
jne
cmpsb
mov
aad
pop
lcall
jae
in
testb
ficoms
rol
sbb
inc
inc
jb
lock
mov
dec
inc
xor
scas
push
cmp
ss
repnz
xchg
or
pop
push
cwtl
ret
sbb
or
xchg
and
loop
mov
jecxz
adc
lods
sub
inc
jnp
mov
std
repnz
mov
sub
in
into
xlat
ja
cltd
push
pop
orl
jecxz
icebp
ret
fidivs
adc
cmpsb
mov
cmp
mull
inc
inc
aas
inc
out
cltd
push
cli
mov
sub
or
push
jmp
dec
pop
sahf
mov
std
or
add
xchg
xchg
add
mov
push
sbb
add
imull
pop
xor
xchg
dec
pop
and
dec
sbb
lcall
mov
je
cmp
jnp
scas
or
mov
sbb
arpl
movsl
outsb
jmp
ret
add
inc
jnp
add
jbe
dec
sub
imul
xchg
imul
outsl
jo
jmp
andl
popf
sbb
sarl
xchg
fisttpl
pop
mov
ds
cld
pushf
dec
xor
sbb
rcrb
lods
ds
or
push
inc
repz
or
sub
lods
dec
test
out
in
out
scas
int3
cmpsl
jl
pop
ds
loopne
add
dec
out
loop
lret
cmp
dec
sub
pop
pop
push
pop
jbe
push
add
inc
lret
push
push
lret
mov
mov
jge
dec
jmp
and
inc
dec
fstpt
jno
popa
add
iret
adc
lcall
sbb
sti
fstpt
adc
pop
gs
mov
push
inc
addb
stos
imul
stos
rcl
pop
rclb
sbb
adc
pop
mov
mov
jae
xchg
stos
cmp
mov
out
sbb
pop
repz
icebp
cmova
jmp
or
inc
cmpsl
cmpb
iret
xchg
adc
cli
lock
jb
les
out
or
push
fdivrl
pushf
jl
iret
fisubl
es
cmp
lds
or
ss
and
fdivl
ja
sbb
fiadds
hlt
aaa
add
inc
fs
es
dec
daa
ret
mov
sub
or
push
or
sbb
dec
jg
cmp
jns
mov
bound
xadd
mov
sbb
loope
test
ret
das
in
xor
cmp
ret
outsb
call
xlat
cmpsb
jg
jl
xor
pusha
sbb
jmp
push
lods
push
icebp
adc
inc
dec
mov
xchg
xor
sti
stos
outsb
stc
inc
push
push
ss
and
mov
mov
mov
cmpsl
adc
lods
mov
xor
and
add
popa
jg
test
es
inc
leave
imul
pop
stos
stos
inc
call
imul
cltd
imul
push
push
fcmovb
mov
inc
sub
out
and
call
jg
mov
fidivl
aam
cmp
cwtl
dec
std
mov
fsubrl
inc
mov
lock
sub
stc
mov
jp
mov
bound
enter
sarl
shl
cmp
lret
mov
mov
lahf
shll
fimuls
mov
pop
dec
and
jmp
cmp
and
and
and
or
mov
add
ja
and
fidivs
std
mov
adc
repnz
mov
sbb
lods
fstpl
lds
xchg
sbbb
pop
add
popfw
out
lods
imul
ljmp
hlt
push
fwait
enter
pop
dec
fldcw
std
ss
sarb
push
pusha
add
mov
mov
stos
iret
sti
push
dec
push
es
imull
inc
xlat
pop
pop
pop
dec
sub
rcll
push
inc
les
add
aad
nop
into
push
fldt
lods
pushf
push
adc
sbb
mov
andl
and
stc
jl
pop
shr
pop
push
fbld
push
inc
std
lods
add
jno
sbb
mov
and
movsl
cmp
mov
fs
lahf
push
psubsw
repnz
into
std
lret
addr16
sahf
mov
popf
dec
cmp
sbb
xchg
mov
std
add
ret
fnstcw
fidivl
dec
xchg
sbb
mov
add
adc
popf
pop
dec
ret
stos
leave
je
ja
loope
push
jecxz
inc
sbb
movsl
fwait
sub
sti
insb
ret
xlat
pop
int
cltd
sbb
cmpsl
cltd
scas
mov
inc
dec
cwtl
outsb
xchg
insl
mov
cld
or
jns
fwait
cs
add
add
loop
cmp
sub
lret
cmc
repnz
pop
insl
rclb
scas
dec
dec
insb
repz
sbb
push
inc
push
stc
in
jmp
shll
loopne
and
sbb
outsb
shll
dec
push
sahf
or
int
dec
inc
sbb
mov
mov
push
or
pop
loopne
inc
stos
lret
test
mov
cwtl
test
in
jno
fwait
cmc
out
add
fbld
ficompl
aaa
fistl
xor
fs
push
pop
ljmp
test
sub
clc
movsl
pop
and
cmp
into
jle
xchg
je
push
mov
dec
jo
stc
and
sub
mov
xlat
ret
scas
or
jno
cmp
dec
js
cmp
dec
inc
xchg
push
dec
xor
cmpb
push
jbe
mov
loopne
int
cmp
pop
aas
pop
imul
add
ja
xchg
sub
fnsave
ret
ret
or
add
rcrl
dec
mov
divl
dec
fdivrp
xchg
jg
adcb
adc
insl
movsb
jno
les
dec
dec
cli
ficoml
pop
xlat
ja
mov
into
add
mov
sahf
jbe
sub
iret
imul
sub
inc
jl
sbb
pushf
loope
gs
fstpt
insl
pusha
das
dec
xor
mov
jmp
lahf
enter
fldl
dec
jecxz
insb
fst
sbb
sbb
push
or
fwait
dec
dec
clc
cld
js
sbb
mov
sbb
jmp
sbbl
dec
das
xor
cmc
xor
in
mov
push
jecxz
pop
incl
ficoml
cmp
fidivrl
xchg
rcl
insb
ret
push
push
out
push
mov
sbb
and
loope
dec
shlb
lahf
jo
adc
or
sub
fcmovne
lea
jo
dec
jg
push
popa
push
outsb
xor
les
mov
inc
xor
sti
and
cmc
stc
jbe
arpl
inc
lds
mov
rorb
adc
outsl
pop
xor
jno
xor
push
xchg
dec
push
das
js
stc
aad
cmp
mov
pop
int
dec
lods
and
jg
loopne
fwait
cs
pop
adc
sub
decb
and
and
push
inc
jp
mov
test
out
stc
rol
adc
pushf
aam
dec
das
sbb
sahf
cmpsl
push
aad
sbb
aad
pusha
push
imul
mov
inc
testl
and
clc
sarl
in
clflush
es
call
lods
stc
outsb
stos
in
dec
aam
fildl
mov
icebp
pop
les
inc
cmp
cmpsw
sar
in
lea
imul
pop
fwait
mov
pop
push
mov
cld
mov
cmp
xchg
dec
xor
push
aas
sub
in
pop
mov
roll
pmuludq
int
cmc
mov
mov
xor
outsb
bound
je
mov
mov
mov
dec
sub
lcall
nop
jbe
cmp
dec
test
lret
fisttpl
xchg
stos
rdmsr
jecxz
mov
dec
mov
lock
je
nop
ljmp
xor
mov
mov
pop
imul
sbb
pop
aam
arpl
sbb
mov
lods
sub
jecxz
jno
push
pushl
cmp
push
inc
fidivrs
mov
add
sbb
hlt
imul
int
hlt
mov
mov
mov
push
dec
xchg
mov
jo
mov
jae
dec
mov
out
dec
adc
push
mov
shll
imul
mov
push
fbstp
sbbl
push
mov
xchg
jmp
push
andl
jl
jbe
pop
adc
fwait
out
jg
fsts
mov
rcr
imul
push
filds
not
ret
insb
add
or
xchg
cmp
jl
gs
pop
int
sarl
cmpsb
cmp
xchg
inc
js
jmp
jns
imul
std
gs
jnp
rcl
pop
movsb
sbb
in
sarl
adc
jne
xor
cltd
nop
icebp
inc
or
inc
jnp
inc
jl
cmpsl
dec
data16
lret
in
out
repz
jl
es
inc
xor
cwtl
loopne
sbb
push
sbb
sub
es
addb
shl
das
fmull
mov
es
outsl
sub
mov
aaa
xchg
rorb
sbb
xchg
out
inc
scas
add
cmpsb
test
mov
lcall
pop
shl
dec
cmp
mov
xchg
pop
inc
cmp
inc
mov
lods
xchg
push
mov
loope
ror
cmc
cmp
mov
mov
dec
repnz
es
aas
push
lds
decb
jmp
pop
push
sub
pop
paddusw
iret
and
lret
cmp
int3
mov
pop
sub
mov
jo
sbb
aas
mov
mov
xchg
dec
jge
pop
rcrb
mov
jle
fdivrs
rcll
movsb
push
add
push
fisttpll
dec
into
jb
add
insl
xor
mov
cmp
mov
mov
xor
test
nop
mov
data16
insb
or
sub
mov
mov
fidivl
adc
in
mov
in
sbb
ljmp
dec
jno
jne
cltd
repnz
outsl
cmp
inc
mov
cmp
mov
add
outsl
shrl
jle
arpl
fs
sbb
loope
jl
mov
or
push
xchg
mov
or
aas
xchg
fdivrl
add
fbld
xchg
inc
mov
jne
incl
cmc
mov
lcall
mov
movsb
mov
jbe
sub
rorb
and
inc
and
sti
dec
mov
mov
gs
incl
cld
sbb
add
mov
xor
insl
lahf
fcomip
test
mov
and
sbbl
inc
pop
xor
adc
or
notb
mov
rorl
mov
mov
gs
xchg
sahf
pop
fdivrl
fcomps
sarl
cltd
inc
sbb
adc
aam
cmp
nop
popf
fnstcw
cmp
push
inc
cmc
dec
inc
hlt
xor
pop
cmp
push
xchg
shl
sbb
ljmp
fwait
mov
mov
xor
int3
jle
loopne
mov
xchg
pop
movsb
out
pushaw
call
insb
jecxz
pop
movsl
xor
cmc
ret
cld
add
clc
push
shr
push
add
decl
iret
imul
cmpsb
and
dec
sti
or
xchg
testb
mov
gs
xor
jno
inc
inc
cmp
test
aas
xchg
jo
add
jge
cmp
or
push
pop
out
mov
mov
adc
cld
sbb
fwait
mulb
in
les
loope
scas
push
cmp
ret
dec
add
sahf
inc
jne
fldenv
sbb
sarb
sbb
jmp
cld
imul
call
sub
cld
fisubrl
loope
cmpsb
jmp
imul
loopne
pop
cmpsl
in
lods
and
xlat
pop
mov
insb
mov
stc
into
push
or
pop
lcall
inc
xorb
pop
sti
jns
test
fisttpl
or
mov
add
dec
jno
pop
je
mov
int
neg
mov
fs
sbb
cli
mov
xchg
cmp
jmp
js
icebp
sub
mov
pop
popa
cmp
insl
rcrb
mov
jp
fcomip
inc
pop
scas
push
pusha
dec
xchg
lock
dec
inc
dec
mov
mov
mov
and
aam
repnz
inc
xchg
xchg
fistpl
pop
aas
cld
sub
xor
xor
push
jl
jb
or
outsb
pusha
stc
lds
icebp
addb
pop
dec
mov
jb
sub
or
test
pushaw
and
ret
dec
cli
sbb
mull
or
cmp
js
fnstcw
jl
fmul
xchg
xor
jecxz
xchg
fmuls
mov
es
roll
stc
std
sbbb
es
mov
adcl
dec
loopne
mov
mov
pop
orb
dec
jecxz
mov
ds
lcall
mov
mov
jae
add
sti
mov
jl
out
sub
loop
mov
popf
in
adc
into
notb
mov
dec
push
xchg
pushf
and
sbb
das
pusha
cmp
mov
je
addb
cmpl
push
push
add
fs
xchg
inc
push
and
mov
push
mov
mov
test
inc
mov
pop
fwait
popfw
or
mov
sub
mov
lcall
add
sbb
lock
ficompl
in
dec
add
or
push
and
test
jg
jbe
or
popa
inc
dec
cmp
popa
add
sar
nop
add
and
mov
pusha
or
insl
mov
ficoms
jae
pusha
dec
pop
ss
jo
cmc
pop
lods
mov
fnstsw
imul
adc
call
push
lahf
jl
into
push
mov
push
cmp
fs
jno
ficomps
popa
pop
pop
xchg
ds
ss
sub
mov
addb
ficomps
xor
out
push
adc
jbe
jle
call
aaa
pop
out
into
lea
or
push
aam
inc
push
pop
movsl
lret
mov
xchg
push
adc
cmp
and
and
outsl
sti
and
ja
das
jmp
inc
cmc
inc
dec
mov
and
cwtl
push
jno
popf
mov
aad
sbb
rorb
jge,pt
or
into
pushf
movl
xchg
lods
into
pop
mov
mov
push
cli
add
lods
jl
add
lahf
cmc
icebp
enter
cld
and
aaa
rorl
pushf
test
aad
pop
divl
hlt
push
lock
pop
adc
xchg
sbb
jnp
adcb
adc
sbb
add
movsb
test
pop
jo
cmpsb
ja
int
test
addr16
iret
or
mov
movsb
int3
mov
fldt
hlt
js
cmp
pop
sub
std
cmpsb
jge
inc
sbb
cmp
xor
pop
nop
mov
cltd
dec
adc
fwait
rcrb
sub
dec
dec
mov
jl
xor
pop
mov
jno
lods
push
sbb
xor
jge
and
cmp
mov
dec
movsb
pop
decb
mov
pop
into
rcl
decb
mov
jl
mov
cwtl
gs
cmp
outsl
push
loope
ljmp
out
add
dec
add
in
dec
pop
aas
mov
ficompl
cltd
mov
add
mov
icebp
jno
xchg
jmp
cmc
test
into
out
lahf
mov
cld
inc
cmp
out
dec
popf
mov
cld
ror
adc
js
out
movb
cmp
xor
iret
pop
push
mov
push
in
bound
insl
push
rcrl
cmp
push
cltd
loopne
lret
xchg
jo
add
mov
jae
dec
stos
mov
sbb
div
lcall
leave
pop
mov
sbbl
out
out
and
sbb
push
or
stos
es
dec
inc
mov
daa
push
and
jmp
mov
mov
pop
jae
pop
aas
add
mov
mov
stc
push
rorl
pop
adc
xchg
jecxz
and
sbb
dec
ja
lret
in
xor
dec
sti
jecxz
pop
test
in
adc
push
dec
shll
in
repz
ror
les
sub
mov
int
sub
jle
and
out
jo
add
xlat
movsl
stc
fs
cs
lods
cmp
repz
movsl
sbb
nop
mov
divl
pop
lods
add
subb
lock
shll
inc
fiadds
or
adc
leave
sarb
sbb
fistpll
aas
ja
cmpsl
dec
xlat
pop
sbb
insb
jg
ds
sahf
sahf
movsb
adc
and
nop
push
push
mov
lds
mov
pop
inc
or
js
jl
in
test
inc
mov
clc
cmp
imul
push
cmc
jge
mov
les
je
jmp
jp
mov
mov
popf
push
mov
pop
or
pop
jae
push
and
push
andl
rcr
cmp
and
je
sbb
mov
mov
scas
add
jb
push
dec
es
push
jp
mov
ret
mov
push
pop
xor
or
and
lret
jo
pusha
mov
mov
push
cmpsl
sbb
fstl
pushf
aaa
cltd
filds
cmp
fs
xchg
adc
pusha
outsl
sbb
adc
jl
imul
rorb
xor
dec
mov
inc
jecxz
push
into
out
mul
xchg
daa
mov
dec
scas
sbb
pop
fwait
mov
ljmp
inc
in
aam
shll
sbb
push
adc
jl
adc
js
add
xchg
pop
push
cmc
mov
sub
imul
pop
aam
ja
shl
inc
sbb
push
inc
and
pushf
out
mov
int
push
push
pop
sbb
jns
and
fmull
scas
mov
xchg
mov
push
int
pop
bnd
std
and
fcmovne
fst
dec
push
movl
mov
aaa
test
mov
das
jno
mov
stos
jns
adc
fwait
cld
fiaddl
in
pop
dec
out
jge
ja
xchg
int3
xor
push
push
ffree
and
jp
andl
dec
xor
xchg
sub
add
lods
or
decb
movsb
mov
shll
int3
inc
mov
jp
and
cmp
ret
ds
lahf
mov
clc
loope
sbbl
xor
out
push
stos
dec
sub
cmp
sub
ret
sbb
dec
mov
inc
mov
addb
pop
cmp
div
inc
sub
pop
mov
mov
pop
pusha
shlb
lods
mov
ret
iret
xor
outsb
inc
cmp
mov
add
imul
xorb
test
clc
and
dec
mov
ficoms
fildl
adc
lret
inc
ja
data16
shlb
fstpl
adc
jle
sbb
cwtl
stos
loopne
mov
push
mov
fwait
int3
mov
add
adcb
push
insb
mov
stos
pop
add
test
mov
cmp
pop
std
lret
aas
lods
inc
test
mov
inc
and
push
push
pop
mov
movsb
mov
repz
cmpsl
pusha
dec
fucomi
mov
cmp
mov
lahf
push
cmc
sub
cmc
push
push
cmp
push
pop
iret
rorb
cmpsl
cmpsb
sbb
pop
xor
pop
hlt
cli
into
inc
inc
sbb
sbb
std
fs
popf
dec
mov
hlt
or
mov
sbb
ret
mov
imul
inc
push
xchg
xchg
sbb
xor
outsl
sub
cmp
mov
dec
jecxz
lret
mov
dec
inc
or
hlt
subb
test
inc
cld
loope
cmp
sub
into
std
rclb
jge
adc
dec
add
fdivrl
sbb
cmp
sbb
jae
jmp
out
mov
dec
rcll
jg
orb
lret
mov
ficoml
ss
test
movsb
xchg
shlb
push
aam
inc
dec
jmp
jne
mov
mov
fs
mov
pop
push
cltd
jnp
pop
cltd
mov
mov
and
inc
bound
mov
les
insl
nop
pop
xchg
and
push
fisubl
cltd
adc
je
adc
inc
inc
xchg
mov
movsl
lcall
mov
jle
sub
shrl
cs
in
jno
ret
push
push
pop
lahf
inc
and
pop
dec
fmull
adc
push
or
mov
aas
fidivs
xor
jmp
imul
lret
gs
movsl
cmp
xor
pop
ja
xchg
test
scas
ret
lahf
clc
lahf
dec
pop
add
add
sub
in
fdivrl
aad
pusha
pop
mov
push
mov
inc
xchg
outsl
rol
dec
aaa
test
xor
push
xor
je
dec
cli
sbbb
inc
xor
enter
lods
fldl
sub
jne
dec
push
fs
fimuls
lahf
lods
or
or
fimull
sbb
popf
fdivrl
repz
push
and
stc
push
pop
jns
mov
iret
xor
inc
push
pop
sahf
xchg
imul
jle
insb
pop
xchg
imul
sub
push
jmp
adc
xchg
insb
shrl
push
mov
or
ficompl
adc
dec
clc
imul
or
ds
jg
dec
fmull
add
jae
add
data16
repnz
push
stos
decb
cld
sbbb
push
int
and
fsubrs
sub
pop
sarb
mov
mov
pop
cwtl
mov
cmp
mov
sbb
mov
gs
push
inc
xchg
idiv
adc
lock
fisttpl
inc
stos
movsl
dec
mov
lea
mov
jo
ja
push
shll
inc
lahf
stc
aad
add
lret
xor
jb
cmp
dec
or
push
daa
loope
lea
xchg
and
push
add
les
and
stos
push
jae
or
pop
mov
dec
dec
pop
aas
int
in
test
dec
sub
adc
jnp
jmp
sbb
negl
arpl
cmp
cmp
sarl
loop
std
lret
ja
xchg
sub
cmp
xchg
icebp
push
xchg
adc
mov
xchg
nop
pop
cld
daa
or
fwait
pop
fldt
insb
jmp
es
push
push
in
mov
jo
cmp
scas
fidivl
adc
ljmp
dec
fxch
and
mov
mov
loopne
mov
fxch
fwait
cmp
iret
jnp
pop
shlb
xchg
inc
je
xchg
jmp
pop
mov
jo
mov
mov
pop
cmp
or
jo
mov
inc
jne
mov
add
pop
lods
outsb
loopne
daa
jmp
jmp
mov
fdivrp
daa
push
fsts
fildl
sub
pop
mov
cmp
fsubl
mov
sub
call
cmp
std
sub
out
add
jl
and
sub
push
mov
cmc
push
cmp
mov
mov
add
bound
imul
inc
repz
popf
dec
inc
inc
mov
jno
and
dec
insl
mov
xor
in
inc
jle
testb
inc
imul
jmp
and
pop
push
mov
push
scas
push
in
cmp
jbe
pusha
jnp
push
mov
ljmp
aas
pop
stos
mov
in
jo
ret
rorl
push
push
lods
cmp
inc
faddl
mov
mov
push
lcall
mov
jg
add
and
xor
cmc
xor
les
ljmp
mov
or
dec
lods
mov
mov
pop
pusha
nop
or
mov
test
and
push
dec
dec
repz
scas
mov
es
leave
mov
mov
hlt
sub
pop
jg
fisubs
jae
lret
fsts
xchg
push
stos
repnz
and
cmc
pusha
jns
cld
mov
push
inc
sbb
arpl
inc
test
in
cli
adc
dec
icebp
cmpsb
mov
fildl
push
mov
nop
and
inc
mov
pusha
rcrb
push
and
mov
out
test
aam
add
stos
iret
dec
inc
jnp
push
mov
mov
inc
sub
xchg
pop
icebp
mov
sub
sbb
fidivs
icebp
pminub
pop
shll
and
pop
clc
mov
mov
sti
or
or
jge
xor
mov
jle
in
pop
pop
mov
or
mov
js
jg
push
lret
adc
adc
or
inc
cmp
xor
cmc
mov
adc
cmpb
mov
sbb
aad
stos
je
pusha
fdivl
add
push
jmp
add
push
inc
sbb
mulb
pop
add
mov
and
adc
pop
shrb
mov
inc
or
sbb
mov
mov
inc
adc
push
push
scas
pop
push
sub
repnz
jp
int
outsl
jecxz
add
mov
cmp
dec
xchg
scas
repz
ja
nop
sbb
int3
inc
dec
arpl
mov
jmp
cmpsl
inc
dec
pop
mov
fdivrs
ss
mov
jae
mov
sahf
mov
jp
lea
or
lret
stc
popa
ds
xor
fnstcw
fmuls
inc
cwtl
dec
jbe
lods
mov
mov
push
mov
sbbl
decb
cmp
cli
or
out
sbb
pushf
dec
loope
dec
inc
scas
fwait
add
sbb
das
jb
fildl
fs
pop
mov
lock
insb
push
aaa
xor
addr16
mov
xor
ret
add
jecxz
mov
das
dec
sbb
inc
mov
ret
inc
sub
mov
xor
int3
stc
cmpsl
fmull
inc
cmp
mov
jno
mov
pmulhw
adc
cmp
jg
push
mov
pop
mov
push
dec
mov
mov
push
lods
mov
cmp
in
dec
xorb
fwait
sub
push
mov
aaa
lods
sbb
cmp
pop
xor
push
in
pop
outsl
dec
aam
into
sbb
aad
cmpsb
negl
test
pop
xlat
cmpsl
mov
out
sbb
pop
icebp
mov
inc
cmp
sub
jnp
fs
inc
jge
mov
sahf
add
dec
pop
flds
sub
test
mov
fwait
push
inc
pop
mov
movsl
add
das
push
adc
sbb
jbe
arpl
insl
dec
and
jp
aas
inc
out
xchg
and
push
pop
push
es
jno
sub
orb
mov
add
lea
jae
xor
jo
or
cltd
jo
push
stos
sbb
int
std
cmp
xchg
jge
scas
push
jg
push
aas
fwait
add
xor
inc
mov
push
push
call
jle
movsl
xchg
int
and
out
cltd
jmp
mov
sti
mov
cmpb
imul
out
mov
mov
call
std
add
jbe
sbb
and
mov
mov
add
sti
out
fwait
dec
sbb
ja
je
ds
fnop
mov
push
mov
xlat
cmp
imul
outsb
int
divl
std
int
test
daa
fs
mov
or
ljmp
mov
out
scas
pop
mov
xchg
sub
xchg
imul
cmpsl
sahf
adc
push
pop
rcl
inc
mov
js
xor
adc
iret
jecxz
arpl
ret
sub
rcrl
shlb
or
ret
xor
jl
popf
xchg
dec
sbb
mov
rorl
xor
inc
mov
test
leave
lret
das
sbb
fwait
data16
imul
arpl
or
popf
xor
lds
int3
pusha
cmpsb
ret
hlt
pop
inc
sub
pop
sbb
add
lods
ficoml
mov
out
fnstcw
pushf
xchg
mov
sub
ja
add
sbb
punpcklwd
test
ljmp
cmp
mov
pop
xor
jmp
or
push
push
inc
movsb
mov
or
fcomps
mov
dec
fwait
cmc
out
cs
out
xor
push
dec
icebp
push
adc
push
dec
inc
dec
jl
das
cmpsl
jno
push
pop
arpl
sub
loopne
in
out
pop
jmp
div
daa
mov
xchg
hlt
es
mov
jg
mov
mov
pop
mov
xchg
movsb
scas
sub
add
jp
sbb
addr16
jnp
loop
pop
lods
add
imul
dec
repnz
and
inc
mov
fidivl
sub
sahf
mov
cld
jbe
inc
test
iret
mov
mov
push
pop
out
bound
xchg
xor
inc
cmc
aas
outsb
mov
icebp
or
loope
and
out
fwait
adc
cltd
bound
xchg
dec
jne
int3
inc
and
and
pushf
fs
dec
out
dec
test
jne
cmp
ds
adc
mov
mov
enter
jae
jo
mov
mov
mov
inc
test
xor
mov
sub
jmp
fisttpll
pop
sbb
sub
int
sbb
sub
inc
xchg
fistps
clc
in
int3
clc
mov
pop
push
mov
call
ja
test
int3
xchg
inc
ret
sub
mov
out
das
dec
or
pop
rol
iret
xor
mov
scas
sbb
test
hlt
stos
aaa
adc
xchg
and
xor
sbb
fldt
push
ds
test
xchg
add
fnstsw
pop
jae
daa
dec
test
push
push
insl
sbbb
dec
loopne
xlat
stos
mov
jbe
jnp
testl
or
cmp
or
adc
cmpsb
imul
adc
int3
or
pop
pop
add
dec
cli
loope
lods
fisubrl
jb
and
add
popf
lcall
adc
add
mov
mov
inc
inc
shll
sub
pop
adc
inc
das
xor
ja
decl
repz
dec
iret
pushf
scas
sub
pmulhw
fldt
loope
repnz
dec
adc
adc
xor
cmpb
pop
jbe
leave
add
lahf
pop
sbb
sti
int
in
push
lods
cltd
mov
fldl
or
loope
into
push
and
ret
mov
or
cmp
push
sub
rol
insl
es
mov
push
out
sub
adc
jns
cmpsl
mov
dec
in
sbb
loopne
repnz
hlt
mov
jae
mov
mov
cs
lea
movsb
shl
leave
es
pusha
aad
mov
add
add
push
mov
lods
rcll
push
push
aad
incb
push
add
pushf
pop
inc
or
jbe
add
rorl
cmp
sub
in
and
call
xchg
std
push
lahf
js
sbb
es
insl
out
jb
mov
dec
pop
enter
add
inc
jge
dec
lea
ror
add
test
bound
rcrl
and
push
mov
fmuls
sub
addb
dec
push
mov
push
fidivl
sub
sbb
cmp
sub
mov
sbb
mov
jmp
mov
xchg
dec
mov
jp
lds
xor
mov
movzbl
es
dec
xchg
mov
pop
and
xchg
adc
jp
ja
mov
cli
pop
mov
icebp
test
mov
sbb
cmp
in
fdivrs
shlb
mov
cmpb
jne
repnz
aad
jns
pushf
jge
dec
insl
inc
lret
bound
inc
pop
or
cmp
shlb
clc
ficoml
ljmp
xchg
pop
out
xor
ret
ljmp
arpl
dec
iret
jl
int3
inc
pop
jp
add
push
stos
sti
fidivl
adc
pop
or
jl
cmc
fld
adc
mov
mov
pushf
push
cmp
jmp
cmpsl
stos
lahf
cmp
xchg
into
sub
or
loop
loopne
jae
push
or
push
fwait
jle
dec
and
fidivrs
pop
push
pop
inc
mov
call
cwtl
movsl
inc
push
pop
mov
mov
movl
das
icebp
loop
or
rorl
jno
out
adc
stos
out
daa
cld
mov
dec
pop
out
into
aam
imul
push
das
shll
insl
add
aaa
fdivrp
mov
mov
loope
aad
insb
je
insb
inc
dec
and
call
dec
iret
repz
clc
repz
push
adc
jno
inc
stos
mov
and
or
pop
sub
fmuls
sbb
inc
cmp
adc
cmp
cmpsb
popa
ja
sbb
loope
jno
cs
loopne
addr16
in
inc
fimuls
es
rcl
mov
stos
dec
loopne
fbld
mov
cmp
insb
scas
in
int
rcll
mov
inc
and
push
xchg
xchg
push
daa
dec
in
scas
cltd
filds
les
jnp
adc
push
lret
into
or
repnz
ja
jg
inc
mov
pop
xor
loope
dec
sahf
shlb
sbb
dec
mov
jbe
rcrb
push
imul
stos
mov
pushf
int
cld
push
ds
or
bound
mov
pushf
lea
popa
mov
orb
pop
ret
mov
repz
push
dec
pop
pushf
jl
or
pop
and
dec
push
test
jmp
es
cmp
out
pop
mov
pop
mov
enter
popa
rcl
addl
mov
jno
lea
and
pop
popf
and
dec
sub
add
adc
jb
or
adc
add
dec
ret
repz
push
pop
bound
sbb
into
or
fwait
bound
mov
sub
mov
movsb
sub
enter
push
sub
dec
mov
in
pop
inc
fidivrs
scas
lahf
push
test
jno
pop
popaw
fxam
inc
shrl
cmp
push
pop
repnz
dec
push
mov
xor
or
daa
test
or
inc
es
mov
hlt
outsb
and
mov
in
push
cmpsb
pushf
imul
mov
movsl
jge
jae
jbe
test
inc
cmpsl
cs
rorb
fs
pop
and
decb
movsl
inc
ret
xor
repz
mov
mov
outsl
nop
test
call
xchg
cld
adc
mov
and
xor
adcb
mov
sbb
jae
sbb
cmp
cmpsb
sbb
cs
test
ja
testb
mov
jbe
mov
in
sub
aaa
cmpsl
or
jg
lret
addr16
icebp
gs
loopne
loopne
add
roll
mov
sbb
push
lods
jmp
sbb
push
repnz
mov
mov
xchg
dec
lcall
pop
pushf
fiaddl
jecxz
dec
nop
cld
push
les
add
cmp
pop
dec
adc
clc
inc
xchg
js
insl
mov
cmp
xorl
sbb
loope
xchg
mov
and
loop
jb
push
push
and
lods
jbe
repz
ret
or
xor
push
fstpt
xor
and
xchg
fucomp
mov
mov
sub
adc
jnp
arpl
aam
test
cmp
sub
ret
add
in
lret
out
inc
js
lahf
dec
adc
clc
lcall
pop
ret
cwtl
fwait
cmp
mov
xor
xchg
push
pop
sub
sub
sbb
mov
cs
sub
das
lret
jno
pop
int3
shlb
in
lods
test
sbb
scas
nop
pop
jnp
inc
jl
inc
dec
cmp
fwait
xor
xchg
dec
out
scas
mov
jg
test
sbb
jns
fcomp
jmp
jne
mov
pop
mov
test
mov
inc
add
mov
jecxz
sbb
inc
leave
pop
inc
jae
das
sbb
mov
iret
pop
dec
bound
imul
adc
or
mov
jno
stos
mov
push
add
jg
test
imul
lock
testb
add
mov
outsl
add
mov
and
cltd
jle
xor
push
mov
cmp
push
mov
inc
pop
outsb
push
jg
cld
movsb
dec
int
movsb
insl
push
cmc
xchg
mov
or
push
mov
pop
push
add
fisubs
fsts
leave
dec
test
pushf
fdivl
fsubs
cmp
mov
lret
ror
xchg
adc
fbstp
sbb
pop
out
out
les
ja
dec
sti
pop
frstor
push
cmp
popf
or
pop
sub
arpl
dec
add
fcoml
addb
lahf
aaa
push
pop
and
xlat
sub
mov
cmp
ret
sub
inc
loopne
push
rcrb
cmp
xor
lahf
lret
fwait
cmp
aaa
adc
push
lds
idivb
sbb
mov
mov
cmpsb
inc
stos
inc
mov
lcall
push
sti
cmpsb
pop
subb
jge
outsl
sarb
jg
dec
movsb
dec
fstl
das
aam
test
adc
dec
jno
dec
daa
ja
jno
pop
mov
insl
dec
testl
inc
out
sbb
xchg
mov
xchg
xor
call
fisubl
sbb
push
rorl
aam
movsl
in
test
ficompl
popf
xor
inc
jmp
imul
out
insb
xor
les
nop
ds
push
or
test
lods
push
and
lock
mov
scas
out
aas
ljmp
imul
aaa
cmpsb
scas
push
js
add
xchg
fcmovb
jno
sub
std
inc
cmp
jle
pop
xor
add
inc
cmp
sbb
dec
cmp
out
push
lods
xor
adc
jae
push
inc
sub
fidivs
sbb
mov
cmp
imul
cmp
xorb
pop
cmp
ja
dec
or
inc
xchg
addr16
mov
jl
cli
mov
jae
sarl
mov
insb
inc
sbb
sbb
cwtl
sti
dec
add
pop
inc
je
add
jae
mov
sub
push
dec
mov
push
cld
adcl
ja
or
jl
sub
jns
fsubl
cmc
shrl
jge
sub
call
xor
add
imulb
ret
fwait
dec
mov
jns
cwtl
orb
adcb
inc
fwait
outsl
mov
lret
scas
lahf
dec
jbe
mov
sub
insl
ffree
fs
push
repz
xchg
or
xor
sub
pop
loop
sbb
xchg
in
lods
fnsave
inc
dec
mov
mov
test
or
sahf
mov
dec
inc
repz
lret
dec
dec
test
jg
fsts
test
lea
sbb
lcall
add
xlat
push
mov
popf
pop
cmp
or
push
shrl
jae
cmpsb
xchg
dec
mov
xor
dec
mov
jae
sub
push
pop
ja
bound
nop
xlat
jmp
pushf
pop
push
mov
xchg
jno
in
cmpsb
imul
dec
and
into
or
inc
stos
xor
cmpsl
dec
adc
sub
sahf
orb
lods
imul
push
mov
xor
mov
jno
lahf
in
outsb
add
jp
ds
inc
mov
mov
sbbb
inc
inc
lret
mov
out
jnp
imul
hlt
stos
lret
lock
fcomps
loope
jns
lret
or
jae
push
dec
dec
push
add
push
push
popf
cltd
jmp
hlt
fidivl
pop
aad
addr16
dec
pop
sub
aam
mov
pop
jmp
cmp
sub
ret
jl
mov
das
cmpsb
inc
sbb
jno
and
nop
add
pop
fists
add
and
test
sti
cli
sbb
mov
in
cs
or
roll
sbb
scas
xchg
rcrl
decb
mov
shll
outsl
push
stos
cli
cltd
loopne
add
mov
shl
subb
into
and
xchg
mov
mov
test
repnz
adc
jns
inc
stc
ja
mulb
inc
les
imul
clc
jbe
mov
sbb
arpl
je
sub
dec
xor
push
mov
push
imul
outsl
lods
jl
and
lods
add
pop
fildl
and
fidivs
or
dec
jmp
call
push
inc
aad
or
cld
je
push
adc
rcrl
xor
jns
lea
cltd
inc
inc
mov
loopne
mov
sti
dec
je
insl
xor
pop
xchg
mov
dec
inc
mov
jnp
jmp
loopne
jae
int
sub
pop
shrl
mov
ja
lcall
pop
test
xchg
add
pop
dec
push
jmp
leave
pop
and
jbe
dec
ss
or
aas
jae
pop
insb
mov
loopne
std
add
lods
inc
js
enter
or
out
and
push
push
fs
subl
nop
cmp
push
std
repz
pop
pop
jae
adcb
clc
out
cmp
pop
lret
dec
dec
pop
sar
enter
dec
hlt
xchg
mov
cmpsl
in
dec
imul
aad
sbb
mov
inc
mov
bound
ja
sbb
sar
or
dec
into
rcl
pop
push
add
dec
cmp
mov
loop
mov
imul
dec
jecxz
mov
push
mov
cltd
mov
leave
repnz
stos
push
fildll
inc
fdivs
mov
popf
mov
bound
jns
loopne
jmp
mov
inc
aaa
int
les
repz
and
in
shlb
mov
jg
and
and
mov
test
pushf
inc
add
cmp
or
adc
lahf
or
adc
dec
in
loope
mov
pop
mov
test
push
add
dec
sbb
inc
add
fstpt
repnz
or
orl
adc
movsl
aam
or
lods
les
cmp
jae
je
cs
cld
out
sbb
cmp
pop
stos
and
mov
pop
mov
mov
xlat
jae
mov
les
pop
lods
adc
imul
or
adc
sti
cmpsl
jl
jmp
adc
mov
fsubrs
push
idivl
cli
hlt
adc
addl
sar
out
jl
dec
pop
loope
fiadds
or
nop
cwtl
cmpsl
sub
fdiv
jecxz
push
in
dec
adc
jp
adc
sbbb
dec
fwait
pop
push
inc
push
pop
aam
sub
mov
cmc
roll
ds
int3
insb
int3
sub
pop
push
mov
ror
loope
jne
sbb
into
test
lds
outsl
or
rclb
into
push
adc
test
cmc
pushf
scas
adc
mov
arpl
inc
push
clts
pop
shll
out
sbb
xchg
jns,pt
inc
rorl
ljmp
cmc
das
and
add
cmpsb
aam
cmp
or
sti
stos
aam
inc
dec
mov
clc
push
ret
jmp
js,pn
xchg
fwait
push
adc
push
sub
xor
pop
sbb
inc
push
lret
cmp
addr16
push
jp
push
jae
jns
xor
mov
addr16
hlt
inc
and
dec
test
cmp
push
cli
call
testb
add
adc
iret
clc
out
loopne
pusha
cltd
jo
cmpsb
mov
cmpb
xlat
or
jnp
mov
push
mov
aas
in
cmp
mov
inc
add
jecxz
ret
gs
and
jle
ret
sbb
mov
xor
in
pop
mov
icebp
shl
mov
out
ror
mov
mov
adc
leave
sarl
jae
and
mov
jecxz
cmpl
test
jge
dec
scas
mov
scas
mov
and
std
movsb
inc
inc
push
mov
cltd
lcall
out
std
cmp
lds
fucomip
add
imul
inc
pop
or
sbb
out
lods
xor
push
pop
ds
testl
fiadds
scas
dec
test
jnp
in
push
mov
mov
scas
repz
scas
stc
pop
sbb
push
out
adc
xlat
xor
adc
mov
iret
mov
adc
ror
fcmovne
repz
insb
fsubr
sub
rcrb
jle
cmp
xlat
xor
ja
cmp
sbb
push
push
mov
repnz
sbb
xlat
fldt
jnp
pop
cmp
lea
test
or
and
push
mov
imul
rclb
pop
mov
dec
cmpsb
jno
pop
call
inc
pop
xchg
loop
mov
addr16
xchg
out
js
aas
and
js
fwait
push
mov
push
mov
cmp
cltd
jle
fs
xchg
dec
jb
in
jge
cwtl
dec
int
mov
fcmovne
cs
stc
xlat
int3
cmp
dec
xchg
insb
test
jg
jo
roll
in
mov
test
dec
pushf
jl
sbb
xchg
mov
jne
sbb
add
leave
mov
ret
xchg
xchg
pushf
jg
mov
loopne
xchg
inc
testb
pop
cmp
mov
mov
jo
mov
shll
inc
add
mov
and
roll
pushf
insb
arpl
sbb
mov
stc
inc
lret
in
fs
adc
dec
mov
gs
pushl
and
dec
push
mov
subl
push
out
out
mov
cmc
rcrl
dec
mov
sahf
das
stos
stos
mov
inc
sbb
adc
mov
ds
pushf
cltd
ja
cmp
cmp
sbb
arpl
ja
dec
lods
xor
movsb
add
push
sbb
mov
fistpll
inc
pusha
mov
pop
insb
cmp
fwait
inc
fwait
mov
fwait
aaa
dec
sub
jg
es
aas
cltd
dec
or
sbb
dec
mov
mov
mov
pop
fldl2e
jne
iret
nop
mov
pop
in
mov
push
jne
xchg
or
mov
and
cltd
mov
out
xchg
or
hlt
jae
mov
sub
ret
jmp
incb
scas
cwtl
xlat
push
repz
mov
pop
inc
jp
jge
popf
dec
inc
in
cs
ss
mov
fs
jge
repz
sub
jge
mov
mov
add
push
xor
es
stc
push
mov
inc
pop
mov
cmc
fwait
xchg
pop
out
add
cmpsl
lods
stos
cld
push
cltd
and
nop
xchg
outsb
mov
or
cli
ret
fwait
mov
loop
daa
cmp
shlb
push
pop
pop
mov
fisttpl
mov
in
cmpb
pop
outsl
and
stc
mov
aam
lahf
loopne
xor
jmp
pop
push
mov
jg
xor
pop
xor
jbe
fistpl
bound
bound
inc
push
fcoml
insb
out
mov
cwtl
pusha
xchg
jmp
insb
sbb
or
jl
out
pop
mov
fists
mov
mov
gs
add
cmpsb
fdivrp
fmul
mov
mov
xor
mov
push
lcall
pop
pop
xchg
dec
nop
rep
cmp
lahf
out
pop
pop
popf
xor
adc
mov
icebp
outsb
push
ficomps
pop
or
int
sbb
cmc
jge
jae
les
and
mov
or
xchg
insl
loope
xchg
shrl
fldenv
mov
lods
lods
icebp
cltd
ficompl
add
aas
xchg
inc
sub
repz
cmpsb
xchg
int
dec
mov
mov
jo
cmpsb
lock
sbb
mov
cmp
dec
mov
xchg
cld
push
inc
mov
jecxz
inc
in
ss
sbb
or
int3
fiaddl
ss
pop
pop
mov
lfs
popf
das
mov
imul
sbb
mov
jg
outsb
pop
imul
fistl
roll
mov
sub
out
cmp
jg
insl
push
dec
xor
movsb
nop
bound
int3
or
pop
dec
out
inc
test
mov
mov
sbb
mov
shl
dec
test
sbb
pop
inc
inc
pop
cmp
add
mov
and
adc
scas
insl
mov
dec
mov
add
pop
cmpb
jne
pop
dec
jns
xor
xchg
and
inc
mov
cmp
add
sbb
lock
std
pop
xor
in
push
arpl
inc
mov
inc
adc
or
dec
es
pop
loopne
andb
mov
mov
outsb
mov
xchg
mov
sbb
ljmp
fiaddl
mov
jg
sti
fsubrl
cmp
cmp
mov
imul
dec
repz
fimull
mov
das
inc
jbe
aas
push
dec
sbb
ret
add
add
movsl
shlb
inc
mov
mov
sbb
arpl
sbb
repz
adc
js
popf
jp
call
jl,pt
sbb
mov
fimuls
pop
fmuls
pop
mov
ret
jno
cmp
out
fdiv
mov
aam
pop
stos
pushf
jle
repz
stos
pop
mov
sub
sbb
data16
and
les
xchg
and
fmuls
dec
inc
enter
lret
sarb
notb
xchg
repz
std
cmp
inc
sub
ret
sahf
xor
inc
xchg
imul
fisubrl
je
dec
rcll
lret
dec
mov
sbb
sbb
cmpb
rcr
ror
sbb
mov
imul
pop
sub
pusha
in
bound
test
and
cltd
mov
dec
jbe
dec
ficompl
insl
pop
mov
push
mov
and
push
jne
push
cmp
dec
rcll
inc
imul
xchg
or
pop
push
and
inc
mov
daa
and
test
repnz
or
push
jp
leave
insl
pop
dec
dec
mov
add
rcrb
jecxz
lahf
jnp
sti
aad
pop
and
loope
xor
xlat
jae
lock
push
movl
jg
lret
sub
ret
icebp
in
sbb
cmpsb
fs
gs
gs
dec
mov
inc
adc
dec
mov
cmp
dec
rolb
jbe
shlb
adc
scas
or
inc
jbe
mov
dec
rorl
aam
push
daa
mov
jno
loop
mov
fnstcw
fisubrl
jg
cmp
cmp
repnz
insb
inc
in
or
les
push
into
pop
push
std
jle
dec
cmp
mov
or
add
sarb
fcom
mov
cld
pop
xor
add
int
pop
pop
mov
pop
add
sub
cmpsl
push
insl
jnp
or
mov
or
test
shlb
pushf
out
pop
sub
mov
xchg
out
shrl
inc
jns
sbb
sub
dec
out
mov
push
inc
fadds
rcrl
or
inc
int
test
movsl
aam
sbb
jnp,pn
push
or
xor
dec
pop
push
mov
jge
cmp
insl
out
inc
jg
imul
cmpsb
push
mov
mov
fdivs
cmpsl
out
icebp
imulb
mov
mov
dec
add
jle
dec
scas
jmp
mov
adc
mov
jge
fwait
and
push
mov
mov
stc
clc
fsubrl
movsl
jmp
or
mov
add
outsb
mov
sub
add
jnp
pop
aam
out
ret
cmc
xor
out
ret
adc
leave
adc
xor
iret
xchg
pop
mov
mov
js
mov
inc
mov
mov
adc
adc
xchg
or
cmp
dec
repnz
adc
jmp
sbb
push
mov
sbb
or
icebp
dec
repz
or
ss
push
pop
lret
jns
push
insb
outsl
inc
in
clc
xor
lods
sarb
test
fmull
jge
add
cltd
imul
and
dec
rorl
lods
daa
cmp
mov
imul
aam
fwait
inc
lods
mov
xchg
cltd
xor
ja
pushf
inc
test
gs
add
adc
fwait
ret
jno
add
sub
lcall
lds
jb
dec
sti
mov
es
in
add
jnp
adc
out
push
add
das
add
sbb
mov
xchg
xor
push
add
idivl
mov
and
xor
fistpll
and
mov
add
push
mov
sbb
popf
cli
int3
subl
mov
sbb
fs
frstor
mov
pop
push
cmpsl
decl
addl
test
outsb
rorl
add
arpl
pop
fucomp
cmp
sub
stos
je
mov
dec
divb
or
push
inc
repz
mov
imul
sbb
insb
push
cmpb
scas
call
fwait
pop
jbe
push
xchg
loop
adc
rclb
je
push
cmp
mov
pop
mov
jmp
sbb
cwtl
xor
xor
push
ja
jnp
push
fcomps
pop
xor
push
rorb
jle
inc
cmp
mov
dec
jbe
ret
mov
dec
shlb
das
fsts
loopne
popf
dec
mov
int
cmp
push
lock
xor
push
js
lret
xor
cmpb
aas
icebp
pushf
out
fwait
icebp
mov
dec
and
loopne
test
push
es
pop
movsb
stc
adc
push
pop
mov
xchg
push
jnp
cmp
push
cmp
gs
sahf
adc
adc
pushf
mov
lret
mov
add
pop
popf
dec
out
fbld
mov
add
pop
dec
mov
pop
cmpsb
ret
jmp
pop
sub
push
push
xchg
mov
jge
stos
data16
outsb
inc
mov
daa
mov
cmpsl
and
dec
mov
or
xchg
popf
dec
push
sbb
call
scas
scas
add
push
push
sub
mov
jge
shll
pop
lret
movsb
aam
in
cmpl
jnp
xor
pop
orb
movsl
mov
sub
pop
sub
inc
insb
mov
or
push
and
lods
mov
and
decb
dec
jbe
stos
movsl
lea
push
and
xor
and
pusha
mov
lret
inc
push
jno
addr16
fimull
fistps
xchg
mov
fcmovnb
sub
jmp
xchg
test
arpl
pop
insb
jmp
test
pop
or
popf
dec
and
imul
ret
push
dec
mov
jp
mov
push
mov
inc
incl
mov
mov
daa
push
jl
fucomp
add
out
sbb
mov
mov
sahf
int3
hlt
mov
mov
in
pop
inc
adc
xchg
and
pusha
mov
sbb
mov
mov
fs
xor
sub
jmp
cmp
cltd
push
pop
cwtl
lret
inc
cli
xchg
mov
sub
sbb
clc
sti
scas
mov
sahf
movsl
push
and
push
popf
sub
ja
adc
inc
imul
adc
sarl
add
pop
sub
cmp
pushl
pop
xor
mov
cmp
cmp
in
mov
mov
decl
push
mov
sbb
imul
lods
lcall
and
push
push
xchg
sbb
and
insl
ret
mov
cmp
in
add
mov
fists
mov
pop
jne
std
in
dec
and
data16
or
xchg
and
cmp
push
stos
sbb
xor
sbb
cld
push
int3
cmp
lods
adc
loopne
dec
cs
int3
repz
sub
idivb
pop
out
push
push
je
jno
lahf
pop
and
pop
stc
mov
loopne
mov
imul
cmc
mov
bound
jl,pt
inc
inc
push
jo
inc
inc
mov
hlt
sti
lret
push
jno
dec
and
adc
imul
jp
loopne
fwait
hlt
shlb
outsb
xchg
movsb
js
cmp
std
lahf
push
jl
loope
jbe
jno
add
cmp
cmp
mov
pop
push
mov
mov
cli
push
xor
icebp
add
xchg
and
mov
adc
jle
jb
adc
mov
xchg
and
sub
mov
lret
pop
mov
in
cmp
mov
sar
mov
lea
push
pop
testb
add
inc
push
push
nop
cltd
cltd
cmp
or
loope
int3
stc
aas
sbb
or
pop
mov
and
and
xlat
xor
fwait
dec
mov
push
leave
push
fists
js
xor
cmpsb
pop
pop
cmp
xchg
gs
jle
push
mov
loopne
stc
insb
jno
cmpsl
imul
neg
sub
adc
mov
mov
lahf
dec
fisttpl
scas
sahf
jmp
ja
inc
cli
sub
mov
into
popa
xorl
mov
push
mov
xchg
dec
and
mov
mov
cltd
roll
pop
into
cs
out
jae
push
lret
enter
mov
imul
sub
rcr
push
push
inc
dec
iret
addr16
imul
lcall
xor
push
sahf
mov
lock
mov
inc
ret
jae
les
outsl
mov
mov
pop
ja
arpl
fisttpll
push
mov
or
adc
lods
add
int3
pop
mov
and
stc
adc
or
and
pop
lahf
les
fnsetpm(287
and
push
or
mov
scas
adc
repz
data16
mov
es
mov
lcall
sub
lahf
mul
mov
or
addr16
hlt
lods
test
repnz
or
into
loop
sbb
decb
imul
lods
jb
mov
jmp
sub
or
push
push
test
in
popa
inc
fisttpl
mov
rcll
in
pop
mov
lret
and
pop
fwait
sbb
sub
xor
pop
enter
mov
cld
repnz
mov
and
mov
shll
cmp
bound
dec
sahf
das
mov
and
mov
or
cmp
inc
and
or
iret
sub
sahf
xchg
cld
mov
inc
repz
inc
inc
cmc
xchg
fcmove
push
pop
mov
clc
mov
rcll
pop
jnp
sbb
ficompl
sub
pop
ret
jb
pop
or
pushf
in
inc
sahf
mov
jg
ljmp
cmpb
xchg
inc
test
mov
dec
cld
cs
pop
xchg
jno
mov
shrl
dec
mov
fs
adc
and
movsl
jge
mov
mov
mov
int
daa
xor
pop
sbb
dec
sahf
push
hlt
les
pop
fldl
mov
sbb
pop
mov
hlt
dec
rcrb
dec
jp
loope
dec
pop
xor
dec
fnstsw
push
mov
leave
adc
mov
push
sti
icebp
xchg
ja
lret
pop
aad
dec
icebp
insb
or
test
mov
jnp
xor
ja
ret
lods
jmp
pop
adc
jae
repz
mov
mov
cmp
dec
mov
xor
lret
and
inc
push
fsubrs
in
add
arpl
cmp
test
stos
mov
mov
fxch
pushf
dec
fsubrl
sahf
xor
pmullw
mov
int
pop
adc
in
dec
pop
repz
and
mov
out
jmp
pusha
jg
dec
pop
bound
icebp
jnp
or
mov
pop
mov
call
into
inc
rorl
mov
mov
pop
sub
xchg
fwait
in
repz
ret
lret
push
and
insb
gs
sbb
jnp
lahf
dec
iret
repz
lods
dec
call
pop
scas
dec
fisttpll
pop
sbb
mov
and
hlt
nop
push
int3
or
call
jp
jmp
fisttps
stos
cmc
jnp
ja,pn
sbb
rorb
lea
cmc
mov
dec
mov
xchg
push
rorl
cmp
int
fldt
push
addb
fstps
xchg
inc
stc
pop
movsb
gs
mov
mov
cmp
mov
imul
and
push
add
pusha
xor
lcall
lcall
pushf
out
sub
aas
lods
sar
dec
leave
data16
and
jmp
int3
mov
addr16
mov
roll
popa
adc
jecxz
rcrl
or
mov
xchg
adc
cmp
cmpsb
xor
add
arpl
jecxz
das
mov
lcall
loopne
stos
movsb
cmp
jmp
ss
xor
fisubl
and
mov
sti
imul
test
dec
ret
add
and
cmp
push
inc
testl
push
lock
andb
ret
lret
fstpt
mov
inc
push
pop
mov
mov
shll
cmp
pop
mov
pusha
jg
rcrl
mov
int3
mov
sub
jmp
cmc
cwtl
clc
pop
sub
xor
lret
stc
add
repnz
in
jns
jbe
jo
in
repz
cmc
cs
pop
sbb
dec
cmpsl
mov
cmp
mov
adc
andb
popa
jmp
mov
sub
dec
fs
push
mov
xchg
inc
add
sub
mov
mov
mov
clc
cltd
jno
in
mov
or
cmp
fs
jl
cmp
push
rcrl
cmpsb
jecxz
fstpt
icebp
adcl
mov
cwtl
stc
jmp
or
xchg
cmpsb
cmp
movl
in
sub
mov
ficompl
xor
out
mov
add
popa
popf
inc
push
loopne
pop
dec
in
popf
pushf
adc
jg
jl
mov
cmpsl
bound
dec
adc
ss
xor
mov
mov
add
out
addr16
imul
mov
inc
test
popa
mov
mov
jecxz
faddl
sub
lahf
or
fistl
jp
mov
mov
cmp
test
repz
fisttpll
test
outsl
in
clc
push
mov
testb
jns
adc
shrb
xchg
mov
mov
inc
mov
and
xlat
mov
out
into
jecxz
into
pop
sub
test
out
cwtl
and
sbb
mov
mov
mov
call
push
jns
xchg
pusha
test
mov
call
outsl
dec
cmp
jbe
ror
dec
mov
out
adc
inc
psrld
movsb
fidivl
mov
fs
xor
shrl
lock
push
les
sbb
in
inc
add
dec
xor
in
inc
jl
negl
sub
jae
mov
push
mov
incb
xor
lods
dec
dec
sub
es
outsb
in
sbbl
cmp
lret
push
jb
pop
sbb
mov
scas
ljmp
mov
xor
orb
call
jo
mov
mov
adc
xchg
lods
fs
pop
rcl
das
and
xor
cmp
and
pop
or
das
xchg
ja
and
fsubs
and
xor
xor
arpl
movsl
mov
jl
adc
jbe
in
dec
adc
xchg
dec
fistpl
fwait
stos
and
and
adc
dec
daa
cmpl
scas
cltd
cmp
mov
jg
imul
mov
mov
fwait
rorb
aas
pop
adcb
loopne
mov
cvtps2pd
frndint
sahf
shl
push
mov
cs
cmp
and
cltd
fsubrs
lahf
out
mov
out
shl
ret
ss
pop
fimull
push
ret
out
dec
xchg
push
mov
pop
ror
imul
test
mov
inc
cltd
cmpsl
out
mov
cli
test
out
push
aad
pop
jns
pusha
in
add
push
btc
ficompl
int3
ficoml
sbbb
cmp
movsl
jnp
loopne
mov
dec
push
cmp
push
jl
jbe
pusha
cwtl
aad
iret
sub
ja
jbe
push
test
xchg
ja
scas
xchg
xor
pop
jge
or
pop
shrb
dec
inc
mov
jg
pop
or
ss
mov
add
inc
dec
fwait
sbb
dec
and
cmp
rol
push
es
outsb
mov
fwait
mov
cld
push
shl
std
add
dec
idiv
bound
data16
leave
xor
pop
cld
jae
fcomps
stc
das
xor
pop
cmp
lcall
push
push
mov
jnp
in
test
push
cmp
ja
sbb
mov
out
mov
cmp
lea
sbb
adc
add
adc
add
pop
dec
ja
arpl
push
subl
arpl
fdivrs
imul
mov
repz
sahf
enter
add
inc
sub
cmp
arpl
test
mov
xchg
or
test
cmp
xchg
sahf
pop
in
rcrb
filds
fldl
inc
shl
mov
fstl
mov
lods
pop
add
pop
jle
insb
and
xchg
jmp
or
notb
sbb
push
jbe
mov
sub
pop
xor
jno
rcll
xchg
fwait
lcall
jne
or
sbb
sub
rolb
sbb
int
in
repz
xchg
xor
mov
mov
xchg
dec
sub
cmp
mov
xchg
push
mov
jns
nop
mov
subb
cmp
repz
enter
cmp
inc
mov
xorb
ja
stos
and
sbb
and
in
sbb
mov
pop
jg
mov
cmc
and
pushl
adc
daa
mov
adcb
pop
es
sti
dec
pop
mov
imul
jnp
cmp
testb
or
repnz
mov
pop
cmp
sbb
fs
insl
or
mov
aas
iret
loop
sbb
cmp
dec
push
and
imul
movsb
aas
ljmp
inc
scas
xor
sbb
inc
cli
sub
shrb
push
dec
dec
mov
shr
inc
cmp
cmc
nop
mov
shll
fucomi
push
sti
dec
push
mov
mov
clc
jle
xor
pop
inc
dec
dec
pusha
mov
stos
jge
cmp
push
sbb
cmp
cmp
sarl
inc
jnp
adc
dec
scas
in
and
movsb
and
lret
mov
mov
out
pusha
js
xchg
pop
fwait
inc
add
dec
cmp
fildl
ja
inc
dec
xchg
shr
add
sbb
inc
gs
pushf
jle
test
inc
pusha
xlat
repz
in
cmp
scas
inc
pop
into
mov
sbb
sub
aas
jo
movsb
in
rcrb
sbb
daa
out
test
ja
push
pop
aas
mov
cld
sbb
std
dec
mov
mov
imul
add
mov
push
add
sub
cltd
lret
aam
popf
xor
inc
addr16
cli
mov
push
xorb
cs
jp
inc
jo
mov
jg
or
mov
jl
jmp
test
adc
add
es
cmp
icebp
mov
imul
xor
loopne
xor
jnp
mov
cmp
xchg
mov
jl
xchg
add
insb
jmp
xor
sti
addb
jp
inc
pop
testl
inc
dec
mov
out
popa
fstpt
jl
push
sub
std
movsb
sbb
jnp
cmc
inc
cmp
sarb
icebp
push
mov
jmp
push
dec
jecxz
iret
sbb
push
dec
dec
insb
xchg
mov
jmp
repnz
rclb
imul
and
pusha
sahf
ja
aam
jmp
pop
mov
lcall
and
hlt
push
xchg
pop
sbb
outsb
fdivrl
pushf
pop
loopew
adc
cld
sbb
fdivs
cmp
incl
or
jge
mov
and
scas
rclb
test
std
xor
icebp
stos
or
mov
mov
in
jle
or
ret
push
and
inc
pop
mov
bnd
sub
inc
pop
movsb
sbb
test
push
xlat
or
dec
ficoml
lahf
fdivr
cmc
sti
mov
lds
xor
adc
sarb
ficoml
repnz
enter
fcomps
push
std
pop
adc
ficompl
in
mov
jle
jb
mov
mov
dec
lods
jno
push
jmp
xchg
int
lcall
mov
sti
jbe
test
push
inc
subb
dec
lret
sbb
or
push
sbb
repnz
mov
dec
jns
rolb
inc
test
cmp
mov
mov
rorb
inc
inc
arpl
dec
push
jl
pusha
mov
xlat
lock
into
adc
lods
loopne
faddl
jae
fmulp
test
adc
adc
fstpl
jl
stos
sbb
adc
sbb
test
imul
jp
scas
inc
and
push
fs
sub
mov
ret
jl
pop
fwait
aam
dec
pop
nop
dec
sti
rolb
or
and
mov
mov
out
call
or
xchg
rol
xor
inc
dec
cwtl
add
mov
mov
enter
cltd
fs
mov
push
arpl
ret
cmpsb
ret
dec
je
dec
adc
xchg
call
and
dec
mov
aas
cmp
mov
jl
lods
clc
sub
add
inc
push
xchg
shrl
fstps
ret
xor
iret
pop
shll
pushf
nop
sub
jg
push
sub
jbe
outsl
stc
cmc
adc
inc
fcoms
js
or
test
cmp
push
and
xchg
inc
out
jnp
sub
fwait
mov
fisttpl
mov
mov
inc
fiaddl
popa
test
test
dec
inc
mov
sbb
mov
push
ret
test
xor
sbb
mov
das
push
mov
jnp
jnp
hlt
cmp
cmp
sbb
in
xchg
mov
push
push
insb
out
out
inc
sbbl
push
lods
dec
xchg
negl
sar
add
sbb
sti
mov
in
jae
call
and
jle
sbb
pop
dec
test
stos
les
adc
fisttps
xor
inc
sbb
push
or
loopne
in
lock
sub
mov
call
jo
imul
test
imul
cmp
cmpsb
rcr
or
cmp
data16
fcoml
or
dec
fdivrs
pop
lahf
push
mov
dec
fwait
jmp
jge
fisubrs
mov
sub
stc
or
lcall
scas
xchg
add
cmpsl
lods
lea
mov
and
movsb
sbb
in
cmp
ja
lds
xor
add
js
loope
fwait
xor
cmp
pop
mov
jno
dec
in
loop
rcrl
iret
mov
lods
cmp
in
push
ljmp
add
fildl
cmp
movmskps
dec
testl
push
and
adc
add
leave
xchg
int3
push
pop
sub
cld
sub
je
sarl
lods
testb
es
fidivrs
adc
dec
adc
sbb
cmpsb
aas
dec
out
mov
mov
into
adc
imul
jecxz
cltd
jmp
stos
idivb
imul
fcomip
push
sub
pop
pushf
mov
mov
jne
fists
cmp
ret
rclb
mov
dec
xchg
inc
adc
dec
js
adc
jg
jge
pop
inc
fs
popa
jl
xchg
sub
mov
jno
jbe
mov
add
pop
jbe
xor
hlt
int3
xor
addr16
add
pop
dec
icebp
xchg
ja
ljmp
fisttps
mov
sarb
add
aam
es
mov
mov
xchg
pusha
mov
das
outsb
gs
push
jbe
push
cmpsl
mov
pop
and
fadds
pop
mov
push
cmp
cmp
icebp
lock
pop
stos
mov
jmp
mov
fists
cmc
dec
subl
inc
ja
push
test
aam
push
loopne
mov
daa
addr16
lahf
arpl
mov
xor
enter
push
shrl
imul
and
xor
repnz
outsb
jne
test
lods
pop
sub
psrlq
mov
or
xor
into
in
inc
das
sarb
add
lahf
jno
add
rolb
pop
pop
enter
es
leave
xor
push
xchg
mov
sub
lds
xchg
inc
ja
pop
pop
ffreep
xor
cmpsb
inc
mov
cld
ja
lcall
je
divb
call
add
lss
inc
dec
inc
dec
pop
sbb
imul
ja
sub
xor
imul
daa
push
mov
mov
push
cmp
jg
push
xor
and
inc
pop
inc
add
cmp
xchg
outsl
xor
jb
xchg
fcmove
aad
cmp
bound
dec
data16
jb
gs
rol
in
les
rorb
jbe
xchg
lahf
xchg
or
pop
jmp
push
jl
bound
push
loope
mov
add
fstpt
inc
sbb
push
nop
pusha
aam
jbe
sub
mov
inc
cmc
adc
rorl
repz
and
sub
cmp
jnp
adc
jle
mov
cmp
dec
jae
cmp
xchg
popa
mov
aad
mov
out
inc
cmpsl
sub
inc
rolb
pop
int
mov
rorb
cltd
lods
scas
loop
xor
and
dec
jae
pop
adcb
dec
inc
dec
xchg
dec
cmp
ja
mov
stos
inc
into
iret
jmp
pop
mov
pop
jg
mov
push
jge
fwait
loop
dec
out
mov
fimuls
dec
xlat
scas
cld
xorb
push
push
int3
or
bnd
daa
mov
popa
sbb
nop
fnsave
popf
jge
xor
jg
aas
push
cmp
fists
ja
xchg
mull
imul
aas
inc
shll
arpl
push
subb
fsubrl
and
mov
dec
adc
pand
jp
xor
arpl
push
pusha
cmp
popa
out
xchg
mov
add
lea
aam
shll
mov
pop
fistpll
in
dec
inc
mov
pop
and
icebp
mov
or
imul
cmc
mov
shlb
je
or
in
push
inc
popf
mov
jge
cmpsb
lret
push
fdivr
jo
dec
fcmovb
inc
sbb
sbb
pop
shll
sub
loopne
pop
mov
dec
stc
test
ret
imul
sbb
leave
pop
mov
jmp
pushf
xchg
mov
pop
sbb
jno
mov
cmp
fwait
testl
test
lahf
xor
adc
mov
js
cmp
movsl
push
pop
cltd
out
and
iret
lret
pop
mov
mov
xor
cmp
icebp
pop
iret
mov
sbb
and
mov
cmpsb
jne
out
imul
sbb
out
push
out
jmp
xchg
adc
ficompl
add
xchg
dec
jnp
xchg
movsb
imul
xor
inc
lds
clc
push
insb
push
and
jnp
out
xchg
dec
popl
inc
pop
test
mov
loopne
outsl
xlat
dec
sbb
xchg
jns
lods
test
mov
xchg
lea
bound
jae
iret
mov
mov
xor
jb
flds
jbe
push
add
add
cmp
xchg
lcall
inc
cmpsb
mov
movsb
shlb
adc
arpl
mov
pop
out
cli
ss
sbb
shll
inc
push
push
out
dec
push
int
mov
sarb
int3
stos
test
push
ret
pop
jo
dec
das
pop
and
lods
xchg
dec
out
pop
cld
icebp
cmpsb
gs
jbe
mov
hlt
adc
lea
xchg
notb
std
das
iret
pop
mov
adc
mov
mov
mov
int
out
fidivrl
arpl
dec
adc
insb
imul
pop
sbb
mov
inc
xor
test
sbb
jle
inc
punpckhwd
movsb
mov
dec
push
push
ss
hlt
push
mov
push
xchg
xchg
mov
negb
repz
xor
mov
inc
fiaddl
imul
pop
push
add
dec
jns
es
or
mov
loope
and
adc
pop
arpl
jecxz
out
out
ficompl
mov
push
fsubrl
inc
leave
xor
jge
jo
jbe
mov
hlt
mov
pop
mov
arpl
enter
pop
in
test
aam
sub
clc
mov
sub
bound
fs
fwait
mov
sti
popf
cmp
syscall
xchg
push
sahf
xchg
loop
cmp
pop
pop
jo
pusha
inc
movsb
jb
xor
lahf
fcompl
clc
xor
test
insl
and
loopne
cmc
hlt
cmpsl
push
mov
testl
dec
xchg
in
es
mov
enter
push
icebp
jle
dec
sub
push
hlt
pop
dec
adc
cwtl
mov
ret
sub
outsl
mov
nop
repnz
lock
xchg
mov
push
add
sbb
xor
js
xchg
sub
scas
stc
dec
insl
inc
add
add
xchg
jp
jmp
insb
ljmp
add
stos
out
popa
mov
jg
mov
pusha
sbb
stos
pop
push
sarl
push
imul
or
cmc
andb
je
xchg
mov
ljmp
mov
mov
xor
lret
stos
dec
pop
inc
out
pusha
sbb
push
std
fists
insb
mov
lods
push
jge
in
outsb
icebp
sbb
imul
jl
sub
jb
cmp
outsb
popa
into
in
enter
sub
aam
sbb
xchg
sbb
fiaddl
or
sbb
mov
popf
push
ds
jo
mov
shr
iret
jmp
fdivl
bound
call
jle
pop
cmp
jo
pop
xor
jo
and
cmp
in
push
push
dec
repz
mov
int3
add
mov
testb
repnz
rcrb
fwait
mov
xchg
xorb
lahf
inc
setnp
clc
outsl
xor
and
lods
iret
movsb
inc
rorl
mov
add
lods
sbb
data16
jge
pop
xchg
mov
nop
sbb
mov
pop
addb
inc
mov
scas
lcall
push
in
fcomip
imul
mov
inc
into
popl
xchg
xchg
iret
stos
mov
arpl
gs
stos
xlat
inc
mov
outsb
add
pop
jmp
push
cmp
cmpsb
ja
push
mov
jg
mov
fidivl
ljmp
lret
lock
pusha
inc
add
in
rcll
movsl
test
push
inc
hlt
imul
sbb
std
sub
jecxz
decl
add
cld
mov
xor
and
jb
das
dec
mov
in
pop
mov
pop
pop
repz
mov
push
fistpl
xor
jnp
add
and
inc
jp
lcall
mov
mov
push
shlb
fwait
lcall
pop
pop
xlat
lods
cld
pop
mov
out
adc
or
push
mov
int
jae
jg
mov
loopne
sahf
leave
inc
add
inc
fisubl
sbb
mov
iret
lods
push
or
mov
and
jg
push
xor
pop
arpl
adc
jl
xorl
mov
mov
in
dec
inc
leave
sar
rorb
sbb
mov
inc
mov
jnp
dec
mov
adcb
and
xchg
shl
ja
push
into
adc
iret
push
in
xchg
fnstsw
jmp
push
cs
jnp
cwtl
adc
adc
jmp
dec
fldt
aas
dec
xor
push
adc
test
sbb
stc
jp
xchg
iret
lret
push
xchg
pusha
jnp
mov
lods
adc
repz
mov
and
inc
dec
inc
lods
sbb
mov
fidivs
pop
in
add
push
pop
jno
test
sub
test
loop
and
movsb
je
push
sti
pop
mov
mov
pop
lret
ja
into
lods
rolb
std
mov
sbb
arpl
scas
outsb
mov
jb
add
and
pusha
dec
sbb
fnsave
pop
dec
scas
inc
push
fsubrl
clc
aad
pop
les
dec
mov
or
cmp
rcrl
decl
lods
fsubrl
cmc
xor
lods
rcll
push
jb
inc
mov
jl
ret
inc
stc
push
jge
bound
lret
sub
mov
cmp
stos
pushl
jmp
mov
sbb
push
cmp
movsl
decl
mov
dec
cmp
or
mov
mov
dec
mov
xchg
in
mov
hlt
and
ret
je
fldt
push
xor
lods
pop
stc
push
leave
jne
xor
mov
mov
sub
ljmp
out
adc
rorb
imul
mov
sbb
adc
dec
loopne
mov
lahf
mov
dec
daa
sbb
insl
int
jl
sbb
sbb
insl
into
das
push
dec
pop
cmpsl
or
dec
xor
aas
outsl
sahf
cmc
dec
xchg
loopne
mov
aas
add
loopne
fwait
dec
mov
jg
in
cwtl
scas
lret
cmp
aaa
cmp
cwtl
incl
andb
inc
bound
in
dec
xchg
les
andl
cmp
cmp
in
xchg
cmp
xchg
int3
mov
xlat
mov
jns
push
xor
mov
inc
paddsb
loop
sbb
pop
in
xor
pop
roll
lret
mov
mov
mov
and
cmpsl
out
iret
sbb
adc
jnp
mov
inc
inc
mov
mov
cld
jmp
into
mov
mov
jae
sub
shll
ja
aam
mov
rorl
repnz
negl
xchg
aad
xchg
or
pop
outsb
fcompl
pop
inc
adc
inc
ljmp
sarl
mov
push
rorb
sub
mov
outsl
scas
sub
and
lods
push
push
cmp
push
stc
mov
loope
push
xor
sbb
push
shr
adc
fsub
addr16
pushf
sbb
push
jl
jns
cltd
and
jmp
out
xchg
dec
adc
es
pop
fisubrs
test
mov
pop
scas
sahf
scas
addr16
push
inc
outsb
mov
push
mov
xor
xchg
les
insb
movsl
cltd
enter
push
sbb
cs
xor
std
es
movsl
push
or
jmp
lock
ja
jmp
dec
int
dec
pushf
pop
sub
repnz
mov
sub
gs
cld
mov
mov
fisubl
aam
jmp
mov
data16
mov
call
hlt
lea
movsl
mov
dec
fmul
push
jl
ja
fimull
sbb
inc
ds
mov
push
out
xlat
sub
in
mov
lret
call
call
lods
or
negb
mov
push
lods
aaa
pop
sbb
rorl
adc
lock
rorb
mov
xor
pop
sbb
insb
cmp
xor
iret
or
cmc
mov
insl
jns
pop
bound
faddl
sbb
mov
mov
sub
pop
pop
adc
es
mov
lret
xchg
sub
jp
enter
cmp
dec
mov
cmc
xor
in
xchg
jae
dec
xor
mov
dec
jbe
xor
into
lret
je
enter
mov
inc
in
fs
jge
test
mov
imul
push
xorb
push
jle
cltd
adc
push
inc
fs
cmc
mov
add
or
mov
jmp
inc
sbb
aas
pop
in
fwait
hlt
mov
lcall
pop
mov
sub
xchg
xor
jl
loope
sbb
int3
or
cmp
data16
in
inc
das
pop
fwait
fsub
inc
push
hlt
sbb
call
xchg
pop
scas
repz
sti
cmp
es
dec
dec
add
loope
pop
dec
push
jns
mov
jg
rcrl
adc
and
aas
cmp
pop
inc
incl
push
mov
dec
ja
jno
mov
xchg
inc
inc
mov
mov
xchg
ss
cld
clc
call
jle
jnp
mov
ret
orb
loope
add
and
ss
addr16
sbb
sar
xor
ret
xchg
out
mov
pop
into
push
outsb
rcr
push
out
mov
xchg
mov
add
sub
push
xchg
or
out
push
cmp
mov
cld
sbb
ljmp
lret
sub
dec
stos
sbb
sub
cmpsb
adc
fstpt
push
incl
sti
popa
mov
imul
push
dec
or
adcl
sarl
dec
sti
fwait
mov
inc
or
ror
mov
and
icebp
sub
sub
mov
cmp
rcrb
ljmp
dec
pop
fstpt
mov
lret
incl
xchg
aad
xor
xor
and
pop
mov
lods
xor
aam
repz
push
push
insb
jno
and
sti
out
ret
les
jge
cmp
xlat
mov
sbbl
inc
or
sahf
adc
inc
dec
mov
jno
rclb
mov
xchg
ret
jno
push
jne
rcrl
sarb
pop
js
shrl
jbe
nop
repnz
mov
pop
inc
inc
pop
arpl
or
vmovdqa
test
pop
imul
jle
insb
pusha
add
pop
pusha
repnz
pop
dec
repz
or
mov
inc
add
mov
aam
push
xchg
lods
addb
pop
icebp
in
push
sbb
and
mov
mov
xchg
sub
out
scas
popa
pop
mov
sub
fcmovu
mov
sub
jle
push
test
mov
fimuls
mov
fwait
clc
mov
push
mov
adc
add
adc
push
pop
sahf
mov
add
dec
sbb
cmp
inc
testb
std
jmp
repnz
or
aad
dec
fcmovnu
mov
in
fsubrs
and
add
in
mov
stc
sar
jmp
xor
daa
sbb
lahf
call
xlat
push
add
mov
lret
jl
fiadds
mov
test
inc
fwait
mov
das
movsl
or
fcomi
xor
mov
and
sub
pop
jnp
jl
push
fldz
sbb
xchg
lods
movsl
cmp
test
fidivrl
daa
aad
jp
mov
inc
lock
mov
scas
pop
lahf
popa
andl
cld
jmp
push
rclb
dec
sub
mov
jnp
mulb
mov
xor
inc
add
hlt
outsb
pop
lods
inc
mov
imul
push
cmp
scas
test
push
jo
ljmp
cmp
insl
dec
pop
add
fistps
and
or
jbe
adc
adc
mov
mov
adc
lods
or
aam
sar
push
cs
ljmp
cltd
pop
pop
xchg
ret
test
loopne
mov
movsl
shl
or
test
mov
fidivl
fbstp
adc
pop
xor
push
jb
bound
loop
js
lret
rcl
sbb
sbb
std
sub
popl
call
ret
mov
pusha
pop
in
roll
lret
int
divb
orb
add
jno
xor
push
cmpb
outsl
or
add
jp
pop
sub
popa
push
lods
and
std
mov
dec
cwtl
mov
ljmp
push
jbe
addb
sub
gs
lahf
int
sub
push
dec
mov
jp
xchg
jno
mov
sub
pop
mov
sbbl
or
loope
adc
rorl
ss
sti
dec
enter
divl
mov
cmpsb
mov
sbb
test
push
dec
push
insl
xchg
pop
pop
mov
mov
adc
mov
dec
dec
adc
pushf
cwtl
fwait
inc
daa
mov
lods
hlt
jns
outsl
mov
rorb
leave
xchg
cmpb
jecxz
dec
rorl
xor
xor
out
mov
gs
cmp
adc
in
cmp
jmp
dec
loopne
or
or
pop
push
mov
xchg
jp
jbe
lahf
mov
mov
hlt
jg
pop
js
or
icebp
xor
enter
inc
ret
aas
jg
lret
rcll
inc
pop
addr16
adc
add
ret
and
xchg
jo
or
idivb
int3
xchg
cmpsl
mov
jl
loop
dec
mov
mov
divb
cmp
icebp
loope
mov
stc
test
jmp
cmp
daa
pop
dec
jnp
xor
sbb
cwtl
push
sti
out
push
repz
push
cmp
in
xor
call
int
pop
imul
push
add
mov
pop
rcl
leave
cld
lock
jbe
ret
aaa
pop
mov
mov
push
insb
addb
inc
out
loopne
loopne
mov
frstor
jp
push
movsl
mov
adc
sarb
mov
scas
jae
dec
cmpsl
adc
sbb
mov
inc
outsl
cmpsl
leave
sbb
cmp
mov
mov
add
sti
or
sbb
call
and
mov
jnp
sub
or
ret
fsubrs
push
js
bound
loop
jmp
and
jbe
rorl
xchg
clc
lret
sets
pop
sbb
mov
xchg
arpl
jmp
fisttpll
xlat
btr
bound
pop
jns
adcl
xchg
pop
mov
sti
sub
aad
adc
ret
xor
pusha
sti
sbb
push
pop
pop
mov
leave
loop
mov
insl
imul
xor
arpl
std
pop
int3
movsl
xor
add
xor
sarl
adc
stc
add
clc
push
stos
fbld
imul
xor
pusha
inc
or
pop
jle
imul
mov
outsb
aam
xor
ss
test
ret
jp
div
mov
imull
insb
int
inc
dec
fistpl
jns
push
out
adc
test
jle
fsub
wrmsr
pop
insb
dec
jmp
jns
mov
cmpsl
addb
mov
movsl
rclb
pusha
icebp
fwait
ss
mov
ror
fwait
dec
adc
mov
lods
imul
loope
in
push
inc
pop
mov
push
mov
xchg
fdivl
imulb
fnsave
cmp
jne
pop
adc
xor
and
mov
divb
jle
push
jg
jae
lret
jecxz
imul
mov
int3
push
jle
cmp
mov
es
leave
dec
mov
pop
rolb
das
fsubrl
lahf
sbb
sbb
inc
movsb
cmp
push
icebp
xchg
cmp
call
shlb
in
lds
imul
test
mov
inc
mov
xchg
dec
mov
ret
dec
xchg
adc
add
sub
pop
in
loope
mov
f2xm1
adc
sarb
mov
cld
dec
jno
sub
inc
pop
sub
push
jbe
pop
mov
sti
loop
mov
scas
call
jecxz
fbld
movsl
mov
in
test
fimull
js
das
mov
in
cmp
mov
adc
xchg
push
inc
iret
pop
mov
in
das
dec
mov
ljmp
mov
or
adc
add
add
inc
paddq
movsb
iret
jmp
mov
sub
mov
xor
mov
or
stc
push
enter
aas
aas
or
mov
pop
or
dec
pop
dec
xor
or
mov
shll
std
mov
bound
mov
imul
aas
pop
inc
xchg
sbb
inc
not
jl
psrlq
ret
jmp
mov
bound
imul
or
cmc
test
pop
mov
dec
fimuls
xchg
movsl
aam
mov
pop
mov
gs
cmp
push
sub
push
aaa
mov
mov
jae
mov
mov
inc
add
out
or
rol
add
mov
les
add
mov
dec
pusha
sub
mov
adc
pop
repnz
xor
stos
sub
cmp
in
mov
addr16
lret
movsb
jp
mov
jecxz
nop
jmp
mov
aas
lea
jmp
sub
cmc
push
jno
stos
insb
inc
subb
stos
pop
inc
lea
and
or
out
rol
cmpsb
jecxz
push
movsb
dec
inc
jnp
mov
into
pop
jmp
pop
sbb
xlat
lcall
out
mov
jae
loopne
ljmp
call
jle
sub
and
or
aad
mov
cwtl
daa
or
movsb
xchg
js
bound
mov
dec
xor
orb
mov
dec
mov
cmpsb
cwtl
mov
cmp
sbb
xchg
or
jg
and
inc
ja
cmp
and
mov
sub
inc
scas
cltd
fcmovnb
dec
adc
cmpsl
leave
mov
inc
adc
lret
shlb
jmp
mov
int
imul
mov
push
cmc
jae
test
add
clc
out
popf
call
push
loope
push
subl
data16
mov
or
inc
imul
test
push
xchg
xchg
or
ljmp
hlt
or
mov
mov
xchg
movsl
push
cs
aam
jl
adc
test
mov
insl
cmp
lock
xchg
insb
or
les
fwait
add
lea
xchg
inc
push
mov
insl
pop
incl
jno
jo
jl
inc
cld
jg,pn
out
or
pop
dec
mov
adc
sub
or
push
aas
cmp
jmp
dec
sarl
cmp
xchg
sbb
jg
out
repnz
sub
dec
sub
sti
pushf
jno
bound
sbb
iret
jl
into
or
push
in
xchg
loopne
call
push
aaa
jne
dec
adc
sti
dec
mov
jae
jb
ds
fbstp
mov
xchg
mov
outsl
push
aad
mov
mov
out
pop
sar
adc
xchg
jno
jmp
es
out
shll
shl
arpl
push
movsb
add
add
pop
sub
xchg
push
fldl
stos
pop
mov
cmp
imull
in
mov
sbb
inc
pusha
inc
loope
xor
fisubl
add
stos
mov
rorl
ret
leave
cmpb
sbb
adc
imul
enter
dec
or
jl
jb
bound
xor
int
and
xchg
ja
dec
mov
mov
mov
jmp
shll
daa
jge
sbb
testb
add
dec
int3
scas
jb
stos
xor
scas
dec
pop
jp
jmp
dec
std
stos
pop
icebp
lret
in
and
cs
negl
inc
les
gs
jns
pop
jl
add
mov
sbb
dec
fnstsw
sbb
test
and
pop
cld
xor
add
hlt
sahf
cmp
pop
inc
pop
or
fldt
cmp
pushl
movsb
push
aam
xor
sub
jb
divl
sub
sbb
and
jne
mov
outsb
cwtl
push
enter
pop
gs
fdivr
jns
scas
jb
mov
mov
add
sbb
daa
cmpb
dec
mov
test
in
jno
test
mov
fsts
jno
or
lods
cmp
mov
mov
push
dec
orb
push
sbbb
pop
iret
dec
dec
pushf
addr16
loope
dec
and
mov
fcoml
mov
push
cmc
xchg
lret
pusha
or
les
push
stos
mov
call
scas
lcall
xchg
inc
mov
int
dec
mov
js
cmp
push
dec
nop
and
xchg
movsb
dec
sti
into
mov
or
ror
dec
pop
scas
mov
xor
fisttpll
lret
jg
sbb
jge
or
mull
ret
push
pop
push
adc
jmp
pop
shll
mov
and
and
push
sub
mov
stc
movsl
popa
mov
ja
push
je
push
dec
jns
xor
scas
xchg
or
cmc
adc
push
pop
dec
cmc
dec
fcoms
cmc
mov
mov
mov
push
pop
xor
and
xor
fistpl
aad
jl
out
loope
rorl
enter
push
dec
mov
xlat
adc
es
jae
mov
sub
mov
dec
das
xor
dec
fisttpl
sub
cmp
fdivp
outsb
orl
sbb
push
xchg
dec
add
add
mov
cltd
loopne
cltd
repnz
or
loope
dec
mov
xchg
mov
push
mov
insl
dec
lock
xchg
xor
pop
orl
sbb
mov
or
dec
xlat
into
push
cs
sub
xor
mov
popw
jne
inc
mov
push
jg
cmpsb
out
lods
arpl
cmp
les
jecxz
jg
stos
dec
mov
dec
imul
psubb
pop
mov
pop
dec
push
aas
and
out
cld
insl
mov
cmp
or
mov
pop
arpl
into
int3
mov
dec
sub
fs
insb
xchg
jmp
in
shlb
dec
aaa
dec
imulb
lret
jmp
in
mov
and
adc
mov
sub
push
xchg
adc
mov
fcmovnb
mov
jb
cld
pop
into
in
repz
stc
pop
xchg
jp
mov
mov
adc
inc
jg
mov
adc
dec
jns
xchg
icebp
rolb
cmp
xor
xchg
or
xor
hlt
and
cmp
jecxz
pop
repz
cmp
dec
jo
clc
jl
cltd
test
sbb
xor
out
dec
push
mov
push
inc
mov
mov
outsl
jae
lock
jnp
popf
int3
cmp
into
jo
xor
jl
out
insb
gs
xchg
mov
dec
inc
in
mov
jae
mov
mov
out
adc
mov
push
push
mov
dec
out
movb
push
inc
es
js
push
xchg
add
sahf
jmp
lret
lcall
jo
das
jle
cs
sub
xorl
dec
ss
notl
jbe
and
test
imul
push
jae
adc
movsb
pop
pusha
mov
lods
fsubl
das
sub
out
xchg
sbb
xorb
lret
sti
pusha
fmull
pop
in
mov
in
push
out
jno
inc
movsb
sub
and
or
cmc
scas
cmc
pusha
inc
cmp
mov
push
in
jg
pop
mov
cmpsl
adc
xlat
cmpsl
vmulsd
push
adc
mov
sbb
int
xchg
int3
fsubrl
out
pop
mov
xlat
xchg
bound
and
test
xchg
ja
xor
test
insb
sti
movsl
out
movsb
jno
add
and
lret
or
sbb
mov
dec
inc
lods
or
mov
pop
adc
ljmp
fisttpll
cmp
and
fdivr
lret
mov
or
idivl
jbe
out
mov
mov
divl
sbb
int3
and
or
push
mov
dec
xor
ja
loope
mov
push
mov
imul
mov
lret
hlt
sbb
loope
leave
push
repz
or
mov
nop
sti
push
les
add
push
clc
test
adc
out
jnp
dec
pop
xor
push
cwtl
stos
shll
jmp
jb
push
shl
out
push
push
jns
stos
push
xchg
gs
es
data16
insb
sbb
scas
pop
push
pusha
mov
push
jge
adc
rep
fstpt
cmp
in
jns
mov
pusha
push
sub
xchg
add
sub
mov
fistps
lcall
orb
jge
add
mov
adc
arpl
sbb
insl
and
lret
lcall
mov
insl
and
aaa
mov
inc
ja
mov
cld
xchg
adc
test
aaa
dec
in
jnp
loopne
dec
inc
in
xor
into
adc
loope
mov
xchg
test
repz
adc
dec
inc
pop
inc
xchg
mov
mov
sub
lds
iret
or
imul
rolb
cltd
test
nop
sub
mov
fdivrp
pop
imul
push
and
dec
push
xchg
jle
sbb
dec
in
dec
push
mov
jnp
or
jo
stos
xchg
or
sbb
jbe
loopne
mov
xchg
mov
fwait
lahf
cltd
jp
cltd
ja
dec
in
loope
xchg
dec
sti
push
lds
arpl
lahf
enter
movsb
mov
and
call
dec
pop
stos
or
test
testb
jmp
cs
mov
sahf
adc
aaa
xchg
insb
lea
jl
mov
fldl
mov
xor
push
pop
icebp
mov
jno
orl
inc
add
mov
mov
pushl
adc
inc
pop
inc
xchg
or
scas
notl
ja
test
add
dec
sbb
jo
cltd
inc
js
aad
dec
outsb
repz
jge
out
sbb
mov
xlat
inc
icebp
cmc
inc
pop
dec
push
mov
inc
adc
outsb
clc
daa
scas
loope
mov
mov
mov
push
mov
add
call
imul
cmc
mov
pop
adc
pop
inc
jle
insl
add
xor
aas
shr
icebp
fistps
into
addr16
jo
test
sbb
cmpsb
lea
pop
xor
mov
out
add
in
cld
inc
stc
or
insb
pop
jl
mov
dec
outsl
scas
int
pop
pop
or
mov
xchg
dec
cmp
mov
ljmp
jb
mov
jo
lahf
add
xchg
rorl
ja
test
into
fs
xchg
adc
nop
xchg
sub
les
lods
test
mov
lods
scas
out
mov
outsl
sub
fnstsw
addb
inc
enter
scas
lock
or
add
push
iret
or
dec
cld
mov
stos
cmp
div
mov
out
arpl
push
loop
in
sbb
fcmovb
sbb
sbb
dec
in
test
sbb
lcall
in
or
xor
inc
mov
adc
mov
push
inc
xor
jb
cmp
push
add
dec
mov
cmpsb
loope
sahf
int
sbb
mov
ret
mov
clc
rorb
dec
mov
push
xor
mov
pop
fidivrs
push
pop
mov
or
jmp
iret
dec
xchg
push
pop
cld
lret
push
mov
xor
in
addr16
shl
ret
dec
pop
loope
add
inc
mov
jae
leave
sbb
nop
test
lret
lret
lret
faddp
xchg
dec
and
and
adc
orb
out
scas
es
int
xor
scas
cmp
mov
lret
and
clc
mov
les
push
fsubrl
jl
and
jnp
sahf
mov
dec
into
and
inc
add
mov
fnsave
repz
mov
ljmp
out
mov
jmp
scas
call
pop
push
sti
notl
out
cmp
jl
inc
and
jecxz
popf
dec
jge
pop
mov
jmp
jg
pop
xchg
ret
mov
popf
lods
sub
loopne
adc
jg
jge
mov
push
mov
clc
cmp
clc
sub
shrb
jnp
jne
cmp
inc
movsl
add
fst
insl
add
mov
pop
add
xchg
pushf
rorl
inc
test
leave
xlat
add
insb
jnp
mov
shr
incb
xor
popf
and
push
lahf
aas
sbb
movsb
mov
dec
mov
mov
dec
rorl
cmp
mov
cmp
sbb
inc
push
imulb
mov
mov
out
adc
repnz
movl
enter
shll
mov
aaa
push
out
aam
mov
jg
adc
and
arpl
mov
enter
int3
into
sti
adc
mov
stos
push
sub
or
rcrl
add
in
test
sar
jae
mov
mov
jns
mov
pop
push
lret
inc
jmp
mov
add
jl
pop
jmp
nop
sbb
mov
cs
pusha
push
push
dec
out
fisttpl
pushf
mov
inc
add
je
mov
xor
ja
outsl
jno
ret
test
dec
scas
inc
mov
out
pushf
mov
aam
sbb
sub
popf
mov
jmp
xchg
mov
ljmp
test
test
or
testb
push
out
dec
inc
fwait
insl
test
ret
cmp
movl
push
add
icebp
push
xor
push
and
mov
xchg
shlb
icebp
repz
or
lock
mov
pop
lea
cwtl
pop
popf
jns
pop
mov
push
into
cmpsl
test
sbb
jp
push
or
push
push
outsb
push
or
dec
sbb
cmp
cmpsl
into
repz
test
and
pop
sbb
jl
and
push
dec
adc
push
cmp
dec
mov
jl
cs
and
pop
add
dec
xor
divb
push
mov
popa
mov
into
call
jae
xchg
dec
insl
push
out
mov
daa
jg
outsb
push
add
jo
mov
sti
mov
dec
fnstsw
mov
in
xor
repz
fisttpll
shr
sub
pop
aam
mov
outsl
inc
mov
dec
and
mov
adc
and
mov
sar
popf
sbb
mov
fcoml
in
pop
roll
mov
jno
push
mov
sub
add
dec
jno
pop
and
add
in
ret
xchg
mov
inc
lea
and
mov
or
insl
mov
pop
mov
fs
aaa
lret
ss
fldenv
inc
cwtl
out
imull
fcoms
leave
sbb
pushf
xchg
mov
sub
sbb
jb
stc
add
xchg
jno
push
jle
dec
pop
and
pop
in
or
subb
repz
scas
ja
dec
xor
xchg
in
loopne
cmpsl
nop
inc
jmp
inc
mov
and
cmp
xchg
push
fcompl
dec
insl
out
push
daa
or
out
or
mov
fcmove
cmp
or
dec
repnz
jg
xlat
mov
sub
daa
add
pop
mov
enter
dec
out
inc
pop
mov
xchg
test
scas
pop
xor
pop
popa
fs
gs
in
or
add
mov
and
or
jmp
jmp
repnz
in
sahf
test
in
ret
push
sahf
sti
mov
orl
mov
add
jle
mov
mov
mov
lea
mov
jmp
movsb
out
push
push
out
sahf
add
xchg
jbe
add
fisttpl
mov
mov
mov
into
jnp
outsb
inc
xor
xchg
push
dec
mov
push
inc
mov
outsl
mov
out
adc
inc
notl
repz
xchg
dec
add
lret
dec
sub
xchg
xchg
or
mov
rcrl
roll
es
mov
mov
xorb
pop
les
cmp
inc
push
scas
pop
push
xor
add
add
add
out
loop
jecxz
cmp
lret
sub
sbbb
test
cli
push
jge
das
mov
mov
int3
xor
ljmp
iret
mov
dec
test
popa
dec
xor
lods
sti
push
mov
dec
loopne
mov
or
pop
cmp
ss
adc
sub
sub
dec
jge
aam
dec
mov
fsts
jae
inc
adc
add
adc
movsb
mov
dec
add
ret
jmp
pop
negl
es
in
pop
std
mov
mulps
test
fstpt
mov
lods
jb
or
lret
sbb
cmp
and
add
scas
mov
dec
push
jae
and
inc
pop
loopne
imul
out
jmp
mov
mov
adc
scas
xor
loopne
rolb
aaa
inc
insb
test
lods
mov
mov
mov
icebp
lods
data16
push
jecxz
lds
out
jno
enter
incb
pop
jnp
pop
fisubl
xchg
movsb
jmp
test
add
gs
imul
jnp
leave
cld
dec
out
pop
in
test
xor
sbb
mov
insb
or
ficomps
bnd
arpl
xchg
daa
jne
sti
jmp
or
fmul
movsb
ss
add
ja
int
std
lcall
pop
mov
mov
es
dec
mov
jecxz
roll
pop
cmp
sub
arpl
std
inc
bound
cmp
mov
cmp
pop
jae
mov
pop
cmp
insl
jg
sti
in
dec
lods
dec
jg
push
mov
mov
enter
mov
cmpsl
mov
cmp
fmuls
xor
push
and
dec
push
pop
in
into
inc
dec
xor
jl
neg
inc
mov
in
xor
inc
in
hlt
aaa
ds
push
clc
mov
mov
push
jg
out
icebp
dec
or
mov
dec
push
test
sti
std
aad
or
pop
aam
lods
clc
cmp
ja
xor
xchg
jl
lret
je
pop
mov
in
xchg
into
das
rcll
cmp
shlb
push
es
adc
mov
shl
jns
mov
mov
mov
mov
loop
mov
pop
or
mov
add
and
or
rclb
jb
ja
or
mov
mov
fsin
cwtl
arpl
rcr
sbb
cmc
or
xchg
cltd
or
fistpll
test
cmp
scas
data16
sub
and
leave
pop
push
lds
mov
or
in
fsubl
out
jmp
pop
xchg
std
or
inc
cmp
jb
cmp
int
inc
daa
aas
inc
mul
fsubrs
adcb
andl
pop
mov
scas
fiaddl
fimull
scas
aas
mov
js
movsl
dec
ret
mov
inc
test
shrb
mov
into
sub
fcomi
jg
pop
pop
cmp
cmc
mov
sti
jge
stc
and
jne
fnsave
mov
into
sbb
cmpsb
push
inc
inc
cltd
orl
out
js
sbb
pop
inc
lcall
fs
in
sbb
or
test
cmpsb
loopne
mov
fsubp
repz
lds
pusha
jno
fidivrl
cld
in
sub
push
dec
pusha
pop
call
push
inc
adcl
sarb
fs
xchg
rorl
sti
mov
add
jno
ret
cmp
movsb
xchg
sub
je
add
iret
jl
and
out
nop
jno
adc
pop
dec
lret
inc
ror
incl
std
daa
dec
sub
fsubr
or
fisubl
inc
push
add
mov
fistpl
js
fcmovnb
rorb
cmpsl
daa
sarl
mov
or
xor
fwait
pop
mov
mov
push
insl
dec
cmc
mov
sarb
lcall
int3
outsl
push
inc
test
adc
sbb
mov
cmp
leave
dec
xchg
adc
jnp
mov
cltd
out
aas
cli
cmc
aad
leave
sbb
mov
add
in
inc
popa
icebp
loope
enter
adc
cs
lret
jo
jg
sbb
sub
mov
pop
push
pop
sbb
or
push
mov
sbb
or
into
dec
scas
leave
jne
test
pushf
pop
pop
shll
cmp
or
mov
mov
mov
dec
sbb
dec
sub
hlt
sbb
dec
mov
lret
jns
jg
adc
or
fidivrl
fisttpl
loop
xor
loopne
ret
iret
fwait
xchg
lret
inc
sbb
xor
jg
out
orb
mov
mov
fwait
rcll
xchg
dec
xor
outsb
add
jmp
test
cmp
and
js
pusha
sub
icebp
jl
les
mov
insl
add
sti
and
icebp
sbb
jno
out
adc
cwtl
lret
sbb
mov
add
fsubrl
mov
mov
filds
mov
jno
jmp
inc
int
and
xchg
ljmp
icebp
adc
mov
jg
dec
cltd
mov
xchg
push
pop
mov
ja
bnd
and
mov
stc
fdivl
data16
pop
loope
inc
xor
pop
mov
cltd
fiaddl
test
sbb
lods
repz
out
test
xchg
cmp
adc
imul
lahf
push
jmp
aam
add
sarl
pop
and
mov
xchg
mov
enter
xlat
ret
adc
pxor
mov
fbld
sub
xor
mov
mov
add
in
sbb
ds
jmp
loope
test
hlt
sbb
push
adc
mov
inc
or
mov
push
int3
and
and
jp
or
ja
pop
les
lahf
repz
imul
aam
out
mov
jnp
xchg
pop
daa
mulb
push
xchg
das
adc
dec
mov
sbb
jmp
cpuid
or
jmp
lahf
lds
test
aam
fs
inc
pushf
repnz
movsw
or
or
mov
call
jecxz
jb
xchg
clc
sub
jecxz
fdivrl
xor
adc
cli
loope
dec
movsb
cltd
jg
xor
push
xchg
jecxz
insb
inc
mov
ljmp
add
leave
mov
sub
add
in
jnp
push
xlat
ret
outsl
repz
test
loope
push
je
add
push
pop
cmp
sarb
mov
mov
stos
call
mov
and
fidivs
xchg
or
fmul
adc
pop
jl
mov
jg
hlt
out
sbb
clc
out
add
and
stos
into
into
mov
cs
int3
cs
sti
pop
or
or
mov
xchg
dec
sbb
sub
dec
cltd
lret
lcall
mov
dec
mov
xchg
push
push
cs
cmp
ficompl
xor
lea
dec
test
xor
into
fsubrl
or
dec
cwtl
inc
adc
and
das
xchg
stos
out
call
dec
fcmovbe
mov
lret
sbb
mov
fildll
and
xor
dec
dec
inc
dec
mov
int
mov
xchg
mov
inc
outsb
popf
push
dec
add
and
ret
pop
stc
je
mov
pop
std
xchg
ds
sbb
or
sub
fwait
jl
push
push
xor
sbb
pop
dec
xor
insb
dec
je
loopne
pop
pop
jecxz
jecxz
push
popf
mov
sub
loopne
imul
jg
jle
pop
mov
xlat
pop
ss
mov
adc
shrl
cld
dec
dec
cli
xlat
or
in
cmp
xchg
aad
jecxz
fnsave
mov
pop
mov
jb
mov
insb
jbe
sub
mov
rolb
or
ja
or
orb
fdivrs
dec
mov
addr16
roll
cmc
in
pop
jg
pop
adc
sub
or
dec
or
test
div
jbe
jb
bound
clc
testb
out
inc
rcll
aam
out
jp
testl
sbb
rorb
test
lcall
dec
iret
add
aam
jbe
fwait
lea
lock
sbb
in
mov
or
or
les
cmpsl
pop
dec
jne
imul
dec
popa
pop
cli
std
cld
jnp
sbb
ret
pusha
and
test
imulb
movsl
xchg
sti
lret
sbb
inc
jle
jp
push
push
outsb
mov
popf
in
add
scas
stc
in
push
fisubl
mov
int
pop
sub
cmpsl
mov
sbb
pop
inc
repz
mov
xchg
and
loop
sbb
iret
cmp
mov
cwtd
outsl
rclb
push
jae
sbb
push
push
andb
imul
imul
inc
mov
inc
call
sub
insl
hlt
cld
shll
adc
movsb
push
pop
cmp
icebp
inc
mov
clc
mov
inc
jp
rep
enter
leave
scas
flds
dec
pop
xchg
rcrl
lods
dec
rorl
sti
sub
pop
out
push
test
stc
mov
frstpm(287
aaa
adc
lods
test
sub
pop
and
or
add
mov
ljmp
popf
push
fnstsw
sbb
mov
jmp
lock
xchg
dec
repz
pop
std
mov
jo
not
cmp
hlt
inc
cltd
fisubrl
mov
mov
in
int
movsb
push
nop
cmpsw
xchg
js
mov
shrl
dec
jae
inc
xchg
ficomps
scas
out
xchg
loopne
stos
cmp
pop
sbb
in
cs
cmp
fmull
movsl
xlat
mov
pop
fs
push
sbb
dec
out
addl
dec
push
jb
or
call
ja
sub
test
mov
lods
loope
out
xor
pop
jbe
xchg
and
call
iret
jae
out
cmp
fs
ja
dec
pusha
dec
fwait
mov
sbbb
lock
and
jl
push
add
loop
in
xor
jae
cmp
loope
out
ja
pushf
aad
adc
stos
xchg
enter
rolb
pushf
scas
xchg
loopne
int
cmpsl
ret
mov
push
rorb
push
xchg
and
xchg
and
push
clc
mov
dec
inc
xor
iret
fs
imul
loope
sbb
xlat
add
clc
mov
mov
lahf
imul
jmp
test
outsl
mov
ljmp
xlat
popa
and
cmp
jecxz
ljmp
iret
fmuls
mov
cmp
out
gs
xor
leave
out
mov
andb
mov
js
cmp
jne
fwait
test
mov
xchg
sbb
cmp
stc
jnp
lds
fs
in
ffreep
and
repnz
mov
xchg
jnp
adc
mov
sarb
inc
fs
pop
icebp
pop
add
adc
xlat
adcb
sub
xor
jno
insl
push
lods
call
cltd
ficompl
repnz
add
pop
mov
out
lds
dec
mov
incl
cmpsb
mov
mov
inc
scas
mov
dec
cmpsl
mov
xor
or
clc
inc
hlt
lcall
mov
jbe
imul
pop
jno
nop
test
xchg
add
outsl
sti
scas
mov
xchg
mov
push
dec
xchg
jmp
push
pop
push
enter
cld
and
fnstsw
mov
pop
push
movsb
cmp
popf
cmpsb
sbb
add
out
aam
iret
dec
mov
std
jmp
mov
sbb
dec
push
mov
adc
pop
or
cmc
mov
dec
dec
xor
adc
fcmovne
and
lods
mov
es
inc
std
leave
lret
pop
sub
mov
call
and
inc
push
and
xchg
arpl
inc
movsl
repnz
mov
sub
cld
cmp
push
sbb
mov
ss
dec
mov
or
adc
movsb
scas
jbe
push
fdiv
mov
cli
pop
push
fwait
sbb
data16
outsl
cli
js
shlb
jp
test
cwtl
out
jl
jg
leave
pushf
fimuls
push
cmpsl
push
pop
add
pushf
std
sbbl
pop
push
adc
iret
jae
std
stos
xlat
or
or
and
lods
cmp
inc
ss
pusha
jl
xor
mov
popl
hlt
fmulp
andl
es
stc
ja
adc
push
mov
jb
enter
pop
jmp
dec
mov
movsl
adc
pop
mov
mov
mov
out
mov
add
cmc
rcrl
mov
icebp
sub
mov
shll
xchg
mov
or
cltd
xlat
pop
cmp
xchg
xchg
or
jmp
adc
xor
mov
es
xchg
aaa
cmp
or
movsl
xchg
int
std
fisubs
in
mov
mov
data16
int3
das
cmp
cli
xor
aaa
jle,pn
jns
adc
xor
jecxz
inc
jns
call
add
add
ret
pop
cmp
lret
jecxz
popf
inc
xlat
push
inc
mov
lods
call
dec
mov
add
push
xchg
cmpsb
lods
sub
push
subl
xlat
adc
push
or
mov
and
sub
test
jg
dec
fmull
adc
or
jg
imul
add
push
jnp
mov
and
and
dec
adc
xchg
nop
dec
outsl
mov
inc
jl
adc
inc
imul
add
stc
mov
lock
cmpsl
push
out
dec
rolb
or
xor
stos
jae
jge
ja
arpl
jle
pop
into
popa
mov
xor
std
xchg
outsl
add
pop
lods
mov
pop
divl
cmpsl
insb
sarl
dec
scas
adc
cmp
xchg
outsl
jecxz
pop
lods
loopne
mov
mov
jae
xchg
outsb
xchg
sbb
adc
adcl
cmpsb
jne
jp
and
sbb
sar
decb
add
ds
jb
cld
adc
inc
jl
fstpt
xorl
adc
or
sbb
hlt
dec
arpl
clc
cmpsb
cmp
stc
cmp
arpl
mov
fmul
xor
xchg
cmp
inc
pop
dec
add
adc
dec
mov
jecxz
in
jnp
adc
push
dec
mov
enter
lds
out
into
pop
cmp
xchg
add
mov
add
nop
lock
inc
dec
or
ret
test
pushf
jmp
ret
mov
mov
dec
fldcw
or
imul
fistl
jnp
push
adc
and
jmp
mov
pop
popf
dec
cld
mov
imul
lret
jne
jns
pop
jl
jle
inc
pop
dec
sub
js
in
imul
add
scas
mov
pop
or
pop
mov
pop
jae
inc
test
sub
ljmp
shl
mov
sarl
sbb
jecxz
rcrl
inc
pop
sbb
sbb
sub
and
js
decl
iret
ljmp
outsb
enter
adc
sub
outsb
andb
mov
dec
data16
mov
push
pop
cmp
out
cmp
add
lock
xor
cld
out
inc
xor
push
pop
rol
popf
lret
enter
imul
sub
cmpsb
pop
ljmp
iret
dec
shr
sahf
jmp
fs
cs
std
mov
outsb
sub
mov
cmp
repz
es
mov
fsub
xchg
cld
pushfw
into
inc
or
dec
jbe
push
push
push
cld
pop
sub
jl
and
inc
mov
div
fisttpl
imul
dec
dec
sbb
xor
add
jb
jecxz
aam
and
fisubs
cltd
push
filds
pop
jp
push
inc
movsl
scas
call
in
sti
inc
lcall
mov
and
pop
xchg
lock
test
clc
scas
sbbb
push
cmpsb
xlat
fisubrs
ja
adc
cmp
bound
out
and
or
sbb
inc
jbe
xchg
mov
pop
loopne
add
mov
cs
fstpl
arpl
aas
popl
sub
ljmp
xadd
mov
push
fwait
sti
mov
pop
inc
notl
sbbb
fs
push
insb
or
lock
mov
pop
sbb
mov
dec
mov
pop
popf
ja
mov
xor
bound
mov
mov
mov
mov
aam
ss
mov
mov
xchg
insl
clc
inc
xchg
sbb
bswap
dec
cmp
cli
mov
je
fistl
stos
addr16
jl
sar
push
mov
jae
and
inc
mov
shlb
jb
and
outsl
mov
fwait
lret
mov
loope
mov
lods
jbe
dec
fstpt
xor
and
jp
add
imul
je
ljmp
cli
lea
subb
pusha
mov
dec
fisttpl
aam
sbb
inc
jp
aad
dec
outsl
mov
pushf
fwait
add
out
rolb
or
rclb
fs
int
popa
ljmp
in
mov
adc
inc
mov
dec
fldt
outsb
mov
sbbl
sub
int3
push
push
and
es
cmpsb
and
push
sarb
push
push
mov
mov
andb
mov
add
loopne
popf
addr16
or
mov
sub
inc
mov
js
nop
insb
aas
xor
push
idivl
imul
arpl
push
cld
cltd
std
xchg
loope
dec
add
shrb
cwtl
dec
xchg
int3
sti
mov
pop
and
fldt
dec
cld
mov
les
popf
test
jno
push
dec
mov
lds
xchg
pusha
sahf
pop
jg
jmp
ljmp
dec
fmull
int3
jl
mov
das
cmp
cwtl
sti
adc
dec
gs
or
shl
mov
das
ror
fidivrs
fisubrs
mov
sub
sub
fs
add
cmpl
sbb
add
sbb
sub
dec
jp
fs
leave
mov
cmp
insl
mov
in
lahf
popa
rcll
xchg
push
dec
jae
or
test
push
mov
adc
movsl
xchg
pop
in
mov
out
lea
push
or
jnp
addr16
cmp
mov
subl
push
sahf
inc
mov
adc
cmpsb
mov
inc
mov
pop
mov
iret
mov
rclb
or
jb
ljmp
pop
pop
and
lds
cwtl
cs
sub
rorl
leave
ds
scas
pop
or
pusha
cmp
mov
cmpsb
jge
mov
hlt
add
sbbl
jl
adc
push
inc
dec
ltr
mov
stos
and
and
inc
push
jp
jbe
xlat
cltd
shlb
ja
mov
sub
or
lcall
mov
mov
push
mov
dec
test
cmp
push
sti
xor
mov
stos
iret
mov
lret
sti
and
mov
std
mov
dec
adc
adc
test
std
inc
bound
adc
shll
sub
add
test
aas
ds
cmp
push
rclb
iret
jnp
xor
stos
sbb
or
rorb
or
loope
test
in
fistpll
stos
clc
xorb
fstpl
cmp
imul
cmp
or
dec
xchg
loopne
add
jae
and
adc
pop
inc
inc
iret
mov
mov
icebp
and
xor
add
sub
icebp
lods
test
xor
movb
sub
insl
pop
hlt
mov
mov
pop
xchg
pop
arpl
lea
mov
jb
sub
mov
pop
jl
push
je
loopne
cmp
jl
push
jmp
scas
insb
mov
iret
inc
dec
cli
mov
or
cmp
movsb
movl
add
aaa
pop
jl
mov
rcll
or
push
fiaddl
pop
jbe
fiadds
inc
push
lods
push
mov
push
roll
dec
repnz
es
stos
ret
cmp
xor
gs
add
aam
lret
adc
cmp
loope
push
xchg
out
or
fimuls
sub
iret
and
push
sbb
or
mov
add
jge
cmp
dec
fidivrl
lock
mov
cmp
and
mov
lahf
add
and
dec
iret
je
mov
xor
aaa
pop
test
mov
jmp
pop
mov
imul
notl
pop
adc
rolb
pop
ja
dec
fimuls
lahf
adc
sub
ffree
cld
or
lret
push
dec
push
imul
fwait
les
out
imul
outsl
lret
loop
push
inc
sbb
scas
push
cmp
and
mov
incb
movsl
xchg
sub
inc
xorb
test
ss
push
lcall
mov
dec
adc
inc
jecxz
cmpsl
lods
fwait
loopne
fbld
andl
out
and
popfw
aad
aas
orl
clc
push
call
add
jnp
mov
ja
mov
clc
arpl
mov
mov
dec
push
dec
lock
sub
jl
pusha
lea
xchg
mov
sbb
xor
or
push
sarw
outsl
inc
sbb
lods
jo
push
scas
dec
call
popf
lahf
jg
imull
xchg
cltd
fnsave
xchg
loopne
jo
mov
mov
sub
insb
pop
movsl
cmp
aad
cmp
xchg
jae
ret
push
mov
ss
cld
nop
jbe
sub
mov
mov
jge
mov
pop
repz
mov
dec
cli
out
cmpsb
mov
pop
lods
dec
sahf
sahf
inc
sub
repz
cmp
cmpsl
sbb
mov
sub
jbe
cmpsb
xchg
stc
lods
sahf
loope
dec
movsl
fs
in
mov
push
add
mov
dec
sub
push
ret
loope
loopne,pn
popa
add
bound
add
push
cmp
inc
push
push
cmp
jbe
inc
repz
fmul
fidivrl
cmc
shrl
scas
je
push
sbb
nop
popa
insl
scas
dec
pop
mov
adc
ficomps
inc
pushl
insl
dec
pop
rolb
call
dec
adc
sarl
jbe
inc
cmpsl
push
push
iret
addr16
sub
outsl
lret
shll
dec
pop
das
sbb
repz
repz
movsl
inc
stc
outsl
xchg
rol
movsb
iret
stos
push
mov
out
adc
data16
and
adc
nopl
cld
iret
jne
fisubl
dec
mov
lcall
add
sub
int
decb
cld
pop
fwait
cmc
mov
push
and
js
outsl
or
jl
std
ss
or
out
out
test
inc
pushf
dec
pop
loopne
loop
pop
cmp
cmp
jp
cs
popf
dec
mov
rclb
sbb
mov
testb
pop
and
ret
stos
sbb
shll
dec
mov
jnp
sbbl
mov
std
dec
or
fs
shrl
inc
lret
dec
jo
jnp
adc
ds
imul
jno
jmp
ljmp
mov
inc
aam
mov
adc
ljmp
loop
and
or
xor
sbb
and
subl
or
cltd
sbb
add
mov
mov
push
pop
mov
add
or
mov
outsb
cs
push
or
insl
jmp
jns
cmp
dec
add
aad
or
inc
inc
sub
insl
lret
inc
notl
rcrl
int
jnp
pusha
bound
cmp
jnp
sub
cmp
stos
adc
inc
or
rcll
insl
stc
mov
cmp
mov
inc
nop
push
dec
fcomps
push
mov
sbb
fsubrl
hlt
call
pusha
test
stos
stos
sahf
jg
or
inc
mov
fdivrl
addl
ret
or
int3
ljmp
sarb
jae
leave
loope
cmpsl
sbbb
or
repz
inc
orb
push
or
or
popa
sti
sub
and
cli
mov
adc
pop
jno
lret
jno
inc
sbb
jbe
stc
fmul
mov
outsb
fwait
or
mov
or
icebp
dec
daa
mov
cltd
std
sub
jae
sti
inc
movsl
dec
hlt
jmp
movsl
insb
roll
sbb
mov
fistpll
in
mov
lds
pop
sbb
into
lea
cmc
inc
and
pop
cltd
cs
test
rclb
mov
mov
call
jae
pushf
cmp
jle
cltd
dec
xor
dec
clc
or
mov
enter
mov
and
mov
jmp
mov
and
push
push
pop
dec
add
jg
fistpll
mov
mov
inc
ss
pop
dec
mov
iret
movsb
dec
loopne
or
push
mov
fwait
out
jo
mov
pop
aas
mov
fcoml
mov
jmp
cld
mov
inc
in
push
dec
filds
push
mov
mov
dec
mov
xchg
repz
push
mov
sub
jne
rcl
pop
call
aad
mov
rcrl
jecxz
mov
xor
inc
mov
dec
fwait
xchg
mov
fwait
cwtl
push
ljmp
test
cltd
mov
rep
stc
adc
dec
cmp
adc
icebp
sbb
pop
jb
or
mov
arpl
jecxz
lahf
insb
fisttpll
add
jg
testb
adc
push
mov
mov
mov
fcoms
jmp
ja
cmp
inc
insl
mov
addr16
mov
pop
xchg
dec
lret
push
sbb
jmp
adc
ljmp
add
std
jmp
jg
jle
dec
cpuid
cmp
mov
test
pop
cltd
lock
es
lea
shll
stc
add
lret
idivb
and
mov
test
cmp
jle
mov
mov
pusha
add
xchg
lods
mov
enter
sub
subb
sub
stc
lds
cmp
scas
mov
push
inc
inc
repz
clc
dec
push
sbb
push
mov
push
call
inc
sbb
sub
inc
roll
mov
lds
mov
clc
xchg
sbbb
or
dec
je
dec
dec
jp
pop
je
mov
push
js
sbb
xchg
cmpsl
or
pop
mov
call
pusha
push
dec
jo
inc
xchg
jmp
cmp
ss
test
jl
jo
int3
pusha
sbb
imulb
inc
jnp
sahf
test
dec
xlat
xor
mov
repz
mov
sub
sbb
and
repnz
sbb
fdivp
aaa
pop
dec
mov
jl
mov
mov
and
push
push
ja
sbb
lock
push
mov
cmp
aad
xor
dec
inc
pop
neg
xorl
inc
popa
jmp
push
ss
mov
stos
jo
addr16
push
int
mov
lahf
jge
lods
push
mov
nop
cmpl
jno
into
ss
cmp
xchg
dec
pop
fnsave
cmp
push
ss
int3
roll
loop
lret
sbb
pop
stos
xchg
dec
shll
xchg
hlt
repnz
xlat
or
mov
xchg
xor
scas
arpl
idivb
decl
loop
pop
sbb
xor
popa
fmull
and
sub
lods
fucom
or
cmp
inc
inc
jno
dec
icebp
gs
ja
push
mov
out
in
insb
ljmp
enter
dec
or
or
enter
mov
mov
clc
cmp
in
sti
mov
int
xor
or
cmp
pop
sbb
or
sbb
or
sarl
dec
std
cld
xor
gs
mov
mov
fwait
arpl
sub
cld
xor
mov
mov
sahf
js
pusha
dec
inc
movsb
mov
push
shll
stos
mov
mov
das
cmp
mov
data16
sub
dec
push
js
pop
ret
inc
xor
mov
mov
mov
cltd
sbb
jg
jmp
repnz
cmp
sbb
or
push
add
xor
imul
xchg
sbbb
xchg
cwtl
xor
xchg
imul
push
and
imul
dec
les
cmp
data16
hlt
mov
sub
dec
push
mov
dec
inc
cmp
pop
int3
jmp
mov
stos
fisubrs
pop
sbb
xor
pop
mov
inc
jg
enter
aas
xchg
xchg
jge
inc
pop
sbb
push
jns
imul
mov
pop
fimull
sbb
lret
jmp
sbb
push
jbe
imul
seto
std
mov
je
mov
dec
jle
sub
jmp
pop
icebp
insl
cwtl
inc
inc
mov
fsubp
jmp
sub
repz
lahf
add
shlb
in
dec
jmp
mov
idivl
push
cmpb
add
mov
movsb
adc
scas
pop
insl
shrl
push
lock
clc
sbb
push
data16
stc
jno
rcl
pusha
sub
adc
dec
repz
push
idiv
push
cltd
jge
inc
xchg
out
rcll
push
dec
cmpsl
lods
inc
outsl
das
sub
and
add
push
imul
adc
sbb
outsl
sbbb
mov
fwait
dec
push
cmp
ds
push
xorb
mov
cmp
xor
pusha
bound
jno
mov
pop
mov
fstl
push
imul
outsl
jmp
inc
mov
dec
xor
sbb
flds
mov
add
sub
ret
add
nop
and
mov
stc
je
sub
and
daa
jp
lret
out
push
shrl
scas
cs
fmul
icebp
lods
push
pop
add
or
dec
adc
sub
pop
mov
push
shl
mov
orl
mov
cmp
out
push
inc
jno
adc
stc
lret
in
in
orb
and
add
mov
push
and
aas
packuswb
xor
insl
adcl
sbb
jmp
mov
push
inc
jno
mov
movsb
jge
rclb
xor
jge
ret
cmp
mov
outsb
rcrb
repz
inc
jbe
loopne
adc
lret
sbb
cmp
fwait
xchg
mov
add
mov
insb
dec
push
fs
pop
arpl
mov
push
jmp
outsl
jae
mov
fwait
inc
inc
cmc
mov
sti
loope
xor
push
in
rcll
fmull
sub
sub
hlt
jmp
decb
xchg
sub
cmp
inc
xor
in
in
pusha
imull
sarb
cmp
or
lods
enter
jge
push
push
not
subl
les
ret
scas
outsl
jg
adc
pop
testb
adc
sbb
dec
jmp
sbb
cmpsl
rcll
iret
popa
in
xor
fiadds
jnp
std
fcomip
xchg
mov
cmpsb
fiaddl
stc
jnp
icebp
mov
je
jl
arpl
jl
loope
xor
cli
sbb
dec
jae
add
or
loopne
fs
inc
dec
or
out
pop
testl
pop
fs
inc
pop
fbld
cltd
cltd
jge
jae
push
fdivrp
fdivl
insb
out
stc
std
test
and
mov
loope
jb
push
mov
sbb
andb
jp
jl
jae
imul
outsl
mov
cmp
pop
lods
ljmp
ljmp
and
cmpb
pushf
subl
rcrb
in
sub
pusha
push
jg
imul
sbb
pusha
or
fistps
fstpl
mov
pop
in
into
pop
push
iret
mov
jl
out
and
js
xor
pusha
sarb
mov
sti
mov
dec
pop
xchg
call
fisttpl
js
dec
cmp
push
and
inc
ret
cmp
enter
into
fildl
mov
push
mov
add
ljmp
fs
mov
andl
shl
push
xchg
xor
add
out
dec
xor
test
xchg
lahf
mov
int
add
xchg
shlb
cmp
sub
pushf
lahf
dec
inc
xchg
arpl
in
cmp
cmp
movsb
sub
loope
or
mov
push
mov
push
add
scas
inc
fidivrl
pop
jae
sub
pop
mov
imul
jo
cltd
lods
jl
cmp
lret
mov
lock
xchg
loopne
lcall
movsl
in
inc
add
mov
in
inc
addr16
int
dec
xor
aas
mov
subb
add
hlt
jg
or
pushf
cwtl
lret
dec
mov
stos
or
dec
repnz
inc
stc
sbb
sbb
pop
mov
adcb
movsl
push
call
cs
pop
loope
adc
push
xor
dec
ds
add
pop
push
add
push
jecxz
and
xlat
je
inc
ret
cmp
mov
divl
fcoms
jnp
adc
inc
mov
sahf
lods
inc
jns
movsb
add
ret
mov
shl
add
into
mov
pop
pop
das
cmp
mov
ljmp
xchg
fs
inc
or
add
sub
mov
out
sbb
cmc
ficoml
xor
imul
popa
and
sub
jl
ret
fisubrs
aad
push
mov
pop
jp
xor
adc
add
push
jmp
mov
dec
fs
mov
dec
out
add
jb
dec
popa
mov
into
imul
fcomp
add
pushf
sub
mov
xor
add
pop
pop
mov
pop
ss
sahf
push
dec
mov
int
lods
cmp
lret
dec
fmul
fistpl
dec
in
pop
ja
not
dec
popa
sahf
cmp
cmp
sbb
mov
sar
mov
dec
push
dec
fisubrl
pusha
add
mov
lea
cmp
pushf
jecxz
test
xchg
cmp
pusha
mov
dec
push
mov
or
fadd
xchg
lret
daa
lret
sti
cmpl
into
pushf
jecxz
stos
aaa
dec
mov
mov
xchg
mov
xor
outsl
jg
hlt
popl
add
jo
lcall
push
dec
out
stos
or
dec
fbld
inc
sub
or
jecxz
leave
adc
add
lahf
cmp
mov
stos
cli
cmpl
loope
mov
jno
jl
xchg
repz
mov
xor
lcall
xchg
dec
insl
mov
or
sbb
outsb
repz
sbb
adc
les
imul
sbb
dec
push
push
aas
jno
insl
pop
xor
mov
lcall
sbb
adcb
fisubl
nop
xchg
jecxz
dec
inc
outsl
pop
icebp
in
in
into
dec
shrl
cmp
and
outsb
dec
adc
dec
scas
dec
pop
mov
cmp
daa
and
jp
push
sbb
cmp
mov
dec
xchg
jbe
xchg
pop
jl
inc
imul
pushf
mov
scas
scas
sub
dec
cmp
mov
mov
sbb
sbb
sub
lods
aad
sub
xchg
test
insb
mov
jg
sbbl
sbb
popf
in
mov
push
mov
cwtl
inc
pop
xor
adc
and
gs
rcrl
lea
rcrb
jbe
pop
dec
sbb
iret
rcl
dec
call
push
dec
pop
in
pop
andb
mov
pop
sbb
mov
imul
inc
sub
pop
call
xchg
or
lea
jb
push
pop
jne
cltd
mov
popf
outsb
std
xorl
insb
sbb
into
adcb
push
add
in
inc
xor
jg
fs
imul
imul
or
dec
sti
mov
inc
ret
push
cmp
sbb
inc
insb
sub
push
movsb
or
pop
mov
nop
icebp
pop
je
sbb
cmpsb
xor
and
hlt
mov
lock
and
test
daa
hlt
addl
add
das
xchg
test
and
sbb
gs
loope
and
push
jmp
cld
es
dec
outsl
xor
cmp
mov
mov
lret
aaa
push
jns
imul
xchg
popf
icebp
or
jne
jns
in
das
sbb
push
mov
cli
and
or
jo
jbe
jb
pop
out
fcomp
xchg
mov
out
imul
mov
lcall
mov
lahf
xlat
pop
dec
xchg
adc
add
xor
xor
testb
lds
pop
jno
xor
pop
xor
mov
fbld
sub
fsubs
jno
add
rorb
sub
clc
ffree
mov
js
push
mov
std
cld
push
pop
clc
jbe
adc
stos
sub
dec
mov
or
xor
lods
fstpl
lea
dec
pop
pusha
xor
fisubrl
imul
ja
jecxz
sbb
dec
out
sahf
pop
inc
jge
push
mov
loopne
pop
jle
jb
hlt
or
sub
mov
push
add
mov
add
lods
sbb
addb
orb
pop
cmp
sub
pop
bound
dec
pop
and
jl
cltd
fwait
out
aas
cmp
std
cltd
sbb
jo
sti
out
xchg
fidivl
mov
pop
mov
add
or
and
cmp
xchg
pop
ja
mov
xchg
fbld
sbb
bound
loope
cld
cli
mov
mov
dec
repz
pop
mov
cmc
push
sub
lock
push
sahf
fildll
or
sub
test
outsl
add
addb
out
xchg
push
out
mov
mov
fcmovbe
pop
test
add
andb
sub
in
and
mov
jg
mov
mov
sub
and
sub
sub
cmpsb
sub
test
dec
scas
xchg
jge
lock
dec
add
mov
pop
pop
push
mov
lods
ja
mov
jle
xchg
and
xor
out
mov
jl
fimuls
scas
stc
andb
adc
push
cmp
jmp
or
push
je
icebp
xor
out
sbb
dec
sbb
jno
sub
jle
fisttpl
ja
inc
pop
sbb
jns
fisttpl
cmp
daa
pop
jbe
daa
sub
pop
push
mov
jp
fistps
notl
sbbl
repnz
lret
ss
andl
xor
js
mov
cmp
daa
nop
push
inc
movsl
xor
cltd
scas
push
loope
jno
push
divl
push
mov
loop
repz
movsl
test
pop
fimuls
cltd
cmp
mov
ret
push
add
mov
push
inc
cmpsb
sbbl
cmp
inc
pop
pop
enter
xchg
xlat
cmp
sbb
stos
test
mov
inc
sarl
ss
lret
jae
mov
or
cmp
pop
aad
add
test
inc
sub
add
movsb
enter
adcl
test
cmpsl
inc
frstor
mov
dec
clc
inc
dec
add
adc
sbb
mov
cli
push
push
loopne
push
inc
mov
rclb
lock
scas
in
shll
test
ja
fcmovnu
cwtd
cmp
sub
push
into
pop
outsb
in
pusha
cmpsb
sbb
call
xchg
mov
xchg
jecxz
fcomps
mov
xor
xor
std
enter
mov
dec
clc
leave
rcll
fs
stc
xor
addr16
push
movsb
cmp
inc
mov
arpl
shll
or
pop
addl
add
mull
out
adc
stc
es
icebp
mov
mov
mov
andl
lret
add
addb
cmp
iret
mov
out
pop
dec
pop
sub
sub
les
xchg
sahf
mov
adc
jbe
inc
or
pop
pusha
mov
add
xchg
stos
jns
mov
leave
outsl
cmp
or
or
cmp
push
mov
push
les
mov
bound
ljmp
jl
mov
mov
dec
cs
mov
pop
inc
and
std
adc
cli
xchg
sahf
cwtl
mov
jl
pop
adc
jecxz
add
insb
cmc
sub
pop
inc
in
aad
pop
enter
xor
xor
mov
fs
sub
push
addr16
jg
jmp
adc
je
cmp
push
mov
dec
push
popa
xchg
sub
pop
int3
pushf
push
pop
lock
and
and
iret
mov
leave
ljmp
icebp
cli
lcall
pushf
cmp
sbb
lods
sbb
aad
xchg
adc
mov
inc
inc
jno
push
add
push
cwtl
push
fisubl
fmuls
das
add
mov
or
add
push
jb
popf
fisttpl
cmpsl
lret
push
adc
sbb
and
xchg
aad
ficomps
xchg
daa
and
and
jl
jne
push
js
inc
push
call
mov
es
mov
dec
je
mov
shlb
jbe
xchg
cltd
lret
jmp
popa
pusha
mov
jno
pop
cmp
fwait
mov
repz
subl
jge
push
dec
mov
int
push
popl
sahf
clc
and
jb
es
mov
in
mov
add
cmp
add
and
jb
adc
mov
js
pusha
jae
rcrb
xor
fcmovnb
mov
pusha
push
sbb
addr16
pusha
sbb
lret
add
inc
cli
sbbl
scas
subb
inc
inc
mov
rorl
cmp
lret
fcoml
mov
push
ljmp
dec
adc
dec
les
shrb
jle
pop
mov
loope
inc
testb
inc
mov
sub
pop
rcrl
adc
mov
cmp
fldt
imul
fimuls
int3
shrb
in
insb
ljmp
sbb
fwait
mov
sti
dec
cmp
pop
and
iret
xchg
fwait
adc
sbb
shlb
fnstsw
and
das
sub
icebp
dec
adc
ret
or
cmp
insb
repz
pusha
nop
mov
pop
or
idiv
cmp
adc
mov
or
jg
int
ss
and
out
jg
mov
mov
rcrb
xchg
dec
in
fdivp
dec
aaa
stos
aam
mov
dec
pop
jbe
test
mov
push
subl
sbb
dec
mov
inc
push
ljmp
dec
xor
cld
pusha
cmpsl
mov
orl
pop
sbb
and
scas
scas
js
xchg
jbe
popf
jecxz
and
inc
xor
mov
and
xlat
pop
add
rcrb
inc
cmc
pop
mov
dec
jae
loope,pn
pop
xchg
jns
sub
dec
mov
lds
movsb
jge
pop
call
inc
icebp
mov
jg
sub
in
les
fiadds
adc
xchg
jecxz
push
movsl
jl
push
adc
mov
pop
pop
js
gs
fwait
idivl
repnz
ret
jle
pusha
or
ficoms
mov
pop
int3
ret
cld
fldt
xchg
jmp
sbb
jp
ret
mov
pop
mov
mov
cmp
inc
stos
das
sbb
mov
out
push
movsb
xchg
push
jne
and
fisttpl
cs
dec
sub
ret
sarb
fstpt
es
hlt
inc
ficoms
push
xor
gs
std
xchg
mov
mov
fwait
mov
and
and
jmp
jbe
sbb
jecxz
loopne
mov
jb
push
fidivrs
mov
push
mov
je
cli
fmul
sub
xor
ja
push
adc
test
aad
push
cmp
addb
mov
bswap
inc
dec
out
sub
mov
push
mov
push
cmc
test
push
scas
lahf
dec
dec
aam
mov
lods
fwait
jae
fisubs
aad
imul
add
std
mov
add
cmpsl
inc
out
mov
enter
dec
cmpsb
sarb
xchg
jno
je
or
cltd
cwtl
ret
into
xor
inc
pushf
add
push
lock
data16
pop
mov
xchg
mov
fld
cmp
sub
or
mov
ja
mov
or
cmp
das
movsl
xor
pushl
mov
cmp
cmpb
dec
repnz
fisttpll
test
mov
adc
loope
nop
sub
jbe
mov
dec
fs
data16
push
in
loopne
mov
inc
pop
mov
outsl
cmpsb
fsubrs
adc
test
leave
iret
or
jo
inc
mov
clc
imul
fwait
cmpsb
adc
mov
push
mov
lret
jno
pusha
adc
call
or
add
subb
xor
jno
pop
pushl
dec
stos
cmp
inc
frstor
lret
push
int3
or
ror
mov
mov
mov
int3
pop
int
mov
or
mov
ss
mul
fnstsw
xchg
test
fists
sub
sbbl
cmc
jnp
hlt
in
nop
jbe
and
mov
push
inc
sbb
addr16
mov
dec
movsl
ret
dec
std
or
jmp
iret
jl
sbb
mov
sub
pushf
rolb
clc
fwait
je
cli
xor
mov
push
insb
lret
shl
leave
cwtl
mov
cmp
dec
stc
decl
xor
stos
push
pop
cmc
mov
jne
fcomps
out
inc
add
sbbb
mov
shrb
lock
mov
pop
outsl
inc
pop
xchg
jp
out
xor
pop
cmc
repnz
mov
roll
jo
xor
add
cmp
xor
int
repz
ljmp
xor
fmuls
aaa
mov
pop
ds
xchg
mov
lret
jg
or
cmp
push
andb
std
ret
push
mov
sub
int3
iret
movsl
adc
ja
lcall
push
ja
mov
insb
ja
adc
add
aas
adc
pop
mov
adc
push
sbb
and
xchg
iret
mov
sti
sub
loopne
in
fdivrs
cmp
cwtl
popa
mov
pop
cltd
pop
inc
lock
cmp
or
pop
aam
xor
sysexit
jl
pop
mov
data16
pop
test
and
and
adc
sub
dec
lret
mov
push
and
mov
mov
fsub
fisttps
sbb
mov
rep
cmp
jg
xor
dec
xor
fcmovb
and
fimuls
mov
cwtl
xchg
push
sub
lds
jle
roll
daa
hlt
mov
cmp
cmp
mov
fsubrl
data16
mov
sub
mov
push
add
fbld
out
orps
xchg
rcr
sub
fmull
call
mov
cmp
jl
and
rclb
xchg
stos
cmpsl
fldt
loop
bound
enter
push
inc
push
xchg
icebp
jno
push
int
sub
inc
push
call
ret
xchg
je
iret
sbb
fs
and
jle
or
cmc
add
add
fistps
imul
pop
or
test
mov
xor
cmpsb
cmp
imul
or
es
adc
int3
xchg
shr
pop
inc
jae
cwtl
push
scas
jb
xor
hlt
rcll
pop
inc
movl
int
pusha
add
sub
fiadds
xchg
es
iret
or
js
shrb
rcrb
xchg
std
sub
decl
les
xor
ret
nop
inc
insb
cmp
sbb
std
clc
push
add
inc
jae
outsb
outsl
and
addb
das
es
pop
ja
xor
mov
in
mov
in
adc
adc
repz
push
mov
add
or
jno
cld
push
push
iret
pop
mov
cmp
push
dec
into
mov
addr16
push
popa
inc
das
out
push
mov
arpl
pop
fimuls
xchg
inc
sbb
dec
adc
pop
popa
mov
cltd
addb
cltd
adcb
out
lock
inc
lock
sti
mov
repnz
jl
icebp
cmc
adc
jecxz
sti
ret
jl
mov
lea
mov
push
add
sti
cmpsl
sbb
and
and
pushl
js
push
pop
imul
and
inc
mov
imul
xchg
addr16
jecxz
stos
and
cmp
pop
ja
test
ljmp
fwait
imul
andnps
xchg
jle
mov
or
push
mov
dec
aam
mov
in
cld
test
jmp
jl
lods
dec
jae
rclb
push
cwtl
xor
jae
arpl
mov
dec
addr16
mov
sub
push
loop
scas
fsub
pop
push
add
mov
sbb
movsb
cld
push
xchg
lcall
dec
and
clc
sbb
out
jns
mov
out
mov
imul
pop
sbb
lret
movsl
jmp
xchg
faddl
push
sbb
into
lret
jl
adc
xor
sbb
push
push
xor
cmp
inc
fwait
test
sub
adc
sbb
xchg
test
lcall
push
and
call
movsb
lds
subb
out
ret
inc
repz
mov
adc
mov
std
pop
sbb
mov
stos
xchg
or
pusha
xor
pop
cmp
inc
call
mov
outsl
fiaddl
pop
dec
daa
push
mov
sub
add
xchg
dec
adc
push
dec
add
add
mov
test
icebp
mov
mov
push
jl
out
dec
data16
pop
jmp
mov
inc
mov
pusha
pop
jb
sbb
movsl
into
icebp
shll
in
rcll
repz
push
fs
mov
iret
dec
mov
rclb
loope
or
movsl
lret
test
sub
sub
mov
negl
leave
cwtl
add
push
and
mov
ja
mov
cltd
sbb
and
aas
dec
stos
mov
mov
ret
add
stos
jnp
mov
cmp
and
fstps
aam
dec
call
push
cmp
cmp
sbb
js
and
inc
mov
fs
cwtl
push
add
out
fdivs
adc
adc
stc
jae
js
push
dec
sub
xchg
sti
mov
repz
and
jmp
repz
fucomi
into
stos
pop
decb
test
jl
or
dec
pop
jae
mov
cltd
ret
jg
lds
jo
jns
jnp
jg
bound
adc
fistps
jecxz
mov
movsb
jnp
dec
sbb
xchg
mov
add
mov
inc
movsb
test
pushf
std
es
popa
test
xorb
and
divb
data16
jmp
stc
ret
iret
les
fistpll
push
sar
pop
dec
sub
outsl
lods
inc
inc
xor
sub
mov
or
out
and
dec
mov
mov
inc
xchg
mov
jns
cmp
cmp
xchg
lods
or
sub
int
push
inc
pop
idivb
cli
cmp
cmpsb
out
adc
or
orb
adc
add
in
sub
mov
lret
call
nop
dec
js
adc
push
loop
jnp
test
je
shll
popa
mov
xchg
add
stos
scas
ja
lods
mov
shrl
add
mov
sub
fiaddl
or
popf
and
pop
push
test
mov
imul
cmp
mov
leave
mov
cmp
aas
push
sbb
ret
xchg
push
push
nop
add
or
cltd
insl
ds
arpl
shll
cmc
std
test
mov
subb
cld
mov
inc
cmp
int3
cltd
loop
mov
jg
adc
ss
lock
jmp
adc
out
mov
addr16
sahf
in
pushl
cmp
jbe
sbb
mov
test
jbe
fwait
icebp
movsl
mov
push
mov
out
pop
imul
ss
icebp
inc
fistps
test
sbb
xchg
frstor
mov
xchg
sti
pop
inc
insl
aad
adc
out
mov
xchg
xchg
xlat
inc
insl
clc
sbb
mov
mov
xor
mov
shl
jl
add
fsubr
mov
adc
subb
fwait
cmp
push
inc
pusha
fs
ja
mov
jg
test
call
jp
xchg
fwait
icebp
into
xchg
cmovbe
dec
testb
out
dec
inc
mov
or
sbb
insl
push
cmpsl
out
fsubs
shll
inc
push
add
mov
lret
or
pop
mov
hlt
cmp
mov
ja
fwait
adc
jbe
pop
or
ja
fsubr
push
inc
jbe
jp
gs
in
xor
dec
or
push
out
adc
pop
arpl
pop
sbb
hlt
xchg
push
mov
mov
mov
adc
cs
dec
lcall
in
dec
or
stos
pop
sahf
jge
icebp
movsb
and
popf
dec
xchg
mov
sbbl
stos
mov
out
push
loopne
mov
mov
insb
pop
ret
cmp
movsl
test
ds
in
xchg
sbb
imul
gs
mov
rcrl
or
fdivrl
or
mov
jns
xor
add
push
add
pop
mov
cmp
imul
outsb
pop
add
mov
sahf
jbe
nop
xchg
enter
jle
pop
pop
pop
mov
es
int
ja
xchg
jno
rcll
cmpsl
or
mov
mov
xchg
lahf
in
pop
mov
push
rcrl
scas
mov
pop
xchg
push
dec
ja
mov
fnstsw
push
push
sbb
lret
sbb
imul
bound
movsb
mov
es
mov
rcrl
movsl
arpl
mov
mov
cmpsl
arpl
insb
mov
pop
jecxz
add
movsb
jle
inc
mov
and
adc
inc
sbb
push
pop
push
mov
or
clc
loope
inc
loope
rorl
add
cmp
int3
les
subb
inc
cmc
mov
repz
addr16
and
xchg
in
pop
inc
arpl
jae
loopne
out
and
xor
xor
sub
push
data16
nop
pusha
mov
or
cmpsl
push
and
mov
cmp
lea
mov
pop
daa
test
enter
mov
jno
cmp
daa
mov
pop
dec
mov
push
xor
not
cmp
je
pop
xor
cltd
aas
inc
and
xorb
xor
mov
sub
push
mov
jp
std
add
mov
jbe
push
push
and
add
adc
out
fmul
mov
testl
aaa
sbb
vmovaps
cltd
pop
xorb
movsl
ja
lods
push
mov
ficompl
int
mov
mov
fdivs
dec
rolb
inc
ficoms
cmp
lods
jnp
lret
mov
adcl
scas
ljmp
in
cmp
fdivr
mov
popa
js
jl
fwait
pop
out
mov
adc
pushf
xchg
fidivrs
faddp
and
aad
xorb
mov
shll
imul
arpl
jmp
ret
push
cmp
push
xlat
ret
inc
pop
push
inc
orb
xor
mov
sub
mov
popf
imul
insl
loopne
mov
stos
rorl
ret
mov
pop
std
jb
stos
push
pusha
lret
movsl
movsl
mov
lahf
popa
cs
pop
scas
pop
ret
xor
push
ljmp
mov
push
idivb
call
push
lds
push
mov
jecxz
xor
push
fcmovbe
shlb
or
jne
mov
pop
cmp
adc
outsl
and
mov
sbb
cmp
or
in
jb
sbb
lods
jo
add
fwait
pop
pop
xchg
push
adc
cs
nop
testl
sub
sub
icebp
sub
adcl
stc
sahf
and
sbb
and
lods
lret
out
add
and
adc
xchg
mulb
or
cmpsl
mov
mov
adc
push
mov
cmp
pop
leave
jge
pop
mov
xor
push
fists
add
mov
dec
aam
mov
insb
scas
sub
pop
sbb
sti
rcll
pop
jmp
lcall
dec
into
cmc
mov
or
ljmp
dec
add
enter
out
sbbb
or
mov
iret
pop
pop
cs
pop
jmp
dec
jne
pop
iret
pop
lea
popf
popa
pop
push
lahf
cmp
mov
call
inc
push
icebp
sub
lods
cli
sti
and
cmp
in
in
cmp
out
cs
cld
popa
or
mov
fisubrl
jno
jno
push
push
ja
and
mov
mov
xchg
push
sbb
sbb
cmpsl
mov
test
jl
sub
test
mov
inc
and
in
cli
adc
or
jno
std
aaa
int
int3
mov
add
in
mov
fidivl
test
mov
insb
push
push
das
ret
jle
inc
div
dec
outsl
xchg
int
inc
add
iret
cmpsl
inc
adc
call
adcl
dec
push
fldl
mov
das
shl
pop
or
push
xor
iret
mov
and
ss
pop
pop
hlt
cs
pop
clc
imul
arpl
ds
int3
ds
in
jmp
mov
dec
mov
shlb
das
inc
orb
call
fidivrs
inc
sub
scas
jg
dec
dec
jmp
shlb
cs
into
xchg
cmp
cmp
std
sub
dec
pop
cmpsb
push
in
pusha
ret
cwtl
pop
data16
push
mov
or
inc
push
lahf
dec
sbb
lret
imul
push
cld
sub
push
mov
aaa
mov
jp
cmp
cmc
enter
cwtl
push
lods
xchg
sarl
jmp
push
pop
ljmp
outsb
aas
add
mov
aas
cmp
or
aad
mov
dec
jno
mov
jo
pop
adc
or
pop
push
stos
loope
dec
mov
mov
in
in
ss
mov
call
mov
out
push
lahf
pop
jno
or
pushf
sbb
ja
cmc
mov
out
dec
push
aam
out
push
arpl
sbb
cwtl
mov
into
in
inc
push
push
mov
mov
imul
and
xor
jb
inc
cmp
dec
int
adc
sbb
mov
jns
fadd
sti
push
inc
sbb
dec
hlt
sarb
push
or
mov
test
dec
cmp
jae
mov
sub
and
sti
mov
cmpb
js
sti
sbb
pop
iret
inc
push
cmpsb
cmp
mov
fmull
outsl
mov
gs
cmp
jnp
data16
fmull
push
sbb
cmp
sbb
cmp
inc
push
gs
mov
mov
stos
imul
and
or
dec
sarl
sub
jl
in
cmp
mov
scas
pop
mov
mov
fisttpll
pop
das
cmpb
mov
movsb
mov
dec
dec
push
fxch
andb
lahf
imul
inc
stos
repnz
insb
pushf
stos
test
data16
xchg
xor
inc
push
jnp
inc
movsl
sti
ss
jge
ljmp
cmp
inc
ds
pop
mov
push
or
cmp
fwait
mov
push
into
jmp
ds
inc
hlt
pushl
adc
push
jo
dec
imul
fstl
gs
lock
sbb
push
or
cmp
pop
lcall
fldcw
and
lea
bnd
fcoml
dec
jbe
test
lds
into
dec
cwtl
push
push
sub
cwtl
push
sub
mov
js
add
xor
aam
xchg
pushf
arpl
mov
call
rcrl
push
xchg
movsb
xchg
mov
aad
ja
mov
or
movsl
jnp
cmp
dec
scas
inc
dec
add
iret
std
fstl
das
stc
daa
or
dec
adc
inc
dec
icebp
add
jb
mov
aam
jno
push
ja
add
hlt
cmp
xchg
std
fwait
cmpl
fiadds
inc
dec
std
pop
dec
cmp
or
jge
sbb
push
fstpl
cmp
icebp
pop
cmpb
ja
hlt
dec
sub
out
pusha
sub
mov
sub
dec
mov
fneni(8087
pop
aas
sub
adc
into
movsb
in
jno
repz
aam
out
mov
mov
adc
loop
test
in
cmp
push
mov
cld
jl
out
out
xorb
or
xchg
out
fcmovbe
lfs
or
mov
insb
add
sbb
sti
xchg
mov
mov
pop
jge
rcrb
lea
mov
pop
popf
enter
add
mull
pop
icebp
es
mov
mov
xchg
jecxz
inc
addb
jno
cs
filds
imul
cld
adc
pusha
test
push
adc
dec
imul
mov
xchg
push
lea
xchg
fcmove
test
mov
xor
aam
rcr
testb
mov
sub
dec
push
sbb
sarl
fidivs
addl
loop
test
notl
xchg
push
mov
enter
or
jmp
sub
mov
pop
lahf
push
jmp
xchg
cmpsl
sub
rorl
mov
ja
push
notl
and
lahf
push
popa
nop
pushf
notb
mov
hlt
push
push
lahf
mov
mov
pop
and
sbb
lods
std
or
test
push
sbb
push
fistl
mov
scas
call
inc
jmp
clc
mov
push
add
fisubl
ror
xor
pop
test
push
inc
aad
ss
pop
mov
pop
filds
fistl
sub
dec
out
sub
pop
dec
jmp
mov
push
nop
or
jb
in
push
jns
inc
fstps
lods
testb
pop
js
and
dec
cld
pop
push
jns
gs
and
outsb
pop
adc
pop
jmp
insl
push
xor
dec
pop
inc
movsb
add
ljmp
popf
aad
pop
mov
pop
and
cmpsl
mull
add
test
std
movsb
xchg
cmp
or
rcrl
pusha
push
stc
out
adc
iret
push
xor
and
ja
loop
or
sub
xor
lahf
lods
inc
inc
pop
leave
sbb
dec
inc
xchg
add
pusha
fists
jmp
fmull
decl
std
lods
cmpl
les
push
inc
jns
jne
js
fwait
sbb
gs
sub
mov
cs
or
shrl
std
add
pop
fistpl
or
dec
arpl
jo
movsl
jnp
icebp
mov
jge
mov
xor
fisubl
inc
sbb
inc
push
pop
mov
pop
sub
scas
shl
aam
mov
out
jbe
and
je
push
pop
sub
jae
imul
pop
daa
push
xor
in
mov
cmp
push
jnp
rcll
dec
push
call
cmc
inc
shll
negb
adcl
xor
cmc
aam
adc
imul
push
fdiv
push
test
mov
jno
outsl
inc
jmp
in
pop
js
cmpsb
xor
mov
mov
imul
or
test
or
cmp
adc
imul
xor
outsb
addb
ljmp
add
jl
repz
cld
je
push
adc
mov
adcb
adc
pop
inc
sub
fwait
stos
or
jne
mov
in
adc
adc
cmpsl
sahf
popf
push
push
jge
loope
jl
jno
ret
xor
lds
pop
adcl
xchg
xlat
push
jmp
pop
bound
in
dec
jns
and
sbb
fdivrs
cwtl
jns
sub
cli
cmp
lods
mov
cld
inc
cli
push
hlt
mov
mov
push
in
pop
adc
xchg
or
xor
pop
int3
mov
cli
mov
add
jnp
arpl
aam
cs
jle
js
sbb
and
fsubrl
inc
sub
lret
inc
dec
loopne
mov
movsb
cmp
scas
or
out
into
mov
mov
sbb
dec
in
lahf
jnp
ss
scas
or
cmc
xchg
mov
add
ret
lea
in
in
mov
fs
jno
add
loope
mov
dec
std
ficoml
lock
push
in
lock
dec
imul
mov
decb
pop
xchg
xchg
and
sbb
insb
lea
rorb
dec
loopne
data16
outsl
daa
in
mov
or
mov
sub
out
inc
mov
inc
cmc
out
jo
cmp
xchg
in
inc
jno
loopne
shlb
inc
mov
mov
push
jbe,pt
xchg
ret
imul
repz
xchg
andb
dec
not
icebp
cmp
mov
xchg
mov
gs
aam
pop
cltd
out
out
pop
sarb
sbb
add
aas
arpl
mov
sbb
mov
lods
jbe
cmp
cmp
push
pslld
push
out
icebp
cmp
in
sahf
imul
call
xor
adcb
jmp
outsl
orb
out
xor
dec
adc
mov
ja
ret
loopne
sti
cmc
inc
add
cmpsl
push
gs
sbb
mov
ror
ljmp
test
into
mov
into
cmp
sub
sub
arpl
into
jl
mov
mov
shr
les
jmp
mov
imul
push
movsb
dec
out
cltd
cmp
xchg
js
fdivrs
shlb
sub
loopne
and
mov
xchg
imul
adc
shll
sub
mov
push
iret
pusha
std
pusha
test
ljmp
sbb
mov
add
lret
loope
mov
ja
jne
mov
insb
xchg
ret
jbe
jae
push
jb
shll
nop
shrb
mov
aas
jge
hlt
sbb
xchg
cmp
mov
pop
mov
mov
fbld
lea
fisubrl
fs
mov
xor
dec
aam
out
aam
push
pop
inc
divl
xchg
jl
stos
cld
xor
jl
fcom
mov
jmp
nop
testb
cmpsl
or
test
push
ds
sub
fwait
mov
fistps
xor
sbb
mov
loop
add
jns
fsubrl
mov
scas
sub
mov
pop
cmp
inc
mov
call
mov
mov
mov
in
negl
dec
xor
mov
xchg
je
mov
cmp
fwait
int
inc
and
sbb
xlat
jmp
dec
loop
adc
imul
js
fldt
inc
mov
testl
inc
sub
imul
mov
cmp
sti
je
add
clc
mov
mov
pop
in
ret
out
jl
inc
lcall
sub
jbe
xor
mov
mov
pop
test
fldt
loope
ss
adcl
enter
movsb
sarb
sub
movsb
jl
fisubrs
and
imul
jecxz
and
icebp
in
cmc
or
cmp
nop
repnz
orl
test
xor
mov
dec
call
pop
test
ja
inc
test
mov
add
jl
mov
jbe
mov
aam
xorl
dec
mov
fisubl
scas
stos
add
xor
mov
xor
movsb
clc
repnz
sub
push
inc
jecxz
in
sub
mov
aam
add
mov
adc
movsb
sbb
xchg
cmp
fnstsw
mov
jg
fistl
aam
push
into
adc
std
push
or
push
add
pop
lahf
mulb
pop
je
dec
lahf
jmp
rorb
jmp
mov
aaa
imul
fcmovne
dec
out
sbbb
cmp
mov
add
sti
xor
push
adc
gs
sbb
jmp
cmp
jge
pop
jnp
mov
mov
pop
call
cwtl
cli
pop
fs
add
scas
jns
fwait
pop
pop
enter
inc
cmp
or
cmpsb
nop
jns
or
ja
push
mov
ss
enter
mov
std
cmc
lods
stos
int
stc
stos
mov
fldt
sbb
cwtl
jge
jmp
mov
lock
lcall
fiadds
sub
xor
mov
jns
pusha
ljmp
pop
mov
loope
das
sbb
inc
mov
mov
mov
adc
out
sub
push
ss
mov
inc
mov
xor
mov
xchg
inc
jge
push
push
cmp
int
int
add
cwtl
sub
stos
xor
lret
pop
xchg
pop
mov
notb
jns
xchg
pop
insb
pop
mov
sbb
pop
mov
ret
lock
or
iret
fwait
and
adc
or
shlb
pop
imul
shrl
mov
jl
js
inc
dec
into
ljmp
mov
neg
pop
sbb
fistpl
jecxz
imul
push
movsb
or
jp
jg
icebp
dec
mov
and
insb
inc
repnz
inc
inc
mov
loopne
push
lcall
mov
aam
dec
std
add
add
mov
mov
pop
inc
rcll
sub
and
jnp
je
adc
imul
xchg
sbbb
lret
adc
dec
pop
dec
mov
cmp
pop
xchg
lods
js
nop
dec
push
das
cmp
dec
out
xchg
push
fsubrl
mov
adcl
or
mov
scas
cmp
sbb
jb
test
addr16
dec
es
inc
ret
jmp
scas
out
lcall
jge
fsubs
or
jmp
mov
je
inc
rcrl
int
push
lods
fiaddl
push
call
stc
inc
inc
add
ret
pop
in
add
jge
lret
adc
xchg
mov
outsl
jl
data16
iret
repnz
inc
sbb
pop
into
xchg
std
push
mov
mov
pop
loopne
loop
mov
stos
dec
jle
adc
dec
arpl
sbbb
sahf
loop
add
add
enter
jne
data16
lods
rcll
out
js
lahf
pop
or
cmpsb
cmp
data16
inc
xchg
dec
and
sbb
push
jno
inc
push
out
push
jmp
pop
mov
fidivs
insb
ja
pop
icebp
xor
aas
ja
in
pop
icebp
mov
out
mov
daa
stos
add
jg
lret
aad
dec
jge
adc
fisubrs
or
add
aas
cmc
ljmp
adc
testb
call
pusha
mov
pop
adc
cmc
nop
aad
or
flds
fucomip
jnp
dec
mov
lock
mov
dec
sbbb
pop
insl
mov
cmpsb
scas
js
lret
inc
sub
cmpsl
mov
inc
movsb
pop
xor
mov
aas
imul
adc
xor
mov
push
and
mov
push
fidivrl
mov
push
pushw
arpl
adc
imul
jl
lahf
in
repz
push
and
jge
inc
pop
jns
mov
xchg
push
pushf
xor
jg
scas
fnsave
je
dec
int3
out
pop
sbb
xor
xchg
mov
push
mov
push
mov
and
and
cmpsb
out
push
std
lds
pushf
cmpsl
mov
stc
or
adc
ret
fisttps
or
es
cmpsl
push
lret
lods
dec
jp
jnp
movsl
rorb
cmp
fsubrl
popf
out
jl
into
daa
jno
push
sub
sbb
hlt
xchg
cmp
adc
and
mov
inc
push
xchg
nop
rorl
push
mov
jge
cmpb
xor
adc
cwtl
dec
xor
rolb
stc
or
pop
andb
jge
jnp
jno
mov
fnstcw
and
clc
mov
mov
inc
call
dec
jmp
pop
inc
lcall
inc
leave
xor
inc
xchg
les
sahf
pop
clc
mov
fdivrp
pop
inc
xchg
mov
push
and
mov
dec
test
fcmovnu
jmp
push
mov
jecxz
sub
xor
jle
cmpsb
xchg
cmpsb
sbb
pop
jno
aad
push
xor
aam
repz
push
faddl
add
mov
jne
add
cwtl
rcr
fwait
dec
jge
inc
shrl
test
mov
dec
xor
xor
mov
pop
mov
rorl
push
xchg
ret
lds
inc
shl
fdivr
in
dec
dec
pop
cmp
push
push
das
jg
and
push
es
xlat
jmp
xor
mov
mov
adc
inc
jmp
add
inc
xchg
out
ja
out
mov
push
dec
test
push
inc
dec
mov
or
dec
add
jl
shlb
fldl
xchg
lret
mov
adc
addr16
inc
mov
movsb
adc
sub
sbb
loop
add
insb
and
mov
inc
mov
push
dec
xlat
popf
sahf
mov
pop
adc
neg
cmp
inc
in
jl
in
fdivl
inc
pop
aad
jle
addr16
pop
xor
dec
lods
inc
shl
pop
lea
cld
jg
mov
mov
add
dec
jnp
lods
stos
and
cmp
dec
cmpsb
push
dec
addb
clc
add
inc
jg
and
inc
cmp
aam
lods
cwtl
cltd
xchg
push
mov
mov
push
pop
in
sbb
cmpsl
lods
jl
xchg
inc
xchg
bound
sub
shl
loope
sbb
xchg
sarb
out
mov
jl
cwtl
lret
fs
pop
mov
mov
xor
mov
and
movsb
xchg
rorl
loopne
push
mov
outsb
ds
mov
or
xor
icebp
fistl
jae
inc
mov
dec
jge
sar
std
or
xlat
add
mov
inc
adc
sbb
imull
int
inc
fistpll
lods
fstps
sub
sub
pop
aam
scas
dec
sub
ja
lods
or
cmp
cmc
ficompl
sub
pop
xchg
xchg
mov
call
pop
dec
inc
push
cmpsb
dec
loope
mov
imull
dec
cmpsl
pop
shrl
in
lret
sbb
cmp
or
push
les
adc
push
test
mov
dec
adcb
js
test
sub
loope
cmp
enter
xor
fwait
into
mov
pop
out
cmp
ljmp
push
sub
and
addr16
mov
push
mov
lods
sbbl
les
add
iret
sub
and
dec
mov
jg,pn
imul
adc
mov
cld
shr
inc
sub
xchg
shrb
loope
sahf
gs
xlat
and
xchg
jp
push
inc
movsb
js
push
imul
inc
mov
fistps
push
fidivs
push
popl
xor
cmpsb
fisttpl
mov
jns
cmp
pop
mov
push
push
imul
ret
lret
lret
dec
mov
pusha
imul
les
ja
fdivrl
ljmp
testl
inc
adc
inc
orb
fcomip
mov
movsb
std
mov
fwait
ljmp
cmp
inc
jg
pop
in
int
mov
sbb
loope
cmc
movsb
mov
imul
cmpsl
ds
jbe
add
xor
insb
jns
fadds
ds
mov
aad
jno
ljmp
jnp
xchg
imul
mov
pop
rcll
mov
mov
or
dec
sub
aas
movsl
xchg
and
dec
iret
mov
movl
sub
push
inc
xor
pop
lods
pop
push
es
in
cmp
popf
xchg
pop
add
cmpb
jae
mov
test
paddusw
jl
mov
pop
inc
cmp
add
xchg
mov
mov
mov
ret
lret
movl
mov
mov
addl
mov
arpl
aas
repz
rcll
cmp
sub
bound
and
add
push
leave
and
cs
push
inc
inc
inc
imul
adcb
mov
sbb
mov
push
add
jg
cmp
stos
test
mov
xor
jp
add
sbb
and
jno
incb
jle
cmp
sub
fdivs
ja
ljmp
pusha
jg
cmp
andb
sbb
testl
mov
cwtl
cmp
dec
cltd
and
sub
rorl
dec
out
pop
xchg
jb
and
test
or
nop
sub
fildll
fistl
leave
and
stos
jae
ret
cmp
rol
mov
and
pop
mov
cmp
push
outsl
or
outsl
addr16
mov
test
cmp
cli
sbb
shlb
xor
imul
xchg
cmp
fisubs
inc
xor
outsl
stos
negb
adc
decl
mov
pop
or
daa
int
fsubl
pop
sub
int3
mov
pop
mov
stc
es
mov
jno
loope
inc
mov
adc
popf
sti
mov
test
sbb
aam
adc
push
rorl
adc
xchg
push
sti
xorl
or
jge
ljmp
adc
inc
or
cwtl
jle
mov
push
and
add
mov
push
sbb
clc
loop
mulb
sbb
add
mov
xchg
push
je
movsb
dec
dec
cmp
mov
inc
jmp
add
adc
pop
ss
mov
leave
fdivrs
jge
outsb
add
bound
pushf
inc
leave
dec
ja
ret
insl
ja
insb
mov
cltd
cmp
test
and
lods
dec
cmp
sub
add
jb
dec
stc
stos
jnp
push
aad
cmpsb
xchg
push
inc
adc
sbb
aaa
inc
aas
and
fs
dec
out
or
dec
sbb
dec
jmp
idivb
push
insb
test
jg,pt
sbb
or
data16
cmp
imul
pop
push
notrack
dec
imul
and
test
roll
or
in
and
ret
rol
mov
mov
lahf
cs
nop
rep
mov
xchg
sub
or
add
mov
mov
sbb
push
mov
lods
popa
es
jmp
or
das
and
bound
sbb
sbbb
mov
pushf
mov
scas
out
cmp
add
pop
idivl
cmpsl
lret
das
je
into
dec
fs
xchg
fldt
pop
popf
and
or
aad
cmpsl
xor
fsubrl
std
int3
mov
out
xchg
sbb
xchg
sbb
dec
pop
jnp
cmp
sub
mov
mov
outsb
sub
cs
mov
imul
ja
mov
mov
mov
in
and
lret
push
xchg
sti
jne
inc
pop
imul
movsl
cld
jmp
adc
fwait
mov
imul
shll
sub
xor
and
push
addb
shrb
lahf
push
movsb
xchg
mov
jmp
fidivrl
imul
push
das
mov
and
jle
or
addr16
cwtl
adc
pushf
in
mov
xchg
pop
dec
fucomi
push
fisubrs
jmp
mov
dec
cmpsl
dec
sti
mov
movsb
jns
mov
dec
mov
push
mov
pop
jns
in
mov
xor
fs
iret
loopne
int3
mov
jne
adc
or
insl
outsl
dec
leave
push
into
in
pop
enter
sub
sub
add
pop
adc
arpl
push
out
adc
and
fnstsw
test
orl
sbb
pop
push
stos
jmp
dec
fisubrl
push
mov
shl
adc
sub
mov
pop
arpl
leave
cmp
cltd
cmp
mov
call
jg
cmc
iret
mov
pusha
or
lret
pop
lods
ret
mov
sbb
sti
jg
test
adc
fimull
mov
in
pop
push
into
stos
dec
xchg
or
ljmp
adc
adc
mov
rcrl
dec
mov
or
fiaddl
testb
cltd
jo
fwait
mov
xchg
stc
or
dec
dec
ljmp
andl
rcll
pop
sub
imul
dec
xchg
lret
push
cmp
jmp
popa
inc
fldln2
test
out
int3
sysenter
sbb
sbb
sar
sbb
fstl
lret
jmp
mov
arpl
in
stos
push
mov
sbb
filds
xor
fmul
mov
jno
loop
push
mov
adc
jg
mov
cmpsl
mov
cltd
and
inc
mov
mov
rcl
es
mov
enter
push
or
cmp
mov
movsl
push
mov
ret
inc
pop
cmp
pop
push
add
lds
mov
xor
iret
mov
es
adc
dec
sub
pop
or
sub
add
cmp
xlat
pop
in
fwait
cltd
and
and
sti
add
aas
loope
into
rorl
mov
jmp
scas
pop
mov
enter
cld
daa
dec
out
inc
in
mov
mov
inc
test
cltd
jnp
lret
mov
repz
jg
inc
cmp
in
adc
mov
pop
test
ficoml
xor
ss
xchg
xchg
movsb
inc
adc
insl
mov
sbb
jge
push
inc
and
insb
xchg
mov
repnz
insl
sbb
in
ret
imul
xor
push
cmp
mov
imul
sub
cmp
roll
insb
push
loop
xor
testl
push
sub
pop
icebp
mov
inc
cmp
push
cli
dec
and
out
aam
mov
jg
push
push
popa
imul
aad
push
cmpsb
orb
sub
fisttpl
out
ficoml
repnz
jl
out
rcll
das
test
dec
mov
lods
xchg
je
fcompl
sub
xchg
ja
jge
pop
call
xchg
mov
ss
mov
orb
outsb
jb,pt
fstpt
pop
push
int
mov
fisubrl
xchg
add
add
jo
cltd
in
int
sub
dec
cmp
inc
cs
mov
add
cmp
lret
pop
iret
repz
gs
dec
dec
mov
fcomps
mov
out
cmp
popa
push
subb
stc
les
popa
push
xor
test
inc
mov
stos
ss
nop
mov
jmp
popa
add
inc
mov
icebp
pop
aas
xchg
or
pop
into
and
pop
mov
mov
loop
push
mov
bound
or
loopne
add
mov
pushf
cmp
loopne
fstpl
cwtl
dec
test
std
or
rclb
push
out
inc
dec
out
inc
or
xor
stos
stos
fstl
lret
imul
sub
jae
sub
add
push
sahf
adc
jmp
jno
adc
aaa
dec
fcmovnu
ret
dec
sti
or
sbb
leave
outsb
push
test
cmp
push
sbb
mov
xchg
mov
jg
adc
bswap
setl
popa
enter
xorb
sti
xchg
push
mov
loope
adc
mov
xchg
inc
idiv
fldenv
ss
notb
dec
pop
imul
push
add
inc
outsb
jno
and
xchg
xchg
mov
repz
loop
enter
repnz
push
or
and
fwait
and
movsb
mov
or
popf
inc
push
inc
imul
dec
push
jno
jle
fcomi
icebp
cwtl
lret
jmp
cmp
nop
loope
xor
shr
mov
scas
xchg
enter
inc
push
push
xor
mov
jg
stos
lds
mov
outsl
pop
sti
leave
mov
or
imul
inc
insb
xchg
push
dec
pop
popf
aad
mov
sub
fwait
mov
shll
mov
imul
inc
jae
fcom
cmp
xor
pop
test
rcll
cli
popf
addr16
jae
jb
lods
mov
orb
push
inc
mov
sub
ret
sub
js
data16
dec
xlat
or
xchg
mov
pushf
mov
sub
arpl
jne
rorb
out
adc
sbb
mov
mov
sub
sbb
xlat
pop
dec
add
cli
xchg
lahf
in
sub
dec
call
call
or
sub
lea
popf
push
sub
negl
das
inc
sbb
fnsave
sar
mov
xlat
repz
fyl2xp1
mov
xchg
mov
in
pop
cmp
and
push
fs
sbb
jno
pop
shlb
int
repnz
jge
fcompl
dec
jge
idiv
push
cmp
push
mov
stc
mov
test
sti
mov
rcll
adc
out
cmp
fists
pop
enter
mov
fs
push
mov
lahf
cltd
xchg
std
test
in
gs
add
mov
xchg
push
scas
mov
sti
adc
dec
xor
cltd
jge
lret
cmpsl
mov
sbb
inc
orb
inc
mov
add
jno
lock
loope
or
ja
fldenv
fisttpll
push
aas
popa
cmp
cmpsb
cli
add
jb
repz
in
cld
sub
int
ja
mov
inc
fwait
inc
inc
incl
je
outsl
jecxz
mov
jl
dec
pop
pop
jnp
in
ret
mov
shlb
jns,pn
neg
pop
hlt
push
inc
add
mov
adc
dec
stc
clc
scas
in
mov
stos
not
rorl
cld
sbb
test
or
fimull
daa
jno
adc
xor
push
push
cmpsb
sub
jl
mov
inc
std
adc
pop
push
cld
mov
and
mov
lea
mov
push
cmp
jl
sar
xchg
and
cs
sub
mov
xor
loope
and
orb
or
mov
jae
dec
jae
test
loopne
lea
and
decl
cld
inc
mov
push
sahf
mov
mov
daa
or
push
lret
jp
cwtl
repz
inc
stos
xorl
jg
push
xchg
add
xor
adc
push
sub
in
rorl
pop
es
aam
jo
cmp
imul
inc
jl
shlb
jl
xor
je
add
mov
imul
dec
push
stos
mov
fdivs
not
add
ja
stos
push
lea
call
mov
mov
test
out
inc
cld
and
mov
jg
mov
push
or
xchg
lock
ss
adc
xchg
xchg
sub
lock
or
adc
sub
out
or
xor
std
aas
ja
mov
sbb
jnp
insb
mov
jo
and
adc
mov
fcmove
inc
mov
mov
mov
ljmp
shll
and
insl
pop
sarb
jmp
mov
mov
movsl
xor
and
rclb
sbb
pop
mov
mov
cmpsb
std
push
cli
iret
cmc
mov
mov
or
mov
pop
rcll
sbb
out
jl
mov
or
pop
or
sub
push
fwait
in
dec
inc
sub
fsubr
and
imul
imul
jle
aad
sub
xor
fimuls
cli
std
scas
int
pushf
out
pop
sbb
in
mov
xlat
cli
push
test
add
push
stos
popa
mov
xor
adc
cs
dec
inc
jo
hlt
push
mov
sbb
aaa
sub
cmp
and
ret
mov
nop
push
dec
jl
repz
mov
cmp
xchg
jg
out
cltd
scas
xchg
out
shl
xchg
shlb
inc
dec
add
mov
in
bound
cmp
jl
mov
jne
int
sub
dec
dec
pop
inc
dec
add
pop
push
push
jae
or
clc
dec
inc
jmp
inc
sbb
fcomip
sub
adc
mov
push
fwait
sub
push
push
xchg
call
inc
mov
and
mov
mov
pop
popa
loopne
jg
jge
xchg
mov
popf
shl
cmp
mov
cld
pop
inc
inc
jl
fisttps
psubsw
jmp
pop
aas
push
push
jmp
sub
jl
arpl
mov
rolb
in
jne
repz
pop
cltd
and
jb
mov
mov
jl
sub
xchg
adc
inc
push
pop
or
fimuls
repnz
stos
add
sbb
inc
test
mov
pop
inc
fimull
dec
sbb
and
sub
inc
inc
testl
insb
mov
mov
cmp
aas
sbb
lods
out
nop
sbb
mov
ja
sarb
pop
mov
cmpsb
and
dec
outsb
and
add
cmc
clc
lods
addb
test
fdiv
mov
aaa
xor
rcl
and
fiadds
enter
pop
fstps
test
fisttps
push
insb
aaa
repz
inc
push
fsubp
lods
sbb
add
mov
sbbb
je
arpl
add
sti
push
pushf
inc
stc
fisttpl
jns,pn
loope
stos
ds
and
add
mov
fcmovb
scas
das
and
xchg
adc
sbb
mov
andnps
mov
dec
lea
out
cmp
cmp
out
dec
add
mov
das
sub
subb
rorl
je
jae
repz
ss
pop
stc
push
mov
add
sub
hlt
jno
sub
test
or
or
int3
jp
jg
ja
or
mov
in
mov
rolb
repz
inc
decb
sub
cmp
mov
out
scas
dec
das
mov
xchg
outsb
rcrb
xor
add
hlt
pop
mov
negb
cld
and
test
inc
jo
sub
popf
out
ja
sub
sbb
fcom
cmp
jmp
in
inc
aad
jae
cld
loopne
xor
add
jg
mov
sbb
adc
mov
in
mov
movsl
jns
xlat
enter
inc
cmp
lcall
daa
loopne
jmp
outsl
push
and
out
add
or
repz
mov
cltd
adc
pop
adc
test
push
or
fimull
jns
pusha
xor
push
call
dec
pop
mov
shl
pop
arpl
testb
push
dec
fdivrs
jp
pop
cmp
jg
ss
fldl
or
cmp
aas
mov
out
lods
fldl
rorb
push
sub
gs
test
adc
cmp
inc
cmpsb
pop
add
ljmp
sbb
mov
sti
mov
jnp
dec
inc
or
push
dec
mov
dec
stc
sti
fistpl
and
insb
xchg
loope
cld
nop
adc
stos
es
dec
push
sbb
xorl
int
aas
lret
xor
jmp
mov
sub
add
out
in
in
ss
push
xchg
lcall
ja
mov
jnp
loope
cmp
sub
scas
ss
cmp
mov
ret
pop
adc
jl
into
out
mov
xchg
stc
out
add
xchg
jno
stos
xorb
aad
testb
jmp
rolb
xchg
cmpsb
dec
iret
lods
test
dec
test
js
sbb
inc
add
pop
scas
ret
jnp
dec
stc
jnp
lea
inc
lret
hlt
sub
push
jnp
mov
inc
dec
fistl
push
xchg
mov
cs
push
cmp
mov
fst
sub
fnsave
mov
test
mov
mov
jl
imul
frstor
inc
frstor
dec
and
inc
mov
jno
lods
sbb
out
push
mov
jo
sarl
mov
int
push
cmp
aam
cmpsb
jne
mov
pop
lcall
inc
jns
push
cmp
rcr
xchg
mov
mov
push
xchg
inc
adc
daa
pop
dec
jne
mov
imul
sbb
lret
mov
jbe
pusha
mov
clc
cmp
cmp
fdiv
hlt
or
jns
mov
out
jg
and
or
aam
dec
sub
and
push
inc
xchg
pop
repz
int
push
mov
cmp
push
adc
dec
shl
push
jp
testl
or
or
mov
pop
pop
dec
insb
adc
and
cmpsb
mov
jg
sub
add
inc
into
loop
arpl
pop
dec
shr
inc
fwait
mov
leave
repz
add
mov
rcll
sbb
inc
fistps
in
push
sub
cmp
sbb
clc
mov
stc
movsb
cmp
dec
mov
ret
adcb
cmp
pop
xchg
add
loopne
mov
sarb
aaa
lcall
loope
pushl
nop
mov
dec
repz
js
push
pushf
mov
stos
adc
sbb
dec
fimuls
lret
mov
xchg
imul
rcr
jno
push
xor
jne
in
loopne
test
adc
enter
jmp
or
ljmp
push
lret
dec
arpl
mov
je
push
jno
cmc
sbb
fwait
ja
js
pop
sub
xor
and
lock
repz
jno
fs
cmc
enter
cmpsb
jne
negb
scas
push
and
repz
push
inc
mov
into
mov
dec
mov
dec
stos
sbb
rorl
leave
mov
xchg
xchg
pop
cmovne
or
push
std
dec
push
inc
jecxz
cmp
xor
in
cmc
mov
xchg
ja
push
test
xchg
dec
cmp
stos
jg
cmp
push
or
out
mov
daa
mov
pop
and
shrl
call
push
xchg
js
into
pop
cmp
inc
rorw
and
mov
push
aas
add
sub
pop
dec
shr
cs
push
out
push
fs
adc
sub
jl
jg
pop
and
testb
sbb
mov
iret
lea
shll
mov
adc
jne
sbb
jg
iret
imul
adc
lea
in
pusha
sub
lds
das
ficompl
jne
popf
mov
cwtl
jne
pop
int
popf
inc
pop
sub
arpl
push
pop
test
inc
scas
cmp
sub
dec
repz
cmp
aas
push
lock
inc
xchg
jp
mov
pop
inc
into
es
pop
hlt
pop
mov
push
movsb
movsb
cwtl
adc
adc
push
and
sbb
cmp
pop
dec
repz
ja
or
out
or
scas
sbb
into
xor
push
clc
int
push
cmpb
mov
add
cmp
mov
outsb
pop
dec
outsl
push
mov
xor
das
movsb
dec
jmp
les
pop
ret
fildl
adcb
push
pop
sbb
and
xchg
mov
pop
add
jl
inc
pop
mov
sti
add
fwait
inc
das
sbb
jns
out
sahf
adc
std
dec
cmp
mov
xchg
mov
mov
dec
cmp
rcll
push
mov
dec
pop
cld
xchg
fisttps
push
rorl
sarb
stos
cmp
add
loope
sub
sub
out
movsb
add
loopne
testl
fadd
sbb
push
mov
inc
xchg
mov
mov
push
pop
neg
xchg
decl
xor
mov
lahf
push
fsts
mov
cs
gs
out
imul
pop
inc
inc
jbe
xchg
sarb
ljmp
fsub
dec
xchg
mov
lcall
xchg
movsb
push
mov
je
push
cltd
sub
testb
dec
mov
pushf
aad
mov
push
stos
or
ret
sahf
sbb
jmp
addb
dec
repz
mov
das
sbb
add
mov
daa
xchg
ret
mov
inc
pop
jnp
fsubrs
mov
sub
jae,pt
gs
pop
mov
jno
mov
pop
add
repz
sub
pop
movsb
ljmp
sub
fists
xchg
mov
adc
rcrb
or
cmp
adc
xchg
aas
pop
int3
leave
mov
popa
movsb
pop
insb
pop
or
mov
add
add
lret
jl
es
mov
mov
js
rorw
lret
testl
mov
clc
or
bnd
mov
stos
in
lea
std
xchg
clc
mov
fcomps
xchg
xor
jnp
cmp
mov
mov
mov
int
cmpsb
mov
xor
inc
iret
xor
das
fcompl
ret
xchg
fsubr
mov
in
ret
ljmp
movb
dec
jne
cmp
adc
iret
xor
pop
or
xorl
das
cmc
test
mov
sti
inc
pushf
mov
testl
out
adcb
jnp
mov
pushl
sub
xlat
push
xchg
data16
fcomps
xchg
jne
pop
ret
dec
mov
out
cmp
in
mov
les
outsl
pop
jae
mov
jl
es
popf
push
sbb
xchg
bound
ret
rol
or
adc
sti
mov
fs
movsb
insb
ret
ficoml
dec
jne
xor
mov
jle
lock
pop
sub
insl
adc
mov
jnp
inc
push
jnp
movsl
js
pop
scas
shll
pop
movsl
loope
push
mov
sahf
push
add
enter
jle
das
dec
cmp
add
emms
jge
cmp
insl
lahf
mov
pmovmskb
dec
cmpsl
cmpb
insb
imul
push
stos
pop
rorb
nop
push
sbb
negb
popa
xchg
mulb
jno
out
arpl
sbb
sub
sub
dec
aam
pop
mov
mov
inc
mov
cmc
mov
mov
out
pop
pop
pop
and
pop
add
es
rcrl
add
jg
aad
jmp
jnp
dec
aaa
mov
lcall
lea
dec
dec
jmp
mov
lahf
push
enter
jl
outsb
ss
xor
sub
jb
mov
lahf
fwait
fdivp
dec
add
cmpb
out
mov
and
shr
mov
cmc
mov
das
dec
lret
dec
jmp
imul
pop
mov
dec
inc
xor
outsl
mov
insl
mov
hlt
insb
add
jp
mov
lods
add
inc
leave
imul
sub
xor
shrl
ja
and
mov
jno
mul
jb
and
out
or
fidivl
cli
sahf
push
add
mov
mov
pop
testl
fnstsw
ds
adc
scas
mov
add
sbb
fistpl
fsub
stos
inc
pusha
sti
xchg
jecxz
fwait
repz
aas
adc
movsb
mov
cltd
das
xor
adc
jns
int
jmp
pushf
or
dec
les
jb
ss
lds
mov
inc
fiaddl
pop
jmp
shll
outsb
mov
lret
jecxz
push
sbb
negl
mov
popf
push
cmpsl
rcl
sti
mov
mov
and
dec
cmpsb
je
mov
jne
out
int
fwait
jecxz
fwait
inc
lret
popa
js
pusha
mov
push
out
cs
jae
mov
jge
mov
mov
sub
xchg
adc
sub
in
std
mov
mov
mov
call
push
repnz
push
mov
push
push
and
ss
fdivr
loope
ss
test
repnz
cmpb
sub
addr16
loop
push
pushf
outsb
mov
mov
adc
into
fwait
pop
ja
sbb
lods
fisttpl
cs
mov
mov
push
outsl
in
adc
dec
jle
lds
xchg
stos
movsl
push
subb
adc
pusha
or
dec
mov
mov
and
xor
loope
leave
mov
jmp
dec
cmpsb
ss
inc
jg
shll
pop
push
das
sbb
cli
pusha
dec
out
out
pop
negb
pop
into
mov
xchg
add
nop
mov
jbe
iret
push
cmc
jnp
push
je
jno
push
xchg
imul
es
imul
xchg
stc
mov
push
cmc
mov
stos
inc
push
andl
lahf
out
push
pop
push
and
push
xchg
bound
imul
and
inc
nop
rclb
mov
jo
ja
pop
repz
pop
and
add
pop
mov
mov
or
movsb
pop
inc
cs
ret
add
cltd
insb
mov
aad
test
or
inc
sarl
mov
icebp
fs
rorl
and
imul
imul
dec
dec
movsl
mov
xchg
pop
cltd
cmp
jl
dec
inc
sub
and
sbb
movsb
cld
popa
es
popf
jp
lods
ljmp
or
push
cmpsl
enter
mov
fidivrs
mov
fildl
and
or
dec
jnp
fwait
mov
leave
ret
fadds
push
hlt
pcmpeqb
dec
stos
dec
jmp
lahf
ret
cmpsw
and
cmp
mov
xchg
push
cmc
sub
xchg
iret
cmpsb
mov
sbb
dec
and
in
data16
dec
dec
bound
in
dec
inc
movsl
pop
mov
movsb
sti
inc
cmp
or
push
or
xchg
aaa
adc
cmp
flds
jl
pop
shll
scas
dec
cmp
arpl
adc
jne
jmp
aas
xchg
roll
jl
mov
iret
into
or
je
dec
dec
jno
cwtl
into
mov
outsl
cmp
std
add
jg
imul
je
pop
aaa
push
jbe
loopne
dec
ja
mov
stc
add
inc
mov
mov
jmp
cmc
or
iret
test
dec
fldt
fldt
cmp
cmc
inc
popa
aas
dec
lock
add
sub
les
sub
movsb
sbb
sub
dec
dec
mov
and
and
xchg
push
shr
js
cmp
rcll
xor
sbb
sbb
mov
aas
xchg
in
daa
mov
or
dec
shrl
or
sub
stos
push
inc
mov
outsb
xchg
iret
sbb
out
negb
jg
rcr
sub
sbb
lret
jg
inc
sti
mov
mov
pop
mov
movsl
sbb
pop
mov
cmpl
sbb
pop
dec
loope
xor
ret
imul
lds
jge
mov
dec
test
fistl
mov
loopne
fisubrl
decb
lods
and
mov
imul
mov
orb
or
dec
into
mov
dec
push
insb
mov
push
aaa
xor
mov
mov
dec
or
push
sbbb
push
arpl
adc
lret
push
or
cmc
je
lods
sbb
ret
xor
inc
cmp
mov
or
jmp
das
sub
xor
icebp
jecxz
orb
mov
pop
sbb
test
scas
test
push
pop
inc
fwait
mov
pop
out
iret
xchg
ret
mov
add
pop
sti
and
jae
fldt
inc
mov
pop
mov
hlt
mov
rcr
fdivrl
es
mov
aam
les
test
sahf
pop
mov
sub
mov
pop
jle
dec
inc
testl
mov
sahf
cmp
mov
push
or
out
hlt
push
in
stc
fdiv
fldt
and
imul
fildl
sti
xchg
fwait
jno
jmp
and
mov
xchg
test
jae
shll
or
pop
sarl
test
test
dec
push
mov
jg
pop
dec
jbe
lret
in
push
je
negl
aaa
scas
daa
enter
inc
push
and
mov
cltd
iret
mov
test
fadd
out
lods
pop
mov
mov
jle
in
ljmp
push
icebp
inc
adc
pop
sbb
lds
dec
ret
out
push
xchg
int
mov
adc
xchg
pop
sbb
lock
jnp
mov
push
cmpb
cmc
insb
or
inc
imul
sub
add
mov
rcrb
imul
loop
adc
cs
inc
adc
push
loopne
shrb
fs
cmpsb
inc
movsl
mov
out
adc
mov
repnz
dec
and
push
ljmp
sbb
push
add
movsb
insb
inc
movsl
xchg
lods
gs
aad
dec
push
inc
jmp
dec
or
push
andb
dec
fsubs
add
movsb
mov
inc
into
jno
aam
mov
cld
cmp
repz
mov
and
ja,pn
pop
or
mov
ljmp
ja
push
mov
mov
hlt
xchg
mov
push
jmp
aas
cld
es
cmpsl
jno
sbb
jp
rorl
inc
dec
cmp
jl
cwtl
insl
scas
dec
sti
or
adc
sub
sub
sub
test
test
rolb
std
dec
jnp
test
push
mov
es
int
insb
xor
or
dec
sbb
xchg
mov
or
fsubrl
pop
mov
mov
jg
sbb
adc
mov
inc
dec
mov
inc
pop
pop
cs
fcomps
cmp
and
cmp
mov
out
inc
mov
xchg
add
mov
sbb
dec
and
cli
pop
imul
sbb
cmp
into
mov
xor
mov
int3
sbb
mov
push
pusha
fs
pop
jmp
pop
mov
movsb
orb
int3
cmpsl
and
repz
push
clc
sub
or
xchg
and
mov
loope
sbb
movsb
and
jae
fisttpl
test
pop
or
sub
iret
lcall
mov
push
repz
jl
das
jmp
cltd
cmp
mov
popl
fildl
mov
jl
push
jp
xor
pop
jmp
adc
inc
pop
ja
pop
push
mov
jb
xor
xchg
mov
pusha
addr16
loope
repz
mov
sbb
and
sbb
and
das
stc
dec
xchg
cmpb
pop
jb
loopne
mov
movsl
jbe
sbb
je
fs
jle
shrl
in
and
mov
xor
fisubs
mov
add
inc
or
sbb
stos
loope
jns
lret
sub
scas
jmp
sarl
sub
negl
sbb
cmp
sub
inc
adc
and
testl
out
mov
lock
pop
adc
add
and
mov
out
shll
push
and
gs
and
or
push
hlt
std
loopne
ret
in
es
push
mov
dec
add
add
sbbb
push
shll
ret
repz
movsl
adcb
std
xchg
out
sub
sbb
into
mov
in
mov
dec
sbb
inc
push
and
js
jecxz
mov
jns
iret
fdivrl
repz
je
pop
popf
xor
adc
cmp
mov
mov
fisttpl
addb
mov
aaa
fcomps
mov
lahf
out
daa
test
pop
and
sbb
jg
sahf
or
jnp
fsubrs
dec
movsb
mov
adcb
ror
stos
cmp
insl
or
xchg
test
int
mov
or
scas
inc
push
dec
dec
push
mov
or
and
call
push
test
je
negb
jno
mov
pop
xor
icebp
jb
sub
ret
lret
fs
inc
mov
push
ss
std
pop
lods
ljmp
and
mov
sub
ficomps
aas
mov
mov
push
mov
xchg
test
push
fimuls
jns
fdivs
sahf
push
mov
add
dec
icebp
fldt
mov
sub
ljmp
ret
fwait
test
mov
mov
mov
push
gs
push
repnz
push
mov
pop
cld
pop
lret
mov
dec
pop
jg
inc
ret
cmpb
cmc
sar
inc
dec
int3
daa
jge
xlat
or
xchg
rcrb
icebp
pusha
mov
mov
sub
nop
aam
cmp
push
mov
add
and
and
xchg
jp
cmp
push
adc
or
call
lcall
sbb
cmp
mov
out
xchg
sbb
mov
inc
and
ret
mov
cmc
movl
pop
mov
fcom
mov
lock
clc
negl
and
and
pop
dec
sub
loopne
jb
mov
pop
mov
mov
sbb
xchg
movsl
out
xchg
mov
ljmp
dec
out
cmp
push
pushf
in
jg
fwait
icebp
pop
popa
or
dec
fbstp
dec
loope
in
aam
dec
mov
mov
testb
fisttpl
cli
push
xchg
lahf
movsl
xchg
mov
lret
dec
ficoml
fdivrs
ds
daa
lahf
stc
nop
mov
pop
into
out
mov
and
and
and
xchg
in
fisubrs
sahf
paddsb
jl
arpl
adc
repz
fs
stc
fdivrl
add
lods
imull
xchg
mov
leave
mov
and
mov
mov
lret
xchg
fnstsw
fiaddl
jo
mov
sbb
sbb
or
insl
jmp
jge
add
xor
test
mov
dec
iret
fisubrs
insb
cmp
fnstsw
push
faddp
xor
cmp
xchg
idivl
mov
popf
add
aam
dec
sbb
push
jecxz
aad
shrb
adc
lea
cmpsb
je
inc
das
jle
loopne
push
int
add
add
arpl
fwait
orb
es
cmp
add
cmp
in
test
add
ret
movsl
inc
popf
adc
cmovs
cmp
mov
mov
arpl
mov
xlat
iret
outsl
xchg
inc
mov
add
and
cmc
stos
fsubrl
jg
or
mov
ja
mov
cwtl
jne
pop
mov
or
lods
pop
pusha
mov
pop
xchg
jns
fwait
ja
dec
pop
mov
mov
ficompl
xor
sbb
mov
mov
out
outsl
and
cwtl
mov
xor
fcmovbe
into
adc
xchg
icebp
lods
mov
and
mov
jg
mov
loop
out
dec
rcr
inc
xchg
loopne
dec
mov
ljmp
mov
mov
imulb
clc
int3
ja
push
ror
les
das
test
adc
jg
sbb
add
aam
cmp
out
aam
sbb
sub
xlat
filds
push
xchg
jmp
dec
out
and
sbb
push
mov
sbb
sbb
push
popa
sbb
add
pushl
fs
int
shlb
shl
pop
pop
es
mov
pop
fadd
bound
xchg
loopne
in
fs
es
std
std
and
cmpsl
test
xor
rclb
pusha
call
xor
repnz
loope
mov
cmp
test
movb
out
pop
cmp
push
cmc
cmp
js
imul
inc
and
fsubrl
xchg
outsl
mov
dec
add
testl
subl
gs
lret
std
mov
mov
lcall
cmp
sbb
sbb
inc
mov
add
lods
or
push
mov
jno
mov
insl
int
das
mov
fsubl
pop
and
jl
pop
repz
lahf
arpl
pop
enter
or
mov
inc
push
push
inc
add
pop
inc
sub
test
xchg
je
aas
pop
cmp
add
fwait
push
shll
ret
push
mov
mov
and
shll
cld
arpl
cmpsb
push
jecxz
daa
test
mov
jns
aam
ljmp
mov
pop
pop
add
dec
pop
xchg
jns
xor
push
pop
subb
pushf
push
push
mov
shlb
add
lods
js
jmp
adc
cmp
jmp
popl
jo
cld
cs
and
leave
jns
out
das
stc
leave
pop
add
jns
mov
and
mov
jl
mov
cld
cmp
xor
inc
dec
cmc
imul
mov
out
add
xchg
outsl
lahf
jle
test
cltd
aam
and
mov
jae
sbb
mov
fnsave
mov
stos
cmp
mov
loop
mov
mov
xor
sbb
and
aad
test
mov
jno
nop
mov
shr
or
sbb
lds
outsl
data16
and
mov
pop
xlat
insl
pop
dec
les
ljmp
push
jge
push
cltd
daa
ret
xchg
out
loope
cwtl
std
mov
push
mov
push
or
and
addl
test
movsb
inc
mov
inc
xor
daa
adc
push
nop
es
test
and
fucomi
mov
mov
xor
xor
jmp
out
out
add
add
jg
addr16
cmp
xchg
cli
inc
sub
dec
jo
jg
ljmp
cmp
scas
pop
jl
inc
mov
stos
icebp
sbb
sub
sbb
ss
mov
mov
sbb
nop
pusha
jae
push
jecxz
pop
sub
stos
popf
mov
data16
push
movsb
push
push
ljmp
imul
out
add
add
mov
sub
rcrl
mov
mov
leave
adc
dec
fists
dec
xchg
pop
sbb
insl
xchg
sti
lret
cmc
and
imul
xchg
adc
cltd
orb
nop
nop
xor
mov
sbb
push
xchg
jmp
add
test
mov
dec
cli
int
dec
or
lds
xor
push
icebp
repz
mov
ja
cmc
xchg
stos
clc
pusha
pop
cwtl
jl
cli
movsl
xor
xchg
mov
jg
cld
xor
xchg
dec
mov
xchg
cmc
xlat
cld
fwait
pop
fiadds
mov
and
mov
sbb
jp
sbb
popa
mov
mov
movsb
call
jle
nop
mov
xchg
es
iret
in
cmp
out
jmp
pushf
ret
jmp
inc
jne
jbe
xchg
mov
cwtl
and
pusha
scas
cli
lea
out
inc
aas
add
dec
or
pop
ret
nop
dec
sbb
jno
sub
inc
jecxz
into
loop
dec
xchg
movsl
roll
inc
jns
push
loope
inc
cmp
push
or
jmp
add
fucom
dec
aaa
add
push
mov
sbb
cs
pop
mov
jg
sub
pop
jnp
lods
aad
pop
aas
push
notl
inc
sbb
mov
test
inc
ds
inc
lods
or
and
jns
push
mov
dec
pop
repz
ss
mov
mov
adc
addr16
xchg
mov
mov
data16
xchg
imul
mov
fstl
sub
test
pusha
outsb
cmc
lock
pop
mov
data16
xor
push
ret
fs
xchg
sbb
aam
dec
sbb
jns
icebp
addb
int3
repz
push
xchg
inc
jmp
in
cs
inc
fnsave
cmp
insl
pushf
in
or
out
fstps
shrb
jg
fistl
mov
aas
push
pop
int
in
sbb
rorl
jnp
inc
xchg
nop
mov
sub
mov
mov
add
pop
fbstp
xor
jle
std
mov
and
sbbb
add
pop
mov
push
movsl
xchg
cs
fists
stc
mov
sub
push
xor
movsl
or
arpl
nop
ljmp
jne
inc
sbb
and
dec
das
movsb
mov
aad
cmp
fiaddl
hlt
push
in
inc
mov
ja
push
sbb
mov
push
jmp
adc
jns
loopne
jecxz
sub
add
cli
fcmovne
add
pusha
dec
jl
arpl
repz
cmp
or
rcr
dec
pushf
and
imul
and
add
pop
xor
data16
lret
dec
jmp
test
sub
aam
adc
sbb
clc
lea
add
and
dec
jmp
sahf
mov
or
xchg
push
and
sbb
rclb
or
test
mov
fmull
loopne
aas
dec
mov
int
fcmovnu
lods
test
test
sbb
xor
pushl
jnp
mov
aad
clc
inc
jg
imul
pop
cmp
mov
outsl
pop
xchg
sub
addr16
repz
mov
test
inc
jmp
cmp
jg
pop
or
mov
stc
lret
scas
pushf
push
dec
ss
enter
shll
repnz
test
push
adc
cmpsb
xchg
aas
inc
ret
shl
jle
lret
jg
cltd
sbb
in
mov
or
aam
push
into
cs
mov
and
pop
adc
div
inc
orb
iret
and
jb
add
xchg
fwait
stos
adc
decb
sub
cltd
into
int3
push
and
call
insb
adc
sub
inc
push
out
hlt
mov
mov
mov
in
pop
mov
call
fdivl
cmp
mov
jg
mov
sub
call
imul
repz
ja
xor
loop
xlat
xchg
ja
jl
xor
pop
loope
pop
mov
cmp
lock
or
or
jns
mov
jg
lret
adc
sbb
cs
ret
imul
in
sti
jno
fldl
lods
or
les
sbb
dec
sub
es
sti
pop
add
push
sbb
jbe
repnz
inc
or
sub
repnz
stc
daa
rcr
cmpsb
jl
imulb
clc
les
mov
test
mov
ja
mov
fisttps
pop
or
inc
push
add
mov
dec
js
int3
jns
cs
in
dec
loop
fadds
pop
and
inc
xchg
dec
or
pop
sbb
pop
std
ss
xchg
lahf
and
sub
andb
dec
or
in
lea
popa
mov
xchg
push
dec
sti
arpl
inc
popa
push
xor
add
lds
sbbl
mov
mov
mov
mov
stos
adc
scas
mov
dec
fs
xor
and
adc
add
adcb
adc
pushf
testl
je
push
sahf
xchg
adc
addr16
ficompl
push
pop
pop
repz
dec
mov
sahf
inc
shrb
mov
cmp
add
push
shrl
push
stc
ror
and
xorb
push
fnstcw
xor
sbb
popa
add
xor
pop
push
data16
push
add
movsl
popa
inc
int
lods
stc
sahf
and
push
ds
mov
mov
stc
icebp
inc
push
iret
adc
lds
dec
sub
dec
es
sub
cmp
push
je
imul
fidivrl
fistl
mov
xchg
std
mov
push
cwtl
sbb
sbb
mov
inc
mul
mov
scas
dec
push
loop
jbe
xchg
mov
pop
out
jmp
movsl
insb
sbb
fistpl
mov
xchg
mov
flds
shrb
in
push
outsb
jo
or
aas
xor
mov
shrb
jo
adc
testl
mov
dec
int3
xorl
cld
imul
xchg
mov
and
mov
adc
inc
shrb
dec
and
mov
je
dec
cmp
jle
mov
mov
add
out
fwait
imul
es
in
or
dec
out
shll
mov
jns
cmp
adc
cltd
cwtl
mov
ja
ffree
ret
addr16
adc
push
int3
pop
lret
xor
push
iret
fidivl
mov
dec
lcall
push
cmp
add
in
lret
cmpsl
jae
jg
movsb
hlt
or
sub
imul
xchg
sub
adc
xchg
mov
lds
mov
xchg
mov
push
mov
pop
mov
mov
cld
pop
mov
xor
fisttpl
orb
xorb
into
cmp
and
je
or
jl
lahf
iret
jmp
mov
loopne
mov
xor
cltd
insb
cmp
cmp
mov
or
dec
xchg
inc
lcall
add
mov
ror
clc
dec
sub
bound
mov
xlat
push
aam
ds
stos
add
jg
pop
fs
lock
faddl
xchg
sti
pusha
xchg
xor
push
iret
sub
imul
adcl
test
add
int
out
pusha
cld
pusha
and
cmpsb
add
hlt
ljmp
sub
mov
add
xor
mov
clc
outsb
xchg
cwtl
testl
test
jno
dec
mov
cwtl
fucomi
or
imul
jp
aam
cmp
jno
sar
xor
fidivl
mov
jl
test
iret
push
in
sub
pop
fmull
jmp
pop
jecxz
push
insb
mov
push
inc
inc
fisttps
mov
mov
lret
pop
fs
sub
push
mov
hlt
jae
testl
xchg
clc
test
push
outsb
mov
mov
or
or
popf
pop
cmpsb
dec
stos
divb
mov
test
inc
jl
sbb
dec
clc
push
xchg
jns
stc
push
addr16
in
nop
cmc
sub
pop
jge
into
push
or
rcl
mov
orb
lods
sbb
into
mov
bound
xchg
push
pop
enter
in
insb
mov
jg
js
das
and
push
ror
fisttpl
dec
ljmp
push
mov
dec
or
out
out
iret
mov
cmp
sub
lea
jl
mov
jo
fistl
out
mov
inc
push
and
decb
jno
out
mov
fs
scas
jo
add
lret
cltd
sub
fimull
sub
mulb
std
mov
dec
jle
lods
xor
inc
adc
jae
fstpt
xchg
inc
push
pusha
cmp
sbb
and
aad
push
mov
test
adc
push
hlt
stc
mov
xchg
cmpsl
insb
mov
or
xor
das
inc
cli
data16
enter
sahf
mov
popf
ss
les
xor
test
mov
xor
push
cli
ficompl
mov
sub
aad
jns
loope
mov
jne
adc
push
ja
loopne
ja
dec
pop
sbb
jae
add
pop
aas
and
mov
cli
mov
push
push
call
jg
sbb
shrb
orl
xlat
mov
inc
adc
inc
mov
int
shr
insl
or
cmpsb
adc
mov
data16
mov
mov
mov
dec
shrd
mov
jle
outsb
fisubrs
adc
leave
repnz
ret
pop
jo
popf
jmp
loopne
mov
push
mov
jl
out
sarb
xchg
sub
fisubl
stc
or
mov
test
js
cmpsl
sbb
cmp
sarl
jmp
jb
and
or
outsl
mov
ss
mov
movsl
ss
mov
mov
dec
add
push
repnz
and
cmpsb
rclb
cmc
cmp
push
inc
push
arpl
test
mov
jg
cs
repz
push
subb
mov
and
popf
push
subl
ds
mov
sbbl
cmp
sub
out
fisttpl
inc
stos
cmp
mov
or
jl
cwtl
leave
jno
mov
mov
sub
insl
loop
fdivl
adc
jmp
jbe
js
sub
test
outsl
sbb
xor
fisubrl
push
ja
dec
fwait
pop
jge
dec
dec
pop
xor
and
loop
pop
pop
fstpt
mov
mov
push
flds
mov
pop
test
mov
dec
sub
mov
rcrb
insl
fdivrl
popf
shll
sbb
add
inc
out
stc
fstpt
mov
iret
cltd
inc
mov
xchg
cmp
movsb
mov
les
lods
aad
or
and
sub
iret
push
inc
gs
push
je
jmp
shll
jmp
out
dec
push
movsb
pop
roll
scas
cmpsb
pop
push
adcb
and
loop
pusha
mov
nop
add
adc
loope
add
cmp
jl
scas
in
cmp
cmpsl
cltd
ljmp
sbb
jnp
popa
mov
jmp
sub
fsubr
fldl
jne
push
mov
jg
ret
dec
mov
testb
dec
cmp
lea
das
mov
cmpl
push
ja
push
int3
in
sbb
dec
adc
inc
push
mov
mov
or
and
lock
dec
scas
jle
std
jbe
outsl
call
mov
mov
xchg
lds
mov
or
xchg
int
pop
inc
xor
sbb
xchg
push
pop
outsb
roll
outsw
push
lret
orl
cmp
pusha
dec
cs
xlat
test
xorl
in
push
xchg
pop
inc
dec
push
lahf
cmp
cwtl
lea
fdivrs
scas
inc
or
inc
stc
adc
mov
dec
and
idiv
stos
or
mov
sti
add
push
jl
sahf
jne
mov
sub
fwait
jnp
icebp
or
add
out
mov
jecxz
jl
cld
mov
notl
ret
xchg
rcll
mov
fimull
in
push
fdivl
fmul
in
cmpsl
lret
rorb
outsb
jbe
icebp
movsl
pop
loopne
int
inc
add
in
jae
lret
jecxz
mov
cmp
fwait
loop
fistl
push
das
cmp
aas
fmuls
sbb
mov
dec
mov
cmp
iret
sarl
lods
mov
shl
shll
pop
sbb
cmpsl
mov
std
cmc
lcall
add
out
shll
in
push
mov
mov
add
test
fwait
add
pop
in
roll
mov
movsb
or
mov
cmp
mov
xor
cld
xchg
xor
loope
das
sub
bound
sbb
adc
sub
mov
mov
jae
dec
mov
cmp
pop
cmp
dec
es
jo
dec
sbb
hlt
add
jb
inc
call
outsb
roll
and
in
pop
hlt
mov
xor
mov
dec
sbbb
lock
inc
into
out
adc
cmp
mov
ret
pushf
mov
iret
loop
jns
jnp
imul
in
cmp
cmp
inc
pop
clc
mov
cli
sbb
pusha
cmp
sbb
rcl
je
insl
sarb
jl
jo
pushf
mov
push
cmp
int
sbbb
jo
xchg
dec
leave
sbb
xor
mov
pop
lret
mov
xchg
sti
test
daa
add
dec
and
cmp
and
rclb
push
sub
mov
mov
lcall
inc
out
dec
in
cmpsl
mov
les
loope
or
fucompp
call
xor
call
cld
mov
arpl
mov
adc
inc
push
dec
idivb
xlat
mov
mov
dec
or
inc
sub
jmp
neg
push
mov
push
ss
mov
push
out
mov
xchg
test
fnstenv
jg
imul
ret
pop
ja
aas
jbe
loope
lret
test
stos
sub
xor
add
sbb
or
cmp
cmc
sub
test
pop
mov
or
loopne
hlt
dec
mov
cmp
adc
mov
or
cmpsb
test
sbb
dec
ja
insl
and
imul
push
sbbl
and
sbb
fmuls
testb
sbbl
fisttps
insb
cs
popa
fcmovnbe
std
mov
pop
int3
xchg
rclb
xor
lods
push
loope
arpl
mov
mov
out
je
pop
loop
jo
dec
or
aam
cmp
data16
jae
cmpsl
pop
adc
dec
shrb
adc
stc
push
fidivrs
js
mov
push
cmp
aaa
xchg
cmpb
sti
pop
and
clc
movsl
mov
cltd
sbbb
faddl
leave
mov
das
dec
ljmp
movsb
sub
lods
mov
jno
xor
jg
sti
ficoml
jecxz
dec
or
ret
in
lahf
in
push
and
and
and
test
rorb
push
push
and
push
sahf
imul
out
hlt
sahf
jo
aas
pop
fdivs
mov
adc
or
mov
shll
popf
sarl
and
mov
rolb
xchg
mov
cwtl
fcmovb
jle
push
ja
pop
fcmove
inc
sub
aad
sub
and
mov
dec
lods
mov
xchg
jmp
out
ss
andb
xchg
fstpl
sarl
mov
pop
inc
jl
mov
inc
cmpsb
arpl
sub
or
imul
cmc
test
cmp
push
scas
fwait
or
repnz
and
dec
enter
add
out
and
cmp
jo
dec
sbb
andb
mov
imul
outsl
int3
fcoml
mov
insb
ja
inc
sbb
or
ljmp
adc
lods
cmp
mov
or
test
imul
cmp
mov
push
add
nop
imul
jno
adc
mov
cmp
mov
incb
add
adc
and
pop
cmp
add
mov
outsl
outsb
push
and
cmpsb
lds
or
repnz
xor
mov
inc
insl
addb
add
jno
into
dec
cmc
mov
test
pop
jae
fisubrs
mov
loopne
push
fwait
add
push
mov
outsl
adc
and
pusha
sbb
loope
ret
push
insb
stos
jge
push
ja
jmp
and
stos
les
lret
and
clc
mov
xor
push
cmp
aaa
push
pop
cmpsb
ljmp
cwtl
xor
pop
dec
jmp
adc
sbb
push
pop
imul
loopne
inc
les
int3
xchg
out
cmc
pusha
ljmp
xor
jp
movsl
cwtl
mov
shrb
pop
int3
sub
mov
scas
mov
inc
nop
xlat
push
or
mov
mov
sar
inc
or
icebp
dec
jg
orl
ficoms
mov
gs
test
call
mov
dec
stos
sub
icebp
jecxz
shl
cld
cltd
push
or
inc
fwait
sahf
stos
pop
fdivrs
stos
add
cli
call
or
push
cmc
jle
adc
add
mov
xchg
pop
inc
lea
and
mov
sti
test
push
out
les
push
mov
aas
stos
nop
or
add
push
out
out
stos
das
dec
inc
ficoml
pop
push
in
push
push
sti
nop
repz
ja
mov
cmpsb
xor
mov
cwtl
add
lock
push
test
lret
sub
lock
lock
out
xchg
fs
out
and
dec
and
pop
pushf
pushl
mov
mov
shlb
push
adc
movsb
inc
jae
or
sbbb
cli
push
xchg
push
iret
fwait
and
test
sbb
into
cmp
sub
out
test
mov
sti
fwait
out
dec
or
arpl
mov
repnz
jns
inc
ss
mov
movsl
test
test
ljmp
add
cltd
dec
mov
ds
int3
scas
dec
mull
mov
rcrb
xchg
lds
xchg
jecxz
dec
insb
dec
inc
xchg
jl
lea
jno
or
call
repz
and
jae
mov
fistpll
out
imul
pop
cmpsl
insb
inc
cmpsl
sub
mov
sti
mov
ja
xchg
or
pop
jecxz
pop
xchg
cmp
ret
lcall
pop
fnstcw
int
add
xor
jae
gs
imul
fs
das
xor
enter
dec
ss
mov
push
popa
out
and
pop
dec
out
lea
add
push
inc
jmp
pop
sub
pop
cli
jbe
jg
call
dec
fstl
insl
lods
mov
pop
fmuls
cltd
jecxz
fisttpl
insb
fwait
sub
stc
fistl
inc
xchg
sub
jbe
cmp
jecxz
sti
mov
cmp
cmpsl
jl
push
sbb
mov
inc
lds
mov
mov
mov
sbb
std
pminub
xchg
pop
push
lcall
int
xchg
int
push
insb
lcall
fwait
aas
dec
ret
push
idiv
jns
mov
cmp
outsl
add
inc
dec
mov
sbb
gs
aam
lret
mul
push
jg
nop
mov
or
pop
jo
dec
jecxz
addr16
fimull
dec
lcall
push
pop
or
add
jl
and
movsb
aaa
sbb
jnp
enter
or
push
pop
rorl
insb
and
pop
cmp
sbb
jecxz
mov
rcrl
mov
xchg
xchg
lods
repz
jl
dec
adc
mov
pop
cmpb
into
xor
sarl
cwtl
ss
cmp
into
cld
mov
jbe
push
mov
jecxz
jo
xor
aam
cmp
mov
cmpsl
shlb
xchg
into
mov
jnp
dec
jecxz
jg
sub
mov
iret
sub
out
fnstsw
scas
mov
add
jecxz
lahf
pop
add
pop
jl
sahf
push
pop
cmp
jae
mov
out
pop
rcll
dec
mov
iret
clc
cmp
mov
inc
fstpl
fiaddl
test
call
sahf
cmp
test
xchg
xor
out
adc
fildl
jl
pop
inc
and
pop
xor
mov
cmp
ljmp
scas
push
or
push
jl
dec
loopnew
fwait
imul
es
mov
test
adc
add
mov
call
add
dec
push
push
dec
mov
imul
pusha
mov
push
dec
in
jl
jnp
jg
idivb
add
dec
sub
cmp
mov
adc
mov
in
stos
xchg
ficoml
mov
rorb
dec
or
imul
and
mov
stos
mov
jbe
pushf
in
dec
jae
sahf
push
insl
mov
pop
mov
in
and
paddusw
andb
shll
push
and
repnz
push
sbb
mov
inc
pushf
or
push
jbe
int3
loopne
mov
cmp
add
push
inc
dec
mov
inc
inc
inc
mov
insl
sbb
dec
mov
fadd
std
cmp
jl
fisttpl
push
mov
pop
loop
cmp
cmp
dec
daa
cmpsb
pusha
inc
jl
mov
inc
mul
push
addl
ficoml
push
add
push
push
test
push
jno
insb
fdiv
and
jns
enter
repz
mov
inc
mov
pop
push
arpl
std
cltd
dec
push
loope
dec
jno
push
mov
dec
sbb
les
pusha
xchg
push
in
xor
sarl
pop
add
push
lcall
add
les
fwait
jbe
fcmovne
inc
adc
pushf
mov
mov
inc
sub
jp
scas
stos
mov
xor
frstor
cmp
cvtdq2ps
out
enter
fnstsw
xlat
xchg
pop
fisttps
shr
fidivs
pop
insl
ret
dec
lods
lahf
pusha
jne
push
ja
in
push
xor
fstpt
rcrl
sarl
clc
lret
aam
fwait
xchg
add
outsb
mov
lods
and
fisttpll
cmp
cmpsb
fwait
push
pusha
jae
sub
jb
dec
dec
dec
ja
mov
cld
pushl
jnp
cmc
scas
es
cmp
jge
repz
adc
mov
or
inc
jns
or
ljmp
sub
into
test
scas
xchg
gs
cmp
push
xchg
cmp
aad
sub
test
stc
rcr
stos
cmp
mov
dec
and
pop
repz
scas
dec
test
mov
adcb
out
sbb
or
negb
out
mov
push
aaa
push
xlat
dec
test
bound
cmc
jmp
jno
cmpsb
push
ret
mov
mov
push
ffree
clc
pop
mov
lcall
cmp
xor
sbb
push
or
or
enter
mov
dec
xor
inc
pop
jbe
jl
jnp
push
ss
dec
shrl
shrl
jecxz
or
mov
pcmpgtd
lds
es
xchg
ds
adc
adc
mov
mov
movsb
call
mov
mov
push
mov
mov
dec
dec
xchg
cmpsb
out
mov
js
popa
jb
inc
js
pop
bnd
lods
mov
jg
nop
mov
mov
stc
mov
sub
arpl
xchg
andb
mov
cmp
ja
iret
sub
lahf
cs
xchg
arpl
dec
xor
push
or
insb
jg
in
pop
pop
sbb
jmp
jns
mov
nop
int3
push
cmpsl
repz
mov
jno
jle
fwait
cwtl
cld
adc
add
nop
and
add
js
rcll
inc
xor
jbe
int3
jl
mov
test
das
mov
xor
jne
sub
mov
add
int3
cmpsb
mov
scas
imul
jb
filds
add
sarb
or
jl
dec
idivl
sbb
pop
cmc
mov
xchg
or
mov
out
and
sbb
not
lahf
sbb
xor
daa
ss
in
fidivrl
cltd
mov
push
mov
out
pop
scas
and
nop
fwait
jno
sbb
dec
inc
or
cwtl
jnp
aad
ficoml
jno
inc
loop
sbb
sbb
push
jp
je
dec
adc
sub
ss
mov
push
adc
fwait
xchg
and
fnstsw
insb
mov
outsl
pushf
pop
negl
repz
and
or
hlt
cs
scas
push
out
imul
stc
pop
adc
push
sahf
fwait
je
out
sub
adc
dec
jmp
dec
je
pop
mov
and
frstor
mov
or
mov
shrl
jl
xor
subb
in
pop
and
dec
stos
shll
xchg
sbb
sti
jbe
lret
out
push
inc
ficoml
cwtl
addl
or
cltd
pusha
repnz
cmp
cmc
mov
pop
adc
sbb
daa
sbb
fucomi
mov
xlat
rcll
adc
sub
in
cmp
stc
scas
and
jg
ret
addr16
es
lds
int
icebp
testl
stc
loopne
pop
fistpl
leave
pop
jecxz
lahf
pop
mov
test
repz
inc
sbb
fimull
mov
inc
fwait
pop
sbb
fwait
inc
dec
shll
sti
cmp
mov
and
lods
stc
mov
cmpsl
pusha
dec
gs
pop
mov
dec
cmp
incl
xor
dec
dec
into
cmc
push
inc
pop
ret
cmpsb
mov
or
jge
orb
and
dec
dec
xchg
xor
or
mov
ljmp
aad
adc
rorl
pop
jbe
pop
sub
outsl
int
adc
mov
xchg
andnps
nop
dec
ja
mov
sub
fwait
das
adc
lods
and
add
daa
roll
sbb
jmp
out
cmp
add
data16
outsb
push
dec
push
fwait
cmc
int3
call
aam
cmpb
add
jb
nop
xchg
jl
lea
add
xor
mov
test
push
sti
cmp
inc
xor
pop
or
mov
fcomps
jecxz
xchg
daa
aam
imul
dec
add
fiaddl
sahf
dec
imul
popa
xchg
mov
filds
insl
or
xchg
mov
push
inc
aad
ljmp
push
and
fimuls
sbb
dec
lds
mov
shrb
sbb
sar
clc
xor
or
xor
and
mov
mov
mov
inc
sub
fisubrs
cmp
ficoms
xor
cmc
push
daa
or
mov
inc
stc
fdivl
mov
jbe
inc
stc
mov
sbb
mov
notl
xor
cmp
inc
popa
lea
push
inc
sub
push
jecxz
sub
es
ror
lds
sahf
jg
cwtl
rorl
mov
test
dec
adc
jl
mov
xchg
jb
pop
lret
xchg
or
jmp
mov
sbb
mov
into
push
jmp
mov
cltd
jg
xor
adc
leave
jnp
aad
mov
aam
add
fwait
push
mov
adc
cmp
xor
movsb
pop
and
stos
xchg
sub
orl
int
pop
and
dec
outsb
sarl
arpl
mov
ret
pop
xor
mov
ja
dec
ljmp
mov
cltd
jmp
incw
sub
ja
cld
in
add
mov
mov
or
dec
loope
mov
mov
bound
in
jg
mov
int
jmp
dec
popf
das
push
mov
mov
adc
inc
mov
out
pop
mov
fistpl
add
xor
lea
fmul
mov
push
bnd
lea
push
shll
fs
dec
mov
cmpsb
mov
inc
push
or
jbe
in
and
inc
mov
jecxz
fildll
cwtl
aam
dec
aam
or
out
jl
das
sbb
push
aam
sub
jp
xchg
xor
mov
rorb
jg
pushf
andb
mov
jnp
pop
dec
ja
gs
fimull
testb
adc
enter
mov
rorb
inc
loope
xor
xchg
inc
aas
mov
shll
or
mov
aas
out
add
mov
lds
mov
pop
cmp
xchg
pop
movsl
shl
fstpt
cs
push
jns
nopl
leave
push
mov
pop
push
mov
mov
xlat
dec
add
lret
and
inc
adc
pop
int3
in
mov
cmc
mov
jmp
or
inc
cmp
xchg
add
jle
and
cli
dec
mov
mov
sbbl
fsub
or
notb
mov
cltd
loopne
push
jbe
out
jp
out
les
jmp
push
mov
sahf
shrl
test
adcb
out
sarb
cmc
out
sbb
mov
loop
inc
cmp
cwtl
movsl
xchg
test
cmp
shrb
jo
out
rorb
aam
or
call
jg
sti
and
lea
mov
inc
jno
fistpll
inc
lods
fadds
fsub
cld
add
std
ss
push
das
pop
mov
sbb
fwait
sbb
imul
add
imul
insl
add
or
mov
ljmp
push
mov
push
rcrl
sbb
push
push
cmc
xchg
iret
jg
or
sub
mov
into
ss
ljmp
add
std
mov
inc
sarl
jmp
testl
outsl
lret
aam
lods
mov
icebp
aam
sbb
inc
mov
sub
xchg
cmp
bound
and
xor
adc
mov
add
hlt
nop
sahf
fwait
jl
ret
lods
dec
mov
popa
push
cltd
mov
push
push
lds
into
ljmp
pop
lahf
stc
jb
sub
add
xchg
cmp
arpl
hlt
dec
push
es
xor
xor
int
mov
cmp
or
shr
hlt
sbb
sub
clc
jecxz,pn
pushl
mov
inc
cmp
mov
sub
dec
mov
jg
mov
fwait
xor
or
jl
cwtl
es
mov
fwait
mov
dec
xor
ja
aad
or
lret
jp
aaa
add
jmp
sub
into
mov
jnp
stc
fmuls
sub
sbb
in
xorl
int3
shlb
mov
test
push
mov
shll
gs
jnp
push
stc
xchg
jg
pop
sti
mov
mov
jne
mov
mov
or
mov
out
sbb
lds
testb
sbb
push
cmp
call
xlat
adc
int3
aas
dec
sbb
cmp
stc
push
test
or
repnz
scas
insb
movsl
frstor
or
mov
xchg
fbstp
stc
mov
imul
add
mov
mov
adc
and
pop
testl
xlat
jae
sti
test
lock
push
mov
mov
ds
cmp
frndint
int3
mov
rorl
lea
add
fidivl
outsl
xorb
mov
jl
lret
sub
ja
test
jb
and
cmc
add
test
fcoml
jl
pushf
loope
adcb
and
fwait
lahf
push
mov
mov
in
mov
je
jmp
repz
ja
mov
push
jl
or
mov
addl
pop
daa
cmc
sub
fs
jmp
adc
fwait
sub
push
push
stos
sbb
and
rolb
inc
out
sub
pop
mov
mov
sub
hlt
and
insb
push
ljmp
shlb
icebp
sub
inc
xor
push
es
cmp
cmp
jg
lods
mov
movsb
pusha
inc
mov
adc
xor
inc
push
mov
fisttps
push
call
rolb
inc
jl
dec
dec
movsl
dec
jnp
out
xor
add
adcb
pop
sub
mov
sbb
sarb
mov
xchg
cmp
pop
mov
bound
adc
xor
repnz
idivl
mov
je
iret
sbbb
mov
out
dec
shlb
sub
mov
xchg
xor
cmp
push
xchg
adc
inc
xchg
cmc
js
jecxz
testl
daa
or
js
jb
in
xchg
mov
mov
sahf
loopne
cmp
call
push
pop
shrb
sub
dec
or
loopne
setb
adc
shl
hlt
popa
mov
ljmp
push
inc
dec
mov
dec
mov
lods
pop
sti
sbb
and
pop
jmp
bound
pop
sbb
cmc
imul
fdivrl
mov
sbb
mov
lret
jmp
popf
xchg
inc
push
inc
dec
hlt
sub
lds
inc
mov
fs
dec
ja
cltd
and
pusha
ja
ficompl
pushf
mov
and
xchg
mov
iret
imul
mov
xor
add
cmp
shll
ja
inc
daa
push
jne
in
lret
pop
roll
mov
sbb
sbb
es
mov
push
fidivrl
shll
cmp
imul
dec
aam
inc
push
icebp
notb
or
mov
int
pop
or
jge
jb
in
sarl
mov
inc
std
lods
cmp
dec
and
pushf
dec
mov
lea
fdivl
enter
pop
lock
icebp
lds
cltd
rorl
jns
sti
cmp
iret
ror
jl
add
bound
out
push
or
mov
fiaddl
fs
roll
push
pop
sbb
addl
mov
xchg
sub
and
insl
jns
test
dec
and
sbb
mov
mov
cmp
xchg
inc
jle
clc
stc
into
cmpsb
mov
ds
leave
int3
push
jno
dec
dec
loop
adc
jae
aaa
adc
cmp
fwait
sti
clc
aad
icebp
mov
iret
cmp
hlt
inc
mov
mov
lods
jmp
mov
jno
arpl
movb
mov
jg
push
or
adc
orb
cmp
or
decb
mov
cmp
aaa
mov
or
xchg
dec
push
imul
loope
sbb
shlb
call
jns
pop
clc
xchg
push
mov
lock
popa
or
popf
jnp
mov
and
rorb
fsubl
xor
inc
or
sbb
pop
or
inc
ret
lds
test
sub
cmpsb
xlat
es
mov
test
repnz
inc
adc
xlat
js
ret
out
adc
decl
sbb
jno
out
mov
and
inc
fmuls
aam
inc
and
pop
out
pop
add
out
push
mov
sub
mov
cmp
inc
ret
test
repz
sub
mov
mov
xlat
mov
jbe
int
insl
orb
dec
cwtl
mov
bound
in
push
jns
xchg
xchg
mov
adc
xorb
jg
sbb
add
cmpsl
inc
cmp
push
movsl
orb
push
jmp
cmp
xchg
lcall
mov
push
dec
mov
or
jl
xor
mov
inc
dec
dec
pop
into
dec
dec
mov
dec
adc
hlt
inc
dec
pop
inc
mov
cmpsl
iret
or
fwait
int
loope
xor
mov
mov
sub
loopne
jno
add
mov
into
stos
hlt
inc
jb
mov
pshufw
inc
cmp
hlt
rcrl
clc
cltd
xchg
pop
daa
mov
jnp
or
das
dec
jp
dec
test
jno
mov
xor
mov
jp
aas
lret
sbb
sti
icebp
je
push
inc
adc
jg
jle
fs
inc
dec
xchg
mov
sbb
sub
sub
add
lahf
pushf
shll
push
insb
js
ja
jbe
in
ljmp
fnstsw
je
cvttps2pi
imul
aas
out
out
int3
mov
cwtl
jmp
sub
inc
jl
in
popf
test
fldcw
xchg
mov
adc
inc
mov
xor
adc
ja
out
push
jns
sub
ret
mov
aam
push
movsb
repnz
jg
mov
ss
lea
repz
das
subb
mov
int
imul
fmull
and
lahf
pop
cltd
loope
cmp
and
pushf
icebp
fs
paddq
movsb
iret
jb
sbb
push
or
mov
or
pop
sub
in
ret
sub
add
cltd
lock
push
imul
es
lret
inc
mov
dec
fwait
xchg
jl
mov
cmp
in
xchg
xor
or
and
sar
out
jp
sbb
jns
mov
adc
int3
mov
out
icebp
sub
stos
inc
jg
es
cltd
cmp
mov
out
mov
xchg
inc
addr16
bound
pop
loop
mov
out
int
push
out
data16
cmp
arpl
ja
push
push
repz
xlat
sbb
jb
add
mov
cmp
aad
mov
cmpsb
orl
xorb
xor
cmp
adc
dec
jg
scas
jmp
jno
rcll
out
push
mov
shl
xchg
mov
outsl
mov
jmp
pop
or
jae
adc
and
out
lcall
mov
nop
movsl
cmp
push
shr
push
addr16
dec
pop
push
je
jbe
in
popf
cmpsl
xchg
push
adc
jnp
cmp
pusha
jp
push
pop
das
cmp
je
loope
cmpsb
cli
dec
repz
push
loop
pop
sub
fisubs
mov
out
nop
testl
or
ficoml
clc
sbbb
out
adc
sub
mov
or
jecxz
int
pusha
repz
jbe
gs
add
sbb
in
xor
add
mov
dec
jne
adc
dec
sar
mov
dec
rcrb
aaa
inc
repnz
lods
sub
addr16
outsb
ja
xor
loop
leave
pusha
cmp
insl
out
jmp
fsubr
jp
movsb
sub
and
lods
jl
in
jecxz
ja
adc
test
ja
mov
ljmp
lret
test
mov
loope
or
push
mov
push
dec
jnp
push
out
stc
xlat
dec
jmp
inc
push
jp
sbb
scas
sbb
sbb
in
fdivrs
mov
daa
stos
xor
neg
mov
inc
out
mov
fildl
out
sbb
mov
fsubrl
data16
repz
out
push
pop
cmp
mov
xchg
fdivrl
pop
mov
int3
nop
mov
jl
ret
mov
rcll
jg,pn
movsl
jg
lcall
int3
filds
sarl
shll
hlt
in
aad
or
fiaddl
out
mov
inc
mov
cli
dec
or
pop
fcmovne
xchg
adc
lock
test
in
lods
push
outsb
inc
imul
sbb
psrlw
aam
scas
jg
and
xchg
adc
cvtpi2ps
dec
jl
push
in
mov
dec
push
aas
icebp
pop
dec
xor
dec
add
add
lcall
test
sbb
pushf
mov
mov
push
xor
jl
cmpsb
scas
arpl
movsl
mov
push
mov
shll
sub
mov
cmp
movsb
push
and
out
imul
adc
outsl
sub
ja
in
mov
cmpsb
cmp
out
sbb
pop
sub
cmc
jg
fdivrl
pop
jno
mov
push
pop
adc
mov
rol
repnz
dec
sbb
pop
test
cmpsl
adc
fsubrp
rcrl
push
push
jo
jno
fstps
cmp
mov
mov
lods
test
add
push
dec
rclb
push
dec
dec
sub
adc
sub
cmpb
sub
inc
jecxz
into
push
xchg
repz
pop
push
imul
add
sbb
imul
jecxz
push
mov
in
add
test
pop
mov
cmp
cmp
inc
daa
jg
sbb
jbe
mov
pop
loop
outsl
nop
insb
lea
or
inc
in
cmp
sbb
ret
mov
xchg
aad
adc
adc
jnp
mov
hlt
cltd
lods
pop
sbb
pop
mov
adc
mov
rcrl
mov
cli
mov
push
adc
push
mov
fimuls
inc
mov
sbb
rcr
lcall
dec
pop
and
mov
cmpsl
out
mov
fcmovnu
xchg
ss
push
mov
loope
iret
ficomps
dec
fadd
pop
xchg
or
mov
pop
imul
add
or
pusha
call
jno
and
mov
mov
cmpb
popf
push
mov
mov
adc
fdivl
imul
loop
lods
cmpsl
xchg
push
fs
jg
mov
xor
mov
pushl
out
jp
dec
push
mov
imul
xchg
and
xchg
dec
or
lock
mov
imul
pop
or
jmp
arpl
push
sub
xchg
fnsave
roll
and
mov
or
sub
fildl
xchg
xchg
push
rolb
cmp
mov
cmovno
enter
fwait
and
sub
inc
mov
sti
aam
jg
aam
pop
std
pop
mov
jne
loope
movsb
ds
cmp
push
fstpt
cwtl
std
lahf
push
inc
int3
insb
movsl
test
cwtl
xor
in
push
stos
pop
lcall
int
xchg
jae
push
push
daa
add
fwait
and
inc
mov
test
sbb
jnp
repnz
jns
ljmp
add
xchg
mov
push
push
cmp
fldt
inc
adc
les
fistpl
dec
inc
out
adc
shlb
adc
add
push
iret
xorb
lcall
mov
jbe
cltd
inc
ret
pop
pop
adc
mov
sub
enter
xor
mov
repz
out
mov
xor
std
jmp
mov
inc
out
cmp
repnz
js
and
lret
mov
mov
sub
mov
fucomp
mov
xchg
xorl
clc
inc
jne
pop
mov
loop
jns
int3
pop
je
daa
cmp
mov
or
rcrl
jbe
fstps
jae
or
cs
mov
pop
pushf
cmp
shlb
jae
test
leave
dec
int
cmp
cmp
lcall
or
gs
loopne
mov
out
lea
shr
jnp
scas
gs
mov
mov
outsb
xlat
mov
mov
mov
dec
fcoml
cmc
cmp
dec
xor
pushf
dec
sbb
pop
sbb
cmp
jo
cltd
jecxz
push
xor
icebp
pushf
dec
pop
add
xchg
cmp
inc
bound
repz
aam
iret
cs
xchg
ret
pop
rcrb
loope
xorl
dec
push
std
cs
add
xor
sbb
test
mov
into
es
mov
out
ja
fcmove
fstp
aas
addl
push
dec
pop
in
outsl
inc
rorl
mov
mov
jp
sbb
xor
pop
jnp
pop
push
pop
jbe
sahf
sbb
pop
insl
pop
or
xor
push
add
mov
pop
mov
push
mov
jecxz
rorb
roll
jmp
stos
call
pushf
pop
fisubs
movsl
push
movsl
lods
and
xorb
mov
data16
mov
cmp
out
add
xor
lock
mov
sub
mov
lock
push
loopne
mov
xor
or
sahf
in
pop
mul
icebp
sub
lret
testl
pop
addb
inc
shrb
adc
cwtl
xchg
fwait
int3
jmp
dec
imul
mov
pusha
and
jmp
cmp
jae
jle
add
push
movsb
xor
lea
test
out
xchg
loope
lods
push
into
repz
sbb
mov
repnz
sti
dec
or
test
and
dec
mov
sbb
pop
fwait
mov
and
movsb
mov
pop
push
test
xchg
cltd
es
or
cmc
inc
rdmsr
push
push
sbb
jg
movb
add
xchg
pop
movsl
pop
inc
add
mov
insb
and
shlb
mov
cltd
jnp
ret
cli
xchg
push
cmp
xlat
sti
dec
mov
lahf
idivl
sub
mov
jo
inc
jl
mov
cltd
pop
lds
mov
push
fwait
mull
adc
pop
testb
movsb
aas
mov
push
xchg
es
repnz
inc
mov
add
lret
adc
roll
std
push
push
ds
dec
les
jno
mov
or
pop
xor
sbb
stos
mov
pop
imul
add
call
xor
test
add
inc
xor
xchg
sahf
xchg
xor
mov
aam
inc
pop
sub
pop
push
mov
aas
movsb
and
insl
in
adc
jmp
mov
dec
pop
div
cmpsb
loopne
clc
aas
subl
into
mov
sbb
scas
push
xchg
iret
mov
ja
and
jl
dec
dec
dec
jnp
adc
jg
sbbl
pop
loopne
ja
dec
int3
pushf
add
les
clc
pusha
fisubrl
fidivrs
jnp
dec
dec
repz
add
jns
fnstsw
cmpsl
mov
cmp
mov
rcll
sub
rorb
fstps
sub
call
push
or
push
ljmp
xor
mov
testl
mov
or
cmpsl
push
ljmp
push
lret
push
ds
arpl
xchg
cmc
mov
jo
lea
fisubrs
repnz
jno
dec
push
hlt
inc
mov
pop
cmp
mov
movsl
mov
push
mov
cmc
push
stos
dec
add
adc
sbb
xor
jo
out
mov
sbb
sahf
adc
shlb
call
jns
lods
pop
sbb
jnp
push
pop
ja
mov
push
neg
add
sbb
jl
mov
nop
add
sub
adc
sbb
xchg
mov
mov
sarb
scas
sub
lcall
xchg
cmpsl
sbb
xlat
push
es
adc
nop
sub
fimuls
mov
mov
movsl
cmp
inc
dec
jb
inc
mov
xor
gs
xor
sub
dec
xchg
and
cmp
lfs
xchg
ss
cmpsb
popa
into
mov
pop
mov
jge
cld
out
insl
icebp
sub
cwtl
mov
out
cmpb
mov
and
cmp
outsl
jns
push
imul
enter
pop
cltd
mov
pop
adc
jg
lret
push
sbb
repz
out
sarl
dec
add
inc
popa
pop
mov
in
dec
pop
mov
mov
loop
or
mov
jp
add
cmp
push
push
rorb
sub
imul
pop
push
insb
sub
test
xchg
daa
aam
mov
push
ret
out
add
adc
fimuls
xchg
cld
int
int3
pushf
cmp
jno
mov
cmp
inc
add
jmp
cmp
lock
in
js
incl
push
int3
xor
cltd
lahf
push
sarb
aas
dec
xchg
push
fidivrl
push
loop
lcall
test
fsubp
and
repz
dec
push
test
inc
insb
fwait
adc
pop
out
adc
push
push
jbe
mov
lock
adc
cmp
cmpsl
xorb
in
scas
adc
outsl
xlat
out
into
cmp
loop
outsl
and
jno
out
add
out
fs
packssdw
out
insb
mov
jns
dec
cmp
dec
push
jg
pushf
jmp
mov
xor
pushf
mov
outsl
sbb
in
addr16
cmp
popl
mov
mov
cmovl
js
dec
pushf
ja
mov
test
push
xlat
mov
mov
xchg
mov
mov
push
ret
rclb
jl
mov
sub
fdivrl
jb
outsl
imull
and
push
cmpsb
xchg
push
and
mov
scas
insl
mov
fildl
mov
nop
and
in
jae
pop
imulb
fwait
hlt
add
repz
or
out
pop
and
in
clc
pop
cmc
dec
push
add
mov
lret
stos
or
mov
push
in
lcall
push
cmc
sub
jl
testl
and
pop
dec
es
sub
lret
push
inc
mov
dec
addr16
inc
outsl
add
push
push
iret
adc
xchg
dec
fidivrl
push
adc
add
adc
or
jecxz
jle
jno
add
repnz
pop
dec
or
ss
std
dec
sti
xor
adc
cmp
xor
jl
fwait
repz
xor
loopne
in
mov
stc
mov
enter
and
push
gs
dec
cltd
iret
push
in
dec
sbb
mov
movsb
sub
xchg
outsl
pop
mov
imul
in
jns
nop
jbe
mov
sbb
push
imul
push
push
dec
jns
push
mov
std
mov
adc
xor
xor
in
testl
and
mov
ret
in
cltd
cmp
in
inc
jp
aaa
in
xchg
add
iret
rcrl
lea
fstpl
ds
stos
scas
popf
es
sahf
scas
incl
jae
ds
sub
out
add
mov
push
jno
test
icebp
push
add
jnp
enter
and
test
xchg
lret
mov
mov
das
out
fldt
inc
mov
mov
xor
mov
mov
push
mov
fwait
mov
sbb
push
flds
in
movsb
ficoml
in
add
sbb
fwait
mov
loope
sti
jb
or
sahf
into
cmp
sub
jb
jo
mov
daa
dec
rcrb
dec
mov
je
push
ret
and
cmp
mov
dec
jb
mov
cld
aad
cltd
je
mov
mov
fs
dec
pushf
pop
fldcw
push
pop
dec
in
loop
dec
pusha
movsb
punpckhbw
fbld
push
pop
pop
push
rcrl
sub
cmp
or
aam
or
popa
dec
xchg
mov
and
mov
pop
xchg
in
mov
jnp
movsl
cmpsb
cmp
add
and
pushf
shlb
fisttpl
mov
fwait
jnp
or
cwtl
dec
mov
push
cltd
fwait
sub
adc
test
scas
jmp
adc
lret
pushf
lret
imul
mov
dec
out
mov
and
test
cmp
dec
popf
jbe
loopne
lret
push
sbb
in
mov
mov
jl
mov
test
adc
cmp
jl
ja
xchg
testb
mov
iret
idivl
loopne
inc
outsb
xor
xor
mov
and
jle
push
inc
test
inc
test
in
testb
pushf
cmpsl
nop
push
fildll
mov
scas
add
mov
int
int3
mulb
xchg
iret
pop
or
mov
fidivrs
jmp
push
pop
mov
mov
neg
negb
scas
push
adc
test
stos
rcll
hlt
dec
push
dec
mov
and
dec
mov
cmp
add
mov
sub
and
lret
mov
pop
orb
or
jg
pop
dec
jb
jl
mov
cmpsl
ljmp
pop
mov
std
cmp
sbbb
mov
xchg
xor
gs
dec
xchg
popf
inc
pop
leave
shr
jg
xor
nop
adc
stc
cs
loopne
push
lret
pop
int3
jl
pop
ds
rorb
mov
mov
ja
mov
sbb
mov
out
push
mov
pop
es
int
jae
fwait
add
pop
das
jbe
xchg
jnp
jle
ja
mov
sahf
movsb
jns
sbb
and
mov
mov
shrb
test
push
out
fldt
mov
in
ud0
adc
out
imul
push
cmp
xor
jno
cli
sbb
mov
xchg
mov
mov
cmpsb
sbb
loope
xlat
xchg
lds
std
inc
jne
jmp
mov
pop
xchg
push
mov
sub
sarb
or
inc
mov
fistps
inc
mov
sbb
sbb
jl
add
dec
push
fistpl
sub
pop
jg
mov
push
sub
mov
pushf
mov
sub
and
insb
adc
movsl
push
out
das
push
ja
jmp
push
mov
push
or
cld
insl
mov
add
out
jne
inc
es
scas
push
and
jg
je
push
add
jnp
mov
enter
int3
and
shl
lcall
mov
jno
lods
movsb
es
outsl
jecxz
movsl
pop
hlt
test
fsubr
push
mov
mov
mov
mov
dec
in
adcb
addr16
jg
mov
push
jae
icebp
jecxz
outsl
mov
or
sti
jbe
hlt
push
cmp
and
sbb
cmpsl
jge
xchg
mov
scas
fisubs
loopne
sarl
sbb
jne
jl
lcall
dec
dec
cmp
mov
mov
inc
sbb
fstl
aas
cmp
arpl
inc
sub
push
lret
lods
dec
adc
pop
xchg
dec
das
or
cmp
pop
inc
xor
addr16
ret
pop
nop
cmp
fldt
ds
pop
inc
add
insb
push
dec
test
pop
fldt
mov
adc
hlt
test
cltd
out
nop
pop
sub
mov
fdivrl
es
mov
into
pop
pop
pop
jnp
mov
lahf
dec
repnz
loope
insb
adc
mov
sti
adc
out
fwait
jae
jns
dec
fs
popf
jecxz
cmpsl
push
mov
dec
pop
and
int3
lret
push
adc
lcall
jl
sbb
js
xchg
cs
push
mov
mov
adc
mov
and
test
shl
xchg
arpl
mov
pop
fwait
dec
xor
adc
mov
and
mov
fcmove
pushf
xor
xchg
scas
mov
mov
pop
rorb
fisubl
mov
dec
add
sub
adc
xor
cltd
bound
add
mov
mov
ljmp
stc
mov
popf
cmpsl
pop
test
mov
cmp
sbb
scas
pop
mov
and
mov
lds
xlat
data16
inc
ficoms
jg
sub
sub
sbb
pop
or
adc
xchg
notl
imul
push
ja
inc
mov
out
xchg
out
mov
int
leave
dec
cmp
adc
fcmove
outsl
and
add
mov
adc
cmp
and
jo
pop
push
fimull
pop
bound
fisttpl
sti
jno
mov
ss
mov
iret
sbb
mov
out
xor
mov
push
dec
cmc
xor
icebp
fs
mov
test
aam
int3
sbb
push
sbbb
mov
push
out
sbb
rolb
mov
mov
shrl
add
inc
xchg
repz
inc
jnp
mov
xor
and
lcall
dec
xchg
mov
dec
or
dec
dec
xchg
mov
mov
or
mov
and
into
sbb
inc
dec
push
xor
shrl
inc
fwait
mov
dec
ret
imul
cmp
push
testl
lods
out
incl
jl
pop
nop
ret
scas
fwait
lock
jne
pusha
or
jecxz
sti
sbb
sub
xchg
faddl
popa
xchg
dec
ja
push
mov
pusha
fdiv
mov
cmpsb
mov
pop
lahf
xor
push
cmp
dec
out
mov
jecxz
cmp
dec
sbb
sbb
xlat
les
sbb
stos
sbb
push
sbb
mov
add
xorb
jp
sub
shlb
dec
pop
arpl
out
mov
sub
ret
ficompl
dec
adc
sub
xchg
lock
dec
loopne
fsubrl
xchg
es
js
fidivs
fcmovnb
pop
pusha
jns
cwtl
pop
mov
sub
and
shlb
cmc
mov
aam
aaa
mov
iret
pop
cmp
xchg
clc
mov
push
lea
inc
jl
push
mov
fwait
ret
aam
test
sub
adc
imul
push
mov
lret
or
sub
jae
dec
inc
clc
mov
cmpl
add
xchg
out
fimull
jne
ljmp
dec
fidivl
mov
ja
mov
and
out
pusha
jae
or
sbb
ljmp
in
es
pop
jae
test
incb
xor
cwtl
fistpl
repnz
mov
je
loopne
repz
xor
pop
mov
ja
push
dec
pop
dec
fs
fadds
inc
mov
je
mov
xorb
shrb
sbb
cmp
pop
adc
mov
mov
adc
aad
add
push
xor
dec
jge
push
test
int
inc
arpl
mov
mov
mov
xlat
cld
pop
jno
sub
insl
shlb
sbb
add
mov
xchg
sub
sbb
sbb
or
pop
stos
push
mov
addr16
or
je
jg
fiaddl
cwtd
cs
mov
negl
mov
mov
dec
cmp
test
popf
mov
clc
pop
xlat
mov
jnp
jnp
push
adc
dec
xchg
dec
push
push
push
sbb
mov
push
add
fstpl
in
sub
adc
movsl
adc
add
fsub
cmp
pop
rcr
icebp
inc
mov
inc
sti
mov
cli
shrl
add
adc
mov
cwtl
rcrb
jbe
cmpb
in
inc
cmp
mov
dec
sbbl
dec
movsb
add
hlt
pop
mov
mov
jmp
sbb
sub
lods
pop
mov
pop
es
enter
push
cmp
mov
sub
lcall
xorb
push
mov
es
sbb
inc
outsl
pusha
mov
pop
out
sbb
inc
mov
je
out
jge
cmp
add
bnd
cmc
and
mov
stos
sub
push
leave
cmp
daa
cmp
sub
adc
mov
add
sub
push
xchg
jmp
mov
movsb
push
fadds
fcmovb
inc
inc
cmp
cmc
mov
and
sub
add
adc
movsl
stos
jbe
out
inc
jecxz
jmp
ss
or
daa
jae
int
into
jle
mov
cmp
mov
clc
jge
stc
sbb
inc
rorl
and
push
cmpsl
pop
pop
push
cmova
imul
mov
das
fstl
sbb
pop
daa
pop
mov
xor
mov
lahf
inc
and
repnz
sbb
test
nop
push
test
sbb
leave
jno
sub
out
pmaxub
dec
mov
decl
int3
add
ret
xchg
insb
and
leave
lods
add
testl
mov
adc
xor
xor
ret
xor
fistpll
push
mov
push
loope
jo
testb
cmp
iret
pop
orb
inc
inc
aam
lods
scas
inc
sub
mov
aas
sub
fimuls
insb
rorb
rorb
jne
add
and
or
jb
mov
pop
cmp
cld
popa
add
lods
cltd
rolb
mov
loopne
pop
inc
shlb
dec
dec
mov
dec
std
test
lods
pop
fwait
sti
mov
add
add
clc
fisttps
hlt
pop
das
pop
adc
nop
in
mov
pop
sti
dec
push
pop
cli
push
flds
roll
nop
or
lahf
cltd
movsb
dec
loope
jbe
cmp
dec
mov
in
push
nop
out
gs
rol
mov
inc
in
dec
mov
adc
push
mov
pop
jecxz
dec
stc
adc
xlat
sub
mov
dec
pop
lods
cltd
es
dec
sbb
aam
jno
nop
mov
repz
js
mov
xor
jg
push
fidivrs
bound
jmp
add
pop
addb
and
mov
jecxz
xchg
loope,pt
xor
jl
subb
outsl
mov
add
jne
pusha
sub
stc
inc
cmp
dec
dec
ret
hlt
push
scas
sub
jg
xor
xor
and
dec
scas
fistpl
fsubl
imul
loop
scas
pop
jl
sbb
lret
dec
sub
mov
pop
inc
jae
jecxz
push
daa
test
inc
icebp
mov
dec
xchg
clc
mov
xlat
pop
test
sbb
sti
fsubrs
dec
sbb
invd
xor
mov
dec
jmp
pop
aaa
inc
repnz
and
inc
jmp
jp
xor
sarl
aad
js
pop
in
mov
in
mov
push
ret
les
jbe
decb
dec
jnp
movsb
mov
divps
jo
rorb
xchg
push
mov
lret
adc
sahf
jns
dec
inc
insb
test
movsl
lods
dec
push
idivl
jno
push
or
sub
lock
pop
add
jnp
and
xor
mov
popf
xchg
in
subb
rolb
out
dec
cmp
in
jmp
sbb
sbb
push
and
in
push
inc
pop
jno
arpl
xchg
mov
dec
inc
fwait
test
push
add
xlat
and
pop
or
test
xor
inc
mov
das
pusha
cmp
fidivs
jnp
mov
mov
inc
sbb
hlt
push
sub
dec
mov
repnz
mov
inc
movsl
xchg
cmp
pop
add
dec
push
xchg
jg
aam
das
cltd
or
int
sub
fs
push
mov
cmpsb
xchg
ret
xor
push
jns
stos
pop
pop
fidivrl
cmp
mov
pop
cmp
lret
adc
repnz
dec
dec
std
lret
mov
inc
or
xchg
sbb
jmp
movsl
pop
mov
into
pop
cmpsb
jnp
scas
cltd
cs
js
xor
mov
pop
hlt
add
fs
repz
insb
xor
mov
push
xor
addr16
imul
cmp
insb
in
roll
push
push
dec
xor
dec
lods
cmp
and
cmpsl
push
imul
add
or
hlt
add
pop
jl
cmpsb
fcoms
mov
fisubl
add
les
repz
pop
fwait
jg
mov
test
mov
mov
mov
fadd
enter
cmp
pushf
cmp
insl
bound
pop
and
push
cmp
dec
fidivrs
movsl
adc
jo
mov
push
xor
pop
push
sbb
inc
out
push
fdivrl
sbb
adc
push
lret
arpl
xchg
dec
movsb
pop
neg
out
mov
insb
mov
dec
test
sbb
sbb
ja,pn
add
mov
mov
xchg
push
cmp
mov
jl
mov
aaa
test
pop
insb
push
push
xchg
repnz
inc
rorb
jecxz
jmp
notb
mov
and
inc
mov
mov
lea
mov
fsincos
jl
inc
insl
jg
mov
and
mov
jns
jge
pop
fbstp
pop
fwait
aam
mov
mov
push
addr16
xchg
fsubrs
sub
hlt
cmp
mov
mov
push
sbb
adc
sti
add
adc
data16
add
push
push
xchg
lahf
aas
ljmp
add
and
sbb
insl
push
mov
or
and
adc
rclb
in
add
dec
dec
addr16
inc
andb
xor
adcl
xchg
iret
xor
jbe
cmp
xor
cmp
popa
dec
inc
out
pop
mov
xchg
out
xchg
mov
mov
ret
push
cmp
fcomps
mov
mov
add
xor
lahf
cmpb
add
mov
pushf
ds
adc
jno
test
imul
std
pop
cmp
xor
add
inc
sub
test
cmp
fs
jb
lcall
push
mov
cmpsb
add
hlt
sub
outsb
rcll
xor
cltd
mov
sbb
push
sbb
imul
dec
ja
jb
dec
dec
fs
data16
jmp
inc
adc
orb
mov
xor
sahf
or
jmp
fisubrs
push
std
lahf
jg
lods
push
xor
xchg
pop
add
add
subb
mov
cmp
fnsave
add
xchg
xorb
roll
mov
test
shr
nop
enter
pop
add
cmpsl
mov
stos
pop
ljmp
lds
push
xor
jns
repz
scas
xor
inc
mull
fwait
add
in
push
adc
outsb
adc
scas
in
adc
cmp
std
les
inc
dec
mov
nop
pop
mov
and
pop
add
xor
clc
clc
mov
dec
shrl
cmp
or
cmp
jg
sbb
jo
lods
out
addr16
minps
iret
ficompl
jb
jns
out
in
ffreep
out
rolb
fimull
imul
rolb
jle
cwtl
lahf
jns
mov
sub
xor
mov
mov
imul
je
mov
mov
push
mov
sbbb
push
push
mov
pop
inc
arpl
sub
ja
lret
stos
in
addr16
add
xchg
cs
dec
ja
lret
out
gs
out
jecxz
pop
bound
adcb
jo
sahf
in
js
mov
mov
jecxz
sub
or
orb
lea
adc
jnp
mov
sbb
pushf
or
stos
push
das
daa
push
mov
addr16
lahf
enter
inc
mov
test
cli
lods
mov
stos
jns
out
filds
dec
scas
dec
push
rcr
imul
sbb
inc
scas
cmp
mov
ret
xchg
add
in
mov
stos
dec
enter
insl
xchg
mov
jno
jle
mov
iret
nop
mov
add
or
and
cwtl
mov
jmp
jg
data16
ret
daa
mov
sub
out
jne
mov
mov
imul
xor
add
popf
adc
dec
out
mov
adc
das
es
mov
or
mov
repz
int3
pop
mov
outsb
sub
dec
and
xchg
mov
dec
jecxz
dec
pop
mov
fisttpl
push
and
aas
mov
clc
arpl
dec
mov
or
push
xor
and
out
pop
data16
idivb
xchg
or
adc
mov
stos
cmovge
test
divl
icebp
mulb
inc
jns
mov
mov
sti
mov
movsb
mov
xor
xchg
aaa
pop
sti
xchg
sub
mov
aad
decl
or
push
dec
xchg
pop
push
dec
sbb
test
repz
xchg
xor
adc
inc
out
in
shrl
nop
imul
jnp
dec
insb
rcr
outsl
and
jg
xchg
pop
iret
sbb
inc
add
mov
mov
inc
inc
clc
pop
fnstcw
ss
js
sub
pushf
jno
adc
sbb
sbb
lret
pop
dec
sbb
es
jbe
cmp
divl
scas
fidivrs
rcrb
adcl
inc
cmpsb
push
mov
sub
jg
rcrb
mov
test
insb
inc
lods
test
mov
push
imul
sbb
xchg
inc
shlb
into
xor
cwtl
cmp
xchg
jno
inc
in
cmp
dec
in
xchg
add
pop
je
inc
dec
and
sbb
pop
cwtl
je
mov
xor
push
add
push
sub
imul
or
rcrl
popf
adc
push
outsb
dec
mov
cmc
mov
dec
aaa
fistl
inc
or
mov
hlt
ret
xlat
insl
jle
sti
mov
xchg
lret
sbb
push
jg
test
xor
dec
cmp
cmp
inc
jae
fldt
fdivr
add
sbb
or
sti
fdivs
lcall
daa
pusha
out
inc
fisubl
jno
movl
bound
dec
jmp
fldt
pop
or
lods
jg
enter
sti
fcmovbe
push
cmp
lret
mov
jg
lods
fmull
std
movsl
test
xlat
fwait
adc
lcall
xor
jmp
fcmovbe
sbb
gs
sub
adc
lret
in
ja
cmc
fucomp
adc
movsb
xchg
push
or
pop
mov
dec
dec
mov
add
scas
mov
xchg
pop
insb
xchg
cmp
inc
aad
fwait
testl
ret
in
push
lcall
xor
adc
sub
jns
dec
insl
jl
icebp
xor
fmull
mov
lret
mov
dec
sub
adc
gs
sub
aaa
out
jg
fldl
rorl
pop
xor
mov
dec
xor
fstps
je
and
leave
xchg
push
inc
and
insb
test
ret
inc
add
movsb
mov
jle
xchg
jb
cmp
mov
cmpsl
mov
push
and
call
int3
jne
in
mov
xchg
stos
std
push
shl
out
fwait
test
jae
inc
cmp
push
js
mov
pusha
es
fsubl
push
jne
lahf
sbb
sub
jmp
ret
shrb
mov
cmp
lds
dec
adc
orb
mov
pop
sub
aaa
iret
push
shll
ret
mov
je
push
sbbb
inc
dec
sub
pop
jne
jns
xor
movsb
or
je
dec
dec
xchg
rclb
cmpsb
fiaddl
icebp
pop
arpl
lcall
les
lds
adcl
inc
rorl
mov
imul
loop
bnd
push
jle
xorb
pop
mov
cmpsl
xor
xchg
out
in
std
outsb
aaa
or
imul
pop
mov
push
mov
lcall
filds
cmpsl
add
dec
add
arpl
lahf
mov
fs
mov
mov
xchg
out
enter
hlt
sbbb
inc
cli
cmp
pop
dec
cmpsb
insb
hlt
je
push
fwait
mov
outsb
add
add
insb
push
lret
xchg
mov
sbb
xor
sbb
jmp
fcmove
push
cltd
and
fcmovb
lods
or
lret
loope
push
lods
jmp
jg
sahf
rcr
mov
movl
xorb
add
adc
call
push
and
scas
movsl
pop
inc
sbb
es
loope
and
jno
xor
popf
push
push
ret
xchg
jne
dec
jae
and
sahf
add
sahf
dec
je
pop
add
cmpsl
mov
js
out
add
insb
mov
dec
enter
xchg
jns
fwait
das
repnz
jecxz
ret
jl
sbb
idivl
or
mov
xor
cmp
cmp
add
and
hlt
jne
adc
rcl
out
mov
xlat
iret
mov
in
or
dec
pop
sbb
imul
add
or
mov
mov
cwtl
mov
mov
pop
lret
push
add
icebp
negb
insb
in
dec
xchg
or
jb
imul
lods
mov
mov
push
hlt
clc
in
fildl
sti
lods
xchg
clc
sti
rorl
lods
add
dec
jbe
movsb
stos
cwtl
mov
decl
jp
mov
out
cwtl
jno
imul
loope
pop
in
or
repz
clc
mov
fldcw
sti
pop
or
cltd
dec
inc
or
xor
jl
sub
insb
jecxz
scas
std
mov
cmp
adc
or
xor
push
cltd
mov
ja
sub
adc
fwait
scas
adc
mov
ss
xchg
insb
mov
jl
or
movsl
fstl
mov
icebp
add
mov
sub
movsb
cmp
cmp
mov
negl
pushf
xchg
outsb
cmp
ja
xchg
pop
fwait
cs
dec
and
xchg
push
fs
mul
test
loop
inc
jae
inc
lock
and
ljmp
outsb
or
movsl
daa
or
inc
mov
sbb
test
mov
sbb
inc
jmp
sbb
rolb
inc
pushf
testl
mov
mov
xchg
pushf
jne
jns
push
fsubrl
mov
mov
inc
es
mov
stc
jno
xor
insl
mov
and
inc
add
or
sbb
or
fsts
dec
mov
nop
clc
rorb
sarb
and
call
out
fidivl
dec
js
dec
sti
cmp
inc
repz
cld
xchg
fwait
xchg
das
adc
int
jl
ja
cld
add
jns
pop
ret
jbe
dec
es
cmp
testl
lock
sbb
enter
or
or
imul
cmp
jmp
pop
imul
push
movsl
fstl
and
fisttpl
incb
inc
rolb
movsl
lds
xchg
adc
xchg
pop
xor
and
test
jle
and
or
sbb
mov
pop
mov
pop
adc
pop
arpl
pop
xlat
sbb
jae
std
or
adc
adc
xchg
cmpsl
dec
push
mov
xchg
push
sahf
mov
pop
cmp
inc
insb
push
pop
jns
cs
mov
pop
clc
arpl
fiadds
dec
out
dec
cmpsl
into
xchg
daa
or
push
in
and
faddl
and
leave
and
bound
data16
xchg
das
inc
sbb
pop
fwait
inc
and
fstps
dec
fxch
cld
inc
mov
mov
in
mov
dec
std
dec
or
adc
pop
dec
mov
mov
outsb
and
push
add
inc
xchg
mov
pop
inc
test
jb
jle
lea
add
out
pushf
in
in
mov
dec
cltd
xchg
pop
scas
inc
jle
cmpb
arpl
xchg
int
add
icebp
or
pop
dec
fimuls
jp
xchg
jne
inc
into
imul
mov
sub
arpl
pop
and
cld
jno
mov
daa
push
pop
sub
jae
inc
jp
inc
inc
imul
mov
inc
movsb
xor
mov
stos
fwait
cvttps2pi
inc
lcall
jae
add
fildl
pop
or
inc
lods
in
test
test
stc
cmp
add
ficompl
popf
jle
jl
sub
imul
cmpsb
adc
cld
inc
mov
outsl
dec
mov
ljmp
inc
insb
mov
bound
out
arpl
sbb
dec
daa
add
pop
mov
jnp
push
ret
mov
sub
subl
mov
xchg
fiadds
cli
cmpsl
jg
sbb
push
repz
add
jno
mov
das
das
rorb
push
out
movsb
xchg
fsubrs
lret
pop
sbb
arpl
adc
fcoml
pop
dec
or
adc
sbb
mov
ja
mov
movsb
stos
jge
adcl
add
sub
inc
sub
pop
mov
add
sti
loope
rcll
cmpsl
inc
ss
pop
cs
push
outsl
mov
fstpt
js
es
or
dec
out
nop
xor
mov
mov
jns
loopne
loope
cltd
xlat
lods
js
fbstp
cmc
les
cld
dec
xlat
inc
cmp
frstor
push
pop
xchg
sub
loope
sub
int3
pop
mov
mov
nop
add
xor
mov
hlt
lahf
rorb
push
jae
jecxz
jb
jle
and
pop
jmp
jl
sti
cmc
inc
out
repz
or
test
adc
fldt
jg
insb
or
mov
jns
sbb
push
aaa
call
mov
lds
or
jb
bound
das
shll
fdivr
mov
push
mov
push
sbb
jmp
das
mov
stc
daa
sub
cli
ljmp
fs
loope
dec
fwait
repz
pop
in
es
mov
cmp
jg
push
aam
movsb
sbbl
std
shl
mov
jns
out
lret
pop
inc
pop
or
or
iret
std
pop
out
arpl
loopne
push
push
jge
push
jns
ja
adc
arpl
push
lods
fidivl
sar
push
xor
ja
mov
icebp
xchg
fldenv
ret
mov
jmp
loope
aam
pop
add
xor
jbe
lret
cmpsb
setb
scas
jns
icebp
std
sbb
fs
mov
sub
repz
jecxz
cmp
aad
sub
fwait
pop
icebp
cltd
pusha
xchg
cmpsl
fcomip
js
mov
sub
cmp
popl
cli
push
scas
lods
cmp
cmc
lea
xor
loop
out
fdivp
push
inc
nop
xchg
cmc
mov
push
pop
pop
inc
loop
icebp
inc
xchg
out
mov
pop
orl
pop
sbb
loope
adc
xor
jg
add
imul
cmp
inc
inc
sbb
fisttpll
pop
pop
mov
scas
push
ja
push
add
shl
jbe
cli
ret
roll
scas
cwtl
push
or
mov
fcmovnbe
add
imul
add
inc
sub
jae
lahf
mov
lods
test
hlt
mov
mov
jmp
pop
jae
loope
test
stos
lret
mov
nop
mov
jle
ret
jg
icebp
xchg
fs
test
mov
adc
test
ret
push
mov
je
add
sbb
les
xchg
jecxz
scas
sarb
inc
sub
fwait
aad
push
push
mov
dec
and
and
cmp
imulb
cld
imul
adc
mov
adc
pmaxub
add
sahf
mov
xor
or
pop
shl
mov
fcmovnbe
mov
stc
lea
inc
dec
mov
movsb
fstl
pop
idivl
sbb
xor
mov
xor
or
lret
mov
xchg
mov
fisubrl
divb
mov
popf
push
bnd
sbb
mov
daa
xchg
push
js
arpl
lcall
xor
loopne
fldt
nop
shrl
ds
inc
icebp
mov
clc
aaa
je
or
mov
mov
sub
jo
iret
std
out
add
icebp
jmp
in
lea
lods
jg
es
push
lods
sahf
add
cmc
mov
adc
dec
inc
ret
push
int3
imul
pop
fdiv
shlb
push
jmp
push
xor
xchg
xorb
iret
push
xchg
or
stos
xchg
xchg
jecxz
fs
push
ret
push
xor
mov
and
cmc
movsb
mov
cmpsl
cmp
in
ret
cltd
std
test
call
and
mov
mov
xchg
rorl
dec
push
cmp
mov
pushl
rcrl
inc
js
mov
push
inc
idiv
sub
es
xchg
dec
ss
xor
xor
mov
sbb
mov
or
pop
test
sti
scas
push
mov
dec
outsl
cmpsb
repz
mov
push
lock
test
int
and
pop
in
cmp
mov
lret
cmp
push
mov
and
adc
push
cltd
out
lea
sbb
push
jl
pop
data16
test
jae
jg
aam
mov
jne
lods
and
ja
je
xor
push
test
jno
jg
adc
mov
fs
mov
sbb
mov
nop
mov
sub
or
sti
ss
fwait
inc
add
rol
in
in
inc
mov
je
es
cmpb
in
push
out
jns
sub
mov
xchg
decl
lea
adc
lret
and
cmp
das
mov
mov
push
pop
in
mov
clc
adc
fcmovbe
icebp
jle
sahf
outsl
push
push
xor
and
push
ja
mov
dec
out
das
sub
lds
shrl
xchg
cmp
notl
dec
xor
das
inc
mov
int
icebp
mov
dec
cmc
add
lret
ffree
pop
pop
push
rcl
pop
js
xor
cli
mov
and
adc
cmp
fimuls
mov
shll
fcomip
stos
repnz
stos
iret
add
mov
mov
cmpsb
add
mov
dec
push
pop
in
sti
hlt
outsb
out
xchg
jb
out
lret
popa
dec
dec
mov
sbb
sarb
add
fadd
fnstcw
orb
test
cmpsl
inc
sahf
mov
lcall
aad
les
addl
mov
cld
insb
loopne
arpl
jge
inc
call
push
xchg
loopne
or
andb
sbb
lahf
sbb
mov
or
testl
mov
adc
enter
out
jl
or
dec
stc
jnp
and
and
xlat
shlb
or
xor
mov
cmp
in
adc
repz
filds
jno
pop
pop
sub
out
sbb
push
and
aad
add
aad
decl
adc
xor
stos
pushf
push
sub
adc
gs
pushf
lea
adc
das
cmp
jns
enter
out
sbb
and
fsubrs
cmp
mov
jns
aam
mov
pushl
mov
mov
nop
jbe
push
xlat
popa
insb
mov
es
stc
rcrb
and
cmp
fs
loope
inc
sub
sti
jge
xlat
jno
inc
and
push
rcrl
pop
mov
icebp
jae
mov
aam
frstor
cmp
inc
lcall
mov
out
in
fbld
jb
mov
ret
fistl
sbb
fsts
pop
mov
add
sub
pusha
sbb
mov
and
fdivp
pop
out
or
jbe
inc
pop
xlat
lods
ljmp
loop
mov
std
mov
push
lods
xorb
mov
or
cmp
inc
mov
dec
mov
cmp
cmp
test
mov
sub
mov
jb
pop
add
add
dec
mov
js
fcomi
es
sbb
in
or
insb
push
push
mov
aaa
mov
fiaddl
lds
push
xchg
stc
or
sbb
das
or
or
loope
adc
jne
sub
sbb
rcrb
and
iret
or
pop
or
arpl
lods
add
push
lcall
lock
addl
or
push
and
rcl
mov
add
dec
js
sub
out
jns
xor
lahf
fidivs
mov
sti
idivl
orl
repz
fisubs
xchg
xor
jb
xlat
add
or
xchg
into
mov
push
mov
arpl
repnz
push
fdivr
mov
xchg
xchg
mov
push
push
jmp
lods
push
mov
fistl
pusha
data16
addb
push
jbe
or
or
pushf
mov
add
and
std
jo
repz
mov
scas
jo
push
pop
xchg
dec
sbb
jmp
mov
mov
mov
arpl
imul
in
xchg
pop
inc
dec
add
cld
fidivl
mov
loopne
in
pop
add
aad
adc
mov
dec
mov
adc
movsl
pop
scas
xchg
pop
cmp
sbb
dec
shll
mov
dec
or
jns
jmp
xchg
xor
dec
push
xor
stos
imul
pusha
mov
test
shll
push
add
push
inc
inc
mov
stos
enter
mov
xlat
and
inc
mov
hlt
push
jae
cmpsl
adc
or
outsl
mov
inc
mov
stc
dec
xchg
or
stc
inc
mov
mov
pop
out
insl
ja
or
push
js
int3
add
jo
sub
xchg
out
enter
xchg
movsl
rcl
cwtl
ss
jno
xor
jg,pn
sarl
int
rclb
popf
cmp
jl
scas
in
xchg
stos
sbb
xor
rorb
fdivrl
add
mov
xchg
loop
dec
mov
cld
lock
addr16
lret
cmp
mov
insb
push
call
int3
rorl
icebp
pop
mov
add
insl
nop
and
mov
fmul
add
test
jl
mov
jg
inc
cmp
fidivl
inc
push
xor
cmovnp
mov
pop
pop
inc
mov
loopne
jle
dec
fstl
iret
jle
and
sahf
jge
or
aas
adc
cmc
or
sub
or
fmuls
inc
int
mov
pop
adc
cwtl
enter
jg
addr16
lcall
cmp
mov
inc
cmp
mov
mov
fidivrl
push
jg
sahf
adc
push
cmp
in
or
adc
fistl
fs
push
fucom
mov
dec
insb
cmp
cld
mov
pop
mov
add
daa
mov
imull
test
mov
or
nop
sbb
sarl
loope
dec
jno
dec
mov
jecxz
imul
dec
jg
ja
dec
dec
dec
lds
mov
sti
cmp
in
inc
fs
and
orb
sub
inc
loope
sbb
jl
add
ja
dec
mov
in
mov
push
int
mov
dec
leave
test
mov
xor
mov
fsubs
xor
out
dec
je
sub
enter
dec
mov
je
test
scas
out
jnp
into
imulb
ficoms
ret
mov
mov
jl
jl
cmpb
scas
fwait
mov
jbe
inc
xor
ja
sub
ficompl
movsl
and
shlb
and
adcb
push
mov
clc
in
insb
clc
or
pop
insb
jmp
popf
dec
pop
out
push
and
mull
cmpsb
outsl
test
std
jmp
ljmp
xorl
mov
ficompl
cmc
mov
test
inc
mov
jmp
push
mov
pusha
jno
test
movsb
dec
mov
pop
test
in
jne
call
daa
mov
sub
push
inc
push
testl
in
lret
dec
data16
loopne
int3
xchg
sub
out
and
inc
mov
mov
lret
push
inc
add
dec
mov
addr16
int3
js
cmp
jmp
adc
adc
cmp
sub
sub
int3
pop
push
insl
xchg
jae
jmp
in
ret
out
lahf
scas
jns
nop
mov
xchg
lea
movsl
cmp
mov
test
xor
and
dec
inc
xor
aas
inc
jmp
jne
ficompl
fwait
into
push
rorb
or
test
repnz
xchg
ret
ffree
dec
movsl
add
xchg
cmp
pop
or
cmp
das
sub
aaa
push
push
push
jae
loope
movsb
cli
jnp
xor
dec
hlt
lea
xor
insl
inc
cmpsl
mov
das
mov
or
inc
lock
xchg
cmp
mov
cwtl
hlt
addr16
loope
cmp
jae
daa
add
outsb
lcall
push
cs
pop
mov
ja
add
testl
jb
in
xor
nop
fimull
push
jo
cmp
mov
lcall
fistl
loop
add
or
cmp
mov
xchg
cld
dec
xchg
jbe
cltd
outsl
mov
pop
pand
out
jnp,pt
enter
bound
and
out
adc
dec
cmp
movsb
cmp
mov
rorl
mov
fs
fldt
loope
sub
icebp
test
jl
adc
mov
mov
andl
mov
inc
jmp
xchg
shl
adc
jns
nop
inc
add
mov
movsl
mov
ret
or
fsubl
push
ljmp
rorb
out
out
jg
inc
out
adc
push
nop
std
push
ljmp
cmp
decl
pusha
outsb
sbb
adc
pop
out
push
cmp
jae
es
fmulp
pop
pusha
addr16
daa
and
or
pop
fs
fwait
mov
dec
inc
mov
std
pop
xchg
jg
adc
push
mov
movsl
cmc
xorb
sub
jns
push
add
scas
cmp
adc
cli
jl
rorb
daa
push
ficompl
and
mov
out
idivl
pop
or
push
mov
inc
in
icebp
ret
dec
aam
in
loope
jge
ret
push
add
pop
nop
mov
cmp
outsl
dec
mov
data16
sbb
insb
sub
lods
xchg
mov
negl
cmp
pop
sub
lahf
pop
jle
cld
outsb
addr16
mov
nop
movsl
imul
stc
add
loope
xchg
and
inc
bound
sub
fadd
fsubr
pop
or
fwait
mov
int3
push
cli
loope
xor
push
fwait
cmpsb
fsubrs
test
sub
in
arpl
jle
jl
lods
jne
xchg
sub
repz
jmp
push
mov
xchg
rclb
fwait
out
rclb
fiadds
push
sub
jp
pop
cmp
jg
sarb
mov
mov
adc
jg
idivb
mov
push
push
mov
mov
cs
and
jmp
sub
cli
and
and
fistpl
ret
imul
sti
sbb
jge
cmp
mov
inc
mov
aad
decl
cmp
aaa
mov
bound
imul
or
cwtl
dec
add
fidivrl
mov
andb
ficoml
mov
push
sar
and
sahf
mov
mov
jecxz
imul
jg
jp
ljmp
sub
sbb
and
mov
jo
xlat
cmp
mov
adc
jmp
inc
mov
fwait
or
test
jge
dec
pop
inc
mov
int
nop
decl
pop
cmp
jg
and
sarb
ficompl
roll
icebp
lret
fnstcw
sub
cli
jnp
pop
inc
xchg
mov
push
rorb
jae
mov
jg
mov
les
aam
test
adc
outsl
rep
repnz
ljmp
dec
inc
fcomip
int
fildl
test
or
rorb
xchg
cmc
inc
pop
add
sti
rclb
cs
push
ret
data16
mov
or
test
cmp
mov
movsb
jnp
or
jo
mov
aaa
sub
aam
cltd
je
inc
add
shll
data16
lret
loop
adc
jge
or
ret
push
aaa
push
pop
shl
and
cs
mov
adc
pop
mov
push
push
xor
xor
dec
sarl
jg
xor
pop
mov
lret
cmp
popa
data16
jecxz
das
sub
sbb
ret
test
pop
subl
enter
jnp
pusha
insb
mov
push
loopne
fucompp
push
or
orb
dec
mov
mov
lret
loopne
insb
rolb
mov
jmp
cmp
cmc
mov
add
das
and
add
push
je
dec
std
and
add
dec
adc
scas
or
dec
cmp
jnp
jnp,pn
mov
call
xchg
out
and
repz
aam
inc
add
es
popa
fidivl
pop
popf
jne
and
push
dec
push
inc
sub
xchg
sub
out
icebp
inc
mov
pop
cmp
cmpl
mov
lahf
fistl
mov
fwait
test
shufps
dec
jg
sbb
inc
jmp
aas
out
jno
mov
inc
dec
sbb
movsb
and
fcmovne
mov
mov
mov
add
jmp
inc
stos
ljmp
dec
push
lds
pop
mov
popa
shl
add
jb
push
mov
movsl
pop
add
jg
ljmp
loope
or
dec
add
div
outsl
mov
pop
cld
dec
es
and
cmpsb
push
aaa
jl
fnstcw
jg
push
dec
add
pop
mov
fwait
arpl
call
test
loope
mov
ror
pop
pop
pop
adcb
mov
test
dec
push
inc
dec
in
stc
or
cs
push
fsubrp
insl
dec
or
out
adc
setg
jmp
jge
or
xchg
dec
dec
jnp
xchg
addr16
inc
lock
out
mov
dec
scas
cltd
pop
in
and
xor
jmp
xchg
shll
jmp
fistpl
sub
std
fildl
push
sarl
add
aaa
lock
fnstenv
shrl
mov
out
jae
sbb
xchg
lret
rcr
inc
mov
roll
in
repnz
xchg
lahf
leave
push
mov
adc
cmpsl
adc
jno
inc
fwait
insl
cmpsb
cmp
mov
insl
lret
fists
jo
and
in
stc
movsb
jbe
mov
aas
sub
lods
sbb
jb
imul
mov
movsb
pop
xor
adc
cltd
lcall
mov
fimuls
cwtl
mov
movsb
xor
movaps
in
shlb
mov
ja
dec
sub
jae
out
dec
add
mov
xor
iret
fstps
arpl
jmp
pop
mov
cmp
ficompl
xchg
cmp
xchg
bound
outsl
jbe
insb
adc
sbb
lret
dec
sahf
icebp
insl
inc
movsl
cwtl
ljmp
mov
push
es
dec
cmp
jae
rorb
push
je
ja
mov
push
loop,pt
rorb
dec
jp
sti
or
int
push
aad
jnp
cmp
insb
and
and
testl
int3
adc
jne
insl
inc
es
inc
cmp
pusha
dec
jp
push
mov
rcrb
leave
ret
xorb
pop
movq
call
mov
mov
and
lock
push
cltd
icebp
mov
hlt
sub
adc
rol
sub
sub
hlt
push
mov
stc
cmp
push
sub
out
jno
outsl
lret
jecxz
cwtl
test
mov
call
into
inc
push
inc
xor
rcl
push
add
sbb
push
pop
mov
sahf
mov
cmp
in
inc
pop
arpl
and
ds
ret
pop
jnp
sbb
sar
pusha
sub
jb
sbb
sbb
xchg
push
je
insl
ret
movsl
fistpll
inc
xor
mov
push
scas
mov
cmpsb
ret
mov
lods
mov
mov
sub
and
ja
test
push
sbb
inc
push
arpl
fnstsw
dec
repz
imul
scas
mov
jbe
add
or
pop
les
sbbb
sbb
or
pop
adc
mov
adc
repz
xor
mov
or
shl
scas
or
rorb
cltd
sbb
adc
and
or
dec
or
stos
dec
outsl
loop
jae
dec
stc
add
test
daa
test
int3
sub
mov
sbb
dec
pop
mov
cmc
lods
cli
add
pop
pop
enter
in
lea
mov
call
aam
dec
lret
mov
or
adc
inc
hlt
das
xchg
mov
test
mov
or
sahf
xchg
xchg
mov
push
cmp
push
jle
mov
inc
inc
mov
inc
pusha
sbb
ljmp
jne
lret
push
xchg
dec
sub
xchg
mov
add
cltd
insb
or
clc
sub
ja
mov
std
mov
sub
lds
mov
in
movsl
mov
out
sub
jp
jno
inc
xchg
mov
fwait
push
xchg
add
insl
lahf
jg
popf
adc
lret
lea
insb
mov
inc
lcall
pusha
rcll
add
test
gs
mov
mov
js,pt
int
xchg
jge
in
ljmp
or
ja
mov
arpl
pop
mov
xchg
push
and
pop
aad
mov
jp
lock
inc
and
mov
gs
sub
inc
fwait
xor
int3
jge,pn
leave
fisttpl
int
fldcw
pop
xchg
jle
mov
cld
loop
imul
jns
sbb
sub
popf
adcb
fistpl
inc
mov
js
add
loop
fidivs
xchg
inc
lret
inc
cmp
jno
inc
mov
inc
cmpsb
jl
pop
cltd
pop
dec
ficoms
adc
pushf
sbb
mov
mov
mov
cmp
sbb
xchg
cmc
sbb
rorl
and
and
jae
fwait
cltd
aam
jnp
mov
pop
cmp
ret
sub
inc
jp
rcll
mov
dec
outsb
inc
in
test
fnstenv
lods
pusha
adc
ljmp
sub
dec
add
lahf
push
sub
dec
and
pusha
call
sub
mov
sbb
les
or
or
sub
ret
fucom
inc
popa
cmp
pop
insb
shll
cmp
xchg
popa
xor
xchg
push
cmp
push
jb
mov
stc
xchg
dec
jnp
out
fs
into
cmc
xchg
test
cmpsb
inc
cmc
mov
int
jbe
aaa
mov
out
xchg
aam
mov
bound
leave
adc
shll
xlat
push
add
cs
inc
pusha
inc
xchg
jmp
outsl
jno
pop
test
ficoms
sub
mov
pop
cmpsl
add
dec
sub
push
rolb
imul
ja
dec
sub
rcl
jo
mov
sub
jle
insb
aam
sbb
jns
addr16
stos
ljmp
loopne
ret
jp
inc
push
mov
test
into
xor
push
xor
adc
fdivl
sbb
mov
xchg
add
loope
and
push
subb
and
mov
es
cmpsb
mov
push
pop
xchg
aas
adc
je
inc
into
jle
mov
dec
inc
adc
jno
gs
mov
inc
inc
pop
adc
pop
jle
subb
push
in
mov
push
es
adc
push
jmp
cld
loopne
int
lret
pop
sub
fildl
sahf
fldl2e
fwait
mov
dec
mov
ja
pop
mov
ret
les
dec
int
mov
lods
add
mov
repnz
movsl
xchg
data16
in
mov
lock
cmp
xorl
add
jno
les
or
testl
xchg
test
arpl
xor
iret
xor
mov
insl
mov
sbb
inc
jae
clc
mov
mov
mov
dec
leave
mov
xor
or
sub
sbb
jbe
adc
and
mov
and
jmp
pop
stos
in
stc
pushf
icebp
cmp
mov
mov
popf
fisttpll
daa
ficomps
or
xor
es
jno
pop
xor
push
std
mov
stos
inc
sub
push
mov
mov
add
pop
or
push
mov
xchg
dec
addb
sbbl
hlt
out
fistps
push
mov
push
repnz
sbb
popa
xor
pop
sub
mov
loope
sub
xchg
sbb
dec
jl
push
popf
ret
lret
ret
jecxz
cmp
add
cmp
mov
lahf
stc
inc
and
jecxz
js
call
xchg
dec
mov
inc
out
inc
enter
shrl
int3
dec
mov
mov
mov
data16
xchg
cmp
out
inc
and
cmpsl
cs
cmp
aas
jl
pusha
xor
sub
dec
les
out
mov
fsubrl
pop
xchg
jg
outsb
out
sti
mov
insb
mov
fistpl
lret
popf
icebp
lret
pop
mov
mov
sbb
outsl
pusha
aas
popf
sub
mov
imul
jle
sub
push
lods
cmc
and
mov
in
stos
sub
mov
stc
or
jnp
fwait
dec
js
pushf
mov
ja
push
mov
mov
push
sub
pop
lds
popf
xor
xlat
xor
les
push
lahf
mov
das
cmp
data16
ljmp
pushf
icebp
jnp
push
fisttps
mov
sahf
dec
or
jmp
mov
mov
adc
jne
cmpsl
insl
movsl
scas
push
ds
fisttpl
mov
cmc
aad
cmp
cmp
imul
repnz
cmp
add
into
jno
mov
sub
leave
lea
mov
shrb
mov
push
jnp
adc
fisubl
jo
fwait
xrelease
mov
sbbl
xchg
adc
xchg
sub
loopne
adc
inc
and
xchg
cmc
ja
and
xchg
push
int3
pop
fwait
mov
dec
cmp
sub
push
mov
mov
cmp
clc
mov
stc
test
xchg
lret
loop
test
lahf
cmpsb
or
pop
mov
jmp
adcl
cmp
mov
dec
lea
add
js
mov
cmp
aam
sbb
jl
push
xor
lds
xor
arpl
xor
pop
jp
in
out
popf
sbb
add
sub
pop
add
ficomps
lahf
cmp
mov
loopne
fs
xchg
mov
ret
xchg
mov
sti
sub
xor
sar
or
lret
imul
inc
scas
add
dec
sbbl
fstps
fdiv
div
fcompl
inc
jl
aam
xchg
dec
jnp,pt
dec
mov
inc
pop
stc
sub
fcomps
ret
fisttpl
inc
or
jbe
xor
push
jno
push
sahf
xchg
cltd
scas
pop
inc
aas
sub
iret
pop
xor
sti
push
test
dec
mov
js
mov
pop
adc
loopne
in
fwait
inc
dec
dec
lock
test
pop
add
out
jg
mov
sbb
dec
outsb
mov
pop
mov
pushf
mov
mov
arpl
shlb
leave
in
lods
adc
mov
lea
or
mov
loopne
mov
mov
pop
inc
fiaddl
add
stos
dec
shrl
inc
cmc
iret
out
sub
icebp
outsb
mov
add
scas
push
mov
or
jle
or
in
xchg
insb
fcmovne
and
push
sti
dec
xchg
call
test
jle
push
pop
push
popa
add
push
pop
call
fisttpl
and
mov
or
fcmovnb
inc
lret
mov
iret
cmpsb
xchg
dec
push
pop
mov
int
cmpsl
divl
mov
push
js
mov
repz
fbld
icebp
xchg
lock
ja
dec
dec
lret
push
adc
nop
shll
cmp
pop
icebp
mov
jnp
jle
pop
cmp
pop
adc
fbstp
shr
iret
in
xlat
jle
and
push
mov
sahf
push
pop
pop
pop
stos
push
scas
add
or
jo
aas
movsb
mov
fs
mov
jbe
outsl
xchg
pop
sbb
neg
sub
aam
leave
xchg
xchg
js
in
push
arpl
or
push
pushf
push
inc
push
jmp
aaa
frstor
mov
fs
in
xor
cmp
sub
mov
imul
cmpsl
sti
dec
jge
shl
scas
out
into
pop
movsl
pop
mov
cmp
jp
mov
push
imul
insl
push
mov
lock
int3
jbe
inc
pop
sub
pusha
aam
sahf
dec
and
sub
movl
or
dec
pop
add
jge
and
push
imul
sub
test
inc
mov
mov
jbe
sbb
outsl
and
test
jnp
cmp
cmpsl
mov
cmp
inc
fidivs
adc
in
sub
mov
or
shlb
inc
pop
or
clc
dec
adc
jno
std
adc
adc
sbbl
pop
mov
movsb
pushl
repnz
inc
mov
inc
push
out
push
test
mov
ficompl
test
pushf
dec
sbb
insl
mov
rcr
clc
cmpsl
aad
xchg
ss
out
jae
jmp
loope
adcl
addl
jg
inc
push
bnd
mov
arpl
and
lcall
or
push
int3
dec
push
cltd
sbbl
lret
fnsave
mov
and
cwtl
add
sub
jae
fwait
xchg
push
out
adc
mov
loop
movsb
push
push
lods
pop
aaa
pop
aad
add
sahf
mov
push
jbe
ja
mov
outsb
idivl
pop
mov
pushf
imul
test
das
mov
orl
adc
out
mov
mov
dec
jecxz
lods
ficoml
xchg
or
aad
sbb
imul
sub
dec
in
pop
add
xor
or
sbb
pushf
repnz
cmp
out
jecxz
mov
repnz
les
shll
or
inc
aas
aad
mov
aaa
fistpl
loope
jno
sbb
mov
xchg
mov
mov
popa
hlt
pop
push
stos
stc
dec
loopne
scas
dec
xor
add
sbb
divb
dec
arpl
cmp
xchg
dec
sarl
nop
xor
rol
call
dec
and
shrb
loop
int
pop
orl
test
shrl
or
sbb
lret
jnp
or
inc
cmp
les
xor
fidivrl
outsb
out
hlt
icebp
test
cmpsl
push
stos
cmp
fwait
out
pop
cmpsl
fs
dec
lret
push
je
sub
popf
rcrl
bound
cmpsb
outsl
fs
lock
fistpl
mov
cmpl
mov
shr
and
mov
mov
or
inc
dec
int3
mov
aam
mov
lret
shl
inc
lahf
jmp
or
scas
xchg
psubd
ja
adc
adc
and
leave
out
cli
lahf
call
pop
repz
adc
cmp
inc
in
jl
out
fadd
repnz
ja
in
mov
add
aas
fstl
and
xor
sbb
outsl
pop
pop
gs
push
scas
movb
xor
stos
iret
adcb
push
call
shlb
sbb
arpl
loop
ret
pop
or
push
jmp
lret
pop
push
mov
or
sarb
jnp
sbb
sub
inc
iret
fbstp
ja
mov
loope
inc
je
cmp
mov
mov
or
mov
idiv
stc
pop
leave
add
in
jne
notb
pop
xor
mov
jne
dec
or
lahf
jle
mov
adc
push
sbb
shll
outsb
fsts
sub
pop
or
lods
sbb
dec
insb
adc
es
mov
mov
fcomi
cltd
fidivl
imul
pop
clc
pop
movb
movsb
sub
sub
push
push
push
push
xor
jl
imul
mov
pop
xor
iret
add
sbb
lret
int3
test
cwtl
xor
pop
xchg
jne
pop
dec
add
sbb
shll
call
push
push
jg
and
nop
push
cltd
mov
hlt
lahf
cli
loope
or
aam
and
movsb
pop
subb
in
enter
fistpl
mov
and
into
pop
rorl
cmpb
mov
data16
incb
movsl
ja
jg
cmp
mov
pusha
xchg
cmp
ja
jg
mov
out
clc
xor
pusha
insb
inc
ja
cld
and
add
xchg
jl
js
lcall
dec
xchg
outsl
mov
stc
jmp
jo
xchg
insb
adc
es
jmp
jmp
ljmp
into
test
fiaddl
cltd
push
fistpll
sub
roll
std
xor
mov
jp
movsb
cltd
pop
in
std
es
and
outsl
dec
push
push
cltd
jecxz
push
sbb
push
mov
sub
fidivrl
mov
clc
out
or
lods
xchg
lahf
push
into
out
mov
in
lods
jmp
jecxz
shll
xchg
mov
cmp
mov
sbb
lods
sbb
jns
lods
bound
test
mov
repz
les
cmp
sbb
cs
push
inc
pop
push
mov
push
lret
push
adc
inc
stc
jl
data16
jae
mov
fcmovne
cwtl
out
ficoms
pop
int
out
jns
sbb
jge
mov
cmpb
repz
stc
icebp
inc
int3
decb
mov
xor
push
mov
leave
push
or
cmp
sti
jnp
sti
sub
jbe
in
mov
out
dec
rcrl
xor
fisubl
int3
aam
fimuls
inc
sbbl
js
fs
sbb
xchg
scas
dec
cltd
adc
jl
pop
push
jns
fdivs
lret
leave
stc
mov
std
and
add
inc
scas
in
mov
jbe
mov
xchg
mov
int
imul
xor
push
add
pop
and
imul
lods
outsb
or
dec
dec
push
or
cltd
xor
push
fisttpll
xchg
icebp
scas
and
lret
fucomi
out
cmp
lahf
pop
insl
fsubr
lods
or
jno
jae
ret
add
out
sub
mov
movsl
pop
js
ss
outsl
push
xchg
jns
stos
jp
dec
call
icebp
mov
or
add
sahf
popa
inc
sbb
and
dec
mov
push
imul
mov
std
mov
push
pop
cmpb
aam
ljmp
mov
push
out
xchg
mov
mov
cld
loopne
pusha
add
inc
xlat
insl
out
adc
int3
fwait
mov
jns
and
cld
aaa
mov
jno
push
data16
jl
xor
push
jbe
out
mov
pop
cs
loopne
inc
sub
insl
sahf
pop
cmp
call
jo
scas
fld
mov
fs
adc
mov
insb
or
dec
mov
sub
shr
aas
jno
in
mov
ss
mov
dec
dec
add
ja
add
push
mov
push
pop
xor
jnp
ss
adc
and
loope
or
hlt
add
and
xchg
movsb
inc
jle
xchg
stos
mov
xorl
iret
inc
inc
xchg
pushf
jno
or
cmpsb
jno
ljmp
iret
cmpsl
mov
mov
inc
mov
out
inc
into
push
je
jg
dec
iret
jge
sarb
in
ret
repz
mov
mov
call
movsb
xor
adc
jl
hlt
popa
xchg
fwait
int3
shrb
les
mov
iret
push
sbb
arpl
lcall
or
sbb
xor
push
mov
cmpsl
pop
add
and
fcmovb
lods
iret
fcompl
mov
pop
call
sub
jb
mov
push
xor
dec
int3
or
dec
dec
lret
sbb
orb
sbbl
bound
int
or
or
sbb
sbb
inc
inc
cs
inc
fistps
sti
sub
out
mov
mov
imul
scas
sub
jns
fidivrs
ja
inc
out
cmpb
mov
sub
sub
add
mov
mov
int
push
adc
jno
mov
dec
dec
rorl
mov
mov
lcall
rcrb
xor
and
icebp
js
jl
pushf
out
into
mov
dec
scas
sahf
push
or
mov
fwait
std
sbb
jecxz
mov
pop
add
cld
jp
mov
sub
push
fucomi
and
outsl
adc
pop
and
fiaddl
stos
jl
ljmp
adcb
mov
xor
xchg
or
fs
xlat
cltd
add
ret
jo
orl
hlt
mov
jg
cmc
test
call
adc
sbb
lock
sub
jl
inc
and
mov
mov
mov
ret
or
test
push
push
mov
fmuls
sbb
push
ficomps
sub
dec
arpl
rcl
add
test
mov
ret
mov
mov
mov
ja
cmp
and
shrl
sub
imul
xor
daa
xor
or
ja
inc
mov
leave
dec
loopne
aas
inc
in
imul
push
mov
cld
push
ss
inc
push
cmp
sub
cmp
aas
jbe
cli
in
arpl
stc
add
popa
push
mov
sub
dec
mov
dec
jns
or
cmp
je
mov
fwait
es
fdivl
cmpsb
mov
imul
dec
mov
mov
fs
mov
mov
dec
xchg
and
mov
imul
pop
and
push
cmp
fwait
lods
fnsaves
push
mov
inc
int3
inc
scas
shll
fiaddl
mov
mov
mov
cmp
mov
dec
shll
jecxz
push
andb
push
imulb
dec
or
es
repz
mov
adc
jns
leave
mov
in
xchg
lcall
cmp
fstpt
push
pushf
jmp
loope
testl
scas
scas
cmp
sub
add
or
cwtl
jg
mov
push
jge
push
aad
or
mov
push
push
dec
jno
xchg
xchg
xchg
fimull
push
push
clc
xchg
push
and
mov
mov
iret
adcb
cld
pusha
insb
mov
pop
mov
dec
jmp
add
jbe
dec
jnp
dec
rorb
fwait
das
mov
leave
jb
mov
jp
jae
adc
add
push
pop
ret
jnp
push
inc
add
mov
ja
stos
loope
add
clc
loopne
sub
jecxz
inc
inc
sbb
add
test
cmp
not
test
jle
iret
adc
pop
ficompl
push
mov
inc
cs
inc
xor
loop
es
pusha
sbb
js
xchg
mull
test
mov
cmc
jecxz
xlat
dec
mov
cwtl
repz
js
push
outsl
mov
xorl
mov
ficoml
inc
subb
push
out
and
adc
lock
cmp
mov
aas
mov
mov
mov
jl
xor
addb
jge
xor
and
loop
mov
popa
add
inc
add
bound
int
jle
insl
xor
aad
fdivr
pop
sub
and
adc
popf
mov
aad
lcall
push
dec
pop
mov
stos
insb
xlat
jg
mov
dec
jno
mov
es
mov
gs
and
jnp
fisubrs
inc
ret
ret
mov
or
gs
adc
cmp
mov
mov
adc
adc
ss
inc
xor
mov
push
mov
into
sub
aam
out
dec
push
imul
jae
adc
mov
pop
pop
pop
arpl
ds
in
or
inc
mov
rcll
jo
xor
stos
inc
ret
sub
and
repz
ficomps
push
mov
sbbb
jg
in
rcrl
loop
lahf
xorb
add
in
jg
sarl
jbe
ss
jbe
nop
out
cmp
mov
stos
cmpsl
or
xor
pop
sub
pop
cmp
das
lahf
and
and
jno
push
inc
scas
push
pop
divb
dec
test
movsl
daa
add
and
scas
sti
adcb
xor
xchg
pushf
test
add
in
popa
test
pusha
dec
lock
push
lret
push
pop
fisttpl
mov
gs
mov
gs
fcomps
mov
mov
dec
push
sbb
or
push
fiadds
or
xor
jl
jp
xor
rclb
dec
icebp
jo
cltd
push
aam
movsl
xor
lahf
inc
or
jnp
mov
je
aam
push
cmpl
out
mov
mov
xor
mov
mov
imul
lods
push
ljmp
pop
or
add
or
jb
ljmp
fcmovb
popf
jnp
popa
dec
gs
inc
out
xlat
mov
push
push
sub
and
add
out
push
mov
leave
test
add
pop
cmp
rclb
adc
imul
mov
sti
popl
pop
bound
clc
lret
std
pushf
push
ret
fcomp
js
inc
adc
lahf
pushf
fldl
popa
jnp
hlt
icebp
int3
sub
sarb
add
out
stos
loopne
shlb
inc
or
push
sub
jge
mov
cmp
jmp
lods
call
fstl
arpl
clc
mov
xor
and
add
mov
cmp
add
loope
adc
mov
dec
mov
adc
push
ss
cld
dec
mov
xor
xor
mov
lea
inc
subb
pusha
cld
imul
orl
and
imul
and
fnstcw
les
pop
mov
ret
push
sub
lock
jcxz
adc
pusha
pushl
mov
sahf
pop
pop
hlt
aas
or
mov
shlb
es
jae
cmpsl
fistpll
test
icebp
int
jbe
mov
mov
fstpt
rolb
fimuls
rorl
dec
test
out
xor
mov
movsl
push
mov
xorb
dec
xchg
repz
fsts
sub
mov
pusha
mov
test
push
in
rcr
out
dec
mov
adc
cmc
sbb
ror
enter
push
mov
in
popf
push
test
pop
fs
test
dec
add
adc
dec
sub
pop
xchg
fs
cmp
add
movl
out
mov
bound
cmp
stc
xchg
cmp
sub
pop
lret
fs
std
fucomi
inc
inc
jg
test
fnsave
ficomps
pusha
mov
adc
repz
sbb
out
lods
adc
cmp
cmp
dec
push
add
scas
shrb
jnp
dec
mov
loop
out
mov
dec
pop
pop
mov
shrb
jle
shrl
mov
iret
xchg
jns
pop
dec
out
and
in
cmp
fildl
mov
push
sbb
sbb
lock
pusha
adc
pop
test
addr16
scas
xor
push
sub
dec
in
sahf
mov
jns
mov
xchg
mov
stc
aas
lea
push
popa
leave
or
fwait
int
scas
add
add
sub
mov
mov
adc
cmpsb
mov
jecxz
mulb
rolb
incl
dec
dec
stos
bound
sbb
dec
cmp
inc
dec
jecxz
sbb
mov
cs
cmpsl
mov
push
vhaddpd
rolb
mov
fldl
lock
leave
dec
cmc
dec
loope
aas
sub
mov
mov
jmp
pop
shl
fs
iret
xlat
or
lret
jmp
lock
jmp
scas
and
or
fwait
movsl
stos
aam
lods
add
dec
mov
pop
loop
cmc
in
cmp
pop
or
cmp
shrl
cmc
and
movsb
vmread
pop
pushf
les
clc
mov
add
jno
push
mov
pop
out
movsb
stos
push
shlb
sbb
mov
movsl
lock
cmpsb
pushf
dec
mov
xor
cs
lods
divb
fwait
sub
fdivr
fstpt
shll
aaa
sub
mov
inc
mov
int
dec
nop
dec
fstpt
mov
in
fcmovnu
mov
xchg
fwait
mov
cmp
mov
sub
outsb
adc
dec
hlt
add
cmp
cmpsl
sbb
jmp
cmpsl
pop
lods
mov
xchg
mov
repnz
mov
pop
repnz
fwait
in
jl
ret
js
push
sub
push
nop
es
test
test
insb
call
lea
iret
push
inc
neg
add
repnz
and
ja
cltd
sarl
mov
mov
lret
push
les
test
test
shl
mov
and
aam
imul
xor
scas
cmp
ds
sub
dec
push
cmp
inc
aaa
loope
mov
ja
fdivl
outsb
leave
push
es
xor
lds
or
orb
pop
das
mov
push
in
or
xor
dec
sbb
repnz
mov
jbe
mov
push
rol
jno
aam
mov
push
fcmovne
xchg
mov
cmp
pop
cmc
mov
imul
cmp
jecxz
mov
sbb
lahf
jae
in
inc
and
add
ljmp
repz
es
iret
mov
xchg
xchg
insb
jl
dec
fsubr
fwait
jae
jno
movsl
stos
inc
push
push
jbe
aas
xor
data16
jmp
sbb
movsb
jmp
or
mov
xchg
les
jnp
mov
es
xchg
mov
adc
lea
in
rcrl
pop
inc
stos
scas
daa
inc
ljmp
in
push
dec
or
pusha
push
out
cmp
inc
outsl
xor
mov
lcall
fists
mov
mov
mov
cmp
icebp
dec
lea
mov
mov
movsl
iret
scas
mov
movsb
add
mov
mov
mov
cs
mov
sti
mov
loop
sbb
fsubrl
fwait
lods
sahf
fmull
dec
daa
je
inc
inc
jb
lcall
fcoml
aam
jecxz
aad
add
mov
mov
xor
cmpsb
jno
mov
ljmp
push
jb
les
dec
cmp
cmp
cmc
sti
xchg
movsb
mov
addr16
sbbb
leave
stos
inc
iret
mov
out
in
stc
push
inc
dec
rcll
in
pop
xor
adc
ret
fmull
icebp
mov
xchg
imul
scas
sti
sbb
mov
cmpsb
bound
cld
dec
mov
xchg
xchg
lea
jg
mov
loopne
pop
xchg
mov
dec
in
sub
insb
mov
pop
xor
dec
out
push
cwtl
sub
push
imul
iret
inc
mov
int
jns
add
pop
je
pop
mov
fmuls
adc
mov
mov
fwait
xchg
adc
popf
sar
xchg
out
lock
inc
jecxz
les
cmp
decl
pop
and
xchg
cs
pushf
xchg
pop
dec
into
adc
in
inc
outsl
std
push
xor
jge
jg
ss
loope
push
nop
pusha
mov
in
decl
dec
lret
ljmp
mov
mov
loopne
mov
int
xchg
sub
insb
mov
sarl
mov
inc
daa
scas
pop
and
bound
lcall
cmpb
add
stc
push
mov
add
jo
gs
int3
cmp
cmp
loope
in
imul
out
loopne
ljmp
mov
ljmp
mov
adc
mov
outsb
pushf
and
jmp
rclb
icebp
daa
shll
aaa
push
test
inc
jae
lret
cmp
mov
xchg
ja
xchg
cld
movsl
push
xor
aas
pop
shl
and
mov
hlt
mov
scas
add
shl
repnz
pop
mov
and
shrb
fisubl
fnsave
cmp
push
shll
jmp
sub
cltd
push
inc
jmp
pop
push
aas
adc
sub
sub
ljmp
xor
sti
fnsave
jmp
jnp
jae
inc
dec
dec
dec
xchg
sbb
test
loope
adc
pop
inc
pop
arpl
rol
pusha
or
je
push
push
pushf
mov
test
mov
jle
mov
nop
and
inc
lret
andl
popf
mov
xorl
mov
sbb
pop
jp
jle
sbb
sub
jo
cmc
mov
cmc
add
out
push
movsb
jmp
je
es
insb
subl
dec
scas
pop
sahf
lahf
pop
mov
sub
cmp
rorl
scas
fildl
pop
inc
dec
movsl
sub
jne
sbb
push
xor
push
imul
push
cmpsb
pop
jo
clc
cmp
ss
sar
scas
ret
sub
or
mov
les
cmp
inc
icebp
mov
sbbl
xchg
mov
cmp
jg
incl
movsl
mov
movsl
scas
std
and
mov
xor
adc
xor
jl
imul
pop
mov
cmpl
add
popf
dec
faddp
sbb
jbe
ljmp
or
sbb
lcall
inc
insb
test
in
es
les
iret
popf
sbb
fs
ds
fisttpl
inc
orb
jg
and
int3
and
stc
dec
lods
jne
mov
int3
jbe
mov
sbb
mov
sbb
xchg
fs
cmp
stc
add
outsb
adc
scas
insb
or
testb
scas
mov
popa
push
test
cli
xchg
pop
push
dec
and
dec
mov
or
pop
push
std
mov
push
jae
rcrl
dec
stc
sbb
or
loopne
in
pop
jecxz
mov
sbb
mov
dec
rol
xor
jmp
pop
mov
fwait
or
xchg
and
in
dec
scas
xor
fiaddl
pop
insb
mov
loop
je
out
push
fimuls
lods
ficoms
mov
aaa
icebp
les
in
je
lahf
icebp
mov
inc
push
mov
push
jbe
in
dec
bound
mov
nop
and
fnstenv
and
push
sbbb
sahf
adc
sub
adc
lods
inc
in
notl
mov
clc
addl
cld
mov
pop
mov
jge
jl
scas
je
ljmp
dec
fwait
pop
insb
jns
push
inc
rorl
mov
lea
mov
mov
inc
jae
stos
xchg
cvttps2pi
cmp
sbb
out
sub
sub
jmp
mov
mov
aaa
movsl
test
movsb
hlt
fcomi
adc
cmp
sti
adc
fnsave
cmp
int3
sbb
pop
shr
jl
inc
mov
jecxz
adc
cmp
int3
cmp
pop
inc
jae
inc
push
adcb
xor
xor
fnsave
mov
jge
mov
mov
cwtl
mov
testb
dec
test
push
stos
pop
sbbb
sub
jl
fdivr
xor
sub
aad
addl
int
mov
adc
stos
cld
insb
jle
sub
mov
aad
pop
call
into
push
rorb
jne
or
push
int3
fwait
lea
push
sub
jnp
adcl
pop
fstpt
mov
ffreep
cmc
jmp
ret
lds
dec
mov
push
fucompp
aaa
jl
sbb
jl
push
orl
jne
addr16
in
mov
sub
adc
aas
pop
imul
or
jecxz
cwtl
xchg
stos
cmpsl
stc
xrelease
cltd
test
outsl
loope
ds
cmp
sub
jnp
and
loope
sahf
in
pop
popf
call
fisubl
push
loope
dec
jns
aam
push
repz
fs
pusha
add
jg
add
sti
ljmp
aad
mov
clc
xchg
mov
pop
repz
add
sub
xor
push
aam
jmp
pusha
push
cwtl
cld
pop
div
dec
push
int3
rorb
jno
popf
int3
in
cmp
jg
aas
arpl
mov
push
mov
mov
mov
movsl
jns
xchg
in
mov
fmuls
test
add
inc
mov
fstpl
fwait
mov
sarb
pop
jmp
mov
pusha
stos
xchg
icebp
fisttpl
test
push
movsl
imul
cmp
push
jo
mov
fs
rolb
xchg
and
mov
gs
or
leave
push
cmp
xchg
mov
sahf
pop
push
ficoms
shr
outsb
or
inc
pop
addb
and
adc
jne
shrb
int3
dec
push
push
maxps
pusha
inc
inc
test
or
or
pop
mov
mov
mov
rorl
in
push
sub
out
push
pusha
loopne
jg
sbb
idivl
fnsave
fs
sar
cmp
orl
jo
negl
out
subb
sbb
icebp
mov
sub
fldt
xchg
or
inc
jno
ja
movsb
es
cli
mov
jnp
fsubrs
sub
push
dec
and
xor
movsl
inc
pop
pop
aas
cli
push
sub
pop
mov
test
divps
xchg
pop
sbb
jnp
fs
jbe
mov
int3
mov
data16
lret
popf
adc
scas
xchg
sbb
sarb
adc
cmp
jg
ja
inc
stos
pop
in
mov
sub
jno
frstor
sti
cmp
insl
mov
mov
sbb
sbb
push
dec
cmp
xchg
sub
imul
loope
sti
icebp
xchg
std
addr16
mov
xlat
adc
xor
jg
cmpsb
insb
es
std
mov
or
push
arpl
ja
fcoml
pop
out
shll
cmp
mov
mov
mov
xorl
out
and
cmp
dec
mov
lock
rorl
push
repz
jge
cmp
inc
cmp
sub
add
push
inc
pop
or
jge
iret
inc
les
and
mov
xchg
xchg
or
push
outsb
jle
jg
dec
sbb
lcall
jmp
add
or
add
jbe
jae
out
adc
in
scas
pop
mov
jg
ja
sbb
movsb
jne
rcrl
adc
mov
adc
mov
outsl
insb
cmpsb
flds
inc
mov
mov
pop
mov
into
out
adc
arpl
mov
pop
mov
sahf
fidivrl
sbbl
hlt
fmull
out
mov
arpl
cs
call
add
or
fwait
sbb
std
pop
mov
push
pop
jmp
pop
data16
xchg
adc
mov
or
xchg
jne
mov
adcb
rolb
xor
in
or
xchg
dec
mov
ficompl
adc
cmp
mulb
gs
xor
dec
lret
orl
ficomps
sti
inc
cmp
stos
int3
push
push
mov
repz
loope
and
int
stc
pop
push
adc
push
and
push
sti
xchg
dec
clc
cmp
xor
pop
inc
and
sub
and
pushaw
mov
test
cmpb
in
stos
dec
push
mov
imul
jmp
insb
shlb
mov
inc
push
insb
jns
jnp
sub
lret
aas
xchg
jg
std
iret
cmpsl
dec
mov
xchg
pop
ja
das
int3
xchg
dec
jbe
cmp
adc
xchg
jbe
xchg
stos
cmp
mov
add
mov
push
adc
ficoml
and
mov
cmp
jg
orb
mov
test
fldt
mov
mov
xor
inc
lock
leave
mov
ret
mov
pop
fidivrl
gs
xchg
into
call
dec
icebp
mov
out
ret
or
out
adc
inc
inc
call
mov
jno
dec
push
cld
jg
pop
pop
jg
push
jnp
dec
dec
xchg
pusha
mov
xchg
and
xchg
sbb
sub
mov
add
pop
xchg
and
outsl
adc
add
arpl
daa
fwait
testl
push
adc
xor
jns
push
mov
jl
cmpsb
rcrl
icebp
push
nop
scas
jle
lods
mov
imul
insb
shl
fmul
fcoml
add
or
lods
js
lcall
or
call
jp
push
out
inc
mov
cmp
cwtl
fwait
push
inc
mov
decl
out
sti
fiaddl
testl
jno
js
mov
dec
add
push
dec
in
sahf
inc
ljmp
and
clc
adc
pop
stc
push
subb
out
xchg
mov
test
sbb
or
push
add
mov
das
dec
cld
sub
dec
dec
sbb
inc
mov
or
roll
push
inc
fsub
imul
int
inc
bnd
inc
mov
lock
xchg
jo
clc
testb
adc
dec
dec
push
add
pop
mov
fmulp
add
loopne
xchg
cmpsl
icebp
push
scas
mov
mov
mov
pop
aam
lret
mov
insl
lods
mov
enter
jmp
dec
pop
fwait
push
je
jb
mov
int3
jne
jno
jle
cli
fiadds
jns
ljmp
jle
mov
mov
bound
jecxz
push
inc
cmpsl
push
sub
and
jns
stos
iret
stc
jecxz
or
cwtd
je
pop
mov
mov
test
insb
out
lods
out
add
pop
inc
dec
lcall
mov
cltd
sti
in
fidivl
in
outsb
adc
mov
mov
or
ret
lods
ret
notl
sti
fidivrl
int3
push
je
or
push
cmpsl
or
adc
scas
jno
jns
loopne
push
fcoml
outsb
repz
dec
cmpsl
dec
or
hlt
and
and
bound
xchg
pusha
stos
sub
pop
stc
pop
mov
jl
xor
xor
dec
fdivp
cmp
lods
add
loop
enter
sbb
nop
cwtl
dec
sti
aam
xchg
dec
loopne
bnd
sbb
mov
fcom
push
push
mov
pushf
ss
insl
icebp
repz
cmp
cmp
mov
jge
push
in
cltd
lret
ljmp
push
push
clc
push
fldcw
fnstsw
mov
lcall
lret
cmp
lret
popf
jp
aam
xchg
int3
movsl
jl
shrl
ss
cmc
mov
or
ret
scas
dec
sti
fs
iret
mov
mov
in
mov
adc
addl
aas
push
xchg
sti
xor
push
cmp
jecxz
pavgb
ficoms
mov
rep
mov
adc
dec
xchg
sahf
stos
dec
into
jnp
jge
inc
int3
vsqrtss
fisubs
fcompl
jbe
cs
push
dec
inc
and
clc
inc
inc
aas
pop
loopne
add
int3
and
lock
das
cmp
mov
xchg
inc
rcrl
inc
cs
cld
jmp
and
icebp
or
and
jle
adc
push
pop
inc
in
aas
cmc
std
fwait
jmp
cmovge
in
mov
adc
cmp
ss
adc
sbb
repnz
les
es
mov
movsl
and
mov
dec
adc
scas
jne
dec
and
fisubrl
mov
xor
adcl
popf
int
hlt
xor
xchg
ja
notb
out
cmc
cmp
inc
or
sub
rol
in
pop
or
ljmp
jl
cmp
or
push
fnstcw
lcall
out
xor
shll
push
jmp
mov
stos
add
js
jbe
cmp
pmulhw
das
dec
jo
ret
sbb
pop
cmpsb
dec
sub
inc
fdivl
cmp
aaa
pop
mov
dec
arpl
fisubrs
cmpl
mov
ljmp
clc
dec
adc
scas
inc
or
pop
pop
mov
gs
lea
shl
insb
mov
pop
and
pop
cmp
jp
into
mov
in
or
scas
sbb
push
xchg
xchg
jns
test
pushf
dec
mov
repnz
push
out
loope
and
jo
cmc
call
mov
xchg
popf
incb
das
add
dec
rolb
push
hlt
jno
sub
lcall
dec
jb
mov
mov
fidivrs
sbb
pop
inc
sbb
sub
cmp
lret
mov
mov
cmp
sub
or
adc
jae
sub
and
dec
sbb
cmp
lahf
xchg
fstl
cmp
jg
pop
imul
test
outsb
sbb
and
push
repz
ret
push
dec
add
and
xor
push
jae
sbb
push
push
pop
inc
dec
sbb
xchg
in
pop
push
fwait
cs
rorl
inc
dec
adc
pop
ja
jo
mov
xor
add
les
adc
or
addr16
sub
xor
jle
movsb
cmp
dec
jg
lods
movsb
xchg
imul
loope
or
in
jno
dec
adc
sbb
pop
cwtl
cli
aad
sbb
pop
xlat
inc
sahf
int
and
pop
push
cmovg
fildl
adc
and
ffree
lock
mov
mov
mov
je
pop
mov
push
ret
imul
sub
inc
dec
inc
mov
fistl
dec
pop
xchg
push
fmulp
rolb
rcll
jl
sarb
xor
and
push
lods
adc
mov
push
stos
daa
test
mov
add
cltd
xor
call
mov
sub
aam
sti
imul
add
or
cltd
cmpsb
sbb
mov
sbb
push
mov
hlt
mov
xchg
das
or
frstor
lock
mov
insb
mov
scas
xchg
cltd
mov
dec
add
mov
int
incb
sub
dec
decl
push
repz
jl
xchg
jnp
outsb
and
push
xor
gs
frstor
add
inc
int3
lea
dec
pop
aas
adc
dec
cmp
arpl
lcall
je
stos
in
jle
mov
je
sub
cld
ja
inc
or
pop
das
test
arpl
fidivl
dec
in
sub
fmull
mov
sub
dec
push
aam
and
pop
xchg
jecxz
iret
pop
arpl
push
fimuls
jae
or
mov
mov
fmul
mov
mov
ret
jmp
mov
pusha
push
and
sti
cmp
xchg
int3
cmp
imulb
inc
fildl
repz
sbb
sbb
ret
sbbb
in
pop
and
popl
mov
lret
les
jae
mov
push
cmp
std
mov
dec
pusha
or
or
ficompl
out
or
out
jno
cmc
pmaxub
mov
ja
jo
and
mov
cmp
mov
sahf
push
out
xchg
lret
push
sub
roll
setns
cmp
hlt
leave
insb
in
mov
gs
cs
pop
test
das
or
je
jo
int
sti
loope
aam
push
pop
inc
mov
mov
sbb
mov
lods
adc
xor
jno
inc
jmp
mov
popf
cmp
pop
lret
iret
insb
pusha
hlt
mov
pop
mov
mov
andb
mov
rol
jb
push
cmpsb
mov
cmp
ficomps
xchg
ficompl
fwait
test
mov
pop
xor
lret
pop
mov
push
dec
and
jo
std
fsubrl
je
xor
jmp
insl
mov
fwait
mov
dec
sbb
mov
sbb
dec
xchg
jl
sbb
mov
out
pop
ja
add
push
imul
and
sub
inc
aam
mov
es
pop
adc
shlb
loopne
cs
sub
xor
js
mov
mov
mov
call
addb
and
sbb
sbb
lahf
fdivrl
mov
stos
addl
sbb
lods
inc
clc
lods
cmc
pop
push
rolb
stc
inc
xor
js
pop
sub
dec
mov
add
rorl
mov
repz
pop
xor
pushf
push
test
push
fldcw
mov
push
dec
into
mov
jbe
push
fwait
enter
es
faddl
mov
pop
inc
add
push
jnp
in
ja
hlt
mov
dec
and
ds
popa
mov
jb
push
je
stos
adc
into
xor
push
mov
push
subl
push
sub
cmc
mov
add
push
mov
push
or
or
repz
hlt
xchg
inc
int
lret
cmpsb
jae
loope
dec
inc
stc
scas
add
ror
movsl
std
cmp
sub
push
push
lcall
jmp
sbb
push
call
inc
push
push
imul
sub
xchg
out
mov
cmc
hlt
jno
clc
push
repz
xor
or
jno
cmp
sahf
cmp
sub
rorb
adc
mov
leave
adcb
into
out
fwait
in
fsub
mov
xchg
mov
dec
repz
adcl
sbb
dec
js
or
dec
out
int3
pop
pop
push
ret
xor
mov
in
sub
sub
iret
sub
adc
loopne
ljmp
pushf
mov
dec
cmp
add
hlt
dec
push
mov
push
je
cmp
sub
push
dec
rorb
push
pop
pop
mov
loope
xchg
aas
cs
iret
or
popa
loop
and
out
push
mov
or
mov
hlt
dec
inc
incb
cmpsb
cmpsb
sub
mov
lds
hlt
adc
and
mov
fistps
test
push
int3
rolb
shll
or
jo
stos
js
mov
inc
cwtl
mov
jg
cmp
mov
pop
inc
mov
jecxz
mov
idiv
cmp
sub
iret
les
jns
les
push
push
dec
fwait
xor
mov
add
aam
xor
mov
dec
pop
cmpsl
test
fnsetpm(287
push
loop
imul
int3
fwait
xlat
jnp
jno
int3
and
sub
mov
jg
add
aaa
orb
cmc
iret
or
dec
push
mov
xor
aas
dec
sbb
pop
jae
sbb
cltd
pop
xchg
mov
and
vmovups
mov
push
dec
sti
jmp
in
int3
lret
movsl
push
shl
push
or
loop
xor
cmp
push
xchg
pop
jl
in
sahf
stos
pop
mov
dec
cmp
movsl
or
mov
add
or
lods
pop
sub
xchg
sub
add
insl
pop
jge
cmp
mov
xchg
aam
mov
pop
sbb
or
pop
pop
loopne
je
std
mov
sbb
inc
dec
mov
dec
adc
xchg
jg
scas
adc
mov
movsb
test
in
inc
mov
jae
jne
lcall
mov
insl
jno
push
sbb
cmp
cmp
int
xor
cmp
mov
mov
ffree
mov
cmp
stc
jbe
int
or
cmpsb
xchg
loopne
jo
fcmovnu
mov
xor
into
pop
pop
cmpb
lret
mov
aam
inc
fcomi
js
pop
iret
mov
jg
fdiv
sub
push
push
mov
out
cmpsb
decb
jno
movsb
mov
mov
cmp
dec
lahf
jecxz
push
push
cmp
mov
shll
ja
test
cmpsl
push
mov
lock
mov
jmp
stos
inc
jecxz
addr16
mov
lds
add
jg
dec
or
loope
fildl
out
aam
stos
xor
ja
or
push
pop
jne
lcall
push
sar
push
cltd
mov
jmp
push
movsb
pop
stos
push
or
jb
dec
hlt
out
loope
mov
xor
ljmp
fnstcw
ja
sbb
cmp
mov
sub
inc
dec
pop
and
aaa
out
xchg
jecxz
popa
rorl
popf
lahf
insl
mov
mov
stos
add
std
mov
leave
pop
adc
fidivrl
dec
ja
js
xor
sub
sarb
icebp
stos
js
insb
jmp
incl
lret
cmp
push
mov
or
repz
loope
jae
push
lods
aam
jbe
dec
shrb
cmovo
ja
rcll
nop
outsl
cmpb
xchg
push
movsl
out
sbbl
dec
jl
in
ret
enter
int
repz
cmp
stc
ja
int
rorl
rclb
int3
outsb
push
cmp
sarl
dec
test
pop
imulb
sub
sbb
or
cmp
cs
loop
imul
sub
out
add
aaa
mov
fstps
out
push
mov
pop
stos
bnd
lcall
xor
arpl
xchg
ds
jecxz
mov
jns
jl
inc
imul
push
lret
testl
mov
stos
mov
pushf
test
inc
je
mov
movsb
mov
push
mov
mov
sbb
clc
push
out
mov
sub
add
push
mov
sbb
and
jecxz
aad
pop
push
xchg
fidivl
inc
es
call
inc
cwtl
shll
pop
je
ret
into
mov
jge
xchg
dec
popa
repz
ret
subl
mov
cltd
lahf
cmp
mov
jnp
xchg
aas
int
dec
sub
test
push
out
insb
loope
test
rcll
or
mov
inc
scas
aas
inc
clc
arpl
aad
pop
testl
sub
popf
imul
mov
mov
pop
mov
push
mov
and
aad
add
xor
push
jo
adc
jmp
into
in
fimull
into
stos
pop
xor
lahf
adc
je
sub
mov
mov
cld
xchg
fwait
lods
jnp
idivl
dec
cmp
mov
pusha
bound
mov
jl
pop
ret
mov
loope
pushl
xchg
ss
inc
cltd
and
in
push
or
mov
cmpsl
mov
jmp
ja
out
test
mov
adc
pop
lods
pop
pop
in
inc
int
movsl
les
inc
push
adc
mov
push
fidivl
inc
out
pushl
jl
jg
xchg
and
cmp
aam
lret
add
fmul
mov
sahf
mov
stos
push
add
adc
and
push
dec
add
jp
mov
mov
pop
jl
lret
addr16
sub
push
jmp
jbe
adc
ret
xor
mov
shl
iret
xchg
and
inc
jb
add
pop
mov
hlt
inc
inc
popf
pop
mov
mov
movsb
rcll
cmp
ret
movsb
push
subb
adc
fcoms
jnp
cmpsl
jnp
xor
jg
cs
pop
inc
dec
push
ret
loopne
cmc
mov
mov
dec
and
movsb
daa
pop
inc
cld
mov
js
pop
push
lea
and
popf
mov
xor
or
loopne
jecxz
fisttpll
repz
add
mov
cwtl
movsb
mov
sbb
lret
stos
inc
rol
loopne
pop
mov
out
leave
ret
pop
pop
loopne
loop
push
adc
jmp
cmpsl
mov
pop
ds
scas
int
cmp
scas
mov
cli
mov
jg
mov
inc
out
mov
pop
xor
mov
cmp
mov
cmpsl
in
mov
and
iret
jl
repz
lock
and
hlt
nop
int
aaa
loopne
ljmp
imul
out
and
lret
outsl
adc
sbb
inc
pusha
aad
or
fs
or
insb
pushf
ret
dec
sub
call
mov
pop
jb
pop
scas
jnp
xchg
sahf
fs
mov
xchg
std
add
cmc
in
int3
push
or
mov
mov
inc
cmp
test
ficoml
stc
dec
adc
cmp
or
mov
mov
data16
aad
mov
fyl2x
out
adc
stos
cs
pop
std
mov
daa
es
je
rcrl
cmp
stos
xchg
and
popf
pushf
shr
stos
jbe
dec
jl
xor
arpl
inc
filds
jg
mov
fisttpl
sbb
test
sub
mov
sub
les
ds
dec
and
stc
clc
das
cmp
aam
lret
sarl
inc
or
xor
and
mov
sbb
pop
out
dec
loopne
jo
dec
mov
add
mov
add
mov
daa
movsb
dec
dec
or
push
in
out
fimuls
hlt
mov
lret
jo
add
fildll
cmp
jns
or
or
movsl
es
lret
fisubrs
cmp
inc
dec
push
test
stos
mov
sahf
add
daa
add
insb
imulb
mov
mov
cmc
imul
push
mov
mov
scas
adc
lds
fmull
hlt
negb
cltd
notl
or
ja
mov
mov
test
sub
add
and
decb
inc
xor
mov
sbb
cmp
mov
iret
insl
add
cmp
mov
adc
into
arpl
fistl
mov
nop
es
rcrl
xor
adc
lods
ds
out
std
xchg
push
xorb
in
loopne
mov
mov
inc
mov
cltd
adc
cwtl
and
inc
cmpsl
ljmp
cmp
mov
xchg
mov
pop
jmp
std
mov
adc
pop
cwtl
jns
ss
stc
imul
andl
sbb
lret
ja
bound
flds
shlb
loop
aaa
push
in
lods
in
pop
adc
std
dec
and
mov
mov
movsb
insb
out
fidivrl
lret
xor
and
pop
mov
adc
mov
add
repz
xor
fdivrl
mov
cmp
push
iret
jo
mov
jnp
pop
fmul
loope
test
stos
sahf
cmp
enter
pusha
push
repz
jo
pop
fisttpl
iret
jl
shr
nop
or
lret
out
cli
push
lahf
pop
sbb
test
movsb
subb
mov
mov
jg
cmp
mov
mov
xor
or
mov
jle
add
xor
mov
aaa
out
inc
and
clc
imul
push
aas
push
out
push
dec
sub
cmp
mov
sbb
ja
out
mov
out
or
mov
mov
stc
dec
and
cld
into
outsl
scas
aas
testl
xor
push
sub
out
js
sbb
imul
pop
in
inc
dec
pop
das
jl
sub
sbb
ja
jp
add
mov
mov
xchg
adc
jae
cmc
or
jnp
mov
imul
std
mov
mov
jle
std
add
imul
dec
pop
xchg
out
inc
add
fists
dec
aaa
cmp
movsb
int
jge
mov
test
xchg
push
les
ret
xorb
pop
outsl
iret
jmp
add
cmp
push
dec
ret
push
repnz
mov
sbb
cltd
mov
mov
cmp
cmp
aad
js
ja
pop
push
jge
jns
addr16
dec
movsl
dec
push
sbb
insb
je
dec
clc
femms
int
jmp
jnp
aad
lock
mov
push
insb
cmp
cmpsl
jnp
mov
std
jl
mov
mov
xchg
mov
repz
add
pop
mov
add
je
push
push
mov
daa
dec
pop
sahf
arpl
sti
fcomi
cwtl
gs
xchg
push
mov
fwait
xor
aas
lret
pop
inc
mov
or
push
push
sub
push
jmp
dec
testb
lahf
fidivs
movsb
pop
stos
sti
mov
cmp
cmp
add
scas
add
pushf
jne
or
bound
cmp
daa
mov
std
stc
add
gs
add
roll
sub
or
jl
pushf
inc
dec
ja
fucomp
pusha
push
pop
jle
in
out
jl
xchg
outsb
pop
in
imul
out
cld
dec
sub
fstpt
cmp
je
je
sahf
sub
cmp
and
dec
pusha
icebp
out
xlat
fiaddl
into
rcll
das
cmpsb
xchg
stc
cs
add
mov
stc
and
adc
and
and
xor
pop
push
std
ljmp
loopne
mov
into
jp
loopne
jnp
lds
aaa
jl
sub
fistpll
fistps
mov
or
fcmovu
nop
enter
cld
jbe
lods
sbb
lds
psubsb
mov
sbb
das
dec
in
pop
pop
std
add
sti
or
data16
cwtl
int
dec
or
repz
mov
dec
ljmp
mov
inc
inc
out
loopne
sti
lcall
pop
cld
mov
or
iret
push
or
fcmovne
xorb
lret
test
and
insl
push
add
test
stos
outsb
aad
daa
fcmovb
insl
mov
scas
xor
pop
dec
cmpsb
inc
jle
push
out
sbb
pop
or
or
pop
jbe
mov
mov
test
push
push
pop
and
push
test
cmp
jno
in
repnz
jmp
adc
arpl
pop
dec
push
jae
test
loope
jle
pop
je
sbb
xor
sub
push
or
pushl
jl
dec
and
jb
pop
adc
jge
mov
push
mov
lahf
push
insl
mov
scas
sbb
sub
stc
aad
dec
dec
incb
lea
xchg
addr16
cld
dec
cwtl
inc
out
push
lods
into
push
mov
cli
pop
mov
push
cmovge
movsl
adc
jae
or
pop
nop
jno
movsl
dec
cwtl
cmpsl
mov
or
into
or
jb
mov
xor
jns
fwait
lock
out
rcr
adc
pop
adcl
and
test
popa
sub
and
pop
cmp
jp
ss
adc
inc
or
clc
dec
lcall
jo
or
mov
scas
in
sbb
and
mov
and
mov
in
xchg
cmp
mov
andl
mov
stc
cltd
jp
mov
jmp
mov
ss
fdivr
mov
pop
sbb
push
mov
clc
and
out
pop
pusha
pop
rcrb
sarb
hlt
dec
and
in
imul
and
add
shlb
ja
fidivrl
fstpt
jns
jmp
mov
sbb
cmpsb
jmp
jns
mov
rorb
cmp
out
sub
enter
sub
mov
mov
mov
jns
mov
popf
push
push
mov
and
jnp
pop
pop
xchg
out
adc
adc
push
mov
cs
jg
add
or
jbe
inc
sub
ret
xlat
shrb
fwait
mov
leave
inc
enter
notl
ret
or
cs
inc
mov
rcll
imul
scas
jl
mov
cltd
mov
or
adcb
sub
lds
pop
mov
repz
bound
icebp
cmp
mov
ret
das
mov
lret
mov
push
sub
inc
int
inc
in
es
adc
xchg
inc
jg
sbb
inc
add
and
cmp
aam
cltd
xchg
push
dec
push
pop
popa
add
cltd
sub
aad
cmp
push
sti
les
fisubrl
pushf
jg
push
mov
jmp
lock
mov
adc
push
fstl
test
xchg
cmc
inc
or
test
dec
pushl
cmc
lock
or
sbb
xchg
test
add
mov
push
push
lret
mov
stc
loopne
pop
jle
sub
aaa
sub
aaa
imul
shll
stc
and
xor
mov
lcall
inc
ss
xchg
mov
cmp
mov
into
outsb
jecxz
or
jnp
push
sbb
decb
adc
jmp
push
xchg
push
xchg
je
sti
mov
cmc
test
enter
dec
rcrl
jmp
push
xchg
inc
pusha
mov
dec
push
popf
or
cmp
jnp
movsl
jno
lret
dec
adc
aam
stc
push
jns
fsub
ljmp
hlt
or
and
push
clc
cld
or
dec
leave
cmp
mov
test
fwait
xchg
std
inc
sub
movsb
leave
incl
sbb
dec
imul
sbb
testl
cmpsb
jge
sbbl
pop
jl
inc
popa
sbb
jg
mov
jmp
ret
clc
and
xlat
test
loope
dec
mov
mov
mov
aaa
mov
js
sbb
fs
and
arpl
and
mov
in
clc
mov
imul
xor
cmp
and
inc
daa
sub
adc
ret
fistps
es
cmpsl
mov
jno
cmp
pop
into
pop
pop
lock
mov
mov
movsl
lea
lret
outsb
cmp
ljmp
push
pop
sbb
adc
mov
dec
cmp
scas
pop
jg,pt
data16
dec
sbb
dec
sbb
or
mov
lret
dec
ds
sub
fcom
cmp
insl
addr16
mov
or
dec
cli
push
std
daa
enter
push
aam
inc
dec
xor
loop
rol
inc
shrb
xchg
iret
fwait
scas
fwait
hlt
jl
ret
stos
pop
stc
mov
imul
push
push
repnz
ficompl
sti
sahf
mov
decl
pop
lea
shrb
mov
andb
pop
mov
subl
pop
gs
push
and
lods
out
cmc
sub
add
test
test
inc
jb
aas
insl
mov
mov
sbb
adc
mov
inc
shl
scas
leave
lods
push
ss
icebp
xor
int
cmpsb
push
repz
dec
push
mov
out
and
xlat
incl
out
ja
mov
or
mov
fwait
jg
icebp
mov
loopne
iret
lcall
in
rcrl
jo
or
push
mov
nop
pop
or
ds
in
pusha
data16
jle
aas
or
lret
jmp
and
sbb
pop
sub
sub
jge
lahf
inc
pushf
repnz
cmp
filds
mov
jg
adc
mov
pop
push
test
jne
cld
xchg
jne
out
pop
mov
lahf
jl
push
cltd
mov
or
or
or
jnp
das
dec
pop
push
fwait
cmc
adc
cli
pop
sub
jp
in
mov
pop
push
mov
adc
neg
xchg
lods
insl
lret
call
jns
lret
rolb
jmp
add
es
xor
dec
mov
mov
imul
dec
mov
jns
jns
lcall
xor
inc
clc
xchg
imul
jns
lahf
adc
mov
sub
dec
or
push
dec
mov
lret
pop
mov
pause
adc
arpl
xchg
pop
push
rolb
ss
cmpsb
pop
pop
jmp
xchg
mov
clc
dec
inc
push
scas
dec
gs
mov
xchg
pop
xchg
sub
add
mov
sti
out
xor
xor
mov
sbb
inc
push
pop
or
mov
mov
fadds
roll
test
fwait
incb
testb
dec
lret
je
inc
lcall
cmp
add
xchg
out
jl
mov
mov
dec
xchg
push
cld
jg
lods
outsl
cld
inc
add
jp
xchg
jb
test
dec
ret
test
notl
xchg
mov
add
loop
lods
dec
mov
data16
or
std
ljmp
pop
push
sbb
jb
mov
jmp
xor
mov
dec
int
sbb
loope
xor
pop
cmpsb
xchg
fiaddl
stos
or
xchg
shrb
bnd
ljmp
xor
adc
jnp
mov
movb
fldenv
mov
or
ret
into
sar
nop
rorl
dec
add
nop
sub
dec
enter
mov
fisttpl
divb
fisubs
imul
daa
dec
stos
xor
fwait
xchg
fnstsw
cmp
hlt
mov
pop
out
and
std
sbb
gs
out
and
mov
test
mov
jg
aaa
adc
or
and
cltd
mov
nop
dec
xchg
stos
add
fstps
or
pop
add
test
pushf
mov
cmp
mov
ja
out
inc
outsb
adc
mov
mov
push
dec
fisubl
xchg
inc
sbb
out
rol
bound
je
adc
push
and
and
movsl
cltd
mov
outsl
ja
xor
xchg
lea
jnp
ljmp
pusha
inc
aas
push
ds
lret
cltd
dec
arpl
loop
dec
mov
mov
sbb
cmpb
cmp
mov
test
mov
pusha
push
fcmovnbe
shlb
and
mov
xor
or
jl
out
mov
push
iret
sbb
jnp
pop
pop
mov
xor
pop
out
aad
xchg
fdivl
aaa
aas
iret
xor
loopne
mov
unpckhps
add
int3
iret
icebp
int3
and
loope
pop
sub
icebp
aad
dec
aam
adc
mov
and
mov
cmp
roll
mul
bound
mov
xchg
iret
dec
add
scas
loopne
in
vphadduwq
mov
fadds
icebp
and
pushf
cmp
sbb
mov
aam
pop
loope
pushf
pop
mov
or
mov
sub
pop
or
fwait
mov
pop
mov
xchg
push
adc
sahf
jmp
ret
cwtl
push
or
addr16
or
push
cld
xor
icebp
cmp
push
sti
out
dec
scas
add
clc
sbb
mov
mov
push
or
or
mov
xor
addr16
inc
pop
ljmp
das
add
arpl
jo
pop
out
out
ljmp
mov
mov
xor
add
jbe
into
mov
push
mov
xor
sub
aam
pop
lods
sbb
mov
jnp
in
sahf
dec
push
out
movsb
push
into
jecxz
fiadds
fists
out
or
mov
ret
test
dec
jns
xorl
mov
fcmovb
push
std
dec
pop
dec
cmp
push
add
dec
or
jmp
icebp
push
push
sub
jnp
in
stc
mov
ss
jno
cld
cs
sub
sub
pop
shl
add
pop
dec
dec
icebp
inc
in
pop
pop
popf
xchg
cmp
add
mov
push
inc
dec
xorl
mov
and
adc
pop
ja
cmp
push
jbe
push
cmpsl
or
pop
xor
add
mov
add
ljmp
fbld
dec
sub
call
andb
cmp
lods
dec
rcrl
mov
lcall
nop
inc
jmp
lcall
mov
clc
stos
cmp
add
xlat
cmpsl
or
pop
icebp
mov
shl
dec
mov
rcl
into
loop
into
adc
adc
pusha
pop
mov
add
ljmp
jl
ret
mov
pushl
pop
subl
mov
iret
mov
mov
insb
mov
mov
dec
aas
call
xor
dec
imul
jbe
push
xor
imul
adc
ljmp
xorb
fimull
xor
lahf
out
add
aad
mov
sbb
mov
pop
inc
adc
mov
or
mov
mov
mov
xchg
mov
jecxz
sbb
sbb
pop
xor
dec
mov
mov
adc
inc
fs
mov
lret
inc
inc
mov
iret
cltd
sti
adc
pop
push
mov
out
shr
loopne
mov
xchg
cmp
icebp
or
mov
or
in
mov
jle
inc
clc
add
xor
shrl
lret
dec
cmp
data16
jb
ret
bound
shlb
or
add
xchg
jno
mov
sbb
xchg
fwait
es
andb
jne
jecxz
push
push
ret
movl
xchg
cmc
insb
and
ret
notl
sti
dec
es
scas
leave
das
dec
pop
frstor
rcrl
mov
popa
mov
cltd
add
aam
xchg
out
daa
inc
mov
mov
mov
jmp
inc
imul
add
jmp
out
add
in
and
mov
push
sbb
or
jp
mov
mov
mov
jmp
adc
or
or
cwtl
inc
mov
ror
sub
jle
outsl
aas
pop
aad
pop
dec
inc
xchg
mov
mov
mov
xor
cmp
cmc
add
inc
add
xchg
push
or
inc
push
cmpsb
jnp
push
cmc
ljmpw
cmp
test
inc
jae
push
insb
scas
rorl
xchg
xchg
lds
cmp
sub
lahf
rolb
mov
insb
xor
lods
loopne
shlb
neg
adc
sbb
les
mov
mov
cmp
frstor
lods
fs
fs
cltd
jnp
jg
cmp
dec
dec
pop
and
or
icebp
pop
and
nop
xor
inc
inc
test
or
mov
jg
pop
jmp
arpl
cmc
popf
rcll
adc
mov
mov
dec
orb
negl
sbb
inc
push
insl
idivl
xor
movsl
or
int3
dec
dec
cmc
fstl
pusha
lret
jmp
cwtl
jb
mov
and
repz
jl
mov
aam
notl
dec
popa
test
xor
cmp
jae
ds
andl
fisubl
sub
js
pop
jl
inc
neg
add
test
and
les
and
je
sbbl
add
dec
je
or
push
imul
dec
pop
mov
mov
enter
adc
hlt
cmp
dec
and
mov
inc
iret
add
mov
out
bound
mov
mov
sbb
cs
or
push
inc
ljmp
test
js
outsl
lods
push
sbb
sub
pop
aas
mov
fmull
mov
mov
addr16
sub
xor
mov
push
cmpsl
mov
pusha
fcmovnb
es
in
cmp
pop
mov
pop
add
insb
call
adc
imul
sbb
mov
in
sbb
aam
sub
sbb
cmp
dec
clc
ss
fucomi
out
mov
and
loopne
inc
loop
rolb
mov
and
jne
outsb
pop
push
ficoml
nop
push
or
stc
add
pushf
cmp
stc
sub
aas
fcomip
movsl
lods
or
pop
cmp
pop
scas
sub
repz
mov
xor
push
in
xor
inc
push
jecxz
fistps
fwait
outsl
adc
jno
and
dec
in
cwtl
iret
push
lcall
ret
pop
push
stos
repnz
mov
pushf
mov
sub
or
stc
push
mulb
mov
xor
insb
lods
dec
adc
lahf
je
lods
pushf
ret
rclb
inc
dec
fists
out
xchg
xor
fwait
jp
lret
stc
dec
testb
pop
cmp
jl
xchg
adc
inc
xor
xor
sbb
inc
scas
adc
aad
cli
shl
arpl
jns
and
dec
mov
enter
or
mov
inc
js
jg
fisubrs
mull
sub
mov
lds
mov
outsl
data16
mov
pop
add
add
inc
mov
insl
mov
lock
sbb
aad
sub
or
and
pandn
jno
ret
test
push
push
jbe
add
orl
pushf
dec
pop
movsl
cld
leave
movsb
sub
or
push
outsb
jg
sub
cmpsb
xchg
xorb
cmp
test
adc
push
mov
and
jmp
fisubl
inc
movsb
mov
jno
mov
ja
sbb
adc
push
sbbb
cmp
jg
shlb
cltd
sbb
out
pop
cmpsb
mov
data16
mov
popf
sbb
jl
inc
lods
int3
aam
rclb
add
push
push
mov
sub
pusha
mov
pop
adc
mov
jno
cmpsb
add
dec
mov
add
pop
cmp
jecxz
fwait
xor
scas
push
mov
pop
das
push
in
adc
std
lods
add
mov
stos
cmp
jl
in
fsub
ficoml
inc
movsb
lods
dec
imul
jmp
mov
jno
lret
fbstp
or
mov
add
iret
stos
icebp
push
cmp
test
iret
xor
inc
pop
mov
pop
mov
fisttpll
xorl
mov
dec
je
and
inc
pusha
scas
leave
sub
cwtl
cwtl
jo
loope
inc
dec
andb
mov
iret
xor
jnp
dec
pop
repnz
dec
ret
inc
scas
fidivrs
mov
jmp
cmpsl
mov
scas
xor
lahf
xor
cmp
mov
cmp
rcrl
sbb
popf
jae
mov
pop
mov
cli
out
sahf
pushf
xchg
jne
xlat
je
jecxz
pop
ficoml
cmpsl
ja
and
cmpsb
push
cmp
mov
int3
arpl
hlt
push
lret
ja
mov
jb
dec
ja
phsubw
dec
mov
push
aam
jmp
fcom
lret
dec
fs
add
orb
test
movsb
mov
stc
xchg
imul
sahf
pop
nop
or
imul
jle
pop
jp
movsl
aam
pop
add
mov
paddsb
inc
shll
repz
cld
dec
dec
in
sub
xor
sbb
dec
aam
inc
bound
mov
sub
in
popf
add
mov
or
sar
pushf
inc
jecxz
mov
rclb
fwait
fs
in
out
cmp
rcll
sub
les
cmpl
or
fs
adc
cmp
outsb
adc
cld
cltd
mov
fwait
jno
jnp
fs
pop
jle
inc
adc
cmp
mov
cmp
inc
xor
mov
rdpmc
cmp
dec
repz
push
clc
add
and
sbb
dec
stos
add
adc
stos
jle
scas
sub
mov
clc
into
test
sub
mov
dec
xchg
mov
mov
mov
cmp
lcall
fisubs
mov
cmpsl
xor
sar
mov
push
je
inc
in
mov
and
push
jp
ret
sub
js
sub
aas
cmpsb
neg
xchg
aam
fcmovbe
xor
xchg
les
lahf
pop
sbb
filds
xor
fstps
out
out
xchg
mov
dec
pop
mov
pop
mov
lret
ja
and
stc
sbb
jl
mov
and
push
dec
xchg
sti
rcll
loope
inc
nop
ret
ja
pusha
enter
inc
in
xor
ja
jbe
push
cs
jne
pop
jns
mov
xchg
sub
dec
shll
sbb
out
mov
aam
out
mov
std
push
inc
and
test
lods
cmc
push
std
test
mov
push
jbe
xor
sub
nop
fnstenv
adc
jmp
pop
mov
xchg
mov
jecxz
movsl
push
test
loop
aas
mov
mov
or
call
iret
inc
cmp
shrb
mov
dec
mov
pop
clc
and
lds
movsb
out
je
shl
inc
bound
jecxz
outsb
hlt
cmp
jl
cs
push
in
and
push
jno
cmp
out
imul
repnz
and
add
mov
mulb
cmp
cmpsb
cmp
push
aas
sti
test
inc
mov
adcb
sub
jl
dec
sbb
movsb
jle
jmp
scas
lret
add
pop
inc
cmc
pop
push
mov
mov
cmp
out
mov
mov
mov
fcompl
jo
into
pop
jl
stc
pop
cld
mov
dec
sub
jecxz
sub
lahf
xor
or
repz
loopne
mov
jb
fwait
mov
das
xchg
sti
icebp
fisubrl
insl
fildll
pop
ret
inc
sub
lock
lods
call
inc
outsl
test
movsb
sub
adc
mov
int
loope
movl
dec
out
mov
shr
sub
xchg
lahf
mov
sub
cmp
nop
push
mov
inc
icebp
jnp
outsb
cmp
pop
in
jbe
and
push
insl
mov
mov
cmp
ret
push
cmp
sbb
and
sub
sbb
jle
push
cltd
addb
or
loope
aam
sarb
mov
push
xchg
inc
shlb
lret
out
fbstp
stc
inc
fdivrp
pop
mov
int3
push
pop
decb
push
mov
jge
fldt
movl
aam
and
push
jb
negb
jno
shlb
push
mov
lcall
lock
inc
pop
pusha
ljmp
ss
ja
int3
mov
outsl
jae
and
insb
xor
sub
shr
mov
mov
xchg
cmp
sub
ss
call
cwtl
mov
sub
inc
sub
push
mov
or
sti
hlt
sub
xchg
mov
xor
jmp
int3
xor
dec
jnp
dec
xchg
sub
pop
fs
push
lea
repnz
psrlq
sub
scas
dec
mov
gs
cmp
cmc
out
test
out
mov
sbb
push
cmp
mov
gs
xorl
cmpsl
imul
or
es
clc
mov
jg
mov
jl
cld
dec
mov
push
insl
fs
scas
jbe
js
push
mov
dec
cld
cwtl
pop
add
shll
pop
mov
lahf
pop
sahf
pop
xchg
and
sbbb
dec
aaa
dec
jae
mov
ss
addr16
mov
lds
pop
add
hlt
inc
cli
mov
orb
repz
pop
inc
push
arpl
out
sahf
add
pop
mov
xor
jl
xchg
mov
int3
inc
arpl
fiaddl
mov
jae
repnz
call
ljmp
jne
mov
iret
pusha
sub
repz
out
mov
shl
ja
push
loop
dec
xchg
cmp
fbld
fstpt
nop
cmp
dec
mov
jns
fcoml
int
call
mov
imul
sub
inc
push
idivl
lods
pop
das
outsb
sti
lods
sbb
addb
xchg
jnp
inc
out
mov
cmp
sub
jne
push
pop
sub
fldt
mov
cmp
jg
mov
jns
add
cld
push
push
adc
fisttpl
or
mov
dec
test
jge
in
mov
aad
adc
popa
aam
dec
mov
adc
or
dec
ret
ficomps
mov
add
and
test
mov
push
inc
mov
add
negl
jl
mov
std
pop
js
inc
cmpsl
mov
xor
lds
fs
pusha
inc
mov
jo
mov
sub
and
or
dec
jns
or
mov
push
jge
daa
stos
add
push
lods
pop
push
or
add
push
sub
and
aam
cs
mov
iretw
jecxz
cld
icebp
mov
inc
push
jno
mov
and
jge
mov
jg
cmpsl
dec
xor
popf
dec
inc
mov
jecxz
dec
jo
pushf
adc
shlb
jno
and
loopne
clc
movsb
xor
cmpsl
jbe
mov
xor
adc
cmp
push
imul
int
pop
mov
lret
sub
call
dec
or
mov
mov
lods
dec
insb
mov
sarb
mov
into
add
xchg
daa
shrl
sub
pusha
ret
out
adc
out
jle
add
stc
mov
insl
push
out
mov
or
pop
jecxz
push
lret
jmp
xrelease
add
std
push
xor
mov
out
fwait
dec
mov
or
rcrb
div
fwait
rcrb
mov
cmp
sub
xchg
jge
lahf
jnp
jge
mov
mov
mov
repz
mov
adc
push
push
add
dec
xor
jle
push
jmp
adc
std
pop
leave
rorl
and
xor
movsl
sub
decl
shll
jae
xor
inc
iret
ss
cmc
push
push
mov
in
jl
mov
insl
sbb
xlat
xor
jmp
push
cld
sub
loopne
dec
loope
je
pusha
mov
dec
pop
out
test
adc
enter
and
icebp
fadd
sbb
mov
inc
loopne
push
mov
shll
mov
test
cmpl
repz
mov
fmull
push
pop
push
pop
xor
jo
sbb
adc
add
cmp
add
cmp
mov
dec
or
push
cmc
ficomps
sbb
jle
push
neg
xchg
data16
notb
faddl
ja
icebp
iret
outsl
xchg
cwtl
cmp
imul
repz
mov
jecxz
out
and
testb
inc
jmp
fs
lahf
xchg
sub
mov
xchg
notb
xchg
cmp
mov
pop
cmp
push
scas
rcl
sbb
add
mov
xchg
enter
mov
sbb
shll
insb
inc
imul
cmp
xchg
mov
sub
cmpsl
rorl
inc
add
push
or
popa
fwait
lret
lods
test
fcomps
movsb
test
mov
push
ds
aam
sbb
test
add
sar
data16
mov
jg
sub
add
jne
mov
iret
xchg
in
enter
rclb
xor
inc
test
cmp
test
sahf
cmovl
repz
cltd
pop
mov
call
mov
cld
pop
insb
fsub
dec
nop
jno
data16
pop
pop
dec
add
push
mov
int3
add
and
rcll
dec
sbb
jecxz
add
cmp
dec
lret
mov
inc
mov
add
lea
stos
jnp
aam
add
adc
fstl
push
mov
les
dec
fidivl
mov
decb
jae
lret
push
test
imul
or
aaa
jb
jns
mov
dec
adc
cld
mov
cltd
fdivr
ficompl
add
out
inc
push
jno
dec
jecxz
or
mov
cmp
cmc
cmp
nop
adc
sbb
bound
jecxz
fnstenv
adc
shl
push
test
inc
nop
stc
inc
pop
add
mov
mov
pop
ss
lahf
iret
andb
pop
jmp
push
fwait
imul
call
adc
jns
cmp
iret
nop
dec
xchg
mov
push
mov
fs
xchg
mov
pushf
pop
lds
stos
or
movsb
sub
popa
push
xchg
stos
adc
fistpl
mov
popf
addr16
pop
push
pop
mov
ja
ljmp
dec
push
stos
ret
xchg
mov
jg
js
imul
lret
movsl
dec
cs
shl
sbb
or
pop
lock
gs
aaa
aam
xchg
clc
in
dec
sahf
ljmp
sbb
cltd
adcb
popf
cmp
push
jb
fwait
fwait
std
dec
xor
adc
jae
out
mov
jl
inc
and
mov
dec
imul
aas
cltd
pop
lcall
inc
cmp
jbe
sar
pop
xchg
roll
shl
or
js
mov
mov
or
mov
mov
aaa
xor
in
mov
je
test
mov
lcall
pop
sbb
ret
push
sahf
mov
add
pop
clc
movsl
jno
pop
jno
xchg
xchg
shlb
sbb
xchg
pop
fisttpl
ljmp
jmp
pop
or
jno
pop
cld
pop
push
out
pushf
fs
or
fnsave
fsubrp
push
fstl
xchg
or
adc
cmp
dec
mov
in
or
out
cli
cs
fdivr
outsl
jnp
cmc
jb
or
mov
mov
inc
movl
xchg
ret
mov
pop
fwait
pop
sahf
dec
movsb
test
addl
adc
pop
pop
cmp
inc
cmp
out
or
shll
arpl
sbb
lret
mulb
or
adc
dec
lods
xor
or
test
inc
ds
repz
mov
das
or
sbb
pop
pop
xchg
cld
mov
ja
lds
aas
jnp
fsubr
pushf
push
pusha
lock
inc
inc
sbb
movsl
js
ret
inc
idivb
fistpll
jl
push
mov
lahf
jnp
les
cmp
mov
pop
sbb
mov
sub
sti
mov
and
mov
dec
ret
fistl
add
iret
fstps
jbe
fisttpl
cmpb
scas
sahf
sub
mov
in
add
subb
mov
mov
xor
add
cmp
sub
xor
adcb
out
inc
loope
les
mov
mov
std
xchg
movl
mov
sub
and
mov
push
cltd
xor
mov
adc
call
pushf
popa
sbb
jb
mov
or
mov
mov
pushf
aas
mov
cltd
jns
inc
sahf
jo
xor
incb
dec
push
lock
idivl
out
push
or
enter
les
push
jmp
cmpb
push
jl
jl
out
and
lret
test
cmpsb
and
mov
jae
push
cli
push
loopne
adc
sub
testl
jae
stos
jge
enter
mov
inc
pop
mov
jle
adc
dec
xchg
je
sub
pop
mov
mov
add
mov
xchg
mov
icebp
sbb
cmc
mull
imul
cmp
std
bound
add
rcl
cmp
rcll
inc
or
test
cmpl
cmpxchg
outsl
sbb
xchg
cmp
cwtl
push
mov
popf
push
les
dec
movsl
in
xchg
testb
cmpl
mov
dec
xlat
and
mov
or
out
xor
mov
sub
push
add
mov
in
decb
jb
add
pushf
movsl
sub
and
sti
sub
mov
stos
xor
int
cld
mov
andb
push
mov
adc
push
adc
add
xor
cli
cld
pop
push
sub
es
dec
push
in
push
jl
aaa
test
mov
arpl
cmp
or
fimuls
mov
ss
das
mov
sti
jns
push
cmpsb
shlb
adc
inc
test
adc
lds
pop
hlt
or
xchg
fs
ret
and
cltd
xchg
dec
cwtl
imul
rol
insl
das
arpl
sub
sahf
cmp
xchg
xor
cmp
lret
pop
enter
sahf
jle
dec
out
pop
jb
cmpsb
xor
hlt
cmpsb
cmp
sbb
xchg
loopne
shl
adc
mov
sbb
icebp
movsb
and
push
mov
jp
repz
in
sub
cltd
and
push
xchg
inc
jl
in
or
movsl
jnp
jp
cmc
push
dec
scas
loopne
movsb
out
and
mov
ficompl
ficoms
pop
adc
fsubrl
sub
sub
fwait
icebp
pop
pop
fstpt
sub
push
push
cmp
and
sti
out
jg
push
mov
mov
jnp
mov
dec
hlt
push
fiaddl
out
es
push
shrb
pop
rcll
cmp
pop
fs
cmp
push
inc
mov
fisttpl
pop
in
aad
dec
into
insb
xor
fdivrl
cs
push
mov
testl
not
in
jge
outsb
jo
mov
fimuls
dec
fwait
push
out
ds
sub
aam
loop
out
in
loope
sbb
adcb
dec
rclb
arpl
xchg
sbb
jl
imul
dec
push
mov
mov
es
test
push
dec
arpl
xchg
fs
jne
mov
xchg
jmp
stos
dec
insb
pop
shl
dec
addr16
ret
int3
jg
add
add
orl
mov
jne
cmp
mov
push
arpl
data16
and
sbb
mov
lea
in
jp
push
cmp
loopne
std
xchg
js
pop
adc
fldenv
xchg
jle
inc
mov
pusha
hlt
dec
cmp
out
data16
adc
and
push
sub
frstor
mov
pop
mov
sub
mov
imul
cmpsl
fsubr
rolb
scas
jg
mov
xor
pop
jno
fwait
adc
rorb
outsb
fildl
adc
nop
pushf
adc
mov
rcll
lret
ror
mov
mov
mov
shrb
rcr
push
in
push
out
inc
or
adc
test
mov
adc
jl
out
xor
sub
fiaddl
mov
push
pop
cwtl
pop
add
aam
mov
adc
rol
std
incb
jge
push
sub
xorl
mov
pop
push
mov
adc
enter
decb
pop
xor
lahf
fwait
insb
xchg
mov
and
adc
mov
in
orw
ja
mov
jmp
add
jne
xchg
sbb
std
arpl
dec
push
imull
pop
fcmove
xchg
push
popf
jnp
ret
mov
push
pusha
mov
inc
hlt
mov
mov
stos
sbb
mov
mov
inc
cmp
loopne
rolb
and
push
test
xor
jg
movb
or
inc
jbe
rcrb
pop
push
xor
cltd
pop
scas
push
outsb
imul
es
jp
outsb
mov
inc
push
ljmp
imul
imul
jp
dec
jae
in
dec
div
stos
insb
mov
pusha
sub
or
inc
or
jecxz
xchg
sbb
add
and
js
adc
mov
test
pop
pop
addr16
hlt
or
data16
clc
sbb
mov
cmp
push
mov
push
sub
sbb
cmc
das
sub
inc
jl
loope
mov
repnz
cwtl
xchg
push
mov
lock
test
cmpsb
loopne
cmp
enter
lods
inc
fidivl
xlat
mov
sti
test
dec
stc
shrb
dec
xchg
negb
xor
mul
mov
mov
jmp
loopne
test
push
sti
push
push
ljmp
loope
call
add
mov
test
add
stos
sbb
adc
in
stos
js
insl
mov
decl
add
sbb
rcll
jae
sub
jmp
testb
push
sbb
out
mov
div
xchg
mov
or
out
sbb
sbb
sbbb
xor
rcrl
outsl
jl
push
imul
shll
add
and
inc
test
dec
ja
add
test
and
or
pop
testl
xchg
aaa
pop
cwtl
popf
adc
lret
cwtl
mov
xchg
adc
mov
sub
dec
mov
gs
pushw
repz
xor
ja
es
pop
mov
dec
mul
cmp
jns
das
cli
jo
shll
in
and
pusha
test
inc
jb
inc
cmp
mov
test
insb
inc
dec
adc
sub
inc
xorb
xchg
xchg
sub
scas
cmp
jmp
jno
ret
adc
fldcw
scas
pop
mov
xor
into
jg
daa
mov
shll
and
nop
jmp
adc
jae
in
pop
sub
shrb
pop
jns
pop
add
jecxz
push
sub
or
inc
mov
lret
insb
mov
pusha
push
mov
insb
cmp
mov
cmpl
xor
lds
data16
stc
popa
push
cmpsb
test
and
jl
pop
push
or
add
push
testl
sti
ja
jnp
test
loope
mov
push
adc
ficoml
mov
out
inc
mov
jo
leave
pop
or
mov
inc
pop
je
pop
imul
mov
mov
or
aad
pop
cmp
sarb
mov
lea
aam
xchg
int
push
into
lret
push
in
mov
pop
les
in
dec
push
mov
cmp
xor
xorl
lea
adc
inc
cmp
sub
stos
add
lock
lcall
clc
shrb
push
in
in
cmp
out
and
dec
insb
std
call
mov
data16
jle
mov
inc
mov
dec
stos
xor
scas
cwtl
rcr
jnp
push
leave
lea
cmp
aam
cltd
cmp
je
pusha
sahf
inc
and
push
push
pop
mov
sbb
jno
repz
mov
out
mov
push
push
pop
cmp
sbb
ret
add
push
add
std
insl
xor
sub
adc
pop
in
xlat
ret
add
mov
and
cmp
test
inc
in
xchg
mov
lcall
sbb
loop
sbb
stos
movsb
jp
add
push
xor
adc
mov
ret
dec
jnp
jecxz
xor
mov
jge
push
fwait
mov
and
push
xor
push
mov
or
cli
add
push
cli
inc
adc
cmp
js
jb
loop
insl
inc
je
add
xlat
jns
fcoml
in
inc
sbb
nop
addr16
outsl
js
sub
fsubl
cmp
rolb
inc
pop
dec
push
sbb
mov
mov
sub
xor
out
repnz
js
shr
dec
test
outsl
mov
inc
xchg
mov
adc
jle
mov
push
cmp
mov
jns
dec
and
mov
pop
cs
js
test
xor
movd
push
and
mov
ds
pop
mov
jecxz
stos
mov
subl
fadd
dec
in
loope
mov
dec
and
call
mov
push
pushf
xchg
pop
inc
and
push
in
mov
pop
sub
or
pop
xchg
mov
pop
test
mov
push
or
inc
in
es
enter
jns
lods
push
xor
xchg
add
xchg
add
mov
cmpsb
cld
pop
push
clc
das
mov
scas
cmpsl
mull
jmp
lcall
dec
jmp
adc
cld
cmp
mov
in
fistpll
std
xlat
shll
fwait
jle
imul
push
insl
adc
fwait
jmp
fdivl
daa
idivl
call
inc
cwtl
jecxz
lea
and
lock
fimull
fs
mov
dec
cmpsl
into
hlt
mov
fwait
mov
fisttpl
xor
addl
or
mov
cld
jae
ret
mov
jp
pop
mov
adc
push
mov
inc
in
aad
cmp
repz
sub
divl
adc
std
sbb
jge
xchg
scas
adc
and
outsb
jns
pop
lods
xor
mov
jne
nop
ss
xchg
push
lahf
fwait
inc
decl
fcomip
xchg
and
push
lods
jnp
or
xor
test
test
xchg
gs
jae
push
pop
je
int3
loope
sub
test
mov
in
push
imul
or
sub
inc
jmp
mov
in
out
dec
xor
lret
nop
sub
pusha
xor
mov
jnp
add
dec
and
outsb
xchg
ljmp
jl
sub
and
in
out
dec
xchg
jle
jae
or
loope
xor
pop
add
scas
mov
fimull
std
sub
mov
jg
into
fildll
repnz
pushf
sbb
mov
mov
pop
mov
lock
cmp
leave
push
push
jns
je
fisubrl
or
xor
sub
push
cltd
and
pusha
pop
mov
mov
mov
cmp
mov
cltd
sub
pop
mov
or
add
jae
pop
frstor
mov
xor
add
adc
sub
mov
pop
cmp
repz
inc
mov
sub
lcall
dec
sub
mov
xor
push
test
or
aas
sbbl
gs
jp
and
sub
add
js
daa
sub
pop
cmp
das
dec
fstpt
test
or
push
xlat
ret
sbb
loopne
in
lock
test
das
mov
fimull
inc
xlat
push
and
arpl
xor
iret
mov
loopne
addb
cmpsl
js
sub
iret
sbbl
pop
mov
inc
mov
or
fs
mov
dec
lods
add
inc
fisubrs
inc
int3
fwait
pop
pusha
pop
mov
dec
stos
movsb
clc
pop
dec
rcrb
sub
insl
dec
sub
icebp
int3
mov
repz
pop
mov
or
lcall
mull
inc
mov
dec
cmp
lret
decl
mov
insb
ret
call
into
rcrl
ret
imul
rolb
ja
jp
mov
mov
inc
inc
mov
ret
add
mov
xor
daa
and
jge
dec
mov
push
pop
add
loope
test
fidivrl
mov
in
adc
sbb
xor
inc
out
add
pop
cmp
or
test
mov
std
sbb
loopne
mov
sbb
daa
jl
scas
adc
cld
adc
mov
pop
stos
aad
das
in
jns
lret
mov
cmp
jmp
xor
add
pusha
push
fisubrl
mov
loop
lea
aas
cmp
out
punpckldq
jl
outsb
shrb
adc
mov
mov
lds
test
dec
pop
iret
mov
add
adc
mov
imul
jno
mov
lods
ljmp
pushf
insl
jge
loopne
mov
inc
sbb
es
cmp
push
xor
test
pop
inc
mov
loopne
in
stos
sbb
fisttpl
pop
das
dec
xchg
push
sbb
dec
jbe
or
cmc
test
inc
add
jb
cmpsb
adc
clc
enter
fimull
hlt
jge
call
mov
adc
push
es
fimuls
jnp
in
push
push
lcall
sub
xor
fnsave
lods
arpl
clc
fs
movsb
mov
lahf
inc
or
jl
imul
lock
mov
insl
dec
adc
imul
mov
rcrl
imul
push
xor
popf
mov
pop
mov
mov
adc
xchg
dec
lcall
push
lcall
xor
jnp
das
jo
insl
dec
int
leave
xchg
or
addr16
lock
dec
js
lea
fdivs
repz
popa
fisttpll
aad
mov
dec
pop
dec
fstl
xor
es
and
mov
jo
das
leave
mov
push
sub
sub
lock
fwait
leave
imul
inc
dec
cmp
popa
data16
test
sar
loopne
mov
jno
test
push
add
mov
and
cs
pavgw
dec
outsl
fsubrl
loopne
jo
in
push
pop
imul
dec
pop
or
insb
xor
push
dec
xor
int3
roll
addb
jae
adcb
mov
lea
test
loope
imul
ds
adc
in
sub
mov
nop
or
jl
loope
negb
dec
das
xor
cmpsl
cmc
pop
imul
push
subb
sbb
or
out
cltd
add
inc
hlt
adcb
rorl
cmp
loope
jl
fimull
jbe
jnp
mov
movb
dec
dec
dec
mov
mov
xor
fwait
repnz
dec
ficompl
nop
loopne
outsl
sarl
xor
fmuls
jmp
imul
jns
push
pop
rcrb
rorb
xchg
push
adc
daa
loope
adc
pop
jno
ret
mov
lea
in
mov
or
int3
fld
addb
mov
lret
pop
pop
adcl
repnz
xchg
sbb
sbb
mov
in
mov
mov
push
mov
pop
mov
mov
mov
jne
inc
neg
pusha
xor
adc
sti
mov
sub
push
inc
cmc
adc
mov
in
jle
push
jne
ss
lods
aaa
inc
orb
pop
push
aad
shlb
dec
lods
mov
stc
cmp
stc
jmp
jns
push
adc
push
jb
jbe
inc
adc
out
test
add
inc
fisttpll
sbb
jl
dec
jbe
icebp
mov
xchg
mov
sbb
and
stc
or
or
jg
fbstp
sbbb
adc
dec
mov
insl
insb
movsl
inc
add
inc
testl
cld
xchg
push
xchg
cld
insl
or
pop
and
pop
pop
ljmp
push
mov
push
cmp
outsb
sarl
addl
xchg
xor
jne
mov
imul
push
dec
jmp
popa
xor
inc
adc
push
adc
or
lret
or
les
in
mov
push
sbbl
push
mov
and
in
int3
xchg
mov
js
dec
mov
push
fimuls
test
cltd
in
xchg
testl
mov
aam
into
adc
jae
inc
cmp
pop
mov
cmp
iret
lret
pushf
mov
pushf
push
es
lods
pop
jns
leave
mov
cmp
adc
mov
and
pop
inc
pop
out
cmp
fnstsw
insb
sub
scas
or
mov
cmpb
hlt
inc
push
xchg
pop
push
aam
lds
push
dec
imul
in
js
sub
jg
cmp
mov
inc
out
mov
shrb
sbb
sti
clc
dec
push
cs
inc
mov
movsl
lea
fnstenv
adc
adc
pop
inc
mov
mov
stc
cmpsl
and
imul
bound
sub
dec
xor
and
iret
cmp
test
sbb
aas
lret
stos
push
and
scas
cmpsb
mov
es
movsl
cwtl
xorb
je
das
imul
xorl
fsubr
test
outsb
mov
mov
arpl
add
push
dec
fidivl
test
pop
push
dec
inc
int
shlb
je
inc
inc
dec
in
push
lea
ljmp
sar
or
inc
push
xchg
cmc
inc
movl
adc
add
mov
pop
fsubr
fs
int
inc
leave
sbb
dec
mov
clc
dec
sbb
cmovb
or
loope
inc
adc
in
fbstp
xchg
andb
les
adc
je
sub
sbb
push
ja
jno
aad
pop
jnp
adc
and
inc
out
mov
lods
sbb
push
push
and
and
ss
aad
xchg
mov
rcr
data16
lret
out
mov
jmp
jno
mov
push
dec
and
ljmp
dec
sbb
out
in
cmc
xor
mov
push
and
pushf
push
pop
jno
inc
roll
out
sub
cwtl
xlat
mov
ja
add
hlt
hlt
push
cltd
lret
imul
pop
mov
pusha
push
mov
fwait
pop
loope
test
push
xor
push
fwait
xor
mov
pop
inc
push
sub
gs
out
mov
mov
mov
mov
ret
mov
pop
out
lcall
mov
out
add
pop
sub
mov
adc
mov
fs
mov
mov
lret
fstps
pop
add
into
in
mov
int3
movsl
fwait
jg
mov
stc
or
insb
sbb
mov
fs
push
ljmp
jae
push
outsb
ja
pop
inc
outsb
scas
ret
arpl
mov
aad
dec
pop
lret
outsl
push
cwtl
aam
cmp
mov
sbb
sub
mov
test
fcmove
push
pop
and
shrb
mov
mov
daa
mov
sbb
jnp
test
xchg
test
out
int3
dec
fs
mov
push
push
add
imull
inc
mov
push
in
sub
popf
repnz
mov
inc
add
add
dec
jae
jae
or
or
mov
and
jg
out
sti
fisttpl
mov
push
data16
mov
mov
sub
mov
jae
mov
fs
xor
arpl
mov
push
ljmp
sbb
push
cmpxchg
or
mov
sub
insl
jl
outsl
clc
push
jge
mov
push
sbb
xor
or
mov
inc
imul
inc
shll
test
fwait
subb
pop
fmull
sub
mull
xchg
lock
inc
icebp
movb
test
xchg
push
jl
popa
mov
nop
sbb
dec
dec
and
sub
pop
mov
push
mov
loopne
scas
int
jns
inc
mov
mov
lret
mov
andb
cmp
jb
std
or
mov
in
xchg
cltd
jl
push
or
cld
cmp
add
add
mov
out
jo
out
sub
and
mov
mov
and
xchg
mov
jecxz
push
mov
sbb
lds
out
lods
mov
push
loopne
ret
add
ret
inc
add
fldt
or
push
mov
imul
lret
pop
adc
mov
imul
and
or
ror
mov
push
mov
fisubl
mov
and
mov
xchg
sub
jns
cld
and
lds
push
or
das
mulb
dec
std
push
mov
fnstcw
add
clc
jno
movsb
adcb
jecxz
xchg
fcmove
inc
sti
fwait
jg
and
xchg
add
out
xchg
repz
pop
pusha
xchg
popa
and
adc
int
pop
push
cmpb
movsb
fbld
pop
fdivs
pop
pop
test
lcall
cmp
mov
sbb
dec
sub
addr16
in
cmp
mov
popf
ljmp
stos
mov
push
testl
push
cmp
mov
dec
xor
pusha
dec
outsb
xchg
fcmove
push
jle
ja
mov
jecxz
ljmp
pop
mov
mov
das
js
pop
pop
fmull
dec
ret
cmp
push
js
hlt
decb
xchg
rcrb
cmc
iret
inc
orl
ljmp
cmp
xchg
mov
sbb
cmp
int
jl
lods
mov
mov
in
dec
je
jg
fbld
outsl
mov
lds
sbb
mov
clc
dec
sub
mov
sbb
jp
push
scas
into
push
decl
sbb
push
mov
pop
sahf
test
flds
popl
add
pop
gs
int
les
and
stos
punpcklbw
mov
push
dec
sub
sbb
or
dec
push
ror
popa
es
push
pop
cmp
sub
jae
fsts
xchg
cmp
sub
pop
mov
mov
aas
push
icebp
mov
sub
push
fisttpll
xchg
fnsave
nop
pop
pusha
push
fsubrs
ja
xchg
or
adc
sub
xchg
mov
dec
int3
insb
jnp
stc
fisttps
and
dec
mov
int
loopne
jmp
xchg
addl
jg
cmpsb
out
shrb
stos
adc
sub
xor
pop
or
inc
pushf
sbb
popa
cmp
mov
dec
or
cmp
out
push
inc
inc
shll
nop
mov
mov
inc
inc
das
or
aad
pop
hlt
out
xor
jo
fiadds
inc
fists
cmc
xor
stc
jno
out
push
or
test
sub
fsub
mov
loope
cli
imul
and
adc
jae
cli
das
mov
or
pop
adc
mov
sbb
pop
cmp
xchg
clc
sub
lea
add
push
or
push
mov
or
ja
scas
add
ja
jl
cli
pop
mov
imul
push
sub
mov
test
dec
dec
jne
mov
mov
pop
popf
ret
pop
and
adcb
cltd
imul
dec
mov
inc
mov
jno
pop
idiv
lods
xor
es
fucomip
sub
mov
sbb
and
mov
sbb
dec
pop
in
cltd
push
ja
adc
adc
sbb
and
pop
sahf
or
pop
or
jmp
or
aas
aas
dec
or
sahf
xor
addr16
mov
pop
inc
jl
pop
movsb
call
fisttpl
jle
fs
cmp
outsl
hlt
push
icebp
loope
std
mov
pop
ficoml
dec
pushl
pop
scas
mov
daa
add
sbb
cmc
cwtl
mov
jne
xor
jo
pop
je
inc
cmp
fs
sti
hlt
push
inc
inc
mov
shl
mov
rcll
out
push
out
mov
and
fstl
mov
fnsave
or
xchg
jno
or
mov
fwait
push
call
inc
stos
jns
adc
stc
test
je
lahf
add
dec
fsts
outsl
int3
fsubrl
add
dec
std
dec
test
or
aam
jmp
mov
test
add
push
aam
in
iret
dec
hlt
scas
mov
out
cmp
cmp
push
adc
or
cli
dec
bound
sub
shl
outsb
push
dec
push
push
call
mov
mov
rclb
cs
fnstcw
xchg
aaa
call
adc
cld
sub
xchg
push
push
lods
stos
push
cmp
jb
fistl
sub
cld
enter
dec
adc
sub
add
test
xor
jl
sbb
dec
jne
imul
outsl
mov
or
xchg
and
inc
cld
cmp
push
push
fstpt
lret
hlt
inc
dec
or
cmc
pop
jl
imul
inc
xor
movsb
sub
arpl
enter
fsin
add
divl
into
les
xchg
fdiv
sti
out
push
lcall
test
sbb
and
jg
push
int
cmp
xchg
mov
fwait
lods
adc
adc
addr16
in
int3
andl
sti
xor
test
out
pop
fidivl
or
sbb
ljmp
jne
push
out
push
leave
mov
aam
gs
push
dec
mov
pushf
movsb
push
orb
pop
mov
jns
jo
jns
sub
cmp
mov
lret
das
mov
lods
xor
jg
cmpsb
aam
es
sahf
ljmp
outsl
lock
ret
inc
inc
cmpsb
bound
push
out
jb
dec
or
lods
xor
movsb
jg
incb
mov
movsl
add
inc
inc
dec
cmp
or
cmpsb
jne
enter
jns
mov
mov
pop
sbb
test
lcall
push
dec
call
movsl
dec
shll
mov
aas
out
inc
xor
iret
lods
adc
adc
cmp
jae
mov
loope
movsb
push
xchg
mov
and
dec
jns
pop
dec
cmp
int3
inc
push
mov
xchg
dec
jae
fwait
enter
jno
arpl
mov
pop
push
incl
xor
cwtl
pop
ficompl
mov
ret
cltd
dec
mov
sub
xor
stos
mov
push
out
jbe
sbb
nop
xor
lds
mov
lret
out
xlat
mov
jecxz
mov
into
xor
idivb
fisubrl
icebp
or
add
repz
iret
jl,pn
shrl
adc
pop
movsl
pop
jne
in
pop
mov
xor
and
into
outsl
mov
or
adc
imul
fdivp
lods
leave
mov
dec
mov
and
pop
je
shll
das
dec
add
sahf
fidivl
imul
int
and
cmpsl
push
sbb
dec
sbb
lret
idivl
or
pop
test
xor
test
mov
js
rol
icebp
fbstp
fidivrs
pop
shrb
andl
mov
in
pop
hlt
adc
test
cmpsb
in
insl
fisttps
or
decl
or
test
sub
or
ret
jo
mov
cmp
push
arpl
xor
fyl2xp1
imul
push
mov
test
jl
push
cmp
rorl
pop
hlt
popf
push
fcmove
push
cmp
fistps
rcll
pop
xor
add
push
lds
xor
int3
sbb
sbb
adc
mov
mov
ss
sub
fimuls
jae
or
addr16
pop
out
cmpsl
jp
nop
adc
inc
icebp
inc
and
cmp
inc
dec
out
inc
loopne
std
xor
cmp
mov
mov
pavgb
adc
call
or
add
xchg
inc
sbb
das
cmpsl
mov
sub
dec
lahf
mov
je
mov
sti
adcl
mov
test
aam
mov
fmulp
cmpsb
mov
js
and
movsl
cmpsl
xchg
test
lahf
fdivl
cs
loopne
out
xchg
sbb
int3
mov
ljmp
mov
pop
mov
cltd
enter
sub
cltd
fadd
push
sub
mov
adc
mov
dec
jp
xor
sti
pop
inc
outsb
out
mov
incb
daa
adc
jns
subl
aam
cmpb
jnp
sub
aas
jbe
clc
insb
inc
iret
cwtl
fmull
outsb
into
add
repnz
fwait
mov
out
sti
insb
mov
scas
in
mov
or
pop
arpl
jl
pusha
scas
sub
or
sbb
or
inc
push
push
clc
icebp
movsb
jp
nop
scas
lret
sti
divb
xor
dec
out
or
push
xchg
mov
add
dec
pop
aam
nop
sub
repz
pop
int
dec
push
inc
jne
arpl
and
xchg
fistps
inc
pushf
enter
xor
xor
adc
mov
stc
popa
inc
pop
jge
enter
sub
neg
fisttps
decb
add
scas
int3
sub
xchg
xlat
es
std
inc
hlt
xchg
sbb
pop
dec
mov
fisubrl
dec
imul
ja
arpl
lods
popf
cmp
push
dec
jae
test
dec
mov
stc
inc
data16
rcll
fs
call
inc
add
addr16
sub
sub
cmpsl
mov
xchg
in
jae
jl
pop
sbb
shrb
mov
jns
sbb
fcom
iret
pop
mov
add
inc
or
scas
adc
pop
mov
cmp
push
sub
test
in
add
std
sbb
ret
test
jnp
es
in
or
xlat
lds
dec
xchg
jae
or
lcall
dec
rcr
sub
iret
out
ret
xchg
adc
add
push
ds
pop
stos
xor
mov
or
dec
sahf
mov
xor
sub
jmp
xor
xchg
lret
dec
sahf
sub
adc
andl
xchg
movsb
inc
sub
popf
hlt
insb
jb
movsb
jl
dec
jl
ja
aaa
mov
push
mov
jbe
test
js
imull
jae
test
pop
stos
inc
repz
mov
fiaddl
jge
inc
mov
cmp
rcrl
cmp
xor
add
jge
les
ret
ljmp
addb
mov
cmc
mov
sub
out
jb
scas
or
sbb
dec
sub
jmp
int3
mov
cli
test
aam
les
iret
mov
inc
fwait
ljmp
pushf
jne
stc
lret
add
js,pn
int
adc
mov
xchg
cld
adc
sti
mov
les
aaa
mov
cmpsb
push
out
add
dec
out
sub
pop
dec
sub
test
lds
mov
push
or
mov
pop
or
js
pop
sti
mov
jae
cmpb
adc
jle
inc
push
insl
mov
les
xor
push
lcall
dec
fsubl
call
clc
je
and
cli
rorl
test
add
ror
pop
mov
jne
mov
test
ljmp
into
mov
inc
pop
ficompl
rorb
sub
xor
and
hlt
pop
sub
nop
lret
fstpt
pushf
xchg
fwait
push
mov
mov
inc
push
fwait
lock
dec
xor
mov
popa
jl
mov
jnp
xchg
dec
mov
inc
mov
add
mov
fists
std
cmp
cltd
cmp
mov
sub
inc
out
sub
es
or
mov
mov
jmp
jnp
lods
inc
pop
dec
in
jae
and
or
adc
adc
dec
xchg
imul
pop
out
popf
pop
sbb
loopne
in
mov
daa
xor
inc
cmc
ror
cmp
mov
pop
inc
push
mov
mov
push
fs
adc
pop
mov
jns
mov
inc
imul
outsb
xor
mov
cmc
pop
xor
lock
wrmsr
dec
jecxz
adc
arpl
fwait
rorl
ss
add
cli
or
dec
push
push
pop
or
cmp
cmpsb
xchg
leave
cltd
dec
mov
cwtl
loop
daa
adc
sub
rorl
sti
gs
dec
test
inc
stc
mov
jmp
and
es
xchg
jnp
or
adc
adc
xchg
pop
jb
das
push
and
std
outsb
scas
push
and
aam
mov
or
pop
adc
mov
add
cmovo
popf
lahf
push
pop
dec
in
js
movsb
addr16
xchg
les
or
xor
cltd
test
fiaddl
pop
cs
sbb
mov
out
adc
pop
adc
fwait
sbb
or
ljmp
jecxz
js
fildll
mov
subb
push
cmp
cmp
fwait
mov
fcomps
add
popf
idiv
enter
sbb
push
mov
mov
cmp
lret
sbb
and
sub
mov
xchg
sti
and
push
mov
shlb
cmp
es
dec
cmp
enter
sbb
pop
sbb
inc
pop
lret
jno
adc
cmp
out
ret
sub
cmp
xchg
ja
mov
xchg
jg
cld
sbb
mov
sub
fstp
lcall
push
mov
jl
cltd
fsubrs
fisubrs
mov
push
sub
xchg
and
inc
and
test
imul
inc
sbb
sub
lcall
jo
repz
cmp
xor
add
ficompl
mov
out
inc
mov
mov
sub
push
pop
in
or
jnp
test
mov
sbb
repnz
lds
jb
xchg
and
push
jbe
gs
sub
or
add
adc
das
mov
pop
ds
push
or
inc
inc
rcl
and
jo
movsb
xchg
ret
jmp
daa
adc
pop
sbb
gs
pop
fwait
mov
mov
inc
pop
dec
jl
rcr
jmp
cltd
ficompl
cli
and
les
jo
cmpsl
mov
movsb
mov
mov
jecxz
sahf
jle
push
and
pop
rol
or
cli
fdivl
push
adc
ficompl
fwait
xor
cmc
dec
sbb
into
fiadds
xor
stos
fs
and
inc
dec
dec
scas
mov
mov
jmp
lret
pop
mov
loop
ret
movsb
xchg
sub
int
jbe
mov
jb
insb
sub
lea
mov
cltd
fisttps
out
mov
fisubl
pop
fimuls
inc
mov
push
lods
hlt
dec
mov
stos
mov
enter
push
sbb
xchg
das
adc
mov
call
fdivrs
gs
or
sbb
pushf
or
int3
lock
mov
mov
testb
push
sarb
hlt
dec
cltd
outsl
neg
icebp
pop
mov
mov
dec
mov
xor
call
xchg
fxam
and
adc
push
es
mov
iret
pop
fs
xchg
rorl
push
imul
outsl
fsubl
repz
pushf
scas
addl
insl
pushf
mov
push
xor
jns
jl
or
loope
insb
push
rcl
rcll
or
loope
mov
fldcw
and
dec
into
aad
add
lret
int3
mov
sub
aam
mov
ss
int
dec
dec
cmp
jge
mov
dec
push
cmpsl
test
aaa
fnstenv
jo
ret
and
xchg
cmp
rcrl
adc
mov
call
test
push
jl
pop
fistpl
mov
adc
inc
cwtl
out
push
inc
push
sub
mov
jp
adc
sub
xchg
mov
inc
xor
dec
add
push
sbbb
inc
pusha
dec
iret
repz
dec
insb
jbe
in
xchg
jns
adc
js
push
push
ja
outsb
mov
lods
jb
push
cli
test
das
jl
sbb
push
and
xor
es
js
lcall
dec
dec
test
nop
push
mov
addr16
mov
arpl
lahf
push
int3
inc
hlt
pop
cmp
out
ss
mov
dec
insb
and
sbb
sahf
and
jmp
jmp
jae
fisttpl
pop
xor
roll
aad
shr
xchg
or
or
repnz
fisubrl
loope
sbb
outsl
push
out
ss
jp
loope
scas
cwtl
jb
push
push
mov
xchg
push
ss
fwait
and
push
xor
lods
mov
mov
dec
gs
ljmp
xor
fdiv
mov
ds
and
inc
pop
hlt
imul
ret
movsl
shlb
mov
push
lods
or
js
subl
mov
mov
adc
outsl
inc
mov
xchg
movsl
jle
jae
dec
stc
cmp
out
and
fs
leave
or
cmpsb
scas
dec
or
push
pop
in
push
push
xor
pop
jnp
and
jno
push
leave
sbb
mov
mov
add
mov
cmpsb
mov
pusha
mov
xchg
pop
std
enter
frstor
and
inc
ds
dec
fsub
sbb
adc
int3
sub
hlt
cmp
stc
cmp
lea
daa
or
mov
mov
stc
add
jecxz
push
jge
and
dec
cmpsb
cmc
mov
or
stos
cmp
mov
lret
dec
ja
and
ja
fldenv
dec
adc
add
push
cld
push
scas
jl
adc
out
std
jecxz
xor
insl
arpl
xor
es
mov
mov
stc
sbb
push
out
xchg
cmpsl
xor
and
or
nop
or
xchg
sub
test
mov
addb
xor
add
call
stc
stos
mul
es
pop
jnp
inc
popa
lea
mov
outsl
jae
push
lods
movsl
push
sahf
push
xor
dec
dec
cmp
outsl
lods
fiadds
push
sub
movsb
push
and
xor
adc
out
out
imul
stos
inc
jae
mov
mov
mov
cld
jge
iret
pushf
repz
mov
sub
xchg
in
xchg
lret
adc
test
cli
xchg
scas
or
inc
sub
mov
test
xchg
ret
inc
xchg
decb
sti
out
dec
jae
jmp
adc
add
scas
aam
push
push
movsl
shlb
int
iret
sbb
mov
ja
and
ja
jnp
es
loopne
es
cmc
insb
inc
sub
or
xor
jl
jmp
into
mov
pop
mov
cltd
in
add
mov
or
and
ljmp
dec
add
dec
hlt
pop
mov
mov
sbb
jge
push
fisttpl
mov
scas
pushf
cmp
out
int3
int3
push
lcall
js
jmp
in
test
cmp
std
mov
addl
jae
fwait
add
aam
and
sahf
pop
dec
test
xchg
jl
sbbl
das
fwait
std
insl
pop
fmulp
dec
lret
push
add
push
xchg
push
imul
add
jl
mov
mov
ja
cltd
mov
dec
push
lahf
test
pop
push
mov
push
jns
scas
loope
xor
xchg
mov
icebp
mov
jg
pop
es
in
jp
inc
pop
or
xchg
mov
mov
fs
outsl
jle
sbb
mov
push
dec
test
adc
cmp
fcomps
fmull
xor
mov
out
xlat
xor
dec
into
ljmp
jp
mov
rcl
rorl
lahf
lcall
shrl
mov
in
loopne
jne
fisttpl
in
shrl
and
testb
shll
testl
xor
stos
lcall
xchg
pop
jnp
dec
fsubl
or
mov
sub
or
jg
enter
pop
xchg
test
xor
jno
push
push
mov
push
sub
lcall
mov
add
jbe
or
fwait
std
imul
add
pusha
push
es
dec
cmp
lods
aaa
int
out
in
adc
pop
cmp
nop
mov
inc
loope
push
dec
sbb
cmpsl
mov
or
lea
out
xor
jge
ja
pop
push
icebp
mov
mov
or
lock
fstps
adc
push
ss
ficoml
mov
adc
rol
add
loopne
jno
xor
mov
mov
dec
pop
add
lret
cmc
jns
xchg
lahf
divl
lds
ss
jp
pop
jecxz
push
jl
shr
mov
movsb
and
int3
xchg
ja
xchg
movsb
into
test
adc
xchg
std
cmpsb
push
dec
xor
daa
sub
movsl
or
cmp
aaa
mov
sti
mov
popf
daa
pushf
mov
clc
mov
movsb
or
imul
pop
ja
fmull
andb
cmpb
mov
and
mov
xchg
das
push
nop
push
mov
lods
test
cmp
cmp
hlt
mov
add
mov
add
and
pop
mov
adc
sbbl
dec
sbb
pop
notb
and
xchg
loop
loope
or
mov
ja
push
cltd
shrl
dec
stc
pop
out
sub
jbe
roll
inc
out
js
cmp
inc
lahf
xor
mov
in
xlat
shrb
or
or
movb
shll
inc
js
push
out
out
aaa
cmpsb
jg
push
jns
dec
or
sahf
sub
push
ljmp
push
in
loope
mov
add
or
pop
mov
jne
aad
pusha
insb
sbb
and
dec
cmp
push
lahf
std
inc
inc
aas
mov
jg
push
out
mov
xor
mov
sub
aam
push
pop
shll
in
mov
add
push
loope
icebp
dec
ret
xor
pusha
push
mov
or
jne
jnp
jae
cmp
xor
fs
push
sbb
ret
cwtl
mov
mov
jae
push
out
or
push
jnp
std
popf
mov
mov
out
push
shrl
push
stc
push
adc
and
jmp
inc
cmp
mov
sub
fcomps
lock
pushf
leave
out
mov
mov
cltd
out
push
pop
adcb
sub
stos
xor
pop
dec
adc
cltd
movsl
int
add
mov
pop
mov
mov
test
ljmp
push
std
cmp
movsb
cmp
add
xchg
dec
cli
pop
pop
je
es
iret
mov
lahf
push
enter
jmp
and
xchg
int
in
adc
cmp
jns
dec
mov
mov
or
fsubrl
inc
popf
fnsave
loope
sub
inc
push
ljmp
cmp
pop
daa
inc
jnp
movsb
arpl
dec
xchg
loop
xor
icebp
in
cmp
popa
and
stc
push
scas
notb
or
sbb
insb
xorb
fs
mov
shll
jg
shrl
fwait
jle
or
mov
xchg
jbe
cmpsb
and
push
aas
push
sub
mov
jl
or
or
add
mov
lcall
mov
mov
cmp
xchg
push
sub
adc
idivl
and
imul
stos
push
out
insb
mov
and
mov
rcrb
dec
movsl
aam
xor
pusha
xor
jo
jecxz
push
sub
mov
pop
mov
xlat
fsubl
mov
arpl
mov
aaa
mov
or
push
mov
sti
mov
shl
cmp
subb
jb
xorb
movsl
pop
je
fiaddl
andb
push
sub
adc
sub
daa
bound
mov
iret
pop
inc
push
cmc
mov
test
pop
sub
pop
sar
insl
xchg
fistps
push
jbe
sbb
dec
mov
mov
lahf
stos
test
sub
stc
scas
and
add
pop
adcl
jmp
out
aaa
mov
sbb
mov
inc
adc
cvtpi2ps
mov
pusha
insb
les
lcall
cmpsl
les
iret
stc
cs
jnp
jae
lret
sbb
int3
sbb
mov
jecxz
inc
sbb
mov
adc
pushf
mov
lods
xchg
test
jbe
test
cmc
out
cmp
pop
scas
fisubl
popf
pop
and
bound
daa
lods
and
in
cmp
jmp
cmp
pop
imul
shrl
and
sets
adc
xor
jle
inc
neg
test
dec
aad
into
push
add
mov
subl
dec
mov
xor
pusha
fildl
imul
pop
add
xor
es
push
xchg
std
push
pop
dec
insb
mov
xchg
test
ficoms
push
bound
lahf
jge
sbb
xchg
in
jp
es
inc
rclb
inc
daa
fstpl
mov
mov
ds
jp
jmp
stos
cwtl
ss
lret
and
mov
xor
pop
in
clc
cmpsb
mov
mov
sahf
popf
cltd
fwait
mov
adc
in
out
inc
push
jb
mov
sbb
jbe
loop
inc
dec
bound
xor
sub
jns
fcmovnbe
or
cli
pop
call
add
mov
push
lret
sbb
loopne
in
fimuls
push
xchg
mov
orb
and
mull
icebp
rep
push
mov
jl
aaa
nop
pop
jnp
jmp
cmp
fnstsw
repz
testl
xor
jbe
dec
fistl
jns
fwait
ss
jmp
jl
mov
or
sahf
shll
fst
adc
pop
inc
cmp
sub
pop
mov
sbb
or
es
push
notl
inc
mov
mov
mov
add
ljmp
pushf
mov
pop
cmc
sub
jno
aam
mov
pop
int3
mov
push
mov
xchg
rolb
mov
or
insl
sbb
jmp
jbe
popa
icebp
push
push
fcmovnb
pusha
dec
cltd
xchg
js
xor
jmp
imul
ficoml
iret
sbb
ljmp
cld
dec
dec
sub
jl
mov
jmp
outsb
and
xor
sub
mov
clc
icebp
adc
mov
leave
dec
ret
mov
add
pop
imul
xlat
xchg
xchg
jbe
or
in
stos
sub
push
mov
push
movb
inc
fcmovnu
cltd
dec
cmp
or
icebp
push
mov
cmp
xchg
sub
adc
dec
lods
addr16
outsl
inc
loopne
mov
iret
push
shl
inc
mov
cmp
pushl
std
xchg
movsb
arpl
inc
lahf
shlb
lret
cmovp
sarb
jg
mov
cmp
jmp
in
inc
sti
scas
ret
cmpsl
xchg
fwait
cmc
mov
fdiv
movsl
dec
daa
adc
sub
sub
iret
insl
push
lcall
inc
jmp
sub
out
movsb
xor
mov
pop
jno
mov
rorb
hlt
mov
in
push
mov
xchg
adc
xor
iret
dec
dec
jle
aad
and
sahf
inc
xchg
mov
sbb
fcomps
mov
mov
stos
cld
mov
mov
add
popa
xor
sbb
dec
ficompl
stos
aad
in
mov
sbb
nop
les
es
pusha
pop
adc
je
mov
aad
iret
lret
sti
or
sub
push
jne
add
dec
call
out
xchg
ljmp
arpl
pop
pop
js
cmp
jl
stc
jge
das
repnz
mov
pushf
adc
in
jb
ret
nop
es
xchg
push
sbb
dec
fistpll
mov
ret
mov
jb
nop
popf
es
ficoml
adc
rcl
test
push
sub
shrb
jle
cmpsl
cmp
sti
fwait
aam
dec
and
adc
dec
push
jmp
ss
lods
mov
xchg
notb
aam
xlat
push
ret
icebp
cmp
mov
daa
test
push
in
fnstsw
pop
xor
mov
lds
mov
imul
jge
lock
clc
or
push
and
fdivrp
dec
xchg
or
pop
or
xor
pop
dec
add
pushf
ror
test
fists
ds
divl
cs
popa
sbb
cmp
and
incl
cld
dec
dec
push
mov
lret
cmp
push
mov
push
and
mov
call
sbb
sbb
rolb
cmp
pop
imull
repnz
in
xor
push
pusha
je
mov
dec
in
fistpll
or
adc
arpl
sbb
test
out
rolb
cmp
lea
push
aas
imul
imul
fneni(8087
jbe
clc
mov
dec
popa
mov
inc
js
push
mov
mov
pop
movsl
jns
fadd
dec
fimuls
test
pop
push
jns
loopne
or
addb
inc
pop
pop
scas
inc
cmp
jno
jns
and
push
jle
jae
mov
pop
jns
ljmp
into
fs
lea
fstp
gs
adc
shlb
mov
or
test
push
popf
pusha
jmp
enter
add
dec
push
push
xor
and
daa
dec
and
ret
ret
push
dec
stos
clc
icebp
sub
nop
mov
mov
mov
aas
dec
cmpsb
int
xor
jns
jae
mov
jl
mov
in
or
jne
sbb
sbb
test
mov
mov
sti
mov
mov
cmpsb
jno
rclb
mov
in
pop
cli
push
mov
scas
jle
mov
jp
jno
push
shlb
add
gs
adc
pop
enter
mov
call
pusha
ja
pop
dec
jnp
mov
idiv
fwait
jnp
and
cwtl
movsl
iret
cmp
mov
daa
pop
mov
sbb
xchg
lcall
movsb
test
bound
jo
stos
je
dec
xor
sbb
cmpsb
mov
adc
sbb
push
mov
jecxz
xor
aas
popf
cmc
fadds
pop
or
aad
fxch
or
push
jl
repnz
fs
sbb
add
dec
cli
js
sbb
pop
insl
sbb
mov
add
and
lahf
ret
inc
mov
cmpb
enter
push
xor
xor
inc
mov
cmpsb
les
mov
aam
push
mov
push
sbb
mov
aaa
ret
pushl
bound
add
adc
pop
fsubrl
xchg
ret
rol
ljmp
imul
pusha
cmpsl
pop
out
xor
xor
frstor
out
jno
aas
mov
cmp
push
push
aas
jge
jg
cmp
js
xchg
movsl
js
ret
pusha
pushf
jno
lock
inc
xchg
cmc
loope
inc
or
imul
add
clc
outsl
xchg
add
orb
push
inc
inc
mov
push
repnz
repz
inc
inc
xchg
sub
jmp
add
leave
inc
mov
xorl
out
mov
xchg
jle
fcmovb
addb
cmc
inc
imulb
inc
stc
cmp
ss
jno
cmp
es
loopne
sbb
cwtl
push
sub
xor
inc
sti
add
mov
insb
outsl
ja
movsl
jecxz
push
idivb
jecxz
adc
lds
arpl
sbb
adc
lock
stos
in
xchg
dec
fsin
or
ret
mov
push
cmp
xor
arpl
mov
inc
lret
ja
jp
mov
movsb
dec
loope
ja
mov
enter
xchg
pop
aam
and
imul
out
inc
or
es
xchg
movsb
dec
add
cmp
mov
idivb
inc
mov
aam
jl
ret
shll
addr16
insb
push
cmp
push
or
sub
pusha
jne
mov
sub
pop
inc
pushf
fwait
mov
pop
pop
lret
adc
mov
sarb
fcompl
mov
les
dec
inc
aaa
jne
pop
push
pop
test
scas
xchg
mov
insl
int3
cwtl
add
insb
cmp
fmull
mov
nop
pop
int3
ss
jl
jb
pop
sbb
push
loope
lods
mov
repz
push
dec
mov
and
pop
aas
xor
insb
or
and
add
aas
dec
sub
mov
and
jnp
insb
jb,pn
sub
lcall
mov
add
ja
cs
pushf
mov
js
xchg
lods
mov
test
cmp
rol
inc
pop
je
out
out
jmpw
or
in
xchg
outsl
call
mov
imul
or
jae
fs
push
jp
insb
addb
sbb
sub
push
stos
adcb
lods
jo
mov
fsubrl
sti
mov
dec
mov
mov
inc
inc
mov
je
and
mov
fcompl
out
xor
lretw
jne
pop
sbb
xchg
cmp
mov
imul
dec
out
adcb
arpl
icebp
jl
mov
mov
mov
cmc
pop
adc
cmp
jg
mov
dec
or
arpl
loope
fwait
enter
lea
popf
push
xchg
inc
out
ficompl
add
into
mov
int3
jmp
push
or
popa
push
jnp
lcall
popf
iret
jb
lds
sahf
mov
cmp
mov
mov
cmp
cltd
lds
fstpl
mov
lods
dec
or
cmc
mov
mov
imul
jo
mov
sbb
or
and
push
fistl
add
dec
jmp
fwait
dec
push
loopne
mov
sbb
inc
in
xchg
xchg
imul
adc
fsubp
adc
mov
int
xchg
stos
je
sub
jno
in
jl
inc
icebp
xor
or
out
cmpsl
jo
pop
cmp
mov
xor
cltd
push
xchg
jbe
xchg
les
inc
inc
mov
push
das
gs
pop
jb
ficompl
fwait
adcl
ds
sbb
dec
pushf
dec
les
jns
aam
jmp
dec
cmp
scas
mov
rorb
push
shlb
scas
iret
xor
add
add
inc
add
push
subl
jle
mov
jae
add
add
xor
sub
fs
inc
lcall
add
fldenv
cmc
cmp
popa
icebp
les
pop
shlb
cli
shl
mov
ja
mov
push
imul
pop
mov
mov
lret
lret
push
inc
int3
punpckhwd
ficompl
pusha
popf
into
lds
nop
movsb
mov
lods
pop
lods
inc
xchg
cmp
jg
and
iret
aad
fwait
mov
int
aad
mov
loope
or
pop
rorl
pop
jnp,pn
icebp
pop
mov
mov
outsl
fs
cmp
add
pop
mov
jp
xchg
ja
and
into
sti
dec
sarb
adc
cmp
sahf
push
mov
leave
and
test
mov
or
cmp
xchg
mov
adc
pop
xor
cltd
xchg
xor
clc
push
pop
or
cmp
mov
movsb
shll
and
div
scas
jle
ret
add
repz
nop
gs
jo
cmpsb
add
imul
xchg
cltd
add
pop
mov
iret
push
mov
pop
out
imul
jecxz
int
add
dec
sub
mov
stos
adc
popa
ror
mov
sbb
pop
jge
mov
dec
faddl
or
adc
push
fcompl
dec
push
je
pop
add
lods
in
jnp
inc
mov
add
loopne
shlb
cltd
fstpt
in
cmp
push
xor
mov
std
push
and
aad
sub
cmpsl
pop
aam
out
adc
andb
add
mov
sub
pop
jl
mov
mov
push
dec
fmuls
ret
ja
sub
cs
nop
fwait
xchg
inc
ret
mov
stos
mov
divl
xchg
jmp
xor
lahf
cmp
outsl
and
mov
shrl
fimull
mov
test
push
jmp
es
push
pop
stos
sub
jmp
test
clc
jbe
xor
pushl
movsl
clc
fwait
pop
mov
mov
leave
das
es
cmc
cmp
jp
pop
and
pop
mov
push
adc
mov
pop
data16
pop
push
lods
mov
sbb
dec
in
into
jl
stos
icebp
ret
and
lock
leave
les
jg
lret
jl
cmp
ja
dec
out
cmpsb
scas
pop
sbb
xor
mov
jl
cmp
cmc
xchg
xchg
imul
repz
pop
xlat
dec
loopne
ret
flds
jo
xor
daa
call
test
adc
dec
push
jmp
mov
inc
in
xor
jle
fidivl
add
out
xchg
lahf
lods
inc
pusha
mov
pop
adcb
jnp
ja
pop
cmpsb
imul
or
xchg
pop
pop
das
jne
mov
push
je
or
mov
dec
into
jmp
push
mov
popf
mov
add
pusha
jo
loop
xchg
ds
das
push
sbb
daa
nop
or
adc
loope
pop
loope
pushf
lahf
jae
stos
sub
mov
dec
je
inc
add
inc
pushf
fdiv
mov
sbb
jns
push
cltd
mov
cmp
dec
cmp
je
push
in
fimull
ss
push
cmpsb
jns
jg
sub
je
pop
push
and
fisttps
sarl
inc
test
dec
out
mov
orb
in
add
cltd
js
mov
ss
bound
push
jmp
push
stos
jle
fstps
int
aas
repz
lods
or
push
adc
pusha
fiaddl
pusha
es
cltd
fcmovnb
mov
imul
arpl
pop
lock
push
push
push
in
nop
push
inc
dec
mov
adc
pop
xchg
jno
cmp
and
or
mov
add
xchg
rcll
pop
fldl
mov
mov
add
lods
mov
sub
cmp
dec
daa
xor
mov
rorl
stos
mov
shlb
xchg
fisubrl
lds
mov
cmp
js
xor
xor
jbe
pop
outsb
inc
cmp
lock
xchg
stos
mov
cs
pop
inc
jmp
dec
clc
jp
gs
and
lcall
sub
mov
test
push
dec
lahf
insl
mov
aas
pushf
jl
divl
xor
icebp
push
test
mov
das
mov
pop
test
adc
push
xchg
sub
add
iret
decb
dec
out
imul
out
or
adc
mov
icebp
jmp
mov
aad
popf
add
outsl
mov
ss
setno
loope
inc
inc
pop
mov
std
mov
pop
jg
test
fcmovu
cltd
test
iret
mov
mov
adc
lods
imul
add
leave
rcll
inc
test
mov
and
in
out
inc
sub
mov
in
inc
xchg
ficoml
pusha
jnp
call
stos
mov
push
jnp
clc
movsb
gs
jae
into
mov
pop
pop
and
clc
leave
js
add
mov
mov
dec
into
lods
aaa
outsl
and
je
test
inc
int
cmpsl
pop
xor
dec
mov
in
pop
pop
push
mov
or
mov
stos
pop
or
xchg
push
bswap
jl
sub
sti
into
nop
popa
std
add
pop
xor
mov
fwait
push
ret
les
pushf
mov
push
stos
int
pop
and
adc
inc
loop
mov
test
mov
and
jbe
jb
aas
sbb
testl
cli
test
stc
bound
add
add
cmp
push
jmp
add
xchg
sub
pop
cmp
cs
jmp
push
stc
faddl
ret
mov
push
pop
fwait
das
jb
mov
xor
sbb
jg
sarb
and
mov
mov
push
test
loopne
shll
call
jnp
push
pop
adc
cmp
inc
std
jmp
test
lcall
call
fwait
ret
push
mov
sbb
mov
repnz
pop
fs
mov
inc
cmpsb
sbb
dec
push
jmp
pop
mov
pushl
mov
roll
outsb
dec
push
inc
rcl
imul
pop
jmp
fwait
mov
or
fildll
push
sarl
loopne
xlat
pop
and
cmp
dec
dec
or
cmp
pop
in
loope
aaa
inc
add
push
pop
insl
push
subl
cmp
push
out
cmp
stos
repnz
xor
sub
jmp
pop
add
ret
sbb
or
incl
ret
std
pop
pop
cltd
addb
out
push
push
es
push
fisubl
test
add
insb
js
dec
xor
mov
pop
les
jb
push
sub
lock
ja
push
fidivs
xchg
incl
mov
pop
test
cltd
int3
test
add
out
mov
test
jmp
int
cs
jnp
in
pop
pop
in
mov
stos
cltd
add
std
ss
lods
xlat
divb
repz
push
jno
test
push
pusha
mov
daa
sub
test
out
cmp
sbbl
add
pop
addr16
call
jns
test
into
fcmovne
mov
sbb
mov
pushf
adc
add
mov
notb
cmp
jmp
cltd
adc
popf
mov
sbb
int3
fisubrs
pop
mov
pop
push
pop
aad
xor
jle
test
dec
ljmp
in
mov
push
cmp
jmp
jecxz
jo
or
mov
and
lcall
sahf
jb
mov
fwait
dec
sbb
cmp
enter
ficoml
push
push
js
add
sarb
xor
out
xorl
scas
xor
jmp
jge
adc
fstpt
int3
rep
jae
daa
jmp
add
dec
and
sbb
pop
mov
rorb
push
inc
xor
inc
xchg
inc
dec
mov
scas
out
fwait
sti
mov
ja
psubw
cmc
jmp
mov
inc
push
add
inc
push
into
and
frstor
pop
std
jno
cltd
jnp
lahf
adc
pop
ret
push
cmp
fwait
mov
addr16
mov
mov
es
mov
sbb
arpl
xorl
push
ja
pop
mov
sub
test
repz
or
lret
loope
mov
dec
notl
cmc
mov
cli
push
negl
jge
lea
pop
stos
push
sbb
sbb
insb
dec
mov
jl
mov
mov
mov
pop
mov
dec
ret
icebp
jno
and
in
bound
mov
xchg
jg
fbld
xlat
sub
push
inc
rcrl
mov
or
mov
cmpb
cmp
lahf
scas
lea
jo
mov
jmp
lcall
call
mov
sub
or
push
inc
jge
pop
sbbb
lahf
js
xchg
push
or
push
pop
in
leave
mov
scas
ficoms
lods
cmp
fists
sbb
cltd
mov
mov
data16
cmp
push
jne,pt
int3
push
jnp
cwtl
insb
mov
in
ja
dec
subb
sub
loope
mov
dec
jle
push
div
jb
bound
jmp
mov
dec
dec
stos
pop
es
fcomip
xlat
jmp
push
pop
adc
pop
fdivs
stc
std
jg
mov
dec
mov
daa
aam
inc
je
dec
popf
jae
mov
jge
sub
or
xor
fcompl
ljmp
pop
in
std
pop
cmpsb
movsl
popf
stc
les
or
add
push
jne
repz
mov
icebp
rcll
and
nop
and
pusha
fistps
std
or
xor
imul
mov
mov
std
sbb
sub
inc
aad
shrl
jg
pop
loope
mov
repnz
dec
push
lods
cmpsb
xchg
outsb
mov
sub
iret
arpl
lods
cltd
rorb
je
ds
mov
sahf
cs
inc
popf
mov
mov
or
addr16
rcr
fidivs
insl
fnstsw
xchg
mov
sbb
dec
inc
std
mov
testl
cmp
mov
pop
cmpsb
data16
mov
xor
mov
sar
sub
rcll
aas
mov
inc
mov
sub
cmp
push
stc
roll
push
sar
dec
add
daa
cmp
lret
jo
add
or
push
in
jge
fsts
xor
add
pop
mov
push
popf
clc
shlb
xchg
roll
rcr
cmp
stc
dec
push
xchg
mov
or
mov
dec
cmpsb
fsubs
dec
sbb
push
je
data16
rorl
fisttps
adc
lock
jo
cltd
pop
stos
stos
icebp
roll
mov
jnp
fs
fdivrl
mov
sub
adc
pop
jecxz
adc
inc
push
addr16
mov
adc
cs
movsb
ds
imul
xor
mov
jb
int3
dec
call
cmp
dec
pop
jmp
pop
and
repnz
inc
and
mov
jle
xor
mov
add
dec
rclb
add
jl
mov
mov
lret
in
int
fists
rcrb
sbb
out
fistpll
and
cmc
cmp
add
out
push
inc
mov
aad
push
data16
push
les
mov
outsb
lods
dec
dec
ds
mov
fisttps
cli
adc
mov
or
mov
xchg
jb
push
add
cmp
lret
loopne
mov
pushf
out
or
movsl
mov
jmp
add
mov
inc
push
in
dec
ss
jns
ljmp
xor
scas
dec
js
push
adc
mov
mov
addr16
in
filds
jns
loopne
fdiv
mov
add
out
mov
sub
shr
int
cmp
dec
mov
dec
sub
adc
js
notl
bound
gs
repz
pop
lock
orl
jbe
icebp
adc
jmp
aas
fidivrl
inc
and
int
pop
out
in
das
sub
sub
clc
and
ret
js
dec
xchg
mov
and
dec
mov
mov
sbb
jg
lcall
adc
sti
jmp
loopne
jg
test
sub
lods
mov
test
fwait
lret
sbb
pop
or
ja
mov
xchg
sti
sbb
pop
cmp
pop
sahf
xor
into
out
lcall
xor
lock
out
movsb
dec
aam
data16
popa
pop
push
add
mov
cmp
test
mov
fsub
mov
adc
inc
sbb
dec
loopne
scas
nop
test
insb
imul
popa
xlat
xchg
inc
into
mov
add
movsb
and
es
ror
loope
aad
push
mov
and
daa
loope
inc
mov
out
ljmp
into
js
aas
mov
mov
outsl
nop
mov
jmp
mov
sbb
mov
jecxz
xor
out
fwait
stc
inc
and
cld
mov
fldl
push
mov
jg
sub
push
sub
sub
and
jmp
fs
test
jecxz
or
js
jmp
pop
jge
lret
xlat
mov
ljmp
push
push
or
mov
and
pop
in
pop
inc
push
inc
test
dec
xchg
sbb
adc
inc
rorb
jae
test
fistpl
sub
and
mov
sarb
or
push
adc
xchg
sub
int
dec
int
xchg
add
test
das
aam
mov
cmp
lret
dec
mov
scas
push
stos
dec
cltd
mov
xor
js
ljmp
ret
cs
lods
lock
fucomi
pop
std
sub
mov
dec
inc
xchg
xor
pop
cmp
rcrb
and
adc
enter
add
shrl
js
sbb
data16
aad
sbb
insb
cmp
pop
mov
fwait
test
xor
dec
outsb
add
loopne
add
xor
lcall
push
in
cmpsl
add
or
adc
adc
dec
sub
mov
ficoml
jmp
repz
sbb
dec
xchg
adcl
mov
fisttpl
jg
and
ja
inc
stos
and
sbb
push
fs
xchg
or
dec
lcall
mov
jno
sbb
inc
cli
mov
xor
lcall
or
jp
nop
jb
inc
into
bnd
jle
ret
mov
aad
dec
stos
jg
pop
mov
mov
inc
sbb
test
xadd
enter
fucom
lret
mov
mov
jl
stos
ffree
lds
scas
add
popf
mov
shlb
xlat
and
rcrb
pusha
mov
xor
imul
into
cs
and
sub
inc
arpl
fmuls
aad
es
in
mov
mov
sti
cli
cmpsb
adc
mov
push
pop
cltd
inc
sub
fcom
fisubrl
cmp
shll
cltd
and
lcall
int
lock
jl
cmp
mov
add
xchg
in
insb
ja
push
or
mov
xor
movsb
test
aaa
lahf
sti
pop
cltd
mov
subb
clc
pop
xchg
data16
cmp
ret
fistps
mov
mov
inc
and
std
out
jecxz
jge
shll
out
sub
out
xor
dec
ss
les
es
test
ds
or
adc
sbb
shll
add
fildll
mov
int3
pop
mov
subb
mov
imul
rorb
test
mov
mov
adc
loope
xor
jge
fwait
sub
icebp
mov
push
mov
sub
xlat
jle
jg
inc
push
sbb
cmpsl
pop
pop
sbb
fisubrl
in
sub
jae
jle
faddl
inc
push
jl
sbb
jg
sub
pop
rclb
mov
imul
pop
testl
pusha
cmp
mov
inc
push
lods
add
sarb
mov
mov
imul
testl
in
fiaddl
pushf
or
dec
adc
pop
call
and
add
mov
mov
add
shlb
xchg
dec
icebp
dec
in
sti
popf
js
decb
and
inc
sub
sub
mov
pop
fadds
in
lcall
cmp
jnp
xor
push
push
out
std
sbbb
xchg
popf
inc
xchg
pop
jge
loope
xchg
outsb
scas
xor
lret
adc
imul
pop
push
and
push
pop
imul
cmc
add
imul
cltd
inc
add
iret
subb
roll
or
rcrb
push
cmp
icebp
test
iret
in
sub
cmp
pop
inc
xor
mov
and
ljmp
test
jnp
mov
mov
jns
sub
cmpsb
mov
mov
dec
imul
ret
dec
out
mov
or
xor
in
dec
test
pop
lock
xchg
jb
aaa
cmpsl
ret
loope
push
pop
or
fbstp
adc
gs
fwait
call
movl
cmp
mov
cmp
ljmp
cmp
push
mov
push
mov
es
fisttpl
push
mov
jp
out
push
dec
add
cmp
subw
lret
ljmp
div
ror
cs
lods
jne
mov
pushf
rorb
or
imul
mov
and
xchg
adc
mov
jno
lods
movsb
ljmp
cmpsl
cmp
mov
jecxz
mov
inc
insb
cld
jmp
jmp
jns
ljmp
test
sti
out
int
stos
and
cmp
pop
push
insb
orb
fstpt
or
push
xchg
mov
inc
or
mov
mov
stos
ljmp
dec
sti
xor
rolb
and
mov
pop
fidivrs
aaa
or
xchg
push
xchg
ja
shll
pop
sti
mov
cli
push
fimull
iret
cmp
das
mov
andl
mov
dec
or
sbb
mov
or
add
push
fstpt
and
jo
outsl
cs
ror
fsubl
jae
lahf
mov
push
mov
shld
lahf
lea
mov
cmp
out
testl
popf
andb
mov
fwait
sahf
pop
cmp
sub
pop
sbb
std
xor
shl
cmp
in
je
popa
test
lods
add
mov
jl
sub
sahf
sbb
xchg
add
inc
jl
inc
repz
mov
pushl
fcomip
mov
aas
fstpt
int3
mov
andb
sti
pop
les
rorl
inc
sub
mov
mov
daa
jge
fdivrs
jecxz
lahf
sub
in
jbe
dec
arpl
mov
movsb
adc
call
add
out
test
scas
loopne
ret
jns
bnd
sbb
jae
xchg
xorl
mov
or
sbb
out
mov
outsb
pop
and
fldt
imul
and
into
mov
je
jnp
scas
scas
jb
mov
push
in
sbb
pop
mov
sbb
add
cmp
mov
push
add
sbb
adc
pop
or
testb
or
test
ret
fisttps
mov
cmp
testl
or
mov
add
inc
pop
pop
sbb
cmp
sti
mov
xchg
mov
test
fisttpll
cmpsb
inc
dec
jnp
add
mov
sub
or
outsb
add
add
pop
ret
adc
mov
mov
dec
inc
mov
cmp
inc
testb
leave
pop
cmp
inc
jp
pop
xor
insb
xchg
cmp
mov
fisubrl
adc
adc
jmp
inc
mov
repz
ret
cmp
cmp
lock
jae
stos
jle
repnz
inc
sub
sub
clc
insb
fnstsw
mov
shll
shl
jecxz
cld
and
mov
lcall
xor
jg
cmovge
xchg
cmp
inc
pop
push
xchg
std
lea
les
iret
aam
xor
out
clc
dec
fldl
and
xor
cmc
std
ret
pop
aam
fsts
loope
and
dec
movsb
push
aam
xchg
mov
adc
inc
dec
jecxz
je
push
fcomps
xchg
packssdw
and
pop
je
cwtl
inc
lret
push
fistpl
mov
add
cltd
std
adc
inc
out
mov
nop
mov
mov
lods
sbb
fstpl
rorb
int
in
pusha
pushf
push
test
fwait
adc
adc
sbb
dec
std
out
pop
mov
not
mov
push
add
cmp
lcall
mov
pop
pop
scas
xor
dec
ljmp
jmp
pop
pop
mov
dec
sarl
pop
hlt
mov
xor
inc
adc
push
ret
xor
adc
sti
cmp
mov
xchg
clc
pop
nop
adc
inc
dec
push
frstor
js
ffree
push
dec
sub
xor
mov
arpl
pop
mov
sbb
xor
or
mov
mov
fs
cmc
jnp
mov
iret
mov
push
mov
iret
cmp
mov
scas
insb
ret
add
xor
rorl
scas
pushf
mov
jae
loopne
int3
and
jne
jg
es
flds
ja
push
in
pop
xor
jmp
mov
mov
cmp
or
loopne
cmpsl
in
push
mov
hlt
test
jl
das
xchg
lods
mov
push
mov
imul
mov
jmp
in
pop
mov
and
into
sub
rol
jbe
xor
mov
push
ret
pop
testl
push
dec
cmpsb
mov
in
mov
test
inc
push
cmp
or
dec
test
out
push
mov
inc
xsha256
cmpsb
xchg
inc
sbb
xor
jno
imul
ret
and
xchg
dec
and
les
mov
sbb
jmp
cmp
iret
add
cmpsl
and
push
ss
adc
les
insl
ret
lods
aad
jnp,pn
fistps
int
adc
bound
inc
aam
flds
add
push
int
sub
out
ss
insb
xor
pusha
mov
dec
fcomps
ja
repz
dec
arpl
ficomps
mov
pop
jecxz
sub
adcl
add
push
jg
test
push
xchg
int
pop
or
jl
jnp
out
push
inc
cltd
add
adc
and
test
jb
fdivrp
pop
pop
and
divb
cmp
pop
push
sub
pushf
cmp
fdivrl
cli
lret
lret
clc
std
add
or
and
lds
add
nop
repz
adc
fnstcw
jns
push
cli
scas
js
jmp
insb
mov
sub
sub
mov
add
test
or
ret
sbb
jne
jle
mov
push
inc
ss
and
push
adc
mov
push
mov
outsl
xchg
inc
jmp
xor
adc
push
data16
sbb
in
shlb
and
daa
icebp
jno
xchg
or
cwtl
push
data16
int
and
sbb
xchg
movsb
pop
cli
lea
call
add
fisttpl
xor
xlat
jbe
or
pop
xor
ss
fcmovnb
mov
out
ja
pop
clc
mov
ret
pop
pop
adc
xor
lcall
test
push
idiv
mov
aas
rcrb
cltd
icebp
std
jecxz
mov
xchg
stos
lcall
ja
bound
xchg
jae
fists
out
arpl
das
sti
mov
loop
xlat
nop
add
jmp
inc
fwait
mov
es
pop
fs
mov
and
jnp
push
xchg
ja
mov
cmpsb
jp
lods
icebp
fisttpll
xor
lock
adc
sbb
inc
mov
flds
ja
or
mov
or
daa
sbb
or
fdivl
cltd
out
adc
sub
sbb
pop
pushf
cmp
stos
dec
mov
pop
aaa
jg
sbb
cmp
daa
and
jns
xor
mov
and
sub
add
adc
fwait
ljmp
adc
scas
loopne
jmp
pop
dec
adc
push
outsb
cmpsb
mov
add
lock
lret
subb
ljmp
pop
sbb
and
out
fcoms
add
pop
lea
cmc
leave
fdivrl
jae
add
faddp
mov
popl
into
test
mov
jno
adc
cmpl
or
icebp
popa
out
ds
jns
inc
jae
mov
push
xor
ret
das
ja
fldcw
inc
das
pop
int3
js
aam
subb
das
sbb
xchg
dec
mov
inc
adc
repz
shlb
or
out
aam
or
xchg
or
lcall
jb
iret
mov
sbb
mov
push
mov
push
cmp
aad
push
mov
jecxz
push
movsb
fwait
adc
cld
maskmovq
notl
dec
inc
jg
scas
scas
addl
and
or
mov
stos
dec
outsl
pop
adc
bound
int3
stc
lcall
mov
or
ss
bound
push
push
mov
jo
sbb
pop
inc
test
imul
cmpsb
std
in
stos
inc
repz
fbstp
sti
icebp
push
mov
test
ljmp
rorl
adc
dec
out
sub
or
pusha
scas
add
shlb
scas
lret
pop
inc
shlb
fdivl
xor
mov
fmulp
enter
sbbb
sbb
testl
mov
out
int3
std
mov
push
andl
add
fdivrl
pop
fmull
adcl
jle
mov
push
dec
mov
adc
adc
pop
sbb
arpl
jl
dec
std
jecxz
scas
dec
mov
pop
adc
and
or
dec
das
dec
popf
sub
test
push
bound
add
ja
adc
outsl
sbb
cmp
rolb
repnz
dec
sbb
xchg
jg
fwait
adc
std
push
or
cmp
dec
loope
pop
jno
das
inc
jns
add
mov
or
sbbb
fisubs
mov
clc
test
and
jg
fdivs
inc
cmp
loope
dec
movsb
adc
imul
shr
mov
mov
sbb
pop
inc
dec
mov
test
sar
jl
add
aaa
ret
pusha
pop
push
mov
pop
sbb
lock
dec
out
mov
jb
push
loop
add
adc
mov
dec
jno
dec
mov
lods
clc
popf
add
push
push
mov
inc
repz
and
or
cmp
test
mov
sub
fisubrs
fdivl
jmp
jg
mov
pop
loopne
sbb
mov
xorl
mov
out
outsl
add
jb
adc
mov
ja
jno
neg
rorb
cmpsb
sub
sub
jnp
inc
adc
movsl
outsl
mov
out
icebp
push
sub
mov
ljmp
insb
dec
lcall
fisubrl
jb
lcall
push
pop
inc
cmp
ficoml
pusha
aaa
jl
mov
aad
pop
outsl
mov
pop
push
dec
ficoml
inc
dec
out
ret
ss
movsl
inc
sub
xchg
test
xlat
xchg
cli
pop
in
inc
cmp
pusha
mov
fadds
int
fsubr
cmp
test
stos
call
in
push
rcr
ja
jl
mov
lods
es
add
xlat
xchg
pop
jge
roll
and
cld
sub
push
jl
adc
jecxz
andb
mov
pop
mov
dec
xor
fists
mov
add
fisttpl
les
jl
cld
cmp
loope
sbb
cmpb
pop
jns
ss
xlat
pusha
lods
sbb
imul
inc
jg,pn
inc
sbb
pop
jb
ljmp
mov
cli
mov
data16
sub
mov
das
or
lods
mov
sbb
inc
sti
lock
leave
mov
lcall
mov
lods
lock
jb
repz
inc
jl
inc
dec
cmc
xchg
in
adc
add
fcomps
mov
cmpsb
lret
mov
mov
je
and
jl
pop
jmp
sub
jp
ljmp
jae
mov
outsl
movsb
mov
jnp
imul
mov
or
cltd
imul
mov
inc
in
sti
sbb
mov
gs
mov
xchg
notl
rcr
mov
rcrb
or
fwait
jae
cs
xor
lcall
insb
xchg
out
test
fs
jno
mov
sub
add
fwait
add
inc
mov
push
mov
repz
rolb
push
cmc
mov
rol
pushf
xchg
fdivrp
orb
adc
scas
mov
mov
cltd
jg
pop
std
in
mov
pop
pop
mov
movsb
sub
bound
and
call
mov
jnp
pop
test
mov
and
push
fwait
std
pop
in
mov
adc
jnp
push
dec
sbb
push
sti
fwait
and
int3
lcall
adc
add
sub
fstpl
pushf
int3
popa
xor
mov
jp
inc
repnz
pop
sbb
push
add
dec
scas
and
cmp
roll
in
xchg
popf
mov
popf
xor
outsl
lret
adc
cmp
jg
mov
call
sti
fwait
and
inc
jmp
ja
ds
jb
cld
add
adc
inc
or
cmpsb
rolb
insb
and
jae
movb
add
push
insl
dec
xor
in
push
decb
push
shlb
jl
xor
inc
and
sbb
cmp
inc
pop
add
fdivrs
mov
ror
mov
push
out
jmp
mov
mov
loop
andb
clc
in
pop
add
addl
jmp
sbb
dec
and
lds
push
jnp
es
scas
into
sbb
lcall
mov
mov
add
test
mov
push
and
into
rclb
lret
in
push
add
xchg
les
mov
fcmovnbe
push
sub
in
fidivl
jmp
test
imull
aam
sub
sbb
test
mov
rorl
out
test
adc
adc
adc
test
frstor
add
xchg
hlt
dec
sub
mov
dec
pop
cmpsb
mov
stos
loope
mov
into
and
jns
xchg
jl
mov
shl
sub
pusha
in
pop
push
fildl
orb
rcll
js
mov
aad
xor
adc
adc
ja
fisttpl
fwait
jle
mov
hlt
sub
push
vmovapd
adc
cli
pop
pop
jl
daa
mov
jecxz
test
jecxz
les
xor
push
xlat
push
jo
movsl
jg
hlt
icebp
fwait
jmp
jb
mov
dec
push
not
fwait
jno
pop
outsb
arpl
or
rclb
jle
sahf
rcrl
ss
sar
stos
out
mov
xor
xchg
sbb
cwtl
and
leave
in
in
pushf
xor
stos
daa
lods
std
insb
jae
sti
insb
and
mov
adc
adc
sbb
out
sub
fistpll
xchg
out
dec
push
shrl
lods
sbb
mov
xor
jecxz
dec
jge
push
in
cmpsl
mov
sbb
dec
std
out
stos
push
dec
dec
inc
lcall
js
sbb
pop
pop
add
xor
adc
mov
cld
andb
xlat
mov
mov
mov
jecxz
mov
fadd
add
push
ss
gs
aas
mov
in
lds
imul
pop
cltd
ret
test
movsl
test
push
jecxz
pusha
int3
and
cmpsl
lcall
xchg
sbb
shr
lods
xchg
dec
push
fisttpll
pop
popf
es
dec
js
fcomi
shlb
jbe
dec
or
mov
push
cltd
lods
push
push
mov
xor
jl
mov
les
pop
or
movsl
add
sbb
dec
inc
xchg
push
stos
stc
sbb
or
and
stc
outsb
mov
and
aam
mov
lods
fwait
aam
imul
or
add
ret
ljmp
rorb
xchg
pushf
das
inc
ja
jno
into
out
push
xor
adc
mov
adc
dec
and
push
cltd
fcmove
or
call
jne
mov
sahf
test
mov
lahf
cmpsb
push
fnstenv
xchg
je
fdivl
icebp
push
pop
or
xchg
fldenv
mov
or
cs
stos
rcrl
add
xor
xor
mov
loope
mov
lret
inc
push
jnp
sub
fbld
pop
fisttpll
xchg
into
mov
jns
mov
pusha
arpl
push
mov
sub
lds
mov
scas
movsl
roll
dec
enter
cld
fisubl
fwait
cwtl
lock
movsb
xchg
fildl
fwait
cmp
iret
arpl
sub
int
leavew
push
pop
fs
mov
xlat
fimull
inc
inc
push
jbe
jne
repz
test
shll
adc
dec
cmc
ss
in
sbb
mov
stos
jno
lods
out
fbld
and
inc
imulb
lods
add
bound
jno
dec
cmpsl
mov
xorb
iret
jmp
pop
mov
push
ret
push
scas
xor
add
add
mov
dec
bnd
movsl
add
mov
lahf
and
nop
add
in
jmp
ffree
adc
je
outsl
cmp
sub
popl
inc
adc
inc
fistl
xlat
inc
lea
shll
jbe
test
stc
jge
adc
das
mov
testb
out
dec
dec
stos
cmp
iret
xchg
jno
add
je
dec
mov
popf
jae
jl
cmp
lds
sbb
cli
pop
inc
dec
andl
nop
cmp
jnp
shrl
ljmp
inc
adc
push
and
jl
mov
add
ret
shrl
in
es
lcall
out
adc
add
dec
add
cmp
ds
xor
popf
ja
inc
add
pop
and
mov
push
rcll
sbb
loopne
in
mov
inc
popa
push
mov
sbb
push
push
or
adc
add
popa
jnp
cmp
xchg
lods
stc
jno
lods
cs
adc
movsl
mov
push
scas
sbb
inc
movsl
jg
loopne
jmp
xor
rcrb
call
and
in
or
data16
ljmp
mov
test
jl
in
mov
lds
pop
std
loope
ret
xchg
or
and
je
lods
sbb
jno
sub
mov
and
mov
call
fists
ja
rorl
sahf
daa
sarb
mov
dec
mov
js
aas
lahf
shl
pop
add
fs
sbb
jbe
lods
jb
dec
mov
pop
mov
mov
out
lcall
mov
pop
adc
jbe
pop
fcomi
mov
push
andl
and
ja
and
xor
fistl
rolb
ja
and
repnz
push
loopne
movsb
fcmovb
mov
fisttpl
mov
rcrl
cmc
xchg
add
jnp
mov
dec
cmc
in
sbb
addl
daa
xor
sbb
dec
inc
mov
das
jb
jb
shll
jns
ja
jecxz
movsl
jns
pmaddwd
mov
xor
xor
insb
pop
mov
lahf
pop
sti
mov
cld
push
push
mov
ljmp
jo
lock
ja
inc
mov
and
lcall
in
cmp
add
or
mov
call
dec
mov
sti
mov
push
ljmp
pop
xchg
out
jae
cld
ficompl
mov
roll
mov
and
dec
push
lds
push
xchg
xchg
mov
xlat
jnp
sti
ret
stos
add
dec
ret
insl
dec
dec
mov
sub
inc
fisttps
psubsw
pop
mov
push
into
enter
mov
jno
ud0
lods
in
push
pop
cmp
pusha
sbb
repz
test
aas
dec
push
mov
jbe
mov
scas
push
mov
cltd
popa
dec
jmp
stc
cmp
scas
fwait
cltd
jl
add
gs
and
ret
or
ja
mov
roll
xor
pop
mov
sbb
mov
cmpsb
aad
dec
jbe
xchg
push
xor
cmc
dec
mov
jo
pusha
push
or
stc
mov
adcb
mov
sub
push
adc
mov
pop
jns
mov
push
shrb
sub
leave
dec
push
repz
arpl
stos
hlt
adc
jbe
loope
or
mov
clc
mov
dec
out
mov
and
std
les
push
lret
stos
or
push
jmp
js
int3
aam
imul
mov
inc
sbb
loopne
pushf
sub
sbb
lret
xor
inc
mov
les
out
mov
mov
rcrl
jae
test
pop
test
sub
adc
stos
or
lret
push
mov
push
inc
fimull
cmc
dec
cltd
push
jb
rcrb
mov
mov
cli
fistpl
int
or
push
push
in
ljmp
sbb
cltd
lret
dec
cmc
sub
pop
std
dec
sbb
push
int
dec
push
lock
scas
dec
sub
pop
ja
mov
test
es
xchg
dec
push
add
mov
cmp
sub
mov
lcall
jle
jl
loopne
mov
push
mov
mov
sub
lock
mov
inc
test
mov
fstpl
push
bound
les
adc
in
mov
mov
popf
mov
sti
mov
xor
cltd
mov
jg
sub
dec
sbb
fsubrl
add
xlat
hlt
arpl
dec
pop
inc
fdivl
imul
or
dec
push
mov
cli
push
scas
outsb
js
clc
mov
movsb
xor
inc
movsl
insb
stos
adc
push
inc
es
cmpb
pop
jo
mov
ja
cmp
mov
push
push
test
ret
or
testb
insb
lret
pop
pop
cmp
iret
and
pop
push
icebp
cs
adc
xchg
add
mov
adc
mov
mov
popf
inc
notl
std
ja
mov
cld
mov
or
mov
ja
cltd
fxch
xor
sarb
mov
add
sti
mov
imul
push
ret
jo
imul
cmpsl
jb
dec
or
mov
ret
fadds
inc
fistpl
and
mov
push
fcompl
imul
data16
push
nop
adc
and
add
ficompl
fwait
or
rcll
mov
push
popa
cmp
scas
sub
test
pusha
dec
out
lea
sbb
sub
aas
dec
dec
mov
and
aam
test
inc
lods
push
and
inc
pop
movsb
xchg
out
fsubrp
and
xchg
std
xor
inc
dec
xlat
push
pushf
es
inc
jbe
imul
mov
mov
es
idivl
add
push
mov
pop
test
ja
mov
pop
mov
sbb
pop
xchg
sbb
sbb
insb
imul
int
pushf
jg
int
repz
xor
or
movsb
cmpsb
add
dec
cltd
addr16
arpl
sub
jae
out
ret
cmp
icebp
pushf
ficoml
iret
test
push
ret
push
mov
ret
fwait
xchg
out
ljmp
mov
push
inc
jge
fs
jnp
mov
xchg
sub
mov
dec
fcom
arpl
das
mov
push
nop
mov
into
cli
jno
push
scas
mov
push
xchg
sub
inc
inc
dec
test
out
pop
mov
xor
mov
loope
sub
lret
push
test
jg
dec
jae
repnz
inc
xor
mov
adc
inc
pop
mov
ja
fiaddl
jge
pusha
jno
inc
add
push
dec
pop
jno
ljmp
fsub
dec
fsubr
xchg
inc
les
fwait
scas
ret
ds
xor
and
decl
fnstsw
inc
sub
jg
push
cltd
pop
mov
mov
lahf
insb
vpaddw
jmp
testb
in
or
xchg
add
pop
stos
jl
stos
xchg
std
cmp
adc
inc
cmp
dec
xlat
mov
sbb
mov
mov
sub
pushf
pusha
movsb
xchg
test
xchg
sub
sub
sbb
push
dec
enter
jl
out
cmp
and
lea
lds
xchg
outsl
shll
ljmp
jmp
je
sub
and
stos
lods
adc
mov
dec
inc
lods
push
aaa
mov
jb
cmp
jo
push
sbb
jmp
ficompl
loope
pop
fistps
shrl
inc
lret
pop
xor
mov
into
mov
std
arpl
sti
push
aas
pop
test
movsb
inc
inc
iret
add
sahf
sbb
ret
cmpsl
out
mov
or
push
cmp
sbb
imul
ret
pushf
and
adc
dec
insb
sti
adc
and
mov
or
repnz
mov
push
jecxz
jp
scas
mov
out
out
movsb
pop
push
xor
loop
pop
sbb
inc
scas
pop
xchg
jbe
jp
mov
inc
enter
pop
xchg
sub
outsb
adc
sbb
or
sbb
cmp
mov
lock
repz
insb
jnp
sub
fs
cmp
and
xorb
dec
mov
pop
jmp
xchg
lock
inc
fadds
lcall
imul
neg
mov
jnp
dec
mov
cmp
stos
fnstcw
repz
fdiv
jle
cmp
paddb
xchg
jg
andb
jg
fs
push
ficompl
add
mov
rcr
std
jno
and
xor
ss
dec
adc
jl
lret
rol
jmp
loope
adc
sbb
or
mov
adc
inc
jmp
sbb
leave
mov
notb
add
data16
out
jmp
div
and
lods
pop
inc
mov
test
push
sbb
jbe
xor
scas
nop
stos
dec
push
rcr
mov
dec
and
cli
iret
icebp
loopne
push
popa
psubb
inc
sbb
mov
jmp
and
fmull
imul
inc
dec
call
into
fcomip
push
test
popa
iret
nop
sub
cmp
inc
scas
daa
fiaddl
push
inc
mov
divl
jl
insl
cld
scas
lret
jg
sbbl
out
push
xor
andnps
test
cmpb
sub
shll
pushf
fistpll
dec
and
imul
fiadds
inc
int
sarl
sbb
or
pop
icebp
fs
repz
shr
inc
fldt
adc
mov
dec
mov
sub
out
icebp
lods
xchg
ficoml
inc
add
arpl
inc
add
stc
sbb
clc
pop
pop
cmpsb
mov
cltd
mov
xchg
movsb
scas
shll
xchg
mov
aam
adc
enter
mov
and
pop
cmpsl
jb
mov
sub
mov
push
xchg
jno
ret
adc
imul
mov
adc
imul
cli
pushf
push
push
mov
aam
imul
leave
sbb
lret
mov
mov
sub
leave
call
into
jmp
push
xlat
push
fwait
daa
inc
das
or
daa
subl
pop
jmp
pop
sub
je
mov
vdivps
sbb
sub
out
sbb
inc
mov
cmp
adc
xorl
mov
enter
dec
nop
jmp
and
inc
and
push
cmc
es
insb
mov
mov
xchg
xchg
inc
stos
sub
jp
fiadds
push
cmc
pop
xor
dec
mov
and
xor
pushf
sbb
push
or
and
ja
in
movsb
clc
inc
push
pmaxsw
js
inc
mov
inc
push
imul
mov
in
inc
dec
outsl
sbb
pop
movsl
loopne
in
push
fwait
add
sti
mov
mov
and
imul
std
adc
fists
pop
cld
mov
je
cmp
repz
mov
loope
mov
and
mulb
mov
notb
pop
fsubrs
inc
or
lds
xor
repz
lea
data16
mov
stos
out
inc
es
and
out
add
mov
or
stos
jmp
or
pop
faddl
sbb
ds
mov
je
cmpsb
sub
pop
jle
lret
adcl
fiaddl
mov
shrl
jb
add
loop
pop
dec
inc
jecxz
aas
and
negb
mov
push
xor
push
sub
and
dec
sub
push
repnz
dec
pop
cmp
aam
jnp,pn
movsl
pop
ja
push
pushf
mov
loop
pop
push
mov
cmp
inc
fmull
push
or
sbb
cmpsl
insb
adc
push
dec
out
sti
mov
push
xor
lcall
or
sub
fidivrs
insl
add
pop
mov
loopne
or
pusha
das
push
and
test
imull
das
cltd
mov
lea
mov
and
ja
sub
sbb
pop
adc
add
in
ds
pop
dec
mov
sti
push
scas
loopne
pop
flds
mov
mov
jno
pop
sbb
lock
cmc
fisubs
inc
test
sub
sti
cmp
shr
xchg
aaa
iret
stc
mov
mov
test
rorl
mov
mov
jns
adc
mov
cmpsl
shll
test
push
sbbb
inc
inc
or
cld
jae
sbb
cmp
cli
and
dec
test
aad
sub
aas
testb
jmp
ffreep
cmp
inc
push
pop
fwait
sbb
loopne
bound
cmpsb
je
jl
ja
out
faddl
cmp
sub
fstpl
push
xchg
daa
pop
mov
adc
mov
jg
jge
popa
dec
jmp
ljmp
xlat
lret
pop
stos
hlt
sbb
out
mov
push
inc
dec
es
ret
icebp
inc
call
mov
xor
adc
pushf
mov
cmp
fldcw
iret
fwait
adc
cmp
punpckhwd
or
stc
repz
scas
fimull
xchg
dec
stos
push
int
push
iret
dec
and
clc
cmp
push
jnp
je
pushf
and
xchg
sbbb
out
lret
push
mov
out
addr16
mov
jge
lods
and
jbe
daa
out
sbb
mov
notb
rclb
mov
dec
adc
pop
stos
das
sbb
fwait
mov
mov
or
jb
std
adc
nop
insl
mov
sbb
movsl
pusha
mov
ljmp
adc
push
repz
pop
add
push
inc
fmull
jns
es
shll
push
xchg
cmp
cwtl
pop
cmp
popf
xchg
insb
mov
sbb
roll
cmp
push
pop
rclb
sbb
mov
adc
jne
mov
push
sub
out
cmc
and
mov
cwtl
add
push
add
je
push
adc
insb
pop
dec
iret
adc
movsb
mov
jne
pop
mov
inc
push
mov
xchg
ss
dec
mov
jne
das
sbb
add
pop
sbb
adc
ljmp
movsb
sub
das
jbe
jbe
mov
inc
pushf
repnz
pop
dec
mov
fdivrs
jmp
fdivp
jl
push
mov
mov
hlt
and
xor
push
adc
repz
inc
loopne
fsub
out
mov
xchg
jmp
mov
out
int
loop
cmp
test
mov
xorl
jg
cmc
jnp
push
fdivl
push
dec
mov
adc
jno
add
cmc
push
jl
xchg
jbe
lret
ret
les
sub
xor
icebp
out
fcmovnb
or
xor
ret
cli
adc
and
inc
shl
mov
call
aam
sbb
sbb
adc
gs
inc
inc
imul
or
cmovge
test
sti
sub
mov
push
pop
pushf
and
xchg
mov
dec
push
cmpsl
mov
test
fnstcw
push
movb
les
popf
cltd
filds
icebp
out
push
jmp
loope
in
add
jmp
outsl
cmpb
sbb
ljmp
fcmovu
fdivrp
cltd
jl
xchg
fcomps
cmp
ret
ds
cs
jnp
mov
out
test
insb
mov
das
aam
fwait
jl
xchg
je
mov
and
mov
dec
push
pushl
jno
lahf
roll
pusha
dec
sbb
jbe
push
jae
dec
jg
push
into
mov
pop
xor
mov
mov
out
push
sbb
sbb
js
jb
pop
sti
adc
pop
push
inc
and
jg
in
and
imul
lcall
dec
pop
cmp
push
andb
jno
cmpsb
push
cwtl
fmuls
mov
sub
movsb
mov
cmp
pop
ds
inc
pop
sub
ret
clc
sarl
arpl
push
stos
fwait
outsb
cs
inc
bound
sub
xchg
mov
jle
ret
mov
mulb
mov
xchg
mov
cwtl
fdivl
xlat
data16
cmp
es
push
loope
jb
push
push
addb
jbe
jle
push
cmp
sti
popa
stos
cli
push
rolb
int3
and
stc
or
fwait
int
lea
push
sub
inc
xlat
jg
enter
jp
or
mov
xchg
sub
clc
and
call
push
jmp
fs
mov
or
cwtl
adcb
mov
or
icebp
call
push
ja
mov
movsb
or
adc
fisttpl
insb
and
es
add
pop
push
lock
sub
fs
lods
xor
dec
inc
loopne
adc
or
push
jl
dec
sub
xchg
lahf
adc
xchg
idivl
push
iret
and
adcb
shrl
adc
jg
je
pop
jl
xchg
aam
out
scas
pop
push
loope
jp
push
mov
dec
add
inc
push
sahf
scas
pop
leave
or
imul
cmp
sub
insb
push
loopne
shlb
push
adc
insb
jae
sub
pop
fdivr
adc
out
add
call
cmc
jno
fstps
scas
inc
pop
mov
or
scas
jo
add
lea
imul
stos
lcall
push
aad
in
pop
xchg
sub
stos
negl
movsl
xchg
lods
jne
js
push
fcmovb
sti
mov
push
mov
sbb
sbb
push
mov
push
pop
jo
push
push
clc
inc
lds
lret
xor
sbb
mov
sub
mov
mov
test
sbb
push
nop
inc
fucomi
cwtl
inc
mov
add
push
push
cmp
dec
mov
cmp
push
and
mov
dec
mov
into
sub
mov
popf
das
test
dec
sbb
jg
xchg
movsl
push
mov
or
pop
adc
test
mov
fucomip
push
rolb
mov
cmc
gs
lds
loop
cwtl
das
mov
addl
xor
sub
mov
pop
push
push
mov
imul
loopne
es
gs
push
lods
fildl
pop
fwait
pushf
inc
xchg
ss
into
push
insb
scas
vmovsd
pop
cmp
fistpll
fcoms
jp
xchg
sbb
icebp
pop
inc
push
lock
movsb
xchg
push
mov
pop
lods
jae
xor
sub
cltd
push
pop
push
or
jg
mov
ret
sahf
jnp
cld
dec
mov
rorb
and
jnp
pop
jns
gs
loope
sub
into
imul
mov
add
cmp
push
jne
xchg
xchg
or
das
inc
xor
cld
jno
in
xchg
ja
rcpps
mov
inc
push
or
ja
test
je
inc
mov
daa
cmp
into
inc
jnp
dec
push
addr16
fdiv
mov
stc
xchg
pop
and
mov
xor
push
mov
dec
sti
out
adc
cltd
sbb
insb
xchg
push
inc
mov
mov
jle
sbb
xchg
and
pop
shr
xor
mov
cmpsb
pop
mov
push
addb
sarb
mov
sbb
mov
out
mov
ja
pushf
cmp
ret
in
repz
sbb
into
inc
sti
fisttpl
outsl
popf
cld
dec
std
scas
daa
rclb
sti
cmp
inc
or
mov
mov
xlat
int
pop
jl
sub
xor
enter
adc
rclb
xor
insl
pop
dec
push
ret
sub
inc
adc
pushf
push
das
js
sub
and
out
popf
fiaddl
test
pop
mov
in
pop
mov
cmpsl
stos
movsb
and
je
mov
pop
inc
shl
jbe
iret
xchg
cwtl
data16
dec
repz
cmp
push
pop
jae
or
outsb
xchg
add
dec
add
cmp
sub
mov
add
mov
insb
mov
aam
mov
jns
or
mov
pop
mov
jno
mov
jae
mov
call
sbb
repz
lods
addl
cmp
inc
jecxz
xchg
mov
sbb
mov
add
mov
dec
jl
push
inc
out
std
or
out
std
jp
jmp
mov
rcl
movsb
push
adc
dec
and
cmp
xor
mov
jmp
out
mov
xor
add
xchg
fsubrs
daa
and
mov
loop
and
aad
aad
lret
pop
or
push
mov
jb
movsb
xchg
inc
js
pop
xor
or
cmp
mov
stos
xchg
inc
addb
mov
xchg
add
mov
inc
mov
in
int3
out
xchg
sti
jb
mov
dec
lods
outsb
jmp
stc
xchg
or
hlt
subl
fcoms
ljmp
pop
xchg
faddl
adc
ret
test
repz
jns
pop
or
repz
jnp
addb
push
lret
out
push
mov
cmp
jle
mov
mov
mov
cwtl
cltd
mov
push
pop
loope
aad
mov
add
push
daa
and
mov
mov
push
lock
push
or
mov
fimull
std
push
outsl
sub
lret
cmc
sub
dec
test
xchg
fs
pop
adc
dec
cltd
dec
lret
scas
cmp
add
sar
jbe
in
inc
enter
out
dec
inc
in
push
scas
test
dec
mov
mov
adc
sarb
adc
in
arpl
out
int
sbb
movsb
jb
add
fs
jg
xlat
repnz
xlat
mov
fidivs
aad
fisubl
inc
fxch
test
enter
cmp
stos
adc
or
jg
jbe
sub
and
push
and
xlat
inc
movsb
push
shl
add
inc
xorl
lds
mov
fiaddl
dec
inc
sbb
dec
mov
mov
sbb
jmp
hlt
ficoml
pop
pop
std
pushf
mov
cmpl
imul
pop
sbb
xchg
sti
add
xor
mov
aaa
cmp
cld
cltd
jmp
inc
mov
lret
push
jno
cmc
adc
dec
imul
out
mov
pop
jbe
xor
adc
ret
insb
pusha
shl
xchg
cmp
sub
cwtl
cmp
push
push
cmp
and
jbe
push
push
inc
mov
cld
es
mov
inc
andl
mov
jo
mov
jae
std
imul
cltd
mov
pop
mov
pop
xchg
sbb
lds
rcl
or
lahf
fcomps
xchg
pop
dec
inc
jbe
xor
ficoml
cmp
and
adc
xchg
jecxz
lds
mov
sbb
mov
jg
icebp
or
or
scas
xchg
bnd
xor
lds
jne
jle
mov
jecxz
mov
or
hlt
mov
lock
aam
sbb
daa
mov
mov
shl
inc
aam
or
pop
loopne
jae
sub
inc
mov
inc
xor
jmp
stc
pop
mov
mov
leave
lods
pop
imul
imul
push
lahf
pop
enter
add
mov
pop
jae
test
or
mov
mov
cmpsl
pop
jb
adc
adc
or
into
mov
test
inc
in
test
into
arpl
arpl
push
sahf
adc
jb
mov
cmp
scas
push
int3
push
pop
ss
mov
aad
push
lods
mov
iret
insl
fcmovnu
and
push
dec
inc
divl
cltd
lret
cmp
icebp
into
ficoml
shll
jb
xor
sti
test
dec
pop
adc
sahf
dec
xor
daa
je
cmp
jmp
dec
mov
push
mov
mov
sbb
out
xchg
popf
loope
int
dec
mov
dec
insl
or
shlb
inc
int
dec
cld
movsl
sub
imul
and
cmpsb
xlat
sbb
add
mov
sbb
pusha
or
fxch
ss
cmp
push
xlat
mov
jne
inc
cmp
fdivrs
int3
mov
add
dec
sub
sbb
idivb
push
fisttpl
sub
lds
adcb
mov
inc
jns
mov
xchg
mov
mov
pop
mov
clc
stos
push
aas
add
push
shlb
lock
jns
push
out
xor
in
xor
pop
xor
pop
cmp
mov
xchg
out
stc
xchg
in
xor
stos
lock
jle
inc
into
fisttpll
ficompl
outsb
dec
or
cmp
jg
lret
cmpsb
inc
push
mov
lods
adc
stc
xchg
mov
push
push
out
mov
pop
shll
std
pop
pop
push
addr16
mov
and
loop
int
mov
adc
jmp
cmc
adc
sub
jnp
popf
dec
arpl
pushl
fstp
xor
lds
testl
add
shr
popf
js
sub
outsb
and
dec
cwtl
mov
mov
and
aad
aam
test
out
inc
mov
inc
in
repnz
rolb
cs
cmp
scas
jbe
or
rorb
xor
dec
pop
loop
dec
outsl
mov
pop
sbb
pop
sti
fisttpl
dec
xchg
flds
rorb
aaa
subl
mov
mov
fwait
cmc
mov
shll
push
out
sarb
pop
shrb
lea
fdivr
fwait
and
std
in
fs
cli
mov
dec
inc
mov
cmpsl
out
dec
stos
adc
pop
sub
push
and
inc
sahf
xor
fdivrl
daa
inc
les
xchg
pop
push
mov
inc
inc
ljmp
or
iret
xor
xor
test
fldcw
aam
leave
pop
insb
push
sbb
lds
in
inc
mov
in
push
jge,pt
sub
sub
cmpsl
fsubr
mov
mov
cld
mov
sub
xchg
inc
inc
loope
cwtl
or
push
add
frstor
jnp
xchg
sti
nop
or
les
stc
movsb
mov
dec
dec
mov
sbb
arpl
lret
imul
and
add
push
push
test
int3
fimuls
cld
xor
cmp
mov
add
inc
ljmp
aad
add
adc
cmp
adc
daa
mov
or
and
ss
xor
in
sub
xlat
aam
or
sub
shl
fwait
inc
mov
es
inc
loope
lea
in
xchg
mov
lea
out
orb
movsl
repnz
add
add
jg
mov
mov
rorb
popf
test
mov
inc
push
add
or
xlat
aad
sbb
fucomi
inc
or
and
jbe
jae
jl
jno
arpl
jae,pt
sbb
sbb
sbb
jg
pop
insb
cmp
mov
push
pop
jne
or
push
pop
mov
xor
add
out
cmp
lret
sti
lahf
dec
icebp
mov
out
xchg
out
mov
push
out
fdivrp
rolb
sbb
popf
pop
push
push
add
jg
jl
arpl
leave
push
dec
loopne
lcall
jns
cld
mov
clc
push
add
xlat
mov
pop
xor
mov
dec
xchg
inc
pop
jl
aad
mov
xchg
xchg
push
add
jg
rcrb
inc
inc
mov
or
jp
push
lea
sbb
arpl
xchg
push
mov
mov
fcomp
pop
push
inc
xor
test
push
rol
adc
xchg
ret
jno
jp
into
adc
repnz
push
add
lcall
sti
pop
inc
imul
in
shlb
mov
and
cmp
dec
mov
xor
xchg
pusha
xor
es
dec
mov
mov
mov
cmp
mov
jae
dec
mov
loopne
in
lods
mov
and
xrelease
mov
mov
mov
inc
adc
adc
jne
mov
dec
pop
aam
icebp
lcall
sbb
sub
dec
js
cmpsl
mov
int3
xlat
dec
out
test
scas
dec
add
test
iret
movb
repz
jl
ficompl
add
outsl
or
fs
pop
cltd
or
insl
and
shll
popa
mov
and
aam
sub
jmp
cmp
js
mov
jg
repnz
test
nop
add
xchg
lret
push
aad
lret
jl
mov
int3
fmuls
lcall
jl
dec
iret
jg
in
sub
push
mov
es
mov
enter
mov
mov
adc
cltd
push
cmp
pusha
mov
add
cmp
jp
cmpsb
adc
test
wrmsr
inc
or
xchg
push
jle
fldpi
cmp
stc
cs
push
idivl
push
pop
mov
mov
lods
add
dec
jnp
inc
out
jecxz
sbb
jae
subb
fnstsw
lret
pop
xor
jmp
fdivrs
jne
sub
pop
movsb
jl
xchg
movups
pop
and
and
test
fnstsw
mov
xor
jecxz
daa
das
push
shrb
jns
data16
in
je
sbb
mov
es
mov
lret
es
jmp
call
sahf
pop
mov
add
jge
push
popf
int3
rcrb
inc
lcall
jno
fisubl
or
in
sti
cmp
jmp
push
xor
sub
gs
xor
stc
fdiv
stc
jl
fstpt
jmp
dec
movsl
out
in
mov
jle
xor
xchg
fistpl
ljmp
push
iret
decl
fildl
fdivrs
hlt
std
fidivl
inc
push
fimull
cmp
insl
icebp
out
adc
xchg
adc
inc
adc
xor
xor
inc
iret
push
sahf
adc
stos
cld
jl
or
dec
incb
dec
dec
out
ljmp
push
jns
pop
jg
or
push
iret
adc
sub
push
in
iret
mov
adc
movsb
movsl
bound
das
out
aam
dec
rcrb
pop
or
push
jl
inc
mov
or
mov
outsl
and
decl
jl
or
out
icebp
adc
mov
pusha
xor
dec
stos
imul
cmove
pop
ret
mov
adc
outsl
imul
inc
rcrb
mov
pop
add
cli
mov
mov
adc
jbe
out
dec
xor
hlt
sar
inc
movups
mov
out
jbe
pop
push
in
push
sti
mov
xchg
pusha
sbb
lret
dec
or
call
dec
cwtl
das
icebp
bnd
xor
dec
lret
mov
inc
faddl
aam
iret
jmp
jns
mov
cmp
es
inc
lods
fisttpll
or
aaa
fwait
sub
fcom
cmc
push
lea
out
movsl
rol
inc
sbb
bound
shrl
inc
xchg
mov
jnp
inc
scas
data16
dec
loope
mov
ljmp
test
adc
inc
push
movsb
lret
pusha
pop
jmp
jbe
clc
imul
push
push
shrl
cmp
jnp
std
lock
add
insb
rorb
mov
cltd
and
add
out
cmp
mov
jnp
jne
adc
pop
add
int3
sti
fs
icebp
add
ja
fdivr
mov
out
sbb
insb
jl
xchg
push
sbb
or
sbb
jno
cmp
dec
fidivrl
ret
and
int
jle
xlat
sub
iret
inc
inc
jae
push
push
mov
inc
pop
testl
and
rcrb
imul
cli
or
push
and
pop
faddl
iret
mov
cmp
icebp
adc
and
cmpsl
jnp
pop
mov
shll
pusha
dec
fcmovu
xchg
pop
aad
insb
cmc
clc
mov
js
push
in
sbb
lods
add
inc
cs
cmp
mov
popa
dec
xchg
out
pop
adc
shl
mov
rorb
mov
pushf
jnp
gs
cwtl
or
stos
pop
fmuls
pop
sti
add
dec
push
pop
out
add
sahf
jb
or
sbb
jne
mov
jae
lock
pop
push
jns
adcl
add
cltd
push
loopne
sbb
sbb
je
xchg
lods
cltd
push
adcb
ret
pop
fmull
jl
push
ja
push
mov
lock
mov
sub
mov
ret
mov
stc
lret
in
pop
cli
ljmp
decb
pusha
fwait
in
adc
pushf
jge
mov
adc
xchg
lods
add
and
out
push
dec
repz
ja
aam
inc
ficompl
add
inc
ds
cltd
or
shlb
lret
xchg
stos
scas
pop
sub
mov
ja
repz
jmp
jae
xor
jnp
dec
iret
out
sbbb
and
sti
jge
fidivl
in
stc
push
mov
rorl
adc
sub
mov
mov
inc
bound
idivb
mov
or
jg
cmc
sbb
and
in
push
lods
pusha
mov
lods
dec
or
repnz
jno
cmp
inc
loopne
stos
incl
in
stos
in
xchg
or
loope
bound
dec
lods
dec
rcr
mov
dec
sbb
imul
fwait
dec
loope
movsl
dec
test
fidivl
fdivp
fwait
ljmp
rcrl
imul
rcr
bound
mov
orb
sub
cli
xor
int
adc
mov
neg
gs
arpl
sub
or
xor
xor
ja
mov
ja
sub
and
cmp
cmp
mov
pop
pop
loop
sarl
ljmp
push
xor
cmp
dec
or
push
add
ret
int
repnz
aam
imul
add
push
xchg
mov
lods
mov
jns
movsb
xchg
fisttpll
or
add
inc
pop
or
and
push
bound
sub
imul
and
sub
out
mov
push
pop
sbb
sahf
and
testl
hlt
mov
add
iretw
sub
clc
dec
int
lret
dec
loop
jecxz
add
arpl
pop
pop
int
mov
movsl
pmuludq
mov
xor
lds
and
in
mov
iret
test
inc
pop
push
add
sub
out
sub
adc
enter
xchg
add
lea
std
scas
push
scas
mov
inc
es
pop
in
insl
lods
cmpsb
and
imul
xchg
jnp
push
ss
pop
insb
ljmp
adc
mov
lret
add
and
sbb
dec
popl
divl
inc
or
push
lcall
addr16
fwait
out
nop
pop
in
mov
addr16
dec
je
jb
xor
sarb
cmp
ds
mov
cmpsb
pop
dec
add
mov
data16
in
std
cmp
notb
out
and
sarl
or
push
and
fisttpll
inc
adc
add
mov
mov
mov
in
adc
or
mov
cmp
dec
icebp
mov
test
add
pop
jns
je
pop
dec
popf
mov
pop
push
mov
dec
push
mov
ja
les
sub
mov
lods
sbb
loop
add
call
rorb
jmp
test
xchg
xchg
sub
iret
mov
ret
repnz
jno
jecxz
cmp
inc
sub
lret
cmp
aad
and
lret
cmp
sbb
int3
xor
ret
sti
ret
pop
fisttpl
dec
scas
add
hlt
aam
test
fwait
and
icebp
inc
sub
inc
add
mov
jb
jmp
jp
mov
jae
ss
xor
outsb
push
mov
ds
sbb
aam
fwait
nop
out
orb
arpl
test
adc
outsl
out
cmp
scas
test
jb
sti
sbb
ds
jns
rorb
mov
sub
das
jnp
jbe
adc
popf
fmull
dec
or
cmp
dec
lret
arpl
nop
adc
inc
or
mov
add
push
add
repnz
xchg
sbb
and
and
and
mov
pop
fs
add
lret
mov
popf
sub
lret
or
pop
es
cs
pop
cmp
push
mov
repnz
and
inc
jl
push
iret
cmc
jg
push
data16
mov
pop
mov
inc
adc
rcr
inc
fwait
pushf
or
cmp
inc
mov
sbb
imul
fidivs
ja
js
loopne
mov
andb
repz
xor
jnp
btc
mov
jecxz
adc
cmp
mov
pop
movsl
mov
jbe
arpl
dec
pop
repz
mov
push
mov
adc
rcll
push
mov
pop
and
jge
jo
mov
jno
and
pop
push
jno
adc
dec
in
adc
jle
mov
or
jl
outsb
jl
mov
notb
xor
jae
adc
into
movsl
xor
out
ss
es
adc
pop
push
test
sti
lret
cwtl
ss
jecxz
imul
mull
loop
cs
mov
inc
into
daa
mov
leave
xor
mov
shrl
pusha
out
sub
jb
ss
pop
and
xchg
mov
lret
test
stc
jae
xlat
lea
loope,pt
cmp
fwait
test
mov
popf
pusha
out
cmc
rclb
sti
jg
xor
out
sbb
test
push
sarb
mov
pop
fstp
mov
js
jns
mov
ljmp
mov
rcrb
popf
jmp
cmp
movl
and
imul
sbb
fisttpl
ljmp
out
cld
adc
push
stos
dec
pop
pop
jns
xchg
lea
orb
mov
mov
orl
xor
leave
pop
int
mov
xlat
sbb
ja
cld
je
mov
cmpb
and
lret
hlt
mov
popl
sbb
loop
push
mov
sbb
mov
xchg
out
and
or
div
mov
bound
cmp
jne
or
cmp
or
in
jg
sbb
sub
push
outsb
mov
push
lret
adc
rol
clc
nop
fldt
push
mov
xchg
cmp
inc
add
in
jnp
data16
aad
mov
inc
jg
jle
fbld
repz
fsubl
jns
mov
fsubl
jo
gs
inc
mov
jg
addr16
mov
inc
adc
jno
dec
ficoml
mov
jno
add
cli
sub
mov
or
xchg
cmp
dec
clc
das
sbbb
je
inc
mov
sub
xor
cmc
gs
push
fbstp
sbb
lods
mov
mov
mov
test
jo
lcall
fwait
mov
sbb
iret
and
mov
incb
sarb
push
xor
movsb
repz
jae
mov
sbb
xor
jae
imul
mov
or
mov
test
pop
push
into
dec
push
roll
mov
sbb
fs
sub
push
xor
jae
shlb
sbb
pop
rcrl
call
cmpsl
pusha
adc
mov
and
rorb
sti
fwait
sar
cwtd
xor
or
jle
mov
xchg
into
out
fstps
mov
cs
fneni(8087
dec
imul
enter
pop
mov
fmuls
cmpsl
movsb
pop
lret
incb
in
jno
push
test
divb
sbbb
mov
in
mov
movsl
sub
call
dec
aad
add
loopne
addl
sub
mov
fwait
aad
test
test
pop
jmp
daa
adc
cmpsb
cmpsb
or
inc
jno
push
jg
int
faddl
fs
rolb
pop
push
xchg
stc
inc
mov
fwait
mov
sahf
xor
mov
inc
imul
inc
jae
lcall
test
or
dec
mov
cmpl
outsl
xchg
dec
mov
ret
jmp
je
lret
mov
pop
jno
push
mov
out
sbb
aas
repz
cltd
shrl
outsb
add
popf
mov
cmpsb
clc
cmp
int3
mov
loopne
inc
jae
xor
lcall
sar
sti
jp
hlt
sbb
mov
out
aad
pop
mov
test
adc
cmp
shll
sbb
inc
mov
sbb
movsl
in
pop
sub
sub
in
fisttpl
xor
mov
mov
cmp
repz
fistpl
sbb
or
xor
inc
push
adc
jae
int
jg
ret
mov
dec
clc
and
cmp
and
test
pop
daa
jl
add
jae
iret
jg
mov
sub
sbb
ret
sub
movsb
lahf
inc
jl
push
dec
repz
mov
xchg
fwait
xchg
add
sub
mov
sub
and
push
mov
jb
outsb
adc
and
mov
pushf
int3
pusha
push
sub
add
shll
xor
and
loopne
mov
out
mov
lahf
lods
cltd
xchg
inc
pop
sbb
push
push
and
sub
mov
aas
xlat
gs
fwait
mov
push
test
outsb
mov
push
in
xchg
mov
sbbb
movsl
dec
int
int3
push
addr16
mov
out
cmp
add
xchg
rorb
inc
inc
mov
lods
inc
push
repz
loopne
push
xchg
in
lea
mov
pop
ret
mov
inc
xchg
inc
loopne
ljmp
inc
add
xor
faddl
ljmp
int3
and
xchg
enter
movsb
push
jo
cmc
push
fcmovnbe
inc
xor
push
add
in
push
mov
imul
loope
sub
and
fistl
xchg
mov
inc
pop
scas
jecxz
or
jmp
fcoms
add
in
push
lahf
inc
add
sti
or
int
jae
mov
test
push
xor
mov
mov
sbb
movsl
rcrl
repnz
adc
out
ja
mov
push
cmp
mov
loopne
dec
ret
fsts
decl
jge
cmpsl
mov
out
push
roll
jae
and
out
pop
push
lds
push
xchg
jno
mov
lahf
pop
repnz
push
mov
sub
hlt
fs
cmp
cld
gs
xchg
xchg
pop
mov
pop
mov
nop
push
pop
fimuls
ret
fmul
add
rcll
xor
lods
push
or
and
cmp
fsubl
adc
inc
adc
mov
mov
inc
ficoml
clc
mov
mov
pop
int
and
cmp
inc
insl
popf
push
xor
mov
arpl
or
leave
pop
mov
loop
dec
hlt
cli
or
enter
sbb
scas
fldt
push
jae
sbb
mov
ret
adc
xchg
leave
mov
rclb
push
xchg
pop
testb
jb
jno
fdivrs
cmpsb
cwtl
mov
push
mov
daa
or
movsb
adc
dec
pop
and
jmp
std
scas
and
pop
inc
push
movsl
inc
in
inc
insb
and
dec
or
push
fdiv
bound
push
repz
mov
pop
jl
dec
jnp
insl
push
mov
fcompl
push
push
mov
pop
sub
or
pop
mov
adc
or
rcr
dec
or
mov
xchg
sbb
and
jo
jo
cmpsl
mov
jns
shlb
sahf
testb
rclb
out
movsb
cmp
xor
lret
dec
dec
scas
sbbl
out
roll
into
int
mov
sbb
repnz
rol
movsl
mov
aas
mov
sub
roll
xchg
dec
testl
and
jecxz
push
add
jnp
jno
mov
sbbb
and
push
push
cmp
mov
add
cmp
fisttpll
mov
mov
bound
sbb
fimull
mov
xchg
popa
shrb
daa
mul
or
rclb
jl
test
mov
lahf
add
sub
rolb
call
and
adc
arpl
push
insb
mov
icebp
push
fiadds
jbe
fistl
out
mov
jl
push
adc
push
pop
cld
mov
clc
jle
jae
dec
out
or
mov
enter
nop
int3
dec
push
out
dec
xor
push
jg
fwait
in
inc
push
ss
fldcw
fisubl
pop
outsb
push
xchg
mov
sahf
fwait
xchg
inc
popa
out
push
inc
push
call
xchg
mov
mov
xor
nop
mov
push
test
xchg
fidivl
bound
cltd
inc
call
xor
jae
inc
repnz
scas
repz
dec
sub
add
ret
sbb
add
int
xchg
mov
bound
sbb
scas
into
sbb
lret
ret
dec
or
mov
push
push
ret
les
jp
cmp
sub
dec
andb
sbb
push
xchg
jne
nop
cmp
int3
dec
ljmp
adc
cmpsl
lock
cmpsl
js
xor
and
lret
pop
xchg
pop
sbb
mov
mov
xor
sub
xchg
iret
xlat
jle
jle
xchg
pusha
or
imul
test
mov
mov
cwtl
xor
in
cmp
mov
movl
sti
into
fstpl
inc
mov
shr
xchg
or
mov
rcrb
mov
dec
js
fnstenv
enter
inc
test
mov
push
jns
cs
pop
inc
xor
outsb
sbb
lret
mov
dec
mov
lret
lahf
iret
pop
push
sbb
sbb
stos
enter
out
pop
dec
adc
mov
pop
mov
xlat
jo
pusha
outsb
insl
push
inc
jo
mov
inc
push
ljmp
bound
jbe
data16
jae
movsb
jle
mov
mov
cli
int3
mov
inc
addr16
push
test
jne
test
jg
xor
mov
xchg
shlb
mov
dec
xchg
xor
sbb
test
fisttpll
sarl
out
and
pop
xchg
jl
lods
pushf
inc
mov
loopne
sbb
in
ret
dec
xor
sbb
fwait
movsl
cmpsl
mov
dec
push
loop
add
mov
mov
out
jb
pop
sti
ds
add
fisttpll
jno
movsl
ret
js
shrl
or
xchg
icebp
imul
fsubrs
mov
jns
pop
ds
push
add
pusha
outsl
pusha
adc
in
loopne
push
mov
testl
repnz
jecxz
inc
pop
je
jecxz
mov
fstl
mov
mov
mov
sub
jp
lahf
and
or
xchg
int
jl
cwtl
ds
adc
jg
sub
jne
sub
loop
pop
mov
je
jl
add
xor
fwait
mov
cmp
scas
shr
jge
sbb
imul
repnz
imull
aas
jo
fisttpll
xorl
xchg
mov
arpl
dec
fistpll
lret
mov
sbb
outsb
pop
mov
mov
test
fidivrl
pop
shr
jo
jmp
pusha
sub
jb,pn
sar
int
daa
cmc
aas
lea
lock
nop
repnz
enter
out
mov
ds
popa
xor
or
cs
xchg
not
aad
mov
inc
cmc
dec
inc
mov
mov
rcrb
mov
dec
rcll
stos
out
mov
push
push
test
aaa
dec
sub
insl
fwait
dec
xchg
iret
xor
jge
inc
push
fucomi
lea
lcall
pop
push
mov
cmp
mov
rolb
dec
outsl
push
dec
cmpsl
call
test
push
sti
mov
cmc
inc
sbb
mov
cmpsl
xchg
lea
test
xor
repz
or
fisttps
sbb
mov
mov
out
loopne
mov
push
or
sbb
xor
jg
faddp
aad
xchg
movsb
jl
jl
out
std
cmp
cmpsb
push
mov
push
stos
or
push
xchg
mov
jns
mov
xlat
popf
sbb
xchg
push
jnp
call
arpl
or
cmpsl
mov
add
aad
mov
mov
ljmp
lods
fidivs
hlt
inc
jo
pusha
or
js
adc
je
scas
mov
mov
imul
mov
pop
aas
addr16
lahf
clc
stc
push
das
push
mov
psrlq
lahf
inc
mov
testl
inc
out
sub
lret
fxch
in
ljmp
test
xor
cmp
mov
jg
mov
push
jmp
and
jae
dec
lds
push
xor
das
mov
mov
mov
xor
push
sahf
mov
push
scas
fwait
es
repz
rcrl
push
jp
mov
mov
movsb
adc
sbb
movsl
mov
pop
je
jo
push
lods
jnp
test
in
lock
jmp
adc
sub
push
xchg
sarl
ja
adc
push
push
outsl
in
movups
cmp
sub
jecxz
jmp
or
cmp
fwait
js
arpl
add
xchg
data16
push
mov
insl
sbb
pushf
jb
imul
pop
out
shrb
les
lods
test
in
mov
stos
fcomi
and
clc
ds
cwtl
rcrl
por
stc
push
out
pop
add
leave
add
add
jns
fiadds
mov
ret
adcb
and
les
enter
pop
adcb
insb
outsb
out
ret
ffreep
or
and
and
add
mov
fildll
rcll
mov
shl
pop
ljmp
cmp
out
sub
inc
xchg
xlat
and
out
fisttpll
in
push
into
andl
adc
push
scas
push
in
lcall
insb
imul
cmp
pop
movsl
or
jle
and
mov
lret
inc
dec
mov
add
and
or
mov
pop
stc
enter
or
pop
cs
mov
mov
jae
mov
in
lret
out
inc
mov
popf
movsl
repz
pop
jg
push
aad
fisttps
loope
cmpsl
push
cmp
mov
xchg
push
push
int
xchg
jmp
stc
sbb
inc
rclb
sbb
lock
inc
inc
into
negl
insl
fucomi
call
pop
stc
pushf
cwtl
mov
and
jnp
arpl
fildl
xchg
xor
sub
fisubrs
jae
push
push
pop
mov
lret
cltd
cld
test
mov
faddl
push
add
push
jo
push
jns
or
jg
fbstp
sti
mov
arpl
enter
push
insb
pusha
and
mov
mov
jl
std
sbb
mov
out
std
jns
es
repz
aad
sbb
ja
dec
jmp
push
dec
add
push
xor
pop
fbld
popw
testl
in
inc
mov
shlb
cmp
aam
popa
sub
xchg
cld
movb
mov
stc
sbb
and
push
lods
mov
mov
dec
inc
cmp
dec
jns
push
jmp
push
jbe
push
mov
mov
imul
adc
pop
add
push
adc
pop
pop
lea
sub
dec
loopne
pop
lods
enter
data16
in
mov
push
out
stos
lods
mov
inc
mov
cmp
aaa
test
ret
mov
rcll
daa
cmp
push
sahf
lcall
clc
pop
scas
cld
jg
pop
jmp
gs
lret
mov
lcall
addb
add
popa
dec
cmpsb
or
fdiv
sbb
in
xor
add
rcrl
fwait
aam
data16
jno
pop
adc
icebp
jge
sub
pop
sub
mov
mov
lahf
xchg
mov
iret
adc
arpl
out
into
std
cmp
stc
fists
mov
mov
pop
int
subb
inc
loopne
sub
cmc
testl
push
dec
std
insl
sub
dec
dec
dec
out
movl
fcomi
std
xchg
aas
jnp
or
insb
mov
inc
lcall
fisubrl
sub
inc
add
xor
mov
or
loop
fcoms
mov
pop
add
inc
sbb
cmp
pop
mov
int
lahf
enter
mov
shll
xchg
mov
jl
inc
arpl
inc
repz
popf
pushf
outsb
add
or
int
sub
cmp
pop
bound
shrb
cmp
outsl
ss
insb
fisttpl
pusha
out
push
push
imul
jo
sbb
xchg
dec
sahf
cmp
mov
jno
shlb
icebp
cmpsl
mov
lcall
rorl
xor
mov
call
or
cmp
data16
push
pop
and
add
mov
or
sti
and
pop
adc
cmp
mov
repz
sbb
push
inc
pop
xchg
xchg
and
pop
int
jnp
shll
inc
imul
lahf
mov
scas
xchg
cmp
pop
cvtpi2ps
ret
cmpb
xor
push
mov
and
cmpsl
pop
xchg
mov
arpl
and
dec
std
mov
fwait
cmc
cltd
decl
cmpsl
dec
fistps
out
sub
cltd
arpl
nop
push
sti
jbe
xor
cmpsb
mov
xchg
push
push
mov
aas
mov
inc
pop
insb
std
pop
lret
iret
das
push
pop
clc
gs
test
pop
xchg
mov
movl
shll
test
mov
add
push
mov
cltd
aam
mov
in
js
faddl
jge
jp
out
fisttpll
jb
lds
iret
adc
inc
pop
cmp
negl
mov
jl
mov
inc
push
jae
fwait
sbb
jecxz
mov
jmp
sub
pop
int3
mov
xchg
sub
insb
mov
into
ljmp
repz
sahf
lret
pop
dec
cmp
add
dec
pop
push
lahf
mov
mov
pop
inc
jo
xor
pop
inc
mov
jp
add
cld
sti
adc
rcl
cmc
push
mov
sti
dec
jno
fistpll
sbb
data16
out
in
push
test
shr
mov
cltd
fdivs
ljmpw
pop
ljmp
push
inc
movsl
cmpb
mov
int3
pop
and
adc
imul
fbld
pushf
sbb
dec
mov
shrl
xor
or
and
mov
outsb
mov
dec
pop
mov
cld
push
loopne
aad
cmpsb
add
mov
xor
lea
adc
jae
in
and
jmp
dec
out
rcr
insl
push
mov
inc
adcb
fcoml
or
and
mov
int
add
mov
mov
mov
pop
inc
insb
cld
shll
pop
stos
dec
leave
lock
ja
in
sub
mov
xchg
xor
push
rcll
test
pop
mov
clc
mov
dec
cmpsb
fistl
lret
push
cmp
cli
lods
adc
fs
dec
filds
pop
mov
or
test
loope
lods
roll
loopne
imul
jnp
add
and
inc
and
cmpb
test
or
ja
out
iret
sbb
in
fnsave
movsb
and
cmc
pop
mov
andb
movsb
and
testl
loop
jp
pop
add
out
mov
inc
push
and
sti
push
pmuludq
and
ds
mov
or
arpl
sahf
mov
das
jmp
mov
jno
int3
mov
aas
cmp
lds
cwtl
cs
mov
mov
sahf
popf
decl
test
inc
jp
fcomi
add
adc
clc
jl
cmp
shll
cmp
mov
jg
out
imul
mov
popa
js
es
sbb
repz
sbb
cmp
sarb
dec
push
fiaddl
movsl
jle
outsb
int3
sub
cltd
aam
fs
xor
cltd
add
imul
push
push
mov
and
adc
shlb
cmp
cmp
sub
shll
enter
lret
ds
out
sub
xchg
fisttpl
call
leave
fiaddl
insl
in
push
dec
and
mov
mov
push
mov
pop
cmp
fwait
jnp
push
sbb
rorl
adc
add
and
jg
inc
mov
mov
mov
mov
add
iret
inc
jbe
in
mov
ja
cmp
sub
jne
sbb
push
loopne
movsb
lods
fisttpll
cltd
fidivl
mov
cld
push
mov
jge
fwait
mov
stos
mov
add
stos
pop
push
cmpsb
cmp
inc
sbb
push
cltd
jl
mov
dec
or
push
dec
call
jne
stos
lods
ret
dec
dec
fsubrl
fcoms
gs
adc
loopne
push
mov
mov
lret
enter
mov
jnp
jbe
xchg
xchg
out
fs
loope
xor
pop
cmp
push
pop
or
mov
test
stc
sbb
lea
rorb
out
dec
stos
insl
in
movsb
mov
cmc
popf
into
repnz
loope
dec
in
addr16
jl
xchg
shl
mov
jmp
jno
cmc
jle
push
pop
mov
test
xor
sbb
sub
mov
rep
xor
pop
imul
int
test
or
jg
jle
sbb
add
aad
adc
ret
jg,pn
adcb
dec
iret
or
pop
mov
data16
jo
push
adc
dec
dec
cld
xchg
lret
xlat
loop
fucompp
pop
cmp
outsb
push
ljmp
lea
test
and
pusha
mov
add
dec
mov
xor
loopne
adc
mov
lcall
sbb
popf
imul
mov
in
add
sub
cltd
fwait
and
mov
stc
mov
sbb
fimull
int
sti
pop
push
mov
mov
outsb
jle
adc
inc
jno
pop
flds
cmpsb
hlt
sbb
mov
inc
out
mov
add
std
js
int3
cld
and
inc
jge
loope
push
lcall
cs
shl
mov
sub
push
data16
daa
dec
adc
and
jg
mov
ret
lret
mov
les
jb
xchg
cmp
fildll
lods
sarb
insl
pop
popf
push
mov
xchg
repz
xadd
fwait
out
adc
mov
shlb
lock
rep
test
jmp
xor
sbb
adc
xchg
loopne
mov
cmpsl
mov
icebp
inc
enter
push
pop
imul
into
push
lods
pop
add
inc
jp
pop
mov
fistpll
sub
pusha
stos
add
clc
scas
pop
mov
mov
out
jmp
pop
or
mov
mov
mov
shll
into
lcall
mov
or
outsl
repnz
cld
xchg
decb
mov
inc
push
lcall
cwtl
mov
cmpsb
mov
rclb
or
fcomip
jns
jno
aad
push
das
jp
pop
scas
pop
inc
jnp
dec
push
cmc
xchg
aad
jns
pop
out
testb
cmp
inc
push
rcrl
push
in
hlt
sbb
adc
or
adc
lret
sub
push
and
jp
fwait
mov
aam
jle
or
inc
lret
stos
mov
shll
xor
dec
adc
pop
out
mov
jg
subb
cli
or
push
mov
dec
mov
cmp
insl
push
jno
cwtl
xchg
or
out
xchg
push
add
ret
mov
pop
add
mov
jnp
es
or
inc
jmp
jnp
gs
decb
ficompl
jbe
cmp
mov
add
shll
or
out
sbb
xor
mov
subb
mov
inc
hlt
orl
pop
xchg
seto
push
add
mov
jo
adc
dec
sti
insb
sbb
les
rcr
ss
or
arpl
sti
addr16
dec
or
xor
rorb
pop
sub
sti
add
cmpsl
cmpsb
call
mov
jne
sub
mov
pop
jo
xchg
pop
mov
roll
dec
mov
mov
push
xor
dec
cli
subb
test
lahf
pop
mov
sbb
push
mov
pusha
sbb
push
push
popf
int3
mov
xchg
ja
pop
je
mov
sbb
dec
mov
jnp
mov
push
jge
shr
push
insl
mov
or
push
mov
dec
icebp
mov
mov
and
xchg
xchg
es
jno
stc
rep
adc
jae
push
pushf
inc
mov
push
mov
jg
pop
movsb
es
pop
fbld
popf
ljmp
sbb
push
mov
jl
mov
pop
popf
xchg
inc
pop
hlt
add
push
sub
filds
fisttpl
in
mov
or
cmpsb
lret
jle
insl
rcl
repz
or
sahf
xor
mov
orl
mov
xchg
inc
pop
lock
dec
inc
and
test
adc
ljmp
inc
call
aaa
lods
mov
pop
sub
bnd
cmp
cmpsl
mov
rorb
test
jno
sbb
xor
dec
adcl
fldt
and
dec
fildll
sbb
sbb
push
sub
adc
js
insb
fs
cmp
arpl
movsl
je
push
cmp
sub
jae
adc
push
xor
jae
jecxz
pop
call
sti
sub
sbb
mov
adc
jg
orb
gs
dec
ror
mov
fs
fidivrl
je
mov
pop
inc
mov
xchg
scas
movsb
xlat
clc
orb
push
mov
adc
inc
je
or
ret
push
push
in
xchg
nop
jle
fdivrp
or
aaa
mov
pop
inc
fwait
lea
xchg
jmp
mov
dec
sub
ror
gs
mov
loope
std
outsl
or
add
xlat
pop
rcl
sbb
icebp
jmp
inc
jb
sbb
ss
int3
sub
out
or
inc
mov
mov
cmc
data16
mov
pop
mov
test
test
arpl
scas
call
cmp
rcrb
adc
stos
mov
mov
pop
or
sub
mov
xor
fimuls
popf
dec
and
jo
cmc
adc
icebp
or
sub
out
dec
sbb
mov
data16
push
fprem1
pop
mov
inc
push
dec
push
inc
or
mov
ljmp
push
pop
cwtl
add
out
adc
adc
jne
arpl
inc
mov
in
test
dec
repz
push
mov
push
cmp
sbb
jl
cmp
xor
push
xchg
mov
sarb
jecxz
add
in
push
mov
pop
inc
pop
xor
sub
stc
iret
add
jns
pop
cmp
xchg
fwait
ds
cmpsl
cmp
jecxz
inc
push
mov
push
movb
mov
inc
pop
xchg
iret
xchg
adc
xor
push
iret
and
mov
mov
jl
sub
in
stc
sbb
movsb
cld
orb
sahf
sbb
xor
jo,pt
cmc
fmul
add
sbb
push
mov
sbb
into
test
adc
pop
jg
aad
fwait
loop
mov
pushf
inc
test
loopne
mov
xlat
dec
stc
roll
mov
ljmp
movsl
in
out
lods
mov
cltd
push
addb
jmp
stc
pop
mov
clc
mov
mov
ja
sub
push
mov
inc
jne
dec
xchg
fsubrs
sub
pop
add
out
push
iret
cmc
jnp
aad
inc
mov
push
ret
xchg
ja
inc
mov
js
xorb
fdiv
iret
lea
fwait
cmpsb
mov
mov
pop
or
dec
push
dec
ss
cwtd
das
imul
adcb
mov
xor
push
push
mov
cmp
jns
pop
mov
movsb
or
fistpl
lds
fdivl
pop
les
pop
or
or
mov
aaa
sub
psubb
fiaddl
lods
push
mov
imul
out
mov
ret
scas
pop
or
addr16
mov
sti
pop
int3
pop
addr16
jb
rorl
in
rorl
mov
cltd
dec
or
rclb
mov
cmp
pop
add
or
mov
fwait
cs
outsb
fisttpll
imul
dec
mov
pop
xor
add
jl
lock
mov
shll
add
add
imul
inc
data16
stos
jl
mov
or
ret
sub
les
xor
cld
shrl
cmp
loopne
nop
mov
xor
js
sbb
inc
bt
sahf
cmp
add
adc
inc
mov
into
adc
sub
pop
jge
sbb
jae
ds
mov
sbb
push
data16
loope
lods
push
jp
push
mov
or
jp
add
pop
dec
sti
dec
push
aaa
es
sti
mov
pop
and
pusha
push
hlt
sahf
inc
jno
mov
push
fiaddl
mov
cmpsb
and
outsl
cwtl
push
or
or
mov
jg
movsb
or
outsl
hlt
xor
push
adc
xchg
sub
cli
inc
outsb
mov
xor
ret
orb
fistpl
nop
hlt
mov
lods
ss
notl
imulb
arpl
cmp
sub
nop
mov
add
popa
shll
out
xor
inc
xorb
add
stc
jne
or
ss
push
adc
test
fisubl
sub
jb
add
js
dec
xchg
pop
pop
pop
popa
xchg
mov
inc
repnz
fidivl
adc
fbld
mov
jnp
push
sti
cmp
mov
outsl
mov
xlat
push
fsubl
out
fdiv
ss
inc
insl
mov
shlb
clc
mov
pop
sub
fldl
and
imul
repz
cld
pop
push
mov
dec
repz
jo
mov
movsb
fisubrl
add
loope
pop
inc
sub
sub
jmp
sub
sbb
xor
pusha
ljmp
int3
or
imul
xchg
jg
mov
push
das
mov
loope
pop
iret
lds
cs
adc
xor
cmp
mov
cmp
cld
clc
sbb
push
icebp
push
mov
mov
pop
mov
sbb
mov
xor
dec
push
or
mov
mov
jp
mov
hlt
add
pop
pop
jge
lret
imul
movsb
push
push
clc
sub
mov
jp
ljmp
repz
test
push
sti
or
jno
sub
sahf
mov
push
not
mov
mov
cmp
stos
add
pushf
pop
decb
mov
int
enter
cld
or
inc
stc
mov
add
xor
mov
xor
fisubl
out
pop
nop
push
adc
or
outsl
mov
cmc
std
insw
inc
jle
insb
push
aam
push
les
mov
mov
repnz
loope
popf
adc
rcll
or
adcl
mov
test
lock
jns
pop
cmp
jl
jecxz
lods
xchg
jmp
outsb
push
arpl
cmpsb
push
adc
mov
lods
je
ret
std
das
pop
jns
fsubrl
and
leave
stos
mov
fists
subl
loopne
mov
mov
ja
leave
jle
sub
fldcw
adc
ret
pop
mov
idivl
cmp
xor
cmp
fstpl
adc
fcoml
pop
fidivl
dec
mov
and
mov
cmc
imul
fistpl
cwtl
sti
aam
ret
sbbb
adc
mov
shrl
filds
shl
mov
insb
out
xor
mov
mov
sub
iret
notl
mov
mov
and
jg
jo
or
mov
out
jl
mov
subl
jno
ds
addb
fnsave
mov
mov
mov
mov
bnd
mov
jg
xchg
pop
inc
out
lea
rcr
jns
jl
sbb
cli
adc
jmp
mov
sub
mov
icebp
lods
imul
jecxz
xor
push
pop
insb
mov
loopne
addl
mov
enter
add
dec
insl
xchg
shlb
push
mov
xor
xchg
cmp
subb
aas
pop
in
std
and
cmc
imul
cld
dec
bound
mov
punpcklbw
iret
stos
lahf
cmp
mov
imul
stc
or
movsb
mov
jno
stos
stc
dec
mov
xlat
movsl
test
adc
and
fisubrl
add
in
out
shll
cmp
movsb
fimull
push
mov
iret
and
shll
add
jmp
scas
iret
pop
inc
push
iret
cmp
into
das
ds
push
sbb
mov
sub
mov
cmpsb
add
jnp
mov
jg
aaa
pop
dec
and
add
adc
outsb
dec
push
pop
push
stos
jg
loope
ljmp
jg
jne
mov
outsl
cmp
pavgb
cmp
mov
and
pop
sarl
std
push
flds
mov
or
shll
pop
je
jge
ficomps
mov
inc
jmp
lret
xorl
jg
fnstenv
and
dec
jl
jb
pop
jp
and
outsb
clc
ja
push
mov
aam
push
inc
iret
dec
mov
aad
seto
dec
inc
ljmp
cmp
push
jge
mov
sub
mov
push
push
push
xor
shr
push
repz
sub
aad
push
mov
jl
dec
cli
cmp
mov
push
adcl
daa
imul
test
push
sbb
mov
and
sbb
or
and
ljmp
jae
push
aaa
push
cs
stos
jle
int3
add
dec
stc
inc
movsl
dec
rcr
mov
mov
int3
inc
jo
test
rol
push
add
mov
fwait
pop
test
or
imul
cwtl
jbe,pn
jmp
mov
movsb
sbb
mov
in
sub
mov
sbb
fisubrl
dec
mov
lahf
arpl
filds
xchg
add
cmpsl
mov
inc
dec
aaa
pop
fwait
std
jl
add
mov
and
cmp
sti
push
or
mov
or
movsl
das
or
inc
mov
pop
enter
ja
push
mov
nop
out
lods
int3
xchg
or
add
lret
testl
jmp
dec
sub
test
bound
lds
pushf
inc
cmp
sbb
inc
xchg
jg
adc
pop
sbb
imul
jnp
and
out
sub
pop
rclb
out
push
sub
fwait
cmp
cmc
nop
sub
sbb
push
cmp
pop
int
push
sarb
rcrl
repnz
js
inc
testl
push
cmp
xchg
sahf
imul
call
arpl
icebp
xchg
adc
xchg
out
mov
out
mov
xor
popf
xchg
sub
inc
fistpll
aam
shl
lret
int
pop
lret
adc
add
adc
xchg
push
and
or
pop
fsubr
nop
in
andb
mov
rcrb
ficompl
mov
or
out
cmpsb
mov
or
pop
mov
addr16
mov
push
add
mov
jo
xlat
stos
out
inc
bound
jge
add
scas
out
ss
xchg
cmp
fwait
mov
add
inc
leave
sarb
lds
fisubrl
cmp
jno
lods
cmp
and
mov
xchg
fsub
ficompl
insl
negl
fwait
rorb
cmp
pop
mov
xchg
push
mov
aas
or
test
push
cmc
inc
and
add
fbld
dec
push
mull
pmaddwd
xchg
add
sub
cmp
jg
and
loope
mov
jp
sub
pop
add
leave
jo
das
xor
fdivs
mov
inc
or
push
xor
mov
cmpsl
dec
cmp
loope
and
add
or
das
scas
pop
jo
pop
xchg
arpl
or
int3
jmp
popf
test
fisttpll
push
mov
pop
sub
es
jg
adc
push
mov
stc
push
das
inc
popf
and
popa
sub
add
xchg
neg
dec
sbb
mov
push
lock
jg
lret
add
addl
inc
data16
das
imul
jecxz
jne
push
push
push
push
and
repz
push
and
arpl
pop
pop
cli
pop
and
pop
aas
dec
in
jno
js
aam
lret
sbb
push
pusha
aad
rorl
jmp
rcrb
mov
lcall
xor
xchg
pushf
pusha
mov
and
cmpsb
cmp
lock
movsl
push
data16
inc
jbe
jl
cmc
push
and
mov
pop
mov
pop
add
lahf
xchg
pop
ljmp
mov
shrl
lods
cmp
lcall
in
cmp
dec
add
enter
mov
add
xor
add
rcl
aas
je
ja
xchg
dec
fwait
cld
stc
insb
pop
int3
aad
dec
ss
sahf
ret
push
fidivrl
add
sub
mov
xchg
cmp
pop
push
fiaddl
insl
ret
cmpsl
sti
cmpl
cltd
ret
jnp
push
sub
stc
iret
pop
mov
and
gs
ljmp
mov
xor
lock
stc
xchg
dec
cmp
jp
aaa
fists
jno
in
movsl
pop
sbb
repnz
lods
int3
jb
mov
pusha
dec
mov
pop
fwait
sti
sbbl
nop
add
push
ja
shll
or
orl
pop
std
jmp
cmp
cs
inc
adc
cmc
out
and
out
pop
pusha
cmc
add
or
cmpsb
jl
mov
lret
popf
push
pop
xor
push
repz
sub
adc
lcall
nop
mov
jno
mov
lds
orb
ret
fst
and
pop
decb
inc
push
jg
pop
das
mov
sbb
push
adc
fldcw
fcmovu
and
pop
pop
sub
std
jle
sbb
icebp
fcmovnbe
mov
xor
sub
out
push
popf
insb
and
aam
jbe
mov
mov
adc
pusha
or
push
jae
push
mov
mov
in
mov
jmp
out
filds
imul
push
mov
imul
and
xchg
pop
mov
mov
inc
pop
mov
aam
xor
mov
pusha
int3
add
cmp
sub
adc
clc
pop
arpl
scas
rolb
mov
into
push
rcr
test
jno
push
jns
and
jne
fisttpll
test
je
int
aam
pop
mov
test
sbb
push
outsb
inc
es
inc
std
inc
mov
and
jns
pop
mov
jno
in
jnp
popf
pop
cmpsb
cmpsb
push
dec
push
fsubrl
inc
xor
pop
mov
and
xchg
movsl
cld
icebp
mov
stc
push
add
sti
fnstenv
jecxz
pushf
in
sbb
mov
inc
xchg
fcoml
cmpsb
es
pushl
or
stos
sub
in
popf
push
das
inc
cltd
jecxz
pusha
cmc
mov
adc
jbe
mov
lcall
sub
bnd
clc
in
xor
and
push
sahf
cltd
or
dec
sub
subb
les
or
add
add
inc
cmp
cmpl
inc
pusha
jae
mov
pop
negb
fsubrl
mov
cli
dec
xchg
popa
sbb
fidivrl
add
call
pusha
and
sbb
imul
pop
scas
add
inc
adc
imul
push
mov
push
aas
mov
dec
mov
std
or
or
dec
ljmp
sub
adc
pop
dec
sbb
and
incl
add
icebp
icebp
out
push
imul
or
xor
fwait
cs
insb
aad
aaa
pop
mov
sub
mov
rcll
lcall
sbb
mov
push
or
jg
pushf
imul
adc
das
notb
pop
mov
iret
or
mov
adc
sub
push
dec
gs
lods
fistpl
sub
jbe
xchg
jne
push
das
int3
ret
js
fnsave
mov
pop
dec
bound
negl
push
testb
mov
mov
mov
xchg
sarl
jbe
ja
inc
iret
cmc
je
dec
andb
push
fildl
movsb
mov
mov
lods
insl
sbb
lock
mov
add
adcb
mov
cli
adcb
fistpl
mov
or
jge
repz
mov
mov
cmp
jp
ja
rcl
scas
mov
outsl
dec
mov
out
dec
push
jecxz
icebp
aaa
fmuls
fcomp
cwtl
mov
mov
cs
loope
sub
adc
jg
mov
mov
arpl
inc
mov
cmp
push
mov
call
jmp
nop
lds
jg
mov
mov
jo
mov
sbb
dec
mov
call
dec
shl
add
outsl
mov
movsb
fsubr
mov
push
outsl
cmp
jno
mov
inc
or
jle
sti
or
adc
pop
jl
shlb
ja
in
shrl
ficoms
or
adc
stos
addr16
paddsb
lcall
and
or
mov
dec
mov
xchg
sub
or
aam
ficoms
sub
out
ljmp
fsubl
loopne
inc
aam
mov
mov
aas
shl
jae
cmpsb
push
xchg
fisubrl
pop
ljmp
cmp
iret
stos
gs
bound
or
cmp
stos
out
and
xlat
das
pop
in
cmp
xchg
lret
std
test
mov
add
cmp
xor
in
aam
adc
mov
xor
inc
xor
nop
icebp
jmp
inc
jecxz
or
xchg
je
or
testb
dec
add
clc
inc
add
add
mov
push
sub
dec
sti
test
out
or
cld
and
ret
sub
mov
shl
cmpsb
dec
call
aam
or
and
jg
aam
sbb
je
fcoml
cmp
sbb
xchg
lods
ror
ds
sbb
ljmp
or
dec
lods
mov
adc
cmc
movsl
in
loop
inc
xchg
dec
test
and
pop
xchg
nop
mov
popf
mov
mov
cmpsb
inc
lret
loop
push
fimuls
std
pop
fbstp
xor
scas
xchg
paddq
mov
imul
sub
fs
mov
mov
adc
add
inc
xchg
ret
lea
lods
sbb
jmp
js
out
cmc
xchg
xchg
test
lret
mov
dec
rolb
fldenv
sub
cli
mov
aas
sti
sub
imul
push
pop
pop
aam
ficoms
jmp
in
cmpb
in
data16
mov
stc
mov
cmpsl
pusha
mov
lcall
jg
jl
mov
and
xchg
and
lods
mov
jno
pop
dec
and
xchg
xchg
int
and
pop
and
push
in
daa
das
cmp
inc
inc
inc
lds
int3
pop
fs
inc
sti
jno
add
test
push
hlt
insl
adc
ror
xchg
fcomps
xor
mov
adc
dec
mov
mov
cmp
cmc
xlat
push
sti
jae
xor
repnz
je
stc
ja
push
xor
js
push
rcrb
sbb
int3
cmp
pop
fstl
xchg
insb
jl
outsl
mov
sti
inc
negb
sub
popf
lods
icebp
jmp
xchg
pop
stos
stos
repnz
shlb
mov
leave
add
add
push
lret
clc
pusha
test
mov
shll
fs
mov
xchg
push
addl
lret
dec
inc
ss
mov
inc
hlt
cmc
or
mov
jg
lcall
iret
xor
je
sub
jno
imul
arpl
cs
imul
or
inc
cmc
rolb
imul
mov
fwait
mov
and
outsl
xor
lcall
cmpsl
mov
clc
popf
pop
mov
jne
mov
sub
mov
xchg
pushf
test
rolb
adc
mov
fcmove
hlt
out
pop
fstpl
sti
fwait
mov
icebp
mov
imul
push
rclb
pop
mov
push
gs
gs
mov
inc
sub
xor
popa
movsb
popl
mov
xor
mov
sub
aad
das
inc
jle
hlt
jge
adc
jbe
add
fdivrl
mov
jecxz
test
out
cwtl
mov
int3
mov
inc
lret
dec
sbb
mov
push
cltd
ret
fidivrs
lea
ja
ficomps
jl
dec
ss
push
dec
sub
jae
minps
push
iret
mov
mov
and
mov
sbb
fwait
xchg
sub
pop
push
xor
insl
shll
mov
sub
jno
ss
mov
out
xchg
xor
cli
fistps
in
and
jle
dec
lret
cmpsb
sti
push
stos
iret
cmpsb
pop
adc
cmp
ljmp
cwtl
mov
add
in
pop
adc
lock
enter
mov
xchg
in
inc
test
shlb
loop
dec
in
cmp
cmpsl
out
pop
repz
or
sbb
jno
cltd
push
mov
dec
xchg
andb
addr16
das
or
addl
out
pusha
mov
and
cwtd
pop
sub
outsl
insb
mov
and
mov
sarl
js
es
mov
sbb
sahf
mov
adc
pop
ret
xchg
or
xlat
pop
lea
mov
sti
daa
nop
divl
rep
sub
cmp
mov
jno
imull
sbb
add
xchg
mov
shl
jbe
push
inc
adc
xchg
sti
dec
adc
push
jo
jmp
pusha
into
repz
fldt
push
mov
jns
jp
insb
pop
or
push
and
cmp
test
push
dec
div
inc
dec
mov
mov
push
aaa
xor
or
movsb
leave
push
mov
xchg
mov
ret
sbb
adc
movsb
adc
fwait
cmc
aam
cmp
pop
sub
call
popl
add
test
jp
jmp
jno
stos
lods
ficompl
jp
or
sub
jecxz
pop
jnp
mov
lret
arpl
in
cli
jb
int
jnp
les
mov
adc
lret
test
pop
rcrl
add
pop
push
pusha
mov
and
std
fwait
jmp
and
aas
js
popa
xor
pop
inc
fwait
jmp
jbe
sbb
pop
fisttpl
jl
mov
outsb
loop
adc
fs
mov
outsl
mov
std
fcoms
mov
cltd
ficompl
and
test
mov
jae
jg
rcrl
jb
das
jl
je
data16
jb
or
cmp
mov
mov
pushw
sub
lock
cmp
imul
ja
xor
rolb
pop
mov
xchg
mov
cmc
cmp
sbbl
iret
mov
push
mov
add
out
xor
cltd
add
loopne
jno
dec
call
xchg
mov
jno
lds
aas
movsb
or
mov
fstpt
das
push
mov
inc
mov
mov
sbb
jnp
out
and
jecxz
sbb
test
or
jmp
fsts
ss
sub
and
xchg
lock
lea
inc
push
aas
fnsave
stc
or
rcll
inc
xor
jnp
dec
dec
sar
movsb
iret
and
das
mov
popw
out
sahf
mov
aam
das
dec
mov
mov
ljmp
cld
ja
dec
fidivs
imul
rcrb
sub
int
adcl
dec
xor
loope
aad
pop
dec
mov
or
add
sub
ja
sub
inc
into
jl
xchg
repz
add
mov
lock
daa
decl
mov
cltd
xchg
mov
js
dec
mov
add
fistpll
mov
popa
das
in
arpl
nop
sbb
adc
sbb
xchg
enter
pop
sbbl
mov
mov
outsl
cmp
in
dec
xchg
mov
fcos
inc
dec
mov
movaps
sub
sbb
call
adc
inc
es
lret
mov
fidivl
mov
cmpsb
outsl
fucomip
or
lret
mov
sub
imul
add
jno
fstl
mov
lahf
out
xor
in
cmp
bound
jo
scas
mov
push
push
pop
mov
hlt
andb
jmp
fsubrl
test
xor
negl
mov
adc
add
fldl
add
mov
mov
iret
push
jle
cmp
popa
jb
js
xor
clc
mov
loope
movsl
sbbb
dec
dec
ss
icebp
xor
push
out
in
mov
cltd
arpl
jmp
movsl
cmp
mov
arpl
cmp
ds
xorl
mov
lods
arpl
mov
cs
mov
jnp
iret
mov
fs
push
imull
ret
dec
inc
inc
pop
xor
andb
stos
jg
fwait
sub
jo
push
mov
mov
mov
add
jae
mov
stos
jae
push
pop
pop
mov
inc
jmp
sub
in
das
and
es
fidivrl
inc
xlat
pop
sbb
incb
mov
fldcw
cld
pop
dec
insl
leave
jo
dec
inc
andb
jae
movsl
sub
or
jb
pop
in
sub
adc
dec
pop
loopne
aam
inc
pop
out
test
mov
movsb
mov
fsts
dec
arpl
ret
pop
inc
mov
mov
cmpsb
int3
arpl
mov
dec
test
adc
out
cmpsl
xchg
add
mov
std
test
pop
jb
mov
fldt
jl
es
jno
fistps
push
clc
cltd
hlt
push
fistl
scas
pusha
cmpsb
lods
fisttpl
mov
daa
shr
push
xchg
xor
cmp
cld
xor
int
push
stc
sti
mov
pop
lret
ss
shll
or
push
sub
scas
ret
sbb
fs
mov
cld
cmp
push
mov
mov
mov
mov
pop
jp
stc
cmpsl
les
nop
mov
push
mov
rcll
lahf
jmp
fidivs
loope
out
ljmp
dec
loopne
mov
mov
sbb
cmp
jge
sub
rorl
repz
push
aas
mov
fdivrs
cmp
js
and
mov
cmp
test
mov
adc
pushf
dec
adc
loop
xor
and
push
out
mov
sub
movsb
out
push
and
mov
lcall
xlat
es
cmpsl
dec
mov
sub
push
push
fisttps
repz
int
xor
pop
js
sarl
adc
mov
jp
adc
cmp
xor
shll
stc
cs
push
lret
rcr
imul
push
push
push
jnp
outsl
fs
jmp
xchg
mov
sbb
jno
mov
or
out
hlt
mov
sbb
jo
loope
inc
cmpsb
cmp
imul
cmpsb
stc
mov
mov
jmp
xchg
daa
xchg
mov
mov
sarl
mov
imul
mov
loopne
test
dec
ja
pusha
push
les
ja
pop
inc
adc
mov
mov
ljmp
flds
jno
mov
xor
pop
sbb
xor
pop
jmp
and
inc
nop
les
imul
scas
jb
mov
pop
and
cmp
lea
shll
call
lods
xchg
dec
repz
pop
mov
shll
lods
daa
cmp
mov
ficoml
jo
jo
pop
dec
mov
adc
nop
into
mov
push
mov
mov
mov
push
cs
fistps
or
adc
mov
filds
ret
icebp
jnp
in
jae
repz
pop
mov
push
imul
pop
bound
in
add
lock
scas
cltd
mov
cmpsb
mov
xchg
push
repnz
ss
mov
dec
test
push
loopne
adc
shll
js
xor
sahf
push
rolb
xor
movsb
add
lods
jle
scas
jl
push
stc
jns
or
cmpl
mov
cwtl
je
adc
ja
bound
gs
inc
dec
dec
lahf
xchg
mov
mov
pusha
mov
sbb
jle
jl
mov
sub
pop
je
mov
pusha
mov
or
mov
dec
imul
lret
js
pop
mov
out
iret
push
ja
xor
sahf
jae
fidivs
pop
in
fidivrl
and
mov
cltd
pop
pause
push
jmp
xor
xlat
addb
sbb
sar
inc
add
mov
int
int
aam
ljmp
in
out
jmp
push
testb
jnp
cmp
inc
inc
xor
mov
data16
xor
cmp
lods
rclb
jl
xorl
insb
add
es
sbb
test
fsubl
es
nop
inc
xchg
cmp
in
lahf
or
sub
push
iret
ror
jnp
shl
mov
sub
cmp
out
sbb
shll
add
es
addr16
dec
notb
in
jmp
mov
int3
repnz
dec
cs
aam
imul
test
in
sub
xchg
rolb
outsb
or
aaa
mov
fmul
push
add
stos
repnz
inc
push
sti
sti
loop
and
aam
test
int3
iret
lock
testb
hlt
mov
ja
fildll
sti
mov
sub
dec
fmul
push
xchg
pop
out
pusha
scas
imul
outsl
stos
mov
jno
sti
rcll
das
mov
mov
test
ret
test
jmp
mov
mov
add
fxch
inc
mov
adc
loop
add
sahf
add
or
outsb
lock
jg
jmp
mov
inc
nop
das
lods
shrl
xchg
out
adc
das
cmp
es
out
out
jbe,pn
sub
mov
jno
xchg
lcall
jae
push
lret
lods
xchg
xor
adc
xlat
ljmp
loope
cmp
pop
xchg
shrl
xor
sbb
push
mov
cmp
sbb
jge
xchg
test
in
mov
lret
sahf
js
jle
test
mov
pop
push
mov
insl
arpl
xor
dec
lea
push
mul
notb
push
loope
push
add
inc
sub
mov
bound
hlt
sbb
repz
outsb
decb
fwait
mov
or
adc
sbb
adc
int3
pop
aad
cmp
pop
mov
pop
aad
xor
xchg
mov
push
and
xor
mov
push
sub
idivb
stc
xor
add
mov
mov
testl
mov
mov
sbb
xchg
or
pop
loop
or
and
add
add
push
add
push
cmpsl
movsl
or
sahf
dec
sbb
fistpl
pop
scas
fs
pop
iret
cmpsb
or
out
xchg
inc
fidivl
or
fcomp
mov
or
cmp
mov
test
jno
pushf
out
dec
data16
inc
mov
jp
rcrl
mov
imul
stos
lods
jl
xchg
jmp
movsb
adc
cmp
dec
xchg
repz
add
or
cltd
into
push
push
int3
in
mov
lahf
cwtl
and
xchg
insb
pop
pop
xchg
pop
jecxz
jl
sbb
pop
xchg
fs
icebp
xchg
ss
jno
xchg
popa
sbb
xchg
ja
adc
clc
inc
push
clc
sbb
lret
ja
jp
fildll
fists
pop
sbb
sbb
jecxz
mov
cmc
push
or
shl
mov
cmp
pop
adc
test
int
sub
jmp
mov
adc
mov
mov
pusha
nop
or
push
cmc
icebp
hlt
pop
in
pop
and
jmp
aam
jo
sbb
jae
and
test
movsl
fsubs
adc
sub
sub
dec
loop
fiadds
mov
pop
imul
lods
jg
xor
cltd
pushf
add
cmp
add
push
mov
mov
mov
inc
mov
gs
inc
pop
inc
and
std
fwait
sti
mov
cmp
imul
ja
cmc
aas
and
iret
push
mov
and
out
inc
testl
lock
xchg
cmp
mov
adcb
xor
cmp
push
pop
stos
inc
sar
imul
cmp
dec
insl
stos
xchg
mov
cmp
int
mov
repz
xor
pop
fisubrs
ja
fst
xchg
aam
pop
out
jg
sbb
test
sti
push
imul
ror
jbe
sub
sub
ds
int3
mov
popa
mov
or
mov
xor
ret
out
jae
lds
pop
loope
pop
lret
jno
xor
aam
push
dec
mov
or
imul
es
inc
ret
pop
icebp
push
inc
push
cwtl
incl
cmp
or
popa
test
pop
inc
test
or
out
push
fwait
lahf
inc
pop
jecxz
cmp
cmc
or
cld
add
shrl
pushf
mov
test
push
mov
inc
jecxz
fisttpll
inc
iret
out
xchg
mov
out
iret
sub
pop
push
jno
ficoms
mov
call
jle
jge
sub
outsb
fnstsw
pop
in
shll
aad
mov
adc
cmp
fildl
add
sbb
xlat
pop
adc
xor
mov
add
les
ss
stc
test
jbe
fisttps
mov
hlt
rorb
push
repz
dec
push
sbb
push
or
aam
mov
xor
cmpsb
mov
insb
mov
mov
es
into
lock
out
cmc
jg
jg
pop
sahf
test
scas
jg
ficoml
std
rcll
pop
inc
je
push
mov
fsubrl
sub
aam
mov
add
inc
sti
jb
rorl
cwtl
push
cmp
mov
mov
mov
inc
testl
stc
mov
mov
sub
test
fcmovnbe
adc
in
mov
roll
testl
push
jno
aad
mov
jno
lods
sbb
sarb
out
pop
mov
xor
pop
inc
adc
cbtw
xchg
iret
push
aad
ficoml
mov
mov
cwtl
push
pop
jo
pop
lret
push
dec
xchg
sub
mov
adc
or
cli
xchg
call
mov
ret
mov
pop
mov
mov
inc
ljmp
test
pushf
xor
stos
push
pop
sub
cmp
movsb
mov
imul
mov
adc
jnp
mov
jmp
cs
mov
jmp
push
pop
scas
mov
pusha
mov
pop
movsb
inc
rcr
fbld
repz
sbb
push
out
cmpsl
cs
in
add
push
adc
addr16
lret
dec
inc
dec
push
popa
faddl
xchg
imul
mov
or
jb
fistpll
mov
xchg
mov
out
sar
and
daa
stc
loopne
icebp
mov
xchg
and
nop
dec
jecxz
loop
cmp
dec
push
cmc
fstpt
jmp
adcl
imul
jnp
cmp
flds
inc
insb
cltd
jecxz
xor
inc
sub
mov
sub
jl,pn
add
movsl
sub
push
fs
int
out
imul
shll
cvtpi2ps
imul
gs
das
ret
mov
inc
and
das
negw
pushaw
mov
lret
andb
mov
mov
lahf
jne
out
shll
inc
xor
stos
cltd
clc
fidivl
leave
aaa
jnp
andb
push
mov
fwait
mov
xlat
pushf
rep
push
rcpps
jge
cs
add
adc
jecxz
lods
mov
mov
das
sub
and
hlt
in
jno
dec
fimull
mov
mov
rcrl
mov
cmpsl
out
stos
les
or
lcall
add
jg
in
clc
loopne
mov
xchg
aas
sbb
dec
fistps
dec
repnz
popf
iret
pop
or
test
stos
xor
lock
ret
iret
cmp
int
pop
jno
movsl
faddl
xchg
push
sub
xor
pop
push
pop
jl
dec
ret
pop
cmpsb
not
sti
xorb
std
lea
shll
fldt
mov
mov
or
cmpsb
and
out
jno
mov
fsub
dec
pushf
cmc
mov
jg
pop
fcmovne
jno
xchg
jnp
add
mov
xor
xchg
aaa
mov
dec
mul
ljmp
rolb
ret
and
xor
dec
scas
stos
sub
inc
movsl
cltd
sbbl
int3
hlt
mov
test
cmc
ret
jge
imul
mov
pushf
or
push
int
inc
pop
or
jle
dec
shlb
loope
pop
jns
fsubrl
jnp
jbe
add
arpl
adc
ja
sar
inc
scas
sbb
sarl
lock
push
jg
imul
push
fwait
xor
or
sub
xor
xor
inc
jo
aas
scas
dec
push
lret
aas
pop
push
sub
rcl
jmp
pop
jmp
push
ror
sub
std
incl
cmp
roll
sbb
mov
cltd
mov
data16
jns
mov
cld
xchg
jno
scas
scas
sbb
xor
fidivrl
loope
ljmp
sub
sub
push
pop
std
mov
and
les
jns
faddl
pusha
scas
mov
mov
cmc
xchg
scas
mov
jae
out
sbb
add
adc
out
je
in
sbb
stos
int3
push
dec
mov
pusha
outsb
fucomp
xchg
loopne
lock
pop
fwait
mov
mov
popa
cmp
mov
loope
fucomip
gs
pop
ss
js
ljmp
cmp
mov
frstor
ficompl
sub
fcmovbe
mov
dec
jmp
dec
push
dec
test
xor
in
fsts
dec
inc
mov
test
leave
lret
pop
dec
lret
fwait
insl
insb
insl
arpl
adc
jl
ret
mov
int3
mov
imul
int
ficoml
dec
sub
adc
dec
inc
bound
ss
xchg
dec
out
xchg
cmp
inc
mov
sub
pop
push
sub
pop
ret
sub
jg
mov
jg
movsl
add
fistpll
fcompl
rcrw
aam
add
imul
iret
mov
cmpsl
lret
movsb
sbb
adc
dec
xchg
insl
movsl
push
out
sbb
jae
cmp
cmpb
sub
mov
dec
sbb
loopne
fs
xchg
dec
push
push
sbb
gs
aas
push
jmp
or
rcll
les
pusha
dec
lods
sub
data16
or
mov
xchg
sbb
dec
mov
sub
push
fwait
leave
mov
insl
js
test
adc
int
out
pop
and
adc
or
and
push
int3
push
push
nop
adc
les
push
out
fcmovnbe
push
fisubrl
xor
add
push
pop
and
ficoml
mov
shr
icebp
pop
push
mov
out
cmpl
outsl
and
lcall
out
fnstcw
cmp
cwtl
inc
and
jae
push
pop
push
jnp
mov
dec
jmp
dec
push
xor
cmp
jnp
test
cs
ja
pushf
xchg
push
enter
xlat
sbb
adc
mov
fcmovb
iret
mov
dec
and
dec
dec
xchg
mov
adc
cmp
jl
or
pop
in
mov
scas
mov
add
and
add
push
sbb
popf
add
mov
xchg
mov
pop
inc
adc
mov
pop
jae
sub
stos
xchg
xlat
psubd
lock
dec
add
pusha
mov
xchg
int
xchg
pop
jg
pop
ljmp
insb
repz
in
xchg
arpl
sub
test
out
or
add
cltd
sbb
xchg
ret
sub
mov
ss
or
cmpsl
fcmovb
adc
push
jmp
les
cmp
decl
mov
add
jnp
xor
push
cmp
pusha
repnz
ja
cli
addr16
stc
inc
xlat
rcrb
push
je
mov
lods
or
xor
pop
push
xor
scas
cmp
dec
mov
stos
jne
cmp
lods
jno
sbb
dec
pop
aam
mov
mov
test
sub
xchg
pushf
insl
dec
sti
cmpsb
lods
dec
adc
pop
scas
push
das
jns
dec
das
cld
pop
lds
cmp
sti
mov
cmpl
negb
ljmp
sub
aad
pop
andb
ja
ja
push
test
cmpsb
subb
leave
pop
add
cmp
insl
dec
fwait
add
pusha
gs
jmp
xchg
push
and
iret
imulb
pop
std
fimull
push
adc
lahf
cmp
adc
or
inc
xchg
xchg
mov
push
and
mov
mov
into
loopne
insb
test
std
inc
cmp
out
mov
sbb
dec
sub
jnp
cmpsb
jno
mov
shll
in
jp
xor
adc
repz
das
inc
in
and
jno
cli
mov
inc
cs
xlat
nop
push
pusha
pop
out
das
mov
sub
cwtl
cmpsl
imul
movsl
dec
mov
mov
fildll
std
div
sub
cmp
inc
or
addb
mov
fidivs
sbb
inc
mov
jo
fldt
dec
sub
jb
dec
repnz
fisubrl
sahf
adc
adc
aam
pop
stos
mov
fdivs
mov
xchg
dec
pop
hlt
mov
mov
rolb
aas
or
cwtl
in
cmpsb
orl
fsubs
lods
inc
and
mov
andb
xchg
lahf
test
ljmp
pop
fcomi
fwait
push
mov
mov
xchg
psllw
shlb
cs
mov
add
pusha
push
fistpl
scas
imul
push
adc
mov
cmpsl
push
dec
adc
daa
dec
inc
cmp
cmp
hlt
dec
pop
mov
pop
sub
scas
lea
fidivl
inc
or
aam
inc
jne
or
loope
nop
cmp
dec
mov
out
sbb
shrl
movsb
scas
or
jb
jg
fisubrl
or
cmp
inc
test
adc
mov
movl
cmp
inc
rorb
shrb
fistl
xchg
into
aas
pause
adc
ja
ss
xchg
xchg
xchg
fisttpl
ror
out
inc
jmp
inc
fcoml
jo
nop
jae,pn
ja
outsb
pop
mov
mov
pop
push
or
jns
aam
dec
pop
push
mov
js
dec
divl
and
xor
jno
adc
jmp
mov
lock
cmp
adc
inc
call
pop
cmc
outsl
pop
in
loopne
fucomp
jae
out
pop
mov
imull
inc
jge
xor
shrl
xchg
mov
jb
into
adc
dec
movsb
inc
jbe
fisttpl
add
imul
cmpsb
mov
loopne
pop
pop
adc
out
or
les
cmc
and
fwait
scas
mov
scas
add
sbb
popl
scas
stc
push
fdivr
cmc
sub
xchg
push
stc
outsb
xor
or
add
insl
cmpsl
xor
daa
push
fiadds
cmp
cld
sbb
mov
xor
in
fcmovnb
out
sub
push
outsb
xorl
addr16
jl
inc
loope
mov
mov
daa
shll
inc
rcrl
in
push
cli
stc
cmp
lods
fldt
mov
or
adc
cmpsb
fwait
add
adc
mov
push
arpl
adc
add
mov
push
sub
xchg
flds
iret
cmpsl
test
es
xlat
jl
pop
daa
mov
iret
les
repz
jo
clc
dec
cmp
fdivr
into
push
push
xchg
rolb
lahf
adc
jns
adc
pusha
cmpl
inc
sahf
push
mov
add
jmp
inc
mov
xchg
pop
pop
push
cld
bound
fimull
aam
test
outsb
fiadds
sub
imul
fwait
inc
hlt
and
mov
ja
ret
roll
inc
or
pop
push
ret
sbb
dec
clc
call
mov
xor
jbe
out
jo
aas
pop
sti
sub
out
push
fldl
daa
or
sbbb
pop
mov
add
add
jnp
jl
mov
sub
jg
xchg
jge
sbb
cmp
jae
push
inc
sub
rorb
sbb
mov
mov
mov
bound
cmp
sarl
mov
xchg
jg
xchg
xchg
jo
add
ss
pop
mov
iret
js
testb
fsubrp
fs
lods
or
jmp
jb
fdivp
das
adc
inc
pop
cmpsb
lods
jecxz
xchg
xchg
enter
cmp
xchg
mov
jmp
sub
mov
notl
movsb
rorb
popf
add
jmp
jns
mov
mov
cmpsl
ror
sahf
xor
jnp
inc
mov
mov
stos
sbb
pop
mov
xlat
fidivrl
adc
jmp
jb
xor
into
pop
mov
jg
cmp
dec
or
pop
jne
inc
add
pop
clc
in
adc
rorl
clc
pop
add
js
repz
test
lahf
add
call
ret
mov
cmp
int
or
outsl
mov
int
cmc
imull
popf
sub
mov
push
mov
mov
mov
or
mov
mov
pop
jae
mov
mov
lret
push
aam
fidivrl
popa
shrl
gs
and
test
push
mov
xchg
sub
dec
leave
add
ret
jp
mov
jnp
iret
add
stos
mov
inc
stos
ljmp
push
push
adc
inc
sub
cmpsb
scas
mov
xchg
jae
mov
adc
ja
imul
inc
sub
stc
jbe
call
push
pop
push
in
dec
fdivrl
scas
xchg
fdivrs
or
in
sub
cmpl
pop
call
xchg
lret
or
pop
cmp
sub
fistpl
shlb
mov
pop
and
out
shll
push
iret
xchg
inc
rorb
pop
mov
aaa
fstpt
les
fcmovnbe
dec
loope
mov
inc
iret
xorb
movsl
add
cli
jmp
jbe
or
repnz
je
push
pushl
xchg
shlb
or
dec
repz
mov
sbb
rcrl
xchg
mov
fcmovu
mov
dec
aad
push
mov
pop
mov
mov
add
sete
jnp
inc
add
and
mov
adc
aam
jb
scas
inc
lds
sub
inc
pop
std
mov
push
mov
lahf
mov
jnp
xor
fwait
cmp
sarl
inc
daa
mov
hlt
insb
fnstenv
cmp
and
jnp
cmp
push
fmull
mov
scas
push
sub
fwait
mov
xchg
xor
addb
in
negb
and
jp
cmp
jle
xchg
int3
adc
jle
roll
push
push
mov
push
cld
gs
out
psubw
jno
sbb
xchg
adc
mov
pop
dec
adc
inc
jb
mov
jns
push
repz
mov
dec
movsb
aas
mov
jae
nop
sub
mov
rol
cld
cmp
jbe
or
xlat
stos
xchg
dec
int3
jo
arpl
or
or
in
decl
xchg
flds
ss
fsubl
shll
dec
add
repnz
pop
jno
inc
imul
lahf
sbb
jmp
loop
test
push
arpl
sub
cmp
mov
lret
adc
popf
mov
sbb
xchg
mov
mov
popf
jne
adc
call
repz
add
adc
push
jle
add
ds
push
movsl
out
ja
add
lret
sub
adc
xchg
invd
pop
cmp
insl
and
test
cmpsb
xor
je
mov
or
pop
mov
and
pop
es
jmp
push
xor
es
pusha
movsl
sub
xchg
imul
fisubrs
fmul
lret
fwait
dec
ja
sti
je
xor
mov
shrl
lret
push
mov
pop
std
inc
ds
xchg
imul
adc
js
adc
or
scas
stc
pop
insl
dec
jae
pop
mov
rorl
sub
mov
jae
rcl
outsl
push
popf
sti
loope
aas
jg
add
dec
inc
jp
test
andb
decb
ja
and
pop
mov
insl
mov
dec
xor
movsb
in
push
xchg
fimull
jl
fildl
test
mov
sub
pop
mov
aam
cmc
or
mov
loope,pt
movsl
es
dec
scas
lahf
sbbb
pop
test
lds
in
in
cmp
mov
cltd
pop
lret
xchg
arpl
das
jl
push
xchg
lret
or
fcoml
mov
shrb
mov
sarb
sub
fs
in
mov
fisubl
cli
cmpsb
fistpll
inc
into
test
mov
push
mov
lods
mov
push
mov
sti
cmp
loope
inc
pop
icebp
test
cmp
out
adc
frstor
mov
sbb
jnp
or
shll
enter
mov
jle
push
into
lea
and
ja
test
jns
push
inc
xchg
pusha
pop
cmp
lods
cmpsb
mov
inc
push
insb
pop
sarl
mov
std
mov
jmp
adc
jg
fs
test
loope
dec
ds
lcall
fidivl
daa
es
incb
pop
xor
jle
cmp
ja
cltd
cmp
enter
idiv
mov
je
pop
inc
sub
roll
push
xchg
movsl
shll
xor
inc
fcmovb
lock
xchg
clc
call
pop
ss
int3
sbb
jne
sub
dec
lods
sub
jbe
mov
hlt
mov
pop
addr16
pop
jb
dec
sarl
mov
mov
pop
pushf
mov
rorl
or
and
jg
ljmp
mov
mov
insb
cs
cmpsl
mov
cmp
jge
jno
mov
rol
inc
nop
mov
inc
cld
cmp
sbb
cmp
pop
pop
sub
hlt
and
cmpps
je
pop
cmp
ret
popa
pop
in
mov
mov
or
iret
cmc
mov
cmp
out
out
frstor
pop
and
ja
jae
mov
jno
mov
pop
sub
pop
js
inc
jo
subb
add
imul
sahf
mov
lret
movsb
ss
sub
not
sub
mov
lock
jmp
mov
jecxz
dec
xor
cmp
hlt
movsl
lods
sarb
xchg
sbb
rorb
gs
add
or
jge
cld
loope
ja
std
data16
mov
mov
sahf
push
cs
roll
fmull
adc
mov
fiadds
sub
and
ljmp
and
adc
dec
lcall
lea
xor
mov
imul
ret
in
mov
mov
sub
addr16
sub
push
ljmp
push
rol
insb
or
jns
push
test
fwait
insl
das
inc
jle
ret
movsl
andnps
xlat
add
sub
iret
test
int
pop
jb
mov
and
mov
scas
fidivl
shr
iret
and
dec
and
mov
imul
fcmovu
sahf
sbb
xor
cmp
fwait
xlat
mov
ja
les
mov
scas
dec
jg
test
push
int
xchg
cwtl
and
lods
cli
je
cmp
pop
mov
sub
jmp
scas
pop
das
imul
or
mov
push
nop
cs
stc
dec
sbb
inc
inc
test
inc
hlt
adc
clc
test
mov
dec
mov
aas
mov
movsb
mov
jb
and
pusha
adc
sbb
dec
fimull
dec
sub
outsl
nop
mov
repnz
shll
popa
mov
jo
fwait
in
gs
imul
cltd
inc
fcoml
add
bound
xor
inc
ret
pop
inc
mov
xor
xchg
sahf
push
mov
xlat
dec
outsl
cli
fisttpl
aam
add
movsl
insl
inc
fwait
mov
in
jl
xchg
add
cs
nop
or
xchg
xlat
mov
test
daa
sbb
push
pop
pushf
fmull
pusha
sub
jl
je
in
scas
or
or
pop
loope
pop
cld
sub
push
adc
fsubl
fiaddl
push
ljmp
dec
in
stc
fisttps
out
scas
xor
cld
addr16
push
xchg
mov
hlt
pusha
jno
cmpsb
mov
adc
loopne
jle
inc
clc
xchg
in
jg
jecxz
push
popa
pop
jno
cmpsl
adc
jecxz
xchg
sti
dec
mov
mov
stos
in
pop
mov
sub
pop
pop
vpsllq
mov
add
cltd
lods
imul
push
int
sbb
insb
push
adc
cmpl
mov
dec
fs
mov
scas
je
cs
mov
and
push
lahf
shrb
inc
mov
jno
push
and
movsb
inc
mov
into
mov
xchg
pop
or
mov
mov
and
dec
mov
imul
int
fidivs
loope
dec
pop
negb
push
jbe
int
sbb
repz
sub
cmp
pop
mov
fists
xchg
sub
decl
das
rcrb
dec
ja
das
jb
arpl
xor
mov
adc
pusha
jmp
ret
mov
pop
mov
pop
insl
jecxz
push
cltd
add
mov
js
jecxz
sbb
xchg
das
mov
jl
mov
pop
mov
pop
mov
arpl
mov
mov
ss
mov
jo
cltd
cwtl
push
adc
xchg
seto
icebp
loope
jno
jnp
lods
xor
push
and
push
or
push
into
pop
movsl
or
inc
cmc
mov
push
jns
inc
movsb
fiaddl
fmull
iret
fists
dec
cmc
fwait
mov
popw
cmp
cmp
sbb
push
iret
jb
adc
jg
lret
sbb
mov
dec
aam
shl
ret
push
xchg
push
mov
in
js
add
lods
sub
lcall
addb
or
sbbb
mov
les
lods
ret
xlat
push
push
inc
shrb
jae
mov
mov
roll
xchg
dec
les
mov
movsl
lea
jnp
cmp
fdivs
cmp
lret
push
mov
mov
addb
jmp
neg
or
cld
pusha
clc
ficompl
xor
jle
push
mov
adc
cld
xchg
cmpsb
out
xchg
xorl
sub
int3
int
imul
test
aas
mov
sub
aam
imul
dec
into
add
cmp
jmp
mov
or
push
sub
xor
push
dec
dec
jnp
jbe
movsl
je
mov
std
xchg
dec
repnz
adc
xor
cmpsb
idivb
inc
push
dec
sbbl
imul
nop
fs
cld
adc
roll
mov
push
lret
rorl
add
outsl
mov
mov
cltd
and
adc
sbb
sub
out
jl
repnz
jae
ss
jb
jge
repz
push
jle
in
aam
mov
add
test
in
jg
test
push
or
adc
orb
sub
jnp
enter
add
push
mov
xchg
jp
mov
std
xor
lods
sti
outsl
and
pop
std
mov
mov
enter
inc
outsl
mov
push
insb
adc
jge
std
and
add
fnstsw
push
dec
out
insl
jno
les
arpl
lds
hlt
rolb
push
pop
dec
insl
adc
sbb
sarb
inc
pop
sbb
push
cmpsl
mov
lods
sbb
or
mov
shl
into
out
dec
mov
addb
xchg
in
in
mov
adc
dec
subl
dec
or
into
jecxz
add
dec
add
mov
fwait
push
xchg
inc
stc
mov
mov
ret
sub
inc
inc
int3
dec
js
sub
jns
xchg
lock
push
aas
mov
mov
mov
add
push
les
fsubrs
mov
imul
ja
out
push
cmp
fdivs
mov
test
sub
xorb
repnz
orb
pop
push
pop
inc
xor
pushl
add
test
mov
cmp
jns
aas
out
adc
sbb
jg
orl
push
cltd
fidivrl
dec
ret
jnp
jl
shrb
xchg
pop
push
in
cs
iret
dec
push
mov
fsubl
std
negl
in
data16
fs
dec
or
pop
shlb
mov
in
lea
add
jbe
and
push
cmp
outsl
fmuls
jns
jno
mov
jl
aam
add
dec
into
sbb
lret
mov
inc
sub
mov
mov
dec
lcall
lcall
sbb
cs
jl
mov
mov
lea
pop
mov
dec
mov
mov
mov
aas
imul
test
test
xor
daa
ret
push
mov
lahf
jl
adc
rol
sarl
xchg
xchg
xor
add
rep
jae
cli
cld
xor
je
jno
dec
scas
xchg
lret
mov
popf
out
or
mov
mov
adc
cltd
mov
or
push
fisttpll
adc
ja
mov
dec
cmp
mov
adc
pop
ss
je
sbb
test
or
in
jae
or
cmpl
jmp
jo,pt
xchg
leave
jnp
ljmp
sbb
pop
sbb
addr16
pop
sbb
bound
sub
adc
or
push
incl
pop
aaa
jl
fwait
mov
xor
pushf
adc
movsl
cmpl
dec
lahf
flds
int3
bound
fmuls
sub
pop
mov
incl
out
inc
push
rol
outsb
jno
scas
cmp
cltd
stc
or
rcr
xlat
leave
sub
aam
cmp
in
fwait
mov
xbegin
cmp
sub
dec
test
ficomps
fwait
and
adc
pop
fadd
jbe
xchg
jb
insl
sbb
rcrb
jo
ss
push
fistl
cmp
sub
roll
out
lea
and
xor
mov
and
test
mov
push
jo
jge
sbb
into
bound
adcb
out
push
out
cmp
rcll
out
push
push
push
jo
push
adc
rcll
fwait
imulb
stos
mov
or
repz
stos
lds
imul
xor
inc
push
insl
mov
test
mov
and
xchg
xlat
insl
xor
imul
jns
pop
cmp
adcb
iret
shll
or
jecxz
push
mov
rorb
sti
cltd
adc
cli
sbb
rol
add
xchg
sbb
push
lret
mov
dec
std
fisubl
inc
rcrl
mov
loopne
push
pop
jle
test
shll
addr16
or
push
pop
mov
mov
push
inc
mov
or
pop
cmp
xchg
fstps
and
xor
mov
xchg
push
dec
mov
lods
mov
add
dec
push
loopne
inc
fsubl
dec
jns
mov
out
mov
adc
in
dec
fwait
inc
mov
mov
sahf
cli
or
out
out
dec
sbb
lds
mov
movsl
push
inc
cmc
bound
testb
add
jne
jg
daa
fwait
mov
fsubr
add
ljmp
or
adc
into
jl
inc
fiaddl
and
inc
gs
inc
lock
xor
push
or
mov
pop
sbb
fwait
lds
dec
cmpsl
add
sbb
mov
cli
and
push
cmp
xor
push
insb
enter
lret
test
jl
pop
mov
lcall
xor
in
push
push
insb
cmpsl
push
mov
fstp
leave
invd
xchg
mov
or
pop
insl
fimull
inc
data16
push
pop
cmp
out
push
stc
inc
mov
adc
pop
adcb
push
pop
add
ja
xor
sbb
ret
and
mov
outsb
pop
js
inc
and
dec
imul
cmc
pop
repnz
imul
inc
sub
jno
aam
mov
cmp
mov
fsubp
jnp
popa
mov
sarl
push
mov
out
cmpb
leave
sub
sbb
or
jbe
fdivl
add
xor
mov
cld
es
and
scas
sub
dec
mov
mov
fs
das
pop
jmp
xor
pop
mov
scas
int3
xchg
mov
xchg
test
jbe
xchg
inc
xchg
std
sub
andb
out
in
lahf
xchg
dec
ficoml
adc
mov
push
adc
clc
mov
movb
xor
fisttps
xchg
das
ljmp
frstor
scas
int
cmpsl
or
ljmp
sti
sbb
dec
out
cld
cmp
mov
adc
and
inc
xchg
xchg
xlat
push
cmpsb
das
stos
aas
push
mov
testl
icebp
adc
mov
xor
gs
fcmovnu
push
sti
nop
sbb
jno
xchg
cmpxchg
sahf
mov
fcompl
inc
and
jo
xor
adc
inc
mov
daa
or
adc
es
mov
fadd
mov
cli
dec
pop
mov
add
push
push
aad
lods
dec
mov
jbe
inc
rclb
add
fsts
outsb
loopne
inc
jnp
movsb
or
loope
addb
sub
in
int
or
cmpsl
sbb
mov
lods
xor
jbe
out
inc
int3
dec
scas
push
mov
cld
call
jnp
roll
shl
or
jne
jle
dec
daa
aam
ja
es
test
inc
xchg
add
fucompp
lods
shrl
push
push
lret
cmp
xor
sbb
cld
lods
daa
mov
dec
jecxz
dec
mov
mov
sbb
arpl
push
stos
fwait
insb
pop
jmp
sub
xor
aam
scas
addb
mov
lahf
addr16
adc
adc
jp
jl
mov
ret
push
rol
xlat
addb
bound
mov
jmp
mov
imul
push
mov
jg
lret
dec
inc
es
stc
sbbb
jne
add
nop
pop
or
push
xchg
aad
jae
cmp
mov
shll
push
or
out
rclb
mov
push
jae
loope,pn
mov
mov
push
mov
clc
jg
sub
cs
jnp
out
in
or
pop
mov
lret
mov
sub
ficoml
sti
cltd
fbstp
and
dec
inc
mov
pop
sbb
pop
inc
pop
mov
mov
stos
mov
sahf
scas
push
jno
icebp
mov
mov
test
out
or
jnp
lret
insb
imul
xor
lcall
jmp
fs
xor
adc
sbb
sti
fildl
jge
dec
mov
loope
and
es
scas
dec
test
add
dec
stos
cld
sarl
ljmp
imull
and
lods
jge
xor
das
jle
jg
sub
jno
or
lods
adc
dec
pusha
and
push
xlat
and
sub
cmp
inc
lret
enter
ljmp
subl
inc
sub
dec
dec
xchg
adc
pushf
mov
and
mov
jae
jno
popa
mov
dec
out
fidivrl
xchg
xchg
push
and
call
and
fimuls
sub
movsb
int
sub
ret
inc
ja
xchg
das
xor
jno
mov
adc
in
mov
mov
lds
sub
std
mov
mov
push
and
cli
push
jnp
fwait
js
pop
repz
outsb
or
les
daa
or
add
sahf
dec
push
inc
cmp
pushf
mov
mov
push
pushf
mov
lahf
ret
mov
aas
push
cli
jl
pushf
xor
addr16
adc
fmuls
dec
les
pop
lods
in
imulb
push
jb
int3
es
pop
mov
stos
cli
jnp
push
cmp
and
out
int
out
mov
pusha
repz
sbb
jmp
inc
test
call
test
mov
inc
dec
in
fcmovb
das
jno
vmovss
pop
xor
adc
je
mov
lret
iret
mov
inc
pop
int3
out
push
cmp
dec
xchg
scas
mov
out
sbb
jnp
divl
clc
out
pop
cmp
iret
xchg
cmp
mov
data16
push
cmp
sbb
dec
jbe
stos
push
out
pop
dec
xchg
andl
data16
in
les
loopne
sarb
xlat
inc
scas
in
and
fisubrs
jmp
jecxz
cmp
fnstcw
xlat
ficomps
leave
push
inc
inc
jae
sahf
or
pop
jb
test
or
cltd
cltd
cltd
sub
push
out
sbb
out
test
cmp
mov
adc
ja
aas
cmp
sbb
rol
mov
js
xlat
repz
mov
test
sahf
xchg
fbstp
push
pop
jae
imul
loopne
adc
ljmp
and
test
add
std
mov
mov
cli
pushf
mov
and
pop
xor
shlb
cmp
inc
jecxz
lahf
mov
push
mov
ficoml
cmp
cmc
inc
cli
notl
xchg
fisttpll
dec
into
lret
rcrb
js
data16
pop
mov
push
mov
pushf
out
daa
sarl
rcrb
pop
dec
ljmp
inc
push
es
jne
xchg
jp
inc
icebp
xor
mov
inc
dec
jp
add
and
movsb
ds
sahf
arpl
fcomp
pop
jnp
or
sbb
fisubl
mov
jb
cs
xchg
mov
add
or
cltd
mov
xorl
xor
jg
xor
adc
jbe
sub
mov
mov
dec
data16
cmp
xchg
adcl
ss
into
mov
fcom
test
adc
adc
and
dec
sbb
mov
xlat
cmpsl
test
push
dec
insl
inc
pop
lods
rcr
movsb
in
int3
and
cmpsb
mov
xor
add
nop
std
mov
test
or
xor
pop
setne
push
jo
shr
push
pushf
into
jl
mov
clc
cmp
push
sbb
data16
movups
or
xchg
rcrl
rcrb
fisttps
jecxz
jo
xlat
pushf
shl
in
out
xor
pusha
mov
movsb
movsl
xor
ja
ja
fimuls
decl
mov
or
and
xchg
scas
jl
popa
mov
mov
fs
shll
lods
out
mov
and
add
cmp
mov
rcrl
outsb
or
jnp
add
add
ffreep
dec
or
jg
xchg
in
call
out
xchg
fwait
dec
test
pop
shll
or
or
pop
inc
sti
ret
jmp
add
pop
inc
xor
cmp
pop
jp
mov
adc
mov
mov
jae
lcall
push
inc
fnstsw
rcrl
mov
push
sbb
sahf
and
in
js
or
inc
mov
jmp
shlb
mov
rcr
ljmp
jb
jbe
xor
lcall
cmp
icebp
dec
stos
jnp
or
sub
popf
dec
inc
add
sbb
adc
scas
out
pop
xchg
pop
sub
jno
aad
inc
test
in
pop
decl
bound
add
mov
dec
imul
xorb
rcrl
or
inc
jecxz
mov
mov
inc
subl
lahf
ja
or
mov
jne
or
ljmp
mov
mov
cwtl
sub
dec
dec
xorb
les
shll
stc
mov
mov
jb
enter
pop
data16
addl
imul
xor
xlat
and
fwait
cmpsb
jo
pop
xchg
mov
or
mov
push
aas
push
mov
xor
jbe
nop
add
jae
aad
pop
xchg
scas
int3
push
adc
mov
inc
inc
adc
orb
or
sub
in
or
pop
insb
cmp
cltd
push
filds
test
push
pop
dec
or
dec
stos
je
lret
sub
popf
mov
cld
adc
iret
and
push
es
ss
cld
push
fisttpl
sub
push
mov
je
imul
adc
and
lahf
push
negb
lahf
inc
arpl
bswap
cltd
ret
fadd
mov
pop
cmp
out
mov
sbb
out
pop
enter
inc
or
pop
push
paddsb
xchg
xchg
xor
mov
cmp
add
ficoml
mov
xor
mov
xchg
repz
jno
and
pushf
test
dec
gs
int3
mov
mov
lds
sbb
or
std
repz
dec
push
dec
jle
push
fldenv
jb
lods
sbb
bound
test
pop
xor
xor
add
pop
inc
push
ja
fstpt
fs
icebp
or
cmp
jne
es
push
mov
rorl
xor
adc
push
or
mov
outsb
fwait
inc
in
pop
inc
je
xlat
xchg
arpl
xchg
sub
sbb
inc
mov
scas
mov
pop
mov
rclb
jle
and
xchg
push
aaa
ja
into
push
mov
aas
jmp
cmp
fistpl
daa
inc
mov
and
mov
or
or
jae
out
cmp
shr
inc
imul
in
pop
push
jae
fmull
xlat
and
jl
cmpsb
xchg
rorb
cmp
push
sub
mov
push
dec
fcmovb
mov
mov
inc
inc
es
ficompl
cld
rcrl
mov
add
cmp
push
push
test
cmp
aas
push
fcoml
sub
enter
scas
sbb
and
mov
push
mov
stc
testl
sbb
jbe
scas
cmp
movhps
push
xchg
fsin
imul
repnz
fsubr
mov
rorb
outsb
xchg
adc
out
pushf
int
xchg
push
inc
push
mov
out
inc
push
push
repnz
push
or
cmpsl
cs
pop
stc
pop
or
test
lods
adc
mov
fimuls
and
das
mov
pop
leave
jecxz
push
mov
or
mov
xchg
aad
mov
push
push
sbb
mov
xor
shlb
aaa
sbb
mov
xchg
and
adcl
cmp
dec
or
cli
cwtl
xchg
push
sub
sub
decl
cmp
fldt
pop
jne
fwait
test
lods
mov
jle
ds
jb
pop
jbe
jg
loopne
jecxz
xchg
mov
fldcw
inc
dec
mov
jb
int
jae
movsl
fwait
out
rorb
shll
ss
push
jecxz
fsubrl
cltd
fimull
dec
aad
and
jne
cmp
imul
mov
pop
fimull
or
add
adc
jg
lds
ss
pop
push
outsb
fsubrl
add
mov
lcall
sub
lods
push
std
push
fsts
sbb
mov
sahf
push
push
out
inc
outsl
les
cmc
sbb
mov
inc
dec
dec
push
int3
ljmp
imul
inc
lds
popf
fldt
push
rorl
fdivs
cmc
cmp
cwtl
adc
add
mov
mov
pop
pop
cmp
mov
mov
dec
mov
sub
fsubrl
xchg
leave
dec
jbe
xor
adc
iret
ret
jecxz
notl
scas
jg
js
jecxz
in
hlt
push
mov
sbbl
xchg
push
loope
addb
loopne
mov
sub
or
mov
sbb
and
movaps
mov
filds
es
aad
mov
sub
inc
mov
imul
fwait
dec
xor
aam
inc
and
xchg
adc
int3
cmp
outsl
sti
icebp
push
sahf
mov
dec
inc
jmp
mov
mov
jmp
or
dec
jg
popa
sub
int
mov
mov
pop
inc
xor
divl
sbb
imul
movsb
test
js
dec
mov
cmpl
jge
push
pushf
shlb
int
movsb
pop
int
jmp
adc
dec
into
aaa
fnstsw
pusha
cmp
push
nop
negl
sbb
dec
in
mov
and
jecxz
sbb
push
mov
nop
rcrl
es
pop
or
jae
lock
mov
pusha
imul
xorb
cmp
mov
inc
int3
pushf
sub
gs
mov
leave
sub
popa
fisttpl
test
into
push
adc
xor
call
mov
mov
jns
ret
jmp
add
and
jb
or
sbb
mov
popa
fcmovnu
mov
jp
pop
xchg
ljmp
cld
ja
ss
ret
add
pop
scas
mov
lods
les
stc
push
xor
mov
ret
xchg
into
add
cltd
cwtl
mul
repnz
adc
xorb
movsl
lods
cwtl
cmp
mov
or
fwait
mov
jns
pusha
sahf
adc
mov
mov
scas
pop
lret
sahf
mov
fwait
not
mov
xor
or
hlt
pop
rcr
fidivl
vpunpckhbw
decb
sbb
mov
mov
mov
and
int
sti
mov
das
mov
push
xchg
sbb
xchg
repz
and
clc
xchg
cmp
sub
pushf
movsl
inc
sub
push
iret
mov
push
icebp
adc
cmp
cmpsl
xchg
or
jle
das
add
rclb
int
stos
out
push
dec
lret
mov
xchg
in
or
and
mov
std
dec
cmp
xor
into
and
pusha
ret
jns
and
add
fisubrs
xchg
push
shlb
or
and
mov
ret
insb
fsubs
ss
data16
int
pop
dec
lea
pop
loopne
jnp
adc
lods
jne
clc
jle
out
lret
sbb
in
and
pop
mov
or
mov
jno
outsb
fiadds
insb
sbb
sbb
mov
lahf
push
ljmp
mov
sub
adcb
or
cmp
test
inc
fcoml
lahf
inc
insb
cwtl
mov
xchg
xchg
mov
ja
scas
push
iret
sub
mov
jne
jb
mov
loop
mov
rcl
mov
mov
adc
xlat
lret
fprem1
iret
loop
fs
bound
mov
xor
dec
xor
pusha
mov
std
jge
push
dec
fdivl
subb
imul
dec
sbb
dec
pop
push
xor
push
push
aaa
iret
leave
into
sarb
std
cld
test
jns
and
imul
sbb
and
push
add
test
decl
sbb
pop
sub
imul
fwait
push
pusha
aaa
and
icebp
or
push
out
and
and
pop
cld
pop
pop
mov
sub
fs
add
jg
mov
cltd
pop
lods
jl
testl
sarb
sbb
add
shlb
sti
imul
test
adc
inc
or
fimuls
mov
js
jmp
mov
mov
mov
and
loope
xor
callw
add
fcmove
pop
int3
cmp
pop
in
ss
sub
enter
in
push
mov
jle
cmc
insl
mov
add
mov
sbb
je
mov
jecxz
in
push
shlb
test
jns
lret
push
dec
fwait
jb
sbb
das
pop
int
pop
gs
and
inc
push
mov
dec
sbb
push
xor
mov
shll
repz
push
push
filds
sti
movsb
mov
iret
ljmp
fldt
pop
mov
and
jecxz
mov
fwait
mov
movsb
aaa
sti
sbb
mov
xor
jecxz
and
in
test
add
lods
incl
sarl
cmp
and
std
pop
gs
pop
mov
test
into
test
inc
pop
das
fistps
inc
ja
mov
fists
or
pop
mov
aad
and
data16
push
std
jae
inc
and
lods
xchg
adc
jg
shr
mov
add
add
mov
neg
or
daa
dec
pop
push
iret
pop
jns
loopne
jno
cmpsb
inc
push
mov
sarl
push
je
inc
mov
test
xchg
add
cmp
mov
std
ss
pop
jg
mov
imul
jae
and
testb
pop
or
mov
jge
dec
pop
sub
xchg
iret
add
fldt
fcmove
ss
rcrb
cs
imul
gs
je
sbb
ja
add
test
and
sti
push
jl
inc
dec
mov
adc
mov
xchg
fisttpll
shrl
repnz
and
inc
pushf
dec
sub
std
pop
pusha
inc
mov
ret
les
dec
cs
dec
test
inc
aaa
push
add
test
cmp
jb
sbb
push
std
cmpsb
pusha
dec
mov
gs
inc
or
xchg
mov
imul
test
push
sbb
int
dec
jg
div
subl
sbb
nop
loop
jg
sub
jae
rolb
dec
push
int3
mov
loopne
cmp
bound
in
jns
scas
and
fisubrl
lods
inc
das
in
push
pop
mov
xor
aas
or
xchg
add
les
in
jo
testl
ljmp
mov
add
test
leave
jae
scas
ds
or
movsl
sarl
imul
pop
mov
xchg
mov
or
cmp
lock
adc
je
inc
sbb
rorl
xchg
mov
adc
test
cmc
aad
xchg
dec
add
pusha
pop
mov
movsl
hlt
int
xchg
repz
pop
inc
add
fidivrl
add
mov
sbb
pop
add
std
cli
out
jl
incb
fs
jae
ret
jno
gs
mov
or
clc
jecxz
add
test
jl
fnstsw
sbbb
cmp
mov
loopne
push
mov
inc
insb
xchg
shlb
gs
int3
dec
jg
sub
jne
push
mov
mov
adc
mov
mov
inc
fwait
or
in
mov
fsubs
add
dec
jge
sti
lcall
add
push
repnz
cmp
data16
bound
mov
jno
loopne
fwait
in
idivb
mov
lea
out
leave
dec
cmp
xor
fsubs
xchg
data16
rol
addr16
add
out
lods
mov
loope
std
insl
mov
mov
loop
mov
and
mov
jae
mov
sbb
cmp
mov
and
decb
fwait
ds
mov
jecxz
mov
ret
cltd
scas
shrb
insb
and
cld
push
ficomps
mov
mov
cmpsb
pop
inc
movsl
outsb
sbb
cmpsl
jnp
jb
das
fdivl
scas
sar
inc
fsts
sbb
or
sub
and
lret
jmp
pop
jg
fcmovnb
fdivl
test
or
mov
out
mov
mull
addb
jl
mov
mov
cltd
fistpl
scas
xchg
cmpsl
add
xor
push
mull
addr16
xor
mov
jg
jnp
inc
xchg
out
push
mov
loop
dec
movsb
idivb
std
jmp
sub
fwait
cmpsb
fstpt
add
inc
push
stc
loope
lret
pop
loop
arpl
ret
lret
push
or
xor
pushf
mov
and
jecxz
cmc
in
out
fs
adc
ret
rolb
sub
fidivrl
dec
add
mov
mov
jecxz
mov
lret
sub
add
js
pop
dec
mov
jg
nop
xchg
mov
je
mov
mov
sub
stos
pop
out
aad
or
xor
mov
or
orl
xchg
pop
fwait
add
xchg
sbb
repz
cmp
mov
into
inc
jno
mov
cmpsb
push
fisttps
jae
imul
lods
hlt
fimull
dec
dec
out
popf
sub
rcrl
sbb
and
repnz
jno
test
dec
and
fists
je
inc
or
sbb
es
push
jnp
mov
add
fwait
jno
mov
movsb
roll
lret
daa
fimull
cld
std
jo
dec
xor
lret
ret
and
sti
jmp
mov
movsl
add
fidivl
and
addr16
sub
xorl
inc
rcrb
mov
ficoml
imul
popa
fwait
add
or
cwtl
add
lock
jle
mov
jnp
sub
inc
or
mov
pop
out
or
lds
cmpsb
out
fldt
in
inc
xor
jge
xlat
shl
cmp
sbb
loopne
call
das
mov
cmp
ja
outsl
sbb
inc
dec
xchg
das
inc
cmp
fstpt
xor
and
dec
es
pop
shrb
das
dec
cmpsl
jge
jae
inc
dec
stos
jnp
outsl
sbb
mov
ret
ror
jae
or
jne
outsb
push
je
cld
inc
dec
push
and
mov
inc
testb
loopne
mov
lcall
test
pop
add
inc
fwait
scas
xchg
mov
sub
mov
mov
push
imul
or
imul
sbb
out
push
pop
lods
xor
push
push
cmp
adc
enter
out
sbb
popa
cmpsl
xor
lret
or
test
jno
fsub
cs
test
add
xchg
mov
fildll
mov
iret
push
fsubrp
stos
mov
leave
mov
rcll
pop
repz
pop
dec
movsb
sub
pop
lds
subb
pop
add
test
mov
loope
mov
mov
mov
imul
push
inc
out
inc
push
and
insb
xor
popf
fst
nop
imulb
icebp
sub
stc
and
pop
or
dec
xor
mov
mov
aad
imul
repz
pop
and
adc
cli
in
dec
in
sti
cld
cmp
out
jmp
es
mov
xor
fldenvs
or
mov
adc
add
push
mov
sub
lret
pop
inc
xorb
push
or
imul
sbb
popf
sub
xorb
out
orl
inc
mov
dec
xchg
jge
dec
ljmp
ja
pop
cmp
imul
mov
jmp
test
mov
jno
mov
repz
out
cltd
jle
push
das
sbb
mov
fcmovu
je
clc
inc
xor
lds
and
pop
or
loopne
leavew
out
pusha
inc
bound
pop
pop
lahf
xchg
sub
cmp
cmp
cltd
add
jne
push
inc
sub
ja
xlat
cmp
leave
xchg
add
sbb
adc
jo
push
clc
jmp
in
enter
imull
ja
pop
push
push
out
jl
insl
popa
sahf
mov
or
cmc
push
sbb
cwtl
jnp
dec
pop
setb
or
xor
xor
stos
gs
xor
sub
pop
sbb
daa
xor
jl
cmp
fidivrs
in
mov
sub
jbe
insb
dec
xor
jno
icebp
jmp
or
out
or
mov
xchg
int3
scas
fs
into
lahf
pop
jno
mov
cltd
rorb
clc
push
in
mov
jo
adc
ja
je,pt
cmp
fiadds
dec
xchg
xor
imul
mov
xchg
mov
mov
and
inc
insb
repnz
fs
rorb
xchg
mov
jnp
pop
imul
dec
sub
divb
es
inc
or
xchg
xchg
mov
jl
dec
xchg
push
mov
lods
jecxz
xchg
sbb
imul
pop
negl
sbb
mov
fnstsw
add
lret
loope
adc
fidivl
inc
fwait
inc
lods
ror
jl
mov
jb
cmp
es
inc
call
cmp
int
push
push
add
jmp
loope
nop
and
aam
xor
out
pushf
stc
mov
jg
jb
fwait
and
les
nop
jge
fcmovnu
or
mov
jbe
test
dec
cli
das
mov
insb
daa
xor
aas
add
jae
dec
repz
fisubl
adc
sub
rolb
push
pop
mov
adc
sti
mov
add
int3
pushf
arpl
push
mov
scas
adc
push
and
fs
xchg
pusha
mov
or
fs
in
mov
push
outsl
sub
int3
sub
sub
maxsd
dec
xor
xchg
mov
pushf
pop
dec
rcrl
nop
dec
outsb
pop
or
movsl
xchg
inc
or
mov
iret
push
push
ret
add
int
dec
push
ds
into
inc
mov
adc
dec
outsl
fidivrl
and
xchg
jno
ljmp
lock
mov
pop
pusha
jae
in
clc
and
mov
mov
sbb
mov
lret
inc
mov
icebp
sbb
fdivl
sub
add
inc
lret
mov
in
add
xor
stos
dec
add
add
orb
jl
cmp
inc
hlt
dec
stos
data16
add
lods
std
iret
xor
mov
cmp
add
adc
cmpsl
jmp
cmp
and
fs
imul
dec
jg
addr16
jbe
mov
std
in
in
or
dec
mov
outsb
aaa
daa
adc
inc
and
cltd
jl
leave
scas
dec
mov
add
push
popf
popf
fwait
adc
jae
out
repnz
pop
mov
jnp
push
test
loop
sub
push
mov
loop
sbb
mov
add
or
bound
mov
ret
or
dec
out
fists
fildll
inc
dec
lods
and
jno
int3
lcall
bound
mov
mov
inc
sub
pop
mov
pop
inc
push
cmpb
mov
xor
insb
sub
cmp
pop
adc
xchg
or
xor
inc
mov
neg
imul
jg
addl
sub
es
or
aam
std
das
push
add
hlt
jmp
and
sub
adc
sbb
and
xchg
cwtl
jns
mov
loope
movaps
std
inc
fnstenv
sti
sub
lcall
xor
fnsave
outsb
fdivrl
inc
je
int
mov
add
mov
enter
in
pop
push
sub
cmpb
add
cmp
dec
cli
fcomip
out
or
dec
in
in
mov
mov
push
test
inc
fs
pop
sahf
cmp
mov
test
orb
push
push
inc
fildll
push
std
mov
sbb
jb
xchg
xor
dec
pop
mov
mov
das
inc
stc
mov
push
or
pop
sbbb
push
stos
xchg
sbb
jbe
imul
jl
notl
sub
cmp
xor
mov
mov
and
adc
fcomp
ja
mov
cli
stc
dec
stc
sbb
mov
adc
negb
pop
cmp
aam
jl
xchg
lahf
cmp
sub
and
outsb
dec
pop
pop
ret
nop
adc
pop
subl
loope
add
cmp
fisubl
cmp
out
inc
dec
movsl
jnp
test
push
push
push
sbb
lea
jge
xor
test
insl
loopne
cmpsl
mov
and
or
sbb
jo
push
pop
stos
cld
cmp
push
push
ret
lds
lds
add
pop
jecxz
or
and
clc
pusha
loopne
adc
out
es
loopne
insb
ds
sub
sarb
push
jl
sbb
cltd
cmp
or
mov
repnz
xor
mov
dec
mov
ds
xor
pop
mov
dec
iret
sub
pop
dec
clc
xchg
xor
insl
jle
orl
test
aaa
mov
adc
pop
cmp
test
popf
mov
stc
add
out
insl
test
add
sub
lds
cmp
scas
lret
jg
lahf
xchg
sarb
or
lods
sahf
inc
aad
or
cltd
icebp
or
mov
cmp
jnp
mov
or
or
bound
mov
lds
or
insb
xchg
mov
and
testb
pop
jno
adc
dec
icebp
xchg
in
stos
fsubrl
cmp
sub
push
scas
xchg
ja
fstpt
dec
and
pop
mov
out
aad
das
in
pushf
mov
mov
mov
sti
push
cmp
arpl
enter
xor
xchg
clc
call
pop
ja
mov
pusha
out
cmpsl
fidivrs
mov
arpl
fidivrl
es
fwait
pop
mov
jg
shlb
out
sbb
xor
sub
pusha
mov
push
sub
jl
pop
and
loopne
fcmovnbe
test
arpl
cmc
or
dec
mov
sub
fnsave
jns
push
add
or
sub
punpcklbw
sbb
and
inc
push
ja
les
and
push
mov
mov
sbb
pop
xchg
push
jbe
sbbb
jno
dec
jns
cmp
lds
aad
cmpsl
fmulp
mov
aad
imul
lret
push
imul
mov
out
sahf
push
pusha
lods
repz
cmp
or
pop
int
movsl
iret
movsl
or
fwait
testb
jg
or
fildl
adc
push
jl
repz
push
imul
mov
adc
push
cmp
inc
pop
je
and
in
enter
fdivrl
imul
xchg
add
xchg
cltd
push
and
mov
push
shrl
jmp
and
mov
sahf
loop,pt
cmpsb
mov
cmp
cmp
test
lcall
jmp
or
and
inc
cmp
pop
lahf
jo
sti
daa
cltd
incl
or
shl
or
test
mov
add
mov
or
dec
dec
pop
mov
test
sub
xor
js
add
sub
jno
test
push
dec
adc
lahf
pop
shlb
int3
aad
bnd
fucomip
inc
cmpsb
adc
dec
or
sub
rcrl
lods
mov
jae
sub
cmp
xor
jl
cltd
out
sub
pop
pusha
mov
pop
dec
jmp
jns
mov
int3
jbe
dec
xor
inc
jnp
imul
outsb
cmpsl
mov
cmp
xchg
cmp
lods
pusha
inc
xchg
xor
sti
fiadds
jmp
sub
rclb
cs
add
sahf
jne
cmpsl
lock
pushf
dec
jmp
mov
nop
aad
add
out
aas
mov
mov
mov
out
test
icebp
jmp
sarb
sbb
cwtl
jmp
test
movsl
enter
in
push
enter
add
pusha
sub
sbbb
inc
andl
movsl
movsb
mov
or
cltd
into
inc
mov
cmp
jb
sbb
dec
cmp
mov
out
sub
fimuls
cmp
rolb
push
inc
push
int3
imul
or
xchg
sbb
pop
pop
jmp
psraw
mov
sub
add
pop
cwtl
in
loope
fucomi
out
sub
ss
push
test
aad
dec
movsl
and
cld
ret
cmp
xchg
push
push
jo
icebp
inc
fs
pop
or
lock
pop
sti
xchg
ss
mov
cli
int3
sarl
nop
push
out
mov
in
fsubrs
pop
shr
fisttpll
mov
sbb
stc
call
jle
adcb
flds
add
lahf
pusha
inc
enter
roll
xor
push
sti
imul
adcl
add
movsl
clc
sti
xchg
outsl
sahf
lods
sbb
unpckhps
in
adc
adc
stos
dec
cmp
lahf
dec
mov
adc
jnp
inc
inc
mov
repnz
les
mov
icebp
push
aam
je
push
add
jns
pop
sbb
mov
rol
cmpsl
es
daa
dec
pop
jecxz
mov
mov
inc
push
in
cmp
pop
sti
dec
arpl
or
pusha
push
push
fisttpl
sub
repnz
push
xor
cwtl
lods
popa
shrb
hlt
in
test
mov
jno
inc
daa
sbb
jnp
cli
xchg
iret
jp
int
mov
loop,pt
or
mov
or
mov
insb
inc
je
fisttpll
and
cmp
mov
xor
testl
mov
cmp
add
test
fnsave
fsubs
imul
ret
pop
shl
inc
ja
movzbl
mov
jno
ret
pop
adc
jg
lods
mov
mov
repnz
filds
pop
sti
mov
es
in
pop
xchg
aad
stos
dec
add
decb
push
sbb
jl
call
pusha
pusha
inc
adc
sbb
into
mov
popf
gs
jl
pop
cmp
mov
jmp
adc
cmp
add
adc
fsubrp
jmp
mov
and
xor
sub
mov
mov
jmp
cmpsb
rorl
or
js
lahf
test
dec
lea
jae
sti
test
in
pop
cmp
test
mov
cmp
or
mov
int
out
mov
mov
push
add
sti
nop
xor
or
in
repz
pop
mov
insb
add
pop
inc
cmp
sbb
ret
imul
sub
push
mov
repnz
dec
hlt
fidivl
sub
pop
nop
cmp
push
subl
ss
jno
and
insl
out
mov
popf
insl
imul
dec
cli
cmp
mov
cs
ret
mov
std
dec
dec
pop
pop
sti
in
or
dec
mov
xor
mov
stos
bnd
jecxz
mov
xchg
lea
imul
aam
in
and
fwait
cmc
push
mov
in
jg
shll
mov
inc
inc
cmp
fdivrs
loope
push
test
mov
stos
fdiv
mov
mov
sub
pop
shll
mov
xchg
or
fnstenv
imul
cmp
arpl
ss
mov
adc
in
adc
xchg
cs
clc
outsb
imul
cltd
fmuls
mov
enter
inc
mov
fcomps
fwait
out
ss
cli
pop
inc
lds
lahf
lock
pop
cmp
lea
mov
sbb
ljmp
rolb
inc
xor
push
int
lods
jle
ret
inc
dec
dec
ljmp
mov
or
in
jb
pusha
lcall
fcmovb
add
shll
pop
repz
jns
sarb
pop
push
movsb
mov
fbstp
dec
cmp
mov
ljmp
fisubl
add
mov
xorl
jmp
cmp
or
fnstenv
push
ss
dec
mov
adc
scas
and
loopne
movsb
jmp
cmpsl
cld
addr16
mov
cmp
mov
icebp
add
je
into
mov
js
les
mov
stc
push
mov
jb
sbb
or
jno
fs
addb
cmc
lahf
sbb
push
mov
cs
int
les
push
jae
shr
adc
add
dec
pusha
pop
scas
lds
mov
or
hlt
orl
jle
test
ret
stos
clc
and
jecxz
pushf
sti
jns
inc
adcl
mov
mov
xchg
inc
xchg
xor
cs
cmp
push
push
mov
push
adc
xor
pop
cmp
jno
inc
dec
mov
hlt
andl
adc
scas
mov
jg
sbb
cld
sub
out
aas
mov
jg
lea
jmp
int
out
aam
adc
cmp
fsubrs
loop
outsl
mov
mov
jg
xor
test
mov
sbb
push
push
mov
xchg
cld
fadd
mov
roll
mov
push
pop
sti
dec
pop
pop
xlat
loope
dec
data16
sbb
add
mov
test
sbb
mov
ljmp
dec
xor
sub
jae
pop
rclb
push
xchg
mov
std
or
jnp
sbb
imul
mov
inc
jns
imul
dec
adc
out
stc
pushf
push
aad
push
cmpsl
loope
cmpsb
fwait
cmp
aaa
ljmp
add
icebp
mov
mov
inc
cmp
in
adc
psubd
daa
jbe
dec
sbbl
cmp
roll
pop
mov
mov
inc
fildll
loope
jp
mov
push
sbb
imul
outsb
adc
cmpb
mov
push
lock
fs
fsubrp
lahf
push
adc
push
int3
pop
jnp
mov
jge
mov
ds
out
mov
inc
bound
xor
jno
das
lret
loope
es
jp,pt
push
jecxz
scas
cmpsb
popf
jg
jae
aas
int3
addr16
cmp
ja
cs
xor
test
adc
imul
pop
aam
andb
lahf
lret
mov
js
stc
imul
cmp
push
jno
dec
jo
fwait
cmpsl
jnp
mov
pop
bound
xchg
dec
repnz
mov
push
adc
mov
jo
in
negl
std
mov
loope
fsubrl
int
psubq
cmpsl
shrl
orb
outsl
loopne
jl
repnz
jo
aad
das
xchg
dec
and
ret
or
dec
stos
mov
movsb
test
cmp
mov
push
loopne
sub
pop
mov
incb
pushf
mov
mov
data16
mov
ror
mov
enter
out
push
xor
jmp
pop
aad
dec
cmp
add
lock
inc
fadd
ja
lods
push
xchg
std
dec
add
clc
addr16
dec
jae
xor
jecxz
pop
ret
stos
fsubr
orb
jl
movsb
sub
ror
outsl
fisubrl
nop
jge
push
pop
or
call
dec
jl
in
inc
pushf
fwait
cmp
push
push
insb
out
stos
dec
or
mov
jno
stos
outsl
mov
add
dec
dec
pop
cld
fidivl
push
and
rcll
cmpl
jge
gs
cmp
lahf
push
dec
add
popa
outsb
mov
push
push
adc
sub
mov
sub
sub
pop
mov
test
push
jnp
xchg
add
sarl
pop
movsb
addr16
cmp
mov
jae
mov
sub
mov
sti
test
inc
xor
jg
lahf
icebp
in
mov
clc
jbe
popa
out
push
or
inc
repz
dec
mov
jno
xor
inc
cmp
ja
xor
jp
jb
mov
fwait
inc
sub
xor
daa
out
dec
push
jae
mov
mov
pop
test
shrl
and
outsb
fcoml
mov
dec
jno
xchg
outsl
xchg
addl
lods
xchg
or
add
std
out
ret
pop
mov
test
jnp
push
testl
mov
push
pop
push
push
aas
mov
dec
pop
mov
cmpsl
cmpsb
pop
pusha
dec
test
test
or
and
mov
mul
jp
xor
imull
jl
jle
cmp
mov
pop
aam
push
pop
insb
fisubrs
jg
mov
cmpsb
sbb
scas
sub
and
xorl
dec
mov
sahf
mov
daa
sar
add
inc
push
inc
jmp
mov
lret
es
lods
scas
dec
mov
imul
or
cmp
int3
es
mov
mov
and
add
jnp
mov
mov
push
sub
mov
pop
dec
cs
lret
shr
lods
insb
pop
jl
call
dec
fcomi
sbb
mov
inc
inc
aam
sub
stos
add
adc
ret
add
in
sarb
imul
loope
outsl
insb
ss
outsl
jbe
mov
pop
fwait
jge
pop
xchg
dec
jbe
xorb
cmc
mov
pushf
mov
adc
inc
test
push
sub
ss
dec
in
std
xchg
dec
inc
pop
dec
imul
sub
call
lahf
out
pop
adc
lock
sbb
lahf
rcrl
pop
jbe
add
pop
insl
push
data16
ja
mov
add
cltd
cs
out
cmp
into
xor
add
push
movsl
ret
mov
das
mov
dec
sti
nop
mov
stc
fmull
dec
outsl
dec
pop
xor
adc
adc
hlt
mov
ss
das
xchg
dec
add
add
push
fstps
xor
inc
mov
pop
xchg
xchg
push
mov
int3
loope
into
nop
pop
movsb
imul
sbb
cwtl
push
sub
aam
ja
rorl
or
loopne
lds
and
xchg
loope
dec
dec
mov
mov
addb
and
fwait
jecxz
leave
ds
pop
push
mov
and
repnz
push
cmp
movsb
cmp
xlat
sub
repnz
sub
jl
mov
cmp
push
dec
jmp
push
pop
gs
test
add
mov
add
jmp
fsubs
add
std
loope
movsl
inc
bnd
adc
pop
int3
pop
mov
pusha
push
sbb
movsb
js
test
and
pop
fwait
ret
jns
daa
mov
mov
adc
mov
lock
imul
call
adc
repz
call
xchg
push
or
cmp
mov
fisttps
mov
cmpsl
mov
add
fidivrl
fs
daa
mov
jl
insb
in
inc
mov
push
call
mov
mov
ja
into
in
std
fimull
lods
stos
sub
and
ljmp
sub
sub
outsb
decl
dec
pop
or
xchg
or
xchg
jo
leave
dec
mov
sbb
mov
fiaddl
ret
xchg
adc
sbb
lcall
sbbb
pop
shl
xchg
dec
nop
or
fmull
in
pushw
xor
add
fcomip
outsl
mov
arpl
cmpsb
notl
ljmp
inc
cmp
cmp
loopne
sub
jbe
jo
cmp
push
adc
daa
inc
fiadds
clc
insl
jnp
cmp
lods
mov
fisttpl
cltd
test
iret
push
xchg
sub
cmp
pop
mov
pop
aam
xor
mov
mov
js
dec
sub
xchg
cltd
push
repnz
mov
inc
jmp
cmpsl
int3
icebp
pop
sti
mov
fidivrs
mov
sub
pop
fwait
mov
shl
mov
lret
sub
out
into
cmpsb
clts
fcmovb
or
sub
mov
sbb
ds
dec
add
and
add
sbb
fwait
mov
lret
and
jecxz
shll
cmp
sti
pop
rorb
sub
add
jae
lods
fsubrl
cmp
push
cltd
and
stc
jp,pn
iret
pushf
xor
xchg
or
out
in
and
lcall
into
frstor
mov
sahf
push
mov
popf
dec
push
mov
pop
dec
lock
and
mov
pop
jl
test
ret
outsb
inc
mov
pop
push
test
xchg
dec
sbb
sbb
sbb
inc
mov
movsl
addl
and
ret
stc
add
add
into
scas
jne
testb
mov
or
xchg
or
add
sub
sub
test
sub
sahf
and
dec
cltd
xchg
ds
mov
lds
mov
jmp
mov
repnz
cmp
shr
sahf
or
and
lods
xor
cmpsl
enter
add
andb
mov
out
cltd
mov
test
fbld
jae
mov
sub
insb
test
sti
aas
push
mov
dec
cmpl
cmp
sub
dec
mov
add
mov
inc
push
arpl
icebp
in
insb
shll
or
sbb
lcall
push
dec
sbb
inc
and
test
test
add
nop
sbb
dec
lods
movsb
fcoml
popf
xchg
mov
hlt
jo
imul
rcl
jbe
adc
mov
cmc
insl
orb
scas
adc
sbb
or
jge
mov
ret
push
out
lret
or
cmp
movsb
mov
xchg
roll
mov
cwtl
mov
pop
add
ret
sub
sbb
std
push
pop
jle
jg
icebp
jl
and
jecxz
insb
fs
or
push
xchg
in
xchg
je
mov
mov
imul
mov
in
ret
shlb
fwait
sti
and
push
nop
ret
mov
imul
das
dec
push
test
popa
fnstenv
cmpsl
loopne
arpl
outsl
in
inc
pop
or
sub
aas
xchg
lds
daa
les
sub
lahf
dec
push
std
mov
adc
out
imul
mov
ds
add
sbb
pop
and
pop
sub
fbstp
pop
push
mov
add
data16
adc
inc
fisubrl
mov
in
leave
and
add
fsubrl
mov
lret
ss
jmp
mov
subl
or
lret
sbb
cmp
minps
pop
test
or
dec
dec
sub
adc
cmp
repnz
sbb
mov
xchg
je
dec
daa
shl
std
sti
cmp
sar
repz
mov
pop
cmp
xor
test
push
sub
jnp
out
aad
call
inc
flds
xor
test
push
into
and
inc
add
mov
add
push
testb
out
mov
aas
leave
es
outsb
movsl
sbbb
cltd
sbb
or
stos
cmp
int3
rorl
pop
jae
aam
insb
repnz
mov
daa
mov
outsl
loopne
jae
push
mov
cltd
pop
scas
fidivrl
mov
movsl
mov
int3
jl
imul
sub
pop
ss
inc
test
fidivl
push
shrl
insb
inc
int3
inc
sub
sbb
mov
cmovns
shr
jecxz
loop
in
fwait
xor
mov
out
mov
sbb
push
out
in
repz
cltd
call
aas
dec
stos
pusha
push
xchg
jp
jne
mov
sub
or
ds
pop
dec
cwtl
inc
inc
xcrypt-ctr
cmpsl
cltd
xchg
out
mov
mov
add
imul
iret
mov
push
imul
insl
inc
mov
mov
sub
int
sbb
sub
pop
mov
lret
push
pop
mov
cmpsl
inc
inc
jo
sbb
cmp
ja
pop
rcll
xchg
mov
ss
add
shlb
out
adc
test
cli
dec
mov
idivl
or
push
out
mov
push
lahf
sti
rol
cmp
outsl
imul
inc
fwait
mov
ret
dec
push
sbb
sti
mov
mov
inc
sbb
xchg
adc
pop
arpl
dec
mov
outsb
inc
imul
idivb
mov
xchg
or
push
mov
jns
inc
js
inc
mov
cs
rol
ds
push
cmp
je
dec
or
das
add
and
or
movsl
pop
add
sbb
icebp
fnstcw
andl
pushf
cmp
lods
inc
lahf
sbb
lock
lods
and
cmp
fcmovne
sub
xchg
sub
loope
mov
mov
ret
int
pop
xlat
dec
adc
mov
shll
push
cmp
stos
les
insl
sub
lret
nop
bnd
out
rcrl
bound
imul
lock
add
push
dec
sbb
stc
or
loopne
cmc
movb
std
pusha
ljmp
mov
dec
pop
std
decl
cmp
add
dec
pop
mov
xor
decl
inc
or
out
cmp
sbb
lock
cmp
jae
push
ficomps
xor
xchg
sbb
mov
repz
or
mov
das
jnp
or
insb
lret
cmp
jp
push
aaa
adc
adc
jnp
push
imul
xchg
and
movsb
cmpsl
or
pop
jmp
jmp
jbe
mov
mov
pop
sub
imul
lods
jo
fs
mov
dec
mov
inc
mov
insl
mov
pop
jl
jl
mov
inc
in
icebp
stos
ja
lods
mov
sarl
sbb
dec
mov
dec
push
outsb
and
aaa
test
mov
push
pop
lcall
mov
loopne
push
sub
sbb
movsl
cmp
mov
int
add
sub
cmp
sbb
mov
xor
cmc
mov
add
push
inc
cmp
imul
xchg
or
enter
lock
lahf
pop
in
cmpb
jno
ds
mov
push
mov
ficoms
mov
sub
push
insl
les
mov
and
icebp
mov
and
sahf
mov
pop
mov
or
add
fimull
jae
hlt
mov
imul
sahf
imul
cmp
cmpl
pusha
mov
je
mov
out
xchg
mov
jnp
adc
mov
imul
pop
adc
into
movsb
testl
es
push
imul
fs
outsl
dec
sti
insb
je
add
fisttpl
adc
xor
mov
negb
sub
pop
mov
pushf
inc
jg
out
cld
push
jbe
outsb
mov
jg
lods
nop
mov
loope
rol
mov
addr16
or
pop
ret
mov
mov
addr16
xor
pop
jnp
lods
adc
loopne
push
enter
lods
cmp
or
cli
in
sbb
imull
or
fwait
sub
fwait
and
into
sbb
testb
mov
mov
out
addr16
loopne
repz
cmc
push
sbb
cmpsl
bound
push
mov
lods
lcall
jmp
sub
dec
inc
outsb
sub
pop
mov
in
jl
icebp
adc
jbe
push
stos
add
fwait
sarb
push
or
pop
dec
lods
jmp
add
repnz
dec
adc
mov
out
jp
adc
cmp
loop
inc
jae
fisttpl
mov
in
xchg
inc
push
ss
or
sbb
outsl
es
pop
cmp
mov
jnp
mov
inc
push
xor
xor
dec
push
outsb
pushf
bound
cmpsb
dec
pop
and
jne
hlt
xchg
xchg
dec
js
lcall
jecxz
xor
xor
lock
dec
and
rcl
push
xlat
ds
fldenv
dec
int3
outsl
loopne
dec
sbbl
mov
add
pop
lea
mov
mov
mov
push
inc
dec
ss
cwtl
pop
jl
dec
pcmpgtw
rol
adc
ficompl
int
sbb
cmpsl
or
mov
test
inc
adc
push
es
repz
lods
ret
or
in
insb
inc
pop
je
call
ja
cmc
cwtl
aas
imul
mov
lods
popf
subl
mov
pop
pop
add
jl
jae
mov
cmpb
mov
push
ljmp
lods
clc
mov
fimull
cltd
sbb
mov
ljmp
mov
xchg
in
lds
cmp
xchg
xchg
sub
aad
add
sub
pop
and
js
insl
out
mov
cmp
data16
addb
and
idiv
addr16
mov
mov
xor
mov
add
pop
mov
push
xchg
dec
inc
jmp
mov
test
jl
loopne
pusha
adc
sub
adc
aad
and
and
and
call
mov
lods
mov
movl
push
ljmp
or
push
jns
movsb
stc
insl
stos
repnz
dec
outsb
imul
into
lods
and
stos
cld
aas
push
xlat
mov
pushf
repz
sbb
pop
ss
iret
rolb
xchg
xchg
sahf
gs
lds
jb
andb
lcall
clc
rorl
shrb
sbb
sbb
jle
jl
sbbl
pusha
jno
mov
or
xchg
dec
iret
or
mov
ljmp
inc
aam
faddl
or
pop
adc
push
fldl
scas
cwtl
add
sbb
cmp
iret
out
cltd
pop
sub
mov
jle
mov
iret
jg
rorl
sub
mov
hlt
rorl
xor
inc
add
xor
cmp
movb
icebp
bound
sub
in
sub
fiadds
mov
push
jbe
inc
cli
rcrl
out
push
mov
pop
push
bound
sub
mov
add
xor
stos
xchg
addb
pop
mov
mulb
cmp
and
sahf
mov
rcr
sub
pop
xchg
pop
out
adc
add
mov
push
cmp
pop
push
xor
pop
mov
mov
push
nop
push
cmp
dec
jl
test
xchg
aas
mov
jnp
mov
fs
mov
dec
mov
hlt
cmp
scas
mov
orb
pop
cli
pop
mov
pushf
iret
or
cmp
fsubp
xchg
stos
ja
jl
aad
jmp
push
jmp
xchg
cmp
mov
repz
pop
aad
lret
jg
add
dec
loopne
hlt
mov
adc
scas
add
out
sbb
repnz
loop
es
dec
inc
jmp
lock
ss
or
push
push
mov
inc
out
xlat
xor
mov
and
pop
and
sbb
adc
fidivs
add
sbb
mov
iret
aam
or
aam
stos
adc
push
jmp
mov
nop
xor
mov
in
stc
sub
mov
out
sub
inc
push
or
sbb
mov
roll
inc
int3
leave
aaa
dec
das
mov
cltd
fsub
cltd
jno
mov
mov
ss
jns
or
lods
sarl
sub
pusha
inc
lods
jmp
push
rorl
push
jae
and
mov
add
sbbb
xchg
dec
sub
push
ss
std
jecxz
popa
daa
xor
test
fsts
xor
add
or
sti
or
loopne
mov
test
sub
lods
pop
cmp
mov
push
adc
push
dec
aam
push
inc
test
or
jl
pop
push
mov
negl
xchg
add
ficoml
cmpsb
lcall
fwait
cmp
sbb
call
adc
and
lea
std
es
pop
ljmp
cmc
cmpsl
dec
xorb
rorl
mov
addl
testl
pop
mov
mov
mov
je
xor
mov
nop
mov
data16
xor
dec
and
push
js
dec
mov
push
xchg
cwtl
jmp
push
ja
loopne
pop
cld
outsl
adc
shlb
testl
shll
roll
mov
xor
or
add
adc
mov
aaa
cmc
cli
add
cmp
data16
dec
stos
sbb
sti
dec
pop
cld
mov
jno
aad
dec
dec
fcoms
into
lret
out
dec
fwait
insl
not
cli
jbe
jb
dec
mov
rcll
jg
mov
adc
and
lods
sub
cmp
jmp
cmp
ja
arpl
icebp
nop
and
push
mov
nop
cmc
stc
add
sub
inc
jb
aaa
mov
xor
sbb
cmpsl
les
loope
mov
mov
add
lret
mov
xor
or
jno
adc
cmp
push
mov
push
jno
popa
add
lock
leave
dec
push
sbb
pop
out
cmc
xor
cmp
sub
push
daa
ficompl
push
pushf
mov
jbe
movsl
sbb
push
ja
inc
cmc
sti
sbb
lea
mov
ja
or
addb
and
mov
scas
cwtl
jbe
loope,pt
das
xchg
lcall
outsb
or
ret
lods
scas
ret
add
stc
mov
mov
aam
xor
ja
sub
out
aas
mov
sbb
out
or
sbb
hlt
dec
sbb
out
dec
pop
insb
push
mov
and
xchg
cmpl
addb
fisttpll
loope
mov
and
popa
xlat
ja
adc
mov
push
imul
subb
popf
add
dec
ljmp
jl
rcrb
into
shrb
cli
jmp
mov
ja
sub
push
pusha
bnd
push
cmp
inc
cmp
shlb
cmp
in
gs
xchg
fbstp
jecxz
lahf
jecxz
cmc
fmuls
adcb
loopne
nop
sbb
pop
mov
pop
daa
movsb
xchg
dec
testl
ja
mov
adc
clc
jg
pop
fwait
idivb
push
sbb
sti
mov
fldl
movsb
cltd
scas
nop
out
fs
popf
xchg
pop
shl
push
out
mov
mov
add
loop
jnp
pop
lds
mov
mov
inc
lahf
popa
test
jp
jb
jl
xchg
sub
fscale
inc
in
sub
mov
push
push
testb
push
pop
fdivrp
sub
push
aas
and
fpatan
cmove
sbb
xor
dec
jno
pushf
add
test
fimuls
js
dec
sbb
sub
aaa
and
sub
xor
or
xchg
push
mov
and
dec
mov
les
or
cli
sub
fistpll
mov
mov
mov
movsl
lods
cmc
or
mov
lret
jecxz
dec
ret
jae
mov
cmp
scas
sub
xchg
cwtl
sub
pop
mov
mov
adc
push
or
sbb
es
mov
mov
pop
sbb
pusha
xchg
pop
data16
xlat
mov
movsb
shr
adc
mov
xor
pop
out
push
lcall
stos
jg
std
adcb
fwait
xor
pop
or
scas
cmp
sbbl
sbb
jecxz
movsb
flds
push
xchg
add
dec
mov
pop
mov
push
fidivl
cmp
and
movzbl
dec
dec
fcomi
enter
int
movsl
cmpl
jg
repz
lcall
fs
stc
in
sub
lcall
sub
jl
push
clc
mov
push
pop
hlt
ficomps
cltd
mov
insb
daa
push
mov
sahf
inc
cmp
jmp
push
adc
ret
out
push
and
cmp
std
hlt
sub
inc
bound
cmp
inc
mov
pop
loop
pushf
jl
and
fwait
ret
inc
mov
and
pusha
mov
aam
and
shll
addr16
jno
jmp
shrb
lret
mov
or
das
jno
jmp
mov
push
testl
lret
ret
test
cmc
outsl
or
mov
cmp
jle
push
adc
imul
sbb
fwait
pusha
mov
adc
inc
divb
jo
mov
push
cmp
pop
neg
in
mov
or
mov
int3
xor
jno
lods
lods
iret
and
loopne
mov
imul
inc
fldt
push
push
sbb
mov
fnstsw
and
push
in
outsl
add
sahf
loopne
and
jecxz
dec
and
cmc
sarb
mov
xor
push
sbb
imul
xlat
loopne
outsl
ss
fcomps
fsubr
enter
pop
cmp
idivl
fdiv
inc
outsb
mov
cmp
sbb
insb
sbb
fidivs
push
mov
jns
adc
mov
fstpt
adc
ja
add
arpl
mov
sbb
push
jno
and
cmp
mov
xor
xor
call
sahf
mov
mov
adc
dec
fbld
cmp
imul
data16
scas
cmpsl
cltd
add
shlb
xchg
fwait
sub
repnz
push
fstpt
mov
sarb
mov
inc
call
mov
dec
xchg
ljmp
sub
mov
push
jns
lret
icebp
jns
cmp
fcoms
sarl
rcrl
mov
in
jmp
es
mov
loop
ja
add
rcr
iret
sbb
xchg
push
fsub
sbb
pushf
insl
pop
mov
stc
dec
adc
ret
mov
pusha
inc
cmpsb
jp
aam
rorb
ja
ss
hlt
xchg
out
xchg
ljmp
cmp
dec
mov
es
sub
mov
ds
jle
jmp
scas
insb
cmc
lahf
inc
pop
jg
mov
or
add
lds
xchg
xchg
xchg
sub
adc
aad
daa
test
into
clc
andl
sub
dec
scas
inc
inc
test
aaa
mov
jecxz
nop
mov
sbb
into
aad
pop
push
mov
loop
add
xor
or
push
test
mov
loopne
fdivrs
mov
mov
es
mov
adc
insl
dec
sbb
adc
dec
dec
adcl
dec
sbb
xor
cmp
lahf
pop
or
into
movb
mov
nop
aad
and
nop
pop
inc
push
pop
mov
pop
xor
stc
incb
fcomip
inc
dec
pop
sub
push
fbld
pop
outsb
and
lahf
cld
pop
add
mov
incb
mov
dec
jae
or
mov
jmp
xchg
adc
nop
pop
repnz
fisttpl
push
pop
mov
jl
aam
xor
cmp
idiv
jno
les
nop
mov
xchg
inc
cltd
nop
ja
or
jmp
int3
or
pop
int3
lcall
aad
pop
push
mov
inc
aas
lcall
add
fdivl
shll
xlat
imul
cmp
inc
inc
ljmp
cmpsl
scas
es
mov
xor
dec
loop
jae
adc
pop
cli
scas
xchg
bound
aam
fwait
or
or
rcrb
xchg
cmpsl
jae
jle
cwtl
inc
xchg
mov
or
mov
arpl
add
pop
sbb
inc
sar
lods
mov
aad
or
xorb
and
test
add
inc
fisttps
lods
push
fadd
cwtl
stos
das
ljmp
inc
mov
daa
ljmp
in
push
popf
mov
pop
cmp
xor
push
jl
leave
andb
mov
rorl
sub
std
push
cmp
mov
adc
rorl
sub
test
xlat
mov
call
movsb
mov
std
cmp
stos
sbbb
jb
rcrl
xchg
fisttpll
jl
or
mov
sti
int
fidivl
mov
mov
test
cmp
dec
xchg
inc
pop
mov
pop
in
jl
mov
inc
xchg
mov
cmpb
pop
mov
lods
cs
inc
aad
cmp
lea
lret
dec
cmc
movsb
sbb
clc
cmp
and
xchg
pop
dec
mov
adc
insb
and
loope
inc
jbe
lock
sti
or
jmp
popf
out
xlat
fwait
div
ss
popf
jnp
int3
inc
jno
adc
sbb
lock
rclb
xor
mov
es
shll
jo
dec
aam
mov
sbb
jg
xchg
ror
add
icebp
jbe
ds
bound
push
jbe
jp
dec
shll
adc
mov
add
inc
inc
or
mov
orb
je
push
out
xchg
mov
dec
pop
or
and
jmp
fdivrs
jg
pop
lret
adc
shl
gs
pop
pop
cld
add
sub
cmp
push
pop
outsl
mov
xchg
rorl
dec
orb
mov
js
adc
nop
inc
pop
xchg
mov
test
loope
lock
and
aam
insb
pop
notl
inc
enter
ss
and
lahf
jne
mov
outsb
sub
repz
cmp
inc
into
nop
es
dec
test
xchg
fistpl
mov
stc
dec
lahf
out
pop
ss
fmull
mov
push
jl
rorl
lret
fs
lock
sub
ljmp
out
dec
cmp
jge,pt
scas
jg
into
push
adc
xchg
jl
and
mov
imul
add
iret
push
push
sbb
jg
in
adc
inc
jg
pusha
jp
movsb
in
jbe
fdivs
je
enter
inc
fld
fidivs
sbb
shlb
add
sub
add
int
scas
outsb
je
stc
clc
fcomps
imulb
pushf
jl
daa
or
divb
enter
push
in
jne
rcr
or
cld
xchg
fs
mov
scas
dec
cmp
mov
imul
jecxz
filds
cltd
cmp
gs
test
faddl
and
xor
sarl
jle
dec
std
mov
mov
mov
sub
test
lock
mov
cltd
mov
jbe
je
lods
cmc
es
mov
sbb
std
pop
cwtl
dec
loopne
rcl
and
fidivrs
and
sub
pop
test
mov
lods
mov
or
stos
hlt
pop
cmpsb
out
stc
push
pusha
cwtl
lods
test
cmpb
xor
push
jl
xchg
dec
xchg
and
popa
xor
and
push
pop
or
inc
sbb
pop
jb
pop
dec
mov
add
push
aam
pop
xchg
inc
mov
jnp
stos
fnop
test
mov
or
sbb
lods
push
mov
add
dec
out
mull
mov
push
inc
out
or
and
test
bound
andb
mov
lret
adc
jecxz
jne
call
orl
nop
adc
add
or
stos
ret
and
movsb
adc
inc
inc
pop
jnp
das
out
test
fwait
leave
rcr
out
loope
fisttps
notb
filds
mov
push
adc
ficoms
and
adc
mov
sbb
iret
mov
stos
ficomps
xchg
lods
push
lea
pop
sbb
insb
jmp
test
stos
push
movsb
pop
mov
pop
mov
mov
adc
cmpsl
movsb
lods
sub
mov
pop
xlat
test
sbb
inc
bound
jae
mov
push
mov
ficompl
push
ja
das
mov
cmp
scas
mov
mov
jbe
sub
lods
and
inc
clc
mov
addb
fdivrl
stc
sub
sbb
pop
inc
xor
das
repz
sub
fisubrl
jle
sbb
cs
jne
dec
mov
inc
rclb
inc
cmpsl
cmp
mov
jecxz
jg
test
jl
adc
sbb
ss
arpl
xor
cmpsl
push
xorb
fdivp
cmpsb
jnp
int3
xor
mov
int
lret
jnp
int3
or
test
cltd
loopne
adc
imul
lahf
imul
insb
sub
jae
cmp
push
xchg
repz
fimull
aam
pop
push
xor
dec
push
rcrl
push
test
shll
arpl
fbstp
fdivrl
insb
push
cmp
mov
pusha
mov
fbstp
gs
lcall
pop
cmc
sub
repnz
sub
fcoml
xchg
sub
repz
cmp
or
sbb
rcrb
jnp
add
push
mov
aam
cmpsl
push
arpl
adc
test
dec
pop
jns
testb
loop
pop
fnstsw
mov
lods
sti
clc
pop
out
into
dec
adc
mov
pop
in
scas
arpl
les
hlt
repz
adc
pushf
fisttpl
andb
or
mov
ds
xchg
or
pop
jmp
xchg
pusha
loope
push
sbb
rorb
nop
fcmovb
mov
push
jg
jno
int3
xchg
inc
sub
push
in
fimuls
lds
idiv
mov
cwtl
rcl
notl
pop
addr16
addr16
adc
adc
popf
inc
lea
adcb
jmp
out
inc
pop
pop
xchg
or
sub
jno
popf
fstp
jge
daa
in
sti
add
fndisi(8087
jmp
aas
lea
inc
out
mov
cmpsl
adcb
push
push
jecxz
fimuls
dec
les
std
jl
mov
shl
pop
xchg
test
mov
jns
jecxz
nop
xchg
xor
mov
pop
xor
js
xchg
test
jno
insl
add
loop
dec
mov
movsl
jmp
adc
test
mov
mov
pop
mov
adc
pop
and
ret
inc
and
inc
pop
and
enter
jl
je
fdivr
cltd
jle
lret
inc
cmp
pop
mov
add
cwtl
repnz
xor
mov
xor
inc
cmc
jle
push
mov
sahf
fiaddl
push
jg
std
mov
mov
xchg
dec
loope
movsb
adc
mov
jg
aam
dec
movsb
dec
xor
pusha
pop
das
inc
int3
jp
mov
jecxz
pusha
sub
stos
xchg
xor
ror
xchg
out
popf
mov
xor
cmc
or
jge
shrl
push
icebp
repz
cmp
sub
ja
cmp
outsb
add
sbb
sbb
insb
icebp
mov
sti
lds
out
cmp
cltd
movsb
add
mov
jns
or
mov
pusha
cmp
pop
cmp
lahf
lahf
or
int3
add
push
fisubs
addr16
xchg
enter
int3
lods
ret
pusha
add
sbb
mov
mov
fdivrl
xchg
shr
scas
aaa
fiadds
pop
jmp
cmp
fwait
mov
js
sbb
and
pop
xor
out
lcall
call
movsl
clc
scas
in
jp
push
or
test
pop
cmc
movsl
loope
sbb
dec
imul
cmp
pop
xor
shl
sub
loope
and
es
and
rorb
dec
insb
mov
add
sub
fwait
mov
je
aad
addb
or
icebp
sbb
cs
rol
or
es
aad
fwait
mov
mov
sbb
in
mov
push
xchg
mov
pop
and
stc
je
ds
je
pusha
cltd
shlb
bound
out
loope
push
sarb
aam
or
jno
mov
gs
clc
dec
jl
jl,pt
pop
out
sub
mov
cs
jae
leave
loop,pn
add
mov
lahf
dec
es
sahf
gs
nopl
jno
ret
mov
and
jns
repz
jne
sbb
jno
mov
xor
cmp
add
mov
mov
int3
jno
pop
cltd
jl
xchg
xor
adc
rolb
ret
fsts
lds
mov
data16
mov
rorl
sahf
sbbb
or
aas
dec
jne
or
dec
sbb
mov
movsl
push
cs
xor
std
lcall
cmp
pop
dec
mov
rcll
inc
adc
daa
jo
outsb
lea
jmp
pop
sbb
add
movsb
cmc
in
cmpl
loope
std
and
adc
insb
nop
call
add
cmp
jno
je
fsubrp
inc
data16
stc
pop
pop
mov
data16
inc
pop
xchg
icebp
pop
addr16
arpl
cmp
or
repnz
cmp
sbb
fwait
sarb
pop
popf
out
nop
fisttpll
push
sbbb
addr16
sub
in
lret
xchg
push
pop
mov
cwtd
sub
or
aad
cltd
ret
sbb
jmp
mov
es
fucomip
dec
xor
push
inc
and
fildll
jmp
xchg
cwtl
aad
cmp
ds
scas
insl
pop
fwait
xor
adc
popa
xchg
int3
call
push
mov
repz
or
push
mov
xchg
test
dec
adc
add
pushf
mov
mov
icebp
aas
sbb
lods
call
adc
ljmp
std
icebp
push
shl
mov
repnz
fisttpll
js
icebp
cmp
mov
sbb
dec
cli
movsb
imul
mov
and
inc
xorl
call
or
aaa
add
into
inc
inc
jecxz
sbb
loope
fwait
ljmp
into
cmp
inc
or
pop
out
xchg
pusha
cs
sarl
inc
insl
cmpsl
rcrb
sub
fcompl
cmp
ret
adc
mov
inc
push
xchg
pushf
movsl
enter
les
pop
xor
pop
js
daa
imul
insl
sbb
ficompl
sbb
fwait
mov
xor
fisttpll
sbb
cmp
and
pop
lahf
push
movsl
hlt
sbb
fcmovnu
fs
jg
icebp
fwait
add
fists
pop
jno
jge
cmpb
lock
jmp
out
or
jg
adc
and
mov
mov
or
cmp
scas
stc
xchg
mov
xchg
imul
pop
mov
shr
cmpsb
mov
jle
dec
lahf
and
pop
dec
hlt
dec
xor
pop
and
push
adc
stc
cli
out
adc
mov
mov
lahf
mov
xchg
jmp
out
sub
ret
cmp
push
push
stc
xchg
pop
inc
repnz
loop
fs
mov
mov
fsubl
cld
test
mov
sbb
inc
std
hlt
mov
fcoml
fldl
cwtl
lds
repz
mov
sub
push
movsl
rorb
ljmp
repz
or
and
adc
pushf
xchg
shl
ret
push
rol
aam
repnz
cmpsl
lods
xchg
mov
push
sti
dec
jl
mov
cmc
push
jmp
ror
sbb
pop
mov
shll
pusha
pusha
or
fisttps
jl
orb
push
rorl
mov
pop
add
inc
mov
iret
popa
mov
js
stc
sub
int
dec
pop
push
mov
jge
or
lods
lcall
adc
mov
dec
add
add
xor
jno
cmc
jmp
push
popa
pop
cmp
inc
jbe
imul
fldl
sbb
jno
daa
ret
xchg
jns
jg,pt
mov
stc
nop
dec
jnp
adc
fcoml
sbb
cltd
adcb
mov
movsb
mov
mov
add
push
mov
sbb
push
adcb
loopne
mov
imul
inc
mov
cwtl
jno
lret
push
jno
test
or
sarb
pop
push
mov
lahf
pop
push
mov
dec
or
arpl
dec
loop
push
and
outsl
pop
push
out
in
popa
adcl
lahf
jbe
jno
mov
xor
push
mov
push
cmpsl
idiv
sbb
in
pop
add
cmc
orb
les
sbb
inc
xchg
out
fwait
stos
clc
int
and
dec
test
cmp
andl
inc
mov
arpl
testl
push
dec
adc
mov
mov
sub
in
push
mov
adc
jp
pusha
inc
xchg
addl
sub
jl
pop
dec
cltd
cmpsb
xchg
mov
sub
or
cs
mov
sub
add
cmpsl
test
inc
mov
out
mov
or
test
mov
flds
jge
sbb
in
or
test
jl
sbb
into
call
ja
mov
outsl
mov
gs
add
sarb
or
mov
jmp
test
push
xchg
iret
pop
cmp
jne
inc
rclb
xchg
call
xorb
jecxz
lcall
cld
ljmp
xchg
cmpl
or
and
sub
add
sti
adc
cli
and
test
jns
ds
lods
cmp
cmp
adc
mov
adc
jmp
or
clc
cmp
push
lods
sbb
in
inc
mov
inc
inc
out
scas
jg
rorb
cwtl
mov
xchg
xchg
mov
mov
lret
pop
ja
sbb
dec
scas
fwait
mov
inc
xorl
mov
shlb
mov
xchg
add
jae
lds
push
add
inc
xchg
pop
imul
mov
jmp
into
cs
fwait
mov
mov
cmpsb
jl
orl
pushf
ljmp
dec
icebp
movsl
jns
cmc
test
in
sbb
mov
dec
into
repz
lods
subb
dec
aam
xor
and
into
sarb
repz
dec
mov
add
adc
and
lcall
mov
push
clc
enter
ret
jle
movsb
sbb
jae
hlt
mov
adc
mov
pop
push
pop
test
xor
pop
mov
or
inc
les
cmp
dec
shlb
dec
ret
xlat
loopne
mov
repz
inc
sbb
fwait
xor
mov
push
subps
adc
je
add
jg
mov
fwait
xor
or
or
mov
sbbb
mov
fbld
jns
clc
jbe
jecxz
loop
mov
cs
pop
add
add
push
push
lret
and
fs
test
into
ljmp
int3
ss
outsl
scas
pop
adc
mov
mov
jmp
sbb
pop
and
sbb
test
clc
insb
and
jl
addr16
lsl
mov
push
fstl
xor
ss
mov
out
or
jo
mov
jmp
repnz
add
adc
push
rcrb
icebp
pop
lahf
in
pop
call
insb
sub
sahf
pop
jg
push
lret
std
mov
sub
lcall
outsb
ljmp
jl
inc
push
push
xorl
das
int
out
push
mov
jecxz
mov
add
mov
xchg
sub
sti
stc
xchg
sbb
sub
aad
jnp
sub
fsubrl
dec
lods
pop
jb
jbe
fimull
int
ret
pop
pop
fidivrl
push
or
stos
popf
mov
sbb
out
push
and
es
push
imul
pop
mov
xor
sub
in
sbb
arpl
push
int3
jge
movsb
pop
push
clc
mov
jecxz
std
scas
xor
push
scas
daa
mov
data16
cmpsb
out
add
ficoml
xor
frstor
hlt
cwtl
es
test
jg,pn
push
cld
mov
push
mov
shlb
jbe
or
xchg
arpl
cmp
pushf
mov
push
ss
or
repz
incl
mov
outsl
sub
test
sti
testb
jmp
or
mov
pop
icebp
or
or
dec
and
inc
stos
mov
jmp
push
xchg
jno
adc
xor
into
dec
add
jbe
lret
in
nop
dec
or
jnp
packssdw
outsl
sub
sbb
pop
sti
mov
fwait
in
lea
cmpsl
mov
jnp
jb
inc
out
inc
aas
fs
adc
push
cmp
jl
inc
roll
pop
dec
cltd
mov
jae
xor
and
dec
and
sub
mov
or
lods
out
mov
cmpsl
adcb
in
cmp
stos
lods
out
inc
sub
jb
xchg
cs
mov
dec
call
or
aam
inc
or
jb
push
movlps
push
cmpsb
out
mov
mov
jl
push
mov
mov
mov
dec
call
sbb
pop
aam
in
jnp
cltd
nop
mov
mov
arpl
jno
mov
aas
push
inc
stos
icebp
std
jg
or
shrb
pop
xor
xor
mov
cwtl
pop
and
mov
repz
xchg
in
fmuls
stc
inc
or
repnz
pop
repz
inc
aad
xor
mov
test
ss
push
dec
jno
mov
push
pop
lahf
jmp
movsb
dec
inc
mov
mov
repz
push
shlb
stc
iret
lea
pop
jecxz
sub
mov
scas
inc
sbb
xchg
mov
add
fbld
pop
lea
mov
jg
fstpl
arpl
aaa
out
cmp
lds
mov
pmaxub
out
pop
mov
push
xor
dec
jae
add
pop
sbb
sub
pop
xor
insb
or
rorl
xchg
mov
fwait
adc
mov
pop
shll
push
push
cs
gs
lea
aas
inc
cmc
scas
lds
stos
xchg
insb
stc
fdivrl
fistpl
xchg
push
mov
mov
cmc
imul
jns
dec
sti
inc
mov
fstpt
ljmp
cmp
rclb
rolb
loopne
sbb
lods
mov
jb
mov
inc
repz
cmp
lcall
sub
fisttps
mov
dec
sub
pop
inc
xor
xorb
or
sbb
pop
xor
mov
sarl
test
cmpsl
test
lods
xchg
fsubrs
inc
addr16
imul
inc
xor
nop
mov
pop
add
jmp
nop
loopne
and
or
inc
jge
pop
imul
mov
mov
test
ss
adc
xchg
add
fsubrs
mov
xchg
inc
fcoms
push
jmp
xor
test
in
hlt
ja
mov
push
inc
xor
push
cmp
inc
sbb
cwtl
outsb
out
adc
and
daa
xor
insl
mov
jae
in
aad
es
jg
cmc
cmp
scas
push
push
fildl
sbb
mov
xchg
rorb
mov
add
inc
dec
jle
dec
mov
aaa
push
jmp
and
mov
xchg
mov
add
dec
mov
mov
mov
test
inc
jg
and
hlt
jno
mov
jmp
clc
cltd
sbb
ljmp
jle
sbb
cmp
jge
aam
jmp
pop
add
sub
adc
test
push
loopne
cs
xor
or
mov
sub
xlat
aam
stos
cwtl
mov
dec
cli
rclb
fcoml
cmp
mov
test
movsb
mov
test
outsb
fsub
mov
les
pop
mov
lds
sub
ret
pusha
push
lret
loopne
movsl
das
stos
aaa
dec
cmp
pusha
jae
sbb
paddb
mov
push
jmp
orb
aam
mov
or
lods
jns
dec
sub
js
pop
xchg
cmp
in
mov
pop
inc
loopne
xor
ljmp
dec
inc
mov
out
fiaddl
test
outsl
test
cmp
data16
mov
xor
int3
jl
movsl
fwait
ja
aad
mov
fisttpl
or
fcompl
and
fwait
jmp
sarl
xchg
popf
pop
or
js
sbb
jp
aam
pop
cmp
xor
mov
bound
pop
dec
dec
adc
jmp
aaa
dec
bswap
sti
outsl
dec
cmp
mov
scas
push
xor
xchg
ret
pop
add
enter
enter
pop
fdivp
cs
push
sub
lods
sub
pop
dec
xchg
jbe
xchg
inc
add
call
push
mov
jne
fsubrs
test
sub
mov
stos
pminub
inc
es
or
fwait
mov
fs
adc
pop
sti
cmc
sub
jg
ret
mov
adc
sub
add
pop
sbb
fs
fsubl
mov
mov
mov
ficoml
mov
mov
je
aad
imul
mov
loope
in
lahf
sbb
inc
mov
out
repnz
mov
jl
pop
inc
shr
icebp
out
or
xchg
adc
mov
sub
pusha
cmpsl
push
jno
mov
test
mov
sbb
pop
sub
or
in
inc
dec
sbb
mov
data16
fwait
mov
mov
sbb
ds
jnp
jmp
xor
sbb
jg
scas
pop
in
mov
mov
shr
xchg
dec
adc
out
js
pop
in
and
inc
pop
push
inc
mov
xor
mov
icebp
dec
push
sbb
inc
sub
jns
mov
push
jb
push
pop
sub
lret
insb
xchg
and
mov
pop
push
test
inc
addr16
jle
sub
push
push
inc
inc
mov
aaa
ret
xchg
sbbb
and
out
ret
outsb
push
inc
aas
mov
ret
pusha
sbb
out
xchg
xchg
xchg
push
in
les
and
sbb
push
out
inc
imul
jns
fmuls
sub
repz
ffreep
jo
jp
in
jo
xor
bound
and
sar
mov
sbb
mov
lock
call
push
out
lcall
jb
push
cmp
or
and
inc
dec
pop
sbb
sub
frstor
les
xor
xor
fs
decb
add
movsb
xor
mov
fnstenv
pop
rorb
loopne
clc
mov
in
cwtl
fwait
insl
shll
jnp
fbld
iret
push
xor
lahf
jle
mov
push
lahf
fcmovnbe
andl
jl
jmp
loop
mov
stos
jb
or
mov
mov
inc
sahf
andl
arpl
sub
xchg
pop
cmp
cmp
outsl
xchg
cmpsb
pop
das
mov
jne
dec
jno
add
popf
or
subl
repnz
enter
ret
rorl
repz
push
loope
mov
ud2
ja,pn
pop
out
adc
imul
mov
mov
mov
fdiv
cltd
adc
mov
cmc
shlb
xchg
push
push
addl
and
es
ljmp
xchg
pop
push
mov
iret
jno
xchg
and
dec
out
jae
iret
pusha
add
pop
mov
mov
fcompl
inc
stc
jmp
sarl
lock
sarl
pop
sbb
shll
sbb
pop
rclb
mov
jl
sbb
or
call
push
sub
lret
push
xor
cwtl
push
mov
pop
lods
mov
repnz
ja
idivb
cli
sti
push
stos
int
push
add
and
mov
sbb
cld
xor
frstor
xchg
sti
jnp
repnz
in
adc
test
adc
aam
sbbb
pop
dec
inc
outsb
stos
xorb
aad
mov
push
bound
aam
dec
rorb
sti
into
jecxz
push
in
testb
arpl
jne
mov
push
push
xor
inc
jo
nop
in
add
lea
ficompl
sbb
push
inc
mov
lcall
push
mov
dec
fisubl
jns
push
xor
lods
pop
inc
les
mov
ljmp
sbb
outsl
dec
mov
pop
ret
add
fiaddl
mov
sti
test
in
vmovupd
fstps
subl
dec
and
mov
cld
push
inc
arpl
fs
fadd
mov
cmpsl
mov
mov
mov
pusha
add
jg
or
mov
lods
cmp
jae
pop
jge
aam
add
xchg
push
cmp
shrb
jnp
out
aad
sbb
pop
mov
push
fcoml
sbb
cmp
lods
and
leave
or
pop
mov
xchg
stos
popa
push
sbb
inc
js
inc
bnd
sti
into
insb
cmp
hlt
push
mov
cmp
out
push
rorl
mov
test
sbb
cs
pop
loopne
mov
mov
cmp
pop
in
push
jb
enter
inc
xchg
mov
mov
push
adc
out
in
inc
loop
mov
ds
stos
ficompl
fmul
mov
pop
cmpsl
sbb
inc
add
not
sbb
jge
aad
flds
fiadds
aas
in
pop
inc
mov
inc
subl
out
push
jl
cltd
nop
xor
pop
aad
test
adc
sbb
mov
inc
fistpll
jp
pusha
jnp
dec
add
test
popf
push
cmp
negb
xchg
int
inc
ds
dec
int
out
mov
xchg
out
mov
and
push
push
xchg
cltd
cmp
and
out
outsb
rcll
sar
aaa
ret
mov
jae
mov
mov
je
aam
adc
scas
mov
cltd
out
jo
cmpsb
sti
adc
push
loop
jns
fimuls
test
out
cmpsl
mov
push
jnp
push
outsb
jl
mov
add
push
icebp
push
fmuls
cwtl
loopne
aas
in
movsl
add
testl
out
sbb
daa
pop
lahf
test
es
cmp
jbe
movsb
inc
mov
push
scas
outsl
dec
and
adc
push
cmp
cli
mov
inc
jmp
aaa
mov
iret
add
addr16
decl
loope
ret
or
and
mov
popa
cmpsl
inc
jno
dec
push
xchg
dec
push
jge
test
test
inc
inc
push
or
jnp
push
int3
pop
sti
mov
out
stos
jne
imul
mov
fdivrs
das
inc
jno
leave
movsb
mov
pusha
pop
mov
mov
movsb
pop
pop
mov
iret
mov
dec
ds
daa
pop
xor
mov
addl
adc
fisubrl
adc
pop
xchg
flds
ret
add
cmp
push
aad
dec
xor
mov
popf
inc
or
out
mov
mov
sub
test
lcall
adc
jg
dec
mov
jbe
sbbb
cld
lahf
adc
mov
mov
ja
push
ja
mov
aaa
dec
ret
test
in
adc
es
and
add
push
pop
jg
pushf
pop
mov
call
xchg
stos
cld
mov
inc
gs
rcll
sbb
cmp
cwtl
cmp
mov
ret
ja
fwait
dec
enter
fsubrl
sbb
dec
inc
pop
cmp
ss
mov
scas
mov
std
inc
dec
mov
es
and
xor
rcrl
xchg
dec
add
jae
data16
cmpsb
jne
xor
push
mov
xchg
inc
sub
data16
sbb
push
push
mov
mov
mov
push
xchg
dec
and
in
pop
pusha
mov
aam
lret
out
jp
mov
add
iret
mov
jb
adc
jnp
xchg
dec
lahf
mov
inc
push
cmp
notl
cmp
sub
lods
mov
aam
clc
adc
push
xchg
loop
push
add
nop
jge
loope
pop
jnp
jg
push
iret
mov
add
imul
mov
out
insl
out
pop
iret
sub
jge
idiv
jecxz
push
jns
aam
cld
jp
aaa
icebp
cmp
and
pop
jnp
repz
bnd
mov
xchg
das
or
inc
sub
int
mov
shll
lds
imul
sbb
inc
lea
mov
lods
in
sti
mov
fwait
into
stos
repnz
test
int3
jl
pop
xchg
bound
out
arpl
add
push
jne
cmp
loop
inc
sti
and
test
sarb
sti
sub
sub
ds
repz
out
ret
add
pop
and
sbb
mov
fists
sarl
iret
data16
adc
mov
cltd
and
sbb
fisubrs
cmp
sub
dec
xor
inc
aad
movsb
cmp
mov
push
dec
int
jecxz
xlat
mov
pop
test
imul
or
push
loop
loope
mov
les
inc
aam
add
clc
push
cmpb
shrl
sub
fwait
insb
cmc
sub
sti
mov
dec
out
or
or
fwait
inc
inc
repz
pop
rorl
pop
mov
daa
sbb
jl
sub
jmp
mov
mov
jge
js
les
mov
inc
cmp
pop
cwtl
inc
jo
scas
push
pop
add
or
pop
inc
stos
push
cmp
in
mov
and
movsb
frstor
mov
dec
sbb
mov
popl
ret
sub
cld
insl
cmpsl
mov
insl
call
mov
dec
ss
cmp
adc
lret
nop
mov
daa
dec
fsubrp
push
scas
push
repz
dec
push
sbbb
pop
push
mov
rcr
cmp
lahf
jmp
adc
mov
icebp
mov
inc
push
popa
test
movsb
call
insl
dec
pop
mov
div
xchg
xchg
dec
sub
mov
mov
cmp
mov
scas
add
je
sub
adc
mov
and
inc
ror
jae
push
scas
jmp
sub
pop
popf
insl
testb
insb
xchg
rorl
pop
insb
daa
enter
imul
inc
arpl
push
and
subl
addb
ja
add
add
dec
mov
ja
push
ds
mov
sub
gs
push
fistps
es
fcmovnu
lods
mov
iret
in
pop
daa
scas
mov
mov
negb
stos
cld
push
dec
sub
mov
mov
push
insb
repz
cmc
sbb
jp
mov
out
xor
icebp
add
cmp
cltd
xchg
add
jnp
mov
or
sti
js
jns
mov
xchg
lcall
movl
add
inc
cs
test
jno
int3
test
pop
dec
aad
cmp
stos
sub
filds
and
dec
xchg
sbb
movsl
iret
and
test
std
out
mov
pop
loop
ds
roll
sbb
ljmp
inc
dec
stc
xchg
cmp
stos
mov
adc
add
mov
adc
pusha
call
push
out
mov
insb
push
test
jp
mov
cmp
dec
pop
and
xorl
cmp
and
push
out
lock
imulb
data16
out
stos
es
sar
test
or
push
les
je
jb
scas
mov
ret
add
out
push
adc
mov
inc
dec
das
or
xchg
negl
mov
fisubrl
mov
pop
movsb
in
mov
bound
or
fidivs
mov
jbe
push
push
xchg
sar
jmp
mov
fstpt
int
dec
int
sbb
push
es
inc
xchg
jb
inc
inc
ds
sub
jne
into
mov
out
aam
lret
lock
jo
test
sti
jmp
lds
sub
pop
sti
sbb
add
inc
mov
jge
jnp
mov
in
xchg
mov
xor
sub
cwtl
jne
repnz
out
rcrb
lods
xchg
or
popa
mov
stos
sub
adc
mov
test
test
push
mov
aas
jecxz
aad
aam
dec
mov
shl
stc
shll
mov
push
jno
adc
pop
jmp
subl
and
jb
push
cmp
iret
shrl
ret
mov
xor
pop
icebp
in
std
mov
push
nop
dec
into
inc
xor
inc
test
stc
xchg
cmp
or
cmp
sbb
mov
push
dec
es
or
mov
jg
inc
or
mov
jne
movsl
fistpl
data16
jmp
xchg
dec
adcb
movsb
ja
jb
pop
rcr
mov
int
sub
jb
pop
mov
fimull
addr16
lods
int
lods
sub
dec
fisttpll
xor
rcll
sub
add
jnp
sub
ss
mov
mov
stc
and
testb
mov
jnp
daa
xor
push
pop
inc
je
mov
aaa
idivb
fisttps
xor
jns
imul
shrd
xchg
add
mov
pushf
les
es
push
notb
jmp
aad
cmp
cmpsb
popf
dec
ja
test
add
inc
repz
les
and
mov
mov
cltd
int3
mov
ja
shrb
sub
push
mov
jle
adc
jp
and
test
stc
fs
xchg
movl
bound
fs
sub
adc
cmpsb
adc
inc
pushf
test
cmp
aam
jg
inc
add
xchg
inc
mov
es
xor
and
push
mov
sbb
pop
outsl
mov
lret
mov
in
or
data16
or
insl
push
dec
xchg
sub
adc
mov
out
push
cltd
loop
fstl
outsl
flds
in
sbb
sarb
imul
xchg
hlt
sbb
iret
inc
cmp
inc
mov
mov
cmc
add
push
dec
mov
cmp
inc
fdivs
iret
adc
mov
push
lret
in
inc
mov
inc
imul
jo
iret
mov
fldcw
es
and
es
pop
mov
adc
insl
daa
fdiv
dec
stc
or
jno
je
push
cltd
sbb
mov
ret
ja
fcmovu
in
loop
mov
test
js
subb
into
cs
inc
les
out
movsb
mov
mov
shll
aam
ror
push
test
pop
hlt
or
fwait
push
cmp
js
pop
and
pop
lods
decb
xor
add
inc
push
xor
sub
mov
sarl
mov
test
test
aam
hlt
popf
and
dec
in
pop
imul
lret
xchg
iret
inc
scas
daa
push
lret
jp
in
cmpl
stos
cmp
cmp
pop
fwait
fs
loope
xchg
sub
lcall
adc
cmc
jb
aad
mov
in
xor
lock
push
cmp
inc
dec
lret
jae
std
mov
xchg
cmp
jbe
jae
push
mov
lods
add
xor
or
test
push
xor
nop
bound
imul
int
aam
jbe
das
cmp
mov
and
xor
adc
es
xchg
xlat
sbb
pop
fsubrs
push
sub
test
mov
or
xchg
jle
add
xchg
fs
push
inc
pop
je
cmp
push
push
sahf
sbb
sbb
mov
jno
test
mov
scas
decl
jae
add
cmc
jnp
mov
lea
add
decb
push
shlb
push
mov
push
push
inc
sub
and
mov
mov
or
and
mov
sbb
push
ret
fisubl
repnz
lds
lret
out
enter
fisubrl
cmc
jl
mov
gs
mov
fucomp
push
pop
xor
add
lods
pop
dec
add
pop
cwtl
lret
stc
jle
aas
and
cli
sbb
ret
or
shlb
sarl
mov
jle
call
mov
and
mov
add
mov
mov
cmp
cltd
mov
leave
mov
xor
loopne
ljmp
icebp
inc
sbb
mov
xchg
ja
adc
outsl
ret
vmovhpd
mov
pusha
adc
cltd
cltd
xor
push
push
mov
cmp
mov
stc
jno
and
mov
pop
insb
xchg
or
jnp
mov
cmp
pop
je
imul
or
into
sti
push
scas
lcall
jae
add
and
jl
mov
insb
xor
jmp
addb
jl
int3
sti
dec
jp
std
jnp
add
testl
sbb
jns
arpl
fsubrl
adc
mov
jecxz
pop
mov
dec
out
mov
jg
push
pop
pop
push
ja
inc
ss
inc
das
pop
xor
jbe
cmp
mov
je
mov
imul
mov
test
cmc
xor
nop
pushf
cmpsl
jl
test
mov
cmpb
lahf
mov
int3
mov
nop
push
mov
xor
mov
test
lea
es
dec
hlt
idivb
ja
pushf
mov
sub
fisubrl
push
adc
iret
jnp
and
mov
or
jl
push
sub
sbb
jb
xchg
ja
mov
int
xor
or
into
dec
sub
es
jb
test
enter
iret
in
cmp
mov
shll
mov
imul
xchg
fwait
cmp
adc
nop
shlb
lods
cmp
notl
mov
and
cltd
scas
aaa
filds
addr16
cmp
je
sbb
mov
xorb
mov
sbb
and
jbe
addr16
sbb
pop
fisttpl
jb
mov
or
dec
js
push
inc
pop
scas
mov
mov
subb
fmuls
add
fdivrl
jns
aam
sub
push
sub
sub
jae
fwait
mov
sbb
xchg
pop
jnp
cmp
adc
and
add
jae
mov
xor
mov
icebp
mov
dec
shrl
xchg
mov
cmp
adc
or
cmpsl
sbb
js
dec
or
xchg
sub
jge
push
inc
ret
cmpsb
xchg
nop
xor
jb
fiaddl
pop
mov
es
adc
fucomp
fcom
aad
das
sub
inc
dec
cmpsl
lods
mov
mov
pop
mov
or
sbb
std
jno
hlt
jnp
mov
fcomip
sbb
das
mov
scas
sub
add
loope
dec
ret
mov
inc
dec
pop
faddl
jmp
cwtl
mov
add
and
mov
push
lods
push
jo
hlt
pusha
mov
sub
or
pop
mov
inc
push
arpl
jns
xchg
dec
or
scas
lds
adc
push
iret
adc
inc
mov
push
test
mov
dec
sub
push
in
cmp
dec
mov
mov
ljmp
std
xchg
sub
ja
inc
ss
xchg
dec
push
jne
inc
lock
mov
pop
or
mov
sar
push
les
xlat
shll
bound
xchg
std
sub
mov
pop
in
xorl
aam
push
fidivrl
pop
repz
shrl
ret
dec
mov
shlb
imul
std
jbe
rcrb
stos
cmpsb
fisubl
adc
lret
out
repz
movsl
or
xchg
jbe
jno
fcompl
rorb
add
push
hlt
push
lea
mov
add
mov
enter
sub
divb
es
mov
pop
mov
jecxz
fimuls
in
add
int
mov
mov
pusha
out
lds
cmpsb
orb
inc
cs
push
sbb
in
mov
pop
shlb
dec
jbe
popfw
scas
fwait
pop
mov
sti
out
push
dec
fildl
cmp
mov
mov
push
push
xchg
xor
ja
inc
movsb
pop
dec
mov
xor
adc
mov
test
xchg
jmp
out
xchg
out
mov
cmp
pop
jle
ret
xchg
call
movsl
lock
push
mov
xorl
pop
lret
fs
out
rcrl
sarb
imul
inc
pop
mov
xor
enter
jae
leave
add
scas
clc
and
and
dec
inc
mov
dec
inc
pop
xchg
fstps
and
push
dec
fcmovnb
jl
sbb
fwait
shr
dec
xor
mov
pop
pop
in
ret
push
mov
mov
das
cmpsb
orl
dec
popf
and
pop
icebp
push
test
dec
dec
pop
sbb
mov
rcrl
mov
in
mov
adc
mov
jge
xor
jbe
lods
ja
mov
lret
dec
push
fs
dec
xchg
scas
ficoml
mov
divl
mov
scas
xchg
xchg
bound
inc
dec
jl
push
unpckhps
xchg
fwait
push
sti
mov
add
dec
sarl
movb
ss
inc
add
mov
out
ss
test
inc
push
adc
xor
sbb
fstps
leave
movsb
cmpsl
out
ret
mov
mov
mov
cmpl
in
test
fisubrl
add
and
andb
scas
inc
data16
adc
xchg
fbld
ror
repnz
push
rcll
int
pop
cld
sub
imul
das
mov
add
mov
inc
es
cmp
sub
jp
lahf
jne
and
out
fistpll
idivb
add
and
sbb
iret
mov
js
mov
cmp
aad
hlt
cs
test
add
sbb
inc
cld
push
add
bound
mov
sbbb
cmc
movsl
lock
shll
movsb
adc
jb
int3
dec
inc
mov
stos
arpl
js
mov
fisubs
fsubr
loopne
outsb
sub
clc
mov
clc
cltd
pop
push
xchg
dec
xchg
jg
xor
adc
ss
das
dec
jne
bound
cltd
dec
lods
mov
in
mov
jecxz
pop
jl
xchg
or
or
pop
mov
mov
fwait
add
dec
inc
mov
mov
dec
mov
jmp
fcmovbe
sbb
and
or
jmp
loop
lock
ret
push
scas
cld
movsb
push
dec
ret
test
insl
jecxz
int3
js
xor
loope
dec
and
rcll
jnp
jno
pop
lds
mov
orl
mov
mov
out
int
lods
imul
ja
xor
cmp
jae
mov
push
inc
insl
cmp
insb
repnz
push
or
and
pop
mov
mov
dec
xor
sub
stc
loope
sbb
dec
std
in
mov
push
mov
sub
mov
dec
mov
sub
imull
xor
in
xlat
mov
add
out
aas
hlt
insb
fs
push
insl
cmp
fwait
and
pop
or
adc
jmp
into
xor
sti
or
xchg
data16
inc
call
fwait
dec
fisttpll
lds
mov
ja
inc
add
dec
jnp
inc
cmp
leave
jno
jl
mov
out
insb
adc
mov
cmp
inc
cmp
push
lret
push
sub
jmp
jae
xor
mov
mov
out
jmp
sbb
mov
fstl
xchg
lods
xor
fisttpll
inc
es
xor
cltd
or
ficoms
push
das
dec
adc
lret
insb
rcl
jae
insl
sarl
pop
cmpsl
mov
jl
test
aam
mov
inc
xchg
daa
xchg
jbe
sbb
jb
in
sbb
icebp
mov
push
aaa
cmc
icebp
sub
movsl
sbb
mov
jns
mov
mov
pop
pushf
ja
jg
mov
nop
popf
mov
mov
add
mov
pop
dec
int
mov
fwait
pop
cmp
sbb
push
out
fs
and
mov
lret
imul
sbb
mov
in
cli
cmp
lret
mov
imul
or
fstl
test
pop
inc
pop
adc
in
push
fwait
mov
mov
jl
cmp
or
into
ret
test
cmp
cwtl
popf
fsubl
inc
jmp
aam
and
dec
jb
movsl
xor
leave
add
loope
addb
loopne
ud2
jno
and
test
jle
push
pop
jg
pop
or
mov
fstl
addl
vsubpd
jp
cltd
mov
cmp
popf
cmp
insb
lret
or
add
cmpl
mov
pop
xchg
lods
popa
cmp
push
sub
shll
jnp
int
inc
scas
xchg
test
mov
fwait
cltd
push
mov
or
insb
sbb
cld
pop
mov
shl
sbb
iret
cmp
inc
iret
sbb
rorb
cmp
sub
and
pop
lcall
ja
xchg
lahf
xchg
push
xor
fldl
stos
subl
mov
adc
lret
mov
hlt
mov
hlt
mov
cld
mov
mov
sahf
out
sbb
mov
imul
call
add
push
mov
aam
sbb
ss
pop
pushf
push
push
mov
es
inc
add
rolb
insb
mull
mov
repnz
mov
mov
insl
cmp
dec
icebp
mov
loope
mov
mov
fildll
out
lret
add
fs
rolb
sbb
jecxz
fmul
mov
cmpsl
loop
sub
add
pop
pop
in
jo
stos
les
lahf
movsb
in
popa
sti
and
or
repnz
inc
xor
outsl
test
dec
push
xor
pop
cmc
xchg
xchg
mov
jl
aam
fnstenv
cmpsl
dec
dec
out
inc
mull
pop
cltd
orb
fstl
mov
out
negb
jns
xchg
ja
mov
iret
fidivrl
push
lret
das
pop
mov
scas
mov
cli
xor
add
mov
xchg
jo
loope
push
movsb
fwait
mov
fcmovu
popf
addr16
fldt
xor
ljmp
push
xchg
add
mov
in
xor
fwait
mov
push
xchg
ljmp
rcl
jb
pop
mov
or
mov
ja
and
cmc
call
dec
scas
sub
jl
inc
mull
mov
jmp
push
arpl
pop
mov
shlb
dec
in
or
scas
adc
xchg
stos
jae
out
adc
loopne
mov
mov
es
adc
sbb
andl
rcrl
mov
push
mov
or
cmpsl
out
stos
pop
mov
cmc
sbb
jo
dec
adc
add
mov
push
and
addb
jns
and
sbb
aam
insb
lods
mov
jnp
pop
mov
xor
or
ss
sbb
cmp
pop
fwait
adc
fcmovnb
push
out
cmp
sbb
repz
pop
movsl
cmp
decl
push
sub
and
cmp
stos
xor
sbb
rolb
cmc
adc
ja
jle
outsl
cmp
ljmp
pop
in
inc
lock
xchg
movsl
fcmovnu
insl
jmp
pushf
test
xor
jmp
repnz
clc
or
dec
movsl
inc
sti
mov
movsl
rcrb
aad
loopne
shr
scas
push
push
xchg
mov
loop
xor
jns
mov
sub
sub
add
sub
and
repz
test
dec
mov
imul
sbb
jo
jg
jnp
fiaddl
lret
pop
pusha
inc
jp
and
or
pop
add
pop
push
in
xchg
scas
scas
pusha
pop
inc
ljmp
lret
clc
pop
imul
and
sub
shrw
pop
lcall
xchg
ja
or
adc
pop
lahf
es
sbb
cmp
int
js
inc
fcmovu
inc
inc
mov
repz
xchg
int
add
mov
pop
or
int3
mov
std
push
into
cld
fwait
mov
scas
jb
mov
loop
jo
loop
push
jne
adc
mov
add
rcll
out
test
push
dec
sub
mov
cmp
fnstcw
jbe
pop
adc
fistps
pop
jns
fisubs
sbb
mov
inc
pop
int
xlat
jne
fildl
mov
nop
sbb
add
pushf
mov
in
cmpsb
adc
aam
sbb
repz
mov
add
in
push
aaa
pop
mov
shll
fsubs
adc
stc
loope
xor
stos
inc
add
push
add
adc
and
rcrb
pop
cmc
sub
lret
cs
add
mov
cmp
jmp
adc
jb
insl
jno
mov
stos
loop
test
sarl
cmpb
out
int3
cli
rolb
jbe
push
pop
clc
xor
or
ffree
ds
orb
dec
mov
xor
data16
mov
lahf
jge
out
filds
lcall
mov
jbe
xlat
lcall
push
scas
xchg
jnp
mov
adc
mov
push
xor
jle
or
cwtl
pop
push
in
adc
cltd
nop
jmp
dec
push
js
xchg
add
push
rcrl
mov
push
test
imulb
dec
js
lock
fistpl
mov
mov
stos
imul
call
fwait
out
jl
jmp
fwait
mov
dec
cmp
cmp
inc
cwtl
pop
popf
add
jg,pt
pushf
lods
rol
or
jl
add
jnp
push
cmpsl
or
sbb
mov
cld
mov
jno
mov
in
int
out
sbb
pop
jnp
in
push
sbb
xor
stos
pop
adcl
push
in
sbb
iret
xchg
mov
aam
fisubrs
xchg
and
add
mov
mov
cmc
inc
and
add
pop
mulb
jno,pn
push
subl
not
cs
fildll
pusha
sti
cmp
jl
mov
pop
and
mov
jg
dec
jno
mov
testl
stc
fistpll
add
add
ss
ret
orl
js
rcl
iret
pop
and
sahf
cmp
lods
fcmovu
out
int
jnp
jl
jbe
sub
push
cltd
sub
lods
cmp
sbb
inc
jg
aaa
cmp
cwtl
es
adc
rorl
aam
mov
fcomp
fs
sahf
mov
shlb
mov
jl
jp
or
outsl
sbb
mov
push
jae
mov
sti
inc
adc
mov
iret
je
mov
dec
ficomps
pop
gs
loope
jp
movsl
push
pop
sub
jg
mov
addl
fcmovu
sub
or
sahf
sbb
pop
mov
lea
fisubrs
push
jae
pop
mov
in
inc
mov
fistps
imul
popl
mov
iret
push
shl
lret
pusha
pushf
shlb
in
jns
arpl
push
push
movsl
shl
shlb
adc
test
adcb
mov
sub
pusha
fcmovu
insl
fistps
xor
mov
inc
lret
aas
mov
sahf
xchg
dec
and
into
stos
pop
in
jge
xor
add
sub
mov
out
xor
decl
push
pushf
cld
mov
ss
jb
aam
insb
test
dec
arpl
subb
insb
insb
cs
pop
call
pop
test
dec
std
out
rolb
loopne
popa
pop
test
mov
push
and
cmp
dec
dec
lods
outsb
sbb
punpcklbw
sbb
push
dec
push
or
dec
nop
das
popf
sahf
mov
hlt
dec
sbb
fs
rcll
in
fs
cmp
mov
mov
fcoml
push
pushf
mov
imul
sbb
inc
in
xchg
ss
lea
xor
scas
push
sbb
add
cltd
xor
inc
push
pop
mov
lcall
js
loope
outsl
mov
movl
popa
dec
or
inc
cltd
xlat
pop
jg
adc
jmp
frstor
fistpl
mov
jp
xchg
cmp
add
pop
lds
jno
in
or
fildll
fmul
in
loopne
lods
or
add
mov
outsb
je
mov
ret
mov
fidivs
push
lds
mov
mov
scas
sbb
sub
lds
cmp
mov
mov
out
adc
adc
les
iret
jo
stos
fwait
xor
dec
mov
cmp
jno
push
das
aad
dec
inc
cmp
int3
sbbl
repz
fldt
sbb
insb
shlb
push
mov
jg
sbb
loop
jnp
xor
mov
insl
jmp
add
and
lahf
and
cmpsb
mov
jg
push
out
sbb
xchg
or
cmp
hlt
fs
mov
sub
movsb
jecxz
xchg
mov
mov
jb
push
jae
add
inc
jg
push
or
sarl
inc
inc
sti
sbbl
jbe
jg
mov
dec
sbb
and
push
dec
notb
lea
pop
ret
and
enter
arpl
das
add
and
cmp
andl
pop
repz
in
sub
fldt
ds
lds
mov
sahf
pop
dec
ficompl
push
cmp
mov
daa
add
lret
xor
jno
or
mov
xchg
sub
stc
and
jecxz
fnstsw
dec
in
sbb
sbb
shlb
jno
fcmove
mov
loop
pop
cmp
inc
pop
xor
cmp
mov
pop
data16
mov
xchg
pop
or
ret
mov
sub
clc
fsubl
jg
add
dec
movsl
cs
cmp
jecxz
inc
mov
mov
negb
cmc
pop
sarl
pushf
outsl
mov
sbb
inc
jnp
test
insb
jg
mov
jns
pop
xchg
dec
nop
shll
test
lods
leave
jp
push
ret
sbb
pop
adcb
out
mov
or
sbb
arpl
jno
pop
lcall
push
je
clc
sub
jnp
jb
out
shl
jnp
mov
out
pop
pop
adc
cs
ja
push
cmpsl
mov
pop
jo
in
shrl
rep
dec
add
and
dec
add
push
int3
mov
and
lock
cmpsb
shr
mov
outsl
xor
inc
rorl
and
jg
push
jnp
inc
out
fs
sarb
fisttpll
sub
mov
mov
mov
push
mov
scas
or
push
lret
aam
ljmp
dec
neg
jne
fmull
iret
sub
pop
add
clc
lods
push
fsubrl
sbb
pop
xchg
cwtl
pop
imul
ja
sbb
add
jb
js
dec
mov
ljmp
adc
jl
call
dec
dec
insb
mov
lcall
push
mov
mov
rolb
add
lds
jge
hlt
mov
mov
iret
rolb
imul
mov
loopne
dec
inc
fwait
cmp
test
pop
and
hlt
dec
imul
dec
dec
out
xchg
push
xchg
sub
sub
or
out
ja
and
pop
int3
sub
adc
sti
sbbb
pop
out
ret
jno
faddl
xchg
xchg
out
mov
popa
shll
lret
mov
jno
sub
add
stos
fwait
call
cmp
insb
sbb
add
insl
fcoml
mov
pop
mov
fadd
repz
push
sbb
mov
adc
out
and
das
out
sti
mov
dec
icebp
cwtl
inc
mov
or
cmp
out
lcall
ljmp
mov
sahf
mov
cmp
mov
int
adc
mov
hlt
sub
jg
scas
out
pop
enter
inc
pop
jne
or
mov
stos
data16
aad
rorl
mov
dec
imul
push
mov
pop
and
stos
mov
mov
cwtl
or
adc
fnstsw
sub
or
dec
repz
jnp
movsb
mov
sub
leave
filds
xor
xchg
sbb
jno
xor
add
lret
call
fwait
jae
mov
and
out
leave
adc
jae
rol
mov
stc
jmp
sub
inc
cmpsl
adc
test
mov
shr
cmpsb
jb
int
sti
call
mov
or
fidivrs
mov
inc
mov
dec
cmpsl
and
roll
or
xor
dec
loope
sahf
add
mov
push
pop
loop
inc
push
pop
sbb
jnp
pop
mov
sub
mov
adc
mov
adcl
push
jbe
xchg
xor
push
jno
into
cmp
xchg
xor
mov
dec
icebp
mov
cld
insb
mov
dec
jae
test
shrl
adc
pop
out
mov
mov
cmp
test
xor
jmp
push
outsl
dec
mov
or
test
xchg
inc
cld
push
jne
stos
sbb
outsl
jg
xor
jle
inc
repz
mov
mov
pop
inc
in
aaa
cli
xchg
shl
push
mov
lods
cmp
mov
push
popf
cmp
adc
push
inc
pop
mov
daa
mov
cmpsl
bound
pop
jle
jge
adc
adc
cwtl
in
xor
jg
mov
rorl
inc
ja
lock
jno
adc
std
mov
int3
push
lock
in
stos
bnd
inc
sbb
jno
and
jg
mov
jmp
lahf
aas
aam
shrb
cmp
das
cltd
sti
jecxz
or
pushf
fwait
xor
int
sahf
daa
cmp
push
mov
mov
sti
xchg
dec
fnstsw
or
pop
cwtl
push
iret
movsb
gs
mov
add
imul
mov
pop
aad
call
sahf
cld
out
movsl
pop
and
sti
int3
mov
jo
int3
dec
les
jo
incl
int3
pop
fistpl
jle
pop
sub
fwait
lret
mov
inc
jns
mov
jecxz
jg
test
pop
mov
mov
cmp
sbb
jmp
add
subb
outsb
jmp
xor
mov
dec
imul
mov
push
cld
xchg
cmp
inc
sbb
push
decb
push
mov
mov
sbb
rorl
mov
jg
addr16
sub
les
mov
cmp
lahf
ljmp
xor
bound
inc
push
add
xchg
or
pop
jmp
lea
cmp
ret
iret
inc
loop
bound
imul
mov
repz
jmp
dec
lcall
lahf
sub
addr16
inc
sbbb
adc
shrl
leave
or
sbb
ret
std
pop
out
loope
lret
stc
cli
cltd
vucomiss
fimuls
dec
int3
mov
repz
rcrl
or
mov
or
sbb
mov
push
sbb
mov
test
sub
mov
imul
mov
aad
out
negl
pop
outsb
mov
inc
and
in
nop
or
imul
incl
mov
inc
data16
repnz
aad
dec
inc
mov
sbb
push
call
mov
inc
js
insl
ljmp
and
in
adc
mov
iret
sub
pop
icebp
and
cmp
mov
loopne
rcrl
mov
dec
dec
stos
outsl
movsb
popa
jno
fistps
mov
add
into
cmc
ljmp
mov
adcl
repz
scas
test
xchg
dec
jg
stos
icebp
add
imul
das
xor
js
pop
mov
aad
lahf
test
dec
std
testl
pop
mov
std
jle
stos
out
push
pop
and
fimull
inc
inc
ja
push
andnps
mov
inc
xor
dec
cmp
jno
push
mov
and
sbb
cmpsb
popf
jmp
and
xchg
je
js
and
cmpsl
push
icebp
mov
shlb
cmc
ds
pop
push
into
adc
xchg
push
fwait
test
xor
adc
inc
dec
add
popf
inc
inc
movsb
ss
cmp
loopne
jnp
mov
cmp
aam
mov
jae
jmp
push
loopne
add
push
sub
pushf
xchg
pop
jbe
cmp
mov
cmpsl
mov
jg
fwait
movsb
cltd
push
xchg
gs
fildll
mov
in
repnz
jmp
movsb
and
jb
xor
sbb
cmpsb
sub
inc
jbe
mov
inc
movsl
inc
jae
or
jbe
push
fwait
xchg
mov
and
dec
dec
stc
push
adc
insl
xor
xor
fsubs
pop
and
sbb
mov
or
jb
stos
add
xchg
fiaddl
ss
cmc
sti
mov
scas
stc
pop
in
jp
int3
sbb
incl
out
clc
and
mov
jne
int3
lods
jo
pop
and
inc
out
jne
cmp
or
iret
fcmovnu
roll
jmp
jo
jno
ret
and
stc
pop
xor
js
or
pop
jns
fsubrl
mov
xchg
and
or
mov
push
rcrb
es
in
clc
and
sbb
cwtl
into
push
sub
xor
loopne
jae
jb
adc
popf
shrl
out
pop
dec
std
push
mov
or
mov
xchg
cmpsb
in
popf
inc
call
lds
push
enter
jecxz
and
push
add
int3
pop
stos
mov
mov
mov
call
xchg
pushf
outsl
in
push
insb
or
into
outsl
inc
add
in
les
adc
sahf
dec
outsb
sub
addr16
push
push
xor
int3
dec
pop
xor
xor
dec
jl
mov
lahf
and
dec
stc
std
in
fnstenv
push
daa
push
jecxz
rolb
sbb
and
cmpsl
xchg
lret
or
mov
push
scas
add
pop
pop
mov
movl
repz
das
rcr
scas
or
dec
movsl
and
mov
rcl
roll
out
inc
sub
data16
cmp
cmp
add
xchg
inc
push
cmpsb
mov
push
push
pop
mov
js
xchg
dec
mov
movsb
gs
pop
xor
cs
xchg
int
lods
sub
adc
sub
rcrb
add
rsqrtps
ja
add
dec
or
dec
lea
mov
and
pop
ficoms
cmp
cmp
add
inc
add
jbe
sub
add
or
push
dec
mov
mov
mov
sub
mov
adc
fsubr
pop
out
push
or
jmp
sub
and
insb
mov
xlat
cmp
out
push
sti
cli
imul
inc
mov
fwait
cmpsl
and
push
jne
fwait
push
dec
cs
pusha
stc
push
cwtl
es
testl
mov
add
adc
dec
dec
out
mov
adcl
cmp
lret
loop
shrl
or
jle
test
sub
scas
icebp
cmp
xor
xor
es
js
inc
lods
jl
pop
add
push
adc
gs
mov
aad
jge
sub
clc
dec
cmc
orl
es
xlat
dec
cmp
arpl
cmp
cmp
pop
cltd
pop
mov
jg
or
pop
lcall
mov
gs
jb
nop
mov
cmp
insl
imul
sub
cmpsb
adc
inc
add
insl
pop
mov
inc
cmc
push
dec
adcl
push
cmp
outsb
add
ret
test
cmpsb
push
jg
push
and
lcall
ret
popf
mov
lahf
insl
mov
aam
push
fisubrs
icebp
pusha
and
dec
stos
jmp
das
jl
or
movsl
jl
mov
cld
jns
mov
ja
sbb
adc
pushf
inc
mov
jbe
jae
aad
js
mov
push
inc
es
outsb
leave
adc
dec
mov
mov
cmpsb
mov
push
leave
popf
mov
adc
testl
sbb
ficoml
push
mov
jg
stos
push
rcll
aam
out
mov
cmp
inc
push
sbb
mov
pop
mov
test
in
xchg
jo
mov
shrb
repz
push
or
scas
mov
sarl
mov
mov
ret
push
jmp
push
jg
push
pop
jle
ret
jle
dec
insb
fstp
test
xor
stos
cmp
gs
inc
clc
inc
cmp
fwait
jo
mov
sub
sbb
push
jbe
mov
xchg
dec
fisttpll
sub
ret
fwait
dec
mov
add
cmovo
jl
test
into
mov
pop
mov
adc
imul
pop
loop
push
cmp
lods
out
dec
sub
ror
sbb
lahf
push
jnp
xchg
dec
out
ret
outsl
fs
and
add
aas
leave
mov
push
jle
repz
in
jbe
adc
mov
in
pop
adc
aam
enter
fidivl
fwait
jmp
add
fxch
mov
les
mov
or
push
push
daa
pop
mov
repz
cmp
push
das
ret
aam
push
cmp
rorl
rorb
dec
pushf
mov
or
push
xchg
cmp
xchg
jmp
lods
mov
shlb
pop
inc
mov
add
fwait
inc
dec
jne
cmp
repz
out
jb
xlat
shlb
stos
dec
mov
sbb
xor
xor
fs
cmp
and
jns
inc
aam
sub
aad
add
inc
arpl
sub
or
jmp
mov
aad
sbb
and
mov
push
jge
mov
out
std
inc
xchg
pop
movsb
push
aam
popf
enter
sbb
bound
xlat
loop
ljmp
hlt
into
or
cltd
lock
negl
ret
mov
xchg
push
imul
cmc
mov
std
outsb
push
push
mov
cli
adcb
dec
lods
ja
pop
mov
and
negb
subps
mov
aam
cld
push
enter
scas
movsb
out
outsl
push
outsb
loopne
test
std
adc
jae
clc
int
sbb
insb
jne
bound
stos
adc
out
cmp
mov
xor
fwait
push
mov
push
data16
fstpt
in
mov
xchg
int3
and
es
lret
clc
jno
add
cmpsb
push
mov
jns
xor
dec
adc
ja
jge
cmp
aad
pop
inc
jne
or
fildl
jno
cmp
sub
fldl
roll
shl
sub
or
addl
pop
lret
cmpsb
pop
and
je
dec
cwtl
mov
sbb
mov
cmp
dec
test
dec
add
aas
jo
repnz
xchg
add
push
pop
push
jnp
mov
push
imul
outsb
es
jmp
push
lahf
inc
fmull
xchg
iret
or
nop
lods
sahf
int
das
add
fucomip
cltd
inc
mov
fldenv
mov
add
mov
sub
mov
and
jge
xchg
and
xchg
mov
dec
stos
out
push
mov
lahf
inc
cmc
push
ret
std
push
and
adc
or
inc
dec
or
mov
jae
ficompl
sbb
jl
mov
xchg
aam
fisttpl
sti
mov
mov
mov
into
mov
sub
icebp
cmp
pop
adc
ljmp
fidivrs
sub
push
or
jg
xor
sarl
test
push
mov
lods
push
jne
adc
in
in
int
cmp
pop
sbb
dec
sub
aam
popa
pop
jp
mov
mov
xor
cmp
xor
aam
jmp
and
insl
add
loope
mov
mov
xorl
sub
stos
in
or
jmp
outsb
jle
cmp
sbb
stc
or
push
jb
cmp
jge
pop
adc
fdivl
lods
or
push
mov
rcll
imul
fstps
filds
jbe
fidivrl
in
inc
cmpsl
push
out
and
and
mov
add
cmpsb
adc
shll
lret
movsb
arpl
mov
add
adc
inc
cli
add
roll
jo
or
scas
mov
mov
lahf
fisttpl
cs
imul
pusha
push
push
mov
dec
or
cltd
mov
sub
mov
call
cmp
mov
cmpsb
aad
mov
out
jae
dec
aaa
orl
mov
popf
pop
sbbl
dec
out
rclb
clc
pushf
stos
jmp
sbb
xor
xchg
movsl
clc
aam
mov
fsts
nop
in
std
xor
push
sub
stc
dec
les
sub
movsb
or
iret
lods
lret
call
mov
jge
scas
out
ret
and
std
mov
adc
mov
test
push
mov
lods
in
mov
push
mov
jbe
std
cvtps2pd
pop
lret
push
jnp
cs
and
cli
jns
push
pop
jecxz
jp
shll
xchg
pop
inc
cmp
dec
imul
xor
jne
mov
je
lods
fimuls
sbb
sub
les
lret
jmp
dec
icebp
and
cmp
aas
mov
push
mov
jg
xor
push
lock
cwtl
es
fwait
mov
cmp
rcll
inc
sbb
push
shl
mov
sub
cmp
mov
ss
insb
inc
ljmp
xor
xor
xor
negb
inc
sti
rorb
mov
icebp
mov
sbb
out
pop
xor
mov
das
dec
push
cmp
shl
loopne
mov
mov
mov
fwait
stos
scas
cmpl
test
sbb
addb
pop
or
push
cmp
int
xchg
inc
or
pop
fdivl
push
dec
mov
sub
dec
and
push
nop
pushf
pop
in
rorl
push
loopne
test
imul
pop
stc
fisubl
push
mov
jnp
xor
cmp
push
pop
pop
xchg
sub
push
pop
pop
mov
movsl
lahf
jecxz
iret
add
lret
jns
bound
mov
pop
mov
dec
movl
out
rcr
sbb
hlt
loopne
mov
leave
mov
push
mov
iret
out
addr16
inc
cmp
jb
push
vpaddusw
mov
stc
push
mov
jbe
or
jo
aad
and
push
jp
xor
aam
jl,pn
sub
jg
out
sub
mov
fdivl
insb
cmp
iret
sarl
hlt
jmp
dec
std
dec
jmp
cmc
in
subb
mov
add
pop
stos
in
cmp
or
mov
aam
cmp
out
push
dec
nop
jns
js
inc
push
or
test
pop
jo
xor
imul
adc
sub
stos
stc
sahf
xchg
sti
push
call
aas
addr16
das
jg
push
fiaddl
mov
inc
push
inc
test
pop
lahf
dec
mov
jno
sahf
out
xor
repz
or
mov
push
adc
icebp
mov
sbb
sbb
or
data16
pop
mov
mov
cmpsb
dec
sub
movsb
iret
cli
inc
fsubrl
insb
push
sub
cmp
pusha
js
dec
mov
push
sahf
mov
roll
pop
pop
push
sbbl
sub
cmpsb
cwtl
data16
ja
and
iret
outsb
jo
out
sub
je
nop
fnstsw
push
adc
pop
push
push
inc
test
mov
mov
mov
mov
sub
jnp
ljmp
inc
test
int3
insl
adc
jecxz
hlt
push
cltd
xchg
fisubl
inc
xor
inc
loopne
iret
dec
scas
loope
push
das
xor
push
repnz
add
add
and
or
push
add
test
mov
and
and
aad
xchg
std
inc
xchg
push
adc
or
out
ffree
or
stos
jns
pop
repz
mov
pop
sbb
out
mov
sbb
inc
mov
mov
ficoml
and
sub
jb
fistl
dec
int3
mov
ja
loope
out
push
pop
jle
dec
push
and
sti
mov
loop
int
pushf
cmpsb
les
or
dec
dec
imul
mov
aas
fists
jo
cmpsb
rcrb
add
xchg
cmp
mov
xor
sub
mov
mov
aaa
movl
and
dec
jo
jno
mov
and
stos
imul
cmp
or
xchg
lahf
adc
mov
dec
pusha
jbe
mov
std
push
cmp
pop
sub
mul
push
pop
push
sti
sbb
sub
and
pop
aaa
mov
xor
jl
mov
sub
mov
sti
js
xchg
rolb
rclb
mov
push
sbb
dec
pop
pop
add
cld
xor
adc
sbb
push
pop
cmp
mov
roll
push
mov
inc
or
inc
ret
xor
xchg
xchg
int
inc
dec
push
cmp
mov
pminub
mov
push
mov
inc
lods
iret
jno
sub
xlat
subb
in
push
movsl
scas
cld
or
repz
orb
xchg
out
and
cli
js
aas
mov
sub
add
mov
into
push
repz
pop
aad
pop
sbb
or
fldt
mov
fs
mov
xor
cmc
int3
adc
nop
jne
add
iret
and
sub
mov
and
test
inc
inc
rcrl
dec
nop
mov
hlt
mov
test
xorb
push
movsb
jmp
mov
mov
push
rorl
outsb
sbb
dec
icebp
or
enter
sbb
jns
pop
fsubrl
push
loop
in
jecxz
cld
movsl
xorb
xor
das
mov
loop
pop
adc
jl
push
ja
cld
ss
in
mov
jae
jl
mov
std
xor
push
movl
testl
xor
repnz
and
push
sub
push
repz
xchg
adc
push
push
pop
lcall
rep
mov
loopne
stos
xor
mov
aad
sbbb
in
mov
ja
add
jl
fwait
jae
movsb
mov
mov
notb
add
dec
push
mov
jecxz
std
jl
pop
faddl
fidivs
pop
xor
adc
cmp
add
gs
mov
aam
jge
orl
and
notl
lea
mov
mov
jns
dec
jp
lcall
lret
xchg
sub
test
push
out
stc
adc
xor
stos
push
fcmovbe
mov
std
lods
jnp
aam
fiadds
xlat
lods
orb
js
es
mov
mov
cmpsw
movsl
lea
xchg
mov
sbb
pop
inc
bound
loope
inc
fcmovbe
aaa
int
and
es
jnp
mov
clc
stos
mov
dec
cmp
js
cltd
repnz
rcrb
leave
jne
push
gs
sarb
repnz
pushf
outsl
pop
pusha
dec
jnp
aam
push
clc
and
or
cltd
daa
jbe
inc
mov
scas
xchg
push
cmc
fimull
push
in
pop
adc
test
enter
xchg
lahf
push
std
hlt
cs
xor
inc
inc
loope
lods
movsb
sub
sti
inc
cmp
inc
cmp
imul
pop
mov
or
xchg
mov
cmp
jmp
dec
mov
or
cmp
cmp
pop
push
dec
lods
cltd
mov
cmp
jae
out
inc
arpl
sbb
nop
and
xchg
add
xchg
mov
test
les
in
ljmp
xchg
xor
je
ja
or
js
sub
outsb
mov
jle
jg
mov
mov
jno
xor
mov
cmpsl
push
inc
jmp
adc
mov
mov
fimull
arpl
orb
adc
inc
clc
or
add
xchg
stc
push
mov
sahf
mov
data16
arpl
cmp
jnp
scas
std
sub
fsubrl
into
mov
mov
jo
int
push
ja
scas
subl
sti
cmp
lret
xchg
std
in
cmpsl
int3
cli
arpl
pop
test
fbstp
cmp
bound
and
popa
insb
aaa
or
movsb
into
push
add
cs
nop
inc
int3
inc
mov
jno
sub
cmp
shrl
lret
stos
mov
sub
test
pop
xchg
ss
push
push
dec
sbb
decl
out
jb
add
mov
sbb
icebp
int3
jg
in
mov
aad
ss
sbbb
cltd
rcll
dec
push
xor
fdivrl
jo
push
mov
insl
gs
mov
pop
dec
jecxz
inc
ss
clc
popa
pop
mov
adc
sbb
cmp
mov
fwait
ja
sti
pop
sarb
push
jb
fistpl
xor
pushf
mov
loopne
gs
pusha
out
mov
xor
shll
xchg
sub
imul
dec
jg
nop
mov
pop
and
jo
aam
mov
pop
sub
ret
out
cmp
lods
call
push
xor
shlb
sbb
sub
in
pusha
cmc
pop
cltd
stc
mov
test
stos
fsincos
cmp
pop
int3
push
das
ss
ljmp
xchg
xchg
ja
xor
in
pusha
cmp
repz
imul
out
scas
dec
ja
mov
dec
daa
rolb
mov
outsb
lahf
jg
nop
shll
and
mov
mov
jl
jle
pop
add
call
data16
dec
jmp
mov
arpl
or
dec
push
xor
add
push
push
add
arpl
notl
jae
int3
sti
mov
jge
pop
out
pushf
pop
dec
mov
and
adc
out
pop
pop
les
or
jg
fidivs
or
lcall
xchg
lret
lcall
pusha
cwtl
ljmp
ret
jne
lretw
mov
mov
test
push
or
ljmp
in
int3
add
and
test
push
sub
jl
in
mov
out
pushf
sub
mov
cmp
test
sarb
jg
mov
mov
dec
lret
mov
xchg
outsb
jg
das
scas
cmpb
mov
inc
js
or
aam
inc
scas
dec
dec
xor
cmp
inc
lahf
mov
movsl
and
sub
sahf
mov
push
push
out
push
hlt
pop
mov
mov
pop
cli
add
loopne
jg
and
mov
cmp
je
dec
and
jae
movsl
in
cltd
lret
pop
pop
imulb
addr16
mov
fcmovne
mov
stos
inc
jmp
lcall
adc
jg
jns
ror
pavgw
xchg
ret
lds
mov
pop
in
loope
jae
sti
dec
loope
push
lret
pop
aam
or
repnz
mov
fstl
mov
sbb
push
cmp
ja
cmpsb
jl
arpl
scas
adc
xorb
arpl
mov
scas
lret
inc
cli
std
add
ss
scas
sub
call
rcrl
lods
fimull
pop
sbb
or
xor
cmp
shlb
mov
dec
add
push
pop
xchg
push
xchg
jo
call
lret
push
xorl
in
lahf
jecxz
dec
push
fwait
das
les
dec
icebp
popf
call
add
leave
test
sub
dec
mov
xor
nop
push
mov
push
push
or
es
in
jae
divl
jle
lea
in
mov
jne
cld
sbb
loop
ja
cmp
popf
orl
adc
xor
dec
imul
mov
mov
sub
mov
cmpsb
stc
pop
mov
and
mov
popf
jl
sbb
scas
insb
lret
cmpsb
inc
pop
adc
call
scas
nop
in
lahf
jae
cmp
loop
mov
fwait
sub
imul
scas
insb
sahf
pushf
xor
dec
dec
mov
inc
adc
mov
imul
or
stos
cli
loopne
or
stos
scas
jbe
imul
jno
dec
mov
jl
les
jge
sbb
insl
outsl
pop
mov
cmc
push
fcomp
mov
into
ljmp
inc
mov
cmp
mov
jns
or
out
mov
and
scas
dec
int
imul
movsb
out
int3
fs
mov
jno
jl
aaa
out
mov
jle
inc
cs
test
mov
dec
sub
and
in
fidivl
sbb
ja
out
sahf
out
sub
out
push
mov
inc
lods
jg
sub
rolb
cld
pop
leave
jns
fs
out
mov
and
adc
dec
in
push
test
test
sbb
xor
mov
stos
repz
push
cltd
subl
fidivl
mov
rcll
jl
or
cmc
test
or
fmuls
fcmovbe
dec
and
icebp
testl
cmpsb
or
mov
insl
leave
lea
in
aam
cmp
adcb
call
or
js
fidivl
xchg
cmc
jl,pn
ljmp
or
and
lock
mov
xchg
stos
ret
imul
sub
mov
ja
lea
hlt
jp
ss
dec
pop
shrb
out
push
cli
jecxz
pusha
rclb
push
daa
xchg
pop
push
sub
pop
stos
dec
movl
clc
push
adc
movsb
push
lahf
ljmp
mov
jl
mov
cmp
or
out
pop
fistl
jmp
push
sbb
das
pusha
loope
sbbl
xchg
sbb
inc
push
into
mov
pop
mov
lahf
and
push
pop
mov
jmp
and
xchg
inc
pop
movsb
test
adcb
stc
test
ret
cmp
mov
jb
and
out
push
daa
pop
js
push
out
xor
call
inc
sbb
mov
ss
nop
ss
jb
test
cmp
mov
sti
adc
mov
test
push
inc
xor
mov
cltd
jl
jle
std
lret
push
mov
leave
lcall
pop
lock
enter
jp
jl
dec
sub
repz
and
pop
xor
cmpb
iret
cld
ja
fnsetpm(287
push
orl
rcl
add
xchg
leave
mov
mov
jmp
xchg
std
aad
out
fistl
pusha
mov
push
push
mov
std
mov
dec
js
ja
sub
ret
xor
inc
cmpb
mov
cmp
mov
xor
pop
jo
xchg
lret
fldcw
test
outsl
mov
sahf
xchg
out
adc
lock
or
scas
dec
lahf
ljmp
loopne
scas
mov
loopne
xchg
stos
pop
fidivl
push
idivl
pushf
mov
xchg
pop
subb
loope
fnstcw
push
popf
adc
inc
dec
mov
sbb
subb
cwtl
das
dec
inc
js
xacquire
xchg
orb
push
mov
fidivrs
sub
inc
push
jmp
call
mov
insb
out
add
add
in
push
cmp
xlat
pop
push
and
push
dec
jno
or
xor
cmpsl
test
dec
fisttps
lock
sbb
mov
mov
mov
daa
push
gs
shll
pmulhw
cwtl
mov
push
push
scas
pop
inc
sbb
sub
jns
aam
sarb
scas
adc
lock
cmpsl
jns
call
sti
push
pop
pop
pop
xor
sub
mov
in
sub
cmpsb
mov
fcomps
mov
cwtl
in
mov
sub
jns
rorb
loop
js
and
mov
pop
dec
cmpsl
fistps
pusha
ljmp
das
xchg
into
imul
sub
pop
enter
aas
out
jno
add
lds
xchg
sarl
cmp
scas
out
or
push
inc
inc
sub
push
xchg
mov
dec
jmp
push
cs
call
rclb
sub
inc
mov
insb
jno
ret
sbb
imul
mov
ja
xor
decb
repnz
jnp
lret
mov
rorl
mov
lcall
andl
repz
jmp
mov
pop
cmpb
lahf
popw
push
test
popf
sub
in
cs
ret
clc
rcr
je
and
outsb
adc
int3
pop
cli
jbe
jne
inc
sbb
imul
repz
mov
mov
jnp
or
mov
mov
add
sbb
mov
stos
sub
mov
shrb
jecxz
cli
pop
push
cmp
adc
cld
sub
or
cmp
bnd
out
bound
cld
mov
seto
mov
lock
out
adc
add
imul
dec
cmc
jg
jb
mov
or
dec
inc
subb
lods
pop
xchg
xchg
pop
jl
adc
xor
fisttps
loopne
cmpsl
sub
lret
test
mov
in
and
ret
or
adc
sar
ss
fidivs
sub
push
add
shlb
adc
and
sub
fwait
ret
out
stc
and
sbb
push
test
es
and
mov
cld
mov
or
lds
fstpl
popa
or
mov
mov
in
xor
fistps
mov
ret
xchg
inc
leave
cltd
jns
pop
mov
pop
in
sub
imul
mov
push
std
or
out
cmp
inc
fs
pop
cld
cmp
push
adc
adc
adc
jl
cmp
and
mov
lods
rcrb
pop
int
push
mov
xor
test
daa
sar
pop
dec
jp
pop
lcall
xor
add
xor
jl
ljmp
inc
xor
cs
add
call
xorl
iret
int3
ret
cmp
pop
or
inc
xchg
test
mov
mov
stos
cwtl
sub
jo
and
repnz
cmpsb
mov
das
mov
mov
outsb
movsb
mov
jp
sbb
das
and
stos
inc
lea
sbb
mov
jge
sub
mov
dec
mov
es
push
mov
loope
movsb
push
shlb
pop
dec
pop
xchg
jl
mov
je
add
pusha
loop
jnp
int3
xchg
push
or
cmc
dec
sahf
aam
ficomps
pop
fs
dec
iret
and
mov
cmc
adcb
pop
ss
sbb
movsb
imul
pop
adcb
int
sbb
sti
mov
por
jp
adc
sti
scas
shrb
ja
sbb
mov
repnz
sbb
andps
movsb
pop
cmp
adc
xor
and
cld
imul
xchg
pop
aam
imul
add
push
mov
fs
sbb
or
out
inc
aam
lods
fistl
xlat
or
inc
fcmovb
clc
mov
insb
fs
daa
enter
push
jecxz
inc
jb
ficoml
jmp
mov
mov
mov
fdecstp
ret
iret
jg
sub
dec
test
dec
lock
ror
push
inc
add
jmp
js
loopne
jg
push
dec
push
pop
sahf
inc
fisubl
jne
mov
mov
sub
fwait
mov
aaa
notl
ficomps
push
scas
add
test
mov
jmp
ja
out
lcall
shrd
mov
lcall
dec
add
fimuls
mov
insb
sub
xchg
mov
lcall
pop
sbb
cmpsl
mov
add
pop
js
or
lcall
in
fs
xlat
test
sahf
mov
cltd
mov
mov
sub
dec
push
jae
lods
cld
sub
testb
fldt
mov
imul
int3
sahf
dec
mov
ret
fsub
jmp
es
dec
mov
testb
mov
mov
sub
pop
inc
mov
cmp
cmp
popf
ret
adc
and
repz
imul
imul
testb
push
add
pop
jmp
fnstsw
popa
jl
mov
and
cmp
ljmp
pop
add
push
rcll
addr16
cmp
mov
mov
dec
and
iret
mov
adc
sub
cmp
test
pop
or
jns
fcmovnb
imul
dec
std
fsubp
mov
movsl
ret
jle
sbb
mov
ja
movsb
fs
push
mov
or
mov
jg
mov
dec
adc
test
or
mov
loope
imul
mov
mov
mov
loope
into
sub
mov
mov
dec
shlb
inc
add
jae
push
dec
cmp
icebp
cld
into
jbe
lds
or
fwait
in
popf
sahf
add
rcrl
gs
xor
mov
xor
rcrb
jbe
mov
cmp
add
push
jbe
data16
jle
or
adc
loope
push
or
xor
mov
fsubl
decl
or
jge
xchg
jo
dec
sets
and
pusha
arpl
dec
push
ret
jae
and
push
jae
pop
cli
dec
push
push
ror
sti
fs
popa
hlt
mov
ficomps
ja
inc
lods
test
bound
push
and
xor
lret
rolb
push
out
scas
pop
inc
fbstp
inc
sub
pop
adc
repnz
and
dec
jmp
pop
inc
pop
jg
push
popa
std
xchg
cs
in
sbb
push
or
adc
push
sub
sub
jg
pop
xchg
add
mov
lds
sub
inc
push
mov
hlt
call
mov
cltd
ret
push
int3
add
mov
cli
dec
jae
dec
rcl
data16
add
mov
int3
or
adc
mull
adc
mov
push
or
inc
cld
stc
repnz
sub
pop
mov
and
sar
stos
loopne
mov
jmp
xchg
loopne
lret
cmc
mov
mov
loopne
jl
inc
jae
bnd
mov
es
xor
out
pop
dec
adc
test
xchg
push
mov
adc
out
mov
ja
fdiv
orb
xor
xor
inc
mov
ret
fs
dec
push
popa
jnp
pop
mov
adc
cmp
mov
orb
out
lods
pop
ret
jmp
mov
jb
adc
jno
dec
sar
stos
sub
xor
mov
sub
loopne
jae
xchg
es
das
jb
and
push
int
adc
movl
into
pop
push
pop
pop
dec
cmpsb
aad
ja
sti
mov
popa
mov
add
clc
cmpsl
rol
fs
jnp
ja
mov
mov
jg
cmc
mov
popf
mov
shl
mov
fildl
lds
repz
mov
jbe
lcall
test
adc
pusha
mov
pusha
pop
stc
add
push
cmc
mov
sbb
adc
xchg
sub
lret
ss
arpl
inc
push
jb
outsl
pop
mov
pusha
dec
add
ret
xor
sub
mov
inc
inc
sub
pop
daa
pop
jo
and
rcr
into
sub
sti
sub
xor
adc
sbb
in
lahf
xlat
add
loopne
movsb
out
lock
mov
iret
sti
rorl
push
in
dec
cmp
mov
jno
jg
mov
dec
cltd
push
jno
jno
and
sbb
sarl
stc
sti
mov
jl
jae
lds
arpl
mov
inc
lods
shll
jo
push
push
add
loopne
fisubrs
and
call
cltd
fidivl
mov
mov
gs
dec
dec
test
jge
jnp
subb
dec
loope
fwait
pop
mov
add
jg
or
jecxz
push
out
fs
cwtl
or
jae
push
sub
mov
int3
mov
test
push
fs
ljmp
dec
dec
lret
sub
or
rorb
ficompl
clc
test
sub
mov
sub
arpl
push
sti
push
xchg
mov
jmp
jg
test
sbb
fs
call
ret
icebp
test
xchg
jp
out
mov
mov
dec
imul
xchg
cmp
arpl
add
mov
push
jbe
inc
test
jg
fisubrl
or
inc
inc
mov
mul
fisttpl
inc
dec
mov
sbb
inc
mov
push
mov
cmp
mov
xchg
or
mov
mov
ja
push
gs
mov
mov
out
push
lcall
push
mov
xchg
mov
in
add
mov
aam
mov
addr16
rcr
sbb
mov
and
pop
jl
sub
adc
push
fldl
repz
sti
call
pop
dec
mov
movsb
lret
in
test
jg
and
mov
les
stc
add
jo
in
loope
mov
stos
sahf
pop
sbb
dec
add
sbb
or
pop
popl
aam
in
in
jns
dec
sbb
sahf
out
test
push
or
jns
push
mov
cmp
dec
mov
stos
nop
and
std
or
loopne
jmp
xchg
cmp
mov
scas
adcb
jae
sbb
xor
dec
out
aad
mov
js
jl
cmp
mov
les
push
mov
test
test
pusha
cmp
cmp
imul
xchg
xlat
call
lret
test
test
dec
sub
xchg
lds
mov
loope
pop
out
cmp
mov
in
aad
sub
mov
icebp
mov
lret
insl
les
insb
je
mov
iret
push
loopne
cwtl
out
adc
pusha
cltd
mov
jecxz
fcmovb
dec
sub
jg
pop
jne
ret
or
divb
jecxz
cmpsl
addl
pop
test
fmull
add
inc
mov
or
jmp
in
adc
xor
sub
imul
popl
fsubl
cli
mov
call
push
fdivrs
inc
mov
pop
mul
cltd
push
mov
aad
cmpsb
mov
xchg
int3
mov
or
cmp
or
rclb
fsubl
or
inc
bound
aad
test
sub
pop
rolb
jp
push
sub
xor
scas
mov
pusha
movsb
xchg
repz
inc
cld
stc
jns
addr16
lock
movsl
dec
es
mov
nop
pop
add
test
shll
jbe
jae
imul
push
lods
xchg
dec
pushf
mov
mov
pop
xchg
cmc
adc
or
subb
cltd
lods
test
pop
jae
int
jge
lods
adcb
sbb
jae
in
movsb
sbb
lahf
xor
jae
cmpsb
mov
or
fisttpl
mov
pop
test
jbe
mov
pop
sti
js
xorb
sbb
xor
push
pop
jl
mov
mov
je
scas
fiadds
mov
decl
mov
xchg
mov
test
dec
sub
stc
mov
fwait
cmp
daa
mov
lea
jg
andl
lcall
loop
jmp
cmp
jl
aam
decb
cmp
outsl
js
pop
sub
mov
pop
and
add
movsbl
out
dec
or
mov
stos
push
inc
push
push
stos
mov
add
and
push
data16
popf
sbb
scas
cmp
push
push
cmp
and
scas
pop
daa
xchg
mov
add
fiaddl
testl
or
inc
jae
pop
cmp
lods
fisubl
cmp
xor
fisttps
ret
inc
cld
dec
mov
inc
ljmp
fistpll
shlb
clc
sbb
repz
pop
popa
fsubrs
fwait
leave
pop
mov
lahf
out
inc
cs
cmp
mov
addr16
inc
sbbl
cmp
push
in
gs
xchg
in
inc
fnstcw
mov
insl
mov
push
ljmp
jns
push
inc
dec
inc
cmp
les
mov
pop
xor
or
mov
ljmp
pop
sub
xchg
xchg
dec
push
mov
cli
and
mov
push
inc
mov
sbb
arpl
gs
cmp
inc
pop
test
les
xchg
or
cmpsb
cmpsl
popf
cld
mov
mov
ror
push
add
or
ds
fstpl
incl
mov
inc
sub
sbb
mov
rorl
movsb
mov
aam
adc
lods
in
je
push
sbb
test
lea
xlat
jl
or
sbbl
lea
imul
add
or
or
cs
lods
cmpsl
mov
sub
push
sub
mov
push
cmp
sbb
xor
sbb
ret
inc
sti
das
jl
add
cmc
mov
or
inc
sub
sub
push
pop
bound
or
jle
jmp
and
out
dec
mov
dec
out
dec
std
xor
sub
shll
fsubp
push
mov
pop
push
inc
fdiv
jb
mov
jae
jbe
push
pop
push
mov
fisttpl
flds
cmp
and
insb
hlt
push
ja
push
dec
dec
call
cmc
dec
xchg
pop
lods
sbb
divl
inc
mov
xchg
ja
lea
fndisi(8087
mov
out
pusha
mov
int3
in
pop
nop
inc
sti
mov
inc
mov
inc
aad
xor
stos
adc
inc
pusha
in
mov
mov
mov
jmp
and
jnp
sti
dec
iret
subl
mov
and
aam
dec
add
cmp
inc
shlb
fistl
or
ljmp
lret
cmp
xor
stc
jnp
push
lahf
std
sti
inc
daa
push
fldt
sub
mov
lret
xor
and
iret
cmpsl
addl
out
aam
fidivrl
stos
pushf
adc
dec
stos
pusha
shrb
cmp
mov
pop
dec
mov
imul
lret
and
mov
mov
sti
rolb
jns
adc
dec
stos
pop
adc
mov
pop
xchg
cmpsb
push
mov
jecxz
inc
xor
xor
xor
es
sti
test
gs
pop
adc
pop
xchg
daa
lret
fcmovbe
xchg
adc
negb
adc
inc
and
loop
or
imul
test
add
inc
test
push
sub
cmpsb
ljmp
outsb
and
shlb
std
jnp
arpl
ret
vmwrite
push
fdivr
je
and
pop
fiadds
push
add
sub
bound
insb
mov
cmp
aas
lcall
das
push
lret
movsb
dec
add
lret
fbstp
repz
sbb
ja
mov
push
out
sbb
mov
or
movd
add
enter
sbb
jnp
lahf
cmc
movsl
hlt
push
lea
repz
sbb
dec
clc
into
jae
mov
mov
mov
cmp
pushf
pop
mov
inc
or
cmp
cld
lods
mov
jl
sub
mov
pusha
and
sub
cmc
and
imul
lret
mov
sbb
sub
inc
je
ret
push
push
ja
fcompl
mov
inc
in
push
push
scas
bound
mov
repnz
imul
lret
mov
push
out
jg
pop
jge
pusha
in
sub
mov
add
fisubrs
es
sti
lods
sub
cs
pop
add
mov
inc
xchg
jnp
xchg
push
mov
cmpsl
roll
daa
inc
jnp
push
mov
inc
fsubl
fs
imul
fstps
mov
lock
jg
into
and
mov
mov
adc
sbb
pop
cltd
mov
cmp
push
mov
das
addb
and
out
or
sub
pop
movsb
hlt
inc
out
mov
mov
sub
daa
scas
push
xor
or
arpl
loop
sti
bound
es
cs
js
mull
inc
fsubrl
mov
mov
jno
cltd
dec
imul
cmp
ficoms
hlt
sub
faddp
push
xor
push
sbb
push
cmp
sti
fucom
dec
cs
iret
or
clc
or
xor
and
aam
xchg
inc
mov
ljmp
or
movsb
int3
into
mov
inc
push
adc
inc
and
imull
loope
insl
loopne
mov
scas
add
test
ror
cmp
sti
add
jb
sbb
mov
sbb
inc
jbe
push
jbe
testl
sbb
iret
inc
dec
push
dec
mov
xchg
lret
stos
pop
dec
nop
xchg
rcll
inc
sub
push
ss
stos
inc
mov
fsubs
es
fs
and
movsl
sub
repnz
mov
mov
cmp
jns
ret
add
push
repz
mov
sti
lahf
add
pop
int
xor
mov
out
fwait
jns
adc
loope
xchg
pop
mov
mov
pusha
testl
pop
subps
cld
jl
ret
adc
gs
dec
ja
add
add
fmull
addb
inc
dec
inc
int
jge
mov
cmp
adc
or
push
dec
iret
and
cmc
std
push
add
jmp
fwait
xor
cmc
hlt
test
add
push
pop
inc
dec
add
sub
dec
test
push
sub
sbb
push
stc
lret
fistl
int3
add
cld
out
sub
jae
cltd
push
jae
or
repnz
adc
mov
xchg
in
mov
xchg
ja
add
add
ficompl
pop
pushf
movsb
test
into
xlat
inc
fnstenv
jae
adc
jnp
add
arpl
pusha
clc
and
push
dec
ficompl
repz
jl
add
enter
jno
pop
cmp
cmp
mov
xor
mov
add
mov
cs
in
hlt
pop
mov
pop
sub
sub
testl
addr16
and
ret
mov
pusha
cmp
jo
ljmp
das
es
cmpsl
repz
in
push
mov
xor
cmp
int3
xchg
inc
push
add
dec
lods
cmp
jg
fisubl
jmp
fdiv
leave
pop
sbb
lods
xor
ja
lcall
aas
jecxz
mov
test
inc
lea
xchg
scas
dec
fstpt
pop
jb
inc
xchg
inc
jns
fdivrl
jge
jnp
ficoms
lods
xor
les
jle
rorl
out
lock
sub
add
and
fildll
cmpsl
xlat
and
sar
jnp
int3
fs
pop
jl
test
jb
inc
call
lcall
std
xchg
mov
pop
jbe
xchg
sbb
je
les
xchg
jb
lahf
pop
and
xchg
push
pop
dec
xor
mov
add
fistpl
adc
pop
xchg
mov
push
push
js
enter
cmp
repz
mov
fstpt
das
xlat
sub
mov
or
lahf
mov
jp
push
out
shrd
jo
in
sub
mov
sub
jo
mov
std
fwait
jl
movsb
hlt
ret
fistl
ret
xchg
repnz
xor
enter
outsb
cmp
arpl
add
cmp
stc
divps
inc
mov
pop
mov
and
jb
add
je
jl
adc
outsl
lret
sbb
sub
mov
ret
cmp
mov
repnz
and
dec
mov
jp
sysenter
mov
dec
test
mov
iret
in
je
cmp
push
xchg
icebp
cltd
cmp
ret
sub
sub
sbb
jmp
mov
add
inc
test
das
mov
addr16
jle
mov
pop
pop
loopne
pop
sub
adc
pop
lret
fwait
movsb
je
mov
fwait
push
pushf
mov
cmp
push
std
ss
and
lahf
aad
insb
adc
faddp
aaa
push
cs
cltd
int3
fcmove
sbbl
out
ret
imul
mov
mov
jne
jnp
pop
cmp
adc
jmp
clc
xor
jle
or
aaa
and
lock
ret
pop
lods
cmp
add
xor
loope
and
das
ror
jno
in
or
jmp
xchg
mov
mov
inc
mov
or
dec
push
das
inc
dec
in
popa
sbb
add
jmp
idivl
cmp
movsl
in
xor
jmp
or
imul
stos
clc
dec
push
xor
in
pop
mov
dec
jo
mov
insb
rcrl
mov
adc
stc
nop
xchg
mov
shlb
jnp
dec
jmp
loopne
and
adc
inc
in
sbb
sub
adc
les
inc
push
mov
push
repz
inc
and
cmpb
jno
xlat
and
pop
mov
in
sahf
insl
icebp
orl
into
aad
or
mov
fisttpl
add
stc
add
push
jg
loope
jmp
roll
outsb
or
cmp
ficoms
jg
test
push
sbb
fidivrl
pop
or
adc
cmp
inc
mov
and
mov
call
fisubs
mov
xchg
jl
loope
scas
pop
inc
mov
imul
jp
mov
js
ljmp
decl
scas
stos
jle
pop
out
xor
adc
mov
jae
stc
cmp
or
dec
adc
ret
jno
jecxz
add
test
cltd
es
adc
or
add
out
sbb
insl
add
mov
outsl
inc
repz
mov
mov
mov
pop
shlb
ljmp
mov
ret
and
nop
pop
nop
inc
or
push
loopne
imul
mov
inc
adcb
push
push
jmp
mov
inc
cmc
jg
movsl
mov
mov
repnz
fcmove
int
fistpl
cmpsb
sbb
push
jmp
popf
out
stc
loope
cmp
pop
loop
cltd
fwait
adc
mov
leave
arpl
inc
sbb
fs
mov
mov
sbb
cltd
pushf
or
mov
adc
imul
leave
mov
outsb
test
cld
dec
pop
loope
repnz
push
imul
dec
arpl
mov
xchg
push
pop
addr16
imul
pop
mov
or
sbb
push
je
pop
ja
int3
or
sahf
jne
mov
add
dec
jge
divl
xor
fildl
xor
rcrb
pusha
mov
or
push
dec
incl
inc
dec
ret
cwtl
xchg
and
lea
pushf
mov
shl
int3
and
fisubrl
push
aaa
xchg
mov
and
shl
popf
inc
xor
insb
es
out
les
loopne
mov
xor
mov
in
lds
mov
mov
pop
daa
cwtl
xor
xor
inc
aam
push
adc
dec
scas
dec
lods
shll
inc
mov
int
insb
sahf
xor
push
shrl
cmp
mov
and
ror
pop
jmp
or
or
inc
cmp
dec
movb
lods
jo
push
add
cltd
lods
jno
mov
xor
mov
pop
out
stos
sub
inc
dec
xor
icebp
leave
cmp
fs
test
inc
stc
add
jle
cmp
gs
sar
aaa
add
filds
cmp
sbb
push
repz
xchg
pop
std
fnstcw
mov
shrb
xor
add
rcl
or
mov
andl
pop
cs
xchg
cmc
and
add
or
fs
or
dec
adcb
roll
xor
ljmp
sub
sahf
jp
inc
push
dec
mov
and
mov
and
enter
push
or
test
xor
mov
lcall
cmpsb
repz
ret
mov
push
jle
mov
jb
add
xlat
pop
repnz
ss
push
lcall
xchg
sbb
xchg
mov
mov
cmpsb
mov
pop
mov
mov
inc
mov
fstpt
arpl
repz
cmc
or
cmp
mov
xchg
movsl
mull
jae
pop
fwait
or
les
arpl
mov
or
mov
push
cmp
xchg
pop
push
dec
cltd
jmp
pop
out
insl
xchg
lods
es
xchg
pop
fsubrp
mov
pop
cmp
outsb
rorb
xor
or
or
cmp
in
rolb
jl
inc
add
cmc
xchg
in
dec
push
shll
sbb
mov
test
mov
nop
dec
push
mov
mov
xchg
sbb
pop
sub
out
mov
pop
push
pop
jecxz,pn
inc
mov
add
jg
mov
mov
sub
dec
fs
sub
add
jmp
repz
je
pop
stos
or
test
dec
or
xor
ja
xchg
adc
mov
push
mov
in
and
or
xchg
cmc
fwait
adc
ja
ss
dec
outsl
dec
mov
or
jbe
mov
mov
stos
push
jbe
fs
mov
stos
scas
jle
fs
aas
ret
dec
cs
jmp
cwtl
fs
mov
xor
mov
mov
xor
cmpsl
jns
jmp
insl
fimuls
mov
jle
mov
inc
cmpsb
xchg
adc
add
dec
in
nop
add
ret
cs
push
fwait
mov
dec
dec
cmp
pushf
test
out
les
jnp
inc
sbb
or
adc
pop
xor
loopne
inc
sbb
push
scas
xor
shrb
xor
mov
out
mov
adc
adc
mov
outsb
ja
sub
ret
scas
sub
jnp
sahf
lods
and
sbbl
shll
inc
push
mov
add
aam
cmpsl
sub
movsb
mov
push
jmp
add
or
mov
es
xor
insb
repz
fistpl
xchg
cmp
or
testl
shrl
scas
daa
into
movsb
frstor
dec
ror
dec
inc
sub
in
mov
mov
push
int
cmpsl
frstor
push
je
fs
add
or
rorb
popa
das
js
ffreep
mov
sub
adc
insb
jl
gs
mov
or
in
jb
xor
andb
cmc
jmp
imul
jno
pop
adc
sbb
add
pop
stc
popa
pop
daa
std
fs
pop
ficoml
sub
and
jl
mov
loope
aam
add
les
testb
sbb
andl
mov
movsl
jb
sub
lods
add
insl
fisubrl
mov
rcll
push
or
fmuls
mov
shrl
outsl
pusha
aam
inc
loopne
adc
fwait
scas
jmp
fistl
fcmove
mov
sti
xor
shl
faddl
or
and
lods
pop
push
lcall
cs
mov
ja
cmp
mov
pop
sub
xchg
add
dec
add
inc
outsb
dec
sub
sub
stos
ljmp
jno
pushl
lock
insb
sahf
mov
push
ss
push
cmpsl
xor
mov
mov
cmp
pop
mov
push
sbb
adc
push
or
jmp
cmpsb
cltd
jbe
shrl
xchg
and
xor
andb
jae
sub
fwait
test
int
imul
sti
test
sarb
inc
jnp
cli
mov
cmp
lretw
in
int3
jmp
aam
jae
lahf
icebp
stos
cmp
pop
das
jb
or
mov
js
mov
lds
sub
jmp
inc
pop
popf
fidivl
loope
pop
divl
nop
sbb
mov
push
push
cmp
test
sub
and
dec
dec
call
imul
orb
dec
pop
mov
sbb
lret
pushf
push
test
js
shll
out
fwait
jg
xor
mov
scas
js
cmp
or
inc
pushl
xchg
lds
ficomps
dec
push
mov
mov
test
push
mov
pop
mov
mov
ret
pop
leave
pusha
jns
ljmp
mov
ljmp
mov
pusha
pop
es
rcrl
mov
fs
imul
sub
sbb
ret
mov
call
jno
inc
data16
popf
mov
lds
push
sub
cmpl
mov
inc
pop
icebp
pop
mov
decb
push
jb
jno
dec
repz
jbe
cmp
mov
lret
add
shl
arpl
subb
push
adcl
push
jae
and
std
les
push
mov
jp
data16
cmp
into
filds
cmp
pop
fimuls
jae
cmp
sbb
jns
mov
rclb
pop
dec
pop
aas
rcl
int3
pop
mov
push
cmc
sub
adc
imul
xorb
jmp
xchg
inc
mov
mov
cwtl
cmpsl
cltd
dec
or
jnp
dec
dec
fsubrp
push
mov
xchg
adc
or
mov
xchg
xor
lods
mov
ja
ret
fsubrl
cs
push
jb
pop
pusha
mov
incb
insb
add
mov
ret
in
int
adc
pop
rcrb
inc
rcrl
enter
sbb
pop
arpl
ja
insb
inc
fcmovb
adc
sbb
pop
or
je
mov
cltd
xchg
xchg
push
out
mov
imul
int
test
sub
fisttpll
mov
lcall
imul
out
shll
adc
and
inc
cmc
rcrb
mov
fdivs
popa
inc
test
sbb
pop
sahf
stc
sbb
fwait
jbe
mov
divl
fisttpll
repnz
call
lret
js
xchg
fwait
jns
out
push
mov
clc
dec
push
subb
fistl
cld
jno
push
inc
and
inc
test
fidivs
push
adcb
push
cmp
lret
icebp
jg
negl
scas
jle
mov
adc
in
cmp
dec
les
decb
icebp
lods
data16
lcall
loope
mov
sbb
mov
shrb
jl
aaa
cmp
test
je
jecxz
int3
adc
mov
cmpsb
and
lods
test
push
sub
mov
xor
add
aad
xor
ja
pop
dec
sti
jnp
fwait
jl
dec
mov
pushf
cmpsb
cltd
les
shl
mov
movsl
cmpsl
xlat
scas
fildll
cwtl
dec
insb
add
es
xchg
enter
jb
insb
mov
sbb
sbb
js
inc
push
call
add
mov
pop
mov
dec
mov
mov
repnz
mov
jnp
aam
push
adc
sub
clc
mov
test
mov
and
imul
clts
ljmp
cld
sub
lock
or
inc
ret
addl
mov
sub
shlb
arpl
jl
jge
pushf
out
and
jge
dec
xor
inc
inc
les
testl
imul
jmp
andb
aas
push
addr16
ljmp
jmp
mov
lods
and
jecxz
xchg
adc
aad
mov
mov
lods
shl
dec
lea
pushf
push
mov
mov
ljmp
lds
mov
outsb
jbe
sbb
push
pop
cwtl
popf
aaa
jno
pop
fimull
jns
jle
jno
scas
mov
mov
out
pop
xchg
aad
dec
divb
xor
inc
xor
es
jecxz
lods
add
xchg
mov
sbb
and
mov
stos
mov
inc
mov
cld
cmc
jecxz
jb
jge
outsb
pop
sbb
cmp
cmpb
xchg
inc
jno
add
fdivs
fiaddl
mov
movb
pusha
or
in
jmp
shll
sub
xchg
in
jae
and
dec
fidivl
adc
jle
js
js
cld
inc
and
ja
or
cmp
push
xchg
mov
popa
addb
mov
lds
dec
fs
sbb
add
cmp
sbb
add
addr16
andb
xchg
xchg
pshufw
mov
add
lock
mov
shl
mov
sub
pop
repz
int3
out
adc
cmc
fwait
or
aad
cld
push
test
movsb
pop
es
in
sub
adc
or
hlt
xchg
mov
ss
and
pop
sahf
outsl
push
cmc
cld
sub
mov
jno
fwait
hlt
cld
sbb
out
es
pop
jb
jmp
mov
fistps
out
fdivp
daa
mov
push
inc
sub
test
jno
inc
and
jl
xor
clc
dec
adc
test
aam
push
add
jns
xchg
lods
mov
mov
adc
enter
add
sub
rclb
or
test
cltd
rorb
pop
adc
or
jl
int
and
push
and
adcl
cmp
mov
pop
ficoms
mov
sbb
stc
int3
dec
mov
int3
icebp
xchg
sarb
xchg
dec
mov
sti
sbb
add
jmp
aam
stc
xlat
push
add
ljmp
cmp
in
inc
and
pop
cs
push
push
xorl
sbb
sub
sub
jbe
mov
out
cmp
clc
push
imul
dec
mov
xchg
iret
push
mov
add
mov
ljmp
pop
rcrb
inc
lcall
push
jecxz
lahf
xchg
test
push
imul
sub
mov
mov
out
fidivl
dec
or
jno
fiaddl
ljmp
jb
dec
mov
fs
sub
mov
adc
out
loopne
or
hlt
outsb
aam
shlb
mov
mov
hlt
stos
mov
mov
sub
int3
dec
addr16
mov
imul
outsl
clc
lcall
or
pop
ja
mov
nop
into
negb
pusha
hlt
shl
and
mov
xchg
out
int
leave
shl
mov
cmp
adc
dec
in
mov
push
sbb
pop
mov
imul
gs
int
fidivs
xor
mov
inc
or
jl
jnp
stc
xchg
xchg
outsb
mov
daa
loopne
repz
fldt
pop
push
jo
lcall
pop
xchg
pop
pop
loope
insl
lcall
or
mov
cld
bound
mov
les
lret
inc
mov
pop
xchg
dec
fisubrl
mov
jae
and
ret
in
jmp
inc
pop
fs
pop
ja
mov
mov
fwait
mov
sbb
inc
cmpsb
push
xor
es
outsl
sarl
pusha
arpl
add
pop
push
pop
outsb
xor
mov
cmp
rcr
das
ds
sbb
push
mulps
jg
pop
dec
mov
gs
test
lret
test
inc
sub
pushf
mov
push
shrl
inc
ljmpw
pop
mov
mov
push
push
mov
es
lods
es
loopne
imull
inc
ds
pop
mov
loope
ret
insl
fs
or
mov
in
xlat
sbb
scas
jp
mov
lcall
fistl
adc
aas
fwait
push
mov
int
jns
sahf
adc
test
dec
dec
ljmp
out
fimull
cs
int
pop
and
rolb
pop
jecxz
push
mov
inc
sub
push
and
xchg
daa
fcmovnb
xor
or
dec
mov
jns
jle
lods
mov
sub
mov
ljmp
or
pop
sahf
xor
and
adc
popf
and
mov
jecxz
cltd
cmp
idivl
sub
add
aad
cmp
movsb
mov
ljmp
sbb
pop
jl
mov
jl
dec
sub
lods
lds
and
mov
mov
cmp
lds
cltd
aam
movsl
cmp
sub
pop
pop
repz
push
fstpt
stc
test
push
dec
mov
loope
jae
push
push
cmp
fwait
adc
jbe
lods
fisttpl
mov
push
pop
sbb
js
jmp
mov
fdivr
test
repz
icebp
mov
adc
inc
pop
loop
loopne,pn
insb
jmp
dec
das
ficoms
push
cmc
xchg
outsl
out
aas
mov
dec
mov
sub
fdiv
push
or
inc
push
inc
xor
dec
fimuls
pop
cmp
pop
test
rcll
inc
or
push
out
or
or
mov
inc
push
into
cs
leave
rcll
movsl
mov
repz
fidivs
lahf
gs
out
mov
imul
hlt
insl
into
pop
jns
in
arpl
jg
push
sbb
cmp
mov
sub
inc
imul
jae
shlb
mov
subl
sbb
cmp
lock
dec
in
adc
hlt
imul
adc
jns
cs
and
cmp
mov
popf
int
mov
fs
dec
jl
lcall
mov
jbe
pusha
fidivrs
insb
adc
mov
fidivs
ljmp
mov
add
movsb
movsb
adc
in
out
data16
cmpsb
aam
sbb
jbe
and
pop
lock
rorb
mov
mov
and
sub
test
ficoms
mov
adc
test
adc
or
fisubs
push
daa
out
stos
add
out
or
test
mov
fs
fildl
fs
pop
push
testl
test
inc
sub
and
jnp
jle
add
jns
mov
movsb
cs
subb
cmp
stc
inc
lcall
inc
cmp
movl
inc
mov
xchg
mov
sahf
add
shll
push
adc
sbb
or
pusha
jg
jmp
xchg
push
jmp
leave
std
xlat
dec
inc
or
cld
inc
adc
pop
jnp
movsb
imul
adc
jo
mov
scas
mov
xor
jmp
mov
mov
jo
sub
dec
sub
mov
inc
adc
push
insb
jns
call
sahf
mov
xchg
dec
adc
loope
stos
idivl
mov
lods
out
imul
sub
aad
loope
aas
imul
inc
cli
or
xchg
in
insb
lds
mov
jns
push
bound
stos
pop
mov
inc
mov
sahf
inc
dec
cmp
into
cmp
cmp
cld
fwait
jae
cltd
outsb
cmpsb
lret
mov
cmp
cmc
mov
nop
cmpsb
nop
into
pop
jmp
insb
inc
ret
jle
xlat
add
adc
xchg
and
mov
dec
mov
xlat
js
jmp
sarl
rclb
lods
push
cmp
test
insl
movsl
fmul
pop
mov
pop
loopne
test
out
sub
xor
sub
sub
shll
rcll
sub
xchg
pop
jns
popf
sub
mov
xor
push
add
pusha
xor
mov
in
loopne
mov
cltd
and
adc
or
ss
cltd
ja
pop
pop
pop
push
mov
test
mov
sti
mov
rorl
inc
mov
mov
cmp
repz
jb
push
jle
jl
inc
xor
mov
mov
mov
cmp
movsl
mov
mov
pop
push
inc
rcl
push
in
sub
test
inc
aad
push
and
loope
in
xlat
pop
sbb
enter
push
cltd
mov
lcall
in
inc
in
es
scas
movsb
imul
lcall
fwait
xor
imul
pop
jl
insl
fbld
mov
push
addr16
notl
mov
aaa
mov
lods
mov
jbe
xchg
sub
lahf
shrl
in
sti
in
cmc
je
ja
or
push
mov
cltd
repz
lret
cmp
test
push
mov
ljmp
lods
mov
out
mov
inc
mov
jne
push
xchg
mov
addr16
pop
mov
fiaddl
xor
jnp
jb
dec
shl
cli
std
push
dec
bswap
mov
leave
mov
xorb
repz
cltd
nop
cmp
pop
mov
repz
adc
cld
dec
call
loope
xchg
les
dec
sub
jno
stc
mov
push
inc
push
dec
and
loopne
push
ror
or
std
mov
shlb
lret
inc
fildl
pop
add
fisttps
sbb
pop
imul
iret
fs
sub
and
mov
les
or
sbb
adc
cmp
inc
icebp
xlat
jg
pushf
int3
mov
dec
ljmp
xchg
loope
or
aam
aad
out
lock
jle
mov
inc
adc
into
adc
aam
jne
fcompl
inc
cmp
add
inc
data16
and
jmp
sbb
cld
add
pop
fmull
mov
js
and
or
clc
mov
das
pop
sti
subb
push
cmp
outsl
andb
pop
lret
fisttpll
fdivrs
inc
pop
dec
addb
push
imul
cwtl
xchg
mov
jns
fsubl
mov
inc
xchg
fwait
sbb
dec
jp
stos
outsb
movsl
enter
push
repz
sbb
pop
mov
test
aaa
pop
adc
ja
jnp
push
dec
jbe
and
sub
add
mov
push
in
xor
cmpsb
aad
loope
cmpsl
inc
test
xor
imul
jbe
adc
mov
mov
jg
push
cli
mov
sbb
xchg
loop
inc
fbld
loop
ret
mov
scas
arpl
push
je
in
inc
enter
ss
movsl
xchg
pop
or
test
and
pop
in
mov
mov
lock
mov
mov
push
mov
jmp
cmpl
cmp
call
js
jno
inc
pop
hlt
fcmove
out
mov
jae
dec
pusha
mov
test
jae
jl
out
scas
cmc
jnp
mov
out
cmc
setge
inc
les
mov
inc
push
add
inc
sub
pop
es
cmp
mov
out
push
sub
cwtl
cltd
stos
int
and
xor
ror
sarl
int3
enter
mov
aas
jo
mov
and
in
imul
daa
js
jl
sub
mov
stc
cwtl
scas
aam
sub
aas
lret
loopne
inc
aam
data16
push
repz
mov
out
push
repnz
mov
mov
sbb
or
pop
sub
dec
pop
xor
rolb
cld
cltd
pop
mov
push
push
mov
fs
cmp
mov
sarb
mov
push
lret
hlt
int3
pushf
es
test
in
stos
and
mov
test
sbb
and
jle
add
mov
adc
inc
push
dec
insb
pop
jg
mov
in
outsb
movsl
pop
inc
pop
push
sub
shll
sbb
scas
loopne
add
sub
fiadds
sahf
lahf
jb
xor
mov
dec
imul
rcrl
or
das
cltd
out
fsubrs
call
mov
fs
sbb
inc
lret
jmp
ljmp
fimuls
mov
cmp
shlb
add
pop
aad
ficompl
cmp
pop
rcll
mov
cmp
lods
lds
repnz
int
jecxz
insl
std
test
mov
sub
push
cld
aaa
mov
or
pop
fnstsw
sarb
popf
fistl
test
rcr
shlb
add
repnz
cli
sbb
xor
push
adc
pop
inc
xor
rcrb
fwait
es
cmp
aad
hlt
mov
fimuls
mov
mov
mov
and
sbb
out
test
xchg
scas
mov
adc
in
cmp
or
ss
ret
cltd
inc
out
cmp
fnstsw
cmpb
xchg
cld
or
sub
es
adcl
jne
lahf
fld
insb
adc
mov
mov
cmc
add
sti
cli
and
sti
movsl
loope
add
stc
mov
add
in
jg
clc
dec
lret
ja
or
add
out
ljmp
pop
pop
sti
mov
sub
push
mov
add
adc
fwait
jns
lcall
aaa
or
cmp
hlt
repz
xor
rorb
cmp
pusha
fisttpl
shrl
cltd
pop
jnp
mov
dec
jg
mov
ss
jno
cmpsl
mov
jbe
jno
int3
sub
scas
sbb
das
jecxz
js
jnp
les
call
fwait
icebp
int
add
mov
loope
mov
stos
scas
dec
mov
inc
outsb
adc
pop
sub
shr
fldenv
lods
sbb
or
dec
mov
or
sbb
icebp
mov
mov
jg
lcall
xor
mov
hlt
out
jp
push
or
or
inc
add
fiaddl
mov
test
pusha
push
lahf
ja
cmpsb
adc
or
repz
rclb
jl
outsb
xor
sbb
dec
inc
test
sub
adc
decb
fisubl
push
stc
push
lret
shll
sbb
lods
and
dec
mov
cmc
lret
rcll
imul
mov
andb
imul
sbb
jnp
test
mov
sub
pop
mov
jnp
mov
lds
testb
and
inc
or
out
push
ljmp
xor
add
adc
je
dec
incb
and
pop
jno
mov
ja
mov
iret
std
imul
shll
dec
jb
xor
mov
sbb
xor
adc
arpl
adc
outsb
jge
testb
push
leave
dec
jle
mov
jno
or
or
adc
cld
loope
dec
push
jbe
popa
push
iret
adc
push
outsb
mov
jmp
jp
and
mov
ljmp
sbb
adc
jmp
and
jns
in
sub
lock
imul
mov
ret
and
jb
cmc
insb
loop
mov
js
nop
xor
xor
adc
dec
mov
in
dec
sbb
int
adc
xor
cmp
cmpsb
mov
dec
jnp
mov
ret
mov
dec
and
repnz
iret
test
stc
lea
arpl
mov
test
insw
jmp
pop
xor
stc
pop
pop
add
xchg
pop
mov
add
fs
mov
xor
cmp
lods
lods
add
inc
mov
jmp
lods
adc
sub
ret
cmc
jno
mov
dec
daa
icebp
mov
inc
out
mov
mov
popf
pop
inc
jb
fs
or
lods
cmp
and
xorb
and
mov
or
ret
sti
mov
adc
xchg
cmp
mov
or
stc
mov
adc
pusha
pop
inc
xchg
sub
and
je
fwait
xchg
or
cltd
data16
dec
repz
jmp
push
mov
jb
inc
push
cld
incb
decl
jge
add
push
cmp
ljmp
icebp
sub
fmul
pop
dec
jl
es
das
jl
jno
fwait
xorb
testl
or
or
inc
sti
dec
fisttpll
xor
jg
rcr
hlt
jnp
sub
mov
in
cmp
xor
stos
aam
iret
shrl
adc
push
mov
pop
mov
adc
fstl
xchg
adc
xor
ljmp
movsl
xchg
mov
mov
movsb
jl
pop
cltd
xor
imul
mov
cmpsb
ja
mov
adcb
mov
sbb
movsl
cmp
xchg
push
xchg
add
and
jge
push
jle
pop
mov
das
adc
rolb
or
jno
push
jmp
mov
ljmp
push
pusha
mov
mov
xchg
inc
data16
mov
js
xchg
mov
jle
push
push
cltd
push
es
shrb
gs
cmpsl
mov
and
fwait
movsl
mov
mov
aas
ljmp
add
mov
add
stos
jae
test
mov
mov
and
mov
dec
loope
orb
popf
shl
inc
rolb
nop
sub
fiaddl
xlat
inc
jecxz
xchg
mov
pop
mov
pop
sbb
push
pusha
ljmp
adc
notl
mov
mov
mov
jl
mov
jmp
fwait
mov
sub
push
jns
sub
sub
jbe
pusha
xchg
jge
test
aad
mov
pushf
dec
repz
out
lds
sbb
mov
loopne
stos
pop
repz
inc
inc
dec
imul
or
xor
cmp
dec
push
inc
xchg
mov
xchg
mov
fildl
cmp
cltd
jge
mov
negb
into
lret
push
push
das
pop
repnz
orb
jl
std
leave
or
dec
arpl
subl
jmp
loopne
mov
clc
sub
jg
nop
jl
mov
mov
cltd
popa
xchg
in
and
or
lea
mov
pop
xchg
loopne
jle
push
jg,pn
mov
cmp
push
lds
movsl
movsb
mov
shlb
mov
cmp
push
fisubrs
pop
and
fs
nopl
test
jo
movsl
test
add
and
dec
mov
nop
pop
mov
and
insb
cltd
fistpl
lahf
hlt
in
inc
cmp
sbb
loopne
lcallw
add
ficomps
jno
mov
incl
dec
rorb
push
inc
mov
movb
or
lcall
mov
push
repnz
push
loope
ficoml
dec
fs
dec
je
mov
in
mov
repz
dec
push
scas
push
sbb
cmp
daa
pop
arpl
xchg
insb
popa
sub
outsw
imul
inc
sub
std
mov
and
pop
fcmovu
mov
dec
imul
stc
jg
push
push
es
dec
jo
je
pusha
lods
mov
idivb
xor
push
movsl
inc
mov
push
into
enter
pop
and
inc
xor
cmp
loope
dec
ss
movsl
sbb
bound
sub
pop
mov
loopne
inc
stos
add
js
int3
and
fwait
ret
mov
inc
mov
or
add
jnp
mov
pop
clc
xor
push
ret
jnp
data16
test
push
or
mov
in
adc
ja
scas
jnp
mov
push
mov
lock
stos
cmpsb
adc
std
divl
cmp
push
push
mov
cmp
popf
jno
mov
addr16
aam
add
test
out
inc
jo
imul
lods
out
cmpsb
xor
jmp
adc
mov
rcll
sbb
jg
adc
mov
or
movsl
mov
mov
or
dec
in
enter
xchg
sti
adc
out
or
divl
mov
xor
add
inc
add
push
fisubrl
adc
hlt
test
lods
insl
cmp
adc
mov
sub
pop
add
pop
and
mov
dec
std
jl
pop
cltd
push
mov
xor
pop
mov
sbb
data16
lret
dec
ljmp
sub
push
fcom
stos
pusha
jo
inc
pop
mov
int
cmp
insb
roll
sbb
push
das
jbe
adc
je
loopne
ljmp
push
imul
mov
mov
mov
mov
fmull
sub
das
icebp
mov
mov
fdivr
lcallw
into
xor
jae
aas
inc
imul
testl
jno
inc
sub
ret
clc
mov
jmp
mov
das
push
icebp
mov
inc
incl
jb
clc
adc
rolb
or
jnp
xorb
mov
jecxz
mov
sub
adc
inc
gs
cmpsl
pop
shl
xor
push
lea
adc
push
imul
shll
das
xchg
xor
mov
push
or
repnz
ljmp
jmp
and
inc
in
sti
mov
out
test
push
enter
loopne
push
andl
mov
mov
inc
dec
mov
push
xor
adc
xchg
add
and
push
cmp
xchg
popl
and
push
inc
movsb
stos
sub
pop
sbb
mov
repnz
cmp
nop
xchg
mov
arpl
inc
mov
cmpsl
sti
fxrstor
scas
pusha
cmc
mov
notb
push
movsb
sbbl
add
fsubr
aam
push
dec
fs
mov
movsl
lahf
rclb
arpl
fnstcw
adc
cmpsb
loopne
jmp
fs
in
fdivr
sub
xchg
test
push
fisubrs
pushf
ficoms
xchg
mov
lcall
aad
stos
clc
fiaddl
sbb
in
pop
and
lahf
sub
in
test
cmp
push
sbb
mov
mov
aad
ss
fninit
in
sub
dec
cltd
call
mov
dec
push
loopne
es
pop
mov
push
mov
fisttpl
enter
dec
test
jg
je
ss
roll
in
movsb
dec
sbb
in
sarl
xor
data16
push
stos
add
sub
mov
sbb
mov
sti
into
cmc
cs
fwait
adc
jnp
mov
rep
jge
aam
mov
adc
dec
mov
aas
cmp
inc
sahf
gs
addr16
pop
mov
stos
xor
inc
inc
in
mov
pop
inc
jo
jecxz
mov
clc
pushf
sahf
imul
mov
cmp
adc
pop
std
cmc
cmp
js
jo
sbb
adc
cs
ret
mov
mov
sub
mov
sub
inc
sbb
sbb
pop
xchg
jae
sbb
aas
mov
rclb
cld
call
xor
xchg
std
pushf
mov
enter
addb
lcall
jnp
ficompl
mov
bswap
hlt
dec
jae
pop
shll
stos
mov
lock
mov
scas
ljmp
jg
fldcw
stos
inc
push
insl
jl
mov
mov
js
add
jb
pop
sbb
out
fistpl
sub
ss
loopne
mov
inc
cmp
out
sub
int3
dec
imul
fndisi(8087
movsb
pop
mov
in
adc
push
push
imul
das
push
dec
repnz
cmp
add
pop
movsb
lahf
jge
jno
mov
imul
xchg
in
rclb
xor
mull
in
cmpl
cltd
and
rclb
int3
fwait
mov
mov
mov
dec
pop
gs
inc
pop
inc
jbe
or
out
mov
andl
add
mov
adc
decb
scas
sti
pop
cmp
mov
ljmp
mov
int
outsb
pusha
mov
pop
movsl
xchg
mov
out
in
imul
lods
xor
fcomi
mov
repz
jae
dec
mov
cmc
aam
jbe
mov
dec
call
cli
fldt
dec
adc
mov
push
aam
loope
insl
jmp
test
pop
cmp
scas
cwtl
adc
clc
fs
inc
idiv
fwait
inc
cmp
es
in
nop
xor
mov
popa
cmp
lret
setno
jl
dec
and
addr16
and
xor
mov
or
mov
push
jnp
outsb
aas
mov
and
pop
add
add
and
or
xchg
mov
pop
addr16
add
pop
sub
stos
iret
loopne
dec
mov
movsb
cs
pop
and
ljmp
push
adcl
jno,pt
cmp
push
fwait
and
push
loope
pop
mov
xchg
iret
test
xchg
cmpsb
jecxz
or
pop
movsl
mov
dec
sbb
pusha
pop
mov
push
cmp
stos
andl
rorl
in
in
and
mov
movsl
pop
jo
xor
xor
mov
jl
out
adc
je
mov
dec
xchg
test
pop
mov
or
cmc
aam
inc
push
mov
ja
sbb
fnstenv
mov
fimull
rcrl
adc
xchg
dec
in
cmp
rcrl
sbb
sbb
or
mov
push
repnz
dec
cmc
and
add
and
sub
sarl
xchg
insb
andb
pop
mull
mov
and
loop
scas
cmpsb
jns
xlat
mov
aad
mov
xchg
pop
and
scas
mov
mov
jnp
into
dec
fisttps
cmp
mov
dec
mov
jnp
or
loopne
sarl
insb
inc
idivb
loop
std
xchg
adc
mov
int
cmp
sbb
imul
push
jbe
ljmp
cmpsl
pop
dec
mov
dec
pop
mov
mov
cmp
cmp
cltd
lods
setg
dec
cmc
into
add
mov
and
jnp
hlt
add
outsb
lcall
lret
jo
es
dec
clc
lods
mov
inc
inc
or
add
adc
mov
mov
add
jne
scas
cmp
das
or
xor
pop
or
pop
addr16
lret
inc
repz
jno
mov
hlt
mov
mov
sub
jne
or
sub
insl
imul
jb
dec
mov
stos
scas
std
bound
mov
jecxz
ja
cmpsb
jb
cmp
popf
or
mov
and
fldl
push
push
and
mov
cs
dec
sti
push
push
xchg
in
pusha
imul
sbb
dec
fcmovb
and
stc
ffree
inc
push
lods
adc
add
pop
inc
sub
cli
inc
mov
out
inc
dec
mov
inc
clc
or
subl
rcrl
les
pop
jmp
mulb
lret
adc
xor
cmp
ret
mov
shll
xchg
jecxz
in
std
das
mov
and
shl
push
push
push
push
hlt
push
addl
repz
mov
pop
sahf
mov
daa
inc
adc
enter
mov
mov
or
loopne
lcall
and
into
movsb
fsubrl
push
cld
lret
sub
nop
sbb
mov
iret
cmc
dec
add
push
xlat
jecxz
mov
sub
icebp
out
pop
or
fsubrp
pop
add
fcompl
scas
lcall
jmp
cmp
jno
mov
mov
cmp
jg
movl
cmp
ss
push
inc
insl
or
cvttps2pi
js
enter
mov
vmovntdq
mov
add
dec
xchg
sbb
test
in
jecxz
sbb
ffreep
xlat
mov
pop
mov
repnz
fs
dec
iret
ret
mov
inc
out
xor
sub
mov
dec
mov
and
dec
lret
mov
inc
jno
sub
add
mov
push
mov
pop
mov
mov
arpl
fwait
or
add
fmull
ja
cmc
jno
jg
push
sti
mov
add
shrb
iret
int
inc
sti
je
aam
stos
cmp
cmp
sub
lret
adc
mov
arpl
adc
pop
push
rcll
jno
aad
push
mov
ficomps
lea
push
sbb
and
std
lret
adc
pop
add
ret
mov
ja
push
inc
mov
adc
adc
fwait
sub
imul
jae
fs
lret
shl
dec
sub
mov
fstpt
repz
data16
jmp
jecxz
push
out
cmpsb
scas
loope
sub
xchg
leave
lods
sbb
shrb
sub
cmp
daa
sarl
push
push
jl
dec
out
mov
mov
xchg
or
leave
or
out
fldpi
mov
into
push
jmp
jno
nop
xchg
cmp
jmp
fstps
loopne
loope
mov
or
sbb
and
adc
outsb
cmpsb
jb
sub
je
shlb
fwait
rorl
insb
mov
aam
and
sub
aam
sub
into
div
adc
jle
mov
scas
cs
dec
mov
inc
lods
push
push
and
les
pushl
push
mov
aam
xor
nop
cli
mov
pop
and
pop
push
xor
xor
push
dec
sub
sbb
loopne
inc
push
jg
push
fwait
imull
push
adc
imul
dec
sbb
iret
sub
mov
fstpl
clc
adc
jo
xor
rcrb
mov
int3
mov
inc
sahf
xchg
cwtl
in
push
test
and
imul
out
push
adc
shll
or
shrd
xor
data16
add
mov
jbe
jmp
pop
inc
sub
loope
dec
fcomi
cltd
adc
addr16
std
xchg
mov
inc
dec
clc
icebp
imul
inc
mull
mov
js
pop
outsl
dec
jecxz
push
repz
leave
imul
call
pusha
jle
pop
sbb
mov
pop
sbb
fwait
mov
push
jge
dec
pop
sbb
mov
cltd
mov
mov
pop
cmp
cs
loop
movsb
out
int
jns
cmp
sub
and
or
mov
je
pop
mov
mov
mov
test
sti
mov
mov
movsl
sahf
jg
jle
and
sbb
fwait
lock
aaa
mov
add
ret
mov
and
push
int3
addr16
jecxz
cltd
dec
ljmp
out
lods
sbb
inc
js
cmp
mov
shll
mov
xor
popa
roll
pop
mov
int
cmp
push
mov
sbb
movsb
cmc
mov
dec
inc
sub
pop
pushf
cmp
mov
xor
mov
jne
push
scas
cmpsl
xor
pop
fidivs
in
xor
cmc
xchg
adc
push
pusha
mov
cmpsb
outsl
or
mov
cli
xchg
cld
imul
mov
jae
outsl
incb
aaa
push
mov
test
adc
rclb
lret
test
push
test
cmpsl
icebp
mov
ja
dec
jns
les
fbld
fistl
jo
mov
ficoml
jne
adc
xorb
cmp
test
mov
shl
mov
xchg
fbstp
ret
out
das
fisubrs
test
adc
sti
insb
dec
inc
sbb
push
lods
mov
or
int
lock
loope
clc
dec
sub
shlb
cmpsb
out
test
cltd
lock
rclb
mov
lret
dec
lods
dec
jb
enter
cld
nop
arpl
cmpsl
aaa
xchg
jg
push
jecxz
mov
adc
cmp
jbe
mov
jp
and
inc
adc
loopne
sar
jg
push
js
and
mov
add
jp
mov
add
mov
cmpsb
fsubs
rorl
adc
test
scas
sub
push
inc
add
dec
inc
bound
pop
push
gs
sbb
imul
dec
cltd
jecxz
daa
add
push
out
push
sbb
cmpsl
mov
push
ja
push
xorb
stc
mov
pop
and
and
cltd
pop
mov
push
cltd
jb
bound
push
sub
es
pusha
lahf
sbb
mov
scas
mov
cli
rcrb
in
xchg
cmp
mov
dec
sbb
enter
dec
pop
xchg
xor
jb
roll
andb
jae
jbe
je
ret
ljmp
lahf
rcr
and
call
cmp
lret
cmc
mov
dec
sarb
sub
lahf
addr16
jbe
xor
or
hlt
test
add
imul
loopne
cmp
jl
insb
in
mov
cmp
rep
adc
dec
fwait
sbb
scas
fidivl
jno
ret
shll
adc
push
mov
js
or
xchg
jne
jg
mov
mov
xor
pop
cmp
mov
cmc
mov
sub
mov
pop
xor
inc
aaa
cmp
stos
ds
pop
and
sarb
cmp
mov
enter
inc
mov
outsl
xlat
mov
sbb
and
sub
ds
push
jae
sbb
pop
add
mov
pop
jbe
imul
stos
iret
sti
in
call
or
int3
xor
repz
mov
mull
xor
jg
mov
outsl
push
jmp
mov
into
cli
xchg
in
orl
or
repnz
inc
jg
adc
cmp
test
insb
ret
lahf
xchg
push
test
dec
xorb
ret
cld
push
jno
pop
cs
cmp
bound
push
mov
cmc
mov
and
dec
adc
sub
xchg
stos
or
lret
divl
push
dec
xchg
pop
out
or
sbb
out
sbb
je
sbb
stos
push
loop
or
mul
cld
hlt
and
out
xor
or
aaa
xor
enter
xor
jbe
jge
cmp
popf
testl
inc
jo
jno
cwtl
dec
add
or
nop
sbb
mov
cs
testl
pop
addr16
jmp
dec
push
out
dec
jns
loope
mov
pop
shlb
std
sub
jp
bound
imul
cmpsb
repz
orb
dec
movl
lcall
adc
jg
push
fiaddl
xor
es
imul
repz
push
mov
rorb
out
sahf
into
sbb
fdivl
dec
sub
call
xor
dec
xor
mov
test
push
mov
adc
lcall
cltd
mov
push
jmp
das
cmpsb
dec
adc
dec
xor
je
lret
imul
mov
iret
testl
xlat
aam
inc
int3
out
cmp
movsb
pop
icebp
test
add
cmp
xor
push
add
aas
subb
pop
std
add
cmpsb
cmp
mov
inc
daa
jae
outsb
and
es
cmp
mov
add
or
add
inc
repz
ljmp
scas
lods
jmp
cmc
jnp
clc
call
arpl
cltd
mov
lret
and
out
adc
fsub
xor
xchg
and
dec
push
xor
pop
pusha
rcr
mov
pop
fwait
inc
sub
xchg
daa
aas
pushf
test
nopl
sbb
fwait
sbb
icebp
andl
out
lds
iret
pop
shlb
ja
add
imul
mov
adc
jmp
aad
or
pop
xchg
mov
scas
shll
inc
iret
aam
mov
mov
mov
lods
mov
mov
dec
xchg
xor
sub
push
mov
stc
or
filds
dec
inc
dec
push
out
pop
cltd
out
lds
push
mov
add
scas
and
adc
fstpt
xchg
mov
mov
pop
or
or
push
nop
pop
cmp
andb
sbb
add
dec
mov
sbb
imul
imul
mov
xchg
jl
cwtl
jg
or
pop
xchg
ficoml
pop
dec
ja
xor
mov
pushf
cmp
arpl
in
in
rcrl
or
pop
sbb
adc
jbe
insl
int
jg
into
pop
scas
jmp
fisubl
data16
stos
out
fwait
imul
jp
lret
push
popf
enter
xor
adc
jmp
std
pop
jb
mov
mov
xchg
jecxz
dec
sub
cmp
lahf
sti
dec
sbb
insb
sti
push
sub
or
push
fwait
cmp
pop
jp
fildll
mov
sub
jns
int3
jecxz
iret
ret
inc
xlat
sub
cmp
mov
push
test
loope
push
cltd
xchg
xchg
pop
sti
insb
adc
xchg
enter
push
mov
es
mov
aam
xchg
xchg
js
popa
jp
jp
dec
lcall
in
adc
in
add
popw
jl
mov
mov
movsl
mov
insl
dec
inc
jnp
in
in
in
mov
cmpsl
shlb
cltd
fs
test
adc
adc
je
jno
xor
icebp
ret
and
mov
decb
xchg
jbe
sbb
sbb
fwait
jmp
and
pop
pop
push
add
mov
mov
xor
hlt
into
inc
int3
inc
pusha
pop
out
jb
sub
cltd
adc
cmc
ljmp
xor
push
sub
imul
lcall
out
pop
sub
dec
inc
jecxz
fisubs
push
cld
xor
pop
dec
daa
out
iret
and
pop
and
mov
jl
test
mov
mov
xor
cli
cltd
and
fcomps
add
mov
xchg
mov
inc
mov
mov
psubsw
sub
adcb
mov
and
fildll
jle
mov
or
out
xchg
sbb
xor
jmp
pusha
inc
mov
jno
xor
cmc
mov
out
loope
call
inc
adc
xchg
data16
xchg
mov
movsb
fidivrs
xor
add
dec
clc
loope
sbb
imul
pop
inc
js
int
push
push
hlt
mov
inc
repz
movsb
lods
sbb
sbb
add
sbb
xchg
or
rorb
rorb
push
loopne
lods
xor
sbb
inc
in
push
pusha
xchg
pop
fs
adc
push
sbb
xor
mov
pop
push
mov
dec
cld
enter
adc
inc
fcmovne
imul
xor
inc
jp
cmpsb
xchg
fwait
mov
xchg
sbb
push
mov
jo
push
pop
sbb
and
xchg
add
adc
cmp
jo
lahf
jg
jle
shl
pop
adc
ljmp
scas
mov
filds
sbb
inc
jmp
rol
shr
push
test
push
and
jbe
lahf
fs
in
imul
lods
movb
xor
push
cs
not
fdivl
add
inc
mov
sbb
test
or
idivb
mov
ja
jmp
add
xchg
je
dec
imul
mov
push
add
loope
out
ja
mov
stc
fistpl
adc
rorb
icebp
cmp
pop
xchg
jg
pusha
ljmp
xchg
adc
daa
out
js
in
icebp
scas
push
jmp
ja
xor
popf
imul
push
push
xor
aas
loopne
mov
lret
in
cmp
orb
cmp
scas
xor
jns
leave
pop
cmp
cmp
hlt
adc
in
test
cltd
icebp
fs
lahf
jmp
cmp
mov
xor
or
mov
mov
out
repz
xchg
mov
in
das
pop
inc
and
mov
inc
push
loope
jmp
xor
jmp
mov
imull
pop
lds
xor
or
fimull
cmc
roll
inc
adc
add
mov
loopne
mov
inc
dec
out
cmp
mov
pop
cmc
mov
insl
std
jne
mov
mov
cmpb
pushf
cmp
sarl
ja
repz
inc
dec
jo
mov
movsl
mov
sbb
inc
clc
mov
in
fimull
sbb
dec
ljmp
mov
icebp
loope
pop
sub
fisttpll
fwait
inc
pushf
and
jns
shl
or
repz
outsl
mov
push
push
pusha
cmc
test
sti
sahf
push
inc
in
mov
pop
mov
adc
add
inc
shll
js
fildll
and
out
lods
inc
lret
mov
lret
add
mov
mov
mov
push
dec
xchg
dec
inc
dec
fisttpll
les
dec
fdivrs
cmp
pop
xchg
mov
and
cmc
mov
inc
and
add
sub
dec
pop
pushf
add
movsl
in
pop
fisubrs
fdivrs
in
aad
jl
dec
rol
cmc
jl
dec
scas
sti
jae
jmp
fcompl
mov
mov
sbb
cmp
push
push
popa
sub
dec
call
cmpsb
aas
pop
cltd
scas
inc
lretw
mov
mov
fbstp
mov
out
cmp
mov
cmp
mov
push
loope
add
inc
test
ss
jb
cmpsb
push
push
mov
inc
jg
and
xorl
push
fisttps
mov
nop
sbb
iret
jg
inc
out
outsb
jmp
leave
xor
pop
push
push
push
adc
jl
jg
orb
mov
out
into
test
outsb
xor
testb
hlt
orb
repz
sbb
xlat
sub
int3
insb
mov
cmp
mov
test
clc
scas
nop
arpl
cld
fs
sbb
js
mov
loopne
aas
dec
jecxz
mov
ss
outsb
call
dec
sbb
hlt
or
scas
mov
and
jmp
arpl
add
enter
xor
add
pop
mov
stos
pusha
pop
inc
js
cmp
push
test
jae
test
inc
dec
xchg
xor
test
sbb
pop
call
jmp
push
push
adc
xor
and
adc
mov
mov
xchg
cmp
aam
arpl
test
hlt
fistpl
pop
ja
daa
cs
xor
sub
inc
dec
sbb
mov
repnz
or
dec
sbb
inc
cmp
mov
and
xchg
subl
ret
inc
xorl
ficomps
xchg
or
jnp
bswap
and
loopne
aad
pop
dec
add
pop
push
or
or
dec
inc
ljmp
into
es
out
dec
sbb
lcall
jne
jge
outsb
test
daa
push
pop
ja
jo
fmuls
outsb
mov
sbb
adc
jecxz
dec
cwtl
push
pop
sub
inc
push
in
out
pusha
pop
jo
pop
mov
cmp
out
ds
ret
jne
aad
scas
bswap
lcall
xor
into
pop
sbb
daa
imul
mov
xlat
mov
fisttps
inc
les
js
aam
fmull
out
repz
mov
mov
fdivs
push
sbb
and
dec
loopne
mov
sub
int
in
xchg
aad
inc
xor
lea
hlt
push
push
sub
int3
or
adc
inc
mov
mov
or
jecxz
cld
xchg
les
js
jle
in
push
inc
xor
inc
mov
dec
rorb
dec
or
sub
jl
jno
ret
pushf
je
ja
mov
sbb
jnp
push
ljmp
xchg
jae
loop
cmp
mov
enter
jbe
sbb
out
insb
mov
rcr
jmp
les
sbb
inc
insb
add
jp
sbb
je
rorl
mov
lds
mov
cmp
mov
jns
das
je,pn
jmp
dec
sti
cmpsl
jb
imul
outsb
pushf
cmp
or
lods
aam
xchg
ficoml
dec
pop
add
movsb
push
and
pop
into
adc
lret
jl
cli
scas
xor
push
fcmovu
jnp
push
sub
sub
adc
cmp
and
xchg
push
rcll
test
in
add
cld
sub
or
mov
test
mov
or
dec
or
mov
aaa
or
test
add
push
cmp
xchg
movsb
cmp
popf
dec
add
idiv
call
sub
push
fstl
dec
outsb
xchg
dec
mov
xchg
scas
or
outsb
int3
mov
sub
xchg
aaa
xchg
mov
add
call
cmp
imul
xchg
into
sub
and
pushf
dec
repz
and
hlt
pop
inc
cmp
add
jmp
inc
pushf
sti
jbe
jl
mov
xchg
push
addb
fwait
sub
jecxz
into
push
add
enter
pusha
push
add
pop
clc
cmc
test
mov
and
or
jbe
pop
pop
cs
sub
mov
jno
fstl
sbb
pusha
pusha
and
sub
enter
stc
ja
mov
dec
outsl
mov
jne
jl
mov
jecxz
outsb
int3
cmpb
xchg
aam
or
mov
js
sarb
pop
repz
into
outsl
push
stc
ss
fnstcw
cs
lahf
jge
insb
fnsave
rcl
daa
add
cmp
scas
dec
cmp
outsb
lock
arpl
xchg
jg
jle
lods
push
mov
mov
ret
imul
ret
mov
mov
adc
mov
pop
pop
inc
or
pop
paddsb
insb
and
sub
push
push
lahf
dec
sar
ss
dec
scas
mov
mov
aam
scas
sub
push
int
jbe
incb
lret
in
pop
or
add
sbb
in
aas
adc
ret
mov
fwait
arpl
xchg
pop
push
cmc
outsl
dec
shll
mov
adc
mov
mov
push
cs
dec
dec
and
pop
in
inc
push
loope
xor
movsb
cmp
push
int
xchg
ja
add
scas
movsb
jg
cmpsb
jb
roll
and
dec
mov
xor
sbb
test
adc
aam
cmp
inc
ja
addr16
add
les
orb
ja
fcomps
and
xchg
cmpsb
add
cmpb
adc
xor
and
pop
dec
or
xchg
cmp
and
inc
nop
cmp
fcomps
or
jo
out
add
sbb
add
xor
and
out
and
mov
popf
fcomip
loop
jae
jecxz
adc
mov
cmpsl
mov
xchg
ljmp
xlat
mov
xor
pusha
add
dec
bound
inc
sub
xchg
lahf
mov
push
in
inc
or
dec
stos
arpl
imul
sbb
into
add
cltd
xchg
pop
lret
mov
jge
frstor
push
xchg
jmp
fcompl
cli
cmc
dec
sbb
data16
jbe
adc
test
cmp
jae
adc
jmp
popa
dec
mov
shl
xlat
push
ja
fdiv
xor
mov
mov
jne
pop
pop
and
iret
push
imul
das
mov
js
push
stos
cmp
mov
in
mov
pusha
movsl
into
mov
jbe
stos
subl
sbb
push
pop
and
cltd
ficoml
mov
xor
xor
mov
xorb
xchg
pop
or
shll
in
sub
sub
jmp
pop
call
push
lock
mov
pop
jo
cmp
mov
and
jae
sbb
push
xchg
lret
std
inc
jg
mov
xor
idivb
in
out
pop
jle
mov
sbb
push
movsb
dec
mov
cltd
in
inc
out
pop
inc
addr16
or
jb
fwait
pop
dec
pop
cs
cmp
jp
into
mov
fistpll
sbb
or
lcall
or
xlat
cmp
mov
jae
fwait
push
cmc
push
jmp
xchg
ss
or
push
mov
jae
cmpsl
call
repnz
jne
shl
and
jle
pop
dec
ds
mov
adc
jne
xor
iret
test
xor
pop
rorl
fsubr
xor
cltd
pop
xor
sub
iret
shl
roll
jns
pop
or
popa
mov
xor
push
jg
dec
imul
scas
mov
jl
out
sub
aad
sub
into
pop
xchg
pop
fimuls
add
xchg
cld
rolb
jmp
mov
int3
jne
push
mov
mov
fcmove
ja
pushf
lahf
mov
add
mov
sub
shlb
out
xchg
lods
xor
sbb
into
or
mov
aam
in
sub
fs
sub
cmc
cwtl
bound
and
adcb
pop
dec
mull
test
mov
jae
sti
mov
mov
cli
mov
orb
dec
or
jnp
cmp
mov
je
push
sbb
loope
popf
xchg
insb
fisttpl
mov
jns
pop
push
sbb
ficoml
push
push
cmc
push
bswap
mov
aaa
pusha
popf
pop
adc
cltd
iret
nop
inc
jg
push
sub
mov
xchg
lcall
inc
xchg
jbe
imul
push
ret
sbb
test
mov
inc
int3
icebp
sti
fs
stos
sub
subb
test
out
sbb
stos
sbb
cmpsl
push
mov
mov
stos
cmpsb
xchg
sbb
mov
mov
push
scas
push
enter
mov
jno
icebp
and
cltd
hlt
and
lods
loopne
lock
loope
js
ja
mov
xchg
pop
jnp
mov
or
je
adc
push
test
mov
popf
cmp
pop
mov
xchg
dec
add
sbbb
repz
jle
jbe
je
int
inc
dec
cmp
aam
mov
fsubl
adc
xchg
cmp
ret
nop
sbb
outsb
adc
lock
dec
cmp
or
inc
adc
cmpsb
outsl
mov
cmp
jnp
or
sub
into
jmp
lret
push
lods
fs
test
adc
into
cmp
in
iret
adc
int
pop
mov
xchg
fsubrl
pop
mov
lock
hlt
out
pop
mov
jecxz
mov
push
gs
jno
and
add
icebp
jecxz
dec
jecxz
pop
decb
dec
fwait
mov
or
xchg
mov
jge
push
dec
or
iret
or
cmp
gs
mov
add
jbe
pop
sbb
rorb
push
lea
xchg
sub
mov
sbb
mov
sahf
push
ja
push
sbbb
add
inc
add
push
cmp
loope
inc
jno
fwait
sub
xchg
or
mov
sub
mov
shrb
or
ja
pop
add
in
les
pusha
aas
jae
jmp
stc
sub
pop
jno
push
mov
mov
popf
mov
push
test
cmp
mov
lods
pusha
push
mov
mov
inc
cld
sarb
inc
cmpsb
outsl
jns
icebp
mov
or
jl
or
jg
xor
jns
sbb
mov
and
mov
ja
out
lret
jne
jle
cmp
testl
or
xor
pop
icebp
decl
ljmp
xor
or
and
and
ficompl
xor
mov
dec
outsl
xchg
jnp
sub
cld
inc
push
fsubrs
test
pop
pop
fsubrl
dec
and
je
in
jo
cmc
pop
adc
mov
sub
sub
xorb
pusha
pusha
jge
xor
cmpsb
xchg
mov
stos
lret
aad
jg
test
cmp
push
add
or
in
clc
push
shll
lcall
xchg
pushf
aaa
popa
mov
fisubrs
vmread
cwtl
cmp
mov
mov
shll
data16
movsl
inc
fimull
stc
inc
mov
sbb
pop
repz
inc
mov
loop
cmpsb
in
outsl
xlat
hlt
add
push
fwait
jmp
sbb
adc
popa
pop
push
sub
dec
adcl
adc
shrb
dec
gs
jl
into
inc
in
mov
jbe
mov
rorb
aas
xchg
jne
dec
test
mov
mov
jne
dec
add
pop
scas
inc
pop
mov
dec
xchg
mov
xchg
test
test
insl
test
mov
ds
mov
or
shlb
into
push
mov
fldt
fwait
mov
or
jmp
mov
jecxz
pop
fidivrl
sub
repz
fwait
stos
mov
push
lods
popf
or
fwait
cmc
jecxz
lret
dec
xchg
cmp
sub
push
mov
mov
dec
cmp
out
cmpsl
movsl
das
adc
loope
lock
xor
xor
negl
sbb
incl
mov
dec
les
sub
fsubl
jnp
jno
repz
je
and
loope
mov
dec
adc
shll
dec
aad
iret
sbb
and
or
inc
dec
jae
xor
adc
aas
mull
jb
js
fildll
dec
ljmp
mov
fldl
inc
aam
adcl
xchg
ds
repnz
lods
mov
cmp
dec
xor
in
jae
mov
fbld
insl
ja
std
pop
sahf
dec
hlt
or
jl
sbb
push
mov
mov
push
add
jns,pt
stos
scas
mov
ss
mov
push
cmp
jg
jl
and
movsb
lcall
push
add
mov
dec
ja
ja
and
inc
fcoml
sarb
sbb
pop
sbb
test
divb
dec
pop
fs
cwtl
and
test
shlb
cs
hlt
cmp
andb
std
adc
cmp
jmp
sub
adc
fwait
push
mov
loope
lret
xchg
mov
push
repz
mov
out
and
sbbb
inc
in
mov
fwait
push
mov
inc
data16
repnz
adc
loope
jl
les
scas
pushf
cmp
les
mov
hlt
push
hlt
fwait
sub
addr16
cmp
adc
jnp
sti
xlat
in
loop
jno
jecxz
xchg
cmp
ds
pop
std
lcall
sbb
and
cmp
xlat
sti
stos
sub
out
mov
into
add
pop
fildll
jle
popf
and
jmp
xor
push
xchg
cmp
adc
jl
in
push
mov
imul
popa
dec
inc
jmp
mov
or
int
enter
addr16
shlb
pop
int3
std
jae
mov
jnp
jae
in
clc
dec
add
jg
inc
mov
ja
mov
pop
ret
into
and
les
ss
fs
stc
repz
jae
dec
mov
pop
or
sti
dec
or
xchg
adc
lret
jmp
pop
and
push
inc
lds
sbb
into
cmp
ds
fidivl
fs
fcmovu
or
lea
scas
movsl
add
shrl
or
out
stc
inc
icebp
mov
arpl
sbb
aam
push
inc
sub
imulb
push
in
mov
fcoml
jo
pop
jno
mov
stos
decb
stos
ljmp
clc
pop
insl
mov
or
sbb
mov
or
jae
call
xchg
push
push
in
mov
lds
mov
inc
xchg
scas
xchg
fldcw
xchg
mov
aaa
pusha
xchg
out
imul
loopne
shrb
fs
stos
repnz
rcl
pop
inc
bound
xchg
into
test
les
or
inc
mov
jbe
rol
ja
out
roll
pop
inc
arpl
push
cmc
test
push
or
rclb
pop
sub
inc
arpl
daa
mov
in
pop
pop
jg
lods
xor
xor
js
lods
jl
insl
dec
aas
ss
mov
ja
cmpsb
ss
sarl
repz
jg
out
pop
inc
jae
hlt
mov
icebp
lea
dec
inc
push
ja
mov
inc
push
idivl
cmp
or
pop
pop
cmp
xor
xor
test
xor
iret
adc
mov
cmp
mov
jbe
insl
sahf
mov
dec
call
jb
insb
adc
push
movsb
aaa
jno
inc
dec
fistpl
aad
lods
and
pand
or
xchg
sbb
test
cmp
pushf
cmp
into
hlt
mov
std
outsb
int3
and
inc
insl
adc
ljmp
pop
mov
jl
fs
loopne
xor
xchg
sbb
sbb
inc
inc
mov
mov
loopne
adc
xorl
push
pop
jo
jle
sub
jl
pop
imul
inc
sub
insb
scas
rcr
sub
fld
xchg
shlb
push
sbb
sbb
je
into
es
or
dec
pop
mov
add
pushf
sbb
lcall
pop
lret
iret
stos
pop
into
mov
int3
inc
pop
outsl
pop
mov
dec
rcrl
out
outsb
or
enter
dec
lret
cmp
xchg
add
or
push
pusha
ja
add
enter
es
inc
jmp
sub
js
mov
sbb
and
push
lahf
cmp
cmp
imulb
movsl
rolb
sbb
dec
cmc
dec
int3
sti
inc
xor
andl
lds
sub
xlat
out
and
loope
nop
jbe
xor
lods
mov
inc
nop
jecxz
insb
dec
jae
arpl
nop
pop
scas
ja
stos
or
sti
xchg
sbb
cmc
push
sbbb
aad
jp
push
push
cmp
adc
cltd
mov
popf
loope
movsl
ljmp
inc
addr16
cwtl
dec
xchg
pop
loope
es
mov
into
jmp
mov
inc
cld
pop
loopne
repz
and
cmpsb
iret
mov
xchg
cld
mov
fbstp
add
fisubrl
cmp
popf
enter
sti
pop
outsl
aas
pop
scas
in
arpl
mov
add
in
fistl
mov
mov
std
int3
dec
xchg
fwait
adc
inc
mov
cmc
inc
push
sbb
adc
int
jmp
out
pop
jb
xor
jb
and
xor
jg
icebp
test
and
jl
pop
mov
lea
inc
outsb
dec
mov
and
fmul
jbe
xchg
iret
leave
je
mov
push
or
mov
mov
sti
add
lods
movsl
call
and
dec
int3
int3
adc
sarl
leave
andb
adc
xchg
dec
add
out
imul
rorl
jne
add
bound
mov
outsl
ja
cmp
icebp
std
lahf
pop
aam
xchg
ja
ja
mov
jp
stos
in
jle
fwait
ror
xor
sti
sbb
add
push
lcall
pop
dec
or
jl
std
clc
cmp
mov
push
out
jmp
jo
and
sbb
inc
stos
inc
lods
mov
push
mov
mov
mov
push
notl
xchg
cltd
test
fisubl
repnz
mov
xor
daa
stos
xchg
idivb
movsl
jmp
adc
pop
repz
lea
arpl
stc
adc
sub
cmpb
outsb
movsl
fnsave
sbbl
jp
lods
mov
inc
dec
ret
outsl
mov
or
xor
inc
push
cmpsb
ret
add
int3
jbe
dec
dec
mov
jp
nop
sbb
leave
add
xor
jmp
cmp
roll
pop
call
jmp
add
subb
add
in
aas
jbe
cltd
adc
jl
fidivs
mov
pop
jl
sub
mov
sbb
les
cli
jecxz
or
dec
fs
mov
mov
lcall
cs
insl
or
sti
sbbl
push
sti
sbb
fnsave
decl
mov
add
sbbl
inc
mov
faddl
cmp
subb
pop
call
dec
jge
or
mov
sbb
daa
rorb
jno
stos
xor
pop
push
or
sbb
std
sbb
int3
mov
lahf
ja
in
loopne
in
adc
je
dec
into
jno
out
xchg
sbb
or
pop
cmp
sub
xchg
pop
pop
dec
dec
adc
movl
idiv
push
mov
mov
jmp
inc
fdivrs
mov
jne
les
sbb
or
adc
in
push
cmp
jecxz
fisttps
sti
mov
push
lods
cmp
lret
cmp
adc
sub
pop
push
repnz
pop
sub
ljmp
ljmp
in
movsl
push
jb
ret
jo
stc
or
les
sub
shl
data16
adc
fcomps
sti
push
stc
add
or
test
or
adc
adcb
jbe
inc
shll
jnp
sti
lret
daa
dec
or
les
js
sbb
push
push
mov
pop
dec
dec
int
and
push
mov
fdecstp
push
xor
mov
mov
dec
fisttpl
or
pop
lea
xchg
push
and
sub
dec
daa
test
int
arpl
sarb
dec
xor
stc
aas
pop
sbb
inc
mov
mov
jl
jp
adc
mov
xchg
ret
sbb
mov
dec
sbb
stos
and
cmove
push
mov
decb
lods
pushf
mov
sbb
sub
in
dec
add
pop
mov
loopne
adc
xchg
adc
mov
out
adc
es
mov
imul
push
mov
mov
fistpl
xor
mov
in
jecxz
rorl
fnstsw
and
insl
inc
adc
insb
popa
std
arpl
scas
pop
int3
fisubs
leave
in
push
xor
sti
xor
lret
faddp
ffreep
xchg
jns
int
jmp
repnz
jmp
das
push
lock
arpl
cltd
sbbl
filds
sub
jg
mov
jno
inc
movsb
jo
es
jl
fidivrl
jnp
pusha
xorl
hlt
jecxz
aam
mov
inc
pushf
rcll
push
arpl
push
mov
loopne
xchg
out
xchg
jmp
fidivrl
or
lcall
xchg
lock
cltd
imul
and
loopne
mov
sti
outsb
sbb
sbb
outsl
dec
pop
inc
jb
jnp
out
jge
cmc
test
stos
pop
jg
mov
adc
cmpsl
repnz
mov
aas
push
inc
jge
inc
shrb
inc
aad
jno
mov
popf
inc
mov
mov
mov
mov
pop
sti
mov
or
ret
aas
mov
int3
jbe
movsl
js
pop
int3
sub
add
mov
pop
xor
cmc
mov
and
xor
xchg
push
sti
fimull
cwtl
push
insb
jno
adc
dec
fiadds
pop
xor
or
mov
popa
mov
push
data16
jmp
inc
ret
stc
jg
rcrl
mov
inc
push
adc
dec
shlb
pop
pop
cmp
fcmovnb
cmpsl
sbb
leave
scas
mov
push
aaa
jo
nop
in
fs
and
pop
push
in
sub
cwtl
stc
daa
mov
cmp
dec
and
xor
jg
inc
test
lock
and
lea
dec
int
scas
xchg
popf
mov
shrb
cltd
jmp
ja
loop
sbb
pop
mov
xor
adc
push
jg
test
aam
cwtl
jl
sub
cmp
jl
pusha
cmp
orl
pop
iret
iret
pop
negl
cmpsl
ja
jo
incb
xor
subl
adc
test
sbbb
orb
idivb
dec
and
call
gs
les
int
out
xchg
xchg
aad
adc
aam
aas
iret
sbb
xor
mov
jge
pusha
sub
jnp
loopne,pt
mov
xor
das
jnp
sti
out
jmp
dec
push
idivl
scas
xor
xor
dec
mov
cmpsb
mov
insb
add
movsb
mov
or
outsb
add
cmp
xchg
push
dec
nop
pop
inc
jle
dec
bound
sbb
jle
pop
pop
cs
jno
or
fcom
mov
rorb
jo
xor
inc
push
mov
mov
cltd
mov
push
add
pusha
pop
xor
mov
int
cld
and
cmpb
movsl
push
insb
loopne
jl
sbb
inc
arpl
enter
dec
loope
mov
out
cmp
dec
mov
ja
lret
mov
or
jl
add
mov
fwait
mov
add
add
fisttpl
sti
nop
xchg
pop
push
lret
fimuls
fwait
in
add
add
or
inc
fidivrl
int
lret
outsl
push
call
mov
fisttpl
fldt
hlt
call
mov
mov
cltd
adc
jecxz
jne
jno
sub
fsubrs
in
incl
loopne
cmpsb
mov
sbb
icebp
jl
repz
sbbl
jge
enter
les
mov
mov
movsl
mov
cmc
dec
aas
mov
add
add
dec
sti
pushf
mov
xorb
or
pop
or
mov
mov
clc
lret
jmp
push
scas
stos
dec
lds
insb
adc
shlb
shlb
je
mov
es
jae
mov
out
and
hlt
iret
pop
lea
mov
scas
scas
mov
cmpsb
cltd
and
iret
movb
aas
daa
dec
nop
fwait
lcall
jo
mov
repnz
fidivrl
xor
pop
and
mov
jl
mov
cmp
dec
adc
daa
ja
arpl
push
pop
enter
bound
jmp
lahf
sub
jp
mov
mov
cmp
mov
adcb
repz
arpl
jno
xor
mov
xchg
popa
fsubl
cmp
mov
sbb
icebp
add
cmp
fs
jae
add
scas
out
pop
fildl
mulb
sub
add
sbb
inc
xchg
scas
mov
aad
pop
lret
stc
je
fwait
or
and
stos
int
int3
fs
lahf
insl
fwait
jns
mov
dec
pop
inc
fistpl
fld
mov
adc
push
incl
push
dec
lcall
cltd
push
enter
or
jne
aad
or
je
fcomi
icebp
pushw
adc
and
mov
push
fstpt
stos
aam
stc
push
add
cs
inc
sti
lcall
lcall
test
filds
out
popf
mull
or
push
jae
jl
push
xchg
mov
sbbl
outsl
test
outsb
mov
cltd
fisttps
mov
xor
nop
jecxz
jnp
sbb
jg
and
xchg
or
or
out
pop
addr16
xor
jo
ja
mov
xor
or
jne
xor
shll
pop
sbb
rcrb
push
jle
dec
shrl
leave
push
in
mov
dec
jbe
push
push
out
lds
adc
lcall
cmp
scas
xchg
lcall
rcrl
nop
lock
ds
or
add
xor
push
cmp
std
or
out
sbb
pop
cltd
mov
iret
cmpb
xlat
pop
and
lods
repz
ljmp
pop
rorl
add
sbb
pop
adc
nop
int3
cmp
push
cltd
push
je
cmpsb
out
mov
sbb
mov
inc
sub
dec
push
fstl
cltd
dec
dec
es
in
mov
loopne
test
push
out
movsb
dec
xchg
cmpb
jmp
jno
cmp
xor
inc
test
mov
bound
xor
dec
outsb
or
jno
sbb
movsb
fistl
pop
cmp
mov
xor
pop
shlb
pop
xchg
mov
lods
mov
jg
out
imul
jge
push
adc
dec
mov
movsb
jg
sbb
add
lcall
sahf
std
test
sub
jg
jae
add
loopne
sbb
scas
jo
mov
ja
cmpsl
cs
jno
jp
out
pop
dec
stc
inc
sub
push
pusha
fidivrl
shrl
mov
mov
xchg
xchg
ljmp
add
pop
inc
dec
lahf
xchg
hlt
icebp
jns
rcr
inc
xchg
mov
cmpsb
jmp
pop
movl
cmp
dec
in
mov
cmp
hlt
push
add
lock
rcrl
hlt
inc
xor
mulb
test
dec
mov
pusha
negb
test
add
aad
loope
cmp
gs
rcll
push
xchg
dec
sub
mov
fs
es
mov
mov
ss
and
sub
and
sub
jne
pop
cld
call
jo
rorb
and
mov
mov
lcall
cmpsl
sub
push
add
fnstenv
pusha
push
pop
sub
ja
jl
es
push
mov
jno
leave
jecxz
mov
arpl
mov
inc
sub
pusha
out
mov
stos
or
in
out
leave
idivb
push
inc
in
xchg
sbb
es
ret
mov
aas
add
ljmp
add
lret
sti
cmpsb
mov
jmp
lods
leave
xchg
clc
loope
or
subb
fsubr
ljmp
cmp
fwait
xchg
iret
pusha
push
xchg
loopne
mov
test
lds
inc
push
ljmp
push
mov
test
mov
in
jnp
cltd
xchg
mov
lods
test
jnp
out
add
sbb
aaa
addr16
outsl
ljmp
cmc
ret
mov
and
push
sub
sbb
mov
aam
xchg
add
cmp
adc
cmc
movsb
test
or
movsl
andb
push
icebp
mov
lods
mov
test
push
fwait
into
popf
pop
call
dec
mov
cmp
sub
loope
mov
xor
sbb
std
loope
mov
mov
fdivrl
std
or
xchg
lcall
mov
imul
fwait
adc
sbb
out
mov
mov
and
inc
push
testl
mov
xchg
pop
aas
out
int
loop
sti
xor
mov
iret
xchg
subb
std
mov
addr16
or
sub
outsl
movsl
pop
pop
jl
testb
pushf
fstp
xchg
adc
jae
addr16
lahf
out
iret
sbb
jae
push
add
cltd
scas
sub
sbb
inc
mov
xchg
mov
dec
mov
pop
jbe
sbb
popf
stos
popl
sub
push
loopne
scas
into
aam
jnp
mov
ret
jg
testl
pop
iret
sbb
insb
inc
adc
sbb
cmp
das
das
pop
mov
ljmp
mov
repnz
lcall
adc
xor
xchg
ret
mov
ljmp
loope
negl
decl
pop
and
jecxz
jno
js
popf
xor
cmp
dec
xor
pop
lock
jp
dec
mov
pop
fsubrs
out
sub
loope
loopne
add
test
call
xchg
sub
test
out
inc
adc
lret
inc
lcall
xchg
stc
fidivl
mov
rclb
adc
pop
push
mov
cmp
test
out
in
enter
test
lcall
in
cld
dec
mov
push
sbb
ret
jp
pushf
inc
xor
jmp
sub
mov
xchg
cmc
xchg
pop
mov
in
xchg
jo
repz
loop
sub
in
jmp
xchg
js
idivb
ljmp
lret
dec
jne
or
nop
into
jecxz
stos
sti
jp
addr16
jmp
xor
push
pop
or
add
je
iret
fnsave
cltd
jg
mov
adc
pusha
pop
mov
inc
dec
add
cmpl
cltd
push
cmp
cmp
jmp
cmp
cmp
es
fcmove
lahf
lret
xlat
shr
dec
add
inc
cmp
jg
adc
jg
push
out
icebp
nop
pop
dec
out
pop
sbb
cmp
lcall
add
mov
ja
loope
xor
or
jmp
lea
cs
in
jo
lcall
pushf
jmp
mov
adc
mov
hlt
fimuls
popf
lds
addl
mov
pop
pop
jo
pop
pop
xchg
bound
jnp
push
mov
into
fmuls
fidivl
stc
or
jl
inc
or
test
aad
fadds
aam
or
jae
pop
sbb
std
sbbb
mov
jbe
inc
ds
jg
add
jnp
sub
xchg
je
faddl
inc
dec
out
push
jo,pn
popa
jnp
pop
sbb
div
push
in
sub
mov
adc
or
repnz
and
fildl
inc
xor
lcall
inc
mov
lret
fs
jg
mov
push
sbbb
loope
stos
mov
cmp
movsb
mov
jle
imul
push
stos
push
mov
push
daa
pop
xchg
inc
cld
sti
mov
js
jge
jns
cmc
dec
lds
jnp
imul
push
lret
icebp
inc
mov
jnp
dec
inc
adc
popf
adc
jo
rolb
idivl
outsb
icebp
daa
mov
dec
mov
push
push
mov
sahf
jle
cmpl
xlat
loopne
mov
loop
out
dec
dec
dec
cli
stos
mov
dec
test
lods
and
insb
xchg
cmpsl
in
sbb
sbb
mov
out
or
in
xor
lods
out
xor
or
mov
int
mov
movsl
mov
push
cmc
fwait
dec
mov
ret
add
jnp
cs
negl
cmpsb
dec
add
iret
std
adc
sub
xor
dec
sarl
sbb
scas
jb
jg
adc
mov
and
sub
repz
out
arpl
in
popa
and
push
int
movsb
cs
arpl
push
enter
orb
inc
mov
imul
pop
daa
mov
inc
in
sbb
hlt
popf
jno
mov
add
xchg
rcrl
mov
jle
jecxz
addl
lcall
fldt
mov
jle
xchg
fstps
ficompl
or
push
fs
push
ret
jmp
int
mov
out
sbb
push
mov
fisubl
or
clc
mov
jl
inc
jbe
lret
add
dec
mov
sub
push
cwtl
jmp
jbe
and
pop
loop
cmp
insb
daa
repz
jl
pop
mov
in
pop
aad
adc
rcr
dec
sub
lcall
sbbl
imul
and
push
fimuls
aas
pop
jnp
sbb
lret
insb
loop
sbb
mov
or
mov
push
test
cs
shrl
fidivl
je,pn
dec
imul
mov
add
xor
stc
sub
stc
mov
repz
add
arpl
scas
mov
jns
add
fwait
jno
add
clc
nop
inc
mov
dec
out
cmc
jno
sub
jp
insb
lea
or
inc
addb
lcall
and
lahf
cmp
xchg
mov
repz
popa
fs
jae
orb
iret
andl
cwtl
pop
cmp
in
hlt
jno
aam
mov
adc
out
lock
sub
lret
cmc
push
push
scas
dec
mov
adc
push
shrl
adc
mov
jl
sbb
mov
mov
mov
adc
and
sub
jle
mov
aas
inc
jnp
jl
pop
jbe
scas
xchg
mov
xchg
in
dec
or
sbb
xchg
insb
movl
std
xlat
cmp
jecxz
cmp
adc
pop
cmp
testb
pop
aam
cltd
cmpsb
lahf
inc
sbbb
mov
sbb
or
outsl
sub
dec
inc
fcoml
mov
call
jp
xchg
ja
mov
fisubrs
mov
ds
jo
or
add
jns
int
arpl
xchg
unpckhps
cmpsl
mov
add
arpl
mov
pop
push
mov
xorl
cmp
mov
sub
sbb
sub
adc
jno
int3
jl
or
pop
jmp
inc
add
mov
pop
sahf
inc
and
sar
movsl
hlt
adc
mov
xchg
mov
xlat
pop
std
mov
enter
dec
insb
cmc
ja
lahf
into
push
jl
cltd
out
clc
sbb
push
aas
sub
mov
mov
and
jne
out
mov
inc
jg
xchg
inc
inc
out
jns
mov
xor
imul
inc
aam
aad
jle
test
pop
mov
xchg
shlb
push
cmpb
pop
fstl
mov
lcall
scas
jnp
cmpsl
xor
adc
mov
dec
add
dec
jmp
push
mov
loope
loopne
cmovle
mov
hlt
sbb
mov
out
fstpt
ret
shl
decb
pop
sbb
or
lahf
pop
jle
fs
iret
jno
lods
lea
test
cmc
inc
imul
mov
jg
xorl
xchg
ffreep
push
nop
shrl
pop
std
sbb
fnsetpm(287
hlt
add
hlt
xor
pop
lods
clc
dec
cmp
adc
jmp
in
cmc
inc
arpl
push
xchg
lcall
xchg
pushf
stc
jp
mov
push
fisubl
lods
inc
aad
pushf
dec
jo
stc
ja
cmp
mov
xchg
jo
insb
sbb
gs
fmulp
cmp
add
cmp
inc
pop
scas
lods
jns
or
pop
xchg
repnz
lss
imul
jnp
dec
xlat
sub
sub
push
ss
in
iret
sub
adc
notb
dec
add
sbb
mov
imul
es
cmpsb
icebp
es
rcrl
lock
imul
jnp
mov
call
loop
lret
add
pop
lret
inc
lcall
loope
imul
clc
sub
inc
or
or
std
dec
shl
xchg
cmp
and
scas
mov
nop
pop
xor
fidivrs
lahf
jbe
enter
xor
mov
mov
mov
mov
sub
outsl
dec
loope
fwait
mov
inc
ss
fisttpll
xchg
sub
push
ret
in
aad
xor
push
or
fnstenv
cmp
jnp
inc
ja
fstpt
mov
jnp
rcr
mov
mov
xchg
fcomp
mov
jle
sub
fs
jb
xor
fisubrl
sbb
mov
in
gs
sti
adc
sub
das
push
dec
inc
std
rcll
cmpsb
fwait
jl
cmp
xchg
pop
sub
in
jbe
mov
adc
mov
xor
add
mov
mov
repz
fcmovb
rol
hlt
or
ds
jg
int
push
xchg
pop
mov
jbe
shll
xor
shll
mov
mov
push
bound
sub
gs
pushf
push
dec
sub
mov
je
jg
xchg
clc
stc
lahf
and
in
mov
mov
pop
cmp
out
dec
jecxz
rcrb
cmc
xchg
out
inc
push
lahf
pop
das
mov
cmp
xchg
mov
adc
inc
lds
nop
ss
mov
pushf
pop
loopne
adc
std
mov
es
lret
push
adc
mov
xor
push
xor
dec
jno
ret
bswap
add
lahf
inc
mov
pop
cltd
adc
testb
sbb
dec
push
data16
ss
nop
aas
and
cmp
ret
mov
mov
sub
in
jnp
nop
xchg
testl
mov
mov
jg
fcoml
fwait
dec
es
aad
jns
pop
jp
ja
pop
mov
mov
push
movsb
push
sub
sbb
jbe
nop
or
cmp
xor
xchg
in
pop
pop
popf
sarb
ret
ljmp
vmovups
roll
xchg
adc
and
pushf
out
repz
mov
add
adc
add
xor
jp
mov
jbe
lcall
mov
sbb
mov
rorb
pop
jg
xchg
push
int3
iret
xorb
xor
mov
jo
mov
lahf
push
sub
shlb
dec
mov
cld
iret
add
test
fs
fadd
inc
in
and
cld
inc
jns
sbb
jmp
adc
loop
pop
pop
cmp
or
dec
dec
fwait
ljmp
lds
xor
outsb
sub
sub
scas
inc
call
cmpsl
test
out
movsb
adc
imul
icebp
roll
cmpsb
insb
test
cmpsl
pusha
inc
ss
scas
add
sti
aad
xchg
jne
testl
fs
out
mov
out
shl
mov
in
jo
cmp
lods
sub
adc
mov
testl
and
mov
rcrb
cmp
ffreep
push
dec
mov
cmp
pusha
mov
mov
sti
shll
sbb
lods
xor
cmpsl
pop
adcb
adc
int
fcoml
scas
je
les
sub
insl
xchg
dec
add
adc
pop
decb
dec
dec
jno
les
sbb
je
clc
push
jno
adc
cmp
add
bound
call
push
sbb
mov
loopne
dec
daa
sbb
in
mov
sub
cmpsl
jecxz
shll
xchg
lods
adc
push
fnclex
and
repz
cmc
and
js
sub
inc
dec
and
insl
popa
cmpsl
clc
mov
mov
daa
inc
insb
aad
jmp
mov
js
mov
cld
les
dec
iret
push
popf
repz
fs
sbb
imul
aaa
mov
or
test
out
cmpsb
add
or
cmpsb
insl
insl
push
das
xor
xchg
roll
sbb
xlat
jnp
loopne
ret
rcrl
fcmove
fsts
cmc
adc
dec
mov
cmpsb
inc
aam
movsb
pop
xlat
ljmp
pop
shl
addr16
mov
mov
pmulhw
out
push
lds
cltd
mov
push
or
lods
aaa
mov
or
movsl
add
in
ret
imul
subb
jno
push
test
stos
mov
int
roll
data16
nop
push
add
fisubrl
pop
cmpsb
ja
cs
sbb
iret
inc
mov
cmp
out
mov
push
jae
in
out
xchg
divb
pop
add
add
pop
xchg
jg
dec
mov
bound
sbb
pop
xchg
add
popa
pop
pushf
mov
bound
pop
jnp
dec
and
dec
xor
ljmp
xor
pop
jnp
jle
pusha
inc
mov
test
imul
rcrl
push
xor
mov
jo
dec
mov
jp
sbb
data16
popf
mov
add
push
popf
xchg
add
loopne
loope
idivb
jmp
xor
add
fsubrs
sub
cmpsl
xor
mov
lock
dec
inc
jp
test
lahf
dec
ljmp
mov
daa
daa
push
fisttps
adc
movsb
imul
ss
pop
imul
cltd
subb
sti
cs
pop
emms
xor
int3
push
mov
jg
iret
pop
mov
mov
adc
addb
std
cmpsl
or
das
cmp
mov
push
mov
sub
inc
and
jnp
push
call
in
dec
inc
xchg
cmc
pop
add
jns
pop
pusha
jb
jno
xchg
fnstcw
test
cmp
subb
push
push
mov
lds
daa
cltd
mov
dec
xlat
or
jle
mov
xchg
mov
stc
dec
arpl
cmc
fcmove
and
imul
in
add
cmp
pop
aas
in
cmp
out
jno
xor
insb
orb
repz
lcall
pop
cwtl
stos
out
rorl
out
push
pop
cmp
add
and
scas
fcmovbe
js
scas
xor
fwait
pop
add
aam
jnp
psubq
clc
nop
les
dec
or
mov
jno
add
daa
fadds
xor
sbb
jo
test
mov
cmpsb
sbbb
cltd
aad
xor
cld
cmp
loopne
inc
rcll
in
xor
arpl
rcrb
mov
das
sub
fs
mov
iret
pop
clc
mov
enter
inc
cmp
in
push
dec
mov
push
test
stos
stc
cmpb
dec
mov
rorl
pushf
sbb
mov
scas
mov
shr
push
mov
in
sub
aad
iret
mov
mov
ficoml
insb
sahf
addb
nop
sbb
sbb
shl
ss
bound
push
mov
into
pop
adc
loope
mov
test
ja
pop
fmull
scas
push
adc
or
sub
mov
cmc
mov
mov
adc
test
pop
iret
loopne
push
popw
scas
lahf
loopne
mov
popf
scas
fisubrl
stos
popf
add
std
gs
mov
mov
data16
outsb
dec
ljmp
sbb
insl
cmc
ret
test
sbb
cmc
test
leave
push
sbb
jno
fcomi
sub
shlb
mov
mov
data16
stc
mov
xchg
pop
std
pop
mov
xchg
out
aad
xor
lods
lods
dec
xor
sahf
ficomps
jg
mov
mov
add
push
rorb
pop
fsubl
ja
int3
jmp
mov
pop
pusha
mov
jmp
mov
das
negl
fdivrp
jp
xchg
andl
shlb
xor
xor
test
sub
les
dec
ljmp
test
cmpsb
cltd
loope
cmp
xchg
scas
jmp
and
inc
push
mov
aad
daa
pushf
neg
sbb
ja
push
mov
in
das
loop
pop
cmpsb
stc
mov
aad
test
pushf
mov
hlt
into
sub
cltd
shld
mov
icebp
jmp
cmp
adcl
push
mov
cmp
add
and
mov
pop
jg
jle
and
fbld
fwait
stos
pop
and
mov
mov
gs
stos
cwtl
fistps
ss
pop
test
lea
pop
mov
pop
xor
iret
or
mov
or
pushf
insb
xor
push
pop
imul
push
fwait
push
in
lcall
dec
leave
lcall
cmc
loopne
je
dec
insb
test
negb
or
jg
fcmovnu
add
int3
roll
push
cmp
adc
cs
mov
pushf
push
jns
mov
les
repz
incl
fwait
sbb
adc
test
cld
sti
xor
dec
pop
inc
lds
ret
scas
xchg
lock
cltd
mov
sti
mov
cmp
mov
fnsave
loop
mov
and
xor
cld
fs
fs
mov
les
mov
imull
dec
fs
pop
xor
sti
mov
cmp
fildll
add
mov
in
or
fsubrl
cmc
mov
decl
xchg
test
dec
lahf
mov
fcompl
pop
mov
ss
inc
sbb
popa
push
xchg
mov
faddp
xor
mov
jg
xchg
jo
xor
pop
popl
daa
or
outsb
shrb
adc
push
inc
cli
mov
subl
cmp
in
push
scas
adc
std
push
dec
push
sbb
pop
adcl
ror
test
pop
mov
sahf
cmpsl
cmpsb
push
test
cmp
movsb
fcompl
xchg
or
idivl
imull
cmp
decl
mov
add
orb
mov
jbe
mov
xor
push
icebp
nop
xchg
jae
fisttpll
flds
int3
fwait
cmp
xchg
fadd
dec
xor
xchg
lahf
sub
push
mov
imul
or
fsub
add
cmpsb
jo
test
pop
outsl
inc
push
jns
hlt
jb
inc
negl
sarl
shrb
hlt
dec
sub
mov
push
iret
inc
dec
xor
push
pop
jmp
mov
test
xor
dec
jecxz
mov
pop
cmpsl
bound
mov
or
fildl
mov
jmp
mov
pop
jecxz
sub
stc
xor
or
je
in
sti
dec
rorl
or
shlb
jmp
ljmp
inc
cmp
popa
sahf
popf
mov
bound
mov
jns
xchg
shll
add
call
xchg
fidivrl
stos
fdivrl
lret
daa
xor
inc
aam
icebp
xchg
adc
clc
bound
mov
stc
lock
lcall
xchg
stos
mov
push
arpl
fistl
dec
xchg
jl
incb
or
lods
fisttpll
sti
or
inc
inc
jl
ja
icebp
dec
imul
jne
cmp
inc
and
fnstsw
imul
sub
shll
into
mov
and
flds
pop
cltd
inc
push
idivl
mov
mov
pushf
repz
jb
movsl
mov
in
movsb
mov
or
jmp
fwait
mov
xchg
mov
jno
xor
std
jmp
lret
and
jg
loope
loopne
push
testl
imul
pop
sub
fwait
inc
xor
pop
pop
gs
xlat
add
pop
jae
jmp
cltd
inc
push
sbb
pop
mov
pop
inc
insb
dec
sarl
push
in
sbb
cltd
cs
jb
stc
movsb
cmp
stos
lea
movsl
mov
test
mov
mov
mov
loopne
push
notl
int
ret
jno
or
rorl
add
int3
int
sub
pop
iret
jmp
cmp
push
fldcw
inc
push
xchg
aam
add
cld
iret
jmp
dec
pop
xor
sbb
jno
cmp
rorl
mov
pop
stc
add
or
mov
addl
or
test
ret
mov
mov
adc
lret
mov
nop
pop
int
lret
mov
fcompl
push
sbb
push
fadds
and
pop
mov
les
push
mov
add
push
insb
sub
nop
jns
mov
scas
push
dec
xor
cltd
mov
shlb
aam
insb
lds
add
cmp
in
jns
fsts
jb
int3
lods
inc
sub
cmpsl
decl
shll
and
lcall
mov
dec
fisttpl
out
mov
jb
fwait
jno
jno
push
dec
insb
sub
ss
jo
cmpsb
sub
jmp
push
test
add
jae
mov
or
stos
aad
adcb
insl
mov
ret
pop
std
loop
mov
push
pusha
mov
or
inc
sub
stc
imul
push
jbe
jl
lahf
mov
push
adc
jno
jl
mov
and
jge
dec
pop
fs
sub
js
in
xchg
fucomi
push
push
into
arpl
jmp
lods
pop
mov
inc
test
push
push
mov
mov
sbb
add
jmp
jno
arpl
dec
sbb
outsb
adc
cmp
mov
xor
mov
pop
sbb
aad
es
inc
and
xchg
aad
push
mov
fwait
mov
insb
pusha
cmc
sub
into
cld
push
mov
ljmp
jg
movsl
sbb
bound
xchg
nop
sarl
push
sbb
pop
push
and
negl
lds
in
lret
ss
in
out
dec
out
sti
xor
jl
es
ds
pop
mov
cmpsl
mov
adc
jno
pop
movsb
and
dec
pop
cmp
mov
sub
xor
and
or
or
fsubrl
bound
test
jp
inc
fimull
mov
out
pop
adc
pop
dec
scas
jge
inc
imul
iret
and
xchg
jmp
jnp
stos
sbb
dec
arpl
dec
insl
es
stc
call
cmp
or
sti
fwait
dec
es
int
insb
loope
imul
jp
sarl
pop
mov
stos
lahf
scas
es
cmp
mov
inc
fadds
js
inc
ret
in
push
insb
mov
minps
or
testl
add
lods
in
je
jl
mov
test
sbb
xchg
ror
inc
jmp
dec
mov
psrlq
push
sbb
shrl
shll
jae
add
and
iret
push
push
stc
movsb
cmp
nop
add
aaa
repnz
aam
dec
xor
push
js
into
and
loope
ja
add
mov
rcll
dec
sub
test
gs
data16
mov
jae
jb
js
mov
cmp
push
loopne
sub
shl
arpl
xor
clc
mov
jmp
fidivrs
stos
adc
fwait
fwait
adc
out
cmp
bound
mov
dec
lds
pusha
test
push
sbbb
cmp
clc
xchg
int
jecxz
jp
nop
incb
enter
inc
sbbb
add
test
add
movsb
sbb
inc
or
jle
dec
push
cmp
mov
jne
push
mov
xor
fsub
push
sbbl
fisttpl
cli
aad
imul
aas
mov
shlb
testb
push
out
call
mov
pop
xchg
lret
xlat
xor
dec
es
pop
dec
bound
mov
in
and
in
jl
imul
and
cmp
shlb
and
pop
ret
test
in
clc
pop
mov
jl
mov
mov
test
jno
add
jmp
adc
pop
dec
mov
or
iret
pushf
dec
cmpsb
add
xchg
pop
out
iret
jge
jbe
clc
lahf
push
xchg
adc
incl
jle
sub
mov
xchg
lock
sub
mov
repz
pop
jecxz
adc
xor
inc
lea
mov
add
adc
dec
and
test
or
fcmovbe
and
jno
push
in
in
dec
clc
mov
scas
or
out
jno
mull
fsubl
pop
pop
xlat
pop
push
push
cmc
xor
and
lret
in
cmp
cltd
jl
mov
ficoml
call
lods
shlb
push
cli
dec
xchg
dec
mov
pop
cmp
mov
pop
aas
cmp
mov
insb
sbb
push
loopne
cmp
jl
xchg
jg
xor
pop
pop
cmpsb
add
pusha
pop
add
outsb
fsubr
mov
gs
cmpsb
test
cld
add
mov
cmpsb
xor
mov
xor
sti
mov
mov
lahf
dec
jbe
out
fs
lahf
fmul
jl
iret
jg
mov
es
jae
leave
ss
adc
push
pop
aaa
mov
mov
ss
lahf
mov
addr16
iret
mov
cli
mov
ljmp
xchg
pop
xor
mov
pop
cmp
xor
jl
dec
pop
fildl
dec
push
pop
mov
cli
mov
jns
lret
mov
aam
sbb
enter
test
pop
inc
push
pop
jmp
iret
lock
shlb
loope
or
mov
mov
das
push
sub
call
les
out
fiadds
mov
insb
dec
fwait
mov
pop
lods
in
imul
sbb
jmp
and
cmc
pop
aam
dec
lret
pop
add
cmc
mov
fadds
in
scas
cmp
or
lds
mov
insb
dec
mov
int
sbb
jle
mov
push
out
pusha
mov
iret
pop
sbb
adc
pusha
inc
mov
xor
xchg
jecxz
and
rorl
out
xchg
or
shrb
inc
sbb
xchg
xor
push
test
sbb
lock
push
neg
stc
nop
or
sbb
pop
adcb
mov
cmp
push
movsb
inc
mov
push
outsb
pop
sub
cmp
sub
jae
fnstenv
je
jnp
jl
jge
add
cwtl
sahf
ja
adc
fs
stos
sarb
dec
and
cmp
xlat
pusha
mov
lcall
out
xchg
hlt
fdivrl
mov
inc
ja
mov
mov
xchg
out
mov
lea
cmpsb
iret
jo
adc
loop
add
fistl
push
cmp
add
xchg
inc
xchg
imul
or
outsl
fwait
sbb
lods
das
cld
mov
shrl
mov
add
push
sarb
mov
mov
jp
pop
mov
push
or
data16
jnp
cmpsl
test
add
mov
call
std
test
gs
pop
adc
rcll
pop
adc
or
pop
fwait
std
mov
mov
cmp
sub
lock
movl
pop
push
mov
jp
loopne
mov
call
loopne
jnp
add
aas
clc
movsl
dec
fsubr
inc
xchg
imul
add
popf
mov
scas
pop
and
lret
push
movsb
xchg
jne
les
or
fstpl
jg
ljmp
out
sbb
mov
cmpb
push
jae
imul
loop
jnp
lcall
sbb
add
dec
push
sub
fadd
mov
bound
add
push
sahf
sub
add
ret
rorb
add
rolb
testl
or
mov
mov
and
out
mov
mov
dec
lcall
push
jae
pushf
mov
lods
pop
and
cmp
jle
adc
xor
cmp
imul
jg
gs
rcrb
imul
lcall
pop
data16
jg
icebp
call
mov
sbb
jle
push
dec
repnz
add
test
xchg
faddl
aam
mov
loope
cmp
jnp
mov
movsb
jb
mov
mov
nop
jecxz
pop
sahf
mov
push
adcl
in
inc
inc
jmp
jb
fcoms
mov
addr16
sub
sub
sub
imul
dec
stc
sbb
push
pop
arpl
fadds
in
lods
or
faddl
sbb
insl
jg
or
imulb
mov
int3
loopne
stos
lock
ja
jmp
jno
or
pop
stos
addb
das
outsl
mov
mov
push
mov
adc
mov
loopne
push
enter
cmp
std
in
cmpsl
sub
xor
fimull
mov
and
jg
testb
out
jmp
sbb
mov
fdivrl
xchg
cmp
jl
mov
mov
pop
dec
dec
mov
push
and
xchg
decb
adc
fimull
lea
jmp
xor
movsb
imul
aas
push
addr16
sbb
in
data16
icebp
mov
and
xor
rcrl
cmc
dec
jb
inc
xchg
or
push
cmp
mov
mov
cmc
sub
or
insl
mov
movsb
stos
lds
mov
cmp
inc
jae
es
and
in
testl
jae
enter
inc
inc
bound
cltd
dec
hlt
mov
push
push
icebp
divb
les
movsb
sub
dec
cmpsb
cmpb
push
sbb
fdivrp
decl
loope
adc
inc
mov
in
loopne
dec
lcall
arpl
pop
push
cmpsb
movsl
shll
push
cmp
jns
ret
les
fwait
sub
jle
lcall
jns
rep
xorb
out
cwtl
adcb
sub
jae
mov
mov
sbb
jns
std
push
outsl
mov
int
fwait
imulb
fs
mov
icebp
push
ret
dec
pop
fiadds
pushf
sbb
ret
lcall
adc
fisubl
cmp
pop
cmc
mov
sbbb
xor
out
push
dec
cltd
lahf
imul
int3
sarl
stos
mov
pop
add
mov
pop
or
add
dec
scas
imul
mov
mov
aam
sbb
xchg
int3
out
lcall
sub
sbb
push
xchg
es
mov
gs
rorl
hlt
into
mov
push
pop
sub
fwait
jnp
in
pushw
and
xor
scas
mov
push
pop
cwtl
jg
dec
and
repnz
popf
sbb
dec
dec
fwait
in
add
xchg
jo
je
aam
adc
sarb
sti
pop
adc
int
xor
mov
jmp
xor
xor
dec
mov
ja
add
lods
dec
cmp
addb
mov
mov
jmp
out
je
pextrw
dec
ja
push
popa
ficomps
jns
mov
in
cmpsl
add
dec
insl
cmpsb
shr
jl
loope
inc
sub
orb
adc
femms
ret
pop
dec
scas
dec
test
out
out
add
jno
push
or
hlt
and
xchg
shll
bound
inc
inc
cltd
enter
loope
or
or
mov
add
inc
fidivrl
addb
mov
int
addr16
or
mov
aas
test
mov
jbe
push
dec
lcall
mov
sub
movsl
mov
into
aad
mov
addr16
dec
and
cmp
add
or
fidivs
add
push
cmp
xor
cmp
gs
mov
bound
inc
stos
in
call
out
loopne
outsl
mov
xlat
lret
iret
fs
and
inc
lock
push
add
scas
pop
into
cs
shll
add
pusha
mov
int
ss
mov
mov
rol
xchg
imul
sbbl
bound
mov
xchg
das
out
sub
ret
adc
fldl
icebp
lahf
push
cs
pusha
jns
stos
shl
test
add
fistpl
inc
pop
lahf
lods
mov
push
loope
aad
add
adc
sahf
mov
rep
pusha
out
fisttpl
mov
iret
sbb
mov
lods
and
andb
inc
sub
mov
fildll
mov
inc
shll
jg
push
pop
xchg
and
rcr
mov
sub
jg
adc
out
movsl
mov
lea
cmp
jnp
imul
cwtl
adc
iret
fs
jge
sbb
pop
xchg
mov
sbb
movsb
sahf
and
stc
cld
pop
cmp
push
ds
xchg
rcr
ja
add
sti
insl
and
mov
dec
pop
mov
mov
repnz
mov
jns
dec
xor
cld
bndstx
or
es
dec
lret
jp
push
pop
lret
mov
mov
addb
dec
pop
xor
out
in
addw
rcll
sbb
rclb
xchg
dec
fcomps
imul
fisubl
call
cmp
inc
mov
add
mov
insb
adc
incl
push
sbbb
mov
cmp
sbb
inc
pop
loop
mov
cmp
sub
and
popf
inc
xchg
mov
mov
jno
push
pop
push
push
mov
cmp
mov
jg
adc
in
push
mov
sub
js
loope
cmc
pop
ja
in
xor
repz
stos
mov
aas
movsl
push
aam
je
add
pop
dec
pop
push
repz
lods
sbb
mov
rorl
sbb
iret
add
pop
or
clc
push
push
jnp
jl
inc
outsb
in
test
mov
mov
and
mov
imul
and
xchg
cmpsb
xlat
dec
daa
mov
js
sub
jle
sti
lret
adc
push
aad
push
cld
es
imul
or
pop
movsl
aam
outsb
pop
adc
jno
roll
mov
jmp
dec
inc
aam
stos
adc
and
icebp
mov
push
mov
iret
mov
xor
push
mov
push
out
adcb
lcall
jg
add
fidivrl
clc
dec
or
inc
fwait
cmp
jmp
lods
lea
ljmp
test
add
dec
ret
push
pop
pop
inc
shlb
mov
mov
pop
mov
jno
mov
mov
iret
sbb
jbe
xor
inc
mov
rclb
repz
icebp
add
or
repnz
mov
jmp
in
hlt
mov
loope
add
xchg
arpl
pop
xor
push
xor
in
addl
and
lcall
add
in
cmc
sbb
dec
jl
and
incl
fistl
cmp
pop
adc
mov
arpl
fdivs
adc
cld
stos
mov
daa
and
push
xor
es
adc
imul
mov
test
jmp
sub
pop
iret
jmp
insb
fcomp
addr16
ret
imul
icebp
jae
jmp
inc
mov
jge
unpcklps
jne
pop
mull
jnp
lahf
lahf
jae
and
cmp
mov
mov
xrelease
ss
fwait
push
or
mov
les
mov
push
sarl
sub
inc
fneni(8087
hlt
addr16
fcomps
stos
lahf
arpl
jne
out
stos
or
mov
mov
inc
cmp
cs
movsb
fldl
sbb
mov
xchg
add
dec
fisttpll
mov
hlt
in
mov
mov
movsb
int3
in
int
push
in
icebp
jae
test
dec
imul
mull
inc
adc
and
sub
or
mov
xor
mov
insl
fcmovne
movq
movsb
push
out
icebp
jbe
repnz
push
push
ss
sti
out
push
xchg
lds
roll
bound
lods
das
push
sahf
jl
fsubrs
add
lea
mov
js
inc
xor
mov
imul
mov
adc
jb
aas
jle
repnz
mov
mov
cltd
pop
les
dec
pushf
mov
dec
ret
fdivl
mov
add
stos
push
pusha
dec
push
push
push
repnz
adc
pop
test
xor
repz
rorb
sub
jae
add
pop
mov
shll
pop
lods
stc
fstl
testl
dec
pop
lds
mov
loope
adc
mov
xor
or
push
fstl
into
sub
adc
or
aam
jl
mov
sub
push
jns
push
and
dec
jae
lock
mov
dec
inc
and
out
cmpsb
into
pop
shl
mov
jecxz
push
pop
mov
mov
fisttpll
sub
jecxz
rorb
push
outsl
adc
mov
jecxz
dec
mov
ja
push
mov
pop
mov
cwtl
pop
scas
pop
repnz
into
or
or
mov
cs
mov
outsl
mov
cmc
das
adc
imul
jno
cmc
jno
push
out
inc
adc
and
push
jne
sbb
cmp
sti
sbb
imul
add
xchg
out
mov
pop
adc
clc
xchg
lahf
sub
inc
fwait
dec
out
pop
ret
dec
or
clc
mov
fwait
mov
mov
test
enter
mov
pop
xchg
lret
mov
or
mov
xchg
sub
cmp
sahf
ja
pop
cmp
loopne
orl
mov
inc
data16
orb
shl
fwait
es
pop
shl
jge
jmp
push
cmpsb
lcall
adc
sbb
pop
cmp
cmp
fisubrl
xchg
xchg
push
dec
insl
test
out
add
pop
dec
mov
movsb
add
cmpsb
ja
dec
dec
aaa
cmp
faddl
mov
push
mov
and
adc
ljmp
lods
imul
and
mov
fwait
out
loope
add
cmp
mov
jbe
iret
roll
mov
rcrb
add
push
mov
inc
mov
jns
jo
subb
and
sbbl
xor
mov
or
mov
fldt
mov
sub
rcr
sbb
and
mov
mov
fstl
xor
pop
adc
xor
xchg
out
icebp
aas
popl
fiaddl
fldl
inc
sbb
sbb
je
loope
push
fistpll
xchg
push
bound
mov
ljmp
jmp
jge
cmp
or
lods
add
push
mov
insb
stc
pusha
cld
movsl
sub
insb
and
xchg
test
das
push
loopne
pop
inc
aaa
mov
pop
xchg
ret
and
mov
fcomi
insb
call
jae
inc
or
fcoml
mov
cwtl
sti
out
loope
sbb
in
inc
dec
pop
push
push
jbe
mov
inc
fistpll
test
loop
cmc
mov
imul
mov
xchg
add
mov
push
test
imulb
lods
aam
push
data16
xor
push
sbb
addr16
sub
pop
sbb
adc
sbb
mov
dec
pop
mov
mov
cmp
xchg
dec
xchg
dec
adc
pop
jb
imul
inc
push
push
decb
cmp
loopne
outsb
cmp
int
mov
cmp
xorb
push
rorl
mov
jno
mov
push
jg
fsubs
push
cmp
push
cmp
lea
lods
jp
dec
push
mov
jno
cmp
les
push
or
loope
imul
cmp
fistl
dec
xor
push
sti
cmpsb
fwait
int
mov
cmp
mov
xchg
push
ja
rcrb
in
jg
rcrb
daa
lcall
mov
fidivl
jnp
movb
mov
pop
ss
hlt
shll
out
mull
or
inc
jl
imul
push
std
sahf
cmp
mov
xor
cmpsb
jo
insl
mov
adc
shrl
xchg
cld
cmp
hlt
xchg
push
push
push
bound
movsb
jno
dec
jmp
sti
jle
adc
clc
aaa
sti
mov
into
std
in
in
mov
iret
inc
loopne
repnz
cmp
mov
inc
int
push
adc
mov
xchg
pop
out
inc
sbb
mov
xor
dec
xor
scas
fmull
jo
and
js
test
pop
repz
mov
jbe
pop
cmp
push
jns
mov
pop
test
fsubrl
ljmp
push
pop
pushf
jmp
out
inc
jmp
push
cmp
out
cmp
adc
cmp
pop
adcb
xor
pop
rolb
int3
sub
ljmp
imulb
fwait
mov
push
int
mov
push
mov
pop
jl
enter
cmp
mov
xor
and
insl
sti
rcrl
mov
mov
mov
nop
jbe
cmp
sbb
inc
xchg
aam
mov
daa
dec
jbe
sbb
aam
fnsave
sub
dec
into
lahf
in
xor
loop
loope
fsubrl
dec
inc
push
jg
and
adc
flds
dec
inc
and
jmp
addr16
mov
jnp
add
cmp
pop
lea
add
test
shll
mov
cld
out
jge
mov
cltd
dec
jo
loop
inc
cs
mov
cmpsb
jns
fimuls
fwait
jl
repnz
add
xchg
stos
mov
into
adc
popf
call
fldt
cmp
mov
fwait
mov
mov
out
loope
cmc
or
dec
mov
push
stos
insb
pop
call
push
jo
mov
stc
cmp
out
stc
pushl
inc
out
fistpll
sub
andl
mov
js
cmpsb
and
jbe
inc
popa
mov
mov
pushf
sbbb
cmc
pop
adc
pop
xor
fimuls
cmp
jg
adc
test
cld
mov
lods
mov
fldt
adc
lds
xor
popl
jecxz
shlb
insb
das
add
mov
mov
daa
cmp
cmp
jno
hlt
push
lods
cmp
cmp
adc
scas
jns
shll
or
cmc
fs
ss
dec
aaa
in
ljmp
mov
std
fdivrl
fsubs
stos
popf
dec
pop
xchg
pop
adc
loope
sti
mov
repz
mov
xor
mov
cmp
test
popa
lcall
cmp
mov
mov
cmp
push
inc
jae
fists
xchg
xor
xchg
pop
je
rcrl
cmp
dec
mov
jg
push
test
or
insb
push
push
add
pushw
dec
pop
cmp
xchg
jno
ljmp
rcrb
loop
xor
adc
sbb
inc
mov
mov
jno
movntq
add
test
add
iret
fcmovb
mov
sub
cmp
push
scas
es
jle
push
pop
lock
mov
lcall
insb
dec
dec
mov
or
xchg
je
xchg
and
dec
lods
xchg
stc
lcall
js
sbbb
sbb
test
and
aaa
jmp
cmp
lea
test
mov
fwait
jmp
rol
hlt
cmp
add
inc
xor
out
loop
dec
repnz
pop
in
popf
data16
mov
aad
mov
gs
test
lods
test
aam
mov
jp
jl
xchg
push
sub
ja
xor
push
push
shlb
pushf
jp
xchg
and
int3
daa
mov
aad
mov
divb
out
pop
aad
mov
push
scas
pop
jg
fisubs
lock
les
dec
xor
push
mov
out
pop
inc
xchg
xchg
push
and
lods
push
push
mov
push
aaa
xor
pop
mov
add
adc
jmp
push
addb
push
mov
push
mov
repz
fxch
mov
cmpsl
mov
dec
xlat
sbb
jp
mov
mov
jl
repnz
mov
test
iret
mov
xchg
in
push
mull
or
sbb
sub
aam
or
adc
test
fiadds
add
frstor
adc
xchg
dec
pusha
scas
fwait
sti
mov
test
insb
mov
cs
inc
fs
cmp
pop
cmp
add
cmp
jmp
xchg
mov
testl
and
shll
sti
subl
sub
add
xor
inc
andb
and
mov
ds
rclb
add
push
pop
jno
sub
cmp
jnp
and
mov
mov
mov
sahf
sub
cmc
rcrl
sub
lret
mov
sub
ss
enter
push
rorb
icebp
or
movsb
cmp
cmp
gs
pop
or
out
sub
cmp
std
push
addr16
jmp
add
push
outsl
std
jmp
adc
daa
jb
rcrl
dec
cmpsl
adc
sub
icebp
addr16
lret
adc
and
aad
inc
or
mov
add
pop
testl
ret
movsb
jle
push
out
add
sbb
cmpsl
sub
js
mov
cmc
xchg
mov
imul
mov
pop
data16
cmp
and
inc
sti
mov
out
pop
repz
int3
adc
jae
inc
je
dec
cmpsb
mov
xchg
ret
mov
dec
mov
fistps
jns
push
iret
and
lods
fisubrl
or
ret
xchg
in
mov
ficoml
mov
mov
adc
sbb
lcall
in
xor
or
sbb
fdivl
in
mov
imul
lods
xchg
push
push
and
push
ror
fdivr
adc
jg
xchg
cmc
bound
shlb
inc
scas
test
mov
test
call
cmpsb
xchg
xchg
stos
std
mov
fwait
shll
stos
push
jecxz
dec
bound
inc
dec
dec
jmp
shlb
ret
cmpsl
in
cmc
cs
inc
ret
fwait
aas
xchg
mov
jno
fdivr
cmp
mov
and
arpl
cmc
xor
ds
and
dec
mov
jnp
pop
sbb
or
divb
popa
inc
mov
push
out
sub
das
out
mov
ja
pop
jg
lret
leave
ret
inc
fldenv
push
insb
or
xchg
push
pop
lret
rcrl
enter
ljmp
int
push
out
repnz
inc
cmp
enter
jns
jg
loope
push
dec
mov
xchg
mov
fdivs
filds
mov
enter
jl
add
arpl
mov
rcrl
or
cmp
into
jg
or
dec
cli
inc
mov
pop
sahf
aad
scas
mov
pusha
sbb
cmpsb
lock
ljmp
dec
sti
stos
mov
aam
or
dec
aad
push
fisttpl
jno
jge
cmp
fisttps
pop
mov
aam
js
pop
pushf
scas
mov
outsl
add
ret
mov
cmp
jle
les
icebp
lcallw
arpl
lods
push
rclb
fnsave
imul
cmp
insb
std
sub
out
fdivs
push
push
jbe
sbb
push
out
into
fstl
cli
ja
js
mov
add
sti
inc
dec
push
mov
jmp
mov
mov
and
stc
mov
fstpt
mov
lret
repz
dec
mov
dec
cmpsb
pop
aaa
and
mov
xchg
fucom
lret
and
sbb
sub
jmp
ljmp
addb
repz
mov
popa
and
dec
in
outsb
arpl
or
loopne
mov
jmp
sti
je
push
lods
mov
stos
pop
nop
mov
cs
cmpsl
cli
ret
call
inc
repnz
xor
setnp
fstpl
mov
mov
dec
int3
sub
shll
adc
or
mov
in
and
int
jmp
pushf
xor
es
mov
psrlw
xor
sbb
push
jae
fldl
loope
cs
mov
orb
fldt
or
pushfw
in
push
cmpsb
cmpsb
jge
jno
incl
jns,pn
and
add
push
xchg
and
cmc
fistl
mov
fnsave
pop
xchg
jl
dec
push
lahf
push
jae
pop
sahf
mov
mov
jle
movsb
jmp
pusha
out
xlat
sbb
scas
xchg
fmuls
sbb
and
jbe
push
add
pop
inc
xchg
stos
mov
pushf
mov
mov
fcoml
sub
cltd
scas
xor
mov
stos
mov
and
and
pop
test
imull
xchg
mov
out
sti
clc
push
popa
in
nop
inc
mov
push
push
mov
test
xor
dec
sbb
test
cmp
adc
aad
out
pushf
and
mov
sub
in
mov
dec
or
hlt
mov
dec
mov
pusha
lea
mov
push
inc
inc
push
in
xchg
nop
xor
orl
pop
das
subb
mov
fstpt
inc
inc
or
scas
movsb
repnz
push
or
bound
mov
or
sbb
inc
mov
and
cmp
mov
xchg
mov
cmc
dec
inc
insb
pop
adc
imul
ficomps
in
cmp
fistpl
inc
outsb
dec
jae
fisubl
ret
aad
push
stos
out
js
xchg
sub
xlat
repz
xchg
loope
cmp
jmp
stc
sti
mov
dec
bound
lret
ds
rclb
sarl
movsb
and
add
test
push
int3
cmpsl
je
cmp
push
mov
call
add
ljmp
lret
imul
jbe
inc
mov
push
mov
mov
fs
mov
sbb
cld
adcl
inc
pop
in
rcr
mov
es
jg
cltd
jne
cmp
repz
repz
out
push
outsl
adc
dec
pop
sbb
mov
pop
icebp
inc
mov
iret
push
repz
mov
fisttpl
popf
xor
subl
xchg
daa
push
or
pop
and
loope
cmp
mov
nop
neg
out
sti
aas
mov
sbb
cmp
pushf
xor
inc
loope
cld
js
mov
dec
xchg
xor
sub
repz
outsb
lods
test
cmp
dec
mov
ja
adc
push
pop
inc
lock
stos
mov
cmp
jb
sub
pop
repz
cwtl
cld
ss
mov
dec
enter
pusha
mov
pop
lcall
cmp
pop
dec
scas
lcall
sbb
push
fadds
push
das
sub
jle
movsl
push
das
sbb
and
pop
out
dec
negb
lods
pop
inc
dec
mov
mov
xchg
std
insl
je
int3
jecxz
fbld
lahf
daa
out
cmp
repz
xor
jb
push
scas
adc
pop
outsb
ja
jo
mov
mov
xor
int
lret
loope
sub
add
ret
jbe
xchg
arpl
iret
add
jne
pop
into
imul
icebp
dec
and
sbb
es
or
mov
fnstsw
or
dec
test
add
inc
and
adc
shll
movsb
jl
dec
stos
jecxz
mov
add
push
ja
dec
decl
mov
and
in
clc
jnp
push
ret
loope
xchg
jmp
sbb
mov
addr16
xchg
popf
push
or
xchg
cmp
rclb
iret
call
xor
dec
pop
push
and
cmc
pop
arpl
jecxz
scas
sbb
lcall
xchg
jl
inc
mov
cwtl
push
jnp
push
scas
loope
in
mov
pop
mov
push
lods
orl
adc
adc
add
fiaddl
mov
loope
xor
inc
js
inc
sar
or
fistpl
add
stos
repnz
and
pop
out
out
cld
out
addr16
sub
or
pop
jns
cs
mov
jno
jmp
fwait
jp
jbe
push
mov
mov
xor
push
dec
cs
nop
xchg
rol
imul
push
mov
outsl
mov
mov
mov
stos
mov
inc
cmp
ds
rcrl
mov
sub
pusha
mov
mov
out
fldt
cmp
sbbl
jge
in
push
xor
cmp
std
dec
mov
pop
js
rorb
xchg
mov
inc
and
sub
dec
es
dec
inc
mov
lock
imul
jnp
jg
movsl
mov
adc
icebp
push
mov
jge
ret
cmp
or
out
mov
cs
adc
lods
iret
mov
adc
inc
fnstsw
xor
jl
imul
std
cltd
les
xchg
adc
jmp
cs
fcmovb
int
xchg
or
xchg
adc
jg
nop
inc
repnz
mov
xor
lret
orb
mov
icebp
mov
cmp
je
repz
pusha
push
cltd
push
adc
stc
ficoml
pop
adc
iret
add
pop
fiaddl
mov
cmp
inc
jp
and
jno
js
add
iret
pop
sbb
mov
popf
and
push
dec
or
inc
xor
push
es
fwait
nop
sub
mov
mov
outsb
dec
add
jae
icebp
adc
inc
arpl
sub
test
popf
xor
rclb
fldenv
jmp
adc
repz
cltd
insb
loopw
cmp
mov
dec
xchg
pop
mov
push
xlat
jl
mov
jmp
and
sub
and
add
lods
jnp
jno
out
cmpsl
jae
rclb
std
cmp
inc
roll
or
loopne
test
push
pop
gs
and
loopne
mov
add
add
shll
ret
aad
outsb
out
sbb
jns
cmp
insb
lcall
pop
ret
mov
xor
mov
jns
cmpsl
add
aaa
std
dec
and
cmp
rorl
pushf
xorb
sub
data16
lret
int3
push
pusha
inc
mov
cmp
stos
enter
mov
and
push
jle
jbe
shll
mov
sub
std
mov
inc
dec
cmp
and
lds
pop
or
cmp
sub
adc
cmc
add
and
stos
aam
mov
fcmovb
mov
pop
std
mov
es
mov
inc
sbb
mov
ss
imul
test
pop
cld
inc
loope
dec
push
fldl
testl
ds
push
mov
mov
sti
lss
xor
and
sti
mov
or
mov
imul
sbb
jns
in
decb
inc
rolb
lahf
push
pop
mov
push
mov
loopne
mov
mov
into
inc
jo
or
outsb
fidivrs
pop
or
sbb
mov
les
xor
test
int
pop
das
mov
pop
mov
lds
xchg
je
sub
lret
rol
dec
rorb
mov
testl
sti
outsl
sti
cmpsb
loopne
clc
imul
nop
xchg
lods
fimuls
add
jp
pop
xorb
stos
cld
adc
mov
jg
sub
xchg
sbb
xor
sub
mov
iret
adc
lahf
repz
in
mov
paddusb
push
add
adc
lea
sub
mov
out
ljmp
lret
xor
inc
arpl
xchg
cmp
mov
fimuls
in
cmp
push
xchg
jl,pn
imul
pop
mov
fwait
mov
pop
pop
dec
mov
push
mov
ja
int3
call
rcll
mov
dec
call
inc
mov
mov
pop
inc
out
int3
cld
int
aaa
push
jp
pop
iret
testl
addl
jnp
in
jno
mov
mov
push
jle
popaw
leave
mov
mov
inc
movl
aaa
insb
lcall
mov
lcall
aam
scas
loop
pop
xchg
push
cmc
pop
fs
mov
std
aad
mov
inc
mov
cmp
lret
cmc
inc
imul
std
dec
push
mov
popa
popl
aam
pop
mov
xchg
mov
adc
sub
adc
adc
ljmp
int
sti
mov
imul
mov
mov
sbb
mov
pushaw
stc
dec
mov
out
sub
sbb
sbb
pop
je
adc
imul
dec
jae
mov
and
sub
pushf
js
dec
movsl
ja
jmp
pop
sahf
jl
and
insb
fbstp
xchg
cmpb
mov
pop
inc
aas
mov
xchg
xor
adc
or
push
mov
push
mov
add
and
cmp
and
and
inc
movsl
shll
sub
jg
lret
cmp
repz
outsb
inc
jnp
out
sbb
push
push
jmp
add
loopne
fimull
fsub
cs
mov
call
inc
sub
repz
into
inc
dec
dec
dec
out
aad
inc
sbb
lods
je
inc
mov
ljmp
cs
repnz
icebp
adc
imul
inc
push
jbe
sbb
jg
jns
aam
ja
int3
aam
fisubrs
sub
scas
les
sub
lods
push
xchg
cmpsb
mov
out
out
inc
stc
icebp
push
fucomi
je
add
mov
lahf
pop
mov
jo
pop
add
jge
lods
rcl
inc
sub
xorb
xchg
stc
mov
dec
add
ja
xchg
movl
out
ret
dec
call
int3
mov
lods
and
arpl
jecxz
insl
fwait
stc
sbb
or
adc
mov
push
int
xor
fwait
mov
fidivrl
mov
mov
mov
filds
div
popf
adc
and
stc
fstpl
or
mov
dec
subb
and
mov
in
xchg
nopl
xlat
cmp
or
or
rcrb
jae
movsb
insl
xorb
cmp
gs
shl
jge
sbb
mov
lret
and
int3
leave
push
gs
inc
call
mov
xor
imul
jnp
mov
jl
ja
lds
sahf
sbb
mov
insl
or
inc
test
sub
cmpsb
mov
xor
push
test
fs
pop
xchg
cmp
push
cmp
call
or
dec
ret
pop
mov
push
push
pop
add
dec
lret
and
aas
push
pop
test
push
lahf
arpl
push
bound
or
add
in
call
inc
push
mov
add
ja
push
sub
inc
pinsrw
addr16
lds
sbb
cmp
mov
mov
addl
mov
out
ret
jmp
mov
lea
mov
rcrb
cmc
sub
or
and
in
dec
enter
in
and
xchg
scas
call
mov
ret
or
pop
xlat
out
add
jae
fwait
std
test
mov
pop
mov
sar
pop
pop
insb
mov
ret
mov
notl
mov
cmp
ret
insb
inc
add
std
adc
fsubrp
mov
xchg
std
in
and
push
mov
jno
cwtl
sub
dec
pusha
xorb
repz
cmp
and
frndint
pop
mov
lret
add
int3
mov
push
mov
int3
xchg
and
dec
hlt
sub
jge
inc
subb
push
js
movsl
into
mov
mov
push
lea
push
je
outsl
cmp
cmp
sbb
jnp
lret
sub
mov
pop
xor
addr16
cli
mov
sbb
mov
jns
xor
movsb
negl
cwtl
add
mov
mov
sub
cmp
mov
add
dec
adc
loope
aas
ret
xchg
push
jno
pop
mov
sub
push
or
or
mov
pushf
sarb
and
sub
lahf
pop
push
out
mov
test
imul
xchg
arpl
outsb
add
inc
cmc
push
mov
cmp
sbb
jmp
enter
cmp
aad
das
mov
stc
mov
lret
iret
outsb
pop
or
mov
cmp
loope
mulb
dec
push
outsb
stos
or
pusha
pop
mov
insb
loope
jo
pop
pop
sub
add
js
jg
push
in
cltd
icebp
insl
imul
js
stos
and
adc
int3
ret
jg
mov
jle
xchg
pusha
add
cmpsb
cmc
xchg
xchg
pop
jnp
mov
jmp
inc
loopne
mov
enter
add
js
xor
pop
ss
lock
and
sti
ja
dec
mov
stos
sbb
mov
lea
into
push
or
pop
rol
add
sti
push
mov
jge
dec
arpl
pop
in
test
imul
jmp
jbe
cmpsl
stc
push
xchg
pop
push
jl
imul
dec
call
cmp
data16
add
sub
fadds
jmp
out
push
fwait
bound
insb
adc
rcll
or
inc
imul
imul
stos
add
adc
cmpsw
out
test
lock
test
loope
test
pop
or
mov
daa
out
mov
insl
or
mov
mov
xlat
mov
shr
mov
insl
scas
aam
mov
in
cmpsb
out
std
sbb
ss
rcrl
push
fidivrl
push
lcall
mov
inc
adc
pop
rorl
stc
push
xor
orl
jg
mov
loopne
cld
inc
add
pop
cmp
vpunpckhbw
inc
leave
imul
jno
xlat
cmpsb
lods
mov
aaa
pop
lahf
loope
push
leave
movsb
loope
idivl
test
fdivl
filds
fbstp
std
sbb
mov
imul
pop
stos
mov
int
pusha
fdecstp
or
mov
inc
push
push
daa
fwait
data16
xchg
pop
cmp
jmp
in
loopne
xor
push
mov
frstor
add
int
sub
pop
sbb
mov
jecxz
push
addb
xor
stos
push
xchg
xor
imul
and
xchg
iret
or
pusha
imul
loopne
int3
jmp
ds
outsb
popf
or
jb
add
adc
sti
test
pop
add
mov
sbb
clc
push
andb
loope
out
pusha
mov
xchg
xor
inc
vmovaps
sahf
loopne
cld
clc
lahf
mull
cwtl
addr16
adc
jmp
cmp
xor
in
ljmp
dec
std
aad
cld
pop
mov
clc
dec
mov
pop
mov
push
sbb
and
imul
xchg
addr16
popf
pop
mov
fbld
fs
stc
push
cmp
test
lahf
xor
mov
pop
fisttps
pop
add
scas
xchg
push
cmp
mov
lahf
pop
push
push
add
test
sbb
and
stos
mov
dec
cmc
loope
imul
dec
adc
push
lods
fimull
loopne
ja
pop
push
push
loope
outsb
push
icebp
mov
jmp
enter
push
jnp
testl
mov
xchg
add
xchg
add
mov
adc
test
data16
xor
mov
std
gs
fwait
hlt
cs
test
lock
xchg
loopne
xchg
sbb
cmp
jl
add
data16
xchg
pop
testl
pop
jge
cmp
fs
sbb
out
pop
push
mov
sub
pop
jle
fisttpl
imull
jecxz
xchg
lret
xor
and
dec
sbb
xchg
mov
mov
xchg
mov
or
js
pop
push
mov
leave
mov
lods
add
out
xor
popf
mov
jl
test
jg
adc
xchg
pop
mov
push
mov
jl
iret
mov
jb
lret
popf
int3
lea
lahf
push
fcomps
cmc
rcr
pop
jmp
push
mov
push
addb
dec
xchg
ja
mov
aam
sbb
jle
jmp
mov
sbb
dec
cmp
mov
or
outsl
push
push
test
pop
pop
jae
stc
push
jg
jl
xor
out
aam
nop
push
cmp
scas
mov
xchg
add
lds
mov
call
jl
rorb
inc
mov
inc
dec
cmp
inc
loop
sub
or
stos
xlat
test
mov
xor
fisubs
mov
mov
loope
insb
mul
pop
xchg
pop
dec
cli
and
xchg
xor
mov
fs
push
inc
push
imul
lcall
out
in
pop
inc
cmpsb
mov
sbb
mov
mov
push
data16
adc
fs
cmpsl
mov
ret
out
inc
sbb
andl
sahf
or
je
add
fnsave
out
dec
dec
mov
lock
adc
shrl
jl
pop
push
or
jle
cltd
pushf
mov
jae
sbb
sub
xchg
push
sub
lds
mov
test
xor
icebp
movsb
or
inc
out
pusha
int
jl
dec
fsts
jo
stos
add
mov
mov
jg
mov
sahf
dec
in
xor
jg
popa
inc
hlt
xchg
or
aam
std
mov
jl
jecxz
rorl
inc
jmp
into
push
jae
mull
push
lods
fwait
mov
testl
fmulp
addl
push
xchg
hlt
cmpl
push
jns
test
sbb
inc
pop
xor
add
push
imul
fwait
cmp
and
inc
testl
mov
mov
add
inc
push
pause
mov
mov
xor
rcrb
nop
mov
sahf
or
mov
add
mov
push
push
inc
fnstcw
sbb
sbb
push
jg
sub
in
or
in
shll
callw
inc
ret
rol
xchg
loop
scas
mov
addl
dec
add
xor
jnp
dec
or
push
inc
pop
inc
sub
mov
movsl
inc
cmp
pushf
rcrl
mov
sbbb
outsl
dec
ret
sbb
xchg
mov
cmc
sbbb
pop
mov
add
test
adc
sub
add
mov
mov
adc
outsb
mov
adc
fisubl
clc
ljmp
push
lds
mov
mov
insl
xor
cs
add
arpl
shrb
ljmp
push
inc
cmp
cmp
lods
sub
cmp
sti
nop
out
fisttpll
mov
lret
pop
push
cmpsl
xor
mov
imul
xchg
mov
idiv
adc
incb
jmp
sbb
and
jmp
sub
in
es
iret
fmul
pop
xchg
push
sub
sbb
inc
fcompl
mov
adc
or
sub
add
jno
stos
inc
aas
mov
fbstp
mov
pop
loope
shll
pop
dec
aad
dec
loopne
out
jg
xor
lock
mov
decb
pushf
mov
rcrb
movaps
jg
mov
out
roll
loop
adc
bswap
mov
adc
mov
sbbb
stos
lret
dec
xchg
test
jnp
aam
xor
ljmp
cmp
fcom
loope
mov
xchg
jmp
jmp
mov
mov
xchg
and
pop
mov
pop
insb
fcmovnu
sub
mov
fcomi
mov
fdivp
mov
out
mov
push
mov
pop
mov
notl
repnz
in
jo
xor
iret
cs
sti
lret
movsl
inc
jb
test
jmp
mov
add
sub
fcompl
ds
fstpt
xchg
jmp
std
jl
sbb
les
outsl
dec
cmp
icebp
scas
xchg
xchg
ss
test
cli
in
mov
or
clc
lods
out
jb
jns
dec
inc
or
movsl
fiadds
clc
mov
cmp
jmp
mov
test
sbb
push
jmp
fstl
movsl
xor
pop
pop
stos
dec
cmc
in
xchg
adc
sbb
pop
push
jl
out
cmpsl
jp
mov
xor
mov
sbb
pop
xor
lret
hlt
testb
cmp
push
dec
xchg
push
pop
jns
clc
xor
pop
pop
mov
out
mov
sub
ret
cmpsb
cli
lret
lods
add
aas
int3
jne
repz
push
cwtl
mov
jns
mov
pop
imul
inc
cld
sbb
cltd
jb
mov
push
mov
js
mov
push
mov
adc
orb
jno
or
pushf
and
add
push
adc
jno
cmp
or
jno
repnz
dec
cmp
jg
push
jmp
jnp
xchg
push
jns
xlat
mov
sub
lods
pop
inc
jecxz
jnp
ret
xor
xchg
jg
insb
push
and
adc
sbb
xchg
hlt
and
fcoms
mov
dec
xchg
ficoms
fcmovne
inc
jae
cmp
jg
push
out
fistpll
xor
pop
pop
pop
sbb
inc
rclb
lret
ja
sub
addb
push
cli
movsl
cmp
and
jl
inc
adc
outsl
call
adc
push
addb
xor
xchg
iret
sub
rcrb
inc
dec
ds
ja
das
mov
aam
add
icebp
inc
jno
int
cmp
xchg
jmp
mov
sti
ror
adc
xor
xchg
hlt
clc
push
add
int
and
daa
sti
and
mov
nop
adc
bound
cmpsb
cmp
mov
sbb
push
push
add
cmpsl
shr
push
mov
fisubs
push
xchg
imul
push
test
insl
mov
ret
jnp
hlt
pop
mov
push
divb
cmc
pop
loope
dec
ret
out
fwait
andb
test
loope
ja
fidivl
nop
or
cld
inc
add
inc
shr
daa
cmp
jno
ficomps
pop
xchg
lds
and
dec
adc
dec
mov
sbb
jp
or
ja
icebp
sub
iret
mov
inc
cmp
mov
push
inc
jno
sbb
mov
xchg
or
add
in
into
cmpsb
scas
mov
pop
sarl
addl
fstpl
cwtl
mov
enter
or
ljmp
int3
test
inc
das
pop
cmp
rcl
jmp
aam
pop
stos
inc
jno
dec
rcrl
jge
sub
mov
fmuls
cli
fisubrs
push
mov
mov
cmp
test
imul
dec
lret
call
jmp
pushf
out
sbb
clc
xor
sbb
stc
pop
mov
stc
in
sub
pop
sti
and
cmp
into
daa
or
mov
inc
test
ja
sub
sub
loopne
stos
mov
iret
ret
sahf
jbe
pop
jb
test
stos
inc
clc
cs
add
or
scas
and
jae
ffreep
sub
je
sub
pusha
rolb
mov
mov
roll
mov
pop
xchg
repz
outsl
ss
daa
mov
mov
mov
jbe
repz
sbb
sbb
bswap
repz
mov
movsb
xchg
and
mov
mov
gs
mov
mov
ret
cmp
divl
add
sbb
sbb
nop
cwtl
cmc
out
lods
test
adc
ret
popf
shrb
pop
mov
ss
popf
sbb
mov
sbb
pop
mov
or
cmpsl
sub
or
jp
decb
dec
shll
fs
ret
mov
roll
mov
clc
cltd
insb
sbb
or
jl
enter
cltd
jg
sar
jnp
mov
mov
inc
adc
jbe
or
mov
aas
sub
sarl
jg
inc
mov
fwait
push
push
xchg
jbe
repnz
fs
dec
lds
lods
fidivl
pop
outsb
push
int3
lock
into
dec
adc
dec
adc
andl
lods
lcall
or
and
sub
add
dec
add
std
xchg
and
mov
pop
repz
fcoms
and
ret
das
test
lret
adc
orb
imul
cmp
loop
fists
fistl
test
mov
int
sti
cmp
pop
add
mov
lods
push
xchg
fadd
test
jns
fwait
cltd
std
xchg
jns
out
jmp
xor
dec
lea
mov
xchg
jecxz
fs
mov
xchg
cmp
pushl
hlt
pusha
enter
leave
arpl
xorl
jl
mov
add
fwait
in
inc
and
add
daa
pop
push
les
js
sub
push
pop
mov
js
or
adc
xor
push
sbb
xchg
outsb
iret
jae
sub
addr16
pop
test
jg
cmp
inc
cwtl
mov
addb
dec
loope
pushf
mov
enter
mov
push
mov
jmp
stc
mov
xor
pop
imul
pop
mov
adcl
orb
mov
movsl
or
cmp
dec
ja
fimull
sbb
cmpsb
std
daa
add
subb
push
sbb
ljmp
inc
dec
ljmp
cmp
shrd
and
or
push
jl
out
idivb
das
icebp
lcall
jmp
das
rcll
or
inc
mov
popf
fisttpl
and
repnz
xor
outsb
dec
mov
in
cmp
leave
call
xchg
sub
orb
fstl
cmp
push
jp
std
jle
mov
jl
mov
jmp
pop
pop
xchg
mov
inc
arpl
rclb
imul
mov
adc
enter
pop
dec
pop
xlat
into
loope
sbb
jmp
push
out
cmpsb
scas
andb
pop
push
xor
mov
cmp
imul
xchg
loopne
cs
daa
xchg
lds
inc
dec
lods
jb
adc
cltd
xchg
and
loope
xlat
dec
mov
mov
sub
fsubrs
adc
sbb
sbb
ficoms
iret
ret
sub
movsb
sbb
test
aaa
dec
push
incb
fsubrs
arpl
lock
xchg
in
loope
gs
or
sbb
fisttpl
les
fdivs
shr
adc
mov
mov
xor
mov
out
and
push
push
dec
push
lods
pop
dec
xor
dec
dec
xchg
inc
ja
mov
or
fcomps
ret
xchg
pop
jb
les
int
outsb
xchg
xor
ds
ret
or
push
pop
in
cmp
or
add
repz
push
sub
movsl
jl
add
sbb
or
push
xor
loope
dec
mov
xchg
mov
and
and
pop
push
inc
test
ljmp
scas
leave
push
enter
repnz
mov
clc
push
addr16
lcall
cmc
mov
lahf
sbb
mov
shll
mov
mov
iret
dec
lods
ss
mov
add
jnp
inc
or
jl
mov
jae
popa
sub
push
in
js
adc
popl
jnp
push
inc
cmp
pop
enter
inc
dec
add
fstps
jno
orb
mov
mov
ret
mov
or
or
jno
xchg
mov
add
gs
push
fimull
mov
sbb
xor
lret
sub
insl
pop
jae
loop
sbb
pusha
inc
in
dec
int
push
push
out
push
dec
scas
pop
jmp
jmp
sbb
lods
push
outsl
fimuls
inc
imul
adc
or
insb
roll
sub
xchg
divl
lods
ds
add
cmpsb
mov
jae
xchg
or
inc
mov
jno
jne
stc
ds
xor
adc
lock
mov
rorb
fisubs
ror
and
in
int
inc
roll
adc
add
jb
outsl
sbb
inc
imul
pop
sub
pop
cmp
dec
mov
testb
mov
cltd
fcomps
lcall
pushf
adc
fwait
cmp
push
arpl
add
std
adc
jb
stos
int3
inc
imul
decl
jg
enter
andl
cwtl
stc
pop
aam
lods
fcmovnb
mov
mov
dec
jne
mov
jno
out
or
dec
jl
sbb
icebp
aad
cmp
fwait
lcall
mov
pop
mov
aad
pop
push
and
sbb
jle
cltd
dec
mov
cmp
jl
dec
bound
dec
sti
sbb
lret
push
ret
fsubr
pop
movsb
setp
xlat
inc
imul
xor
cmc
cmc
stos
jl
xchg
jle
scas
int3
xchg
dec
jbe
je
push
inc
test
orb
faddl
push
fcompl
mov
push
inc
jl
mov
es
dec
scas
shrb
cmp
fnstsw
std
sub
aad
and
xchg
cmp
jnp
pop
ret
test
adc
imul
or
add
sub
clc
fsubrl
shrl
push
iret
cwtl
lret
lods
int
and
jno
daa
push
push
push
cmp
js
ficoms
test
les
jno
imul
movsb
pop
orb
lods
jno
and
cmpsl
sbb
in
add
inc
imul
daa
je
xchg
pop
out
pop
fwait
pushf
mov
jge
inc
loopne
lcall
and
jle
fwait
test
push
lahf
mov
imul
cmp
sbbl
es
leave
test
lods
fistl
sbb
dec
jbe
fnsave
movups
js
pop
mov
pusha
scas
pop
dec
push
into
add
and
in
mov
iret
pop
daa
test
rcr
jnp
in
or
pop
fs
mov
out
outsl
cmp
sbb
fstl
imul
in
shrl
mov
shlb
int
mov
pop
jae
jb
je
ljmp
scas
out
add
jae
jb
push
movsl
xchg
cltd
cmp
and
mov
fidivs
test
pop
daa
xor
int3
cli
dec
or
in
ror
test
jb
scas
lret
jns
cmp
sub
pop
push
loop
in
and
cmp
jge
push
and
jecxz
jae
add
inc
lods
repnz
mov
lret
mov
jno
es
ds
push
push
pusha
lret
es
mov
push
int
mov
dec
dec
clc
loope
cmp
push
adc
or
sub
or
pop
mov
sub
ljmp
cli
iret
push
test
stos
sti
mov
fwait
sbb
movsb
cmpsl
sar
push
sbb
jl
cmp
mov
scas
test
and
or
aam
adc
mov
sub
data16
shlb
jno
arpl
push
imul
iret
in
jg
orb
push
pop
insl
cmc
or
and
push
mov
mov
and
adc
jb
adc
int
stos
out
pop
into
adc
push
pop
jge
and
imul
repz
mov
adc
enter
lods
loop
sbb
aad
add
push
sub
push
jno
cmpsb
sbb
add
push
movsb
mov
pop
iret
sti
mov
push
mov
fs
dec
pop
movsb
pop
sub
lea
adc
mov
sub
out
dec
pop
mov
cmc
dec
xchg
xor
test
xchg
je
andb
mov
or
push
es
ret
mov
push
fisubrs
cmp
xchg
sbb
and
inc
sbb
jne
call
add
jmp
dec
rclb
mov
xor
in
lahf
imul
mov
adc
and
stos
cmovle
fdivs
ss
dec
test
fcomps
add
push
mov
pminub
mov
cltd
sbb
cmp
test
nop
push
cltd
xchg
sbb
or
leave
mov
cmp
mov
mov
add
sti
adc
sarl
dec
lahf
scas
out
pop
pusha
jbe
dec
in
adc
pop
sub
cmp
add
fxch
jb
sbb
push
push
sub
out
sub
inc
mov
mov
jnp
aaa
pop
fsts
inc
pop
push
ret
mov
jae
jg
pusha
push
pop
inc
negl
cmovge
repz
rcl
push
dec
mov
mov
das
and
and
push
aad
and
jb
cmp
cwtl
cmp
or
sahf
pop
xor
mov
dec
pop
or
movl
in
cmc
iret
sbb
test
xchg
mov
push
fmull
push
dec
lds
mov
xchg
pushf
add
ret
in
imul
ret
sbb
inc
push
es
xchg
sbb
stos
outsl
or
testb
xchg
imul
sbb
xchg
push
addr16
in
pop
xor
mov
test
xor
ret
dec
jns
incb
out
xor
mov
and
sbb
rorl
inc
lds
mov
mov
popf
pop
movsb
ficompl
pop
dec
dec
jl
pop
les
icebp
and
push
and
adc
out
push
mov
clc
cmpsb
shr
fdiv
cltd
sbb
fsubr
hlt
adc
jecxz
xchg
std
push
or
aaa
arpl
divb
mov
mov
mov
pop
push
add
cmpsb
mov
scas
mov
callw
add
jecxz
push
pop
imul
jo
push
sbbb
imull
lods
pop
jno
cmpsb
pop
int3
in
sub
stc
push
mov
push
push
sub
fwait
jnp
mov
test
push
inc
pop
or
mov
pop
mov
cmp
icebp
push
dec
and
popf
shll
pop
mov
rcrl
push
dec
adc
add
push
stos
mov
loopne
xchg
adc
pop
inc
xor
jae
ss
imul
sahf
mov
inc
mov
repz
cli
pushf
mov
mov
mov
test
jmp
pop
push
push
mov
xchg
gs
xchg
xchg
mov
iret
xor
dec
jecxz
sbb
rcl
dec
arpl
jbe
fwait
outsl
fidivl
add
int3
push
jmp
jecxz
aam
andb
lret
pop
and
dec
stc
jge
std
mov
je
mov
aam
inc
sbb
iret
jno
stc
into
data16
adc
or
mov
repnz
stc
fmuls
xchg
pop
push
nop
sbb
cmp
repz
movsb
shl
mov
rcrb
mov
dec
and
add
cmpsl
mov
lds
mov
xchg
repz
jmp
push
lahf
popa
test
fcoms
mov
inc
fwait
sbb
inc
add
pop
inc
out
push
mov
jno
adc
xchg
fcmovu
add
inc
sub
es
mov
ja
int3
addr16
loope
pop
lds
mov
inc
movsb
cmp
mov
jge
push
mov
xor
or
cmpsl
xor
fs
mov
testl
mov
cmp
ja
and
jg
adc
addr16
dec
cmp
push
mov
repnz
sbb
sbb
jae
cmpsb
mov
xchg
shl
jae
inc
push
xor
rcll
xlat
lahf
add
fisubs
rorb
mov
mov
jg
add
xlat
test
mov
sbb
xchg
in
sbb
add
repz
inc
test
lcall
or
mov
insb
lods
fnstsw
mov
lcall
pop
cwtl
mov
sar
jbe
lods
push
mov
bound
sub
jbe
cmc
cwtl
nop
ficompl
mov
sti
ret
sbb
daa
cmp
mov
lahf
jmp
lahf
jno
mov
inc
push
sbb
adc
cltd
mov
mov
aad
test
jne
pop
or
sbb
mov
xor
fildl
movsl
jecxz
mov
jmp
adc
jns
rcrl
xor
std
es
sti
and
inc
mov
xchg
cmp
in
push
or
mov
scas
cmc
jbe
arpl
pusha
cmp
jnp
idivl
es
jl
inc
mov
cmp
out
cmp
popf
mov
mov
je
pushl
fsubl
add
mov
push
loope
bound
out
sbb
jle
xchg
lea
cwtl
cmp
out
push
pop
bound
xor
stc
movsb
adc
imul
and
cmovns
add
jns
stos
xchg
xor
in
mov
xchg
sub
mov
jmp
xor
fwait
xchg
sub
mov
xor
mov
into
jecxz
push
mov
adc
mov
xchg
xor
cmp
mov
cmpsb
push
popf
in
int
test
pop
pop
mov
clc
xchg
inc
movsl
sbb
or
or
nop
mov
outsb
loope
jmp
or
sbb
test
cmp
repnz
xor
andb
test
shll
in
fcmovnb
mov
sub
fistl
ret
dec
pop
pusha
ss
pop
rep
mov
adc
out
addr16
lret
xor
ja
scas
pop
das
dec
lcall
nop
mov
xchg
pushf
push
sub
rolb
repz
cmp
jle
push
mov
push
rcrb
lock
mov
daa
pop
mov
rol
into
testb
lock
pop
cmp
loopne
les
fnstsw
jb
les
jno
pop
ret
add
cmp
inc
inc
mov
xlat
out
mov
mov
pop
cmp
in
popa
jg
cmp
xor
shll
jae
pop
aaa
mov
lahf
push
negb
ret
es
jp
pop
in
dec
loop
pusha
pop
jg
fdiv
inc
mov
in
mov
data16
out
negb
and
fisubs
lret
mov
inc
mov
or
add
sub
mov
jmp
in
pop
mov
scas
neg
add
mov
inc
inc
cltd
inc
xor
and
cli
divl
test
xorl
mov
das
mov
sbb
lods
inc
cmp
add
cmpsb
aam
adc
sbb
jne
xchg
cs
mov
push
sub
push
pop
push
arpl
mov
add
or
mov
lock
test
ds
dec
cmp
sahf
cltd
cmp
inc
movsl
xlat
iret
add
or
mov
ret
rcr
imul
inc
imulb
jecxz
and
addb
mov
arpl
dec
popf
add
sub
mov
cltd
je
in
out
fs
nop
jno
int3
rorl
push
mov
and
jl
dec
mov
jbe
les
mov
rorl
mov
test
xorb
jo
dec
shrl
mov
sbb
xchg
popl
inc
sub
iret
cmc
fidivrl
pop
outsb
imul
add
loop
pop
inc
inc
arpl
jo
dec
test
mov
sbbb
xlat
inc
lret
or
pusha
xchg
jae
pop
cwtl
jbe,pn
or
sti
jns
jl
aam
fcmove
call
enter
jp
jge
call
mov
mov
stc
lcall
sbb
loope
fucomi
sarl
inc
inc
push
push
inc
mov
ret
add
xchg
push
xchg
addr16
pushf
mov
jnp
pop
sub
jae
cltd
push
jnp
jmp
jae
test
in
imul
leave
mov
and
dec
ja
and
xchg
cltd
and
push
sub
and
imul
leave
movsl
aam
pop
or
mov
jno
adc
mov
cld
xchg
out
jl
or
lret
jl
lret
jl
push
iret
push
dec
mov
xorb
mov
mov
cld
and
repnz
jl
sub
inc
pop
xor
cmp
add
inc
aam
loopne
xchg
xchg
adc
pushf
jne
mov
pop
or
jno
das
sub
mov
inc
js
pop
aam
shll
ja
out
bound
xor
xor
cld
sbb
jae
shll
push
inc
cmp
sub
push
scas
aad
cmp
push
into
loope
sarl
lret
outsb
mov
mov
jns
add
aas
or
lret
rcll
mov
mov
dec
xchg
daa
sahf
and
pop
add
sbb
inc
shrb
dec
mov
push
cmc
or
mov
dec
mov
cmp
insb
inc
pop
lret
in
imul
mov
pop
stc
xorb
rol
xlat
repz
inc
jno
mov
mov
pop
cmp
shlb
aam
shl
push
cmp
push
push
jae
jns
ss
sbb
adc
cmp
jae
sbb
out
cld
add
cld
out
outsl
add
mov
imul
mov
sahf
mov
sti
adc
mov
xchg
adc
enter
insb
out
dec
pop
sbb
mov
scas
out
cmp
jbe
fistpl
clc
imul
mov
cmp
arpl
add
xlat
sbb
lret
mov
cld
or
pop
add
push
pop
inc
rorb
test
jns
ss
loope
push
inc
sub
jp
int3
dec
push
mov
movsb
cmp
lret
xchg
xor
dec
inc
pop
dec
cli
jl
fwait
outsl
xor
dec
or
add
jmp
jecxz
pop
pop
sbb
mov
mov
jnp
rolb
or
sti
aam
cwtl
stc
cmp
jl
repz
in
shll
mov
imul
dec
jmp
imul
pop
in
ss
nop
adc
xchg
lock
mov
rorb
stos
sbb
adc
es
jl
scas
nop
in
gs
aam
out
shlb
inc
mov
jmp
jle
mov
mov
inc
push
mulb
adc
daa
arpl
jns
int3
mov
cmp
ss
daa
out
mov
in
aam
fimull
mov
and
mov
outsb
and
dec
aaa
subb
jge
test
faddl
testb
dec
mov
or
ret
cmp
add
cmc
inc
outsb
mov
mov
sub
mov
push
sarl
xchg
and
outsb
jae
fwait
dec
nop
aas
push
jns
push
sub
mov
adc
fstpt
icebp
lds
inc
pop
lcall
int3
dec
mov
daa
pop
mov
or
add
jb
stos
and
movb
cmc
xlat
adc
and
fcom
xor
mov
sbb
cmp
xor
sub
cmp
xor
insl
repz
or
stc
popf
adc
in
jge
icebp
dec
ds
jecxz
test
push
sbb
push
out
es
pusha
fs
cld
pop
jo
in
fisttpll
sbb
neg
sub
les
aad
stos
sahf
inc
mov
aad
iret
cmp
incb
movsl
outsb
dec
sti
lret
sbb
fs
sbb
and
test
ja
lods
fs
frstor
popf
jmp
dec
aad
mov
ljmp
xchg
push
xor
jl
push
lock
fs
sbb
cwtl
arpl
popl
int3
dec
jg
jae
test
mov
out
jno
cmpsb
push
jne
inc
loopne
es
xor
xchg
push
cmpsb
lea
sarb
sbb
dec
push
push
jne
dec
test
fdivrs
out
sti
mov
cmp
mov
clc
push
mov
js
push
ljmp
movsl
stos
mov
mov
andb
jo
dec
inc
and
testb
mov
mov
push
push
pop
cltd
pop
out
fsts
inc
ss
ffreep
lret
mov
mov
lahf
cmc
fwait
test
aaa
jae
mov
int
jno
mov
test
sub
aaa
js
cmp
out
mov
les
cmp
popf
pop
les
sarl
jmp
inc
pop
mov
jae
ljmp
or
push
push
sti
sub
popf
icebp
and
inc
mov
pop
iret
dec
mov
cmp
inc
cmp
pop
mov
cmp
dec
jle
idiv
cmc
cltd
sbb
icebp
movsb
nop
sub
add
mov
popa
mov
hlt
jae
push
mov
jo
test
jno
jnp
call
das
subl
sub
icebp
loope
and
add
sbb
ja
pusha
dec
ret
test
jb
pusha
sbb
lock
push
cltd
or
hlt
ret
push
add
leave
pop
mov
push
in
pop
fidivrs
mov
es
inc
xor
sub
xor
cli
popf
insb
subl
pusha
iret
mov
mov
ror
push
or
push
cmpsb
pop
scas
ja
inc
inc
dec
or
push
sbb
xchg
or
mov
movsb
in
cli
xchg
das
xchg
sub
jnp
mov
push
dec
mov
psubq
dec
int
jbe
xchg
cmp
dec
jb
ret
cmc
cmp
push
pop
mov
jmp
cli
push
leave
and
mov
sbb
pop
lods
mov
fiaddl
jg
xchg
mov
sub
mov
jl
rcpps
push
outsb
ret
daa
movsb
pushf
fmull
push
mov
imul
rol
fwait
int3
mov
lds
pop
lcall
fistpll
pop
cmpsl
movsb
or
jb
mov
popf
add
xor
pop
andb
cmp
sti
mov
pusha
push
xchg
adc
nop
mov
fisttpl
push
jg
mov
not
test
mov
scas
jl
xor
clc
pop
mov
pop
push
fmull
inc
rcrl
xchg
insb
lds
stc
xchg
pop
daa
xor
dec
mov
jg
mov
mov
push
dec
xor
in
inc
jecxz
fadds
fwait
es
xlat
inc
xchg
int3
daa
jl
inc
mov
movsb
inc
pop
fidivl
bound
pop
inc
sti
mov
adc
in
rolb
pop
hlt
fwait
loopne
inc
dec
shlb
xchg
jno
addr16
stc
int3
ja
aaa
in
vpackssdw
lahf
loop
je
cmpb
add
imul
ret
push
add
stos
xchg
call
rol
popa
add
pop
inc
pop
scas
or
xchg
sti
pop
adc
fs
pop
fwait
dec
fsubs
pop
adc
in
or
xchg
mov
xchg
adc
sbb
adc
loope
push
imul
dec
jbe
bound
ror
adc
mov
or
scas
iret
adc
outsb
mov
mov
jno
shl
fs
cs
adc
cmp
mov
into
mov
repz
dec
repz
mov
dec
xchg
sbb
mov
ret
sbb
std
icebp
dec
addr16
int3
les
js
inc
adc
out
inc
inc
adc
jmp
jno
out
push
pop
sub
pop
or
sti
xlat
adc
push
xlat
cmp
cmp
mov
pusha
xchg
jg
cltd
fwait
cwtl
inc
mov
into
sti
jge
inc
das
nop
in
add
fwait
and
push
jo
or
and
cmpsb
clc
mov
cltd
cld
into
test
adc
xor
or
xor
add
add
or
cmpsl
or
add
aas
push
dec
insl
jmp
add
inc
addb
jo
out
adc
cmp
cltd
outsb
and
rcll
xorb
int
cli
insb
and
dec
ss
xchg
fsubrl
jmp
mov
imul
and
adc
mov
into
out
jl
sbb
imul
out
push
xchg
add
dec
cmp
or
ret
cmc
iret
icebp
adc
shll
sub
fwait
cmc
test
lahf
jle
mov
mov
lea
cmpsb
inc
fildll
cmpb
dec
repz
xchg
mov
cltd
loope
test
cmp
jl
cli
sbb
fisttpll
mov
pop
fwait
outsb
pop
cld
mov
cmp
sub
dec
inc
mov
loopne
repz
popf
inc
mov
add
cli
lods
fiadds
int
cmp
inc
jb
sahf
mov
push
mov
dec
and
mov
pop
daa
dec
scas
cs
bnd
sbb
mov
out
xor
movsl
push
mov
jo
sbb
inc
dec
mov
mov
mov
out
cmp
push
sub
cmp
test
ret
adc
pop
xchg
test
out
or
inc
and
push
sub
aas
shrl
js
cmp
xlat
mov
fdivl
mov
mov
lahf
cmp
xchg
cmp
stos
icebp
imul
sub
fsubs
pop
jbe
pop
cmp
sub
pop
cmp
mov
mov
xor
orb
shlb
mov
arpl
scas
sub
pop
and
cs
mov
jecxz
mov
xor
sub
fildl
inc
xor
xor
mul
out
arpl
adc
mov
cltd
lods
outsb
and
and
adc
jae
jmp
sub
sbb
cmpsl
or
andb
lret
and
jae
push
orb
jo
cmpsl
test
jmp
repnz
out
jg
mov
loop
int
daa
xor
and
cmp
or
inc
in
pop
arpl
or
push
mov
and
dec
dec
inc
xchg
imul
sub
sub
imul
push
icebp
push
mov
mov
testl
leave
mov
and
pop
psrlw
sti
jge
ficoms
push
idiv
test
jecxz
in
negl
mov
adc
fwait
push
fwait
es
push
test
iret
xor
fidivrl
pop
push
dec
js
addr16
adc
popf
hlt
push
mov
push
push
loopne
cmp
je
push
mov
xor
mov
frstor
push
and
outsl
aaa
push
dec
test
fmull
xor
sub
out
dec
incb
outsb
pop
jae
outsb
jns
inc
jmp
in
mov
adc
adc
pop
jns
ds
lods
or
syscall
movsb
adc
push
sti
cmc
cwtl
pop
pop
rorb
cmp
arpl
repz
arpl
cltd
lods
mov
adc
add
test
mov
push
shll
repz
out
pop
lret
push
cwtl
iret
fidivrl
adc
mov
imulb
add
dec
xor
dec
jbe
imul
fwait
test
orl
out
repnz
and
stos
dec
jg
icebp
movsl
shr
xor
sti
xor
pop
push
adc
lret
cmc
ret
ds
mov
fistpll
sbb
cmp
sti
ret
add
cmp
cmp
inc
mov
dec
mov
js
or
inc
cltd
xchg
fs
jnp
mov
stc
lahf
mov
hlt
dec
dec
out
adc
add
mull
add
sbb
jmp
shrb
test
add
mov
scas
movsb
std
dec
ret
cmc
lods
sub
mov
fsts
jmp
lret
mov
stc
sbb
in
push
mov
notw
sub
lds
cld
nop
ss
daa
sarl
movl
pushf
xchg
push
pop
xor
jns
loopne
mov
sub
dec
sbb
lds
jae
testb
xor
pop
icebp
jecxz
daa
punpckhbw
jns
into
decb
mov
cmpsb
and
shll
ja
jmp
mov
and
cmpsl
popf
bound
repz
pop
orl
push
movsb
jae
mov
jle
ficoms
ja
mov
clc
or
ljmp
popf
stc
clc
aam
pop
pop
jl
addb
inc
repz
cmc
sarl
fdivl
inc
insl
fwait
mov
in
fstpt
xor
fdivp
and
js
lret
push
jl
daa
das
xor
shlb
lods
aam
out
sub
popa
inc
cmp
insb
mov
mov
outsl
pop
xor
test
adc
inc
out
jl
imul
enter
stc
push
lods
cmp
je
cmp
lds
lcall
inc
inc
add
fcomi
sbb
test
cmpsl
mov
and
jg
xchg
add
xchg
mov
iret
inc
push
inc
fstpl
decb
stos
hlt
ja
out
in
in
add
dec
and
mov
adc
aam
jecxz
or
and
in
jae
adc
mov
and
push
nop
jecxz
jmp
mov
mov
mov
out
sbb
fs
fistpll
xor
jne
in
loopne
cmc
lret
jns
ror
dec
nop
jle
inc
test
cwtl
dec
cld
loope
sub
jb
fnstcw
mov
arpl
jns
aam
pusha
push
dec
sbb
mov
insl
jg
push
add
ds
mov
call
add
and
mov
add
movsb
leave
shll
lret
shl
int3
pop
jnp
sbb
ja
mov
jno
sub
xchg
pop
mov
aam
push
mov
out
xor
mov
cmp
mov
and
in
jl
jo
mov
or
xor
aad
and
cmp
imul
xor
lods
push
pusha
push
ss
roll
dec
xchg
pop
mov
mov
inc
jge
add
and
mov
cmp
cmp
std
adc
mov
iret
lock
sbbl
add
mov
stos
test
inc
mov
adc
or
loope
xor
and
xor
nop
xor
das
pusha
mov
jl
shrl
wrmsr
or
cmp
inc
fdivrl
lret
mov
dec
sti
test
lods
add
jp
mov
xor
jno
mov
mov
test
mov
outsl
call
mov
inc
out
jmp
add
push
cmp
mov
mov
int
xlat
pop
push
or
jl
mov
sbb
stos
xchg
or
and
shrb
jb
mov
and
push
addb
push
rep
mov
cwtl
or
imul
sub
std
xchg
mov
pop
imul
push
mov
gs
cmpsb
insb
ds
fcomps
ja
mov
movsb
inc
pop
inc
adc
int3
ja
ss
dec
in
xchg
dec
in
stos
fisubs
jle
pop
pusha
stos
mov
sbb
add
hlt
stos
sbb
mov
jp
xchg
cmp
packuswb
and
xchg
xchg
and
mov
cmp
jbe
adc
dec
notb
or
or
pusha
and
addr16
mov
sub
clc
add
rcrb
test
jmp
inc
dec
xlat
mov
pushf
push
popf
mov
mov
pop
mov
test
mov
pop
pop
lahf
push
or
lcall
jl
xchg
fists
es
into
int
scas
adc
sub
push
ja
repnz
lret
cmp
in
adc
mov
pop
mov
bound
pop
mov
dec
sub
mov
or
sub
pop
bound
xchg
iret
xchg
icebp
jg
mov
cmp
mov
jns
lock
cmc
cld
pusha
dec
or
mov
sbb
out
and
fs
inc
adc
cmc
and
data16
xchg
dec
sbb
fiaddl
mov
mov
test
je
mov
mov
xor
aaa
push
push
jno
adc
mov
je
pop
mov
jecxz
sbb
pop
cltd
arpl
popl
push
ja
or
jg
xchg
out
xor
roll
icebp
idivl
fcomip
imul
inc
stos
jno
in
pop
fisubl
int
lret
cpuid
push
pop
std
aam
dec
pop
adc
lods
and
stos
push
push
jl
xor
jecxz
inc
jge
mov
push
shlb
insl
adc
outsl
adc
mov
pusha
sti
mov
ljmp
into
daa
cmp
xor
push
sti
testb
into
movsb
lods
filds
dec
cmpsb
js
or
sub
push
shlb
incl
les
sbb
mov
imul
push
xchg
lcall
xchg
repz
stc
lea
dec
add
and
add
or
int
mov
ret
pop
insb
mov
aam
rcrl
hlt
inc
sahf
aad
fidivs
inc
jae
fwait
aam
adc
push
pushf
ja
pop
pop
je
aas
addr16
orl
ja
pop
in
pop
fwait
push
mov
xor
adc
out
jbe
push
scas
sbb
mov
fwait
aaa
dec
filds
inc
mov
fisubs
adc
and
mov
stc
inc
imul
repz
jb
dec
xlat
jb
xchg
cs
xchg
mov
jl
push
sahf
jns
mov
add
inc
adc
mov
cmp
out
dec
xorl
or
sarb
out
mov
mov
movsl
inc
lock
ja
cwtl
inc
lahf
and
or
xorb
sahf
daa
jmp
les
sub
add
cmpsl
loopne
je
filds
out
inc
xor
add
mov
sub
jno
mov
pop
inc
pop
inc
loopne
fisttpl
cmpsl
test
xor
pop
jle
pushf
mov
jnp
leave
scas
stc
mov
gs
sub
mov
mov
fs
or
in
jge
pop
mov
push
out
mov
push
xor
mov
fsubrs
mov
cmp
ja
mov
xor
dec
push
leave
popf
scas
push
and
jge
into
mov
add
mov
fwait
jl
sub
stc
ljmp
addr16
jmp
pop
fisttps
out
jle
dec
mov
jne
cmp
mov
scas
sbb
xlat
test
loopne
outsb
sbb
jno,pt
push
not
call
pushf
sbb
in
jno
pop
ja
push
sti
popf
pop
lods
mov
popf
push
mov
ja
xchg
jg,pn
fisubrl
mov
mov
and
fidivl
les
push
dec
repz
sbb
sub
xor
push
pop
lret
aaa
jnp
jnp
inc
loope
mov
inc
popf
jmp
aam
loope
int
or
xchg
add
push
rolb
adc
push
enter
cmp
or
scas
pop
sti
inc
enter
mov
imul
fistl
jns
jne
mov
lods
fildll
mov
inc
mov
sub
or
es
mov
sbb
or
sti
test
or
adc
popf
outsl
sub
rorl
sbb
xchg
add
add
mov
sbb
sbb
inc
add
cmpsl
xor
clc
jb
inc
cmovo
rcll
xchg
pop
test
mov
int
mov
jg
leave
jae
ja
sysexit
or
mov
add
xor
daa
lcall
das
add
cmp
and
sbb
insb
imul
xchg
out
cmpsb
sub
adc
add
cmp
ljmp
push
mov
add
ja
imul
aad
or
dec
mov
filds
mov
adc
imul
ret
pop
popa
mov
test
push
xchg
mov
mov
popa
out
dec
cmp
nop
imulb
repz
stc
dec
or
lret
in
lds
enter
in
sbb
mov
cltd
rorl
lret
cmc
dec
roll
aad
sbb
jmp
or
jl
jnp
lods
push
sub
push
icebp
push
jmp
sbb
out
insl
push
movsl
test
push
data16
fcomp
or
mov
adc
rcrl
fs
lea
add
jnp
mov
mov
dec
mov
xchg
repz
adc
push
pop
pushf
push
shll
mov
dec
jbe
dec
mov
imul
test
lahf
xor
rcll
leave
adc
jns
pop
fistps
mov
dec
subl
push
aaa
push
jae
scas
inc
cmc
shrb
adc
or
cmp
mov
clc
movsl
jl
inc
jae
push
mov
mov
icebp
ret
and
sbb
fdivp
ljmp
repnz
js
push
ljmp
cltd
push
std
xchg
fcompl
pop
test
adc
fwait
repnz
push
fwait
outsb
xchg
mov
shrb
jge
clc
lods
idivl
aam
add
mov
add
jno
mov
loopne
mov
jno
jb
repz
js
cmp
add
xchg
sbb
pop
fildl
and
dec
or
sub
fsubrs
mov
dec
push
xchg
repz
dec
imul
and
mov
mov
xchg
mov
mov
inc
mov
push
dec
imul
xor
lea
mov
fidivs
imul
pop
xchg
rcrb
iret
mov
xor
sub
xchg
cmp
aaa
mov
loope
or
jmp
outsb
loope
jg
xchg
nop
hlt
or
out
mov
push
cmp
arpl
add
mov
cmp
mov
fistpll
shll
push
mov
fidivl
jle
push
fnop
cs
push
mov
xchg
inc
ljmp
addl
pop
inc
out
mov
es
rcl
jl
fsubrs
jecxz
or
jns
pusha
or
repz
or
leave
sti
movl
dec
es
mov
out
sub
mulb
pop
dec
push
out
jae
or
data16
xchg
sub
xlat
ret
dec
mov
mov
es
add
call
pop
adc
rorl
cmpsl
pushf
adc
in
pop
repnz
mov
int
out
add
xchg
enter
arpl
fwait
adc
dec
dec
sub
sbb
jns
add
repz
stos
xor
ss
cmp
mov
dec
sub
shlb
jl
xor
push
push
ss
pop
cmp
add
pop
inc
dec
fsub
std
icebp
push
cmp
es
repz
xor
cmp
repnz
sbb
idivl
fstl
and
stos
pop
fs
in
mov
sarl
dec
inc
bound
push
inc
xor
lock
fcmovnb
dec
push
dec
mov
and
and
lcall
outsb
cld
outsl
jg
into
data16
mov
sbb
mov
shlw
mov
dec
sub
rolb
jmp
es
int
cmpsb
hlt
jae
lcall
mov
or
lcall
cmp
inc
btr
daa
sbb
dec
data16
mov
mov
mov
arpl
push
add
pop
mov
imul
jne
xchg
lock
xor
sub
cltd
fwait
sti
mov
inc
es
add
aad
movsl
mov
out
in
clc
push
and
jp
int3
mov
mov
fdivrl
sti
cmp
sbb
or
xchg
inc
fsubrp
cmpl
jae
add
dec
pop
cli
inc
cs
cmovb
xlat
or
jp
inc
jbe
xchg
pusha
fcoml
adc
enter
dec
leave
cmp
jnp
jns,pn
fiadds
sub
lcall
mov
out
or
or
lock
inc
pop
bnd
iret
jmp
inc
insb
xchg
xchg
daa
mov
and
out
mov
sub
sbb
mov
mov
lods
dec
fwait
and
dec
sar
sub
inc
dec
inc
xor
std
andl
jmp
xor
ss
int
fcoms
mov
mov
push
in
fisubrs
mov
icebp
cmp
notl
leave
fwait
pop
sbb
daa
inc
pusha
pop
sbb
out
cltd
in
aam
cmp
fisubrl
sbb
ja
iret
das
push
dec
fs
sbb
add
and
pop
mov
movsl
jnp
arpl
jle
dec
dec
xor
push
mov
sbb
cltd
xchg
scas
inc
sti
mov
cmp
cmp
xor
pushf
cltd
inc
push
addr16
test
lcall
and
mov
popa
cmp
sahf
sbb
mov
and
fstp
in
mov
cmpsl
pop
sub
or
adc
pinsrw
cs
outsl
dec
xlat
xlat
cmc
dec
fcmovne
in
xchg
mov
rolb
push
mov
xor
mov
push
jmp
inc
dec
incb
add
es
sbb
push
rcrl
daa
xchg
aas
mov
cld
mov
dec
add
cmpsl
aad
xchg
xchg
outsl
fistpll
into
dec
fistps
fwait
insl
pusha
scas
add
mov
ss
andb
daa
sub
xor
ret
mov
lret
popa
fcmovnbe
and
mov
sub
jb
inc
nop
mov
and
dec
push
in
jno
shlb
add
out
pusha
addps
inc
cmpsl
push
add
pop
lcall
data16
mov
sbb
mov
fwait
adc
and
pop
add
loopne
sub
pop
cmpsb
hlt
jmp
or
ficompl
push
in
mov
ret
inc
addr16
cmpsb
scas
aas
lahf
pop
mov
pop
or
or
je
cmp
add
xchg
mov
jle
mov
pusha
mov
inc
stc
in
pop
out
sbb
ljmp
xchg
jge
xor
xor
fisttpll
pop
aas
mov
mov
xor
fcmove
xor
pop
mov
jno
push
jne
loopne
testl
incl
or
movsl
insb
arpl
mov
call
jecxz
call
test
icebp
dec
outsb
ficompl
cmpl
test
pop
ss
sbb
mov
mov
mov
adc
fmull
mov
add
addr16
add
add
js
pop
mov
pop
icebp
dec
xchg
cmp
fistpl
addr16
jb
clc
loop
push
mov
xor
sub
iret
test
cmpsl
jb
xlat
jnp
sub
jmp
mov
in
dec
and
and
pop
push
clc
sbb
aam
adc
dec
push
mov
adc
xor
mov
pop
jnp
pop
inc
bound
jl
jle
std
addr16
out
leave
mov
fnstenv
push
or
lret
sub
push
mov
lea
mov
das
dec
jae
fs
stc
sbb
jb
sarl
and
ret
mov
mov
mov
mov
push
adc
pop
push
data16
pop
sarb
and
pop
fnsave
nop
push
aad
js
jg
jg
mov
scas
dec
filds
pop
int
push
pop
pop
sub
mov
jno
jmp
in
or
mov
lea
jmp
movsl
pop
and
fcomi
ss
add
pop
sahf
xor
movnti
dec
push
xchg
mov
inc
pop
fs
in
rcll
xchg
inc
arpl
xchg
dec
mov
inc
mov
jo
mov
xchg
inc
rorl
call
and
pop
ret
cmpsb
jb
fdivrl
push
sbb
mov
inc
inc
add
push
push
dec
arpl
sti
std
mov
mov
inc
movsb
add
mov
pop
pusha
in
sbb
stos
pop
pop
push
hlt
scas
xchg
xor
lcall
lahf
pop
test
adc
push
cmp
or
test
rol
pop
adc
sqrtps
aam
out
push
ss
out
adcl
sti
adc
mov
or
aad
in
pop
dec
mov
fstl
ret
adc
ret
stc
and
fwait
sub
decb
jle
call
out
inc
cmp
add
cmp
jp
inc
pushf
test
sti
mov
add
push
sbb
and
xchg
cmpsb
lds
fcmovnbe
jg
pusha
cld
into
jns
and
jb
jo
dec
lods
dec
xor
clc
stos
fimuls
fisubrl
xchg
cmp
scas
lret
push
mov
repz
cld
or
mov
or
push
pop
pop
mov
push
sub
movsl
rcrb
mov
stos
iret
in
cltd
sbb
insb
stc
pop
jmp
sub
in
pop
adc
pop
push
mov
mov
push
shll
pop
mov
sub
pop
adc
jmp
cmp
sub
adc
rcl
loop
icebp
inc
push
into
icebp
xchg
cmp
push
sbb
dec
loope
dec
adc
movb
sbb
or
dec
daa
mov
sti
repz
cmp
ja
ds
mov
xlat
inc
push
lods
scas
adc
and
fwait
jbe
mov
mov
or
test
shll
adc
mov
mov
decl
jo
push
pusha
mov
lcall
imul
test
idivb
xor
imul
cmp
jl
jns
in
xor
jo
lods
into
jmp
adcl
dec
fwait
popa
sub
push
les
pop
into
adc
icebp
xor
cltd
scas
inc
mov
sub
stc
test
ds
hlt
mov
add
call
into
pop
dec
addr16
inc
pop
popf
outsl
or
add
and
sbb
test
negb
and
add
leave
cmpsb
or
out
push
push
mov
outsb
shlb
sbb
mov
inc
mov
jns
jle
jbe
mov
pop
sbb
add
jl
icebp
adc
loope
mov
sub
pop
jg
sbb
jne
jns
jle
sti
cmp
ret
dec
xor
fisttpl
cli
lcall
fsubrp
push
jg
xor
mov
imul
push
mov
push
inc
bound
stos
in
jnp
inc
mov
mov
jno
fdivrl
pop
mov
scas
outsl
pop
mov
xor
cmp
test
jmp
mov
inc
inc
iret
fs
mov
xchg
aam
test
lds
xchg
out
fisubrl
das
mov
inc
cmpsl
inc
les
sbb
or
and
loopne
mov
addl
lahf
mov
dec
inc
lcall
mov
fs
cmp
pop
icebp
jne
in
fs
adc
lock
fmul
in
fwait
mov
mov
lret
jle
pusha
fs
imul
fisubrl
enter
add
push
inc
jmp
les
push
push
push
cmpsl
bound
cmpsb
sarl
pop
jbe
jnp
scas
sbb
dec
int
insl
dec
mov
pop
imul
out
mov
jl
push
mov
add
mov
adc
sarb
insl
pop
js
es
and
dec
cmpsb
lret
call
mov
or
stos
ljmp
addr16
cli
pop
mov
movsb
pop
pop
outsl
sub
sbb
mov
pop
fdivrp
inc
cli
jp
xchg
je
mov
jo
loop
adc
insl
mov
mov
add
and
test
mov
mov
xchg
aas
adc
repnz
adc
in
in
inc
test
jecxz
xor
frstor
push
mov
mov
mov
ss
insb
xchg
sub
jbe
scas
das
testl
js
fisttpl
test
enter
je
cmc
in
movsb
cltd
add
mov
ret
lahf
out
xor
jmp
lahf
sub
es
je
add
mov
jl
add
pop
push
in
push
fisubrs
fisubrl
shrb
dec
xchg
mov
dec
or
mov
mov
pop
jnp
jns
jmp
xor
pop
jp
imul
nop
sti
inc
movsb
xchg
pusha
add
jo
ljmp
int3
ss
in
repnz
cmp
lods
and
rcll
movsb
or
inc
dec
and
push
and
in
jmp
pusha
pop
xor
mov
orb
shll
lret
xchg
xchg
test
dec
jp
mov
cmp
je
pop
adc
lret
insl
dec
sti
sbb
faddl
mov
jge
inc
ret
test
call
js
inc
ficoml
mov
stos
jnp
orb
imul
icebp
cli
imul
pop
fistl
pop
cmpsl
sbb
xchg
and
imul
push
repnz
mov
lods
into
ret
jb
push
xor
call
mov
popf
mov
push
movsl
or
lods
fnstenv
sahf
mov
xor
mov
cmp
jno
xchg
mov
jb
int
dec
fwait
push
lcall
mov
sbb
sub
cwtl
sbb
push
out
fnstcw
std
dec
jge
test
stos
jno
sub
js
xchg
cmp
pop
mov
sub
jb
add
cmc
push
mov
out
dec
test
adc
fadds
pop
ss
dec
and
fstps
xor
inc
flds
add
loopne
arpl
hlt
ficompl
iret
shlb
jge
fisttps
fs
or
in
fdivrl
mov
outsb
movsb
test
cli
imul
pop
insb
cmp
mov
inc
inc
cmp
push
in
unpckhps
test
cmpsb
cmp
dec
and
or
cmc
dec
mov
push
push
dec
sub
inc
loope
pop
insb
in
mov
adc
loopne
mov
cs
mov
mov
shll
into
pop
mov
push
gs
insb
mov
mov
icebp
lahf
insb
push
movsl
or
or
ja
jmp
jg
mov
je
rcr
push
out
faddl
out
cld
jmp
mov
loope
push
in
incb
add
test
add
push
cmp
rep
xchg
out
lock
jmp
insl
dec
gs
mov
out
fbld
mov
rcl
and
mov
fcmovne
notb
insl
add
in
mov
in
movsb
mov
adc
testl
pop
cs
or
xor
mov
dec
pop
push
dec
push
mov
movsl
xlat
ficoml
or
aas
mov
sbb
sti
loopne
xor
push
mov
out
sbb
pushl
mov
add
mov
lret
xor
lahf
fnstenv
inc
movl
test
mov
cmpsl
add
sti
cmp
jae
iret
sbb
pusha
xchg
mov
mov
xor
out
add
in
loope
cmp
cmp
ficoml
shll
push
repz
push
jnp
jle
mov
mov
push
cmp
adc
push
insl
scas
push
push
mov
js
mov
cwtl
jle
dec
mov
jg
cmp
cmp
xchg
mov
mov
inc
cmp
mov
sub
jno
jnp
inc
ret
inc
push
dec
sub
imul
dec
jb
fwait
test
mov
bound
xor
out
jl
sbb
ljmp
push
mov
cld
mov
inc
rorb
sbbb
cmc
or
enter
jp
clc
cmp
dec
push
push
push
les
jle
int
xor
jecxz
add
in
mov
jno
push
in
jp
dec
std
adc
into
jno
nop
dec
fldl
mov
pop
mov
loopne
fistpll
cmc
call
push
mov
push
pop
imul
and
xor
lds
call
rclb
test
push
movsb
rcl
jmp
cmpsb
inc
jb
xor
std
jmp
push
pusha
inc
mov
push
nop
std
push
into
push
rorl
ret
loopne
cmpl
pop
jmp
fildl
ret
mov
xor
lea
add
lods
lahf
jl
sbb
sbb
ret
lahf
testl
das
test
and
testl
ret
imul
sbb
jno
mov
add
in
inc
add
out
xchg
sbb
stos
hlt
out
cld
or
lcall
mov
decl
test
jg
or
cmp
lds
les
mov
ja
push
xor
mov
rcrl
xor
insb
fwait
jbe
push
jl
xchg
in
loope
mov
xor
cmc
jnp
dec
scas
and
jl
test
iret
xchg
mov
int
sarb
jecxz
ja
js
sbb
mov
ret
cmp
rcr
xor
pop
stc
push
xor
push
jg
add
xor
dec
addr16
cmpsl
push
xor
test
inc
sub
ljmp
jbe
fdiv
dec
ret
add
fcompp
pop
loopne
nop
outsb
mov
adc
fcmove
out
in
lods
or
fnstsw
cmp
je
inc
stc
lahf
stos
push
inc
add
dec
jne
cmp
icebp
jmp
xlat
jg
mov
xchg
mov
sbbl
int
mov
push
fs
imul
mov
push
dec
adc
add
sub
pushl
mov
add
dec
sbb
fildll
inc
push
into
mov
mov
mov
inc
pop
cmp
lahf
pop
enter
int
pusha
sbb
inc
dec
sahf
fldcw
dec
or
out
loopne
dec
cld
out
es
das
jb
jb
js
xor
cmpb
lret
outsl
jecxz
cmc
mov
sbb
dec
jbe
out
insl
ds
fwait
xchg
push
arpl
into
cmp
jbe
fwait
popf
mov
jmp
out
cmp
mov
ficoms
clc
pop
fisttpl
iret
out
jbe
in
and
mov
rolb
rcrl
rorl
or
jnp
cmpsb
mov
fstpl
push
rcl
lds
pop
movsl
std
scas
arpl
dec
push
mov
test
movsb
mov
xchg
sbb
add
dec
or
mov
jl
cltd
or
cli
loopne
aas
sbb
andb
pop
pop
mov
jmp
fcomps
clc
push
ret
nop
adc
ja
jno
sbb
in
mov
push
in
dec
inc
lcall
jg
lods
std
sbb
sti
xorb
std
fistl
xor
imul
outsl
lock
add
neg
inc
pushf
lahf
inc
inc
cmc
jecxz
addr16
mov
stos
mov
adc
xor
adc
js
shrl
sub
mov
lcall
out
jg
inc
sub
cmp
mov
test
jae
adc
icebp
xchg
mov
dec
push
aaa
int3
into
call
out
fs
xor
cltd
lods
xchg
mov
pop
mov
addr16
in
cmp
decl
icebp
sbb
repz
stc
stc
and
sbb
movsb
fsub
movsl
ds
pop
fisubrl
sub
jg
fnstsw
mov
mov
add
push
nop
cld
mov
dec
ljmp
fwait
add
mov
lret
mov
cmc
push
jbe
cs
pop
lods
add
dec
pop
test
aaa
dec
loopne
mov
popa
mov
jae
and
add
shll
cmc
xchg
mov
mov
daa
cmp
push
jmp
sbb
sahf
repz
shl
rclb
dec
pop
mov
push
fidivrs
mov
push
fdivl
adc
pop
test
mull
jge
repz
sbb
arpl
stc
adc
popf
cmc
jmp
sub
push
clc
add
pushl
and
sbb
je
notl
push
sbb
or
and
xchg
outsb
push
sbb
lret
push
xlat
dec
jbe
push
subb
and
xchg
outsb
inc
stos
lds
sbb
xchg
push
ficoms
mov
inc
pop
dec
in
ss
shl
popf
push
mov
ljmp
fiadds
mov
imul
push
mov
jae
push
dec
mov
ret
adc
es
out
push
int
or
mov
aam
ss
pusha
jge
out
daa
adc
xor
sbb
and
stos
push
mov
or
repz
std
ret
mov
adc
jns
and
jbe
xorb
stos
bnd
jl
insb
mov
bound
add
insb
dec
add
sub
leave
rcrb
add
cmp
ret
mov
mov
imul
mov
or
or
add
adc
cmp
and
push
mov
or
in
add
cmpsl
vpaddw
cltd
cmp
sahf
lret
mov
jns
sub
testb
ret
das
cmp
mov
outsl
and
ja
std
xor
push
mov
pop
and
pop
adc
pop
fldenv
inc
add
inc
mov
arpl
mov
stos
fwait
jbe
inc
dec
fcoml
jae
je
jmp
xor
jmp
dec
mov
add
adc
adc
inc
pop
jno
jmp
imul
imul
mov
or
addr16
pop
mov
and
std
rolb
rcrb
mov
rdpmc
lock
pop
in
pop
cmp
push
sub
dec
sbb
ja
pop
movsl
cmp
xchg
cmp
push
insb
mov
out
cs
push
mov
mov
push
add
push
mov
jno
lahf
fs
mov
dec
rcr
fsubrs
lret
cmpl
cmp
sub
jnp
iret
add
or
mov
imulb
xlat
jge
out
clc
push
push
mov
fildll
movsb
ret
aas
sbb
lods
push
push
inc
decl
mov
out
mov
or
popa
lea
add
cs
and
in
add
repnz
js
xor
imul
jbe
fiadds
push
push
movsb
push
push
daa
adc
in
dec
loopne
sbb
adc
out
inc
jmp
cmp
push
and
sbb
mov
xchg
rolb
fidivs
mov
orb
loopne
das
jns
adc
jo
das
and
fs
jmp
mov
inc
icebp
dec
mov
loop
xchg
xchg
mov
pop
ret
jb
mov
mov
push
mov
stos
push
and
scas
ja
js
dec
mov
popf
mov
inc
fwait
cltd
xor
sbb
cmp
sub
mov
std
jl
push
push
push
mov
aas
jmp
adc
fcmovnu
add
fldpi
mov
add
cmp
add
mov
es
testb
push
sarb
xor
xchg
cmovae
dec
mov
in
imul
cmpl
out
leave
lahf
dec
pushf
cli
cmp
xor
cmp
lcall
adc
testl
pusha
add
fwait
mov
testl
add
lods
not
mov
aaa
dec
push
xchg
out
dec
mov
pop
repnz
jle
jo
imul
jecxz
jns
sub
add
add
sbbl
adc
lods
arpl
mov
cmp
not
fnstcw
pop
fistpll
push
mov
xor
mov
test
push
jns
sarb
xor
pop
repnz
and
and
aas
sbb
xchg
scas
out
pop
mov
push
add
cmc
repnz
loopne
push
pop
stos
in
loopne
arpl
shrb
cmp
dec
lods
mov
js
jo
lock
add
data16
or
sub
inc
call
push
inc
sahf
mov
xchg
pop
mov
icebp
cltd
push
sub
scas
pop
xchg
imul
popa
pushf
mov
mov
rcr
jmp
lods
or
fsubrp
xchg
out
pop
mov
mov
inc
pop
cmp
cmp
sub
push
adc
or
scas
repz
or
sbb
imul
popf
dec
stos
imul
sbb
ja
lods
stos
inc
leave
push
bound
insl
nop
fdivr
stc
ror
sub
ret
dec
mov
sti
jno
je
nop
jbe
out
cmp
dec
and
ret
push
push
ret
cmc
or
cltd
dec
pop
or
add
jge
mov
adc
adc
jecxz
jnp
ret
cmp
lds
or
ret
xchg
shll
ljmp
lods
rclb
iret
cmp
adc
mov
mov
imul
push
jecxz
cmp
jnp
xor
cmc
inc
or
js,pn
iret
jle
test
pop
push
data16
and
in
pusha
jnp
xor
icebp
mov
iret
daa
mov
push
add
cmpl
mov
cs
xchg
sahf
ficoms
jl
xor
add
fidivrs
xchg
mov
and
lods
mov
mov
fists
add
imul
mov
jg
mov
or
add
dec
mov
iret
orb
aad
jb
sub
or
dec
scas
cmp
es
mov
sub
fs
imul
mov
lret
loope
std
into
jmp
mov
sbb
inc
jle
mov
cmp
sbb
rcrl
dec
aas
scas
xorb
icebp
xor
lods
dec
jo
mov
in
jecxz
inc
push
ss
je
cmp
lret
jns
lret
lret
cmc
jne
and
mov
xchg
mov
call
out
push
mov
mov
fisubs
push
std
inc
sarb
jp
int
cld
sub
or
inc
in
sub
inc
adc
adc
cmc
int
mov
jbe
mov
inc
and
mov
stos
mov
sti
fwait
xorl
int3
rcr
or
sub
ret
jae
add
add
xor
ljmp
out
mov
jns,pt
inc
jb
push
es
or
jl
xor
adc
dec
pop
lcall
movsb
lret
pusha
mov
std
dec
pop
mov
sbb
pop
add
stos
mul
incb
dec
cmpb
nop
negb
jl
jae
add
sbb
and
std
mov
dec
aas
and
add
xor
lret
mov
xorl
int
jl
jg
iret
or
addr16
jnp
arpl
mov
insl
jb
xor
mov
inc
outsl
pop
movsb
popa
ss
cmp
std
ljmp
xchg
sbb
arpl
add
inc
xor
ljmp
or
cltd
scas
out
std
push
iret
ss
pop
fwait
out
cmp
mov
mov
dec
scas
int3
arpl
xchg
cld
jmp
or
ja
and
push
stos
scas
in
mov
or
call
cld
test
dec
mov
cmp
cltd
cld
inc
orb
jmp
jg
mov
adc
pop
jl
loope
push
imull
mov
xor
outsb
loopne
cmp
stos
jno
xchg
mov
xor
cmpb
incl
notl
mov
push
fistl
inc
adc
jno
inc
fst
adc
es
add
cltd
int3
cmp
push
xchg
rcrb
and
and
sarl
xchg
cs
sbb
push
jno
jle
and
cmp
xor
and
lret
and
out
pop
test
dec
lods
jl
jne
or
mov
push
out
jg
fistpll
pusha
mov
div
test
es
dec
lret
sub
pop
mov
push
mov
pusha
fldt
notl
daa
push
mov
add
adc
add
mov
testl
jns
add
shrl
sub
xchg
ljmp
lret
rorl
pop
inc
push
dec
push
sbb
sub
jo
int
lahf
pop
rcll
xchg
adc
scas
rcrb
data16
outsl
bnd
rcrb
lret
ret
sbb
sbb
mov
ss
jmp
xchg
push
idivl
jb
push
fsubs
xor
push
mov
cmp
fsubs
adc
stos
mov
ljmp
or
repz
add
loopne
lods
jmp
aam
cmp
lcall
insb
out
dec
orl
fiaddl
std
mov
testl
mov
pusha
push
out
mov
mov
in
push
jg
pop
je
cmp
rcrb
testl
jo
pop
sub
push
div
jns
enter
int3
adcl
xchg
outsb
sub
cmp
cltd
jae
jnp
data16
ss
gs
mov
mov
fwait
cmp
ss
dec
cmp
jae
add
pop
jl
daa
loope
outsl
lahf
sub
adc
cld
in
dec
inc
std
inc
paddq
cwtl
data16
pushl
jp
inc
inc
sbb
je
push
push
mov
dec
pop
ja
clc
into
sahf
mov
push
jo
loope
mov
mov
shrl
mov
lret
nop
cmp
mov
mov
pop
pop
xchg
add
pop
repnz
jnp
jmp
cwtl
cld
out
dec
xor
stc
jmp
mov
pop
or
std
pop
push
mov
dec
jae
movsl
int3
mov
jl
push
dec
push
push
mov
push
ss
aam
adc
add
es
add
stc
xchg
sub
in
frstor
jge
imul
adc
cmp
add
shl
inc
mov
mov
jno
gs
jp
xchg
mov
fcom
outsl
push
sub
and
cltd
nop
push
cmc
lret
pop
insb
jns
fsubrl
pop
int3
push
outsl
out
les
jmp
arpl
fcoml
hlt
inc
mov
jae
jns
push
je
lock
mov
mov
dec
fisttpll
lret
test
mov
test
jle
and
pop
xor
sbb
jo
mov
sub
pop
mov
xor
sti
inc
arpl
fmull
pop
jns
rorb
std
pop
inc
je
sbb
in
push
addr16
aad
das
jno
inc
sbb
mov
sub
lds
sub
in
xchg
push
xor
or
loopne
jge
adc
pushf
mov
call
mov
or
and
cmp
fiadds
int
fwait
sbb
repz
cbtw
mov
mov
sub
scas
shrl
dec
or
jno
or
pop
cld
mov
add
mov
cli
pop
lods
mov
inc
mov
dec
fdivrl
xor
sub
out
jb
rclb
adc
movsb
pusha
iret
cli
arpl
aas
xchg
dec
clc
adc
push
daa
or
xchg
mov
cltd
mov
inc
test
sbb
fsub
andb
pushf
sub
scas
jecxz
cmc
mov
cmp
jb
popa
shl
cltd
loope
pop
mov
ret
mov
fwait
cmp
imulb
lods
fisttpll
or
shll
jo
ja
xor
into
ficompl
inc
xchg
jno
mov
or
sbbb
into
jle
pop
insb
mov
scas
sbb
arpl
inc
fbld
cmp
mov
ja
xchg
mov
inc
push
jo
addr16
rcrl
mov
int3
nop
mov
sub
add
or
cmc
cwtl
loope
inc
int3
mov
mov
push
and
pop
inc
jl
test
sbb
mov
sti
arpl
jl
call
pop
or
into
stc
jno
xor
mov
ret
adc
cmp
adc
fimuls
std
cmc
les
jg
mov
loope
lock
ret
rol
pslld
jge
ret
jae
dec
lahf
imul
xchg
jb
arpl
sbb
xchg
loope
incb
sub
insb
add
in
push
xchg
xor
stos
mulb
or
cmpsb
jne
insl
cmp
push
add
jo
mov
pushf
ret
xor
hlt
push
fs
mov
mov
sbb
fisttpll
fcomi
scas
test
inc
xor
lock
fisttpll
mov
movsl
iret
fwait
inc
mov
ret
push
sbb
hlt
nop
xchg
dec
cld
shlb
mov
pop
clc
sti
push
mov
dec
sbb
lods
sbb
pop
cld
lret
in
mov
and
sub
fwait
jns
xlat
mov
jmp
inc
sub
data16
test
addr16
push
jg
std
pop
hlt
mov
mov
repz
push
or
jae
jmp
stc
fcompl
pop
jge
aam
fnstenv
sbb
loopne
mov
jae
mov
mov
outsb
mov
xor
stos
stos
mov
cs
ret
out
xor
icebp
andb
dec
inc
jmp
lock
mov
outsl
pop
push
pop
add
das
nop
inc
addr16
adc
sti
sbb
and
sti
popa
out
insl
je
push
xor
inc
jg
data16
xchg
lret
jmp
push
fwait
inc
in
pop
and
daa
cmp
imull
xchg
jns
dec
sub
cmp
cs
xor
adc
sbb
jno
adc
mov
xchg
imul
adc
rorl
add
mov
out
jnp
mov
mov
loopne
adc
dec
jmp
push
in
ds
push
and
push
ror
push
bound
mov
mov
jno
jg
cmpl
add
xchg
and
sbb
fdivl
add
shlb
cmp
sbb
mov
ret
ja
jae
dec
jmp
adc
sub
sarl
in
xchg
out
push
in
adc
jecxz
clc
mov
or
out
push
fwait
in
and
dec
mov
in
movsb
jbe
loopne
or
xchg
cli
add
dec
es
adc
mov
pushf
loope
mov
lahf
mov
cmp
out
test
fxch
or
add
sbb
dec
int3
mov
fldt
shrl
je
or
insl
xchg
cli
mov
test
pop
mov
out
jecxz
mov
jg
addr16
xchg
out
pop
mov
inc
push
cmp
aas
stc
mov
clc
sbb
cmpsl
jb
jae
push
mov
ja
and
mov
mov
loope
imul
in
mov
jmp
loop
iret
sub
pop
jnp
fwait
insb
sub
xchg
cmp
std
dec
mov
test
andl
sbb
xchg
xchg
sbb
dec
push
add
rorl
xchg
xorl
ljmp
or
enter
fdivrp
iret
leave
lret
loopne
scas
jbe
mov
mov
sub
push
jne
pop
add
sub
insb
psrlq
inc
mov
xor
jg
or
fwait
sub
punpckhdq
rorb
mov
js
leave
push
fidivl
sti
cmp
sub
mov
std
add
fwait
leave
pop
inc
mov
pop
pop
and
jmp
insl
enter
mov
mov
push
icebp
movl
fstpt
sub
push
call
scas
loopne
andl
push
les
test
inc
mov
dec
or
mov
jl
push
jmp
neg
adc
or
push
stos
es
jl
movsl
imul
push
lea
idivb
scas
sbb
scas
ja
add
adc
int3
repnz
and
insl
adc
lock
push
jb
mov
or
nop
out
in
pop
lret
dec
pop
sub
es
mov
dec
pop
mov
jecxz
aam
sub
and
jnp
pusha
pop
mov
jnp
into
fiadds
adc
sub
insl
ljmp
ret
scas
mul
and
pop
sbb
lcall
sbb
inc
pop
jb
fldl
add
sub
xchg
or
push
add
mov
in
je
lret
sti
insl
outsb
outsb
add
repz
mov
stc
rcr
or
mov
enter
imul
fistps
mov
jb
push
sub
mov
mov
stos
addl
cld
incb
scas
sbb
mov
lds
inc
loope
movsb
jb
fidivs
inc
adc
push
mov
push
mov
mov
cmc
xorb
mov
nop
dec
mov
adc
inc
call
stos
push
adc
fstpt
sub
jae
mov
sbb
sarl
dec
cwtl
sti
dec
arpl
lods
xlat
push
jmp
cmp
test
jg
repz
cmp
jg
mov
xchg
jae
and
dec
adcl
cmc
movl
mov
mov
imul
nop
adc
adc
and
lcall
rorl
fwait
in
std
xchg
and
and
push
mov
adc
pusha
loopne
cs
fucomp
clc
add
sub
out
js
test
and
pop
dec
fildl
or
add
pop
sbb
push
pop
inc
and
jnp
dec
js
pop
mov
sbb
inc
jae
ja
insl
push
cmc
or
scas
lahf
inc
jo
and
shr
mov
and
lods
add
mov
sarl
fstps
pusha
pop
movsl
mov
in
xchg
mov
ja
dec
mov
add
pop
sub
pop
xor
or
mov
mov
lret
inc
add
mov
jg,pt
mov
fidivl
lahf
stos
dec
cmpsb
aad
or
mulb
aas
inc
je
sbbb
loopne
iret
cmp
dec
or
push
jb
cmp
test
es
sub
fsubp
cmpsb
pop
test
test
sub
ss
cmpsb
gs
sbb
or
mov
lock
lods
or
add
push
sub
lret
cmp
mov
stos
dec
daa
cmp
jl
out
decl
xor
incb
cmp
loopne
sti
jmp
mov
cld
mov
push
sbb
ret
cltd
cmp
rolb
lea
decl
pop
mov
aad
jno
mov
or
sbb
xor
xor
pop
sar
mov
pop
xor
stc
push
jecxz
pop
cs
xor
insl
xchg
test
pop
stos
inc
inc
call
ds
iret
mov
add
mov
js
jns
jno
mov
iret
jmp
push
test
adc
mov
push
dec
gs
mov
add
jg
out
or
ja
in
addr16
jb
dec
aaa
pop
lods
clc
outsl
mov
jmp
jno
stos
sbb
push
pop
inc
push
mov
loopne
adc
les
and
push
lret
inc
loope
test
loop
lret
inc
ret
mov
push
jmp
pusha
dec
aad
repz
call
cmp
inc
loop
cmp
mov
icebp
out
add
aas
imul
or
ret
fs
dec
sub
inc
cli
jno
pop
bound
pop
es
pop
mov
das
sub
pusha
jnp
pop
jmp
pop
adc
fistpll
mov
jno
mov
sahf
cld
mov
mov
or
test
lods
test
dec
pop
lret
out
pop
sub
or
push
mov
stc
sbb
mov
sbb
dec
adc
test
sub
mov
xchg
pop
push
xchg
xlat
rorb
dec
push
xchg
xor
pop
inc
mov
bound
lcall
cmp
jae
cmp
and
dec
mov
or
mov
inc
cmpsl
lahf
or
and
adc
cwtl
imul
imul
lret
icebp
rolb
mov
stos
stc
jb
push
sarb
in
clc
fcmovnu
ret
test
movsb
sbb
das
lods
out
rorb
jmp
loopne
iret
lret
fnstcw
mov
or
adc
sbb
jg
xor
imul
adc
leave
mov
bound
popa
pushf
std
push
lretw
add
movsb
pop
int3
in
push
out
aas
sbb
xor
in
clc
repnz
pop
mov
cld
ja
test
mov
push
mov
andb
push
and
outsl
push
and
pop
cmp
enter
into
cmp
scas
or
jg
push
adc
icebp
addb
or
and
scas
mov
xchg
mov
or
pop
out
lcall
andb
outsl
aad
and
mov
sti
out
icebp
test
filds
aam
sub
mov
push
cmpsl
push
sub
or
out
faddl
jg
jl
pop
pusha
jmp
jo
cmp
fs
mov
fsubr
mov
inc
aas
idivl
cwtl
gs
rorl
ja
or
xchg
gs
xchg
repz
sub
jecxz
ret
pop
bound
xchg
sub
inc
out
aam
jno
jnp
adcb
enter
mov
sub
jnp
daa
or
pop
insb
jmp
adc
mov
or
sbbl
and
pop
pop
rol
cmp
je
push
inc
lahf
mov
pop
mov
rol
ret
fsubs
inc
mov
push
pop
mov
push
mov
pop
jbe
pop
pop
xchg
aas
rorl
rcrl
jnp
adc
mov
and
rcr
mov
clc
int
test
jl
cmc
in
shlb
cmpsl
fdivl
push
imul
cld
dec
xor
sahf
jl
popf
pop
sbb
insb
roll
mov
cmp
mov
fsubp
jo
cltd
cmp
or
sbb
mov
xor
dec
pop
fisubrs
mov
fdivrp
mov
pop
xchg
jl
mov
mov
mov
std
jmp
adc
lds
mov
ffree
pop
icebp
adc
dec
xor
sub
stos
adc
sbb
and
les
scas
int
sbb
adc
sahf
mov
inc
add
mov
sub
push
xchg
cmpsl
jno
loop
push
jnp
stos
les
insb
inc
sub
lods
sti
inc
std
dec
cmp
sahf
mov
pushw
push
repnz
mov
sbb
push
xor
cwtl
lret
mov
test
int3
lock
pusha
mov
outsb
sbb
cmpsb
push
xchg
jmp
inc
pop
dec
mov
adc
into
mov
mov
mov
push
fwait
xor
lahf
jns
outsl
pop
enter
pop
and
pop
insb
out
mov
sbb
sub
cmpsl
roll
movsb
repz
push
mov
adc
xor
or
pop
adc
cmp
mov
out
pop
ja
mov
push
xor
xchg
incb
mov
push
scas
mov
add
sbb
mov
mov
dec
sub
iret
cmp
sub
test
jmp
or
addr16
jb
loope
cmpsb
shll
pushl
sahf
repnz
jp
es
addl
and
ljmp
in
jg
push
pusha
fsubs
insl
jno
pop
push
out
pop
xor
jmp
pop
inc
and
dec
andb
xchg
int
in
fs
dec
sub
ret
and
aad
xchg
popf
aad
sub
ret
int
bnd
cltd
and
dec
aam
popf
or
aam
jnp
xor
in
or
sub
push
push
jge
jae
imul
lods
or
push
cmp
pop
inc
jb
out
mov
daa
xor
push
pop
sbb
int
xchg
les
fwait
pop
pop
push
push
popf
add
loop
lods
add
dec
inc
mov
ret
mov
push
out
addr16
imul
daa
push
cwtl
dec
xchg
cmp
push
or
frstor
push
mov
inc
mov
fwait
lcall
push
pop
es
sub
adc
add
cmpsb
mov
pushl
add
rorl
mov
sub
and
inc
sub
sbb
enter
outsl
sbb
pop
inc
sub
scas
movsb
cltd
jnp
push
inc
xor
jae
and
dec
int3
push
or
add
ja
cmpsl
pusha
push
push
mov
add
out
adc
in
stc
lods
adc
out
adc
ja
int3
sub
lock
jb
inc
iret
ljmp
repz
lret
outsl
cld
inc
mov
mov
pusha
cmp
mov
adc
mov
xorl
mov
ret
cmp
pop
or
cmp
pop
xlat
insb
nop
lods
fstp
das
mov
int3
and
popl
xor
mov
lret
popa
fwait
icebp
test
adc
sbb
pop
add
jmp
mov
jecxz
mov
je
loopne
sarb
rcrl
lock
aam
xchg
out
xor
xchg
pop
fimull
std
dec
inc
sub
mov
push
pop
aaa
out
mov
jle
js
fdiv
xor
dec
lret
mov
ljmp
nop
and
js
add
mov
ljmp
into
pop
icebp
push
rclb
enter
popa
ds
mov
inc
push
imul
out
int
sub
mov
loopne
mov
sbb
add
ret
dec
popl
cwtl
adc
mov
sbb
out
and
adc
inc
or
lea
sbb
lret
jnp
and
mov
loop
or
popa
adc
mov
mov
inc
std
jbe
push
sbb
or
dec
lfs
out
rclb
insb
or
sub
mov
aam
add
popa
sbb
add
adc
or
jno
adc
dec
fwait
cmp
xchg
jecxz
mov
and
dec
pop
fs
sbb
fs
sarl
mov
mov
jo
and
call
mov
jg
sahf
jg,pt
mov
decb
pop
leave
inc
or
sub
xchg
jns
lcall
jmp
in
pop
arpl
and
xor
sub
test
pop
sbb
negl
dec
aaa
sub
out
lret
or
mov
fmulp
fidivrs
jbe
int3
sbb
ss
inc
cld
push
in
mov
int
inc
pop
subb
in
fisttps
loope
bnd
sub
mov
xor
or
stc
jmp
fisubrl
mov
fstpl
mov
sti
cwtl
sbb
push
jo
sub
inc
add
sub
adc
fmull
es
cltd
jecxz
push
repnz
pusha
sahf
pushf
outsb
incb
xchg
das
cmp
icebp
inc
sbb
repnz
mov
lea
mov
jbe
cwtl
xchg
js
mov
shlb
adc
jb
xor
punpcklbw
mov
out
shlb
pop
adc
push
cmp
test
mov
or
xor
pusha
cmpl
jg
out
in
pushf
lahf
es
fstpt
sbb
iret
fcomps
bound
dec
push
cmp
push
imul
pop
xchg
pop
lea
jb
hlt
aas
rclb
out
pop
sub
adc
mov
push
mov
dec
cmp
push
ds
adc
jge
ss
adc
jge
inc
imul
adc
mov
or
xchg
mov
push
and
test
sbb
xor
in
ljmp
mov
xor
inc
pop
lock
stos
mov
mul
mov
std
out
cmc
repz
sbb
cmp
cli
mov
mov
cmp
lahf
ror
clc
in
inc
std
mov
shlb
add
jnp
scas
cmp
mov
or
pop
adc
ret
addb
and
xchg
mov
xchg
fwait
roll
nop
or
jg
movsl
jl
jnp
leave
or
rcrb
mov
ljmp
stc
daa
jbe
in
loope
jp
sbb
xchg
lahf
mov
inc
xor
iret
jbe
jb
dec
pop
cmp
jbe
je
jge
pop
add
cmp
fcmovnb
sub
xor
in
sub
push
cs
popa
jns
mov
xchg
sub
repz
inc
jae
sbb
mov
add
inc
loope
mov
adc
or
inc
in
int3
mov
lcall
adc
fistps
mov
pop
sub
inc
push
xchg
pop
sbb
sbb
inc
ficompl
xor
jno
movsl
pop
imul
mov
lods
gs
insl
add
es
lret
mov
xchg
dec
iret
out
adc
and
sbb
insl
adc
ja
dec
push
sbb
es
ficomps
into
data16
xchg
inc
jbe
or
push
cmc
movsb
inc
jmp
divb
mov
mov
mov
add
push
xor
jl
lea
dec
or
xchg
in
push
push
mov
jno
jl
adc
add
shlb
add
adcb
icebp
daa
insb
mov
mov
popa
cmpsb
les
cmp
mov
xor
and
push
pop
xchg
imul
jno
push
jecxz
xchg
cltd
pop
lods
mov
push
aas
xchg
in
nop
outsl
mov
in
cmp
pop
popf
push
adc
cmp
bound
push
inc
lods
add
daa
push
cmp
or
and
mov
cmp
mov
aad
xor
sub
nop
add
data16
int3
cmp
std
aas
lea
cmpsb
stos
clc
cmpsb
cwtl
lock
sub
int3
ljmp
dec
clc
ficompl
cmp
popa
xchg
das
mov
repnz
insl
nop
add
in
xchg
mov
jmp
mov
cmp
cmc
andl
shl
push
mov
jno
jae
lea
jmp
int
gs
mov
xchg
add
nop
cli
sbb
adc
mov
stos
test
mov
push
sbb
divl
nop
add
and
push
pushf
push
cmpsb
mov
jg
data16
test
filds
jmp
dec
iret
ds
inc
std
dec
movsl
and
decl
push
es
insl
mov
sti
cmp
enter
into
dec
cmp
lea
jg
jne
mov
outsl
sbb
dec
cmpsl
xchg
xchg
pop
adcl
testl
xor
fiaddl
mov
fwait
mov
jae
mov
jl
jne
dec
loope
push
movl
daa
iret
mov
adc
int
shll
aam
add
inc
insl
sbb
xchg
push
clc
inc
stc
ja
pop
push
leave
rcll
imul
aas
ficomps
mov
clc
iret
or
das
incb
or
and
inc
add
cli
inc
addl
out
int
pop
adc
shrl
pop
jnp
jecxz
and
sub
loopne
ja
cwtl
andb
pop
add
mov
fistpll
adc
dec
aaa
pusha
iret
iret
mov
bound
mov
mov
mov
mov
sub
mov
lret
std
dec
add
add
lea
jg
movsb
xor
mov
or
sbb
outsl
cmpsb
shrl
vmread
rcr
mov
sbb
sub
pop
dec
add
dec
pop
jl
das
cmpsb
lahf
push
imul
std
pop
inc
or
cmp
pop
divl
xchg
and
mov
pop
rep
int3
es
frstor
inc
bound
xchg
das
pop
push
jg
cmpsb
stos
ret
add
and
push
sbb
jge
lea
dec
mov
mov
cmpsl
stos
movsl
into
lods
stos
jno
or
push
dec
imull
mov
lds
xchg
jge
out
lods
js
movsb
sbb
inc
and
and
in
rcrl
div
ret
add
mov
xchg
jl
out
cwtl
pop
cmp
adc
repz
mov
stc
push
sbb
jecxz
jmp
je
inc
jns
mov
inc
das
sub
repnz
test
mov
and
pcmpgtd
shl
cmp
out
jae
fldenv
stc
cmpsb
sbb
test
insl
sub
andb
hlt
loope
leave
push
dec
int3
dec
repz
leave
leave
and
or
jnp
push
js
out
pop
loop
mov
push
mov
dec
push
cmpsb
adc
push
lods
add
in
test
ss
arpl
mov
popf
jns
fdivrs
cmp
pop
mov
imul
mov
push
pop
pop
jl
arpl
xchg
push
mov
jl
insb
dec
mov
movsb
push
add
sarb
sahf
sbb
fcoml
add
rolb
stc
int3
inc
mov
int
pop
hlt
fisttps
scas
jno
xor
mov
push
or
shlb
test
aad
xchg
and
ja
ficompl
andl
int
mov
mov
mov
movsb
mov
or
out
fdivs
sub
std
mov
xchg
xor
pop
sbb
arpl
pop
lods
cmp
inc
in
mov
cmc
pop
pusha
add
aad
push
cld
push
scas
fidivl
sub
cwtl
loope
inc
pop
sub
in
pop
and
cmp
xorb
pop
mov
xor
scas
loopw
xor
xchg
fisttpl
scas
lods
aaa
fidivrl
pop
lret
inc
addr16
movsb
jbe
fimuls
dec
imul
mov
test
jnp
adc
or
mov
out
fwait
jae
fstpl
push
jae
and
mov
data16
dec
adc
in
mov
adc
inc
lods
out
imul
xchg
adc
inc
xor
push
test
adc
fwait
dec
ds
pusha
repz
into
jg
iret
mov
out
xlat
and
insb
inc
lret
sbbb
add
jg
pop
dec
fcomps
inc
dec
fstpt
cmp
mov
cmp
scas
jle
mov
sub
mov
lahf
imul
cmpsl
sbb
lret
bound
mov
aaa
lods
mov
cmp
out
and
xor
dec
dec
pop
cmpsb
mov
mov
pop
fs
decl
fisubrs
stc
cmp
push
xchg
das
push
sbb
or
sbb
into
lods
int3
jbe
mov
or
pop
sub
bound
inc
out
lahf
pushl
data16
lahf
xchg
sbb
mov
dec
mov
inc
out
push
sarl
mov
add
cs
sti
imul
loop
mov
data16
out
mov
pushl
nop
jl
pop
pop
idivl
jnp
pop
jg
add
icebp
dec
ret
movsl
insl
jmp
es
sbbb
mov
mov
jl
scas
lea
nop
pop
out
mov
xchg
adc
mov
pop
and
out
mov
push
test
mull
mov
pop
sub
movl
add
scas
and
sbb
mov
or
dec
adc
mov
mov
push
scas
ror
and
or
jb
push
xchg
mov
xor
lcall
jg
lock
mov
jg
rcr
cmpsl
dec
out
mov
addr16
insb
fmull
bound
xchg
jns
inc
pop
mov
add
cmp
test
mov
add
jno
sbb
or
fxch
xchg
dec
xor
stos
mov
test
jmp
or
adc
hlt
inc
dec
mov
ljmp
sahf
lret
dec
xchg
adc
jbe
shr
ja
std
mov
ja
sahf
inc
xchg
sbb
push
shrl
inc
repz
and
cltd
adc
jge
data16
cmc
push
fistl
aas
or
lret
push
xor
popf
iret
in
call
adc
pop
mov
dec
fstp
mov
scas
vandnpd
pop
pop
outsb
sub
cli
popf
push
adc
push
jns
fsubr
mov
loope
gs
mov
outsb
pop
lock
addr16
fidivs
cmpsb
jp
fisttpl
mov
jae
adc
popf
pushf
inc
push
insb
pop
mov
imul
push
push
mov
push
into
fwait
xchg
inc
pop
jle
js
pop
and
xchg
aam
dec
mov
hlt
or
pop
xlat
shr
mov
hlt
push
xor
cmp
clc
jg
bound
out
filds
dec
les
add
fs
or
dec
addl
push
add
inc
leave
pop
and
adc
jmp
data16
xchg
fimuls
fistpl
aaa
xchg
xor
xor
lds
xlat
ss
jnp
jmp
and
sub
mov
pop
jge
dec
mov
and
inc
add
in
es
cmc
sbb
sbb
mov
stc
insl
pop
stc
cld
in
scas
push
add
push
xchg
rcr
in
out
mov
ret
in
aas
les
cmovns
scas
mov
int
mov
imul
cmc
into
xchg
scas
mov
clc
in
imul
add
ret
jmp
imul
lret
movsb
or
int3
std
or
dec
inc
popf
lods
cs
outsl
mov
stc
mov
cmp
inc
adc
mov
cmp
push
dec
adc
or
mov
ja
sbb
jl
sub
scas
dec
enter
adc
insb
dec
iret
ret
inc
cmp
add
push
xchg
iret
push
sbb
gs
movsb
test
rorl
loopne
test
push
and
aam
imul
rcll
and
lcall
fs
notl
test
xlat
xor
dec
loopne
sbb
jbe
sub
add
data16
adc
and
test
stos
inc
mov
daa
inc
pusha
push
cld
jo
sub
or
fcoms
mov
lods
inc
dec
xor
stc
pop
cmp
test
gs
scas
cmp
inc
add
sub
or
cli
sub
lahf
leave
add
mov
and
push
inc
call
or
xor
repz
push
dec
sub
or
shll
dec
pop
inc
push
push
adc
or
and
iret
fdivrs
pop
mov
test
aas
movsl
sub
out
xchg
push
pop
jbe
out
mov
jns
out
adc
fwait
or
mov
fwait
pop
inc
mov
rol
mov
jle
sbb
fwait
jb
mov
add
push
push
pop
cmp
inc
mov
push
push
sbb
test
cmp
in
mov
sti
iret
cli
icebp
xor
mov
mov
inc
sbb
xchg
add
push
data16
xchg
enter
fwait
mov
loopne
mov
addl
push
xorb
lcall
jnp
push
fldenv
out
jg
jg
pusha
mov
sarl
and
xorl
js
ljmp
mov
sbb
out
cmpsl
or
aam
ja
push
xor
add
loope
add
mov
lahf
pop
gs
sub
or
push
mov
fwait
jmp
mov
mov
jge
pop
fwait
cld
sub
xor
je
pop
push
cmpb
xchg
adc
hlt
add
push
stos
push
cmpsb
adc
clc
jb
sub
sti
add
xor
dec
xchg
mov
dec
scas
imull
movb
pop
cld
enter
cmp
sarb
push
mov
push
scas
push
call
cmp
shlb
push
xor
mov
int3
sbb
scas
sti
hlt
push
dec
jl
fmul
cltd
arpl
push
dec
pusha
pop
shl
jmp
xchg
fxch
push
es
jae
cltd
popf
cmpsb
sbb
jl
out
rcll
outsb
jno
fistpl
dec
mov
add
popf
or
test
xchg
jmp
dec
inc
push
subb
jl
pop
mov
sti
mov
shll
or
mov
mov
mov
cmp
mov
jbe
mov
orl
pop
lret
lock
jmp
je
mov
fst
fs
popf
pop
xchg
negl
jne
jg
popf
inc
ljmp
cmp
repnz
outsl
xor
pop
scas
sbb
out
in
push
cmpsb
pusha
adc
testl
jae
adc
push
out
test
push
subb
mov
sbb
xor
in
sub
jmp
adc
jg
mov
dec
imul
add
sbb
adc
mov
cld
fs
rcl
dec
aaa
xor
or
sbbb
mov
lods
lcall
cmp
sbb
push
pop
jp
inc
cmp
and
push
or
in
adc
add
sbb
xor
jbe
ret
sub
pushf
xlat
in
sub
cwtl
aad
mov
sbb
dec
adc
pop
fisttps
cmp
sub
mov
pusha
mov
neg
test
mov
aaa
or
dec
xor
adc
lahf
mov
jmp
and
cmp
jmp
jns
mov
jae
loopne
mov
popf
arpl
fcmove
imul
mov
cmp
in
test
inc
addr16
jno
mov
stos
mov
into
test
in
dec
lock
mov
fucomip
lds
jg
int
dec
add
inc
cmp
push
sbb
lcall
orps
push
jbe
xor
fs
dec
inc
push
cli
mov
repnz
cmc
mov
pop
push
jmp
lahf
adc
scas
cltd
not
xchg
mov
popf
in
sub
fwait
adc
sbb
lahf
pop
jae
js
int3
jl
pop
mov
push
lahf
decl
inc
add
imulb
adc
and
rolb
fbld
dec
dec
xor
fwait
xchg
ljmp
xchg
fdivl
or
aaa
pop
xlat
xor
cmp
sar
sti
push
cwtl
mov
pop
js
mov
cmp
dec
shll
lock
xor
jnp
sub
lods
cmp
sub
mov
push
mov
out
movsb
fwait
call
add
loopne
ljmp
dec
add
cwtl
cmpsl
lds
mov
daa
push
inc
or
sub
jl
sub
and
mov
iret
loopne
jno
ficomps
addr16
xchg
je
fcmovnu
pop
dec
mov
add
cmp
mov
scas
sub
outsl
pop
and
pusha
dec
jnp
negl
jmp
fbld
mov
cmpsb
dec
int3
ljmp
leave
repnz
jmp
ss
je
adc
xlat
sbbb
mov
jb
ja
and
fucomi
and
stos
xchg
ret
int
dec
mov
pop
inc
cltd
or
push
ds
push
mov
mov
out
das
adc
cmp
and
xchg
aam
push
push
or
adc
mov
mov
es
push
xchg
dec
inc
sti
mov
fwait
decl
clc
stos
rorb
lds
push
xchg
jmp
fidivrl
jl
adc
add
cli
or
xor
cmp
pop
mov
adc
jg
popa
lds
lret
and
fcom
jecxz
adc
pop
dec
mov
mov
mov
test
stc
mov
inc
nop
xor
mov
loopne
jmp
clc
movsl
dec
xchg
je
add
mov
mov
jne
sti
icebp
adc
hlt
sar
add
mov
test
jno
fcmove
and
data16
push
arpl
push
adc
pop
sub
or
pop
in
iret
mov
jecxz
add
and
inc
fisubrl
movsl
loope
mov
sbb
push
cmp
pusha
pusha
lret
cwtl
test
test
int3
sbb
mov
xchg
dec
cmpps
daa
sbb
cmpsl
xchg
insl
mov
enter
movsl
add
mov
pop
mov
and
cmpsl
ss
sub
xor
out
loopnew
dec
mov
iret
dec
mov
inc
mov
mov
mov
adc
cmpsb
adcb
pushf
adc
pop
or
xchg
daa
sub
lret
loope
aam
sbb
dec
mov
sbb
stos
dec
push
pop
cmp
leave
xchg
movsb
and
je
imul
pop
jg
cmp
nop
mov
cltd
int
fisubl
sub
jg
pop
aad
inc
xor
mov
mov
cmp
daa
in
inc
push
ret
outsl
scas
fucomp
inc
aad
fisttpl
int3
jl
inc
mov
push
add
jae
sbb
aaa
bound
cmpsb
adc
popa
push
adc
stos
inc
xchg
sub
push
cmp
pop
popf
adc
and
push
imul
pop
sbb
mov
pushf
sbb
mov
stc
in
jae
clc
add
jl
adc
inc
cli
mov
or
lods
notb
jmp
xchg
stos
mov
xor
pop
xchg
loopne
ret
mov
xor
cmp
inc
fwait
out
aam
insb
xchg
ds
fldl
mov
inc
mov
arpl
fmull
repz
jp
lds
icebp
test
mov
shll
sub
js
adc
ret
mov
cmp
fstl
xor
dec
flds
sbb
and
xor
das
repz
aas
lds
in
ret
outsb
adc
cmc
shll
cmp
push
jl
jb
fistpll
orb
inc
out
or
sarb
push
jne
adc
cltd
loop
stos
orb
loopne
shll
lods
ljmp
xor
inc
jb
xor
push
cmpsb
hlt
repnz
rcr
icebp
mov
and
jno
mov
xchg
inc
and
jo
jmp
rorb
lret
int
arpl
scas
ss
into
dec
ret
popa
mov
leave
filds
dec
scas
inc
inc
xchg
es
adc
ljmp
into
ja
sub
dec
stos
ret
mov
xchg
mov
cwtl
setg
scas
xchg
inc
jnp
mov
cmp
add
mov
cli
lret
insb
jno
clc
cmp
arpl
idiv
dec
fs
stc
jnp
mov
iret
shrl
rcrb
scas
icebp
cmp
js
pusha
xchg
cwtl
sbb
or
adc
arpl
lea
mov
sub
inc
push
das
mov
ljmp
push
mov
call
addb
xchg
aas
xchg
cmc
stos
inc
pop
sahf
popa
mov
jmp
mov
pop
lret
inc
add
cmp
ret
ja
mov
push
pop
inc
bound
rolb
add
scas
add
push
insl
repnz
sub
xchg
xor
test
or
inc
mov
or
fmuls
mov
ljmp
dec
aam
jb
mov
mov
mov
fldcw
pmaddwd
fwait
mov
ljmp
jg
xor
xor
push
mov
aaa
cmp
mov
push
lods
stos
mov
jl
push
jae
inc
test
out
mov
shlb
ss
mov
in
jecxz
scas
ret
test
lea
jg
test
and
or
pop
cmp
movsb
test
scas
push
push
mov
push
mov
pop
or
xchg
std
std
loopne
mov
add
mov
cmp
and
or
inc
arpl
int
push
out
add
cli
mov
mov
rcrl
and
cltd
ficompl
mov
mov
cmp
fstpl
stos
lea
xchg
adc
sbb
add
adc
xlat
dec
pop
cs
inc
stc
push
int3
dec
gs
add
jmp
jmp
jg
xor
insl
mov
cmpsb
rcll
sti
fistpl
ja
andl
imul
fwait
jns
pop
inc
sbb
jg
pop
push
xor
mov
out
es
mov
int3
orl
add
jae
and
jo
fwait
or
mov
mov
xchg
into
xchg
clc
test
xor
mov
jae
mov
leave
fsub
mov
xor
inc
fisubrl
jae
sarl
jl
jg
out
sbb
divl
and
nop
cmp
push
dec
aam
push
jle
fucomip
xchg
pop
repnz
addr16
mov
jecxz
mov
into
cmp
xchg
add
mov
add
insb
in
jg
cmp
mov
dec
inc
dec
pop
pop
in
lods
and
adcb
out
nop
xlat
add
arpl
repz
mov
aad
mov
leave
cmp
jl
xor
loopne
daa
sti
pop
mov
les
loope
dec
jge
roll
mov
pusha
cwtl
inc
stc
cltd
xchg
pop
inc
rcrl
shl
in
xchg
jle
cmp
gs
mov
xor
add
sar
sti
add
add
daa
sarl
pop
shll
jne
and
add
ret
mov
popf
lret
mov
mov
dec
adc
orb
dec
repz
fisubrs
popa
aad
sub
or
push
leave
push
push
nop
notb
add
pusha
mov
inc
fs
xchg
fists
mov
cwtl
or
lahf
lret
mov
jno
out
push
jmp
pop
mov
or
call
pop
ret
jl
aad
sub
loopne
inc
cld
divl
xchg
add
shl
pop
lret
out
dec
popa
pop
or
push
jno
dec
xor
or
imul
rorl
outsl
or
push
into
mov
hlt
je
repz
mov
xor
jmp
lds
rcrb
mov
call
ds
mov
pop
arpl
mov
call
pop
or
pop
sub
sahf
pop
jp
push
dec
xchg
in
pop
pop
inc
cmpl
sti
popa
push
shl
add
or
xor
mov
and
pusha
mov
xchg
adc
lea
jecxz
leave
pop
pop
movl
int
lods
sarb
and
dec
int3
mov
sub
mov
scas
and
ja
and
fucomi
cmpsb
and
add
xchg
dec
shrl
or
add
out
pop
jns
fimuls
push
jg
test
jae
je
cwtl
and
ret
adc
fwait
adc
and
lret
aas
lods
std
std
jg
pop
imul
lea
push
ficompl
mov
sub
out
outsl
aam
sub
ret
lds
fwait
out
insb
cmp
nop
int3
nop
ja
aad
das
jle
sbb
cmc
mov
mov
cmpsb
add
inc
icebp
or
pop
test
popa
dec
cs
sbb
inc
cmp
mov
loope
into
sbb
movsb
outsb
loopne
lret
je
jmp
inc
jne
dec
pop
shr
mov
jmp
jbe
adc
out
in
add
mov
ret
sbb
aas
mov
testl
addb
inc
es
mov
std
mov
es
xor
outsl
add
push
mov
add
bound
add
xor
into
inc
xchg
jmp
dec
mov
xchg
mov
insl
aaa
fxtract
xor
mov
inc
lea
mov
loope
iret
mov
and
incl
mov
cs
adc
mov
push
loopne
pop
cmp
cmp
or
lods
fldcw
jae
sbb
in
faddl
fbld
ret
inc
clc
xlat
inc
push
in
or
sub
mov
sti
orb
clc
dec
daa
mov
cmp
in
adc
out
pop
adc
cwtd
rep
int
cmp
addr16
fwait
jle
incb
in
test
push
mov
cmp
or
inc
cmp
cld
adc
mov
mov
inc
add
loope
rorl
mov
inc
push
lds
les
mov
imul
pop
and
mov
mov
mov
cmp
mov
int3
jae
movsl
mov
pop
jmp
xchg
and
mov
mov
mov
pop
push
add
jno
push
cmpsb
xlat
fwait
cld
mov
pop
mov
sub
mov
imul
outsb
and
mov
mov
shlb
mov
outsb
in
in
xorl
inc
xchg
inc
mov
push
mov
inc
and
sub
adc
inc
cmp
ret
sbbl
mov
push
arpl
push
outsl
sub
dec
test
mov
jg
scas
fsubl
hlt
push
lea
mov
imul
sub
pop
fisttpl
add
push
and
fs
shl
inc
lahf
push
std
movsb
jne
stc
movsl
jp
subb
jle
dec
jl
xor
addl
mov
pop
hlt
add
mov
mov
jmp
cli
dec
jmp
inc
test
lods
imul
setnp
sub
insb
jne
mov
mov
adcb
xlat
jle
pop
push
adc
jb
and
inc
popa
push
sbb
fdivs
jecxz
sub
insb
sbb
loopnew
rolb
stos
jge
sub
leave
cmp
js
fs
pop
scas
fiadds
test
ja
add
xor
jne
test
dec
cmp
dec
cs
push
adc
cs
data16
sub
loope
and
fistpl
sahf
aas
xchg
mov
jno
fnstenv
mov
int
pop
add
in
fnstsw
and
daa
out
icebp
in
push
mov
insl
pop
jns
lods
movsl
mov
xchg
pop
les
mov
sub
movsb
push
scas
push
push
andb
jbe
daa
daa
test
xchg
add
jns
in
popa
mov
cwtl
xchg
push
sub
icebp
mov
mov
ljmp
stc
lret
cmp
mov
xchg
lret
xchg
xor
js
sbb
in
test
xchg
push
dec
jg
in
or
cmp
pusha
sarl
ss
imull
dec
mov
out
stos
out
ret
lret
dec
and
shll
pop
sub
push
mov
or
stc
test
sbb
pop
insb
mov
repz
mov
scas
jbe
jl
push
mov
xchg
scas
mov
push
je
decb
push
dec
xchg
xor
sbb
sbb
mov
cmpsl
in
rorb
lds
jno
nop
add
adc
and
movsb
pop
subb
out
cltd
orb
imul
pop
popf
dec
xor
mov
fdivp
shrl
orl
inc
fildll
or
cmp
insb
or
ret
jecxz
jno
popf
in
mov
cmp
mov
add
mov
dec
mov
imul
sub
es
fwait
outsl
popf
add
dec
cltd
mov
mov
dec
aad
add
cmc
sbbl
and
push
push
or
jo
stc
out
lret
push
xlat
out
int
clc
in
jmp
ja
sbb
pop
dec
cmc
sbb
mov
xchg
pop
adc
adc
jmp
data16
jp
repz
push
or
loopne
leave
in
jecxz
xor
shrl
rorb
push
mov
test
mov
add
rorb
in
add
cmpsb
cltd
pop
mov
pop
pop
lahf
popf
addr16
cs
push
pop
push
mov
stc
sbb
iret
dec
je
iret
aam
cs
dec
imul
add
in
push
mov
adc
ds
jno
fcoml
lds
out
test
bound
fisubrs
fistpl
lods
dec
jl
cli
dec
mov
int3
sbb
sub
and
dec
rcr
stos
add
cwtl
push
mov
fwait
pop
out
sbb
insb
pop
push
movsb
jmp
test
rcll
push
xor
sti
mov
push
ret
pop
ja
sub
xchg
iret
jle
jo
in
and
out
pop
insb
out
mov
dec
mov
sub
scas
js
cmp
div
push
test
mov
orb
mov
push
mov
dec
repz
cmpsb
push
cltd
sarl
ja
mov
mov
xor
insl
lods
bound
xor
ds
jmp
insb
filds
mov
jo
pop
cmp
iret
mov
adc
sbb
adc
andl
cmp
jge
fwait
mov
xchg
rcll
mov
jle
dec
mov
lcall
mov
jl
and
fsub
fs
xchg
movsb
pop
cli
mov
dec
or
xchg
mov
data16
push
sub
adc
nop
xor
daa
xor
inc
pop
pop
pushf
jmp
movsb
add
mov
add
fisttpl
pop
push
data16
xor
mov
fisttps
int
das
jno
adc
mov
mov
push
leave
push
popf
mov
mov
mov
ret
ss
push
hlt
cmp
push
lret
rclb
shll
and
adc
lods
sub
cmpl
push
test
movsb
idivl
pop
in
lret
not
fisttpll
cld
or
jb
cld
cltd
iret
aaa
pushf
out
inc
stc
xchg
mov
lahf
rclb
sub
cltd
stc
push
ss
fiadds
xor
pop
push
and
daa
imul
mov
or
sub
lret
lods
mov
loopne
xchg
adc
mov
adc
add
push
sbb
mov
in
push
imul
add
insl
inc
inc
adc
mov
pop
mov
mov
imull
push
andl
fdivrl
fisubs
sti
sahf
push
jnp
insl
jl
add
out
popf
mov
out
fs
push
cmpsb
push
inc
idivl
mov
push
fs
out
mov
sbb
xor
or
push
push
pop
out
jge
pushl
pusha
inc
in
inc
and
inc
leave
inc
fildll
xchg
xchg
push
dec
inc
mov
cld
fistl
mov
sbb
pop
jbe
sti
pusha
ja
jno
cltd
out
rcll
jmp
dec
lea
mov
mov
jg
pop
les
aam
sub
inc
imul
add
shll
cmp
pop
sbb
call
jle
cmp
cmp
sub
add
aas
lods
dec
iret
ret
ljmp
insb
push
xor
int
pushf
sub
xlat
sub
dec
lahf
test
mov
mov
push
dec
mov
pop
sbb
mov
fs
sbb
dec
cltd
fisubl
cmc
mov
or
jae
mov
lahf
or
int3
loopne
in
and
sbb
mov
bnd
push
pop
mov
in
push
mov
dec
test
sbb
int3
ffreep
cs
mov
jbe
ficompl
movsb
pop
ja
data16
push
xor
adc
push
popf
sti
mov
dec
lods
push
xchg
pop
cmp
icebp
loope
cmp
repz
jo
push
add
jg
mov
xchg
imul
mov
add
xchg
cmpsl
push
dec
fsubrl
adc
or
xor
cwtl
mov
jmp
mov
stos
sub
push
or
sbb
mov
outsl
shr
or
lret
xor
cmp
popf
scas
outsb
popa
dec
pop
outsb
mov
les
stos
rcl
addb
std
in
lods
das
mov
ret
xchg
pop
xor
cld
sbb
popa
mov
pop
cmpsb
nop
icebp
sub
mov
divl
jmp
jp
jo
or
and
call
dec
fwait
jmp
cmp
pop
sahf
cltd
jnp
pop
mov
xor
cmp
fistl
je,pn
jl
movsb
inc
mov
push
test
mov
fdivs
xor
daa
inc
xchg
xchg
icebp
push
xchg
dec
mov
xor
pop
xor
dec
add
push
out
sahf
adc
repz
sahf
sub
test
lcall
jb
je
push
and
add
fwait
mov
ss
dec
sbb
cltd
xor
ljmp
xor
sbb
sbb
mov
xor
mov
idivb
in
mov
or
movsb
cmpsb
cmp
jnp
pop
outsl
orb
xlat
sub
pusha
mov
sub
mov
loopne
in
dec
data16
fldl
xor
push
push
cmp
in
lods
jnp
pop
insb
xchg
mov
or
and
nop
int3
movsb
add
mov
or
mov
int
or
or
push
dec
addl
mov
mov
outsl
xor
lods
dec
ljmp
cld
int
mov
sbb
inc
imul
insb
and
pop
xchg
or
pop
fsub
mov
cmp
add
xchg
adc
ret
jbe
in
mov
imull
mov
jl
cmp
dec
and
cli
pop
push
nop
fwait
addr16
lock
aam
insb
in
imul
mov
mov
mov
repz
ret
jmp
clc
cmpsb
loope
addr16
xor
push
sub
sbb
inc
xor
sahf
xor
adc
pop
add
xchg
cmpsl
xor
adc
sarb
mov
push
or
imul
push
in
inc
imul
movsb
fstpt
mov
je
bnd
es
orb
cmp
je
in
xchg
cs
mov
mov
push
into
mov
lret
add
cli
xchg
jmp
popa
sub
ficoml
push
mov
pusha
push
mov
sahf
adc
out
jb
push
decb
inc
ja
xchg
bound
mov
repz
mov
decb
popa
jbe
mov
or
sbb
sarl
jno
sbb
lahf
jno
call
in
outsb
dec
ficoml
jae
xchg
sti
cmp
xchg
fsubr
cwtl
fldl
sbb
aas
fnstsw
fimuls
and
aaa
cmp
ror
mov
mov
mov
push
or
insl
jo
jno
movsb
adc
add
jns
lock
inc
and
mov
mov
rorl
cmc
or
sub
lock
pushf
ret
pop
sub
lret
jnp
clc
inc
loop
xor
movsl
jmp
mov
jg
in
pop
cmove
mov
hlt
xchg
movsb
or
xchg
mov
pop
fdivs
sub
loop
inc
push
mov
mov
fsubr
adc
mov
lret
movsb
pop
mov
ret
mov
stos
mov
pop
shrb
je
xor
jb
add
push
fidivrl
lods
test
loope
or
test
jl
mov
and
cmpsb
bound
add
into
inc
cmpsl
cld
jle
lcall
jmp
jl
or
jg
jg
inc
pop
adc
icebp
in
push
sahf
inc
insl
scas
jae
adc
dec
cli
popf
sbb
les
adc
jl
stc
clc
aam
cmpsl
xchg
cmp
add
or
mov
mov
fimull
out
xchg
mov
xchg
mov
gs
push
fs
pop
jge
pop
mov
fimuls
cmc
and
lea
mov
or
mov
cli
sub
in
into
std
lea
fwait
jg
in
mov
sbb
stos
adc
imul
inc
sti
xchg
jbe
or
loope
pop
ja
cmp
xor
fistps
je
pop
cmp
cmp
jmp
daa
dec
inc
push
jle
jns
fmul
pop
mov
push
fnstsw
dec
xchg
jp
push
cmc
mov
pop
jmp
sbbl
push
adc
cmp
or
sarb
xlat
icebp
jg
ficoml
popf
jg
outsb
mov
jg
dec
jns
out
rcl
out
nop
cmc
push
ja
fiaddl
es
das
dec
push
divl
arpl
or
notb
lods
push
or
call
xor
xlat
pop
mov
pop
dec
jl
iret
mov
inc
sub
push
push
je
cwtl
cmp
test
jbe
add
fucomp
arpl
jb
inc
leave
cmp
mov
stc
adc
mov
cmp
cmp
subb
mov
mov
inc
shrb
pop
cmp
pop
jl
mov
or
fsubrl
xor
icebp
push
rcrl
mov
test
xchg
xchg
dec
jae
insl
je
dec
or
out
push
test
mov
cld
cmpsb
pushf
mov
or
mov
and
loopne
mov
or
fimull
lahf
sbb
and
jns
lods
dec
mov
repnz
sbb
jb
mov
popa
fwait
add
sahf
popf
test
push
stos
push
lret
mov
pop
loopne
push
mov
aam
sub
xor
test
pop
jge
lods
repnz
dec
jg
loope
pop
movl
mov
mov
test
lret
cmp
out
test
mov
sub
cmc
xor
dec
mov
sub
dec
imul
sbb
add
adc
in
add
cmp
popf
mov
sti
mov
fwait
jl
es
std
sbb
rcr
pop
and
in
jnp
mov
jg
dec
inc
fadds
enter
std
inc
mul
std
or
jecxz,pn
pop
icebp
mov
xchg
scas
loop
xchg
cli
cmp
adc
xchg
arpl
jle
scas
sub
mov
xor
movsl
cli
lcall
lods
cltd
mov
and
adc
mov
aam
in
xor
shll
fdivrl
jbe
mov
outsl
mov
mov
imul
test
sub
popa
pushf
push
out
mov
fstp
mov
movsl
jns
enter
xlat
and
push
sub
cmc
or
jno
std
imul
and
or
sbb
mov
jo
inc
jp
sti
or
aam
test
call
pop
repnz
mov
jmp
push
repz
shrl
add
jno
stc
inc
mov
dec
pop
les
scas
mov
cmc
dec
jbe
jnp
fwait
in
iret
jnp
xchg
xchg
imul
in
out
cmp
xchg
lahf
jno
fs
lods
aam
ret
test
adc
fcmovb
mov
outsl
push
and
dec
inc
jo
lret
sub
xlat
mov
iret
mov
push
jmp
dec
sbb
sahf
pop
sbb
fcmove
pop
inc
push
shrl
push
dec
jmp
addr16
ja
mov
mov
xlat
and
dec
add
inc
ljmp
inc
jmp
dec
jae
xor
mov
push
xchg
push
out
cltd
repnz
cmp
jle
test
mov
push
dec
and
loope
sti
aam
dec
bnd
dec
in
int3
adc
pop
xor
mov
inc
pop
mov
data16
cmp
pop
adc
in
pop
cmp
pop
dec
dec
xlat
aam
mov
mov
lret
adc
sarl
inc
dec
je
xchg
pop
es
arpl
hlt
adc
mov
fildl
stc
adc
mov
into
fisttps
shl
dec
fidivrl
mov
out
in
xchg
xchg
addr16
pop
stos
inc
test
dec
xor
cmp
out
mov
fnstsw
in
push
cmp
inc
cmpsl
mov
popa
popa
fnsave
negb
jl
mov
stos
cmpsb
xchg
mov
push
pop
jnp
pop
xor
dec
mov
jmp
and
clc
pop
test
push
cmc
push
mov
xchg
cmp
dec
jl
jnp
nop
ret
mov
insl
jns
push
sbb
adc
sahf
mov
std
rcl
mov
ja
dec
or
or
and
mov
repz
xor
nop
stc
cmp
jb
push
je
mov
fwait
pop
push
les
lcall
pop
xor
sub
xchg
inc
cs
aad
inc
mov
stos
cmp
mov
mov
pop
inc
jbe
cwtl
subl
jg
mov
or
pop
add
data16
mov
mov
data16
and
push
and
jno
mov
gs
xor
pop
loopne
shrb
insb
fdivrl
int3
fnsave
insb
sbb
add
scas
and
aam
mov
fidivs
sbb
or
scas
stos
lahf
fdivr
xor
daa
ja
and
cmp
fstpt
sub
enter
imul
dec
das
cmp
add
ja
jecxz
fdivl
addr16
pop
mov
dec
lret
push
inc
ret
shll
into
call
psubsw
mov
jno
xchg
iret
pop
in
int3
mov
mov
lods
add
clc
fiadds
mov
into
inc
jg
fwait
mov
out
dec
mov
jae
test
jp
adc
xor
sti
inc
lret
addr16
clc
frstor
mov
out
test
push
cmp
jae
movlps
pop
enter
imul
movsb
lds
mov
push
sbb
lret
sarb
rcrl
imul
lods
inc
dec
rcll
out
cwtl
das
push
mov
cmpsb
mov
cmp
dec
add
leave
push
sub
loope
adc
movsl
out
out
mov
sub
adc
bound
repz
ja
leave
sbb
mov
hlt
pop
in
pop
fcompl
push
je
mov
cmp
push
dec
cs
outsl
ret
lods
mov
mov
fwait
repnz
push
dec
lods
lahf
addr16
repz
into
dec
inc
mov
push
mov
xor
enter
jecxz
xor
orb
out
sbb
jmp
or
sti
mov
ret
movsl
in
or
dec
and
jl
jmp
mov
nop
adc
inc
adc
ljmp
adc
enter
mov
push
xor
imul
cmpsb
imul
adc
in
test
push
mov
add
std
je
int3
or
imul
ja
pop
iret
adc
pop
adc
cs
fidivrl
lods
xor
sti
inc
cmp
adc
adc
adc
shl
sub
jl
mov
lea
mov
mov
mov
dec
and
frstor
stos
push
popf
sub
cmpsb
dec
aad
ljmp
mov
add
je
fdivl
or
mov
lods
loope
fwait
inc
dec
cmp
adc
aas
pop
adc
inc
jmp
loopne
lds
mov
cmp
mov
dec
iret
and
pop
sbb
jne
cmpsb
adcb
loopne
jnp
shll
jg
lcall
mov
in
lret
ljmp
jb
or
fmull
out
inc
cmpsb
xchg
clc
mov
or
or
fistps
pop
and
test
sub
mov
subl
dec
ja
or
or
cmp
adc
fwait
rcr
aas
mov
inc
mov
test
inc
sub
sub
scas
sub
cwtl
ja
or
push
xor
sub
push
cmpsl
push
ret
fcomps
jl
ja
fwait
insb
xchg
gs
ljmp
pop
mov
xor
out
std
pop
mov
inc
sub
inc
lods
jno
repz
push
cmp
cvtps2pi
fmuls
jmp
mov
inc
fildl
imul
std
scas
push
pop
iret
fldcw
jle
enter
add
sub
add
mov
shll
into
sub
aaa
sbb
test
clc
cwtl
or
pop
in
subl
in
xchg
add
pop
in
mov
jbe
adc
push
int
inc
popf
or
fisubrl
jae
pop
xor
cli
and
cmc
fcmovnbe
ret
jbe
push
adc
inc
movsb
data16
pop
enter
push
push
iret
add
jb
add
push
cmp
repz
or
repz
popa
test
jbe
pop
imul
mov
lret
out
and
icebp
sub
cs
lods
dec
jnp
punpckhwd
lds
cmc
cmp
test
jg
xlat
xor
test
call
pop
andb
fmull
sti
pop
or
jo
ja
std
dec
mov
rcr
and
and
jmp
bound
add
adc
mov
mov
lock
cwtl
push
arpl
adc
dec
inc
mov
dec
int
cmp
filds
sub
pop
cmpb
in
mov
adc
test
lahf
out
in
insb
adc
loope
cs
cld
xor
jbe
adc
ret
add
sbb
int3
mov
mov
jp
fisttps
test
mov
pop
cmp
loop
data16
ret
sbb
cmp
push
imul
add
pop
xor
cwtl
cmp
sbb
lret
mov
adc
adc
rcll
aam
or
cmp
iret
and
and
pushf
and
pop
push
shr
jg
and
das
mov
jb
dec
adc
in
sub
hlt
in
mov
ljmp
sbb
push
pop
sub
dec
repz
xlat
movsl
repz
shlb
pop
or
push
pop
nop
les
mov
cmpsb
scas
adc
imul
adcl
sub
adc
or
push
les
sub
jb
inc
push
cmp
lcall
ret
sub
mov
dec
repz
shrl
and
or
subb
in
jmp
cmc
mov
std
imul
cmpsb
sub
outsl
cld
xor
add
inc
fiadds
insb
add
test
xchg
and
fcmovnbe
dec
mov
xor
jg
dec
jae
in
fiadds
or
xor
int
sub
add
cmp
pop
sbb
icebp
jnp
out
scas
pop
icebp
jp
dec
jae
movsl
sti
sub
in
adc
lods
sub
sbbl
pop
rcll
data16
pop
cmp
mov
lock
outsb
stc
je
test
mov
div
mov
nop
int3
repnz
js
push
jns
shlb
dec
pop
popa
imul
pop
and
repnz
push
iret
popl
jmp
mov
pushf
or
mov
insl
jno
out
jge
inc
cltd
and
mov
popl
mov
stos
cmp
out
int
mov
lods
push
out
adc
pop
xchg
add
dec
orl
inc
mov
sub
int3
lret
inc
iret
fwait
sbb
push
cmp
push
push
pop
sub
jl
out
pop
pop
ficompl
jb
dec
jno
outsb
sbb
inc
sti
sub
mov
dec
or
cmp
sahf
into
and
mov
cmovo
jmp
pop
mov
pop
stos
fwait
sub
out
std
ss
fstpl
ljmp
add
fsubrs
push
push
jbe
sub
popl
add
xchg
pushl
xor
mov
adc
imul
push
dec
call
cmp
jmp
inc
push
xchg
lret
fildll
adc
and
shlb
test
jle
cmp
inc
add
push
mov
rorb
int
shlb
mov
sti
and
jp
ljmp
pop
and
inc
ljmp
mov
lods
int3
sbb
and
fwait
inc
and
arpl
testl
add
packuswb
inc
cltd
inc
mov
pop
and
mov
add
push
notb
pop
or
xchg
sub
lock
daa
stos
and
sbb
inc
push
data16
mov
fists
sbb
fwait
sub
push
fcoms
ret
adc
mov
xorl
inc
fstpl
adc
lret
push
fidivl
outsl
or
call
mov
push
addr16
int3
mov
jp
or
popf
jp
fmull
out
ljmp
mov
sbb
add
insl
push
lods
mov
jae
pusha
inc
xor
inc
add
push
loope
cltd
or
int
inc
mov
cmc
mov
idivl
mov
pop
arpl
pushf
push
insl
mov
mov
adc
out
dec
je
fwait
sub
stc
pop
nop
sub
jno
dec
dec
mov
push
jmp
ja
push
std
mov
daa
mov
mov
in
jo
std
push
pop
pop
je
dec
scas
lods
sub
pop
xchg
pop
stos
xchg
fs
or
push
pop
inc
test
sti
push
insb
negl
sbb
and
je
loope
mov
or
mov
sub
outsb
mov
adc
ljmp
pop
daa
xchg
adc
in
inc
jle
iret
movsl
dec
sbb
iret
ljmp
inc
sarb
pushf
loopne
lea
mov
mov
sub
out
xchg
adc
dec
test
cmp
cmc
pop
imul
nop
data16
insb
lcall
gs
pusha
or
or
jmp
inc
dec
mov
dec
pop
xor
fidivl
in
insl
and
int
das
pop
sub
rcrb
hlt
push
pop
push
test
push
push
fimull
push
add
dec
xor
pop
pop
popa
jne
js
mov
in
iret
repnz
jp
mov
mov
xor
int
add
mov
add
jno
adc
decl
sub
inc
push
fmull
lret
shlb
mov
je
cmp
jbe
popf
xor
sub
lahf
add
scas
lea
mov
xchg
stos
cs
pop
ret
outsl
adcb
jl
ljmp
pop
movsb
xchg
into
xchg
dec
mov
bound
sub
ret
adc
mov
inc
push
xchg
mov
jne
mov
stos
sbb
scas
pop
mov
add
and
jae
cwtl
sbb
add
test
dec
jmp
decl
lahf
inc
push
sbb
adc
dec
ret
sub
cmpsl
aas
mov
push
inc
rcr
fmuls
rorb
std
aam
in
and
dec
xchg
xchg
jle
jp
out
add
cld
fwait
call
jbe
sub
movsl
int
insb
pop
je
repnz
jge
test
inc
andl
mov
test
sub
adc
push
leave
movsb
xchg
mov
sahf
and
inc
cmc
push
mov
mov
sbb
int3
xor
ficoms
js
xor
inc
cmp
push
pushf
inc
in
les
dec
and
inc
sbb
pusha
inc
call
adc
pop
es
out
out
mov
rolb
pusha
push
xchg
outsb
lods
xor
cmp
filds
into
mov
mov
or
sub
data16
xchg
xchg
imul
xor
stc
dec
or
dec
push
ret
lea
test
push
andl
mov
fs
js
mov
enter
lahf
lret
cmp
sbb
jae
fimull
push
mov
xchg
jmp
stos
push
pop
dec
mov
popf
arpl
pop
inc
ljmp
mov
inc
cwtl
int
insb
cltd
cmp
mov
mov
mov
or
mov
push
movsl
dec
loop
insb
mov
adc
xchg
mov
dec
rorl
fs
cmp
inc
in
imul
inc
sbbb
push
loope
lods
loope
add
dec
icebp
pop
push
mov
sbb
inc
cmp
pushf
add
mov
stc
pop
jl
jge
fstpt
pusha
nop
or
dec
and
fs
mov
jle
inc
add
mov
fcmovne
mov
mov
out
pop
pop
ret
int3
cli
mov
inc
push
loope
or
lahf
pop
jae
cmp
std
dec
add
jg
push
sub
divb
mov
push
nop
inc
lret
and
dec
sarb
cmp
fadd
hlt
or
out
int3
mov
sbb
and
or
xchg
jnp
push
adc
cmc
dec
push
mov
fdivp
jo
daa
dec
jg
and
push
jg
dec
loope
js
cmpb
dec
jmp
mov
out
mov
data16
shll
loope
loopne
test
add
mov
stos
push
sbb
mov
xchg
data16
mov
inc
pushf
dec
lahf
cmpl
pop
pop
and
pop
add
inc
fwait
cltd
loop
imul
out
mov
jmp
mov
je
iret
or
andl
pop
lcall
or
xchg
std
cmp
rcr
lods
pop
and
dec
add
mov
cmp
fisubl
add
mov
jg
ljmp
adc
dec
cmp
pop
sub
push
adc
xor
nop
dec
push
cwtl
cmp
jno
pop
cmpb
les
fwait
insl
and
movsl
dec
sub
fnstsw
ds
out
push
push
lea
nop
int
aad
xchg
out
xor
cmpb
xlat
inc
stos
push
adc
mov
hlt
ret
pusha
xor
sub
xchg
pop
jge
sbb
repz
dec
mov
clc
in
jns
sub
pusha
adc
dec
fisttpll
scas
es
dec
je
or
xchg
out
adc
push
insb
sub
xchg
mov
les
inc
imul
sbb
scas
jl
pop
jmp
fistpll
rcll
dec
mov
cmp
insb
aaa
sti
fidivrs
or
data16
fdivl
call
xchg
dec
push
sbb
push
cmp
mov
icebp
pop
imul
xchg
cmp
pop
mov
divb
insl
mov
dec
pop
scas
les
add
xchg
add
pop
pop
fs
jl
jle
xchg
inc
xor
add
cld
ds
mov
data16
lahf
push
jmp
or
insl
pop
lahf
sub
movsl
orb
fstps
add
lcall
dec
fidivl
sbb
out
xchg
shrl
icebp
mov
scas
xchg
jg
pop
cmpsb
xor
mov
aas
das
mov
push
or
pop
xchg
push
jg
cld
adc
jmp
test
repnz
jmp
jmp
xchg
mov
cmp
addb
push
scas
lods
push
dec
sbb
les
shrl
cmp
in
lods
enter
repnz
sti
cmpsb
mov
scas
scas
and
clc
jbe
pop
cmp
pop
nop
pop
xor
into
inc
dec
es
in
xor
mov
xchg
stos
arpl
pop
inc
or
xchg
arpl
sub
lods
adc
imul
adc
outsb
repnz
sbb
pop
jl
push
pop
adc
jmp
and
ja
or
in
cmp
dec
mov
std
or
mov
mov
lret
adc
fwait
mov
mov
imul
and
repz
add
inc
fwait
int3
shll
loope
dec
cwtl
mov
movsl
sub
cmpsb
mov
or
repz
adc
cmp
mov
iret
mov
mov
call
fisubl
push
push
in
repnz
dec
jno
jg
mov
and
mov
nop
pop
das
mov
jl
inc
enter
ret
jle
push
int3
test
negb
scas
push
jecxz
fisttpl
dec
sub
jno
jbe
shll
or
rcr
dec
call
fwait
adc
jle
in
mov
jecxz
stc
or
mov
dec
outsb
cmp
mov
in
and
mov
ffree
mov
fstl
cmp
inc
and
mov
dec
adc
mov
imul
mov
arpl
xor
out
popa
int3
call
sub
or
pop
das
cmpsb
jb
cli
hlt
call
dec
push
jp
test
push
push
lods
daa
sub
loope
rcrl
mov
gs
scas
ljmp
mov
loope
pushf
into
dec
clc
mov
xor
rol
cwtl
jl
pop
rcll
movsb
mov
fs
idivl
ret
mov
push
imul
pop
pushf
loopne
dec
subl
xchg
sub
sub
jno
lods
loopne
movsl
imul
xchg
xchg
push
fwait
mov
into
cmp
mov
add
push
out
mull
dec
lcall
in
mov
sbb
repnz
xor
aad
rep
inc
ficomps
add
push
cli
add
lret
nop
push
push
movsb
push
jo
jge
or
cmpsb
mov
pop
sbb
xchg
mov
decb
movsl
ds
enter
cld
mov
cmpsl
adc
pop
fidivrl
xor
or
and
mov
addl
cltd
repz
pop
repz
push
sub
lock
mov
fsubrl
sub
sahf
lar
fisttpl
inc
sbbb
int
push
inc
imul
mov
mov
adc
pop
jmp
pop
xchg
mov
sbb
sbb
cmp
lret
mov
dec
lahf
lcall
mov
aam
sbb
add
sub
mov
mov
jecxz
mov
adc
inc
jae
mov
cmpsb
out
mov
in
mov
xchg
dec
loopne
lret
lods
xchg
or
mov
cmp
pushf
addr16
jp
ljmp
sub
jmp
iret
pop
js
std
jmp
pop
into
call
pop
pusha
jae
sti
adc
xlat
call
in
inc
add
inc
or
out
xor
inc
sti
mov
xor
cmp
in
mov
inc
mov
xchg
or
ficomps
xchg
daa
sub
jae
pop
adc
xchg
imul
xchg
arpl
test
clc
push
jns
call
loopne
xchg
mov
xchg
fwait
clc
push
mov
mov
pop
push
mov
leave
fldt
ret
fsubp
sti
add
test
pop
stos
add
mov
xchg
dec
orl
xor
xor
mov
gs
push
rcrl
shll
jbe
pop
sub
mov
lahf
cltd
xlat
pop
dec
push
bound
jge
xchg
push
lret
fsubrs
jmp
mul
rcll
lock
dec
add
repz
push
or
mov
cld
rolb
cmp
decl
xchg
out
cs
imul
jl
mov
ja
in
dec
dec
dec
sbbl
mov
and
mov
cmpsl
cmp
dec
fwait
jmp
cmc
xlat
nop
jb
pop
mov
dec
adc
dec
aam
or
xor
adc
dec
adc
xchg
pop
movsl
ret
sbb
inc
mov
xor
bound
push
jmp
sub
xchg
sti
lods
sub
mov
popf
cmpsl
je
bound
cmp
and
jl
fwait
push
loopne
jbe
push
push
fwait
mov
pop
push
mov
xchg
cltd
and
mov
arpl
pushf
decl
inc
fwait
inc
ja
mov
xor
sbb
iret
jl
lods
cwtl
jbe
rcrl
popa
xor
fs
dec
sti
xchg
mov
scas
es
mov
roll
jecxz
daa
mov
dec
adc
in
xchg
xor
scas
inc
adc
lcall
movsb
mov
aam
adc
dec
jmp
or
sahf
mov
imul
mov
adc
adc
mov
lock
xor
or
sbb
lahf
jo
pop
and
adc
inc
sbb
sbb
enter
jne
pop
repnz
jge
sbb
dec
sbb
xor
es
mov
fnsave
mov
shll
xchg
repz
fmuls
pop
push
stc
add
test
or
out
shl
mov
adc
cmp
mov
aaa
out
mov
cmpsl
push
push
clc
imul
mov
stc
or
mov
mov
test
popf
int3
sbb
cmp
psraw
dec
and
inc
dec
outsl
clc
negb
mov
das
fisttps
add
pop
leave
jae
push
adc
jmp
dec
pop
negl
push
jnp
mov
jb
int3
xor
sbb
xchg
movsb
mov
xchg
filds
movsl
ret
ret
fdivrl
add
and
mov
pushf
mov
cmp
mov
jl
inc
push
jbe
mov
jns
daa
mov
sub
ret
cmpsb
in
xchg
lret
mov
or
sub
or
mov
add
sbb
sar
pop
push
add
pop
pusha
cmc
test
dec
in
pop
adc
xchg
push
scas
je
fcmovu
out
mov
rclb
cmp
and
movsb
mov
dec
push
out
jl
dec
inc
popa
mov
hlt
aad
add
pop
mov
and
add
in
jae
test
orl
xor
loope
ja
inc
adc
inc
and
in
jl
cmp
mov
cmp
out
sbb
push
xchg
adc
inc
jp
clc
test
pop
stos
call
or
jecxz
loopne
jmp
jnp
movsb
sbb
negb
aaa
pop
jo
jae
in
push
mov
repz
and
roll
fidivl
das
push
rorl
movsl
dec
fbld
jecxz
fisttpll
scas
and
cltd
nop
add
add
out
fs
shlb
mov
movsl
sahf
adc
jl
jmp
in
push
mov
jns
inc
pushf
add
mov
pop
int3
mov
sbb
test
push
mov
mov
pop
stos
jbe
shlb
mov
inc
add
xchg
mov
push
inc
add
dec
mov
test
pop
aam
sbb
fs
and
stc
pop
lods
jns
or
fdivl
mov
xchg
mov
test
and
les
jae
aaa
clc
in
je
pop
mov
sbbb
mov
jo
dec
sbb
mov
sti
add
lea
mov
lods
cmp
aad
jp
rclb
or
lea
xchg
adc
mov
jg
cmpsb
addb
cmp
push
adcl
pushf
scas
xor
inc
push
mov
sti
push
cmp
cltd
insb
mov
inc
mov
inc
xchg
add
inc
mov
jl
and
dec
adc
scas
sbb
dec
mov
xchg
movsb
jbe
dec
jg
leave
repz
fsub
repz
jne
xor
xlat
lock
adc
es
outsb
sub
xor
jmp
aad
lret
mov
nop
push
adc
mov
mov
ret
jno
mov
dec
in
mov
jns
addb
mov
std
inc
xor
idivl
mov
mov
stos
and
inc
pushl
aad
sbb
and
movsl
repz
inc
mov
clc
in
mov
scas
xor
in
stc
and
das
test
in
test
and
aam
sub
loope
push
xchg
lds
xor
addr16
inc
scas
cld
sbb
mov
adc
inc
fistpll
shlb
sbb
scas
push
push
call
std
push
dec
in
mov
not
and
out
pushf
dec
mov
in
jne
sarl
push
outsb
fwait
addl
sbb
adc
insb
jns
xchg
cmp
push
dec
jmp
mov
fistps
add
inc
push
pop
cmp
mov
ds
and
pop
jl
js
dec
dec
int
push
loope
mull
dec
aam
sbb
test
nop
imul
sbb
adc
or
push
xor
pop
je
cmp
mov
pop
sbb
mov
lods
jl
pop
cltd
dec
out
test
xor
xchg
dec
sti
mov
cmpl
test
adc
add
daa
sahf
mov
xchg
jmp
mov
sbb
out
mov
inc
sarb
lods
mov
rclb
insb
sub
jb
loopne
ja
xor
inc
es
imul
mov
add
out
rcrl
in
cwtl
iret
pop
fs
pusha
mov
pop
mov
imul
dec
mov
test
xor
xor
test
fprem1
jl,pn
mov
mov
add
sbb
pop
ficoms
cltd
lods
loopne
pop
shl
jg
pop
imul
and
arpl
or
xor
daa
lods
insb
inc
lods
jmp
jmp
mov
add
mov
pop
adc
out
rolb
push
orb
inc
and
cmp
je
or
icebp
mov
add
xlat
jnp
lods
xchg
dec
lret
cmp
ret
sti
jbe
aam
jmp
or
ljmp
hlt
out
iret
leave
and
jg
fidivrl
pop
dec
dec
mov
call
into
pusha
lret
cld
mov
fmuls
mov
mov
das
mov
lock
xorb
jb
pop
inc
mov
popa
jbe
inc
xorb
xchg
jnp
jl
cmp
cmc
test
and
imul
fs
fiaddl
aam
pop
fildl
mov
mov
ret
inc
push
adc
or
sbb
mov
sbb
daa
inc
xchg
sub
icebp
loopne
push
adc
fldenv
loopne
shlb
dec
jmp
dec
nop
sub
stos
xchg
adc
pop
push
mov
outsb
inc
fmull
cli
mov
cmp
movb
dec
xor
fildll
cld
mov
test
mov
xchg
push
add
xor
push
ja
sbb
icebp
call
insl
pop
fsubrl
mull
stc
pop
mov
fs
popf
pop
pop
lods
pop
out
mov
mov
mov
adc
dec
call
dec
mov
mov
dec
out
pop
or
ret
mov
lock
push
imul
ljmp
inc
arpl
adc
jmp
mov
int
dec
lea
mov
sbb
jne
out
ljmp
xchg
lcall
mov
add
cmp
jg
ss
mov
leave
sbb
loop
and
cli
xlat
loope
sbb
mov
mov
jl
subl
jo
cmp
jp
cwtl
enter
ficoms
scas
mov
loopne
int
jae
repnz
or
lret
mov
dec
daa
mov
lods
or
addr16
push
cmp
mov
lea
mov
mov
rcll
or
inc
add
mov
mov
repz
xchg
sti
fisttps
jns
rcr
lods
ss
out
mov
jmp
mov
pop
inc
pop
dec
mov
xor
ds
fsubrs
fs
js
in
inc
out
dec
adc
mov
inc
mov
and
aam
int3
sub
add
outsl
std
mov
inc
hlt
shr
ret
test
inc
jae
dec
mov
loop
orb
dec
stos
cmp
sub
shrb
shll
mov
sbb
fcmove
or
repz
sarb
test
mul
push
insl
fisttpl
out
cmc
cltd
insb
or
sub
or
mov
popa
out
fcom
xlat
addb
test
shll
mov
inc
adcb
add
out
fcmovnu
sub
xlat
mov
into
stos
sti
sub
mov
in
stos
push
cmp
pop
pushf
dec
gs
xchg
out
mov
jbe
adc
cltd
xchg
jl
mov
xchg
pop
add
push
mov
pop
cmp
ret
iret
icebp
mov
xor
das
push
adcb
mov
or
andl
fwait
divb
mov
dec
pop
or
faddl
mov
push
mov
inc
jecxz
jae
ss
les
xchg
mov
xor
lcall
dec
pop
inc
loope
push
mov
ret
fisttpll
repz
addr16
push
js
div
lret
call
sbb
dec
rcl
and
rcrl
out
xor
dec
adc
mov
dec
and
jmp
and
test
test
out
push
orl
jb
and
rcrl
inc
mov
jb
or
cmpsb
sti
sub
add
dec
mov
sub
mov
mov
sbb
mov
xchg
mov
ror
negl
mov
ss
xchg
push
pop
fstpl
mov
loope
push
stos
jno
adc
and
jne
jmp
scas
mov
mov
mov
int
mov
mov
push
pop
stos
mov
adc
push
cwtl
in
pop
dec
pop
cmp
stos
decb
mov
out
scas
les
sbb
mov
iret
xlat
fidivrs
jl
stos
insb
sbb
lahf
mov
in
or
inc
jmp
outsb
into
hlt
cmpl
incb
mov
cmp
jl
inc
cmp
adc
in
push
xchg
ljmpw
mov
sub
mov
cmp
fidivrs
adc
sahf
cmp
pop
push
std
jnp
lods
add
imul
dec
mov
mov
into
test
sbb
xor
cmp
std
jo
arpl
sub
jb
pop
imul
dec
push
leave
pop
add
out
es
fidivrs
xchg
sub
jecxz
xor
xor
dec
cmp
fstps
fistps
loope
pop
mov
pop
lcall
loopne
nop
int3
cltd
loope
pop
mov
imul
mov
push
ret
movsl
mov
mov
add
mov
mov
mov
pusha
scas
ret
mov
nop
rorb
xor
dec
out
push
loopne
mov
imul
cmp
push
mov
fsubs
jnp
loope
jg
lret
ficoms
xor
jg
in
fisubs
sub
movsl
add
adcl
mov
jg
pop
inc
cs
xchg
jl
and
inc
push
mov
jle
fisttpll
enter
add
fidivrs
fcomi
mov
pop
and
sub
and
lcall
push
mov
pop
nop
aaa
mov
pop
pop
push
mov
cmpsb
fldt
mov
or
ljmp
push
test
xchg
sbb
sti
push
cltd
daa
xchg
mov
sti
cmp
mov
push
mov
xor
in
push
fidivrl
cmc
or
inc
mov
or
sbb
fmull
aas
mov
repnz
dec
fiadds
dec
sub
enter
loope
rcrl
mov
mov
cmpsl
cmp
fcom
outsb
sbb
mov
js
idivl
jno
sub
dec
movsl
movsb
and
enter
inc
jg
cmp
pop
dec
mov
shll
stos
pop
mov
push
cmpsb
fwait
repz
in
jge
push
adc
clc
fs
xchg
push
cmp
stos
jne
push
pusha
pop
inc
adc
mov
pop
inc
cmp
out
jnp
leave
xor
insb
push
andb
and
hlt
mov
push
mov
lock
jg
cltd
out
sbb
aaa
cltd
mov
stc
fs
mov
incl
insb
mov
sbb
inc
outsl
lods
bound
fdivrs
out
xchg
ficoml
aaa
dec
scas
jg
lret
inc
stc
adc
cmc
test
out
lcall
push
inc
inc
sub
cmp
mov
test
add
dec
mov
sbb
add
popf
mov
pushf
sbbl
pop
adc
aam
test
xor
into
xor
scas
cmp
mov
push
mov
cs
mov
addl
adc
gs
mov
push
and
adc
add
sub
mov
jmp
arpl
mov
adc
repz
pop
int3
fdivl
inc
out
xor
xor
inc
jl
inc
sahf
add
mov
clc
jl
jo
notb
pop
or
xor
xor
arpl
jg
mov
adc
test
sbb
sub
ljmp
inc
repz
or
xchg
mov
jl
fwait
dec
pusha
mov
ficoml
xlat
pop
xorb
dec
imul
lods
xbegin
push
mov
inc
inc
mov
je
push
cs
sub
repz
xor
lds
inc
inc
mov
sub
xchg
stc
loopne
cmp
iret
imul
sub
std
push
pop
mov
test
adc
mov
das
aas
push
mov
sbbb
xchg
jg
cmp
pop
cmpsl
jae
add
stc
push
add
add
cmpsl
jg
sub
push
shrl
test
xor
imul
test
call
push
push
and
mov
jmp
fs
cmpsb
xchg
ficompl
arpl
sbb
mov
mov
mov
cmc
sub
in
pop
jb
jbe
cs
inc
mov
mull
js
nop
pop
les
loop
push
mov
or
mov
rorl
push
popa
ljmp
inc
mov
sti
push
nop
jp
into
fcmovbe
ds
inc
sbb
mov
dec
pop
mov
subb
filds
mov
jl
or
ret
pop
fistl
cmp
adc
mov
xor
popl
popl
ss
in
dec
int
mov
out
dec
mov
clts
push
sub
fldcw
jo
movsb
clc
xchg
jle
lock
inc
xchg
lea
jecxz
adc
xchg
mov
pop
pop
inc
and
cmpl
jmp
jl
push
out
into
das
sbb
inc
mov
mov
addb
pushf
call
lahf
out
inc
arpl
xor
fsubrl
sbb
mov
dec
cmp
add
adc
mov
aam
inc
cld
mov
cmp
mov
out
fisubrl
mov
mov
or
aam
sti
add
rcrl
and
les
mov
enter
xchg
cmpsb
jg
test
mov
cmc
fidivrs
icebp
std
test
add
stc
nop
add
out
insl
dec
push
inc
cmp
arpl
lahf
jmp
cmc
jecxz
fisttpl
mov
xor
outsb
fidivl
cmpsl
mov
push
pop
add
js
mov
jbe
scas
scas
lea
cli
xchg
mov
test
inc
movsl
xchg
mov
cmpb
loopne
out
push
mov
add
rcll
dec
sub
sarl
rcrl
pop
data16
inc
mov
and
mov
push
ljmp
dec
scas
lods
adc
push
ret
pushf
fildll
fisubs
addr16
mov
rorb
fs
cmpsb
jo
out
or
push
push
mov
push
or
imul
shrb
or
push
cld
ficoms
mov
popa
sbb
andl
pop
xor
cltd
jno
lahf
jge
cmp
iret
mov
loopne
stos
mov
loop
dec
cmp
dec
rcrl
pop
cmp
jl
jnp
rcrl
and
mov
pop
aam
adc
mov
dec
cmc
idivb
mov
out
lret
jl
xor
faddl
addr16
loopne
incb
les
mov
mov
addr16
sti
jl
or
test
insb
pop
push
xchg
push
lret
dec
scas
cs
push
int3
adc
lahf
mov
loop
adc
xchg
xor
inc
adc
fwait
ja
in
cmp
out
cmp
mov
pushf
ja
adc
add
loopne
fstps
lock
push
cmpsl
out
scas
dec
dec
cmp
jns
dec
js
add
scas
xor
cmpsb
iret
stos
std
fists
daa
sahf
inc
out
stos
mov
pop
call
jmp
jno
hlt
fidivrl
fisubs
outsl
arpl
imul
popf
mov
fnstcw
js
jno
mov
push
xor
jge
jge
nop
cmp
sub
in
mov
je
mov
sub
loop
sbb
inc
imul
into
out
cmp
xlat
cld
and
ja
add
lret
daa
mov
push
dec
jo
pop
mov
movl
add
ss
rcr
gs
cmc
and
sbb
daa
stc
add
loop
jmp
mov
loope
adc
xchg
into
dec
and
cs
cmp
fcoml
cwtl
mov
inc
sti
mov
pop
inc
in
xchg
pop
push
cmp
daa
out
dec
pop
xor
sti
lds
add
push
inc
dec
out
sbb
pop
movsb
icebp
push
fsts
test
fistl
cld
jmp
je
ja
mov
inc
fsub
stos
dec
std
lcall
insb
sbb
xor
pusha
or
lods
inc
pop
lret
hlt
add
notl
xchg
jl
jbe
jle
mov
arpl
dec
movsb
sub
xor
fcmovnb
mov
inc
dec
ljmp
js
jl
jb
in
fcomp
insl
fisubs
punpckhwd
adc
or
dec
jg
fsubs
sub
xchg
adcb
js
jg
out
sti
lods
mov
dec
mov
test
clc
sbb
push
pop
cltd
das
ret
inc
dec
lcall
xchg
out
out
or
jmp
cmpsl
jge
mov
inc
out
repz
cwtl
jp
idivl
test
or
imul
nop
fstpl
mov
mov
and
pop
es
arpl
pusha
sbb
jmp
cmp
test
or
pop
sti
cmp
in
and
jmp
adc
or
out
std
sbb
cwtl
push
or
dec
gs
mov
sahf
jmp
pop
lret
filds
and
sbb
fcoml
xor
or
inc
or
fsin
jae
push
and
mov
sub
mov
jg
xchg
sub
jmp
mov
cmp
out
mov
add
pop
sub
in
test
jno
mov
mov
jl
shl
jbe
or
mov
ret
add
sbb
and
mov
fs
stc
xchg
nop
divl
cmpl
pusha
out
push
repnz
lret
mov
testl
pop
fnstsw
push
inc
push
push
orb
dec
cmp
mov
test
cmc
cwtl
dec
daa
mov
mov
imul
pusha
test
pop
sbb
add
insb
roll
shll
and
pop
fisttpl
in
jb
sub
dec
jns
and
mov
or
mov
mov
aam
stos
mov
mov
dec
jg
in
mov
xchg
add
mov
and
mov
inc
out
stos
sbb
mov
pop
aas
scas
cwtl
int
icebp
in
jg
movsb
ss
adc
hlt
mov
sub
into
imul
mov
dec
ss
xchg
aam
cmp
pop
out
out
jo
sbb
roll
in
push
mov
repz
pop
or
lods
test
cmpsl
or
cmp
inc
jns
sbb
notl
mov
sbb
mov
pop
mov
cmc
js
fbstp
in
sbb
repnz
fstpl
daa
fistpll
test
sti
fimull
mov
mov
loopne
pop
jae
mov
aad
lds
cltd
fsubl
inc
jo
jg
aam
ret
xorl
jno
cmp
adc
decb
out
dec
std
addb
push
or
cmp
mov
leave
dec
movsb
es
mov
xchg
js
push
fisubl
mov
push
ja
dec
cmp
lcall
mov
repnz
add
arpl
mov
cmp
push
iret
stos
push
or
cld
mov
repz
mov
je
push
cltd
pop
repnz
leave
mov
jae
sbb
in
in
inc
cs
pusha
jns
pusha
mov
mov
push
out
mov
jp
out
push
dec
push
cmp
or
and
ljmp
and
jmp
mov
es
pop
sbbl
ja
jo
out
push
mov
ret
lcall
mov
movsl
lret
add
jae
cmp
cs
ret
fxch
xorb
mov
and
mov
ret
addr16
mov
push
jns
xlat
loope
add
lock
lret
out
xchg
push
iret
jb
adc
ja
mov
sub
mov
loope
fwait
lret
lods
flds
fsubl
cld
adc
ret
fisttps
inc
movsb
pop
push
mov
aam
add
cmp
data16
inc
inc
add
and
popf
andl
mov
sbb
divb
inc
gs
int3
cmc
stc
movb
es
add
mov
icebp
push
adc
add
arpl
cmp
sahf
ret
test
cltd
jl
cs
stos
out
mov
rorl
or
mov
pop
mov
cmp
push
mov
cs
cmp
mov
jmp
xchg
pop
cltd
jge
lds
pop
adc
mov
dec
into
icebp
mov
inc
setae
dec
mov
ret
or
xor
pop
pop
pop
fistps
fcomps
jno
orb
or
mov
jbe
mov
jmp
push
pop
in
jmp
pop
dec
or
repnz
xchg
push
js
and
push
mov
jge
jae
int3
mov
mov
inc
aam
in
and
ss
adc
pop
inc
mov
or
mov
inc
cmp
xchg
imul
les
and
in
sbb
push
and
push
shlb
sarb
fmull
jmp
pinsrw
mov
cmp
movsb
iret
arpl
fisttpl
jl
dec
sbb
shr
adc
pop
cmpb
mov
es
push
in
sbb
jl
jg
cmpsb
movsb
sbb
repz
pop
mov
iret
lods
int
jnp
cmp
cmp
sub
movsb
xchg
jmp
push
shlb
cmp
mov
jle
pop
fnstsw
or
test
xchg
sti
rcrl
int
pop
mov
xor
testb
sbb
mov
andb
jg
sbb
stos
mov
and
pop
jo
frstor
or
inc
mov
add
mov
jnp
pusha
push
or
dec
roll
test
stos
dec
mov
fcoml
lahf
movsl
sbb
sub
stos
xlat
mov
jne
sbb
pop
fstl
jns
adc
mov
ds
pop
cmp
or
push
mov
inc
inc
dec
in
inc
cltd
jbe
outsb
lret
mov
mov
and
dec
and
stc
icebp
mov
in
inc
pop
and
push
mov
pop
push
sub
fiaddl
mov
loop
mov
or
in
xor
adc
out
cmp
mov
repz
push
jae
es
mov
cmp
cmp
xchg
rcrl
movsb
rcll
and
add
push
inc
ss
push
xor
incl
or
inc
and
in
imul
pop
or
push
dec
sti
cmpsl
cld
mov
sub
ret
lret
mov
pop
sbb
xor
pop
repz
or
adc
cmp
mov
out
nop
popf
mov
fwait
gs
mov
and
xor
ret
pop
pop
gs
ja
sbb
mov
xor
mov
mov
sub
push
push
ljmp
gs
push
jne
mov
or
aas
into
data16
stos
inc
pop
pop
jo
pop
add
sbb
and
sbb
idivl
les
sub
lret
fiadds
sbb
ret
add
pop
out
rolb
ret
sbb
sub
imul
jl
mov
xchg
inc
mov
movsb
lret
rcrl
mov
les
orl
dec
cmp
out
movsb
adc
cmp
pop
int3
aad
xor
cmpsb
int3
jno
test
jno
shrl
idivb
imul
aas
mov
mov
mov
dec
fwait
inc
add
ret
and
sbb
xchg
and
dec
jecxz
or
xor
shl
pushf
pop
push
mov
out
mov
lds
mov
push
or
pop
pop
test
mov
decl
cmc
ss
test
aam
cs
cmp
mov
shll
jbe
and
jno
jb
andb
mov
outsb
xchg
inc
mov
test
cmp
stc
jl
dec
push
dec
push
aas
jecxz
or
xlat
sar
jl
hlt
movsl
lods
adc
js
stos
jns
dec
mov
mov
push
lret
sbbb
ja
adc
adc
push
cli
dec
add
out
push
mov
dec
cmpsl
and
adc
and
push
xor
in
xor
push
stc
pop
mov
pop
mov
int
mov
dec
dec
mov
jl
push
jle
jecxz
add
popa
inc
pop
mov
jmp
lret
stos
int3
fst
mov
orb
insb
rorl
pop
push
lea
ret
mov
imul
mov
or
clc
andb
mov
pop
add
inc
je
mov
pop
mov
push
hlt
scas
mov
xor
push
push
mov
aad
scas
push
sub
mov
inc
jnp
loop
and
jne
xor
bound
shll
hlt
mov
int3
jne
cltd
push
push
outsb
cmc
scas
pushf
scas
loop
cmp
push
bound
sbb
mov
dec
lcall
jnp
xor
inc
adc
shrb
add
mov
mov
adc
cld
xchg
jmp
jmp
in
push
push
rorb
das
cmp
out
adc
jb
stc
movsb
hlt
sub
out
pop
cld
sbb
push
je
lods
push
inc
lahf
mov
cmp
xchg
in
xchg
stc
pusha
mov
fnsave
dec
scas
pusha
fisttpl
jmp
jbe
lods
mov
sub
repnz
xchg
xchg
jae
mov
jno
push
mov
xchg
dec
mov
scas
and
lahf
pop
add
cwtl
xchg
in
push
subb
pop
jns
mov
dec
push
adc
pop
push
leave
cltd
int
jne
jmp
and
dec
jecxz
fcoml
mov
sbb
negb
pop
enter
roll
rolb
mov
nop
in
in
xchg
jno
test
or
push
push
add
lods
fmull
jle
fwait
add
mov
iret
test
repz
arpl
sub
pusha
fisttpll
jl
test
inc
jo
mov
xchg
inc
lahf
mov
fldt
das
adcb
jnp
inc
xchg
mov
stos
and
mov
dec
sub
subl
daa
sub
out
xchg
imull
push
mov
and
ret
pop
addb
and
into
pop
stos
nop
cmpsb
insl
cmp
add
shl
lds
mov
test
in
or
data16
mov
pop
sti
stos
dec
jbe
cltd
shl
loopne
fucomip
insl
neg
sbb
movsl
sub
pop
cli
add
jno
xor
movsl
outsl
out
push
pop
sbb
or
add
cli
sub
movsl
iret
mov
lods
cmp
js
xor
add
test
insl
jp
fstpl
mov
icebp
jg
and
jae
out
mov
hlt
aas
mov
push
mov
ljmp
sub
dec
xchg
jno
mov
call
mov
jmp
inc
pop
and
hlt
rol
mov
mov
ret
nop
sbb
pop
cmp
mov
clc
pusha
iret
adc
jbe
and
jnp
inc
sub
jp
fimull
aad
rcrl
shlb
jae
ss
aad
in
xlat
or
dec
add
dec
movsl
xchg
pop
push
sti
mov
push
stos
push
stos
ljmp
dec
lea
std
repnz
fdivrs
int3
and
repnz
inc
test
sub
cmpsb
icebp
push
inc
jne
cmp
pop
fimuls
inc
mov
mov
repnz
js
pop
inc
sbb
adc
mov
jecxz
inc
sbbb
ljmp
add
mov
cmp
fwait
push
mov
or
ret
push
mov
mov
lea
outsb
sub
pop
pop
xor
push
aam
pop
add
dec
mov
lea
in
scas
pop
cmc
lea
movb
popa
jecxz
ffreep
das
pop
pop
adcl
and
mov
sbb
mov
add
cmp
cmp
pusha
adc
in
add
movsl
idivl
mov
sbb
mov
addb
ss
jb
daa
call
pop
mov
scas
lods
ss
mov
inc
movsb
cmc
push
mov
push
add
mov
and
ret
or
xor
lahf
cwtl
fistps
call
adc
sub
fisttpll
fwait
xchg
repnz
cmpsl
and
dec
sub
fmuls
mov
add
pop
pop
xchg
push
js
loopne
arpl
insb
test
fwait
fwait
std
jbe
push
int
inc
inc
inc
and
scas
mov
cmp
lret
loope
and
cli
mov
cmpsl
jno
idiv
sub
inc
xchg
mov
es
push
into
mov
cmc
scas
out
clc
adc
sbb
shll
stos
mov
lret
add
lahf
jae
pusha
mov
test
in
orb
and
inc
pop
jbe
sbb
mov
jl
jl
mov
add
mov
nop
stos
mov
xchg
in
inc
mov
lock
lds
lret
jae
cmp
test
call
les
out
jg
push
mov
mov
sbb
repz
lahf
cmp
les
add
jb
out
int
or
sub
sarb
fstps
dec
sbb
ret
sub
pop
sti
or
dec
fimuls
push
and
jb
jecxz
sbb
and
adc
pop
cltd
es
mov
cmp
pop
mov
jle
mov
mov
pop
mov
and
repz
bound
sbb
jae
int
xchg
mov
mov
outsb
cmc
popf
iret
dec
push
mov
mov
jle
into
ja
push
xor
mov
and
push
adc
mov
fs
ss
pop
sub
mov
mov
testb
notl
test
addr16
xlat
call
out
inc
popf
mov
insb
or
cmp
push
in
lock
lds
push
adc
cli
repz
imul
cmpsl
dec
inc
xchg
mov
push
jge
dec
movsl
out
fwait
mov
insl
pop
sbb
jnp
add
cwtl
loop
jns
addb
repz
test
xchg
aam
stc
sbb
pop
mov
ds
lods
push
add
fwait
test
rclb
add
cmc
dec
push
sub
cmp
push
xchg
loope
fildll
das
repz
gs
adc
and
lock
mov
fwait
ds
pop
in
minps
cld
stc
mov
mov
sbb
jmp
xchg
add
nop
ss
cvttps2pi
cmp
out
cmp
in
push
mov
daa
pop
push
inc
jbe
dec
in
dec
cmpsl
in
aad
clc
mov
mov
add
cmpsb
cwtl
cmp
mov
lcall
xor
push
dec
xchg
jae
ja
testb
cmp
ljmp
and
test
into
xchg
jmp
pop
ficoms
push
int3
pusha
imul
cld
or
xor
xchg
loopne
mov
jne
mov
push
sarb
rclb
xor
push
mov
int
addr16
mov
popl
sbb
movsl
shlb
jmp
jg
push
movsb
xor
dec
cmpsb
mov
in
out
dec
adc
fisttps
jg
dec
pop
mov
xor
outsl
cltd
je
das
mov
adc
mov
nop
xchg
push
push
test
xlat
ja
dec
xor
mov
std
xchg
lods
data16
test
inc
cld
call
bsf
sbb
cmc
ja
dec
mov
mov
lods
fildll
fstl
mov
loopne
mov
jbe
mov
lahf
into
xor
pop
mov
in
mov
cs
outsl
fdivrs
gs
test
test
sti
lret
imul
lret
mov
incb
sbb
push
mov
ja
jmp
out
xor
sub
sbb
shrl
push
loopne
or
jg
sbb
adc
out
jmp
dec
sub
lret
ret
jae
mov
sbb
adc
cmp
adc
ljmp
lret
pop
xchg
aam
mov
ja
test
fldcw
jl
sub
or
xchg
lcall
pop
push
jl
pop
out
dec
sub
frstor
fisttps
xor
pop
cmp
jbe
insb
pop
push
stc
mov
inc
mov
pop
pushf
int
lds
repz
incl
pop
jnp
cs
pop
sbb
dec
jno
cld
pop
test
sbb
gs
sub
mov
ret
out
xor
mov
lock
and
xor
adc
fists
int
cwtl
ret
jl
fdiv
mov
test
cmc
sarb
test
push
sub
cmpxchg
fmul
push
or
inc
sub
mov
cmpsl
mov
mov
out
xor
jl
sbb
popa
push
jnp
cmp
mov
pop
dec
daa
lcall
mov
nop
mov
mov
loope
test
inc
adc
mov
and
push
in
pop
es
add
inc
jmp
emms
jge
jmp
dec
xor
stos
xchg
cmp
in
in
dec
lahf
xchg
fildl
icebp
mov
push
lret
and
mov
push
or
mov
test
jg
sbb
or
lret
sbb
jb
into
sbb
and
repz
dec
mov
cmpsb
test
pslld
push
adcb
cmp
push
ret
out
ret
scas
pop
xchg
sub
ljmp
fistl
xchg
out
pop
loopne
cmp
inc
scas
push
sub
or
lods
jecxz
mov
je
sub
lock
push
add
mov
lret
mov
iret
jl
xchg
push
or
sub
iret
add
lcall
ljmp
fiaddl
or
mov
shlb
or
rol
icebp
or
xchg
dec
jmp
sbb
stc
pop
sub
aam
test
push
mov
aam
dec
dec
mov
dec
call
mov
or
sbb
loopne
pushf
jnp
das
fwait
into
mov
int
stc
bnd
fldl
add
mov
les
cmpsb
pushf
inc
sub
lret
jecxz
ret
leave
inc
sub
fldt
adc
inc
test
jmp
mov
repnz
push
or
xchg
in
jb
jmp
push
ljmp
or
jge
int3
xor
push
cmp
je
faddl
push
mov
jae
jbe
outsb
push
jo
fidivl
aam
xchg
rclb
lods
sub
xor
and
dec
push
mov
xchg
adc
pushf
push
in
dec
and
insl
push
xor
jb
call
scas
aad
cmp
mov
push
xor
mov
aaa
xor
mov
jb
inc
mov
push
mov
mov
sti
pop
cmc
add
aad
add
push
mov
outsb
iret
or
mov
pop
dec
out
mov
lock
fucomi
clc
sub
inc
rorl
cmp
enter
mov
std
jbe
movsb
push
sbb
push
test
inc
adc
mov
cmp
call
das
dec
jecxz
notl
mov
movups
fimull
in
roll
sbb
gs
pushf
mov
sti
into
xor
ja
jl
insl
sti
minps
mov
fisubs
sti
cmpsl
or
hlt
in
jno
aaa
out
outsl
icebp
xchg
and
sbb
jno
xchg
dec
and
das
aad
inc
dec
mov
inc
insl
add
repnz
enter
pop
lds
push
mov
lahf
je
adc
jo
push
bound
lods
adc
mov
xchg
cmc
inc
out
push
or
call
jbe
lods
popf
cmp
fdivp
push
jg
decl
jns
test
jmp
js
insb
xchg
mov
fidivs
push
andl
lea
std
sbb
mov
mov
in
pop
leave
cwtl
sbb
add
fsubr
mov
or
mov
movsb
rcrb
fwait
icebp
out
pop
gs
orl
sub
icebp
int
xor
mov
or
jg
or
adcb
imul
mov
je
test
popa
push
mov
insl
imul
cmp
adc
lret
or
inc
fucomi
out
jecxz
xchg
pop
xchg
and
sti
mov
cmpsb
enter
adc
mov
xor
mov
insb
mov
sub
repnz
mov
xchg
pop
adc
mov
xlat
add
pop
daa
add
int3
outsl
movsb
push
js
xor
adc
ss
movsb
xor
mov
push
adcl
lods
mov
cmp
xchg
lcall
sbb
jns
out
loopne
movsl
int
jo
ret
es
mov
and
insb
push
push
adc
nop
orb
mov
cmp
dec
das
mov
pusha
dec
push
les
jl
xchg
xor
jae
scas
mov
xchg
jg
lret
dec
shlb
cmp
mov
sarl
jge
cmp
stc
xchg
scas
lods
push
dec
popf
dec
out
inc
lods
dec
push
dec
xor
jne
xor
jecxz
jmp
test
rolb
mov
std
aad
sbb
clc
rcrl
mull
mov
push
sbb
daa
push
aas
js
and
add
dec
pop
ret
inc
and
scas
hlt
pop
cmpsb
loopne
fidivrl
call
int3
stos
fistps
gs
addr16
call
lods
inc
ljmp
push
into
xor
bound
ss
pusha
push
sub
in
pop
or
cmp
divb
jns
aam
push
repz
pop
or
test
pop
jp
movsl
lret
pop
scas
mov
mov
cmp
or
push
jbe
mov
jns
jl
and
jg
mov
test
dec
sbb
and
jns
cs
xchg
add
lods
pop
mov
xor
add
or
test
outsb
push
and
repz
xor
xlat
data16
inc
xor
lea
jb
jle
jnp
movsb
data16
xchg
xchg
push
inc
sbb
movsl
mov
push
int
sub
jns
push
fsubrl
mov
sahf
add
xor
jbe
loop
sub
inc
xchg
jo
lcallw
fadds
test
dec
dec
xchg
mov
push
cmp
aad
mov
pusha
pop
push
push
sarb
mov
jle
dec
inc
jae
cli
arpl
cmp
adc
imul
icebp
push
mov
mov
inc
mov
inc
pop
push
leave
mov
sbb
pusha
outsl
jb
cmp
insb
or
sub
add
lea
pop
test
dec
ret
movsl
roll
loope
mov
mov
loop
push
mov
sbb
aad
lods
xor
scas
ficoml
lret
prefetchw
std
ror
mov
dec
mov
xchg
fs
insb
ja
mov
lahf
fstpt
pop
jnp
es
lcall
lea
add
sti
fwait
dec
outsl
addr16
jl
mov
movsb
inc
shl
pop
movsl
mov
negb
lret
xlat
cs
jb
mov
jmp
sub
push
or
dec
sbb
sbb
data16
jae
mov
cmpsb
add
xchg
mov
cmpsl
add
rorb
dec
pushf
dec
std
pop
test
jo
roll
shll
dec
pop
xor
pop
mov
icebp
rolb
push
mov
emms
fcmove
xor
adc
mov
movsl
add
mov
push
cltd
inc
sub
imul
xchg
addr16
and
push
jae
add
int3
xor
pop
inc
push
mov
xchg
mov
cltd
pop
pop
dec
push
add
xorb
and
ret
or
push
lret
test
into
pop
and
dec
jbe,pn
fsubr
add
xor
inc
popa
mov
out
mov
xor
jp
and
jle
mov
mov
push
hlt
fdivrs
push
mov
outsb
dec
add
sub
push
pusha
dec
enter
mov
or
cwtl
std
sbb
pop
dec
adc
ljmp
repnz
xchg
insl
shr
push
inc
roll
jb
clc
mov
imul
fildl
mov
pop
ss
add
imul
cmp
pop
lods
pop
sub
push
pop
sub
cltd
roll
mov
aaa
mov
dec
xchg
sub
dec
jl
imul
sbb
cmp
mov
scas
pop
dec
cmpsl
aas
add
mov
scas
push
sub
cltd
jl
mov
pop
jae
xor
aad
sub
jg
lea
pop
into
push
shrb
inc
or
pushf
mov
mov
sub
data16
subl
cmp
cmp
and
mov
ficompl
sub
mov
repnz
xchg
int3
imul
mov
out
jg
cmp
mov
aam
aad
movsl
dec
rorl
shld
call
push
movsl
lret
mov
adc
inc
inc
dec
dec
and
cmpsb
aas
out
dec
dec
scas
loope
decb
push
adc
loop
pop
mov
inc
ficompl
mov
loope
jg
mov
push
insb
push
mov
mov
jmp
mov
adc
sub
loopne
and
xor
mov
or
xchg
cld
ss
pop
push
sbb
lods
js
fwait
inc
and
repnz
mov
fists
test
loopne
ja
fcomip
not
fidivl
cmp
jecxz
adc
sbb
pop
xor
enter
enter
insb
and
sub
bswap
add
in
lds
push
dec
push
stc
loopne
pusha
inc
mov
jecxz
xchg
dec
fwait
xchg
adc
mov
inc
and
sub
int
test
imul
test
movsl
lret
fstpl
xor
test
cmpsl
movsb
fxch
mov
cwtl
xchg
xor
cmpsb
mov
in
es
icebp
fsubs
mov
mov
sbb
inc
stos
iret
frstor
or
push
jns
cmp
xchg
loope
adc
mov
pushf
sbb
push
lahf
ret
dec
cltd
insb
add
aam
mov
lods
scas
and
xor
inc
ds
shll
fisttpl
mov
jb
pop
mov
outsl
jno
jns
fcoml
rcrb
pop
adc
adc
fwait
dec
sub
mov
stos
stos
rolb
inc
jmp
mov
jl
cmp
jge
sbb
addb
xchg
loopne
jmp
bound
adc
movsb
mov
cwtl
dec
mov
sbbb
pop
inc
or
nop
and
decb
dec
sbb
sub
and
inc
cmp
mov
stc
mov
mov
loope
jbe
jno
mov
rorl
movsl
fisttps
inc
fidivrl
cmc
insl
inc
mov
push
es
mov
push
xor
mov
decb
push
test
xor
fiaddl
leave
loopne
inc
scas
nop
inc
mov
scas
mov
inc
mov
dec
test
rcr
adc
adc
inc
lods
cmp
mull
cmp
loop
es
rolb
aaa
pop
push
bound
dec
pop
jl
adc
xchg
out
js
adc
stos
insb
aaa
xor
jmp
mov
xor
cmpsb
bound
xchg
dec
in
fwait
inc
sbb
mov
sahf
stos
push
stos
and
aaa
stc
sbb
aam
fdivrl
or
stos
sbb
mov
iret
xor
pop
and
pop
sub
out
push
jle
xor
pop
xchg
inc
dec
call
out
fucomp
es
or
lods
out
inc
fwait
mov
dec
data16
jbe
jns,pt
or
cltd
push
lret
cmpsl
mov
xchg
mov
sub
add
mov
adc
sbb
jmp
adc
cs
gs
inc
mov
inc
fidivrl
push
sub
mov
mov
jg
mov
jno
int3
mov
rorl
jb
icebp
mov
mov
and
jnp
mov
cs
push
lds
pop
mov
into
rolb
clc
cltd
mov
ret
ret
hlt
fs
out
jmp
or
rcr
out
mov
rcr
out
ss
dec
jb
mov
pop
jmp
faddp
fs
std
add
sarl
mov
ficompl
mov
jg
jbe
ja
adc
cld
pushf
push
jl
fdivrs
fnstcw
es
add
mov
cmp
jl
dec
sub
sbb
addr16
push
adc
int3
dec
push
outsb
inc
cltd
sbbb
ss
ss
insl
std
cmp
push
stos
xchg
nop
add
arpl
or
scas
cmpsb
push
hlt
sub
cmpl
push
mov
aam
pop
popf
dec
gs
mov
pusha
scas
pop
ljmp
fildl
leave
pop
push
int
in
mov
cmp
jbe
push
push
fstl
push
enter
ss
stos
and
dec
icebp
xor
add
mov
cli
mov
mov
std
add
mov
aad
sbb
adc
pop
mov
les
testb
movsb
cwtl
repz
aad
ljmp
dec
nop
inc
test
std
js
or
mov
jmp
test
fildl
sub
and
xchg
cs
push
cmp
pop
scas
xchg
xor
int3
xchg
sub
sti
adc
lcall
sub
popf
push
cmc
mov
ja
or
imul
pop
cmp
outsl
mov
fistpll
or
psllw
jno
push
jge
push
cltd
cwtl
jns
mov
shl
sbb
pop
mov
lock
fnstsw
and
mov
push
cltd
jno
fiadds
paddsb
icebp
mov
adc
cmp
push
shr
cmp
jno
cmc
pop
xchg
sbb
test
sbb
cltd
pop
pop
mov
pop
pop
cmp
jl
andb
shrl
mov
mov
repz
mov
pop
cmpsb
ljmp
jno
jge
push
and
ficoml
cmp
pusha
fsubs
mov
jo
loope
or
movsb
imul
sub
pushf
mov
std
scas
pop
ja
jg
mov
sub
xorb
test
wrmsr
sub
jmp
je
andb
pop
mov
mov
lds
neg
mov
fistpl
or
dec
adc
mov
rcrl
push
mov
add
jle
jnp
push
loopne
mov
int
stos
nop
dec
stos
jmp
repnz
pop
adc
ja
leave
lret
mov
aam
or
cmp
sub
in
dec
add
adc
ret
popa
fstp
hlt
adc
inc
lahf
xor
jae
mov
mov
jnp
jns
xorb
pop
adc
rorl
rol
mov
mov
xchg
jp
movsl
loop
cmp
imul
data16
push
mov
imul
add
adcb
or
xlat
je
adc
pop
pop
or
fwait
xor
pop
xchg
sub
test
jp
push
call
mov
negb
in
int
push
push
jo
aad
dec
sbb
mov
cwtl
push
iret
fs
xchg
in
mov
inc
xlat
jg
mov
inc
mov
jne
int
lcall
push
inc
and
push
jl
xchg
adc
dec
fists
mov
push
jl
fdivs
inc
popf
enter
loopne
fisubrl
mov
and
lods
pop
push
fcoml
mov
pop
inc
cmp
mov
cmpsb
or
jbe
jnp
dec
shrl
cmp
sub
es
and
fcoms
add
ds
dec
mov
pushf
push
stc
fstpl
xchg
push
jg
jns
and
cs
inc
dec
xchg
push
ja
cmp
test
xchg
rolb
arpl
cld
mov
rorb
push
ja
xchg
sbb
cmp
cmpsb
mov
pop
jl
and
jae
mov
cmpsl
inc
dec
imul
push
xor
fdivs
dec
sar
into
mov
and
out
test
imul
mov
xchg
pop
inc
icebp
jecxz
repz
popf
lahf
cmp
jl
lret
addr16
sbb
mov
ja
in
jl
add
pop
movzwl
inc
pop
movsb
dec
xor
sbb
sub
ret
ja
mov
jg
push
xor
scas
daa
es
pop
adc
loope
pop
dec
or
or
mov
push
add
mov
mov
jb
push
or
out
mov
jle
jne
xor
lret
sbbb
push
lods
call
push
pop
xchg
xorb
push
dec
jmp
jae
mov
movsb
pop
mov
ret
sbb
and
mov
stc
sub
jg
pop
sub
iret
mov
jle
fiaddl
ret
imul
pop
js
cmp
cwtl
fwait
sub
popf
mov
or
or
cs
mov
mov
push
sbb
sub
out
aad
fsubl
outsl
mov
mov
test
popf
pop
pop
scas
stos
lahf
test
jmp
lods
cmp
pop
ljmp
xchg
scas
or
or
rol
jl
jmp
jg
mov
in
inc
or
test
frstor
cbtw
push
xchg
ret
inc
pusha
iretw
dec
and
push
jle,pt
xor
repz
and
mov
outsb
lret
in
inc
push
fwait
repz
lds
hlt
sbb
notl
dec
shlb
xchg
fcmovnu
mov
lahf
pop
mov
adc
std
sub
mov
aad
testb
fwait
stc
rcl
loopne
pop
test
sub
pop
inc
stos
cmpsb
in
cmp
movsb
rcl
fildl
data16
cld
xchg
ss
std
pop
aam
cmpsb
adc
cltd
pusha
fwait
push
sbb
cmpsb
sbb
mov
fcomps
mov
push
sar
dec
lcall
inc
mov
jno
clc
stc
push
pop
mov
add
push
adc
testl
clc
dec
jmp
xchg
in
dec
test
push
in
sub
mov
lahf
daa
cltd
and
mov
inc
sub
aaa
xchg
jns
adc
xor
mov
nop
cmp
push
cmc
lods
dec
and
inc
and
xchg
or
inc
jbe
add
call
pushf
iret
std
fs
ja
dec
stos
ljmp
idivl
inc
push
xchg
push
stos
out
xchg
out
int3
pop
int3
movsb
mov
out
jo
int3
push
fwait
ljmp
cmp
in
mov
repnz
fbstp
out
and
outsl
in
lds
dec
ss
in
adc
icebp
insb
mov
cmovle
mov
dec
xor
xchg
sub
cld
mov
dec
dec
push
sub
mov
and
jns
stos
sbb
sub
aad
clc
add
add
std
fwait
inc
push
out
pop
dec
cli
mov
mov
and
fs
cmp
loop
or
push
dec
mov
push
sbb
dec
or
mov
in
and
dec
inc
ja
xchg
popf
fnsave
outsb
push
mov
inc
and
mov
ss
add
xor
ljmp
add
add
mov
nop
out
jg,pn
inc
fs
jno
dec
jl
shrb
sub
push
jno
jnp
cmp
push
sbb
rcll
mov
add
cmp
cmp
ss
lea
movsl
add
add
jp
mov
stc
push
cmp
jno
or
sbb
adcb
in
and
cmpsb
xor
sti
popa
jo
movsb
inc
dec
or
pop
daa
int
movsb
sub
dec
xchg
repz
ja
rol
or
push
jmp
add
jae
faddl
cwtl
dec
nop
aaa
notb
cs
mov
in
aaa
scas
stos
in
lret
or
cmp
xor
lds
dec
sbb
loopne
negb
add
ret
xchg
lock
out
jle
fstl
dec
mov
mov
sti
notl
mov
fstpl
mov
mov
nop
jno
fiadds
mov
xlat
call
stos
pop
adc
sarl
ja
jns
sub
stc
or
in
xor
cmp
mov
cmp
and
stc
inc
push
adc
inc
mov
mov
shl
outsl
add
pop
add
add
and
mov
setne
lcall
inc
push
bound
fsts
das
or
mov
ds
mov
scas
mov
xchg
ljmp
ficoms
cmp
data16
inc
clc
jp
mov
mov
jl
xchg
loop
or
dec
or
dec
add
mov
imul
mov
push
mov
lcall
js
sbb
mov
xchg
dec
xchg
out
icebp
in
stos
adc
arpl
add
scas
pop
repnz
xor
iret
sub
dec
mov
addl
movl
or
mov
sbb
pop
arpl
push
fldenv
inc
test
mov
mov
mov
mov
add
inc
xchg
and
sbb
xlat
ret
add
or
incl
sti
sbb
fisubrs
and
repz
out
icebp
or
cmp
cs
mov
clc
mov
jo
push
stc
jmp
cltd
sub
adc
rolb
jns
xchg
aam
fisubl
lea
pop
sub
pop
adc
jae
rclb
mov
in
sbb
or
test
push
mov
or
sbb
push
mov
or
sti
cmp
sub
mov
mov
push
mov
or
sub
cmp
std
test
jb
shll
lods
dec
mov
sbb
push
mov
jmp
js
aam
or
jle
dec
lods
dec
subl
subl
sbbb
mov
addr16
jbe
push
push
addr16
mov
loopne
fs
sub
test
adc
jmp
hlt
and
lods
pushf
adc
adc
int
repnz
cmpsl
in
mov
fstp
lret
xchg
push
stc
cmpsb
adc
mov
sti
mov
add
enter
mov
mov
sarb
mov
das
or
enter
movsl
cld
push
or
pop
push
cmp
mov
dec
or
flds
jae
jb
lods
iret
push
add
dec
dec
jmp
aam
dec
dec
int3
mov
sbb
pusha
filds
fsubrl
cmp
inc
mov
and
and
aas
imul
lret
jecxz
ficompl
shrb
movsb
movsl
sbb
fwait
inc
mov
cmp
mov
mov
shl
pop
jb
push
push
lcall
in
push
mov
mov
je
pop
stos
repnz
cwtl
dec
lcall
push
cs
aam
ja
sub
lds
jg
or
mov
in
es
aaa
lret
imul
add
insb
std
imul
outsl
rcrl
cmpsl
jo
jg
sbb
push
sub
arpl
aam
sbb
out
lods
fiaddl
mov
dec
fistpll
and
cld
push
call
fdivs
jno
adc
lock
lods
add
add
push
inc
jbe
add
in
pop
and
xchg
bound
fsubrl
std
cmpsl
sar
sub
test
lea
les
adc
incb
adc
data16
or
mov
or
dec
push
xor
pop
inc
in
les
and
adc
fcompl
jne
push
stos
mov
pop
cld
inc
int
gs
scas
xchg
cmp
mov
lret
movsb
dec
ja
je
pop
imul
push
cmp
adc
mov
shrb
cmpsb
xchg
repnz
add
and
loope
push
ret
cltd
push
mov
sbb
add
orb
add
scas
dec
out
mov
inc
leave
scas
jg
jg
mov
push
test
dec
cmp
jl
sbb
push
popf
test
mov
jbe
xchg
dec
dec
inc
dec
sub
repz
rcl
out
stc
dec
add
icebp
test
pop
xchg
mov
lods
mov
adc
and
inc
imul
xor
push
mov
and
rorl
xor
mov
negl
stc
cmc
adcb
dec
aam
pop
jp
jno
pop
xchg
lea
test
push
mov
push
ficoml
cmp
xchg
stos
leave
inc
nop
mov
ret
xchg
and
jne
push
fisubrl
repz
fdivp
mov
push
loopne
cmc
addl
outsl
dec
sti
fists
test
iret
sub
sbb
jl
lcall
add
xor
push
jecxz
mov
lcall
inc
xor
ja
dec
mov
idivl
shll
out
inc
test
fbld
insl
fcmove
sub
data16
push
es
fbstp
stc
pop
xorb
cmc
mov
lea
or
mul
pop
in
es
shr
lea
jo
xor
adc
and
sbb
mov
nop
mov
jo
sarl
ljmp
in
call
xchg
cmp
popf
add
lods
aam
cld
fidivs
sub
movsb
or
add
fadds
xchg
ret
jecxz
push
mov
inc
push
jmp
cltd
mov
in
xor
fwait
sub
dec
pop
ljmp
mov
ja
inc
cmp
icebp
sub
stos
mov
push
roll
mov
xor
loopne
push
inc
lea
push
sti
es
test
lods
xchg
jle
dec
pop
cmpsl
js
jg
pop
fwait
jle
mov
into
in
cmp
ss
jne
sarb
jmp
dec
xor
movsl
out
dec
pop
inc
andb
into
sbb
and
mov
push
stc
xor
adc
or
push
lods
mov
xchg
adc
pop
inc
sarb
lahf
into
cltd
les
adc
fs
add
dec
shll
mov
xchg
cmp
mov
lea
imul
mov
les
xchg
mov
pushf
mov
imul
inc
dec
xchg
in
cmp
push
cmp
mov
pop
mov
push
inc
cmpsb
mov
pusha
cmp
inc
movsl
insl
or
cmp
push
dec
mov
inc
jmp
roll
popa
push
mov
subb
pop
jns
clc
lret
out
das
mov
cmp
mov
push
stos
sti
mov
fwait
hlt
dec
arpl
enter
cs
shll
cltd
xlat
scas
sbb
add
imull
mov
fucom
add
leave
or
sti
fs
out
imul
jbe
setle
pop
clc
and
out
bound
xchg
test
mull
fisttps
mov
fnstenv
popf
push
sahf
mov
leave
cltd
xchg
sbb
adc
sbb
mov
jge
sub
out
cmpsl
mov
mov
incb
ljmp
nop
ror
pop
mov
fidivrs
adc
outsb
pop
push
push
iret
and
insb
add
jge
lock
pop
mov
jae
mov
lods
inc
scas
mov
test
mov
stos
pop
mov
xchg
stc
sub
into
jge
mov
imul
hlt
inc
lea
fwait
cmp
mov
stos
test
outsb
or
gs
xor
pop
mov
mov
mov
adc
inc
pusha
or
cltd
mov
sub
adc
lcall
rcrl
cmpsb
lret
orb
pushf
xor
mov
pop
out
fbld
test
push
dec
loopne
mov
jae
jno
sub
mov
sub
pop
int3
mov
push
in
mov
xchg
push
sbb
mov
sub
movl
nop
shrl
sub
pusha
sti
adc
insb
cld
clc
jbe
fstps
cmp
lods
mov
repz
std
hlt
jp
aaa
sub
cmp
insb
iret
inc
adc
decl
mov
dec
stc
jns
ret
and
fwait
jmp
mov
add
pop
push
in
mov
mov
dec
or
iret
lods
sub
out
nop
jp
cmpsl
xor
loope
call
sub
cmp
mov
das
shl
shlb
popa
jmp
mov
adc
or
testl
mov
into
lcall
divb
imul
mov
das
int
jp
pop
call
mov
lcall
mov
add
and
enter
cmpsb
nop
and
dec
xor
mov
fdivl
sbb
add
cmp
arpl
mov
cmp
int
int3
pop
cmp
cli
jb
divl
shl
inc
es
das
and
sub
js
notb
pop
sbb
add
cs
sbb
fimuls
lods
and
test
mov
lea
sbb
mov
pusha
fcomi
sbbb
scas
jg
fwait
jl
inc
bound
push
sbb
sub
add
leave
adc
int3
adc
fisubrl
pop
stc
lods
sbbb
clc
mov
stc
xlat
push
inc
jmp
sti
nop
adc
arpl
test
ss
icebp
mov
jg
les
jle
stos
stc
add
test
cmp
les
imul
adc
nop
sbb
lret
sbb
xchg
add
sbb
sbb
fisttpll
pop
mov
jnp
inc
ss
mov
xor
or
pop
mov
test
movsb
xchg
cltd
or
lret
fs
adc
mov
jecxz
sarb
pusha
stos
and
lds
cs
ret
adc
daa
fwait
inc
adc
sbb
pop
fldenv
and
popf
cmp
cmp
cmc
testb
loopne
mov
or
icebp
jae
or
mov
xlat
push
dec
iret
stc
mov
sub
lods
dec
or
pop
scas
andl
in
xlat
ret
jp
xchg
mov
and
cld
push
out
fcom
pusha
int
dec
dec
fnsave
loop
gs
add
sahf
sub
int3
push
push
ss
js
jg
fimull
sbb
mov
dec
mov
pop
xchg
inc
insl
adc
sti
mov
pop
inc
dec
xchg
stc
push
push
enter
cmc
push
lea
adc
clc
mov
test
popa
shll
cs
lods
push
mov
mov
xor
jl
push
insb
ret
push
out
sbb
adc
imul
adc
jb
icebp
add
pop
inc
sub
test
in
icebp
pop
adc
pop
into
adcb
nop
out
repnz
inc
push
jns
faddl
jo
es
dec
jl
lods
add
inc
ficompl
fidivs
mov
cmp
aas
imul
std
mov
in
push
mov
sub
inc
xorl
xchg
jmp
mov
insb
adc
push
push
xchg
or
loop
mov
loope
push
add
inc
mov
scas
pop
sti
mov
jg
sarl
scas
fstpt
jb
push
pop
mov
clc
iret
mov
dec
scas
push
jno
adc
push
cmpsl
pop
pop
std
fwait
mov
fsubrl
add
push
sbb
out
ror
loope
cs
jo
in
loope
pop
scas
push
dec
pop
inc
in
aas
cmp
imul
insl
les
icebp
mov
repz
dec
movsb
test
fs
cmp
ss
cmpsl
test
xor
shll
std
mov
pop
int
dec
xor
les
shlb
loop
mov
mov
or
mov
data16
push
loopne
cmp
or
pop
movsl
ret
xchg
or
loope
js
out
daa
in
aas
adc
and
mov
lret
add
push
ret
mov
lods
fiaddl
das
fwait
ds
mov
sbb
loop
pusha
cmp
and
icebp
mov
jg
cwtl
shr
and
out
cli
pop
and
inc
popf
int
repz
daa
pop
sub
mov
cwtl
test
jecxz
mov
aas
add
rclb
loop
into
sbb
fdiv
xchg
dec
push
mov
test
cli
adc
pop
push
ds
dec
mov
stos
jo
jno
push
dec
ljmp
dec
into
or
mov
jne
out
in
mov
in
test
into
sti
mov
mov
int3
pop
mov
mov
cld
ficompl
je
pop
xchg
add
pop
sub
jle
xor
sbb
fwait
scas
sub
sti
mov
in
loope
sbbb
adc
sub
in
mov
hlt
sub
ja
out
fisttpl
pop
xor
inc
and
stc
cmp
push
jmp
pushf
out
pop
cmp
adcl
imul
aaa
je
sub
test
add
inc
hlt
mov
jg
shlb
leave
sub
lea
sar
mov
dec
dec
push
lret
insl
dec
cmpsl
cmpsl
shl
stc
push
fwait
out
movsb
push
dec
shll
inc
push
pop
ret
mov
mov
inc
dec
jno
cmpsl
in
sbb
sbb
sub
decl
push
cmp
mov
jb
push
inc
imul
xchg
ficomps
mov
push
sub
fwait
mov
ret
aam
cwtl
lea
dec
daa
and
push
icebp
int3
nop
mov
or
pop
iret
nop
inc
movsl
mov
test
jno
std
cmp
mov
xor
cli
or
in
cmp
jmp
rcrl
xor
fstpt
xor
fs
jle
sub
push
cmp
leave
jns
repnz
mov
mov
cmp
mov
add
arpl
pushf
pop
add
inc
cmpsl
dec
cmp
push
lods
int3
test
push
pop
lret
dec
fisubrl
out
repnz
fisttps
sbb
loop
fwait
imul
push
dec
sbb
cmp
dec
xchg
and
shl
std
pop
repnz
push
sbb
jecxz
pop
je
pop
adc
rcr
or
xchg
cmp
cld
add
inc
inc
pop
mov
sub
mov
sub
cmp
cltd
insl
sbb
cwtl
xchg
test
pop
jae
ljmp
sub
lods
pushf
or
test
mov
jno
lock
xlat
stos
fisubrl
pop
mov
cmp
ja
mov
sbb
call
and
xlat
jns
mov
lret
adc
jge
inc
mov
cmp
mov
sub
pushf
dec
mov
repz
lcall
cmpb
shlb
sub
aas
mov
push
adc
pop
shlb
fwait
lds
jb
ds
push
decl
ret
in
mov
pop
fmuls
push
mov
in
jns
dec
push
adc
scas
inc
lods
cmpsl
add
pop
mov
out
pushl
add
push
fisubl
outsb
scas
lods
inc
bound
mov
incl
roll
mov
ret
in
sbb
mov
xchg
ljmp
sub
add
and
fwait
pop
dec
fwait
sub
repnz
pop
mov
mov
inc
jl
inc
movsb
add
das
sub
fwait
out
int
int3
lods
xchg
lret
inc
mov
test
sub
lret
jle
test
fisubrs
hlt
sar
mov
push
push
mov
scas
adc
repz
out
mov
push
adcb
inc
mov
mov
inc
mov
pusha
lret
data16
inc
adcb
shlb
arpl
imul
cmp
pop
cmc
and
stos
mov
stos
mov
daa
mov
sti
mov
mov
addr16
inc
mov
rcll
shlb
dec
jne
inc
mov
sub
and
inc
jg
arpl
mov
call
mov
int
mov
add
mov
cld
pop
pop
mov
idivb
call
shrb
xchg
mov
push
cmp
push
dec
scas
mov
into
dec
movsl
insb
fs
movsl
movsl
dec
jg
std
ja
mov
test
adc
iret
or
les
repz
repz
cltd
std
dec
or
imul
inc
shrb
or
notl
push
inc
mov
popa
dec
aaa
ss
into
imul
sti
xchg
hlt
dec
nop
sub
jo
mov
rcrl
pop
mov
sarl
aad
sub
mov
frstor
into
loop
inc
int
mov
mov
sub
jge
fbld
dec
test
cmpsl
xchg
movsb
push
call
and
outsb
pop
mov
aaa
insb
stc
add
adc
test
jbe
fsts
cmc
xor
push
shll
fidivrs
sbb
inc
mov
jmp
icebp
dec
xchg
cltd
jbe
and
or
xchg
nop
outsb
sub
jno
dec
add
mov
addr16
pusha
inc
mov
loope
pop
mulb
test
repz
lret
adc
jno
shll
jns
fadd
mov
mov
loope
xor
mov
cmp
lods
daa
cmp
sbb
repnz
sub
mov
in
insb
fidivs
xor
mov
xchg
mov
pop
inc
rclb
sub
push
das
jmp
lock
add
das
inc
testb
cmp
or
push
fs
sbb
and
adc
cmc
popf
addb
jg
mov
or
insb
inc
mov
rcl
cwtl
sub
xchg
das
cld
mov
push
lret
dec
push
jno
and
mov
add
lock
pushf
popa
cmpsb
pop
adc
loopne
mov
pop
in
xlat
cmp
sarl
mov
cmpsb
in
repnz
push
stos
push
jae
mov
roll
jbe
jg
pop
cmp
shrl
dec
mov
out
cwtl
pop
pop
jns
inc
inc
xchg
cmp
movsb
xchg
push
push
adc
nop
cmpsb
mov
lods
and
inc
in
jb
dec
adc
stos
repz
fs
cli
jp
imul
je
ds
fwait
add
xchg
lret
clc
leave
add
jge
ret
sahf
lret
add
hlt
popa
mov
push
jp
fisttpl
adc
mov
movsb
popf
mulb
mov
outsb
xor
and
decl
add
mov
push
lret
ficoms
mov
leave
test
and
mov
adc
mov
jnp
loopne
cltd
in
sti
pushf
push
mov
lcall
inc
dec
xchg
movsb
jo
iret
cmp
cmp
mov
movsl
cmpsl
test
bswap
jl,pn
adc
push
insl
pop
mov
mov
stos
fwait
ljmp
adc
fmuls
sti
mov
out
pop
cltd
adcb
pop
cmp
push
loop
jg
push
jmp
cli
mov
test
cli
xchg
sub
sbb
ds
repz
jb
mov
dec
pop
sub
mov
mov
cltd
xchg
add
push
xor
shrb
sbb
mov
pop
mov
scas
fdiv
mov
ljmp
lret
out
mov
pop
setns
hlt
loop
jno
movsl
mov
and
mov
repz
jg
movsb
add
ss
mov
mov
cld
fwait
xor
cwtd
or
mov
lods
dec
gs
enter
adc
fwait
pop
mov
mov
pop
scas
pop
fdivs
jecxz
cmp
add
bound
push
stos
fdivl
jns
adc
test
stos
adc
jmp
cmp
incl
jmp
adc
fimuls
sub
in
test
mov
xor
adc
mov
addr16
xor
jns
pop
cmp
jmp
sub
cltd
cmpsb
pop
filds
or
rcrl
cmp
push
push
sub
mov
pop
pop
dec
addb
sbb
push
andl
nop
cld
add
push
fiaddl
fsubrs
aas
lahf
mov
mov
dec
mov
sub
inc
cmp
ss
add
popf
ss
xchg
lcall
ret
mov
jno
nop
lahf
mov
jbe
mov
sbb
cmp
add
lret
xchg
push
push
pop
out
ret
push
xor
adc
mov
push
int3
sub
and
jae
pusha
into
jmp
mov
and
xor
loope
pusha
bound
sbb
repnz
outsl
sub
mov
add
and
xchg
outsl
or
movsb
imul
in
add
cmp
jb
or
dec
add
repnz
jg
xor
jae
fimull
jb
or
mov
cmp
into
sub
out
test
adcb
jmp
mov
test
rorb
mov
fdivs
pop
mov
mov
pop
fildl
jle
cs
mov
repz
sbb
dec
xor
jne
sub
sub
mov
popf
pop
clc
jo
xlat
mov
fwait
adc
mov
pop
je
pop
inc
dec
push
adc
inc
mov
jmp
jae
push
fs
rcr
cs
iret
lret
dec
push
pop
mov
loop
push
push
push
inc
insb
shl
and
and
icebp
ss
mov
push
outsb
subb
lods
adc
mov
mov
orb
cs
ss
inc
fisttpl
jae
cmp
fwait
xor
sbb
mov
andb
aam
sbb
insl
or
out
add
add
ljmp
sbb
or
cmp
fmull
shrl
add
inc
cli
fwait
shl
mov
xorb
adcb
fneni(8087
in
lret
aas
jae,pn
std
iret
ficomps
aaa
fisubrs
xchg
stos
loopne
ljmp
add
xor
movsb
test
inc
and
lods
jge
sti
dec
subl
lcall
and
jecxz
fldt
jg
call
iret
fisubrl
nop
push
in
xor
enter
push
jmp
dec
jp
jmp
sub
insb
pop
imul
jne
inc
jo
or
jl
ret
jns
fdivp
pop
pop
testl
inc
dec
cmp
rorl
push
cs
inc
cmpsb
push
lret
or
xor
adc
adc
fnsave
in
loopne
fcompl
out
sarl
sbb
fiadds
loope
inc
sub
mov
scas
push
jbe
inc
push
rclb
sub
pop
fisttps
pop
cli
and
push
jno
stc
cmp
dec
mov
jae
mov
stc
add
xchg
mov
shrb
or
lds
cwtl
jnp
add
mov
ja
mov
sti
mov
pop
outsb
or
mull
jmp
loope
and
push
mov
mov
add
xor
insb
inc
icebp
sbb
stos
pop
int3
out
pop
dec
lcall
imul
cmp
pop
jmp
adc
pop
or
or
push
mov
jecxz
adc
or
mov
jg
into
mov
inc
and
addr16
fmul
rclb
adc
or
loope
cmpsb
push
cmpsb
mov
aas
mov
insb
out
and
dec
jg
xor
jge
int3
jle
jae
xchg
dec
add
rcrl
cmp
inc
mov
ret
sub
lods
jmp
rcl
cs
dec
dec
jmp
mov
adc
std
cmp
lds
pushf
push
dec
and
dec
add
dec
mov
dec
inc
aam
mov
rcpps
add
out
mov
jg
shr
sahf
das
cmp
adc
and
bnd
push
rcrl
das
and
dec
pop
pop
scas
adc
mov
fmul
xchg
adc
fisubrl
xchg
pop
mov
stos
insb
mov
push
jne
and
add
sbb
sti
pop
and
int
cmp
out
sbb
scas
and
xor
cld
loopne
jno
xchg
push
jns
push
pop
movsb
imul
jmp
jmp
inc
and
push
sti
mov
sbb
pop
out
loop
sub
xchg
jg
adc
pop
aad
push
push
jbe
movsl
out
or
jmp
jbe
out
xor
shll
and
andb
xchg
xlat
pop
or
add
or
sbb
lods
jle
jg
in
mov
in
and
push
das
mov
das
cld
jns
inc
sub
push
lret
call
rol
mov
push
or
inc
cmp
sbb
lods
cmc
lods
dec
orb
lret
test
dec
mov
xchg
addb
jmp
adc
jge
ret
inc
mov
mov
mov
out
or
test
push
mov
dec
popf
xor
pop
cmpsb
arpl
push
nop
out
int
negl
pop
xchg
mov
ja
cmp
ljmp
fsubrs
xor
mov
sbb
lods
out
out
shll
or
std
jmp
scas
pop
mov
cmp
mov
fs
mov
or
xlat
jp
or
dec
ret
movsb
sbb
pop
fmuls
pop
jmp
pushfw
ffree
mov
std
aas
jbe
aas
outsl
cmpsl
or
cld
pop
dec
stos
fcos
cmp
rorb
stos
dec
push
xor
sahf
arpl
pop
mov
mov
cld
push
cmc
jno
cltd
push
js
in
stos
pop
mov
mov
rcrl
or
mov
clc
xor
popa
mov
test
adc
ret
pop
in
loop,pn
stos
cltd
jg
gs
testl
shrb
test
and
leave
fs
lods
dec
inc
cmpsb
dec
scas
pop
addb
push
push
dec
mov
dec
adc
cmp
cmp
jb
ss
orb
add
push
fbld
outsl
pushf
lcall
sar
mov
mov
adc
sbbl
cmp
scas
add
adc
dec
push
lret
dec
mov
mov
stos
or
add
lret
xor
push
xchg
push
insl
inc
inc
cmc
sub
push
cwtd
scas
in
and
mov
pop
xchg
test
inc
test
dec
mov
cld
sbb
cltd
pop
fs
sub
dec
std
pop
mov
jo
mov
mov
cmpb
jecxz
mov
adc
ret
add
inc
in
negl
push
dec
jl
lret
mov
mov
mov
mov
and
mov
mov
fsub
mov
in
fld
pop
sbb
mov
in
push
inc
repz
cmp
pusha
mov
mov
jecxz
cmpsl
ret
jge
daa
lods
mov
inc
lods
addr16
or
sub
cmp
shll
pop
sub
inc
mov
lahf
cwtl
aas
mov
jecxz
call
xchg
cmp
roll
inc
ficoml
clc
das
pop
rorl
mov
movsl
faddl
ja
pusha
push
sub
sbb
dec
xor
push
aas
mov
les
jno
mov
ret
in
pop
fldt
jne
out
jmp
iret
hlt
nop
fst
fs
mov
mov
mov
flds
add
div
push
ret
inc
mov
testl
out
shrl
push
mov
dec
xor
jb
jp
cmc
mov
pop
mov
xchg
enter
bound
push
fsubrs
aaa
push
sub
aaa
mov
inc
lret
aam
fwait
inc
fs
mov
sti
mov
sbb
mov
pop
stc
xor
dec
cmp
test
pop
mov
mov
jbe
xlat
mov
adc
lcall
push
jle
cmp
push
mov
hlt
xacquire
inc
inc
mov
add
push
imul
pop
std
fwait
push
cmp
xchg
sub
jp
sbb
jnp
insl
adc
jbe
fs
xor
push
inc
mov
mov
aas
mov
jle
rol
pop
fmull
enter
inc
into
jnp
idivb
jne
mov
into
std
pop
shll
sub
pop
add
add
jno
jl
sbb
cld
inc
in
cmp
jno
jmp
xor
fcomps
fwait
jp
rcl
ds
pop
sub
sbb
push
sub
dec
mov
jge
and
lods
aam
mov
mov
inc
mov
mov
jp
push
push
or
imul
in
jns
pop
fwait
sbb
aam
adc
fwait
jg
fnstenv
sti
xor
or
push
ja
xchg
xor
xchg
push
pop
xchg
sbb
cwtl
dec
jbe
cmp
inc
jns
pop
and
dec
cmpsl
fdivp
das
insb
aam
ds
fisubrs
and
inc
lods
fidivs
lods
push
cmp
in
call
js
jl
fidivrl
movsb
cmp
scas
roll
fnstcw
lcall
addl
inc
cmp
icebp
cmp
mov
mov
in
mov
repz
sbb
outsl
dec
repz
inc
dec
rcll
sbb
push
mov
push
jge
xor
popa
xchg
cmp
and
add
mov
in
xchg
insl
jg
call
and
pop
inc
imul
mov
es
sub
cmp
nop
mov
jmp
push
dec
lret
jb,pn
iret
fistpll
mov
mov
shr
sbb
xor
shrl
lods
cmp
inc
push
mov
sbb
xchg
in
nop
inc
inc
ffreep
xor
sub
imul
mov
pop
inc
push
in
in
dec
mov
push
cmp
sti
sbb
arpl
pop
and
ljmp
and
lock
pop
xchg
arpl
dec
mov
stos
lds
mov
push
mov
scas
pop
cmp
inc
mov
mov
cmc
jg
xchg
nop
cmp
pop
adc
stos
pop
popf
inc
jo
fists
sti
fwait
repz
cmp
mov
push
popf
cmp
inc
xchg
lret
inc
fs
repz
ds
daa
jb
testl
arpl
lods
add
arpl
adc
pop
outsb
fstpt
clc
or
adc
mov
cmc
adc
add
add
xchg
addr16
jb
cli
sti
fcoml
mov
fildll
test
repz
pop
jns
or
lods
popf
stos
lret
mov
xchg
sbb
rcrl
pop
fidivrl
mov
scas
mov
fs
or
das
pop
fcom
add
cmp
int
push
insb
xorl
ja
sbb
pop
add
pop
sub
movsb
pop
xchg
sahf
lds
push
loope
imul
xchg
les
test
mov
icebp
nop
jb
or
inc
xchg
xlat
sbb
pop
sbb
fsts
test
and
cmp
cbtw
andb
mov
push
roll
cmp
inc
repz
inc
repnz
inc
jno
fwait
push
mov
scas
xchg
fldt
pop
add
pop
pop
pop
sub
nop
cltd
mov
jmp
pusha
or
pop
mov
icebp
loopne
test
popf
leave
lret
jecxz
movsb
fldcw
inc
push
xchg
cmc
fs
fxch
cltd
xor
loop
or
ljmp
imul
or
pushf
xchg
cmpsl
aas
push
and
cltd
shrb
ds
shll
jbe
fidivl
inc
fsubrl
xor
fdivp
repz
jns
sahf
in
push
inc
in
mov
lret
jnp
pop
gs
and
mov
pop
cmp
mov
fwait
subb
inc
jl
dec
dec
jno
xchg
cmp
add
jnp
adc
fwait
sbb
mov
or
xchg
mov
in
xchg
scas
hlt
cmp
js
sbb
das
clc
bswap
adc
dec
mov
ss
mov
inc
xor
std
adc
jmp
mov
jmp
insb
mov
insl
xchg
gs
pushf
std
mov
dec
andl
scas
fs
dec
testb
jbe
repz
or
clc
lods
dec
loopne
jge
xor
sar
mov
ja
or
or
sub
inc
or
in
add
fs
fyl2x
in
xchg
push
stc
movsb
call
sti
mov
imul
push
dec
dec
sub
pop
xchg
js
xor
ret
jp
clc
mov
pop
pushf
cmp
mov
idivl
or
pop
sub
cmp
sub
pop
sbb
add
sub
leave
shll
mov
ret
mov
mov
xor
jl
mov
fmull
fs
inc
push
sbb
cmp
xchg
mov
jo
pop
xlat
mov
repnz
mov
lret
inc
es
or
in
sbb
mov
and
iret
inc
outsl
mov
mov
je
sbb
push
mov
mov
inc
ljmp
fsubp
pusha
cld
mov
mov
mov
jno
dec
mov
xor
movl
sbb
dec
scas
dec
or
push
ja
scas
or
mov
xor
cmpsb
jb
add
sbb
push
and
out
cmpsl
jecxz
or
and
shll
cmpsw
fsubrs
sarb
repz
out
inc
mov
jae
inc
movsl
leave
mov
or
inc
orl
nop
lcall
or
sbb
mov
sti
jle
in
rclb
btr
mov
jne
mov
dec
dec
pop
mov
addr16
add
mov
lock
push
sub
das
out
mov
or
loop
dec
jo
cmp
adc
in
mov
scas
imul
addr16
cmc
aas
add
push
dec
add
and
repz
sub
popf
inc
lcall
sti
std
or
out
mov
daa
add
add
sbb
xchg
fidivl
or
pop
jmp
jecxz
insb
out
cmp
push
and
xor
loop
into
sub
sbb
jge
mov
leave
outsb
mov
sbb
mov
in
ss
in
xlat
dec
cmp
sub
dec
out
test
imul
ds
stos
add
imul
stos
sti
icebp
ljmp
in
cltd
cmp
ljmp
scas
pop
jg
mov
mov
insb
mov
add
fwait
cmc
test
fs
shrb
fs
xor
std
popf
mov
pop
add
sub
jbe
enter
push
repnz
xor
lods
jmp
dec
in
fidivs
push
mov
add
movsl
cmp
nop
mov
int3
xor
es
std
push
xchg
daa
cmp
adc
notb
iret
fsubrp
negl
popf
push
sbb
jae
sub
xor
cmp
test
dec
xchg
cmpb
addr16
adc
mov
and
push
iret
jo
jg
leave
mov
pop
add
lods
shrb
rcrb
enter
push
adc
adcl
lods
imull
mov
aad
in
sbb
fsts
sti
faddl
inc
je
push
pop
xchg
sahf
push
xor
jae
mov
ljmp
jge
push
test
xchg
inc
fwait
sub
mov
out
adc
test
dec
cwtl
jae
cld
cmp
mov
cmovle
add
inc
lret
fmull
bound
int3
ss
lcall
sahf
insb
push
sbb
call
ja
movsb
xchg
loopne
adc
dec
sbb
lods
out
xor
mov
pusha
mov
push
mov
fmuls
out
aaa
xchg
std
das
pop
cltd
mov
or
jns
mov
dec
push
mov
out
xchg
mov
and
shl
stc
sub
and
pop
jo
jl
enter
das
push
mov
repz
mov
movsb
add
imul
fstpt
rcrl
sarb
xorb
adc
mov
icebp
inc
gs
sbb
jae
mov
sti
and
pop
mov
xor
dec
and
loop
jp
jbe
inc
mov
cwtl
adc
cmp
mov
push
jmp
std
and
cmp
nop
int3
ja
iret
dec
scas
xor
dec
ljmp
jae
icebp
faddl
or
cltd
dec
cs
cmpsb
mov
inc
arpl
fsubs
lds
imul
into
std
lret
mov
push
lret
sub
je
add
xlat
hlt
jmp
xchg
mov
add
push
push
adc
lods
movsb
fwait
sbb
pushf
inc
adc
scas
mov
mov
push
push
and
fucomp
aas
push
or
cltd
jnp
fisttpl
dec
sbb
sbb
sub
mov
data16
inc
enter
pop
inc
mov
adc
xchg
pop
lods
ss
adc
lea
fimull
mov
fdivrs
mov
xor
push
mov
cmpsl
shl
push
js
adc
cmpb
sbbb
pop
cmpsb
pusha
mov
add
imul
dec
mov
dec
adc
dec
jae
lret
lods
inc
xor
mov
xor
mov
cld
in
mov
sbb
in
adc
cltd
jnp
pop
push
dec
adc
mov
xchg
mov
cmc
loop
jno
xchg
and
pop
mov
imul
mov
enter
push
pop
xchg
fimull
push
in
subb
adc
jecxz
inc
fwait
xor
jmp
jg
add
mov
sbb
loop
divl
add
push
sti
mov
lods
sti
or
jmp
jl
push
xchg
jecxz
ret
and
jg
lock
inc
insb
sub
or
scas
dec
fisttpl
pop
adc
int
mov
lods
scas
jnp
dec
or
sbb
pop
sub
lods
rorl
cld
and
cld
cmp
rcrl
cld
jl
fidivrl
ds
rorl
and
push
mov
dec
xchg
mov
loope
mov
mov
int3
xor
dec
mov
stc
xor
ret
jns
jle
inc
pop
adc
sub
clc
rcll
jle
xor
aam
int
pop
mov
fs
inc
popa
cmpsb
fsubl
or
sub
push
stc
sti
adc
jmp
mov
and
lds
pushf
div
or
stc
push
pop
out
and
sub
repnz
sbb
add
dec
and
mov
mov
mov
loop
ret
or
js
mov
adc
adc
lret
fwait
out
push
cmpsb
mov
jno
sub
jg
movl
pop
sub
sti
jle
inc
mov
in
and
test
je
xchg
repnz
xor
dec
cmp
mov
into
fwait
lcall
jl
dec
mov
arpl
or
cmc
cmp
mov
and
ja
and
lcall
cmpsl
cs
ljmp
mov
ljmp
pop
test
mov
je
jns
movsl
andl
inc
jns
adc
pop
daa
dec
fstpl
add
mov
cmp
les
mov
mov
mov
add
adc
adc
xor
fs
mov
nop
pop
rcrb
cld
ds
push
ljmp
orb
mov
xchg
mov
loope
lcall
inc
push
lahf
scas
cmp
aam
lds
push
fsubrs
push
xor
fisttpll
adcl
fsts
cmp
push
xchg
mov
push
sbb
rcl
int3
imul
data16
jl
je
xchg
cs
ret
je
sub
rcr
jnp
sbb
test
sub
movsb
and
or
cmp
mov
gs
sbb
add
sbb
stos
fwait
cmp
clc
pusha
cmp
rorb
in
jmp
mov
test
sbb
dec
sbb
mov
repz
dec
and
lea
jmp
mov
cmp
scas
sub
fsubr
cld
mov
push
inc
mov
sahf
xor
fiadds
dec
cmc
mov
or
adc
add
scas
mov
xor
jl
cmp
mov
stos
sti
pop
cwtl
jb
cmpsb
outsl
dec
mov
fdivp
mov
shll
mov
jae
stos
and
cmp
dec
add
fwait
dec
inc
mov
or
insl
rcrb
call
cmp
jg
in
sbb
aas
jbe
in
fldt
dec
les
stos
std
movsl
pusha
pop
fiaddl
test
fwait
cld
pop
mov
or
ficoms
adc
or
jb
cmp
cmpsb
inc
xchg
repz
cmp
insl
stos
sti
push
insl
jns
cmp
push
sub
jp
push
es
clc
lahf
mov
mull
dec
xchg
in
repnz
pop
cmp
pusha
or
insb
insl
cmp
and
adc
shr
les
push
push
inc
andb
pop
int
iret
mov
idivl
sahf
pop
mov
dec
sub
jo
push
iret
nop
imul
in
icebp
in
cmp
jl
and
sbb
rolb
lret
aaa
stos
mov
aam
xor
lock
outsb
nop
mov
fistps
push
lret
rol
xchg
push
ret
and
pop
jp
xchg
stos
std
and
imul
cmp
inc
pushf
dec
ljmp
or
push
stos
mov
andl
addr16
dec
mov
outsb
mov
neg
dec
push
mov
dec
call
sub
adc
sub
xlat
mov
stc
out
pusha
jns
out
out
out
mov
or
movsl
and
aad
mov
popa
mov
and
rcrl
adc
mov
hlt
fidivl
sbb
mov
adc
mov
inc
push
mov
fnsave
jbe
flds
lds
dec
push
sub
add
jp
stos
fwait
fwait
lahf
mov
xchg
dec
jo
cltd
jae
data16
repnz
sub
mov
xchg
cmp
push
pop
sahf
ds
push
xchg
jb
andb
dec
mov
ss
nop
push
js
push
pop
or
adc
arpl
cmp
cmp
cs
clc
or
fwait
outsb
dec
test
jl
adc
test
ror
loope
dec
cld
stos
std
dec
mov
jbe
jp
add
out
push
add
test
rolb
push
insb
es
push
mov
fwait
xchg
mov
pop
sahf
lea
dec
mov
xchg
dec
mov
in
xchg
adc
imul
adc
jne
out
and
adc
cmp
repnz
hlt
sub
xor
movsb
stc
shrl
mov
adc
shlb
aam
jne
sub
repnz
jmp
push
xor
stc
loopne
sub
adc
ss
ret
mov
push
xchg
pop
sbb
sbb
add
cwtl
frstor
and
inc
mov
ljmp
or
xor
jns
xor
fbld
or
dec
sub
fcmovnb
sub
cmp
mov
mov
mov
outsb
les
add
dec
jne
fs
cwtl
or
cmpsb
stos
mov
out
aad
mov
cld
mov
pop
and
xor
inc
loope
test
popa
push
dec
add
hlt
scas
push
mov
stc
lcall
sahf
pop
in
or
pop
inc
loopne
mov
push
mov
jg
hlt
mov
or
movsb
out
adc
fwait
scas
dec
mov
xlat
insb
sti
iret
outsl
test
inc
nop
cs
imul
test
daa
push
lods
bound
or
pop
iret
aaa
mov
fmull
pop
or
pushf
cld
mov
mov
pop
es
sti
ret
inc
sbb
rorl
ljmp
inc
mov
mov
sub
add
mov
fisttpll
xor
cltd
mov
fcoms
push
in
sbb
inc
es
aaa
lret
jnp
jae
or
mov
aas
ljmp
adc
or
sub
and
sbb
and
mov
jnp
filds
mov
push
hlt
xchg
jne
mov
loop
insl
int3
and
ficoml
mov
sub
ss
mov
ret
in
std
pop
incb
jecxz
test
or
jg
mov
adc
out
or
adc
push
pusha
fstpl
mov
mov
jno
xchg
scas
jmp
cmc
sub
inc
cmp
stos
fmul
jg
loope
xchg
leave
ljmp
pushf
lods
aam
mov
mov
mov
dec
push
pusha
fcomi
dec
repz
mov
sbb
in
sub
inc
and
jle
arpl
sub
cmpsb
cwtl
sbb
stos
loope
pop
mov
fildl
mov
jno
test
data16
fsts
cmp
dec
jnp
jmp
sbb
scas
push
ja
dec
or
inc
jmp
adcl
sbb
mov
sahf
jno
mov
inc
cmp
sub
out
jns
fstl
add
mov
test
push
xor
dec
jbe
push
sub
cmp
jle
test
add
ljmp
imulb
mov
jo
cmpsl
leave
sub
or
or
iret
inc
xorb
adc
loopne
addb
add
cmp
jae
insl
mov
in
sbb
xchg
jae
xchg
mov
push
cmp
pop
dec
in
fwait
mov
xor
or
test
addl
xor
adc
adc
mov
mov
inc
jno
in
add
push
les
xchg
mov
popf
mov
adc
xchg
js
mov
imul
mov
addr16
jb
scas
add
jb
add
and
arpl
sbb
add
jno
cmp
pop
xchg
lds
sbb
cmpsl
test
jns
mov
stc
sub
push
lret
popf
add
ja
dec
sub
mov
inc
and
adc
jp
cmpsb
nop
adc
mov
dec
sub
scas
adc
nop
cmp
loop
push
gs
fwait
mov
push
adc
sbb
or
adc
sti
mov
fiadds
shrl
imul
lret
xor
sbb
testl
cli
cmpl
mov
cmp
jno
mov
jecxz
fmul
test
dec
xor
mov
add
fsubrl
mov
and
cmp
lret
loopne
xchg
andps
xor
push
cld
and
xchg
icebp
xor
push
cmpb
pop
mov
lds
fs
push
loope
test
push
rcl
xlat
mov
mov
leave
add
push
in
jp
div
out
imul
add
add
call
and
mov
mov
dec
dec
fcmovbe
mov
mov
pop
aad
mov
sub
lcall
stos
out
xor
pop
sub
jnp
lret
pop
push
insb
lock
push
ja
sub
inc
xor
jmp
sub
sbb
and
fwait
or
sbb
rcll
add
das
push
push
mov
sbb
pushf
cmp
jbe
add
jnp
andb
repnz
push
jl
pop
mov
testl
stos
or
inc
mov
out
push
jnp
sbb
addr16
bound
mov
cmp
mov
xlat
pop
dec
mov
sub
sub
pop
xchg
mov
add
xor
inc
lock
pusha
into
push
push
icebp
jns
pop
xlat
test
xchg
scas
lods
pop
mov
scas
sti
inc
dec
xor
mov
into
xchg
imul
sbb
rep
inc
mov
inc
jge
push
push
addr16
filds
mov
mov
ret
pop
jnp
stos
iret
mov
insb
ljmp
mov
js
jns
mov
in
imul
push
popa
jle
jp
push
fwait
sti
and
ret
jo
add
lea
push
dec
jecxz
loopne
int
fcomp
rcr
jne
ja
std
adc
add
clc
push
jp
roll
nopl
push
mov
xchg
ja
inc
inc
imul
sbb
in
jae
mov
jo
mov
lods
mov
fisubs
iret
push
jnp
push
aam
dec
or
or
fsubs
sub
sbb
inc
sub
mov
push
mov
in
mov
push
sbb
in
push
mov
gs
enter
scas
xor
push
sarl
mov
add
repnz
andl
in
xor
jl
jnp
sbbb
jmp
cmc
insb
ficompl
push
mov
imull
add
repz
imul
shrl
jb
cmpsb
das
push
cmp
push
call
lcall
dec
jb
dec
push
push
pop
dec
mov
fdivr
repz
xchg
jge
in
and
sbb
lahf
lret
mov
imul
aam
loopne
mov
pop
xor
rorb
icebp
sbb
addl
push
mov
pop
mov
scas
dec
jg
pop
insb
movsl
sub
mov
mov
and
cltd
ja
jno
lods
mov
push
cmp
mov
pop
stc
push
inc
in
push
pushf
pop
mov
pop
fcomps
xchg
jg
nop
pop
dec
push
sahf
andl
dec
in
jp
test
jno
fisttpl
ss
mov
xchg
adc
or
lret
mov
mov
mov
or
js
sub
pop
inc
cmp
ljmp
xor
pop
nop
cmc
icebp
mov
jl
mov
cmp
cmpb
mov
pop
test
daa
addb
cs
imul
cmp
inc
dec
pop
jo
jmp
stc
loope
into
adc
idivl
loopne
ja
sub
les
adc
cmc
add
push
sti
ja
dec
or
lcall
in
les
sahf
subl
ficoms
mov
inc
in
fisubl
insb
pop
mov
ret
jno
fimull
pop
inc
mov
jo
ret
lahf
cmpsb
push
inc
mov
xor
xor
data16
jmp
dec
cmp
outsb
pop
fimuls
scas
pop
jg
push
outsl
xor
cmpb
add
jmp
stc
movsb
or
int
ret
xor
jbe
jno
sub
and
mov
mov
push
fwait
enter
je
sahf
lahf
jmp
scas
xchg
sti
pushf
mov
imul
mov
roll
pop
pusha
pop
and
je
fcmovu
push
xlat
call
mov
hlt
insl
sbb
xor
cli
mov
int
test
jl
rcl
push
pop
stc
sbb
inc
inc
out
sbb
jmp
ja
cmpsb
in
dec
pop
testl
mov
fldenv
inc
or
cltd
mov
xor
mov
lods
bound
int3
mov
ja
rcrl
mov
xsaveopt
pop
bound
fldenv
inc
mov
jg
scas
nopl
adc
js
dec
jne
cmp
jb
leave
aam
scas
test
xor
xor
or
push
sub
sbb
adc
jns
icebp
movsb
sub
dec
idivb
jb
jg
mov
jg
pop
xchg
in
push
push
inc
and
dec
push
pop
sub
addr16
decl
dec
in
imull
mov
cmc
fidivrl
adcl
add
cli
dec
std
popa
out
push
or
sti
adc
push
sub
lea
bound
scas
jmp
ficoml
cmpsl
rorb
test
in
or
or
rolb
das
adc
ds
add
ret
js
adc
out
and
repnz
push
xchg
dec
pop
std
mov
xor
cltd
jecxz
iret
push
pusha
cs
xchg
sub
mov
jnp
cltd
jns
hlt
or
xor
inc
repz
add
addb
and
inc
push
mov
daa
pop
or
test
dec
fisubl
scas
xchg
push
mov
imul
iret
pop
and
frstor
cmpsl
inc
ja
pushf
cli
lock
adcb
xchg
jg
xor
stos
mov
dec
iret
in
cld
scas
hlt
fucomp
imul
inc
scas
hlt
push
fiadds
das
scas
fwait
jmp
jne
mov
jnp
sti
scas
adc
sbb
mov
divl
xchg
imul
push
lods
inc
lods
xor
imul
insl
les
push
je
cmpl
xchg
lods
repz
push
scas
mov
pop
movsb
call
pop
subb
sti
insl
stos
enter
cmpsl
push
leave
les
push
movsb
dec
inc
push
jecxz
cmpsl
inc
sub
loope
cmpb
stc
out
xchg
and
notl
divl
mov
mov
aam
movsl
jp
fildll
addr16
push
push
cmc
jns
nop
int
lret
pop
fisttps
addr16
out
push
push
sub
jecxz
mov
hlt
adc
gs
mov
shll
push
and
dec
xchg
dec
cld
mov
dec
and
fsubrl
add
pop
push
scas
shl
clc
cmp
mov
cmp
inc
sbb
sub
stc
push
cmp
add
push
mov
adc
or
sbbl
sbb
push
nop
sbb
ret
mov
jmp
jo
sti
push
lret
xor
shrb
or
pop
inc
push
dec
mov
mov
pop
push
sub
sbb
out
aam
xchg
xchg
pop
push
push
jne
fisubrs
cltd
arpl
lret
adc
imul
out
add
sbb
cmp
rclb
xchg
fistl
frstor
aam
ret
mov
pop
int3
push
dec
cmp
push
stc
jno
fs
mov
or
ret
ss
leave
jbe
dec
jge
mov
mov
fmull
fdivrl
mov
test
leave
jnp
es
xchg
mov
ja
mov
mov
mov
jmp
fadd
loopne
clc
testl
xor
sbb
sbb
sbb
loopne
pop
mov
pop
mov
sbb
dec
push
xor
or
xchg
sub
add
dec
mov
sbb
mov
fucomp
in
subb
push
xchg
orl
rclb
adc
inc
lock
pusha
stos
cmp
rcrb
sub
or
lcall
pop
xor
mov
cmp
in
mov
xchg
inc
fiaddl
int3
push
mov
negl
incb
scas
movsb
lock
jmp
jae
jae
push
loope
pop
ret
lcall
ds
dec
into
mov
call
mov
mov
dec
inc
push
push
mov
sub
adc
cmc
or
jno
or
fcomip
mov
int
adc
mov
pop
sbb
divb
out
push
imul
mov
push
inc
stos
sub
sbb
mov
aam
cld
outsl
cmp
push
adc
mov
daa
lea
jge
lret
pop
insb
jae
js
fstpl
lds
in
mov
dec
pop
je
lret
mov
dec
add
fs
sar
jl
push
out
fwait
xor
add
sub
dec
mov
mov
or
add
cmp
arpl
jno
lock
push
lods
fbld
cmp
dec
dec
jno
shll
in
dec
stos
je
inc
sbb
faddl
jge
sub
mov
push
jg
rclb
inc
out
dec
int
cli
xchg
jmp
dec
fwait
sub
xor
inc
shl
push
push
push
push
mov
inc
add
cmp
jecxz
shll
outsb
push
mov
scas
ret
inc
fiaddl
inc
mov
push
mov
or
mov
and
repnz
mov
cltd
shlb
int
pushf
jne
xchg
mov
sbb
xor
fwait
cmp
scas
dec
fisttpl
aaa
push
push
mov
or
jecxz
rcrl
xchg
test
inc
add
mov
stos
xchg
add
jmp
and
rcrb
cltd
xor
scas
dec
iret
dec
mov
fidivs
dec
jmp
roll
sbb
js
in
fisubl
ret
xadd
loopne
pushf
dec
push
repnz
ficompl
shrl
jp
push
sub
fmull
mov
pop
mov
dec
dec
xor
xor
mov
jnp
xchg
cmp
dec
iret
push
ret
xchg
jmp
cmp
loope
and
sub
pop
data16
pushf
popf
ja
push
cs
fnstenv
out
and
push
cmpsb
mov
andl
ljmp
scas
adc
aam
imul
push
add
into
lods
jmp
or
pop
nop
dec
ficomps
mov
add
mov
and
mov
mov
or
int
jo
incb
int
adc
arpl
setae
dec
in
sbb
test
mov
lods
mov
lret
stos
or
mov
movsb
mov
push
lods
add
cli
xchg
dec
pop
jl
add
std
inc
pop
pop
adc
cli
std
xchg
jle
dec
mov
loopne
hlt
xchg
lea
std
mov
sub
out
call
sti
jno
in
rolb
inc
fisttps
pop
dec
mov
and
ljmp
outsl
addr16
push
movsb
cmpsl
loopne
clc
std
push
dec
cmp
push
pop
stc
push
cmc
xchg
test
faddl
adc
xchg
push
fs
sti
iret
iret
inc
push
ficoms
cmpsb
stos
pusha
push
fimuls
int3
insl
and
fistpll
in
xchg
ret
xor
into
out
cltd
dec
lods
xchg
movsl
xchg
xor
insb
add
cld
and
test
icebp
lds
fs
outsb
xchg
mov
mov
mov
jbe
idivl
pop
or
dec
mov
push
das
mov
jp
mov
and
jmp
ja
ja
sub
inc
xor
mov
sub
jl
fstpl
mov
outsl
jb
jo
adc
add
cmp
or
pop
outsl
jmp
and
push
in
fadds
sbb
sbb
mov
adc
xor
mov
fdivrl
ret
negb
ds
cmpsb
add
sbb
movsb
xor
mov
push
daa
and
mov
push
mov
es
idivl
sub
mov
cmpl
dec
or
push
push
mov
pop
add
inc
and
inc
test
into
xlat
fidivrs
mov
aad
mov
inc
nop
jb
fs
ret
shll
sub
adc
fsts
mov
xor
pop
idivb
lahf
fimuls
pusha
pushf
int3
fsubs
rorb
pop
fwait
ljmp
push
popf
aas
das
xor
dec
pop
sahf
pop
fcoml
jae
leave
jbe
rclb
iret
cmp
shl
inc
inc
jno
mov
and
push
arpl
mov
cmp
shr
dec
jae
call
push
fstl
fwait
jns
xchg
test
lcall
es
mov
in
in
cmpsl
xchg
pop
pop
sti
fadd
jne
icebp
mov
movsl
xor
push
int3
cmovns
jns
mov
xor
jl
les
dec
aad
sub
push
inc
loope
adc
mov
cmp
push
imul
push
pop
int3
pushf
dec
pcmpgtd
pop
addl
jb
mov
fmull
out
sti
faddl
mov
jno
push
mov
mov
hlt
dec
dec
sarb
jbe
pop
fwait
lods
cltd
inc
sub
ja
in
and
and
inc
xchg
inc
mov
fwait
mov
inc
adc
mov
adc
pushf
pop
sub
inc
sahf
ret
cmp
mov
lods
ret
add
mov
aam
cmp
pushf
pop
and
std
fs
cltd
fdivl
test
dec
test
and
and
push
mov
mov
test
mov
hlt
repnz
jl
arpl
testl
push
jnp
cmp
xchg
and
dec
in
adc
gs
cli
pop
xlat
ds
lret
pushf
cmp
cltd
aas
add
into
dec
cmpsb
into
xchg
inc
push
jno
mov
jae
mov
and
and
add
ss
imul
cld
loopne
adc
cld
call
ljmp
popa
mov
movsb
addl
push
mov
out
into
jb
aad
and
loop
mov
ljmp
rol
jae
enter
push
mov
sarl
push
and
fidivrl
fisttpl
subb
and
leave
dec
pop
das
lds
lret
jl
loop
and
pop
lods
jo
push
out
fcompl
repz
adc
mov
xor
sarb
jne
cmpsl
lds
or
inc
idivl
jle
adc
pop
loop
mov
pop
mov
out
dec
test
xchg
sbb
inc
jle
add
out
bound
arpl
mov
pushw
scas
out
adc
inc
loopne
into
mov
fisubl
ret
adcl
xchg
xor
push
scas
adc
fistpll
mov
fisttpl
or
mov
add
xchg
add
fistl
icebp
sub
iret
pop
jl
insb
pop
dec
push
cwtl
sbb
xchg
daa
adc
lods
stos
pop
mov
adcb
out
lahf
dec
dec
lret
out
sbb
rorb
pop
les
jecxz
inc
push
fcomip
sub
mov
sub
iret
mov
lods
es
or
shrl
int3
sbb
fbstp
inc
cmp
adc
xchg
push
jle
in
jo
mov
mov
sahf
pusha
add
aad
and
icebp
jmp
out
in
clc
xchg
cmp
mov
out
push
rcll
xor
ret
cmpl
and
and
jmp
xchg
and
mov
jge
outsb
jae
xchg
adc
insb
inc
jns
iret
xor
pop
icebp
cmp
cmpsl
mov
out
mov
mull
jno
mov
cmpsl
fwait
pop
cmp
dec
rcr
stos
andb
mov
lock
inc
fldcw
mov
stc
ret
ret
push
es
sub
aad
rcrl
push
aam
pop
jp
dec
cmp
inc
inc
push
arpl
push
inc
cmp
pushf
movsb
rcr
sub
aas
ja
pop
mov
push
add
push
ljmp
imul
fstpl
inc
cmp
cmc
sbb
push
inc
leave
jmp
jae
lock
jmp
mov
lret
test
jg
mov
test
arpl
repz
rorb
bnd
fisubl
mov
fiadds
ret
push
cmp
std
pop
pop
dec
scas
movl
jp
ret
clc
stc
dec
or
or
outsb
or
dec
sub
jg
mov
aas
mov
in
es
and
insb
mov
pop
pop
mov
push
or
decb
dec
cltd
adc
mov
into
dec
sub
sti
sbb
sub
adc
aas
xor
cmp
lods
iret
dec
inc
fiadds
jmp
outsb
loopne
push
stc
sub
sar
mov
add
icebp
das
xchg
xchg
inc
adc
add
fisttpll
xor
subb
aad
xor
stc
cmpsb
in
hlt
cmp
mov
jnp
fcomps
mov
test
aaa
loope
mov
pop
dec
subb
add
in
pop
dec
lock
mov
lret
and
pop
adc
push
push
sub
xchg
aam
jae
and
lock
jl
arpl
mov
mov
lock
rcrb
dec
stc
jnp
inc
lods
mov
movsl
or
add
in
pop
fimuls
add
adc
out
or
mov
lret
rolb
mov
jb
ret
loopne
add
nop
add
jmp
push
mov
xchg
mov
cmpsb
mov
es
ja
push
ret
mov
adc
pop
fld
jle
lret
push
lret
xchg
push
jo
mov
out
mov
inc
scas
add
mov
mov
adc
xchg
sbb
sbb
inc
shlb
into
add
imul
cmp
sub
pop
stos
popa
jle
or
jg
jae
inc
mov
push
clc
mov
mov
icebp
mov
jmp
push
adc
xchg
loopne
push
mov
sub
dec
fcmovbe
pop
or
fcom
add
hlt
mov
loope
dec
inc
inc
push
and
xor
cs
fwait
icebp
bound
xchg
lods
jo
xor
fninit
cmp
fstpl
fimull
ss
inc
test
add
push
jge
pop
inc
in
sti
mov
stc
pop
mov
aam
mov
lahf
inc
fisubl
mov
mov
ljmp
ret
pop
imul
in
mov
int
fistpll
test
ljmp
lret
cmc
iret
nop
jae
test
lcall
push
xchg
or
xor
jp
lahf
out
or
add
das
int3
lods
int
jae
or
jmp
cwtl
addr16
dec
inc
xchg
or
in
notl
fs
dec
fldl
push
add
mov
popf
push
cmp
rorl
cmc
mov
test
cmp
and
cmpsb
pop
add
jns
pop
cli
jg
adc
xchg
dec
sti
dec
mov
push
pop
les
push
out
cltd
push
orl
sbb
xchg
mov
test
cltd
and
xchg
sbb
push
into
mov
pop
inc
out
xor
iret
cmp
mov
lret
lret
repz
dec
out
mov
cmp
add
jmp
and
nop
ds
mov
dec
pushl
ficoml
mov
roll
push
mov
cmc
fmull
adc
subw
jno
sub
sbb
pop
mov
lcall
mov
or
pcmpeqd
ficoml
daa
icebp
or
cmpsb
pop
out
xor
lods
mov
frstor
mov
pop
adc
out
popf
dec
xor
push
scas
mov
cltd
adc
cli
sbbl
and
pop
push
add
or
dec
mov
push
loopne
repnz
rcr
sub
mov
arpl
dec
ds
data16
filds
mov
test
xor
sti
dec
dec
outsb
lock
scas
in
inc
xchg
mov
fstpt
enter
xchg
lea
jns
push
jl
shrb
xchg
lea
jnp
jmp
jne
pop
dec
jmp
dec
fstpt
adc
pop
sub
sbb
cwtl
cld
iret
fwait
mov
inc
sub
xor
cld
dec
in
jl
scas
mov
sbb
xchg
xor
mov
mov
adc
mov
pop
mov
cmpsl
push
enter
xchg
jno
and
mov
xchg
aas
cmpsl
sub
push
mov
push
pop
pop
mov
mov
out
pop
fisttpl
mov
repz
lahf
and
xor
sub
stos
and
and
xor
add
dec
pusha
jmp
mov
je
inc
pop
stos
cwtl
lcall
mov
int
ja
mov
sti
pop
stc
jmp
into
sarb
jo
loope
mov
fs
push
push
dec
movsb
jge
sbb
mov
mov
pop
shr
push
and
inc
lods
add
mov
push
inc
insb
nop
mov
testb
add
adc
add
inc
cmp
push
fildll
sbb
notb
jp
mov
push
sti
insb
cmp
mov
sub
loope
sbb
insl
pop
adc
add
mov
cmp
cwtl
sbb
aas
jmp
std
cmpsb
or
mov
pop
iret
or
jg
cld
dec
ds
sbb
or
sbb
idiv
push
insl
mov
pop
push
stc
cmpb
fwait
leave
mov
cmpl
lcall
cld
insb
sub
or
mov
adc
sti
pop
cwtl
add
push
mov
cmp
repnz
dec
mov
cwtl
xchg
sub
daa
lret
std
pushf
adc
pop
inc
xor
lcall
fimull
stos
iret
mov
add
cmp
cs
pop
or
or
js
push
je
adc
sub
xchg
inc
fimuls
and
enter
ficompl
scas
inc
and
dec
std
imul
jmp
stc
nop
sub
and
adc
mov
push
in
aaa
aas
ret
mov
das
sbb
cmp
in
in
cs
stc
pop
push
sbb
or
jg
repnz
push
mov
orl
dec
fwait
out
cmpsl
dec
in
sbb
inc
jbe
xchg
ds
jl
push
mov
inc
mov
push
out
testl
subb
dec
aas
adc
icebp
int
sarl
dec
out
in
mov
cmc
shrl
push
addr16
cmp
mov
mov
and
test
ljmp
imul
mov
cltd
ja
adc
dec
ret
leave
cmpsb
mov
xor
push
mov
xchg
lret
test
sub
imul
mov
push
popf
ficompl
fidivs
push
out
jbe
fwait
insl
push
out
add
inc
movsl
pop
ret
fcmovb
fldt
sub
sub
jns
mov
add
jns
jmp
test
jns
jae
mov
mov
fildl
and
sub
cmpsb
popa
dec
in
jnp
enter
dec
shl
fldt
mov
or
idivb
nop
fwait
rorb
arpl
sub
sub
jg
out
mov
mov
add
xorl
aad
sub
cmp
sbb
cmp
pushf
and
test
iret
mov
aas
add
ja
mov
es
cmp
inc
outsl
or
pop
in
ss
imul
adc
aam
imul
insb
mov
inc
imul
cmovl
xor
jo
jmp
mov
testl
iret
call
out
das
int3
addr16
enter
inc
add
ds
rorb
and
fisttpll
cwtl
pop
xchg
cld
movsb
cwtl
jp
mov
mov
out
jle
cmc
loope
sarl
mov
fs
lret
ja
addb
stc
xchg
xchg
subl
into
jmp
add
cld
insb
rorb
xor
or
addr16
xchg
sub
push
sbb
insl
jle
bound
sbb
je
jbe
add
rcll
std
mov
add
inc
lods
lock
scas
mov
inc
add
lcall
mov
popf
repz
mov
sub
pop
mov
cltd
mov
mov
cmp
loope
push
mov
push
std
test
jg
push
pop
das
mov
push
inc
mov
xchg
cmp
cmpsb
test
dec
push
loop
in
dec
repnz
std
stos
adcb
sub
loopne
sub
and
inc
std
shlb
mov
push
add
xchg
xchg
hlt
cmc
lock
or
fwait
out
cmp
iret
sbb
mov
dec
sti
cmovle
test
mov
pop
hlt
pop
jnp
sahf
push
into
inc
dec
mov
out
fsubrs
xor
repz
ljmp
adc
jno
push
mov
in
insl
dec
sbb
mov
and
adc
sbb
dec
div
push
push
dec
sub
sti
jno
jno
push
nop
pop
mov
pop
push
inc
mov
hlt
scas
mov
js
popf
and
dec
shlb
outsb
fisubrl
lods
push
fisttpl
pop
stos
js
je
fmul
mov
dec
inc
sbb
mov
jl
pop
cmp
fisttps
push
add
xor
call
movsb
fdivp
and
in
cmpl
movsb
pusha
push
mov
lret
xchg
mov
inc
fwait
icebp
push
test
xor
les
outsl
xchg
cmp
bound
aas
push
imul
dec
test
mov
jg
nop
xchg
and
inc
mov
mov
test
aad
sbb
mov
xchg
mov
pop
fistpl
xchg
notl
dec
lods
je
into
das
add
sbb
ja
jmp
jno
out
imul
sub
outsb
aaa
out
jns
inc
or
fidivl
mov
lea
mov
or
cmpsb
daa
xchg
insb
xchg
mov
xchg
jecxz
cs
mov
jns
sub
out
ret
fiaddl
jmp
dec
dec
adc
jle
jmp
mov
or
xor
inc
xor
xchg
jg
cltd
lods
xor
and
pop
sbb
mov
push
mov
add
je
or
orb
stc
dec
es
jns
cmp
xor
mov
xchg
cmp
adc
pop
xor
rorl
sub
mov
sub
fstpt
iret
out
and
fldcw
popa
cmp
test
lret
sub
adcl
loopne
ficomps
stc
xor
lcall
fmull
sti
xchg
out
adc
cmc
fsubrs
imul
into
lcall
test
ljmp
pop
out
cli
ja
jbe
bound
dec
push
bound
push
jl
test
mov
lret
andl
and
jl
xor
leave
sub
outsl
and
xchg
ss
push
or
sub
push
xorl
ds
mov
cmpsl
sbb
lods
sbb
mov
das
push
stos
mov
andl
pusha
and
in
shr
je
push
sbb
in
lods
xorl
and
sub
in
packuswb
add
sbb
testl
mov
sub
dec
mov
inc
cld
jmp
sbb
inc
dec
or
lret
stc
dec
inc
shll
test
jns
subb
data16
sbb
out
push
push
insb
dec
or
jne
sub
mov
xor
loope
or
push
mov
enter
lock
fnstcw
aaa
jnp
ret
mov
jl
mov
adc
jmp
cld
push
fimull
test
popa
aam
shl
iret
cmp
inc
icebp
sahf
iret
cmpsl
mov
add
pop
and
lea
mov
lret
adc
insb
add
add
loopne
int3
sbb
xchg
xor
adc
inc
adc
ud0
pop
inc
arpl
xlat
or
loop
cld
rorb
rcr
push
fs
push
lods
fnstenv
sub
inc
jl
adc
xchg
inc
jle
add
int3
cmpsb
outsb
lea
xchg
cwtl
pop
inc
cmp
pop
mov
inc
or
test
test
pusha
jmp
rcll
or
mov
cmc
out
movsb
xchg
jg
pop
xchg
movsb
fcoml
mov
add
sti
add
cmp
cli
adc
arpl
mov
loopne
out
adc
dec
movsb
dec
ds
ss
sbb
jl
dec
sub
inc
dec
test
mov
dec
mov
sahf
inc
push
jmp
bound
mov
mov
jnp
sbb
call
aad
mov
push
imul
mov
mov
insb
push
cmpb
int3
fs
aam
rorl
inc
cmp
push
cmpsb
add
mov
jne
jl
push
sahf
inc
pusha
jmp
rolb
mov
pop
xor
js
xchg
pop
pushl
cld
ja
sti
jl
iret
push
dec
dec
mov
out
xor
sub
ret
inc
mov
sbb
mov
shrl
dec
add
fidivrs
daa
pop
jg
enter
pop
jno
cmp
repnz
xchg
fsubrs
adc
mov
add
in
jecxz
sbb
push
push
inc
xor
jnp
xor
pop
lods
icebp
jnp
pushf
dec
addb
jecxz
xchg
rcrb
dec
cmp
fs
iret
lea
lods
imul
movsb
mov
dec
pop
lret
fsubrl
outsb
jo
xor
add
or
sbb
mov
sbb
ljmp
sahf
or
cmp
mov
clc
mov
ds
mov
lcall
scas
xor
push
pop
push
dec
fdivrl
mov
xchg
ret
add
pop
push
mov
cmpsb
cmp
xor
mov
jmp
mov
sub
xor
movsb
and
gs
repz
jg
jg
dec
mov
jae
dec
loop
test
jnp
or
pop
or
jne
pop
lret
push
dec
ljmp
lods
pop
inc
popf
movsb
jae
mov
cmp
outsl
push
das
daa
inc
fimuls
pop
xchg
mov
push
or
jmp
mov
aad
mov
pusha
int
sbb
lcall
test
rorb
insl
repz
pop
cli
pop
lods
cltd
dec
ficoml
stos
jns
popf
or
push
sbb
jmp
xor
push
ja
lret
jmp
mov
or
enter
jecxz
and
andb
cs
pop
mov
inc
adc
popa
pop
test
jbe
add
ja
add
and
icebp
mov
or
mov
repz
xlat
iret
repz
or
movsb
adc
xchg
adc
cli
lret
out
fsubl
or
pop
push
add
cli
scas
xchg
lea
and
divb
jnp
cmpsb
cmp
or
out
lods
mov
inc
popf
out
ljmp
mov
outsb
sbb
loope
ficomps
nop
mov
push
fcmovne
sbb
mov
push
arpl
int3
pop
mov
dec
stos
pop
fmulp
mov
out
pop
pop
or
push
lret
dec
js
cltd
jnp
mov
jg
sub
mov
stc
pop
int3
mov
lods
out
stos
cmp
fnsetpm(287
aad
mov
bound
mov
mov
cmpsb
daa
or
out
mov
std
lret
or
fsubrl
mov
cwtl
insl
xchg
sbb
pop
pop
cmp
and
insb
gs
pop
out
fldl
xor
pop
sbbb
scas
sub
pushf
sbb
mov
mov
mov
mov
loopne
inc
push
or
mov
adc
or
sqrtps
inc
push
mov
inc
dec
pop
sbb
xlat
pop
daa
sub
push
clc
xorb
int3
cmc
pop
and
popf
dec
sub
hlt
ja
push
es
push
sbb
adc
and
repz
sub
fs
mov
mov
jge
push
test
push
adc
add
arpl
cld
out
enter
loopne
xor
push
sub
dec
cltd
mov
cmp
pop
jl
pop
inc
push
push
test
lret
pop
mov
adc
ljmp
sar
pop
jno
jp
or
adc
cmpb
inc
push
loopne
insb
repz
mov
loopne
hlt
pop
jmp
popa
cld
cmc
mov
imul
pop
mov
lcall
xchg
adc
mov
jbe
or
repz
push
scas
cld
xchg
lahf
sbb
inc
and
inc
stos
mov
clc
fwait
test
jns
lcall
xor
push
and
mov
jns
ret
pushl
ret
lea
or
push
loope
mov
jg
sub
jo
mov
movsb
or
data16
adc
int3
mov
cltd
mov
mov
pop
or
fidivrl
sub
std
adc
pop
jnp
push
add
fs
addb
test
mov
testb
int
mov
les
int
rolb
out
sahf
fidivrl
lcall
jecxz
and
xchg
sbb
rclb
xchg
test
or
sbb
xchg
mov
and
stos
mov
xchg
lahf
rol
fmulp
or
sbb
call
dec
clc
push
push
test
ja
pop
push
adc
mov
pop
sar
stos
or
enter
insb
dec
ret
jmp
popf
pop
cld
sub
and
sbb
mov
jg
and
sahf
jae
adc
mov
cli
rorl
in
es
mov
loop
inc
dec
cmpsb
mov
dec
in
push
mov
push
xchg
aad
cwtl
inc
popf
or
dec
mov
decl
out
rcll
mov
testl
gs
and
pop
pop
pusha
in
dec
mov
sub
addr16
cmp
mov
jle
dec
repz
es
test
xchg
jecxz
cmc
sbb
mov
cmp
aas
lret
std
lock
and
aad
or
add
inc
stos
loopne
inc
sub
shrl
and
push
mov
cmp
cltd
adc
mov
lods
mov
push
adc
cmp
cmpsl
jbe
mov
js
add
cmpb
sarl
stos
adcl
mov
stos
fmull
mov
xchg
xchg
mov
hlt
inc
sbb
xor
or
aad
sub
mov
mov
shll
mov
cld
iret
and
mov
fnstenv
enter
sbb
mov
lods
loop
pop
mov
jp
jp
jns
jb
fs
dec
insl
jl
push
dec
pop
xchg
fwait
adc
fwait
mov
mov
mov
pushf
mov
lret
jb
dec
mov
pusha
out
in
pop
xor
sub
scas
dec
push
fcompl
xchg
popl
loop
push
xchg
jmp
cmp
cmp
or
shl
test
mov
outsl
push
pusha
push
xor
mov
loop
cltd
mov
xor
imul
outsl
sbb
cli
xchg
sub
jnp
push
ficoml
shll
cmp
dec
cmpsl
add
jb
mov
inc
popa
mov
rolb
ljmp
pop
mov
pop
test
popa
stos
out
mov
cmc
mov
sahf
push
sub
mov
push
scas
out
test
mov
mull
inc
sahf
cmp
roll
pop
out
jo
add
adc
cwtl
pop
lret
adcb
lret
jno
sbb
dec
xchg
mov
out
scas
sbb
mov
shll
xlat
sti
push
je
sbb
or
mov
mov
mov
xchg
jl
popa
lret
scas
jg
rclb
je
ret
and
dec
sti
gs
mov
cmc
jns
inc
clc
mov
scas
fisubl
sbb
xor
mov
inc
or
mov
je
or
pop
int3
popa
rol
xchg
movsb
mov
lcall
addr16
or
mov
push
adc
ss
adc
ss
sbb
or
loopne
mov
iret
fwait
sub
clc
push
out
mov
cmc
jmp
sti
mov
cli
sub
or
mov
jl
mov
outsl
mov
ljmp
in
pop
fcomps
out
xor
mov
rorl
xchg
pop
mov
and
pusha
test
sbb
xchg
mov
sbb
cmp
push
push
lea
scas
stc
sub
push
notl
mov
in
mov
bts
and
xchg
jmp
out
cmp
inc
fmull
pop
enter
insl
inc
inc
push
mov
lock
into
xor
sub
lods
or
std
jmp
or
sbb
mov
or
mov
mov
xchg
dec
cmpsl
dec
mov
inc
sub
cltd
fidivrl
sbb
jbe
arpl
jp
push
mov
or
jmp
sub
ja
addb
pop
insb
add
into
jmp
xchg
js
and
jns
test
in
lods
repz
push
lods
shll
mov
rcrb
sub
loope
mov
stc
pop
push
not
cli
inc
push
imul
inc
icebp
pop
imul
jbe
pop
mov
enter
rorb
sti
rcrb
jl
mov
cltd
mov
push
sub
inc
push
xor
dec
lret
add
dec
fsubr
addl
ds
or
mov
xor
jl
mov
inc
in
sbb
cld
imul
cmp
push
add
mov
push
imul
scas
int
popf
ss
inc
cmp
fmuls
pop
fildl
fs
inc
fs
push
pop
mov
inc
dec
jg
mov
inc
mov
pop
push
pop
xor
bound
and
fisubl
sbb
out
mov
js
fwait
loope
lcall
fbld
sbb
jbe
jge
xor
jae
inc
hlt
es
add
shll
cmpsl
js
xchg
and
popa
and
pop
and
xorb
repnz
fsubs
xor
popf
fldenv
mov
xor
sub
sub
mov
push
popf
clc
or
pop
dec
cltd
test
in
or
and
jno
test
out
lock
xor
jb
mov
mov
mov
cmp
dec
repz
sar
inc
jnp
bound
push
mov
jbe
notl
rcl
or
jbe
adc
sub
cmc
insl
imul
fildl
dec
fisubrs
pop
sub
fwait
das
lret
jb
jecxz
addr16
mov
sub
mov
mov
fmull
fildl
push
jns
mov
mov
loop
mov
shll
inc
jp
xor
out
shlb
xchg
das
sbb
cld
pusha
aad
je
cli
outsl
dec
hlt
divb
add
popa
cltd
lods
jae
pop
sbb
pop
iret
lea
jmp
mov
lods
adc
jg
push
and
mov
xchg
mov
testb
stos
mov
lret
les
pop
int
jae
mov
lods
cltd
ds
jmp
repz
aad
loope
pop
mov
cmc
test
adc
fwait
mov
stos
dec
ja
cld
sub
sub
in
icebp
adc
and
arpl
or
pop
sbb
icebp
int
jp
sub
xlat
leave
or
cmp
or
adc
and
xchg
movsb
cmc
fmull
lahf
jg
movsb
mov
shrl
mov
mov
sti
jns
push
sbb
cmp
lahf
adc
pop
inc
jns
mov
lods
andl
fcomps
cltd
outsl
das
imul
sub
jno
inc
sub
rcpps
incl
scas
xor
jmp
outsb
pop
ss
sbb
fs
daa
js
enter
lods
push
and
test
movsl
dec
jge
movsb
push
mov
mov
xor
enter
jecxz
into
sbb
and
cwtl
lods
sub
rcrb
scas
cltd
adc
addb
es
test
sbb
insl
dec
xchg
sbb
pop
stc
adc
push
test
jnp
ja
jbe
popf
cmp
ljmp
iret
ss
add
fdiv
mov
dec
push
mov
fmul
or
fucom
adc
cmp
adc
std
inc
jg
lock
nop
in
xor
inc
mov
sti
push
adc
cmp
cmp
je
loopne
adc
lcall
pop
jp
mov
xor
into
fwait
pop
push
jno
stos
insl
add
call
and
mov
mov
hlt
jno
ret
mov
inc
insl
shl
adc
adc
pushf
dec
dec
mov
jecxz
sbb
fs
mov
cmp
pop
pop
mov
test
push
arpl
adc
sti
mov
cltd
lea
daa
outsl
sarl
cmpsl
js
and
mov
push
mov
lds
sbbl
rorb
add
dec
mov
loopne
fs
in
or
pop
jmp
mov
subb
rolb
xor
inc
cmp
scas
not
jge
sub
shrl
movsb
or
jl
mov
jg
xor
dec
cmp
sbb
pop
je
aam
imull
cmp
nop
mov
ljmp
sub
push
lods
inc
pop
mov
dec
sub
jmp
adc
out
pop
mov
jne
mov
movsb
xor
sbb
div
dec
cmp
mov
cmp
xor
mov
pusha
sahf
mov
fadd
cld
mov
add
inc
insb
pop
push
adc
nop
icebp
frstor
shl
ffreep
pop
xchg
inc
pop
mov
popa
push
jns
mov
add
jmp
xchg
mov
sbbb
pop
ret
mov
cmp
inc
iret
movsb
inc
sbb
sub
aaa
sbb
roll
jbe
je
push
faddl
in
push
cmpsl
push
sub
pop
fnsave
out
movsb
pop
pop
js
jge
mov
ret
xchg
inc
xor
xor
mov
mov
jecxz
or
popf
push
mov
dec
inc
pop
mov
pop
jns
rcl
push
or
mov
scas
jnp
mov
mov
jmp
jne
mov
repnz
mov
inc
add
pop
and
jecxz
fidivrs
dec
iret
cmpb
fadd
fwait
pop
in
mov
pop
mov
and
sub
test
loop,pt
push
or
jmp
jecxz
push
mov
inc
pop
jg
mov
cltd
dec
inc
sahf
aas
mov
or
lods
mull
sub
out
ret
pop
sarl
inc
and
sub
and
jmp
out
jae
or
push
add
and
ficompl
xlat
add
ret
xchg
inc
xchg
jno
mov
sub
jg
pop
lods
pop
fildll
mov
lea
nop
sub
fstp
idivl
aad
and
nop
stos
and
sahf
outsl
out
push
dec
mov
xor
mov
sub
xchg
or
js
mov
call
mov
jnp,pn
js
inc
dec
inc
outsl
arpl
repz
std
xor
mov
mov
lahf
shlb
arpl
fidivs
sar
pop
inc
and
fstpt
mov
fstpl
push
add
andl
adc
out
sub
std
mov
pop
cmp
repnz
pop
js
mov
dec
pop
popf
mov
das
sahf
in
and
les
jnp
sub
scas
push
sahf
test
add
and
push
xlat
inc
cmpsb
xchg
rcrb
mov
cmp
xchg
outsl
xchg
shll
ljmp
cltd
stos
pop
scas
mov
in
cmpsb
or
insb
cmp
les
pop
movsl
mov
inc
and
mov
lods
psrlq
cltd
jmp
sbb
cs
fldenv
xlat
dec
bts
pop
or
fisubl
inc
cmp
mov
or
sub
inc
push
mov
cwtl
jg
jmp
xchg
popa
or
pushf
jle
adc
daa
popf
mov
repnz
cmp
sbb
ss
or
std
cmpsl
pop
jae
in
push
out
push
push
mov
mov
sub
pop
mov
lret
dec
lret
xchg
pop
jnp
xlat
cmp
iret
jge
xchg
cli
xor
ljmp
hlt
movsb
cmp
xorb
fwait
data16
push
repz
mul
addl
xor
mov
jp
stc
data16
cld
inc
js
push
cmc
xor
fnstsw
cmp
shr
cmp
mov
push
sbb
cld
pop
inc
iret
loop
mov
ljmp
call
movsl
out
imul
jno
inc
jae
sbb
xchg
xchg
sbbb
cmp
xchg
sbb
cmpsl
pop
dec
mov
sbb
jl
ss
adc
xor
jae
in
or
rorl
les
mov
in
xor
pusha
pusha
or
pusha
mov
mov
data16
pop
andb
jne
inc
test
addr16
testb
mov
pop
jg,pn
ffreep
ja
pop
push
adc
xchg
mov
sub
add
out
cmp
jle
pop
xor
repz
jp
lret
push
mov
das
jns
negb
and
push
ror
imul
adc
xor
in
into
jg
push
test
adc
sbb
adc
ret
add
jecxz
insl
or
cmp
adc
mov
sbb
sub
fldt
pop
mov
xchg
gs
inc
faddl
and
aad
hlt
jae
out
lods
cli
inc
push
xor
cmpsl
mov
rolb
divb
jge
sub
mov
push
stos
imul
mov
in
dec
pop
idiv
mov
mov
jge
mov
insl
test
roll
xor
mov
aas
push
fsubr
addb
mov
xchg
mov
jl
jae
mov
mov
mov
xorb
wrmsr
insb
mov
fldenv
cmp
aam
je
mov
add
sbb
push
fbstp
jl
inc
das
cwtd
je
cmpsb
xor
sbb
test
rcr
jmp
and
mov
xor
add
es
xchg
pop
add
das
dec
call
loop
push
mov
lods
add
inc
lcall
addr16
scas
mov
jmp
xchg
push
add
fwait
out
jno
push
int3
pop
sbb
mov
loop
dec
push
mov
jl
inc
xchg
pop
int
jecxz
loopne
fldenv
mov
cmpsb
push
adc
cltd
sbb
push
mov
cmp
push
mov
mov
sahf
pop
or
cltd
cmc
jnp
push
push
cs
fiaddl
lret
inc
jno
insl
mov
xchg
add
sub
in
push
loope
or
fdivl
push
push
test
mov
les
scas
sbbb
mov
fidivrl
ret
ja
jbe
les
cs
cld
sbb
sub
sub
cmp
mov
or
fsubrl
ret
and
inc
hlt
mov
pop
inc
or
cltd
je
je
push
mov
cld
or
dec
rolb
mov
sbb
dec
out
clc
fcom
dec
push
ret
push
push
or
movsb
xchg
int
outsl
mov
jl
mov
ljmp
lcall
push
jno
fdivrs
mov
adc
es
imul
movsb
int
fistpl
mov
outsb
rolb
cmp
out
test
lret
sbb
cmpb
inc
popa
cmp
insb
std
clc
add
push
cmp
aad
fwait
rcrb
testl
aad
pop
clc
pop
push
xchg
xor
pop
loope
or
loope
pop
dec
and
aas
ret
inc
inc
cmc
insb
testl
xchg
and
test
loope
stc
xor
cld
xchg
jp
ds
cltd
push
test
lea
cmp
data16
push
dec
mov
xchg
pop
insl
mov
popf
cmp
fisttpll
xchg
pop
mov
xlat
xchg
push
js
cmpsl
adcl
test
dec
inc
and
nop
stos
inc
xor
mov
scas
jmp
or
mov
jns
rol
test
iret
jbe
lret
dec
sbb
ret
repnz
in
jnp
jmp
add
pop
popf
ljmp
push
and
dec
rcl
cmp
add
test
scas
test
adc
lds
in
sbbl
subb
inc
mov
std
mov
inc
jg
mov
int
xlat
nop
mov
mov
add
push
fs
fwait
cltd
es
push
shll
sbb
in
jge
mov
sub
test
mov
testb
mov
xchg
jge
pusha
hlt
xor
jmp
cmp
sbb
sub
gs
add
mov
sbbb
fwait
or
in
xor
gs
jno
clc
andb
outsb
roll
mov
fwait
xor
aas
inc
cmp
sub
cmc
xlat
xchg
mov
insb
mov
in
push
imul
fimuls
or
dec
or
sub
mov
jne
stos
mov
mov
ret
and
movsl
add
inc
jnp
roll
pop
mov
loopne
fimull
dec
cmpsb
cmp
adc
sbb
sbbb
pop
mov
gs
fsts
push
jmp
mov
jns
lret
lret
fs
mov
mov
cmp
sub
insl
rolb
sub
repz
out
into
stc
imul
add
cltd
mov
outsb
sub
mov
out
push
xor
sub
cltd
std
scas
sub
inc
sub
mov
adc
mov
pop
in
sbb
add
int
lods
movsl
shrl
adc
or
mov
dec
mov
sbb
dec
jne
jge
mov
pop
or
jl
ret
stos
mov
dec
jnp
pop
and
dec
iret
sahf
das
cs
and
inc
int
cwtl
push
cmp
inc
dec
mov
mov
and
jo
into
daa
popf
mov
lea
mov
loop
pop
pop
jnp
mov
mov
pop
xchg
rcrl
rcrb
scas
pop
xchg
sub
mov
cli
fbstp
in
mov
mov
xor
inc
pusha
adc
adc
adcl
rcrl
pop
popf
jno
mov
pop
int
jp
jmp
stc
and
mov
pop
and
jecxz
pop
addl
sub
movsl
inc
in
adc
lods
test
xor
inc
pop
or
xor
lods
cli
push
mov
jl
fcmovb
shrb
pop
mov
in
test
pop
lods
jmp
mov
or
cmpsb
fwait
pop
jmp
inc
stos
aaa
mov
mov
sarl
fists
mov
xchg
adc
js
ret
inc
aam
jbe
fs
cli
or
je
in
xor
mov
stc
jl
arpl
add
pushf
mov
xor
pop
and
mov
cmp
shrb
xor
pop
stc
fs
xlat
inc
cmc
fcom
iret
mov
popa
mov
mov
stos
mov
xchg
jno
movsl
rol
aas
inc
fisttps
scas
mov
pusha
ss
adc
loopne
jecxz
jg
and
test
cs
mov
xor
inc
xor
or
fwait
test
mov
cmp
sub
mov
jns
push
fisubrs
test
icebp
cmpb
cmp
sahf
mov
fucomp
push
sbb
mov
mov
dec
push
hlt
jae
jg
dec
sub
or
push
cld
lahf
stos
xor
add
lods
nop
movsb
inc
push
xchg
sub
cld
xchg
ss
popf
jp
in
push
aas
lods
in
nop
cwtl
mov
add
push
inc
pop
es
inc
pop
cltd
jmp
icebp
xchg
cbtw
lret
or
xor
loope
fisttpll
mov
pop
pop
sbb
mov
lcall
icebp
sbb
cmp
jns
inc
push
jmp
push
arpl
inc
jg
cmp
outsb
mov
out
xor
lock
fsubrl
adc
mov
inc
ljmp
ja
xor
and
and
daa
mov
sbb
mov
sbb
add
in
inc
adc
push
pusha
mov
ja
sbb
jmp
cs
sbbl
mov
add
or
cmp
scas
mov
mov
sbb
or
sbb
rcr
xchg
lock
dec
inc
mov
jo
movsb
test
inc
sar
pop
add
ret
mov
inc
and
sub
push
les
mov
xchg
pop
fistps
jb
or
dec
pop
int
adc
test
sbb
ja
inc
add
jb
pop
in
mov
mov
std
gs
mov
sti
dec
clc
arpl
leave
adc
jg
lret
daa
les
jecxz
in
enter
test
dec
inc
aam
int
xor
ljmp
fwait
mov
cvttps2pi
and
ucomiss
push
lock
mov
mov
syscall
ljmp
fcompl
rcll
insb
fwait
add
sbb
dec
pop
inc
rorl
repz
pop
inc
mov
mov
fisttps
adc
mov
jecxz
mov
xchg
xorl
fwait
mov
pop
movsb
cwtl
stos
jg
pop
stc
dec
pushf
mov
aad
jecxz
ljmpw
xchg
jle
lret
or
cwtl
mov
fisttps
nop
fwait
inc
inc
push
xchg
cmpsl
pushf
add
mov
fistpll
jle
hlt
or
out
sbb
insl
aam
jmp
push
mov
xchg
xor
ss
mov
scas
cwtl
movsb
rclb
jno
rcrl
sub
adc
fwait
cmp
or
dec
mov
mov
mov
decl
shll
mov
dec
and
cmpl
test
in
sti
lret
mov
mov
hlt
popf
inc
adc
inc
pop
iret
pusha
mov
or
sti
out
xor
call
andb
pop
loopne
jp
xchg
xchg
jbe
inc
sarl
mov
pop
or
cmp
enter
ljmp
jecxz
lret
nop
cld
ss
fwait
rcrb
lahf
pop
stc
add
addl
test
sub
cmc
mov
mov
iret
ret
mov
es
mov
pusha
xchg
insl
iret
lret
in
cltd
push
lret
jmp
in
push
xor
push
jmp
loopne
rcl
inc
std
fdivl
jns
insl
mov
mov
repz
cmc
xor
push
lcall
je
inc
xlat
mov
jl
cld
xchg
dec
pop
sbb
shr
fisubrs
out
mov
cmp
lods
add
cmp
sbb
push
or
orl
cs
sub
fstpl
dec
not
sub
out
shlb
jecxz
pop
daa
mov
add
in
mov
mov
jle
es
mov
adc
adc
pusha
sub
cmp
dec
xchg
xchg
dec
mov
jl
mov
jne
mov
dec
sub
add
fstpl
mov
xchg
mov
jmp
sbb
lret
sub
push
jne
repz
jns
jo
dec
add
popa
out
fcmovne
xor
add
jg
es
movsl
jp
ljmp
mov
test
inc
sub
pop
leave
xor
cmp
xchg
mov
adc
xchg
jmp
aas
sub
aam
cmp
lcall
rep
hlt
loope
or
push
pop
pusha
pop
aas
movsb
ficoml
clc
popf
insb
inc
sbb
popf
dec
ja
push
adc
lcall
adcl
jae
sub
and
imul
in
fadd
pop
cmpsl
jg
add
mov
nop
jg
je
add
in
push
loopne
jns
pop
outsl
in
xchg
jg
adc
mov
iret
divl
sub
inc
mov
shlb
sub
hlt
sarb
ret
cmc
xchg
dec
iret
fdivl
dec
or
jnp
mov
repnz
inc
loop
shll
mov
in
add
dec
movsb
repnz
pusha
cmp
xchg
pop
cmc
mov
repnz
mov
push
sbb
ret
mov
pop
push
xchg
xchg
add
xor
out
mov
dec
mov
xchg
cltd
adc
sbb
sub
mov
testl
pop
sbb
jnp
idivl
rcrl
into
xlat
lods
andl
push
addb
es
pop
fidivrs
cmpsb
cmp
fisubrl
cld
movsb
cmpsb
push
sahf
fnstcw
pop
mov
mov
bound
or
jae
ds
int
test
xchg
movsl
or
cmp
in
cmp
dec
xlat
jbe
mov
inc
jp
inc
fistps
test
xchg
inc
subl
lock
xor
aad
rcrb
iret
mov
fnstcw
test
pop
push
sbb
fistpl
push
pop
hlt
in
test
clc
lods
fsubl
arpl
mov
rorl
dec
out
cmc
outsl
dec
out
les
rorb
push
imul
iret
enter
mov
jae
imul
mov
imul
mov
dec
pop
mov
iret
pop
inc
out
dec
inc
cld
and
jno
gs
and
jbe
sub
xchg
lret
int
mov
dec
repnz
js
jnp
xchg
lods
jno
es
cmp
fwait
imul
test
jb
push
pop
repnz
fs
out
pop
xchg
pop
rorl
aam
jmp
jl
int3
out
dec
pop
pushf
mov
mov
sti
outsl
pop
or
pop
jno
adc
jg
imul
jns
adc
pop
stc
mov
mov
imul
out
in
pop
or
inc
dec
insl
adc
push
mov
jb
jne
mov
popf
mov
push
cmp
pop
lea
out
mov
pop
add
loope
dec
ret
into
gs
bound
insl
xor
push
nop
adc
mov
mov
mov
mov
repnz
out
dec
test
scas
or
jg
test
mov
pop
imul
sbb
in
push
sbb
iret
inc
ror
sbb
pop
or
adc
aas
and
stos
cltd
or
mov
loope
inc
not
dec
adc
adc
ljmpw
popa
loopne
push
mov
mulb
shlb
and
mov
cmp
push
add
mov
jns
push
inc
test
add
outsb
aad
out
push
mov
push
cmp
repnz
add
pop
or
mov
movl
and
dec
movsb
mov
inc
std
dec
xlat
cmp
mov
add
add
outsl
rorl
lods
das
mov
cmc
insb
add
jo
push
lcall
jmp
jl
mov
mov
push
fldt
dec
pop
shlw
je
iret
or
and
outsl
ja
mov
test
fcomp
arpl
orb
loopne
stos
cmc
mov
cltd
push
ficoml
ljmp
xchg
repz
jbe
insb
imul
sub
xchg
ss
iret
insl
cmc
insb
xchg
mov
mov
repnz
or
mov
mov
andl
sbb
mov
ljmp
jg
inc
fstps
insl
cli
or
loopne
dec
sahf
mov
mov
mov
insl
addr16
xchg
xor
bound
jo
xchg
loopne
mov
jl
mov
xchg
pop
or
dec
jae
lcall
fwait
xor
push
nop
rol
xor
or
insb
sbb
jne
adc
repz
loop
jbe
push
add
stc
xor
jno
divl
in
xorb
insb
out
or
nop
push
dec
mov
or
push
sub
std
pusha
aam
fdivrp
or
mov
or
leave
addl
or
repz
mov
push
or
mov
cmp
or
das
or
enter
loopne
mov
cli
push
fwait
test
call
iret
cmp
std
pop
mov
adc
repz
nop
push
rcrb
fs
mov
testl
jle
loopne
cmc
pop
in
movsl
lods
mov
outsl
mov
add
fwait
push
test
jns
or
dec
push
daa
aad
cltd
fmull
divl
sub
lock
sub
mov
les
out
jo
fs
out
mov
mov
xchg
and
jg
add
lret
mov
insl
iret
fbld
jo
test
mov
out
mov
cmpsl
adc
mov
jg
xchg
imul
mov
loopne
cmp
lret
ficompl
in
insb
ret
mov
inc
popa
loope
xchg
mov
jno
adc
inc
push
fwait
je
or
in
jg
mov
fildl
movsb
dec
pop
sti
int3
mov
or
jmp
in
pop
xlat
push
ret
stos
dec
jle
mov
out
imul
jg
push
adc
scas
fsubrl
mov
pop
stos
mov
mov
xor
mov
lods
add
jns
push
jbe
mov
pop
push
xchg
sbb
loope
xor
mov
pop
push
mov
adc
fwait
mov
dec
dec
pop
fnstsw
test
jae
arpl
aam
jae
data16
popf
jo
test
pop
bound
push
ja
push
mov
pop
js
mov
sub
sub
rclb
and
xchg
fsubl
or
movb
out
lods
sti
xchg
inc
movsb
in
je
lods
jge
roll
cmpsb
lret
mov
cmp
or
mov
push
pop
mov
push
inc
mov
lock
das
xchg
sbb
repz
cmp
mov
stos
inc
or
stc
inc
das
je
push
pop
jl
push
xchg
cmp
and
push
xchg
testl
negb
js
and
xchg
sarl
and
mov
or
mov
or
mov
ficompl
xlat
cmp
mov
push
fldcw
push
inc
not
insb
or
or
xorl
jbe
jnp
xor
pop
shrl
arpl
js
pop
xchg
fistl
ret
pusha
mov
mov
or
dec
jp
and
lds
and
rcll
aam
push
ficompl
xchg
pop
mov
daa
lcall
push
or
idivl
cmp
cltd
lods
xchg
add
je
xor
shrl
fs
sbb
push
pop
movsb
mov
ljmp
aam
dec
sub
stos
dec
jecxz
test
cltd
sbb
pop
sub
ret
cmp
negl
mov
and
popf
sbb
sbb
mov
push
and
lcall
fcmovb
mov
mov
jg
xchg
nop
mov
fwait
or
dec
inc
push
ja
lds
mov
sahf
mov
loopne
jp
aam
mov
mov
dec
adc
dec
jnp
mov
mov
sub
bound
and
ja
jbe
add
or
xor
aas
push
pop
lds
lahf
lret
ret
iret
pop
mov
or
jl
dec
mov
cmp
fs
aad
mov
cli
adc
push
push
mov
add
xchg
pop
mov
jb
adc
pop
pop
xor
pop
jno
popa
orl
cltd
xor
scas
int3
inc
mov
push
cmc
xchg
mov
sub
mov
sbb
sub
jno
xor
rcrl
sar
mov
push
add
add
sbb
sti
mov
cwtl
fldt
ret
cmp
inc
inc
dec
mov
std
mov
push
negl
outsl
shll
xsavec
xor
fwait
cmp
sbb
sub
stos
mov
aas
fldcw
and
loop
lock
ja
push
sbb
out
int3
and
add
aam
das
mov
mov
sbb
and
jl
mov
aas
repz
notl
sbb
into
into
cmp
repnz
add
icebp
push
fwait
aaa
jmp
or
push
shlb
enter
add
sbb
xchg
xor
rcrl
pushf
or
inc
into
imul
dec
mov
xor
jae
push
xlat
arpl
pop
mov
xchg
aam
cmp
js
cs
lret
xchg
cmp
xchg
pop
sahf
sti
nop
push
and
pop
dec
dec
and
ja
sbb
es
aad
mov
fcmovbe
rcrb
leave
cld
mov
orb
je
lds
push
mov
mov
int3
mov
aam
or
sahf
push
cmp
mov
ss
push
rep
push
mov
ret
pop
loope
in
mov
or
add
dec
pop
fadds
aas
fsubl
jecxz
jp
fs
pop
pop
sub
shl
fldenv
fs
xor
mov
test
es
add
stc
lcall
test
std
or
inc
mov
loopne
mov
daa
dec
ficoml
inc
mov
mov
pusha
sti
mov
ja
dec
stc
add
leave
jl
fs
fcompl
test
inc
repz
sub
pop
add
xchg
into
mov
in
fbstp
dec
insl
sbb
ss
repz
jnp
jne
xchg
push
push
push
adc
mov
cmp
cmp
int
fcmovb
pop
xchg
cmc
icebp
in
jno
push
or
dec
xchg
cmp
or
lret
sbbl
inc
mov
repz
and
mov
xchg
pop
dec
cmc
push
jecxz,pn
sbb
mov
fstl
mov
jg
jb
rclb
add
mov
rcl
jnp
or
adc
jp
sar
pusha
sbb
pop
jbe
xchg
sub
ja
fwait
movsl
cs
dec
pusha
aaa
ljmp
xor
sub
imul
and
clc
mov
xchg
dec
test
fwait
mov
mov
aaa
dec
movsb
pop
xor
inc
add
cmp
adc
mov
cmpsb
push
es
orl
div
sub
inc
jae
adc
or
lret
shlb
mov
stos
mov
ss
out
aad
mov
loope
mov
adc
cmc
sarl
neg
mov
std
dec
cmp
mov
stc
xor
sub
adcb
lock
push
add
lcall
adcb
adc
stos
xchg
sub
mov
dec
add
call
xchg
out
adc
sub
stc
mov
insl
test
jp
jne
sub
xchg
aaa
mov
pop
dec
mov
imul
sub
push
out
test
popf
test
dec
pop
cmpsl
sti
sahf
push
jo
or
nop
iret
call
mov
mov
mov
or
xchg
fwait
mov
cmp
je
jbe
addr16
mov
rclb
push
mov
xor
dec
jne
xchg
or
push
fwait
pusha
loopne
mov
ret
scas
mov
ret
inc
into
cmpsb
in
scas
dec
mov
lret
or
aaa
dec
call
cmpsb
xchg
dec
ja
jnp,pt
cmpsb
jae
jbe
iret
push
mov
xor
stos
add
lret
dec
shrl
and
daa
aam
jle
jp
add
mov
pop
rcrb
cmp
pushf
fidivs
add
data16
cld
or
mov
jg
sub
jg
dec
pop
and
and
fwait
jp,pn
jecxz
push
lea
mov
sti
jg
std
fistpll
int3
mov
jbe
roll
jge
arpl
mov
inc
mov
clc
daa
fistpll
jecxz
jae
dec
daa
clc
pop
mov
jg
sbb
and
ja
scas
push
jg
je
add
push
loopne
neg
mov
mov
ja
subb
out
add
adcb
inc
push
cmpsl
std
cmp
sbb
lret
std
jge
ds
mov
daa
mov
lahf
cmp
push
out
int
leave
stos
add
pavgb
fwait
scas
xchg
mov
mov
int3
sub
push
and
cmp
imul
jge
cmp
and
inc
push
sub
jbe
cmp
lahf
xor
jae
sbb
rcrb
mov
sbb
loopne
int
lcall
pop
fisubs
mov
sbb
dec
ret
test
ljmp
stos
xchg
aam
mov
add
test
repnz
push
cmp
inc
out
mov
mov
iret
or
int3
pop
cltd
imul
aad
push
push
repz
inc
push
fwait
movsw
xor
sub
fisttpll
lcall
xor
loop
push
mov
lcall
aam
or
sbb
sub
repz
adc
adc
pushf
sbb
fwait
cmpsb
push
pusha
int
ret
dec
xchg
adc
cmpsl
push
jecxz
sub
outsb
sti
out
je
mov
jae
repz
filds
mov
lahf
push
std
repz
insl
fstl
mov
lods
xchg
dec
aas
mov
and
les
aam
mov
mull
jp
imul
push
pop
inc
adc
pop
cmpb
daa
jno
addb
or
and
jl
xchg
ds
fisttps
sbb
lods
or
int
repz
mov
xor
aas
cs
xchg
shlb
fdivrl
cwtl
std
fisubl
xchg
and
or
pop
lahf
mov
adc
or
xor
test
call
dec
mov
mov
dec
dec
lret
dec
mov
addr16
pop
jb
adc
cmp
jg
pop
inc
insb
sub
add
xlat
mov
jge
cmovge
cmp
lods
data16
fucomip
stos
cwtl
adc
xchg
xor
jne
or
push
push
in
enter
cmpsl
jmp
jl
test
int3
pop
hlt
or
add
lods
add
xor
jge
cmp
inc
aam
push
cld
ja
in
sarl
aaa
inc
mov
dec
sti
pop
fcompl
lret
loope
mov
insl
xlat
xor
mov
in
sub
data16
arpl
pop
push
pop
push
push
jbe
test
mov
mov
sahf
sub
cwtl
and
scas
push
mov
lahf
jbe
movsb
aas
pop
rep
inc
iret
loope
mov
sarl
notl
jno
jb
push
pop
addb
out
in
pop
ja
jl
cmp
nop
gs
pop
inc
and
push
ljmp
adc
dec
daa
inc
push
mov
cld
icebp
mov
sti
push
push
push
or
pop
fildl
adc
dec
test
jo
popf
pop
add
push
in
stos
iret
fisubs
shrb
or
dec
pushf
pusha
icebp
push
mov
orb
add
mov
pop
xchg
sub
lret
fildl
adc
dec
push
sbb
pop
xor
jmp
movsl
pop
ficomps
test
icebp
faddl
out
imul
pop
lock
sarl
inc
bound
jae
jae
pop
mov
popa
fildl
mov
dec
add
sbb
leave
mov
cmp
xchg
xor
nop
cmp
cmp
pop
addb
fldl
jnp
mov
push
mov
sahf
cmpsb
and
rclb
add
sub
add
fwait
mov
mov
mov
dec
cltd
adc
pop
cmp
sbb
fisubrl
dec
fiaddl
call
mov
rcll
mov
popa
sbb
fisubl
ljmp
les
movsl
jne
push
lock
dec
testl
incb
movsb
jns
mov
cmp
dec
loopne
jl
popa
inc
scas
sbb
clc
cmp
hlt
pop
push
xor
xchg
movl
or
jb
dec
loop
mov
inc
adc
sarb
xor
push
jno
ds
fidivrl
sbb
lods
lods
xor
mov
sbb
jmp
aad
push
inc
inc
movsl
adc
add
add
jecxz
mov
pop
ficoms
cmc
mov
jno
sub
imul
dec
mov
out
xor
jno
lods
mov
test
aas
mov
push
imul
adc
add
imul
ret
cltd
stos
xchg
lcall
mov
push
int
sbb
pop
push
mov
lods
movsl
clc
out
fisttps
cli
shrb
jp
pop
add
inc
add
sub
lea
add
mov
mov
subb
mov
out
adc
inc
add
fsubrl
test
sbb
fidivrl
ret
fsubrp
push
mov
cmpsb
mov
mov
stos
jp
cmpsl
sbb
test
pop
and
push
mov
add
lods
mov
add
mov
pusha
sub
mov
push
dec
adc
and
les
pop
jae
fs
icebp
imul
push
mov
in
mov
fidivl
or
loopne
sub
inc
scas
rclb
inc
xor
lret
adcb
xlat
jle
loopne
xor
push
ljmp
inc
mov
ljmp
mov
loopne
cmp
jg,pn
rol
push
iret
popa
imul
bound
pop
sbb
test
in
cmp
pop
rorb
call
inc
pushf
shrl
lods
jl
add
leave
mov
rcr
rclb
mov
ljmp
out
add
mov
hlt
jmp
lds
adc
adc
jno
shl
cmp
loopne
adc
ficomps
push
lea
enter
push
daa
in
push
xchg
cmp
adc
mov
sbbl
daa
nop
out
enter
sbbb
add
adc
mov
ss
sub
test
fcmovnb
testb
inc
xchg
fwait
mov
lea
cmp
and
imul
xchg
push
cmc
aam
shl
push
mov
pop
mov
idivb
cld
push
jbe
inc
sub
mov
mov
mov
cmpsb
jg
pop
shrb
push
mov
out
mov
inc
mov
loope
sbb
cs
pop
sub
mov
mov
pushf
mov
xor
ds
fcomps
insb
pop
ja
loopne
jb
adc
cmp
jnp
in
cs
mov
mov
scas
inc
mov
add
sbb
mov
dec
clc
dec
cmp
loopne
divl
pop
repz
mov
cmp
mov
lods
mov
stc
mov
insb
pop
cltd
and
std
xchg
cltd
imull
pop
js
movsb
cmc
div
xchg
loopne
loope
xor
dec
xchg
scas
jmp
inc
insl
lea
dec
jb
inc
stc
addb
mov
and
mov
push
aam
ljmp
inc
dec
add
jecxz
fimuls
mov
dec
pop
mov
cli
aam
mov
mov
aam
test
outsb
bound
add
inc
cmc
mov
xchg
je
rolb
and
dec
inc
hlt
dec
xchg
rclb
mov
test
mov
push
int3
push
mov
cs
scas
lods
stos
imul
cmc
inc
push
sbb
jl
cli
pop
popa
pop
scas
fst
mov
leave
or
add
mov
dec
xchg
xchg
repz
jno
xor
xor
add
pop
mov
pop
ss
jl
lock
in
ja
in
into
dec
out
loop
adc
adc
stos
xchg
mov
test
mov
arpl
jmp
push
add
cmpsl
scas
jae
inc
jp
addl
test
loop
clc
sbbl
into
arpl
outsb
sbb
inc
xor
cmpsl
or
ficoml
sub
sbb
imul
inc
and
add
or
fcomps
mov
mov
mov
sub
sub
mov
push
fistl
lret
lret
xor
xlat
adc
popa
rorl
push
shlb
add
in
or
fcmove
and
ret
and
lcall
xchg
and
pop
mov
sub
push
cmc
je
pop
xchg
push
mov
xor
lods
xor
mov
and
push
cld
sub
push
pop
pop
int
jae
jle
not
xor
fnstsw
jmp
push
scas
pop
inc
fwait
jg
mov
pop
mov
rorl
xchg
clc
adc
push
fisubl
lret
push
mov
mov
iret
popa
inc
or
add
adc
xchg
test
adc
lds
mov
daa
xchg
jb
dec
push
jg
int
pop
fisttps
ror
mov
jl
mov
push
mov
int
sub
pop
jecxz
mov
imul
fcoml
jae
mov
aam
int
ds
dec
pop
mov
mov
mov
shll
mov
cli
out
and
pop
aam
lahf
and
cmp
mov
cmpsl
lods
stos
add
jbe
sbb
out
es
aad
xor
pop
cmc
mov
adc
or
fdivrl
loope
or
mov
nop
jmp
aam
ja
lock
sbb
rcrb
fsubrp
sub
inc
filds
mov
cmpsb
jno
fsubrl
stos
jnp
outsb
adc
test
mov
andb
inc
jl
movsb
push
in
cmpsl
fldenv
pop
subl
push
push
inc
cmpsl
out
pusha
shr
loop
adc
mov
cltd
ja
push
pop
sti
xor
ss
decb
xor
mov
jecxz
inc
jno
push
mov
add
mov
jns
mov
fisttps
es
mov
and
or
pop
inc
dec
mov
aad
mov
loop
lret
test
test
test
and
std
or
movsl
aam
sub
rcl
and
mov
mov
ret
pusha
inc
stos
add
dec
adc
cld
add
ljmp
mov
or
xor
popa
cld
xor
push
jne
inc
decl
scas
xchg
jl
jle
add
mov
xchg
stos
in
mov
adc
mov
push
fstps
mov
cwtl
push
icebp
jmp
dec
xchg
lock
jbe
push
sarb
je
sub
or
stos
gs
insb
xchg
ret
mov
or
push
pop
cltd
movsl
es
out
mov
out
cmp
outsb
adc
shll
push
xlat
shl
mov
ret
daa
adc
jae
or
call
adc
in
sbb
enter
sbb
loope
pop
add
mov
fwait
jmp
jno
mov
adc
mov
sbbl
or
mov
mov
mov
jae
nop
test
jnp
add
sbb
shrl
pushf
mov
cmp
jnp
frstor
lcall
fwait
lret
jne
mov
fistl
mov
std
gs
sahf
fs
paddusw
and
mov
out
sub
mov
pop
pop
jg
fwait
out
aad
inc
into
add
nop
leave
mov
outsb
push
and
pop
inc
addr16
scas
fwait
push
sbb
push
wrmsr
int3
xor
dec
push
insb
in
lret
pop
mov
jmp
mov
mov
imul
mov
test
sbb
mov
testb
jle
jnp
movsb
cld
mull
fimuls
jmp
inc
sti
lcall
lea
movsb
cmp
pop
aad
mov
mov
inc
stos
fstps
out
loop
mov
adcb
fisttpl
sbb
or
or
je
inc
cltd
inc
push
iret
imul
mov
insb
xchg
cmc
inc
push
test
sub
mov
into
idiv
mov
out
int
and
shrl
stos
pop
sub
sub
xchg
and
rcll
fisttps
dec
sar
fildl
or
mov
mov
add
pop
push
dec
cmp
subl
inc
js
lcall
mov
gs
ret
movsb
pop
out
rcrl
clc
sbb
imul
xchg
cmp
lods
adc
mov
adc
or
push
test
xor
inc
idivl
add
jb
aaa
adc
cmp
stos
push
mov
inc
es
xlat
and
js
movsl
fdivrs
cltd
pop
fsubrl
mov
or
or
fcos
mov
js
dec
mov
inc
rorl
inc
mov
sub
stos
out
sbb
sbbb
pmovmskb
out
into
push
push
pop
test
xor
xor
pushf
sub
dec
and
xchg
mov
mov
aam
mov
stc
str
shll
cmp
popa
movl
jno
leave
jl
xchg
dec
inc
pop
shr
cmpsb
xchg
dec
mov
xchg
dec
push
jnp
pop
push
scas
xchg
loope
imul
faddl
mov
mov
fwait
pop
jl
pop
or
nop
movsb
dec
dec
ret
adc
and
inc
push
jmp
mov
je
mov
icebp
dec
inc
nop
xor
jp
sti
dec
es
or
xor
ret
js
push
xor
movsb
aaa
arpl
jg
cli
cmpsb
cmp
jno
sbb
pop
pop
cltd
pop
shrb
cmc
inc
adc
xor
push
mov
iret
lods
int3
roll
fisttpll
xchg
sub
dec
jae
jg
jns
xchg
or
push
mov
sub
lret
mov
xchg
test
push
int3
in
mov
jae
insb
gs
ds
dec
out
dec
jnp
aam
mov
pop
negl
fwait
loopne
inc
enter
mov
add
push
push
loopne
mov
je
lods
jp
sbb
ja
xor
mov
or
push
in
adc
xchg
dec
or
lea
sbb
add
sti
mov
jbe
push
or
sbb
sub
mov
add
aaa
mov
scas
push
or
cltd
jns
dec
dec
adc
jnp
sarl
dec
push
push
je
mov
push
mov
xor
xchg
add
mov
jl
fcmovbe
iret
mov
mov
xor
dec
and
mov
inc
shl
in
lahf
mov
jns
inc
mov
jo
into
xor
stos
dec
adc
xorb
popa
into
jmp
push
cmp
inc
dec
jnp
xchg
jp
and
or
stos
pop
jnp
fstps
stc
cmp
dec
fdivl
dec
incb
and
dec
ret
ja
mov
orb
ljmp
sbb
adc
jle
mov
cli
dec
ret
data16
xorb
lods
fwait
mov
inc
sti
icebp
mov
fdivl
popa
xor
push
push
mov
lcall
hlt
xor
jns
stc
push
mov
in
jns
jno,pn
dec
pushl
and
flds
inc
push
dec
mov
hlt
jle
jo
or
lcall
js
cs
pusha
pop
out
arpl
aas
jmp
and
add
jg
int3
mov
cltd
jmp
push
stc
sti
cmp
push
pop
pushf
movsb
jmp
or
mov
das
or
in
and
pop
out
ja
or
jle
imul
arpl
jmp
in
add
out
lahf
sbb
pop
flds
dec
rorl
imul
jae
push
push
jno
int3
xchg
inc
mov
aaa
shll
mov
cli
mov
mov
fists
or
jp
adc
sub
cmp
dec
in
pusha
adc
dec
add
push
mov
push
bsr
cmp
inc
cmp
dec
fst
lcall
pop
je
loop
movsl
xchg
mov
sahf
sbb
shrb
cmp
popf
out
mov
shlb
sub
sub
shll
lret
arpl
sub
and
fisttpl
mov
pop
xchg
in
pop
mov
jb
jecxz
xor
mov
and
and
out
lds
movsb
fsubrs
or
ja
shlb
push
lock
dec
fucomi
add
ja
adc
jb
cmp
xchg
cli
jns
fsubrs
fidivl
jbe
push
cmpsl
pop
dec
ljmp
jle
rorb
das
pop
shl
inc
mov
imul
cltd
ret
and
mov
add
sbb
jae
insb
mov
addl
xor
mov
pop
cli
jg
adc
cmp
pop
ja
mov
cmp
mov
iret
ret
or
out
shll
fsts
shrl
popa
sti
jae
loopne
mov
in
out
push
add
sbb
mov
in
lahf
jns
mov
mov
icebp
imul
fsubrl
mov
push
mov
or
out
mov
fsubrl
xchg
sbb
jae
jp
add
jp
out
in
in
leave
or
jae
pop
mov
fsubr
bnd
fwait
jle
xorl
jbe
fsubr
clc
stos
or
xor
mov
jg,pt
mov
mov
jmp
dec
sbb
jp
add
aam
xchg
sub
fld
mov
pop
xchg
mov
dec
ret
mov
divl
pop
lods
fcmovb
enter
dec
xor
std
cld
jne
int3
pop
add
scas
repz
dec
andl
dec
mov
gs
pop
test
scas
pop
fstpt
movsl
icebp
and
adc
jbe
into
jmp
xor
pop
sbbb
or
nop
cli
shll
fildl
stos
jo
mov
or
sar
lds
arpl
pushf
imul
cmc
out
vpsubusw
xor
add
mov
shrb
and
cmpb
adc
ret
lcall
cmp
dec
and
shl
xorl
add
adc
test
mov
jne
inc
push
fimuls
push
fdivl
lods
mov
push
mov
pop
ficoml
fcompl
pop
mov
dec
or
mov
shlb
dec
out
out
mov
negb
call
add
jmp
jle
das
sti
subb
pushf
sub
mov
fnsetpm(287
leave
push
emms
xchg
adc
jno
loopne
cltd
add
inc
xor
or
cmpsb
or
movsb
cmp
pushf
sti
jecxz
inc
mov
sub
mov
dec
xor
xchg
or
mov
imul
mov
dec
pop
js
push
mov
int3
subl
sbb
lods
pop
mov
pop
fcmovne
js
xlat
cld
mov
inc
dec
mov
push
inc
cmp
pusha
inc
and
pop
fiaddl
mov
jbe
rcll
mov
ret
pop
dec
lods
xchg
cmp
xchg
mov
add
test
sub
inc
adc
jg
push
cwtl
jmp
cs
into
cs
arpl
mov
addr16
mov
decl
or
jecxz
adc
cmp
rorl
jbe
or
sbb
mov
xchg
dec
idiv
mov
xor
jns
roll
sahf
or
mov
xor
ss
pop
mov
loop
add
jl
sbb
shlb
movb
popa
mov
mov
adc
out
inc
mov
in
cmp
xorb
sbbb
ljmp
pusha
jb
jl
shll
data16
data16
scas
add
fnstenv
in
mov
mov
sub
daa
loop
mov
pop
pop
testl
popf
leave
idivb
mov
sti
sub
out
fadds
jns
aam
dec
push
aad
dec
sbb
adc
cltd
js
push
and
jb
sti
jne
into
mov
inc
pushf
adc
mov
push
jnp
inc
dec
lcall
xchg
pop
dec
jae
notb
adc
adc
inc
pop
and
pusha
and
sub
mov
add
adc
fbld
orl
push
stos
and
mov
jle
cmp
sbb
jne
fiadds
xchg
and
push
cmpb
cmp
and
lds
fisubrl
fcompl
adc
test
jecxz
ret
scas
mov
shll
sbb
adc
imul
sub
rcll
mov
lods
cmpsl
shll
stc
test
xchg
adc
or
out
xor
aaa
lret
ret
cmpsb
std
lret
ss
adc
fwait
js
sarl
dec
pop
inc
sub
and
push
mov
cmp
sub
mov
das
data16
and
out
cmp
sub
jp
mov
hlt
pop
pop
fs
aad
fistl
adc
fcoml
js
push
push
cs
xor
xor
add
or
mov
subps
cli
cmpsl
mov
inc
test
xchg
jbe
in
loop
pop
or
icebp
cltd
jns
xchg
dec
or
sub
cwtl
adc
loop
dec
repz
sarl
xchg
push
lret
mov
mov
push
sbb
mov
push
lret
rcll
inc
mov
sub
fcmovu
ror
cmp
outsl
push
adcb
dec
lods
jns
jbe
test
popf
je
pop
hlt
ficomps
push
jnp
lds
popf
mov
sub
call
cmp
sub
test
test
lcall
xor
int
and
lods
pop
jbe
sub
andl
cld
push
mov
sub
pop
jl
lods
arpl
sub
mov
in
dec
pusha
jg
das
add
mov
insb
xor
fnstcw
inc
sbb
insb
xchg
pop
add
testl
cs
and
leave
pop
add
cmpb
test
jg
mov
cmp
cmp
sub
sbb
xlat
mov
inc
dec
push
mov
shrb
sbb
test
inc
lods
lcall
inc
fisttpll
mov
testl
imul
cmpl
pusha
clc
insl
fwait
pop
xchg
sub
inc
adcb
ror
push
repnz
not
adc
scas
aad
or
mov
lods
mov
pop
jo
mov
xchg
out
negl
dec
sub
in
xchg
test
ja
xchg
jmp
stc
popa
cli
and
push
out
dec
mov
xor
push
jbe
test
xchg
add
pop
aas
add
fwait
jnp
clc
or
push
pop
sub
lds
pop
ss
lea
cmpsl
adc
data16
sahf
inc
test
add
out
mov
or
mov
rorb
adc
mov
sub
dec
jno
xchg
sub
iret
test
push
sub
ljmp
mov
jmp
pop
jl
mov
std
test
adcb
inc
adc
out
sti
push
jp
cmp
sub
ja
inc
and
cmc
std
cs
lea
xor
jge
sbb
jnp
or
sarl
sbb
dec
jnp
dec
insl
pop
cmp
stos
inc
int
cmpsl
je
int3
scas
jp
dec
aaa
mov
jno
pushf
pop
sbb
sti
mov
pop
sub
fdivs
lods
sub
inc
push
mov
mov
loop
shll
mov
lds
pusha
sbb
sub
ja
sub
adc
daa
jmp
aas
xchg
negl
movsl
cmp
fdivs
addl
sbb
mov
pop
pop
movsb
sbb
pusha
je
adc
push
mov
inc
sub
inc
inc
or
stos
dec
sbb
test
adc
daa
push
pop
nop
fistps
pop
mov
in
loopne
cli
pop
pop
shll
lods
fildl
add
inc
in
cmc
in
xchg
dec
imul
out
out
ficoms
sub
pop
xchg
pop
mov
fisttpll
sub
add
push
bnd
xchg
pop
ss
sbb
cltd
mov
pushf
jl
pop
rclb
mov
cmp
pop
dec
addr16
fmul
mov
push
out
insb
cmp
push
aaa
dec
clc
and
cltd
gs
mov
test
mov
fisubl
and
adc
push
movsl
insb
out
xchg
push
pop
push
add
push
cmp
pop
pop
add
sbb
out
test
stos
mov
in
rorb
dec
mov
imul
jmp
jle
lods
pop
test
inc
bnd
shrb
hlt
jmp
adc
push
mov
pushf
pop
orl
adc
sar
push
inc
sbb
fwait
insl
je
shlb
jbe
pop
fsts
push
ret
xchg
sbb
movsl
inc
imul
adc
aaa
imul
fs
mull
jg
iret
xchg
pop
aam
inc
repz
mov
jno
mov
and
lock
ss
aad
test
inc
ds
xlat
out
mov
addr16
subb
and
jmp
ljmp
add
inc
cmp
cmpsl
adc
push
loopne
jl
add
inc
mov
adc
addl
add
inc
rcrl
jle
push
mov
or
repnz
add
mov
mov
pop
lds
mov
pop
js
iret
jmp
or
push
jo
sbb
pushl
mov
xor
test
inc
fldcw
sahf
lcall
adc
ret
push
aas
jecxz
add
jp
fwait
out
test
in
mov
adc
sbb
add
jne
pop
xchg
fidivrl
subl
sbb
addr16
and
dec
loope
sbb
cmp
adcl
fsubrl
mov
xchg
or
adc
jbe
roll
adc
jl
popa
test
fcompl
and
in
pop
dec
jmp
push
testb
repnz
fiadds
cmpsl
or
cmp
subb
rclb
mov
jmp
arpl
cs
jp
adc
subl
mov
icebp
and
mov
cmc
push
mov
mov
mov
shrl
test
pop
mov
sbb
jae
aaa
inc
mov
jl
fisubl
cmc
nop
inc
push
add
sbb
rcrl
jne
adc
sub
sub
iret
and
test
add
lods
xor
and
jno
daa
push
dec
sub
push
out
push
and
test
loopne
dec
fcomp
inc
lods
or
push
mov
out
roll
mov
or
mov
rcrl
sub
cmpsl
adc
movsl
pop
into
fcom
jbe
jl
pusha
fisubrs
je
and
mov
push
dec
push
fcmovb
push
cmp
flds
fsubl
dec
xchg
jae
dec
stc
ljmp
or
lds
arpl
xchg
jp
mov
pop
jmp
sarl
pop
or
jo
mov
or
mov
xchg
inc
movd
pop
gs
sub
pop
clc
in
out
ljmp
pusha
shlb
mov
js
rcl
loope,pn
roll
mov
decl
xchg
jb
cmpsl
mov
mov
mov
ljmp
jmp
mov
das
pop
dec
ljmp
inc
mov
mov
inc
int
fsubr
lret
cmp
ret
adc
and
mov
xchg
adc
xor
mov
jns
fsubl
fwait
mov
das
sub
test
push
mov
roll
cmp
pop
push
add
push
arpl
stos
sub
mov
or
fistps
out
mov
jg
sbb
pop
mov
mov
stc
or
cltd
cld
in
jae
push
inc
ret
mov
dec
xor
mov
gs
xchg
pop
inc
jl
stos
outsb
push
dec
add
adc
jae
sub
or
pop
mov
sbb
sub
inc
jecxz
stc
shl
enter
xorb
nop
or
mov
mov
or
scas
stos
aas
cmp
inc
mov
add
or
je
adc
es
jnp
xchg
sub
dec
pop
cmp
call
lahf
mov
jmp
movsb
bnd
fildll
lcall
pop
out
stos
sub
fwait
out
mov
xlat
mov
loop
rorb
stc
into
pop
dec
adc
test
cwtl
leave
sub
or
dec
rcr
dec
enter
adc
ret
dec
stc
aaa
mov
je
jg
ja
push
mov
fisttps
mov
adc
jge
dec
or
inc
adcb
fadd
imull
mov
sub
jp
nop
xlat
cs
test
fiadds
scas
imul
sub
fidivl
push
xor
pop
nop
imul
mov
jg
jnp
sbb
mov
sahf
xor
loope
push
inc
jl
push
sbb
pop
mov
insl
pop
push
cmp
fwait
bswap
mov
xchg
fs
or
mov
std
fldcw
push
repnz
mov
adcb
mov
mov
push
and
cmp
push
int
enter
push
mov
stos
mov
dec
pop
mov
insl
leave
cmc
jg
jns
nop
int
sbb
sub
pop
add
js
out
xor
mov
fs
sub
and
fildll
add
loopne
lea
xor
dec
test
iret
outsb
cmp
sbb
sub
test
mov
inc
loope
in
or
repnz
lods
subb
xchg
aaa
movsb
enter
inc
mov
into
or
fs
movsb
pop
mov
outsb
inc
mov
push
jmp
jl
decl
in
shll
mov
pushf
mov
daa
fcoml
lock
mov
mov
loop
notl
int
push
test
test
into
call
les
fistl
test
jns
xor
mov
arpl
or
mov
push
xchg
leave
sbb
hlt
dec
or
fistpll
inc
mov
imul
jns
mov
mov
test
fisubl
mov
insb
cmp
mov
daa
scas
lods
pop
and
pop
les
cmp
in
aas
and
pop
lret
dec
mov
mov
pop
outsb
xchg
and
pusha
mov
adcb
xorb
jge
pinsrw
pop
dec
movsb
test
jno
mov
pop
mov
cmpsl
or
add
mov
lahf
sahf
and
and
push
pop
push
sbb
loopne
jl
push
fisttpl
ljmp
and
add
gs
xlat
mov
xlat
push
mov
in
stos
and
les
jmp
int3
lods
ja
sti
testb
sbb
and
pop
andl
sbb
ss
in
jmp
jae
push
jns
adc
sbbl
test
loopne
xchg
lock
add
add
rcr
or
lds
jno
movsb
sub
hlt
xchg
mov
pop
fistps
lods
aam
out
rcl
movsl
mov
callw
cmpsb
stos
mov
inc
ror
dec
jle
jo
cmp
cs
jno
mov
jae
pop
or
jp
jmp
arpl
mov
push
mov
mov
sbb
and
ret
es
cmpsl
jbe
cmp
inc
data16
pop
push
jno
mov
xor
push
imul
inc
test
dec
mov
popf
mov
jbe
sbb
out
jno
mov
mov
call
push
paddd
jp
inc
mov
push
mov
ja
sahf
pop
sub
ret
stos
or
ficomps
lods
dec
xor
aam
xor
push
mov
dec
pop
or
dec
xchg
inc
jae
fdivs
mov
filds
into
daa
mov
outsb
mov
sahf
imul
add
imul
lods
jbe
mov
cmp
xlat
mov
dec
out
rcr
rcrl
ret
sbb
cmpsl
jmp
xor
mov
and
imul
dec
pop
dec
adc
ljmp
faddl
cmpsb
ficoml
fwait
add
sbbb
loopne
mov
push
adc
lcall
cmpsb
jmp
adc
xchg
inc
pop
scas
imul
mov
mov
dec
sarl
jne
fldl
jecxz
gs
rcrb
mov
popa
push
and
mov
das
pop
xor
sbb
sub
in
rorb
inc
sub
push
int
add
leave
daa
mov
xchg
sti
inc
mov
lret
mov
cmpsl
je
fwait
shlb
fidivl
in
sbb
out
or
push
xor
xchg
mov
mov
aam
pushf
data16
push
stc
js
inc
adc
jb
xor
cltd
jecxz
movsb
mov
jg
push
inc
testl
mov
xor
cmpsl
lods
test
outsb
out
sti
in
fsubrl
roll
jo
sbb
lahf
pop
ljmp
lea
mov
popf
sub
pop
shr
sbb
jmp
and
sub
in
out
jg
or
out
mov
dec
dec
aas
sti
push
sti
mov
mov
jbe
jnp
inc
mov
enter
xchg
cmp
sub
pop
xor
and
sbb
cmp
pop
jp
pop
cli
xchg
sahf
lret
idivb
xchg
xchg
pop
xchg
cltd
mov
cli
push
test
dec
ret
push
mov
nop
shlb
popa
iret
xor
push
cmp
aad
orb
pusha
pop
add
ds
rcrl
inc
mov
mov
xor
cmp
imul
jl
in
aam
loope
sub
ljmp
mov
lcall
jae
push
and
sbb
push
fwait
out
ja
repz
and
test
arpl
jl
sub
cmpsb
lret
jge
push
stc
loope
popf
out
call
mov
insb
push
test
inc
sub
rcll
jns
inc
jno
mov
jb
call
fisubrl
jl
dec
fst
repnz
jae
sub
jl
mov
pop
dec
push
mov
insl
cmpsb
out
fisttpl
call
inc
inc
adc
pop
xor
push
out
jmp
out
adc
add
jmp
ss
sti
lods
roll
lea
push
mov
and
and
repnz
movsb
adc
xchg
stc
cmp
int3
sbb
push
mov
test
xchg
out
add
fmull
sub
test
cmp
out
mov
mov
xor
sub
jg
test
pusha
fs
sbb
pop
sti
fldt
add
movsb
pop
or
mov
pop
sbb
mov
stc
cld
shr
dec
fst
mov
cld
subl
fwait
lods
or
pushf
mov
pop
and
aad
add
fistpl
dec
in
test
dec
lds
inc
loopne
les
mov
and
push
jl
mov
jbe
or
xchg
pop
jmp
shll
fiaddl
pop
into
jmp
sub
ljmp
mov
pop
cmpsb
or
fmul
xchg
jl
mov
inc
in
or
xchg
add
flds
xlat
dec
xorb
mov
jl
out
mov
cmp
inc
adc
sub
into
pop
pop
popf
test
mov
je
das
or
out
jmp
pop
arpl
jmp
hlt
mov
mov
lret
popf
sbb
sub
sbb
jge
lods
out
loopne
adc
aam
mov
inc
xor
xchg
das
int
sub
ss
xlat
stc
inc
fistps
cltd
cmpsl
pusha
xor
cmp
mov
inc
jge
inc
js
mov
pop
dec
xchg
lods
cmp
rcrb
fwait
mov
jge
cmp
mov
dec
into
sbb
out
dec
xorl
push
mov
jg
test
ds
cmp
sub
int3
nop
stos
data16
leave
add
es
xchg
fldt
jbe
xchg
jno
and
and
adc
xlat
mov
jae
jnp
pop
mov
jb
xlat
xchg
adc
mov
push
pop
insb
jns
dec
cld
sbb
jmp
push
add
cmp
mov
outsl
icebp
in
in
lcall
jge
fwait
jo
addb
faddl
pop
fwait
lret
inc
push
rclb
imul
and
enter
dec
push
dec
xchg
inc
push
imul
sub
push
imul
inc
mov
test
shrl
cmp
fcomi
aaa
sub
aam
jg
push
mov
jl
add
mov
sbb
int3
iret
fwait
mov
ljmp
div
xlat
sbb
lret
push
sbb
push
dec
mov
inc
jno
dec
xlat
xchg
or
lcall
jmp
fistpl
loopne
addl
mov
les
mov
sahf
insl
neg
imul
add
addr16
mov
sbb
aam
cmp
mov
sbb
dec
mov
xlat
push
or
inc
pop
jmp
ret
addl
aas
cmp
pop
ja
idivb
jns
shlb
add
shl
inc
sahf
adc
movsb
add
cld
pop
sbb
lahf
cmpl
add
add
ljmp
xchg
jns
adc
sub
shrb
jp
imulb
inc
cmpsb
dec
pandn
and
push
pop
sbb
add
es
lcall
fisubs
mov
arpl
mov
sub
xchg
lahf
or
add
jo
dec
scas
fcmovbe
cwtl
cmc
mov
ja
ffreep
nop
inc
aas
or
es
push
and
or
loope
mov
popa
fisttpl
test
movl
inc
pop
cmpsb
jnp
add
sub
push
mov
push
shl
jbe
repz
push
lods
mov
loopne
roll
call
mov
pusha
andb
mov
dec
push
loope
dec
cmc
mov
push
jo
mov
mov
iret
andl
mov
push
ss
mov
movsb
leave
and
rclb
push
jmp
orb
sbb
sub
jb,pt
inc
mov
pop
pop
ja
pop
inc
cmp
or
dec
push
add
inc
and
mov
addl
mov
sbb
or
icebp
ljmp
mov
sahf
and
cs
ljmp
lahf
or
xchg
dec
repnz
cmp
fisubs
cmp
subb
add
jmp
ss
jecxz
nop
pop
ficoml
dec
mov
add
aas
pop
pop
mov
aam
ret
lcall
loope
imul
cmp
mov
ret
testl
jb
xor
push
subb
test
xchg
inc
cmp
das
jl
dec
adc
loopne
adc
movsb
dec
push
call
in
lret
call
xor
outsl
dec
ss
mov
and
into
mov
cmp
outsl
lea
scas
inc
xor
adcb
adc
xchg
insb
out
fbld
aas
inc
in
dec
je
pop
mov
xchg
push
loopne
bound
adc
add
push
or
dec
cmpsb
inc
loopne
fsqrt
fcomi
decl
dec
pusha
jae
arpl
out
aas
xchg
sub
iret
add
mov
mov
aam
or
sbbb
xchg
mov
xor
fs
sbb
repnz
das
stc
mov
jp
xor
cmp
jbe
flds
sti
into
dec
and
pop
popa
fwait
pop
sbb
mov
sbb
clc
mov
ret
mov
pop
pushf
test
or
mov
lods
or
jg
out
sbb
jmp
push
xor
mov
movsb
ss
xchg
bound
imul
lds
outsb
mov
rclb
rcr
add
inc
inc
nop
outsl
out
add
icebp
repz
cmc
addr16
xor
ret
jnp
dec
fcmovu
jecxz
sub
sub
ljmp
sbb
inc
mov
mov
xchg
jg
xchg
sbb
mov
mov
dec
pop
cltd
les
dec
fwait
gs
mov
ret
test
mov
jmp
dec
sbb
pushf
inc
dec
and
test
mov
movsb
adc
lods
mov
jp
mov
out
in
inc
mov
cmpsl
and
andb
mov
fldenv
pusha
jno
fwait
cmp
jno
icebp
ds
sbb
adc
inc
lds
pop
adc
mov
add
pop
or
cmpsb
sbb
add
jmp
inc
fsubs
push
mov
pop
sbb
dec
sti
mov
mov
fmul
lret
sbb
and
sbb
imul
js
jge
add
add
mov
xor
stc
sub
sti
push
xor
pop
mov
dec
inc
lods
lcall
add
pop
rolb
fstpt
sub
jmp
imul
push
stos
adc
outsl
mov
test
jae
dec
insb
in
xor
mov
mov
xor
push
and
aad
push
les
std
lods
test
je
fsts
push
lret
sub
push
pop
mov
rolb
mov
fildl
push
mov
pushf
outsb
inc
add
rcrl
stos
cmp
iret
cmp
and
fwait
jns
movsb
mov
dec
sbb
mov
cmp
dec
and
jl
sub
xor
out
push
ss
xchg
pop
decl
test
xor
pop
xor
loopne
mov
aad
adc
pusha
mov
scas
and
fdivrl
push
mov
scas
dec
sahf
sbb
add
jmp
std
je
fnsave
and
inc
out
in
dec
test
or
std
in
jno
pop
pop
jne
sub
nop
dec
cmpsb
dec
rorb
and
add
into
push
jecxz
push
outsb
push
mov
js
out
or
adc
in
sbb
int
mov
orl
add
data16
add
cmp
inc
pusha
gs
push
dec
rolb
and
xchg
and
add
mov
sub
mov
jb
test
mov
lds
xor
scas
push
mov
movsl
in
int3
mov
inc
movsb
mov
jg
hlt
jb
mov
mov
sbb
inc
movsb
data16
popa
sbb
xchg
aad
adc
add
cs
aad
pop
int
jl
sbb
lock
dec
pop
inc
push
out
mov
cmc
cmp
faddl
imul
mov
sarb
adc
into
mov
and
jp
inc
push
sahf
push
repz
jmp
aad
mov
mov
in
cld
cltd
xchg
popf
pop
mov
inc
icebp
mov
xor
pop
jp
or
adc
inc
sbb
cld
mov
sub
sub
sub
outsb
aas
or
xchg
pop
pop
inc
xchg
repnz
popa
inc
push
repz
xchg
pop
icebp
mov
fsub
cmpsl
pusha
and
cmp
ret
jb
mov
pop
mov
cltd
test
ja
mov
sub
dec
mov
push
test
sbb
jge
into
popa
loope
pop
jle
les
movsb
jl
jbe
jns
rcrb
mov
sub
cltd
test
dec
cli
movsb
mov
mov
jno
fs
or
sub
leave
inc
push
shl
jno
inc
mov
lock
add
leave
imul
popf
sub
mov
xchg
mov
cmp
shrl
fildll
std
sub
push
in
in
push
sbb
loop
jl
stos
jl
xadd
je
push
mov
sub
cmp
lcall
ja
dec
ret
into
jge
inc
inc
mov
and
es
cwtl
sbb
mov
mov
add
sarb
outsb
sbb
push
mov
ret
cmp
shrb
std
rclb
xor
fisttps
movsl
das
xchg
push
lret
outsb
and
or
mov
outsb
push
cmpsb
ja
xchg
sbb
push
fisttpll
in
lea
and
adc
in
mov
aam
loope
sbb
pusha
rcl
jbe
mov
dec
out
dec
aas
dec
ljmp
lds
adc
mov
inc
mov
cltd
mov
mov
enter
out
imul
nop
sbb
shrl
add
mov
xchg
aaa
cmp
and
aam
and
sub
dec
mov
jecxz
mov
nop
aas
cmp
fstpt
inc
mov
or
and
sbb
iret
popa
jnp
pop
outsl
sub
cltd
ficompl
sub
jle
xor
jns
adc
push
jle
jns
mov
gs
jo
mov
cmp
jns
cmp
fldt
rcll
mov
add
and
add
pop
jmp
mov
fdivrp
cmc
add
inc
loopne
mov
ret
mov
in
sbb
loope
and
lods
or
lds
or
dec
lret
cli
out
ljmp
pushf
test
nop
mov
sub
push
dec
andl
dec
lcall
dec
lods
fstl
cmp
in
lret
or
push
icebp
or
lcall
divb
je
xor
mov
pop
mov
aam
cmp
push
mov
in
push
inc
aas
rcrl
or
inc
or
lcall
inc
pop
ds
pop
dec
stc
jmp
mov
cwtl
xor
loopne
inc
mov
xchg
cmp
sbb
ljmp
mov
daa
cs
adc
pushf
leave
adc
mov
pop
push
add
nop
dec
mov
mov
mov
fs
fmuls
push
mov
int
stos
aam
ficoml
or
dec
mov
cmp
inc
call
daa
lods
pop
xor
mov
or
aaa
pop
cld
fwait
cmp
xchg
lahf
pop
sbb
ror
test
push
dec
lods
adc
cmp
daa
loopne
into
jo
enter
sbb
mov
xor
mov
fwait
mov
lcall
stos
push
mov
xlat
orb
sbb
mov
inc
fsts
sub
push
lds
arpl
rcll
cmp
inc
mov
add
aam
push
jmp
std
out
cmp
iret
pushf
test
jno
cltd
aad
add
sbb
xchg
dec
push
push
jmp
jge
inc
pop
jp
dec
pop
push
cs
arpl
jno
jb
pop
xchg
fcmovu
jl
sub
inc
xlat
add
mov
js
gs
das
pop
testb
push
movsb
decl
jl
insl
pop
or
xchg
in
enter
cs
repz
inc
ss
gs
in
mov
pop
cwtl
bound
push
into
int
repnz
lret
mov
push
push
jle
rcll
jle
jnp
mov
and
gs
cmp
inc
sbb
popf
mov
and
idivl
xchg
push
push
data16
pop
mov
shlb
mov
iret
sub
sub
jb
xchg
fistps
ds
xchg
loopne
add
mov
push
adc
daa
push
and
popl
cltd
mov
dec
je
std
divb
popa
mov
xchg
push
sub
iret
xchg
pop
jmp
mov
iret
cmp
in
aas
imul
adc
std
lods
fildll
mov
or
imulb
repz
rcl
push
sahf
adc
loop
cmp
arpl
lret
xchg
xchg
and
roll
xchg
jo
cmp
dec
adc
sbb
jb
ja
cmpsb
stos
pop
in
mov
sbb
lods
lcall
dec
cmc
js
mov
dec
ret
jl
arpl
jae
loope
or
adc
sub
mov
aad
ja
pusha
mov
xor
clc
jae
repnz
out
in
xor
shlb
mov
mov
sti
lcall
jg
insl
inc
fstpt
mov
icebp
out
imul
js
mov
imul
int
aad
push
mov
cmpsl
pop
add
es
add
out
pop
mov
pop
xchg
xor
xor
fwait
jns
adc
push
fcoml
mov
cli
jno
inc
cld
aam
out
xchg
mov
fcompl
mov
and
stos
sbb
lea
dec
testb
dec
loopne
inc
lods
jnp
loopne
fwait
repz
aam
add
pop
int3
data16
ljmp
sbb
adc
fidivrl
sub
cld
les
mov
inc
jl
aaa
sub
push
mov
push
leave
fmull
xchg
shr
pop
jnp
xor
in
xchg
sub
or
daa
add
and
mov
cmpsl
rcl
pop
pushf
mov
iret
or
mov
adc
jmp
mov
adc
jg
and
dec
mov
clc
or
repz
lea
jnp
enter
in
fcomi
movsl
dec
push
xor
dec
push
data16
and
idiv
xchg
cltd
outsl
push
adcl
dec
xchg
dec
pop
jae
mov
mov
popf
inc
test
jne
adc
push
pop
mov
or
loopne
cmc
add
scas
pop
dec
pushf
out
into
dec
sub
int3
dec
icebp
mov
repz
sbb
out
xchg
loopne
jle
and
sbb
mov
dec
cmp
mov
jne
loope
cmp
ficomps
pop
push
sub
pushf
sti
shrd
add
mov
stc
adc
sti
inc
jle
cmp
popl
mov
mov
or
fs
xchg
andb
pop
xor
xchg
dec
mov
xchg
or
out
scas
sub
aad
push
in
push
mov
insl
sbb
xadd
lret
in
sbb
xor
mov
in
mov
stos
nop
fucom
andb
sbb
out
out
jl
ds
js
cmc
mov
adc
xchg
sbb
adc
mov
xchg
pusha
pop
push
sti
cmpsb
nop
fdiv
mov
mov
cmc
rcr
inc
pop
xchg
shr
sti
mov
inc
dec
jmp
scas
mov
lret
ret
mov
mov
lahf
sbb
sarb
testl
out
pop
mov
and
test
pusha
cli
mov
xor
pop
pop
sub
jmp
pop
enter
sub
sbb
cmpsl
or
add
test
mov
pop
and
shrl
fdivrl
adc
lods
movsb
pop
sbb
insb
out
jae
lds
inc
dec
test
push
pop
add
icebp
mov
or
cwtl
add
sub
mov
pusha
jne
cmpsb
xchg
pop
dec
add
and
add
pop
mov
push
es
out
xchg
loopne
repz
jp
aaa
push
sbb
mov
pop
scas
jg
add
add
jae
dec
push
cmpl
mov
mov
daa
cltd
dec
xchg
movsl
movl
add
movsb
outsl
push
pop
loope
mov
dec
js
fnstsw
sub
add
or
ret
sbb
outsl
push
hlt
int3
data16
pop
lods
push
or
cmp
or
dec
loopne
push
or
xchg
pop
fsubl
push
jns
js
idivb
or
lods
fstpl
popa
inc
gs
out
stos
iret
lret
pop
pushf
sbb
mov
mov
insl
xor
ret
fadd
cmp
lret
sbb
mov
jno
ds
stos
add
mov
fiaddl
jle
iret
mov
adc
or
xchg
jmp
scas
and
and
cld
inc
hlt
movsl
int
movsl
mov
adc
aam
mov
cli
or
fptan
fidivl
pop
inc
mov
cmp
rcr
pop
fcoml
or
pop
jmp
rorl
jns
rcrb
mov
lret
sbb
add
fisttpl
jae
cltd
lods
daa
push
adc
aas
daa
mov
das
mov
shrl
mov
leave
cmpsl
sbb
in
frstor
adc
jno
xchg
repnz
ret
adcb
jmp
scas
push
jns
loopne
idivl
xor
pop
ja
outsb
shll
push
adc
sbb
mov
sbb
js
fbstp
add
sbb
pop
data16
test
dec
hlt
popa
pop
pop
lahf
repz
adc
imul
lock
jnp
movsb
adc
std
into
ljmp
add
jae
pop
dec
mov
dec
fstps
and
paddusb
inc
inc
repnz
cmpsb
les
sbb
je
mov
cmp
xchg
push
dec
ja
popf
cld
xchg
sti
inc
ret
lea
mov
sbb
pop
mov
pop
add
cs
jbe
lret
scas
mov
cld
inc
jne
rcrl
mov
jp
pop
shlb
repnz
mov
insb
xorl
idiv
jae
pop
adc
stos
test
sub
dec
shll
mov
sbb
nopl
add
jp
outsb
and
dec
adc
fidivrs
add
mov
mov
push
leave
inc
cmpb
jno
in
sbbb
sub
les
xor
mov
mov
sub
cmc
xor
cld
insb
dec
xor
rclb
sub
adc
cmp
cli
shl
das
lret
sti
push
push
mov
xor
movsl
pop
ret
inc
mov
mov
cltd
aad
add
add
sbb
andl
lcall
pushf
pop
rcr
insb
aaa
sub
push
idivb
faddl
sub
and
adc
icebp
jae
or
cmp
imul
pop
dec
push
mov
sbb
xchg
loope
push
loopne
mov
inc
jmp
dec
sti
pinsrw
outsb
scas
jmp
cmp
fidivrs
jecxz
adc
cmp
push
push
ds
lock
pop
mov
or
popa
jecxz
push
pop
mov
fildl
mov
shr
aam
cmpb
mov
mov
lds
mov
mov
cmp
lahf
push
sbb
ret
jmp
mov
add
sbb
out
sbb
stos
test
add
mov
cmp
lods
adc
mov
dec
out
xchg
sub
ljmp
or
jmp
inc
subl
mov
mov
cmp
pop
adc
bound
jno
and
fldt
mov
jp
testb
scas
outsl
loopne
outsb
pop
repz
and
sbb
cmpsb
mov
fnstsw
lock
xchg
jae
popf
mov
lods
pop
sub
pop
sbb
loopne
dec
aad
lret
adc
frstor
xor
mov
push
push
movsl
jl
sub
jg
cmpsb
cltd
cmp
insb
or
in
mov
inc
sti
add
enter
into
scas
jg
cld
in
pop
sub
icebp
jl
lods
popf
popa
fs
test
push
or
pop
nop
in
mov
jmp
lea
ljmp
push
dec
dec
outsl
pop
orb
cmp
pop
and
jl
cltd
jecxz
mov
ljmp
pop
stos
push
out
xor
cmp
sub
push
mov
mov
jae
or
ret
xchg
pop
inc
and
lcall
xchg
js
jbe
xchg
or
sbb
jge
lcall
ljmp
mov
push
fimuls
adc
sbb
pop
push
mov
push
mov
adc
cmp
lock
cmc
mov
dec
mov
push
in
scas
mov
push
test
add
pop
inc
adc
negl
jmp
push
dec
or
mov
xor
je
gs
pop
mov
inc
test
mov
mov
adc
xchg
dec
or
jp
stos
inc
idivb
jmp
cwtl
sbb
nop
lds
daa
out
mov
shll
jg
mov
movsb
mov
pop
push
movsb
mov
xor
mov
mov
inc
mov
pop
test
cltd
lcall
or
dec
push
ss
lret
push
cmp
adc
adc
adcl
xor
mov
or
cmp
outsb
test
jno
cmpsb
cmp
jo
cmpsb
das
out
xor
mov
dec
and
sbb
pop
cld
inc
and
jl
fldcw
mov
add
xchg
sub
js
roll
jnp
mov
mov
or
jb
dec
fcoms
mov
mov
lret
out
pop
xchg
inc
data16
inc
add
sbb
push
sti
mov
outsl
mov
or
shlb
repnz
mov
mov
gs
sbb
sbb
push
fldl
adc
repnz
mov
mov
dec
mov
dec
or
lds
popf
pop
pop
cmp
sub
fsubs
push
pop
mov
rcr
jno
scas
imul
mov
adc
or
loop
add
cmp
lods
loope
inc
mov
mov
shll
les
outsb
out
cmp
dec
dec
out
mov
sub
int
in
jb
data16
lock
mov
dec
in
xchg
pop
data16
pusha
dec
xchg
cmc
loope
adc
mov
and
xchg
push
sub
xor
dec
out
ret
adc
and
add
sti
jae
pusha
cmpsb
inc
addr16
cwtl
cmc
xchg
sub
clc
cmp
aam
loopne
cld
push
scas
imul
jl
mov
inc
pop
faddl
jns
iret
lods
test
out
cwtl
pop
into
adc
xor
test
sub
lock
inc
fisttps
push
inc
and
movsl
inc
orl
mov
sbb
arpl
rcrb
fldl
clts
mov
pop
push
push
mov
jp
out
sbb
ret
sub
and
push
fdivrl
popf
and
fwait
sbb
pop
mov
xor
cld
lock
mov
sub
shll
imul
pop
je
mov
push
iret
adc
cltd
fwait
jecxz,pn
rcl
cmp
jns
rclb
push
insl
pusha
icebp
in
jp
pop
sub
xchg
mov
cmp
icebp
mov
add
movsl
sbb
push
mov
movsb
push
pop
out
test
sub
into
jl
xchg
stos
cwtl
and
loope
mov
push
mov
push
inc
xor
inc
popa
je
dec
loope
push
mov
xchg
pushf
mov
fidivl
and
jne
pop
push
aam
and
push
and
lds
cmp
bound
push
arpl
push
nop
sbb
push
mov
mov
imul
pusha
pusha
cld
iret
test
mov
add
xor
out
sub
jp
sub
or
repz
xor
fwait
std
aaa
push
mov
lods
mov
enter
cmpsb
cwtl
cltd
addr16
jg
dec
push
nop
jl
pop
add
and
cmp
mov
add
das
negb
sbb
cmp
or
sahf
add
je
xor
push
sub
movsb
sbb
cwtl
adc
inc
test
xlat
movsb
out
sbb
cmp
dec
movsl
add
dec
mov
call
pop
jb
dec
inc
jmp
xchg
outsb
loope
into
mov
cmp
adc
cmp
daa
sub
les
xchg
sub
lcall
fidivrs
add
xorb
jmp
mov
and
push
xor
popa
imul
mov
movsb
test
lret
addl
nop
cmp
jae
mov
lret
jmp
add
aad
push
bound
stos
sub
clc
adc
ja
in
cmp
cld
arpl
fstpl
fsubs
push
push
popl
and
divl
sub
pop
test
mov
or
lds
and
push
mov
cmpsb
and
inc
sbb
les
orb
cmp
inc
popa
test
sub
test
gs
xchg
cli
inc
out
scas
icebp
mov
sti
jae
dec
pop
mov
add
iret
mov
xchg
inc
dec
ds
test
sub
dec
cwtl
pop
outsb
sub
mov
pop
xchg
jge
ret
lret
dec
mov
sub
sti
test
fwait
inc
clc
mov
es
push
push
sbb
cmpsb
add
sahf
in
mov
sbb
inc
shrl
push
jae
subl
fwait
test
dec
cli
mov
movsb
ljmp
dec
sti
pop
scas
dec
inc
adc
ss
inc
pop
pop
xchg
push
in
jnp
push
ret
cs
imul
imul
push
cmp
fisttps
addb
inc
ret
cltd
mov
sbb
sahf
jmp
cld
mov
lods
cmp
push
rcll
inc
cmpsl
mov
je
shll
cmp
les
add
mov
rclb
dec
scas
add
jg
cmp
xchg
push
xchg
adc
xor
cmpsb
scas
cmp
pop
push
xchg
mov
cmc
cli
sub
repz
adc
stos
mov
lea
iret
xchg
push
das
add
insl
pusha
lret
sub
aad
pop
add
push
mov
push
fistpll
repz
jl
sbb
das
lods
pop
nop
mov
sbb
ficompl
inc
out
cld
pop
ss
sarl
dec
outsl
mov
out
aam
leave
xor
int3
push
jne
sub
iret
adc
xchg
sbb
xor
sbb
push
fsubrl
xor
inc
inc
mov
incl
fwait
jno
and
out
ja
mov
test
cmp
sub
push
push
and
sbb
xor
cmc
or
xor
inc
in
movsl
sar
xchg
out
sbb
jne
xor
dec
add
push
and
jecxz
cmpsl
icebp
cmp
jbe
subb
mov
sub
into
push
pop
jp
sbb
mov
out
jmp
push
fwait
decl
es
frstor
into
mov
pmaddwd
mov
adc
jl
xchg
inc
sbb
andb
push
mov
mov
mov
popf
insl
lret
pop
xor
inc
sbb
mov
sub
jmp
xchg
inc
mov
fistpl
shufps
cmpsl
jno
loope
movsb
jge
ljmp
mov
mov
leave
sub
mov
lret
or
jnp
fcompl
cmp
pop
mov
mov
xor
xlat
incl
mov
and
lods
mov
push
scas
cmc
fbstp
mov
inc
push
sbb
jo
add
test
pop
clc
jo
mov
cld
or
movl
mov
adc
dec
adc
add
notb
test
ja
int3
cltd
int
add
cli
dec
fdivl
pop
cltd
mov
cmp
xchg
xor
int3
or
jae
icebp
inc
jb
pusha
inc
sbb
sbb
pushl
xchg
ljmp
loop
inc
pop
fbld
sbb
int3
cmovl
addr16
arpl
xchg
cmpsb
inc
or
xchg
mov
pop
mov
sbb
mov
or
dec
scas
push
push
cmp
rcrb
fisubl
das
fwait
lods
mov
jbe
mov
out
add
inc
push
mov
sbb
stos
pop
dec
loope
cmp
inc
ljmp
scas
nop
lods
stos
ss
dec
sub
and
or
stc
cmova
fs
fdivrs
cli
mov
pop
jle
jl
ja
cmpsl
in
jbe
jl
imul
test
ret
and
cmp
mov
addr16
js
or
push
sbb
inc
outsb
fsts
sbb
jl
cwtl
or
in
scas
es
sub
cmp
mov
iret
mov
aad
push
xor
xchg
arpl
call
pop
out
dec
call
mov
pop
popf
and
xchg
dec
xlat
fistpll
aas
mov
cmc
scas
fimuls
sbb
add
jge
popa
das
lahf
icebp
call
mov
imul
lret
shr
push
scas
pop
or
addr16
mov
pushf
test
mov
imul
test
stc
jl
int3
xor
or
fwait
add
arpl
mov
xchg
sti
and
sub
mov
or
cmp
inc
rorl
iret
repz
push
cltd
jg
sub
negl
pop
test
cmc
jo
pop
lods
lret
jbe
mov
sti
lahf
fisttpl
cmpl
adcb
test
cwtl
inc
daa
cli
in
imul
fwait
or
jb
push
sub
push
cmp
mov
mov
in
outsl
shll
in
sarb
nop
adc
mov
into
popa
fxch
sbb
dec
ret
pop
ret
out
cmp
gs
jbe
mov
adc
aam
repnz
push
jbe
push
aam
push
pop
mov
dec
push
add
shrl
push
cmp
inc
pusha
pop
lahf
test
pop
jbe
incb
cmp
jge
xor
les
inc
lahf
pusha
fidivrs
sub
les
xchg
ret
std
pushf
xchg
push
mov
pop
es
loope
mov
out
leave
xchg
movsb
in
divb
arpl
jae
lret
xchg
sub
sbb
lret
scas
clc
cltd
mov
arpl
scas
aaa
or
clc
push
mov
or
repz
in
pop
inc
mov
mov
dec
cmp
jae
add
pop
jmp
dec
mov
mov
add
imul
cmp
insb
or
cmp
pop
cmpsb
lret
movsb
addb
inc
loop
mov
std
mov
inc
inc
or
pop
or
sbbb
hlt
mov
insl
sub
sahf
mov
mov
push
push
cltd
fimull
jle
roll
je
dec
enter
push
add
stos
xor
test
mov
or
mov
daa
mov
push
push
test
jbe
js
cld
xor
mov
push
scas
push
mov
push
inc
mov
sub
ret
fs
dec
push
push
dec
sbb
inc
sub
mov
je
and
cmc
wbinvd
mov
into
sub
test
std
fiadds
imul
jecxz
out
add
jl
jb
cwtl
xchg
push
jp
pop
jno
daa
and
push
lods
fisttps
movsl
fsubl
repnz
mov
lret
cmp
push
cmpb
sub
mov
push
lret
mov
pushf
loope
dec
or
mov
lods
out
sbb
xchg
dec
mov
xchg
inc
outsl
divl
mov
adc
ficompl
mov
mov
stos
flds
andb
jmp
push
outsl
xchg
out
stc
or
jbe
mov
cmp
outsb
and
shll
fcompl
add
fwait
in
jg,pn
adc
lods
sbb
jbe
cmp
pop
jb
mov
mov
pop
push
mov
into
push
inc
jl
inc
insb
test
call
fistps
mov
mov
cli
sarl
pop
hlt
stos
out
sbb
cli
cltd
lret
mov
pop
sub
mov
repnz
stos
push
mov
push
cmpxchg
xchg
pop
sarb
ss
cltd
jmp
dec
dec
pop
xchg
dec
pop
add
sub
lea
inc
fnstsw
cld
and
pop
push
push
dec
call
jmp
stc
pop
lea
aad
pop
lret
lods
iret
jg
mov
mov
mov
insb
fwait
mov
pop
stos
xchg
js
mov
dec
ffree
cs
adc
das
movsb
js
push
pop
push
out
pop
sti
cli
mov
pop
pop
inc
and
sub
adc
movsl
fucomp
in
icebp
xor
mov
pop
fdivs
mov
sti
rolb
inc
adc
out
cmp
inc
repnz
sub
mov
lcall
cmp
cwtl
sbb
rcrb
mov
sub
jmp
aas
ret
fdivrl
scas
pop
popa
data16
psllq
dec
xor
xor
into
or
pop
jb
jg
ret
jecxz
sub
mov
mov
jg
rcl
mov
dec
dec
push
cmp
fldt
cmp
stos
mov
pop
shlb
and
ja
jnp
pop
and
aam
push
dec
jl
es
add
mov
mov
xor
movsl
loop
arpl
and
fmul
jg
or
mov
xor
cmpsl
iret
lds
lods
adcl
mov
fwait
cmp
sbb
dec
adc
xor
mov
in
dec
cmpsl
jbe
lret
or
fwait
mov
xchg
sahf
mov
enter
inc
pushf
je
push
ret
cmp
fdivrl
or
ja
xor
aad
mov
dec
push
push
aaa
push
add
loope
stos
dec
adc
pop
into
mov
ficompl
push
outsb
adc
xchg
hlt
scas
push
nop
sbb
jle
mov
cmpsl
aad
imul
hlt
daa
scas
sbb
les
lock
jno
pop
pop
mov
cmp
cs
mov
mov
pushf
push
sbb
daa
test
sub
mov
mov
push
test
xchg
std
xor
aam
pop
js
repnz
andb
mov
fdivr
push
xor
out
pop
sbb
cmp
pop
mov
lods
gs
popa
adcb
aam
repz
xor
xchg
or
test
gs
mov
out
jmp
xchg
addb
aam
nop
rclb
repz
ret
es
pop
and
jle
jmp
negl
lods
mov
pop
push
das
movsl
cwtl
xchg
pop
dec
sbb
inc
pop
pusha
rorl
addr16
leave
add
add
jno
mov
xor
mov
dec
mov
icebp
iret
test
jg
pushl
lea
es
mov
cmovae
out
pop
fstpt
sbb
mov
mov
subl
sbb
xor
sub
jge
pusha
jp
sub
xor
movsb
lds
mov
nop
xchg
movsl
cmp
int3
ss
bound
push
insl
pop
push
stos
dec
mov
loopne
je
adc
xchg
in
dec
xor
xchg
mov
xlat
pushf
push
mov
in
dec
or
pop
js
xor
dec
xor
lods
je
mov
leave
nop
push
fisubrl
insl
push
adc
sbb
popf
mov
mov
test
in
xor
je
aad
nop
mov
sbbb
subb
hlt
push
fdivrl
jnp
pop
outsb
imul
mov
and
add
xchg
jns
adc
ljmp
outsl
inc
jl
mov
sbb
loope
push
push
loope
fdivs
sub
int
push
out
mov
cmp
mov
sub
pop
sub
pop
dec
add
dec
xchg
cmp
pop
mov
test
insb
imul
jno
push
pop
ljmp
pop
fcomp
lret
int3
rolb
cmp
sarb
push
pop
mov
pushf
mov
add
or
xor
sbb
into
decl
mov
idivl
cmp
mov
icebp
mov
andb
mov
dec
cmpsb
mov
and
xlat
das
popf
icebp
imul
ljmp
and
or
push
sti
test
aam
jg
jno
shlb
or
pop
adc
aad
push
jns
push
inc
out
call
jns
pcmpeqb
pop
fbld
sti
bound
leave
out
mov
scas
repz
fcmovne
iret
jl
jnp
lods
ss
dec
pop
call
rcrb
in
loop
cmp
fs
sahf
insb
shlb
outsl
cmp
cmc
mov
inc
pusha
sub
mov
cli
sub
sbb
cmp
int
mov
outsl
mov
mov
ss
mov
test
decb
add
fimull
into
adc
inc
pop
call
mov
jle
dec
jmp
movsl
imul
lcall
pop
inc
lret
movsl
mov
stos
mov
addr16
push
loope
sbb
push
enter
fstl
mov
jle
jp
faddl
inc
jl
mov
sub
lahf
cwtl
fiaddl
mov
outsb
rclb
inc
mov
fisttpl
pop
cmp
das
dec
insb
jg
sbb
iret
mov
aam
in
mov
sti
cmp
pop
xor
fs
sub
icebp
cmc
or
mov
aas
jge
mov
push
push
xchg
mov
mov
add
push
fcmovnu
mov
mov
shl
cli
sbb
loopne
fcompl
std
mov
xlat
lods
pop
decl
fldcw
rcr
loopne
push
adc
fs
test
mov
cmpsl
jp
push
sub
gs
xor
inc
cwtl
cltd
lret
xchg
dec
jo
jae
mov
mov
or
mov
push
stos
arpl
adc
jnp
ret
mov
les
xchg
stc
lret
fdivl
sarb
push
test
xlat
jbe
inc
dec
jp
popf
pop
mov
push
es
pop
inc
xchg
int3
push
aam
test
mov
mov
mov
cs
mov
cmp
mov
stos
lods
or
outsl
mov
cmp
mov
push
rcrb
xchg
popa
sub
gs
fldenv
int
xchg
add
add
sub
mov
sbb
lahf
in
inc
push
cmc
inc
inc
inc
xorb
jge
scas
test
aam
push
push
pop
jae
inc
sti
jl
add
mov
sbbb
adc
repnz
jp
mov
fs
mov
sbb
jnp
inc
lret
loope
push
in
push
or
inc
jg
add
xlat
inc
aam
push
jle
xor
mov
lahf
test
pop
push
jp
inc
iret
sbb
sbb
sbbb
ja
jns
fcomi
dec
lahf
sbb
lcall
adc
push
js
pop
out
adc
mov
jo
sahf
pop
icebp
jg
mov
dec
nop
cmp
pusha
mov
hlt
cmc
shl
jno
ficoms
fnstcw
mov
cmc
je
lods
sbb
add
addr16
in
fsubrl
sub
jg
jle
and
stos
cld
ror
inc
push
in
or
mov
mov
sbb
sub
mov
adc
shll
cmpsl
dec
movb
lods
xor
es
mov
pop
push
mov
les
dec
push
fisttpll
jae
sti
mov
bound
sub
jns
push
mov
repnz
lcall
or
fnstenv
mov
push
sbb
test
mov
lods
fsubrp
into
mov
sti
and
push
sub
das
insb
mov
stc
cmpsb
cltd
pop
aad
aam
sub
mov
or
jo
out
xor
sub
aaa
push
dec
fisubrs
ret
sbb
push
push
mov
bound
mov
pushl
pop
testb
pop
frstor
mov
ficompl
cld
outsl
inc
cs
and
aam
fisttpl
add
or
cmp
jns
dec
sub
add
mov
clc
mov
out
push
xchg
mov
sub
jmp
cmp
fistpl
mov
lds
inc
ja
ret
fiadds
fwait
mov
into
dec
and
xor
jge
mov
std
ficoms
mov
push
sub
jge
test
xchg
aam
fists
mov
pop
mov
mov
mov
cld
lret
sbb
imul
aam
mov
repz
insb
sti
mov
pushf
add
sti
jae
dec
sbb
jge
test
int3
mov
adc
jg
xchg
ret
mov
out
mov
jnp
push
not
je
push
xchg
lret
imul
gs
cs
setnp
push
mov
cmpsl
and
cmp
cli
mov
movsl
test
sbb
cmpsb
lss
test
mov
inc
ljmp
out
loope
pop
cltd
xor
mov
rolb
cmp
imul
rcrb
push
popa
or
mov
sbb
pop
mov
inc
arpl
lret
subl
pop
cmp
out
ljmp
pop
xor
and
mov
cltd
mov
das
jl
xchg
iret
and
push
inc
push
fcomi
mov
xor
or
push
into
inc
pop
jns
mov
loop
lcall
push
mov
dec
imull
les
cltd
pop
movsl
insl
js
mov
dec
inc
lods
sub
inc
hlt
jno,pn
mov
lock
push
flds
int
cmp
adc
adc
fstps
cwtl
and
sarl
inc
andb
movsl
imul
mov
jae
and
fdivrl
mov
xchg
jp
movl
out
jne
mov
lret
mov
mov
sbb
cmp
negl
mov
pop
ljmp
loopne
mov
push
in
fists
enter
mov
inc
xor
pop
inc
cmp
jns
cmpsl
mov
repz
and
hlt
sahf
in
call
out
ja
movsl
pop
sub
imul
lahf
test
inc
in
outsl
js
stc
add
ljmp
xchg
test
clc
daa
mov
les
fucom
aam
adc
out
scas
int3
push
pop
mov
shrd
jmp
imul
insb
cmpsb
mov
or
or
cmp
inc
jno
loope
inc
popf
pop
pop
mov
mov
pop
dec
or
jne
in
push
gs
jb
mov
add
cmpsb
adc
ja
dec
rcll
push
push
fdivs
jg
dec
dec
in
ss
add
insl
push
nop
xchg
inc
leave
sub
shll
push
add
popf
mov
iret
cmp
imul
cli
pop
sub
jg
imul
rorl
outsb
inc
dec
lds
dec
push
sahf
imul
sbb
fwait
add
mov
push
sub
mov
jecxz
fcmovne
sub
pop
out
call
dec
or
push
mov
fnsave
pop
pop
fisubrl
push
imul
and
rcpps
push
aam
pusha
xchg
jmp
cld
jge
xchg
fsubs
mov
imul
jae
jne
mov
xchg
icebp
push
adc
loope
mov
inc
ret
dec
rclb
lods
or
xchg
pop
int3
sbb
mov
insb
and
mov
jns
dec
mov
icebp
ficoml
dec
jge
data16
sbb
sbb
fs
lods
dec
aaa
dec
in
adcb
bound
xchg
dec
ss
mov
cmp
jnp
subl
mov
int
pop
movsl
mov
xor
cmp
inc
xor
in
jne
inc
loopne
pop
lret
jge
out
jb
inc
ficoml
dec
cltd
dec
or
pop
lods
inc
sbb
mov
ljmp
clc
adc
add
mov
sub
data16
rorl
lock
and
movsb
mov
fucomi
lret
mov
int
clc
pop
xchg
sub
adc
icebp
ficompl
stos
cmp
pop
jnp
mov
pop
jae
dec
mov
inc
movsb
mov
push
mov
loop
push
dec
add
leave
jbe
or
xchg
aas
pop
or
fwait
pop
fidivrs
lcall
adc
cmpsb
sub
js
out
xchg
mov
out
dec
pop
js
movsb
jmp
pop
push
aas
loope
pop
mov
popf
jno
rol
mov
add
push
inc
and
add
lcall
xlat
testb
sbb
ret
pop
mov
xchg
mov
sti
or
adc
out
jecxz
fisttpll
in
mov
test
je
test
lahf
sbbl
push
arpl
pop
sbb
mov
jmp
sbb
out
shll
xchg
or
xadd
mov
jnp
add
insb
push
addb
sbbl
loopne
out
into
push
test
les
xchg
les
mov
jb
cld
cmpsb
int3
repnz
ja
pop
or
repnz
jg
and
dec
and
nop
imul
push
mov
mov
in
xchg
data16
push
mov
roll
pusha
loop
icebp
jl
incb
mov
stos
cld
inc
ds
xchg
bound
pop
xchg
mov
popf
imul
push
icebp
inc
bound
adc
xchg
fwait
jbe
jns
xchg
outsb
pop
out
mov
push
stos
rorb
push
or
pop
push
lret
cmc
fs
es
jmp
mov
jno
ds
inc
cmp
not
rorb
mov
mov
cmpsb
or
mov
fdivrl
cld
push
jmp
fwait
and
push
lret
sbbl
out
int
sbb
cmp
inc
ljmp
sbb
push
dec
sti
push
stos
sub
pushfw
mov
stos
mov
push
notb
mov
fs
cs
insw
jg
rcll
adc
add
dec
stos
and
rcl
mov
dec
mov
cmp
xchg
rolb
add
or
cmp
dec
pusha
and
pop
jae
je
jmp
ds
mov
cmp
sbb
insl
pop
mov
or
xor
mov
in
push
subl
push
je
into
and
mov
or
aam
out
lahf
push
pop
mov
jae
cmp
sbb
nop
scas
or
inc
dec
adc
cmpsl
lds
sbb
sbb
jno
and
push
push
jecxz
and
cltd
mov
std
scas
stos
dec
shrb
sub
lret
mov
mov
push
out
mull
gs
shlb
jmp
jmp
mov
fbstp
inc
or
or
push
mov
pop
mov
mov
aas
mov
pop
jno
jmp
fwait
pop
jae
sbb
insb
dec
lret
sbb
pop
clc
and
cltd
cltd
pop
push
xchg
lock
jl
xor
mov
mov
aas
lods
inc
dec
cmp
jne
mov
popf
cmc
dec
push
stos
in
enter
jle
mov
pop
test
xchg
ljmp
hlt
add
ja
cmp
loopne
mov
stos
xor
push
mov
cmc
xchg
push
ljmp
sbb
ret
scas
addr16
imul
ljmp
les
dec
outsl
push
mov
fwait
sbb
push
ss
push
push
mov
xor
jbe
int
push
add
jmp
data16
mov
sarb
ficompl
int3
mov
xor
aas
scas
push
cmc
mov
mov
mov
cmp
mov
pop
push
sub
mov
pop
lcall
dec
mov
incl
push
cs
pop
and
imul
mov
inc
or
pop
mov
sbb
jl
cs
jg
pusha
push
das
aaa
xchg
outsl
xchg
sbb
mov
out
mov
adc
mov
inc
negl
push
pop
es
sub
pop
cmpsb
scas
mov
push
lahf
daa
sub
imul
in
lods
mov
cltd
repz
cmc
mov
inc
ds
dec
je
sbb
data16
cmpsb
fidivrs
addl
mov
in
scas
iret
sahf
jmp
xor
in
cmp
or
jae
push
mov
imul
fwait
fs
pop
lods
test
fistpl
push
mov
or
or
mov
inc
jl
test
adc
out
jge
ds
pusha
adc
movsl
std
mov
in
xor
int3
mov
add
pop
sahf
dec
cmpl
fisttpl
ret
push
into
lret
stos
xchg
mov
xlat
jle
fcoms
les
cli
scas
mov
iret
push
xor
inc
jae
jp
xor
inc
jl
pop
cmpl
jns
dec
sub
or
sbb
lods
and
movsb
cmp
mov
fwait
sbb
insb
mov
jle
or
cmp
inc
pop
xor
jmp
jae
sbb
insl
lods
fmuls
and
insl
std
mov
roll
inc
loope
mov
rcrl
push
pop
adc
xor
sub
cmc
xchg
imul
jl
xchg
mov
push
idivl
xchg
inc
imul
jno
imul
popf
adc
hlt
mov
push
or
cmp
fwait
ja
inc
loope,pt
cmp
lahf
fadd
sub
inc
fistps
std
imul
adc
enter
cmp
mov
mov
mov
aad
pop
movl
fstl
mov
scas
mov
stc
sbb
fcmovnb
adc
jbe
sbbb
xchg
sbb
ret
imul
and
pop
ljmp
mov
jno
rcll
dec
arpl
sar
dec
fs
xor
cmpsb
cmp
sbb
mov
mov
add
xlat
test
mov
inc
pushf
or
je
pop
push
das
fsts
int3
ljmp
cltd
leave
xchg
add
push
xchg
jmp
jns
dec
lods
xchg
jg
or
jg
pop
int3
test
jg
add
sarl
push
scas
mov
dec
loopne
mov
sbb
inc
push
and
cltd
ret
daa
mov
cltd
in
repz
xor
push
gs
test
mov
mov
mov
data16
xor
cmp
movsb
fcompl
das
add
into
in
stos
xlat
jle
in
stc
pusha
stos
stos
lods
shrl
mov
sub
or
aaa
les
enter
rolb
jno
in
xor
pop
data16
in
fwait
cmp
push
hlt
stc
data16
movsb
mov
int3
jns
ss
test
stc
xchg
fistl
sbb
mov
mov
movsl
add
dec
sub
test
stc
cmp
mov
inc
and
ret
fisubrl
fistps
std
test
cltd
cltd
inc
xchg
jg
mov
dec
ds
leave
and
cmp
popf
jbe
dec
sbb
pushf
xor
call
cltd
or
xchg
enter
mov
loop
cltd
mov
push
mov
lcall
inc
add
push
mov
into
xchg
cmpsl
xchg
test
push
fisubl
movsb
xchg
icebp
mov
call
dec
add
mov
fadd
je
out
decb
test
fimuls
xor
lret
loop
push
icebp
mov
lea
lahf
pop
in
mov
imulb
ljmp
and
xor
movb
jbe
sub
and
dec
xchg
push
xorb
add
hlt
and
fwait
sub
frstor
mov
and
cmc
pop
adc
enter
push
mov
jo
out
push
mov
mov
jns
aam
pop
cld
push
mov
adc
xor
mov
mov
mov
sub
fimuls
scas
jl
jnp
out
mov
add
fists
icebp
xor
cmovno
insl
inc
mov
aam
or
fs
jae
jbe
mov
or
shlb
push
lds
filds
imul
lock
xor
xor
push
mov
ljmp
add
addl
iret
mov
xor
stos
ficompl
test
xchg
in
das
into
lock
test
adc
mov
imul
mov
iret
cmpsb
adc
fsubl
jno
aas
iret
jge
stos
push
shrb
mov
into
roll
mov
imul
loope
or
push
adc
mov
mov
int
mov
cmpb
mov
pop
mov
add
clc
jae
pop
fsubrl
cmp
lds
mov
jo
ljmp
push
lahf
cltd
rclb
call
mov
cltd
jb
inc
stos
ljmp
test
sahf
loopne
xlat
data16
cmp
loope
shlb
outsl
xor
scas
dec
insb
sub
push
rorl
fnsave
dec
cmpsb
and
add
test
xchg
mov
xor
push
fldl
cmp
loopne
movsb
inc
orl
xchg
lcall
pop
ficomps
outsb
push
mov
inc
push
das
jmp
fsubs
dec
mov
xchg
mov
adc
inc
rorb
ljmp
mov
or
call
xorb
mov
gs
addr16
inc
clc
jmp
fists
mov
pop
scas
gs
push
repz
fbld
ret
adc
cmp
out
mov
fwait
div
pop
xor
fisubrs
sarb
in
jns
jge
leave
cmpsb
inc
cmp
iret
pop
fwait
jle
ret
mov
mov
dec
mov
cmp
mov
push
lds
repnz
ret
in
sti
push
ja
insb
cmp
dec
fwait
jecxz
inc
popf
and
mov
sbb
mov
xor
cmp
push
push
sub
je
mov
or
push
jg
jb
push
gs
mov
in
cmp
mov
test
stc
js
movsb
inc
mov
jge
jne
push
mov
xor
xor
stos
adcb
jmp
test
xchg
out
push
adcb
add
movsb
cmp
mov
mov
jno
shlb
pop
add
imul
dec
push
sub
dec
push
mov
cmp
mov
cmp
mov
data16
or
int
les
inc
leave
lods
pop
jno
movsb
test
hlt
fmull
pop
push
pop
xchg
xor
xchg
push
adc
pop
addr16
lea
add
outsl
pop
jo
push
jl
test
xorb
addb
fisttpl
pop
jle
mov
cmc
cltd
mov
push
shrl
mov
mov
xor
jo
jmp
inc
sbb
or
mov
jle
push
loop
int
in
xchg
gs
cltd
shrl
xchg
dec
dec
cli
sti
test
sahf
mov
pop
pop
es
sbb
aad
sti
pushf
dec
xor
movsl
iret
fdivrs
in
push
push
mov
mov
loopne
cs
stos
add
out
or
popf
push
cmp
lds
inc
insb
mov
pop
stos
jge
arpl
leave
inc
pushf
pop
lahf
push
addr16
pop
push
jbe
lret
sub
sub
xchg
xchg
imul
outsl
mov
int3
callw
es
sahf
lret
push
jae
push
pop
movsl
xchg
stos
jmp
push
sbb
mov
push
aam
ja
mov
mov
push
jl
sub
dec
adc
jle
stc
fdivrs
dec
xorl
mov
push
test
addr16
test
or
pop
lret
cmc
lahf
fnstenv
outsb
inc
call
cli
out
xchg
es
scas
sub
jae
cltd
aad
dec
sti
icebp
inc
imul
fcmovne
filds
mov
mov
scas
loop
shl
ljmp
cmp
ljmp
je
rol
pop
jo
int
sub
sub
mov
lods
scas
outsl
je
pop
mov
mov
push
and
adc
dec
adc
inc
popf
mov
inc
pusha
mov
jge
out
cmc
fcoms
fstpl
add
or
in
nop
cwtl
dec
dec
pop
mov
sub
out
ret
leave
int
sub
adcb
lret
decl
mov
lret
shl
je
and
pop
ret
jae
fwait
mov
frstor
fstps
cmpsl
xchg
or
jmp
cmp
adc
xchg
int3
dec
dec
popf
mov
adc
out
jno
dec
icebp
and
dec
xchg
jge
fwait
lret
and
add
dec
stos
and
jno
add
inc
fmull
jp
or
pop
pop
pop
popa
in
int
fstpl
scas
adc
insb
fcmovnu
jmp
inc
adc
fcmovu
stos
mov
insb
cli
imul
fstps
inc
ret
pop
dec
mov
mov
jle
stos
or
ret
cmp
loopne
shrb
enter
mov
scas
cmovge
jg
mov
out
adc
push
jo
mov
test
or
les
insb
inc
pop
xlat
mov
jl
sub
xchg
xchg
mov
je
dec
ja
add
iret
push
mov
jmp
dec
andl
ds
in
insb
mov
mov
iret
addr16
mov
adc
sahf
inc
rorl
push
movsb
sahf
xchg
imul
jmp
arpl
sarb
js
pop
and
repz
ret
movsb
fcoms
mov
add
mov
xchg
jae
dec
inc
jnp
jg
sbb
or
sub
cmp
rep
mov
imull
out
sub
call
sbb
jl
add
cmc
dec
mov
mov
xorl
rcrl
clc
testl
leave
dec
std
sub
aam
int3
stc
lods
inc
or
enter
xchg
or
out
and
scas
jne
mov
out
outsb
inc
dec
dec
fimuls
xchg
pop
jo
fmul
pop
xor
lahf
in
cmp
and
adc
int
or
cld
push
xchg
mov
push
mov
sub
or
mov
mov
test
jno
push
sub
pop
xchg
inc
ljmp
sbb
dec
mov
lods
stc
sbb
pop
mov
imul
or
icebp
mov
iret
xchg
xor
pop
push
cmp
enter
mov
cmp
xor
cmp
test
shr
pop
sub
jno
test
in
loope
test
mov
xchg
push
push
nop
stos
dec
daa
cld
xchg
fnstsw
pushf
xchg
fucomip
loop
jb
movsl
pop
imull
lret
aam
push
cmp
jle
shll
mov
cld
sti
pop
je
or
add
adc
mov
sbb
cmpsb
pop
movsb
add
or
shlb
rol
loopne
je
inc
mov
jnp
addr16
mov
push
push
cld
mov
cmp
dec
mov
mov
push
nop
std
mov
sub
sarb
pop
jg
push
mov
cld
cltd
outsb
adc
jl
mov
or
or
sbb
push
and
adc
pminsw
repz
rorl
lods
or
sbb
jno
in
or
test
sub
shlb
adc
imulb
mov
jnp
jmp
mov
inc
sbb
lds
mov
jns
xchg
mov
iret
push
fiadds
sbb
mov
rclb
ss
jmp
mov
fidivs
test
pushl
rcrl
pushf
in
data16
lds
pop
pop
imul
jl
cmp
cmp
mov
movsl
jge
dec
add
js
lahf
pusha
js
aaa
incl
lea
cmp
xlat
imul
or
inc
cmpsb
mov
add
inc
pop
dec
outsb
iret
push
cmp
pusha
push
mov
cld
add
out
je
dec
jne
repz
fdivr
in
bound
decl
movsl
dec
adc
cmp
sub
sti
dec
icebp
sub
sarb
mov
lret
jmp
in
mov
mov
call
testb
mov
pop
pop
testl
in
inc
adc
in
cmp
ja
aad
push
jb
in
push
ja
mov
push
movsb
aam
jmp
stc
mov
cmp
jmp
dec
adc
ret
mov
scas
fistl
ss
ret
dec
ret
jo
jnp
ja
sub
in
into
pop
in
lcall
sub
test
add
in
pop
inc
aam
popa
sub
insl
jo
ljmp
std
push
push
mov
and
adc
inc
mov
xorl
in
dec
mov
mov
cwtl
insb
jge
stos
das
xor
mov
adc
mov
sbb
inc
pop
test
call
ret
hlt
mov
push
fwait
mov
mov
out
xor
xchg
dec
orb
pop
xchg
push
imul
sub
jecxz
sbb
pop
jbe
jmp
push
adc
hlt
pop
pusha
mov
inc
inc
or
pop
adc
mov
mov
mov
ficoml
repz
les
pusha
das
pusha
insb
sub
fmul
mov
imul
stc
pusha
pushf
sahf
out
in
cmp
fcoms
popa
out
filds
adc
push
mov
sbb
xchg
pop
pushf
mull
nop
sub
adc
sarb
inc
idivl
rep
nop
push
push
out
lret
mov
push
mov
cmp
fs
cltd
out
daa
shlb
jno
sar
sub
jne
fbld
ficompl
xchg
loope
js
sbb
dec
nop
std
jmp
js
sub
xchg
std
and
and
mov
into
test
test
dec
imul
repnz
pop
xchg
or
testb
cmp
push
imull
addb
mov
push
shlb
leave
mov
lret
mov
ds
push
incl
push
mov
adc
lahf
fisttps
in
dec
mov
ja
aaa
mov
mov
jl
popf
ja
xor
in
dec
mov
cwtl
dec
fnstenv
mov
addb
mov
push
and
loope
and
int
mov
mov
ficomps
aas
mov
xchg
sub
sbb
xor
mov
aas
test
and
or
push
mov
push
outsb
sti
ja
mov
ret
popf
cmp
inc
in
add
inc
mov
and
stos
mov
add
rcrl
fdivl
imul
xor
xchg
ljmp
inc
jae
dec
mov
adc
cli
sub
xorb
fcmovnb
pushf
lret
daa
cmp
les
lods
nop
fwait
push
mov
popf
push
add
sbb
jae
pushf
insb
xchg
cmp
pop
xor
jne
aam
dec
test
cmpsb
sub
fstpl
cli
scas
outsl
gs
negl
mov
pop
fcom
cmp
jbe
test
stos
mov
in
and
pop
push
mov
adc
cmpsl
mov
iret
xchg
fiaddl
ds
jnp
and
movsl
push
cltd
std
in
fwait
mov
mov
in
mov
into
lret
push
mov
xchg
jg
loope
push
ss
out
add
xchg
repz
adc
sub
out
and
inc
cwtl
imul
movsl
jg
xchg
jae
mov
xchg
scas
insb
orl
scas
sub
int
jl
fistpl
xchg
insl
in
sub
lods
ljmp
lahf
xchg
ss
fiadds
sbb
es
stos
mov
xchg
cli
or
or
mov
mov
xor
aam
ss
pop
inc
xor
mov
jl
fldcw
pop
data16
xchg
mov
jge
mov
mov
dec
dec
ret
cmc
sbb
adcb
xor
shr
mov
je
sbb
sbb
and
decb
xchg
fcompl
pop
mov
fwait
sbb
mov
mov
mov
shlb
lret
mov
mov
adc
je
and
mov
daa
adc
fwait
jg
sub
and
testb
in
aad
hlt
mov
mov
popf
ja
je
and
rorb
je
or
inc
pop
or
jle
xchg
adc
incl
test
push
sbb
mov
pop
movsb
movsl
test
and
and
fidivrl
cmpsb
xor
scas
sbb
or
mov
nop
push
movsl
adc
lods
and
mov
in
pop
inc
cmp
pop
or
dec
rorl
jg
mov
mov
addb
mov
outsl
popf
aam
add
out
cmp
lret
mov
out
mov
dec
pusha
xchg
js
lcall
xor
test
sbb
rcl
fnstcw
xchg
aad
xchg
arpl
mov
mov
fs
jg
pop
lods
pop
jnp
repz
repnz
aad
jmp
aam
nop
movsb
mov
mov
lock
idivl
add
xchg
sub
xor
scas
jg
fsubrl
sub
jecxz
insb
xchg
in
and
aas
jl
lds
mov
or
dec
dec
negb
mov
sbb
pop
repz
iret
xchg
mov
mov
sub
mov
and
or
pop
xchg
xor
inc
push
pop
or
dec
add
dec
stc
aam
dec
mov
aad
shll
out
cmc
pop
xchg
sub
fmull
pop
dec
sbb
int
cmp
inc
push
in
adc
mov
outsb
and
test
xor
sbb
push
shrb
pop
js
and
hlt
aam
adc
mov
push
out
lcall
movsl
inc
sub
adc
pop
fs
fisttpl
mov
and
inc
fs
jno
cmp
repz
fmuls
or
inc
sti
or
cs
outsb
in
mov
jmp
mov
dec
jns
jbe
imul
in
fs
outsb
mov
in
cmp
ja
ja
add
sbb
adc
call
loope
cltd
in
mov
mov
xor
add
popa
insl
pusha
pop
data16
xor
test
sub
scas
in
xchg
jo
rol
add
jmp
lods
cmp
cmp
test
aas
dec
loopne
shrb
push
mov
lods
in
push
cld
mov
jmp
push
xor
in
inc
pop
jmp
inc
mov
loope
or
add
std
pop
cld
stc
dec
cltd
test
mov
adc
sub
jno
mov
aam
shll
sbb
sub
jns
sub
pop
mov
out
lods
movb
shlb
dec
cwtl
cs
aaa
out
adc
stos
cmp
push
imul
sbb
in
stos
popa
and
inc
scas
xor
or
mov
cmp
xor
ja
push
js
adc
rolb
lret
dec
mov
aam
data16
add
jmpw
lock
popf
pusha
das
add
imull
ret
into
lahf
int3
and
imul
or
jmp
xor
int
sbb
mov
test
mov
sbb
xchg
fwait
andb
sbb
dec
in
adc
mov
mov
push
add
jnp
pop
mov
adc
mov
loope
in
fwait
inc
call
ret
xor
stc
inc
sub
add
mov
stos
inc
es
mov
scas
jb
clc
rorb
mov
popf
rcll
or
inc
push
ja
or
jnp
fsubr
enter
mov
add
into
loopne
pop
xchg
idivb
adc
lret
pop
or
mov
jp
addr16
push
out
adc
ss
sub
nop
pop
jp
inc
pop
or
dec
jns
jmp
pop
out
sbb
cmp
push
in
jmp
or
ficompl
test
sar
es
out
mov
mov
push
outsl
test
cmp
movsb
arpl
and
xor
push
jle
push
mov
int3
int
push
pop
test
inc
popf
fnsetpm(287
sub
aas
mov
pop
and
test
je
enter
adc
in
xor
dec
test
ja
scas
adc
in
xchg
loope
cmpsb
outsb
pop
cmp
loope
lcall
sbbb
je
xor
sbb
mov
mov
aad
subl
xor
sti
lods
mov
lea
icebp
mov
popa
gs
mov
mov
stos
sti
andb
cmp
or
or
imulb
add
and
sbb
fs
leave
and
lock
mov
inc
popa
xor
dec
lret
out
rcrl
jecxz
rcl
cmpb
or
adc
mov
data16
repz
xor
sbb
cmp
shl
mov
fwait
arpl
xorb
lret
mov
cmp
cmp
mov
sbb
pop
out
scas
ja
cmp
enter
push
push
cmpsb
in
sahf
mov
pop
rcll
cmpsb
mov
mov
jp
pop
test
rorl
popf
jge
dec
mov
xchg
and
lods
movsl
pop
mov
xchg
push
or
xor
mov
and
data16
nop
xchg
andb
dec
pop
jl
fldenv
ret
lret
out
sahf
test
push
cmc
sti
mov
cmp
mov
sub
fwait
stc
mov
lea
jmp
xchg
add
jo
int3
popf
repz
loop
test
push
pushf
fisubl
flds
inc
in
test
mov
icebp
jl
lea
mov
lret
xchg
push
sub
mov
xchg
andl
ficompl
pop
xchg
jecxz
mov
xor
das
inc
jmp
arpl
and
push
dec
sub
cltd
or
int
and
mov
jge
mov
mov
inc
add
mov
daa
xor
ret
mov
cmpb
movaps
mov
movsl
jae
sub
rol
xchg
mov
mov
daa
adc
fsubl
mov
sub
cmp
roll
cmp
imul
loope
dec
ja
or
push
mov
aam
mov
xchg
cltd
adc
or
mov
test
out
jmp
pushf
xor
es
movsl
std
cmpsb
or
fs
testl
push
es
mov
mov
mov
mov
inc
mov
xchg
pop
addb
loop
mov
jmp
sbb
push
adc
pop
mov
xor
adc
loop
ror
lret
out
cmp
pop
mov
pusha
xchg
jb
dec
aad
jecxz
adc
lret
mov
inc
mov
dec
lret
rolb
imul
fldt
push
cmc
jns
lock
sbb
in
cmp
jne
add
xchg
push
fimuls
mov
test
ret
push
mov
pop
fistpll
into
jno
scas
mov
sbb
pop
pop
int3
jle
repnz
push
cmp
mov
rcrb
adc
aaa
cmp
aaa
pop
pushf
lea
out
mov
arpl
repz
inc
cmc
mov
xor
or
pop
les
or
cmp
push
jge
and
pop
mov
push
push
pusha
int
or
sahf
notl
dec
jns
pop
jge
xor
cmpsb
xchg
int
jo
mov
mov
xor
push
js
popa
mov
out
scas
cwtl
xchg
xchg
sub
mov
push
aas
push
movsl
or
sbb
inc
xchg
ss
sarl
add
sbb
cld
fwait
jg
mov
pushf
cli
add
pop
sbb
sarb
and
loopne
jne
or
mov
fnstenv
xor
cmp
fstps
mov
std
iret
daa
mov
aas
fildl
ret
cmpsb
outsb
out
arpl
test
adc
js
push
or
sbb
lods
in
cmp
sub
andb
mov
inc
and
push
dec
ljmp
popf
mov
loopne
inc
add
jno
adc
stc
mov
dec
repnz
dec
xchg
pop
jl
jbe
sahf
repnz
jo
add
dec
xor
lds
inc
mov
add
test
int
add
inc
cltd
insb
and
pop
mov
inc
cmp
add
sbb
jle
mov
sbbb
or
das
mov
fwait
shl
pushf
lret
jl
mov
nop
sar
mov
jae
pop
sti
mov
inc
popa
xlat
fldenv
jns
mov
imul
sarb
movsb
clc
dec
mov
test
mov
hlt
push
mov
jle
sti
out
into
cmc
in
jg,pt
sub
or
adc
jge
mov
out
stos
fstpt
fwait
out
xchg
or
data16
dec
sbb
pop
into
jecxz
fwait
inc
movsl
mov
mov
aas
inc
cmpsl
push
out
test
or
sub
add
lods
mov
rcll
xorb
lock
xor
fwait
jl
icebp
mov
mov
mov
jg
xor
out
hlt
mov
int3
das
leave
xchg
cmp
dec
cmc
imul
push
pop
jl
mov
out
xchg
sub
or
xchg
arpl
push
mov
int
or
in
fistpl
lret
shlb
fadds
push
stos
fwait
pop
cld
lods
mov
arpl
mov
sbb
aaa
dec
jno
xchg
jo
jl
dec
jmp
clc
inc
cmp
lods
or
outsl
mov
and
jmp
lret
in
dec
pop
lahf
xlat
repnz
mov
lret
add
cmpsb
jae
xor
dec
mov
lods
std
jbe
sti
dec
cmp
cmpsb
jle
inc
nop
lods
mov
insb
adc
data16
pop
push
mov
jmp
nop
call
sbb
cmp
call
icebp
loop
dec
sub
std
cmpsl
cmp
push
cmc
fcoml
add
add
scas
aam
push
fucomi
cmpsl
jb
add
sahf
mov
fstps
in
mov
add
pop
cwtl
fs
fmuls
sub
push
popf
adc
lahf
ja
lock
repz
pop
push
jl
icebp
cmpsl
inc
adc
inc
pop
iret
mov
aad
push
cwtl
mov
jp
xor
xchg
loope
or
rcrl
or
outsb
inc
mov
jb
lock
lods
xor
mov
dec
dec
in
into
mov
icebp
hlt
outsb
mov
inc
stc
mov
jg
xchg
mov
pushf
fs
sbb
mov
lahf
aas
adc
frstor
out
dec
int3
pop
jnp
push
sub
int
jno
dec
pushf
jg
jns
push
shl
lahf
inc
push
and
lock
mov
cltd
add
sub
adc
sti
jg
insl
nop
mov
and
xchg
imul
xor
scas
mov
cmp
repz
xor
outsl
mov
insb
shlb
mov
mov
push
mov
into
add
and
cmc
mov
imul
sub
sarl
in
dec
stc
imull
jle
shrb
inc
dec
mov
sbb
lret
int3
push
push
and
lahf
scas
gs
inc
sub
test
insb
icebp
movsb
add
and
fidivl
cmp
lcall
or
jnp
stos
push
sub
rcrl
into
or
mov
scas
sbb
pop
cmp
push
imul
orl
insl
sub
fwait
push
mov
shrb
dec
enter
test
das
sbb
mov
adc
or
fwait
push
scas
lret
aad
mov
out
or
cmp
stos
cltd
lods
or
push
into
cs
es
inc
push
add
jge
in
cmp
or
jp
jl
add
pushf
stos
push
cmc
mov
fists
into
in
sbb
dec
pop
or
cltd
gs
mov
leave
mov
stos
out
inc
xor
scas
mov
and
cld
mov
es
enter
add
std
inc
mov
adc
or
mov
test
pop
inc
andl
daa
fs
fmul
orl
lods
rclb
push
mov
adc
jge
adc
pop
mov
lahf
mov
cmp
std
mov
mov
mov
dec
inc
cmp
sahf
pop
add
out
sti
and
pop
aas
imul
cs
mov
orl
jmp
push
push
lcall
notb
je
inc
xor
mov
mov
pop
xchg
and
push
into
test
cmp
mov
cli
push
out
xor
cli
and
jno,pn
add
and
enter
dec
nop
dec
jecxz
jnp
or
or
jl
adc
fisubrs
cmp
lods
call
lods
push
push
das
and
ret
shlb
mov
shlb
scas
es
jmp
inc
lcall
xorl
movsb
xchg
fstpt
dec
push
adc
mov
je
pop
into
scas
sub
adc
sub
cld
popf
scas
rcrb
loope
pop
ss
jle
mov
or
fstpt
mov
cltd
pop
push
mov
fs
scas
out
mov
jle
insb
jl
mov
xchg
inc
sbb
or
cmc
cmpsl
lahf
adc
ljmp
or
lret
mov
addr16
jp
mov
mov
fidivl
mov
add
or
push
inc
loope
mov
movsb
or
sub
sub
popf
jmp
jg
int
lret
jp
imul
cmc
das
mov
or
xchg
jbe,pt
test
push
and
pop
int
and
out
inc
pop
adc
sar
aam
call
hlt
or
jb
or
sbb
mov
out
es
ret
cmpsb
pop
in
mov
aaa
jmp
dec
mov
lret
pop
inc
in
fistpl
mov
daa
push
les
mov
arpl
popf
mov
sbb
mov
leave
iret
add
pop
mov
fisttps
cld
popf
sbb
imul
movsl
rcrb
nop
adc
jbe
or
pusha
sub
aad
cmc
insb
lahf
jae
sti
sub
or
cld
sbb
add
mov
cmc
fnsave
xchg
addl
push
daa
xor
ds
or
mov
data16
in
out
sbb
add
enter
or
push
cmp
dec
sbb
add
xor
jae
pop
and
loope
adc
mov
sbb
in
fwait
mov
cs
fdivs
cs
dec
pop
push
mov
in
mov
fs
mov
inc
mov
pop
icebp
push
cli
ret
sub
xchg
lret
jnp
mov
aas
decl
push
outsl
jle
xchg
lea
pop
dec
int3
mov
icebp
and
std
ss
inc
fbld
iret
push
cmp
xchg
cs
jp
inc
clc
ret
jecxz
enter
fcmovbe
sbb
aas
cld
mov
dec
mov
fwait
aad
jl
jno
and
pop
test
cmpsb
ror
or
inc
mov
notb
jge
and
push
xchg
roll
mov
and
or
jns
mov
cmp
mov
int3
lock
push
cmp
into
mov
lods
lock
arpl
mov
jne
mov
test
shlb
jb
mov
push
arpl
popa
xchg
das
mov
xchg
repz
xchg
mov
shll
and
sahf
push
inc
daa
loope
shrb
xlat
test
test
and
stos
outsl
cmp
push
adc
xchg
pop
cmp
cltd
into
in
mov
out
outsl
inc
mov
mov
orb
sbb
loope
add
inc
cltd
xorl
jle
mov
pop
sbb
push
decl
jae
dec
iret
mov
push
lods
jo
dec
test
daa
cmc
jo
enter
icebp
movsl
arpl
movsl
data16
sti
and
out
push
aaa
xor
sub
push
mov
and
nop
les
dec
movsb
mov
jo
mov
mov
js
sbb
xchg
pop
jno
call
xchg
dec
jb
ljmp
or
sbb
cmp
pusha
les
xchg
cmc
scas
add
pop
ja
sbb
in
sub
inc
and
inc
xor
mov
fsts
in
inc
insb
ficomps
jmp
icebp
jg
gs
lret
fcomi
pop
imull
imul
into
or
nop
sti
int3
push
data16
dec
arpl
and
movsb
call
and
in
dec
mov
jg
aaa
mov
mov
int
imul
jne
call
mov
das
lods
iret
dec
aad
scas
pop
dec
mov
mov
fstpl
xor
ja
cmp
mov
sbb
push
adcl
mov
pop
arpl
in
mov
xor
imul
aad
dec
lock
adc
cltd
inc
mov
into
repz
fimuls
mov
cmp
xchg
dec
dec
push
push
mov
sbb
arpl
js
adc
sti
mov
iret
mov
fimull
jne
fcomp
aam
adc
stos
adc
add
test
push
pop
outsb
or
mov
lret
dec
xchg
push
ret
imul
lret
inc
jnp
push
xchg
sbb
popf
pop
mov
das
sbb
sub
pop
int
mov
lods
sub
and
jo
rcr
mov
inc
lock
push
xlat
je
call
sub
std
repz
push
inc
sbb
sarl
pop
filds
fisttps
stos
mov
insl
in
cmpb
pop
repnz
pusha
movsb
fcoms
xlat
xor
mov
jo
sub
lahf
fdivs
sub
cwtl
ret
xor
adc
imul
add
sub
stc
mov
mov
adc
rcr
fidivs
sub
fists
ret
push
test
xchg
out
push
into
ljmp
enter
or
mov
into
jg
outsb
cmpsb
repnz
test
shrb
insb
into
mov
dec
pusha
jno
repz
push
sub
mov
push
in
jle
xchg
mov
sub
xor
mov
es
divb
movsl
jle
jmp
dec
add
sbbb
shll
mov
shrl
cmp
mov
test
inc
and
xchg
int
pop
pop
sar
test
lcall
jno
mov
repnz
rolb
jo
dec
pop
or
rolb
cld
pop
adc
cltd
dec
mov
outsl
xchg
adcl
mov
cmp
clc
jecxz
fwait
dec
outsb
xchg
ss
loopne
xorb
std
cmp
sub
test
mov
pop
sbb
jg
and
sbb
pop
pop
mov
pusha
aad
rorl
lods
inc
repnz
push
fs
mov
fsubrp
std
inc
clc
scas
mov
mov
and
jb
sbb
xor
ja
push
mov
sbbb
mov
into
and
xchg
dec
and
xor
mov
fwait
arpl
mov
or
test
and
mov
push
in
pusha
outsl
push
movsb
xchg
and
popa
inc
imul
mov
outsl
clc
fcoml
and
mov
out
std
adc
add
and
mov
out
cmpsb
xchg
sahf
imul
adc
cwtl
jl
push
push
sti
test
iret
sub
popa
adc
pop
mov
mov
pop
mov
push
fisttps
or
out
push
nop
sub
bound
jmp
sub
in
or
les
cmp
mov
mov
mov
xor
das
mov
or
push
inc
add
imul
xchg
push
push
or
sub
cld
pop
jle
pop
jnp
xchg
pusha
lret
in
mov
inc
jg
out
jl
ret
cmpsb
xchg
push
xor
jg
adc
aad
aas
fimuls
bound
mov
xor
into
jb
or
fdivrl
adc
pop
mov
sbb
sub
adc
mov
inc
orb
int
xchg
mov
fwait
iret
arpl
arpl
out
or
mov
xor
jns
scas
dec
dec
loop
xchg
sub
pop
jg
or
jecxz
rcll
shll
lcall
mov
sti
in
jl
pop
out
shr
jmp
out
mov
mov
js
add
push
cmp
es
dec
cld
movsb
jno
xor
jg
orb
dec
scas
pop
cwtl
lret
or
jb
cmpsl
loopne
mov
jmp
mov
jno
add
mov
fidivs
fists
jns
outsl
rorl
inc
push
fidivl
aam
js
sbb
into
push
mov
call
lret
imul
dec
sub
pushf
cli
xchg
loop
in
es
jb
add
and
popf
cmp
xchg
scas
sbb
cmp
add
popa
stc
add
rclb
loope
push
mov
aam
mov
pushf
cmpsb
xchg
push
cmp
out
shl
xchg
outsb
inc
icebp
mov
dec
enter
nop
call
andl
jecxz
add
fldt
and
sub
in
or
mov
test
les
pop
mov
jb
mov
mov
addr16
push
xchg
inc
movsb
pop
adc
jno
xor
add
repz
ficomps
testl
ljmp
sub
mov
pop
int
in
mov
inc
subl
and
push
lcall
test
adc
xchg
fdivrs
mov
jbe
cltd
dec
jl
or
lahf
mov
pop
out
mov
lahf
inc
mov
pusha
stos
stos
mov
pushf
sub
loopne
in
xor
lret
hlt
push
ja
cltd
flds
pop
push
xchg
nop
inc
mov
fistpl
ljmp
mov
fwait
and
std
jns
jbe
push
loope
mov
insl
incb
loopne
jle
fists
insb
xchg
clc
mov
and
in
out
repz
push
push
push
jg
jno
cltd
das
pop
pop
mov
adc
jl
xor
je
add
and
push
jo
jae
add
cmp
not
pop
push
jmp
pop
jmp
orb
sbb
js
es
sbb
int3
movsb
test
popf
pop
ljmp
fcompl
in
sbb
pop
data16
movsl
jae
icebp
mov
enter
popf
mov
fisttpll
xchg
lock
lcall
inc
add
sbb
outsb
mov
arpl
cmp
test
fidivrl
mov
lret
fcmovnbe
sbb
loope
shlb
lock
shrl
inc
pusha
sti
lods
sub
aam
push
push
fbstp
xchg
xchg
test
fsubrl
lock
jne
pop
mov
xor
out
out
cwtl
negb
mov
pushf
and
adc
iret
scas
sbb
mov
vminsd
dec
outsl
adc
jne
mov
or
dec
dec
pop
pop
xor
sub
push
mov
icebp
cmpsb
mov
jb
sub
shlb
mov
shrb
jl
cmp
mov
jmp
jno
sub
pop
adc
dec
adc
pop
test
je
test
cld
into
cmc
sbb
jl
dec
sti
outsb
jae
cli
mov
mov
xadd
iret
dec
push
push
dec
mov
fwait
clc
dec
fnsave
stos
and
dec
push
dec
mov
push
mov
lret
cmp
mov
inc
add
fs
push
jmp
mov
in
sub
mov
inc
fidivl
pop
call
cmp
mov
pop
dec
iret
cmp
cmp
inc
int
adc
int3
push
adc
add
mov
cmp
push
nop
in
sub
dec
sbb
shlb
pop
pop
pop
xor
jmp
std
int
aas
daa
push
dec
call
scas
imul
sahf
fisttps
paddsb
fcmove
jb
in
push
insb
shlb
mov
roll
and
or
and
pop
mov
pop
fwait
loope
inc
outsb
arpl
imul
aam
push
ret
sbb
shrl
mov
pusha
fistpl
push
pop
lods
gs
stc
mov
int
fs
pop
inc
jbe
out
arpl
cmc
stc
or
push
ret
cmp
cmp
in
sbb
jo
cmp
lret
jmp
decl
sar
sub
cltd
adc
inc
sbb
pop
jecxz
push
out
xchg
adc
cmpb
mov
fucomip
test
push
dec
pop
jbe
xor
jb
in
aam
int3
mov
push
aas
and
mov
jo
ds
add
jmp
pop
lods
dec
sbb
out
fwait
ss
mov
jp
fwait
icebp
xchg
push
aam
dec
push
shrl
clc
jo
sub
loop
out
push
pop
sbbl
mov
int
cmc
bswap
mov
mov
jle
add
in
out
adc
lahf
mov
dec
dec
adc
arpl
addr16
pop
aam
loope
mov
jnp
jmp
mov
rolb
mov
sbb
pop
iret
insl
and
xor
imul
xor
dec
push
dec
pop
js
pop
bound
jnp
mov
and
push
lods
inc
cmp
adc
pushf
push
lahf
sbb
clc
cmp
std
or
xchg
loopne
shld
or
scas
test
std
out
sbb
or
ss
fwait
testl
es
mov
cmpsl
in
fwait
aad
push
pop
push
stc
pop
adc
and
mov
scas
or
clc
dec
and
sti
jl
adc
test
adc
jnp
xor
push
mov
push
icebp
push
repnz
mov
jo
push
loopne
insl
push
jl
shll
sbb
test
push
insl
mov
pop
inc
out
mov
cld
lcall
ja
push
adc
scas
pop
addr16
and
pop
or
push
xor
dec
dec
mov
lock
sti
mov
jb
adc
data16
xchg
sarl
fdivrl
add
insb
lcall
and
in
ss
imul
imull
or
pop
xchg
cltd
sbb
iret
add
push
cs
call
mov
adc
and
lret
mov
mov
dec
mov
loopne
or
std
mov
add
dec
inc
jnp
mov
push
sub
push
adc
mov
sub
mov
loopne
nop
pop
push
aas
addps
dec
movsb
inc
xor
jle
cs
in
push
out
in
jg
cmp
js
ret
mov
jmp
push
adc
scas
inc
mov
cld
mov
add
pusha
sahf
push
cmp
cmc
pop
js
sub
cwtl
es
xchg
mov
ja
jmp
jg
sub
pop
or
nop
lds
jmp
insb
add
push
jl
jg
cmp
fdivrs
ja
in
decl
sbb
add
scas
inc
sub
mov
jno
int
pop
jl
xor
xchg
stos
adc
mov
into
mov
sbbl
es
pop
aad
jl
mov
clc
adc
jg
fldt
cmp
das
pop
inc
push
xor
ljmp
rcl
sti
stos
shll
stc
icebp
int3
loop
imul
test
push
adc
inc
or
sbb
add
pop
jnp
and
das
ds
mov
cmp
sbb
scas
sbb
and
orl
leave
arpl
ja
adc
jbe
js
decb
dec
mov
jge
dec
push
test
lock
mov
ja
int3
xor
leave
stc
mov
int3
int3
fstps
fbld
dec
xchg
mov
cld
and
movsb
popa
pop
das
mov
std
cmp
dec
inc
jg
fidivrl
hlt
mov
push
dec
ret
mov
dec
jno
movsb
xor
cmp
cmpsl
repz
cmp
popf
shll
dec
pop
es
lahf
sbb
mov
dec
mov
into
jnp
fdiv
ss
call
jg
mov
jns
fs
into
out
xor
fwait
sub
xor
adc
or
xor
add
push
inc
outsb
mov
stc
data16
ret
mov
aam
lods
sub
mov
jle
pop
mov
je
fmull
xchg
push
mov
mov
shrb
incb
mov
outsb
rcr
dec
dec
lret
xor
mov
pusha
xchg
sahf
subb
jne
fsub
add
add
and
out
jmp
daa
push
aad
jg
add
movsb
imul
add
sub
dec
push
xchg
push
aaa
call
sub
shrl
jbe
ficomps
add
dec
inc
and
cltd
es
mov
and
jb
mov
sysret
mov
mov
jne
in
adc
into
cmpsl
xor
jg
sbb
mov
pop
mov
mov
rol
sub
repz
dec
jae
sub
add
fdivrp
push
jl
mov
push
mov
movsl
mov
mov
inc
negl
xor
pushf
sbb
or
out
dec
xor
ljmp
cmp
mov
loopne
inc
daa
pop
mov
xor
test
fdivs
jbe
loope
into
and
mov
or
and
in
cmp
add
js
rorb
scas
lea
mov
adc
fsubrs
dec
imul
in
imul
test
imul
mov
test
and
pushf
jae
and
sub
jne
sub
adc
mov
pop
mov
xor
push
mov
enter
xor
jecxz
inc
push
jl
jne
shl
fmull
lods
xchg
fisubrs
outsb
repz
mov
dec
sbb
xor
scas
mov
out
jle
or
shlb
push
dec
add
sbb
dec
lret
inc
dec
adc
js
dec
mov
mov
cld
ret
cmp
mov
frstor
xchg
lods
mov
fdivrs
push
mov
mov
les
xor
jp
xlat
dec
inc
adc
sbb
pusha
cmp
pop
fcmove
mov
mov
xchg
iret
aam
xor
daa
mov
ror
int3
movsl
pushf
js
pop
std
inc
mov
jno
mov
mov
out
xchg
movsb
stos
rcll
and
xor
sti
fdivl
rolb
inc
repnz
icebp
push
sbb
mov
subb
addr16
imul
push
push
adc
inc
fsubrl
insb
mov
cmpsb
xchg
in
insb
jle
aam
ret
out
shl
cmpsb
mov
movsb
fidivrs
and
sahf
add
inc
push
and
xor
pop
es
ret
sub
mov
lret
jl
cmp
xor
aam
mov
add
repz
icebp
xor
js
sub
xorl
pop
repnz
cwtl
adc
jnp
adc
or
mov
ss
and
repz
cmp
imul
sbb
mov
fistps
cmp
idivb
inc
add
pop
lcall
xor
jns
inc
push
mov
sti
std
push
sbb
push
outsb
dec
std
ret
stos
pop
mov
cmpsb
mov
fisttpll
cmp
or
fbld
xor
out
mov
cmp
inc
mov
pop
orb
shlb
in
leave
inc
in
mov
pop
lods
outsl
aaa
pop
jo
lret
dec
in
mov
cmpb
mov
cmp
mov
push
movsb
mov
pushf
xlat
int
lods
dec
adc
loope
ss
test
jae
cmpxchg
popa
subb
js
mov
sbb
out
inc
out
fstpt
jmp
pop
or
adc
stos
pusha
push
jge
inc
in
adc
inc
movsb
stos
dec
fdivp
xchg
sub
hlt
jmp
and
mov
inc
mov
stos
das
adc
add
mov
scas
stc
inc
fisttpll
push
push
adc
testb
hlt
mov
pushf
mov
and
mov
jp
sub
pop
ja
lds
mov
mov
inc
pop
pusha
mov
insl
adc
and
loop
in
leave
ret
add
pop
mov
pop
enter
push
or
test
hlt
adc
cmp
lea
arpl
push
cmp
loop
inc
adc
push
sub
call
dec
out
addr16
xor
cmp
xchg
fcmovbe
arpl
jns
cwtl
popf
addr16
mov
sti
cmp
or
cmc
push
jle
cltd
jno
dec
cwtl
mov
inc
and
xlat
sbb
outsb
xchg
es
lds
cmp
pop
rol
data16
jmp
sub
jmp
jbe
jg
jmp
inc
pop
imul
push
icebp
mov
push
lret
mov
pop
mov
sub
iret
mov
loopne
data16
xchg
xlat
add
inc
rcrl
stc
push
jo
mov
mov
js
mov
cli
push
or
cmc
icebp
shlb
jmp
movsb
in
jle
mov
add
jl
push
imull
vmwrite
pop
add
xchg
arpl
xchg
mov
les
iret
or
into
mov
cwtl
sbb
push
out
loopne
lds
adc
push
rclb
push
add
and
cltd
shll
add
dec
stc
inc
test
jmp
insl
jp
in
ret
push
fwait
mov
jmp
lea
ret
xchg
cltd
test
popf
dec
iret
mov
cmpsl
scas
es
dec
in
mov
cmp
inc
inc
xor
pushf
add
xlat
or
std
arpl
mov
mov
das
xor
mov
loope
icebp
fimull
jno
or
repz
or
mov
imul
pop
neg
ss
pop
add
loope
mov
sbb
jp
pusha
sbb
shlb
add
jp
jl
adc
xchg
push
loopne
pusha
fmulp
and
xor
dec
lahf
mov
mov
mov
fldcw
mov
mov
hlt
out
jl
imul
rclb
push
mov
stc
movsb
sub
jl
iret
jecxz
in
push
mov
cmc
adc
lret
or
push
cmc
sbb
dec
mov
loope
dec
cmp
and
jnp
pop
push
in
dec
sub
jno
popa
or
xor
cmc
or
fcmovb
mov
loope
push
xorl
enter
insb
rolb
lret
cmc
jg
je
and
dec
mov
add
sbb
test
jb
ret
ja
sub
pop
adcb
ja
add
jg
sbb
pop
push
xor
clc
mov
mov
adc
jge
pop
push
outsb
in
push
dec
mov
and
or
add
mov
cltd
jmp
mov
mov
sub
pop
int
loop
mov
fs
into
test
je
push
push
mov
cmp
cmpsb
imul
mov
stos
sti
mov
sti
push
fisttpl
rcl
or
mov
dec
mov
sbb
add
push
dec
pop
add
jle
pop
cmp
push
mov
mov
jl
sbb
mov
jo
cmpsl
cli
int
or
icebp
adc
mov
adc
lock
mov
mov
or
jp
xchg
mov
mov
movlps
xor
lret
jmp
mov
push
mov
popf
loope
es
ret
add
test
testb
sbb
gs
mov
and
add
sbb
or
mov
stos
sub
lahf
std
xor
xor
fiaddl
jnp
jl
dec
daa
clc
jecxz
jb
mov
movsb
daa
es
jmp
movsb
jmp
jnp
xlat
push
inc
lret
push
xchg
das
cs
pop
mov
pop
adc
das
fcompl
lods
cmp
and
adc
jae
lret
jg
cmp
xor
jl
sti
dec
jbe
imul
addr16
arpl
fdiv
pop
add
sbb
mov
mov
out
push
and
in
or
inc
mov
cs
cmc
std
repnz
ror
rol
repnz
mov
adc
lret
sbbb
popa
movsb
and
movsb
je
out
shll
dec
mov
shrb
push
sbb
jae
imul
sti
mov
pop
aam
orl
mov
pop
push
int3
sbb
imul
pop
sub
pushf
int3
icebp
fstpt
inc
cmp
mov
fcompl
sbb
push
xor
pop
jmp
or
out
fcom
xchg
insl
add
pushl
push
shl
rcl
add
popf
jne
or
add
nop
out
mov
push
popl
adc
sub
sti
stc
push
pop
pop
push
mov
dec
push
in
mov
lods
jae
mov
lahf
pop
outsl
mov
mov
and
out
popw
push
cmp
cmp
cmpsb
hlt
into
mov
lock
mov
pusha
mov
adc
push
jle
dec
enter
xchg
mov
nop
fdivs
xchg
sbb
jle
sub
add
inc
in
mov
mov
mov
mov
std
dec
mov
inc
in
add
inc
dec
cmp
inc
jno
inc
test
push
sub
out
add
push
inc
or
not
cmp
dec
mov
xchg
mov
orb
aam
icebp
adc
aad
mov
stc
daa
cmc
jg
ljmp
inc
cltd
idiv
cli
sub
in
movsl
aam
mov
sti
pop
push
mov
les
pushf
sub
fldcw
push
or
dec
inc
mov
dec
mov
xor
sbbb
lret
pushf
push
in
jbe
fmull
rolb
and
inc
inc
push
mov
jbe
add
outsb
dec
ljmp
mov
flds
int3
cmp
out
es
inc
sbb
imul
inc
es
jl
xchg
iret
scas
in
or
movd
js
mov
dec
ja
repz
popa
or
not
arpl
cmp
sub
pop
xlat
loopne
push
ret
movsb
jmp
push
mov
ror
rcll
dec
push
sub
and
jno
pop
out
lods
test
pop
lods
mov
loop
mov
iret
push
lret
mov
js
fs
pop
add
or
outsb
jg
test
sub
fimull
lea
adc
xlat
sbbb
cmp
ror
int3
out
and
in
clc
mov
cmp
jl
fcmovnbe
ds
fbstp
cmp
mov
xchg
jae
outsl
roll
inc
les
cli
fs
dec
popa
sub
push
pushf
insb
insb
xlat
dec
push
lods
cmpb
jmp
cmp
ljmp
int
mov
cmp
dec
mov
stos
jge
jmp
inc
faddl
ja
sbb
ret
fwait
cltd
decl
loopne
cmp
movsb
imul
cmp
out
pop
cmc
pmaddwd
jmp
in
cmp
push
add
loope
aaa
pop
mov
insb
orl
iret
mov
cmp
stc
and
or
rorb
flds
test
mov
stos
push
push
mov
mov
out
adc
in
scas
xchg
or
mov
mov
or
idivl
dec
cld
cmp
pop
insb
pop
jl
js
out
pop
xlat
hlt
jae
push
xchg
ds
es
mov
pop
sub
dec
inc
xchg
sub
loopne
out
xor
je
pop
mov
mov
dec
imull
pop
outsb
es
fdivl
out
sub
mov
xlat
fldl
addl
push
pusha
mov
jmp
mov
pop
mov
dec
je
rcll
push
testl
adc
test
scas
or
push
int3
jle
push
loopne
outsb
jnp
mov
jb
mov
mov
test
bnd
sub
push
mov
mov
push
lcall
lods
test
inc
sarb
cmp
ds
ret
sub
mov
adc
out
adc
mov
and
mov
sarb
dec
or
je
inc
out
pop
mov
adc
push
inc
mov
mov
cwtl
popf
dec
and
test
out
imul
daa
xchg
lock
pusha
mov
je
outsb
mov
fwait
mov
outsb
stos
fcmovu
ds
xor
mov
cwtl
jo
jbe
mov
inc
mov
jae
adc
mov
adc
cmp
bound
scas
dec
movsb
popa
aam
mov
add
loope
xchg
sahf
out
out
fiaddl
or
mov
and
loope
jmp
add
push
lods
xchg
inc
inc
sarb
add
loop
imul
andl
cmp
stos
xlat
cmp
adc
jg
fmull
dec
and
mov
cli
insl
dec
pusha
xchg
shlb
mov
pop
or
mov
push
cmpsb
pushl
outsb
loope
pop
mov
in
push
push
arpl
sub
inc
or
aaa
or
sub
jo
mov
dec
push
in
fwait
es
sbb
xchg
ret
inc
jmp
insl
imul
jecxz
movsb
aam
pop
lret
inc
and
test
std
xor
or
xchg
add
mov
adc
psllw
ss
test
inc
int3
cmp
jnp
sub
outsb
stos
jp
movsb
imul
sub
fwait
pop
imul
fidivrs
jbe
sahf
movsl
push
cmp
dec
sub
dec
adc
in
jl
jno
inc
test
and
cmc
jecxz
or
out
push
xchg
lcall
jg
sub
mov
cmp
jg
out
std
sub
repz
repnz
jnp
xchg
insb
iret
outsb
es
mov
lahf
or
cltd
fwait
push
mov
int3
dec
and
lret
dec
fisubrs
mov
xor
add
cmp
jns
in
out
movsb
push
add
mov
push
pop
push
pop
outsl
shll
sbb
mov
daa
push
mov
or
dec
sbb
stos
divl
ret
std
loopne
add
shrl
adc
cmpsl
and
clc
outsb
aaa
lods
adc
sub
pop
push
and
add
mov
inc
inc
lods
aas
adc
mov
mov
fisubl
lahf
dec
cmc
jae
pop
cltd
int
cli
les
or
sbb
jmp
sbb
push
ja
add
pop
mov
in
fcmovne
sbb
mov
jbe
sub
mov
nop
cld
sbb
test
testb
loopne
push
lret
out
fsubl
icebp
xor
sub
sbb
shrb
cmp
dec
insl
xchg
les
inc
mov
jns
mov
out
mov
adc
fs
jg
mov
mov
aam
mov
int
sub
sarl
fdiv
das
and
iret
sub
xchg
addb
mov
lcall
and
cli
addb
fs
add
push
add
aas
adc
mov
mov
aad
and
add
out
sbb
jg
andb
jnp
jns
aam
sub
mov
es
pop
sbb
mov
je
pusha
cmc
mov
lcall
jae
xor
fwait
xlat
cmp
pop
mov
sbb
push
add
inc
test
sub
movsb
jbe
adc
jge
and
xchg
popf
push
jp
jno
cmp
push
in
stos
clc
mov
pop
push
imul
push
leave
in
int
jl
fimuls
addr16
xor
xlat
std
shlb
lahf
cmpsb
pop
sbbb
arpl
out
scas
mov
push
pop
xchg
repz
xlat
and
out
pop
addb
push
mov
repz
jns
xchg
sbb
sbb
or
daa
out
fcmovb
mov
mov
outsl
dec
sti
mov
and
icebp
jmp
sbb
imul
in
mov
cmp
imul
adc
fstps
movsl
mov
or
jl
xor
sti
inc
cmp
sbb
sbb
pop
push
jb
inc
out
jno
sbb
push
mov
es
daa
jle
imul
mov
inc
fidivrs
inc
xor
pop
fwait
mov
dec
enter
mov
cmp
pop
stos
add
sub
iret
inc
inc
dec
sbb
pop
jl
inc
jae
sbb
lcall
xor
scas
stos
sbb
lret
jg
aas
and
cmp
sub
push
ja
and
popf
shrb
test
adc
faddp
insl
push
cs
jg
mov
mov
mov
ljmp
pusha
out
loopne
inc
inc
stc
inc
adc
sbb
add
pop
or
pop
jo
pop
fnstcw
mov
ret
cmpsb
daa
sbbb
push
add
loope
or
mov
dec
arpl
repz
push
inc
inc
fmull
push
inc
push
dec
icebp
arpl
in
lock
loope
sub
lea
iret
inc
pop
jge
fs
scas
lock
pop
inc
push
and
adc
lret
jb
fcoml
pop
push
je
dec
inc
mov
pushf
or
or
xchg
ret
push
nop
pop
jb
push
mov
sahf
jmp
mov
jmp
or
inc
mov
into
pop
cltd
xchg
add
lahf
jns
scas
mov
fdivrp
ss
push
cltd
push
bswap
adc
test
mov
xchg
out
rorl
jae
cmp
insl
icebp
jl
jmp
ds
fwait
inc
cmp
outsb
add
cmpsb
xorb
xchg
fdivs
lret
fidivrl
or
fwait
mov
jg
xor
aas
loope
lret
adc
dec
aas
and
xchg
mov
pusha
mov
or
cmp
in
sbb
cmpsl
adc
pop
jmp
or
les
jae
pop
jnp
fcoml
in
dec
jnp
push
test
fsubs
popa
push
and
pushf
jns
into
or
or
mov
movsl
ret
pop
xchg
mov
ja
sti
icebp
sbb
sub
scas
cmp
mov
dec
jmp
mov
ficoms
sti
push
push
popf
mov
pop
daa
pop
test
inc
lods
dec
roll
push
mov
sbb
xor
xchg
sbb
xor
dec
mov
adc
or
das
inc
daa
movsl
fs
mov
dec
js
jl
dec
loope
pop
data16
fcompl
and
aaa
push
mov
jno
std
mov
push
fmuls
sub
pop
aad
cmp
jl
aaa
lret
cltd
and
jl
arpl
mov
bound
inc
jo
loope
inc
lcall
outsl
dec
out
sbb
int3
arpl
decb
mov
sbb
cmp
pop
notl
cmpsb
adc
repz
dec
lods
repnz
push
dec
clc
sub
inc
lret
rcll
mov
test
stc
dec
dec
and
frstor
xchg
sbb
xor
mov
scas
out
addr16
dec
sub
and
into
stos
sti
mov
pop
imul
inc
push
mov
inc
inc
fnstcw
mov
pop
adc
cmp
in
mov
stc
adc
mov
mov
inc
mov
xchg
add
push
cmc
mov
pop
sarb
cmp
lahf
or
adc
mov
push
cmp
adc
in
push
test
xor
dec
inc
mov
adcl
xchg
pusha
fdiv
hlt
cmc
cmp
mov
repnz
mov
out
mov
not
fcomi
mov
mov
fcomip
ljmp
cmp
cmp
cwtl
mov
adc
xchg
testl
push
stos
mov
push
std
push
ljmp
sbb
mov
int3
xor
xor
mov
pop
dec
fmuls
movsl
repz
pushf
repz
addr16
mov
push
adc
pop
faddp
inc
sub
stc
test
pop
dec
mov
cmp
subb
inc
mov
ret
mov
fs
dec
orl
or
and
fmull
jns,pn
stc
or
lea
pop
je
jg
xchg
rclb
dec
das
call
xorl
add
pop
shlb
push
mov
jl
mov
test
mov
or
dec
fcomi
cmc
jns
mov
popf
add
push
inc
push
jne
inc
xor
sub
stos
jmp
or
loopne
mov
stos
ret
out
pop
dec
mov
stc
out
ror
nop
out
clc
std
pop
add
outsl
cmp
je
dec
clc
ss
call
fcomp
jl
daa
add
ds
add
loope
mov
mov
ljmp
inc
push
test
cmpb
mov
mov
sub
xorl
mov
push
das
movsb
ret
mov
mov
add
leave
cmp
push
cmp
mov
cld
ljmp
repz
mov
pop
jl
sbb
jmp
push
xlat
and
js
add
adc
adc
cmp
out
dec
out
push
cmp
aam
test
jnp
out
jle
or
out
jns
orb
pop
ss
or
pop
xchg
pop
cs
icebp
in
mov
ljmp
loopne
mov
out
lahf
test
push
mov
cmp
jno
lret
pop
in
xor
mov
pop
push
out
gs
adcl
dec
in
or
cmc
scas
jo
fdivp
arpl
loop
inc
int3
loopne
jge
das
inc
fcomps
ljmp
lret
and
dec
lcall
adc
add
ret
faddl
stos
imul
inc
inc
cld
adc
sbb
jbe
inc
std
push
jmp
es
add
cmc
cmpsl
stc
imul
popa
or
je
jns
rcll
xor
les
lods
movsl
ja
fcmovu
jg
fimuls
add
lcall
mov
sbb
movd
jg
rorb
fsub
sti
fdiv
enter
stos
subl
adc
xor
push
xlat
pop
push
mov
mov
dec
arpl
clc
mov
mov
fldcw
movsb
je
jg
imul
shll
add
into
mull
dec
adc
mov
jmp
mov
mov
mov
in
int3
or
mov
jnp
mov
sti
das
fisttpl
inc
lods
lret
push
mov
sbb
cmp
stos
repnz
out
jge
test
repnz
pop
mov
out
lods
movsl
imul
dec
addb
pop
test
mov
sbbl
sub
loopne
pusha
add
or
pop
sbb
das
push
add
lods
mov
lods
clc
das
imul
pop
inc
and
mov
pop
dec
jp
mov
inc
out
dec
jne
sbb
jge
jg
andl
jp
testl
and
lahf
inc
orb
xchg
dec
cs
push
mov
or
jnp
push
stc
adc
mov
fldt
jle
jmp
cmc
lcall
pop
pusha
adc
popa
iret
sbb
or
xor
ja
ficompl
bound
loopne
icebp
in
push
sbb
push
mov
nop
inc
xor
jnp
adc
jmp
jg
pushl
into
or
push
ds
pop
mov
movsb
stos
popf
mov
gs
mov
push
inc
cmp
push
lcall
cmpsl
arpl
ret
out
pop
frstor
sbb
lret
cmovbe
daa
or
js
jbe
mov
xor
in
inc
sbb
mov
andl
cs
scas
cmp
cmc
add
pop
xchg
lds
mov
and
mov
cwtl
aaa
jl
and
sbb
cmp
or
pop
cmc
adc
test
sti
nop
jnp
adc
cmp
fcmovu
insb
mov
xchg
loope
push
stc
push
push
or
ror
sbb
or
dec
mov
lcall
or
mov
jp
mov
xchg
insb
mov
lock
xchg
ficompl
out
movl
out
cmp
jmp
xchg
cmp
inc
js
pop
jb
dec
sbb
mov
nop
fisttps
jae
clc
in
fstpl
mov
xchg
xchg
jg
sub
aad
xchg
scas
sub
pop
rcrb
aam
fldt
mov
and
mov
cmc
cmp
aam
inc
pop
std
inc
pop
sub
popf
pop
push
mov
lcall
fcomps
loope
sub
js
push
fisubs
ja
insl
jle
cmpsl
mov
loop
mov
push
fdivrl
mov
pop
add
jg
push
pop
test
lahf
mov
mov
std
shll
cmp
or
mov
xchg
push
xor
aad
xor
inc
outsb
sahf
mov
xor
mov
push
push
xor
inc
push
lahf
or
jl
lods
enter
pop
mov
test
scas
stc
dec
sub
stos
sub
adc
js
push
sbb
jae
pop
cmp
int3
rcrl
jb
or
mov
lret
js
mov
in
int
mov
stos
cli
int
lret
mov
popa
test
pop
dec
pop
test
jle
xor
negl
fildll
std
bound
mov
mov
and
sub
jp
xchg
cli
inc
jae
inc
pop
jns
fisubrs
sub
cli
xlat
push
jmp
mov
jg
in
mov
cs
scas
dec
iret
orb
mov
subl
cmpsl
or
inc
mov
mov
insb
inc
sub
and
lods
mov
cld
ficoml
xchg
addl
fstpl
mov
or
je
lods
das
sub
add
sub
aam
pop
nop
dec
jnp
push
add
cmp
js
cmp
in
mov
xchg
outsl
sbb
pop
pushf
bound
inc
xor
xchg
out
lock
jb
push
push
test
lods
pop
imul
sbb
stos
push
mov
fwait
pop
mov
enter
inc
out
cmp
lahf
mov
repz
mov
jle
lods
mov
cmp
xor
dec
loope
mov
aaa
imul
dec
xchg
xor
aaa
or
in
cmc
adc
cld
push
xchg
ja
ss
push
loopne
cmp
sahf
int3
iret
and
popa
mov
pop
sbb
mov
add
in
lods
dec
jp
sarb
mov
mov
mov
shr
mov
lock
sti
jmp
dec
mov
xchg
movsb
mov
sbb
div
fs
ficoms
or
add
cmp
mov
adcb
jmp
repz
inc
inc
sub
mov
inc
cmp
fisttpl
cmp
clc
sub
aam
push
scas
sbb
pop
cmp
push
leave
ret
fimuls
loop
pop
pop
lods
mov
imul
maxps
mov
push
jbe
mov
cltd
and
dec
iret
in
jb
in
call
lods
sti
int
sub
aad
fs
pop
push
pop
push
insl
jae
stos
jnp
mov
sub
lcall
add
in
push
jmp
mov
push
mov
fwait
push
dec
jge
mov
cmp
in
ljmp
mov
rcr
aad
in
fwait
jbe
jp
jb
out
mulb
pop
push
jb
js
imul
paddb
and
cmc
push
push
jl
lods
subb
hlt
scas
mov
roll
inc
push
fisttpl
xor
es
mov
fmull
mov
stos
sub
lds
fwait
or
sbb
stos
popa
adc
out
mov
aas
jmp
push
aad
and
mov
adc
and
and
jnp
push
mov
fiadds
fcmovu
mov
test
xchg
or
mov
in
xor
dec
int
or
out
pop
aaa
in
push
imul
add
push
lret
pop
mov
cmp
cmp
mov
es
int
int
jle
sahf
pop
push
rcll
mov
sub
inc
arpl
xor
mov
sub
fmull
sbb
out
cmp
fsubrp
jne
jns
ret
cmpsl
aam
loopne
cmp
mov
mov
sub
fiaddl
addl
mov
pop
mov
dec
fcoml
jg
inc
xor
push
cmc
push
es
addl
adc
cmp
xchg
push
jl
fsubrl
pusha
xor
sub
sub
pop
imul
xor
test
outsb
fdiv
cmpb
pop
sbb
adc
add
jne
add
cmpsl
push
mov
mov
xor
fistpl
jecxz
orl
ja
push
mov
lea
sti
popl
fs
lcall
inc
popf
mov
xor
dec
icebp
sub
push
loop
jg
cmp
loope
xor
or
xchg
dec
call
sbb
loop
inc
inc
mov
inc
loopne
ret
jl
sub
jl
ss
popf
sbb
inc
nop
xlat
sarl
mov
mov
cmp
lods
push
mov
loopne
sbb
jbe
or
addr16
mov
jmp
or
stos
testb
jg
sub
jo
jnp
xlat
mov
mov
call
mov
insl
xchg
out
mov
mov
and
imulb
out
enter
fisttps
in
arpl
lcall
and
insb
add
repnz
fs
and
inc
repz
xor
js
jg
les
sbb
addb
dec
das
xchg
lock
out
mov
loopne
pop
fbld
add
mov
mov
fildl
mov
stos
cmp
jns
popa
in
xchg
ja
cmp
push
sbb
fadd
cmp
adc
mov
rcr
add
inc
rcll
add
xchg
outsl
xor
push
cs
push
repz
jmp
lods
adc
xchg
fldt
gs
jl
push
and
les
nop
cmc
ret
mov
jb
cmp
jo
pop
fistpll
or
cmp
push
mov
dec
mov
ret
jg
in
dec
cmp
shlb
std
imul
repz
sbb
push
pop
mov
sarl
cmp
faddp
xchg
pop
mov
aaa
fnstcw
fcoml
divl
test
xchg
adc
repz
mov
inc
fdivp
dec
scas
add
or
xlat
dec
enter
xor
js
adc
mov
movsb
and
and
pushf
and
jl
cs
ss
mov
shrl
sbb
inc
insb
xor
dec
loopne
cs
fisubl
loopne
sbb
xchg
add
fimuls
jg
jl
in
sbb
add
jl
push
js
sub
push
inc
cltd
daa
inc
mov
dec
xchg
lock
sbb
mov
enter
or
jl
out
test
mov
push
xchg
icebp
outsb
stc
jl
test
cmp
cmp
inc
mov
stc
dec
mov
fmulp
sbb
mov
rcl
jae
out
xchg
pushf
jns
cmp
or
mov
jmp
jno
int3
mov
lret
sbb
rcrb
cltd
push
inc
arpl
xchg
out
and
xchg
pop
loope
mov
or
pop
mov
aad
xchg
pop
dec
bound
sbb
fisttpll
jns
in
push
daa
xchg
pushf
aaa
cmp
jge
call
jl
sti
push
js
data16
pop
mov
dec
lock
mov
adc
push
fisubs
jno
inc
fucom
sbb
mov
cmp
cmpsl
adc
xorb
adc
pushf
repz
and
sub
sahf
sti
out
das
add
sub
shlb
into
rcrl
mov
dec
pop
push
out
jmp
mov
dec
or
cmpsb
mov
stc
into
in
fisttpl
cs
mov
cld
inc
icebp
xchg
fiadds
ja
jmp
test
out
dec
sbb
addr16
add
flds
hlt
sub
pop
fisubrl
inc
inc
shrl
in
in
test
xor
jmp
or
push
shlb
jmp
fisubs
sbb
sbb
movsb
out
cld
cmp
push
mov
mov
adc
outsb
fmull
lds
out
or
shl
cmc
sub
loop
inc
jp
fsubl
dec
jmp
pop
sub
cmp
ljmp
aam
jg
pop
je
inc
add
cltd
adc
jle
test
and
sbb
jmp
shrb
imul
and
jp
sub
out
pop
std
clc
negl
sub
jnp
cs
dec
dec
dec
mov
in
sbb
jns
xor
push
fbstp
cwtl
aas
ja
shlb
add
daa
or
stc
add
dec
cmc
rcll
mov
fbstp
or
dec
int3
and
js
imul
cmpsl
aas
push
mov
add
icebp
mov
mov
sbb
stc
mov
or
mov
fistpll
jle
test
pop
push
popf
mov
fidivl
fistps
xor
aad
or
push
cld
fidivrl
rolb
mov
mov
cmp
inc
sub
pop
push
test
mov
int3
into
into
adc
mov
int
imull
dec
fiaddl
roll
icebp
lret
jns
cmp
xchg
jle
cmp
fsubs
adc
mov
movsb
test
repnz
xlat
stos
data16
add
mov
adc
out
dec
mov
jg
addb
or
mov
decl
mov
mov
psrlw
stos
add
dec
xchg
xchg
adc
and
lea
pop
fwait
xchg
mov
cmp
or
int
xchg
movsl
mov
dec
mov
inc
hlt
mov
stos
fwait
sbb
into
sbb
mov
ja
pop
sub
fwait
dec
or
mov
adc
imul
mov
fidivs
int
roll
sub
cltd
lock
mov
xchg
mov
inc
dec
shr
insl
daa
dec
mov
adc
fisubrs
or
stc
dec
icebp
mov
mov
addb
insb
sub
mov
inc
scas
in
cltd
std
mov
movsb
pop
adc
mov
inc
push
ficomps
loop
aam
jecxz
push
icebp
jns
sub
mov
mov
push
jecxz
loopne
sub
out
push
mov
sub
add
inc
cmp
fists
out
ret
jp
loope
test
rcll
fld
jg
imulb
push
not
sub
loopne
jmp
or
fwait
bound
xchg
push
not
mov
mov
jnp
popa
out
xchg
out
es
push
fwait
jl
lret
ljmp
mov
sub
imul
mov
add
xbegin
adc
cmpsb
rclb
mov
cmp
mov
inc
xchg
and
mov
mov
adcb
lock
dec
jecxz
out
add
adc
dec
cmc
fstp
inc
mov
sub
mov
leave
sbb
inc
push
jbe
negl
repz
sbb
and
sub
jo
fimull
xor
inc
mov
xchg
pop
aas
aam
clc
in
inc
ja
mov
mov
cmpxchg
xor
xchg
in
insb
das
adc
or
cmp
jmp
inc
push
cltd
pusha
lret
pop
pop
in
repz
push
arpl
cwtl
push
mov
aaa
inc
push
ret
jno
fwait
xor
mov
lock
iret
lahf
sub
mov
scas
add
cmp
mov
std
das
lods
into
dec
mov
jg
sbb
dec
scas
jge
ret
int
lcall
or
nop
rcr
in
lret
loopne
sti
cwtl
pop
iret
jge
or
pop
daa
int3
mov
imul
dec
hlt
mov
loope
adc
imul
push
mov
jo
dec
out
sbb
jmp
flds
loop
inc
fiadds
jns
in
push
push
lcall
stc
jbe
loopne
clc
xor
aam
iret
dec
xchg
inc
mov
mov
fcoml
or
fxch
and
lret
mov
mov
mov
mov
test
leave
push
pop
mov
cmc
popf
bound
pop
mov
lds
push
pop
fwait
sbb
out
xor
cmp
lahf
loope
jecxz
outsb
fisttps
scas
pop
lcall
and
fdivr
arpl
test
insb
ret
pop
inc
push
mov
int
push
push
scas
push
sbb
popf
xor
add
inc
dec
inc
in
pop
pop
mov
jmp
out
and
in
dec
stc
lret
push
pop
xchg
aad
xlat
test
js
icebp
mov
in
mov
mov
xor
dec
rcrb
and
cmp
dec
sarb
imul
sub
in
mov
cmp
dec
lods
push
jmp
adc
push
std
jb
cmp
push
sub
mov
adc
fdivrl
mov
sahf
jge
cmp
sti
mov
mov
mov
test
mov
mov
popf
jnp
iret
jle
ret
in
dec
fmuls
inc
jno
lds
adc
mov
mov
int3
pushf
loop
das
lret
scas
cli
xchg
lahf
and
and
pusha
dec
fsubs
pop
outsb
cld
sbb
jno
bound
ja
cmp
adc
and
pushf
jo
mov
mov
xlat
aam
sbbl
jno
pop
outsb
fiadds
mov
hlt
jmp
imul
shlb
dec
xchg
xchg
out
cmc
call
xor
mov
pop
dec
cltd
scas
jmp
jae
jbe
xchg
int3
push
mov
push
pushf
sbb
mov
shr
inc
ja
ss
in
mov
dec
shlb
out
mov
addr16
mov
testb
xchg
adc
jnp
add
or
mov
sbb
mov
aas
adc
repz
jl
mov
push
adc
test
aaa
popf
inc
and
icebp
out
addr16
jg
iret
mov
test
ljmp
add
xor
insl
xor
scas
and
imul
sub
idivb
push
dec
ret
xchg
fdivr
mov
sub
in
adc
fwait
pop
xchg
lcall
fucom
out
mov
repnz
fcomi
std
xor
fs
in
jns
fimuls
add
cmp
ficoms
out
mov
inc
adc
and
cmpsl
pop
adc
jnp
notl
js
cltd
inc
xchg
shlb
ljmp
mov
xlat
inc
and
mov
stos
adc
sub
xchg
fs
push
popl
mov
repnz
xchg
mov
daa
push
push
cwtl
jl
dec
ret
imul
lods
fnstcw
lock
dec
mov
enter
adc
push
movsl
sbb
push
data16
push
imul
push
add
xlat
fistpl
push
and
cltd
rorb
sti
lods
or
jmp
mov
xor
jl
mov
icebp
test
pop
cmp
push
mov
inc
xchg
fstl
out
shlb
and
enter
xor
stos
test
stc
jbe
test
aam
loope
mov
lods
dec
lock
sub
cmc
mov
dec
and
call
pushl
in
pushf
pop
aad
lds
andb
dec
mov
pop
jle
popf
lcall
mov
pusha
mov
mov
dec
ljmp
mov
mov
int3
dec
jnp
adc
outsl
loopne
jmp
inc
in
push
out
subb
jg
mov
pushf
aad
pop
les
in
sti
adc
outsb
xchg
jmp
cmp
xchg
inc
push
movsb
pop
or
leave
das
leave
shll
mov
cmp
aas
dec
loopne
insl
rorb
mov
xor
popa
and
fwait
and
mov
mov
push
mov
movsl
out
adc
repnz
repnz
pop
jl
sarb
and
std
js
mov
pop
stos
pusha
in
push
jp
aam
out
sub
mov
int3
sbb
popl
adc
pop
push
or
mov
out
loope
adc
mov
push
jmp
jns
aam
inc
mov
mov
xchg
fisubrl
enter
cmpsw
in
lret
aas
jg
nop
pop
sbbl
adc
jno
xlat
fistps
adc
mov
jno
ret
push
out
mov
push
pop
mov
pop
jg
jno
lods
pop
pop
sub
repz
jmp
stc
insb
jno
jnp
xor
add
fmull
inc
dec
test
ja
push
inc
rorb
sub
push
inc
aas
pushf
or
xchg
adc
xor
in
int3
inc
jecxz
add
arpl
mov
sbb
lods
adc
xchg
fidivs
scas
or
filds
fnsave
imul
jbe
dec
xor
std
fwait
nop
loop
and
data16
pop
lods
sub
ret
fdivrs
push
jae
cmp
in
fiadds
inc
inc
bound
or
jmp
ss
mov
in
ljmp
cltd
nop
ds
add
insb
xchg
pop
or
mov
pop
jnp
mov
iret
ret
loop
hlt
mov
dec
mov
in
ljmp
cmp
repnz
add
lcall
mov
jg
inc
xor
mov
pop
outsb
mov
jl
pop
cmpsl
punpckhdq
pop
scas
es
cmp
pop
adc
in
xchg
xor
xor
jnp
dec
mov
pop
stos
or
imul
add
jnp
or
adc
outsl
into
and
xor
mov
jo
push
lret
jo
inc
mov
inc
shl
mov
xchg
mov
push
pop
and
ffree
xor
aad
pop
mov
je
ret
icebp
cmp
push
add
cli
stos
rcrl
adc
hlt
jbe
xchg
mov
push
mov
jb
leave
popf
ret
inc
aas
cs
xor
or
daa
fistpl
xor
into
sahf
jle
invd
sbb
fimull
in
pop
std
sub
jecxz
jns
add
or
ja
sbb
adc
popf
mov
imul
cltd
mov
data16
rcll
cmp
jns
push
push
std
fistps
sub
inc
jg
xor
fs
incl
in
mov
data16
inc
in
mov
popf
lock
cmp
data16
lods
inc
movsb
sub
and
lcall
lret
lret
mov
fidivrs
fdivrp
rcrl
xchg
jl
push
mov
pop
dec
cltd
jo
ljmp
addr16
mov
adc
push
dec
inc
jle
add
add
out
test
cmp
pop
shrb
cmp
or
shrl
jno
push
icebp
int
and
jmp
or
sbb
mov
jmp
fstpt
ret
test
data16
mov
iret
lods
out
inc
insl
lea
adc
imul
lahf
in
scas
cmp
mov
xor
out
subl
ja
push
scas
sub
pop
cmp
lock
dec
les
xchg
pop
aas
push
push
pop
xchg
sub
xchg
pop
pop
mov
scas
aas
xor
jmp
mov
mov
icebp
or
dec
stc
jl
inc
arpl
or
ss
loopne
into
movsb
pop
push
mov
mov
cltd
leave
jg
mov
jmp
sbb
roll
test
adc
dec
cmp
sti
mov
dec
and
pop
sub
xchg
jle
lods
xor
sbb
repnz
out
xchg
rcrl
sarl
inc
popf
jle
sub
loope
inc
mov
shrl
or
mov
or
inc
and
call
adc
jmp
sti
fnstenv
dec
div
jl
gs
fisubl
add
adc
loopne
int
out
push
inc
inc
jle
insl
and
mov
test
add
dec
dec
xchg
loopne
add
sub
aaa
insb
jbe
maskmovq
insl
popf
mov
cmp
in
sti
push
mov
sti
movsb
or
jnp
cld
dec
jp
xor
inc
les
dec
inc
stos
mov
imul
sub
add
mov
ret
movsb
cltd
movl
fadd
push
adc
or
adc
or
rcrb
sub
jmp
sub
imul
inc
lcall
jb
mov
sti
push
pop
inc
and
aad
rcll
jne
inc
dec
and
push
jg
ret
or
add
jno
sti
cmpsl
es
cmpb
lret
ss
aad
negl
pop
jae
xor
adc
negl
fwait
dec
mov
cmp
pop
out
jmp
sti
cmp
ret
push
mov
es
icebp
jae
movsb
test
test
ja
inc
add
scas
imul
sbb
jo
ss
cmp
roll
mov
add
lcall
pop
faddp
mov
mov
aad
imul
fidivrl
addr16
fdiv
xor
xor
xchg
aas
test
cmpsl
push
pop
mov
cmp
fstpt
sub
adc
stc
pop
ja
inc
mov
adc
icebp
add
jmp
sub
dec
jae
sbb
movsb
leave
mov
shlb
sub
cmp
les
mov
jb
dec
pop
add
popa
lcall
mov
rcrl
lock
push
ret
cmpb
loop
push
lcall
mov
shlb
xor
loopne
mov
lods
pop
jno
test
pop
push
jle
ret
scas
dec
and
jle
sbb
inc
push
test
add
add
mov
jg
cmp
push
jno
insb
inc
push
jb
jae
insb
pop
imul
fcmovnu
out
dec
leave
jne
mov
in
jmp
cltd
out
ja
out
mov
icebp
cmp
cmp
xchg
outsb
idiv
sti
loopne
xchg
ret
je
dec
mov
xor
iret
rorb
insl
xchg
imul
mov
cmpsb
push
aas
mov
aam
mov
outsl
push
jbe
push
lea
mov
xlat
fldt
adc
or
mov
cmp
add
pushf
inc
pushl
daa
fadds
jno
dec
shll
mov
inc
fstps
xchg
xor
aas
data16
inc
pop
or
sub
jl
xor
rol
inc
in
scas
imul
mov
iret
jo
fisttpll
das
hlt
sbb
mov
and
lcall
std
inc
push
jmp
jno
cmp
cld
adc
iret
sbb
mov
lret
jmp
push
or
lods
push
push
std
cmpsb
icebp
fwait
into
dec
or
xor
in
mov
mov
fsubrl
cmpsb
daa
push
jo
test
xchg
cltd
imul
cmpsl
lds
inc
push
sub
dec
fstl
sbb
mov
inc
pusha
int
xlat
xchg
jmp
hlt
jo
or
cltd
dec
pop
stos
inc
xchg
pop
cmp
xchg
data16
push
js
test
and
add
xchg
dec
mov
pop
mov
push
inc
dec
lcall
add
xchg
or
les
mov
inc
mov
cmc
imul
cmpsl
je
pop
mov
jb
adc
mov
iret
jmp
cmp
pop
ja
out
loopne
imul
dec
add
inc
mov
add
or
sti
inc
cmpsb
sbb
inc
push
outsb
jg
push
notb
mov
loope
cwtl
std
dec
dec
clc
push
inc
fisubrs
mov
sbb
add
add
sbb
addr16
adc
mov
notl
dec
sbb
mov
xor
mov
lret
movsb
pop
mov
ret
lock
cmp
jl
adc
ja
jmp
aad
pop
jne
cld
popa
sbb
mov
mov
mov
icebp
mov
mov
outsl
mov
mov
sbb
loope
mov
mov
fnstenv
dec
imul
dec
pop
addl
xchg
add
push
fstl
in
call
cwtl
push
jecxz
js
call
push
mov
roll
movsl
mov
cmc
int
add
rcll
xor
and
mov
imul
mov
jl
cld
ror
mov
enter
stc
pop
push
mov
jbe
mov
loop
cmc
mov
imul
xchg
dec
repnz
cs
dec
arpl
mov
cmp
pop
xadd
dec
mov
outsb
push
sbb
stos
pop
pop
mov
lahf
push
inc
scas
ja
jmp
std
nop
pop
push
and
mov
imul
fimuls
jl
lea
pop
mov
sbbb
jmp
add
int
dec
xor
scas
mov
loope
push
pop
xchg
jae
mov
push
andb
cmp
je
mov
stos
xchg
jnp
add
rolb
fwait
add
pop
pop
mov
jg
cmp
pop
sbb
ds
mov
sub
imul
adc
xor
add
popa
sbb
ret
pop
xchg
fdivrl
aam
leave
dec
lahf
push
jge
pop
arpl
pushf
push
mov
movsb
xor
out
mov
imul
enter
stc
fldl
js
sbb
xor
loop
fimull
lods
mov
jl
push
pop
push
add
idiv
into
test
xorl
imul
sub
cmp
cwtl
pushf
push
jmp
jecxz
or
pushf
test
adcl
dec
aad
mov
out
cs
adc
or
lret
out
dec
jno
hlt
jg
and
js
popf
push
jae
push
push
xchg
jno
or
popa
repz
test
repz
into
out
cmpsl
arpl
hlt
pop
mov
movsb
ret
clc
inc
inc
pop
cmp
test
mov
pop
clc
add
mov
or
hlt
push
lods
shlb
push
dec
push
dec
outsl
orb
jns,pn
mov
and
ret
jmp
test
repz
outsl
hlt
and
cmovno
adc
add
in
jne
jno
and
inc
int
negl
rcll
rolb
xor
fdivrl
cli
mov
cmp
mov
scas
and
xchg
mov
in
mov
sbb
and
jl
pusha
clc
shlb
pop
lea
pop
bound
and
pop
mov
add
sbbb
xchg
fcmovnu
dec
aaa
into
pop
jnp,pn
sbb
fwait
adc
es
mov
dec
dec
mov
jg
jb
dec
test
iret
xor
jae
repnz
xor
emms
es
add
push
mov
mov
xchg
xor
mov
jecxz
imul
repz
aam
into
test
popf
mov
push
cmp
xchg
ror
xchg
loopne
xchg
jbe
jl
mov
xor
psllw
jnp
push
xor
fs
es
fsubl
data16
psrad
and
in
movsb
mov
push
push
push
ds
jge
iret
into
pop
mov
and
or
stos
xor
out
sbb
dec
sub
out
repnz
std
mov
test
or
shlb
jnp
ret
push
stc
dec
xchg
sbb
jl
mov
dec
je
iret
ljmp
in
jecxz
fcoms
in
aam
rcl
cltd
sbb
and
cmp
xor
das
sub
rcrl
je
jg
cwtl
scas
or
adc
sub
mov
jae
out
fcmove
adc
inc
dec
mov
push
je
mov
orb
mov
pop
stc
jmp
adc
cmp
push
pop
es
ficomps
dec
andl
push
aas
iret
loopne
sbb
push
push
inc
mov
movsb
dec
lahf
push
push
xchg
dec
iret
sub
les
jg
push
rol
jle
and
jno
ljmp
jl
push
bound
mov
cltd
incl
into
cs
cmp
xor
dec
ss
sbbb
sbb
cmpsl
xchg
push
lret
dec
jecxz
push
xor
filds
mov
xchg
adc
stos
or
push
mov
cmp
nop
pop
sub
jmp
insl
push
inc
rorl
aad
je
cmp
xchg
outsl
mov
sbb
jb
ret
fwait
inc
xor
pushl
int3
mov
test
cmp
clc
mov
sahf
cmp
inc
mov
loopne
cmc
fcmovnu
mov
ss
fcmove
xor
sub
dec
ds
jb
xchg
imul
dec
loop
jo
jl
cmc
loop,pn
dec
ljmp
fcmovbe
inc
pop
cmp
mov
ror
mov
jne
clc
inc
xchg
push
push
jge
push
pusha
mov
stos
mov
push
ret
push
aam
movsb
mov
push
movsb
movsl
and
xchg
rorl
inc
xchg
xor
test
sub
outsl
jne
lcall
aad
cmp
or
icebp
push
ret
out
sti
sbb
jnp
cmpb
jp
repz
jnp
jae
or
jns
inc
pop
ret
sub
cmp
add
pop
push
nop
repz
sbb
pop
jecxz
mov
lahf
sub
dec
enter
or
shll
push
sbb
sbb
or
cmpsb
mov
mov
pop
mov
mov
add
int
daa
pop
lea
out
aaa
dec
jno
push
add
inc
xor
rcrl
add
divb
ljmp
jmp
xor
inc
jbe
enter
fcmovnbe
dec
cmp
inc
pusha
mov
mulb
stos
and
lods
loopne
cmpsl
std
jno
xchg
bound
jl
mov
int3
loope
pop
int
pushl
dec
mov
icebp
inc
or
xchg
jbe
mov
push
xlat
cmpsb
movsb
mov
cmpsb
and
imul
jp
fucomp
jae
xor
xchg
and
xchg
or
mov
shl
fstpt
mov
or
push
dec
jle
pop
and
lret
fisttpll
or
push
or
rcrl
mov
ret
loop
add
or
jnp
inc
pop
cmp
decl
mov
out
test
cmp
sbb
or
imul
pusha
divb
cmp
jbe
nop
out
cmp
and
in
add
pop
push
cmp
out
xchg
and
cmp
mov
rcll
popf
jbe
jns
pop
pop
jno
dec
sahf
dec
xchg
dec
mov
inc
sti
stos
and
xchg
cmc
xor
enter
jle
dec
xchg
lods
cmp
and
jl
mov
inc
jg
and
fidivrs
std
mov
add
adc
push
shll
pop
jmp
mov
sbb
pop
push
pop
scas
dec
xor
mov
ret
mov
sub
cmp
sub
sub
cmp
addr16
popf
mov
mov
lcall
test
jl
push
adc
data16
jns
xor
pop
mov
cmc
std
movaps
cwtl
push
popf
inc
rorl
aas
ljmp
jle
outsl
icebp
jbe
sbbb
mov
in
sub
int
movsl
leave
fimull
sbb
fiaddl
xchg
jno
shlb
cmp
mov
mov
iret
nop
scas
stos
inc
inc
or
jecxz
add
jbe
sbb
js
push
mov
sbb
or
clc
pop
insl
cld
xchg
movsb
inc
dec
cmp
cmpb
imul
adc
dec
aas
pop
notl
test
dec
and
lea
std
orl
lcall
fimuls
jns
sbb
mov
push
repnz
jg
je
ret
pop
cmp
sbb
xchg
fcmovnu
mov
insl
pop
xlat
mov
rcll
mov
push
lods
imul
inc
add
dec
fs
cmc
addr16
mov
dec
jl
and
pop
ret
jnp
bound
je
mov
clc
lds
mov
lret
mov
jbe
inc
mov
jno
loopne
je
out
fstpl
mov
movsb
sbb
iret
inc
popa
add
addl
mov
lret
jb
mov
ja
in
jmp
cli
jle
jns
loopne
out
push
adc
jg
pop
jbe
imul
lods
es
shlb
pop
jg
fidivrs
or
popf
sbb
push
cmp
jno
push
lods
jl
inc
add
jl
add
enter
add
cmp
adc
push
out
xor
push
mov
sahf
cmp
pop
jnp
pushf
dec
push
add
inc
pop
leave
pop
mov
mov
cmc
mov
and
dec
and
jl
inc
sar
arpl
fwait
mov
lret
addb
repz
pusha
inc
ja,pn
shr
dec
loopne
push
xor
int3
test
adc
jae
push
out
stos
mov
xchg
scas
out
mov
js
jo
xor
outsb
cld
push
add
hlt
int
insb
jl
cmc
add
sbbl
cmp
ret
into
scas
dec
cli
jae
inc
and
jb
push
jbe
lahf
pop
dec
lcall
cmp
cltd
inc
rclb
shrl
aam
fcmovnu
push
mov
push
lock
sub
or
shll
std
icebp
add
sbb
popf
cmp
lret
movsb
ljmp
inc
add
notl
dec
test
js
adc
inc
int
scas
imul
xchg
fildl
sub
ret
imul
fistpll
aad
in
leave
push
or
push
mov
inc
push
cs
imul
insl
mov
fsub
cmp
xchg
add
outsl
cmc
sarb
lods
subb
mov
imul
adc
add
mov
cltd
inc
adc
push
icebp
fisubrl
or
dec
and
popa
push
rcll
nop
pop
mov
push
fimull
jns
pop
adc
push
pop
add
mov
fwait
mov
inc
sbb
xchg
jp
int
dec
push
mov
dec
sbb
mov
mov
scas
mov
pop
dec
dec
sbb
adc
sbb
mov
in
or
dec
dec
and
rclb
xchg
cmp
mov
inc
push
and
sbb
adc
lods
mov
sahf
sbb
fadds
fxch
ljmp
fcoml
xchg
add
fwait
pushf
jp
and
icebp
cli
jecxz
mov
xchg
les
push
ret
jnp
mov
add
xor
ss
push
or
inc
or
mov
daa
test
push
in
test
cld
daa
mov
adc
enter
mov
mov
movsl
into
mov
pop
jmp
sub
dec
mov
add
adc
mov
add
pop
loope
scas
fwait
or
push
cmpb
mov
mov
pop
inc
inc
mov
pusha
add
push
arpl
leave
cmp
mov
or
dec
inc
lahf
clc
outsb
cmp
cmpsb
and
ss
daa
ss
mov
xchg
sbb
mov
jl
and
mov
repz
pop
push
iret
movsb
cmpsb
flds
add
sub
push
mov
push
inc
sub
fildl
in
xchg
sbb
add
xor
push
or
outsl
dec
cld
xor
mov
mov
cmp
std
add
jno
testb
ficompl
mov
leave
fs
push
icebp
mov
cmc
jg
xor
dec
jbe
sub
dec
sbb
ja
test
std
aad
xchg
xor
into
pop
mov
lea
stos
jg
pop
sbb
ja
das
pop
mov
popf
stc
xchg
dec
iret
mov
dec
popa
rorl
xchg
mov
adcb
fs
or
out
sub
mov
std
test
lods
push
mov
inc
xchg
sub
popf
mov
mov
ret
or
adc
testl
lods
mov
add
mov
idivl
xlat
fstps
mov
pop
in
into
movsb
adc
fs
imul
test
orb
or
mov
or
pop
cmp
andl
cmc
lds
jne
sub
pop
ds
mov
mov
xchg
fdivl
pop
sub
xlat
daa
mov
aam
rolb
call
clc
xchg
cmpsl
pop
jg
fisubl
xchg
pusha
pop
pop
popf
push
cmp
iret
or
pop
ficompl
and
sbb
fsubrl
and
add
dec
dec
cmpsb
push
pop
repz
jb
pusha
test
pusha
fildl
push
stos
outsb
push
and
cld
jg
push
loope
movsb
jo
pushf
insl
cmp
cwtl
jbe
mov
jmp
or
adc
sub
inc
int
sbb
repnz
aad
and
cmp
cmp
dec
pop
sbb
stc
xor
sbb
mov
scas
pop
sti
jmp
jno
dec
jecxz
pop
js
mov
mov
stc
sbb
add
jp
fwait
inc
rorb
sbb
and
stc
add
mov
jg
inc
pop
in
lods
scas
jl
add
and
xchg
pop
aam
jmp
push
ret
daa
sbb
mov
popfw
dec
fildll
jae
sub
aad
add
dec
fiaddl
fimull
mov
add
aaa
mov
and
and
sbb
sahf
push
lock
jae
aas
lret
pop
int
movsb
sub
imul
mov
jg
push
adc
xchg
lahf
popf
dec
ret
out
lahf
push
sub
and
jmp
or
std
fildll
xchg
lret
in
cmpsl
cli
es
incb
sub
sub
xor
add
mov
lea
jl
mov
js
ljmp
cmp
pop
test
sub
lods
push
mov
push
pop
fdivrs
lock
or
loopne
pop
mov
fadds
sbb
lret
outsb
lods
sbb
pop
mov
fisubrl
ret
jp
xchg
dec
aas
lret
jns
push
orb
sbb
mov
enter
lea
sahf
mov
cmp
push
in
mov
push
add
jno
dec
jb
dec
xchg
out
dec
stos
xlat
int3
add
pop
lretw
jno
lock
aas
inc
je
inc
mov
fnstsw
adc
cmp
or
out
cmp
xchg
xchg
iret
push
ror
mov
dec
inc
xchg
pusha
push
pushf
int
testl
dec
and
sub
and
cltd
add
cli
adc
mov
add
jmp
das
scas
push
orl
repz
jb
outsl
into
dec
gs
sub
xchg
imull
push
or
into
or
push
inc
mov
mov
rcll
cmc
push
out
jnp
cmp
mov
ret
pop
jne
jo
mov
divb
add
pop
cs
xor
clc
int3
inc
jecxz
pushf
ret
out
aad
lret
pop
jmp
push
out
arpl
cmpsl
sub
xchg
lcall
movsb
dec
dec
aam
rcl
push
mov
or
pop
dec
inc
mov
stos
mov
in
push
rcrb
jl
repz
movsb
aad
dec
and
jo
pop
jae
add
in
adcb
mov
sahf
out
repz
sub
and
add
sub
enter
push
mov
mov
aad
push
lods
out
lods
movsb
aad
je
shl
sahf
mov
push
sti
andb
scas
jmp
mov
cld
hlt
lods
mov
fstpt
and
sub
add
sbbl
jb
sub
dec
iret
mov
fs
out
jnp
rcrb
jg
add
push
out
popa
shl
fdivrl
xchg
pop
and
jbe
dec
pop
out
int
mov
xchg
ret
jp
cmp
push
adc
mov
or
es
call
gs
adc
dec
adc
xchg
mov
fcmovnbe
mov
xchg
decl
push
push
inc
add
icebp
mov
mov
shlb
push
push
out
pop
mov
arpl
jno
inc
mov
dec
cwtl
mov
jne
xchg
es
lods
fnsave
jno
lret
rolb
sub
mov
mov
push
xchg
dec
mov
mov
adc
jno
add
outsl
sti
add
pusha
inc
nop
xchg
leave
shrl
add
sbb
push
je
test
mov
ret
push
jnp
adc
clc
dec
nop
cmp
xor
das
cmp
dec
pop
int3
dec
add
mov
fwait
lret
mov
push
add
pusha
in
push
lock
fcmove
dec
fldenv
push
mov
stos
stos
and
call
movups
loope
sub
mov
cmp
adc
xor
cmp
adc
jae
out
dec
mov
xor
xor
xchg
jno
lahf
dec
jmp
mov
pop
je
insb
xor
andl
aad
into
inc
xchg
scas
or
ljmp
cmp
imul
sti
insb
cmpsb
shll
add
lret
push
push
loope
push
sub
scas
and
imul
test
sbb
adc
shrb
jb
rorl
lret
mov
inc
ds
stc
jle
fwait
cli
mov
inc
cmp
lret
jno
test
mov
pop
add
push
jmp
out
jae
or
lods
in
jno
ss
mov
and
sub
sub
out
push
lcall
mov
rcll
sbb
mov
jge
inc
inc
inc
pop
mov
dec
push
pop
mov
mov
out
jb
in
stos
sbb
mov
push
pop
inc
stos
mov
mov
jge
enter
xor
fs
and
cmp
dec
clc
push
jmp
sbb
mov
icebp
sub
and
scas
aaa
cmp
adc
loopne
jl
sbb
cmp
adc
cld
shll
lret
push
mov
push
xchg
or
lods
gs
mov
fisubl
mov
scas
test
sbb
lret
aaa
jg
jbe
cmp
imul
cltd
xor
cmpsb
dec
dec
jnp
push
icebp
fs
mov
and
lahf
adc
or
jmp
xor
shr
sti
movsl
or
inc
xchg
aam
mov
push
das
cmp
loope
lret
push
je
sbb
mov
fsub
cmpsb
inc
sbb
sub
iret
aad
insb
fsubr
xchg
ds
add
mov
lcall
insl
das
es
mov
and
js
out
add
in
cs
xlat
movsl
imul
jbe
les
shrl
mov
jnp
jg
or
push
fs
out
je
faddl
fmul
jno
inc
rorb
ja
adc
jb
mov
sub
xchg
and
or
mov
es
cld
iret
lea
adc
pop
incb
pop
adc
push
jb
loope
xchg
dec
jne
jmp
jl
mov
stc
into
neg
lds
roll
mov
int3
push
and
xorb
and
dec
xchg
cmp
cmp
adc
arpl
or
mov
and
mov
testb
mov
mov
shlb
ret
mov
or
enter
das
sub
xlat
imulb
pop
out
mov
jl
adc
fidivrl
cmp
fbld
jl
jne
ljmp
cld
fadds
ja
fiadds
adc
or
add
and
int
mov
fsubr
pop
sbb
mov
call
sbb
jno
cld
jbe
daa
popf
mov
in
dec
or
fs
jo
js
into
add
or
mov
insb
in
adc
pop
push
mov
inc
pushf
ljmp
pusha
fsubp
mov
bnd
shlb
lods
sub
lahf
icebp
in
pop
in
jle
pop
faddp
fsubrs
push
cmp
out
dec
orl
pop
dec
sbb
arpl
push
cmp
out
leave
add
pop
fwait
sbb
mov
inc
cmp
adc
sub
dec
mov
inc
adc
or
pop
loopne
pop
lret
jg
and
es
cmp
mov
mov
js
mov
push
out
lret
dec
movsl
jb
jg
test
iret
add
or
sbb
or
sub
push
mov
ret
mov
sub
pusha
lcall
lods
repz
daa
sbbl
push
push
sub
loopne
int3
push
inc
fs
inc
add
setns
lods
sub
sub
dec
xor
pushf
iret
scas
xlat
aam
sbb
mov
jb
push
add
fsubl
stos
pop
scas
jl
add
or
fstps
pushf
icebp
scas
add
pop
or
mov
cmp
stos
lods
xor
mov
mov
cmpb
xor
mov
enter
scas
cltd
jnp
xor
rorl
inc
pusha
lret
fdivs
in
push
pop
inc
leave
jmp
filds
xor
ror
lcall
xchg
jno
es
pop
jp
stc
xchg
jle
and
cld
mov
aam
add
pusha
sub
mov
lret
jbe
lock
xchg
xor
mov
dec
sub
out
fcmovb
jg
mov
add
mov
push
aas
xor
icebp
mov
repnz
loopne
add
into
pop
in
or
push
mov
mov
xchg
cmp
out
xor
push
pushf
mov
pop
push
cli
jns
fisubrs
test
aad
inc
lcall
xor
or
rcr
inc
repz
push
shlb
pop
mov
rcrl
pusha
add
aad
add
xorl
mov
fs
mov
pushf
push
cmp
in
dec
pusha
fwait
fmul
js
int
jno
xchg
inc
mov
ss
push
repz
aam
cmp
fs
or
int
test
es
push
jnp
jmp
ja
std
mov
call
pushf
mov
jno
orl
outsb
mov
repnz
mov
xor
mov
cmpsb
rcl
or
adc
icebp
fdiv
pop
dec
jnp
inc
aas
shl
dec
movsb
mov
dec
shlb
cmc
lcall
or
lods
stc
pop
repz
push
js
movsb
movsb
mov
sbb
cmp
add
fidivs
mov
dec
dec
dec
mov
pop
pop
in
mov
cwtl
das
loope
mov
fisttps
mov
or
loop
dec
xchg
or
int3
push
xor
fs
add
icebp
jecxz
sub
inc
ds
xor
je
lea
insb
jns
mov
ds
outsl
movsl
mov
test
cltd
jnp
nop
lret
add
xchg
cmp
xor
push
in
es
xor
jg
cmp
pop
inc
stc
add
cmp
mov
js
lea
xorb
movsl
mov
loope
les
xor
imulb
cli
inc
clc
cs
loopne
ltr
sub
mov
les
repnz
out
add
xchg
mov
xchg
dec
jecxz
roll
mov
pop
mov
adc
popa
dec
cmp
inc
iret
sbb
cmc
arpl
clc
hlt
xor
sub
adcb
mov
add
push
bound
cmpsb
xchg
stos
add
xchg
mov
cmp
es
fcoms
int3
fdiv
adc
repnz
sbb
push
push
in
shrl
je
scas
push
inc
dec
sbb
mov
xchg
fwait
movsl
sbb
loop
pop
or
fwait
lds
inc
inc
fs
out
lds
adc
in
or
insl
adc
insb
inc
sub
in
aad
daa
adc
leave
jmp
hlt
das
pusha
es
cld
fs
scas
int
sub
ja
inc
sbbb
lret
fistps
repnz
mov
jl
cltd
or
pop
popf
sub
mov
out
cmp
sbbl
leave
mov
js
mov
xchg
xchg
nop
insb
mov
lahf
movsb
test
ret
adc
dec
aad
test
mov
cli
stos
ret
cltd
nop
shl
sti
cmp
or
orl
jno
sbb
and
stos
jg
ja
ja
mov
out
dec
inc
add
orb
jl
mov
rorb
adc
aam
and
pop
or
xor
fucomi
int3
adc
add
loopne
and
pop
andb
movsb
les
in
gs
dec
loope
push
aam
xor
int3
cmpsb
fidivs
push
inc
insb
inc
mov
bound
sub
add
nop
cmp
fidivrl
iret
cld
pop
inc
in
cmp
movsl
insl
dec
stos
inc
outsl
in
xor
sahf
xor
enter
roll
sbb
std
or
and
inc
cltd
adcl
mov
xchg
ljmp
cmc
repnz
out
and
shld
mov
insb
mov
mov
inc
mov
rep
jl
outsb
loopne
or
xlat
jb
leave
nop
jnp
outsb
xchg
mov
in
mov
push
or
xchg
jg
mov
pop
sahf
das
mov
inc
mov
mov
add
int3
jl
mov
fndisi(8087
in
sub
insb
lret
and
insb
sti
je
ficomps
roll
mov
aam
mov
sub
hlt
cld
cmp
in
and
jmp
aam
push
cmc
mov
sub
push
cs
dec
mov
inc
hlt
sbb
loopne
mov
imul
leave
mov
and
mov
or
xor
gs
xchg
mov
lds
xchg
jmp
add
mov
mov
mov
sti
hlt
iret
jle
aad
and
cmp
mov
aas
lcall
add
jmp
int3
mov
adc
imul
lahf
nop
inc
jl
and
pop
or
mov
adc
popf
mov
bswap
ret
cmp
or
sbb
mov
jg
cmp
cmp
cld
stc
and
std
mov
scas
fldl2e
orb
pop
lds
fcmovnbe
pop
mov
pop
jp
dec
mov
scas
lahf
xchg
imul
je
fbstp
mov
es
push
icebp
sub
pop
mov
jmp
imul
sti
dec
test
or
dec
sbb
sub
call
cld
das
mov
sbb
and
push
jmp
push
mov
pushf
ret
addr16
xlat
adc
xor
push
rcrl
push
inc
addr16
in
out
push
pop
pop
sti
movsl
std
mov
fcompl
fwait
sub
mov
jno
sbb
mov
inc
outsl
into
lahf
repnz
and
lret
or
mov
stos
mov
les
cltd
ficompl
pusha
xchg
push
pop
fisttpll
add
add
push
xchg
add
jno
mov
out
pusha
jae
jae
mov
icebp
push
aaa
or
pop
xchg
cmpsl
rcrl
cmpsl
inc
enter
es
aad
pop
sub
xor
add
iret
outsb
test
xor
push
imul
dec
pop
insl
stc
mov
test
es
adc
mov
rcrl
testl
adc
stos
iret
dec
push
int
imul
jmp
and
mov
int3
mov
in
pop
push
ja
push
sub
divl
loopne
xor
pop
dec
mov
repnz
ret
rcll
push
aas
repnz
inc
test
mov
mov
pop
lods
cltd
sub
xor
pop
push
add
adc
lret
ljmp
sub
negb
mov
in
ficoml
pop
mov
ljmp
sub
js
inc
fisttpl
dec
sub
cs
adc
sbb
dec
adc
mov
out
add
data16
dec
sbb
and
notl
iret
inc
incl
xchg
push
ficoms
mov
cmp
cld
je
aam
pop
dec
xchg
ljmp
sar
jno
insb
loop
imul
fwait
dec
jae
or
out
add
cmp
add
jno
fstpl
jb
cmp
mov
adc
test
or
or
cmp
fcomps
insl
push
aaa
cwtl
gs
jmp
push
mov
xchg
fldcw
sub
xchg
pop
loop
dec
cltd
movsb
jmp
hlt
inc
cmp
loop
test
add
rcrb
lock
adc
popf
push
test
xchg
xchg
adc
test
shl
sub
jmp
jmp
mov
mov
xchg
cmp
dec
mov
inc
mov
adc
paddw
sahf
xor
jnp
inc
jo
sbb
mov
out
adc
mov
xlat
sahf
cld
fildll
or
inc
or
sbb
lret
ja
pop
adc
movsl
repnz
es
lcall
fidivl
jg
cmp
xchg
outsl
sbb
xchg
enter
test
lods
mov
sub
add
lds
jl
and
jns
sbb
mov
push
cltd
sbb
lcall
popf
adc
sub
loopne
xchg
sti
mov
or
pushf
inc
scas
xchg
xor
xor
mov
adc
orb
jne
mov
in
es
inc
mov
insb
scas
jo
loopne
mov
shlb
jmp
xchg
mov
sub
divl
pusha
inc
iret
aas
push
aad
mov
jno,pt
out
adc
cwtl
jp
xchg
jns
daa
mov
sub
dec
mov
mov
push
mov
ja
fisubrl
shrb
clc
jno
aas
and
out
aam
test
lock
lret
insb
cmp
adc
xchg
mov
insl
mov
lret
inc
pop
cmp
mov
mov
cmpsl
jns
mov
mov
sbb
and
aam
test
aam
inc
mov
pop
js
inc
cltd
cmp
leave
mov
jo
xchg
in
inc
mov
in
outsb
inc
dec
mov
out
adc
ja
aam
mov
lret
sbb
loopne
pop
je
iret
insb
and
nop
adc
faddp
xor
jp
aas
fiaddl
dec
mov
add
cmp
sbb
nop
mov
clc
ja
push
cltd
add
lods
mov
cmp
ja
cli
mov
subl
sbb
mov
test
scas
push
popa
and
add
adc
push
loope
xor
addb
gs
ss
xchg
dec
or
push
iret
divl
push
mov
mov
push
inc
sub
jg
mov
mov
push
mov
fisubrl
imul
dec
jg
and
sub
mov
push
xor
dec
sti
insl
jae
or
cmpsl
inc
pop
pop
pop
sub
push
jg
cltd
sbb
and
or
dec
pop
add
loope
inc
jnp
out
pop
insb
xchg
out
mov
lock
and
imul
les
imul
pop
or
mov
daa
push
jecxz
xor
or
test
mov
cltd
insl
outsl
xchg
adc
pop
adc
add
rorl
mov
mov
out
push
lret
inc
mov
sbb
adc
ja
push
dec
jae
ds
cmp
sti
inc
dec
sub
ljmp
bound
jle
xor
xor
add
movsb
repnz
shlb
pushaw
jno
and
fisttps
sbb
imul
mov
add
fmuls
fcomip
fnstenv
mov
xchg
add
dec
sahf
lock
daa
imul
stos
dec
jl
repz
fs
nop
test
sti
es
dec
and
pop
int
dec
subb
push
xor
mov
in
mov
push
and
dec
sub
push
test
lret
adc
nop
xlat
xor
add
out
add
push
icebp
mov
loop
jle
dec
ret
mov
mov
mov
mov
dec
push
lock
ja
je
fiaddl
mov
mov
int
cmpsb
mov
pop
xor
jge
sbb
mov
push
dec
jne
cltd
or
adc
xchg
and
sbb
test
jecxz
adc
cmp
loopne
mov
out
push
ljmp
sbb
repz
dec
dec
dec
in
sub
shrl
lahf
negl
dec
icebp
jae
dec
or
push
cmpsl
iret
mov
push
cmp
pop
cmp
mov
cs
cmp
pop
inc
mov
pushf
arpl
aad
movsb
jmp
inc
jl
dec
lods
fldl
mov
dec
pop
movsb
iret
repnz
mov
pop
add
ss
adc
dec
jb
mov
mov
mov
outsl
push
push
adcb
adc
push
mov
jne
int3
mov
sbb
dec
jae
adc
or
pop
mov
mov
out
mov
ljmp
mov
mov
icebp
stos
mov
arpl
push
add
aaa
push
movsb
mov
nop
xor
lcall
sub
add
outsl
sbb
mov
adc
inc
pop
ljmp
cmpsb
jo
test
in
jnp
test
stos
xor
push
pop
fisubl
int
outsl
lcall
fidivrl
or
sarl
or
fsubl
sub
out
sub
xchg
or
dec
mov
out
cmpsl
andl
mov
fnsave
pop
pop
lock
or
dec
xchg
jge
or
push
mov
cld
pop
nop
xor
xchg
mov
fs
and
mov
cmp
mov
sahf
lods
cmpsb
lock
bound
xor
pop
jbe
jo
out
xchg
adc
popf
jmp
push
and
test
lret
or
jmp
jno
mov
xchg
sbb
xor
mov
insb
mov
xchg
pop
lahf
mov
inc
pop
gs
es
xchg
fisttpl
pop
out
divb
in
pop
imul
jno
adc
mov
mov
out
jl
pop
and
pop
push
or
test
pop
jae
dec
jnp
dec
jne
mov
testl
arpl
dec
icebp
add
imul
push
sub
mov
cmp
es
adc
ds
sbb
or
lods
xor
push
mov
lds
mov
jo
dec
outsl
mov
inc
pusha
lods
mov
xor
adc
pop
lods
decl
stos
je
pop
jmp
leave
jnp
jb
ret
mov
add
sub
outsl
ja
rclb
and
jno
pusha
ret
in
cmpsl
add
ja
fidivs
lock
dec
jle
shrl
clc
adc
test
test
inc
pop
into
jae
cltd
xor
aam
sub
mov
int
and
cmp
jmp
fs
mov
inc
mov
cmp
lret
mov
pop
pop
cmp
outsb
fdivl
lea
ljmp
js
hlt
and
std
loope
mov
pushf
jecxz
adc
mov
pop
dec
fs
lcall
push
jae
xchg
sub
sti
fs
jmp
push
mov
sbb
xor
xchg
lods
cwtl
lret
clc
daa
push
lea
dec
shlb
in
scas
rclb
sub
cmc
cmp
jmp
jnp
test
repz
outsb
and
pop
test
xchg
shrl
jp
out
mov
loope
into
sbb
mov
mov
and
les
push
hlt
je
pop
mov
dec
ds
dec
mov
xlat
cltd
sti
in
rorl
jmp
scas
sbb
sub
push
mov
or
add
mov
pusha
repnz
push
mov
xchg
mov
roll
mov
lods
test
cs
subl
iret
test
test
fstl
bound
lock
sbb
or
mov
and
js
movsb
dec
out
aam
hlt
js
add
outsl
inc
arpl
jbe
dec
dec
es
loopne
xchg
mov
mov
dec
repz
lods
cmc
cmp
add
push
int
outsb
pop
sub
dec
mov
sarb
or
inc
scas
add
jecxz
pusha
cmp
imul
orl
imul
clc
mov
mov
mov
xor
inc
jno
push
and
sbb
adc
pop
and
daa
filds
in
push
popf
ret
mov
sbb
inc
mov
dec
ss
pop
jnp
push
sub
inc
test
mov
in
iret
dec
faddp
out
mov
sti
test
mov
push
les
ficoml
stc
mov
pop
push
inc
cmp
inc
cli
adc
adc
out
mov
mov
lds
pop
cltd
xchg
dec
add
stos
push
mov
sub
mov
lock
mov
sbb
cmp
aad
in
jecxz
subl
mov
sahf
push
mov
andb
adc
pop
jbe
mov
cmpsl
sbb
mov
or
sbbb
add
orb
add
and
mov
cmp
jbe
lret
out
mov
push
pop
inc
xchg
mov
inc
sbb
addl
out
mov
dec
pop
cltd
outsl
add
mov
mov
or
je
ss
arpl
insl
ds
xor
mov
push
inc
test
add
jno
push
push
mov
adc
mov
add
fxch
pop
enter
dec
push
rolb
cmpsb
jl
mov
add
sub
fcomi
enter
sub
mov
jae
mov
insb
popf
fs
cmp
std
mov
adc
or
and
sub
adc
psrlq
push
fistpll
mov
cmc
dec
mov
push
inc
lcall
push
pop
das
ds
sahf
jb
mov
mov
out
add
sub
fstpt
xchg
xchg
mov
test
dec
std
fwait
mov
sarl
iret
push
xlat
cmp
iret
iret
push
cmovne
mov
and
cmp
out
and
lods
cmpsb
jmp
pop
scas
mulb
pop
dec
sub
adc
stos
jle
mov
ret
inc
sbb
inc
testl
mov
repz
movsb
mov
and
arpl
outsl
cmp
cmp
rorb
and
or
mov
pop
pop
jg
fistpl
testl
arpl
xchg
into
jbe
adc
dec
aam
jo
orb
lock
in
lret
jns
stc
push
cmpsb
push
cld
mov
sub
mov
out
inc
arpl
mov
daa
clc
nop
pop
mov
add
std
and
jl
xor
cmp
push
adcb
push
cmp
cltd
inc
movsb
pop
into
dec
pop
daa
lods
jge
mov
ja
push
push
sti
repz
cmc
pop
push
jmp
cmp
adc
push
movsl
pop
mov
mov
sbb
out
push
xchg
push
sbb
int3
mov
pop
mov
push
sub
xor
int3
lcall
scas
xor
jae
repz
jg
add
mov
mov
xchg
sub
into
xor
fildll
popa
cmpsb
mov
and
adc
mov
clc
and
push
push
jecxz
mov
stc
xchg
fsubrp
mov
cmc
jg,pn
sbb
sbb
dec
out
mov
cltd
loope
cld
es
repnz
jl
pusha
dec
inc
mov
pop
out
inc
mov
or
fcoml
push
scas
mov
and
and
mov
xor
outsl
repz
jno
into
adc
int3
mov
outsl
mov
adc
mov
dec
in
mov
outsl
xchg
lcall
les
dec
sub
sbb
pop
sub
sbb
mov
mov
mov
data16
lcall
lds
mov
repz
push
jnp
cmp
sbb
xor
cmp
divl
mov
aaa
mov
mov
leave
jns
sbb
pop
mov
push
ja
lcall
fisubrl
loopne
or
add
test
inc
sub
imul
push
jno
loopne
add
ja
mov
test
dec
jmp
ret
cmp
repz
pop
cmp
mov
sahf
cmp
jno
xorb
push
mov
or
and
add
inc
pop
cmp
dec
out
inc
and
jle
adc
mov
dec
sbb
adc
mov
add
push
sbb
outsb
ret
fs
ljmp
push
movsb
sub
pop
mov
mov
das
jg
xchg
pop
repz
fsubrl
pop
or
stc
pop
jg
xchg
pop
ja
and
jno
xlat
jnp
mov
test
and
and
mov
sbb
jo
and
pop
mov
and
pop
dec
mov
mov
inc
mov
mov
ljmp
orl
cmp
enter
mov
pop
int3
imul
int
inc
mov
scas
adc
ja
adc
or
jno
ud0
mov
or
inc
insl
xchg
inc
jbe
xor
test
movsl
js
mov
test
pop
popf
lret
lahf
les
and
mov
lret
jmp
in
lret
repz
shll
int
mov
jb
and
dec
sti
std
push
mov
adc
aas
sbb
jae
xchg
sbb
pushf
ret
jbe
and
scas
ds
sub
outsb
inc
stos
ljmp
ficompl
outsl
lds
adc
add
es
aam
dec
fisttps
nop
mov
mov
cmpsb
and
pop
push
pop
jb
inc
sub
imul
mov
xor
lea
mov
mov
jmp
clc
jle
test
push
push
or
adc
xor
mov
fstl
and
call
cmpsb
jno
xor
cmp
fwait
mov
ja
sub
adc
mov
or
fsubr
data16
push
cmc
test
mov
in
cmp
nop
jl
mov
xor
pusha
out
and
jl
dec
xchg
mov
js
sbb
push
adc
push
sti
pop
imul
dec
fcompl
aas
pop
pop
dec
pop
out
mov
jno
divl
xchg
inc
dec
stos
mov
cmp
push
das
data16
lock
pushl
pop
inc
or
mov
arpl
mov
xchg
dec
cmpsl
sbb
mov
insb
dec
lret
daa
les
jl
fsubl
xchg
orl
jge
push
xchg
fistpl
fs
mov
cmp
pusha
pop
pop
sar
pop
jp
cs
inc
popf
ss
loop
dec
movsl
insb
popa
jno
pop
test
cld
dec
stos
orl
in
clc
je
cmp
cmc
push
into
stc
pop
sarl
dec
test
inc
pop
cmc
mov
lret
add
jmp
jns
jo
jle
orb
pop
lods
or
mov
fldenv
fisubrs
sbb
cmpsb
scas
adc
in
std
inc
aaa
mov
jno
xor
pop
jle
jmp
aad
fisubl
jp
sbb
mov
out
dec
repnz
jb
gs
sbb
cmp
cmpsl
and
mov
xchg
mov
mov
std
cmpsb
es
sub
mov
mov
mov
add
aad
call
and
in
mov
cmpsl
or
inc
sub
js
adc
cmp
sti
mov
pop
pop
mov
mov
mov
inc
mov
movsl
imul
mov
push
dec
pop
sbb
jge
push
shr
adc
add
nop
cwtl
xorb
push
stc
sub
mov
mov
ret
or
jg
aad
pusha
insl
imul
mov
mov
cmpsl
push
shr
fs
andl
add
push
repnz
addl
int
icebp
scas
fldt
jns
jbe
jnp
inc
mov
sub
into
stos
xor
stc
mov
je
mov
push
clc
inc
push
mov
pop
call
test
mov
shl
jg
movsb
sti
out
xor
in
out
cmpsl
lea
xor
inc
mov
movsb
and
add
dec
decl
push
jo
adc
dec
pop
das
jnp
shl
mov
cmp
sbb
push
push
in
xchg
cmp
cwtl
mov
dec
mov
mov
and
mov
pop
dec
mov
mov
out
fmulp
push
ret
out
and
xchg
cltd
cmpsl
push
dec
or
pop
dec
stc
les
aam
cmpsb
pop
ret
cmpsb
mov
fcomp
push
shlb
mov
outsl
test
or
sub
mov
loope
repnz
ljmp
cmp
fildll
push
mov
cs
sbb
push
jmp
aad
testl
mov
jb
sbb
mov
push
mov
dec
mov
mov
fldlg2
mov
das
pop
or
adc
setge
pop
mov
mov
sbb
sub
sbbb
mov
push
movsl
cmp
inc
es
icebp
les
push
jns
sub
jae
mov
rcrl
push
dec
pushf
cmc
cmp
sarl
pusha
dec
push
xchg
fcoml
mov
pop
std
pop
push
mov
orl
jo
test
adc
insl
imul
sbb
lea
mov
shr
or
sbb
and
fnstenv
inc
dec
ljmp
dec
lcall
in
xor
mov
jno
cmp
jmp
sbb
mov
inc
or
add
icebp
nop
bound
add
mov
icebp
push
mov
addr16
mov
xchg
sbb
stc
jp
sub
in
jle
xchg
inc
mov
arpl
mov
push
jg
pushf
movl
jno
inc
nop
dec
gs
mov
inc
out
out
rcrb
lret
roll
lea
lds
or
push
sti
mov
xchg
jbe
rcll
sub
int3
sti
test
es
test
rcll
pop
mov
std
clc
es
mov
xchg
ljmp
fwait
adc
cmp
aad
dec
add
add
jecxz
or
fwait
mov
or
xchg
pop
inc
stc
fimull
and
leave
xorl
arpl
dec
sub
test
jae
push
out
fisubl
sar
inc
pop
les
xor
fsubr
cmp
xor
pusha
and
outsl
xchg
rcrb
sbb
imul
or
fidivrl
cltd
pop
adc
inc
das
mov
pusha
jb
ret
xchg
sbb
mov
mov
mov
push
sbb
or
jle
in
in
add
pusha
pop
fidivl
ds
mov
fld
dec
arpl
into
inc
push
cmp
mov
mov
rclb
cld
mov
pop
xor
loop
rcll
jecxz
mov
dec
popf
call
ja
dec
sbb
xchg
or
js
enter
movl
sub
mov
cmpsl
aad
and
pusha
inc
mov
stc
in
sub
add
inc
mov
add
stos
in
repz
pop
xchg
test
xchg
jns
out
mov
push
or
sbb
fwait
cltd
mov
les
shl
pop
loopne
std
jo
stos
sbb
pop
mov
les
jle
xchg
sti
insb
push
mov
in
insb
test
nop
jg
imul
lods
xchg
dec
add
mov
loopne
decl
fsubp
sti
notb
jecxz
or
and
mov
sti
ds
sub
pop
mov
and
mov
sarb
aas
jnp
mov
fs
fildl
push
xchg
xchg
lods
xchg
lahf
sbb
cli
push
pop
mov
pop
and
ds
imul
mov
fdiv
inc
nop
dec
push
imul
int3
cs
adc
jb
in
imul
test
and
xchg
adc
push
and
mov
negl
in
adc
jae
notb
ja
ja
outsb
ret
jmp
adc
es
cmp
in
cmpl
jnp
in
stc
jno
and
push
push
and
rcrb
mov
pop
mov
sti
stos
or
pop
jg
stos
xchg
repnz
push
sbb
mov
stc
int3
sti
mov
mov
roll
jae
mov
int
xchg
popf
xchg
add
add
popf
cmp
fstps
adc
mov
mov
movsb
push
iret
loopne
outsl
push
lock
cmp
adc
pop
leave
inc
mov
pop
lods
fcmovbe
fwait
mov
inc
inc
cld
and
es
rolb
rcr
mov
loopne
inc
dec
xchg
mov
jae
dec
pop
mov
pop
orl
push
or
cmp
ljmp
pop
sbb
imul
jl
pop
jp
cltd
and
js
outsl
or
cmp
in
mov
out
lret
movsb
cs
outsl
sbb
or
sbb
loope
mov
stos
pushf
pop
push
in
mov
fisttpl
hlt
in
or
and
leave
adc
shr
mov
xchg
clc
and
mov
repnz
mov
je
push
xor
pop
mov
pushf
stos
mov
loop
xlat
out
into
in
add
faddl
inc
mov
arpl
sbb
loope
push
and
into
and
and
ficomps
jl
jmp
int3
sub
mov
repz
movsb
pushf
xchg
adc
push
sbb
cmp
lret
jno
mov
shrb
sbb
sub
xor
ret
mov
cmp
pop
mov
jg
dec
test
cs
cs
outsl
sub
push
dec
rclb
jg
mov
mov
dec
sbb
stos
adc
popf
xor
jne
add
xor
imul
dec
add
stos
dec
mov
inc
out
cmp
or
mov
fisubs
aas
pop
loopne
xor
xchg
stc
sahf
mov
jg,pn
neg
repnz
inc
pop
mov
pushf
call
iret
fiaddl
popa
test
mov
cmp
movb
mov
jl
mov
adc
inc
mov
ljmp
mov
leave
imul
inc
mov
or
jg
lods
push
jp
imul
ja
sbb
rcll
loop
stos
repnz
std
scas
cmp
sbb
test
lret
push
inc
inc
sbb
repz
test
aad
es
and
or
sub
mov
mov
stc
jecxz
pusha
mov
jle
movsl
icebp
sbb
lds
pop
rcrl
push
mov
in
pop
pop
int
cmp
fstps
push
outsb
xchg
mov
or
lods
pop
popa
ret
shlb
cmc
cmc
orb
jmp
imul
cmp
mov
int
dec
lgs
pop
dec
and
js
outsb
jl
pop
shll
mov
mov
pop
add
jae
lret
into
xor
add
stos
imul
inc
sbb
pushf
push
mov
in
lret
push
push
addr16
rorb
daa
lods
in
daa
dec
icebp
fs
pop
rol
repnz
popa
pop
bound
mov
xor
sbb
inc
imul
imul
dec
sub
mov
sahf
rcr
in
roll
repz
push
xchg
les
test
shl
adc
adc
movsl
xchg
les
frstor
mov
push
cli
nop
xorl
in
fwait
push
out
or
pop
cltd
xchg
subl
ljmp
sti
xchg
sub
stc
loopne
test
dec
cmp
mov
lcall
inc
jb
adc
inc
mov
in
test
jo
test
push
sahf
loop
xchg
fldt
fmul
sti
adc
sti
mov
cs
shll
es
push
cmp
into
mov
cmp
fisubrs
push
adc
scas
push
push
adc
adc
popa
sti
pop
out
dec
xor
jmp
je
sub
xchg
push
out
add
ficoml
ss
imul
add
andb
imul
push
pop
mov
jbe
hlt
adc
into
mov
shll
ret
sbb
ja
repnz
sti
cmp
aad
les
sub
pop
jnp
sbb
in
imul
shl
sbb
sti
cmc
jg
pop
or
adc
sub
jae
xchg
imul
les
test
jmp
dec
and
push
jmp
or
movups
sub
ja
jbe
fldenv
mov
lret
cmpsb
mov
jnp
mov
daa
icebp
stos
in
popa
push
rorb
rcr
inc
mov
push
add
pop
and
negb
imul
mov
loopne
jae
cmp
popa
adc
inc
test
mov
es
or
test
into
cmp
notb
sub
or
shlb
cmp
or
cmc
push
pop
pop
nop
sub
jl
jle
push
pop
jmp
mov
xlat
dec
es
test
mov
and
jno
push
in
dec
adc
jg
mov
ja
mov
inc
sarb
pop
loope
fwait
cmc
std
add
xchg
iret
jbe
movsl
dec
xor
xchg
mov
inc
xor
cmpsb
orl
dec
jo
mov
cmp
in
mov
push
and
sub
pop
les
mov
push
sti
pop
pop
push
sahf
dec
mov
ljmp
jne
or
addr16
inc
mov
aad
cmp
push
shl
inc
lret
divb
insl
pop
xchg
xchg
movsb
je
into
jl
faddl
cld
add
out
jle
lds
mov
sbb
and
addr16
test
or
lret
push
mov
xor
sub
dec
mov
mov
fdivrl
jo
scas
jb
and
scas
add
outsb
add
sbb
inc
pushf
mov
out
and
mov
jg
push
cmp
es
xor
sub
xchg
jnp
sub
in
fldt
fcmovb
ficoms
mov
push
cmp
pop
sub
mov
nop
cmp
pop
sbb
stos
cmp
xchg
fnsave
std
dec
pop
xchg
in
insb
daa
lds
mov
insb
lods
jne
dec
jmp
dec
inc
data16
jae
fistpl
test
scas
add
adc
insl
pop
mov
stos
pop
es
pop
dec
xor
push
in
mov
jge
pop
dec
int
pop
xorb
push
mov
mov
cmp
pop
sbb
inc
sbb
pop
fcmovbe
and
clc
ljmp
jecxz
fwait
push
push
jl
push
lahf
outsb
dec
imul
mov
scas
sub
sbb
testl
push
fisubl
cmp
test
push
jae
xchg
pop
jbe
jnp
mov
and
ss
addr16
testl
xchg
add
enter
mov
mov
fidivrs
xchg
bound
pushf
add
andb
mov
enter
or
fs
and
iret
or
setnp
mov
imul
frstor
pop
jl
mov
dec
mov
adc
push
lret
xor
cmp
shlb
cli
testl
lods
gs
push
xor
sub
movsb
fs
jno
lea
and
xor
insl
push
lret
ficompl
adc
into
pusha
cmpsb
cmp
xchg
mov
ds
add
or
or
add
std
leave
push
std
or
sub
and
mov
test
xchg
stc
xor
out
dec
pop
xor
inc
iret
dec
leave
movsb
sbb
and
insb
fs
jae
add
mov
push
movsb
lods
popf
mov
scas
dec
sub
inc
lret
xchg
lods
jno
inc
adc
arpl
cld
cli
jg
insb
jg
je
xor
dec
daa
enter
ret
jae
sbb
mov
mulb
sti
mov
mov
cwtl
test
ficomps
dec
pop
xor
cmp
inc
repz
xchg
dec
addl
ljmp
cmp
cltd
in
jl
dec
loope
xchg
dec
std
dec
jp
mov
push
dec
sbb
outsl
loope
push
mov
lret
xlat
jg
sahf
mov
int3
insl
adc
inc
shlb
aam
cmp
cmpsl
outsb
out
repz
adc
out
add
dec
out
lcall
es
sahf
pop
and
mov
fildl
aam
cltd
lahf
imul
dec
pop
xlat
fdivl
or
inc
enter
jge
add
xchg
pop
push
adc
mov
cmp
out
stos
pop
loopne
jge
loop
mov
mov
add
in
pop
sub
pop
not
push
shll
pop
xchg
pop
jp
lcall
sub
ljmp
pop
mov
fiaddl
mov
push
xlat
lar
test
out
les
inc
pop
xor
bound
sbb
pop
mov
lret
mov
mov
fidivs
repz
and
addb
out
fisubs
xchg
outsb
nop
mov
lret
out
push
in
lahf
cmp
jl
cmp
xchg
fabs
mov
mov
xchg
mov
bound
gs
mov
xor
cmp
lea
mov
mov
or
push
lods
lret
jmp
xchg
push
out
xor
lret
mov
js
nop
adc
sbb
cmc
pop
loopne
ret
xor
cmpsl
and
cmp
or
test
pop
push
decl
das
mov
xchg
pusha
das
xor
sbb
cmpsl
roll
jae
out
mov
cltd
push
fisttpll
pop
sbb
sbb
dec
lret
jb
inc
in
lcall
fsubrl
fcmovb
pop
push
ficoms
sub
int
imul
cltd
cmp
jg
jno
push
dec
shr
stos
cmp
and
mov
aam
rcr
sbb
fs
es
sbb
jmp
sahf
loope
movsb
mov
and
shll
pop
xchg
cli
inc
push
mov
loopne
stos
data16
fistps
lods
xchg
push
sbb
adc
inc
lret
fnsave
popf
push
fidivrl
xor
outsb
add
jnp
dec
movsb
dec
mov
pop
cmpsb
xchg
repz
mov
jp
mov
leave
mov
adc
fldl
push
dec
shr
sbb
cmp
ret
in
cmp
shll
mov
cli
stos
or
nop
sbb
es
lods
or
je
jb
cmc
outsb
fsubs
mov
xor
sbb
mov
mov
mov
push
mov
add
push
or
inc
cmp
ja
fwait
jo
dec
cmp
ficoml
push
dec
ljmp
vpmulhuw
pop
dec
add
dec
arpl
imul
sbb
mov
lods
mov
mov
inc
test
into
jb
sub
jl
cmpsb
les
mov
inc
scas
scas
and
mov
adc
dec
sbb
jo
out
imul
jb
imul
cmp
fsubs
fbld
inc
addr16
cmp
gs
scas
mov
and
imul
sti
jl
pop
sbb
es
call
pop
push
int3
inc
movsb
sbb
dec
rorb
mov
popf
imul
sbb
adc
insl
add
mov
push
mov
int
mov
hlt
cli
out
cmp
cld
pop
push
xchg
movsb
pop
mov
stos
mov
vsqrtpd
loope
dec
jl
test
lods
fwait
repz
mov
dec
cmpsl
fmul
mov
nop
mov
jle
out
mov
cltd
lds
clc
lahf
jnp
je
push
xchg
xchg
into
fistpl
cmp
dec
jmp
dec
push
push
fbstp
mov
stc
inc
fidivrl
push
dec
add
inc
pop
mov
mov
aad
movsb
dec
dec
pop
das
icebp
popa
jae
call
shrl
stos
subb
bound
scas
call
pushf
pop
mov
ljmp
sbbb
pop
in
mov
mov
loope
push
push
jecxz
dec
sbb
js
lahf
mov
iret
cmp
mov
push
dec
cmp
jae
push
pop
sub
in
hlt
loopne
jno
test
out
dec
es
mov
lods
pop
subb
xor
lods
inc
sbb
jl
or
fisttpl
adc
sbb
or
ljmp
movsl
std
popa
imul
mov
callw
push
gs
push
ja
xor
negl
inc
fnsave
cwtl
outsl
fwait
mov
and
daa
mov
sub
aaa
out
mov
dec
jb
and
add
dec
fists
pop
lock
jnp
inc
adc
cmp
movsl
xchg
pop
mov
mov
push
out
arpl
bound
repz
add
in
adc
push
insl
es
cmp
scas
cwtl
ficoml
inc
jecxz
stos
imul
add
sub
int
pop
xchg
imul
fildl
jno
xor
dec
dec
sub
and
dec
call
xor
mov
add
or
xchg
dec
cwtl
mov
pop
push
adc
lods
icebp
mov
cltd
jl
dec
push
cmp
sbb
popf
aam
mov
lcall
cmc
out
aad
xchg
cmp
adc
imul
inc
cmp
adc
mov
adc
into
dec
mov
lret
ss
push
lods
test
test
out
push
adc
repz
daa
push
dec
dec
in
xchg
cmpl
pusha
dec
pusha
js
mov
push
push
movsl
mov
cwtl
lcall
out
xchg
jne
mov
int3
push
movsb
jb
dec
jl
mov
or
xchg
sub
jns
sbb
lea
mov
xor
xor
mov
mov
jle
outsb
pop
shlb
mov
ja
insb
or
adc
daa
negb
dec
inc
push
stos
jg
in
add
loop
dec
and
loopne
pushf
lret
jmp
jno
mov
jl
out
add
dec
pop
test
inc
push
aad
xor
andl
pop
loopne
mov
cmc
mov
fwait
inc
mull
imul
mov
push
repnz
jl
inc
iret
xor
push
mov
ds
adc
push
aaa
pop
sbb
daa
insb
es
mov
sarb
mov
inc
add
jne
push
lret
jns
pop
dec
ret
jo
std
scas
pop
pop
or
leave
scas
add
dec
adc
aas
mov
dec
clc
iret
inc
or
idiv
mov
stc
nop
or
mov
jl
ss
mov
mov
int
adc
and
test
cmc
push
xchg
mov
add
push
add
xchg
and
and
shll
cwtl
divl
cmp
mov
popa
push
pushf
inc
jo
sub
inc
enter
cmp
xorb
mov
fildl
mov
jno
and
cmp
cmc
jbe
jp
dec
addr16
pop
incb
addb
gs
adc
sub
adc
fidivl
or
and
jns
leave
test
jnp
pop
or
add
inc
ret
fwait
or
pop
cmpsb
or
test
jp
fists
hlt
sub
cmc
cmp
mov
mov
rcrb
mov
shll
aas
or
hlt
lds
pop
or
iret
cmp
dec
inc
adc
pop
and
aad
add
cmp
loopne
ror
dec
jb
popa
mov
ds
pop
pop
inc
dec
jnp
popa
daa
cld
inc
mov
lock
pop
sahf
xlat
frndint
pop
nop
in
xor
jle
arpl
int3
push
movsb
out
test
pop
sub
push
push
ss
dec
adc
fwait
repz
fisubrl
enter
ja
in
pop
outsl
and
mov
inc
push
out
mov
or
xor
push
pop
xor
frstor
fdiv
scas
jbe
lods
test
in
js
rol
mov
mov
cmpsl
pop
out
lahf
mov
dec
mov
add
inc
push
das
dec
inc
das
std
push
mov
inc
push
mov
std
pop
inc
dec
mov
cmp
cmp
ljmp
mov
sbb
cmpsb
xor
aaa
adc
dec
xchg
test
pop
mov
sub
xor
inc
test
rcrb
jae
dec
ja
into
or
aas
dec
movsb
cmp
mov
pop
imul
mov
xor
popf
dec
std
mov
add
mov
adc
push
loopne
or
push
or
lock
mov
ret
add
lods
repz
sub
addr16
in
aaa
mov
and
imul
mov
mov
xchg
cmpsb
pop
push
sti
jnp
pop
xchg
add
pop
jle
mov
aam
sahf
enter
out
sbbb
lods
adc
cmpsb
int3
ss
aas
pusha
pop
pop
add
rclb
sub
mov
xchg
std
scas
call
mov
aam
sbbb
sbb
rcl
mov
and
iret
fbld
mov
mov
loope
dec
movsl
cltd
test
or
adc
add
leave
and
sbb
mull
pusha
push
add
mov
adc
mov
xchg
cmp
add
xor
inc
jae
xchg
sbb
fwait
dec
aas
mov
stos
push
xchg
fildl
xor
call
cmpsl
movsb
lock
inc
mov
sarb
shrb
mov
jge
push
gs
sbbl
xchg
add
sbb
mov
lcall
addl
and
fisttpl
sub
std
cmp
add
inc
jns
mov
mov
repz
mov
xor
adc
aam
fisttps
dec
push
std
rorl
mov
add
mov
and
xor
pop
leave
lds
js
fistpll
pop
xlat
mov
dec
pop
pop
fisttpll
pop
sub
mov
mov
mov
sbb
rolb
dec
inc
xor
notb
mov
jne
call
push
pop
push
jns
out
sub
fldcw
call
pusha
les
loop
fcompl
xor
cltd
or
fsincos
inc
adc
adc
mov
push
fwait
lds
ss
add
cmpsl
pop
mov
imul
lahf
clc
adc
inc
cmpl
push
mov
mov
fistpl
repz
jmp
scas
push
lea
cmpsb
mov
add
dec
pushf
xchg
jl
cmp
inc
shll
ja
scas
imul
sahf
mov
test
out
loop
stos
repnz
mov
mov
xor
jmp
pop
push
and
loopne
mov
imul
icebp
add
es
adc
add
inc
push
scas
stc
inc
cmp
ret
scas
mov
scas
into
push
add
push
add
inc
sbb
adc
or
int
movsl
iret
clc
push
lods
adc
sbb
imul
aas
dec
cltd
in
mov
fsubr
mov
mov
je
out
dec
scas
sti
inc
fidivrl
cmp
out
adc
addl
sub
mov
mov
mov
xlat
push
aas
cld
jl
add
and
ret
lret
gs
sbb
inc
lock
jle
sbb
inc
mov
dec
push
les
fimull
pop
inc
adc
adc
repz
and
loop
adc
inc
jl
inc
lahf
mov
pop
mov
out
arpl
or
jl
scas
xchg
mov
jg
xor
xchg
jecxz
sbb
adc
cmp
imul
fiaddl
test
mov
test
std
push
dec
div
lods
movsl
pop
push
adc
jnp
ja
sti
test
lods
or
pop
je
imul
xchg
inc
mov
rorl
imul
push
rclb
cltd
nop
dec
scas
leave
ficoml
loopne
jle
xchg
shll
pop
mov
imul
sti
xchg
dec
mov
stc
and
adc
push
loope
pop
push
in
icebp
fwait
in
stc
insl
stos
jmp
popf
sub
xchg
scas
leave
pop
mov
repnz
mov
cmp
ds
mov
mov
push
into
ja,pn
mov
ret
mov
cmc
add
testl
es
movsl
pop
mov
xor
mov
jmp
imul
mov
xchg
insb
mov
movsb
cmc
fwait
jnp
sbb
push
and
mov
or
xchg
adc
mov
leave
out
iret
sahf
jmp
rorb
insb
mov
in
add
mov
xlat
pop
loop
mov
cmp
pop
sbb
gs
popf
jo
in
mov
xchg
in
xchg
cmpb
fstl
adc
iret
mov
mov
into
enter
or
ljmp
inc
test
fnstenv
mov
mov
cmc
int3
popa
xor
mov
clc
scas
enter
pop
cmpsl
xchg
pop
insl
es
inc
int3
je
out
mov
ljmp
sub
mov
jno
xchg
adc
fisubrl
loope
xchg
jo
push
aaa
pusha
ret
fs
or
std
xchg
jl
orl
lcall
or
push
jecxz
mov
mov
and
pop
add
fildl
sub
mov
push
inc
inc
ret
enter
add
loope
xor
orl
push
mov
div
in
out
cmp
xor
and
fsubrl
jae
test
lea
dec
das
cmpsb
jnp
mov
pop
mov
stc
jbe
push
orb
xchg
out
pop
lcall
in
loopne
popa
movsl
fmuls
inc
push
mov
clc
out
sarl
xchg
jno
jbe
push
hlt
test
pop
imul
and
sahf
ror
mov
pop
lods
mov
sub
ret
pop
mov
adc
or
stc
mov
iret
sub
lock
std
inc
pop
inc
dec
jb
lcall
rcll
mov
add
into
jecxz
ljmp
movsb
repz
and
jecxz
adc
dec
iret
cmp
insb
jp
mov
dec
xor
iret
jo
pop
mov
movsl
rclb
xor
repnz
jecxz
fildl
jbe
pop
inc
push
push
in
inc
lea
pop
mov
mov
fwait
orl
mov
arpl
mov
xchg
fidivrs
sbb
repz
sub
imul
sub
mov
push
xchg
or
and
loope
pop
push
lods
mov
clc
dec
ret
pop
and
inc
mov
jo
out
das
out
daa
mov
jo
and
sub
dec
nop
and
fisttpll
ret
sti
push
cmp
adc
and
dec
inc
inc
pusha
mov
sti
inc
ret
idivl
ds
jp
dec
mov
push
dec
cmpsb
adc
arpl
adc
xchg
add
pop
jecxz
mov
loope
cwtl
cs
push
mov
fidivl
jno
xchg
push
cmp
pop
jge
cmp
jae
add
loopne
and
fwait
mov
pop
ret
testl
call
jge
sbb
inc
push
pop
scas
and
add
fisttps
out
shlb
cld
in
mov
lret
sub
ret
cmp
inc
aad
jmp
ljmp
xor
pop
jns
push
inc
lcall
push
cmp
sbb
jmp
ljmp
jecxz
mov
sub
sub
mov
stos
jmp
int
mov
std
imul
mov
mov
inc
or
pop
inc
dec
inc
andb
adc
inc
jl
cmpsb
outsb
push
fildl
mov
repnz
jmp
jecxz
pop
lds
mov
mov
sub
out
pop
sbb
pop
add
das
repnz
lock
ja
test
dec
inc
stc
cmp
mov
insb
mov
ja
lahf
dec
add
cmp
xor
and
bound
int
inc
pop
pop
cmp
or
mov
push
std
rcrl
xchg
or
xor
ret
dec
pop
orl
jg
or
xchg
mov
xor
fcomps
jge
jae
clc
cmp
in
rorl
lcall
int
int3
mov
cltd
push
inc
and
out
je
aaa
pop
testl
adc
scas
push
sub
dec
subb
dec
sbb
mov
mov
mov
je
jl
je
jb
in
push
cmp
xchg
cmpsl
fistpl
out
loop
test
xor
inc
fwait
std
jmp
decb
add
xor
xchg
jl
mov
rcll
mov
xchg
enter
jnp
pop
shl
sbb
aam
or
shr
imul
mov
rcll
adc
shrb
dec
push
mov
ljmp
mov
mov
fdivl
es
cmpsl
xor
mov
inc
dec
inc
cmp
dec
ret
movsl
les
je
mov
mov
sub
movsb
sbb
sub
xchg
ljmp
ljmp
mov
shrb
cwtl
fs
sahf
xchg
dec
inc
xor
jle
or
pop
jmp
mov
pop
and
xchg
xchg
ja
mov
push
mov
sahf
pop
nop
and
mov
fisubrl
mov
adc
mov
push
ljmp
cld
lret
stos
addr16
mov
jg
loopne
xlat
mov
or
add
mov
pcmpeqw
imul
mov
out
fwait
inc
mov
mov
test
fisttpl
into
ja
push
xchg
jno
imul
iret
adc
sub
ficompl
mov
sbb
movsl
dec
sub
lods
sbb
pop
ds
adc
or
and
fsub
dec
mov
repnz
xchg
andl
test
push
jnp
add
jb
push
mov
lods
lock
xor
cmovbe
inc
inc
cmp
int3
clc
sub
pop
iret
inc
stc
fnsave
repz
aam
sti
dec
ljmp
scas
pushf
pop
outsb
jg
dec
push
or
inc
mov
test
mov
jmp
mov
adc
push
mov
fucomi
cltd
mov
jo
jp
xor
clc
icebp
in
pop
push
mov
xchg
sbb
dec
or
stos
movsl
mov
dec
add
imul
fistpl
jb
mov
dec
add
or
sbb
jo
cmpsb
xchg
dec
sub
jp
fisttpll
and
shrb
not
or
mov
jecxz
add
dec
push
cmp
mov
dec
loope
sbb
adc
mov
pop
outsl
inc
dec
in
mov
add
sbb
sub
insl
icebp
adc
mov
ja
call
sbb
cmc
es
jno
mov
filds
cmc
cmp
js
sbb
jp
scas
dec
shll
cmp
pop
mov
xor
inc
and
daa
jno
mov
inc
xor
callw
inc
or
insb
pop
add
add
inc
fadd
sahf
xchg
mov
mov
mov
xor
dec
scas
inc
xchg
pop
add
hlt
shl
xchg
sarb
sysret
or
fwait
mov
stos
sbb
scas
pop
es
popa
xchg
jl
mov
out
jb
or
int
push
dec
test
pop
fisttpl
sub
mov
rcrl
loop
orb
icebp
fnstenv
push
shl
mov
hlt
jno
fwait
adc
lea
aas
inc
pusha
jmp
lret
dec
pop
jmp
shrb
sbb
pop
mov
je
mov
push
pop
push
cmc
pop
dec
mov
fs
loope
pop
loopne
mov
sub
imul
mov
sarl
add
fwait
sarl
loope
xor
aas
jb
fdiv
decl
out
popf
push
les
test
dec
xchg
mov
cmp
enter
fldenv
fldenv
xchg
jmp
mov
fisttpl
xchg
jg
mov
mov
inc
insb
sub
mov
mov
insl
popa
rorb
mov
mov
cmp
rorb
mov
jecxz
sbb
add
add
repnz
jno
out
xor
in
idivb
ret
pop
sub
in
push
mov
dec
sub
jl
gs
mov
test
xchg
in
fisttps
xor
adc
nop
mov
mov
outsb
insb
stos
ss
jo
orb
ja
icebp
fldt
out
dec
rol
orb
mov
mov
xchg
push
data16
sub
push
lods
fldt
sti
aad
dec
lods
add
pop
mov
sbb
jl
test
jno
xor
andb
fdivl
call
or
jl
mov
in
and
jecxz
mov
pop
mov
push
fimuls
loopne
lea
push
mov
lock
hlt
pop
dec
pop
cwtl
sbb
repz
int3
cmpsb
push
mov
lea
jle
fdivrs
fisubrl
inc
idiv
xchg
fnstsw
xchg
movsb
roll
sub
fsubrl
jnp
mov
movl
fstpt
cmp
inc
adcl
sbb
jns
sub
int3
cs
mov
dec
or
jo
or
or
dec
cwtl
adc
cmp
mov
jno
jnp
mov
jmp
jno
incb
mov
sub
fcomp
xchg
jno,pn
push
xor
jns
mov
out
push
pop
fisttpll
shrd
ss
xorb
cmpsl
xchg
or
xor
dec
jno
cltd
test
sahf
mov
xor
ret
insl
dec
ss
mov
and
inc
fists
movsl
pusha
pop
jmp
inc
mov
pusha
aam
and
inc
push
sub
mov
and
insl
dec
add
loope
data16
add
stos
pop
ljmp
subb
insb
sub
push
into
fnstenv
sub
lret
rolb
cltd
in
shll
mov
add
lcall
or
add
mov
in
popa
pop
push
faddp
jg
mov
int
jle
cmpsb
imulb
pop
sbb
std
cld
popa
jns
push
loop
push
mov
ljmp
dec
push
fwait
pause
pop
jnp
adc
xor
ss
jmp
iret
jno
xchg
int3
jbe
inc
cmpsl
fmul
xor
pop
mov
push
dec
loop
or
fwait
mov
adc
mov
aam
addr16
xor
fnstsw
outsl
movsl
jnp
mov
iret
or
jp
daa
and
pop
mov
inc
jg
in
aad
cmp
jno
fiaddl
stc
pop
mov
stos
sbb
fnstsw
push
and
inc
gs
fistps
sub
loope
cmp
movsb
jecxz
out
dec
stc
mov
lahf
mov
push
stos
push
rcr
sbb
jle
adc
xchg
lret
sahf
repz
pop
sbb
cmp
xor
lret
dec
movsl
dec
out
in
push
fildl
mov
testb
or
mov
lret
sbb
fists
orb
xchg
jle
std
mov
fsubs
ja
out
enter
ret
pop
jns
sahf
repnz
dec
rclb
mov
mov
repz
adc
mov
iret
sbb
out
pop
fs
sub
adc
adc
sarb
insb
mov
testb
jge
fldcw
enter
pop
dec
aam
lret
push
test
sub
sbb
test
sub
jl
mov
aas
and
mov
ret
push
std
mov
imul
push
and
xchg
inc
dec
nop
je
cmp
add
mov
js
lods
ficoml
fwait
movsb
sbb
pop
cmp
into
adc
pusha
mov
mov
jl
popf
dec
popa
lea
add
xor
pop
mov
sahf
jle
int
lods
mov
les
pop
mov
or
cmp
ljmp
mov
cmovp
imul
cli
jg
js
cmp
pop
xchg
add
cmpsb
std
sahf
mov
fnstsw
lahf
pop
dec
lds
call
push
shr
cld
mov
jl
out
fs
insb
cld
out
dec
in
jl
cwtl
mov
std
repnz
mov
jecxz
sti
mov
pop
cmpb
xchg
int3
mov
dec
cwtl
inc
dec
jno
cmpb
cmc
or
mov
ja
shlb
pop
call
cmpl
out
jno
lods
std
lret
imul
shll
data16
push
imul
cmpsb
ror
add
cmp
hlt
mov
div
out
sub
clc
imul
pop
xchg
fildl
inc
xchg
dec
clc
fmuls
loope
subl
pop
fcomps
push
fwait
mov
fimuls
stos
inc
add
dec
scas
pop
sbb
rcr
out
mov
cmp
jl
pusha
cmp
adc
xchg
or
sbb
push
test
inc
es
lret
leave
inc
mov
dec
stos
pop
fwait
daa
lods
add
test
das
cltd
jl
xor
fdivrs
mov
push
push
mov
lea
sbb
xchg
movsl
test
or
aas
ljmp
shl
popl
pusha
or
sub
mov
pop
or
insl
cmpb
shll
mov
xchg
xor
jbe
in
cmp
fists
repz
xor
decl
repnz
xchg
mov
xchg
jae
jp
enter
xor
adcb
push
cmp
js
pop
add
int3
in
jl
test
adc
or
xchg
pusha
sbb
sub
adc
fisttpll
adc
mov
xor
inc
add
inc
sbb
mov
ret
imul
sbb
mov
in
lret
jmp
add
mov
push
and
mov
aam
xchg
mov
mov
js
aad
repz
cmp
mov
sub
popf
jle
int
cltd
mov
sub
insl
cwtl
popa
pop
arpl
jae
xchg
xor
dec
jbe
xlat
jae
mov
loope
fistpl
rcl
add
jg
dec
movsb
xchg
insl
iret
fdivrl
mov
sti
inc
addb
mov
push
iret
mov
dec
divl
lahf
xor
scas
pop
stos
rorb
dec
cmp
stos
imul
sub
pusha
mov
xor
lock
jno
lcall
sbb
inc
ficoml
lahf
int
scas
inc
adc
fsubr
push
outsb
or
dec
and
xchg
mov
add
mov
out
call
lods
shll
ja
dec
mov
test
jae
scas
mov
fs
clts
adc
inc
out
xchg
es
or
int
lahf
pusha
pusha
mov
imul
or
mov
fistpl
insb
orb
mov
push
insb
sub
pushf
xlat
and
adc
mov
sub
push
ja
fs
mov
pop
mull
cwtl
stc
cmp
movsb
in
std
pop
adc
imul
test
mov
dec
or
lods
cs
into
aam
ja
push
add
roll
sub
jnp
push
out
mov
test
add
jg
sub
aam
mov
xor
add
pop
mov
int3
pop
mov
add
lods
and
mov
cld
out
mov
xchg
mov
mov
mov
imul
stc
mov
jecxz
fisttpll
xchg
mov
pop
les
sbb
jle
inc
fistl
mov
add
into
sbb
das
notl
bound
or
cmp
je
and
in
sbb
mov
ret
add
push
jg
clc
es
lahf
dec
add
movsb
xor
ret
pop
cmp
incb
jl
sar
mov
inc
pop
popf
push
cltd
mov
repz
icebp
pop
fs
pop
ret
inc
je
cmc
test
jp
pop
xchg
sub
sbb
and
out
stos
inc
mov
stc
sub
fbld
pop
mov
sub
enter
push
adc
ja
ja
sub
pop
jo
fwait
inc
call
pop
or
fisubrl
mov
add
sti
or
dec
test
iret
jno
xor
repnz
cmc
les
rolb
inc
xchg
cmp
or
lea
lods
mov
dec
cs
jl
mov
push
or
shr
push
adc
push
xchg
rol
js
push
stc
adc
stos
inc
sbb
lcall
push
xor
loopne
mov
xorl
imul
pop
add
or
es
jnp
shlb
dec
je
shll
pusha
sbb
cmp
xor
sbbb
je
xor
arpl
pop
or
xor
fs
icebp
or
orb
xor
mov
inc
or
shl
mov
dec
icebp
add
fdivrl
add
jl
mov
pusha
mov
push
pop
inc
add
ret
xchg
aas
int3
mov
cmpsl
adc
ret
push
mov
mov
add
idivl
sub
dec
cmpsb
push
adcb
mov
add
fwait
push
bnd
sbbl
mov
jbe
add
mov
sbb
mov
dec
pop
rolb
and
aam
std
xor
adc
test
jl
cmpsb
and
sub
movsb
jg
adc
dec
cmp
or
inc
mov
dec
dec
mov
dec
arpl
inc
jnp
adc
loopne
and
mov
outsl
sub
mov
mov
add
cmc
jb
inc
mov
mov
jb
add
cltd
or
jl
je
cmpsl
stos
fidivl
movsl
scas
push
inc
lds
mov
xchg
inc
stos
movsl
movl
push
mov
test
jecxz
fisubl
loope
dec
cmpsb
push
add
ficomps
push
xor
loopne
ret
out
fcomps
out
inc
mov
leave
loopne
mov
xchg
cli
inc
jns
xor
adc
in
lock
cltd
movsb
add
adc
into
ds
mov
aas
dec
mov
test
jnp
jo
pop
es
cmc
dec
ja
push
xor
mov
pop
rorl
cmpxchg
in
add
push
jl
in
push
pop
jecxz
adc
push
push
iret
gs
es
fs
fwait
and
outsl
fistpl
jmp
stos
stos
pushf
mov
mov
push
inc
lcall
imul
jp
mov
data16
sbb
rorb
push
stc
test
cmp
stos
xor
ficompl
lret
dec
insl
scas
sub
shr
mov
jnp
cmpsb
ret
test
ja
mov
inc
mov
ljmp
mov
in
or
cmc
cwtl
rcrl
std
repz
xor
mov
lcall
jg
pop
or
es
into
cmpsl
lea
in
lret
sti
xchg
insl
lods
mov
idiv
push
ds
mov
sub
add
adc
inc
ljmp
inc
push
pop
decl
std
mov
mov
jae
adc
xchg
loope
xchg
push
cmp
or
pop
mov
sbb
sarl
or
iret
lock
jg
je
mov
push
push
mul
cltd
push
scas
xchg
pop
mov
clc
out
pop
and
test
jb
inc
decl
je
imul
in
outsb
xchg
xor
jbe
nop
out
add
push
arpl
cmp
xorb
pop
clc
pop
les
loopne
push
mov
popf
jge
rclb
xchg
cmc
cmc
std
fwait
dec
fs
fnstcw
mov
sbb
push
mov
mov
and
xor
stos
mov
lds
sbb
push
mov
xchg
jg
mov
adc
mov
adc
sub
cli
fiaddl
dec
ss
mov
sahf
adc
mov
add
das
mov
outsl
gs
xchg
stc
fidivrl
cwtl
inc
push
pushf
ljmp
decl
mov
jae
mov
pushf
jno
or
out
mov
fmulp
mov
mov
jbe
outsl
adc
js
adc
jg
icebp
nop
xor
inc
mov
cwtl
pop
and
or
clc
popf
jmp
ljmp
jge
nop
loopne
jmp
lea
mov
std
cmp
movsb
out
arpl
daa
jg
mov
xchg
xor
fs
add
fisubl
mov
stc
std
dec
push
rolb
out
in
int3
sbb
out
xchg
inc
cld
dec
inc
ds
dec
stos
mov
arpl
mov
scas
xchg
pop
jle
pop
mov
ja
mov
mov
repnz
xchg
cs
lods
cwtl
push
pop
mov
inc
dec
xchg
out
cmp
js
and
fnstcw
outsl
mov
sub
gs
sbb
mull
fwait
sbb
dec
adc
sbb
mov
jg
sti
pop
inc
sub
mov
ja
dec
and
jae
mov
mov
imul
cmp
shl
fisttpl
ss
push
insb
shll
out
mov
cltd
cmp
jnp
movb
loop
ljmp
jae
inc
hlt
dec
test
outsl
push
pop
divb
xor
mov
ja
add
mov
inc
fwait
jmp
nop
cmp
repz
cmp
shll
mov
push
push
out
mov
jno
mov
insb
clc
aad
inc
or
push
insb
and
hlt
pop
icebp
ja
inc
lods
mov
jl
cmp
insb
in
icebp
fidivl
sub
dec
xchg
fistl
andl
or
icebp
sbb
inc
arpl
out
ficompl
lcall
mov
add
jp
rclb
mov
or
jl
xlat
ljmp
std
arpl
cmp
cmp
fwait
inc
mov
mov
mov
dec
scas
dec
add
repz
dec
xchg
orl
enter
shl
dec
add
jo
or
push
push
cmp
mov
push
lods
scas
movsb
push
shl
mov
xchg
jne
sbb
cmp
test
and
or
jns
mov
dec
fwait
cmpsb
sbb
inc
or
push
cli
mov
push
addr16
fisttpll
cmp
ljmp
mov
add
add
cmp
test
sbb
push
aad
push
mov
data16
mov
rcr
push
jg
aaa
das
pop
dec
enter
xor
fisttpl
popf
pop
rcr
dec
add
mov
rorb
push
lea
fucomip
ret
adc
sbb
jmp
add
sar
dec
inc
cmp
fists
jno
fisttps
btr
inc
add
mov
out
cmp
fsubr
shll
mov
push
das
adc
dec
shlb
jo
lret
in
fdivr
in
ret
sahf
cmp
mov
ds
in
icebp
or
int3
fs
mov
iret
out
inc
fiaddl
xlat
jno
sahf
push
mov
pop
inc
repnz
lods
push
adc
rolb
jno
mov
hlt
cmp
int3
out
in
popf
insb
fbld
shlb
pusha
fwait
std
mov
and
pop
int
push
jne
sub
insl
inc
mov
cli
jbe
test
popf
out
dec
lret
mov
jg
add
sub
in
fwait
pop
stos
testl
aad
mov
mov
fistpl
je
fimuls
mov
cmp
sar
pop
jnp
in
add
or
lcall
push
cmpl
push
mov
aam
pop
shll
push
or
sub
idiv
ljmp
iret
movsl
xchg
mov
mov
sbb
or
xor
mov
mov
adc
call
imul
fisttpll
cmpb
push
push
jg
insl
adc
lods
and
movsb
sbb
loopne
xchg
inc
sbb
fucom
std
movsb
cwtl
push
mov
ja
fcoml
mov
mov
cltd
orb
pop
or
pop
pop
and
in
fnstcw
sub
iret
xor
mov
and
inc
dec
ret
cmp
sbb
inc
std
sti
test
mov
jmp
mov
jne
push
push
dec
les
cmc
outsl
pop
pushf
clc
cs
add
loopne
push
iret
ljmp
jbe
adc
or
or
fidivrs
shr
frstor
cld
lret
inc
bound
shll
imul
iret
pop
and
mov
sbb
pop
sahf
push
mov
jl
inc
mov
idivb
mov
js
cmpsb
dec
out
adc
clc
and
mov
push
cmp
adc
mov
sub
cmp
cmpsl
test
jge
sbb
imul
jbe
imul
and
enter
push
inc
lods
cmc
push
mov
into
sub
fidivrl
jnp
dec
imul
mov
lods
inc
fwait
sbb
mov
pop
lds
push
jmp
adc
fiaddl
push
push
fwait
xor
ja
adc
into
fiaddl
mov
adc
push
push
jp
or
jb
pop
fistpll
sbb
loop
pusha
or
sti
jp
add
pop
aaa
testb
mov
movsl
or
mov
adc
cmp
in
jmp
mov
dec
cmp
outsl
repz
in
iret
adc
mov
pushf
push
aas
or
das
cli
inc
out
ljmp
or
les
inc
test
or
testl
adc
ret
pusha
dec
inc
outsl
insl
lds
pop
pop
or
cmpsb
out
pusha
dec
movsl
pop
inc
pop
rolb
cmp
xor
push
mov
cmp
mov
shrl
cltd
push
pushf
and
xchg
out
mov
mov
inc
cmp
mov
aas
jne
jl
or
cwtl
and
push
and
call
xorb
cmp
in
mov
cwtl
rcr
mov
addr16
fildll
lea
jne
sti
and
cwtl
sbb
pop
sbb
sbb
dec
mov
push
jmp
hlt
cmpsb
push
jge
adc
mov
mov
and
jb
addr16
adc
mov
or
lcall
mov
push
je
push
add
cwtl
cmpsb
adcb
fdivr
and
add
ret
xchg
fmull
xchg
ljmp
push
add
rorb
ds
aas
std
fs
das
cmp
mov
xor
jle
dec
or
or
into
jo
mov
push
cmc
out
sub
fwait
jge
push
sbb
fldcw
shrl
out
pop
cwtl
inc
lahf
inc
in
xor
inc
push
scas
mov
xor
cmp
xchg
cli
repz
mov
inc
cmp
adc
cwtl
es
aam
mov
pop
dec
aad
jl
cmpsb
decl
sar
fwait
sbb
lds
ret
inc
pop
and
int
mov
push
mov
lds
pop
cmp
outsl
sbb
shlb
fistpl
insb
cwtl
syscall
lods
mov
mov
popf
mov
mov
cld
xchg
mov
and
std
jmp
mov
lret
pop
ja
and
sbb
lcall
xchg
dec
cwtl
pop
ljmp
fisttps
add
nop
dec
jbe
adc
ss
inc
ret
inc
push
sub
stc
jmp
imul
pusha
pop
inc
cmp
push
jae
mov
in
mov
sub
xchg
or
xchg
sbb
sub
mov
icebp
pusha
dec
xchg
mov
fimull
sbb
sbb
push
mov
int3
in
rcr
add
mov
xchg
fcoms
cmp
jg
jl
pusha
ds
or
test
jecxz
icebp
and
lcall
in
aas
lds
xchg
cmpsb
mov
pcmpgtb
pusha
fistps
jp
xor
xor
pop
dec
fnstcw
rcll
push
repnz
scas
push
sbb
xor
stos
pop
or
mov
scas
push
das
mov
or
inc
add
ret
jmp
and
rcrl
scas
xchg
mov
js
mov
push
sub
aas
push
and
push
fistpll
pushf
inc
jmp
les
out
pop
sub
jo
hlt
pusha
movsl
les
cmp
sbb
scas
jnp
inc
pop
mov
stos
cli
push
and
adc
dec
or
and
pop
filds
dec
sub
fsubrl
loope
pop
es
fisubs
xor
leave
xchg
mov
jl
mov
cltd
ds
fidivrs
pop
sarb
rclb
jnp
ss
jp
or
into
sub
adc
inc
push
jnp
mov
or
xchg
mov
ret
mov
gs
imul
nop
cmp
js
rolb
add
insb
stos
pop
enter
xor
jg
fidivl
push
mov
xlat
xor
out
xchg
dec
mov
xchg
fwait
pop
arpl
mov
fs
clc
cmpb
sub
fldl
rolb
dec
gs
addr16
leave
int
cmp
jmp
sarb
popa
push
pop
std
lods
lds
xor
int
pushf
nop
push
mov
fsubs
and
outsl
mov
sbb
ret
mov
insl
fidivl
mov
jg
mov
daa
cld
gs
adc
jg
pushf
mov
pop
loopne
repz
repz
mov
mov
data16
loopne
mov
fwait
inc
dec
jbe
ja
jle
fwait
mov
test
push
ljmp
mov
inc
inc
and
push
loopne,pn
icebp
push
cld
sub
fiadds
jge
rorl
push
nop
dec
push
incb
sbb
mov
pop
pop
mov
pop
outsl
fbstp
cs
gs
das
sub
pop
imul
movsb
loop
rcrl
notb
test
cmp
int3
sbb
or
movsb
dec
pop
jb
push
sub
cwtl
fcmovbe
and
fimull
adc
cmp
pop
jge
dec
push
pop
pushl
es
xor
mov
inc
ja
mov
cmp
lret
test
jp
pop
and
into
rorl
add
decb
popa
test
shlb
cmp
cmc
jge
test
xor
js
push
lds
cld
jg
insb
test
das
inc
and
cld
push
shrl
mov
popa
cmpsb
jb
fidivs
mov
xchg
or
or
push
jl
pop
shll
mov
lods
push
cmp
lods
inc
or
cmp
add
leave
mov
mov
cmp
mov
xlat
lret
xchg
lcall
in
xchg
lret
jae
dec
inc
lcall
fwait
sbb
lret
out
lahf
sbb
jge
stos
hlt
push
sub
mov
fisttpll
dec
pop
shlb
popa
lret
lret
mov
add
jo
rcl
call
fsubrl
cwtl
add
loopne
jo
sbb
pop
sti
test
imul
fwait
push
push
dec
pop
sbb
jno
adc
pop
lret
add
jne
jo
dec
divl
mov
sbb
mov
sbb
icebp
fwait
jmp
dec
lret
addr16
iret
cli
push
mov
adc
xor
hlt
pop
shlb
ja
das
mov
pop
adc
sbb
es
test
push
add
dec
ficoms
insb
movsb
and
fdivl
mov
mov
jmp
xor
ret
mov
cmp
push
mov
sub
mov
inc
ljmpw
push
or
dec
mov
dec
testb
testl
jb
sub
sub
cmp
jnp
out
push
push
pushf
lahf
outsl
push
cmc
fbstp
jle
loop
xchg
ret
lock
sbb
add
jecxz
outsl
fwait
arpl
lock
inc
lea
and
int3
sti
imull
xchg
in
es
test
pop
xlat
or
xchg
push
sub
jnp
inc
and
mov
in
adc
mov
lahf
xchg
leave
clc
fwait
loopne
fdivp
jo
dec
adc
jb
xor
or
pop
std
mov
lret
jl
cmp
jno
sbb
dec
mov
xchg
mov
push
cmp
ja
adc
mov
mov
popa
pop
and
adc
jns
inc
xor
out
sbb
xlat
mov
shl
dec
jl
cltd
cmp
stos
imull
dec
xchg
mov
dec
ret
mov
pop
jl
jle
insl
dec
cmpsl
int3
mov
fists
cmc
icebp
jnp
test
stc
scas
push
push
sbb
xchg
push
sub
jns
adcl
adc
mov
in
inc
int3
dec
call
int3
mov
jp
cmp
pushf
es
inc
jbe
sti
ja
xor
xorl
cmp
mov
push
lret
and
js
stc
in
inc
pop
cltd
pop
mov
fidivrs
mov
out
gs
push
pop
dec
jle
loopne
fs
sub
pop
jo
jmp
pop
xchg
jnp
nop
ljmp
jns
fdivrl
stos
pusha
inc
not
mov
dec
pop
jns
jl
scas
popf
xlat
mov
movsb
pop
mov
stos
imul
mov
fnstenv
mov
icebp
add
fwait
or
leave
or
dec
cmp
mov
dec
into
enter
cmpsb
inc
add
sbb
mov
mov
push
push
or
cmp
out
inc
pop
xchg
xchg
mov
dec
inc
sbb
nop
xchg
mov
inc
sub
mov
mov
into
lahf
dec
std
xchg
stos
scas
nop
inc
or
addr16
jnp
sub
cmc
sbb
lahf
jmp
jb
sub
loope
mov
push
dec
sbbl
test
cmc
lock
cmpb
push
cli
in
xchg
pushf
pop
or
jns
sub
into
cltd
adc
cmp
in
mov
or
stos
dec
daa
sar
add
jbe
pusha
lods
inc
call
jbe
adc
mov
pop
ss
out
pusha
popf
cwtl
negb
pushf
stos
mov
mov
or
sbb
adc
xchg
out
in
sbb
or
xor
cmpsb
add
mov
cmp
popf
jl
and
inc
dec
xchg
ljmp
xor
inc
add
adc
std
dec
lods
lods
jmp
push
aam
mov
xchg
fwait
out
adc
mov
and
push
movsb
xchg
ds
repz
adc
jae
inc
addb
adc
xor
push
cmp
pusha
sbb
decl
jnp
mov
test
cli
inc
or
sbb
aam
cld
stos
mov
or
in
addb
fidivrl
aas
adc
pop
or
mov
mov
dec
mov
push
pop
mov
in
mov
or
iret
adc
and
push
sub
shl
jle
adc
pop
andb
inc
insl
pushf
lds
int
mov
fyl2x
test
inc
xorl
pop
notl
cmc
scas
dec
dec
inc
mov
in
dec
roll
std
es
rorb
aad
mov
fnsave
cwtl
iret
pop
mov
jae
mov
adc
dec
outsl
xorb
daa
jae
jbe
or
pop
and
adc
sbb
cmp
jg
xchg
cmc
ret
sbb
sub
rorb
push
push
icebp
mov
ja
mov
fldt
add
popf
mov
aad
cmp
mov
mov
pop
repnz
ds
cmovl
inc
cltd
mov
imul
in
mov
negl
cltd
mov
push
cltd
and
rorl
stos
lock
push
in
push
push
jge
mov
dec
loop
jnp
enter
data16
cwtl
inc
cmp
and
xor
dec
out
movsb
jge
imul
push
mov
mov
dec
inc
xchg
aam
push
mov
adc
inc
mov
add
pop
xor
sbb
decl
dec
lods
dec
or
fwait
mov
fldt
and
mov
mov
jne
adc
sti
mov
cwtl
adcl
sbb
aaa
lock
fnstsw
add
mov
std
shr
pop
nop
cmp
mov
add
out
pop
add
fisubl
and
imul
inc
jns
scas
push
les
mov
rorl
cs
or
clc
in
mov
das
mov
xor
jne
cmp
mov
popa
mov
lret
or
xor
mov
jl
out
cltd
push
dec
out
push
xchg
pop
aam
mov
sub
ret
sbb
and
mov
lods
pop
dec
mov
sbbb
mov
mov
mov
je
stos
mov
fsubrs
cmp
xchg
jne
sbbb
ret
and
ljmp
xchg
pop
cltd
cli
cmp
mov
aas
lods
and
push
inc
insb
mov
inc
and
int3
pop
rcrb
mov
sahf
jl
pop
std
sub
cmp
negb
push
popa
dec
mov
cli
push
rorl
mov
sub
jg
dec
mov
jne
cmp
fwait
push
jmp
push
or
mov
inc
and
div
push
hlt
adc
push
rcll
jnp
loop
stos
stos
imul
fwait
std
push
cmp
arpl
push
jmp
mov
icebp
fwait
imul
cld
lds
orl
sbb
cmp
jbe
repnz
add
stos
mov
loop
inc
ficoms
jbe
sbb
ds
aad
cmpsb
sarb
xorl
xor
push
sbb
mov
mov
nop
test
lods
mov
mov
mov
push
mov
cwtl
imull
scas
jge
ret
sbb
leave
dec
inc
ljmp
dec
fcoms
add
or
push
xor
add
imul
ss
icebp
mov
rorl
nop
sbb
mov
sub
lret
insb
iret
add
fsubp
mov
xchg
xor
or
pushl
xchg
and
dec
icebp
ja
sub
and
jp
pop
add
adc
jnp
xchg
adc
add
jnp
inc
loope
jg
mov
xchg
pop
mov
scas
pop
cld
imul
ja
ss
loopne
inc
adc
push
add
mov
fisttps
or
jns
fcmovne
movsb
mov
pushf
sysret
pop
inc
sbb
dec
fstpt
mov
fwait
adc
jnp
shlb
es
pop
inc
jb
ljmp
push
xchg
sarl
jno
inc
push
jns
rorl
fnsave
xchg
insb
sbb
mov
mov
cmc
popf
jnp
repz
sub
inc
mov
cmpsb
sti
sbb
bnd
sbb
add
push
xchg
daa
jne
push
xchg
out
divl
daa
fstpt
cmp
imul
jno,pn
inc
sub
fcmovb
mov
dec
mov
xor
arpl
ds
insb
gs
adc
test
xor
mov
pop
shlb
rcr
xchg
or
mov
jg
or
jo
test
or
sbb
mov
loopne
mov
pop
lret
daa
divl
daa
cmc
dec
iret
fwait
js
adc
sbb
in
popa
or
loope
lret
mov
cmp
mov
xlat
ss
push
loope
pop
mov
sbb
push
or
addr16
or
xchg
inc
inc
ret
jns
cmc
pushfw
adc
dec
sbb
nopl
sahf
shrl
test
mov
jmp
mov
stos
pop
jmp
inc
xor
adc
xor
fistpll
scas
clc
xchg
insl
mov
loop
cmp
mov
stos
bswap
icebp
stos
xchg
iret
inc
pusha
jne
inc
jo
repz
cmpl
jns
gs
sbb
and
jg,pt
add
dec
jl
scas
push
daa
iret
mov
rolb
mov
andl
or
addr16
shlb
fcmovnb
sub
mov
data16
lret
loopne
jle
imul
clc
xorb
jb
add
add
pusha
adc
mov
dec
jecxz
and
xchg
push
mov
sbb
sti
sub
xchg
xor
outsl
sub
ret
cmpl
pop
mov
xor
aas
fwait
cmpsb
xorb
ja
cmp
repz
pop
mov
mov
mov
jno
into
and
pop
dec
lcall
nop
pop
jl
dec
outsl
xor
adc
mov
loopne
outsb
or
xchg
fwait
sti
das
fs
mov
lods
daa
or
mov
popa
fildl
dec
sub
dec
mov
adc
and
inc
inc
inc
dec
xchg
data16
jecxz
cmpsl
fs
cli
and
sahf
jnp
jb
mov
movsb
inc
imul
inc
mov
inc
push
mov
xchg
cld
mov
sbb
inc
pop
mov
xchg
push
hlt
insl
dec
dec
out
stos
pop
and
addb
iret
pop
out
icebp
je
fisubl
pop
push
cmpsl
insb
into
insb
pop
dec
mov
dec
or
stos
nop
ss
test
mov
jmp
sub
jnp
int3
pop
sbb
fdivrl
loopne
xchg
imul
mov
mov
movsb
cs
jne
and
sbb
stos
xchg
cmc
movl
mov
int
in
in
xor
jg
stos
rol
lods
pop
cltd
inc
mov
mov
xchg
data16
adc
arpl
or
sahf
popf
dec
jg
mov
add
pop
cli
sbb
stos
pop
scas
inc
xor
lret
dec
popa
ljmp
push
xchg
vdivss
dec
ret
jns
cwtl
add
adc
jno
and
cmp
movsl
jno
jo
cmp
repz
push
lds
sub
sub
imul
es
out
push
mov
or
mov
push
pusha
pop
xor
shll
je
lods
pop
and
sub
nop
cmp
enter
cmp
out
shr
add
ja
stos
pop
movsb
lahf
mov
shrb
mov
ja
add
fwait
insl
pop
fs
sarl
pop
es
jmp
jb
dec
imul
mov
dec
enter
movsl
pop
and
nop
cmpsb
jle
sahf
jno
pop
movsl
and
pushf
dec
inc
mov
imul
inc
mov
out
std
test
lcall
xchg
lds
sar
mov
or
mov
or
out
stc
loopne
andb
xor
mov
jb
dec
mov
std
cmp
flds
lods
call
repnz
scas
inc
rclb
or
sub
clc
cs
aad
inc
ljmp
mov
mov
lret
rclb
sub
repnz
repnz
xor
xchg
shrl
pop
push
cmc
popf
inc
fidivs
int3
hlt
xor
xor
xor
add
or
sti
sub
push
inc
mov
pop
sti
andb
inc
jns
push
mov
add
out
fidivrl
sbb
jg
test
inc
ret
jg
xor
jg
jmp
test
lret
mov
xchg
xlat
xchg
xor
mov
subl
pushf
fnstcw
sub
loope
xchg
loopne
sbb
inc
es
ret
inc
sub
cmovbe
pop
xor
inc
in
clc
adcb
mov
ja
jne
cltd
push
movsb
ljmp
pushf
push
into
popf
dec
out
pushf
xchg
das
shrl
fbstp
or
mov
push
pushf
clc
sbb
lods
mov
lahf
inc
jp
inc
fistpll
or
push
sbb
movsb
orb
push
into
jg
dec
shrl
cmc
sbb
movl
jg
mov
cmp
fimull
out
and
js
jle
data16
call
cmp
movsb
mov
cmp
inc
add
and
jnp
push
pop
mov
inc
push
push
cmp
fs
gs
leave
incl
int3
mov
loope
pusha
pop
jge
jecxz
mov
or
or
aas
push
mov
pushf
jle
mov
pop
mov
add
jl
sbb
and
adc
dec
dec
nop
cli
jae
cmpl
aad
and
push
fwait
sbb
fimull
ret
movsl
xchg
imul
xor
hlt
add
cmp
cld
pop
jo
pop
out
pop
ss
jb
jno
mov
mov
imul
ds
insl
mov
inc
sbb
mov
push
add
pop
in
fsubr
push
fisttpl
js
out
sub
int3
fs
sub
movsb
in
mov
hlt
js
pop
out
pop
cli
adc
add
xor
push
jecxz
pop
mov
cmp
pop
xchg
mov
xorb
adc
sbb
jbe
fs
arpl
push
sub
adc
out
xchg
dec
sub
mov
sbb
or
sbb
clc
lret
addr16
cmpb
fwait
aas
push
cmp
arpl
mov
cmp
pushf
mov
ret
outsb
and
sbb
testb
or
mov
in
rolb
push
mov
adc
cmp
cmp
jns
das
inc
jle
and
aam
dec
push
sub
jg
aad
jbe
je
mov
pop
mov
sub
dec
cmp
inc
out
nop
push
dec
test
jnp
int
cmp
or
out
push
mov
fdivr
cld
mov
or
and
xchg
adc
fidivl
cmp
lds
dec
xchg
mov
test
sbbb
and
std
fistl
int3
add
sbb
mov
cmpsb
hlt
adc
jmp
test
insb
inc
leave
std
addl
sub
pusha
mov
lahf
testb
into
je
scas
pop
mull
repnz
jo
xor
aaa
imul
inc
xor
dec
loop
push
cmp
ret
ret
mov
adc
pop
mov
mov
and
pop
aam
nop
adc
pusha
mov
cmp
jp
js
add
mov
ds
dec
dec
jmp
jmp
sub
pop
xor
inc
mov
jl
icebp
mov
xchg
mov
rolb
add
pop
dec
inc
push
icebp
add
add
hlt
pop
lahf
mov
mov
jnp
xchg
repz
pop
stc
in
mov
int
cmp
add
pop
mov
les
add
dec
and
iret
ret
jmp
dec
mov
or
clc
jmp
bound
and
popa
fcom
jo
inc
jb
dec
mov
jo
iret
push
xlat
sahf
movsb
dec
mov
fmull
jno
and
push
cwtl
imul
mov
int
pop
inc
jp
test
and
add
ficompl
cmp
testb
cltd
enter
mov
out
and
jp
out
mov
inc
shrd
test
add
inc
leave
cmp
ja
jmp
sbbb
inc
or
push
pop
mov
test
mov
adc
sti
mov
out
and
test
movsb
hlt
imul
loope
repnz
enter
repz
push
or
pop
xor
lea
jo
call
and
dec
negl
in
inc
repz
sub
test
clc
clc
inc
js
daa
jb
in
pop
xor
pop
cs
lock
sbbl
sbbb
mov
xchg
mov
cs
mov
pop
ja
loop
aas
and
rcrl
sar
push
outsb
add
dec
leave
mov
cmpsb
pop
xor
sub
and
jl
out
test
inc
or
push
inc
push
push
fdivrl
iret
mov
js
fistpl
cmp
nop
adc
mov
mov
cli
stos
data16
mov
jmp
xor
stos
flds
adc
ret
mov
cmpsb
mov
or
in
or
xor
in
lret
fwait
imul
jae
or
push
insb
sub
enter
fs
pop
leave
lcall
rcl
jg
xchg
pop
out
jge
sbb
cmp
pop
mov
arpl
bound
adc
or
mov
adc
push
std
mov
and
sub
dec
or
in
sbb
mov
loope
jmp
xchg
jno
imul
inc
mov
mov
xchg
pop
sbbb
cmp
mov
outsl
inc
stos
icebp
or
push
push
adc
out
push
mov
adc
cmp
stc
sbbb
mov
xchg
ficoml
mov
inc
int3
sub
mov
or
and
pop
jne
sbb
into
rclb
adc
aam
hlt
pop
mov
leave
and
icebp
stos
dec
mov
xor
outsb
jecxz
add
sbbl
mov
call
je
jmp
dec
pop
pop
inc
inc
adc
dec
ljmp
ret
sub
push
rorl
rcrl
movsl
aad
inc
movsl
bound
test
xchg
shr
pop
dec
jae
in
sbb
stos
orl
inc
sub
imul
mov
pushl
add
rcrb
mov
jo
push
nop
or
neg
inc
jne
in
dec
sbb
cltd
loop
push
mov
jl
mov
into
add
add
jae
push
sbb
das
sub
sbb
testb
fwait
sti
xchg
sub
sbb
dec
mov
cmpsb
mov
inc
sbb
dec
push
sub
pusha
std
test
xor
lcall
xchg
mov
pop
dec
mov
sub
inc
cmp
pop
dec
ret
out
in
loopne
repz
pushf
idiv
iret
jl
movsb
sbb
in
jnp
push
add
insl
or
loopne
mov
inc
and
daa
mov
pushf
lahf
mov
in
out
std
sbb
jb
dec
in
jno
dec
xor
push
cmc
faddl
ficoml
mov
shlb
ja
mov
scas
push
or
out
leave
ret
shlb
dec
mov
mov
mov
movsl
dec
dec
cmc
xchg
inc
mov
jb
arpl
fldenv
jg
int3
inc
subb
push
jbe
sub
cmp
mov
or
xchg
inc
jmp
push
dec
jns
test
mov
pushl
cmp
xchg
in
scas
xchg
lahf
lods
or
lahf
pop
sbb
mov
mov
pop
cmp
imul
sbb
orb
sbb
hlt
cli
mov
or
leave
jnp
imul
mov
inc
es
inc
stc
cmp
pop
jnp
push
adc
dec
or
dec
arpl
std
jno
aaa
stos
adc
mov
daa
pop
fwait
mov
jecxz
push
push
icebp
test
fstpt
mull
addl
jle
test
xor
add
fistl
xchg
dec
icebp
idivb
ja
lahf
decb
test
cmpsb
xor
sub
jecxz
call
and
xchg
rcl
loope
jnp
rorl
movsl
imul
and
data16
test
imul
dec
test
inc
out
jbe
shll
ret
adc
test
mov
int3
lahf
mov
pop
and
outsb
movsb
sahf
cltd
mov
repz
dec
and
push
lret
adc
out
das
sbb
sti
insb
sbb
push
jmp
adc
xchg
rcll
inc
fwait
sti
out
lcall
sbb
add
ds
pop
push
push
mov
cmpsl
xor
jmp
aam
pop
or
jl
out
xchg
dec
mov
xchg
fldenv
mov
dec
pusha
xor
mov
jmp
fldl
iret
rcrb
imul
xchg
xor
ds
ja
cmp
pop
or
inc
sub
fildll
int
adcb
jne
gs
xlat
fildl
call
jl
iret
mov
jbe
lock
or
popa
cmp
adc
add
pop
scas
cmp
ja
dec
sub
pop
aas
leave
push
pop
inc
lods
cmp
int3
xor
fmull
pop
sbb
jns
dec
mov
jp
cmp
or
mov
inc
pop
ss
in
or
sub
cmp
push
xchg
inc
movsl
addb
cltd
inc
inc
pop
inc
dec
or
jae
sbb
mov
lock
sbb
sbb
stos
or
xorl
pop
pop
mov
mov
jl
sbb
mov
dec
mov
clc
popf
lea
mov
xor
outsb
inc
and
out
or
mov
inc
inc
pushf
mov
pop
mov
ret
lock
add
lret
or
test
xchg
jmp
fcmovnbe
inc
sbb
add
inc
stc
insl
cld
pop
daa
testl
in
jb
hlt
push
push
cmp
in
sbb
dec
enter
adc
xchg
dec
cld
push
jmp
pusha
in
pop
imull
jmp
mov
jp
xchg
mov
imul
loopne
stos
int3
fcmovnb
mov
out
repz
inc
inc
or
arpl
testl
jbe
test
pop
mov
sbb
mov
sub
mov
out
filds
imulb
das
inc
dec
xchg
bound
es
orl
jge
das
or
mov
iret
sub
mov
mov
mov
loope
mov
and
in
or
cmp
stos
call
or
nop
mov
dec
jg
push
test
sbb
push
adc
mov
mov
test
pop
cltd
jae
sbb
mov
popf
adc
cmp
push
mov
lret
add
repnz
inc
sub
cmc
faddl
cmpsl
orb
data16
sbb
jnp
mov
xor
sti
ret
fisttpl
mov
les
cli
test
jno
add
into
scas
rclb
rclb
adc
or
divb
or
aaa
notb
shlb
cld
adc
mov
les
ljmp
add
and
pop
sub
dec
cs
mov
cmp
inc
inc
sub
or
pop
or
sbb
test
repz
cmp
add
mov
inc
sti
jnp
mov
mov
lcall
xchg
fisubs
aas
add
iret
dec
fwait
dec
std
push
cld
fs
shlb
outsl
cltd
std
cmp
sbb
pushf
outsl
mov
int
push
daa
nop
adc
jno
mov
shll
sub
mov
out
adc
int3
cmp
pushf
mov
fsubrs
adc
mov
test
insb
xchg
rcrl
iret
mov
ret
dec
into
into
mov
aaa
jg
pop
inc
mov
outsb
dec
pop
jp
push
js
push
nop
les
jnp
imul
or
and
jle
call
cmc
xchg
in
jo
or
push
sbb
push
sub
pop
push
mov
mov
and
mov
lods
mov
push
pop
rolb
and
inc
cmp
cmpsl
aad
or
push
or
lea
inc
pop
ret
adc
adc
pop
and
pop
arpl
mov
add
mov
pop
fstpl
inc
lahf
pusha
iret
lods
sti
lods
mov
fldl
stc
pop
adc
sti
pop
lret
stos
fs
push
movsl
mov
push
fdivs
pop
stos
pop
mov
inc
cmpsl
or
mov
lods
lods
and
std
out
popa
push
les
dec
js
jnp
jb
test
or
stos
cmp
mov
or
data16
cltd
in
mov
add
rep
arpl
sub
push
jmp
mov
push
lods
pop
sarl
sbb
pop
pop
lods
fisubrl
lcall
push
test
add
lock
in
cmc
icebp
sub
in
push
ljmp
cmp
pop
ljmp
mov
jbe
add
sbb
mov
jle
add
jecxz
fucomip
scas
push
loop
cmc
mov
repz
cmp
xorb
cmp
ja
sub
data16
in
xor
orb
and
inc
pop
jnp
jnp
add
cwtl
nop
lock
or
fwait
and
je
fisttps
shlb
add
enter
dec
out
arpl
mov
add
and
dec
push
jae
adc
fwait
nop
sbb
push
mov
jge
testb
ret
notb
mov
mov
fcoms
or
pop
lods
leave
cwtl
inc
mov
testb
xor
push
sub
jb
std
outsl
mov
out
xor
push
cmp
mov
adc
dec
enter
xor
mov
adcb
mov
jmp
int3
ljmp
push
add
mov
dec
xorb
inc
dec
and
xchg
dec
ss
shll
pop
mov
das
xor
sbbl
mov
dec
mov
pop
dec
outsl
push
lret
xor
in
lods
mov
ja
sbb
ret
xor
cmp
mov
push
pop
notb
out
jmp
in
data16
cmp
rcrl
popl
pop
out
mov
dec
and
mov
mov
and
mov
pop
lods
mov
ret
pushf
mov
and
stc
adc
adc
orb
sub
fs
pop
pop
outsb
jle
xor
xchg
jge
imul
test
sbbb
gs
ja
mov
lods
jno
jl
and
jae
repnz
add
and
or
leave
dec
stc
inc
pop
sbb
xor
xor
push
scas
dec
cs
insb
push
roll
xchg
in
xchg
jg
loope
dec
daa
mov
dec
ljmp
mov
movsl
mov
xchg
xchg
lret
les
xor
xchg
xchg
pop
sub
cs
rol
test
dec
inc
cmp
xchg
shll
push
mov
fstl
fstp
in
push
fwait
sub
in
jg
and
adc
jl
dec
jmp
sbb
pop
in
movsl
fdivr
cmp
jne
jmp
adcl
xchg
je
sub
inc
mov
pop
xor
adc
adc
sbb
jb
stos
frstor
in
lret
sbb
cmpsl
cmp
imul
lods
cmp
add
dec
jl
sahf
cmpsl
daa
jmp
pop
push
jne
and
adc
imul
add
inc
mov
or
mov
test
sti
ds
adc
fdivrs
loope
lds
mov
mov
das
insb
lods
lods
stos
fs
push
push
pop
push
sub
mov
test
sbbl
icebp
les
inc
push
test
or
dec
and
mov
out
adc
sub
pop
sbb
xchg
and
push
add
jecxz
stc
xchg
add
je
pop
lcall
jmp
lock
mov
mov
mov
out
shll
and
mov
add
pop
movsl
in
push
lea
cltd
shrb
stos
jo
jo
imul
mov
push
lret
and
push
mov
xor
sahf
pop
xchg
push
mov
pop
sbb
cmp
sub
shlb
mov
mov
inc
sarl
jnp
ljmp
jae
insl
jo
outsl
adc
pop
pop
ljmp
leave
add
push
mov
gs
decl
pop
mov
fbstp
jle
pusha
mov
xlat
lods
xchg
push
das
and
mov
cli
sbb
and
enter
push
mov
adc
xor
dec
int
imul
and
dec
jecxz
insl
arpl
fs
aas
daa
or
int
divl
cmp
imul
imul
inc
cmp
shrb
mov
aam
or
or
push
pop
xor
jecxz
sub
mov
sbb
pop
inc
bound
and
and
test
call
fsub
mov
pop
jbe
imul
mov
mov
je
leave
inc
cmp
push
test
fidivl
add
or
rolb
xor
dec
and
or
mov
jl
pop
dec
push
mov
fisubl
ss
sub
mov
mov
fs
sbb
sbb
or
ljmp
andl
daa
scas
loopne
mov
arpl
into
xchg
cmp
pop
in
sbb
testb
jmp
and
mov
xchg
cmp
mov
lea
int3
rorl
popf
mov
inc
es
inc
mov
fxch
push
sbb
in
jns
push
push
push
dec
mov
jno
iret
popa
cmp
inc
shll
mov
or
les
popf
out
test
cmp
jg
xchg
bound
ficompl
lret
jge
sti
sahf
rcrl
scas
js
ret
jb
ja
test
js
inc
filds
out
jmp
in
mov
std
xor
in
mov
stc
cmovl
rclb
insb
xchg
sbb
es
test
iret
loope
pop
sub
mov
movzbl
xor
xor
loope
mov
sbb
scas
andb
cmpsl
mov
scas
or
jns
dec
shll
pop
insl
subl
mov
cmp
xor
jmp
rcrl
jmp
pop
fcoml
mov
int
adc
clc
add
or
lea
add
iret
iret
int3
imul
dec
nop
shr
dec
mov
xchg
pusha
cmp
dec
pop
adcb
cmpsb
jb
in
pop
cmp
lea
push
add
push
inc
mov
fwait
mov
addb
rclb
lret
cld
les
add
add
std
arpl
ret
push
repz
into
jb
mov
out
ret
iret
mov
dec
mov
std
jl
fistpl
rcrb
add
sub
push
pop
mov
shlb
xchg
mov
mov
addr16
cs
lods
and
insl
or
dec
dec
dec
cmp
pop
and
push
mov
lods
sbb
xor
sbb
cmp
nop
push
and
jb
inc
ret
insl
icebp
movsb
push
jno
lret
jo
push
pop
xor
pusha
inc
and
outsb
pushf
call
jl
push
xlat
sbb
aam
adc
les
mov
stos
pop
test
insl
fistps
add
cmp
sbb
mov
lds
sub
sub
inc
jmp
dec
or
sti
dec
jg
testb
xor
xor
inc
fidivs
jnp
leave
sbb
pusha
movsb
mov
testl
shll
aad
lods
sbb
adc
add
cmc
orb
jl
xchg
pop
aad
xchg
xchg
cld
push
fnstcw
sarl
cmp
frstor
add
scas
mov
mov
sbb
mov
movsl
mov
cmp
mov
leave
pusha
insb
mov
inc
subb
add
fisubrl
jmp
mov
ror
inc
nop
push
in
xchg
pop
jl
jmp
adc
cmp
out
fildl
ljmp
push
pop
outsl
lea
mov
mov
sbbl
test
dec
pop
ret
cmc
insl
sbb
test
or
pop
jnp
mov
mov
stos
fdivrs
jno
or
adc
xchg
or
mov
hlt
mov
adc
repz
push
fistl
cwtl
jae
repz
xlat
daa
mov
test
push
mov
sahf
jno
pop
mov
cwtl
cmp
or
jge
inc
push
xchg
lret
repz
push
xor
fcmovnbe
fnsave
xchg
out
imul
je
fs
jb
mov
je
push
adc
lods
inc
movsb
nop
int
mov
jl
nop
mov
mov
adc
jmp
fisubrs
pop
push
or
xchg
into
adc
outsb
out
lret
mov
and
and
or
mov
shll
ds
ja
cmp
cmc
xchg
data16
fisubrl
inc
jl
fucomip
xchg
test
mov
adc
daa
je
dec
int3
ljmp
inc
and
aas
dec
sti
loop
ret
cmpsb
jnp
daa
loope
sbb
dec
out
sbb
mov
push
ss
or
sahf
pop
mov
ja
icebp
sahf
mov
lcall
scas
xor
int3
jmp
repnz
sbb
jecxz
sbb
xchg
push
out
scas
cs
mov
arpl
cmp
jl
pop
push
out
ror
and
pushl
fildll
add
adc
movsb
jg
in
mov
cmp
jbe
xorb
test
sarl
pusha
nop
mov
cmpsl
push
js
and
int
nop
mov
mov
mov
mov
in
iret
enter
push
dec
push
js
insb
push
sub
aam
lcall
or
dec
jecxz
loope
cmp
mov
mov
and
push
add
mov
xchg
cmp
push
xchg
repz
cmpsb
inc
testl
mov
jb
shll
sbb
pop
or
out
shrl
pop
lret
and
iret
dec
xchg
imul
jb
inc
mov
sub
inc
rcrl
mov
ljmp
push
mov
shll
dec
pop
jge
sub
jns
and
daa
aas
or
sub
out
push
repz
outsl
popa
out
aad
bound
sbb
xlat
sbb
add
ret
cmpsb
jp
push
in
dec
int
push
cli
loope
sbb
fwait
xor
fmul
pop
hlt
loopne
jg
xchg
test
loop
push
jmp
addr16
mov
iret
shll
push
cmp
imul
shl
jo
dec
sbb
aaa
ja
mov
fs
adc
pop
pop
mov
sbb
mov
xchg
pop
icebp
push
ficoml
out
pop
movsb
aas
pusha
sbb
jg
dec
or
sbb
xorb
push
mov
pop
nop
test
insb
fcompl
pusha
jmp
fsub
xchg
sbbl
jle
sti
loope
mov
mov
test
push
pusha
out
jb
fwait
popa
and
inc
mov
pop
jnp
cmc
mov
orl
jmp
cli
movsl
cwtl
push
or
roll
jae
xchg
pusha
mov
outsb
push
mov
sahf
movsb
sbb
dec
cld
mov
int3
lahf
jle
fistpl
icebp
jae
or
or
jne
into
test
mov
iret
mov
fstl
test
mov
scas
push
faddl
out
dec
xor
scas
cmp
and
rorb
je
mov
cmpsb
ss
fwait
inc
lea
adc
movsb
or
enter
pop
mov
outsl
xchg
popf
mov
stos
imul
jl
jo
mov
pusha
adcl
mov
push
pop
jnp
arpl
pop
stc
push
hlt
fsubl
test
pop
cmpsb
sahf
mov
int
xchg
xchg
pop
mov
stos
outsb
scas
adc
jmp
cmp
adc
sbb
hlt
sbb
sub
cmp
cmp
mov
ss
cmp
fsubl
xor
dec
mov
sbb
aas
gs
stc
scas
ret
push
pop
rorb
movsb
jns
mov
pop
mov
mov
popf
cmpsb
test
js
arpl
mov
nop
int
jl
mov
je
jno
mov
cmpsl
mov
js
js
nop
adc
jne
cmp
rcll
mov
add
js
push
or
sub
call
ret
xchg
rorb
gs
loop
mov
sbb
fisttps
pop
or
pop
in
cs
arpl
xor
sub
xchg
stos
and
cmp
sbb
dec
cli
cltd
push
mov
xchg
das
adc
jl
dec
push
xchg
or
push
cs
mov
std
test
inc
push
out
push
jno
stos
add
rolb
out
mov
xchg
data16
push
in
orl
add
mov
cmpsl
popf
adc
in
pop
test
sti
add
cmpb
sub
mov
mov
or
mov
cmp
dec
cmpsl
mov
addb
inc
inc
ficoms
mov
dec
mov
push
pop
les
sub
cmc
pop
stos
out
push
test
fdivr
mov
loop
sub
imul
rorb
mov
test
add
xchg
andl
mov
cmpsl
test
enter
insl
ss
dec
lret
ds
sub
adc
cmpsl
std
or
dec
pop
inc
jnp
jnp
pop
jo
add
mov
lret
fwait
rcrl
inc
leave
mov
enter
adc
scas
mov
orl
movsb
fwait
jg
mov
xlat
sbb
jnp
dec
xor
fstpl
pushf
mov
popa
imul
inc
ficomps
call
movsl
mov
jb
dec
repz
jge
cmpsb
scas
sub
mov
mov
daa
fisubl
imul
les
and
jnp
ret
movaps
out
sub
cmc
push
iret
imul
scas
mull
or
jmp
mov
stos
mov
push
sub
sbb
inc
fstps
pop
mov
jl
jno
push
xor
test
mov
scas
adc
mov
push
loop
sub
call
pop
inc
sbbb
dec
js
push
sbb
and
push
lret
jl
sub
mov
add
je
adc
and
data16
mov
stc
add
mov
ja
stos
ds
data16
in
out
push
inc
lea
push
lret
lret
add
cmp
and
pop
dec
or
addr16
jae
test
iret
fidivs
mov
dec
xor
mov
sarb
or
insb
mov
mov
int
ja
fisubrl
sub
pop
or
mov
sbb
inc
push
shll
dec
repnz
in
test
aam
scas
data16
sub
cltd
add
jo
in
inc
pop
in
sbb
pop
out
lds
lods
pop
fnstcw
mov
andl
xchg
sub
cmp
inc
int3
into
mov
mov
dec
invd
imulb
pop
jg
out
shr
nop
mov
xorb
jl
sti
push
jl
imul
xor
fwait
mov
out
gs
mov
jmp
xor
hlt
lret
jae
mov
mov
mov
test
xchg
mov
add
gs
addl
movsb
sub
cmp
sub
scas
xor
aaa
jp
jge
xor
dec
mov
jg
gs
sub
fstp
push
push
rolb
fcmovne
xor
push
lods
test
xor
in
in
dec
jbe
gs
arpl
stos
jns
ficomps
adc
adc
fistpll
mov
jg
stos
test
push
adc
insl
mov
push
sbb
cmp
mov
js
push
js
adc
fldenv
mov
dec
pushf
cmp
je
les
andl
inc
aad
and
ja
jg
sahf
pop
xor
test
sbb
mov
mov
push
mov
fsubr
scas
test
addr16
jmp
or
mov
enter
mov
mov
rclb
or
xlat
jl
into
sub
pop
loopne
addr16
adc
outsl
cmpsb
or
inc
fisttps
outsl
push
or
fisttpl
out
ds
loopne
jmp
sub
rclb
fimuls
cmp
and
ret
push
dec
insb
sub
ret
push
sahf
sub
jle
cmp
mov
nop
jmp
lret
cltd
jecxz
bound
cmp
outsl
mov
enter
jo
xchg
fisubs
push
mov
icebp
cmp
pop
cmp
add
cmp
mov
or
out
pop
loop
pop
jbe
in
xor
nop
sub
xor
mov
adc
push
xchg
lea
call
mov
fisttpll
sbb
adc
jl
mov
fnsave
or
cld
nop
cmpb
mov
fdivrl
cmp
inc
and
call
lea
push
mov
inc
mov
push
inc
push
movsb
mov
mov
dec
cld
mov
mov
cmpsb
and
fsubrs
cmp
inc
fcoml
mov
scas
sar
inc
push
cmpsb
lea
inc
movsl
rclb
cld
dec
xor
inc
sub
pop
les
out
lea
dec
xor
fucom
ljmp
jecxz
fidivrs
push
and
pop
lret
inc
inc
mov
xchg
jp
in
xor
jae
push
ret
adc
addb
ljmp
push
xlat
cli
mov
xor
mov
jnp
dec
jecxz
inc
fistpl
loopne
aas
int
mov
fs
cs
mov
fimull
jl
fcomps
sbb
mov
push
test
fwait
push
dec
and
add
mov
fs
push
hlt
clc
cmp
lods
fsts
clc
das
out
inc
sbb
push
inc
dec
fmul
mov
mov
pop
andl
sbb
adc
dec
mov
cmc
pushf
push
divl
push
out
daa
jl
insl
nop
xchg
xchg
inc
pop
cmpsl
fwait
aas
cmp
imul
adc
outsl
jbe
bnd
and
cmp
push
mov
jbe
dec
mov
nop
sub
lret
jge
cmp
test
mov
lods
fimuls
mov
mov
out
mov
pop
cs
pop
mov
push
push
dec
fmul
andb
data16
push
or
test
jae
mov
fiaddl
mov
sbb
int3
sub
mov
scas
testb
jge
cmp
push
jmp
outsb
jno
mov
out
lods
xchg
or
xor
and
xchg
xlat
jno
jbe
push
imul
mov
xor
sub
popf
rcrl
mov
lock
dec
repz
add
pop
and
jne
cmc
ja
mov
push
dec
sahf
inc
ret
mov
aad
adc
es
cltd
fistpl
ja
iret
dec
test
ret
jmp
adc
sub
out
and
pop
jge
pop
pusha
pop
lret
loop
inc
adc
stc
scas
jo
jnp
jl
pop
mov
add
mov
rcll
rcr
push
incl
lahf
popf
rep
mov
lods
nop
mov
cmp
xlat
shlb
std
es
mov
pop
jl
mov
mov
jecxz
pusha
add
fnsave
inc
dec
push
stos
movsb
sbb
xor
rorl
cmp
in
xchg
iret
arpl
mov
les
add
nop
fistps
das
dec
popa
ret
sub
divl
les
movsb
in
cmp
sbb
pop
shll
or
add
inc
mov
cli
int3
push
xchg
mov
subb
enter
xor
fdivs
add
fcmovbe
pop
hlt
ja
dec
cmp
lods
js
int3
cmc
bound
insl
ljmp
mov
mov
scas
popa
lcall
jmp
and
push
hlt
mov
daa
int
insb
fmull
das
mov
loopne
andb
stc
in
aad
insb
jae
xor
ss
adc
dec
scas
cmp
addl
and
inc
mov
sahf
pop
pop
lahf
out
xor
lods
cmp
sbb
or
ljmp
inc
repz
xor
inc
xchg
mull
xchg
jbe
scas
rorl
movb
mov
bound
cli
idivl
mov
xchg
mov
xchg
in
fisubs
jl
dec
jle
test
mov
sahf
or
inc
adc
cmp
stos
fstl
pop
out
sub
push
pusha
dec
daa
mov
rcl
jg
jb
add
sahf
dec
call
pushf
dec
xor
cmpsb
push
push
lahf
fstps
sbb
push
std
shlb
fdivl
rol
int3
pop
sahf
aas
jns
and
int3
cmc
and
adc
movsl
outsl
lret
test
inc
lret
aad
cltd
or
push
mov
mov
pop
in
movsl
std
inc
pop
jno
xchg
adc
cmc
or
mov
imul
mov
lahf
jge
std
cmp
mov
jae
ss
mov
repz
jmp
push
push
sbb
test
out
mov
or
addr16
nop
xchg
push
data16
stos
push
push
das
mov
cld
sbb
adcl
ffreep
popf
adc
mov
jae
fwait
dec
cld
sub
push
jbe
mov
fimuls
push
clc
orl
add
push
mov
in
pusha
outsb
nop
fisubl
std
sahf
mov
mov
aas
out
div
stos
xor
std
scas
fnstenv
xlat
cmp
into
lds
xchg
fisttpl
mov
js
and
cmpsb
pop
jg
pop
sbb
adc
push
icebp
and
lahf
cmp
insl
mov
jno
inc
pusha
fwait
mov
inc
data16
push
and
repnz
mov
add
mov
cmp
push
nop
pop
mov
test
sahf
ja
cmp
das
fs
push
or
jge
icebp
cmpsb
mov
cmpsl
sub
mov
dec
js
push
dec
mov
fucom
jbe
and
imul
stc
jecxz
xchg
jle
outsb
mov
imul
cwtl
xchg
lret
ds
loop
push
push
sub
inc
sete
aas
inc
aas
or
div
js
mov
sbb
fdivl
push
in
sbb
add
mov
test
fisttpl
stc
sub
sbb
shll
fcomp
les
mov
sub
inc
xchg
inc
dec
sbbb
dec
ret
sub
and
fnstsw
fnstenv
cmp
shl
fisubrl
push
cmp
in
mov
jge
xcrypt-cbc
cmpsl
xlat
xorb
pop
pop
cs
jg
add
dec
out
or
int
mov
mov
xchg
lods
mov
fdivrs
xor
jmp
push
push
fisttpl
sbb
addr16
in
and
pop
add
cmp
pusha
push
push
adcb
lds
push
ds
test
mov
adc
inc
sbb
mov
fsubr
pop
test
fbld
mov
xor
out
xorb
cmp
mov
fs
insb
dec
pop
dec
lds
adc
xchg
pop
fisttpl
int
popf
pop
sti
mov
fisubs
nop
or
cld
jl
push
sbb
push
mov
sub
jle
push
repnz
outsl
fdivrl
pop
xor
fadd
pusha
cmp
fwait
sub
sub
sbb
jge
cmp
popf
addb
cmpsl
adc
push
or
and
mov
mov
dec
and
pop
data16
jle
idivl
mov
mov
pop
cs
into
rol
jnp
dec
mov
mov
int3
bound
push
movsl
dec
push
std
stc
jg
test
mov
lahf
pusha
imul
cmpsb
insl
push
sub
xchg
sub
pop
push
es
mov
inc
jmp
mov
add
fnstcw
dec
fs
jnp
fisubs
ljmp
mov
repz
nop
add
movsl
loopne
test
sahf
lret
repnz
mov
lret
cmc
xor
int
loop
jae
cs
nop
aad
stos
repnz
sbb
xor
aam
mov
mov
cmpsb
loope
inc
in
mov
inc
jbe
loopne
repnz
movsl
xchg
fcomip
outsl
cmp
sbbl
aam
pop
push
push
or
push
sti
pop
sbb
jmp
mov
cs
jno
neg
addr16
test
sub
sti
xchg
or
loop
clc
mov
pop
lea
mov
mov
jne
stc
out
mov
stc
jg
xor
pop
ds
js
mov
sub
aam
inc
pop
insb
jle
mov
in
inc
stos
mov
je
sahf
push
jg
push
jo
nop
rcl
cmp
cmp
cs
pop
sahf
out
rcrb
mov
push
leave
ljmp
mov
insb
pusha
adc
jg
sti
dec
fnstenv
stc
fdivs
pop
arpl
pop
lahf
sub
or
adc
cltd
xchg
ret
mov
iret
stos
pop
out
xor
dec
daa
jo
mov
fdivl
fsubr
ret
mov
dec
jno
cmp
test
mov
outsb
mov
cmp
imul
das
sub
push
ds
dec
xor
pop
aad
or
fwait
jl
xor
sbb
inc
rorb
sub
aaa
pop
jl
xchg
dec
fimuls
test
loopne
xor
loop
mov
mov
sti
push
es
jbe
dec
add
mov
pop
lea
fidivrl
rcl
mov
pop
scas
xor
add
ds
daa
shl
incl
mov
int
mov
mov
fcos
inc
nop
mov
int3
out
jecxz
jle
nop
shr
leave
mov
mov
out
mov
jo
push
lcall
mov
fs
aas
imul
jo
insb
arpl
pusha
pop
or
lahf
dec
mov
xchg
push
mov
xchg
adc
jnp
pop
cmp
into
and
out
mov
mov
mov
pop
ss
push
scas
adc
mov
shrb
outsl
xchg
sbb
adc
scas
and
mov
insb
push
pop
insb
lcall
mov
outsl
dec
lock
rorb
dec
jl
outsb
inc
repz
push
sahf
add
cmpsl
add
stc
pop
dec
sub
xchg
jnp
bound
xchg
adc
sbb
movsl
dec
sbb
mov
jle
dec
cmpsl
sbb
sbb
imul
out
ja
lds
add
mov
lret
cmpb
movb
das
push
mov
mov
imul
out
xor
mov
fwait
sub
xchg
inc
mov
in
inc
std
jl
movsl
xlat
cmpsb
push
jl
ret
mov
jp
or
insb
jp
pop
cli
mov
shr
adc
pop
fistl
js
push
xchg
pop
mov
mov
ss
mov
inc
pop
adc
or
inc
jne
mov
nop
jnp
out
xor
rcrl
sub
icebp
push
sbb
sbb
mov
xchg
stos
sub
ja
cmp
les
or
xor
rcrl
sub
ret
std
insb
inc
push
pop
jnp
mov
popl
mov
mov
jae
jmp
pop
lahf
dec
dec
jns
fdivl
in
mov
mov
adc
adc
push
hlt
mov
jl
xor
cmpsl
mov
cmp
pusha
cmpsb
gs
outsb
ficompl
je
push
xchg
gs
dec
sahf
cmc
daa
rorl
mov
adc
add
jecxz
add
addr16
pop
mov
sbb
mov
xorl
es
fidivs
loope
inc
pop
pop
mov
js
sbb
mov
sti
movsl
ss
fistl
fwait
adc
adc
inc
jg
pushf
dec
lock
mov
or
std
xor
mov
pusha
push
cmpsb
push
enter
pop
mov
push
in
jle
jecxz
dec
pop
nop
pop
fisttps
lahf
loopne
or
and
pop
xorl
shll
push
mov
pop
dec
xchg
mov
aaa
insl
push
add
dec
cmp
cld
sub
pop
aam
cmp
int3
repz
push
lods
or
lcall
data16
jl
add
sub
lods
js
jns
push
pop
dec
push
pushf
push
clc
push
sahf
int3
add
sub
mov
mov
or
clc
adc
pop
xchg
mov
loop
mov
in
push
dec
sub
data16
fnstsw
add
in
ja
jmp
xchg
xchg
cs
testl
mov
je
dec
pop
dec
rolb
inc
shll
push
insl
jmp
das
fdivl
hlt
push
and
jo
sub
push
mov
inc
lock
mov
jle
pop
inc
jns
mov
push
pop
inc
mov
cmp
fs
cmp
cltd
xor
pop
fimuls
jl
xchg
mov
sti
sbb
shlb
dec
add
mov
jno
push
in
inc
mov
mov
sub
push
into
mov
out
mov
and
jmp
jg
shl
mov
fsub
test
and
aaa
aad
add
and
scas
roll
jbe
ret
mov
jbe
cmpsl
add
push
mov
lods
es
sub
roll
inc
xorl
sti
mov
imul
cld
pop
inc
ss
fisubrl
aam
dec
out
movsb
iret
or
pop
insb
mov
sub
cmp
pop
or
mov
jo
and
ja
pop
xchg
mov
pop
dec
fcmovnu
pop
or
pop
sbb
and
mov
ss
lds
push
mov
dec
adc
sbb
out
int
enter
mov
jl
sbb
ljmp
pusha
cmpsb
xlat
adc
loop
clc
mov
scas
jle
aas
movsb
rolb
or
jecxz
sub
mov
enter
fwait
inc
push
inc
mov
mov
pop
inc
mov
mov
mov
sti
dec
jbe
orb
cmc
leave
clc
mov
mov
faddl
dec
in
mov
jo
pushf
sbb
fsts
pop
or
mov
fwait
mulb
std
shr
std
addr16
mov
cmpb
daa
pop
pusha
jp
mov
push
mov
inc
xlat
mov
sub
xchg
pop
mov
jae
movsb
xchg
push
fwait
mov
jl
jbe
xchg
fcoms
daa
adc
out
and
pop
rorl
xor
fistl
push
dec
mov
enter
push
or
int3
pop
ss
sub
xlat
test
or
out
mov
fildll
das
pop
or
cmp
das
imul
pop
and
movsl
push
sbb
pop
addr16
mov
xor
push
in
andb
pop
enter
or
jno
adc
fwait
inc
push
fcom
cmp
loope
fmull
sbbb
pop
fs
ljmp
push
loop
cltd
sarl
fldt
jecxz
xchg
icebp
and
pusha
mov
cmc
mov
pop
out
jmp
pushf
push
mov
push
ja
mov
fdivr
rclb
cmpsl
and
jge
mov
loopne
xor
inc
push
sbb
and
adc
imul
jl
xor
aam
adc
xor
dec
js
add
mov
ss
decl
pop
fisubl
sbb
mov
pop
push
and
and
push
xchg
pop
sbb
dec
cli
dec
mov
sub
pop
int
in
xchg
bound
out
or
les
mov
in
push
mov
mov
bound
or
push
jmp
sub
push
daa
push
mov
adc
in
mov
lahf
insl
mov
inc
sub
arpl
inc
mov
xor
add
mov
mov
mov
cmc
jge
cmp
fcmovu
mov
mov
int
sti
mov
push
push
orb
les
sub
lods
cmpsb
aam
xchg
out
ss
xor
out
and
or
cltd
sub
pop
stos
cltd
dec
mov
fidivrl
pushf
out
pop
rcrl
and
stos
mov
arpl
mov
sbb
push
fcmove
push
mov
inc
pop
ret
imul
pushl
imul
push
adc
inc
gs
cmp
jle
adc
jnp
jbe
dec
jg
fdivl
jne
add
mov
rclb
xor
in
push
mov
out
mov
sub
or
mov
add
mov
popa
jnp
into
mov
das
adc
sub
sub
add
das
xor
ljmp
xor
in
aad
push
sub
sarl
lods
and
ljmp
push
sahf
scas
cmpsb
nop
in
notb
sub
cmp
push
push
adc
rorl
push
aas
jecxz
or
scas
push
push
mov
pusha
mov
dec
cmpsb
out
mov
jg
pop
cwtl
and
stos
in
ret
test
inc
add
mov
and
jg
dec
jae
push
cld
pusha
in
pop
cltd
out
ret
mov
and
cmp
inc
mov
in
sbb
pusha
mov
in
in
clc
add
mov
subb
stos
fs
fidivl
sbb
mov
pop
inc
loope
xchg
jbe
push
mov
add
mov
mov
mov
int
lahf
imul
and
sub
rcll
aas
mov
mov
loopne
lods
mov
frstor
dec
pusha
ss
into
fcomp
daa
add
and
or
aam
out
add
pop
je
mov
mov
das
add
test
adc
cmp
sub
xchg
lahf
icebp
std
adc
lret
scas
dec
out
pop
ffree
mov
sub
jl
inc
pop
std
out
cmp
jmp
fnstcw
jg
leave
sub
push
frstor
dec
adc
ror
xor
or
jecxz
mov
mov
hlt
or
inc
jle
fmulp
test
sahf
loop
mov
lods
mov
mov
dec
call
sub
mov
scas
scas
ljmp
mov
ss
scas
jecxz
xlat
sbb
std
cmc
insl
out
fldcw
cmc
andl
cmp
cmp
sahf
cmp
bound
xchg
mov
or
mov
jnp
dec
insl
xor
aad
adc
es
scas
or
js
inc
test
aam
rorb
nop
dec
push
dec
jno
jl
ficompl
out
xlat
sbb
cmpsb
stos
fs
jno
push
pop
jno
aas
inc
sbb
outsb
rcrl
cmc
sahf
jb
cmpsl
sub
pop
jge
mov
test
mov
call
insl
dec
pop
or
mov
insl
mov
call
decl
mov
movsb
or
xorl
movsl
mov
clc
and
sbb
jg
test
inc
stc
inc
jnp
pop
insl
pop
dec
out
dec
and
addr16
fwait
xor
lret
cmpsl
dec
xor
push
fidivrs
incl
int
mov
insl
jmp
shll
rcrl
push
mov
iret
enter
jns
mov
and
fisttpll
test
push
mov
jmp
lock
adc
push
jle
and
jmp
sti
hlt
loop
js
inc
xor
mov
call
lea
pop
dec
pop
jno
mov
rorl
ljmp
inc
mov
dec
iret
mov
out
mov
pop
fs
outsb
aad
gs
mov
mov
pop
or
testl
dec
mov
mov
call
js
add
outsl
or
mov
pop
or
sub
lods
popf
ret
cs
pop
push
lods
jnp
int3
xchg
sbb
bound
adc
jb
fistl
xchg
push
cmpsl
sti
sbb
push
cmp
lods
lahf
xchg
repz
cmp
fmul
movsl
pop
mov
faddl
enter
lea
ss
out
lea
mov
pop
sbb
ret
or
into
jp
andl
mov
xchg
mov
sub
out
sbb
decl
xor
pusha
cmp
sbb
movhps
aas
jmp
mov
push
mov
cs
jnp
loopne
scas
das
insb
and
iret
add
mov
mov
xchg
ret
test
jecxz
push
je
cmp
je
jl
sti
daa
cs
into
lock
push
pop
mov
xchg
inc
lods
aam
lret
jno
in
sbb
dec
roll
sub
pusha
jnp
cmp
mov
xor
out
loop
test
jae
scas
push
icebp
dec
pop
cli
sbb
xchg
dec
pop
jae
loop
xor
std
cmc
jo
cmc
out
aas
shl
pop
movsl
stos
push
sahf
jl
leave
faddp
in
stos
mov
in
and
aam
or
fwait
out
sub
pop
sub
sub
loope
aas
pop
push
out
sbb
adc
xor
ljmp
icebp
out
es
add
jb
fistpl
stos
jl
jno
stos
mov
lahf
fs
out
sub
cmpsl
dec
test
std
push
ss
jl
xchg
mov
mov
sbb
cmc
and
aas
loope
dec
in
mov
lret
xor
sbb
mov
jae
xor
xchg
adc
and
cmp
sub
insl
fistpll
cmp
lods
jb
or
inc
sti
add
jo
xchg
xchg
es
shr
lods
push
jae
adc
test
pop
idiv
sub
pushf
divl
xlat
inc
sti
rorb
and
mov
pushf
mov
mov
adc
push
sub
test
pop
es
push
dec
xor
push
lds
jle
jns
call
data16
in
sbb
mov
xor
lret
mov
push
mov
xchg
imul
sti
mov
daa
sbb
cmc
cs
stos
mov
cltd
mov
push
sub
mov
mov
std
stos
jg
sub
jp
xor
in
cmp
adc
jmp
jle
jge
fwait
insb
pushf
out
pop
jne
testl
pop
mov
js
pop
jle
jns
rorb
or
mov
mov
popa
mov
xchg
ss
std
out
fstl
adc
shll
es
and
outsb
push
lds
jns
cs
daa
lods
or
inc
dec
es
dec
sub
and
jo
jno
out
push
lods
subb
push
cwtl
pop
std
dec
jbe
pop
mov
sub
icebp
rcr
hlt
into
dec
sbb
mov
fwait
push
mov
mov
mov
ljmp
adc
fsubs
pop
xchg
sbb
inc
dec
lea
out
out
orb
fwait
push
imul
mov
out
fisttps
in
outsl
test
mov
add
nop
popf
cmpsb
out
add
fidivrl
fildl
sbb
xorb
mov
enter
sub
fwait
xchg
inc
es
daa
stc
lods
dec
pop
and
testl
dec
pop
aad
in
dec
push
dec
mov
inc
cli
cmc
xchg
push
out
dec
cmp
or
xor
sub
cmp
mov
nop
dec
or
loopne
mov
dec
data16
or
aas
adc
push
cmpl
bswap
jae,pt
lret
ficoml
push
fs
and
dec
decb
rclb
dec
push
and
xlat
mov
aam
inc
sahf
adc
mov
dec
int
xor
push
std
hlt
mov
pop
ffree
test
dec
dec
popl
adc
sbb
push
mov
push
push
mov
and
adc
and
out
cmp
gs
pop
outsl
mov
jbe
dec
mov
fyl2xp1
pop
push
shrb
loop
mov
cmp
add
adc
mov
lea
fisubrs
mov
mov
sbb
hlt
jne
inc
mov
jae
xchg
fsubrl
shll
std
cltd
divl
les
mov
jae
cs
mov
pop
mov
mov
mov
push
pop
or
add
testl
rorb
or
push
popa
mov
stos
push
fildl
addr16
or
imul
pop
cltd
push
lret
pop
inc
inc
out
scas
pop
aam
out
or
bnd
and
mov
pop
inc
js
gs
fldt
dec
scas
popa
or
cld
mov
ds
stos
jae
push
mov
dec
mov
loopne
ja
ljmp
add
add
pop
in
scas
sbb
or
repz
dec
xchg
add
mov
adc
sti
add
mov
arpl
jae
jl
mov
mov
push
fisubs
cltd
mov
loop
stc
decl
les
jns
or
dec
arpl
or
cmc
add
mov
pop
sub
dec
or
and
or
cmp
or
je
insl
lods
add
out
rcr
cmpsb
dec
xchg
fdivr
das
mov
fwait
push
cmp
data16
jo
es
ficoml
pop
sub
push
sub
lahf
xchg
sbb
mov
push
daa
push
aam
mov
inc
mov
mov
push
xchg
pop
mov
in
es
arpl
dec
outsl
push
sbb
cli
gs
mov
pushf
mov
push
mov
mov
mov
mov
cmp
mov
mov
and
xchg
addr16
mov
pop
sbb
add
pop
xor
pusha
inc
jns
fsubrs
or
inc
out
fcomp
test
iret
popa
imul
push
pop
shll
push
or
cmc
lods
fwait
sub
dec
loope
push
sti
xor
adc
test
enter
sbb
or
dec
mov
mov
out
fisttpll
inc
mov
lds
sbb
shrb
push
push
xor
shr
stos
lods
mov
jbe
rcll
xchg
push
pop
insl
pop
sub
mov
push
mov
mov
sarb
and
jp
xchg
xchg
pop
xchg
pop
aam
mov
cmp
push
loope
mov
scas
les
jmp
lods
pusha
pop
mov
imul
lods
sbb
mov
jg
hlt
test
aam
fistps
xchg
lds
fimull
dec
and
in
sbbl
inc
loopne
test
rorl
les
or
hlt
insb
mov
cmp
adc
es
les
jae
mov
lret
cmc
cmp
repnz
cld
mov
inc
pusha
pop
xor
sbb
into
inc
out
mov
mov
pop
push
push
iret
adc
repz
xchg
fnstcw
bound
xchg
sbb
and
cld
or
jae
cs
xchg
out
xor
mov
mov
sahf
std
sub
push
ljmp
nop
ret
fadds
add
push
cmpsb
bound
dec
dec
cmc
mov
mov
dec
xor
adc
pop
adc
and
sub
adc
push
sub
xor
adc
or
stc
sub
into
jae
out
jnp
mov
loope
jg
leave
dec
pop
add
gs
mov
pop
jae
mov
add
push
push
inc
and
pop
inc
cmpl
fidivrl
inc
pop
xor
push
das
sub
sub
or
in
cmp
mov
ficoml
inc
aad
dec
in
lods
shrl
sub
lcall
push
pop
push
mov
movsl
sub
xchg
pop
or
push
cs
jle
mov
mov
int3
pop
push
cmpsb
sbb
inc
push
cmp
cmpsb
xchg
add
sub
jg
cld
jmp
in
add
mov
mov
lret
or
sbbb
scas
push
int3
mov
jl
dec
icebp
les
pop
andb
pop
sbb
pop
icebp
lods
ror
xchg
mov
sbb
inc
in
push
or
inc
es
push
lds
call
lcall
hlt
xchg
jae
bound
lds
or
jecxz
cmpsl
dec
icebp
sarb
and
jb
std
cmp
or
sub
jg
push
out
repz
loop
mov
mov
and
bound
lock
jae
sbb
cmpsl
out
add
jno
jge
test
in
mov
add
cltd
adc
mov
fnstcw
cwtl
push
mov
imul
pop
xor
adc
and
icebp
cmp
out
mov
pushf
adc
inc
testl
test
mov
mov
mov
add
js
sbb
cmp
rolb
iret
int3
xchg
stos
xchg
adcb
sub
stos
dec
cmp
in
enter
mov
out
dec
cmpsb
test
push
aad
jg
ljmp
mull
stos
subb
ljmp
mov
inc
sahf
mov
jg
adc
imul
lret
lds
inc
mov
mov
or
icebp
or
pop
dec
sbb
jne
rcrl
sarl
xor
mov
fsubs
fs
xchg
lret
sub
cwtl
jo
jp
dec
jae
popf
js
adc
fwait
dec
inc
and
sub
ds
ja
movsw
sahf
dec
mov
mov
leave
sbb
in
cltd
mov
repz
kmovw
ss
pop
xor
stos
mov
mov
movsl
rolb
push
lret
and
and
lcall
pop
mov
stc
and
cmp
and
in
xor
out
sbb
ficoml
inc
inc
push
sbb
dec
ret
mov
in
test
xchg
xchg
adc
xor
sbb
mov
xlat
dec
add
out
sub
pop
je
jecxz
xlat
ret
lret
ret
mov
mov
cmp
jp
repz
or
fisubl
mov
les
xor
adc
mov
mov
pop
incb
data16
test
push
nop
fnstenv
aaa
cmp
aas
ljmp
xor
aas
adc
pop
out
repz
gs
inc
scas
movsb
mov
pushf
mov
sbb
sbb
sbb
sbb
cmc
dec
mov
inc
push
hlt
lds
jns
dec
or
aaa
inc
push
out
sub
jae
mov
mov
sub
jnp
fwait
out
adc
lock
rolb
shl
jecxz
out
fldt
and
sbb
push
fisubrl
cs
jno
inc
mov
daa
insb
clc
or
les
inc
insl
fisubrs
jle
pop
paddq
mov
mov
sti
xchg
add
movsl
and
call
inc
scas
mov
and
adc
xchg
cltd
lahf
pop
in
test
push
sub
push
or
mov
pop
movsb
scas
mov
add
or
cmc
fwait
xchg
ret
popfw
rorb
mov
fdivrl
loopne
rclb
popl
pop
dec
sub
mov
jne
inc
push
movsl
or
iret
icebp
popf
xor
sub
xor
mov
mov
cmp
mov
dec
mov
push
loope
sub
rorl
dec
dec
mov
sbb
call
adc
sub
and
mov
loopne
dec
lret
test
into
sbb
je
icebp
daa
xchg
loope
pop
sub
and
push
or
imul
fnsetpm(287
inc
dec
insl
lret
inc
xchg
and
dec
lock
idivb
cmp
dec
mov
xor
inc
int
nop
les
rcrl
jb
insl
shr
pop
mov
out
movsb
jno
adc
shrb
xor
xorb
fldl
push
pusha
cmp
sbb
fmull
mov
out
movsl
cmp
clc
mov
adc
add
ret
pop
adc
sub
pop
imul
mov
stos
mov
mov
xchg
sub
into
inc
mov
jmp
insb
insb
stc
repz
mov
shrl
in
jb
iret
pusha
mov
scas
in
repz
xor
mov
xchg
aam
mov
and
inc
dec
adc
mov
cmpb
icebp
subl
pushf
pop
fimull
xor
mov
cwtl
aas
sub
push
mov
push
and
ljmp
ja
mov
mov
dec
aam
pushf
adc
dec
bound
pop
roll
dec
mov
push
jmp
adc
scas
hlt
lods
sbb
sub
fisubs
fdivrs
test
sub
lea
mov
subl
xchg
ret
mov
jno
or
inc
inc
jb
push
mov
iret
sbb
xchg
pop
sbb
enter
jb
cs
dec
mov
push
outsb
dec
cltd
add
or
out
fcmove
test
dec
lds
sbb
sub
iret
adc
aad
dec
stos
aaa
out
sub
pop
pop
jge
std
xor
mov
cwtl
xchg
add
sbb
fwait
inc
pop
test
ret
jbe
aas
push
aam
orb
xor
inc
shll
sub
push
mov
lea
cmc
push
sti
pusha
jno
pushf
int3
cltd
ss
arpl
std
mov
push
mov
in
cmp
ljmp
xor
jns
or
cmc
push
pop
mov
pop
ret
je
adc
ljmp
subb
sbb
stos
dec
std
adc
push
jo
add
es
sbb
es
xchg
and
iret
jnp
gs
data16
scas
sbb
pop
aas
cwtl
sub
mul
addl
inc
jg
es
cmp
xchg
push
mov
sbb
mov
fwait
dec
mov
cld
xor
inc
push
dec
fimuls
iret
out
testb
mov
repnz
fwait
bound
xchg
push
cmpsb
das
mov
xchg
sti
sbbb
mov
idivb
loope
sbb
jle
pop
cmp
in
inc
cmp
xor
mov
jmp
adc
dec
cwtl
lahf
ds
out
xor
xchg
mov
sbb
popa
out
xchg
fxch
pop
adc
sbb
dec
leave
inc
stos
lods
pop
nop
faddl
mov
pop
imul
insb
mov
imul
sbb
pushl
fwait
mov
push
xor
call
cmp
xor
repz
out
ficompl
aam
out
repnz
stc
sbb
out
pop
mov
push
push
repz
movsb
cmp
xchg
mov
sub
mov
xchg
movsb
je
popa
fsubp
mov
orb
test
mov
shrb
jno
or
xchg
dec
in
stos
push
ja
and
ds
cwtl
in
xchg
shrb
pushf
daa
pop
movsl
fstl
aad
imul
adcb
cmp
push
popf
mov
dec
dec
mov
scas
sbb
and
mov
je
jg
and
mov
mov
adc
jno
mov
into
fimull
je
adc
jnp
dec
mov
dec
lds
dec
jge
ret
mov
movsb
mov
fiaddl
sbb
xor
mov
iret
fisttps
xchg
pusha
push
or
pop
shlb
sub
subb
push
dec
hlt
test
push
jmp
inc
sub
mov
loop
xor
pusha
push
dec
xchg
test
add
mov
ljmp
or
jo
lods
ficomps
ja
mov
dec
mov
mov
aam
or
ficompl
ret
loopne
jno
stos
lock
adc
mov
inc
lret
jmp
rorl
push
push
jbe
mov
cmp
inc
dec
adc
xor
mov
adc
cmp
in
shrl
out
lret
mov
adc
les
je
jae
inc
jmp
stc
dec
xor
cltd
or
jo
xchg
popa
mov
xchg
scas
lcall
mov
mov
sub
xor
or
stos
or
jbe
mov
push
stc
dec
sti
shll
push
jnp
xor
add
cmp
xor
dec
insl
lret
insb
adc
scas
pop
xchg
jb,pt
jae
out
mov
and
imul
or
push
cmp
push
lret
mov
std
add
mov
add
stc
dec
mov
adc
out
xor
les
and
xor
sbb
subb
or
movsb
lods
push
out
call
mov
lods
pushf
xor
or
test
mov
lea
dec
je
xchg
ss
sub
fwait
int3
mov
aam
test
fs
or
xor
mov
imul
into
push
dec
fwait
pop
loopne
clc
cmp
lcall
sbb
cmp
arpl
lahf
lcall
and
lods
mov
xor
and
sti
mov
xor
dec
xor
pop
jb
mov
mov
mov
popa
mov
push
aaa
jp
lods
ret
jo
hlt
out
outsl
jno
jecxz
and
add
pop
dec
push
pop
cmp
push
sub
push
inc
xor
xchg
dec
lret
js,pt
dec
pop
js
fcmovb
lret
sti
add
xor
fists
sarl
movsb
sub
push
loop
cmp
inc
xlat
mov
dec
adc
leave
sbb
pop
cmpsl
adc
out
icebp
dec
inc
jmp
cli
add
aas
cmp
or
out
push
mov
ret
andb
fldl
dec
pop
pusha
cmp
cmp
pop
in
inc
xor
iret
mov
dec
ja
popf
rcl
div
xchg
inc
dec
pop
cli
pusha
dec
hlt
sar
jbe
lret
ljmp
mov
pushf
fadds
out
pusha
jl
idivl
xor
mov
jb
mov
testl
push
in
sbb
or
inc
mov
mov
adc
inc
imul
mov
mov
pop
mov
inc
stos
shl
dec
inc
xchg
test
push
cmc
lds
out
push
test
outsl
cmpsl
mull
cmc
aam
or
jmp
jecxz
mov
jl
pop
test
inc
cmp
gs
inc
fcmovb
nop
push
cwtl
fldt
push
std
mov
imul
jmp
cs
pop
in
aad
lret
popf
push
sub
pushf
sbb
in
mov
rcrl
in
jl
dec
or
out
ljmp
sti
mov
jl
es
add
push
les
push
dec
dec
mov
lret
mov
in
int
stc
xor
dec
fcomps
addb
jbe
ss
popl
lock
fwait
jns
lretw
sub
outsl
movsb
stos
dec
ljmp
ficoml
jno
mov
pushf
mov
fdiv
lods
and
push
jno
int
std
cmp
mov
stos
into
mov
lds
out
sub
pop
jns
loopne
mov
or
js
cs
cld
push
sbb
cmp
mov
add
lods
and
xor
jge
mov
or
aas
sahf
and
testl
insl
jp
rcl
xchg
add
dec
shll
xchg
sub
enter
scas
and
mov
mov
testl
cld
pop
scas
mov
push
pop
add
jmp
inc
dec
mov
pop
mov
mov
or
testl
and
jg
pop
repz
rolb
cmc
inc
sbb
outsl
xchg
cwtl
adc
lds
ss
jbe
add
adc
sbb
mov
adc
xchg
and
xchg
fbld
mov
sbb
mov
lds
cmp
inc
sub
mov
divl
out
movb
or
pop
lret
shrb
push
jl
or
xor
shrl
nop
iret
cmp
gs
add
or
cmp
in
into
scas
mov
lea
mov
negl
jg
jno
int3
jecxz
xchg
loope
mov
inc
inc
push
idiv
fdivrp
cwtl
mov
lods
lret
aad
dec
inc
mov
dec
in
ljmp
jnp
in
subb
sub
sub
cld
or
mov
push
aad
int
int3
add
insb
inc
cmc
and
jmp
fiaddl
iret
mov
fisttpl
pusha
aad
pop
sub
call
pop
mov
push
add
adc
repz
sbb
mov
fimuls
icebp
lret
cmp
sbb
cmp
cmpb
dec
pop
mov
in
mov
cmp
mov
inc
cmp
sub
out
or
addb
jns
fwait
sub
popa
dec
jl
inc
and
pop
cltd
mov
mov
ret
adc
push
mov
mov
dec
adc
test
dec
lcall
jmp
dec
inc
sub
out
pop
and
mov
or
mov
dec
jg
outsb
into
movsl
arpl
mov
add
or
xchg
or
adcb
daa
rorb
cmc
pop
dec
and
into
push
stc
jl
pop
add
int
sbbl
cmpsb
dec
mov
mov
cmp
sarl
out
ljmp
orl
ss
pop
sub
xorb
faddp
in
mov
enter
jno
call
cs
movsl
push
sahf
das
scas
rcll
push
adc
shr
pop
dec
pop
jl
mov
fistpll
std
and
sbb
lods
adc
pop
int
cli
mov
mov
lock
mov
xor
mov
add
inc
mov
enter
adc
xchg
add
pop
inc
add
jg
ja
pusha
ljmp
jns
rorl
pushf
es
cmp
fwait
hlt
js
idivb
nop
es
addr16
xchg
jmp
popa
mov
sbb
push
sbb
or
mov
out
dec
ret
imul
adc
cwtl
iret
sub
les
feni(8087
xchg
xor
mov
popa
cltd
dec
or
mov
jecxz
in
push
fwait
push
mov
loopne
arpl
mov
lea
push
or
out
insl
fs
fistl
stc
push
cmp
add
pop
std
jecxz
inc
inc
das
test
push
add
inc
inc
inc
pop
push
mov
mov
mov
mov
bound
sbb
loopne
add
rcll
ret
mov
aas
xchg
movsl
pop
das
inc
in
add
push
cmp
mov
aas
hlt
pop
sahf
xchg
sahf
js
ss
or
pusha
push
andb
dec
fdivrl
mov
pop
mov
cmp
dec
xchg
xchg
shrl
ret
std
mov
insl
aaa
out
mov
mov
cmp
mov
add
xchg
inc
test
mov
mov
mov
push
jmp
mov
inc
or
out
adc
sbb
loop
imul
mov
fldcw
cmp
mov
xchg
rcrl
jmp
xor
sbb
xchg
push
inc
xor
shrl
ljmp
cltd
idivl
int
mov
pop
data16
sahf
mov
insb
lahf
push
mov
negb
ret
and
into
fs
push
jb
ja
sub
jp
ljmp
and
test
mov
test
imul
dec
int3
frstpm(287
sbb
mov
cmp
int
es
jo
rol
cltd
xchg
adc
jno
dec
mov
inc
lcall
or
and
inc
xchg
fidivs
adc
inc
outsb
mov
data16
jae
jle
pop
mov
rol
jmp
rorl
adc
add
orb
iret
call
outsb
mov
aaa
in
pop
stos
movsb
stc
sbb
cmc
or
sub
mov
mov
dec
jns
fcmovnbe
das
in
jbe
xlat
cmc
sub
pop
jl
mov
mov
mov
mov
mov
inc
xor
fs
mov
vunpckhpd
das
test
sub
pop
xor
movsl
movsl
call
cmp
mov
sbb
inc
push
in
aad
push
dec
stos
sub
mov
cmpsl
sti
push
bswap
jecxz
or
std
insl
mov
mov
das
and
push
ret
jno
push
rol
cs
adc
or
decl
or
orb
mov
cwtl
lds
scas
ror
fwait
mov
xchg
shrb
sub
call
or
fiaddl
dec
fwait
rcrb
or
shl
dec
repz
in
je
inc
ja,pt
sarl
jno
or
mov
fwait
cmp
inc
and
test
stos
cld
lcall
ficompl
test
mov
push
mov
jns
stc
fildll
testl
jge
push
mov
movsb
adc
jle
push
scas
int
in
dec
mov
lods
ljmp
jmp
outsl
jl
sub
rcrb
add
lods
in
jno
out
pop
jnp
and
push
insb
dec
gs
add
pop
add
inc
mov
ja
cmpsl
push
lods
pusha
jae
or
or
xor
xor
mov
mov
std
test
sub
imul
push
popa
cltd
fidivrl
call
sub
and
inc
dec
fstpt
mov
dec
ljmp
adc
or
push
mov
xor
push
adc
cwtl
sub
sti
cmp
in
mov
cmp
mov
mov
in
and
ss
mov
sahf
syscall
and
in
es
mov
jne
inc
push
push
pushf
jle
cwtl
sbb
mov
mov
jne
out
sbb
mov
sbb
xchg
arpl
scas
mov
imul
pop
and
dec
repz
inc
dec
xor
aam
sbb
mov
jge
pop
inc
fsubrs
mov
out
shll
pop
fs
popa
les
cmpsl
xor
xor
in
cmp
in
cs
mov
push
ret
mov
adc
nop
pop
imul
inc
sbb
clc
jne
sbb
push
dec
mov
loope
les
jb
aad
mov
cmp
lret
cmp
cmp
xchg
mov
popf
pop
lods
mov
in
jge
add
hlt
fcompl
fwait
sub
hlt
sbb
ds
loope
lahf
or
lods
fndisi(8087
popf
iret
nop
mov
lods
add
icebp
jae
bound
push
dec
xchg
jmp
divb
icebp
outsb
sbb
mov
sub
xor
inc
mov
inc
loope
das
xchg
mov
test
insl
insl
push
mov
hlt
jno
lret
pop
xchg
jl
xchg
xchg
mov
jle
jl
mov
sbb
or
xchg
jno
rolb
xor
dec
jno
push
push
mov
or
test
inc
daa
xor
rcrl
add
jae
paddusb
push
rep
ljmp
mov
adc
xchg
pop
dec
mov
test
jnp
clc
dec
pop
sub
inc
nop
add
xchg
pop
or
xor
jge
inc
jge
pop
movzbl
jp
sti
adc
xor
cmp
std
jns
jl
mov
stos
jno
js
sub
ss
jbe
lahf
xor
sahf
jg
repz
add
pop
inc
fisubrl
or
cmp
sbb
pop
scas
mov
jo
mov
jl
fs
jae
sub
test
mov
fadd
das
inc
movsb
scas
fwait
inc
inc
sub
xor
sahf
cmpsl
add
mov
inc
add
xchg
movsl
filds
imul
lods
cmc
jb
pusha
or
cmp
mov
in
fwait
pop
rcll
mov
cmpxchg
ret
mov
add
or
jl
dec
hlt
dec
arpl
addr16
stos
pop
mov
push
rcll
popf
and
popf
push
or
mov
daa
jbe
scas
out
pusha
or
jl
pop
mul
jne
call
sub
mov
or
test
push
in
rcl
in
dec
ja
mov
ret
xchg
cmp
inc
push
sbb
mov
pop
cmpsb
fwait
lret
dec
sti
cs
or
iret
jp
pcmpgtb
mov
cld
xor
inc
sbbl
dec
jl
mov
jnp
mov
pop
mov
in
cwtl
pop
jmp
and
mov
mov
adc
nop
push
fimuls
cld
stos
sub
std
cwtl
clc
inc
adc
push
imul
std
xor
and
shll
scas
xor
mov
test
cmpsb
jmp
aam
pop
mov
imul
dec
sbb
outsl
adc
aad
dec
das
inc
sbb
int
jg
jo
xlat
mov
addr16
sbb
dec
lods
pusha
mov
cli
sahf
mov
shlb
inc
jbe
xchg
je
or
daa
sti
insb
mov
mov
adc
inc
or
fisttps
repnz
pop
movb
pop
lds
out
fsubrs
imul
adc
fs
fisttpll
and
dec
dec
mov
or
loopne
mov
leave
and
dec
movsb
cmp
pushf
inc
sub
pop
and
jno
lods
xchg
pop
dec
scas
fimull
push
int
or
shlw
leave
lret
adc
ja
push
int3
loopne
popw
xchg
dec
xchg
cmp
mov
leave
jae
stos
icebp
into
add
inc
mov
mov
movsb
or
roll
cld
fidivl
mov
xor
add
loopne
divb
ret
test
xchg
rcll
cmpsl
imul
dec
ds
and
push
ret
vxorps
out
push
in
nop
mov
pop
mov
or
insb
mov
mov
mov
sbb
dec
push
in
stc
jne
aam
adc
inc
fbld
pop
dec
mov
xor
decb
into
push
imul
movsl
pop
aas
mov
sbb
xor
sub
cli
cs
cmp
jnp
enter
fisttpl
sahf
mov
add
pusha
dec
data16
mov
xor
mov
scas
or
mov
rcrb
pop
sub
sub
ss
out
and
outsb
iret
xchg
jle
iret
mov
cltd
push
mov
loopne
and
pusha
xor
inc
jg
cli
decl
xchg
loopne
cvtps2pd
es
or
sbb
mov
jmp
movsb
mov
aam
sub
repnz
push
lret
icebp
push
push
xchg
insb
mov
sub
add
aam
add
aad
or
in
mov
jmp
inc
mov
in
rol
dec
loop
test
shll
aam
loope
es
fcomi
fcomi
jl
bound
mov
fsubrl
shl
push
dec
mov
repnz
cmpsl
mov
daa
fsqrt
loopne
xlat
jl
loope
fs
into
xchg
fcompl
dec
mov
outsb
cltd
mov
cmp
mov
mov
xor
lds
sbb
enter
js
jnp
ss
out
sbb
cmp
add
pop
add
jbe
outsl
mov
dec
mov
xlat
ljmp
pop
push
pop
jno
mov
xor
sub
add
mov
stos
jl
jg
push
dec
es
insb
dec
jecxz
jg
data16
stos
jl
test
and
ja
mov
pop
pop
lret
jno,pn
pop
fimuls
or
fisttps
pushf
cmpsb
mov
rcrb
push
jae
pop
mov
cvttps2pi
xor
ja
adc
out
xor
mov
popa
loop
add
in
fsubrs
sbb
inc
nop
sbb
push
into
jno
cltd
adc
push
pop
testl
jg
sbb
pop
xchg
jmp
leave
dec
mov
or
mov
xor
jbe
add
mov
jl
mov
xor
fcoml
add
and
inc
lcall
into
xor
lahf
mov
mov
in
shll
mov
out
idiv
mov
xor
jecxz
das
sahf
int3
in
or
cmp
jb
or
jecxz
out
inc
test
push
call
repnz
je
hlt
ja
adc
fwait
adc
dec
mov
pop
inc
push
jl
cmp
xorl
or
mov
pop
and
mov
or
fsubrs
out
adc
xor
jo
adc
or
xor
scas
jge
mov
mov
mov
int
lea
ret
mov
shll
mov
dec
nop
dec
mov
scas
leave
in
mov
lods
xor
pop
sub
and
mov
pop
imul
pop
je
cmc
stc
mov
push
push
mov
mov
je
mov
mov
mov
aad
je
and
push
sub
rol
repnz
sahf
inc
fisttpll
fidivrl
sbb
mov
ss
mov
dec
inc
xchg
scas
daa
sbb
xchg
push
fwait
insb
push
ss
mov
sub
sbbb
cmp
popf
stc
xlat
mov
test
popa
sub
sub
ret
ficoml
arpl
jns
mulb
dec
mov
loopne
xlat
test
pop
movsb
mov
mov
wrmsr
sub
push
shll
das
stos
mov
add
dec
xor
adc
cmp
dec
sbb
mov
cmpb
mov
xor
pop
scas
push
jl
repnz
mov
in
jno
and
mov
loopne
pop
andb
mov
shrl
xchg
pop
jl
and
ds
jge
xorb
jae
jmp
sti
sub
lcall
jnp
js
fisttps
push
sbb
es
jmp
in
mov
lret
scas
pop
jb
in
cmpsb
and
outsl
jbe
mov
xlat
popf
lahf
jmp
cmp
dec
xor
hlt
leave
in
bnd
adc
fcmovnbe
inc
aad
push
mov
imul
je
lock
mov
jo
fisttpl
arpl
xchg
scas
pop
rorl
pop
mov
fisttps
sbb
xchg
dec
frstor
js
sbb
scas
mov
iret
cmp
rcll
into
orl
int3
add
test
pop
mov
adc
jg
lods
mov
mov
xor
nop
cmp
jl
add
push
iret
leave
add
sub
inc
inc
ja
decl
sbb
mov
xchg
sbb
adc
stos
xor
mov
lods
call
dec
mov
xchg
fs
inc
dec
inc
lea
xor
jno
lret
push
xor
cmp
sahf
inc
subb
pop
mov
push
nop
jecxz
mov
rorl
pop
fwait
mov
ds
in
sbbl
add
rcrb
jecxz
mov
dec
fbld
mov
out
lods
sbb
ss
mov
add
loop
xchg
jecxz
addr16
inc
pop
jae
ficompl
shr
and
xchg
xor
sub
sub
xchg
sbb
rorl
sti
das
sbb
inc
out
fistpl
sbb
loope
dec
push
push
stos
mov
xchg
mov
cmp
xor
add
test
pop
jg
and
jbe
dec
jae
cmp
jns
ret
jb
fldcw
sub
rcl
mov
pop
inc
add
inc
adc
cwtl
addb
and
in
inc
mov
aas
sub
loope
mov
stos
jno
ret
mov
mov
sbbb
sti
jl
add
xchg
xor
or
push
inc
fwait
jp,pn
sbb
mov
notl
add
fsubl
das
ret
dec
aad
pop
test
push
leave
iret
out
pop
push
es
pop
inc
inc
mov
push
dec
std
mov
outsl
lds
stc
pop
shlb
je
and
inc
jl
ljmp
jg
scas
ficompl
jne
sbbl
cmp
jp
lret
lcall
addb
sbb
xor
leave
stos
pop
push
enter
repnz
mov
xlat
sbb
cmc
mov
popf
mov
jge
cmpsl
and
jle
push
fs
fs
jno
sub
jmp
push
loope
jg
jg
pusha
xor
mov
out
mov
jne
mov
out
je
jp
sbb
test
adc
adc
xor
shrl
rcl
or
ds
stc
sub
xchg
mov
dec
add
popa
jg
out
xchg
or
insl
sbb
aas
jg
pop
xchg
pop
rorl
xlat
cld
mov
mov
shrb
cmpb
jno
out
js
add
js
aad
mov
out
aam
push
jnp
inc
daa
fs
xchg
dec
pop
cmp
pop
inc
inc
cmpsl
adc
fcoml
push
push
pop
pop
pop
fisttpll
inc
popa
test
loope
sub
jecxz
dec
push
mov
movsb
mov
lods
addr16
sub
pop
pusha
dec
test
xor
insl
fstpt
push
jl
jns
mov
sub
je
movsb
scas
sahf
inc
daa
mov
cmp
lcall
out
and
mov
testb
add
add
sub
or
je
imul
std
lret
dec
roll
dec
int3
fldl2e
jge
jae
xchg
mov
or
out
pop
cld
xchg
jns
aam
sub
mov
dec
dec
insl
jae
shl
mov
push
sub
xor
adc
mov
fistpl
out
cmp
mov
push
jnp
rorb
jle
jnp
fdivp
dec
filds
lahf
fisubrl
jns
jg
add
pop
adc
ret
adc
imul
insl
scas
xchg
loopne
mov
cmpl
and
push
fmuls
inc
inc
bound
sbb
push
fs
inc
sysret
pusha
cmp
xchg
xchg
ss
inc
add
js
pop
sub
push
int3
mov
push
adc
adc
rcrl
test
lods
or
movsb
mov
roll
icebp
nop
sti
hlt
leave
loope
in
out
loopne
movsl
inc
xchg
mov
adcl
or
nop
fdivl
mov
cltd
pusha
subb
xor
xor
cmp
fstps
cli
rol
test
inc
testl
repz
data16
fistpl
push
into
outsl
push
scas
jmp
push
cmp
arpl
mov
inc
roll
mov
adc
aaa
sub
pushf
icebp
repnz
and
push
pop
push
test
fstps
out
ja
xchg
or
push
lahf
sub
add
cmp
jnp
pop
xchg
sbb
xorb
jns
pop
cmpsb
mov
dec
loope
pop
test
in
stc
pop
mov
push
mov
xor
xlat
push
ds
jnp
rcrl
inc
dec
mov
jge
push
push
hlt
ds
dec
and
sahf
clc
mov
inc
fistpl
repz
add
mov
orl
pop
clc
pop
mov
aam
adc
cs
pop
sub
or
call
cld
cmp
dec
or
enter
jg
shl
or
idivl
iret
cmpsl
xchg
sbb
inc
in
mov
fbld
aaa
lods
mov
pop
aaa
pop
pusha
xchg
xor
sub
jb
int3
mov
stc
sbb
jmp
mov
sub
testl
nop
not
daa
jl
jg
or
call
add
pop
lret
js
add
inc
dec
sbb
dec
pop
mov
data16
clc
in
sub
sbb
cmp
xor
cmp
aad
adc
mov
inc
dec
sbb
inc
sti
cmp
add
jg
pop
xor
out
fbstp
loope
push
fcmovbe
mov
out
mov
and
or
fcoms
sti
push
push
xor
lret
dec
sbb
adc
mov
inc
sbb
bound
imul
xchg
into
sti
lret
add
out
sub
test
adc
movsl
add
cs
movsb
stc
xor
mov
mov
or
adc
mov
insl
inc
or
std
inc
sti
push
mov
mov
incl
xor
pop
mov
cs
or
pop
mov
das
fs
mov
cmp
out
xchg
add
push
pop
and
into
jmp
jl
or
stos
cmc
xchg
cmp
clc
insb
push
and
dec
push
mov
fildl
cmp
cmp
cmc
sbb
arpl
xor
aaa
mov
popa
movsl
subb
das
push
negb
dec
movsb
xor
in
jg
fwait
adc
or
or
xchg
jg
sbb
jae
lods
ret
test
sti
cwtl
nop
mov
sbb
vpshlq
jp
stos
push
orb
sti
imul
mov
enter
sub
fsts
pop
push
mov
adc
fsts
icebp
add
add
inc
icebp
mov
out
inc
jg
sbb
cld
orl
es
mov
cmpsl
cwtl
dec
imul
inc
add
adc
and
jae
cwtl
add
imul
lds
shlb
jmp
iret
out
fsubrp
mov
dec
cltd
xchg
jnp
test
add
clc
pop
leave
mov
jne
jl
add
inc
sub
mov
mov
and
paddd
fiadds
scas
out
andl
adc
inc
in
arpl
repz
mov
adcb
cmp
and
jno
mov
push
jecxz
test
hlt
addr16
scas
jl
cwtl
nop
push
int3
in
mov
inc
gs
pop
and
push
add
cmpsl
or
in
je
xchg
dec
stos
mov
adc
xchg
daa
sti
fwait
outsb
mov
adc
test
add
sub
jno
cmp
lret
psubw
inc
ja
cwtl
ja
add
js
pop
pop
pop
xor
jl
push
stos
movsb
ds
mov
fwait
cmc
pop
and
sahf
dec
cmp
mov
xor
push
insb
pusha
mov
rcrl
imul
cmp
dec
mov
inc
or
dec
and
mov
pop
shll
lock
sahf
std
pop
xchg
ret
outsb
notb
push
arpl
pop
jnp
jb
and
pushf
inc
dec
jmp
sbb
std
push
fwait
std
mov
sub
dec
sub
testb
inc
fiadds
push
cmp
out
cli
iret
xchg
ja
mov
sbbb
mov
jb
cld
push
data16
dec
repnz
push
xchg
dec
cmp
add
leave
scas
pop
mov
dec
sbb
in
enter
loope
out
lods
mov
dec
lods
cmp
mov
stos
adc
orb
push
jns
and
int
xchg
aas
xor
xchg
ds
cs
notb
fidivs
ja
repz
in
imulb
test
mov
or
mov
jae
pop
mov
sbb
mov
sbb
cmp
and
mov
dec
xor
push
or
push
mov
das
jge
jecxz
mov
adc
fs
mov
nop
fldl
fsts
mov
push
and
inc
mov
je
ret
or
daa
jae
test
dec
fdivrs
inc
fwait
jne
fnsave
pop
pop
rcrl
mov
pop
in
lret
mov
mov
addb
mov
pop
repz
pop
into
lea
imull
xchg
jbe
aaa
mov
outsb
jge
scas
jg
jb
pop
loopne
mov
int
dec
fs
adc
cltd
sti
jae
fcmovnu
push
pop
cltd
jbe
shll
sbb
sub
sub
lds
xchg
rcll
repz
cmp
jle
mov
jl
cmp
jg
dec
insl
decl
mov
lods
push
and
jo
xorl
call
inc
sbb
dec
dec
mov
sub
test
sub
mov
pop
repz
mov
hlt
es
push
mov
adc
mov
mov
cmp
push
jge
fs
xchg
jle
scas
sbb
xor
sbb
mov
dec
std
popf
popl
push
icebp
mov
sub
shlb
adc
fs
loope
mov
mov
ret
dec
mov
shll
fldt
mov
sub
sub
inc
push
fisttpl
mov
fsubl
movsl
in
cltd
fs
mov
mov
daa
mov
call
add
insb
out
mov
arpl
fwait
xchg
lods
cmp
jp
push
aam
sub
dec
xchg
mov
scas
frndint
fcom
out
xor
jae
or
test
add
js
jl
cmp
popa
push
out
pop
shrl
imul
adc
push
cmpsb
in
sub
pop
es
jmp
mov
push
clc
ljmp
mov
stc
nop
out
jecxz
leave
notl
push
mov
jb
sub
std
dec
loope
push
scas
ret
mov
cmpsl
js
hlt
dec
add
add
and
lea
movsb
fcmovbe
xchg
cmp
loope
xor
call
adc
popf
ja
xor
dec
mov
jno
pop
call
mov
mov
adc
sbb
jge
lret
pop
xchg
xor
mov
sub
mov
or
out
rorb
rcrb
aaa
mov
sarl
pop
mov
xchg
fcomps
in
out
dec
inc
pop
fldl
test
fisubrl
mov
daa
push
cmpsb
dec
cld
pop
jne
loope
xor
sbb
insb
jle
push
cmp
mov
mov
push
sub
icebp
movsl
fucom
sub
fidivrl
scas
mov
shrb
jecxz
xchg
sub
sbb
ss
popw
jbe
cli
jp
test
lock
adc
hlt
inc
push
jb
pop
cmpsb
data16
aaa
insb
lods
mov
scas
aad
sbb
fwait
jno
mov
lock
mov
push
sub
jo
mov
ja
test
flds
sub
cmpsl
push
jl
jle
mov
les
or
iret
fidivrs
add
adc
repnz
fs
nop
mov
jmp
pop
mov
int3
push
dec
stos
fisubl
jecxz
xchg
in
add
aam
lret
repz
out
sti
out
push
xor
test
pop
pusha
lock
test
mov
adc
jmp
out
mov
and
xor
cmpsb
mov
sti
jb
int3
mov
jo
les
imul
mov
dec
mov
in
aas
pop
xchg
std
dec
leave
cmp
scas
xor
testl
out
and
test
adc
fstpt
mov
leave
sahf
adc
mov
add
xor
pop
mov
les
dec
push
mov
lahf
imul
pusha
fldcw
xor
js
sbb
fisttpll
adc
out
das
inc
iret
cmp
jecxz
imull
ffreep
jl
xor
mov
mov
dec
lods
loop
fbld
lahf
mov
xchg
pop
mov
add
jb
inc
sbb
adc
xchg
ret
xchg
mov
out
loopne
inc
not
iret
cld
into
and
mov
jp
pop
mov
mov
sbb
loopne
mov
dec
push
loop
loope
mov
cwtl
sbb
dec
ret
push
jge
pop
pop
sbb
mov
and
push
fcom
pop
xor
mov
lret
inc
adc
pop
or
sarl
pop
push
or
aaa
xchg
mov
xor
push
mov
or
inc
mov
dec
insl
and
jnp
psadbw
cwtl
push
jno
repnz
adc
adc
jnp
mov
lahf
mov
mov
jecxz
shll
sbb
mov
push
xor
aad
inc
addr16
mov
andl
mov
pop
outsb
cmp
pop
add
mov
add
ja
fstpt
add
fstpl
and
cmp
fdivrl
sub
dec
cltd
xchg
iret
scas
std
add
fcomps
cs
dec
sti
or
push
orl
cwtl
inc
jl
pop
push
in
mov
sti
pop
mov
or
sbb
pop
shlb
sbb
lret
in
cmpsb
outsb
lock
pop
sub
clc
adc
jae
int3
cmp
push
popa
mov
sub
cltd
and
jl
insb
fwait
jae
cmpl
mov
fabs
nop
test
adc
clc
and
push
mov
cmp
adc
cmpsl
daa
pushf
xchg
cltd
sub
icebp
push
sbb
push
dec
sub
mov
jnp
ret
bound
add
jge,pt
cmpsl
hlt
push
idivb
inc
xor
push
out
popa
pop
and
push
daa
sbb
dec
add
mov
jns
xchg
mov
lret
dec
cmpsl
push
xchg
pusha
cmp
adc
cmp
pusha
dec
subl
adc
mov
mov
andl
lahf
popa
movsb
jp
jnp
add
jae
push
lea
cmpsl
dec
out
cltd
jle
cmp
popf
shll
adc
pop
pop
imul
cmc
and
xor
notl
ds
pop
adc
dec
pop
jnp
fimull
sarl
mov
mov
adc
jl
imul
loope
mov
pop
movsb
aaa
data16
inc
fadd
insb
imul
mov
call
shrl
mov
mov
arpl
cmpsl
cs
lods
insb
dec
dec
mov
imul
pop
jno
mov
repnz
mov
rorb
andl
dec
mov
jl
lods
popa
mov
push
dec
mov
mov
iret
dec
call
push
pop
test
daa
pop
mov
out
leave
adc
mov
movsb
imul
movsl
sub
xlat
movsw
cltd
sti
sub
lret
mov
enter
ret
dec
cmp
loope
cmpsb
inc
imul
cmpsb
jbe
xor
mov
jmp
fisubs
fidivrl
fwait
subl
xor
mov
lret
icebp
push
notl
enter
add
jae
fs
lret
out
shrl
sub
hlt
test
xlat
jge
js
pop
cmc
sbb
dec
ss
adc
inc
movsb
repz
loopne
sbb
xlat
jnp
mov
jge
mov
pop
dec
inc
imul
adc
out
or
shrl
loope
adcb
mov
mov
push
scas
jae
sahf
push
lea
test
sub
push
jne
jno
sub
test
xchg
fistl
and
push
jl
lret
cltd
xor
jnp
inc
dec
dec
fstps
into
movsb
jge
mov
push
in
pop
dec
lcall
sbb
int
std
test
lods
jbe
repz
add
into
mov
pop
cmp
pushw
pop
icebp
sub
lret
scas
inc
add
sbb
movsb
adc
fsubrs
js
add
push
mov
jae
out
stos
mov
jmp
fucomp
push
ja
or
test
cmpsb
fisubs
enter
mov
jne
fs
jae
adc
movl
jbe
dec
jp
sbb
mov
dec
sub
ss
out
lods
inc
and
push
in
adc
pop
xor
jl
js
dec
inc
fmuls
hlt
popa
shrb
mov
mov
jae
xchg
adc
and
mov
dec
push
out
xchg
cltd
in
int
enter
nop
or
loopne
jbe
push
nop
cmp
xor
adc
pop
mov
xor
movsl
test
pushw
and
jns
repz
arpl
sbb
lcall
mov
pop
imul
pushf
rcrl
push
popa
loopne
nop
sti
imul
or
mov
ficoms
clc
xchg
fs
xchg
mov
mov
stos
cltd
mov
ljmp
addr16
call
mov
xorb
and
sahf
mov
jecxz
xor
fldenv
fmull
test
fwait
jno
or
dec
sub
dec
mov
jg
pop
faddp
mov
inc
cmpsb
mov
push
jnp
in
adc
sarb
jle
dec
mov
cmc
jnp
icebp
mov
jl
and
fwait
rcll
or
mov
inc
arpl
adc
pop
hlt
or
pop
pushf
mov
pop
sub
push
mov
lods
cmp
cmpsb
sbb
jbe
std
sbb
mov
pop
fdivl
test
inc
mov
xchg
xor
jmp
mov
lret
ds
and
sbb
inc
adc
pushf
cmp
fimull
mov
xchg
sbbb
push
add
lods
cmpsb
cwtl
mov
pop
aam
mov
cmp
sub
lret
andb
dec
dec
in
dec
dec
cmpsl
cmp
das
jbe
and
leave
fistpl
imul
sbb
fwait
insb
sti
gs
inc
int
insb
push
iret
xchg
cmp
idivb
repnz
cltd
xchg
mov
or
fwait
ret
ret
pop
sub
jo
iret
mov
xchg
lret
imul
inc
sub
mov
fisubs
movsb
or
jl
mov
add
cmp
fst
mov
xchg
dec
in
jno
int
lods
sbb
sbb
jg
loopne
mov
cmp
arpl
out
mov
sub
fs
xor
rorb
sub
pop
jmp
mov
mov
icebp
andb
xchg
mov
ds
jne
fcmovnbe
adc
cltd
lods
ret
cwtl
adc
cmp
pop
mov
xor
mov
pop
pop
ret
das
pop
iret
adc
jg
mov
push
mov
and
es
pop
shll
push
add
jmp
jno
enter
mov
loope
hlt
fsubs
test
mov
pushf
pop
mov
add
lods
outsb
test
dec
rorl
adc
xchg
push
ret
les
in
fdiv
loope
mov
lcall
mov
outsb
stos
inc
push
iret
fdivrs
fwait
and
les
jne
cmpsl
fwait
or
and
mov
dec
mov
insb
test
and
ficompl
ficompl
and
jno
into
pop
outsb
js
aam
jle
pop
jo
jp
je
fisubl
aad
pop
inc
shll
jmp
test
and
sub
iret
rcr
mov
mov
std
push
inc
fisubrs
scas
ss
daa
mov
or
dec
push
sub
idivl
xor
pushf
jle
jmp
mov
incl
mov
outsb
mov
nop
es
out
iret
das
add
ficomps
push
roll
popa
dec
jno
jle
pop
hlt
cmp
dec
or
jl
out
or
stos
push
jo
repz
inc
inc
pop
arpl
push
sub
cmp
push
pop
mov
mov
inc
iret
add
add
push
ret
pop
sub
jmp
stc
lret
scas
jno
sbb
pusha
js
mov
std
test
push
push
jmp
mov
leave
jns
mov
movsb
movsb
cwtl
sbb
js
cmpsl
jnp
mov
ja
sti
sti
push
stc
adc
xchg
mov
mov
pop
pop
sbb
cmp
xchg
imul
cmp
sbb
adc
sub
cmp
shr
adc
mov
loop
xchg
cmc
pop
fbld
imul
pop
sbb
or
push
dec
and
pop
mov
pusha
push
lret
sub
insl
cs
dec
inc
nop
sti
push
jnp
mov
fneni(8087
push
outsl
dec
daa
pop
cmpsl
mov
mov
push
jg
cmp
shlb
push
loop
cli
push
pop
lret
lret
ja
out
icebp
aad
fwait
pushw
dec
bound
push
sub
out
lcall
iret
cmp
mov
mov
aam
fistl
jns
inc
cs
sti
xchg
pop
cmp
test
add
xchg
lods
enter
pushf
outsb
xor
mov
pop
mov
fisttps
dec
cmp
or
cmp
add
add
inc
cld
lock
mov
imul
fs
iret
mov
or
pop
add
cmp
testb
js
fs
aam
ss
in
into
adc
cld
xchg
adc
hlt
push
sub
sbb
ljmp
fmuls
mov
fnstsw
pop
mov
jg
push
jg
nop
xchg
add
and
iret
test
adc
test
aam
mov
scas
es
mov
inc
mov
inc
pop
push
shrb
and
sub
test
adc
pop
push
gs
jp
cmp
adc
mov
xor
inc
adc
loopne
push
rolb
movsl
test
pop
cmpsb
sub
inc
addr16
stos
ja
fdivl
cmpsb
push
mov
cmp
fbld
fwait
inc
adc
mov
das
jecxz
dec
jb
hlt
add
addr16
pop
cld
sarl
int3
xchg
es
cld
sub
out
add
test
inc
cld
arpl
cmpsb
movsl
or
out
mov
or
stc
add
mov
in
lods
push
std
sti
sbb
pop
jo
in
pop
mov
nop
pop
mov
jno
xchg
ljmp
int3
sbb
dec
test
pop
pusha
cmpl
aam
sbb
jmp
cmp
pop
out
mov
lods
xchg
jecxz
addr16
roll
mov
clc
push
add
lods
adc
dec
std
push
in
ds
mov
int
cmp
dec
hlt
cmpl
sub
mov
aam
jg
mov
pop
jbe
or
mov
aam
fcompl
es
mov
mov
imul
jno
push
jl
fbstp
or
shll
add
xchg
sbb
lcall
push
adc
sub
pushf
jae
sbb
cmp
push
xor
add
cmp
repz
in
xchg
rorl
jnp
xor
jge
inc
push
adc
jl
fwait
xor
mov
and
pop
mov
mov
inc
ret
and
dec
ja
jno
pushf
mov
mov
cltd
cmp
mov
cmpb
movl
pop
mov
sbb
movsb
addr16
pop
cmpsl
jge
mov
out
fs
mov
pop
cli
jmp
dec
out
fs
inc
mov
sbb
and
xchg
js
stc
stc
fmull
insb
push
jmp
in
cs
lret
inc
inc
dec
arpl
leave
jge
repz
fwait
subb
adc
mov
loope
jmp
or
xor
enter
movsl
pusha
insb
jmp
or
pop
cmp
mov
jns
aam
push
into
push
xchg
cmc
add
dec
inc
mov
pop
pop
out
andb
in
add
pop
fcompl
sub
movsb
scas
fisubrs
sbb
sbb
sub
lahf
xor
mov
cs
ret
xchg
cmpsb
push
ljmp
jg
dec
mov
push
pusha
dec
movsl
mov
int3
stos
pop
ficoml
cltd
cltd
jnp
mov
add
add
aas
xlat
stc
ss
push
jns
fdivs
fsubrl
aaa
mov
popf
fcoms
xchg
in
inc
push
mov
iret
mov
mov
call
or
mov
sarl
mov
fildl
sub
mov
jbe
sbb
mov
sbb
aaa
adc
aad
push
mov
jbe
movsb
in
in
add
or
inc
dec
or
xor
dec
sbb
repnz
popf
jo
lahf
inc
dec
cmp
pop
cmpsb
mov
ret
stos
inc
iret
jae
enter
dec
sub
inc
add
fcomps
mull
xchg
movsb
fmull
ret
call
add
lods
dec
xor
not
je
dec
fs
std
cmc
aas
es
sub
mov
aam
jns
negl
js
sub
cmp
les
or
pop
dec
out
jge
xor
ss
sbb
leave
dec
adcb
clc
xor
cmc
sbb
loopne
jg
mov
sbb
insl
or
xor
sarl
push
fcmove
stos
mov
mov
mov
cmc
mov
sub
stos
js
insb
jl
lret
fisttps
and
or
lahf
je
outsb
pop
mov
mov
sub
adc
pop
xchg
push
daa
cmp
xchg
lret
pop
dec
out
adc
lea
dec
xchg
fstpt
push
outsb
sbb
imull
fcomps
inc
push
pop
jmp
xlat
pop
sbb
cmc
ficomps
jmp
jo
pop
or
adc
orl
cwtl
outsl
sti
or
hlt
jne
outsl
pop
inc
inc
cmc
std
lea
je
cmp
popa
cltd
cltd
or
cli
mov
xlat
shll
or
pop
cs
jnp
jmp
push
mov
mov
scas
add
mov
imul
sahf
xchg
fdivrs
push
mov
je
fisubrl
ljmp
add
lds
ja
xchg
pop
and
cmp
push
sub
pop
ja
push
mov
xchg
sbb
jns
lret
cmp
lcall
mov
shr
ja
rorb
add
mov
mov
xor
jne
push
dec
leave
not
push
mov
and
fistl
cmp
and
ret
cld
or
lea
sbb
cwtl
clc
outsl
mov
mov
jmp
adc
out
test
xchg
cmp
xor
adc
cmp
pop
jmp
out
and
cmp
cmp
dec
cwtl
mov
loope
and
pop
pop
insb
idivl
push
xor
cltd
aad
add
movsl
jmp
cld
dec
mov
mov
mov
dec
aaa
and
jmp
inc
cmp
lods
arpl
cmpsb
mov
mov
mov
repz
sbb
mov
cs
daa
mov
jg
xor
fiadds
inc
fcompl
xor
jmp
imul
in
cld
adc
inc
dec
mov
cmc
mov
je
push
jo
xchg
iret
pop
inc
adc
outsb
sbb
ss
mov
in
inc
push
testb
pop
sti
insb
imul
push
cltd
into
or
xchg
push
add
and
rcrb
aad
mov
sub
fcmovne
dec
imul
dec
adc
imul
adc
push
mov
cmp
add
pushf
enter
mov
test
and
mov
mov
imulb
mov
cmc
sub
add
inc
sbb
pop
xor
pop
pop
fistps
jnp
jae
outsl
sub
sbb
fstl
incl
push
aaa
aam
or
xor
jmp
sbb
sbb
data16
add
sub
cwtl
dec
push
icebp
and
fwait
clc
mov
outsl
mov
adc
jg
mov
push
test
icebp
stos
mov
mov
shll
nop
cmp
pushf
xor
packssdw
adc
jne
cwtl
iret
adc
cmp
mov
call
push
push
fwait
pop
mov
push
mov
out
xor
insb
sbb
imul
andl
jnp
cmp
jmp
cltd
xor
sbb
sbb
xchg
sub
test
inc
fiaddl
xor
rcll
test
sub
out
sub
inc
loope
pop
ret
and
icebp
jne
out
push
dec
rclb
push
out
xchg
sub
aaa
movsl
ja
fwait
sub
lds
push
icebp
cmpsl
push
imul
xchg
lret
pop
xchg
mov
stc
xor
loop
jmp
testb
jae
fstpt
arpl
mov
sub
mov
out
xchg
inc
imul
cmpsw
and
mov
push
mov
inc
sub
call
cmp
or
mov
mov
hlt
stc
ja
shll
stc
insw
lock
jno
mov
or
xchg
fldcw
push
push
rorb
fcmovb
es
in
hlt
jmp
xchg
mov
pop
jp
daa
das
mov
pop
movsb
pop
decb
movsl
push
add
add
ds
dec
loop
inc
outsb
pop
cmp
xor
test
pop
xor
daa
and
mov
mov
inc
push
jb
hlt
pop
testb
stos
push
cmp
xchg
xchg
jae
pop
arpl
xchg
pop
xchg
cmp
sub
ffreep
adc
ja
dec
push
or
ficompl
sub
cmpsb
push
xor
mov
subb
aaa
xor
imul
mov
daa
mov
mov
iret
xchg
xor
int
popa
idivb
leave
scas
call
fwait
xor
aas
rcrb
xor
pop
fistpl
in
cmp
sub
inc
punpckhbw
jae
out
or
loope
mov
iret
mov
push
mov
mov
cmp
push
pop
sti
and
in
pop
lahf
mov
lock
loope
jne
dec
mov
cmp
jns
fcomps
cmc
jle
cli
xor
pop
out
int
cmpl
mov
lds
mov
sub
push
flds
dec
fs
fmuls
push
push
std
lods
ljmp
mov
sbb
sbbl
idivb
enter
dec
das
ret
jp
roll
and
fisttpl
jmp
icebp
movsl
push
sti
hlt
movsl
pop
fstpt
sbb
mov
mov
scas
ret
insl
push
mov
ljmp
jmp
mov
data16
mov
insb
cmp
mov
stos
mov
mov
cmpsb
shl
in
pushf
scas
sub
mov
shll
inc
movsl
push
test
push
mov
adc
dec
out
dec
arpl
shrl
xor
mov
or
fimuls
pop
xor
push
dec
fmull
sti
test
and
sarl
sbb
jg
or
movsb
ret
sub
mov
into
nop
jo
movsl
ss
pop
ret
notl
and
adc
lock
in
test
sti
hlt
lret
jno
js
inc
inc
sbb
xchg
jg
lcall
arpl
push
mov
sub
aam
lods
mov
js
popa
mov
into
lods
orb
sar
je
insb
fs
pushf
jge
mov
mov
mov
push
mov
jecxz
push
fwait
push
flds
cmp
mov
cmp
aas
ds
in
mov
xchg
sti
jg
out
into
mov
mov
scas
add
ret
dec
arpl
add
inc
xor
mov
push
mov
pop
cld
ret
push
sub
add
jle
sbb
mov
sbb
mov
cmp
stos
pop
stc
data16
cmpsl
dec
cmpsl
mov
add
pop
mov
push
pop
das
lock
pusha
stos
xchg
cmp
jle
lcall
mov
lea
std
in
fstp
dec
pushf
ret
jnp
sub
or
jecxz
sbb
dec
pop
jo
and
sarl
fsubl
popf
xchg
jecxz
sti
in
lret
hlt
and
into
mov
cmp
iret
sbb
add
shl
dec
mov
sbb
inc
sbb
movsl
je
scas
and
lds
outsb
xchg
pop
cmp
fs
inc
lret
ljmp
jno
push
les
movsb
sub
or
jno
cld
mov
fs
mov
mov
je
cmp
jbe
cmp
lods
cwtl
cmpsb
add
std
negb
pop
push
mov
xlat
loopne
cmp
sub
fwait
jl
inc
dec
mov
stos
outsl
mov
mov
jl
add
movsb
movsb
lahf
cmp
mull
js
es
xlat
xlat
sbb
push
push
cmpsb
xor
mov
sub
mov
stos
pushf
iret
xor
in
sahf
ja
mov
add
mov
cmp
sti
fwait
add
arpl
int
xchg
adc
arpl
cmp
mov
adc
inc
shll
fwait
dec
xor
in
lods
les
in
mov
mov
mov
lods
push
adc
mov
clc
cwtl
in
out
pop
xchg
xchg
sub
sub
mov
mov
in
or
lret
data16
popl
imul
fldt
jmp
dec
stc
fists
lods
subb
in
addr16
shlb
psubusb
sbb
hlt
xorl
mov
dec
nop
insb
add
fidivl
cmp
sbb
add
jnp
jnp
and
sub
push
mov
es
jle
dec
in
xchg
ret
pop
push
cmc
xor
mov
add
mov
xchg
fsubrs
dec
sti
ss
ret
mov
mov
jl
jbe
insb
out
int3
gs
sbb
mov
test
inc
cmp
lcall
and
fsubrs
leave
jns
cmp
test
loopne
pusha
sub
mov
sub
dec
sbb
sti
mov
int3
jge
cmpsb
jae
jo
mov
iret
mov
fisubs
loope
ss
test
lods
push
out
mov
js
arpl
and
mov
jg
adc
inc
daa
icebp
cmp
in
dec
icebp
inc
mov
cmp
push
xor
cs
sub
aam
shr
rcr
out
jp
shl
push
push
repz
cwtl
push
lods
movsl
jb
jno
jl
jge
es
insb
pop
mov
imul
mov
cmp
lds
adc
lods
fadd
add
xchg
push
inc
push
ds
rcrb
jbe
inc
dec
jge
jns
das
out
testb
mov
fsubrl
inc
ds
jle
mov
mov
cmp
loopne
add
jbe
mov
pop
cmp
jle
aad
pop
pusha
es
fsubl
imul
adc
rcll
testw
pop
movups
dec
mov
dec
mov
ja
xchg
imul
push
es
xlat
fcmovne
cmp
or
fnsave
jns
iret
or
hlt
sbb
dec
out
mov
mov
loop
jl
lea
loope
xor
cwtl
cwtl
inc
addl
mov
mov
aad
and
test
add
cmp
imul
mov
jmp
pop
daa
subb
cmp
loopne
arpl
out
pusha
loop
mov
in
fs
cmp
or
mov
add
jmp
dec
fstpt
xorb
adcb
dec
mov
mov
ja
lahf
cmp
inc
cmp
out
fs
pop
xor
pop
movsb
cmp
fwait
pop
std
cmp
push
xchg
jb
jbe
rcll
cli
pop
sub
jg
mov
sub
ds
jecxz
enter
or
pop
sub
jg
sbb
jl
pop
enter
or
outsl
adc
ficompl
fstpl
mov
cld
sbb
movsb
lret
adc
pop
cli
mov
int3
clc
sbb
and
cmp
ja
add
or
adc
out
push
std
mov
jl
mov
mov
popf
jne
lds
mov
pushl
mov
std
iret
inc
and
jo
xchg
fstpt
pop
rcrl
dec
repnz
mov
gs
pop
or
dec
cltd
sub
push
adc
pop
mov
data16
aam
mov
repz
orl
int
cltd
mov
repnz
inc
mov
mov
out
fs
adc
mov
sub
push
add
in
sbb
cwtl
out
mov
mov
cmp
xor
pop
data16
fbstp
fstp
lock
mov
and
pmullw
int3
faddl
addr16
mov
xlat
dec
rcrb
insb
cmp
cld
jmp
inc
lcall
imul
leave
mov
mov
mov
or
jmp
test
sub
inc
mov
fnstsw
pushf
inc
and
jbe
sbb
dec
xor
and
rcll
push
push
xor
cld
pop
or
jl
push
and
mov
cmp
mov
pop
stos
roll
repz
mov
lea
movsb
jecxz
mov
add
push
ja
push
or
adc
incb
scas
sar
nop
or
pop
pop
data16
scas
pop
rorl
aas
mov
fsubl
jne
adc
dec
adcb
cmpsb
xor
mov
mov
mov
nop
push
jmp
test
pop
sub
pop
xor
rorl
mov
cmp
or
into
mov
les
mov
scas
sti
fisttpl
pop
mov
cmp
jbe
sub
cwtl
jle
clc
pop
cmp
test
sarb
lds
adc
push
sbb
push
xor
clc
mov
fmuls
fdivrl
sub
cmp
mov
in
mov
or
sub
dec
cwtl
cmp
arpl
jb
fdivrp
notl
pop
int3
inc
cmp
fwait
lods
or
icebp
es
xorb
push
int3
sub
iret
andb
cmpsl
and
sub
repz
aad
add
fwait
mov
mov
dec
es
sarl
pop
cmpsb
sti
dec
es
pop
dec
push
lods
cmpsl
cmp
jnp
enter
and
push
fwait
sbb
sub
negl
push
add
adc
mov
loopne
adc
mov
cs
nop
jmp
mov
pop
and
mov
lock
popa
rorl
test
repz
ljmp
cmp
push
cmc
mov
pop
lock
aad
repnz
fldt
jmp
clc
orb
push
decl
adc
aad
pusha
mov
dec
inc
dec
add
xor
pop
jge
jmp
mov
inc
cmp
inc
pop
mov
push
add
jmp
stc
insb
sbb
jns
add
dec
add
loope
and
std
mov
cwtl
fbstp
or
pop
sti
push
mov
xor
mov
inc
push
fiadds
cmp
sbb
dec
mov
xchg
hlt
or
out
jl
cs
sub
xor
cmp
dec
sbb
adc
push
stc
test
xor
data16
mov
fwait
subb
xchg
insb
lods
cmp
ljmp
pop
stos
repnz
fwait
and
mov
sbb
push
fwait
clc
mov
enter
and
add
mov
arpl
xchg
test
sbb
ret
and
xchg
xchg
lret
imul
add
xor
ja
sarl
lret
cltd
in
pop
cmc
mov
cwtl
adc
add
dec
insb
push
js
mov
cmc
imul
jl
rorb
mov
sti
orb
loopne
sbb
jg
xor
fsubrl
add
enter
lcall
or
dec
mov
lea
mov
sti
mov
xor
jmp
insl
imul
pusha
in
xchg
mull
test
ss
jge
nop
data16
testl
add
dec
icebp
aam
stos
mov
repz
dec
add
push
dec
mov
pop
and
mov
aas
lret
sbb
mov
iret
mov
das
mov
xlat
fnsave
mov
push
cmp
cmp
mov
jmp
cmp
mov
cmpsb
adc
dec
mov
fwait
xchg
sbb
repz
fwait
sub
into
jmp
movsl
dec
jae
repz
dec
call
daa
add
imul
out
push
inc
pop
and
add
mov
mov
mov
pop
mov
cmpsb
xor
mov
sbb
mov
bnd
out
js
fldt
pop
cwtl
pop
out
cld
lret
sti
pop
adc
fldt
js
add
sti
stc
inc
mov
adc
mov
lock
shll
xor
lahf
xlat
or
pushf
shrl
je
xlat
jnp
inc
out
and
imul
cmp
in
and
jbe,pn
fsubl
adc
insl
pop
dec
testl
in
jnp
xchg
sub
dec
xor
out
push
xchg
xor
mov
mov
and
lret
ret
out
data16
fimull
loopne
and
insb
mov
mov
mov
arpl
jae
movsl
pop
mov
je
scas
mov
das
ja
fnsave
push
pop
xorl
rcll
iret
loopne
dec
int
jae
in
xchg
movsb
or
adc
xchg
lods
bound
push
fstpt
mov
add
jg
mov
aas
add
aam
or
or
mov
testl
rcll
adc
adc
insl
or
mov
jecxz
push
enter
ret
pop
in
push
cmp
into
ss
fcoml
mov
jns
mov
xchg
loop
xor
dec
in
insl
movsl
or
sti
mov
daa
stos
cmp
pop
pop
xlat
scas
pop
adc
cmp
mov
dec
mov
jl
adcl
sbb
add
sti
clc
jl
mov
arpl
dec
dec
fistpll
xchg
rcll
sub
mov
or
jg
in
shlb
and
push
and
cmp
test
sub
fwait
cli
mov
mov
and
mov
and
in
loopne
sbb
sbb
push
ss
mov
pop
cld
cltd
jns
inc
inc
adc
lret
cltd
loop
mov
imul
mov
rcrl
jbe
stc
sbbl
std
out
add
fs
popa
sbb
jmp
mov
mov
les
mov
cmp
mov
mov
pop
dec
or
cmc
lret
jmp
int
shr
mov
mov
mov
jge
aad
push
mov
stos
add
lcall
nop
repz
cld
rcrl
xchg
sahf
mov
mov
push
out
inc
inc
xchg
xchg
sbb
mov
fnstcw
adc
cld
fucomip
jne
iret
call
mov
movsl
pusha
aaa
rorb
jle
nop
dec
mov
jg
leave
pop
int3
test
in
add
mov
add
shlb
pop
pop
out
out
sbb
je
pop
sbb
mov
pop
dec
push
shll
dec
mov
imul
mov
push
in
mov
adc
cli
fwait
cld
adc
sbb
sti
fucomip
cmpsl
jmp
lret
daa
push
outsb
xor
dec
iret
insb
dec
rorb
daa
iret
xor
loopne
rep
in
lahf
mov
lret
lahf
mov
aad
mov
pop
loopne
shrl
dec
sti
and
test
popa
jp
or
fwait
loopne
adc
pusha
cmc
cmp
es
mov
ss
bound
xchg
sbb
pop
mov
int3
popa
mov
loopne
lods
les
in
and
fwait
inc
mov
mov
aam
pusha
repz
addr16
push
loope
dec
insb
imul
aaa
mov
ret
aam
pop
pop
xchg
ror
xor
rorb
out
ret
jns,pn
loop
out
out
add
mov
mov
fwait
jae
fwait
dec
testb
movsl
adc
ret
iret
and
add
sbb
fstpt
sbb
ljmp
in
movsl
pop
arpl
out
frstor
std
add
and
addl
adc
mov
fwait
adc
cmp
mov
cmp
shrb
fisttpl
cmc
aad
std
mov
cmp
in
xchg
mov
mov
sbb
mov
addr16
imul
in
mov
int
lret
dec
add
fiaddl
js
mov
pop
push
jbe
xlat
ret
mov
mov
icebp
out
xor
mov
imulb
dec
mov
repnz
xor
mov
lret
ss
jg
push
sbb
dec
addb
outsb
push
xchg
ja
push
sar
cwtl
sub
xor
aad
jbe
sbb
mov
jl
jae
ss
mov
xchg
ljmp
jmp
cmp
sub
pop
or
pop
imul
mov
ljmp
sbb
out
push
cmpsb
test
das
push
lret
je
add
dec
mov
imul
pop
sub
mov
inc
jbe
je
jge
pop
inc
js
scas
push
mov
stc
xor
cmp
ja
ficoms
adc
and
lock
and
rcr
pop
leave
sub
aad
inc
pop
jg
lock
and
jg
mov
jno
add
in
repz
push
and
sbbl
out
mov
roll
mov
into
iret
in
cmp
jp
adc
and
adc
cmpsb
add
lods
leave
sub
in
jg
insl
or
mov
cltd
cmpsb
dec
mov
aam
mov
test
dec
and
add
cmc
scas
subb
cmpl
ljmp
mov
sti
inc
dec
fisubrl
mov
xchg
push
repz
jb
or
movsb
outsb
jg
xchg
in
mov
push
ficoms
cli
jo
add
jo
inc
fldenv
mov
add
lods
popa
push
ljmp
adc
mov
mov
imul
mov
movsl
mov
dec
sahf
stc
dec
insb
pop
iret
xchg
pop
aaa
add
dec
mov
pop
add
pop
dec
jp
inc
xchg
cmc
test
iret
stc
mov
mov
mov
and
cmp
mov
fcompl
pop
push
push
sub
sbb
repz
or
dec
subl
jbe
push
cs
stc
and
push
cltd
sub
cmp
or
dec
es
mov
rorb
pop
sti
inc
xor
jb
cli
std
fimuls
or
mov
cmp
push
jbe
adc
inc
jmp
pop
imul
dec
mov
imul
test
and
dec
or
inc
lea
mov
lret
or
in
addr16
aam
rcrl
test
mov
add
inc
iret
and
popa
jae
fildll
sahf
test
push
mov
adc
mov
idiv
add
pop
dec
push
mov
sbb
push
xorb
in
fwait
pushf
mov
push
sbbb
xchg
imul
push
inc
sub
xor
jbe
mov
mov
mov
aaa
or
and
jl
mov
jmp
sarl
enter
or
pop
enter
adc
aam
nop
imul
adc
or
scas
mov
fcoml
add
in
jae
mov
sub
push
out
adc
cli
cld
out
pop
fdivl
push
fcomi
mov
je
jl
sbbl
cs
adc
dec
mov
cmc
out
ret
and
mov
lahf
loopne
cmpsl
mov
cmp
lret
sbb
jno
out
hlt
mov
mov
xchg
mov
sub
cmp
xor
cmp
std
fbstp
add
cltd
in
mov
rol
push
xor
xchg
insl
or
mov
mov
inc
popa
fdivrp
fnstcw
jo
sti
test
sbb
inc
push
sbb
jecxz
cmp
inc
out
mov
mov
or
mov
mov
inc
mov
sub
std
and
clc
dec
shl
fs
fstpl
dec
insb
inc
jnp
lds
add
es
movsl
inc
inc
pop
lcall
mov
push
shr
bswap
fst
ja
jno
inc
mov
movsb
js
rcl
push
xadd
movsb
mov
xor
std
add
mov
aaa
jmp
call
fs
fildll
fadd
push
jmp
sbb
mov
sub
mov
mov
mov
sarl
dec
inc
addb
icebp
ss
scas
movsb
adc
jbe
push
fwait
out
outsl
mov
ret
lcall
nop
scas
lods
sub
mov
xchg
xchg
cld
js
adc
dec
mov
mov
add
dec
mov
cmp
daa
daa
addr16
insb
fbld
add
push
mov
movsb
cmp
adc
xchg
push
faddl
in
stc
stos
jno,pn
cld
out
mov
sub
popf
stc
int
pop
ret
inc
pop
dec
pop
fwait
js
dec
cmp
enter
fmulp
mov
add
jmp
fcmovb
jl
inc
mov
aam
jge
cwtl
lods
iret
stos
testl
adc
stc
sbb
cmp
xchg
push
mov
lds
dec
das
mov
cld
jno
mov
imul
loope
dec
xor
popa
iret
repnz
sub
outsl
and
mov
or
mov
pop
jmp
dec
mov
sub
ljmp
andb
mov
push
mov
lods
stos
mov
lret
pusha
cmp
insb
mov
sbb
mov
mov
jnp
and
push
stc
lret
jge
sbb
mov
pop
jmp
sbb
hlt
push
inc
push
push
cmc
fldl
add
cli
stos
hlt
add
jecxz
dec
dec
ror
incb
ja
sti
cmp
add
xor
popa
shl
push
mov
ja
cmp
pushf
adc
mov
andps
je
fsubp
sbb
cli
daa
pop
push
int3
data16
dec
pusha
es
jmp
mov
into
fcos
es
addr16
and
ja
data16
mov
dec
aas
cltd
xchg
pop
popf
mov
sub
sub
repnz
jmp
hlt
or
lcall
nop
adc
cmp
push
mov
shrb
das
and
loopne
dec
repz
fisubl
addb
cld
decb
lret
mov
in
daa
pushf
mov
adc
inc
inc
or
out
push
cmp
aas
inc
out
sub
pop
jg
or
mov
mov
add
mov
aas
mov
xchg
pop
test
pop
sub
jne
lahf
lea
cltd
fdivl
les
sbb
icebp
jae
xor
data16
pusha
cmc
jecxz
fwait
lret
dec
lcall
loopne
pop
imul
pop
mov
subl
pushf
ja
loope
mov
sub
adc
fs
jle
arpl
stos
aam
imul
mull
sub
inc
stc
cld
jo
dec
mov
sbb
out
out
dec
loop
bnd
mov
mov
ror
not
jns
jo
or
les
xor
ja
push
lea
push
rcll
adc
xchg
inc
rcr
in
in
and
iret
push
mov
mov
mov
push
cmpb
or
lahf
fwait
mov
stos
cmc
jae
jnp
fldl
xchg
stos
out
add
test
mov
push
inc
push
jge
push
cmc
into
cmp
dec
ljmp
hlt
lds
inc
push
lods
ja
jno
arpl
std
adc
lcall
sbb
xchg
add
pop
decl
lret
inc
jae
inc
lcall
dec
fidivs
enter
loopne
sti
fwait
mov
mov
sbb
sti
out
add
add
out
cmp
xchg
out
std
ss
pop
movsb
mov
fdiv
mov
sti
dec
add
pushf
jne
or
shl
icebp
jae
popf
movsb
test
jl
bound
mov
jo
inc
fs
mov
xchg
sbb
jbe
push
adc
sbb
outsl
insb
cld
stos
mov
and
xchg
xchg
inc
inc
fsubs
mov
daa
aad
mov
insl
inc
loop
cmp
mov
mov
push
or
call
mov
mov
adc
xor
rcrb
sub
fdivrp
sahf
xor
dec
push
fildll
scas
mov
xor
nop
out
fsts
lock
lret
or
dec
jbe
das
push
out
rclb
cld
icebp
adc
or
dec
out
push
cmpsl
out
adcb
loope
cmp
mov
inc
xlat
das
add
add
das
jle
or
xor
cmp
iret
sarb
jnp
push
hlt
ljmp
xor
call
jae
push
outsb
xor
aam
lods
cmp
add
jmpw
add
ret
mov
shll
xchg
mov
cmp
or
jnp
mov
xchg
test
jmp
test
dec
lods
and
xor
out
push
add
inc
xor
movsb
xchg
addr16
sahf
aam
lods
push
and
xchg
mov
in
cmpxchg
push
mov
push
std
mov
pop
repnz
rcrb
out
xor
aad
fwait
movsl
or
and
loopne
fwait
sarl
imul
mov
fnstsw
xchg
cmpsb
pop
fs
cmp
dec
pop
ret
repz
fsubs
xchg
xchg
mov
xchg
xchg
lret
aad
ja
pop
xchg
add
stos
insb
insl
stos
mov
sub
sub
shl
std
sbb
enter
mov
mov
xchg
cmp
and
pop
imul
mov
xchg
inc
lahf
mov
xor
shlb
push
push
adc
mov
std
repnz
cmc
xchg
jae
inc
adc
jp
ja
stos
sbb
negb
xchg
push
pop
sbb
clc
xor
nop
add
xor
xor
add
test
fiaddl
arpl
mov
insb
xor
or
cli
push
out
or
pop
inc
jae
scas
pop
xor
or
xchg
sbb
or
mov
adcb
repz
addb
mov
int
sbb
dec
es
push
jnp
faddl
ficompl
mov
push
leave
rorl
mov
test
inc
jge
leave
ss
pop
inc
pusha
movsl
mov
xor
lods
and
js
lock
pop
dec
mov
fnstcw
shlb
pusha
cltd
out
push
dec
inc
shrl
mov
jg
xor
ds
scas
pop
scas
std
pop
mov
cs
pop
add
fimuls
xor
xchg
outsb
adc
jmp
jl
inc
cmp
mov
scas
in
dec
out
pusha
pusha
test
mov
int3
adc
or
xor
mov
pushf
mov
call
shlb
xchg
push
das
sbb
push
pusha
mov
mov
leave
scas
jle
les
jnp
mov
mov
icebp
pop
cwtl
cs
in
push
fs
mov
add
jle
pop
push
push
jp
xor
movsl
mov
mov
inc
sub
jae
pusha
jno
mov
fs
repz
repnz
add
arpl
int
fwait
cmp
add
mov
out
pushf
push
inc
add
add
pop
test
and
inc
loop
in
jl
lahf
cmp
mov
sub
stos
or
xchg
inc
xor
jmp
test
shll
fldt
mov
lods
add
fcmovne
test
stos
sub
cmpsl
push
jg
out
leave
rcl
xchg
pushf
cmc
mov
jnp
or
xor
jmp
sahf
pop
mov
and
inc
push
popa
movsl
mov
dec
mov
jno
scas
and
in
xchg
inc
push
and
insl
imul
je
pusha
loop
pop
inc
insb
ror
mov
inc
test
push
and
lret
mov
cmpsl
lods
sbb
sti
stc
popl
inc
and
sub
inc
sti
std
cmpsb
cmp
es
dec
cmpsl
addr16
mov
jl
sbb
mov
jl
mov
fs
jnp
mov
sub
fmul
mov
inc
push
sti
fidivrl
mov
mov
sar
mov
xchg
imul
push
sbb
insb
sub
faddp
rolb
rorb
sub
int
lret
repz
sbb
shr
adc
sbb
repz
fdivs
rcrl
mov
xchg
jmp
cs
cltd
ljmp
fisubrl
cmp
xor
fwait
dec
pop
insb
mov
lds
cmp
popa
ficoml
fwait
addr16
sbb
mov
jmp
test
roll
xchg
outsb
lock
stc
std
mov
mov
lret
sub
fstpt
fidivrl
sbb
push
icebp
adc
rcrl
stos
pusha
push
lcall
sbb
and
stos
sub
mov
mov
pop
sbb
orb
add
call
rorl
cmpsl
inc
xor
mov
aad
sbb
clc
add
pop
dec
lods
int
mov
pop
push
pushf
xchg
xchg
and
in
std
push
pop
cmp
sti
lret
hlt
test
loope
mov
mov
lea
icebp
rcrb
adc
jae
in
mov
or
and
pop
rclb
mov
xchg
mov
and
push
mov
adc
mov
sbb
rorb
or
sbb
or
mov
mov
mov
push
inc
in
and
inc
push
mov
dec
or
push
xor
mov
test
insl
and
out
xor
dec
pop
dec
lret
jle
jmp
clc
rorl
cmpsb
loope
mov
xor
fcomi
shlb
imul
mov
push
mov
scas
inc
sbb
sbb
fbstp
or
stos
int3
or
pop
icebp
mov
push
imul
mov
push
or
add
mov
cmc
mov
imul
mov
mov
push
test
jg
xchg
jg
in
push
push
cltd
mov
movsl
jp
scas
push
inc
mov
daa
je
test
mull
jg
stos
or
subb
add
jp
ror
and
mov
not
jns
int3
jl,pn
jg
push
mov
inc
xadd
daa
inc
jg
daa
xorl
cwtl
into
mov
fisubs
insb
mov
jnp
lods
xor
pushw
push
daa
push
cmpsl
adc
in
addr16
or
pop
stos
testb
mov
jbe
xchg
sbbl
mov
mov
mov
pushf
and
call
cmpsl
fchs
push
in
jecxz
xchg
pop
or
outsl
mov
inc
js
adc
fisubrl
pusha
push
mov
testl
adc
xorl
cmc
ftst
or
mov
aaa
jge
popf
sub
movsl
mov
clc
fmuls
inc
pop
mov
scas
rorb
lret
arpl
in
ja
push
cmpsl
cmp
inc
sbb
push
call
pop
jae
inc
repz
and
xchg
in
xchg
loope
pop
aad
cmc
lock
std
mov
push
shrl
xor
adc
xor
sub
cli
scas
pop
lock
sbb
cmp
add
jns
mov
sbb
mov
or
jmp
loope
mov
fadds
pop
popf
enter
fstp
mov
sti
shr
das
adc
dec
lods
mov
inc
cmpsb
insb
popf
mov
pop
cwtl
std
icebp
jl
xchg
into
ljmp
or
shlb
adc
mov
add
jno
cwtl
pop
outsl
insl
and
jns
pop
scas
mov
mov
jne
mov
inc
mov
dec
addb
sub
lods
cmp
jnp
sti
rorl
jl
pop
inc
add
cld
fisttpl
xchg
mov
sbb
fs
pop
sti
in
sti
fsubrl
fs
mov
shrb
push
pop
cmpsb
movsl
sahf
in
push
outsb
or
jb
cmp
insl
push
ss
rcr
std
sbb
jmp
les
pop
mov
jle
lcall
jp
push
add
fcoml
cs
stos
les
xlat
shlb
sub
mov
std
faddl
mov
xchg
jl
je
cmpsb
cmp
out
ja
hlt
fstl
mov
jge
pop
mov
fsubs
push
insb
pop
outsb
lret
adc
xchg
dec
xchg
and
scas
pop
jge
data16
sub
xchg
inc
sarl
mov
dec
dec
push
dec
cmp
ret
rorl
inc
popf
movsb
in
jge
jp
fisubs
pop
hlt
jp
lret
mov
mov
repz
and
and
xlat
or
pop
out
inc
push
out
xchg
fiadds
loop
call
add
hlt
stc
stc
adcb
std
rcrl
cltd
jae
cmp
dec
dec
adc
insl
sbb
dec
push
test
xlat
aas
jae
shlb
pop
push
mov
loopne
ss
cmp
dec
mov
cli
xchg
lea
inc
cmc
insb
xor
jno
and
jbe
sub
adc
inc
add
out
mov
pop
xor
add
or
push
jge
inc
scas
test
and
or
dec
sub
add
mov
loopne
stos
cs
xchg
jbe
ret
inc
mov
cs
jl
add
call
xchg
cmp
push
ja
ss
fdivrs
sub
mov
mov
movsb
call
mov
adc
test
jmp
xchg
pop
mov
inc
je
cmp
les
cmc
xor
mov
sub
jb
cld
enter
popa
mov
enter
xor
mov
fidivs
jns
es
dec
mov
out
dec
mov
adc
ret
push
dec
rorb
dec
mov
iret
inc
dec
arpl
insl
imul
in
mov
jle
xor
cltd
pop
data16
idivl
inc
movsb
lock
xor
ret
cmp
mov
add
shrl
adc
je
repz
adc
add
popf
and
fisubrl
push
roll
sahf
mov
sti
dec
mov
leave
add
mov
inc
xor
jmp
in
fisubrs
inc
sub
inc
lods
and
xchg
fwait
mov
hlt
iret
shlb
jbe
lods
and
dec
cmp
or
jae
arpl
cmp
adcl
repnz
sbb
mov
jb
rcrb
pop
jnp
dec
adc
test
pushf
movsb
xor
push
in
xor
hlt
sub
fwait
nop
les
flds
icebp
lahf
and
push
mov
das
jg
jae
clc
imul
push
adc
xor
repnz
add
pusha
std
or
pop
sub
fcomps
xchg
mov
dec
outsb
fcmovnbe
dec
stos
lea
aas
or
pushl
pop
sub
dec
loope
mov
in
sbb
jne
ss
jmp
xor
insb
arpl
into
es
lret
xlat
pop
sbb
out
rolb
inc
xor
leave
pop
testl
mov
out
push
and
dec
pop
out
xorb
test
pop
in
mov
pop
mov
and
cmpsl
mov
push
push
movsl
mov
fwait
mov
mov
fwait
xchg
mov
enter
pop
inc
cmp
jae
cwtl
divb
sub
gs
outsb
adc
mov
xor
jno
inc
mov
int3
and
sub
push
add
dec
movb
mov
pushf
in
mov
and
mov
sbbb
push
xchg
loope
cmp
in
xchg
pusha
rclb
dec
adc
pop
dec
divb
mov
jae
es
inc
push
mov
pushf
leave
jge
cmpsl
pushl
sub
cltd
cltd
insb
cmpsb
jl
dec
push
mov
inc
inc
fldenv
loope
jg
xchg
out
and
rol
addb
ja
mov
ljmp
imul
add
data16
sti
add
test
jae
in
dec
or
out
and
push
lea
rclb
sbb
jg
xchg
dec
or
arpl
inc
push
inc
bound
jmp
out
pop
fs
mov
xor
push
pop
sbb
push
mov
shrb
inc
les
out
mov
sub
fwait
adc
scas
cmp
movsb
cmp
lretw
test
push
mov
sahf
push
in
lcall
aas
push
lods
rclb
pop
rcrb
mov
sbb
test
fwait
add
pop
sub
inc
cmovp
jecxz
mov
sub
cwtl
xor
fnstsw
clc
add
fst
leave
popa
adc
add
ss
push
add
sbb
ds
jg
sub
or
std
add
mov
movsb
or
ret
push
mov
stos
sti
sub
jae
es
rcr
mov
sub
pop
mov
enter
pop
fstl
push
push
and
outsb
fisttpll
movsb
xor
dec
les
lods
mov
adc
or
mov
xor
or
dec
daa
insl
scas
lods
mov
mov
insb
insb
sub
or
mov
test
mov
loopne
add
test
lret
scas
push
mov
lcall
xchg
mov
cmp
xchg
sar
xchg
mov
imull
dec
mov
out
out
dec
push
inc
dec
jle
hlt
pop
daa
xchg
inc
fdivrs
std
sub
movsb
mov
in
scas
jae
fsubrl
mov
mov
pop
pop
ss
xchg
test
mov
dec
adc
fwait
sti
sbb
sbb
stc
jg
pop
xor
sbb
mov
cmp
sub
add
aam
dec
or
cltd
jge
add
in
gs
adc
dec
mov
mov
test
push
shrl
mov
sub
addb
fcompl
fidivl
pop
cli
cmp
mov
jns
push
xor
into
mov
jbe
mov
or
bound
lret
mov
jl
mov
push
mov
les
test
or
loope
js
data16
add
pusha
and
mov
and
pop
push
mov
stos
movsb
push
cmp
lock
mov
insb
lods
and
mov
xchg
subb
push
jae
jl
and
mov
pop
sbb
ret
int
mov
movsb
call
xor
pushl
fucomp
outsl
sub
adc
mov
inc
fidivrl
bnd
ss
int
sub
mov
les
es
cmp
push
fiadds
in
push
pop
mov
popf
mov
mov
cmpsl
push
pushf
add
sub
out
fnsave
jg
stc
dec
push
mov
push
outsb
int3
inc
jge
out
lods
xor
shrb
jl
lret
push
imul
dec
mov
add
or
pop
fwait
and
imul
pusha
mov
sub
ret
insb
inc
mov
mov
pop
inc
orb
dec
mov
js
lahf
fwait
imulb
je
out
lods
jmp
fidivrl
pop
loop
or
fsub
inc
or
les
push
mov
and
lods
pusha
mov
cmp
push
inc
inc
das
daa
int3
and
std
popf
hlt
fldenv
mov
mov
je
pop
loope
and
arpl
cltd
aam
push
je
xor
fs
add
push
shll
jge
sub
or
sub
rcr
ljmp
loopne
test
daa
cltd
scas
lahf
or
lds
cmpsl
test
dec
lret
cmpsl
iret
mov
add
cwtl
cmc
pop
cmp
or
repnz
mov
jmp
mov
test
aam
fisubrl
mov
xchg
jb
xchg
lahf
sbbl
sar
out
cmp
sbb
test
inc
sti
mov
jae
adc
dec
nop
jp
dec
movsb
xor
fiaddl
aad
jg
rol
arpl
pusha
cwtl
shll
sub
jmp
jecxz
add
pop
repnz
cmp
jecxz
push
xchg
faddp
dec
cmp
inc
fwait
pop
sahf
mov
cmp
mov
inc
mov
movsl
inc
pop
xchg
in
jne
jecxz
xlat
add
shl
jg
sbb
and
ret
push
cmp
mov
aaa
call
sbb
push
adc
cld
int
scas
push
pop
add
and
xchg
mov
mov
or
in
hlt
xor
mov
outsl
jmp
jne
mov
imul
or
nop
fimuls
test
xor
mov
shr
xchg
xlat
pop
sbb
test
xchg
jbe
mov
add
push
aad
add
stc
cmp
mov
mov
mov
xor
or
iret
cmp
sarb
movsl
or
fs
jno
std
add
sub
jno
fstpt
push
in
dec
push
jp
cmp
aaa
xchg
dec
xor
cltd
and
repz
ficomps
movsl
or
movsb
hlt
or
pushf
idiv
ss
std
ss
inc
jg
dec
outsl
dec
shrl
fadds
xor
lods
or
ja
cmpsl
mov
in
lds
inc
xchg
mov
nop
das
cltd
mov
jb
mov
rorl
ret
in
sbb
xor
ret
sbb
mov
mov
mov
dec
xor
pop
jae
arpl
mov
cmp
pushf
sub
cmp
mov
ss
testl
pop
cmpsl
cmc
cwtd
adcb
pop
cltd
dec
mov
cmp
dec
sub
xor
mov
fs
ds
push
push
mov
mov
movsb
fstpl
xchg
and
sub
lahf
jmp
adc
jp
es
ret
fadd
movsb
repz
cmp
nop
push
jb
pop
stc
add
imul
mov
add
lcall
xor
movsb
out
xor
test
sub
jl,pt
pop
aad
mov
mov
push
rol
js
xchg
aam
pop
fldt
dec
xor
sub
fwait
iret
pop
stos
pop
fidivrl
popa
lret
mov
out
mov
jne
pop
xchg
pop
mov
pop
dec
fisttps
jp
pop
pop
inc
xor
jg
out
adc
jl
jbe
xchg
pop
or
fsubrl
or
fcomi
mov
mov
jmp
sub
cltd
inc
or
sbb
test
pop
add
adc
inc
xchg
xchg
daa
jl
sub
int3
dec
roll
mov
and
popa
out
aam
sbb
lods
pop
xchg
mov
rcrb
lds
sbb
out
jns
or
ja
ret
stos
cmp
arpl
inc
scas
fildll
adc
lret
lcall
add
jno
push
push
pop
xor
imul
mov
or
js
iret
xor
push
int3
xchg
cmp
jo
fwait
punpckldq
inc
xchg
inc
jae
shll
cmovge
sahf
stos
pop
sbb
pop
and
mov
dec
sahf
out
out
mov
or
xor
mov
sub
std
xor
or
mov
dec
add
adc
cmpsb
es
pop
movsl
mov
mov
sti
xor
movsb
mov
roll
pop
push
mov
cmp
sub
dec
push
cmc
jnp
mov
adc
mov
in
cmp
jo
push
les
jbe
nop
mov
sub
jg
jge
jb
dec
dec
iret
clc
pop
out
cmp
pop
lcall
adc
jl
les
mov
out
xchg
test
and
cmp
sbb
jbe
es
and
jbe
sarl
jae
or
pop
pusha
mov
es
and
aam
es
in
dec
xlat
jle
push
cmp
pop
mov
mov
lahf
repnz
dec
mov
repz
pop
cmp
and
into
inc
cmp
mov
xor
repnz
xor
add
cs
int
arpl
mov
jg
cmpb
aaa
nop
sbb
jp
pop
arpl
jnp
cmc
shlb
das
fwait
mov
sbbl
mov
mov
cld
cmp
out
scas
jbe
pop
push
sbb
dec
xlat
push
les
mov
dec
or
jmp
sbb
out
xor
icebp
dec
cmpb
fwait
mov
popf
decb
inc
insb
ja
xchg
in
xor
add
lock
pop
jg
mul
sar
lods
pop
ljmp
jbe
sahf
mov
push
fwait
mov
cwtl
mov
mov
sbb
jl
dec
add
jbe
hlt
int3
aad
or
fstp
pop
cmp
lock
popa
scas
addr16
xchg
mov
xchg
push
shl
div
dec
sarl
out
mov
sahf
inc
dec
sub
in
into
dec
cmc
dec
lock
mov
or
sbb
dec
imul
fisubs
pusha
mov
push
or
jne
push
sbb
rclb
xchg
add
dec
outsl
shll
push
cmc
je
push
in
mov
mov
insb
mov
imul
adc
insb
mov
mov
fs
divb
or
jb
ljmp
fmul
push
call
mov
inc
shll
insb
loop
mov
fisttpl
test
mov
push
sbb
and
sahf
ds
sbb
int3
sub
cltd
out
sarl
mov
push
in
dec
mov
push
int3
jns
popa
mov
mov
jl
inc
shl
xor
mov
sub
loopne
pop
push
rcr
decl
xchg
sbb
scas
pusha
cld
push
movsb
mov
mov
jle
gs
clc
jp
int
cltd
xchg
js
sbb
cmpsb
cmp
iret
int3
xor
inc
dec
xlat
jecxz
aas
push
leave
ficomps
es
pop
out
add
shr
xor
or
js
data16
cmp
cmpb
fs
mov
add
insl
enter
repz
xchg
dec
stos
enter
lods
dec
dec
dec
fcom
push
and
vmovapd
or
inc
mov
test
pop
or
cmpsl
out
fwait
jmp
std
je
mov
testb
jne
push
dec
in
iret
mov
jae
sbbb
sbb
dec
or
pop
ds
test
sbbb
push
and
pop
iret
mov
sub
xor
dec
sub
mov
pop
xchg
inc
test
and
cmovg
dec
cmp
push
push
pop
repz
aad
mov
xchg
mov
inc
ljmp
ss
test
jmp
nop
pusha
sbb
testb
mov
push
in
pop
cs
or
dec
xor
movsl
fdivs
or
push
sbb
mov
mov
jle
mov
push
sub
xor
push
and
dec
and
pop
nop
and
inc
lods
bound
jne
aas
sti
sarl
fldcw
pop
js
shrl
aam
pop
mov
add
stc
es
sbb
call
faddl
movsb
or
shll
add
leave
shl
ret
push
test
push
jns
fadd
outsb
aam
insb
jmp
lret
mov
adc
sbb
mov
bound
lods
mov
xchg
or
lods
xor
andl
xor
push
or
fwait
ss
push
faddl
dec
mov
popf
mov
pop
xchg
lods
and
pop
fs
jl
fisubrs
inc
cmpb
pop
testl
jp
xchg
sbbb
mov
pop
sub
jge
cmpsb
pop
cmp
int3
and
adc
fcoms
inc
sub
jbe
aas
es
xor
sub
adc
xor
sub
daa
mov
mov
std
fnsave
lahf
mov
ss
cmpsl
dec
loop
aam
jno
adc
mov
mov
and
mov
xchg
pop
cld
or
or
mov
sbb
in
imul
push
push
sub
dec
inc
ljmp
shlb
in
push
cmpsl
add
lds
gs
enter
pop
aas
jne
ficompl
mov
adc
inc
sub
repz
mov
lock
insl
outsb
add
dec
int3
shlb
jbe
add
mov
pushf
sub
sbb
cmp
xchg
mov
push
fidivl
cld
and
mov
fsubl
fxch
inc
mov
mov
jo
add
fcompl
xchg
mov
cmpsb
mov
nop
test
ja
mov
lret
imul
mov
xchg
xchg
push
fstps
push
mov
scas
sub
lods
xor
stc
lret
in
es
iret
dec
and
add
or
ljmp
and
ljmp
movsl
add
xor
les
push
xor
cmp
push
sarl
stos
inc
dec
lcall
ds
jne
insb
sub
cmp
std
mov
xor
adc
mov
push
out
popf
add
push
rorl
dec
iret
ja
inc
dec
push
or
rcl
icebp
incl
aam
test
stc
add
inc
int3
pusha
sbb
movsl
cltd
pop
add
ret
idivl
ljmp
call
cmpsb
push
jbe
cli
dec
aam
out
mov
and
inc
jae
rorl
mov
rcl
insb
lret
push
and
cmp
ss
test
js
jbe
dec
inc
addr16
out
push
iret
mov
push
push
cltd
add
sub
insb
testl
fnstenv
dec
call
sbb
movsl
outsl
inc
out
sbb
dec
jnp
jno
sbb
or
mov
mov
and
inc
fidivrl
sahf
mul
sbb
add
jno
mov
mov
insb
dec
into
imul
jmp
xor
pushf
idiv
sub
sub
mov
imul
mov
fildll
pmaddwd
mov
outsb
orb
ja
adc
lods
enter
inc
mov
adc
push
mov
lret
sbb
xlat
rclb
out
aad
push
lods
scas
jp
jb
ds
popf
mov
dec
mov
aam
ret
insb
xor
out
nopl
mov
inc
pop
arpl
inc
ret
stos
rclb
lods
pop
adc
rclb
test
pop
mov
inc
inc
lds
clc
dec
sarl
adc
jecxz
adc
cld
outsb
movb
xchg
aad
mov
addr16
push
xor
mov
out
add
jbe
dec
mov
jb
or
insl
pusha
mov
icebp
outsl
pop
out
lds
and
sbb
std
jmp
cmp
cmc
ja
add
inc
adc
or
mov
fisubs
imull
mov
negl
jae
ja
enter
adc
movsb
in
dec
or
lcall
cmpsl
cmpsb
xchg
mov
mov
nop
inc
jno
xor
test
aas
lods
push
pop
rorl
movsb
iret
xor
std
enter
lret
inc
ss
ret
jl
stos
incb
loope
aad
in
jl
xchg
repz
jecxz
push
add
cmp
std
cmp
mov
or
cmp
mov
rclb
jp
xor
cs
xlat
icebp
outsb
mov
dec
loopne
jmp
ss
push
cli
aas
pop
movsl
sbb
mov
dec
imul
jo
out
and
dec
or
mov
fisubs
jnp
arpl
inc
lods
cltd
loopne
clc
pop
fwait
mov
popl
mov
iret
pop
aad
iret
scas
mov
fidivl
outsb
mov
xlat
xchg
fldt
mov
sub
mov
inc
add
xor
fs
stos
adc
imul
push
sub
sti
mov
ret
inc
pusha
scas
es
imul
xchg
outsl
lods
add
loopne
jle
lods
daa
js
adc
pop
push
cmp
pusha
bound
dec
mov
jl
fwait
stc
add
cmp
cld
mov
jae
ljmp
clc
jbe
js
mov
mov
mov
rcll
dec
sbb
push
xor
sub
jg
das
adc
mov
movsl
lods
inc
dec
fdivrs
mov
xor
add
sti
insb
jmp
jecxz
lahf
fbld
jle
aad
in
pop
outsb
mov
mov
lods
mov
mov
mov
pushl
jge
fnsave
mov
or
popf
push
xor
aad
add
mov
cmp
pop
scas
lea
inc
leave
jg
popf
sbb
mov
adc
mov
mov
jns
aam
adc
cmpsb
cwtl
sub
aad
pop
mov
mov
xor
cmp
stos
sbb
sbb
or
idivl
mov
sub
xchg
add
cmp
inc
lahf
cltd
cwtl
jl
mov
or
sbb
xchg
enter
movsb
xchg
jp
fwait
rcr
xchg
imul
scas
cmp
xorl
fldl
push
push
cmp
fcoml
incl
imul
jecxz
cmp
mov
aas
ja
mov
jo
or
adc
mov
cmp
push
ficompl
and
push
inc
sub
or
sub
out
push
inc
pop
push
mov
in
aam
jns
lods
xchg
scas
ret
fs
mov
test
cs
pop
pusha
cmp
xchg
shll
call
jl
inc
mov
lahf
pop
and
xor
lea
negb
cmpsb
movlps
inc
aas
or
in
and
push
jno
sbb
cmpsl
loope
stos
imul
out
sti
pop
retw
mov
push
sbb
nop
fwait
lock
popa
loope
xor
hlt
sbb
jg
dec
mov
lcall
sbb
fistpl
dec
cmp
or
mov
mov
dec
addr16
shrb
jno
jne
and
imul
xchg
fs
mov
jns
mov
mov
rolb
dec
lea
mov
movsb
js
out
mov
daa
popf
xor
stos
mov
mov
cmpsl
inc
push
dec
jg
inc
push
add
enter
mov
dec
loopne
sbb
hlt
pop
jb
fwait
xchg
adc
ret
sahf
ret
dec
fistl
rcll
out
test
int3
adc
sub
sub
sbb
std
jnp
mov
pop
push
lret
mov
mov
mov
mov
sti
pop
out
std
inc
cmpsb
imul
lea
push
add
mov
sbb
sub
sbb
lcall
cmpsb
mov
mov
adc
mov
mov
inc
pop
sbbb
mov
mov
xchg
push
mov
sub
scas
push
enter
push
mov
int
into
fists
push
push
mov
jo
mov
sarl
or
push
jb
addb
icebp
jg
lret
and
rcrb
shrb
insl
cmp
pushf
andb
pop
sahf
dec
dec
and
inc
mov
lods
arpl
add
push
cmpsb
mov
nop
pop
push
repz
in
fnstenv
in
adc
ljmp
mov
call
jne
cld
push
add
ss
shl
ficompl
jbe
mov
mov
divb
nop
pop
add
jno
mov
and
scas
out
rcr
rorl
jl
or
filds
xchg
sarb
and
jg
addr16
pop
mov
mov
mov
fstpl
push
adc
icebp
out
mov
call
inc
or
mov
push
int3
daa
stos
pop
rorb
mov
and
or
jp
xchg
in
pop
in
mov
xchg
les
mov
mov
gs
adc
fnstsw
icebp
mov
mov
out
and
cmp
arpl
dec
adc
icebp
inc
push
mov
leave
cltd
jnp
cld
xor
cmp
pop
xchg
dec
ljmp
das
jbe
aam
fstl
or
pop
or
xor
push
xchg
repz
mov
push
out
mov
xchg
ret
lock
mov
mov
inc
xor
inc
ja
lret
mov
int
fisttps
movsb
les
jg
icebp
add
std
push
bts
or
push
dec
push
and
mov
jo
jmp
pop
xor
dec
sbbl
jae
push
xlat
xor
jnp
ret
cmpsb
jg
bound
inc
iret
fisubrs
movsl
pop
js
xchg
inc
dec
mov
xchg
sub
sbb
bound
icebp
int3
jb
sbb
xor
cmp
fcomp
movsb
ret
mov
jp
pushf
mov
fistpll
aad
and
push
fdivl
shll
xchg
test
mov
inc
xor
mov
popa
inc
dec
rcrb
inc
xor
ljmp
fnstenv
addr16
outsl
jns
ret
adc
test
inc
sbb
clc
push
jl
sub
lcall
movsb
repnz
lahf
repnz
scas
shr
xor
and
fwait
dec
movsl
stc
mov
push
push
arpl
popf
xor
adc
stos
cli
add
ret
sbb
cmpb
pusha
aam
jae
mov
aam
mov
xchg
repz
fwait
sub
rcr
or
and
pop
jnp
push
in
jae
movsb
jmp
jno
xor
dec
adc
sarb
dec
gs
inc
jne
aam
cwtl
repnz
decl
jmp
call
lock
inc
into
repz
fcomip
and
xor
mov
jecxz
mov
push
ret
test
fnstenv
dec
rorl
xchg
and
stos
sti
inc
dec
arpl
repnz
mov
mov
cmpsl
pop
lret
dec
sub
cwtl
push
jecxz
push
pop
mov
add
out
cld
dec
mov
and
mov
mov
insl
imul
out
lret
jmp
cld
adc
pop
out
jne
pop
push
inc
mov
lahf
sbb
ja
hlt
push
nop
in
ljmp
repnz
push
sbb
xor
fildl
xor
popf
addb
pop
inc
call
mov
fists
inc
lds
int3
push
lods
sbb
xlat
rcrb
add
sahf
inc
fstl
mov
inc
test
dec
xlat
stos
popa
push
outsb
mov
loop
adc
jae
push
rcrl
inc
sub
adc
out
xchg
inc
or
sub
fs
sbb
cmpsl
inc
sbb
mov
stos
pop
mov
and
rcr
fucomi
fisubl
lret
or
jbe
outsl
aas
call
xlat
mov
repnz
add
pop
and
js
jae
ja
sub
cli
sti
call
rcrb
dec
cmc
rcl
xor
in
out
push
dec
cmpsl
loope
push
or
lcall
xlat
je
jns
fs
xor
pop
inc
dec
loopne
sub
mov
pop
inc
push
sub
jno
mov
adc
sub
adc
jne
mov
fldt
mov
sbb
inc
cmp
fiadds
push
push
das
mov
sbb
dec
into
mov
and
lret
pop
pop
inc
dec
mov
push
testb
mov
imulb
pushl
enter
jns
out
inc
stos
and
adc
rcr
int3
dec
cmp
mov
inc
sbb
imulw
mov
add
and
js
sahf
or
fmull
bound
pop
mov
imul
rorl
push
push
sbb
xchg
mov
inc
cmc
rorl
push
shrb
ret
push
pop
mov
rcr
sbb
add
rcl
cld
xchg
jl
out
test
lret
jp
stos
push
inc
xchg
pushf
jl
or
jmp
mov
addl
data16
xchg
push
les
jmp
imul
jg
or
testb
dec
orb
and
xchg
mov
aam
scas
test
mov
mov
mov
pop
pushf
fcoms
fldl
leave
repz
enter
stc
dec
push
and
mov
cs
stc
cmc
pop
test
xchg
pop
jae
add
ret
ss
scas
in
fsubp
mov
fistpll
add
pop
aas
jge
dec
push
cmpsb
shll
test
mov
mov
xor
mov
fldl
rclb
arpl
dec
xchg
mov
jns
out
push
xchg
xchg
add
xlat
xor
mov
jl
rcr
leave
aaa
xchg
jecxz
rol
cltd
jmp
pop
cmp
mov
fistl
mov
mov
in
adc
dec
stc
fldt
pop
pop
ja
push
repnz
push
pop
xor
decl
dec
imulb
jl
xchg
fwait
mov
ja
sbb
sub
sub
fcmovb
pop
shrl
add
sub
jg
test
dec
mov
push
test
sub
iret
dec
xchg
mov
insl
into
out
imul
or
daa
int
adcb
daa
mov
repz
fwait
xor
call
pop
pop
mov
lds
jl
icebp
push
push
sbb
dec
and
lret
ret
ja
mov
lret
xchg
xor
cmp
es
xor
mov
sub
cli
push
shll
add
daa
into
adc
mov
cmp
dec
inc
ret
pop
in
mov
fdivrs
fisubl
jg
insb
xor
lahf
in
add
add
test
lret
sti
sub
xchg
pop
push
cmp
scas
sub
gs
xchg
mov
mov
into
ret
dec
jae
xchg
dec
cmpb
sub
test
mov
pop
ljmp
sub
mov
inc
sub
ds
ja
leave
pop
test
pop
aad
pop
pop
loope
movsb
and
adc
es
rorl
ja
dec
arpl
cmp
inc
insb
rorb
cmpsb
mov
sub
jp
pop
lret
movsb
dec
pop
nop
jge
xor
mov
mov
and
inc
jne
mov
aas
pop
out
int
fs
jecxz
fnstsw
dec
imul
lods
mov
push
sub
push
loopne
or
cld
add
and
lahf
sarl
aam
movsb
nop
push
daa
and
inc
sub
add
loopne
repnz
add
leave
test
pop
inc
sub
clc
cmpsb
inc
sbb
xor
mov
adc
in
das
int
imul
xchg
push
sti
mov
mov
in
push
mov
loop
daa
cli
les
imul
adc
sub
arpl
jmp
mov
xchg
cmp
add
addb
add
std
cmp
add
dec
arpl
outsb
jnp
pop
push
cmp
jg
lock
outsb
cli
pop
ss
pop
cmp
mov
or
push
dec
mov
mov
sbb
inc
jge
pop
mov
or
lret
dec
sarb
cs
sbb
std
rorl
ret
adc
jb
mov
out
negl
loope
push
cld
sub
fimuls
dec
inc
inc
or
push
dec
ret
movl
loop
idivl
add
out
pop
sahf
mov
fldenv
mov
mov
in
fsubrl
pop
mov
pop
sarb
shr
clc
cmp
xor
sahf
lahf
int
or
rclb
js
pop
xchg
daa
nop
cmp
jge
fildl
sub
arpl
pop
jae
out
add
adc
pop
dec
bound
xchg
mov
jbe
mov
aaa
fiaddl
mov
mov
jbe
xchg
cmpsb
pop
out
ss
xor
mov
xchg
push
jmp
out
mul
mov
fwait
xchg
mov
sbb
fisttpl
cmp
loope
dec
loopne
mov
mov
scas
cmp
sub
iret
cltd
jle
adc
aaa
mov
lcall
push
in
pop
pop
mov
mov
cltd
mov
int
jmp
sbb
pop
mov
cmp
ret
mov
push
cmp
ret
mov
adc
push
cld
mov
mov
test
jmp
icebp
jae
test
roll
fs
or
mov
aad
int
jo
out
jl
imul
ljmp
jmp
push
hlt
movsb
sti
mov
mov
mov
lret
push
sub
das
lds
test
fistl
mov
test
xor
cmp
xor
in
dec
dec
into
lock
ljmp
ja
jg
xor
xchg
mov
xchg
shr
bound
mov
fmul
xor
lret
paddusb
pop
mov
jmp
incb
insl
insb
xor
rorl
ss
push
iret
jmp
icebp
ja
fimull
int
inc
inc
jecxz
arpl
ds
xor
lds
xchg
and
mov
inc
scas
dec
cmp
mov
sbb
or
inc
fmul
roll
lret
inc
lcall
cltd
adc
movsl
test
pop
rcll
aas
push
aaa
into
out
imul
iret
mov
inc
mov
dec
xchg
push
adc
hlt
iret
mov
out
and
or
and
jl
leave
repz
stos
cmc
lret
popf
icebp
cmp
aam
ljmp
adcb
push
cmp
out
rclb
push
pop
pop
loope
dec
in
pop
push
jae
mov
pop
and
fwait
push
sub
int3
faddl
jae
dec
jmp
aam
enter
push
nop
aad
and
or
mov
dec
inc
in
ret
data16
shrb
je
lods
xor
inc
out
xchg
or
jl
pop
mov
stc
rol
cmc
cld
iret
popa
insb
xor
out
and
jns
mov
lods
jbe
mov
sbb
fwait
out
shrb
imulb
sarl
or
mov
je
push
aam
push
imulb
xchg
and
cmp
outsb
mov
popa
xchg
push
aad
inc
mov
movsl
insb
in
ljmp
sti
pop
std
popf
int
lcall
add
and
inc
jl
dec
jp
pusha
xor
pop
scas
push
adc
sbb
mov
enter
push
inc
cmp
sub
xchg
outsl
fsts
int3
push
fs
mov
insb
jno
test
jae
and
inc
cs
lcall
mov
mov
or
and
dec
and
fmull
add
sbb
add
jae
outsl
out
mov
imul
test
lods
movsl
test
inc
repz
dec
xor
call
cmp
mov
pop
out
stos
test
and
pusha
push
and
sbb
popa
jnp
test
add
jmp
add
pop
in
sbb
cmpsb
cmp
std
mov
mov
mov
imul
popa
loopne
fwait
mov
xchg
cmp
mov
jbe
pop
lea
aam
imul
cli
jmp
xchg
sbb
cmpsb
sahf
adc
mov
pushf
std
repnz
nop
and
dec
jnp
test
pop
adc
fwait
lret
outsb
cmp
dec
les
xor
std
aaa
pushf
mov
xchg
hlt
xchg
fstps
cld
dec
sub
divb
in
jmp
pop
or
jp
data16
cli
insb
pop
push
repz
push
sahf
push
ja
sbb
push
mov
stos
sub
ljmp
add
test
into
iret
xor
movsb
loopne
test
mov
inc
mov
repnz
out
mov
or
into
inc
push
push
sarb
pop
and
and
into
sti
sti
xlat
xor
es
cmp
lret
jmp
ds
jle
pop
inc
adc
inc
push
adc
cli
nop
mov
lock
andb
mov
int3
and
sub
ficoml
inc
mov
imul
ret
scas
inc
push
jecxz
les
sub
cmp
jl
xor
sub
pop
decl
call
daa
neg
loope
cmp
aaa
jle
xlat
mulb
sub
mov
mov
sub
imul
arpl
popf
inc
mov
cmpsl
sbb
dec
sbb
mov
lret
cmpsl
lock
bound
decl
mov
dec
push
stc
cmpsl
pop
int
arpl
add
xchg
ss
pop
test
pop
bound
and
ficoms
lods
pushl
sbb
out
sub
fldl
inc
fs
rcr
ss
pusha
sti
or
test
ljmp
cltd
nop
adc
icebp
out
sub
imul
fidivrl
cwtl
push
fs
fwait
xchg
ljmp
cltd
rorb
mov
data16
jmp
ja
add
push
test
inc
rcr
mov
sbb
nop
ret
decl
ffree
sbb
sbb
jecxz
shll
fdivrl
cld
movsl
cmpsb
mov
cmp
mov
push
cmp
inc
ja
rcrb
das
xor
movsb
fsts
sbb
mov
and
inc
push
jmp
inc
sub
frstor
mov
out
out
mov
dec
fwait
or
scas
cmp
sbbb
ljmp
lods
mov
sti
mov
push
cmp
cs
mov
mov
out
xchg
in
sbb
xchg
std
icebp
jge
out
mov
add
xchg
push
mov
sbb
mov
fnstenv
mov
mov
shrl
cmp
iret
pusha
lock
mov
pusha
pop
mov
jne
ja
push
add
orl
sbb
scas
fidivs
mov
insb
fimull
icebp
mov
dec
rcrb
jnp
sub
cwtl
mov
imul
mov
cmp
cmp
or
pop
xchg
mov
add
test
in
xchg
fwait
xor
lahf
sub
fsubrp
shrl
push
pop
shl
arpl
sub
sbb
mov
push
adc
mov
inc
movsl
fs
dec
rorb
imull
adc
cmp
cmpsb
out
aam
or
fwait
mov
inc
and
xor
bound
add
mov
push
mov
add
push
adc
sub
movsl
xor
dec
lds
in
cmp
popf
adc
mov
push
out
scas
call
rcll
and
imul
movsb
daa
mov
jno
sahf
or
dec
jecxz
lcall
loope
stos
mov
dec
xor
xor
dec
or
xor
imul
push
cs
push
fisubrl
push
jp
int3
sub
ja
rol
stc
push
dec
dec
sub
fildl
std
add
jl
stos
cld
mov
inc
fsubrl
and
xchg
lds
in
test
stc
out
and
fmul
rcrl
pop
sbb
mov
xor
outsl
cmp
std
push
js
and
mov
stos
outsl
jge
loop
xor
pusha
rorl
or
mov
pop
in
or
test
fs
pop
xchg
and
cs
in
aam
sbb
pop
jbe
inc
fadds
mov
jl
clc
loopne
daa
and
pop
paddsb
decl
scas
jl
shrb
push
pop
bound
mov
ljmp
xor
mov
mov
shl
sbb
fwait
test
repz
and
pop
rorl
aad
and
jg
add
jle
jno
push
jns
pop
test
adc
or
inc
scas
xchg
subl
pop
pop
inc
leave
stos
adc
add
nop
jae
mov
subb
jns
jg
mov
insl
inc
xchg
roll
pop
xor
add
cmpsl
scas
flds
sbb
lret
jp
mov
jnp
fs
pop
jnp
pop
jbe
ja
or
mov
mov
inc
das
out
loopne
sbbl
inc
movsb
hlt
andb
push
mov
mov
out
jle
lock
cltd
ficoml
mov
cwtl
aam
inc
fwait
das
jmp
repz
subb
das
push
mov
icebp
pop
cmc
loope
js
and
inc
bound
sbb
and
jg
inc
je
cmp
jno
cmc
mov
out
mov
lock
sub
lea
xchg
popf
sub
in
ljmp
dec
pushf
jno
popl
jne
mov
sub
test
data16
xchg
lahf
icebp
out
push
jecxz
cmp
mov
pop
inc
add
loopne
pop
mov
mov
inc
sub
xlat
pop
inc
jae
inc
mov
jne
ja
int
mov
jp
repz
dec
hlt
out
push
mov
in
xchg
loope
hlt
mov
xchg
loopne
daa
imul
repz
cmp
pop
or
jbe
pop
mov
push
mov
xlat
loopne
data16
popa
cmpsl
mov
mov
jl
roll
mov
push
int
ret
jg
leave
cmp
fwait
into
push
mov
cltd
ss
sub
xor
movsl
xchg
adc
xchg
test
idivl
inc
ss
mov
test
mov
ja
inc
sbb
call
call
pop
divl
sbb
push
push
in
and
mov
xor
cmpl
sub
pop
mov
mov
cmp
inc
mov
add
mov
scas
add
jg
pop
rolb
cwtl
push
stos
jg
cmp
fsubrl
add
daa
or
scas
mov
jae
xor
in
dec
out
in
cmp
xor
xor
xor
fwait
jge
push
sbb
loopne
jnp
fwait
stos
lods
and
push
ficomps
mov
or
pop
sub
xor
inc
movsl
mov
push
push
add
jns
add
les
sub
leave
es
ret
jns
adc
movsb
xor
xor
lahf
jb
inc
mov
loope
and
jae
adc
mov
mov
in
cmp
xchg
cmpb
and
and
sub
arpl
mov
jl
pop
aad
mov
xor
pop
mov
mov
sbb
test
mov
adc
nop
out
dec
pop
mov
mov
loope
dec
in
bound
imul
movsl
je
cmc
dec
mov
movl
in
xchg
jo
loop
jnp
xor
xor
mov
inc
push
fwait
xor
pop
push
test
jb
ja
adc
fucomip
stos
push
stos
pop
pop
pop
popa
dec
sbb
mov
lret
cld
rcll
shl
in
nop
negl
pop
repz
in
in
into
jnp
pop
xor
testb
movups
push
push
cmp
sub
fcomi
dec
mov
repnz
outsb
add
adc
sti
push
sbb
mov
mov
nop
mov
inc
cmp
inc
add
or
hlt
or
jp
jae
push
mov
push
mov
adc
and
xchg
mov
inc
sbb
dec
push
repnz
fists
and
jmp
mov
dec
mov
out
pop
fisubrs
cmp
scas
loope
test
or
or
imul
mov
orl
xchg
popl
sub
fwait
pop
stos
cmp
lea
scas
cmpsb
addr16
fwait
rcl
adc
std
jl
repnz
xchg
mov
sbb
adc
repz
leave
pop
xchg
pop
mov
mov
mov
loop
push
and
inc
imul
test
lcall
clc
jnp
call
push
rolb
pop
and
ja
and
jae
mov
outsb
stc
ror
mov
mov
xor
and
lahf
and
jmp
fidivrl
stos
sub
mov
adcl
pop
mov
add
inc
into
lret
push
pop
fcoml
ficomps
inc
je
xchg
dec
enter
mov
dec
lret
adc
std
scas
push
aam
dec
mov
outsl
xchg
pushf
iret
std
arpl
icebp
popa
jmp
in
notl
xchg
xor
push
cltd
jmp
or
mov
int
jmp
test
das
sub
xor
mov
fistpll
std
mov
mov
adc
loope
loopne
mov
clc
out
or
jnp
or
inc
jmp
orl
dec
in
fs
cli
pop
add
mov
imul
lea
push
mov
aaa
pop
xor
mov
data16
lahf
ljmp
cltd
lods
xchg
push
lret
shl
sarl
inc
enter
mov
mov
inc
movsb
push
scas
gs
icebp
mov
fwait
jnp
jge
push
shl
adc
ficomps
dec
xor
xor
cmp
mov
in
push
out
pop
xchg
aam
sarl
repz
iret
cmp
std
adc
mov
adc
jno
push
xchg
mov
inc
sarb
loop
cmc
mov
shll
dec
pop
es
push
in
sarb
test
fwait
sarl
sti
cli
push
wbinvd
iret
dec
in
popl
cld
and
pop
push
push
test
imul
mov
jbe
mov
aaa
test
jg
test
stos
add
orb
push
mov
fisttps
pop
stos
jecxz
dec
test
pop
inc
add
es
push
pop
jge
pop
mov
push
nop
ljmp
jne
stc
add
scas
shrb
add
fdivrs
cmp
cmp
das
push
push
out
xacquire
fsts
pop
push
adc
aad
mov
andnps
add
popa
test
scas
adc
xchg
out
jl
pop
insb
stc
test
iret
cmp
mov
push
lcall
repz
push
sub
and
mov
adc
fnsave
mov
pushf
arpl
das
cmp
popf
mov
inc
ret
test
out
inc
idivl
dec
es
test
push
cltd
jmp
imul
xlat
ss
add
ss
ja
iret
int
xor
icebp
cmpsl
inc
push
mov
sbb
mov
mov
imul
pop
das
adc
imul
movsl
jg
lahf
pop
fwait
aaa
mov
sub
or
dec
mov
xor
mov
int3
pop
lcall
dec
inc
cmp
jg
fwait
adc
daa
push
xor
xor
or
inc
ljmp
lea
inc
and
sbb
jecxz
popf
push
push
add
xchg
pop
xchg
pop
or
pop
into
ja
rcrb
dec
cmp
cltd
rol
jo
mov
fistpll
hlt
mov
adc
pushf
jmp
xchg
adc
mul
and
cmc
inc
fdivrs
shll
add
xchg
mov
mov
mov
bound
inc
pop
shlb
rclb
ret
mov
addr16
int
daa
xor
fsubp
lahf
jecxz
push
ror
xor
jmp
push
inc
test
fs
aas
stc
mov
imul
cmpsb
inc
xor
sub
inc
shrb
and
push
xchg
lods
loopne
dec
clc
push
negb
and
add
pop
mov
jbe
jbe
push
outsb
fwait
mov
scas
pop
in
sbb
jb
cmp
frstor
mov
or
jge
idivl
nop
cmp
mov
add
iret
cltd
sub
push
pop
sbb
lods
js
sahf
mov
adc
jno
mov
push
mov
les
dec
sub
or
cmp
jp
leave
sub
data16
andps
mov
shlb
mov
mov
inc
in
js
mov
loop
mov
fnstsw
cld
pop
sbb
fcoml
inc
jne
call
repz
inc
idiv
cltd
sub
and
push
cmc
or
nop
clc
dec
pop
jbe
icebp
lret
xor
stc
cmp
jae
hlt
mov
stc
scas
xor
ljmp
cmp
jmp
xor
xchg
subl
sub
mov
cld
sbb
adc
jno
sub
xlat
callw
lea
sub
jmp
pop
jne
dec
mov
into
out
and
mov
call
push
fs
xor
jo
lods
fnstenv
mov
add
mov
jns
sub
mov
repnz
inc
dec
xchg
enter
jle
fwait
xor
cld
rcll
sbb
adc
jle
inc
movsl
mov
add
fidivrl
xlat
arpl
adc
repz
leave
mov
je
dec
dec
mov
test
adc
repnz
pop
aas
mov
mov
ret
inc
dec
pop
pushf
xchg
and
aad
fsubr
in
pop
pop
pop
pusha
mov
mov
data16
out
test
pop
push
and
out
xlat
ret
inc
je
popa
add
popf
add
fwait
aas
push
stos
lahf
dec
add
test
adc
loopne
mov
fwait
jnp
stos
imul
sbb
cli
jnp
fst
jno
add
outsl
adc
add
int
mov
int3
test
mov
xor
push
cmp
int3
inc
mov
mov
daa
in
negl
and
out
dec
test
cmp
pop
or
sub
pop
lahf
imul
cmp
pop
push
shrl
sub
psubsb
push
inc
out
adc
fmull
aas
loopne
dec
rcr
pop
out
mov
pop
fs
sub
repnz
mov
aas
jns
sbb
push
push
int3
inc
push
jno
sub
sbb
push
dec
call
jle
jno
jg
in
dec
fdivl
mov
ret
pusha
imul
mov
push
xchg
cmpsl
test
push
dec
imul
imul
jnp
std
pop
stc
xor
jae
aaa
or
cltd
xor
je
int3
pop
mov
mov
lea
push
dec
xchg
je
cmp
repz
fidivl
jmp
insl
push
fwait
sahf
cmc
mov
mov
imul
cmp
js
dec
sti
pop
cmc
aam
or
add
sbb
jnp
push
add
insb
aam
inc
sub
sbb
xchg
sub
mov
lcall
ja
mul
mov
push
mov
pop
in
sub
gs
sti
xchg
cmpsb
inc
push
pop
add
mov
mov
cwtl
ret
call
pop
jne
out
out
mov
and
imul
mov
fwait
jge
int3
adc
pop
mov
mov
mov
jns
jno
xchg
cmp
or
or
push
and
inc
jge
iret
lods
cmp
mov
call
repnz
repnz
and
or
mov
push
outsb
loop
inc
xor
mov
inc
inc
pop
mov
xchg
sti
lahf
dec
mov
sub
pop
fldt
mov
xchg
loopne
data16
jmp
scas
and
lea
jl
aam
and
loopne
pop
or
repnz
or
jg
sbb
cld
jnp
test
or
and
cltd
fiaddl
loope
push
xchg
mov
outsb
fwait
cltd
inc
xchg
pushf
cmp
mov
or
xchg
movsl
mov
test
lds
push
mov
add
mov
in
mov
arpl
push
cmp
lret
cmp
jne
inc
sti
int3
int3
daa
or
call
sub
lahf
aad
cmc
loopne
cmpsb
lock
sub
std
jge
jmp
les
cmp
stos
mov
jecxz
loopne
push
int3
or
shll
js
enter
pop
adc
std
cmpsb
adc
xor
aad
loope
cmp
jp
dec
cwtl
push
push
int
adcb
outsb
ror
pusha
shlb
sbbl
repnz
mov
fdivs
push
jge
mov
mov
jecxz
jmp
jmp
mov
and
mov
xor
inc
pop
test
mov
inc
ret
push
movsl
adc
push
add
pop
or
xchg
fcoms
jmp
mov
mov
inc
pop
jl
ljmp
sub
clc
aad
dec
cmpsl
shll
arpl
push
cs
push
std
lcall
fcomp
push
push
cmp
jl
xor
push
push
repz
test
pop
jnp
sbb
adc
daa
repz
ret
sub
lcall
sbb
or
jecxz
sti
inc
cmp
push
cwtl
jbe
jnp
xchg
mov
loope
dec
inc
pop
cmp
mov
aaa
mov
popa
mov
sub
mov
dec
xchg
aad
movsl
push
int
sbb
test
test
mov
push
fwait
or
ss
ljmp
ret
xor
out
pop
or
aam
mov
out
cltd
scas
jbe
notl
xor
fdivrl
out
cmp
add
dec
jecxz
mov
pop
push
dec
shl
cmp
and
push
push
and
sbb
jbe
fisubl
jmp
mov
pop
popa
pop
scas
cmp
xor
mov
inc
and
out
cld
imul
inc
mov
loopne
cmp
insb
sub
pop
adc
xchg
cld
shll
dec
lahf
cmpsb
ret
inc
data16
pop
rorb
cmc
push
orb
mov
notb
inc
imul
pop
lods
imul
lds
push
and
add
mov
adc
cmp
xor
sbb
jae
cmp
push
jl
in
xchg
lods
subb
ss
lods
xor
rcrl
adc
test
rclb
or
add
mov
and
pusha
jg
rcrb
cmpsb
das
push
clc
lret
mov
sbbl
fwait
out
outsb
mov
mov
cli
xchg
scas
inc
sti
sti
or
cmc
cli
loopne
es
std
adc
cmp
inc
out
rorl
mov
inc
and
pop
pop
lahf
mov
inc
mov
aas
outsl
push
dec
push
jbe
sbb
xor
filds
ljmp
pop
scas
je
outsb
mov
loope
pop
out
fwait
add
push
inc
fwait
and
cld
dec
jo
out
mov
mov
pop
mov
or
add
cmp
dec
pop
dec
pop
mov
push
gs
cmp
jmp
xchg
dec
dec
test
call
inc
lea
and
loopne
testl
jns
outsb
lret
in
sub
pop
cld
aaa
test
mov
and
xor
into
mov
pop
pop
mov
popf
ds
adc
adc
stc
rolb
sbb
sub
jbe
lock
cmp
mov
jo
inc
test
jb
inc
or
push
loopne
mov
and
jecxz
mov
push
scas
add
pop
mov
fdivl
mov
mov
and
shlb
movsb
mov
repz
ret
pop
jb
das
sbb
mov
jae
jns
xchg
in
lods
ret
sub
in
mov
in
stos
sbb
jl
leave
mov
sahf
test
lock
inc
out
mov
outsb
mov
jo
sahf
cmpsb
mov
fcmove
pop
sti
push
out
in
jmp
inc
out
in
es
lret
leave
sarb
mov
add
dec
shlb
mov
or
inc
cmp
sbb
sbb
int3
jns
pop
dec
cmp
stos
jbe
lods
int
or
jl
adc
scas
pop
mov
or
call
movsb
js
into
cmpsb
sbb
mov
jge
push
jb
push
mov
xor
loopne
mov
xchg
xor
mov
stos
pop
sbb
std
cs
sahf
xchg
ss
lock
jge
sti
add
int3
fisubrs
lret
int
dec
jae
pusha
or
iret
int3
jp
lret
cmp
icebp
jns
fcompl
pop
inc
push
addb
cld
jl
mov
stos
stos
pop
insl
cmpb
inc
adc
mov
mov
out
sbb
shll
sub
sbb
in
mov
int
push
mov
pushf
fld
pusha
and
sahf
int3
imul
mov
lods
and
adc
pop
xor
or
imul
jl
mov
add
inc
aad
and
ficomps
pop
xorl
pop
add
decl
outsl
mov
sub
add
add
xor
push
scas
mov
arpl
js
int
repz
fwait
jno
dec
dec
ret
add
out
dec
sbb
mov
bound
jg,pn
test
mov
iret
dec
xor
mov
dec
sub
mov
push
into
ret
adc
xchg
mov
aaa
lock
jg
and
jnp
rclb
lcall
sub
mov
lock
test
add
outsb
push
mov
jns
add
mov
xor
add
lea
add
aad
mov
cs
xchg
jbe
xchg
mov
adc
pop
xchg
add
adc
cmpsb
loop
mov
popa
inc
movsb
aam
neg
or
ret
mov
jmp
adc
decb
pop
sub
mov
gs
outsb
out
pop
mov
leave
test
mov
dec
sbb
or
fimuls
inc
push
add
xor
mov
in
test
dec
sub
dec
nop
in
je
cli
dec
mov
lahf
ret
mov
adc
dec
scas
jb
mov
scas
cmp
repnz
pop
clc
mov
inc
iret
sti
test
jb
cwtl
xchg
or
inc
xlat
mov
sbb
sub
lret
dec
xchg
popa
and
jns
push
stc
sub
mov
xchg
lcall
addb
inc
fisttpll
imul
std
mov
sarl
in
cld
iret
jg
mov
out
inc
inc
lret
inc
dec
dec
loope
or
ror
mov
stc
fmull
mov
push
ds
shl
popa
jnp
sub
fisttpll
sbb
jne
loope
adc
idivl
out
imul
xor
pop
mov
dec
fidivrl
cmpsb
and
jl
bound
mov
test
cmp
dec
leave
xor
leave
mov
sahf
mov
test
mov
mov
inc
dec
mov
fidivl
cltd
cmp
mov
inc
mov
add
pop
push
loop
mov
sub
movsb
sbb
mov
fdivl
and
jecxz
ljmp
bound
sbb
adc
in
scas
inc
jb
xorb
or
addr16
lods
push
pushf
sti
inc
mov
scas
xor
leave
sbb
pop
xchg
sbb
xchg
or
repz
test
cvtps2pd
mov
loop
sub
pop
fildll
roll
mov
inc
in
subl
cwtl
bound
aas
mov
sti
jp
xor
pop
push
xor
jl
and
and
mov
jbe
push
add
jmp
mov
test
enter
add
cltd
imul
dec
mov
xor
cmpsb
mov
fs
sahf
fildl
popf
gs
cld
mov
adc
pop
xor
push
push
mov
andb
test
popa
or
gs
mov
popa
jno
inc
stos
xor
xlat
lds
andb
cmp
dec
shr
push
mov
loope
lahf
fcmovnbe
push
push
cmc
aam
cmpsl
fsubrl
mov
mov
push
inc
push
mov
sbb
mov
dec
mov
scas
add
enter
aad
imul
into
jg,pn
jnp
lods
jle
iret
jp
movsb
ja
push
cld
loopne
and
sub
pop
mov
cmp
dec
jl
cmpsb
repz
hlt
dec
cld
cltd
jl
js
mov
loope
adc
mov
mov
cmp
mov
test
pop
add
dec
std
in
cmc
adcb
in
mov
pop
and
add
cmp
lahf
lods
lods
stos
clc
call
xchg
cmp
or
pop
inc
and
es
mov
movsb
nop
xchg
fwait
nop
xor
scas
mov
mov
xchg
lret
cli
xchg
ljmp
js
aad
test
data16
mov
aaa
push
mov
insl
fsub
cld
loopne
scas
pop
cmc
movl
push
rcll
les
cmpsb
dec
dec
test
add
repnz
add
sbb
dec
xchg
std
mov
xor
ret
pop
lods
into
jno
xchg
inc
mov
dec
pusha
xchg
mov
nop
xor
or
clc
roll
push
mov
mov
and
ljmp
adc
mov
mov
pop
dec
imul
fwait
aam
ret
mov
mov
sbb
call
divl
jns
inc
inc
in
fs
push
mov
jbe
or
sbb
sub
fwait
mov
fcmovnb
mov
xchg
adc
out
adc
mov
test
adc
iret
jl
xor
push
popf
or
add
lret
into
aam
cmp
xchg
or
inc
sub
in
lods
add
clc
mov
mov
ret
lret
pop
fdivrs
mov
push
cmpsb
mov
pop
inc
popa
pop
orl
subb
mov
push
iret
xchg
pop
orb
cli
xor
sbb
sub
jno
shlb
aad
push
adc
add
stos
movsb
test
adc
dec
insb
sahf
sub
pop
inc
push
aam
mov
shrl
adc
jns
outsl
and
mov
xlat
inc
sbb
inc
xor
push
sbb
mov
out
jne
inc
mov
mov
test
out
inc
mov
or
aam
sub
test
jecxz
add
cli
ss
mov
jnp
jl
or
mov
jo
sub
cld
negb
clc
iret
in
mov
jmp
lret
lea
push
sarb
push
into
cmp
push
jmp
push
mov
fwait
and
jl
fsts
insw
stos
cmp
sahf
daa
inc
neg
xchg
fs
aaa
dec
cmc
sbbb
into
xlat
cmp
or
sub
ds
pop
js
sbb
cmc
out
xor
push
sbb
cld
test
es
mov
dec
test
pop
cmp
lods
call
pop
xor
rolb
stc
pop
lods
fisubl
addr16
shl
shlb
test
mov
jmp
dec
adc
add
lahf
bound
push
push
xchg
lods
jnp
sbb
mov
xor
pop
int3
out
repz
and
fstpt
iret
push
cld
xchg
loope
cmp
mov
subl
mov
sarb
mov
or
add
sbb
shll
stos
inc
fcompl
xchg
cmp
insl
sbb
enter
push
les
push
test
movsb
dec
enter
aam
in
jbe
lods
imul
mov
jbe
inc
xorb
pop
inc
bound
xchg
das
daa
loop
or
mov
popf
testl
xchg
dec
sti
mov
add
inc
push
mov
hlt
jbe
nop
or
in
pop
mov
mov
dec
jne
out
popf
fwait
out
xlat
push
aam
idivb
dec
negl
ret
arpl
pushf
adc
xchg
fimuls
fisttps
or
popf
stc
jmp
jecxz
sbb
cwtl
jl
xor
fisttpll
lods
out
add
dec
test
lret
jno
ficoml
mov
mov
xor
iret
pop
icebp
mov
aad
sub
jl
pop
aas
mov
pop
sbb
out
andb
push
fnsave
or
add
lcall
fisubrs
data16
fisttpl
sub
stc
mov
dec
dec
adc
mov
leave
inc
into
cltd
mov
cmp
push
jp
cmpsl
int
inc
jnp
add
cltd
inc
jnp
mov
jp
mov
in
dec
gs
add
fcompl
dec
dec
add
push
cwtl
xor
aam
add
push
xor
lret
sub
push
jl
es
sbb
mov
xor
mov
out
xor
sbb
je
mov
pop
mov
mov
div
mov
pushf
mov
lods
sbb
mov
jl
out
test
faddl
adc
mov
lods
xchg
jecxz
xor
out
in
inc
cld
jmp
fsubs
add
jp
insl
mov
adc
pop
cwtl
sbb
mov
out
jns
je
adc
and
mov
jae
cmc
push
mov
in
movsl
mov
inc
cmp
push
ljmp
out
mov
mov
xchg
dec
sbb
mov
into
les
fcomi
mov
sbbl
dec
fadds
push
stos
and
arpl
sbb
nop
xchg
sbb
loop
mov
sub
sub
std
xchg
cmpsl
pop
mov
jge
fildll
inc
ret
in
stos
fs
mov
push
sahf
lretw
arpl
cmp
aad
mov
inc
dec
xor
dec
dec
clc
or
sub
mov
dec
jne
in
repz
add
jb
aam
fidivrs
scas
stc
movsb
lahf
mov
xor
inc
sbb
and
adc
mov
imulb
cwtd
adc
cmp
mov
xchg
cmp
mov
ja
in
jns
rcll
ja
sbb
jge
adc
inc
repz
xor
sub
loop
inc
data16
jmp
sbbb
out
pop
xchg
rcll
mov
lods
or
test
push
out
ret
sub
stos
repz
mov
jge
repnz
loopew
push
stos
lret
repz
test
pushl
sti
pop
rorl
sub
lret
mov
push
jecxz
cmp
fwait
cmc
fs
xchg
inc
pusha
mov
out
jecxz
in
dec
out
addr16
fisttpl
pushf
cmp
mov
and
xor
iret
sbb
imul
cs
jle
pop
or
inc
sarb
testb
cmp
xchg
adc
fstpl
xchg
lcall
cmp
jg
jo
push
ljmp
rcl
fs
xorb
push
push
vmread
clc
movsb
test
sbb
xchg
test
and
ljmp
dec
call
sahf
outsl
xchg
sbbb
adc
or
sub
inc
mov
lcall
mov
push
movsl
or
cmp
dec
adc
add
cltd
bound
in
push
add
sti
out
jp
or
dec
xor
imul
jl
in
fucomi
imul
fwait
mov
cmp
fimuls
popl
xchg
mov
cmpl
fisubs
and
push
mov
xchg
rcll
mov
inc
frstor
std
jae
adc
cmpsb
mov
sub
jl
sbbb
adc
mov
jp
mov
in
popa
sub
mov
xchg
adc
aas
or
or
push
xor
mov
mov
dec
les
stc
sub
inc
dec
cs
adc
imul
movsb
mov
sbbl
xchg
inc
mov
fimull
les
mov
jmp
cmpsb
clc
mov
outsb
or
stos
lods
push
sbb
es
and
inc
popf
sbb
test
addb
iret
xchg
dec
pop
ja
mov
jns
fcompl
mov
mov
jne
push
mov
adc
mov
scas
js
lock
mov
fmull
les
or
addl
int3
dec
mov
jo
popa
sbb
dec
sbb
inc
or
mov
cmp
daa
xor
or
into
inc
cld
mov
mov
dec
mov
sbb
scas
mov
cmp
nop
cld
repz
outsl
mov
ret
cmp
pop
stos
fsubrs
lret
lahf
cmp
imul
mov
and
lret
jmp
mov
mov
sub
das
mov
in
aam
adc
or
jnp
push
das
mov
or
sbb
mov
push
mov
mov
jb
cld
adc
sbb
mov
mov
lahf
stc
movsb
add
mov
sub
mov
rdmsr
aam
lahf
insl
and
fmuls
repnz
xor
sbb
jne
cmc
lods
out
inc
mov
stos
insb
in
movsb
fwait
jbe
inc
jmp
aaa
mov
loope
push
ljmp
arpl
imul
out
iretw
xchg
clc
addl
repnz
inc
arpl
mov
cmp
xchg
jl
int
andl
or
mov
add
scas
aaa
cmp
test
fmull
sbb
fsubs
push
cwtl
sarl
lahf
mov
test
scas
cmc
loop
movsl
iret
jg
mov
fisttpll
call
xor
bound
ret
push
jne
add
jmp
push
mov
and
repnz
jno
sub
jecxz
loopne
sbb
mov
mov
es
scas
ds
mov
jg
psubsw
loopne
mov
xor
pop
leave
adc
scas
mov
pop
cltd
sub
push
sarb
negb
jp
fcomps
out
mov
aam
scas
or
iret
mov
stos
js
into
cmc
jnp
bound
dec
cmovbe
mov
inc
and
push
or
pop
fldl
fdivp
das
add
add
shlb
aas
xchg
out
sbb
sti
dec
inc
push
stc
jne
push
daa
inc
and
xor
sub
js
cmovge
lock
sbb
rcr
ret
xchg
jae
cld
pop
dec
mov
das
negl
push
xchg
inc
push
movsb
shrb
outsb
push
fstpt
xchg
and
lret
jecxz
push
jl
add
pop
inc
imul
mov
push
adc
test
mov
scas
mov
fs
push
jecxz
or
ja
roll
fisubrs
and
int3
dec
mov
jp
jnp
out
imul
mov
lret
lods
jl
or
jnp
int
stos
mov
xor
fdivr
dec
shlb
mov
pushf
inc
fcoml
sbb
inc
jnp
mov
cmp
shr
in
lret
xchg
push
aad
mov
stc
xor
pop
fwait
push
call
push
out
negl
sbb
cmp
sbb
out
dec
mov
in
out
fbld
ror
cs
out
iret
adc
jge
sbb
mov
out
roll
lret
arpl
xchg
sub
mov
sbbl
in
adc
jbe
daa
in
imul
cpuid
or
lret
jle
sar
mov
mov
scas
orb
push
mov
pop
les
sub
js
cltd
cs
or
decb
push
xchg
or
mov
inc
rolb
hlt
lcall
repz
sub
fmuls
sbb
repnz
insb
inc
xor
adc
popf
iret
ret
fidivl
das
adc
lret
inc
adcl
adc
fwait
xor
pop
iret
add
lock
lea
add
ljmp
popw
or
push
jnp
dec
mov
and
iret
test
mov
sbbl
mov
inc
cmpsl
sbb
or
rol
stos
jmp
pop
pop
es
repnz
jno
jmp
add
sbbb
nop
sbb
mov
mov
fdiv
ljmp
out
inc
push
inc
mov
nop
mov
lods
push
fiadds
push
jne
movsb
push
inc
mov
arpl
jl
cmpsb
outsb
and
dec
dec
push
jbe
scas
pusha
lcall
imul
push
mov
add
xor
popa
mov
or
rorb
sbb
lods
in
sbb
cmp
or
fidivs
fwait
mov
pop
call
leave
insb
or
pop
dec
inc
sub
and
jne
add
mov
push
iret
mov
test
fiadds
in
mov
pop
and
cmp
jecxz
xchg
xchg
mov
into
rorl
push
pushf
movsl
jecxz
inc
jecxz
pop
out
xor
cmp
jl
xor
inc
test
es
iret
dec
mov
scas
call
mov
mov
and
movsb
mov
pop
frstor
idivl
jmp
lret
xor
inc
loopne
push
dec
jae
repz
in
or
mov
leave
add
loopne
sub
movsb
ret
jg
into
mov
mov
repz
dec
xchg
xchg
imul
inc
in
mov
scas
fisttpll
mov
sbb
push
insb
bound
out
jg
mov
mov
pop
mov
push
faddp
nop
imul
xchg
lret
call
aam
out
pop
sbb
cmp
aam
rorl
pop
iret
xchg
mov
jecxz
sarb
jecxz
inc
stos
repnz
out
cmp
sbb
cs
pop
repnz
arpl
clc
mov
inc
and
leave
mov
icebp
jns
jge
pop
sub
int
stos
sub
jae
sbb
mov
inc
int3
mov
rclb
sub
adc
shll
mov
inc
addb
fstl
in
pop
mov
mov
bound
in
aam
fidivrl
pop
lret
mov
jmp
dec
imul
ret
scas
movl
sub
pop
repz
xor
jmp
sbb
and
pusha
mov
fisttpll
mov
dec
cmp
xor
pop
xchg
sub
pop
ljmp
adc
je
sub
sub
out
adc
stos
mov
lcall
lods
stos
push
mov
movsl
iret
iret
pop
mov
stc
das
cld
cltd
mov
mov
pop
js
or
inc
nop
jg
xchg
pushf
mov
jae
xchg
pop
xor
mov
out
dec
cld
fwait
mov
jae
sbb
dec
mov
out
scas
mov
dec
pop
stos
outsb
xor
std
aas
xlat
push
repnz
fidivrl
sbb
mov
lods
adc
inc
sbb
test
mov
cltd
sub
dec
mov
push
data16
pop
fadd
mov
scas
dec
out
ds
in
xchg
cltd
mov
icebp
or
int3
jno
das
ja
jbe
scas
dec
out
xchg
jae
push
mov
sbb
mov
jle
and
test
xor
lret
aam
and
jno
fisubl
pushl
aas
jbe
jmp
fisubrs
mov
jns
fucomp
in
imul
xchg
push
mov
pop
ja
mov
cmp
cltd
cltd
sahf
push
sti
jg
mov
and
pop
and
mov
fs
cmc
int
addb
adc
lods
frstor
and
cmc
imul
test
fimuls
inc
jle
outsl
sahf
and
test
pop
inc
nop
enter
pop
stc
jns
ds
pop
jg
mov
adc
ret
xor
add
mov
push
xchg
or
ret
jl
in
fimuls
fwait
je
pop
fidivrl
or
scas
push
pop
sub
mov
test
jl
fwait
cmc
jmp
add
dec
sti
jnp
push
mov
pop
xchg
mov
fcmove
pop
in
imul
and
add
cwtl
adc
stos
cmp
jg
fwait
sbb
cmpsb
jg
lcall
in
test
lret
sub
int
push
cmc
mov
out
cmc
cmp
cld
pop
jnp
lock
test
ret
aas
xchg
idivl
stos
xor
inc
sarl
in
imul
jmp
es
push
add
es
roll
pop
xor
es
sub
test
xchg
inc
pop
inc
xor
mov
into
cmc
in
filds
hlt
or
stc
pop
aam
imulb
out
add
fmull
fcmovne
dec
push
mov
mov
jb
push
lret
mov
mov
push
lcall
or
inc
push
mov
sahf
mov
fimull
mov
mov
or
add
loope
or
dec
lret
push
shlb
lahf
mov
dec
shr
movsb
pop
loopne
inc
pop
insl
cmp
sub
cmc
fs
mov
addb
sbb
and
add
xchg
insb
aam
shrl
cmp
push
imul
cli
rorl
aam
pop
cmp
fbld
aaa
icebp
sbb
sbb
mov
data16
adc
cltd
adc
ljmp
push
adc
lods
rcl
ret
cld
dec
ficoml
jno
add
cmpsb
mov
mov
andb
mov
push
xchg
sub
lcall
push
std
hlt
mov
push
mov
and
sarb
mov
jnp
cld
enter
out
dec
in
sub
push
cmpsb
mov
fcompl
sub
test
mov
rclb
push
insb
insb
daa
mov
test
inc
and
mov
sbb
je
push
jnp
sar
in
inc
xchg
int
sub
push
icebp
and
insb
pop
dec
fcomps
lds
push
jp
add
mov
mov
scas
cs
mov
mov
sub
lock
gs
lret
mov
inc
pusha
pushf
cmp
inc
sub
pop
adc
pop
lods
jg
cld
icebp
adc
lahf
imul
orb
stc
iret
mov
inc
mov
mov
scas
or
jl
mov
or
jge
arpl
push
jmp
lods
cmp
enter
push
ret
xor
push
xor
pop
jg
shrl
xchg
es
imul
and
cmp
mov
xor
mov
loop
fldl
cmp
popa
jne
pop
pushf
das
mov
fidivs
mov
push
sbb
and
ror
es
out
shl
aad
dec
lock
insl
pop
mov
cmpsb
mov
inc
imul
jno
sub
adc
xor
out
rol
shr
add
mov
aam
cmpsb
jne
lods
sti
jg
mov
bound
dec
rcrl
pop
mov
adc
leave
mov
enter
mov
repz
or
pop
xchg
jp
insb
ja
mov
pop
cmpsl
mov
addr16
idiv
mov
stc
jne
and
mov
dec
or
push
dec
add
jge
ret
sub
cmp
jne
nop
or
incb
dec
add
jae
je
mov
dec
iret
ret
jge
ljmp
mov
fnstenv
shll
gs
dec
arpl
sbb
hlt
jno
push
cs
int
insb
loope
or
sbb
dec
outsb
repnz
pop
inc
sbb
rcll
fwait
lds
scas
hlt
push
cmp
cmc
in
iret
cmp
adcl
mov
add
push
dec
xchg
push
sbb
decl
push
popa
ja
dec
test
lds
sub
rcl
arpl
jns
jbe
std
aad
shl
and
dec
ss
cmp
sbb
cmpsb
xchg
movsb
adc
xchg
inc
lods
xchg
inc
inc
es
mov
add
mov
movsl
lods
dec
jecxz
push
insb
std
dec
mov
or
roll
pushf
in
mov
add
lds
mov
nop
sub
into
jmp
pusha
sub
lcall
fistps
pop
in
inc
negb
add
mov
push
in
subl
xor
insb
nop
rorl
cli
stc
mov
mov
mov
fwait
inc
mov
movsl
lods
dec
fidivrl
pop
mov
scas
cli
imul
out
aad
mov
adcb
int
sbb
jae
mov
andps
dec
add
and
in
sahf
testb
push
add
mov
add
and
mov
xor
jo
mov
cmp
inc
push
sti
add
shl
sbb
jae
mov
mov
push
mov
xchg
ret
mulb
add
mov
sbb
int
mov
push
jl
push
rcr
cmp
pushf
sub
loope
sub
push
cs
cltd
rcr
div
loope
mov
jne
sbb
push
and
dec
es
push
fstpt
and
push
or
incb
daa
test
fisubs
and
cltd
cwtl
mov
fwait
inc
adc
cwtl
pop
jge
add
les
imul
shll
add
arpl
sub
push
or
fists
enter
mov
and
lock
xchg
out
sbb
sub
fiadds
jbe
dec
dec
xchg
rclb
xchg
cmp
popa
sub
cmp
fisubrs
xchg
xchg
push
mov
out
mov
movsb
movsb
xchg
data16
adc
rorl
aas
mov
fs
mov
ficoml
shr
or
gs
lahf
mov
jnp
dec
mov
movsb
xchg
mov
jnp
int3
cmp
popf
scas
mov
repz
sub
insb
ficomps
push
test
punpckhwd
aam
rcrl
daa
pop
push
push
and
stos
movsb
or
push
repnz
sbb
inc
inc
mov
add
imul
mov
movsb
sbb
or
mov
imul
jp
in
or
sti
mov
imul
out
test
adc
or
xchg
mov
nop
mov
test
dec
pop
xchg
jb
in
in
fisubs
mov
stos
adc
jecxz
ss
cmp
out
adc
pop
mov
mov
imul
xchg
and
mov
xchg
mov
mov
call
cmp
pop
cmp
or
test
xchg
data16
sub
push
sbb
mov
arpl
pop
testl
test
cs
outsb
jo
test
push
dec
sbb
jecxz
fwait
test
fsubr
dec
adc
inc
stc
jecxz
sahf
aaa
cmpsl
cmpsb
adc
mov
mov
ljmp
dec
stos
lea
dec
cmp
push
into
cltd
cmp
inc
cmp
inc
mov
in
jmp
push
push
lods
sahf
lahf
add
push
imul
cmc
jl
subl
dec
repz
xor
stc
inc
xor
jecxz
ja
xor
imul
sbb
xor
or
dec
cmpsb
decb
dec
mov
jl
mov
adc
repnz
js
pop
jle
rol
adc
test
xchg
jecxz
push
in
les
stos
arpl
dec
les
adc
sub
push
lcall
pop
dec
ss
or
mov
lahf
pop
xchg
adc
mov
pop
dec
movsb
shr
and
mov
jno
and
cmovo
test
jb
jecxz
jmp
or
leave
jge
xchg
mov
push
pushf
lret
xchg
lret
in
xchg
xorb
jmp
mov
repz
dec
sbb
fistpll
and
cmp
adc
mov
sub
pop
aaa
dec
xor
lcall
or
push
push
test
cwtl
aad
in
mov
out
inc
fmuls
sbb
xchg
pop
ss
jns
lret
insb
add
lahf
jge
fiaddl
shll
cmpl
in
mov
clc
cmp
out
push
xor
xchg
repz
inc
loope
sub
add
out
pop
fisubs
rcll
cmc
xchg
aaa
dec
mov
sbbl
mov
add
imul
mov
cmp
movsl
xor
xchg
cmpsb
in
mov
add
or
stos
out
loopne
add
rcrl
push
mov
xchg
test
into
orb
cmp
push
insl
mov
xor
scas
pop
sub
insb
push
popa
and
adc
sub
mov
inc
test
inc
xor
dec
pop
ljmp
mov
adc
jge
xchg
fldlg2
inc
jg
adc
push
subb
dec
int3
imul
das
stos
inc
mov
mov
out
sub
mov
sbb
imul
jp
mov
sbb
hlt
out
fistpl
xor
jecxz
push
nop
test
dec
xchg
and
pop
pop
sub
mov
inc
test
iret
xchg
adc
pop
push
repz
int
jmp
lcall
mov
sahf
dec
dec
mov
xchg
shl
jecxz
mov
sub
inc
lret
push
or
mov
jecxz
push
sbb
icebp
test
pop
or
inc
cltd
sub
pop
and
in
push
pusha
cs
xchg
xor
mov
iret
out
add
fucom
idivl
icebp
and
repnz
js
aaa
adc
push
iret
jl
mov
jo
push
add
sbb
dec
ja
add
fs
int
loope
lea
rcrb
xorl
testl
imul
adc
rcl
push
mov
mov
pusha
mov
mov
lods
pop
inc
aas
test
push
in
stos
mov
adc
dec
out
xorl
mov
xor
push
movsb
pop
lods
jecxz
xchg
xor
or
fsubrl
add
xlat
lods
sarl
test
xchg
add
fimuls
push
movsb
sub
xor
shll
into
dec
popa
jne,pt
cmp
lock
sbb
dec
sti
push
jl
pop
insb
es
divb
shrb
rcr
hlt
ret
pop
sbb
mov
and
fwait
loope
adc
ficomps
lahf
rolb
notl
push
into
idivl
pop
outsb
dec
jge
add
mov
inc
dec
out
cmp
mov
mov
jno
lea
mov
push
adc
sahf
xor
inc
insb
aad
add
rclb
lret
adc
mov
fisttps
imul
fwait
es
mov
mov
pop
xchg
call
or
mov
inc
insb
sub
pop
xchg
iret
std
pop
cmp
lods
fwait
jno
test
rolb
data16
data16
xlat
sbb
out
jne
or
ret
aam
pop
incb
mov
or
je
ret
jle
adc
sub
ret
sarl
pop
xchg
out
xor
sub
outsb
xchg
dec
dec
dec
imul
lods
pop
mov
inc
sbb
or
sub
pop
movsb
sbb
testb
pusha
test
xor
mov
add
sub
mov
mov
andl
adcb
icebp
fidivrl
fs
cmp
arpl
mov
iret
stos
cmp
mov
movsb
mov
sub
cmpsl
adc
pop
mov
ss
in
mov
push
mov
mov
or
jno
scas
cltd
mov
jle
cmp
lret
sub
push
or
xlat
mov
pop
mov
leave
int3
mov
scas
xor
cmp
lods
ss
shll
mov
movq
adc
inc
push
mov
jnp
push
fistpll
mov
cmc
dec
pop
es
shl
mov
mov
mov
pop
out
gs
insb
cmp
xchg
jg,pn
icebp
jl
pop
inc
push
fistpll
sbb
push
push
mov
or
sub
add
or
gs
pop
sar
mov
pop
loope
dec
das
and
xchg
jns
push
push
push
xor
xchg
aad
mov
mov
out
repnz
cltd
xor
jb
lret
movsb
loopne
push
push
pop
jge
push
andb
lea
pop
sti
mov
out
xor
xor
fdivr
sub
xchg
es
subl
jp
mov
fsubrs
stc
mov
adc
out
ret
daa
lcall
pop
cltd
cmc
pop
cmpsb
push
pop
pop
xchg
xchg
add
fucom
xor
jg
mov
mov
popf
orl
inc
pop
pop
jp
mov
pop
mov
mov
xchg
daa
inc
mov
repnz
jo
pop
cs
cmp
dec
dec
mov
mov
pop
jl
jp
es
adc
xor
iret
xor
bound
jns
and
fcomi
mov
xor
xchg
mov
or
cmpsb
xchg
movsb
add
mov
sbb
mov
or
pop
imull
jno
mov
ret
pop
push
mov
cmpsb
xchg
and
dec
movsl
cmp
ficoml
movsb
mov
dec
in
lock
pop
inc
repz
push
decb
rcr
adc
cmp
add
iret
adc
mov
push
dec
push
mov
mov
jmp
mov
cmp
pop
movsb
jo
jno
mov
and
mov
test
push
scas
cmpsl
push
mov
jp
ljmp
sub
lcall
test
adc
cmc
fcmovb
pop
xchg
xorb
stos
repnz
mov
fsubrs
add
lods
repz
sti
pop
ret
jecxz
mov
xor
jnp
in
test
icebp
pop
sbb
jmp
push
jl
push
fstp
call
and
xchg
fcomip
fcompp
out
sub
sub
call
call
pop
frstor
add
xlat
adc
lahf
loop
xchg
and
fildll
test
and
add
cmovle
cld
adc
xor
pop
subl
inc
loop
add
cltd
insb
and
mov
xor
pop
mov
ja
push
jmp
sbb
fimull
repz
jp
xchg
jae
fcmovb
ljmp
dec
out
mov
js
xchg
dec
xchg
bound
pusha
ja
xchg
jne
aas
fwait
pushf
mov
sahf
shrl
loopne
mov
dec
pop
outsl
mov
mov
sti
or
add
add
hlt
enter
sub
xchg
ret
data16
stos
push
or
inc
insb
leave
mov
jl
cli
hlt
test
and
stos
and
xor
xlat
inc
rcr
mov
adc
mov
cli
xchg
je
jle
scas
push
shlb
fcmovbe
lret
jl
mov
addl
aas
imul
filds
mov
jb
insb
dec
sbb
push
mov
fdivrl
jno
aad
and
ret
iret
dec
adc
pop
lret
mov
lock
movsb
ret
pop
lret
test
mov
sbb
and
pop
xor
mov
int
inc
icebp
insl
mov
xchg
push
mov
rcrb
push
mov
jbe
fimuls
gs
cwtl
mov
xor
inc
cli
xor
pop
push
cmpsb
dec
sbb
xchg
push
scas
sub
pop
push
mov
loope
adc
bound
paddw
add
divb
fbstp
scas
pop
scas
in
cmp
popa
pop
ret
in
cmpsl
mov
cmp
xor
mov
or
mov
mov
pop
push
in
sub
mov
movsb
cmpsb
in
or
mov
ret
fidivs
pop
mulb
das
mov
lahf
dec
push
mov
xor
cltd
push
sbb
jnp
or
les
dec
loope
sub
push
add
fdivl
inc
lret
leave
dec
push
and
adc
cmp
ss
fimull
xchg
dec
and
stc
jmp
outsl
inc
or
int
jl
or
out
add
mov
mov
cmp
aad
das
lods
rclb
pop
fistl
int3
cmpb
xchg
sbb
mov
cmp
pop
push
mov
sbb
pop
mov
call
scas
shrb
inc
cmp
loopne
sarl
dec
ja
sub
nop
sbb
mov
and
test
jno
mov
jne
pop
cmp
cmc
cli
loope
and
dec
ret
adc
je
jg
push
adc
mov
test
mov
cmp
mov
pop
cld
cs
shlb
push
inc
dec
mov
fidivrs
xchg
clc
mov
mov
dec
ret
js
test
fisttpl
pusha
add
testl
cltd
mov
iret
int3
dec
fisttps
iret
out
cmpb
sbb
add
test
jl
push
lods
add
or
pop
push
andb
mov
and
sti
nop
mov
xchg
inc
in
or
cltd
adc
add
fsubrp
es
xlat
or
pop
xchg
jg
mov
notb
mov
sar
adc
pop
hlt
sbb
loopne
mov
sti
add
je
xor
lods
xor
es
iret
adc
xchg
icebp
mov
sub
dec
sub
out
mov
pop
pop
cmp
add
negb
dec
dec
dec
mov
cmp
mov
dec
std
mov
adc
lea
and
mov
rorb
sarb
iret
adc
dec
cmp
ds
inc
arpl
xor
jns
popw
movsl
dec
xor
mov
inc
mov
mov
inc
fcomps
cli
in
pop
es
mov
mov
or
loop
into
pop
pop
loope
mov
stos
fcomps
shlb
arpl
push
in
repnz
aam
inc
cli
fstl
mov
cmp
inc
adc
nop
mull
lcall
mov
shlb
jp
outsb
lds
gs
fs
push
and
pop
push
mov
inc
aad
push
cmpsb
xchg
lods
popf
loope
test
or
sub
push
pop
sti
movsb
fdivp
mov
orb
jg
test
cmp
mov
movsb
psubq
lret
fwait
sub
into
pop
popf
in
adcl
negl
add
dec
mov
fldt
les
push
adc
mov
pop
ss
mov
imul
pop
lahf
mov
xchg
lock
or
into
mov
mov
or
pop
push
cmp
sub
fs
cltd
fs
out
or
lods
outsb
push
xor
dec
idiv
ja
push
rclb
mov
cmc
inc
out
push
or
inc
push
mov
or
and
jge
push
pop
stc
sbb
mov
mov
jecxz
cmc
jo
cmc
imul
std
dec
into
fimuls
subb
or
mov
mov
dec
mov
mov
mov
cmp
push
mov
loope
pop
sub
pop
imul
push
movl
je
out
stos
in
add
stos
xor
fisubl
or
out
jb
mov
lds
outsl
adc
jmp
sub
in
xadd
xor
jle
sub
xchg
sarb
dec
mov
jp
imul
ficoml
push
pop
add
pop
mov
scas
jmp
mov
or
sbb
cmpl
outsl
movsb
jge
dec
jmp
mov
or
dec
sub
lret
icebp
fwait
out
movsl
add
inc
or
lods
mov
inc
jno
sti
push
test
adc
sub
movsb
dec
or
dec
mov
jle
cmc
repz
dec
in
inc
bound
sub
xchg
and
int3
sub
cld
sub
mov
push
ficomps
and
test
int3
mov
xchg
ljmp
in
mov
ss
mov
imul
dec
pop
lcall
sub
push
gs
fst
sbb
mov
jns
lret
jmp
dec
push
xchg
pop
test
jmp
es
fisttpll
imull
fsub
je
jl
hlt
cmp
int
or
scas
addb
dec
mov
pop
dec
mov
sub
int
jmp
cmpl
jmp
loope
out
decb
pop
cmp
icebp
in
push
js
mov
scas
jno
mov
add
dec
inc
repz
ret
push
pop
sub
mov
xor
mov
cltd
out
and
in
add
pop
cmp
sub
dec
lahf
shl
mov
ss
xor
lahf
adcl
out
cmp
dec
sub
test
mov
test
subb
loop
shlb
jno,pt
out
lods
lods
fbld
ss
scas
insl
shl
dec
mov
and
or
mov
adc
dec
pop
dec
pop
xor
cmpsl
test
mov
pop
sbb
sub
mov
sbb
inc
mov
iret
movsl
dec
lods
jecxz
inc
ficompl
sbb
outsb
insl
leave
jmp
rorl
mov
mov
cltd
pop
and
daa
mov
out
push
andl
dec
mov
das
aas
inc
cli
or
out
mov
xchg
js
aaa
or
out
test
fdivp
test
dec
mov
cwtl
scas
or
jae
jl
dec
je
mov
and
push
cmc
insb
arpl
leave
fsubp
mov
xchg
cld
int
add
mov
xor
fistpl
fcmove
stos
mov
sbb
loop
and
int
les
es
push
das
test
addr16
mov
pop
lods
cmp
xor
into
sub
aas
jge
or
jmp
out
xor
aam
xchg
jbe
dec
sbb
outsl
pop
push
hlt
imul
pusha
mov
pop
scas
sbb
ljmp
mov
sub
cmpsb
fsubr
mov
mov
sub
dec
mov
movsb
mov
scas
idiv
mov
in
cli
pop
mov
icebp
pop
adc
fnop
shlb
mov
daa
lret
shrb
fisttpll
in
jl
ret
scas
add
jae
das
sti
jns
add
mov
jbe
jl
pop
test
xor
jle
push
inc
or
inc
std
mov
ds
mov
dec
jecxz
faddl
push
mov
aas
cmpsb
outsl
mov
mov
lret
cmc
decb
mov
or
push
xchg
adcl
icebp
in
mov
inc
insb
daa
jno
hlt
es
stos
push
push
jge
or
imul
adcl
mov
cmp
sub
mov
imul
sub
testl
sub
inc
fs
pop
nop
cmc
sti
jnp
mov
pop
repnz
jl
mov
mov
add
mov
sub
outsl
test
scas
scas
dec
dec
movsl
subl
and
repz
jbe
mov
jb
notb
push
mov
stc
push
xchg
dec
pop
jo
pop
sbb
jge
repz
or
lret
lods
pop
xlat
inc
sbbb
or
add
ret
push
in
fwait
jmp
es
pop
int
sbb
les
insl
push
add
lret
dec
fcomi
or
fwait
arpl
rcll
dec
sub
xchg
xlat
mov
ret
pop
sub
mov
push
cmp
lods
xor
popf
or
stc
scas
mov
add
mov
daa
pop
jmp
mov
adc
sbb
sub
inc
mov
jo
add
repnz
inc
push
jne
lea
repz
push
xchg
and
lods
pop
and
cmp
xchg
das
cs
vmwrite
inc
xchg
jmp
or
nop
jb
mov
pop
inc
jae
mov
out
mov
imul
inc
push
ljmp
adc
stos
fidivrs
ds
dec
fstpl
out
adc
push
ja
mulb
pop
aas
dec
enter
fisubrl
mov
mov
inc
sub
in
lock
test
jno
mov
cmp
xor
ret
xchg
fdivl
cmc
mov
jnp
mov
pop
dec
lahf
lea
fwait
mov
fs
inc
mov
cmp
xchg
shr
jb
std
dec
mov
push
push
and
out
bnd
xchg
pop
cli
fcmove
mov
xor
rep
jbe
insb
movsb
pmuludq
push
inc
je
loopne
scas
lret
fs
push
scas
js
mov
dec
pop
mov
pop
les
sti
cmp
cmpsb
dec
aas
nop
shlb
adc
jecxz
xor
add
notb
lcall
adc
mov
cmpsb
hlt
push
inc
loopne
mov
cmp
jl
mov
mov
inc
xchg
and
pop
xchg
add
dec
ja
or
pusha
add
and
stos
mov
jle
sub
movsl
fcoml
in
push
je
imul
outsl
subl
dec
mov
push
test
and
outsb
scas
add
cmp
scas
repnz
pop
adc
js
shll
cmp
aas
mov
sar
sub
sbb
xor
xor
jle
in
lods
pusha
faddl
xor
mov
inc
sub
stos
dec
ljmp
data16
inc
push
cld
add
lods
jnp
inc
test
add
and
inc
nop
push
fnsave
push
jo
cmp
add
ret
and
aas
cmc
pop
fwait
cmpsb
xchg
sub
xor
popa
jmp
jb
cmp
push
mov
xor
movsl
pusha
std
repz
incb
negb
xor
push
fwait
dec
iret
out
dec
decl
lods
ret
mov
cltd
mov
std
mov
fistps
in
inc
jae
dec
inc
out
ror
mov
std
ficoml
scas
dec
notb
fucom
hlt
mov
adc
adc
sub
shr
out
data16
aas
pop
cmpsl
cld
cmp
sub
movsl
fistps
pushf
fimuls
rcl
and
fdivl
mov
add
cmp
xchg
les
cmpsl
testl
jno
repnz
pop
pop
mov
add
pop
xor
inc
mov
outsw
xor
mov
pop
add
call
xchg
movsb
pushf
or
repz
sub
jmp
repz
cmpsl
popf
mov
inc
add
mov
pushf
adc
add
in
mov
fsubs
sti
loope
push
fisubs
sub
daa
mov
repz
xchg
mov
mov
xchg
stos
mov
sbb
in
mov
shrl
cmc
fimuls
clc
adc
rorb
sbbb
push
cmp
stos
es
jae
sbb
cmp
dec
cmpsb
pop
inc
pop
das
std
loop
sbb
imul
pop
pop
fisttps
ljmp
inc
rcr
loopne
fs
stc
jne
xchg
mov
loop
dec
stc
mov
push
pop
inc
dec
es
jmp
sbb
mov
dec
mov
fsub
cmp
mov
je
lret
sbb
lods
loopne
fidivrl
cmpsl
enter
xlat
addr16
imul
mov
arpl
cmpsl
ljmp
push
sub
insb
loopne
xlat
pop
daa
aam
push
call
jno
pop
shlb
and
loopne
mov
push
push
mov
jmp
fildll
push
int3
jae
rorl
test
cmpsl
enter
shlb
mov
inc
dec
mov
push
popf
sti
or
xor
and
xor
sbb
movsl
mov
mov
jno
dec
xor
sahf
iret
test
adc
lods
mov
jnp
nop
jb
jl
jmp
aad
bound
mov
dec
test
les
pop
adc
cmp
mov
cmp
mov
fwait
sub
ror
test
cmc
mov
pop
addl
call
mov
and
or
jne
sub
xchg
dec
pop
xor
and
jle
cmp
pop
dec
cli
fdiv
arpl
or
cmc
jge
sbb
sbb
sbb
insb
and
jmp
inc
in
out
fwait
push
rolb
push
ja
push
mov
add
jmp
jg
pop
pop
mov
lods
dec
imul
pop
cwtl
mov
add
fwait
or
cwtl
push
scas
push
js
ror
jnp
popf
jmp
ret
xor
add
jmp
cmp
inc
mov
fsubrs
loope
lods
push
add
call
das
push
push
out
iret
jg
pop
ret
nop
push
jnp
xchg
scas
sti
roll
dec
ffreep
jae
ret
cs
sub
ja
idivb
rolb
stos
sbb
repnz
mov
fwait
push
sti
inc
pop
test
pusha
cmpsl
and
out
aas
mov
dec
dec
rorb
push
cmp
ret
mov
adc
cmp
add
push
add
push
sub
mov
and
push
lods
jl
mov
mov
ds
mov
cmpsl
mov
pusha
push
jp
into
daa
adc
jae
xchg
jmp
ret
insb
mov
cmpsb
xlat
inc
cmp
inc
insl
mov
imul
movsb
inc
pop
lcall
ja
and
daa
je
mov
loopne
sub
stos
mov
ds
add
outsb
push
mov
lods
xchg
pop
push
xchg
jne
cmp
imul
pop
pushf
mov
imul
dec
popf
mov
dec
and
inc
es
push
lock
sub
cmp
dec
jbe
and
and
sub
test
neg
fisttps
fwait
push
fsubs
imul
mov
pushf
push
inc
pop
shlb
xor
mov
sti
jnp
mov
incb
movsl
xchg
add
adc
dec
mov
add
or
imul
pop
scas
mov
push
mov
sbb
add
movsl
and
fcomps
insb
and
push
push
fcomp
mov
testl
lock
add
ret
sub
jle
inc
sbb
mov
ss
add
inc
xor
sub
xchg
rcrb
jno
fisttpl
add
mov
fwait
and
mov
dec
or
mov
jmp
or
ret
jmp
adc
mov
mov
fidivrl
fisubs
lea
xchg
mov
adc
cmc
xchg
iret
jl
cmp
out
or
pop
xor
loope
pop
xor
inc
push
adc
enter
and
das
xchg
fistps
ja
fistl
fucomi
sti
mov
mov
dec
cwtl
mov
int3
cmp
syscall
push
mov
cmp
mov
fidivl
jecxz
cmpsb
mov
sub
mov
lds
jmp
call
push
loope
sbb
ljmp
mov
pop
stc
mov
into
hlt
adc
insb
dec
aam
and
xchg
inc
sbb
inc
pop
push
sti
cli
fs
imul
loope
and
lods
sub
ss
je
adc
sahf
jle
pop
xor
push
or
rol
out
int3
sub
stos
cmpsb
dec
jae
mov
daa
sbb
jnp
pop
je
notl
or
pop
imul
or
fwait
mov
pushf
mov
jl
jo
mov
cmc
or
stos
dec
xchg
test
mov
pop
pusha
sub
mov
xchg
aaa
adc
sbb
sbb
inc
fs
loop
push
cmp
sahf
pop
mov
mov
mov
xchg
out
jl
fsubp
mov
push
xor
cmp
cmpsl
mov
andnps
lods
sub
ljmp
es
adc
std
fidivs
mov
push
repz
dec
adc
mov
pop
stc
mov
jb
ret
pop
fcoms
aas
push
mov
jge
andb
cmpsb
or
add
out
mov
ss
lods
jg
dec
xchg
xor
test
pop
into
sub
dec
mov
dec
addr16
mov
mov
scas
divl
cmp
jge
pop
adc
jg
subl
mov
pop
mov
sbb
sub
cwtl
js
adc
dec
sub
cmp
mov
std
xchg
pop
mov
mov
sub
mov
and
pop
push
push
mov
es
pop
adc
pop
cmp
int3
into
stc
jl
iret
loopne
xchg
jno
sub
or
jl
popf
jmp
add
xor
add
jnp
shll
pushf
jle
popa
dec
cs
mov
jns
mov
push
fwait
ljmp
pop
fucomi
jbe
xchg
jg
pop
shlb
mov
imul
movl
or
and
push
int
adc
push
sbbb
pop
sub
push
bound
push
jle
jecxz
xchg
aam
mov
xchg
fs
loopne
sbb
xchg
adc
pop
jge
fs
into
cmpsb
int3
mov
mov
push
loope
adc
mov
out
daa
jl
cmpsb
out
and
loop
rcll
mov
orl
cmp
jae
orb
sbb
jge
outsb
jmp
mov
mov
sub
pop
fsubrl
jle
shll
mov
jne
lods
mov
in
push
fs
ret
and
push
test
in
pop
xor
xchg
inc
jbe
scas
xor
fstpt
insb
lods
ss
lcall
ficoms
xchg
imul
jns
jg
sub
pop
push
lods
mov
jl
roll
jmp
sub
sub
mov
out
test
jne
or
jae
aad
or
inc
jbe
sti
out
cmp
and
std
stos
mov
mov
push
lods
push
and
xor
add
test
int
test
aam
mov
sub
cmp
je
das
dec
and
mov
sbb
pusha
int3
pusha
adc
sbb
sub
jmp
test
inc
sahf
insl
jne
and
mov
ja
shlb
or
fwait
mov
mov
ret
jp
push
pop
gs
pushf
es
lahf
sbb
cs
ffree
or
mov
dec
clc
pushf
jle
aas
sub
or
mov
movsl
shlb
es
push
or
fcoms
in
and
scas
cmp
pop
and
cmpsb
scas
xor
pop
push
mov
pop
bswap
adc
test
xchg
mov
cmp
or
push
mov
adc
or
ret
cmp
add
cmp
sahf
mov
call
add
xor
ja
in
jno
nop
sarb
ret
xor
mov
mov
sub
popf
or
shl
mov
mov
jmp
xchg
mov
lahf
stos
out
cmc
scas
and
jnp
arpl
fcmovnb
cmp
out
mov
push
and
shlb
sbb
xor
push
cmp
mov
mov
aas
jno
inc
sahf
mov
popa
gs
loop
cld
push
mov
push
stc
add
jge
rcrb
jl
push
xchg
push
mov
xchg
jbe
push
mov
inc
inc
pop
add
imul
push
aad
pop
int3
leave
push
push
sub
sbb
cmpsl
xor
push
cltd
xchg
sub
clc
out
xor
mov
fucomip
outsl
jp
roll
mov
test
jno
mov
add
and
imul
test
mov
dec
jo
neg
fists
negb
dec
ret
xchg
sti
sbb
cmp
sbb
pop
add
or
movsl
add
sbb
movsb
stos
insb
aas
call
icebp
mov
or
pop
push
fiadds
jmp
cmpsl
pop
and
cmp
or
jmp
fnstenv
loope
outsb
inc
dec
ss
adc
mov
mov
dec
mov
xchg
jb
out
push
jns
dec
in
dec
dec
cmp
adc
imull
cmp
mov
mov
mov
hlt
dec
aam
inc
imul
add
movsb
rcrb
xorb
push
xchg
sub
jmp
cld
imul
xor
lods
fstps
add
sub
popf
mov
js
jl
cltd
push
mov
sbb
es
out
lcall
xchg
push
jecxz
imul
push
adc
addr16
in
outsl
lret
int3
stos
or
sbb
pop
out
lret
scas
data16
jnp
mov
inc
xlat
xor
pop
mov
push
cmp
int
adc
arpl
mov
or
mov
out
ds
pop
call
xor
loopne
in
xorl
in
push
push
mov
rcrb
rolb
movsb
mov
jnp
cs
rcll
lahf
pusha
es
adc
pop
pusha
xlat
cmpsb
das
xor
out
repz
shlb
outsl
ret
pop
jo
fiaddl
orb
stos
call
pop
sti
push
cmp
loope
mov
lcall
xor
iret
and
pop
das
mov
daa
rcrb
mov
dec
mov
sbb
sbb
push
adc
inc
pop
mov
inc
cmpb
add
push
gs
insb
ja
inc
inc
mov
mov
dec
dec
jnp
mov
cmp
xchg
cmp
aas
jle
addr16
scas
adc
mov
mov
inc
pusha
cmp
mov
hlt
call
mov
mov
jmp
xchg
fiaddl
pop
ficoml
pop
loope
into
call
mov
mov
mov
xor
loope
and
xchg
ret
test
xchg
movsb
inc
fs
movsb
push
inc
sahf
adc
dec
out
imul
push
push
mov
adc
cs
jnp
sbb
mov
jle
cmp
xor
movsl
insb
inc
ss
cmpsb
sub
adc
sub
inc
repz
mov
add
mov
cmp
or
cwtl
sub
jl
ret
jbe
xchg
ljmp
lods
or
inc
ss
enter
out
inc
sbb
mov
jb
or
in
movsl
push
aas
inc
fwait
xlat
mov
mov
imul
idivl
call
ret
mov
jns
cltd
popf
jo
loopne
iret
into
jbe
pop
gs
mov
xchg
push
out
mov
pop
repnz
mov
jns
dec
sub
pop
jge
fdivrl
mov
cmp
lods
cmpsb
xchg
loopne
sbb
out
push
jno
mov
push
pop
inc
mov
dec
hlt
pop
filds
dec
rcrl
out
mov
cmp
xor
mov
jecxz
add
add
mov
jl
inc
mov
mov
pushf
dec
ud1
mov
or
inc
and
jecxz
sbb
jge
ss
fmuls
ja
mov
mov
adc
mov
jbe
jno
cmp
mov
insb
bound
sbbb
adc
iret
xchg
adc
adc
xchg
out
jmp
fbld
dec
inc
sub
mov
pop
loopne
hlt
lods
movsb
fcmovb
subb
xchg
clc
mov
loope
pop
out
add
aam
jl
loopne
icebp
shll
mov
inc
pop
xor
sub
ja
inc
lss
push
push
mov
fistpl
fwait
mov
xor
mov
pop
mov
jle
push
lds
outsb
mov
fdivs
inc
fildl
notb
mov
mov
adc
add
or
push
rclb
int3
inc
lret
push
push
js
popa
rorl
jnp
pop
cmp
xchg
loopne
ret
jmp
adc
hlt
mov
ret
jp
pop
push
mov
push
sbb
push
gs
movsl
pop
cltd
es
in
push
shll
cwtl
xor
int
ja
push
mov
sub
and
cmpsb
lcall
sub
lret
stos
inc
pop
aad
push
cltd
xchg
xchg
es
cmp
das
lods
ss
cmpsl
loopne
nop
dec
push
or
mov
inc
lods
mov
flds
pop
adc
imul
cltd
mov
mov
mov
aam
cmp
mov
xchg
jne
lock
movsl
xchg
in
mov
mov
mov
xchg
iret
into
mov
and
jg
cmpsb
test
push
dec
push
sbb
negl
orb
out
pop
push
sub
je
sub
pop
cmpsl
xchg
pop
ficoml
push
pop
call
out
jmp
pushf
jg
sarb
jbe
mov
sbb
stos
xchg
int
ja
inc
push
xor
and
out
flds
fcmovnb
sub
iret
pop
jle
js
cmp
sub
mov
rorl
pop
sub
push
sub
mov
lea
or
xchg
out
rcrb
rcll
arpl
push
orb
dec
pop
cltd
inc
dec
test
in
lods
rorb
mov
jmp
andb
pop
cmpsl
aam
mov
jp
dec
test
push
and
arpl
ds
stos
inc
dec
fsubrl
inc
scas
mov
sub
mov
ja
mov
fstpt
xorl
mov
fdivrs
div
les
icebp
pushf
iret
repz
cli
fwait
pop
pop
jg
loopne
sbb
aaa
out
fisubrl
mov
mulb
jmp
inc
cmp
inc
push
test
movsl
ja
scas
mov
xchg
adcb
cmc
and
mov
sub
sub
mov
seto
and
sbb
push
test
lods
adc
stc
push
xor
cwtl
mov
stos
push
push
lret
and
test
dec
lcall
mov
xor
xor
cld
movsb
cmpsl
dec
jbe
fldcw
jbe
cmpsl
stos
sub
xor
cmpsl
push
in
mov
adc
iret
scas
jbe
mov
popa
and
les
adc
rcrl
xor
sub
inc
sbb
mov
lahf
push
shrb
int
scas
jb
xor
sub
lret
lcall
movsl
vpackuswb
fistl
sbb
adc
add
pushf
mov
pop
adc
clc
mov
stc
test
out
mov
fldenv
shr
xchg
dec
cmp
lods
fidivl
add
inc
ljmp
xchg
push
sub
jae
jl
sub
ljmp
outsl
sar
sahf
cltd
xchg
jns
sti
shlb
rcrl
divb
call
test
popl
xlat
sti
sarb
mov
push
mov
push
not
nop
adc
ja
and
and
inc
push
imul
out
adc
and
mov
pop
fidivrs
rcll
sbb
pop
mov
shrl
andl
in
xchg
pushf
aaa
sbb
cmpsb
mov
mov
mov
jmp
cmp
mov
in
test
addr16
jp
cwtl
imul
mov
lahf
dec
pop
inc
dec
mov
xorb
sbb
push
inc
es
push
push
es
jno
testb
cld
add
mov
incb
xchg
pop
dec
aaa
int3
aas
push
cld
xchg
lods
mov
lcall
cmp
add
mov
lret
ljmp
jo
repz
int
sahf
mov
out
fiadds
fs
cld
cmc
xchg
out
cmp
mov
mov
mov
aam
dec
cmp
iret
out
out
inc
movsb
in
mov
xlat
mov
aas
lock
or
and
xor
jmp
mov
cmc
outsl
lods
lcall
sbb
sti
push
dec
cmp
or
xchg
iret
arpl
push
mov
cs
pop
push
leave
fisubrl
shll
and
xor
ja
enter
jo
dec
mov
sbb
push
xchg
push
sbbl
push
add
lret
shrb
cmp
jg
mov
add
dec
inc
push
push
ja
and
stos
xchg
fs
iret
stc
fcom
lds
cmpsb
sahf
jb
cmp
in
mov
filds
jg
cmpsb
stos
fcmovb
dec
or
adc
inc
pop
pop
mov
pop
in
adc
dec
fcoms
jne
sti
mov
add
jae
aam
orb
fistl
in
call
popf
mov
push
mov
jae
fidivl
subb
mov
loope
sbb
lds
jb
aad
fisubl
movsb
rclb
add
or
push
test
add
jg
or
pop
cli
int
or
jno
int3
mov
push
rcl
fwait
scas
call
movsb
ficoml
notl
les
dec
push
jnp
jmp
inc
pop
dec
mov
pop
insb
out
inc
adc
ret
mov
movsl
mov
xor
sbbl
dec
jl
sub
mov
es
pop
dec
inc
popa
das
in
add
and
ret
aad
nop
xlat
es
mov
mov
repz
dec
jae
sti
or
inc
data16
mov
jecxz
dec
mov
imul
scas
adc
mov
push
ja
int3
bound
stos
lret
mov
in
nop
adc
insb
test
add
lret
hlt
hlt
inc
aad
mov
out
jmp
add
lods
push
mov
push
outsb
pushf
or
mov
xchg
sti
fdivp
lcall
cltd
loop
leave
jge
cwtl
lods
lods
cmc
mov
sbb
pop
enter
mov
mov
sbbb
xor
in
xlat
out
and
mov
cmpsl
rorb
test
cltd
mov
cmpsl
inc
fldcw
mov
shrl
mov
mov
jb
add
xchg
test
push
cmp
ja
std
out
sbb
jb
cmp
out
pop
inc
mov
stos
pop
test
sbb
mov
push
pop
fwait
mov
dec
push
sbb
mov
mov
jno
das
jg
jecxz
lods
icebp
push
mov
clts
sbb
ja
xor
ss
outsl
sbb
push
mov
imul
push
xchg
sbb
ds
cmc
cmp
sbb
mov
cmpsb
xor
adcl
sbb
mov
xor
dec
ret
mov
xchg
in
clc
jno
mov
adc
push
xor
add
test
push
mov
sub
mov
push
adc
fnstenv
scas
or
jae
xor
mov
adc
pop
scas
lods
je
sub
sbb
mov
sub
fwait
push
inc
sub
lahf
fnstsw
shll
sbb
sbb
mov
jg
mov
and
popa
sahf
sbb
mov
imul
mov
inc
jnp
jbe
dec
mov
jne
mulb
xor
jns
clc
push
out
pop
lods
sbb
jns
adcb
mov
jnp
sbb
xlat
lret
pop
cmc
xchg
cltd
cmp
test
cli
cmp
sub
sbb
ret
shl
testl
inc
push
inc
clc
cmpsb
aas
in
xchg
jnp
dec
push
mov
adcb
and
sbb
jl
addl
add
cmp
push
test
pop
arpl
sahf
stos
inc
les
cltd
stc
or
jmp
ret
dec
dec
arpl
jns
push
sbb
fsubl
mov
jecxz
dec
xor
lcall
pop
jl
sbb
sbb
leave
lods
or
cmp
pop
popa
lods
pop
mov
inc
inc
jl
mov
stos
in
fcoms
push
bound
sub
mov
jl
pushl
pop
imul
std
addr16
pop
dec
and
cli
aam
shlb
mov
jl
out
subb
lods
adc
sbb
dec
clc
jno
add
jae
adc
push
or
mov
mov
pop
movsl
jo
loop
sub
jae
pmullw
les
rcr
fstpt
sbb
mov
sub
add
or
mov
repnz
cmpsb
dec
and
dec
sti
jb
mov
dec
xchg
lods
aas
inc
inc
subb
cmp
imul
das
cmpsb
push
cs
push
add
rolb
scas
or
cmpsb
jg
addr16
and
clc
pop
popa
mov
lret
cmp
stos
clc
dec
mov
int3
or
mov
ja
fisttpl
into
xchg
pop
pushf
jns
fnstcw
cld
rcrb
mov
mov
cmp
pop
testl
xchg
add
add
rclb
clc
or
jl
and
dec
sub
sbb
popa
or
rorb
in
shl
push
in
and
jmp
js
lods
fisubrs
mov
xchg
mov
aad
mov
xchg
mov
enter
dec
lahf
aam
mov
cs
outsb
jg
out
mov
aam
iret
lods
jg
push
test
xchg
sbb
mov
mov
jecxz
add
dec
fwait
jbe
out
lock
imul
jne
mov
pop
repnz
scas
fstps
cwtl
cmp
pop
push
mov
sub
pop
rorl
cli
cmpsl
inc
or
add
test
mov
int
shl
push
xor
cwtl
lahf
imul
cld
pusha
mov
mov
xchg
jbe
dec
js
test
aaa
adc
scas
test
lds
sar
ret
pop
sub
mov
dec
fstps
mov
js
jmp
out
sbb
jg
dec
ds
scas
sahf
lods
ja
mov
out
out
sub
xor
in
lods
adc
out
stos
dec
xchg
movsl
iret
gs
and
inc
push
call
mov
out
dec
mov
mov
or
bound
mov
mov
xchg
jb
sbb
xchg
or
cmp
xchg
movl
lods
enter
mov
fstps
fs
pop
inc
add
testb
test
call
push
fsubs
and
jge
push
ja
pushf
fcoml
jne
mov
add
fs
icebp
xor
or
in
movsb
fnstcw
dec
cmp
xchg
mov
inc
hlt
sub
mov
jge
mov
or
sbb
addr16
popa
xchg
sti
les
imul
lods
scas
repz
cmp
loope
dec
mov
mov
out
movsb
decb
cwtl
sahf
inc
stos
cmc
dec
repz
cltd
ss
lods
in
cmp
pop
cmc
adc
iret
and
shrl
pusha
mov
sarb
xor
push
icebp
and
insl
mov
and
or
mov
bound
fsubl
loop
jg
or
add
out
fwait
cwtd
das
clc
ljmp
jns
mov
repz
jmp
ret
aad
lahf
jns
notl
repnz
push
pushl
enter
movsl
les
or
sub
jno
push
push
jl
mov
adc
outsl
push
cltd
icebp
xchg
pusha
xor
jnp
jg
outsb
testb
daa
inc
or
adc
inc
scas
add
adc
bnd
xchg
std
mov
mov
pop
push
cltd
push
adc
out
ja
testl
out
cmp
hlt
xchg
test
jns
mov
push
push
inc
xchg
sbb
mov
test
out
jmp
dec
sbb
mov
sar
stos
cmp
test
ffree
mov
mov
lea
sti
inc
sub
jg
add
das
mov
and
cld
xorl
into
xor
imul
leave
loop
xor
pop
sahf
and
adc
pop
stc
das
cmp
xchg
test
enter
out
or
cmc
insl
inc
mov
sbb
add
fcmovne
sahf
mov
or
mov
push
mov
stc
loopne
mov
scas
out
dec
imul
in
mov
dec
sbb
mov
or
lods
push
jmp
sub
clc
xor
add
popa
mov
dec
nop
jl
sub
and
mov
dec
jl
inc
int3
sub
mov
rdpmc
mov
inc
pop
mov
xchg
imul
jmp
sub
mov
jp
mov
or
lds
shl
xor
jp
nop
jle
lcall
mov
inc
inc
shlb
pop
xor
cmp
stc
adc
scas
das
inc
js
clc
mov
sbb
js
sub
dec
movsl
jo
movsb
jmp
fisubrl
pusha
mov
cli
cltd
repz
out
mov
ffreep
ljmp
ljmp
mov
push
jo
cmp
mov
insb
inc
dec
jnp
movsb
inc
lret
rorl
xchg
pop
fsub
das
js
add
and
cltd
add
inc
inc
cmp
nop
stos
es
jne
add
xchg
fdiv
mov
je
push
and
mov
sub
jl
push
dec
aaa
lods
sub
shr
and
mov
push
jmp
sbb
sub
pop
dec
mov
push
dec
rorb
cmpb
cmpsl
sbbb
pop
dec
mov
push
pop
mov
cmp
or
sarl
jg
or
sbb
popa
pop
push
out
adc
push
sub
fnstenv
jno
ja
pop
je
cltd
mov
push
jns
cmpsb
cmp
sbb
and
aam
jno
sbbb
loope,pn
sbb
push
pusha
cmpsl
outsb
and
in
movsl
call
lods
inc
into
daa
repnz
mov
push
mov
jno
dec
ror
adc
lcall
and
fildl
scas
cwtl
mov
jo
mov
addl
iret
cmc
xchg
mov
sahf
loopne
mov
fimuls
mov
pop
add
mov
jge
mov
lret
lcall
xchg
mov
insl
mov
in
mov
add
lods
sub
outsl
lods
cmpsb
arpl
cmp
insb
cmp
into
lock
mov
mov
inc
or
inc
imul
mov
leave
mov
fnstenv
out
sub
aad
mov
subl
cmp
popf
fcompl
push
mov
mov
cwtl
aad
int
cli
das
loopne
add
xchg
dec
mov
jno
jle
aaa
pop
mov
jecxz
icebp
int3
add
cmp
sub
adc
test
ret
xlat
jno
add
insb
adc
in
jb
and
add
pop
outsl
aaa
es
das
push
mov
mov
in
add
bound
and
dec
dec
cmc
cmpsl
gs
cld
sub
loopne
fistps
mov
jmp
push
jns
sub
sahf
lahf
or
pusha
in
jg
mov
test
mov
fstpl
jns
fcompl
mov
mov
mov
jo
lcall
mov
jo
xor
mov
adcb
jno
ljmp
push
mov
pop
lock
das
jg
adc
aaa
sub
push
stc
mov
dec
mov
call
inc
inc
dec
orb
push
mov
pushf
pop
data16
es
xor
fwait
adc
out
fs
es
and
and
mov
cmp
arpl
and
in
inc
popa
call
cmp
cwtl
lahf
dec
or
cmc
mov
adc
jnp
jp
push
ficompl
jnp
adc
inc
fistpl
cmp
sub
dec
lahf
lods
fisubrs
sbb
push
adc
cmc
and
add
push
or
mov
mov
cwtl
mov
or
daa
push
ret
popf
xlat
rcrl
lods
jne
mov
sti
push
dec
mov
lods
movsb
ror
jl
pushf
sub
dec
jnp
test
lods
sub
jecxz
test
sub
rclb
in
mov
mov
jecxz
mov
cmp
adc
sbb
mov
dec
xor
inc
cmp
pop
jl
bound
mov
mov
int
sub
mov
cmc
ja
pop
outsl
mov
lods
pop
test
pop
incb
dec
push
push
push
fnstenv
mov
xchg
out
mov
jne
lods
sbb
in
xchg
fidivrs
stos
and
sbb
dec
repz
pop
push
cmp
xor
inc
inc
jno
pop
mov
dec
fucomip
jns
add
sub
aas
push
or
scas
mov
insl
fcmovne
mov
cltd
movsl
aam
add
mov
pop
sub
push
ss
fimull
fcomps
mov
adc
dec
cmp
insb
or
shrb
sbb
popf
das
std
mov
push
push
pop
fld
mov
dec
or
dec
inc
inc
sbb
dec
roll
mov
rcll
mov
cmp
pop
dec
test
mov
add
sti
push
hlt
or
mov
xchg
inc
cs
mov
mov
popf
dec
clc
mov
cmpsl
jnp
ds
int
and
iret
xor
add
push
lea
jle
push
movsl
pop
fidivl
shrl
push
insb
sbbb
mov
clc
xor
cltd
out
cmp
nop
xor
cmp
pusha
ja
movsl
cwtl
sub
xchg
xchg
cmp
inc
add
lret
jle
pop
test
mov
xor
mov
shrb
cmpsl
fwait
rcrb
mov
adc
ss
js
mov
pmaxub
test
xchg
std
push
fimuls
es
mov
mov
testl
cmovo
jle
mov
stos
call
cltd
fisttps
mov
dec
push
pop
or
rorl
out
fimuls
repnz
fmuls
mov
mov
loope
rorb
rol
movsl
mov
mov
std
pusha
cmpsb
mov
jg
sbb
pop
ss
arpl
add
mov
lea
popf
flds
aas
push
jl
cld
clc
jae
out
popf
push
mov
aam
push
fs
cmpsb
jl
ret
jmp
lods
cmpsb
int
sub
jae
int
cltd
mov
fnstcw
jae
mov
aaa
lret
ljmp
sbb
jl
mov
sti
pop
inc
ror
fidivl
in
dec
mov
and
jg
sbbb
add
pusha
mov
insb
mov
fists
rcl
inc
test
xor
push
test
and
test
add
fs
out
aaa
push
mov
icebp
cmp
mov
mov
and
das
mov
sbb
add
mov
dec
lcall
lock
iret
jmp
adc
out
sbb
push
std
mov
ficoms
loopne
sub
das
adc
add
mov
push
mov
ret
out
and
lret
stos
inc
mov
sbb
inc
pop
mov
imul
pop
and
pop
dec
add
sbb
sub
jp
xor
xchg
mov
neg
push
insl
fcmovbe
mov
add
mov
mov
push
inc
xchg
inc
pop
out
xchg
dec
dec
fwait
xor
mov
cmc
sbb
outsl
cli
inc
imul
pop
stc
addr16
mov
sub
cmp
sub
fwait
xlat
sbb
scas
pop
fidivl
dec
inc
shl
cmp
maskmovq
testl
insl
repnz
mov
sbb
sub
sahf
das
cmp
icebp
mov
lock
lahf
mov
test
fcmove
lret
out
mov
sub
cmp
popa
add
dec
outsb
lock
pop
inc
jae
sub
out
add
call
fdivl
xchg
xor
push
lcall
lea
mov
sub
cld
pop
sub
sub
mov
out
jle
dec
repz
push
pop
xor
xchg
repnz
sbb
sbb
inc
flds
cmp
cmp
push
movsb
push
jnp
xchg
sbb
pop
add
pop
cmp
cmp
or
or
pop
sbb
xchg
sbb
jmp
and
fcoml
push
dec
mov
aam
aam
fimull
loopne
sbb
in
shrl
outsl
test
add
adc
icebp
ja
pop
pop
mov
mov
and
out
xchg
ror
mov
fwait
es
cwtl
jge
lock
cmp
sub
in
or
das
mov
cmp
push
adc
andb
das
add
test
insb
sub
xchg
scas
xchg
mov
jo
inc
xor
mov
add
test
cwtl
inc
aaa
add
add
jmp
std
out
fisttps
mov
xchg
inc
imulb
xchg
mov
and
outsl
jecxz
push
std
lahf
cltd
xchg
repz
or
and
adc
adc
popf
mov
mov
dec
mov
fwait
xlat
pop
dec
scas
jbe
enter
cmp
out
mov
jl
mov
push
inc
stc
xchg
mov
sbb
out
jae
mov
aaa
testl
pusha
push
imul
lret
inc
adc
jl
ret
frstor
mov
xchg
push
sub
adc
shl
jne
lods
jge
sbb
dec
movsl
scas
aad
lahf
enter
sbbl
cs
dec
andb
stc
sbb
dec
xor
scas
je
cmpsb
sub
jmp
mov
pop
inc
xchg
mov
pushf
and
dec
jo
in
sbb
xor
jmp
xchg
pop
hlt
out
jnp
cltd
sub
not
push
mov
cltd
jge
test
and
adcb
pop
jl
push
sti
mov
test
rorb
mov
nop
adcl
insb
in
dec
dec
sbb
shlb
mov
push
js
ds
ret
fisttpl
sbb
sbb
mov
adc
and
fwait
push
fxch
popa
std
fidivrl
cmpsb
cld
jno
inc
mov
roll
inc
pop
orb
xlat
fs
rolb
clc
sar
xor
dec
mov
test
les
xchg
cmp
pushf
addl
xchg
stc
pop
daa
dec
jl
aas
pop
sub
mov
daa
mov
jl
cmp
add
subl
nop
push
jmp
cltd
push
adc
xor
sbb
fdivl
scas
push
aas
sub
orb
mov
inc
lods
mov
fstpt
aad
cmc
push
add
fisubl
outsb
mov
cmp
aad
inc
nop
cwtl
jle
cmp
in
jae
fwait
and
mov
pop
lods
mov
adc
gs
sbb
mov
lret
insl
imul
test
xor
out
scas
ss
hlt
pop
stos
add
pop
jp
das
pop
cmc
fs
mov
out
mov
in
mov
imul
fcmove
dec
fildl
mov
cmpl
les
fs
xchg
sahf
mov
int3
loopne
push
cs
push
add
pop
insl
add
jg
scas
lock
repz
push
sbb
sub
rcl
sub
jno
push
imul
inc
jo
inc
adc
dec
pop
cmp
sti
mov
pop
test
cmp
movsb
mov
sti
sub
or
loopne
sbb
inc
push
lcall
loope
sub
cld
cld
add
mov
add
dec
out
in
mov
stos
jl
mov
adc
fsubrl
movsl
dec
mov
mov
sub
dec
cmpsb
lret
nop
adc
mov
jecxz
imul
sub
add
fnstenv
inc
pushf
das
js
pop
or
cs
out
out
iret
sti
jmp
bound
pop
movsl
pop
inc
add
or
mov
lcall
adc
icebp
jge
sub
xchg
mov
dec
pop
jne
inc
xchg
jg
or
mov
ret
add
int
movsb
push
pop
xor
repnz
out
mov
xor
insl
int
cmp
in
mov
stos
pop
add
and
xchg
pop
repz
mov
inc
hlt
push
rolb
dec
pop
cmp
inc
inc
es
pop
stc
pop
jbe
mov
add
shl
and
sbb
test
cmp
mov
or
int3
jl
orb
or
push
jl
push
mov
imul
pop
sub
int3
das
mov
xlat
pusha
cltd
cmp
dec
addr16
sbb
push
imulb
mov
addr16
adcl
jb
push
xchg
fnstenv
or
mov
int3
in
mov
adc
stos
push
mov
scas
jle
loope
cmovbe
xor
push
std
aam
fisttpl
or
mov
mov
or
mov
sbb
enter
xlat
test
or
add
outsl
jg
insb
sub
push
inc
mov
push
dec
iret
ss
cmp
int3
out
or
jmp
mov
shll
popa
imul
pop
mov
mov
add
fisubs
adc
adc
push
sbb
xlat
cmp
mov
fsts
inc
out
mov
cmp
jne
hlt
push
jne
mov
test
and
shll
xor
fnsave
and
sub
add
cmpsb
dec
es
cmp
dec
mov
xchg
aas
cmc
pop
inc
cs
add
mov
jg
fisubl
lds
xchg
repz
jb
cmp
cmpsl
test
jae
push
mov
imul
pop
and
jno
and
or
mov
inc
and
psllq
cmp
xor
test
dec
pop
repnz
insl
jbe
cmp
add
stos
cli
fisubl
js
pop
mov
rorl
adc
push
hlt
pop
sub
jle
fsub
jmp
test
fs
neg
jg
addb
sbb
sbb
xchg
popf
std
shl
mov
daa
xor
or
xchg
sub
scas
in
hlt
sbb
mov
ja
fwait
inc
inc
inc
mov
or
aam
into
popa
shrl
lods
mov
push
scas
shll
push
sbb
mov
or
or
adc
fwait
cmpsl
cmpsb
add
int3
ja
pop
sub
sub
inc
sbb
arpl
mov
cwtl
xor
mov
movsl
dec
pop
xchg
data16
sbb
das
les
sub
in
popa
imul
or
cld
mov
push
sub
cmc
test
mov
or
pop
sub
and
and
fsubl
jno
int
dec
roll
push
clc
pop
mov
or
or
lods
mov
xor
cmp
out
push
adc
or
mov
loopne
test
sbb
insb
jmp
xchg
adc
adc
pop
dec
adc
fs
fwait
test
stc
cs
mov
pusha
fisttpll
imul
movsb
mov
iret
ljmp
inc
and
gs
shll
push
sti
dec
imul
and
es
cmovo
popf
mov
lcall
and
dec
xor
sahf
orl
jl
cmp
push
testl
loop
push
mov
fldz
pop
mov
jns
jle
mov
xor
lret
cmp
inc
jnp
and
jno
addb
fisubrl
outsb
hlt
cmp
shl
fisubl
push
mov
mov
xchg
rcrb
test
lret
cmc
xor
fimull
imul
stos
data16
fidivs
popf
add
mov
pop
stos
loope
sti
xor
fimull
mov
imul
fs
pop
aad
dec
xchg
mov
and
mov
pushf
xor
or
mov
sub
out
jg
dec
cwtl
scas
scas
mov
dec
test
mov
in
movsl
fwait
adc
in
dec
bound
pop
movsb
pop
jb
lret
adc
in
push
test
push
xor
arpl
ljmp
imul
adc
das
lods
lods
pushf
dec
mov
fnstenv
pop
xchg
insb
pop
mov
mov
dec
rcrl
iret
inc
adc
adc
sbb
or
xchg
jg
mov
jbe
aam
fidivl
inc
dec
xchg
mov
outsl
stos
jae
push
push
jbe
fcompl
test
push
scas
mov
test
jno
inc
movsb
mov
leave
in
xor
jbe
pop
push
enter
push
das
mov
adc
into
out
xadd
dec
xchg
sbb
add
lret
shrl
cmpsb
dec
insb
ret
mov
or
xchg
xchg
xchg
mov
popf
dec
mov
je
ljmp
mov
ret
mov
lahf
cmc
jb
loopne
pop
dec
or
ret
dec
sti
dec
mov
cmp
out
dec
and
or
fwait
and
and
push
pop
cltd
cmpsb
shll
sarl
movsl
jnp
pusha
in
call
popf
outsb
daa
ss
stc
mov
jg
in
xor
sbb
iret
fadds
cmp
push
mov
mov
out
push
jle
mov
dec
sbb
jg
fidivrl
dec
cmp
lahf
pop
mov
add
mov
inc
test
inc
cmp
or
sbb
fcomps
xchg
xchg
popf
hlt
mov
pop
sbb
mov
push
mov
pusha
adc
xchg
jecxz
rol
mov
test
jb
push
pop
enter
out
pusha
push
lea
xchg
leave
pop
cmp
pop
stos
jecxz
jecxz
mov
arpl
rep
ficompl
cld
xchg
es
jle
pop
fs
push
xlat
subb
nop
mov
into
push
mov
pop
lea
shr
adc
xor
mov
and
ja
pop
mov
in
lods
js
pop
cmp
jl
mov
and
cli
imul
adc
mov
push
jmp
out
nop
mov
mov
and
test
xchg
mov
sbb
pop
into
sub
roll
insl
mov
sbb
movsb
sub
push
lret
stc
lds
or
mov
in
sbb
aad
fidivrl
push
sbb
cmp
pop
pop
add
mov
shlb
cmp
pop
dec
jne
inc
dec
jmp
leave
loope
test
call
xchg
sbb
enter
lahf
das
sarl
in
cmp
add
pop
push
repnz
jbe
fstpl
aam
jns
adc
fimull
mov
cmp
mul
popa
sti
pushf
addr16
mov
mov
inc
sbb
mov
add
nop
test
jno
pop
mov
sub
jb
sahf
pusha
test
int3
xchg
or
nopl
add
adc
hlt
mov
mov
cmpsb
dec
mov
mov
test
jg
jnp
push
xchg
jp
pop
pop
gs
mov
lods
push
jno
iret
pop
xchg
adc
decb
mov
lahf
mov
jb
or
adc
fistpll
dec
push
lock
inc
mov
adc
jp
ds
jb
hlt
push
pop
icebp
inc
das
add
sbb
fnstcw
xchg
pop
mov
jp
std
mov
cs
out
nop
sbb
adc
inc
mov
jne
jl
pop
sar
sub
jns
test
push
pushf
dec
outsl
pushf
jmp
cltd
xlat
add
mov
out
inc
roll
fsubp
sbb
aam
and
cmp
xchg
inc
and
es
scas
mov
mov
sbb
adc
sar
adc
test
int
in
inc
mov
mov
and
xchg
sbb
lret
stos
mov
mov
loopne
pop
fs
and
call
mov
or
and
test
std
adc
loop
data16
mov
aaa
lretw
and
les
inc
mov
push
pop
cld
ss
rorb
push
imul
test
ret
push
aam
mov
dec
in
lcall
cmc
js
loop
sbb
sbb
fs
mov
add
cs
pop
ljmp
dec
sbb
loope
push
into
mov
ret
mov
sarb
mov
and
cs
je
mov
dec
incb
pop
push
iret
cmp
nop
mov
stc
dec
out
loope
dec
push
out
dec
adc
sbb
dec
addr16
xor
cmp
stos
in
jmp
inc
dec
cs
mov
cmpsl
mov
jnp
add
sub
mov
mov
add
loop
lret
arpl
out
adc
push
das
mov
mov
add
mov
scas
jg
jp
pushf
andl
pop
rcrb
repnz
outsb
mov
and
cld
loope
jmp
and
mov
ljmp
jg
mov
repz
mov
idiv
inc
mov
adc
lahf
sbb
fnstenv
xchg
sub
cmp
xchg
mov
ret
arpl
fsubrs
mov
mov
cltd
cmp
mov
mov
mov
add
sti
negl
adc
aam
pop
ja
shrl
jecxz
pusha
test
xchg
push
fwait
mov
and
dec
adc
jmp
adc
jns
push
movsb
lods
pop
mov
out
ljmp
pusha
std
jl
iret
stos
jmp
sbb
dec
mov
pop
mov
adc
imul
ja
ret
or
jl
dec
push
add
xchg
test
stos
xor
pop
das
test
cmpsb
das
push
pop
mov
mov
push
nop
cmpxchg
sbb
inc
pop
inc
push
adc
mov
mov
inc
je
loope
movsb
inc
xlat
push
mov
mov
ret
fwait
sub
pop
or
cs
mull
shr
pop
inc
inc
sbb
mov
mov
lea
pop
lret
ds
add
or
push
mov
rorl
add
repnz
mov
sbb
add
test
dec
fwait
insb
gs
jmp
stos
mov
xlat
fdiv
in
mov
rcl
cmpsl
xor
cld
mov
imul
das
mov
mov
out
push
enter
pop
inc
jbe
sub
ss
out
addr16
xchg
cmp
sbb
rol
pushl
add
jbe
jo
push
jge
push
fmull
pop
xor
fldenv
add
ja
dec
mov
addb
lcall
xlat
outsl
pop
sbb
int3
xchg
std
jae
cmp
xor
mov
jbe
mov
xor
scas
ficompl
inc
fisttpl
xchg
movsl
das
add
and
iret
fyl2x
push
sbb
inc
test
jmp
mov
xor
dec
or
out
jmp
pop
ret
repz
out
mov
add
sbb
shll
outsb
loope
mov
xchg
sbb
lret
xor
cltd
movsb
sahf
or
ficompl
mov
push
mov
insb
cli
cmp
wrmsr
in
jge
jmp
sbb
mov
xchg
leave
or
or
mov
add
jbe
cs
cmp
arpl
shlb
ljmp
xor
mov
sub
or
jmp
cmp
pop
jae
or
mov
mov
aad
imul
sbb
cmpsl
adc
mov
mov
ss
jno
dec
add
aad
ja
sub
pusha
push
sarl
shlb
mov
xchg
ret
cltd
adc
out
and
repz
dec
jae
jg
add
shl
and
jp
xchg
roll
mov
sti
jno
push
clc
xor
inc
ja,pt
cmp
ret
add
push
push
ja
adc
ficoml
rolb
mov
cmp
lcall
cltd
inc
push
pushf
test
push
mov
push
arpl
push
and
insl
inc
mov
imul
xlat
repz
or
pop
insl
aas
fwait
push
mov
xchg
push
scas
int3
add
push
pusha
dec
scas
lods
mov
pop
push
cwtl
cmpsl
movsb
ficompl
dec
shlb
int
fimull
cmp
jl
push
movsb
jb
addr16
or
sahf
cld
nop
push
sti
mov
inc
lret
cmpsl
pushf
rcll
mov
repnz
fstpt
into
inc
push
scas
xor
pusha
mov
cmp
xorb
xchg
rorb
frstor
mov
push
imul
lods
int3
out
mov
out
pop
fimuls
imul
mov
xchg
fwait
adc
pop
inc
push
in
orl
pop
pop
xor
push
xchg
into
mov
add
mov
stos
je
jge
sub
loopne
push
daa
pop
xor
call
push
dec
dec
mov
repz
pop
push
out
pop
sub
sbb
pop
cmp
cld
sbb
mov
stc
or
pusha
lcall
insb
out
add
jno
sub
arpl
cmp
shll
notb
or
sbb
in
or
mov
pop
movl
pop
inc
mov
cmp
mov
push
aas
jp
mov
repz
xsha1
cmpsb
lret
outsb
cmp
pop
or
loopne
jl
pop
gs
fcoms
ljmp
ret
clc
cld
push
dec
dec
mov
hlt
mov
xor
push
push
jns
cwtl
pusha
dec
mov
dec
mov
cmpb
clc
or
inc
test
sbb
sub
push
outsb
pause
inc
repnz
imul
clc
loopne
ss
mov
call
xchg
pop
imul
mov
outsl
jo
jno
lock
ficoml
adc
and
icebp
mov
ss
add
add
lcall
test
xorb
mov
dec
cmp
mov
sbb
cmpsb
fs
xor
adcl
mov
pop
shlb
cmp
nop
fdiv
sahf
fisttpll
dec
arpl
ja
movsl
roll
xchg
adc
or
ds
sbb
jae
subb
out
aas
sbb
sub
push
test
mov
cmp
mov
push
scas
bound
cmpl
cmpb
int
and
cmc
xlat
aam
xchg
loop
insl
shr
inc
rclb
scas
xchg
cmp
hlt
lahf
mov
leave
movsb
cmp
mov
push
mov
mov
cmc
enter
xor
add
and
js
or
arpl
dec
and
pushf
repz
jg
sbb
sti
or
lret
pop
cmp
sbb
sub
addr16
mov
mov
stos
nop
sub
mov
push
aaa
mov
xchg
mov
push
adc
lahf
xchg
test
std
dec
or
xor
sub
sbb
push
mov
xchg
mov
add
adc
outsl
mov
loope
mov
outsl
mov
mov
lret
mov
stos
sbbl
fwait
fwait
sti
sbb
dec
and
or
mov
xchg
push
adc
aam
call
in
adc
sub
add
fnstcw
orl
test
sub
adc
sbb
jae
outsb
int
mov
aas
xchg
cmpsl
or
fmul
neg
sbb
in
pop
dec
mov
icebp
loopne
xchg
lea
sbb
call
fwait
mov
test
cltd
mov
xchg
mov
daa
int3
jnp
faddl
sti
fiaddl
rol
int3
inc
jp
stos
sub
repz
inc
cmpsl
push
repz
dec
inc
mov
nop
pop
imull
fs
pop
adc
lea
movsb
lea
jg
mov
cmp
and
mov
outsb
aas
les
inc
repz
dec
fs
cmp
ss
repz
roll
adc
dec
pop
or
mov
fsub
xchg
in
pop
or
mov
cmp
pusha
fwait
loop
push
mov
mov
imul
add
pusha
mov
jmp
rol
jno
pandn
icebp
inc
scas
push
mov
xor
lods
cltd
test
pusha
mov
mov
ss
fwait
dec
cmp
dec
jno
lods
dec
je
inc
scas
shll
pmaddwd
mov
popf
repz
cltd
xchg
jle
jo
mov
movsb
icebp
lods
fistpl
mov
or
lea
mov
dec
push
jg
or
insb
cmpl
rcr
fstpt
sbb
jb
cmp
pop
iret
test
es
cmpsb
cwtl
sbb
imul
outsb
pop
ret
imul
jno
mov
sbb
jae
sahf
fistl
testb
pop
mov
movsb
mov
sbb
lock
push
adc
lds
lods
dec
add
aas
fisttpl
sub
or
cmp
ja
arpl
cld
orb
push
cmp
sti
adc
stc
dec
xchg
xchg
jne
lock
dec
mov
arpl
inc
inc
jae
or
jp
jle
push
addl
cmpsw
pop
push
iret
mov
lret
mov
in
icebp
pusha
mov
and
push
scas
fisubrl
mov
imul
mov
dec
ret
or
xor
jl
mov
testb
push
fistpll
gs
jge
jg
sub
adc
mov
popf
insl
mov
and
loopne
cmpsb
sbb
add
inc
nop
add
jecxz
int3
fstpl
push
jg
les
sahf
and
fistps
jnp
inc
std
lret
inc
add
push
push
mov
stc
stos
hlt
int3
jmp
mov
dec
xchg
mov
iret
in
pop
lods
rcll
mov
mov
mov
es
mov
push
clc
icebp
faddl
fildl
and
les
cmp
arpl
mov
sbb
jno
dec
lods
mov
inc
hlt
xchg
xchg
cmp
jnp
movl
icebp
xlat
pop
mov
sub
mov
and
cmp
je
fistpl
jbe
or
push
adc
and
jb
rcll
insb
test
enter
pop
sub
mov
nop
lods
stos
enter
not
mov
arpl
ret
scas
mov
jo
hlt
repz
cmc
mov
dec
adc
mov
xor
frstor
cmp
dec
mov
or
lret
pop
dec
sub
inc
ficoml
jae
adc
jnp
lcall
mov
xlat
push
xor
pop
lods
lret
and
sub
dec
adc
add
pop
sbb
adc
lahf
sub
pop
sbb
in
lret
movl
push
push
lret
push
gs
repnz
push
aas
aam
inc
testl
mov
xor
mov
add
pushf
inc
loop
call
sar
dec
and
mov
fistpl
xchg
or
mov
movsb
mov
repz
mov
leave
mov
adc
arpl
lret
dec
xchg
and
loopne
movsl
les
jno
pop
jae
dec
mov
iret
adcb
movsl
mov
inc
mov
arpl
mulb
push
add
mov
cmp
dec
push
and
fwait
dec
movsb
ja
outsl
jo
outsl
or
sti
inc
pusha
jns
jl
mov
ljmp
std
rclb
nop
test
cld
push
pop
sbb
fcmovbe
fisttpl
push
pop
sbb
dec
imul
mov
and
xor
xchg
push
movsb
pop
sarb
push
and
hlt
daa
stc
ret
ret
cmc
scas
push
jne
hlt
jle
lret
pop
cmp
and
cmp
add
adc
pop
mov
lods
adc
fs
fisttpl
pop
and
sbb
test
dec
pop
subl
adc
into
dec
sbb
add
fucom
and
lret
xor
and
ss
lret
out
push
movsb
cmpsb
ret
lahf
lods
das
fnsave
jo
es
mov
imul
inc
mov
fisubl
int3
mov
and
push
lods
fdivs
mull
divb
out
shrb
dec
pop
cli
test
and
and
sarb
lods
clc
jb
pop
xchg
sub
dec
fistl
mov
push
cmc
dec
scas
jo
insb
or
sub
ja
pop
xchg
inc
cwtl
stos
push
mov
inc
flds
bound
inc
sub
imul
push
scas
adc
sub
push
dec
ja
rclb
push
and
sub
jae
jge
mov
dec
testl
loopne
xor
fcmove
sub
jmp
sub
lahf
jg
in
cmp
aas
mov
es
js
bound
out
mov
sti
inc
std
repz
in
or
jmp
push
ljmp
je
scas
adcb
dec
jmp
call
push
xor
push
push
jns
test
push
shll
testb
pop
pushf
lret
mov
loopne
loope
inc
jnp
pop
insb
ds
subb
jns
aas
pop
push
xor
popa
mov
pusha
testl
and
imull
es
add
mov
jnp
int3
mov
mov
xor
imul
out
icebp
addb
andb
fidivrl
dec
icebp
and
dec
sub
add
adc
inc
ficompl
push
inc
add
push
xor
jmp
sub
lret
jnp
jle
sub
sar
pop
je
shll
lods
call
inc
sub
sub
ss
ret
movsl
xchg
popf
sub
movsb
and
mov
inc
jno
mulb
mov
or
adc
push
or
cmp
sbb
jae
ja
jb
movsb
xor
pop
lea
dec
xchg
mov
movsl
rorb
test
repz
pushf
push
inc
in
sbb
mov
iret
dec
add
stos
fsubs
clc
test
test
fisubrs
xor
sub
push
xchg
ret
sti
mov
and
rorb
sbbl
sarl
jo
pushf
cmp
int3
mov
push
lock
mov
mov
mov
mov
sub
cmp
cltd
lahf
int
mov
outsb
cmpsb
pop
arpl
push
adc
movsb
scas
xor
adc
outsl
inc
je
mov
or
mov
push
jbe
cmp
imull
ret
jg
mov
mov
movsl
dec
int
push
inc
aas
mov
orb
dec
jg
xor
loop
jg
push
loop
clc
jl
addr16
push
jmp
gs
sti
in
push
dec
pop
in
lods
adc
sbb
and
orb
cmp
xchg
inc
int
push
in
insb
push
mov
and
aaa
pop
sarb
rcr
add
fdivs
lahf
pop
out
cmp
xchg
or
into
push
xor
add
rorb
std
or
movsl
jg
pop
cmp
push
cmpsw
and
sub
mov
and
aas
fwait
xchg
xchg
jb
sbb
testl
dec
push
mov
test
adc
into
push
xor
rclb
lods
or
mov
sbb
mov
ret
gs
sbb
adc
xor
dec
int
and
mov
sub
les
js
mov
jb
icebp
inc
movsl
imul
sub
xchg
cmp
adc
daa
stos
lods
dec
mov
cmpsb
push
push
add
jno
es
dec
loopne
mov
or
mov
pop
insb
divl
mov
cmp
gs
ja
jle
mov
sbb
shrb
lret
fnstsw
cwtl
xchg
pushf
mov
add
repz
xlat
dec
iret
fistl
mov
or
pop
out
aaa
fsqrt
fdivl
int
aam
mov
cmp
xchg
dec
nop
fucomi
inc
mov
sub
sub
add
add
mov
adc
cld
insb
mov
mov
jmp
sbbb
pop
sti
adc
cmp
xor
stc
pop
pop
jnp
out
push
cmp
divb
xchg
cmc
ljmp
andb
pop
push
adc
scas
sub
loopne
out
aam
mov
repnz
push
out
lret
add
int3
inc
fs
pop
jmp
push
repz
in
test
inc
push
icebp
xor
cmpsl
sbb
inc
push
push
movsl
cwtl
icebp
mov
pop
mov
hlt
or
sub
lcall
into
mov
sbbl
rolb
jno
or
call
dec
jo
xchg
push
sub
pop
icebp
mov
sti
loopne
mov
cs
mov
mov
xor
into
fwait
mov
mov
push
sbb
mov
adc
out
mov
fucom
ficomps
rorl
push
sub
push
stc
push
mov
pop
mov
mov
lods
out
rorl
ljmp
notb
push
push
sub
xchg
adc
ret
adc
cmp
dec
sbb
inc
sbb
shl
mov
dec
and
or
fwait
mov
jne
xor
das
clc
push
in
add
add
test
into
jle
aas
in
or
cmp
stos
ljmp
testb
and
arpl
inc
test
rolb
outsb
roll
outsl
dec
mov
mov
inc
sbb
pop
sti
xor
dec
adc
sbb
jl
rcrb
popf
sbb
aad
in
pop
xchg
xor
pop
fistl
xchg
jb
pop
dec
idiv
shrl
int3
jns
mov
lret
cmpsb
dec
stos
inc
mov
mov
xchg
sub
sub
pop
gs
push
cs
pushf
ljmp
test
mov
cli
cmc
inc
aam
lock
cmp
pop
popf
je
movsb
movsl
hlt
pop
xchg
sahf
nop
out
lods
cmp
sub
mov
mov
sbb
push
aam
inc
es
fistps
push
in
mov
imul
scas
jno
fistps
push
cmp
fdivl
fwait
mov
sub
cmp
adc
pusha
data16
pop
test
xor
push
and
sbb
movsl
insb
mov
lds
xor
xchg
cmpsb
outsl
movsw
fsubrp
sub
cmp
addr16
add
pop
aam
inc
push
cmp
jns
jo
pusha
leave
divb
andb
mov
mov
cwtl
andb
mov
dec
test
pop
jne
and
cltd
xlat
imul
mov
mov
mov
cmp
inc
imul
aad
and
mov
addl
popf
pop
movsb
das
mov
cwtl
fucom
inc
cmpsb
jne
mov
fwait
mov
mov
mov
inc
bound
fldt
fildl
lods
insb
mov
cmp
mov
ret
les
jp
cwtl
mov
ret
push
dec
je
xor
sbb
das
push
cs
test
out
ret
add
dec
mov
movsl
mov
add
pop
cmc
push
leave
inc
or
jg
addr16
mov
pop
repnz
fcmove
xchg
inc
fwait
pushf
fmull
inc
subb
mov
sbb
into
cwtl
mov
mov
push
data16
scas
iret
sbb
mov
loope
ficoml
inc
cwtl
scas
or
add
les
in
out
jmp
stc
shl
adc
mov
scas
mov
pop
iret
add
mov
lds
roll
mov
xor
fisubrl
jp
xor
in
cmp
push
sub
out
inc
inc
mov
mov
shlb
jl
ljmp
mov
cmpsb
sti
push
mov
popa
fsubp
notb
dec
jl
lret
jb
test
ljmp
jle
mov
inc
cmpsb
mov
mov
cltd
js
push
fiadds
xchg
stos
or
pop
add
in
sti
add
xchg
xlat
ja
pop
xchg
jne
sbb
pop
sub
out
lret
roll
and
mov
fcomi
cmpsl
test
hlt
mov
dec
mov
and
and
ret
jo
sub
fwait
mov
push
xchg
sub
daa
out
push
in
lahf
and
std
mov
xchg
sub
and
je
sub
push
sbb
insb
fistpll
mov
subl
ret
adc
mov
xchg
icebp
ret
add
call
rcll
xor
lret
fwait
push
mov
add
sub
jo
in
push
or
dec
adc
jbe
ja
out
jl
push
cwtl
test
adc
dec
mov
clc
std
ficompl
jecxz
xor
aam
divl
mov
push
outsb
aam
dec
addr16
addr16
addr16
je
stc
mov
sti
es
in
int
fcmovnu
dec
xor
sbb
pop
sub
fldl
pop
fnsave
add
push
stos
mov
mov
push
cs
scas
dec
lahf
pop
cmpsb
imulb
cmc
jecxz
fwait
mov
outsb
pop
out
shll
cmp
mov
mov
femms
movsb
inc
pusha
insb
es
or
pushf
stos
cli
repnz
pushf
jb
jmp
xchg
lret
inc
sub
mov
test
add
popf
mov
addr16
aad
add
push
scas
push
mov
jmp
add
test
sbb
les
and
push
mov
rorl
test
fs
mov
and
mov
mov
fwait
out
pop
jae
jmp
cmpsb
aad
and
pop
add
ss
sahf
pop
xchg
mov
movsl
jnp
out
jno
lods
in
dec
jae
and
inc
cltd
dec
inc
cmp
lret
push
sub
mov
jae
leave
jg
cmp
mov
test
jmp
stos
lods
outsb
jnp
mov
mov
dec
mov
push
inc
mov
mov
push
aas
aas
inc
sbb
inc
in
mov
out
notb
jecxz
push
cmp
rcrl
jnp
pop
adc
add
sub
push
imul
sbb
out
inc
dec
mov
lods
js
sti
cmp
imul
mov
in
pop
mov
movsl
aam
jecxz
push
adc
arpl
orb
mov
int3
jl
insb
ret
mov
push
loopne
dec
cmpsb
les
fldl
push
jns,pn
stc
pop
inc
and
inc
mov
jae
jno
rol
mov
insb
push
add
jae
or
insl
jg
inc
push
jno
lods
test
shll
push
add
arpl
ret
out
xor
movsl
hlt
loope
jno
arpl
push
dec
xchg
jmp
andb
xor
in
xchg
aam
sbb
inc
or
push
push
call
mov
repz
pusha
add
jmp
add
push
scas
mulps
push
dec
add
xchg
push
dec
std
ds
cmpsl
push
stc
jb
cmp
stos
mov
icebp
stos
inc
mov
rcrb
jle
sti
dec
inc
cmp
mov
push
cmpsb
or
fwait
push
arpl
pop
daa
insb
xchg
scas
adc
decl
lock
mov
cmovnp
mov
xor
repz
fcmovu
or
addl
inc
mov
lret
mov
inc
imul
fcmovbe
aam
aas
test
inc
daa
cs
jecxz
fmull
mov
fwait
and
or
lds
add
fs
dec
outsb
aad
xchg
clc
push
enter
or
sti
or
imul
xlat
inc
es
gs
repz
push
adc
pop
sbb
pop
or
das
pop
sub
push
nopl
push
adc
insb
aam
sbb
adc
fwait
mov
sti
mov
lods
mov
paddsw
rorl
js
dec
mov
mov
mov
cwtl
sbb
pop
sub
mov
dec
lods
cmc
clc
and
fbld
mov
mov
inc
nop
inc
pop
xchg
push
js
rcrb
or
xchg
xlat
or
jbe
mov
xor
sub
dec
icebp
mov
push
shr
data16
push
mov
xor
inc
pop
mov
mov
cmpsl
iret
loope
stc
sub
lret
xchg
xchg
dec
test
sbb
shrl
int3
dec
mov
imul
xchg
movsl
push
rcrl
mov
lahf
cmpb
mov
cmpl
add
mov
mov
dec
aaa
mov
cs
dec
mov
mov
jmp
lcall
out
inc
sub
xchg
pop
outsb
cmpsl
adc
lds
jo
sub
imul
mov
movsb
push
fimuls
and
stos
loopne
jnp
add
jnp
mov
test
pop
lahf
sub
adc
mov
out
xchg
fstpt
int3
adc
sbb
dec
mov
cld
in
nop
adc
dec
movsb
clc
jecxz
sti
jns
orl
pop
push
push
ljmp
xor
and
pop
mov
inc
ss
mov
fldt
xchg
lds
mov
cwtl
cmp
push
pusha
jnp
dec
jge
mov
scas
push
lret
mov
cwtl
xlat
push
fstpl
fldenv
jno
lahf
dec
mov
pop
mov
inc
fwait
sbb
in
cld
ja
out
dec
sub
xchg
iret
jns
mov
sub
arpl
je
ja
movsb
xchg
or
fstpt
data16
mov
out
xchg
call
add
out
push
pop
subl
mov
inc
aad
mov
out
dec
cmp
out
sbb
ljmp
xchg
lret
jg
add
clc
ja
sub
pop
call
and
outsl
fwait
jl
cltd
scas
mov
xor
pavgb
test
sub
cmp
lds
xchg
push
push
dec
xor
lret
pop
add
mov
sti
cmpsl
cmp
fsubrl
cmc
jl
xchg
cs
inc
negl
sub
shll
stos
cmp
cmpsb
jge
cmp
adc
jg
sub
pop
cltd
movsb
test
lods
and
cmpsb
je
xor
ret
mov
and
fistl
push
xchg
or
enter
xchg
cmp
jg
xor
int
cwtl
cmpsb
jge
cmpsb
aaa
adc
test
xchg
cwtl
out
add
dec
sbb
fadd
int
jo
adc
sub
bnd
dec
jno
es
clc
adcl
fiadds
mov
mov
push
stos
xchg
jnp
jge
mov
jno
into
xchg
pop
stos
stc
lods
out
jns
int
lcall
xor
jb
mov
jae
sub
mov
mov
imul
jb
addr16
test
inc
add
lret
sub
mov
pop
push
mov
add
stos
push
aaa
stos
push
data16
imul
stc
cmc
add
add
addr16
or
jg
jo
es
dec
mov
shll
stos
into
pop
dec
mov
xchg
sbb
cmp
and
cmpsb
pop
or
xchg
mov
and
cmp
popf
loopne
aad
mov
shll
jmp
aam
add
in
icebp
stos
adc
inc
pop
outsb
xor
push
mov
inc
dec
jnp
jbe
adc
mov
out
cmp
cld
add
pop
stc
sub
addr16
jl
dec
mov
aas
arpl
adc
sbb
jmp
sub
or
add
push
dec
fnsave
jp
and
test
push
jg
cmp
mov
xor
pusha
aas
mov
ret
adc
jae
jns
inc
jmp
pop
cld
pushf
popa
test
sbb
loop
add
dec
lock
mov
frstor
nop
mov
cmp
orb
dec
mov
pop
dec
fcomps
and
dec
aaa
cld
xlat
or
mov
fstl
sbb
push
mov
pop
lods
mov
test
xchg
adc
sub
cltd
mov
cmp
lea
cld
mov
testl
adc
fcomi
cwtl
sub
nop
fbstp
dec
inc
push
cmpsl
hlt
and
shrl
lods
repz
mov
clc
cmp
cmpsl
mov
decb
push
dec
cs
ds
movsl
adc
in
add
out
pop
pop
xchg
dec
push
mov
adc
imul
cmp
insl
cli
sub
push
mov
imul
push
rcrl
push
pop
je
pop
cmp
fs
loope
fisubrl
jmp
pop
addr16
and
add
mov
stos
ret
cli
mov
arpl
imul
sti
lea
sub
nop
mov
pop
faddl
loope
test
movsb
mov
loope
je
or
test
cltd
mov
mov
data16
xchg
imul
lods
lods
data16
fisttpll
data16
inc
or
jge
inc
pop
mov
or
fdivrl
and
stc
loopne
pusha
cmpsb
mov
lcall
arpl
mov
mov
mov
clc
in
test
jg
fwait
shlb
cs
jne
movsb
cld
push
outsb
sbb
daa
push
fisubrs
jecxz
adc
pop
or
cmc
pushl
or
rol
inc
mov
lea
in
inc
dec
pop
or
xchg
pusha
push
xor
mov
mov
push
add
jmp
jl
jb
inc
pop
mov
sub
sub
in
sbb
fisttpl
in
jbe
jmp
test
enter
cmp
sub
dec
loopne
mov
fwait
rorl
lret
push
mov
xor
push
dec
xor
mov
outsb
out
mov
int3
mov
in
push
mov
lods
in
pop
jecxz
push
cmp
js
cwtl
cltd
jnp
jge
loope
les
fidivrl
loope
enter
pushf
out
and
into
lahf
fcompl
fcom
fimuls
adc
jae
push
dec
test
mov
aaa
lahf
inc
adc
mov
pop
aad
pop
cltd
lahf
fs
cmp
mov
insb
lea
push
in
adc
adcb
lret
in
mov
cmp
mov
xchg
add
movshdup
stos
retw
inc
xchg
sub
fdivs
push
sbb
xchg
lods
cmp
dec
xchg
fwait
and
ja
jmp
add
ret
lods
jmp
jg
xor
out
adc
scas
xchg
cmp
fwait
mov
mov
pop
jno
pop
dec
cli
rcll
test
dec
adc
jmp
mov
cltd
push
push
pusha
rol
mov
iret
jne
shlb
sti
mov
jp
stc
test
mov
outsl
dec
int3
or
or
out
adc
imul
push
sub
shr
les
adc
ss
cs
push
sti
jo
cmpsb
shlb
bound
fldl
pushf
jecxz
jno
cli
lds
and
push
lds
adc
sub
into
std
cmc
mov
push
mov
add
push
out
mov
push
call
add
mov
xchg
adc
mov
movsb
das
mov
mov
mov
fisttps
jb
xor
clc
or
push
cmp
sarb
mov
dec
test
loopne
push
test
scas
push
or
push
cmp
mov
std
ficompl
xlat
sahf
test
jno
gs
cmpsl
insl
lea
fdivs
xorl
inc
mov
mov
sub
sbb
fs
jae
loopne
pop
xchg
mov
jns
and
mull
xchg
cmp
push
fwait
adc
nop
inc
xlat
test
stc
in
dec
add
in
jnp
xchg
push
shll
push
das
inc
ds
sub
repnz
subb
and
rcll
inc
mov
and
sbb
add
sub
fwait
push
or
rcrb
adc
push
les
std
inc
cmp
fcompl
xlat
sti
mov
iret
jl
xlat
cmc
sub
rolb
test
sbb
cld
jo
and
es
leave
arpl
scas
cltd
push
cmp
mov
iret
dec
mov
outsb
pop
sub
jecxz
out
lods
push
fadds
aam
inc
pop
inc
mov
mov
mov
and
push
mov
sub
mov
in
lret
jg
pusha
scas
fs
test
mov
loop
pop
mov
pop
call
adc
xchg
sub
scas
insb
mov
std
add
repnz
lcall
cmpb
sarl
or
push
sbb
sti
mov
jecxz
or
stos
push
push
mov
ljmp
cld
dec
push
scas
mov
lcall
inc
into
jnp
mov
cld
pop
mov
mov
lods
sarb
inc
lret
inc
cmp
pop
in
dec
std
int3
negb
inc
dec
pop
adc
shll
aam
int3
push
pop
imul
imul
fmuls
aad
loope
je
pop
ja
out
inc
sbb
sbb
mov
lahf
jge
sbb
jg
cmp
and
add
iret
add
xchg
xchg
cmc
or
mov
mov
adc
mov
dec
stc
jle
adc
inc
mov
and
adc
xchg
sti
mov
jge
push
inc
daa
test
cmpsl
xchg
push
fstpt
or
inc
pop
xchg
out
xor
cmpsl
sbb
mov
jnp
movsb
andb
arpl
test
mov
mov
roll
mov
pop
cmpsb
pop
jge
testl
mov
stc
mov
xchg
idivl
cmpsl
cld
dec
push
sarb
pop
or
xor
sub
faddl
into
in
dec
sahf
xchg
lods
stc
mull
inc
test
or
dec
frstor
and
sbb
jne
mov
imulb
sbb
sbb
nop
mov
jae
mov
adc
xchg
lods
xor
pop
push
mov
jno
add
push
mov
ss
lahf
out
outsb
jg
xchg
ja
sti
outsl
sbb
adc
lret
sbb
loopne,pn
mov
pop
mov
nopl
fldcw
pop
or
push
pop
and
mov
pop
and
push
negl
pop
mov
mov
xchg
scas
iret
jnp
dec
mov
stc
and
inc
lock
arpl
xor
lret
imul
push
and
fidivrl
push
sbb
cmc
adc
out
add
pop
mov
sub
int3
movsb
mov
fldt
xchg
push
fwait
sub
pop
jns
out
frstor
lret
jp
sahf
lods
cmp
dec
shrl
iret
gs
sti
or
fnstsw
sahf
mov
int
mov
nop
jl
mov
test
hlt
pop
js
mov
pop
xchg
std
or
subb
mov
outsb
pop
push
sbb
mov
mov
cld
dec
data16
add
fadd
jae
xchg
xchg
mov
or
sarl
icebp
push
or
insl
out
jno
adc
jnp
fs
aas
xor
int3
imul
push
mov
andl
ja
or
pop
push
es
push
jg
jl
xchg
addr16
pushf
inc
cli
and
int
mov
into
roll
es
rcll
or
in
xor
jb
inc
into
dec
popf
push
sbb
adc
sti
add
lahf
jns
dec
iret
movsb
out
add
sub
sub
ficoml
mov
xlat
icebp
ss
push
imul
push
xor
aam
xor
popl
je
push
push
cmp
xor
ja
mov
inc
fildll
or
pop
dec
outsb
int3
mov
xchg
rcr
sub
cld
xchg
sbb
aad
hlt
mov
mov
push
mov
movsl
popf
jbe
sbb
mov
cmp
mov
mov
pop
xchg
sub
pop
mov
sub
xlat
adc
das
je
scas
in
imul
mov
add
flds
test
adc
flds
push
mov
mov
aam
movsl
out
lahf
push
fwait
out
stc
mov
addl
sahf
add
or
enter
push
adc
mov
es
xchg
hlt
push
adc
ret
jb
push
or
add
hlt
jle
rcrb
rcrl
cmc
outsl
xchg
rcl
pop
adc
out
loope
and
adc
ja
inc
adc
arpl
mov
push
xchg
incl
push
orb
pop
imul
push
pop
in
out
or
dec
jno
xor
pop
sbb
push
inc
fidivl
test
sub
loope
pop
jmp
cmp
adc
dec
mov
les
xchg
sub
ds
imul
xor
jg
add
aas
mov
out
inc
adc
scas
xor
mov
rol
xor
cmp
rcrl
cmp
jle
and
mov
add
jns
repz
add
cmpsl
rcrl
mov
mov
push
outsb
fwait
jg
lahf
mov
scas
test
inc
iret
sar
mov
das
mov
xor
pop
push
inc
jbe
mov
sub
bound
clc
leave
shll
dec
dec
jns
fisubs
dec
cs
jmp
jae
xorb
mov
les
int
jmp
mov
shl
cmpsb
and
hlt
push
pop
jmp
lds
mov
inc
fs
dec
or
mov
xor
xchg
dec
add
shl
push
movsb
arpl
nop
sti
cmp
call
cmc
jmp
sub
pop
mov
jl
std
bound
sbb
lods
sar
nop
sbb
mov
sub
iret
pop
inc
jl
add
xor
sbb
mov
repnz
insb
jmp
inc
in
stos
pop
mov
push
in
in
adc
xchg
mov
inc
jnp
add
in
mov
insb
movsb
push
jmp
pop
lret
fwait
and
cmp
mov
gs
cwtl
inc
pop
cmp
test
adc
mov
fwait
adcl
cmc
repnz
imul
push
in
aas
mov
ret
dec
dec
xor
and
or
xchg
sub
push
xchg
mov
inc
push
fdivr
mov
push
sti
and
ret
hlt
inc
add
xchg
clc
loope
mov
and
mov
push
insl
out
sti
dec
fs
mov
int
outsb
movsb
stos
pop
lahf
and
cmpsl
test
ficomps
sbb
fidivl
cmp
jae
mov
mov
outsb
push
add
cmp
or
out
lret
out
dec
aad
test
cs
daa
ds
addl
rcll
mov
lahf
stc
loop
pop
pop
push
add
es
sub
jmp
pop
mov
incl
jnp
stos
cltd
sbb
add
jnp
mov
repz
and
stc
mov
push
and
sbb
mov
xor
mov
movsb
sbb
mov
in
and
das
int
push
dec
cmpsl
adcb
adc
xchg
dec
addb
cmp
ss
xchg
mov
or
jl
aas
frstor
mov
xor
fs
mov
push
inc
fisubs
iret
and
jns
cmp
lods
iret
push
int3
mov
stos
mov
les
mov
push
icebp
decl
es
fbld
add
inc
push
mov
dec
es
pop
shr
lods
call
dec
test
or
add
jbe
push
lea
push
jo
cmc
sbb
jmp
rcll
or
rcl
addr16
push
insb
enter
and
xchg
shr
cwtl
jle
rorb
cli
lret
arpl
into
out
inc
arpl
aam
es
das
notb
cmp
inc
mov
xor
divb
or
inc
mov
fcoml
outsl
out
pop
xor
cmp
fs
xchg
jg
and
fidivrs
jns
fimuls
test
xchg
mov
mov
add
frstor
dec
fcmovnb
xor
sub
jbe
xor
mov
in
xor
mov
and
jnp
pop
ljmp
sub
adc
xor
ficompl
xchg
mov
dec
xor
rorb
fdiv
pop
testb
nop
fwait
in
jmp
ffree
fwait
or
adc
aaa
and
negl
aaa
faddl
aad
jbe
inc
adc
out
or
ud0
test
push
xchg
daa
xchg
clc
mov
rcll
mov
sub
add
mov
and
pop
xchg
scas
test
mov
sub
adc
sahf
int3
mov
lahf
ss
stc
movsl
call
and
and
stc
or
pop
adc
mov
push
inc
dec
ja
pusha
add
mov
sbb
sbb
mov
test
out
repnz
jbe
adc
mov
dec
mov
cmp
adc
sbb
lods
out
pop
fistps
jbe
fnstcw
cwtl
and
roll
pop
out
cltd
pop
jo
gs
cwtl
ret
lds
iret
mov
gs
addb
dec
int
repz
cmp
add
int3
leave
push
test
lods
test
cmpb
rolb
pushf
in
imul
aaa
mov
std
push
push
daa
les
sarl
loopne
mov
bnd
push
stos
lea
fs
sahf
mov
int3
xchg
stc
mov
bound
mov
push
fimull
mov
adc
add
adc
adc
mov
pop
fwait
mov
cltd
repnz
ss
push
or
sub
push
and
adc
clc
pop
jnp
das
popf
lods
or
mov
xor
adcb
int3
into
dec
stc
imul
pop
scas
fisubrl
out
and
inc
push
mov
pop
mov
dec
xlat
sbb
fs
mov
jg
out
xchg
cmp
movsb
push
iret
jns
fcoml
ret
cmp
cs
mov
inc
sub
mov
cld
or
add
jmp
lods
ss
cmp
sub
cmpsl
cltd
cmpsb
pop
rcll
jg
scas
cmp
add
dec
imul
push
push
push
test
addr16
pusha
nop
push
call
mov
in
fcmovne
jle
mov
mov
add
xchg
inc
mov
ja
fdivrl
repz
cwtl
pop
or
ljmp
fwait
scas
dec
cli
mov
mov
repz
leave
ret
fcompl
test
mov
push
pop
aam
mov
lods
out
mov
jb
mov
aad
lahf
loope
lds
pop
mov
mov
sub
or
pop
icebp
mov
stos
dec
movsl
das
outsb
sbb
mov
cs
popa
add
mov
addr16
jl
ljmp
push
mov
mov
ret
scas
sarl
fsubrl
dec
sbb
mov
or
inc
das
ror
pusha
js
xchg
in
xchg
push
dec
andl
jg
jge
or
mov
in
test
xchg
mov
test
sub
sbb
dec
or
mov
xchg
pop
repnz
fstpt
nop
shlb
addr16
sbb
jp
mov
int
mov
inc
inc
scas
mov
fadds
shlb
push
jp
mov
xor
push
mov
imul
jb
jae
add
adc
dec
in
pop
add
fstps
das
pop
and
pusha
sarl
mov
xchg
pusha
xor
lods
orb
cmp
incl
pop
mov
addr16
jno
jbe
imul
mov
incb
mov
ljmp
outsl
lods
sbb
adc
inc
mov
ficoms
rcrb
cli
repz
cltd
cmp
test
jae
fwait
sbb
add
inc
pop
mov
retw
pushf
ja
xchg
nop
ror
sti
xchg
cmp
mov
mov
shrl
aas
jbe
mov
jge
movsb
pop
int3
sub
inc
out
inc
je
enter
mov
mov
dec
mov
mov
and
pop
outsl
sub
call
rclb
dec
jmp
repz
jo
push
sbb
add
fsts
or
mov
dec
sub
mov
adc
mov
in
subb
jno
adc
push
roll
loope
pop
scas
mov
out
or
lcall
addb
fldenv
mov
fwait
push
push
mov
mov
repnz
cmp
push
clc
pop
int
in
pop
int
pusha
andl
mov
jecxz
xchg
mov
scas
push
inc
mov
ret
cmp
pop
dec
sar
int
inc
jbe
dec
pop
jbe
mov
mov
jbe
push
xchg
inc
shl
mov
add
mov
lret
hlt
mov
fstl
pop
mov
inc
xchg
rcrb
in
lcall
loop
cmpsb
pusha
aam
sub
cltd
dec
pushf
outsb
not
movsb
mov
mov
cltd
mov
dec
fwait
mov
je
pop
push
sub
xchg
dec
ljmp
ret
xchg
pop
loop
push
ja
push
jnp
cmp
xchg
mov
xor
ret
pop
inc
xor
pop
mov
rorl
push
mov
movd
jo
sub
iret
test
in
cmc
mov
or
imull
inc
and
dec
clc
scas
outsl
pusha
and
pushf
sbb
addr16
xor
out
cmp
loope
jp
cltd
scas
icebp
hlt
pusha
inc
inc
push
sbb
pop
xchg
test
cld
pop
fisubl
pop
push
add
and
cmp
das
mov
mov
fimull
push
mov
jp
orb
xchg
push
cltd
stos
xor
mov
sub
mov
jle
and
data16
jb
xchg
inc
mov
dec
dec
shl
rclb
aas
and
mov
bound
dec
xchg
imul
push
int3
sub
and
inc
mov
and
nop
fs
cmp
std
aad
push
cmpl
pop
add
fstpl
or
fwait
mov
out
es
inc
jnp
orb
jmp
movsl
jnp
mov
or
dec
sbb
fsubr
in
cmp
mov
adc
xchg
jne
mov
push
fsubrl
int3
pop
jmp
aaa
pop
mov
mov
sub
add
scas
shl
push
adc
inc
jae
adc
pop
sbb
leave
out
or
jno
mov
mov
lret
cmpsb
sub
ljmp
aam
xorb
add
xor
dec
add
mov
ret
scas
mov
pop
int3
leave
jmp
andl
in
adc
in
mov
imul
pop
fisttpl
jp
icebp
lods
js
mov
mov
stc
popa
add
pop
aam
or
push
clc
test
daa
jo
mov
jg
sub
mov
mov
aad
lods
jg
gs
mov
dec
jbe
das
out
dec
and
cmp
inc
inc
mov
repnz
movsb
and
loope
dec
lea
out
xchg
and
jmp
sub
jbe
and
mov
jno
adc
sub
repz
stos
xchg
leave
and
pop
bound
dec
scas
xchg
les
loope
rorb
lret
ja
sbb
mov
ss
jae
xchg
leave
into
pop
subl
add
test
or
daa
add
jb
cmp
inc
addl
xchg
cmpl
add
test
test
mov
loope
bound
jne
pop
stc
inc
cwtl
stos
add
inc
mov
mov
cmp
hlt
je
nop
add
stos
jnp
adc
push
call
ffreep
jmp
inc
jmp
fs
lods
std
pushf
divl
andl
cmp
cmp
iret
setg
mov
sub
mov
popa
ret
mov
and
iret
mov
cmp
dec
mov
ds
data16
dec
xor
push
jg
adc
clc
loopne
sbb
cmp
lahf
cmp
stos
or
in
add
divl
fmull
push
lret
sti
xchg
sbb
dec
in
or
rcrl
cs
lret
or
push
fs
imul
add
mov
repnz
jae
stos
shlb
fidivl
fmuls
repz
or
pop
outsl
movsb
push
and
ds
pop
sub
lods
repnz
pop
jmp
jg
sbb
adc
ret
mov
loope
ss
or
adc
dec
sub
repz
lret
adc
dec
mov
jl
sub
xchg
pushf
out
test
cmp
push
cmpb
jp
aam
inc
sbb
push
push
lret
add
sbb
jne
or
sub
dec
sti
lcall
push
xchg
cmc
xchg
std
adcb
out
cs
mov
sahf
test
cld
pop
mov
hlt
jg
jg
pop
sbb
or
cmp
sbb
inc
cld
xchg
jno
sub
fnsave
and
test
pusha
jnp
loope
mov
and
fildl
pop
aad
xchg
inc
xor
pop
sbb
mov
imul
ret
shrb
sub
dec
cltd
sub
mov
es
dec
mov
or
dec
aas
jns
push
sti
adc
push
cmpsl
mov
mov
and
adc
inc
jno
pop
lods
or
ret
cmpsb
push
lods
fwait
xor
fdivrs
sbb
ja
out
xor
mov
pushf
fdivrs
lods
sub
pop
rcrl
add
pop
movsb
xchg
cmp
mov
mov
xchg
fsts
imul
push
fwait
inc
sub
std
hlt
mov
add
mov
inc
dec
inc
andl
fidivrl
fs
aaa
cmp
iret
jmp
push
and
mov
in
jl
movsl
pusha
add
push
add
inc
stos
fisttps
ret
push
jle
xor
sbb
insl
rcrb
fwait
mov
es
je
jnp
add
cmp
stos
das
shlb
inc
xor
sbb
mov
add
push
ss
lret
xchg
jbe
cmp
fsubs
inc
or
or
stos
cmpb
add
mov
inc
stos
mov
mov
daa
cmp
cmp
in
cmp
ficoml
insl
mov
jl
cmc
and
dec
mov
or
arpl
mov
lods
sbb
in
cld
js
ffree
sti
mov
add
jae
les
out
pop
mov
xor
loope
mov
cli
xorb
dec
dec
aas
jmp
xchg
jg
push
imul
cmp
call
mov
xchg
mov
pop
sbb
or
cld
push
rorl
adc
push
mov
or
xor
cmp
jge
and
lcall
lcall
pop
add
dec
dec
add
adc
stc
add
xchg
stos
mov
dec
and
jg
hlt
push
shlb
jne
ret
mov
pop
dec
and
test
lods
inc
jg
sub
inc
fwait
roll
shlb
dec
stc
cltd
arpl
jbe
jge
into
jp
stos
and
rorb
in
push
and
mov
mov
test
xchg
jecxz
mov
adc
cmp
loop
or
loopne
cmp
int
dec
mov
lret
cmp
icebp
xchg
pushf
in
cmpsb
jns
mov
inc
jmp
inc
pop
outsl
and
imul
mov
call
ucomiss
out
pop
sar
xor
std
divb
adcb
sbb
xchg
out
jmp
inc
popf
push
movsb
xchg
pop
jmp
jb
pushf
movsbl
mov
add
cmp
sti
test
jno
cmp
mov
jle
push
cld
pop
push
mov
aas
mov
inc
mov
int3
inc
push
xchg
imul
jae
inc
jns
cmpsb
jbe
outsl
pop
fistl
lea
out
jae
nop
mov
loope
fidivrl
adc
jns
lods
inc
psubw
mov
mov
out
xchg
bound
frstor
and
js
into
int3
shlb
sub
pop
xchg
or
popa
mov
cmc
add
movsb
ret
testb
mov
dec
xchg
fwait
cltd
xchg
ss
dec
dec
orb
push
add
pop
pop
iret
test
xor
enter
jb
add
out
pop
mov
cltd
sub
xor
outsl
mov
test
insb
cld
test
ss
jle
dec
and
aam
mov
ficompl
adc
inc
pop
adc
mov
fsts
jl
sti
adc
mov
mov
enter
push
xorb
into
movsl
fildl
mov
xor
mov
xor
jge
jmp
bt
mov
movsb
mov
pop
loopne
aaa
cmp
shrb
dec
in
leave
lds
jno
pop
xor
pop
in
sub
ljmp
imul
fmull
test
xor
mov
cltd
std
cmp
call
xor
xchg
lods
pushf
mov
xchg
dec
out
jo
xor
movsl
orb
jge
lret
sub
icebp
insb
lret
cmp
sbb
inc
sub
sahf
lret
mov
add
std
sbb
dec
mov
pop
scas
pop
push
inc
mov
lods
push
adcl
xchg
cwtl
inc
sub
pop
jns
lcall
jbe
in
push
fadd
sbb
sbb
sbb
ja
mov
addb
cmp
cmp
into
jl
and
push
jmp
sbb
cmovg
sbb
or
out
test
pop
rorb
pop
outsb
xor
test
fstl
out
int
int3
dec
mov
lods
jle
jle
ja
rcl
outsb
ret
inc
xor
mov
xor
jmp
leave
pop
shl
inc
push
pop
pop
xchg
and
lods
add
pop
xchg
sbb
mov
mov
and
jbe
iret
addr16
ja
push
fdivr
and
or
inc
add
into
add
pushf
movsl
sub
rol
fisttps
mov
or
popf
into
jmp
rorb
sti
aas
inc
fwait
xor
fsts
inc
rorl
push
shll
xchg
fisttpl
mov
stos
push
dec
mov
scas
mov
pop
mov
sahf
fsubl
call
adc
push
cmp
aas
std
xor
or
or
or
or
add
jo
mov
push
dec
imul
cld
dec
push
icebp
mov
cld
dec
pop
ror
aas
inc
push
fsubrs
mov
ds
cmc
lods
cmpsb
jnp
mov
movsb
sub
mov
je
jnp
stos
cld
hlt
mov
jnp
xor
inc
inc
xchg
adc
jmp
das
and
sub
sub
adc
hlt
fwait
movsl
sub
sbb
push
ret
stos
ss
push
pop
scas
ret
or
idiv
jg
inc
fisttps
mov
cli
xchg
stos
fisubrs
sub
shll
lahf
push
xor
out
xchg
mov
add
jmp
shll
jg
push
cmpsl
sbb
jg
add
mov
js
jnp
fidivrl
stos
dec
xchg
in
psllq
fldcw
pop
and
mov
lock
out
sbb
and
xor
xorb
cmp
imul
cld
xor
xlat
sti
jb
mov
dec
lods
xor
lret
sti
callw
sub
and
ds
pop
dec
and
mov
aam
lods
ljmp
sbb
mov
lret
lret
lods
or
push
ljmp
mov
clc
mov
ret
inc
fisubrl
jmp
jmp
push
push
push
mov
pop
lods
push
in
jp
sbb
out
out
adc
or
mov
lods
pop
add
fs
dec
xor
iret
sti
xor
inc
lret
mov
fwait
outsb
cld
push
sbb
pop
push
out
or
lods
sti
mov
xchg
dec
scas
adc
ss
std
cmovp
adc
fwait
je
adc
rolb
adc
std
or
js
out
mov
std
xlat
add
lods
add
and
int3
pop
xchg
fwait
cmc
xchg
pop
jae
shrl
or
ficomps
cld
popa
cltd
inc
aam
shrl
movb
adc
mov
adcb
jnp
dec
mov
xchg
inc
mov
jge
outsl
test
push
decl
jge
jecxz
dec
aad
adc
xchg
xchg
mov
loope
push
outsl
cmp
mov
xor
ret
call
jo
scas
nop
mov
repz
adc
cwtl
lahf
imul
xchg
xor
dec
mov
or
pusha
xchg
dec
jnp
scas
cmpsb
adc
icebp
ja
pop
add
cmp
aad
outsl
push
jmp
jg
mov
in
shl
stos
mov
xchg
pop
into
dec
addb
jmp
lods
ret
jae
push
mov
popa
shll
mov
dec
mov
pop
and
jecxz
mov
out
xchg
jb
scas
push
inc
ret
push
test
pop
dec
or
add
inc
dec
mov
cli
gs
fidivs
or
jb
mov
call
xor
pop
dec
jge
test
dec
pop
jnp
mov
xor
out
out
lret
aaa
cld
stos
add
sbbb
sti
test
adc
cs
push
mov
jg
mov
bound
loopne
cmpsb
jbe
push
fiadds
xor
aas
movsb
jmp
lahf
jge
in
stc
std
int
popa
movsl
mov
scas
aas
adc
negl
into
sbb
ljmp
sub
cwtl
movsb
dec
leave
inc
addb
xor
lahf
outsl
cmc
sti
dec
dec
adc
mov
add
and
jl
ret
jg
mov
in
xor
into
inc
pusha
lret
adc
pop
inc
js
dec
or
push
incl
in
adc
dec
scas
test
and
mov
push
bound
shr
out
cltd
repnz
out
adc
cmc
lock
stos
jnp
mov
ja
push
inc
arpl
or
jns
sub
js
int
mov
cmpb
sbb
push
push
sub
xor
sahf
or
inc
cmp
lret
mov
mov
sub
cltd
push
dec
cwtl
flds
loopne
mov
inc
in
jne
std
fwait
mov
inc
jl
ret
mov
add
inc
dec
mov
fmul
xchg
rclb
mov
sahf
add
js
orl
out
fs
enter
inc
xchg
data16
mov
add
fiadds
in
scas
sti
cmp
pop
xor
std
dec
mov
sahf
mov
mov
or
bnd
pop
push
jl
scas
fs
ret
nop
sbb
arpl
inc
rolb
jge
call
cmp
add
out
or
add
mov
fbld
outsb
push
fstpt
idiv
jb
adc
or
fwait
jl
add
out
cmc
cld
cli
mov
rorb
es
js
mov
jg
enter
movshdup
mov
ret
imull
dec
or
push
mov
test
add
jecxz
adc
jns
cli
and
jmp
push
les
orb
inc
push
mov
jecxz
stos
pop
dec
or
out
das
pop
sub
lret
pop
test
inc
cmpsb
jbe
adc
inc
push
mov
mov
ja
adc
inc
clc
push
push
mov
sub
mov
mov
data16
push
iret
or
rep
xchg
inc
cmp
icebp
sub
fiaddl
mov
hlt
ficoml
lods
cmp
fs
sti
jae
je
push
mov
in
test
mov
call
pop
aad
xor
jp
xor
outsl
sbbb
das
sbbb
faddl
sti
jg
shll
dec
aad
cwtl
addr16
xor
ljmp
ds
jmp
dec
popl
mov
dec
push
push
jne
jle
rcrb
fistl
jae
rcrb
mov
add
aam
dec
fimull
daa
mov
adcb
mov
int3
push
xor
mov
les
xor
push
and
cmpsb
jmp
fwait
adc
push
add
push
shl
xchg
mov
dec
push
fcmove
aam
and
aam
add
outsb
mov
or
mov
xorb
repnz
out
adc
sti
outsl
mov
scas
loope
add
call
fs
or
addr16
mov
out
pop
adc
sub
jo
iret
std
ficompl
pusha
push
adc
dec
sbb
sti
sub
test
cmp
cmc
and
sbb
out
fcmovu
mov
mov
inc
mov
fldenv
shrb
pop
mov
xchg
inc
mov
or
or
pop
jg
mov
xchg
rcrl
jl
int3
sbb
fldt
mov
dec
cwtl
or
cltd
ret
enter
mov
in
sbb
adc
mov
xor
xchg
ret
nop
adc
dec
lea
mov
lock
dec
fsts
cltd
jnp
push
lock
inc
aam
imul
pop
push
add
mov
mov
jecxz
out
subl
mov
aam
dec
test
loope
fwait
pop
stos
adc
sub
jg
fcoms
imul
jne
sub
negl
xor
fwait
daa
sarb
out
cmp
hlt
scas
in
dec
fmull
push
or
insb
mov
pop
sbb
das
out
mov
add
ficoms
fwait
push
mov
shlb
mov
cmp
mov
out
fwait
cmp
mov
imul
jno
dec
cld
dec
mov
js
fs
or
mov
xchg
jnp
stc
sub
cmp
icebp
cmp
call
mov
gs
add
cmpsl
repnz
sahf
xchg
outsl
inc
xor
cs
repnz
add
pushf
js
jbe
inc
mov
addr16
xor
lahf
sti
cmpsl
sbb
lods
xor
insb
xchg
pop
cs
inc
mov
xor
and
mov
xchg
stc
scas
clc
inc
jne
fwait
push
jmp
jge
pop
repz
jo
sub
aaa
scas
ja
rclb
sub
mov
stc
or
rorb
imul
jns
sbb
push
das
lret
mov
rcll
icebp
lahf
int
push
jmp
pop
lcall
fidivrl
jle
aas
mov
sub
fs
out
sbb
cli
xlat
cmpsb
movsl
push
xchg
mov
and
add
fmul
or
pop
adc
inc
pop
shll
jmp
int3
sub
mov
jb
in
mov
dec
es
mov
mov
add
push
cmpsb
pushf
lret
imul
insb
or
popa
cmp
adc
jp
mov
movsb
mov
mov
into
idivb
icebp
mov
adc
test
pop
test
xor
mov
call
sti
sub
sbb
in
imul
insb
sti
jmp
pop
mov
add
loope
jo
shlb
fnstenv
dec
mov
mov
dec
xchg
inc
ljmp
sahf
nop
int
mov
mov
fisubl
sahf
adc
and
int
or
mov
xchg
arpl
cmp
cmp
sti
push
ss
inc
push
leave
cwtl
imul
push
fsubl
jg
pusha
dec
cmc
enter
stos
idiv
fadds
mov
enter
mov
xorb
xchg
jge
repnz
repnz
pop
test
dec
test
jo,pt
mov
pushf
push
enter
mov
repz
or
xchg
mov
fsubl
ljmp
shrl
es
mov
adc
jge
push
cmp
dec
or
int
aad
mov
repz
push
and
inc
push
inc
nop
cmpsb
pushf
sub
sbb
fmulp
and
jbe
xor
pushf
add
insl
repz
popl
negb
js
ja
or
mov
adc
xchg
mull
gs
aam
out
mov
add
leave
ret
jmp
lea
add
jo
jl
lcall
xor
sarl
inc
in
dec
and
imul
fsub
fnstenv
jae
xchg
or
lret
test
jg
stos
jl
nop
dec
mov
fwait
orb
int3
roll
iret
push
movsb
xor
push
jns
out
cltd
jo
mov
mov
fildll
adc
and
cmp
bound
addb
dec
popf
inc
push
ja
mov
push
pop
in
push
fwait
and
inc
daa
push
cmpsl
push
mov
and
movsl
jo
jmp
or
lods
fstl
fs
ret
in
push
sub
xor
stc
or
stos
sub
pop
dec
sti
mov
scas
les
ja
mov
sti
jl
mov
cs
mov
or
cmp
fs
enter
fwait
insb
mov
cltd
xlat
add
in
cmp
cmc
mov
cmp
inc
out
repz
sub
out
cmpsb
nop
push
mov
inc
cmp
mov
cmp
jo
mov
shlb
push
mov
out
xchg
fwait
test
dec
imul
fcmovb
pop
jge
and
in
push
test
enter
cwtl
sbb
mov
inc
xor
xor
pop
arpl
pop
push
xchg
stc
and
fistpll
movsb
jns
loopne
inc
js
dec
inc
fnsetpm(287
jae
pop
dec
cli
shrb
jle
xchg
imul
repz
jae
icebp
push
cmp
nop
xor
sbb
out
push
sahf
adc
sbbb
lea
psubusb
les
dec
out
cmp
cmp
sbb
loopne
stos
cwtl
fs
push
addb
mov
mov
xchg
addl
les
inc
je
ja
xchg
jg
jns
ror
mov
cmp
in
lar
pusha
sbb
test
fwait
dec
gs
push
sbbl
mov
pop
dec
cltd
jl
std
adc
sbb
lock
adc
scas
and
dec
shrl
mov
mov
out
add
nop
es
cmp
cmp
addr16
mov
sbb
test
std
dec
fistl
mov
fcompl
and
add
jl
dec
sbbl
push
mov
adc
push
jg
outsl
xlat
mov
mov
inc
iret
mov
inc
fidivrs
test
mov
fimull
and
fadd
inc
and
in
sti
jg
jg
mov
push
push
in
mov
push
into
aaa
and
ja
dec
add
cld
sbb
mov
dec
xchg
hlt
pop
movsl
cmp
int3
cmpb
sbb
push
pop
jg
pop
mov
out
xchg
add
mov
mov
loope
pop
mov
jp
mov
cmpsb
adc
sub
pop
mov
mov
fists
in
std
inc
out
int
inc
cmc
push
add
mov
sub
lret
jno
popf
mov
das
mov
insb
pop
mov
insl
out
jle
cmp
scas
xchg
pop
pop
outsl
pop
movsb
pop
jl
cmp
or
adc
sub
mov
testl
inc
xor
lret
xchg
or
jno
data16
cmp
cmp
dec
push
xchg
xor
pop
cmp
push
add
fwait
das
ljmp
movsb
out
mov
loope
dec
in
cmpl
pushf
inc
mov
push
outsb
cltd
out
jo
movsb
lock
push
imul
sub
pop
leave
pop
ror
inc
pop
mov
mov
jb
inc
cmpb
mov
cmp
mov
push
pop
push
xlat
pop
inc
out
push
aam
adc
negl
jge
mov
rcrl
ret
add
cmp
add
dec
icebp
arpl
mov
pushf
mov
xchg
mov
aam
es
lret
xchg
pop
outsb
lret
push
mov
stos
movsb
jg
popf
inc
dec
sub
ss
lods
jne
adc
loope
imul
mov
mov
sub
fistpl
mov
push
mov
int
sub
adc
jno
addb
and
cmp
sbb
leave
aam
fcmovnbe
mov
mov
ret
xchg
stos
xchg
dec
push
mov
sbb
mov
cmpsl
dec
mov
sar
ja
test
repnz
add
lds
xor
popa
stos
int3
lods
imul
mov
into
imul
lds
cmp
push
mov
bswap
je
jnp
or
je
mov
mov
jnp
or
nop
xchg
hlt
mov
xchg
adc
or
je
loope
add
mov
fwait
ss
jae
sub
xor
mov
ja
cmp
cmpsb
xchg
inc
pop
leave
push
dec
fwait
lods
xchg
xchg
pop
bound
ljmp
mov
es
mov
xchg
xor
dec
push
fsubrl
xchg
adc
lea
jno
xchg
pusha
dec
mov
cmp
pop
stos
fldt
xor
aam
imul
loope
stc
xor
es
sahf
inc
jne
in
inc
cmp
arpl
sub
in
fmull
int
icebp
cltd
stos
mov
add
lret
mov
mov
ffree
jmp
push
and
movsb
fstpl
add
pop
mov
sbb
sahf
xor
mov
push
aam
cmpsb
push
jns
pop
inc
mov
lret
mov
stc
cli
pop
adc
add
es
jmp
mov
iret
or
das
inc
ss
and
loope
sti
in
in
iret
test
js
xor
xor
stc
adc
ret
dec
inc
bound
test
aam
jns
wrmsr
fnsave
mov
cmp
cld
xlat
stos
pop
mov
stc
aas
mov
pop
ret
cld
add
rorb
lret
bound
adc
test
inc
xchg
movsl
mov
iret
sbb
call
mov
test
inc
clc
adc
fisubrs
mov
out
mov
add
push
push
add
jnp
jp
inc
cmp
add
and
cmpsl
rclb
xorl
aam
dec
mov
or
push
loopne
pop
push
xor
lret
or
mov
loop
in
fs
scas
mov
mov
push
mov
or
push
sbb
pop
shll
icebp
lcall
in
mov
cmp
xchg
mov
lret
les
mov
std
and
lret
lcall
sbb
daa
dec
daa
push
dec
pushf
xchg
cmp
cmovp
add
cmp
pop
aas
xchg
fistl
lcall
ljmp
inc
flds
inc
mov
sbb
or
cld
jge
and
imul
pop
mov
nop
aad
stos
incb
cs
inc
in
mov
mov
in
cmp
jbe
mov
clc
pop
jb
popf
fildll
dec
sub
xchg
sbb
std
mov
mov
in
arpl
out
or
je
and
pop
mov
mov
cltd
xor
arpl
ficoml
iret
jmp
aam
mov
push
repnz
mov
adc
pop
jg
pop
fmul
jecxz
fst
jns
stos
xor
jl
mov
faddl
mov
mov
add
mov
pop
add
push
cmp
mov
push
xchg
or
out
fwait
mov
aas
push
fs
test
mov
adc
js
push
xchg
mov
adc
sbb
dec
test
pop
inc
cs
lods
xchg
fistpll
adc
pop
pop
mov
pop
or
loopne
mov
pop
aad
mov
sarb
jge
sub
jg
imul
push
leave
sbb
and
mov
pop
imul
cmpsb
adc
hlt
jecxz
cli
push
cs
pop
out
or
stos
push
pop
shll
pop
push
lahf
jb
xlat
ja
xor
je
notl
aam
loopne
and
aaa
pop
add
fmul
andb
psubsb
xchg
stos
adcb
fnstcw
lret
mov
fisubrs
insl
jns
sub
push
test
movsl
test
or
fldl
adc
hlt
fcomip
and
stos
sbb
imul
sahf
dec
int
or
in
xlat
js
xor
pop
push
xor
pop
dec
pop
fcompl
push
into
dec
out
pusha
push
sbb
and
cld
sarl
push
lret
xchg
insl
xor
loopne
sbb
shl
enter
adc
imul
jl
inc
inc
in
or
adc
imul
in
clc
pop
adc
leave
push
mov
push
data16
popa
pop
jae
sbb
mov
xchg
shlb
movb
pop
fs
iret
pop
pop
pop
ljmp
std
pop
in
sub
out
sbb
push
cli
push
addr16
xchg
decb
insb
xchg
pop
in
inc
stos
mov
push
pop
test
sub
push
jae
mov
jge
jb
ja
repz
loope
xchg
jns
push
ret
shl
pop
jecxz
add
pop
pop
pop
leave
adcb
mov
test
les
add
push
jnp
imul
dec
push
xchg
push
lret
leave
fdivl
hlt
in
mov
negb
pop
iret
fs
ljmp
jge
test
movsl
push
mov
mov
dec
mov
int3
dec
jnp
cmp
movsb
jge
xchg
pushf
dec
addb
jo
movsl
xlat
pusha
ljmp
xchg
push
pop
jns
decb
push
jl
jp
pop
sub
xchg
std
in
dec
push
pop
push
in
loopne
nop
call
outsb
xlat
test
je
popf
push
or
push
dec
in
pop
pop
pop
rorl
mov
jns
popf
inc
imul
jmp
pop
or
fcompl
orb
sbb
pop
fcompl
es
dec
xchg
fcompl
mov
sub
int
popf
pop
rcrl
hlt
cltd
repz
xchg
sbb
push
fs
mov
popa
push
std
in
bnd
adc
sbb
cmp
jns
dec
fmuls
lahf
cmpsb
jnp
sub
add
lds
imul
pop
mov
das
enter
inc
or
arpl
pop
pop
or
out
lods
inc
sub
pop
pop
iret
mov
in
pop
xor
sub
jl
sbb
sub
popf
test
out
push
jno
xor
mov
pop
sbb
cmc
clc
pop
mov
inc
inc
fisubrs
rcrb
sbb
jg
filds
lock
dec
sub
jb
jnp
idivb
mov
test
pop
fcomps
jns,pn
adc
cmp
mov
enter
test
xchg
mov
or
jb
pop
addl
mov
je
imul
jae
sahf
pop
out
sub
jecxz
hlt
enter
pop
incl
jmp
adc
dec
aam
rcrb
loope
arpl
and
pop
mov
push
lahf
jl
vpsadbw
pop
bound
fstpl
and
mov
pop
das
hlt
scas
xchg
test
in
mov
pop
xchg
push
cmc
hlt
lret
fwait
pop
xor
mov
sbb
out
mov
mov
movsb
neg
in
jbe
int3
add
sahf
test
adc
andb
mov
scas
stos
dec
pushf
ret
lcall
sbb
cmp
loop
push
sbb
mov
dec
in
ficomps
jno
enter
inc
xor
push
lret
iret
mov
mov
pop
lcall
call
sahf
jnp
cmp
push
mov
mov
pop
sub
xchg
adc
pop
sub
mov
xor
enter
pop
js
scas
jns
pop
xchg
ja
into
jge
add
in
xorb
mov
sub
loope
mov
inc
cmp
sti
je
lcall
popf
pop
push
jae
pop
loopne
mov
pop
hlt
outsb
jecxz
movsl
push
jbe
pop
mov
loop
clc
nop
sub
dec
xor
cli
and
and
jl
inc
mov
enter
xchg
int
mul
jnp
xchg
fstpl
xchg
sarb
dec
ficomps
out
scas
mov
pop
insl
jo
jmp
pushf
xor
leave
fisubs
ficompl
psllw
pop
pop
mov
xchg
pusha
loopne
mov
fs
mov
pop
in
cmp
pop
fistps
lret
addr16
stc
dec
pop
shrl
pop
dec
std
add
adc
xchg
jge
pop
inc
neg
jbe
xor
sbb
inc
push
int3
xchg
push
fbld
jno
outsb
mov
sbb
push
fistpll
imul
sahf
int
adc
out
mov
adc
pop
inc
in
ret
pop
adc
xchg
dec
rolb
push
pop
sub
jns
clc
sbb
pop
decl
pop
push
outsl
sbb
sahf
stos
jl
xchg
and
pop
xchg
jg
pop
mov
je
add
cmp
adc
xchg
cmp
mov
pop
lods
jmp
movsl
push
bound
loop
in
pop
sbbb
sbb
and
pop
mov
dec
xchg
xchg
je
stc
sarl
loope
push
pop
fnstsw
pushf
sub
dec
pop
pop
push
jl
scas
pushf
ss
add
sub
mov
add
adc
pop
sbb
cmp
in
dec
mov
pop
pop
rcrb
hlt
sub
ret
test
sti
xor
inc
jg
loope
ror
push
mov
pop
imul
std
movsl
add
sub
hlt
jge
pop
adc
fsubrs
push
aas
fld
push
dec
mov
jae
iret
push
dec
sbb
mov
xchg
es
pop
mov
enter
sub
outsl
push
mov
imul
inc
or
xchg
je
add
aad
outsb
pop
mov
icebp
fcoms
scas
pop
mov
outsl
pop
mov
dec
xor
in
dec
mov
pop
add
adc
pop
lahf
pop
pop
pop
fsts
sbb
mov
inc
int3
andps
call
inc
push
bound
movsb
loop
adc
xchg
fistl
xor
jne
pop
mov
test
insl
pop
xor
neg
mov
loop
aad
mov
std
pop
lcall
push
popa
sti
mov
icebp
sbb
adc
adc
fnstsw
mov
icebp
add
add
test
or
dec
lret
mov
rolb
xchg
add
mov
pop
fstpl
imul
or
fcoml
mov
cltd
cli
insb
gs
ret
loopne
pop
push
sti
outsl
mov
sub
adc
pop
cmpsl
dec
fistps
pop
fiaddl
adc
sarb
xor
test
test
pop
cli
mov
pop
pop
jge
into
pop
sti
dec
mov
outsl
sub
pop
xchg
lods
out
sahf
ljmp
adc
addl
jmp
aaa
jnp
add
mov
add
imul
rolb
lret
adc
pop
push
push
mov
loop
lcall
xor
and
sub
mov
imul
test
rcl
shl
hlt
cmc
lahf
pop
fstpl
pop
pop
lods
jmp
data16
xor
mov
sub
leave
sarl
test
adc
jg
aad
adc
cmp
mov
lds
clc
ficompl
inc
mov
xchg
pop
lret
mov
pop
or
imul
std
enterw
xchg
imul
jnp
jl
xor
adcl
and
pop
iret
data16
xchg
cltd
xchg
rcl
push
movsl
or
iret
aad
pop
push
or
xchg
xor
adc
jg
pop
pop
icebp
fcmovnbe
les
aam
lea
sub
xchg
or
add
aaa
test
sbbl
mov
and
ret
mov
or
cli
fstpl
das
xor
pop
sbb
xchg
dec
dec
std
mov
mov
pop
pop
lock
enter
xor
out
mov
imul
pop
sub
shl
leave
lret
pop
lahf
xchg
mov
sbb
jg
call
inc
push
jg
movsb
mov
lret
icebp
pop
mov
imul
jnp
pop
out
inc
mov
mov
mov
pop
insb
aam
rorl
popf
lcall
lret
mov
aaa
xlat
lret
pop
add
pop
inc
repnz
or
fstpt
xchg
pop
bound
mov
jnp
iret
dec
test
adc
cli
jg
pop
mov
aad
popf
xchg
dec
jl
pop
outsl
mov
push
pusha
sbb
or
shrb
cmc
jp
sbb
jns
sbbb
sbb
mov
or
mov
xchg
scas
cld
mov
push
and
mov
sbb
ficompl
sbb
mov
sysenter
out
test
jl
jg
dec
repnz
mov
enter
ret
pop
jne
lret
pusha
movsb
lds
pop
sub
aad
aaa
dec
cmc
mov
ret
dec
aam
mov
mov
in
pop
insb
adc
fistpll
pop
mov
call
pusha
jno
mov
jle
pop
ret
pop
xchg
sub
cli
jl
sub
push
lret
addr16
pop
jmp
add
gs
cltd
fwait
adc
mov
leave
in
pop
mov
sub
aaa
sbb
fstpt
fsts
aaa
iret
and
fiaddl
push
mov
mov
jnp
or
mov
push
sub
sbbl
mov
lret
outsb
jne
jbe
pop
aaa
fcomp
mov
or
pop
cmpsl
and
push
loopnew
push
lret
xchg
adc
mov
je
dec
imul
ficomps
aam
jle
xchg
add
add
pop
adc
jmp
bound
adc
inc
dec
pop
fdivl
lcall
pop
pop
sar
lahf
movl
out
sub
xchg
shlb
pushf
mov
call
cmpsl
and
fsub
mov
pushf
aad
dec
int
sub
sub
lret
dec
incb
mov
outsb
xchg
stos
pop
jl
mov
xchg
enter
dec
das
jns
inc
pop
aaa
add
leave
xor
stos
addr16
out
pushf
lret
mov
lret
aas
add
mov
pop
add
xchg
mov
dec
cltd
rcr
sbb
add
rcrl
push
addr16
push
iret
out
add
pop
mov
xchg
int3
fcoml
dec
cli
dec
pop
pop
pop
cld
jl
pushf
inc
lret
push
sbb
shll
push
cmp
adc
xor
pop
fdivrp
outsb
adc
or
cmp
mov
push
mov
aaa
dec
inc
inc
sub
pusha
dec
data16
sub
sub
insl
and
icebp
fwait
jle
xor
cmp
shll
xor
sub
sub
add
sub
and
roll
adc
sti
daa
fwait
les
sbb
xor
dec
add
daa
or
xor
mov
dec
lea
outsl
sub
mov
mov
dec
mov
and
or
leave
nop
popf
sbb
xchg
icebp
pop
pop
dec
add
cmp
cmp
ljmp
xor
xlat
xor
jne
test
sbb
jb
pop
jmp
arpl
cmp
cmp
lock
xor
and
dec
mov
or
mov
int3
mov
int
xchg
data16
dec
das
cli
sbb
fdivr
shr
and
stos
dec
mov
sbb
cwtl
add
sbb
sti
fildll
cmp
push
mov
aas
jb
push
inc
loopne
rorl
inc
jl
aaa
inc
sub
gs
sub
add
mov
pop
push
out
and
and
popf
inc
and
ret
fincstp
jb
and
rcrl
int3
cld
repz
lret
xlat
mov
iret
xor
in
jb
mov
sbb
mov
je
sbb
push
dec
pop
sub
xchg
int3
dec
and
mov
xchg
cs
sub
fdiv
dec
lret
sti
xor
arpl
cmpsl
data16
aaa
clc
sbb
imull
dec
jae
sub
and
into
loopne
ret
mov
and
cs
mov
add
or
jg
lret
mov
adc
aaa
mov
sub
and
sbb
lods
das
inc
fldcw
mov
pop
and
and
and
xor
pop
push
pushf
dec
lret
sbbb
aas
loope
or
xor
sub
mov
aad
or
arpl
shll
gs
mull
int
mov
add
in
jle
sbb
js
cs
dec
cltd
sbb
into
mov
ja
cltd
das
add
frstor
xor
push
into
cld
cld
xor
mov
rolb
rcr
pop
sub
in
cld
jg
arpl
xor
mov
repz
fmul
xchg
adc
incb
das
mov
and
ficoms
shrl
cmp
dec
jnp
lret
imul
nop
mov
inc
adc
inc
lret
xor
mov
mov
sub
push
xchg
cmp
in
jl
add
inc
and
xor
cld
fldl2e
int3
jl
jge
inc
loope
cwtl
fistpl
aas
sbb
clc
xchg
pop
sub
aaa
lret
shll
cmp
sbb
sbb
push
cld
and
and
imul
in
jnp
cmp
xor
inc
ret
cmp
movsl
roll
leave
pop
or
leave
cwtl
popf
sbb
dec
popf
dec
into
sbb
fisubrs
arpl
jg
jno
rcll
sbb
sbb
fldcw
sbb
shl
or
jmp
pop
push
lret
aas
jno
or
jne
sub
pop
incb
gs
arpl
addr16
dec
cmp
push
or
leave
mov
gs
fcmovnb
mov
cli
fs
fbld
inc
jl
and
sub
daa
shl
dec
sti
jne
lods
imul
or
aam
xchg
mov
data16
sar
xorb
sbb
push
ret
sbb
inc
dec
mov
and
arpl
and
mov
arpl
daa
ss
jno
leave
or
int3
xor
jb
dec
jle
lock
adc
xor
rcll
xchg
sub
into
loope
sub
mov
xor
inc
stos
mov
inc
pop
daa
or
push
push
mov
pop
test
jecxz
cmp
mov
mov
jle
xor
pop
inc
aaa
jge
xor
sbb
sub
stc
sub
sub
int3
xor
add
sbb
pop
je
lret
pop
jmp
mov
cmp
hlt
inc
xor
clc
pop
dec
cltd
xor
xor
aaa
int3
xlat
das
inc
ljmp
push
shll
jbe
add
enter
and
mov
test
das
les
pushf
fwait
inc
and
aam
sub
mov
sub
cmp
popa
adc
out
lret
icebp
or
mov
jb
xchg
add
outsb
or
leave
stos
popf
jle
cmp
pop
and
lea
popa
fnstenv
sbb
bound
sub
dec
jmp
xor
arpl
fnstcw
mov
mov
lds
das
aad
and
pop
and
mov
fists
cwtl
mov
stos
or
idiv
addr16
mov
arpl
xor
test
lock
pop
pop
into
fdivr
cmp
mov
stos
push
scas
mulb
sub
int3
mov
and
cmp
mov
mov
stos
fsubs
daa
test
rcrb
fldcw
xchg
and
jnp
pop
scas
push
or
xor
test
ret
aaa
jl
sub
cmpsl
sub
das
fwait
and
and
and
or
fwait
and
cmp
cmp
push
xchg
push
sbb
les
insb
or
sub
fistpll
or
cmp
and
je
push
dec
and
dec
fptan
push
pushf
jecxz
fcmovnu
xchg
cmp
sub
int3
inc
push
xor
dec
scas
or
cmpsb
sbb
ret
das
loope
add
pop
and
jb
dec
push
mov
arpl
cmp
lcall
xor
adc
add
out
sti
sbb
xchg
stos
gs
mov
and
iret
into
movsl
fsubrp
xor
mov
fmuls
cmp
jl
insl
xor
ljmp
je
aaa
sub
mov
or
xlat
stos
dec
test
sub
pop
jmp
push
and
movsl
sub
loop
or
cld
fstpt
mov
fwait
xor
jo
mov
sub
mov
out
lret
jp
adc
lret
fwait
sub
dec
dec
and
mov
sbb
imul
arpl
gs
lock
xor
dec
imull
mov
pop
sub
into
jl
daa
add
ret
lods
das
loop
xor
push
jge
aaa
push
and
add
je
pop
sub
adc
add
fs
cmp
or
cli
pop
dec
xor
repnz
sub
mov
push
stos
cwtl
arpl
mov
and
sbb
mov
push
flds
addb
xchg
inc
idivl
mov
add
cli
dec
scas
rcl
aas
mov
fs
enter
stos
or
fnsave
pop
adc
push
push
pop
sub
sub
or
movsb
stc
xchg
sub
popa
jo
fcmovnb
sti
int
xchg
cmp
xchg
jo
mov
xchg
mov
lds
in
mov
arpl
mov
xchg
jg
rcl
adc
mov
ljmp
arpl
int3
dec
xchg
and
pop
daa
dec
mov
nop
push
fwait
outsb
xor
cmp
aam
ja
mov
cmp
xor
movsb
pop
cmpsb
aaa
out
stos
sub
push
push
neg
subb
jmp
mov
movsl
add
arpl
test
gs
daa
mov
fs
std
mov
inc
push
cmp
xor
xor
xor
dec
mov
test
sub
pop
xor
jno
loopne
loope
and
adc
xor
inc
and
test
cli
xchg
fs
pop
lret
dec
jecxz
adc
aad
imul
xor
mov
pusha
inc
lock
mov
or
dec
dec
rcrl
daa
lea
cmp
and
fwait
jecxz
jnp
xor
sti
jl
xchg
lods
dec
xor
pop
sub
pop
xor
push
push
cmp
push
aad
movb
sub
inc
pop
xor
inc
push
leave
js
lea
aaa
and
lock
jl
sub
dec
adc
cmpsl
jb
popl
daa
mov
mov
test
mov
jecxz
adc
cltd
data16
pop
jo
mov
jno
repz
or
add
arpl
gs
js
leave
or
mov
arpl
jb
mov
outsb
or
jne
sub
aam
int3
lock
sub
dec
aad
fwait
adc
cmp
mov
mov
fwait
adc
xor
xor
std
scas
aaa
push
push
pop
in
das
jecxz
dec
jmp
mov
add
bnd
xor
ja
lret
adc
adc
sbb
aas
cltd
sub
sub
and
aaa
dec
sub
push
sub
andb
push
jge
dec
and
cmp
idivl
push
popa
fldenv
arpl
cmp
in
xor
lret
or
and
xchg
rol
xor
stos
mov
addb
popf
arpl
iret
or
andl
add
lret
adc
sbb
sub
push
aaa
xchg
sub
cmp
das
push
push
cmc
cmp
add
xchg
sub
or
or
les
repz
js
fildll
xor
out
and
xor
cmpsl
jmp
sub
sub
pop
and
insb
fsubs
and
scas
gs
and
mov
cmc
scas
enter
cmp
push
jnp
cld
fwait
xor
sbb
mov
rcrl
inc
cmp
cmp
inc
dec
pop
and
dec
arpl
imul
sbb
jnp
leave
movsb
popf
dec
and
sbb
mov
insb
pop
jl
push
push
cmp
push
aas
das
pop
push
and
inc
push
xor
cmc
push
adc
loopne
xor
add
aaa
jnp
ljmp
lcall
pop
arpl
mov
shlb
push
xchg
and
xchg
mov
imul
add
cmc
aas
push
mov
cmp
dec
pop
sub
sub
mov
addb
xorb
inc
and
xchg
jl
and
shl
shrl
inc
pushf
pop
xchg
mov
fnstsw
mov
xor
rcl
js
push
push
and
inc
jb
push
xor
aam
loope
sti
mov
mov
inc
imul
rcl
mov
inc
sti
imul
or
or
push
sbb
loopne
adc
xor
mov
xorb
jb
sbb
sub
xchg
je
das
or
dec
push
sarb
and
imul
add
xlat
jb
dec
xlat
xor
js
dec
mov
jb
mov
and
push
testl
fisubs
xchg
loope
mov
stos
fsts
data16
dec
add
dec
sub
add
push
aas
add
fs
loopne
loopne
ficoms
mov
push
test
xor
mov
mov
es
sub
into
and
cmc
sub
inc
jge
scas
fxtract
jge
jmp
xchg
sub
test
aas
imul
xchg
mov
mov
imul
pop
das
xchg
and
and
or
popf
pop
fcompl
jb
or
jl
jl
ret
xchg
sub
mov
or
inc
aaa
xor
scas
xor
mov
xchg
dec
fistps
idivl
push
inc
sub
lods
pop
insl
and
sub
xor
icebp
inc
push
or
aas
dec
rol
xor
sbb
pushf
ret
pop
in
xchg
and
inc
sarb
push
pushf
in
sbb
xor
adc
cmp
out
adc
inc
and
inc
and
sahf
xor
or
and
fldcw
lds
pusha
cmp
sahf
mov
into
jecxz
sub
sahf
mov
adc
dec
les
cwtl
add
out
or
cmp
mov
and
sub
ficoms
mov
pop
lds
and
leave
mov
addr16
sub
sbb
and
sub
das
ja
and
dec
pop
push
and
andb
jle
daa
xorb
flds
or
jl
inc
cmp
aam
mov
lcall
sub
rcr
sub
int3
jmp
arpl
je
arpl
flds
sub
daa
xchg
ret
push
arpl
cmp
push
cld
mov
xorl
iret
pop
das
dec
xor
xchg
shl
dec
dec
aaa
adc
adc
orb
shll
mov
loop
mov
fstps
pushf
push
sti
mov
cmp
xchg
mov
arpl
jne
clc
sub
pop
mov
pop
adc
pusha
inc
sub
out
push
push
sub
orb
adc
dec
and
arpl
and
shll
mov
mov
mov
sbb
movsb
out
sbb
enter
xchg
jb
pop
pop
dec
xor
xchg
out
cmpb
cld
sbb
mov
imull
decb
lods
fnstcw
arpl
js
pusha
dec
mov
ret
arpl
cmp
xor
xor
sub
daa
imul
add
pushf
mov
addb
das
dec
and
cmp
and
fldz
movl
arpl
cmp
jb
dec
sub
clc
pop
push
xor
mov
call
jno
cmp
fsin
mov
inc
and
dec
xchg
gs
addl
cmp
dec
in
add
jl
and
sub
jle
cmp
dec
xor
or
inc
pushf
pop
rolb
jle
test
sbb
jnp
js
sub
pop
sahf
adc
sbb
and
adc
xchg
loop
fcmovnu
lret
dec
inc
cmp
lahf
sarl
push
ljmp
lock
xor
sub
or
or
sub
enter
pop
or
mov
jg
and
lahf
add
lret
add
xchg
inc
pop
aas
jmp
mov
mov
mov
or
movsl
jb
sbb
sub
xchg
jno
sub
mov
das
sti
stos
mov
outsl
pop
and
loopne
int3
lea
repz
cmp
jmp
jl
mov
adc
pop
dec
aaa
jno
jmp
sub
into
repz
rorb
sub
push
jae
sbbl
test
cmp
jbe
scas
adc
outsb
mov
jno
daa
adc
mov
addr16
popa
mov
lock
jns
cmp
cmp
in
or
fldl
cltd
into
dec
sahf
in
or
sub
leave
rorb
into
adcl
pusha
pop
adc
insl
sub
test
data16
adc
int3
popa
xor
int3
arpl
aaa
cs
popf
sub
adc
dec
pusha
jmp
mov
adc
ss
mov
sub
and
sbb
int3
das
sub
daa
add
mov
or
pop
and
sub
sub
push
enter
cld
dec
mov
or
int
mov
pop
dec
pushf
push
fstl
mov
sbb
je
out
xchg
imul
push
push
std
sub
add
pop
decl
add
and
aam
insl
and
push
dec
sbb
jl
jecxz
mov
das
testb
sti
in
push
insb
stos
iret
ret
std
mov
xor
xor
sbb
movsl
sub
sub
insb
pop
hlt
out
dec
inc
and
pop
mov
enter
shl
imull
dec
pop
rclb
push
push
jl
in
ja
and
and
stos
aaa
jns
pop
push
int
das
mov
fisubl
mov
sub
in
pushf
pop
imul
ja
fnstcw
inc
lea
jp
ud1
int3
mov
sub
dec
fdivs
fstpl
dec
mov
lahf
sbb
sub
add
and
vmovdqa
orb
sub
mov
cld
imul
xchg
int3
cmpl
out
into
cwtl
enter
pusha
or
pushf
xchg
pop
dec
test
mov
inc
lds
jb
jo
mov
add
add
ficoml
mov
lea
pop
inc
xchg
lret
rcll
inc
add
in
jg
aas
mov
mov
test
in
mov
movsb
aaa
xchg
xchg
movsb
sub
push
or
sub
das
xchg
and
and
call
insb
mov
mov
incl
adc
or
and
test
adc
mov
mov
data16
pop
les
pop
in
or
xchg
idivl
dec
lret
dec
repz
mov
in
cmp
aad
pop
das
jp
outsb
cld
stos
mov
loopne
sub
sub
mov
and
daa
push
fsubl
int
xchg
scas
ja
cs
inc
sbb
jnp
cmp
push
mov
cmp
or
adc
cs
fiadds
sub
or
pop
jmp
das
mov
push
and
pop
daa
out
flds
aam
lahf
in
outsl
lods
hlt
sub
cmp
fmuls
push
mov
cld
pop
fldt
fsubrl
mov
inc
frstor
mov
pop
and
fists
mov
jmp
cmp
fs
in
mov
lahf
inc
xor
push
les
incb
xor
and
sub
mull
and
js
lret
sbb
into
loopne
inc
sub
lahf
into
aas
xchg
xchg
pop
sti
lahf
mov
mov
and
loopne
inc
sti
push
adc
into
xor
jecxz
mov
loope
aaa
out
shl
push
xchg
cvtps2pi
and
notl
xor
sbb
adc
decb
push
iret
mov
nop
or
xor
jo
pop
sbb
movsb
xor
cltd
jecxz
push
rcrb
sub
xchg
and
sub
sahf
or
das
xorl
lret
cmp
dec
xor
push
adc
fs
mov
sub
stos
xor
xor
jo
adc
int3
cmp
push
sub
dec
jae
adc
xor
xor
aaa
imul
jne
in
dec
pop
test
rcr
mov
les
push
sub
pusha
sub
jl
sub
inc
cmp
aas
js
fbstp
stos
pop
xor
mov
shll
mov
jno
cmp
shll
sub
div
xchg
pusha
sbb
lods
arpl
out
outsl
cmp
data16
and
push
xor
push
test
movsb
lcall
cmp
and
iret
adc
sbb
daa
mov
cmp
roll
lods
pop
movsb
gs
xchg
idivb
dec
pop
pop
popf
xchg
xor
aas
cmp
sub
pop
dec
push
cmp
shll
pop
xor
push
fcmovnu
xor
cmp
xor
aas
add
xor
mov
mov
add
pop
jmp
sub
push
fsubl
sbb
je
daa
frstor
or
loope
pop
mov
cmp
fidivrs
jnp
adc
mov
ss
dec
sub
lret
and
int
fmull
call
in
pushf
mov
in
inc
jecxz
or
sub
xorb
cmp
push
mov
sbb
ljmp
adc
mov
mov
jbe
ret
dec
sbb
or
insl
cs
adc
cmp
jp
fucomi
adc
sub
mov
ja
frstor
mov
sbb
imul
sbb
int3
arpl
mov
pushf
arpl
js
dec
imul
push
test
mov
mov
test
aas
in
xchg
orb
sahf
sbb
xor
dec
int3
adc
jl
cmp
or
and
dec
mov
popf
jmp
mov
mov
adc
stos
sub
ja
lret
shl
aas
dec
jb
and
fs
dec
xor
loopne
fsubp
enter
and
iret
jb
and
xor
pop
mov
int
sbb
jg
out
sahf
inc
out
arpl
movsb
fildll
mov
pop
insb
aas
ret
xor
xor
mov
dec
push
sub
ret
iret
lds
mov
inc
das
dec
and
daa
pop
xchg
sbb
xchg
or
dec
cmp
in
je
jno
sbb
out
xor
push
pushf
fs
mov
push
aas
outsb
sub
mov
into
cmpb
inc
rol
cmp
inc
test
mov
lea
fistl
pop
mov
loopne
inc
aas
pop
int3
pop
xor
jmp
and
sbb
xor
jg
aaa
sub
jno
daa
sti
stos
add
inc
push
ret
pop
dec
push
aaa
sarl
xchg
mov
jmp
mov
mov
outsl
inc
mov
aas
addl
add
scas
inc
mov
mov
push
sub
inc
das
cmp
imul
sbbl
and
or
popf
insb
xchg
mov
outsl
sti
adc
pop
inc
xor
int
loopne
fstpt
jecxz
mov
jge
mov
stos
or
dec
cmpl
fnsave
cmp
jae
insb
ja
xor
jnp
jg
pop
add
add
popf
cmc
sub
das
popf
loopne
or
adc
repz
insl
fistpl
jne
int3
jg
cmp
inc
scas
pop
sub
inc
enter
sub
cmp
sub
inc
push
dec
and
adc
andl
test
hlt
dec
push
data16
pop
mov
xor
xchg
sub
adc
sti
adc
dec
fs
sbbb
lods
sti
and
sbb
pop
sub
or
ja
pop
fwait
sarl
stos
xchg
and
xor
rcr
ja
mov
sub
mov
cld
pop
das
dec
mov
mov
fnstsw
into
idiv
jbe
inc
fadds
shl
rcl
aad
cld
pop
pop
xor
xchg
lods
mov
cmpsl
push
inc
xor
mov
enter
arpl
std
js
mov
data16
and
into
lods
pop
inc
clc
pop
sahf
pop
in
ret
jl
push
xor
mov
xchg
popf
sub
xor
loopne
shll
dec
aam
scas
popf
fwait
hlt
cld
cs
pusha
or
pusha
xor
out
push
dec
daa
sarl
sti
dec
jne
cmp
call
test
mov
xor
adc
dec
loope
pop
dec
stc
sub
int
inc
mov
movsl
loopne
in
jg
pop
cld
jmp
incb
sti
test
icebp
mov
out
sahf
inc
push
mov
xor
ja
xor
into
fisttpll
in
jle
or
repz
push
sahf
mov
push
fldenv
or
or
arpl
aas
test
adc
xchg
rep
insb
ja
sub
pop
pushw
mov
arpl
fscale
push
rolb
movsb
pop
inc
popa
jecxz
gs
int3
sbb
cmp
xor
jb
data16
sub
xchg
int3
adc
cmp
dec
cmp
push
jg
and
sarl
aaa
jb
sbb
rcrl
popf
cmp
movb
cmpsl
pop
ja
shlb
iret
jb
and
hlt
cltd
mov
pop
adc
adc
iret
imul
fldl
fsts
pop
into
rcrb
xchg
jge
rcl
mov
aaa
stc
adc
jg
in
into
dec
xchg
fs
test
and
cs
hlt
fiaddl
dec
pusha
sub
data16
adc
xchg
pop
cmp
int3
ret
xor
xor
cld
shll
sub
push
cltd
stc
push
mov
jmp
pop
jl
ret
outsl
shl
push
nop
or
dec
jae
sbb
inc
loopne
sbb
inc
aaa
push
sub
inc
pusha
sub
fistl
jbe
imul
mov
sti
jmp
or
ljmp
clc
enter
repz
mov
and
xchg
imul
xor
push
int3
xorb
mov
jl
mov
mov
movsl
daa
add
shll
test
dec
lahf
dec
aaa
cmp
arpl
test
repz
sub
dec
jecxz
mov
test
ror
add
cwtl
inc
mov
enter
cld
dec
test
mov
pop
fistl
or
xchg
adc
jl
insl
sub
and
cmp
jno
pushf
xchg
popa
sub
pop
pop
or
jmp
and
sbbb
inc
loope
ss
cmp
add
xor
xor
testl
clc
sub
xor
xor
mov
data16
into
cmp
stc
xchg
rorb
and
cmp
dec
dec
jno
pop
mov
mov
push
xchg
sbb
xor
sub
arpl
nop
insb
push
dec
adc
loope
sbb
daa
test
xor
popa
pop
sub
mov
jg
fmull
aas
add
mov
xor
adc
xor
pop
and
cmp
test
sub
aad
mov
pop
jns
pop
daa
pop
and
cmp
inc
sbb
add
pop
repz
fldl
xor
pop
arpl
xor
xor
or
sub
mov
jecxz
sti
aaa
mov
jg
add
icebp
aad
and
add
scas
dec
je
faddl
cltd
and
pusha
dec
xchg
inc
mov
jl
mov
fmull
jnp
cmp
int3
dec
aas
imul
enter
sub
les
sub
push
arpl
test
jns
dec
gs
js
loop
xor
daa
inc
sub
pushf
cld
ret
pop
mov
jb
pop
add
aas
nop
hlt
in
call
nop
in
cmp
sbb
pop
mov
jo
andb
arpl
pusha
or
stos
cmpl
shr
ds
data16
test
in
jno
push
sub
rcll
mov
out
and
mov
les
in
das
into
push
mov
mov
jo
outsl
test
stos
mov
and
not
gs
iret
mov
jl
xchg
mov
mov
imul
mov
cmp
and
aaa
lods
pop
sub
pop
cld
test
jne
nop
push
inc
shlb
ret
insl
or
aas
rorb
lahf
arpl
push
pop
or
and
mov
fldenv
ret
push
arpl
fs
mov
inc
xlat
repnz
into
and
push
sub
mov
fldl
cmp
pop
loop
arpl
or
mull
push
mov
jecxz
aas
jecxz
in
out
push
sbb
ljmp
mov
inc
mov
int
lods
in
jl
rcrl
in
nop
in
sbb
inc
xchg
les
and
into
lods
cld
scas
daa
stc
repnz
and
rcr
dec
adc
ror
adc
xor
adc
pop
sub
jge
cmp
mov
cmpsl
inc
test
rcll
or
popf
pop
pop
cmp
stc
jae
ret
lds
lods
cmp
dec
or
or
dec
xchg
and
inc
jl
in
pop
hlt
mov
add
mov
int
sti
xchg
lds
and
and
jbe
int3
fistl
or
cmp
rol
xor
js
xchg
enter
mov
rorl
sub
sub
jnp
mov
inc
jg
mov
sbb
dec
or
cltd
jle
arpl
or
sbbb
pop
xor
adc
inc
xor
cmp
mov
push
movsl
repnz
or
cmp
jle
arpl
xchg
movsb
xchg
adcb
iret
mov
shr
mov
xor
lret
jecxz
push
fstl
sbb
xor
cmc
in
dec
and
and
ss
xor
sbb
pushf
add
fnstcw
mov
mov
cmpsl
jae
xor
sahf
xchg
xor
sbb
dec
add
dec
gs
mov
lahf
pushf
jg
pop
jbe
nop
push
lock
jb
cmp
mov
popf
sbb
sbb
or
mov
rep
cmp
mov
xor
pop
sbb
aam
mov
out
cmp
jnp
mov
xor
and
outsl
int
jl
sti
dec
sbb
xchg
mov
iret
out
inc
pop
or
int
mull
push
movsl
xor
xchg
add
imul
mov
xchg
jle
dec
xor
or
shrl
sbb
scas
cld
cmp
fisubs
sbb
sub
into
inc
andl
ljmp
jmp
lods
jecxz
and
dec
xlat
lods
jmp
sbb
and
add
or
mov
fnstsw
out
insb
into
pop
cmp
cmp
shl
inc
ds
sbb
testl
icebp
adc
into
aaa
adc
hlt
fisubrs
scas
inc
push
sbb
jb,pn
iret
sbb
inc
xchg
daa
xor
fadd
arpl
push
sub
clc
add
xchg
test
jns
xor
pop
pop
mov
sub
xchg
dec
jg
shrb
out
and
pushf
sub
jl
ds
push
cmp
cltd
stos
xchg
rorb
mov
add
push
push
call
aaa
test
sarb
ss
sti
dec
aas
das
mov
mov
js
pushf
pop
mov
nop
dec
adc
xor
cmp
jbe
lret
add
arpl
xor
or
das
mov
sbb
mov
adc
adc
and
jmp
loope
dec
test
xchg
mov
arpl
mov
pop
cmp
out
push
fdivr
mov
pop
pop
xor
xor
jl
into
in
xorl
cwtl
pop
sti
mov
adcb
or
filds
cmp
jae
pop
cmp
mov
or
iret
pop
pusha
cmp
pop
lret
adc
or
jg
and
lods
les
push
inc
fistps
cld
clc
and
jl
dec
adc
loope
pusha
or
andl
sti
push
fbstp
push
sbb
imul
js
test
rcll
loope
push
mov
jecxz
gs
mov
cmp
sahf
xlat
cmp
sbbb
jbe
cld
and
push
cmp
in
scas
push
mov
flds
pop
push
add
shl
dec
js
repz
and
xchg
inc
lret
flds
gs
sub
pop
cmp
js
jp
sub
sbb
pushf
shll
dec
mov
outsl
sub
aad
jb
repz
clc
cwtl
call
mov
js
jg
push
insb
mov
sub
jp
jnp
push
repz
adc
mov
xchg
aas
ja
xor
loopne
mov
in
imul
jbe
mov
and
enter
and
add
mov
cmp
cmpsl
jnp
sar
adc
int
inc
mov
cmp
jl
jp
push
inc
xchg
and
dec
and
and
enter
flds
ja
sbb
inc
adc
sub
add
sbb
in
mov
test
inc
sub
in
cvtps2pi
cmp
and
daa
js
pop
ret
xor
jno
sbb
enter
push
idiv
push
inc
sbb
sub
fwait
and
popl
rcrb
inc
inc
and
and
dec
daa
inc
imul
pop
cmp
cmpsl
dec
int
inc
cmpsl
pop
sub
xor
xor
push
cmp
fs
fsubl
push
std
das
xchg
je
pop
fsubrs
add
and
into
sbb
sti
inc
adc
adc
mov
push
jg
jl
jg
jp
cwtl
dec
fwait
xor
cld
int
andl
push
insl
and
xor
jmp
mov
movsb
cld
mov
lods
jge
jmp
push
xor
mov
xor
addb
out
lock
mov
cmp
jae
frstor
add
mov
aas
and
jg
and
cld
stos
lea
mov
pop
test
xchg
push
jmp
lods
jae
outsb
fsubp
sti
adc
sub
push
sarb
mov
into
cmpsb
mov
or
lock
arpl
ja
adc
outsb
lods
inc
mov
adc
or
dec
aad
inc
cld
pop
mov
jae
push
pop
fiadds
enter
pop
pop
xor
mov
pop
cmp
mov
scas
push
test
lods
and
mov
sbb
das
data16
aas
xchg
push
sbb
add
or
sahf
test
rcrl
in
xor
imul
sti
stos
sub
mov
lds
fdivl
xchg
adc
or
pushf
outsb
fdivrl
xchg
or
movsb
jmp
pop
xor
sub
mov
mov
scas
push
in
jp
jae
in
and
stos
shl
xor
repnz
push
jb
fwait
cld
daa
cmp
enter
xor
mov
out
je
or
sbb
and
iret
mov
testl
nop
or
cmp
cld
cld
adc
xchg
jg
dec
push
sub
cmp
or
in
jae
jmp
aad
call
daa
adc
pusha
mov
xlat
pop
arpl
push
insl
cmp
imul
test
lahf
inc
aaa
mov
add
pop
js
int
fwait
or
cmp
inc
sti
jl
sub
fld
dec
sbb
cmp
in
adc
xor
test
aad
xor
dec
clc
cmp
and
cmp
adc
fisttpl
pop
loopne
lret
and
xor
shlb
int3
inc
cmp
ret
pushf
cmp
popa
loopne
push
movsl
dec
outsl
and
rcl
test
mov
rcr
nop
push
dec
or
inc
mov
push
fwait
mov
xor
aad
int
hlt
fwait
mov
and
jb
into
hlt
jle
sti
inc
dec
cmp
jb,pt
and
imul
aaa
push
dec
aad
jmp
mov
dec
popa
adc
add
jb
adc
cmp
dec
daa
adc
fidivs
mov
loope
push
sbb
mov
xor
popf
push
imul
sbb
dec
inc
lret
lea
mov
fmul
lods
jle
lret
pop
sbb
data16
sbb
and
aas
xchg
fimuls
adc
lret
stos
cmp
int3
push
mov
jl
sub
mov
sub
sub
cmp
das
push
and
adc
movsb
jmp
sarb
je
xor
mov
inc
imul
bound
mov
in
popf
push
aaa
jg
dec
sub
in
arpl
pop
xchg
das
dec
and
into
stos
decb
pop
add
and
add
fstp
cltd
les
filds
mov
loopne
aas
enter
push
xor
or
in
mov
jl
adc
adc
outsl
addl
notl
jno
int
movsl
popf
psraw
fs
pusha
outsl
push
mov
or
inc
popf
jl
xor
cmp
cmp
jmp
jg
sub
sub
add
lret
dec
mov
add
xor
sbb
fs
cmp
or
cmp
or
cmp
push
cmp
pushf
lock
mov
xlat
int
cmpsl
stos
imul
inc
jle
pop
pop
push
dec
scas
cmp
cld
pop
loope
dec
in
or
dec
mov
aaa
cmp
sub
cmp
cmp
dec
mov
fs
jge
cmp
dec
mov
jno
pusha
xchg
ss
jae
sti
imul
cmp
mov
sub
aaa
jb
push
ja
sub
push
jecxz
mov
cmp
pmaxub
hlt
add
daa
stos
js
sbb
mov
insb
sub
xorb
dec
jge
or
lods
mov
js
pop
sub
adc
jg
or
inc
adc
daa
rcr
sbb
jo
iret
jb
ja
divl
mov
xchg
or
mov
pushf
inc
enter
test
xchg
js
js
add
inc
add
adc
and
and
repnz
inc
or
rorl
fdivl
cmp
pop
cmp
rclb
xchg
xor
das
ja
sub
pop
clc
dec
jb
cmp
outsb
sub
insb
rorb
aaa
dec
stos
ffreep
insb
shrb
and
stos
shlb
outsl
push
and
stc
add
incl
xorl
fcoms
push
or
icebp
xor
lret
cmpl
dec
pop
stos
xlat
data16
add
push
enter
add
mov
daa
out
addb
lret
jecxz
cld
lret
lock
add
int3
jmp
mov
js
daa
mov
insb
icebp
addb
sahf
jl
flds
clc
inc
mov
dec
es
dec
insb
push
mov
leave
lret
and
jg
lret
push
stos
add
pop
fdivrs
je
add
cld
shrl
xchg
das
imul
fistps
xor
sbb
dec
mov
xchg
mov
adc
enter
pop
jl
push
sahf
cmp
fimull
test
push
adc
mov
lods
das
rolb
dec
or
test
in
mov
or
mov
sub
ret
jmp
add
xor
fisubl
xor
mov
aas
enter
out
gs
sub
int3
call
pop
orl
xchg
sbb
adc
xchg
in
pop
xchg
stos
insb
sti
dec
sub
cmp
aam
pushf
pop
cltd
xchg
mov
cwtl
or
sbb
aaa
mov
mov
mov
adc
dec
and
jmp
or
nop
sub
mov
inc
cmp
ret
pop
xor
out
adc
fdivl
xchg
aaa
mov
test
mov
jno
pushf
jnp
ss
adc
jmp
push
das
inc
cmpsl
pop
fst
in
decb
jecxz
sahf
addr16
movhps
hlt
mov
sbb
jns
xor
jmp
or
cli
dec
or
or
sahf
int3
cmp
pop
mov
mov
imul
outsb
in
add
sti
inc
out
movl
inc
lods
shll
cmp
popf
sahf
sub
inc
push
jo
cwtl
rcll
push
pushf
sub
and
xor
cmp
mov
sub
stc
mov
jmp
scas
dec
andb
dec
mov
int
lahf
or
add
xlat
or
fnstcw
mov
xor
stos
mov
out
and
xchg
xor
scas
rcrb
mov
testb
stos
sub
sbb
stos
cmp
daa
mov
push
addr16
push
je
add
test
pop
fwait
fnstcw
cmp
shr
push
add
aad
inc
aam
shrb
data16
fs
jae
fcoms
data16
ja
aam
shlb
int3
arpl
push
mov
dec
fcoml
xor
arpl
pop
mov
add
popa
in
sbb
and
fdivl
and
sti
xchg
stos
dec
push
cmp
aas
dec
xor
jecxz
stos
ja
dec
pusha
js
movsl
push
fs
arpl
js
int
clc
pushf
adcb
or
and
sub
xchg
in
add
add
adcl
cli
icebp
sub
sub
mov
out
je
mov
adc
ja
mov
pop
dec
jecxz
xchg
cwtl
push
add
nop
jmp
mov
sub
dec
lret
std
xchg
sarl
xlat
inc
inc
nop
cmp
sarb
aas
outsb
lods
or
xor
lods
pop
adc
cmp
rclb
idivl
add
ja
pop
xor
das
mov
int
pusha
enter
jae
jmp
mov
cmpsl
inc
out
out
rcr
sbb
pop
inc
jb
dec
repz
jno
test
mov
inc
push
aam
shr
and
js
pop
rcrb
mov
rcll
cmp
notb
int3
loopne
cld
jo
scas
push
pop
inc
cld
pop
cmp
sbb
adc
push
sub
push
popa
cmp
sbb
xchg
inc
fadds
aas
push
sarl
in
daa
inc
psrlw
insb
pusha
sub
stos
clc
mov
stc
adc
test
mov
ja
test
dec
js
or
repz
push
push
pushf
lret
mov
iret
cmpl
ljmp
pop
and
mov
cltd
and
sbb
jmp
cltd
out
pop
inc
das
xchg
test
sub
rcrb
cmp
fidivrs
pop
rcrb
enter
pusha
icebp
cmp
jo
enter
in
arpl
adc
xlat
mov
adc
pop
jecxz
sub
sbb
mov
imul
jo
jno
daa
lds
inc
orb
sti
pop
rorl
call
inc
idivl
addr16
into
pusha
daa
pusha
inc
mov
push
aam
jb
sbb
sub
push
je
jb
iret
adc
push
pop
push
and
mov
icebp
cmp
fildl
xor
jecxz
gs
subb
mov
aaa
rolb
push
daa
js
push
ret
xor
adc
mov
sbb
dec
cmp
push
fadds
push
push
insb
pop
data16
push
adc
shrl
cmp
jno
mov
stos
sar
ss
mov
jb
into
sub
pop
and
cmp
roll
jl
xor
sub
ficompl
sub
sub
push
mov
test
adcb
jg
mov
sarb
mull
cmp
shlb
shl
adc
cld
enter
add
mov
sub
dec
cmp
jmp
mov
add
adc
test
lods
sbb
ja
and
shll
fnstenv
and
or
push
inc
cmp
mov
lods
or
or
xor
iret
sub
xor
loop
clc
xchg
mov
xor
mov
je
gs
and
loope
jno
pushf
mov
ja
push
sub
cmp
dec
adcl
mov
fstpl
dec
push
ljmp
popf
hlt
loopne
mov
inc
and
pop
ret
jg
into
cmp
aas
mov
arpl
xor
pop
jmp
mov
xchg
lcall
adc
sbb
sub
adc
inc
mov
js
inc
je
pusha
sti
jb
fnstsw
aas
cmp
test
iret
sub
xor
push
adc
or
lret
mov
sbb
pop
add
inc
dec
jl
adc
sahf
xlat
push
into
nop
mov
adc
sti
pop
pushf
sub
mov
addr16
mov
and
inc
and
jae
jmp
push
stc
aaa
cmp
jns
mov
sbb
sub
dec
sub
movsl
popl
push
shl
pushf
mov
pop
xor
pusha
fsub
rdpmc
mov
out
xchg
add
lret
fdivrs
popf
fisubs
out
out
dec
dec
sub
iret
dec
sbb
cmp
push
cmpsl
addr16
call
push
mov
push
das
lcall
pushf
jno
cmp
int3
sub
add
dec
enter
dec
das
dec
les
out
pusha
call
mov
pop
sub
and
and
or
sub
mov
jg
out
gs
loopne
xchg
and
or
sti
adc
mov
pop
ret
fdivs
and
mov
inc
imul
imul
pop
rcrl
xchg
or
inc
jg
add
cmp
repnz
xchg
rclb
arpl
lock
lret
insb
imul
ret
sbb
les
jb
mov
xchg
push
inc
cmp
dec
jecxz
pop
scas
aaa
mov
pusha
addl
push
imul
adc
data16
jo
xchg
sub
popf
pop
sbb
mov
or
and
pop
in
icebp
das
adc
pop
stos
inc
and
xchg
fcoms
nop
in
subb
sub
jl
mov
pop
data16
stos
subps
jnp
pop
xchg
lret
sub
and
add
mov
mov
mov
cmp
fcoms
rcll
jbe
pop
nop
jecxz
std
adc
fistpl
stos
and
mov
jae
mov
xor
mov
sub
aas
inc
push
repz
mov
sub
sub
andb
ds
fistpll
fwait
jne
or
fwait
inc
stos
repz
mov
data16
add
push
jne
je
and
pop
sbb
daa
into
sub
loopne
jge
enter
push
jno
test
inc
into
xchg
bound
fdivl
adc
rorb
push
mov
cmp
fnstcw
inc
dec
cmp
adc
mov
shll
pushf
mov
mov
shr
cld
stos
push
sub
push
and
and
inc
in
fndisi(8087
pusha
fmuls
jl
xchg
faddl
aas
lock
xor
dec
jg
clc
mov
cmpsl
aaa
out
sub
aas
sub
inc
das
dec
addb
pusha
fsubrl
movl
mov
sbb
inc
mov
cld
out
add
icebp
xor
mov
scas
or
pop
inc
xor
push
or
popa
daa
dec
sub
mov
cmp
pop
ja
pop
arpl
fstps
shll
cmp
rolb
inc
push
insl
mov
cmp
push
push
xor
adc
stos
fcompl
xlat
movsb
sub
sahf
lret
add
das
scas
add
ljmp
rorl
repz
add
fmul
cmpsl
or
lods
pushf
pop
pop
ficoms
fchs
test
aam
in
or
ss
mov
or
outsl
sahf
adc
das
inc
sub
mov
push
ret
pusha
fsubrs
hlt
jg
sbb
and
and
pushf
in
adc
test
mov
into
push
aaa
ss
push
xor
in
pop
and
mov
loopne
sub
jae
sub
lret
mov
out
fistl
inc
inc
iret
mov
mov
mov
inc
notb
mov
push
arpl
js
add
dec
pop
xor
xlat
gs
jp
imul
pop
pop
mov
or
in
jl
notb
loopne
pop
mov
lods
pop
inc
mov
rcll
mov
inc
or
xor
xor
loop
mov
pop
ja
cmp
mov
inc
insl
das
imul
add
daa
sti
in
sarl
jmp
out
in
cmp
lret
imul
loopne
or
and
pushf
cmpsl
out
sub
ror
addb
jmp
xor
test
es
xchg
sbb
push
into
inc
mov
or
cmp
cmp
jae
lret
xor
mov
arpl
ficompl
iret
sub
into
jle
or
xchg
inc
in
in
dec
and
aam
mov
xchg
in
and
jmp
jns
dec
adc
in
mov
sar
mov
test
ss
dec
lods
mov
je
jno
pusha
daa
shrl
inc
sbb
xor
int
cmpsl
adc
aaa
sbb
mov
mov
sbb
ljmp
and
cld
sub
aaa
loope
inc
and
loopne
push
clc
add
mov
ja
test
mov
cmp
flds
mov
xchg
push
push
mov
gs
lock
adc
stos
pushf
shrl
je
adc
push
ficompl
inc
popl
je
add
int
outsb
fnstsw
pop
int3
jmp
xlat
add
mov
jle
test
pop
xor
ret
shll
jb
push
movsb
or
pop
orb
sub
dec
sub
sub
ret
pop
pop
push
push
cmpsl
jb
and
shll
fmull
inc
int
mov
cmp
jae
sahf
pop
mov
cmp
push
inc
aaa
mov
inc
out
arpl
and
inc
jle
out
out
and
inc
loopne
lret
push
xor
insb
std
xor
dec
fistpl
imul
jo
cwtl
xor
mov
xchg
in
dec
nop
int
dec
cmp
iret
pop
inc
lret
jle
call
enter
pop
inc
inc
cmp
jecxz
gs
mov
arpl
rorb
adc
mov
cwtl
mov
mov
xor
jmp
roll
xor
xchg
push
sub
pushf
test
jnp
adc
pop
mov
in
cmp
shll
out
sbb
pusha
sub
xor
aaa
jno
sub
sub
push
cld
clc
xor
pushf
fwait
pop
test
and
inc
lret
cmp
fs
iret
cmp
pushl
mov
and
jmp
loope
loopne
adc
popa
sub
jecxz
mov
adc
mov
daa
or
xor
add
or
cmp
lret
cmp
adc
rcll
and
or
pusha
push
stos
addr16
add
subl
xchg
int
ja
push
lret
adc
popf
adc
jge
dec
jmp
imul
push
and
or
cld
jno
pushf
movsb
pop
and
pop
hlt
sub
dec
sub
adc
enter
xor
pushf
xor
push
cltd
cmp
pushf
adc
btr
addl
scas
lahf
mov
test
rclb
leave
frstor
push
cmovno
in
jl
out
mov
dec
std
subb
or
push
lcall
sub
shlb
pusha
jg
test
jno
mov
push
adc
inc
inc
test
push
xchg
in
into
hlt
mov
push
push
das
and
ret
jmp
or
or
lret
pushf
adc
rcrl
scas
and
sub
inc
aas
cmp
sti
pop
sub
xchg
xchg
sub
sub
push
outsb
repz
jg
cmp
jge
cmpl
fldcw
rol
sub
lahf
add
leave
sub
fstp
je
xor
mov
and
add
xor
adc
push
pop
push
mov
cmp
push
add
rclb
xchg
push
outsl
xor
lock
jg
mov
fstps
or
inc
iret
aaa
cmp
addr16
xchg
lock
push
out
xchg
push
xor
inc
loop
push
mov
add
cltd
pop
stos
pop
and
icebp
cmova
mov
mov
mov
xchg
cmp
in
pop
sti
adc
jmp
lods
js
adc
mov
mov
nop
adc
dec
add
cmp
fwait
fs
daa
cmp
jmp
fwait
ret
add
add
or
add
jb
int
inc
sub
xchg
push
into
adc
pusha
pop
dec
mov
mov
lods
fstps
mov
dec
sub
test
push
mov
cmp
iret
adc
fsubp
mov
or
fmuls
sahf
push
mov
fldt
ss
clc
inc
xorb
mov
mov
rolb
adc
mov
nop
pop
inc
das
aad
cs
out
popl
mov
dec
pushf
in
or
shll
pop
dec
mov
int3
test
movl
push
adc
inc
shr
dec
jne
pop
cmp
inc
mov
aam
into
inc
fldenv
mov
dec
int
xchg
inc
aaa
xor
mov
lock
and
sbb
adc
jnp
popl
pop
sti
nop
mov
aad
jecxz
int
adc
cmp
mov
mov
lret
jbe
xor
cli
sbb
jbe
call
fwait
popl
mov
mov
fdivrl
xor
fsts
inc
sub
lods
jg
jb
mov
aad
sub
clc
je
jmp
hlt
sbb
mov
mov
pusha
sub
dec
clc
or
cmp
out
dec
xchg
sub
sbb
imul
sahf
mov
mov
pop
int
mov
dec
mov
orb
lods
js
inc
mov
jno
in
sub
das
aas
out
ja
mov
sbbb
leave
ror
arpl
cmp
std
mov
cmp
rol
inc
fcoml
xor
sti
enter
dec
scas
inc
shll
or
rcl
mov
mov
hlt
fs
sbb
shl
int3
mov
lock
fdivrl
sbb
scas
pop
mov
inc
push
push
cmp
ja
pop
rcr
mov
pop
shr
push
xor
xor
mov
rcr
push
clc
movzbw
push
push
mov
shr
mov
bts
push
ror
dec
mov
sar
add
sbb
test
mov
neg
shr
and
shr
xor
lea
pushf
pushf
lea
jg
push
lods
dec
neg
rcr
pusha
rol
adc
and
ror
xor
neg
and
sub
not
inc
xor
jmp
stc
stc
pushl
mov
sub
btc
mov
cmp
sub
pushf
jmp
xchg
jmp
inc
sbb
mov
ret
mov
push
cwtl
dec
mov
cmp
les
repz
jns,pn
dec
and
mov
cmpsb
iret
dec
popa
fstl
push
xor
sub
frstor
or
add
sub
push
adc
ret
aaa
fsub
cmpsb
dec
push
push
js
dec
or
push
cmp
das
divb
pop
ljmp
jb
outsb
lods
in
daa
xor
xchg
xchg
pop
sub
jne
push
cmpsl
adc
lret
lods
ljmp
orps
push
rolb
test
xchg
scas
lret
dec
out
psubd
das
cmp
cmp
mov
mov
cmpsl
sbb
sbb
mov
clc
pusha
push
data16
popf
jb
xor
fcmovnb
fdiv
les
or
and
adc
and
sbb
neg
ror
pusha
setae
mov
rol
cmp
sub
xor
shl
sar
setno
shl
not
push
jmp
lods
lock
pop
jg
sbb
movsl
jmp
fcoms
push
mov
sub
and
push
lock
mov
ret
stc
lods
push
ja
push
mov
jg
mov
jg
xchg
mov
jecxz
add
cmp
test
repz
sub
pop
push
pop
mov
fldt
fistpl
mov
leave
mov
outsl
imul
mov
push
jae
dec
mov
xor
roll
mov
int
in
sar
out
mull
pop
inc
out
test
or
xor
xchg
lahf
push
mov
rolb
out
imul
mov
in
loopne
aaa
mov
or
ret
cli
push
nop
movl
dec
mov
jae
adc
inc
aaa
out
and
into
mov
dec
or
jnp
stos
sbb
insl
xlat
and
mov
dec
into
ficoms
cwtl
in
mov
and
pop
lds
mov
or
dec
xchg
dec
stos
mov
adc
mov
or
jbe
dec
je
mov
movsb
mov
mov
pop
div
mov
lods
mov
pop
popf
xlat
cmp
inc
cmp
mov
dec
push
ret
pop
or
xchg
movsl
xchg
jae
loop
testb
xchg
arpl
call
mov
inc
xor
bound
sbb
push
mov
lcall
in
xor
mov
movsb
jecxz
mov
popa
lcall
push
in
imul
jecxz
enter
repz
sub
inc
shl
dec
push
addb
aad
xchg
outsb
xchg
inc
das
call
inc
push
aam
xchg
pusha
pusha
pushf
lea
jne
setb
pushfw
xor
sub
mov
cmc
neg
pushf
stc
mov
rol
pushf
xor
pushf
test
not
mov
xor
pusha
pushl
jmp
bt
test
jmp
sub
call
in
loope
nop
ljmp
push
jae
test
sub
in
sbb
pop
jmp
push
fbstp
jns,pn
push
daa
push
add
scas
xor
dec
and
faddl
addr16
cmp
pop
or
pause
adc
out
mov
aas
pusha
dec
scas
fists
xor
clc
mov
or
dec
inc
cmc
cmp
adc
mov
xchg
cltd
pushl
ffreep
mov
add
mov
aad
mov
pushf
jmp
adc
mov
stc
bt
cmpb
pusha
lea
jne
inc
rcl
rol
shl
xor
shld
pusha
and
pusha
mov
sub
call
and
fistl
mov
aam
out
nop
fldl
jnp
sbb
ja
stos
pop
fimuls
pop
jns,pn
outsl
nop
popf
add
cmp
push
arpl
fisubrs
sbb
mov
cli
add
std
in
in
sarb
stc
inc
mov
push
pop
sbb
repz
add
nop
lcall
scas
cwtl
lret
push
pop
sbb
sbb
mov
add
stos
push
pushf
mov
lea
jmp
lea
jb
pushf
cmpb
movb
pushf
jmp
jns
aaa
xchg
ljmp
shrl
mov
leave
xchg
xchg
push
mov
stc
cmp
std
xor
cltd
sbb
cld
push
jno
add
xchg
sbb
in
movb
into
loop
shrl
repz
roll
in
pop
jmp
pushf
int3
test
or
xor
push
or
stos
into
bt
rcr
cmc
mov
shrd
seto
rcr
test
mov
test
pushf
cmc
or
jmp
add
xor
adc
xor
add
sub
add
and
pusha
sub
add
add
popa
adc
add
mov
bt
cmc
not
cmp
bt
xor
jmp
insb
add
xchg
ljmp
cmp
adc
mov
ror
icebp
out
xchg
divb
negl
jns,pn
insl
xchg
cmpsb
xor
stos
sbb
or
cmp
aas
pop
movsb
inc
or
cmp
fldz
jo
inc
mov
fsubs
sub
xchg
xchg
ds
mov
sbb
mov
dec
or
mov
cmp
outsl
lods
cmp
xchg
xor
sbb
fistpl
idivl
fs
inc
mov
call
in
push
mov
je
mov
sub
sarb
int
aam
dec
inc
test
into
dec
movsb
sbb
cli
jae
cmp
xor
movsb
dec
jecxz
ds
push
push
pop
inc
stc
out
or
add
movsb
ja
fsub
lret
mov
sub
cltd
xlat
dec
xchg
xchg
push
cltd
lea
jne
jmp
xchg
xor
int
icebp
aaa
repz
jns
cmp
sub
inc
insl
popa
and
jns
std
mov
cmpsl
xor
add
xlat
jns
jns
and
movsl
nop
out
fsubs
push
arpl
mov
pop
adc
stc
jno
subl
aas
rclb
fadd
stc
cmpsb
push
sti
aas
xchg
sub
iret
add
aad
pop
lods
stos
sbb
fimull
lcall
ret
inc
push
popf
shlb
adc
xlat
rcl
xor
movsb
hlt
lcall
jp
stos
inc
lahf
dec
xor
int
shlb
add
push
pop
or
dec
xchg
in
xor
lcall
xor
rcrl
sub
stos
push
xchg
stos
lea
je
clc
pushf
call
xchg
dec
leave
xchg
ljmp
loopne
fisubrs
dec
lahf
pusha
insb
xlat
daa
or
cmp
pop
leave
lret
mov
push
les
adc
adc
mov
add
out
scas
dec
pop
data16
inc
xor
push
mov
xchg
push
sahf
mov
cmp
movsl
decl
lods
popf
push
pusha
test
sbb
xchg
out
mov
fxch
and
push
cmp
orl
fcomps
xchg
fdivs
xor
fs
call
pusha
push
lea
jae
pusha
not
mov
jmp
mov
pushl
push
lea
jmp
add
add
call
mov
ret
movsl
sub
fsubrl
xor
mov
orl
push
xor
test
jns,pn
xchg
adc
mov
loope
or
jne
jle
das
xchg
jle
inc
mov
and
shll
outsb
push
jmp
cmc
or
addb
jo
push
pop
popf
push
in
clc
cmc
sub
cmpb
sbb
sbb
or
out
int
xchg
or
sub
test
add
push
movb
pushf
lea
jmp
cmp
push
lea
jb
cmc
pusha
cmp
movb
lea
jae
xchg
shld
setl
mov
mov
btc
btc
bswap
mov
rcr
sbb
sub
mov
push
movw
pushf
test
xor
pushf
repnz
jmp
rolb
ljmp
cmp
das
adc
lret
popf
cmp
xor
icebp
dec
popa
push
sub
sub
arpl
jecxz
and
in
jnp
sub
mov
mull
popf
repz
jne
push
cmp
imul
pop
xlat
fucomip
push
cwtl
in
dec
adc
test
sub
cmp
push
dec
add
hlt
pop
divb
xchg
enter
lret
and
lahf
pushw
popfw
jmp
call
pushl
movw
cmp
mov
pushf
movl
lea
ja
rol
sub
not
bsr
add
push
movzbw
sub
movsbw
mov
rcl
mov
cmp
mov
clc
cmp
repnz
pushl
movb
push
lea
jne
mov
lea
jmp
lret
cltd
jns
ljmp
mov
adc
xor
scas
mov
aaa
cmp
mov
push
std
mov
xchg
cld
and
rclb
mov
adc
cmp
add
shr
xchg
iret
fildll
gs
testl
mov
cmp
cmp
imul
in
rclb
loopne
mov
sub
popf
push
cmpsl
mov
push
int
out
sbb
push
push
and
fidivl
and
pushf
adc
pusha
movl
pushf
movl
push
pushf
pushf
mov
lea
jmp
pushf
lea
jb
test
cmc
cmp
pusha
call
sub
cmp
mov
pusha
jmp
not
dec
mov
stos
jmp
fdiv
call
cltd
add
mov
jbe
pop
ret
movsl
ss
cmp
std
push
sti
jl
pop
fisttpll
dec
out
pushf
daa
jns,pn
sbb
mov
leave
mov
jmp
dec
mov
adc
inc
daa
push
in
xchg
pop
test
call
out
xor
shr
pop
xchg
pop
in
rcr
add
cmpsl
popa
dec
ja
adc
pop
sub
jg
pop
jl
rcll
or
inc
and
movw
push
mov
pushf
pushl
ret
pushf
push
inc
lea
push
pusha
lea
call
jmp
pusha
pushf
dec
pushf
lea
jne
or
mov
stc
pushf
cmp
pusha
lea
ja
not
pop
movzbw
xchg
movsbw
pop
bswap
pusha
pushf
not
mov
bswap
pushf
movsbw
mov
push
mov
call
fiaddl
and
pop
xchg
out
xlat
loop
outsb
mov
cmpsb
ficoml
scas
push
push
test
pop
movsb
dec
leave
aas
push
pop
inc
in
or
jne
and
and
sahf
imul
inc
cmp
test
fbstp
pop
pop
icebp
insl
mov
xchg
jg
dec
dec
sub
cmp
adc
add
adc
cwtl
out
sbb
cmp
dec
sub
gs
dec
test
call
pushl
popl
call
pushf
lea
jne
bsf
neg
mov
cmc
cmp
cmp
stc
add
clc
cmc
pushf
pushf
movzwl
add
push
pusha
rol
mov
bt
push
pushf
add
test
mov
cmp
jmp
jmp
jmp
pusha
jmp
call
mov
movb
mov
pusha
pushl
ret
sarl
pusha
xor
sub
pop
push
fstpt
jle
jbe
fdivrp
pop
xchg
bound
cmp
out
mov
cmp
sub
push
push
adc
jp
out
cmp
iret
mov
inc
enter
mov
jg
iret
push
push
rorl
push
lahf
call
out
inc
std
pop
jnp
aas
xchg
outsl
insb
xchg
out
mov
mov
mov
jg
iret
push
xchg
pop
xchg
bound
je
jp
hlt
mov
jbe
aas
js
addb
cltd
and
mov
data16
sbb
int
inc
xchg
sbb
cmp
mov
cmpsb
lods
shl
xchg
fdivs
roll
inc
mov
push
xchg
sub
stc
xor
jg
adc
pop
pop
arpl
add
insl
dec
ljmp
out
add
shr
andb
dec
bt
pushw
popfw
pusha
inc
call
ret
mov
aam
cld
xor
and
fists
mov
jnp
push
pop
cli
imul
int
addr16
testb
aad
clc
imul
lret
inc
mov
fwait
add
jae
jnp
or
dec
push
cwtl
lods
movsl
xor
loopne
mov
popa
xchg
cmp
push
kunpckwd
into
lcall
push
or
mov
js
add
inc
jae
movsb
sbb
aad
rclb
je
cmp
fmull
out
adc
sub
decl
add
call
mov
cmp
pusha
cmp
pusha
test
movb
push
lea
je
call
inc
cmp
push
shr
shl
xchg
xchg
mov
neg
bt
jmp
call
lea
je
clc
xadd
inc
mov
clc
shr
rcr
add
sub
call
push
call
add
dec
outsl
popa
fs
imul
add
ret
or
popf
sub
or
mov
inc
mov
inc
sbb
and
bound
jl
subl
mov
cs
loop
insb
gs
mov
and
les
adc
hlt
out
fisubs
jns
pop
std
dec
cmpsb
push
loop
and
orl
leave
repz
fnstenv
xchg
mov
call
mov
pushf
ljmp
out
fnstenv
pop
mov
fnsave
dec
adc
xor
loopne
jns,pn
test
imul
das
xchg
data16
loopne
into
push
inc
mov
dec
mov
pop
insb
ja
push
mov
push
push
lret
sbb
jne
fnsave
adc
mov
xchg
and
jle
imul
add
fwait
xchg
jp
mov
icebp
xchg
daa
in
pusha
movl
pusha
call
call
lea
ja
push
cmc
pushf
stc
imul
pusha
bt
cmp
pushf
add
push
push
lea
jmp
insb
pop
repz
ljmp
and
sbb
and
call
jmp
sub
and
dec
xor
test
dec
movsl
gs
push
ds
push
out
xchg
mov
cmp
leave
iret
sti
ret
dec
call
fwait
and
cmp
cmp
ljmp
mov
jmp
fsubrl
test
jmp
std
push
adc
ss
inc
or
jns,pn
and
cmp
aam
pop
and
push
and
push
pop
add
xor
shlb
sti
stc
fidivs
cmpsl
stos
adc
dec
gs
mov
mov
scas
mov
or
xchg
stos
jle
xchg
rcll
jb
add
lea
jae
pushf
lea
jne
jmp
push
lea
jne
lea
or
mov
movzbw
sub
inc
btr
mov
push
bt
sub
clc
pushf
cmp
pusha
pushl
popl
push
cmp
jmp
ss
mov
pop
add
adc
xchg
outsl
xchg
aaa
popf
addr16
mov
jb
cmp
std
push
pop
mov
or
enter
mov
adc
ja
in
adc
push
sahf
adc
mov
enter
push
cmp
cmp
xor
inc
add
cmp
jo
pop
cmp
add
cmp
into
arpl
cmp
rcrl
aas
pop
call
popa
popf
loope
jl
cmp
jge
xchg
push
xor
repnz
pop
and
inc
int3
fnstcw
cmpsb
dec
push
add
ret
jo
mov
movsl
sti
stos
lea
xchg
adc
fisubrl
arpl
sahf
test
fmulp
std
jne
dec
adc
int3
cmc
test
loop
data16
mov
add
add
sarl
push
or
mov
inc
dec
shr
cmpsb
filds
mov
test
insl
lcall
jge
inc
mov
mov
int
jp
cmp
add
and
test
lret
ljmp
popa
lods
rcrl
rcl
mov
cmp
xor
mov
jl
mov
out
sub
cmp
outsb
mov
pop
inc
call
lods
pop
mov
cmc
cmp
cmpsb
fidivrl
shrl
mov
or
js
xchg
ret
into
pop
repz
sub
fidivl
stos
sbb
mov
dec
lcall
cwtl
fmull
test
out
mov
pop
sbb
lea
add
sbb
in
inc
sub
idivb
arpl
mov
outsb
mov
ds
psubusb
cmp
fstpl
mov
jmp
and
adc
mov
mov
mov
xor
xor
xchg
outsb
mov
inc
cwtl
add
add
sbb
adc
clc
shlb
push
adc
cvtps2pd
enter
fwait
add
stc
push
loopne
cmp
mov
cmc
push
mov
mov
hlt
mov
testb
ja
xchg
jb
jb,pn
mov
in
inc
mov
dec
push
fldt
fisttps
lcall
movl
or
movsb
push
int3
pop
arpl
jb
sub
mov
dec
xchg
sbb
es
mov
lock
xchg
incl
jnp
sbb
mov
daa
push
pop
lret
xchg
sub
enter
pop
mov
fimuls
lods
ret
xchg
lret
push
pop
cmpsb
and
add
xchg
das
lahf
bsr
xadd
mov
or
pushf
mov
call
push
pusha
call
cmp
xor
push
mov
lea
call
pusha
movw
lea
jae
pusha
mov
pusha
jmp
stos
push
pusha
pushf
pushf
lea
jmp
imul
pushf
mov
add
pushf
pushf
lea
jmp
mov
ret
btr
mov
dec
xchg
jmp
xchg
jb
pop
sub
dec
iret
add
jns
mov
icebp
mov
daa
push
lret
icebp
idivl
lret
dec
int
xchg
fwait
inc
out
leave
pusha
xor
cltd
inc
scas
lcall
hlt
test
jg
aas
inc
in
repnz
enter
add
adc
and
call
stos
test
push
aaa
xor
std
add
cli
jno
cli
lret
repnz
call
not
mov
push
xor
push
mov
push
jmp
or
and
sub
xchg
fadds
push
mov
cmp
xor
cmp
sub
mov
xor
lods
push
jo
sub
adc
das
cmpsb
jmp
int
and
daa
movsl
or
sub
sbb
xchg
pop
popa
shll
shll
repnz
sub
push
push
sbb
lret
cmp
out
inc
bound
mov
xchg
push
iret
sti
ja
mov
ret
cmp
pusha
bt
jmp
std
jp
jae
cmp
pop
mov
fnstenv
lcall
stc
jae
lcall
pop
mov
jae
pop
mov
jae
pop
mov
cmp
pop
cmp
rcrl
ja
repnz
inc
inc
and
pop
adc
call
lea
jne
push
stos
pushf
pushf
pushf
pushf
lea
jmp
add
cmpsb
insl
hlt
mov
jns
sbb
mov
mov
lock
data16
adc
jns
cmpsb
jno
push
xor
test
iret
mov
jmp
iret
loope
sub
cmp
mov
add
sbbb
les
adc
push
xor
sub
test
lods
fmul
mov
bound
out
enter
jb
rorb
loope
pushf
adc
pushl
call
pusha
pusha
lea
call
pushf
pushl
push
lea
jmp
push
xchg
xor
setno
mov
bswap
sub
mov
dec
push
cmc
bswap
adc
stc
push
ror
shl
bsr
movzbw
push
inc
xor
bt
ror
push
movsbw
and
mov
jmp
call
call
or
ret
pop
filds
stc
dec
lea
add
dec
xchg
or
jns,pn
pop
pop
sbb
cmp
jnp
das
test
cmp
xchg
or
enter
into
aam
pop
outsb
cmp
xor
stos
addb
aam
mov
pop
inc
or
mov
inc
ja
dec
mov
pop
shl
insb
xor
push
push
sub
pop
mov
mov
sub
popf
jg
flds
call
mov
push
cmp
sbb
pop
mov
fsubl
add
sub
pop
sti
inc
xchg
adc
addr16
dec
jle
xchg
or
mov
mov
cltd
push
xor
xor
std
push
test
xchg
mov
jbe
pop
aad
mov
jnp
fcompl
xlat
push
fwait
xchg
jns
inc
cmc
push
insb
sbb
push
fcoms
pop
stos
mov
mov
stc
fsubs
jg
push
lret
and
mov
imul
push
icebp
dec
mov
stos
fisttpl
mov
outsb
push
nop
jp
out
jecxz
jnp
mov
and
fxtract
push
push
inc
jno
jne
cmp
add
mov
mov
jb
fistpll
pop
rcl
sti
and
cmp
mov
inc
fcompl
adc
push
push
lds
scas
fxam
cmpsb
fistl
repnz
xchg
push
jae
inc
pop
sbb
and
orb
lret
lcall
test
sub
push
in
fs
sbb
cmp
sub
xlat
cli
add
sub
popa
mov
sub
pop
fcomps
dec
in
icebp
fwait
sub
mov
sti
jb
sbb
aam
out
adc
icebp
fiadds
inc
jns
and
xlat
dec
mov
in
push
inc
push
repnz
scas
in
nop
out
lcall
mov
pop
and
pop
pushf
lret
fwait
repz
sub
imul
jae
inc
leave
adc
pushf
push
ret
jns
sbb
in
mov
out
lods
mov
lret
setnp
sub
aam
mov
xchg
pop
mov
daa
andl
daa
repnz
and
call
lret
mov
push
repz
mov
arpl
scas
mov
mov
and
repz
pop
adc
es
fstpt
push
sbb
inc
cmp
push
int
cmp
add
jmp
arpl
add
push
inc
lods
adc
inc
xchg
cmp
out
arpl
fs
jne
dec
dec
sbb
testb
repz
inc
fnclex
xor
lock
pop
fdivrl
sahf
cli
xor
int
pop
dec
hlt
sbb
xchg
shll
dec
xorb
popf
dec
dec
jbe
push
adc
sbb
das
inc
pop
test
mov
or
pushf
pushf
push
call
dec
jnp
sub
sbb
adc
addr16
jnp
imul
push
aad
lahf
pop
dec
sbb
stos
dec
add
leave
imul
adc
and
sbb
fdivrl
and
fisttpl
shlb
pop
outsl
cmp
dec
shlb
push
dec
sub
loope
imul
and
out
jge
in
xchg
xchg
aam
out
loopne
pushf
mov
and
jge
fdivrs
jge
dec
xchg
in
aam
push
shrb
mov
ret
cli
jp
jge
outsb
repnz
sbb
popf
in
test
push
push
pop
dec
mov
sbb
adc
adc
out
xor
dec
or
loopne
pushf
cmp
sahf
inc
stos
aam
adc
dec
lahf
xchg
lret
loopne
xchg
cmp
mov
add
sbb
lods
mov
mov
stos
hlt
inc
adc
mov
sti
add
mov
push
stos
cmp
mov
inc
adc
mov
xchg
adc
movsb
lret
dec
fisubrs
push
lret
faddp
jle
sbb
mov
jnp
mov
pusha
pop
cmp
inc
push
std
dec
aad
ret
lret
inc
scas
insl
xchg
aam
jns
mov
pop
push
sub
adc
or
stos
mov
mov
inc
stos
mov
repz
add
cmp
cmp
xor
inc
adc
xor
shrb
scas
adc
and
sbb
loopne
fstpt
filds
inc
adc
addr16
dec
xor
ret
jnp
adc
lret
lret
loopne
sarl
ret
inc
adc
dec
scas
enter
sti
mov
push
adc
aad
pop
sbb
imul
jecxz
mov
imul
and
jp
jge
sub
dec
pop
push
mov
call
lret
loopne
mov
lea
stos
mov
repz
test
imulb
dec
loopne
add
hlt
inc
stos
jnp
jnp
push
push
jae
sbb
in
xchg
dec
mov
and
jge
mov
dec
mov
inc
mov
jne
imul
and
dec
stos
jp
jge
aad
xchg
mov
sub
xlat
jge
test
inc
jge
xchg
mov
fwait
lea
pop
mov
xchg
sbb
lret
lret
lret
loopne
dec
cmp
inc
inc
stos
adc
adc
sbb
dec
jle
lret
loopne
jns
push
jnp
adc
dec
xchg
jno
orl
cmp
ja
stos
fwait
inc
adc
imul
lret
loopne
outsl
cmp
aad
popa
mov
mov
or
aam
inc
sbb
mov
and
popa
pop
push
test
xchg
mov
popf
mov
imul
and
jp
jge
lea
xchg
mov
imul
repz
jge
pop
jp
jge
xchg
inc
xor
mov
and
cmp
data16
xlat
jge
sub
jge
jle
jp
jge
xor
push
push
and
or
imul
or
jmp
stos
dec
mov
jnp
aad
stos
cmp
xlat
adc
lret
lret
lret
lret
loopne
sarl
inc
stos
cld
inc
adc
dec
sar
scas
dec
loopne
std
cmp
icebp
cmp
repz
stos
outsb
inc
adc
addr16
dec
or
lret
loopne
in
cmp
out
inc
stos
cmp
adc
jecxz
ret
adc
in
out
cli
int3
cltd
lret
loopne
fwait
cmp
enter
popf
out
out
or
les
or
arpl
pop
jne
dec
cld
jg
lods
fwait
inc
dec
aad
pop
jnp
mov
inc
jle
dec
ret
movsl
loopne
fs
iret
aam
cmp
xlat
adc
jo
adc
push
jnp
repnz
in
gs
imul
sbb
jle
loope
adc
ds
mov
push
imul
sbb
xchg
imul
gs
push
or
push
adc
jns
cmp
jg
inc
stos
insl
inc
adc
addr16
adc
fmulp
scas
dec
loopne
cmp
into
inc
stos
out
inc
adc
dec
lods
clc
lret
loopne
lock
call
adc
mov
inc
cwtl
lret
loopne
mov
mov
stos
lcall
adc
cmpsb
lret
fisubs
sbb
lahf
icebp
fstpt
test
dec
pop
cmp
lret
or
add
pop
dec
dec
outsb
jnp
dec
jle
sbb
inc
aas
xor
or
jle
mov
fisttpl
stos
fstpt
mov
int3
lret
jnp
inc
jae
je
cmp
inc
leave
xchg
mov
data16
adc
loopne
imul
inc
leave
xchg
mov
insw
lret
loopne
outsl
cmp
popa
inc
stos
in
inc
adc
dec
mov
loopne
addr16
sbb
inc
adc
sub
lret
loopne
adc
pop
inc
stos
cltd
inc
adc
addr16
jge
int3
aam
test
cmp
or
leave
adc
dec
movsl
bswap
push
dec
loopne
add
arpl
mov
dec
add
dec
loopne
pop
cmp
cmp
inc
adc
addr16
dec
cmpb
aas
cmp
xor
inc
adc
addr16
jge
int3
aam
test
gs
inc
stos
adc
adc
dec
movsl
sub
push
dec
loopne
sub
arpl
mov
dec
shrb
scas
dec
loopne
and
and
inc
adc
addr16
jge
int3
aam
test
cmp
flds
inc
leave
adc
dec
movsl
fcmovne
push
dec
loopne
fnstsw
arpl
je
dec
adc
outsb
dec
loopne
sarl
aad
stos
cs
adc
xlat
addr16
adc
leave
lret
loopne
lret
cmp
int
stos
scas
inc
adc
addr16
adc
ret
lret
loopne
lds
movl
addr16
dec
sti
lret
loopne
std
cmp
incl
inc
adc
addr16
adc
repz
aam
mov
inc
stos
adc
adc
mull
adc
aam
jmp
xor
in
inc
stos
xchg
inc
adc
addr16
dec
insb
out
lret
loopne
jecxz
cmp
stos
fiaddl
cltd
addr16
adc
fwait
lret
loopne
lahf
cmp
xchg
inc
stos
pop
inc
adc
jp
dec
imul
mov
popl
inc
adc
andl
lret
loopne
xchg
mov
xchg
mov
adc
sbb
dec
or
sub
cmp
stos
inc
stos
stc
inc
adc
lods
addr16
dec
loopne
mov
dec
cmpsl
inc
stos
jp
adc
sbb
dec
or
lret
loopne
push
cmp
push
inc
stos
cli
inc
adc
pop
addr16
adc
dec
lret
loopne
dec
cmp
inc
cmp
arpl
dec
adc
dec
gs
lret
aam
mov
inc
stos
push
inc
adc
jge
int3
xchg
mov
mov
stos
roll
adc
dec
loopne
jb
repz
xlat
je
push
xlat
adc
in
lret
loopne
js
jae
cmp
adc
dec
gs
lret
aam
mov
inc
stos
push
inc
adc
jge
int3
xchg
mov
mov
stos
roll
adc
xchg
dec
lds
repz
aam
mov
mov
in
addr16
adc
push
lret
aam
mov
inc
stos
mov
adc
adc
jge
int3
hlt
mov
mov
stos
xor
adc
dec
loopne
or
arpl
adc
dec
lds
lret
aam
mov
mov
in
addr16
adc
add
jae
aam
mov
inc
stos
mov
adc
adc
jge
int3
hlt
mov
mov
stos
xor
adc
dec
loopne
inc
cmp
arpl
adc
dec
lds
repz
aam
mov
mov
in
addr16
adc
sub
jae
aam
mov
inc
stos
mov
adc
adc
jge
int3
hlt
mov
mov
stos
xor
adc
dec
loopne
es
arpl
adc
dec
repz
aam
mov
mov
in
addr16
adc
loopne
jae
loopne
sarb
aam
stos
push
inc
adc
addr16
adc
fmul
jae
aam
mov
inc
stos
mov
adc
adc
jge
int3
hlt
mov
mov
stos
xor
ret
adc
lret
loopne
enter
cmp
inc
adc
dec
repnz
loopne
idivb
clc
inc
stos
cmp
in
fsts
dec
int3
out
lret
loopne
loop
cltd
mov
stos
mov
addr16
adc
adc
sahf
lret
loopne
xchg
cmp
xchg
inc
stos
fiaddl
cwtl
addr16
adc
mov
lcall
mov
stos
pop
inc
adc
jp
dec
imul
mov
sub
adc
shlb
dec
jmp
lret
loopne
mov
mov
inc
stos
pop
inc
xchg
scas
inc
stos
jns
adc
sbb
dec
or
mov
inc
stos
je
adc
jge
int3
mov
pop
cmp
faddp
inc
repz
mov
xlat
pop
and
xlat
adc
in
lret
loopne
push
cmp
arpl
dec
adc
gs
sbb
xchg
jge
int3
hlt
mov
mov
stos
xor
adc
xchg
dec
and
aam
mov
inc
stos
adc
adc
inc
repz
aam
inc
xchg
push
aam
xor
sub
stos
flds
jns
int
dec
in
jnp
lcall
mov
stos
push
inc
adc
sbb
dec
pop
imul
imul
inc
stos
int
adc
outsl
outsl
in
jge
pushf
inc
jb
jnp
int3
dec
jo
lret
scas
pop
or
rorl
dec
ret
add
stc
pop
insb
fwait
daa
dec
int3
push
insl
loopne
sub
sub
arpl
ret
popa
xor
pop
je
inc
cld
imul
movsl
jbe
cmp
jg
add
dec
sub
ja
pop
enter
sbb
gs
dec
dec
adc
gs
sbb
inc
lret
adc
push
iret
je
sbb
or
adc
popf
sub
push
dec
cmp
sar
insl
mov
imul
adc
jl
rcrl
fnsave
push
sbb
sbb
sub
repnz
dec
mov
jb
push
fnsave
imul
ficomps
mov
cs
int3
dec
js
loope
push
jle
push
pop
sbbb
and
orl
push
and
jg
adc
lret
es
and
sub
jg
pop
outsb
fisubl
leave
push
jnp
fmull
cli
pop
mov
dec
insb
in
cmp
dec
aas
pop
adc
sbb
dec
sar
fcmovnbe
cmp
jge
aam
xchg
add
mov
jge
pop
sbb
mov
cmp
inc
lret
adc
shrl
inc
into
jge
jnp
rcrb
test
push
fisttpll
mov
leave
cld
dec
adc
loop
fwait
mov
jnp
xchg
push
iret
dec
mov
and
lods
pushf
mov
mov
mov
and
outsb
int
dec
xchg
jge
mov
sub
mov
add
jle
jnp
movsb
pop
mov
dec
cmpsb
pop
inc
jg
adc
lret
add
cmpsb
jg
adc
pop
inc
roll
dec
push
jg
adc
lret
lret
pop
ljmp
push
test
imul
dec
xchg
pop
dec
bound
loopne
push
push
push
push
cmp
loopne
jle
sti
adc
sbb
xor
pop
xlat
push
dec
push
push
jge
pop
enter
ror
push
dec
fidivrs
dec
pop
notl
mov
adc
xchg
pop
mov
xor
mov
dec
or
or
es
pop
sub
ret
adc
pop
dec
inc
or
nop
ja
aam
dec
or
xor
jle
clc
pop
mov
mov
dec
jg,pn
pop
and
dec
lret
hlt
jle
jnp
jge
xchg
shrl
aaa
jg
lea
adc
aam
inc
jae
adc
pop
mov
jne
dec
cmp
sbb
sarl
jle
push
jg
sbb
hlt
jl
sbb
aaa
pop
xor
out
push
mov
rcll
dec
push
jg
adc
lret
loop
jae
jge
pop
outsb
shr
arpl
insl
lea
jg
pop
pop
outsl
push
ror
mov
pop
pushf
sbb
popa
rcll
shll
adc
movsb
shll
gs
cmpsl
jle
jnp
addr16
lods
shll
mov
pop
je
adc
cmp
adc
mov
jge
sbb
or
push
sub
outsb
sub
clc
jle
xchg
pop
mov
dec
pop
rcl
push
dec
int3
jge
adc
adc
mov
adc
mov
pop
jge
adc
loope
pop
dec
xchg
rcl
popa
fisttpl
out
data16
or
adc
jae
outsb
pop
dec
rcrl
adc
or
inc
xor
outsb
cmp
sub
ret
mov
mov
dec
push
cmovnp
lret
pop
pop
shll
mov
cmp
pop
andl
xchg
add
movsl
cmp
pop
jle
inc
dec
pop
dec
mov
inc
sbb
sub
add
pop
lods
xchg
pop
nopl
push
aaa
dec
rcl
push
rorb
jge
xor
adc
shrb
xor
fdivrs
aaa
pop
addr16
lret
bound
pop
mov
xor
dec
movntps
jge
das
pop
pop
and
and
icebp
inc
daa
and
fwait
sbb
fcmovnbe
xchg
mov
mov
fcmovnb
dec
push
push
icebp
push
xchg
adc
dec
dec
push
rcll
rcll
lret
inc
jle
popa
push
aad
pop
dec
pop
shll
dec
xlat
lret
dec
push
leave
jge
pop
mov
ss
in
lret
pop
adc
int
push
iret
pop
sbb
pop
lret
adc
dec
sub
dec
add
dec
add
dec
and
jge
int3
ret
aam
call
icebp
call
jge
jle
in
cld
jle
jnp
repz
adc
roll
push
mov
dec
mov
clc
in
dec
test
dec
pop
jecxz
in
mov
dec
xor
pop
shll
dec
daa
fwait
pop
dec
jg
pop
jne
push
dec
jp
ret
lahf
pop
mov
xchg
fimuls
dec
shl
xchg
inc
mov
xchg
imul
mov
dec
je
pop
sub
sbbl
shll
xchg
dec
fidivrl
mov
mov
mov
dec
mov
mov
push
push
pop
stos
push
push
lods
dec
imul
outsb
jnp
mov
movsl
loopne
cmpsl
push
sbb
out
pop
rcrb
push
pop
jnp
pop
sbb
pop
dec
pop
es
pop
sbb
aad
pop
addl
pop
insl
jp
mov
lret
leave
repnz
and
lds
mov
cmp
jo
add
dec
fdivr
and
pop
lea
cmp
mov
pop
bound
pop
dec
cmc
rcll
insb
adc
lret
xor
pop
in
rcll
pop
sarl
adc
rcll
dec
fistpll
pop
out
rcll
dec
or
push
adc
lret
les
pop
mov
push
sbb
jg
adc
lret
sub
pop
shl
out
mov
lret
jl
push
fimull
pop
test
sbb
dec
fstps
pop
icebp
jg
adc
lret
mov
addr16
loope
dec
shll
dec
xor
pop
pop
adc
lret
addr16
pop
out
rorl
cmp
fmul
scas
mov
pop
dec
adc
bswap
das
jle
pop
adc
jg
adc
lret
nop
jle
jnp
push
pop
or
and
dec
jle
pop
or
jo
dec
roll
dec
leave
idivb
or
or
lahf
push
stos
sub
ja
imul
dec
out
pop
mov
dec
push
pop
js
or
into
jg
adc
add
pop
shll
dec
enter
arpl
push
jecxz
data16
pop
xor
dec
ljmp
dec
dec
or
pop
sbb
add
std
adc
lret
xchg
jle
pop
mov
push
jb
jbe
sbb
xor
mov
lahf
cmp
shll
cmp
add
dec
and
jnp
xor
jmp
xor
dec
push
ss
jge
repnz
inc
into
das
xchg
xlat
jnp
daa
mov
ja
add
dec
nop
dec
cmp
pop
mov
pop
pop
jg
adc
xlat
dec
cs
dec
push
jle
jnp
xor
jmp
lea
dec
xchg
jg
adc
dec
jle
pop
pop
roll
sub
adc
lret
mov
pop
stos
rcrl
dec
js
adc
sbb
xor
loopne
aam
add
in
js
push
es
outsb
dec
idivb
ficompl
fcompl
ficomps
loopne
adc
cwtl
fdivrs
pop
jns
dec
hlt
jnp
int3
adc
inc
mov
sti
mov
dec
fsubrp
or
pop
mov
arpl
cltd
sahf
mov
dec
dec
fmuls
insl
mov
xchg
mov
imul
rcr
imul
dec
mov
mov
jne
or
lret
mov
jge
pop
shrl
pop
jg
adc
lret
out
sbbb
sbb
sarl
dec
adc
lret
int
jmp
mov
adc
jle
pop
es
cld
dec
call
inc
dec
int3
jg
sbb
dec
shll
dec
in
andb
lret
insb
or
fistpl
xlat
test
lret
ffree
sbb
fldt
dec
dec
mov
fstps
mov
xor
les
out
outsl
movsb
dec
jmp
in
adc
jg
adc
lret
push
jle
pop
enter
jg
adc
cmpsb
shrl
dec
or
adc
lret
xlat
jle
int3
jl
test
sbbb
clc
lret
xchg
lods
mov
ljmp
push
cmp
mov
dec
pop
xor
adc
sub
sub
dec
pop
inc
int3
dec
les
jge
pop
js
out
dec
add
lea
adc
pop
rolw
cmp
sub
adc
lret
lcall
inc
fistl
dec
popa
jg
adc
lret
sub
shr
xchg
dec
rcrl
call
fimuls
push
push
mov
push
adc
xor
lret
cltd
mov
lret
push
lods
pop
icebp
lods
jbe
dec
push
xchg
ds
or
jg
xlat
jnp
rcrl
cmp
dec
dec
sbb
pop
dec
ss
lock
jno
pop
idivl
adc
shll
dec
mov
pop
aam
pop
inc
rcl
jmp
adc
xchg
lea
lret
add
jge
pop
xchg
push
jnp
xlat
out
dec
outsb
jg
adc
jge
fisttpll
jl
cmp
adc
pop
push
shrl
rcl
jne
dec
jns
dec
scas
imul
rcll
roll
jbe
sbb
adc
jle
pop
cwtl
sbb
jne
movsl
dec
dec
ret
ja
inc
adc
movd
pop
and
out
cmpl
pop
roll
dec
data16
adc
lret
and
pop
ret
mov
jg
pop
push
imul
outsb
cmp
jg
addr16
rolb
addr16
or
push
mov
push
negb
dec
xchg
shll
dec
mov
shll
into
pop
lock
shl
jl
ret
gs
daa
adc
into
xchg
jle
mov
inc
xchg
outsb
mov
pop
sbb
pop
mov
pop
sbb
dec
shll
aad
in
jg
adc
lret
mov
cmp
jge
pop
or
mov
mov
pop
imul
dec
jb
filds
xlat
movsb
lret
les
cmp
dec
jle
jnp
adc
ret
rorl
pop
adc
adc
sarl
dec
sbb
pop
shrw
dec
sub
pop
test
into
xchg
jbe
cmp
scas
gs
pop
frstor
stos
mov
cmp
dec
arpl
fstpt
bound
jnp
and
mov
leave
rcl
pop
sbb
fisttpll
jns
repz
in
shr
push
in
loope
adc
sahf
xor
aaa
fistl
jp
das
loope
push
lcall
jae
sub
pop
cld
out
sbb
sbb
push
push
imul
lds
dec
mov
fcmovnu
jp,pn
xor
lret
cmp
dec
repz
mov
roll
dec
enter
mov
sbbb
sahf
mov
dec
cs
dec
pop
jl
rorb
xor
jle
haddps
push
sub
jle
jnp
je
xchg
dec
mov
push
lret
push
leave
les
pushf
sbb
dec
rcrl
jg
push
jae
dec
addr16
jnp
rcrb
inc
sbb
int
adc
pop
dec
xor
inc
outsb
leave
insl
pop
ror
popa
inc
jo
adc
jle
pop
repz
insb
cmp
bound
pop
ljmp
movsl
pop
adc
and
mov
dec
push
arpl
clc
push
push
sbb
push
adc
inc
jle
imul
add
iret
push
in
das
jge
sbb
pop
dec
mov
dec
or
ret
push
sbb
sbb
fildl
dec
stos
jge
push
outsb
or
jge
cmp
cmp
push
inc
pop
push
movsl
jmp
shrl
dec
fldt
dec
xor
jnp
and
and
lods
shll
dec
push
xlat
sub
adc
jnp
ficompl
sub
pop
fcompl
loopne
rcrb
jno
test
lret
int3
push
add
dec
int
lret
ret
jge
pop
sbb
in
aas
push
shll
stc
and
mov
mov
int
lahf
dec
or
pop
add
pop
fdivp
pop
imul
push
lret
push
jl
jge
jnp
ljmp
dec
push
fcomi
bound
pop
mov
xor
pushf
dec
imul
xor
insb
xchg
push
push
push
xchg
fidivrs
push
not
cbtw
in
aam
sbb
mov
jnp
nop
jnp
test
mov
mov
rcl
rorl
adcl
je
push
inc
sahf
addr16
sbb
bound
fsubp
repnz
sub
pop
rcrl
dec
mov
adc
fcmovnb
mov
mov
fstpt
pop
ja
nopl
scas
push
sub
cmp
movsb
jge
jnp
cmpsb
pop
pop
sbb
mov
pop
insb
cld
xchg
dec
xchg
pop
pop
add
sub
push
pop
loopne
pop
push
pop
jge
push
shll
push
dec
push
ja
cmp
pop
rcrl
and
icebp
popa
fildl
dec
adc
and
jge
sub
inc
jg
hlt
jno
mov
sub
pop
aam
shrb
cli
cmp
imul
cmovl
pop
adc
cmp
notl
cmp
push
lds
cmp
test
int
addr16
jae
adc
add
inc
sbb
xor
das
or
pop
xchg
cmp
dec
roll
inc
jne
adc
jge
pop
push
rolb
pop
inc
push
popf
js
mov
mov
adc
lods
adc
or
dec
xchg
dec
lods
mov
mov
mov
std
ss
aam
stos
add
add
pop
jge
jnp
cmp
outsb
sbb
fstpt
pop
xchg
jge
xor
inc
cmp
sbb
aaa
pop
popa
shll
dec
stos
jg
pop
loopne
cmp
sub
pop
popa
das
push
daa
lret
mov
js
ret
adc
and
dec
sarl
dec
lret
sub
les
mov
int3
dec
sarl
mov
mov
dec
or
fcmovnb
mov
out
stc
xor
dec
push
and
sbb
fnstsw
pop
pop
adc
fisttps
rorl
xlat
dec
mov
jge
jnp
iret
pop
and
rcll
stos
fsub
ret
lret
xchg
xchg
dec
mov
push
jle
pop
or
sub
dec
lock
lds
adc
jnp
pop
rcl
cmc
mov
jg
adc
push
jle
pop
cld
rcrl
pop
jno
sbb
jle
adc
jle
pop
sbb
fimuls
arpl
sti
pop
imul
repnz
stos
sbb
sub
dec
outsb
std
jbe
adc
ss
lret
lock
rcr
mov
pop
cmp
push
and
lds
adc
or
jnp
xor
xchg
adc
jle
pop
xchg
sbb
fcomi
pop
dec
fidivrs
negl
adc
outsb
jle
jnp
jmp
not
push
dec
insl
in
pop
out
jg
adc
stc
arpl
push
rcl
or
jecxz
inc
in
jns
jnp
popf
insl
and
jnp
jp
jnp
mov
lea
sahf
sbbl
push
mov
dec
mov
jnp
mov
xchg
mov
sbb
in
sbb
sbb
sbb
stos
sbb
lods
sbb
sbb
leave
ret
imul
cmp
jl
pop
xchg
incl
aas
int3
dec
int
jbe
dec
adc
movsl
jnp
cmpsl
jnp
pop
pop
movsb
sbb
mov
fcoml
pop
pop
pop
dec
pop
out
push
pop
cltd
pop
mov
pop
sub
pop
les
cmc
adcb
test
jl
je
and
jns
cs
dec
cmc
bound
dec
mov
jnp
sbb
sti
adc
jecxz
mov
mov
add
scas
sbb
pop
imul
in
pop
lahf
inc
dec
stos
cmp
ds
cli
inc
pop
jmp
in
sbb
mov
xchg
lcall
mov
jle
je
fcmovbe
repnz
fldt
and
adc
mov
add
jge
pop
adc
xchg
incb
test
push
int
sti
xchg
dec
or
jmp
jp
fcom
pop
xor
das
imul
jp
mov
leave
es
insb
fisubrs
jle
jg
cmp
imul
xchg
dec
rcl
stc
ret
jle
pop
mov
pop
pop
fcmovnb
pusha
dec
jle
jnp
cli
pop
pop
rcrl
dec
dec
jge
repnz
add
pop
hlt
push
movsl
negb
push
aad
sbb
sbb
cmp
int3
dec
xchg
jle
jnp
loop
add
int
dec
mov
and
mov
shll
dec
lahf
jle
jnp
call
and
in
lea
scas
lret
push
cmp
and
out
xchg
dec
dec
mov
xchg
pop
jp
add
mov
jnp
cwtl
pop
cltd
shll
or
jg
adc
aam
mov
jle
pop
fistps
aaa
mov
js
lahf
neg
mov
mov
divl
xchg
push
mov
nop
stos
dec
dec
jg
adc
rorl
dec
sbb
pop
and
nop
dec
mov
imul
mov
decl
jl
pop
divl
lret
xor
push
pop
dec
xor
xchg
xchg
scas
mov
outsl
mov
stos
mov
add
jle
shll
dec
adc
cmc
scas
pop
repz
lea
sub
pop
and
dec
ja
inc
sbb
sarl
push
cmp
pop
pop
pop
pop
rcll
inc
push
push
rcl
cwtl
push
push
and
push
dec
dec
jle,pt
jnp
dec
jnp
inc
jnp
inc
jnp
inc
pop
movsl
leave
out
les
cmp
ss
into
adc
dec
pop
jno
inc
arpl
pop
jg
dec
cmp
xor
pop
scas
add
cmp
inc
xchg
call
mov
dec
mov
pop
mov
mov
arpl
lret
mov
dec
add
dec
jbe
dec
je
jge
jge
pop
dec
lods
dec
mov
pop
dec
dec
notl
cmp
arpl
and
leave
inc
jecxz
scas
or
push
cmovnp
add
add
mov
mov
cmp
xchg
aas
mov
inc
es
xlat
xor
jnp
mov
jnp
sub
lea
dec
fildll
mov
xchg
jg
inc
cmp
jmp
and
lret
adc
lret
out
jle
adc
rcll
dec
cmp
push
lret
insl
sahf
fwait
imul
jnp
and
enter
mov
sub
fucomi
mov
sbb
pusha
leave
pop
sbb
cmp
mov
pop
jnp
into
dec
jp
xchg
jp
dec
out
cmpb
mov
imul
popa
push
aam
mov
adc
pop
jnp
xor
ret
sahf
pop
cmp
push
or
fldt
jle
jle
xlat
sub
jne
sub
push
mov
or
sbb
iret
jnp
aaa
and
outsl
lcall
push
enter
adc
or
je
push
imul
pusha
push
pop
pop
ficoml
dec
rcl
or
jg
or
fidivs
sub
xchg
pop
dec
push
rorl
jbe
push
or
push
addr16
dec
adc
or
ss
dec
aam
dec
sub
repz
shlb
sub
dec
std
jbe
dec
adc
inc
sub
sbb
mov
inc
leave
lods
xor
push
pop
dec
xor
mov
repnz
or
xchg
into
or
or
jl
or
rcll
rcll
or
stos
or
dec
fistpll
clc
cmp
out
sbb
cmp
dec
add
insb
jecxz
inc
jnp
sahf
aas
aad
repz
lret
lcall
popf
jl
mov
cmp
add
outsb
sbb
mov
je
sbb
or
jle
dec
int
push
push
sbb
dec
icebp
dec
jle
dec
inc
sbb
sub
dec
jnp
cld
pop
xlat
fwait
insl
aam
imul
jnp
sbb
xchg
pop
fcmovnu
fcoms
pop
inc
mov
xchg
or
push
gs
sbb
or
ret
mov
push
xchg
jle
jne
pop
jle
pop
mov
cmp
jg
pop
jno
push
adc
popf
jle
pop
fcomps
pop
je
fsts
aam
pop
jbe
fistl
adc
push
js
loope
push
push
jnp
insb
pop
mov
dec
push
jle
push
sbb
inc
pop
dec
mov
xlat
addr16
dec
popf
xchg
mov
fiadds
daa
ret
inc
or
arpl
pusha
call
push
xchg
ja
cmp
pushf
shrb
ficoms
mov
jecxz
test
sbb
icebp
stos
sahf
out
dec
jl
jns
jmp
movsl
cmc
sub
pop
and
and
mov
jge
incb
loop
inc
cmp
aam
icebp
ja
lret
imul
fiadds
pop
mov
pop
jg
inc
jge
xlat
or
push
enter
movsb
xor
les
fisttps
mov
mov
mov
jno
lret
mov
adc
idivb
jnp
inc
aad
push
movsb
lahf
mov
inc
sti
cmp
add
fwait
push
jae
insb
jge
psllq
push
insb
mov
inc
or
imul
jg
push
cmp
in
xchg
push
nop
xlat
in
out
pushf
les
rcll
xor
aaa
adc
jge
mov
imul
aaa
lret
pop
cmp
dec
push
imul
fists
fldt
xchg
lcall
mov
sbb
not
daa
mov
xchg
push
call
pop
in
cld
pop
xchg
arpl
dec
jnp
and
dec
int
imull
inc
repz
push
out
gs
cmp
fwait
je
ret
xchg
jnp
push
popf
cmp
dec
pop
inc
inc
push
or
popf
lret
loopne
scas
outsb
mov
movsl
push
hlt
adcl
les
pop
les
lret
cmp
imul
sbb
ja
mov
fistpll
xchg
arpl
mov
xchg
fstl
std
and
stos
sbb
adc
inc
pop
push
mov
push
xor
adc
jmp
lahf
push
mov
cwtl
nop
repnz
lea
push
sbb
es
inc
aaa
or
inc
dec
out
sbb
cld
insl
lods
dec
lret
rcrl
dec
xchg
aas
int3
addr16
jl
and
pop
xor
pop
lds
inc
cwtl
ja
dec
sbb
push
test
fcoms
xchg
inc
adc
enter
or
add
cmp
mov
and
or
lods
or
sbb
pusha
inc
lods
jl
jnp
sub
lcall
lret
iret
stos
jbe
pop
lret
idiv
sub
test
push
inc
ds
movsb
jno
jae
scas
insl
std
ja
shrl
xchg
or
mov
jno
adc
xchg
sbb
iret
mov
fs
xlat
pop
xor
test
or
pop
popa
push
mov
dec
daa
xor
in
das
lahf
jecxz
cmp
push
lods
adc
inc
jns
cmp
or
pop
xor
rorb
add
imul
in
or
imul
push
out
jnp
je
pushf
mov
inc
sbb
push
and
inc
bnd
enter
or
mov
push
mov
bound
pop
shrb
dec
jne
sbb
add
sub
xchg
daa
lret
mov
mov
mov
jl
fbstp
xchg
jnp
cmp
xor
xchg
pop
ret
stc
pop
pop
ds
pcmpgtd
pop
dec
sbb
pop
cs
or
cmp
pop
fdivl
out
inc
incb
mov
iret
pop
movsl
jmp
dec
mov
sbb
int3
mov
aas
ljmp
inc
cli
jge
inc
inc
adc
bnd
minps
sub
mov
pop
lds
dec
insl
push
dec
addr16
sbb
xchg
mov
aaa
jge
ffreep
inc
or
jnp
push
imul
mov
pop
int3
xor
sub
mov
popf
loop
sub
lods
push
pop
inc
inc
popf
lcall
lret
push
je
xchg
aam
arpl
pop
fcmovbe
sbb
test
sub
push
filds
jg
inc
pop
dec
mov
xchg
push
fdivrl
pusha
inc
popf
cli
int3
pop
mov
pop
sbb
stc
push
pop
xchg
pusha
and
adc
xchg
inc
pop
orb
cmp
pop
xchg
pusha
jge
cld
jl
or
pop
and
cmp
sbb
dec
push
sub
int3
pop
jl
pop
popf
xchg
movsl
pop
out
dec
mov
mov
loope
jl
or
push
mov
cwtl
pusha
add
cmp
fstpt
popf
lods
cmp
and
pop
jp
and
pop
outsb
sbb
aas
lret
jp
int
insl
jmp
sub
in
iret
pop
mov
fcompl
fldz
mov
pop
loopne
mov
imul
and
sahf
xchg
xchg
or
lock
test
xchg
jno
mov
out
subl
sbb
outsl
mov
ss
ljmp
aam
xorb
lcall
sbb
sub
sub
add
jecxz
lret
cmp
fdivrs
inc
loop
mov
imul
call
dec
pop
xlat
dec
xchg
dec
push
cmp
add
fldt
pop
aaa
insl
push
and
dec
sub
lea
insl
pop
aaa
xchg
push
dec
sbb
pop
cmpsl
pop
lret
dec
mov
push
mov
push
pushf
dec
sub
dec
jnp
cmp
inc
cmp
xchg
pop
dec
cs
inc
sub
jge
mov
xor
jge
sub
dec
jnp
dec
pop
sub
fiaddl
sub
fldt
dec
fldl
jge
and
fnstenv
dec
insl
xchg
inc
push
popa
mov
dec
mov
fisubrl
arpl
sbb
pop
and
inc
ficomps
dec
sbb
sub
push
cmp
fs
arpl
jle
sbb
mov
sbb
push
pop
and
pusha
cmp
addb
stos
xchg
xchg
js
test
lea
xchg
mov
dec
sbb
int3
aad
push
dec
lret
add
push
xor
cmp
xor
or
pop
xchg
loopne
push
fdivrl
js
lret
outsl
mov
pop
int3
push
imul
dec
sub
sbb
fnsave
sahf
jbe
enter
arpl
shlb
add
pushfw
xor
lret
sub
pop
enter
cli
shrb
rcrb
stos
dec
xchg
add
repnz
sub
dec
inc
dec
adc
add
sub
in
dec
add
lret
jecxz
inc
sti
sub
xchg
push
mov
sub
out
inc
pop
mov
ficompl
shlb
pushf
rcl
sub
cli
push
rorl
jl
cmc
fsubrl
sbb
cld
popa
push
or
adc
pop
fcomip
jl,pt
sub
sub
clc
inc
push
in
ss
out
xor
cltd
daa
jge
cmp
outsb
jnp
sub
push
dec
mov
out
cmp
lahf
lock
push
sub
je
call
xor
sub
dec
mov
cli
stos
mov
and
je
cwtl
fs
rorb
add
arpl
jl
mov
outsl
mov
shl
cwtl
insl
cmp
push
pushf
pop
test
fiadds
dec
test
xchg
fdivrp
cwtl
fcomp
movsl
xchg
mov
push
xchg
cmp
pusha
mov
int3
push
bound
nop
pop
inc
mov
jp
cli
push
jl
pop
dec
subb
cld
or
jl
xor
sbb
mov
and
adc
pushf
inc
mov
cmp
lcall
loop
inc
mov
pushf
xor
mov
das
es
xchg
inc
inc
mov
cwtl
rcrl
stos
push
dec
mov
pop
push
xchg
idivb
stos
mov
mov
jl
sub
mov
data16
stos
scas
clc
dec
inc
jns
sbb
mov
push
and
stos
jg
int3
sbb
mov
pusha
pop
int3
xor
das
pop
jecxz
pushf
xor
decb
cli
lods
cmp
neg
inc
jge
or
adc
and
jecxz
push
push
xor
cld
jl
mov
mov
pop
lea
dec
test
pop
mov
js
jmp
packuswb
js
pop
and
cli
sbb
in
adc
cmp
int
stos
xchg
sbb
dec
jge
pop
pop
arpl
int3
popf
arpl
mov
xor
mov
arpl
shrl
sub
mov
dec
jge
fistpll
aaa
add
pop
pop
push
dec
aam
jnp
fincstp
dec
push
cmp
or
ja
pop
jns
daa
cmc
popf
inc
inc
cmp
pop
arpl
aad
popa
imul
dec
jp
pop
sbb
pop
out
loope
mov
pop
xor
lds
stos
fsub
fcompl
pop
sarb
xorl
in
sar
icebp
push
repz
mov
fidivs
in
and
sbb
jb
fldt
test
pop
imul
push
sbb
fsubp
ss
scas
mov
sbb
or
pop
sub
lret
pop
mov
jne
pop
dec
sbb
es
les
pop
xorb
iret
sbb
sub
ds
or
outsl
sbb
das
adc
pop
push
data16
and
adc
xor
test
dec
pop
xor
push
sbb
jmp
fstpl
pop
lret
add
mov
lock
pop
xchg
mov
out
sub
je
mov
xchg
pushf
mov
jl
pop
fists
pop
and
xchg
sub
jo
jo
sub
dec
cmp
aas
pop
cs
dec
pop
pop
pop
push
pop
push
pop
add
addb
rorl
and
and
roll
jo
jle
mov
mov
js
push
inc
xor
jno
clc
jg
lahf
lods
or
or
pop
dec
add
add
sbb
cmpsl
sbb
add
sbb
push
sbb
cmp
pop
inc
lods
inc
or
or
xor
push
or
push
push
cmc
push
mov
mov
call
out
je
pop
and
add
add
add
adc
add
sbb
and
pop
xchg
das
mov
mov
iret
or
ja
divl
out
repz
fcom
mov
fadd
insl
mov
in
jecxz
jg
js
adc
jbe
jbe
orb
jmp
add
inc
aas
inc
mov
pushf
iret
cmp
lock
inc
inc
add
add
push
xchg
jecxz
cmp
push
iret
jg
aam
ds
jbe
jbe
jbe
js
fsubs
shlb
mov
jmp
cmpsb
push
cmp
jl
push
mov
fnstcw
outsl
mov
jmp
adc
ret
inc
je
add
add
or
pop
jmp
and
sti
add
mov
adc
inc
jmp
roll
inc
lods
dec
sbb
push
sti
xlat
je
adc
int
mov
fisttpl
inc
jecxz
iret
jg
push
add
mov
data16
jo
jl
jg
inc
aam
push
int3
add
jmp
iret
imul
mov
push
sarb
jae
cld
mov
xor
push
jno
dec
dec
sub
push
fiaddl
rolb
fisttpll
dec
cltd
jb
lods
popf
test
pusha
pop
js
sbb
sub
cmp
push
add
and
faddl
lret
pop
cld
sbb
in
add
cmp
cmp
jmp
inc
mov
cmp
inc
ret
jl
xchg
data16
pop
data16
lret
sahf
cs
nop
pop
int3
pop
mov
fnstcw
jo
push
rcr
pop
pop
add
mov
sub
push
push
sbb
or
outsb
pop
pop
xor
fidivrs
testb
lcall
sub
sub
shr
push
fcoml
push
inc
sub
dec
jns
inc
jg
sub
push
insl
jnp
inc
cmpsb
inc
mov
dec
insb
and
fiaddl
orl
fcomps
decb
loop
push
mov
mov
fucomip
iret
outsb
push
fdivrl
dec
insl
insl
es
fwait
sbb
add
xchg
fmull
addr16
jg
add
push
jge
dec
inc
push
adc
fs
sbb
out
mov
lcall
sar
stos
xchg
sbb
jle
out
dec
pop
add
adc
jbe
aam
pop
fsubs
cmp
leavew
repnz
and
movsb
sub
fnstenv
add
imul
jecxz
and
cld
pop
add
or
xchg
sti
jns
aam
lcall
repnz
adc
fdiv
jo
pop
pop
shrb
pop
fld
adc
cli
or
les
int3
mov
and
shlb
out
and
mov
test
push
cmc
cld
addr16
pop
push
mov
push
adc
push
lcall
int
jl
ret
and
cmp
xor
lret
jnp
mov
and
lock
inc
jp
add
sub
fdivl
mov
lock
mov
inc
xchg
es
mov
cmp
roll
push
jmp
test
cmp
imul
and
and
xchg
rcrb
loop
mov
sub
push
push
ret
add
clc
push
sbb
cmp
in
popa
loopne
mov
les
out
in
inc
xchg
test
pop
test
ret
and
mov
rcrl
test
enter
adc
jns
dec
push
int3
pop
fcmovbe
push
adc
bound
into
in
inc
xchg
sub
xchg
ficoms
sbb
fwait
out
push
pop
lods
cmpsb
movsb
roll
push
pop
sub
adc
jo
sbb
aad
push
mov
idivb
xchg
pop
aam
mov
dec
nop
ret
cli
stos
test
movsb
pop
add
adc
test
mov
push
push
hlt
lret
adc
pop
popaw
fidivl
inc
shlb
fsubrl
inc
dec
scas
enter
cli
cmp
iret
into
inc
jb
pop
clc
mul
and
or
bnd
int
ss
call
std
jl
cwtl
pop
add
ret
fsubrs
jno
js
jno
adc
cli
lret
push
xchg
fadd
sbb
push
mov
sbb
cli
xor
pop
dec
rcrb
loop
xchg
repz
push
aad
adc
cmc
pop
pavgb
jp
pop
jle
cmp
lods
pop
or
xchg
fmuls
cli
pop
adc
in
stos
mov
mov
lods
in
jne
mov
mov
fstp
xchg
lock
cmp
xlat
cmp
or
loopne
outsb
outsl
es
loopne,pn
fwait
into
cmc
jb
pusha
jle
jbe
stos
fwait
loop
test
cmp
pop
call
movsb
mov
or
loopne
mov
fcmovne
and
int3
jl
jnp
pop
aad
sbb
sub
addb
popa
add
mov
pop
mov
push
dec
test
sti
add
rcrb
mov
inc
mov
into
test
fnsave
mov
sub
lcall
ffreep
add
aas
adcl
js
popf
mov
xlat
jo
or
sbb
adcb
call
cs
push
lods
nop
imulb
rcrb
xchg
int3
mov
into
stos
xchg
loopne
call
xor
incb
daa
cmp
pop
fdivl
rorb
lods
dec
mov
push
pop
addr16
pop
mov
dec
push
out
pop
sti
ds
xor
pushf
or
lock
add
pop
movsl
push
cwtl
mov
div
cmp
lret
add
sub
or
addb
push
mov
push
pop
mov
mov
dec
pop
pushf
loopne
push
inc
insb
mov
fldt
shlb
lea
xor
inc
pop
lds
add
ret
imul
or
pop
or
jmp
cmp
mov
pop
into
push
scas
dec
imul
fsub
aad
rcrl
and
rcll
test
popf
or
mov
sub
enter
lock
cli
pop
out
out
xor
popf
xchg
rcr
push
aad
push
call
inc
mov
or
pop
in
out
movsl
push
pusha
pop
cltd
or
aad
cmp
push
in
dec
shll
mov
loop
inc
mov
add
inc
shrl
jbe
push
lret
fstl
cmp
insl
pop
push
or
imul
push
sbb
sub
push
inc
popa
or
sub
pop
cs
push
mov
imul
xorl
jnp
cmp
inc
and
add
inc
fimull
jne
fisubrs
gs
push
pushf
aas
mov
sbb
cmp
add
jp
xor
cmp
fs
sub
jo
int
ds
loope
fdiv
in
call
mov
sbb
jecxz
push
cwtl
xchg
stos
dec
dec
lea
mov
clc
dec
jecxz
sbb
mov
inc
push
cld
lahf
jl
inc
xchg
jb
jle
fs
adc
and
aad
jl
leave
or
pushf
or
xlat
add
jo
cmp
pop
aad
jnp
icebp
sub
dec
xchg
push
je
andl
int3
sub
outsb
popa
xchg
xor
sahf
cmp
shlb
mov
dec
loopne
dec
pop
into
jbe
inc
fsubrs
mov
pop
jnp
std
js
pop
dec
and
cmp
sbb
ficomps
inc
or
mov
insb
add
fucomp
mov
sub
dec
dec
dec
jo
dec
cmp
dec
mov
jge
push
pop
push
pop
inc
cli
adc
les
xlat
and
xchg
imul
and
pop
dec
testb
out
add
or
ljmp
cmp
fsubrl
xchg
ds
push
push
pop
or
xchg
sti
xor
insl
mov
mov
push
pop
imul
sub
decb
fnsave
lret
sub
xor
out
es
insb
and
pop
sbb
pushf
sub
les
xchg
rcl
rcl
mov
xlat
xlat
sbb
push
cmp
and
adc
mov
popa
adc
std
add
push
int3
adc
sar
cmp
sub
inc
insl
shr
jnp
cmp
aad
or
daa
add
sub
jmp
icebp
cwtl
or
xor
cld
inc
icebp
sub
xchg
fdivrs
lret
int3
adc
add
mov
push
dec
popf
clc
xor
in
ljmp
xchg
push
lods
popf
out
or
jo
ror
xor
dec
mov
stos
lods
mov
sub
mov
std
loopne
sub
mov
jg
dec
pop
mov
repnz
adc
arpl
out
gs
jno
inc
adc
jnp
pusha
mov
sahf
push
fbld
pop
dec
aad
fdivrp
popf
call
fidivrl
test
fcompl
fidivrs
mov
movsb
stos
scas
lret
xchg
int3
jb
sbb
inc
or
nop
stos
mov
dec
push
mov
and
sarb
lret
inc
or
or
mov
jge
jbe
loopne
sbb
dec
nop
testb
push
sbb
push
sub
clc
inc
adc
mov
pusha
inc
ds
xor
and
xchg
pushf
shrb
mov
and
sub
ret
cld
sahf
test
repnz
xchg
stos
mov
in
scas
mov
dec
nop
movsb
push
push
dec
or
pop
loopne
call
inc
inc
aam
jno
arpl
add
pop
imul
pop
xlat
pop
int
mov
push
add
dec
push
leave
int
adcl
scas
cld
and
push
int
pop
mov
je
dec
pop
sbb
push
push
sub
ficompl
or
jne
dec
inc
pop
test
test
es
sbb
inc
cmova
add
fdivr
jge
pusha
pop
sub
es
mov
sbb
mov
inc
mov
jg
rcll
mul
and
jae
push
cmc
out
adc
mov
pop
mov
jo
in
pusha
aam
dec
pop
outsl
pop
repz
popf
mov
into
cmpsb
pop
or
rcrb
xchg
sub
jne
sub
pop
xor
fwait
test
mov
and
pop
pop
mov
cmpsb
add
adc
aam
jmp
jbe
popf
push
dec
andb
or
adc
push
pop
pusha
sbb
push
jl
sbb
push
mov
in
mov
and
fildl
push
push
push
cmp
repnz
sub
jae
xchg
std
push
sub
lds
dec
adc
jae
ret
dec
mov
mov
mov
rcrl
daa
xor
fldt
xchg
lods
or
js
jg
jmp
mov
daa
sub
insl
or
js
pop
mov
dec
test
mov
pop
jb
ret
call
fsubs
pushf
mov
movsl
jl
test
dec
enter
inc
ss
push
daa
cwtl
xchg
fwait
and
and
js
push
jbe
dec
out
cmp
fnstsw
rcr
cmpsl
loop
xchg
cmpsb
push
outsb
ret
fs
sbb
jnp
push
addr16
popf
out
out
dec
mov
gs
sarb
pop
add
jl
cltd
in
repz
loopne
add
push
inc
out
sahf
push
test
fisttpll
ret
adc
out
loopne
insl
insb
rcr
shrb
push
mov
jmp
out
icebp
aam
dec
or
cmpb
xchg
js
push
pushf
insb
jnp
sbb
dec
test
fldt
mov
fcomip
cwtl
mov
xchg
cli
cmp
fsubs
out
cmp
je
mov
in
ja
inc
test
ficoms
lcall
mov
les
sbb
in
icebp
jno
jnp
mov
arpl
adcb
cmp
sbb
ficomps
or
mov
loop
and
in
cmpsl
loope
pushl
insb
lret
sub
ljmp
inc
popa
adc
pop
cmp
xor
cmp
sbb
lods
fwait
or
sub
rcll
push
adc
data16
push
and
or
imul
daa
and
push
jne
pushf
push
mov
negb
sbb
lods
aas
sbb
pop
push
fdivrl
pop
pop
inc
sahf
mov
or
push
outsb
std
dec
repz
fidivrs
into
push
out
pop
pop
pop
pop
gs
or
imul
negl
add
push
sti
pushf
cmpl
inc
dec
fiaddl
fidivrs
jle
xor
sub
and
gs
pop
dec
xor
push
inc
push
fisubrl
pop
loopne
push
int3
jb
dec
bound
clc
or
and
push
mov
pop
pop
cld
cmpl
cmp
dec
aas
push
and
dec
es
sub
jl
into
insb
push
add
and
aam
jo,pt
xchg
ja
mov
mov
hlt
push
sub
cs
cmp
rcll
pop
lcall
mov
and
leave
in
mov
pop
push
sub
adc
fcmovu
pop
enter
pop
mov
sarb
js
dec
jo
clc
fsubr
mov
fldl
pop
rcrl
lock
push
dec
faddl
ss
sub
cs
dec
inc
arpl
imul
push
out
xor
pop
xlat
inc
fsubrl
aam
sbb
sub
push
sbb
rcll
pop
or
stos
fdivrs
int
and
dec
jnp
rorl
ljmp
addr16
psubd
inc
inc
cs
dec
mov
cwtl
js
pop
ret
faddl
lock
int3
or
mov
stos
vmread
sbb
rcll
push
pop
dec
push
es
arpl
pop
mov
pop
arpl
andb
mov
and
push
dec
fidivrs
xlat
push
cmp
enter
andps
or
loopne
mov
fcoml
cmpsl
mov
or
loope
pop
cmc
add
jo
lret
cmp
sbb
ret
mov
fs
in
insl
lret
adc
cli
push
fdivrl
push
les
xor
or
lret
xor
int
pop
fcmovnu
clc
push
shr
add
popf
sbb
pop
xor
aam
aas
lret
pop
popf
and
and
aam
jnp
fwait
in
jno
sbbl
imul
jbe
paddb
leave
ljmp
pop
cmpsb
push
xchg
jge
adc
fcom
jno
adc
push
add
test
sahf
cmpsl
dec
fwait
sbbl
sub
mov
sbb
cld
push
dec
ret
add
sbb
into
mov
pop
xchg
cli
cmp
test
pop
cmpsl
cmpsb
imul
aam
movsb
xchg
cmp
cmc
cli
sbb
mov
mov
ret
push
mov
pop
mov
sbb
inc
or
push
rcl
pop
stos
xor
int3
add
std
repnz
push
jmp
clc
dec
mov
lods
mov
stc
mov
fcoms
je
push
cltd
loop
mov
loope
int
in
adc
aam
and
pop
push
xchg
ficoml
xor
jle
imul
rolb
and
inc
xchg
call
scas
rclb
push
xor
sahf
cmpsb
lea
adc
pop
call
cmpsl
ljmp
add
or
ds
loop
pop
call
push
add
mov
or
jmp
xchg
in
cmp
repz
lock
xchg
les
cmp
xor
fwait
pop
into
lret
pop
add
sbb
push
rcrb
dec
ret
pushf
sar
adc
insb
cmc
aas
repnz
push
lods
das
inc
jg
insb
mov
negl
lock
push
mov
fsub
les
or
mov
lahf
sarb
pop
int3
sbb
fcoms
fs
mov
lret
into
outsb
mov
pop
enter
push
inc
fsubrs
inc
jl
jns
add
and
stos
ja
jno
push
cmpsl
jns
mov
fsubl
fwait
or
dec
shl
cmp
inc
push
sahf
cltd
pop
popf
or
fisubs
pop
inc
lret
shrb
dec
rcrb
xchg
aas
out
xor
mov
dec
lcall
int3
and
adc
jle
lock
xlat
in
cmp
imul
into
adc
add
ja
dec
pop
pop
in
push
adc
aam
and
sbb
pop
and
xchg
loopne
cwtl
lret
mov
jp
enter
push
adc
pop
lahf
call
inc
cmp
xchg
cld
cmp
ret
push
sbb
and
xor
pop
push
jecxz
sub
dec
inc
scas
enter
push
sub
or
cmp
dec
mov
jno
add
lret
sbb
mul
and
out
inc
jg
clc
cmp
aad
adc
lods
hlt
cmp
adc
mov
push
add
stc
sar
fimuls
dec
arpl
sbb
inc
bound
fimuls
loope
aam
test
out
cmp
dec
push
pop
fidivs
out
popl
fmulp
push
jp
and
mov
cli
sub
cmp
mov
mov
mov
inc
jne
lea
mov
mov
mov
loopne
fmul
test
leave
mov
add
push
divl
adc
dec
ficoms
push
mov
rclb
cltd
pop
jnp
mov
xchg
hlt
scas
xchg
sahf
adc
xlat
test
rep
pop
pop
fcmovbe
xor
es
push
fsubr
clc
sbb
add
jne
jp
adc
rcrl
ret
ss
push
push
rcrb
clc
scas
mov
mov
in
jmp
sbb
pop
push
mov
in
sbb
loopne
cmp
icebp
lahf
fcompl
ret
push
pop
xor
adc
adc
xchg
cmp
push
sub
xchg
push
pop
cmp
push
pop
jg
in
push
mov
mov
enter
mov
inc
es
or
aam
test
or
in
ljmp
jno
rclb
sahf
lock
sbb
jb
fwait
out
dec
movsl
pop
mov
int
push
andb
jbe
pop
aam
cwtl
bnd
outsl
in
mov
cmp
xchg
pop
test
dec
test
fcoml
dec
xchg
jmp
jecxz
adc
aam
das
push
dec
push
mov
pop
scas
add
xchg
pop
adc
mov
push
ficomps
xchg
cmp
pushf
push
mov
push
cmp
leave
jg
pushf
jle
andb
cld
andl
fs
movsb
sbbb
subl
pop
imul
cmp
or
adc
adc
xchg
fldenv
lcall
lods
popf
dec
inc
add
dec
adc
or
mov
fdivrl
repz
cmp
ret
or
icebp
jns
and
lea
push
loopne
testl
sbb
push
popa
jmp
jno
cwtl
fcom
das
sbbl
pop
shll
lret
jo
aam
je
ror
fs
sbb
iret
or
cmp
push
ret
fs
loope
cmpsl
lods
je
mov
and
jno
pushf
in
jl
je
dec
and
sar
push
push
mov
sub
push
in
inc
pop
scas
dec
adc
add
pop
pop
out
jno
push
inc
cmp
mov
push
fstpl
mov
aam
xchg
shlb
fbld
subl
jmp
std
pop
fcmovnbe
push
inc
or
scas
sbb
mov
fucomip
mov
or
daa
push
movsl
pop
add
push
or
scas
inc
mov
pop
sub
andl
inc
xchg
test
xchg
daa
jbe
jns
jo
dec
les
push
cld
sbb
add
pop
and
mov
stos
popa
jg
dec
push
dec
movsb
dec
and
dec
mov
in
and
lock
inc
hlt
adc
push
inc
in
push
mov
pop
or
pop
repnz
dec
mov
sbb
inc
jge
int3
dec
pop
in
and
pop
es
dec
dec
cmp
push
mov
xchg
mov
lods
cmpsb
scas
mov
arpl
in
dec
cmp
pusha
out
add
stos
subb
dec
xchg
fidivs
pop
rcll
nop
arpl
lret
pop
push
dec
sbb
add
lcall
daa
test
pop
pop
mov
cs
sub
in
add
inc
push
scas
pop
int3
dec
icebp
cmpb
push
sbb
or
insl
mov
pop
js
dec
pop
jle
sbb
pushf
xchg
push
push
jmp
pop
lcall
cmc
push
and
ffreep
pop
push
inc
arpl
adcl
or
aam
pop
les
hlt
push
push
in
xchg
fcoml
rorb
mov
lock
dec
lahf
fadds
lret
clc
arpl
inc
mov
add
pusha
test
xchg
iret
dec
mov
ja
dec
dec
jp
xor
inc
test
mov
cltd
jnp
lods
ret
dec
js
ret
pushf
add
pop
lock
es
mov
jae
xchg
dec
mov
aad
pop
mov
fdivl
pop
pop
clc
or
mov
push
sbb
rorl
or
mov
fdivl
je
mov
js
xchg
jge
adc
outsb
into
sti
jo
dec
sti
push
ljmp
fcmovnbe
sbb
cmc
push
mov
cmp
test
pop
xchg
and
cld
and
paddd
les
or
iret
dec
cmp
sti
cmp
mov
inc
jecxz
inc
xor
xor
repz
pcmpgtw
popf
xchg
or
cli
lods
sub
daa
iret
dec
and
sti
es
nopl
adc
mov
dec
xchg
jle
cmp
sbbb
mov
loop
out
inc
push
ror
push
lret
imul
insl
les
jl
enter
shl
daa
iret
dec
dec
sti
add
jno
xchg
lret
sti
clc
lods
popa
push
fs
int
cmp
mov
sbbb
movsl
js
jbe
lcall
addl
push
adc
or
or
insl
lods
cmp
xor
mov
jns
jno
push
into
sti
mov
sbb
outsb
cld
mov
or
mov
fwait
test
sbb
jl
xor
scas
ljmp
xor
in
cmpsb
shll
pop
int
int3
fidivrs
jg
push
push
push
xchg
xchg
jl
inc
mov
jnp
adc
pop
pop
subl
inc
outsl
pop
int
repz
and
sbb
add
sub
jno
outsl
jl
fbstp
sbb
iret
or
cltd
call
arpl
sbb
in
pop
jnp
pop
pushf
and
push
rorl
pop
mov
and
addr16
pop
dec
pop
fsubs
insl
das
jmp
fwait
and
add
pop
daa
xor
jge
cmp
cld
add
xor
divl
fnop
shlb
xchg
xchg
and
daa
daa
iret
lret
push
je
or
in
imul
sbb
ds
loop
iret
push
aad
push
and
fcompl
ret
mov
jns
jg
daa
iret
lret
jmp
sub
repz
aam
adc
pop
jl
sbb
aam
out
negl
or
xchg
mov
xchg
dec
dec
repnz
clc
jg
push
xchg
xor
cmp
lods
inc
rcrl
adcl
xchg
jns
pop
xchg
mov
push
mov
push
ljmp
add
cmpsl
xchg
xchg
pop
xchg
add
fldl
mov
push
xor
cmp
fwait
or
jo
fstpt
push
inc
shl
lods
add
shll
daa
iret
lret
jmp
lods
xchg
add
ficoms
xor
or
fistps
fs
jbe
xchg
fstpl
sbb
xchg
jmp
xor
jbe
adc
dec
lret
rcrb
pop
mov
cld
pop
inc
std
idivb
stos
add
scas
ficompl
dec
sti
push
scas
add
or
cmp
iret
mov
sbbb
test
sub
rcl
sub
arpl
jnp
movsb
std
sti
jb
les
push
fcmovb
neg
daa
pop
addr16
incl
rclb
es
dec
jle
aaa
jp
dec
pop
test
stos
jno
push
mov
add
add
cwtl
ljmp
jecxz
dec
mov
ds
mov
push
ljmp
out
repnz
adcb
adc
pop
push
shr
mov
pushf
sub
sbbb
xor
shrb
adc
icebp
push
pop
cld
add
cmp
aam
push
lods
jo
scas
mov
mov
inc
mov
insl
lods
in
out
cmp
adc
iret
jae
cmpsb
daa
iret
lret
and
pop
mov
lret
mov
pop
shrl
fcmovnu
inc
lret
adc
pop
pop
xorb
inc
movsb
dec
fstl
loopne
idivl
dec
mov
mov
daa
rcll
iret
lret
je
add
pop
push
popa
sbbb
pop
sbb
aad
add
pop
adc
dec
pop
fcom
inc
es
movsb
pop
push
push
scas
into
pop
jg
imull
jg
pushf
add
inc
add
pop
daa
rorl
mov
int3
adc
js
decl
cmpsb
mov
pop
test
jg
and
jge
pop
jmp
iret
lret
pop
lcall
add
cmpb
dec
pop
inc
mov
and
gs
push
or
mov
test
rorl
mov
stc
adc
std
notl
test
nop
stos
imul
pop
cmp
pop
outsl
imul
jmp
je
and
fwait
or
push
pop
es
adc
sub
in
into
movsl
xor
jae
cmp
pop
push
push
sarb
jmp
scas
pop
sbb
mov
add
stos
scas
mov
push
test
xor
pop
aad
pop
pop
pop
xor
sahf
pusha
shl
sbb
dec
stos
or
cmp
inc
aam
mov
mov
addr16
adc
jl
push
jle
sahf
add
jb
dec
pushf
pushf
adc
js
lds
iret
lret
mov
pop
repz
iret
dec
pop
into
mov
pop
jbe
push
sbbb
jno
or
roll
pop
jecxz
stos
mov
dec
les
das
rorl
bnd
add
rcll
cmpb
xor
sahf
ss
sbb
adc
mov
mov
push
xchg
and
sub
fisttpl
or
fdivrl
ds
jecxz
daa
rcll
pop
dec
push
mov
push
dec
xor
push
jbe
add
pop
dec
pop
mov
cli
jg
decl
mov
repnz
sub
mov
sahf
clc
shl
daa
pop
pop
adc
lahf
out
mov
loop
pop
jg
dec
int3
add
sbb
add
movsb
adc
pop
jg
pop
push
movsb
inc
xor
cmp
out
xor
inc
pusha
into
and
mov
sahf
mov
add
dec
dec
inc
jmp
scas
pop
sbb
cld
jmp
inc
stos
popa
xor
popf
movsb
iret
lret
mov
ret
pop
adc
jno
dec
movsb
cmpsb
jno
dec
cmpsl
into
push
push
lods
push
cmpsb
inc
dec
cmp
push
cli
aam
test
jnp
dec
sbbb
loopne
fcoms
push
ja
mov
sbbl
arpl
xor
je
mov
mov
push
mov
xor
popf
sbb
and
das
pop
lea
adc
mov
jne
stos
sbb
push
das
cmpb
ret
pop
jae
lods
dec
fiaddl
jl
jbe
pop
adcb
pop
pushf
dec
jne
fmulp
sahf
mov
dec
test
repz
adc
push
add
jnp
lods
sbb
pop
ljmp
loope
mov
movsb
cmpsb
psrld
mov
dec
mov
pop
dec
or
xlat
negl
push
jecxz
xchg
lret
imul
arpl
out
mov
add
ret
mov
lods
movsl
das
cmp
jnp
arpl
or
pop
mov
pop
cmp
inc
dec
sbb
fistps
adc
sub
cld
pop
and
pop
or
outsb
int
aam
rcll
pop
and
dec
fwait
outsl
sub
icebp
pop
fcmovb
inc
mov
dec
test
cmp
rorb
shl
lock
inc
loop
dec
in
lods
fsubs
jle
jns
jb
push
shrb
out
movsb
jl
pop
xor
mov
arpl
or
mov
dec
sub
shr
dec
ret
push
jnp
jnp
jle
shlb
push
mov
jo
pop
enter
push
bound
mov
and
pop
sbb
adc
jg
cs
fimull
pusha
dec
dec
lods
int3
fstl
jl
push
into
mov
les
ret
dec
inc
notb
into
cld
cld
in
lret
dec
test
gs
sub
and
dec
dec
loopne
dec
test
mov
jb
movsb
popw
icebp
es
paddusb
int
push
sbb
adcb
sbb
adc
lods
jge
loop
or
jnp
and
dec
mov
ds
dec
push
cmpsl
and
mov
push
das
jno
scas
hlt
mov
push
sbb
lret
aam
inc
push
aam
dec
int3
fsubrl
cmp
pusha
or
adc
mov
pushf
dec
mov
cwtl
rorb
fdivrs
cmp
sub
xchg
dec
test
xchg
in
fisubrl
jecxz
jl
inc
pinsrw
adc
jnp
in
jl
dec
in
jae
push
nop
lret
mov
jl
mov
cmpsb
pop
in
or
pop
sub
or
stc
je
mov
sub
xor
es
rcl
rorb
jg
adc
lret
sahf
jl
mov
pop
jns
hlt
jno
xor
shl
inc
pushf
sub
sti
pop
inc
stos
sbb
push
push
sub
out
lods
and
push
push
dec
adc
add
pop
cld
lcall
jle
jbe
cli
jge
add
inc
fistps
dec
mov
dec
cmp
in
jl
ss
and
imul
xor
daa
sub
aaa
push
popf
sbb
rorl
and
int3
aam
into
pop
enter
out
lret
fcompl
fdivs
cld
fstp
fidivs
in
imul
sub
or
push
repz
iret
dec
cwtl
fs
ret
lea
shr
jnp
pop
scas
push
push
jg
daa
stc
aam
aaa
jae
repz
adc
jmp
add
xor
insb
dec
push
ficoml
fcmovnbe
rcr
int3
bound
and
out
push
xchg
sub
lahf
decb
clc
pop
mov
push
stos
lcall
adc
or
jle
or
xor
inc
dec
insb
adc
jae
adc
je
push
test
fists
insl
dec
repz
imul
sbb
inc
cld
push
lods
mov
cmp
push
cmp
push
fsubrl
sbb
cmp
loop
or
nop
into
pop
mov
roll
dec
sbb
gs
mov
fstpl
dec
push
ret
std
pop
cmp
or
mov
out
jno
shrb
or
add
inc
rorb
stc
sub
fcmovnu
pop
rcrb
imul
out
xor
lcall
fdivs
xchg
dec
or
jns
lods
mov
scas
adcb
out
jne
and
add
adc
addr16
jnp
adc
pop
adc
icebp
faddl
insb
or
aam
jnp
sti
arpl
push
movsb
mov
and
jg
dec
rcr
cmp
sti
mov
shrb
jno
or
insb
push
mov
pop
mov
pop
dec
ljmp
popf
ret
jmp
dec
pop
in
add
fdivrl
jae
arpl
jbe
je
or
dec
mov
xor
adcb
loopne
xlat
hlt
hlt
inc
dec
rcrb
pop
dec
outsl
jo
pop
push
cltd
cmpsl
dec
jno
iret
pushf
imul
int3
aas
popa
jle
mov
dec
je
std
dec
int3
in
fmull
and
aad
push
inc
nop
jge
aam
loopne
mov
pop
mov
mov
push
stos
pop
cs
and
int
pop
adc
or
sti
cmp
add
xor
push
popf
mov
pop
dec
stos
and
call
ds
mov
jg
fmull
dec
int3
data16
imul
mov
lret
movsb
aas
jge
dec
inc
or
pop
loopne
out
fidivrs
testb
jne
imul
pop
pushl
push
hlt
inc
sub
jnp
cmpb
pop
mov
je
mov
test
mov
push
mov
xor
dec
sbb
inc
adc
mov
push
sub
add
out
orb
les
mul
movsb
fmul
stos
cltd
ds
fwait
pop
fildl
in
cmp
sbb
orb
in
arpl
jb
fdivrs
push
mov
fsubrl
imul
in
lahf
orb
fsubr
lret
mov
push
mov
push
adc
subb
in
fildll
ror
je
lret
aam
mov
repz
das
lret
mov
cld
mov
lds
outsl
jne
mov
sbb
ds
lods
jg
int3
pop
mov
lea
xchg
inc
add
inc
jnp
loopne
mov
sbb
jg
xor
lret
push
outsl
inc
xor
sub
sbb
sbb
add
xor
sub
jbe
sti
lds
jns
adc
cmpsb
movsb
push
inc
adcb
fstps
jmp
sbb
pop
cmp
rorb
inc
jmp
in
fs
fwait
xchg
les
fsubl
adc
je
fcoml
mov
dec
and
fnsave
fisubrl
dec
add
pop
sub
in
clc
sub
rcll
shl
push
push
out
cs
lods
jbe
out
push
adc
mov
mov
cmc
push
mov
mov
cmp
mov
rorl
arpl
pop
fs
repnz
arpl
fisubrl
in
pop
out
cld
lcall
cmp
xor
ffree
jl
adc
mov
lret
decb
repnz
scas
xor
in
xor
repnz
mov
cmp
or
mov
js
iret
aam
mov
mov
jnp
cmp
fmuls
aad
aad
cld
shrb
dec
in
dec
pop
cli
push
xchg
pushf
sbb
adc
test
or
cmp
pop
in
or
sub
jl
stos
add
loopne
dec
or
mov
call
dec
mov
out
shll
sbb
push
das
int
mov
cltd
jmp
and
in
dec
leave
outsl
sub
adc
sub
sbb
imul
pop
les
arpl
les
add
fwait
xchg
testb
hlt
push
out
aad
push
pop
push
ret
push
xchg
aas
mov
ljmp
push
hlt
cmp
int3
and
les
adc
push
shll
jmp
fdivl
lods
adc
cld
sbb
aaa
fstpt
rcrb
pop
int3
push
cmp
faddl
pushf
or
bound
call
inc
les
sub
and
and
hlt
hlt
mov
sarb
and
adc
jle
adc
add
dec
push
test
loopne
rorl
int3
je
dec
movsb
aaa
adcb
xchg
movb
hlt
xor
add
int3
in
cmp
push
subl
dec
fs
dec
push
shlb
dec
push
pop
insb
repz
dec
outsb
ja
je
pop
hlt
pop
enter
imul
je
sub
mov
xchg
fidivrl
aas
and
mov
jge
out
mov
movsb
js
cld
mov
out
jl
outsl
enter
push
fdivrl
or
testb
adc
push
dec
and
push
repz
fcoml
insl
sub
dec
faddl
pushf
loopne
cmp
fdivs
js
jb
push
ret
pop
and
fmull
mov
stc
add
and
cwtl
pop
push
mov
mov
fidivl
inc
inc
pop
int3
sub
rcll
lret
sub
adc
aad
sub
ret
shrl
int3
pusha
push
or
sbb
jno
push
and
dec
sbb
dec
cmp
jp
pushf
push
je
pop
lret
dec
loopne
insl
pop
xlat
fwait
and
scas
fisubl
call
pop
lret
pop
fbstp
in
mov
insb
jae
cmpsl
int3
sbb
ss
pop
pop
lret
xorb
addl
pop
mov
dec
je
hlt
dec
sbbl
leave
push
fcmovnu
lods
jae
das
lret
xor
loopne
adc
inc
jge
mov
xlat
aam
and
inc
push
fcmovbe
loopne
inc
aam
ficoms
inc
ljmp
es
add
aad
stos
xchg
lods
cmp
and
ds
mov
add
mov
dec
xor
jae
push
lret
pop
cld
fsubrl
loop
jbe
in
sbb
xchg
rorb
in
mov
pop
and
pusha
mov
jo
gs
outsl
inc
lods
push
jbe
dec
in
je
jnp
dec
roll
push
int3
adc
fistl
sub
mov
xchg
ja
cwtl
inc
cld
out
sbbb
cmp
pop
in
sti
sbb
ss
ja
dec
sbb
and
sbb
lret
popa
xorb
pushf
push
in
es
jl
fisttpl
enter
shll
and
cmp
jbe
jg
mov
rcrl
inc
fmull
cmp
inc
movsb
sbb
ds
fsubrl
sahf
pop
push
or
subb
inc
adcb
and
mov
cltd
push
loopne
sub
push
push
xor
pop
outsb
pop
mov
jae
push
jnp
ds
out
inc
xchg
inc
mov
in
ss
inc
icebp
add
scas
repz
daa
into
and
pop
add
cltd
insb
pop
mov
dec
jg
shrb
nop
mov
cmp
xor
mov
dec
mov
andb
mov
loopne
mov
decb
aam
sub
popf
shrl
inc
stos
xchg
mov
iret
xor
jnp
out
dec
push
negl
sbb
pop
fdivl
or
andb
iret
inc
loopne
pop
xor
dec
in
inc
push
test
ja
fs
jmp
in
xor
rorl
dec
sub
ficompl
xor
lcall
lods
and
mov
aas
add
xor
shl
mov
and
xchg
lock
loope
xor
cld
add
jmp
daa
xchg
imul
sbb
cmp
add
in
pop
push
shrb
jp
pop
dec
imul
and
adc
xchg
xor
xor
fmull
lods
xchg
add
test
cmp
test
pushf
out
sub
ljmp
adc
sbb
jle
dec
cmp
jno
fisttpl
ret
aam
fsubl
xor
push
rorl
mov
sub
fcmovnbe
lds
ret
push
sbb
fsubrl
xor
jg
mov
add
pusha
mov
int3
pop
push
sarl
movsl
pop
adc
adc
push
out
add
inc
lret
pop
inc
cmp
lret
push
or
nop
dec
jmp
fwait
js
ss
fcomi
movsb
xchg
mov
add
mov
sarl
int
adc
cli
dec
out
mov
pushf
mov
mov
xor
jl
mov
out
ljmp
sbbl
int
adc
jbe
fcompl
and
add
or
push
jle
arpl
fdivrl
inc
pop
leave
pop
iret
sbb
icebp
sbb
pop
mov
aam
dec
pop
mov
xchg
jge
pop
in
mov
push
add
fsubrl
dec
fstpt
push
and
adc
std
mov
sub
and
cld
test
push
push
xor
dec
add
pop
sbbl
je
fdivl
fwait
push
push
in
shll
sub
adc
into
divl
stos
ljmp
call
push
dec
out
nop
adc
in
lods
push
sbb
aam
add
or
adc
aam
aam
mov
fmull
adc
out
inc
repz
jp
pusha
das
int3
push
cmc
jge
add
faddl
verr
fmull
push
or
pavgb
inc
xorb
mov
loopne
lcall
ret
int3
xchg
dec
call
cld
sbb
iret
out
dec
fcomi
mov
insb
pop
int3
jo
inc
jecxz
jae
pop
dec
mov
push
movsb
sbbl
js
jne
fcompl
or
hlt
ja
ret
sbb
and
mov
addr16
fcompl
arpl
dec
dec
push
cld
dec
fcompl
jbe
mov
mov
xor
pop
sbb
cs
sahf
shrb
test
loopne
fimuls
inc
rorb
insb
repnz
dec
sti
pushf
jno
pusha
adc
lahf
test
rcr
lahf
test
and
xchg
loop
xchg
test
andb
sarl
or
jle
mov
test
mov
int3
mov
dec
clc
push
mov
add
dec
or
adc
aam
xchg
sub
pop
stos
cwtl
mov
hlt
sub
sbb
fcoml
in
dec
xor
and
push
shlb
and
xchg
push
xchg
push
rcll
adc
in
jle
pop
and
sbb
fdivl
inc
and
out
aad
push
mov
inc
lods
push
or
shr
dec
mov
pop
lret
add
les
sbb
adc
push
mov
clc
insl
dec
orb
lret
inc
in
jp
push
vpperm
in
xor
cmp
leave
mov
jmp
cmp
inc
adc
inc
stos
jge
jae
dec
stos
arpl
test
push
dec
jg
pusha
xor
insb
outsb
cld
adc
push
or
lock
sti
push
push
sub
and
bound
inc
inc
shrl
dec
lods
shl
mov
xchg
stos
push
sbbl
or
lret
stos
aam
fdivl
sub
jl
mov
scas
mov
or
ret
out
adc
mov
sbb
lods
xchg
repnz
mov
mov
mov
mov
jl
in
mov
mov
xchg
lods
les
add
mov
push
ud0
lahf
jl
push
and
lods
aam
add
mov
xchg
push
testl
insl
dec
jl
enter
xchg
mov
addl
xchg
shr
lret
add
sub
in
fidivs
iret
incb
and
mov
adc
sub
dec
pop
cltd
lea
les
pop
iret
fwait
push
push
xchg
pusha
rcrl
jg
sub
xchg
cmp
cmpsl
lods
lret
and
in
out
out
das
icebp
repz
pop
shll
push
int3
sbb
add
imul
stos
inc
dec
pop
test
cmc
push
dec
and
sbb
mov
push
adc
or
sbb
mov
adc
add
mov
ud0
lret
jecxz
pusha
jmp
inc
xorl
lcall
cmp
mov
sbb
push
repz
ss
lock
mov
jecxz
xor
xchg
mov
and
jecxz
int
stos
jb
roll
int
lret
xor
ljmp
and
sub
stos
adc
js
sub
lds
cmpsb
lea
adc
mov
push
in
in
inc
movsb
loope
inc
xchg
jmp
push
jb
test
je
scas
xor
sbb
cmp
insl
push
lcall
add
test
enter
dec
jg
movsb
pop
inc
ss
inc
sbb
pop
lock
and
sub
add
dec
add
lahf
outsb
xchg
cltd
push
inc
sbb
stos
xchg
and
rcll
dec
movsb
je
mov
fists
pop
fistps
xor
sbb
movsb
sbb
fildll
mov
mov
or
add
mov
and
dec
jle
or
sub
movsb
or
imul
fdiv
cmp
je
push
or
stos
arpl
push
pop
xlat
mov
pop
fdivl
dec
push
fs
push
cmp
push
rcrl
jne
pop
adc
push
pop
sti
mov
insb
add
outsl
push
inc
and
push
mov
xchg
push
dec
pop
jg
fisubrs
lds
popf
lahf
xchg
cmpl
pop
repnz
mov
lcall
clc
pop
pop
xor
cmp
and
sbb
addb
xor
clc
and
push
out
ljmp
fs
jge
cltd
sub
popa
push
jg
fdivl
movsl
adc
mov
int
pop
inc
fiaddl
pop
xchg
cltd
leave
fistpll
xor
sbb
jl
adcl
and
pop
cmpsl
push
pop
xor
es
push
jnp
xchg
stos
jae
xor
ja
daa
inc
mov
dec
dec
es
pop
pop
pop
pop
push
adc
pop
aam
mov
push
sbb
inc
movq
adc
sarl
sbb
divl
dec
mov
mov
inc
add
sbb
push
sub
xor
les
jno
push
sub
cmpsl
dec
inc
pop
or
xlat
fs
pop
aas
ret
adc
or
rcr
adc
shrb
shl
fdivrs
sbb
push
and
ret
adc
in
jae
push
sahf
test
lods
sub
ret
inc
push
jl
insb
cltd
mov
enter
jo
xchg
dec
xchg
and
xor
sbbb
xor
cmp
dec
les
mov
pop
xor
int
add
ss
and
outsl
pop
add
adc
xlat
sub
ja
mov
cmp
jmp
fcoml
hlt
sbb
ret
mov
mov
sbb
cmpl
push
pushf
in
subb
scas
arpl
inc
mov
push
sti
aas
clc
xchg
xchg
lret
lret
jnp
sbb
int
and
fldt
pop
ds
dec
push
orl
push
fstpl
cs
js
mov
sti
aas
lret
xchg
push
lret
jnp
sbb
pop
int
and
jnp
sbb
dec
sub
adc
push
lahf
dec
iret
jnp
mov
stos
dec
mov
mov
sti
mov
xchg
dec
pminsw
cs
js
mov
sti
repnz
dec
in
sbb
mov
push
orl
ljmp
js
mov
sti
gs
in
cs
js
mov
sti
negl
imul
fadds
mov
frstor
sub
ds
ds
dec
pop
adcl
inc
hlt
push
ds
dec
jnp
sbb
fstl
sbb
fildl
jp
mov
jmp
pop
hlt
push
ds
dec
jnp
sbb
fists
pushl
sub
rcrb
lock
enter
cmp
adc
sbbb
scas
dec
xchg
sbb
fcmovne
daa
pop
aas
pop
pop
push
outsl
dec
inc
push
pop
mov
pop
dec
outsb
shrl
dec
cmp
sbb
add
or
pop
movsb
dec
arpl
cmp
fisubs
repz
rorb
jnp
iret
fs
mov
mov
pop
ljmp
jp
sbb
push
arpl
mov
mov
inc
xchg
addr16
lds
aaa
xchg
and
pop
mov
jnp
stc
jecxz
lcall
cli
data16
hlt
pop
push
pop
mov
or
push
mov
xor
sarl
mov
testl
and
testb
adc
and
movsb
fsubrs
pop
and
sub
cltd
fidivrl
lods
pop
sahf
fimuls
enter
mov
push
sub
sbb
pop
xchg
clc
jecxz
mov
fidivl
movsl
fadds
bound
sub
clc
or
and
and
pop
test
xchg
sub
and
jmp
xchg
int3
jle
jno
sub
cmp
xchg
jo
shr
and
sub
pop
and
mov
or
xor
dec
nop
jne
jp
inc
iret
pop
ds
dec
pop
xor
and
shlb
push
sub
jae
repnz
ja
pop
xchg
xor
jno
and
adc
jp
push
paddsb
inc
mov
and
arpl
adc
stc
sbb
xchg
fwait
mov
pop
push
in
mov
jns
mov
mov
mov
cmovs
pop
cmpsb
pop
fdivs
mov
sub
add
fsubrl
inc
imul
inc
push
out
sbb
cs
or
pop
pop
mov
in
pop
mov
lods
enter
sub
jecxz
iret
rolb
ds
fildl
jge
cmp
adc
jle
sub
pop
je
cwtl
xor
pop
or
pop
pop
lock
inc
or
push
pop
imul
cwtl
sbb
scas
pop
ret
sbb
test
pop
nop
hlt
add
xor
and
xor
gs
push
loop
mov
inc
jmp
lcall
push
inc
and
jno
and
pop
sbb
push
jns
cmp
add
mov
pop
call
sti
add
mov
xor
gs
pop
mov
hlt
sbb
xchg
mov
and
mov
jae
int3
cs
pop
mov
mov
mov
adcb
mov
inc
out
sbb
ficompl
and
mov
push
in
std
jnp
inc
push
shlb
pushf
es
push
xchg
dec
fcmovnbe
inc
sbb
pop
aam
in
rcrl
je
cmp
dec
lods
fimull
jnp
dec
int3
pop
rcrl
jno
shl
pop
mov
add
jge
sub
and
out
addb
sbb
daa
push
imul
xor
jb
insl
and
cmp
mov
adc
or
inc
dec
cmp
jge
xor
push
jmp
push
aas
icebp
call
stos
icebp
ret
lea
or
pop
or
push
jmp
dec
fdivrl
push
fcomps
loope
push
pop
inc
cld
bound
cld
jl
jge
ljmp
dec
xchg
mov
clc
sub
daa
fdivrl
push
shl
sub
daa
fmull
jle
sbb
outsl
int
jmp
or
psllw
roll
xor
dec
add
ret
jnp
push
xor
clc
daa
inc
orb
lret
stos
mov
jno
mov
dec
lret
and
aam
cs
test
jae
sbb
adc
inc
and
into
xor
add
xchg
mov
repnz
jno
sbb
sbb
int
jg
cs
cmpb
stc
pop
push
jg
mov
and
cmpsl
les
dec
addr16
pop
mov
push
dec
pop
adc
mov
sti
jge
jno
push
or
cmovp
sbb
xchg
xor
clc
in
or
cld
and
pusha
loopne
lods
inc
dec
fidivrl
lret
ret
or
xchg
int3
xor
xchg
call
mov
xchg
xor
por
inc
in
mov
or
jns
and
scas
jmp
jge
and
sub
inc
test
push
pop
call
jl
ret
test
inc
ror
jae
repnz
fildll
dec
pop
and
in
lods
aaa
dec
jnp
xlat
int
push
push
fwait
xchg
push
or
aam
ljmp
arpl
dec
lods
lret
dec
imul
inc
cs
inc
inc
jg
dec
jge
and
ja
imul
pop
inc
jns
imul
or
aaa
pop
push
lea
dec
stos
xchg
jae
fwait
mov
pop
mov
lock
jge
arpl
add
pop
jp
mov
aam
inc
cmp
jge
cmp
dec
dec
dec
insb
xchg
shll
xchg
mov
ficompl
xor
and
pop
sub
fstl
std
popf
dec
pop
mov
jle
dec
adc
pop
fidivs
mov
mov
fisubrl
adc
or
sub
pop
sub
xlat
leave
lret
pop
int
icebp
repz
imul
jmp
in
out
xchg
xchg
xchg
xchg
mov
pop
mov
test
push
push
push
pop
dec
dec
dec
push
pop
xorb
js
insb
outsb
pop
jo
adc
sbb
or
push
adc
xor
cmp
pop
sub
xor
rcl
fcoms
lret
pop
add
hlt
idiv
ljmp
xchg
xchg
xchg
pop
cwtl
mov
pop
mov
mov
int
push
cli
outsl
mov
lock
jle
dec
ljmp
test
ljmp
popf
mov
dec
jae
lock
dec
push
adc
mov
pop
adc
sahf
adc
lock
out
mov
out
out
arpl
mov
repz
mov
lds
xchg
clc
outsl
mov
pop
sub
out
loop
int3
in
cs
gs
xchg
pop
pop
or
jo
sbb
or
push
xchg
and
into
mov
bound
fsubrp
adc
daa
negb
sbb
pop
es
cmp
push
scas
rcrb
loope
je
lods
out
inc
repnz
push
dec
or
out
ret
rorb
xchg
sub
fcoml
and
adc
ss
in
nop
push
inc
sbb
cli
dec
push
pop
mov
xchg
leave
stos
pop
stos
jb
das
cmc
test
lods
add
jmp
jg
js
fs
bound
pop
mov
push
insl
das
pop
pop
ja
std
mov
mov
gs
ds
pop
add
pop
xorl
pop
pop
add
in
push
mov
int3
xchg
adc
pop
mov
pusha
addr16
xchg
mov
push
pop
cmpl
xchg
xor
sbb
jg
pop
iret
inc
xchg
data16
out
adc
lods
sbb
cld
push
pop
add
in
adc
lret
add
aad
cmp
sub
imul
movb
and
adc
mov
arpl
test
fcompl
aam
and
fadds
jo
xchg
mov
add
pop
push
jne
or
pop
dec
out
cmp
loope
mov
push
stos
jmp
popa
cmp
shll
mov
sahf
cmpsb
adc
repz
xchg
pushf
push
mov
fcomps
sub
cmp
jbe
add
adc
imul
pusha
adc
jns
clc
xor
test
push
mov
addr16
push
or
sbb
jno
pop
int
popf
mov
leave
push
and
pusha
insl
xor
insl
lret
in
in
mov
lret
pop
inc
out
push
jno
mov
pop
pop
imul
in
mov
ror
sbbb
mov
gs
xchg
pop
mov
jg
ret
push
pop
mov
stc
fwait
ret
jmp
mov
cli
pusha
fisttpll
je
icebp
adc
push
ja
xor
push
push
imulb
arpl
ljmp
mov
repnz
adc
add
loope
mov
sub
in
xchg
pushf
fcom
loop
cmp
js
sub
out
fdivr
dec
pop
add
aam
push
out
or
lods
pushf
xchg
lret
gs
pop
ret
cs
sbb
sub
xor
jle
mov
mov
push
mov
pop
dec
and
and
pop
jle
lds
out
sbb
ss
jp
cltd
movsl
push
sub
out
ficoml
lcall
ret
lahf
cmp
pop
int3
dec
sub
rclb
xchg
mov
lock
repnz
push
sub
out
adc
sti
aaa
pushf
xor
addr16
shlb
push
rcrb
int3
fistpll
fs
mov
cmp
inc
arpl
xor
rolb
or
lock
mov
mov
push
cmp
sub
mov
out
das
jl
inc
fldcw
rcrl
aas
loope
lock
btc
rcrl
mov
mov
faddl
and
mov
jns
or
in
push
testb
adc
inc
mov
push
cld
xchg
flds
inc
xor
insl
pop
mov
aam
aad
cmp
hlt
cli
lret
loopne
bound
push
jb
popa
add
push
in
mov
shll
pop
fisttps
out
and
loop
or
pop
xchg
in
cmc
dec
inc
sbb
fstpl
jl
lock
add
ja
insl
jmp
dec
push
add
jmp
imul
jae
push
std
mov
sub
nop
cmc
insl
icebp
mov
adc
movsb
pop
jo
xchg
or
imul
xorb
pop
shlb
pop
pop
outsl
inc
scas
mov
xchg
frstor
mov
aad
data16
xor
out
adc
ss
sub
lahf
js,pt
push
cwtl
xchg
mov
pop
mov
mov
inc
daa
negb
mov
mov
dec
jno
pop
add
insb
sete
push
sub
in
push
xchg
mov
pop
fisttps
xor
add
xor
push
pop
fsubr
out
mov
ret
push
loopne
mov
lock
outsl
cltd
outsb
sbb
repz
add
popf
icebp
adc
arpl
nop
jl
loopne
cmp
pop
push
ss
or
leave
dec
pop
adc
scas
dec
xor
push
xor
jns
mov
dec
lret
inc
jne
jno
ss
mov
cmp
scas
cmp
inc
xchg
daa
inc
ret
inc
dec
ja
and
jnp
inc
mov
sbb
mov
mov
xor
mov
xor
mov
add
sbb
xlat
pop
sbb
mov
loopne
js
pop
mov
push
pusha
jp
pop
mov
imul
sbb
aas
inc
push
jae
orb
and
xchg
insl
loopne
xor
xor
jge
xchg
stos
jecxz
dec
pop
xor
mov
jbe
movb
add
inc
aas
je
rcll
insb
int3
inc
xchg
jb
push
dec
xchg
push
sbb
pop
shll
outsl
xchg
inc
jae
pop
sub
cld
or
mov
enter
rol
sub
jbe
jle
inc
pop
shlb
pop
jp
iret
jne
pop
orl
pop
sarb
and
lods
popa
mov
fidivrs
add
sahf
sbb
hlt
lods
in
jae
aam
mov
jnp
inc
cmp
js
xchg
rorl
rolb
push
xor
std
pop
outsl
fs
dec
sbb
scas
sub
stc
cld
push
jo
aas
lods
arpl
decb
stos
inc
sub
jb
test
dec
add
xor
enter
pop
int3
dec
fcoml
push
jg
insl
dec
or
arpl
push
gs
aas
cmc
in
mov
and
xchg
int3
sbb
dec
mov
cli
and
aam
mov
dec
daa
popa
jle
or
ds
xor
sub
cmp
fcomi
lock
aas
cmp
aaa
dec
ss
add
pushf
lret
sbb
les
pop
xor
mov
push
sub
mov
xchg
mov
insb
inc
jle
ror
pop
aaa
leave
sbb
aam
fdivrl
add
push
out
mov
popf
xchg
add
sub
cmp
xor
fildl
jge
inc
adc
lods
int3
sbb
int3
lret
push
mov
dec
xorb
adc
sub
cmp
cmp
mov
ret
loopne
jno
jae
mov
or
adc
mov
or
pop
jle
fwait
ja
in
and
loopne
cs
mov
push
rcrb
in
mov
push
enter
pop
es
mov
dec
fiaddl
dec
or
aas
dec
jnp
xor
jg
scas
cmp
in
sub
add
fsubl
or
aas
scas
push
loope
in
mov
xchg
out
aas
rolb
add
sub
mov
mov
adc
add
lods
adc
adc
xchg
mov
push
pop
jle
xor
xlat
psadbw
jmp
or
pop
jg
std
shll
sub
cmp
mov
imul
push
xchg
dec
pop
je
xor
aad
add
divl
xchg
lahf
mov
or
ss
adc
xor
pop
addr16
push
xchg
push
push
pushf
xor
cmp
sub
decb
sti
sbb
leave
aas
pop
cmp
cmp
fs
xchg
and
call
xor
aas
aaa
imul
jl
or
and
or
insb
leave
aam
pop
xor
inc
out
push
scas
sub
jge
push
jp
jg
loope
xor
xlat
and
sub
mov
gs
hlt
mov
sbb
icebp
cmp
test
repz
add
add
sub
adc
movsb
dec
xchg
mov
inc
pop
leave
mov
mov
subb
nop
push
lret
pop
je
fdivr
xchg
data16
add
pop
mov
inc
cmp
es
pop
adc
and
pop
roll
pushf
push
pop
dec
popf
fmuls
in
leave
out
pop
mov
andl
pop
gs
mov
add
int3
mov
das
les
rorb
popa
fwait
sub
pop
cmp
inc
test
xor
lods
mov
sbb
pop
push
cltd
loop
out
adc
js
add
sbb
xchg
iret
push
mov
aam
and
cmp
push
aad
out
cmpb
and
jb
pop
pop
lock
lahf
imul
data16
test
sti
lcall
vcvtps2dq
insl
ljmp
imul
mov
push
addr16
xor
bnd
push
add
add
cmpsb
outsl
movsl
mov
icebp
xchg
out
inc
mov
jecxz
int
xor
sarl
and
or
test
sbb
or
stos
cmp
mov
mov
pop
jo
add
cmp
adc
sub
mov
test
pop
and
ret
mov
std
jnp
arpl
lods
pop
mov
movsl
add
test
shl
push
sarl
sub
repnz
cs
out
pop
xor
jg
jo
and
push
cmp
and
cmpsl
imul
ret
fisttpll
pop
jns
cmp
leave
movsl
xlat
pop
gs
iret
mov
push
jae
mov
lea
adc
pop
cmp
mov
push
adc
xchg
jp
pop
in
push
popa
shlb
fidivl
and
pop
push
mov
pusha
mov
jo
add
push
sub
cmp
loope
push
lcall
jmp
add
lods
pop
mov
sub
out
lea
and
cmpsb
sbb
jne
loope
jno
push
pop
jg
mov
dec
mov
ja
xchg
ret
int
sub
test
dec
mov
fldenv
and
jmp
pop
add
hlt
add
call
sub
sbb
out
jecxz
mov
int3
test
add
subb
popl
iret
cs
push
xchg
repnz
mov
loopne
lods
fwait
push
cmp
pop
sub
hlt
xor
pop
js
pop
test
ds
in
jecxz
pop
je
sbb
or
addb
xchg
movsb
lds
mov
outsb
xchg
jmp
test
int
or
in
cli
or
jo
lods
pop
cltd
leave
idivb
add
sahf
cs
stc
cmpsl
sarb
icebp
pop
adc
int3
dec
adc
pop
jmp
inc
jmp
adc
movsb
dec
insb
pop
and
mov
pop
dec
xchg
repnz
aas
mov
and
add
loop
das
xor
enter
push
dec
inc
push
push
xchg
push
mov
lods
dec
sahf
stos
mov
pop
adcl
movsb
inc
or
pop
jmp
push
popf
mov
test
iret
jo
fmul
frstor
pop
mov
adc
popf
out
adc
stos
mov
testl
push
sub
push
mov
cmpsb
push
movsb
fstenv
loope
test
and
clc
jno
adc
cld
cltd
rolb
lods
adc
nop
or
jae
fabs
int
inc
jns
xchg
cvtdq2ps
ljmp
or
lock
and
mov
in
sub
add
cmp
pushf
es
sub
dec
loopne
pop
xor
outsl
push
ss
sub
add
dec
pop
cli
hlt
shrb
loope
jge
int3
jp
cmpsb
pop
dec
lods
sub
loop
cmp
pop
and
adc
scas
and
jno
cmp
ret
lcall
jmp
out
inc
add
push
inc
xchg
mov
adc
cmp
ss
pop
test
sbb
jno
add
mov
xor
mov
cmp
mov
movsb
pop
daa
call
notb
fmull
add
mov
shl
pop
bound
arpl
fistpl
popa
das
add
test
pop
pusha
mov
mov
lds
dec
lret
cmp
mov
outsl
faddl
imul
pop
sub
dec
jge
xlat
test
sub
dec
jne
aaa
pop
dec
cmpsl
adc
sub
jle
and
nop
adc
xlat
add
xchg
mov
sbb
addr16
mov
cmc
test
sahf
out
dec
movsl
pop
pushf
push
dec
in
mov
mov
jbe
mov
pop
mull
fwait
scas
pop
xchg
cmp
lahf
cmp
aad
ret
rcrl
sub
stos
sbb
push
pop
mov
roll
push
out
pop
popa
mov
jmp
sbb
insb
adc
aaa
add
pop
andl
adc
in
push
ja
repnz
adc
andl
push
test
sti
loopne
xor
pop
pop
jmp
adc
pop
jne
push
in
adc
or
loop
in
ds
push
adc
fsubl
pop
lods
jmp
dec
mov
mov
push
js
repz
test
pop
adc
mov
pop
add
jae
mov
push
mov
dec
jle
adc
dec
ret
rorl
orb
movsb
sub
sub
cld
mov
push
stos
jmp
inc
jno
mov
pop
cwtl
pushf
test
ljmp
inc
pop
jmp
xchg
in
and
outsl
add
mov
or
pop
sub
fisubs
insl
pop
imulb
inc
lahf
cwtl
adc
pop
jae
aas
leave
add
pop
sub
push
cltd
pop
aaa
mov
jns
loopne
in
push
mov
pushf
ss
pop
jno
stos
mov
andl
in
repz
stos
pop
xchg
pop
mov
aam
cmpsl
jmp
sub
subb
ret
mov
pop
sub
and
pop
test
repz
int
movswl
mov
divl
or
push
xchg
sbb
pop
movsb
fcomi
add
mov
xchg
ret
and
aam
mov
pop
ret
rorb
mov
shlb
fwait
sahf
stos
and
mov
push
out
jge
adc
por
mov
jecxz
sbb
xor
sub
jmp
dec
call
push
pop
inc
and
and
xchg
cltd
inc
jns
pushf
sbb
jns
or
pop
je
push
pop
dec
push
popa
aam
mov
fwait
mov
fiaddl
das
push
or
sarb
fistl
shlb
mov
divb
vlddqu
jmp
xchg
xor
das
cmp
add
addr16
rcl
dec
lahf
dec
mov
mov
sub
rolb
into
sub
sarb
enter
fwait
aaa
pop
popa
dec
sub
jb
pop
daa
dec
push
fisttps
inc
rorl
fldlg2
fsubrl
jbe
jae
xor
pop
push
sub
push
inc
test
arpl
dec
jg
repz
fadds
aas
enter
push
fdivp
and
in
das
sbb
fildl
jbe
mulb
lret
in
shll
rcr
dec
les
push
pop
and
or
pop
jle
inc
push
push
xor
jbe
aam
dec
sbb
and
push
xor
jno
pop
sysenter
shrb
ficompl
and
cli
loopne
pop
in
rcrb
pop
jg
mov
lret
push
inc
dec
int
in
sti
and
jno
es
xor
sbbl
popf
mov
mov
jl
data16
scas
std
ret
inc
adc
cmp
push
ss
mov
into
mov
aas
mov
outsb
jo
cld
push
jns
lock
push
lds
jno
push
or
shrl
shrb
hlt
repnz
out
int3
mov
xor
dec
xchg
aas
idivl
popa
sbb
ret
lret
inc
scas
nop
push
les
fdiv
or
shr
push
subb
and
sarb
out
mov
dec
pop
ficoml
fdivs
popa
push
imul
push
loope
jmp
jg
push
es
jno
jecxz
cmp
iret
and
cmp
inc
ja
cmp
sub
jle
and
sbb
mov
in
jb
icebp
call
pop
lret
lods
lcall
es
lea
in
pusha
cmp
dec
or
dec
xlat
inc
call
pop
icebp
and
cmc
pop
adc
adc
ds
adc
iret
or
sbb
nop
cmp
pop
push
aas
jecxz
pop
inc
in
mov
mov
or
dec
mov
cmp
das
in
jmp
mov
or
pop
mov
icebp
and
jmp
pop
into
mov
clc
adc
vmaxps
xchg
sub
sub
sub
add
gs
and
inc
pop
mov
jecxz
jbe
push
pop
inc
pop
dec
ds
sahf
int3
pop
jb
cltd
enter
mov
adc
fldcw
call
notl
push
inc
dec
or
dec
imul
cmp
sarl
and
int3
mov
add
popf
leave
dec
and
jns
popa
int
xchg
loopne
xchg
mov
shrb
pushf
sarl
sbb
ja
sub
fs
sbb
fmull
or
outsw
jle
icebp
iret
pop
jl
fisttps
ror
push
repz
pop
adc
xchg
dec
pop
add
daa
mov
insl
shlb
maskmovq
testl
mov
dec
pop
call
jns
shll
loop
add
inc
xchg
lea
ljmp
cli
mov
loope
pop
cmp
sub
aaa
xchg
dec
or
mov
mov
jb
push
bnd
inc
fsubrl
mov
pop
push
xor
push
les
mov
decb
sbb
sbbb
xchg
int3
jne
jecxz
in
and
xor
pop
insb
fistps
jbe
mov
xor
fucomp
jmp
pop
fsubs
mov
pop
fisttpl
push
or
inc
lcall
jecxz
stc
adc
stos
cmp
addr16
int
cwtl
lret
leave
pop
pop
aam
mov
pop
push
pop
xor
bound
imul
xorl
data16
hlt
int3
enter
test
adc
push
cmc
aam
divb
jp
sbb
and
loop
stc
push
mov
add
push
fsubs
mov
imul
push
lret
rcl
sub
fwait
pusha
daa
fdivrl
out
lods
and
out
pop
xchg
xor
mov
pop
push
icebp
mov
cmpsb
scas
xchg
inc
push
movl
es
jne
cmp
imul
sub
test
fstl
addr16
mov
in
es
mov
inc
sbb
jmp
push
add
jmp
mov
dec
fisttps
cmp
aaa
adc
mov
and
inc
jge
pop
das
sbb
pop
and
xchg
into
jb
mov
inc
adc
push
sbb
in
lods
xchg
dec
push
popa
xchg
pop
xchg
outsb
pop
icebp
or
mov
jns
aad
mov
out
pop
test
xchg
in
add
jmp
adc
pop
lds
mov
xor
lret
lods
insb
add
arpl
incl
icebp
or
pop
mov
adc
sub
pop
orb
pop
es
lods
dec
popa
dec
sarb
hlt
push
inc
xchg
sbb
and
dec
movhps
pop
js
xchg
cmpsl
push
insl
or
mov
jne
pop
in
and
pop
mov
add
jbe
pop
mov
ljmp
push
mov
dec
adc
sub
fdivl
mov
int3
es
mov
jmp
lret
imull
leave
shll
xor
jg
jnp
or
aas
jp
mov
jnp
aad
aas
cmp
jno
inc
dec
ret
xlat
sarl
pop
mov
lahf
cmp
cmp
std
xor
ljmp
iret
or
dec
stos
inc
sbb
cmc
adc
pop
in
int
dec
adc
jbe
xchg
shl
or
sub
pop
adc
std
leave
push
add
dec
cmp
cs
aas
push
adc
lods
adc
lret
add
movsb
lea
adc
pop
fwait
dec
xor
mov
in
adc
xchg
ja
pop
xchg
lock
cmp
and
out
dec
dec
sbb
outsb
lcall
and
cltd
adc
outsl
lret
sbb
aam
xor
jg
jmp
add
cmp
mov
aam
or
push
cmp
out
mov
jno
jbe
jp
call
jge
dec
and
rorl
sbb
xor
adc
ret
jge
cmp
lcall
cmp
jle
in
xor
imul
inc
ljmp
outsb
add
mov
pop
sar
dec
outsb
inc
push
jmp
rcll
pop
imul
cmp
add
push
xchg
inc
jge
mov
dec
repnz
adc
jo
outsl
adc
jle
add
fidivrl
mov
cmc
faddp
fimull
add
mov
sub
pop
jo
jle
inc
mov
lahf
add
scas
in
sar
mov
inc
loopne
fdivrl
jb
enter
push
cmp
std
sbb
aas
sub
out
sahf
arpl
clc
mov
repz
sub
loope
cmp
sbbb
fcoms
sub
mov
dec
into
rorb
lretw
jp
pop
and
hlt
push
fcompl
test
adc
adc
pop
push
add
pop
mull
push
xor
mov
pop
or
or
xchg
jo
mov
sub
inc
and
xor
lock
add
mov
dec
pop
addr16
jmp
lds
pop
test
mov
lods
pop
pop
insb
ds
ret
and
dec
jecxz
inc
sti
enter
cmp
pop
outsl
xor
clc
pop
and
xor
notb
lods
cmp
les
cmc
cmp
push
mov
popa
fmul
jb
push
lods
aas
inc
rorb
ds
frstor
sbb
and
jnp
push
lods
test
dec
leave
cmc
jnp
aaa
adc
aam
jae
testl
imul
push
jge
pop
xor
inc
mov
test
jl
push
shr
pop
add
add
repnz
mov
mov
jg
insl
cmp
inc
or
iret
pop
pushf
dec
jnp
push
push
das
cli
sub
push
outsl
pop
daa
sbb
push
mov
xor
orl
adc
shrl
stc
add
mov
push
sbb
data16
xchg
mov
push
xchg
jae
mov
stc
lahf
nop
pop
jnp
push
add
mov
sbb
dec
jge
call
push
jle
xchg
lret
push
push
mov
sti
dec
pop
jecxz
and
mov
dec
inc
ja
jbe
in
dec
xor
addr16
filds
pop
shll
or
dec
mov
jae
jg
mov
jge
push
aas
xor
inc
adc
pop
inc
pushf
jecxz
push
outsb
out
fstpt
pop
xor
les
jno
daa
iret
imul
in
sbb
ffreep
das
sbb
fbstp
out
shrb
andb
add
inc
jne
jg
or
sbb
ds
gs
int
sub
fistps
xchg
push
adc
insl
mov
inc
inc
cmp
cmpsl
jo
shl
sub
popf
push
call
aam
loopne
fsubrs
inc
jge
jae
dec
and
std
lahf
lret
ret
aas
push
push
mov
shrb
dec
add
outsb
int
jecxz
xor
sbb
pop
inc
jge
inc
push
shll
jb
jle
pop
popl
out
jmp
or
xor
or
inc
lahf
or
xchg
fcomps
mov
adc
push
movsl
mov
stc
inc
neg
mov
lcall
adc
fbstp
pushl
cmp
gs
lahf
xchg
pop
rcll
cld
dec
dec
imul
push
jle
rorl
pop
dec
xchg
out
loopne
pop
andl
enter
fistps
pextrw
cmpl
xor
add
inc
pop
xor
add
cli
xchg
ret
pop
shlb
addr16
cs
xor
outsl
xchg
jg
cmpsb
pop
jnp
xor
imul
or
lret
daa
mov
mov
rorl
fldt
imul
jbe
lock
andb
lret
add
pop
fildl
push
out
xlat
int
cmpsl
sub
push
mov
and
cmp
hlt
add
inc
in
jae
sub
in
int3
fwait
push
inc
sub
cmp
cmp
mov
sarl
in
cmp
cmp
jnp
inc
add
add
jge
mov
jae
test
pop
int3
dec
jge
aas
gs
cmp
cld
mov
xchg
mov
mov
dec
push
paddq
int
int
jae,pn
imul
sub
inc
imul
cld
mov
adc
xlat
sub
aam
push
imul
push
or
lods
popf
cmp
xchg
jb
sarb
or
gs
push
out
negb
lcall
in
pop
or
sub
imul
decl
int3
mov
int
int3
movsl
xchg
cmp
push
pop
sti
or
mov
jb
jle
dec
aas
or
sbb
xchg
in
gs
arpl
ja
dec
sti
ficomps
dec
add
jg
int3
pop
loopne
xor
in
add
or
push
outsb
mov
arpl
dec
outsl
in
sbb
or
je
mov
pusha
aam
fcmovnu
movups
xchg
sub
jae
gs
add
mov
or
push
jle
sbb
or
push
mov
jns
push
sub
je
mov
xchg
cmc
or
xchg
jno
jne
rol
jg
pop
push
add
stos
in
pop
test
jnp
push
dec
pop
dec
or
aam
sub
roll
imul
ds
and
adc
sub
inc
adc
dec
imul
xor
cltd
dec
lods
inc
jge
and
jle
ret
lcall
jmp
sbb
adc
xor
jno
cmpsb
sbb
pop
pop
pop
push
pusha
jbe
stos
out
aas
and
add
je
leave
adcl
sub
and
cmp
jnp
xor
adc
dec
int
inc
xor
jnp
xor
jg
sbb
pop
sub
adc
addb
into
add
ja
out
push
jge
dec
mov
or
push
jmp
pop
iret
scas
test
mov
pop
movsb
jg
inc
gs
test
add
into
mov
jge
imul
and
imul
cwtl
nop
subl
fwait
and
jns
fsubs
pop
ds
shll
mov
jp
frstor
mov
cmp
pop
mov
int3
outsb
ror
jl
mov
cmp
cmp
arpl
pop
dec
sub
push
sub
adc
loopne
lods
add
adc
or
test
pop
or
cld
pop
cs
inc
and
cmpsb
scas
gs
lret
out
std
test
fistpl
cmp
push
xchg
repnz
out
sub
fldenv
mov
fdivrl
das
fcoml
out
pop
test
mov
xor
sbb
mov
adc
rolb
cmp
out
pop
pop
jno
hlt
shlb
ljmp
fs
ret
test
mov
jecxz
addr16
cmp
add
lret
movsl
sbb
insb
mov
mov
inc
imul
push
imul
shll
cmp
fistl
inc
xchg
int
fsubrl
sbb
mov
lret
dec
std
jecxz
cltd
push
sbb
adc
or
mov
lret
sti
pop
loopne
jne
data16
pop
or
fistps
dec
mov
int3
push
cmpsb
xor
mov
faddl
xchg
mov
repnz
push
sub
dec
sbb
and
xchg
push
decl
adc
or
or
add
add
xchg
mov
retw
leave
cmp
ss
mov
out
push
mov
out
jo
fdivr
pop
mov
pop
mov
in
pusha
divb
sbb
pop
jae
lods
mov
mov
adc
mov
repnz
dec
ror
xor
ret
lds
cmp
jg
insl
popa
aas
xor
pusha
arpl
call
dec
loopne
fcoms
mov
sarl
or
inc
push
push
jnp
push
out
jnp
clc
shrl
lret
out
xchg
mov
sub
push
imul
dec
scas
clc
add
jae
btr
sti
and
repz
imul
data16
pop
filds
mov
addr16
js
or
push
insl
shlb
push
push
jnp
cmp
or
pop
pop
lock
out
xor
adc
mov
or
stos
sti
cmpsb
pop
inc
push
mov
icebp
pop
pop
and
jne
testb
mov
sbb
inc
xor
mov
leave
jp
mov
jae
add
stos
mov
out
pop
pop
out
inc
sti
scas
cwtl
mov
inc
push
pushf
shlb
lret
xchg
arpl
jb
insb
aas
xchg
pop
into
inc
add
add
enter
icebp
push
arpl
pop
inc
cwtl
cld
bound
mov
xor
inc
push
xchg
mov
push
ljmp
or
roll
fdivs
pop
push
addr16
enter
clc
pop
adc
pop
out
in
inc
in
xor
lcall
jg
adc
mov
sub
mov
neg
lret
fisubrl
pop
movsl
inc
test
pop
jo
pop
pop
movq
scas
pop
stc
divb
std
xor
sub
scas
int3
fwait
and
leave
dec
pop
cmpsb
insl
mov
dec
iret
push
lds
jecxz
push
pop
cs
decb
int
rcrb
ja
jp
pop
pop
or
jbe
arpl
cmc
dec
loope
mov
sub
cltd
and
inc
sub
scas
sub
or
jl
cmp
xchg
add
xchg
pop
mov
movsb
jmp
jns
mov
pop
int3
adc
inc
enter
pop
xchg
clc
push
loop
aas
jns
xor
inc
fwait
arpl
jb
xlat
test
sub
mov
sbb
fstpt
lret
and
dec
repz
pop
mov
fsubrl
pop
sub
dec
add
ficompl
shrl
xchg
in
mov
lods
testb
pop
push
inc
ja
cltd
fldt
ss
xchg
fistpll
cmc
pop
lret
and
cmc
jg
jae
sub
add
mov
mov
mov
shl
mov
js
inc
push
mov
jg
scas
leave
dec
inc
jae
mov
push
test
add
test
dec
add
popl
das
aaa
popa
sti
mov
dec
aas
pop
pop
cmc
jge
jb
lahf
adc
pop
push
cwtl
dec
test
pop
sarb
inc
cmp
rcr
mov
adc
pop
lahf
cs
out
jge
les
jbe
ret
sbb
ds
jno
pop
jae
add
mov
mov
add
inc
fimull
test
mov
fisubrs
fdiv
mov
loopne
and
pop
sub
sbb
xchg
mov
or
sbb
in
and
call
pop
rclb
mov
into
aas
xor
int
pusha
push
sub
mov
push
jge
fstps
jge
cltd
xor
mov
pop
shlb
test
addr16
fcmove
and
shrb
push
sub
int3
xor
data16
jle
mov
fldt
clc
fcompl
idiv
push
int3
xchg
aad
mov
adcb
push
push
jno
cmp
jecxz
sti
mov
xchg
ljmp
aas
jg
fwait
or
jle
jg
push
adc
movsl
push
ret
lret
push
orb
hlt
mov
nop
push
pop
inc
push
dec
dec
push
cld
loopne
pop
and
add
adc
inc
dec
cmp
dec
ret
movb
push
cmp
cmp
mov
jae
fists
jae
sbb
lret
lret
jae
xlat
fisttpll
aas
sbb
mov
jne
push
mov
in
dec
cmp
inc
insb
imul
dec
enter
lods
jnp
mov
and
cld
xor
mov
sbb
or
dec
mov
addr16
sub
cli
sbb
cld
dec
xor
outsl
out
dec
inc
repnz
scas
fcomp
lcall
rcrb
or
repz
mov
push
xor
outsl
push
fwait
inc
push
xchg
sbb
pop
pop
aaa
aam
lea
outsl
in
xchg
ret
mov
inc
adc
push
jmp
loopne
push
mov
mov
mov
adc
xor
dec
test
cmc
dec
jo
iret
jge
pop
mov
push
into
aas
mov
ja
lods
xor
rcr
jnp
push
mulb
ja,pn
and
add
or
je
int3
add
lods
outsl
int
sbb
push
test
out
xchg
insb
popf
in
cmp
push
jns
inc
into
dec
call
add
lods
aam
lret
outsb
loopne
sub
movsb
pop
out
jns
inc
insl
pop
cmp
fimull
mov
lods
jns
and
dec
push
and
ss
pop
cld
sub
add
pop
aas
aaa
lret
and
or
push
movsl
jnp
pop
mov
ret
add
es
adc
imul
adc
push
inc
xchg
and
fs
xchg
es
add
jge
insl
xor
push
push
decb
pop
cmp
dec
hlt
ds
enter
cmp
dec
inc
stos
or
mov
das
aad
stos
lea
cmpsl
cmpsb
push
test
pop
shrb
negl
jge
pop
inc
aam
rorb
inc
out
inc
pop
movsl
jl
dec
push
mov
out
arpl
dec
dec
inc
jae
sub
fisubrs
jno
mov
xor
addr16
arpl
pop
mov
imul
adc
sub
xor
or
and
xor
mov
mov
mov
aas
sbb
cmpsb
mov
ljmp
add
str
or
pop
mov
arpl
dec
add
arpl
shl
push
adcl
int
std
and
inc
jg
xor
scas
lahf
shrl
sbb
dec
mov
pop
xor
and
imul
rcrl
and
cmp
lock
or
mov
inc
adc
dec
xchg
push
push
pop
inc
shlb
scas
fstpl
andl
jb
pop
pop
xchg
mov
xor
pop
mov
adc
adc
int3
cmp
push
repz
lret
xor
das
dec
loope
movb
sbb
cmp
ficomps
inc
cmp
pop
sbb
adc
enter
scas
push
mov
pop
add
test
cwtl
sarl
pop
and
movsl
xor
or
xor
jbe
mov
xor
icebp
imul
movsl
xorb
pop
xchg
xchg
rclb
sbb
xor
sti
pusha
sub
fsubrl
xor
out
mov
mov
ja
paddsw
arpl
sbb
push
add
or
stc
push
pop
fdivrl
mov
ja
rolb
fnstenv
push
pop
mov
test
add
pop
mov
jl
aam
pop
jnp
xlat
mov
pop
insl
inc
xchg
sahf
fstpt
add
jns
cmp
pop
pop
or
xor
pop
pop
mov
jne
pop
movsb
mov
sub
pop
cmp
test
jns
jae
inc
sbb
and
or
pop
xchg
and
outsl
je
rcrl
pop
cmp
ss
lahf
cltd
mov
or
pop
xchg
or
push
pop
lret
ja
or
adc
add
adc
pushf
lahf
pop
int
jmp
sub
sbbl
dec
dec
lock
pushf
orb
les
filds
adc
in
xchg
jge
scas
cmp
int3
pop
stc
pop
insb
push
ret
mov
in
xchg
lret
xchg
sbbb
jp
add
imul
lcall
dec
gs
outsb
pop
sbb
pop
in
sarb
pop
xchg
mov
stos
pop
push
test
outsl
pop
fstpl
sub
pop
outsb
shrb
xor
ret
ds
in
mov
mov
sbb
add
pop
pop
call
jg
pop
pop
repz
into
in
iret
incb
pop
popf
inc
sti
negb
nop
idivl
jbe
mov
inc
dec
adc
je
xchg
lret
jl
pop
pop
mov
sbb
push
in
das
xor
int
mov
sti
clc
xchg
add
xchg
mov
dec
popl
rcr
movsl
pop
mov
mov
pop
push
hlt
add
mov
shlb
sbb
lock
fdivl
pop
fcom
cmpsb
mov
cmp
movsb
pop
out
sbb
add
mov
sub
xor
cwtl
pop
pop
addr16
pop
mov
push
jns
outsb
mov
test
lods
pushf
repz
mov
pop
iret
add
xlat
fdivl
rcll
pop
sbb
js
lock
into
fcompl
mov
popa
jmp
repnz
pop
jle
push
jae
pop
inc
stos
inc
int3
sbb
insl
jb
adc
inc
push
or
bound
jp
insb
gs
jno
mov
sti
out
inc
pop
movsl
mov
mov
repz
pop
aas
fucomp
lods
sub
pop
cmpsb
sahf
out
mov
push
push
sub
pop
pop
pop
cmc
cli
jbe
mov
mov
repnz
mov
lahf
stc
jge
fnsave
dec
or
mov
push
mov
mov
adc
xchg
xchg
fwait
cmp
pop
jmp
scas
shlb
sbb
pushf
pop
lods
insl
arpl
fs
sub
outsb
adc
pop
ja
out
adc
clc
mov
add
or
pop
jmp
dec
mov
pop
push
dec
mov
xor
fs
sahf
sbb
pop
in
pop
push
pop
lahf
cmp
and
mov
sti
and
dec
jmp
pop
nop
not
dec
push
mov
lcall
xchg
dec
pop
cmpb
mov
aas
imul
jg
sahf
and
arpl
adc
push
scas
push
or
insb
push
add
sbb
push
jb
push
jp
cmpsb
outsb
pop
inc
sub
dec
or
shrb
xor
jg
nop
lret
pop
adc
xchg
hlt
pop
xchg
cltd
inc
push
cli
idivb
pop
int
jnp
test
inc
test
jg
jl
fmuls
int
or
pop
std
adc
int
filds
and
fsubr
insl
popf
sub
or
and
xchg
jae
dec
cli
jns
inc
lods
dec
inc
jmp
cmp
and
movsb
sbb
pop
sub
dec
xor
cmp
mov
jne
mov
pop
daa
popa
cmp
mov
stos
aas
push
test
fdiv
jle
push
jae
fisubrs
lret
inc
cld
lahf
push
orb
pop
lds
cld
fimull
jb
pop
dec
xchg
push
cwtl
mov
sbb
add
icebp
imull
pop
inc
leave
movsb
aam
push
sub
pop
ss
aaa
or
rcrb
lret
adc
lods
aas
xchg
pop
pop
cmp
dec
jge
xchg
movsb
arpl
sub
int3
imul
in
mov
ror
push
pop
rcl
push
push
js
pop
clc
xor
jl
jae
jecxz
repz
or
and
sub
xchg
fmul
test
jg
std
pop
roll
aad
pushf
mov
pop
loope
fimull
sub
loopne
cmp
out
mov
movsb
in
pop
xor
mov
and
and
cmpsl
push
mov
mov
pop
js
cmp
pop
inc
or
pop
jb
lcall
fwait
push
xchg
push
shlb
lock
lret
ljmp
cmp
push
dec
xor
and
mov
mov
push
push
adc
dec
pop
pop
xor
pop
jno
sub
xor
sbb
icebp
mov
bnd
fistpl
push
pop
mov
das
adc
mov
mov
push
sbb
cmpsb
mov
sbb
call
push
negl
xor
fs
in
push
pop
imul
mov
test
xor
pop
push
pop
jg
cmpsb
mov
outsl
sub
sahf
xchg
inc
test
pop
push
or
cmp
adc
xchg
rcrl
jbe
jcxz
loope
sbb
inc
cmpsl
sbb
test
cld
and
jg
aad
add
xchg
rolb
testb
cmp
shll
sahf
jle
inc
imul
push
pop
and
jp
iret
mov
pop
call
dec
daa
jle
mov
mov
pop
call
xchg
pop
and
andb
sbb
pop
lods
push
xchg
icebp
adc
pop
fidivrl
sbb
shrb
sahf
stc
inc
mov
pop
js
adc
push
test
mov
pop
outsl
push
lock
pop
int
add
xor
jecxz
dec
pop
sub
jge
call
and
cltd
pop
jecxz
jno
int
pushf
add
lea
cmp
push
insl
addr16
test
mov
movsl
andl
add
add
sbb
sub
inc
out
insb
inc
pop
les
adc
in
sbb
and
pop
ret
data16
pop
mov
lock
pop
outsl
leave
dec
xor
int
inc
repnz
fistpll
leave
push
xor
dec
fstpt
into
and
add
pop
pop
pop
out
add
in
inc
pop
sub
mov
cmp
jb
inc
repz
aas
insl
add
adc
or
jno
pop
mov
int3
sub
stc
push
pop
movsb
pop
mov
and
lods
leave
pop
xor
lcall
out
in
lock
mov
push
xchg
shrl
lahf
cmp
data16
or
loope
cmc
imul
scas
movsb
adc
xchg
lret
push
or
enter
mov
mov
das
les
mov
lcall
xchg
xchg
inc
add
mov
push
xor
movsb
cmc
xchg
enter
daa
imul
or
mov
sub
mov
mov
in
cmp
adc
push
push
iret
mov
imul
mov
or
cmpsb
adc
clc
cmp
xor
pop
adc
test
out
sub
jno
mov
cli
sub
pop
dec
cmpsl
shll
and
clc
dec
incl
and
repnz
jns
mov
xor
xor
movl
movsl
mov
clc
stos
add
dec
pop
inc
push
or
arpl
scas
mov
call
stc
inc
mov
adc
sub
out
xor
out
pop
arpl
jecxz
lock
loope
push
xor
out
pop
cmpl
out
push
js
cmp
inc
sar
or
leave
scas
mov
pop
mov
fcoms
out
leave
push
lock
xchg
pop
call
mov
aaa
dec
pop
inc
sub
jo
adc
orl
ja
lock
cmp
cmc
fnstenv
out
and
lcall
sahf
mov
test
pop
inc
xchg
and
arpl
push
inc
call
bound
pop
cld
mov
jae
mov
pop
repnz
sub
cmp
test
jle
call
std
and
fstpt
sahf
cmpsb
mov
push
pop
cmp
mov
push
pop
hlt
or
lods
xor
adc
leave
insl
bound
inc
fidivrs
sub
pop
roll
in
inc
jae
sub
icebp
and
sahf
or
cmp
test
ss
fdiv
push
xlat
mov
xchg
sub
mov
ljmp
inc
aam
push
push
daa
enter
stos
jbe
pushf
mov
in
xor
and
jecxz
leave
dec
lcall
lahf
adc
mov
decb
xchg
gs
mov
loope
jnp
xor
xchg
es
aam
lds
roll
sbb
inc
and
fildl
mov
dec
shll
mov
aad
sbb
xchg
int3
stos
inc
ret
fmull
das
fstps
cld
out
dec
jnp
ja
pop
int3
mov
fisttpl
add
sbb
pop
repnz
inc
jp
jmp
jo
pop
push
sbb
gs
pop
fdivl
mov
xchg
jns
cli
or
adc
jne
sub
inc
lock
sbb
loopne
sub
das
push
and
xor
jl
jl
lret
sbb
mov
xchg
fsubrs
add
fistps
mov
sti
rcrb
in
addl
test
dec
mov
jl
out
adc
lods
sub
mov
or
xor
cmp
js
lods
cmc
jb
push
pop
xor
jle
js
pop
dec
fcmovbe
lret
adcl
sub
sub
repnz
mov
fisttpll
jno
jle
pop
popf
fildl
inc
outsb
cmp
pop
sub
xor
inc
pop
jecxz
ret
pop
cwtl
and
ret
pop
push
stc
clc
mov
je
or
xchg
jp
pop
gs
hlt
mov
loopne
pop
fwait
jno
in
movl
aaa
adc
jmp
pop
jge
xchg
ret
fsubrs
inc
and
mov
icebp
push
popa
sub
xchg
pop
and
push
cmp
mov
jae
jg
mov
pop
fidivs
jb
add
ret
add
push
mov
in
pop
pop
repz
jns
aaa
cmpsb
pop
sub
sahf
dec
inc
pop
ret
xchg
ljmp
mull
mov
inc
mov
xchg
stc
fs
rcrl
out
add
sub
pop
int3
mov
jnp
mov
adc
jbe
push
cltd
add
inc
and
push
sbb
dec
arpl
lcall
dec
mov
lret
lcall
add
sub
aam
mov
jecxz
mov
call
inc
stos
popa
pop
call
push
pop
adc
mov
aaa
push
test
mov
add
xchg
test
pop
push
cwtl
jae
fwait
cmc
mov
faddl
cmp
adc
fwait
jo
jp
orb
dec
mov
mul
shll
ror
fnstsw
pop
jl
sbb
mulb
mov
jp
mov
ficoms
sub
jb
pop
pop
jle
loop
jno
mov
ljmp
mov
lds
dec
dec
mov
sbb
das
testb
mov
in
pop
add
cmpsb
jb
lock
popa
roll
clc
push
sbb
testl
mov
mov
insb
or
mov
lea
push
ds
int3
push
adc
cmp
mull
jp
pop
lods
or
stc
fdivrl
js
or
outsl
push
cmpsb
xchg
xchg
rcrb
out
add
lds
scas
pop
cmp
pushf
mov
loop
inc
loope
xchg
jb
rorb
inc
and
add
jg
mov
push
fildl
jbe
xchg
in
pop
add
adc
mov
or
xchg
push
idivl
and
or
push
pop
sarl
cld
in
rcrb
adc
movsb
and
popa
in
orl
sbb
mov
in
mov
pop
push
addl
pop
rolb
pop
cmpsl
ret
mov
cmp
pop
cmp
fwait
xchg
or
nop
jmp
test
pop
sub
or
pop
lds
lret
xor
dec
adc
ret
dec
test
mov
pop
and
dec
test
mov
loopne
or
add
xor
cwtl
sub
pop
xchg
shrb
sahf
pop
insl
push
popf
mov
js
adc
push
fcompl
ss
jo
mov
scas
jne
daa
imul
inc
add
mov
loop
inc
mov
jecxz
bound
sub
gs
fwait
mov
ret
mov
pop
test
xor
jo
pop
pop
sti
into
or
jecxz
daa
sub
dec
xchg
cmp
sbb
popw
pop
jle,pn
jmp
int3
js
mov
and
insl
inc
pop
ljmp
push
pop
mov
flds
mov
pop
sub
pop
gs
and
or
xchg
dec
aam
jnp
push
push
lea
jle
out
mov
and
push
pop
push
lock
adc
popa
in
lods
dec
daa
in
mov
bt
pop
gs
mov
daa
dec
stos
inc
pop
call
stc
sahf
loopne
jo
outsl
shll
test
xchg
fstl
iret
or
push
add
xchg
or
inc
fstpt
mov
pop
cli
in
push
mov
push
dec
cmpsb
sub
iret
mov
daa
sub
xor
pop
sbb
std
es
inc
inc
arpl
sub
ja
pop
push
mov
pop
out
mov
call
stos
dec
dec
negl
stc
test
sbb
jmp
or
mov
arpl
mov
sbb
mov
adc
dec
xchg
add
popf
pushf
ljmp
gs
sub
or
dec
adc
pushf
ss
test
inc
or
push
lods
pop
lret
adcl
push
insl
cs
adc
pop
xchg
frstor
insb
pop
fwait
mov
inc
cmp
push
rorb
call
lods
insl
test
jge
adc
test
pop
stos
test
nop
sbb
int
push
or
sbbb
mov
or
inc
pop
sbb
and
cs
sub
jo
sub
or
cmp
sti
dec
sar
inc
sbb
unpcklps
les
pop
xlat
adc
xor
jno
mov
shrb
jp
cmpsl
cmpb
push
neg
mov
mov
mov
je
out
rcrl
push
xchg
sub
sbb
dec
dec
aam
mov
adc
jb
rorl
jns
push
lret
xchg
jg
scas
pop
adc
adc
push
inc
les
push
ss
cld
push
iret
jle,pn
xor
sbb
mov
hlt
fcomi
xor
push
es
outsb
cltd
sbb
lods
fldt
mov
pop
push
in
stos
cwtl
sub
dec
push
jns
shll
paddq
pop
fnstenv
rorb
mov
cs
mov
stos
sbb
jo
repnz
add
pop
outsb
ss
das
xchg
ficompl
out
mov
pop
bound
and
stc
push
mov
arpl
inc
mov
addr16
xor
push
andb
in
adc
sarl
dec
push
pop
cmpsb
lods
cwtl
xchg
mov
fidivl
lods
mov
push
jp
icebp
fs
pop
push
or
mov
stc
fsts
mov
arpl
xlat
jnp
or
pushf
push
push
imul
clc
pop
sbb
movsb
test
pop
mov
mov
int
cld
stos
jne
fs
jnp
add
loope
jnp
stos
push
jge
pop
repz
fwait
and
jnp
pop
fbstp
cld
sbb
pop
xor
test
push
dec
adc
arpl
dec
sti
or
xchg
int
xchg
shll
xor
fwait
ljmp
ret
dec
jb
pop
int3
dec
pop
cmp
lea
movsl
lahf
pop
inc
mov
cltd
pop
add
std
ja
into
sbbb
or
add
mov
pop
mov
inc
rsm
mov
in
sub
xor
adc
mov
pop
sub
mov
out
scas
push
pop
pop
push
aam
add
pop
in
adc
enter
repz
out
pop
mov
lods
cmpsb
pop
ja
rcl
jbe
xorps
jecxz
pop
sub
push
mov
jle
neg
xchg
rcrb
cmc
cli
push
mov
lret
push
aad
in
mov
in
shlb
pop
adcl
cmc
mov
pop
cs
fisubl
cld
xor
fbstp
out
out
loopne
mov
jmp
pop
pop
mov
sub
pop
and
cmp
xlat
pop
inc
pop
push
stos
jns
inc
cmc
and
cmpsl
pop
pop
adc
sub
adc
in
data16
popf
push
arpl
push
pop
mov
int3
pop
std
xchg
xlat
mov
shrl
pushf
lret
push
cmp
fisttpll
pushf
shrl
pop
adc
fxch
pop
adc
ds
adc
pop
fnsave
repnz
jle
adc
lods
pop
push
sub
add
jns
bound
ret
shll
mov
loopne
call
pop
mov
les
movsl
pushl
sbb
mov
pop
test
and
pop
repnz
or
imul
add
rolb
or
sub
bound
das
xchg
in
dec
push
xor
xor
pop
xorl
cli
inc
pop
mov
push
pop
aam
push
adc
push
lcall
jo
stos
loopne
jecxz
test
mov
les
xor
pop
and
mov
xchg
arpl
scas
movsb
pop
arpl
stc
dec
pop
insb
dec
pushf
push
jo
rorl
or
mov
mov
pop
dec
inc
pop
or
fildll
in
dec
inc
adc
and
int3
sub
mov
add
jecxz
shll
mov
push
pop
fstpl
push
pop
fsubs
mov
sbb
and
sbbl
or
fsubl
hlt
sub
pop
fbstp
push
pop
repz
jbe
jne
in
xchg
and
or
pop
cli
inc
incl
pcmpeqb
or
out
add
cli
sub
orb
cmp
lret
imul
shrl
xchg
pop
inc
hlt
insb
or
push
sub
and
jp
jo
mov
mov
push
xchg
fisubrl
and
enter
jb
mov
scas
mov
in
or
ljmp
and
xchg
imul
popa
pop
inc
mov
pop
movsl
sbb
lds
mov
pop
repnz
loope
out
stos
pop
mov
push
mov
xchg
test
test
cs
jb
jmp
fs
push
push
jae
gs
adc
out
pop
aam
roll
iret
pop
pop
dec
jge
pop
jae
mov
adc
mov
pop
iret
jae
incb
xchg
xchg
inc
clc
pushf
fwait
sub
mov
loope
je
xchg
outsl
cmpsl
pop
pop
inc
jnp
dec
and
loope
jbe
pop
sbb
jecxz
xchg
sub
jns
mov
jno
adc
out
jmp
mov
in
ljmp
mov
mov
adc
or
cwtl
push
ret
mov
pushf
adc
inc
jg
sub
mov
fs
pop
es
sub
xor
outsl
gs
or
loop
or
xor
into
or
xchg
adc
cmpsb
ret
sbb
push
loopne
xor
add
cmp
cmpsb
mov
lret
fidivl
or
aam
pop
mov
lcall
sub
sbb
jnp
mov
or
pop
stc
cmp
sbb
inc
or
addr16
xchg
sbb
test
mov
or
ret
mov
xor
inc
pop
push
outsl
cs
add
push
in
iret
adc
add
sub
cs
push
repnz
dec
push
imul
jge
jge
and
push
out
aas
push
push
and
pushl
dec
sarl
ds
cltd
or
cmp
sbb
fldt
fidivs
scas
sbb
mov
add
les
fadds
adc
shll
push
adc
xlat
cmp
jl
pop
lret
sbb
or
roll
dec
adc
aam
cmp
outsb
in
cmp
dec
pusha
mov
mov
mov
adc
roll
adc
je,pt
cmp
push
adc
addr16
add
and
cmp
loop
ds
jg
ds
pop
xorl
push
add
js
xlat
xor
sub
mov
dec
pop
jg
aad
jle
push
xor
ror
push
dec
mov
adc
adc
out
pop
icebp
cmp
sbb
sbb
dec
or
xchg
aaa
push
pop
sub
mov
jg
mov
ficomps
ret
adc
and
jg
jbe
mulb
test
jge
cmp
pop
jge
call
push
pusha
sub
ja,pn
jg
pop
mov
lret
imul
mov
add
push
pop
xchg
aam
cmp
xchg
cmpsl
mov
push
adc
imul
fsubrs
jnp
fs
lock
cmp
aas
negb
xchg
fsubl
cmp
cs
clc
or
xchg
xor
imul
icebp
add
jecxz
xchg
es
sti
lahf
and
sbb
jecxz
dec
add
int3
dec
stos
cmp
into
inc
pop
xchg
and
inc
leave
pop
xor
out
add
into
mov
rorb
pmuludq
das
movsl
pop
lock
xor
data16
jno
sub
das
dec
add
add
mov
or
pop
jp
shrb
xorl
pop
xor
movsl
aas
repz
inc
push
pop
insb
mov
addb
cmp
scas
pop
lds
and
mov
mov
shll
lret
mov
pop
xchg
int3
cmpsl
jne
les
insb
jge
push
mov
sbb
call
mov
rorb
mov
mov
jle
add
mov
inc
lods
pop
jnp
mov
jmp
fs
mov
test
xor
rcrb
cltd
dec
sub
xor
jl
mov
cltd
mov
jnp
push
push
and
inc
fisubrs
mov
and
push
cltd
inc
mov
adc
into
imul
jns
rcll
pop
int
mov
mov
in
adc
adc
fwait
pusha
jge
mov
fwait
push
jge
scas
repz
rcrl
addr16
fcompl
shll
imul
jl
loopne
jns
add
sbb
adc
cmpsb
xor
inc
xchg
int3
dec
pop
jnp
daa
les
stc
imul
cld
fnstcw
ret
xor
xchg
sbb
jle
push
mov
nop
sbb
pop
sbb
lret
adc
push
push
lock
shlb
mov
mov
dec
js
loop
pop
or
xor
div
cmpsb
dec
lods
jmp
nop
jecxz
rorb
push
lods
out
fwait
add
jmp
andl
xchg
pop
adcl
outsl
in
fsubs
sub
cmp
mov
cli
imul
jbe
out
xor
clc
cmp
bound
jno
stos
sarb
out
sti
test
jns
dec
or
xchg
cmp
das
push
mov
push
cmp
sbb
pop
sub
pop
cmp
les
or
push
lahf
sbbb
cmp
jp
jne
adc
inc
pop
sbb
jl
sarl
dec
cmp
into
ss
js
pop
cmc
mov
fbstp
icebp
pop
test
mov
lock
orb
pop
fs
push
aad
xor
scas
aas
xchg
fistpl
add
mov
pop
xor
cmc
push
leave
xchg
shlb
sar
cs
inc
nop
cmp
cmp
inc
dec
testb
or
and
out
or
ficoml
push
bound
ljmp
cmpb
rolb
arpl
aam
inc
loope
outsb
pop
sub
xchg
shrb
xlat
pop
stos
mov
neg
pop
cmpsl
loop
test
js
stos
lahf
lea
pop
icebp
lret
lods
mov
push
rcr
imul
insb
aaa
das
int
pop
inc
mov
gs
push
icebp
test
leave
mov
mov
data16
mov
sub
mov
enter
jecxz
fcoml
idiv
pop
pop
sub
enter
in
mov
dec
pusha
lea
pop
les
orb
insl
fdivl
jge
dec
inc
sbb
ds
dec
cld
loopne
add
loope
popl
jge
mov
adc
pusha
or
pop
popa
int
xchg
es
mov
cs
aam
jecxz
adc
shrl
stos
mov
mov
pop
mov
rcrb
push
cmp
push
adc
jb
loopne
pop
leave
lock
pop
sbb
jp
mov
dec
jbe
repnz
sbb
test
or
lret
push
xchg
add
cmp
jge
mov
mov
add
xor
sbb
scas
cmc
add
jecxz
mov
lods
ret
adc
xchg
inc
mov
jo
adcl
xchg
cmp
or
pop
andl
mov
mov
jmp
xor
add
das
mov
ss
push
jmp
mov
push
leave
push
inc
mov
jb
clc
pop
xor
and
add
out
or
ficomps
pop
int3
mov
or
xchg
cld
enter
or
inc
stos
movsl
pushf
lock
pop
leave
mov
lret
fiaddl
pavgb
sbb
imul
dec
sub
cmpsl
repz
shrl
or
cmp
icebp
int3
imul
jle
test
rcrl
pop
sbb
repz
sbb
jl
pop
jns
adc
or
ret
stos
push
fsubs
jb
xor
stc
add
insb
jg
enter
inc
lods
test
jecxz
xor
pop
rcl
jle
cli
pop
or
test
arpl
js
loopne
or
sbb
pop
jg,pn
jmp
add
sub
add
popf
imul
pop
shlb
movsb
pop
or
icebp
or
jb
dec
stos
pop
and
mov
outsl
lods
pop
enter
dec
out
jmp
add
push
cmpsb
pop
and
pop
mov
sahf
std
cli
pop
sbb
pop
aaa
inc
mov
lock
fdivrl
leave
xchg
xchg
loop
pop
into
ljmp
notb
mov
pop
jmp
jbe
mov
mov
mov
call
and
insl
add
rolb
aam
fwait
pop
stos
push
jmp
cmpsb
mov
in
cmp
lods
sti
sbb
add
or
lret
xchg
sbb
or
and
xor
xor
mov
test
out
imul
scas
xlat
pop
pop
inc
int
adc
dec
in
mov
inc
xchg
sub
jae
adcb
aam
mov
fcmovnb
cmpsb
fisttpl
in
pop
sub
das
repz
cmp
repnz
sbb
and
xor
scas
pop
xchg
lock
xor
cmp
filds
divb
mov
inc
adc
xchg
faddl
pop
shlb
dec
in
gs
dec
mov
sub
pop
test
xchg
jle
std
push
pushl
mov
mov
in
addr16
push
pop
xor
in
xor
pop
pop
or
aas
lret
bound
in
and
add
push
cwtl
or
test
add
ss
pop
ds
pop
fs
mov
push
xchg
mov
ljmp
jle
mov
sub
jno
xchg
ret
mov
arpl
push
cmpsl
pop
sahf
push
mov
adc
jmp
pop
mov
iret
dec
data16
push
arpl
mov
mov
loopne
mov
add
cmp
xchg
enter
inc
leave
inc
adc
pop
mov
xchg
xchg
mov
lret
cld
xchg
pop
into
push
gs
and
pop
iret
pop
and
or
mov
cli
sbb
sbb
pop
push
repz
cmc
nop
lret
cmpsw
adc
xchg
out
jl
mov
push
repnz
leave
iret
and
push
rcrl
jge
dec
jp
jmp
pop
pop
or
mov
xor
popa
xchg
sub
test
out
test
mov
lea
add
pop
rorl
loope
inc
and
test
sub
aas
les
mov
gs
lea
mov
mov
ret
mov
cmpsl
test
inc
ss
and
jb
dec
push
pushf
nop
pop
push
inc
sbb
out
mov
add
cwtl
jns
cmp
add
inc
sar
out
testb
or
mov
and
sub
pop
push
imul
mov
stos
imul
mov
cwtl
xchg
dec
into
cli
loopne
jle
int3
jns
jmp
jns
fadd
imul
leave
jp
sub
movsb
lods
std
mov
add
sbb
push
aad
or
pop
test
or
aas
test
jae
jl
or
pusha
xlat
dec
aam
mov
adc
dec
mov
aam
jmp
into
mov
sub
decl
clc
movsb
cvtdq2ps
fmuls
pop
in
xor
mov
or
sub
je
push
movsl
sbb
aas
pop
xor
xor
pop
test
cmpsb
or
add
cmp
and
mov
xor
jns
pop
insl
out
sbb
pusha
or
das
repnz
add
pop
enter
adc
push
push
xlat
xor
sub
rolb
dec
cmp
andl
call
jb
imul
shl
ficomps
adc
cmp
repz
mov
sbb
adc
sub
cli
xchg
and
pop
cmp
adc
pop
jl
mov
sahf
push
repz
jle
test
shll
hlt
pushf
add
xor
or
je
mov
lret
dec
mov
pop
or
mov
adc
jo
lret
outsb
jbe
ljmp
iret
inc
test
adc
dec
testb
rclb
jbe
pop
hlt
xor
popa
test
sub
pop
dec
jp
add
mov
xchg
xchg
pop
xor
push
or
jno
pop
mov
dec
mov
mov
pop
adc
mov
push
and
and
data16
pop
in
add
mov
cmp
fcomps
mov
test
xchg
outsb
and
jle
cmc
scas
mov
stos
mov
push
jg
mov
stos
inc
jg
inc
push
out
inc
mov
push
push
lock
pop
popf
ret
inc
cmc
lock
adc
jmp
xchg
mov
jnp
popf
inc
jb
jg
arpl
inc
ljmp
jnp
inc
mov
adc
jb
and
outsl
int3
ret
cld
js
insb
ret
pop
and
sbb
dec
cmp
push
shr
dec
imull
cmpsl
lret
fidivrl
dec
pop
jge
or
rorl
jnp
test
dec
fwait
sbb
fs
cmp
ljmp
lods
lcall
loopne
pop
add
dec
fstenv
pop
mov
loop
test
movsl
sub
cmp
orb
cld
or
xchg
adc
cmp
sti
mov
call
inc
push
cmp
adc
xor
es
or
sbb
dec
inc
xor
popa
push
adc
sbb
sub
jle
ja
push
xor
cltd
mov
repnz
dec
cltd
add
add
push
hlt
inc
lcall
xor
cmp
cmp
xchg
dec
mov
jecxz
mov
test
mov
push
cwtl
jae
mov
and
inc
xchg
jnp
pop
into
pusha
fldcw
mov
xor
ret
push
aaa
andl
sbb
pop
xchg
enter
repnz
pop
dec
xor
mov
push
dec
outsb
loopne
jae
icebp
adc
pop
popa
ss
shrl
mov
and
testl
mov
loope
test
push
dec
sti
pop
loop
inc
mov
jae
out
pusha
pop
shrb
mov
push
loopne
or
gs
dec
es
pop
clc
and
aas
xchg
cmp
fidivrl
pop
adc
mov
nop
pop
hlt
outsb
mov
arpl
sub
ds
mov
daa
mov
add
mov
shlb
pop
sbb
out
sub
inc
xchg
push
sbb
cmpsb
mov
inc
jg
addr16
icebp
xor
cmp
cmp
pop
sub
cmp
push
xchg
ss
sar
pop
dec
lret
xor
jge
inc
mov
jl
int3
or
cmp
dec
inc
stos
or
adc
adc
sub
inc
mov
clc
inc
dec
lret
mov
clc
add
pop
jno
loopne
add
dec
mov
and
push
ret
sarl
jnp
inc
divl
adc
jle
push
cmp
mov
pop
adc
lret
movsl
insl
iret
sub
pop
jp
dec
cmp
cmpsb
push
jae
mov
pop
aaa
add
cmp
ss
jnp
cmp
sub
mov
jbe
jl
or
int3
rclb
lret
dec
xorl
sbb
cld
cmp
or
mov
dec
sub
hlt
stos
lods
xchg
lcall
test
mov
pop
insl
inc
cmp
orl
dec
loop
scas
push
jae
push
clc
sub
cld
pushf
push
sti
fs
push
sub
cld
inc
popa
dec
sub
jae
adc
loopne
dec
or
mov
sti
shll
repnz
cli
sarb
push
gs
xor
jns
inc
sbb
xor
es
inc
jge
mov
adc
sbb
sbb
jno
loope
es
lret
divl
jno
jge
addr16
fwait
or
ds
lret
loopne
pop
dec
ljmp
pop
sbb
pushf
repnz
inc
into
out
insl
xor
fistl
push
in
out
dec
inc
ja
pop
add
lar
std
scas
stos
test
sbb
out
and
xor
mov
jnp
ds
sub
jnp
adc
pop
mov
int3
inc
sub
in
shlb
jg
cmp
add
inc
sti
and
ds
push
fnsave
mov
mov
and
adc
mov
adc
mov
int3
push
cli
mov
inc
adc
addr16
lret
mov
icebp
fwait
jecxz
push
clc
push
aad
push
xor
cmp
lcall
jg
mov
neg
les
test
sub
nop
mov
cld
lea
push
mov
mov
pop
jnp
mov
sub
and
shr
mov
dec
push
jb
mov
test
pusha
xlat
imul
mov
xchg
mov
pushf
xor
data16
pop
xor
mov
jecxz
dec
push
ret
cmp
jno
xchg
shlb
mov
xor
xchg
mov
lods
pop
pop
pop
dec
insl
stc
fwait
and
dec
sti
bound
jo
pmaddwd
dec
pop
pop
xor
clc
push
inc
push
push
das
cmpsb
lock
enter
adcb
mov
mov
or
push
sub
inc
pop
jbe
stos
push
lcall
add
pop
push
fwait
mov
cmp
sub
pop
sbb
fs
ret
xor
mov
js
mov
xor
cld
or
push
sbb
out
ss
fcompl
cmp
pop
dec
cmpsb
lods
mov
std
cmp
scas
ss
shlb
mov
pop
ja
movsb
xor
addb
mov
cwtl
ret
rorl
fstps
xor
stc
push
push
lods
fisttpl
lret
jecxz
lea
pop
pop
mov
push
out
push
push
adcb
mov
sbb
xorl
lods
adc
lret
xchg
and
inc
xor
push
jnp
mov
js
jge
sbb
add
mov
inc
sbb
push
xor
and
adc
pop
push
or
sub
arpl
mov
insl
pop
lds
fst
sbb
incb
lcall
mul
in
mov
hlt
add
fsts
pop
out
pop
jmp
dec
movsl
pop
pop
mov
ficomps
out
test
push
push
mov
xchg
cmp
sub
jge
fsubl
pushf
dec
in
pop
xor
imul
and
fsubrp
add
mov
mov
mov
repnz
or
lds
mov
decb
aad
negl
and
bound
xor
in
pop
sub
mov
outsl
mov
pushf
loopne
sub
pop
xchg
mov
mov
mov
pushf
jp
popa
sub
sarb
cmpsb
and
xor
mov
repnz
mov
pop
mov
and
lret
push
jae
jnp
pop
arpl
mov
sub
and
and
add
movsl
mov
cmp
pushf
arpl
sarb
inc
jg
sarl
sub
vpmacsdqh
ficompl
cmp
sbb
pop
jge
das
je
lds
cld
or
push
sti
sbb
or
adc
mov
xor
fisttpl
repz
sub
cmpsb
dec
mov
clc
dec
and
mov
pop
out
outsl
mov
mov
xchg
pop
hlt
sub
mov
gs
in
cmp
pop
mov
arpl
mov
pop
inc
popa
sarl
scas
cmp
pop
loopne
jle
les
xor
sub
jno
cmc
xor
pop
mov
ljmp
jo
cwtl
out
sub
and
repnz
arpl
nop
out
lods
mov
inc
jecxz
push
mov
call
loop
push
sub
xchg
and
fildl
and
pushw
push
nop
cmp
sbb
ja
mov
cltd
arpl
xchg
negb
jecxz
jge
inc
aaa
ja
ja
add
stc
jmp
sub
lea
push
imulb
push
shll
lret
mov
sbb
adc
push
pushf
lret
push
iret
jne
addr16
stc
fcmovnbe
pop
ja
xor
repnz
mov
pop
aad
mov
xor
or
lcall
xchg
sbbl
jo
add
test
add
push
xor
ljmp
arpl
call
leave
imul
push
popf
sar
in
inc
xchg
jecxz
repnz
push
and
fimuls
cmp
loop
int
test
cmp
es
inc
cld
shrb
push
mov
or
inc
push
mov
movsl
leave
pusha
cmp
inc
jmp
mov
pop
sub
ljmp
loope
rclb
mov
push
or
mov
or
roll
xor
sub
mov
jecxz
fbld
sbb
aas
aaa
jge
push
jp
jnp
jne
push
ljmp
mov
loope
arpl
mov
push
or
sub
cmp
sbb
push
dec
jns
and
and
jp
sbb
jg
sub
stos
cmp
fwait
and
stc
call
lds
shrb
and
add
xor
jle
adc
fistpll
or
or
xor
xchg
out
cli
pinsrw
xlat
push
scas
daa
clc
andb
fcompl
push
inc
cmc
test
daa
cs
sub
gs
addr16
and
clc
jp
dec
lret
jl
mov
test
out
std
push
dec
les
mov
fidivrl
jge
mov
add
pop
xchg
ljmp
push
in
mov
push
jle
fidivrl
and
fisubl
inc
push
jbe
incl
jae
cmc
arpl
inc
adc
push
mov
push
lds
jns
and
mov
out
push
aad
scas
cwtl
mov
cmp
xchg
push
lock
adc
divl
push
pop
mov
out
adc
inc
ss
lock
xor
loop
inc
pop
sub
xchg
int3
jbe
mov
mov
shlb
cmp
pop
fwait
or
xor
cmpb
push
stc
xor
and
sub
mov
imul
sub
lods
pop
div
adc
mov
mov
test
shrb
sub
movsw
pop
xchg
shrb
pop
inc
lret
movsb
xchg
in
xor
inc
and
test
pop
fsts
and
cmp
fs
jmp
pop
inc
and
adc
adc
mov
mov
pop
xor
ds
add
clc
lods
jo
lahf
aam
pop
imul
push
dec
or
stos
sti
mov
or
mov
adc
sub
xlat
inc
pop
test
adc
jns
jne
mov
pushl
sub
and
iret
negl
mov
lock
or
popa
repz
push
push
lahf
loop
jbe
mov
out
sbb
xchg
call
mov
adc
sbb
jecxz
fmuls
jle
arpl
rclb
test
je
mov
cmpsb
cld
jo
xor
jns
fcomps
fstpl
gs
mov
and
shll
int
mov
mov
pop
jb
inc
bound
movsl
pop
cmp
dec
mov
loop
cs
imul
xor
test
sub
mov
push
and
out
mov
std
loope
mov
and
sub
jge
movsb
lods
sbb
mov
jecxz
lods
fstl
dec
lahf
icebp
repnz
mov
mov
or
push
aaa
jg
test
shrl
inc
cmp
test
xchg
lcall
cmp
out
inc
aam
pop
mov
jne
inc
enter
xlat
jmp
dec
cmp
jg
fbld
pop
push
sub
rclb
jmp
xor
jns
cmp
fbstp
and
push
js
push
or
pop
mov
test
rol
pop
ljmp
arpl
rcll
adc
sbb
jnp
jno
notb
pop
mov
or
popa
pop
out
add
lret
push
dec
sti
dec
adc
inc
fldenv
add
and
imul
pop
out
rcrl
loop
lret
and
jbe
pop
mov
or
fmull
lock
sbb
mov
or
mov
pop
and
xor
pop
adc
fldt
in
fists
sub
sbb
addr16
and
xor
push
dec
outsb
mov
and
test
out
clc
sbb
out
push
jbe
arpl
repz
les
pop
mov
gs
test
jno
sub
movsb
sub
in
mov
pop
xor
mov
test
fs
push
fwait
sbb
mov
pop
mov
mov
stos
push
loopne
repz
adc
ss
push
xchg
subl
gs
outsb
pop
jmp
pop
xchg
add
imul
js
daa
pop
cmp
xlat
dec
add
add
test
cmp
repnz
lret
mov
out
push
xor
mov
inc
adc
or
and
pop
push
push
mov
xchg
or
jp
xchg
scas
xchg
add
jns
sub
mov
subl
call
into
pop
pop
dec
movsl
sbb
mov
pop
or
mov
jg
jmp
sub
hlt
cmp
pop
jbe
fdivrs
jge
jb
inc
aad
sahf
ja
sub
addl
outsb
mov
push
inc
test
mov
sbb
insl
mov
or
pop
dec
int
repnz
sub
mov
lods
rcll
int3
lret
adc
sbbb
mov
xchg
jp
nop
hlt
lods
and
popa
cmp
adc
outsl
shrb
or
jnp
scas
jecxz
stos
jmp
std
fisttpll
xor
adc
pop
push
pop
inc
jne
aam
jb
out
cmp
lret
fnstenv
scas
xor
pop
clc
push
xchg
or
cmp
mov
addr16
mov
dec
add
sbb
ror
jns
subl
push
out
in
sahf
jg
pop
jns
bound
and
dec
rcr
outsl
mov
loope
arpl
xor
ss
aam
rorl
sbb
jle
and
das
inc
pop
xor
mov
jnp
bnd
pop
and
inc
fcompp
aam
test
dec
sarl
aam
lods
imul
pop
mov
jne
dec
cmp
movsb
or
or
sahf
mov
adc
pop
aam
popf
mov
inc
adc
push
filds
rcr
fldt
cmp
and
pushf
sbb
cmpsl
pop
pop
sub
ret
jmp
cli
or
fimull
inc
jle
push
aaa
pop
pusha
push
mov
xchg
adc
jne
out
push
cltd
fdivr
push
test
dec
add
inc
jbe
push
decb
mov
mov
push
ss
cmp
and
sub
popf
into
xor
pop
lret
rcr
test
pop
bnd
divb
rep
pop
rcrb
enter
xchg
inc
test
adc
and
cmp
ds
and
or
mov
iret
inc
sbb
dec
lcall
call
jecxz
jge
sbb
seta
pop
pop
jb
mov
push
insl
loopne
rorb
dec
push
daa
popf
movsb
out
mov
lds
nop
lea
pop
fsubr
jle
in
mov
sub
shl
pop
jmp
and
sbb
jns
sbb
nop
scas
pop
mov
mov
lret
xor
imul
add
xchg
xchg
inc
or
push
pop
ror
or
or
sub
jecxz
pop
leave
cmpsb
jo
mov
mov
movsl
cmp
jb
out
push
adc
sbb
out
pop
cwtl
jne
pop
inc
aaa
mov
sbbl
pop
loop
cli
cltd
clc
pop
and
mov
leave
mov
outsl
add
pop
xchg
jmp
fnstcw
dec
adc
fimull
pop
repz
ja
xchg
fiadds
inc
inc
fcomp
daa
mov
push
add
movsb
test
ja
xchg
lret
pop
in
popa
inc
push
pop
mov
pop
ds
sti
rolb
sub
push
lods
ljmp
repz
jp
jbe
pusha
xor
mov
pop
fildl
pop
and
xsha1
cmpsb
dec
rcrb
ja
aad
sub
pop
lods
int
shlb
dec
aam
sub
inc
daa
ss
cltd
lea
sar
pop
mov
movsb
call
push
lds
mov
aas
int3
adc
pop
clc
mov
or
inc
push
push
jo
cmp
adc
leave
out
push
repnz
das
lock
aad
mov
in
cli
mov
jbe
inc
pop
xor
mov
insb
cwtl
pop
aaa
out
idiv
or
nop
cmp
adc
xor
es
fsubrs
outsl
hlt
mov
mov
pop
mov
icebp
and
mov
loope
shlb
mov
xor
pusha
frstor
mov
mov
scas
mov
in
cltd
fcompl
or
test
mov
fisttpl
gs
pop
mov
jnp
ret
cmp
pop
mov
stos
fldcw
in
pop
jecxz
jg
add
push
adc
outsb
mov
push
dec
cli
movsl
mov
pop
orb
js
cmpsb
fidivrl
and
leave
movsb
andl
lods
inc
sahf
mov
or
test
fdivl
pop
add
jbe
mov
inc
pop
lods
xor
lret
add
push
pop
cmp
fnstsw
dec
push
sbbl
mov
pusha
xor
mov
inc
mov
xchg
dec
lock
outsl
sbb
dec
push
mov
inc
sub
push
or
sub
sbb
scas
es
stos
inc
and
popa
dec
pop
mov
pop
push
cmp
sub
pop
pop
add
xchg
push
jmp
jl
cmc
cmp
js
cmp
mov
jns
jae
push
rorl
out
lahf
dec
sub
jno
inc
ja
or
jae
add
pushf
jae
mov
pop
adc
dec
jnp
int3
pop
data16
daa
xchg
or
sbb
xchg
mov
xchg
sbb
fisubs
cmpsb
leave
cmp
sub
cmp
les
pop
mov
adc
push
daa
lea
push
cmpb
pop
mov
test
pop
sti
xor
les
jno
xchg
repnz
in
cmp
pop
fcoms
test
mov
dec
popa
jl
lcall
ret
fcompl
movsl
addr16
subl
inc
rol
movsb
mov
lods
insl
sub
ret
out
mov
jno
inc
dec
pop
cmp
ljmp
pop
scas
ss
push
pop
jecxz
mov
pop
loope
int3
subb
mov
cmp
mov
pushf
sbb
fistpl
mov
push
pop
call
ror
jo
sub
xchg
jge
fucomi
sub
xchg
or
out
push
cmp
adcb
pop
pop
pop
lock
aas
push
jb
cmc
shlb
sbb
pop
bound
jmp
mov
or
mov
xchg
notb
pop
rorb
xor
mov
in
stos
int3
push
in
inc
aaa
mov
mov
das
jge
xchg
pop
xor
sub
xchg
loopne
pop
out
sbb
aad
jmp
mov
and
push
pop
in
xchg
mov
adc
and
aad
cs
xor
xchg
mov
movl
clc
and
jno
push
inc
or
adc
xchg
jecxz
sub
jae
lcall
stos
test
mov
dec
fcoms
imul
rorl
pop
push
cmp
cltd
pop
and
jno
ret
or
sbb
test
add
sti
push
fildl
rorl
mov
fs
add
mov
fxch
dec
shll
out
popf
xor
and
pop
ds
lcall
jmp
mov
cwtl
aad
jmp
pop
pop
pop
xchg
inc
add
int3
sbb
roll
ret
sbb
or
pop
sbb
dec
add
outsb
sahf
aam
aas
test
pop
inc
xor
sub
cmp
daa
imul
dec
pushf
arpl
dec
push
push
inc
xlat
cmpsb
xor
push
jl
loopne
out
stos
popf
mov
sahf
pop
fidivl
or
pop
xchg
std
sbb
lea
lret
mov
adc
push
in
iret
jae
hlt
pop
decl
mov
jmp
and
sub
rol
xchg
les
int
mov
sbb
add
xor
mov
jmp
out
xor
pop
pop
cwtl
lea
jge
push
inc
insb
aas
xchg
pop
es
mov
out
fptan
and
in
push
dec
mov
leave
js
xchg
mov
mov
call
cmpsl
sbb
sbb
xchg
pop
jge
adc
push
rorl
push
in
test
paddsw
dec
jb
stc
mov
mov
or
push
jmp
hlt
pop
adc
mov
fwait
cld
push
pop
and
jne
cmc
pop
bound
stc
sbbl
xchg
repnz
cmc
dec
arpl
sub
ds
decl
sbb
mov
push
add
out
fbstp
xchg
and
jecxz
ds
repz
testl
add
outsl
jns
nop
call
loop
pop
or
mov
leave
scas
rorb
push
ret
xor
hlt
pop
fistl
jne
jecxz
xor
dec
or
pop
inc
or
push
pop
pop
xor
xchg
stc
insb
and
mov
or
push
pop
in
mov
shlb
in
add
cs
negb
sub
dec
gs
popa
jp
sub
xchg
and
ret
in
adc
adc
xor
ret
jecxz
pop
cmpsb
call
xchg
jns
cvtdq2ps
dec
inc
js
sub
leave
clc
pop
and
rclb
test
mov
pushf
mov
lret
adc
xchg
test
push
xchg
push
jae
cmp
fdivrl
push
add
outsb
mov
out
pop
icebp
push
std
leavew
jb
adc
mov
enter
mov
push
js
fdivl
negb
loopne
inc
sub
pop
in
ds
adc
and
call
imul
mov
inc
faddl
ficompl
stos
adc
sub
pop
inc
mov
iret
in
cmc
pop
movsb
js
out
addb
ds
fidivrs
ret
shl
mov
sub
dec
xchg
jo
dec
mov
nop
add
jle
into
fistps
sub
push
pop
jne
pop
mov
cld
push
xor
push
mov
hlt
add
mov
je
xchg
push
iret
pop
pop
in
jl
cmc
adc
dec
jns
dec
mov
in
sbb
jbe
and
ret
inc
xchg
rclb
ficompl
fadds
sbb
out
or
mov
fldenv
push
arpl
rclb
les
fs
mov
xor
cld
fcmovnu
inc
aad
outsb
inc
jns
movb
in
popa
rclb
add
sub
jns
inc
push
fdivrl
xor
or
in
jle
lret
int
sub
sub
pushf
rcrb
inc
pop
lcall
aam
adc
add
xchg
test
jle
mov
xor
bound
ja
jae
movsb
push
lds
cmp
jge
push
jp
jnp
or
lea
jae
stc
inc
add
jp
fxch
dec
xchg
adc
mov
dec
push
jns
push
rcrb
xor
jno
pop
popf
push
pop
jg
leave
pop
xor
shrb
jns
add
mov
outsb
dec
mov
or
ds
pop
repz
sbb
pop
out
xor
decb
mov
xchg
cmp
repz
and
push
out
aad
mov
cmpsb
inc
imul
dec
mov
lahf
das
aam
pop
pop
mov
arpl
jb
subl
dec
lock
pop
xchg
les
or
in
orl
test
scas
fistps
sub
xchg
cwtl
jecxz
or
jl
inc
sbb
pop
mov
mov
sub
popf
arpl
xor
pop
mov
imul
lahf
int
pop
push
inc
cmp
jae
mov
lret
fistpll
sub
adc
lods
add
loopne
mov
jnp
pop
push
adc
icebp
or
cwtl
add
je
pop
jns
movsl
iret
pop
mov
std
push
pop
shl
in
stos
mov
push
lods
add
cmp
add
mov
xor
mov
cmp
mov
mov
mov
lcall
pop
cmpsb
dec
test
add
mov
sbbl
sub
mov
pop
loop
jecxz
cmp
ljmp
and
ja
push
movl
mov
sub
cmp
into
mov
insb
inc
inc
or
sbb
ds
mov
sub
imul
shr
cmpsb
xchg
sub
xor
clc
pop
sti
xchg
clc
rcl
mov
arpl
inc
aaa
jne
in
stos
add
push
and
les
push
sbbb
push
insl
push
pop
xor
pop
mov
mov
mov
jae
imul
mov
lcall
test
subb
test
fisubs
stc
jne
fnclex
rep
sub
pop
and
aas
repnz
add
jbe
cmp
mov
mov
and
faddl
pop
cmp
add
std
lods
and
xor
in
mov
add
lret
sbb
xchg
roll
pop
insb
lcall
pop
dec
or
mov
pushf
pop
push
inc
jmp
loop
cs
sub
xchg
mov
pop
sbb
and
mov
adc
xchg
adcl
loopne
push
or
scas
pop
pushf
adc
cltd
jo
addr16
mov
icebp
push
stos
movsl
idivb
sbb
pop
lock
add
xor
jo
das
mov
inc
addr16
clc
mov
icebp
pushf
lcall
sub
dec
loopne
fistl
xlat
or
xchg
arpl
sbb
repnz
clc
inc
mov
pop
add
and
jg
loopne
mov
cs
out
xor
js
pop
test
pop
fwait
add
and
mov
sbb
or
pop
divb
scas
xchg
pop
test
lods
and
and
test
hlt
sbb
sub
lds
and
imul
jecxz
bound
cmpsb
fs
and
sbbl
repnz
out
jmp
call
aam
add
addr16
mov
pop
push
add
jg
pop
push
in
lea
mov
mov
mov
cltd
cld
mov
inc
inc
stos
in
add
test
add
shll
movsb
ja
jecxz
xchg
pop
inc
insb
and
ror
mov
out
lods
inc
jne
pop
push
and
xor
pop
xchg
clc
pop
xor
mov
ljmp
cmp
call
pop
or
andb
popl
outsl
sbb
dec
sbb
pop
in
faddl
add
pop
cmp
and
xor
stos
pop
adc
xor
fstl
dec
jnp
test
jne
cmp
sub
jbe
jg
loop
jmp
out
rorl
adc
cli
sbb
pop
cmp
out
pop
pop
add
mov
or
inc
test
adc
insl
daa
xchg
jecxz
mov
aam
pop
adc
push
pop
insb
pop
pop
jge
mov
pop
test
cmp
pop
lahf
fcompl
and
xchg
dec
lea
pop
push
xor
jg
std
mov
js
cmp
cs
arpl
in
mov
stos
cltd
mov
lock
cs
outsl
scas
fwait
aad
push
xchg
xor
pop
or
outsb
popf
sub
dec
sub
mov
cmp
mov
inc
push
ficomps
sahf
mov
add
mov
push
mov
lcall
inc
dec
push
mov
loop
testl
adc
cltd
aaa
sub
ret
and
add
pop
inc
lret
hlt
out
enter
xor
pop
aad
xchg
and
mov
jg
pop
jge
add
pop
dec
inc
jno
icebp
jnp
pop
notl
cmp
mov
fidivrl
sbb
push
hlt
mov
ja
pop
xor
imul
sub
sbbb
cmc
int
dec
in
mov
jns
sbb
gs
fwait
mov
mov
inc
popa
mov
sbbb
leave
inc
sbb
jg
pop
sub
lret
push
pop
jo
or
fst
jae
pushl
push
or
fcmovb
arpl
xorb
inc
dec
mov
push
and
testl
and
push
shll
sub
fs
dec
cmp
push
imul
push
out
popf
in
fistpll
test
fisttpll
cmp
sub
fstpl
push
sbb
adc
or
icebp
gs
dec
test
fisttpl
dec
adc
jg
dec
movsb
dec
das
adc
dec
imul
inc
inc
dec
xchg
in
adc
cmp
fildl
xorl
mov
stos
sbb
add
push
rcll
jecxz
pop
adc
sub
xor
mov
jae
dec
pop
mov
cmc
imul
fs
jns
jnp
dec
or
andl
inc
inc
adc
je
sbb
inc
rcl
dec
and
add
fwait
or
cld
loop
dec
psrlq
rorl
mov
sbb
sbb
sub
dec
mov
test
sbb
adc
xor
inc
gs
inc
dec
jge
pop
pop
mov
push
rorb
and
rol
pop
int3
mov
or
and
and
pop
int3
insb
jnp
shll
cmp
dec
stos
ja
jb
pop
arpl
sbb
ret
cmp
iret
push
and
pop
xchg
mov
mov
pop
fbstp
mov
xchg
mov
mov
icebp
movzwl
adcl
iret
stos
ror
ficomps
scas
cmp
pop
dec
and
outsb
pop
inc
mov
sub
pop
adc
dec
repz
fildl
pusha
int3
dec
jle
add
cmp
sub
enter
sub
dec
or
xor
cmp
out
inc
jns
sub
xchg
cmpsl
pop
add
jnp
adc
add
mov
call
inc
ret
sbb
pop
bound
daa
rcrl
mov
stc
test
inc
rcrl
dec
and
ret
jmp
and
pop
mov
push
popa
jecxz
xlat
movsl
int3
push
sbb
inc
icebp
sahf
test
sub
push
fsts
inc
les
fs
shll
arpl
arpl
cli
push
mov
jo
xchg
jge
push
sti
cmp
je
inc
int3
pushf
jle
les
std
xor
dec
lret
xchg
popf
jb
xchg
test
cli
jge
repz
adc
dec
dec
cmpsb
cmpl
pop
mov
icebp
pop
repnz
inc
inc
out
test
mov
inc
cmp
dec
iret
dec
ds
outsl
jle
xlat
pop
inc
lods
cwtl
xor
inc
popa
cmp
pop
push
ret
push
pop
lea
mov
movsb
cmp
popf
lock
sbb
xchg
pop
push
loop
leave
push
inc
jmp
push
dec
push
push
insl
in
dec
sub
mov
filds
pushf
sub
fimull
jae
sti
xor
cmp
out
repz
inc
pop
dec
aad
pop
jg
shr
add
lds
rcll
mov
aad
aad
jnp
cmp
cmp
stos
jle
aam
cmp
lods
xlat
pop
adc
sti
aam
add
arpl
adc
add
int3
sub
arpl
dec
adc
or
dec
leave
add
adc
adc
mov
inc
leave
cmp
in
outsl
dec
jl
lret
test
cmp
imul
jle
int3
inc
mov
arpl
dec
sbb
ja
mov
js
insl
mov
cmp
inc
mov
mov
cmc
pop
dec
and
fists
pop
outsb
and
movsb
aas
or
dec
lods
leave
sarl
or
imul
leave
sbb
int3
arpl
js
insl
pop
dec
into
dec
fsubl
gs
leave
adc
pop
mov
fldenv
imul
xor
aas
cs
dec
fistpl
sbb
std
mov
out
push
pop
je
inc
sbb
movsl
popa
dec
sbb
and
xchg
into
dec
clc
lret
xchg
jle
pop
cmpsb
sbb
shrl
dec
cmp
lret
jmp
xchg
pop
mov
outsb
jg
adc
lret
fdivrl
pop
lock
pop
inc
jg
adc
lret
xor
jecxz
lea
mov
push
jle
pop
rclw
sub
jg
adc
lret
cmpb
push
icebp
pop
jg
sbb
dec
sub
pop
fwait
roll
je
push
lret
or
pop
int3
shl
mov
pop
dec
repz
ja
adc
pop
and
xchg
jg
adc
pop
push
roll
dec
les
adc
cmc
roll
dec
or
adc
lret
jle
pop
mov
mov
dec
jp
adc
lret
cmp
pop
cld
shl
nop
dec
stos
jge
negl
adc
add
pop
aad
lcall
adc
jb
sbb
push
shll
lret
jg
adc
jmp
sarl
and
jg
adc
pop
push
shrl
dec
jg,pt
adc
lret
in
jle
pop
rcl
inc
fucomi
insl
dec
pop
jg
adc
lret
lds
pop
mov
mov
dec
dec
jg
adc
ss
pop
cli
shl
mov
jge
in
pop
jnp
gs
movd
pop
rcl
std
out
cmpl
jle
pop
add
fmuls
jg
adc
out
jge
pop
sbb
lret
jg
adc
pop
dec
sarl
dec
cmp
es
lret
ljmp
inc
fndisi(8087
imul
aas
adc
lret
ret
jle
pop
xchg
shll
jo
or
xor
ficomps
enter
dec
mov
pop
jecxz
jns
arpl
or
sar
in
jg
adc
jle
pop
add
sub
dec
add
adc
jge
pop
sbb
add
repz
pop
dec
shll
dec
cmp
adc
lret
clc
jle
pop
mov
out
dec
adc
adc
lret
sarl
xchg
sarl
outsb
adc
jecxz
and
pop
add
dec
and
pop
pop
pop
adcl
mov
inc
dec
or
shll
int3
push
cld
imul
dec
inc
and
test
dec
dec
popf
loopne
inc
shlb
or
and
stos
mov
dec
dec
ja
lods
outsl
jnp
int3
stos
jmp
pop
rorb
push
ret
les
inc
stos
dec
enter
cld
stos
je
dec
dec
imul
dec
and
jnp
clc
mov
into
stc
dec
in
stos
jns
dec
jle
push
ss
jmp
shlb
sbb
dec
dec
or
sahf
mov
xor
notl
fs
and
rcll
cwtl
addr16
mov
push
mov
and
or
cld
in
dec
add
sbb
xlat
rorl
mov
dec
sarb
lods
mov
mov
mov
pop
stos
test
push
scas
mov
inc
mov
sbb
test
mov
dec
jle
adc
pop
pop
xchg
push
mov
rcrl
cmp
push
dec
cmp
xor
addr16
int3
stos
and
inc
stos
roll
dec
fadds
int
dec
dec
les
stc
jno
dec
add
cmc
ja
dec
in
imul
arpl
xchg
gs
mov
dec
dec
nop
sbb
mov
dec
dec
mov
dec
dec
movsb
or
dec
pop
add
es
cmp
inc
xor
xor
scas
aaa
jns
gs
fdivl
sbb
sub
ret
das
and
stos
xor
push
mov
daa
rcr
sbb
adc
and
aaa
rorl
out
push
mov
aad
loopne
sbb
leave
lods
add
lret
sarb
sub
xlat
lock
movsl
shll
rol
int3
sar
xchg
lds
dec
lods
add
sub
ror
sar
sti
dec
dec
sub
lods
loop
jnp
mov
aam
mov
addr16
mov
shl
int3
mov
js
dec
dec
sub
jnp
in
mov
fisttps
jecxz
or
mov
push
dec
dec
das
cltd
lods
out
jnp
fwait
mov
fcomp
lea
xchg
cmp
mov
insb
xchg
dec
dec
and
rorl
dec
jns
adc
lds
jb
mov
out
fbld
mov
sbb
mov
sbb
mov
sbb
lods
addr16
mov
mov
rorl
fsubs
int
dec
dec
les
stc
dec
dec
dec
add
push
dec
dec
in
inc
stos
loope
dec
dec
call
dec
dec
xchg
jle
mov
dec
nop
je
test
dec
mov
dec
dec
mov
dec
dec
movsb
stos
pop
sbb
pop
sbb
outsl
jnp
push
mov
or
std
adc
mov
push
and
rcll
int3
out
pop
sbb
adc
lods
fsubrs
lea
inc
push
jns
cmp
call
xlat
mov
insb
add
and
add
call
mov
dec
jle
push
iret
cmp
jnp
ds
adc
mov
jns
shrl
aam
sub
mov
xor
mov
and
dec
hlt
inc
mov
and
dec
imul
inc
dec
adc
loopne
jno
jecxz
jnp
sbb
xchg
fwait
jge
xor
pop
sub
pushf
sbbl
mov
jne
cmc
dec
out
dec
fcomp
jge
hlt
mov
stos
pop
sub
mov
jg
adc
push
xchg
mov
dec
mov
imul
mov
jae
cmp
shll
sbb
jg
adc
or
xchg
adc
and
or
jne
mov
add
dec
dec
mov
bound
sti
imul
add
mov
lods
jg
jo
push
stos
sti
mov
xorl
repz
shrb
xor
or
xchg
imul
xlat
orl
jecxz
imul
push
addr16
fs
leave
xchg
sbb
or
imul
mov
test
imul
adc
sub
or
lods
les
movsl
pop
in
jo
push
or
adc
jae
imul
adc
sub
or
movsb
lds
or
jns
movsb
inc
push
jne
inc
or
aaa
aam
mov
mov
adc
adc
inc
int3
sbb
adc
jl
sub
add
adc
shrb
insb
arpl
jle
int3
fstpt
int3
fs
sub
jnp
mov
adc
dec
shl
repz
sub
jle
int3
jecxz
xor
and
leave
add
aas
mov
jg
sub
jle
int3
mov
lret
jl
shr
fs
xor
mov
rcll
leave
and
gs
mov
mov
adc
jae
xor
int3
jns
dec
mov
shrl
leave
int3
sbb
adc
sbb
adc
cmp
pop
jle
call
and
inc
mov
jge
mov
int3
jle
int3
in
xchg
outsl
and
cld
outsl
dec
leave
in
dec
xchg
cld
mov
pushf
sub
mov
mov
int3
xchg
xchg
cmp
mov
dec
leave
mov
movsb
adc
cmp
stos
push
test
pop
sti
leave
mov
test
pop
hlt
js
mov
jnp
mov
std
imul
jge
int3
add
rorl
add
sbb
or
adc
test
addr16
xchg
pop
sub
add
push
jl
mov
dec
or
add
mov
xchg
inc
mov
pop
sti
int
mov
jnp
lahf
push
addr16
inc
shr
push
dec
icebp
jae
sbb
cmp
insb
dec
imul
and
xlat
scas
aas
cmp
outsb
sti
arpl
dec
dec
add
or
leave
stos
pop
pop
leave
jg
adc
aam
inc
jg
sub
sub
mov
int3
leave
add
cmp
aam
dec
dec
call
sbb
aad
loopne
add
out
fs
mov
testl
popa
cld
pop
test
in
mov
push
fwait
in
pop
movsb
testl
push
rep
in
mov
imul
popf
test
and
je
dec
dec
movsl
fcomip
je
insb
and
xchg
ret
in
inc
lahf
imul
mov
hlt
and
movsb
in
adc
and
push
call
aam
jl
and
jae
pop
mov
inc
and
push
call
in
dec
push
xchg
in
add
shl
lods
mov
call
mov
dec
arpl
rolb
push
cmp
and
add
jbe
sub
xchg
pop
pushf
mov
and
xchg
mov
rorb
mov
jae
jae
xorl
adc
push
cmpsl
jmp
arpl
arpl
push
call
mov
test
imul
iret
inc
jge
dec
mov
adc
je
outsl
jge
jmp
jmp
and
inc
fsubr
imul
lcall
lods
les
cmp
mov
or
repz
jnp
jge
popa
lret
sub
jnp
or
aas
adc
subb
paddsb
xlat
stos
jae
addr16
xchg
arpl
adc
mov
jo
xchg
dec
cmpsl
hlt
xor
rcrl
cmp
push
adc
sub
jl
mov
push
cmp
aam
rcl
sbb
push
leave
and
and
inc
lret
sub
xor
jge
adc
lret
int3
cmp
cmp
call
adc
enter
dec
pushf
insl
repz
fs
std
or
sti
pop
repz
cmp
and
rorb
sub
icebp
fsubrl
sti
jmp
shll
stos
push
xchg
int3
data16
ret
enter
sub
in
mov
xchg
fwait
mov
adc
imul
pop
xchg
xchg
in
sbb
dec
lret
jg
jo
push
sti
mov
inc
jge
dec
mov
xchg
or
add
std
or
int3
mov
push
mov
inc
xchg
sti
mov
imul
pop
dec
icebp
imul
mov
int3
std
push
xchg
mov
adc
push
insl
imul
jecxz
pop
dec
roll
cli
sbb
inc
sbb
mov
dec
imul
or
out
xchg
dec
mov
pop
cmp
lahf
sub
inc
mov
lds
dec
dec
cmp
push
int3
pop
arpl
sti
jl
xor
mov
dec
leave
je
adc
adc
jns
or
sti
jbe
int3
into
fs
jns
dec
cmp
jmp
mov
fwait
sbb
ds
jmp
in
repz
or
stos
rcl
aam
and
adc
bound
or
pop
stos
fdivrl
inc
sarl
add
pusha
mov
jg
sub
jle
int3
pop
adcb
mov
push
shll
jae
add
data16
fs
mov
push
sti
or
and
or
aaa
int3
fs
and
dec
or
mov
add
int3
inc
dec
push
xor
roll
int
testl
iret
push
adc
les
xchg
dec
and
dec
rol
dec
jb
jle
int3
pop
stos
imul
adc
inc
sti
hlt
sub
jle
adc
stos
jnp
mov
into
std
mov
or
pop
or
sahf
xor
jle
int3
cmp
pushf
add
xchg
dec
or
dec
lcall
dec
dec
dec
sub
fmul
call
jns
repz
sbbl
jns
fdivrl
or
int3
loop
inc
sub
jbe
xor
arpl
jmp
cld
push
int
jl
movsb
xchg
sbb
adc
sub
in
iret
sbb
orl
and
pushf
enter
pop
or
jns
sti
je
imul
or
mov
mov
into
push
testl
jl
fisttpl
jnp
rcll
mov
or
jnp
rcrb
jmp
dec
jle
cld
lea
or
and
and
sbb
repz
jle
into
lods
popf
pop
repz
sbb
jmp
jle
les
jmp
mov
int3
movsb
xchg
imul
xchg
add
and
sbb
jl
cmp
xlat
lods
je
or
arpl
dec
rcl
int3
pushf
xchg
cmp
aad
sub
cmpsl
aam
add
inc
sbb
pop
pop
imul
dec
stos
es
std
leave
adc
mov
stos
xchg
shrl
sub
shrb
dec
jle
int3
jmp
jp
ret
xchg
shll
dec
shll
dec
shll
ret
xchg
mov
jno
mov
pop
aam
ficompl
and
mov
jge
fimull
mov
jecxz
ljmp
shr
xchg
iret
fwait
std
xchg
dec
sbb
std
mov
insb
imul
lods
in
arpl
cwtl
ret
or
adc
lahf
or
xchg
mov
adc
jle
int3
lods
and
sub
arpl
dec
loopne
fcoml
dec
mov
adc
jle
adc
mov
sbb
jge
adc
jle
int3
out
stos
imul
shr
out
je
loopne
pop
cmp
rolb
test
sti
leave
dec
sbb
mov
pop
mov
sbb
test
add
jl
jl
mov
sar
negb
je
push
adc
aam
jae
push
ret
sti
insb
dec
rorl
arpl
sub
jle
add
lods
rcrl
aam
popf
add
ret
adc
jl
mov
dec
add
dec
rorl
and
or
jns
aam
lock
icebp
push
sti
adc
or
push
cltd
sub
dec
je
or
ret
js
out
inc
stos
xchg
dec
dec
cld
lret
rcll
aam
int3
lahf
je
in
stos
fsubrl
int3
dec
repz
pushf
aam
push
jns
int3
fcomps
jecxz
push
sti
pop
int3
adc
lahf
xor
mov
add
les
popa
jns
je
fs
stos
leave
cld
sbb
cmp
or
jge
addr16
loop
jnp
sarb
dec
push
mov
in
mov
sarb
add
fcoml
add
dec
inc
addr16
pop
pushf
mov
ret
std
pop
stos
xchg
dec
shl
aam
ret
adc
sub
les
xchg
or
test
add
dec
leave
mov
mov
mov
imul
ret
sti
lods
dec
shll
pushf
xchg
aam
jne
enter
cs
pop
imul
xor
sti
push
pop
lahf
ss
jge
or
int3
and
in
cmp
stos
xchg
jg
cmp
enter
sbb
leave
jnp
xor
movsb
mov
jae
test
aaa
movsb
sbb
movsb
xor
sti
adc
fdivr
imul
cmp
add
lods
mov
sub
imul
mov
xchg
sbb
sarl
test
inc
fs
or
sbb
pop
jb
jnp
stos
mov
xchg
arpl
pop
add
jb
pop
incb
std
jb
stos
add
int3
scas
jns
decb
scas
int3
cmp
mov
jns
roll
inc
xor
jecxz
sti
scas
arpl
dec
or
aam
int
mov
xchg
dec
xchg
mov
aam
repnz
ret
adc
xchg
jbe
push
xlat
hlt
pop
repz
mov
jns
mov
adc
sbb
and
test
jle
rol
or
testb
insl
or
jns
repz
mov
repz
sbb
push
jg
sub
jle
int3
xor
int3
jecxz
inc
and
xlat
clc
pop
mov
inc
adc
sub
xchg
mov
stos
dec
and
dec
shrl
aam
ljmp
sub
jle
adc
jle
lcall
fnsetpm(287
jmp
dec
shll
pop
lahf
jmp
adc
sti
sbb
cmp
mov
or
aam
in
jno
sbb
pop
xchg
shlb
adc
out
pop
or
adc
mov
inc
and
dec
sub
lock
lods
test
pop
aam
and
std
fmul
sbb
jl
pop
mov
jg
sub
dec
cmp
fdivs
sbb
insb
jl
shlb
jle
frstor
dec
arpl
addr16
sub
hlt
jle
rclb
xchg
and
fwait
dec
sub
adc
jo
add
insl
mov
int3
xchg
test
pop
xor
test
shlb
in
sub
ficoml
call
jle
int3
iret
lods
inc
arpl
dec
iret
sub
adc
add
dec
add
dec
ror
aam
lcall
sub
or
adc
jle
int3
insb
stos
jmp
inc
sarl
jne
mov
push
sbb
pop
inc
shll
lods
add
insl
or
adc
cmp
cmp
xor
mov
enter
in
fdivrl
push
jnp
and
sbb
imul
mov
jge
xchg
dec
sbb
int3
mov
or
jmp
mov
lret
leave
xchg
mov
leave
mov
or
mov
dec
add
pushf
adc
imul
std
xchg
xchg
movsb
mov
pop
repz
fwait
stos
mov
sbb
inc
and
xlat
cwtl
pop
jecxz
inc
and
sbb
cmp
dec
call
test
enter
fnstenv
jmp
mov
mov
pop
pop
sti
sarl
inc
adc
sub
mov
mov
lahf
mov
insl
fs
mov
ror
aam
mov
pop
rorl
sbb
add
ret
adc
nop
dec
xor
enter
cmp
inc
cltd
nop
mov
mov
jns
push
andb
stos
jl
mov
dec
into
or
hlt
subb
sub
sti
sub
cli
aam
test
and
insb
test
iret
or
shl
and
xchg
fsts
xchg
std
icebp
mov
lret
or
rcll
aam
xchg
or
int3
pop
lods
lods
arpl
adc
jl
mov
int3
std
xchg
xchg
repz
pop
pop
iret
mov
pop
test
cmp
ret
jecxz
sub
mov
jl
push
mov
inc
jns
pushf
mov
cs
dec
add
mov
mov
js
les
jge
mov
sbb
leave
mov
mov
or
leave
pop
pop
fmul
xchg
sub
fistpl
cmp
pop
mov
rorb
dec
xchg
pop
mov
pop
in
int
fcmovne
push
cs
jns
dec
leave
dec
sbb
mov
sub
xlat
mov
mov
aas
or
addr16
sbbl
icebp
sub
cmp
in
xlat
mov
out
stos
jecxz
sti
insb
mov
sub
int
pop
iret
imul
jnp
int3
cs
arpl
fsubrs
icebp
movsl
sti
adc
stos
mov
dec
stos
test
or
les
dec
shrl
aam
stos
lahf
cmp
das
cmpsb
pop
out
jnp
mov
int3
std
call
jge
dec
shrb
xchg
add
pop
lret
leave
add
cld
shrb
arpl
dec
dec
jmp
cli
jge
movd
int3
add
add
imul
jl
mov
dec
dec
ret
or
dec
shl
int3
push
xchg
mov
cld
arpl
dec
dec
mov
leave
rcll
jl
mov
dec
int
in
dec
shrl
sub
dec
iret
push
xchg
in
stc
adc
jge
fldt
les
sub
adc
lret
call
sbb
sarl
dec
add
adc
lret
icebp
jle
pop
test
scas
dec
dec
je
push
adc
lret
and
pop
not
mov
dec
test
ja
adc
cmp
pop
iret
shr
xchg
dec
mov
lret
insb
jle
pop
inc
rcr
les
jg
adc
inc
shrl
dec
xor
adc
lret
loope
mov
mov
pusha
jp
fs
adc
lret
sarb
pop
out
nop
stos
dec
push
cmpsl
inc
push
jge
addr16
add
adc
lret
jle
pop
adc
pop
dec
jb
sbb
push
lret
xor
pop
hlt
rcrl
dec
pop
pop
jne
pop
lret
cmp
pop
int
notl
adc
push
adc
shrl
ret
jg
adc
lret
pop
dec
inc
pop
jge
pop
pop
shll
fisttpl
jg
adc
pop
dec
shll
dec
ss
adc
lret
in
mov
mov
jg
adc
lret
sub
pop
std
shl
orl
lret
sbb
pop
cs
repnz
pushf
jg
adc
jae
sbb
lret
dec
cmc
jg
adc
pop
js
adc
es
adc
lret
xchg
jle
pop
test
inc
push
shrl
dec
aas
jg
adc
lret
in
jle
pop
mov
pop
inc
dec
jo
or
xor
fidivrs
pop
loop
mov
jns
arpl
or
mov
imul
push
cmp
pop
jne
stos
mov
sbb
scas
mov
cmpsl
xlat
fdivrl
add
mul
sub
mov
lcall
stos
xchg
in
xchg
sti
outsl
and
push
xchg
in
jbe
leave
filds
lds
push
int3
stos
stos
xchg
mov
jns
fisttpl
fwait
mov
jl
jl
pop
cld
pop
lods
pushf
or
fwait
cmpsb
jnp
pop
cld
pop
mov
pop
popa
and
push
sahf
push
pop
fbld
lods
sahf
jnp
add
int3
idiv
cld
ret
sub
sbb
lods
lods
popa
sbb
inc
fistps
sbb
push
mov
sbb
jnp
and
cmp
sbb
mov
xor
or
fildll
daa
rcll
push
lods
faddl
pop
and
fwait
pop
lahf
jnp
imul
sbb
int3
sub
leave
or
bound
sbb
pop
mov
mov
push
xchg
out
mov
sarb
xor
pop
adc
int3
in
out
pop
cmpsl
call
and
adc
pop
push
fcmovnb
push
add
or
idivl
cmpsb
fbstp
pop
das
sbb
or
pop
jp
mov
and
lret
push
sti
pop
push
sbb
test
adc
int3
and
cmp
sub
ret
imul
xchg
push
in
sbb
imul
sbb
notl
mov
jmp
add
or
cltd
cld
aas
xchg
sbb
jl
add
sub
ret
add
push
xchg
int
and
dec
rcrb
sbb
ret
repz
cltd
push
aas
push
sbb
cmp
ret
add
push
cwtl
lret
xor
push
xchg
push
subl
rcrb
pop
and
jp
lcall
rcrb
lods
adcl
inc
into
xor
inc
insl
sbb
ja
dec
mov
sub
dec
lcall
les
sbb
mov
addr16
sbb
dec
insb
out
jge
les
stos
push
ret
in
faddl
adc
inc
xchg
imul
jnp
dec
dec
mov
int
jecxz
mov
sbb
fwait
ret
add
xlat
push
or
loope
aas
fstpl
cmp
add
sub
ret
add
push
xchg
mov
stos
push
push
pop
mov
mov
inc
int3
shrb
insb
cmp
push
aas
les
stos
cmp
pop
or
cltd
cmp
push
sbb
int3
xchg
mov
adc
cmpsl
or
adc
mov
add
push
ret
xchg
xchg
mov
iret
insb
jmp
pop
sub
push
adcl
sbb
sub
ja
sub
sbb
push
pushf
inc
fstps
push
insb
scas
je
sbb
cmp
jmp
leave
scas
int3
test
sbb
fwait
test
cld
out
icebp
lods
xlat
sbb
fildll
adc
data16
lods
movsb
pop
lret
inc
jae
mov
sbb
mov
dec
jnp
pop
loopne
dec
mov
stos
add
cmp
add
in
and
adc
jae
arpl
dec
fisttps
mov
and
je
addl
add
shlb
jmp
pop
ror
aam
xchg
mov
jl
dec
xchg
sub
mov
mov
stos
into
cmpsb
mov
test
shrb
notb
dec
jle
inc
data16
cmp
xchg
in
jmp
cmp
inc
or
in
cld
out
test
movsb
sbb
andb
inc
loopne
push
shrl
xchg
mov
sub
ljmp
push
sub
cmp
add
fisttps
jb
jge
ficompl
rcrb
jnp
and
push
insb
scas
cmp
rcrb
xchg
pusha
je
jge
ficompl
mov
pop
sub
sbb
adc
int
dec
mov
lahf
imul
aam
decl
filds
jl
ret
int3
and
inc
scas
pushf
inc
ret
mov
cs
mov
out
pop
movsb
or
cmpsl
leave
cld
ficoml
lods
jmp
stos
lret
mov
scas
insb
inc
rclb
into
das
inc
andl
je,pn
loope
xchg
cld
lods
fdivl
test
aam
insb
fldenv
fwait
jns
dec
dec
test
cmp
shl
jmp
stos
push
outsb
fstps
sti
jns
jns
push
stos
stos
stos
xchg
sbb
ror
fwait
out
mov
imul
jle
push
fistpl
mov
lods
sub
in
pushf
cmp
jmp
pushf
lcall
adc
or
pop
xchg
cld
aam
lods
sbb
lret
fwait
test
insb
fwait
mov
pop
mov
jns
and
jae
cmp
push
sbb
jecxz
dec
fwait
imul
sub
pop
aam
int3
sub
push
xchg
out
push
shrb
out
or
stos
stos
push
stos
stos
xchg
int3
fld
mov
sbb
test
int3
mov
jl
fwait
ds
movsl
fwait
mov
dec
sbb
xchg
mov
jmp
and
or
mov
lods
pop
aam
push
fldenv
jns
inc
pop
add
jle
add
mov
sbb
movsb
filds
inc
sub
push
pop
pop
adc
push
push
dec
mov
mov
test
dec
dec
adc
lret
dec
dec
nop
loopne
pop
cmp
loope
push
out
outsl
jmp
mov
inc
shlb
jns
cmp
aam
pop
iret
scas
inc
mov
inc
addr16
xor
push
loopne
lahf
stos
jnp
cs
sti
mov
stos
xlat
xor
inc
push
outsl
enter
push
aad
loopne
inc
out
jns
dec
push
sub
dec
outsl
lret
es
dec
dec
fwait
rcl
inc
sbb
push
mov
ret
inc
and
add
push
inc
clc
lahf
leave
jnp
lock
mov
dec
dec
xchg
lcall
jnp
mov
jge
xchg
dec
lret
cwtl
addr16
lods
aam
sbb
jl
mov
rcrl
sarl
add
scas
sub
rcrl
movsb
and
xlat
cmpsb
sbb
push
sub
rorl
addr16
lahf
fidivrl
inc
dec
dec
hlt
inc
stos
sub
pop
sub
rorb
mov
sbb
jnp
push
xor
and
roll
adc
cmp
stos
mov
pop
adc
xor
sub
and
test
dec
dec
mov
inc
sti
mov
aad
aam
xlat
and
dec
sbb
stos
jb
dec
dec
mov
outsb
xchg
jns
inc
mov
push
sbb
andl
jnp
test
sbb
mov
mov
mov
mov
dec
sbb
stos
push
test
xlat
cld
mov
arpl
dec
xchg
fistps
xchg
mov
dec
stos
roll
xlat
mov
shrb
mov
mov
lock
jns
lds
leave
push
sbb
test
adc
pop
jnp
pusha
inc
push
push
arpl
adc
push
aad
and
dec
aam
inc
lahf
cmp
inc
dec
dec
mov
inc
fbstp
jnp
jge
adc
jge
jae
add
mov
ja
xlat
imul
arpl
pop
popa
inc
fistps
adc
fists
addr16
push
add
and
sbb
jge
dec
popa
leave
push
dec
stos
stos
adc
aam
sbb
cmp
mov
push
sbb
cmp
add
mov
addr16
aaa
jae
xor
sub
popa
das
jns
cmpsl
and
jge
sahf
and
sub
dec
mov
iret
frstor
fbld
dec
rcl
aad
xlat
leave
and
xlat
lret
sbb
stos
fcmovb
dec
dec
pop
sbb
sub
mov
push
sbb
repz
dec
jns
dec
or
stos
paddsw
inc
out
into
aam
or
xchg
mov
adc
test
sub
dec
movsb
push
mov
push
adc
dec
notb
mov
lahf
shll
mov
inc
call
adc
sub
icebp
push
adc
lahf
jmp
fists
jge
aam
loope
es
dec
mov
dec
icebp
not
sbbl
jnp
push
movsb
pushf
lahf
cltd
jnp
mov
pop
adc
addr16
jae
outsl
jnp
stos
fistpl
sub
icebp
jg
sub
cmp
nop
outsb
pop
xchg
lret
fs
push
jnp
cwtl
cs
dec
push
jne
imul
fs
rcrb
push
mov
dec
xchg
pop
adc
fbld
ret
and
add
shl
pop
mov
push
sub
mov
movsl
cmp
adc
and
inc
dec
pop
cmp
out
imul
dec
stos
sbb
fbld
cmp
sarl
jae
jl
jmp
imul
aam
fistps
pushl
cmp
inc
fisttps
hlt
das
cmp
je
pop
inc
aam
aad
mov
push
mov
adc
pop
add
inc
rolb
out
mov
dec
jae
aam
jno
mov
mov
pop
int3
mov
mov
out
jecxz
cmp
outsb
jnp
and
cmp
or
cmp
in
push
and
cmp
int3
mov
add
out
inc
popa
stos
fstpt
int
and
jle
shlb
jge
int3
lret
cwtl
dec
pop
decl
inc
mov
cmp
sbb
push
shrb
fistl
jae
faddl
xchg
mov
add
xor
in
cmp
loopne
adc
repz
ret
mov
mov
pop
arpl
call
pusha
xchg
sbb
imul
push
inc
aaa
add
and
or
je
arpl
popa
or
sbb
push
arpl
sbb
cmp
sahf
inc
pop
jbe
dec
xchg
or
in
fldt
pop
fcoml
sbb
pop
jb
pushf
push
inc
jae
dec
arpl
mov
dec
mov
push
sbb
pushf
fstps
sti
or
fs
jg
add
fwait
leave
push
push
cld
inc
daa
dec
mov
inc
aam
jecxz
lcall
fsub
insb
inc
cmp
push
lcall
push
iret
pop
jge
inc
dec
jle
sahf
sbb
fildl
je
fildll
fisttpl
dec
imul
sbb
inc
mov
cmp
mov
sbb
cmp
fstpt
aam
jge
aam
or
or
fwait
jno
dec
daa
sbb
fildl
int
aas
imul
cmp
and
pop
repz
xchg
dec
cmp
pop
mov
mov
pop
adc
jle
pop
and
cld
xchg
dec
test
adc
jle
pop
sbb
add
dec
sarl
pop
and
push
int3
xlat
ror
insl
fcmovnbe
fwait
les
dec
jg
adc
sub
fcompl
int3
sar
in
mov
pop
dec
sarl
arpl
or
dec
sub
adc
lret
sti
jle
pop
adc
je
or
cmp
aam
les
paddb
dec
sbb
pop
lods
daa
push
insb
aaa
xchg
cmp
ret
shrl
dec
fstpt
adc
pop
cmp
int3
pushf
dec
lods
jge
lds
adc
lret
fwait
jle
pop
adc
fsub
dec
lods
jge
pop
cmp
ret
lret
mov
pop
sbb
and
dec
mov
jnp
inc
mov
adc
pop
sub
hlt
mov
out
pop
mov
insb
dec
xor
les
xchg
lret
movsb
inc
jae
outsb
jle
rcrl
jecxz
mov
dec
adc
and
hlt
lret
test
jge
pop
xor
ret
xchg
dec
mov
lret
aam
in
mov
icebp
pop
inc
jg
adc
lret
cmp
pop
lret
shl
fwait
dec
cmpl
push
lret
jl
fs
or
xor
dec
les
adc
dec
repz
jae
sbb
or
sbb
sti
adc
lret
mov
pop
pop
roll
adc
cmp
and
int3
jle
pop
pushf
roll
push
dec
arpl
adc
lret
fstpt
pop
jmp
xchg
mov
adc
jle
pop
sub
aam
dec
in
mov
push
notl
lret
and
pop
mov
jl
dec
int3
jg
pop
inc
jmp
pop
fwait
shll
cld
adc
jle
pop
jecxz
stos
je
cmp
les
mov
push
in
out
mov
sub
jle
mov
je
fs
adc
xor
les
xchg
shll
sarl
adc
pop
and
hlt
test
pop
arpl
adc
lret
sti
jle
pop
push
shll
hlt
jg
adc
pop
daa
jge
inc
std
pop
out
jge
cmp
xchg
dec
imul
scas
clc
sahf
jnp
popf
lea
sbb
lods
popf
mov
mov
mov
mov
xchg
fmuls
stos
mov
sti
mov
test
lea
stos
or
adc
clc
enter
fcoms
ret
test
dec
imul
rolb
xor
xchg
lret
pop
add
clc
ds
dec
shrl
ffree
cld
dec
cmp
xor
movsb
xchg
fadds
inc
pop
mov
mov
mov
xchg
sbb
lods
push
mov
aas
dec
xchg
xor
shrl
inc
cmp
inc
pop
mov
rcrb
aaa
xor
or
push
pop
arpl
push
push
ret
push
pusha
pop
adc
icebp
test
fs
xor
dec
pop
and
xchg
mov
ja
push
negl
xor
cli
jge
into
inc
adc
bnd
in
xchg
and
sbb
jnp
sub
shrl
jecxz
arpl
test
xlat
sarl
rol
cmp
ret
mov
scas
movsb
mov
popf
andl
mov
xchg
cmp
sub
aaa
pop
stc
ret
lret
fimull
stc
xchg
dec
push
pop
dec
dec
xchg
xor
dec
dec
jae
int3
cmp
xchg
popa
sahf
ljmp
and
data16
pop
cmpsl
ss
fcoml
mov
push
adc
cmc
subb
testb
ljmp
pop
rol
and
ret
pop
data16
js
das
or
sub
cmpl
jno
sarb
adc
push
cmp
cmp
repnz
xchg
stos
aas
push
subb
pop
cmp
or
lock
hlt
shrb
repnz
stc
cmp
lahf
push
enter
xor
call
into
inc
daa
fdivrp
xor
adc
push
mov
mov
nop
inc
cmp
insb
sti
inc
sub
ss
dec
mov
sbb
adc
cmp
into
or
rcrb
pop
mov
enter
mov
cmp
push
ds
imul
aam
rcll
lods
cmp
mov
repz
push
clc
dec
jae
stos
pop
push
xchg
pop
fs
inc
in
lods
sbb
or
cwtl
xor
mov
test
mov
push
dec
pop
cmp
sbb
adc
push
jae
or
mov
cmp
xlat
pop
pop
add
mov
and
inc
jno
dec
jnp
sti
shrl
jl
jmp
cmp
subps
lea
cmp
pop
jae
stos
enter
mov
out
sbb
jne
repnz
int3
aas
arpl
adc
imul
lret
daa
vdivps
adc
cmp
dec
xchg
lret
popf
xchg
ja
sbb
dec
add
push
fwait
pushf
popa
inc
fdivl
mov
cltd
fcmovnbe
xchg
cld
xchg
arpl
xchg
popf
mov
repz
cmp
mov
add
shl
jae
imul
cmp
imul
adc
nop
mov
rorl
lods
dec
stos
scas
inc
outsl
add
std
adc
int3
movsb
repnz
ja
sbb
jge
jl
mov
std
dec
lods
mov
lods
jnp
ret
jge
imul
xchg
pop
rcl
imul
arpl
push
leave
xchg
mov
mov
dec
cmpb
ret
dec
dec
xlat
sbb
sbb
dec
ret
mov
pop
mov
jmp
pop
mov
in
mov
jo
rcrb
mov
dec
jge
mov
lret
icebp
out
or
sub
sub
popa
xchg
pusha
ljmp
leave
mov
dec
mov
sarl
ret
dec
inc
scas
inc
jnp
lret
cltd
je
dec
xchg
xorl
pop
icebp
cmpl
mov
cld
cwtd
pop
cmp
mulb
aam
hlt
ret
mov
inc
jnp
mov
stos
jnp
xchg
sbb
gs
xchg
mov
aad
lret
dec
sub
jecxz
xchg
dec
jge
sarb
push
lahf
test
rcll
mov
pop
into
cmp
mov
mov
inc
jmp
pop
lds
and
adc
lret
int3
arpl
in
daa
mov
stc
insb
xor
push
sahf
sub
pop
popa
loope
dec
pop
mov
daa
int3
mov
aas
ljmp
test
push
mov
subb
or
cmp
sarl
mov
icebp
cli
negl
or
aaa
adc
jle
xor
xlat
sub
xor
pop
or
xchg
pop
jmp
xor
in
outsl
xor
sub
jae
ret
sarb
or
shll
dec
jo
mov
mov
je
sub
fs
sub
cmp
sub
aam
loop
rcrb
cmp
fs
cld
cli
and
cmp
test
dec
xor
arpl
dec
push
dec
dec
xor
xor
in
jle
int3
xor
mov
aas
xlat
cmp
insb
jbe
hlt
sub
dec
fistps
aas
fstpt
stos
jle
lock
inc
mov
dec
push
cmp
or
repz
and
arpl
push
jl
fmull
add
push
cmp
pushf
jl
or
mov
into
add
pop
roll
xor
sbb
xchg
mov
push
shlb
dec
xchg
aas
mov
lret
or
xor
jge
push
xorb
add
jnp
shll
pop
jnp
outsb
imul
dec
imul
js
or
xor
jmp
aaa
fldenv
sub
sub
dec
xor
mov
rorl
xor
cmp
inc
xor
repz
shll
sub
sub
lods
push
cmp
mov
lcall
hlt
push
xor
mov
inc
mov
lea
sub
lods
pop
mov
inc
pusha
push
insl
dec
xor
dec
ja
add
mov
cmp
stos
inc
int3
roll
stos
mov
sahf
sub
jl
stos
ret
push
and
cmp
add
dec
fdivrp
lea
xor
sti
jnp
jmp
add
adc
xor
sti
xor
movsl
mov
xchg
inc
insb
scas
pop
movsl
sbb
inc
pop
gs
pop
mov
pop
jmp
int
sar
nop
icebp
mov
ja
test
test
int
mov
loop
mov
repz
inc
sbb
pop
fsubl
repz
sub
adc
std
xor
dec
aas
arpl
sub
test
faddl
cmp
add
pop
sar
ffreep
popa
lret
inc
xchg
aaa
stos
dec
inc
fwait
bound
xchg
or
pop
lret
pusha
or
sti
xchg
imull
sub
cmp
test
dec
xor
xor
cmp
cwtl
outsb
dec
aaa
insl
test
int
lock
mov
insb
pmullw
stos
fnstsw
in
sbb
inc
xlat
push
dec
inc
mov
notl
xchg
lods
lahf
xchg
cltd
adc
mov
inc
jnp
mov
lds
mov
jecxz
outsl
shll
add
aam
mov
dec
and
inc
repz
jnp
imul
dec
mov
sub
sub
pop
cmp
mov
adc
or
lret
gs
sub
mov
mov
xchg
std
test
sti
movl
cmpsl
push
jo
das
mov
xchg
test
jge
xchg
xchg
mov
fcos
xchg
xchg
and
xor
movsb
nop
pop
pop
add
repz
pop
sub
std
repz
in
push
push
pop
inc
repz
int3
mov
dec
sbb
push
xor
xchg
pop
bswap
dec
outsl
or
adc
decl
shrl
aad
pop
mov
arpl
outsl
push
xchg
jns
ljmp
pop
mov
jbe
jecxz
mov
mov
jae
cmpsb
cmpsb
pop
pop
pop
call
pop
xor
cmpsl
loopne
mov
outsl
movsb
mov
push
out
or
sub
cwtl
mov
jg
xchg
adc
adc
aam
jle
jo
sbb
inc
add
cmpsb
nop
cwtl
fadd
jb
movl
repz
adc
cmp
mov
ret
mov
mov
jbe
mov
or
lret
xor
shll
sub
mov
lret
nop
inc
push
sbb
iret
ret
fmull
xchg
shrl
xorb
pushf
pop
xchg
subl
pop
fwait
outsl
stc
mov
sbb
icebp
mov
int3
sahf
add
addr16
dec
pop
fnsave
test
les
hlt
mov
xlat
mov
or
in
rcrl
movsb
pop
idivl
test
mov
jle
fstpl
sti
leave
test
xchg
roll
jnp
dec
leave
mov
pop
inc
fildl
mov
inc
inc
ret
arpl
outsb
fsubrl
shl
xor
sbb
sub
insl
sub
add
add
vxorps
je
fdivrp
xchg
mov
jnp
pop
movsb
push
pop
fidivs
pop
movsl
int3
dec
sbb
cwtl
xor
dec
rcll
xor
sbb
mov
mov
outsb
adc
jmp
dec
cmp
enter
push
mov
sbb
xor
dec
sarl
adc
pop
aam
adc
cmp
mov
lods
imul
loope
inc
test
inc
inc
std
jns
sti
inc
rep
pop
pop
stc
or
push
mov
das
mov
pop
sti
or
dec
jl
lahf
mov
or
lret
pop
clc
pop
nop
add
pusha
lret
cwtl
add
lods
jns
inc
jae
lahf
xchg
pandn
pop
neg
fnsave
pop
rol
xchg
pop
sti
fdivr
sub
mov
sbb
aad
xchg
adc
dec
pop
imul
not
dec
orl
popa
int
notl
fistps
mov
mov
xchg
xor
fcom
jmp
icebp
sti
arpl
push
dec
fucomi
shll
outsb
add
jnp
roll
jbe
mov
mov
gs
mov
int
aas
inc
jle
ss
ss
mov
and
add
pop
jnp
sbb
gs
add
xchg
mov
insb
loope
xchg
outsl
pop
jl
aam
xrstors
inc
je
arpl
repz
sub
dec
stos
or
movups
or
icebp
mov
test
movsb
sbb
fiadds
daa
insl
cli
sti
jno
mov
out
mov
dec
cmp
loopne
fisubs
jnp
push
ret
add
int
pushf
and
jae
sbb
jno
jmp
xchg
lds
push
sub
lret
jmp
dec
xlat
sbb
mov
scas
into
jnp
aad
or
or
and
dec
xor
negl
je
lds
xlat
sub
pop
sbb
inc
add
mov
je
lret
int3
sar
ret
inc
adc
xchg
push
aad
orl
cld
mov
aam
mov
dec
dec
dec
add
rolb
inc
cwtl
mov
inc
dec
mov
sbb
adc
or
push
aas
popf
sti
outsb
repz
sbb
jns
xchg
sbbl
mov
outsl
sbb
inc
push
fmull
repz
mov
mov
insl
sub
lea
xchg
cmpl
mov
dec
xor
pop
sub
dec
dec
inc
sti
pop
std
imul
sub
testl
adc
insl
or
repnz
jmp
in
mov
icebp
in
adc
sub
cmp
fisttpl
cmp
adc
add
inc
sub
imul
mov
xchg
jae
lahf
sti
mov
sub
dec
mov
icebp
divb
or
fwait
icebp
cld
jmp
and
aam
shrb
push
out
movl
adc
jecxz,pt
xchg
arpl
fldt
sti
adcl
icebp
mov
xchg
jecxz
mov
repz
xor
in
stos
scas
inc
xchg
dec
push
cmp
xchg
pushf
mov
imul
mov
inc
pop
arpl
mov
jle
insb
lods
lea
adc
xlat
test
imul
lods
andl
adc
mov
cld
fists
and
mov
mov
xchg
xchg
or
pop
jge
loopne
shl
or
add
pop
cmp
sarl
add
sarl
mov
pop
out
mov
cmp
pop
icebp
mov
aaa
repz
lods
sti
push
or
jb
dec
cmp
sarl
lret
xchg
sti
imul
xchg
adc
lods
orb
jl
sbb
mov
push
stos
inc
adc
xchg
int
cmp
jb
jle
psubw
aad
mov
je
push
cld
xlat
jmp
dec
xchg
xchg
mov
inc
fists
cmp
fadds
movsl
icebp
stos
adc
rolb
xor
dec
mov
pop
or
sbb
icebp
mov
push
mov
pop
adcb
add
mov
xor
push
jnp
pop
cltd
rorb
cmc
ffree
sub
aaa
sub
rcrb
test
or
sti
pop
insb
jge
lea
pop
pop
jae
dec
jno
fisubl
pushf
push
push
dec
pop
adc
cmp
xorb
cld
cld
adc
and
push
cmp
add
push
or
push
and
in
test
das
loope
cmp
pushf
ret
pop
dec
sbb
imul
mov
repz
add
inc
nop
dec
jnp
mov
cmp
in
repnz
xchg
mov
pop
cmp
rcl
inc
push
scas
js
xchg
xor
scas
dec
push
push
in
jg
pop
js
out
and
push
mov
or
test
outsl
test
aaa
out
insb
icebp
mov
add
sbb
ds
aad
call
call
sarb
hlt
cld
in
int
cltd
or
int
jl
xchg
sbbl
jmp
mov
arpl
in
std
dec
repz
pop
or
xchg
pop
roll
insb
xchg
push
pop
sbb
fsub
pop
pop
stos
insl
jbe
inc
inc
pop
jae
dec
xor
shll
jg
repz
insb
sub
jecxz
fs
mov
ja
push
cmpl
push
in
icebp
jp
cs
sti
dec
adc
in
sbbl
hlt
stos
andl
jo
dec
cmp
pop
pop
jae
insb
repz
into
xchg
mov
xchg
shlb
jae
shll
lock
mov
dec
cmp
mov
daa
repnz
fwait
stc
cmp
push
std
mov
sbb
mov
or
push
outsb
js
jl
sbb
pop
mov
mov
pop
repz
or
dec
sub
lret
cmc
inc
pop
stos
sbb
das
sbb
xor
dec
dec
adc
sbb
dec
insl
push
incl
xchg
xchg
std
sub
cmp
mov
xchg
add
inc
add
dec
or
inc
jae
outsl
jg
pusha
or
sbb
filds
ljmp
inc
xchg
imul
lods
cltd
arpl
outsl
mov
pushf
sti
xchg
inc
sti
outsl
js
ljmp
push
xchg
or
ret
or
scas
push
sub
mov
test
adc
mov
sbb
idivl
and
pop
dec
xchg
repz
setnp
aaa
cmp
daa
ret
cmp
je
pop
xchg
mov
fidivs
xchg
dec
inc
adc
push
pushf
call
jg
ret
dec
fwait
cmp
insl
add
int3
aas
xchg
xlat
xchg
je
int3
sarb
out
push
mov
add
rclb
xchg
xchg
pushl
and
xchg
push
cli
scas
push
sub
cmovs
and
daa
push
xor
pusha
test
inc
xchg
ss
mov
push
push
xchg
cmp
outsl
jl
dec
push
inc
adcl
push
icebp
lahf
dec
sbb
mov
pop
push
sbbl
data16
fildl
jno
push
dec
lret
out
addb
jecxz
scas
jno
cmpsb
pop
in
dec
push
jnp
das
jae
sub
repz
pop
int
jg
add
jnp
das
sbb
std
fucomi
je
adc
jnp
adc
dec
je
js
cmpsl
jmp
mov
std
xchg
push
push
je
int3
sbb
xchg
adc
sbb
jecxz
push
je
arpl
push
sti
and
fdivr
lret
fdivrs
call
das
mov
jl
adc
inc
das
aad
dec
call
int3
inc
lret
arpl
inc
enter
ljmp
sbb
cltd
pop
fdivrp
in
dec
jnp
push
xchg
adc
das
hlt
lods
scas
fsubs
dec
ja
repz
inc
das
sar
pop
xor
inc
adc
xor
lea
das
js
icebp
jecxz
das
sub
mov
std
adc
je
scas
shlb
adc
jae
jnp
popf
and
mov
xor
pop
xchg
incb
push
xchg
icebp
notl
imul
scas
inc
rol
jo
xor
xor
imul
sbb
test
jae
push
sub
xlat
jg
in
dec
outsl
aas
cmp
or
or
jge
imul
ret
cld
ja
or
scas
fisttpl
jmp
dec
add
sbb
push
xor
push
inc
and
push
int
in
mov
jp
loope
and
jae
cmp
jae
or
pushf
xchg
imul
adc
pushf
fldt
or
adc
pop
and
sbb
or
dec
dec
mov
push
sbb
arpl
sti
enter
loopew
and
aas
jl
in
mov
lahf
jl
pop
fwait
stc
pop
dec
mov
push
dec
jle
in
nop
ret
or
mov
or
inc
push
xchg
inc
sbb
dec
nop
fsubrs
cwtl
rolb
inc
add
sbb
inc
pop
or
xor
push
mov
mov
push
mov
pusha
mov
js
inc
ret
test
xchg
dec
syscall
stos
dec
mov
xor
mov
dec
lahf
fistl
daa
inc
lret
mov
push
mov
call
in
adc
push
jg
aaa
mov
cmp
xchg
rolb
je
adc
sub
scas
arpl
popa
sub
jnp
sub
dec
add
mov
dec
xchg
push
je
jle
jl
jecxz
je
inc
jecxz
adc
xor
out
xchg
jmp
xchg
stos
jo
jae
mov
cmp
scas
jp
imul
ret
cmp
icebp
xlat
aas
cmc
mov
lea
addb
mov
scas
add
adc
push
xchg
adc
mov
dec
push
or
call
xor
lret
sub
sbb
push
sbb
jo
jne
inc
or
stos
and
roll
sbb
pushl
mov
ret
and
std
insb
fisttpl
jmp
icebp
adcl
jae
pop
repz
sub
sbb
mov
jae
jecxz
jae
push
inc
inc
cmc
int
lock
sbb
xor
int
loope
insb
inc
stos
in
jp
psubsb
or
mov
js
ret
scas
mov
add
xor
dec
je
xor
jae
push
xchg
icebp
inc
mov
stos
or
or
out
dec
aad
dec
ror
jae
sbb
loop
out
mov
mov
sub
icebp
test
nop
add
push
mov
mov
mov
push
xor
lds
mov
cmpsl
fucomp
sarl
insb
int
xchg
ja
or
shrl
out
ds
cltd
shr
stc
inc
sti
fildl
fucomp
scas
fwait
sarl
adcl
outsl
sti
jae
pushl
push
jmp
mov
rcrl
xchg
repz
mov
call
xchg
ret
fcmovnu
imul
mov
or
popa
test
add
xchg
imul
xor
popa
fs
adc
add
cmp
cltd
aaa
lock
insb
shll
stc
rclb
test
xchg
jecxz
adc
repnz
daa
dec
into
sub
repz
jl
jmp
pop
add
imul
xchg
mov
push
jb
fwait
dec
jae
sbb
fs
lret
cmp
pop
ljmp
jp
roll
sbb
add
xchg
fcompl
mov
cmp
stc
rep
mov
ljmp
push
lods
lds
leave
scas
movsb
xor
fisubrs
loop
loope
adc
xchg
pop
pushl
mov
xchg
sbb
jae
fs
mov
test
or
lret
inc
or
adc
mov
fwait
outsb
lret
inc
outsl
sbb
jae
jmp
in
inc
popf
icebp
js
adcl
and
ret
inc
xor
cmp
adc
imul
arpl
in
clc
sahf
mov
incl
dec
pop
dec
inc
shll
sub
scas
mov
xlat
fstp
cmp
test
cltd
arpl
aas
lret
xchg
stos
push
fimuls
popf
mov
sub
mov
push
jle
add
cltd
sahf
ret
shr
push
inc
repz
bound
sub
xchg
outsl
jns
sarl
or
adc
jae
fisttps
rcl
mov
mov
dec
sti
mov
fistpll
xchg
shll
sti
mov
iret
iret
sahf
xor
cltd
jge
test
jne
sub
adc
mov
int
lea
fisttps
rol
sarl
push
fistpll
inc
push
filds
in
stos
and
lret
dec
fcmovbe
adc
sbb
rcl
es
iret
lds
xlat
sub
jp
xor
mov
add
dec
jmp
cld
arpl
jae
fstl
cmp
push
in
jae
push
aam
cmp
imul
imul
mov
hlt
ror
xchg
icebp
xor
add
fdiv
stos
sub
arpl
fisttps
in
int3
shl
stos
loope
dec
int
mov
inc
loopne
int
neg
test
fildll
jle
es
pushf
jle
and
inc
xchg
fistpll
mov
popa
int3
shr
cmpsb
popa
int3
shr
xlat
rol
shrl
jle
and
inc
xchg
rcrl
roll
es
jb
and
jnp
insb
push
pop
je
jo
orb
push
adc
pop
jbe
push
pop
stos
adc
mov
mov
mov
jo
orb
jmp
repz
push
pop
ret
adc
add
mov
push
sarl
ror
stos
lret
mov
sti
add
mov
lret
mov
int
lret
mov
sti
add
mov
lret
mov
int
lret
mov
sti
ret
filds
jl
shll
int
xor
sbb
mov
cld
push
or
jnp
cli
jl
cli
jl
cli
jl
cli
jl
shl
loope
sub
mov
and
stc
mov
leave
or
stos
shlb
xchg
and
jns
inc
add
arpl
and
and
sbb
icebp
mov
icebp
int
rcl
out
je
fdivl
mov
icebp
sub
insb
lds
sub
cwtl
xor
sahf
fs
dec
arpl
loope
rcr
mov
stos
mov
rcr
mov
negl
fidivl
shl
test
shr
xlat
rol
shrl
fcmove
mov
push
pushf
xchg
sarl
popa
int3
shr
xlat
rol
shrl
jle
es
fcmovbe
rcl
fsts
dec
fbld
dec
leave
sarl
int
adc
int
aam
add
sub
fildll
lods
ffreep
fwait
int3
fbld
sbb
rorl
rcr
sbb
mov
mov
icebp
cmc
xchg
ja
push
dec
lock
adc
or
dec
push
imul
push
adc
sbb
ret
outsb
aaa
lea
data16
dec
fildll
clc
arpl
jae
dec
ljmp
jns
inc
push
call
pop
cltd
lret
push
cld
xor
push
inc
cld
cmp
cmp
pusha
sub
push
add
cmp
inc
fwait
xor
aad
jecxz
sub
jp
add
sbb
xor
inc
sub
or
xchg
rorl
jnp
aas
int3
push
xchg
xor
dec
push
jnp
cmp
sbb
lret
scas
aas
sbb
aas
xchg
aaa
mov
shlb
stos
jbe
jnp
sub
arpl
cmp
ret
jge
mov
fstpt
cmp
cmp
adc
mov
imul
dec
sbb
sub
add
dec
jl
rcr
inc
push
sub
scas
jnp
fildll
add
cmp
push
adc
aaa
jno
test
xchg
pop
sub
dec
jl
sarb
sti
push
xor
or
jnp
xor
adc
push
stos
jl
mov
or
inc
loope
and
aad
rcl
int3
shrl
add
out
sub
aam
roll
addl
inc
jbe
jnp
aas
jne
jecxz
call
call
int
and
jnp
push
cmc
and
or
inc
and
cmp
icebp
aaa
jnp
xor
push
inc
adc
mov
jnp
xor
iret
jnp
xor
sbb
xor
aaa
daa
inc
jnp
jecxz
jnp
sub
lret
rorl
sub
sti
add
lret
mov
sbb
sub
daa
leave
xlat
scas
xlat
sbb
rcll
aad
or
daa
xchg
jnp
shl
stos
lret
mov
jle
rcr
leave
xlat
scas
xlat
sbb
rcll
mov
rcl
sbb
adc
xchg
cmp
xor
xor
xchg
cmp
aas
shrb
leave
sub
adc
aaa
movsl
test
inc
and
xchg
add
lret
add
jnp
sub
stc
repz
cmp
xor
test
adc
leave
int3
sub
xlat
xchg
sarl
add
insb
mov
sub
jp
leave
int3
aas
scas
sub
jnp
aaa
add
push
xor
jle
shrb
leave
aas
int3
aaa
mov
fs
arpl
sub
xchg
sub
ffree
aad
jmp
jnp
xor
add
leave
xlat
int3
pop
jbe
jnp
xor
leave
cmp
sbb
aaa
xchg
xor
jnp
xor
cmp
cmp
aad
aad
aad
jle
rcl
leave
aad
aad
scas
xlat
sbb
sub
aad
shll
mov
adc
daa
iret
rorl
or
cmp
js
jae
xor
and
dec
fcmovbe
int3
aaa
scas
xor
out
shrl
sbb
xor
sarb
scas
aaa
sbb
sbb
shr
xor
daa
in
mov
jnp
xor
je
rol
shrl
rol
shll
leave
ror
shrl
xchg
shll
stos
int3
mov
jle
rcl
rcl
jle
rcl
leave
ror
shrl
xchg
shll
stos
int3
mov
xchg
shll
and
push
xchg
shll
rcl
leave
ror
shrl
xchg
shll
rcl
aad
xor
fists
aad
shll
xlat
testb
xor
andl
lea
jae
sbb
xor
xchg
xor
out
mov
sarb
leave
fnsave
popa
xlat
jnp
inc
push
mov
mov
mov
and
jae
test
mov
int
mov
sahf
mov
negl
popa
mov
jl
dec
mov
fwait
sbb
inc
dec
cmc
xchg
jnp
cld
gs
clc
icebp
dec
test
fnstsw
pop
fwait
in
fsts
jno
mov
cmp
xchg
xchg
in
iret
mov
sarb
add
call
mov
inc
stc
fs
aas
xor
lret
repz
fbstp
mov
inc
mov
jnp
sbb
jle
xchg
sbbb
arpl
jnp
mov
shll
lret
jnp
sub
add
push
mov
jae
xlat
dec
or
stc
aam
sbbl
cmpsl
sarl
aas
add
sub
das
shlb
aad
adc
fwait
mov
fcmovne
aaa
mov
sub
dec
xchg
sub
rcll
jae
xor
pop
or
xchg
xor
xchg
push
mov
jae
jle
add
dec
fwait
or
aam
and
test
in
mov
call
aaa
inc
shrb
outsb
inc
pop
sbb
sbb
inc
ficoms
inc
sarl
pop
inc
fsubp
lods
lcall
mov
mov
ret
pop
mov
jae
cmpsb
idivl
pop
push
mov
arpl
dec
ret
mov
pop
cltd
ror
dec
cld
mov
xchg
aas
rcll
fwait
sbb
cmp
adc
xor
rcll
stc
mov
aaa
mov
adc
dec
fucomi
insb
leave
icebp
dec
push
fwait
dec
addr16
mov
xor
fwait
mov
xlat
xchg
shlb
int
dec
xchg
fsubr
jnp
and
cmp
int3
jnp
aam
cmp
mov
xor
orl
inc
fsubl
imul
xchg
dec
inc
rorl
push
cmp
int3
push
push
jg
dec
xchg
pusha
je
aad
jne
adc
pop
lods
insb
test
iret
and
ret
xchg
sub
imul
adcl
lret
cmp
andl
imul
jmp
jle
xor
dec
xchg
lret
and
dec
add
mov
jae
fs
inc
inc
fildl
jg
mov
cmp
les
jecxz
inc
movsb
add
dec
jbe
inc
scas
cmpsb
das
jl
sbb
leave
jae
scas
jmp
arpl
inc
jbe
insb
mov
jbe
ja
stos
insb
sahf
sysenter
push
pop
lahf
mov
ficoml
loopne
enter
ja
sar
orl
inc
aad
xor
roll
fildll
jae
inc
loope
lahf
dec
paddw
xlat
in
pop
xchg
mov
inc
aaa
xor
push
aaa
sbb
in
jae
xor
cmp
jb
sbb
inc
jno
lock
sbb
jle
out
jnp
pushf
xchg
dec
sub
aas
inc
jne
movb
pop
jbe
push
inc
mov
jno
negb
push
lahf
or
add
call
add
and
jp
xchg
std
mov
mov
aad
aas
pusha
sub
mov
cmc
mov
xchg
repz
push
addb
fwait
pop
arpl
push
cmc
cltd
loopne
dec
jmp
cmp
ds
shll
imul
xchg
out
jg
mov
push
lret
pand
xchg
stos
push
push
aas
movsb
add
in
movsb
idiv
icebp
inc
pop
and
out
xchg
jecxz
pop
jnp
pop
pusha
dec
jo
fcoml
outsb
inc
cmp
pop
lret
xchg
das
pushf
lods
rcll
sub
aam
push
in
lods
lods
movsb
mov
push
xor
sub
aam
or
sub
push
jnp
in
lods
rcrb
in
and
or
fsubr
jp
lods
sbb
mov
or
dec
sti
jnp
dec
sti
jnp
inc
sti
or
mov
cltd
sarb
addl
out
push
sbb
jbe
mov
jnp
rorb
loop
ret
shrb
aad
or
adc
jl
inc
imul
icebp
lahf
jne
pop
fdivs
jae
inc
ret
sbb
lahf
prefetch
or
inc
adc
lods
inc
jecxz
cmpb
pop
or
adc
je
hlt
mov
mov
jnp
and
sbb
fcmovnb
dec
inc
cmp
adc
push
inc
jae
cmp
push
inc
adc
pop
arpl
test
inc
inc
arpl
dec
lods
dec
call
jl
int
add
std
pushf
int
or
jnp
leave
in
iret
scas
mov
xor
sbb
aas
and
sub
test
jp
mov
jnp
cmp
cli
nop
bound
icebp
jno
or
lret
push
ret
sbb
jnp
imul
incb
jmp
adc
ret
lret
xchg
mov
push
mov
aas
insb
xor
mov
dec
inc
movl
jmp
sbb
sti
pop
push
push
mov
inc
ja
jnp
lods
xchg
jns
and
add
push
fisttpl
jae
xlat
jl
fists
filds
mov
mov
xchg
mov
or
inc
out
jecxz
les
scas
jae
inc
jnp
add
mov
leave
inc
sbb
dec
addr16
notl
iret
inc
mov
fwait
dec
inc
sbb
insl
cmp
fsub
jmp
leave
in
pop
push
jle
sarl
jecxz
or
mov
aam
add
dec
adc
pushf
lret
addr16
dec
pop
xchg
xchg
pop
dec
push
lds
add
ss
insl
inc
sbb
hlt
push
imul
mov
mov
xchg
insl
data16
fs
stc
in
jno
adc
mov
sub
adc
add
lock
lods
sub
dec
ja
adc
pop
pop
mov
das
inc
cmc
lds
lea
mov
sbb
jae
lcall
jnp
mov
sbb
inc
mov
sbb
jmp
iret
sub
push
jmp
std
pop
jnp
sub
aas
adc
test
jge
arpl
inc
cmp
jp
sub
jae
pop
dec
jecxz
icebp
push
aam
add
icebp
lcall
pop
addr16
lret
jnp
push
rcrl
dec
aas
lods
xor
xor
sub
sub
sub
arpl
idivl
aas
scas
xor
adc
xchg
xor
mov
lret
arpl
sub
jnp
cmp
xor
jle
enter
add
dec
jp
mov
xchg
jnp
inc
xchg
dec
mov
je
sahf
test
and
push
sbbl
out
xor
mov
arpl
xchg
addb
in
adc
repz
cmp
add
cs
push
adc
jnp
mov
inc
inc
push
jns
add
cmp
add
in
mov
arpl
adc
push
arpl
and
imul
lahf
jg
hlt
sti
lea
inc
stos
push
fisttps
xlat
fildl
lahf
scas
insb
sti
sub
add
pusha
sbb
movsb
mov
movsb
stc
xchg
pop
stos
js
sub
rcrb
sti
adc
outsb
jl
jecxz
mov
jle
pusha
into
fistl
stos
xor
push
pop
sub
inc
mov
mov
cltd
int3
push
cmp
ret
xchg
hlt
pop
add
outsb
adcl
mov
prefetch
jae
adc
fsubrl
jo
aaa
das
lcall
les
in
movsb
mov
loopne
out
insb
cmp
cmp
dec
rcrb
cmp
in
pop
icebp
jl
xchg
lahf
cltd
jae
int3
jae
ss
sti
cmp
std
adc
lahf
icebp
stc
push
mov
adc
jle
enter
dec
push
cwtl
pusha
test
jp
xor
std
pushl
sub
aaa
inc
sbb
pop
paddsw
push
mov
les
ret
pop
mov
xchg
leave
jae
jae
push
xchg
mov
stc
or
lret
add
imul
inc
mov
stc
ljmp
pop
inc
repz
je
adc
mull
ret
push
xlat
es
clc
aam
mov
shll
xorl
mov
jnp
adc
xchg
cld
add
xchg
lahf
jnp
repnz
jg
into
movsl
push
cmp
or
pop
sbb
movsb
sti
push
arpl
push
mov
lret
push
jecxz
and
mov
pop
sti
insl
sbb
sbb
cmpsb
cmp
fwait
stc
data16
fwait
and
mov
push
imul
inc
adc
mov
adc
rcrb
sbb
adc
nop
jmp
adc
cmp
subb
mov
mov
jle
stos
loopne
lret
jg
mov
inc
aas
push
mov
sub
sub
adc
outsb
mov
mov
or
inc
sbb
icebp
arpl
imul
sti
stos
cmp
sub
inc
adc
mov
bound
rcrl
test
or
loope
jb
int3
xchg
jae
arpl
sbb
je
ret
test
scas
flds
jmp
fidivrl
adc
xchg
out
sub
and
adc
add
stos
or
and
insb
xor
ret
cmp
div
adc
addr16
jo
aas
stos
jl
pop
loop
jne
xchg
sub
ret
rorl
jb
das
jmp
negb
imul
jae
mov
hlt
push
push
shlb
add
pop
jnp
inc
push
test
mov
mov
and
incb
sub
shl
mov
lret
adc
or
inc
xchg
xor
adc
push
imul
ja
jnp
repz
inc
adc
xor
cmp
jae
mov
lds
cld
jecxz
inc
xchg
jl
jae
cmp
xor
xchg
add
les
ss
jae
jnp
lret
arpl
dec
inc
sbb
loope
or
push
sbb
movsl
repz
inc
mov
dec
rclb
jecxz
sbb
adc
inc
jecxz
lahf
mov
jl
add
je
into
out
insb
dec
jae
ret
jp
sbb
sbb
mov
jecxz
push
fistpl
inc
or
cmp
jae
inc
pusha
mov
inc
stos
sbb
mov
dec
xchg
jnp
repz
xchg
imul
pop
daa
cld
dec
mov
dec
jae
rorb
mov
lahf
push
ret
fldl
icebp
jae
mov
je
jae
outsl
fstpt
and
enter
sbb
imul
call
sub
sub
pop
outsl
pushf
shll
inc
mov
in
cld
sub
imul
jae
mov
push
cmp
sub
pop
dec
cmpsb
jae
lods
jmp
pop
and
adc
data16
pusha
and
fstpt
fistpll
push
jae
push
cld
jg
enter
jbe
cmp
shll
sub
sub
sbb
jl
push
outsl
ret
aam
xchg
push
pop
or
outsb
or
nop
loope
mov
hlt
out
cmp
mov
sarl
sub
es
inc
bnd
in
lock
jnp
test
jnp
fists
or
rcll
stos
xchg
and
push
and
cld
daa
jae
push
arpl
dec
mov
lahf
fimuls
iret
rcrb
cltd
call
mov
aas
add
arpl
pop
push
je
push
mov
ljmp
cltd
push
mov
rcll
push
sbb
jns
xchg
int
es
ljmp
mov
sub
adc
fs
dec
data16
cmp
movsb
fistpll
mov
scas
cmp
mov
dec
and
push
call
aam
or
dec
mov
xchg
in
mov
push
gs
sub
pop
arpl
add
leave
or
nop
mov
push
mov
enter
xor
pop
sti
mov
into
xchg
inc
lea
xchg
mov
dec
mov
pcmpeqb
mov
aaa
mov
je
sub
xchg
shr
lahf
sarl
xchg
orb
popf
sub
cld
int
mov
icebp
fidivl
arpl
jle
mov
inc
mov
adc
jo
cmp
lcall
inc
dec
mov
inc
in
xchg
add
mov
push
inc
je
or
sahf
dec
adc
cmp
mov
inc
xchg
push
dec
sub
int3
xchg
mov
lds
mov
add
xchg
xchg
or
mov
stos
shlb
lock
scas
cmp
add
or
add
imul
jnp
loope
or
mov
xchg
mov
in
sbb
push
add
mov
or
cld
jnp
lea
xchg
in
xchg
and
sbb
int3
scas
jge
lea
adc
xchg
daa
out
xchg
enter
mov
arpl
mov
inc
shlb
sbb
int3
xchg
pop
push
add
aad
push
inc
jnp
inc
xchg
leave
add
lret
sbb
add
adc
inc
rorb
ror
sbb
mov
dec
sub
lcall
push
aas
inc
lea
lds
jae
mov
imul
xor
and
sbb
jg
cmp
sbb
mov
movsb
mov
adc
jns
dec
sub
int3
mov
sub
lcall
jl
stos
int3
mov
or
insl
jcxz
sbb
jmp
fstpt
fldt
sbb
sti
mov
xchg
inc
rolb
xor
dec
sub
lcall
cld
insl
xor
stos
or
jp
subl
int3
subl
mov
scas
sbb
into
cs
lds
add
rorl
jnp
int3
scas
sbbl
andl
stc
subl
adc
ret
jp
cmpl
aam
mov
push
andb
lcall
test
dec
xor
add
jmp
test
aam
mov
jl
int3
scas
test
mov
sub
lcall
xchg
and
mov
pop
shll
roll
stos
int3
mov
out
pop
or
sub
mov
test
adc
lcall
mov
mov
and
xor
mov
dec
xor
xor
push
inc
push
hlt
mov
sub
int3
mov
mov
mov
mov
jp
mov
lret
mov
mov
xchg
xor
mov
imul
stc
add
jp
mov
add
inc
mov
sub
lcall
scas
stc
cld
mov
lock
pop
mov
leave
mov
mov
mov
mov
mov
aas
add
lret
mov
popf
aaa
sub
mov
or
or
cmp
adc
mov
mov
scas
jns
jp
mov
int3
mov
sub
lcall
scas
mov
mov
mov
mov
scas
jns
jnp
mov
xchg
and
lcall
scas
jns
dec
sub
out
sbb
add
sbb
inc
stos
mov
sub
lcall
jl
stos
int3
mov
jl
stos
int3
mov
sub
sub
stos
int3
scas
lods
xor
lcall
sub
fucomi
icebp
jnp
lods
mov
jecxz
push
cli
jl
int3
scas
lods
stc
aam
dec
jl
stos
into
lods
scas
jns
jp
scas
cld
mov
lcall
mov
mov
leave
int3
scas
scas
scas
sbb
scas
xchg
scas
and
into
scas
decb
jecxz
lods
stos
int3
scas
scas
sbb
scas
xchg
scas
cmp
scas
xchg
scas
mov
add
mov
cli
jl
int3
scas
scas
xchg
lods
lcall
adc
rep
dec
or
shr
fwait
jecxz
xchg
mov
hlt
mov
lods
adc
jno
mov
iret
xchg
xchg
loop
shr
sbb
xchg
push
or
int3
or
dec
mov
mov
adc
and
push
dec
jnp
pop
les
test
das
test
lods
xlat
pop
pushf
mov
cmc
push
mov
inc
push
pop
mov
frstor
ficoms
fisubrl
adc
pop
je
push
jae
insl
js
xchg
xor
adcb
jbe
rcrl
add
lea
push
int
sub
repz
cltd
dec
cmovg
sbb
mov
mov
rcr
sbb
adc
fisubrs
sbb
js
lahf
sub
iret
cmp
jl
lret
fstpt
pop
jmp
dec
and
insl
pop
hlt
push
ds
dec
jnp
sbb
mov
push
arpl
js
sub
dec
jl
sbb
fildl
jp
mov
jmp
fcmovne
and
push
insl
dec
mov
fcomps
push
adc
fildl
iret
push
aas
arpl
dec
dec
and
in
je
sbb
dec
or
in
cs
js
mov
sti
mov
pop
in
cs
js
mov
sti
loope
jnp
push
inc
ljmp
js
mov
sti
das
pop
pop
in
cs
js
mov
sti
push
test
cmp
xchg
push
int
mov
fdivs
ljmp
pop
dec
push
orl
xchg
hlt
dec
jnp,pt
sbb
push
add
xchg
fcmovne
add
pop
mov
jmp
push
hlt
dec
jnp,pt
sbb
xchg
lock
ljmp
lock
sbb
fstpt
adc
pop
adcb
scas
jnp
sbb
daa
pop
aas
push
pop
dec
outsl
jnp
dec
pop
mov
pop
inc
scas
push
lcall
push
jne
scas
push
imul
ret
xchg
fwait
movsb
dec
arpl
jns
sbb
push
fwait
jno
jecxz
sti
pop
and
lret
pop
ds
inc
imul
data16
arpl
pop
adc
jb
icebp
js
or
sbb
fs
mov
fidivrl
pop
jmp
pop
lock
outsb
cmp
adc
jb
aas
rorl
mov
push
lret
test
cmp
cmc
adc
pop
push
inc
les
ss
cld
push
sub
xor
sbb
or
hlt
xchg
divb
mov
test
sbb
dec
vpmaddwd
push
in
insb
stos
cwtl
sub
dec
jns
jno
fs
sbb
pop
aas
xchg
rorb
push
pop
adc
cs
stos
sbb
jo
repnz
icebp
add
outsb
ss
pop
das
xchg
fiaddl
scas
mov
lea
andl
es
sbb
add
subb
push
out
mov
ljmp
sti
xor
les
andb
in
mov
mov
in
scas
mov
push
pop
cli
sub
ret
fidivl
lods
mov
push
jp
icebp
fs
pop
push
or
mov
stc
fsts
mov
arpl
xlat
jnp
or
pushf
push
push
imul
push
and
popa
shl
push
mov
nop
dec
dec
push
test
dec
ljmp
jl
nop
adc
test
mov
adc
inc
pop
incl
lret
dec
insl
jg
shll
fst
aas
fcomi
xor
in
sub
pop
and
cmp
jae
ret
mov
push
pop
mov
mov
imul
pop
xor
pushf
dec
jnp
xlat
int
push
pop
xor
fwait
push
or
js
inc
push
pop
xor
push
push
dec
sub
dec
inc
dec
dec
cmp
inc
in
es
mov
jg
dec
jge
test
jno
jae
pop
inc
jns
mov
fisubrl
aad
adcl
dec
in
jae
fwait
add
pop
xchg
pop
fcompl
dec
pop
pop
inc
add
pop
shrl
aam
sbb
cmc
mov
xchg
pop
fstl
dec
dec
dec
xlat
insb
rcll
pusha
fimull
cmp
and
fnstcw
jg
cmp
pop
popf
dec
pop
mov
pop
push
dec
adc
fidivs
pop
mov
pusha
je
ja
pop
insl
outsl
adc
lret
pop
aaa
sub
sub
aad
leave
lret
int
icebp
repz
cmc
imul
jmp
out
xchg
xchg
pop
xchg
xchg
mov
mov
stos
pop
lods
scas
push
push
push
pop
dec
dec
pop
dec
push
xorb
js
pop
insb
outsb
jo
adc
sbb
or
adc
xor
pop
cmp
sub
xor
rcl
pop
fmul
int3
into
rolb
repnz
hlt
idiv
ljmp
xchg
xchg
xchg
cwtl
mov
mov
mov
stos
jae
scas
mov
jl
fisttpll
scas
jge
jnp
ljmp
test
pop
ljmp
popf
mov
jae
shl
pop
ljmp
jne
sbb
adc
jae
adc
cld
out
sub
pusha
lock
out
push
in
aam
aam
jne
fisttpll
mov
xchg
clc
outsl
mov
sub
out
loop
int3
cmp
cmc
pop
das
xchg
pop
pop
or
cwtl
sbb
xchg
pop
jbe
loope
dec
xchg
orb
aas
push
into
mov
or
fsubrp
pop
adc
testb
cmp
scas
shrb
xor
lods
out
inc
repnz
push
dec
or
out
ret
rorb
xchg
sub
pop
adc
dec
cld
mov
adc
adc
mov
in
or
enter
inc
sbb
nop
push
addr16
mov
xchg
ds
pop
in
jb
loopne
cmc
test
pushf
add
jmp
jg
js
adc
ret
bound
pop
mov
push
insl
das
pop
ja
push
std
mov
sbb
lret
ds
pop
add
xorl
aam
add
sbb
xchg
pop
mov
mov
pop
pusha
addr16
xchg
mov
push
cmpl
roll
sbb
jg
iret
inc
pop
xchg
data16
fcoml
lret
and
inc
push
add
pop
in
adc
pop
pop
sbb
xor
aam
aaa
int3
into
push
pop
sub
imul
pop
pop
mov
arpl
xchg
stc
pop
cmpb
sahf
adc
dec
aam
inc
pop
lock
fadds
jo
xchg
das
mov
pushl
incb
jne
js
xchg
int3
ret
mov
cmp
loope
mov
stos
or
pusha
adc
popa
cmp
sarl
lods
mov
sahf
cmpsb
adc
repz
inc
pop
push
push
mov
fadds
pop
insb
clc
mov
stc
jbe
dec
pop
and
daa
imul
adc
pop
jns
clc
xor
outsl
pop
fstps
push
add
inc
imul
rcrl
mov
dec
mov
add
loope
popa
mov
gs
out
cli
fistl
cmp
loopne
sbb
jle
test
or
pop
pop
mov
movsl
mov
pop
call
icebp
fidivl
fildll
and
jecxz
scas
dec
jbe
fwait
loop
pop
push
mov
pop
add
xchg
jns
push
vpmacssww
lock
gs
lcall
pop
inc
push
cmc
icebp
and
cmp
sbb
push
and
cmp
mov
test
nop
pop
repnz
add
jo
pop
pop
inc
add
lahf
mov
lret
test
mov
mov
movsl
or
ret
pop
les
es
mov
jns
pop
aaa
orb
sbbb
mov
cs
bound
mov
xor
iret
gs
out
pusha
imul
or
aad
adc
mov
sahf
out
inc
cmpsb
xchg
mov
out
sbb
jb
pop
sti
loope
das
cltd
pusha
inc
adc
outsl
xor
xchg
fsubrl
daa
repz
inc
adc
movsl
pop
sub
pop
mov
mov
push
push
cmp
cmp
jno
and
sahf
jmp
aam
push
xchg
mov
pushf
leave
jp
fwait
loop
outsl
ss
testb
stos
popa
loope
cwtl
mov
pop
test
mov
and
popa
fwait
lahf
xor
out
mov
das
jg
mov
in
pop
data16
lcall
jg
shl
jne
pop
and
mov
mov
jmp
loope
es
add
xchg
ror
xchg
inc
ss
adc
add
pop
jb
cmp
sbb
daa
jns
sbb
and
pushf
leave
loopne
push
pop
clc
push
mov
sub
mov
mov
lds
pushf
test
xchg
pop
push
inc
ss
xchg
sbb
into
cli
test
pop
add
scas
arpl
pop
mov
and
iret
lods
dec
add
xor
sub
mov
sub
cmp
inc
cmc
pop
lcall
sub
loopne
pop
xlat
sbbb
dec
stos
sbb
test
movsb
es
clc
inc
fstpl
testb
mov
pop
xor
and
jg
loopne
mov
cs
out
xor
pop
js
test
pop
pop
fwait
add
dec
mov
sbb
pop
or
divb
pop
scas
xchg
test
lods
and
and
test
pop
hlt
jae
sub
lds
pop
and
lock
movsb
cs
pop
ja
std
sbbl
ss
pop
out
jmp
call
daa
mov
out
lahf
mov
mov
pop
add
jg
push
in
lea
lock
adc
xchg
sbb
sub
mov
jns
cmp
cltd
cld
mov
dec
inc
stos
in
add
mov
add
shll
test
pop
aas
in
xor
and
pop
ror
mov
lods
sub
and
xor
pop
xchg
clc
xor
mov
lret
ljmp
bnd
inc
or
mov
outsl
sbb
mov
test
in
fcompl
lahf
add
cmp
jb
pop
and
repnz
xor
inc
pop
cmp
pop
jne
cmp
sub
in
std
loop
jmp
dec
call
cmpsl
cmp
test
mov
mov
pop
add
inc
mov
test
mov
pop
sub
adc
jecxz
mov
cmp
in
mov
push
push
pop
rcrb
lea
or
les
lahf
fsubl
daa
hlt
xchg
inc
lea
push
pop
xor
jg
std
mov
js
gs
xor
dec
arpl
dec
in
mov
stos
cltd
mov
lock
pop
cs
outsl
scas
aad
pop
push
xchg
xor
outsb
popf
sub
sub
mov
fwait
lock
inc
push
ficomps
pop
mov
add
mov
push
mov
lcall
inc
dec
push
mov
loop
testl
adc
cltd
aaa
sub
ret
and
add
inc
pop
lret
hlt
out
enter
dec
sub
aad
xchg
and
and
pop
jge
add
dec
pop
inc
jno
icebp
jnp
idivl
out
and
movsl
pop
dec
or
hlt
mov
into
pushf
xor
pop
imul
dec
pop
arpl
cmc
jns
into
dec
in
lcall
cmpsl
pop
clc
addl
mov
inc
pop
lock
fwait
dec
pop
jge
rclb
pushf
cld
mov
push
sub
pop
pop
push
sahf
mov
aad
pop
or
lcall
xor
push
or
sahf
addr16
subb
outsl
sub
xchg
and
aas
repnz
jecxz
add
mov
pop
shll
jo
jmp
and
sub
or
cmp
pop
pop
mov
lods
and
xor
in
jecxz
shll
outsb
pop
ror
xor
xchg
mov
cmp
adcb
popa
jg
dec
or
mov
dec
pushf
push
inc
jmp
loop
stc
cs
xchg
mov
pop
sbb
and
mov
adc
xchg
adcl
loopne
push
or
scas
pop
pushf
adc
cltd
jo
arpl
into
popf
pop
xor
movsl
xchg
imulb
int3
cwtl
data16
sub
test
mov
jl
iret
dec
mov
xchg
es
pop
add
sahf
mov
gs
mov
pop
popf
popa
mov
and
int
lods
ss
pop
leave
sbb
jg
lcall
lret
push
jo
or
inc
fst
jae
pop
and
fs
rcll
jo
mov
push
pop
dec
pop
sahf
shlb
ja
movsb
cmp
pop
push
adcb
fstps
stc
shl
jp
pop
movsb
daa
mov
pop
mov
xor
mov
mov
jg
sbb
sub
or
add
add
leave
inc
ss
pop
and
pop
shll
scas
cltd
inc
pop
xchg
sub
into
adc
sbb
sbb
je
push
std
cld
mov
cli
dec
add
inc
mov
rcrl
stos
sbb
mov
pop
pop
sub
jo
outsl
loop
jb
push
jecxz
pop
mov
fcomps
ss
lea
pop
int
cmp
adc
aam
pop
mov
fwait
nop
movsb
mov
cld
scas
outsl
sub
cmc
jno
pop
xor
gs
cltd
loopne
mov
jns
in
cmpsl
sbb
fsub
cmp
pop
lret
lcall
or
xor
test
pusha
add
fdivr
mov
push
cltd
stc
mov
push
in
mov
mov
test
pop
pop
mov
and
pop
xchg
cmp
jmp
lret
out
out
add
mov
sub
and
lds
sbb
testb
and
lock
dec
lods
xor
mov
scas
push
mov
aam
insb
ret
outsl
push
std
sbb
mov
pop
sub
lods
add
jns
xchg
pusha
xchg
call
pop
cwtl
pop
xchg
jmp
adc
fs
add
cmp
aaa
mov
fwait
lods
cmp
add
lahf
pop
dec
cld
mov
int3
adc
mov
pop
inc
sbb
out
jo
cmp
mov
aam
dec
mov
cmp
iret
pop
sbb
fs
arpl
pop
jae
jns
and
mov
pop
lret
loop
shrb
sub
pop
xchg
lods
imul
dec
out
jmp
aaa
das
or
int3
xchg
stc
jns
push
pop
inc
xchg
pop
dec
mov
jnp
popf
pop
inc
pusha
orl
lcall
gs
mov
cmpsb
inc
daa
or
sub
scas
ja
add
jp
fdivrl
push
pop
xchg
insl
pop
push
rcrl
sub
pop
lret
xchg
out
cltd
lods
xchg
cmpsb
mov
jno
lcall
cmpb
addr16
mov
pop
mov
daa
push
out
incb
xchg
inc
pop
movl
xchg
ja
inc
loop
pop
pop
xchg
cwtl
aaa
mov
ss
xchg
fcmovne
adc
or
cs
clc
push
in
mov
jbe
ljmp
push
jae
jle
or
dec
jmp
and
jno
sub
or
cmp
sbb
fsubrs
pop
push
pop
das
mov
sti
sub
test
mov
mov
adc
push
fistl
mov
and
jb,pt
stc
out
leave
clc
xor
mov
nop
pop
jnp
pop
fiaddl
js
hlt
ss
mov
cwtl
pop
xchg
arpl
pop
repz
les
test
xchg
mov
mov
lret
inc
push
enter
movsb
cld
ds
sub
nop
imul
lret
clc
jecxz
imul
pushf
lds
hlt
ljmp
movsl
stc
inc
inc
fnstsw
push
loope
outsb
xorb
out
pop
idivb
xor
repnz
dec
and
inc
xchg
pop
pop
adc
mov
and
bound
sub
cmp
fmuls
pop
fistpll
stc
pop
inc
and
mov
arpl
divb
test
in
aam
xchg
xorb
xor
fists
pop
sbb
gs
mov
adc
js
addr16
outsb
mov
mov
adc
stos
pop
cwtl
cmp
repnz
arpl
icebp
les
add
nop
js
pop
and
stos
dec
mov
popf
xor
inc
pop
call
mov
loope
or
jne
rolb
push
pop
sub
in
xor
pop
jb
clc
adc
sub
popa
push
or
pop
sbb
movsl
outsl
ljmp
dec
mov
inc
inc
jl
ret
or
jbe
xchg
movsl
lahf
into
pop
mov
cmp
pop
and
xor
sbb
and
lods
orl
mov
pop
push
out
loopne
test
lods
adcb
popa
xchg
mov
scas
mov
push
mov
and
imul
pop
lds
add
movsb
and
jne
lret
mov
loope
mov
or
pop
lods
adc
push
addr16
sub
test
jbe
add
outsl
test
addl
pop
lcall
pop
inc
loopne
push
test
fnstenv
pushf
aad
dec
pop
imul
cli
subb
jmp
cmpsb
inc
cmpsl
popf
pushf
pop
push
inc
dec
xchg
inc
xchg
or
mov
movsb
or
stc
mov
daa
push
inc
adc
test
scas
cltd
mov
adc
mov
js
test
loop
int3
pop
pusha
jns
xlat
stos
inc
fwait
sbb
sbb
insl
sub
dec
arpl
aad
divl
iret
cld
das
sbbb
lock
pusha
push
scas
mov
decl
jnp
dec
loopne
push
pop
jnp
dec
sbb
xchg
rcrb
pop
negl
dec
loopne
inc
sbb
ja
add
sbb
lods
push
mov
pop
mov
add
xor
adc
lock
in
adc
jb
pop
sub
pop
out
lret
ljmp
outsb
mov
jmp
test
out
clc
mov
out
iret
push
mov
mov
xor
xchg
test
jno
fwait
mov
movsb
sub
mov
xor
mov
test
fcompl
bound
mov
mov
mov
stos
loopne
lcall
mov
pop
subl
and
dec
push
outsb
pop
jmp
je
icebp
add
xchg
sub
cmp
fcomps
cmp
push
xlat
add
add
test
cmp
repnz
lret
pop
mov
push
xor
mov
out
adc
or
and
mov
cmp
ss
xchg
add
cmp
subl
call
into
jecxz
dec
pop
sbb
mov
or
addr16
and
push
fildll
arpl
or
jo
pop
jbe
fdivrs
jge
pop
cmpsb
push
test
aad
sahf
ja
mov
pop
mov
push
inc
test
mov
sbb
insl
mov
mov
lahf
inc
dec
pop
int
repnz
pop
jp
mov
shll
fcom
int3
lret
adc
sbbb
mov
xchg
jp
div
mov
call
push
pop
jns
adc
outsl
dec
imul
jmp
std
fstpl
jns
mov
sbbb
pop
inc
jne
aam
jb
pop
mov
adc
fnstenv
xor
xbegin
repnz
mov
addr16
pushf
add
and
or
inc
out
subl
pop
call
out
loopne
cmp
and
pop
faddl
mov
pop
jns
pushf
imul
arpl
push
sbb
gs
sbb
imulb
dec
xchg
das
or
dec
rcr
outsl
mov
loope
arpl
xor
ss
aam
rorl
sbb
jle
and
das
inc
pop
xor
sti
dec
mov
push
incb
jecxz
mov
inc
add
xchg
inc
jg
jae
pop
sbb
pop
dec
sub
sub
push
dec
imul
dec
xlat
mov
inc
add
mov
and
dec
enter
mov
jl
adc
xor
push
mov
pop
mov
stos
sub
adc
lahf
pop
js
and
sub
ja
sub
subps
idiv
in
pusha
aad
jg
sub
sub
mov
fcompl
jmp
lahf
add
mov
xchg
js,pn
out
mov
or
lock
sub
pop
clc
stos
push
outsw
insl
and
lods
outsb
push
xlat
push
and
sbb
insb
lcall
mov
adc
gs
out
shl
cmp
test
lcall
mov
negl
xchg
adc
inc
js
xchg
or
inc
out
in
sbb
jl
negl
pop
repz
push
std
or
pop
sahf
loope
inc
bound
pop
inc
jmp
js
push
mov
faddl
out
pop
sti
lret
sarb
lods
sbb
ficoml
sbb
rorb
cmp
pusha
mov
inc
dec
pop
inc
jo
push
int
loope
mov
mov
pop
xor
mov
loop
std
pop
push
sbbl
sti
test
test
lcall
xchg
add
in
pop
ds
cmc
insl
jae
aaa
pop
pop
test
roll
sub
pop
data16
incb
ss
and
stc
mov
pop
pop
push
rclb
sub
pushf
push
sbb
icebp
loop
mov
xchg
clc
fcmovnb
mov
imul
jne
or
jmp
lcall
mov
xchg
pop
nop
aaa
jl
mov
repz
rcll
push
les
mov
in
pop
into
popa
sbb
mov
rcrb
stos
jo
lahf
movsl
daa
loopne
loope
icebp
fstl
inc
cmc
pop
and
jo
les
cmp
jno
mov
js
jb
mov
pop
imul
das
adc
cwtl
stc
pop
cmpl
in
lods
pop
fnstsw
movsl
sar
hlt
loop
nop
xorl
outsb
in
xchg
ret
mov
inc
int
in
out
adc
or
mov
cs
fwait
sub
test
push
xor
and
sub
and
les
jg
ja
inc
leave
or
add
in
adc
pop
lret
dec
adcb
pop
xchg
xchg
inc
inc
cltd
lds
dec
lock
adc
cmpsl
pop
test
add
mov
jle
scas
lods
xchg
push
push
xchg
lret
sub
jge
jg
jo
pop
cmp
mov
adc
lea
inc
andl
data16
push
mov
test
inc
xor
or
push
lea
arpl
sbb
repz
or
out
imul
shlb
loope
clc
cmp
inc
push
pop
or
cwtl
cmc
pop
ja
add
pop
inc
xchg
jne
lcall
adc
sbb
push
xor
lcall
dec
aam
clc
cmp
nop
das
push
stos
faddl
mov
sub
xor
push
inc
pop
movsb
xor
sbb
pop
adc
and
fneni(8087
cmp
push
inc
ds
cmpsl
jmp
out
fs
mov
aas
bound
in
xlat
loope
in
mov
jecxz
pop
lock
aad
test
adc
stos
cld
dec
mov
rorl
test
jp
adc
push
loopne
sbb
jne
mov
jbe
movsb
xor
lods
repnz
adc
add
out
testl
sub
push
sbb
push
mov
dec
ficoms
sbb
xchg
mov
test
movsb
push
cmpsb
jp
into
pop
sbb
dec
stos
sbbl
jns
imul
pop
cltd
lods
xchg
cli
jg
cld
mov
pusha
stc
test
and
pop
ss
sarb
mov
cltd
scas
dec
inc
rorl
inc
out
mov
xor
outsl
into
mov
leave
mov
jae
test
fldl
in
scas
das
pop
pop
stos
xor
push
xlat
mov
add
jae
pop
int3
xchg
push
pop
adc
je
gs
jns
inc
sub
out
repnz
scas
pop
dec
test
cwtl
int
in
sbb
sbb
cwtl
dec
jge
push
iret
or
cmp
jge
lods
jge
cli
or
mov
pop
fwait
push
stos
jmp
jp
pop
push
mov
push
or
notb
xor
or
pop
pop
mov
sub
pop
lods
test
add
in
fsubr
push
lcall
push
sub
subl
adc
pushf
cmp
push
hlt
mov
dec
lods
jmp
push
ss
cmp
pop
pop
mov
adc
mov
pop
enter
inc
cli
push
pop
push
inc
fwait
ljmp
pop
leave
jp
popl
mov
sbb
gs
dec
sub
jbe
addb
shll
nop
icebp
dec
mov
sbb
lods
cltd
or
push
sarb
pop
push
dec
adc
pushf
in
push
push
test
dec
mov
fwait
sub
pusha
jns
and
xlat
sbb
or
inc
pop
inc
mov
sar
movsl
and
sbb
mov
ds
int
pop
popf
jg
ret
pop
pop
outsl
push
xchg
jbe
cmp
mov
pop
jmp
sbb
div
sub
in
push
jns
adc
or
movsl
adc
jmp
aas
shlb
lods
pop
and
cmp
shrb
lahf
pop
inc
loope,pt
and
adc
dec
movsb
xor
js
sahf
movsl
insl
hlt
movsb
mov
jle
roll
rcrl
jl
and
ret
jge
pop
popa
ja
cmp
sub
daa
clc
stc
pop
cmc
sub
pop
mov
cltd
cwtl
lret
mov
pop
xor
and
mov
es
push
sub
inc
add
jg
pop
clc
test
push
filds
stos
je
push
inc
xchg
xchg
notl
dec
fsubr
sbb
aam
inc
popf
cld
mov
outsl
sbbb
int
mov
mov
jno
add
int3
pop
fcomi
js
mov
and
jecxz
xchg
mov
imul
in
js
xchg
jmp
int
push
fcmovnu
lock
cmp
mov
sub
sbb
popf
xlat
lcall
pop
sti
push
gs
mov
sub
das
inc
stos
sbb
mov
shll
mov
adc
out
push
push
or
inc
std
pop
dec
sub
pop
loop
adc
stc
cmp
mov
pop
and
out
pop
xchg
cltd
jmp
adc
fisubl
sbb
pop
lods
jae
les
dec
in
sbb
cld
jo
pop
push
pop
or
sub
add
lods
push
loope
dec
pop
mov
int3
test
add
lret
cwtl
push
enter
into
dec
cmp
stc
pop
xchg
repnz
mov
push
xchg
mov
jp
and
mov
push
xchg
sbb
fwait
dec
xor
push
aas
jl
fstl
into
cmp
sub
fsts
and
imul
inc
push
aam
pop
mov
nop
clc
jl
pop
inc
les
add
mov
pop
into
stos
test
ret
dec
and
psubsw
mov
pop
aaa
movsb
cmp
nop
push
cmp
pop
in
or
fldcw
jo
rorb
sbb
jle
mov
adc
cltd
pushf
fcmove
fnstenv
mov
mov
loopne
jae
rcrb
add
das
or
adc
int
push
push
mov
pop
lds
or
enter
jbe
leave
es
mov
xchg
inc
jecxz
movsb
pop
outsb
sub
cs
mov
pop
out
xchg
popa
cmp
adc
pop
loop
mov
cmp
ficompl
cmpsb
mov
lods
dec
fsubs
inc
or
mov
pop
mov
adc
jl
das
mov
or
imul
lea
fstps
mov
push
addr16
and
jns
fisubrl
sbb
in
ja
aad
push
pop
shlb
sub
pop
fisttps
fcomp
mov
inc
out
pop
pushf
jp
xor
pop
push
mov
mov
jae
push
ljmp
pop
scas
jns
add
cltd
lods
cmp
or
sbb
xchg
mov
mov
push
shl
dec
push
pop
cmpsb
aad
jns
scas
sub
test
imul
loopne
xchg
push
test
inc
pop
mov
sbb
std
iret
pop
insb
je
imull
sbb
sub
movsb
shlb
stc
pop
mov
or
call
flds
push
test
pop
test
and
sub
jecxz
pop
enter
mov
ficoml
test
shr
add
out
push
mov
mov
cld
hlt
fdivrl
dec
cmp
dec
mov
push
push
xchg
jp
cmp
cld
xor
or
mov
mov
hlt
mov
jns
shl
pop
test
repz
add
add
sub
pop
add
lods
sub
loop
and
and
fsts
scas
and
mov
jmp
addr16
inc
add
push
inc
pop
xchg
mov
xchg
xchg
pop
and
test
sbb
iret
adc
sub
fcompl
mov
cmp
mov
pop
movsb
daa
call
testb
mov
pushf
lahf
in
xor
mov
rcrb
bound
arpl
pop
fisttpl
popa
das
add
test
pusha
mov
pop
mov
movsl
mov
pop
lods
dec
lret
cmp
pop
mov
faddl
imul
adc
push
xlat
pop
test
sti
dec
pop
jne
pop
dec
cmpsl
adc
sub
fdivrs
and
nop
pop
adc
mov
sbb
addr16
pop
mov
test
sahf
out
dec
pop
movsl
pushf
push
dec
in
mov
mov
jbe
mov
mull
fwait
pop
scas
xchg
cmp
lahf
pop
cmp
aad
ret
rcrl
jns
jnp
sbbl
aas
roll
push
out
pop
popa
mov
jmp
sbb
insb
adc
aaa
add
andl
adc
in
sbb
mov
cld
and
pop
mov
aam
mov
scas
test
icebp
nop
loopne
or
hlt
adc
mov
push
in
adc
mov
loop
in
ds
xor
push
dec
lret
mov
pop
mov
dec
iret
mov
mov
dec
lea
and
movsl
lds
mov
popf
in
push
popa
rclb
pop
lods
jmp
mov
pop
mov
js
repz
adc
pop
mov
add
divl
mov
mov
pop
dec
jle
adc
ret
pop
rorl
pop
mov
hlt
fldcw
movsb
iret
push
outsl
pusha
out
lea
and
pop
sbb
jne
loope
jno
movsb
pop
jg
mov
dec
mov
rcrb
cli
data16
cmp
movsb
sub
mov
stos
jmp
xor
insb
dec
lods
cmp
fsubrs
pop
das
shlb
jmp
xchg
dec
in
and
mov
or
sub
daa
insl
imulb
inc
cmpsl
lahf
pop
rcrb
pop
jae
aas
leave
add
sub
pushf
push
cltd
aaa
mov
inc
jns
loopne
fsubrl
inc
outsb
mov
and
aad
pop
jno
mov
mov
and
pop
cwtl
in
repz
jbe
stos
pop
xchg
mov
xchg
aam
addr16
sub
pop
subb
ret
fnclex
sub
sbb
test
xchg
repz
int
mov
das
divl
pop
push
xchg
sbb
movsb
fcomi
pop
add
mov
leave
inc
ret
and
sbb
push
push
cmp
dec
inc
xor
rcrb
push
fwait
sahf
stos
mov
pop
mov
out
jge
push
adc
adc
por
inc
pop
test
cli
jecxz
sbb
xor
inc
loope
pop
cmpsb
pop
lea
jmp
pop
dec
call
les
pop
fwait
enter
frstor
gs
js
pop
jb
ss
jno
repz
popa
aam
mov
imul
out
jae
jp
mov
push
rcl
cmpsl
dec
mov
mov
xchg
divb
shr
test
inc
orl
rol
sbb
fdivrl
stc
mov
mov
dec
les
add
dec
dec
aad
mov
in
in
or
test
pop
repnz
inc
lods
mov
gs
negl
in
cmpsb
inc
pop
mov
push
jmp
jns
pop
push
push
inc
sub
test
jp
fsubs
pushf
or
sarl
addr16
cmp
lea
pop
mov
out
test
in
dec
add
mov
xor
lds
jbe
jb
and
xor
insl
xchg
xor
scas
xchg
imul
mov
cwtl
sbb
mov
out
push
push
pop
stos
test
lret
loope
pop
into
xor
pop
fdivrs
popa
rcll
scas
mov
adc
sub
pop
outsl
dec
inc
mov
rol
sbb
lods
lods
insb
mov
into
push
adc
dec
gs
push
shrl
pop
cs
or
pop
mov
in
dec
mov
ja
xor
loopw
ss
dec
nop
js
push
adc
mov
jbe
test
outsl
adc
pop
pop
gs
dec
leave
sbb
adc
mov
pop
inc
daa
std
push
lods
jno
dec
loop
xchg
mov
loope
xlat
and
cmpsb
pop
xchg
sti
out
inc
inc
lret
xchg
test
mov
pop
loopne
mov
mov
or
xchg
movsl
sbb
nop
call
add
arpl
pop
mov
in
nop
push
xchg
add
or
mov
pop
or
mov
jb
pop
cmc
pop
es
pushf
cmpsb
sub
aam
pop
mov
lret
sub
sbb
movsl
adc
in
fists
push
mov
mov
inc
jl
or
call
pop
sbb
repnz
sbb
and
lock
jne
mov
push
orl
push
or
les
dec
jl
nop
jmp
cld
sub
insl
mov
xor
mov
sahf
inc
dec
pop
mov
fbld
icebp
mov
mov
ficoms
pop
pop
add
dec
pop
imul
push
leave
negb
cwtl
stc
jge
cmp
and
lcall
pop
dec
pop
jbe
mov
hlt
fucomip
pop
cmp
movsl
xchg
mov
adc
push
add
pop
or
clc
sub
xchg
ret
jl
aas
ret
sbb
cltd
mov
pop
out
xchg
sbb
pushf
adc
pop
lret
or
mov
cmp
paddusw
fmull
pop
sub
ret
mov
mov
add
mov
and
in
and
pop
aam
dec
stos
adc
xchg
je
test
lods
xchg
rcrb
ret
add
out
mov
repnz
fdiv
mov
and
ss
sbb
sbb
and
ds
leave
jmp
ja
pushf
mov
push
fwait
les
sub
cmp
push
mov
dec
xor
hlt
mov
mov
mov
xchg
aad
lea
fistpll
xor
push
lods
sti
mov
aam
sbb
inc
out
es
and
and
xchg
and
pop
inc
sub
test
cs
sub
pop
out
loope
cld
xchg
iret
dec
mov
jp
mov
addr16
mov
push
inc
fistpl
fstpt
dec
xchg
fisubrl
xchg
stos
xor
sbb
sub
xchg
fstps
ror
xchg
dec
pusha
dec
mov
aaa
daa
inc
lock
cli
ljmp
push
lret
daa
call
scas
test
fidivrl
xchg
dec
pop
aad
pop
xchg
fsts
in
lods
subl
adc
dec
and
jb
orb
iret
jg
std
dec
lods
pushf
mov
pop
mov
mov
jnp
scas
test
sbb
mov
or
aad
into
push
int
lods
cmp
push
addr16
mov
ss
lret
mov
std
push
stc
jns
jg
addb
sbb
jl
dec
add
aam
test
leave
mov
lcall
sub
mov
stc
mov
frstor
jns
test
sbb
int3
jmp
cli
dec
clc
sbb
sub
push
lock
sbb
mov
insb
inc
pop
and
jmp
mov
jp
daa
lret
bound
test
and
push
pop
and
lods
mov
imul
rclb
pop
ret
pop
mov
sub
lds
and
sbb
pop
fdivrp
cmp
xchg
in
jae
loop
js
add
sbb
mov
mov
daa
pop
das
js
add
sbb
pop
cwtl
xchg
sbb
lret
xchg
hlt
dec
gs
les
in
imul
sbb
sub
xchg
cltd
test
lea
stos
mov
cmp
pop
lret
dec
cmp
adc
lcall
inc
xor
push
addr16
xor
pop
repnz
mov
es
cmp
hlt
out
mov
jecxz
clc
add
ret
pop
std
jnp
mov
lret
fmulp
pop
mov
mov
pop
mov
pop
pop
lret
cld
lahf
dec
sbb
dec
add
and
and
bound
arpl
adc
insl
mov
gs
imul
and
mov
imul
out
jnp
fmull
ljmp
shll
sub
xchg
pop
add
add
push
sbb
inc
lock
dec
test
push
stc
xor
lods
cmpsb
cmp
pop
in
xchg
insb
push
jnp
pushf
int
jnp
jge
std
dec
mov
loope
adc
pop
inc
test
ds
lret
mov
pop
jle
xchg
push
push
int
push
sub
inc
int3
outsl
mov
sub
mov
sub
lds
mov
push
dec
in
ss
mov
sub
xchg
sub
aad
xor
movsb
pop
jnp
xor
mov
jns
xor
fcomps
cmp
xchg
js
sbb
call
cld
jle
pop
and
sub
mov
dec
pop
jmp
js
test
inc
push
in
inc
mov
pop
mov
mov
outsl
push
sbb
or
push
cld
mov
popf
push
sub
dec
fcoml
adc
pop
jns
xlat
add
arpl
cld
jbe
pop
in
push
lods
icebp
sbb
fsubl
aaa
mov
adc
inc
pop
dec
seto
mov
ficoms
xor
mov
ret
pop
in
jecxz
push
lock
push
adc
jno
stc
adc
in
jge
sub
rclb
stos
xor
fidivrs
cmp
adc
out
call
lods
lock
push
mov
out
das
ret
dec
shlb
cmpsb
xchg
add
push
mov
pop
int
jl
leave
fldl
pop
inc
push
dec
adc
adc
cli
mov
mov
fildl
xor
xor
clc
jle
lods
outsl
push
ret
int
dec
xor
shlb
mov
sub
addr16
cmp
cmp
rclb
subb
mov
scas
std
je
lock
jmp
es
xchg
clc
loopne
mov
jne
sbb
xchg
imul
loope
cmp
stos
push
pop
mov
cld
repz
and
pop
push
or
movsb
and
sub
mov
pop
and
inc
scas
out
dec
push
movsb
data16
out
cmpsb
lcall
rolb
mov
clc
lods
fwait
adc
mov
sahf
pop
ljmp
stc
movsb
fwait
jge
stos
aad
std
inc
mov
lcall
mov
pop
mov
icebp
inc
cmpb
leave
add
or
push
es
fisubrl
cmp
xchg
add
cvtdq2ps
xlat
stos
pop
daa
imul
jno
out
pop
repz
es
add
rcrl
jbe
push
call
dec
push
pop
mov
mov
ljmp
stc
inc
insb
mov
in
push
scas
sub
push
cmp
dec
dec
xlat
push
loopne
push
pop
jge
dec
dec
adc
fs
xorb
cmp
mov
push
mov
mov
lret
pop
je
fdivr
xchg
add
mov
nop
mov
push
inc
cmp
es
pop
adc
and
mov
pushf
pop
dec
popf
fcomps
pop
jge
aas
lret
andl
pop
gs
mov
add
int3
mov
gs
les
rorb
popa
fwait
arpl
ret
lcall
xchg
and
xor
mov
sbb
xchg
loope
sbb
cs
xchg
jns
hlt
aam
and
cmp
push
aad
out
cmpb
and
mov
lahf
imul
gs
test
pop
adc
insl
ljmp
push
add
mov
outsl
movsl
mov
icebp
xchg
out
inc
mov
jecxz
int
xor
sarl
and
or
test
sbb
or
stos
cmp
mov
mov
pop
jo
add
cmp
adc
sub
mov
fsubl
mov
inc
pop
xchg
mov
jnp
jle
mov
mov
lods
pop
pop
mov
movsl
add
test
cmpsl
shl
push
pop
mov
mov
pop
repnz
cs
out
xor
push
jg
jo
and
cmp
iret
and
cmpsl
ljmp
fisttpll
addl
movsb
and
push
mov
iret
pusha
mov
jo
add
sub
cmp
loope
lcall
pop
jmp
stos
out
mov
sub
pop
leave
test
dec
mov
jns
imul
pop
xchg
call
in
sbb
insl
out
ret
xor
xor
popl
iret
cs
xchg
jg
out
mov
lods
fwait
push
cmp
pop
sub
hlt
xor
pop
js
pop
test
ds
in
jecxz
pop
je
sbb
or
addb
xchg
movsb
lds
mov
outsb
xchg
jmp
test
int
or
in
cli
or
jo
lods
pop
cltd
leave
idivb
add
sahf
cs
stc
cmpsl
sarb
icebp
pop
adc
int3
dec
adc
pop
jmp
inc
jmp
adc
movsb
dec
insb
push
and
mov
sub
xchg
pop
repnz
mov
pop
and
add
comiss
jg
enter
dec
inc
push
push
xchg
cmpsl
push
pop
inc
and
lods
dec
sahf
stos
cmp
movsb
pop
inc
or
jmp
push
popf
mov
test
mov
jo
enter
jl
outsb
adc
popfw
out
leave
stos
mov
pop
testl
sub
sbb
sahf
push
push
mov
movsb
fstenv
loope
test
lret
jno
adc
jnp
sub
cltd
popf
rcrb
lods
adc
nop
or
cltd
jae
fxch
mov
inc
jns
fwait
emms
negl
xor
cmpb
call
inc
xchg
mov
lods
in
sub
add
cmp
faddl
sub
gs
js
sbbl
icebp
cmc
arpl
dec
inc
lret
fwait
pusha
push
push
in
or
ljmp
mov
xor
inc
inc
push
mov
stc
sbb
push
inc
rcll
enter
mov
dec
pop
pushf
lret
add
es
clc
mov
xchg
xchg
and
mov
lds
les
int
mov
mov
cmp
dec
outsb
sbb
xor
inc
mov
arpl
shll
pushl
mov
imul
roll
inc
test
mov
jecxz
mov
pop
xor
std
aam
xchg
test
pushf
fwait
lahf
imul
movsb
cmp
inc
push
xor
addr16
fimull
mov
fists
cli
mov
pop
movsb
adc
pop
mov
pop
loopne
inc
jb
sbb
mov
mov
jns
jmp
xchg
fwait
imul
enter
add
sbb
sbb
inc
dec
test
push
pop
sbb
stc
je
jae
inc
dec
movsl
jae
jp
inc
dec
sbb
lret
cmpsb
dec
xor
push
cmp
lea
imul
rcrw
cli
mov
jge
lods
popf
adc
pop
test
lods
test
mov
daa
imul
fnstcw
pusha
cmpsb
sbb
outsb
sbb
mov
loope
mov
cli
into
lret
sub
movsb
or
cmp
pop
test
stc
cmpsb
mov
inc
push
mov
dec
pop
adc
pop
inc
sub
fisttpll
in
daa
pop
arpl
jo
enter
pop
adc
loop
xchg
sub
int3
inc
cmp
xor
push
imul
mov
inc
push
cltd
push
fisubrs
out
int
arpl
jecxz
xchg
je
mov
mov
add
pop
push
sbb
and
xor
in
movsb
adc
test
inc
or
push
aad
stos
mov
dec
mov
out
fnsave
pop
aas
fstpt
mov
dec
mov
fwait
cmp
sbb
lcall
dec
arpl
ja
xor
lods
int
xchg
in
push
pop
cs
test
leave
dec
fwait
sub
or
ljmp
rclb
nop
ret
jle
dec
out
sbb
cmp
cltd
pop
out
adc
test
cwtl
stc
mov
shll
pop
xor
jp
lods
pop
mov
fldcw
fcoml
jne
and
adcl
jmp
jmp
iret
popf
dec
stos
idivb
pop
movsl
mov
mov
stos
sbb
mov
or
mov
mov
shrb
lods
lret
dec
stos
push
cli
andb
aas
insb
push
rorl
xchg
sbb
adc
shlb
ret
adc
repnz
pop
pop
lods
mov
andb
cltd
sbb
dec
pop
cmp
sub
pop
fldt
pop
xor
push
mov
pop
ret
inc
lods
mov
pop
out
mov
adc
pop
test
inc
scas
pop
sti
mov
inc
jae
ficompl
jo
sbb
adc
xor
pop
xchg
sarb
adc
jg
mov
fmull
pop
push
adc
loope
xor
cli
mov
fimull
pop
mov
lcall
call
int
divb
mov
inc
dec
cwtl
lods
jl
adc
dec
sarl
lahf
ljmp
dec
mov
stos
xchg
mov
push
ja
dec
movsb
aad
fwait
and
test
mov
test
out
rcrb
cmpsl
imulb
pop
xchg
mov
aad
cmc
mov
sbb
outsl
xor
imul
mov
aas
fucomip
dec
fsin
std
mov
jmp
int
xchg
and
push
pop
mov
loop
mov
cli
ja
push
jo
pop
das
out
call
fxch
sar
test
push
and
imul
sbb
push
repz
addr16
sbb
and
sbb
roll
rcrl
push
xor
mov
or
adc
add
xor
pop
loopne
std
xor
xor
lods
mov
pop
test
mov
pop
pop
xchg
cmp
aad
insb
adc
pop
push
mov
outsl
pop
mov
leave
adc
test
jecxz
pop
xor
jns
adc
out
adc
push
cmp
lock
push
xor
push
jae
rolb
adc
loop
nop
ret
clc
fstl
sub
pushf
outsb
mov
lock
test
pop
out
insb
dec
xor
jl
cmp
icebp
pop
cwtl
jmp
lea
mov
loop
movb
inc
push
sub
sub
mov
cmp
out
mov
xchg
or
out
fldcw
mov
cs
mov
imul
and
pop
cmp
pop
mov
mov
repnz
ret
testb
lahf
or
pop
jns
jg
mov
pop
test
movsl
jmp
gs
je
pop
xchg
inc
sub
lods
pop
pop
push
orb
xor
enter
data16
jecxz
cmpsb
pop
stc
add
fstp
push
ficompl
and
push
inc
pop
xor
sbb
sbb
push
sbb
stos
pop
sahf
cltd
loopne
inc
lods
mov
dec
mov
pop
subl
and
pop
adc
mov
xchg
insl
ret
mov
mov
lods
jno
add
sbb
or
imulb
or
dec
pop
xchg
lcall
lds
aad
fists
int
add
pop
mov
aas
movsb
push
inc
cmp
jbe
pop
xor
or
test
mulb
fidivrl
test
stc
lods
sub
test
cmpl
mov
sbb
lcall
iret
fcmovu
sub
mov
pop
mov
jns
in
test
popf
shll
cltd
xchg
loope
sbb
in
shlb
out
movsl
out
outsb
xor
sbb
jnp
clc
jmp
movsb
pop
mov
add
fidivrl
test
pop
lahf
daa
movsb
and
dec
fsts
cmpsb
aas
pop
addr16
hlt
pop
mov
and
mov
mov
test
push
repnz
and
sub
dec
negl
sbb
ljmp
mov
cltd
movsb
cmpsb
push
jbe
jl
dec
imulb
pop
jle
jae
inc
leave
xor
or
push
mov
addr16
dec
pop
daa
pop
cmp
in
lea
push
scas
arpl
sub
xor
mov
jns
std
jmp
arpl
mov
popa
cli
arpl
movsb
mov
ret
lret
sub
push
pop
cltd
mov
add
mov
jo
pop
cwtl
scas
adc
pop
xor
mov
pop
ljmp
sbb
je
test
ljmp
mov
mov
pop
lods
insb
pop
test
sub
mov
loop
cmp
add
mov
jge
cmc
je
cwtl
test
cli
popa
jns
lods
push
adc
and
dec
add
mov
lcall
push
cld
push
xor
mov
cmp
sub
sbb
adc
jp
ljmp
sti
adc
cwtl
dec
pop
movsl
cmpsl
fisubl
pop
xchg
rcrl
sbb
cmp
icebp
cmc
fstps
sbb
sbbl
loop
inc
mov
outsl
inc
jns
arpl
xor
jp
leave
scas
pop
ja
lods
sbb
mov
pop
pushf
stc
pop
jle
cmpsb
cmpsl
cmp
jo
in
movsl
cli
test
daa
fwait
xor
xorb
or
shrl
lret
ret
mov
icebp
daa
aas
jl
pop
push
sbb
push
jge
jg
pop
or
push
pusha
subl
das
adc
aaa
mov
cltd
pop
pushf
cmp
mov
data16
out
cmc
hlt
mov
or
mov
jl
pop
xchg
or
or
sub
xor
cmp
mov
pop
lock
push
nop
out
shlb
mov
test
adc
lret
jnp
push
popf
cmovg
pop
shlb
test
test
push
push
dec
popf
mov
ja
stos
idivl
lcall
orb
pop
cmpsb
add
test
jmp
pop
mov
push
in
into
outsl
lret
cwtl
inc
pop
ret
loopne
push
xchg
mov
neg
adc
pop
adc
fnsave
insl
and
cmpsl
push
mov
dec
inc
sub
mov
aam
cltd
jae
cmp
ret
inc
xor
jmp
lahf
push
pop
adc
inc
fsubrl
mov
mov
push
js
add
clc
cmp
pushf
xlat
int3
pop
out
sub
popf
ror
jae
insb
sbb
adc
xor
pop
adc
mov
call
xor
xor
outsl
jl
clc
lea
mov
loopne
pop
jge
inc
out
mov
pop
sub
adc
in
jp
jg
test
jg
pop
leave
add
repnz
jo
lds
inc
xchg
xor
pop
lock
pop
in
lea
mov
pop
ret
inc
mov
push
xchg
mov
pop
popa
in
mov
call
jge
jp
addr16
adc
pop
aad
mov
in
outsb
sbb
jge
push
in
loop
jo
cmp
lret
jmp
add
pop
push
pusha
mov
call
inc
das
sbb
sbb
pop
push
js
sub
lods
add
out
vmovaps
in
inc
push
cmp
cs
mov
pop
insl
cli
mov
in
push
scas
addr16
dec
pop
cmpl
mov
push
adc
outsl
enter
popa
aad
les
ja
xchg
sarb
cmp
ficoms
pop
lcall
mov
pop
inc
mov
loopne
pop
xchg
rclb
pop
cmp
push
add
adc
mov
push
push
pop
lret
mov
inc
add
les
adc
cs
dec
pop
movsb
lds
dec
or
out
pop
add
shlb
and
push
jge
ret
popa
insb
xchg
sbb
and
mov
sahf
movsl
or
pop
jnp
lds
repnz
pusha
or
in
mov
cwtl
pop
sahf
or
les
adc
cmp
sub
insl
mov
addr16
mov
xor
push
push
mov
inc
or
push
add
loope
insb
push
and
pop
pop
dec
outsb
adc
aas
add
jbe
rcrl
ret
push
xchg
mov
popf
mov
movsl
jo
xlat
jbe
push
notl
outsb
jno
mov
sbb
ret
repnz
fstps
pushf
jns
stos
jl
cmpsl
insb
pop
das
push
xchg
pop
jnp
dec
js
adc
push
mov
or
cwtl
pop
cld
pop
aam
shlb
pop
pop
mov
icebp
fidivs
push
negb
or
stos
sub
sahf
cmpsb
aaa
and
stc
pop
sti
es
jbe
imul
xchg
pop
stos
outsb
js
loop
mov
orl
cmp
pop
mov
pop
add
add
nop
jp
inc
fwait
imul
add
dec
loop
xchg
jns
dec
ret
pop
sub
jge
pop
lcall
mov
jae
mov
cmp
sub
mov
or
mulb
inc
pop
call
ror
mov
aam
inc
and
sbb
xor
mov
jecxz
test
mov
jl
data16
call
das
xor
inc
into
test
pop
out
jb
and
pop
jno
icebp
xor
jg
pop
jns
imul
xor
fsts
push
sub
jge
call
push
and
sbb
xchg
pop
leave
inc
ret
push
aam
mov
mov
xchg
pop
jns
jo
sub
cmp
test
int3
cs
ret
out
push
sti
jl
pop
pop
lea
jg
in
cmc
mov
mov
pop
and
mov
pop
push
add
adc
mov
test
jecxz
dec
mov
sbb
inc
cld
test
adc
sbb
pop
push
xchg
test
xchg
lret
shlb
mov
andl
out
ljmp
sbb
in
aaa
mov
fdivl
out
sub
imul
cmp
daa
neg
in
rcrb
inc
adc
mov
hlt
jno
cmp
pop
aam
jne
mov
in
or
or
insb
loop
pop
test
insl
in
cmp
sbb
mov
jp
or
lods
ret
jo
ret
push
mov
mov
push
incb
and
clc
pop
mov
and
pop
pop
add
idivb
daa
push
dec
pop
sti
nop
enter
sahf
pop
stc
inc
outsl
data16
subl
aas
sbbl
dec
scas
adc
test
addl
gs
movsl
incl
lock
xor
popf
pop
sahf
jae
hlt
test
mov
mov
sub
pop
jae
sbb
xchg
gs
subl
pop
rorl
test
jp
xchg
stos
lcall
fimull
jb
inc
xor
aad
sub
pop
call
or
mov
int
popf
sbbl
jmp
gs
cld
leave
jg
loopne
xor
incb
lods
push
adc
cmp
jae
mov
out
stc
sub
fcoml
add
ja
jbe
arpl
aas
and
sub
lock
insb
pop
pop
rorb
jb
dec
and
push
jg
shl
push
popa
jb
pushl
or
sub
mov
rorb
insl
cmp
push
fisttps
jbe
outsl
fildll
pop
or
mov
mov
subl
xchg
loop
lods
imul
dec
push
jns
aam
stos
lret
inc
scas
pop
gs
inc
dec
adc
inc
inc
pop
add
sub
and
fucomi
out
xlat
cmp
imul
into
push
call
jno
xchg
mov
dec
mov
xor
lods
mov
mov
into
sbb
add
jne
dec
jnp
dec
iret
jl
push
out
mov
dec
cltd
testb
mov
andl
sahf
hlt
pop
icebp
push
shrl
in
pop
stos
inc
repz
sbb
out
push
push
ss
aas
pop
lret
into
mov
aad
mov
fiadds
loope
push
sbb
push
cmc
xchg
pop
and
mov
dec
movsb
mov
pop
and
stc
mov
aad
xor
xchg
mov
rclb
int3
push
insl
jl
mov
int
ret
push
imulb
pop
mov
or
mov
pop
je
clc
cltd
pop
dec
shlb
sahf
or
aad
pop
scas
push
and
movsl
fcomps
mov
cmp
test
jecxz
bound
adc
pop
xor
inc
addr16
push
pop
movl
daa
jb
pop
in
cld
fsub
mov
aas
gs
xchg
pop
cmpsb
and
add
stos
and
scas
pop
movsl
into
inc
popf
sbb
adc
out
add
and
iret
push
mov
jne
push
cltd
shlb
mov
and
sub
mov
imul
jns
pusha
jp
fwait
lea
popa
cmp
fwait
dec
mov
cmp
outsl
in
stc
pop
mov
addr16
pop
cmpsl
ret
sub
enter
leave
mov
rcrb
mov
xchg
xor
xchg
insl
xchg
lret
repnz
cmp
adc
mov
gs
pop
push
data16
mov
mov
dec
fdiv
cmpsl
or
sbb
pop
test
add
xor
pop
in
ret
les
jae
pop
aad
sbb
add
add
pop
xor
xchg
add
mov
pop
fnstsw
cmp
xchg
add
lds
pop
clc
push
jle
mov
push
inc
rorb
and
aas
popf
dec
push
mov
sub
jge
sub
xchg
push
lea
cmp
adc
loope
sub
adc
lea
mov
jbe,pn
cwtl
arpl
test
subb
in
loope
into
pop
push
sbb
imul
lds
loope
pop
mov
jbe
pop
jns
repnz
mov
push
frstor
lcall
pop
outsb
or
add
cs
sub
call
pop
scas
cmp
mov
adc
sbb
dec
mov
pop
push
sahf
ljmp
mov
cmp
fwait
sbb
cmp
fs
in
pop
loop
test
sbb
xor
jecxz
jnp
int3
lahf
in
fldcw
test
mov
adc
or
movsb
and
and
out
jmp
pop
or
jg
sahf
pop
or
les
pop
cmp
mov
adc
xor
jge
pop
xor
cmpsl
jmp
pop
es
pushf
and
cmp
cld
push
out
call
jl
ss
aad
in
mov
test
push
rep
dec
dec
arpl
pop
push
clc
fisubl
mov
sahf
pop
shll
outsb
mov
xorl
lret
dec
sahf
pop
out
repz
test
fdiv
or
push
push
jnp
cmovg
pop
out
das
into
add
pop
pop
rcrb
push
mov
test
es
xor
add
sbb
lea
jb
jmp
xlat
pop
fstpt
xor
cld
in
and
dec
jns
sbb
pop
or
pop
adc
cmp
mov
sub
out
sbb
loope
pop
outsb
mov
add
sbb
jne
add
vpsubq
fcomps
or
pusha
cwtl
jmp
inc
pop
rol
nop
sub
sbb
pop
jo
or
mov
imul
aad
in
pop
fisubrs
inc
call
andl
out
fsqrt
leave
dec
pop
xchg
mov
sbb
and
pop
inc
cs
pop
xor
cmc
imul
pushf
sarl
xchg
mov
pop
pop
add
fdivr
jne
pushf
lcall
pop
arpl
sub
xor
ret
pop
out
fsubrl
jmp
cmp
js
sbb
leave
nopl
fistpl
mov
mov
clc
ss
lds
jno
jnp
or
inc
out
pop
mov
ret
test
call
and
shlb
sbb
mov
mov
out
mov
dec
jo
mov
mov
loope
dec
ja
mov
lret
movsb
inc
cvtdq2ps
push
adc
es
ds
jne
data16
lock
inc
test
mov
out
sbb
lock
and
add
sub
and
pop
shll
enter
jecxz
pop
push
jae
xchg
out
mov
mov
repnz
or
sbb
adc
fwait
and
test
mov
sbb
jbe
frstor
xchg
addr16
lret
or
mov
mov
sbb
push
lds
out
js
jo
in
stos
pop
xor
xchg
push
movsb
mov
pop
jae
xorl
les
adc
lcall
sbbb
push
mov
add
addr16
inc
push
rcll
imul
aas
inc
sti
pop
xchg
in
inc
pop
xchg
jmp
cmp
out
pop
dec
dec
adc
ljmp
jecxz
mov
mov
pop
jo
push
and
sub
leave
pop
shll
push
hlt
mov
mov
jns
mov
mov
sbb
mov
fs
sub
jne
push
scas
pop
mov
cmp
jp
lods
sbb
mov
lret
adc
mov
stos
outsb
mov
add
mov
call
cmp
adc
dec
mov
push
mov
mov
mov
mov
mov
and
shlb
jmp
leave
jns
pop
nop
jmp
shrb
fsubrl
clc
pop
add
ss
subb
loopne
pop
xchg
cld
sub
sub
pop
xor
sbb
faddl
inc
cmp
pop
es
or
sub
dec
les
ja
pop
jne
int
add
test
inc
bound
call
imul
and
aad
jne
fstpt
xlat
dec
and
shll
stos
xor
pmaddwd
scas
xchg
push
xlat
std
das
out
lods
dec
pop
sbb
jne
inc
insl
aam
dec
jg
inc
sbbl
cs
or
pop
enter
push
dec
inc
jae
bound
fwait
insl
jg
jns
gs
outsl
sbb
arpl
sbb
das
pop
or
add
jae
and
or
pop
sbb
sub
pop
xor
mov
xchg
imul
aas
sbb
pop
mov
sub
sbb
inc
aas
pop
loopne
str
or
pop
mov
subb
ret
dec
add
arpl
shl
push
adcl
int
std
and
pop
jg
xor
scas
lahf
sarl
sbb
dec
mov
xor
mov
pop
lds
sti
scas
out
fdivl
clc
cs
cmp
lock
or
mov
inc
pop
inc
dec
xchg
push
push
pop
inc
shlb
scas
fstpl
andl
jb
pop
pop
xchg
mov
xor
pop
mov
adc
adc
int3
cmp
push
repz
lret
xor
das
dec
loope
movb
sbb
cmp
fsubp
push
mov
dec
data16
clc
add
mov
in
add
pop
test
cwtl
sarl
and
push
movsl
xor
sbbb
jns
xor
jbe
mov
xor
icebp
imul
movsl
xorb
xchg
xchg
pop
rclb
sbb
xor
jecxz
imul
mov
pop
mov
xor
lahf
mov
and
ja
cvtdq2ps
mov
shlb
pop
call
push
add
or
push
pushf
fdivrl
mov
lock
inc
mov
pop
xchg
push
pop
mov
dec
fs
inc
jmp
pop
jl
es
jnp
xlat
mov
add
xchg
pop
sahf
fisttpl
pop
pushf
lods
add
jns
pop
cmp
pop
or
out
xor
pop
mov
shlb
mov
sub
sbb
fisubs
jae
inc
xchg
add
testb
xchg
and
outsl
pop
je
roll
inc
add
inc
cltd
xchg
or
pushf
mov
cmc
push
lret
ja
pop
or
adc
add
arpl
js
pop
lahf
int
jmp
mov
sbbl
shl
lock
movsb
sbbb
repnz
jb
pop
filds
adc
mov
pop
cmp
int3
stc
pop
insb
push
pop
ret
mov
test
in
jp
add
imul
pop
lcall
movsb
outsb
pop
pop
sbb
in
sarb
testl
pop
test
outsl
fstpl
sub
cmpsl
outsb
shrb
xor
mov
out
mov
sbb
add
dec
pop
call
pop
jg
pop
repz
into
in
pop
iret
incb
popf
inc
sti
negb
fdivs
nop
idivl
pop
jbe
mov
inc
dec
adc
dec
je
xchg
jl
imul
pop
orps
das
xor
int
mov
jbe
xchg
jns
or
xchg
mov
xchg
popl
rcrb
push
push
setl
add
mov
shlb
sbb
lock
fdivl
pop
fcom
cmpsb
mov
cmp
movsb
pop
out
sbb
add
mov
sub
xor
cwtl
pop
pop
addr16
pop
mov
push
jns
outsb
mov
test
lods
pushf
repz
mov
pop
iret
add
xlat
fdivl
rcll
pop
sbb
js
lock
into
fcompl
mov
popa
jmp
repnz
pop
jle
push
jae
pop
inc
stos
inc
int3
sbb
insl
jb
adc
inc
push
or
bound
jp
insb
gs
jno
mov
sti
out
inc
pop
movsl
mov
mov
repz
pop
aas
fucomp
lods
sub
pop
cmpsb
sahf
out
mov
push
push
sub
jbe
mov
arpl
pop
jmp
xchg
pop
mov
lahf
stc
jge
mov
mov
or
mov
inc
mov
pop
gs
scas
push
inc
mov
cmp
jmp
mov
scas
rcrb
cs
pop
lods
insl
arpl
sub
outsb
adc
ja
insb
out
adc
clc
mov
dec
cmp
sbb
jmp
gs
mov
push
dec
push
mov
xor
nop
push
push
adc
pop
mov
lahf
pop
cmp
cmp
and
jle
popf
jmp
sbb
push
gs
or
sbbb
or
imul
jg
sahf
and
arpl
adc
push
scas
push
or
insb
push
add
sbb
push
cld
test
jp
cmpsb
outsb
pop
inc
sub
dec
or
ss
xor
sarb
nop
lret
pop
fwait
out
xchg
hlt
imul
inc
cli
divb
test
pushf
mov
out
dec
mov
mov
inc
fmul
xchg
pop
std
adc
int
fbld
pop
in
insl
popf
sub
or
and
sbb
enter
dec
js
daa
ret
jg
sbb
cmp
int3
mov
shlb
popa
cmp
add
outsl
aam
aas
or
mov
negl
shll
fisubrs
sbb
push
orb
lds
and
fimull
jb
dec
xchg
pop
push
cwtl
mov
mov
fcompl
sub
leave
movsb
aam
push
sub
ss
push
aaa
or
sarb
lret
adc
mov
cmp
dec
jge
xchg
movsb
adc
xchg
sub
imul
in
lcall
int
pop
rcl
push
fidivrs
pop
clc
xor
xchg
jp
jae
mov
add
xchg
fcoms
ret
jg
std
pop
roll
aad
lods
mov
pop
loope
fimull
sub
loopne
call
adc
pop
in
xor
mov
mov
leave
in
fsubl
mov
xchg
js
cmp
out
inc
or
pop
jb
push
lcall
push
xchg
push
pop
shlb
xor
mov
xchg
dec
pop
outsl
xor
cmp
push
dec
pop
xor
lods
pop
mov
ljmp
out
fstpt
push
adc
pop
dec
pop
xor
pop
jno
sub
xor
js
bnd
lcall
mov
das
adc
mov
sahf
mov
sbb
cmpsb
mov
or
call
pop
push
notl
js
fs
pop
in
push
imul
mov
test
xor
lahf
mov
jg
cmpsb
pop
mov
sub
sahf
xchg
out
pop
cmp
push
pop
or
fistl
pop
xchg
shll
jbe
jcxz
mov
push
sbb
cmpsl
sbb
test
pop
cld
and
jg
aad
add
pop
mov
xchg
rolb
testb
cmp
shll
lods
jle
inc
mov
pop
xchg
push
and
jp
iret
mov
fsubr
xor
pop
daa
jle
test
mov
mov
loopne
mov
pop
sbb
fsubrl
adc
fidivrl
sbb
mov
clc
fisttpl
sahf
stc
inc
pop
mov
js
adc
xchg
add
adc
outsl
push
lock
pop
int
add
xor
jecxz
dec
pop
sub
jge
call
and
cltd
pop
jecxz
jno
int
pushf
add
lea
cmp
push
insl
addr16
test
mov
movsl
andl
add
add
sbb
sub
inc
out
insb
inc
pop
les
adc
in
sbb
and
pop
ret
data16
pop
mov
lock
pop
outsl
leave
dec
xor
int
inc
repnz
fistpll
leave
push
xor
dec
fstpt
into
and
add
pop
pop
pop
out
add
in
inc
pop
sub
mov
cmp
jb
inc
repz
aas
insl
add
adc
or
jno
pop
mov
int3
sub
stc
push
pop
movsb
pop
mov
mov
xor
lcall
insb
out
lock
pop
mov
xchg
pop
shrl
cmp
xrelease
push
loope
cmc
push
fsubrl
lret
dec
push
or
enter
mov
mov
das
les
adc
mov
xchg
xchg
mov
cwtl
mov
add
mulb
lea
push
imul
or
mov
sub
mov
mov
cmp
lods
adc
push
sbb
fcomi
imul
or
xlat
cmpsb
adc
clc
cmp
xor
scas
test
sub
jno
or
cli
sub
dec
cmpsl
rcrl
pop
sti
xchg
xchg
jmp
pushf
incl
inc
and
bnd
pop
pop
call
pop
xor
add
mov
call
clc
stos
pop
add
dec
pop
push
or
mov
pop
ret
xchg
scas
mov
pop
sar
inc
mov
push
test
sub
out
xor
jl
pop
jmp
xor
loope
push
shll
xor
mov
mov
push
js
pop
cmp
sar
or
pop
out
mov
dec
mov
push
fcoms
dec
jecxz
push
lock
sub
adc
pop
mov
add
dec
inc
pop
sub
fistps
jg
orl
ja
lock
in
out
lods
cmp
cmc
push
fnstenv
out
and
lcall
sahf
mov
mov
pop
pop
dec
arpl
inc
call
fucomi
mov
cld
mov
dec
jae
mov
repnz
int3
sub
insb
fldenv
jle
call
std
and
fstpt
and
mov
push
cmp
pushf
mov
push
hlt
or
ret
lea
dec
jb
pop
add
insl
bound
inc
fidivrs
sub
roll
in
rolb
pop
sub
and
or
jmp
fdiv
push
xor
stc
jl
mov
jp
into
cmpsl
ss
imull
ljmp
mov
sub
fwait
daa
les
jbe
pop
pushf
mov
xor
shll
outsb
jecxz
or
lcall
lahf
adc
fiadds
mov
push
dec
jecxz
add
mov
loope
stc
jnp
mov
mov
mov
roll
or
push
inc
and
fildl
xchg
fs
mov
dec
shll
sub
aad
lods
mov
jecxz
jnp
out
push
dec
pushf
ja
pop
int3
mov
fisttpl
movsb
add
mov
ss
mov
scas
inc
jp
call
pop
ja
push
mov
adc
gs
shlb
pop
lea
inc
movsb
dec
aad
inc
pop
cltd
jbe
sbb
xchg
fildl
pop
fsubrs
add
fistps
mov
sti
sarb
push
add
mov
and
push
stos
fistpll
adc
aad
adc
lods
sub
or
sti
pop
gs
dec
jg
dec
and
addr16
add
mov
outsl
pop
lds
push
pop
adc
mov
push
push
pop
dec
adc
jae
movsl
rcrl
jge
leave
push
dec
fidivl
addb
lret
es
test
and
cmp
or
pop
mov
fcoms
xchg
sbb
mov
fcompl
pop
nop
bound
icebp
lahf
push
pop
sub
pop
sti
lock
mov
pop
fistpl
push
pushf
jle
dec
stc
rcrb
xor
pop
jp
jmp
lods
es
add
xchg
out
daa
fs
or
add
call
outsl
stos
js
jo
insb
jmp
popf
mov
push
aaa
add
sub
ret
movsl
and
mov
jne
inc
mov
popf
and
ss
jle
fistpll
push
mov
lcall
mov
or
dec
cmp
pop
or
lret
in
xchg
pop
mov
sti
repz
int3
cmp
push
pushf
test
mov
hlt
add
adc
shrl
in
std
repnz
in
push
cmp
in
pop
cmpl
jae
add
into
add
mov
test
imul
mov
mov
stos
pushf
jns
mov
test
mov
loopne
pop
push
inc
lcall
mov
rol
mov
adc
pushf
inc
or
testl
stc
addr16
sti
scas
insl
or
push
test
cmpsl
stos
xor
pop
adc
or
sbb
jbe
pop
pop
negl
shr
arpl
push
push
mov
ror
mov
mov
jmp
stos
pop
jmp
or
pop
push
add
xchg
aas
roll
push
or
adc
imul
jnp
xor
jg
pop
lahf
mov
adc
jne
push
xchg
xor
clc
dec
test
push
int
adc
lret
xchg
pop
out
add
pop
call
test
xor
xchg
fidivrl
fldcw
fdivrp
adc
popa
test
mov
cmp
pop
fs
and
rorl
push
out
in
pop
jae
aas
mov
movsl
cvtdq2ps
lods
stc
sub
push
mov
bound
loope
lods
mov
movsb
adc
adc
cmp
xchg
sbbb
mov
cmpsl
fidivs
subl
mov
xchg
pusha
or
adc
jecxz
fistpl
call
push
lret
pop
scas
out
out
push
and
lds
inc
xor
hlt
xor
pop
pusha
mov
jmp
xor
insl
pop
inc
push
xor
and
fildl
movsl
out
push
les
xor
jbe
add
pushf
pop
lret
addr16
cmp
jne
mov
stos
ret
stos
jae
push
xor
incb
lds
int3
pop
mov
xor
sarb
jo
and
ret
mov
in
test
jns
aam
pop
inc
mov
aad
mov
loop
xlat
jmp
sub
mov
pop
jmp
xchg
lods
fnstenv
mov
add
popf
mov
mov
pop
mov
xchg
push
and
test
int
rcrb
dec
jbe
adc
pop
pop
addr16
pop
mov
loopne
lds
out
mov
out
add
movsl
cmc
je
mov
fstps
mov
mov
int3
ds
push
xchg
pop
imul
cmp
pushf
mov
stc
cs
push
mov
int3
int3
in
sub
pushf
out
mov
stc
push
pop
adc
lods
sub
loope
mov
xchg
fisttpll
add
push
push
jne
lea
ja
cli
jno
inc
in
and
mov
xchg
icebp
outsl
inc
lret
pop
add
es
xor
sarl
and
sub
lret
pop
shlb
jl
pop
pop
shlb
test
pop
jo
fbld
addb
pop
cmp
idiv
enter
out
scas
in
iret
jle
jo
cwtl
sub
push
rolb
jns
sbb
js
sti
test
xchg
test
outsl
sbb
sarb
xor
or
jp
cmc
repnz
sbb
or
pop
xchg
cmp
fiaddl
and
pop
xchg
mov
jno
jns
xchg
sbb
dec
xchg
rcr
dec
push
jp
mov
pop
fidivrl
and
jle
lock
pop
ss
mov
rcrb
lret
cld
xor
cmp
pop
fwait
loop
xor
and
push
sbb
pop
pop
push
jp
shld
cltd
pop
jo
mov
test
ss
cmp
test
mov
out
and
add
daa
testb
cmp
aam
add
or
add
iret
pop
les
add
jns
clc
call
fwait
and
fldl
mov
adc
push
orb
cmpsl
pop
fs
jns
lcall
pushf
add
mov
leave
mov
pop
push
lods
xchg
inc
test
dec
xor
mov
dec
jecxz
fcoml
cli
pop
pusha
xlat
in
js
aaa
aas
mov
sahf
loope
loop
mov
je
lods
xorl
leave
mov
insb
inc
mov
flds
idivl
or
mov
popa
jmp
jp
xor
adc
test
jnp
and
sbb
lcall
fimull
scas
lcall
fidivl
cld
push
mov
cmp
pop
test
leave
sbb
lret
cmp
sub
dec
decl
clc
adc
sbb
inc
jp
popa
mov
dec
cltd
jg
push
jno
or
call
and
jb
pop
data16
and
insb
adcl
cmp
mov
push
or
sub
lea
in
mov
pop
std
lods
ja
jl
and
pop
pop
aam
dec
adc
adc
pop
clc
push
add
push
ret
incb
sub
arpl
jge
ja
dec
dec
pop
addr16
push
hlt
mov
pushf
cli
loopne
dec
xor
push
movsl
mov
pop
sbb
jb
cmpsl
test
dec
inc
in
jmp
pusha
test
xchg
pushf
cmpsl
nop
pop
aas
xchg
int
adc
or
mov
sbbb
jp
shrl
xchg
jo
pop
jmp
jno
lret
and
lret
movsl
xlat
sub
or
adc
mov
sub
sbb
dec
pushf
adc
dec
xchg
stc
push
xchg
dec
and
fdivp
subb
inc
xchg
xchg
add
dec
mov
loopne
mov
jns
sbbb
xchg
push
xchg
dec
dec
or
push
cmp
aam
cmp
jl
sub
andl
scas
xchg
pop
mov
jb
cltd
hlt
cmpl
fistpl
mov
lock
imul
mov
inc
dec
push
rcrb
fldcw
pop
pop
bound
xchg
lret
mov
pop
loope
insb
xor
pop
add
addr16
or
or
push
nop
into
addr16
cmpl
xchg
dec
scas
addr16
loope
pop
dec
sub
mov
jne
inc
pop
dec
scas
movsb
rorl
pop
cltd
mov
dec
bound
adc
bnd
cmp
int3
adc
pop
in
stos
adc
mov
bound
pop
lods
xor
mov
ss
lea
rcrb
xor
xchg
fdivrs
dec
lret
or
aas
enter
subl
mov
stc
jae
div
lcall
push
xorl
mov
arpl
sbbl
int3
xchg
jl
cmp
push
mov
mov
adc
lods
sahf
int3
ss
dec
pop
fmul
mov
sbb
push
pop
mov
xchg
imul
pusha
push
inc
add
or
lret
out
mov
pop
sub
lods
add
cltd
pop
out
cld
mov
xchg
lds
les
repnz
stos
js
mov
lods
pop
gs
add
int
ror
mov
mov
fsubrs
push
fs
cmp
cli
aam
movsb
mov
jns
fsubp
popa
pop
popl
ret
pop
jmp
jnp
jns
sbb
leave
jp
pop
adc
push
pop
pop
lcall
mov
rcrb
insl
xor
xchg
fbld
pusha
xchg
jecxz
xor
mov
inc
iret
mov
scas
sbb
rclb
pop
jg
dec
sub
out
pop
adcb
sbb
divl
pxor
add
mov
pop
aam
movl
dec
adc
pop
loopne
cmp
aaa
aas
sub
mov
sub
xorb
cltd
inc
push
movsb
add
pop
pop
and
arpl
out
pop
aam
xor
pop
cmp
lcall
xor
and
pop
sbb
mov
leave
pop
sarb
xchg
push
in
cmpsb
int3
pop
iret
inc
int
mov
lcall
sbb
jns
cltd
pop
imul
mov
int
mov
adc
idivl
lods
pop
clc
xchg
addl
imul
cwtl
pop
adc
cmp
cmp
dec
jg
inc
ficompl
movsb
cli
loope
mov
mov
stos
pop
pop
cmp
stc
sbb
adc
push
pop
outsl
repnz
or
pop
pop
rcll
mov
divl
dec
mov
adc
xor
or
add
test
cld
mov
dec
sub
pop
aam
stc
scas
xchg
cmpsl
mov
lcall
xor
and
dec
push
mov
jb
out
sub
and
lods
pop
xchg
add
lock
pushf
cmp
mov
ret
pop
ss
in
sti
loop
push
pop
bswap
mov
fcomps
call
frstor
mov
xor
inc
sub
sbb
loop
push
cmp
bound
pop
mov
mov
dec
jno
pop
xor
in
and
pop
je
les
mov
stos
popf
arpl
dec
pop
mov
call
dec
sub
mov
insl
sbb
out
sbb
push
ja
and
cmp
dec
mov
stos
gs
inc
push
mov
and
and
sbb
mov
stos
mov
iret
lock
out
xchg
aam
dec
pop
insb
sbb
pop
fdivrl
mov
jno
and
cmpsl
pop
cli
jl
movl
dec
jle
fwait
mov
jbe
scas
call
aaa
dec
mov
xchg
test
scas
inc
mov
arpl
outsl
pop
bound
mov
pop
je
dec
aaa
mov
adc
xor
dec
fcoml
pop
xchg
jg
movsl
or
cwtl
inc
aas
fcomps
push
xor
pop
test
fstl
or
icebp
lods
jp
rcrb
jl
leave
sbb
test
int
pusha
pop
sbb
xchg
push
sahf
gs
lret
push
pop
pop
lea
aas
pop
test
mov
fs
int
xlat
ss
pop
ljmp
mov
mov
rcl
fwait
dec
dec
fwait
inc
jns
pop
or
in
dec
pusha
pop
mov
mov
in
or
movsb
pop
pop
dec
xchg
xor
hlt
arpl
daa
pop
xchg
sub
lods
in
je
clc
pop
dec
outsb
scas
jle
push
in
inc
xchg
mov
dec
cmp
lods
adc
inc
sbb
or
ds
int3
mov
mov
xchg
sbb
test
jp
cmp
mov
ret
lock
pop
scas
lods
into
test
ficomps
push
stos
dec
movsb
aas
cmp
push
insl
fnstcw
sub
mov
lret
stos
idivb
pop
aad
aas
adc
imul
add
jmp
bound
and
mov
xor
popa
sbb
insl
inc
ficoml
dec
cld
jl
pop
sbb
mov
and
jmp
flds
sub
sahf
push
test
fnstcw
jmp
or
pop
pop
push
or
popa
fcomps
out
jmp
mov
mov
xchg
leave
xor
xchg
mov
or
pop
mov
fdivrl
sbb
cmp
mov
push
loope
jmp
pushf
ss
sbb
push
cmc
into
adcb
jmp
out
mov
lds
ret
je
add
jl
sets
loopne
pop
jns
or
xchg
scas
adc
addr16
ljmp
pop
mov
jb
das
xorb
ss
lea
addl
rcl
ja
mov
or
pop
sbb
or
fimull
orl
mov
inc
sbbb
mov
push
ficoms
fwait
test
pop
jns
stc
push
mov
pop
pop
mov
movsb
xchg
and
mov
jge
in
mov
sbb
cmp
jl
mov
push
jb
ficoml
out
mov
inc
daa
mov
mov
mov
insl
adc
sub
lret
jnp
or
add
pop
jg
push
cmp
scas
arpl
and
test
sub
in
pop
imul
cmpsl
rclb
adc
int3
ss
or
jne
cmp
lea
pop
jno
outsb
adc
nop
push
dec
aam
fnstenv
das
pop
mov
xor
cmp
or
sarl
in
lcall
fcoms
or
test
xor
hlt
mov
mov
inc
cmp
jecxz
daa
sbb
add
jb
js
test
pop
push
pop
mov
jmp
and
sub
and
js
cmp
pop
mov
pop
add
divb
notl
nop
and
popa
dec
in
mov
and
xorb
fwait
cmc
xchg
inc
rclb
inc
pop
push
sarl
cld
mov
add
pop
flds
out
out
scas
push
pop
xchg
cltd
jns
mov
pop
dec
and
sub
sub
cmp
mov
and
fsubl
inc
ljmp
mov
mov
pop
out
ja
jbe
pusha
pop
out
lods
adcl
sbb
xlat
in
int
shlb
lock
pop
loopne
sub
inc
das
pop
inc
fisubrl
sbb
push
rolb
aas
js
cmp
pop
xchg
lods
push
test
adc
or
sub
jle
mov
mov
loopne
scas
sbb
pop
sbb
push
test
xchg
bnd
stc
mov
ja
adc
add
pop
and
pop
mov
decb
mov
sbb
fcmovne
negb
arpl
mov
pop
xchg
push
push
pop
push
sahf
fwait
pop
aaa
jmp
outsb
test
lea
insl
xor
fmull
xchg
xlat
js
aas
adc
imul
mov
xchg
out
ljmp
pop
std
aaa
jp
cmpsb
pop
and
inc
fmul
dec
aad
mov
andl
es
pusha
mov
pop
out
mov
xchg
scas
mov
pop
stc
arpl
clc
f2xm1
xor
leave
mov
int
pop
sbb
push
clc
mov
pop
call
pop
fdiv
leave
fwait
mov
pop
add
add
mov
clc
lds
repz
dec
xchg
pop
pop
nop
cwtl
sub
pop
xchg
jbe
rcll
arpl
xchg
fsts
rorb
pop
sti
or
frstor
jmp
dec
sub
test
ficompl
imul
ret
and
fcmovnu
mov
pop
push
stos
sub
sbb
shr
xor
test
sbb
ret
loope
pop
add
mov
jne
jbe
ror
and
dec
add
mov
or
movsl
jle
sbb
adc
shrl
mov
mov
xlat
jmp
jb
cmpl
dec
sti
mov
mov
pop
push
stos
in
test
push
fldt
loopne
pop
xchg
ss
dec
pop
xchg
or
mov
fucomi
jl
mov
pop
sbb
adc
adc
pop
mov
movsb
push
mov
into
and
sahf
push
pop
fpatan
js
popa
mov
dec
pop
lret
push
ss
fildl
pop
adc
gs
dec
iret
sbb
jns
lods
dec
mov
cld
xchg
and
pop
test
xchg
xor
add
jae
or
movsl
adc
lock
push
jle
pop
sbb
jne
ss
pop
fidivrl
repz
push
cmpsl
push
push
outsl
jge
lea
shrb
mov
filds
in
pop
xchg
aam
mov
jecxz
mov
call
inc
stos
popa
pop
call
push
pop
adc
mov
aaa
push
test
mov
add
xchg
test
pop
push
cwtl
jae
fwait
cmc
mov
faddl
cmp
adc
fwait
jo
jp
adcb
dec
mov
pop
xor
shll
ror
fnstsw
jl
pop
sbb
divb
mov
dec
push
xor
mov
jp
xchg
jb
pop
fcompl
loop
inc
jno
mov
iret
clc
lcall
lds
sbb
pop
or
das
mulb
pop
mov
pop
in
add
cmpsb
jb
lock
mov
cld
push
clc
push
inc
sbb
or
test
pop
mov
mov
popl
out
pop
mov
or
rclb
adc
adc
dec
mov
fldt
cltd
js
or
outsl
inc
push
cmpsb
xchg
fcmovnbe
nop
out
add
adc
clflush
mov
loop
enter
shll
lea
and
add
repnz
inc
push
std
mov
in
cmp
or
pop
sub
cmp
bound
outsb
or
pop
push
idivl
and
sti
adc
lret
sti
jp
adc
pop
movsb
and
in
sub
push
mov
pop
mov
stc
mov
and
mov
mov
les
test
push
mov
cltd
ja
rcrl
cmp
jmp
test
sub
or
pusha
fstpl
outsl
lret
or
pop
dec
adc
rclb
test
mov
sarb
mov
jo
add
add
fwait
xor
cwtl
sub
xchg
rcrb
xlat
sahf
insl
push
popf
mov
js,pt
adc
fcompl
ss
dec
nop
cmpsl
aam
jne
in
imul
dec
add
cmp
jle
int
inc
mov
jecxz
cs
movsl
gs
cmp
mov
mov
in
mov
outsl
xor
cltd
fwait
pop
sti
into
push
or
jecxz
sub
pushf
xchg
cmp
cmpsl
sbb
xacquire
jle
pop
jmp
int3
js
dec
and
in
insl
inc
ljmp
push
mov
lock
dec
adc
xchg
ja
and
mov
pop
adc
aam
das
jnp
sbb
fstpt
and
jle
pop
out
mov
mov
cltd
or
pop
push
lock
call
push
and
in
jns
in
pushw
inc
sbb
gs
mov
daa
dec
pop
stos
inc
call
stc
push
sahf
loopne
xchg
pop
xor
adc
pop
or
add
push
xchg
or
cld
mov
jae
pop
movsb
pop
cli
in
push
push
mov
fisubs
addr16
sti
dec
clc
pop
loop
sbb
std
es
dec
inc
inc
les
cmp
pop
push
mov
out
mov
jno
sbbb
stos
dec
negl
stc
sub
xchg
sbb
pop
int3
stos
into
pop
or
mov
add
lcall
jo
adc
push
xor
and
popf
pop
ljmp
gs
fadd
or
adc
inc
pop
ss
test
pop
or
push
lods
lret
dec
adcl
insl
cs
adc
xchg
frstor
ret
mov
pop
inc
cmp
rorb
sbb
push
stc
fsubrl
push
mov
mov
pop
nop
sbb
mov
or
outsb
sub
orl
sbb
and
sahf
cs
pushf
es
fnsave
loope
fidivl
add
cmp
pop
dec
sar
inc
unpcklps
push
out
xlat
adc
mov
ljmp
jns
mov
pop
loopne
mov
mov
adc
mov
mov
imul
pop
mov
mov
in
movsb
push
or
and
sub
jnp
lcall
outsl
loope
in
mov
cwtl
xchg
lret
and
movsb
or
sbb
ljmp
pop
xor
scas
imul
sub
mov
mov
popa
xchg
jns
repnz
pop
sbb
fwait
rorl
cmp
imul
dec
shlb
ret
stos
add
sbb
addr16
lods
mov
xchg
loope
inc
add
ret
pop
cmc
jg
std
js
lahf
in
fistpl
pop
fisubrl
jno
pop
mov
mulb
dec
cmp
sbb
addr16
dec
xchg
add
xchg
test
sbb
int3
pop
push
sbb
dec
adc
and
or
addl
pop
lret
push
mov
or
sbb
mov
dec
pop
push
stos
lods
jmp
sub
insl
aaa
jno,pt
lock
leave
cmp
movsb
mov
inc
and
fsubr
outsl
jbe
sub
or
int
dec
lods
scas
add
cmp
arpl
jae
jg
pop
hlt
and
fnstenv
movsb
rolb
jl
or
pop
add
mov
push
fmul
test
rorb
xlat
pop
notl
cmpsl
scas
pop
pop
rcl
xor
xor
out
pushf
sbb
lods
scas
or
pop
pushf
mov
cmp
pop
aam
lret
xor
jg
ret
cmpsl
mov
adc
cs
lahf
push
mov
inc
pop
ss
jns
push
xchg
pop
lods
push
mov
xchg
pop
pop
rolb
or
stos
xchg
push
inc
and
ret
mov
mov
push
imul
out
add
pop
loop
xchg
cmpsb
push
mov
popa
inc
cmp
pop
xchg
lret
cmp
rorb
cmp
mov
fs
movsb
adcl
clc
aaa
pop
and
and
push
fsub
jecxz
xor
inc
pop
cs
rorl
mov
jge
jp
pop
aaa
test
shl
sub
pop
pop
xchg
mov
and
out
and
mov
pop
xchg
aam
add
adcl
shll
jl
test
daa
add
pop
mov
mov
pop
mov
movsl
pop
lea
adc
lods
xchg
lock
jbe
out
nop
mov
or
mov
pop
jle
movsl
imul
push
mov
mov
pop
pop
iret
sub
pop
in
andb
outsl
mov
pop
vfnmadd132pd
fidivs
cmp
fwait
mov
pop
push
cwtl
inc
lock
int3
pop
mov
repz
jns
jg
faddl
fstps
sbb
jl
outsl
stc
pop
inc
imull
adc
mov
add
pop
mov
addr16
pop
adc
imul
cmp
out
lcall
cltd
int3
pop
inc
lahf
stos
mov
inc
jecxz
lods
pop
or
cmpsl
pop
mov
push
es
ficompl
xchg
notl
bnd
pop
clc
pop
pop
pcmpgtb
in
fiaddl
cmp
gs
aad
dec
pop
jecxz
cmpsb
pop
lds
out
mov
stc
scas
test
pop
jne
les
pop
cmp
rorb
iret
add
push
icebp
mov
push
loope
pop
fisubl
sub
cmpsb
mov
inc
mov
mov
test
push
adc
clc
sub
pop
sub
cmp
outsl
sub
mov
pop
dec
rolb
or
mov
pop
out
cmp
test
fnstcw
and
push
mov
pop
fisttpll
aad
xlat
arpl
and
fs
pushf
add
sbb
test
mov
push
aas
dec
cltd
scas
arpl
adc
push
jge
dec
fnstenv
or
sbb
filds
sub
lock
pusha
pop
ja
push
pop
push
repz
pop
fdiv
std
stc
mov
mov
jo
ret
cs
insb
fidivrl
pop
lcall
mov
pop
mov
sub
into
mov
cmp
mov
push
add
in
jp
or
adc
pop
dec
lea
inc
rorb
cltd
shr
xor
in
loopne
mov
pop
aaa
push
mov
push
sub
in
adc
lret
mov
cmp
mov
test
shr
mov
stos
pop
cwtl
mov
sahf
mov
imul
fistpl
sbb
sbb
jp
fs
fisubs
fdiv
mov
jne
inc
dec
sbb
fnsave
push
repnz
outsl
scas
pop
or
push
out
or
les
mov
fmull
fcmove
pop
lods
jb
das
mov
dec
pop
adc
in
mov
pop
inc
lods
bound
pop
xchg
in
rclb
mov
fwait
xor
pop
inc
sub
and
fwait
xchg
popf
mov
sub
pop
jmp
movb
sbb
xchg
scas
jb
mov
cltd
lock
sub
or
pop
sbb
nop
adc
mov
mov
mov
sub
cmp
or
adc
fcmovnbe
lods
sbb
dec
pushf
xchg
ds
lret
loopne
inc
xlat
pop
popf
test
jmp
test
and
call
cmp
fstpl
jb
mov
stc
cld
scas
pop
jecxz
inc
inc
mov
xchg
sub
lods
lret
mov
mov
mov
ret
ds
push
mov
leave
jae
fstl
fstpt
or
sbb
aam
movsb
pop
xor
hlt
mov
jns
inc
jbe
push
pop
decb
inc
ret
stc
lea
pop
jmp
push
fadd
xchg
mov
mov
mov
pop
test
jns
push
sub
fwait
bound
jle
pop
pop
sbb
jecxz
cmp
pushf
into
sub
or
fdivrl
pop
cltd
push
jb
out
xor
sbbb
sub
dec
push
xchg
mov
add
loop
xchg
aam
mov
stc
adc
int
aas
sbb
pop
iret
es
xlat
mov
mov
mov
out
cli
ret
pop
lahf
movsl
mov
bound
imul
repnz
push
pop
call
pop
and
sub
sub
xchg
jae
data16
and
pop
int
and
mov
ds
pop
xchg
cmpsb
sbb
mov
mov
mov
push
lods
or
xchg
dec
mov
pop
jbe
adc
or
add
imul
sub
out
pop
mov
xchg
or
push
sub
stc
sti
mov
cmp
enter
testl
mov
xorb
jge
lcall
push
aad
in
pop
push
out
sbb
lock
pop
arpl
sub
pop
xchg
test
pop
insb
aad
cwtl
mov
pop
imul
mov
xchg
adc
jbe
je
scas
outsb
outsl
inc
pop
dec
and
push
lods
sbb
filds
cmp
pop
jmp
sub
sbb
in
es
pop
fists
cmc
push
pop
test
mov
mov
push
xor
in
push
xor
sbb
sahf
add
pop
or
ficoml
pop
and
js
inc
sub
lods
jbe
cmp
imul
and
aam
push
sub
inc
ss
lcall
ljmp
pop
xor
inc
test
pop
sub
mov
or
inc
jo
mov
dec
ficompl
out
push
repnz
pushf
lds
gs
cmp
andb
les
cmp
out
int3
xchg
pop
roll
mov
lods
sbbb
dec
xchg
pop
push
cmc
scas
js
test
dec
fldenv
pop
mov
neg
xchg
jge
push
add
fstl
lods
pop
cltd
pop
les
adc
leave
call
test
pop
or
test
sub
fiadds
out
mov
inc
push
pop
mov
loopne
lods
pop
das
xchg
les
stc
cmp
sbb
jns
arpl
add
lods
mov
popa
push
incb
mov
adc
mov
or
xchg
les
icebp
aaa
lcall
pop
sub
movsb
cmc
repz
push
daa
or
pop
hlt
mov
pop
or
movsb
pop
inc
call
jo
scas
pop
in
sub
sarl
mov
fldcw
xchg
mov
int3
pop
addl
test
cmp
cwtl
sbb
mov
cmc
dec
testb
pop
adc
in
or
lods
aam
add
iret
inc
repnz
or
xor
xchg
jb
stos
pop
dec
mov
inc
dec
pop
sbb
add
out
jns
pop
add
addl
cmp
cld
pop
cmpsb
movsb
shll
daa
shll
pop
movsb
mov
add
xchg
cs
das
std
test
leave
ret
aas
sub
xcrypt-cfb
cmpsl
pop
mov
loope
mov
loop
sub
jp
mov
and
add
fcmovne
bsf
sbb
pop
pop
xorb
cli
push
inc
inc
fnsave
dec
into
sub
scas
jmp
xchg
mov
mov
nop
xor
ret
mov
notb
aam
mov
mov
leave
jae
push
mov
sbb
daa
jl
ss
mov
mov
lahf
in
arpl
and
leave
test
aam
pop
push
xchg
pop
push
mov
into
jg
jbe
push
outsb
mov
lods
mov
mov
mov
xor
cli
popf
inc
add
and
xchg
push
data16
cmp
sbbb
or
js
mov
push
popf
cmp
stos
test
call
shll
or
sub
cmp
call
inc
pop
jge
sahf
inc
mov
stos
mov
mov
fcoml
mov
outsb
fcompl
mov
adc
dec
aam
popf
mov
roll
xor
scas
movsl
jno
fsts
cmp
and
pushf
pop
sbb
cmpsl
pop
sub
sub
cli
or
fimull
ja
adc
sbb
push
mov
xchg
adc
jne
cwtl
out
cltd
fdivr
push
test
dec
add
and
movsl
mov
shlb
ss
cmp
and
sub
xor
lret
mov
cmp
je
sbb
xor
repz
mov
cwtl
pop
mov
push
in
inc
push
test
fildl
push
push
cmp
pushf
sbb
sbb
dec
add
sbb
dec
iret
inc
xchg
xor
lcall
pop
call
enter
adc
xchg
int
jb
mov
pop
push
insl
loopne
mov
mov
adc
inc
push
daa
sbb
push
nop
lea
fsubr
jle
lcall
sub
pop
shl
jmp
and
sbb
jns
sbb
pop
nop
scas
mov
mov
lret
xor
pop
imul
xchg
inc
pop
pop
inc
xchg
xchg
inc
or
pop
push
ror
or
or
sub
cmpsb
jo
jecxz
inc
pop
dec
mov
movsl
cmp
xchg
mov
nop
adc
repnz
push
shll
aam
fadd
cwtl
pop
jne
inc
aaa
mov
xor
adc
pop
loop
cli
pop
cltd
clc
and
mov
lock
mov
add
inc
xchg
jns
xchg
jns
sahf
adc
fimull
adc
mov
ja
xchg
pop
fiadds
inc
jns
fidivrl
push
add
movsb
test
ja
pop
xchg
lret
in
popa
inc
push
xor
mov
ds
sti
pop
rolb
sub
lods
ljmp
repz
movsb
fstpt
or
xor
mov
int3
mov
pop
mov
int
cmpsb
pop
dec
rcrb
in
aad
mov
fs
sub
shll
aam
daa
pop
in
cli
mov
pop
inc
inc
pop
xor
mov
pop
insb
cwtl
aaa
out
idiv
pop
or
cmp
leave
adc
loope
scas
fdivrs
mov
sbbl
stc
mov
and
adc
loope
shlb
mov
sbb
pusha
frstor
mov
mov
scas
mov
xchg
cltd
pop
fcompl
or
test
mov
std
dec
jecxz
sahf
gs
sbb
mov
mov
mov
fwait
mov
into
stos
fnstcw
ja
add
movsb
int
cmp
mov
roll
mov
and
pop
popa
clc
lods
inc
sahf
mov
or
test
in
mov
pop
enter
movsb
fstpl
mov
out
mov
inc
cmp
xor
adc
add
pop
push
cmp
fnstsw
dec
pop
push
sbbl
cld
repz
pusha
xor
mov
push
mov
jnp
lock
fisubrs
cmpsb
dec
push
mov
inc
ficomps
cmp
sub
push
lea
ss
in
pop
mov
int
pop
cmp
sub
pop
add
in
xchg
push
xchg
pop
jl
cmc
cmp
into
cmp
fsubl
add
push
jns
mov
add
jp
ds
mov
test
sbb
lcall
lret
shrl
pop
mov
jecxz
cmp
push
xchg
pop
xor
bound
ret
loope
xchg
sub
inc
pop
scas
dec
mov
push
shll
lods
gs
fmull
add
mov
out
pop
adc
add
bound
lods
ljmp
aaa
push
clc
pop
adc
cmp
aam
mov
pop
xor
sub
in
mov
lock
jp
pop
call
xchg
pop
mov
mov
xchg
push
pop
subl
lret
mov
ret
shl
push
and
cs
mov
ss
cltd
xchg
inc
and
mov
lock
pop
movsl
mov
push
push
inc
jns
das
call
sbb
cli
mov
sub
decb
mov
es
lea
cltd
sub
mov
add
cli
ficompl
xchg
insl
xor
jns
xchg
dec
jecxz
sbb
pop
movsb
sbb
enter
jne
pushf
scas
inc
xor
dec
cld
pop
imul
int3
mov
dec
jae
mov
popf
fistpl
dec
adc
aam
mov
mov
cmp
aad
pop
imul
pop
pop
jb
lds
mov
sbb
lea
xor
lret
pusha
push
imul
mov
pop
jmp
pop
push
jge
test
je
push
adc
push
inc
push
int3
ss
shlb
jle
repz
pcmpgtb
ss
out
add
arpl
scas
xchg
jmp
rcrl
jmp
pop
out
test
or
inc
cmp
or
and
add
sbb
jbe
pop
shrb
push
stc
dec
movsb
icebp
xor
mov
jbe
pop
push
add
mov
mov
ror
test
and
adc
imul
or
push
xchg
lret
stos
mov
leave
or
add
mov
sbb
out
mov
jle
movsb
enter
ja
fs
mov
int3
aad
sub
pop
pop
inc
popa
ss
imul
sbb
push
sahf
inc
mov
sub
dec
lcall
xlat
jge
jne
sub
iret
gs
push
mov
hlt
add
mov
je
pop
xchg
iret
pop
pop
in
int3
cwtl
cmc
adc
jns
dec
mov
in
sbb
ljmp
ret
inc
xchg
rcrb
ret
ficompl
fadds
jl
jno
out
cmovs
jl
fstps
arpl
rclb
pop
les
enter
mov
xor
cld
sbb
inc
aad
outsb
dec
inc
mov
add
jl
gs
rol
pop
sub
or
sub
jns
inc
push
int3
jb
xor
or
mov
sub
int
xor
sbb
xchg
rcrb
sub
aam
pop
imul
insl
andb
mov
mov
mov
lcall
push
adc
cmp
jge
ljmp
xchg
inc
adc
jg
sbb
mov
jbe
cmc
pop
or
jecxz
xchg
lods
push
cmp
xchg
dec
inc
das
pushf
pinsrw
xchg
and
pop
add
clc
test
adc
jmp
pop
scas
nop
movsl
loope
js
fwait
shlb
or
pop
jecxz
mov
pop
cmpsb
push
rolb
aas
sahf
ds
lcall
cwtl
into
pop
cmp
cs
push
test
mov
jle
lret
xchg
jg
mov
and
inc
pop
dec
push
xor
jns
cmpsl
cli
mov
pop
jp
xchg
or
out
jl
pushf
push
xorl
ss
cli
push
mov
out
sbb
add
mov
jp
lcall
pop
leave
sbb
push
jae
pushf
pop
gs
pop
or
pusha
inc
aaa
sub
movsb
xlat
jge
mov
mov
push
xchg
pop
sahf
pop
arpl
sub
stc
xchg
adc
pop
lahf
and
pushf
push
movsb
cmp
or
hlt
inc
cmp
pusha
shlb
cmp
pop
pop
mov
fcmovu
daa
lds
fwait
icebp
sbb
in
sub
pop
cli
sbb
sbb
adc
and
or
mov
pop
adc
outsl
hlt
out
js
add
xchg
xchg
scas
jne
dec
mov
fldcw
fnsave
xlat
jle
and
mov
push
stos
cmpsl
xchg
sbb
jmp
inc
adcb
insb
test
xor
adc
lret
pop
mov
or
out
pop
ss
cli
cmp
pop
mov
lret
aaa
in
cmp
sbbb
and
push
jmp
mov
cltd
dec
stos
mov
daa
add
bnd
mov
mov
mov
jno
xchg
xor
movsb
pop
and
shl
out
ret
call
adc
cli
or
mov
jmp
push
push
int3
and
sub
stc
dec
movsb
je
push
pop
jnp
lods
sbb
arpl
stos
sti
sub
xchg
sahf
dec
sbb
or
and
sub
sbb
test
jmp
jae
push
push
js
xor
fidivrs
xchg
out
add
pushf
jnp
in
loope
jnp
pop
stos
push
jge
repz
pop
fwait
and
jnp
fbstp
jnp
sbb
dec
xor
test
dec
push
adc
arpl
inc
jae
xchg
int
xchg
sarl
je
jg
test
outsb
xor
pop
aas
xchg
sarl
stc
js
daa
insl
cmp
test
cmc
das
mov
jbe
dec
xor
test
mov
imulb
pop
mov
icebp
stos
jp
fildl
sti
add
pop
xor
mov
push
xchg
dec
mov
das
dec
stos
hlt
stos
sbb
sub
push
out
dec
lock
adc
pop
cmp
and
nop
enter
push
int3
cmp
push
mov
sub
mov
pop
pop
mov
and
cmpsl
out
insl
xor
pop
mov
pop
stos
nop
pop
mov
xor
cmc
push
enter
pop
or
and
pop
pop
aaa
sbb
in
ljmp
fsubrl
ret
pop
cltd
cmp
movsb
xor
sub
test
dec
mov
in
rorl
fisubrl
pushf
pop
push
pushl
add
cltd
pushf
pop
mov
out
push
ja
add
xchg
jecxz
mov
cmc
mov
push
sub
fs
adc
mov
dec
stc
in
push
mov
addb
out
pop
mov
dec
pop
jb
int3
dec
pop
cmp
sbb
mov
mov
std
ja
pop
into
sbbb
imul
pop
mov
inc
cvtdq2ps
in
sub
push
xor
push
mov
mov
scas
push
pop
push
aam
add
insl
in
adc
jmp
pushf
out
jns
mov
cmpsb
sbb
rcl
jbe
ds
lods
sti
sub
push
mov
jle
neg
xchg
loop
or
cmc
pop
cli
push
mov
sbb
push
mov
aam
in
shlb
pop
pop
adcl
and
cs
fisubl
cld
sbbl
jbe
out
mov
loopne
mov
jmp
pop
push
mov
cli
sub
mov
cmp
inc
cs
mov
pop
enter
inc
movsl
in
in
mov
dec
int3
int3
popf
fnsave
cmp
adc
cmp
std
xchg
xlat
mov
mov
cmp
cmc
mov
lods
outsb
rorl
push
push
xchg
mov
addr16
jp
shrl
adc
sbb
lret
in
ds
mov
adc
fnsave
pop
repnz
or
sbbb
or
sub
add
out
sbb
ret
shll
mov
xchg
mov
loop
inc
cld
pop
mov
les
movsl
pushl
pop
mov
hlt
pushf
pop
mov
test
and
repnz
or
or
imul
add
rolb
or
sub
push
xchg
ret
es
int3
in
push
inc
xor
xor
sbbl
cli
inc
mov
pushw
pop
aam
pop
adc
push
lcall
jo
stos
loopne
fldcw
add
into
les
and
mov
xchg
cld
sub
arpl
sbb
insb
inc
pushf
push
hlt
jo
rorl
or
sbb
repnz
scas
add
pop
and
andl
pop
in
push
stos
hlt
push
and
pop
jl
xor
add
cmp
cld
and
outsb
sbb
pop
push
int
jecxz
pop
pop
pop
pop
cmpsb
mov
inc
adc
pop
leave
and
mov
pop
lcall
stc
jb
xchg
stos
mov
jmp
jbe
sub
or
push
gs
mov
int3
xor
mov
sub
test
aad
js
enter
and
ss
push
out
inc
mov
mov
out
xor
xchg
mov
int3
jmp
test
movsl
mov
stos
cmp
rorb
cmpsb
rclb
jb
lret
dec
pop
mov
or
pop
pop
mov
pushf
int
ljmp
out
sahf
pop
push
fistpl
inc
ror
add
jp
pop
sub
imul
xchg
pushf
popf
jge
stc
xchg
fs
aaa
fwait
pusha
in
enter
leave
pop
mov
pop
sbb
addr16
cmp
dec
or
mov
repnz
int3
repnz
aas
dec
jne
push
into
mov
daa
jge
pop
dec
sub
fidivrs
xor
adc
and
jns
fsubs
jno
popf
ror
mov
xchg
and
jp
frstor
mov
mov
and
fildl
sub
fistl
sub
adc
fs
addr16
lds
orb
cs
inc
pop
and
scas
mov
stos
out
std
test
popf
ret
mov
cmp
repnz
add
inc
fldenv
in
cmp
push
das
pop
fcoml
out
test
mov
xor
adc
rolb
mov
ss
jno
pop
hlt
shlb
ljmp
fs
ret
test
mov
mov
dec
and
cmp
int3
jb
pop
jns
xor
lret
fcoml
jnp
dec
dec
test
lret
std
and
shlb
repnz
pop
or
out
dec
inc
xchg
addr16
int3
fistpl
mov
fisttpl
fwait
lret
fstps
jae
inc
in
fdivl
test
xor
mov
cwtl
arpl
inc
xchg
jb
pop
mov
or
lret
cmp
mov
data16
cmpsb
popa
push
sub
pushf
pop
arpl
pop
mov
test
jno
jae
pop
lods
push
push
gs
mov
pushf
outsb
mov
pop
mov
js
mov
jp
out
jbe
testb
adc
in
push
leave
addr16
scas
stos
icebp
pop
sub
pop
xlat
arpl
pop
xchg
loope
shll
adc
popf
sbb
xlat
jl
push
lret
mov
pop
add
cmp
lods
sbbl
pop
push
cli
into
popa
dec
and
ljmp
leave
pop
sbb
rcrb
add
cmp
iret
push
xchg
leave
pusha
pop
sbb
cmp
jmp
inc
imul
pop
dec
pop
dec
or
sbb
sbb
jno
shrl
pop
mov
sbb
pop
mov
xchg
push
out
add
sbb
pop
gs
nop
jmp
pop
push
dec
jnp
adc
aad
and
loopne
pop
lock
and
mov
jmp
lcall
scas
xor
or
mov
stc
inc
es
fnstsw
push
and
mov
xor
gs
jae
out
pop
sbb
adc
pop
sbb
pushf
push
test
dec
cmp
pushf
sbb
dec
ja
cli
dec
movsb
xchg
mov
xor
inc
incb
mov
call
pop
fcmovne
jecxz
leave
push
sbb
pop
adc
pop
fs
mov
mov
jne
data16
or
gs
dec
pop
mov
int3
cmpsb
xor
mov
cs
xchg
mov
repnz
push
sub
dec
sbb
and
xchg
push
decl
adc
or
or
add
add
xchg
mov
retw
leave
cmp
ss
mov
out
push
mov
out
jo
fdivr
pop
mov
pop
mov
in
pusha
divb
inc
pop
adc
ljmp
loopne
mov
jbe
sbb
mov
repnz
ror
xor
cmp
icebp
push
ss
lock
sbb
popa
addr16
loope
imul
adc
das
fmuls
aas
je
xlat
xchg
or
pop
leave
test
fistpl
rorb
addr16
pop
inc
leave
popf
rorl
adc
pop
or
xchg
loopne
jle
add
jle
xchg
fcoml
int3
dec
inc
xor
subl
adc
push
cli
jle
sbb
je
pop
mov
adc
ret
js
pop
and
mov
mov
aaa
inc
stc
push
js
inc
lods
and
jne
jmp
jle
push
mov
xor
xchg
bound
fwait
xor
jp
mov
mov
push
cli
dec
or
inc
pop
test
sbbl
xchg
or
pop
cmp
xchg
faddp
pop
inc
mov
add
in
pop
fildl
mov
xchg
cld
mov
sub
dec
inc
test
mov
inc
loope
mov
and
dec
dec
scas
add
pop
in
inc
in
push
adc
decb
xchg
mov
lcall
jnp
sbb
jg
and
adc
cld
imul
addr16
push
pop
sbb
aad
sahf
mov
fs
adc
or
xchg
scas
rcrl
push
mov
ret
pop
adc
xor
roll
pop
mov
sbb
inc
adc
pop
cld
fnstcw
ret
pop
xor
xchg
sbb
xchg
mov
lret
pop
push
xchg
lock
shlb
adc
enter
xchg
dec
js
loop
pop
or
xor
div
cmpsb
dec
lods
jmp
nop
jecxz
rorb
push
lods
out
fwait
add
jmp
andl
xchg
pop
adcl
outsl
in
fsubs
sub
cmp
mov
cli
imul
jbe
out
xor
clc
cmp
bound
imul
push
imul
xchg
lods
cli
es
fsts
imul
lahf
adc
jge
pop
jnp
stos
cmp
xchg
aas
and
sub
jmp
add
je
mov
and
mov
dec
inc
frstor
xlat
int3
jnp
pop
into
pusha
fldcw
mov
xor
ret
push
aaa
andl
pop
xchg
enter
repnz
pop
dec
xor
stc
stos
push
dec
pop
outsb
loopne
mov
adc
pop
pop
popa
shrl
pop
mov
jmp
insb
rorl
adc
loope
push
pop
sti
loop
inc
mov
repz
pop
pusha
pop
shrb
mov
jbe
jne
mov
insb
fwait
das
gs
es
dec
jl
pop
pop
clc
and
aas
xchg
cmp
fidivrl
adc
mov
nop
hlt
pop
outsb
mov
arpl
sub
ds
mov
es
popf
pushf
jno
fdivrl
shlb
sbb
pop
out
sub
inc
xchg
push
xchg
popa
jno
cmpsb
mov
mov
jg
pusha
and
rolb
gs
push
dec
iret
dec
imul
out
fisttpl
out
ljmp
cld
in
movsl
inc
or
movsb
ficomps
imul
bound
inc
scas
pop
push
insl
mov
bound
jge
mov
test
sub
pop
and
clc
hlt
in
repz
test
gs
mov
push
xchg
jne
mov
fsub
arpl
punpckhdq
lret
les
fistl
jl
xor
lock
cmp
les
xchg
aas
xor
mov
pop
sub
sub
sbb
jmp
fists
pop
jbe
sub
les
add
int3
aam
and
jne
or
mov
int
xorb
mov
imulb
lcall
sub
sub
ja
into
and
dec
test
and
adc
mov
in
rcrl
gs
inc
bound
push
dec
dec
rorl
cmp
xor
xchg
mov
mov
fs
sahf
pop
sbbl
fwait
and
dec
pop
sbbl
popf
int
pop
adc
xchg
sub
push
ret
pop
jbe
mov
sbb
pop
pop
iret
push
nop
mov
cmpb
push
jns
in
pop
dec
clc
inc
or
bound
out
outsb
add
std
push
push
jle
dec
pop
mov
leave
je
cmp
push
pop
shl
arpl
push
sub
mov
mov
mov
pop
adc
sub
pop
ss
rorb
jp
fwait
pop
test
mov
xchg
loopne
pop
enter
or
test
and
mov
negb
mov
bound
negl
and
cmp
mov
mov
pop
mov
lock
cmp
sub
sarl
mov
dec
cltd
push
push
bound
test
or
fwait
mov
ret
pop
stc
pop
daa
push
pop
add
sub
lret
stos
enter
xchg
ret
cmpsl
add
sub
ss
jecxz
sbb
out
rorb
xor
ljmp
push
adc
fs
sbb
jl
inc
rclb
insl
add
dec
stc
xchg
leave
add
addr16
sahf
sbb
popf
pop
lret
popa
pop
jecxz
add
int3
dec
stos
fwait
inc
loope
inc
xchg
pop
and
inc
leave
xor
int
pop
out
add
pop
mov
rorb
pop
pmuludq
das
movsl
lock
test
xor
mov
xchg
sub
xchg
arpl
pusha
std
mov
je
fidivrs
shrb
roll
pop
lret
mov
mov
push
pop
xor
push
cld
insb
mov
sub
lock
cmp
push
scas
pop
lds
int3
mov
pop
mov
xor
pop
xchg
cmpsl
cmp
cli
les
pop
jge
push
ficoml
out
scas
mov
rorb
arpl
pushf
outsb
jle
add
jecxz
xchg
nop
sub
pop
mov
cmp
pop
insl
push
mov
leave
push
loopne
clc
addr16
xor
sarb
cltd
dec
sub
add
int3
lods
out
pop
push
outsl
xchg
cltd
mov
xor
sbb
mov
pop
and
mov
rcrb
insl
jge
arpl
jle
add
adc
mov
or
sbb
pop
repz
fwait
push
into
pusha
pop
aad
and
adc
mov
sub
xor
dec
test
or
ficompl
pop
sub
or
xchg
sarb
jle
inc
arpl
rcr
lahf
out
dec
sbbb
pop
pop
ljmp
pop
js
mov
sbb
adc
sub
test
sbb
dec
call
jmp
lock
mov
lret
lods
mov
add
and
sub
mov
subb
adc
imul
push
jno
dec
in
rclb
fnstcw
mov
test
mov
inc
pop
sub
repnz
pop
outsl
sub
in
fldcw
sub
mov
arpl
mov
dec
test
pop
jae
popa
mov
pop
loope
movsl
ljmp
inc
push
cmp
pushf
stos
mov
inc
flds
inc
pop
lcall
cwtl
pop
jl
je
repnz
sbb
lods
dec
mov
daa
sub
loop
adc
mov
xchg
in
adc
addr16
xlat
adc
cmp
cmp
repnz
mov
daa
arpl
adc
aam
adc
xor
les
sub
jecxz
push
sbb
adc
inc
sbb
pop
jl
sarl
dec
mov
fmul
in
xor
fstpl
inc
cmc
mov
pop
fbstp
pop
test
pop
sahf
es
das
fs
aad
xor
aas
xchg
mov
adc
pop
mov
xor
cmc
push
pop
leave
xchg
shlb
clc
cs
mov
nop
cmp
mov
fldt
or
inc
dec
jno
jb
out
pop
or
jbe
pop
ljmp
mov
push
rolb
arpl
aam
inc
loope
pop
outsb
sub
xchg
shrb
pop
xlat
stos
mov
negb
cmpsl
loop
test
js
stos
lahf
lea
xor
lret
lods
mov
push
rcr
imul
insb
gs
int
fildl
mov
mov
pop
ret
icebp
test
leave
mov
pop
mov
sub
mov
enter
jecxz
fcoml
negb
pop
sub
inc
enter
test
xor
pusha
lea
testb
sahf
inc
enter
into
cmp
adc
jge
mov
cld
std
loopne
and
int3
lods
xchg
mov
xchg
andl
imul
inc
xchg
jnp
into
ret
push
ret
imul
fisttps
push
in
aam
pop
mov
ret
dec
stc
mov
pusha
and
loopne
insb
mov
outsb
pop
das
jno
in
mov
int3
jecxz
das
or
dec
sub
adc
lret
mov
data16
lods
cmc
ret
lock
xor
cmp
pop
loope
dec
in
gs
dec
mov
mov
aad
sub
hlt
or
data16
and
ja
xchg
jnp
mull
dec
push
shl
sbb
sbb
or
mov
mov
dec
jmp
or
push
and
dec
xor
into
or
jecxz
leave
mov
inc
pop
pop
je
push
push
out
ss
nop
sub
leave
jo
mov
scas
stc
mov
andb
sbb
pop
shll
pop
mov
cli
cld
les
mov
and
mov
sub
test
jae
je
aam
or
or
sti
xlat
imul
imul
xchg
xchg
nop
lret
sti
fcomi
mov
int3
insl
repz
stos
dec
popa
loopne
sbb
fcomi
dec
xlat
rcll
ds
pusha
mov
pop
popa
int
xchg
es
pop
mov
cmp
aam
jbe
jne
shrl
push
stos
daa
dec
loop
mov
fdivrl
je
rcrb
push
adc
push
adc
fcoml
outsb
pop
or
sub
push
jp
mov
jbe
fwait
repnz
fcmovnu
test
or
lret
push
int3
add
pop
cmp
jge
mov
mov
movsb
xor
sbb
scas
cmc
add
in
mov
lods
push
jl
fwait
xchg
mov
pop
jo
adcl
pop
dec
push
lds
js
sbbl
pusha
adc
pop
mov
mov
jmp
jns
add
das
mov
daa
xchg
push
pop
jne
in
mov
push
leave
push
dec
mov
jb
pop
clc
xor
and
pop
add
out
popf
movsl
mov
mov
or
xchg
cld
and
int
or
inc
stos
movsl
pushf
lock
dec
leave
mov
lret
fiaddl
jbe
mov
imul
jge
adc
fimull
cmp
pop
mov
out
cli
test
iret
and
pop
xchg
sub
popf
into
orb
and
stos
jp
outsl
pop
push
lret
jns
or
int3
push
sub
mov
shlb
call
iret
push
popa
leave
or
lds
jb
cld
je
push
outsl
dec
test
adc
lret
scas
push
shlb
sbb
fstl
jbe
imull
sub
mov
lods
ds
add
lcall
daa
mov
lds
mov
in
in
mov
popa
rorb
andb
pop
pop
sub
test
pop
dec
or
test
pop
mov
jmp
inc
push
xchg
sub
arpl
mov
push
loope
pop
and
imul
mov
cld
or
dec
loope
leave
jno
pop
push
es
dec
xchg
xor
addr16
sti
ss
outsb
test
pop
mov
in
cmp
add
popa
jecxz
jo
cmpsb
add
nop
xchg
push
inc
ret
inc
sbb
push
cmpsb
mov
test
lods
jg
in
mov
xor
pop
lea
dec
insb
mov
mov
sahf
shl
shll
mov
das
arpl
push
adc
or
dec
jns
or
push
pop
push
in
popf
fs
mov
or
fndisi(8087
dec
fcomip
int3
imul
jle
test
fistps
popf
lret
insl
pop
pop
repz
iret
jns
sbb
fsubs
jb
out
jo
stc
add
insb
jg
enter
and
jb
pushf
sub
jno
ret
cmp
rcrb
jle
cli
or
test
mov
ret
jns
lock
sbb
jg,pn
pop
jmp
add
inc
mov
pop
add
daa
push
mov
fstpl
push
pushf
jb
dec
stos
fsubrl
inc
mov
lods
mov
inc
dec
out
test
cmpsb
pop
cmpsl
and
xchg
ret
test
sahf
std
cli
sbb
pop
aaa
inc
es
leave
xchg
xchg
loop
pop
int3
ljmp
notb
jge
mov
fldt
sbb
pop
ud1
imul
loop
and
pop
insl
add
or
stos
push
jmp
add
mov
pop
cmp
into
lods
std
push
movsl
or
adcl
ret
mov
lret
jl
inc
jmp
mov
jmp
inc
and
test
out
pop
imul
and
sbb
pop
push
inc
int
adc
dec
lods
dec
dec
lret
fildl
xchg
shll
and
int
js
pop
in
pop
sub
cmp
repnz
sbb
mov
out
push
sbb
iret
cmp
shll
filds
divb
mov
jne
into
xchg
cmp
aad
dec
push
shlb
loop
add
pop
test
xchg
pop
jle
push
pushl
mov
test
ds
push
mov
loop
in
insb
lods
aaa
gs
pop
or
aas
lret
xchg
outsl
pop
xchg
in
cmp
jp
out
push
or
pop
test
add
ss
pop
jecxz
leave
pop
pop
fs
icebp
push
xchg
push
mov
ljmp
inc
mov
lret
sub
adc
ret
fwait
sub
xchg
arpl
fcoml
sahf
push
mov
adc
jmp
or
jno
push
pop
int3
mov
dec
xlat
jl
in
subl
jge
int3
insl
ljmp
imul
leave
jp
test
mov
jecxz
into
shrb
pop
sbb
add
fadd
push
xchg
rorb
sub
mov
mov
pop
mov
les
fnstsw
and
sub
push
iret
and
xchg
dec
mov
pushf
dec
adc
jnp
fstpl
jmp
mov
int
out
lods
add
clc
push
fwait
in
daa
pop
adc
or
popf
pop
pop
and
add
pop
add
xchg
imul
pop
aaa
xchg
das
dec
pushf
iret
fidivs
and
pop
mov
xchg
dec
dec
out
inc
xor
xchg
int3
sub
fsubl
xor
xchg
andb
pop
mov
imull
sub
es
std
push
jb
loop
and
pop
cmp
mov
mov
pop
xor
dec
lock
aam
cmp
loopne
and
shlb
cwtl
xor
or
cbtw
cs
fstps
inc
leave
inc
adc
pop
mov
aad
pop
loop
cld
xchg
into
push
pop
gs
and
pop
and
mov
or
sbb
pop
push
repz
cmc
nop
lret
cmpsw
adc
xchg
out
jl
mov
push
repnz
leave
iret
and
push
rcrl
jge
dec
jp
jmp
pop
pop
or
mov
xor
popa
xchg
test
cltd
fwait
mov
stos
test
jecxz
add
rorl
insb
mov
mov
ss
adc
les
xchg
movsb
popa
gs
lea
mov
mov
ret
mov
cmpsl
test
inc
ss
and
jb
dec
push
pushf
nop
pop
push
inc
sbb
out
mov
add
cwtl
jns
cmp
add
inc
sar
out
testb
or
mov
and
imul
and
jp
mov
stos
pop
sbb
add
mov
jmp
dec
mov
dec
xor
inc
fdivs
fstps
xchg
dec
arpl
sbbb
mov
adc
pop
in
mov
movsb
bound
fldenv
arpl
or
cli
push
mov
mov
das
mov
pop
loopne
xchg
repz
imulb
mov
push
xor
std
and
jb
rcll
jmp
mov
sti
cmp
push
pop
push
add
hlt
js
repnz
fcoms
insb
mov
int
inc
fdivrl
pop
dec
addl
in
jo
mov
arpl
movsb
dec
pop
pop
jbe
negl
in
sbb
setne
fisubrs
adc
mov
xor
out
sub
push
cmpsl
sbb
mov
pop
pusha
cmp
or
push
ds
jg
outsl
and
repnz
xor
dec
imul
and
pop
mov
pop
dec
fcmovu
push
push
mov
mov
sbb
inc
push
into
cli
loopne
lahf
sub
xchg
aaa
pushf
int3
cmp
fs
aaa
dec
push
xor
mov
fiadds
cli
pop
mov
pushf
bound
jb
sub
lods
hlt
ja
push
gs
pusha
leave
sbb
repz
mov
fldt
and
xlat
xor
jl
dec
loopne
xchg
inc
test
fcoml
outsb
ja
ljmp
int
out
mov
add
push
mov
daa
mov
jno
in
sbb
cwtl
pop
add
dec
pop
or
imul
pop
add
jno
dec
jns
add
lahf
mulb
aas
shr
fs
stc
fcoms
scas
test
and
mov
cwtl
or
js
jmp
clc
xorb
sbb
mov
and
jno
lahf
les
xlat
jne
and
jnp
imul
aad
stos
inc
sub
movsb
lods
std
sahf
and
adc
lods
stc
sbb
push
jns
dec
fs
pop
push
mov
int3
jecxz
pop
pop
aas
test
jae
jl
leave
push
pusha
xlat
dec
call
data16
rolb
mov
aam
dec
jmp
mov
dec
sub
decl
clc
pushf
movq
fmuls
adc
in
xor
rorb
icebp
sub
cld
pop
push
movsl
sbb
aas
sbbl
xor
test
xsha1
cmpsb
or
pop
mov
leave
and
mov
pop
mov
int3
lods
cmp
insl
pop
out
sbb
pusha
or
das
repnz
add
enter
pusha
adc
push
xlat
xor
ret
pop
fstpt
dec
cmp
popf
pop
cltd
enter
stc
dec
popf
imul
dec
sbb
gs
xchg
das
jle
in
xchg
xchg
in
add
dec
and
pop
jae
jg
int3
addb
fs
mov
push
or
inc
pushf
pop
xchg
fnstenv
sub
int
xor
mov
psadbw
mov
rorb
sbb
rclb
pop
jmp
popa
rcrl
in
std
push
das
pop
in
test
dec
or
pop
jbe
aaa
or
pop
es
xor
mov
sbb
xor
or
inc
imul
push
sub
or
cmp
lds
cld
clc
cmp
cmpb
mov
and
clc
pop
pop
push
add
fs
loop
and
push
mov
sub
jmp
std
cld
fldcw
pop
xchg
clc
jb
xor
aaa
stos
pop
mov
mov
das
pop
pop
ficompl
imul
mov
mov
mov
cmpsb
shl
test
jno
lahf
fistps
jmp
mov
scas
push
xor
pop
cmp
mov
scas
shrl
int3
cli
xchg
and
push
popf
pop
add
jl
mov
es
pop
pusha
dec
fildl
pop
sarl
fcom
xor
pop
pushf
add
daa
inc
jo
mov
shlb
cltd
sbb
mov
or
pop
mov
adc
jo
jae
in
outsb
jbe
ljmp
iret
inc
test
mov
movsl
pop
adc
dec
testb
rclb
jbe
hlt
xor
popa
test
sub
dec
dec
jp
add
pop
sbb
xor
pop
push
or
jno
mov
pop
dec
mov
mov
pop
adc
mov
imul
xor
pop
mov
mov
mov
cmp
jl
adc
mov
int3
cmc
scas
mov
and
push
cmp
dec
movsb
push
sahf
mov
lods
adc
fistps
mov
test
xlat
ret
jle
xor
or
pop
mov
pop
mov
mov
std
add
or
cs
pop
pop
leave
shlb
cmpb
cmc
jl
sbb
cwtl
mov
xorb
aam
push
lods
and
or
mov
push
ja
dec
pop
add
hlt
push
stc
lds
adc
xchg
mov
push
mov
in
push
push
scas
ja
repnz
dec
cltd
push
pushf
int3
xor
and
subb
xchg
daa
cmp
push
inc
test
lods
jecxz
loop
sub
add
int
test
mov
ret
pop
roll
or
ficoms
push
and
xor
mov
jo
dec
xchg
out
jbe
add
and
pop
or
enter
fsubs
roll
lods
mov
clc
pop
push
push
in
jbe
or
popa
push
sbb
mov
mov
aam
cli
sub
hlt
add
xlat
jg
fstpt
jnp
popa
jle
or
or
jle
mov
mov
jb
icebp
call
lret
fstps
push
lods
lcall
in
pusha
cmp
pop
jae
dec
or
xor
xchg
fsubs
adc
adc
ds
inc
adc
or
xchg
dec
jbe
lds
cld
insb
pop
push
aas
jecxz
pop
inc
in
mov
mov
pop
inc
or
mov
addr16
pop
mov
or
mov
gs
and
mov
clc
adc
vmaxps
xchg
pop
add
sub
inc
add
loopne
and
adc
mov
pop
loope
jno
inc
pop
dec
jno,pt
sahf
sbb
inc
ja
fldcw
xchg
add
fdivrl
test
cmp
mov
ljmp
jmp
leave
dec
sbb
adc
jb
fnstcw
jmp
or
shll
dec
adc
jno
shlb
mov
or
dec
pop
bound
arpl
jg
xchg
or
inc
jae
dec
pop
jecxz
mov
shlb
pop
jle
aam
inc
xor
pop
stos
jns
cs
mov
pop
mov
jecxz
xor
dec
es
xchg
jo
sbb
adc
sti
mov
mov
aam
pop
xchg
sub
out
jmp
sub
pop
ror
mov
pop
mov
jne
adc
lods
mov
pop
subl
pop
mov
testb
gs
push
cmpsb
add
test
pop
push
popa
mov
hlt
sub
pop
enter
rcr
pop
ret
push
test
xor
scas
mov
sub
call
mov
xor
inc
ljmp
jl
clc
sub
or
popf
leave
dec
sbb
popa
int
adcb
sarl
sbb
ja
iret
sub
sbb
or
outsl
pop
jle
icebp
iret
jl
fisttps
cmp
gs
repz
pop
sti
xchg
dec
pop
add
daa
mov
insl
shlb
maskmovq
testl
mov
dec
or
push
and
shll
loop
add
inc
xchg
lea
mov
test
mov
jmp
xor
icebp
sub
aaa
pop
xchg
or
pop
jmp
jle
xchg
lds
jb
repnz
jns
inc
adc
or
sub
inc
sub
into
sbb
sbbb
xchg
int3
jne
jecxz
stc
cmp
fwait
lods
adc
push
adc
rol
and
enter
fwait
adc
mov
mov
fimuls
fstl
push
push
sti
adc
push
and
addb
insl
cmp
push
fdivl
mov
lret
cmpsb
test
mov
cmp
call
mov
dec
jg
or
in
arpl
cmp
das
cld
or
pop
test
add
mov
pop
aad
testl
pop
popf
clc
adc
and
or
jge
xchg
shl
sbbb
lcall
loope
pushf
sti
and
dec
mov
bound
loope
mov
pop
dec
out
xchg
pop
jne
sbb
inc
pop
std
or
test
pushf
xchg
out
fdivr
jb
mov
and
iret
sbb
xor
mov
dec
jmp
imul
jno
aaa
sbb
or
mov
inc
or
mov
loop
adc
pop
jecxz
js
and
shlb
jge
push
xchg
iret
adc
adc
pop
mov
cmp
fsubs
pop
mov
fisttpl
push
adc
fistl
fsubrl
inc
int
cwtl
lret
leave
pop
pop
aam
mov
pop
push
pop
xor
bound
imul
xorl
push
enter
shlb
adc
push
cmc
dec
out
rclb
sub
test
stc
push
mov
add
pop
fsubs
mov
pop
mov
inc
jecxz
pop
push
lret
rcl
mov
sarl
pusha
daa
pop
jge
out
lods
mov
mov
orb
inc
cmpsb
scas
xchg
push
ja
add
cwtl
sbb
loope
pop
jne
cmp
imul
mov
push
test
fstl
addr16
mov
in
es
push
mov
mov
mov
adcb
adc
es
fidivrl
push
rcr
test
loop
inc
outsb
mov
icebp
push
dec
xor
or
xlat
int3
mov
outsb
mov
xchg
pop
nop
je
cmp
push
stos
pop
fdivrs
leave
xor
sti
mov
adc
icebp
sbb
jns
fldenv
sbb
xor
hlt
inc
repz
pop
je
es
clc
push
out
add
outsb
outsl
in
hlt
or
mov
stc
dec
and
sbb
add
and
fidivs
out
push
push
sahf
orl
gs
popf
int3
or
pop
lods
es
mov
mov
sbb
sbb
movsl
ret
outsb
mov
sub
xchg
and
or
iret
call
cltd
xor
subl
lret
mulb
imul
pop
movsb
cmpl
pop
enter
add
adc
push
xchg
adc
xor
popa
es
sbb
mov
ret
sbb
cmp
ror
sbb
aad
lock
rcr
push
hlt
add
jns
pop
in
push
sahf
outsl
mov
inc
pop
mov
in
fstpt
leave
pop
fidivrl
fs
jb
mov
inc
adc
push
sbb
in
and
push
push
popa
xchg
pop
mov
sbb
or
jbe
pop
pmullw
mov
mov
xchg
jno
add
out
pop
hlt
or
or
jle
pop
mov
xor
arpl
and
ds
ret
dec
pop
incl
icebp
or
mov
add
loope
pop
orb
jmp
push
lods
pop
dec
popa
dec
sarb
push
sub
je
out
and
dec
movhps
add
xchg
pop
cmpsl
push
insl
or
mov
jne
in
and
rolb
cmp
or
mov
pop
ljmp
fs
mov
adc
sub
sub
loope
or
pop
in
xor
aam
and
and
or
dec
xchg
loop
out
push
fisubl
ss
fadd
xchg
fidivl
mov
pop
frstor
jae
push
jg
mov
ficoms
lea
sbb
loop
jb
movb
or
sbb
sbb
sbbb
xlat
push
push
jno
negb
das
mov
lret
repz
pop
iret
frstor
ss
hlt
pop
adc
dec
pop
push
jmp
daa
xor
cmp
or
inc
jne
mov
and
out
rolb
pop
icebp
cmp
and
adc
and
aad
imul
and
pusha
push
xchg
bound
or
pop
out
test
mov
pop
test
cmpsl
pop
popa
stos
adc
pop
dec
call
cmp
cs
jns
pop
bound
push
xor
fstps
ret
ficompl
or
xlat
pop
fldcw
sbb
gs
jno
cld
cltd
stos
ds
pop
xor
jmp
lcall
jnp
aam
lret
adc
or
cmp
int3
mov
inc
fwait
aad
jle
and
pop
popf
fildl
inc
outsb
cmp
pop
sub
xor
sub
cwtl
and
jno
ret
push
stc
clc
inc
mov
je
sub
shl
pop
jp
gs
hlt
mov
push
loopne
fwait
jno
in
imul
repnz
ret
aaa
gs
push
pop
jge
xchg
ret
fadds
pop
push
test
mov
icebp
pop
push
sub
xchg
and
push
cmp
mov
jae
jg
mov
xor
add
ret
add
push
mov
pop
in
pop
repz
jns
aaa
pop
cmpsb
sub
sahf
dec
pop
inc
ret
xchg
ljmp
mull
mov
inc
pop
mov
stc
fs
rcrl
pop
out
cvtps2pi
data16
mov
mov
jbe
or
adc
pop
dec
fiaddl
push
imul
int3
ds
cltd
mov
arpl
enter
popa
aam
sub
jg
ret
push
fadds
mov
rcr
sub
je
cmc
fsubs
cmp
fsubl
pop
lret
inc
addr16
sti
sbb
xor
shll
subl
cltd
mov
jo
nop
sub
addb
adc
fwait
lcall
jno
out
in
clc
pop
sbb
sub
or
ljmp
adcb
test
push
push
enter
cmp
in
sbb
xor
jmp
add
insb
jg
push
inc
inc
ljmp
loope
lods
mov
mov
mov
pop
inc
scas
cmp
inc
repnz
fwait
mov
stos
push
pop
and
popf
js
imul
pop
sub
and
scas
cwtl
mov
adc
lret
fisubs
in
xor
incb
scas
xchg
mov
das
push
and
mov
or
inc
lahf
mov
pop
inc
and
sahf
pop
fildll
ja
popl
sbb
daa
push
and
cmp
fnsave
std
pop
pop
repz
jl
rcll
int
mov
mov
lret
stc
push
daa
daa
push
sub
repz
pushf
pop
cmp
shl
movl
incb
push
pop
testb
movsl
outsl
mov
sbb
push
fbld
mov
pushf
mull
popf
dec
icebp
pop
str
or
xor
cmp
jb
mov
out
mov
xchg
and
mov
add
stc
movl
jl
adc
xadd
pop
out
pop
repnz
jnp
mov
fcmovu
pushf
dec
testl
dec
imul
mov
pop
mov
insl
rcrb
adcl
stos
sub
mov
sub
mov
pop
sbb
and
lret
xchg
add
push
pushf
mov
bound
pop
imul
jne
fadds
lods
jb
pop
or
jae
adc
and
or
ds
and
ljmp
js
dec
xlat
ja
and
dec
mov
xor
lea
or
popf
das
push
dec
jne
pop
bnd
inc
pop
pushw
je
imulb
push
push
jne
pop
mov
out
outsb
in
mov
cmp
jmp
jmp
xchg
and
lods
cltd
cmp
test
gs
mov
mov
inc
jmp
push
push
add
adc
out
sub
jg
adc
adc
scas
stos
aas
lahf
arpl
pop
icebp
fistl
lret
inc
push
lods
mov
xor
pop
mov
das
arpl
mov
and
fs
cs
fimull
xchg
in
push
jmp
mov
pop
out
jns
sub
push
sbb
sub
mov
jns
cmp
out
mov
pop
lock
and
and
fistpl
sbb
jge
jmp
mov
or
mov
xor
adc
in
mov
mov
das
and
xor
js
pop
xchg
sbb
add
lods
mov
or
xchg
shlb
sbb
sub
add
or
and
push
pusha
mov
cmc
stc
test
fdiv
pop
or
stos
lret
jle
add
xor
shlb
dec
push
insl
lcall
jno
sbb
push
pop
divb
cmc
arpl
pop
jecxz
pop
movl
cmp
dec
xor
loopne
mov
iret
push
mov
add
xor
outsb
pop
pop
hlt
loop
mov
shl
outsl
imul
sub
pop
inc
in
clc
test
fildll
mov
stc
mov
inc
repz
jp
jo
mov
mov
push
xchg
or
loope
cmp
fdivs
in
or
ret
mov
shr
sbb
push
pop
popa
stos
mov
cmpsl
pop
test
push
mov
pop
out
test
dec
dec
pop
mov
test
lcall
and
mov
xor
xchg
jmp
aad
pop
dec
sub
rcll
adc
mov
push
adc
mov
popf
ja
pop
adc
jae
or
mov
push
lods
loopne
pop
mov
cmc
lds
fstpl
push
pop
fsubs
cmp
sti
pop
and
insl
pop
lds
fst
sbb
or
lcall
mul
in
mov
hlt
add
fsts
pop
out
jne
jmp
adc
pop
mov
xchg
ficomps
out
test
in
outsl
add
lock
leave
xchg
fsubl
pop
and
lret
imul
push
insl
cmp
and
lods
call
out
xchg
fbstp
sub
roll
pop
xor
aad
mull
data16
bound
xchg
jne
inc
xor
in
sub
jg
inc
outsl
mov
mov
popa
push
mov
push
fs
pop
mov
pushf
jp
popa
sbb
cwtl
mov
dec
cmpb
cmpsb
jns
lods
stos
xchg
stc
xchg
test
stc
push
cli
js
and
push
jb
push
pop
in
push
push
jae
imul
aam
sarl
sbb
pop
pop
dec
jge
imul
imul
testl
leave
pop
push
cli
hlt
shrb
cmp
fcmovu
pop
mov
push
xlat
jle
pop
repz
ss
rorl
shrb
test
outsb
jmp
sub
pop
cmp
jmp
fbstp
cli
out
testl
add
inc
dec
xchg
ljmp
outsb
cmp
test
loop
pop
repz
jo
cltd
daa
hlt
lods
mov
mov
pop
and
ds
push
imulb
fidivrl
push
mov
pop
cld
push
dec
pop
movsb
push
push
add
dec
mov
fsubl
and
sbb
stos
mov
mov
mov
rolb
or
mov
sbb
dec
dec
pop
insb
pop
push
inc
dec
fwait
pusha
push
imul
pop
mov
sbb
test
xchg
xlat
pop
imul
lods
test
pop
mov
cmpsb
dec
push
pusha
inc
sti
rorb
pop
repnz
jp
testb
pop
or
cmp
inc
xlat
data16
xor
es
scas
hlt
or
jg
arpl
testb
imul
jae
mov
call
pop
jmp
xrelease
mov
in
pop
aam
pop
mov
add
outsl
mov
pop
pop
lds
xchg
pop
movsl
cmp
push
xor
cli
mov
ljmp
in
mov
xor
push
jmp
pop
mov
sbb
mov
sbb
push
js
call
sbb
pop
fsts
adc
sahf
iret
test
jnp
mov
xlat
stc
push
xor
dec
push
andl
pop
mov
dec
stos
fwait
sbbl
or
fsubl
hlt
sub
pop
fbstp
push
push
repz
jbe
inc
in
frstor
mov
pop
cli
inc
incl
pcmpeqb
mov
sbb
add
sub
subb
xlat
dec
cmp
fdivrl
sbb
inc
hlt
pop
insb
or
sub
cmp
dec
leave
pop
pop
fisubrl
and
loop
js
icebp
addr16
sbb
loope
orl
pop
sbb
movsl
sbb
lds
pop
mov
repnz
loope
out
and
push
push
pop
mov
test
cs
std
arpl
cmpsb
out
push
sub
push
leave
loopne
push
lret
jnp
inc
add
adc
and
add
push
push
sbb
push
pop
ret
mov
lea
pop
movsl
call
in
xor
ret
dec
push
mov
pop
lcall
aaa
jns
aad
xor
repnz
gs
pushf
add
or
jns
scas
add
in
das
inc
push
lcall
adc
mov
outsl
cmp
jg
fidivrl
jae
cs
fwait
aam
gs
add
pop
lods
ds
lea
jge
test
lcall
fs
push
mov
pop
cmp
and
push
jp
dec
sub
mov
gs
cwtl
cli
dec
rcrl
lcall
in
rorb
fadd
out
stc
test
fdivrl
stos
jns
jmp
cmpsl
jle
fbstp
sbb
and
rorb
pop
pop
push
dec
jmp
pusha
mov
movsl
push
aad
jle
popf
hlt
inc
mov
pushf
stc
sbb
add
and
adc
scas
mov
add
or
push
mov
jmp
add
inc
or
pop
push
sub
sub
mov
dec
mov
and
jle
rcr
int3
frstor
pop
aad
dec
aas
adc
or
pop
push
lret
outsb
push
das
je
pop
icebp
push
pop
xchg
xor
pop
sbb
inc
mov
pop
loope
xchg
mov
add
movsl
sub
ljmp
cmp
sub
pop
cs
ret
js
cltd
addr16
mov
rclb
xchg
lret
cld
adc
inc
inc
pop
and
or
cmp
popl
adc
jo
lods
das
pop
mov
push
pop
mov
std
inc
stos
pop
gs
xchg
cwtl
jo
test
mov
sub
rcrl
mov
ds
push
dec
xor
daa
sbb
mov
sbb
or
pop
ja
fwait
popf
add
mov
icebp
iret
and
mov
mov
out
das
dec
test
out
jmp
and
dec
add
aam
or
repz
lcall
sbb
xchg
jge
pop
inc
or
adc
inc
pop
test
adc
jns
dec
iret
mov
cld
lret
jp
xchg
mov
icebp
or
cmp
pushf
repz
sbb
mov
pop
lock
or
popa
repz
push
lahf
loop
pusha
jbe
mov
out
sbb
xchg
call
pop
enter
adc
outsl
mov
dec
sbb
rcrb
insb
xor
fs
fsubl
xor
fcomps
fstpl
gs
mov
and
rcrl
int
mov
hlt
sub
pop
jb
inc
bound
movsl
pop
cmp
dec
mov
loop
cs
imul
xor
test
sub
mov
push
and
out
nop
pop
in
clc
push
std
loope
mov
and
sub
jge
movsb
lods
daa
dec
testb
jl
sbb
dec
icebp
bnd
test
mov
sbb
dec
imul
lcall
pmaddwd
mov
mov
repz
cmp
jbe
es
nop
ss
in
or
mov
mov
jmp
cltd
or
add
out
or
mov
cmp
fidivrl
mov
sahf
rorb
mov
ficompl
mov
mov
xchg
pop
testl
jp
pop
loop
jmp
pop
pop
add
lods
test
cld
inc
lds
mov
insb
pop
in
sub
imul
lcall
stos
push
jl
stc
mov
xchg
push
imul
adcb
lods
out
stos
xchg
lcall
mov
ss
call
pop
faddp
sbb
data16
cmpsb
mov
jmp
xchg
lcall
rep
mov
dec
sbb
nop
imul
push
push
ror
cmp
stc
adcb
dec
jg
xlat
cmp
inc
cmp
das
lods
pop
addb
pop
das
or
dec
xor
sbb
sysret
sub
in
push
scas
repz
lcall
sbb
xchg
inc
adc
adc
pop
adc
pop
add
and
xchg
adc
add
push
leave
xchg
sub
jns
mov
out
adc
jae
pop
ljmp
jne
mov
adcb
cmp
pop
mov
mov
or
lods
add
and
pop
andb
mov
sub
lods
mov
hlt
pop
adc
bound
push
scas
mov
loop
pop
inc
out
xchg
test
pop
cmp
lret
mov
pop
mov
stos
movsb
test
dec
cmp
and
push
rolb
cld
dec
jecxz
leave
out
pop
test
pop
ja
cmpsl
and
loop
lea
cmp
and
jg
cs
or
dec
dec
stos
pop
fisubrl
mov
pop
xchg
sub
mov
pushf
dec
inc
shll
push
pop
imul
or
push
mov
cmp
dec
sub
pop
fistl
and
pushf
lret
push
iret
jne
sub
lods
stc
pop
xlat
pop
ja
xor
pop
push
mov
aad
dec
mov
xor
or
shlb
iret
sub
fildl
aaa
pop
test
add
sbb
push
ljmp
aaa
adc
sub
pop
jne
cmpsl
ret
outsb
mov
movsl
aas
push
popf
mov
jb
sub
and
jns
rcll
sbb
cmp
loop
addr16
mul
loope
sub
cmpsb
aaa
test
rclb
or
mov
or
mov
mov
movsl
pusha
and
jmp
mov
sub
mov
mov
cmpsb
std
cmp
test
or
dec
stos
xor
or
roll
lods
insl
sbb
or
je
roll
mov
adc
leave
push
adc
mov
inc
pop
inc
push
scas
fmull
jmp
sub
push
add
icebp
dec
negl
lods
mov
ljmp
jo
pop
in
push
out
dec
jbe
test
out
mov
xchg
xchg
ss
mov
scas
mov
push
insb
cmp
mov
dec
imul
pop
divl
mov
pop
add
bound
xchg
les
inc
dec
pop
inc
insb
inc
sahf
enter
aas
xlat
gs
xor
sub
dec
pop
daa
inc
pop
cmp
mov
pop
lds
out
lcall
popa
sub
mov
and
stos
and
sub
fwait
or
into
pop
cmp
mov
push
fwait
pop
stc
cltd
das
daa
and
or
sub
and
mov
das
jl
stos
mov
sti
cwtl
scas
pop
mov
int
nop
imul
pop
pop
ja
repnz
roll
pop
push
add
icebp
and
daa
lret
pop
add
dec
imul
sbb
mov
loop
arpl
add
push
stos
int3
jge
into
xor
jae
xchg
int3
repz
lea
in
add
dec
pop
out
in
xor
repnz
dec
push
pop
les
mov
fcoml
jbe
xchg
cmp
pop
pop
ret
mov
inc
stos
mov
sbb
popf
pop
push
cwtl
xor
push
movsl
mov
cmc
adc
adcl
ss
inc
pop
push
xchg
test
or
mov
xchg
pop
dec
addr16
in
add
roll
outsl
xor
cld
bound
xchg
adc
pop
adc
mov
cmp
mov
fldenv
and
push
pop
out
addr16
neg
ds
cmp
call
stos
mov
pop
fldt
cli
cmpsl
cmpsb
lods
cltd
push
xor
out
mov
call
push
cmp
pusha
fadds
test
mulb
jns
aas
mov
inc
dec
add
js
pop
arpl
aam
sub
stos
push
cld
or
push
pop
sti
sbb
pop
adc
mov
add
or
sub
cmpsb
dec
mov
sbb
push
movsl
xor
sub
rcll
repnz
push
xchg
xor
gs
test
sahf
mov
arpl
mov
sarl
scas
cmp
xchg
loopne
jle
les
arpl
sub
jno
cmc
xor
sbb
pop
mov
ljmp
jo
cwtl
out
daa
sub
push
or
mov
cmp
movsl
repnz
arpl
nop
out
lods
mov
js
xor
stos
call
loop
push
sub
int3
and
fildl
and
das
xor
bound
sti
sbb
xor
mov
sbb
xchg
negb
jg
lock
ljmp
out
lock
ja
adc
iret
movsb
cwtl
jp
sub
inc
loopne
xchg
lods
in
fisubrs
clc
enter
dec
leave
push
or
rclb
mov
icebp
sbb
dec
mov
pop
pusha
or
shrb
in
lock
lds
fwait
push
scas
popaw
pop
jbe
out
xor
xor
lcall
and
inc
popf
rorb
jns
ret
jmp
fwait
ds
insl
push
pop
push
jecxz
mov
into
jp
pop
imul
add
stos
mov
imul
fstp
testl
pop
add
mov
lret
movsl
ljmp
mov
enter
mov
pop
jb
pop
inc
sub
adc
mov
pop
mov
shlb
mov
rcrl
dec
and
mov
jp
out
mov
nop
lcall
sbb
mov
outsl
and
or
das
sub
mov
push
xor
lahf
mov
mov
sbb
aam
iret
jmp
mov
out
push
mov
cmp
fsubr
and
sub
mov
sbb
mov
jg
or
adc
out
cld
or
xor
negb
mov
jecxz
pop
shll
in
pop
jbe
cli
sbb
sub
add
cmp
sahf
aas
and
xor
out
cmpsb
xor
add
add
mov
xor
cmpsb
jg
nop
xchg
mov
push
and
or
pop
inc
mov
test
into
jo
lock
movsb
jb
fs
sbb
inc
sub
xor
xor
pop
and
sub
sbb
test
test
pop
fidivl
loope
clc
hlt
adc
mov
in
cli
mov
and
mov
fwait
lods
push
daa
dec
movsb
xor
xchg
or
xchg
or
negl
and
xorl
xchg
jp
mov
loop
in
fildl
adc
add
repz
lcall
je
stc
ja
fcmovnbe
insl
pavgb
scas
inc
rcll
xchg
or
dec
mov
add
sahf
mov
fs
es
std
xchg
daa
movsb
push
jbe
scas
push
mov
jae
cmc
arpl
adc
push
test
push
lds
mov
out
push
aad
mov
push
mov
and
push
f2xm1
adc
mov
jnp
repz
push
mov
out
adc
clc
ss
lock
jl
mov
insl
aas
xchg
int3
jbe
pop
mov
xchg
shlb
sbb
int3
or
push
into
loope
testb
mov
test
shrb
sub
movsw
pop
xchg
shrb
pop
inc
lret
movsb
xchg
in
xor
fisttpl
test
fsts
movsl
and
inc
fstpt
jp
fistps
sbb
ficoms
mov
aad
mov
popf
xor
pop
inc
dec
ds
inc
add
sub
lahf
aam
pop
imul
cwtl
icebp
pop
mov
or
cmpl
cmp
int3
push
add
ljmp
aad
push
mov
or
jno
loope
mov
mov
imul
int3
ds
leave
mov
mov
pop
xor
jl
push
push
adc
push
inc
arpl
xchg
int
pop
mov
jns
gs
pop
mov
pushf
mov
xor
pop
and
pop
push
and
in
pop
jne
hlt
xor
into
fwait
int
or
enter
fcmovu
inc
pop
orl
pop
jbe
in
adc
es
mov
pop
test
cmp
pop
sub
out
xor
ret
in
cs
out
pop
sub
ds
fdivrs
movsb
insb
rclb
mov
push
dec
cli
sbb
lret
sub
mov
pop
ret
int
out
sub
or
jp
test
push
out
sbb
sbb
loopne
clc
push
or
ja
pop
pop
push
xchg
les
ret
outsl
out
cmpsb
and
jp
and
sbb
push
pushf
test
das
pop
insb
xchg
cltd
pop
movsl
std
pop
and
adc
mov
ss
inc
cltd
fimull
insb
arpl
pop
jmp
call
xor
jmp
or
inc
sub
pop
push
fcoml
inc
int
in
pusha
pop
jno
jecxz
or
sbb
sbbl
xchg
sbb
mov
bound
adc
jb
pop
enter
shlb
and
pusha
leave
inc
fsub
xor
rorl
sub
jns
adc
mov
dec
jne
testb
hlt
jl
adc
shlb
jne
test
mov
jecxz
es
or
pushf
ficomps
mov
filds
sub
sub
pushf
xor
imul
mov
inc
sub
mov
int3
xor
mov
pop
and
xor
pop
sbb
out
sub
stos
enter
cltd
out
inc
and
add
ffreep
adc
xchg
test
pop
xchg
pusha
outsb
sbb
orl
push
jno
fsubl
jmp
fisttps
pop
pop
mov
dec
loopne
sahf
pop
pop
sub
adc
int3
data16
loop
xor
inc
dec
sub
imul
mov
test
fs
rcrb
nop
xor
push
pop
pop
jg
leave
xor
shrb
cmp
repz
call
ret
jge
outsb
sub
sti
or
jl
repz
dec
sbb
out
xor
pop
dec
inc
mov
lock
pop
repz
and
push
mov
es
shlb
loopne
dec
mov
mov
pop
mov
faddl
jb
subl
cwtl
lock
mov
pop
in
adcl
inc
std
mov
cmp
sub
mov
cwtl
jecxz
sub
sbb
mov
mov
and
mov
popf
arpl
xor
mov
imul
lahf
int
push
pushf
rclb
cmp
divl
xchg
or
or
scas
adc
leave
rcll
and
pop
jbe
push
loope
repz
mov
ret
mov
xchg
icebp
push
sbb
adc
xchg
push
pop
push
add
inc
xchg
dec
xor
in
mov
push
ret
sub
add
loop
cmpsb
pop
mov
sub
pop
stos
mov
das
cmpsl
sub
pop
mov
call
mov
sbb
jl
jo
xchg
dec
les
outsl
mov
clc
add
loope
mov
push
test
sub
shl
push
sti
pop
pop
lret
jecxz
ret
push
fsubr
push
adc
mov
mov
pop
in
push
icebp
cltd
xor
and
insl
cmp
mov
and
aad
dec
push
dec
push
sub
aam
dec
xor
subl
or
mov
jbe
inc
mov
repnz
and
xor
pop
and
addr16
push
xchg
add
data16
push
je
repz
cmp
test
add
fcoml
xchg
or
xor
pop
push
xlat
aad
leave
test
mov
inc
or
lods
scas
test
sub
mov
out
mov
fdivrl
push
inc
jmp
mov
loopne,pn
ret
pushf
aaa
test
das
mov
dec
pop
es
push
push
pop
push
pop
xlat
ljmp
mov
sub
and
adc
cltd
enter
insb
dec
xchg
pop
pusha
fs
gs
inc
mov
lahf
aad
cmp
adc
adc
add
addr16
shll
std
mov
dec
adc
std
push
in
or
stos
mov
fistpll
pop
push
adc
pop
or
cwtl
add
je
pop
outsb
jns
movsl
iret
mov
push
std
push
rcrl
in
stos
mov
push
add
loop
lret
jle
cwtl
mov
pop
xor
pop
jmp
cmpsb
call
xchg
inc
jae
sub
sbb
pop
cmpsb
test
sbb
jmp
sbb
aas
call
fs
mov
loop
dec
jecxz
cmp
ljmp
cltd
sbb
mov
mov
sub
call
lds
cmp
into
cli
dec
fwait
inc
inc
or
sbb
ds
mov
rol
imul
push
mov
leave
fcomps
imul
mov
mov
pop
pushf
and
js
sub
inc
dec
mov
shll
in
rorb
cli
jo
cld
add
xchg
adc
dec
jb
imulb
roll
icebp
or
xchg
incb
ss
jo
test
and
ds
push
loope
mov
in
push
inc
lea
cmp
or
cvtpi2ps
pop
inc
out
testb
add
sub
test
adc
ret
jmp
mov
sbb
jns
mov
pop
ret
adc
mov
adc
pop
push
pop
outsl
bound
xor
test
mov
mov
lret
sti
cs
dec
pop
js
cmc
mov
xchg
xchg
pop
in
ds
mov
mov
jmp
pop
sub
mov
cmp
and
mov
push
scas
stos
pop
and
stos
fistpl
sbb
fwait
mov
mov
sbb
jns
dec
or
nop
jae
and
dec
pop
sub
and
pusha
in
push
pop
dec
jecxz
lret
lahf
sbb
jbe
pop
inc
fstl
sub
hlt
das
sub
adc
repz
lea
call
jb
xlat
pop
or
xchg
xchg
jbe
jmp
push
fstpt
mov
push
fldt
push
popa
or
jg
or
inc
mov
orl
in
mov
dec
jg
outsl
loope
push
jl
sbb
insl
jnp
adc
sbb
inc
pop
insl
out
or
jle
fldl
in
out
ss
stc
inc
fwait
and
jmp
inc
hlt
jo
add
push
cltd
bound
outsl
negb
call
loope
pop
mov
addr16
push
jbe
test
lcall
pusha
pop
jecxz
pop
xorw
add
pop
inc
shrb
ds
lahf
lret
stc
aad
sub
fadds
sbb
sbbb
xchg
or
into
dec
addr16
lds
mov
stos
xchg
sti
or
add
push
popf
pop
bound
cld
xlat
pop
test
sub
scas
xor
lret
jbe
popf
pop
out
xor
xor
mov
cltd
lds
test
mov
pop
mov
sub
mov
mov
stos
dec
rclb
js
sbb
jl
jmp
fidivl
sub
pop
cmp
leave
cmpsb
stos
jl
dec
xchg
in
sbb
jl
sbb
enter
xchg
sbb
and
movsl
fwait
push
fistpll
dec
pop
std
pop
push
call
int3
leave
sub
aam
mov
aad
dec
push
insb
inc
daa
pop
pop
pop
outsl
fdivrp
add
arpl
sbb
mov
popa
pop
jle
das
pop
xor
sbb
sbbb
xchg
add
xor
ficomps
pop
imul
sti
bound
pop
pmaddwd
jmp
jb
clc
push
pop
inc
push
das
cmpsb
lock
enter
inc
sbbb
adc
mov
mov
lock
sub
inc
inc
jbe
stos
push
mov
inc
cmp
faddl
xor
lahf
pop
push
mov
cmp
sub
sbb
rcll
leave
int3
mov
pop
js
mov
xchg
pop
cld
or
sbb
out
ss
nop
pop
push
cmp
dec
cmpsb
lods
pushf
repnz
std
pop
cmp
ss
shrb
add
adc
lods
addb
mov
cwtl
dec
ret
or
xor
sti
stc
push
lods
sbb
aam
pop
fwait
lret
jecxz
lea
stc
pop
mov
cmp
out
jl
es
mov
mov
mov
mov
sbbl
ficomps
dec
lret
xchg
imul
pop
inc
xor
push
jnp
repz
pop
js
jge
sbb
pop
mov
add
imul
stos
lahf
jge
push
jp
jnp
jne
adc
lods
jne
dec
push
fnstsw
fistpl
cs
imul
stos
pop
pop
add
jle
aad
mov
adc
enter
push
add
cwtl
pop
lret
imul
sbb
scas
aas
pop
sti
fstp
jp
gs
fs
or
pop
jns
ret
push
imull
or
xlat
pop
sub
stos
jg
or
jnp
test
sub
rcrl
test
loope
mov
mov
ret
cmp
sub
xchg
xchg
jmp
push
lret
sahf
pop
inc
arpl
xor
pop
mov
xchg
add
xchg
mov
out
xchg
lods
mov
lock
add
testb
cltd
inc
mov
adc
imul
push
pop
jno
imul
sub
or
jmp
sti
push
pop
lret
xchg
or
loopne
cmp
pop
stc
jae
int3
cld
fldcw
mov
stos
sti
jl
aad
mov
xor
pop
enter
sbb
pop
pop
mov
pop
hlt
out
mov
and
lea
push
lods
iret
mov
jae
push
mov
dec
sub
testl
xor
cmp
xchg
xchg
iret
repnz
popf
xor
adc
in
dec
mov
mov
sbb
cwtl
cmp
neg
cmp
mov
jl
pop
push
arpl
pop
jmp
je
xor
repz
push
fisttps
sbb
pop
dec
int
xor
cmpsb
shll
fcompl
pop
jnp
jno
lcall
xor
nop
in
ss
shrl
icebp
sub
ds
and
jns
and
and
jp
sbb
jg
sub
stos
cmp
fwait
and
stc
call
lds
shrb
and
add
xor
push
js
or
leave
icebp
bnd
jb
in
idivb
out
xor
les
xlat
push
sbb
xchg
pushf
sbb
cmc
test
lock
sub
pop
inc
addr16
call
dec
add
sar
aam
mov
mov
push
and
ret
std
dec
les
mov
push
inc
mov
ds
fisttps
push
cmp
adc
cs
test
imul
xlat
fisubrs
into
mov
and
fistpll
jae
hlt
out
fsubrl
lea
sub
pushf
and
mov
stc
test
test
pop
fdivr
mov
pop
imul
sub
lea
ficomps
shlb
pop
add
divb
pop
mov
mov
mov
clc
bound
cli
scas
xchg
ljmp
pop
gs
pop
clc
es
aaa
cmp
rcll
scas
rcrb
js
cs
pusha
mov
insb
pop
xlat
gs
push
loope
nop
pop
xor
sbb
mov
test
sub
mov
daa
xchg
lods
stos
test
and
sub
rcrl
shl
test
rcrl
cmc
jmp
pop
cmpsb
scas
mov
into
and
mov
daa
ljmp
or
vsubps
notb
orb
sbb
hlt
dec
xchg
ja
jecxz
jecxz
lea
sbb
jle
cmp
iret
mov
pop
mov
fistps
xchg
mov
fcmovnbe
pop
push
cmp
frstor
inc
repz
and
stc
inc
xlat
test
jnp
push
jp
push
iret
fwait
lret
ljmp
adc
jmp
mov
sub
lods
xor
repz
mov
push
sub
xchg
jne
ljmp
nop
jae
in
mov
inc
xor
pop
mov
cs
shll
into
push
loope
pop
fs
xor
cmpsl
mov
les
mov
jl
into
push
icebp
pop
adc
sbb
adc
cmpsl
lds
sub
call
shl
dec
jb
add
sub
pop
push
or
ficompl
mov
jno
or
and
and
sbb
push
vpminub
movsl
mov
push
jmp
pop
insb
ds
imul
pop
rcll
loopne
imul
das
adc
inc
in
mov
xor
push
orb
arpl
or
test
fistl
xor
imul
push
mov
icebp
pop
and
pop
jne
testb
mov
add
jns
pop
dec
fwait
add
xor
jp
iret
mov
jae
mov
pop
pop
out
inc
sti
scas
cwtl
mov
inc
push
pop
ja
notb
leave
sub
mov
mov
pop
jle
movsb
insb
aas
xchg
into
inc
pop
add
add
pop
fs
push
arpl
inc
cwtl
push
cld
bound
mov
xor
inc
push
jl
sub
jae
bound
inc
pop
or
add
mov
fcmovu
adc
push
xor
or
xchg
mov
adc
mov
arpl
ss
neg
pop
lret
mov
and
xchg
jne
jo
lods
fwait
mov
outsb
pop
aas
pop
dec
ficoml
shlb
mov
insl
jns
imulb
outsb
das
sbb
les
dec
add
add
lret
or
cmc
mov
incb
mov
sbb
stos
push
sub
mov
jecxz
ljmp
ss
xor
int3
mov
ds
fidivrl
xchg
pop
mov
data16
pop
pop
xchg
jo
xchg
cmp
xchg
jl
popf
lret
aaa
cmpsb
out
mov
test
mov
xchg
sbb
pop
jle
jecxz
sbb
pop
mov
gs
cld
push
push
mov
mov
add
pop
mov
addr16
push
or
mov
movsl
mov
pop
sub
cld
mov
xor
enter
lods
lcall
rclb
cld
pop
xchg
adc
xlat
nop
sbb
cmc
out
cmpsl
mov
push
stos
push
pop
push
fistpll
in
jo
pushf
leave
xchg
adc
loope
popf
and
stc
dec
roll
ja
add
push
icebp
sbb
mov
and
adc
ja
mov
adc
pop
xchg
pop
ds
test
popf
loope
push
lcall
divb
sti
mov
jl
pop
and
dec
pop
and
fnsave
int
or
sarb
inc
outsb
in
cmp
shl
dec
add
xor
pop
push
out
mov
add
inc
cs
inc
outsl
ss
or
in
loope
inc
popa
mov
jns
inc
mov
leave
add
cmp
lret
pop
aaa
mov
addb
aad
pop
leave
inc
hlt
scas
mov
sub
jae
push
and
into
jo
repz
xchg
into
int3
jo
pop
cmp
lcall
imul
ja
mov
test
in
leave
notl
scas
scas
xchg
fwait
mov
pop
cmpsb
insl
inc
imul
jecxz
push
cs
mov
decb
int
rol
pop
ja
jp
pop
or
sbb
sbb
sub
push
mov
sub
pop
cltd
and
inc
sub
repz
dec
scas
sub
or
cwtl
mov
and
xchg
pop
sub
sbb
fsubs
push
arpl
or
adc
dec
mov
nop
int3
adc
inc
enter
mov
clc
push
add
xor
inc
in
arpl
jb
xlat
test
arpl
cld
mov
push
inc
inc
add
xchg
push
pop
push
and
fimull
shrl
addr16
in
fcmovnu
xlat
mov
testb
int3
xchg
lret
cltd
mov
cs
jg
inc
push
into
push
push
xchg
gs
xlat
insl
or
pushf
insl
dec
rolb
call
mov
or
in
and
enter
stos
shr
dec
mov
loope
lods
ja
cmp
jns
cs
les
jns
cld
xor
jno
js
dec
jnp
xchg
test
pop
scas
rorb
lret
stc
pop
jbe
mov
gs
call
add
scas
out
iret
cmp
andb
jbe
in
jo
cmp
pop
and
add
xor
jg
pop
out
sbb
lcall
mov
dec
mov
sub
xchg
fdivrs
sub
ret
stc
push
lea
jp
bnd
stos
push
inc
sbb
and
imul
and
js
das
addl
or
loope
negl
ds
movsb
mov
subb
dec
insl
adc
test
jecxz
sbb
dec
and
shr
pop
jg
icebp
aam
jnp
ljmp
pop
in
cmp
pop
dec
loopne
inc
push
pushf
or
push
cmp
aas
adc
pop
push
ret
mov
subl
mov
xor
sbb
bound
pop
je
ficoms
and
xchg
pop
lock
or
adc
int3
add
shll
or
xchg
mov
add
in
jb
pop
and
mov
cmp
loop
mov
jno
mov
shrb
mov
mov
fldt
test
insl
mov
mov
test
cmp
pop
cmp
sub
in
int
push
in
or
xor
mov
ds
leave
jecxz
mov
bound
shll
jmp
das
adc
jge
pop
jnp
jno
push
or
or
or
inc
jno
out
pop
fcmovne
mov
mov
andb
fwait
mov
pop
xchg
pop
mov
jg
ret
push
inc
mov
cmp
mov
pusha
fisttpll
or
push
ja
sbb
mov
and
imulb
jecxz
mov
inc
cmovs
pop
push
and
cwtl
adc
mov
out
xchg
pop
shrl
in
xchg
pushf
fdivrs
loop
mov
js
and
std
dec
loopne
movsb
pushf
aas
call
or
lods
pushf
xchg
lret
gs
pop
ret
cs
sbb
sub
xor
jle
mov
mov
push
mov
pop
dec
and
adc
imul
les
arpl
cltd
ljmp
gs
mov
loopne
leave
popf
jg
pusha
pop
push
repnz
inc
ss
js
add
jbe
cmc
and
mov
pop
popf
xchg
clc
cmp
cmp
ja
cmp
repnz
dec
test
lcall
and
addr16
fistps
pop
jg
ret
call
jns
imul
add
rcrl
insb
or
xchg
test
icebp
xchg
mov
addl
sar
dec
mov
call
jae
std
ja
xor
adc
xchg
lods
shlb
or
data16
pop
mov
or
sbb
and
gs
je
cld
jns
rcll
dec
pop
pop
and
icebp
or
xor
pop
rcr
inc
roll
int3
push
mov
pop
xor
ret
roll
in
cltd
mov
and
mov
pushf
sub
inc
jno
jmp
add
adc
into
fnsave
les
mov
or
std
sbb
push
inc
jns
adc
add
push
dec
push
push
imul
inc
in
out
imul
fdivl
xchg
or
sbb
pop
xorb
shlb
push
pop
outsl
inc
scas
mov
xchg
frstor
pop
mov
aad
mov
shlb
ficoml
adc
dec
lahf
js,pt
push
xor
pop
cmpsl
test
add
mov
inc
idiv
lcall
loope
cmp
out
mov
insb
sete
push
sub
in
push
xchg
mov
pop
fisttps
xor
add
xor
push
pop
fcomps
std
lret
xor
cmp
and
fisttps
dec
jae
negb
jae
xchg
and
lods
jmp
fbstp
adc
lods
pop
aas
shll
push
pop
jmp
mov
push
jb
stos
mov
int3
or
jp
jns
mov
frstor
gs
mov
aas
outsb
pop
mov
push
ss
sub
inc
xchg
sbb
inc
mov
cli
dec
cs
bound
cld
cmp
outsb
sbb
lcall
inc
lods
mov
cmpsb
call
addr16
sub
xchg
shlb
arpl
sub
into
sbb
xchg
sbb
lret
push
xchg
mov
add
shlb
xor
in
add
pop
aam
lea
xchg
mov
mov
mov
fcoml
pop
adc
in
gs
mov
push
repz
inc
addr16
negl
push
dec
ja
pop
add
sub
ljmp
lret
in
roll
mov
std
fadd
dec
outsb
mov
imulb
cmp
and
or
pop
jl
repz
pop
ficomps
lret
dec
mov
sbb
and
mov
or
notb
cmc
pop
das
gs
repz
nop
faddl
jmp
test
leave
push
mov
fildl
mov
call
into
xchg
add
mov
xor
stos
mov
pop
dec
jecxz
ds
aam
mov
jns
popa
sub
loopne
xor
inc
add
jecxz
fisubs
and
sti
inc
jbe
xor
ss
ret
or
add
fwait
pop
jno
mov
jae
sub
add
cltd
jecxz
les
cwtl
das
adc
sbb
jle
or
sbb
or
mov
sbb
push
ficomps
in
dec
andl
call
lods
cmp
les
push
mov
adc
enter
outsl
xchg
push
adcb
test
or
xor
or
fdivs
pop
xchg
pop
in
add
xchg
fcomps
and
mov
fistpl
lcall
ret
fsubl
addl
xor
mov
lods
insl
sub
ret
das
out
rorb
dec
pop
cmp
ljmp
scas
ss
lcall
cld
jecxz
pop
mov
loope
dec
int3
subb
mov
dec
cmp
mov
jge
jno
dec
aaa
jge
pop
bound
dec
add
mov
xchg
je
push
xchg
repz
lods
inc
cwtl
and
test
fcmovnb
mov
cmp
enter
sbb
data16
les
pop
pop
addr16
xor
cli
shll
xor
fildl
cli
insb
fwait
loop
add
out
inc
mov
dec
cltd
or
xchg
cmpsb
jnp
jmp
pop
push
shlb
dec
jo
jns
mov
rcr
fstps
es
pop
stc
mov
incl
faddl
clc
or
imul
fmull
test
xchg
loop
xor
lock
mov
mov
pop
and
out
xor
pop
pop
xchg
cld
adc
hlt
jns
mov
in
add
cmp
int3
dec
push
cltd
test
sbb
jnp
stc
cli
mov
or
cmp
push
jae
pop
mov
jmp
inc
fcoms
sub
or
fsubl
pop
jg
xchg
lret
jle
pop
and
sti
cld
ret
push
dec
push
lret
hlt
mov
fs
lods
imulb
adc
movsl
mov
lock
jp
scas
mov
repnz
dec
push
pop
int
jb
in
lds
call
cltd
mov
push
dec
dec
mov
subb
loopne
jno
push
and
pop
adc
push
and
pop
cs
dec
imul
data16
push
out
sub
rcrb
in
xor
lds
pop
mov
loopne
mov
cltd
sub
out
and
aaa
jns
and
outsl
nop
rcrb
xchg
jge
in
dec
sub
pop
fcoml
ficoml
popf
sub
sbbb
pop
pop
lock
pop
aas
push
pop
cmc
pop
shlb
sbb
bound
jmp
repnz
or
mov
xchg
notb
pop
rorb
das
mov
and
stos
pop
push
in
aaa
mov
inc
mov
das
jmp
repnz
mov
push
movsl
xchg
movsb
sub
pop
out
sbb
aad
insb
and
push
addr16
in
fstpt
stos
push
data16
mov
aad
and
mov
int
add
and
add
inc
xchg
fistl
xchg
test
push
inc
or
imul
sbb
sub
jnp
dec
ljmp
aas
shlb
mov
cwtl
insb
sub
mov
dec
push
or
daa
pop
jg
iret
pop
xor
rcll
or
dec
or
xchg
and
pop
fimull
les
sub
pop
xchg
leave
pop
insb
shrl
pusha
movsl
stos
addr16
and
rcrb
fstpt
ficomps
sbb
ret
dec
mov
aas
sub
cli
push
jno
mov
daa
das
sub
and
cmp
inc
scas
adc
sub
cmp
aam
fcompl
mov
pop
jle
mov
pop
roll
mov
aam
push
addl
icebp
push
ficompl
cmc
dec
setae
mov
jne
into
xor
sub
stos
test
xor
sbb
xchg
pop
xor
dec
push
jbe
pop
cmp
std
or
push
outsl
jecxz
adc
xsavec
jge
sub
in
xchg
lods
fisttpll
inc
and
dec
sbb
mov
loop
add
mov
cmp
shll
arpl
mov
pop
loope
cmp
inc
sub
pop
in
push
push
mov
les
adc
lds
bound
mov
adc
inc
popa
lahf
adc
pop
and
adc
sub
dec
and
and
in
dec
dec
pop
fcoms
imul
shll
push
cmp
pop
cltd
and
jno
ret
or
sbb
test
add
sti
push
sbb
rorl
pop
mov
cmc
add
sbb
into
dec
push
shll
out
xor
and
ds
lcall
jmp
mov
cwtl
dec
aad
jmp
pop
hlt
xchg
inc
add
int3
add
roll
ret
sbb
or
and
dec
add
outsb
sahf
sbb
repnz
addb
leave
push
jne
ja
or
mov
mov
mov
jbe
in
dec
das
dec
mov
pop
jo
pusha
jl
scas
mov
mov
test
push
repnz
or
mov
mov
neg
or
and
and
mov
pop
sub
lock
ret
fldt
sbbl
and
pop
insb
sti
and
cmc
inc
cltd
add
rolb
neg
lods
cmp
sarb
sbb
pop
xor
mov
mov
pop
mov
sbb
lods
xor
adc
jp
in
mov
stc
xor
sub
pushf
inc
stos
inc
sbb
mov
and
adc
mov
add
or
stos
test
mov
leave
lods
mov
mov
ljmp
sub
push
xchg
ret
mov
push
enter
stos
jne
outsl
mov
pop
fs
outsb
test
jo
nop
pop
fstpl
roll
jns
add
sub
mov
push
xchg
push
or
loop
xchg
repnz
push
jecxz
cmpl
frstpm(287
and
out
enter
fs
sub
fstps
cmp
sbb
jno
push
lret
fstps
pushf
inc
sbb
inc
lcall
adc
pop
xor
jo
andl
cltd
loop
pop
in
jnp
fcoml
daa
in
add
fs
pop
push
rorl
pushf
movsl
push
inc
xlat
cmpsb
xor
es
xchg
loopne
xlat
int3
lods
cmp
bound
mov
sahf
ficompl
xor
xchg
pop
std
sbb
lea
lret
mov
adc
push
in
pop
jae
hlt
pop
decl
mov
jmp
pop
inc
popa
aaa
add
mov
rol
xchg
insb
mov
int
mov
sbb
mov
add
xor
into
in
dec
jmp
out
fcmovnu
pop
cwtl
lea
jge
push
inc
pop
insb
aas
xchg
es
les
pop
fptan
and
mov
push
mov
pop
leave
js
mov
mov
rolb
mov
jle
push
rorl
xchg
mov
mov
mov
movsb
jno
push
jns
push
je
or
and
adc
sbb
push
push
das
jne
cmc
add
jl
xchg
popa
cli
in
ds
repnz
dec
xor
and
sarl
int3
xor
mov
aam
inc
imul
fdivrp
pop
pop
sub
mov
es
pop
pop
mov
push
stos
insb
rclb
ret
dec
mov
inc
pop
fsubs
inc
xchg
jp
sub
pop
ss
ficompl
in
popl
scas
xchg
cmpsb
lock
insb
das
movsl
ret
in
add
dec
cmpsb
hlt
sbb
aad
dec
enter
insl
arpl
mov
mov
ror
sti
and
loope
add
cmp
inc
pop
or
fistpl
push
pop
mov
jl
bound
dec
mov
add
pop
dec
ja
push
icebp
or
sbb
lods
dec
test
notl
pop
das
cmp
jns
dec
dec
jbe
loopne
mov
pop
pop
adc
push
mov
nop
test
mov
and
dec
jns
cld
lcall
arpl
xchg
icebp
call
xchg
push
push
mov
add
rclb
bswap
out
mov
roll
test
sub
repnz
fnsetpm(287
int3
lcall
xchg
jg
mov
inc
pop
push
push
and
sbb
jg
dec
adc
jecxz
mov
jno
push
and
pusha
paddsw
jns
jb
stc
cmp
mov
fdivrl
inc
or
xlat
movsb
mov
rorl
mov
xchg
into
jne
sahf
cmc
bound
pop
stc
sub
xchg
repnz
mov
into
push
je
shlb
cld
test
daa
jmp
fistl
add
fbstp
xchg
fdivrs
lods
fwait
lock
negl
test
mov
loope
add
and
jo
cld
jg
lods
call
loop
or
dec
mov
or
ficomps
notb
out
in
insl
cmp
and
shlb
dec
negl
add
repnz
enter
addr16
lods
insl
je
retw
lds
xor
icebp
push
xlat
ds
mov
jecxz
fcmovnb
lea
pop
enter
jbe
add
pop
add
insb
mov
and
ret
push
inc
ss
mov
pop
lcall
add
lods
fwait
push
push
jns
sub
push
and
jbe
loope
les
sbb
pop
jp
inc
clc
or
bnd
fisubrs
mov
in
pushf
mulb
cmp
insb
pop
pop
loop
push
and
pop
sbb
inc
xchg
and
pop
ret
cmp
data16
jg
orl
mov
cs
inc
xor
fcmovu
aaa
mov
jne
xlat
inc
xor
dec
in
pusha
mov
mov
xchg
shll
push
fmull
imul
dec
cli
push
adc
mov
jb
cs
scas
fisttpl
sbb
push
jmp
jo
psrad
lods
popf
inc
negb
mov
jmp
ror
pop
cmc
xor
pushw
sub
jp
cs
xor
sub
movsb
call
xchg
pop
mov
fidivrl
push
ret
test
cltd
dec
and
sbb
inc
xchg
es
popf
cmp
xor
push
rcll
fldt
icebp
int
scas
sub
lods
aaa
push
fsts
leave
aad
add
sub
push
dec
sub
push
rcrb
xor
enter
sub
lods
push
punpcklbw
add
imul
in
pop
adc
cwtl
fldt
pop
pop
xor
xchg
stc
insb
pop
and
mov
and
sub
shlb
in
jne
pop
negb
sub
dec
jecxz
adc
xchg
and
in
adc
bound
jecxz
adc
lret
dec
pop
js
sub
imul
xchg
lret
mov
test
mov
pushf
dec
adc
lock
mov
jl
push
or
pop
loope
cmp
sbb
add
sub
mov
inc
xchg
enter
movsl
pop
adc
or
dec
fistps
test
or
pop
orl
and
movsl
and
push
xor
xor
shrl
lods
fdivr
pop
stos
inc
or
cmp
loopne
jno
mov
inc
aad
ret
sub
sbb
pop
and
sub
clc
xor
lock
aas
mov
nop
dec
push
out
pushf
sub
imul
ljmp
sub
fwait
lods
in
addb
loope
sti
add
fbld
pop
jecxz
xor
clc
cli
push
and
out
sub
jno
sub
jecxz
shr
cltd
mov
xchg
push
jae
jns
fdivrl
sub
cli
push
test
mov
imul
push
ja
push
jae
jmp
pop
cmp
cmpsl
jo
arpl
adc
dec
xchg
iret
loop
lock
mov
pop
in
outsl
mov
jmp
and
inc
pop
sub
and
ja
xor
cmp
dec
pop
leave
imul
in
mov
stos
test
jmp
sbb
ljmp
repnz
pop
call
or
xor
push
into
fucomip
in
pop
dec
pop
sbb
inc
stos
or
cld
pop
jb
dec
lret
jmp
sarl
iret
push
xor
dec
mov
xchg
imul
dec
loop
pop
add
mov
stos
pop
out
icebp
push
std
leavew
jb
pop
adc
or
jbe
mov
mov
js
and
jb
testb
outsb
xchg
pop
dec
inc
sub
lea
ds
adc
shr
sub
mov
adc
out
mov
add
ret
fisubl
and
cmp
stc
sbb
inc
mov
xor
pushf
lret
js
pop
out
addb
ds
fidivrs
jbe
xor
roll
and
cltd
sub
lret
aam
mov
xlat
ja
add
ss
sub
mov
and
mov
rcll
push
push
mov
dec
out
ja
inc
push
dec
in
xchg
push
movsl
cwtl
into
adc
pop
xchg
sub
pop
inc
leave
xor
adc
in
pop
ja
jo
mov
fistps
pop
aad
xor
les
pop
and
call
cmc
pop
push
ret
ds
hlt
push
repnz
gs
xor
aaa
loopw
sub
cmp
in
add
faddl
cmpsl
xor
ficoml
ret
imul
xor
xor
inc
mov
push
ret
pop
inc
add
into
inc
pop
sub
push
cmp
rcrb
test
cltd
dec
jp
movsl
icebp
stos
pushf
push
push
pop
pop
enter
std
sahf
int3
jle
add
and
mov
imul
cld
cmp
sub
cmp
cld
pop
jns
jae
jno
es
lret
out
es
or
lahf
je
and
jns
pop
iret
sar
sub
leave
cmp
stos
ret
sbb
xor
dec
jno
aas
aam
arpl
cmp
pop
dec
scas
mov
pop
or
and
fisttpl
arpl
mov
sub
pop
jae
out
xchg
mov
ja
push
repz
fistps
iret
mov
enter
pop
xchg
gs
mov
adc
gs
scas
jne
xor
out
cmp
in
jb
decb
add
sbbb
ficompl
dec
dec
sub
cmp
popa
out
sub
xchg
sarb
imul
xchg
rcrb
pop
mulb
pop
mov
mov
sub
inc
loop
pop
push
jno
push
lock
or
xor
mov
sbb
sub
sub
xor
inc
mov
mov
xchg
push
dec
mov
adc
pop
cs
dec
jnp
aam
or
push
mov
icebp
cmp
repz
dec
movsl
pop
and
stos
cmp
int
hlt
mov
inc
add
fwait
mov
sub
pop
pop
ss
dec
jb
cli
data16
sti
pop
push
mov
pop
or
push
mov
xor
pop
mov
mov
negl
aad
ja
out
testb
adc
and
test
sar
pop
sbb
xor
cmp
sub
pop
imul
stos
mov
push
sub
sbb
pop
xchg
clc
jecxz
mov
fidivl
movsl
fadds
bound
sub
clc
or
and
and
push
test
idivl
icebp
and
pop
jmp
int3
jle
fcoms
cld
xchg
jo
shr
and
sub
push
and
int3
push
or
inc
jmp
and
pop
dec
sub
cmp
std
pop
jle
int3
fstpl
call
pop
xchg
cs
push
ret
jbe
cmc
sar
nop
xchg
outsb
dec
mov
cld
cmp
icebp
dec
scas
cmpsl
xchg
jg
or
pop
adc
mov
in
sub
add
pop
sbb
cli
out
dec
in
je
in
mov
add
in
loopne
mov
pop
lds
ljmp
mov
fwait
sahf
xlat
adc
mov
xchg
pop
pop
adc
push
pop
pop
sub
xor
pop
xor
out
cmp
das
stos
xchg
mov
pop
in
mov
push
xorb
mov
in
mov
dec
push
fcmovnbe
sbb
or
enter
xchg
repnz
jecxz
pop
push
ret
cmp
adc
addb
gs
inc
cltd
jg
jg
subl
inc
lret
push
cmc
jmp
out
jg
scas
xor
cld
pop
fistpll
pop
xor
inc
mov
inc
pause
cld
push
pop
jb
adc
repnz
push
outsl
xor
fdivl
mov
jmp
mov
ret
jmp
mov
popf
mov
mov
inc
pop
jns
ja
lret
inc
lahf
into
jns
inc
test
not
pop
sbb
xchg
les
push
shrl
jecxz
ss
addr16
adc
fcmovne
add
arpl
cmp
and
pop
cli
push
mov
test
enter
pop
and
push
xor
pop
fmul
inc
adc
cmp
xchg
pop
jmp
and
mov
cmp
in
test
fists
fwait
cltd
mov
adc
xor
pop
jnp
pop
push
cwtl
xor
or
ret
pop
movb
or
pop
push
imul
mov
pop
adc
sbb
sbb
test
jne
hlt
add
xor
and
push
xor
gs
lret
loop
mov
inc
jmp
lcall
popf
ficompl
inc
and
cmp
fimuls
popa
inc
les
insl
cmp
cmp
out
add
mov
jns
call
sti
add
mov
nop
shrb
pop
gs
mov
hlt
pop
sbb
cmp
mov
jae
mov
mov
mov
pop
mov
pop
std
mov
inc
out
sbb
fidivrl
inc
fsts
jo
mov
sub
ss
cmpsb
sti
stos
sbbb
adc
mov
lods
cld
pop
aad
int
pcmpeqd
repnz
test
adc
push
push
out
or
mov
pop
xchg
or
sub
xorl
push
out
mov
test
pop
inc
test
dec
push
pop
ja
in
cmp
aam
popa
gs
mov
insb
add
pop
xor
pop
pop
mov
mov
push
cmpsl
inc
das
mov
bound
pop
negl
and
add
mov
adc
jp
lcall
xchg
dec
lods
cmp
ret
pop
test
sub
test
dec
dec
xchg
out
dec
mov
push
cmp
jns
ss
mov
cmpsb
ret
mov
push
sbb
les
lock
dec
fnstsw
add
pop
push
daa
gs
dec
mov
sti
adc
cmp
pop
mov
aaa
xor
outsl
inc
and
loop
xchg
iret
push
inc
repnz
loope
pop
and
fsub
cld
enter
xchg
repz
sub
popf
push
pop
pop
into
adc
pushf
fidivl
iret
sub
jb
mov
mov
mov
addr16
cs
ret
addr16
push
fninit
mov
sbb
adc
and
mov
sarl
sub
add
ss
ljmp
add
dec
push
cmp
xchg
xchg
ss
jns
dec
sbb
jge
test
sbb
repnz
pop
and
inc
cwtl
jae
repnz
push
sub
xchg
jno
and
lret
jp
jl
test
dec
mov
push
and
notb
jne
stc
sbb
pop
xchg
and
lret
in
mov
and
mov
mov
pushf
mov
xor
imul
pop
jno
mov
sub
add
fmul
shlb
pop
imul
inc
push
out
pop
add
mov
or
pop
mov
popa
scas
inc
fwait
cli
lods
lds
cmp
enter
xchg
out
xor
xchg
adc
cld
xlat
movsl
ss
stc
stos
push
pop
mov
and
loopne
std
sub
mov
xor
ret
add
mov
pop
adc
iret
push
mov
std
and
mov
inc
nop
enter
in
repz
sub
and
pop
lock
and
or
cmp
pop
pop
cmp
sub
lcall
cmp
shr
loop
test
and
xchg
ret
cmp
push
add
and
pop
push
gs
mov
sbb
pop
or
iret
out
mov
ljmp
pop
stc
loop
mov
dec
movsl
mov
mov
or
sub
frstor
mov
cld
and
sub
cltd
fistl
mov
in
mov
ljmp
cs
cmp
cmpsb
cwtl
pop
xor
mov
mov
in
adc
mov
repz
in
icebp
imul
das
add
mov
loopne
scas
or
pop
add
mov
sub
cmp
pavgw
adcb
xchg
ljmp
cwtl
hlt
cs
pop
insb
push
xchg
or
and
sbbl
ret
push
adc
push
jo
mov
pop
das
cmp
add
shlb
in
push
pop
mov
mov
rolb
scas
negb
pop
jae
push
mov
fidivrs
pop
loopne
dec
icebp
les
mov
inc
rclb
mov
nop
xchg
into
jbe
xchg
cmpsl
xlat
test
mov
cli
pop
adc
xor
add
jb
and
out
push
cltd
mov
and
push
ljmp
push
sbb
mov
test
pop
int3
mov
pop
lcall
clc
xchg
pop
jmp
cmpl
inc
mov
dec
ljmp
sub
jbe
mov
js
adc
pop
lretw
jp
and
push
hlt
push
fcompl
test
pop
adc
adc
push
pop
add
negl
push
push
xor
mov
or
or
xchg
jo
mov
sub
mov
lock
mov
int3
dec
addr16
jmp
push
lds
int3
test
push
mov
pop
jl
ds
ret
jno
sbb
jmp
sti
out
lods
in
pop
cmp
outsl
xor
mov
and
xor
negb
sti
shlb
les
pop
cmc
ret
and
rorb
mov
push
aas
xchg
sarb
ds
frstor
sub
pop
inc
and
mov
xchg
sbb
fadd
popf
inc
lahf
xchg
xorl
pop
push
dec
iret
push
arpl
push
mov
addr16
lcall
adc
jle
xchg
arpl
jns
add
int3
push
roll
and
cmp
xor
mov
inc
loopne
dec
push
pop
in
jb
pop
jnp
xlat
sub
loop
pop
push
fwait
mov
loop
shll
pop
lock
mov
jge
mov
cmp
cld
stos
push
lcall
adc
push
sbb
pop
pop
push
push
push
push
dec
dec
dec
dec
xchg
inc
shll
jnp
out
jmp
gs
arpl
mov
and
jge
jg
cmp
std
popf
dec
pop
mov
jle
dec
adc
pop
fidivs
mov
mov
pop
imul
pop
or
or
aaa
sub
sub
aad
leave
lret
int
pop
icebp
repz
imul
jmp
out
pop
xchg
xchg
xchg
xchg
mov
mov
mov
stos
lods
scas
pop
push
push
push
pop
dec
dec
dec
push
pop
xorb
js
insb
outsb
pop
jo
adc
sbb
or
push
adc
xor
cmp
pop
sub
xor
rcl
fcomps
int3
into
rolb
repnz
negb
ljmp
pop
xchg
xchg
cwtl
mov
mov
mov
stos
lods
scas
pushl
mov
lock
xchg
jge
clc
fucomp
dec
int
je
test
pop
ljmp
popf
mov
dec
jae
lock
dec
push
adc
mov
pop
adc
sahf
adc
lock
out
mov
out
out
arpl
jl
jl
cmp
mov
lods
xor
sbb
mov
lret
repnz
mov
cmp
xorb
pop
test
add
pop
iret
add
jg
fcmovne
sti
pop
mov
add
pop
pop
movsb
insl
insb
adc
mov
xlat
push
fnstcw
test
test
ljmp
and
pushf
or
fwait
mov
sbb
shrb
jge
pop
pop
mov
sub
int
int3
nop
pop
mov
jne
int3
dec
push
add
test
ja
push
cli
ljmp
lret
adc
or
fisubrl
pop
cmpb
cmp
add
popa
push
insb
cmp
sbb
repz
mov
push
or
pop
xor
mov
iret
or
pop
jg
xchg
outsb
imul
dec
jl
dec
aam
fisttpl
nop
hlt
gs
icebp
or
test
pop
sub
mov
mov
out
xlat
cltd
sahf
dec
pop
push
xor
outsl
ret
push
dec
pop
repnz
or
inc
cmpsb
js
mov
ja
sti
mov
roll
mov
mov
lods
arpl
lock
lret
adc
and
pusha
mov
movsb
pop
pop
adc
mov
adc
cmp
push
adc
mov
pop
cwtl
jle
mov
cmp
test
add
or
iret
arpl
jb
out
adc
mov
pop
push
ss
lcall
out
add
lods
leave
fs
jo
mov
dec
sbb
pusha
stos
sub
test
mov
sahf
pop
dec
push
dec
fisttpl
cmpsb
push
hlt
push
mov
aas
in
clc
fldt
pop
into
adc
das
jno
pop
or
mov
dec
pop
dec
mov
add
pop
pop
pop
adc
or
inc
stc
int3
and
arpl
xor
mov
pop
es
mov
call
sbb
mov
pop
fiadds
test
mov
pop
ljmp
test
mov
dec
rcrb
add
mov
jge
dec
leave
daa
xchg
xor
fcompp
sub
cs
out
stc
push
addr16
pop
in
cli
mov
sarb
sbb
xchg
mov
or
push
add
aas
mov
inc
fstpl
add
stos
xchg
pop
imul
cmpsl
xor
pop
ss
icebp
lcall
cli
pop
add
into
mov
sbb
dec
jg
jle
in
pop
sbb
out
lock
mov
lds
out
cmp
push
dec
mov
inc
mov
stos
fwait
pop
es
out
add
fisubl
pop
sub
pusha
outsb
daa
dec
stos
aad
cld
pop
scas
sub
sbb
dec
xorl
mov
pushf
test
mov
inc
mov
int3
push
xchg
dec
sbb
mov
mov
pop
add
sub
fs
les
cmp
cmp
pop
aas
or
xor
inc
fcomi
pop
in
jp
mov
and
mov
add
das
call
sarb
mov
lods
mov
cmp
andl
ret
imul
shrb
loop
dec
faddp
sar
call
test
pop
mov
movsb
and
mov
fdivrl
dec
jg
mov
insb
js
out
leave
mov
outsl
popa
pop
test
inc
mov
pop
dec
mov
mov
jp
jle
or
mov
iret
lods
int3
mov
fnstcw
add
lods
push
pop
sahf
pop
cmp
inc
daa
cli
enter
fisttps
jp
movsb
scas
jns
mov
cltd
inc
stos
js
cmp
mov
lcall
push
sbb
bsf
inc
fidivs
arpl
pop
test
pop
mov
lcall
in
xor
mov
add
inc
mov
imul
bound
sub
pop
imul
xor
out
xor
fdiv
icebp
sub
lock
pop
ds
cmovge
sbb
or
pop
shr
pop
aam
ret
inc
lods
push
xchg
fmull
push
push
add
jno
inc
add
ss
xchg
mov
inc
pop
adc
dec
aam
push
shrb
mov
pop
jmp
mov
mov
rcrb
ficomps
outsl
inc
iret
decb
xlat
jnp
sub
incl
push
lcall
popf
pushf
mov
mov
mov
out
and
imul
in
sbb
movsl
rcl
std
xchg
push
xlat
dec
dec
arpl
test
mov
jns
fstps
xchg
iret
inc
cld
and
mov
xor
mov
jo
dec
ja
cld
pop
cmp
xor
add
cmc
outsb
int3
arpl
sbb
mov
mov
arpl
movsb
mov
test
movsb
cmpsb
pop
pop
mov
and
jno
out
xchg
jl
pop
pop
or
sub
mov
ret
pop
outsb
cltd
call
inc
inc
mov
loopne
fcoml
adc
pop
mov
xchg
or
sbb
jbe
dec
aad
out
add
ja
push
pushf
jnp
mov
dec
sub
fsubl
test
ja
ds
pop
mov
pop
int
aas
scas
jmp
stos
pop
inc
mov
out
dec
and
pushf
fsincos
sbb
das
test
out
xchg
imul
pop
pop
stos
jae
call
les
sub
mov
sbb
shl
push
je
hlt
cmp
out
pop
xchg
ss
pop
ja
addr16
pop
stc
jo
jecxz
jb
pop
pop
pushf
leave
adc
cld
fistl
inc
push
cwtl
movsl
pop
into
ljmp
mov
hlt
jno
pop
in
xchg
pop
in
cmpsl
pop
shr
jge
push
lods
ret
mov
dec
sub
test
cmpsb
rorb
out
add
and
pop
xchg
mov
sbb
addr16
clc
pop
jg
insb
dec
cmp
pop
test
and
in
loop
pop
int3
xchg
cmpsb
pop
rcrb
push
cmc
test
cs
out
movsl
xor
push
ret
or
inc
and
fimull
jl
mov
sub
adc
pop
jle
stos
dec
mov
jns
mov
inc
pop
adc
xchg
fimuls
mov
jg
subl
sub
sub
fiaddl
fs
sub
push
imul
jl
es
inc
bound
jmp
loop
push
and
maxps
movsb
push
cld
nop
pop
fistl
fsubr
pop
dec
jge
hlt
mov
mov
or
push
jno
adc
pop
cmp
dec
inc
pushf
xlat
push
int
call
addr16
fcoml
or
mov
imul
cli
addr16
and
pop
and
mov
gs
cmp
mov
sub
int
pop
xor
mov
pusha
cmpsb
and
or
jno
mov
lock
movsb
adc
cmp
out
add
add
test
test
repz
dec
shlb
fidivrs
sbb
cmpsb
and
repz
cmp
mov
mov
push
or
jne
lods
mov
mov
pop
fcmovu
mov
xlat
xor
pop
xchg
mov
out
inc
outsl
mov
loop
dec
popf
pop
inc
adc
pop
dec
roll
mov
cwtl
push
pop
das
shlb
jns
sub
pushf
lods
fmul
sbb
dec
fcmovbe
mov
xchg
dec
dec
inc
sub
mov
mov
pop
fimull
push
push
mov
cmp
in
clc
test
dec
mov
jl
mov
fstps
aas
mov
pop
in
popf
adcb
mov
pop
insl
sbb
test
inc
add
xor
fcoml
pop
jb
addr16
and
fistl
test
mov
mov
inc
movb
mov
pop
pop
jp
mov
sti
repnz
ffreep
sahf
sti
adc
popfw
lcall
add
mov
movsb
mov
push
sbb
pop
mov
add
insb
in
call
aad
je
jp
add
cmc
mov
mov
pop
imul
pop
out
out
push
fistps
scas
xchg
push
xchg
ja
push
das
pop
cmp
fcom
sbb
pushf
push
mov
jbe
scas
cld
jg
outsb
inc
and
sbb
call
xchg
pop
xchg
loopne
fcoml
ja
xlat
sbb
mov
pop
int
adc
arpl
rorb
pop
or
pop
dec
data16
xchg
pop
lds
inc
cmp
lret
sub
sub
std
inc
pop
inc
ror
inc
xor
shrl
cmc
ja
dec
sub
cmp
roll
outsl
adc
mov
jnp
sarl
pop
in
lret
jl
mov
or
xchg
test
je
adc
fs
out
adc
jae
lea
jb
push
adcl
xor
test
je
add
adc
pop
adc
sbb
aam
fildll
pop
je
xor
mov
jle
mov
add
int3
lods
in
push
and
jge
movsl
jg
push
jl
inc
insb
adc
and
data16
decb
pop
mov
push
ja
jo
push
adc
inc
int3
dec
in
bound
gs
int3
lods
jl
test
jle
or
shlb
stos
sbb
xchg
jle
dec
sub
shrb
cmp
fbstp
push
push
jle
sbb
pop
sbb
in
mov
jle
adc
inc
sbb
mov
lret
sbb
fdivl
rcrl
cmp
xchg
push
add
dec
mov
mov
push
inc
adc
mov
inc
mov
push
xchg
adc
lods
jl
int3
mov
push
jle
or
inc
pop
mov
ja
sbb
outsb
inc
dec
imul
xchg
mov
cs
or
push
jle
sbb
pop
or
jnp
ja
sbb
xchg
fiadds
push
dec
inc
inc
int3
into
in
cmpl
push
adc
adc
dec
add
adc
jl
fsubrp
lea
gs
inc
add
inc
cmp
sbb
sbb
push
shll
mov
rorl
stos
dec
xchg
add
out
in
cmp
gs
inc
xchg
adc
and
dec
mov
push
int3
xchg
jl
test
imul
inc
pop
xchg
sarl
xchg
ja
inc
arpl
push
add
mov
xor
gs
inc
popf
adc
xchg
fbld
fwait
jl
test
and
outsb
inc
pop
cltd
sarl
cmp
dec
xchg
jbe
out
inc
and
add
jl
test
jecxz
inc
inc
pop
jecxz
fldt
jae
or
dec
repz
int3
dec
in
loope
cmp
push
inc
xor
ret
and
sbb
jl
test
jle
sbb
pop
and
jl
movsl
ja
jmp
gs
inc
es
cld
insb
gs
inc
jmp
jnp
inc
sub
jl
sbb
mov
fidivrl
dec
adc
lret
xchg
cmc
iret
dec
adc
jmp
sarl
rep
dec
xchg
sbb
and
mov
jl
test
jmp
or
add
ja
std
cmp
add
outsb
dec
shl
add
dec
or
sarl
inc
int3
in
in
stc
jg
mov
xor
sbb
mov
sbb
inc
pop
lret
mov
pop
vcvttsd2si
int3
jg
push
jbe
lret
int3
ret
jl
test
push
jle
jnp
push
int
jle
jnp
fs
push
jle
or
in
inc
adc
andl
aad
iret
rcrl
sbb
int
insb
data16
lds
adc
and
sbb
adc
and
fdivl
je
lret
and
push
jle
sbb
push
jge
sbb
pop
aad
pushf
roll
jae
jo
sub
or
rcl
dec
push
adc
adc
ror
jmp
fists
test
stos
out
lea
repnz
inc
pop
fstpl
inc
pop
hlt
lcall
fstpt
push
jbe
lret
int3
divb
and
or
rcr
or
mov
clc
dec
jmp
int3
jne
daa
jg
gs
inc
ljmp
lret
xchg
and
shll
bound
inc
add
dec
test
lret
int3
pop
in
out
jg
gs
inc
and
xchg
and
dec
mov
push
int3
das
jl
test
jle
sbb
sub
inc
in
in
insb
gs
sbb
mov
jle
out
int3
test
aam
jbe
pop
call
ja
aaa
and
xchg
outsb
add
mov
gs
inc
pushf
adc
lret
add
fistps
int3
sahf
sub
decb
adc
push
ja
mov
xchg
jecxz
aas
dec
dec
or
mov
push
jle
or
jecxz
cmp
push
in
xchg
jg
data16
jl
inc
cmp
inc
and
add
xchg
cmp
inc
int3
ss
cwtl
jg
gs
inc
pop
adc
mov
in
mov
dec
add
push
jle
sbb
pop
add
addl
rorl
add
dec
xchg
inc
int3
in
nop
jg
gs
inc
jecxz
sbb
insb
mov
fmulp
or
push
jle
jnp
mov
push
fcmovbe
ret
dec
xchg
incb
xchg
xor
cs
or
push
jbe
lret
int3
mov
ss
jle
sbb
pop
mov
ja,pt
adc
int3
mov
push
or
rcll
lret
data16
adc
jle
or
jecxz
adc
rcll
xchg
lret
xchg
ror
mov
push
int3
pop
jl
test
jnp
xor
lret
jle
or
push
jne
lret
int3
mov
dec
andl
lret
rcrl
inc
push
adc
pop
jnp
outsb
push
jle
sbb
pop
mov
jbe
pop
jmp
scas
cs
stos
jg
gs
inc
adc
lret
mov
jl
xchg
or
dec
in
popa
jg
gs
inc
mov
in
and
in
fisttps
mov
push
jle
sbb
pop
movsb
cltd
int3
das
or
movsl
lret
jle
add
lret
jle
sbb
pop
imul
sub
mov
aad
fsubs
insl
sub
test
mov
out
gs
mov
jl
inc
jae
stos
and
sbb
int3
in
jno
mov
pop
adc
xchg
xchg
jg
cld
in
mov
or
test
dec
out
add
inc
int3
in
jnp
jl
jl
inc
push
adc
repz
lret
pop
jns
push
adc
xor
stos
gs
inc
inc
adc
dec
lret
mov
inc
je
movsb
test
lods
leave
inc
xchg
lds
and
or
mov
int
lret
inc
adc
aad
jle
or
adc
jecxz
xchg
mov
int
pop
inc
roll
xchg
push
int
dec
pop
ret
lret
rol
scas
jg
gs
inc
cli
adc
dec
sbb
std
in
inc
jg
mov
mov
in
jle
or
inc
pop
inc
sbb
inc
pop
dec
rol
inc
in
ja
jns
or
add
roll
in
jnp
int3
push
jl
inc
push
adc
and
imul
push
pop
cmp
mov
adc
push
add
mov
add
cs
and
push
int
cmpsl
movsb
jecxz
pop
mov
inc
push
out
jmp
sbb
movsl
pop
jae
rep
mov
lret
pop
xchg
sarb
inc
out
jbe
inc
mov
push
jo
cmp
fistpl
inc
rcrl
xlat
jnp
aam
sub
pop
push
pop
roll
jge
into
dec
fsubl
dec
pop
cmp
pop
repz
sub
mov
inc
movsb
addr16
mov
jnp
pop
xchg
sbb
mov
mov
adc
jno
inc
loopne
adc
icebp
inc
outsb
jae
or
imul
add
jmp
dec
ror
xor
jnp
leave
sub
insl
or
popa
pop
inc
inc
in
dec
shll
sbb
sbb
ret
inc
pop
mov
andl
inc
jle
or
sbb
insl
fistpl
fwait
jnp
leave
xor
cmp
popf
ss
clc
pop
sub
mov
popf
adc
imull
mov
cld
jge
aas
lea
or
jg
pop
imul
stos
sbb
data16
cmp
mov
cmp
jnp
fcmovnu
mov
fwait
jg
pop
cld
ficoml
lret
fisttpl
jge
pop
mov
sbb
jl
lret
imul
pop
or
pushf
and
insb
sti
dec
dec
jge
xor
mov
in
mov
sub
pop
sub
pop
or
fwait
adc
cld
cmp
jle
jnp
ss
cmp
mov
dec
in
xor
jl
lret
pop
jge
sub
pop
mov
inc
insb
dec
sti
jg
pop
fdivrl
push
stos
lret
cmp
jge
pop
jmp
jnp
fstpt
pop
dec
jecxz
mov
fwait
lret
imul
dec
pop
fistpl
lods
add
cmp
dec
sbb
add
adc
jecxz
sbb
sarl
pop
insb
jg
adc
fmull
stos
jle
jnp
or
sbb
jmp
dec
int3
sbb
jge
pop
mov
fwait
lret
imul
dec
pop
fistpl
lods
adc
cmp
dec
sbb
and
adc
jecxz
sbb
sarl
pop
insb
jg
adc
fcompl
scas
mov
sub
aad
mov
scas
mov
jge
sbb
xor
frstor
inc
lods
repz
shll
add
mov
and
push
aas
sahf
ret
dec
je
in
adc
dec
xor
movsb
adc
dec
hlt
dec
arpl
int3
xchg
pop
dec
add
mov
push
xchg
push
jle
les
cmp
jecxz
xchg
adc
test
xor
dec
mov
or
repz
add
pop
mov
and
push
adc
lret
je
in
adc
pop
adc
movsb
dec
roll
inc
jg
pop
arpl
push
xchg
cltd
mov
or
jge
cmp
ficoms
cmp
cmp
int3
cmp
ds
repz
dec
rcll
and
push
xor
adc
dec
adc
jge
ss
inc
adc
shll
dec
xchg
jle
pop
mov
and
rcll
jae
pop
jecxz
adc
test
xor
dec
mov
xor
repz
add
pop
mov
and
push
jmp
ret
pop
je
in
orl
movsb
pop
shrl
push
inc
lret
hlt
dec
arpl
jge
pop
add
mov
fcmovnu
push
dec
les
sbb
dec
xor
pop
mov
rclb
iret
les
mov
stos
cmc
inc
sub
mov
push
lods
leave
sti
mov
pop
test
pop
jmp
aad
insb
jg
fistps
sbb
pop
xor
test
aas
movsl
mov
push
pushf
dec
in
les
int3
fcmovnu
and
sub
xor
cmp
sbb
sbb
or
stos
inc
movsb
inc
mov
jmp
lret
jl
int3
or
lods
test
rorl
sub
or
insb
sbb
cmp
sbb
jne
jge
rolb
sti
mov
jnp
es
cmc
insb
ret
aas
je
jnp
sub
mov
cmp
xlat
popf
cld
inc
lds
repz
addr16
testl
push
loop
movsl
jg
gs
notl
push
and
mov
lds
repnz
xchg
insb
or
push
xor
lahf
call
movsl
in
xor
jnp
gs
std
negl
test
in
mov
decl
mov
aaa
stos
call
push
jns
sbb
pushf
loope
adc
push
or
lods
jnp
fimull
sub
xor
add
dec
sub
lods
mov
pop
push
push
fisttpll
push
mov
jl
mov
addr16
out
call
dec
cwtl
jbe
or
std
decl
jl
cmp
pop
aas
mov
call
cld
dec
ret
or
addb
adc
or
int3
jecxz
inc
sti
std
dec
jl
insb
push
push
dec
xlat
sti
fwait
sarl
pop
repz
sbb
jecxz
sub
or
dec
fistpl
clc
inc
xor
dec
sub
je
pusha
mov
adc
jmp
cmp
ja
repz
or
jbe
xor
dec
mov
loopne
cmp
xor
fucom
arpl
imul
or
enter
mov
popf
sbb
dec
dec
hlt
dec
pop
mov
xor
dec
fwait
inc
push
aam
dec
lret
inc
pusha
je
mull
int
int3
shl
pop
jl
dec
dec
lcall
push
cmc
fstpt
sbb
jnp
sbbb
sbb
mov
lods
inc
mov
cwtl
sbb
ljmp
jae
add
mov
ja
outsb
sbb
or
dec
sbb
ficoml
aad
jg
inc
xor
dec
stos
leave
std
cld
mov
cwtl
arpl
sbb
imul
inc
mov
sub
jbe
imul
xor
int
cld
les
fbld
inc
mov
cmp
pop
jnp
filds
call
jg
jge
loopne
loop
popa
fidivrs
cmp
cmp
sahf
push
es
inc
inc
pop
pop
xor
insb
test
push
test
loopne
xchg
lret
or
or
jae
sub
leave
sbb
sub
arpl
mov
cmp
and
aad
stc
push
ljmp
fisttpll
lds
insl
mov
jnp
and
ljmp
push
dec
dec
fs
stos
dec
and
sti
xchg
fstpl
dec
pop
clc
xlat
pop
mov
adc
sub
dec
pop
pop
lods
pop
push
int3
mov
outsb
subl
jne
lds
pushf
int
mov
std
js
mov
js
mov
stc
fdivrp
sbb
sub
mov
data16
repz
pop
sub
fnstsw
and
adc
mov
clc
sarb
aaa
push
push
lea
fcompl
aad
or
or
les
push
mov
ficoms
jle
dec
sbbb
add
imul
popa
mov
xchg
push
jns
fadd
mov
push
sarl
jnp
out
mov
xor
push
fistps
hlt
jno
pop
lret
int3
push
jne
dec
push
and
sub
xor
cmp
sbb
xlat
sub
cltd
out
xchg
dec
rcr
loope
xchg
in
std
jl
sub
imul
sub
cmp
dec
scas
pop
and
sbb
test
inc
mov
cmp
sub
fistpl
push
jg
jns
imul
aad
lret
jae
push
insl
adc
jl
sub
fadds
xchg
imulb
pusha
dec
cmp
jbe
push
dec
sti
sbb
jnp
dec
lret
jl
jae
inc
mov
repnz
push
aad
jge
or
xor
orb
mov
adc
mov
mov
js
jae
sbb
rcll
mov
imul
lcall
or
cmp
mov
cmp
and
scas
jl
jne
cwtl
push
dec
jne
jge
sti
in
lcall
bound
int
arpl
clc
sbb
jbe
jne
jnp
mov
cli
nop
int3
repz
adc
imul
jbe
add
adc
pop
add
lret
and
mov
pop
leave
push
pop
or
fst
fisubrs
pusha
jne
int3
push
inc
into
les
sub
push
and
arpl
xor
repz
orb
jmp
pop
rcll
jl
fisttps
jge
jle
jl
sbb
push
dec
fldl
dec
dec
lods
and
ficoml
jl
mov
out
std
inc
dec
mov
leave
shll
add
dec
repnz
outsb
add
ficompl
pop
inc
pop
jns
adc
es
adc
insb
mov
aam
ret
mov
and
fcoml
cmc
mov
push
jns
cltd
add
push
xlat
inc
nop
push
fldcw
pop
sub
xor
dec
sub
push
rorb
xchg
pop
int
rol
std
mov
sub
pop
push
imul
das
aaa
lock
fldpi
out
or
mov
jno
cli
imul
fstpt
into
mov
pop
addb
dec
ret
or
jns
aad
xchg
xchg
out
adc
aad
fildl
mov
cmp
out
mov
stos
pushf
jmp
insl
rcl
subb
ret
jbe
dec
dec
std
and
ss
lret
add
add
mov
popa
xchg
cld
mov
jnp
aas
fwait
mov
repnz
sub
shrl
or
and
call
addr16
filds
inc
push
cmc
test
out
pop
dec
pop
mov
shlb
mov
sbb
lcall
dec
int3
push
adcb
fsubrl
pop
and
imul
lds
jno
or
outsl
or
rcrb
test
jl
outsl
lock
insb
in
adc
pop
mov
int
sub
je
push
out
sub
or
loope
push
in
incl
dec
popf
xlat
outsl
add
push
imul
in
dec
pop
push
test
shrl
int3
ss
xor
jns
pop
test
lea
jl
inc
addb
aas
es
lods
sbb
dec
js
mov
sbb
movsb
adc
test
lea
jge
push
fcomip
repz
fimuls
push
rcll
and
call
pop
rcrl
notl
test
xlat
or
int3
xchg
sahf
push
mov
out
inc
repz
cmp
jb
mov
rol
sbb
push
faddl
adc
aas
dec
jbe
orb
push
mov
sub
mov
push
call
je
pop
xor
xor
inc
sahf
pop
or
test
loopne
pop
rcr
repz
cmp
movsl
mov
sbb
test
xor
in
imul
pushf
push
cld
dec
fcompl
pop
orb
andb
xor
cltd
dec
push
mov
or
call
add
fistpll
xacquire
loopne
add
leave
lds
push
pop
mov
fldl
filds
mull
push
jns
add
add
push
jle
dec
and
and
push
outsb
cs
mov
push
lods
fidivs
popa
addr16
mov
rcll
xor
jl
std
jae
iret
jns
mov
pop
scas
dec
call
push
jb
std
sub
rorb
mov
jmp
scas
pusha
cld
push
in
dec
bound
shrb
jg
mov
xlat
sti
and
stc
cld
inc
cmpb
jge
xor
rorb
push
fcoml
sbb
test
std
push
push
xlat
pop
jno
inc
dec
cld
adc
dec
cmp
jae
xor
data16
iret
sbb
and
mov
nopl
std
adc
and
nop
cmp
sti
fwait
or
bswap
sbb
jle
fistl
and
in
jne
push
sbb
insl
push
pop
test
clc
pop
outsb
xor
sbbb
shlb
outsb
xlat
repz
mov
mov
inc
jmp
fstpt
xchg
push
pushf
pop
in
in
dec
hlt
pusha
mov
add
ljmp
inc
sub
shlb
fsts
push
push
hlt
push
in
jl
add
pop
es
pop
dec
xchg
fcmove
xchg
push
jle
push
imul
sub
adcl
push
jl
je
lret
and
pop
ja
cmc
stos
xor
push
push
jp
aas
aad
jle
or
call
lods
xlat
sub
lret
pop
pop
std
xlat
decl
add
push
in
fsubrp
clc
adc
mov
dec
bound
popa
fstp
in
cs
inc
jae
pop
fs
or
adc
scas
jle
pop
in
push
xor
dec
dec
addr16
sub
rcl
sbb
cmp
pushf
pusha
push
add
inc
mov
pop
orb
pop
or
jle
addr16
or
je
test
or
adc
xlat
in
push
jae
mov
inc
movsb
pop
jns
ds
mov
or
add
xor
mov
mov
inc
in
sub
pop
mov
mov
fsubr
cmpsb
ret
sahf
aaa
xchg
jg
nop
push
adc
fcompl
shlb
outsl
jno
cmc
jge
movl
mov
push
push
jne
iret
repnz
out
insl
jnp
mov
sti
push
add
pop
pop
push
jo
sub
adc
pusha
into
stos
mov
ja
jge
iret
jae
mov
adc
inc
or
arpl
jp
or
push
or
inc
cs
addr16
xor
aas
push
lret
je
stos
outsl
lret
out
cmp
jb
sbb
popa
je
lea
inc
push
or
sub
xchg
adc
fwait
int
sti
xor
jmp
insb
sti
mov
aam
cld
std
add
mov
jae
xchg
mov
gs
cmp
fadds
push
dec
test
loop
icebp
push
leave
scas
subl
imul
in
jns
pushf
mov
addl
sbb
pop
loope
and
push
popf
push
fwait
js
push
xor
int3
in
aam
or
sbb
xor
testb
push
mov
icebp
shrl
mov
icebp
sub
dec
aam
sub
xlat
in
mov
cltd
in
je
xchg
mov
cmp
hlt
mov
adc
and
stos
pushf
cmp
decl
inc
pop
adc
mov
imul
mov
aad
and
movsl
push
and
mov
inc
inc
ret
repz
and
jns
jl
add
jbe
add
fisttps
rorl
mov
lret
stos
fisttpll
popl
insb
mov
std
mov
jnp
jle
dec
fcoml
vmwrite
jbe
and
cli
mov
inc
inc
fs
scas
mov
jmp
repz
cmpl
ljmp
or
fs
mov
mov
std
mov
jb
sub
outsb
pop
mov
fucomi
mov
mov
push
or
mov
pop
call
inc
jl
xor
add
aas
loop
adc
shll
iret
push
sub
rcr
loopne
aas
addb
addb
add
js
out
cmp
sti
add
mov
pop
fsubrl
aam
adc
push
daa
int
ffree
or
add
jmp
pop
cmp
mov
shr
mov
xor
inc
shlb
movsl
fsubrl
cmc
push
cmp
mov
jl
out
repz
icebp
mov
dec
sbb
rolb
je
loope
mov
adc
ja
sbb
iret
inc
sub
in
test
jae
fistpll
fwait
cmp
test
mov
cmp
mov
sti
pop
in
scas
subb
shll
add
push
push
movsl
mov
out
pop
loopne
jne
xor
push
sub
mov
daa
mov
mov
shr
pop
in
mov
movsb
repz
add
dec
inc
adc
sub
call
adc
in
adc
imul
dec
rorl
push
dec
test
rcrl
mov
mov
jbe
push
je
sti
jecxz
addb
cld
fcmovnb
int3
pop
aam
fcoml
dec
sub
xor
cmp
add
cmp
pop
push
subl
lds
jmp
push
jno
pushf
mov
add
xchg
jae
inc
dec
jle
mov
insb
xor
fs
dec
mov
std
mov
cmp
out
addl
jl
rorb
test
fwait
dec
mov
cmc
jae
push
add
frstpm(287
jl
out
cmp
fstl
mov
dec
imul
in
jl
fcoml
or
jns
jne
sub
mov
adc
adc
aas
and
push
cmp
push
hlt
icebp
or
jns
mov
mov
int3
adc
or
add
dec
es
iret
pop
imul
dec
stc
and
cmp
rclb
mov
fwait
ret
fsubrl
sbb
stc
fsubp
stos
loop
in
adc
dec
add
xchg
mov
outsl
jns
add
mov
out
jmp
add
dec
jno
in
xor
stos
pop
dec
push
icebp
pop
sti
test
jl
ret
mov
or
incl
sbb
xchg
sbb
lret
aas
cmc
outsl
aad
addr16
aas
jge
std
jecxz
add
rorl
icebp
and
push
sbb
adcb
in
push
mov
xor
mov
lret
in
pusha
sbb
adc
sti
insl
incl
fs
clc
aad
jne
cmp
inc
stos
out
mov
pushf
test
loope
inc
idivb
sbb
pop
pop
inc
jbe
push
dec
mov
in
inc
dec
rol
stos
push
push
jno
les
xchg
adc
cli
xor
lahf
jno
dec
mov
ja
les
push
xchg
lds
mov
jb
in
xlat
or
stos
and
and
shl
js
xchg
ret
dec
or
lea
xlat
xor
out
call
je
sub
les
mov
inc
fcom
jl
dec
mov
loopne
cs
pop
cli
push
xchg
outsb
lret
pop
aad
adc
push
nop
mov
and
fisttpll
xor
aam
add
pop
lods
in
aas
lret
imul
shrl
xchg
imul
dec
cld
idivb
adc
cld
repz
cld
or
inc
std
push
inc
int3
push
out
pop
cmp
mov
lret
std
pop
outsl
adc
repz
lods
ss
mov
int
dec
movsl
dec
out
push
nop
fsub
mov
inc
push
gs
xor
xchg
xchg
mov
nop
gs
lods
inc
jnp
mov
jnp
push
pop
jnp
push
pop
pop
rcll
mov
rcll
mov
test
or
orl
cld
mov
and
dec
sub
mov
divl
add
sbb
inc
lods
cmp
jge
push
cmp
cmp
test
xor
fists
push
sbb
adc
mov
adc
xchg
jecxz
sbb
fs
push
mov
jnp
shr
lahf
lret
xor
repz
repz
out
mov
icebp
dec
xchg
jnp
repz
adc
shr
mov
adc
xlat
in
sbbb
jmp
in
sbb
sbb
sbb
jge
adc
aam
add
and
shl
pop
shll
shll
sbb
fldt
and
leave
nop
mov
sub
dec
shr
lret
inc
int3
sbb
jnp
fisubl
sbb
shl
xchg
ja
inc
mov
sub
lea
arpl
xlat
arpl
inc
std
arpl
arpl
xor
imul
lods
lret
repz
cmp
jnp
test
push
mov
xorb
jns
jle
push
jnp
jbe
add
fistpll
int3
xor
push
cmpsb
jge
xor
hlt
mov
adc
or
or
sti
push
push
dec
scas
push
clc
sbb
push
push
sbb
sbb
pop
jmp
imul
push
push
test
inc
int3
imul
jne
and
mov
ljmp
cwtl
ja
sbb
adc
or
clc
xor
jmp
movsb
and
ja
jnp
lret
std
pop
outsl
and
pop
dec
pop
idivb
test
mov
dec
pop
out
xchg
jl
or
inc
dec
pop
push
pop
jl
test
mov
mov
inc
shr
arpl
in
jns
push
addr16
add
aam
shrd
push
cmp
movsb
loopne
shlb
sbb
dec
mov
adc
lods
shll
inc
fs
lret
push
lock
mov
shlb
dec
mov
bound
in
jnp
mov
pop
xor
pop
adc
fnstenv
mov
cmp
aam
das
rorb
jge,pt
cmp
stos
repz
stos
or
inc
std
stos
outsl
or
push
mov
out
rcrl
aam
stos
inc
std
in
int3
in
pop
fsubrl
cmp
cld
sarl
sahf
pop
in
fistps
mov
pop
mov
inc
scas
dec
stos
push
es
mov
jge
adc
mov
xlat
mov
mov
std
cld
inc
int3
cld
out
pop
je
cmc
adc
movsb
aam
movsb
and
dec
movsb
imul
fildl
lcall
movsb
popa
fld
loopne
cld
sti
mov
cmp
aam
das
rcr
mov
sbb
push
popa
push
jle
adc
mov
mov
dec
and
scas
inc
aam
jl
adc
fildll
sub
xlat
mov
xor
dec
push
jmp
jp
mov
jl
gs
lret
xchg
and
sbb
cmp
aam
das
rolb
inc
xchg
dec
inc
call
xlat
xchg
or
inc
std
xchg
outsl
and
dec
or
fisttps
rolb
pusha
inc
rcl
lret
and
xlat
xchg
or
dec
xchg
sbb
jno
cwtl
scas
imul
push
das
jle
sbb
popa
fsts
jp
sti
mov
push
cmpsb
gs
xchg
out
jae
jnp
movsb
or
lret
push
enter
mov
xor
adcl
xor
orl
std
je
int3
je
sbb
dec
push
sti
mov
jne
jl
xorl
stos
adc
pop
mov
adc
lock
cs
mov
arpl
mov
inc
subl
fidivrl
mov
les
scas
ds
xchg
jg
jnp
push
dec
push
jns
dec
push
jns
dec
push
jns
dec
push
jns
dec
push
jns
pop
gs
and
xchg
dec
lea
or
inc
dec
dec
push
pop
jl
test
adc
daa
insb
xchg
mov
dec
insb
gs
stos
lret
ja
pop
ds
push
outsl
stos
mov
mov
ja
inc
mov
add
mov
ficompl
dec
mov
int3
push
pop
jl
test
pop
mov
cmp
sub
outsb
lret
or
inc
daa
push
push
test
xchg
inc
xchg
imul
sar
mov
mov
sub
jnp
inc
andl
push
ljmp
outsl
ror
in
jecxz
scas
dec
mov
push
arpl
loopne
xlat
orl
std
subl
xor
jmp
fucomip
mov
sub
fcomip
and
xor
inc
int3
sti
out
stc
movsl
or
daa
dec
push
cmp
dec
repz
jmp
aam
push
or
push
inc
lods
aam
add
push
shll
sub
jne
popf
fucomip
push
sbb
jmp
sbb
jmp
sbb
subb
jno
fistl
fisttpl
and
and
imul
sahf
sub
dec
push
into
ja
and
ds
popa
adc
push
fiaddl
ja
inc
mov
movsb
pop
add
lret
outsl
and
xor
repz
adc
aam
mov
jmp
sahf
dec
add
add
inc
int3
or
sbb
mov
mov
push
dec
fadds
sub
or
add
gs
xchg
add
push
pop
jnp
sub
das
scas
arpl
adc
push
and
jl
and
mov
jne
shrl
lret
outsl
adc
repz
jae
dec
mov
dec
test
arpl
daa
rcr
jns
pusha
pop
push
jae
imul
test
inc
idivb
mov
xchg
push
inc
push
inc
xor
popa
ret
rcll
ret
rcll
ret
rcll
ret
rcll
ret
rcll
dec
shll
xor
jge
insl
push
dec
dec
push
inc
outsl
or
sahf
inc
aam
xchg
fdivr
pusha
sub
lret
in
add
and
push
int3
dec
mov
ret
mov
push
cmpsb
jge
xor
aam
dec
lods
mov
and
sub
dec
dec
std
lret
outsl
and
xor
lret
idivb
adc
mov
sahf
mov
lods
cmc
lret
jno
insl
lret
mov
xchg
lret
push
test
sub
rorl
sbb
xchg
inc
jg
gs
outsb
lret
lods
std
mov
gs
xor
xchg
xchg
xchg
add
mov
sbb
and
push
movsb
and
push
movsb
and
push
movsb
and
push
movsb
and
push
movsb
pushf
dec
mov
mov
sub
jl
or
inc
dec
and
jl
xchg
pop
jbe
xor
and
mov
dec
fmuls
gs
push
pushf
and
push
xor
and
mov
mov
sbb
dec
sub
jge
adc
sub
xlat
sub
dec
xchg
les
jnp
xchg
jns
loop
jecxz
mov
xlat
int3
dec
sub
jnp
xchg
imul
xchg
sub
adc
jne
dec
aam
int3
inc
sbb
add
add
push
imul
push
pop
jnp
push
pop
jnp
push
pop
jnp
push
pop
jnp
push
pop
sbb
aam
cltd
shll
push
pusha
cmp
xor
xor
sbb
cmp
int3
out
imul
add
dec
cld
adcb
inc
add
mov
out
jnp
xchg
dec
or
icebp
ljmp
jg
inc
outsl
and
roll
dec
inc
idivb
adc
mov
push
mov
cli
push
movsl
sbb
sbb
rolb
mov
jecxz
sti
loope
xchg
cmc
ja
daa
lret
inc
mov
fs
add
xchg
inc
xchg
movsb
xchg
dec
mov
imul
xchg
and
sub
push
and
push
sarl
lock
sar
sbb
inc
es
icebp
adc
ror
scas
sbb
filds
cmp
fcomip
dec
aam
fsubl
mov
jnp
jb
add
icebp
sub
pop
and
ret
mov
mov
cmp
jmp
pop
imul
jnp
adc
push
hlt
inc
jge
mov
pop
cmp
stc
mov
jb
dec
xchg
dec
cmp
testl
scas
sbb
ret
call
cld
int3
insl
hlt
jle
pop
in
pushf
xchg
ds
popl
and
in
xchg
adc
imul
jle
cld
scas
in
push
pop
testl
dec
pushf
in
jb
in
pop
aas
dec
testb
adc
fildl
xchg
push
aas
inc
cmp
mov
stc
mov
ljmp
dec
in
std
push
pop
js
dec
out
dec
rclb
ret
xchg
rcrl
clc
rcrl
sbb
orb
mov
push
incl
sub
aam
stos
mov
mov
imul
ret
sbb
test
pop
pop
push
imul
in
sub
jae
inc
inc
sbb
inc
pop
push
adc
decl
or
int3
int
lahf
mov
hlt
dec
in
jae
and
pusha
mov
pusha
shl
or
lods
in
pop
and
mov
cltd
mov
sbb
jmp
sbb
rorl
mul
pop
xchg
lahf
sub
xchg
cld
subb
loopne,pn
mov
pop
in
in
or
icebp
push
dec
pop
jg
mov
dec
push
in
and
sub
adc
inc
jo
lods
lock
xor
xor
aam
notb
cmp
inc
jb
in
mov
ds
scas
addr16
test
and
xor
out
aaa
mov
pop
mov
and
lret
inc
arpl
mov
repz
and
aaa
mov
test
jmp
ljmp
enter
fsubr
adc
mov
sub
pop
jbe
sbb
dec
cmp
xchg
loope
cmp
iret
push
fs
scas
shrl
shll
shl
jl
test
pop
sti
mov
mov
shl
shll
insl
iret
dec
cmc
aam
jnp
mov
dec
daa
jle
mov
mov
sarl
movsb
mov
xchg
ret
pop
jns
ja
icebp
pop
imul
popf
test
push
dec
scas
push
fcomps
mov
pop
jl
test
push
mov
pop
arpl
rcr
movups
leave
push
imul
test
push
mov
cmp
jecxz
pop
dec
loope
jns
add
fistpl
and
cmpsl
test
std
push
inc
test
xor
dec
dec
cmp
cli
icebp
shlb
shll
dec
xor
jge
adc
aam
rcl
dec
xor
pop
jge
dec
dec
add
xor
or
or
fcmovnu
mov
stos
sahf
aaa
rcrb
dec
adc
ficoms
jg
and
scas
dec
shll
or
call
sbb
mov
mov
jne
sti
cmp
lods
cmp
lods
cmp
lods
cmp
lods
cmp
lods
arpl
imul
insl
push
fistpl
imul
jae
inc
push
jae
pop
jnp
daa
pop
testl
imul
imul
dec
cmp
jl
ficompl
cmp
shlb
inc
inc
scas
dec
mov
faddl
sbb
fisubs
xchg
cmpsb
jge
adc
and
cmp
jnp
mov
sahf
push
and
mov
sbb
mov
rcll
fisubs
sub
shrl
sub
fs
leave
mov
scas
cmp
adc
dec
nop
gs
sti
push
ljmp
or
mov
mov
gs
pusha
dec
jae
repz
test
repz
lods
repz
dec
lods
repz
dec
scas
repz
sbb
mov
jecxz
sub
mov
jecxz
dec
mov
dec
dec
repz
pop
dec
test
mov
daa
mov
xchg
mov
andl
mov
lret
repz
test
xchg
mov
in
dec
lods
std
jl
or
jge
adc
jl
xchg
outsl
and
xor
fiadds
jmp
lret
inc
jge
adc
jge
xor
hlt
stos
sbb
mov
in
aam
add
sbb
stos
inc
clc
call
enter
or
inc
inc
std
inc
outsl
and
inc
dec
inc
idivb
test
push
mov
into
shll
int3
std
int3
outsl
adc
aam
mov
mov
pop
std
mov
jge
sbb
lahf
les
test
mov
push
inc
push
or
clc
xor
mov
mov
pushf
cmp
jge
xor
dec
and
and
test
and
mov
inc
std
mov
int3
mov
sbb
mov
jge
jl
or
dec
dec
and
jnp
test
inc
pop
mull
mull
push
test
mov
xor
dec
and
sub
xor
mov
inc
xor
add
push
shll
sub
jmp
dec
jmp
jge
adc
jmp
xlat
jmp
mov
push
fisttpl
mov
and
dec
dec
sbb
xlat
sbb
jmp
jnp
test
outsl
fisttpll
mov
jp
lret
stos
push
ret
outsl
inc
jg
and
sbb
adc
xlat
jmp
or
cmpsb
jge
xor
or
and
call
ja
jle
adc
repz
jecxz
jecxz
std
jecxz
and
xor
jl
lock
arpl
popa
sbb
inc
jge
adc
shl
dec
push
mov
ret
cs
insl
popf
inc
popf
inc
jge
mov
flds
jl
mov
xlat
push
and
push
cmpsb
gs
out
cmpb
or
sti
mov
out
sbb
sbb
lret
push
pop
dec
lret
push
pop
lretw
popf
test
mov
push
loopne
sbb
jge
xchg
push
adc
addr16
mov
cld
mov
push
loopne
sbb
mov
insl
pushf
dec
dec
in
mov
lea
mov
jge
push
cmp
jmp
jle
xor
xorl
jmp
push
or
rcll
ret
cmpb
push
jns
ret
push
jns
ret
add
lcall
sahf
ret
gs
ja
pushf
sahf
push
adc
addr16
fwait
mov
fwait
mov
loopne
arpl
mov
inc
xchg
aaa
mov
out
xchg
test
jmp
lret
inc
sbb
mov
ret
mov
sbb
sbb
fldl
pushf
add
fxch
je
pop
jnp
push
pop
jnp
push
pop
das
je
movsb
repz
fs
insl
dec
mov
sbb
sti
mov
je
jns
ret
mov
push
ret
mov
jge
imul
inc
pop
sub
ja
call
gs
push
repz
je
cmpsb
inc
mov
je
cmpsb
popa
add
push
shrl
mov
sbb
dec
idivb
adc
repz
fs
dec
xchg
fstpt
jnp
jne
icebp
mov
and
and
fs
sub
nop
jge
inc
jns
mov
pop
sub
and
mov
and
dec
fs
and
int3
cmp
hlt
xchg
dec
and
sbb
fiaddl
cld
add
pop
mov
jnp
lock
adc
mov
or
gs
adc
sbb
shll
push
sub
insl
sbb
or
insb
popa
add
insb
mov
arpl
dec
push
into
push
js
push
lret
push
pop
das
fcmovnbe
movsb
fcmovnbe
push
movsb
fcmovnbe
push
movsb
fildl
jl
and
roll
jmp
xlat
add
lret
movups
fistl
xchg
jnp
sbb
pop
testl
ficoml
lret
add
lahf
fistl
xchg
je
mov
subb
sub
dec
inc
scas
dec
stos
cmp
popa
fistps
mov
push
mov
push
mov
mov
push
mov
mov
mov
mov
mov
scas
inc
push
movsb
scas
pop
jae
dec
dec
orb
jmp
lods
shll
xlat
scas
in
mov
push
hlt
das
jge
push
cmp
push
ljmp
or
sti
xorb
ja
xlat
push
push
clc
xor
push
imulb
shlb
scas
inc
push
and
dec
jnp
and
adc
mov
sub
repnz
mov
xor
call
pushf
js
loopne
aaa
pop
test
mov
and
mov
cmp
and
ljmp
clc
jae
std
mov
mov
push
test
stc
adc
scas
mov
fildll
orb
pushf
mov
jp
in
scas
lods
mov
cmc
imul
or
cli
pop
inc
cltd
scas
cmp
ffree
flds
jnp
scas
dec
in
mulb
nop
scas
jae
in
flds
cli
shl
xchg
and
repnz
and
lcall
fildll
loopne
inc
mov
idiv
mull
mov
pusha
aad
jne
and
cli
mov
jmp
and
testl
or
and
leave
sub
mov
into
js
fistpll
xor
ret
push
testl
and
jl
bound
mov
and
daa
loop
xor
add
or
fbld
jne
rorb
push
mov
cmp
pop
mov
pop
mov
jmp
sbb
jnp
mov
sub
sbb
xchg
ja
xchg
test
ja
fnsetpm(287
in
push
insb
ss
cmpb
enter
inc
ljmp
or
andb
aam
sub
in
cwtl
and
xor
ss
mov
sub
iret
repnz
xor
push
iret
bnd
jg
lds
jb
or
dec
stc
push
das
imul
mov
cmp
jno
pop
int3
sub
cmp
pop
inc
loop
cmc
xchg
lds
and
cmp
xchg
pop
popf
and
dec
sahf
and
popa
jle
scas
iret
sub
pop
and
jns
jmp
stos
fistpll
pusha
movsb
mov
ret
sbb
loope
int3
and
fsubrl
cmp
pop
xchg
sti
jns
std
cmpsb
inc
jno
movsb
mov
rcll
hlt
leave
js
std
xor
or
loope
sbb
je
sysret
ret
xchg
inc
xchg
push
movsl
add
leave
sarb
mov
stos
adc
popa
xchg
xchg
lret
imulb
adc
push
dec
pop
jns
ret
stc
cmp
imul
lock
movsl
xchg
in
jle
sub
xchg
and
adc
aas
pop
in
sub
pop
inc
in
test
mov
mov
ja
mov
mov
and
mull
mov
inc
andb
stos
cwtl
incl
xchg
cmp
ja
mov
cwtl
or
inc
push
add
sbb
add
mov
movsl
sar
scas
fs
in
dec
hlt
sbb
pop
push
les
in
fldt
cmp
sub
pop
repnz
insl
gs
ja
test
loopne
and
dec
xchg
xchg
aad
add
stos
test
jg
mov
push
push
jo
cmp
add
fmull
push
orb
jp
stos
divb
mov
cmp
add
adc
xchg
push
sbb
lret
add
pushf
stos
popf
ja
and
xchg
popf
mov
mov
and
mov
pop
sub
add
icebp
sub
rorb
incl
pop
leave
int3
jns
and
aam
mov
int3
pop
and
inc
clc
cmp
ss
rorb
mov
pop
lods
mov
xlat
into
cmpb
fiadds
and
mov
xchg
xchg
or
dec
mov
mov
cltd
xor
or
sbb
sbb
fbstp
outsl
or
loopne
xchg
push
add
push
std
repz
dec
xchg
push
mov
adc
xchg
movsb
mov
cmp
jns
jb
jo
inc
jb
dec
inc
adc
enter
loopne
adc
jo
sub
sti
pop
addb
fcmovnbe
add
sub
repz
fimull
xor
and
fwait
xchg
mov
push
xchg
mov
xor
mov
xchg
cwtl
pop
inc
icebp
xor
and
and
xchg
mov
std
mov
push
dec
addr16
jnp
inc
ss
mov
loopne
lock
sarb
xor
adc
mov
inc
jns
dec
or
and
and
mov
sbb
stc
add
xchg
loope
sub
push
sub
stc
pop
or
ja
sub
test
push
sbb
shl
jge
jecxz
test
push
add
dec
or
jl
mov
mov
pop
rol
outsb
jno
insb
xor
insl
jmp
adc
stos
les
pop
insb
stc
imul
insb
test
adc
pop
sbb
jae
mov
or
or
jae
loope
shr
mov
mov
sub
add
xor
sbb
int
sbb
mov
push
in
vcvtps2pd
int3
mov
ja
icebp
sub
push
jns
orb
pusha
sarl
and
insb
sub
dec
cmc
mov
test
iret
loopne
int3
dec
jns
fisubrs
out
sti
add
push
mov
sub
int3
in
pop
in
mov
cld
into
push
adc
mov
iret
orl
add
sbb
fsubp
jl
push
loopne
mov
je
jne
sbb
scas
mov
out
pop
sbb
inc
ffreep
pop
push
out
and
mov
jno
sub
fbld
add
icebp
popa
lret
shrb
cmp
sbb
jnp
scas
push
cmp
add
rclb
mov
movsl
call
push
xchg
jo
lcall
push
push
inc
inc
cmp
or
mov
pusha
ljmp
fucomp
out
pop
cmp
push
fwait
pop
sbb
cltd
mov
xorl
cld
or
arpl
sub
sub
pop
fiaddl
and
push
in
jg
jle
sbb
inc
push
pop
imul
nop
mov
mov
insl
shll
test
jb
loopne
fidivs
test
nop
lods
jne
inc
add
push
lods
insl
mov
movsl
mov
lea
lea
sbb
testb
arpl
xchg
xor
mov
pop
fidivl
popf
dec
dec
adc
dec
dec
fdivl
mov
cmp
sub
mov
sbb
push
mulb
push
pusha
xorb
xlat
fidivrs
mov
test
mov
jae
push
hlt
cltd
out
jge
sub
shrb
mov
fsubrp
jg
sbb
add
fildl
fcmovnb
adc
imul
in
jmp
jne
mov
in
mov
out
push
inc
pushf
xchg
and
cmp
out
test
mov
and
jns
sub
out
mov
test
pusha
jne
push
push
cmpsb
nop
sbb
insb
stc
repnz
or
stos
mov
xchg
jl
adc
subl
inc
idivl
add
jp
cld
jno
mov
xor
add
out
lods
lret
pop
inc
inc
jmp
into
call
jnp
jo
fistpl
jno
and
enter
jb
out
add
repnz
or
and
insl
hlt
mov
js
shlb
xchg
or
dec
fnstsw
aad
dec
adc
mov
and
and
lock
arpl
popa
mov
rcrl
call
jnp
mov
les
insl
fistpll
sbb
push
cmc
inc
xor
mov
fidivrs
pop
add
dec
ljmp
hlt
pop
aam
push
scas
enter
push
ja
clc
adc
mov
or
inc
in
jp
sbb
hlt
dec
add
or
dec
adc
cmp
inc
and
hlt
xor
negb
imul
cld
icebp
sub
mov
fists
rorb
mov
test
sbb
aam
fsubrs
and
pop
jns
inc
push
dec
mov
or
add
inc
lods
or
out
sub
pushf
lcall
dec
imul
push
clc
xor
cmpsl
fildl
pop
sbb
and
rolb
hlt
add
fisubrl
outsb
outsl
sbb
mov
aad
dec
sahf
mov
push
fildl
or
mov
arpl
cli
nop
imul
fmul
jns
jne
pop
mov
push
xor
xchg
push
in
dec
scas
jg
jbe
pop
mov
cmc
out
sub
jnp
scas
movsl
cmp
pop
iret
push
fsubs
pop
and
jmp
test
addr16
jae
out
orb
mov
or
bound
call
jmp
pop
and
das
stos
icebp
mov
jnp
aaa
inc
ffreep
dec
cmp
pop
dec
mov
std
aam
pushf
dec
cmp
movsl
cmp
repnz
push
inc
std
lea
jbe
adc
inc
das
imul
xor
lods
or
jmp
xchg
and
movsb
daa
cmp
or
fisttps
addr16
cltd
int3
sub
mov
xor
mov
pslld
add
pushf
icebp
orl
add
loopne,pt
test
and
mov
or
ret
xchg
inc
sarb
pushl
fisttpl
add
xchg
arpl
repnz
loopne
loopne
xor
pop
mov
mov
das
subb
mov
adcl
pop
jb
xor
add
in
lret
cmp
shrb
testl
inc
pop
mov
sbb
rorb
mov
sub
jne
sbb
or
out
aaa
cli
jg
iret
aam
and
push
pop
test
in
jae
fbld
insb
push
ja
fwait
inc
shll
insb
cli
sti
adcb
je
arpl
push
pop
test
int3
fucomp
mov
jbe
sahf
in
test
mov
fs
jecxz
mov
out
add
sbb
xor
in
icebp
in
jmp
xchg
ja
jno
mov
lcall
int
push
enter
adc
cltd
adc
adc
adcb
iret
roll
sti
out
enter
sti
in
es
cmp
lea
mov
icebp
mov
icebp
or
les
fdivrs
aas
hlt
or
and
sub
inc
call
jae
cmpsb
xor
dec
sbb
int3
ljmp
shrb
imul
and
loop
add
mull
loope
jns
push
jo
pusha
pop
movsl
xchg
dec
shl
fdiv
bnd
mov
negl
cmc
and
inc
es
sbb
pop
xchg
ret
push
fisubl
and
push
push
mov
arpl
cmpsb
hlt
jl
cld
sbb
pop
fs
insb
fnstsw
insb
push
leave
je
fcomp
rol
insb
xor
inc
jp
icebp
mov
push
mov
sub
insb
aad
pop
test
jns
mov
jmp
mov
cmp
js
inc
les
insb
adc
jmp
mov
add
xchg
nop
mov
xchg
mov
dec
repnz
push
adcl
and
std
in
jae
mov
xchg
jle
xor
dec
inc
std
stos
aad
push
mov
add
mov
sub
out
pop
or
or
xor
mov
cmp
cmp
inc
hlt
movsl
fs
fidivl
or
or
xor
icebp
ds
lods
xor
arpl
aam
hlt
xor
cmp
aam
test
dec
or
outsl
inc
cmp
loop
pop
aad
and
mov
cld
cli
pop
fsub
sbb
jno
jl
sbb
and
sti
cmp
sub
lock
add
fstpt
add
mov
push
cmp
mov
add
icebp
dec
mov
lret
sub
push
test
cmp
sbb
and
or
pusha
je
dec
jecxz
mov
cmp
movzwl
hlt
dec
and
cmp
aam
cmp
loopne
xchg
dec
addr16
pause
cmp
dec
sub
leave
ja
or
mov
xor
cld
sbb
push
jno
adc
bound
in
mov
jge
enter
jge
sub
push
nop
int3
xor
ja
test
sbb
dec
jp
jge
xchg
fninit
jl
jg
addl
mov
ret
fcompl
fistl
xchg
jmp
ds
mov
fistps
inc
addb
cmpsl
and
popf
xlat
in
std
imul
out
mov
cmp
int3
sub
int3
pop
fsincos
aam
push
xchg
icebp
push
leave
adc
mov
dec
scas
sbb
test
cld
push
xchg
jmp
sarb
std
lcall
leave
mov
mov
mov
std
fisttps
out
out
inc
add
mov
ds
mov
jne
iret
mov
shr
rcrl
push
popl
sub
cmp
push
fists
and
leave
jl
inc
lock
les
mov
cmp
mov
jns
xchg
sahf
cs
mov
sbb
les
lods
mov
popf
xchg
cs
ljmp
imul
les
stos
dec
dec
mov
out
cld
sbb
mov
outsl
or
shll
sbb
in
adc
add
jnp
mov
popa
dec
mul
push
dec
jae
mov
dec
sbb
jl
xor
icebp
cmp
inc
jne
arpl
inc
dec
lea
jnp
pop
test
sub
jl
adc
mov
xchg
test
lcall
jnp
add
push
fcomi
jl
dec
ss
mov
adc
inc
rcrb
mov
add
mov
push
push
ja
adcl
mov
xor
mov
fdivrl
cmc
pop
fistpll
jecxz
ret
inc
and
add
movsb
mov
in
ffreep
mov
pop
shll
jl
int3
ret
xchg
and
arpl
mov
xor
sbb
daa
filds
pop
push
inc
adc
add
mov
outsb
movsl
cli
cltd
xchg
inc
insb
jg
cmp
add
inc
sub
mov
push
xchg
jbe
xor
add
insl
repz
scas
sbb
inc
jbe
push
es
sti
mov
out
jle
sbb
inc
adc
push
ss
loopne
insb
cmpl
adc
aas
adc
jg
scas
adc
cld
pop
aas
loop
movsb
jnp
shl
mov
cwtl
push
loope
jmp
not
adc
jb
fistl
imul
iret
add
in
aad
and
and
lret
pop
adc
fdivs
sbb
dec
adc
push
or
int
mov
daa
jns
mov
int3
push
jge
adcb
popa
hlt
popa
lret
iret
xor
filds
jne
add
lds
mov
jae
sbb
stos
dec
fstl
enter
outsb
mov
mov
jmp
out
ljmp
int3
in
dec
push
stos
imul
jns
mov
push
outsb
aam
cld
js
jecxz
dec
rcll
add
jg
xchg
out
jbe
xor
push
pop
jbe
mov
sub
into
jecxz
iret
mov
cli
sahf
mov
jb
dec
dec
aaa
inc
rol
or
cmp
fcompl
and
and
sub
lods
cmpsb
jg
jae
inc
pop
inc
fistps
and
push
ds
aas
jecxz
jge
stc
xor
mov
ret
ffree
loope
push
xor
xor
xchg
or
add
lcall
add
shll
push
sub
sbb
int3
aam
adc
cmp
push
test
arpl
in
sub
and
rolb
jmp
arpl
adc
adc
imul
pop
push
roll
fs
int3
add
mov
cmp
pusha
stc
push
fdivrs
js
sub
into
bound
ret
stos
sub
pusha
test
ret
inc
scas
shrl
arpl
mov
and
adc
les
push
xchg
fs
xor
in
and
pop
std
add
pop
daa
shl
out
outsl
shlb
ss
jl
out
or
add
pop
movsb
lret
jne
inc
movsl
inc
pop
movsl
arpl
and
add
mov
push
fisttpll
sbb
pushl
adc
int3
pop
jle
pushl
sbb
push
push
mov
jo
jmp
xchg
push
or
iret
imul
cwtl
test
mov
int3
call
int3
mov
aaa
pop
negl
repnz
fdivl
nopl
push
adc
sub
cmp
hlt
jle
mov
repnz
cmp
sahf
mov
cltd
jae
xchg
pop
adc
cwtd
mov
adc
insl
aam
sub
test
leave
lods
in
mov
inc
iret
dec
add
outsl
pop
aam
sub
out
jecxz
test
int
dec
je
jae
bound
or
lret
push
outsl
ljmp
and
lcall
insl
or
icebp
xchg
lds
mov
dec
out
fnstcw
sub
test
outsb
out
inc
mov
mov
inc
fs
sub
aaa
xlat
les
in
test
inc
test
arpl
jno
jp
lds
push
add
xchg
jecxz
mov
cmp
mov
adc
cmp
imul
int3
arpl
jl
xor
enter
jg
mov
inc
out
movsl
adc
mov
mov
inc
out
hlt
inc
adc
inc
mov
xorb
jg
scas
mov
bnd
fisttps
stos
shl
mov
mov
mov
mov
pop
xor
sub
sub
push
hlt
cli
hlt
mov
cmc
mov
pop
ja
sbb
int3
jl
dec
mov
jnp
xor
enter
jne
adc
stos
cld
jb
loope
sar
pop
sbb
in
in
out
mov
shlb
mov
pop
call
jmp
cmp
je
pop
lcall
sub
je
pop
ljmp
outsb
push
clc
test
mov
cld
sbb
or
fxch
in
push
ficomps
adc
gs
mov
rcll
or
ffree
mov
in
push
ja
into
mov
dec
andb
shl
push
in
test
scas
icebp
inc
in
cmp
jge
push
xor
in
push
idivl
push
mov
mov
jge
and
stos
inc
xor
cmp
pop
inc
enter
imul
cld
or
jns
pusha
outsl
cmp
jnp
push
mov
push
popa
pusha
sbb
arpl
and
mov
aam
fs
sub
dec
sti
sub
jnp
mov
sbb
pop
mov
and
mov
xor
ja
sbb
sbb
mov
mov
lods
fiadds
sub
sbb
test
push
std
jnp
and
dec
inc
scas
xor
in
sbb
mov
add
icebp
mov
cli
test
pop
hlt
sub
pop
adc
and
cltd
mov
lods
jae
out
jecxz
adc
xor
dec
or
enter
ss
arpl
jno
sub
pop
and
push
push
push
adc
or
mov
outsb
mov
int
lods
testl
mov
lret
gs
shrb
add
jbe
insl
mov
pop
mov
or
adc
movsb
lret
jne
mov
xchg
and
aaa
mov
add
push
jno
sub
popa
pusha
and
sbb
jnp
inc
pushf
scas
jl
adc
nop
push
ja
scas
dec
lret
outsl
cld
sub
mov
cmp
data16
mov
popa
and
imul
inc
cmp
cmp
jge
jb
cld
enter
data16
aam
add
fstps
push
jnp
add
mov
rclb
loopne
int
xchg
sub
shrb
cwtl
push
dec
or
pop
aad
inc
push
sbb
lcall
inc
or
pop
clc
sti
add
icebp
jle
and
add
test
js
movsb
or
pop
lds
xor
lods
dec
arpl
jnp
lcall
mov
jb
dec
adc
test
xchg
rol
mov
es
fwait
pop
popf
jle
jmp
mov
test
push
jno
and
cmpb
movq
scas
push
or
movsl
adcw
jl
or
adc
hlt
add
test
push
loope
lret
and
stc
jo
out
in
jnp
pop
dec
mov
xor
shlb
jge
mov
lret
xor
cmp
cmpsb
jne
mov
adc
nop
rcrb
ja
test
adc
mov
cwtl
lcall
cmp
idivb
pop
sbb
fs
insb
dec
je
push
add
cld
jl
xchg
int3
repz
sarl
xor
jne
fucom
adc
sbb
out
out
int3
clc
adc
mov
xchg
decb
test
mov
jbe
and
push
jecxz
aam
loope
sbb
adc
adc
mov
mov
arpl
push
in
je
insb
neg
mov
in
int3
shll
insl
sbb
adc
xchg
fmull
aam
inc
fwait
rolb
repz
push
xchg
xchg
das
sbb
push
mov
dec
leave
scas
jo
inc
repnz
jae
push
arpl
sbb
push
push
fldenv
fdivl
inc
push
mov
cmp
out
pop
xor
out
push
inc
gs
fdivrl
cld
push
sahf
loope
shrl
scas
pop
push
pop
insl
fdivp
inc
dec
xchg
add
test
and
mov
adc
iret
sti
mov
mov
lds
int
test
pop
pop
mov
es
sub
mov
imul
jbe
fiadds
xchg
andb
jno
lret
ficompl
jmp
push
mov
xlat
incl
and
fwait
jne
movsb
mov
xor
mov
jb
add
or
in
push
int3
stos
loop
push
push
or
push
jg
mov
mov
add
insb
push
int3
in
push
hlt
aas
jmp
lcall
arpl
pusha
sbb
cmc
inc
scas
int3
shrl
out
mov
icebp
inc
int3
sub
cmc
insb
jbe
pop
mov
sub
insb
outsl
imul
adc
pop
fs
pusha
add
dec
rcrl
mov
inc
add
and
inc
scas
cwtl
dec
shrb
mov
jne
popf
rclb
xchg
js
dec
sub
adc
mov
jmp
repnz
je
cld
jl
testb
or
pop
in
insb
mov
inc
jle
lcall
cs
fimull
imul
or
jp
adc
jg
jns
ss
pop
sbb
dec
jo
add
push
int3
inc
mov
arpl
mov
pop
scas
dec
hlt
es
repnz
sbb
add
push
jbe
adc
jge
shrb
icebp
xchg
loopne
jecxz
adc
adc
pushf
imul
add
sub
fscale
or
xor
mov
pushf
dec
adc
mov
push
addr16
fstps
add
ret
xchg
jle
jg
add
dec
cmp
and
dec
lahf
jmp
cmp
pop
cmp
sub
pushf
pusha
push
xchg
mov
popa
pusha
mov
je
mov
push
testl
inc
push
jns
jnp
repnz
jle
int3
sbb
repnz
pop
adc
out
cmc
pop
inc
jge
imul
test
or
loopne
das
ljmp
jl
lds
push
mov
dec
mov
cmpl
das
jmp
dec
push
mov
test
movl
xor
dec
dec
dec
mov
xchg
sbb
mov
jnp,pn
dec
shrl
jno
push
or
int3
or
push
jecxz
stc
js
ljmp
jmp
repnz
adc
xchg
inc
rorb
divb
ret
out
cmpsb
push
js
cwtl
jge
push
inc
xor
jmp
out
fcoms
adc
add
or
lock
mov
add
or
iret
mov
arpl
scas
push
jge
adc
ss
filds
mov
in
xor
inc
lret
push
push
and
ret
lcall
cwtl
jmp
pushf
pusha
push
mov
jge
push
pop
rcr
insb
cmp
mov
mov
mov
lret
xor
sub
and
lret
dec
dec
int
imul
mov
jp
mov
adc
out
mov
sahf
sbb
ds
mov
push
scas
push
and
mov
add
imul
or
in
cli
jle
rcr
inc
shlb
fisubs
jne
ret
leave
dec
stc
sbb
fstps
mov
adc
or
sbb
loopne
xchg
sbb
or
adc
add
shr
inc
xor
xor
fs
std
aaa
sbb
mov
dec
xor
sti
adc
and
mov
mov
sbb
mov
push
aaa
fisttpll
sti
and
negl
xlat
mov
lret
out
jno
adc
push
dec
arpl
loop
mov
add
das
adc
ret
shrl
push
add
stos
int
or
lock
sbb
repnz
and
jb
je
sbb
dec
pop
loopne
mov
sar
aad
xchg
pop
inc
gs
sbb
and
jns
or
xor
add
jno
xor
rolb
pop
rclb
mov
mov
xchg
std
xor
jae
and
out
out
outsl
adc
dec
out
jg
sub
stc
pushf
popa
jl
mov
push
jae
inc
dec
int3
pop
ffree
out
pop
push
mov
ret
dec
pop
inc
push
lea
xchg
jns
inc
lods
sub
test
sti
jmp
inc
mov
inc
mov
mov
dec
dec
int3
jg
xchg
inc
xchg
lds
mov
jnp
sbb
mov
testl
dec
jmp
aas
std
in
mov
xlat
or
mov
mov
mov
pushf
std
sbb
inc
test
push
push
jl
pop
pop
sub
test
pop
xchg
or
mov
std
movsb
sbb
lret
lods
jnp
stc
push
loop
fidivrs
fbstp
subb
das
mov
mov
pop
in
imul
push
repnz
addr16
test
outsl
ljmp
insb
mov
sbb
fildl
test
mov
int
lret
dec
into
add
sti
dec
sub
inc
out
sbb
movsb
dec
xlat
push
mov
push
ljmp
test
inc
xchg
mov
push
dec
push
xchg
fldt
mov
or
pop
add
add
xor
fwait
ja
aam
push
pop
mov
out
ja
lods
mov
cmp
add
adc
inc
mov
mov
mov
mov
icebp
inc
and
jle
out
shrb
jl
pop
mov
push
out
filds
xor
mov
mov
popf
lcall
outsl
push
mov
in
mov
jge
add
mov
repz
jb
fnstcw
mov
pop
int3
pop
aam
xchg
popa
stc
xchg
test
lods
pop
aam
inc
imul
fdivrl
pushf
mov
sbb
out
xor
xor
sahf
jns
xor
das
mov
cmp
jecxz
pop
mov
adc
dec
add
sbb
cmc
or
out
cmp
in
fsub
popl
in
xor
jae
out
ljmp
lds
std
or
xchg
sub
std
call
mov
inc
or
aas
and
cli
push
dec
mov
sti
pop
or
dec
inc
aam
jae
add
dec
cmp
jae
subl
lods
push
jmp
popa
sahf
mov
jnp
dec
fistl
jnp
xor
inc
xor
adc
aas
lret
xorl
cmp
pop
adc
mov
je
enter
incl
sub
sub
sub
sbb
faddl
jnp
sub
cltd
cmp
mov
andl
pop
lods
mov
daa
xlat
mov
cli
push
daa
xor
mov
ja
sbb
inc
inc
imul
imul
sahf
inc
push
mov
mov
mov
sahf
jmp
sahf
jns
mov
popa
and
arpl
jg
mov
dec
ds
cld
mov
dec
pop
stos
enter
cld
jae
out
pop
lret
cvtps2pi
xchg
dec
inc
fimuls
cmpsb
arpl
arpl
ljmp
lahf
pushf
ja
xchg
in
dec
jns
test
cli
loope
lahf
mov
jne
stos
popf
and
lcall
push
push
xchg
jmp
into
pop
xchg
inc
in
xlat
cmp
sahf
xor
lret
xchg
pusha
inc
loopne
bound
and
and
jns
pusha
cwtl
add
and
add
cmp
mov
movsb
pop
jnp
sub
mov
icebp
inc
and
mov
inc
pop
jae
jl
in
movsb
into
add
jl
movsb
push
inc
push
dec
addb
jns
sbb
in
mov
mov
scas
push
mov
mov
xor
inc
sahf
lock
fs
jnp
cltd
add
cmp
fisubrs
mov
insb
imul
xlat
jnp
xor
mov
inc
dec
mov
xlat
dec
test
gs
push
pop
push
jae
xlat
rorl
inc
or
jg
imul
jbe
push
lods
jg
add
clc
aad
fists
fwait
mov
inc
cmp
mov
in
fimull
add
iret
adc
loop
rorl
leave
aam
iret
add
xor
fs
xchg
jmp
xchg
xlat
in
lahf
sub
sbb
adc
push
xor
imul
jl
lret
jp
dec
mov
mov
ja
sti
roll
mov
movsl
mov
or
lcall
out
andb
jno
mov
mov
or
ljmp
inc
mov
jae
xchg
pop
xchg
inc
repz
inc
test
ds
bound
aam
push
aas
in
cmp
in
pop
popl
lret
jmp
outsl
lret
mov
cmp
pop
and
mov
push
loopne
add
sbb
ljmp
mov
mov
fs
stos
cmpsl
sub
ljmp
loopne
xor
jb
push
cmc
mov
mov
daa
xor
mov
inc
loop
pop
add
fisttpl
dec
push
push
and
inc
xor
mov
out
fists
push
sub
stc
cs
add
lret
popa
out
push
cld
test
in
rcl
pop
imul
mov
cmc
and
adc
aad
lret
push
sti
xchg
ret
fisttpll
outsl
jnp
push
into
adc
xlat
pop
sbb
push
aas
sbb
stc
cmp
cmpsl
test
lock
scas
add
mov
inc
std
pushf
dec
push
push
lcall
xlat
mov
lods
dec
inc
inc
xor
xchg
addr16
mov
in
imul
cmp
jne
pop
lret
cmpsl
rep
mov
std
repnz
push
xor
jbe
pop
mov
mov
das
stos
scas
adc
sbb
xor
test
iret
add
cmp
push
adc
les
or
ss
test
sub
mov
sub
hlt
shll
in
decl
mov
jge
aaa
clc
sub
or
jg
pusha
test
dec
sub
or
pop
jne
ret
adc
sbb
add
lcall
ret
outsl
andb
sbb
add
and
inc
mov
shrb
xor
ja
jns
pushf
mov
sub
and
sbb
add
push
hlt
push
rolb
add
sarl
xor
movsl
iret
or
mov
jns
lcall
mov
ss
push
jmp
mov
in
adc
jno
cld
les
ss
jne
dec
and
mov
cs
dec
and
fxch
out
jecxz
xor
sahf
or
test
add
xor
notl
out
arpl
icebp
loopne
pop
stos
lock
cmp
pop
rorb
outsb
lret
cld
outsl
mov
jle
dec
sbb
fcompl
dec
fistl
mov
mov
push
jge
xchg
lahf
push
xor
sbb
insb
dec
sbb
push
mov
sbb
add
mov
sbb
pop
sbb
mov
or
mov
int3
int3
cltd
mov
or
lods
repnz
jge
inc
dec
sbb
mov
sub
push
incb
push
std
clc
mov
or
orl
mov
xchg
pop
cmpsl
lods
dec
aam
adc
cwtl
sbb
or
lds
std
pop
push
add
push
xor
xchg
clc
adc
js
cmp
or
sti
outsl
mov
stc
stos
dec
cmp
dec
inc
inc
xor
sbb
cmp
lcall
or
pshufhw
mov
lods
and
push
cmpsb
cmpsb
fistps
lret
push
inc
mov
fwait
xor
adc
out
repz
or
loope
dec
xchg
in
pop
mov
or
mov
insl
dec
sub
mov
pop
ss
test
imul
cmp
ljmp
push
adc
aad
lcall
icebp
mov
pop
pushf
or
sub
push
popf
in
pop
movsl
jae
jmp
add
pop
inc
gs
cli
adc
repnz
lret
mov
std
imul
int3
dec
jnp
ss
into
push
jbe
sub
add
je
mov
push
mov
in
sub
xchg
mov
adc
dec
and
dec
add
fadd
adc
xor
adc
mov
repz
sar
repnz
sbb
or
jge
push
sti
mov
add
std
mov
in
in
popa
sbb
jg
adc
adc
int3
sub
iret
ret
arpl
loop
ja
inc
gs
aaa
xor
clc
neg
inc
xchg
jg
jp
cmp
into
dec
arpl
scas
pop
mov
dec
std
mov
xchg
xor
and
or
push
je
dec
mov
sub
sub
dec
lds
xchg
test
or
sub
jg
popa
aam
stc
adc
arpl
inc
push
sbb
out
adc
pop
sub
jmp
ja
sub
insb
mov
test
cmp
inc
sbb
lods
pop
xor
jno
mov
inc
and
mov
clc
jg
jnp
push
mov
inc
fs
outsl
adc
enter
add
shll
daa
sahf
inc
xchg
add
int3
push
xchg
insb
lea
mov
or
dec
jbe
sbb
jne
lea
clc
fistpl
jp
fs
mov
xor
lret
mov
enter
sbb
cmc
mov
bnd
lea
insb
push
inc
push
fadds
mov
rclb
or
add
ret
xor
adc
iret
adc
pop
push
mov
popa
push
pop
vmwrite
ljmp
jp
jb
sbb
sbb
mov
daa
dec
mov
stc
pop
jnp
jle
sarb
jno
cltd
adc
cltd
mov
sub
pop
ljmp
mov
or
mov
in
negl
sar
ds
loop
cmp
inc
aaa
mov
test
dec
ss
imul
insb
fdivr
pushf
mov
fidivl
cmp
bound
test
jnp
test
adc
jl
adc
insb
es
je
and
push
lock
loopne
mov
jg
sbb
mov
sub
inc
out
pushf
push
test
cmp
ss
mov
xchg
ret
xchg
sbb
jmp
adc
jmp
inc
les
loope
movsb
fstpt
aam
push
xchg
icebp
push
cmp
cmp
inc
and
add
pop
dec
arpl
cmp
mov
mov
xchg
imul
sbb
into
stos
jmp
inc
repnz
adc
jo
mov
cmc
enter
dec
pop
mov
fst
lret
push
enter
jp
lea
mov
dec
inc
mov
shrl
dec
cmpsl
push
jbe
stos
mov
xor
insb
repnz
mov
cmpsb
aas
sbb
lret
test
mulb
mov
and
xchg
andl
push
and
inc
cld
xor
adc
jmp
pushf
xchg
adc
cmp
inc
call
imul
imul
fs
fildll
test
lret
in
icebp
in
add
mov
popa
inc
fs
lahf
imul
mov
arpl
jge
xchg
pushf
clc
add
loop
and
and
push
push
mov
call
mov
out
inc
xchg
xchg
jno
adc
aam
dec
pop
mov
cmpsb
cmc
or
sti
and
imul
pop
adc
mov
or
shrb
pusha
mov
adc
mov
popf
cmp
lods
or
imul
mov
xchg
jle
xchg
insl
imul
popf
cmpl
fcmovnbe
imul
and
adc
adc
mov
dec
mov
inc
out
xor
cmp
xor
jae
mov
add
mov
movl
cmp
adc
hlt
xchg
call
add
push
out
inc
add
or
push
sbb
ljmp
inc
sub
js
xchg
sub
or
cmc
inc
mov
pop
adc
outsl
int3
mov
fistl
out
jge
mov
inc
jno
dec
sub
addr16
sub
jmp
shll
clc
add
ret
or
repz
cs
sub
add
mov
imul
pop
or
std
hlt
add
xchg
arpl
mov
inc
add
xchg
dec
sahf
and
lods
dec
or
call
mov
movsl
or
xlat
les
mov
fidivl
rcrl
xchg
in
stc
call
cmovge
dec
sbbb
adc
bound
incl
push
mov
push
dec
lds
sti
mov
cmp
insb
scas
ret
filds
pop
pop
int
add
movsl
push
jl
and
test
std
jno
aam
mov
jno
int3
xor
lods
aad
lds
cmp
pop
inc
push
ret
stos
out
sub
mov
mov
add
lret
stos
and
addr16
mov
or
lds
mov
sbb
mov
or
enter
stos
jp
or
mov
pop
outsl
push
adc
stos
jns
sbb
shrl
mov
shlb
sub
orb
add
fbstp
mov
mov
lods
leave
dec
or
or
cmp
xchg
mov
imul
xor
mov
push
jb
loopne
ret
or
jmp
jmp
and
data16
jmp
test
dec
cmp
xchg
mov
mov
movsb
sti
stc
loop
mov
dec
mov
pop
inc
in
jle
adc
push
xchg
xor
sbb
lret
push
inc
jno
pushf
cmp
dec
ret
loope
lods
add
lahf
shlb
pop
mov
bound
push
dec
jge
pop
mov
pop
ret
mov
mov
cmp
cmpb
int3
cltd
jbe
into
mov
and
sub
fs
mov
jno
ss
sbb
insb
ffree
pop
cmp
add
inc
or
mov
dec
inc
sahf
dec
sbb
xchg
push
mov
lods
or
and
imul
mov
je
out
sub
mov
jl
and
mov
ja
scas
inc
lret
jnp
scas
dec
mov
in
sub
test
mov
in
sub
clc
ret
jecxz
fimull
xchg
aam
sbb
lods
fbld
mov
es
leave
pop
dec
mov
out
adc
dec
push
sbb
lahf
xor
out
in
insl
push
fisubl
dec
jl
mov
jmp
hlt
gs
push
or
jecxz
or
gs
fnstsw
imul
gs
push
adc
flds
push
loop
repz
add
add
shlb
sahf
jno
insb
in
int3
jl
fdivrs
add
out
jg
jb
dec
dec
andl
mov
sub
outsb
xchg
adc
jae
outsl
push
ljmp
xor
sub
push
xchg
test
inc
mov
int3
sbb
mov
mov
arpl
test
stos
and
cmpsl
iret
idivb
aad
sbb
pop
mov
ret
cmpb
arpl
pusha
mov
sub
add
adc
mov
mov
xor
sbb
negl
dec
gs
dec
mov
ret
and
push
outsl
das
scas
or
sbb
cwtl
add
fs
mov
jns
shll
nop
dec
mov
dec
mov
pop
and
imul
cmpsb
xchg
fs
fimuls
addr16
push
sbb
or
lods
xor
in
or
mov
call
in
insb
in
imul
mov
cld
and
mov
jg
mov
test
in
xchg
sub
cmpsb
xchg
lods
cmp
cltd
imul
daa
sbb
jae
imul
mov
dec
lea
cmp
inc
jno
arpl
mov
adc
out
dec
mov
xor
rorl
mov
sub
lock
or
mov
mov
inc
lret
dec
loop
fcomps
andl
pushf
inc
pop
add
inc
cmpsl
in
cld
mov
jg
into
pop
sub
test
xchg
daa
inc
or
mov
jge
sbb
cmp
fistpl
in
sarb
shr
pop
in
out
hlt
shl
fisubl
ja
hlt
lods
and
es
xchg
push
or
cs
pushf
sbb
push
pop
rcl
jo
sbb
mov
sbb
leave
dec
mov
pop
inc
fdivrl
xchg
rcr
pop
and
or
xchg
inc
adc
mov
fs
decl
dec
scas
mov
arpl
xchg
inc
push
neg
xchg
mov
jb
jg
dec
clc
iret
adc
icebp
mov
lock
add
push
xchg
test
mov
inc
push
push
jne
ja
adc
fistpll
cld
mov
aas
jbe
cmp
push
sbb
hlt
cmp
and
enter
mov
xchg
ss
sbbb
jmp
fsts
mov
movq
mov
and
cmpsb
xchg
cmp
in
mov
and
fistps
adc
lret
rcr
in
fidivs
pop
icebp
mov
fldenv
sbb
aam
daa
ds
fnstcw
fidivrl
adc
ss
imul
xchg
cmovg
or
or
sbb
repz
xor
cmp
orb
add
ret
ficompl
cltd
hlt
xor
sahf
es
add
icebp
jne
jl
in
adc
or
add
ret
inc
sbb
pop
sbb
mov
std
xor
mov
jg
sbb
pop
test
int3
dec
push
rcr
mov
in
sbb
inc
mov
shl
xchg
cmpsb
dec
mov
add
call
int3
data16
xchg
les
stos
jp
xorb
rorl
arpl
subl
mov
stos
pop
mov
fwait
jnp
lret
mov
dec
mov
rclb
jbe
pusha
mov
sbb
sbb
add
dec
dec
ret
jo
dec
sbb
filds
jnp
xor
sub
mov
jno
in
jg
mov
into
pop
push
sub
lock
repz
mov
insl
xchg
scas
stos
or
mov
adc
mov
stos
cltd
xchg
mov
adc
push
pop
dec
jmp
arpl
lods
imul
jg
cmp
imul
imul
jb
dec
sub
and
push
fsubrl
insl
es
les
test
std
dec
push
inc
ficoms
fs
sbb
lods
cmpsl
out
out
and
int3
cmp
hlt
icebp
or
cmp
and
xor
or
inc
test
enter
mov
dec
icebp
inc
add
fimull
mov
dec
in
adc
addb
cmpsl
movsl
lock
dec
adc
mov
mov
push
or
loop
dec
jl
or
arpl
hlt
lahf
add
mov
mov
imul
jge
std
daa
cmp
fcoml
lods
sub
pushf
ds
jmp
and
adc
and
jl
test
fcmovne
inc
out
add
or
lahf
fcmovu
lahf
mov
push
add
inc
jnp
mov
pop
idivb
and
adc
mov
dec
jo
jae
clc
pop
jle
and
out
mov
mov
cs
sub
or
insb
dec
dec
mov
pop
inc
mov
jne
je
cli
gs
sub
push
fcmovnu
adc
cmp
inc
inc
and
mull
in
xlat
invd
or
cld
inc
imul
inc
dec
push
mov
outsb
sbb
add
std
fxsave
int3
push
fdiv
dec
xor
add
nop
adc
xchg
inc
sarb
pushf
add
mov
push
dec
sub
bound
aam
push
aas
cld
jg
ficomps
or
jmp
aaa
mov
xchg
mov
mov
dec
cmpsb
dec
inc
xor
add
jge
push
mov
or
jno
pop
sbb
inc
icebp
sbb
jecxz
sahf
jb
ss
xlat
and
je
or
inc
out
add
out
int
outsl
xor
push
outsb
daa
fidivrs
aas
pop
sbb
mov
inc
lahf
out
jecxz
cwtl
jne,pt
sbb
ret
mov
stc
movsl
lahf
jle
mov
jmp
inc
pushf
js
cmpsb
dec
dec
push
imul
mov
pop
cmp
jge
pop
mov
pop
sbb
adc
mov
xlat
or
xchg
rcrb
mov
je
jno
div
jl
mov
xor
rclb
inc
int3
sbb
in
or
add
out
in
dec
mov
cmpsb
sub
fldl
test
sti
mov
ja
cmpsl
xchg
fistps
in
in
cld
mov
in
sbb
ficoml
sahf
xor
cs
inc
xor
fisttpl
sti
in
leave
jecxz
shlb
mov
es
cmpsb
js
inc
testl
ret
xor
fdiv
pop
mov
outsb
test
adc
sarl
arpl
daa
jae
jno
les
dec
imul
jge
jbe
mov
aad
push
insb
add
cld
nop
es
insl
cmpsb
or
dec
fwait
lds
aad
pop
cmp
imul
dec
lds
leave
fisttpll
and
cwtl
sub
inc
aaa
cmp
aaa
bnd
inc
js
adc
loopne
pop
add
ljmp
mov
lahf
push
dec
cmpb
xlat
xor
dec
push
cmp
dec
cmp
sbb
adc
pop
adc
out
repnz
cmpsb
mov
adc
push
jmp
ds
jb
pushf
mov
outsl
pop
cmc
std
mov
lods
lock
pop
insl
pop
sti
jmp
pop
mov
hlt
test
push
test
push
loop
cmp
in
subb
movsl
rcrb
imul
push
or
mulb
repz
mov
cmp
push
mov
pusha
cs
orb
mov
push
push
roll
fsubrs
mov
rclb
pause
dec
dec
push
jge
lods
dec
and
out
shl
push
decl
and
sbb
lds
xor
or
loopne
xchg
imul
cmp
jl
out
xor
arpl
int3
imul
pusha
jns
ret
pop
jl
cmp
cld
test
jl
mov
jnp
sub
cwtl
sub
or
mov
fmull
mov
clc
mov
sbb
cmp
adc
jmp
out
pushf
mov
push
es
add
mov
and
jbe
xor
cltd
scas
or
outsb
adc
sahf
rcl
jne
lcall
loop
dec
mov
mov
cld
movsb
js
add
adcl
cmp
add
pop
je
jmp
jmp
mov
dec
cmp
gs
jae
lret
dec
cmpsl
push
dec
lahf
pop
jge
fld1
mov
dec
push
cwtl
and
imul
insl
adc
dec
mov
xor
cltd
leave
fisttpll
int
pop
and
jae
jne
je
rcl
sbb
mov
cli
jecxz
stc
outsb
in
add
call
lret
outsl
sahf
jecxz
aam
xchg
pop
xor
jmp
fcomps
jo
sbb
dec
xor
inc
push
adc
cmp
add
jmp
out
mov
dec
leave
mov
por
imul
lock
repnz
in
fwait
mov
mov
add
sahf
mov
add
mov
imul
test
insl
movsb
pop
cmp
pusha
cmpb
jecxz
repz
jae
mov
enter
mov
push
mov
jmp
xchg
xor
fisubrl
pushf
sbb
pop
and
mov
rorl
jl
and
aaa
mov
fcomps
std
std
adc
push
lcall
xor
mov
xchg
in
mov
mov
test
and
in
mov
and
mov
outsl
add
sbb
ret
xchg
arpl
push
add
dec
adc
in
mov
adcl
inc
sarb
loopne
imul
cmp
adc
mov
sub
dec
icebp
rclb
push
and
mov
test
xchg
repz
sub
jmp
jbe
lahf
mov
cmp
ds
stc
adc
add
mov
je
mov
push
mov
xor
sub
into
aam
inc
ss
lds
and
and
push
sub
pop
stc
lcall
add
incl
inc
int3
xchg
jg
sub
inc
andl
leave
mov
ret
subl
add
xor
mov
out
mov
dec
je
jae
sar
fistpl
inc
imul
inc
inc
fildll
and
mov
xchg
mov
repz
or
aad
out
fstpl
arpl
push
shrb
sbb
or
xchg
inc
pop
stos
push
insl
adc
inc
cltd
das
dec
sub
mov
js
mov
pop
mov
jnp
test
sti
cmp
xchg
xchg
dec
mov
stos
push
mov
pop
adcb
movups
jge
lret
adc
sarl
pop
or
sbb
mov
jnp
pop
js
nop
fld
imul
cmpsb
cmpsl
es
jmp
adc
lods
dec
lcall
pop
jbe
or
and
inc
out
adc
out
jb
push
xchg
jbe
mov
je
cmp
adc
sti
lcall
imulb
nop
and
xorb
push
xchg
xchg
mov
adc
xor
and
in
insb
push
rorl
adc
imul
mov
fldt
shrl
das
jno
mov
add
add
adc
lahf
scas
orb
fcmovnbe
insl
movsb
cmp
and
adc
jnp
popf
cmpsb
sub
mov
rcrb
sti
insl
test
cmp
imul
fwait
std
das
orb
repz
mov
fcmovu
dec
dec
mov
out
push
insb
test
xor
cmp
fwait
xchg
std
xor
mov
icebp
or
mov
fs
int
hlt
jle
mov
mov
sub
jne
mov
int
mov
sub
fwait
movsb
xlat
fs
pop
insl
mov
cmp
fnstenv
mov
mov
jmp
and
aam
fdivrs
scas
xchg
xchg
pushf
pop
inc
sti
inc
mulb
stc
pop
pop
je
push
bound
repz
je
arpl
sbb
add
shlb
lods
movsl
jae
mov
mov
push
enter
addr16
sbb
jg
jae
test
adc
aam
loopne
pop
in
pushf
lahf
insl
aaa
gs
jmp
ss
and
mov
repnz
and
imul
jl
push
push
scas
adc
hlt
sub
jg
dec
xchg
or
cmp
out
cli
inc
fsincos
daa
mov
lret
imul
push
andl
fwait
dec
imul
cwtl
pop
std
pop
dec
pushf
cmpsb
xchg
int
xor
stos
dec
aad
mov
mov
pop
daa
pop
mov
push
dec
push
push
xchg
adc
xor
xor
ret
sbb
fs
push
add
sti
mov
fs
sarl
les
stc
add
mov
fnstsw
mov
cmpsl
cmp
and
imul
cmp
cmp
mov
sub
fs
in
and
imul
loopne
int
sub
and
push
jne
fs
inc
icebp
mov
jl
inc
mov
xorb
mov
and
insl
pop
dec
dec
push
jge
sbb
fs
std
imul
push
or
pop
shr
cld
out
sbb
jge
push
xor
mov
pop
push
dec
int
repnz
jns
cmp
es
sbb
mov
int3
mov
sbb
lods
xchg
inc
mov
push
es
fisubrl
test
jg
stos
xor
jmp
inc
adc
and
dec
stc
shrb
test
mov
scas
ja
and
divb
and
xchg
mov
mov
xchg
ljmp
jno
pop
fs
neg
das
or
insb
dec
pop
mov
dec
mov
xor
add
cs
or
rorl
in
bound
mov
ljmp
icebp
sbb
adc
jnp
push
jnp
sbb
pushf
and
xchg
aam
push
cmp
pushf
cld
inc
inc
lret
mov
out
cld
outsl
and
xchg
aam
push
mov
jecxz
jg
dec
fldl
nop
js
stc
popf
pop
ss
std
pushf
inc
xchg
push
mov
movsl
out
pop
sub
pushf
jl
push
fwait
lock
sbb
mov
and
roll
lods
test
dec
pushf
jmp
inc
jle
mov
ja
mov
js
and
inc
insb
inc
out
push
rorb
jae
test
jmp
dec
into
fcmovnb
lcall
in
fwait
adc
nop
in
push
outsl
sbb
sub
fsts
xchg
enter
outsl
jns
jnp
fucomi
mov
popf
out
xchg
jge
jge
push
incl
mov
jnp
outsl
cmp
and
inc
jnp
mov
mov
mov
jecxz
imul
scas
inc
outsl
sub
inc
dec
push
jne
inc
fsubrl
fldt
jnp
outsl
pop
adc
enter
inc
pusha
hlt
sub
inc
cli
dec
xchg
dec
imul
xchg
xlat
pushf
adc
inc
filds
push
mov
inc
fisttpl
xlat
push
mov
jp
jmp
insl
mov
shll
mov
push
popa
and
mov
mov
xchg
stos
sbb
jmp
push
mov
stos
outsl
outsl
adc
fwait
sub
jae
aam
arpl
pusha
or
fwait
mov
dec
or
inc
cltd
das
dec
test
jns
xchg
dec
frstor
arpl
jge
pop
sbb
imul
test
xchg
mov
and
inc
comiss
sbb
test
lret
push
ss
mov
mov
fdivrs
xor
mov
insl
rcrl
adc
adc
push
jmp
inc
pusha
cld
sub
sbb
lea
jg
inc
cld
or
inc
loopne
ljmp
mov
popf
push
adc
mov
mov
in
or
inc
cltd
or
add
add
fwait
mov
jge
jno
dec
jecxz
mov
cmpsb
sub
and
sub
xor
mov
xor
shrb
or
fisttpl
add
testl
jl
jnp
push
inc
in
repz
xchg
sub
mov
sbb
sub
push
add
xor
rcll
xchg
or
fsubs
lahf
dec
pop
mov
aas
jno
inc
fcoml
int3
or
rcll
xor
xor
iret
push
bound
add
nop
cmp
arpl
mov
fists
cmp
and
int
xor
mov
cltd
mov
push
jmp
jg
mov
or
jno
mov
dec
inc
inc
inc
cld
jne
inc
enter
pusha
lods
das
std
pop
out
dec
popa
pop
jb
mov
jecxz
pusha
add
jle
inc
enter
jge
push
imul
add
mov
add
add
idivl
lods
jne
cmpsb
add
xchg
or
popa
movsb
repz
sti
cltd
dec
test
xchg
and
lea
sbb
mov
popa
dec
scas
rep
sub
imul
loopne
popf
jg
cmp
stc
cmp
lret
popa
wrmsr
pop
pop
repnz
cmp
stos
lahf
js
sub
in
push
jo
sbb
dec
jg
aam
int3
dec
ret
sbb
xor
and
push
inc
sti
out
and
ret
xchg
dec
movsb
xor
mov
std
mov
movsb
inc
fdivrl
mov
rclb
loop
add
pusha
and
jb
mov
mov
push
cmpsb
test
or
xorl
sub
insl
fcmovnbe
ss
jmp
cld
in
fstl
mov
pop
outsl
dec
aaa
push
stos
cmp
sbb
and
adc
subb
outsl
mov
out
adc
daa
mov
cmp
and
adc
popa
fxch
jmp
sti
imulb
xor
shll
popa
fxch
jmp
fsub
or
ljmp
xor
loop
sbb
popa
mov
cld
cmpsl
sbb
in
cmp
clc
adc
xorb
in
adc
int3
jl
jle
push
les
je
mov
sub
shrl
inc
xchg
repnz
jl
push
int3
daa
and
movsl
shlb
repnz
adc
repnz
jl
add
and
mov
mov
clc
jbe
dec
dec
xchg
test
jbe
loopne
pop
adc
pop
jge
xchg
loopne
mov
mov
inc
adc
mov
jnp
ja
imul
push
xor
mov
imul
push
dec
jno
mov
push
outsl
and
icebp
dec
add
sti
mov
dec
aad
call
popa
xor
jmp
jl
sub
dec
stos
cs
mov
cltd
jno
stos
out
inc
nop
xchg
imul
sub
adcl
hlt
sbb
jno
mulb
inc
mov
sub
int3
repz
addl
rcrb
fldcw
das
dec
in
jg
sbb
fdivl
jmp
test
jmp
jmp
pop
out
ret
inc
mov
mov
mul
jno
push
sub
mov
dec
adcl
les
cmp
mov
pushf
sbb
xor
rorl
and
inc
inc
inc
add
lds
add
xlat
sarl
ss
cmp
inc
dec
arpl
les
inc
imul
in
jmp
jne
mov
sub
sbb
icebp
pop
aad
push
int
pushf
lock
sti
adc
jle
scas
add
add
jno
imul
lcall
jns
mov
mov
pusha
std
adc
test
sahf
sub
jmp
movsl
je
adc
mov
dec
mov
shrb
xchg
jp
push
imul
out
imul
xchg
inc
fnstenv
sbb
mov
test
xor
push
lock
sub
xor
call
arpl
sbb
pop
test
fwait
lea
mov
lret
mov
or
imul
sbb
push
cmp
mov
adc
inc
fists
movsl
adc
outsb
sbb
dec
jo
outsl
push
cmp
dec
lret
in
mov
rolb
pusha
dec
roll
scas
shrb
ds
push
fs
inc
std
mov
movsb
inc
jp
arpl
ja
and
mov
mov
lods
cmp
sbb
jl
fidivl
xor
pop
jl
sub
jmp
inc
dec
push
mov
mov
xor
imul
jnp
imul
scas
mov
iret
loop
push
sbb
stos
fidivrl
sbb
adc
stos
ficoml
inc
pop
daa
mov
bound
dec
jle
in
pop
imul
insb
sbb
dec
scas
xchg
fsubl
pop
or
mov
leave
icebp
push
mov
xchg
sub
pop
add
jnp
or
sbb
sbb
pop
leavew
dec
popa
jnp
ss
and
fwait
jg
nop
dec
sub
jnp
cmp
dec
pop
enter
popa
jge
cmp
cmp
insl
inc
push
in
int3
cmp
scas
fldt
add
and
fistps
dec
mov
imul
imul
push
int
pop
mull
jg
jnp
in
popa
ljmp
jl
add
push
cmc
push
pop
dec
insl
mov
adc
int
sbb
jnp
arpl
pop
sbb
xchg
push
pop
mov
repnz
out
in
mov
cmp
xchg
push
dec
js
push
lods
jmp
xor
insb
dec
cltd
fbld
rclb
sbb
mov
inc
pop
in
fdivs
sub
enter
aam
dec
out
and
or
mov
shl
fisttps
icebp
mov
jns
repz
pop
pushf
jmp
sti
scas
gs
cltd
jle
pop
leavew
or
push
cmp
test
in
ljmp
fiadds
jnp
gs
sbb
pop
js
dec
jns
out
std
mov
dec
movsb
add
or
fcompl
pop
push
jne
or
mov
xor
add
sbb
fldenv
aad
out
jmp
insl
pand
test
fidivrl
lods
int3
pop
fsubrl
jl
add
or
adc
pop
fs
insb
push
je
jl
inc
sbb
pop
test
int
leave
pop
test
xchg
pop
shl
sbb
adc
dec
test
xchg
bound
or
mov
lahf
push
inc
cmp
popf
cmp
movsb
xor
sti
jecxz
and
dec
inc
icebp
dec
and
lods
icebp
inc
push
pop
sub
cmp
dec
ss
inc
add
pushl
jno
sub
mov
mov
jbe
frstor
push
xchg
sbb
xchg
inc
mov
inc
dec
push
xsave
ljmp
cmpb
pop
jne
cmpb
testb
push
push
jge
lcall
adc
xor
xor
push
jmp
iret
dec
cmp
aad
dec
xor
jbe
sbb
pop
inc
insl
push
scas
pop
mov
mov
sub
cmp
pop
jge
test
in
iret
push
pop
and
scas
inc
loope
add
fimuls
and
clc
adc
and
ljmp
loopne
add
xor
or
mov
sbb
out
push
in
push
sub
push
cmp
and
imul
pop
xor
jge
dec
dec
mov
mov
sbb
pushf
or
inc
jns
jp
daa
mov
mov
cmpsl
jne
js
push
lcall
dec
inc
int3
xor
push
push
cmc
push
call
push
cmp
js
sub
inc
scas
dec
jnp
jae
mov
jecxz
xchg
mov
mull
addl
imul
decl
inc
push
mov
xchg
inc
pusha
cwtl
test
or
and
movsl
or
xor
dec
lea
adc
add
push
push
sti
xlat
inc
insb
imul
mov
aas
jnp
jecxz
push
repz
jmp
inc
add
sbbb
xchg
jnp
mov
jmp
loop
mov
and
or
adc
int
adc
jbe
test
sub
pop
stos
sti
ds
and
out
push
xor
pop
fmuls
jb
push
fstl
mov
pop
cmc
sbb
xchg
dec
jae
adc
jae
and
decb
jl
push
loop
push
push
out
dec
or
iret
adc
in
sbb
ret
lock
inc
mov
pop
push
in
imul
and
pop
mov
popf
aas
sbb
pop
mov
add
idivb
or
imul
jmp
lods
jns
sub
jno
xor
or
nop
cmc
cmc
in
dec
hlt
xlat
push
fists
jge
add
or
out
sbb
pop
je
into
mov
lods
jl
xchg
xor
addl
movsl
cmpsl
mov
push
repnz
das
xorl
add
fstl
std
mov
dec
and
in
popa
sbb
aam
sbb
xchg
pop
push
push
std
jbe
inc
adc
sub
jp
cmp
dec
add
inc
xor
std
pop
lret
adc
scas
inc
mov
pop
decl
jmp
loopne
cld
test
lahf
adc
or
cltd
jnp
inc
xor
outsl
add
je
adc
inc
icebp
sti
rcrl
sbb
xchg
and
addr16
stos
xor
jb
mov
mov
movsb
adc
jbe
enter
or
and
adc
inc
orb
pop
cmp
sarl
push
cmp
mov
stc
adcb
push
dec
push
imulb
sbbb
out
cltd
std
mov
sti
inc
mov
sbb
pusha
and
inc
lods
jecxz
mov
das
adc
fs
adc
sub
xchg
push
push
adc
mov
mov
mov
test
mov
ret
clc
arpl
shrl
clc
cmpsb
adc
iret
add
mov
std
idivl
mov
in
sbb
mov
sbb
xchg
ja
inc
mov
pop
cs
les
inc
mov
and
std
add
roll
dec
inc
fcomip
in
xor
xchg
mov
lret
hlt
fstp
adc
push
xor
insb
addr16
sti
add
cmc
mov
adc
adc
inc
fisubrs
icebp
add
cmc
dec
xor
cs
dec
cmp
adc
shrl
mov
pop
adc
ds
notl
pop
add
jl
dec
inc
and
xor
xor
les
and
inc
add
lods
sbb
mov
xchg
std
sub
pop
jno
lods
jbe
add
arpl
addl
xor
and
add
adc
jo
in
push
sub
ja
jae
sub
xor
sub
mov
sub
sub
test
std
cs
sbb
out
cmp
push
push
and
int
jns
fistl
lcall
or
ret
inc
fstpt
pop
adc
mov
cmp
pop
mov
mov
out
sbb
and
and
dec
jp
adc
inc
dec
mov
pushl
push
pop
aas
jg
insl
leave
xor
into
add
xor
loope
and
push
mov
lods
mov
or
and
sbb
mov
add
fsubrs
xor
out
sbbb
dec
in
andb
pop
arpl
jg
push
add
add
dec
mov
out
pop
sub
xor
repnz
push
iret
add
inc
adcl
and
push
add
jl
xchg
mov
ja
xchg
inc
aaa
out
iret
or
xlat
adc
jg
mov
mov
pop
add
push
push
dec
mov
mov
pop
cmp
sbbb
js
in
inc
in
mov
aam
adc
or
cmp
xor
clc
sarb
daa
hlt
xor
loope
mov
sub
or
aad
inc
stos
pop
jne
push
sub
sbb
aad
sub
push
jno
out
push
push
lahf
cli
pop
adc
jl
or
test
iret
jo
sahf
jmp
dec
cmpsl
pop
fs
jb
aam
mov
dec
fisubrl
sub
jns
scas
inc
or
scas
rclw
xor
and
in
mov
ss
sbb
or
divb
pop
test
ja
jle
push
addr16
pop
mov
xchg
rorl
jns
out
pusha
push
fisubl
cmpsl
mov
xchg
mov
inc
cmpsl
shll
imul
pop
imul
xorl
ds
stos
jbe
loopne
push
jg
jmp
filds
add
mov
mov
cmpsl
xchg
aad
daa
mov
stc
dec
subb
push
adc
mov
out
dec
jg
clc
sbb
jmp
fdivl
or
mull
jg
xchg
pop
stos
mov
mov
pop
xchg
incl
shl
sub
nop
pop
mov
imul
pop
jbe
push
int3
pop
in
sbb
jl
xor
push
imul
lcall
rcl
cmp
pop
xor
sub
pop
inc
fistpll
xor
push
jo
out
je
imul
jge
ja
mov
les
mov
xchg
icebp
xchg
daa
sbb
inc
fists
aas
pop
jnp
adc
dec
std
dec
test
inc
loopne
cmp
cmpsb
and
pop
cmp
adc
jno
stos
stos
push
mov
fs
roll
ljmp
ret
roll
push
fisttpl
push
in
mov
pop
mov
xor
inc
lds
xchg
icebp
std
dec
inc
cmc
insb
aam
lret
fs
cmp
cwtl
sbb
popa
mov
dec
dec
inc
and
xlat
aas
jl
jle
test
push
lcall
aad
add
jbe
js
aam
into
sub
loopne
dec
jbe
jnp
push
pushf
dec
ja
push
repz
dec
daa
nop
add
pop
adc
bound
into
gs
and
bound
icebp
ja
stc
cmp
repnz
in
inc
jae
adc
jle
xor
dec
jnp
cmc
adc
das
push
cmp
adc
dec
cld
dec
cmp
lds
jbe
cmp
jae
and
adc
and
sbb
sbb
in
cltd
jge
xchg
sbbb
je
fbstp
pop
shl
push
frstor
inc
push
cmpsb
je
inc
bound
sarl
jl
mov
and
jl
dec
mov
add
jmp
jbe
in
ficoml
arpl
push
jns
jb
sbb
inc
cmpsl
push
popl
and
jmp
aad
in
inc
push
mov
clc
pop
hlt
push
push
int3
or
mov
data16
iret
fucomi
mov
dec
xchg
mov
outsl
jno
cmp
cld
or
sahf
jns
mov
out
inc
xor
mov
imul
xchg
sub
pop
sbb
mov
jno
push
mov
sub
push
xor
xor
dec
jle
int3
fwait
xchg
sbb
pop
jnp
pop
mov
int3
mov
jo
je
xlat
mov
out
call
adc
jae
or
jg
jl
cmp
sub
sub
sbb
sahf
jge
imul
jl
mov
add
sub
inc
and
inc
scas
fadds
push
xorb
sub
das
dec
ficoml
adc
push
dec
dec
out
movsl
out
jo
adc
imul
or
cmp
int3
fidivs
sarb
movsb
loope
fsubl
ja
mov
rcl
add
xchg
lret
in
push
faddl
cwtl
test
or
xchg
or
mov
gs
or
repz
mov
aam
pop
sub
pop
jg
xor
jne
ret
dec
adc
inc
orb
in
stos
insl
psubq
outsl
adc
mov
into
lds
lret
dec
test
dec
out
jbe
mov
adc
fnsave
lahf
xchg
pop
sbb
xor
or
push
in
in
movsb
repnz
inc
cmp
sbb
cmpsb
clc
ret
mov
dec
or
movsb
cmp
mov
dec
cmc
xor
jmp
mov
lods
je
push
fidivs
mov
mov
mov
mov
mov
pop
push
push
inc
jno
push
or
cmp
outsl
ss
incl
stos
call
xor
adc
push
imul
mov
xchg
cmc
mov
fisubrl
stos
inc
stc
mov
adc
push
int
in
imul
int3
xor
in
jle
lods
xchg
xor
xchg
faddl
rorl
jg
lahf
cmpsb
in
jns
pop
inc
nop
pushf
imul
pop
cwtl
push
adc
addl
fbstp
inc
adc
repnz
push
xchg
dec
pop
xorl
cmp
mov
adc
std
in
ja
dec
mov
cmp
jg
mov
int
dec
sub
dec
pusha
inc
xor
pop
jl
sub
in
pop
xor
push
pusha
jno
negl
jecxz
in
pop
stc
orb
popf
xchg
add
pop
lock
lahf
lods
sub
push
mov
ret
adc
lahf
mov
aaa
imul
lds
inc
mov
in
sbbl
pop
and
rorl
fdivl
push
arpl
shrl
mov
push
dec
je
jbe
outsb
and
mov
std
jno
pop
lret
jns
add
push
mov
inc
or
or
subl
jge
and
xchg
pop
xchg
xor
sbb
push
js
in
repz
push
mov
out
xor
in
pop
mov
mov
xlat
cmp
cltd
hlt
pop
popf
adc
or
repnz
sbb
shll
jle
mov
shll
dec
jne
sarl
cld
sti
sub
rorl
cld
sbb
mov
enter
outsb
sbb
dec
mov
lods
orl
push
dec
cmp
push
push
mov
imul
sub
add
imul
push
push
jne
inc
jl
sub
decl
push
lret
cmpl
les
add
dec
jl
repz
std
std
inc
test
jecxz
gs
mov
push
mov
jbe
out
mov
nop
fistl
dec
shll
dec
rcll
hlt
aam
aas
sbb
pusha
jg
mov
jb
loop
fcmovnbe
pop
jg
pop
and
push
into
inc
jg
add
cld
dec
dec
femms
mov
push
rol
push
add
jge
cmpsl
ja
jo
cmpsl
imul
js
mov
jae
jns
shll
lea
mov
data16
cmp
pop
mov
ss
hlt
add
loope
adc
and
mov
xor
or
sbb
sbb
lcall
push
inc
fistpl
int3
les
les
mov
stc
jne
ret
sbb
ficoms
cld
mov
aam
adc
out
adc
jl
push
pop
fcomi
jmp
ss
pushf
adcb
lock
and
mov
mull
mov
bound
sbb
es
lods
shll
inc
leave
pop
movsb
ljmp
sti
cs
fwait
mov
fnstenv
fisttpll
jae
sub
jae
shll
sub
stc
mov
fnsave
adc
dec
mov
and
jmp
cli
xchg
mov
mov
push
stos
pop
mov
sbb
dec
cmp
jmp
lahf
arpl
bound
sub
in
mov
pop
and
xchg
lods
cmp
mov
in
cltd
mov
push
mov
push
addr16
ss
scas
cltd
xchg
mov
hlt
dec
inc
dec
pop
std
mov
or
repz
cli
jge
inc
inc
test
repz
repz
sahf
sub
iret
mov
enter
cmp
mov
or
fnstcw
inc
outsb
fldcw
gs
repnz
mov
sub
fucomi
jl
insb
ja
subl
jmp
inc
int3
pop
mov
fcmove
mov
insb
aaa
out
adc
add
dec
ret
shr
jl
dec
decl
lods
push
cmp
ljmp
lock
cmc
ret
outsl
push
ljmp
daa
es
pop
dec
mov
out
pop
outsl
sbb
mov
pushf
cmpsl
and
and
arpl
adc
lret
fxch
lods
xchg
dec
movsb
gs
addr16
mov
scas
add
sar
mov
add
jae
shrl
and
cmpsb
aas
jae
test
mov
jae
es
mov
and
jmp
mov
rcrl
xor
out
lods
xor
xor
and
and
lods
out
in
lods
insl
out
ljmp
in
sub
stc
std
int
test
popf
sbb
push
mov
ret
push
inc
cmp
jae
inc
fstps
aam
pop
leave
fsts
mov
pusha
dec
dec
popf
mov
sarb
lret
push
add
fxch
call
ja
xchg
pop
call
ffreep
pop
je
cwtl
std
jge
mov
push
jle
jb
shlb
push
mov
jb
mov
popf
mov
rol
imul
in
push
or
inc
inc
mull
jecxz
test
out
rcrl
orb
jns
lahf
out
xor
pop
inc
inc
lods
sub
xor
cli
xorb
and
outsl
jnp
jno
lds
in
orl
xor
js
in
enter
shl
nop
sbb
mov
jle
lods
jecxz
and
xor
cs
fmull
and
jns
aas
inc
dec
notl
push
jne
dec
mov
std
outsl
out
ja
push
cs
cwtl
sbb
repz
dec
addb
dec
inc
mov
daa
insb
popa
or
jno
adc
int3
sbb
ljmp
test
mov
shrl
mov
mov
je
call
xchg
mov
dec
push
or
mov
es
adc
pop
dec
push
push
dec
push
pop
leave
xchg
lods
mov
adcb
inc
xchg
andps
add
stos
dec
push
nop
jp
mov
sbb
fstps
jp
mov
shlb
sbb
jp
mov
stc
outsb
sbb
stc
mov
je
mov
push
aad
mov
mov
sbb
dec
ja
sbb
dec
mov
rcr
mov
lret
inc
jne
mov
dec
dec
cld
in
inc
out
pop
mov
inc
cmpsl
add
orb
int3
lods
mov
sbb
cmpsb
jecxz
les
psrlq
mov
scas
in
das
std
cs
cmp
sub
xor
dec
and
cmp
jbe
addb
cmpl
imul
aad
shr
jno
sahf
mov
dec
rcrb
leave
inc
or
fildl
dec
jne
movsl
and
sub
popl
pusha
mov
push
mov
movsb
enter
lcall
mov
xchg
pushf
cmp
lea
inc
fcomps
sub
adc
dec
xchg
mov
cmp
movsb
sub
inc
cmc
in
sbb
mov
shlb
or
hlt
mov
in
xchg
lret
xchg
mov
int3
mov
or
inc
jmp
fiadds
mov
pop
sarl
mov
mov
and
pop
inc
dec
or
jp
mov
sbb
cmc
sub
mov
int
stos
mov
xor
xor
xchg
icebp
inc
sub
and
inc
rcrl
lret
sbb
repz
jmp
jecxz
fwait
inc
xchg
pop
rorl
int3
mov
stos
aas
mov
pop
rorl
jl
int3
je
mov
and
mov
pop
leave
pop
xchg
push
mov
jb
fcompl
imul
jns
lahf
call
cmc
dec
adc
jne
js
mov
xlat
std
ljmp
aas
xor
mull
scas
test
mov
push
ja
fucomi
in
xchg
ljmp
cmp
mov
lods
je
ja
and
and
decl
aas
int3
out
jno
sub
mov
sbb
pop
and
and
add
sub
in
mov
push
and
add
in
or
ret
fwait
ljmp
pop
repnz
xchg
ljmp
mov
sbb
xchg
fnstcw
jg
or
mov
mov
scas
adc
icebp
sti
shl
mov
inc
push
sbb
mov
sub
mov
ret
leave
jecxz
push
or
mov
and
xor
inc
adc
jecxz
cli
dec
popa
imul
adc
push
cmp
xchg
jo
insl
pop
data16
cmp
push
rclb
out
sbb
sbb
sbb
mov
js
inc
pop
inc
sub
jns
lea
into
jle
aam
sub
xchg
sbbb
cli
mov
scas
fidivl
pop
dec
insb
xchg
sub
push
pop
std
jb
in
in
cmpsb
addl
mov
jg
scas
mov
dec
jns
fmul
add
adc
aad
divl
xor
push
negl
aam
mov
sub
nop
or
inc
rep
push
sub
adc
or
repz
into
sahf
hlt
add
cwtl
les
inc
lcall
lret
sbb
cltd
xchg
xor
lahf
inc
push
push
add
fistpll
mov
sarl
aad
jb
sbb
cmp
jns
cmp
hlt
rorb
mov
jmp
mov
sub
push
insb
lods
std
or
jne
mov
inc
jns
dec
add
xchg
push
movsb
nop
loopne
mov
cmpsb
push
mov
push
fidivl
xchg
push
xorb
jecxz
dec
push
add
inc
stos
jp
pop
jne
inc
popa
sub
mov
xor
nop
sbb
aaa
jbe
cmp
fmul
in
mov
testl
push
into
cmp
in
sbb
int3
push
xchg
ja
mov
fidivrs
int3
mov
orl
dec
daa
iret
loopne
insb
cld
enter
push
or
inc
lods
jg
jge
dec
xchg
test
cld
cmc
lea
test
enter
pop
mov
pop
push
cli
popa
add
ret
insl
std
ljmp
enter
and
enter
jp
adc
pop
pop
add
enter
roll
iret
inc
pushf
mov
lret
xor
std
movl
sub
xchg
lock
mov
test
dec
adc
notb
sahf
test
inc
je
mov
ret
hlt
xchg
mov
sti
push
push
xor
jns
pop
cmp
dec
mov
push
test
xchg
cmp
js
mov
push
jae
push
dec
sub
sub
movsl
shrl
dec
add
push
dec
mov
push
sbb
sti
loope
sarb
push
pop
loopne
add
sbb
push
and
pop
push
jae
add
dec
dec
cmp
mov
inc
mov
jl
pop
shlb
dec
ss
adc
mov
sbb
arpl
xor
mov
ds
lcall
rcrb
dec
je
or
dec
test
repz
lock
pop
orb
rorl
mov
push
aad
in
xlat
std
fldt
pop
adc
movsl
sbb
gs
xor
push
push
fwait
adc
inc
mov
test
movsl
pop
add
lds
aaa
in
shll
sbb
int
jne
inc
dec
jecxz
jnp
jle
dec
lret
je
cmp
xchg
js
fiaddl
and
sbb
adc
push
xor
inc
mov
jmp
mov
push
in
push
jns
repz
add
and
mov
mov
jae
pushf
cmc
jbe
cmp
jmp
aad
aam
jne
and
mov
push
mov
dec
inc
and
pusha
es
je
leave
lret
stos
dec
mov
dec
hlt
lds
jle
mov
inc
enter
jnp
inc
aaa
in
shll
jbe
enter
std
jbe
ds
inc
mov
jge
mov
and
jae
dec
hlt
mov
aad
arpl
inc
mov
and
push
int3
and
ljmp
movsl
xchg
das
sub
jl
andb
push
and
or
repz
and
add
jge
aad
mov
cmp
adc
ja
aad
cmp
int3
or
dec
or
mov
pop
jg
cs
lds
and
fmull
int3
cmp
push
js
nop
add
arpl
das
jns
hlt
dec
pop
mov
dec
jnp
pusha
inc
int
or
cmp
and
xchg
dec
jmp
dec
mov
stos
jnp
je
dec
lds
test
jg
mov
add
push
push
aam
aam
sub
xchg
pop
cmp
and
leave
addr16
push
addr16
push
dec
jle
mov
repz
stos
cmp
clc
mov
ds
inc
adc
jne
sti
jbe
cmp
faddl
mov
xchg
ficomps
push
shl
xchg
pop
aas
dec
lret
pop
pop
sbb
dec
mov
push
dec
aam
cmpsl
pop
scas
jmp
mov
inc
pop
scas
mov
inc
adc
dec
stos
push
fistps
xchg
repz
and
add
push
andl
dec
cmc
daa
mov
cmp
and
aam
or
dec
dec
cmp
inc
jno
js
int3
enter
ljmp
sub
icebp
stos
repnz
std
in
scas
repnz
xor
add
jge
add
inc
jge
mov
pop
pushf
iret
inc
push
loop
xor
movl
mov
mov
inc
fiaddl
dec
clc
add
lea
jne
push
inc
decl
imul
js
js
jge
fyl2xp1
add
mov
jge
mov
daa
dec
fwait
cmpsb
add
cmp
or
ret
inc
mov
mov
mov
or
shlb
mov
gs
loopne
in
imul
pop
and
out
test
mov
ss
scas
lret
ljmp
pop
nop
sbb
pop
scas
push
jle
push
cmc
mov
mov
sbb
jp
fwait
inc
insb
mov
repnz
fldt
inc
jno
test
pop
movsl
lahf
lret
dec
orl
push
xor
sbb
nop
sbb
pop
sbb
mov
loop
mov
inc
cmp
adc
repz
fmull
inc
rolb
aas
test
lods
add
dec
out
rorl
add
rcll
and
xchg
add
ret
push
add
add
pop
adc
notb
test
leave
lret
lods
lret
push
cli
pop
mov
es
sub
fistl
xchg
add
or
xlat
mov
or
lods
jae
dec
xchg
fs
jo
movl
rcr
loop
adc
movsb
bound
shrl
ljmp
loop
mov
sbb
lods
call
cmp
shl
fsubrl
sahf
popl
fwait
call
mov
sbb
data16
imul
mov
stos
push
fnstcw
jmp
xor
out
or
out
cmc
mov
jp
mov
in
inc
jnp
cmp
mov
adc
adc
mov
fisttpl
out
iret
dec
je
inc
cltd
cld
rcll
xor
dec
daa
xor
in
xor
and
ficoms
fcmove
lcall
rcll
mov
lock
mov
inc
mov
jge
pop
and
jmp
jb
roll
xor
enter
or
mov
mov
idivl
pop
or
rorb
test
js
pop
out
adc
push
mov
or
mov
pop
and
in
sarl
imul
xor
cmp
and
push
jae
testb
sub
add
cmp
jmp
pop
mov
mov
sti
cmp
sub
jns
imul
or
add
fcompl
pushf
adc
mov
pop
aas
xchg
mov
xchg
dec
nop
mov
lret
adc
inc
sub
hlt
leave
pop
sub
idivl
pop
mov
mov
cltd
xchg
flds
add
mov
loopne
mov
sbb
sub
cmpsl
movsl
insl
pusha
dec
aaa
cmp
jmp
mov
xor
clc
mov
mov
inc
mov
or
pop
xlat
imul
leave
pop
sub
jnp
xor
mov
in
dec
jge
lock
mov
mov
mov
cmpb
cmp
mov
ss
shrl
xor
push
mov
orb
dec
in
outsb
mov
inc
mov
pop
jp
arpl
jnp
xor
mov
dec
inc
cs
jge
arpl
gs
in
pop
inc
and
rcll
sbb
mov
insw
loopne
test
filds
mov
dec
test
inc
push
in
aam
push
xchg
icebp
add
bound
jne
mov
jl
cmp
pop
stos
sahf
mov
rclb
mov
mov
and
rcrl
insl
lahf
mov
jl
lods
or
lret
push
jnp
add
test
xor
mov
xchg
lret
jl
ljmp
data16
in
loop
mulb
ret
pop
jae
push
imul
pop
dec
jle
test
repnz
js
imul
outsl
sbb
inc
ret
outsb
loopne
pop
mov
add
sti
sub
jnp
int
jl
in
addr16
or
push
or
jb
test
leave
dec
inc
in
imul
mov
or
pusha
sahf
es
ja
or
xor
fmul
ds
inc
icebp
loope
imul
imul
push
mov
jb
mov
dec
xchg
pop
cmpsl
mov
loopne
fs
adc
dec
jbe
sub
dec
mov
or
cli
jnp
inc
inc
ljmp
jnp
daa
cli
cmp
fistpl
stos
aas
dec
and
pop
cmpsb
cli
dec
movsb
and
in
push
cmpsl
xchg
idivl
mov
mov
js
mov
inc
adc
insb
xchg
jge
les
push
pop
aam
mov
es
lcall
dec
and
sbb
sti
or
push
test
ret
cltd
fidivs
addr16
xchg
fiaddl
rcrl
imull
jne
sbb
shll
jnp
pop
adc
or
and
lods
cmp
xor
cs
sub
sbb
inc
adc
pushf
out
mov
sub
out
pop
pushf
test
jp
sbb
mov
mov
cli
pop
jge
ljmp
xchg
mov
cmpsl
imul
lea
cmp
push
test
fwait
cltd
lret
push
push
and
sbb
enter
mov
dec
xor
aad
pop
testl
jl
or
icebp
inc
arpl
stc
dec
ds
mov
jge
mov
mov
loop
sbb
dec
lods
sub
inc
aas
roll
sbb
push
pop
xchg
cmpl
pop
data16
xor
pop
sub
in
pushf
inc
inc
jbe
cmp
fdivl
or
mov
adcl
jg
sub
std
pop
clc
push
mov
bound
sub
lcall
mov
lock
and
xchg
mov
shrl
out
xchg
push
inc
cmp
pop
icebp
cmp
xchg
jge
fcmovu
adc
sbb
test
xchg
in
aam
outsb
mov
inc
mov
pop
and
ja
mov
mov
dec
jnp
mov
adc
rcrl
pop
fidivl
jae
add
add
fiadds
inc
popf
inc
ds
jno
mov
pop
jne
pop
fcoms
mov
pop
aas
mov
jne
scas
pop
scas
repnz
mov
bound
icebp
dec
mov
jno
mov
cltd
imul
or
push
negb
adc
pop
loope
push
pop
insl
inc
scas
repnz
push
imul
rol
dec
sahf
pop
add
dec
adc
call
aaa
xchg
pushf
sub
inc
jmp
jae
aas
push
test
arpl
fisttpl
pushf
sbb
roll
test
push
mov
decl
sbb
mov
addr16
mov
scas
fnstenv
mov
shrb
jno
mov
test
sbb
movsb
pushf
shll
ja
add
jp
nop
stos
sub
adc
sub
jnp
jbe
pop
and
jnp
roll
icebp
mov
inc
mov
jnp
sbb
sub
xor
inc
push
mov
std
fsubr
gs
mov
push
sbb
cmc
jle
and
push
notb
push
xchg
popf
jns
and
cmp
int3
pop
stos
enter
dec
pusha
xor
shlb
jne
mov
push
jo
push
sbb
jecxz
sbb
sbb
loopne
push
clc
sbb
mov
in
dec
mov
mov
cmp
adc
cmpsl
loopne
ds
sbb
sahf
xor
fiadds
sti
cmpsb
dec
add
lods
in
inc
jecxz
nop
fistl
mov
bound
fbstp
push
and
imul
mov
addr16
push
cmpsb
mov
popf
ret
pop
jns
popf
add
lret
jns
add
xorl
mov
flds
imul
roll
pusha
dec
insl
jmp
inc
pusha
xchg
mov
jp
xchg
adc
loope
jns
scas
cmc
clc
sub
xor
cltd
mov
cmp
push
insb
xor
jb
pop
or
adc
jg
outsl
push
iret
popa
push
lret
dec
inc
pusha
jb
lcall
dec
pop
test
pop
sbb
sbb
movsb
jg
inc
mov
and
cmp
inc
inc
out
xor
mov
jno
mov
fcmovnb
and
add
fs
mov
or
xor
jno
lahf
inc
loop
push
out
repz
sarb
es
test
xor
fsts
dec
mov
in
add
jge
jg
mov
xor
jge
sub
xor
jns
enter
pop
inc
inc
and
cmp
fdivr
push
sbb
and
push
xchg
sbb
fs
imul
shll
cltd
pop
stos
push
jmp
rorl
cs
mov
dec
in
adc
dec
imul
nop
and
pop
mov
xchg
push
sub
ja
sti
mov
ret
lret
jno
test
mov
scas
mov
sbb
test
push
jge
hlt
int3
call
adc
sbb
push
insb
imul
inc
int
std
inc
fisubrs
add
push
das
sar
adc
into
adc
pusha
and
push
jae
fadds
mov
sbb
pop
xor
mov
jne
testl
cli
mov
sbb
pop
insl
mov
pop
fnstsw
pop
call
mov
fsts
orb
sbb
int
push
lret
or
inc
adc
mov
jmp
shll
pop
sbb
loopne
mov
es
xor
ret
mov
dec
cmpsb
ja
sub
ds
lahf
push
push
mov
lret
fwait
pusha
jb
movsb
xchg
int
das
lahf
out
movb
mov
inc
pusha
clc
mov
jno
jb
pop
dec
mov
jl
mov
push
mov
je
dec
push
mov
pop
xchg
mov
xorps
orb
std
jle
rorb
fstpt
and
sar
or
or
imul
sarb
add
repz
push
jnp
retw
sbb
mov
xor
mov
sbb
mov
sti
dec
xchg
mov
inc
clc
imul
add
orl
or
mov
or
outsb
and
aad
mov
fs
je
movsb
pushf
inc
fisubrs
arpl
jnp
lret
outsb
stos
jmp
aad
jbe
sbb
adc
aad
mov
imul
jmp
aad
mov
push
int
addr16
push
fcmovbe
sar
add
push
jo
daa
inc
leave
sbb
push
fstp
cmc
dec
aam
ficompl
inc
in
cmc
jge
pusha
sarl
inc
in
pop
mov
adc
add
inc
std
jbe
scas
imul
hlt
mov
dec
sbb
mov
dec
ja
into
ret
insb
adc
fsubrl
shl
dec
cmp
popf
outsl
ret
pop
mov
add
dec
addr16
fdivs
jge
ja
cld
dec
fstpt
xchg
into
aad
push
or
push
xor
push
jnp
or
hlt
jnp
int3
jne
lcall
pop
scas
and
inc
jmp
pop
lret
js
jp
pushl
and
lcall
rep
xchg
jmp
insl
in
jno
xor
pop
pop
mov
cwtl
fistps
sbb
lahf
mov
jbe
jecxz
fwait
test
dec
pop
jg
dec
adc
mov
inc
add
mov
idivl
pop
inc
clc
into
rcrb
and
and
xor
jae
loopne
pop
lret
sti
mov
repz
mov
scas
stos
xchg
pop
mov
pushf
cmpsl
lahf
mov
jle
inc
sub
icebp
and
into
sbb
pop
test
mov
fisubrs
cmp
mov
decb
pusha
loope
in
lret
adc
bound
pop
shr
add
adc
pop
int3
in
loopne
pushf
popf
cmp
pusha
push
pop
push
jmp
pop
lret
bound
fwait
inc
arpl
mov
dec
lret
pop
insl
and
mov
stos
xchg
sbb
mov
insl
push
xchg
jnp
and
sub
xchg
pop
stos
xor
popf
xchg
fcmovnu
inc
insb
mov
or
imul
fwait
addr16
push
std
adc
xchg
mov
pop
scas
pushf
outsl
in
std
dec
pusha
mov
mov
xor
lcall
arpl
cmp
pop
lcall
pop
mov
dec
pop
mov
fcomps
ret
cmp
add
xor
and
cmc
inc
xchg
imul
push
add
jae
pop
sbb
add
loope
pop
mov
pop
int3
cli
dec
scas
and
imul
sub
movl
sub
jge
pop
int3
popa
xchg
push
mov
jae
inc
or
dec
imul
jl,pt
pop
cmc
mov
mov
dec
mov
ja
subb
push
adc
xorps
jbe
or
mov
aam
out
lret
mov
xor
pop
sub
movsl
lret
jle
aas
stc
mov
xor
ljmp
and
ljmp
iret
push
sti
fbld
movsb
sub
inc
sahf
lcall
and
aaa
inc
repz
cmpl
dec
lret
xchg
loop
push
dec
mov
xchg
add
test
or
inc
je
push
pop
cmc
in
mov
sub
dec
cmc
xchg
push
pop
pushf
jg
sbb
iret
push
xchg
jg
adc
sahf
xchg
xchg
mov
cld
lahf
push
in
inc
ret
enter
pop
or
add
and
repz
arpl
sbb
sub
inc
push
imul
ljmp
push
sbb
pop
mov
shll
divl
inc
repz
dec
sub
or
jns
inc
mov
push
mov
xor
insl
sar
ja
imull
fsubrl
push
cmpb
lret
cmp
or
inc
loope
fisubl
pop
out
jbe
pop
ja
jg
mov
xchg
clc
push
cmp
fsubrl
je
push
adc
jae
adc
in
sbb
pop
icebp
mov
imul
xchg
in
pushf
add
push
sti
cmp
sarl
xchg
cltd
jge
add
jp
cmc
mov
cmp
shlb
sbb
inc
cmpsb
iret
jg
mov
cmpsl
xor
pop
fwait
lea
push
ljmp
popf
mov
mov
push
xlat
xor
out
repz
sahf
jno
push
xor
pop
mov
mov
sti
add
push
adc
iret
test
sbb
cmp
pop
cltd
jg
js
cmc
jnp
imul
mov
scas
mov
outsl
dec
aam
cmp
mov
in
inc
pop
and
out
sbb
cmp
cld
movsb
push
testl
into
pushf
stc
jnp
pop
jbe
jns
cmp
rcr
cmp
leave
mov
mov
mov
mov
mov
in
inc
mov
add
dec
xor
cmp
dec
in
mov
cmp
popf
repnz
mov
in
pop
stos
or
jmp
and
ret
pop
sbb
mov
inc
push
jg
mov
mov
fistps
lea
stos
or
mov
sbb
fwait
daa
mov
inc
pop
call
fcompl
stos
jns
jnp
arpl
push
outsb
mov
daa
jnp
mov
cmp
sbb
sub
mov
shlb
stc
jnp
gs
fimuls
leave
jnp
rcrl
cmp
ja
jnp
pop
jnp
push
inc
pusha
mov
addr16
into
pop
mov
sbbb
mov
sbb
into
pop
inc
jae
sub
pushf
push
pop
pop
pop
inc
in
sbb
xor
push
loopne
rorb
in
mov
aas
sub
jge
notl
pop
pop
dec
leave
rol
and
pop
aas
mov
jg
pop
fiadds
je
fidivl
cmp
mov
pop
fsincos
gs
adc
mov
and
in
jl
lret
enter
sbb
and
je
aam
lret
popf
or
jl
jle
nop
dec
jecxz
pop
decl
adcl
xor
fs
pop
mov
jnp
sbb
sub
lret
jl
dec
cmp
shll
mov
jl
inc
push
loop
push
ficomps
sbb
jl
mov
pusha
adc
jl
jmp
mov
inc
adc
fdiv
jnp
xor
jae
or
add
cmp
xchg
fidivrl
lahf
or
mov
mov
adc
jl
sub
ja
int3
cld
mov
and
sbbb
sub
jl
ffreep
lods
movsb
adc
jnp
fisttpll
fists
pushf
mov
mov
sbb
fcompl
in
sbb
push
cltd
lahf
add
sbb
or
xchg
int3
test
add
enter
adc
jl
icebp
test
pop
or
out
sarb
sub
xlat
or
dec
decl
lcall
push
fwait
and
fdivp
cmp
cmp
jp
or
leave
or
dec
dec
flds
ljmp
and
xor
sbb
fwait
push
into
std
fwait
cltd
dec
lret
out
dec
not
jge
mov
mov
pop
sbb
mov
and
into
mov
movsb
in
xchg
imul
add
pop
sub
sbb
mov
jecxz
pop
mov
mov
mov
pop
out
stos
out
sbbb
pop
in
dec
out
push
call
mov
mov
fmul
mov
pop
imul
sbb
std
je
fsubl
sbb
test
mov
cmp
mov
iret
xchg
imul
cmp
inc
cmp
mov
gs
jnp
lret
fdivrl
dec
xor
push
sbb
cmp
pusha
jns
sarl
loopne
mov
mov
iret
inc
daa
fsubl
cld
xor
sti
sbb
outsb
cld
loopne
xor
ss
xor
add
fwait
xor
sbb
in
mov
loopne
mov
push
push
xor
mov
arpl
jb
jnp
sahf
pop
xor
jle
movsb
das
xor
pop
dec
aaa
ljmp
fidivs
mov
fidivs
jge
add
jp
cli
mov
daa
rclb
addl
fwait
sbb
fldcw
ljmp
fdivr
mov
mov
jns
mov
fwait
push
into
mov
aam
cltd
pop
push
rclb
arpl
fwait
jnp
sub
pop
dec
mov
repz
adc
daa
pop
and
sbb
rcrb
sub
inc
jp
cmpsl
push
jnp
stc
and
sti
dec
cmp
movsl
lahf
pop
pop
xor
push
fdivs
int3
dec
cld
ja
and
jle
scas
pop
push
mov
sbb
sbb
cmp
sbb
int3
inc
cmc
push
out
cmp
cli
inc
mov
in
fdivr
mov
jae
dec
pop
daa
ljmp
test
pop
mov
fnstenv
ficompl
jp
push
jecxz
mov
mov
arpl
dec
jnp
xchg
jp
subl
and
sti
push
add
out
sbb
les
add
cmp
xlat
sbb
loop
lods
test
sbb
sbb
jno
adc
sbb
test
decl
pop
mov
outsb
pop
roll
call
adc
jmp
cltd
push
cld
dec
xlat
mov
out
inc
dec
sub
xlat
aam
test
sti
mov
inc
jecxz
push
dec
movsb
jbe
push
mov
jno
add
inc
xor
push
mov
daa
mov
push
sahf
ljmp
dec
fcomp
mov
mov
imul
mov
aad
pop
cmp
sti
pusha
ja
imul
push
lret
cwtl
jg
ret
pop
adc
sbb
js
inc
inc
test
jae
pop
xchg
fadd
sahf
daa
jne
mov
scas
inc
ds
mov
mov
sbb
sbb
jmp
dec
clc
rcrl
test
add
out
repz
daa
jg
mov
imul
push
adc
and
mov
mov
stos
jnp
idivl
addb
ret
cmp
lods
sbb
mov
xchg
cmpsb
jno
mov
dec
sbb
xchg
fwait
sahf
clc
roll
cld
dec
in
inc
sbb
rcll
inc
cwtl
jl
dec
push
imul
mov
sub
push
repnz
loopne
loop
mov
in
les
adc
push
add
dec
daa
inc
mov
jnp
mov
jno
mov
mov
insl
adc
mov
je
sti
popf
ret
sbb
pop
fstps
sbb
add
jg
movsl
lahf
jnp
sbb
adc
adc
call
jmp
imul
loopne
and
fnsave
adc
scas
dec
in
xor
mov
pop
inc
out
jnp
xor
or
or
into
icebp
sbb
ja
imul
fwait
sahf
cmp
pop
adc
stc
repz
fstpt
hlt
jp
fildll
popa
inc
test
inc
mov
or
jl
cmp
ljmp
mov
icebp
or
cltd
testl
shrl
int3
pop
clc
leave
imul
jge
cmp
leave
or
dec
dec
mov
adcl
mov
dec
sbb
call
mov
popf
dec
stos
mov
push
mov
dec
mov
ja
dec
cmpsl
cld
lods
jge
sarl
sub
sub
arpl
jnp
adcb
mov
jmp
ja
jg
pop
jl
lahf
xchg
imul
jg
lret
dec
jp
jno
shl
imul
fwait
jecxz
adc
je
cmp
rorb
xchg
adc
shlb
fidivs
mov
mov
adc
in
jecxz
daa
cmp
add
adc
pushf
jb
imul
inc
mov
mov
pop
cmp
aad
pop
aam
ret
jbe
pusha
loopne
leave
jl
leave
mov
jno
je
dec
bound
jl
xchg
inc
sbb
mov
sub
sbb
lods
fwait
jecxz
mov
gs
pusha
adc
and
test
sbb
jnp
lahf
cmp
testb
loopne
orb
lahf
push
xchg
mov
jl
aam
scas
push
jae
dec
mov
pop
jl
sbb
jne
jge
pushf
mov
cmp
or
jnp
imul
lea
fildl
lcall
loopne
push
mov
insb
inc
adc
inc
shr
push
pop
lock
sahf
inc
xor
xchg
inc
sub
jp
fcomip
test
sub
sbb
and
pop
inc
dec
arpl
inc
cmp
gs
jnp
mov
mov
jle
mov
pop
push
inc
imul
sbb
mov
add
mov
mov
shll
adc
idivb
xor
mov
or
add
dec
mov
mov
dec
cli
jmp
sub
jno
inc
imul
orb
and
je
jg
add
lahf
jne
pop
inc
test
mov
imul
pop
or
adc
or
and
push
jl
test
sbb
mull
test
dec
push
stos
test
dec
mov
imul
mov
inc
inc
repz
push
add
xchg
dec
mov
jae
cmpsb
mov
imul
lods
push
jnp
ljmp
pop
push
icebp
sbb
pop
jl
sbb
jge
std
jns
pop
xorb
ja
insb
mov
stc
lahf
movsb
dec
jl
sbb
repz
test
xchg
jl
and
push
inc
cmp
shlb
push
or
out
jg
das
jl
cmp
std
jecxz
push
pop
add
xchg
mov
jg
pop
dec
mov
test
imul
stos
xchg
dec
mov
adc
jmp
gs
pop
cltd
dec
jl
jmp
adc
daa
arpl
inc
imul
mov
sbb
popf
roll
cmp
adc
sbb
sbb
inc
ds
adc
cmpsl
or
fwait
sahf
jge
imul
pop
fwait
pushl
adc
frstpm(287
dec
xor
jl
hlt
push
cld
testl
fidivrs
dec
stos
inc
sbbb
dec
inc
fwait
ljmp
adc
push
jns
sbb
pop
adc
mov
shll
lods
lods
cmp
inc
pusha
orl
pop
lcall
mov
xchg
sbb
loopne
xchg
jne
mov
sub
xchg
add
imul
dec
mov
mov
jnp
pop
pop
jno
xchg
adc
sbb
fidivrs
mov
xchg
ret
imul
or
mov
movsl
sbb
jmp
daa
cmp
pop
jecxz
pop
pop
jnp
xchg
cmp
mov
push
inc
push
push
jl
cwtl
imul
jne
jg
je
or
out
cltd
fiadds
roll
jae
add
push
inc
push
lods
stos
jle
mov
mov
push
ja
inc
fwait
sub
pop
pushf
icebp
mov
and
xlat
pop
pop
jnp
xchg
cmp
sbb
cltd
sub
sbb
sbb
adc
int3
fistps
test
cmp
jge
nop
dec
cmp
inc
xchg
rcll
jl
fcoml
mov
icebp
sub
jnp
arpl
jmp
and
lret
inc
jl
jne
jge
nop
dec
cld
in
sbb
add
imul
dec
sbb
fwait
or
push
and
dec
out
mov
jl
sub
adc
jl
xchg
jmp
mov
dec
lock
pop
imul
or
pop
jnp
cmp
inc
mov
sbb
outsb
xorb
popf
adc
jge
dec
fisttps
jne,pt
data16
stos
jl
inc
test
cmp
add
jne
loop
pop
addb
jg
dec
adc
insb
dec
cmc
imul
sbb
sub
cmc
mov
mov
fwait
xchg
mov
aas
rolb
fidivs
cmp
add
pop
testl
cmp
or
leave
xchg
cmp
nop
sarl
cli
inc
nop
lock
xchg
int3
pop
test
jns
cmp
pop
inc
outsl
test
inc
xchg
je
inc
push
cmp
dec
or
pushf
outsl
int3
adc
adc
arpl
lcall
jb
push
sbb
cmp
cmp
jp
or
jge
or
push
cmp
or
inc
dec
fnstcw
mov
fimuls
cmp
mov
adc
in
test
jl
test
push
cmp
or
cmp
xor
jae
jl
daa
pop
data16
cmpb
sti
add
jp
mov
dec
dec
cmp
adc
mov
fidivrl
loopne
jb
out
mov
inc
mov
mov
je
out
pop
outsl
into
jmp
fmul
pop
adc
and
push
cmp
xlat
jl
imul
cmc
cs
mov
inc
xchg
mov
sub
and
sbb
jle
add
jp
std
mov
xchg
cmp
leave
fs
icebp
mov
sbb
push
out
cld
outsl
into
cmp
fadd
rorl
and
xlat
insb
and
pushf
in
fcompl
pop
cmc
mov
and
or
lcall
pushf
mov
jbe
ja
xchg
push
jp
subl
pushf
jnp
push
fmuls
and
xlat
jo
scas
push
cmp
mov
lods
fs
mov
outsl
in
mov
pop
sbb
roll
bound
outsl
cmp
jae
sbb
loopne
fs
adc
jnp
mov
mov
into
pop
mov
jge
data16
fwait
clc
adc
push
stos
fnstsw
cltd
xlat
push
in
repz
rol
imul
sbb
xchg
pop
adcl
jnp
movsl
imul
outsl
int3
mov
jno
sbb
inc
jns
lret
sbb
jle
add
ds
dec
mov
cmp
xchg
sbb
cmp
adc
sub
cli
outsl
lods
faddl
cmp
mov
jecxz
jnp
sahf
pop
and
cld
inc
xchg
fcompl
push
test
sbb
out
pushf
outsl
into
cld
jbe
data16
add
add
jp
mov
dec
dec
jp
ljmp
pop
pop
dec
jecxz
jno
fsts
inc
mov
out
cmp
push
jmp
jnp
cltd
dec
jne
cmp
dec
sbb
leave
jnp
addr16
pushf
push
dec
dec
sbb
ljmp
inc
pop
pop
cwtl
inc
jge
or
int3
leave
cmp
inc
shll
cltd
jge
add
jp
mov
dec
dec
cmp
xchg
fwait
subl
cltd
push
outsl
test
cmp
or
adc
jle
add
jp
mov
pop
add
cmp
jge
add
jp
mov
arpl
mov
add
jp
pop
bound
loop
jge
add
int3
cmp
ret
sbb
adc
stos
ja
cli
out
cmp
faddl
cmp
pop
std
mov
ss
adc
in
cld
add
jp
cmc
mov
stos
jns
cmp
or
pushf
clc
jecxz
sbb
dec
sbb
out
cmp
mov
dec
mov
sub
cmp
mov
aad
sti
push
adc
fnstcw
mov
lea
fdivrl
mov
clc
leave
jnp
mov
lods
mov
sbb
addl
sti
into
xor
repz
stc
inc
inc
mov
fstpt
cmp
pop
icebp
mov
clc
jae
test
inc
fistl
sarl
cmp
addl
pop
xor
jle
add
jp
mov
sarb
mov
in
pop
add
jp
mov
inc
pushf
add
fidivrl
dec
jl
leave
pop
mov
dec
dec
dec
mov
adcl
fidivrs
sub
cmp
in
sub
ja
or
cli
andl
pushf
fmull
pop
sub
xchg
cld
adcl
pop
mov
jge
cs
pushf
clc
cld
pop
jl
imul
jns
lcall
pushf
cmpsl
pop
jmp
adc
in
adc
std
mov
add
mov
and
call
mov
imul
sbb
jnp
push
out
jge
sbb
and
adc
in
sbb
pusha
mov
fidivrs
es
cld
je
dec
or
dec
mov
sti
xor
inc
jno
imul
cmp
inc
mov
fwait
inc
fcmovnu
cmp
or
pop
mov
cmp
adc
in
pop
faddl
inc
cmp
fwait
cmpsl
push
testl
jl
int3
mov
xor
and
sbb
pop
dec
sbb
dec
inc
dec
inc
sbb
movsl
xor
movsb
jl
and
dec
mov
imul
fucomp
push
faddp
addr16
mov
fwait
imul
pop
rclb
popf
mov
dec
loopne
lods
add
or
xor
push
mov
and
or
loopne
out
sarb
mov
push
mov
out
int3
ljmp
mov
and
sbb
fsubs
adc
xchg
jmp
sbb
cmp
sub
add
aam
rorb
arpl
pop
lret
xlat
inc
cld
fnstcw
pushf
jecxz
addr16
cmp
outsl
test
inc
xchg
in
fdivrl
lcall
mov
jecxz
jge
into
or
leave
mov
inc
stc
fistpll
arpl
fnop
ss
sti
add
pushf
adcl
jnp
inc
in
sbb
add
lods
mov
cmp
ret
and
imul
sbb
sbb
movl
in
mov
jl
sbb
jo
push
mov
sarl
adc
movsb
mov
jae
and
push
cmp
jge
movsl
jg
push
sbb
push
sub
ja
sbb
jge
nop
dec
fwait
in
mov
push
jl
mov
sahf
cmp
push
jne
dec
cld
push
lret
mov
jle
dec
jl
jl
repz
inc
jmp
cmp
cmp
add
icebp
mov
inc
sahf
stos
inc
mov
or
push
imul
dec
push
cmpsl
jae
xchg
sbb
cld
mov
popf
and
test
jge
xchg
pop
push
mov
sbb
mov
stc
rorl
adc
jnp
xor
mov
jg
pop
add
imul
push
out
push
adc
mov
and
test
pop
ljmp
jg
add
sbb
out
in
inc
adc
mov
sahf
mov
stc
jmp
clc
sbb
add
sar
std
mov
pop
mov
jl
shrl
daa
inc
mov
jnp
jne
jmp
imul
pop
das
cld
mov
dec
filds
fbstp
pop
or
arpl
inc
daa
insb
pop
jnp
lret
inc
shr
push
js
mov
adc
mov
mov
mov
mov
mov
dec
notb
imul
fisubs
imul
add
fiadds
sbb
jle
in
fwait
xor
cmpsl
imul
xor
mov
dec
out
push
mov
xchg
pusha
sbb
inc
test
mov
movsb
in
je
jmp
mov
add
in
sbb
mov
mov
push
insb
call
insb
imul
add
mov
mov
mov
mov
mov
jge
mov
adc
jg
das
jl
cmp
mov
pop
jl
or
imul
movsl
mov
sub
jecxz
aas
or
adc
add
sbb
inc
imul
sub
and
icebp
inc
mov
imul
fisttpl
fmull
leave
sti
adc
add
mov
test
std
mov
leave
jns
or
sarb
in
xchg
gs
dec
jl
das
rcrb
sahf
mov
xor
jl
fists
mov
mov
fstpt
pop
inc
jp
pop
jnp
sub
arpl
or
lcall
add
push
pop
xchg
cld
mov
push
cmc
mov
dec
mov
imul
inc
sbb
cmp
jmp
dec
repz
enter
mov
jge
pushf
mov
dec
dec
fisttps
ja
inc
sub
jp
fildll
jge
cltd
in
dec
xor
pop
inc
and
dec
jne
sub
aam
addb
mov
cwtl
lahf
add
gs
mov
filds
mov
or
imul
les
loopne
and
mov
jnp
or
lcall
mov
in
int3
test
decl
sti
sbb
mov
mov
nop
das
cld
mov
in
cs
arpl
or
test
or
cmp
mov
call
jle
mov
add
inc
and
inc
test
movsb
test
lret
fdivrs
inc
xchg
fwait
mov
pop
mov
insl
inc
inc
jmp
mov
stos
dec
ljmp
pop
push
add
dec
xchg
pop
jmp
jge
jns
mov
inc
jge
mov
shlb
push
mov
jg
sarb
pop
sbb
jne
fisttpl
repz
cmp
shrb
insb
inc
es
pop
mov
push
jmp
push
das
rolb
lods
xchg
xchg
shr
push
ret
jl
mov
cld
mov
jmp
sbb
and
rorb
pop
lret
aas
dec
mov
inc
gs
jnp
or
push
in
stos
jno
inc
lret
stc
jl
int3
je
dec
sbb
imul
xchg
mov
mov
mov
inc
sbb
adc
hlt
ret
mov
mov
ret
jge
mov
add
scas
sbb
or
mov
aam
shlb
out
hlt
sub
and
pop
inc
lods
mov
sub
ja
rorl
jecxz
mov
pop
ljmp
jl
leave
push
imul
cld
mov
lea
stos
add
or
ja
pop
movsb
push
sahf
ficoml
jns
push
jge
pop
push
xchg
mov
jno
int3
mov
negl
jp
aas
fs
sahf
sbb
xchg
arpl
pop
loopne
sbb
xor
or
jnp
mov
mov
mov
fs
or
cmp
in
sbb
fstpt
cmp
sub
cmp
ret
jp
pop
cli
es
jmp
pop
cmp
xchg
faddl
mov
dec
mov
sub
inc
mov
fstps
mov
pop
mov
pop
jne
cmp
int3
pushf
clc
leave
pop
pushf
mov
mov
push
sbb
inc
mov
fwait
dec
pop
das
sub
cli
out
cmp
fidivrs
outsl
dec
sbb
inc
mov
pop
jns
xchg
mov
mov
int3
cmp
arpl
cmp
test
inc
xchg
cld
sbb
pushf
jno
jbe
cmp
dec
cmp
leave
cld
pushf
mov
test
push
jp
addl
dec
adc
dec
inc
mov
sti
inc
mov
sub
cmp
mov
fidivrs
push
push
dec
dec
dec
sbb
xchg
mov
jmp
push
dec
cmp
xchg
pop
adcl
push
sarl
cmpb
jl
cmp
in
shll
cmp
inc
sbb
jle
lods
mov
stos
jns
and
test
mov
push
sbb
adc
in
fwait
sbb
loopne
addr16
xor
call
shl
lcall
inc
and
jecxz
jmp
dec
mov
nop
lcall
jns
jmp
rorl
shr
iret
jns
pop
cmp
fistpll
ffreep
gs
ljmp
or
popf
lahf
jns
dec
fimuls
jns
mov
adc
sti
test
stc
jmp
pop
sub
mov
pop
inc
jno
mov
jge
jg
lods
sahf
mov
jg
outsl
mov
cmp
jns
mov
pop
cld
pop
les
push
and
rclb
std
add
mov
rorl
test
hlt
cwtl
cmc
cmpsb
ret
stc
les
push
xchg
jae
aaa
cld
jp
mov
adc
pushf
push
inc
sub
ss
lea
jae
xlat
hlt
pop
jmp
cmp
sahf
push
ret
mov
pop
imul
jg
sbb
setl
insl
lds
pusha
lea
jae
iret
cmp
pop
mov
pushf
jnp
pop
jl
pop
aam
mov
push
frstor
fisttpl
add
jae
mov
jns
adc
sbb
push
mov
push
std
orl
inc
in
add
frstor
mov
mov
lods
adc
adc
pusha
shl
inc
imul
cmp
in
daa
fsubrp
sarb
mov
fistpl
arpl
pop
jae
cwtl
pushf
icebp
mov
dec
fildll
jecxz
jbe
jne
ss
adc
jnp
loopne
popf
xchg
dec
in
cmp
or
in
aas
ja
mov
ljmp
out
sbb
les
daa
jnp
sti
sbb
in
ret
dec
jbe
ja
in
insl
push
mov
xchg
jp
or
jp
and
adc
mov
cmp
lret
xor
mov
adc
and
push
mov
das
dec
jmp
push
dec
cmc
and
pop
incl
mov
cltd
leave
bound
and
push
mov
push
dec
imul
dec
jne
jge
xor
pop
clc
cmp
jp
into
lcall
divl
pop
ret
mov
or
fistps
pop
repnz
or
dec
stc
xor
xor
mov
aad
clc
dec
dec
jbe
shl
in
sbb
icebp
fstp
pop
and
dec
adc
xchg
fisubs
jle
sti
xor
pop
cld
xor
hlt
mov
xchg
dec
pop
push
dec
out
pop
test
icebp
lods
pop
movsb
pop
jae
or
inc
test
idivl
mov
lock
fcoml
pop
sbb
inc
dec
dec
cltd
loop
mov
cli
pushf
push
push
in
icebp
sub
sbb
jo
jle
jg
fidivl
aas
outsl
sub
cltd
repz
mov
xchg
gs
xor
push
and
inc
fstl
lret
push
xchg
testb
inc
xchg
inc
push
mov
or
adc
cmp
adc
test
or
xor
rorl
pop
or
pop
stos
rcrl
xor
cmp
and
out
notl
stos
out
push
mov
inc
arpl
fs
push
jns
jnp
cltd
mull
cltd
jnp
mov
inc
mov
or
adc
lods
dec
mov
mov
hlt
out
dec
hlt
jg
and
sbb
aad
mov
or
jo
cmp
lds
push
mov
pop
sahf
fs
test
mov
pop
or
inc
sub
negl
repnz
push
lods
and
js
adc
push
cltd
scas
jo
cmc
xchg
xchg
aad
inc
xor
xchg
xor
cld
mov
push
xor
add
or
push
inc
cmc
fmull
mov
mov
push
mov
mov
mov
pushf
push
mov
adc
arpl
pop
push
jns
and
je
jne
mov
js
jle
movsl
adc
cmp
pop
testl
fcmove
aam
xchg
push
fidivrs
fildll
leave
aam
push
and
xor
add
sub
inc
dec
mov
mov
test
out
aad
or
in
jl
fs
stos
dec
int
out
loope
sbb
mov
dec
enter
repz
xchg
mov
stc
test
mov
ja
add
mov
iret
jnp
lcall
mov
in
mov
add
push
cmp
or
lods
or
jl
dec
lds
inc
fistl
push
mov
sbb
and
jg
nop
mov
cmp
add
jmp
push
fs
insb
push
je
jl
inc
sbb
pop
push
jb
sbb
int3
mov
insl
xchg
inc
fwait
pop
shl
sbb
sti
xchg
ret
aas
lret
insl
sub
pop
shrl
dec
dec
lods
test
mov
in
insl
xor
cmp
roll
dec
mov
pushl
stc
cmc
cmp
jae
jge
xchg
and
lret
mov
jge
ror
mov
scas
add
and
mov
adc
xchg
lahf
and
and
cmpsl
adc
or
rcll
aam
and
mov
shrb
adc
mov
pop
mov
cmc
add
pop
jmp
out
fs
mov
or
fildll
pop
imul
sub
add
mov
inc
pusha
pop
outsl
sub
or
arpl
push
add
push
jb
jle
daa
xlat
jg
cmp
add
push
jae
inc
add
pushl
cmp
ret
sbb
pop
mov
mov
push
dec
push
mov
call
dec
dec
out
ds
mov
fcompl
xchg
inc
push
adc
aad
ss
xor
xor
dec
nop
mov
mov
mov
int3
icebp
cmp
xchg
fs
jo
shrl
cmp
mov
or
notl
xor
sub
add
push
add
mov
dec
xlat
or
insb
out
push
test
shrl
cmc
inc
repz
in
gs
xlat
lcall
dec
cs
mov
xor
or
sub
dec
fnsave
sbb
and
sub
push
sub
inc
enter
popa
into
dec
push
sarb
dec
int3
fldl
out
jno
imul
inc
sbb
jg
xchg
andl
aam
repz
int
mov
add
rorl
adc
mov
repz
fistpll
les
mov
jp
outsb
jmp
insb
out
add
adc
jp
aam
dec
sbb
mov
test
push
ljmp
dec
and
jl
ljmp
ds
pusha
xchg
push
adc
mov
mov
movsl
jns
and
add
in
shlb
xchg
inc
mov
inc
lcall
mov
sti
jne
std
clc
inc
imull
sub
out
imul
or
outsl
inc
rol
jnp
and
mov
movsb
or
and
adc
mov
jne
mov
pop
xor
mov
and
stos
dec
mov
repz
in
or
or
mov
cmpsl
lock
pop
imul
cltd
dec
sbb
mov
push
in
fisttpl
inc
in
sub
clc
in
enter
cli
mov
mov
mov
mov
push
pop
lock
lret
icebp
stos
loope
cld
xor
icebp
ret
testl
in
mov
test
loopne
push
jmp
stos
out
or
push
xor
dec
lret
xchg
dec
mov
adc
jmp
fistpll
jg
mov
roll
jle
call
ljmp
imul
mov
mov
pmulhuw
xlat
aam
mov
sub
sbb
dec
jo
hlt
inc
jl
dec
add
mov
pop
jne,pt
dec
add
loopne
cmc
lock
fldt
inc
mov
insb
aaa
jbe
rcll
lds
xchg
sub
aaa
fidivl
push
pop
hlt
jl
pop
mov
mov
repnz
inc
jg
dec
jno
scas
add
cwtl
repz
popf
jle
mov
fs
adc
dec
and
mov
xchg
mov
push
in
rorl
push
outsl
adc
and
pusha
imul
xor
js
out
sbb
int3
jecxz
repz
mov
insl
pop
xlat
in
lds
lods
std
ret
mov
sbb
sub
mov
ret
and
mov
sbb
jnp
push
push
jge
pop
imul
clc
outsb
pop
xchg
ljmp
mov
mov
jg
stos
es
inc
inc
jno
scas
out
ljmp
scas
and
fisttps
mov
scas
aad
and
scas
aaa
scas
mov
pop
loopne
mov
mov
jecxz
jge
mov
repnz
cmp
int3
negb
lret
adc
mov
adc
mov
sahf
sbb
sub
mov
push
lods
pushf
and
adc
dec
es
call
lock
repz
lahf
int
repz
add
and
sub
xorl
sub
pop
sub
movb
aaa
dec
pop
xor
dec
test
es
dec
mov
mov
push
cmp
jns
mov
dec
fiadds
fimuls
out
into
mov
add
xchg
push
shlb
bound
shl
jle
add
push
mov
adc
jge
push
jnp
mov
jo
incb
xchg
jl
mov
imul
mov
pop
pop
sub
push
popa
xor
mov
xor
xor
idivl
addb
insl
mov
xor
ror
mov
jge
xchg
push
jge,pt
sarl
fidivrl
mov
mov
scas
jnp
push
mov
push
dec
dec
mov
inc
push
ja
jecxz
cmc
or
outsl
pushf
mov
fadds
aam
jg
loop
fdivrs
inc
xor
sbb
or
jnp
cmpsb
rclb
loopne
xor
sbb
xor
jmp
stc
int3
add
ss
sub
lods
sti
pop
dec
pop
ds
insl
repz
movsb
pop
sbb
imul
inc
sub
inc
jle
je
inc
mov
shl
stc
cli
cmpsb
pop
sbb
sub
push
xor
mov
push
das
lcall
mov
adc
cmpps
pop
loopne
fwait
sub
inc
and
adc
andl
jno
daa
push
rcl
int3
rcll
gs
sbb
sarb
shlb
vpclmulqdq
jmp
fistl
sarl
cmpsl
lret
mov
mov
xchg
mov
add
sbbb
test
je
lret
outsb
inc
inc
inc
mov
loope
mov
push
loopne
fwait
out
stos
hlt
mov
cs
mov
adc
inc
xchg
hlt
fwait
inc
jnp
ds
dec
inc
jnp
sub
dec
inc
ja
dec
fimull
push
test
and
cmp
adc
dec
push
push
imul
pushf
adc
iret
in
imul
decl
sub
mov
mov
inc
and
sar
stc
sar
std
fisttpll
add
and
mov
sub
fsts
daa
push
or
in
push
jmp
jg
dec
jae
fcmovnbe
dec
shrd
inc
push
inc
dec
repnz
das
dec
xchg
xor
test
mov
nop
out
out
sbb
aaa
mov
inc
rclb
lahf
clc
mov
cmp
add
scas
jle
xor
sbb
gs
nop
inc
fs
dec
jns
xor
ror
pop
pop
push
inc
gs
and
sbb
cmpsl
faddp
dec
test
arpl
subl
mov
pop
fwait
std
mov
mov
xchg
out
mov
popl
enter
pop
push
sub
mov
je
lcall
add
inc
out
lods
sarb
popa
sub
push
repz
lods
lret
add
cmp
mov
jo
cmpsl
ret
push
sbb
rcr
cld
jbe
push
mov
rorl
fbld
add
pop
push
push
lods
daa
push
dec
mov
sbb
nop
ja
fldenv
push
aam
pop
mov
rcrl
hlt
dec
push
ret
jecxz
loop
loop
insb
mov
in
xor
je
dec
adc
sbb
movsb
adc
or
inc
mov
sbb
popf
or
jne
add
shrb
pop
arpl
sbb
loop
add
shll
and
fstl
cmp
aad
cld
je
cmp
mov
std
sbb
daa
insb
push
shr
inc
pop
adc
test
cmp
out
cmpsl
xchg
call
dec
inc
std
ds
push
mov
das
mov
sbb
es
or
stos
push
sti
jns
fstpt
jne
fidivs
inc
add
fiadds
sub
and
add
add
out
inc
inc
sub
jno
and
sub
sub
add
gs
out
inc
fildll
jno
sti
push
daa
xchg
sbb
jge
inc
orl
jae
and
fldl
cmp
sahf
dec
fsubrs
and
fwait
add
add
or
add
sbbb
mov
pop
inc
adc
shll
sub
in
fneni(8087
push
in
std
cli
popf
xor
dec
mov
adc
arpl
jb
outsl
mov
addb
fabs
inc
xor
std
insl
inc
mov
stos
mov
xchg
cmpsl
pop
jne
sti
popf
push
inc
aad
pop
mov
in
sbb
fcompl
jmp
dec
scas
xchg
inc
pop
insl
jl
je
dec
sbb
fs
pop
testl
outsl
mov
movsl
sbb
push
out
aam
add
fisttpl
sbb
sub
insl
mov
sub
push
xlat
push
or
xchg
iret
sub
fists
adc
movsl
sub
in
add
ja
repz
and
lods
sbb
int3
push
sti
sbb
xor
push
rcrb
loope
add
jnp
test
mov
jle
jle
or
std
xor
jnp
insb
xor
pop
dec
mov
lahf
iret
dec
mov
out
bound
mov
popf
jns
insb
lret
xor
stos
jecxz
stc
hlt
nop
pop
fs
sbb
push
mov
sti
mov
dec
addb
rcll
mov
inc
and
mov
mov
or
xlat
jmp
adc
mov
loop
push
ffree
int3
repz
pop
jp
mov
and
iret
stc
rorb
and
lcall
fwait
jle
sar
mov
xchg
xor
int
aad
les
sar
or
shl
pop
fwait
in
loop
shll
repz
outsb
popa
shr
pop
push
jns
lods
icebp
jp
or
push
lret
jnp
sbbb
jl
dec
pop
sub
lret
sub
fisubrs
pop
sub
dec
pop
jge
xor
fcomps
mov
dec
lcall
cmp
and
pop
dec
cmp
jg
sub
scas
and
dec
adc
sub
and
fadd
inc
jg
sub
and
cmp
jge,pt
sub
sbb
lret
mov
push
mov
cli
xchg
test
scas
sub
mov
or
jp
jmp
jl
int
sub
dec
pushf
mov
jp
mov
mov
xchg
arpl
inc
lds
lods
sbb
mov
dec
jmp
sbb
mov
mov
out
addr16
sub
dec
je
inc
out
ficoms
sub
jne
sbb
push
jno
int3
pop
loopne
mov
mov
or
insb
add
sub
jnp
in
test
nop
icebp
gs
push
mov
mov
nop
pop
fists
sub
push
pop
sub
xor
mov
add
sar
pushf
jno
inc
push
repnz
mov
cmp
sub
shll
mov
mov
std
cmp
xor
xchg
adc
dec
inc
and
mov
rorb
in
or
rolb
adc
jg
sbb
les
cltd
dec
ja
int3
push
inc
mov
jge
testl
daa
jl
adc
loope
in
fwait
sbb
loop
fsts
dec
pop
jnp
or
arpl
mov
sbb
xchg
pushf
cld
mov
stc
mov
flds
push
sub
roll
and
mov
pusha
push
sub
repz
hlt
fildll
dec
nop
hlt
stc
inc
dec
imul
mov
fs
adc
adc
icebp
lods
je
mov
xor
popf
mov
cmp
shl
lahf
dec
and
push
mov
bound
jge
mov
rorl
jnp
mov
mov
stc
jmp
lahf
jae
dec
xchg
push
rcrl
pushf
mov
add
bound
add
sbb
or
roll
pop
filds
gs
ret
aad
idivl
jns
mov
das
mov
repnz
mov
sub
dec
adc
jb
cmpsb
jnp
mov
cmp
push
icebp
lods
lcall
pop
lcall
mov
ficompl
and
mov
popf
int3
jnp
fisubs
lahf
psubusb
mov
cmpsl
adc
lods
mov
ds
cmpsb
jl
cmp
in
nop
xchg
cmpsl
lcall
mov
push
jg
mov
mov
jnp
jge
int
rcrl
xlat
rcll
add
inc
sub
or
lahf
mov
mov
daa
sub
nop
iret
or
jg
rcll
xor
inc
xor
mov
orl
xor
out
nop
stos
hlt
inc
sbb
ret
sbb
loop
push
add
xor
pop
mov
mov
add
lret
and
ror
jge
pop
dec
add
push
push
movsl
mov
int
scas
movsb
push
dec
in
dec
cmp
in
inc
and
cmp
bound
scas
mov
mov
stc
mov
mov
and
out
jae
bound
jno
pop
xlat
xor
enter
mov
inc
inc
inc
mov
lds
push
test
fbstp
fldt
push
clc
popa
jns
xor
ss
out
imul
jle
lahf
lods
movsb
pop
jmp
inc
push
imul
xor
mov
mov
cmp
jg
dec
adc
dec
mov
dec
ss
jne
sub
sti
mov
dec
insb
shll
roll
dec
sub
push
mov
loope
sub
push
adc
sbb
adc
jno
xchg
push
push
cmpsb
cld
sub
in
mov
mov
cmpb
mov
inc
enter
pop
lea
pop
xchg
imul
mov
lods
arpl
mov
jo
sub
add
pop
jo
jmp
cmp
mov
jp
imull
push
pop
and
fldt
add
adc
push
sbb
cmc
push
ds
ret
call
and
inc
push
pop
addr16
and
ja
add
imul
lds
and
test
adc
sti
divb
fstpt
testl
or
ffreep
push
jmp
ljmp
jnp
pop
inc
mov
cmp
dec
inc
loopne
out
jl
mov
pop
aad
mov
xchg
jns
sbb
push
cwtl
mov
loop
sbb
mov
fiadds
sbb
pop
sub
or
lret
loopne
andl
gs
mov
xchg
call
mov
sbb
mov
sbb
dec
pop
in
ret
lods
daa
into
xchg
sub
inc
inc
jbe
sbb
sbb
aad
xchg
jno
and
loop
ja
or
push
fisttpl
or
jecxz
xchg
fldt
stos
fs
jnp
imul
std
sub
sti
hlt
and
adc
push
imul
mov
jge
aam
mov
jno
push
rcl
jae
dec
and
les
outsl
divl
fimull
testl
and
jno
lea
mov
outsb
por
inc
xlat
fwait
adc
into
test
in
inc
mov
test
aam
scas
xor
push
push
les
mov
mov
sub
out
daa
push
call
dec
dec
sbb
push
sbb
and
test
stos
cmpb
sahf
mov
jg
sub
flds
cld
sbb
pop
mov
xchg
xor
xor
mov
add
or
popf
add
push
mov
push
sbb
mov
loop
sti
lcall
lahf
test
daa
clc
iret
mov
std
icebp
loop
call
je
mov
ja
addr16
mov
shlb
aas
cmp
sub
push
bnd
sbb
inc
test
xor
jno
push
cwtl
push
mov
adcl
jg
stos
xchg
mov
lahf
ja
pop
andl
jmp
inc
jp
mov
mov
ds
adc
sbb
ja
shll
inc
push
sarl
inc
pop
outsl
jp
fsubs
mov
push
icebp
mov
push
add
lods
fsubrs
push
dec
and
inc
cltd
dec
push
daa
test
adc
xor
mov
daa
or
and
mov
repnz
sarl
or
data16
jecxz
push
push
add
jae
xchg
mov
xor
adc
out
daa
and
adc
push
cmpsb
imul
cmp
mov
out
gs
sbb
sub
mov
lods
pop
cmp
mov
test
mov
mov
cmc
xor
xor
fwait
aaa
xchg
scas
sbb
xlat
mov
std
mov
out
shrb
jg
mov
std
sub
and
cmp
adc
ds
ret
imul
imul
jl
test
ss
out
mov
hlt
lret
mov
mov
jno
ja
jno
adc
push
addb
push
lahf
add
inc
jae
sbb
cwtl
jp
shll
lret
cmp
mov
sbb
xor
cwtl
lds
add
or
rcrl
push
jp
decl
outsl
jl
ret
inc
add
fnstsw
int3
js
push
aas
int
adc
aad
xchg
andl
jp
ja
cmp
ljmp
add
in
inc
in
jp
cmp
rcrb
mov
mov
in
sbb
pushf
add
add
aas
pop
fndisi(8087
les
test
sbb
push
sti
xchg
adc
mov
inc
sbb
test
ss
fstl
out
push
stc
std
negl
inc
xchg
pop
pop
adc
in
lock
and
lcall
in
xchg
add
out
sbb
outsl
jns
pop
pop
jae
je
lock
ud2
ss
or
scas
out
sub
xchg
sbb
mov
push
andb
jl
dec
dec
adc
aad
or
or
repnz
mov
std
incl
push
xchg
jnp
cmp
es
cmp
mov
push
enter
lahf
mov
das
aad
fwait
inc
pop
jl
dec
sbb
hlt
stos
jns
add
sarl
xor
jmp
push
lods
xor
decl
fcoml
pop
out
daa
and
xchg
inc
mov
decl
mov
ljmp
orl
clc
mov
cmp
xor
inc
mov
popf
add
jno
inc
scas
pop
fisubrs
mov
loop
lock
dec
xchg
loopne
dec
jg
fs
or
mov
out
addr16
cmp
cmp
scas
call
mov
mov
push
xchg
fldl
sub
jnp
sti
std
mov
xchg
push
mov
add
add
sub
rorb
inc
dec
jne
call
sbb
sbb
out
jge
cmp
imul
mov
sub
rcll
jne
test
push
js
addl
inc
xchg
mov
mov
out
out
mov
push
xor
jecxz
jnp
imul
lods
adc
adc
arpl
pop
and
scas
mov
movsb
jne
jbe
or
jecxz
mov
scas
int3
loopne
in
subl
jnp
and
xlat
insl
mov
mov
or
mov
jae
pusha
test
sti
push
mov
aam
xorb
addl
sarb
scas
pop
inc
push
cwtl
push
sbb
jmp
push
scas
mov
push
pop
pusha
mov
int3
sub
cmp
or
fsubs
mov
leave
push
jl
inc
xchg
loop
negb
cmp
int
and
adc
sub
roll
movsb
aaa
mov
mov
jge
imul
inc
imull
mov
mov
test
push
xchg
or
into
hlt
clc
sbbb
ss
ja
cmpsb
xor
pop
rcrb
push
in
cltd
imul
mov
push
cmp
fsubr
adc
dec
pushf
out
popa
data16
std
add
lcall
imul
into
mov
jo
cmpsb
fwait
adc
stos
icebp
inc
mov
sbb
fcomi
gs
gs
jno
stos
pop
ja
push
pop
sbb
push
mov
or
xchg
mov
xor
pop
mov
addl
mov
iret
lret
js
scas
popf
fimull
mov
in
lock
mov
sbb
cwtl
dec
movsb
arpl
leave
jae
push
in
xchg
xor
inc
les
cmp
scas
je
testb
dec
jns
orb
call
out
loop
out
popf
dec
dec
dec
cmp
pop
lea
inc
mov
push
lock
jnp
push
mov
inc
pop
lock
test
mov
mov
imul
mov
mov
xchg
push
les
mov
mov
push
jge
xor
out
stc
test
add
inc
popf
pop
leave
mov
dec
push
pop
pop
stos
sbb
xor
test
mov
xchg
mov
inc
push
pop
pop
sbbb
ffreep
push
pop
lret
push
and
push
daa
mov
jmp
lret
push
cwtl
dec
xchg
jnp
mov
push
sbb
jle
and
sbb
push
aas
data16
cmc
fwait
int3
sahf
jnp
mov
cmp
lods
inc
fwait
xchg
mov
cld
loope
lods
dec
xchg
adc
adc
mov
xchg
sub
ljmp
add
xchg
jb
aam
mov
sub
imul
xor
out
dec
aad
sbb
xor
lahf
mov
iret
fldl
mov
sar
icebp
dec
mov
rol
filds
sub
lock
jge
popf
xor
and
into
in
jg
ret
push
pop
cmp
cs
sahf
xchg
fwait
cltd
jmp
cmp
aam
pop
sbb
adc
and
lcall
cmpsb
hlt
std
in
add
pop
and
mov
or
push
inc
push
ret
pop
xchg
call
movsb
push
dec
xor
cmpsl
mov
out
inc
in
roll
hlt
jnp
rorb
xor
fwait
add
push
movsl
addr16
loopne
push
rolb
mov
sub
dec
ljmp
mov
adc
xchg
lret
xchg
outsl
adc
inc
adc
test
repnz
sub
jmp
iret
test
mov
scas
sub
stos
mov
scas
dec
test
mov
jmp
cmp
js
ja
push
imul
int3
jnp
out
insb
xor
pop
in
jbe
fcmovnb
divb
mov
fwait
gs
push
add
in
pop
dec
pop
mov
jbe
jae
push
dec
ror
mov
cmp
jae
inc
out
testb
and
pop
cwtl
jl
cld
cld
fwait
push
jmp
ds
dec
mov
out
insl
jp
sbb
jmp
pop
sahf
xor
rcll
mov
dec
push
pop
jge
cmpsb
aam
imull
sub
cmc
cmp
clc
loopne
rclb
inc
adc
cmpsb
outsl
dec
push
mov
pop
mov
mov
jmp
fs
xchg
adc
sbb
dec
clc
mov
imul
mov
mov
insb
in
in
scas
jbe
ja
xor
flds
repz
cmc
out
push
hlt
push
outsl
jecxz
lcall
mov
test
xor
xor
call
sti
jg
fwait
gs
xchg
out
or
or
inc
mov
gs
pop
jae
iret
add
icebp
test
fisubrs
sbb
ficoml
aad
nop
or
pop
decl
cmp
jns
lret
inc
mov
cmp
dec
clc
pop
cmp
mov
shlb
add
mov
in
in
xor
repz
inc
dec
inc
dec
inc
mov
mov
ss
pop
inc
push
std
mov
push
inc
sub
mull
iret
xchg
popa
jno
shrb
aam
jno
push
stos
mov
sbb
push
add
test
add
pop
jp
cmpsb
cmp
cmp
and
xchg
fmulp
dec
pop
sti
mov
and
xchg
loop
and
rcrb
push
sbb
pusha
jnp
mov
xlat
mov
stos
dec
adc
pop
icebp
mov
or
stc
out
mov
mov
mov
pop
loope
imul
fidivs
sahf
sub
dec
mov
gs
jns
rolb
pop
jno
push
mov
push
or
xchg
cli
mov
jecxz
pop
jmp
ret
inc
testb
mov
aam
iret
mov
subb
shlb
jno
orl
cwtl
adc
jnp
mov
or
fists
xlat
repz
or
adc
mov
push
jae
adc
imul
leave
leave
aam
xlat
scas
or
sbb
mov
pop
or
mov
jge
push
push
push
xchg
jge
movsl
inc
dec
insl
inc
and
ljmp
pop
test
sti
icebp
add
jg
test
lods
push
fstps
lds
sub
push
lea
sti
xchg
sarl
lods
push
lcall
sbb
mov
movsb
mov
hlt
adc
inc
negl
imul
pop
test
push
cmp
inc
add
mov
sahf
popa
filds
or
leave
fst
aas
pop
mov
adc
push
shlb
xor
mov
adc
mov
or
icebp
aad
dec
jae
test
cmp
dec
pop
in
in
mov
lahf
sub
pop
lock
mov
in
pusha
pop
jno
mov
js
cwtl
sub
cwtl
lcall
or
sti
mov
sbb
or
sbb
aaa
and
mov
mov
sub
and
add
jge
mov
and
sbb
inc
and
xor
adc
and
test
adcb
outsl
cs
or
mov
fbstp
andb
inc
sub
and
inc
pop
movsb
scas
cltd
jnp
and
loopne
das
arpl
insl
mov
push
jnp
clc
nop
pop
mov
xor
sub
push
push
lods
and
sbb
fldl2e
adc
mov
das
mov
pop
icebp
mov
clc
dec
pusha
fisubrl
add
and
cmp
sbb
daa
adc
fidivrs
add
mov
jecxz
dec
stos
test
add
fbld
sub
pop
testl
inc
mov
jecxz
jbe
push
cltd
xor
mov
xor
jno
test
lahf
pop
dec
push
imul
pop
xorl
push
dec
jns
outsb
push
cltd
ret
sahf
dec
decl
lcall
xlat
aaa
adc
and
jnp
push
or
cltd
cwtl
mov
dec
std
dec
push
or
push
popf
fmuls
imul
inc
jnp
mov
pusha
pop
jmp
out
ret
imul
jae
fucomi
add
adc
mov
jns
push
xor
lret
fcompl
dec
aad
push
repz
and
mov
fbstp
xorb
mov
push
rcll
and
inc
dec
pusha
daa
mov
mov
pop
imul
xlat
pop
pop
insb
xchg
ds
pushf
and
imul
sbb
lock
aas
jns
stos
jno
fistps
mov
pop
mov
push
inc
sti
icebp
mov
dec
mov
xorb
and
lahf
push
xlat
fldpi
cltd
fdivrs
cmp
push
lret
add
loope
js
gs
fistpll
pop
es
je
jl
pusha
repz
arpl
test
add
jnp
mov
jns
cmp
cmp
xchg
ljmp
test
int3
mov
cmp
test
mov
jg
inc
mov
push
enter
jmp
inc
sahf
adc
jbe
enter
push
adc
adc
push
pop
repnz
lret
sbb
in
test
sti
fldt
test
std
lahf
cmp
rorb
es
shrd
jp
outsl
clc
pop
int3
or
xchg
cld
out
fst
mov
sub
pop
inc
nop
or
jecxz
mov
cli
add
test
ljmp
or
leave
add
loopne
mov
imull
cltd
popl
sbb
imul
ds
or
jnp
or
cmc
mov
orb
ja
daa
int3
out
fisttpl
jns
dec
loop
add
fcomi
cmp
dec
mov
in
mov
sub
add
mov
fbld
sub
in
mov
cld
pushf
lret
sbb
test
mov
es
in
addl
fcmovbe
fimull
mov
mov
fnstsw
inc
mov
jmp
or
adc
dec
bound
popa
leave
or
sahf
pop
mov
mov
xchg
jbe
stc
addr16
fcompp
outsl
mov
scas
pop
push
mov
sbb
out
stos
pop
daa
adc
adc
pop
int3
inc
dec
fdiv
mov
jg
outsl
aam
adc
repz
cs
outsl
jge
fidivs
jecxz
dec
sub
cmp
loop
jno
das
mov
adc
ss
fmul
addr16
jge
sti
mov
loope
cmpsl
inc
scas
jmp
out
jb
icebp
adc
cmp
push
xchg
sarb
cmpsb
dec
dec
push
lea
mov
repnz
arpl
lret
or
inc
adc
fistpl
mov
sbb
les
pop
or
dec
lods
ss
xor
in
pop
lds
sti
repnz
dec
inc
std
add
mov
mov
add
xor
leave
aas
fnstcw
push
xchg
adc
sbb
dec
cld
loop
push
ss
int3
dec
inc
ja
cmpsb
shlb
dec
jnp
inc
loopne
mov
mov
jmp
call
push
jae
lret
cmc
or
adc
aad
loopne
sahf
movsl
mov
jmp
js
mov
xchg
bswap
stos
lock
mov
fmulp
push
hlt
popf
scas
test
lds
outsb
xor
lds
cmp
cltd
mov
shll
neg
nop
mov
lret
jle
or
sub
cltd
outsb
lcall
xchg
rolb
gs
lahf
arpl
pop
pop
cmc
mov
inc
imul
movsl
aad
xor
arpl
cs
and
mov
sub
sub
insl
cmp
shl
ret
jg
call
push
icebp
and
jo
sub
repz
xlat
mov
test
mov
xchg
ret
popa
mov
push
out
mov
inc
cli
movsb
mov
cs
cmpsl
aad
xchg
jmp
outsl
jp
push
insl
pop
jnp
fidivrl
fbld
roll
pop
mov
xchg
fildll
cmc
sub
lods
cmp
dec
stos
sub
sub
repz
imul
inc
jge
imul
pop
loopne
fistpll
pop
icebp
mov
inc
loopne
jnp
push
fidivs
int
cmp
cmp
and
out
pop
mov
shll
outsl
stc
jmp
or
int3
cmp
testl
mov
ljmp
jp
and
rcr
lret
sub
push
dec
ret
jg
or
sbb
mov
sahf
outsl
jnp
cmp
and
int3
sahf
dec
stos
frstor
push
jo
jge
jg
shrb
ljmp
cmp
mov
add
pop
inc
and
stos
mov
pop
sub
xchg
movsl
sub
out
jnp
mov
andb
or
mov
movsb
lock
mov
and
lea
cwtl
call
pmaddwd
or
mov
sbb
inc
pop
imul
inc
cmp
loope
mov
aam
xchg
sub
mov
stos
inc
out
fildll
and
jno
loop
jo
jno
sbb
and
xchg
pusha
mov
popa
out
jno
or
adc
repnz
dec
jle
add
dec
jmp
push
inc
cld
cli
add
cwtl
jae
pop
add
cmp
jnp
jnp
inc
mov
repnz
jmp
in
sub
sub
pop
push
ljmp
push
inc
xor
cmp
lahf
fidivrl
stos
xor
dec
fsts
add
insl
jl
nop
xlat
sub
push
sbb
inc
sbb
xor
pop
mov
clc
jg
into
decl
sti
insb
sub
add
jecxz
fisubrl
enter
stc
pop
cmc
mov
mov
fwait
pushl
jno
pop
sub
imul
jl
jl
lock
cld
mov
push
sbb
stos
cmp
push
and
outsl
cmp
or
jnp
xor
xor
mov
jmp
or
mov
push
mov
push
pop
es
jb
movsl
dec
jmp
test
mov
add
xor
mov
mov
xor
movsb
lods
lea
dec
divb
aaa
stc
out
mov
jmp
pushf
js
adc
setge
jg
push
dec
bound
jecxz
decb
loopne
pop
jnp
icebp
mov
push
pushf
sbbb
push
mov
out
lds
and
ret
and
jo
or
repnz
xor
add
cmc
sarb
jge
push
jg
dec
bound
xor
add
popl
push
mov
lcall
dec
mov
shr
push
roll
fistpll
push
sbb
ja
mov
ror
lcall
and
aam
sub
jge
mov
cmpsb
test
sub
fs
cmc
adc
sbb
lret
out
popa
ljmp
call
push
dec
mov
test
cmpsl
mov
and
push
icebp
adc
stos
jl
pop
jnp
mov
fmuls
mov
out
loopne
mov
in
ret
mov
add
ret
mov
jo
cmovle
mov
call
mov
aad
lods
mov
in
test
movsb
in
test
jno
sbb
or
jge
inc
cmp
adc
xor
xchg
aas
adc
mov
mov
mov
sbb
mov
mov
jns
imul
mov
lcall
xchg
inc
orb
insb
xchg
mov
leave
test
loopne
xchg
adc
ret
ss
into
xchg
dec
cmpl
pop
stos
je
mov
inc
ret
mov
mov
les
pop
or
adcb
xor
xchg
lods
mov
fnstcw
rcll
xchg
fidivl
repz
mov
cmovbe
testl
push
pop
push
xchg
add
or
push
push
and
xor
cmpsl
sti
xor
add
inc
cmc
or
jl
arpl
inc
imul
sub
mov
cmp
ja
mov
cmp
adc
adc
outsb
mov
pop
aam
xor
adc
je
push
push
rclb
mov
or
in
push
xlat
xor
cwtl
push
and
fwait
jmp
movsl
fucom
mov
movsb
ret
imul
xchg
out
sbb
push
push
test
mov
pusha
and
inc
pop
jle
imul
jae
dec
fcmovnu
mov
fdivl
int
mov
sbb
jae
inc
dec
pop
jl
adc
pop
pop
cltd
dec
push
pop
test
fiadds
xchg
sub
push
adc
es
dec
mov
dec
push
fcomp
mov
push
mov
push
or
lahf
cmp
jl
sti
pop
push
inc
decb
push
mov
push
jmp
jne
pop
iret
nop
xor
cld
cmp
mov
dec
orl
in
dec
mov
sbb
sarl
inc
and
std
mov
adc
shrb
push
cltd
sub
repz
jnp
cmp
icebp
out
inc
in
in
std
push
ss
sti
data16
jns
lods
push
sbb
aam
les
push
loopne
ret
pop
aam
jae
jp
pop
mov
sbb
mul
add
mov
outsl
adc
outsl
or
jns
mov
aas
inc
push
xchg
out
dec
jns
fdivs
in
inc
cld
adc
std
sub
rorb
rcrl
jecxz
cmc
shrb
cltd
lods
into
push
fcoms
shrl
dec
stos
scas
inc
shlb
out
or
pop
fsubrl
dec
cmc
sbb
pop
mov
lea
aad
in
push
jle
insb
lcall
add
pop
xor
lcall
and
dec
mov
clc
lcall
inc
adcb
mov
jns
rol
mov
das
fcmovnu
bound
pop
cmpb
aad
push
cmp
adc
int
aad
addb
fnstsw
test
xchg
and
in
push
inc
loope
jge
cld
nop
std
xchg
push
inc
hlt
insl
add
inc
fiaddl
fisttpll
mov
inc
sub
inc
push
jl
daa
fmul
mov
jg
add
fdivrl
adc
fucomi
mov
jge
outsl
ret
xchg
in
add
fsubrl
mov
testl
fstpl
test
mov
rcll
data16
mov
xchg
ret
xchg
and
sub
dec
aaa
inc
or
nop
sub
xchg
in
popf
inc
fdivr
ljmp
fsts
xor
inc
xchg
aam
inc
or
inc
ds
scas
stc
push
pop
xchg
aam
add
push
rol
sbb
ret
add
jo
dec
sbb
add
js
inc
lods
ret
es
add
lret
pop
sti
cli
cltd
dec
push
fmull
pop
xchg
cltd
xor
push
pop
pop
and
cmp
xorb
mov
xchg
mov
inc
std
xor
mov
and
push
test
mov
xchg
jg
std
js
and
fildl
sbb
cmpsl
daa
cltd
lret
or
fcomip
int3
in
xchg
in
pushf
gs
xchg
rcrl
adc
mov
add
faddl
sahf
loopne
mov
int3
push
inc
push
sti
xor
mov
ss
pop
push
fmull
les
int3
rcl
sbb
sub
pop
cmp
push
add
inc
xchg
adc
les
or
push
clc
decl
sub
pushf
inc
aad
jnp
push
das
ja
mov
dec
and
shlb
push
aad
cmp
mov
clc
jmp
shlb
pop
inc
mov
outsb
repz
add
icebp
and
test
fmull
loopne
dec
mov
inc
sbb
xchg
insl
fisttps
inc
imul
sub
int
cmp
mov
mov
push
imul
jnp
mov
jno
outsb
sbb
cmp
xchg
add
add
and
shll
cmc
mov
imul
sbb
sbb
mov
jge
sti
push
fistpl
jne
adcb
inc
add
add
mov
lahf
mov
add
jg
and
mov
pop
sbb
and
scas
sti
sbb
bound
cmp
mov
fcoms
daa
std
ds
iret
mov
cmc
outsl
fistps
inc
fisubrs
or
incl
dec
jae
ret
pop
sar
push
mov
dec
xchg
jmp
movsb
cld
in
imul
push
jmp
push
cli
pop
mov
fs
dec
stos
mov
bound
sbb
arpl
add
push
mov
dec
outsb
rol
mov
out
adc
mov
cltd
dec
loopne
dec
dec
cmpsl
out
repz
mov
lret
xor
push
das
xchg
jno
fs
sbb
mov
sbb
iret
ljmp
popf
lea
mov
cmp
andb
rol
or
pop
std
jae
push
mov
add
testl
mov
popf
in
sbb
mov
mov
outsl
adc
int3
aaa
sub
andl
int3
pop
insl
les
push
enter
push
push
adc
dec
sub
jns
xchg
out
adc
cwtl
imul
add
push
add
int3
dec
cld
dec
cmp
rcrl
cmc
icebp
out
int
adc
sub
cmc
int
fs
insb
mov
fists
repz
xchg
and
sbb
dec
imul
pop
mov
ljmp
pushf
jne
ljmp
cmp
jne
add
push
in
fwait
mov
xor
int
and
testb
fcomi
loop
jnp
inc
sbb
or
outsb
xchg
add
push
sbb
push
lahf
out
inc
mov
cmp
shll
jg
jg
in
sbb
cmpsl
push
or
cmp
es
shll
aad
gs
adc
and
gs
sub
xor
aas
aam
xor
cmpsl
out
jbe
jnp
outsb
mov
and
movsl
dec
add
xor
pop
std
in
inc
je
dec
stos
mov
pop
ja
xchg
ret
push
mov
push
aas
fs
add
adc
and
pop
fs
mov
adc
cmp
leave
jge
xor
pushf
mov
add
dec
mov
adc
xchg
sub
nop
xor
into
testb
outsb
mov
add
aam
cmp
icebp
push
add
fisubl
jg
jl,pn
dec
xchg
shl
test
and
int3
int3
inc
rcr
pop
cmp
ljmp
test
mov
push
cli
inc
adc
pop
mov
sbb
jmp
ds
cmc
scas
fsubrl
dec
mov
cld
repnz
jne
sbb
ffree
cltd
inc
fisubs
imull
or
inc
in
sbb
or
push
add
notb
cld
int3
xchg
decb
dec
xor
cmp
xor
adc
adc
je
push
clc
data16
inc
rcll
loope
adc
adc
lods
popa
dec
mov
mov
ja
cwtl
mov
lods
fsubrp
mov
adc
std
pop
fldcw
xchg
mov
loope
mov
out
vmovq
in
push
jnp
and
jmp
add
aam
bound
fcompl
xchg
test
js
adc
xchg
int
adc
cld
fstl
cwtl
adc
sub
packssdw
das
mov
mov
xchg
xchg
repnz
in
in
test
mov
repz
decl
jmp
jns
push
mov
mov
imul
mov
jns
cmp
ljmp
das
sub
mov
imul
movsb
mov
hlt
fistpl
imul
or
orl
jp
in
daa
jnp
push
push
jne
adc
push
inc
rep
and
or
dec
sbb
test
jp
jno
popf
push
into
mov
or
sbb
fnstsw
pop
fidivl
mov
pop
loopne
push
aad
push
ss
cli
andb
mov
lret
jae
xchg
outsb
int
loop
sbb
xor
jo
into
ljmp
into
mov
mov
dec
repnz
data16
je
pop
stc
jbe
lahf
pop
dec
or
push
mov
jnp
mov
or
mov
xchg
inc
jae
iret
ret
and
or
push
fnstcw
ja
movsb
pop
push
pop
sti
testl
cmpsl
cltd
int3
jg
lea
in
pop
inc
inc
ret
dec
mov
test
pusha
dec
dec
inc
xchg
data16
stc
mov
or
fwait
mov
and
xchg
sub
in
mov
hlt
aam
jp
and
out
adc
cld
mov
pop
cld
lcall
sub
icebp
pop
repz
jo
shrb
jno
mov
movsb
add
or
and
loope
pop
sbb
add
aad
aaa
or
jl
out
nop
mov
sbb
cmp
loopne
ret
dec
pop
adc
adc
sbb
jle
jo
sub
xor
call
or
pop
aad
mov
mov
sub
fwait
test
jbe
sbbl
sub
pop
cmpb
mov
int3
testl
cmp
sbb
jmp
jmp
mov
or
fwait
push
mov
lods
cmp
rcrl
fwait
or
mov
pop
dec
daa
js
and
lret
fidivrs
xor
or
rcl
ds
sti
mov
jp
outsb
aaa
stos
jl
and
dec
dec
push
cmp
cld
adc
cmp
aad
jae
pop
and
pop
loopne
adc
scas
inc
sbb
cld
in
mov
mov
jg
cmp
inc
jb
fisubs
dec
xchg
sub
and
je
xchg
call
mov
cmc
push
lock
outsb
inc
cld
loopne
adc
dec
mov
jbe
repz
out
push
aam
xor
xor
xor
push
push
lods
or
mov
xchg
adc
mov
jmp
lcall
add
xchg
xlat
ret
jne
jno
add
or
js
call
data16
lret
lods
dec
pushf
dec
mov
mov
out
ss
int3
movsb
add
jmp
inc
adc
xor
aam
inc
pop
leave
dec
sub
jg
xlat
std
adc
mov
cmpsl
add
sub
pop
add
adc
cmpb
mov
xchg
testl
mov
sar
test
jae
pop
movsb
xchg
sbb
pop
xchg
fwait
jne
pop
push
pop
mov
dec
addl
decl
pop
mov
int
jecxz
and
mov
fisubrl
inc
roll
fcoms
fcmovb
mov
xchg
xchg
icebp
daa
mov
mov
out
je
dec
popf
in
in
xchg
movsl
inc
xchg
cmp
lds
pushf
jb
jb
into
mov
push
mov
jmp
add
push
jo
scas
dec
lea
inc
sbb
iret
sub
int
std
movsl
dec
test
jg
repz
push
mov
inc
pusha
pushf
test
les
adc
enter
in
jle
sarb
data16
sbb
mov
fdivrl
arpl
jnp
inc
loop
fistpl
xorb
inc
andb
fbstp
dec
cmp
xor
sub
push
add
dec
jg
shlb
ret
ja
daa
add
mov
or
imulb
adc
call
andb
inc
mov
fcmovne
dec
xchg
mov
push
xor
pushf
push
mov
pop
pusha
pop
in
jecxz
cmp
adc
out
ret
inc
out
jge
pop
ret
pop
inc
inc
ljmp
test
dec
adc
test
sbb
dec
shrl
adc
jae
stos
dec
jle
int
aad
dec
pop
jle
jl
sar
nop
imul
fsubl
fimuls
mov
int3
and
sub
xorb
pop
fcmove
sub
pop
jae
pop
or
scas
xor
pop
sbb
pop
adc
xchg
sub
pop
int3
sub
sub
daa
xlat
pop
adc
xchg
sub
pop
mov
out
arpl
adc
mov
fimuls
lods
loope
movsb
sbb
cmp
dec
pop
mov
cmp
fs
insb
cli
lds
pop
scas
je
pop
and
jl
cmpsb
in
cmp
push
pop
test
inc
sbb
pop
rorb
cmp
push
pop
test
push
sbb
pop
rcrb
fisttps
dec
cmpsb
dec
cmp
out
xchg
dec
xchg
inc
imul
lahf
or
jne
stos
add
inc
adc
adc
mov
push
jg
ret
jne
jl
or
and
jae
cmp
dec
scas
orl
jg
ljmp
jne
mov
int3
fnstcw
sbb
dec
xchg
test
mov
fimull
ret
fwait
cmp
sub
aas
cmp
jecxz
dec
loope
movsb
jmp
filds
xchg
cmp
inc
fcmove
repz
mov
sbb
outsb
xchg
pushf
bound
ret
push
xchg
ret
pop
push
jnp
mov
movsb
inc
lret
jge
dec
sub
inc
test
roll
jge
dec
xchg
inc
test
fildl
jge
dec
mov
inc
and
mov
sub
sub
test
dec
dec
and
pop
pop
pop
lret
pop
add
scas
loopne
sti
cmpsb
or
cmp
cmp
push
arpl
jg
xor
dec
xor
rolb
leave
push
dec
xor
les
push
push
dec
push
movsb
imul
dec
push
jmp
inc
mov
xor
pushf
mov
clc
fists
inc
mov
inc
dec
ja
sub
xchg
push
pushf
add
inc
std
cs
pop
sub
jo
scas
loope
mov
int3
lods
mov
iret
mov
dec
jnp
shlb
push
mov
pop
ror
sti
mov
push
sbb
xor
fsub
movsl
mov
les
pop
dec
pushf
fcompl
pop
sub
jge
cmp
add
or
pop
rcrb
push
pop
inc
and
repz
aad
cmpsb
ljmp
fsubrs
add
inc
cmp
and
lret
adc
xor
dec
cmpsl
fidivrl
jmp
add
or
ljmp
insb
pusha
in
aam
cmpsl
popf
je
jmp
sub
sub
xor
xchg
sbb
ljmp
enter
cmp
fnsave
mov
shll
std
inc
dec
in
cmpsb
ret
and
adc
pushf
out
ljmp
mov
insb
or
clc
push
push
sti
jg
mov
mulb
push
mov
or
xorb
cmpsl
sar
test
incl
add
ret
xchg
lret
sub
fdivs
cmpsb
fiaddl
addr16
sbb
adc
sbb
call
jle
push
decb
imul
ja
inc
xchg
data16
outsb
pop
les
jae
mov
inc
int3
ss
pop
jns
sub
out
movsb
inc
loope
sbb
in
movsb
bound
hlt
xlat
push
mov
mov
push
mov
jnp
xor
jne
pop
rcll
das
jne
sub
loope
push
inc
cld
test
aam
dec
pop
mov
xor
push
or
add
jns
not
outsl
pop
sbb
movsb
dec
cmc
or
xchg
add
mov
and
mov
xlat
outsb
dec
aam
daa
cltd
inc
sbb
cmc
shll
stc
arpl
add
jbe
aaa
mov
test
xor
mov
dec
into
psrad
pusha
sbb
fisttps
pop
rclb
mov
scas
mov
in
jp
ljmp
ds
je
insl
xor
hlt
subl
mov
mov
inc
add
aaa
nop
lods
xlat
fcompl
outsl
jmp
pop
or
pushl
movsb
sub
pop
mov
sub
mov
lods
pushf
pop
testl
xchg
mov
dec
jae
mov
cwtl
data16
inc
sub
cmp
jmp
movsl
lahf
std
cmpb
movsl
inc
std
jmp
test
arpl
movsb
pusha
fistpll
and
xor
xchg
push
mov
pusha
mov
push
mov
iret
jns
mov
ret
lods
xchg
jno
push
leave
mov
fisttps
insl
jne
add
icebp
mov
jge
outsl
movsl
inc
sti
add
mov
jnp
movsb
cmpsl
fisttps
sahf
dec
pop
inc
jge
movsl
aam
ljmp
add
mov
imul
inc
push
add
dec
add
cmp
push
dec
adc
loopne
jmp
xchg
sub
cmpb
mov
lcall
cs
push
test
adc
ja
mov
xor
in
add
jo
or
mov
mov
push
xchg
lock
xchg
in
divb
dec
jo
or
fdivs
lods
fsubr
dec
mov
dec
inc
cmp
jnp
mov
xchg
mov
mov
lods
pushf
cmp
pushf
add
mov
adc
sub
mov
loopne
enter
push
lahf
cmp
mov
pop
cli
jp
cli
xchg
sbb
stos
movsl
add
cmp
lods
test
jnp
adc
jge
mov
jge
dec
int3
cmp
xchg
les
adc
and
movsb
movsl
jae
faddl
sbb
add
inc
xchg
push
adc
pop
cmp
stos
push
sar
inc
mov
rol
ja
dec
jmp
loopne
jne
cmp
mov
push
push
mov
fldenv
lea
movsl
jl
mov
mov
ret
icebp
mov
mov
dec
add
push
jne
pop
jl
mov
push
push
sub
add
cmc
inc
mov
adc
or
mov
push
inc
scas
pusha
ds
orl
pop
decl
adc
xor
sbb
inc
sub
dec
or
xor
jge
ja
insb
dec
mov
mov
add
out
jmp
lods
rcl
mov
xor
mov
pop
inc
pop
pop
push
addr16
lret
pop
mov
adc
sbb
or
gs
xor
push
dec
add
xor
mov
push
cltd
and
jp
push
into
xor
jnp
int3
scas
das
dec
push
dec
jae
sub
aam
inc
mov
mov
insl
mov
mov
dec
and
mov
xchg
dec
icebp
mov
cltd
outsl
imul
jge
mov
pop
mov
pusha
push
push
call
inc
push
jle
or
mov
imul
mov
xor
or
bnd
xor
xor
addr16
nop
sbb
sub
sub
stos
sub
rcrl
pop
mov
lods
mov
sub
fistl
mov
push
mov
fwait
popf
fisttps
mov
and
add
sbb
arpl
dec
mov
and
aad
mov
push
cld
mov
mov
sub
xorl
int3
and
int3
cld
pop
es
mov
adc
leave
or
stc
leave
inc
push
jbe
dec
cld
test
dec
and
mov
push
inc
leave
shl
out
jg
je
jne
pop
mov
mov
stos
test
scas
arpl
shrl
mov
fsubl
inc
push
cmpl
mov
pushf
call
jae,pt
inc
push
mov
dec
mov
sbb
adc
imul
sarb
fstpl
jne
xlat
mov
push
pop
and
sahf
push
ss
es
mov
cmp
push
ja
cmp
arpl
adc
movsb
jae
pop
mov
divl
das
jo
mov
fimull
jge
cltd
imul
dec
dec
cmpsl
mov
cmpsb
ds
add
sbb
adc
int3
sub
test
jae
mov
cmp
dec
mov
or
icebp
inc
mov
adc
or
lds
mov
and
sbb
jnp
cmp
subb
inc
adc
mov
jge
xchg
mov
sahf
and
mov
jns
dec
es
mov
out
jns
sarb
inc
arpl
pop
jl
mov
adc
pop
testl
pop
cmp
test
lret
push
popa
or
and
arpl
mov
inc
pushf
jmp
dec
push
dec
jae
mov
lods
imul
sbb
movsl
outsl
pushf
mov
jns
inc
push
pusha
fiaddl
xrelease
mov
out
mov
push
adc
pusha
pusha
daa
add
rcr
ja
push
add
ds
cmc
mov
out
mov
mov
and
ja
arpl
sub
pop
test
mov
jno
or
rcrl
pop
jle
jg
fnstcw
cwtl
or
cmp
and
sbb
mov
dec
jae
jne
or
xchg
dec
fs
jl
aam
sbb
lahf
xor
sbb
test
inc
rcll
jb
add
adc
iret
cltd
dec
xor
test
jl
aam
bsf
subps
mov
cmp
push
cli
jg
mov
sbb
pop
inc
in
jb
or
fisubrl
dec
fdivrl
enter
and
xorb
sbb
cmpsb
and
push
cmp
adc
mov
mov
inc
out
cmp
into
in
jg
stos
aam
leave
jmp
jnp
adc
sahf
push
sbb
add
in
sbb
sub
repnz
out
sub
jnp
xor
lret
fs
dec
je
lods
mov
cmc
mov
ljmp
fucomp
pusha
pushf
mov
adc
xchg
dec
jbe
or
fists
popf
lret
cld
push
and
es
push
in
sub
push
jns
rcrb
stos
loop
mov
dec
inc
insl
adc
aad
cltd
inc
mov
jge
xchg
jl
cltd
mov
pop
test
aam
sub
into
lcall
xchg
cmpsl
ret
out
imul
std
push
mov
cmpsb
stc
ret
lds
iret
and
clc
sbb
mov
ret
out
mov
mov
loop
jecxz
mov
dec
stos
cmp
inc
mov
test
lcall
test
lock
repz
push
xlat
adc
mov
hlt
sti
popa
subb
mov
jp
add
mov
push
popf
fcmovbe
xor
lret
mov
mov
sbb
pop
outsl
push
mov
jnp
cmp
jnp
ljmp
ficoms
ds
adc
sub
ret
sub
sbb
sub
popf
popf
sub
insb
hlt
lods
push
scas
inc
inc
stos
and
cmpsb
sbb
rorl
cld
in
hlt
cmp
out
mov
fs
hlt
clc
pop
int3
lret
hlt
xor
stos
inc
stos
mov
lock
out
xor
fs
into
push
nop
jmp
jge
add
popf
sbb
cmpsb
jns
repnz
mov
mov
roll
push
or
dec
sbb
pop
mov
in
fsts
imul
lcall
jle
mov
fwait
mov
lods
mov
xor
mov
jl
push
push
mulb
or
xor
mov
loop
sub
cmp
mov
aam
jp
sbb
xor
mov
ret
sbb
jl
push
and
pop
cmpsb
xchg
inc
das
fldcw
mov
push
inc
push
cmp
add
mov
cmpsb
xchg
imul
iret
inc
add
dec
gs
xor
push
sahf
push
loopne
outsl
pop
pop
mov
aam
inc
adc
or
sub
dec
popa
adc
inc
pusha
imul
mov
mov
push
out
fsubl
lret
xor
aam
dec
daa
dec
jmp
ss
mov
loope
jp
dec
imul
cltd
jl
mov
inc
pop
sahf
mov
es
jne
insb
cmp
mov
shrl
jp
jle
ficoml
push
imul
jecxz
mov
jae
into
inc
cs
jnp
mov
roll
es
mov
sbb
mov
sahf
inc
mov
shll
push
xchg
pop
inc
pop
xor
sbb
xlat
das
notb
jnp
cmpsb
jl
pop
add
dec
fbstp
dec
sub
push
insb
jmp
pop
mov
insb
gs
dec
mov
icebp
dec
xchg
xchg
jl
cltd
push
repz
ficoms
and
outsb
adc
iret
add
dec
add
arpl
cld
dec
adc
loopne
jl
ss
xchg
testb
xlat
inc
xchg
or
add
punpckldq
mov
mov
pusha
mov
ret
dec
sbb
clc
fisttps
push
sbb
scas
jge
pop
popf
ljmp
push
mov
daa
adc
xchg
daa
push
shll
pushf
fcoms
pushf
add
xor
xor
push
inc
push
sub
sbb
scas
cmp
xor
jp
jl
ret
xchg
mov
mov
jo
divl
inc
lods
add
inc
cltd
inc
jmp
push
or
adc
shlb
sbb
fs
fisubs
mov
pushf
ja
scas
adc
dec
pop
pop
push
in
pusha
cmp
mov
sub
or
push
mov
rorb
dec
pushf
je
mov
lret
ret
sub
cmp
adc
dec
iret
test
fbstp
popf
sub
subb
cmp
ss
cmp
jnp
orl
pusha
lock
andb
roll
mov
add
and
push
push
mov
fiaddl
rcll
sbbb
bnd
inc
and
cwtl
fdiv
mov
dec
sahf
inc
sahf
add
cwtl
repz
mov
filds
dec
in
aaa
adc
pusha
dec
mov
rclb
pop
and
mov
cmp
dec
mov
cmp
std
jb
mov
pop
test
and
aaa
fwait
cmc
pushf
mov
push
xchg
insb
mov
dec
fiaddl
rcll
sbbb
out
icebp
mov
inc
dec
out
push
mov
push
pop
in
repz
imul
bsf
mov
test
ret
push
pop
pop
add
dec
filds
imul
inc
bound
gs
mov
push
test
andl
jmp
inc
pushf
inc
mov
sub
jns
movsb
push
hlt
int3
pop
pop
mov
jnp
fbstp
cld
in
mov
mov
and
inc
loopnew
mov
push
imul
cmp
pop
mov
shl
mov
clc
adc
std
hlt
pop
push
pushl
test
or
push
movsb
cmpsl
push
mov
jge
push
ret
test
outsb
adc
mov
cld
leave
aam
int3
mov
in
cld
les
mov
icebp
sub
sub
or
arpl
lret
inc
push
inc
jbe
lahf
mov
test
int
in
xchg
mov
jae
jno
sub
push
in
lcall
sub
and
stc
in
dec
push
test
push
push
mov
mov
movsb
es
stc
mov
insb
daa
pop
mov
xor
imul
test
mov
inc
lds
les
pop
hlt
xlat
cmc
outsb
dec
leavew
adc
scas
dec
xchg
insb
push
mov
cmpb
mov
addr16
push
in
pop
mov
imul
cli
pop
imul
mov
sub
in
fwait
xor
rolb
xlat
mov
fsubrl
in
cld
and
mov
cmp
and
out
push
lret
jl
mov
or
jg
inc
cmp
dec
pop
mov
das
xor
inc
add
sub
dec
incl
data16
sub
adc
xchg
jl
cmpsl
fxch
lret
popa
dec
sub
mov
inc
pop
and
std
or
mov
inc
dec
pop
iret
mov
add
gs
je
dec
imulb
hlt
adc
mov
decl
and
pop
pop
inc
jns
add
dec
xor
je
adc
pop
test
sub
rcrl
dec
cltd
mov
clc
rcrb
mov
addr16
add
jecxz
lcall
cmpsl
ja
or
or
movsl
aad
adc
in
inc
aam
stc
lret
lods
mov
add
into
aad
daa
subb
daa
xor
cmpb
jge
inc
lret
and
mov
and
loopne,pn
mov
sbb
jns
loopne
inc
mov
dec
lods
mov
mov
dec
pop
mov
shl
dec
inc
addr16
and
or
rcrb
inc
lods
iret
xchg
sbb
jne
pusha
out
push
mov
std
and
push
test
and
les
xchg
push
push
movl
je
dec
test
jecxz
dec
ficompl
dec
mov
pop
jae
and
xor
ljmp
inc
jle
pop
bound
adcb
jbe
sbb
inc
dec
mov
stc
mov
jae
dec
push
mov
cld
jge
lret
xlat
scas
sbb
lret
or
pop
jns
xor
push
fucom
cmp
or
aas
arpl
pop
mov
je
xchg
jmp
mov
push
xor
mov
in
in
flds
in
and
sbb
in
and
in
mov
and
dec
int3
push
push
sbb
mov
inc
ret
xchg
and
add
inc
or
and
inc
pop
jbe
xor
stos
or
push
jg
in
cmp
test
popf
and
ja
mov
inc
pop
xor
out
scas
in
dec
mov
jge
cmp
jbe
aam
mov
or
or
sbb
dec
out
jne
xchg
jg
jl
jnp
int3
adc
enter
fs
jmp
add
sbb
inc
xor
mov
dec
insb
aam
jno
xor
inc
xchg
ret
iret
jl
test
jecxz
xchg
inc
ret
cmp
clc
mov
xor
sahf
jno
lds
mov
cmc
or
inc
sub
and
sub
jmp
jge
inc
xchg
or
mov
fldenv
loope
or
mov
idiv
lock
xor
inc
and
jbe
add
mov
mov
cli
insb
psubq
and
pop
mov
ja
out
pop
scas
repz
lds
inc
jbe
cld
test
xor
push
std
add
pop
push
jae
dec
lcall
std
divb
in
stc
fcoml
repnz
test
fidivrs
adc
adc
fdivl
fistl
inc
push
aaa
mov
jae
ret
iret
sbbb
ljmp
ret
rcrb
clc
pop
jle
repnz
fs
and
nop
arpl
or
jge
adc
push
es
dec
pop
jns
jnp
cmp
sbbb
push
mov
movsb
or
or
xor
and
in
shrb
push
mov
or
inc
mov
or
push
and
movsl
popa
cmpsb
and
divb
lds
int
inc
outsb
adc
ret
stc
push
dec
cmpsb
push
cmp
xchg
neg
ja
xchg
data16
shl
add
sub
sar
movsb
test
pop
adc
mov
add
jbe
mov
push
lods
test
fildll
xchg
inc
add
repnz
es
mov
int3
jl
lret
xor
or
jns
int
das
xchg
hlt
aad
insl
jo
or
ss
xchg
ret
stc
mov
inc
mov
mov
sahf
xchg
in
pop
xor
loop
into
roll
dec
loope
into
jecxz
out
push
jmp
out
xor
insl
mov
push
addr16
adc
jl
pop
loope
inc
mov
insb
add
push
clc
dec
sbb
xor
mov
pop
adc
xchg
ret
in
arpl
jg
shll
int3
and
jecxz
filds
sbb
orl
mov
test
pop
movsb
cmp
inc
xlat
xor
mov
mov
dec
sarl
mov
out
xchg
std
dec
lret
jg
aad
adc
fisttpll
inc
ficompl
mov
mov
dec
mov
mov
sub
inc
sbb
addr16
xchg
loopne
loopne
out
ja
fcomip
icebp
inc
repnz
cld
push
push
fs
add
push
sub
leave
push
pop
cmc
mov
les
pop
push
testl
sbb
mov
add
inc
stos
mov
mov
je
mov
mov
daa
ds
mov
jp
rorb
add
arpl
mov
lret
xchg
inc
add
push
mov
popa
inc
rcll
and
inc
mov
hlt
jno
pop
test
or
shll
fidivrl
es
push
mov
push
test
dec
hlt
dec
jnp
scas
sbb
roll
pop
jg
push
adc
rcrl
mov
mov
add
jnp
xor
in
jnp
dec
xchg
icebp
jnp
mov
xchg
and
lahf
xchg
mov
dec
hlt
inc
mov
jnp
xchg
mov
lret
sahf
mov
mov
jbe
dec
movl
inc
push
nop
stos
sub
sbb
movsl
sub
xchg
sahf
dec
in
add
inc
repz
dec
out
lods
sub
add
sbb
dec
push
in
add
mov
cwtl
sahf
jae
scas
dec
mov
popa
fdiv
mov
mov
jp
add
sbb
dec
inc
jbe
dec
dec
jmp
cmp
dec
mov
arpl
or
mov
cwtl
in
push
add
push
fwait
in
adc
mov
fists
push
add
data16
mov
les
adc
fnsave
jecxz
and
mov
imul
lock
imul
push
ds
mov
test
ret
sbb
mov
xchg
inc
test
mov
cli
xlat
fcomi
xchg
dec
hlt
outsb
into
xorb
inc
mov
cmp
in
test
pop
jno
push
rcrl
fidivl
jg
xchg
and
fsubl
rol
pop
fstps
adc
leave
fs
dec
jnp
mov
cld
mov
sub
adc
invd
in
cmp
std
jno
mov
pop
jl
sbbb
test
and
xchg
add
lods
jno
or
mov
ficoml
xchg
inc
cmp
jge
negb
pop
in
inc
daa
dec
cmp
push
jb
cmp
inc
andl
lds
mov
fs
inc
fcmove
xchg
filds
rcrl
add
sbb
in
jne
mov
shll
sbb
call
xor
mov
dec
movsb
cmpsb
sarl
sub
push
aam
sub
xor
scas
ret
imul
jno
inc
adc
in
push
ftst
xor
out
sub
add
fimuls
jae
jo
jno
repnz
mov
push
shll
jl
mov
cltd
loopne
mov
int3
jmp
test
jl
dec
jecxz
invd
imul
mov
mov
mov
stc
mov
out
pushl
dec
dec
cmp
jnp
cs
or
cli
jmp
xor
inc
pop
int
icebp
in
out
out
arpl
mov
mov
or
cmp
pop
inc
pushf
out
aad
push
in
fucomip
jg
in
sbb
cmp
jbe
fisubl
gs
movsb
popf
jno
push
push
outsb
stos
xchg
repnz
and
std
mov
and
lret
pushf
dec
cmp
lds
daa
rcl
push
outsb
jbe
xlat
leave
xor
pop
lret
sub
outsl
mov
lret
adc
and
fptan
mov
into
pop
cmc
mov
push
scas
imulb
cld
jnp
mov
sbb
pop
sub
xchg
jecxz
testb
sub
mov
gs
jo
mov
cs
mov
dec
mov
lock
mov
dec
jl
xor
cmp
pop
sub
jge
scas
int3
outsb
sub
add
into
repz
xor
scas
xchg
std
ret
adc
cmc
push
push
pop
shl
insl
add
inc
jl
lods
inc
jb
push
and
cmp
add
xor
cmp
push
and
pushf
hlt
dec
dec
fbld
lret
cmp
pusha
add
lea
push
jge
pop
sub
push
push
sub
mov
jp
mov
pop
sub
jl
jmp
sub
pushf
lahf
inc
aam
fsincos
xchg
sub
mov
jne
ds
push
outsl
sbb
popf
or
mov
sub
in
int
push
mov
jae
jno
adc
add
in
xor
pusha
cs
add
dec
cmc
in
pop
push
adc
inc
loopne
hlt
hlt
adc
sbb
mov
mov
cltd
sub
bound
adc
testl
mov
bound
jne
jmp
hlt
pop
test
mov
in
push
sbb
data16
xor
sbb
hlt
movsb
cmp
popf
and
out
shll
add
hlt
hlt
adc
mov
imul
lcall
push
add
sub
pop
jns
sti
rorb
sub
add
ss
push
xlat
insl
add
xor
sub
sub
inc
sbb
sub
jno
sub
mov
xchg
call
movsl
sbb
movsl
clc
cmc
in
cmp
movsb
xchg
and
or
fcomip
jecxz
out
test
data16
xchg
mov
es
ja
mov
lds
dec
mov
jbe
jnp
push
addl
cmp
xlat
dec
xor
mov
cld
xor
adc
decl
or
lds
mov
lcall
leave
add
add
ljmp
or
mov
dec
fbld
jne
push
mov
mov
xchg
jne
or
sub
addr16
loopne
adc
cmp
jno
mov
and
jp
mov
fbld
mov
jle
mov
jge
sub
sarl
mov
jbe
inc
fbld
fldt
dec
xor
jmp
push
jg
insb
or
js
pop
stos
jae
dec
clc
cmp
pop
shll
test
push
mov
mov
mov
pop
orl
jp
dec
daa
imull
sub
xchg
mov
dec
loopne
shl
push
mov
mov
sbb
leave
mov
dec
fbld
pushf
test
and
inc
fidivs
push
jg
inc
add
jae
test
jp
sti
pop
mov
adc
add
or
arpl
mov
pop
sbbb
fmuls
and
cltd
shll
push
push
or
mov
mov
add
and
ret
pop
adc
sub
jb
cmc
dec
push
ret
inc
push
popa
pop
pusha
mov
fisubs
push
push
pop
inc
cmpsl
leave
pop
cmpsl
fisttps
mov
fisubrs
inc
pushf
mov
aam
mov
mov
or
jmp
push
pop
adc
in
jno
cmp
mov
popf
add
dec
fidivrs
dec
pushf
inc
dec
dec
jns
lock
insb
fnstcw
hlt
leave
std
push
sbb
inc
mov
push
mov
mov
das
jns
aaa
out
fstp
fldcw
shll
mov
cmc
mov
testl
cmp
fisubrl
dec
cmp
jecxz
lret
leave
jne
imul
mov
loopne
sbb
adc
push
pop
pop
icebp
mov
sub
and
inc
fisubrs
pop
cmp
pop
rolb
test
dec
sahf
daa
and
mov
pop
inc
add
xchg
mov
mov
mov
leave
mov
test
in
jae
negb
and
pop
ss
mov
mov
ret
pop
lods
xor
pop
cmp
and
hlt
mov
mov
lret
les
xor
and
inc
sahf
cld
push
dec
cmpsb
sub
or
dec
jae
test
jge
ret
mov
mov
mov
inc
mov
jl
arpl
mov
sti
outsl
test
add
pushf
mulb
jge
pop
dec
dec
js
jno
cmp
movsb
dec
std
mov
outsl
push
mov
and
mov
push
stos
jne
icebp
mov
mov
popf
loope
mov
pushf
jge
mov
scas
sbb
xchg
les
mov
out
movsl
push
jo
ret
push
dec
cmpsl
sub
push
dec
daa
mov
add
mov
push
aam
mov
xchg
push
loopne
adc
movsb
idivl
sbb
outsl
out
testl
jae
mov
jecxz
enter
pop
dec
call
xor
pop
or
jnp
repz
cltd
jge
nop
dec
sbb
jno
push
in
mov
loopne,pt
mov
push
mov
mov
insb
fwait
sahf
and
sbb
push
mov
adc
add
jo
cmpsb
mov
mov
mov
pop
push
mov
and
imul
xchg
movsl
cld
and
mov
mov
pop
leave
andb
icebp
mov
lods
sbb
test
adc
in
out
mov
inc
inc
jae
dec
mov
xor
and
andb
in
mov
dec
dec
loope
aad
mov
ret
enter
sub
jge
mov
out
jae
xor
lret
enter
mov
sbb
mov
dec
ret
push
test
inc
sub
in
enter
xchg
loopne
hlt
imul
fistpll
inc
repz
push
hlt
cwtl
cmovno
cli
enter
fwait
or
mov
pop
push
hlt
sbb
aam
xchg
push
or
rcrl
dec
nop
daa
movsb
iret
add
stos
test
and
adc
jmp
mov
andb
mov
mov
outsl
or
lods
jae
aam
adc
cltd
ss
nop
jge
sahf
jns
adc
inc
sbb
sub
mov
or
rolb
dec
push
pop
insb
mov
rcrl
faddp
inc
xchg
enter
imul
outsl
dec
add
inc
cmc
jg
cmp
gs
push
mov
and
dec
dec
fs
inc
testl
push
int
icebp
dec
mov
outsb
inc
cltd
push
jns
loop
call
lods
push
and
mov
mov
cs
push
jge
dec
jbe
adc
out
imul
or
sbb
outsl
fisttps
push
repz
inc
daa
pop
leave
dec
mul
mov
mov
sub
and
testl
jecxz
dec
movlps
mov
cmp
jne
cmpsl
adcb
mov
stos
adc
ret
fimuls
ret
lods
lret
in
cmpsl
xor
cwtl
jmp
add
sbb
inc
aam
imul
movsl
xchg
in
les
fs
testl
in
push
adc
repnz
es
cmp
repz
mov
pop
sbb
out
imul
jae
xor
or
push
push
lea
mov
cmp
cmpsl
mov
pop
mov
and
pop
lcall
xchg
mov
repnz
fldenv
call
mov
inc
cmp
lcall
sub
subb
mov
out
add
fisttps
add
loopne
pop
dec
in
adc
pop
movsl
imul
add
inc
je,pn
test
and
ffree
mov
mov
pop
jmp
ljmp
das
iret
jge
movsl
test
lret
cmp
jbe
cltd
mov
imul
enter
movsb
sbb
mov
mov
fbld
pop
xor
adc
loopne
fucomip
jnp
es
and
clc
or
push
sahf
inc
push
mov
rcrb
push
int
popf
and
or
gs
popf
test
or
jns
dec
sub
dec
lcall
jge
test
test
loopne
pop
pop
inc
pop
xchg
nop
mov
dec
push
mov
dec
xchg
mov
fnstcw
mov
xor
inc
test
inc
int3
mov
jl
mov
gs
sahf
sub
add
xchg
adc
or
into
daa
inc
jb
bound
xchg
addr16
jno
stos
mov
push
and
add
mov
pop
int3
xorb
sub
ds
inc
inc
dec
ja
pop
pop
aam
outsl
nop
push
inc
test
dec
lods
neg
arpl
mov
sub
pushf
js
mov
add
add
mov
ret
into
cwtl
cmp
mov
push
popf
movsb
jne
mov
jmp
ret
shrb
rclb
or
xchg
sarb
pusha
sbb
aad
dec
sub
scas
pop
popa
cmp
jle
out
jnp
hlt
shl
fists
mov
dec
sti
pop
inc
mov
mov
imul
andl
in
fdiv
jno
inc
add
xor
xchg
mov
push
sahf
cmpsl
or
jmp
outsl
dec
jmp
stc
push
in
pop
outsl
mov
js
xchg
outsb
push
in
cmc
mov
lahf
pop
push
test
insb
je
stos
rcll
jg
es
out
loopne
aam
sbb
mov
testl
and
mov
push
or
int3
ret
test
mov
inc
and
lods
add
andb
or
pop
gs
stos
jg
fildl
push
jnp
icebp
sub
jno
fmuls
pusha
int3
aas
cltd
or
in
push
mov
negl
mov
ss
push
ret
icebp
movq
das
xchg
rolb
popa
dec
pusha
push
imul
jno
and
fisttpl
ss
arpl
cmp
adc
jle
push
inc
sbb
ja
enter
std
jae
add
add
pop
push
jne
imul
jns
dec
mov
cmpsl
push
movsb
cmp
mov
js
xchg
or
and
jno
push
cmpl
int
int3
xchg
lods
repz
popf
or
int
jo
in
data16
xchg
and
loop
push
push
pop
arpl
pop
add
inc
or
imul
mov
loopne
inc
movsb
mov
jge
xor
stos
test
sbb
testb
shlb
mov
fidivs
cmp
mov
out
inc
mov
sbb
dec
test
mov
inc
jo
pop
gs
pop
fiadds
sub
inc
out
mov
and
mov
test
pusha
sbb
inc
pushf
cmp
in
jnp
stos
xchg
insb
enter
adc
push
icebp
mov
jge
and
cmp
cwtl
out
rclb
dec
cmp
push
out
call
scas
jns
push
mov
out
and
sahf
fistpll
push
scas
std
inc
and
sub
jne
mov
loopne
ljmp
inc
and
ror
mov
loopne
inc
fimuls
aaa
adc
push
and
pusha
dec
imul
int3
data16
sub
mul
aaa
mov
adc
ficoms
dec
jns
or
mov
std
scas
or
pop
rorb
loopne
lahf
jmp
hlt
push
inc
mov
xchg
fnstsw
ret
movsl
fucomip
push
sub
movsl
test
adc
addr16
mov
or
pop
pop
sbb
mov
dec
fdivl
dec
cmp
loopne
mov
push
xor
dec
cwtl
jb
jmp
inc
dec
inc
mov
fistpll
xor
push
dec
movsb
mov
push
in
es
jns
loopne
pushf
mov
sbb
xchg
dec
cmp
mov
and
add
pop
stc
ja
enter
repnz
mov
mov
rorb
and
push
fucomi
mov
and
das
sbb
lock
imul
movsl
arpl
mov
push
shrl
pop
int
mov
push
xor
jno
jmp
and
test
mov
in
and
ffreep
jge
cmpsb
sub
adc
rclb
jmp
dec
push
repz
inc
fidivrs
sbb
ficoml
ret
cld
insb
push
sbb
mov
inc
inc
stos
mov
cmp
push
mov
out
mov
dec
dec
cmp
push
aaa
mov
inc
push
stos
xchg
inc
enter
js
dec
mov
xchg
ss
sub
lahf
arpl
inc
pop
push
cmpsb
jge
or
enter
in
test
and
push
pusha
lahf
leave
jg
out
imul
jnp
jb
sbb
imul
adc
pop
push
sbb
out
push
outsl
mov
call
loope
inc
ss
jnp
mov
push
out
adc
dec
or
jae
dec
push
push
jl
movsb
aam
ret
outsb
push
cmpsl
loope
cmp
insb
mov
fwait
add
sbb
xchg
dec
std
jnp
addb
and
push
jns
adc
in
sbbb
sbb
ret
mov
add
and
jo
push
popf
or
movsb
addr16
int
pop
lret
fnstsw
cs
mov
imul
cmp
call
push
xor
movsl
mov
adc
pop
daa
pop
inc
mov
jns
or
mov
cli
imul
pop
out
and
mov
inc
imul
jnp
inc
or
arpl
stc
inc
jnp
mov
dec
xchg
leave
inc
test
mov
xor
mov
dec
pop
jmp
fmull
adc
icebp
cwtl
jae
out
test
bound
pop
xor
pop
std
mov
rorb
xor
jb
test
xor
inc
dec
lcall
out
push
jge
mov
xor
mov
es
cwtl
xchg
inc
dec
sahf
test
mov
dec
mov
dec
in
pop
das
jb
test
jns
xor
in
xor
fstpt
sub
jg
add
push
jmp
cmpsb
in
jnp
mov
jne
loopne
fstps
push
xor
mov
push
sub
sbb
ja
sbb
out
cmpsb
dec
dec
sbb
into
pop
shl
lock
mov
sub
sub
jno
inc
mov
in
add
lret
repz
movsl
std
sub
adc
jno
fwait
mov
loopne
pushf
dec
loopnew
mov
jns
xor
push
outsl
sbb
jg
mov
cmpsb
jl
or
les
jb
xchg
xor
rcll
fwait
push
outsb
adc
out
cli
dec
jnp
adcb
mov
inc
mov
test
mov
fistpll
and
stos
mov
movsb
or
js
mov
xor
push
mov
nop
pop
inc
test
mov
fsubrs
xor
xor
push
rcrl
inc
xchg
xor
jge
add
pop
inc
dec
jmp
or
scas
movsl
out
xorl
insb
or
mov
outsb
hlt
out
lods
mov
inc
push
xor
insl
leave
jne
push
sub
sub
fistpll
sbb
loope
dec
xchg
xor
jge
adc
shlb
out
jb
push
cmp
push
insl
addl
sub
fisttps
negl
jns
shll
test
icebp
mov
outsb
xchg
shlb
or
pushf
or
inc
sub
dec
and
mov
gs
jge
adc
roll
and
dec
jno
pushf
xchg
jnp
dec
dec
and
mull
dec
stos
inc
mov
add
xlat
lock
jae
xchg
out
or
stc
push
dec
sbb
dec
sub
mov
mov
in
sti
sbb
fucom
repnz
mov
cmp
xor
and
mov
cld
shlb
arpl
pop
int3
adc
or
add
mov
xor
inc
aad
out
mov
out
mov
push
inc
aas
mov
test
xchg
std
xor
add
in
mov
shr
inc
mov
dec
in
inc
out
add
mov
or
xor
or
mov
sbb
xchg
cltd
imul
cmpl
imul
ret
imul
xchg
fbstp
scas
movsb
ss
cwtl
push
int3
push
movsb
outsl
mov
push
sbb
in
jnp
cmpsb
stc
lods
icebp
and
cmp
xchg
dec
mov
inc
push
lods
pop
pusha
mov
sub
sbb
mov
sub
inc
jnp
xor
xchg
xlat
sbb
adc
rorl
repnz
adc
cmp
rcll
ss
cmp
xlat
mov
fwait
adc
add
icebp
adc
insl
xchg
ret
mov
stc
sub
ficoms
xchg
repnz
cmp
adc
or
imul
fildll
inc
inc
adc
sahf
mov
push
scas
js
in
outsb
xchg
out
ljmp
imul
xor
fnstcw
or
jnp
cmp
scas
pop
adc
cmp
cmpsb
push
ret
inc
loope
mov
ret
jae
pop
sbb
cld
jmp
cmp
ror
dec
cmp
dec
jmp
cmp
adc
test
xor
xlat
shrl
in
les
es
or
mov
push
cmp
mov
push
push
jp
inc
mov
lock
gs
pusha
cmp
gs
mov
mov
sub
jne
cmpsl
fcomip
mov
loope
in
hlt
inc
jnp
dec
mov
jg
data16
cs
movsb
or
lock
int3
jae
add
movsb
jg
enter
xchg
mov
cli
mov
push
xor
es
push
jbe
push
jno
mov
aaa
xchg
aam
push
add
movsb
btc
jnp
mov
sbb
dec
jns
and
out
sarl
dec
pop
push
ds
inc
jne
out
push
inc
add
adc
adc
add
jne
mov
push
fxtract
nop
dec
inc
and
xlat
stos
mov
mov
mov
push
jp
ja
movups
adc
inc
xchg
adc
dec
pop
push
mov
jno
mov
adc
dec
addr16
sbb
dec
movsb
test
fdivrl
push
pushl
les
stos
pop
push
cmp
xor
mov
jne
sbb
or
sub
push
sub
iret
push
mov
cmc
sbb
mov
mov
jmp
test
test
cmp
ffreep
mov
fldt
aad
lods
fwait
test
sbb
or
movsl
push
inc
repz
add
dec
pop
sub
inc
inc
dec
push
mov
xchg
jg
mov
xchg
les
in
sti
cmc
mov
int
dec
mov
dec
ret
in
sub
xchg
insb
and
shll
inc
hlt
add
in
fiadds
out
insl
jo
dec
xor
mov
inc
std
test
pusha
mov
and
sbb
insb
and
ret
stc
ret
ret
ljmp
daa
add
jae
jnp
xor
pop
gs
dec
mov
or
dec
add
sub
dec
in
fldenv
stc
in
jnp
jle
popf
dec
push
repz
outsb
add
jg
ret
adc
push
lea
xor
gs
fldl
fs
mov
add
arpl
xor
inc
mov
add
dec
push
mov
jnp
cmp
into
insb
cmc
push
jne
mov
fdivrl
out
mov
repz
leave
jb
test
arpl
sbb
ret
dec
inc
jo
jl
testl
push
xlat
xor
xchg
cmp
cwtl
or
inc
mov
pop
dec
or
pop
negl
mov
xchg
divl
mov
or
push
add
fisubl
fstpl
rol
jmp
sbb
cmc
pop
jle
dec
jmp
insl
ret
sbb
fnsetpm(287
jae
sti
xor
xchg
adc
or
lds
lods
push
jb
icebp
ret
cmp
aaa
push
stos
call
and
push
mov
cmpsl
sahf
pop
bound
xorb
mov
dec
lahf
jnp
mov
push
or
mov
mov
mov
xchg
sub
sti
fstl
inc
js
xchg
dec
fnstsw
and
in
inc
and
les
sub
cmpsl
movsb
or
imul
push
and
loop
and
mov
je
hlt
cld
jb
cld
or
sbb
icebp
pop
cs
cmp
inc
pop
loop
jnp
mov
test
xchg
enter
ljmp
jmp
jae
cmpsl
rcll
ficompl
mov
gs
arpl
sarb
mov
imul
xor
jecxz
xchg
lret
and
ret
gs
repz
movsb
jmp
cmpsl
roll
sbb
fcmove
dec
lahf
add
std
outsb
push
pushf
add
sub
pop
xorl
enter
shlb
mov
mov
mov
test
and
lcall
in
sbb
or
xor
mov
pop
sub
pop
loope
jg
or
mov
push
cli
je
xor
fistl
mov
mov
pop
push
iret
ja
test
mov
cmp
xor
and
ljmp
data16
mov
sub
adc
add
push
jle
jmp
dec
lcall
mov
jae
mov
sbb
repz
jmp
push
mov
cltd
mov
xor
xchg
pop
ret
add
or
mov
push
pushf
and
pushf
mov
mov
js
jnp
jl,pt
shl
or
iret
fincstp
jle
aad
sub
jne
scas
xchg
jge
fwait
jg
jae
mov
jg
insl
sarb
mov
dec
mov
movsl
sti
inc
and
pop
pop
fcompl
dec
loopne
xchg
loop
shll
xchg
or
mov
cmp
mov
into
or
call
stc
cmp
mul
mov
jp
jge
imul
jnp
cmp
or
or
test
lea
scas
xor
shl
adc
lcall
lods
jb
lret
xchg
jnp
ds
dec
testl
jmp
xchg
mov
jns
mov
popf
int3
xor
sarb
popf
stos
adc
xchg
je
cmp
cltd
vmovlps
sub
xchg
sub
push
inc
inc
fimull
aam
cmp
ljmp
mov
lahf
mov
lahf
xchg
and
repz
adc
or
lock
daa
and
mov
test
xor
sub
mov
lds
add
jge
push
popa
sub
fisttps
mov
cmpsb
stc
jb
lret
mov
cld
dec
es
or
mov
xchg
addr16
insb
cmpsb
dec
addr16
mov
mov
jmp
push
pop
and
mov
jae
js
jne,pn
jl
and
jne
out
iret
cs
lret
aad
mov
xchg
in
cmpb
scas
sbb
imul
hlt
mov
push
xor
hlt
out
push
mov
pushf
rolb
pop
cmp
mov
push
rorb
dec
push
hlt
sub
popf
jns
ret
push
mov
pop
inc
xchg
jmp
lods
andl
stos
arpl
mov
fnstcw
ja
cltd
mov
negl
lds
inc
push
popf
push
jae
mov
test
in
xor
out
dec
push
sbb
lods
sbb
dec
ret
leave
je
bound
testl
nop
add
mov
cmc
int
and
and
xchg
cs
imul
mov
fnsave
sarb
inc
iret
dec
dec
icebp
push
iret
jl
jne
aad
jp
popa
mov
and
aaa
repz
jmp
add
shrl
pop
cld
add
cmc
and
xor
movsb
dec
pop
leave
adc
xchg
jge
fcmove
sbb
movsb
mov
lcall
test
sbb
je
movsb
lahf
cld
sub
adc
stos
cltd
add
sarl
jl
push
mov
pop
xchg
stos
testl
jg
jae
mov
movsb
cld
push
mov
xlat
or
enter
and
ret
fstpl
or
sbb
xchg
int
data16
out
fstpl
orl
stos
into
stos
roll
nop
push
lods
and
dec
pusha
les
addr16
add
enter
jae
inc
or
add
dec
fidivrs
add
cmp
mov
xchg
repz
mov
push
jge
xor
movsb
popf
aam
jns
arpl
dec
sub
lea
stos
dec
in
out
or
repnz
mov
nop
rcl
pop
lods
test
add
inc
hlt
pop
pop
sub
lods
inc
dec
je
jg
inc
mov
test
stos
inc
stos
ja
aam
sbb
adc
pop
jl
add
push
jle
fcmove
xor
or
lcall
mov
rclb
pop
mov
fwait
inc
inc
sub
in
imul
push
xchg
jmp
or
fcomip
inc
repz
sub
push
xchg
sti
add
inc
test
ret
inc
ret
ja
jmp
sbb
mov
inc
shll
movsb
push
pop
jnp
add
push
dec
inc
push
lcall
push
pop
sub
in
je
movsb
xor
xor
adc
test
cmp
ja
xor
sbb
adc
pop
jl
add
push
jle
xor
mov
dec
mov
push
mov
in
in
dec
fistpll
pushf
in
jb
dec
lock
jbe
int
call
mov
pop
jbe
inc
mov
xchg
inc
dec
jnp
cwtl
testb
push
fimuls
nop
push
xor
cmp
mov
stos
dec
fisttps
arpl
stos
jl
mov
stos
data16
imul
sbb
imul
rclb
or
ljmp
or
imul
lods
test
fbstp
jae
imul
inc
pop
mov
xchg
jnp
mov
inc
inc
ja
dec
pop
sbb
adc
jl
add
push
jle
sbb
inc
test
movsb
test
movsb
test
jge
fcmove
lods
neg
lods
int3
mov
xchg
mov
sbb
sub
jmp
pop
inc
movsb
mov
test
and
int3
mov
jecxz
push
and
sbb
lret
in
inc
mov
mov
orl
xchg
data16
cmp
push
imull
xchg
jecxz
cli
inc
xchg
sub
xchg
add
add
iret
mov
std
mov
mov
adc
rcl
mov
pop
jno
push
movsb
lret
pop
sbb
sti
inc
daa
or
push
loop
aaa
jge
and
lds
mov
mov
jmp
rolb
mov
dec
sbb
rorb
cs
cmpsl
jge
fs
cmp
divl
in
xchg
xor
jbe
testl
sbb
test
mov
adc
push
inc
xchg
in
add
inc
test
hlt
sub
in
cld
popa
movsb
cld
push
xchg
cld
add
inc
test
les
jmp
mov
int3
push
xchg
int3
add
aam
jbe
xchg
test
faddl
ja
inc
pop
sbb
adc
jl
add
push
jle
fcmove
xor
fbstp
sub
cmp
lret
mov
add
jmp
scas
or
int3
or
inc
mov
adc
or
inc
jl
xor
mov
inc
jl
xor
mov
inc
jl
inc
je
in
jns
add
xlat
mov
mov
daa
push
in
ljmp
and
dec
je
xlat
jl
sbb
add
push
xchg
dec
cmpsl
inc
push
jne
push
mov
pop
test
in
mov
xchg
stos
cmpsl
inc
mov
jle
mov
mov
sbb
add
push
xchg
mov
xchg
mov
fwait
test
in
jecxz
add
push
xchg
jmp
inc
repz
repz
sahf
in
sti
sbb
push
xchg
ret
cmpsl
inc
lret
jne
lret
and
mov
and
or
or
xchg
hlt
pop
out
iret
jp
push
mov
popa
cltd
inc
cmpsl
xchg
add
dec
jnp
and
inc
call
fldln2
sub
sub
xor
jp
filds
inc
add
in
or
or
adc
jp
fbld
arpl
in
imul
cmpsb
xchg
jae
adc
and
inc
jnp
in
inc
dec
int3
inc
cmpsb
xchg
dec
add
dec
mov
push
add
jp
sahf
dec
in
mov
movsb
cmpsb
repz
add
push
dec
je
mov
pop
inc
mov
test
and
cmpsb
and
mov
adc
flds
shlb
notl
repz
sub
adc
sti
test
inc
int3
mov
aam
movsb
xchg
push
xchg
xchg
add
inc
test
pushf
inc
pushf
ja
in
sbb
adc
push
jle
fcmove
hlt
mull
movsb
cld
push
inc
xchg
cld
add
test
les
jmp
imul
push
xchg
int3
add
inc
test
aam
aam
xlat
sub
fsubr
faddl
lret
pop
jl
add
push
jle
fcmove
sub
fildll
xchg
pop
jl
add
push
push
lds
cmp
inc
cmp
jbe
push
scas
add
int3
add
xchg
or
sbb
in
lods
xchg
repz
idivb
and
negl
jae
xlat
enter
mov
rcrb
fs
int3
cmpsb
xchg
insb
add
insb
mov
je
je
clc
fistpll
fldln2
inc
dec
int3
inc
cmpsb
xchg
dec
add
dec
mov
push
add
jp
fistps
fldln2
mov
xchg
stos
add
stos
mov
mov
mov
clc
fistpll
orl
cmpsb
xchg
mov
adc
xchg
jp
fistps
jecxz
int3
jecxz
xchg
jmp
adc
cmc
shll
jbe
push
mov
dec
repz
das
dec
xchg
stos
inc
dec
aas
out
mov
sbb
sub
cwtl
cmpsb
inc
in
ret
cmpsb
sti
ret
cmpsb
jp
dec
inc
inc
lret
mov
add
jp
inc
fcmovnu
in
and
and
sub
jp
fistpll
inc
cmp
in
add
add
or
jp
fistps
inc
sbb
in
arpl
arpl
imul
clc
xchg
jnp
xchg
inc
add
inc
mov
dec
add
jp
dec
inc
fists
push
ja
adc
cmp
repz
pop
sbb
test
fwait
mov
pushf
jge
mov
nop
push
mov
pop
rcr
and
jnp
sbb
aas
lcall
imul
mov
inc
cmpsl
sub
jmp
sub
dec
repz
sub
dec
push
cmp
inc
jg
pop
sub
mov
loopne
orl
jmp
std
xor
lods
mov
loope
les
mov
and
jge
movsb
and
mov
mov
mov
int3
aam
mov
push
jle
ficompl
adc
pop
jl
add
push
jle
fcmove
pushf
neg
pushf
int3
mov
xchg
in
sbb
pop
je
inc
add
push
jle
fcmove
hlt
mull
jl
add
push
jle
fcmove
testl
push
jle
fcmove
aam
int3
jmp
xchg
faddl
sbb
int3
and
fbld
mov
inc
in
sub
shl
movsb
xor
inc
xchg
xor
cmp
inc
jl
xor
das
rorb
xchg
out
in
mov
cmp
or
jecxz
test
jmp
inc
inc
push
xchg
mov
or
add
inc
push
or
xchg
adc
cmpsl
and
inc
sbbb
nop
sbb
add
push
xchg
insb
cmpsl
inc
je
jle
mov
jl
leave
jl
sbb
add
push
xchg
dec
cmpsl
inc
push
jne
push
mov
pop
test
in
mov
xchg
stos
cmpsl
inc
mov
jle
mov
mov
sbb
add
push
xchg
mov
xchg
mov
fwait
test
xor
push
fimuls
negl
hlt
dec
mov
clc
sbb
stos
push
push
icebp
loop
in
daa
sub
sub
rcrl
jp
jnp
inc
js
inc
gs
xchg
loopne
pop
mov
add
mov
add
shll
data16
filds
sbb
jmp
ja
jecxz
loopne
movsb
sub
rep
fyl2x
out
inc
or
stc
sbb
ffreep
inc
ret
fldln2
lret
dec
int3
lret
cmpsb
xchg
roll
adc
mov
fildl
jp
fbld
inc
and
in
sub
sub
xor
jp
filds
inc
add
in
or
or
adc
jp
fbld
arpl
in
imul
cmpsb
xchg
jae
adc
and
inc
jnp
lock
das
shl
pop
aam
movntq
xor
stos
jnp
mov
xchg
pushf
jg
aad
jl
rcrl
and
xor
ficomps
cmp
mov
test
arpl
lcall
into
dec
mov
mov
leave
arpl
dec
add
or
push
dec
arpl
dec
popa
and
push
xchg
push
add
xlat
dec
test
push
xchg
and
inc
lods
movsb
mov
jae
ret
pop
sbb
adc
pop
jl
add
push
jle
fcmove
mov
mov
test
inc
ficompl
adc
add
xor
mov
test
mov
iret
mov
test
cld
andb
test
xor
cmc
push
push
movsl
rol
sbb
push
push
iret
js
add
imul
mov
add
hlt
push
test
jns
inc
adc
decl
fisttpl
jg
jge
jae
and
arpl
dec
fs
orb
inc
cmc
dec
mov
dec
adc
jnp
daa
sub
das
xor
adc
cld
sub
ret
hlt
mov
dec
fld1
and
or
es
push
pop
movsl
pop
mov
mov
scas
sbb
xchg
loopne
push
and
cld
aam
adc
pop
pop
xchg
push
jnp
adc
jnp
and
ret
neg
ret
and
je
push
mov
pop
lcall
adc
adc
push
sarb
jb
mov
je
lods
adc
fstl
stos
fmull
sbb
jg
decl
push
xchg
dec
sti
mov
push
cmp
insb
adc
in
inc
mov
fidivrl
cmpb
adcb
std
iret
push
pop
push
mov
mov
mov
pusha
leave
push
sahf
movsb
test
mov
nop
or
jg
push
in
pop
das
adc
pusha
andl
ret
mov
lret
push
adc
push
mov
in
mov
pop
cmp
mov
mov
or
xlat
test
mov
out
push
nop
dec
pop
jns
aad
iret
fcomp
loopne
lret
sbb
int3
adc
aam
outsb
cmp
ja
mov
sbb
addr16
mov
and
dec
jns
bound
push
push
or
mov
scas
dec
mov
jnp
js
add
out
test
push
jb
sti
add
popa
add
sbb
mov
int
push
mov
das
lret
pop
push
mov
jno
out
pop
inc
std
dec
int
je
stmxcsr
dec
push
or
adc
out
sub
lret
ja
mov
inc
repz
lret
inc
and
scas
mov
jge
pop
mov
ljmp
insl
imul
adc
je
dec
jno
push
xor
mov
fwait
into
inc
adc
adc
scas
scas
sub
shlb
and
sbb
les
rorl
mov
shlb
xor
pop
cmpsl
repz
rcrl
fstpt
inc
mov
or
xor
sbb
push
je
andb
shlb
cmp
hlt
addb
pop
jae
dec
aam
xor
mov
sbb
aam
xor
push
mov
clc
push
dec
pop
inc
orb
dec
or
sub
xor
or
mov
loopne
rclb
mov
sub
in
icebp
mov
shrb
mull
jecxz
adc
out
mov
mov
jge
gs
les
add
hlt
dec
jge
and
xchg
jl
mov
lret
cmp
aas
cmp
in
jnp
insb
popf
std
adc
inc
add
jmp
push
mov
mov
dec
cmp
stc
dec
inc
push
lods
outsl
mov
pop
mov
pop
gs
mov
leave
movsb
stos
dec
es
iret
inc
ret
fisttps
push
add
fcomip
popf
jae
push
xchg
push
mov
inc
rorl
jne
xor
mov
fdivrs
sbbl
sti
mov
pop
xchg
sti
jbe
push
pop
loopne
decb
dec
dec
lcall
fisttps
out
ret
xchg
dec
lods
fdivrs
jge
xor
iret
inc
pop
push
popa
push
add
sbbl
das
dec
inc
mov
mov
jae
fisubrl
inc
xchg
push
push
fdivrl
sbb
mov
ret
jl
dec
scas
fiadds
pop
jl
mov
mov
sbb
push
std
jp
jno
imul
lea
push
jg
or
nop
mov
pop
loope
mov
pop
xor
sbb
push
loopne
ja
cwtl
sbb
decl
mov
jns
xor
lahf
inc
jb
std
addl
dec
pop
push
jle
adc
jmp
arpl
push
in
adc
fldcw
jne
jl
shl
loopne
roll
xor
add
bound
enter
mov
ja
mov
fmull
pop
adc
sti
xchg
inc
sub
rcll
aad
sbb
dec
je
xchg
insb
dec
jbe
mov
sbbb
jns
cli
je
inc
je
or
push
bound
dec
add
inc
dec
xchg
mov
xor
leave
dec
lods
cmc
mov
or
fwait
push
cmp
cmpsl
or
mov
test
std
out
or
mov
hlt
dec
jno
pop
dec
roll
jnp
imul
pop
push
cmpsl
push
mov
pop
inc
add
push
repnz
mov
push
js
repnz
push
shl
test
dec
or
pop
rcrl
hlt
xchg
std
ja
pop
and
xor
inc
lret
int
inc
inc
xor
lahf
cmpsl
roll
sbb
aas
or
dec
xchg
test
mul
daa
and
mov
popa
or
mov
and
inc
lret
jns
fstpl
sub
push
add
sbb
fisubl
or
or
xchg
jge
call
out
addb
xor
int3
insb
or
imul
and
mov
lret
mov
and
jg
inc
cmp
aam
pop
aas
arpl
pop
aam
and
bound
gs
sub
bswap
out
cmpsl
xor
imul
xchg
jge
dec
test
fcoml
aaa
dec
xlat
fdivrs
mov
loopne
adc
rolb
stos
jg
and
cmc
xchg
mov
mov
dec
jno
aas
aad
mov
jno
andl
push
addb
cli
jl
dec
xor
push
mov
xchg
dec
mov
cmpsl
pop
jg
jge
dec
xor
fwait
icebp
mov
sub
dec
jb
and
test
std
and
popa
xor
mov
jge
dec
sbb
jns
add
mov
ja
outsl
push
sbb
sub
mov
ja
outsl
push
out
and
fisttps
mov
sbb
daa
jge
and
or
sbb
xchg
xor
jne
or
jl
lcall
pushf
dec
nop
loope
push
push
push
xchg
xor
push
or
fistpl
xchg
xor
imul
jp
loopne
xchg
jne
add
sub
push
dec
into
jae
rcl
mov
or
add
dec
mov
xlat
adc
and
xchg
and
insl
cmp
sbb
pop
dec
testl
xlat
popf
sbb
and
call
andb
stc
xlat
mov
fists
and
pop
pop
loopne
xor
arpl
leave
jp
adcb
xchg
fisttpl
push
pop
cmc
mov
mov
lret
fisttpl
int3
xchg
hlt
dec
push
dec
jb
lods
movsl
movl
pop
sbb
jg
mov
jmp
inc
mov
icebp
ja
push
adc
in
xchg
mov
pop
xor
inc
pop
xor
push
push
mov
or
jbe
decl
aaa
sti
adc
add
push
dec
push
pop
xchg
imul
ds
gs
push
add
jae
push
iret
push
in
xchg
push
lret
sbb
je
sbb
dec
jge
and
jns
push
aas
sub
std
dec
loop
inc
fldl
and
jns
pop
hlt
push
jae
ja
mov
dec
dec
jbe
js
mov
and
pop
call
arpl
shll
aaa
int3
repz
loope
xchg
test
adc
add
lods
aam
adc
jae
lcall
fs
push
and
adc
dec
sbb
cmp
jge
or
outsl
jp
mov
cmp
cli
jnp
jae
inc
enter
loopne
subb
std
sub
and
enter
push
lcall
add
enter
mov
lods
xor
cld
into
jge
push
mov
add
adc
int3
xchg
mov
repz
jb
imul
mov
or
rcll
popa
jnp
pusha
std
mov
imul
bound
mov
jns
mov
sub
inc
adc
cmp
int3
xor
sub
and
adc
xchg
fmul
sub
or
and
inc
sar
daa
mov
xchg
jbe
pop
sbb
push
fildl
mov
lret
jecxz
in
fwait
insb
jne
mov
xor
bound
rcrl
addr16
movsb
shr
lcall
adc
dec
icebp
mov
mov
sbb
dec
hlt
mov
outsb
cltd
jae
test
mov
or
cmp
inc
mov
inc
gs
mov
fiaddl
xchg
xlat
cwtl
test
dec
push
inc
les
inc
mov
repnz
add
jg
xchg
movsb
cmp
les
cld
add
sahf
loopne
sbb
xor
jge
stos
int3
iret
pop
int3
ret
sti
insl
dec
movsl
xchg
push
fcompl
push
or
adc
sbb
inc
cmpsb
es
in
mov
pop
rcll
jns
les
push
frstor
jl
cltd
mov
xchg
push
negl
pushf
ss
rolb
jmp
clc
xlat
xchg
xchg
pop
lods
fimull
or
pop
xchg
repnz
jnp
subb
jg
inc
call
fimull
std
jl
cmpsl
dec
leave
jle
jp
push
push
push
sub
insl
cmp
jae
mov
push
into
mov
ret
push
or
jnp
xor
jno
jmp
mov
pop
lods
xor
filds
xchg
jns,pt
loope
imul
jbe
nop
repnz
ljmp
loopne
sysexit
mov
xlat
adc
push
into
fdivl
or
iret
data16
imul
inc
xlat
imul
std
enter
sub
sahf
xchg
xchg
sti
sti
push
jnp
jmp
pop
and
jmp
sbbl
add
int3
jns
aam
cs
or
or
int3
push
xchg
sub
mov
pop
jnp
es
js
jmp
aad
pop
jecxz
xchg
inc
cmc
cmp
repz
mov
adcl
pop
inc
mov
mov
lret
and
adc
push
lods
adc
dec
xor
rclb
adc
insl
jns
fwait
icebp
sub
leave
cwtl
cmpb
xchg
inc
dec
pop
nop
mov
sbb
inc
adc
cmpl
inc
rcrb
push
push
enter
sar
sub
fisttpll
in
jns
jnp
not
pop
cmc
lret
xchg
ret
add
cmpsb
dec
push
clc
movsb
cwtl
fistpl
add
push
inc
iret
xchg
movsl
iret
mov
out
lods
out
insl
test
jle
mov
sahf
xchg
je
pop
and
mov
iret
xor
mov
xorl
push
pop
sbb
sti
invd
sub
dec
fcmovnbe
mov
loope
inc
jbe
mov
cmp
inc
fucom
and
in
fcomip
xorl
iret
daa
push
fldcw
fwait
mov
pop
jecxz
imul
xchg
mov
jp
pop
mov
test
jo
dec
and
add
lds
jle
cltd
dec
adc
mov
xor
repnz
push
xchg
dec
lcallw
movsl
jl
jno
je
pop
cli
add
add
divl
mov
jl
inc
je
pop
sti
mov
push
jl
das
xor
js
lahf
pop
jns
loopne
lock
rolb
loopne
es
mov
movsb
fwait
pusha
mov
mov
movsl
push
xor
push
inc
jg
mov
sbb
movsl
sub
and
mov
sub
mov
orb
shlb
inc
pushf
jno
jo
ret
shrb
outsb
pushf
fwait
cld
ror
rdmsr
sub
loopne
ljmp
xchg
mov
pusha
jge
mov
in
and
push
mov
pusha
mov
stc
and
lret
jl
daa
test
inc
lock
mov
int
lods
js
cmpsl
lret
sbb
aaa
fiadds
sub
xchg
lret
int3
xor
aam
daa
mov
xchg
xor
push
pop
pushf
lcall
pushf
aaa
lods
push
inc
jge
sub
leave
and
jp
pop
mov
mov
add
push
imul
aad
add
adc
xor
daa
orb
stos
pop
sti
shll
mov
lea
sbb
fs
xor
dec
sbb
mov
cli
les
jmp
test
int
dec
hlt
shlb
dec
push
pop
mov
pop
je
and
jae
pop
dec
push
pop
pop
xchg
push
dec
js
mov
or
push
push
xchg
sub
pop
push
adc
in
jmp
inc
jnp
cmp
pop
cltd
mov
cmp
jns
sbb
scas
mov
aam
push
adc
fs
pop
dec
pop
push
dec
inc
imul
dec
mov
call
insl
jmp
lret
pop
rcl
pop
fldt
arpl
sub
lcall
cmc
inc
dec
push
je
jl
dec
or
fmuls
jbe
sub
push
sbb
jle
dec
mov
inc
repnz
push
loope
add
sarl
cld
sub
sbb
sbb
out
aam
push
xchg
sbb
mov
jne
sbb
aam
leave
sar
cmp
repz
mov
lods
insb
dec
jnp
dec
incb
push
lret
inc
and
aam
dec
lahf
adc
dec
adc
jl
shrb
add
repz
mov
dec
aam
push
fsubrs
pop
cmp
sti
sbb
push
adc
dec
xor
cwtl
fs
rorl
test
pop
aam
ret
lahf
pop
out
stos
pop
add
jnp
dec
jbe
mov
je
push
jg
dec
outsl
push
ret
das
pop
pop
mov
cs
mov
push
xchg
xchg
pusha
inc
in
jl
push
fmuls
sub
icebp
aas
jmp
jge
iret
daa
jne
pop
cmp
xchg
iret
sti
xor
mov
pop
jmp
call
shlb
inc
ja
in
ljmp
clc
and
jbe
mov
out
stos
ror
mov
and
sub
f2xm1
jg
jg
fldt
lcall
jecxz
jmp
pop
aad
cwtl
jmp
jno
cltd
jl
sbb
sbb
jg
mov
sub
fldcw
inc
and
adc
leave
xor
in
aam
testl
dec
stos
cmp
cmp
mov
lds
gs
or
push
or
xchg
cld
jne
lahf
sarb
icebp
xor
adc
stos
dec
addb
xor
outsl
daa
jbe
sub
mov
xor
adc
mov
cs
jnp
and
lea
mov
es
add
mov
int
jae
adc
sbb
fcompl
jnp
fcompl
jno
aad
rcr
dec
jge
xchg
inc
pop
push
fs
or
cmc
mov
cmp
pop
int
push
cmp
movl
mov
sbb
mov
pop
cmp
andb
push
outsb
das
pusha
push
and
pop
stc
jge
aaa
lds
dec
dec
inc
jl
aam
inc
lock
inc
adc
pusha
jns
push
arpl
pusha
clc
inc
je
xor
ja
push
inc
xor
aas
mov
scas
jnp
iret
call
lods
cli
mov
in
sub
dec
pop
repz
fcmovnbe
out
jb
push
inc
sub
stc
js
fcmovnu
xor
in
pop
lds
jno
call
inc
inc
jno
sbb
scas
jno
or
jne
pushf
decl
fdiv
movsb
sti
mov
push
lret
xor
loop
xchg
int
pop
cld
pop
les
push
fcmovnbe
fcompl
pop
sub
xor
cmp
add
or
adc
pop
jl
mov
mov
push
sbb
arpl
mov
inc
inc
aas
pop
adc
cmp
push
sbb
inc
ret
imul
scas
sbb
adc
mov
nop
jno
adc
dec
dec
dec
ljmp
ret
jae
aad
jge
inc
mov
push
jl
pop
rcll
in
fcomi
imul
sbb
fwait
sbbb
adc
rcr
int3
stos
in
xchg
cli
jle
repz
xor
push
jns
shrb
rolb
xor
aaa
jl
dec
cmc
mov
fnstcw
pop
add
adcl
pop
cmp
fisttps
mov
in
sbb
inc
addr16
inc
pop
jb
inc
popa
adc
jmp
xor
idivl
ja
ljmp
dec
push
fwait
loope
jno
mov
enter
mov
fwait
aam
mov
jne
cmp
jb
jmp
scas
inc
jns
add
decb
jnp
and
push
addr16
imul
pop
xlat
mov
adc
arpl
ds
xor
sti
les
out
and
aam
or
pop
bound
mov
and
int3
lret
fcompl
aam
fisubl
sbb
pushf
push
js
insb
pushf
dec
push
mov
xchg
dec
push
ja
jb
xor
pop
xchg
lods
or
inc
pushf
daa
js
jmp
jo
testb
movsl
daa
mov
js
xlat
or
inc
and
aam
cmp
mov
lret
xchg
mov
xchg
adc
or
xchg
in
cmp
adc
push
jns
mov
lcall
int3
fdivs
jbe
out
jl
seta
dec
test
pop
ret
sub
jp
jo
out
mov
rclb
out
inc
sub
rclb
movsb
lods
loop
into
rcll
fcomps
loope
les
rorl
pop
adc
aas
daa
pop
inc
push
sti
adc
adc
jo
cmp
out
mov
add
jbe
dec
xchg
inc
repz
or
test
cmp
mov
push
or
push
out
xchg
ret
lret
repnz
xchg
add
push
sbb
imul
mov
jnp
cmpsl
lea
int
mov
xchg
sbbb
out
and
in
ret
orb
aad
int3
push
std
mov
xchg
mov
and
das
lods
movaps
xchg
adc
jbe
and
adc
cmpsl
inc
fs
or
xchg
dec
aad
lods
fs
int3
sbb
out
imull
insl
adc
add
xchg
sti
dec
aam
xor
or
test
sbb
lods
push
testb
stos
mov
jno
sbb
lret
fisubrl
jp
xchg
dec
sub
orb
jg
or
imul
sbb
test
lods
pushf
out
push
xadd
jecxz
mov
xor
pop
cmp
cmp
sti
dec
out
repnz
into
mov
daa
xorb
push
out
les
sub
cltd
or
mov
int3
gs
movw
fcoml
sub
jno
jl
notb
push
fwait
push
xchg
mov
or
add
adc
mov
jl
sbb
std
jb
add
iret
mov
mov
or
cmpl
sti
mov
add
and
ss
jmp
mov
push
push
push
imul
pop
stos
jno
enter
or
shlb
sub
stos
pushf
icebp
mov
lret
xacquire
jp
pop
test
add
stos
cmpsb
cmovns
cmp
mov
fcmovb
add
out
push
dec
mov
std
mov
adc
in
push
jno
loop
lret
adc
jno
pop
das
mov
fs
stos
pop
sub
inc
test
movsb
mov
out
jns
or
or
jl
or
mov
jmp
inc
or
dec
jg
test
mov
jnp
push
push
jno
jl
lods
pop
cwtl
loopne
inc
mov
int3
jge
jp
pop
fcomip
cmp
rcrb
insb
adc
sub
pop
hlt
popa
adc
stc
test
gs
lods
repnz
int
call
arpl
push
fst
mov
lret
mov
dec
push
int
xor
jnp
push
int3
test
mov
jno
fdivrs
inc
out
jmp
add
sbbb
notl
stos
jmp
pop
out
jmp
test
dec
mov
xchg
lods
daa
dec
mov
loop
inc
ss
popf
xor
adc
xchg
fmulp
fwait
dec
jl
fdivrp
jns
cmp
fidivrs
roll
dec
in
inc
aas
jbe
std
data16
xchg
fisubs
inc
popa
sbb
add
push
push
jmp
sub
dec
out
lahf
lds
adc
sti
jl
inc
push
fisttps
ja
jns
icebp
shlb
rcrb
sbb
push
nop
jae
cmpsl
push
and
push
and
adc
negl
or
pop
ret
mov
dec
dec
pop
daa
inc
push
stc
xor
push
clc
xchg
fildll
lret
in
jb
xchg
pop
cld
mov
jb
shrb
mov
jg
cli
jl
pop
out
sbb
xchg
push
stc
cld
mov
mov
mov
jns
std
mov
call
jns
push
addr16
push
loope
xor
xor
push
and
out
inc
xchg
dec
xchg
push
inc
jbe
or
cmp
fwait
mov
inc
int
ljmp
add
stos
mov
dec
out
dec
fsubs
mov
sub
lcall
repz
add
cmp
jl
dec
incl
fwait
lds
and
leave
fbld
cmp
hlt
pop
sti
adc
xor
fwait
mov
mov
cmpsb
mov
ret
cmp
push
dec
inc
ljmp
or
and
mov
sub
inc
push
pusha
dec
and
out
sub
pop
and
xor
cmc
or
and
cmpb
cmc
push
ja
sti
cmp
outsb
and
pop
jns
dec
out
xor
or
aam
mov
mov
pop
ja
push
hlt
inc
and
clc
mov
cmovnp
xchg
lods
sbb
adc
jle
outsw
imul
xor
xor
adc
mov
pop
jbe
inc
in
sub
stc
xlat
jns
xor
or
adc
sarl
in
outsl
mov
pop
lcall
sbb
ja
xchg
lahf
imul
jge
dec
outsl
mov
loopne
and
flds
cmp
sbb
das
push
outsb
and
jle
add
addr16
or
adc
adc
test
repz
and
mov
xorb
sub
psubsb
leave
mov
xchg
call
cs
loope
dec
xchg
clc
mov
stos
aas
mov
arpl
xchg
jg
mov
lds
pusha
mov
ficoml
xor
das
std
xchg
add
sbb
flds
in
pop
push
inc
cmp
cmp
sti
sbb
push
adc
sbb
arpl
push
or
pop
in
jecxz
add
xchg
jnp
jbe
cli
jge
lods
sbb
scas
mov
xchg
aam
xor
cmc
jl
jp
cltd
and
xchg
xor
aam
in
xor
enter
jge
adc
mov
inc
xorl
push
jl
int3
ret
sti
aad
je
add
repz
add
xchg
jecxz
repz
push
in
addr16
jb
and
mov
adc
jae
scas
jns
push
addr16
add
and
jg
add
or
dec
mov
loopne
add
sub
dec
es
add
jae
and
loope
sbb
out
je
fdivs
xor
stos
out
xchg
in
inc
lea
or
xchg
fistl
mov
adcb
or
sub
cmp
test
int3
aas
or
movsb
jl
dec
jns
cmpsb
pop
xorb
cmp
sbb
scas
mov
xor
jl
xchg
push
jae
je
xlat
mov
aas
pop
mov
stos
shll
mov
jle
lods
inc
dec
mov
dec
jnp
stos
int3
std
inc
nop
xchg
mov
mov
cmpl
rorb
dec
adc
mov
xor
xchg
jbe
orb
je
insl
mov
jbe
adc
popa
in
push
inc
sbb
push
in
dec
adc
ljmp
aam
das
divl
add
dec
fbstp
sub
pop
push
mov
popl
iret
and
push
stc
mov
sub
aas
mov
mov
std
rolb
cmp
lock
divl
push
dec
movsb
imull
sub
inc
adc
into
dec
mov
add
fdivp
mov
xchg
add
pop
jmp
and
loop
out
inc
inc
lea
adc
stos
lcall
push
insl
inc
inc
sbb
jp
jecxz
adc
enter
test
and
mov
dec
jns
xchg
mov
mov
add
add
xor
add
add
je
scas
loopne
sbb
dec
mov
repz
cmp
fcoml
stos
call
adc
jle
dec
imul
stos
mov
and
mov
push
mov
jp
in
lock
lret
mov
lahf
icebp
push
arpl
lret
imul
in
int3
aam
fists
fs
add
fwait
adc
inc
push
dec
push
xchg
lods
or
lret
cmp
xchg
adc
inc
js
sbb
or
jne
xor
lods
jnp
push
sahf
repnz
jns
jns
jp
push
inc
push
inc
call
insb
ja
jnp
inc
ss
pop
push
call
mov
in
dec
push
or
mov
lods
ffreep
fistl
jg
jae
dec
cs
push
xorb
push
jae
mov
fbld
in
push
jp
mov
sbb
js
cmpsb
loopne
mov
add
mov
cmp
jle
js
jmp
into
mov
stos
add
jae
push
cld
fimull
lods
mov
or
add
outsl
xchg
mov
test
mov
leave
sub
mov
into
sahf
inc
hlt
cmp
inc
out
xchg
xchg
adc
fadds
sarb
cmp
movsl
nop
loopne
fists
dec
sub
sbb
jo
test
pop
adc
sub
lret
xchg
int3
je
mov
pop
push
push
addr16
xchg
or
adc
inc
cmp
pop
rcrb
scas
dec
and
inc
mov
jnp
int3
inc
in
fwait
dec
repz
dec
mov
xchg
pop
leave
lods
dec
mov
lods
jp
imul
cld
adc
js
mov
test
ja
cli
cmp
inc
and
popa
rorl
jmp
imul
jae
cmp
xchg
popa
loope
stc
aas
sub
and
mov
outsl
xchg
and
std
imul
std
stos
dec
adc
adc
test
filds
fs
stc
mov
daa
sbb
lret
sbb
pop
cmc
xlat
add
hlt
xchg
xchg
dec
fisubs
xor
sbb
movsb
rcrb
pop
sar
aam
xor
cld
jbe
sub
mov
das
mov
push
ret
inc
ja
incl
shrb
test
sbb
arpl
jne
and
sbb
cmp
mov
int
out
mov
adc
sub
cmpsb
popa
test
out
cmc
dec
jl
test
stos
es
push
jle
and
adcb
scas
rorl
jmp
mov
insl
add
in
stc
cmp
pushf
mov
imul
pop
movl
jge
popf
dec
inc
sbb
cmpsl
adc
fbld
pop
jl
ret
test
jb
cmpsl
push
push
cwtl
dec
je
mov
mov
pop
int3
loopne
loopne
cltd
cli
or
xor
cmp
sub
mov
shl
push
int3
and
push
stos
pop
outsl
push
xchg
pop
lahf
rcrl
push
addr16
insl
and
imul
mov
ret
std
stc
arpl
push
outsb
lcall
mov
cmp
movb
mov
cli
cld
push
shrl
pop
rorw
push
fucom
aam
mov
jl
repz
daa
or
sti
and
lds
inc
dec
daa
shll
xchg
fistpl
or
aad
push
daa
jle
jecxz
movb
fisttpll
inc
push
loopne
shr
pop
outsb
fiadds
and
lret
iret
fisttpll
ret
mov
push
rorb
ds
add
jmp
or
jno
leave
dec
add
jecxz
adc
push
xor
fists
mov
cs
icebp
sub
push
fwait
les
insl
mov
fwait
insl
pop
imul
dec
pop
iret
hlt
push
stos
aaa
les
mov
mov
mov
or
out
aad
fwait
in
inc
bound
movsl
fisubrl
sub
and
and
bound
pop
mov
mov
inc
and
lahf
fcompl
mov
stc
imul
push
xor
data16
imull
scas
push
icebp
jb
mov
out
xlat
push
ja
mov
adc
lods
push
sbb
stos
adc
ja
add
sbb
jae
adc
int3
pop
and
movl
incb
in
mov
fisttpl
and
jb
sbb
inc
jnp
adc
xor
inc
mov
hlt
adcl
jl
mov
push
ss
mov
inc
push
mov
mov
in
sbbb
mov
call
push
sbb
mov
pop
jp
jnp
pop
cmpsl
sbb
adc
aam
adc
popf
xchg
dec
inc
xchg
es
out
dec
xchg
dec
jne
pop
or
ret
imul
mov
es
bound
jmp
xor
push
mov
xor
repz
adc
out
xor
lret
lcall
fildll
dec
dec
xorb
mov
xchg
and
push
sbb
inc
ficoml
add
dec
loopnew
and
mov
mov
xchg
jg
rclb
or
jno
loope
sub
pushf
push
or
cltd
stc
jno
out
shrl
sbb
jno
in
sub
dec
dec
dec
out
mov
fs
lods
xchg
dec
dec
dec
jo
mov
and
sbb
jne
dec
dec
arpl
sarb
fs
mov
ret
pop
jg
repz
dec
sub
dec
test
fs
mov
xor
lods
enter
or
pushf
sbb
jge
jp
xor
mov
ficompl
mov
add
jbe
adc
in
and
loopne
or
jno
jae
dec
std
pop
mov
int3
rorl
push
stos
clc
jnp
loop
into
les
stc
cmp
cs
sub
mov
cmp
ret
cmc
xchg
add
aam
mul
icebp
dec
lods
cmp
mov
adc
mov
xchg
daa
mov
xor
aam
mov
shll
cmc
pop
mov
test
pop
fcomip
jb
mov
jae
andb
mov
jbe
repnz
cwtl
push
or
jno
fs
cmc
xchg
push
fdivl
jne
cmp
sahf
and
lds
and
add
shll
mov
pop
xor
aad
add
or
jl
and
shll
inc
mov
test
inc
loopne
xchg
adc
jno
cli
mov
arpl
inc
in
fcmovnb
push
bound
gs
hlt
dec
push
stc
push
aas
rcrb
mov
sub
aam
cmp
ffreep
es
repnz
adc
pop
popf
repz
sahf
aam
inc
rcl
ret
sub
into
fcom
lods
jecxz
xchg
dec
je
mov
or
xchg
scas
iret
lcall
and
sbbl
fbld
int3
xor
lret
jae
mov
inc
movsl
push
movsl
jbe
xor
shrb
cmp
repz
fisttpl
js
ret
push
fs
push
mov
mov
js
xor
cmp
stos
mov
das
shlb
mov
xchg
xor
add
adc
add
push
mov
enter
mov
insb
imul
jmp
push
lahf
fsub
divl
inc
into
inc
lcall
cs
dec
cltd
mov
adc
cld
ljmp
les
mov
sbb
mov
sti
lcall
push
fs
jno
and
fistps
loop
inc
or
push
les
aas
add
push
movsl
int3
inc
adc
push
xchg
push
pop
dec
test
jns
mov
adc
aas
push
mov
lods
xor
loope
sbb
das
xor
dec
sub
push
jge
ss
inc
jmp
add
loop
out
pop
jmp
lds
out
sbb
sbb
aaa
jmp
daa
sub
cmp
inc
mov
pusha
jle
call
ror
lea
imul
push
out
ds
xchg
and
sub
add
jmp
outsb
mov
jns
mov
pshufw
add
adc
rcll
or
stc
push
inc
adc
push
sub
push
vrsqrtps
xchg
inc
shl
jbe
adc
jge
push
cs
and
repnz
int3
jl
in
and
test
xchg
int3
arpl
mov
inc
pop
jl
std
jb
xchg
mov
enter
dec
mov
sbb
mov
shl
dec
movsl
sub
mov
cmp
jecxz
rclb
sub
in
fidivrs
mov
aam
push
add
cld
rcrb
es
sub
push
lods
and
movsl
out
jae
loop
jno
testb
sub
push
inc
mov
dec
adc
cld
push
aam
xchg
mov
add
push
dec
daa
inc
pop
test
sbb
ret
jl
std
daa
xchg
cmp
sbb
xchg
push
cltd
mov
xchg
lret
sbb
mov
daa
xor
inc
mov
jbe
push
lods
lock
ja
lret
fisubrl
aas
lds
push
xor
push
add
fwait
jmp
sbbl
fwait
cmp
lcall
test
jge
pop
pop
cmc
mov
test
shlb
pop
stc
inc
push
inc
sbb
subl
scas
cltd
outsl
jnp
push
shrb
in
sbb
insl
fs
popa
cli
xchg
sbb
dec
pushf
jne
in
xor
sbb
bound
xchg
xchg
mov
lods
push
das
scas
xchg
imul
cmp
mov
xchg
in
testb
sbb
inc
rclb
mov
dec
push
dec
negb
loop
inc
mov
les
icebp
inc
pop
fnstcw
mov
dec
mov
pop
mov
lret
push
mov
repz
sti
fistpl
xchg
insb
jp
mov
cmp
stc
mov
jl
stc
pop
cmpl
xor
pop
sahf
mov
movsb
fsts
jns
cltd
pop
inc
fildll
inc
testl
aad
dec
xchg
push
sarl
shlb
dec
jns
sub
and
sub
fdiv
xchg
mov
ljmp
xor
jae
adc
mov
rcr
fisttps
push
jae
or
sub
pop
mov
xchg
dec
or
xlat
movsl
dec
sar
adc
jg
mov
insl
ds
mov
lea
fmulp
aad
dec
cmc
int3
stos
fisttps
fcompl
jg
pusha
outsb
out
out
adc
arpl
mov
or
sbb
mov
cmp
jbe
mov
cmp
fsubl
repz
aad
push
movsl
sbb
outsl
popl
mov
mov
cmp
and
in
inc
std
push
push
mov
sbb
sbb
js
mov
test
jbe
jb
inc
cmpsl
dec
sbb
sahf
daa
leave
sbb
jle
jns
in
jg
inc
inc
lods
aad
sub
shll
in
jp
inc
pop
inc
jl
pushf
mov
cmp
imul
mov
out
in
cwtl
aad
jge
inc
js,pn
dec
in
rorb
push
mov
mov
and
push
mov
sbb
sbb
sahf
daa
leave
sbb
or
cmp
imul
jnp
mov
sbb
mov
pop
xchg
push
mov
hlt
xchg
jecxz
sub
movb
and
push
inc
adc
scas
out
push
shll
inc
xor
xor
pop
sbb
in
sbb
cmpb
inc
aaa
mov
cmp
data16
push
lcall
outsl
aam
fwait
adc
or
jnp
sbb
mov
sbb
or
inc
cltd
mov
arpl
xchg
push
or
jbe
and
ret
xlat
dec
leave
repz
ret
xchg
sti
sub
inc
jnp
pop
dec
lret
xchg
mov
sarb
rcrl
sbb
int3
sub
jge
int3
xor
push
sbb
or
dec
pop
bound
or
adc
or
mov
mov
iret
dec
shrb
sti
add
mov
fs
shl
movsb
pop
arpl
test
mov
fwait
push
add
push
push
scas
dec
dec
rcr
mov
rcrb
das
loope
into
lea
cmpsl
loope
movsb
push
jp
jmp
mov
mov
repz
lods
fwait
in
jmp
repz
add
pop
imull
aad
negl
stc
xchg
fcmove
mov
dec
jl
sub
test
jmp
ret
fisubl
jno
stos
mov
dec
aaa
cli
jbe
in
cld
inc
sbb
fisubs
jns
addr16
mov
subl
loope
cli
xchg
lea
inc
fdivrs
stos
push
cmpsl
dec
cmp
push
roll
mov
add
xlat
int3
sbb
mov
cmp
aam
or
scas
mov
adc
cld
dec
imul
lods
and
aam
mov
adc
rcl
cmp
sbb
or
and
dec
jp
push
scas
in
push
out
in
fcmovbe
sbbb
out
mov
fisubrl
in
shl
or
es
outsb
ds
out
mov
jge
jbe
sbb
in
inc
arpl
popa
add
insb
out
in
gs
mov
andps
jle
mov
or
cmp
fisttps
push
ljmp
or
xor
lock
pop
mov
push
or
lods
ffree
fistl
ja
stos
dec
jbe
in
mov
fs
jnp
pop
jmp
cmp
dec
nop
cmp
mov
int
fists
cs
dec
add
dec
mov
sub
adc
repnz
bnd
mov
cs
mov
mov
pusha
movl
nop
cmp
mov
sub
mov
sti
add
xor
stc
insb
xchg
inc
and
mov
scas
push
xchg
xchg
adc
je
int3
fdivrl
sbb
adc
add
bswap
cld
pop
stc
repz
mov
dec
mov
fld
call
adc
test
xchg
sub
inc
xlat
ret
push
aaa
mov
jnp
jecxz
inc
int3
xor
dec
mov
xor
cwtl
out
sbb
lret
xchg
lea
leave
rcrl
adc
push
add
or
mov
mov
push
sbb
or
mov
xchg
call
xorl
dec
mov
sbb
mov
inc
pushf
or
int
out
roll
jne
js
push
inc
xchg
test
pop
inc
lods
scas
dec
and
xor
sahf
xchg
and
mov
mov
fbstp
mov
cmp
push
sbb
mov
mov
sbb
decl
cltd
out
lock
pop
inc
xchg
aam
add
call
push
mov
loope
imul
jmp
repz
mov
mov
or
in
ret
and
cs
sub
mov
pop
into
fsubrl
pop
or
int3
js
jmp
notb
shl
in
sti
testb
add
push
or
lock
adc
inc
out
call
push
pop
mov
cmpsb
mov
and
sbb
cmp
mov
pop
lods
lods
push
pop
dec
sub
aam
pop
or
fucomp
cmp
adc
daa
arpl
inc
mov
jne
jnp
test
es
jmp
push
sub
ds
int
xchg
jl
or
fs
in
mov
and
es
ret
push
sbbb
xor
int3
jecxz
mov
roll
or
mov
call
nop
mov
push
push
and
dec
js
cmp
jmp
jno
cwtl
jmp
inc
ds
mov
mov
aaa
iret
push
mov
cmp
enter
sar
lcall
mov
test
xlat
test
mov
movsb
ror
lcall
std
add
call
adc
xor
sbbl
mov
or
aad
and
rclb
add
jbe
xor
add
dec
jle
dec
out
jecxz
icebp
mov
or
cmpsl
pop
sbb
lods
mov
into
inc
jnp
fidivrs
loop
test
or
mov
sahf
ljmp
cwtl
fsts
and
rcrl
dec
mov
lods
pop
mov
mov
push
jp
loope
push
push
xchg
fsts
rcll
jnp
xchg
sub
sub
xlat
xchg
add
roll
pop
xchg
aam
inc
and
leave
xchg
or
adc
push
jg
rcrb
xchg
mov
ss
pop
movsb
pop
pop
pop
pusha
mov
xlat
fucom
pop
cmp
orb
sbb
add
mov
jmp
in
test
fnsave
dec
fisubrs
jg
inc
mov
cmpsl
sbb
xchg
test
sub
addb
xchg
imull
sbb
repz
jbe
pop
inc
push
pop
pop
aad
push
lahf
scas
cmp
loope
adc
iret
ffreep
add
lret
sahf
xchg
pop
xchg
add
ret
xchg
mov
xchg
pop
mov
push
daa
addr16
xchg
push
gs
pop
lea
xor
jbe
stos
stos
mov
enter
ss
movsl
mov
dec
popf
sbb
jge
rorl
or
and
shll
mov
daa
fnsave
lahf
std
pop
imul
lret
sub
xor
lcall
gs
and
out
loopne
adc
adc
mov
push
ret
lret
or
cs
mov
jbe
test
add
push
xcrypt-cbc
cmpsl
xchg
icebp
xor
and
push
xlat
fisubrl
nop
and
push
ret
scas
dec
fisubrl
bound
mov
popa
psraw
pusha
loopne
inc
mov
dec
shl
push
insl
es
adc
mov
lds
clc
out
xchg
rolb
cmp
jge
cltd
out
xor
xchg
fwait
mov
dec
jns
fsubrl
dec
mov
jmp
icebp
in
punpckhbw
push
jl
inc
mov
jb
mov
sbbl
inc
mov
and
inc
xchg
xchg
daa
stos
push
jno
and
fbstp
and
aam
sti
dec
in
sub
sbb
or
cld
sahf
mov
movq
jnp
push
jp
add
xchg
mov
jle
mov
scas
sbb
arpl
rorl
or
pop
and
lret
push
cmpsl
mov
test
pop
outsl
ficoml
and
arpl
in
shrl
push
aam
mov
imul
outsb
add
adc
jbe
jns
adc
nop
add
sti
push
scas
scas
inc
push
add
cmpsl
sti
mov
cmpsb
popl
aas
fs
data16
xor
or
and
inc
ficomps
vmptrst
mov
mov
jae
or
or
mov
repz
jmp
hlt
push
repz
or
inc
mov
in
pop
cmpsw
lods
pop
es
or
cmc
int
mov
push
xchg
out
ja
arpl
sub
xlat
stc
push
push
and
mov
push
jne
test
cltd
mov
rorb
mov
dec
dec
adc
scas
cmp
or
sbb
daa
adcl
movsb
push
or
xchg
js
inc
jmp
push
js
movsl
int
mov
out
shlb
mov
lods
into
ret
cld
sub
sub
adc
sub
rorl
enter
and
mov
mov
loope
xchg
mov
nop
cmp
pusha
aam
push
cmp
dec
aad
sub
cs
jnp
movsb
adc
xor
inc
stos
outsl
pop
jae
call
jg
cmp
es
jnp
aam
cmp
cmp
xchg
test
out
lret
jge
cmp
int
mov
rclb
or
cmc
int3
scas
jns
xor
pop
js
int3
pop
push
test
xchg
fs
scas
rcr
xor
jo
or
and
dec
cmp
pop
movsl
cmp
or
outsl
addr16
sbb
push
add
jns
popa
cmp
mov
jnp
test
mov
pusha
dec
jg
sti
fistpl
lret
repz
xchg
ror
xchg
jmp
into
dec
jl
data16
jl
jmp
jae
jg
inc
add
push
jmp
push
fistl
and
pop
push
call
sub
sub
inc
mov
inc
ret
scas
adc
sub
and
jo
addr16
hlt
push
repz
xchg
xchg
mov
addr16
push
sti
mov
ds
cmpsl
in
inc
outsb
xlat
gs
je
out
scas
shr
cmp
decl
jge
add
adc
adc
mov
mov
jns
test
or
rol
lcall
and
dec
inc
aam
add
xchg
or
xorl
dec
dec
in
loopne
jb
push
cli
ja
or
je
inc
adc
add
add
shlb
add
insl
mov
out
hlt
rcr
insl
sub
jbe
jge
loopne
fs
stos
pop
aam
sub
aam
test
adc
test
les
add
pusha
test
dec
sub
adc
iret
cmpsb
fcmovnbe
adc
loope
xchg
sub
add
mov
xchg
push
cmp
inc
and
fnstcw
stos
int3
icebp
iret
jae
push
dec
test
inc
fistps
fcmove
xor
push
pop
xchg
push
sbb
inc
xor
sbb
xchg
sub
adc
inc
lcall
aaa
sbb
inc
lds
and
dec
fdivrl
jo
or
sub
ds
mov
mov
lea
xchg
bound
cmpl
and
sub
jp
negl
inc
dec
add
ss
dec
imull
dec
fwait
mov
inc
es
mov
sbb
inc
xor
push
mov
adc
push
lcall
mov
mov
imulb
push
add
aam
mov
push
fwait
mov
shl
das
adc
mov
es
stos
inc
stos
les
mov
adc
xlat
cmp
ret
jno
sub
divb
add
xchg
and
int3
loope
test
mov
dec
repnz
inc
push
pop
pop
mov
test
sub
adc
inc
out
iret
clc
lcall
push
xchg
sbb
cmp
sub
jge
jge
shlb
inc
jg
push
js
sbb
sbb
aam
inc
shll
dec
daa
in
fdivrl
fistpll
push
jae
cmp
cmp
push
es
stos
inc
stos
add
push
jbe
jns
sbb
int3
insb
mov
cli
mov
xor
sbb
adc
adc
mov
es
stos
inc
stos
push
mov
arpl
jle
call
out
dec
loopne
sbb
or
xor
inc
scas
dec
mov
sbb
cmova
mov
sub
sti
sub
lahf
sbb
aaa
mov
leave
sub
scas
dec
mov
sbb
push
inc
xchg
dec
push
or
mov
pop
and
sahf
pop
xor
mov
jbe
xchg
sub
sbb
repz
sub
xchg
add
aam
andb
ficomps
stos
and
sbbl
and
push
xchg
push
inc
int3
and
std
call
mov
nop
fsts
stos
push
sbb
xor
mov
pop
add
adcl
dec
or
xchg
pop
jnp
and
jp
andl
xor
fidivrs
sbb
dec
mov
es
jno
mov
pop
jecxz
sbb
sbb
jge
lods
xchg
dec
sub
call
popf
leave
cwtl
xchg
dec
in
ja
jmp
or
fwait
mov
xchg
sarb
cmp
ds
fldl
movsl
cld
dec
pop
sahf
pop
pop
int3
fbld
std
call
xchg
fcmovu
fdivp
es
dec
push
cmp
jns
jmp
mov
pop
cld
inc
and
pop
and
leave
shll
scas
dec
mov
sbb
aam
and
dec
mov
or
lret
popa
jnp
pop
into
xlat
flds
loope
test
sahf
cmpsb
push
mov
sarb
fldcw
arpl
jno
pop
push
lret
mov
movsb
rcl
lcall
mov
pushf
and
mov
outsb
cmc
int
xchg
inc
xor
inc
out
icebp
jg
iret
movsb
shll
lcall
mov
test
stos
sub
add
pop
mov
dec
pop
les
push
jne
aas
push
add
loope
mov
pop
lea
mov
sub
adc
mov
shll
jbe
mov
mov
pop
jmp
aam
inc
mov
pop
sbb
fcmovnb
lret
pop
cmc
dec
ret
fimuls
js
mov
cmp
or
and
fnstcw
stos
int3
icebp
lds
call
gs
pop
out
popa
out
lahf
jbe
mov
jmp
mov
push
push
out
push
mov
das
mov
scas
mov
shlb
mov
scas
fucom
or
aam
shrb
std
cmpsl
adc
outsb
jae
sbb
sub
jbe
dec
push
push
js
aas
add
mov
add
mov
pop
filds
xchg
lds
jge
call
jle
push
lods
inc
sbb
cmpsl
mov
jbe
test
inc
jl
ja
pop
rsqrtps
jp
outsb
movsl
out
jae
mov
comiss
dec
lock
jae
rorb
or
jle
jp
or
jle
add
loop
jae
std
jo
inc
adc
inc
lahf
stc
fnstcw
stos
int3
loope
test
rorl
dec
repz
jp
stos
in
js
in
jp
stc
mov
sbb
add
loope
loop
push
stos
jle
out
shrb
cmpb
jp
pop
jge
or
jp
movsb
sahf
jns
push
arpl
push
mov
sbb
cmpsb
cli
adc
clc
mov
jnp
adcb
mov
mov
mov
sub
pop
jp
mov
arpl
xor
dec
jmp
mov
flds
push
out
testb
mov
dec
push
popa
das
mov
jnp
add
inc
mov
mov
jmp
pop
xor
popf
test
mov
push
cmc
lret
xor
mov
sub
xchg
ja
fidivl
push
adc
jo
cmp
cmpsb
sub
hlt
xchg
jnp
mov
dec
int3
repnz
fnstcw
push
mov
cmpsb
push
cmpsb
mov
int3
icebp
ljmp
push
and
lea
les
dec
loopne
testb
adc
or
jbe
add
mov
mov
sub
jp
in
and
mov
push
in
icebp
mov
in
jge
int3
hlt
mov
aam
and
mov
push
in
mov
fucomip
jge
call
repnz
rcl
jl
aaa
pop
mov
inc
jno
movsl
jge
lods
int3
dec
sub
call
jnp
enter
fiadds
out
outsb
or
jge
call
pushw
mov
jnp
push
xlat
movb
or
lea
mov
mov
rorl
xorl
jl
mov
jg
dec
jmp
push
push
mov
and
out
and
in
inc
fsubr
leave
movsl
into
pop
mov
cmpsb
dec
les
or
outsb
add
and
ja
cmp
loop
rorb
mov
repz
jl
sbb
fucomi
int3
data16
lahf
gs
test
mov
std
scas
mov
shr
sti
sub
mov
mov
push
add
jb
jno
mov
mov
pop
loopne
pop
dec
add
inc
lcall
push
sarb
sti
mov
iret
inc
adc
xor
adc
or
arpl
add
fdivs
mov
ficoms
xorl
or
aad
hlt
xchg
sti
push
adc
lahf
cld
add
pop
icebp
xor
sbb
or
mov
xchg
inc
dec
insb
pop
jnp
std
shrb
movsl
pop
push
inc
mov
or
cmc
jnp
out
or
lret
dec
ret
stc
adc
push
ss
inc
lods
aaa
xchg
xchg
out
outsl
cmpsl
mov
test
xlat
pop
andl
mov
mov
add
sti
cli
cmp
push
push
ret
shll
pop
ljmp
xor
inc
xchg
cmpxchg
xor
outsl
push
mov
sbb
icebp
mov
sub
hlt
aaa
dec
jmp
dec
call
aad
int
js
leave
lret
xchg
inc
and
adc
xor
pop
dec
xor
add
jnp
push
cld
dec
or
mov
rorb
dec
sub
push
xor
test
mov
rcrb
fisubl
dec
mov
mov
adc
movsl
mov
mov
pop
fcoml
dec
add
or
popa
sub
popf
movsb
mov
pop
and
add
lret
inc
jle
xor
ficomps
push
dec
or
aam
rcrl
in
jbe
and
push
or
mov
int3
in
sbb
aam
or
jne
pop
int3
addr16
xor
sbb
mov
dec
gs
cmpsb
test
add
push
aam
mov
dec
dec
mov
jg
out
dec
push
mov
inc
dec
sbb
push
inc
add
xchg
sbb
and
inc
loopne
push
jg
add
pop
jle
stc
fists
add
or
rorl
xchg
xchg
dec
mov
jb
xor
in
push
rcrl
lds
and
mov
iret
ja
icebp
cs
in
cmp
inc
jo
mov
icebp
add
and
idiv
and
faddl
xchg
or
pop
repnz
cmp
cmc
adc
mov
mov
roll
cmp
jae
test
and
subb
lods
xchg
adc
sub
inc
inc
push
mov
jns
xor
xchg
jl
outsb
adc
leave
lcall
jmp
out
ds
lret
je
jo
inc
jae
testl
mov
push
orb
or
fistpll
add
loopne
dec
ror
lcall
add
inc
inc
mov
es
sti
jns
lahf
mov
cld
sbb
pop
sti
mov
rcll
push
mov
jge
inc
out
xchg
add
rol
fucomi
dec
inc
mov
js
jp
fmull
sbb
sbb
int
mov
push
insb
adc
pop
jl
jo
fmull
xor
rclb
sub
sbb
add
jecxz
or
jl
test
add
xchg
mov
andb
push
fldt
inc
sub
jnp
rclb
dec
dec
and
dec
cld
xchg
addr16
rcrb
jge
les
hlt
sub
shl
dec
dec
lahf
push
xor
dec
sbb
mov
sub
lock
popa
cmp
inc
push
add
mov
idivb
fcmovb
fimuls
ret
aam
fisttpl
mov
out
fldenv
xor
iret
sub
push
cmp
mov
mov
pop
mov
inc
xchg
cmp
dec
das
es
pop
repnz
out
mov
dec
cmc
jne
sbb
out
add
scas
xchg
cmc
fs
mov
dec
aad
add
out
sub
pop
cmpl
xchg
push
jnp
or
aam
inc
or
rorl
jae
stc
inc
aad
sti
loope
int3
push
repz
push
pop
stc
pop
int
sahf
out
daa
sub
js
dec
push
dec
dec
loopne
dec
cmc
ja
push
xchg
xchg
sbb
push
jnp
jnp
inc
mov
jg
cmp
test
fbld
addr16
shl
into
mov
movb
enter
push
fistl
jns
inc
mov
push
xor
push
loopne
push
mov
push
and
aam
ljmp
inc
test
icebp
xor
aam
xor
jb
adc
cmp
fistps
int3
xchg
sbb
fists
int3
mov
adc
pusha
inc
fists
int3
inc
aam
sub
sbb
adc
and
es
cwtl
push
sbb
xchg
sbb
xchg
out
cli
cmp
sbb
imul
hlt
dec
push
adc
leave
in
push
test
xchg
pop
or
dec
hlt
push
sbb
push
or
enter
sub
push
hlt
jecxz
in
jnp
dec
ror
xchg
xor
mov
add
cmpsl
push
push
mov
ljmp
add
pop
mov
push
or
adc
aaa
adc
mov
jmp
dec
ret
mov
repnz
leave
mov
clc
pop
mov
inc
aaa
pop
xchg
jnp
das
scas
out
mov
sbb
or
push
jmp
push
shrb
push
dec
insb
inc
imul
jns
add
shll
in
mov
addr16
fisttps
out
pop
inc
or
loopne
push
jae
sbb
xor
in
lods
dec
push
dec
sarl
and
aas
mov
xor
movsb
dec
push
fldcw
in
xor
rclb
lds
gs
data16
test
fucomip
scas
mov
xchg
aas
sub
mov
and
add
std
sbb
decl
pop
fstpl
int3
addr16
cmp
jnp
fists
pop
and
das
fistps
sbb
lret
cmp
jbe
lret
adc
and
aas
mov
sbb
inc
xchg
fstps
aaa
jae
xor
dec
xlat
xlat
enter
into
leave
imul
inc
mov
aaa
add
xchg
cmp
lret
xchg
in
mov
sub
xor
bnd
int3
fisttpl
jns
jmp
xor
add
or
movl
ret
push
repz
adc
int
inc
aas
repz
int3
sbb
push
fisttpll
fcomip
dec
aam
or
push
pop
loopne
jmp
sbb
adc
jnp
and
jge
imul
and
dec
pop
mov
in
in
pushf
roll
daa
int3
jl
fistps
or
jge
and
adc
shrl
jnp
xchg
aas
push
xchg
xchg
inc
dec
imul
pop
mov
adc
adc
jmp
mov
je
sbb
sub
inc
adcl
xor
pop
mov
cmp
into
cmp
adc
and
mov
jge
mov
shrb
jnp
push
addb
int3
je
and
mov
sbb
ss
ficoml
xor
movsl
aad
jae
jne
mov
sub
scas
mov
or
out
sar
mov
std
sbb
cmpsb
les
and
push
xor
xchg
cltd
mov
jb
dec
ja
sub
cmp
and
sub
fnstcw
out
pop
jl
clc
push
inc
push
jnp
clc
shll
aas
cmp
add
sti
sbb
pop
cmpsb
mov
jge
inc
in
pop
in
paddsb
iret
sub
popa
out
push
or
push
sbb
mov
sti
roll
in
jle
mov
sub
push
pop
xchg
in
xchg
dec
inc
sub
jg
ss
cmc
xchg
jbe
pop
movl
pop
test
pusha
call
xorb
add
jns
cmp
in
push
outsb
out
mov
cmp
dec
subb
xchg
dec
jl
xor
mov
bound
jle
mov
xchg
js
insl
sbb
clc
dec
sbb
push
and
sbb
negl
lcall
mov
xor
arpl
jmp
mov
scas
dec
xchg
pop
and
pop
dec
push
cmp
push
mov
scas
fsubl
pusha
xor
adc
mov
jnp
and
cmpsl
and
rorl
mov
xchg
cvttps2pi
sub
mov
dec
addr16
and
std
and
hlt
adc
mov
dec
push
scas
pop
xor
fildll
mov
mov
enter
and
aam
daa
iret
jp
jnp
dec
mov
inc
cs
or
sahf
lea
add
mov
add
dec
dec
jnp
lcall
dec
mov
push
dec
ds
inc
std
push
lods
push
mov
dec
inc
jg
xchg
int
mov
push
lret
stos
jo
data16
sbb
push
push
lds
out
cmpsl
data16
addr16
mov
adc
push
jl
out
stc
ds
xor
shrl
sbb
dec
arpl
fbld
sbb
sbb
push
rcll
mov
mov
mov
addl
idiv
repz
notb
dec
loopne
lods
cmp
fistpl
push
loope
jl
cmp
jns
insb
aad
bound
xchg
je
or
mov
je
xchg
mov
cmp
push
or
adc
add
into
inc
loope
cmp
lret
xor
adc
sbb
mov
mov
sbbb
ret
mov
lea
test
pop
xchg
stos
inc
stc
and
push
and
adc
ljmp
mov
sub
jle
ss
jnp
out
push
jmp
cmp
add
icebp
mov
mov
push
ljmp
cmp
add
add
aam
push
add
fimuls
das
xchg
add
sbb
xor
lods
push
sbb
push
mov
push
adc
jnp
sbbb
mov
fs
in
dec
shlb
icebp
mov
dec
dec
loopne
jl
or
aas
sub
push
xor
jmp
inc
jmp
aam
unpcklps
and
ja
lcall
pop
inc
jb
cwtl
daa
icebp
adc
das
and
jnp
jnp
jmp
popf
ss
xchg
add
mov
fstpt
loope
cmp
iret
adc
iret
pop
push
aad
dec
mov
pop
icebp
dec
dec
and
jge
pop
nop
xchg
aas
sbb
sbbl
push
testl
inc
or
dec
insb
daa
jmp
dec
pusha
and
sbb
sbb
rcr
pop
add
ficoml
movsb
addr16
jnp
push
insb
flds
mov
mov
int
fldt
in
pusha
notb
xchg
inc
xor
add
call
cltd
scas
nop
sete
cmpsb
daa
xchg
jp
jb
mov
sub
cmp
dec
add
push
jb
cmpb
pop
sub
inc
sbb
fimuls
pop
add
inc
or
lret
mov
sub
push
pop
inc
or
xlat
aas
push
inc
mov
push
jnp
jnp
mov
mov
push
jnp
jnp
mov
je
push
lods
pop
arpl
fistpll
push
fs
imul
sarl
std
push
arpl
lock
mov
adc
mov
fisubrl
sbb
jl
ds
push
xchg
xchg
jnp
jge
ret
in
aam
adc
pop
outsl
adc
or
mov
jno
dec
pop
cmc
leave
and
in
adc
or
mov
dec
ss
xchg
fists
test
mov
jbe
cltd
sbb
addr16
repz
add
out
pop
addr16
cmp
in
das
dec
xchg
and
pop
xor
vmovaps
call
in
xchg
hlt
leave
jl
xor
ja
mov
add
xor
add
dec
pop
lock
jns
in
add
pop
jbe
jnp
sbb
mov
push
sub
fucomip
test
pop
xchg
subb
sahf
in
int3
int3
push
and
sbb
cmp
dec
xor
mov
jbe
jnp
jl
insl
sbb
sub
push
dec
cmpsl
cmpsb
loope
into
std
push
xchg
cmp
mov
out
fdiv
mov
rol
mov
mov
mov
xor
mov
cmp
mov
add
cmp
or
mov
ljmp
inc
and
xor
cmp
mov
xor
mov
push
hlt
sub
cltd
or
or
jecxz
push
dec
jno,pt
lock
shl
test
inc
mov
lcall
dec
mov
ret
xchg
push
mov
call
lret
das
imulb
outsb
push
lret
adc
je
cmp
repz
adc
addr16
sub
jmp
std
test
test
or
xor
xor
in
sbb
mov
testl
leave
ret
aad
aam
add
add
testl
jle
add
adc
and
add
sub
int3
std
jbe
cmp
inc
jbe
cmp
mov
add
outsb
adc
arpl
dec
sub
inc
lret
adc
ja,pn
in
jae
arpl
add
sbb
orb
fidivs
cmp
pop
add
dec
jbe
lock
xchg
cmp
shlb
mov
mov
pop
daa
repz
dec
mov
seta
jbe
jle
or
dec
inc
pop
imul
lret
daa
subl
insb
sbb
stc
mov
out
push
das
mov
or
sub
jp
icebp
test
mov
icebp
mov
mov
dec
mov
test
mov
sbb
sub
jo
and
mov
sbb
ror
nop
inc
inc
and
dec
mov
scas
dec
and
dec
std
lock
mov
adc
loop
sbb
aam
arpl
leave
je
dec
incl
out
mov
and
fbstp
and
xor
aad
pop
mov
adc
mov
xchg
fisttpl
arpl
rcrb
cmp
jmp
push
testl
iret
insb
inc
push
mov
inc
sti
add
pop
or
jno
cmp
xor
aam
adc
inc
jl
scas
dec
lea
int
rclb
xchg
inc
mov
dec
mov
xchg
fwait
inc
daa
fcmovbe
jnp
stos
int3
loope
test
lcall
sbb
xchg
add
mov
out
mov
mov
jmp
add
ret
mov
unpcklps
adc
push
xor
fiaddl
cli
pop
push
int
jns
fldcw
lods
aad
cmpsb
test
push
sub
mov
jnp
and
push
dec
aas
jge
dec
adc
lret
aam
mov
popa
sub
jmp
mov
cld
push
sub
cmp
test
aas
movsl
test
out
adc
mov
std
cmpsl
xor
or
out
stos
in
cmp
lcall
decl
ljmp
lret
xlat
jnp
adc
push
jae
push
inc
pushf
nop
aad
roll
jmp
ror
sbb
adc
out
inc
jo
cmpsl
mov
cmp
jl
inc
pop
xor
leave
ja
push
add
int3
push
notb
loope
popl
imul
push
and
add
int3
dec
notb
in
dec
outsl
add
push
scas
movl
sub
xchg
je
stc
aas
insb
adc
lods
cmpsl
inc
mov
add
pop
sub
inc
imul
add
neg
or
add
int3
jge
xchg
lret
cmp
cmc
in
jg
add
push
scas
testl
movsb
jmp
int3
stos
cltd
jl
inc
jne
in
dec
dec
shrb
shll
push
test
test
add
iret
es
mov
xor
add
sub
insb
mov
dec
testl
movsl
pop
jge
pop
cmp
loopne
mov
jl
sbb
dec
dec
pop
pop
and
inc
sbb
cmc
movsl
aad
mov
sub
sbb
cltd
pop
sbb
xlat
imul
or
adc
sti
std
dec
mov
xchg
pop
imul
lret
cmp
sub
ja
mov
sahf
inc
mov
dec
push
pop
pop
repz
in
mov
in
xchg
push
dec
mov
pop
jnp
pop
movsb
mov
sbb
fistpl
ljmp
push
and
rorl
push
ljmp
popf
in
loopne
xchg
adc
lock
imul
nop
hlt
aad
lock
add
jne
push
int3
add
mov
cld
hlt
cmp
dec
sub
mov
das
sbb
addr16
push
inc
nop
aam
inc
and
je
daa
iret
and
push
fcmovb
push
pusha
mov
add
mov
mov
adc
dec
fcmovnbe
loopne
push
jno
add
inc
cmc
add
pop
cmp
push
aad
fs
dec
cmp
push
ret
imul
pop
mov
xlat
lock
jge
cmp
pop
jno
xor
adc
pop
jmp
sbb
add
mov
out
aas
ja
divl
ficomps
mov
cs
or
dec
jo
or
and
outsb
cmp
ffree
in
add
sbb
stos
push
js
fcmovnu
mov
push
fimuls
mov
and
dec
dec
in
test
sub
ljmp
stos
mov
jge
dec
cld
sub
inc
std
loopne
xor
jp
jb
push
jle
fcmovnb
cltd
cmp
stc
push
aas
imul
stc
push
inc
stc
jns
mov
cmpsb
sbb
pop
hlt
clc
xchg
ja
cmp
dec
imul
ja
daa
fstpt
bound
inc
daa
mov
std
icebp
lods
jmp
add
xchg
cmc
push
jne
stos
out
push
loopne
out
mov
std
lods
inc
mov
imul
loopne
inc
mov
insl
addr16
or
pop
dec
movsb
js
fisttps
in
je
push
add
pop
sub
mov
mov
add
xchg
mov
sarb
xchg
aas
lds
xchg
mov
rorb
push
rcrl
lock
pop
mov
xchg
or
pop
sub
sti
and
jmp
aad
jae
scas
dec
jge
push
outsb
cmp
push
ret
mov
sub
dec
int3
sti
dec
int3
test
fsubr
sti
pushf
ret
ds
ljmp
push
inc
mov
pop
sbb
test
xchg
mov
int3
xchg
xchg
pop
mov
rcrl
inc
test
jge
lcall
dec
xchg
lahf
mov
sbb
push
movsl
xor
popa
jns
dec
ss
out
mov
mov
and
and
mov
mov
mov
call
or
add
cld
jbe
pushf
jl
aaa
jb
clc
adc
push
push
sbb
mov
or
shrb
ja
pop
jbe
push
sti
pop
pop
inc
ja
ds
or
cmc
ret
xchg
sub
jne
inc
orl
mov
cs
dec
push
pmullw
lea
test
in
mov
movsb
jmp
das
andb
inc
lcall
popf
outsb
jl
inc
mov
inc
icebp
mov
jne
pop
add
ret
popf
sub
mov
rolb
jne
push
out
nop
loopne
aam
xchg
push
mov
push
mov
out
lcall
rcr
in
mov
shll
roll
jecxz
out
hlt
sub
sbb
insb
xchg
into
jl
cmp
sbb
data16
inc
stos
adc
mov
jmp
lret
inc
sub
xor
or
sub
push
jle
mov
jmp
sub
lret
mov
add
mov
out
mov
xor
mov
xchg
test
inc
outsb
push
sub
pop
pushf
cmpsl
sti
or
lock
mov
inc
pop
jb
inc
inc
jecxz
into
ljmp
xor
sbb
jne
ss
pop
mov
pop
lds
inc
mov
mov
aas
push
jno
inc
iret
cmp
cld
std
je
xlat
shl
dec
sbb
pop
sti
push
int3
sbb
hlt
nop
into
cltd
mov
xchg
js
mov
stc
and
repz
pop
fiadds
in
fwait
sbb
int3
jg
inc
pop
dec
aam
les
dec
push
loopne
mov
ret
jne
or
fmuls
push
int
ret
cmp
into
jo
add
pop
and
push
fimull
sbb
mov
adc
jge
pop
loopne
sti
iret
test
dec
loop
sub
cmpsl
mov
repnz
push
loopne
std
dec
mov
push
js
int3
jbe
ja
or
sbbb
adc
adc
int
adc
pop
mov
inc
cmp
mov
xor
and
bound
mov
in
sbb
jbe
filds
ror
std
dec
mov
cmp
inc
jmp
repz
pusha
mov
sbbb
shll
test
lret
dec
sbb
and
jge
out
mov
push
dec
inc
pop
sbb
cmp
jbe
movsb
inc
inc
fisttpl
xor
pop
es
ljmp
out
in
nop
jecxz
sbb
jbe
icebp
out
cmpsb
jl
test
sub
push
dec
aad
in
lea
cltd
sub
clc
outsl
mov
xchg
and
pop
jg
insb
inc
arpl
inc
mov
je
shl
shrl
mov
dec
pusha
jmp
jg
rcll
inc
xchg
mov
pop
bound
mov
jmp
push
jg
and
pop
cli
or
pcmpgtd
push
nop
adc
sub
aad
decl
xchg
sti
ja
mov
pushf
ja
insl
shrl
sbb
fimull
pop
inc
incw
inc
into
invd
shrl
mov
icebp
xor
js
xor
ss
movsb
and
mov
mov
rorb
push
push
dec
pop
inc
sarl
insb
jle
cmp
dec
mov
mov
sahf
test
jo
inc
dec
pop
out
iret
dec
adc
jno
ss
push
pop
mov
shll
sbb
xchg
fcompl
sub
out
cmp
push
jg
loop
int3
and
lahf
pop
icebp
fwait
jle
int3
movsl
sub
mov
pop
push
cmp
mulb
enter
fucomi
push
push
repz
mov
mov
push
dec
and
and
jnp
xor
inc
jae
inc
jns
fstl
jmp
dec
push
fisttpl
fbstp
repz
dec
adcl
jecxz
xchg
shl
ds
xor
push
or
jl
test
push
fistps
out
test
xchg
dec
gs
movsl
jg
jae
sub
sarl
push
int3
rep
ljmp
test
rcr
fmuls
outsb
xchg
cli
inc
iret
leave
push
and
loopne
sub
mov
push
je
sti
dec
cmc
jnp
push
xchg
test
pop
jns
xchg
dec
xchg
in
out
gs
push
mov
adc
dec
adc
ret
fldl
fldl
jl
repnz
xor
fisubrl
ljmp
sahf
js
inc
pusha
xor
inc
lock
inc
cmp
push
stos
stos
jae
xor
cmpsb
dec
insl
inc
pop
mov
xchg
jo
loop
repnz
fists
mov
fbstp
jmp
data16
inc
in
inc
jl
or
lods
jmp
dec
jmp
jmp
in
subb
mov
arpl
das
xor
clc
stos
aam
inc
mov
sbb
mov
lret
cs
pop
in
xlat
mov
pop
mov
xor
fcompp
dec
leave
movsb
pop
inc
test
icebp
mov
and
je
sbb
mov
adc
and
das
sbb
sub
add
cmp
stos
inc
in
push
or
aas
add
cwtl
insl
mov
arpl
icebp
xchg
aam
in
test
cmp
mov
pop
icebp
inc
or
jnp
xchg
cmpsb
gs
shl
add
fstpt
es
xor
push
push
sub
xor
dec
gs
lods
xor
leave
sbb
cmc
pushf
and
jecxz
and
pop
sbb
xor
jecxz
je
decl
aad
test
and
xchg
ret
jg
and
imul
jne
dec
ja
test
lock
xor
cmp
cmc
jge
out
in
push
or
push
sub
or
daa
xorl
add
bound
and
mov
adc
mov
test
std
cwtl
test
or
dec
jbe
in
or
add
or
fwait
lret
and
jge
pop
jnp
mov
fs
out
lods
or
imul
les
test
lods
or
push
outsb
lds
test
sub
jne
inc
add
das
and
inc
adc
das
sub
aaa
das
test
das
dec
test
shrl
shl
leave
int3
and
and
pop
lds
mov
and
lcall
xchg
adc
sbb
push
repz
test
mov
loopne
ss
xor
pop
and
fs
dec
mul
mov
pop
lret
jmp
or
dec
pop
xor
fbld
jge
shlb
inc
xor
xor
loopne
mov
xchg
inc
pop
mov
dec
fmull
mov
mov
divl
ss
imul
cltd
stc
jge
enter
push
ret
mov
mov
dec
jbe
sub
lret
mov
addr16
jge
dec
push
mov
adc
dec
andps
sub
stc
sub
movsl
out
dec
sub
mov
mov
and
mov
sub
sub
mov
repz
rcl
mov
fistpl
xlat
push
mov
mov
bsr
ja
push
dec
inc
sub
movsb
ds
nopl
push
pop
mov
mov
dec
push
cmp
adc
cmp
aaa
mov
fs
xchg
pop
xchg
dec
sbb
sahf
aam
nopl
jno
dec
jae
fbstp
imul
aam
movups
sbb
adc
xchg
pop
movups
xchg
adc
or
orb
aam
xor
or
jg
aad
and
sbb
mov
outsl
pop
iret
push
in
lret
push
inc
pop
jns
ja
or
clc
sub
pop
sub
mov
or
shrb
mov
xchg
cwtl
add
xchg
inc
mov
jl
inc
sti
jae
dec
pop
mov
sbb
cwtl
jg
out
mov
push
jno
movl
fwait
roll
pop
and
hlt
loop
push
push
frstor
lods
mov
insb
jmp
cmp
aam
cmp
pop
inc
push
xlat
in
dec
mov
lods
arpl
scas
or
xchg
cli
rol
mov
pop
xor
push
and
sub
insl
jecxz
push
mov
dec
jmp
dec
cltd
and
cmpsl
es
dec
cmp
jmp
add
pushf
in
out
push
fdivp
dec
push
mov
mov
add
mov
sbb
adc
lret
dec
mov
repz
in
std
roll
push
push
add
filds
sbb
dec
jbe
pop
cmpb
hlt
jl
and
js
std
in
mov
adc
mov
xchg
sbb
cwtl
push
mov
dec
popa
movsb
arpl
mov
xlat
iret
adc
std
arpl
push
sbb
mov
repz
inc
sbb
std
sti
mov
or
mov
test
cwtl
shlb
cmpsb
adc
in
lret
mov
lods
mov
sarl
in
jg
sbb
mov
jne
insb
das
sti
outsb
jbe
and
mov
insl
mov
ror
arpl
mov
jnp
sbb
out
sbb
sahf
loopne
notl
xor
adc
push
jle
add
idiv
sti
cmpsb
pop
sahf
inc
jg
pop
and
scas
roll
shl
mov
data16
or
mov
push
idiv
lret
cmp
jl
loopne
adc
mov
in
mov
inc
sbb
xor
std
cmpsb
or
into
mov
mov
or
loopne
add
add
gs
push
mov
push
add
ja,pt
rorb
jns
and
dec
pop
in
insl
mov
mov
jbe
adc
xor
jmp
mov
adc
cmc
into
jge
xchg
mov
movsb
cli
mov
sbb
call
sub
mov
push
icebp
mov
jb
dec
lcall
dec
out
imul
mov
xor
jnp
inc
dec
push
cmp
movsl
lds
push
iret
xor
int3
insb
lods
xchg
add
insb
add
dec
sahf
inc
push
or
dec
insb
icebp
in
nop
jnp
mov
mov
lss
jg
push
mov
arpl
add
push
jmp
fimuls
test
lahf
and
insl
popa
seto
adc
push
aam
and
jge
mov
rcrb
dec
push
mov
adc
pop
daa
leave
fs
add
in
sahf
sbb
add
mov
jnp
adc
int3
je
leave
je
je
jl
test
add
test
push
jle
loopne
or
mov
cmpsl
lahf
mov
xor
int
pop
lods
nop
mov
push
pminub
arpl
jg
nop
mov
aam
add
push
and
cltd
or
pop
sub
pop
dec
push
pop
imul
int
mov
call
sub
or
mov
fsubs
outsl
stos
out
jecxz
lock
xchg
test
sbb
arpl
pop
or
movsl
mov
add
iret
push
mov
and
xor
jnp
mov
cmp
pop
les
mov
fistl
lcall
gs
jecxz
loopne
aaa
ret
leave
ss
push
shll
mov
mov
jge
das
cmp
pop
jge
inc
mov
pop
jg
add
cli
jl
cmp
push
cmpsb
cli
mov
movsl
sarl
jbe
or
imul
dec
icebp
jg
mov
popf
fdivl
std
sysret
cwtl
xor
mov
add
mov
std
push
shl
add
jp
pop
mov
add
fimull
insb
mov
sub
add
xchg
add
adc
inc
dec
mov
mov
aas
movsl
ret
jge
mov
jno
insb
imull
pushf
pusha
jb
add
xor
push
dec
ss
push
stos
or
cmp
ja
mov
add
push
fisubl
add
jb
push
add
mov
jns
out
or
adc
loopne
ds
iret
push
mov
stos
out
mov
mov
fistl
mov
jp
xchg
pop
push
xchg
pop
dec
cmp
mov
jl
add
repnz
pop
outsl
cmp
icebp
mov
or
loopne
enter
jnp
inc
lods
andb
out
mov
sbb
ret
lcall
and
push
lock
test
lcallw
sbb
pop
mov
addl
push
bound
test
mov
adc
mov
lret
in
inc
sub
push
mov
push
sbb
and
push
fidivrl
xlat
cmp
addr16
mov
roll
decb
sub
push
pop
test
pop
adc
out
lcall
scas
stos
mov
mov
lcall
add
jae
rcrl
loopne
lods
add
dec
pusha
lods
aas
fistpll
sub
mov
daa
xchg
jl
dec
out
mov
add
rcrb
mov
xor
sub
test
inc
cmpsl
punpckhwd
jns
inc
popf
out
add
cmpsb
outsb
lcall
sub
mov
inc
pop
lcall
pop
scas
fld
pop
xchg
lcall
add
in
lock
out
mov
lcall
push
out
stos
mov
std
nop
outsl
jno
popa
nop
loop
cltd
cmp
and
ljmp
gs
icebp
cltd
imul
push
xchg
mov
sub
outsl
rcrb
roll
rorb
out
xchg
jg
movsl
pop
mov
arpl
ljmp
outsl
pop
dec
jne
adc
pop
das
into
sbb
add
ds
cld
mov
stc
mov
cmp
mov
or
lods
lods
ds
mov
mov
dec
pop
rcrb
test
xchg
adc
jmp
fildll
pop
das
fistps
punpckhbw
pop
cwtl
btc
sahf
outsl
sub
mov
mov
test
push
inc
jno
mov
stos
cmp
dec
push
mov
ja
stc
inc
inc
arpl
cmp
xor
sbb
fists
sarl
pop
mov
adc
dec
sahf
sub
xor
sub
sbb
je
dec
fsubrs
jge
mov
sbb
imul
adc
imul
inc
and
cmp
cmp
mov
sti
push
jb
push
sbb
daa
cmpsb
or
loope
dec
fcmovu
enter
push
cli
sbb
fs
sbb
sbb
hlt
or
fs
push
mov
insb
adc
push
jns
xorb
lcall
aas
outsb
out
in
mov
mov
inc
and
jnp
adc
inc
jl
jle
test
jl
dec
in
andb
cld
pop
sahf
mov
daa
add
cld
jl
sbb
pop
mov
mov
and
add
sbb
inc
sbb
stos
shlb
xchg
sub
jg
xchg
fs
andl
lret
pop
cmp
mov
push
in
inc
outsl
repnz
fstpt
mov
lahf
into
push
pushl
push
xchg
jns
dec
adc
movl
pop
or
sti
ja
cltd
mov
arpl
dec
mov
pushf
mov
mov
negl
mov
dec
inc
dec
cmp
jle
pop
ret
add
das
hlt
insl
mov
pop
fwait
dec
fbld
shll
jnp
hlt
cmp
loopne
push
push
jno
cmp
sbb
lret
lods
orl
fs
mov
stos
test
dec
aaa
xchg
dec
mov
mov
dec
das
jge
stc
lret
and
or
push
inc
ret
xchg
stc
or
jnp
sti
adc
xor
faddl
and
jnp
stc
fildll
shl
jl
imul
cs
adc
push
push
jbe
cmpsb
xchg
in
or
push
pop
dec
sub
imul
or
cmpsb
sub
pop
push
push
mov
popa
decb
rcl
shll
pop
and
adc
ret
enter
sbb
inc
jbe
in
xor
jle
jle
loopne
adc
jge
insb
xchg
or
xor
sarl
pop
xchg
pop
movsb
adc
mov
inc
and
pop
jno
sbb
incb
adc
ja
iret
jge
cmp
es
arpl
dec
addr16
inc
pop
and
add
cld
jl
pop
testl
adc
sub
inc
jnp
fimuls
scas
mov
mov
notl
popf
xchg
shrl
and
jae
aas
sahf
add
or
out
add
pop
int3
mov
jle
push
stos
mov
std
pop
xchg
lods
in
jno
push
les
in
js
fdivr
pop
jg
dec
dec
mov
roll
pop
jo
jne
cmp
push
sahf
rol
xlat
pushf
nop
dec
push
cld
push
mov
or
out
movswl
cld
outsl
dec
mov
push
popa
testl
xlat
jae
push
push
dec
out
shll
push
sahf
push
inc
inc
cmp
ljmp
imul
and
imul
xchg
inc
into
jle
iret
pop
jne
rorl
insb
leave
mov
adc
cmp
jo
cmp
inc
jg
xchg
push
test
sahf
adc
fxch
or
sbb
aad
jnp
movsb
mov
repz
ljmp
push
inc
cmp
call
mov
sub
cmc
rclb
mov
mov
push
xchg
ret
cmp
or
js
sbb
inc
sbb
sub
sbb
jns
pop
daa
ss
cs
jp
xchg
ja
jp
pop
sbb
pusha
pop
push
push
dec
gs
mov
sarb
push
dec
push
lret
dec
rclb
dec
push
iret
xchg
xchg
inc
xor
jne
fmull
stos
loopne
jnp
lods
popf
cmc
inc
pop
push
pop
jle
push
out
outsb
loop
push
out
jge
in
push
ficoml
mov
inc
test
orb
ljmp
mov
push
dec
lahf
movl
mov
loop
push
out
mov
repz
jl
stos
int3
in
or
mov
je
outsl
fsubl
push
inc
and
mov
mov
push
or
inc
lock
shl
lcall
cmp
jge
mov
inc
push
jle
sbb
push
jl
out
or
shll
cmp
dec
pop
stos
popa
out
popa
into
dec
sbb
addr16
inc
mov
test
xchg
std
push
fwait
and
jae
sbb
cmpsb
mov
cmp
jns
cmp
cmp
je
xchg
xor
xlat
or
and
push
aaa
call
xor
mov
scas
lods
sbb
adc
pusha
jno
dec
mov
cmp
add
pusha
lcall
cld
out
mull
and
dec
and
push
scas
add
xchg
xchg
stos
dec
mov
mov
mov
xlat
mov
repz
cmp
stos
push
fcmovbe
aaa
jl
es
add
push
sbb
push
and
stos
cmp
cmc
aam
xlat
aam
mov
cmp
out
stos
pusha
pop
mov
xlat
or
push
repnz
notb
loope
dec
inc
mov
out
mov
in
loope
cmovge
jbe
nop
xor
dec
pop
dec
mov
jmp
in
imul
inc
rcrl
mov
mov
sub
xor
sahf
ficoml
mov
mov
ljmp
pop
lock
pop
push
test
popa
jb
or
add
lock
stos
mov
ret
ja
lods
es
fists
subl
movsl
cmp
mov
std
jbe
jmp
or
out
jmp
add
dec
ja
out
int3
scas
push
xchg
sti
notl
insb
ljmp
mov
pop
icebp
stc
mov
int3
mov
pop
lods
xchg
pop
rclb
fbstp
dec
jge
aaa
loopne
clc
out
sub
or
mov
dec
and
out
or
aam
lar
xchg
les
dec
sahf
inc
ja
xlat
add
test
mov
mov
dec
insb
jg
test
sub
dec
into
movsl
cmp
shll
jbe
test
mov
mov
inc
les
xchg
xor
xchg
xchg
dec
adc
cmp
fimull
mov
jle
mov
cwtl
xchg
sub
mov
sub
mov
dec
adc
in
add
fists
int3
rcl
cmpsb
ja
push
int3
push
es
pop
mov
sub
push
into
test
shrb
sub
jne
mov
xchg
inc
dec
sub
push
cld
sbb
icebp
mov
fwait
push
xor
mov
test
loopne
imul
mov
push
insb
cmc
push
dec
xor
cmp
dec
das
xor
ficomps
imul
dec
les
cltd
in
in
fadd
sti
sub
mov
repz
sbb
mov
in
pop
movsb
insb
call
mov
xchg
call
adc
lods
hlt
lret
repnz
jp
sub
imul
sti
push
inc
icebp
or
xor
ret
dec
test
inc
pop
jns
xor
stos
outsl
lret
hlt
lea
xlat
int
fstpt
adc
mov
mov
insb
push
inc
ret
int
rcll
fnstcw
xor
aad
dec
dec
shlb
inc
dec
aam
xchg
dec
fiaddl
cmc
adc
lock
test
adc
hlt
arpl
dec
leave
js
jnp
lret
sub
inc
cmpsb
fldl
sbb
je
out
bound
mov
dec
mov
lea
int
fistl
mov
pop
jnp
ret
xchg
sub
scas
lret
lods
fwait
aaa
pop
push
jo
das
mov
ret
data16
xchg
mov
sbb
rcrb
cld
movsl
add
sbb
add
adc
mov
pushf
cli
dec
jl
mov
pop
mov
mov
or
cld
dec
popf
jle
mov
pop
movsl
test
pushf
cli
addr16
jbe
addr16
roll
pop
or
dec
add
xlat
mov
das
dec
xchg
ds
jb
and
repz
push
pop
popf
adc
jno
aas
xchg
adc
jle
addr16
notl
pop
dec
cmp
pop
pop
and
sahf
mov
sbbb
xor
jno
mov
cmp
in
xchg
into
das
mov
insb
cs
icebp
dec
das
push
cmpsb
jo
or
je
dec
testl
daa
out
or
adc
dec
rcrl
add
add
repnz
fldl
adcb
xchg
jns
dec
sti
mov
xor
dec
dec
movsb
je
cmc
xchg
push
xchg
jecxz
sahf
jg
ret
stc
dec
sbb
sti
fdivrs
int
shlb
xlat
push
dec
mov
mov
inc
fisubrl
fmul
js
lcall
push
jnp
push
jne
es
xor
dec
dec
dec
mov
lahf
inc
inc
jnp
ficomps
outsl
jns
test
add
ja
mov
mov
inc
cs
pop
sbbb
lods
es
or
test
inc
int3
mov
in
jmp
arpl
out
jae
mov
test
mov
je
mov
pop
mov
in
mov
test
ja
sbb
mov
add
fistpl
inc
mov
cmp
fiaddl
gs
add
push
fbld
ret
test
rep
jae
cmpsb
fiaddl
gs
inc
pushf
push
push
cmpsb
jl
mov
fidivs
dec
inc
test
mov
adc
test
inc
test
pushf
dec
les
dec
push
int3
mov
std
mov
add
adc
daa
jmp
neg
push
jnp
mov
daa
push
cmp
rcll
mov
mov
xlat
dec
push
add
gs
mov
fwait
aad
push
cmp
stos
test
cs
push
cli
cmpsl
cmp
push
addr16
rcll
xchg
xchg
addr16
cmp
inc
mov
push
xchg
xor
xchg
xor
mov
inc
shll
mov
dec
xlat
mov
xor
sbb
out
inc
sub
cld
jae
jl
iret
lahf
out
scas
cmp
gs
fistpll
mov
pusha
in
arpl
adc
jg
pop
sbb
mov
push
out
inc
loopne
pop
icebp
pusha
leave
and
or
mov
cmp
jge
sub
pop
inc
insb
xor
cmp
sar
sub
or
das
adc
pop
test
loopne
inc
jb
jbe
and
inc
das
pusha
mov
fstl
sbbb
inc
int
inc
cmp
dec
sub
sbb
inc
in
jno
stos
pop
lret
push
outsl
das
pusha
mov
mov
aaa
push
mov
or
jp
dec
cmp
out
mov
pop
adc
call
jnp
xchg
cmp
cmpsl
dec
inc
lds
adc
popf
int
xchg
xchg
inc
sub
or
ja
inc
jnp
xchg
xorb
fldt
pop
push
mov
inc
inc
ds
pop
in
es
push
inc
rcrb
dec
xchg
lahf
dec
test
sub
pop
mov
imul
and
icebp
das
pop
repnz
daa
dec
mov
adc
lcall
dec
inc
mov
cli
pop
mov
dec
mov
dec
pop
cwtl
cmc
fisubrs
jne
shl
pop
cmp
mov
lea
jmp
adc
pop
inc
mov
inc
mov
or
das
pop
xchg
in
sbb
daa
xor
jmp
sbb
inc
nop
adc
fimuls
cs
lods
aam
jge
pop
stos
imul
nop
jno
push
pop
sarl
mov
lret
cmp
dec
repz
pop
mov
adc
xor
ret
lds
pop
fisttpll
mov
cmp
repz
lcall
pop
test
ds
mov
and
pop
xor
mov
and
out
pop
mov
jge
push
xchg
enter
xor
mov
pop
scas
fcmovnbe
aam
out
inc
das
pop
insb
mov
das
pop
dec
fldt
jge
aaa
cmp
pop
cs
cmpsb
aam
xchg
addb
cmp
pop
push
repnz
pop
mov
mov
pushf
push
push
lret
hlt
push
mov
fcmovb
clc
inc
dec
mov
xchg
sar
add
inc
repz
sar
lcall
or
jge
pop
push
shrb
imul
pusha
and
pop
sub
mov
in
scas
push
and
jmp
sub
in
inc
cmp
test
dec
and
leave
inc
mov
jl
jno
test
cmpsb
push
xor
cmp
push
jo
dec
xchg
jecxz
andl
loope
outsb
dec
cld
pop
hlt
jnp
js
sbb
shrb
lahf
shl
add
jb
outsb
inc
hlt
sbb
jnp
lret
fwait
sub
or
aam
xor
or
jbe
or
xchg
push
jle
lret
enter
xor
into
int3
jecxz
mov
lods
or
sbb
xor
pop
or
icebp
push
lods
inc
int3
or
jle
or
call
jge
nop
push
xlat
mov
xor
jle
je
aas
in
mov
adc
dec
jmp
mov
xor
and
scas
inc
inc
xchg
push
cltd
idivl
lret
aaa
dec
and
aaa
jo
out
push
xor
sub
mov
jmp
inc
push
rolb
aas
mov
fwait
lea
or
add
ret
in
idiv
fnstcw
fwait
add
into
aas
aam
sbb
push
loop
push
push
mov
ja
pop
xor
dec
push
mov
push
jne
mov
loope
pop
push
fstpt
dec
sar
and
rcrb
inc
dec
movsb
push
int
mov
and
int3
jecxz
iret
or
mov
pop
mov
nop
jmp
test
je
jnp
jnp
sub
in
mov
movsl
jnp
and
jl
push
scas
test
fcomps
and
push
mov
out
sbb
jbe
daa
ror
or
cmpsw
sahf
js
mov
push
cmpsl
mov
mov
jne
mov
ret
push
out
xchg
mov
jl
pop
jl
mov
and
inc
push
push
jg
mov
pop
pop
ds
ret
mov
jnp
stos
xchg
pop
out
xor
add
pusha
jo
mov
test
jae
loopne
mov
das
push
stos
jnp
sti
sbbb
ljmp
xchg
push
or
xchg
ds
dec
push
and
mov
jl
fdiv
mov
cmp
jns
jl
dec
and
push
lahf
pop
leave
jne
pop
les
clc
and
cmp
fsubl
push
call
cmp
fcompl
or
sbb
mov
test
enter
cli
cmp
xchg
mov
fcoml
sbb
ja
inc
dec
das
jmp
mov
sub
xchg
sti
dec
jl
rcrb
hlt
adc
mov
xchg
mov
sbb
adc
push
add
popf
nop
mov
ja
pop
rorl
dec
mov
cwtl
inc
jae
cmp
cmp
jno
xchg
push
and
mov
sahf
aas
sti
adc
stc
lea
and
cmp
icebp
lds
adc
into
cmp
sub
push
inc
dec
pop
cmc
test
cmp
cmp
mov
push
adc
sbb
inc
sub
in
je
aad
testl
jg
dec
sub
pop
sbbb
sub
lods
in
stos
call
push
cmp
in
mov
sub
bound
dec
and
inc
pop
fisttpll
jmp
in
faddl
pop
dec
pop
icebp
inc
repnz
fcompl
pop
mov
jp
in
in
jae
xchg
adcl
inc
mov
mov
push
out
popf
mov
and
dec
cmp
dec
inc
pushf
sub
xor
cmp
fwait
in
ret
ljmp
in
sub
cmp
arpl
jge
bnd
pop
adcw
push
imul
ljmp
add
fwait
ja
mov
push
sbb
arpl
dec
jnp
sbb
jge
add
fdivl
xchg
insb
ret
lret
mov
pop
cs
jno
into
or
outsl
mov
inc
sbb
xchg
cmpl
pusha
dec
cmp
lret
xor
lds
or
cmp
push
dec
test
int3
sub
fsubrl
push
icebp
adc
data16
dec
pop
xchg
test
mov
int3
popa
jle
stos
inc
xchg
push
andps
nop
mov
and
dec
into
es
lcall
iret
pop
jns
push
inc
cld
subb
imul
or
lds
mov
dec
addl
push
cmpsl
pop
inc
dec
or
pushf
dec
subb
pop
add
push
aam
bound
mov
stos
cmp
aad
shrb
sti
jg
addb
scas
or
aad
int
sti
lcall
pop
aad
ljmp
or
pop
push
adc
xchg
or
pop
mov
add
je
inc
add
push
dec
fs
or
pop
bound
push
sbb
lret
inc
in
dec
outsb
mov
add
mov
stc
fildll
xchg
cld
cmpsb
adc
dec
jno
and
jp
jne
pop
fwait
test
push
lret
lea
cmpsb
sub
inc
cwtl
arpl
insb
arpl
out
pushf
pusha
cs
jno
mov
inc
outsb
lock
pop
in
pushf
jg
or
scas
dec
imul
stc
inc
daa
jmp
mov
hlt
stos
aaa
into
dec
dec
outsb
int
sbb
aam
sub
mov
jl
and
pop
inc
inc
push
in
ret
sub
or
or
ret
adc
shrl
ret
sub
mov
push
fisttps
xor
shll
push
inc
mov
stos
mov
sub
inc
cmp
and
dec
sbb
js
scas
pop
arpl
mov
push
mov
aam
dec
mov
rorl
ret
lods
add
in
inc
or
ds
adc
mov
dec
sbb
lods
fidivl
stos
outsl
dec
push
ja
pcmpgtd
cmc
pcmpgtd
lret
push
sbb
sub
insb
int3
cs
dec
loope
lea
cs
or
scas
cmp
data16
fisttps
mov
push
stos
push
aad
mov
enter
mov
adc
lret
push
sbb
nop
dec
adc
jl
popf
add
push
dec
push
das
mov
sbb
jecxz
aam
pop
pand
fadds
repz
and
pop
fcomps
jnp
popf
aam
push
orl
mov
inc
ljmp
jmp
mov
fdivrl
jge
push
jae
repz
sti
mov
nop
dec
push
stos
je
jecxz
loopne
sahf
aaa
inc
ffreep
mov
adc
dec
mov
outsb
popf
sbb
xchg
and
popa
xor
adc
sub
xchg
adc
dec
pushf
mov
jg
dec
dec
or
popf
stos
adc
sub
mov
fyl2xp1
push
mov
rcrl
and
mov
pop
dec
data16
enter
in
mov
pushf
es
popf
leave
rcll
outsb
popa
push
cmp
cs
stos
cmp
pop
sbb
sahf
and
mov
xchg
sbb
xor
setge
push
fidivrs
pop
aaa
ja
adc
push
in
and
cmpsb
dec
push
sbb
mov
out
add
outsb
inc
pop
mov
cmp
loop
sbb
popf
pop
sub
or
dec
pop
adc
xor
in
les
xor
in
loopne
jnp
sbb
std
adc
jo
jnp
cltd
mov
xor
out
in
rorb
add
test
mov
leave
test
mov
lahf
pop
pop
xchg
faddl
rorb
sub
pop
pop
mov
repz
xchg
int3
es
cmp
xchg
lcall
in
adc
or
dec
adc
xor
inc
jge
push
ja
sub
adc
test
jmp
dec
fstpl
or
jge
test
cmc
inc
pop
cmc
push
pop
mov
es
lret
fistpl
ss
add
jno
pop
jnp
jns
dec
sbb
mov
pop
fsubr
jnp
or
push
jmp
int3
sub
in
mov
jecxz
inc
jmp
inc
jg
jns
or
sbb
les
mov
in
data16
jl
sbb
sbb
data16
jl
into
sti
call
cmp
or
in
rcr
mov
aad
cmp
mov
ret
or
cld
xchg
sbb
cmpsl
test
jl
fisttpl
cld
fwait
cmp
push
lret
lret
cld
jg
inc
mov
clc
add
mov
sbb
fcmovnu
pop
pop
jl
int3
jmp
dec
jmp
test
testl
mov
fmull
xor
pop
pop
jl
daa
insl
sbb
cmp
std
push
push
mov
mov
nop
xchg
in
mov
sbb
es
xor
pop
lock
dec
xor
int
sbb
mov
rclb
movsb
add
je
gs
in
fnsave
xor
inc
hlt
ror
mov
cmpsl
and
enter
and
sahf
aad
fwait
mov
push
insb
pop
jp
les
rolb
inc
in
gs
mov
and
ficoml
daa
cld
int3
jnp
inc
out
lods
movsl
out
push
subb
sti
mov
pop
xchg
rcll
iret
jbe
mov
xchg
sti
pop
mov
pop
mov
hlt
std
inc
or
inc
pop
adc
jnp
xchg
out
mov
sti
iret
lret
jbe
add
jmp
sub
or
das
test
pusha
into
sti
mul
xchg
push
add
lods
adc
xchg
mov
std
and
inc
or
stos
cmpsb
mov
cmpsl
fcompl
pop
or
mov
pop
or
in
rclb
int3
adc
mov
inc
pop
popl
fists
xchg
push
adc
pusha
pop
gs
lcall
pop
sub
xchg
or
les
ret
ss
inc
les
pop
data16
xchg
sbb
cmp
je
lret
push
out
addr16
sub
idivb
dec
pushf
jl
call
cli
and
xchg
lods
sub
jbe
popa
std
pop
jl
push
dec
in
lret
gs
sub
push
lret
mov
fdiv
sub
push
inc
add
cli
loope
adc
in
push
mov
push
lea
sbb
mov
mov
or
and
data16
aas
in
outsl
sub
lahf
mov
sbb
mov
adc
push
sbb
dec
sub
mov
push
push
mov
dec
mov
sbb
mov
pop
sbb
pop
push
int3
add
dec
mov
ljmp
add
stc
mov
sti
movsl
insb
stos
jg
cmc
dec
jmp
lcall
dec
pushf
gs
repz
cmp
push
sbb
mov
dec
hlt
in
ja
mov
fistps
fs
mov
cmp
mov
ror
int3
xchg
lods
push
jns
orl
dec
test
jmp
jl
mov
jl
mov
popa
filds
cmp
in
cwtl
es
arpl
add
int3
adc
ds
push
push
sbbb
mov
jp
cmp
adc
sub
dec
push
test
pop
les
jmp
enter
jnp
and
mov
inc
mov
out
mov
mov
push
out
sbbb
adc
xchg
lcall
mov
outsl
push
and
jge
mov
jl
ljmp
inc
and
dec
dec
pop
repz
aas
sub
jg
xor
les
mull
inc
mov
fcompl
jl
dec
js
pop
stos
std
loope
in
int
pop
pop
push
pop
sbb
inc
jge
sbb
push
rcll
cld
jae
aad
movsb
push
xchg
xchg
sbb
aad
push
movsl
sbb
gs
int
jecxz
rcr
mov
adc
insb
and
inc
mov
test
dec
adc
imul
inc
aad
adcl
mov
mov
lret
std
jo
dec
inc
sbb
test
mov
icebp
seta
xchg
push
in
std
mov
sub
inc
mov
out
out
adc
adc
test
inc
push
movsl
or
test
mov
lahf
rorl
inc
jns
aad
pop
arpl
dec
int3
pop
or
jbe
fsub
mov
and
jns
stc
sbb
or
inc
in
pop
xchg
mov
dec
outsl
push
pop
test
outsb
or
dec
ljmp
add
cmc
lret
xchg
add
or
lcall
pop
mov
mov
or
popa
int3
dec
or
jnp
pop
xorb
xchg
sbb
mov
xorb
cld
xor
mov
pop
les
xor
fdivrl
push
aam
cmp
mov
cmc
xlat
or
push
jmp
or
mov
pushf
add
mov
pop
push
and
add
jmp
xchg
popa
ds
pop
fiadds
cltd
inc
or
test
lods
fdivl
sarb
cwtl
fs
adc
cmpsl
and
jb
rclb
push
stos
inc
rcll
sbb
xchg
dec
sbb
repnz
sbb
adc
imul
and
xchg
jno
xchg
sarl
rorb
cmpsl
ffreep
int3
and
in
test
shrb
jge
jo
std
imul
mov
fwait
sarb
mov
mov
jmp
mov
popa
fwait
sahf
or
sarb
jl
push
xor
in
cmpsb
pop
orl
jmp
add
pop
sar
jbe
sbb
jae
xchg
mov
mov
jnp
xchg
aam
add
rclb
popa
sarb
pop
xchg
mov
jo
mov
pop
in
mov
mov
pop
js
push
aam
setnp
pop
ds
jnp
loope
cmovg
mov
call
loop
dec
mov
test
addr16
mov
in
jns
int3
lods
sbb
lods
pop
add
adc
sub
push
jle
data16
daa
ror
aam
lret
jl
inc
fs
adc
push
mov
push
xor
test
xchg
adc
mov
cwtl
push
lea
frstor
test
addr16
nop
xchg
cmp
enter
push
int3
xchg
repz
hlt
ja
int3
sub
stos
stc
jl
pop
xchg
out
xor
ja
fbstp
push
xchg
lods
into
sub
out
push
add
sbb
roll
sbb
pop
and
int3
in
mov
stos
mov
insb
enter
jb
mov
out
and
pushf
cmp
cltd
pop
mov
adc
adc
mov
lret
inc
pop
pop
or
xlat
cmp
mov
cmp
jge
cmpsl
cld
insl
xchg
inc
sub
lods
dec
jno
inc
outsb
jle
shlb
inc
sarb
push
inc
mov
ret
mov
cmp
loop
dec
mov
jmp
jno
loopne
in
es
inc
in
dec
lods
mov
sub
imul
fnstsw
data16
int
inc
test
test
iret
cmp
pushf
and
aas
cmp
jl
or
lods
jb
xchg
cmp
loop
push
jno
mov
pop
jae
inc
cmc
mov
push
aam
lahf
cld
ja
fsubrl
and
pop
sbb
rcr
and
dec
push
mov
test
aas
push
xchg
loopne
mov
inc
pop
testl
pop
jmp
dec
lahf
inc
sub
rorl
xor
sbb
and
ljmp
jecxz
mov
mov
xor
pusha
rcr
aaa
sbb
or
jnp
adc
pop
mov
dec
push
and
mov
nop
and
cld
in
fsubl
test
sahf
daa
shl
nop
cs
push
ljmp
sub
inc
mov
cld
jl
fs
xlat
push
shrl
jbe
add
xor
nop
sti
mov
push
pushf
jle
or
stos
nop
sbb
inc
ljmp
in
mov
cmp
iret
or
lret
popf
dec
jo
push
int
jg
shrb
test
popl
in
int
icebp
cld
mov
pop
or
push
push
out
clc
mov
clc
out
xchg
jno
stos
or
stc
sub
jne
mov
push
inc
pushw
add
jecxz
clc
xor
adcb
pop
iret
pushf
std
out
std
dec
loope
fisttpll
lahf
dec
mov
cmp
xlat
fisttpll
inc
bnd
add
lea
and
repz
sahf
jns
pop
mov
dec
icebp
xorb
ja
xor
cmc
lock
inc
and
in
scas
dec
dec
rorl
out
jg
cmc
xor
fisttps
lds
gs
pop
insl
inc
gs
or
push
adcb
jo
in
jecxz
mull
add
xor
aas
jge
sbbb
and
push
call
bound
cld
push
aam
mov
sbb
xchg
cld
ljmp
pusha
jnp
push
es
xor
jno
jle
mov
outsb
cmp
or
dec
sbb
push
inc
mov
pop
cld
cmp
or
lods
lahf
pop
inc
inc
sbb
iret
push
int3
and
pop
int3
mov
mov
or
jmp
inc
jns
cmpsl
xlat
popa
iret
dec
lret
sbb
sbb
inc
xor
fistpl
and
adc
ret
adc
jg
aaa
jno
add
arpl
xchg
clc
pop
insl
pop
mov
push
jae
je
notl
or
sahf
pop
imul
mov
mov
dec
add
stos
lret
mov
mov
dec
test
jne
lahf
arpl
add
push
loope
and
xor
or
and
rorl
sub
sbb
rcrl
in
sahf
loopne
cmp
js
push
xchg
data16
mov
and
adc
ret
adc
push
jg
dec
adc
jg
addb
push
jbe
int3
xchg
and
ret
dec
and
push
jns
fcoms
push
mov
sbb
daa
sub
aam
in
dec
shrl
sbb
fdivr
jno
add
dec
mov
jl
xor
mov
sub
dec
mov
shll
jecxz
aad
nop
and
lahf
sbb
xor
inc
lock
loop
mov
adc
jmp
xchg
out
pop
das
cs
repz
aas
das
frstor
pop
mov
push
lea
sub
ljmp
fiaddl
add
sub
data16
jnp
inc
scas
dec
and
data16
sti
lods
push
sahf
dec
sub
or
sub
stc
or
xchg
pop
or
and
psubusw
sub
jo
test
jbe
fisubl
lods
inc
stos
dec
lret
pusha
ja
hlt
pop
outsb
lret
pusha
adc
outsb
xchg
or
add
rorl
jns
add
out
adc
mov
push
dec
lods
hlt
xchg
pop
ret
nop
or
add
test
push
mov
push
push
sub
sub
add
or
pop
and
adcl
add
cmp
in
int3
push
push
lret
pop
sbb
enter
sbbl
sbb
jbe
sub
or
out
mov
mov
dec
push
fstpt
test
fstpt
mov
jg
stos
push
je
cltd
imul
int3
pop
je
inc
add
jmp
icebp
aad
leave
pop
ss
lret
adc
add
aam
jnp
in
pop
xor
into
mov
mov
xchg
adc
test
jge
pop
xchg
cmp
or
cmp
dec
adc
push
ja
shrb
lahf
mov
out
cmc
cmp
cmp
push
mov
mov
rcrl
jp
lret
mov
xor
dec
xor
shrb
pcmpeqd
mov
icebp
cltd
xchg
xchg
aaa
lahf
xchg
xchg
cmp
pop
cmp
sbb
and
ljmp
cmpsl
or
ljmpw
mov
data16
sbb
jle
pushl
push
adc
mov
or
cmpsl
shl
cld
sbb
sbb
mov
dec
jge
push
cmp
cltd
mov
sahf
hlt
push
loopne
xor
and
mov
shl
scas
ret
mov
add
dec
cmp
adc
sti
daa
or
sub
push
inc
sub
add
pop
test
pop
push
xchg
push
loop
mov
push
xchg
and
fsts
and
dec
adc
fists
js
lret
fmuls
cmpsl
jno
xchg
xor
repnz
xchg
jb
mov
jae
jecxz
pop
sarl
add
or
jecxz
jmp
stos
mov
pop
mov
shlb
xor
mov
lahf
fldenv
test
jle
fmull
mov
fiaddl
mov
inc
and
xchg
mov
and
daa
gs
movntq
out
and
icebp
enter
int3
jb
mov
and
xchg
push
and
sbb
addr16
jno
mov
outsl
cmp
mov
add
test
jge
mov
add
ljmp
sub
fs
jne
out
and
adc
mov
out
shl
sti
aaa
and
xor
xorl
and
adc
lret
into
imul
into
mov
inc
xor
int
stos
mov
ljmp
jno
xchg
dec
and
pop
jmp
in
stos
mov
out
mov
xchg
outsl
shl
or
jne
add
cmc
cmp
cmp
and
adc
cmp
and
je
xor
leavew
imul
faddl
mov
int3
and
push
adc
cmpsb
mov
imul
cmp
repz
or
xorl
and
nop
pop
subl
cmpl
rcrl
xchg
mov
mov
in
mov
add
lock
addr16
inc
mov
js
mov
mov
add
push
push
mov
icebp
es
and
or
enter
pop
mov
push
push
cltd
bound
mov
hlt
cmp
dec
lods
mov
mov
fildll
out
pop
inc
insl
fcmovu
fdivrs
stos
int3
loope
mov
mov
fildll
mov
dec
mov
mov
outsl
push
jmp
push
stos
insl
data16
test
mov
dec
pop
inc
inc
mov
mov
cmp
fwait
mov
loop
and
dec
mov
pop
scas
adc
iret
stos
pop
decb
mov
mov
aas
int
aas
pusha
cmpsb
sbb
jns
jbe
ficoml
imul
push
loope
int3
jmp
xchg
or
jg
adc
nop
sbb
addr16
adc
inc
scas
dec
mov
mov
scas
inc
scas
dec
mov
mov
pop
inc
dec
xchg
lea
jnp
mov
mov
pop
movsb
mov
push
es
stos
inc
mov
mov
es
stos
inc
call
push
dec
mov
xchg
popa
inc
lods
dec
shll
and
cmp
adc
jp
or
mov
mov
jnp
rorb
loope
test
mov
inc
jmp
mov
jge
fs
dec
ss
push
jge
ss
mov
cpuid
cmc
mov
es
shll
inc
dec
mov
scas
inc
scas
dec
mov
lods
push
pop
sbb
andl
pushf
insb
push
dec
movsb
cmpsb
out
fildll
cmp
jnp
rolb
dec
lods
cmpsb
mov
int3
icebp
ljmp
mov
cli
addr16
mov
call
lock
das
add
mov
sub
pop
jb
or
xchg
adc
flds
out
aaa
jl
jg
push
dec
mov
mov
jge
scas
das
add
dec
add
push
or
jp
idiv
mov
out
or
mov
shlb
ljmp
push
pop
mov
lret
repnz
leave
pop
inc
pushf
sub
cmc
mov
jbe
loopne
cmp
xchg
xor
adc
aas
dec
mov
int
xor
cltd
test
out
jbe
cmp
pop
and
push
adc
mov
cs
aaa
mov
sbb
mov
out
dec
js
mov
enter
das
adc
insl
shl
cmpsl
in
adc
mov
pop
je
adc
pop
push
sub
movsb
js
push
push
icebp
cmp
mov
jp
pushf
jnp
mov
sbb
jge
pop
jnp
jp
push
rorl
push
dec
or
jno
cs
mov
inc
aam
sbb
in
sub
fwait
xor
cld
mov
sbb
mov
ljmp
dec
fcomi
push
fsubrl
ds
jo
xor
inc
repnz
mov
shll
stos
dec
enter
and
mov
cmp
sahf
call
scas
pop
repz
and
cmp
cmp
and
and
jge
inc
mov
jge
cmc
xor
sbb
popf
mov
push
fwait
loop
xchg
sbb
mov
mov
das
rcrb
js
loopne
mov
or
push
sbb
jnp
decl
mov
sub
mov
cmpsb
sbb
stos
add
sub
jmp
icebp
pop
dec
mov
repnz
sbb
push
mov
jnp
call
das
push
add
adc
mov
and
enter
pop
sbb
and
pop
fsts
pop
sub
fiaddl
xchg
movsb
dec
pop
jb
sub
fldenv
dec
aam
ljmp
inc
out
jo
sbb
push
add
shrl
fists
and
out
jb
lock
sub
push
add
inc
xor
mov
sub
mov
jnp
add
cmp
mov
in
daa
repnz
pop
jmp
addr16
arpl
or
add
jecxz
adc
aam
xor
scas
adc
ja
add
repnz
ja
pop
or
test
in
add
dec
dec
mov
shl
popa
in
pop
jmp
mov
scas
repnz
ljmp
js
jns
cmp
mov
in
int3
adc
cmc
je
inc
jns
dec
inc
sbb
popa
imul
pop
mov
out
push
adc
das
jmp
inc
jnp
mov
jnp
lret
rorb
xor
out
pop
push
out
mov
fwait
xchg
jbe
push
inc
sub
movsl
jbe
add
dec
cs
in
jbe
movsb
pop
cmc
mov
push
loopne
or
repz
in
psubusw
mov
ja
das
push
daa
lcall
sarl
lea
xchg
xchg
sbb
adc
sub
scas
pop
jo
mov
test
jge
ret
mov
in
add
nop
fmulp
test
mov
pop
fnstcw
mov
dec
cmp
sbb
shlb
arpl
xor
fldcw
jl
adc
cmp
jae
es
std
pop
xchg
cmp
jbe
xor
and
sbb
cmpsl
cmpb
inc
scas
lods
pop
push
jne
lea
cltd
mov
jl
stos
int3
icebp
lds
call
add
sub
arpl
aaa
arpl
mov
jge
sahf
in
pop
jb
xor
iret
insb
inc
pop
sbb
xchg
aaa
cmp
cmp
rclb
sbb
loope
dec
mov
push
les
jle
pop
jne
int
pop
mov
xor
push
cmp
push
cmp
pop
jnp
push
xor
mov
clc
mov
mov
shlb
jg
sub
ss
ds
loopne
mov
mov
aad
pop
jmp
int3
xchg
dec
mov
data16
mov
call
test
pop
pop
cmpsb
andl
ret
repz
mov
and
jnp
jnp
stos
int3
loope
test
int3
fwait
xchg
orl
icebp
test
loop
xchg
jecxz
mov
xlat
fwait
adc
rcrl
test
jnp
add
lret
aam
xorl
ret
aam
add
btr
arpl
sbb
fwait
cli
mov
mov
in
push
test
jae
mov
mov
cmp
jmp
scas
dec
mov
fbld
mov
mov
mov
out
cmp
xor
mov
cli
mov
jb
and
shlb
out
and
or
push
cmp
int
jl
sub
fistps
mov
adc
and
adc
sub
jnp
fisubl
pop
dec
jl
outsb
mov
pusha
adc
outsb
repnz
dec
out
jl
pop
pushfw
dec
sbb
or
in
xchg
jl
pop
fisubrl
pushf
hlt
call
lods
xor
sbb
xchg
cmp
lea
lods
mov
rorl
mov
lock
jbe
sub
push
std
mov
std
mov
pop
push
daa
mov
adc
jb
jns
cmp
rorl
xchg
sbb
push
or
pusha
sti
in
jb
mov
test
test
pop
xor
push
cs
cs
dec
adc
mov
mov
push
out
inc
xor
int
fwait
add
sbb
ds
or
mov
xlat
or
popf
mov
xor
dec
fistpll
das
fidivrl
ret
pop
repnz
movsb
jmp
jnp
inc
jmp
dec
pushf
aas
test
mov
push
sub
jns
lahf
cmp
and
ss
in
shlb
and
cli
jg
sub
cmp
fucomip
call
cli
push
int3
push
int
cmpsb
repz
in
xor
xchg
daa
rorl
jge
or
mov
sahf
sub
pusha
loop
in
jb
fcomp
sbb
cmc
imul
xchg
into
xchg
or
jne
int
or
div
lret
mov
std
push
inc
pop
inc
jb
lods
cmp
dec
les
aam
jns
push
mov
hlt
jge
int3
dec
mov
dec
sub
jp
icebp
outsb
and
cmp
jmp
hlt
test
roll
adcb
test
xchg
sbb
popf
dec
fwait
cmp
lods
daa
inc
push
pushf
pushf
pop
sarl
dec
mov
es
add
jb
test
sbb
mov
and
sbb
out
lods
out
in
add
aad
in
add
sub
mov
mov
stos
inc
pop
dec
jb
xor
scas
inc
scas
dec
mov
mov
rcl
add
and
decb
sbb
jae
xchg
jno
inc
push
mov
fiaddl
or
and
ret
xchg
scas
mov
inc
mov
rclb
jge
mov
dec
xor
cmp
in
fidivrl
sub
ret
mov
sub
and
mov
dec
lods
sbb
mov
pinsrw
mov
jg
ss
dec
mov
scas
inc
scas
dec
mov
mov
outsl
xchg
leave
cmp
lds
pop
testl
jnp
push
into
popa
fsts
jnp
stos
int3
loope
test
push
add
sub
mov
mov
push
sbb
mov
push
cmp
inc
mov
addr16
es
stos
and
out
pop
test
rorl
or
xor
sbb
arpl
push
add
mov
leave
stos
push
push
dec
lods
stos
dec
mov
mov
xchg
sbb
mov
mov
sub
call
mov
and
add
inc
pop
pop
xor
gs
push
loopne
push
pop
movb
lods
sub
jp
std
mov
pop
ja
adc
rcrl
jbe
adc
jnp
and
roll
add
adc
stc
mov
mov
sub
dec
sub
call
adc
xlat
adc
mov
stc
pop
testl
pop
cmp
aam
jg
push
bnd
mov
jl
or
jg
adc
mov
sbb
addr16
push
repz
inc
scas
dec
mov
mov
scas
inc
scas
dec
mov
mov
popa
inc
insb
test
lahf
in
cmc
mov
jle
pop
or
push
xchg
inc
jle
lods
rorl
fistpll
ljmp
mov
leave
mov
xchg
xchg
mov
lahf
andb
pop
mov
and
adc
mov
shlb
mov
in
cmp
sub
icebp
adc
pop
pushf
and
xlat
sbb
cmp
inc
adc
mov
xor
mov
mov
or
or
repz
rcll
lcall
mov
test
jmp
std
inc
nop
loope
and
fmuls
dec
mov
in
add
pop
adc
arpl
data16
jae
fsts
cmpsl
sbb
jbe
out
mov
ds
std
out
imul
mov
inc
and
mov
dec
call
lcall
sub
mov
aaa
arpl
inc
jge
sub
mov
jbe
dec
fbstp
inc
int3
aaa
movsb
sbb
adc
dec
adc
add
or
and
aam
mov
jmp
mov
dec
push
daa
inc
pop
dec
sti
inc
or
adc
jbe
pop
cmpsl
cwtl
test
insl
xchg
sub
cmpsb
mov
aaa
jns
jnp
in
adc
xchg
sbb
adc
lods
das
push
sbb
cmpsl
jnp
cmpsb
mov
ja
mov
mov
mov
das
imul
inc
and
mov
xchg
and
mov
xchg
test
sub
inc
andl
mov
jno
push
subb
cmp
push
mov
call
in
dec
daa
jecxz
sub
jnp
sbb
call
jl
stos
int3
std
inc
nop
mov
movsb
cld
or
bnd
stc
push
xor
icebp
mov
aas
dec
and
out
jns
push
aam
lds
mov
sarl
testb
std
daa
sbb
cmp
fs
inc
dec
dec
int
xor
jns
rol
jl
inc
xchg
mov
sbb
test
cmp
jge
jbe
sbb
dec
inc
fldt
dec
jnp
enter
sbb
cmp
call
push
sbb
inc
or
cmc
into
sub
in
jbe
in
out
les
pop
mov
fwait
aad
push
movsl
mov
jo
pop
fs
lret
pushl
outsb
or
iret
sbb
das
cli
mov
lea
xrelease
int
dec
out
xor
fxch
in
leave
hlt
mov
in
fcoms
call
clc
test
orb
push
jp
pop
daa
rclb
nop
jp
xchg
jg
or
inc
sbb
or
call
psraw
pop
push
sahf
xchg
mov
xor
pop
or
repnz
in
mov
into
in
aam
dec
push
arpl
cltd
lds
lock
in
in
data16
lret
inc
dec
pop
pop
mov
fsubl
mov
inc
jno
and
pop
mov
sub
jne
fisubs
insb
jnp
sbb
mov
jnp
lret
mov
aam
lods
leave
push
int3
mov
data16
ja
pop
sbbl
out
ljmp
mov
imull
jecxz
push
mov
mov
mov
inc
clc
adc
mov
mov
xchg
adc
mov
xchg
mov
mov
loop
xor
ret
ss
mov
cltd
sub
inc
adc
sub
insl
int3
or
pop
xchg
aam
inc
mov
les
scas
test
jbe
addr16
add
push
daa
rorl
cltd
aas
and
fildl
cmp
dec
ja
iret
push
adc
out
fwait
jo
incl
cmp
dec
inc
push
sbb
movsl
mov
jbe
mov
adc
xchg
popa
xor
adc
xor
test
push
scas
out
js
xlat
jecxz
cwtl
loope
js
push
mov
je
cmp
std
scas
mov
sbb
das
out
dec
push
adc
xor
mov
out
jno
mov
push
out
mov
movsb
fadd
cmpsl
or
test
test
xchg
push
cmp
int
inc
push
add
mov
dec
jbe
lahf
test
mov
xor
jno
fisubrl
int
inc
adc
add
data16
jno
cmc
dec
sub
inc
inc
dec
mov
pop
inc
pop
fcmovne
cmc
push
movsb
mov
push
icebp
cmc
dec
addr16
testb
ss
pop
dec
sbb
imul
xor
hlt
adcl
pop
mov
hlt
mov
push
mov
push
mov
mov
out
mov
sbb
jno
mov
rcll
andl
cli
sub
dec
les
xchg
dec
sbb
pushf
idivl
mov
jnp
mov
mov
aam
jle
les
lock
leave
cmc
in
aad
dec
aad
cltd
lods
or
jmp
add
mov
gs
hlt
pop
push
jmp
inc
fisttps
and
push
or
mov
stos
mov
scas
inc
out
sar
loop
int3
fwait
mov
jecxz
scas
inc
cltd
xor
cs
int3
jmp
loopne
xor
inc
out
sbb
aaa
push
test
hlt
mov
out
add
inc
out
insb
popf
enter
xchg
dec
or
hlt
pop
sub
ret
sahf
out
dec
sbb
xchg
mov
in
xchg
push
aad
nop
sub
adc
jg
dec
or
jmp
mov
int3
lret
leave
loope
dec
push
mov
or
enter
test
mov
add
mov
mov
or
jmp
jnp
jae
aam
add
xchg
adc
ds
sub
xor
dec
mov
jle
xchg
aas
stos
imul
jmp
sub
cmpsl
jl
insb
je
push
or
push
mov
mov
cmp
cmp
cmp
in
andb
add
adc
loop
iret
push
icebp
xor
cmp
scas
xchg
fdivrl
pop
push
mov
sub
mov
mov
dec
xor
pop
pop
inc
sar
inc
push
in
pop
call
into
test
into
outsl
out
in
aam
xor
push
aam
in
dec
les
pop
enter
xor
in
inc
push
in
test
mov
bound
push
popa
adc
rorb
inc
test
pop
faddp
add
fbstp
testl
jbe
adc
mov
nop
adc
out
in
daa
jge
jecxz
inc
dec
cmp
inc
dec
push
call
int
mov
dec
add
inc
jnp
push
aaa
dec
aas
inc
in
pop
imull
add
scas
in
cmp
inc
aam
sbb
rcl
stos
in
mov
aam
mov
mov
mov
dec
out
rcll
jnp
fwait
jns
push
push
lret
mov
jle
call
xor
jge
shll
add
dec
sub
clc
xor
mov
push
inc
mov
or
aam
sbb
jp
sti
and
mov
mov
jne
fisttps
jl
or
cmp
sub
jnp
dec
sarl
xchg
imul
mov
in
cli
xchg
mov
add
insl
jnp
push
xor
aas
outsl
hlt
add
int3
mov
jge
mov
imul
jne
shrb
cltd
mov
repz
rcr
mov
xor
stos
repz
js
and
lock
xor
or
ficoms
mov
test
popf
in
jnp
lods
jl
inc
sahf
cmp
jp
mov
lcall
dec
sti
aam
inc
into
hlt
sti
in
in
repz
popf
mov
lea
mov
inc
out
mov
test
xlat
and
out
imulb
and
movsl
in
bound
cld
jmp
stos
jae
and
adc
sub
subl
fnsave
cmc
in
xchg
dec
xor
fisubs
or
mov
sbb
test
lods
cld
imul
fs
ja
inc
cmp
or
inc
rorl
cmp
cmp
jmp
jle
cmp
outsl
js
jmp
lahf
cmp
lds
out
dec
jmp
lcall
sub
icebp
mov
inc
dec
xor
shrl
sbb
lret
fildll
in
or
push
rcll
jbe
adc
das
and
inc
or
cmp
ss
ja
mov
adc
shlb
or
enter
adc
cmp
xchg
pop
sub
movsl
inc
mov
dec
xchg
jae
ja
xchg
fnstsw
fdivs
cwtl
in
xor
aad
xor
out
add
imul
cmp
sbb
xor
jns
mov
sbb
stc
jne
cs
xchg
sbb
loope
in
mov
xor
filds
into
dec
das
mov
movsl
mov
and
fbld
loope
repz
dec
mov
mov
rol
jns
cmpb
je
and
jae
leave
sub
cmp
and
mov
ss
xchg
jnp
sbb
inc
add
push
inc
cmp
jle
lea
add
jmp
xlat
and
movsl
test
pop
add
add
insb
inc
fisttps
sub
sahf
mov
inc
lock
xchg
add
xor
xchg
insl
xor
inc
dec
lds
fisttps
add
sbb
xor
adc
adc
jp
inc
decl
and
loop
pop
sub
cmpsl
xor
aas
adc
lcallw
js
icebp
movsb
jb
add
mov
mov
xlat
mov
sbb
dec
xchg
in
mov
ss
sarl
fsts
mov
loopne
in
pop
adc
inc
cmc
dec
xor
jecxz
pop
jg
mov
cltd
shlb
dec
inc
out
out
and
add
fld
out
adc
dec
out
xchg
pop
cmp
mov
mov
jnp
cmc
and
lret
sub
sbb
pop
dec
insb
mov
aas
into
pop
lcall
jae
arpl
xor
scas
data16
adc
jg
popa
lea
mov
sbb
sti
repnz
xor
add
ja
cmp
shll
jl
testl
icebp
mov
adcb
cmc
pop
dec
pop
inc
sbb
pop
inc
not
adc
adc
adc
leave
or
test
jno
mov
ret
xor
fdivrs
nopl
nop
das
push
sbb
rcll
aas
add
mov
inc
mov
dec
rol
roll
add
push
mov
testb
ds
add
lock
mov
inc
daa
lods
js
lock
ds
cmp
jecxz
xor
mov
inc
inc
xor
inc
jnp
movsl
jbe
fcomip
out
sbb
in
rol
test
mov
jnp
cmp
and
jb
adc
jg
or
jb
cmp
lret
dec
dec
sti
push
sub
add
pop
or
test
xor
out
ds
aam
cli
fldcw
dec
ds
loopne
lret
lret
mov
sbb
inc
hlt
pop
out
jns
or
pop
fildl
mov
push
push
jb
xor
test
adc
mov
sbb
jbe
lods
popa
scas
out
test
clc
mov
insl
or
and
mov
cmp
push
shlb
outsb
bound
sub
shlb
xor
mov
cmp
call
jbe
cmp
sbb
in
dec
pop
push
mov
push
pop
outsl
push
loop
inc
mov
int
jp
mov
es
fldl
int
add
testb
ret
jno
push
cmp
popa
pop
or
scas
jmp
shll
rclb
sbb
jb
fildl
bndstx
fndisi(8087
push
xchg
pop
adc
dec
dec
mov
jmp
pop
jmp
pop
mov
in
xchg
popl
iret
cmp
into
movsl
js
arpl
sub
add
cmpsl
stos
pop
arpl
pop
lahf
add
data16
fwait
xor
ja
insb
cmp
add
and
leave
jge
dec
lret
xlat
jnp
add
outsb
or
sub
mov
adc
sub
je
push
jnp
ljmp
ficompl
es
and
icebp
mov
add
pop
hlt
jmp
xchg
hlt
js
xlat
fistpl
push
test
pop
bound
sbb
arpl
inc
mov
call
pop
cmc
xchg
mov
out
jmp
adc
fcoml
cmpsb
outsl
int3
mov
jg
movsb
jae
mov
faddl
call
mov
push
roll
out
pop
xchg
or
dec
cmp
or
inc
out
pop
xor
pop
shrl
dec
push
xchg
and
dec
adc
dec
add
dec
mov
push
jb
adc
fdivl
jns
xchg
mov
nop
bound
add
mov
adc
cmp
xor
add
pop
movl
mov
push
cs
les
xor
in
mov
das
mov
int3
popf
nop
push
jne
ljmp
push
out
sub
int3
sub
inc
lods
shll
sbb
sbb
daa
out
jg
enter
jp
and
pop
push
aam
in
aam
jns
hlt
out
cld
push
int3
ja
push
and
pop
out
jns
push
movsl
aam
push
mov
mov
mov
xchg
mov
mov
and
and
sbb
push
jg
fidivrs
mov
imul
imul
icebp
adc
cmpsl
mov
insl
pop
fistpl
jns
jnp
lods
adc
sbb
cwtl
outsl
xchg
fnstsw
arpl
daa
cwtl
or
pop
shl
mov
fnstsw
and
cmpsl
mov
mov
xorps
in
mov
and
ret
ret
jnp
mov
test
inc
mov
pop
xchg
pop
jae
add
pop
sbb
loopne
pop
addl
push
sbb
test
fwait
in
xchg
aas
movsl
hlt
aam
jae
iret
in
mov
xchg
xchg
aas
sub
and
aam
int
fistpll
adc
cmp
or
ja
pusha
out
dec
outsb
mov
mov
dec
sti
repz
imul
cmp
aam
test
enter
movsb
lock
jle
mov
xlat
pop
jl
mov
pop
pop
xor
imul
ret
adc
pop
leave
rorb
mov
pop
ds
cli
pop
inc
mov
xchg
pop
dec
out
xor
lea
insb
lea
incl
dec
lahf
mov
out
mov
sbb
fs
adc
jecxz
mov
xchg
jge
pop
jnp
inc
shrb
cwtl
mov
sbb
dec
dec
mov
sub
push
outsl
mov
minps
pop
in
dec
je
sub
mov
mov
std
jmp
push
jg
jae
sbb
xchg
aam
in
shlb
and
lcall
je
adc
mov
inc
fcoml
mov
ljmp
in
add
cmp
jbe
decl
mov
inc
mov
ljmp
adc
jnp
adc
adc
mov
jg
nop
add
push
into
mov
dec
mov
jge
dec
mov
push
or
jb
std
fmull
fnstcw
pop
mov
mov
lock
fs
jle
fnsave
out
hlt
iret
sbb
aam
pop
and
or
jno
out
jecxz
adc
movsb
in
sbb
push
int3
mov
or
cmc
cld
scas
mov
adc
push
mov
inc
jbe
or
push
pop
fbstp
lcall
xorl
xor
dec
mov
pop
cmp
ret
push
out
sbb
jge
loop
test
ljmp
push
gs
push
sbb
and
daa
sbb
mov
jl
movsb
mov
and
dec
xchg
xchg
xchg
pusha
jbe
imul
dec
cmpsl
adc
cmp
and
sbb
ja
imul
ss
scas
cld
call
movsb
fs
arpl
xor
imul
jae
hlt
jnp
pop
shl
shrl
jl
rorl
outsl
dec
mov
inc
mov
dec
lock
lods
popa
mov
and
cmp
pop
shlb
mov
add
es
dec
sbb
and
sub
adc
pop
test
mov
push
add
xchg
sbb
mov
push
mov
jecxz
dec
and
fs
xlat
test
mov
or
jne
inc
dec
sbb
cld
xchg
addr16
sbb
sbb
pop
push
push
iret
and
les
adc
jno
cld
pop
jnp
lret
inc
and
xchg
data16
mov
shrb
roll
fwait
push
aas
je
sbb
aam
push
xchg
push
or
jge
inc
adc
mov
jg
test
loop
aas
jge
insb
lods
subb
repz
jnp
cmp
sbb
and
mov
dec
cs
sub
out
out
sbb
sub
dec
in
rorl
cmpb
add
fldl
mov
fistpl
std
push
insb
gs
and
inc
mov
push
call
sti
inc
inc
mov
add
push
push
sbb
sbb
loop
fstpt
dec
dec
out
adc
mov
inc
add
dec
ss
cmp
push
pop
sbb
repz
and
jb
inc
jl
jg
lret
movsb
je
mov
sbb
aaa
mov
sbb
out
sbb
jl
adcl
pop
mov
dec
dec
fwait
push
out
jo
mov
adc
test
and
push
loope
sti
insl
push
mov
and
xchg
hlt
repz
sub
jl
jg
mov
dec
mov
mov
shlb
dec
loope
push
mov
push
iret
pop
fldenv
cmpsl
jno
mov
push
shufps
ds
sti
aas
add
sti
aas
mov
scas
into
cltd
xchg
jecxz
sub
mov
and
jg
in
mov
clc
xchg
mov
nop
data16
inc
jmp
cmovno
add
mov
or
mov
push
jl
push
shl
jmp
push
mov
std
mov
mov
inc
inc
dec
dec
popa
jae
hlt
int
outsl
movsb
movsl
push
push
aas
jg
adc
fs
daa
repnz
adc
xor
inc
icebp
out
sbb
sub
add
xor
sbb
loopne
push
push
ds
sahf
mov
mov
hlt
mov
xchg
pop
mov
jnp
ss
cs
pop
inc
pop
movsl
xor
clc
out
jnp
xor
inc
rolb
insb
scas
dec
mov
push
icebp
and
std
sub
and
or
cs
inc
mov
push
pop
enter
dec
cmc
mov
xchg
jnp
xchg
fsubl
out
jno
lock
scas
mov
jno
cmc
mov
fcoml
mov
rcll
aam
push
sahf
shrb
fisttpll
outsb
imul
jle
cltd
push
out
ret
fs
iret
adc
xchg
or
gs
ljmp
dec
rcll
insb
decb
cmp
mov
cmp
repz
cmp
inc
loopne
push
fs
std
shll
xlat
jmp
arpl
cmpsl
cmpsb
jnp
stos
mov
jne
adc
fucomip
mov
adc
dec
aam
and
push
mov
fistpll
rorb
pop
faddl
and
jecxz
mov
jae
sbb
loop
or
inc
add
movsb
jno
pop
sbb
dec
mov
xchg
sahf
dec
jmp
pop
dec
movsb
or
insb
cli
jp
sti
sub
add
jbe
xchg
mov
ss
sub
xor
jno
mov
or
loope
sti
add
sub
shlb
xchg
out
mov
or
sahf
addl
xchg
pop
add
add
ficoml
push
loop
mov
jmp
int
jge
mov
cmp
in
or
mov
xchg
cmp
mov
mov
jbe
scas
and
lcall
movsb
ret
xchg
and
shll
and
mov
and
jbe
inc
cltd
push
and
push
pusha
hlt
and
repnz
loopne
mov
aas
out
inc
imul
jmp
mov
cmp
and
movsb
mov
xor
scas
jmp
mov
or
jbe
or
rorb
and
jmp
sbb
scas
add
es
outsl
cmp
mov
lods
icebp
and
dec
adc
mov
sarb
or
shlb
lcall
and
ret
daa
and
mov
andb
mov
dec
aas
xor
jb
and
in
jb
xor
fsts
and
adc
and
push
cmc
jae
jbe
push
pop
and
lds
clc
jbe
push
mov
mov
jbe
xchg
out
inc
imul
in
and
jp
in
add
stos
jb
mov
lcall
scas
and
and
and
mov
mov
out
in
out
inc
imul
jmp
mov
mov
and
nop
outsl
mov
fistpll
mov
pop
int3
and
out
inc
imul
movsl
mov
int
and
adc
jge
scas
daa
movsb
andl
outsl
cmp
cmc
mov
fwait
bound
sub
cmpl
sti
outsb
imul
adc
push
mov
lods
inc
pushf
pop
pop
adc
loopne
dec
jge
out
pushf
add
leave
pop
add
mov
jno
mov
addb
lret
mov
rorl
pusha
mov
add
ss
pusha
and
pushl
mov
ret
inc
pop
inc
sub
cmpb
mov
push
jne
inc
out
or
aam
sub
inc
mov
and
mov
test
je
jge
test
arpl
adc
test
loopne
xorb
out
cmp
dec
push
push
mov
jnp
pop
mov
jle
cmpsb
push
xorb
adc
sub
xchg
fists
or
iret
mov
roll
stos
dec
aas
mov
mov
hlt
popf
testl
lcall
add
loope
ficompl
lods
push
add
outsb
in
mov
out
or
call
sbb
sbb
fcomi
test
push
mov
jns
jle
lock
test
cld
cld
mov
fildll
les
dec
push
or
sbb
jb
mov
call
imul
repz
push
movsl
xchg
in
push
xchg
out
aas
imul
decb
xor
cmp
dec
filds
dec
cmp
xor
add
xchg
inc
nop
xor
adc
jnp
mov
mov
jge
push
mov
stc
incb
dec
mov
jmp
cmpsl
xor
pop
std
pop
dec
mov
push
jp
lcall
cmp
mov
insb
aam
cltd
jmp
dec
push
testl
shll
cli
jl
cmp
push
int3
dec
mov
into
lcall
adc
push
adc
sbb
mov
sarl
adc
jge
sbb
xchg
cld
in
rcll
mov
push
je
clc
fcmove
sbb
ret
inc
ss
aaa
mov
je
jg
xor
adcb
faddp
imul
comiss
mov
cs
out
jbe
shll
stc
mov
mov
push
xor
fs
mov
stos
add
je
adc
dec
mov
rolb
out
cmpsl
and
pop
repz
lock
imul
movsl
push
dec
cmp
pop
add
and
xchg
ss
clc
fcompl
xchg
push
repz
lods
cmc
fwait
das
sbb
aam
jnp
add
repnz
lock
and
inc
jecxz
ljmp
xchg
dec
jb
sti
pop
dec
jle
jle
or
jecxz
or
pop
mov
mov
jnp
inc
adc
pop
cltd
sub
int
push
inc
lock
xor
idivl
stos
inc
fs
repz
jl
adc
mov
movsb
test
out
loope
xchg
xor
mov
out
ror
test
mov
jmp
inc
push
lcall
or
pop
pusha
aam
rorl
lret
sbb
and
jbe
cmovp
rcll
mov
ljmp
aad
das
outsb
xchg
add
or
jnp
lds
fucomip
stos
dec
sbb
jmpw
jae
lods
test
push
jno
inc
dec
mov
stos
clc
cmp
mov
out
push
sbb
loopne
mov
daa
ljmp
cmpsb
sbb
cltd
push
loopne
mov
movsl
rolb
mov
add
push
add
jbe
cmp
ja
popf
int3
sbb
push
cmp
movsl
pop
sub
jb
xchg
mov
stc
ret
stos
adc
mov
rorb
inc
pop
xchg
and
rol
xor
aas
jge
test
and
adc
jl
sahf
lods
test
mov
dec
movsb
cmpsb
cli
adc
cwtl
loop
sbb
sbb
adc
add
shl
inc
addr16
dec
dec
jecxz
dec
icebp
and
push
sub
ja
cmpsl
push
adc
xor
testb
or
es
outsl
pop
cmp
jnp
mov
and
mov
adc
xchg
mov
adc
js
xor
xor
shll
imul
mov
mov
lods
cmc
lods
jnp
add
dec
popf
dec
cmp
roll
mov
adc
inc
mov
push
cwtl
and
inc
sub
jp
pop
adc
in
xor
xchg
adc
mov
outsl
cmp
and
mov
jnp
popl
stos
mov
pop
jl
add
ss
popa
mov
les
adc
lock
mov
or
adc
mov
jl
jecxz
xchg
outsb
mov
push
push
mov
sbb
mov
in
ja
push
mov
iret
mov
pop
inc
jno
sbb
je
push
testl
iret
cmp
inc
push
mov
inc
mov
mov
repz
push
push
test
loopne
mov
pop
out
inc
aad
or
pusha
lea
or
xor
shll
cmpsb
xchg
xor
sbb
test
dec
mov
loop
hlt
int
lods
mov
and
mov
ja
mov
mov
push
push
mov
xorl
sub
adc
and
sbb
ficomps
sbb
adc
lret
jle
inc
pushf
sarb
xor
es
and
lods
mov
xor
mov
js
mov
push
jnp
lods
mov
cmp
xor
mov
mov
sub
arpl
scas
dec
scas
mov
xchg
aam
ds
insl
xchg
aam
adc
orb
push
stos
dec
add
push
std
push
xor
shlb
adc
repz
jp
imull
inc
mulb
jnp
mov
dec
push
mov
shll
mov
xchg
adc
insb
call
xchg
jl
mov
out
pushf
mov
arpl
xor
dec
out
jl
xor
dec
cmc
je
ss
int3
std
jbe
fdivrl
or
or
mov
cmp
mov
flds
outsl
jnp
lods
mov
fwait
testl
bound
sbb
push
cmpsb
arpl
xor
dec
mov
pop
in
sub
icebp
in
lods
push
cmc
dec
mov
div
stos
ss
aam
add
ss
sub
dec
sub
jp
pushl
mov
mov
scas
mov
gs
andb
adc
out
adc
push
jle
lods
xchg
dec
sub
call
adc
fnstcw
stos
int3
loope
test
test
jne
and
fsubl
mov
mov
scas
dec
mov
scas
inc
scas
dec
mov
mov
scas
inc
scas
dec
mov
mov
xchg
andl
adc
mov
hlt
orb
scas
xchg
or
push
mov
mov
lret
sbb
or
jg
mov
sub
xchg
loope
xor
push
addr16
mov
jl
dec
inc
cmp
pop
inc
mov
pop
icebp
adc
cmp
and
int3
cmp
or
les
sbb
xchg
adc
loope
sbb
jno
int3
xchg
cmp
mov
imul
stos
lock
jle
inc
mov
adc
ds
mov
outsl
test
adc
dec
dec
in
push
jns
add
rcrb
mov
shlb
xor
jnp
push
mov
inc
enter
hlt
aam
mov
xchg
xchg
hlt
mov
jp
inc
cmpsb
arpl
xor
dec
lcall
out
cmc
mov
xchg
outsb
or
dec
lods
add
dec
push
mov
aam
mov
jnp
adc
orb
dec
stos
and
sti
lret
lock
movsb
fsubs
mov
and
jnp
mov
insl
or
dec
or
popa
cltd
pop
jnp
lret
mov
test
pop
mov
inc
scas
dec
mov
mov
adc
cmp
jb
incb
adc
adc
mov
xchg
mov
or
stos
dec
or
dec
repz
push
push
jecxz
and
or
jnp
add
out
lea
arpl
inc
jnp
add
out
adc
iret
xor
cmp
dec
in
mov
int3
icebp
ljmp
in
in
lcall
jnp
xchg
hlt
movsb
insl
xchg
aam
sar
mov
mov
dec
in
les
int3
stos
int3
std
jbe
shl
jnp
dec
addb
ss
jp
pop
add
cld
and
push
dec
sahf
rcr
ds
mov
push
iret
and
add
movsb
mov
jl
cmp
jo
mov
out
sub
xor
dec
jecxz
aas
mov
inc
scas
dec
mov
add
or
mov
push
push
and
sbb
mov
mov
mov
mov
mov
add
jae
lock
dec
ljmp
cmc
je
xor
icebp
andl
nop
add
leave
push
dec
bnd
dec
stos
xor
mov
sub
clc
outsb
fnsave
and
dec
xor
jl
push
pop
mov
imul
cmp
jbe
fimuls
adc
or
push
cld
jns
jmp
imul
jbe
pop
add
jmp
cs
push
pop
push
testl
lods
mov
xchg
push
mov
inc
or
cmp
dec
pushf
dec
pop
push
cmpl
int3
cmp
sbb
popf
mov
inc
inc
dec
jbe
jb
adc
mov
cld
mov
pop
and
loop
adc
sarl
jp
ja
mov
movsl
push
jecxz
icebp
push
push
jne
xchg
insb
ja
pop
xor
pop
mov
in
xor
int3
insl
call
push
cmp
cld
fbstp
hlt
pop
vrsqrtps
ficomps
xchg
mov
dec
inc
mov
out
in
mov
and
and
call
add
inc
push
aam
lahf
add
dec
mov
push
sub
lea
add
rolb
push
mov
and
adc
xor
aaa
fucomp
je
adc
and
fwait
cmc
mov
jns
je
pop
dec
sbb
inc
push
fildll
icebp
outsl
mov
out
cmp
mov
and
in
stc
rolb
mov
or
test
jl
pop
mov
jno
mov
and
and
add
and
push
dec
push
jnp
pop
dec
dec
sub
mov
stos
dec
push
andnps
push
cli
mov
lds
and
pop
or
mov
adc
shll
mov
cmp
aad
fwait
mov
jbe
cmp
dec
cmp
test
mov
test
pop
iret
test
cmpsb
dec
adc
dec
jle
and
push
mov
test
in
mov
mov
ret
lea
clc
jl
push
xchg
mov
cmp
jle
adc
stc
test
jmp
lea
in
xor
cwtl
sub
jge
or
stos
xlat
xor
jo
jge
xchg
inc
and
fildll
fdivl
dec
std
inc
rcll
inc
movsb
dec
test
cmp
in
rcrb
pop
scas
cwtl
ja
sbb
pushf
fnsetpm(287
in
pop
hlt
pop
cld
push
fmull
push
add
sbb
push
xchg
mov
mov
loopne
sti
cmp
jmp
push
and
push
test
cmp
stc
push
inc
push
addr16
xor
jno
repnz
insb
std
jmp
mov
jp
loopne
adc
xlat
jmp
jno
push
sbb
cs
add
push
jbe
jmp
cli
fucomp
push
in
dec
push
das
adc
jp
fildl
push
mov
xchg
xlat
or
cld
cli
xor
insl
mov
mov
mov
ljmp
popf
std
or
mov
hlt
cltd
jmp
mov
lcall
into
and
jns
in
insl
inc
fnstcw
push
pushf
and
jmpw
push
jmp
push
push
cmp
or
pop
insl
push
mov
dec
or
adc
xchg
pop
faddl
mov
jle
mov
out
pop
cmp
cltd
out
jmp
jne
cmp
or
dec
jg
cmp
int3
repz
aas
icebp
jbe
jnp
xchg
mov
mov
lods
cmc
fwait
stc
out
jmp
dec
mov
mov
sub
sti
push
jns
ss
lods
icebp
ficomps
aam
adc
rcll
xor
ret
adc
jae
jne
fisttpl
add
pushf
into
or
leave
cli
int3
xor
sub
rorb
jno
popf
out
daa
mov
pop
dec
sbb
cmp
push
loop
lret
adc
sbb
ss
fwait
push
mov
shll
mov
test
in
jmp
mov
inc
fsubrp
adc
dec
dec
ds
push
into
sbb
cltd
mov
xchg
add
cmp
dec
xor
rorl
out
or
movsb
cld
mov
jo
sbb
jmp
in
jl
sbb
push
and
movsl
mov
fadds
icebp
push
push
adc
repz
adc
nop
lahf
push
pop
adc
mov
scas
xchg
adc
lds
inc
insb
movsl
mov
mov
fstpt
cld
decl
fistpl
jne
adc
scas
push
rcr
add
dec
hlt
push
mov
push
movsb
sahf
std
sub
jmp
mov
mov
add
xchg
lret
xlat
add
jbe
repz
xor
jne
dec
mov
sub
push
mul
ret
js
fbld
sbb
addr16
mov
add
iret
shlb
jg
rorb
push
mov
das
or
rcl
inc
jo
pushf
repnz
push
cmp
dec
sahf
stc
sbb
pop
mov
and
cmp
mov
popf
mov
mov
dec
sub
sub
push
aas
mov
ret
inc
stos
imul
in
scas
pushf
imul
xchg
fistl
xchg
push
xor
sbb
add
sub
mov
insb
inc
mov
mov
mulb
loop
faddl
jg
pop
dec
jl
push
sarl
lcallw
push
inc
push
pusha
lds
stc
jnp
cld
push
and
fisubrs
push
loopne
hlt
xchg
movsb
loope
sbb
rorl
sbb
jae
insl
and
mov
dec
mov
xchg
inc
mov
insl
and
mov
push
test
mov
push
out
jb
cmp
pop
push
push
out
in
repz
pop
pop
pop
sbb
inc
and
pop
jg
rorl
mov
xchg
pop
lods
bnd
adc
in
pusha
and
jns
push
adc
adc
ja
jbe
outsb
add
jmp
div
pop
loope
mov
mov
mov
or
pop
test
mov
mov
jp
in
lds
and
mov
sahf
pop
subl
xor
ficoml
jecxz
xor
push
jecxz
push
adc
icebp
and
sarb
fildll
rorl
cmpsl
xchg
push
jae
xchg
inc
ficoms
test
xor
inc
popf
fdivr
or
movntps
pop
arpl
dec
jno
sub
orl
jl
ret
aas
adcb
fwait
mov
or
movsl
cmpsl
lea
lret
jno
inc
pop
dec
mov
mov
xchg
push
aad
add
cmp
push
outsb
nop
ss
cmc
and
movsw
je
sbb
pop
push
sbb
and
inc
sub
dec
mov
pop
xchg
jno
fwait
or
testl
in
cmp
testb
add
daa
or
bound
xor
jmp
int3
mov
fsubrl
int
sbb
push
adc
sub
mov
mov
jmp
mov
sub
int3
in
or
jge
xchg
or
cmp
orl
imul
test
repz
xor
fildl
xchg
dec
push
jbe
add
aam
push
aas
jl
rcl
sbb
inc
or
jbe
cwtl
or
rcr
mov
aam
lahf
sub
loopne
mov
dec
cltd
or
test
xor
push
inc
loopne
fcomi
jbe
and
push
fbld
sbb
or
xor
inc
push
loope
cmp
out
popf
sub
mov
rol
movsb
push
push
and
jmp
mov
ss
in
cmp
jns
mov
jg
sub
mov
popa
js
cmp
out
lret
rcll
mov
cmpsl
mov
xchg
repz
sbb
inc
mov
mov
add
push
or
leave
pop
lea
imul
push
xchg
jbe
xor
nopl
rorl
idiv
lds
and
and
mov
pop
outsl
incl
ss
cmp
push
jo
push
fwait
xchg
jb
push
xchg
mov
xlat
lcall
cmp
push
sbb
and
mov
xor
out
xchg
and
dec
xchg
ret
and
clc
mov
adc
inc
push
andb
jb
mov
outsb
jecxz
cmp
xchg
xor
cmp
add
add
sub
aad
push
stc
sbb
push
adc
or
mov
cltd
data16
or
jmp
imul
adc
push
or
or
xor
repnz
subl
sub
inc
cmp
imul
or
in
pop
inc
adc
pop
push
cmp
ds
cmp
xchg
out
pop
xchg
aaa
nop
add
aam
cmp
xlat
xchg
fbld
clc
mov
sub
nop
cltd
and
adc
cmc
pop
xor
xor
fmulp
loope
ret
scas
loope
mov
cli
jl
dec
inc
aaa
sub
outsb
xor
adc
xchg
mov
cmp
push
inc
dec
push
repnz
iret
xorb
add
xor
sub
cld
movd
in
lret
mov
fildll
popf
scas
lock
dec
decl
movsl
rclb
fimuls
fldl
or
jnp
xchg
inc
cmp
push
mov
jg
push
push
sub
sbb
dec
jbe
inc
ds
xor
mov
add
push
jge
dec
and
addb
cmp
cmpb
push
aam
insb
jg
jle
mov
test
mov
test
and
in
sbb
out
mov
xor
pop
mov
sub
pop
mov
dec
out
xlat
push
pop
inc
pop
and
je
lcall
shrb
lcall
dec
adc
jbe
bound
sbb
mov
out
adc
mov
call
stc
jecxz
add
imul
data16
xor
test
in
test
push
pop
call
cmp
test
and
dec
cltd
push
das
sbb
mov
aad
hlt
xchg
aas
jecxz
pop
out
mov
xor
jb
push
subl
jmp
or
or
cmp
dec
fistps
insl
test
cmpsb
pop
sbb
inc
push
pusha
dec
mov
mov
xor
aam
test
loope
add
ficoml
repnz
jmp
fs
loope
movsb
loopne
dec
lods
lret
popl
das
mov
mov
jb
jno
dec
out
gs
xor
push
push
mov
cmc
push
notb
pop
cmpsb
aad
add
fucomip
push
aam
nop
rcrb
inc
mov
call
sahf
loopne
mov
rcrb
xchg
test
add
pop
or
aam
pop
xchg
sub
dec
out
arpl
in
imul
shlb
sahf
pop
scas
ds
inc
jne
imul
gs
inc
cmpsb
xchg
push
out
or
cmpsb
push
aad
and
mov
sub
lcall
xor
add
pop
in
gs
cmp
sub
icebp
scas
fbstp
fnsave
inc
sbb
mov
or
push
and
shll
lock
popa
add
rorl
loope
lods
in
sbb
push
cld
fistps
sbb
mov
xor
mov
jmp
pop
add
sbb
dec
pop
shl
loopne
bound
dec
sahf
cs
adc
mov
adc
push
push
jnp
outsb
mov
aaa
add
push
pop
mov
in
add
push
adc
mov
cmp
pop
mov
inc
insl
out
clc
inc
in
cmp
icebp
nop
push
push
ret
jl
jo
dec
push
or
cld
icebp
xchg
into
cwtl
clc
pop
iret
mov
jne
nop
or
popf
pop
push
xor
dec
mov
shlb
inc
push
push
xor
mov
int3
shlb
inc
add
fildll
pop
ljmp
xchg
jg
push
xchg
lea
rol
mov
dec
mov
push
jbe
rolb
add
sbb
adc
lahf
cmp
ds
xchg
repz
cld
mov
leave
mov
mov
sbb
roll
mov
inc
cmp
cmp
ljmp
je
out
jmp
adc
mov
push
imul
mov
xchg
cmp
rol
mov
sub
ss
lcall
pop
jl
mov
pop
lods
adc
xor
sbb
mov
xchg
xor
ds
fistps
and
and
bound
xchg
fwait
and
dec
insb
movl
rorl
in
cmp
sub
test
adc
and
jno
ljmp
push
into
or
cmc
jnp
fisttps
arpl
or
lods
or
mov
mov
out
mov
or
stos
dec
jge
push
daa
lea
test
adc
rcrl
mov
dec
cs
pop
lods
xchg
pop
mov
lds
int
mov
or
inc
add
jmp
call
xor
pop
shrb
inc
add
mov
outsb
js
mov
push
stc
xor
cwtl
dec
xor
jmp
psadbw
jmp
push
inc
jl
jmp
jne
hlt
or
ljmp
jno
jp
xchg
stos
adc
loop
push
lret
cmp
jmpw
pusha
out
push
aad
push
cs
sbb
cmp
cli
jle
mov
push
push
pop
aas
fists
mov
inc
cmp
jp
test
pop
and
adc
xor
icebp
mov
push
inc
sub
push
cltd
scas
xchg
ds
imul
mov
or
shl
push
andb
std
fisubl
rolb
xor
jbe
cmp
add
push
aas
les
jle
rcrl
roll
mov
inc
loopne
mov
xlat
dec
xchg
mov
insb
cmp
pop
xlat
xor
jnp
femms
shrb
movsb
sub
or
push
push
aas
imul
int
cld
add
jg
xor
jae
sbb
lods
dec
mov
cld
jl
push
ret
xchg
aas
iret
lcall
imulb
rcrb
imul
repz
cmp
scas
data16
mov
testl
xchg
sub
dec
ja
push
jl
xchg
outsb
cld
jge
dec
adc
jle
jnp
adc
pop
cmp
lds
sbb
shll
shl
insb
xor
je
dec
ds
dec
ret
or
lds
sar
adc
and
pop
sti
imul
std
sbb
add
xor
in
adc
fcomip
jno
andl
leave
jl
int3
sbb
std
shr
in
push
dec
pop
xchg
jmp
jmp
in
push
into
adc
mov
mov
decl
out
shl
sbb
mov
xchg
inc
scas
mov
lock
stc
sbb
out
jae
je
ret
jnp
es
push
jae
push
rclb
jg
dec
es
movsb
subb
pop
bound
inc
jmp
mov
mov
mov
adc
or
mov
jne
jns
mov
pop
fwait
mov
xor
adc
mov
ja
mov
hlt
repz
scas
xor
mov
mov
dec
in
or
movsb
ficompl
mov
arpl
push
dec
ja
adc
and
mov
call
push
daa
jo
ret
adc
mov
xor
sahf
call
gs
push
or
decl
das
cli
sub
push
mov
aam
lods
xchg
jecxz
and
dec
lret
adc
pop
dec
add
push
outsb
out
les
xor
mov
test
inc
cmp
add
add
icebp
ja
les
xlat
cmpsb
jbe
xor
das
jge
pusha
cwtl
and
push
ja
and
out
fst
dec
pop
jle
or
xchg
push
cld
std
adc
push
in
js
xor
pop
cltd
jle
push
orb
inc
sbb
inc
xchg
out
adc
sub
mov
mov
dec
push
roll
xor
loopne
jae
push
or
out
test
sti
push
pusha
add
jno
rcr
cltd
icebp
mov
sbb
xchg
jge
cmp
nop
dec
es
cwtl
fnsave
roll
dec
lods
fistpll
in
mov
mov
mov
in
push
insl
cmp
add
sbb
push
shlb
pop
adc
loop
fistl
mov
mov
mov
inc
push
in
jbe
mov
test
iret
pop
push
inc
fnstsw
iret
orb
xchg
jge
cli
adc
sub
cmp
pop
imul
aam
jmp
loope
xchg
js
xor
aaa
xchg
cmp
aas
xchg
test
fisttpll
sbb
sahf
lretw
xchg
fs
or
sarb
aas
xchg
add
adc
jns
inc
jecxz
pop
ss
jne
inc
fnstsw
mov
inc
push
cmp
jmp
inc
scas
pop
adcb
int
mov
adc
lea
lret
lea
push
mov
jno
mov
shll
stc
movsb
cmp
shrb
cld
das
std
aaa
mov
mov
or
fcmovb
mov
adc
cli
or
dec
sbb
push
mov
add
push
inc
lds
mov
int3
repz
adc
fnsave
mov
inc
lock
repz
nop
aam
push
xorb
sbb
cltd
pop
add
cmp
mov
xchg
loop
jge
lret
inc
cltd
out
cmc
xchg
cmp
test
out
fcmovbe
pop
and
pop
lock
jbe
jl
inc
dec
cmc
ss
sti
fisubrl
lds
rol
add
push
pop
dec
push
jb
ja
ficoml
cmpl
test
ret
add
sbb
xchg
mov
sub
jnp
xlat
mov
sub
ljmp
call
lahf
pop
imul
pop
in
adc
and
subb
inc
lds
or
sbb
dec
cmc
dec
jbe
xchg
mov
inc
cmc
push
lock
sbb
xchg
pop
jnp
and
inc
lea
jecxz
cld
xor
pop
dec
pop
in
pop
and
push
ffree
in
inc
stos
jg
adc
mov
jle
push
lds
pop
fisttpll
popa
ss
shll
inc
not
dec
mov
dec
add
adc
push
sbb
pop
mov
test
cmc
sub
xlat
mov
jnp
sbb
fists
mov
adc
xchg
shll
push
jbe
shl
fbstp
adc
fcmovb
push
insl
fcompl
movsl
in
xchg
out
mov
mov
mov
pop
cmp
stos
add
hlt
mov
movsl
leave
mov
cli
ja
mov
bound
repz
adc
rdpmc
xorl
fwait
aad
nop
mov
clc
dec
add
mov
mov
pushf
jge
dec
pushf
xchg
xlat
mov
jl
adc
int3
decb
aad
push
jbe
mov
jbe
ss
push
fadds
pop
adc
fisttpll
repz
or
imul
push
jae
sub
repz
mov
xchg
jg
inc
dec
cmp
gs
out
push
repz
subb
or
sbb
and
inc
xor
mov
push
inc
dec
pop
cmp
pushf
mov
jmp
xor
push
repz
popf
push
push
cs
push
pop
adc
or
test
mov
mov
mov
mov
scas
mov
mov
push
and
cmp
or
xchg
adc
movsl
inc
sub
lret
aad
std
movl
push
jl
and
push
xlat
jnp
ss
mov
and
dec
jo
cs
je
nop
paddd
fcmovb
xorl
inc
xor
mov
lea
push
add
mov
arpl
cltd
xchg
push
sub
fcmovbe
outsb
sbbb
test
inc
lea
les
divl
push
cltd
dec
pushf
push
lods
xchg
pop
and
push
xchg
dec
sub
cld
dec
dec
cld
jl
lock
pop
xor
dec
add
sbb
adc
inc
clc
out
sbb
sub
push
cmpsl
jbe
lods
lods
aad
data16
cmpsl
sbb
mov
jnp
into
sbb
sbb
add
pushf
jnp
adc
jg
xor
test
movsb
iret
pop
add
rcrb
xchg
iret
push
jb
aas
add
mov
cmc
popf
aas
or
lea
jp
ret
add
add
adc
cltd
dec
push
mov
xchg
mov
lcall
cli
mov
jae
or
mov
add
sbb
jae
cmp
pusha
sbb
push
pushf
scas
push
movsb
xchg
jmp
push
lret
ffreep
or
cmpsb
jle
ret
test
push
stos
inc
xor
dec
dec
cltd
mov
shrb
mov
jbe
mov
cmp
scas
push
mov
sbb
mov
inc
int3
and
adc
push
jmp
push
aaa
outsl
out
std
jmp
adc
xor
lea
clc
notl
pop
leave
dec
pusha
mov
arpl
xchg
roll
arpl
iret
add
cmp
sub
aad
add
imull
or
sub
test
aad
pop
add
std
push
or
pop
and
mov
jmp
add
push
jg
sbb
mov
adc
fcmovbe
add
inc
pop
sbb
jmp
push
cmp
cs
jae
shll
add
jbe
scas
loop
cmc
adc
xchg
dec
out
hlt
sbb
xor
pop
mull
jae
mov
dec
div
xor
jae
and
fwait
jg
mov
ja
arpl
jmp
inc
lods
repnz
push
out
or
pop
int3
inc
jno
shll
das
fisubl
jnp
popl
and
push
scas
add
inc
inc
imul
cs
push
lret
icebp
jnp
mov
jp
and
imul
fsubr
push
jno
jmp
test
xor
adc
cmpsb
xchg
pop
add
xor
mov
loop
aam
sbb
adc
lock
jno
mov
mov
mov
push
dec
pop
xchg
ljmp
xor
adc
repnz
jae
test
adc
jge
add
ret
xchg
push
add
std
loopne
push
jne
pop
mov
leave
xchg
js
mov
cli
adc
or
and
pop
add
out
jnp
cli
mov
hlt
loop
ret
cs
xchg
ret
shlb
or
aad
xchg
jbe
out
sbb
iret
or
daa
fcomi
nop
rcr
mov
pop
sub
adc
fistpll
cld
xchg
rcrl
mov
dec
bound
subb
push
mov
mov
add
lret
lret
js
shll
sbb
loope
dec
adc
les
iret
stos
insb
push
jmp
fstpl
popa
fimull
mov
sub
add
xchg
dec
sahf
popa
inc
mov
and
xchg
js
pop
jne
jmp
popa
push
ds
fwait
or
data16
fistpl
scas
fbld
push
mov
add
sbb
addb
cmc
mov
sub
add
push
sub
pop
stos
dec
das
inc
in
out
push
notl
lret
jmp
jnp
in
iret
inc
repnz
sbb
jno
fstpt
stos
xor
sub
leave
xorb
fwait
icebp
pop
or
fildll
shll
shlb
popa
inc
sqrtps
imul
lock
cmpsb
dec
out
jno
jne
mov
push
out
push
das
cmp
shlb
es
in
sbb
mov
jno
sub
sub
jmp
mov
jecxz
jg
and
test
xchg
cmp
sbb
dec
push
mov
fistpl
inc
adc
fcomi
in
adc
push
popa
dec
shll
and
push
pop
iret
dec
repnz
jnp
in
out
outsb
rcll
lret
jmp
movsb
movsl
in
aaa
stos
out
cltd
xchg
jns
jbe
adc
pop
mov
nop
xor
xor
push
les
sarl
pop
push
nop
mov
icebp
inc
mov
jge
or
sub
jnp
nop
jnp
push
lods
or
jp
jmp
loopne
inc
mov
in
mov
sub
jnp
mov
xorl
dec
dec
int3
jmp
dec
ds
inc
push
addl
dec
dec
cld
push
repz
daa
inc
out
pop
pop
xor
mov
imul
aad
mov
out
xchg
leave
int3
outsb
ljmp
filds
mov
xchg
repz
in
inc
pusha
pop
xor
push
into
cmpsb
enter
sub
pop
add
das
hlt
inc
or
mov
cmpsb
jns
cld
dec
in
cmp
xchg
mov
and
nop
mov
jne
aaa
rorl
in
adc
ja
ret
inc
lret
add
das
imul
insl
mov
and
xor
jp
cmpl
int3
ret
mov
clts
cs
jno
jne
mov
shrl
ret
jno
jnp
pop
fidivrs
rcr
mov
push
mov
xchg
dec
test
ror
ja
adc
ret
adc
cmpsl
test
dec
cmp
jecxz
js
fsubrl
sbb
scas
pop
jns
jnp
in
adc
not
xchg
lock
xchg
push
fldl
mov
scas
cmpsl
inc
or
jmp
inc
dec
push
fsubrl
xlat
ret
jbe
adc
add
mov
push
std
mov
xor
fsubl
aad
adc
lcall
sub
shll
shlb
lock
dec
ja
sti
ret
rcpps
int
jle
xor
adcl
and
jbe
outsl
orb
pop
push
mov
jns
xchg
push
push
sub
imul
mov
pop
push
jnp
test
dec
out
xor
push
jle
sbb
ret
mov
test
mov
adc
cs
inc
push
dec
mov
push
mov
ljmpw
adc
adc
sbb
lcall
sbb
test
andb
ljmp
leave
pushf
adc
out
and
stos
rol
addl
std
dec
cltd
cmpb
inc
dec
ss
push
fmull
fwait
push
jo
cmc
pushf
fmull
push
push
ja
leave
inc
mov
stos
sub
out
jbe
outsb
jmp
pop
ja
std
arpl
sbb
sti
or
adcb
adcb
pop
stos
push
mov
in
sub
iret
and
cmp
in
leave
hlt
retw
test
mov
add
xor
incl
xchg
outsb
push
sub
sbb
cltd
or
sbb
mov
les
inc
mov
movsb
push
idivl
neg
add
imul
jl
jnp
lock
and
push
and
and
xchg
or
jp
outsb
add
jle
in
cmpsl
hlt
fdivrs
pop
add
std
out
add
lret
in
je
sahf
dec
or
xchg
cmp
shl
xchg
inc
loopne
js
std
popf
aas
in
push
into
outsb
rorl
add
and
sbb
push
and
jbe
push
pop
sahf
aad
shr
cld
loop
es
clc
pop
push
sbb
orb
sub
fistpll
xor
das
jb
cvtpi2ps
xchg
push
xor
lea
mov
dec
cs
cwtl
sub
into
mov
dec
icebp
sub
sub
mov
arpl
add
push
inc
enter
mov
dec
roll
js
cmp
dec
std
jl
add
dec
sti
dec
mov
mov
nop
sti
outsl
cmpsb
loopne
xor
cli
sbb
xor
pop
fistpll
push
mov
and
lds
inc
or
add
push
rcrb
inc
xor
or
xor
mov
lock
stc
ja
dec
sti
sbb
stos
lret
push
repnz
or
les
fstpt
mov
push
aam
xor
adc
je
push
out
es
fucomip
xchg
call
insl
jecxz
jmp
mov
add
jl
iret
int3
and
and
adc
jmp
clc
add
repnz
bound
mov
jg
xor
shlb
inc
mov
cmc
cld
cltd
mov
hlt
inc
push
pop
cmp
dec
jno
and
and
addr16
adc
inc
iret
mov
fwait
push
jo
sbb
sub
inc
or
neg
xor
xor
lock
sub
jbe
sub
nop
or
xchg
stos
aad
cld
push
jae
mov
testl
sbb
test
cmp
inc
sbb
xor
int3
loope
cmp
cmc
clc
nop
dec
outsl
and
push
pop
adc
pop
inc
inc
imul
or
mov
pop
mov
xlat
fs
in
and
out
repnz
cmp
sti
or
cmp
or
xor
dec
insb
mov
sub
dec
cli
aad
lods
pop
popa
les
sbb
jnp
cmpsb
dec
movsb
aad
xchg
cmp
xchg
dec
inc
stos
insb
orb
sbb
push
jge
sub
lds
popa
jl
adc
aas
inc
insl
add
lret
pop
rcrl
jg
cmp
jnp
add
cmp
cmp
ds
repz
sub
and
pop
inc
mov
mov
lahf
and
and
push
pushf
or
push
fsubrl
out
outsb
jne
int3
lods
adc
jge
inc
cld
or
pop
fs
jmp
hlt
fisttps
jg
hlt
jbe
dec
jmp
lahf
aam
cltd
les
xor
cmpsl
mov
dec
mov
aas
ljmp
jnp
mov
insl
inc
in
sub
int3
or
jnp
ret
lgs
jns
mov
in
ds
shll
xchg
aam
cmpsb
jge
fistps
mov
clc
lods
cld
pop
xchg
loopne
les
lea
add
adc
and
clc
nop
or
fists
mov
addb
loope
adc
jae
pop
loope
sbb
std
out
dec
pop
scas
cmpsb
rcrl
inc
mov
lret
sbb
mov
andb
test
push
and
adc
sub
jae
sub
insb
aam
mov
loope
fistps
adc
xor
cmc
jmp
sbb
mov
mov
pop
pushf
xlat
xor
adc
inc
lds
stos
fcmovb
sub
pop
xchg
out
daa
add
mov
sub
push
faddl
cld
or
js
jnp
adc
and
clc
jecxz
inc
xchg
fnstsw
pop
jg
jp
adc
outsl
mov
fucomi
mov
mov
out
mov
fcoms
and
add
in
aam
jnp
jmp
mov
cmc
add
js
and
call
movsl
lock
push
sbb
into
and
lods
in
fcoml
mov
pop
cmp
adc
sub
outsl
inc
and
lods
jnp
repnz
jb
lods
jg
cmp
mov
loope
jo
sub
rclb
mov
add
fnstsw
test
jns
repz
inc
lds
xlat
mov
loopne
jmp
dec
adc
lods
xchg
repz
mov
jl
push
nop
inc
pop
lret
rcl
sub
lcall
lea
in
call
fidivrs
iret
mov
and
mov
rclb
in
jbe
sub
int3
mov
lahf
xor
adc
adc
mov
iret
lret
jl
or
adc
sub
scas
cmpsb
adc
pop
lds
les
ljmp
cmc
cmp
ljmp
jecxz
mov
xlat
jo
fisubrs
sbb
test
jnp
pushf
andb
pop
pop
push
out
mov
and
imul
lods
cltd
xchg
inc
add
xor
inc
adc
mov
cmp
mov
popf
push
in
pop
jbe
fs
out
jns
enter
dec
mov
outsb
imul
cltd
xchg
sbb
inc
adc
in
dec
clc
inc
jnp
in
add
dec
dec
outsl
shll
daa
sub
movsb
in
jg
sbb
push
dec
mov
xchg
je
call
rcl
xchg
daa
jmp
xchg
jmp
ror
mov
and
inc
roll
out
inc
pop
mov
je
testb
cmp
test
dec
adc
dec
inc
ds
test
cmp
sbb
lods
xchg
mov
dec
test
push
or
xchg
mov
jmp
in
or
mov
dec
and
pop
addr16
sahf
jge
pop
outsl
or
push
in
sub
dec
mov
mov
jnp
ret
stos
ret
sahf
mov
cwtl
cmp
or
mov
cmc
hlt
mov
mov
outsl
pop
push
and
sub
jl
mov
and
add
mov
mov
arpl
or
and
xor
cmp
push
cmpsb
cmpsb
mov
movl
push
testb
add
aam
lods
xor
push
scas
fildll
mov
jmp
insl
shl
fildll
cmpsb
movsb
bound
inc
pop
imul
jnp
jo
jbe
loopne
imul
pop
cmp
jg
dec
or
cltd
mov
mov
cmpsb
jnp
push
shl
add
fbstp
scas
mov
out
dec
stos
fwait
push
ret
icebp
mov
dec
addr16
mov
pushf
xchg
int3
cld
mov
add
imul
xor
jmp
outsb
jg
test
rolb
fidivrl
in
jge
push
lods
push
push
fwait
out
xorl
mov
ret
insl
sbb
jl
and
inc
adc
mov
jb
mov
int3
movsb
cmp
rolb
cmpsb
pop
push
cld
lds
jge
lret
jmp
xchg
inc
fwait
add
pop
sarl
inc
lret
mov
pop
sbb
xchg
mov
push
aad
les
cmp
sbb
and
mov
cmpb
fidivl
mov
jne
pop
hlt
jmp
popa
pop
mov
and
add
cld
vmwrite
pushf
mov
icebp
repz
mov
ret
inc
loope
shll
shll
pop
loope
mov
loopne
adc
cmpsl
jg
pop
out
cmp
call
std
iret
jns
inc
fs
orl
cmp
push
sahf
jecxz
inc
xor
push
int3
out
mov
into
jbe
mov
lods
repnz
dec
imul
push
test
add
hlt
xchg
push
stos
fwait
pop
inc
mov
cmpsl
jnp
rcr
nop
decl
push
jne
pop
xchg
je
inc
or
push
push
mov
mov
outsb
jnp
push
jmp
dec
cmp
push
push
and
imul
dec
adc
add
pop
dec
cmpsl
shll
jl
mov
andl
adc
dec
aam
jecxz
mov
or
dec
not
push
cmpsb
and
adc
mov
dec
xchg
push
mov
sbb
mov
js
jmp
cld
stc
andb
divb
or
mov
aas
adc
in
cmp
popl
cmp
lods
xchg
mov
and
mov
add
push
ss
test
jmp
jmp
ja
popf
lods
lods
jns
sti
sbb
outsl
loope
dec
fsts
push
xor
jl
cmp
in
cwtl
insb
mov
cmp
fmull
jnp
lcall
mov
xor
sub
out
clc
and
mov
jmp
dec
xchg
pop
pop
popf
ret
movsl
mov
decl
cld
sbb
push
into
push
sar
arpl
inc
jnp
cwtl
pushf
arpl
les
shl
push
mov
and
jne
fs
push
push
in
sahf
lods
jl
sbb
ja
dec
aaa
into
cmp
fld
ds
scas
pop
jl
dec
dec
and
xchg
cmp
push
and
scas
dec
pop
pop
cmp
mov
mov
inc
xor
inc
imull
push
aaa
mov
adc
push
movsb
in
cli
in
hlt
int3
cld
in
sub
movsl
cld
std
movsl
out
in
lret
in
nopl
pop
ds
or
addr16
fdivrl
push
icebp
mov
fsubr
dec
mov
pop
inc
and
jp
insb
daa
jg
xor
jg
pop
mov
pop
cmpsl
mov
pusha
sbb
or
mov
and
repnz
out
fistpll
into
inc
add
orl
in
sti
xchg
dec
xchg
push
push
insl
fdivrs
or
rolb
jns
xor
sub
mov
test
mov
sub
sti
jge
sbb
es
mov
sbb
add
fs
inc
mov
cmp
out
stos
push
inc
movb
mull
in
out
dec
mov
xor
ja
mov
lahf
pop
and
ljmp
jecxz
daa
subb
stos
into
and
cmp
rorl
mov
lea
repz
jbe
jne
mov
fs
mov
push
pop
loopne
insb
lea
mov
stos
imul
lods
sub
pop
lods
cltd
or
xchg
jl
push
aad
js
fsubrl
mov
mov
lahf
fsubl
mov
dec
jbe
push
iret
clc
inc
add
cmc
push
jb
std
dec
xlat
and
rorl
add
lods
fadd
jp
pop
popf
mov
dec
dec
xchg
and
cs
cmpsb
push
sbb
xlat
pushf
inc
xor
mov
and
dec
stc
aam
cmp
lea
pop
stos
mov
test
fcoml
push
addr16
push
mov
push
into
dec
push
sbb
dec
mov
inc
in
jg
sub
adc
cmp
mov
jg
pop
mov
ljmp
in
lret
inc
inc
jnp
pusha
shll
iret
fstpl
xor
jle
cmc
insb
cmp
nop
jno
inc
push
ss
mov
xchg
jbe
jge
xchg
test
pop
lret
push
mov
inc
fsubl
mov
lea
loopne
mov
fisttpl
mov
clc
jbe
pop
mov
xchg
cmp
icebp
xor
xchg
addr16
adc
cmp
mov
mov
dec
mov
repnz
shll
test
push
mov
int
in
sbb
dec
jge
jae
inc
ret
push
inc
pushf
jle
jle
xchg
mov
pop
fsubr
mov
es
dec
sar
mov
jmp
sahf
and
mov
insb
outsl
lahf
loope
imul
cld
mull
or
mov
pusha
into
dec
rcll
or
loop
dec
cltd
mov
cmp
insl
out
inc
leave
fidivrl
push
rcll
xor
arpl
push
and
inc
in
inc
push
sbb
mov
and
aad
out
mov
cmp
jp
jae
arpl
sbb
adc
mov
aad
xor
mov
mov
xchg
mov
ds
in
pop
inc
mov
and
xor
mov
mov
add
sbbb
pop
jnp
sbb
pop
add
push
push
or
xchg
dec
pusha
mov
lret
arpl
ja
aas
inc
or
jg
dec
xchg
cmp
out
jbe
dec
lcall
pop
inc
push
push
mov
fs
jae
and
rorl
xchg
hlt
test
cmp
in
fwait
jnp
shll
add
fsubrl
in
mov
mov
in
push
sub
int
test
sti
add
dec
xchg
loope
dec
ret
int
and
cmp
lods
and
dec
or
xor
fildll
sti
out
push
mov
or
mov
mov
xchg
leave
stos
les
xchg
jnp
inc
sbb
mov
stos
inc
jle
or
imul
pop
ret
mov
in
cmp
pop
sbb
push
jle
sahf
or
adcl
stos
inc
and
mov
xchg
rcrl
xlat
mov
inc
add
pop
aad
sub
push
pop
push
or
mov
add
jge
and
in
dec
in
sbb
adc
aam
mov
jle
mov
aam
mov
inc
sarl
add
fsubrp
pop
sbb
push
jbe
pop
and
ja
xchg
xor
mov
adc
shrl
stc
jp
jecxz
and
leave
or
inc
adc
push
or
jl
out
inc
jle
and
ja
sub
push
add
mov
pop
aad
mov
and
fs
cli
cmp
sbb
sarb
mov
jae
or
in
repnz
pop
sbb
push
jbe
pop
and
fs
aad
mov
sti
or
popf
adc
ss
and
arpl
jne
inc
mov
push
dec
mov
sbb
pop
xor
mov
xor
icebp
int3
mov
addr16
jnp
inc
jmp
fucomi
cmp
sarb
inc
push
arpl
imul
mov
jl
inc
fidivl
icebp
fstpt
outsb
push
pop
jae
mov
mov
xchg
cld
je
push
das
lret
insb
inc
adc
aam
mov
fbstp
pop
mov
lahf
loop
aaa
xlat
cmp
sahf
xchg
mov
aam
mov
jp
pop
icebp
in
mov
lea
fadds
out
mov
pusha
call
sbb
jbe
cmpsb
cmp
std
inc
rorl
dec
push
mov
outsb
mov
or
notl
es
sub
bound
pusha
in
cld
subb
jnp
inc
pop
or
inc
xor
repz
inc
rcr
dec
in
push
mov
pop
in
scas
dec
js
push
int3
sbb
insl
pop
jl
arpl
mov
xchg
int
ja
fucomip
xorb
push
leave
rcrl
jno
into
movsl
dec
andl
std
pop
jmp
push
aaa
mov
inc
dec
xor
jae
out
jmp
or
lds
and
sub
xchg
mov
push
push
push
jmp
or
push
ss
mov
cmp
fwait
stos
mov
cltd
mov
xchg
fs
inc
adc
arpl
je
int3
and
lret
sub
icebp
rcrl
filds
icebp
sbb
and
or
test
mov
int
std
or
add
andl
fsubr
scas
aas
inc
lods
add
mov
cmp
out
jbe
push
in
xor
roll
jbe
mov
jb
add
fimuls
xor
lret
xchg
int
or
xchg
jno
xor
aad
fistl
loop
add
dec
arpl
mov
cmpsl
outsb
add
adc
push
xchg
in
mov
in
jo
aad
loopne
jecxz
sub
arpl
loopne
add
lods
jno
and
xchg
shrl
icebp
inc
pop
xchg
inc
sti
lcall
jb
adc
aam
call
outsb
sub
push
mov
jno
or
push
inc
xor
inc
jecxz
jp
mov
adc
dec
and
fistl
and
xchg
shrb
test
ss
dec
in
push
imul
lods
sbb
push
mov
imul
mov
mov
pop
xchg
sti
lea
dec
test
xchg
faddl
pop
orb
jp
pop
xlat
dec
ja
pop
loope
aam
fildl
sbb
xor
inc
add
push
dec
std
mov
push
mov
push
xchg
adc
clc
pop
sub
push
and
push
ret
jp
cmpsb
pop
fildl
mov
jge
pop
sbb
idiv
inc
inc
xchg
push
fstps
rorb
clc
arpl
inc
lret
aaa
cmpsb
outsl
int3
sbb
repz
inc
fldenv
sub
sub
jmp
mov
std
test
addl
jne
decl
jl
jge
cmp
test
adc
shll
arpl
fsubl
cmp
jnp
adc
add
xlat
push
jo
aad
jmp
mov
add
sbb
andps
sbb
adc
mov
cld
mov
daa
fstpl
int3
mov
stos
aas
fisubs
jo
int3
cld
repz
and
xchg
adc
mov
or
adc
jae
and
lcall
pop
mov
push
dec
cltd
stos
push
jge
sub
mov
push
xor
jae
pop
cwtl
arpl
inc
sar
add
mov
pop
int3
cld
repz
mov
cmc
push
sbb
loop
add
imul
out
cld
dec
orb
xchg
cltd
sbb
subb
repz
fcmovu
add
xor
fimull
push
les
adc
adc
cld
psrlw
into
push
lods
daa
cld
addr16
mov
xlat
mov
testl
and
xchg
dec
push
ret
push
repnz
mov
inc
pop
push
jne
mov
cltd
add
cld
inc
fcmovu
mov
insl
lods
iret
imul
mov
roll
in
out
mov
repz
xor
jnp
shlb
fsts
pandn
adc
filds
fldcw
or
cmc
dec
pop
adc
jnp
adc
sbb
jnp
out
or
mov
inc
and
call
jmp
mov
sti
shl
sbb
mov
cli
out
xchg
scas
jne
in
data16
cltd
push
lods
dec
outsl
aaa
inc
aad
jae
and
jmp
dec
pop
mov
lea
cli
mov
sahf
xchg
jae
adc
call
xchg
imul
push
jbe
loopne
mov
or
inc
test
mov
mov
ljmp
xor
jnp
cmp
or
cmp
cmp
pop
mov
fwait
adc
push
jg
jl
adc
jnp
ss
jbe
out
add
dec
mov
out
xchg
or
rcll
dec
push
adc
cmp
mov
sub
sbb
mov
js
adc
xor
xlat
aam
push
cmc
jnp
mov
fwait
jne
add
jne
pop
test
adc
cmp
out
pop
inc
in
cmp
push
inc
dec
in
sti
test
or
insb
mov
cmp
pop
pusha
jge
dec
pop
les
repz
out
retw
daa
fucomip
mov
push
lret
xlat
sbb
ret
fbld
xchg
call
sarl
mov
fcmovne
xchg
jbe
xchg
cmp
decl
inc
mov
shl
arpl
call
jo
xchg
and
inc
dec
jns
sahf
inc
cmp
dec
or
mov
push
dec
add
xor
pop
mov
sti
outsl
insb
fcmovu
inc
sub
pop
push
pop
jmp
shl
cmc
mov
sbb
or
pop
xor
xchg
inc
and
mov
jl
outsl
pop
mov
fcoml
lret
jnp
imul
pop
add
fwait
rorb
test
mov
inc
movsb
cmc
sub
and
fldt
insb
inc
inc
call
roll
data16
add
addl
mov
inc
ljmp
orb
sbb
mov
jg
and
inc
jg
dec
imul
addr16
stc
aaa
gs
cmpsl
mov
ljmp
out
mov
jmp
es
inc
cmp
hlt
sbb
dec
dec
adc
leave
addb
dec
sbb
push
repnz
adc
jae
mov
lcall
add
inc
lods
addb
mov
out
mov
jl
sti
push
sbb
push
ljmp
inc
ret
insl
cld
insb
and
push
dec
sbb
test
or
adc
or
cltd
add
and
cmc
mov
xchg
les
ds
mov
xchg
xchg
jge
fmull
insl
mov
shll
mov
sub
fstpt
jae
mov
xchg
mov
xchg
jle
mov
pop
in
in
dec
incl
jnp,pn
xchg
inc
xor
aam
ds
test
arpl
pop
cltd
ret
xor
mov
xor
outsl
into
repz
cmp
pop
imul
xchg
out
pop
loopne
pop
rorl
jp
imul
or
icebp
rorl
sbb
jno
mov
push
icebp
xchg
cli
mov
mov
pusha
or
popa
aam
bound
pop
clc
dec
pop
mov
sbb
je
enter
mov
loopne
dec
cltd
clc
pop
pop
mov
cmpsl
xchg
push
nop
lret
into
mov
test
add
imul
in
inc
ss
jle
les
mov
xchg
int3
push
pushf
jnp
sbb
pop
inc
cmpsb
xadd
aad
xchg
fs
xor
insl
mov
inc
pushf
mov
adc
cmc
inc
aas
je
mov
jmp
lret
sti
cmc
inc
push
inc
shll
add
sti
or
jb
xchg
jecxz
push
and
out
adc
loopne
push
addl
aam
xor
test
jno
flds
jge
and
pop
lock
push
out
fwait
dec
sarb
in
add
pop
in
pop
mov
pop
xchg
leave
lret
push
pop
cmc
in
mov
or
fisttpll
push
xchg
cmpsb
scas
xor
aad
hlt
push
add
mov
iret
nop
or
sbb
mov
fwait
test
enter
shrb
shll
fidivs
out
enter
cmp
dec
and
xchg
arpl
inc
push
imul
cs
add
in
pop
lods
inc
xchg
or
jnp
fdivrs
mov
dec
rclb
pop
jmp
or
outsl
ljmp
pusha
inc
jge
test
dec
pushf
shl
lds
jno
out
aad
or
inc
cmp
xchg
cmp
loopne
dec
xor
pop
jle
mov
sbb
arpl
jae
lret
push
ds
hlt
dec
jae
leave
cmpsb
ljmp
data16
adc
and
inc
sbb
mov
jge
pushf
jae
mov
dec
insb
mov
push
jbe
clc
aas
pop
test
mov
movsb
jbe
mov
adc
mov
js
adc
lahf
inc
add
cmp
in
js
jge
sbb
addb
addl
movsb
negl
add
inc
xchg
or
jge
movsb
nop
jnp
mov
rolb
jge
inc
jnp
sub
push
dec
imul
pop
wrmsr
lret
loop
data16
mov
fildl
mov
enter
jne
inc
push
inc
mov
pop
mov
sbb
lods
bound
pop
jge
inc
test
sbb
stos
cmp
and
stos
test
mov
mov
mov
cmp
cmpsl
pop
pop
sub
pop
jnp
jg
dec
dec
cwtl
cmpsb
adc
jb
inc
push
rcrb
scas
cmp
cltd
cmc
jnp
jnp
sbb
in
ret
sbb
bound
sbbl
mov
push
add
push
rcrl
dec
jge
cs
popf
adc
inc
loopne
and
cmp
fdiv
and
inc
ds
lods
addr16
lods
das
enter
divps
xchg
inc
pop
dec
imul
dec
add
inc
enter
loopne
adc
cmp
mov
jl
mov
ret
lods
inc
out
stos
sub
out
pushf
pop
xchg
mov
imul
enter
daa
jecxz
mov
mov
jnp
inc
in
imul
neg
repz
mov
adc
sub
push
int3
sbb
fcmovnu
and
sub
xor
push
adc
add
adc
sbb
lds
or
in
push
sbb
push
dec
xor
mov
mov
cs
scas
push
xchg
add
icebp
mov
or
pop
sbb
fs
or
icebp
adc
mov
out
jae
mov
js
stos
mov
rcl
add
push
jecxz
and
int3
imul
into
pop
jl
inc
xor
jle
push
inc
shrl
les
andb
push
cmp
lret
int3
imul
jb
push
inc
dec
and
in
mov
sub
shl
nop
and
dec
jne
push
int
insb
jge
orb
cmp
in
xchg
mov
jmp
jae
fdivrs
mov
push
clc
fmull
arpl
faddp
shl
int3
dec
out
push
es
out
push
adcb
sub
or
lds
ja
lock
cmp
lcall
mov
xor
iret
in
inc
sbb
in
stc
mov
jne
jle
cmc
daa
pop
jo
inc
xchg
cmc
pusha
lahf
jae
adc
and
idivb
iret
les
inc
mov
dec
dec
sub
cmc
dec
jb
dec
push
ret
dec
add
fcmovne
icebp
jae
inc
jb
lods
inc
sarb
js
stos
dec
test
ficomps
arpl
and
ret
dec
scas
jmp
out
aad
lcall
jae
or
loopne
xor
pushf
and
jnp
bound
or
inc
mov
adc
inc
outsl
or
pushf
out
mov
adc
mov
les
hlt
out
std
add
loopne
int
push
rclb
push
sete
fistl
push
je
movhps
mov
push
std
add
jmp
repnz
xchg
inc
pop
pushf
mov
jns
dec
inc
hlt
push
mov
push
jnp
sti
ds
add
mov
cld
aaa
mov
inc
scas
clc
pop
cltd
dec
imul
pop
mov
or
outsb
jae
enter
pop
testl
mov
in
ja
mov
cmc
add
and
adc
add
push
in
call
sarl
or
sub
cs
test
xor
scas
xchg
add
popl
xchg
dec
cli
loopne
adcb
lods
out
push
pop
popa
pusha
mov
mov
mov
outsb
cmpsl
mull
mov
scas
js
lods
jge
pop
adc
jmp
mov
add
outsb
popa
ss
notl
mov
cmp
xchg
push
leave
mov
add
adcl
mov
clc
mov
mov
in
mov
sub
dec
cli
mov
je
or
or
imul
cs
int3
push
sahf
pop
xor
movsb
adc
fstl
nop
mov
in
jp
stos
jmp
pushf
ljmp
inc
jne
jae
cmp
sbb
adc
movsl
cmp
insl
mov
fiaddl
in
out
push
mov
and
sub
jne
leave
or
mov
outsl
repz
inc
call
movsb
xchg
sarl
cmp
pop
fcoms
push
mov
gs
test
mov
inc
dec
cmp
xor
out
xchg
stc
add
ja
aas
jg
negl
jmp
shl
movsb
push
lahf
lret
jno
adc
mov
mov
cmp
xor
mov
xchg
add
jge
mov
insb
jne
sub
inc
mov
shl
sub
sbb
sub
dec
cld
stc
xor
inc
adc
jno
xchg
add
pop
insl
sbb
mov
mov
ss
int3
inc
add
or
adc
sbb
jl
rcrl
jl
int3
mov
sbb
dec
fistl
or
das
sbb
xchg
jmp
into
or
fdivs
jne
fwait
mov
push
jb
iret
mov
jae
lds
es
and
xor
jns
inc
and
adc
fmull
test
es
mov
jmp
sar
int3
pandn
jne
cmp
out
inc
js
push
aas
ja
daa
adc
psubq
insl
inc
decl
jo
mov
aas
imul
push
jne
inc
cmp
sub
dec
pop
inc
adc
in
sub
rcrl
mov
iret
adc
pop
fcom
movsl
push
jo
cmpb
xor
jge
pushf
outsl
ffree
mov
inc
fsubl
add
fwait
in
sbb
push
xor
dec
jnp
dec
inc
inc
les
mov
xor
pusha
push
stos
adc
push
sbb
dec
imul
xchg
jge
add
add
imul
add
cmp
xchg
das
aas
sbb
int3
adc
jmp
les
sbb
cmp
adc
adc
scas
mov
icebp
mov
adc
out
mov
cmpsb
adc
iret
test
sahf
pop
es
bound
stc
test
lcall
ss
iret
sbb
xchg
sub
rcrl
in
leave
rorb
inc
sub
add
jmp
sub
pusha
mov
mov
push
mov
dec
xchg
iret
adc
fdiv
pusha
jnp
mov
cltd
push
adc
aas
sub
xchg
jl
sti
popa
mov
adc
add
xor
aam
jae
add
and
test
lret
inc
arpl
lods
cmp
imul
outsl
jae
and
push
push
lahf
inc
rcr
xchg
push
jl
iret
std
mov
pop
xchg
divb
pop
cmp
arpl
lret
lahf
cmc
sbb
imul
pop
enter
popa
rcll
aad
stos
rcr
xlat
test
sub
vcvtpd2dqx
pop
lds
pop
jne
xor
push
xabort
push
dec
jno
xor
push
jecxz
inc
inc
mov
ljmp
cs
cmp
pusha
and
lods
outsl
lock
daa
sbb
outsl
pop
jmp
aas
setns
fistpll
inc
push
jge
adc
add
dec
lret
jno
shll
push
jno
das
mov
add
dec
dec
subb
sbb
sbb
xchg
jno
int3
adc
push
rcr
out
adc
arpl
mov
jnp
jo
incl
fdivrs
push
je
pop
mov
imul
cmp
inc
testl
inc
dec
ja
fimull
out
insb
mov
cmp
jbe
inc
int
sbb
inc
std
out
pushfw
jns
repz
push
push
jle
dec
adc
js
adc
mov
jnp
bound
in
push
lret
or
int3
add
sti
mov
hlt
mov
jns
scas
jmp
mov
mov
rclb
xor
gs
roll
jp
sar
pop
sub
cmp
fwait
test
repnz
mov
mov
xor
jbe
insl
mov
push
mov
in
pop
hlt
pop
cmp
jle
or
push
adc
insb
sbb
inc
xchg
adc
repz
shrl
inc
adc
jnp
arpl
dec
icebp
push
lods
jl
std
sti
aas
pop
inc
mov
cmpsl
outsb
pusha
mov
movsb
inc
pusha
cmp
push
inc
outsl
cmp
mov
cli
cmpsl
shrb
dec
pushf
push
push
rclb
mov
push
jecxz
dec
push
or
popa
xchg
sbb
push
icebp
add
lock
insb
dec
fucom
lret
mov
add
subb
fists
xchg
fimuls
dec
push
and
jbe
jns
inc
push
cmp
pop
mov
dec
movl
negl
xchg
enter
movsb
sub
jbe
and
cmp
shll
or
mov
call
mov
jle
repz
mov
cmp
push
mov
lods
and
rorb
std
mov
dec
lahf
fs
sub
pop
sbb
in
mov
add
call
jbe
je
int
cmp
adc
fsubrs
inc
sbb
fldt
and
cltd
inc
adc
or
sub
dec
push
adc
sarl
and
cmp
and
mov
push
jns
add
or
mov
push
inc
jge
repz
xor
ljmp
sub
cmp
mov
sbb
lret
cmpsb
jg
ror
push
cmpsl
mov
sub
and
std
jnp
sbb
iret
dec
inc
xor
int
sti
stos
imul
fstl
scas
lret
mov
jg
mov
in
lcall
push
fs
arpl
in
stc
push
or
loopne
jbe
xlat
lret
adc
roll
adc
int3
fists
aas
jg
push
or
fisttps
jg
popf
mov
sbb
mov
push
or
popf
iret
mov
jbe
arpl
jl
ret
push
cmp
cli
nop
ret
je
push
adc
or
hlt
je
shl
or
jb
jne
sub
or
inc
adc
cmp
xor
lcall
ret
add
int3
or
pop
imul
in
and
jns
add
shl
dec
jnp
aad
and
jmp
in
xor
iret
and
ret
xchg
insl
dec
movb
out
scas
inc
and
sbb
and
sti
push
call
test
mov
jg
into
leave
icebp
mov
lret
ret
and
add
outsb
cs
std
xor
jo
pop
cmovb
jb
and
jbe
lret
popa
sti
cltd
push
ss
mov
nop
inc
fs
sbb
stos
dec
fisubrl
dec
data16
xor
push
das
sti
cmp
push
fbstp
shrl
jmp
and
cmp
mov
popa
aam
hlt
movsl
adc
shrl
mov
pop
adc
sub
inc
jmp
dec
jbe
mov
into
in
adc
jno
jo
cmc
mov
adc
push
sub
cmpsb
clc
xchg
xor
or
das
dec
pop
lahf
or
add
scas
xor
lea
sbb
fdivrp
jbe
or
stos
sti
in
negl
mov
sub
jcxz
test
sbb
xor
lcall
ret
out
mov
sti
lea
inc
adc
xor
xchg
push
sarb
xchg
dec
mov
mov
pop
xchg
jmp
sub
lcall
sub
mov
loop
pusha
scas
dec
je
jnp
fbld
movsl
mov
mov
mov
dec
lahf
and
adc
sarb
fists
mov
sbb
bound
out
cmp
mov
mov
jbe
mov
xchg
ret
pusha
cli
push
fstpl
cmove
dec
insl
cmc
les
cmp
push
jns
xor
inc
mov
out
push
and
pop
fsin
jp
xor
shlb
orl
jge
jg
pop
xor
inc
mov
sti
ljmp
jle
cmp
lret
xlat
pop
adc
sub
aad
and
mov
pop
pop
add
mov
inc
test
cld
push
ds
inc
dec
mov
or
int
jle
hlt
adc
add
dec
jl
xchg
ss
sbb
or
in
and
jne
push
push
xchg
add
stos
mov
jbe
xor
orb
or
pop
mov
movsl
dec
out
push
mov
xor
mov
in
mov
rclb
dec
xor
push
jecxz
test
dec
jae
push
sbb
dec
inc
inc
xchg
andb
adc
pusha
push
adc
pop
mov
in
hlt
dec
jge
xchg
adc
pop
cmp
pop
pop
xchg
leave
dec
push
arpl
dec
xor
hlt
mov
test
jecxz
mov
shrb
test
and
ljmp
lahf
and
and
cmpsb
jbe
xor
xor
xor
shlb
scas
mov
pop
outsl
clc
jg
scas
mov
jno
cmp
fs
and
push
jnp
adc
xorl
fistpl
jg
jbe
sub
jle
cmp
add
cmp
jnp
les
pushf
jge
imul
pushf
mov
dec
nop
mov
dec
stc
inc
test
mov
cmp
push
jne
dec
ss
inc
pusha
pop
in
fcoml
dec
push
jo
lea
jbe
aas
add
jg
adc
arpl
ljmp
or
and
sbb
cmp
jnp
mov
es
das
ss
jae
xchg
stos
jno
sbbb
shrl
int
arpl
rcll
test
imul
sub
dec
mov
push
je
and
divl
push
stos
or
fscale
aad
push
enter
pop
mov
cwtl
adc
inc
or
or
sahf
sbb
jp
jl
cmp
cmp
dec
cmpb
or
mov
std
iret
lds
addr16
xchg
push
lahf
adc
mov
aas
rcrb
dec
data16
lahf
jb
pushf
mov
in
inc
hlt
pop
sar
sbb
aam
fdivrl
and
sub
xor
sarl
adc
sbb
fs
insb
inc
je
sarl
jl
int3
push
xchg
pop
aas
mov
pop
sarl
int3
xchg
xchg
repz
shrl
inc
adc
jae
push
sbb
imul
sarb
mov
mov
repnz
dec
inc
sbb
popf
jg
and
pop
scas
inc
add
pop
mov
dec
bound
pop
lret
dec
pop
xchg
jno
mov
lret
fcompl
lods
sbb
out
jo
xor
test
jbe
insb
and
inc
es
rcll
dec
sub
mov
mov
fwait
popf
fldenv
test
and
pshufw
or
xor
xor
inc
pushf
lret
mov
les
jbe
cmp
cmp
iret
dec
push
jae
andb
inc
or
pop
in
ret
cmp
popa
fidivs
ffree
out
lock
mov
jle
ljmp
dec
in
push
push
cmc
inc
ficoms
jle
es
notl
ret
push
inc
int
mov
nop
ljmp
testl
out
stos
pop
pop
sti
scas
pcmpeqd
sub
xor
aaa
sbb
lahf
fisubrs
lret
pop
aaa
jmp
aaa
xlat
adc
cmp
jmp
adc
call
jne
std
push
shll
jae
mov
jbe
in
and
rcll
lcall
xchg
mov
push
cmp
jno
cmp
insl
inc
out
pushf
lret
leave
inc
xchg
mov
imul
sub
pop
arpl
push
divb
add
pop
mov
lods
in
mov
js
hlt
repz
mov
or
dec
adcb
cld
orb
xor
insl
sbb
push
setle
icebp
aam
dec
mov
or
icebp
shlb
sub
adc
outsl
or
inc
add
xlat
or
jmp
insl
sbb
or
mov
dec
je
popa
jnp
jne
rolb
pop
ret
frstor
inc
jle
and
ficompl
mov
lret
cmp
xchg
pop
pop
xchg
mov
xchg
js
lods
mov
jne
stos
jge
dec
pop
aam
lahf
dec
cmp
xlat
je
insb
jge
dec
sbb
adc
or
add
cmp
fbstp
addr16
outsb
jb
imul
xlat
aam
int3
jge
dec
cld
aam
lahf
in
jno
mov
pop
mov
insb
leave
adc
adc
rcrl
mov
xchg
xchg
pop
aam
pop
mov
test
rcrl
icebp
pop
pop
popa
sub
dec
mov
lahf
movsb
stos
jge
inc
jle
pushf
cltd
push
jns
push
popa
lds
out
xlat
adcl
jae
jne
stos
aam
lahf
pop
cmp
xlat
inc
adc
dec
insb
aam
lahf
sbb
adc
or
xlat
add
cmp
xor
sub
and
fdivrl
xlat
les
cld
jge
dec
in
stc
sarb
daa
jnp
dec
push
out
call
pop
aas
xor
mov
fisubl
rcrb
inc
out
sub
iret
inc
pop
fdivrp
jl
je
sub
cltd
inc
and
je
add
mov
outsl
dec
outsl
xchg
inc
fmulp
push
jl
mov
flds
cmp
imul
sbb
xor
aam
imul
ret
test
shrl
xor
pop
aam
inc
dec
lahf
jae
jg
mov
push
jmp
lret
aas
sub
stos
dec
push
repnz
jnp
outsl
push
jg
in
nop
inc
add
std
ret
inc
inc
mov
jmp
cmc
jge
cmpsl
int3
cmpsl
lret
insb
rorl
jmp
repnz
jno
shrl
cmp
jecxz
sub
pop
lahf
cmp
insl
mov
adc
fsubs
push
mov
inc
cs
jbe
push
sti
xor
jmp
lods
sbb
xlat
repnz
sub
dec
ja
fistps
call
aam
adc
adc
mov
fnstcw
ret
add
mov
mov
adc
sbb
push
pushf
insl
xor
sub
cmp
and
out
inc
call
int
and
outsb
sbb
dec
jmp
aam
cltd
fistpl
push
lds
xor
clc
xchg
jmp
pop
inc
std
or
cmpsb
add
repnz
repz
cmc
xchg
fisttpll
or
push
or
cs
into
jb
test
dec
lret
fnstcw
add
lds
out
or
xlat
shrl
cltd
rcrb
shlb
je
push
mov
fnstcw
addr16
cmp
add
mov
fs
negb
pop
lahf
push
and
lret
dec
fists
sub
pusha
push
inc
into
in
les
jae
adc
pusha
insb
aas
dec
lea
push
sbb
push
cmp
sti
cld
jnp
or
ja
mov
std
add
mov
xor
sti
jge
mov
push
mov
mov
loope
jbe
xchg
lcall
cmp
stc
mov
sbb
add
xchg
adc
mov
or
xchg
rcrl
test
push
std
jnp
or
aad
add
loopne
mov
lods
jnp
pop
daa
pop
in
jmp
sahf
enter
mov
test
push
push
add
add
in
std
sub
mov
dec
add
xor
sbb
out
jb
std
xor
sub
cmp
jne
mov
cmc
sbb
cmpsl
sbb
out
mov
iret
mov
mov
lret
push
cmp
jae
lret
mov
imul
stos
xchg
sub
aad
xchg
or
xor
scas
mov
int3
xor
in
clc
aad
xlat
add
sbbl
mov
std
inc
shrl
repz
call
aad
mov
mov
add
in
stos
aam
cld
and
pusha
mov
dec
sahf
cmp
int3
add
cmpsb
sbb
movsl
mov
outsb
call
sbb
repnz
cmp
into
lods
cmc
lea
insb
or
push
lods
mov
sub
push
dec
cmc
fmull
stos
and
xor
cmp
lds
jnp
inc
pushf
movsl
out
cld
test
pushf
sbb
push
outsb
inc
ret
outsb
aam
decl
push
jno
mov
scas
push
or
push
mov
std
jmp
fdivrl
jmp
fimull
adcb
pushf
cmc
mov
xor
push
fnstcw
or
in
lods
repz
add
lahf
fscale
jnp
sub
cmc
mov
lret
and
dec
inc
cld
sti
pop
std
pop
std
push
fwait
out
loope
inc
xor
aaa
pushf
lret
sbb
shl
aam
repz
mov
mull
mov
inc
repnz
mov
scas
push
push
cltd
sub
mov
test
adc
xor
invd
lock
pushf
and
push
fsubrs
pop
testl
sbb
push
mov
mov
mov
mov
sbb
nop
int3
sbbl
out
out
cmpsl
inc
lret
jbe
cmc
into
loopne
std
inc
jno
xorl
and
or
push
std
imul
movl
ret
push
iret
lahf
mov
inc
repnz
pop
in
xchg
dec
inc
cmp
in
aas
stc
mov
inc
jnp
inc
mov
fs
mov
dec
jmp
insl
repnz
fcomi
xor
inc
imul
dec
mov
jae
mov
mov
movsb
xor
insl
lret
nop
int3
pop
xchg
xorl
jnp
stos
rol
popf
movb
or
clc
or
pusha
aas
call
cwtl
cmp
xchg
out
ficoms
aam
jno
sub
mov
pop
pop
inc
sti
pusha
in
loop
mov
dec
sti
call
mov
mov
xchg
aam
aad
loop
add
pop
sub
add
pop
sub
jmp
jle
cmc
mov
mov
aaa
adc
push
in
jns
je
fldl
stos
push
jmp
and
push
jge
lret
add
icebp
push
sbb
pop
xor
lret
adc
jne
pop
vdivps
dec
jecxz
dec
dec
incl
roll
add
in
rolb
leave
mov
or
lret
adc
rcll
daa
sti
sbb
imul
fldcw
pushf
icebp
mov
fistpll
ret
movsl
xchg
scas
jnp
outsl
pop
cmp
mov
shlb
loope
mov
sub
and
fs
dec
insl
push
push
xor
pop
add
push
cmpsl
ficoms
inc
pop
jo
inc
xor
xchg
gs
into
into
pushf
and
pop
push
adc
test
in
std
in
adc
out
or
pusha
jo
xor
xchg
pushf
or
dec
sar
int3
hlt
lods
in
inc
jnp
pop
fstpl
into
das
les
sbb
in
dec
push
jle
xchg
std
lahf
adc
std
mov
and
in
dec
fcomi
ret
inc
cmp
and
and
pushf
cmp
or
mov
es
mov
lret
test
push
shl
setae
mov
xor
ds
push
xchg
mov
dec
jmp
jmp
push
add
arpl
test
and
dec
jl
sahf
cmp
dec
pop
int
cmpb
add
inc
rcrb
insb
inc
add
fcoml
cmp
in
negl
pop
sti
adc
jne
jmp
xlat
gs
repnz
mov
int3
jmp
aam
das
inc
subl
jae
cmp
gs
sbb
adc
and
cld
sub
shr
inc
out
dec
cmpsl
lcall
inc
inc
jmp
in
push
sub
or
lcall
or
jp
ljmp
lds
cld
push
push
push
xchg
and
dec
push
das
sub
adc
dec
int3
fidivs
cmp
ret
dec
ljmp
jnp
push
decl
fwait
push
sbb
sub
popa
and
rcrl
in
and
jbe
lock
in
int3
adc
inc
lahf
jns
xchg
iret
xchg
sub
bound
inc
lret
ret
jns
xor
mov
lret
add
pop
in
insb
and
test
xchg
sti
andb
add
sub
orl
adc
xchg
std
js
adc
lret
mov
scas
mov
xchg
aad
and
aad
lods
mov
mov
jnp
in
push
dec
fdiv
cmp
sub
into
mov
mov
mov
imul
lret
cltd
mov
lret
scas
stos
or
push
inc
cmc
mov
addb
cmpsb
inc
push
mov
jnp
dec
pushf
mov
mov
das
mov
fistl
sub
mov
push
cli
mov
std
inc
inc
fnstenv
cld
cmp
and
jp
aas
cmp
cmpsb
int
fldcw
adc
xchg
xlat
pushf
sbb
push
add
dec
or
mov
pop
mov
nop
scas
test
inc
cmpsb
mov
sbb
and
mov
mov
adcb
hlt
jne
rolb
mulb
pop
fdivs
fildll
int3
loopne
lods
adc
add
sbb
xchg
iret
push
sahf
das
fimull
pop
xchg
lods
jle
push
pop
add
or
cltd
jmp
movsl
sub
sbb
pop
dec
push
sbb
jnp
fiadds
icebp
cmp
lret
pop
dec
or
dec
ljmp
sub
xor
cli
das
and
stos
inc
mov
jl
xchg
fcmovbe
mov
in
xor
out
roll
pushf
outsb
lretw
out
cltd
iret
jnp
lahf
lds
ret
jne
sahf
out
push
sub
sbb
call
mov
fdivl
sub
fdivrs
dec
jns
push
cmp
dec
insb
test
inc
aam
leave
cli
movsl
pop
arpl
int3
call
push
addr16
sbb
in
call
in
rcll
loop
sbb
js
pop
icebp
fisubs
mov
cmp
mov
sub
sbb
nop
adc
push
fisttpll
cltd
push
inc
xchg
mov
iret
ret
dec
sbb
aam
inc
xchg
jl
sub
inc
jae
je
sbb
sub
xchg
add
int3
and
sbb
notl
dec
mov
xchg
int3
dec
pop
lods
xor
xorl
or
lds
mov
mov
jae
je
dec
imul
je
out
mov
into
andb
js
leave
adc
jle
jo
mov
lock
jg
pop
mov
sbb
ds
jl
int3
and
jl
and
fldt
dec
dec
mov
in
fsubl
jecxz
sub
js
pop
ret
movsl
sub
fdivrs
cmp
and
adc
fidivrs
push
xchg
call
pop
hlt
ror
in
fists
and
inc
into
test
int3
iret
repz
testl
inc
cmp
cmp
mov
iret
lahf
push
jo
je
lods
pop
inc
mov
cmp
shlb
mov
and
push
push
add
sbb
jo
xor
incb
jbe
popa
or
fimuls
jnp
inc
sub
loopne
mov
js
addl
push
iret
lods
movb
sbb
jo
xor
xor
loope
test
shl
lock
adc
push
aad
pop
je
out
jecxz
mov
dec
outsb
leave
iret
in
addl
imul
dec
and
dec
mov
pop
push
and
pop
aaa
push
sbb
int
xchg
icebp
inc
ja
iret
lret
dec
shrb
mov
jge
and
xchg
mov
inc
cwtl
out
dec
or
cmpsb
or
and
scas
push
in
add
push
sarb
iret
xchg
and
jl
call
jl
sub
cmp
adc
aad
bound
push
push
pop
pushf
decl
jnp
xor
ss
incl
int3
inc
in
xchg
and
sub
sbb
sbb
sahf
sbb
jns
add
pop
movsl
push
fisttpll
cmp
iret
or
fsubr
sub
or
in
je
lods
xlat
push
dec
lret
in
fistps
cmp
int3
jecxz
jl
and
ret
stos
jo
pop
xchg
mov
out
cmp
rcrb
cmp
sub
subb
imul
and
pop
pop
div
rcr
jo
icebp
jecxz
inc
mov
je
mov
inc
cmp
jne
xchg
test
push
jl
or
out
clc
inc
lret
dec
sub
jbe
pop
lea
or
xor
enter
addr16
out
dec
mov
lret
iret
jmp
jecxz
inc
sbb
iret
int3
mov
pop
push
cmpsb
jo
pop
sub
fs
xchg
out
add
jle
add
mov
fisttpll
repz
sbb
out
and
imul
mov
jmp
pop
cmpsb
add
test
push
xor
je
cmp
mov
pop
push
ficomps
out
loopne
jmp
mov
push
iret
lods
inc
sbbb
cmp
iret
ret
cmp
test
dec
mov
sub
fwait
and
inc
push
mov
sub
push
out
mov
push
push
inc
jnp
and
popf
jne
inc
sub
fdivs
pop
mov
jecxz
nop
and
xlat
aas
rolb
in
adc
push
out
mov
out
add
testl
cmp
dec
repnz
add
sub
fimuls
dec
jl
and
lret
insb
jo
outsb
int3
mov
add
sti
cmp
andb
push
or
jne
sub
fcomps
addr16
sysret
js
cmp
push
adcl
lods
nop
inc
pusha
mov
sahf
inc
add
int3
stos
mov
or
sub
data16
mov
lcall
je
jno
sub
xchg
dec
clc
mov
iret
rclb
pop
test
xchg
in
fisttps
and
jne
pop
icebp
mov
je
fcoms
sbb
or
mov
int3
add
das
out
stc
lock
or
sahf
pushf
jmp
pop
ror
push
mov
sub
fdiv
mov
jl
and
cltd
mov
iret
jmp
aas
sub
pop
lret
fisttps
ficomps
loopne
scas
inc
clc
jnp
xor
dec
mov
mov
fdivl
into
mov
data16
inc
iret
and
push
shlb
lcall
ds
test
push
sti
mov
iret
xchg
mov
je
mov
inc
mov
iret
sbb
mov
dec
dec
sub
push
test
lods
mov
ret
scas
mov
pop
push
sbb
and
adc
imul
iret
xchg
xor
jmp
dec
jns
sub
iret
shlb
dec
inc
inc
adc
lock
shrl
out
enter
out
pop
jb
or
je
sbb
inc
cwtl
das
push
fwait
iret
jmp
movsl
mov
xor
mov
mov
pop
mov
sbb
pushf
mov
mov
inc
push
out
mov
rolb
push
dec
int3
lods
insb
iret
iret
shrb
fs
adc
cs
movsb
test
cs
or
and
je
push
xor
mov
xchg
and
in
xor
xchg
dec
dec
jne
dec
iret
iret
shlb
ja
pop
jno
subl
push
sub
push
cmc
mov
push
out
lret
pusha
jmp
push
xor
mov
mov
cmpl
xchg
pop
out
loop
or
jae
inc
and
sbb
inc
jl
and
iret
xchg
xchg
pop
inc
mov
lcall
xchg
xlat
inc
push
xor
cmpsb
and
loope
bound
push
out
xchg
xlat
cld
je
mov
dec
sbb
iret
sarb
or
dec
jecxz
dec
cmp
jecxz
sub
lods
xor
sbb
push
aam
daa
jns
push
inc
sub
insb
push
mov
call
pop
rorl
mov
jl
fxch
push
sti
rorb
out
xchg
cs
cwtl
rclb
jmp
mov
pop
pop
roll
aam
and
inc
lds
push
dec
lahf
mov
and
inc
loopne
mov
in
int3
pop
and
loope
bound
popf
xchg
or
es
sahf
cmpb
xor
es
je
popf
iret
inc
test
push
sub
adc
fildll
adc
iret
testl
mov
sub
and
adc
pop
aad
add
shrb
je
or
adc
int3
cli
jecxz
mov
sub
sbb
daa
rorb
inc
mov
in
mov
adc
aad
add
int3
scas
jecxz
mov
xlat
pop
and
arpl
out
sbb
xchg
jno
add
xchg
push
je
adc
push
fwait
mov
dec
jbe
mov
mov
stos
xor
in
nop
inc
mov
cmp
sbb
inc
dec
out
cli
aam
fisubl
sti
and
adc
push
shrl
inc
pop
call
adc
inc
cli
push
push
scas
jns
mov
out
repnz
pop
or
fldenv
and
neg
pop
jae
lock
jp
or
out
pushf
mov
inc
or
out
push
push
push
mov
mov
loope
sahf
mov
rcr
xlat
fbstp
push
into
mov
hlt
dec
bound
sbb
ret
in
inc
mov
jmp
lcall
push
xchg
add
xchg
pusha
movl
push
popf
mov
cmp
je
iret
cmp
ja
and
push
iret
lods
add
je
inc
nopl
pop
repz
sbb
xor
call
sbb
lods
fwait
shll
push
mov
pop
loopne
cmpl
xchg
cmp
ret
mov
mov
je
je
sbb
mov
je
jmp
mov
jl
mov
push
iret
lods
mov
pop
negl
ret
push
cmp
cs
mov
movsb
aaa
xlat
push
push
and
in
push
fdivp
insl
mov
xlat
mov
iret
int3
adc
adc
shr
mov
lret
loopne
xor
in
test
stos
sub
loope
and
cld
imul
adc
neg
push
dec
xchg
and
inc
out
sahf
popf
cli
add
lock
sarl
inc
jae
iret
cmp
jge
jl
and
imul
push
sub
cmpsl
xchg
and
movsb
add
loopne
push
or
push
repz
jl
and
sub
fwait
add
int3
out
sub
cli
movsb
and
push
shlb
ja
push
mov
je
je
ljmp
and
sub
dec
sbb
iret
int3
mov
add
lahf
sbb
imul
jecxz
pop
test
stos
out
jmp
stos
outsl
iret
jmp
pop
push
imul
adc
inc
test
fs
stos
or
ss
xor
dec
loopne
cmc
fisttpll
xor
iret
or
ss
test
aam
iret
lods
inc
cli
xorb
xor
int3
jecxz
inc
fsts
adc
outsl
jb
stos
popa
rcll
or
ret
call
mov
iret
int3
mov
jl
jge
mov
lahf
pop
mov
dec
xchg
fcmovnb
je
mov
jg
orl
push
out
stos
inc
je
add
jecxz
and
push
fmull
fmull
mov
xchg
lahf
test
mulb
hlt
push
xchg
sub
mov
je
ds
rolb
mov
iret
out
xor
insb
and
xor
incl
rclb
pop
push
ficoms
outsl
ja
adc
jns
pop
xchg
insb
sbb
fists
cli
push
call
sbbb
push
iret
lods
add
adc
addr16
test
push
mov
push
ror
les
pop
dec
pushf
cmp
in
and
insb
push
shrl
xchg
in
loop
mov
aad
mov
movb
in
in
call
out
iret
pushf
adc
imul
in
mov
shll
rolb
jmp
jmp
fimuls
and
and
sub
xchg
sarb
jge
add
and
xchg
mov
pop
jmp
xor
lret
iret
and
push
fmull
dec
jl
and
mov
cmp
ja
xchg
adc
popl
mov
pushf
rorb
je
jno
inc
das
pusha
sub
push
xor
pop
iret
and
push
into
jns
push
or
inc
stc
adc
and
sub
cmpsb
push
je
subl
inc
dec
mov
dec
dec
push
stc
and
iret
lods
cmp
or
or
and
mov
xor
add
loopne
sbb
sti
cmpl
daa
pop
sbb
and
filds
iret
adc
sbb
je
push
sub
test
and
rclb
and
add
inc
jnp
and
mov
repnz
mov
pop
testl
test
push
push
xchg
shrl
fisttpll
repz
inc
push
je
rorl
xor
add
and
push
lret
mov
int3
mov
jmp
dec
sbb
or
int3
lods
push
xchg
push
sbb
adc
dec
aad
pop
je
or
pop
inc
or
lods
mov
iret
rolb
jmp
jb
hlt
jp
and
push
ret
dec
stos
inc
pop
sub
push
xchg
pop
lods
cs
je
sub
sarb
das
ja
xor
iret
lods
ret
mov
push
fisubrs
adc
fdivrs
jl
roll
test
mov
fmul
iret
mov
inc
pop
pop
hlt
or
cld
iret
iret
shrb
sbbb
dec
push
leave
cmpsl
js
mov
pusha
mov
stos
stos
loopne
clc
mov
cld
imul
jmp
pop
fs
fistps
mov
inc
or
jp
inc
sbb
iret
sbb
mov
stc
test
je
mov
les
cmp
stos
gs
fcmovnu
dec
lea
ja
mov
or
mov
je
je
imul
outsb
mov
jmp
iret
and
push
fimuls
jp
and
push
mov
js
mov
xchg
jnp
int3
test
js
call
aam
sahf
ja
inc
fidivrs
or
lret
push
js
push
inc
jae
iret
cmp
test
test
or
mov
iret
adc
std
mov
outsl
je
jl
and
or
mov
cmp
sub
loope
and
pushf
loope
push
pusha
mov
xchg
jg
pushf
je
xchg
ds
cld
pop
int
dec
dec
test
jl
cs
sbb
pusha
inc
inc
jnp
sub
je
sub
iret
test
aam
int3
daa
insl
dec
dec
orb
je
mov
call
sbb
iret
sarb
mov
cmp
add
and
ds
cld
xor
inc
sub
mov
cld
cmpsb
int3
inc
fisttpl
dec
je
je
jnp
into
add
das
scas
push
mov
iret
jmp
adc
fistps
adc
cs
mov
adcl
out
push
inc
fadd
or
stos
iret
lcall
mov
imul
jl
sbb
adc
push
aad
bound
push
rorb
dec
mov
inc
xor
mov
je
xor
and
outsb
sti
cld
testl
iret
and
or
mov
xchg
lods
mov
out
test
push
je
mov
cmp
xor
mov
mov
xor
rclb
loopne
pop
cmp
or
cmp
sub
sbb
sbb
mov
or
dec
and
jecxz
xchg
or
adc
or
sub
loope
bound
mov
or
lret
je
shrb
das
or
cwtl
in
push
jmp
jmp
sti
push
xlat
not
or
jl
sub
mov
jl
cmpb
ss
xchg
ds
push
testl
ss
jmp
dec
popf
dec
fs
iret
shrb
je
fs
push
mov
out
into
adc
subl
inc
mov
scas
xor
push
je
hlt
inc
pop
decl
test
dec
loop,pn
fistps
ret
mov
ret
cmp
mov
pop
dec
mov
nop
jns
sbb
lods
push
iret
lods
rclb
push
and
push
inc
and
loopne
outsl
ja
push
mov
push
mov
dec
scas
mov
jo
in
or
testl
pushf
decb
iret
iret
rcr
pop
stos
push
adc
push
iret
lods
movb
dec
ret
lods
sub
push
sbb
and
push
push
sti
inc
inc
out
imul
cmp
lcall
je
mov
push
das
pop
ja
les
jnp
iret
shlb
dec
mov
and
lods
scas
inc
lret
dec
lods
insb
inc
inc
movsb
imul
ja
push
mov
dec
sbb
repnz
pop
je
ss
data16
and
cs
pop
dec
sar
pop
int3
aam
or
sub
jp
rcr
iret
inc
lret
stc
pusha
out
cmpsl
scas
imul
cmp
scas
aad
add
int3
cli
out
cmp
push
push
adc
lods
sub
je
jns
jnp
xor
adc
push
scas
mov
iret
rclb
push
aaa
fisttps
test
dec
in
xchg
add
fildll
jge
and
lahf
fmulp
imul
cmpsl
scas
jne
xchg
ret
cmc
mov
iret
and
push
into
pop
dec
mov
mov
adc
call
and
jecxz
scas
push
int3
je
or
xor
call
cs
cli
sti
and
xlat
pop
int3
jl
bound
dec
fdivr
repz
jb
nop
out
lock
or
pushf
mov
call
mov
mov
sbbl
jmp
out
dec
cmp
push
les
xchg
jnp
cld
xchg
mov
in
and
cld
and
flds
iret
xchg
clc
cmp
mov
lods
iret
iret
shl
pop
stos
push
and
add
mov
mov
dec
jnp
xchg
lahf
cld
stos
xlat
sub
mov
inc
jae
iret
cmp
incb
or
xchg
add
pop
in
add
div
jecxz
ja
cmp
aam
in
loopne
mov
cmpsl
mov
jmp
mov
ss
jae
iret
cmp
push
je
jns
fwait
ret
mov
and
lods
xchg
adcl
add
pushf
arpl
inc
jns
stos
iret
out
and
or
mov
mov
jl
cs
mov
xlat
repnz
mov
repz
fbstp
jmp
pop
and
xlat
call
ss
les
loop
cmovb
pop
lahf
aam
xchg
inc
sahf
mov
jns
sbb
je
xchg
js
test
push
iret
stos
or
js
jecxz
xchg
cmp
xchg
xchg
sti
shlb
mov
repnz
je
lods
mov
hlt
in
mov
data16
push
movsb
je
je
call
inc
mov
sti
in
adc
aad
add
int3
loop
inc
mov
rcrl
mov
sbb
mov
sbb
je
sarb
je
mov
enter
je
and
cmp
mov
push
out
mov
push
mov
addr16
iret
and
push
sahf
jb
push
fisubrs
mov
or
and
mov
mov
pop
cmpsb
push
and
adc
sub
dec
jno
jo
inc
shll
mov
aaa
jmp
ficoms
mov
cmpsl
dec
iret
sar
subb
cmpsb
je
lods
add
and
dec
iret
loopne
js
out
xchg
int3
je
xchg
push
enter
inc
loop
lea
int3
iret
jecxz
sbb
lahf
push
clc
jne
mov
int3
add
mov
adc
andl
mov
pop
inc
jae
iret
cmp
pop
xor
push
push
sbb
cmpsb
and
ds
gs
sbb
ljmp
pop
fistl
iret
mov
dec
inc
cmp
sti
iret
iret
rorb
adc
inc
leave
xchg
ds
xchg
push
xchg
scas
push
je
divb
inc
inc
and
mov
add
push
iret
and
push
into
pop
sti
adcb
je
dec
je
mov
jno
sbb
mov
test
push
iret
shl
adc
hlt
push
cmp
in
call
xlat
outsb
shlb
jmp
xchg
aad
mov
pop
dec
nop
out
divb
inc
xor
pop
sbb
nop
lret
je
jl
sub
arpl
dec
jnp
rclb
pop
inc
out
sbb
push
iret
lods
rolb
into
loopne
adc
mov
insl
xor
imul
les
cmp
mov
pushf
jl
int3
mov
mov
cmc
jge
and
jp
adc
mov
mov
ljmp
aad
fs
ror
mov
addr16
push
or
imul
push
roll
sbb
push
sbbl
insl
cmp
dec
jns
jae
or
ret
inc
cmpsb
fldt
jmp
inc
hlt
das
sub
insb
jmp
inc
cmovne
push
fmull
mov
aaa
xlat
orl
push
dec
dec
mov
lods
fildll
icebp
dec
subl
jbe
jnp
mov
push
push
aaa
clc
div
fistps
cmp
adc
scas
ljmp
and
stc
adc
pop
inc
insl
cmpsl
inc
jae
cmp
rclb
pop
loop
faddp
fs
adc
add
fistpll
mov
sub
jmp
push
push
mov
sub
inc
jne
arpl
mov
lods
icebp
xchg
and
sbb
cmp
movsl
int3
hlt
stc
popl
fists
or
notl
adc
iret
jb
push
push
jecxz
or
add
stos
lret
xor
je
jg
mov
enter
nop
rcrb
dec
xchg
add
mov
sub
addb
jno
or
lcall
cmc
jecxz
das
lods
mov
cmp
cmp
rcr
push
lret
sti
fcmovnbe
in
pop
mov
and
mov
iret
push
push
mov
mov
and
mov
je
adcb
jmp
pop
pop
adc
fxch
jl
icebp
mov
mov
mov
adcb
xor
inc
dec
jbe
push
mov
or
push
loopne
fiadds
bound
sarb
aam
mov
cmp
push
mov
cmp
sarb
adc
neg
push
xor
mov
fidivrl
stos
adc
push
push
and
aaa
dec
add
cmpsl
mov
iret
cmp
inc
inc
xor
add
mull
sbb
fs
sbb
xor
inc
jbe
mov
ret
cmpsb
std
jg
decl
or
insb
pop
dec
jb
and
jmp
ror
sbb
sub
cld
lock
mov
mov
or
flds
inc
mov
xor
mov
js
pop
loope
pop
jo
push
cmp
iret
sub
iret
dec
inc
xor
nop
lods
gs
shrl
dec
push
mov
repz
sub
or
xchg
jae
pop
mov
addl
cld
push
call
xlat
lea
int3
xor
pop
ljmp
mov
inc
mov
jge
les
dec
ljmp
mov
int3
ljmp
lret
adc
out
fcomps
push
aam
inc
sarb
loopne
fidivrs
scas
cmp
loope
and
adc
and
les
jmp
dec
jge
std
int
ret
adc
jno
xchg
push
jbe
iret
or
jle
or
cltd
jg
adc
or
mov
sbb
push
add
push
xchg
roll
pop
jbe
test
mov
add
xchg
test
rcl
push
andb
mov
mov
mov
decl
and
or
sub
dec
ja
sti
mov
mov
sub
ficomps
in
mov
or
pop
inc
fwait
adc
jp
out
mov
add
shl
jmp
mov
sbb
pop
xchg
insl
in
rolb
push
sahf
xor
clc
pop
not
jns
inc
gs
loop,pn
repz
and
rclb
mov
dec
fwait
xchg
jns
fmull
push
mov
xor
add
xor
fstps
pop
pop
sti
dec
rcpps
lods
ficompl
and
ja
push
stos
xchg
or
fisttps
mov
negl
je
iret
mov
push
in
aad
fs
inc
cli
mov
loop
clc
out
add
xchg
or
push
lret
jbe
das
or
nop
dec
test
in
xchg
int
xchg
push
add
pop
inc
bound
jmp
jb
out
dec
and
flds
enter
pusha
repnz
testl
insb
jge
add
scas
jo
jns
sbb
lret
inc
je
sub
adc
outsl
movsl
jbe
into
ljmp
cmc
xchg
lods
jge
push
cmp
mov
cmpb
push
lret
cmp
mov
std
btr
mov
hlt
xor
jmp
idivb
mov
sub
add
jl
js
mov
pushf
outsl
mov
mov
pop
cmp
lods
mov
ffreep
sbb
push
push
sbb
cmc
lret
or
sbb
ljmp
ds
dec
xor
je
dec
mov
pop
cs
in
push
push
insb
popf
movsw
or
insb
cmp
sbb
in
repz
in
lods
cs
lret
je
inc
clc
cmc
out
lcall
ja
fidivrs
jb
in
jl
in
lahf
test
nop
add
ja
test
adc
pop
test
fisttpl
mov
mov
push
aam
push
dec
into
inc
mov
pop
add
xchg
ss
xorl
iret
sbbl
lcall
mov
inc
movsl
mov
data16
clc
nop
rorl
jg
repnz
lcall
pop
cmp
and
ret
adc
lods
jns
repnz
inc
jl
or
xchg
shll
stc
jmp
dec
sbb
lock
push
mov
mov
stc
ja
sub
les
mov
fwait
jl
movsb
sub
adc
adcl
jae
inc
mov
ficomps
dec
daa
jno
dec
std
push
or
push
jae
and
jne
dec
jae
push
sbb
inc
outsl
dec
or
iret
push
les
lcall
hlt
mov
jg
cmp
jo
mov
adc
fildll
lret
push
lds
fimuls
mov
loopne
std
inc
jne
shll
icebp
rorl
pop
dec
sti
dec
inc
and
xchg
push
inc
push
loopne
pop
rcll
inc
mov
fisttps
aam
mov
fcoml
cmpsl
push
jae
cmpsl
or
jne
or
inc
jnp
jnp
dec
shlb
rcl
dec
fwait
xor
adc
fs
sbb
pop
push
cmpb
adcb
ja
mov
clc
addr16
and
pop
jns
test
push
sbb
not
jg
imul
std
loope
add
inc
pop
push
xchg
loopne
psubq
adc
inc
jg
movsl
jl
nop
dec
js
jecxz
sbb
fcompl
and
inc
popl
sbb
push
jne
xor
incl
push
jno
mov
push
sti
es
mov
mov
push
add
mov
jbe
test
in
pop
and
and
add
jge
dec
jnp
frstor
test
dec
je
and
mov
call
push
iret
pop
jecxz
inc
cld
add
cmpsl
cmp
adc
add
pop
fistpll
into
rorl
aad
push
inc
or
push
fnstsw
pop
add
ret
pusha
mov
in
jnp
movsb
daa
out
dec
sbb
jmp
fadds
aam
mov
paddusw
cmc
dec
sbb
hlt
fistl
test
sbb
inc
iret
sbb
jecxz
mov
loop
add
pop
and
in
mov
sub
xlat
rcrl
in
stc
inc
adc
sbb
cmc
push
ret
or
test
cmc
mov
orb
push
push
cmp
out
sbb
test
dec
fwait
sbb
cmp
pop
jno
out
sub
clc
push
popa
pop
push
cld
pop
xor
mov
pop
loop
push
push
out
inc
add
inc
in
jl
rcrl
mov
mov
sbb
sub
addr16
cli
sbb
stos
push
cmp
repnz
sti
movsl
mov
push
jno
add
inc
add
adc
mov
aaa
stc
inc
cmp
aad
xchg
cwtl
or
test
and
pop
cwtl
test
xchg
mov
cmc
in
and
or
movsb
out
mov
shlb
sub
scas
sub
adc
or
fmull
push
sbb
in
cmp
aam
outsl
fsincos
sbb
push
push
inc
ss
or
stos
mov
push
push
sbb
lods
lea
add
push
fistl
arpl
xlat
pop
dec
fbstp
mov
mov
jge
jg
mov
adc
xchg
dec
and
jmp
and
fs
in
mov
icebp
mov
jae
pop
xchg
rclb
addr16
inc
out
insl
push
xor
movsb
dec
out
mov
hlt
pop
add
sub
dec
mov
xchg
mov
push
inc
jb
int3
sbb
push
repz
adc
int
sar
dec
dec
std
cmpsb
xchg
sbbb
xchg
ret
cmc
mov
das
je
inc
dec
ja
cmpsl
jo
sbb
stos
mov
dec
mov
dec
cmp
mov
sbb
outsl
jl
sarl
jb
shlb
jge
inc
mov
mov
int
aas
adcl
mov
mov
lret
pop
cmp
fsubrl
inc
mov
sub
sbb
imul
jecxz
inc
mov
mov
jne
add
pop
adc
loopne
pop
dec
test
jno
inc
popw
dec
arpl
rdpmc
dec
fistpll
adc
push
push
pop
pop
jge
jo
adc
and
cld
pop
in
test
fnstsw
xor
push
pop
insl
adc
sub
les
sbb
js
insl
pusha
shll
int3
dec
sub
int3
pop
clc
rcll
dec
movsb
int3
insl
icebp
inc
dec
sbb
int3
dec
add
or
sbb
jge
dec
mov
push
pop
adc
sub
dec
aam
enter
call
insb
jnp
jg
pop
jge
jge
aas
and
adc
pop
push
shll
sub
adc
jnp
push
pop
psrlq
xlat
dec
out
jg
adc
jl
jo
or
aam
dec
lret
mov
jg
pop
inc
and
mov
dec
pop
xchg
cltd
or
les
insl
out
dec
xchg
pop
dec
shll
sub
push
dec
add
or
in
nop
lret
mov
adc
outsb
dec
and
jno
pop
jge
xchg
xlat
dec
repz
xchg
jle
pop
push
scas
rcrb
sub
xor
jg
adc
adc
dec
xchg
outsb
dec
mov
pop
xlat
dec
shl
dec
pop
jno
pop
cmp
int3
insl
inc
jle
aas
add
pop
orl
push
insl
outsl
dec
or
pop
jl
rcl
repz
aad
insl
fistl
jns
add
mov
dec
fs
shlb
aas
dec
push
lds
mov
ja
aad
jns
icebp
inc
sub
pop
mov
leave
je
push
mov
movb
sahf
decb
test
sbb
mov
rorb
add
xchg
dec
arpl
inc
inc
sub
shll
test
add
add
leave
mov
imul
outsb
rcrb
roll
inc
push
sahf
pop
aas
xor
dec
mov
jl
mov
inc
pop
fs
dec
lret
aam
lods
into
jle
push
xchg
lret
outsb
add
rcrb
stos
jno
inc
outsb
aaa
pop
mov
sti
mov
pop
dec
test
test
shrl
dec
inc
fwait
and
pop
and
arpl
das
mov
cmp
shlb
orl
cld
dec
fwait
mov
inc
daa
xor
adc
add
pop
or
lods
pop
pop
mov
pop
dec
pop
fwait
outsl
cmp
and
mov
in
cmc
inc
sbb
rcr
or
sub
pop
cltd
dec
mov
ficomps
pop
xlat
rol
in
ds
sbb
and
outsl
out
or
push
cmp
pop
hlt
jns
mov
jae
jmp
jo
jns
sahf
jnp
cmp
into
mov
mov
push
fcompl
mov
fsubr
popa
add
fldcw
dec
call
hlt
ret
mov
or
mov
repnz
mov
in
sub
mov
scas
cwtl
mov
in
adc
fists
inc
inc
jns
repnz
cmp
jnp
pop
xor
ret
outsb
inc
push
xor
inc
test
fsubl
adc
push
dec
outsl
int3
pusha
imul
jle
dec
add
or
repz
cli
ror
mov
clc
test
push
cmp
enter
sbb
mov
addb
mov
es
cmp
and
cmpl
jae
lret
and
xor
lahf
pop
mov
sub
mov
in
icebp
roll
inc
jnp
push
cmp
fwait
jle
dec
inc
mov
or
or
sbb
mov
jo
dec
test
nop
fimull
sub
mov
hlt
ljmp
xchg
or
push
fmull
enterw
mov
sbb
dec
repnz
jecxz
jns
sub
hlt
jle
or
loopne
xor
pop
push
arpl
mov
or
lahf
movsb
push
repnz
mov
rcrl
dec
arpl
or
mov
mov
divl
popa
fs
and
add
std
rolb
movsb
lods
mov
dec
adc
cmovle
dec
pusha
mov
adcb
pop
movsl
xchg
loopne
hlt
fbld
mov
push
insl
xchg
imul
les
es
cld
jle
jno
sahf
mov
push
mov
lea
fcoms
adc
pop
jmp
inc
sbb
pop
pop
jmp
ficoms
jno
filds
or
loop
dec
sub
jbe
and
fcompl
test
andb
fisubl
clc
mov
dec
mov
xor
movsl
mov
dec
decl
addb
pop
jns
test
notb
mov
fcompl
xorb
lds
int3
sub
or
rolb
pop
pop
push
movsb
gs
push
xlat
mov
add
push
loop
dec
jl
movsl
test
dec
mov
jg
xor
js
mov
mov
xor
inc
in
xchg
push
or
scas
mov
movsl
scas
aas
nop
add
pop
xor
mov
sbb
or
mov
pusha
mov
xor
lds
fsubr
pop
dec
jno
rcrb
out
xchg
push
lock
jne
inc
out
xchg
fwait
push
mov
add
mulb
push
jg
out
dec
push
mov
add
sub
fwait
or
mov
inc
movsl
or
and
into
sub
adcb
or
push
push
in
or
inc
pop
in
mov
jp
mov
adc
test
pop
gs
inc
pop
dec
lods
jmp
xchg
arpl
lcall
mov
or
mov
orb
in
inc
inc
lea
and
adc
into
dec
out
je
dec
sbb
mov
hlt
jns
dec
scas
dec
jle
mov
adcl
inc
dec
fsubrs
mov
ficoml
pop
pop
jbe
and
mov
mov
insb
xor
in
push
pusha
das
mov
ds
pop
or
lret
or
ret
lock
shlb
fistpll
lea
cld
push
inc
mov
stos
cld
out
pop
xor
cmp
into
fwait
sub
enter
push
gs
sbb
ss
jecxz
ret
gs
cmp
sbb
xchg
add
xchg
orb
mov
pusha
mov
push
lds
std
mov
jnp
push
pop
inc
mov
pop
test
mov
jp
mov
clc
dec
imul
movsl
pusha
xor
shlb
mov
inc
adc
xor
cmp
push
xor
mov
jno
dec
fwait
dec
xor
les
popa
adc
pop
mov
xchg
popf
mov
stos
pop
gs
jae
fs
fcomp
push
mov
aad
in
add
inc
shlb
push
rcrb
lret
or
in
sbb
loopne
pop
mov
ss
fcoms
leave
mov
nop
sbbb
push
imul
cmc
lret
popf
cmp
mov
push
add
sbb
cmp
push
repz
pop
mov
scas
lret
xor
inc
int
lcall
shlb
or
imul
add
dec
fcom
or
ror
push
std
push
sbb
jnp
imul
xchg
inc
inc
scas
dec
pop
rorw
fmuls
pop
decl
or
jp
add
push
test
mov
inc
inc
arpl
jne
or
pop
xor
loopne
push
lods
dec
sahf
xor
leave
add
aaa
frstor
out
push
fistps
out
mov
jp
pop
push
xor
popa
icebp
cmp
rcl
aam
shrl
icebp
xor
lds
bound
xchg
jge
sub
push
xchg
mov
movzbw
shl
pushl
shr
lea
stc
inc
mov
pushf
pushl
stc
or
movl
jmp
setle
shl
mov
cmc
movb
mov
test
pusha
pushf
lea
jae
push
lea
je
pusha
cmc
call
lea
ja
clc
bt
cmc
call
cmp
pusha
mov
movb
mov
lea
ja
clc
sar
not
rcr
sub
rcr
not
add
add
bt
mov
rcl
not
stc
and
mov
stc
repnz
call
pushf
call
push
pop
cltd
inc
out
ret
addl
in
js
and
xchg
cli
ljmp
ljmp
shlb
jns
lods
int
push
cmp
push
std
je
sbb
sub
pop
fsubl
dec
repnz
jge
push
push
push
test
xorb
xor
push
outsl
add
insb
rcrb
xchg
addr16
jge
sbb
enter
inc
and
roll
dec
mov
mov
mov
and
pushf
pushf
pushl
lea
jmp
add
jmp
jg
into
inc
out
ret
ret
mov
cmc
cmp
into
adc
loope
test
add
aam
jns
pusha
out
pop
mov
gs
ret
push
repnz
jl
movsl
or
jge
bound
inc
pop
mov
les
xor
xor
lods
stos
xor
mov
repz
hlt
js
xorb
jle
dec
jno
or
and
push
pop
lahf
sub
adc
jno
xchg
movsb
push
ja
cwtl
push
imul
scas
sub
imulb
loopne
lret
dec
cmp
or
sbb
shll
jns
dec
xor
pop
cmp
inc
les
dec
in
and
fwait
or
sub
arpl
xchg
or
xor
int
dec
lret
jo
mov
inc
sti
out
dec
out
add
sub
in
test
mov
mov
mov
mov
mov
xor
cmc
sbb
pop
cmp
shld
mov
call
pusha
outsl
test
adc
sub
divps
leave
cmp
pop
adc
push
cwtl
aam
jns
call
cld
cwtl
inc
mov
call
adc
push
xchg
push
xchg
add
clc
pop
outsl
cwtl
fcoml
movl
pop
cmp
push
dec
nop
lret
nop
out
in
cmp
out
aad
cmp
or
iret
sahf
mov
xor
sti
push
pop
adc
pushf
lea
jae
pusha
mov
lea
jmp
add
dec
gs
popa
addr16
outsl
js
add
mov
bsr
sub
pushf
pop
pop
movzbw
lea
pop
push
not
mov
call
lea
inc
out
ret
xchg
xor
mov
stos
aam
or
sub
jmp
dec
cmc
or
push
xor
jae
pop
cwtl
in
fldenv
les
shrb
and
ja
xchg
sbb
cli
jno
dec
daa
es
in
ja
dec
int
cmp
jmp
xorb
mov
xor
insl
sub
jl
imul
or
out
ds
or
ljmp
rorl
cmpsl
push
clc
inc
pop
mov
stc
push
sub
data16
cmp
sahf
push
scas
iret
stos
scas
sub
sbb
pop
loope
pop
hlt
shrb
cmpsb
das
xor
mov
lret
mov
push
mov
lret
insb
jb
pop
pushf
ja
cwtl
inc
pushf
pop
cwtl
mov
test
sub
or
xor
jno
in
fsubrs
fwait
ret
shll
jnp
ja
pop
dec
jmp
and
or
mov
sbb
push
adc
arpl
adc
es
imul
mov
in
andl
xchg
sbb
enter
jmp
jle
pop
or
xor
mov
mov
outsl
push
or
dec
punpcklbw
enter
mov
jmp
adc
out
ret
in
jns
mov
scas
sub
add
mov
mov
jnp
mov
popa
ds
sub
es
xor
mov
xor
in
xor
xchg
lcall
xchg
push
or
lds
xchg
mov
aas
mov
ret
push
cli
inc
mov
sbb
inc
js
inc
mov
aad
mov
xlat
xor
mov
mov
enter
lods
and
nop
dec
adc
mov
pop
add
mov
sbb
out
arpl
cmpsl
repz
icebp
xchg
adc
add
mov
sarl
xor
neg
ror
push
out
cltd
adc
imul
shlb
inc
mov
sbb
lods
shrl
out
and
adc
push
xor
nop
pop
ss
pushf
sub
rcl
xor
cmp
cwtl
mov
test
out
adc
test
es
stos
cmpsl
jp
rcll
mov
outsl
arpl
inc
insb
insb
outsl
arpl
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
push
and
mov
call
enter
out
ret
xchg
daa
ja
sbb
das
aas
push
pushf
xor
or
mov
jno
movsl
jmp
sti
pop
sbb
push
push
adc
dec
shl
stos
aaa
mov
adc
cs
imul
mov
je
ret
cmp
sbb
pop
mov
pop
adc
je
jne
cmpsb
mov
pop
imul
sub
fdivp
or
sub
loopne
shrd
rcr
not
mov
lea
setg
bsf
mov
inc
inc
mov
clc
mov
test
push
xor
pusha
rol
cmp
xor
jmp
cli
mov
inc
adc
inc
test
popf
test
inc
push
jnp
inc
stos
dec
dec
mul
or
fs
arpl
dec
scas
aas
sbb
xchg
adc
mov
in
stos
cld
imull
into
mov
push
es
mov
sbb
push
lods
sbb
cs
arpl
out
ret
sub
icebp
push
mov
ja
fcmovnbe
int
mov
imul
or
push
jno
inc
cmpsl
repnz
cmpsb
rcr
lret
cmp
cld
cmp
push
inc
icebp
add
cmpsb
stos
mov
aad
out
hlt
xchg
push
push
mov
std
pop
in
sub
int3
cmp
test
jg
leave
push
cmpsl
cli
daa
inc
mov
adc
and
cwtl
lahf
out
insb
inc
ds
fistpll
mov
pop
xor
and
subl
inc
popa
lds
mov
call
pusha
call
mov
lea
movzbw
pop
pusha
pusha
pushl
pushl
ret
pushl
lea
je
rcr
xor
add
btr
movzbl
sub
xadd
add
shl
shr
rol
stc
mov
shl
call
lea
ja
pusha
push
movb
call
jge
scas
dec
out
ret
dec
loop
pop
xchg
cli
push
in
mov
sub
cmc
cld
add
test
pusha
mov
mov
lret
mull
fiaddl
or
subb
fisubs
lret
lds
add
dec
out
ret
shll
cmp
pop
mov
lahf
or
adc
add
sti
ljmp
rcr
xor
dec
std
push
push
cmp
repnz
scas
repz
pop
addr16
sub
enter
movl
or
repnz
out
dec
fucompp
cli
int3
mov
ret
pop
mov
xchg
rorl
ret
add
cltd
and
repz
outsb
mov
les
repz
in
pushf
lods
js
outsb
dec
fs
pop
fiaddl
and
xor
add
movw
call
pusha
clc
bt
jmp
pushf
call
pusha
mov
movl
pushf
lea
je
stc
sub
clc
bt
pushf
cmp
pushf
push
lea
ja
pushf
imul
pushf
add
pushf
pushf
pushf
lea
jmp
and
dec
out
ret
xor
jne
sbb
incb
mov
inc
ret
lret
fidivrl
mov
adc
int
cmp
loope
push
ds
gs
inc
jge
cli
xor
jg
popa
pop
imul
enter
ret
loop
out
inc
sarb
inc
ret
enter
and
adc
dec
mov
pop
jns
and
icebp
xor
push
repnz
test
xchg
mov
inc
push
cwtl
mov
pushl
lea
jne
aas
aam
lahf
xor
daa
das
btr
rcr
mov
push
sar
bt
cmc
add
add
jmp
gs
fsubl
imul
mov
mov
lret
hlt
jb
hlt
jno
adc
sub
xor
stos
lret
lret
fwait
jo
push
sub
inc
lods
imul
mov
mov
dec
sub
xor
lret
mov
pop
pop
push
add
out
mov
or
jne
je
cmp
inc
xchg
cwtl
std
jno
dec
out
ret
or
in
mov
clc
xor
and
adc
ret
sub
add
jns
pop
loope
inc
cmp
aam
cmp
mov
jmp
jne
mov
pop
push
add
loopne
pop
scas
testb
xor
insb
movsl
or
gs
mov
and
sub
js
test
idivl
jle
lret
arpl
je
bt
aad
sub
mov
mov
call
jmp
pushf
lea
ja
pusha
adc
lea
push
jmp
lea
je
push
call
lea
jae
pushf
call
sub
int3
insb
ret
gs
push
loope
xchg
sahf
pop
scas
addr16
stos
and
adc
cmp
xor
fstpl
mov
fldenv
pop
mov
clc
popa
push
cmp
cmc
xchg
dec
jmp
cmpsl
and
dec
out
sub
mov
movlps
xor
dec
mov
inc
lea
cwtl
sub
fdivrl
or
fidivrs
jae
push
mov
and
jae
cmp
test
cmp
pusha
mov
movb
push
lea
jae
push
cmp
clc
cmp
cmp
pusha
mov
pusha
lea
ja
pushf
jmp
push
mov
popa
fcoml
push
leave
or
cs
sbb
outsb
dec
add
dec
ret
ror
dec
push
push
push
jmp
leave
xchg
or
insb
jne
sahf
jo
lahf
push
adc
push
fisubrl
lret
mov
aaa
jno
adc
dec
bswap
js
lods
mov
inc
sub
sub
movsb
mov
call
or
sub
fs
sbb
add
insl
mov
imul
ds
push
pop
xor
mov
sahf
loope
insb
imul
ds
xor
push
pushf
mov
add
jo
inc
outsb
out
arpl
pushf
add
movzbw
cmp
bsr
add
add
inc
neg
mov
call
pushf
mov
pusha
mov
movzbw
not
lea
jmp
pop
jb
dec
out
ret
mov
xor
sbb
pop
icebp
cli
adcb
inc
sbb
jnp
pop
xor
sub
movsl
cmp
sti
fnsave
cmp
mov
aaa
xchg
push
inc
jmp
jns
sbb
or
xor
jae
jnp
daa
test
mov
jnp
push
add
add
or
fcompl
popa
push
add
stos
mov
jo
adc
in
mov
xchg
pop
rorl
push
fiadds
add
lods
cmp
jb
or
push
pushf
fs
xchg
adc
out
mov
out
sti
in
jmp
sbb
jmp
ret
dec
push
out
ret
stos
pop
mov
arpl
cmp
mov
test
lea
aaa
jnp
out
stos
jbe
test
sbb
fucom
pop
fs
repnz
test
push
pusha
sub
mov
lods
dec
lahf
icebp
xchg
push
dec
pop
fimull
gs
cmpsl
mulb
mov
leave
push
adc
daa
mov
sub
sub
sbbl
mov
push
lods
out
cmp
cmp
sub
add
int3
xlat
or
in
nop
or
shlb
pop
push
add
push
jp
sbb
cmp
and
cmpsl
into
cmp
ret
xchg
jbe
sbb
jecxz
mov
sbbb
call
pusha
sub
pushf
rep
movzbw
call
call
not
inc
mov
jmp
mov
ret
xor
mull
pusha
cli
shll
jnp
mov
loopne
jns
fcompl
cmpsl
cmp
arpl
cmp
ljmp
repnz
sub
sub
add
adc
mov
jmp
nop
jbe
fdiv
imul
add
in
cmp
xchg
adc
jle
imul
loope
jge
mov
outsb
xor
push
dec
inc
cmp
cmp
ret
stos
cmp
test
enter
xor
cli
dec
add
pop
xchg
cmp
push
push
gs
hlt
sub
adcb
cmp
fwait
pop
and
sub
and
test
inc
lds
pop
ss
dec
push
cwtl
out
add
scas
stos
fucom
outsl
xor
sbb
mov
ret
fcmovnu
test
scas
xlat
inc
add
idivb
sub
adc
dec
shrb
xchg
repz
pop
add
add
push
xor
icebp
scas
dec
call
adc
and
pushf
gs
ficompl
or
sub
ds
sbb
mov
scas
xchg
xchg
or
hlt
imul
jge
mov
ljmp
scas
movsl
scas
jmp
pop
push
lods
inc
ds
cmp
mov
out
sbb
mov
xor
mov
fwait
cmp
lea
daa
mov
add
sub
or
push
in
xchg
rorl
aaa
repnz
sub
mov
xor
xor
add
dec
push
es
sbb
fdivl
adc
push
dec
les
push
int3
out
sub
shll
push
test
leave
xor
sti
pop
mov
mov
pop
test
sub
fcos
icebp
xchg
push
push
int3
shr
femms
sbb
mov
mov
shll
sbb
and
adcl
jo
rolb
sub
sbb
adc
mov
loope
mov
mov
xor
cwtl
push
jne
xorb
jp
and
outsb
ret
popa
cmp
inc
add
dec
pop
pop
xlat
fimuls
outsl
xor
xorb
push
sahf
cmpsb
cmp
cmp
aaa
ror
xor
pop
cli
dec
cmp
and
sahf
push
bound
rorl
outsb
lds
aad
pop
idivl
gs
roll
and
push
out
ret
cmp
sub
sahf
insb
in
lret
fs
ljmp
loop
scas
in
jmp
leave
icebp
pop
ljmp
mov
push
xchg
pop
xor
insb
popa
cmp
push
push
push
sbb
push
outsl
cmpsl
fs
inc
push
mov
mov
shl
sti
pop
mov
mov
and
lcall
push
or
imul
cmp
decb
cmp
pop
popa
and
mov
jnp
adc
push
out
ret
int
jne
mov
and
cmp
cmpsl
addb
xor
lret
jbe
icebp
cwtl
lock
fcomps
loopne
or
lock
inc
test
jmp
shrl
cs
call
xor
and
mov
pop
lahf
push
adc
sub
pop
and
test
into
push
pop
es
xor
xchg
pop
ds
hlt
mov
mov
bound
pop
xchg
ret
cmova
or
out
not
mov
pushf
pusha
mov
pushl
ret
call
ret
mov
aam
out
popf
les
stos
jecxz
lahf
cli
mov
sbb
mov
add
push
xchg
cmc
je
cmp
clc
jmp
sti
sbb
inc
sarb
sub
add
jo
dec
icebp
jecxz,pt
rorb
int3
or
inc
int
repnz
pop
icebp
fbld
bound
js
cld
mov
cmp
sar
loopne
loop
and
ds
dec
mov
push
dec
sbb
push
out
ret
mov
cmp
cmc
lcall
pop
outsb
xorl
stos
pop
dec
in
jns
xor
imul
mov
xchg
orb
cmpb
push
popf
sub
int3
mov
call
cmc
rorl
imul
inc
mov
cmc
out
in
cltd
pop
repz
fbld
mov
pop
xchg
cmp
aaa
fistl
ret
idivl
rolb
rcrb
jns
aad
push
loopne
pop
icebp
pop
mov
adc
pushf
or
xchg
sub
insl
push
repnz
or
or
jbe
loop
lret
in
sbb
inc
mov
add
jne
cmpb
dec
shll
mov
sbb
or
in
out
ret
mov
decl
idivb
mov
incl
out
add
fsubrs
xor
ret
and
daa
mov
incl
mov
dec
stc
xchg
xchg
shrl
fdivrs
ss
push
or
jb
xor
loop
xor
push
adc
jp
pusha
xchg
push
inc
and
rcrb
xchg
mov
test
and
add
popf
scas
je
inc
and
test
mov
ja
mov
and
jne
daa
or
seta
shr
xor
das
shl
ror
mov
pushf
call
pushf
cmp
pusha
mov
mov
movl
lea
ja
lea
mov
pop
movsbw
lea
xchg
mov
pop
xchg
seto
pop
jmp
pusha
movzbw
mov
pushf
call
mov
stc
movb
jmp
lea
js
push
pusha
lea
ja
not
sub
dec
ror
add
adc
mov
setp
mov
pushf
repnz
movb
push
lea
jne
cwtl
bswap
bswap
movb
lea
push
mov
mov
cwtl
movsbw
pusha
lea
movb
pushf
pusha
movl
pushf
mov
pushf
pushl
pushl
ret
sarb
pop
out
ret
cmp
cmp
add
dec
sbb
mov
add
sub
mov
les
cs
jno
lahf
roll
cli
leave
sbb
jmp
and
sub
push
mov
cmp
popf
rcrl
enter
jno
mov
xchg
inc
ffree
test
cmp
inc
push
or
fcomi
shrb
jnp
dec
ret
test
sub
add
jb
bt
cmp
clc
cmp
cmp
pushf
jmp
ss
scas
sub
repnz
xlat
or
insl
adc
orl
bound
jb
mov
leave
sbb
ficomps
mov
xchg
ret
xor
stos
inc
add
aad
mov
mov
insb
xor
imul
lahf
les
pop
out
ret
sbb
stc
bound
mov
popa
xchg
xchg
std
shlb
in
les
nop
push
rorb
mov
data16
jnp
daa
cmpsb
jecxz
hlt
xchg
sbb
inc
mov
sarl
mov
je
mov
mov
pop
xor
xchg
repnz
insl
fsubrs
mov
mov
ret
fstpt
subb
insb
sub
mov
jg
mov
and
cmp
fisttps
push
mov
pop
xchg
inc
adc
push
movsb
std
cmp
xor
and
sub
aad
xlat
xchg
pop
ror
mov
out
iret
ret
inc
addb
int
lcall
out
ret
testb
and
in
mov
jnp
cmpsb
insl
dec
push
mov
xor
hlt
std
xchg
dec
xor
inc
xchg
popa
outsb
sarb
cli
rclb
jno
in
mov
xor
jb
into
outsl
dec
xor
shll
mov
xchg
adc
sahf
mov
ret
imul
xor
je
mov
mov
mov
rcll
jae
mov
adc
les
push
sub
inc
adc
or
fbld
mov
jno
inc
mov
add
lahf
fistpl
sahf
test
cld
add
or
cmp
push
lret
ficomps
xor
mov
add
aas
mov
out
ret
into
pop
mov
sbb
add
incb
sbb
into
dec
movsb
sub
call
inc
dec
int
cmp
bound
xor
in
mov
jle
mov
and
push
call
pop
mov
jge
sbb
gs
cmp
mov
outsl
cmp
dec
aas
repz
xchg
pop
inc
mov
sub
cmp
mov
ret
pop
out
push
mov
lea
mov
xchg
sub
aaa
aas
aad
notl
call
jne
insl
cmp
and
ljmp
outsl
jmp
jb
or
and
push
ficoml
xor
mov
lret
cmp
ret
and
inc
scas
mov
lahf
data16
jg
into
js
jl
fcmovnbe
and
cli
or
ret
into
sahf
mov
xchg
lock
fildl
mov
ret
mov
mov
sub
mov
nop
pop
out
ret
push
cmp
mov
xor
lock
jb
jbe
ret
aam
adc
push
rorl
stos
xor
out
scas
aaa
pop
les
ret
pop
subb
push
aas
xor
mov
inc
dec
add
cltd
arpl
add
adc
add
sub
fwait
sti
test
mov
lds
arpl
les
dec
daa
cmp
adc
popf
std
cmp
test
dec
sarl
fisttpl
cmc
mov
pushf
cmc
jmp
push
adc
pusha
pushf
jmp
jl
sbb
jl
subb
lahf
add
mov
aad
inc
mov
add
in
dec
imul
into
out
lods
jge
mov
push
xor
outsb
mov
xchg
pop
or
add
ficoml
pop
aas
imull
xchg
dec
daa
adcb
push
lret
or
cmp
inc
repz
test
fldenv
xor
cmpb
es
rcl
rorb
inc
mov
aad
repz
add
lcall
repz
and
jae
test
fcomps
mov
add
xor
mov
jl
mov
pop
aas
sbb
push
es
shll
pop
sub
das
pop
out
ret
cmp
pop
sbb
shll
xchg
fwait
sub
imul
hlt
imul
lock
or
pop
shl
and
xor
mov
lea
shl
add
lea
icebp
call
adc
push
pop
mov
icebp
std
jmp
jnp
ret
sub
push
cmp
sar
fwait
test
sub
xor
cltd
sub
pop
ret
cli
xor
fwait
xchg
fwait
mov
inc
lods
xor
movsb
inc
push
mov
pop
push
addr16
stc
xlat
jno
subb
call
je
xor
cmp
sbb
arpl
jmp
mov
xor
ja
test
stos
mov
xor
or
push
dec
nop
cmp
fxtract
test
xchg
inc
jno
icebp
test
cmpsl
inc
lods
pop
out
ret
inc
ljmp
nop
sbb
sub
jmp
lcall
sarl
mov
les
pusha
in
push
adc
rolb
sub
dec
pop
dec
xor
lcall
sub
add
dec
dec
push
cld
pop
out
ret
mov
jmp
push
in
aad
mov
add
addl
dec
popa
lock
aaa
sbb
xchg
pop
decb
popa
inc
fsubr
xchg
or
push
in
mov
jmp
call
stos
sbb
xchg
int3
in
mov
mov
popa
fiadds
mov
jno
push
mov
xor
jbe
insb
mov
push
inc
bound
aam
aad
loop
cltd
scas
push
add
es
nop
rcrb
pop
out
ret
dec
fadds
gs
shll
pop
inc
jmp
in
rclb
cwtl
mov
xor
aam
repz
sbb
outsl
in
sti
xor
jecxz
xchg
lcall
add
js
pop
rolb
mov
fcmovbe
push
add
mov
inc
fsub
jl
mov
leave
mov
lahf
aam
push
inc
push
fdivl
ret
cmpsb
rcll
rcl
sbb
inc
add
and
push
cmp
aad
out
ret
lcall
lcall
nop
popf
mov
lea
stos
std
orl
sahf
rcll
mov
test
inc
out
pop
sub
or
andl
push
in
mov
cwtl
push
and
movb
scas
add
sub
add
idivl
inc
or
mov
cmp
lods
push
lds
mov
sub
sbb
clc
idivl
and
mov
mov
dec
pop
jge
jg
mov
dec
pushf
mov
jns
pop
stos
ljmp
and
inc
and
sti
loopne
mov
je
add
call
push
push
pusha
out
ret
inc
stc
sbb
out
lahf
dec
std
or
or
loopne
fneni(8087
dec
out
int3
jb
add
cmp
add
sahf
jne,pn
mov
pop
dec
shl
loope
sub
aam
push
xchg
cmp
dec
pop
jge
cmp
jmp
jbe
cmc
push
pop
adc
push
inc
jbe
inc
mov
jo
sbb
cmp
addb
repz
data16
pop
enter
or
mov
and
cmp
mov
add
pushl
xchg
lahf
inc
add
xchg
sbb
push
mov
test
jnp
dec
test
mov
xchg
pop
sub
movsb
fucomip
lcall
repnz
rcrb
jae
das
jl
jbe
fcomps
lods
cli
jo
repnz
call
fstps
data16
es
pop
hlt
cld
add
add
call
ret
mov
mov
ficoml
or
scas
xchg
pop
imul
xor
xchg
and
mov
mov
inc
hlt
push
popa
out
ret
inc
out
imul
out
mov
scas
sub
stos
push
mov
sub
jns
clc
sbb
pop
out
push
mov
adc
mov
push
enter
dec
jl
sbb
lcall
stos
scas
pop
push
adc
outsl
imul
loope
pushf
sbb
xchg
xor
mov
pop
ja
pop
adc
mov
mov
sbb
pop
dec
add
lea
call
mov
push
push
lea
jmp
mov
ret
sarb
add
lods
inc
mov
aam
mov
negl
out
repnz
adc
push
out
mov
xchg
ja
sub
jl
testl
lret
das
push
daa
out
aam
push
dec
push
xchg
int3
and
f2xm1
inc
dec
push
mov
mov
pop
ds
pop
aas
mov
test
rol
cmc
stc
bt
jmp
adc
inc
out
ret
popf
pop
idivl
ljmp
mov
and
push
jg
lcall
xchg
xor
icebp
adc
dec
hlt
dec
stos
lods
and
ds
out
adc
cmp
imul
pushf
add
inc
push
dec
pop
or
sbb
lret
in
lock
or
das
cmc
test
sub
add
mov
hlt
test
jb
mov
pop
or
mov
sbb
shll
jg
sarb
jae
jo
in
pop
or
push
sbb
insl
ss
addb
icebp
je
xor
out
or
xchg
jno
adc
and
xor
in
hlt
jae
rcr
call
pop
arpl
ret
mov
movsb
sub
outsl
shll
sbb
inc
add
rcll
and
fisubs
fwait
jne
jb
xchg
js
inc
js
fdivr
ja
enter
push
mov
mov
notl
movsl
cmpsb
pushf
insl
lahf
push
xor
pop
push
and
sbb
push
jmp
fs
mov
jmp
adc
outsl
pop
shlb
mov
ja
lds
js
push
stc
add
pop
test
pop
int
syscall
xor
ret
jecxz
mov
mov
aas
scas
iret
jne
and
loope
gs
mov
jbe
dec
cltd
mov
or
add
adc
inc
cmc
jb
sti
jbe
clc
pushf
pushf
jo
pop
into
or
test
inc
xchg
movb
jns
add
sub
fwait
leave
sbb
das
sub
and
popa
sub
add
add
sub
pushf
mov
fcmovu
lcall
je
stc
incl
add
xchg
cs
jmp
jecxz
bts
not
clc
mov
sar
sbb
add
adc
rol
mov
and
btr
jmp
setne
inc
jge
inc
sbb
sub
xor
add
xchg
pusha
bswap
sar
mov
clc
rcl
mov
lea
clc
bt
push
inc
mov
jmp
adc
add
sub
add
push
adc
add
mov
and
ljmp
add
add
add
ret
mov
lds
cmp
push
test
fwait
push
mov
jl
insb
jne
sbb
adc
bound
pop
fsts
lds
ret
mov
sbb
adc
out
mov
inc
cltd
cltd
xor
dec
dec
ret
int
scas
jne
sub
and
inc
inc
out
mov
dec
test
and
cmp
out
ret
js
push
clc
inc
ja
add
cmpsb
cmpsb
jge
sbb
mov
push
lods
mov
gs
lret
cmp
scas
mov
sar
xchg
xor
mov
fidivrl
shlb
inc
lea
das
outsb
repz
int
mov
outsb
rorl
test
sub
sbb
stc
pushf
sub
lea
jmp
call
pushf
pushl
adc
movb
pushl
ret
mov
ret
aad
and
push
mov
dec
roll
stos
adcb
push
lret
inc
push
sti
xor
divl
jns
mov
mov
cld
inc
xor
sbb
fstps
lcall
movsb
out
or
fcomps
test
shrl
pop
pop
out
push
jne
pop
scas
xchg
pop
xor
aas
repnz
jle
call
mov
shll
in
lcall
add
gs
ret
fisubrs
push
jmp
aam
orl
pop
mov
ficoms
cmp
xor
mov
add
loope
sahf
lods
loop
xor
ss
inc
psubd
test
pop
push
pusha
push
and
fisttpl
xchg
mov
mov
stos
and
fidivrs
insb
int
enter
jns
add
ret
pushf
mov
adcl
xor
subl
in
rclb
ret
daa
jmp
adc
pop
arpl
adc
cli
fildl
lock
adc
jo
xchg
pusha
jno
test
ret
jmp
mov
cmp
jle
pop
sub
test
incb
fidivrs
sbb
push
pop
xor
push
pop
and
in
mov
fs
dec
std
xor
je
lret
dec
insb
pusha
sub
pop
push
addr16
add
push
mov
arpl
shr
adc
and
out
ret
mov
and
fcomp
push
push
xor
lret
out
adc
mov
sbb
xlat
and
mov
xchg
xlat
push
repnz
int
xlat
push
sbb
jns
sub
dec
jge
call
bound
inc
dec
test
adc
xor
mov
dec
lret
sbb
mov
fisubrs
ret
ret
pop
stc
popf
sbb
push
mov
xchg
dec
jge
test
ret
sbb
mov
loop
xchg
in
mov
jne
pop
stos
pop
test
cmp
je
lret
xor
test
jae
xor
out
out
insb
dec
test
movl
mov
push
and
mov
sub
jne
idivl
cmp
add
jno
sbb
mov
add
mov
mov
das
aas
push
add
xchg
mov
xor
inc
in
inc
adc
outsl
test
xor
push
sub
ds
and
inc
pop
rcr
int
fbld
pop
sbb
sbb
adc
pop
pop
test
pop
sarb
dec
jbe
jnp
jno
and
leave
movsl
ret
push
fwait
and
mov
ret
sbb
mov
dec
mov
sbb
sub
mov
xchg
jecxz
loop
stos
mov
repz
int
insb
aad
lret
sbb
and
dec
jl
nop
setbe
pushl
mov
jmp
insb
add
imul
cmc
das
fwait
cs
fwait
out
sub
xor
inc
mov
jbe
cmpsl
stc
xor
jns
in
jg
aas
insb
pop
mov
mov
pop
cmp
les
out
shrl
adcl
test
int3
pusha
push
sahf
stos
int
xor
jecxz
out
neg
ret
lods
pop
xor
mov
dec
jle
repz
pop
jecxz
pop
sub
call
bnd
push
ret
outsb
fisttpll
fldenv
mov
pop
insb
jmp
mov
faddl
and
addb
mov
cmpsl
push
mov
in
in
adc
mov
jge
inc
repz
xor
or
aas
mov
push
pop
and
test
ja
cltd
mov
aam
aaa
loop
out
xchg
pop
andl
arpl
jbe
aaa
xchg
ficompl
mov
push
ret
mov
stos
fcomps
scas
sti
push
jg
stos
das
bound
pop
mov
shl
in
stc
xor
pop
out
pop
cmp
int3
jne
test
push
sbb
mov
add
xor
pushl
aas
mov
or
mov
imul
ret
sbb
mov
and
inc
push
adc
popa
ds
loopne
push
ret
push
les
xchg
sub
cmpsb
dec
cld
push
and
xchg
dec
sbb
sub
push
int3
or
jecxz
test
sahf
cmp
cmpl
lcall
push
adc
enter
ds
sti
lret
test
dec
jne
call
add
xchg
ss
mov
cmpsb
jg
xchg
aaa
pop
imul
cmp
xchg
xchg
push
push
lcall
push
pop
jge
insb
cmp
lds
add
cvttps2pi
add
jmp
pop
pop
int3
push
sbb
decl
mov
xor
add
je
cmc
jmp
dec
and
imul
jmp
mov
xor
add
mov
popf
rcrb
bswap
lock
addb
and
inc
mov
jno,pt
imul
mov
idiv
mov
adc
push
pop
mov
mov
std
aad
pop
icebp
add
or
xchg
test
lret
mov
ficoml
test
int3
out
adc
arpl
into
sbb
mov
loop
insb
out
ret
jge
sub
and
lret
dec
mov
dec
nop
test
mov
stos
jle
js
dec
and
lahf
pop
repz
das
mov
mov
clc
push
fildl
aas
mov
loop
xchg
subb
sub
inc
jg
adc
lods
stc
jl
and
stos
xor
mov
test
pop
hlt
mov
pop
mov
in
lods
rorl
inc
les
lret
sbb
aas
aas
int
dec
fistl
mov
fsubrl
mov
mov
adc
leave
out
sub
shlb
filds
mov
aas
lret
cmp
lock
pusha
jne
es
ss
mov
pop
dec
mov
inc
push
xchg
push
cmp
pusha
fidivs
xor
fwait
sub
in
lret
andl
fsubrp
and
and
das
ds
adc
iret
lods
mov
jmp
adc
sbb
xchg
pop
in
data16
lret
xchg
rcrl
arpl
add
mov
ret
pushf
fadds
imulb
test
inc
cmp
in
inc
shll
jbe
movsl
scas
cmpb
mov
jmp
test
movsl
loope
cmp
fstpt
std
xor
cmp
roll
ljmp
push
or
shl
mov
cmp
pushf
cmc
and
call
call
dec
jmp
insl
out
ret
in
iret
inc
lret
and
scas
ss
sbb
pop
daa
test
xor
enter
cmp
das
xchg
imul
cmp
sti
push
push
lds
sbb
cmp
cmp
jle
pop
xchg
mov
add
xchg
or
imul
inc
es
jbe
out
mov
cmpsb
lahf
into
pop
enter
pmovmskb
roll
das
pop
pop
pop
outsb
mov
outsb
mov
movsl
mov
test
pusha
test
movb
pushf
mov
jmp
call
add
inc
js
je
jb
arpl
jae
xchg
aaa
fldt
ret
sti
outsb
sbb
stc
xor
ret
icebp
inc
push
aaa
lods
rorl
add
xor
aam
or
adc
cli
xor
mov
scas
es
inc
mov
sahf
sbb
dec
add
test
jbe
cltd
lods
sahf
inc
pushf
cmpsl
sub
jo
xlat
clc
fnstcw
rcrl
lahf
and
pushf
shrl
dec
outsl
xlat
jle
mov
or
test
fsubrl
or
add
cmc
call
cld
insl
pop
outsb
out
ret
lahf
push
sahf
fidivl
fcoms
in
xlat
rdtsc
add
inc
adc
imul
xchg
arpl
cmp
xor
jp
stc
add
xor
mov
xor
xchg
lcall
clc
lret
mov
arpl
repnz
nop
ret
call
xor
bt
push
bt
ror
pushf
pushf
xor
test
cmc
cmp
lea
jmp
mov
push
jmp
lea
ja
pusha
call
bound
aaa
or
shl
roll
iret
pop
mov
xor
add
adc
ds
xor
enter
cltd
shrb
test
sub
push
push
ret
mov
pop
pop
add
sbb
imul
and
es
insl
adc
outsl
out
ret
mov
bnd
lods
cld
enter
sbb
in
mov
fs
incl
das
push
loope
test
cmp
lahf
add
adc
mov
cli
leave
push
hlt
add
out
ret
dec
lcall
movsl
and
dec
pusha
rcll
inc
rcll
jne
daa
aas
popl
xor
mov
pushf
sti
ret
popf
aaa
aad
movsb
jp
repnz
mov
jmp
cmp
jnp
or
mov
xchg
rcr
sbb
pop
xchg
adc
std
adc
and
sub
insl
pop
addr16
lea
out
mov
cmc
jne
pushl
ret
dec
sti
pop
jo
ret
push
cmpsl
push
mov
or
aad
nopl
and
mov
mov
xchg
outsl
call
mov
xchg
int
jg
fs
call
loop
pop
sbb
xchg
mov
mov
inc
cmp
pop
int3
int
mov
divb
lds
std
int3
movl
in
xchg
sub
sub
aas
cmc
int3
aaa
cmp
dec
lret
xor
icebp
or
pop
clc
fmuls
scas
mov
lea
ja
not
shl
push
bt
sub
add
cmp
lea
add
sar
xor
mov
rcl
jmp
clc
cmp
call
pusha
jmp
mov
sub
bt
cmp
jmp
pop
int
jno
ret
xchg
imulb
icebp
sub
sub
jno
push
pop
shlb
adc
push
push
push
add
dec
mulb
lahf
or
lret
jge
push
mov
imulb
dec
bswap
sbb
repnz
xor
js
loopne
call
daa
in
or
sbb
mov
push
in
ja
mov
sub
aaa
lret
sub
dec
push
inc
inc
xchg
shlb
mov
ljmp
stos
and
adc
add
gs
fwait
leave
pop
dec
fidivs
or
and
sub
aas
inc
sub
lahf
mov
stos
rcr
add
outsb
push
adc
xchg
push
aas
jle
sbb
or
mov
iret
and
out
ret
xchg
jae
daa
mov
mov
addr16
sarl
loopne
test
int
sbb
push
int
jae
imul
push
mov
and
lock
repz
dec
std
movsb
xor
leave
out
test
jns
dec
sub
and
mov
mov
pop
pcmpeqd
mov
popf
arpl
push
mov
xchg
xchg
mov
add
or
mov
faddl
js
fidivrl
outsl
das
or
repz
add
or
pusha
sti
out
cmp
jge
call
repnz
sahf
fcmovnb
lea
xchg
push
int3
push
dec
xchg
adc
add
lods
xor
insb
fs
mov
in
daa
mov
mov
sub
pop
pop
pop
cli
in
jbe
xor
cmp
bnd
mov
cltd
mov
inc
arpl
xsaveopt
ljmp
movb
jmp
imul
and
dec
clc
aaa
ja
outsb
mov
adc
sub
fisubrl
cmp
adc
dec
xor
mov
sbb
xchg
sub
xor
push
mov
sub
lds
addr16
adc
adc
jae
ret
nop
inc
xchg
leave
sub
xor
enter
xchg
push
or
push
inc
add
jns
cmp
mov
cmp
jmp
adc
mov
icebp
xor
adc
cs
stc
fstpl
cmp
mov
xor
lcall
push
pop
pop
iret
dec
stos
mov
cmpsb
shlb
sarb
push
pop
mov
jg
jecxz
pusha
scas
addb
add
add
jo
mov
add
add
xchg
mov
mov
popf
inc
cltd
sahf
arpl
fdivs
loop
in
in
mov
js
data16
jge
icebp
insb
push
loopne
fistps
add
es
push
arpl
jo
mov
mov
adc
cmp
out
out
mov
dec
sbb
nop
dec
pop
xlat
adc
ficoml
inc
adc
into
xor
sbb
push
push
push
pop
add
cmp
mov
sahf
push
das
shl
das
adc
add
jp
jno
in
add
shl
sbb
inc
shl
movl
adc
mov
clc
stc
clc
pusha
cmp
jmp
ret
scas
inc
jne
ret
dec
stos
pop
shl
xchg
adc
mov
xchg
cwtl
sarl
out
jne
stos
add
jns
fs
stos
cmp
jecxz
jb
jg
mov
and
les
mov
fisttps
xchg
scas
dec
out
data16
mov
in
arpl
xchg
or
bound
setb
and
xchg
mov
jns
scas
imull
aaa
and
lods
mov
repz
repnz
mov
mov
inc
cld
enter
sub
or
ret
lret
loop
mov
cmc
add
inc
rclb
aad
adc
jle
jbe
ret
pop
movsb
dec
lret
call
jp
mov
sahf
adc
mov
push
sub
push
pushl
push
mov
mov
push
pushw
std
stc
cmovbe
test
pop
mov
cli
pop
cmp
pop
lcall
cmp
fnstenv
jne
ret
fadds
pop
sahf
pop
xchg
xor
mov
lahf
test
xchg
into
mov
ret
jae
push
add
jns
call
lea
enter
pusha
push
fsubrl
adc
test
int3
aaa
jp
fwait
mov
mov
add
nop
pop
sub
adc
ret
sti
fistl
sub
sti
inc
jne
dec
push
shll
sbb
or
push
mov
pushl
call
call
inc
jmp
pop
shlb
jbe
ret
xchg
push
mov
push
sub
clc
cmp
add
dec
inc
adc
leave
push
jae
and
and
cmp
leave
aaa
pop
lods
clc
into
lods
sub
mov
stos
std
mov
out
lods
sbb
push
loope
sub
jl
mov
testl
jns
sub
xor
sti
push
adc
sbb
daa
sbb
or
jmp
repz
or
fs
jne
cwtl
movb
jbe
setp
pusha
mov
mov
lea
pushl
movl
call
jmp
fs
ja
ret
xchg
or
push
adc
jecxz
cmpsl
dec
mov
xchg
inc
es
jo
arpl
jns
and
jns
mov
mov
fisttpll
sub
cmpsl
movsl
sbb
hlt
rorl
cmp
rcrl
data16
inc
jp
add
pop
lods
sub
test
in
enter
xor
scas
xchg
rcl
lods
xchg
push
sbb
jge
movsb
sar
push
push
sub
ja
ret
jecxz
jne
jno
sbb
dec
jbe
pop
repnz
sub
ja
cwtl
or
ljmp
dec
movsl
or
lock
push
insl
add
dec
std
jge
mov
into
bound
pop
into
xchg
dec
shll
jl
js
pop
jl
dec
hlt
cmp
push
and
addb
or
mov
xchg
pop
push
xor
es
or
xor
sbb
sub
xor
cmpsl
insb
dec
cmp
aad
adc
mov
jmp
adc
js
ret
int3
negl
lods
shrb
daa
jge
jmp
xor
dec
cmp
and
pop
cmp
cmc
adc
cmp
pop
xchg
xor
ds
cmp
mov
pop
ljmp
xlat
sbb
xor
test
add
fldt
mov
cmc
sti
lcall
jb
iret
lods
xchg
cmp
mulb
aas
outsl
or
leave
sbb
sbb
pop
dec
out
jbe
inc
ja
mov
gs
and
lock
mov
stos
int
inc
leave
xor
outsl
nop
sbb
xchg
xor
inc
rcll
aaa
adc
imul
sbb
push
add
add
pop
mov
mov
lods
xor
les
ljmp
mov
xchg
mov
sbbb
mov
ljmp
inc
cli
sub
xchg
jecxz
leave
test
emms
xchg
jl
jl
jb
fisttpll
push
jne
cs
pop
mov
rclb
cmc
dec
or
mov
xor
lds
stos
loope
mov
mov
sysenter
dec
push
jo
jns
ret
adc
xor
repnz
xchg
or
or
mov
xchg
adc
shrl
or
jns
cmp
xchg
dec
clc
addb
sbb
inc
iret
js
std
or
sahf
dec
test
sub
jmp
incl
jg
stc
div
add
adc
add
bound
mov
xlat
cwtl
cltd
aad
aad
add
mov
lret
popa
cmp
ljmp
and
ds
std
xor
enter
xchg
and
cmp
call
lea
jne
bt
movzbw
add
push
mov
test
bsr
sub
sub
test
bsr
pushf
lea
clc
test
cmc
stc
sub
mov
pushl
popl
call
lahf
mov
pushf
cwtl
pushl
lea
movl
call
lea
jno
push
pusha
lea
jne
add
pusha
bswap
or
mov
or
btr
sub
bswap
lea
cmc
sub
jmp
les
lock
repz
test
bound
stos
fimull
lret
and
mov
pushf
and
std
xor
pop
ficomps
push
xchg
lods
in
rorb
enter
jns
das
das
sti
outsb
and
or
hlt
int
ret
mov
les
sbb
lods
xchg
enter
xlat
xor
aas
sahf
mov
sbb
shlb
pop
jnp
ret
scas
push
inc
int
cltd
adc
popf
dec
cmp
and
cmp
push
jne
cltd
xlat
jp
xor
ljmp
orl
and
add
lods
cwtl
mov
mov
call
push
push
dec
push
lea
call
test
bt
jmp
in
mov
out
ret
aas
pusha
or
ds
ja
push
xor
push
pop
ror
jo
insl
jmp
xor
mov
icebp
ja
xchg
cmp
mov
mov
push
jmp
rorb
sbb
loopne
rolb
lret
mov
jns
repz
or
scas
mov
inc
icebp
push
clc
stos
sub
fwait
mov
xlat
dec
cmp
pop
out
xchg
add
mov
call
pushf
adc
arpl
sti
jmp
mov
test
test
pusha
pushf
lea
je
cmc
stc
push
clc
sub
cmc
stc
test
cmp
pushf
call
adc
xor
out
ret
arpl
xlat
pop
mov
icebp
sbb
inc
es
es
mov
sarl
cmp
pop
push
incb
sub
fdivl
sti
lret
das
xchg
adc
test
push
sub
dec
push
xchg
stos
pop
fwait
insl
lahf
fwait
pop
jbe
pushl
cmpsl
jbe
or
inc
cmp
and
loop
int3
and
mov
popf
cltd
call
repz
in
fldenv
fisttps
ss
and
add
sbbb
pop
sti
ret
add
mov
into
movsl
xchg
add
cld
sbb
pop
out
mov
sbb
push
add
sub
add
and
into
pushf
loopne
pop
mov
or
pushf
push
into
int3
cmp
add
test
into
push
insb
push
cmp
adc
push
into
dec
mov
neg
in
adc
sub
mov
nop
sbb
fimull
cmp
in
push
into
xchg
outsl
cmp
fmull
add
jl
into
xchg
push
ret
jmp
add
xchg
sbb
mov
fisttpl
add
aam
into
mov
jmp
add
mov
into
sbb
cli
and
addb
gs
cli
mov
out
add
sbb
into
imul
pop
into
add
fmuls
add
call
mov
add
in
push
into
shll
add
jl
into
cwtl
pop
inc
les
jo
into
pop
xor
jmp
fmuls
add
fcompl
into
imul
add
or
into
push
push
push
add
nop
pop
into
lds
mov
cmp
add
and
into
mov
out
add
mov
fsubr
cmpsb
fmuls
add
pushf
push
into
into
mov
adc
test
in
adc
mov
decl
add
sub
into
dec
loop
xchg
dec
ljmp
sahf
cltd
into
mov
sbb
jns
cmpsb
add
adc
shr
add
hlt
sbb
pop
in
sbb
aaa
mov
pop
add
push
add
js
into
loope
imul
cwtl
push
into
xchg
nop
test
sbb
into
jle
push
data16
fmuls
add
jl
into
xchg
sub
pop
outsl
leave
or
imul
fsubl
pop
into
xor
fistpll
ret
ret
cmp
sbb
imul
jnp
pop
cmp
es
into
ret
int
js
jge
shlb
pop
adc
lds
xchg
pop
sbbb
dec
sbb
or
xor
je
push
ja
dec
push
int
or
call
pop
sti
push
jns
es
push
repnz
push
sbb
shl
push
and
repz
shll
mov
lea
call
add
cmp
ret
popf
or
or
testb
stos
jno
je
out
mov
xor
mov
test
add
mov
jle
jae
mov
nop
adc
movsb
pop
inc
popa
mov
repnz
xor
push
sahf
mov
cli
sub
jp
sti
inc
push
xor
mov
sub
stos
inc
mov
inc
ret
scas
pop
insl
xor
inc
adc
xchg
sbb
dec
mov
xchg
lea
jae
shr
rcr
mov
bswap
sbb
shrd
mov
shr
sar
adc
mov
jmp
pushf
movl
push
movb
pushf
push
movl
pusha
pushf
mov
lea
jmp
sbb
ret
popa
icebp
xor
daa
les
aad
mov
mov
mov
adc
jns
jae
lahf
aad
mov
test
cmpsb
dec
aaa
pop
shll
daa
sub
jnp
inc
je
lods
mov
loop
bound
popa
pop
pop
adc
and
add
mov
jecxz
loop
ja
dec
adc
xor
fmull
test
fnsave
test
sbb
lds
in
das
fcompl
mov
call
or
or
jae
ds
sarb
fsts
and
mov
jg
dec
out
gs
pop
aam
cmp
stos
stos
sub
loope
xchg
or
and
sbb
icebp
addr16
cmpsl
sbb
rcrl
xor
adc
adc
fldl
adc
lret
adc
fmull
enter
mov
jmp
adc
xor
or
rol
mov
movb
pushf
jmp
out
pop
mov
lods
fsubl
pop
into
sti
aas
movsl
sbb
push
or
push
mov
sahf
rcrb
xor
adc
pop
cmp
pop
cmp
sbb
pop
sub
cmpl
stos
jne
out
xchg
outsb
lahf
jo
ds
jl
mov
add
loopne
inc
outsl
bound
or
scas
iret
data16
jne
mov
pop
cmpsl
lods
sbb
cs
sar
rcrb
sbb
inc
add
inc
and
dec
adc
call
push
mov
popa
fbstp
sub
enter
rorl
aas
jmp
jl
jg
outsb
inc
idiv
jns
dec
push
sbb
ss
dec
xor
mov
mov
in
jl
in
xor
shlb
fildll
jbe
mov
xor
dec
mov
push
sub
movsb
and
cli
dec
mov
pop
xchg
enter
mov
stos
pop
mov
lahf
ds
adc
jns
mov
outsl
divb
cmp
je
mov
lods
fildll
and
pop
in
xchg
repnz
dec
je
enter
ret
pop
clc
adc
push
fstps
mov
ficoms
aam
mov
dec
sbb
fistpll
mov
std
sub
test
test
xor
movb
pushf
repnz
call
ja
sub
add
leave
je
imul
jbe
inc
sbb
stc
mov
dec
fldenv
xor
mov
sti
fldcw
in
mov
xchg
adc
dec
lods
ja,pn
jnp
les
add
adc
mov
sti
pop
subb
lea
cwtl
nop
and
mov
cwtl
inc
xor
cmp
insb
push
xor
stc
mov
inc
je
outsl
mov
push
cmp
or
ljmp
jg
mov
lea
call
rorb
in
out
ret
mov
pop
fs
dec
call
mov
mov
fcompl
and
adc
jns
mov
scas
divl
cmp
push
fwait
adc
and
mov
pop
and
outsl
cwtl
fs
sarl
scas
fbld
call
cmp
push
pop
and
xor
addr16
mov
pop
loopne
test
jo
lea
jae
pusha
jmp
test
push
xor
mov
lea
call
js
pushf
pusha
pushf
lea
jae
call
sbb
or
pop
xchg
shl
testb
int
pop
pusha
or
pop
mov
notl
xor
xchg
mov
andb
inc
xor
les
pusha
xor
lret
nop
cmp
dec
popf
test
inc
ret
push
fmul
xor
xor
cltd
aas
pop
jle
lods
movsl
mov
push
inc
pop
push
jo
test
cmc
cmc
outsb
jns
aas
pop
inc
es
pop
outsl
insb
aas
test
fs
popa
sub
call
mov
out
ret
fcoms
js
cmp
movb
sti
push
inc
movl
lods
sarl
pop
xor
inc
jne
mov
xchg
loope
cmpsb
ljmp
sahf
fistpl
mov
aas
and
das
xlat
pop
pop
arpl
add
bt
cmc
rol
mov
pushf
push
xor
mov
bt
cmp
cmc
not
call
pushf
lea
je
pushf
pusha
pusha
lea
jmp
repz
arpl
aas
cltd
xlat
jnp
xchg
leave
dec
inc
dec
fsubrs
es
cmp
mov
jmp
pushf
pushf
inc
cmpsb
cli
sub
int
adc
cmp
sbb
cmp
aam
and
out
ljmp
test
push
pop
pop
mov
das
clc
mov
pushf
lret
mov
sbb
stos
es
lds
xchg
ret
insb
cmc
js
push
cli
xchg
aaa
stos
jmp
push
jmp
lret
arpl
in
push
loopne
fyl2xp1
dec
xchg
int
jb
adc
mov
sub
add
sub
sbb
mov
jno
sar
push
cmpsl
ret
flds
dec
pop
xchg
negl
cmc
dec
ja
cmp
out
push
jl
pop
sbb
cmpb
bound
mov
out
xchg
ret
in
xchg
ret
es
in
inc
mov
ljmp
sub
xor
inc
lahf
movsl
adc
dec
adc
int
nop
sbb
stos
cmp
clc
lods
dec
jnp
xorl
ljmp
cmp
inc
and
xor
scas
dec
lahf
sub
mov
dec
pop
cmp
adc
mov
loopne
notl
xor
inc
mov
subb
cmp
icebp
pop
repz
mov
adc
pushf
lea
call
pushf
bt
clc
sub
pushf
pusha
lea
jne
push
pushl
lea
jnp
pushf
lea
call
pusha
lea
jmp
sub
icebp
xchg
ret
addl
sti
es
rorb
xchg
idivb
dec
jmp
xorb
fldcw
sbb
jns
push
int3
mov
dec
lods
or
xchg
pop
mov
push
and
es
test
mov
jecxz
add
and
sub
mov
les
bound
fisubs
mov
jmp
dec
dec
divb
sbb
sbb
aad
test
out
iret
dec
mov
idiv
and
mov
ret
roll
xor
lcall
add
loopne
add
push
mov
or
add
mov
ljmp
mov
mov
aas
and
out
mov
xchg
sub
xor
loope
cmc
jb
stos
in
sbb
push
jno
sbb
test
mov
dec
je
xor
push
pop
sbb
jge
mov
mov
push
aad
out
ret
mov
shll
out
fwait
hlt
inc
outsb
and
pop
inc
or
movsb
jb
lahf
xor
rcrb
cmp
stc
jbe
mov
push
lret
or
not
ret
addr16
pop
mov
scas
out
mov
fsubrs
sti
xor
ffreep
in
mov
mov
stc
pop
pop
and
jnp
rcl
test
mov
stc
clc
push
and
cmp
cmc
add
pusha
mov
pusha
push
lea
jmp
xchg
mov
ret
sbbl
imul
enter
loop
icebp
mov
adc
pop
repz
pop
xor
inc
sub
incl
cmpsl
inc
cmp
pop
mov
mov
jecxz
cltd
mov
xor
pop
imul
repnz
fcmovu
mov
movsb
bound
dec
sub
fwait
sahf
and
xchg
jae
mov
ror
ja
push
insb
jmp
ret
cmp
mov
xor
mov
ret
push
dec
jge
pop
or
and
or
and
pop
outsl
sbb
jns
mov
ficompl
imul
dec
jp
sub
mov
mov
mov
xor
or
incb
lcall
or
mov
xor
inc
inc
mov
hlt
mov
mov
mov
loopne
rorb
call
pusha
mov
pushf
pushl
ret
mov
pusha
movw
mov
pushf
movb
pusha
lea
jmp
pushf
lea
je
stc
or
call
mov
pusha
mov
movb
pushf
pushl
ret
inc
movb
push
adc
pushf
mov
mov
mov
pushl
ret
push
mov
pusha
and
arpl
xor
ljmp
pop
out
cwtl
jbe
dec
sub
fs
testl
mov
push
xchg
loop
gs
lock
xor
fnstenv
xor
inc
repnz
xchg
xor
lret
sub
mov
inc
xchg
and
adc
push
out
push
sar
out
inc
pushf
imul
jns
insb
lea
lahf
cmp
arpl
and
push
pop
jns
add
cmp
fisubrs
jg
inc
pop
sub
dec
mov
inc
mov
stc
mov
ljmp
imul
xchg
fldt
nop
fwait
jecxz
in
test
gs
pop
test
cmp
inc
jmp
jmp
add
push
movb
pushf
pushf
lea
jmp
jmp
pushf
call
jmp
xcrypt-ofb
cmpsl
imul
arpl
dec
fildll
hlt
mov
icebp
hlt
cmc
pusha
in
mov
push
je
imul
xor
aad
pushl
cmp
in
adc
xchg
std
pop
loope
inc
fsubp
test
orl
popf
or
icebp
inc
fs
stc
rorl
and
int
or
lock
and
jno
dec
push
arpl
fcmovnb
insb
inc
or
ss
adc
fisttps
daa
lods
push
cmp
jg
add
pushf
mov
call
sbbb
out
ret
push
mov
push
cwtl
add
cmp
cld
int
arpl
xor
lods
addb
cmp
shll
aas
inc
mov
cmp
testl
push
and
pusha
xor
clc
push
adc
rorl
xchg
xchg
mov
xchg
and
aam
cmpsb
xor
es
and
lea
je
test
push
add
jl
stc
add
cmp
bt
cmp
jmp
jmp
jnp
out
ret
pusha
popf
idivl
test
std
cltd
push
dec
or
repz
push
jle
pop
adc
sahf
push
xor
daa
adc
cmp
push
cmp
ljmp
movsb
xor
cmc
or
data16
mov
xor
jmp
mov
push
iret
cmp
adc
pop
xchg
in
mov
lret
fcompl
in
stc
fbld
adcb
cmc
std
add
xchg
mov
ret
cwtl
cs
jns
inc
mov
add
aad
cli
cmp
sahf
cmp
or
sbb
jns
dec
and
lahf
cmp
leave
insb
aad
and
inc
mov
inc
xchg
data16
rcrl
pop
cmc
stc
lahf
test
movsb
xor
adc
aad
sub
scas
mov
ljmp
fcompl
dec
imul
lret
cmpb
sbb
push
call
loop
mov
test
mov
mov
sbb
dec
pushf
cld
mov
jg
aam
cmc
lahf
dec
push
xor
xlat
pop
push
movsb
cmp
adc
popa
filds
mov
jae
sub
fsubl
mov
dec
sub
mov
imul
mov
push
idivb
xchg
mov
mov
xlat
add
loop
shlb
es
mov
ret
cmpsb
fs
adc
push
or
mov
xchg
nop
lods
mov
jmp
clc
es
mov
aaa
shr
push
repnz
imul
xor
inc
es
jg
pop
lds
loope
mov
shr
adc
xchg
js
push
add
ret
cmp
aaa
test
jge
les
aam
or
sahf
sarb
jns
adc
and
push
ljmp
mov
push
lods
clc
out
sti
adc
push
insl
jns
pushf
and
cmp
push
jne
jbe
adc
loope
out
clc
lods
clc
into
xor
das
cmpsl
ljmp
cld
nop
sbb
jle
cmp
jne
lods
mov
enter
pop
xlat
bound
sbb
mov
or
ret
sub
sbb
and
js
addr16
jb
pop
jo
das
stos
dec
push
enter
mov
cmpsb
mov
xor
leave
repnz
mov
fimull
std
sub
and
push
xchg
mov
dec
mov
mov
popf
movsl
fs
push
xchg
adc
cltd
pop
out
inc
dec
stc
outsl
popf
add
cmp
jb
or
pushf
data16
or
cmpsb
mov
int3
jno
ljmp
push
cmpsl
push
xor
xor
fisttpl
push
hlt
out
iret
stc
xor
or
cmpsl
adc
dec
fistl
repz
lods
xchg
push
ror
in
mov
cmp
stc
in
mov
xchg
sbbl
pop
mov
out
ret
mov
dec
ret
imul
jg
addr16
pop
loopne
stos
div
outsl
jno
push
jne
aas
loope
mov
and
fsubl
ja
dec
frstor
inc
or
push
mov
sub
in
into
out
data16
scas
pop
movsl
and
sub
dec
sub
cwtl
mov
add
into
mov
xor
adc
pop
add
shl
mov
dec
out
cmp
add
mov
mov
ficompl
in
int3
popa
aam
jns
ss
mov
dec
mov
ret
hlt
or
ficomps
inc
call
mov
adc
rorb
push
iret
pusha
adc
or
xchg
loopne
inc
pop
dec
add
inc
jb
popa
or
pusha
cmp
sub
add
addl
fwait
pop
orb
sbb
xchg
cmp
mov
in
outsl
jmp
stc
pushf
in
fildll
add
cld
js
and
and
mov
test
dec
cmp
in
rcrb
rol
pop
or
xorb
in
jge
adc
push
std
nop
neg
out
xchg
sub
cmp
push
add
or
push
and
sarb
jmp
popa
sub
mov
sub
and
xchg
icebp
mov
push
add
cs
sbbb
sbb
test
fs
inc
cmc
gs
pop
inc
pop
pop
lahf
enter
stos
xchg
dec
pop
jae
insb
push
dec
pop
loop
loop
inc
cs
add
cmp
ja
shr
setp
cmp
dec
sub
rcl
add
shld
mov
clc
clc
mov
test
repnz
push
push
movb
push
lea
jne
lahf
movb
bswap
pusha
mov
bswap
cwtl
movzbw
sets
lea
mov
pusha
pushf
push
movl
jmp
test
enter
lahf
icebp
sub
loop
sahf
cmp
jae
pop
xlat
mov
movsb
std
lock
jns
adc
cmp
and
or
inc
jmp
mov
leave
cmp
mov
ficomps
inc
jmp
lcall
fsts
cmp
pop
outsl
push
sbb
jae
loop
mov
sarl
pop
and
sbb
ficoms
push
popa
stc
inc
lret
mul
push
mov
rcrb
jne
imul
and
jns
pop
inc
lret
cmp
out
data16
aad
add
lahf
popa
out
mov
push
cmpb
cmp
in
out
cmp
xor
mov
pop
rorl
pop
aad
fcmovnu
popa
leave
jo
sbb
daa
out
mov
out
fnstsw
mov
or
cmpb
call
pusha
pusha
push
lea
jae
cmp
call
ror
test
test
mov
cmc
mov
clc
add
pusha
test
pushl
lea
jne
jmp
pushf
lea
jae
call
stc
bt
bt
sub
cmp
call
sbb
xchg
out
ret
mov
jl
push
jge
and
jecxz
adc
sub
jne
cld
push
jne
mov
outsl
jbe
stos
sub
jle
xchg
cmp
or
les
push
jb
sub
mov
and
sbb
mov
dec
pop
cltd
lea
ljmp
clc
test
pop
das
aaa
push
shll
dec
lret
xor
roll
adc
ret
inc
push
clts
or
add
adc
xchg
popf
mov
sub
pop
jl
push
arpl
aaa
dec
gs
out
sahf
out
gs
pop
sbb
leave
xor
mov
loope
and
daa
adc
mov
dec
pop
adc
in
jmp
lock
inc
rorl
push
add
sbb
inc
sbb
xchg
fwait
test
lods
in
and
fcmovbe
scas
mov
dec
jae
and
cmp
pop
fwait
mov
stc
decb
imul
imul
sti
and
iret
mov
inc
mov
inc
mov
xor
push
cld
jge
movsl
lret
and
pushf
test
xchg
mov
xchg
icebp
icebp
dec
sub
imul
mov
in
mov
rolb
loope
pop
aas
xor
scas
mov
mov
xlat
rol
into
data16
mov
int3
and
mov
mov
movsb
addr16
push
cld
push
lret
inc
imul
jae
adc
loope
out
ret
push
jp
push
fidivrs
test
jno
loop
ja
jecxz
mov
outsb
out
push
popf
and
xchg
aam
cmp
pop
and
adc
testl
or
mov
add
xlat
and
arpl
loopne
jbe
xchg
punpcklbw
or
lock
hlt
sarb
cmp
rcrl
and
mov
clc
stc
stc
jmp
bt
mov
cmp
call
jmp
push
xchg
out
ret
jno
pop
fmuls
bound
outsl
mov
popa
dec
mov
dec
fnsave
mov
xor
fsubr
pop
xchg
sbb
push
movlps
xor
jo
lods
fldcw
imul
rclb
out
lret
clc
es
pusha
cmp
repnz
pushf
movb
lea
jne
movsbw
bswap
sete
seto
movb
sets
push
pusha
lea
push
call
pop
cmp
mov
pop
mov
inc
js
leave
insl
les
mov
xorl
mov
cmpl
in
xor
inc
iret
lock
mov
cmc
or
mov
lret
out
incl
adc
xchg
out
ret
lock
and
mov
push
fistpll
rclb
popl
push
out
cmc
outsb
cmp
pop
xchg
and
jno
or
sbb
pop
imul
jl
jmp
sbb
inc
cmpsb
loop
popf
jo
mov
cmc
popf
movsl
sbb
jecxz
andb
add
adc
xchg
iret
ret
into
mov
pop
jae
jp
imul
nop
lahf
pop
xchg
adc
inc
pop
cmp
cmpsb
cmp
pushf
xchg
push
call
movb
pushf
jmp
insb
xor
xchg
out
ret
xchg
pop
fcomps
roll
test
pusha
inc
and
in
dec
sbb
jge
inc
lods
xor
andb
and
aaa
cmp
daa
xchg
shlb
dec
mov
jbe
loope
js
popa
testb
in
je
mov
test
adc
xchg
push
sbb
fidivs
sbb
pop
fdivl
loopne
jmp
sbb
ljmp
lret
add
jmp
loopne
fs
out
ret
ss
mov
jmp
dec
inc
mov
aad
xor
push
pop
sbb
push
fidivrs
roll
dec
add
lods
pop
mov
xchg
sbb
pop
lock
lret
pusha
icebp
jmp
shll
add
popa
cmp
cs
es
mov
loopne
iret
loope
cltd
jnp
fwait
sub
outsb
push
dec
call
sbb
jae
hlt
scas
lcall
add
loop
add
jns
jg
xchg
out
ret
stos
sti
cwtl
add
insl
icebp
cltd
aas
jle
in
in
scas
push
and
das
lahf
daa
xor
loope
jle
cmp
out
movsb
call
into
pop
jecxz
outsb
adc
cmc
insb
les
shrl
fcoml
xchg
mov
nop
std
mov
mov
xor
and
inc
aaa
jne
call
jae
push
das
jl,pn
out
inc
sub
cmp
cmpsl
inc
inc
xor
in
inc
dec
dec
sub
mov
ds
adc
adcl
bt
stc
xor
mov
lea
call
jmp
xchg
jne
cltd
out
ret
inc
mov
push
xchg
or
mov
outsb
sub
idiv
daa
jne
jnp
or
mov
xchg
scas
cmpsl
jb
test
and
stos
iret
dec
inc
pop
and
jecxz
ret
test
xor
test
jecxz
int
test
inc
fdivrl
aad
rol
loopne
pop
or
adc
adc
andb
aaa
or
mov
or
mov
stos
pop
addb
psubw
repz
xchg
int3
icebp
ret
aam
data16
pusha
pusha
pushl
jmp
dec
pushf
clc
clc
pushw
popfw
jmp
lea
jae
jmp
int
mov
adc
aas
mov
int3
sbb
jno
dec
insb
inc
stc
cmc
addr16
scas
jae
scas
ficompl
js
inc
dec
in
add
rclb
dec
hlt
gs
in
xor
mov
sbb
dec
repz
test
mov
push
xchg
test
mov
jmp
rep
bswap
call
call
push
ret
mov
sahf
xor
enter
and
sti
std
call
adc
fstpl
outsl
mov
ficoms
jp
mov
shlb
inc
inc
loope
xchg
xchg
fbstp
jnp
ret
addb
aaa
sub
bound
aas
paddw
inc
dec
add
out
repnz
data16
shr
nop
push
stos
mov
icebp
scas
pop
push
mov
fs
or
cltd
mov
pop
pop
in
stos
js
cmp
arpl
push
mov
or
mov
int3
inc
xor
sub
into
nop
repz
ja
rcll
sub
lret
int
repnz
or
andb
fiaddl
imul
sub
sbb
xchg
sbb
dec
adc
push
lds
jg
xchg
rcrb
pop
pop
or
test
filds
mov
movsb
lock
call
test
in
dec
jo
insb
sarb
jg
pushl
sub
bt
mov
test
stc
cmp
movb
lea
ja
bt
stc
cmc
jmp
jl
xor
adc
out
imull
stc
cmpsl
lret
push
push
repz
cltd
sub
fidivrs
int
sub
jns
js
je
cmp
cld
pop
fstpl
mov
xor
aas
jns
inc
add
jle
jg
sbb
mov
jge
pop
inc
xchg
loope
sbb
popf
cmp
fildll
cwtl
push
je
mov
sahf
jae
adc
hlt
adc
mov
lret
mov
mov
shlb
in
ss
pushf
jmp
je
dec
pushf
out
ret
pop
ljmp
pop
lods
pop
dec
subl
daa
xor
jge
mov
or
jmp
js
jb
xor
aaa
cmp
scas
push
data16
loopne
std
leave
pop
mov
outsl
repnz
inc
mov
leave
mov
push
jb
lods
mov
and
lods
mov
mov
cmc
std
jmp
ds
hlt
ret
mov
popa
push
mov
divl
pushf
mov
call
cli
fwait
ja
out
ret
out
sbb
jns
adc
in
fs
mov
mov
mov
xor
cmp
sbb
push
rcll
shr
push
stos
in
xor
jle
and
ss
mov
xchg
filds
push
mov
mov
es
bts
lea
mov
call
add
pusha
pusha
lea
jmp
jmp
ja
jp
out
ret
cmp
add
jge
in
icebp
imul
mov
ljmp
loopne
sbb
loope
pop
loop
adc
popa
test
imul
idiv
dec
aam
sub
mov
sbb
cltd
pop
push
idivl
loop
and
scas
xlat
push
movsl
ret
daa
adc
ret
test
jb
aam
pop
dec
mov
movsb
jns
stos
lret
mov
stos
mov
sub
cmp
mov
fwait
push
xor
inc
les
std
mov
mov
ret
mov
push
jne
repz
ja
push
dec
or
iret
andl
jne
out
sub
push
xchg
jne
mov
mov
push
jge
xor
push
jo
jns
xchg
lcall
ret
xchg
test
adc
jmp
adc
ljmp
adc
xor
sbb
push
mov
cld
in
sbb
aaa
fcoms
mov
jne
inc
dec
repnz
inc
adc
insb
pop
dec
data16
leave
cltd
mov
and
dec
and
jne
insb
xchg
leave
int
jbe
push
sub
hlt
or
pop
fwait
adc
push
add
sahf
out
ret
inc
mov
jnp
fcmovu
push
bound
int
dec
mov
lret
out
jno
mov
xchg
call
divl
xchg
dec
nop
mov
mov
inc
push
js
outsl
int3
cmp
dec
bound
inc
push
movsb
mov
mov
iret
lods
movsb
jg
inc
add
adc
push
cltd
mov
pop
jb
pop
inc
call
sti
jno
dec
in
dec
cmc
push
stc
add
call
lea
jae
cmp
cmp
pushf
call
push
lea
ja
stc
jmp
pushf
xor
clc
lea
ja
cmc
test
not
push
xor
push
movw
pusha
pushl
dec
std
std
pushw
popfw
movb
mov
call
and
inc
lahf
out
ret
push
in
out
add
push
in
dec
jnp
fwait
icebp
cmp
jnp
pop
fadds
xor
jae
push
aam
push
jmp
ret
xchg
out
into
add
cmp
rcl
jle
fs
cmp
or
scas
rcl
loop
dec
inc
add
jmp
push
into
or
lahf
out
ret
repz
mov
xor
and
sbb
xor
push
sbb
pop
ficompl
daa
repz
mov
mov
mov
add
out
mov
sahf
or
pop
adc
pop
in
movsb
lcall
into
ljmp
pop
mov
push
in
outsl
jbe
jp
push
in
add
mov
pop
xor
imul
adc
add
add
jne
gs
xor
fs
insb
add
or
ja
shrb
xor
inc
ret
lods
lock
outsb
or
and
sbb
push
shlb
gs
jl
xchg
jb
or
test
clc
out
push
in
jl
inc
insb
or
cmpsb
jns
xchg
mov
pop
call
js
in
repz
les
test
insb
sub
xchg
fldt
fcom
jbe
or
mov
lahf
jnp
adc
xchg
dec
mov
or
pusha
xchg
dec
dec
aad
pop
gs
lock
pop
push
fimuls
stc
loope
cmc
test
cs
mov
xchg
std
out
xor
xchg
das
sar
cmp
shll
out
insb
xorb
xchg
int3
loopne
loop
push
cmp
mov
cmp
dec
mov
mov
ja
mov
mov
shrl
or
lahf
adc
add
mov
xchg
and
sbb
dec
or
sub
int3
ficoms
pop
loopne
or
pusha
rep
pusha
lea
mov
pushf
pushf
lea
jmp
icebp
lods
mov
cmp
sbbl
add
enter
jmp
jp
sub
idiv
and
xor
mov
gs
cmp
lds
jns
push
sbb
ret
ret
sub
cmp
stos
ja
xor
or
imul
clc
pop
cmp
xor
inc
rcl
dec
push
jb
xchg
mov
sbb
cli
std
addb
sar
fnstcw
inc
or
or
in
pop
into
loope
scas
sub
inc
out
std
jp
jae
cmp
cmp
jae
mov
jns
pop
mov
jae
lcall
stc
jae
lcall
pop
mov
jae
pop
mov
jae
pop
mov
cmp
pop
cmp
rcrl
ja
fs
je
pusha
call
call
sti
pushf
jbe
out
ret
cmp
and
mov
pop
sbb
cmc
das
js
dec
pop
cmpsl
jb
or
clc
ss
jp
ss
rcrb
jp
cmp
adc
pushf
imul
lock
push
adc
mov
mov
sub
jnp
sbb
out
ret
xchg
cmp
popf
sub
adc
into
xchg
or
mov
sub
mov
pop
icebp
push
mov
cmpsb
xchg
jae,pn
or
and
fcomps
test
test
mulb
push
out
bound
popa
in
and
mov
or
out
and
xor
cli
lret
mov
xchg
popf
call
sbb
mov
pop
ret
adc
cs
jae
stc
jo
repz
dec
ud2
clc
jns
scas
cs
std
ret
lods
push
pop
sbb
and
out
xchg
cmp
in
pop
sbb
out
or
lods
mov
mov
mov
cltd
pop
pop
cmp
sbb
in
mov
xchg
dec
jp
or
add
push
add
mov
cmpsb
in
out
xchg
push
lock
std
std
addb
ret
jae
dec
mov
leave
pop
in
and
pushf
mov
pop
fidivl
xor
adc
jno
in
enter
and
aam
pop
lds
loop
sub
test
sarl
pop
add
push
inc
cmpsb
insb
push
in
xchg
push
mov
in
mov
cwtl
arpl
add
enter
fimuls
bound
sti
mov
adc
test
lods
daa
mov
call
ljmp
sbb
rcrb
xor
andl
sbb
push
frstpm(287
shrb
icebp
xor
push
push
xchg
aad
sub
ret
cmp
inc
sahf
rolb
mov
dec
lret
or
aad
repz
mov
fiadds
fcoml
lods
mul
xor
cld
nop
xlat
pushl
push
push
jnp
fmulp
in
xchg
pop
pop
dec
sti
cmp
cmp
out
popl
stos
andb
loop
mov
dec
ficompl
je
loop
cmc
cli
xor
pushf
add
cmc
add
push
mov
pushl
not
cmc
xor
push
jmp
pusha
call
cmp
call
call
mov
cmc
test
pushl
lea
je
xor
rcl
add
shld
ror
sub
mov
call
mov
push
pushf
mov
lea
call
call
jmp
cli
adc
movsb
out
ret
lret
bound
lcall
mov
outsl
in
xlat
mov
mov
xchg
pop
add
and
push
addl
subb
ret
push
inc
std
lret
mov
aam
pop
bswap
adc
cltd
cmp
push
dec
push
icebp
xchg
adc
notl
sub
pop
mov
xchg
xor
out
rolb
std
outsb
push
cmpsb
out
ret
gs
xor
pop
cwtl
fsubs
fwait
das
push
mov
cltd
lret
cmp
xor
and
dec
jge
push
jge
inc
imul
loope
pop
in
in
mov
jb
mov
hlt
pop
and
mov
out
dec
mov
xchg
pop
pop
xor
xchg
push
fisttps
lahf
pop
mov
fstl
movsb
mov
sbb
cmp
jae
fisttpll
repz
sbb
lcall
xchg
in
out
mov
sub
push
outsb
icebp
xchg
adc
jns
leave
adc
lods
sbb
or
push
jae
xchg
outsb
out
fadd
ret
div
insl
jo
aam
dec
lock
adc
mov
cmpsb
dec
stos
je
sar
clc
sbb
aam
ja
sub
addr16
leave
cmpsl
lcall
jo
in
mov
scas
mov
jl
nop
cmpsl
out
ret
aam
scas
push
ret
inc
jae
inc
rcrl
inc
insl
imul
cmpsl
imul
in
stc
dec
xor
stc
negb
push
lods
mov
mov
xor
push
addr16
dec
or
pushf
rcrb
xchg
xchg
or
inc
cmpsl
out
ret
adcl
and
mov
fldenv
adc
jp
dec
xor
cmp
inc
mov
rcll
repz
je
or
xor
es
pop
shr
out
rcl
ds
add
push
xchg
test
shl
into
js
test
ret
add
popl
mov
pop
lods
cs
divl
mov
pop
push
mov
jg
out
popl
imul
xor
out
shll
xchg
lea
test
ret
xor
or
inc
lock
fistpll
ret
and
jbe
adc
jns
or
sahf
cmp
call
xchg
mov
mov
xor
push
mov
xor
xor
inc
xor
loopne
loop
int
cltd
in
mov
inc
pop
pop
es
inc
gs
outsb
in
mov
and
push
ds
dec
not
call
or
inc
test
ret
mov
xor
sarl
xor
notb
in
push
cmpsl
cmc
mov
mov
cmpb
xchg
xchg
mov
int3
sarb
dec
dec
aam
pop
push
out
mov
in
mov
xor
clc
in
mov
lcall
inc
mov
ret
mov
and
dec
test
add
pop
push
out
cmpl
xor
pop
pop
stc
fimull
cmp
outsb
xorl
mov
mov
mov
mov
jae
fisttpl
cmp
adc
mov
pop
call
jae
movsb
jbe
insb
jge
inc
dec
mov
testl
lahf
mov
xor
adc
mov
mov
movq
test
add
pushl
mov
lea
jmp
call
fsubrl
in
xlat
sub
mov
cltd
push
adc
outsl
sub
adc
xchg
std
push
mov
ja
pop
scas
cmpsb
jbe
dec
addl
sub
inc
and
not
sub
test
in
push
movsl
push
cli
jecxz
xor
cmpsl
sarb
clc
clc
cs
cli
sub
mov
clc
or
add
sbb
jl
jecxz
out
ret
faddl
push
and
and
imul
cmc
rcl
jnp
call
adc
movsb
test
cltd
in
dec
mov
mov
int3
inc
into
out
fisttps
push
stos
sub
mov
js
jae
sbb
inc
enter
cmc
mov
sbb
out
push
sahf
loopne
inc
or
push
xchg
add
shlb
shrl
mov
mov
jecxz
push
cmpb
call
imul
bt
jmp
in
ret
ret
std
pushf
dec
popf
mov
pop
addr16
popa
sub
shll
lahf
and
inc
xchg
loop
in
aad
dec
rcrl
jp
sub
imul
je
mov
std
xchg
outsb
cmp
aaa
test
int3
daa
imul
fcoms
mov
sahf
xlat
lods
cmpsl
jns
push
mov
popa
flds
push
fsubrs
dec
push
mov
dec
or
xor
push
jmp
cs
ss
fcompl
jne
icebp
je
pushf
jne
fistps
push
popf
lods
lret
xor
addr16
imul
and
scas
sbb
adc
pushf
pushf
push
lea
jmp
cmc
test
not
stc
test
bt
cmc
xor
jmp
in
xchg
jl
out
ret
dec
mov
mov
scas
mov
jmp
pop
dec
xor
into
pop
dec
push
mov
popa
or
pop
imul
xchg
mov
dec
inc
cli
mov
or
test
push
mov
xor
mov
aam
add
pushf
bound
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
fiaddl
cmp
incl
decl
mov
xchg
mov
not
pushf
mov
bswap
mov
lea
bswap
call
aaa
popa
xchg
lods
out
ret
aas
fcoms
arpl
xor
daa
cvtpi2ps
and
aaa
sub
push
xor
jmp
idivb
inc
test
mov
mov
rolb
lods
mov
and
jge
jo
push
dec
pop
jge
or
scas
es
stos
lcall
insl
or
jge
adc
pop
sub
in
mov
out
push
lahf
sahf
xor
xor
je
arpl
mov
sub
imul
stos
fisubrl
add
cmc
lcall
jl
dec
fcmovu
jg
mov
icebp
out
add
mov
jno
dec
test
mov
aas
mov
outsb
xor
push
push
inc
cmpsb
sbb
cltd
mov
mov
lods
inc
cmpsl
stos
fs
add
addb
imull
push
pop
pop
pop
test
rolb
xchg
jno
clc
xor
rorb
cmp
int
mov
stc
pushf
mov
xor
test
inc
outsb
sbb
lret
ret
mov
repz
push
mov
fcmove
fcomps
add
mov
cmp
push
bound
pop
incb
out
sbb
push
cmp
cli
mov
in
aas
movb
dec
insl
sbb
sbb
xor
loop
outsl
stos
dec
cmp
adc
mov
cmpsl
push
dec
pop
hlt
adc
add
das
fcoml
fistpl
imul
push
movl
repz
jbe
mov
push
fidivrs
frstor
stos
xchg
mov
gs
jle
testl
jns
lock
xor
add
ljmp
dec
add
scas
add
out
icebp
pop
ds
and
je
pop
jnp
andb
add
lcall
add
sbb
bound
jecxz
add
test
jns
and
cli
mov
dec
adc
mov
fiaddl
mov
scas
out
ret
cltd
adc
jmp
shlb
jo
imul
mov
pop
mov
shlb
mov
cmp
ja
sub
and
incb
test
loop
cmp
outsb
stos
ss
push
sbb
dec
dec
out
pop
inc
xor
sbb
icebp
vhaddpd
jg
jae
test
sti
adcl
ljmp
repnz
add
cmc
aam
mov
jmp
fstpt
dec
xchg
adc
ja
push
sbb
mov
pop
jmp
inc
sbb
xor
mov
mov
std
add
cmp
stc
inc
adc
adc
pxor
lds
cmp
cli
cwtl
mov
mov
and
fdivp
std
in
xchg
bound
adc
jae
sub
sbb
aaa
add
and
incb
xchg
clc
dec
jmp
test
inc
push
out
add
mov
xor
loopne
mov
push
sub
daa
aad
scas
adc
mov
icebp
mov
xor
movl
andl
push
dec
push
imul
ljmp
jae
cld
hlt
std
and
and
cli
or
xchg
jge
into
push
pop
imul
fwait
xor
out
ret
add
cmpb
xchg
pop
mov
aad
sub
ja
imul
cmp
mov
pop
xchg
std
lods
fbld
test
cmp
int3
add
and
or
out
push
xchg
cmp
fildll
cmpsb
inc
mov
mov
lock
ds
inc
clc
pop
ja
repz
lret
out
test
loopne
jns
cmp
xorb
mov
ljmp
jae
clc
adc
outsb
mov
and
aam
xor
mov
out
packssdw
aas
sbb
aam
icebp
push
mov
dec
push
mov
sarb
movsb
xor
mov
lds
outsb
pop
pop
mov
pop
fstl
sbb
idivl
ret
int
lret
xchg
dec
fucomip
fdivl
scas
dec
repz
outsb
cli
add
aas
les
xor
les
and
into
daa
fs
or
dec
mov
test
ljmp
or
adc
shll
or
dec
popf
out
imul
aas
arpl
movsb
and
add
in
cwtl
popf
mov
jno
fistl
shr
and
sarl
cwtl
pushf
push
enter
push
fcmove
popf
lahf
shll
xchg
fstcw
cwtl
dec
rcl
jmp
cmp
xchg
iret
into
jo
lahf
movsl
hlt
xchg
push
xlat
push
push
lret
arpl
mov
hlt
jmp
mov
adc
add
and
ljmp
rcrb
dec
jmp
mov
and
mov
push
mov
pusha
lea
jmp
dec
pushf
lea
call
pushf
bt
cmc
clc
cmp
call
lahf
pop
lcall
and
sbb
pop
out
xchg
push
out
mov
cmpsb
inc
or
jecxz
js
es
xchg
xor
push
mov
pop
pop
stos
jbe
sub
insb
out
fwait
or
push
and
sbb
mov
jmp
xchg
ja
enter
inc
mov
fs
call
pusha
adc
pushf
push
jmp
mov
jmp
call
pop
rclb
ret
xchg
push
aam
lcall
scas
or
lret
pop
xor
fsubl
jns
shlb
xchg
mov
movsl
pop
push
push
mov
inc
adc
jecxz
lds
loopne
scas
iret
jg
inc
movsb
rcr
jmpw
jecxz
dec
out
adc
push
stos
icebp
daa
pop
aas
cld
sub
mov
xchg
stos
test
xor
test
push
lock
std
std
mov
outsl
dec
mov
ret
jle
std
loopne
rcrb
das
outsl
add
pop
aas
ss
repz
cmp
jge
fxam
and
dec
xchg
and
aam
pop
lds
jmp
lcall
xchg
popa
xor
repz
movsb
arpl
xchg
push
push
test
cmc
popa
mov
gs
fmul
jb
inc
enter
fmuls
push
sub
mov
pop
xchg
xor
cli
add
mov
sub
mov
xchg
push
push
cmp
jns
push
je
lds
cmp
cmpsb
push
push
imul
jge
mov
inc
push
push
cwtl
inc
or
jno
mov
rcrb
int
jnp
or
pop
loop
pop
pop
sti
xchg
addr16
jecxz
mov
cmp
xchg
mov
outsl
push
jmp
inc
and
pushf
xor
call
cmc
neg
clc
rol
cmc
pushl
xor
call
call
adc
add
sub
add
push
adc
add
mov
and
ljmp
jo
clc
mov
ret
test
mov
imul
dec
mov
jne
jp
int3
sub
arpl
shl
sbb
lret
cmp
inc
add
mov
mov
imul
cmc
mov
out
dec
repz
or
add
cmp
and
stos
pop
dec
jle
jg
test
enter
and
pop
add
jg
inc
jno
push
pop
dec
ljmp
cmp
loope
and
lods
fsubl
add
jp
mov
add
lock
xor
sbb
xchg
add
lods
lret
jns
mov
int3
scas
xor
mov
stc
xor
add
jg
adc
mov
push
inc
pop
and
ss
mov
mov
das
lods
jle
lret
jp
cltd
xchg
sahf
loope
rclb
rorl
jnp
fcomps
scas
add
push
mov
jge
dec
rolb
pop
dec
imul
arpl
bnd
sbb
or
pop
mov
out
gs
mov
mov
cmc
stc
sub
cmp
shl
call
inc
dec
repnz
cli
ds
add
xor
pop
test
xchg
lcall
jl
dec
insl
and
ss
adc
adc
divl
loopne
pusha
pushf
lea
jae
cmc
push
clc
cmp
call
lock
leave
mov
ret
cmpxchg
pushw
imul
sti
sub
cltd
sbb
sti
and
push
std
bnd
adc
xor
xor
fisttpl
cmpb
inc
shll
adcl
shl
movsb
lock
iret
sbb
or
decb
mov
jg
sub
or
cmp
cmp
pop
jle
mov
mov
sbb
mov
das
adc
pusha
push
mov
not
lods
call
lea
call
jmp
cmp
jmp
sub
test
test
cmp
lea
jl
pusha
lea
jae
pusha
lea
jmp
push
popf
jne
out
ret
adc
ret
cwtl
imul
aad
jge
repz
js
int3
fstps
call
mov
jne
dec
int3
mov
sbb
jp
dec
lahf
repnz
fldenv
stc
inc
sbb
and
or
pop
loope
xlat
js
loop
arpl
hlt
popa
sbb
test
ret
add
mov
pop
add
xor
dec
aad
pop
in
xlat
js
fstp
fwait
sbb
pop
test
jns
dec
mov
scas
or
pop
jge
lea
add
cmpl
popf
pop
jmp
or
shr
fmull
dec
cmovbe
ds
in
adc
fidivs
xor
push
hlt
cmpsl
fisttpll
aam
rorl
ss
xchg
cmp
mov
jbe
and
inc
es
mov
iret
pop
push
jo
add
je
outsl
fs
gs
imul
add
inc
and
movl
lea
je
cmp
cmp
jo
pusha
push
pushf
lea
je
pusha
push
lea
jmp
mov
push
out
ret
imul
xlat
pop
sbb
das
test
ljmp
xor
mov
scas
lock
push
sub
dec
movb
fwait
daa
jne
test
loope
mov
adc
jge
xchg
jmp
shll
xchg
pushf
int
or
inc
sbb
push
xor
sbb
nop
jb
sahf
dec
imul
jmp
mov
neg
call
bt
add
push
pusha
pushf
mov
lea
jmp
sub
pusha
call
add
pushl
push
jmp
mov
pushl
mov
call
mov
bt
sub
jns
stc
add
pusha
pushl
pusha
pushf
lea
jmp
shl
mov
mov
btr
pushf
mov
test
add
pusha
jmp
jmp
mov
jmp
pushf
pusha
mov
movb
push
jmp
setb
pushf
setns
pushf
mov
pushf
push
pushl
jmp
jmp
pusha
inc
bswap
lea
movzbw
ror
cmp
sub
clc
and
ror
mov
cmp
add
call
push
movl
stc
mov
jmp
pusha
mov
jmp
mov
pusha
pushf
call
call
pushl
popl
pushf
pushf
lea
jmp
test
bt
xor
pusha
call
jmp
mov
rcr
neg
dec
mov
movb
clc
cmp
pushl
add
push
push
lea
jp
mov
pushf
push
pushf
lea
jmp
cmpl
movw
mov
pushl
call
aad
jne
iret
cmp
jae
jne
mov
push
jne
add
jne
iret
cmp
dec
dec
jne
aad
jne
in
xor
add
inc
jne
xor
jne
push
dec
jne
and
jne
mov
inc
jne
add
jne
inc
inc
jne
cmp
test
add
jne,pt
inc
push
jne
dec
dec
jne
aad
jne
imul
add
inc
jne
iret
cmp
inc
push
jne
rolb
mov
jne
aad
jne
mov
jne
adcl
add
jne
aaa
cmp
icebp
dec
jne
inc
dec
jne
aad
jne
inc
dec
jne
icebp
dec
jne
cmp
imul
add
jne
pop
push
jne
aad
jne
cmp
cmp
pop
cmp
cmp
add
pop
jne
mov
push
jne
aad
jne
jae
jne
imul
add
jne
pop
cmp
mov
push
jne
aad
jne
pop
dec
jne
dec
push
jne
pop
push
jne
sarl
jne
xor
jne
jp
jne
lods
push
jne
aad
jne
incb
add
jne
add
jne
dec
dec
jne
incb
add
jne
push
cmp
aad
jne
dec
cmp
adcl
add
dec
jne
in
xor
add
jne
je
jne
dec
dec
jne
push
xor
add
jne
add
jne
dec
push
jne
dec
push
jne
je
jne
rolb
pop
inc
jne
mov
jne
push
push
jne
imul
add
add
jne
dec
cmp
mov
pop
jne
xor
jne
fiaddl
add
dec
jne
je
jne
xor
jne
add
jne
dec
dec
jne
adcl
add
jne
and
jne
je
jne
mov
jne
aaa
cmp
adcl
ret
dec
jne
ret
dec
jne
xor
jne
fiaddl
add
add
dec
jne
mov
inc
jne
inc
inc
jne
imul
add
add
aas
jne
xchg
add
inc
jne
cmp
push
jne
sarl
jne
je
jne
jp
jne
dec
dec
jne
cmc
inc
jne
out
jne
pop
push
jne
incb
add
jne
je
jne
dec
dec
jne
dec
dec
jne
xchg
add
jne
mov
jne
adcl
cmp
add
add
jne,pt
adcl
add
jne
sub
add
push
jne
je
jne
icebp
dec
jne
xor
jne
divl
add
inc
jne
xchg
add
das
jne
cmp
dec
jne
and
jne
jp
jne
in
xor
add
dec
jne
in
xor
add
add
jne
xchg
add
jne
popa
aas
jne
incb
add
pop
jne
inc
inc
jne
je
jne
dec
push
jne
sarl
jne
xchg
add
dec
jne
dec
push
jne
cmp
iret
cmp
je
jne
ret
dec
jne
dec
dec
jne
in
xor
add
add
jne
dec
push
jne
incb
add
add
jne
aaa
cmp
icebp
dec
jne
fiaddl
add
xor
add
inc
jne
inc
push
jne
dec
cmp
inc
inc
jne
adcl
add
das
jne
incb
add
inc
jne
iret
cmp
adcl
xor
jne
sub
add
inc
jne
cmc
inc
jne
inc
dec
jne
aad
jne
and
jne
and
jne
test
add
jne
inc
inc
jne
inc
push
jne
imul
add
cmp
inc
inc
jne
inc
push
jne
dec
dec
jne
cmp
dec
jne
mov
jne
aad
jne
mov
das
jne
pop
inc
jne
jp
jne
inc
dec
jne
inc
inc
jne
jp
jne
incb
add
shlb
or
enter
btc
bsf
sub
clc
cmp
shld
sub
and
xor
btr
bts
stc
mov
pusha
sub
movb
pusha
pushf
mov
push
lea
jmp
add
bt
cmc
shld
jmp
pusha
mov
push
cld
pushf
call
add
pushl
pushf
pusha
mov
lea
jmp
pushf
movw
pushf
popl
push
pushl
popl
pushf
push
mov
pushf
lea
jmp
pusha
movzbl
stc
call
bsf
mov
call
mov
push
lea
jmp
dec
stc
bt
pushf
sub
test
pushf
stc
cbtw
test
jmp
mov
pushf
lea
jmp
mov
pusha
mov
lea
jmp
sub
call
mov
cmp
stc
movl
add
pushf
pushf
movl
mov
lea
jmp
cmp
push
sub
cmc
clc
stc
rol
test
cmc
add
pushf
call
pushl
mov
push
pushf
pushf
popl
pushf
mov
pushl
popl
mov
mov
movb
movb
lea
jmp
cmc
clc
cwtl
pushl
add
mov
clc
test
sub
call
mov
jmp
pushf
pushf
popl
pushf
mov
call
call
lea
dec
aam
das
lea
rcl
not
cmp
shl
sub
shrd
mov
lea
call
movw
jmp
stc
bt
sub
movb
jmp
pusha
mov
push
lea
jmp
xchg
sar
mov
inc
dec
movzbw
push
bts
sbb
xor
push
jmp
mov
pushf
call
pushf
mov
mov
push
pushf
mov
lea
jmp
pushf
push
pusha
pushl
popl
push
mov
lea
jmp
pushf
lea
jne
or
bts
jmp
mov
pusha
pushf
pushf
lea
jmp
push
test
mov
ror
ror
movzbw
mov
push
pop
mov
lea
mov
shrd
and
mov
sub
pushl
popl
bts
pop
clc
adc
movl
bsf
cmc
mov
clc
bt
add
push
pusha
pushf
lea
jmp
mov
pushf
mov
sub
pushl
jmp
movzbl
mov
lea
mov
jmp
mov
test
or
shl
mov
cmp
cmc
shld
shl
mov
shr
not
mov
btr
pop
or
mov
pop
pushl
popl
bsr
test
movl
btc
test
btc
mov
cmp
stc
movb
bt
add
pusha
mov
pushf
lea
jmp
add
jmp
pushf
popl
jmp
mov
jmp
jmp
call
mov
push
pushf
movw
lea
jmp
mov
pushl
mov
push
pushl
ret
movsbl
mov
jns
push
mov
pushf
mov
pushf
pusha
pushf
lea
jmp
pusha
pusha
clc
push
xchg
bt
stc
sub
stc
pushf
stc
push
cwtl
pushf
sub
jmp
pushf
popl
jmp
bt
xchg
sar
inc
sar
stc
mov
call
pushf
test
mov
add
pusha
push
push
lea
jmp
mov
rcr
mov
cmc
mov
clc
jns
add
call
bt
cmc
bt
add
jmp
jmp
pusha
pushf
mov
jmp
call
pushf
mov
jmp
jmp
pushl
popl
pushf
lea
jmp
call
dec
xor
add
cmp
mov
pusha
stc
clc
add
jo
sub
test
pushf
xor
pushf
pusha
jmp
mov
movb
lea
jmp
sub
lea
jae
shl
pusha
pushf
call
mov
jmp
add
movb
pushl
pushf
mov
mov
mov
pushf
pushf
movb
lea
jmp
mov
pushf
movl
call
pushf
popl
lea
jo
pushf
pushl
pushl
popl
push
lea
jmp
sub
add
pushf
movzbw
bsf
add
xor
mov
clc
pushf
cmc
call
pushf
call
pushf
popl
pushf
movw
jmp
pushl
popl
push
pushf
pushf
lea
jmp
ror
jle
mov
cmc
sub
test
cmp
stc
sub
pushf
rol
call
lea
call
cltd
call
rol
bt
jo
mov
cmc
bt
clc
mov
test
jle
push
push
sub
clc
pusha
shr
jmp
cwtl
pushf
sub
jmp
jmp
mov
push
lea
jmp
pushf
call
call
jmp
rcr
mov
btc
movsbw
shr
lea
push
cmp
sub
push
neg
pushl
cmp
push
and
mov
cmc
clc
push
add
pusha
pushf
mov
pushf
lea
jmp
mov
push
shrd
bswap
pushl
sar
btc
jmp
push
mov
movl
pusha
call
cmc
call
pushl
xchg
ror
bt
or
cmp
mov
sbb
jmp
mov
push
mov
push
mov
movb
lea
jmp
push
clc
test
xchg
shl
mov
pushf
mov
bsf
and
add
pop
mov
btc
push
rcl
push
dec
pushl
rcl
shr
clc
push
rol
mov
clc
clc
call
push
call
decl
lea
jno
pusha
pushl
lea
jne
pushf
mov
push
pushf
lea
jmp
push
pushf
pushl
mov
jmp
dec
and
movsbw
sub
xor
add
rcl
movzbl
stc
bt
pushf
cmp
mov
pushl
call
mov
pushf
jmp
and
pushl
pushf
btr
or
movl
test
dec
mov
pusha
stc
clc
add
push
movb
lea
jmp
rep
lea
bswap
mov
bsf
shl
bsf
mov
pushf
pushf
pushl
popf
mov
lea
jmp
mov
pushf
mov
repz
popl
call
mov
pushf
movl
repz
popl
test
clc
cmp
xchg
rol
movzbw
call
pushl
mov
pushf
push
pushf
repz
popl
test
cmc
pushf
pushf
xchg
shld
dec
clc
dec
mov
not
bsr
mov
neg
inc
bts
mov
ror
mov
clc
pushl
popl
inc
cmp
inc
movl
cmp
clc
sar
push
mov
clc
clc
cmp
test
add
pushf
pusha
mov
lea
jmp
cmp
push
pushf
lea
ja
call
pushl
call
das
xadd
movsbw
mov
sub
mov
cmp
sub
stc
test
shl
pushf
pushf
call
mov
pushf
jmp
push
jmp
call
movzbl
sar
neg
sub
cmc
shld
bt
xor
not
dec
bt
not
push
not
push
shl
btr
sub
movsbw
mov
movb
jmp
push
pushf
mov
pushf
pusha
lea
jmp
sub
lea
jno
stc
xchg
stc
call
pusha
bswap
mov
cwtl
mov
movb
mov
divl
jmp
movb
movb
xchg
pushl
call
pushf
push
push
mov
jmp
add
jmp
dec
cmp
cmc
sub
call
repz
popl
clc
bt
call
jmp
and
xadd
mov
inc
sub
mov
clc
test
sub
jmp
bt
stc
cbtw
cmc
cwtl
cmp
jmp
movb
lea
jae
push
repz
popl
pusha
push
pushf
cmp
mov
sub
rol
mov
shr
mov
rcr
push
call
call
mov
pushf
lea
lea
ja
push
mov
pushf
call
push
mov
inc
add
pusha
mov
setle
pusha
mov
pushf
pushf
lea
jle
pushf
mov
mov
mov
pusha
pushl
lea
jmp
mov
push
repz
popl
cmp
push
movb
xchg
pushf
mov
shld
bsf
and
xor
mov
push
rcr
not
mov
sar
rcr
bsf
bts
mov
shr
pushl
popl
jmp
mov
movw
mov
mov
lea
jmp
shl
call
pushf
popl
mov
call
mov
pushf
movl
lea
jmp
shrd
adc
mov
movzbw
or
bsr
add
shr
sub
bsr
or
clc
mov
push
shl
pushf
pushf
clc
call
cmp
call
push
pusha
push
dec
cmp
pushf
cmc
test
sub
jmp
stc
stc
sub
call
jmp
mov
cmc
push
sub
call
sbb
movzbl
push
clc
clc
sub
lea
js
cmp
pushf
clc
sub
pusha
pusha
rol
jmp
mov
call
test
cmp
add
cmc
pushf
pushl
popf
pushl
movw
lea
jmp
pusha
pusha
mov
pushf
call
pushf
pusha
mov
call
pusha
mov
mov
mov
push
pushf
push
mov
call
sub
push
call
movzbw
mov
sub
movsbl
mov
and
dec
pushl
popl
pop
clc
movl
rol
mov
call
mov
add
lea
js
mov
push
mov
mov
pushl
lea
jmp
mov
push
jmp
not
push
mov
pushf
mov
pushf
lea
cpuid
pushf
mov
cmp
test
sub
jmp
pushl
popl
movb
lea
jmp
aad
not
mov
mov
rcl
pushf
add
mov
stc
pusha
mov
pushf
not
jmp
mov
mov
call
pusha
bt
lea
cmp
jmp
mov
mov
movb
mov
movl
lea
jmp
jmp
pusha
mov
pushf
mov
lea
jnp
push
mov
pushf
jmp
shl
mov
xor
clc
mov
lea
mov
movzbw
clc
push
or
btc
bt
pushl
cmp
push
pusha
rol
pushf
movzbl
mov
bt
add
mov
movb
pusha
lea
jmp
jmp
jmp
jmp
pushl
movb
mov
jmp
push
movb
pushf
mov
jmp
jmp
xchg
shl
mov
movsbw
mov
pop
adc
mov
push
mov
shrd
not
stc
cmc
pushl
popl
and
btr
movl
rcl
bswap
adc
mov
stc
call
jnp
push
jmp
bsf
movzbw
mov
sub
shr
push
and
push
shld
ror
rcl
push
shl
rcr
lea
pushl
rol
rcr
neg
shl
push
pusha
shl
mov
mov
add
mov
mov
push
lea
jmp
jmp
push
pushl
popl
push
lea
jmp
pushl
mov
jmp
shrd
adc
shr
mov
bsr
shl
call
mov
movl
mov
pushf
pushf
pusha
movb
repz
popl
cmp
stc
xchg
sar
mov
shr
xor
sbb
shld
mov
rol
and
shld
mov
shld
ror
mov
shl
pushl
popl
neg
movl
and
bts
shr
not
mov
clc
add
pushl
pusha
pushl
lea
jmp
pushl
pushl
popl
push
pushf
push
lea
jmp
dec
clc
clc
test
cmc
not
stc
pushl
lea
bt
clc
movw
push
sub
stc
cmc
clc
mov
lea
jnp
cmc
stc
push
sub
push
call
push
xchg
call
jmp
push
jmp
pushl
pushf
popl
call
push
pushf
movb
mov
mov
pusha
pusha
mov
pushf
jmp
jmp
mov
mov
movb
push
pushf
popl
pushf
pushl
pushf
pushl
popl
pushf
push
movw
lea
jmp
clc
test
sub
call
push
clc
call
bts
mov
btc
and
mov
push
mov
pushl
jmp
push
add
pushf
inc
pushf
lea
jno
rol
bt
pusha
pushl
cmp
add
jmp
repz
popl
pusha
cmc
bt
mov
shld
mov
rcr
dec
mov
bts
mov
movzbw
mov
bt
shl
pushl
popl
add
ja
test
push
call
mov
push
mov
pushf
popl
mov
pushl
popl
movb
push
lea
jmp
bsr
and
lea
sub
pushl
mov
movsbl
pushf
movzbl
cld
mov
push
jmp
pusha
push
mov
pushf
lea
jmp
pushf
test
stc
xchg
cmc
mov
pushf
sub
mov
lea
jne
jmp
call
clc
cmc
sub
pushf
push
mov
pushf
mov
pushl
mov
lea
jmp
rcl
adc
cwtl
mov
or
mov
jmp
pushf
inc
jmp
mov
jmp
pushl
pusha
mov
push
lea
jne
repz
pushf
clc
clc
jmp
jmp
not
mov
stc
push
cmp
sub
pusha
dec
stc
cmc
pushl
ror
push
bswap
clc
cmp
bt
sub
call
mov
jmp
test
stc
not
jmp
push
mov
movl
mov
movb
mov
lea
jmp
push
call
mov
jmp
shr
pushf
mov
pushf
sub
pushf
cmc
stc
cmp
sub
pusha
pushf
cmc
rol
call
not
pushf
jmp
shld
pusha
neg
cmc
mov
lea
jle
sub
jle
clc
cmp
cmp
add
pusha
pusha
pushf
popl
pushf
push
pushl
popl
mov
pushf
pushf
movw
lea
jmp
jmp
sub
cmp
movw
stc
sub
pushf
jmp
btc
shl
movzbl
sar
add
bswap
inc
mov
rol
call
jmp
movw
pushf
repz
popl
jmp
call
daa
inc
bt
mov
bt
bt
pusha
add
lea
jbe
pusha
pusha
pushf
popl
call
pushf
pushf
popl
call
mov
push
pushf
pushf
repz
popl
stc
xchg
jmp
dec
push
pushf
clc
stc
sub
stc
jmp
jmp
call
stc
add
mov
adc
mov
bsr
rcr
and
pop
pushl
popl
bsr
mov
movl
btr
pushl
shr
mov
pushf
cmc
add
pushl
movb
lea
jmp
ror
pusha
shl
rdtsc
cmp
cmc
sub
pusha
jmp
shld
stc
mov
sbb
bt
setbe
sub
rcr
pusha
push
sub
clc
rol
call
stc
push
sub
pusha
clc
call
pushl
popl
mov
lea
jmp
mov
mov
pusha
pushl
mov
lea
jmp
push
rep
shld
not
cld
mov
lea
btc
sub
mov
test
pushl
popf
pushf
pushl
lea
jmp
test
add
cmc
bt
sub
mov
call
jmp
inc
cmc
bt
add
movsbl
movzbw
call
movzbw
pushf
mov
shrd
and
pop
inc
dec
bt
movzbl
pop
push
adc
mov
cmp
bts
cmc
mov
add
std
shld
mov
cltd
aaa
mov
btc
rol
setnp
mov
pushl
xchg
pushl
popf
jmp
pusha
mov
pushf
pushf
push
mov
lea
jmp
mov
push
mov
push
jmp
pusha
jmp
pushf
popl
push
pusha
pushl
popl
push
pushf
lea
jmp
mov
movb
pushf
popl
pushl
pushf
pushl
popl
pushl
mov
mov
lea
jmp
pushf
mov
mov
pusha
pushf
push
lea
jmp
stc
test
jmp
pushl
jmp
cmc
pushl
popl
push
or
movl
ror
bswap
dec
mov
jmp
daa
ror
mov
cmc
mov
neg
sete
mov
cmc
not
pusha
movw
not
call
mov
push
repz
popl
stc
push
push
mov
call
pushl
mov
mov
mov
push
mov
pushl
ret
pushl
popl
movb
mov
pushf
lea
jmp
cmc
add
pusha
pusha
push
mov
lea
jmp
lea
jne
bsr
push
sar
stc
xorb
movsbw
movzbw
mov
pusha
push
pushf
movb
lea
jmp
mov
call
clc
xor
pusha
jmp
pusha
stc
add
movb
mov
push
lea
jmp
push
repz
popl
pushf
call
pusha
pusha
mov
mov
jmp
bsf
mov
pushf
cmp
add
push
pusha
setbe
mov
pushl
mov
push
movw
push
lea
jmp
movl
mov
mov
pushf
movw
jmp
pushl
dec
jmp
pusha
cmc
pusha
sub
mov
cmp
cmc
jmp
lea
jne
push
pusha
pusha
mov
push
pushf
mov
lea
jmp
pushl
popl
pushl
push
pushf
lea
jmp
pushf
pusha
test
call
add
stc
bt
mov
pushf
pushl
sub
pushf
lea
jmp
js
cmc
test
pushf
add
pusha
pusha
mov
mov
pushf
pushf
lea
jmp
pushf
movb
mov
lea
movsbw
call
pusha
mov
mov
mov
push
pushf
push
pushf
lea
jmp
aas
sar
movsbw
mov
not
mov
pusha
mov
cmp
pusha
sub
cmp
shr
mov
call
push
pushl
popl
pushf
mov
pushf
lea
jmp
and
jmp
neg
cmp
xor
movzww
pushf
cmp
cmc
sub
push
neg
pushl
test
add
jnp
not
call
adc
movzbw
mov
clc
cmp
call
shld
test
btc
mov
mov
rcl
mov
cmc
test
call
repz
popl
call
pushf
push
movl
pusha
pushl
popl
pushf
push
pushf
pushf
lea
jmp
push
cld
cld
mov
mov
mov
std
push
cld
pusha
push
call
mov
rcr
clc
rcr
not
mov
shrd
pushl
popl
rcr
bt
inc
movl
pop
shld
mov
clc
add
pushf
mov
push
lea
jmp
repz
popl
bt
test
call
pushf
mov
pusha
mov
push
push
mov
jmp
jmp
call
jmp
jmp
mov
xchg
mov
movsbl
mov
pushf
pushl
ret
push
pushf
mov
mov
push
pushl
mov
jmp
pushf
mov
pushf
mov
call
pusha
shr
not
mov
and
seta
mov
test
add
call
test
and
push
mov
pushl
jmp
cmp
bt
jmp
xor
mov
pusha
sub
jmp
mov
mov
mov
pusha
push
lea
jmp
pushf
mov
pushf
pushl
repz
popl
push
test
stc
pushl
xchg
rcl
mov
shr
dec
sub
rol
mov
ror
mov
rol
movzbw
mov
bsr
dec
pushl
popl
or
inc
test
movl
cmp
mov
cmp
movl
add
pushf
pushf
pushf
mov
lea
jmp
pushf
mov
mov
mov
movw
lea
jmp
pushl
mov
pushl
jmp
call
pushl
mov
jmp
cmp
pusha
pushf
pushl
popl
stc
jmp
jmp
neg
xor
cmc
mov
or
pushf
sub
pushf
mov
test
call
lea
mov
or
bt
add
neg
mov
cmp
add
jmp
jmp
pusha
mov
push
lea
jmp
jmp
mov
pushf
popl
movw
pushl
popl
pushl
push
lea
jmp
push
mov
shrd
add
mov
test
test
add
pushf
mov
pusha
lea
jmp
call
push
bswap
stc
rcl
mov
cmp
clc
jmp
lea
mov
mov
mov
pusha
lea
jmp
inc
mov
pusha
test
add
pusha
pushf
mov
call
mov
mov
mov
mov
lea
jmp
lea
jne
pusha
bt
cmc
sub
pusha
pushl
pushf
xchg
call
pushf
pushf
call
not
cmp
cmc
clc
add
call
call
push
pushf
popl
push
push
pushl
popl
push
pushf
lea
jmp
cmp
cmp
add
pusha
movw
pushl
lea
jmp
clc
shr
movb
mov
lea
jge
pusha
pushf
pushf
popl
mov
pushl
popl
mov
pushl
push
lea
jmp
pushf
cmp
sub
jmp
push
movb
movb
mov
jmp
mov
pushl
lea
jmp
shrd
movsbw
lahf
test
mov
bt
bt
sub
pushf
mov
pushl
lea
jmp
pusha
movw
push
dec
mov
call
movsbw
mov
shld
xor
mov
shl
mov
neg
clc
neg
mov
bswap
pushl
popl
not
sar
push
sbb
movl
lea
movzbw
not
btc
mov
cmc
add
pushf
pushl
pushf
lea
jmp
add
push
inc
pushl
call
cmc
cmc
pushl
add
stc
clc
pushf
add
call
or
pushf
call
test
test
clc
not
cmc
cmc
add
cmp
stc
clc
bt
xchg
cmc
clc
sub
pusha
pushf
cwtl
call
cmp
pusha
pusha
push
pushf
lea
jne
rcr
sar
ror
cmp
xorb
lea
pop
push
lea
jmp
jmp
cmc
add
push
movl
pushf
pushf
lea
jmp
lea
ja
jne
mov
mov
stc
pusha
and
mov
add
jg
cmp
push
pusha
push
lea
jne
bsf
test
xorb
setne
movsbl
pop
pushf
push
pushf
lea
jmp
pushf
pushf
mov
pushf
call
call
not
mov
cmc
lea
lea
jbe
stc
sub
cmc
cmc
call
mov
push
pusha
mov
call
stc
push
jmp
pushf
popl
pushf
mov
pushl
popl
push
pusha
mov
mov
lea
jmp
add
pushf
call
jmp
pushl
rol
cmc
stc
add
cmp
add
bt
bt
add
jmp
sub
stc
mov
movb
mov
cmc
cmc
sub
push
call
movb
push
repz
popl
pushf
pushl
xchg
ror
btr
mov
bswap
movsbw
neg
mov
jmp
sub
cmc
pushl
shr
pushf
pusha
movb
mov
movb
call
pushl
mov
push
call
mov
jmp
dec
call
pusha
jmp
clc
jmp
call
sub
pushf
add
pushl
pushl
mov
pushf
pushf
lea
jmp
pushf
bt
add
cmp
pusha
lea
jnp
pushf
xchg
pushf
jmp
pusha
pushf
pushf
mov
mov
pushf
call
pusha
pusha
movw
shl
jmp
pusha
cmp
add
jmp
not
dec
clc
sar
mov
push
call
pushf
call
jmp
mov
pusha
pusha
pushf
and
mov
bt
cmp
call
cmc
and
push
lea
jp
pusha
mov
push
pushf
popl
pushf
pushf
jmp
pusha
pushl
mov
jmp
mov
pushl
mov
pusha
pusha
mov
jmp
pushf
push
mov
call
sub
push
mov
pushf
movb
pushf
pusha
lea
jmp
lea
jbe
push
pusha
pusha
pushl
movl
repz
popl
stc
cmp
xchg
rcr
and
shrd
movw
mov
not
test
mov
shrd
mov
ror
rcl
push
mov
adc
mov
xor
jmp
ror
mov
pusha
call
push
push
mov
pushf
call
pusha
mov
pushf
jmp
repz
popl
cmc
push
bt
mov
call
add
add
pusha
mov
call
inc
notl
xor
bsf
xor
mov
cmc
pushf
push
clc
sub
jmp
movl
pushf
mov
pushl
mov
push
mov
movb
pushl
ret
add
push
pushf
pushf
mov
lea
jmp
pusha
jmp
jmp
mov
not
pushf
pushf
movzbw
mov
push
not
pusha
repz
popl
shld
mov
shl
bswap
xchg
adc
push
inc
pop
mov
rol
mov
shld
lea
mov
movsbl
xor
pushl
popl
bswap
stc
movl
xadd
bsf
sub
adc
mov
shl
cmc
add
lea
not
btc
not
movsbl
sets
bswap
movsbw
shl
mov
xadd
sub
bts
or
add
mov
adc
setns
mov
cmp
xadd
add
bsr
cmp
xadd
mov
jmp
pushf
pushf
mov
pushl
lea
jmp
push
ror
rcl
lea
bt
call
push
mov
test
mov
sub
pushl
mov
pusha
lea
jmp
push
call
dec
push
shl
movsbw
movsbw
mov
test
pushf
add
pushl
pusha
pushl
lea
jmp
shr
stc
or
test
xor
jmp
jmp
push
pushf
jmp
push
bts
not
inc
push
xor
push
jmp
pushl
mov
movb
mov
pusha
movw
push
lea
jmp
call
push
mov
mov
pusha
mov
movw
lea
jmp
jmp
pusha
sub
call
lea
jb
pushf
pushf
call
movsbw
sbb
mov
lea
test
mov
bsr
rol
movzbw
mov
shl
bswap
mov
rcr
pushl
popl
neg
movzbl
ror
sub
movl
jmp
shr
pushf
call
call
jmp
sub
test
push
test
stc
neg
pushf
test
bt
jmp
call
btc
mov
bts
sub
shrd
mov
or
stc
adc
mov
stc
test
cmp
add
cmp
push
clc
pusha
shrd
push
mov
push
pushf
popl
push
pushl
popl
movb
pushl
pushf
lea
jmp
inc
inc
sets
setg
bt
bswap
ror
not
mov
not
pushl
inc
add
movzbw
sar
add
pushf
movzbl
call
pusha
call
push
pushl
pushl
repz
popl
call
bt
shrd
inc
movl
bts
btc
shrd
xor
mov
test
add
pushl
mov
push
pushf
lea
jmp
btr
not
cbtw
rol
movzww
stc
jmp
lea
je
call
mov
test
push
jmp
jmp
mov
mov
movb
lea
jmp
dec
mov
call
pusha
jmp
call
repz
popl
test
test
mov
clc
rol
xor
not
mov
cmc
shld
btr
push
shld
neg
push
sub
rcl
push
shld
test
movzbw
neg
pushl
shr
movzbw
pushf
cmp
movl
rcl
xor
mov
bt
add
pushf
mov
lea
jmp
