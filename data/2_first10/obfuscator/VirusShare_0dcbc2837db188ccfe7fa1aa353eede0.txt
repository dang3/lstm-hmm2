push
call
ret
ret
adc
mov
pop
hlt
dec
sub
mul
adc
dec
dec
mov
test
enter
or
outsb
sub
pop
or
xlat
insb
mov
jmp
push
cli
mov
pop
dec
or
nop
and
dec
popf
sub
xchg
xor
outsb
pop
dec
incl
mov
sub
push
gs
adc
test
inc
jne
test
or
jno
inc
or
mov
loope
xchg
cmp
xchg
loope
mov
mov
lcall
add
cmpsl
adc
daa
mov
push
gs
jb
inc
inc
and
cmp
aaa
rcrb
data16
imul
out
repnz
dec
sti
imul
pop
pop
mov
das
filds
cmp
negl
xlat
iret
sbb
cld
xchg
inc
mov
pop
mov
xchg
mov
inc
push
push
and
mov
cli
jno
test
in
and
add
mov
sti
add
arpl
stos
push
xor
push
cmp
movsl
orb
push
ss
mov
mov
or
push
cmpsb
clc
push
fildl
cmp
pop
loope
loop
push
inc
cmp
and
push
out
rorb
fisubrs
jge
imul
cwtl
testl
mov
aaa
sub
or
shl
adc
movsl
push
in
xor
js
dec
leave
push
push
mov
in
inc
jb
mov
sub
sub
jp
pop
jp
add
negb
pop
insl
int3
xchg
aaa
test
js
push
xchg
movsl
leave
cmp
mov
mov
int3
jle
cmp
xor
subl
jmp
xor
bound
dec
ja
xchg
sub
js
jmp
jecxz
mov
cli
or
push
imul
lods
cmp
cmc
cld
jmp
loope
stc
jecxz
inc
mov
jns
test
mov
fnstenv
and
or
add
and
loopne
insb
test
mov
popa
xchg
adcl
adc
dec
mov
lea
xchg
roll
add
enter
movsl
inc
in
sub
inc
or
imul
mov
test
enter
mov
iret
daa
mov
adc
cli
test
pop
cmpsb
into
scas
xor
dec
fsubrl
lods
push
jecxz
mov
or
mov
shll
fimuls
pop
pop
subb
ljmp
aad
notb
jne
add
mov
nop
in
dec
xchg
fwait
test
push
lahf
addr16
fs
push
ss
or
adc
push
mov
enter
add
outsb
sbb
movsb
movsl
call
xor
add
sbb
int
sub
mov
cmpsl
xchg
in
dec
pop
jmp
test
jno
clc
cmp
xor
ja
pop
pop
mull
pop
adc
int
ds
sbb
dec
pop
push
int3
or
inc
jge
or
sbb
mov
nop
and
pop
je
mov
push
pop
flds
sub
xchg
mov
stc
test
test
mov
add
mov
int3
lods
out
adc
enter
and
push
popa
insl
icebp
mov
add
fdiv
pop
cmp
pop
jns
jae
fsub
mov
mov
arpl
test
adc
mov
mov
sub
loopne
leave
vpsrad
leave
sub
mov
sub
int
outsb
inc
mov
sub
adc
or
push
pop
or
sbb
push
mov
scas
ljmp
adc
dec
push
rcll
test
jbe
adc
adc
int3
iret
adc
fiadds
sub
in
std
xlat
divl
pop
xlat
out
in
aam
mov
mov
in
scas
jg
or
jl
mov
or
cli
adc
enter
dec
add
and
jns
ficomps
test
inc
add
icebp
and
mov
mov
pop
shl
push
dec
push
sbb
into
xlat
je
mov
aas
test
pop
inc
addr16
jb
jnp
push
pop
and
js
pop
jae
call
xlat
mov
push
sbb
cmp
add
es
jbe
xchg
outsl
popf
sbb
dec
lahf
jb
sub
pushf
int
loopne
sbb
arpl
or
adc
daa
fnstenv
cmc
and
sbb
pop
rorl
push
mov
add
and
fsts
pop
xchg
fld1
jbe
popf
sahf
fisttpl
fldenv
inc
jns
sarb
mov
mov
popf
push
pushf
adcl
xchg
push
fs
dec
in
cmc
ja
popa
push
jecxz
push
scas
fldl
sub
icebp
dec
and
pushf
mov
sbb
jle
call
mov
xchg
pop
mov
scas
dec
cltd
mov
jnp
sbb
jb
adc
sub
xor
and
mov
pop
push
jl
lcall
int
adc
adc
or
lahf
jne
sub
dec
cmpb
and
sub
ret
cmp
xchg
fcmovnbe
sar
aaa
inc
dec
mov
pop
jg
imul
rcrl
mov
jne
inc
sub
mov
jnp
pop
dec
out
mov
aad
inc
mov
fimull
cmp
cmpsl
out
jnp
sub
or
fadd
mov
outsb
xchg
ljmp
addb
and
pop
mov
sub
and
mov
jmp
mov
mov
push
and
iret
push
jecxz
pop
mov
pusha
dec
gs
roll
push
pusha
arpl
fdivrl
inc
mov
jbe
movsb
push
shll
hlt
dec
push
ss
mov
dec
dec
dec
cwtl
pop
pop
sub
jae
or
sti
mov
int3
ds
fwait
cmp
push
mov
or
push
sbb
in
aas
cmp
mov
imul
lret
xor
xchg
dec
std
test
jle
mov
mov
pop
and
xor
aas
call
rclb
mov
das
ja
dec
and
imul
fstps
cmp
ss
ror
scas
inc
xor
xchg
jle
push
stc
push
inc
jo
pop
sbb
fstpl
stc
lds
pusha
insl
fdivl
lcall
in
fbstp
fcmovne
inc
std
ret
pop
shlb
cmp
jmp
mov
push
repnz
jl
dec
mov
mov
inc
add
and
fisubs
inc
sub
sbb
and
cmp
test
push
jae
inc
inc
rep
xlat
cmp
mov
jns
fbstp
dec
jno
fstl
in
lods
fimull
add
mov
icebp
jb
mov
pop
jl
xchg
cwtl
xchg
leave
orb
dec
sbb
lret
test
sbb
xor
mov
adc
int
test
je
or
and
cmp
and
and
rcll
leave
out
loopne
pop
sahf
lcall
cmp
mov
cltd
pop
pushf
into
daa
cltd
lcall
adc
rorl
inc
out
movups
push
in
adc
xchg
aaa
mov
fcmovnb
jl
sub
jl
xor
lea
xchg
sub
dec
out
imul
scas
push
cmpsl
and
push
mov
jnp
mov
xchg
adc
out
inc
js
sub
jb
fwait
pop
packssdw
int
mov
enter
pop
pop
js
leave
or
loop
inc
nop
cwtl
int3
inc
loope
rolb
rcll
ss
dec
in
push
push
lcall
popf
xchg
outsl
adcl
lock
fdivl
scas
mov
fldcw
mov
cmp
loopne
jne
inc
and
mov
ffreep
dec
mov
sbb
dec
in
or
or
mov
movsl
and
sarb
pop
pop
adc
xor
insl
or
push
inc
fiadds
cmp
or
nop
or
scas
sub
pop
in
cmp
popa
xchg
cwtl
ds
scas
sub
mov
xor
sub
fldenv
call
outsl
sub
sbb
add
xor
ja
sub
fistpl
out
sbb
xchg
xchg
mov
mov
mov
les
adc
inc
sub
xor
imull
int
xchg
mov
mov
xchg
mov
cmp
mov
pusha
fisttps
push
dec
push
mul
outsl
leave
cmc
jg
std
push
andb
aas
fs
nop
fs
out
jecxz
addr16
out
loop
adcb
test
idivb
and
mov
sahf
imul
fimull
inc
jmp
pop
mov
imul
orb
rclb
dec
sbb
shl
mov
stc
mov
push
pop
cwtl
stos
cmc
sti
pop
flds
inc
jecxz
das
xor
nop
pop
pop
arpl
jp
jno
pop
das
dec
loope
cmp
lock
es
mov
into
jle
sub
and
pop
pop
adc
lcall
das
lahf
out
sub
data16
stc
and
mov
adc
xor
xor
bnd
pop
push
aaa
add
pop
xlat
mov
sbb
fnstcw
aam
pop
jb
ss
pusha
sbb
inc
dec
and
sub
and
fcomps
xchg
mov
xchg
es
jp
inc
int
add
cltd
adc
dec
stos
xorb
outsl
xchg
popl
sbb
mov
sub
or
push
pop
aas
loop
pop
add
lret
and
dec
xchg
pop
mov
mov
lock
arpl
pop
icebp
and
cltd
pop
int
mov
les
xchg
loopne
aad
adc
mov
mov
movsb
mov
push
push
sub
ret
orb
pop
fwait
nop
xchg
and
mov
push
pop
ds
mov
mov
sarl
subl
inc
pop
adcl
mov
ds
push
fs
add
and
popf
push
mov
sarl
das
cmpsb
pop
and
dec
ja
lea
rcrb
jno
nop
inc
add
add
jge
sub
or
test
lea
and
scas
test
arpl
cmp
pop
push
push
inc
push
hlt
mov
sub
adc
xchg
jle
dec
test
pop
push
fiaddl
jmp
dec
sbb
xchg
aaa
cmpsl
lea
aas
lcall
sbb
mov
fnstcw
fisubl
in
sbb
sbb
testl
das
push
mov
aas
sbb
push
inc
and
mov
push
imul
je
jmp
push
cmp
jle
push
sbb
pop
push
add
fdivrs
aam
xor
mov
sub
shrl
mov
adc
sbb
movsl
add
cmp
and
popf
or
test
lcall
and
inc
pop
scas
dec
ljmp
and
testl
leave
popa
cmpsb
mov
mov
jno
cwtl
dec
jbe
lods
pop
into
jb
mov
add
mov
adc
lret
pushf
leave
jl
mov
lock
mov
pushf
stos
mov
fsubl
scas
popf
pop
mov
test
pop
mov
mov
adc
cmp
add
cmp
repz
ss
xor
leave
jae
add
imul
pop
sub
in
cmp
in
or
push
mov
sub
push
cmpsb
pushf
out
jns
sbb
xor
je
jno
in
xor
test
and
fstps
pop
gs
sbb
adc
addr16
sbbl
addb
mov
not
jnp
sub
dec
divl
roll
xchg
and
icebp
call
inc
push
out
out
xchg
mov
pusha
adc
repnz
std
add
mov
fwait
xor
jne
lcall
cmp
lds
roll
inc
or
mov
mov
ret
lret
or
push
xor
adc
dec
out
cwtl
xor
int3
js
rcrb
inc
mov
sub
adc
pop
fs
adc
dec
sub
xor
or
cmpsl
imul
out
lret
imul
pusha
iret
xor
xchg
inc
lcall
fmuls
daa
imul
sub
fwait
mov
test
pop
push
xchg
icebp
xchg
enter
insl
add
push
pop
lods
ljmp
jle
sti
pop
dec
xchg
mov
lock
and
xor
xchg
pop
pusha
sub
mov
inc
ror
mov
push
cld
add
sbb
xor
fsts
fnstsw
ret
inc
xchg
divl
mov
aaa
push
imul
stos
lea
adc
ljmp
jns
add
xorl
das
rcl
dec
int3
lds
pop
scas
cmp
mov
clc
mov
mov
cmpsb
xchg
mov
gs
test
jmp
sub
jp
adcb
sub
int3
jmp
xchg
jge
pop
xor
repnz
push
fcoml
ds
loopne
and
jo
xor
cmp
jl
push
ret
enter
popa
sbb
jo
or
js
mov
ljmp
int
in
xchg
out
jae
lock
movsb
mov
insl
mov
inc
pop
ficoms
mov
inc
pop
cwtl
mov
outsb
xchg
push
sub
popa
or
cmpsl
xor
cwtl
sarl
dec
jmp
cmp
jne
lods
gs
aas
nop
in
or
pop
pop
jecxz
inc
add
jne
sbb
push
or
add
add
mov
in
iret
mov
lods
aad
pop
dec
xchg
push
lock
pushl
jbe
add
imul
idivb
int3
dec
fimull
rclb
pop
dec
es
idivb
mov
leave
inc
add
push
das
mov
sub
lods
dec
adc
or
and
pop
push
pusha
pop
sbb
mov
push
in
xchg
push
pusha
nop
dec
mov
ds
out
pop
cmp
cld
arpl
jae
xchg
hlt
cs
test
push
ss
dec
enter
xchg
fistpl
lahf
cmp
push
jmp
fidivs
stos
enter
shlb
xchg
dec
push
xchg
mov
sub
jl
add
push
or
pushf
inc
lret
sar
xor
mov
ret
lods
and
jno
enter
ret
fs
pop
cmpsl
jle
cmp
push
fabs
sbb
fwait
repnz
xor
mov
test
movsl
push
or
mov
sub
ds
pop
test
dec
or
icebp
lock
into
inc
movsl
fdecstp
and
pop
inc
imul
andl
mov
repnz
cli
inc
xor
mov
dec
pop
xor
mov
cltd
xchg
fisttps
lret
mov
sub
out
popa
mov
or
fists
inc
push
repnz
cli
add
push
jo
jae
and
imulb
mov
xchg
sub
out
into
dec
mov
imul
or
add
mov
sahf
dec
mov
xchg
xor
mov
gs
sahf
jnp
iret
outsl
mov
xchg
mov
xchg
and
pop
push
xchg
cwtl
sub
sbb
ss
insb
addr16
xor
or
in
jns
and
outsb
pop
cld
fld
mov
loope
sub
popf
cmp
jecxz
mov
repz
xchg
mov
inc
jl
sbb
pop
int
add
arpl
xor
movsl
push
cmp
push
rclb
inc
sub
in
jb
mov
dec
stos
and
mov
mov
fcoms
push
pushf
sub
cmp
mov
lods
cmp
subl
xor
enter
stc
cltd
and
sub
cld
fisubl
fidivrs
xchg
das
outsl
push
js
lock
sub
scas
inc
jne
mov
es
std
movsb
push
es
adc
push
jns
or
out
or
adc
inc
lods
cmpl
icebp
jne
inc
ljmp
adc
pop
or
or
loopne
movb
ja
dec
movsl
frstor
mov
xchg
or
xchg
inc
add
mov
mov
sbb
mov
xchg
jmp
insl
inc
lods
pop
add
mov
pusha
ss
xlat
loope
inc
sub
dec
dec
pop
pop
icebp
fwait
insb
adc
enter
fwait
gs
push
push
dec
pop
pusha
mov
shll
test
cmp
dec
xchg
mov
clc
xchg
lods
mov
stos
xchg
push
hlt
ja
or
in
push
add
popf
stos
xchg
sarb
aas
lods
xchg
cli
pop
dec
ret
push
jne
inc
test
adcb
fiadds
es
xor
pop
push
pop
cmc
daa
rolb
xchg
inc
mov
cwtl
and
mov
subl
in
and
data16
ficompl
popa
push
jne
push
lea
xor
pop
loope
push
adc
sbb
mov
lahf
push
dec
dec
fldl
or
dec
testb
out
push
push
jmp
push
cwtl
pop
ud2
pushf
out
and
stc
enter
cmp
xor
outsb
mov
cmpl
add
mov
mov
or
addr16
or
stos
mov
shlb
dec
xchg
pop
lret
in
call
or
and
rep
pop
stos
pusha
imul
dec
push
jge
adc
hlt
dec
mov
mov
cld
sub
mov
mov
cltd
cmpsb
mov
scas
insb
sub
data16
sub
sbb
orl
xchg
bnd
in
cmpsb
sbb
gs
mov
hlt
mov
daa
jmp
fs
mov
pushf
andl
pop
lds
aad
dec
cmp
sbb
sbb
mov
cmp
mov
repnz
ds
dec
es
popf
mov
in
inc
fstl
mov
jo
mov
sbb
jg
ljmp
xlat
imul
push
pusha
inc
in
in
and
outsb
fsubrl
xor
and
lods
pop
lret
cmp
xchg
push
dec
shll
add
dec
jle
mov
repnz
pop
add
es
jno
popf
sbb
push
rcrb
or
push
hlt
cmp
jno
dec
jecxz
ret
add
scas
sarb
sbb
aam
mov
ja
test
pop
jae
ret
test
ds
fldl
das
das
loope
mov
dec
popa
pop
sbb
push
lods
bsr
xchg
xchg
cli
dec
mov
loopne
jno
sub
or
pop
mov
and
sarb
or
cmp
lods
icebp
xor
scas
jmp
outsb
add
adc
cmp
ffreep
stos
pop
mov
pop
incb
fwait
cwtl
in
mov
dec
shrb
pop
test
icebp
jo
mov
pop
imul
imul
in
jne
pop
cwtl
fnstenv
sbb
xchg
sahf
pop
in
cld
sbb
or
cmpsb
jne
shr
and
push
mov
int
cmp
xor
imul
jle
js
test
jns
dec
or
xchg
inc
jmp
or
cmp
push
xchg
pop
mov
jo
aaa
js
lcall
sbb
das
push
inc
mov
push
inc
fldt
xchg
je
ljmp
out
xor
enter
cmp
push
jecxz
xor
push
sti
js
hlt
sbb
cmp
mov
cmpsl
mov
sub
and
push
jbe
jns
stc
fisubrs
push
push
jns
mov
loopne
cli
push
arpl
dec
in
dec
cmc
out
jecxz
xor
insl
push
popf
mov
fs
enter
push
je
jmp
cmp
xchg
sub
sbb
inc
popa
xor
insb
test
pop
fucomi
shrb
adc
pop
loopne
cmp
pop
mov
adc
loopne
test
scas
out
insb
xchg
dec
mov
gs
test
mov
dec
ss
mov
popf
sub
push
push
or
lods
daa
add
leave
std
fdivrs
js
scas
dec
pop
clc
adc
dec
stos
lcall
cmpsl
in
jo
xchg
or
pop
loope
ss
movsl
out
mov
andl
scas
inc
adc
lret
push
push
repz
adc
je
xor
inc
pusha
mov
cltd
mov
push
mov
iret
mov
lret
cmp
nop
mov
dec
aaa
jmp
rorb
rcrb
addl
push
mov
rorl
sbb
mov
enter
xchg
lds
push
mov
lret
orl
sbb
sbb
xor
mov
or
fwait
or
jmp
out
add
mov
fadds
add
je
xchg
enter
mov
rclb
ficompl
pop
fildl
or
mov
dec
jecxz
pop
dec
sbb
in
mov
jecxz
loop
adc
out
mov
fsubl
incb
sbb
inc
pop
test
add
call
fsubs
in
mov
movsl
out
loopne
call
imul
in
jbe
imul
add
push
jmp
mov
push
inc
or
push
in
pop
call
aas
movsb
rcrl
or
inc
popf
sub
pop
mov
fadd
scas
in
and
movsl
or
mov
or
imul
stos
and
cld
in
push
adc
mov
pop
inc
out
call
sbb
fldt
xlat
enter
push
inc
adc
cmp
pop
jge
push
stos
fildll
fwait
pop
adc
je
fs
push
sub
adc
mov
dec
dec
adc
les
add
mov
cmpsb
loopne
insl
mov
andb
and
sub
in
aaa
xchg
cmp
test
mov
out
dec
push
push
cmc
into
pop
add
push
lods
sbb
cmp
rorb
inc
jle
loopne
test
test
aas
dec
jbe
testb
mov
ffree
popf
dec
dec
fptan
dec
cmp
mov
or
pusha
sbb
pop
sar
jnp
pushf
jl
cmpsl
xlat
lret
jp
orb
ds
sub
inc
mov
xor
ds
ss
or
aas
imul
por
in
mov
ss
nop
mov
jge
fstps
in
sbb
adc
lea
push
rdmsr
sbb
cmp
add
and
or
xor
jp
test
and
and
inc
jg
or
nop
pushf
lods
bnd
and
lds
cld
jo
cmp
xor
and
test
icebp
push
xor
cmp
fldcw
mov
dec
lea
inc
cmp
lock
mov
lret
jecxz
add
pop
fsubrl
add
push
dec
int3
int
out
push
push
sbb
fstl
aaa
sub
inc
stos
sub
jp
mov
data16
in
jb
dec
dec
mov
xchg
mov
pop
bound
outsl
lds
sub
xchg
mov
jg
clc
mov
cmp
imulb
and
repnz
push
lods
inc
jae
dec
sbb
daa
in
mov
push
mov
outsb
pop
icebp
call
fs
jb
cmpsb
or
nop
es
cmp
and
adc
inc
out
inc
cmpsl
test
out
dec
adc
pop
push
lds
std
movsb
out
jnp
lahf
fldenv
mov
paddusb
out
adcl
push
addl
xchg
pop
aam
fcoms
aad
push
cmpsl
and
sub
movsl
or
aaa
dec
mov
es
shll
mov
in
rclb
fs
sub
pop
mov
pushf
arpl
lods
cmpsl
mov
scas
roll
pop
adc
or
pop
cld
enter
push
into
dec
push
or
push
loopne
adc
cwtl
ret
lcall
subl
mov
cmp
xor
adc
jbe
insb
sar
fidivrs
insb
xor
iret
shll
mov
pop
lahf
int3
mov
pushf
or
ficompl
pop
out
jb
push
faddp
sbb
and
aam
and
push
cltd
push
mov
orb
jge
pushf
enter
mov
push
insb
leave
push
clc
cmpsb
mov
nop
adc
push
bnd
push
adc
cmp
cmp
lods
out
test
nop
rcrl
dec
lret
or
xor
out
jge
mov
je
cmp
lods
xchg
dec
mov
add
je
lods
pop
popa
outsl
popw
jbe
dec
sbb
andb
stos
mov
jecxz
sub
loop
jns
insb
mov
rorb
test
incl
rclb
out
ss
stos
loop
loopne
aas
push
mov
psadbw
jnp
pop
sbb
lds
out
or
xchg
dec
and
loop
inc
cld
push
das
daa
and
or
inc
xchg
push
xchg
cmp
sbb
imul
mov
cmp
jo
hlt
xchg
xor
mov
test
stos
mov
jmp
mov
pop
xchg
pop
xchg
test
lahf
lret
movsb
cltd
sub
stos
mov
mov
or
cmp
xor
cld
jg
lock
jg
cwtl
pop
jmp
mov
push
popf
jb
test
leave
mov
cmp
movsl
xchg
dec
or
mov
xchg
push
lock
sbb
pop
orb
mov
in
lock
mov
stos
daa
gs
movsl
cltd
testb
inc
iret
mov
jo
cmp
aas
cmp
fdiv
cmp
cmp
xchg
enter
loop
sub
sbb
jl
in
popa
lods
or
xchg
lods
ret
jo
add
push
and
movsl
jbe
pusha
mov
sbbb
cwtl
jmp
outsl
push
push
lods
jle
jle
js
mov
jle
dec
stos
andnps
or
outsb
push
inc
mov
dec
and
loope
jnp
mov
sub
mov
mov
push
push
bound
mov
pop
daa
into
ret
movsb
out
loopne
cld
pop
jle
dec
out
mov
ljmp
mov
mov
xchg
jg
push
cmp
mov
sub
movsb
rclb
jb
jae
sub
movsb
xor
jmp
hlt
movsb
jb
iret
mov
std
mov
push
loop
cltd
aam
stos
push
bound
testb
cli
lea
inc
stos
neg
adc
pop
push
arpl
sarl
push
shl
ss
adc
test
imulb
loop
popa
in
pop
push
cmp
mov
pop
or
mov
inc
popa
pushl
add
jl
mov
ficomps
aam
sbb
xor
je
and
and
lods
and
sbb
roll
xchg
ret
adc
das
fsubr
je
and
fisttpll
flds
cmp
fisubl
int
je
sbb
ja
out
push
dec
movsb
add
fcom
push
mov
test
sbb
jl
sub
lcall
insl
mov
jne
pop
flds
xchg
das
add
push
mov
sub
sub
daa
pop
popa
shll
inc
mov
lahf
sbb
aad
xorl
xor
cltd
and
gs
mov
push
and
ret
fs
aam
jbe
push
jae
js
mov
mov
jge
cmovb
jecxz
sub
inc
je
jno
movsl
xchg
rcll
mov
xchg
push
or
xchg
jb
dec
sub
jns
cmpsl
xchg
shrl
cltd
aaa
cld
xchg
mov
fdivr
fistpll
js
or
cmp
aaa
pop
aam
movsb
xlat
nop
or
or
lret
idiv
inc
cmp
outsb
test
cmp
mov
lock
mov
jnp
loope
shrw
xlat
jp
dec
mov
add
jle
sub
out
and
xchg
push
mov
sbb
sbb
xor
jp
pop
sub
mov
cmpsl
cmc
cltd
lds
sub
loope
xchg
pop
mov
dec
sahf
jl
int3
xor
add
fwait
stc
inc
imul
push
xor
mov
inc
mov
out
mov
mov
sub
adc
mov
and
outsb
cmp
pop
sbb
into
insl
inc
mov
sub
lea
out
cltd
in
push
push
lock
lea
cmp
xchg
dec
shl
dec
or
scas
or
and
jmp
pop
out
rcrb
xchg
or
or
sub
rcrb
mov
rorl
flds
cli
clc
jg
add
ss
call
aad
sub
pop
fs
jg
out
inc
dec
jecxz
fnsave
or
into
lret
sub
in
jnp
xchg
mov
fcmovnu
add
mov
fnstenv
cmp
daa
xchg
fs
sti
jne
and
jbe
insl
shl
subl
imul
mov
inc
lcall
cmpsb
xchg
mov
enter
imul
add
cmp
ret
pop
rorb
out
cmp
jno
jbe
mov
add
shll
and
iret
mov
pop
push
bnd
dec
stos
fcoms
pop
enter
andl
dec
xor
push
add
cmp
jle
cmpsl
out
or
mov
sub
std
and
mov
nop
loopne
jecxz
sbb
mov
lcall
addl
pop
lods
cmpsl
add
int3
adc
leave
mov
in
dec
std
pop
inc
adc
xor
jno
repnz
jmp
mov
insb
pop
pop
loop
fsubr
jmp
mov
sub
subl
jle
dec
pushf
out
icebp
xlat
push
push
ja
jp
mov
cmp
and
lahf
js
scas
sti
flds
sub
insl
push
data16
outsb
mov
dec
jp
in
sti
sti
jbe
jmp
decb
addb
jecxz
cli
lock
push
sti
pusha
mov
ds
in
outsl
popa
mul
call
add
fcoml
sub
jl
arpl
shlb
dec
lret
inc
dec
and
call
inc
xor
aaa
aaa
cmpb
or
in
cmp
inc
in
inc
outsl
int
es
mov
xchg
jnp
mov
ljmp
in
aam
or
lahf
out
add
mov
cmp
les
and
inc
xor
xor
enter
sub
inc
mov
jb
sub
test
pop
mov
fnstsw
inc
adc
xor
cmp
fists
push
out
mov
enter
mov
mov
add
lret
sub
clc
pop
outsl
dec
aam
mov
popw
pop
mov
pop
repz
pushw
sbb
movsl
mov
stos
fidivrs
sub
mov
ret
in
xor
fnsave
inc
and
gs
adcl
pop
int
inc
rolb
xorps
aad
sub
xchg
pop
and
xor
stos
sub
sub
jge
fidivrs
sub
ret
mov
aad
test
in
sbb
mov
loopne
stos
lea
lock
popf
stc
cmp
xchg
sbb
push
loop
mov
mov
sbb
lods
pop
ret
sub
imul
push
stos
cmpsb
push
es
sahf
fwait
push
stos
int3
mov
cwtl
out
push
jge
andb
xchg
scas
imul
setp
sub
pop
inc
sbb
push
arpl
pop
xor
cld
jecxz,pn
pop
mov
inc
icebp
pop
stos
es
pop
idiv
cld
adc
adc
das
getsec
mov
pop
fucomip
mov
mov
pop
scas
xor
fsub
jno
and
scas
lds
add
outsl
xchg
inc
test
push
jb
lock
int
xor
scas
sbb
mov
sbb
mov
out
push
ljmp
pushf
insl
sbb
push
movl
xchg
shl
jle
lods
cwtl
cmp
cmp
int
sub
or
int3
mov
add
push
ret
inc
lods
rorl
cwtl
movsb
in
jns
mov
or
push
rcll
ljmp
mov
fnstsw
cwtl
jae
xorl
or
sub
xor
jmp
add
push
or
sub
nop
insb
in
inc
out
push
clc
rcrb
mov
mov
inc
loope
sbb
leave
sub
bndstx
rcrl
mov
xor
push
inc
clc
push
nop
push
pop
nop
or
cmpsl
fwait
xchg
push
add
jecxz
cmp
xor
stos
ret
ss
mov
filds
dec
shlb
push
add
hlt
outsl
jno
sub
lcall
push
or
pop
xchg
sahf
pop
jns
mov
pop
jno
dec
ja
clc
sbb
push
inc
bound
mov
pop
add
ja
jmp
sbb
mov
xor
sub
addr16
and
mov
push
jecxz
push
lahf
jl
jns
pop
outsl
adc
lods
mov
add
mov
pushf
notb
arpl
loop
pop
pop
cmp
mov
les
cli
adc
push
clc
cmpsl
cmpsb
enter
aad
sets
rcr
push
sub
xchg
aam
shrb
stos
mov
push
ret
add
add
xlat
hlt
jl
adc
les
fisttpll
loope
pop
addr16
out
dec
loope
sbb
sti
push
xor
insl
inc
sti
mov
stos
rorl
arpl
test
pop
sbb
mov
mov
bound
sbb
nop
movsl
add
pushf
cli
nop
aad
lahf
cmpsb
repz
jmp
bound
mov
jns
pop
divb
jl
mov
sahf
rol
in
cmp
mov
sub
sbb
and
cmp
lds
dec
add
sbb
std
mov
jno
cmp
push
push
testl
mov
mov
sahf
and
dec
stos
dec
and
xchg
in
sahf
adc
enter
add
arpl
dec
std
aas
mov
jb
aaa
inc
dec
icebp
push
subps
pusha
dec
cmpb
mov
bound
scas
add
loope
jmp
jnp
shl
xor
jle
cmpsl
adc
ljmp
cld
dec
or
xchg
rorl
lret
mov
mov
sarb
lock
and
popf
add
lcall
add
adc
push
ja
sub
push
push
test
mov
icebp
push
sub
shll
add
or
push
xor
mov
out
or
inc
push
ret
sub
push
dec
mov
dec
add
lock
mov
out
mov
bt
lds
aaa
mov
add
push
mov
mov
mov
addr16
das
sbb
std
arpl
dec
mov
std
xchg
shrb
mov
out
call
jp
outsl
repnz
arpl
jge
out
iret
hlt
push
inc
loope
add
loope
scas
cld
mov
bound
fnstsw
ret
adc
sbbb
leave
sbb
pop
add
xchg
fsubs
mov
out
jno
and
gs
test
leave
pop
aad
mov
lret
jns
mov
sbb
adc
push
cld
adc
or
mov
mov
ds
repz
es
sbb
daa
mov
mov
andl
loop
daa
outsl
scas
stc
mov
pop
mov
push
jnp
adc
dec
sbb
mov
cmp
lods
mov
and
mov
xor
mov
push
jb,pn
loope
jge
inc
es
sub
mov
imul
into
adc
mov
mov
dec
leave
out
add
lahf
fists
jnp
aaa
and
sbbl
aas
adc
or
stos
or
and
cmp
push
movsl
test
mov
mov
jo
arpl
je
mov
mov
outsb
cmpsb
negl
xor
xor
jo
inc
sbb
rep
or
cmp
arpl
mov
xor
nop/reserved
in
imul
jb
test
outsl
popf
enter
or
mov
mov
in
das
sbb
inc
mov
xor
xor
push
dec
xchg
add
icebp
lret
fdivrs
stos
jnp
das
xor
pushf
xor
adc
out
xlat
sbb
fnstcw
push
xor
cmp
sbb
or
pop
cmpsl
jecxz
lret
push
pop
or
adc
add
adc
sub
or
adc
adc
fcmove
pop
addr16
das
filds
addb
xchg
mov
mov
ja
xchg
cmc
mov
sub
xor
mov
dec
lret
adcb
cli
les
aam
hlt
jno
das
xchg
jmp
mov
loop
mov
dec
sub
pop
addr16
out
sbb
inc
and
icebp
cmpsb
pop
int3
mov
push
lret
xor
or
adc
shlb
pop
packsswb
sbb
jno
or
dec
test
push
lret
jns
cmpsb
mov
insl
out
add
movsl
jns
or
adc
add
push
cmp
mov
js
test
adc
add
mov
or
ja
in
sbb
popf
or
cli
jmp
or
mov
fistps
pop
cmp
add
enter
push
sti
xor
stc
add
pop
mov
andl
jb
sahf
sbb
adc
sbb
bnd
or
loope
cmp
movsb
pop
setp
rcll
test
loop,pn
sub
xor
pop
aam
jge
pusha
add
call
ljmp
mov
jne
imul
pusha
popl
scas
mov
sbb
int
inc
and
into
lods
ficoml
xchg
loopne
cmp
jmp
push
lret
ss
add
rcr
dec
iret
pop
ljmp
out
repnz
mov
stc
sub
add
movsb
xchg
xor
push
inc
repnz
pop
or
mov
or
das
mov
mov
sbb
inc
jne
test
mov
in
pop
xchg
xchg
pop
jp
add
sub
mov
xor
jge
dec
push
xchg
mov
lds
cmpsl
out
daa
je
mov
data16
and
push
adc
fldenv
hlt
push
cwtl
inc
ja
inc
cmp
stos
adc
sbb
fbstp
addr16
cmp
fneni(8087
repz
add
fstpt
mov
and
data16
xor
dec
or
lahf
xchg
in
cmpsb
jl
jns
push
sahf
and
xor
push
sti
xor
mov
scas
cltd
jns
dec
pop
push
popa
or
mov
sti
ds
mov
out
movsb
mov
jge
push
ss
ret
frstor
es
loopne
in
in
pushf
add
mov
pop
imul
hlt
int
pop
cmp
rorb
out
adc
or
imul
push
imul
xchg
addr16
mov
cmp
repnz
push
cwtl
lock
es
push
push
xor
pop
test
lds
rorb
enter
xor
in
int
xor
sahf
les
push
and
jp
into
enter
sbb
fs
les
sti
popf
xchg
jb
jge
adc
lea
add
adc
pusha
and
push
add
mov
cmpsl
pop
mov
add
push
outsl
or
cmp
cmp
cmp
addb
add
or
dec
push
push
push
dec
adc
icebp
xchg
adc
out
mov
movl
ret
dec
xor
xchg
test
pop
pop
adc
xchg
loope
andb
cmp
int
ficoml
cmpsl
pop
cld
sub
adc
lds
cmpsb
and
jmp
sbb
mov
pop
mov
sub
cmpsl
in
mov
dec
mov
and
leave
scas
scas
push
cmpsb
mov
dec
ljmp
mov
xchg
mov
mov
xchg
test
inc
scas
add
arpl
test
mov
add
xchg
adc
pop
xchg
mov
jno
or
push
fcmovbe
pop
cmpsb
aam
pusha
cld
js
add
sub
lahf
fidivrl
cmp
inc
sbb
mov
mov
ret
test
sub
xchg
xchg
mov
sub
inc
testl
xchg
jns
mov
clc
mov
and
mov
mov
insb
or
adc
sbb
rolb
xor
pxor
mov
testl
cmp
ja
es
pusha
jbe
lcall
and
or
call
or
cmc
mov
sub
lret
ret
dec
mov
push
aad
js
imul
sub
push
mov
xor
sbb
shrb
sbb
outsb
or
sti
inc
mov
scas
or
dec
scas
cmpsb
sub
jl
mov
mov
fisubs
mov
ljmp
sbb
or
xchg
add
leave
sti
insl
inc
pop
outsb
fildl
repz
lahf
lret
pop
mov
jmp
bound
or
enter
cmp
subl
nop
or
fcomps
pop
rcrb
push
not
cld
scas
dec
js
jle
or
jno
cmp
jbe
add
gs
inc
daa
sbb
pslld
aam
lea
repnz
xor
jo
dec
out
insl
push
xchg
fwait
cmp
mov
ret
outsl
push
fisubrl
pop
fwait
repnz
ret
in
testl
je
add
push
adc
xor
sbb
aaa
cmp
or
call
mov
enter
movsb
cmp
cmpsl
mov
or
inc
push
xchg
insb
loopne
faddl
xor
adc
xor
mov
pop
les
dec
lds
pop
leave
inc
xor
pusha
idivl
or
out
jg
in
dec
adc
jmp
add
fcmovnbe
dec
mov
adc
int
cli
mov
or
push
cmpsb
sub
sub
je
xor
dec
jmp
jp
insb
rcl
shld
pushf
add
jp
inc
inc
or
adc
cmp
pop
cmp
loopne
xchg
sub
popa
fwait
movsl
mov
mov
in
push
pop
mov
mov
mov
sbb
jo
lret
mov
in
das
subb
lods
mov
xor
popf
fisubs
inc
pop
mov
dec
mov
ja
insl
adc
lret
fistps
xor
ret
and
es
daa
jle
outsb
cmp
mov
push
lds
add
lcall
mov
add
and
dec
out
in
cld
mov
xor
fcoml
mov
xchg
sbb
and
in
or
fdivrl
dec
push
jl
rcr
push
mov
push
lods
add
fxch
insb
xor
or
xor
pop
inc
in
mov
les
ds
mov
addr16
not
pop
pop
dec
scas
subl
mov
cs
ret
jo
mov
cmpsb
xchg
nop
test
inc
cld
fstsw
jge
loopne
hlt
pop
dec
mov
pushf
cmp
in
out
mov
jmp
inc
mov
push
dec
sti
leave
jb
dec
scas
aaa
mov
push
sti
or
xchg
mov
lahf
mull
push
cmp
mov
pop
ret
in
and
xchg
dec
in
cmpsl
fldcw
movsb
test
push
in
jg
xor
add
fcmovnu
jne
dec
inc
mull
pop
mov
hlt
incb
inc
sub
cmp
nop
or
and
cli
add
decl
repz
stos
dec
jmp
pusha
inc
fwait
ss
outsb
pop
cwtl
adc
adc
and
xor
stos
iret
fidivrl
lods
dec
out
adc
mov
fstpl
sbb
inc
pusha
jp
mov
xchg
roll
lahf
push
pop
icebp
dec
out
fcom
gs
mov
inc
or
test
test
dec
jmp
cltd
xor
cmp
int3
jp
jb
int3
cli
pop
jno
imul
inc
out
ds
pop
jnp
pop
idivb
or
fwait
sbb
rcll
outsb
aaa
cmp
pushl
out
iret
xchg
add
cmpsl
sbb
pusha
sbb
fdivrs
fs
mov
nop
jnp
mov
pop
frstor
dec
fwait
aam
mov
lods
pop
mov
or
hlt
in
ds
psrlw
ret
out
push
in
scas
ror
or
mov
test
outsb
push
mov
dec
jge
mov
loope
sahf
push
jne
jb
sbbl
jl
xchg
dec
decl
push
mov
orl
addr16
loop
push
scas
jae
shlb
stos
testl
inc
dec
loope
xor
loopne
inc
or
cltd
sbb
sti
enter
jp
out
test
add
loop
push
xchg
stos
rcll
cbtw
test
cwtl
mov
jp
mov
inc
adc
jbe
cmp
and
test
jb
leave
fnstenv
movsb
mov
in
push
enter
sub
shr
jb
imul
push
cltd
popa
jbe
cmp
jge
out
subl
jl
inc
dec
addb
cmp
in
xchg
fsubs
fistpl
push
and
adc
sti
leave
fistps
ss
mov
fistl
push
inc
stos
mov
enter
hlt
sbb
inc
adc
cmp
addr16
popa
cmpsl
aad
repnz
es
movsl
push
mov
inc
sub
push
js
or
rol
xlat
lock
xchg
repz
dec
and
mov
mov
pop
push
push
fsubr
lcall
daa
insl
xor
xchg
jp
pop
sub
nop
cmpl
lock
jnp
mov
pop
stos
inc
scas
cs
ret
ds
sub
mov
pop
mov
cpuid
inc
ret
out
dec
push
pop
sbb
ljmp
xchg
in
mov
frstor
jno
fisubrl
lret
jmp
cltd
pop
mov
aam
jle
fwait
cmpb
cmp
and
xchg
pop
jecxz
sti
xchg
mov
xchg
jge
inc
movsl
mov
rorb
jmp
popa
insb
cmp
mov
sub
cwtl
es
and
cmp
dec
mov
imul
lods
add
jmp
lods
mov
jnp
mov
push
or
jg
les
repnz
loope
out
xlat
add
stos
lret
mov
cltd
or
imul
jbe
add
nop
outsb
add
or
in
sub
jno
push
or
push
pop
les
movsb
pop
nop
pop
inc
pushf
iret
dec
pop
aaa
or
xor
pop
or
aaa
mov
dec
ja
xchg
push
int3
fisttpl
repnz
cli
addl
push
fwait
push
lret
dec
jno
xchg
pop
sub
jb
nopl
lcall
and
and
std
pop
aaa
mov
or
int3
xchg
xor
int3
imul
mov
sahf
andb
int3
sbb
push
xchg
sub
gs
decb
inc
popf
jecxz
mov
jns
std
decl
or
mov
popl
cmp
ficoms
sti
pushf
cmp
popa
pop
or
pop
jbe
cld
inc
or
push
mov
aam
xor
xchg
cmp
mov
push
fldl2e
lahf
ret
insl
inc
jle
mull
add
mov
in
jo
adc
lahf
pop
dec
xchg
stos
int3
rolb
int3
cmpb
cld
pop
insb
imul
sub
iret
jecxz
add
push
cltd
mov
aas
je
xchg
cmp
push
fisttpll
hlt
aam
fdiv
out
or
ljmp
movsl
or
andl
aad
xchg
mov
xlat
jno
mov
inc
mov
aad
dec
jnp
rol
gs
std
mov
cmp
test
pop
jne
fdivr
xchg
test
and
clc
jecxz
insl
adc
and
mov
mov
or
scas
into
das
sub
cmc
pusha
call
adc
jecxz
jg
mov
jb
insb
call
les
jno
insb
push
ret
test
mov
test
xchg
adc
addr16
mov
dec
xchg
movsb
in
das
hlt
and
mov
adc
and
sti
mulb
out
dec
ret
jp
les
movsb
lret
adc
movsl
pop
push
mov
add
mov
inc
adc
add
jmp
push
loop
sbb
in
in
dec
aam
cmp
sbb
repz
inc
sti
lea
mov
out
cld
ja
xchg
sub
dec
test
jo
mov
shrl
out
sub
inc
xor
or
mov
dec
cmp
push
pushf
push
fbstp
add
loop
nop
repz
imul
cld
cmc
push
in
pop
fists
cmpsb
sarl
in
lcall
jns
ss
push
inc
clc
lret
adc
lahf
dec
dec
mov
push
orl
push
dec
add
fldenv
sub
pop
push
adc
aam
pop
call
sub
mov
mov
push
rolb
loope
cmp
pusha
ja
nop
repnz
or
dec
stos
mul
aas
call
sub
fwait
pop
fs
add
mov
pop
jg
cmp
ljmp
inc
leave
enter
clc
sub
scas
inc
push
sub
mov
mov
arpl
outsb
dec
and
inc
xchg
push
cmp
mov
mov
fwait
test
icebp
andb
xchg
stc
shl
jge
dec
pop
movl
mov
mov
or
push
xor
stc
xchg
test
repz
fcompl
fs
ficoml
stc
rorl
or
or
cmpsb
jg
fimull
pushf
in
fbld
xchg
adc
dec
sti
add
ror
xchg
pop
sub
and
orl
gs
sbb
push
arpl
pop
jecxz
adc
in
jns
sub
pusha
ficoml
jo
cli
imul
mov
mov
inc
inc
mov
jmp
rcr
xlat
outsb
jbe
fs
ror
push
and
mov
cmp
or
pop
cmp
notl
pop
repnz
lods
xchg
rcr
int3
push
pop
mov
test
pop
movsb
mov
or
fldt
mov
rorl
mov
inc
std
leave
fwait
sbb
addr16
outsb
sbbl
ret
mov
pushf
repz
sbb
dec
cmp
jnp
adc
add
je
push
sti
int3
test
mov
sbb
and
add
cld
adc
pop
mov
inc
dec
movsl
mov
testb
add
nop
sti
xchg
in
mov
mov
xor
push
sub
fs
mov
mov
jno
into
negl
icebp
aas
xor
dec
daa
iret
mov
fcoml
fidivl
mov
pop
or
mov
jge
cmpsl
dec
pop
sbb
in
das
mov
lods
push
xchg
cmp
shl
sub
and
push
push
cmc
stc
jo
sbb
pop
push
fisubrl
push
ja
cmp
adc
dec
sahf
or
out
push
push
push
ret
xchg
dec
mov
push
cmpsl
jg
mov
movb
frstor
cs
call
sub
loope
add
dec
negb
mov
ljmp
out
aaa
xor
repnz
out
andl
or
stc
ja
or
jb
ficomps
icebp
pop
pop
pop
arpl
jl
jae
insl
test
xchg
lods
lock
lcall
nop
mov
pop
adc
popf
add
imul
leave
sub
pop
imul
loop
push
push
leave
inc
mov
dec
cmp
pop
pop
je
js
pop
rcrl
das
ficomps
idivl
shll
xchg
in
negl
pop
ret
push
test
pop
jcxz
filds
int
pop
mov
loopne
mov
inc
push
dec
imulb
in
ret
jb
nop
sub
mov
jno
cli
movsl
push
imul
outsl
and
inc
addr16
xor
addb
mov
mov
mov
jae
scas
aam
and
mov
lahf
mov
rolb
int
xor
push
xor
cmp
inc
je
imul
stos
sub
pop
mov
mov
insl
sub
mov
and
cmp
arpl
movsb
inc
insb
and
and
ljmp
xor
cld
adc
les
xchg
xor
out
inc
jne
movsl
xor
popw
aas
test
cmp
lcall
addb
push
rcrl
lods
xchg
hlt
pop
adc
cld
add
loopne
aas
push
loopne
pusha
add
hlt
in
mov
shr
push
xchg
inc
mov
insb
fsubs
mov
enter
adc
xor
stos
mov
pop
push
inc
fisttps
cmpsb
pop
repz
sbb
pop
xchg
ss
mov
cli
xor
ljmp
or
sbb
loope
fildl
dec
repz
icebp
push
fcmovnb
push
cmpsb
and
push
sbb
add
or
xchg
repz
xchg
xorl
jl
lods
push
lods
mov
jecxz
outsl
stc
cmp
xchg
and
sub
popf
das
cmc
imul
dec
jmp
xchg
mov
outsl
stc
or
jmp
sbb
int
jge
add
and
test
outsl
das
xchg
cs
jne
rcr
and
push
les
lret
push
daa
jg
rcrb
outsb
call
sbb
ljmp
leave
test
aam
addr16
mov
mov
shl
scas
mov
xor
cmpl
push
jmp
mov
jmp
pop
xorl
mov
aam
mov
push
push
int
shrb
mov
je
in
jns
cmc
icebp
pusha
insb
pop
cmp
inc
in
pop
testl
sub
sarl
repz
repnz
dec
lahf
movsl
in
cs
inc
sub
orb
popf
pushf
xor
cli
subb
xchg
add
int3
inc
xorl
or
mov
cmpsb
insb
sti
gs
test
out
push
sub
std
icebp
lods
cmpsb
mov
sub
xchg
xchg
mov
fists
and
xchg
aam
lret
jecxz
pusha
stc
in
adc
sbb
adc
adc
dec
mov
insb
maxps
roll
int3
fadd
in
ret
adc
pxor
jmp
sub
pop
nop
imul
jmp
das
dec
ret
in
lcall
mov
outsl
pushf
js
out
lods
or
shlb
mov
jno
sahf
lret
imul
insb
mov
xor
loop
xchg
test
movsl
pop
cmpsb
bound
popf
cmp
xor
jmp
shl
sbb
fstpl
mov
dec
loop
mov
or
mov
mov
sub
mov
xor
jg
rorb
sub
dec
add
dec
and
icebp
mov
dec
push
mov
sbbl
cmp
rcl
push
adc
call
aaa
sub
aad
mov
pmullw
xor
mov
add
or
lods
jo
xchg
push
int3
sbb
mov
mov
rolb
aas
enterw
aad
fldcw
sarb
inc
dec
pop
lds
fiaddl
fmuls
inc
sub
pop
mov
testb
xchg
addr16
int
push
adc
dec
outsl
stos
adc
mov
mov
dec
or
sbb
adc
pop
add
aam
xor
popf
setb
outsb
addb
movb
add
adc
lahf
outsb
push
lds
adc
rol
pop
mov
rorb
addr16
dec
arpl
test
js
add
inc
stos
mov
ljmp
dec
sar
sub
dec
add
out
sbb
sti
mov
pop
clc
fsts
pop
xor
rorl
xor
outsl
cvtps2pd
lahf
pushw
shll
sbb
aam
jmp
sbb
fdivs
cmpsl
not
cltd
or
cmc
sbb
cmp
rorb
sbb
movsb
xor
xchg
in
je
std
or
fbstp
outsb
xlat
rcll
add
xchg
ljmp
pop
shr
lcall
dec
jns
in
jl
loope
pop
imul
insl
jo
mov
in
bnd
aad
cmpsb
fwait
and
adc
sub
idivb
in
in
add
dec
lcall
dec
out
adc
mov
icebp
push
stos
push
jl
dec
pop
imul
xchg
fisttpll
stc
imul
repnz
mov
hlt
push
dec
pop
movsl
test
mov
pop
scas
hlt
xchg
adc
mov
rorb
mov
push
add
pop
into
test
or
push
jmp
adcl
std
stc
adc
outsb
imul
pop
push
jae
int3
dec
jo
jecxz
add
jno
dec
sub
mov
popa
or
cmp
push
push
dec
pop
add
mov
movsb
dec
adc
xor
sub
fnstcw
push
adc
or
mov
xchg
xlat
std
inc
dec
xchg
ja
lods
lret
jne
insl
or
je
fstpt
push
push
add
mov
fnstenvs
aaa
mov
inc
into
outsb
int
cmpsl
sarl
inc
sub
daa
push
add
xlat
or
mov
sub
addr16
stc
mov
rolb
sub
or
and
adc
mov
push
stos
popa
inc
mov
pushl
push
add
add
jg
mov
mov
adc
push
data16
std
cmp
sbb
mov
imul
and
dec
cmp
dec
int
aaa
pop
sbb
jmp
cmc
cmovle
mov
repnz
or
sub
mov
scas
xor
push
dec
push
mov
push
xchg
inc
hlt
inc
add
lods
add
xchg
push
not
stos
pop
xchg
pusha
popf
ss
add
movsl
pop
lock
sbb
push
add
int3
cmp
jb
inc
movsl
pop
pop
scas
or
xlat
adc
lods
or
pushf
push
jecxz
fcmove
test
jl
loop
enter
dec
mov
jp
mov
lods
sub
or
sub
and
and
aad
mov
inc
test
sub
fs
mov
inc
lcall
cwtl
ss
insl
adc
aas
mov
pop
jnp
pushf
pusha
testl
or
lock
jbe
and
adc
mov
mov
or
stos
repnz
mov
inc
pop
imul
add
mov
mov
mov
jmp
mov
xchg
push
cmp
dec
cld
addb
sub
js
mov
xor
pop
jle
dec
sbb
imul
or
int3
push
push
cld
xorb
gs
fdivs
xchg
lea
jb
hlt
adc
adc
das
pop
dec
stc
mov
push
in
nop
into
pop
lock
lahf
fldenv
xchg
mov
inc
add
into
movsl
sbb
fistps
xor
inc
jp
iret
dec
adc
fdivp
jecxz
std
loope
les
in
adc
adc
stos
push
lret
pop
cmp
lret
pop
aaa
jbe
add
push
inc
push
fdivrs
sub
mov
cltd
rcll
movsl
push
xor
or
das
xchg
cs
push
or
mov
daa
imul
jne
or
shll
rclb
cmc
cs
es
lret
outsl
fiadds
lret
lcall
repnz
ja
jmp
and
clc
add
test
subb
cmp
xor
xchg
mov
jno
pushf
dec
incb
inc
push
xor
ret
repnz
fsubs
stc
inc
decl
lahf
fcmovne
out
xor
sub
repz
mov
mov
pop
shlb
addr16
push
inc
cltd
sub
add
je
js
imul
fbstp
mov
les
mov
inc
push
js
or
ficompl
clc
js
mov
jecxz
mov
pop
fdivrs
test
and
lods
inc
xor
in
outsl
sbb
shrl
sbbb
test
inc
ljmp
jle
dec
std
inc
sbb
inc
jg
ret
out
sub
sub
nop
sti
loop
jo
xlat
mov
bnd
xor
push
add
inc
pop
es
jecxz
ds
or
inc
imull
jae
aaa
jns
movb
mov
jo
ljmp
xor
xor
rorb
mull
adc
orb
ds
rcl
fsubp
jae
sbb
or
imul
mov
mov
cmpl
inc
inc
lahf
js
push
mov
sub
in
es
adc
mov
dec
pop
xor
ljmp
cmp
jg
cmpsl
cmp
dec
pop
loopne
repz
sub
mov
out
push
in
jbe
shll
lcall
cmpsl
pop
imull
sub
cs
ror
out
xor
inc
insl
mov
stos
lret
mov
xlat
mov
rcll
xacquire
or
into
xchg
sub
mov
jae
xchg
mov
adc
xchg
xchg
aas
mov
jno
clc
nop
inc
cltd
adc
leave
iret
pop
aaa
nop
std
and
and
lods
cli
push
daa
scas
ss
push
int3
push
frstor
sbb
ja
inc
repnz
sub
cmc
cmc
pop
insb
pop
pop
and
out
dec
xchg
ret
out
int
push
push
xor
stc
out
daa
dec
cld
dec
out
movsb
or
dec
ret
fdiv
push
xor
push
push
lods
cmp
test
sbb
out
adc
test
sbbb
push
data16
push
cmp
mov
in
xchg
add
movsl
bnd
adc
lret
jo
mov
test
push
and
aas
dec
and
les
pop
dec
jge
xchg
sti
adc
addr16
mov
loope
pop
mov
jne
jge
sysexit
rclb
movl
dec
xor
xchg
or
pop
in
sub
lret
inc
andb
inc
adc
mov
nop
lret
xor
mov
and
pop
fndisi(8087
and
std
fwait
ret
scas
or
and
xchg
jl
leave
mov
cmp
popa
iret
xchg
push
inc
mov
push
inc
push
jmp
sub
cmp
daa
test
pushf
cmc
cwtl
jne
xor
xor
clc
in
dec
mov
xchg
test
sub
clc
or
fstpl
xchg
inc
cmpsl
dec
cmpsb
mov
call
in
in
sub
subb
or
ret
lock
or
aas
push
sti
cltd
bound
mov
aad
test
es
stos
stos
fsubl
in
es
es
das
push
push
add
dec
pop
jne
je
out
loope
clc
lret
iret
pop
icebp
je
fmull
sbb
xorl
adc
pop
cmp
js
rcrb
test
push
mov
pop
cmp
mov
lods
lock
cmp
shrb
sti
mov
jb
sub
mov
inc
dec
mov
jnp
lods
xchg
pushf
inc
jnp
popa
dec
push
aaa
pop
pushf
jg
dec
fwait
cmpsl
sub
sti
hlt
insb
sbb
pop
jno
push
les
in
pop
out
inc
inc
loop
jbe
cmp
fs
iret
dec
or
mov
cmpsb
repz
dec
mov
or
cwtl
pop
popa
and
jno
mov
lods
hlt
mov
int
pop
fsub
inc
pop
popl
ret
pop
or
idiv
add
ret
jp
adc
es
push
mov
lods
adc
insb
jne
sub
pop
int3
sbb
enter
pop
push
dec
mov
test
cmp
std
xor
sub
mov
pop
outsb
cmc
add
movsl
outsb
out
or
mov
mov
shlb
in
adc
ds
cli
mov
jne
sbb
jp
mov
fdivl
pop
mov
test
in
adc
out
and
pop
inc
adc
xrelease
mov
test
andb
loop
inc
pop
push
mov
inc
jo
sub
daa
push
xchg
pop
mov
jb
int
or
bound
outsb
js
call
or
pushf
jg
inc
mov
sub
xor
sbb
add
mov
adc
popa
xchg
lcall
out
mov
or
loope
adc
jg
rorb
loopne
mov
pop
lahf
mov
mov
mov
arpl
add
sbb
test
and
ljmp
imul
popa
rcrl
dec
das
jno
dec
loopne
int3
in
push
cmpb
lods
add
out
cmp
insb
andl
ja
add
mov
lods
mov
dec
lods
testb
dec
mov
lcall
or
scas
xor
push
sub
inc
inc
push
xchg
and
and
add
add
mov
cld
pop
inc
call
loopne
dec
xor
aaa
stc
mov
mov
leave
adc
and
outsb
les
jecxz
mov
sbb
sti
in
ret
add
add
pop
jo
mov
movsl
sti
subb
sub
xor
adc
mov
add
mov
pop
pop
and
mov
imul
pop
clc
sbb
ror
mov
shrb
pop
mov
mov
sbb
mov
lret
dec
push
andb
pusha
lods
rol
pop
rcl
or
mov
aas
inc
xor
test
test
mov
loope
xchg
pop
sti
xor
neg
outsb
adc
daa
xor
mov
push
push
int3
xor
shlb
rorl
icebp
lds
jo
outsb
cmp
in
inc
js
mov
insb
nop
std
mov
jns
bound
out
lds
insl
sub
jne
repz
ja
sbb
pop
arpl
icebp
std
inc
ret
shll
add
mov
or
xchg
jge
push
adc
adc
sbb
jno
cld
push
es
and
push
xor
rclb
and
push
test
iret
mov
sbb
ret
add
mov
push
push
cld
jecxz
sub
test
pop
loop
dec
sub
leave
subl
mov
in
sbbl
add
incl
mov
jge
push
mov
xor
aad
mov
popf
cmc
mov
cmp
out
rcrb
sub
mov
stc
out
or
mov
pop
jo
pop
fs
xchg
lods
fildl
cltd
stos
cld
repz
xor
xchg
or
mov
or
push
xchg
fidivrs
sbb
xor
jnp
scas
hlt
inc
shll
or
xchg
fptan
das
mov
jg
imul
imulb
aam
push
cld
out
push
mov
les
out
inc
lock
xlat
icebp
add
ja
fcmovbe
add
jne
sub
pushf
mov
popf
scas
mov
cmp
push
inc
test
jnp
sbbb
out
inc
mull
adc
rcll
addb
and
lahf
jecxz
xchg
ficomps
sub
mov
into
es
inc
testl
mov
push
adc
pop
sub
xlat
push
push
lea
and
pop
add
fs
inc
mov
sub
pop
nop
loop
shlb
lcall
add
cmp
sbb
mov
mov
or
pop
pop
repnz
jl
push
mov
js
pop
sub
mov
push
frstor
dec
loopne
int3
fidivs
push
cmp
mov
jl
jg
test
mov
dec
inc
dec
addb
insl
push
mov
aaa
scas
adc
ret
mov
aam
pop
bound
data16
jae
jno
sub
mov
shll
out
insl
xlat
lret
cmp
cmpsb
or
or
addl
add
jnp
sub
sbb
dec
jbe
cli
mov
add
movsl
push
les
int3
or
sub
movsl
jnp
push
add
stos
mov
insb
pop
outsb
jae
fistps
push
nop
dec
imul
popa
addr16
jmp
jmp
add
enter
stc
mov
insl
push
fisubl
add
iret
add
aaa
enter
xor
jp
pop
js
push
roll
or
aaa
lock
scas
pop
fnsave
pop
std
sbb
je
xchg
js
push
dec
cltd
mov
inc
lret
mov
dec
arpl
scas
jb
das
ljmp
rcrb
stc
roll
ljmp
out
or
int3
aad
jnp
scas
loopne
add
xchg
popf
lds
popf
mov
movsb
in
pop
movsb
jae
divb
imul
mov
sbbl
jp
jbe
inc
mov
jge
scas
repnz
fistpl
das
ljmp
mov
lods
mov
push
insl
cmpb
in
jge,pn
flds
xchg
or
in
in
ret
jp
in
imul
les
mov
pop
xchg
fsubr
push
mov
inc
and
popa
out
shlb
sub
and
mov
aad
push
pop
mov
in
ljmp
stos
mov
adc
insb
loop
insl
bound
jb
lret
xor
cmp
push
cld
push
ficoml
adc
mov
push
lods
les
jo
das
or
fldenv
hlt
test
pop
scas
lahf
icebp
or
or
push
sub
popa
shll
sarl
jmp
rcrl
movsl
fucomp
mov
or
test
mov
mov
jne
ret
xrelease
aad
cmpsb
movsl
aas
scas
bound
mov
call
sbb
inc
jbe
mov
mov
push
dec
inc
mov
out
xchg
mov
inc
sbb
mov
adc
or
add
iret
insl
sub
je
adc
push
fidivs
mov
rcrb
sub
sbb
inc
inc
cmc
xor
sbb
pop
iret
lods
or
in
xlat
cmp
dec
pop
clc
push
je
adc
mov
cs
mov
cmp
cmc
pop
dec
nop
pushf
mov
int3
dec
lods
lods
add
adc
lahf
add
sbb
xchg
sub
pop
clc
daa
and
and
mov
loope
in
xchg
and
notl
movsl
insl
jnp
mov
jne
adc
lds
add
lea
jb
int3
aam
les
cs
dec
sub
ret
xchg
or
add
sub
pop
data16
sub
outsl
jb
popf
adc
daa
sahf
lcall
xor
push
dec
or
divl
cmc
jno
ljmp
add
inc
push
nop
sub
mov
js
rolb
sbb
push
dec
repz
mov
inc
or
cs
jo
add
cwtl
mov
mov
or
mov
or
cmp
inc
sarb
or
lcall
inc
insl
fmull
ja
mov
cmp
out
idivl
mov
je
ret
dec
and
subb
aas
and
nop
jne
cmpsl
sub
vmovlpd
jp
rorl
push
cmp
push
shrb
roll
int3
lock
mov
rol
sahf
fildl
jbe
xor
mov
mov
imul
dec
test
push
faddl
in
shl
jb
cmp
gs
inc
ljmp
test
fstpt
inc
xor
and
lds
movnti
mov
xchg
mov
jge
sub
mov
nop
popa
sub
adc
fcompl
add
test
nop
inc
aas
xchg
mov
xchg
dec
cltd
lea
mov
mov
jnp
inc
mov
sub
xchg
and
rcrl
stos
pop
add
lods
ficoml
mov
daa
adcb
aam
mov
xchg
sub
pusha
insl
xchg
aam
inc
ljmp
nop
nop
outsb
ret
pop
cs
cwtl
xchg
aam
sbb
jnp
leave
sub
insl
cwtl
test
jnp
mov
test
push
jns
fs
fnsave
loopne
lret
xor
in
sahf
push
inc
xlat
gs
add
mov
cmpsb
push
pusha
push
or
mov
call
mov
cs
and
adc
cmp
jmp
add
scas
inc
pop
shrl
push
adc
stos
out
mov
leave
mov
add
aam
mov
pop
js
test
xor
cmp
call
sbb
fistps
mov
fmull
xchg
lret
xor
cli
lret
adc
call
lahf
sbb
inc
out
push
psraw
cmp
stc
sbb
xchg
cmp
out
rol
cmpl
xor
sahf
jg
mov
xor
test
fwait
loop
add
push
push
sub
sub
jo
cmp
xchg
adc
jge
shl
inc
or
cli
gs
call
lods
scas
in
dec
mov
cmc
jl
movsb
mov
popf
ds
xlat
outsl
filds
in
cmp
inc
or
addb
mov
pop
add
xchg
shlb
outsb
dec
and
push
int3
dec
outsl
nop
mov
pop
mov
cmpsb
xchg
pop
outsl
shlb
cmc
cmp
sbb
sbb
rcrl
or
push
push
mov
mov
xchg
mov
or
inc
inc
mov
cmp
mov
sbb
ss
push
xor
mov
add
mov
clc
inc
mov
pop
mov
or
jge
shll
les
mov
add
push
mov
sub
push
movsb
pop
dec
sub
push
inc
jmp
hlt
pop
lods
aaa
insl
cmp
xchg
adc
mov
mov
xor
mov
adcb
mov
push
repnz
imull
aaa
adc
aam
das
pop
cs
gs
cwtl
leave
test
dec
mov
jbe
les
jne
cmp
jge
mov
inc
push
sahf
dec
xchg
jb
xchg
mov
out
mov
int
push
cmp
ljmp
ja
pop
sbb
leave
mov
push
and
dec
and
sub
jnp
mov
xlat
arpl
or
ja
mov
cmp
or
out
stos
cmp
fldenv
imul
and
pop
sub
cli
push
out
xchg
mov
pop
int
lods
mov
jno
ljmp
out
gs
inc
popf
cmp
mov
popa
push
push
add
pop
add
pop
sti
insl
gs
movsb
sub
mov
mov
push
jnp
xlat
adc
fists
cld
sbb
cmc
stc
mov
mov
aas
push
addl
adc
ss
stos
jb
sahf
dec
stos
inc
or
jno
push
xchg
aaa
mov
cld
sub
mov
dec
addl
adc
test
in
xor
and
nop
cmp
sbb
add
add
jnp
sahf
cmpsb
rclb
pop
cmova
push
pop
xchg
mov
sbb
dec
mov
insb
mov
testl
movsb
push
fcomps
push
cwtl
sar
jg
outsb
add
sbb
cmp
cli
mov
jmp
inc
popa
mov
es
inc
push
fwait
xor
rcl
call
outsl
mov
lods
bnd
outsb
lods
sub
out
xor
mov
xchg
pop
mov
std
movsl
clc
jge
out
inc
sbb
or
push
out
mov
xor
mov
xor
sub
xlat
in
fst
mov
dec
or
shrb
mov
mov
add
loopne
mov
pop
scas
sahf
and
pop
rcll
jns
nop
mov
stos
pop
int
int
mov
in
sub
and
add
dec
sbb
lret
mov
push
jo
in
cmp
adcl
cmpsl
xchg
inc
inc
lcall
scas
addr16
outsb
or
mov
jbe
lods
or
sub
jne
clc
mov
loopne
pop
push
sahf
push
int3
in
inc
pop
inc
mov
mov
cmp
add
fs
mov
cs
in
mov
cmp
fs
jae
jnp
test
xchg
jp
push
fdivrs
outsl
mov
repnz
add
push
bound
pop
xlat
mov
xor
jns
adc
adc
loop
push
sar
loopne
daa
mov
mov
jg
mov
aam
xchg
xor
iret
adc
dec
hlt
sub
cmp
jne
pop
stos
and
lcall
pop
mov
inc
jbe
adc
lret
add
mov
cmc
push
mov
fwait
sub
lea
add
push
stos
inc
test
stos
repnz
fs
outsb
add
and
stos
movsl
test
push
mov
pop
adc
sub
fimuls
add
jb
in
jle
mov
cmp
gs
scas
cli
in
fbstp
out
in
aaa
inc
stos
mov
notl
adc
pop
test
mov
adc
mov
insl
pop
pop
outsl
push
cli
lahf
pop
jo
add
cmp
test
rcrb
mov
push
inc
mov
fnstsw
jae
cli
cmp
mov
je
outsb
or
mov
int
jl
orl
xor
aad
lret
add
jns
and
popf
lret
cmpb
inc
daa
mov
push
cmp
mov
xor
cs
jl
jg
sti
outsb
orl
mov
std
mov
imul
fidivrs
cli
mov
outsl
fldcw
sub
test
xchg
cwtl
inc
in
adc
pop
fidivrs
test
push
mov
mov
mov
jecxz
dec
cmp
jnp
fisubrs
mov
lds
cmp
insl
imul
inc
cmp
or
je
or
cld
imul
adcl
sub
mov
lcall
jnp
sub
push
cli
fadds
xchg
xchg
push
mov
jge
mov
xchg
dec
movsl
mov
nop
sub
in
mov
pop
pushf
push
stos
mov
adc
mov
or
fucomi
sbb
into
mov
clc
mov
lahf
mov
int
iret
mov
sub
inc
daa
fstps
dec
stos
jp
shl
cmpsl
lahf
dec
jge
sbb
aam
mov
mov
cmp
pop
clc
and
pop
xor
cmp
xacquire
push
adc
ror
sbbb
jns
inc
hlt
xchg
mov
test
imul
mov
xlat
imul
hlt
adc
mov
lds
mov
jnp
add
inc
lock
xor
push
xchg
rorb
inc
and
enter
pop
cmp
scas
out
inc
push
fsubrl
jae
pop
lods
ss
push
cld
dec
mov
mov
sarb
push
cmp
cmc
mov
mov
std
sub
sarl
movl
repz
dec
mov
jmp
jge
std
fs
ljmp
pusha
cmp
les
sarl
add
insl
fwait
dec
cmp
jb
jae
or
addr16
out
fdivrs
je
insl
inc
jl
adc
and
jb
andb
insl
out
mov
fmull
sbbb
push
or
push
and
popl
outsb
sub
mov
aad
fwait
into
fnsave
mov
pop
add
dec
mov
dec
and
fiadds
push
xor
stos
pushf
or
xor
call
push
int
xchg
jo
sbb
repz
in
xor
add
jno
jg
xor
pop
rcl
jnp
cld
or
dec
mov
call
pop
mov
enter
sbb
inc
adc
fsubp
dec
push
fidivrs
fwait
in
mov
addr16
sbb
out
fisttpll
fistl
dec
inc
push
jae
cmp
xorl
ficoml
pop
mov
fmuls
add
jmp
mov
xor
data16
dec
add
scas
loope
jbe
jno
shl
mov
dec
cmpsb
adc
pop
leave
lock
ror
pcmpeqw
and
ljmp
mov
ss
ljmp
imul
jns
sbb
inc
sub
fwait
jecxz
pushf
jmp
xchg
cmp
cltd
test
movsl
movsb
push
cli
xor
sti
aaa
mov
movb
popa
xchg
and
inc
mov
xchg
cmc
xorl
jmp
outsl
sti
int
adc
adcl
xchg
jge
xor
loope
aad
fdivl
inc
and
int
scas
orl
sub
mov
jle
outsb
int
shr
in
sbbb
fcompl
ss
shrb
fiaddl
sbb
imul
push
rcr
out
cmp
xor
xor
cmp
xor
jns
stos
add
pop
call
arpl
sbb
movsl
outsb
push
mov
jp
push
repnz
pop
push
mov
and
je
mov
sti
xchg
dec
sarl
dec
jecxz
mov
sbb
popa
mov
in
jno
and
repz
inc
and
xchg
out
pushf
mov
mov
xor
adc
pop
push
dec
mov
sub
fwait
lret
lcall
mov
xchg
in
bound
cmp
or
sub
push
xor
data16
dec
cld
inc
mov
lock
fstpt
loop
arpl
sub
mov
fwait
out
and
iret
sub
mov
fincstp
ds
das
cs
daa
arpl
add
sub
dec
vorps
push
imul
adc
xor
jp
ficompl
push
xor
insl
sahf
js
in
fidivs
test
sbb
mov
xor
cwtl
xchg
cli
add
mov
out
mov
xchg
push
lods
adc
pop
push
xchg
or
sub
insl
mov
mov
jns,pn
ret
stos
fs
mov
shlb
cld
fwait
pop
pop
dec
rcll
jns
xlat
lea
dec
cld
subb
js
jle
inc
out
mov
test
mov
pop
or
sub
lods
roll
and
out
dec
and
xchg
adc
dec
fidivrl
push
ret
dec
cmp
imul
fdivl
or
jbe
inc
mov
mov
mov
sarl
popa
and
xor
fidivrl
add
fcomps
sub
lahf
pop
jmp
xchg
mov
and
arpl
push
jb
lea
inc
inc
add
shrb
scas
jg
div
sbb
mov
movsl
repnz
dec
adc
data16
rolb
inc
sbb
pop
fs
jbe
sbb
dec
and
ret
pushf
dec
jge
stos
add
movsl
jno
mov
incl
in
sti
cmpl
ror
arpl
adcl
faddl
mov
cmp
fstpt
aaa
movl
sbb
cwtl
outsb
lods
mov
jnp
sub
pop
mov
mov
xchg
xor
add
push
sahf
into
lcall
in
stc
sti
mov
jo
mov
adc
mov
out
mov
loopne
outsl
pushf
inc
fcomip
jae
ret
dec
sbb
mov
mov
lcall
jnp
mov
adc
jae
sub
pusha
pop
mov
repz
jb
mov
imul
xchg
pop
ja
rcl
push
test
out
or
movsb
push
jnp
pop
insb
cmp
nop
fisubrs
sub
and
out
mov
xchg
push
in
mov
in
cmc
adc
into
or
adc
loop
xchg
mov
xor
mov
jo
movsb
icebp
seto
scas
mov
add
or
fstps
std
jbe
hlt
sbb
inc
data16
mov
dec
data16
xor
movsl
sahf
xchg
repnz
or
xor
cmp
cmp
pop
cmpsb
mov
dec
xchg
mov
jo
ret
dec
add
sbb
xchg
inc
call
test
xchg
mov
mov
repz
pop
stc
test
lock
cmpsl
jge
pop
jo
das
adc
cltd
mov
or
mov
mov
sub
outsl
add
out
jne
mov
and
jno
fiaddl
shrb
mov
fnstsw
push
and
lds
cmpsl
call
pop
sub
cmp
scas
movsb
push
fldl
jg
rorb
fmul
push
adc
paddw
fs
xor
fisttpl
lods
lods
or
inc
and
ljmp
dec
mov
in
pusha
loopne
mov
cmp
mov
dec
sbb
sti
ret
popf
outsl
out
sub
call
fimull
les
arpl
push
ja
imul
jae
jmp
je
ss
jl
mov
nop
xchg
outsl
lcall
test
adc
shl
xor
call
inc
xor
in
pop
fisubrl
imul
pusha
jo
cmp
mov
add
divb
sahf
pusha
fisubs
loope
sbb
in
pop
adc
adc
in
popa
mov
sbb
retw
lock
rep
ljmp
cmp
pop
rorl
mov
test
stos
fcomp
cltd
cli
and
nop
aam
mov
xchg
test
cmc
fldt
xchg
xchg
shrb
adc
test
fstl
test
xchg
mov
cld
pop
repz
les
xchg
into
clc
push
rcrb
mov
add
mov
jne
cli
push
xor
dec
xchg
xor
jae
jl
sub
ror
add
dec
sti
fcmovnu
cs
pop
call
mov
or
inc
rol
mov
loope
inc
aas
jl
sub
dec
mov
ljmp
sbb
add
ret
inc
shlb
bound
add
add
xorl
arpl
xor
loope
in
lods
add
ret
sbb
stos
sub
xor
push
les
or
std
pop
push
out
mov
ss
shr
sbb
in
mov
fnstcw
add
jo
sub
outsl
mov
mov
sub
inc
call
cld
mov
movsb
adc
aas
popf
mov
cli
and
jmp
lods
push
add
cmpsb
cmpsb
mov
jb
lret
add
cli
outsl
dec
inc
mov
enter
inc
jl
xor
pusha
push
loop
loope
jae
jl
fs
pop
mov
lods
sbb
mov
mov
inc
popa
xchg
jb
stos
cmc
idivl
sub
adc
xor
lea
sbb
adc
mul
mov
mov
jae
lahf
xorb
negl
insb
test
lea
inc
mov
xchg
sbb
push
fdivrs
cmp
dec
and
pop
arpl
add
or
or
dec
add
shlb
loope
mov
mov
sbb
add
pop
repz
movsl
popl
push
iret
pop
mov
loopne
loopne
gs
inc
and
cmpsb
jo
sub
popf
outsl
icebp
mov
sbb
xor
inc
lods
push
lds
stos
and
add
aam
sub
les
sbb
or
pop
sbb
sub
loop
push
cwtl
fstpt
rcll
repz
cli
fwait
lret
pop
inc
ljmp
ret
popa
inc
mov
lret
sub
inc
push
jg
mov
str
mov
push
incl
fisttpl
fnstsw
xchg
jb
pop
dec
jns
fisttps
aad
test
aaa
iret
adc
xchg
int
cmpsl
and
fistl
scas
sbb
iret
negb
out
adc
jmp
cmp
inc
inc
push
add
pop
cmpsb
jge
cs
jb
mov
out
lods
out
shlb
xor
push
inc
xor
mov
stc
add
adc
popf
push
mov
adc
in
cmp
mov
xor
bound
jae
out
pop
cwtl
out
ffreep
fcoml
shlb
in
sti
mov
cld
sarb
test
int3
mov
and
in
cli
std
leave
scas
call
mov
mov
xchg
xor
mov
fsubs
pop
ljmp
movsl
scas
orb
aad
cmc
adc
xlat
sbb
mov
or
jb
mov
daa
imul
in
pop
mov
repz
outsb
fs
inc
mov
aas
pop
sbb
mov
ljmp
add
cmp
jns
add
push
aad
xchg
pop
ljmp
mov
cmc
arpl
pop
dec
outsl
pop
ds
repnz
loop
push
xchg
add
sbb
cltd
call
xchg
dec
mov
cmp
cli
inc
pop
rcrb
fdivrl
scas
mov
loope
push
les
ljmp
dec
data16
scas
xchg
jecxz
jmp
sbb
arpl
push
sub
push
dec
pop
mov
pop
fadd
repnz
sti
imul
rcrl
test
sbb
push
in
xchg
push
negl
aaa
or
adcl
idivl
sbb
in
ret
lret
int3
xchg
lods
js
push
dec
scas
adc
pop
xchg
pop
jno
inc
mov
int3
enter
ret
ljmp
or
xor
dec
mov
sub
sbb
int3
jbe
xchg
stc
je
push
pop
push
push
jns
ljmp
gs
popa
popa
jb
cmp
and
fwait
adc
mov
push
push
xchg
xor
adc
xchg
lods
cmp
sub
xlat
rolb
sbb
sub
xor
sahf
dec
xchg
shll
push
js
xchg
stos
stos
sub
lret
add
jmp
mov
or
shlb
pop
in
in
je
mov
sub
sbb
ror
test
test
ss
loope
loope
jle
sub
sub
adc
push
js
lcall
jecxz
jmp
pop
pop
enter
mov
jmp
sub
adc
lret
add
dec
ljmp
nop
jae
mov
lds
outsb
pop
imul
lret
push
imul
inc
iret
and
jbe
call
sub
lahf
mov
ret
xchg
loope
test
sbbl
mov
adc
sub
xor
das
mov
fsts
sub
dec
in
mov
pop
scas
mov
dec
gs
cmpb
outsb
and
in
mov
jge
aaa
lahf
daa
test
shrl
or
add
mov
jne
pusha
es
andl
sub
xchg
dec
lret
lret
jne
movsb
and
xor
xorps
push
push
call
jbe
add
mov
cmp
jmp
imul
sbb
dec
mov
fld
xchg
cs
xor
xchg
push
jne
jb
push
lea
mov
ret
and
dec
push
add
les
ds
cltd
popf
and
fwait
mov
and
dec
sbb
xchg
pop
mov
bnd
mov
mov
fdivs
fwait
inc
jae
test
in
add
mov
xchg
sti
fildll
mov
jl
ja
inc
inc
sbb
stos
aas
stc
addr16
movsl
out
add
and
cmp
cmpb
jne
add
cwtl
fwait
or
inc
pop
pop
stc
call
clc
movsb
out
inc
arpl
nop
ret
es
test
cmp
mov
and
daa
inc
xor
das
imul
out
ret
cs
sub
das
sub
mov
push
push
cmp
arpl
pushl
aam
lahf
pop
mov
cmc
jge
out
dec
xchg
jge
push
mov
xor
in
inc
add
fmull
mov
pushl
test
mov
sbb
push
jg
pusha
sbb
imul
cltd
sbb
ror
inc
adc
xchg
out
xchg
movsl
xor
sbb
push
mov
push
mov
out
mov
pop
push
and
test
in
jns
or
lcall
lods
shrl
adc
mov
aam
in
cmpsb
dec
dec
push
lret
jp
pop
dec
or
inc
jge
loopne
adcb
nop
addb
aaa
inc
add
jo
mov
add
pop
pop
or
test
xchg
or
movsl
xor
scas
or
outsl
push
jge
insl
xor
adc
inc
test
aaa
divb
inc
je
mov
arpl
sbb
bound
out
out
xor
inc
dec
dec
dec
fildll
push
jae
mov
pop
enter
in
cmp
cmp
xchg
sub
add
cwtl
and
xor
xorl
in
and
or
mov
int
xchg
nop
dec
outsl
xrelease
jg
adc
hlt
jns
mov
inc
adc
sbb
push
nop
js
sub
mov
add
test
push
out
call
decl
xor
xor
push
cwtl
test
jg
je
inc
pusha
inc
out
lods
cmp
add
movsl
lahf
mov
xchg
and
sarl
xchg
scas
test
lea
pop
test
lods
sbb
inc
add
add
sbb
aam
mov
push
add
push
jmp
xor
pop
xchg
push
mov
pusha
add
cld
insl
sbb
pop
xor
dec
sbb
jns
mov
xchg
aad
aam
lcall
jo
ret
sub
lods
sub
rol
sub
test
add
push
leave
out
test
xlat
mov
jecxz
gs
enter
pop
enter
sub
pop
mov
insb
sub
out
pop
push
sbb
dec
xchg
dec
scas
fs
jae
ss
push
cmp
loopne
mov
loop
sahf
mov
mov
jp
jp
aam
cltd
add
ret
pushf
sub
subl
jbe
aam
mov
rorl
pop
mov
pop
into
cmp
jne
fs
xorl
push
repz
es
cmp
fsubs
fnstenv
lds
fdivrs
leave
movsb
mov
ret
jno
add
jae
jb
cmp
lds
pop
int3
sbb
inc
scas
mov
push
jp
fsts
cmpb
scas
stc
mov
pop
lods
push
pop
fsts
call
scas
xchg
mov
xchg
jbe
xchg
mov
jb
out
inc
pop
aaa
incl
and
lock
fbld
aas
xchg
sbb
push
mov
jne
cmpsb
xchg
pop
pop
mov
movsb
mov
ror
scas
sub
movsl
jle
mov
imul
ss
cmp
xchg
xor
and
mov
mov
std
jmp
xor
cli
inc
hlt
das
out
add
mov
jl
ret
mov
or
cs
mov
cmpsb
cmpsb
inc
out
dec
test
es
cwtl
jo
es
xchg
push
scas
push
ret
icebp
shlb
pushf
fcoms
in
int
mov
out
mov
into
loop
fmuls
gs
in
mov
jl
inc
filds
loope
cltd
mov
and
mov
push
add
dec
sbbb
jp
dec
insb
cmp
inc
push
pop
in
mov
imul
icebp
push
push
sub
or
lock
iret
push
xor
xor
inc
mov
or
mov
fsubl
cltd
cwtl
incl
gs
xchg
mov
sbb
xchg
cmp
outsb
or
cmp
mov
fbld
mov
sub
outsl
pop
nop
flds
leave
mov
xor
jg
stos
mov
int
loope
ret
adc
cwtl
aas
sti
xchg
and
pop
or
xchg
cmp
mov
insl
lcall
nop
push
out
fistps
dec
push
sbb
xchg
add
and
sbb
jne
and
insb
xchg
jmp
fcompl
loope
cmp
int3
rcrl
push
dec
push
add
fmull
mov
pop
pop
mov
gs
push
test
sahf
rcr
mov
ret
adc
sub
insl
cli
jl
mov
dec
cmp
pop
dec
das
add
dec
stc
repz
xor
add
xor
push
in
jno
das
pop
daa
scas
and
shll
sbb
stos
pusha
cli
mov
outsl
sti
cltd
and
addl
or
popf
xor
lods
lods
fisubrl
mov
sub
pop
pop
ret
jns
rcl
ficoml
xor
fdiv
sbb
adc
rcrb
lcall
sub
loope
push
leave
xchg
arpl
and
inc
nop
mov
hlt
test
pop
mov
insb
and
xchg
das
or
inc
mov
jmp
or
and
imul
xchg
fsubrp
clc
pop
dec
push
inc
dec
in
aam
sub
fidivs
cwtl
jb
shlb
int3
pusha
and
add
cmp
xchg
test
cmp
jnp
sub
adc
jp
pop
dec
push
sbb
rorb
scas
std
pop
pop
mov
mov
not
sub
sahf
and
add
ljmp
pusha
in
dec
fimuls
pop
andl
pushf
mov
jl
es
and
or
push
into
xchg
sub
jl
shl
pop
nop
mov
imul
mov
into
lret
sbb
in
jp
bound
mov
arpl
fistps
pop
xor
add
mov
mov
cmp
rcll
xor
inc
cmp
test
cmp
dec
ss
outsb
lret
aaa
inc
mov
andl
scas
push
jge
mov
pop
sbb
es
dec
jae
lds
xor
test
mul
mov
mov
jno
out
mov
mov
lret
jle
push
inc
jge
push
fucomi
jno
sbb
sub
or
and
sbb
dec
cmc
mov
in
push
pusha
pop
pop
mov
enter
mov
negb
lods
cmp
cmp
out
push
mov
pop
dec
dec
push
pop
fistpl
orl
xor
sub
jg
aas
mov
test
xchg
jnp
pop
jns
mov
pushf
mov
pop
je
fnstcw
pushf
or
lret
jne
and
pusha
jge
dec
in
aam
shll
out
rol
jmp
and
mov
imul
aam
pop
mov
insl
xlat
add
aas
cld
dec
add
mulb
xor
icebp
das
or
push
adc
imul
mov
sbb
or
cmp
mov
add
add
pop
and
aaa
jp
push
mov
cmc
xor
adc
pop
and
in
test
ljmp
mov
dec
lahf
enter
sbb
adc
sbb
fcompl
roll
roll
stos
jno
cmp
cmpsl
pop
sahf
dec
rorb
subl
push
inc
mov
jbe
bound
jp
push
cmp
cltd
inc
jmp
add
push
loop
mov
incl
fcmovu
fmull
cmpsb
jo
or
fstpt
das
jmp
fstps
sub
jp
jb
adc
inc
inc
mov
mov
hlt
or
adcl
mov
mov
fdivl
pusha
cld
xlat
lods
dec
mov
dec
jo
push
sbb
jb
sub
lcall
pusha
lahf
xchg
ja
pop
outsl
insl
xchg
call
xor
js
fidivs
addr16
dec
lods
sub
addr16
jo
std
push
mov
test
push
in
push
std
stc
adc
jmp
push
inc
out
lcall
dec
cmp
and
rcr
clc
push
mov
push
cs
incb
add
mov
jmp
push
enter
adcl
jge
add
popa
jae
or
icebp
in
xor
add
stos
lods
dec
cmp
mov
dec
daa
in
leavew
bound
sub
or
sbb
jbe
fimuls
cmp
mov
imull
filds
push
inc
pusha
cmp
ret
jnp
into
jae
repz
mov
adc
xchg
insl
add
sarl
dec
stos
std
std
inc
das
push
decb
jbe
xchg
mov
push
adc
jp
mov
inc
and
sub
xlat
jns
adc
mov
int
sub
jl
arpl
js
stos
xchg
shll
mov
pop
aad
inc
out
mov
jbe
mov
xchg
inc
in
lods
adc
push
cmp
fs
test
inc
ss
mov
fidivl
cmc
pushf
fsubs
inc
mov
cltd
sahf
push
fcmovnbe
dec
ds
out
push
test
int
push
push
adc
loopne,pn
negl
leave
sub
mov
imul
xchg
push
jnp
or
roll
inc
lret
push
dec
and
xor
mov
icebp
andl
mov
dec
inc
mov
inc
jp
filds
inc
sbb
cmp
sub
stos
add
vdivss
cmp
push
out
pop
insb
insl
and
cli
aaa
xor
jg
sar
pop
stos
scas
pop
cmp
sbb
test
xchg
pop
in
aas
in
and
hlt
arpl
jo
sbbb
mov
mov
mov
jg
jno
mov
cli
fstl
jge
jge
push
adc
xchg
sub
outsb
testl
popf
movsb
mov
xchg
jp
pop
stos
xor
jns
int3
cmc
cmp
cld
rcrb
fimull
push
pop
test
or
stc
ss
mov
ret
ljmp
in
push
push
ret
inc
in
js
lret
ljmp
movsl
adc
pop
lret
outsb
xchg
jge
inc
call
mov
mov
mov
push
push
pmullw
mov
push
mov
call
xor
lods
scas
fst
ret
lea
popf
xor
pushf
loopne
mov
dec
lret
push
adc
movsb
loopne
cmpsl
or
pop
ret
add
iret
pusha
inc
mov
insb
jnp
and
xor
int
mov
cmp
pop
push
rcrb
pop
lret
stc
xchg
dec
imul
fisttpll
stos
loop
fsubrl
gs
les
arpl
pop
mov
dec
jne
pop
mov
inc
sbb
push
int3
rcl
mov
fcompl
cmp
bound
test
in
inc
test
shrl
inc
clc
push
test
cmp
leave
dec
gs
lock
push
cmp
test
mov
loope
faddp
cmpsb
mov
shrb
sahf
insb
clc
call
mov
outsl
sahf
jb
jmp
or
mov
jmp
pusha
adc
dec
jbe
push
jg
jns
outsl
sbb
adc
ret
dec
sub
test
and
sarl
lds
popa
leave
jmp
and
lods
cmp
dec
outsl
sub
loop
or
push
out
jns
dec
jne
sub
fsubrl
push
mov
or
push
sahf
pop
dec
idivl
adc
icebp
inc
arpl
popf
jmp
mov
xorl
in
xchg
pop
orb
repnz
sbb
adc
pop
movsl
sub
or
mov
test
push
stos
mov
dec
xchg
pusha
xor
jecxz
xlat
out
cli
cs
mov
dec
xchg
fistl
lahf
mov
std
adc
mov
std
outsl
outsb
mov
dec
aas
icebp
js
lret
pusha
pushl
cmpb
push
adcb
jl
push
enter
outsl
pop
incb
and
lods
ljmp
ljmp
dec
mov
add
shlb
fsubrs
fdiv
mov
test
xchg
pusha
pop
popa
clc
shlb
xor
inc
fwait
jo
daa
cli
ds
pushf
pop
mov
mov
mov
scas
lret
xor
add
rcrl
jno
mov
sub
xchg
and
test
aas
xor
jmp
lahf
sbb
jecxz
rol
in
pop
mov
aad
xchg
and
imul
lcall
pusha
push
icebp
cmpsl
mov
mov
mov
iret
inc
sub
cmp
out
jle
lret
sub
or
mov
jle
mov
dec
xchg
movsb
dec
addps
xchg
pop
jmp
mov
push
adc
sub
push
je
insl
aaa
lahf
mov
rcll
mov
push
jne
mov
jp
scas
push
popf
leave
les
or
daa
or
mov
cmp
mov
add
push
scas
lret
or
mov
pop
into
xchg
mov
xlat
xor
jne
xchg
test
js
mov
inc
push
push
cs
or
mov
sti
xor
testl
ds
movsl
push
xor
ret
push
daa
cmp
loope
adc
dec
push
adc
outsb
mov
hlt
imul
js
negb
xor
and
and
jnp
sbb
repz
push
pop
outsl
arpl
fwait
mov
mov
in
ret
in
mov
lea
call
jmp
push
add
daa
je
int
inc
mov
cmpsb
push
jnp
in
push
mov
mov
pop
add
add
enter
xchg
sarl
dec
pusha
fsubrp
push
push
movsb
cli
stc
lock
call
btr
stc
aaa
cmp
imul
and
jp
outsb
addl
ljmp
mov
fnstenv
int
in
test
adc
xlat
loop
mov
popl
ljmp
mov
and
push
mov
push
pop
sbb
stos
dec
sub
sbb
mov
imul
inc
or
cmp
and
leave
jl
and
lcall
inc
pop
dec
andl
add
sub
jecxz
lock
jae
or
push
stos
shlb
pop
sub
int
out
shrl
sub
or
fcmovu
mov
cmp
out
orb
fsubl
rcll
jae
lea
add
jbe
popa
insl
outsb
std
clc
push
xchg
mov
cli
xor
mov
js
add
inc
call
cmc
lea
mov
and
fidivs
sub
mov
mov
aam
sbb
mov
idivb
ja
fsubl
mull
fmull
or
ficoml
mov
das
scas
sbb
movsb
outsb
movsb
add
sahf
and
icebp
inc
test
mov
out
scas
test
jns
adc
insw
pop
and
cmc
or
pop
in
ja
inc
jo
mov
push
push
loop
test
rcrl
mov
push
daa
add
mov
or
inc
addr16
outsb
test
daa
ret
jno
xchg
fs
addr16
pop
pop
pop
and
sbb
arpl
fdivrl
mov
mov
dec
push
lods
xor
mov
imul
das
xchg
xlat
sahf
pop
or
test
pop
pop
cmp
add
mov
pop
jne
es
lcall
int
push
leave
mov
fs
popa
call
test
adcl
mov
xor
mov
outsl
mov
pushf
and
in
fs
js
sbb
int3
ss
jmp
add
loop
cmpsl
arpl
lret
stos
aad
dec
popa
cld
mov
iret
mov
cs
mov
adc
bound
jl
pop
cs
cmp
ret
pop
out
subb
or
pop
lahf
aas
aaa
cmp
push
push
loopne
mov
daa
adc
jg
test
or
mov
ret
int
push
push
adc
dec
sub
xor
cmc
dec
sahf
imul
cmp
arpl
pop
pop
rorb
dec
lret
test
cli
inc
pop
jno
fisubs
adc
movsl
testb
jle
pop
cmpsb
pop
mov
push
mov
das
pop
mov
and
push
jne
icebp
in
push
pop
bound
xchg
movb
pop
and
mov
push
popf
push
lret
mov
fs
sbb
outsl
adc
xchg
cmp
popa
lds
loop
jbe
hlt
jmp
mov
hlt
js
rcll
lea
ja
mov
cmp
push
adc
movsb
andb
fistpll
xchg
pop
mov
scas
jae
pushf
in
aaa
cmc
xor
int
sti
xor
add
fstpl
adc
enter
adc
mov
inc
sub
sbb
stc
fsubs
lds
sub
sbb
mov
aaa
mov
cmp
arpl
xor
jecxz
adcb
add
sbb
jnp
sub
xorl
test
aas
cmp
fs
repz
fldenv
mov
mov
jae
push
stc
stc
xchg
xchg
mov
js
push
inc
xor
jmp
das
sbb
adc
ja
test
mov
test
cld
stc
in
cmc
ror
shll
push
pop
inc
inc
test
adc
dec
out
lds
out
out
mov
mov
mov
push
int
jmp
adc
mov
bound
ja
xor
push
dec
subl
xor
adc
sbb
xchg
dec
push
pushf
std
xor
jnp
pop
mov
movsb
aam
enter
xchg
cmc
fldt
mov
xlat
mov
mov
push
push
mov
pop
push
ljmp
dec
movl
scas
push
cmpsl
lods
scas
ljmp
mov
ss
inc
stos
rcrb
and
lea
pop
cmp
mov
sbb
cmpsl
jmp
dec
sbb
lea
inc
je
cmp
and
mov
cmp
and
pop
adc
push
rorl
pop
sub
xchg
lret
xor
jp
jg
fxch
mov
out
mov
stc
andb
adc
lcall
and
add
das
or
xchg
aam
push
icebp
pop
gs
pop
mov
and
idivl
in
fdivs
inc
popf
out
fnstsw
jnp
fdivs
jns
pop
mov
jg
sub
pop
jae
adc
lea
push
out
cmc
sub
cli
sub
jecxz
cmp
sbb
mov
js
lahf
lcall
cmp
repnz
sub
mov
rolb
aad
ljmp
cmpsl
popf
dec
outsl
adcb
lock
mov
aas
movsl
movsb
test
pop
dec
out
jae
add
test
divl
daa
pusha
sub
daa
std
dec
inc
outsl
repnz
movsb
iret
fstps
dec
ss
push
daa
or
into
jge
shlb
orl
popa
aas
aas
jne
clc
lds
xor
jae
dec
aad
inc
mov
jbe
sahf
pushf
fcomp
out
sbb
ljmp
lods
xchg
inc
mov
jmp
push
add
icebp
push
add
mov
es
push
pop
xor
jbe
in
or
pop
add
xor
xor
pop
cmp
or
cmp
inc
sub
jo
fcomps
pop
or
pop
nop
add
or
or
sbb
leave
jp
cmpsl
fnstsw
out
fmulp
jb
dec
lds
add
mov
or
leave
or
pop
xor
int3
or
aaa
mov
or
leave
jnp
add
cmp
pushf
cmp
mov
and
xor
int3
jb
cmp
leave
adc
cltd
je
push
mov
mov
dec
sbb
cltd
push
pop
sbb
rorb
sub
insb
lods
int
sbb
xchg
cmp
and
xchg
adc
popf
mov
rol
sub
or
add
scas
jo
cld
sub
jge
aam
daa
jo
test
aam
int3
jmp
mov
dec
shrb
pop
movl
lret
testl
lods
jbe
scas
imul
mov
mov
pop
cmpsb
int3
dec
in
sub
add
xor
in
jge
jo
loope
cmp
push
jecxz
pop
adc
inc
mov
cld
xchg
adc
lds
xchg
aas
aad
cmpsb
js
enter
inc
stos
mov
movl
dec
loopne
ret
cs
lret
movsb
pushf
jmp
int3
fwait
jge
dec
mov
mov
repz
jg
mov
xchg
lahf
jmp
faddl
sub
lea
pop
js
push
mov
xchg
sub
into
pushf
insl
mov
insl
xchg
and
sahf
fidivs
mov
push
inc
xlat
outsb
sbb
xchg
xor
mov
sub
ss
adc
mov
jns
shl
mov
loop
push
gs
lret
sub
insl
jae
notl
inc
fmuls
icebp
lret
stos
push
adc
push
jl
pop
mov
mov
pop
int
mov
cli
adc
aaa
fs
inc
mov
fists
std
pop
pop
push
add
mov
and
push
ss
bound
jge
pop
jmp
or
or
stos
and
or
or
cmpsb
add
sarb
and
push
sbbl
add
cltd
popf
dec
xor
movsl
pop
mov
mov
bound
push
pop
inc
and
idivl
xor
inc
mov
js
xchg
pop
arpl
jl
cld
movsl
popf
jns
push
aam
pushf
push
inc
jnp
or
mov
inc
jl
imul
iret
shrb
jnp
push
push
push
idivl
push
out
pop
xchg
jg
clc
mov
pop
lods
pop
std
mov
pop
dec
data16
lods
mov
xchg
mull
lds
sbb
jo
mov
fisubrl
fisttpl
arpl
cli
aas
mov
gs
cli
mov
jmp
xchg
sub
pop
xor
or
mov
xchg
push
out
pop
cmp
sti
rclb
and
imull
sub
pop
push
xchg
popw
mov
dec
insb
sub
sbb
and
bound
popf
daa
or
das
rsqrtps
test
dec
and
and
inc
add
xchg
mov
fmull
sti
cmp
outsb
rcrl
pop
mov
adc
call
sbb
fimull
inc
jns
dec
fsubrl
and
dec
dec
mov
stc
fwait
les
int3
sbb
inc
xchg
jbe
adc
lds
aad
mov
push
mov
push
adc
mov
mov
hlt
xchg
jae
inc
int
push
bound
mov
fdivs
test
mov
add
fs
mov
lods
addb
aam
out
cmpsb
into
lods
and
push
sbb
or
inc
jmp
dec
arpl
lods
pop
cwtl
fadds
fwait
test
loope
pusha
arpl
mov
aaa
scas
adc
jge
push
ljmp
stos
mov
mov
jo
popa
add
sbb
xor
scas
loopne
aas
outsl
ljmpw
inc
jns
fstpl
mulb
out
adcb
jg
push
loop
xlat
cmc
push
xchg
clc
mov
cmp
aad
jnp
repz
xchg
jns
push
and
mov
mov
xor
mov
xchg
lahf
jl
lods
and
imul
jecxz
jp
dec
mov
repz
test
sub
mov
xchg
or
push
sub
sub
xchg
pop
ds
xchg
adc
les
cmpsb
adc
cmpb
out
jmp
leave
sbb
mov
adc
cmp
in
push
push
push
repz
test
jo
mov
andl
jne
mov
push
add
mov
push
and
xchg
js
cld
clc
jecxz
orl
push
insl
fidivs
faddl
jp
cli
insb
add
movsl
sbb
cmp
mov
xlat
in
mov
hlt
jmp
push
pop
rcrl
lahf
lock
adc
cmp
cld
sbb
jmp
ss
mov
scas
add
jle
dec
in
adc
inc
cmpsl
mov
pop
push
and
cmp
dec
nop
pop
inc
fldl
sbb
sub
aad
in
dec
mov
in
fwait
push
icebp
inc
dec
inc
inc
loope
jns
or
mov
fstpl
lret
inc
out
lea
sahf
out
push
pop
pop
xchg
lea
push
jg
test
adc
push
outsl
sub
adc
or
cmovp
outsl
cmp
cmp
into
cmp
mov
lock
lods
push
jae
fcomp
push
mov
mov
or
shl
fs
loope
xchg
xchg
inc
mov
mov
out
outsb
mov
inc
clc
bound
xor
scas
sbb
and
sub
movsl
cmp
push
lcall
adc
cld
add
xor
pushf
pop
or
jmp
cli
mov
or
dec
jecxz
push
ss
aas
cwtl
test
jmp
mov
sbb
popf
mov
sub
movsb
pop
scas
stos
fmull
loopne
outsb
inc
mov
mov
push
repnz
call
mov
pop
lds
out
cwtl
and
or
movd
cmp
pop
stos
ljmp
das
lods
xchg
add
popa
jl
fistl
add
pop
jb
cmp
movsb
add
jae
pop
dec
das
mov
int
pop
inc
mov
imul
addl
mov
jge
sub
int3
push
adc
lret
xchg
sub
sub
dec
loopne
ret
adc
and
stc
fiadds
out
mov
loopne
dec
out
xchg
sub
xor
daa
outsb
jns
push
leave
push
es
xor
pop
jle
jae
jecxz
adcb
fdivrp
aas
mov
stos
test
out
cmc
add
or
prefetch
or
gs
add
xchg
dec
xchg
xchg
dec
mov
xchg
sbb
imul
js
xchg
dec
cmp
inc
or
pop
fisttps
loopne
loop
xor
mul
mov
lcall
jl
popa
dec
and
data16
cmp
sbb
fnstsw
andl
leave
arpl
popa
and
mov
cmp
inc
sub
mov
xor
and
push
mov
js
popa
mov
fnstcw
sti
out
inc
out
sub
mov
xorl
outsb
or
inc
mov
or
or
aam
in
faddl
bound
pop
imul
xchg
lret
ret
fsubrl
xchg
mov
jmp
sbb
rolb
push
jnp
pop
repnz
inc
sbb
cmpsl
jmp
add
into
mov
pop
pop
cmp
mov
sub
mov
icebp
cli
cmp
mov
repz
cwtl
and
test
xchg
add
cmp
sub
ljmp
pop
jns
lret
leave
ljmp
test
les
mov
out
popf
xchg
into
sbb
inc
cltd
or
mov
dec
sbb
and
mov
ss
dec
shl
mov
mov
mov
fildl
popa
sub
xchg
or
push
mov
pusha
xchg
scas
dec
fdivrp
adcl
fbld
mov
jle
int
stos
loop
sbbb
push
out
dec
cmp
jb
mov
sbb
dec
adc
sub
cmp
aaa
and
movsb
cmp
cld
pop
fistpl
fists
ficoms
jl
and
jecxz
fucom
xchg
cwtl
repz
pop
and
sbb
into
adc
xlat
inc
sbb
repz
std
out
lods
and
sub
and
stos
and
xchg
subb
adc
mov
in
clc
xchg
in
out
test
shll
inc
cmp
push
pop
incl
dec
mov
jns
adc
shrl
or
pop
loop
pop
dec
add
fsubl
cmc
rorb
pusha
lods
ss
jae
jo
scas
push
adc
mov
mov
das
mov
mov
mov
mov
mov
sahf
xchg
outsb
into
mov
ja
scas
xor
fdivl
mov
adc
rcrl
inc
lret
push
cmpsl
aaa
fsubs
inc
sub
jl
xchg
pop
pop
ss
xorl
rcll
sub
out
sahf
push
daa
imul
aaa
pop
jne
jbe
idivl
xchg
cmpsl
mov
pushf
enter
lcall
out
push
ret
imul
adc
and
lret
jns
addb
fldt
cltd
or
pop
loop
xor
addb
and
call
cli
cmp
scas
lret
mov
test
inc
into
out
push
mov
lea
xor
pop
mov
test
pop
xchg
loop
or
call
mov
jg
inc
mov
popf
push
sub
or
movsl
mov
mov
pushf
sbb
xchg
test
jno
test
lret
outsb
jb
cmp
sub
decb
xor
pop
xchg
add
shrb
and
adc
out
movsl
lea
push
mov
cmp
dec
cmpsb
subl
adc
dec
aam
sub
pop
pop
imulb
dec
push
je
imul
aaa
jecxz
sbb
xor
mov
aad
jnp
mov
cs
or
pop
mov
lock
addr16
inc
mov
rolb
int3
mov
dec
imul
shr
adc
jmp
repnz
cmc
mov
xchg
test
cmpsl
pop
dec
sbb
sahf
dec
or
mov
mov
mov
test
add
jns
push
fmull
or
xchg
push
jecxz
cmp
aam
xchg
fs
in
pop
cs
call
andb
pop
repz
xor
xchg
sub
ds
inc
outsb
add
and
or
pop
cmp
push
clc
xor
push
jnp
pusha
mov
lds
outsl
movsb
movsl
inc
aas
cli
jl
std
and
jo
ja
cmp
fucomi
mov
scas
jl
push
movsl
jmp
or
aaa
cwtl
push
movsb
dec
mov
jno
xchg
add
xchg
cltd
and
pop
jnp
mov
test
dec
cmp
sub
repz
and
cwtl
nop
xor
xor
and
sub
outsl
inc
outsb
lock
lock
testl
pop
xchg
push
and
jns
inc
fucom
mov
call
cld
in
icebp
and
sub
mov
xchg
inc
mov
xchg
xor
inc
test
fwait
or
fstl
pop
xchg
adc
push
jp
pop
mov
push
shlb
daa
mov
pop
sub
sahf
mov
fldenv
xchg
lcall
sti
aas
xor
sbb
jns
jg
daa
xor
lret
in
in
jecxz
push
lsl
jae
insb
pop
out
xlat
fdivl
rorl
sbb
xor
aaa
in
pushf
lods
fwait
movsb
jb
jp
pop
sub
push
sub
push
in
das
ja
daa
and
scas
arpl
mov
and
mov
pop
mov
vpsubb
sahf
mov
xlat
es
fiadds
mov
out
cmp
or
inc
mov
aad
jo
std
ret
push
add
cltd
fwait
iret
cmp
stc
popf
das
xchg
xor
xor
rolb
jne
data16
mov
stos
out
xchg
lret
jmp
xchg
and
and
lods
dec
je
push
fistl
mov
dec
stos
xor
cmpsl
cltd
push
pop
cmp
shlb
sti
leave
nop
call
lock
mov
out
jecxz
pop
jne
int3
sub
lds
add
push
dec
loope
lahf
dec
mov
clc
mov
fisubrs
addr16
cmp
ret
insb
xor
jo
outsl
aaa
xchg
mov
mov
mov
jno
movsb
cmp
jmp
cmpb
push
fidivrs
xchg
addb
sbb
cltd
sub
mov
cwtl
test
add
jno
xor
push
seto
mov
sbb
rolb
push
sahf
jmp
xor
inc
push
mov
xchg
hlt
push
ds
lcall
add
xchg
mov
data16
cmp
fucom
xor
int
sub
icebp
popa
stos
fimull
xlat
add
sbb
out
ja
js
ja
lahf
ja
jbe
rol
fdivrp
cld
scas
movsb
xor
jmp
cmp
and
les
arpl
call
pop
push
push
xor
inc
leave
mov
sti
sahf
in
loope
cmpsl
and
ljmp
sub
add
inc
and
sbb
mov
ljmp
pop
sub
sbb
push
aam
and
inc
or
push
push
cmp
fwait
or
sahf
sub
addr16
pop
cltd
inc
pop
inc
pusha
and
cmp
fcoms
mov
outsl
fs
xchg
xchg
sete
repnz
into
dec
jmp
inc
ja
pusha
dec
lods
jecxz
cmc
outsb
inc
cmpsb
repnz
mov
gs
out
ffree
push
hlt
cmpsb
call
jp
movsb
cs
xchg
lods
and
mov
cmp
xor
arpl
lret
ds
mov
add
lret
scas
sub
loope
mov
sbb
pop
outsl
mov
lea
or
aam
pop
mov
adc
fildll
cltd
in
sub
sub
add
inc
movsl
inc
test
gs
push
xchg
mov
xchg
test
test
in
dec
lret
xchg
jnp
cltd
fisubrl
icebp
sub
flds
cli
mov
inc
mov
fildl
iret
test
je
jb
shlb
fucomip
xlat
jl
js
jmp
fs
pushf
jbe
pusha
jecxz
in
xor
mov
cltd
imul
adc
pushf
xchg
fdivr
push
pop
dec
fistpll
cmp
inc
lahf
inc
lods
inc
inc
lock
push
lcall
ja
pop
fucom
pop
sub
sti
movb
pop
mov
ret
aas
les
fs
shl
pop
aad
push
cs
push
cmp
mov
lret
lock
lods
in
addl
mov
lock
enter
jle
into
push
jno
rcll
hlt
mov
das
pop
ret
lock
sub
xchg
repz
enter
scas
mov
add
mov
rcl
je
xor
popf
push
es
shlb
in
cmpsl
pop
cmpsb
movsb
clc
into
mov
addr16
mov
pop
mov
gs
xchg
shlb
mov
mov
call
sub
scas
imul
dec
aad
push
cmpsl
mov
in
push
jge
hlt
add
sbb
or
cmp
ljmp
mov
out
xchg
je
aaa
fcmovb
ficomps
pushf
addr16
inc
icebp
mov
jae
sub
lods
xchg
push
xchg
sub
push
jnp
in
add
adc
shrb
dec
jb
push
push
xchg
arpl
mov
mov
ss
rorb
jg
test
pusha
roll
cmpsl
mov
sbb
inc
mov
pop
dec
dec
or
and
incb
cmpl
adc
pushf
movsb
loop
lods
push
dec
outsl
pop
xlat
fcom
cltd
push
xchg
jne
cmp
scas
cltd
mov
hlt
lods
iret
fs
mov
fbstp
or
nop
aam
mov
inc
dec
adc
pop
mov
inc
sti
xor
ret
inc
leave
sbb
add
cmp
mov
adc
ljmp
js
add
sub
nop
pushf
mov
and
int3
add
in
fcompl
ret
aas
sbb
test
loopne
das
adc
jecxz
sarb
clc
pop
push
rclb
push
addb
sub
xchg
adc
sub
je
push
sub
bound
enter
cmp
cwtl
lds
jo
or
xor
cli
jno
jo
shlb
or
sti
mov
sub
push
in
shlb
arpl
leave
sub
mov
sbb
dec
jge
push
sub
ror
in
outsl
ds
in
cld
mov
es
jb
push
faddl
push
pop
loopne
repz
push
les
lock
push
jp
out
out
mov
in
dec
inc
xchg
cmp
scas
sbbb
ret
mov
dec
adc
leave
sbb
pop
xor
icebp
mov
nop
xlat
push
aas
or
or
nop
adc
imul
xchg
lcall
mov
jge
push
imul
or
and
mov
and
cmp
stos
jne
dec
loop
cltd
add
fsubrs
sbb
lcall
pusha
mov
inc
cltd
cmp
xchg
pushf
xor
and
or
sbb
xor
aas
pop
stos
je
das
into
sbb
pop
xchg
fcmovb
loopne
jno
data16
lcall
les
iret
lret
add
dec
push
test
dec
orb
shlb
loope
push
cmp
dec
sub
push
push
bndstx
sbb
mov
lds
mov
jle
testb
xor
data16
inc
dec
mov
push
rcll
mov
int
xlat
fistpll
fcomip
in
cmp
lahf
nop
sbb
jno
pop
and
movsl
mov
mov
outsl
stc
push
mov
ret
scas
mov
push
hlt
jle
insl
sbb
cmp
mov
or
add
push
rclb
cld
cltd
and
mov
mov
sahf
mov
lock
cltd
mov
lock
int
xchg
jbe
ss
sub
xor
stos
push
ret
mov
lea
lea
scas
out
add
clc
adc
pusha
aaa
jnp
fimull
popa
inc
sub
es
data16
stc
jp
xor
cmp
sub
addr16
aad
scas
loop
pop
lahf
cmpl
adc
int
arpl
dec
lods
ds
cli
popf
mov
inc
adc
sti
push
popf
rorb
in
incb
lds
div
testl
std
sbbb
push
mov
cmp
pop
jle
push
mov
in
sub
pop
mov
cli
aaa
stc
xor
pop
scas
sahf
lret
aam
inc
hlt
or
test
jecxz
mov
leave
or
mov
cmp
outsb
loope
arpl
and
cmp
int3
fnstenv
sti
xor
pop
bound
ds
and
daa
jns
iret
punpckldq
xchg
xchg
xchg
dec
orb
add
outsb
loopne
cmp
mov
repz
test
jns
js
jnp
pop
jecxz
repz
cltd
fstpt
mov
mov
rcl
dec
lds
sbb
or
dec
pusha
sub
cs
jle
shrb
sub
mov
cmpsb
pop
ljmp
btr
lea
pop
mov
pop
cli
outsb
pop
sub
sbbb
jbe
into
mov
and
hlt
shll
fnsave
lods
stc
dec
xchg
or
enter
xchg
data16
sub
jmp
push
jnp
dec
sub
fidivl
in
aaa
out
fldcw
xchg
sbb
inc
cmp
bound
jmp
dec
clc
xor
loop
pop
test
dec
add
mov
jo
mov
in
mov
stc
outsl
inc
hlt
fs
mov
sbb
and
mov
cwtl
test
jbe
sub
idiv
dec
daa
push
iret
mov
mov
sub
ljmp
lods
push
jmp
sarb
mov
loopne
mov
je
adc
mov
jae
xchg
test
insl
push
test
xchg
std
frstor
ss
mov
sbb
xrelease
imul
fmull
and
loopne
sub
lcall
mov
imul
mov
ficoms
sub
lcall
mov
inc
jle
ljmp
hlt
repz
push
data16
ss
cltd
les
mov
rcll
add
leave
or
shrb
xchg
dec
movsb
jle
mov
push
loopne
outsl
sbb
pop
clc
push
mov
movsb
arpl
in
dec
pop
push
lahf
fistps
mov
adc
xor
and
pop
imul
insl
lds
mov
inc
bound
aas
aas
ljmp
jno
push
gs
xor
cmpsb
dec
cmp
add
cmp
add
loopne
add
sbb
out
xchg
inc
orl
mov
mov
iret
mov
shlw
loop
arpl
xchg
shl
lahf
jmp
xchg
les
pop
shlb
mov
mov
push
add
sbb
mov
and
inc
test
or
mov
jns
cld
imul
aas
je
rep
mov
adc
stc
ja
mov
and
xor
lods
add
cs
mov
cmpsb
cmp
stc
repz
mov
cmp
out
sahf
mov
lock
clc
mov
jl
cmpsb
xchg
pop
sbb
or
nop
jecxz
pop
add
inc
loope
scas
lret
push
ja
mov
jno
adc
add
lods
ljmp
outsb
outsb
xlat
sub
popf
pop
inc
xchg
cmp
loope
mov
add
sarb
test
ror
push
clc
xlat
and
push
test
pop
aas
sbb
fcmovnu
jno
pusha
dec
cmpsb
and
leave
daa
adc
sti
imul
cmp
dec
jmp
inc
mov
scas
int3
cld
cmp
addr16
aad
stos
pop
jecxz
fsubr
and
xor
fcomps
mov
xchg
imul
repnz
rcrb
jge
gs
mov
les
mov
sub
enter
sub
mov
out
adc
adc
jns
popa
cmp
add
pop
adc
sbb
mov
rcrb
stos
xlat
jo
sbb
bound
fcompl
and
test
aas
mov
dec
cmp
mov
lock
push
scas
mov
pop
fsubp
test
addr16
leave
sbb
gs
xor
aas
jp
popa
mov
lea
push
jo
add
jle
shlb
fmuls
cmp
mov
ret
sub
add
lcall
and
aas
inc
shrb
aas
sbb
movsb
add
lock
or
imul
cmp
aad
add
stos
es
sub
xor
dec
and
mov
mov
or
aam
icebp
lock
add
or
mov
mov
repz
and
dec
xchg
fcoms
mov
xor
lahf
push
add
in
jmp
add
std
dec
jecxz
mov
sub
push
jbe
push
or
and
add
jecxz
test
testb
mov
dec
mov
mov
jns
xor
aas
mov
xor
inc
pop
lea
jae
aam
ljmp
or
pusha
sbb
dec
enter
and
daa
dec
mov
add
mov
cmpxchg
cmc
jno
mov
loopne
mov
ja
adc
imul
jl
cmp
push
rorb
push
in
das
push
lock
out
cld
xor
jo
arpl
push
mov
addr16
shlb
out
fcomp
das
icebp
arpl
push
sbb
and
ret
arpl
cs
jg
or
and
push
aaa
rorb
or
push
fnstcw
repnz
test
out
mov
out
dec
pop
fnstenv
dec
mov
inc
jmp
push
dec
icebp
sub
loop
stos
shr
repnz
pop
testl
sub
aaa
or
adc
outsl
push
test
scas
inc
in
andb
cli
inc
cmc
imul
jne
sub
loope
arpl
inc
mov
xchg
adc
sbb
mov
js
mov
xor
movsl
cs
aad
fisubs
aad
adc
adc
int3
stos
mov
add
or
aas
and
in
lods
out
mov
aam
es
fadds
rorl
out
pop
aam
lret
sub
pop
ja
sbb
inc
jno
and
idivl
xor
popf
xor
jl
pop
push
popf
fs
lret
pop
fisubl
cmp
pop
sti
pop
xor
inc
nop
inc
pop
sbb
in
cwtl
fnsave
dec
push
movsb
pop
ja
and
in
mov
nop
push
scas
int3
in
mov
jne
lret
out
out
cmp
nop
lret
out
or
gs
jnp
mov
hlt
pop
mov
jo
lret
jl
inc
mov
lret
repnz
inc
cmp
xchg
xchg
data16
fistl
sbb
cmp
popf
pop
fwait
mov
cwtl
adc
das
lcall
dec
enter
mov
into
dec
test
cltd
cltd
test
insl
push
pushf
shlb
sub
sbb
jns
jns
fidivs
rcr
loop
into
shlb
lret
xlat
xchg
fwait
sub
stc
add
pop
add
push
sbb
imul
add
jbe
mov
lahf
leave
xorb
mov
je
sbb
in
add
fs
bound
dec
inc
xor
push
mov
inc
ljmp
insl
lock
push
cmpsl
iret
pop
pusha
in
hlt
mov
mov
sbb
scas
or
push
call
sub
leave
movsb
push
cs
stos
pop
dec
jae
mov
je
jecxz
xor
gs
pop
inc
cmpsb
stos
rcl
push
or
lock
mov
ja
push
cltd
xor
cmpsb
inc
xchg
call
lret
sbbb
sti
scas
mov
aaa
lods
mov
loopne
icebp
adc
aad
add
cs
mov
xchg
ret
xchg
jo
jge
in
into
mov
das
movsb
cltd
fstpt
fsts
xchg
xchg
std
push
xor
cmp
or
fnstsw
lret
mov
push
or
imul
lea
mov
rcrb
push
mov
daa
mov
scas
dec
and
out
lods
lods
mov
jae
push
bound
xchg
gs
test
arpl
fisubrl
out
pop
scas
and
or
dec
sub
addr16
test
orl
cmp
ficoml
jb
xor
cltd
ss
jmp
imul
popa
gs
fisttpll
sarb
daa
and
repz
mov
rcll
cli
fsubr
repnz
data16
mov
xor
inc
lods
mov
scas
aaa
insl
fnsave
out
insl
push
push
cmp
inc
add
out
loope
mov
push
iret
fstpl
rcrl
jb
dec
mov
ja
xchg
stc
inc
into
inc
lea
enter
push
push
repnz
xchg
lds
jo
inc
fsubl
jno
imul
cmc
lret
lcall
xor
into
jno
daa
xor
inc
out
or
test
xchg
xchg
out
into
add
loop
test
cld
ljmp
ror
loopne
fidivl
adc
aas
fwait
jmp
pop
push
mov
or
mov
inc
xlat
jb
sub
shl
xor
pop
xorb
out
pop
cs
int3
jno
mov
and
jecxz
adc
add
js
loope
pop
push
test
repz
lret
dec
insb
js
xor
sub
mov
jg
into
pop
out
and
cmpsb
call
jo
scas
fcomps
add
mov
xor
cmp
mov
push
pop
add
push
jns
clc
add
dec
sbb
mov
ret
arpl
push
fadd
pop
push
outsl
dec
xor
xchg
jb
lret
outsl
outsl
repz
aas
mov
in
inc
mov
cmpsl
jmp
xchg
dec
stos
scas
jns
or
js
push
pop
dec
stc
orl
das
ret
fwait
pop
fiadds
or
test
dec
and
leave
cmp
sub
rol
lret
inc
movsb
pop
fistpll
sub
lods
dec
gs
xchg
andl
sub
call
ljmp
imul
mov
jle
xchg
scas
fildll
std
enter
popa
cld
repnz
cmp
add
popa
out
insb
dec
mov
rcr
jb
cmpsb
or
add
in
cmp
mov
mov
sub
into
cmp
jnp
inc
mov
xor
in
jl
insl
dec
and
roll
mov
sub
xchg
adc
imul
lock
test
pop
in
mov
inc
pop
clc
jmp
cmp
inc
sbb
push
sbb
mov
rcrb
cmp
inc
mov
push
loop
insb
mov
lods
idivl
xchg
aaa
jno
add
aad
clc
push
add
inc
sub
aam
add
stos
mov
shll
sbb
adc
and
sub
jmp
outsb
and
inc
inc
sub
lea
and
cwtl
mov
inc
data16
lods
in
gs
jnp
pushf
nop
sub
loop
popa
mov
mov
jno
pop
sub
inc
lcall
xor
and
pop
movsb
ljmp
mov
stc
dec
ja
in
data16
xlat
jecxz
mov
jmp
and
inc
stos
jo
pop
mov
jns
loopne
sbb
push
sbb
test
imul
push
xchg
out
vminps
decl
mov
inc
cmpsb
mov
scas
mov
fwait
cwtl
into
pop
adc
inc
outsb
mov
imul
outsl
lret
in
ljmp
push
push
pop
cmp
push
jbe
imul
cld
mov
xchg
lds
cmp
dec
lea
imul
lret
mov
mov
addr16
add
mov
sbb
push
out
mov
std
xchg
out
push
pop
xor
std
sbb
pop
rcr
push
push
call
ja
xor
testl
sub
dec
sub
adc
jno
test
dec
test
int
mov
lret
adc
push
rcll
fcmovbe
jmp
jg
test
pop
incl
adc
mov
adc
inc
inc
xchg
pop
add
cmp
popa
loopne
inc
inc
enter
cld
jg
aas
inc
xchg
jb
imul
fstl
jae
pushf
jns
mov
popa
icebp
test
pop
inc
into
test
sub
jg
xor
lret
sbb
dec
les
push
add
mov
insl
jae
call
stos
and
xor
cmp
out
and
mov
inc
lcall
push
les
ja
mov
loope
xchg
cmp
xor
mov
and
cld
and
sbb
sub
sahf
mov
sub
push
mov
sbb
das
jnp
sbbl
jbe
insl
in
out
push
add
in
hlt
stos
adc
pop
test
jg
jb
mov
lcall
xor
mov
push
inc
pop
dec
mov
jae
imul
mov
das
lret
mov
or
cmp
mov
cmp
jecxz
jo
hlt
clc
xor
push
xor
mov
sbb
dec
inc
addr16
cmc
push
sub
jle
bound
in
es
lea
push
jl
andb
jmp
daa
xor
insl
or
iret
cltd
popa
pop
int
or
inc
aaa
mov
sub
orb
nop
fs
gs
cwtl
or
mov
test
pop
mov
inc
mov
test
lods
xor
push
cwtl
subb
roll
jne
mov
adc
jg
lcall
dec
js
adc
dec
push
inc
add
or
adc
cltd
xchg
xchg
int
movsb
es
pushf
gs
xor
cmp
lods
pop
mov
fildll
xchg
mov
push
pop
das
popf
push
adc
daa
cmp
push
sti
push
cmpsl
lds
test
dec
aam
mov
ror
mov
or
mov
add
stc
fsubs
push
and
push
cmpsb
rorb
insl
dec
push
add
push
aaa
cltd
sub
cmp
jl
out
xchg
cmpsl
sub
pop
scas
and
cmp
mov
aaa
mov
xor
test
pop
fdivrl
push
icebp
push
xor
add
xchg
inc
push
inc
daa
jo
xor
mov
xchg
mov
sub
adc
lret
scas
pop
sbb
fiaddl
cwtl
jb
fwait
call
daa
add
sub
mov
inc
or
lea
ret
add
shll
testb
sub
xor
mov
push
mov
and
or
xor
and
push
xor
testb
jmp
out
add
das
mov
test
imul
sub
adc
mov
cmp
pop
mov
pushf
adc
add
sbb
and
jg
xchg
push
adc
dec
pop
repnz
mov
xchg
cli
loop
imul
ss
into
or
imul
inc
xchg
sar
fs
fmulp
imul
jae
add
xor
jg
cmpsl
fwait
xchg
in
mov
dec
inc
dec
scas
add
loopne
repnz
pushw
sub
aaa
mov
add
pop
jmp
out
faddl
pop
jecxz
fst
into
adc
add
movsl
mov
enter
jno
stc
dec
pop
stos
or
std
mov
xchg
icebp
mov
xchg
mov
out
lea
inc
pop
pusha
dec
cmp
xor
cli
ljmp
icebp
inc
mov
pop
das
xchg
stc
popf
mov
inc
stc
mov
insb
sbb
fnstsw
loope
sbb
push
popa
push
jl
cs
addr16
jnp
in
xchg
les
cs
sbb
mov
fisubrs
xchg
sbbl
xor
lahf
jb
xor
adc
mov
popa
test
dec
sbb
aam
and
filds
sub
pop
inc
subb
jns
out
nop
cmp
mov
and
cmpsl
mov
aam
ret
cmpsb
jg
jge
scas
cwtl
pop
cltd
add
gs
sbb
dec
push
repnz
mov
testl
repz
dec
xor
inc
jge
cs
cltd
and
sbb
and
inc
dec
int
leave
sub
or
sbb
sub
enter
sahf
mov
xchg
lret
pop
mov
jmp
decl
sbb
repnz
mulb
loopne
in
enter
jmp
test
iret
and
mov
popa
push
lcall
inc
in
lret
jae
loope
sahf
repnz
pop
imul
pop
xchg
rolb
dec
out
jge
push
fs
aaa
dec
outsb
mov
jle
out
mov
icebp
inc
stos
mov
cmp
inc
add
out
dec
xchg
xchg
jb
mov
shll
jp
cmp
push
lods
ret
cmp
jnp
in
loop
hlt
adc
clc
pusha
filds
mov
popf
ljmp
pop
lea
or
jg
mov
cs
out
push
xor
fbstp
out
sti
push
jae
mov
mov
rolb
jle
std
mov
stos
shrb
pop
sbb
cld
lret
test
mov
sub
popa
flds
and
pop
push
mov
xchg
mov
aaa
inc
jne
decb
pop
add
jge
lret
in
stc
shrb
sub
cmpsl
dec
testb
mov
imul
fnstcw
test
cmpsl
mov
hlt
mov
mov
call
aaa
cmc
lcall
cmc
or
cmp
xchg
adc
jne
fs
or
jnp
xor
jns,pn
and
imul
fsub
pop
hlt
out
imul
mov
add
cmp
or
scas
xchg
dec
mov
push
push
jmpw
inc
imul
pop
sub
jae
cmp
add
cmp
cmc
test
mov
lcall
fidivrs
xchg
lds
scas
pop
inc
ret
xchg
lea
jnp
push
loopne
stos
out
movsl
mov
xchg
sub
sahf
mov
int3
mov
push
sbb
cs
cs
lock
inc
scas
fdivrs
loop
hlt
clc
mov
lret
jno
add
add
mov
adc
scas
sahf
adc
data16
mov
stos
add
lret
pop
and
mov
inc
ret
repnz
adc
and
mov
aaa
outsb
mov
dec
shrb
or
ret
or
push
lahf
idivb
sub
and
cltd
push
es
mull
aas
hlt
inc
adc
test
xchg
inc
pop
enter
je
pusha
add
mov
fldt
jmp
cmp
adcb
les
jmp
cli
and
fs
mov
mov
imul
lods
xchg
imul
in
aaa
dec
add
add
gs
rcl
stos
mov
xchg
rcll
jo
aaa
adc
xchg
clc
cmpsl
and
xchg
push
scas
dec
push
mov
or
test
inc
cmp
outsb
inc
dec
lods
mov
push
imul
aaa
or
lret
lea
aad
repnz
out
push
out
sti
mov
push
sub
ss
mov
daa
sub
leave
movsb
jg
lcall
lods
aas
xchg
jge
outsb
jg
lds
cs
xchg
push
fidivrs
fwait
lea
mov
std
inc
ret
lcall
push
int3
and
and
ljmp
lea
lea
sti
enter
jecxz
lcall
hlt
fsubr
sub
mov
or
cmp
cmpb
mov
sbb
pop
test
dec
and
sbb
andl
sti
fbld
in
outsl
popa
jbe
ja
inc
test
fnstenv
scas
cmpsl
lock
les
xor
push
fstpl
popf
lea
and
push
sub
jg
scas
cli
mov
dec
int
jbe
bnd
cmp
je
jge
jmp
xchg
and
or
sbb
or
fidivs
loopne
nop
cmpsb
or
xor
fsubl
fsubrp
aas
mov
jb
into
enter
adc
insb
xor
add
mov
sub
mov
adc
pop
jmp
adc
jmp
adc
jecxz
mov
inc
inc
sbbl
in
lahf
inc
addb
ficoml
push
sbb
imul
and
sbb
mov
icebp
arpl
gs
push
lcall
cwtl
fdivrp
adc
std
test
sti
icebp
lock
pop
sbb
sbb
lods
push
jp
pop
add
sub
jg
pop
movsb
lods
popa
sub
cwtl
add
add
popa
mov
lcall
scas
pushf
js
pop
dec
sarb
mov
adc
loopne
push
sbb
push
rcrb
add
adc
movsb
je
mov
adc
inc
mov
aad
push
imul
pop
xchg
gs
and
ds
test
mov
push
icebp
pop
jmp
insl
stos
xchg
mov
jecxz
repz
sbb
dec
sbb
mov
in
mov
mov
sub
test
xchg
insl
orl
or
clc
inc
js
pop
shlb
aas
dec
or
iret
out
pushf
insb
and
mov
aad
test
sub
testl
pushf
jmp
popa
xchg
xorb
mov
mov
dec
sbb
rorb
cmp
pop
pop
mov
xor
cld
inc
lret
jbe
jnp
sub
dec
das
popf
test
mov
ljmp
outsl
orb
fbstp
xor
addr16
cmp
idivb
pop
mov
in
mov
cmp
leave
inc
cs
pop
sbb
mov
dec
jbe
mov
cli
xorb
lods
and
divb
nop
adc
leave
cwtl
test
out
cmp
mov
and
cmpsb
or
pop
imul
icebp
add
xchg
pusha
pop
lahf
cmp
push
fcompl
adc
and
outsl
mov
es
adc
pop
ljmp
mov
jg
ja
jae
call
mov
xchg
jbe
jnp
daa
adc
add
cmp
clc
xor
xchg
ret
outsl
aaa
xor
clc
clc
jae
xlat
cwtl
xchg
jge
push
push
js
insl
sub
pop
jbe
icebp
mov
mov
pushf
inc
sahf
orb
sub
mov
shlb
mov
push
sbb
adc
cmp
in
or
testb
cmp
push
inc
or
add
dec
mov
sbb
sbb
adc
subb
dec
adcl
cmpl
push
cmp
loope
cwtl
add
jbe
in
mov
lds
inc
cli
lock
or
daa
adc
ss
movsb
xchg
xchg
jg
mov
dec
xchg
insl
push
mov
sbb
sahf
sbb
test
mov
dec
lahf
mov
xchg
les
leave
sbb
fcompl
lea
mov
in
stos
lahf
lret
mov
dec
adc
dec
inc
jmp
mov
data16
xor
sub
sahf
popa
jae
cmp
or
jp
dec
in
mov
and
push
or
outsb
adcl
add
fcmovu
mov
sbb
sub
sub
adc
iret
loope
addb
rorl
addr16
fstl
mov
jno
cmp
sahf
fs
jbe
aaa
scas
movsb
test
push
arpl
repz
jo
push
push
shrl
cmpsl
mov
mov
push
lahf
adc
out
adc
cmp
mov
pushf
pop
sarb
mov
fisttpll
cmc
pop
or
xor
sbb
test
in
lds
dec
out
sub
movsb
adc
mov
or
xor
fcompp
mov
mov
dec
es
add
mov
pushl
hlt
cmc
and
add
into
inc
mov
nop
pop
xchg
sbb
inc
cmp
xchg
hlt
mov
jmp
ds
scas
jno
mov
rcr
push
insl
mov
stc
jl
orb
inc
fcmovnu
lea
lods
pop
jl
dec
jnp
imul
sub
mov
xchg
mov
add
sbb
js
sbb
test
dec
xor
inc
jle
fisttpl
and
push
out
cli
ret
loope
fnstcw
mov
push
adc
xorl
int3
jnp
add
xor
subl
jnp
test
pop
insl
xor
jne
xor
les
mov
rorl
mov
mov
out
fcoml
pop
clc
jecxz
outsb
dec
fwait
add
xor
jne
xchg
in
xor
jmp
jne
imul
push
cmp
loop
mov
imul
in
fisttpl
call
stos
mov
cmp
aas
mov
adc
cmp
insl
or
fcmovnbe
sub
sbb
repz
in
imul
and
cmp
popa
ret
pop
mov
insl
rcr
jo
in
cwtl
iret
inc
sub
into
push
and
mov
movsl
push
dec
jmp
adc
hlt
int
roll
add
pop
ret
xchg
dec
and
sub
es
lcall
mov
mov
aas
adc
dec
popa
in
or
fsubrs
cli
lods
stos
sbb
sahf
pushf
cmp
cli
in
push
call
xchg
addr16
fdivs
cmpsb
aad
inc
fwait
cmpsl
jle
fisubs
push
jb
cmp
jle
addr16
mov
push
xchg
lods
xchg
mov
ret
pop
bound
jno
sbb
sbb
xor
jmp
xor
xor
clc
cwtl
xor
mov
inc
xor
icebp
sub
pop
lret
enter
xor
std
cmpsl
inc
lcall
mov
jmp
inc
push
or
push
pop
jae
test
sub
stos
fsub
cmp
out
mov
mov
adc
inc
scas
imulb
adc
or
push
jg
inc
mov
fwait
fwait
sub
movsb
insl
lods
std
ret
cltd
fiaddl
xor
sbb
sbb
movsb
sub
insl
mov
add
mov
push
pop
into
lcall
sbb
fstl
mov
push
pop
addl
repnz
pop
mov
or
xchg
imul
xchg
fstps
aas
xor
adc
in
fsub
cmp
pop
daa
and
cmpsl
xchg
call
aam
and
jg
mov
pop
cmp
repnz
push
pop
add
out
mov
je
or
call
mov
pop
push
pop
push
add
cs
ja
adc
add
push
xchg
fdivp
nop
arpl
mov
mov
jb
mov
inc
lds
ficomps
mov
daa
jmp
call
scas
mov
js
leave
push
xor
clc
adc
mov
inc
sub
test
dec
insl
inc
aas
pushf
sbb
imul
mov
sbb
cs
fmuls
int
cwtl
mov
xor
inc
jne
das
js
lods
les
xchg
popf
or
in
jo
or
leave
xlat
or
xchg
movsl
jge
ss
adc
lret
mov
scas
mov
dec
mov
jae
mov
and
adc
push
testl
pop
stc
ja
mov
mov
enter
add
lds
repz
out
or
jo
iret
outsl
pop
push
pop
loopne
fdiv
scas
sbb
dec
fsts
mov
filds
sub
xor
cmp
lods
dec
push
pop
in
insl
push
outsb
add
adc
add
mov
pop
imul
insl
fneni(8087
leave
sub
subb
add
jnp
enter
lret
call
or
mov
ret
mov
popf
mov
adc
repnz
mov
mov
movsl
ds
test
into
es
sub
adc
mov
add
loopne
in
mov
cltd
ret
test
pop
fimull
and
loope
aam
inc
add
and
roll
fimull
xchg
or
cli
jne
inc
dec
jl
inc
outsb
arpl
ljmp
xor
das
jmp
cltd
jge
ja
out
cli
lret
or
or
inc
sbb
jge
cmp
fistl
ror
fwait
gs
xor
push
repnz
push
mov
and
mov
cmc
out
xor
repz
add
xor
xchg
and
mov
fiaddl
push
xchg
ljmp
std
mov
mov
add
pop
jmp
push
into
repz
fistpll
js
push
push
push
lret
mov
add
andb
inc
iret
cmpb
add
cmc
sbb
notb
adc
jge
aaa
xchg
or
imul
cmpb
gs
sbb
lds
sti
adc
pop
dec
xchg
pop
xor
les
repz
xchg
scas
or
jecxz
mov
out
imul
pop
dec
fwait
aaa
cltd
xlat
add
or
sti
loop
mov
loopne
pop
dec
mov
cs
fbstp
or
sbb
dec
pop
in
iret
rcr
in
icebp
xchg
call
faddp
or
pop
aad
push
mov
test
lret
cmc
lea
fs
into
mov
into
adc
popa
cmc
xchg
leave
sub
sbb
es
push
jnp
loope
and
test
xor
shll
push
lahf
push
fstl
pop
and
dec
xor
mov
or
push
push
xor
cmp
mov
es
xor
adc
cmp
repz
movsl
xorl
xor
dec
addr16
pop
movsl
jp
mov
rorb
leave
sub
push
jne
enter
leave
movsl
int3
bound
jge
icebp
jmp
stos
movsb
xchg
les
xchg
dec
and
out
push
adc
mov
xchg
add
ret
push
or
lcall
sub
cli
lods
inc
fwait
roll
pop
add
out
movnti
stos
sti
imul
cli
insl
pop
jmp
jo
cmpsb
and
inc
ja
cmp
mov
push
add
pusha
mov
shr
cmp
les
mov
repnz
jmp
imul
fcoms
dec
jb
or
out
dec
mov
xchg
bound
aad
call
test
addl
lahf
orb
mov
mov
pop
or
add
cmp
mov
push
dec
iret
mov
movsb
idiv
or
shrl
add
pop
repnz
dec
or
bound
jp
add
sahf
jecxz
insb
stc
shrl
nop
orb
lret
cmp
inc
popl
xor
add
and
sbb
jecxz
out
cmp
mov
xchg
imul
cmpsb
pop
cmp
and
mov
jno
scas
rorb
test
stos
push
sbb
sub
mov
jne
cmp
inc
stos
sbb
aam
gs
jmp
insb
popf
mov
sti
jns
push
rcrl
out
and
andl
cld
cmp
inc
int
movsb
sub
push
popa
jp
push
lods
jle
mov
js
push
loope
push
outsb
pop
and
xchg
sbb
jecxz
call
ljmp
jb
in
les
push
imul
xchg
hlt
jge
loope
dec
mov
add
imul
lahf
aam
fstpt
push
cld
das
push
jb
ror
jmp
mov
pushf
xchg
movsl
loop
test
or
xor
or
or
sub
fs
shlb
adc
sub
scas
xor
xchg
jecxz
xchg
mov
jge
sbb
stc
jae
loop
lea
andl
mov
iret
or
aad
movsb
pop
outsl
mov
push
clc
sub
shll
xlat
push
dec
sti
pushf
pop
stos
cmpsb
mov
jge
nop
pop
stos
mov
xor
daa
sbb
or
repnz
lret
push
xlat
mov
daa
sbb
adc
push
icebp
arpl
lea
leave
push
cmp
inc
xchg
jp
movsb
xor
push
cmc
add
stos
in
mov
push
push
fldenv
or
xchg
incb
adc
insl
mov
push
xor
add
mov
inc
rcr
into
add
js
and
adc
aas
adc
or
rcrl
aaa
loopne
inc
lock
nop
push
cmp
out
icebp
mov
or
inc
sub
and
lahf
insl
dec
movsl
jne
test
insb
ret
mov
mov
inc
test
lds
out
lods
and
mov
aad
rorb
or
and
mov
xchg
mov
xchg
clc
ret
or
push
dec
pop
cmp
imul
popa
imul
mov
in
inc
xchg
xchg
dec
adc
xchg
xchg
into
shl
ja
dec
rcrb
cmp
sub
sub
repnz
add
xor
insb
or
xor
syscall
jp
adc
push
inc
ret
inc
scas
lock
sub
fistl
or
lds
loop
fadds
stos
mov
or
and
lea
fmul
xchg
repnz
lahf
rcrl
leave
xor
loopne
add
cld
xorl
shrl
inc
inc
js
lock
mov
loop
ja
xor
adc
js
iret
aaa
mov
mov
xchg
pop
mov
sub
mov
ret
pop
xchg
or
push
adc
ret
xchg
cmp
xorb
pop
hlt
in
aaa
adc
xor
scas
gs
out
mov
xchg
ret
enter
mov
sub
jl
jg
fisubl
lahf
pop
outsl
or
mov
aas
or
shl
daa
inc
xor
mov
pop
jae
jecxz
mov
mov
jae
in
enter
rclb
lahf
stos
dec
test
mov
push
data16
cld
mov
mov
inc
aad
jnp
push
pop
cmpl
js
sbb
push
xchg
inc
cmp
gs
pusha
and
mov
pop
ret
pop
push
loopne
pop
insl
pusha
pop
xor
stos
sbb
and
test
adc
insb
stos
into
jbe
pushf
notb
repnz
cltd
inc
or
or
shr
sub
lret
cmp
cmp
push
pop
bound
test
cmpsb
xor
scas
enter
test
sarl
or
and
pop
mov
pop
in
xlat
idivb
xor
pop
add
mov
mov
inc
jb
pop
movsb
clc
dec
xor
repz
xchg
push
or
ficompl
cwtl
dec
push
mov
dec
aam
inc
vunpckhps
or
int
inc
rcrb
sub
pop
lahf
stos
and
and
icebp
stos
xchg
in
mov
aad
idivb
imul
inc
mov
fistps
pop
int
movsb
iret
jns
fcmovnu
xor
xor
jnp
popf
and
pushf
and
xchg
sar
mov
fcoml
popf
das
mov
xchg
jge
cmp
pushf
xor
lods
cmp
cli
mov
in
sbb
inc
xor
xor
test
add
out
xor
mov
hlt
mov
cwtl
dec
leave
push
jl
mov
lds
or
push
sbb
rorb
add
dec
inc
pop
enter
xchg
ljmp
push
xor
icebp
pop
iret
loopne
into
sbb
pushf
mov
adc
dec
fstp
scas
inc
push
mov
pop
lods
xchg
pop
pop
inc
fidivs
pusha
lret
xchg
inc
mov
aas
jnp
mov
cmpsl
mov
xchg
test
mov
sub
into
addr16
or
push
push
jl
and
push
dec
test
or
push
gs
jno
ret
pop
mov
je
mov
cmpsb
pop
das
ror
push
movb
mov
mov
fsubs
fstpt
aaa
inc
fldl
push
test
jl
xlat
mov
jbe
fimull
sbb
pop
or
ret
or
ffreep
inc
addr16
int
aaa
cmc
pop
mov
xor
mov
in
repz
pop
sub
adc
lcall
dec
movsb
int
add
or
cmp
jp
push
add
add
push
pop
out
sub
jp
xchg
sbb
popf
push
dec
mov
test
lock
jp
orl
and
mov
popf
push
and
pop
mov
mov
imul
mov
push
mov
push
mov
push
push
dec
test
cli
ret
mov
negl
sub
shll
movsl
loope
mov
rolb
xchg
inc
enter
into
and
or
fisubl
inc
xchg
jmp
rcrl
out
addr16
and
cmp
pusha
cli
notl
gs
out
jmp
adc
mov
pop
aad
mov
sarb
dec
nop
cmp
cmp
ljmp
hlt
or
inc
int
sbb
cmp
mov
fwait
popa
jne
mov
sahf
sbbb
aad
mov
inc
cmp
imulb
insb
aaa
inc
stos
push
cmp
dec
imul
lock
nop
push
cmp
fisubs
adc
hlt
sbb
add
pusha
repz
and
xor
in
loop
and
mov
ficompl
pop
shll
orb
fsubl
sbbb
iret
pop
mov
mov
mov
jbe
insl
aaa
ds
loop
addr16
mov
insb
xchg
repnz
jecxz
adc
into
lahf
pop
xchg
fsubp
add
andb
out
add
or
xor
in
loope
std
mov
adc
mov
stos
aad
dec
lahf
xchg
mov
sub
mov
mov
mov
sub
mov
jo
adc
xchg
sbb
cmpsb
sub
fcmovne
push
test
mov
pop
stos
mov
je
mov
js
das
or
inc
push
cld
jmp
lea
dec
dec
roll
repz
test
mov
sbb
xchg
shrl
movsl
jle
xchg
sbb
lcall
xchg
ret
imul
lods
js
adc
dec
jmp
sub
mov
mov
scas
add
cmpsl
int3
iret
adc
pop
mov
push
mov
sub
dec
sub
into
repnz
pop
pop
rcl
call
lcall
sbb
stos
addr16
adc
dec
xor
push
fidivrs
xor
add
push
xorl
leave
dec
xlat
pop
out
push
bound
pop
xor
jle
ljmp
and
dec
pop
fimuls
dec
cld
bound
mov
pusha
push
aam
shlb
cld
inc
flds
and
and
inc
jle
sahf
mov
cmc
in
inc
add
cmpb
pop
jmp
scas
mov
dec
cwtl
jp
push
jle
pop
int
or
and
push
fisubl
rorb
fsubrl
dec
movsl
fildl
mov
mov
jecxz
xchg
data16
out
out
pop
lret
lods
in
mov
cmp
mov
adc
lods
clc
jno
cwtl
jge
lds
in
into
shl
pop
mov
iret
mov
xchg
adc
in
xchg
daa
lock
loopne
fs
inc
or
mov
cmp
or
mov
imul
test
in
shll
fimuls
mov
sahf
sahf
test
adc
aad
pusha
push
sbb
fnstcw
and
sti
aad
cmc
mov
adc
sbb
ds
cld
in
xlat
pushf
pop
push
xlat
push
ret
pop
xchg
addb
jle
cmpsb
and
cmp
cmc
sub
or
ja
cli
xor
and
loope
xor
dec
gs
inc
mov
adc
push
jge
and
adc
push
or
mov
pop
and
int3
jl
fadds
loopne
xor
inc
loope
test
dec
out
mov
scas
arpl
shll
ljmp
lret
push
add
popa
andb
or
fnsave
lcall
std
dec
adc
jo
shl
in
push
dec
lods
int3
jmp
or
add
clc
roll
add
aas
fsubrs
xchg
nop
outsb
frstor
movl
stos
mov
sub
xor
lret
pop
cmp
ret
aaa
stos
bound
push
or
xchg
xchg
inc
push
loop
fdivrs
jnp
mov
or
rorl
gs
mov
aas
mov
insb
xor
popf
push
push
cmp
lahf
and
pop
pop
xchg
mov
repnz
cmp
sbb
lds
inc
movsb
inc
shlb
lods
out
or
enter
fcom
fnstcw
lods
repz
ljmp
pop
dec
inc
jb
jns
scas
nop
push
cmp
push
fadds
jle
in
fs
pop
sahf
mov
mov
nop
jl
insl
mov
ja
push
jp
xchg
jns
fsubp
mov
les
add
push
mov
jecxz
out
and
mov
sbb
and
data16
pop
and
xor
mulb
push
dec
mov
and
out
push
mov
bnd
sbb
jno
mov
imul
jns
out
pop
dec
push
push
scas
jle
pop
pushf
dec
push
int3
jg
dec
out
mov
jns
jns
jle
ss
movsl
lcall
mov
mov
cmp
movb
ret
inc
inc
push
mov
loopne
dec
xchg
dec
push
dec
ljmp
repnz
xchg
xlat
xchg
inc
pop
inc
sbb
mov
sbb
add
add
enter
fldcw
adc
pop
out
push
ret
insb
ret
pop
add
xchg
adc
lcall
xchg
shr
and
subl
dec
lret
rorl
mov
push
mov
pmaxub
push
das
lock
mov
push
call
and
push
cli
sarl
rcl
and
xorl
lds
subl
scas
pop
decl
add
inc
call
loop
or
xchg
mov
sahf
mov
movsl
or
mov
fdivrs
jp
xor
mov
popf
jbe
std
inc
inc
movl
into
fsubrl
out
jecxz
out
mov
sub
mov
movsb
xchg
int
sub
xchg
adc
mov
das
fistpl
addr16
add
mov
aam
gs
cmp
push
ficompl
dec
or
mov
adc
inc
and
mov
add
cs
jg
andl
mov
subl
inc
gs
mov
arpl
push
subps
and
or
insb
out
or
cld
adc
fisttps
pop
imul
aas
xchg
pop
cld
xchg
push
jg
and
inc
iret
mov
cltd
pop
data16
scas
ja
mov
push
xchg
mov
ja
int
pop
imul
les
cmp
es
sbb
in
sarb
add
cmp
outsl
push
adc
in
xchg
fldcw
mov
jge
das
pusha
mov
fcomps
addr16
push
pop
loope
or
or
dec
jp
hlt
add
mov
lock
xchg
mov
mov
push
enter
inc
mov
les
ffree
movsb
xor
out
sub
add
pop
insl
je
popa
xchg
xor
mov
fimuls
mov
imul
xor
movsl
ja
sub
lcall
jne
mov
cmp
sub
adc
mov
imul
sbb
or
ljmp
xlat
call
cmp
int
fstps
inc
jns
icebp
rclb
xchg
hlt
mov
mov
popa
push
pmullw
rcrl
pop
or
and
outsb
in
sub
and
sub
in
test
clc
js
outsb
mov
cmpsl
cld
addr16
fldenv
mov
fidivl
sub
iret
repnz
cmp
inc
ret
in
xchg
xchg
int3
cmc
jle
data16
outsb
mov
sarb
insl
pop
hlt
sahf
cmpsl
sarl
loop
js
aad
or
shl
jnp
inc
lahf
push
cld
jb
cmp
dec
cmc
inc
mov
jl
jno
add
popa
add
icebp
out
rcrl
rorl
ja
xchg
sarl
movsb
gs
and
push
shlb
cmpsb
scas
sub
add
inc
shl
mov
push
add
icebp
cwtl
dec
push
mov
dec
add
inc
subl
negb
cmp
out
sub
sub
push
inc
sbb
and
jmp
iret
icebp
into
mov
int3
cli
lea
dec
push
adc
push
cwtl
cwtl
fimull
xchg
stos
and
or
jbe
mov
cmp
add
jnp
inc
negb
cmpsl
xlat
shll
jl
jns,pt
es
adc
dec
xor
ljmp
pop
sub
in
loope
xorb
pop
icebp
inc
andl
adc
sub
aas
nop
insb
and
jae
ljmp
adc
mov
sbb
adc
test
out
sub
sub
fldenv
mov
repz
movsb
cmpb
or
ficoml
mov
mov
movsb
mov
adcb
fisttpll
sbb
insb
cmp
cwtl
push
jns
cltd
sub
pop
xor
mov
adc
add
push
jnp
jnp
pop
iret
roll
pop
pop
xor
cmp
ret
pop
pushf
xchg
adc
inc
sub
or
dec
loop
pop
adc
pop
push
test
jae
push
clc
in
out
dec
xor
imul
adc
jg
xchg
data16
push
sbb
dec
popf
jecxz
sbbb
cmp
repz
add
cmpsb
sub
stos
push
xchg
pop
out
inc
push
lods
xchg
sbb
cli
dec
xchg
xchg
popf
xor
insl
popf
inc
iret
add
sub
fdivrl
addr16
cltd
sbb
adc
push
mov
jns
popf
jnp
or
rclb
adc
paddsb
add
sub
xlat
or
and
imull
add
adc
in
stc
fwait
rcll
mov
pop
out
or
lods
loope
or
push
sub
cld
pop
xor
in
xchg
or
iret
sbb
jmp
push
out
scas
sub
rolb
fwait
fwait
mov
imul
xor
xchg
push
movsb
and
push
add
push
scas
pop
in
repz
inc
cmpsb
mov
nop
daa
repnz
pop
xorl
mov
xchg
iret
cltd
lea
push
dec
mov
jl
daa
xchg
lret
sahf
testb
dec
std
subb
cs
mov
adc
iret
enter
cli
das
cmp
xchg
dec
out
xor
or
imull
aad
imul
sbb
fimull
mov
mov
sub
dec
jl
inc
jle
mov
sub
mov
jns
into
adc
mov
std
push
adc
negl
and
xorl
shlb
iret
mov
xchg
lds
addr16
divb
jne
pop
lahf
mov
leave
cwtl
mov
sub
gs
and
pop
lcall
jg
outsb
sbb
jg
icebp
push
mov
enter
jmp
sbb
pop
pushf
mov
add
idivl
loop
unpckhps
mov
jmp
and
push
adc
test
pop
lea
cmp
imul
gs
add
out
adc
shlb
ss
push
mov
in
jbe
loopne
pop
lahf
out
sub
mov
mov
cmp
lahf
mov
out
xorl
and
inc
pop
shll
or
mov
mov
xor
mov
dec
arpl
add
bound
clc
rcrb
inc
adc
rorb
add
cld
test
sbb
and
out
int3
push
popf
stos
push
mov
in
fidivl
shll
nop
in
js
leave
jmp
aas
in
inc
dec
repz
push
mov
repnz
inc
cwtl
cmp
into
xchg
loop
popf
scas
jo
hlt
lods
fdivrl
bound
mov
pop
mov
jnp
cmp
aad
jne
int
dec
into
inc
mov
mov
sbb
and
mov
pop
pop
mov
or
hlt
outsb
add
int
inc
insb
mov
das
nop
clc
fldln2
hlt
pop
jl
push
xlat
xchg
mov
xchg
mov
mov
mov
inc
into
aam
adc
xchg
mov
dec
push
insl
pop
adc
mov
nop
test
inc
dec
adc
std
dec
pop
int3
or
fstl
shll
xchg
sub
orl
mov
pusha
add
ficoms
sbb
mov
rorl
das
faddp
xchg
sub
lahf
cmc
cwtl
xlat
xchg
stc
fwait
push
and
jle
sbb
testl
xchg
mov
lock
adc
jle
jno
fildll
cld
pop
inc
push
and
adc
cmp
std
stos
inc
push
scas
loop
or
add
inc
filds
sahf
mov
testb
dec
inc
test
std
inc
pop
jge
mov
mov
jns
inc
into
push
or
out
push
dec
mov
fnstenv
mov
fnstcw
jbe
data16
iret
adc
fs
jl
xchg
dec
xchg
add
xor
mov
mov
push
and
cmpsb
xchg
sbb
int3
mov
cmp
ss
adcl
sbb
jge
aad
mov
jno
sub
pop
jb
mov
shll
mov
dec
stc
das
test
arpl
cmpsl
xchg
inc
fcoml
push
fsubs
dec
xor
lret
outsl
xchg
jnp
add
sbb
ds
push
inc
sub
sbb
das
jge
mov
xchg
in
or
sbb
fldenv
addl
jg
xor
jl
fcompp
or
jo
insl
adc
lcall
imul
xchg
dec
aas
cld
push
iret
andb
ret
sbb
mov
adc
mov
adc
push
les
xlat
and
int3
stc
leave
dec
add
mov
mov
rclb
arpl
push
push
adc
jns
jae
mov
pusha
adc
popf
push
push
pop
cmp
or
dec
cmc
cmp
push
divl
mov
adc
and
mov
aas
faddl
adc
test
test
and
cltd
cli
push
xchg
push
pop
add
or
shl
lret
pop
pop
jns
xor
sub
mov
fildll
mov
repz
nop
jg
rcr
icebp
test
xor
nop
cmp
mov
inc
in
xchg
scas
mov
mov
leave
pusha
mov
aam
inc
jae
inc
pop
inc
or
into
dec
mov
xchg
rol
push
les
or
and
push
jb
sbb
cmpsl
xor
xor
into
push
gs
je
inc
popa
add
addr16
loop
movsl
xchg
sbb
jns
sbb
fs
inc
push
xlat
dec
test
clc
jae
sub
inc
testb
jge
cmp
cmp
addl
mov
loop
mov
xchg
or
sub
add
insb
add
push
pop
cmpsl
sar
testl
cs
jne
adc
fisubl
mov
xchg
hlt
add
push
mov
jle
movsb
dec
xchg
outsl
mov
sti
inc
test
and
and
shrb
lcall
or
xor
pushf
testl
cmp
addr16
negb
push
ficompl
sti
ss
imul
xchg
mov
pop
mov
jbe
mov
sbb
xor
ja
mov
jge
in
adc
xchg
xchg
pop
jmp
mov
and
popf
add
shr
cmp
dec
decb
push
xchg
push
adc
mov
repnz
movsb
mov
insb
ret
add
cld
in
mov
je
mov
mov
lea
fidivrl
or
mov
sub
xchg
push
xor
or
stos
cmp
sub
sub
cltd
jb
ljmp
mov
push
loop
lret
insl
mov
push
mov
sbb
stos
push
mov
ss
ret
mov
xchg
inc
push
push
sbb
and
lods
xor
jno
mov
dec
aam
sbb
int3
cli
lahf
js
movsb
pop
jge
sbb
xchg
sarb
divl
aam
add
mov
mov
in
push
sti
xlat
xchg
mov
mov
in
mov
ljmp
dec
mov
mov
lods
mov
push
call
clc
inc
xchg
pop
dec
sbb
faddl
ss
je
cltd
sub
cmp
xor
jg
mov
mov
add
and
sti
icebp
stmxcsr
push
popf
pop
inc
pop
xor
mov
in
dec
pop
or
testl
jp
es
jmp
sbb
leave
mov
stos
sahf
xor
xchg
mov
sub
dec
adc
sub
add
mov
xchg
andl
sub
xorl
lcall
fbld
out
cmp
cltd
sub
sub
movsl
fnstcw
sahf
movsl
xor
jmp
sti
jp
xlat
mov
divl
loop
and
or
nop
scas
imul
testl
pop
xor
test
add
xor
jl
outsb
outsl
add
lods
push
jl
daa
enter
xor
por
mov
or
inc
sbb
int3
add
testl
pop
or
das
fs
enter
jmp
mov
xor
sbb
lcall
cld
inc
loop
xor
aas
int3
mov
out
into
sbb
movsb
jge
sbb
rorb
pusha
mov
lock
je
aad
jmp
insl
dec
sub
sub
and
or
cld
push
inc
adc
int3
dec
sbb
mov
fwait
sub
mov
inc
cmp
adc
and
iret
or
mov
push
mov
addr16
jbe
xchg
shll
mov
lcall
out
sbb
movsb
or
stos
inc
or
cmp
scas
faddl
fwait
mov
popa
faddl
clc
mov
mov
sarb
cwtl
push
pop
ret
jno
mov
cmp
mov
xchg
jnp
mov
je
and
mov
xchg
daa
idivb
xchg
adc
int3
mov
xchg
adc
sub
imul
mov
adc
and
jecxz
inc
and
lea
pop
js
pop
loope
lock
push
movsb
in
lea
or
pop
je
out
ja
rcl
adc
clc
sar
test
lock
fistps
fidivl
cld
xchg
xchg
adc
push
inc
in
adc
jge
dec
neg
pushf
sub
jns
or
dec
sub
cmpb
aas
in
stos
addb
out
imul
xchg
add
push
lock
xchg
mov
mov
mov
fnstenv
pop
lods
mov
imul
enter
loopne
and
fwait
aas
fdivs
xor
inc
test
into
mov
jle
xchg
xor
sub
mov
cmpsb
mov
xchg
cmp
in
push
dec
push
cmp
mov
fs
int3
loop
divb
xor
test
mov
js
push
xchg
outsl
sbb
scas
push
mov
sub
in
shlb
sub
xchg
and
out
stc
out
or
nop
add
sub
mov
repz
rorb
ja
idiv
dec
fdivp
cmp
xor
cs
adc
pop
push
aas
loope
int3
mov
mov
jae
out
fwait
lcall
dec
adc
cmpl
je
fistpll
and
xchg
es
adc
pop
ss
stc
shll
out
mov
std
xorb
mov
xor
imul
shll
mov
and
cmp
mov
ret
int
clc
mov
scas
xchg
shll
push
sub
dec
cmpl
clc
scas
inc
in
cmp
push
sarl
ljmp
mov
pop
lock
imul
adc
jo
mov
add
imul
outsl
sbb
insb
sti
and
mov
sub
loope
imul
movsb
jp
cmpsl
xor
enter
jmp
aaa
or
call
inc
cmp
pop
sub
mov
negl
repnz
xchg
stos
pop
clc
ret
sahf
ret
mov
and
stos
mov
mov
xor
mov
push
mov
lahf
stos
roll
mov
leave
push
fdivrl
add
cmp
mov
fs
rclb
into
push
mov
adc
andb
inc
add
or
sub
mov
out
sti
incb
stos
test
in
sahf
jl
orb
mov
mov
js
dec
pop
add
imul
mov
push
mov
aaa
andps
in
iret
mov
out
dec
aas
mov
loop
jmp
fidivl
mov
imul
and
fists
lods
and
mov
lcall
dec
push
sarl
xchg
and
xchg
notb
jb
pop
mov
inc
inc
cltd
add
or
inc
nop
popa
adc
xchg
mov
lods
into
jno
out
mov
and
in
push
push
xlat
inc
aas
lahf
xchg
aam
pop
mov
cli
xchg
mov
pop
mov
push
popa
mov
scas
push
mov
leave
jne
xchg
mov
mov
and
add
pop
inc
das
ja,pt
jno
mov
cmp
jae
test
cltd
jg
inc
mov
jno
sahf
clc
mov
je
mov
call
lret
shrb
vpcmpgtw
sub
imul
int
mov
inc
adc
inc
jmp
jmp
sbb
dec
insl
mov
loop
sbb
test
jl
ljmp
mov
mov
xchg
loop
and
dec
mov
mov
nop
mov
ljmp
cmpsl
mov
jmp
mov
pop
add
adc
js
test
int
push
in
ss
pop
push
push
ret
mov
xor
pop
sub
mov
jg
sbb
xrelease
movsb
sbb
or
loope
jp
es
pop
mov
push
int3
enter
add
cmpsl
test
mov
int3
pop
lcall
test
dec
lds
in
mov
cli
fcompl
lods
jecxz
xor
outsb
jne
cmc
int
and
or
push
dec
int3
mov
and
push
test
gs
inc
and
dec
decb
cmp
aad
adcb
data16
pop
dec
mov
fisubl
dec
sbb
xor
push
aad
adc
repz
and
clc
jne
dec
push
mov
jns
iret
or
xchg
inc
dec
repz
jbe
movsl
clc
mov
popf
movsl
mov
mov
pop
lods
mov
pop
js
pushf
test
dec
hlt
add
loope
nop
out
jb
mov
jecxz
cli
imul
je
movsb
add
sbb
xor
icebp
cmpb
mov
loopne
sbb
inc
test
push
std
inc
test
rcll
ss
hlt
adc
outsb
mov
sub
xor
fs
xor
mov
pop
push
cltd
cmpsl
dec
ret
aad
sbb
ss
mov
xchg
adcb
pop
cltd
sbb
cmp
and
fimuls
fistps
mov
mov
mov
fists
mov
cmp
mov
mov
and
mov
cli
cmpps
jae
push
push
pop
xor
test
xchg
and
jnp
mov
and
mov
sbb
add
xlat
je
push
add
lcall
addr16
lret
pop
in
mov
inc
incb
or
inc
jecxz
outsl
movsl
mov
pop
arpl
xchg
test
es
jae
xchg
in
push
mov
rclb
mov
daa
cmp
jno
ret
or
add
mov
cmp
popa
push
pop
xchg
pop
sti
pushf
out
test
int
cld
outsb
cs
cmc
ja
pop
add
movzwl
dec
mov
adc
inc
imull
lock
xor
test
lock
ljmp
hlt
test
mov
mov
and
jecxz
out
push
cmp
and
sub
xorb
ss
sbb
dec
subb
imull
int
cwtl
jae
dec
push
ljmp
fsubrs
pop
sti
cmpsl
mov
testb
sbb
sub
push
jne
mov
pop
in
mov
stos
xchg
fidivrl
adc
cmp
test
js
jecxz
ja
pop
cwtl
popf
add
jp
push
mov
aad
xor
push
mov
or
ret
mov
xlat
jno
lds
mov
inc
stos
int
mull
sbb
push
call
jb
icebp
add
mov
xor
loope
inc
lds
movsl
jno
dec
repz
push
cmpsb
xor
mov
pusha
mov
xchg
jno
out
cmp
outsl
adc
dec
ret
pushf
fchs
imul
and
popf
mov
dec
ds
ds
mov
addr16
mov
mov
cmp
pop
in
je
lcall
cmp
aaa
ljmp
dec
daa
or
fidivrs
into
mov
int
sbb
cwtl
sbb
lods
xchg
cs
mov
inc
inc
loop
int3
push
jbe
enter
fcompl
sub
jmp
sbb
mov
lret
leave
enter
pop
popa
out
idivb
xchg
pop
lcall
sbb
test
sub
fisubs
mov
mov
jne
add
fbstp
mov
inc
sub
rcr
mov
shrl
inc
roll
loopne
sbb
cmpsb
xlat
iret
pop
pop
icebp
mov
mov
repnz
ja
out
fsubrs
js
stos
xchg
pop
out
jo
loope
out
mov
adc
mov
inc
jne
loopne
fstpl
jmp
ljmp
outsb
push
js
push
je
cltd
add
xor
fldenv
bound
stos
nop
push
xor
not
mov
mov
add
je
mov
rcl
fs
add
mov
sub
mov
jg
fisttpl
and
mov
mov
mov
icebp
and
loope
mov
scas
dec
mov
out
cmp
mov
int3
scas
sarl
sub
scas
cmp
stos
fldcw
pop
in
inc
dec
sub
scas
push
leave
mov
nop
lods
loope
loope
cmpsb
mov
cmp
dec
sub
jns
fucomip
and
push
loope
and
call
dec
call
das
movsl
mov
or
mov
aas
dec
and
mov
ljmp
dec
jnp
xlat
jae
dec
xor
lahf
hlt
mov
xchg
test
ss
push
out
mov
out
sti
push
sub
aad
adc
imulb
scas
cmp
inc
ret
cld
xchg
cmc
inc
push
jnp
xchg
pop
mov
data16
or
cmp
loopne
movsl
rcrl
mov
mov
ljmp
xlat
push
or
mov
clc
or
insl
cwtl
cmp
sbb
sub
out
push
push
insl
fwait
out
and
push
lods
mov
popf
das
sbb
bound
ja
ss
int3
fnstenv
jp
fdivs
repz
int3
scas
stos
cmc
add
out
mov
into
popa
cmc
lret
jne
pop
int3
subl
xor
sub
test
push
cmp
lret
mull
cmpsb
adc
movsb
cmp
repz
cmp
sub
addr16
cmp
jecxz
jne
mov
inc
mov
lcall
lahf
or
in
repnz
push
outsl
mov
addr16
repz
ss
mov
aam
imul
lahf
cmp
add
and
nop
jl
inc
and
sbb
xchg
sbb
outsl
dec
pop
jp
sarb
mov
in
inc
or
adc
loope
aas
and
in
scas
hlt
scas
mov
insb
mov
scas
fwait
shlb
dec
push
jno
cmpsb
shlb
popf
scas
enter
lcall
mov
inc
adc
pop
cwtl
mov
jl
pushf
or
mov
or
pop
imul
push
icebp
xor
dec
sarb
cmpsl
jge
or
sti
inc
int3
popa
icebp
jae
pop
xor
add
pop
adc
lods
test
sbb
add
mov
les
jo
pop
outsl
xchg
pusha
cs
out
or
int
outsb
xor
xor
outsl
push
mov
pusha
mov
rorb
xchg
fucom
add
inc
lds
xor
inc
inc
rcl
xchg
xchg
cli
mov
mov
cmp
and
aaa
imul
gs
xchg
jg
or
loopne
lods
shlb
out
jmp
cmc
int3
cmpl
sub
inc
stc
adc
inc
mov
adc
add
cmp
inc
push
xor
test
std
pmulhw
mov
adc
fsubs
mov
cmp
jp
add
lods
push
sbb
ret
aam
xchg
shlb
test
inc
hlt
push
lods
je
add
mov
out
cld
or
mov
rolb
mov
pop
pop
cmp
mov
sub
xor
and
lock
faddl
and
fcmovne
jmp
mov
in
mov
in
test
or
dec
pop
ss
jp
inc
push
jl
sahf
xchg
mov
cs
pop
push
mov
outsl
cltd
pop
or
rcr
adc
pusha
jl
mov
mov
inc
outsl
out
xor
popf
and
dec
mov
sbb
pop
mov
sub
dec
cmc
xchg
or
mov
ljmp
jmp
addr16
lret
inc
rcl
or
or
pop
imul
mov
push
add
xchg
jb
pop
fidivrl
cld
bound
cmpsb
jecxz
pop
popf
jbe
sub
int
mov
popf
cmp
pushf
lahf
add
mov
int3
insl
and
mov
jns
insb
push
ds
xchg
fimull
movsb
add
roll
daa
mov
lret
lcall
xchg
inc
hlt
inc
out
stos
sub
in
std
loop
or
cmpsl
jo
arpl
inc
imul
divl
sbb
fstpt
pop
jns
call
aam
scas
cmpsl
xchg
cltd
fwait
dec
cmpsb
leave
inc
fsubrs
cld
mov
test
dec
add
ret
mov
xor
je
add
xor
mov
outsl
mov
in
adcl
clc
jne
and
dec
imul
sub
push
arpl
and
in
xchg
jne
mov
shl
push
or
out
mov
loop
lret
inc
mov
in
es
xchg
xchg
xor
mov
mov
imul
xchg
inc
insl
or
ss
mov
or
pop
mov
mov
pop
jo
fs
xchg
nop
inc
insl
lds
insb
inc
xchg
lea
out
sbbb
jp
call
add
xchg
imul
imul
dec
outsb
clc
cli
lods
sbb
cwtl
gs
cmp
mov
test
mov
sbb
testl
xor
jbe
fnsave
jno
in
rcrb
or
pop
mov
addl
xchg
addr16
push
adc
xchg
lret
push
insl
jmp
pop
and
test
out
test
scas
dec
fwait
inc
adc
lods
mov
xor
xchg
add
out
dec
xchg
and
cmp
icebp
fsubrs
shlb
aaa
outsl
dec
hlt
xor
and
iret
and
lahf
cmp
mov
mov
incb
cmpsl
xor
mov
ret
fiaddl
dec
outsb
push
or
sbb
rclb
mov
sarl
repnz
dec
adc
mov
cmp
pop
pop
cmpsl
jns
push
xchg
and
pushf
inc
scas
lret
sahf
je
in
cs
icebp
cmpsb
scas
cltd
push
mov
mov
mov
dec
mov
mov
stos
not
xor
xchg
mov
push
pushf
shlb
dec
jmp
push
jnp
dec
mov
popf
or
out
pop
sub
stos
cli
sub
push
aaa
cmp
xor
pusha
xchg
mov
dec
sbb
or
mov
in
mov
inc
mov
cmp
mov
inc
pop
push
pusha
mov
int
mov
in
lret
add
add
or
mov
mov
lcall
jmp
rcrl
dec
mov
mov
jb
es
call
in
jbe
cmp
in
in
stos
mov
xchg
iret
shrl
movsl
fs
and
lods
movsl
mov
mov
inc
rorl
dec
xchg
dec
adc
outsb
xchg
dec
pop
mov
push
add
aam
push
xchg
and
popa
push
or
adc
pop
mov
pop
dec
mov
into
lods
subb
push
das
mov
sar
push
pop
adc
and
push
in
dec
xor
or
push
push
imul
fmulp
outsb
sub
loopne
std
enter
xchg
repnz
aaa
adc
test
sbb
fstpt
in
and
addr16
lods
aas
xchg
pop
xor
inc
cmc
shl
pop
xchg
sbb
in
aad
int
sub
xchg
iret
cs
add
push
cmpl
mov
jl
cmp
insb
push
sti
outsb
mov
add
lahf
inc
add
sub
adc
cli
pop
ds
xchg
sub
dec
shrl
sub
pusha
fs
sbb
add
jmp
enter
pop
mov
js
adc
shrb
add
lock
xchg
dec
clc
mov
xchg
cld
gs
mov
movsb
mov
int
hlt
jge
mov
int3
cmp
xor
jge
ficompl
pop
repnz
jns
inc
mov
imull
test
cmpsl
dec
insb
sub
out
out
mov
push
repz
push
fisubs
cli
aaa
dec
js
aad
or
icebp
and
pusha
hlt
add
rorb
push
pop
jmp
cmpsl
inc
in
into
ja
xchg
aam
mov
addr16
sbb
fnsave
mov
cmp
pop
sahf
cmc
nop
sahf
popl
push
je
pop
cmp
shlb
out
lret
negb
cmp
repz
inc
push
sub
fdivl
xchg
sahf
and
es
inc
clc
mov
dec
imul
add
pop
sbb
or
inc
cmp
je
inc
fwait
in
mov
sub
pop
clc
and
cmp
cmpl
ljmp
inc
push
jge
adc
sbb
loope
icebp
es
icebp
mov
les
loope
rclb
rcl
pop
cli
in
nop
cmc
add
addr16
push
test
stc
ds
or
int3
push
push
xchg
xor
mov
out
cmp
cmp
sbb
outsb
ret
pusha
out
mov
fwait
mov
fs
push
iret
lods
mov
fisubs
subl
xlat
faddl
push
mov
int
xor
loopne
lds
push
daa
mov
xchg
inc
mov
sbb
xorb
in
adc
pop
and
mov
xchg
test
sub
in
imul
inc
outsl
loope,pt
xor
test
mov
dec
pop
fstpt
clc
into
or
adc
push
cmp
mov
in
in
cmp
mov
mov
add
outsl
fcomps
mov
lcall
out
xchg
adcl
dec
out
dec
pop
rcll
add
sbb
scas
mov
loopne
mov
sub
dec
loopne
inc
xor
nop
mov
add
mov
movsb
fnsave
xchg
or
cmp
pop
fsubr
xchg
into
movsl
pop
add
xorb
mov
les
and
daa
insb
push
mov
and
xchg
movsb
lcall
fs
mov
mov
sub
pop
mov
push
adc
jnp
int3
pop
sub
cmc
pop
push
push
rorl
test
les
mov
pop
scas
lret
pop
mov
pushf
adc
lahf
mov
jge
xor
pusha
mov
js
stos
ret
cmp
jmp
les
imul
clc
xor
adc
jo
pop
inc
xchg
sub
pop
adc
in
pop
sbb
loopne
in
sub
add
ss
sahf
push
hlt
mov
test
cmpsl
incl
push
xchg
mov
jb
cld
sub
mov
xchg
ja
jnp
ds
mov
fnstsw
std
inc
mov
and
xor
push
sub
sarb
rorb
sub
sbb
jg
add
add
mov
push
and
sub
sub
pop
adc
mov
jle
xchg
bound
out
mov
aas
movsb
fisttps
adc
test
addr16
or
mov
and
mov
insl
mov
pop
mov
pop
cs
cli
dec
leave
in
lret
fsubs
and
aam
mov
imul
xchg
out
cwtl
arpl
pop
xor
lret
aaa
mov
divb
push
push
je
ja
out
pop
das
add
inc
stos
es
bound
shlb
ljmp
dec
lock
dec
cltd
int3
jne
and
div
gs
mov
clc
loop
js
pop
xchg
js
push
push
repz
sbbl
adc
pusha
andl
vpaddb
test
sub
sub
repz
addr16
fstl
inc
xor
pop
repz
int
jle
pushf
popf
or
inc
lcall
shrb
add
sub
ret
inc
aas
or
sbb
jle
dec
test
test
xlat
and
in
sbb
xor
aaa
xchg
rcrb
adc
popa
cmp
into
addb
enter
loop
rol
jne
mov
jge
mov
repnz
jne
cmc
jne
stos
loopne
inc
mov
cmpsl
dec
dec
stos
jnp
or
lahf
and
jecxz
icebp
ja
hlt
jae
jne
cmp
bound
jl
pop
clc
pop
pcmpgtd
pop
sbb
cld
push
mov
and
mov
ss
mov
loop
test
pop
push
es
xor
xor
mov
dec
jle
out
int
sti
ja
leave
das
xlat
sub
into
into
loop
or
jle
cmp
mov
stos
sbb
mov
fiaddl
xchg
push
xchg
cli
sub
xchg
clc
ret
lret
imul
arpl
orl
out
decb
mov
or
xor
rorl
pop
jp
cmp
aad
jp
jle
mov
jbe
xchg
mov
in
mov
jae
xchg
dec
iret
das
sub
push
hlt
mov
das
gs
inc
and
mov
add
xor
sub
jge
or
call
scas
pop
sub
mov
or
dec
xorb
fistps
bound
jmp
cld
daa
push
popa
cmpxchg
dec
lds
adc
insl
inc
jnp
cld
mov
fsts
insb
data16
test
fidivs
mov
mov
add
out
mov
mov
test
cs
fsubl
mov
xchg
testl
mov
jp
mov
sbb
mov
in
dec
mov
jecxz
mov
jp
mov
add
cmp
inc
ss
subl
stc
cs
movsb
mov
loopne
mov
sbb
add
pop
xor
push
ret
push
inc
jle
and
scas
std
pop
rclb
es
das
leave
int
cwtl
cltd
xchg
mov
loop
inc
call
or
xchg
fld
addb
jae
pop
ret
cmp
sub
addr16
mov
test
je
xchg
movsb
sub
mov
sbb
or
mov
je
sbb
jg
jne
mov
sarb
inc
sahf
and
cmp
mov
rorl
sahf
repz
cmp
repnz
jmp
lahf
fiadds
lret
sbb
mov
and
sbb
jns
jnp
xor
jge
inc
scas
adc
cmp
mov
ss
and
fimuls
shrl
mov
push
mov
daa
fbstp
iret
mov
jo
cmc
jle
adc
mov
int3
jo
mov
ret
test
cmpl
das
xor
inc
lock
cmp
push
movl
xchg
gs
out
add
jecxz
in
cltd
lcall
pop
imul
add
rcrl
dec
dec
ret
pop
enter
cli
lret
cwtl
mov
dec
cmc
test
ret
aas
gs
xor
fwait
or
or
add
jno
mov
sbb
lods
and
das
repnz
lods
sahf
jae
fdivr
add
sbb
mov
add
lock
iret
sub
rcrl
and
xchg
loop
push
pusha
mov
or
cmc
inc
fidivrl
movsb
ljmp
popf
pop
jmp
bnd
adc
testl
nop
xchg
shl
inc
and
clc
or
mov
ljmp
push
lds
mov
mov
sub
dec
js
mov
cmp
scas
add
in
xor
les
dec
ja
lea
or
or
sbb
stc
insl
ret
sti
lods
cmc
xor
shr
xchg
add
pop
out
pushf
ret
fsub
cld
cmp
mov
dec
jns
adc
ret
in
sti
stc
or
or
mov
nop
mov
dec
pop
movsl
push
jbe
mov
sub
pop
stos
push
mov
mov
sti
push
push
ja
pop
jno
stos
imul
cmp
xchg
mov
enter
mov
mov
jle
xchg
sub
aad
test
orl
dec
push
mov
pop
mov
shl
push
in
inc
push
pop
mov
jecxz
push
xor
fs
pop
mov
adc
dec
adc
push
popa
or
out
out
test
sub
pusha
sub
inc
cmpsb
mov
and
pop
test
sbb
cld
push
mov
sbb
outsb
dec
pusha
lahf
das
mov
in
test
adc
roll
xlat
push
xor
lahf
enter
cli
sub
pop
xor
pop
punpckhbw
enter
testl
lcall
nop
out
dec
insl
xor
cmp
sbb
out
fxch
xchg
aad
fbld
mov
repnz
inc
decb
out
xor
xchg
jmp
jb
mov
ja
xorl
dec
inc
sbb
xor
sbb
subl
mov
pop
dec
aam
push
jp
bound
leave
outsb
es
ficompl
push
sbb
cmp
push
cmp
addr16
mov
adc
xchg
push
fildll
clc
std
aam
cld
in
sarb
popa
cltd
icebp
scas
rcll
adc
xchg
fsubl
rclb
mov
jno
mov
fldenv
addr16
pop
bound
mov
mov
xor
push
adc
rcr
and
shlb
xor
add
imul
pop
jp
mov
subl
stos
sub
sbb
ret
cmp
mov
and
jbe
cmp
inc
loope
mov
fmull
mov
mov
pop
adc
js
popf
cmp
pop
xchg
jmp
adc
jbe
adc
sub
sub
mov
or
and
in
packsswb
cli
ss
and
and
push
cmp
or
add
out
imul
jp
insb
pop
mov
push
movsl
dec
push
call
sbb
je
in
jl
out
xchg
shl
jne
lcall
rolb
sbb
xor
adc
in
sub
and
fwait
or
pop
jae
mov
cld
ror
sub
fmul
mov
mov
jno
decl
push
and
adc
jno
es
lods
mov
rcrl
jp
pop
test
jecxz
test
into
add
rorl
popa
js
xor
leave
les
xchg
sbb
or
or
inc
pop
pop
sbb
popf
iret
xor
dec
scas
stc
cmc
jo
mov
adc
imul
cmc
and
jnp
mov
xor
fidivs
mov
stos
push
sti
xchg
push
dec
jg
or
stos
bound
xchg
pop
xchg
outsl
inc
xchg
sbb
push
jecxz
sub
adc
pop
daa
mov
pop
inc
dec
jge
fldt
pop
stc
mov
sti
out
out
sub
mov
adc
dec
mov
stos
sbb
push
fdivr
and
push
mov
add
jp
cmc
cld
in
call
sti
or
scas
pusha
stos
fstps
push
sbb
popf
cmp
and
mov
movsb
js
push
sub
ljmp
pusha
test
and
call
jae
cmp
mov
cmc
inc
jl
bnd
out
in
xchg
in
cmpsb
in
and
and
bound
push
pop
test
arpl
in
mov
push
stos
xchg
subl
cmp
and
xor
push
les
jg
ds
xchg
push
outsl
imull
mov
aaa
push
mov
add
or
arpl
xor
aas
jmp
xchg
call
sti
repz
mov
jae
jns
mov
mov
fwait
loop
mov
outsb
pushf
add
jbe
mov
cmp
popa
cwtl
imul
enter
push
and
lahf
lds
adc
and
sahf
dec
shll
sub
jecxz
sub
add
int
jns
movsbl
outsl
pop
aad
xchg
dec
dec
cmpsb
push
pop
xchg
inc
xorb
push
arpl
js
lcall
mov
jge
or
or
xchg
xchg
sub
sarl
sarb
and
stos
mov
xor
or
mov
inc
addl
sub
mov
nop
push
stos
popa
scas
aam
or
xor
bound
lock
test
xchg
cmp
xlat
sbb
pop
push
outsl
cmp
add
decl
outsb
cmc
popl
negb
ret
inc
ret
jecxz
dec
pop
xchg
ds
pop
or
movsl
sar
insl
push
es
or
inc
push
sbb
or
bound
push
popa
jae
fs
jle
in
shll
outsl
test
pop
and
pop
push
jl
enter
add
mov
inc
and
jne
stos
stos
pop
xchg
pop
mov
mov
adc
data16
sub
pop
sbb
mov
daa
inc
xor
xchg
scas
mov
gs
adc
mov
data16
mov
sbb
fcos
sbb
loop
cmp
and
sub
dec
mov
mov
icebp
sahf
push
les
cmp
lea
ss
mov
push
or
stos
out
cli
mov
sbb
shrb
inc
push
push
fwait
stc
sub
jnp
fs
push
jno
addr16
rcl
sahf
hlt
mov
fs
leave
ficompl
sbb
aaa
dec
inc
pushf
or
adc
nop
lret
cmpsl
aaa
cmp
push
inc
add
xlat
pusha
je
xchg
sbb
shl
iret
and
or
imul
mov
enter
mov
ds
arpl
sub
scas
mov
pop
loop
aas
push
aas
aad
loopne
mov
jne
mov
lret
fwait
in
mov
test
mov
shrb
dec
jmp
adc
push
fists
int3
cmpsb
in
mov
cmpsb
pop
cs
sahf
inc
mov
movsb
inc
add
or
jns
mov
jo
or
lret
xor
es
xor
jmp
inc
cmp
enter
sbb
fnstenv
jg
out
sbb
push
sub
in
sarb
or
into
leave
mov
rcll
mov
inc
movsb
jb
adcl
mov
or
inc
sahf
aaa
push
jb
jp
scas
out
xor
nop
insb
xchg
xchg
mov
lds
cmp
in
cmp
push
mov
ficompl
mov
and
lahf
pusha
sub
push
sub
sahf
vpaddusw
ds
dec
imul
sti
mov
inc
adc
out
inc
adc
jp
xchg
or
pop
enter
rcrb
fwait
mov
xchg
imul
xor
out
jg
or
push
dec
repnz
xchg
push
es
mov
pop
icebp
movsl
pop
movsl
jbe
stc
xchg
icebp
pop
shl
jle
xor
imulb
cmp
stos
into
in
shl
stos
adc
xor
pop
sub
or
imulb
ja
jno
cmpsb
fcmovb
xlat
jl
fwait
inc
pop
cmp
lock
movsl
sbb
push
fsts
insl
daa
jb
lea
mov
mov
mov
push
inc
xchg
mov
xchg
std
push
and
in
fsubrl
mov
sbb
outsb
add
clc
sbbl
mov
pop
imul
outsb
leave
cmp
or
pop
insl
lret
imul
int3
aad
je
inc
insb
push
xchg
adc
inc
test
inc
dec
mov
inc
mov
jne
loopne
sti
or
mov
cmp
adc
int
xchg
addr16
xchg
stc
mov
je
or
and
fs
push
jp
dec
and
sub
or
cmp
pop
hlt
xchg
lcall
sbb
mov
xor
pop
das
sub
in
shlb
js
dec
iret
and
cwtl
gs
sub
add
daa
mov
movsb
mov
and
or
sarb
fldl
cmpb
les
cmp
or
and
xchg
mov
inc
xor
adc
xchg
cld
and
pop
popa
rclb
ret
movb
bound
daa
test
ret
hlt
dec
sbb
jmp
mov
inc
cld
cmpsb
push
mov
cmp
xchg
pop
js
sti
fnsave
loopne
lcall
pop
jbe
int
aad
and
dec
stos
mov
mov
pop
adc
xor
lahf
shlw
dec
push
jle
aam
imul
mul
xor
iret
aad
loopne
inc
dec
jnp
jge
sub
sub
mov
fs
adc
adc
call
bound
lret
or
add
daa
pushf
xor
mov
fnstsw
xor
jle
push
lcall
movsl
ja
push
mov
testl
pop
sub
cld
mov
or
jge
sbb
push
pop
push
jp
out
and
scas
rclb
or
pop
imul
movsl
ja
adc
and
mov
adc
idivl
jns
sahf
cmpsb
fs
js
pop
es
push
push
repz
fstl
gs
add
int3
jnp
es
or
push
aad
in
fadd
add
adc
push
jnp
repnz
scas
sbb
adc
mov
hlt
int3
inc
test
stos
stos
repnz
push
data16
fldcw
movsl
pop
add
pushl
push
sbb
int
mov
or
push
mov
fadds
fidivl
into
dec
repz
inc
inc
sbb
ljmp
fld
xchg
mov
push
popa
fdivl
int
cmpsl
sub
mov
dec
push
inc
outsb
jle
fcomps
xor
arpl
mov
pop
es
je
jns
mov
cld
cltd
push
aam
jbe
test
fcompl
outsb
rol
pop
xchg
push
les
test
fisttps
mov
imul
arpl
adc
jmp
xor
push
add
push
cmpsb
push
ds
add
fidivs
test
mov
ficompl
inc
mov
xchg
xchg
xor
cwtl
jo
push
int
jae
outsl
ljmp
jecxz
cmp
dec
cli
es
jmp
out
xor
push
rcl
repz
sbb
scas
jecxz
adc
imul
fildl
add
and
sbb
cmp
repnz
outsb
xchg
std
pop
sbb
int
iret
mov
out
xor
rolb
hlt
call
dec
push
lret
rcr
fidivrs
xor
out
jge
out
shll
or
xor
cld
pop
push
aas
pusha
xor
nop
dec
rcrl
inc
gs
icebp
jne
loope
ss
inc
sbb
loope
push
sbb
js
pop
unpckhps
cwtl
fmul
clc
sbb
mov
sub
or
push
scas
js
pop
push
out
xor
dec
out
int
xchg
dec
add
inc
mov
cmp
xchg
xchg
sar
pop
add
and
cmp
hlt
inc
stc
ds
notl
sub
pop
addr16
or
iret
movsb
fs
pop
jmp
in
inc
in
cmp
push
fistps
es
cmpsb
std
mov
jne
mov
lods
lahf
int
or
pop
jmp
dec
ret
jne
and
xor
jno
pop
jno
outsl
hlt
inc
xchg
pop
sbb
inc
pop
sub
iret
movsb
xor
fsubl
add
fmuls
xlat
out
pusha
test
sub
or
pop
mov
or
or
dec
aaa
push
cmpb
lea
lea
add
xchg
xchg
jns
push
incl
fiaddl
mov
and
xchg
lahf
in
loope
sbb
push
pop
lea
mov
jmp
jo
mov
into
push
jge
mov
cltd
vpshaq
fimull
out
stc
push
ret
ficompl
outsb
inc
mov
stos
add
dec
stos
sahf
pop
sbb
aaa
mov
sbb
std
into
movsb
enter
cmpsl
rcll
mov
lea
cmp
enter
cmpsb
adc
fwait
mov
out
push
dec
mov
pop
mov
out
popf
and
sbb
push
pop
mov
add
mov
pop
push
jb
push
adc
xchg
gs
scas
xchg
inc
mov
dec
aas
adc
mov
rorb
in
jg
jg
xchg
lock
dec
fiaddl
jnp
cmp
fidivs
rcrb
jecxz
or
or
dec
shlb
cs
lock
push
push
ss
mov
xchg
cmp
mov
imul
outsl
xor
adc
pop
iret
add
push
std
or
xchg
repz
lock
dec
loope
inc
pop
mov
ret
dec
xchg
mov
loop
stos
lods
stos
jecxz
jecxz
push
xor
aas
mov
sub
xchg
pop
dec
ljmp
pop
push
or
gs
jecxz
dec
cli
fcoms
not
lock
inc
push
cmp
aaa
mov
ret
xor
dec
sbb
iret
ss
jne
jno
mov
push
push
lret
xlat
add
jl
loope
popa
inc
and
fidivl
xchg
mov
sysexit
or
push
push
adcb
or
int
fs
fstpl
lahf
loopne
mov
push
outsb
sub
mov
xchg
mov
cvtps2pi
mov
sub
add
mov
lret
mov
inc
in
jno
sbb
dec
out
aaa
sbb
inc
insl
fdivl
jge
dec
mov
inc
xor
mov
rcll
xchg
mov
sub
testb
inc
dec
xchg
lea
movsb
mov
mov
mov
xchg
sbb
xchg
adc
adc
call
rorl
adcb
pop
mov
mov
out
and
and
xor
cmpsl
lret
or
push
sahf
hlt
xor
cmp
adc
xor
or
inc
xchg
stos
hlt
mov
or
cli
jno
cld
shr
imul
inc
aas
xlat
ret
sbbl
decl
push
mov
in
test
jno
mov
cmp
jg
mov
cmpsl
ret
sub
or
ja
sub
mov
imul
ret
call
sub
pop
mov
mov
fisttps
shll
sahf
scas
out
pop
mov
movb
push
xchg
sub
push
cmpsl
or
nop
gs
inc
jbe
inc
xor
stos
lcall
add
or
bound
in
xchg
ficoml
cwtl
fdivrl
dec
int
xchg
lahf
cltd
push
xorb
ja
mov
imul
out
jge
cmp
dec
xchg
ds
jp
push
sbb
sbb
test
add
cmp
inc
inc
mov
lods
into
xchg
cmp
push
int3
les
jbe
mov
xchg
add
sbb
pop
movsb
aas
jmp
inc
cs
roll
ret
xchg
out
je
xchg
cmp
fstl
adc
test
mov
int3
add
push
fcompl
insb
adc
xchg
lds
jle
test
stos
js
inc
loope
cwtl
sbb
mov
loope
push
cmp
mov
or
jge
jb
mov
dec
lock
out
jae
push
es
push
sbb
stos
dec
mov
lahf
mov
mov
repz
jmp
and
dec
stos
lahf
mov
jns
xchg
stos
movsl
or
xchg
pop
adcb
xchg
add
jns
into
mov
push
push
mov
pop
incl
push
jnp
test
mov
andb
pop
and
jmp
loopne
or
repnz
inc
mov
inc
inc
andl
jae
call
arpl
xchg
push
das
adc
inc
add
test
es
push
mov
enter
pop
xor
dec
jp
out
cmp
lret
aas
adc
mov
push
pop
rorb
scas
fstpt
xor
mov
adcb
and
sub
icebp
sub
pop
imul
add
je
lds
daa
test
rcrb
cwtl
dec
iret
lahf
clc
inc
sub
inc
in
cld
cmpsl
clc
push
leave
xor
or
mov
addr16
lds
sub
xchg
in
jl
jge
sbb
inc
jnp
mov
std
fldl
in
mov
iret
jno
xchg
mov
mov
jecxz
xor
jnp
idivl
xor
jmp
addr16
jne
xor
sbb
addb
mov
jg
ljmp
out
xor
ficoms
and
sti
cmp
mov
push
or
mov
inc
lret
lcall
cmp
mov
xchg
lods
les
cwtl
push
pusha
repnz
jmp
loop
add
icebp
std
jmp
sarl
mov
add
add
clc
inc
xchg
jnp
push
daa
mov
jmp
shr
cmp
lahf
fmuls
in
mov
add
imul
pop
or
mov
les
jns
fisubrs
push
popa
ret
lahf
xchg
aaa
das
shrl
fldt
leave
push
pop
mov
sahf
testl
rolb
mov
fnstenv
sub
push
addr16
subl
loope
inc
push
imul
and
mov
push
mov
mov
incb
or
in
loop
xchg
fcoms
or
fwait
jo
push
mov
cmp
or
rcl
subl
pusha
cmp
arpl
ret
sbb
xchg
notl
dec
or
rcrl
ret
or
int3
and
dec
dec
or
adc
cmp
dec
xchg
push
pop
ret
fsubrl
mov
hlt
jns
xor
je
shlb
sub
test
pop
sbb
enter
push
je
scas
sub
jmp
pop
leave
inc
xor
dec
rorb
lds
aaa
bnd
sbb
scas
push
cli
adc
and
jo
fistpll
lods
bound
inc
and
adc
pop
pop
movsb
jmp
cmp
out
sbb
testl
pop
pop
fistpl
cmp
jnp
jl
in
repz
aaa
jmp
or
ds
add
inc
mov
jge
decl
or
mov
mov
add
clc
stc
xlat
xchg
fldl
mov
je
inc
in
cltd
inc
adc
icebp
inc
xor
dec
or
xchg
fsubp
lods
mov
jnp
adcb
stos
ror
push
sub
scas
lods
pushf
lods
nop
ret
test
mov
push
dec
cmp
push
imul
mov
pusha
pop
sbb
inc
pop
movsb
or
rcrl
adc
roll
mov
lods
adc
stos
sbb
cltd
xchg
andl
mov
sub
cld
shlb
cmp
cmp
lcall
mov
adcb
ljmp
je
xor
aas
test
jle
insl
popa
out
or
cwtl
pop
pop
mov
inc
jo
dec
cli
xchg
sbb
dec
adc
adc
repz
jne
jmp
sub
pop
enter
shlb
push
rclb
fldt
ljmp
dec
mov
testb
aam
das
xor
push
xchg
pop
jbe
gs
jns
pminsw
shrb
xor
popf
mov
push
inc
in
add
mov
cmp
decb
je
adc
jmp
sub
jo
les
iret
int3
xchg
sbbb
orps
xor
imul
lret
or
sbb
xor
xorb
btrl
hlt
inc
rclb
push
cmp
mov
out
inc
je
dec
xor
pop
leave
push
cmpsb
xchg
cli
xor
ja
scas
into
rcrl
sbb
cwtl
call
pop
xor
jbe
mov
dec
test
cmp
fnstsw
fiaddl
repz
xor
sub
cmpl
and
ror
outsb
sbb
in
dec
push
fcompl
hlt
jmp
fiadds
or
daa
ret
inc
sbbb
cmp
cmp
jp
jge
pop
lock
inc
push
rolb
and
jmp
lcall
pop
inc
ficoms
jle
arpl
sub
lret
xchg
pop
inc
movsl
js
mov
sub
jae
ljmp
jns
push
xorl
mov
jecxz
hlt
jb
repnz
inc
or
scas
scas
cmp
jno
movsb
jge
push
sbb
vcvttsd2si
fisubs
icebp
and
sti
sub
enter
mov
pop
push
je
xchg
hlt
pop
jo
jle
icebp
xor
xchg
jns
and
cmp
dec
xlat
inc
xchg
sahf
cmp
sub
out
jo
loopne
jge
xchg
xor
xor
push
push
mov
mov
idivl
push
cmpsb
movsb
movsl
mov
mov
mov
lcall
out
jo
jne
repnz
aad
fmuls
mov
stc
xor
xlat
movsl
pop
ljmp
mov
mov
adc
outsl
movsb
dec
cmp
and
mov
or
cltd
or
mov
std
flds
fisubrs
sbb
lods
shl
addr16
enter
pop
jns
jl
int
jl
cmpsl
sbb
mov
cwtl
add
jl
lret
mov
cli
inc
dec
popf
sbb
adc
out
cld
push
dec
aad
jmp
in
out
dec
add
ds
xchg
outsl
arpl
jo
adc
jne
pop
jae
repnz
popa
dec
xchg
jl
add
mov
inc
xor
mov
movsb
jp
sarl
lcall
imul
fwait
adcl
mov
xchg
scas
inc
in
xchg
push
push
fwait
nop
stos
xchg
mov
add
xor
lods
lods
iret
test
movsb
arpl
cld
loop
in
or
mov
jb
outsl
sub
push
or
cmc
hlt
ljmp
outsb
ss
inc
pop
pop
stos
sub
rorb
sbb
test
data16
mov
aaa
das
into
and
or
aaa
fbld
xor
cwtl
pop
lods
mov
scas
push
or
sbb
mov
cmpsb
and
xchg
lock
sbb
mov
sub
push
fidivl
cmpsl
int
sbb
pop
iret
adc
mov
fs
xchg
push
icebp
or
mov
addb
mov
xchg
in
scas
sbb
add
or
test
movsb
add
daa
xchg
jmp
sub
inc
ds
ss
popa
xchg
and
sarl
jnp
pop
pop
cwtl
jb
pop
mov
dec
dec
loop
sbb
dec
repz
scas
rorb
inc
and
push
pop
inc
call
in
mov
jbe
xchg
daa
mov
push
xchg
jbe
ret
and
fs
add
dec
jl
jecxz
or
je
xchg
pop
lcall
lret
mov
push
in
push
sti
xor
add
fcomip
lahf
shll
push
adc
mov
inc
xor
push
jmp
jg
cmpsl
mov
bound
ljmp
push
rorb
pop
insb
repz
rcrb
pop
adc
lods
or
add
pop
js
mov
int3
xchg
fnstenv
cmpsl
sbb
es
cmpsl
prefetchw
jb
rclb
mov
cmp
and
cmp
ss
sarb
fs
or
and
les
push
mov
fdivp
fstpt
imul
test
adc
inc
and
mov
popa
push
and
aad
imul
jo
lds
cmp
daa
jb
shll
pop
xchg
jp
adc
stc
lret
ljmp
dec
inc
dec
int
sbb
xchg
std
or
out
rcrl
loope
out
cs
mov
les
xchg
pop
mov
addr16
sbb
ss
lds
push
in
pop
scas
push
push
aam
jecxz
ljmp
dec
scas
push
sahf
fcoms
loope
mov
loope
pop
lds
dec
jecxz
mov
stos
mov
std
popa
add
adc
addr16
test
ljmp
cmp
je
insb
fildl
idivl
mov
push
xchg
cmp
call
das
jge
divb
hlt
into
pop
test
xor
dec
shll
lahf
cmpb
out
fwait
das
sub
pop
inc
jne
mov
ss
push
outsl
test
mov
dec
fsubp
sbb
or
xor
std
loopne
ret
dec
xchg
jmp
pop
inc
mov
shlb
xlat
xchg
jbe
cmp
pusha
inc
in
in
jp
popa
hlt
push
push
inc
fwait
in
mov
stc
mov
cwtl
xlat
xchg
lcall
pop
and
movsl
sbb
addb
inc
or
sbb
mov
movsb
xchg
fisubs
mov
pop
add
jge
or
sbb
jmp
xor
test
mov
xor
mov
shll
out
loop
out
cmp
sub
stos
adc
inc
pop
jle
sbb
data16
mov
adc
xor
jo
sbb
ret
gs
adc
insb
fdivl
jbe
inc
cld
xor
mov
inc
popf
stc
sub
pop
movsl
fistps
jns
sbb
ja
dec
das
pusha
dec
add
lods
lods
imul
mov
or
pop
inc
fs
hlt
push
push
lods
xor
ja
lock
add
rolb
inc
mov
insl
xchg
mov
call
mov
cmp
mov
adc
es
imul
nop
icebp
dec
adc
xchg
and
fidivrs
enter
mov
cmp
mov
jnp
testb
fstpl
and
stc
dec
dec
dec
popa
mov
jg
mov
sbb
addr16
sbb
insl
jmp
pop
jp
and
movsl
das
arpl
icebp
into
addl
mov
add
xchg
and
and
adc
sbb
mov
cwtl
jmp
mov
and
pop
std
ficoms
jae
cmp
adc
lahf
dec
mov
or
mov
pop
lock
mov
xor
imul
fnstenv
cli
add
lods
xorb
and
sbb
pop
daa
pop
inc
push
loopne
lds
sahf
dec
dec
pop
pop
mov
sub
pop
sbb
out
add
xchg
cmp
push
mov
psubusb
push
dec
bound
lock
test
xor
and
int3
xchg
cmp
pop
std
xor
dec
popf
test
cli
mov
loope
fisubl
movsl
adc
decb
inc
push
testb
adc
mov
pop
jbe
ss
pop
add
add
scas
orl
pusha
and
jle
xchg
test
sbb
xor
mov
in
pop
jmp
mov
js
mov
cmp
or
sti
rcll
stc
push
lahf
push
addr16
inc
outsb
stos
aam
imul
adc
or
mov
loope
push
sub
mov
pop
add
mov
lds
call
pusha
mov
js
sbb
mov
jp
lcall
cli
lock
stos
or
dec
gs
out
das
and
cld
movsb
mov
mov
sbb
cmp
dec
test
repz
pop
notb
sarl
stos
and
or
lcall
cmp
pop
and
iret
rolb
add
pop
adc
mov
std
jno
xchg
dec
pop
add
loope
mov
push
push
jp
xor
and
pop
into
hlt
mov
xchg
xor
mov
fwait
mov
insb
dec
cwtl
iret
mov
ja
arpl
inc
mov
pop
fnstcw
out
cmpsb
call
stos
rclb
xchg
push
mov
sbb
sahf
inc
xchg
aad
cwtl
mov
imulb
jle
push
inc
sub
addr16
push
addl
add
in
xchg
dec
inc
and
jl
imul
addl
fcomp
pop
or
lds
clc
xchg
sbb
ljmp
xchg
xchg
fadds
loop
xchg
movsl
cmp
mov
push
push
push
mov
dec
aas
and
fwait
cmpsb
xchg
or
jp
stos
mov
aad
ss
dec
xchg
pop
loopne
dec
das
inc
gs
ss
outsl
rcrb
and
daa
loope
mov
mov
or
sub
data16
or
out
loope
pop
xor
xchg
jl
and
sub
es
jge
scas
add
cmc
iret
xchg
mov
mov
push
and
loope
push
sbb
testl
fisubl
stc
fidivs
jecxz
adc
sbb
pusha
mov
sbbl
sub
or
pop
jmp
popa
andl
out
mov
into
int3
stc
outsl
dec
mov
arpl
push
mov
popf
cld
mov
lahf
inc
dec
jp
lods
dec
cmc
int
xor
frstor
jbe
inc
cmc
push
mov
mov
aam
shll
mov
lret
lahf
shll
les
dec
dec
loopne
outsl
cmpsl
and
xchg
mov
test
shlb
loope
popf
fwait
jnp
sbb
rorb
das
push
xchg
push
mov
lret
sbb
jle
loop
xchg
add
outsl
xlat
test
xchg
out
push
jae
in
dec
push
jmp
je
sbb
xchg
and
in
dec
test
bound
inc
in
mov
aas
push
lea
xchg
push
out
and
out
push
je
mov
jmp
nop
and
ds
neg
jge
jmp
jp
inc
jle
xchg
sbb
add
cmp
enter
jae
data16
push
scas
rcrb
pop
adc
insl
imul
add
imul
lret
nop
lds
lret
lea
cs
jge
xor
jo
xchg
push
and
push
rcll
lods
adc
mov
scas
lea
and
dec
jns
push
push
fistpll
add
inc
pushf
fiaddl
and
dec
sub
push
jmp
push
icebp
mov
pop
xlat
and
pop
mov
mov
es
pcmpeqw
add
dec
shlb
or
lock
mov
push
jmp
ljmp
and
int3
pop
sub
pop
mulb
add
mov
sbb
leave
mov
notb
push
clc
hlt
mov
lcall
cmpsb
mov
neg
add
xor
jge
jge
insl
out
mov
nop
mov
sub
fildl
inc
imul
addr16
add
pusha
sub
inc
xchg
mov
mov
fisubl
mov
mov
in
fbld
cmp
idiv
adc
popa
jnp
shll
push
jmp
int3
out
fwait
leave
dec
scas
popl
fwait
add
cmp
add
or
fcompl
out
xchg
mov
rcll
sahf
fisubrs
loop
sarb
out
xor
jmp
inc
fwait
cwtl
dec
cmp
sub
pop
pop
mov
jae
push
xchg
stos
and
test
arpl
lret
jo
mov
and
movsl
ret
mov
jb
ss
lret
pop
gs
ljmp
test
mov
out
inc
xchg
adc
pop
jbe
jne
fisttpl
pop
pop
outsl
xor
mov
adc
adc
push
in
mov
inc
dec
mov
stc
add
sub
mov
pusha
jne
push
fisubl
lea
lahf
xor
sub
or
and
jl
cmc
fstp
xchg
dec
push
mov
aas
push
out
mov
ret
fcompl
sahf
cld
in
pop
repnz
aad
push
push
imul
out
imul
cwtl
dec
fisubl
pop
jg
inc
lret
jns
push
or
gs
adc
je
jbe
add
xchg
dec
movsb
in
adc
std
das
push
nop
push
js
mov
lods
test
lcall
cmp
ret
imul
mov
cmp
or
inc
pop
push
in
cmp
dec
inc
addr16
xchg
mov
je
fstpl
xchg
aad
or
mov
call
sub
mov
xor
aas
jns
cmp
adc
sbbb
xchg
lea
outsb
add
fs
pop
mov
xor
pop
mov
mov
jae
cmp
and
dec
add
mov
lea
rclb
sbb
test
inc
frstor
jp
sti
jns
mov
sahf
cmp
sub
xchg
pop
loopne
in
jecxz
hlt
jae
js
repnz
iret
xor
lods
push
rclb
dec
outsb
pop
cmp
adc
sub
std
adc
pop
mov
or
mov
sub
sub
inc
pop
mov
pop
xchg
ret
mov
lea
cmp
inc
push
mov
sbb
pop
lods
and
stc
dec
out
or
adc
jae
cs
les
adc
mov
aas
add
mov
test
loop
loop
ds
inc
mov
mov
mov
cmp
adc
in
fisttpl
sti
xchg
mov
jb
add
adc
fistpll
test
aas
mov
add
mov
out
jl
leave
push
test
enter
shrb
mov
je
std
shl
adc
push
cmpsl
or
aaa
std
in
mov
and
add
int3
and
addl
cs
fsubs
lret
inc
aaa
iret
aaa
xor
jbe
adcl
xor
call
xchg
lret
mov
xlat
push
dec
dec
jno
addr16
mov
adc
in
adc
mov
jp
aam
loopne
cwtl
test
pop
andl
dec
inc
mov
dec
lock
xchg
jl
lock
aad
je
inc
mov
and
out
ret
popa
repz
arpl
adc
xchg
xchg
movsb
popf
sub
push
das
loopne
fwait
std
jb
pushf
pop
popa
movsb
mov
rol
jmp
roll
jge
mull
inc
jmpw
lret
ds
test
jb
test
jl
xor
leave
fsts
inc
es
xchg
stc
jp
fwait
dec
imul
jno
sbb
mov
pop
scas
clc
rcl
inc
cli
xchg
mov
shll
sbb
dec
jne
inc
dec
xchg
fidivrl
dec
sbb
jl
fs
out
fimull
xchg
jb
in
or
ds
aaa
in
mov
push
in
addr16
xor
sub
clc
jo
mov
and
ret
cmpsl
or
or
cli
imul
mov
andl
jb
bound
and
mov
lahf
dec
movsb
push
adc
mov
int3
xor
push
xchg
push
outsl
lret
test
mov
in
icebp
cmpsl
cmpsl
popa
stc
cmp
sarb
leave
fidivrs
xchg
icebp
mov
movsb
cli
adc
inc
pushf
jecxz
lcall
pushl
aaa
out
mov
dec
pop
push
xorl
iret
cli
cmpb
jnp
outsb
sbb
or
movsb
cmp
popf
sahf
mov
mov
in
xor
inc
mov
stc
jne
into
sbb
jmp
or
push
mov
adcl
xor
pop
sti
test
call
and
lods
push
mov
xor
shll
jl
in
shll
fsubl
test
adc
repz
cmp
shlb
imul
mov
lea
jns
xchg
enter
inc
adc
repnz
adc
imul
fdiv
push
js
mov
jnp
pushl
jge
push
arpl
jne
cli
mov
mov
dec
scas
sub
xor
lahf
mov
inc
leave
jp
pop
pusha
or
pop
mov
out
iret
xlat
sbb
inc
leave
xchg
mov
in
or
sbb
mov
ja
sbb
movsl
mov
xchg
cmp
mov
outsb
pushf
pop
jnp
sbb
sti
icebp
setge
mov
outsl
dec
mov
xor
in
xchg
popf
dec
or
je
stc
arpl
inc
ret
cwtl
mov
cwtl
rorb
cltd
in
fsubrl
test
adc
xchg
mov
out
jge
cmp
sbb
cmc
int
pop
testl
inc
xchg
xor
and
dec
cmpsb
mov
scas
and
pop
lret
sahf
int
inc
sbb
mov
mov
sub
mov
xor
sub
adc
push
add
xor
loop
fiaddl
dec
cmc
arpl
and
not
push
and
sub
or
jle
sbb
idiv
in
xchg
push
out
push
add
cld
jae
or
int
insb
or
dec
mov
push
idivb
mov
lds
sbb
pop
out
insl
mov
push
xor
xor
and
sub
fnstenv
pop
mov
mov
test
nop
cmpsb
cwtl
sbb
aaa
pushf
insb
fisttpll
ret
and
jae
call
jecxz
and
pushf
mov
and
test
pop
ffreep
aaa
push
movsb
jp
inc
cltd
mov
data16
rcll
aaa
out
xor
fnstsw
xchg
or
cltd
pop
sub
push
xchg
popa
sahf
push
mov
pop
lock
jmp
mull
lahf
jns
orl
icebp
cmp
and
shlb
out
lods
push
ljmp
ret
xorl
jecxz
push
pop
or
xor
fldt
loop
dec
add
mov
mov
sbb
or
fsub
jns
sbb
rcrb
in
fsubl
jl
mov
js
adc
inc
jmp
mov
sub
xchg
pop
mov
fwait
in
add
or
or
cltd
inc
call
test
cwtl
dec
insb
insb
and
adc
int
lret
outsb
mov
mov
push
aam
cld
pusha
int
shrl
mov
sub
loopne
pop
push
add
test
fcom
sbb
push
add
es
xor
push
mov
xlat
rcrb
mov
std
shrb
xchg
les
jae
mov
orb
out
cmp
loope
push
xchg
push
xchg
std
sbb
sub
adc
and
or
aam
xor
sbb
flds
or
and
pop
cs
test
and
std
jp
mov
adc
scas
fmuls
mov
add
imul
test
test
shl
out
and
xorb
push
pop
push
test
lfs
nop
test
push
scas
jnp
int
cmpb
enter
mov
and
sub
repnz
cmc
sub
ret
js
nop
insb
hlt
dec
femms
xchg
mov
push
leave
sbb
xchg
sub
dec
dec
stos
icebp
mov
ds
cmp
out
pusha
jbe
cmpsb
mov
pop
jp
stos
xor
adc
xchg
jnp
pop
mov
std
in
xchg
data16
pushf
sbb
cmp
iret
in
sub
addl
add
and
loopne
pop
out
jno
xchg
cmp
rclb
and
mov
aas
push
xchg
in
inc
xor
scas
inc
xchg
push
mov
insl
cli
sbb
add
mov
sub
cmpsl
aad
xorb
ja
adc
popf
sahf
push
jmp
or
or
in
rorl
arpl
pop
push
popf
cmp
sti
cmpsl
mov
xchg
mov
push
stos
clc
mov
dec
sub
out
cld
insb
push
int
push
adc
inc
test
test
scas
inc
sub
sti
sbb
adc
or
jo
pushl
test
inc
lret
mov
xor
and
mov
mov
insl
inc
cmp
adc
xchg
sbb
scas
loop
xor
jae
or
jmp
dec
sahf
add
leavew
scas
jne
dec
mov
cwtl
sbb
jno
lret
shrl
adc
add
outsb
xor
push
push
cmp
mov
cmp
jno
mull
xchg
jl
cmp
std
imull
movsb
pushf
jmp
stos
loope
jg
mov
cmpsb
push
adc
mov
jmp
aas
dec
mov
push
cmpsb
jb
mov
add
cmp
push
mov
push
or
int3
dec
insl
test
add
pop
fs
sub
or
cmp
cwtl
repnz
es
sahf
jbe
xor
adc
xor
and
cs
mov
lea
fs
xlat
sti
lods
test
rcrb
adc
jae
mov
adc
xor
push
loope
or
es
mov
jne
dec
rorl
add
fxch
movsb
mov
sbb
inc
in
cltd
and
sub
add
std
mov
pop
std
clc
iret
sbb
jb
lds
adc
mov
icebp
sbb
jbe
jbe
leave
pavgb
or
add
out
add
mov
orb
xchg
stc
test
fadd
sbb
fisttpll
lods
out
push
sbb
adc
push
push
insb
out
xor
jns
negl
and
adc
and
data16
popf
cld
xor
push
push
adc
stos
mov
testl
push
adc
fildll
in
je
pop
out
cld
mov
lret
scas
jp
xchg
push
sub
jbe
xchg
jne
pop
jne
outsb
les
push
notl
jne
popf
adc
icebp
inc
out
psubsw
sbb
sbbl
push
aas
stos
jl
mov
pop
mov
jmp
mov
push
cltd
sub
inc
xor
jbe,pt
aas
pop
mov
cli
mov
lret
popa
cltd
in
mov
sahf
or
jb
int
mov
loope
inc
mov
xor
mov
push
scas
cmp
xchg
sub
addr16
mov
loope
inc
or
sbb
pop
cmp
sbb
mov
in
pop
adc
or
sbb
sub
cmp
push
or
outsl
mov
push
imul
stos
or
mov
jnp
adc
fistpl
adc
imul
or
push
data16
lods
mov
adc
mov
fwait
inc
pushl
bnd
dec
lea
cmpsl
imul
pop
sub
cld
lea
stos
fsubl
mov
inc
jecxz
insb
pop
cmp
lock
sbb
cmp
dec
mov
int
mov
or
stos
aaa
cmc
fiadds
int
shll
jle
jbe
jle
fcmovnu
fdivrs
lcall
lds
ljmp
xor
pop
mov
popf
mov
pop
ss
nop
xchg
outsb
adc
cmp
fmull
xor
and
aad
cmc
mov
das
mov
xchg
jns
jle
daa
xchg
int
cmp
fs
sbb
sub
es
sahf
xlat
push
add
push
cwtl
inc
jmp
sub
cwtl
push
and
loop
pop
sbb
in
sub
push
pop
stos
ds
jmp
insl
fs
repz
andb
add
dec
xor
adc
pop
mov
or
fldenv
stos
jae
add
sub
xor
cld
cmpsb
xchg
popf
inc
out
push
sub
or
cmp
je
div
lahf
sub
jecxz
cmc
xchg
sbb
test
movsl
arpl
push
leave
gs
pop
movl
or
fwait
mov
shlb
es
or
lods
int3
jnp
inc
pop
pop
push
dec
dec
cld
mov
inc
movsl
or
xchg
outsl
xchg
ss
lock
and
cli
pop
rcrb
mov
shlb
lods
shll
aaa
aas
xor
scas
clc
inc
push
mulb
dec
vmovhpd
push
inc
int
fcom
sub
mov
sbb
push
stc
and
xchg
sbb
orl
cmp
lcall
outsl
fwait
add
mov
paddd
push
push
inc
je
xchg
leave
hlt
xchg
addl
jns
mov
jo
push
push
sub
sub
arpl
or
fdiv
jae
ret
push
addr16
or
jle
lret
sub
cli
xlat
insb
mov
lret
insb
inc
mov
lret
cltd
sbbl
sbb
pop
xchg
jge
mov
out
enter
ret
dec
jge
test
add
or
sbb
adc
out
sbb
fldl
pop
cmp
mov
add
jge
stos
loopne
push
xchg
bound
push
int3
subl
cmp
arpl
push
pop
out
pusha
adc
aad
mul
js
pop
adc
jle
fs
cmp
aaa
mov
sbb
pop
pop
in
xchg
xor
fdivs
sbb
pop
cmpsb
push
mov
pop
add
push
pop
int
mov
stos
xchg
push
dec
sub
lcall
xor
lods
in
cmp
loop
cli
int
cmp
pop
or
inc
lahf
daa
mov
xchg
stos
je
dec
cmpsl
test
fcoms
jb
add
xor
in
adc
mov
ret
std
repnz
mov
cmp
mov
mov
cmpsl
sbb
aas
ret
mov
jno
insb
pop
dec
rcl
xor
or
dec
push
and
stc
and
ds
rorl
adc
pop
xchg
icebp
test
andl
and
push
sbb
dec
jo
push
popa
pop
xor
loop
jae
push
ficomps
lret
push
outsl
pushw
xor
push
dec
ret
dec
adc
sbb
test
mov
lret
dec
loope
inc
stos
pusha
lds
sti
fbld
pop
cltd
jbe
roll
in
es
mov
scas
xchg
or
adc
testb
mov
pop
cs
and
dec
lods
in
fisubs
scas
cltd
into
mov
mov
add
iret
sub
mov
imul
ret
fistpll
jns
sti
dec
test
xchg
and
clc
jecxz
std
push
and
mov
and
adcl
jle
xor
cmpsl
lods
rorl
push
push
jg
call
push
int3
xchg
mov
ss
lds
xor
sbb
dec
xchg
nop
mov
add
push
loopne
aas
testb
mov
repnz
push
sbb
into
dec
mov
fsubrs
sbb
ror
mov
adc
test
add
cli
cmp
sbb
insl
jecxz
sbb
mov
bound
pop
cmpl
dec
pop
jnp
jo
aam
mov
test
lock
cli
les
pop
adc
ror
in
lahf
xor
aam
inc
jnp
push
mov
pop
xchg
js
xchg
lcall
mov
push
push
lcall
mov
ja
rclb
pop
add
xchg
aas
adc
in
or
xchg
in
test
pop
mov
jb
add
nop
pop
adc
push
dec
in
mov
fwait
cmp
scas
mov
cmc
or
jl
out
xor
icebp
mov
inc
addr16
jge
mov
sub
scas
loop
mov
dec
mov
sub
xor
vphadddq
cmc
pop
js
push
in
ds
enter
pop
test
sbb
jp
sahf
mov
mov
jbe
adc
int3
pop
mov
adc
mov
scas
pop
cmp
push
testl
sbb
loope
or
cmpsl
xchg
push
imul
icebp
cmp
mulb
jle
imul
xchg
push
addb
and
das
dec
jp
les
cmp
iret
pop
and
sub
mov
add
out
push
cmp
mov
cmp
iret
imul
sub
sub
cltd
push
daa
pusha
sbb
adc
dec
adc
or
or
sarb
mov
aad
jle
icebp
sarb
mov
ss
add
pop
sbb
arpl
mov
dec
jg
or
xor
cmpsl
aaa
or
dec
scas
cmp
mov
aam
les
out
imul
lcall
push
fstp
imul
sbbb
mov
or
stc
sti
jns
sbb
in
push
out
loop
repz
mov
cltd
aas
dec
pop
xor
dec
jp
loope
bound
daa
mov
cmp
andb
ja
pop
dec
pop
outsb
xor
fsubrl
sub
test
and
mov
push
adc
cmp
popa
jne
das
push
cmp
add
xchg
jmp
fistl
mov
insl
inc
clc
out
xchg
jne
jmp
xor
bound
inc
enter
loope
lods
popf
repnz
les
fistl
lea
hlt
and
push
mov
stos
icebp
push
xchg
imul
xchg
mov
xchg
jge
jg
push
or
outsb
sub
fsubrl
xchg
nop
sub
das
adc
sbbb
lock
push
fistpll
ret
cmc
xor
out
push
and
mov
pop
lods
repnz
xchg
fidivs
or
cmpsb
jb
or
xchg
fnstcw
xor
and
out
mov
jge
mov
pop
cmp
ss
hlt
push
and
repnz
int
dec
in
cmpsb
xor
out
shlb
orl
repz
fcmovne
and
cmp
sub
lock
xchg
dec
insb
adc
daa
in
loopne
faddl
add
fstpt
sahf
icebp
adc
or
lea
or
push
cmp
int3
dec
icebp
push
int
ud1
xor
sbb
rorb
popf
xchg
clc
pop
fcomps
mov
repnz
test
cli
mov
pop
jno
adc
mov
xor
scas
pusha
add
inc
dec
or
sahf
aam
lret
sub
inc
and
xor
cmc
incb
adc
sbb
dec
lock
insb
xor
fistpl
aad
or
xchg
push
xor
xlat
sub
test
cmpsl
rol
add
lods
arpl
fldl
bound
xor
cli
sub
jne
cli
stos
pushf
adc
rcll
pop
movsb
rorl
loope
jo
xchg
mov
das
add
xchg
add
repz
push
ja
cmc
popa
sbb
fdivl
adc
add
cmpsb
aaa
fs
sub
jno
rorl
fdivl
rolb
xchg
aas
cmpsb
add
or
cmp
fadd
cltd
jnp
in
push
adc
out
insl
cmc
cmc
in
mov
mov
add
sub
sti
addb
sub
xchg
and
frstor
cmp
mov
and
nop
data16
repnz
pop
dec
jbe
mov
xchg
popf
mov
subl
pop
fs
imul
xor
pop
hlt
mov
and
in
hlt
jno
popf
pop
cmp
outsb
push
pop
mov
inc
shll
movsb
adc
jmp
mov
cld
mov
clc
aaa
mov
movsb
and
sub
les
push
adc
stos
inc
or
sub
call
xor
jecxz
adc
dec
repnz
mov
popf
in
aad
add
stc
insl
pushf
loop
push
inc
fbld
jno
ss
jae
and
repnz
and
fmull
inc
scas
dec
mov
enter
mov
out
sbb
mov
stc
push
jl
sti
inc
sbb
arpl
mov
jne
push
ljmp
in
push
pop
movsl
fdivrl
or
sub
mov
ret
scas
in
mov
cmpsb
mov
push
jnp
jne
sbb
rclb
les
sub
imul
fistps
xor
cs
pop
inc
out
and
mov
ja
aad
into
popa
mov
addb
pop
push
fcom
out
mov
dec
mov
sbbb
cmc
out
rcrl
sub
lret
jmp
sbb
jno
pop
mov
dec
mov
xor
imul
popa
cltd
rclb
cmc
icebp
cmp
push
hlt
cmc
push
std
or
insl
jno
mov
mov
mov
mov
mov
pop
mov
pusha
jbe
vmovd
mov
dec
mov
clc
mov
xlat
jns
jge
fs
daa
adc
xor
insl
dec
jo
cmpb
cmp
test
iret
cmp
je
push
or
and
and
insb
out
dec
mov
insb
out
mov
cmp
push
xchg
push
lods
movsb
repz
add
mov
insb
rorl
sar
in
push
outsl
adc
xor
pop
repz
repnz
hlt
out
jne
mov
repnz
sahf
xchg
xor
xchg
and
and
adc
push
scas
scas
push
leave
add
hlt
daa
call
arpl
ljmp
inc
push
mov
mov
sub
je
icebp
jbe
arpl
push
xchg
hlt
mov
mov
in
jo
push
in
insl
xchg
stc
fldcw
pop
enter
pop
jge
popa
pop
lds
push
cltd
adc
xor
push
sbb
clc
stos
push
repnz
fsubl
into
adc
test
aad
lods
sarb
sbbb
mov
xor
jg
ret
mov
mov
in
pop
aam
out
jle
loope
scas
or
xchg
push
or
loopne
es
dec
mov
or
sbb
movsb
push
aas
adc
fdiv
loope
inc
jb
sub
outsb
and
pushf
inc
fidivrl
imul
and
filds
fistpl
mov
aad
std
push
add
cli
mov
out
mov
cs
add
or
jecxz
cltd
mov
push
and
or
xchg
cld
push
mov
mov
sub
push
in
fdivrp
fcoml
push
loope
out
pushf
mov
hlt
repz
imul
ss
mov
in
mov
jns
pop
lea
in
sbb
imul
idivb
xchg
and
adc
add
mov
dec
mov
inc
sbb
mov
idiv
jle
clc
xchg
out
and
lds
or
cli
jbe
push
xor
mulb
testl
dec
cmp
inc
std
jnp,pt
and
jne
insl
in
mov
or
pop
hlt
inc
mov
clc
sub
into
insb
popf
sub
sub
xor
push
out
inc
test
push
xor
mov
inc
lahf
fistps
mov
xchg
mov
pop
cltd
in
mov
ljmp
or
in
pop
outsb
andl
bnd
xorl
mov
add
xlat
dec
and
adc
sbb
inc
mov
fsts
aas
rcrb
int
push
cld
rcrl
xor
cmpb
push
jp
dec
and
sbb
push
sbb
cli
sub
lret
mov
sbb
push
jmp
bound
mov
popa
sbb
lds
arpl
jge
inc
nop
xchg
std
jp
mov
loopne
hlt
push
out
sarl
hlt
nop
and
fcoms
fwait
je,pn
es
push
mov
ret
repnz
inc
inc
adc
fdiv
push
movsb
jne
cli
dec
shrl
cmp
xlat
movsb
arpl
dec
mov
push
imul
icebp
mov
adcl
imul
aad
jo
lahf
in
sbb
push
mov
add
and
inc
pop
inc
fldcw
mov
pop
jmp
int3
mov
call
sbb
or
xor
popa
xchg
outsl
pop
call
cmp
js
inc
sbb
addr16
adc
add
mov
in
lds
xchg
xchg
popa
sbb
mov
fmull
mov
sbb
dec
pushf
inc
lea
lret
dec
inc
pop
std
aas
lock
jbe
rcrl
mov
xor
out
jp
popf
sbb
imul
lods
adc
repz
xchg
mov
int
sub
jb
dec
mov
xchg
mov
cmpsb
xchg
call
into
jns
adc
fdecstp
push
mov
fsubrl
add
xor
sub
cmp
aam
sub
mov
and
add
cmp
fwait
test
xchg
push
xchg
cmp
inc
dec
push
incl
inc
popf
mov
clc
into
jbe
sub
std
mov
xchg
fwait
mov
adc
rol
sub
add
jnp
sub
sbb
dec
cmc
lret
nopl
pop
sub
cmp
stos
fucomi
test
fs
out
mov
pop
ljmp
mov
lods
and
jge
and
jns
out
push
or
cmpsb
lds
mov
insl
mov
xchg
xchg
test
repz
jl
das
mov
mov
adc
sbbl
movsb
xchg
lods
pop
mov
mov
dec
in
jl
incb
shlb
testb
lods
dec
cmp
loop
int3
xor
ja
push
xchg
cmp
jae
cld
push
cmp
test
jnp
mov
les
inc
xor
sbb
dec
icebp
stos
les
loope
jbe
jo
stos
lahf
mov
call
pop
pop
pop
mov
pop
fwait
push
div
lahf
imul
pop
lcall
int3
mov
cmpsl
jb
sti
out
xor
int
xchg
xchg
rcl
cmp
outsl
lock
and
xor
leave
sti
cmp
addl
sbb
mov
test
negl
ja
add
sbb
sub
mov
mov
cmc
sahf
inc
pop
fsubrs
sarb
ja
sbb
ljmp
test
arpl
inc
jne
lcall
xor
mov
xchg
gs
dec
or
fdivrs
mov
stos
ja
xchg
mov
xor
cmp
mov
push
pop
inc
nop
shlb
pusha
jo
leave
aam
mov
addr16
aad
cmp
fldl2t
je
push
dec
pop
loope
sub
lret
and
mov
loopne
mov
xor
dec
outsl
or
jb
mov
cli
stos
mov
and
mov
jne
jecxz
or
sbb
ss
es
dec
aas
fdivrs
ret
xchg
iret
stos
push
in
daa
adc
mov
fucom
adc
data16
cmp
stos
lds
pop
loope
stc
lret
dec
lods
inc
je
pop
and
loope
imul
mov
jnp
or
scas
sbb
adc
test
sti
pop
outsb
leave
xchg
sbb
or
aad
xor
dec
mov
shlb
dec
dec
pop
xor
lahf
ljmp
rorl
test
pop
pop
push
adcb
in
or
mov
movsb
inc
insb
xchg
test
pushf
mov
das
cmp
ljmp
sub
repz
clc
ret
add
push
dec
mov
stc
cld
jno
loop
pop
or
repz
leave
cmp
cmp
out
imul
push
int3
mov
add
add
fistpl
data16
dec
and
sbb
or
inc
faddp
adc
stos
pushf
mov
iret
push
icebp
cmpsl
fisubrl
jle
sbb
movsl
cltd
das
add
push
add
idivl
ficompl
std
imul
movsl
mov
jns
sti
mov
inc
popa
xchg
imul
or
and
test
insb
iret
add
xor
insb
and
pop
xlat
test
mov
scas
push
out
fists
stos
xor
js
lods
icebp
mov
xor
jp
sbb
subb
cmp
out
xor
adc
jmp
in
lret
out
cmpl
xchg
xchg
pushl
pop
lock
or
ret
pop
inc
call
stos
push
aam
movsb
mov
dec
pushw
loope
lahf
pop
sub
daa
cwtl
in
pop
sahf
ja
mov
jno
popf
xchg
imul
push
outsl
pop
loop
pop
iret
pop
mov
int
out
jae
ja
stos
inc
sahf
sub
add
call
inc
outsb
mov
pop
rcll
push
faddp
inc
jmp
cli
cld
ret
xchg
mov
dec
imul
fcmovnb
rcrb
jp
adc
in
inc
dec
push
fsubl
js
repnz
cmp
popl
xor
xor
cmp
lahf
inc
shr
lret
jbe
pusha
sub
push
mov
or
dec
add
cwtl
jg
cld
jl
popa
adc
bound
das
fstpl
push
mov
pop
add
sub
dec
arpl
std
jb
mov
mov
mov
ret
rcr
sbb
aas
add
ret
negb
insl
rorl
mov
fnstsw
fs
sub
mov
mov
stos
pop
push
fmull
inc
call
sahf
test
scas
nop
sub
shrl
adc
dec
das
fdiv
ljmp
inc
adc
mov
or
sbb
jno
mov
cmp
pop
shrb
inc
mov
inc
xchg
cli
sub
mov
sbb
adc
mov
nop
cmpb
sti
lods
in
and
dec
push
push
mov
push
mov
lods
ss
push
jae
inc
dec
cwtl
adc
imul
lods
popf
shl
pushf
jmp
mov
cmpsl
fnsave
rolb
and
fstpt
mov
popa
cli
xchg
and
fnstsw
fs
and
jo
mov
outsb
mov
xor
mov
or
jno
scas
mov
adc
cmp
xorb
out
cmpsl
inc
push
dec
hlt
call
loopne
stc
xchg
lret
or
mov
mov
into
jge
push
xor
lret
sub
test
and
pusha
ret
adc
push
push
xchg
jecxz
outsb
loope
dec
pop
xchg
jae
sbb
or
stos
push
lahf
sbb
int
pop
cli
mov
fistl
mov
mov
push
scas
cmp
mov
cmc
xor
cs
add
neg
adc
es
mov
seta
not
dec
jbe
sub
daa
xor
lea
mov
nop
or
add
cmc
dec
pop
notb
dec
out
xchg
cwtl
popa
xor
fsubrs
mov
test
out
jg
subb
pop
xchg
mov
aas
mov
fidivrl
fucom
shr
mov
xchg
cmp
add
fmull
hlt
inc
and
aaa
popf
push
test
push
or
pop
orl
movsb
mov
mov
nop
stos
ss
call
mov
je
fnsave
imul
fwait
or
sub
cmpb
cmc
lock
mov
jmp
int3
mov
or
xor
or
sub
outsb
repnz
dec
cmp
pop
add
insl
ss
mov
inc
stc
cmc
daa
lds
or
mov
xchg
add
fdivr
dec
mov
and
pop
mov
ja
aaa
ds
pop
pop
sbb
adc
test
sub
sbb
lods
pop
or
mov
pop
ret
jo
in
pop
adc
dec
dec
aam
std
outsl
xchg
add
mov
dec
mov
or
add
nop
inc
ds
push
jl
ret
pop
xchg
xor
push
adc
mov
mov
sub
jl
xchg
push
mov
es
sbb
dec
cmpsl
call
pop
add
cmp
xor
pop
enter
xchg
sub
negb
inc
and
andb
add
cmp
jle
imul
push
cld
daa
popf
add
push
aaa
and
lds
scas
cs
inc
mov
sub
outsl
sub
cmpsl
and
inc
cltd
add
pop
repnz
mov
or
lea
jl
push
fucom
popf
in
int
arpl
jp
mov
push
insb
mov
mov
mov
pop
mov
dec
jle
xchg
sub
sti
or
das
pop
inc
mov
jno
cmpsl
adcl
roll
iret
xchg
sbb
push
loop
data16
roll
xor
hlt
shr
in
stc
imull
jge
test
shl
js
loopne
or
mov
jg
scas
sub
inc
loop
pop
inc
push
popa
movsl
xor
pusha
faddp
rolb
inc
call
jne
nop
add
out
fldenv
inc
out
mov
inc
inc
xchg
sbb
push
push
inc
dec
and
inc
jb
dec
xor
mov
in
xchg
repz
outsl
xlat
or
filds
mov
fildll
sbb
outsb
rorl
xchg
shrb
mov
clc
test
es
inc
jae
add
jo
dec
cmc
sbb
ljmp
stc
popf
jmp
ret
bound
lret
pop
daa
pushf
aam
rcl
inc
xor
mov
xchg
repnz
push
inc
sbb
rcrl
sbb
mov
cmpsb
in
push
sbb
cmpsl
and
stc
arpl
push
test
xchg
inc
pop
fistps
imul
stos
subb
test
sub
stos
mov
fdivr
xchg
mov
popa
int
mov
jns
xchg
out
pop
jg
and
mov
jo
cmp
test
mov
push
xchg
jecxz
and
jbe
push
bound
scas
mov
cmpsb
adc
repz
fldl
push
dec
insl
test
shll
or
fdivrs
cmpsb
jne
pop
jnp
and
mov
ret
mov
adc
shlb
jmp
adc
js
inc
mov
mov
mov
aaa
shrl
mov
xchg
ljmp
jp
and
jge
divb
cmpsl
mov
je
fildll
add
outsb
test
xchg
icebp
xor
in
xor
pop
sbb
aas
sbb
pop
int3
cmp
mov
lock
enter
bound
lods
test
mov
sub
in
jb
ja
std
sbb
les
loope
pop
cmpsb
pop
sbb
out
pop
aas
arpl
je
out
sub
sub
ss
mov
lahf
mov
push
jmp
stos
into
hlt
mov
loopne
loope
mov
das
cli
cmc
inc
xorb
cli
cwtl
sbb
sbb
bound
and
inc
imul
sbbl
jecxz
and
jb
push
dec
push
fisubs
or
enter
jmp
sub
jecxz
xchg
cmp
xchg
mov
inc
popa
loopne
jl
in
mov
mov
inc
mov
sbb
addr16
jns
imul
jp
cmp
mov
mov
jbe
stos
stc
pop
pop
jno
mov
lock
roll
push
adc
dec
cs
inc
jl
xor
cmp
scas
int
xchg
add
arpl
fidivs
dec
cmpsb
push
imul
jo
push
orb
cli
mov
xor
xor
or
nop
jl
add
push
out
std
les
adc
mov
mov
cltd
mov
adc
fsubr
jmp
or
mov
std
push
lret
lahf
sbb
inc
push
outsb
jb
mov
in
xchg
gs
adc
in
shlb
inc
ljmp
and
test
leave
and
call
out
mov
testb
mov
aad
mov
test
pop
jmp
sbb
pop
outsl
pop
ret
dec
mov
popf
jae
orb
sbb
adc
stos
out
jg
sbb
popa
pop
fbld
or
xor
int3
push
and
les
xor
mov
inc
adc
shl
mov
mov
jp
inc
xor
jae
push
xor
mov
mov
daa
add
jbe
daa
xor
scas
outsl
std
sbb
aad
cmp
lea
decb
inc
xchg
xchg
inc
adc
sbb
pop
and
fmuls
shll
loop
lods
mov
mov
mov
push
pop
test
and
jmp
xor
cmp
in
test
lods
mov
outsl
mov
sbb
sub
imul
mov
frstor
inc
or
out
mov
add
mov
pop
lahf
jp
adc
movsl
call
add
sub
fcoms
and
fsubr
mov
cwtl
call
cmp
dec
push
insl
int
sbb
jp
fninit
aas
addl
jno
ret
fcmove
ss
jne
sub
aam
enter
sbb
clc
mov
inc
stos
mov
inc
xor
jno
call
xchg
adc
hlt
and
pop
pushf
aaa
bound
mov
mov
out
mov
or
sub
pop
orb
ret
bound
inc
cmp
lcall
fwait
dec
sub
in
leave
movsb
stos
leave
sbb
psubsw
je
insl
xor
jnp
fisubrl
mov
into
or
gs
pusha
cmpb
stos
xchg
cmpsb
sti
outsl
xor
cmp
in
xlat
add
jle
pop
test
xchg
pop
insb
cmp
fwait
std
xchg
cwtl
sahf
dec
dec
mov
xor
pop
cmp
in
mov
and
mov
pop
aad
xor
cmp
pushf
pop
ss
sub
jbe
xchg
lret
orb
int
push
pushf
xlat
mov
jbe
stc
mov
pop
aam
flds
mov
sbb
xor
mov
outsl
out
out
enter
not
xchg
mov
pushf
inc
xor
adc
popf
outsl
aaa
pop
push
cmp
cli
adc
add
fcompl
dec
fmuls
pop
cmp
jnp
test
xchg
mov
pushf
fimuls
push
xor
sub
out
mov
int3
push
imul
and
lcall
jecxz
icebp
test
test
cs
int3
sub
sahf
dec
mov
roll
sbb
sub
cld
sbb
fmul
and
clc
arpl
mov
sub
pminsw
daa
adc
cmp
in
outsb
or
push
into
loop
mov
test
cmp
add
and
in
scas
lcall
sub
push
and
inc
push
test
sub
lea
lods
sbb
mov
inc
aad
jge
add
and
or
rcrb
or
ftst
addl
mov
cwtl
inc
dec
dec
insb
mov
out
jecxz
mov
outsb
mov
xor
add
int
pop
cmp
pushf
mov
push
je
sbb
xchg
pop
mov
inc
mov
cmp
jo
pop
push
dec
sti
xchg
lret
mov
scas
fnstsw
js
insl
push
scas
clc
mov
stc
out
push
sub
xor
lcall
out
push
repz
or
call
shrl
sub
xchg
pop
int
xor
mov
xchg
mov
mov
sbb
cmp
sti
and
or
ja
lret
push
fs
sub
rorl
add
enter
or
cwtl
aad
mov
or
mov
jno
mov
loopne
inc
push
add
ret
pop
and
icebp
imul
hlt
jle
push
sub
jno
jmp
xor
in
addr16
int3
jmp
jne
mov
rcrb
fs
cli
in
mov
jnp
fwait
scas
push
dec
iret
xor
mov
or
adc
lahf
sub
jge
pop
push
inc
push
shrb
xor
or
sub
sbb
dec
pop
and
es
test
repz
and
imul
dec
and
das
mov
mov
dec
repnz
xchg
jmp
xor
out
lds
rcl
cmp
jno
push
int
mov
add
add
fdivrl
mov
push
push
decb
pop
aas
mull
sub
int3
mov
fcomi
mov
push
repnz
sti
fsubrl
roll
and
fwait
sbb
cmp
jmp
aam
push
pop
push
and
das
add
jecxz
int3
inc
lahf
mov
cmp
add
orl
es
jge
les
sub
test
lret
in
aas
movsl
rcrl
sbbb
push
in
int3
inc
fbld
into
shr
imul
xchg
push
test
add
xor
pop
lds
xchg
icebp
sbb
nop
pop
mov
lods
es
test
fsts
insl
or
and
and
pushf
xchg
mov
cmp
mov
aad
xor
daa
and
daa
lds
and
xor
lret
cmpl
dec
cmc
add
insb
js
push
jb
and
inc
std
jb
das
insb
mov
shll
pop
mov
and
sbb
or
push
out
cltd
imul
xor
adc
lcall
inc
dec
lret
sbb
lret
push
inc
and
add
jnp
add
inc
fisttps
outsl
outsl
xor
xor
push
add
sbb
lret
mov
lds
sub
mov
enter
fidivs
pusha
mov
cwtl
cmp
outsb
jb
adc
pop
sarl
out
sub
adc
imul
mov
imulb
sub
sub
jge
loop
jp
and
pusha
mov
mov
out
roll
popa
cmp
repnz
ret
jno
jmp
in
pop
sbb
jl
or
jb
fcomp
mov
xchg
sbb
jae
sub
sub
test
es
insb
das
push
push
popf
mov
orl
pusha
adc
dec
loop
or
mov
and
dec
cmpsl
repnz
mov
adc
imul
jnp
mov
inc
xor
mov
sbb
adcb
or
cmpl
lock
rorb
add
sub
rorb
mov
or
repnz
outsl
test
xorl
jg
lret
mov
sbb
shll
add
inc
stos
add
in
mov
and
push
cmp
xchg
ss
jle
rcrb
jno
sub
pop
fistps
lahf
in
push
out
sahf
outsb
mov
notb
dec
add
push
dec
sub
lret
pusha
xchg
ljmp
nop
out
xchg
inc
sub
insb
loope
cli
mov
and
mov
add
imul
in
nop
int3
jecxz
adc
outsb
shl
xchg
out
xor
push
gs
and
je
dec
cmp
mov
sbb
fnstenv
lea
shlb
test
jg
inc
fistpll
inc
mov
jge
xchg
dec
std
loopne
icebp
out
inc
jl
pushw
pminsw
pop
pop
jmp
bound
lods
movsl
lret
pop
movsb
push
fiaddl
hlt
sbb
jnp
cs
jg
mov
pop
cmp
rol
test
and
not
xlat
dec
sbb
in
lock
lods
push
cld
js
mov
insb
xor
sarb
dec
pop
mov
xchg
aas
clc
orb
xchg
xor
mov
mov
mov
negb
in
ret
mov
pop
sarl
jnp
xor
out
lods
cld
mov
out
jecxz
cmc
sub
mov
nop
es
call
inc
repnz
mov
lock
or
sbb
sub
call
ljmp
push
nop/reserved
pop
sub
jmp
cmp
push
add
xor
outsl
mov
pop
mov
push
xor
push
pop
xchg
popl
cmp
push
mov
xchg
and
aaa
idivl
push
or
dec
xor
xor
mov
daa
das
add
and
icebp
aad
loop
pop
mov
subl
xlat
mov
fdiv
ret
push
out
pop
loop
call
cwtl
test
jno
pop
mov
mov
pop
leave
es
sbb
or
lret
push
lods
clc
roll
xchg
outsl
subl
roll
lcall
notb
pop
inc
jno
xor
xor
std
in
clc
mov
aam
xchg
fsubs
cmp
mov
in
inc
popf
outsb
lock
std
out
fidivl
jp
cwtl
xchg
stos
in
mov
jno
in
lcall
popa
cmpb
pop
xorb
lea
dec
mov
dec
pop
ret
adc
cmp
pop
and
pop
aas
imul
pop
cli
xor
loop
incl
js
test
sbb
cmp
adc
push
rcrl
out
jp
sti
jno
rolb
mov
xchg
je
iret
mov
mov
sbb
add
pop
push
push
push
arpl
cltd
add
xchg
in
and
iret
popf
sbb
cmc
outsl
xor
orb
pushf
aas
xlat
pop
icebp
dec
and
imul
call
or
into
jge
jle
dec
pop
mov
lret
xor
and
icebp
push
test
adc
mov
pop
movsb
push
mov
mov
cltd
pusha
jecxz
xor
mov
mov
test
jecxz
pop
mov
dec
outsb
sbb
cmpsl
mov
imul
enter
ljmp
adc
push
ficoms
psubusw
adc
insb
shll
pop
rcl
jns
leave
stos
or
mov
loopne
push
inc
push
hlt
jo
lcall
out
mov
into
testl
mov
lea
sub
xchg
mov
mov
cs
shrb
test
push
pop
test
popf
cltd
jnp
mov
popa
rclb
mov
add
sbb
stc
js
xchg
insl
pop
adc
mov
sub
add
pop
jbe
xor
cmp
push
loopne
mov
xchg
push
mov
dec
ds
fs
adcb
sbb
aas
rolb
add
ret
stos
push
cmpsb
pop
pushf
push
sbb
pop
pop
xchg
out
xchg
mov
enter
lea
cmpsb
dec
ja
sub
push
mov
jbe
xor
mov
add
pop
mov
pop
imul
popf
push
jns
ss
pop
and
test
jo
push
push
pop
and
lahf
das
add
pushf
dec
test
mov
cmp
jl
mov
or
movsl
aaa
fiaddl
outsl
inc
mov
sub
add
lcall
and
cltd
sahf
mov
out
xchg
andb
pop
or
sub
mov
imul
ja
push
into
mov
test
ds
test
rcrl
adc
testb
push
mov
popa
lcall
je
aaa
ret
pop
xchg
jns
loopne
xchg
shll
sbb
sub
jo
movsb
cmp
loope
mov
dec
pop
or
fldpi
int
rcrb
mov
mov
and
mov
sahf
add
nopl
sub
in
adc
xchg
push
sbb
push
mov
cmp
ror
lock
insb
sbb
inc
out
fs
and
dec
adc
mov
mov
int
ret
rcr
inc
dec
outsb
push
popa
bound
cltd
cmp
inc
inc
push
xor
cwtl
daa
xlat
les
sbb
jl
dec
add
pop
pop
sti
mov
pop
sahf
push
mov
dec
aas
in
push
push
fwait
push
sub
cli
int
cld
cltd
cmp
dec
pop
adc
shrb
pop
repnz
or
scas
xchg
icebp
xor
mov
ret
lea
cmpsl
jg
ljmp
test
pop
std
std
scas
cmp
pop
lock
call
xchg
sti
xchg
lods
addr16
mov
fisttpll
call
lcall
add
mov
cltd
lods
jp
dec
mov
aas
or
mov
lcall
aas
aaa
mov
sub
aas
push
mov
mov
jg
cmp
push
les
mov
dec
out
mov
enter
adc
lahf
lods
mov
faddp
ficoml
xadd
addl
jne
xor
subl
sarb
pop
mov
inc
es
jp
insb
mov
sbb
lds
adc
hlt
jg
inc
xchg
test
mov
mov
cmp
rol
fs
add
push
cmp
xchg
hlt
add
insb
lcall
adc
in
loope
imul
or
sahf
mov
in
and
lock
inc
xchg
inc
jg
int
pop
jne
sahf
mov
fildll
add
jne
xchg
cmp
sub
mov
push
out
lods
pop
gs
pop
and
jge
imull
jo
clc
stos
pop
add
pop
mov
shlb
bound
mov
pop
ret
aam
lahf
arpl
push
xor
xor
out
add
ficompl
pop
mov
addl
in
pushf
pop
mov
cmp
fcmovb
mov
sub
out
fildll
insl
pop
in
adc
test
and
aas
dec
add
mov
in
push
push
xchg
sahf
outsb
sub
imul
sbb
pop
in
sub
iret
es
rcl
jg
outsb
scas
je
cwtl
lds
mov
xor
push
jns
mov
dec
repnz
clc
sub
loop
jne
push
out
ds
je
push
lret
jne
jne
fucompp
outsb
lods
sbb
cltd
mov
rolb
pop
in
or
inc
movsb
iret
rolb
scas
push
xor
les
push
push
leave
jae
lret
mov
inc
cld
push
aam
adc
cmc
or
xor
ds
aas
fwait
xlat
iret
xchg
inc
adc
pop
dec
xchg
ss
fmul
inc
lds
insb
mov
icebp
sti
add
pop
lods
or
sub
cmp
mov
cld
enter
mov
jmp
add
inc
cmpsb
jge
jmp
mov
nop
mov
fsubrl
jl
incb
movsl
add
jae
inc
lods
dec
add
xchg
add
hlt
nop
mov
bound
jmp
repnz
flds
rorl
sbb
icebp
or
icebp
cmp
imul
xor
or
jb
lods
sub
add
fwait
xchg
das
cmp
outsb
lret
mov
jge
mov
in
add
ret
fidivrl
ljmp
insl
test
xlat
xchg
xchg
jle
sbb
cltd
jne
push
push
sub
cmpsl
fildl
xor
pop
lods
pop
mov
fstl
jmp
int3
adc
in
icebp
xorl
xor
and
xchg
stos
fld
jp
xor
push
and
ljmp
or
imul
lods
gs
dec
cld
pop
pop
jnp
movsl
ret
mov
inc
sti
push
add
jecxz
sub
cld
int
fimuls
mov
shll
fmull
jl,pn
pusha
inc
cltd
jl
imul
jbe
xchg
and
xchg
push
push
inc
or
add
cs
push
inc
popa
pop
rcrb
mov
je
mov
push
imul
scas
and
pop
arpl
push
ja
xor
fidivrl
test
mov
push
std
jp
cmp
shrl
cs
pop
fsubrs
adc
sbb
nop
popa
jle
xorl
int
fidivl
gs
cld
orl
add
in
fldt
mov
lods
cmp
xchg
sub
ja
scas
fwait
sub
idivl
jmp
fldt
leave
cmp
push
mov
pop
dec
rorl
dec
negl
xchg
fiaddl
sub
nop
push
mov
es
andl
pusha
add
push
sti
and
jmp
sar
mov
add
jge
out
cld
cmp
adc
aad
adc
jns
pop
aaa
bound
clc
into
mov
popf
ficoml
inc
cmp
push
arpl
or
add
out
sbb
les
adc
movsb
push
push
mov
mov
and
sbb
mov
jg
cmp
cs
mov
mov
and
dec
rcl
testl
imul
ss
sub
aam
dec
sahf
or
jg
cmp
out
cltd
xlat
pop
push
daa
mov
cvtpi2ps
xchg
mov
jp
test
jp
pop
jmp
push
ds
jns
sti
dec
push
out
repnz
inc
loope
and
loopne
push
mov
push
pushf
jl
push
fisubrs
mov
shl
sub
nop
push
pop
add
bound
icebp
and
inc
jmp
mov
and
addr16
test
mov
fisttps
mulb
add
mov
jl
cmp
loop
xchg
jmp
mov
jmp
xchg
stos
pop
inc
loop
or
or
inc
stc
mov
push
jmp
mov
scas
stos
xchg
push
fsubrp
push
pop
mov
xchg
xchg
inc
mov
movsl
scas
sub
test
loopne
mov
cmp
andl
mov
shrl
test
push
loop
lock
cmp
dec
shl
mov
andb
mov
aas
and
movsl
nop
clc
lock
fldl
lahf
adc
setno
popa
icebp
or
xchg
sbb
int3
lods
or
repz
mov
cmp
xor
push
and
lea
cld
sarb
xor
popf
push
cmpsb
adc
scas
mov
addr16
fimuls
jae
sub
adc
lret
adc
scas
cmp
outsl
repz
adc
push
jbe
sbb
mov
mov
fwait
je
cltd
cmp
outsl
sti
popa
cli
dec
pop
xchg
push
add
stos
outsl
aas
hlt
cli
add
in
fcompl
fildll
or
sub
stos
popf
loope
push
xorb
std
push
sahf
jnp
xchg
clc
xchg
ds
movsl
fwait
xchg
int3
xor
ffreep
shll
negl
pushf
movsb
cmpsl
xor
iret
lret
mov
cmp
mov
dec
pop
int3
adc
ret
sub
jnp
pop
mov
add
clc
add
inc
and
cwtl
push
dec
dec
ret
sbb
pop
in
dec
pop
sbb
jecxz
xor
mov
orb
pop
cmp
cmpsb
ret
dec
jno
and
fcom
mov
scas
fs
push
repz
jge
push
les
xor
inc
adc
and
and
pop
icebp
outsb
into
test
loope
push
add
fldl
ja
xchg
jecxz
xchg
dec
xchg
jg
popa
sub
outsl
sbb
or
popa
xchg
push
std
sub
test
sub
dec
add
push
push
jb
roll
jl
mov
jno
cmp
jnp
add
std
arpl
ffree
lods
adc
adc
dec
daa
hlt
inc
das
cmp
fdivs
jp
repnz
jae
dec
jns
shlb
dec
pop
out
inc
jl
xchg
test
sbb
outsl
mov
push
push
std
out
mov
adc
repz
in
test
cmpb
inc
inc
pop
shlb
jmp
jne
xlat
mov
dec
mov
stos
popa
dec
push
fidivl
jp
pop
roll
ret
sbb
jbe
loopne
lods
mov
sub
add
xor
cmovs
xchg
sub
xor
sbb
or
repnz
pop
sbb
lock
cmp
jae
popf
push
push
imul
rcll
mov
push
lods
mov
int
stc
dec
xor
es
inc
lahf
mov
je
gs
xor
cli
jle
cmc
rorb
fadd
aam
fcmovb
mov
cmp
pushf
sbb
std
sbb
xchg
cmpsl
mov
sbb
xchg
push
daa
iret
aaa
fldenv
pusha
push
rorb
movsb
and
scas
mov
or
lods
leave
or
mov
dec
test
inc
pop
fwait
add
jg
push
xor
cmp
stos
movsb
out
cmp
add
loope
push
les
adc
jp
faddl
or
or
push
jl
sbb
sbb
cld
ja
xlat
fimull
dec
inc
jecxz
lret
mov
mov
sub
out
ljmp
lcall
mov
xchg
xchg
mov
inc
adc
in
mov
idivb
xor
in
and
testl
rolb
fisubs
xchg
dec
sbbb
xor
shll
mov
pop
pop
mov
enter
test
pop
and
push
sarl
lcall
push
daa
imul
dec
testb
pop
cmp
into
pop
cmp
mov
jnp
inc
xor
and
leave
fbld
ljmp
shlb
ret
fiaddl
mov
jno
jae
data16
push
mov
andl
iret
cmp
popa
adc
lret
adc
jmp
test
jmp
xchg
and
mov
ret
inc
jno
push
hlt
mov
push
notb
push
push
rorb
int3
loopne
mov
leave
test
mov
sub
out
mov
mov
and
pop
jmp
and
pushf
int3
loop
adc
ja
sub
in
sbb
int3
push
fldcw
xchg
rcll
adc
pushf
jmp
and
inc
cmp
repnz
jb
jno
mov
lret
push
out
sar
lret
add
ret
push
dec
sarb
xchg
andb
xchg
pusha
aad
int3
ja
push
adc
movsl
xchg
dec
rclb
in
cmp
ljmp
fcomip
adc
insb
stos
out
aad
sbb
movsl
or
pop
rorl
inc
test
sub
fucomi
mov
adc
js
test
xor
idivl
stos
xorb
movsl
xor
mov
sahf
mov
lahf
movsl
xor
fbstp
pop
or
loope
pop
cltd
fnsave
loope
lods
loopne
push
sub
divl
stos
insl
add
cmpsb
inc
lahf
ljmp
leave
or
xor
arpl
sahf
mov
push
dec
cs
dec
fnsave
loope
test
inc
fsubrl
popa
adc
inc
rcrl
inc
sahf
addr16
outsb
pop
inc
mov
ljmp
stos
pusha
xor
std
notb
mov
jbe
xchg
lds
or
add
xchg
pushf
dec
cwtl
mov
nop
clc
cli
dec
rolb
stos
sub
dec
and
push
cltd
stc
mov
push
pop
mov
fadd
push
test
xlat
push
mov
mov
and
hlt
mov
ud0
and
dec
push
fsts
pusha
and
imul
cs
int
mov
xchg
in
jp
cmpsl
add
and
test
ljmp
arpl
insl
xor
push
pop
and
movb
jo
lods
loop
test
ficomps
pop
loop
movsl
fildl
sub
inc
int3
jmp
rclb
sbb
test
outsb
and
jg
sarl
lcall
cmp
mov
addb
std
addl
test
xchg
hlt
mov
xchg
add
inc
pop
xor
js
imul
xchg
sub
pop
mov
or
xchg
jge,pt
sbb
movsb
lret
rorl
je
sbb
pop
shlb
clc
test
stos
jecxz
repz
enter
sub
inc
frstor
cmp
push
mov
scas
lcall
mov
repz
xchg
add
faddl
inc
cmc
imul
mov
fwait
out
pop
inc
inc
inc
mov
or
inc
xchg
jb
mov
jae
test
and
frstor
mov
cmc
mov
movsl
or
inc
scas
out
push
jbe
pop
imull
push
inc
xchg
out
cld
mov
in
pushf
sub
ret
call
adc
scas
jecxz
mov
xchg
and
sub
les
dec
mov
lock
jo
cmp
cmpsb
fidivrs
into
or
push
test
in
cwtl
pop
das
sbb
adc
lds
gs
mov
fisubrl
dec
mov
or
leave
cmp
jns
cmc
or
in
arpl
pop
aam
dec
push
cmp
jle
cmp
inc
adc
jne
stos
sarl
test
dec
sti
push
lea
or
lahf
cmp
mov
int
fucomi
push
mov
or
pushf
imulb
push
out
sub
push
inc
mov
inc
outsb
rolb
cmpsl
jge
fcmovb
sub
mov
fwait
cltd
jl
fistpl
rol
addb
cmp
inc
call
jnp
ret
xlat
jmp
cmp
mov
and
adc
cmp
dec
push
lcall
mov
jp
jns
inc
xchg
test
mov
shll
loopne
fstps
rol
cmp
mov
cmc
add
xor
repz
out
jns
adc
enter
jbe
cmc
loop
mov
repz
fnstenv
xchg
add
dec
adc
add
xchg
arpl
pop
xorl
push
sbb
in
ljmp
aam
sub
xchg
jo
test
call
pop
loope
or
adc
clc
shll
mov
ret
data16
and
pop
mov
repz
jnp
ds
and
lret
mov
mov
xor
dec
fmul
out
in
ds
or
ret
sub
ja
jo
mov
mov
mov
fsts
aaa
gs
and
iret
xchg
int
or
fwait
push
ficoms
pop
cmp
adc
rcr
mov
xor
dec
aaa
cs
xor
cmp
inc
test
add
rolb
imull
inc
and
cli
movsb
shrb
sbb
mov
dec
iret
mov
icebp
loop
dec
aad
mov
addr16
jb
push
mov
adc
xor
rcll
pop
out
and
int
call
jge
divl
push
add
pop
add
mov
enter
or
mov
ss
pop
pop
pop
fwait
nop
leave
xchg
fldenv
xchg
push
outsb
adc
movsl
sbb
cmc
dec
push
add
xor
leave
add
xchg
movsl
xor
add
mov
aas
dec
inc
add
int3
in
mov
sub
pop
hlt
ret
int
and
mov
orb
bound
xchg
sub
add
cmp
add
sahf
mov
js
sub
cs
ljmp
nop
mov
dec
and
cmp
aad
dec
lret
xchg
jl
fmull
fsubrs
jne
jecxz
push
leave
pop
cld
mov
pop
cld
fucomip
xor
add
andb
xchg
push
mov
nop
adc
das
je
lret
adc
std
inc
cmp
aas
jb
pop
test
xor
gs
adc
cld
adc
dec
inc
pushf
mov
gs
jnp
adc
subl
rdpmc
push
and
cmp
dec
pop
nop
aaa
pop
fidivrl
xlat
jecxz
dec
push
xchg
test
aam
add
enter
mov
mov
adc
test
pop
pop
adc
fistpl
inc
outsb
dec
sub
out
add
cmp
aaa
mov
mov
push
sti
out
enter
divl
iret
jns
sbb
xchg
stc
imul
daa
cmc
sub
popa
adc
test
call
jp
and
adc
xchg
jb
jbe
sub
cmpsb
cld
mov
les
jecxz
movsl
xlat
and
xchg
adc
dec
sub
mov
movsl
xor
sub
pop
lds
leave
popa
cli
adc
mov
lahf
repnz
push
and
or
out
mov
xor
ds
jle
mov
or
xor
pop
enter
cmp
outsb
push
mov
testb
pop
mov
int
enter
lea
repnz
or
adcb
jo
movsb
pop
mov
movsb
jge
out
pop
lds
mov
ds
or
test
addr16
xchg
mov
shrb
jmp
add
loopne
push
mov
repz
in
mov
sub
add
mov
cmpsl
lret
xchg
adc
cmp
icebp
pop
scas
nop
xchg
das
scas
pop
loopne
xor
stos
jbe
pop
icebp
loop
jbe
nop
test
mov
aam
faddl
jae
or
xchg
xchg
adc
pop
mov
rcrb
jmp
sti
dec
dec
ror
imul
stos
jmp
data16
inc
sbb
push
xchg
stos
push
inc
mov
popf
mov
and
ret
pop
mov
and
fs
das
sub
div
push
cwtl
movsb
pop
movsl
inc
insl
add
inc
or
aaa
or
pop
sbb
mov
push
jo
fistpll
inc
add
mov
cmpsb
xchg
fwait
push
jns
or
push
xlat
jno
mov
cltd
ja
lcall
loope
mov
jne
sub
rorl
push
push
aad
in
ror
clc
in
ret
addr16
inc
cli
push
orl
jno
popa
dec
sub
in
nop
add
ds
insl
push
mov
sub
xchg
mov
inc
jae
xor
insl
mov
les
xchg
shll
fistpll
arpl
jp
out
lcall
and
icebp
sub
sarb
fs
fmull
jnp
insb
in
fcmovbe
sahf
mov
nop
je
mov
ljmp
nop
ss
sbb
xor
inc
cmp
cmp
imul
sbb
pop
rcll
mov
addl
xchg
push
jmp
cli
mov
loop
jo
xor
push
andb
lds
insl
mov
sahf
and
mov
outsb
cli
ds
ficomps
scas
or
xor
pop
lds
pop
jg
jo
andb
add
mov
push
gs
sub
addr16
inc
mov
or
xchg
pop
les
sub
push
into
or
mov
xchg
fstl
loop
lds
lock
dec
sbb
sbb
mov
les
bound
mov
int
ss
in
xchg
or
imul
test
in
xor
xor
loop
cmpsl
scas
or
dec
cmpsl
push
cld
nop
adc
nop
test
cwtl
mov
jle
ret
mov
mov
mov
jo
jge
or
adcb
jmp
sbb
repz
inc
push
jnp
push
lods
add
mov
sbb
pop
xchg
addr16
pop
cmp
xchg
fildll
mov
dec
jecxz
fs
call
dec
fucomip
ret
loop
pop
or
push
divl
fnsave
jp
out
fidivrs
testb
cld
sbb
stc
sbb
stos
jl
dec
loope
mov
inc
scas
jne
in
sbb
mov
inc
cld
push
call
fstpt
inc
addr16
daa
call
sbb
popa
push
in
pop
fstps
das
xchg
lcall
adc
sahf
xchg
flds
fstps
dec
sub
adc
add
mov
sub
cltd
mov
out
popf
fnstsw
jb
push
sbb
rcrb
outsl
lahf
push
cs
stos
jo
in
orb
and
dec
pop
stos
adc
xor
rorl
outsb
cmp
mov
adcl
pop
mov
mov
lret
dec
dec
movsl
cld
shll
pushf
std
fidivrl
std
jg
imul
psraw
ljmp
leave
dec
out
movsb
scas
cwtl
push
xor
mov
adc
jo
ror
xchg
xchg
sub
inc
aad
sahf
sub
pop
dec
inc
lods
or
and
pop
scas
enter
add
cmp
mov
gs
in
xorb
adc
adc
test
sub
data16
enter
popa
xchg
xor
flds
mov
lds
insb
or
inc
mov
mov
mov
stos
push
mov
insl
xchg
add
or
pop
lcall
repnz
loop
shlb
das
insb
adc
cmp
nop
mov
pop
xchg
push
xorl
jl
fidivl
gs
int
jae
ret
or
arpl
cli
outsb
and
xchg
pop
shll
mov
outsl
push
dec
push
arpl
jle
and
pop
add
sbb
das
aam
xor
out
nop
push
out
mov
arpl
adc
xchg
fbstp
cmp
add
mov
mov
leave
mov
cmpsl
add
iret
xor
rolb
cld
mov
shlb
mov
mov
lret
mov
loopne
mov
rorb
enter
fldt
out
push
jp
insl
xor
insl
jmp
inc
in
xchg
jae
mov
in
fmuls
or
mov
in
sahf
push
nop
fisttpll
inc
js
xchg
repz
cwtl
orl
in
femms
cmp
pop
push
dec
push
ror
add
rcrl
pop
xchg
mov
mov
and
imul
sets
popf
inc
pop
push
mov
push
push
and
iret
mov
sbb
bnd
or
dec
mov
dec
sbb
lret
rcrb
xchg
mov
in
or
je
sbb
sbb
imul
mov
bound
cmp
jecxz
imul
mov
xor
sub
inc
arpl
jmp
imul
push
push
sbbb
cli
add
aas
mov
sbb
std
inc
dec
mov
leave
lret
iret
mov
jo
mul
sbb
aas
xor
popf
or
cwtl
jp
lcall
mov
into
adc
testl
inc
loopne
push
or
mov
pop
jno,pn
imul
mov
push
push
cmpsl
xchg
outsl
int3
push
add
pop
lret
mov
or
lret
ja
pop
jns
divb
repz
scas
and
repz
loop
sbbb
faddl
sahf
imul
test
ljmp
pop
iret
xchg
out
push
adc
std
ljmp
or
cmp
push
or
mov
in
test
and
cmc
adc
scas
lret
push
loope
jnp
aad
sahf
loop
jp
sbbl
push
lods
cmp
lods
int
dec
dec
cwtl
mov
out
clc
mov
jle
ja
jmp
iret
dec
and
mov
sub
enter
jp
movsb
mov
data16
clc
fildl
adc
js
jmp
cwtl
fisubrl
dec
mov
scas
or
push
sbb
mov
mov
and
sbbl
inc
movsl
jmp
dec
sub
scas
stos
sbb
call
lret
push
sub
adc
das
mov
dec
mov
gs
into
loopne
mov
gs
lods
push
push
dec
mov
push
cwtl
outsb
sbbb
mov
movsb
add
out
mov
and
call
shll
mov
mov
das
cmp
xchg
enter
fists
dec
xchg
test
sub
in
incl
xchg
mov
xor
outsl
cmp
lods
movsb
xor
mov
mov
mov
cwtl
cli
ss
stos
mov
push
ss
cmp
and
js
xchg
rorb
arpl
pop
out
xor
rcrl
jle
xor
dec
cmp
cmp
jb
push
cmp
pop
push
cmp
popf
jns
stc
fcompl
insl
inc
sbb
push
mov
cmp
lods
lods
jp
xchg
or
adc
sub
adc
ud0
in
xchg
mov
dec
shlb
scas
add
arpl
jmp
and
stos
mov
jl
into
inc
pop
nop
mov
pop
fldcw
ds
call
lcall
xor
and
mov
cmp
mov
dec
push
pop
fnsave
add
xchg
xor
mov
in
sub
cltd
leave
jne
insl
aas
lcall
cld
mov
push
jb
and
mov
cs
jg
movsl
cmp
cli
or
push
clc
adc
or
loopne
lds
and
cwtl
insl
inc
out
mov
pop
imul
popf
out
xchg
mov
repz
jae
imul
cmp
mov
mov
stc
inc
ds
cmp
pushf
jmp
ret
aad
push
add
add
mov
jns
xchg
out
rcr
cmp
das
test
pop
cmp
and
pshufw
lds
pop
mov
shrb
jbe
add
mov
cltd
xorb
pop
sbb
scas
jg
and
out
aam
lret
adc
icebp
cmpsb
imulb
dec
out
bound
cs
push
lods
sub
xor
cs
scas
scas
xlat
mov
mov
push
lret
shlb
daa
adc
xchg
mov
xor
test
loop
enter
pop
lds
pop
mov
xor
lds
ret
cmpsl
mov
jns
or
nop
mov
rcr
lds
mov
cld
rclb
test
dec
cld
rcl
es
out
icebp
into
test
push
cs
add
lret
push
insb
ljmp
int3
cmc
ljmp
popa
popf
sbbb
inc
pop
fdivl
enter
test
jae
push
push
inc
push
rorl
mov
add
shrl
mov
lahf
cld
and
pusha
and
inc
push
xlat
js
dec
ja
or
and
jle
mov
fiaddl
and
push
lods
pop
and
dec
dec
repz
sbb
xor
mov
flds
repnz
xlat
xor
cmpsb
adc
jp
or
xchg
add
inc
sbb
aad
add
mov
cmpsb
jg
cld
mov
xchg
mov
shlb
ljmp
push
ret
mov
cwtl
fstpl
mov
ja
mov
fcom
int3
sub
xchg
dec
push
sub
js
dec
pushf
mov
sahf
dec
mov
int3
push
inc
aaa
jmp
lds
jle
push
je
mov
dec
iret
fimuls
loopne
mov
xor
out
mov
fs
and
adc
lock
mov
mov
pop
leave
or
sub
sbb
cmp
add
inc
out
outsb
jbe
rcrl
imul
loopne
test
orb
cmp
or
cmp
out
add
mov
dec
fldt
jb
mov
in
jno
pop
daa
ret
mov
mul
sub
add
mov
lret
xchg
or
out
mov
imul
imul
mov
mov
cld
push
sub
dec
imul
and
insb
push
push
dec
jl
xchg
rcll
pop
and
mov
dec
jbe
sbb
sbb
and
pop
test
imul
push
push
clc
mov
lret
dec
fisubl
add
lret
xchg
add
inc
lret
jno
push
mov
push
push
xor
lahf
aad
stc
lahf
loope
cmp
xor
cmp
mov
leave
adc
mov
addr16
mov
nop
fnstcw
jg
xor
dec
lock
fmull
fistpl
jp
stos
sbb
mov
icebp
xor
lret
push
mov
fmull
out
jg
jno
ret
sbb
int3
idivl
icebp
in
mov
xor
jp
loop
add
mov
mov
xor
mov
in
adc
iret
sbb
cmc
pop
mov
ret
mov
test
and
les
ja
dec
aam
decl
mov
negb
mov
or
push
lods
add
out
pop
adcb
imul
pop
inc
sbb
leave
loope
jnp
mov
data16
xlat
xchg
mov
or
sub
imul
jge
gs
insb
cwtl
test
std
lea
out
repz
jg
negl
push
sbb
repnz
sahf
jbe
push
inc
fdivl
cli
sub
insb
scas
push
fcoms
in
test
add
jo
dec
pop
cwtl
inc
pop
or
add
lock
cs
adc
jno
jnp
repz
movsl
dec
inc
sarl
cmc
shlb
int3
jecxz
xchg
mov
and
jmp
enter
mov
jno
lret
xchg
stc
adc
xchg
ret
shll
aas
and
into
dec
sub
into
mov
or
in
adc
mov
in
cs
jg
push
sti
fnstsw
or
rorl
add
aad
or
add
test
data16
mov
add
stos
pop
stc
ret
fcmovb
gs
rcr
test
dec
add
scas
and
add
xor
in
jae
pop
dec
jb
fidivrl
inc
jne
push
push
jge
pop
dec
out
lds
aam
sub
loope
jb
add
adc
adc
and
icebp
sub
dec
clc
fadd
mov
outsb
addb
mov
imul
in
sub
dec
enter
mov
dec
sahf
out
pop
insb
aad
fs
sti
in
fs
lahf
cmp
ljmp
pop
sahf
xchg
daa
out
jno
inc
frstor
mov
push
je
add
dec
outsl
repnz
inc
imull
adc
insl
bound
and
scas
dec
pop
xor
filds
imul
push
pop
jae
ja
fidivrl
dec
mov
add
push
ja
push
dec
aaa
aas
add
pop
mov
or
pop
fwait
dec
loop
pop
lock
mov
stos
fcoms
cli
inc
data16
in
loope
outsb
xchg
cmp
into
shlb
call
sub
popf
in
sub
cmp
pop
jp
pusha
or
sarl
arpl
jno
or
jb
in
mov
lods
add
shll
pop
xor
adc
push
xor
sub
lock
mov
imul
jp
add
scas
ja
pop
fistpl
add
dec
fcomps
sbbl
add
jbe
jmp
mov
std
fwait
sbb
lcall
mov
mov
dec
cmpsb
clc
outsb
adc
je
inc
cmp
popa
ja
or
sub
cld
lds
jge
stc
pop
inc
test
push
dec
daa
xor
xor
aas
jne
push
jo
lahf
roll
subl
loope
xor
movsb
mov
dec
movsb
cmp
and
add
xlat
mov
xor
mov
es
mov
int
adc
daa
pop
sub
js
cmpsl
repnz
sbb
imul
data16
fimuls
scas
test
jae
popf
or
jl
xor
int3
inc
sbb
inc
mov
shrl
emms
jnp
and
jb
repz
ds
push
fldt
test
das
icebp
jecxz
mov
out
les
ljmp
aaa
gs
in
jg
mov
dec
push
aam
fldl
or
incb
or
mov
pop
out
jmp
cmpl
pop
es
loop
mov
mov
pop
roll
mov
cltd
mov
or
lcall
nop
dec
stos
pop
ret
outsl
sub
lock
dec
repz
into
pushf
xchg
mov
sahf
mov
dec
or
push
cmp
testl
push
stos
imul
inc
sub
mov
nop
sahf
aaa
push
mov
lea
fisubl
negb
shrb
int3
adc
movl
pop
adc
repnz
mov
and
std
or
pop
mov
mov
clc
jbe
nop
xchg
jnp
sub
ljmp
inc
inc
xor
cmp
js
pop
mov
xor
push
into
and
mov
push
in
pushf
subb
andb
div
lahf
dec
mov
mov
hlt
sbb
xlat
sbb
push
jge
test
or
inc
cmpsb
and
clc
adc
sub
jg
lcall
arpl
outsb
cs
adc
in
scas
rol
sub
fists
cmp
sbb
dec
adc
xchg
pop
push
adc
sbb
pushf
dec
ss
insb
pop
mov
dec
in
mov
pop
rorb
fadds
mov
sar
jo
push
repnz
xchg
push
inc
mov
ja
mov
or
pushf
cmp
xor
nop
leave
mov
int
cmpsb
shl
dec
int3
scas
xor
inc
and
addr16
fisubl
lahf
mov
out
dec
cmp
mov
mov
jle
lock
cmp
test
sbb
js
mov
jge
add
mov
pop
daa
ljmp
xor
adcl
add
arpl
jl
out
ffreep
test
insl
or
mov
iret
adc
fs
jge
pop
stos
cmc
push
aaa
mov
sub
pop
and
mov
insl
adc
stos
and
xchg
or
inc
inc
adc
insl
xchg
cmpsl
enter
in
xor
enter
push
sub
push
jle
test
xchg
jg
dec
lret
aam
faddl
inc
jge
shl
cmc
es
sub
push
mov
mov
mov
dec
repnz
sbb
clc
call
fisubrl
in
pop
test
or
sub
add
test
in
jns
mov
pop
cmpb
cmpsb
fsubrs
sbb
add
mov
xchg
mov
push
xchg
iret
pop
adc
or
jne
aaa
push
xchg
insl
sti
sub
cmp
cmp
sahf
push
pop
enter
lahf
jb
push
add
dec
mov
push
sub
mov
test
push
ds
imul
and
cmpsl
movsl
lret
aaa
push
je
or
or
mov
ret
mov
fwait
push
mov
add
dec
pop
mov
cmp
xchg
inc
lods
xchg
scas
sarb
cld
iret
sub
orl
and
add
nop
jbe
test
divl
int3
mov
aaa
jl
xor
xchg
push
sbb
leave
loop
movsl
pushf
cmpsb
loope
mov
mov
nop
jl
mov
popf
cmp
fwait
jecxz
std
les
xchg
cmp
flds
or
pop
out
popf
inc
in
sub
popa
inc
fs
push
out
ja
mov
orb
adc
outsb
cmp
add
pop
sub
jl
sbb
sbb
pop
pop
in
lock
xchg
stos
fbstp
insl
and
fdivl
out
push
shl
mov
mov
inc
jl
ss
pusha
inc
cmp
aad
dec
lods
cmp
sub
jg
adc
or
mov
jp
and
dec
push
ja
cld
sub
insl
xchg
cld
cmp
jno
rclb
pop
test
rcrb
xchg
cmp
add
xor
inc
pusha
push
iret
stc
fisubrs
int
and
sub
repz
popf
xchg
xchg
push
pop
aaa
xchg
jl
aaa
dec
jnp
dec
or
mov
fcom
mov
jae
aad
lods
xchg
mov
add
pop
or
push
cmpsl
rcrl
xchg
in
ret
lcall
lock
xorl
aad
add
xor
ja
and
stos
lock
push
jbe
pop
iret
pop
bnd
add
xor
add
cmc
ficoms
stos
dec
dec
mov
adc
cmp
xchg
lcall
mov
jle
das
aas
lcall
jbe
test
in
out
pop
in
repz
gs
mov
pop
paddusw
add
or
jl
push
lods
ja
mov
in
loopne
test
dec
imul
fstpt
dec
inc
sub
test
mov
push
sbb
test
lods
rcl
xor
and
je
pushf
decl
mov
push
in
cltd
cmp
gs
in
xor
mov
add
cmp
add
jl
lock
test
push
stos
lret
mov
adc
or
cmpsl
mov
push
xor
xchg
push
or
pop
adc
pusha
push
dec
lock
push
or
lea
cmp
lods
imul
cs
and
cmp
xor
dec
ret
adc
hlt
cld
mov
lds
jbe
push
jbe
or
out
dec
sahf
in
pop
cmp
push
lahf
fnsave
mov
push
lds
loop
fwait
mov
cmpsb
add
sbb
lea
mov
jne
and
add
xchg
or
push
fmuls
xor
xor
xor
mov
push
dec
movsb
sub
push
cmp
vpaddb
sbb
dec
imul
adc
jmp
fldt
mov
clc
pusha
sbb
add
mov
fistpll
inc
pop
fdivrl
test
push
pusha
mov
sahf
cltd
push
fnstsw
push
jns
aad
out
and
mov
cs
push
cmp
aaa
cs
lret
hlt
and
cmp
inc
jno,pt
out
iret
sub
mov
lods
cmp
popf
loope
js
insb
insl
decl
test
loope
xor
insb
push
ds
aam
cmpsb
lret
inc
sbb
std
sti
add
jle
mov
mov
test
cmp
pop
push
add
pop
dec
push
mov
stos
sbb
cmpsb
dec
inc
sbb
mov
adc
fidivrs
inc
and
or
imull
pop
cmp
das
in
fsub
mov
xorb
pushf
pop
mov
or
cld
addl
mov
sbb
and
xchg
add
mov
out
xchg
xchg
mov
xchg
sub
cmp
mov
push
or
in
sbb
xor
aas
push
aas
xor
stos
or
adc
sub
xorl
lds
or
push
inc
cwtl
das
addl
clc
ja
adc
sbb
xorl
dec
in
cwtl
mov
in
sbb
mov
out
or
or
mov
loope
sub
ret
xor
add
outsl
pop
mov
mov
call
jmp
mov
mov
outsl
ja
or
negl
add
xchg
push
sti
inc
adcl
dec
in
jmp
and
sub
arpl
push
icebp
dec
inc
add
dec
mov
mov
and
ja
fcmovbe
cmpsl
inc
fcomi
outsl
or
mov
into
xchg
push
dec
adc
movl
xchg
ja
or
imul
in
test
js
iret
mov
xchg
pop
out
daa
out
sti
jns
push
outsb
xchg
adc
push
mov
pop
pop
loopne
inc
push
repnz
cmove
lea
fwait
pop
adc
inc
stos
fsubl
loope
pop
mov
outsb
xchg
fs
push
popf
or
push
ficomps
int
mov
int
test
gs
in
daa
or
jb
addr16
and
das
pushf
movsb
xchg
out
pop
stos
push
mov
dec
lret
pop
inc
jnp
sarl
sbb
arpl
aaa
adcl
scas
popa
jle
lret
shll
cltd
mov
fsubrs
push
lods
loop
push
mov
mov
pop
lods
out
arpl
adc
addr16
gs
mov
pushf
leave
add
xor
mov
aas
mov
pop
sbb
cmp
ret
add
fisubrl
dec
mov
jl
mov
cmp
stc
push
pop
test
movsb
cs
push
aaa
or
fcmovnbe
fisubs
lahf
ss
shlb
add
outsl
divl
mov
mov
fisubl
mov
push
push
dec
loopne
dec
or
sbb
sbb
mov
inc
add
cmc
popf
or
into
xor
lahf
cmp
mov
xchg
shl
and
or
xor
xchg
sub
jle
mov
lahf
and
out
xchg
out
jg
lds
inc
add
add
insl
xchg
movsl
and
push
push
pop
scas
loope
fsubrs
cmp
sbb
mov
add
cli
xor
cmp
scas
adcl
fnstsw
shl
aam
mov
clc
mov
push
or
insl
adc
leave
push
ljmp
jge
push
dec
shll
sub
sti
in
in
out
cmpsb
add
test
push
push
pusha
add
mov
and
mov
add
jo
mov
ja
fdivr
xchg
dec
setbe
inc
nop
cld
rorb
leave
cld
insb
jo
lods
fidivl
push
mov
lret
das
aaa
les
pop
dec
jp
push
ficoml
jnp
dec
cmpsb
fsubrs
scas
push
adc
mov
add
push
xchg
sub
and
sub
sbb
sub
mov
mov
or
rorl
cmpsb
rcll
js
push
in
or
data16
pop
popa
insl
mov
fimuls
rcrl
push
out
and
and
les
hlt
jl
and
hlt
insl
xor
in
int3
xchg
adc
lahf
sub
aaa
jns
push
js
xor
and
fbstp
adc
pushf
nop
pop
jecxz
adc
lret
fs
jecxz
cmpsl
ret
add
pushf
jge
jp
dec
scas
outsl
daa
cmpl
mov
xchg
mov
jnp
xchg
in
fsubs
mov
hlt
bound
lcall
incl
adc
ret
jge
mov
inc
pop
adc
in
into
and
xor
ljmp
push
or
repnz
xchg
shll
frstor
ret
xchg
lock
mov
sti
mov
sahf
pop
xchg
fisttps
mov
cmc
xor
out
aaa
mov
test
mov
aad
movb
cmp
shll
out
cs
repnz
cmpsl
movsl
shll
fwait
inc
ss
jmp
ret
fwait
push
and
insl
push
and
mov
pop
mov
sub
cs
push
sbb
push
pop
pushf
orl
inc
cs
and
into
push
fisttpll
adc
mov
cmc
je
iret
fidivl
mov
pop
push
dec
mov
xor
fs
and
mov
cmp
mov
rcr
or
and
cld
jns
pop
rorl
cmpb
lret
and
es
fbld
push
cltd
daa
test
test
fadds
jle
outsl
shrb
and
xor
std
add
jo
testb
stos
mov
outsl
cwtl
mov
pusha
xor
inc
xor
sbb
sub
dec
adc
cs
push
and
pop
outsl
notl
push
fcmovnb
fadd
dec
lock
test
or
das
jecxz
div
xchg
mov
xchg
or
and
jmp
cmp
cmp
outsl
and
ret
dec
in
jecxz
mov
les
mov
cwtl
inc
in
sub
test
push
mov
jmp
pop
in
mov
xor
pop
repz
sub
and
daa
jecxz
fsubrl
ljmp
adc
lcall
out
xlat
jle
je
cmp
xor
adc
jecxz
cmp
mov
pop
xor
mov
fwait
or
push
push
fsubr
jns
mov
cmp
cmc
add
in
out
fisttpll
xchg
dec
inc
ret
xchg
sbb
mov
jmp
add
div
inc
adc
sbb
into
xor
cmp
adc
lahf
stos
xlat
adc
test
fildll
imul
in
imul
iret
cs
mov
popf
push
sti
xor
sarl
enter
pusha
add
cmpsb
int
cld
push
lret
cmpsl
sahf
push
fld
imul
int
lahf
int
shlb
cmc
dec
push
add
testl
inc
imul
sub
in
mov
jp
xor
rclb
pop
xchg
pop
pop
cmp
movsb
jne
jge
inc
mov
jnp
mov
sbb
sbb
or
popa
mov
push
jae
pop
fiadds
jne
cmpsl
testb
mov
icebp
pusha
push
fwait
test
ret
js
mov
ljmp
add
ffree
jbe
fdiv
sbbb
loop
dec
out
push
insb
aas
icebp
push
sub
pop
ffree
pop
push
fisubrs
stc
sub
sub
fisttps
mov
mov
xchg
fs
cmp
aaa
je
loop
mov
add
nop
fidivs
subb
xchg
mov
pop
pavgb
jp
mov
scas
pop
cmp
adc
xchg
xchg
jmp
pop
bound
sahf
mov
addb
or
mov
loop
mov
rcrb
ret
mov
push
pop
cmc
out
cmp
mov
push
cmpsb
jb
jle
rorb
push
mov
shlb
hlt
and
dec
jge
shrb
inc
outsb
addr16
cltd
aad
jo
or
popf
xchg
lds
adc
stos
push
mov
out
push
fistpll
cmp
cmp
ja
mov
xchg
dec
and
test
out
adc
and
pop
orl
in
lahf
dec
jp
push
sbb
pushf
mov
int
push
mov
lret
sbb
inc
add
pop
push
sub
and
sub
js
jcxz
and
in
testl
adc
mov
imul
add
inc
pop
mov
jnp
enter
fbld
filds
pushl
out
imul
mov
imul
out
insl
mov
lock
sbb
push
mov
test
stos
sub
sub
mov
repz
push
adc
xor
mov
dec
jle
andl
lock
mov
sbb
lods
inc
stc
jmp
jecxz
push
jne
xchg
cli
add
addr16
ret
xchg
stos
dec
fisubl
out
addb
jae
xlat
mov
or
hlt
insl
pop
and
lret
ss
nop
xchg
pop
lods
mov
or
pop
out
cmp
mov
adc
test
jecxz
jle
pushf
test
add
xor
adc
mov
sub
mov
testb
sti
pop
sbb
push
stos
add
jg
out
xchg
movb
inc
repz
test
add
xchg
fs
cmp
imul
jo
addr16
das
sub
mov
push
call
cmp
or
mov
orl
mov
xor
mov
push
add
lahf
xor
jae
sub
mov
iret
dec
add
sub
loop
inc
stos
lods
dec
mull
jp
pop
push
test
adc
pusha
mov
and
jo
cltd
mov
jbe
mov
or
mov
mov
insl
fldenv
mov
push
arpl
jb
xchg
mov
mov
jl
andl
sbb
repnz
int
or
dec
mov
ret
pop
xchg
pushf
stos
sbb
adc
sti
mov
mov
ret
sbb
int
fwait
cwtl
fnsave
dec
mov
out
lret
and
call
movsl
push
inc
test
mov
mov
mov
movsb
push
or
mov
mov
pop
sbb
rclb
mov
xchg
imul
fwait
and
js
aad
int
test
mov
aaa
lock
inc
add
push
shll
mov
xchg
clc
aam
push
cmpsb
add
jb
pop
sbb
mov
mov
rorb
sarb
rorb
fsts
mov
pop
xor
fmuls
outsl
idivb
mov
loop
add
add
push
repnz
xchg
jne
idiv
add
cwtl
lods
fidivs
cs
mov
lods
pop
and
sbb
mov
xchg
xchg
push
in
lcall
rcrb
fistl
mov
jge
cmpsl
or
arpl
into
adc
adc
ss
cld
mov
movsb
test
jno
cmp
push
sbb
push
jmp
stos
stc
jecxz
jb
add
ja
mov
sbb
mov
jae
inc
and
lahf
mov
inc
adc
js,pt
fisubl
pushf
jle
lahf
dec
cmp
push
add
fldt
pop
add
nop
pushf
fs
lock
push
inc
adc
fbld
pushf
xor
out
test
and
jl
add
fildl
push
push
or
pop
pop
mov
mov
mov
cmp
add
add
call
mov
pop
das
mov
adc
push
aam
outsl
and
cmp
or
mov
adc
and
insb
outsl
sub
je,pt
sbb
cmp
scas
fcom
aad
jno
inc
pop
subb
sbb
pop
jns
repnz
pop
fsubl
sub
cs
sub
insb
push
jecxz
stos
xchg
mov
imul
or
pop
sub
adcb
loopne
cld
add
xchg
adc
mov
jo
ss
shll
mov
jo
and
xor
mov
addps
inc
xchg
mov
movsb
or
cmp
xchg
pop
push
ficoml
jp
cld
adc
push
and
in
push
in
dec
xor
fwait
ljmp
adc
aas
aam
and
mov
rclb
hlt
repnz
loope
pop
pusha
push
sbb
inc
dec
int
enter
lahf
jnp
mov
pop
arpl
adc
push
or
leave
dec
ret
fstps
stos
or
call
sbb
mull
add
sub
pop
js
testl
sbb
test
repnz
testl
sub
sub
mov
pop
mov
in
into
mov
mov
out
lret
and
adc
inc
cmpsb
xchg
shlb
ficompl
ficoml
stos
dec
pop
aam
repnz
rorl
or
and
sti
rol
rorl
sub
pop
jae
daa
push
out
mov
call
push
lret
jge
cmpsb
xor
dec
loop
mov
test
cltd
enter
jmp
inc
daa
and
stos
mov
outsl
sub
stos
dec
jg
decl
in
insb
xor
xor
mov
push
push
lret
and
out
loop
imul
xchg
sub
xchg
enter
xor
lea
push
push
xchg
xchg
push
ret
dec
jne
fldt
adc
and
sub
in
cmp
ja
add
dec
lret
dec
scas
jns
jbe
and
push
jne
movsl
test
popw
push
cld
lock
cmp
jns
push
pop
out
xchg
mov
adc
sbb
je
pop
mov
adc
dec
pop
xor
notb
daa
xor
adc
dec
and
jmp
out
aam
mov
add
or
repnz
or
pop
fsubrl
mov
add
push
imul
jae
xorb
not
adc
mov
iret
scas
sub
daa
leave
pop
mov
outsb
bound
sub
cwtl
xor
les
mov
clc
fwait
sbb
mov
mov
adc
jl
stos
fcomps
clc
push
push
in
or
dec
xchg
rolb
das
cmpsl
insl
repnz
imulb
int
jle
sub
aad
mov
mov
inc
xchg
jl
vfrczps
xchg
mov
xor
sbb
sub
test
mov
and
mov
push
xor
sub
or
or
test
mov
inc
shrl
jg
imul
aaa
mov
subb
bound
xchg
mov
jb
inc
hlt
fmuls
mov
neg
sbb
mov
es
push
gs
js
aas
pushf
xor
jle
adc
mov
popa
jne
push
nop
dec
sti
lds
aaa
jmp
mov
int3
inc
orb
rcrl
jl
js
popa
lcall
sub
aam
loope
sub
cwtl
add
fcmovnbe
lcall
jo
mov
out
repnz
adc
jle
iret
add
rcrl
clc
stc
popf
call
test
in
fcmovnu
aaa
cltd
pop
addb
mulb
dec
mov
dec
or
cmp
inc
sub
imul
jnp
mov
ljmp
sub
cmp
loopne
add
cwtl
push
add
inc
subps
cld
sti
add
test
les
adc
push
mov
sub
ljmp
movsb
inc
cwtl
in
inc
pop
arpl
inc
js
insb
outsb
mov
push
bound
sahf
adc
mov
xor
les
mov
fdivrs
imul
fs
jns
xchg
in
paddw
mov
and
xchg
mov
pushf
push
daa
jecxz
push
jbe
in
inc
xor
test
std
in
inc
aaa
push
adc
jg
stc
in
call
sbb
dec
xchg
int
cli
mov
arpl
cmp
mov
add
int3
inc
frstor
outsb
pusha
int3
sub
nop
sti
mov
in
and
xchg
cmp
jns
ret
sbb
cmp
lea
add
cmpsl
jl
xor
or
jmp
stc
xchg
hlt
xor
cmp
or
ret
test
lods
push
inc
shl
cmp
pop
repnz
mov
bound
in
push
mov
sbb
scas
push
fimuls
out
cmp
jge
sub
lahf
mov
data16
out
push
jne
inc
loop
cmp
pop
adc
pushf
xchg
adc
pop
adc
ljmp
jno
rcr
dec
xchg
cmp
cmp
scas
dec
cmp
test
test
je
int3
shll
rcrb
mov
fs
jp
loop
repz
in
inc
inc
dec
andl
or
add
rcl
push
mov
sti
or
lcall
test
jp
mov
rol
sahf
mov
leave
clc
ds
into
push
mov
add
std
or
xor
rorl
adc
xchg
mov
mov
mov
mov
xor
shlb
dec
nop
or
push
lea
pusha
inc
fldt
jns
jno
push
mov
fisttpl
mov
jmp
xlat
pop
leave
push
insb
cmp
insb
jecxz
xor
aaa
jmp
pop
mov
push
xorl
or
pushf
xor
leave
es
push
fcoml
adc
xchg
pop
dec
cld
push
gs
test
dec
call
cmp
cmp
fdiv
stc
cmpb
mov
and
lea
std
adc
cltd
mov
pop
pop
mov
adc
pushf
inc
and
iret
sbb
pop
cmpsl
into
pushf
fcos
enter
ljmp
sub
xchg
jns
push
lods
lret
divl
sub
gs
test
stos
aaa
add
mov
add
pushf
push
xor
adc
loop,pn
jmp
pop
addb
flds
pop
test
popa
in
cs
add
cwtl
test
clc
ret
pop
mov
dec
push
jge
inc
cmc
cmp
into
cmp
mov
cli
or
or
xor
in
and
and
es
dec
mov
sbb
sbb
pop
pop
or
add
sarl
shl
lods
cmp
pop
dec
xchg
mov
stc
xor
or
xchg
mov
push
xchg
mov
lock
and
lret
icebp
jge
jae
xchg
mov
mov
mov
mov
bound
scas
scas
push
fsubrp
pop
shll
add
jle
fidivrs
xchg
pop
jb
sahf
adc
and
push
inc
shl
movl
cmp
stos
dec
cli
jl
js
outsb
outsb
out
jne
pop
inc
sarb
popa
inc
aad
mov
xchg
push
cmp
xor
imul
jl
shrw
sbb
xchg
mov
mov
daa
ret
mov
add
mov
shlb
sbb
cmp
cli
xchg
and
mov
mov
arpl
pushf
push
push
enter
out
pop
sub
adc
lods
mov
jo
jb
push
mov
jbe
out
mov
push
sbb
push
cs
outsb
dec
jecxz
nop
scas
data16
push
insl
jo
in
xchg
sub
push
cmp
push
pop
mov
test
imul
into
fadds
add
inc
pop
dec
cmp
xrelease
jmp
insl
fildl
dec
pop
pop
repz
fs
inc
call
sahf
sti
sub
jmp
mov
loop
push
js
mov
xchg
add
cmp
les
mov
push
je
fst
test
insb
inc
sbb
push
and
enter
inc
xchg
rorl
xlat
int3
fcmovnbe
insb
cmp
inc
push
lds
sub
pop
lods
pop
push
jb
mov
pop
xchg
cmp
push
jbe
addr16
ret
out
scas
push
scas
xchg
aad
xchg
push
rorb
cwtl
jae
clc
mov
sbb
push
push
pop
cmpsl
mov
scas
popf
mov
ljmp
mov
out
mov
cwtl
jmp
jecxz
or
mov
xchg
pop
dec
cmp
push
add
add
andl
loope
outsl
insb
je
insl
leave
movsb
jg
sub
pop
sub
gs
hlt
jg
inc
jle
xchg
sub
out
iret
inc
xchg
js
in
inc
push
sbbl
mov
or
xor
sub
stos
jae
ficoms
fwait
enter
loop
in
shll
adc
pusha
inc
sub
cli
js
cmp
lahf
arpl
pop
sub
push
loope
jmp
lret
pop
outsb
and
mov
movsl
jb
pop
jne
cmp
fdiv
icebp
push
mov
xor
out
ficoml
test
cmp
fcomps
mov
mov
pop
shll
jne
add
fidivl
mov
loopne
add
dec
add
mov
pop
jg
test
fcmovnbe
pop
pop
mov
enter
push
out
push
add
loop
clc
aad
das
xchg
call
je
inc
ljmp
iret
idivb
cmp
pop
jne
loope
into
cwtl
aaa
mov
cs
push
pop
mov
xchg
and
mov
sbb
out
mov
pop
or
add
push
aam
test
test
push
fildl
cli
adc
scas
xchg
popf
push
dec
loopne
pop
fisubl
lret
adc
fsubr
pushf
add
dec
sub
cmp
push
and
pop
out
xor
pop
cmc
test
lret
in
or
js
jle
adc
cmp
push
rclb
movsb
cwtl
ljmp
jae
dec
stos
in
push
add
cmpsl
push
inc
dec
dec
jge
movsl
cmp
mov
dec
pop
loope
fmull
jg
pusha
dec
add
push
sub
jbe
pushl
loopne
cwtl
mov
dec
or
into
sub
dec
lcall
mov
sub
cmp
inc
je
xor
out
cmp
adc
and
arpl
jbe
lret
shl
into
neg
jnp
jmp
add
push
cmp
out
negb
push
nop
mov
xchg
pop
mov
mov
cmp
mov
cmp
leave
xor
cmc
std
cmp
push
movsl
push
ss
data16
add
push
sub
sbb
add
xor
mov
mov
cmp
mov
adc
xor
fidivl
fs
test
inc
cld
movb
inc
xor
ret
push
cli
jecxz
mov
or
cmp
jecxz
lret
mov
jle
iret
lods
fwait
in
add
push
test
stos
xchg
and
push
mov
addr16
popl
shlb
mov
mov
mov
jle
fnstcw
mov
inc
std
mov
test
dec
out
aad
xor
icebp
scas
mov
mov
jno
loopne
sub
xor
daa
cmc
rorl
addr16
push
adc
inc
aas
mov
and
rcrb
add
popf
or
je
cltd
in
lods
daa
push
xchg
shrb
pop
fwait
dec
pop
aad
dec
add
xor
jp
mov
or
fsubs
push
repz
mov
jecxz
enter
test
push
add
adc
js
sbb
repnz
and
inc
pushf
sbb
cmc
pushf
cld
xor
sub
push
aad
push
mov
sub
xchg
and
rorl
imul
pop
dec
mov
jb
pop
sub
in
sub
mov
je
fildl
pop
pop
in
sub
mov
cmp
dec
pop
movsb
lods
js
sbb
ret
jp
fmull
mov
adc
push
or
push
push
mov
jecxz
pop
ficomps
pop
adc
out
dec
dec
sbb
lahf
sti
nop
xlat
adc
test
dec
or
xchg
push
popa
pop
mov
dec
mov
ficomps
dec
nop
gs
push
mov
lret
dec
pop
fcomps
sbb
adc
xor
imulb
add
insl
pop
adc
xchg
dec
sbb
jne
xorb
nop
leave
push
dec
sub
fisttps
push
das
inc
jp
and
in
aas
loopne
add
xchg
movsb
je
mov
push
fsqrt
cmp
enter
in
cltd
inc
fisttps
out
scas
rcl
xchg
jmp
jae
icebp
mov
notl
scas
fisubl
stc
and
iret
es
jl
dec
js
mov
inc
xchg
dec
out
in
inc
jmp
ret
aad
lret
icebp
jl
mov
icebp
rclw
ficoml
jns
dec
aad
shl
sub
cmp
enter
aas
ljmp
arpl
inc
in
xlat
mov
jns
in
sub
mov
int
lret
outsb
out
addr16
jne
cmp
adc
pop
aam
ds
fnstsw
jnp
pop
mov
ljmp
pop
repnz
adc
jnp
mov
lret
sahf
inc
je
inc
push
push
push
mov
push
pusha
xor
les
sub
cmp
cmp
cwtl
outsb
cmp
mov
dec
or
cld
pop
repnz
xor
fmuls
jbe
aaa
fnstcw
fidivrs
repz
xor
and
and
lds
sti
sub
nop
lods
mov
sub
jbe
test
sbb
int
cld
insb
and
jle
jmp
mov
push
mov
roll
je
mov
sbb
dec
mov
or
or
and
add
and
loop
inc
out
clc
mov
testl
or
mov
fldt
push
and
lret
jg
sbb
scas
bswap
popa
sbb
push
jns
mov
sarb
movsl
arpl
add
xchg
or
xchg
cltd
push
sbb
xor
jae
adc
xor
rolb
mov
loopne
ja
mov
sbb
lea
mov
pop
subb
pop
outsl
pop
mov
mov
fildll
fisubl
scas
pushf
pop
iret
adc
xchg
and
push
push
rcl
cltd
fsts
outsl
jl
std
push
jge
jge
push
or
add
lods
dec
out
stos
imul
pop
nop
and
xor
or
ret
rorl
ret
push
add
jo
add
pop
lret
mov
xchg
xchg
add
cmp
nop
sub
lcall
and
fcoml
inc
pop
cmp
mov
aam
stos
lahf
pusha
out
movsl
sub
out
adc
dec
mov
dec
mov
mov
rcrb
or
xor
jmp
dec
clc
mov
call
and
add
sub
stc
loopne
mov
loope
repz
call
push
cmp
popf
xor
dec
outsl
and
mov
fwait
push
jge
push
aaa
in
and
cli
cmp
sbb
repz
cmpsb
test
jae
pop
push
outsl
and
notb
cld
clc
icebp
bswap
push
and
ret
jb
cmpl
sub
xlat
lea
and
repz
test
cmp
cld
jg
outsl
and
cmp
es
inc
bound
out
movsl
or
repnz
ja
jge
ds
inc
pop
add
idivl
test
sbb
add
call
add
div
icebp
hlt
xchg
pushf
cwtl
push
lahf
enter
pop
jl
mov
int
adc
xchg
mov
push
push
ss
jle
rolb
je
std
xchg
jmp
addr16
mov
test
in
xchg
cwtl
imul
sbb
sbb
pop
jg
int3
sbb
addr16
js
mov
lock
pop
xchg
in
push
mov
call
inc
push
xchg
mov
sub
pop
imul
out
nop
loopne
mov
cld
jne
fldl
cli
repz
lock
push
fcomip
mov
and
and
imul
cmp
cmp
shll
aas
mov
addr16
repz
xchg
and
rep
pslld
cltd
adcl
std
mov
sbb
insl
inc
inc
movsb
daa
jne
cltd
imull
xchg
es
out
jo
cmpsl
out
inc
cmp
iret
pop
inc
jb
mov
pop
dec
dec
popf
xchg
int3
into
daa
sub
cli
lret
frstor
pop
and
sti
mov
outsb
xor
mov
inc
call
scas
adc
sarb
fld
cld
scas
or
mov
or
add
subl
call
mov
pop
jno
test
jecxz
cmp
adc
mov
daa
and
jg
lcall
cmpsb
movsl
shr
out
dec
pop
lret
jae
push
push
jge
movsb
or
mov
xchg
stos
inc
fwait
gs
add
movsl
mov
pop
xor
dec
fdiv
jmp
inc
dec
frstor
cmc
xor
arpl
int3
popa
andl
insb
add
je
xchg
iret
and
xchg
add
xchg
cmp
inc
ja
jns
popf
inc
lahf
inc
dec
movsl
lock
cmp
pop
xor
lds
xor
mov
cmp
adc
jo
testb
addr16
pop
sbb
mov
pop
repnz
pop
lods
enter
push
into
jnp
sbb
sbb
cltd
add
ret
outsl
pop
test
or
cmc
ret
jge
stc
aaa
scas
pop
mov
jmp
push
jmp
shrl
dec
xor
nop
and
addr16
sub
pop
jle
ds
and
xchg
in
aad
add
aaa
add
pop
jnp
das
imul
je
int3
dec
in
xchg
ja
pop
orl
push
lock
sub
cmp
clc
jbe
xchg
cmp
jb
mov
xchg
mov
add
aaa
jbe
jmp
push
es
and
out
ss
jecxz
or
cli
inc
les
fildl
dec
int
jae
xlat
xchg
adc
sub
lods
jns
cltd
cmp
mov
sbb
push
inc
insb
pop
rcl
sbb
roll
sbb
test
aam
stc
fcoml
jo
xchg
mov
pop
dec
cmpsb
cwtl
and
adc
jnp
inc
cmpsl
xor
popl
in
inc
popf
in
fsubs
mov
jnp
frstor
sbb
push
flds
lahf
cmp
cmp
adc
shlb
xlat
dec
test
jns
das
lock
jp
mov
or
adc
clc
lock
mov
scas
adc
mov
pop
inc
or
jo
cmc
into
jne
dec
test
mov
pusha
push
and
inc
inc
data16
andl
jne
pop
mov
push
leave
xchg
je
mov
push
sarl
stc
mov
push
lods
cmp
cmp
mov
xor
jmp
cmp
stos
ret
cwtl
repz
lods
or
cmp
xchg
inc
ret
arpl
pop
test
mov
aam
fnstsw
adc
lret
jmp
or
push
fwait
ret
mov
pop
sbb
aaa
das
adc
aas
jbe
pop
adc
adc
add
push
jl
pop
sub
test
mov
outsl
pop
push
xor
push
cld
les
pop
outsl
mov
std
negb
and
ficomps
int3
xor
jecxz
out
into
hlt
test
das
cmpl
adc
setnp
aaa
jae
popa
mov
aam
add
cmp
lock
incl
inc
pop
adc
add
jge
pop
pop
mov
xor
int
pop
cmp
add
subl
xlat
popa
sub
popa
inc
hlt
mov
outsl
fdivrs
jbe
scas
pop
shrb
subb
push
movsl
cmpsl
frstor
pop
inc
cmp
les
sub
dec
mov
pop
or
mov
or
and
test
ret
pop
jle
xchg
and
scas
insb
pushf
jge
in
and
adc
aad
repz
xchg
cld
and
outsb
cmp
mov
mov
cmp
fnstenv
mov
outsl
mov
fists
out
movsb
mov
ret
mov
divl
xadd
mov
in
xlat
in
adcb
sti
or
sub
sarb
fwait
imul
xor
xchg
shl
pop
push
mov
out
add
jge
fldt
xor
roll
fcmovnbe
nop
ret
xor
jne
cmp
xor
nop
aad
js
cli
insl
push
insb
jnp
xchg
dec
sahf
fisttpl
add
xlat
loopne
popa
in
dec
sbb
push
push
push
sbb
jmp
jp
cwtl
jnp
pushf
lea
outsb
mov
mov
mov
push
cmpl
aas
sbb
clc
out
mov
cmp
imul
in
lret
xchg
hlt
pop
lcall
mov
pop
jecxz
push
in
cmc
scas
push
lds
mov
cmpsl
popf
dec
outsb
sub
pusha
xchg
pop
push
xor
clc
and
shll
sarl
add
push
lret
daa
jg
jg
inc
idivb
mov
sarb
jg
orb
sub
stc
insl
daa
xchg
mov
mov
or
jae
mov
mov
int3
icebp
repnz
clc
mov
inc
aas
mul
loopne
pop
or
push
mov
pop
sub
add
add
into
lea
cmpb
or
int3
scas
imul
adc
data16
add
xchg
jg
outsb
gs
scas
sub
cltd
lods
outsl
jle
mov
sahf
fists
and
ja
cltd
jg
hlt
xor
loope
shl
fs
fistps
bound
cld
inc
addb
test
fidivl
addb
sbb
mov
xchg
inc
mov
mov
inc
ds
movsb
out
push
movsl
clc
fs
sub
sbb
or
sub
jl
adc
inc
xchg
pop
jb
test
add
and
fucom
mov
loopne
jmp
push
pop
adc
mov
adc
mov
les
in
into
outsl
xor
shlb
xchg
dec
sbb
pop
dec
sbb
push
lock
jo
push
adc
xchg
lret
es
mov
push
xchg
enter
cli
mov
rcrb
xchg
add
lret
jnp
mov
inc
test
push
jae
imul
add
cld
sbb
filds
scas
cmp
or
xchg
push
jl
add
mov
jb
mov
repnz
dec
add
sub
js
adc
icebp
xor
jmp
jo
ret
xchg
scas
inc
fisubrs
cmpsw
push
mov
dec
and
lret
jmp
push
or
mov
test
pop
daa
xchg
push
nop
ss
cmp
pop
lods
add
sbb
repnz
insl
mov
movsb
in
cwtl
data16
push
sbb
xor
jmp
fcomip
sbb
andb
push
scas
repz
leave
sbb
sbb
out
shlb
mov
mov
das
mov
pop
clc
subl
insl
jg
jge
leave
cmp
mov
jne
lods
sbb
lahf
adc
mov
push
lods
push
push
xor
outsb
ret
cmpl
cmp
nop
or
and
dec
add
js
sub
lcall
xchg
sbb
adc
pop
je
mov
lahf
mov
aas
cmp
sbb
xchg
int
data16
hlt
ja
dec
jecxz
out
stc
xor
arpl
ret
dec
mov
jae
and
imul
lock
xchg
push
mov
xchg
repnz
out
jecxz
jl
les
jo
pop
lret
cmp
std
imul
sub
xor
adc
jl
jo
inc
loop
xchg
push
fdivs
lcall
setl
lret
jge
sub
or
int3
mov
inc
ss
and
adc
sub
fsubl
loopne
push
dec
rcrb
jae
jae
xor
hlt
aam
mov
pop
in
lahf
cmp
loopne
shll
jle
inc
mov
inc
test
push
pop
dec
insl
mov
dec
mov
into
outsb
mov
sbb
mov
jae
dec
das
fnstsw
pop
or
les
aas
adc
ljmp
imull
sub
jb
mov
xchg
mov
xchg
mov
mov
repnz
aad
icebp
out
fbstp
aas
test
cld
mov
pop
inc
in
pop
push
mov
jle
dec
pop
cmp
rcl
pusha
pop
jp
test
adc
mov
leavew
xchg
jb
popf
into
fstl
add
stos
popf
jecxz
jmp
fistps
inc
test
jnp
dec
fildll
fdivl
sar
test
out
cmp
stos
adc
insb
mov
call
icebp
push
movsb
in
arpl
sub
sub
idiv
lret
iret
adc
outsb
lods
ljmp
lods
inc
jbe
pop
insb
push
pop
mull
jg
js
adc
dec
hlt
fadds
xlat
sub
stc
mov
stos
sbb
jne
xor
imull
push
ret
bound
pop
jb
mov
cmc
and
aas
inc
stos
xchg
sbb
lret
popa
ljmp
cltd
scas
sbb
mov
push
mov
hlt
lcall
jno
cld
pop
pop
pop
gs
bound
xchg
fs
pop
das
and
lret
pop
mov
shlb
xchg
add
test
dec
in
inc
lds
jg
loope
and
jge
or
adc
sbb
jg
iret
fxch
loopne
shll
sbb
pop
mull
cltd
cmp
or
je
push
xchg
aad
into
insl
sbb
sti
cli
push
icebp
scas
mov
xorl
pop
mov
mov
cmc
addr16
adc
scas
or
adc
stos
int
addr16
inc
mov
push
xor
adc
sub
stos
xchg
mov
mov
insl
sahf
std
int
insl
adc
push
push
out
hlt
add
lea
loop
push
cmp
cmp
jns
push
leave
outsl
loop
fs
popa
mov
mov
in
ret
jns
dec
testl
xor
jle
sbb
jno
pop
sub
jle
jge
sub
lret
push
and
push
sbb
mov
jnp
xor
ljmp
inc
sub
pop
pop
data16
sarb
xchg
and
ret
xor
mov
pusha
cmp
orb
add
jl
xor
lods
pushf
ficomps
popa
dec
adc
xor
lret
test
mov
push
lods
or
sbb
fs
cmp
push
popf
xlat
test
loop
inc
xchg
mov
mov
loope
mov
loope
int
cmp
xorl
adc
pushf
jp
out
xlat
mov
cmc
dec
sbb
mov
sub
cld
mov
outsl
inc
lods
xor
lds
gs
test
dec
lods
dec
jge
fidivrl
shrb
out
xor
daa
cmc
dec
inc
adc
popf
pop
clc
into
sbb
xor
scas
mov
sbb
mov
out
popa
fdivrs
in
js
fnsave
jnp
hlt
dec
ficompl
sbb
mov
das
ret
pop
pop
ja
sbb
icebp
adc
inc
call
popl
lea
xchg
add
fmull
and
push
rorl
cwtl
cvtps2pi
test
xor
dec
loope
das
je
mov
cs
testl
js
lea
jno
jmp
xchg
loop
pop
rclb
fcmovbe
out
or
mov
mov
std
mov
xchg
ja
cltd
pop
fisttps
mov
cld
mov
pushfw
xor
out
aam
loopne
add
sub
movsl
into
push
and
and
aad
dec
jl
dec
out
rcrb
cmpb
xor
bound
sbb
dec
mov
dec
xor
dec
add
outsb
sbb
lret
inc
add
dec
inc
orb
or
aaa
cmp
repz
adc
add
mov
int
shl
lods
sub
outsl
cli
into
scas
loopne
xorl
lahf
rclb
rcll
pop
cs
out
and
push
out
cwtl
popf
adc
repnz
mov
gs
jbe
cmp
xor
fcompl
pop
insb
sbb
repnz
mov
mov
cmp
jae
fs
pop
mov
int
pop
add
add
iret
cld
jp
add
out
xchg
inc
cmp
mov
sub
mov
jp
cltd
pop
scas
cmp
iret
stos
pop
push
insb
sub
cwtl
xchg
push
aam
ret
jge
pop
sbb
int3
sbb
xchg
push
out
jmp
int3
fwait
incl
imul
in
pop
cmpb
ret
scas
mov
arpl
dec
shlb
and
adc
mov
les
cmc
aaa
dec
into
mov
cmp
gs
cmp
xchg
mov
lods
and
pop
clc
dec
xchg
xchg
mov
dec
imul
lods
sbb
mov
mov
mov
fdivrl
and
cmpsb
loop
adc
mov
adc
stc
rcl
pop
cltd
imul
or
cltd
sti
xor
jg
sub
push
sbb
ja
sbb
jmp
inc
cltd
cmpsb
pusha
adcl
xor
not
jbe
mov
out
cmc
xor
js
cltd
in
cli
mov
sub
xor
cltd
inc
nop
mov
out
inc
mov
adc
shrb
repnz
imul
cltd
inc
cmp
adc
mov
in
xor
cld
je
inc
lods
or
testb
lods
mov
sub
mov
xor
mov
scas
das
pop
xchg
fwait
adc
pusha
jmp
ret
dec
push
addr16
sub
js
pop
mov
jbe
fcoml
lds
mov
inc
mov
aaa
repz
sub
cwtl
adc
jno
sbb
or
pushf
mov
push
jnp
inc
adc
push
jnp
mov
mov
fisubs
ret
adc
xchg
in
sub
mov
jae
fwait
mov
ret
das
or
xchg
shll
jg
mov
jnp
xchg
cwtl
jmp
inc
test
lret
das
dec
cmpsl
sar
cld
adc
xchg
dec
loope
mov
inc
cmc
pop
stos
jnp
test
fldenv
add
sub
mov
pop
lods
mov
jns
xor
inc
pop
fbld
popa
scas
divb
pop
mov
xor
aad
testb
push
mov
popa
and
data16
push
pop
xor
xchg
loopne
in
insl
inc
mov
pop
rcll
or
push
mov
lcall
shlb
jnp
daa
fstp
rorb
xchg
xor
jne
mov
pop
jge
stc
sub
test
push
and
cmp
addr16
xchg
or
inc
ss
cmp
mov
jmp
xchg
imul
jecxz
sbb
xlat
cs
add
scas
add
sahf
jb
pop
inc
int
pop
popf
xchg
es
je
icebp
inc
outsl
std
cmp
bound
push
sbb
add
nop
andl
movsl
ja
psubusb
mov
pop
shlb
and
cmp
mov
mov
pop
jb
sbb
insb
pop
sbbl
or
test
dec
push
and
movsb
adc
das
aas
or
sbb
add
fxch
jl
xlat
js
xlat
mov
leave
loope
mov
mov
jae
jo
jbe
pop
add
pop
mov
idivb
mov
or
push
xlat
pusha
test
aaa
subb
pop
pop
sti
dec
stos
cmpsb
pop
adc
pop
lcall
popa
dec
sub
dec
and
inc
rclb
dec
data16
cmp
jg
sahf
jo
stc
add
out
and
sub
test
cmpsl
push
xlat
adc
test
cwtl
popa
mov
push
lods
iret
xchg
push
call
sub
sub
test
nop
cmpsl
xchg
dec
mov
daa
pop
xchg
push
les
scas
jbe
jg
dec
dec
xor
adc
sub
mov
sbb
enter
jne,pt
dec
jnp
and
insb
nop
mov
pop
and
sub
jmp
jb
test
inc
mov
jnp
les
pop
pushf
pop
jb
mov
out
pop
mov
das
sub
jb
jae
std
push
sbb
fsubr
jnp
cmp
mov
inc
dec
push
push
inc
jno
jle
sub
mov
mov
lret
dec
mov
movsl
pop
test
mov
lret
fdivrs
mov
arpl
sahf
lods
mov
xchg
les
pop
subb
xor
cmp
sbb
pushf
test
pop
fcomip
iret
mov
push
push
je
filds
lds
and
cmp
stc
scas
ds
mov
lea
rclb
gs
sub
xchg
inc
sbb
push
mov
cmp
xchg
inc
pop
mov
xorb
xlat
xor
cmpsb
arpl
and
push
enter
aas
mov
mov
cs
shufps
subl
inc
mov
push
scas
mov
pusha
fisubs
or
cmc
add
sarb
xor
jne
pop
dec
lret
fistpl
popf
pop
sbb
pop
test
sbb
repz
lret
sti
cmp
out
mov
add
push
test
pushw
mov
push
push
and
and
sbb
mov
sbb
dec
ds
xlat
xchg
lea
out
dec
leavew
lret
int3
xchg
iret
xor
stos
daa
push
or
repz
pusha
push
aaa
call
aas
dec
inc
stos
add
data16
sbb
insl
jmp
adc
hlt
add
sub
movsb
push
movb
fsubrl
or
sub
ss
xchg
or
imul
adcl
std
xchg
push
jmp
sub
dec
pop
test
jns
lret
xchg
jecxz
mov
sbb
xchg
clc
sub
leave
decb
pop
adc
enter
out
pop
bound
insb
test
sbb
add
idivl
call
cltd
cli
push
out
lea
xchg
or
mov
popf
or
clc
scas
jle
push
fwait
jns
xchg
adc
jg
hlt
lods
cmp
cmc
sbb
or
ficompl
push
or
mov
loop
dec
std
gs
push
mov
mov
outsb
cli
cmpsb
inc
rolb
push
out
jmp
push
testb
sti
je
add
adc
jno
cmc
testb
jne
sbb
cltd
movups
jl
jmp
sbb
inc
cli
mov
dec
loope
notl
std
push
and
dec
adc
inc
add
cltd
push
mov
xchg
inc
dec
out
ret
pop
push
int
addr16
call
ret
imul
negb
out
dec
stos
adc
insl
push
clc
lods
and
outsl
pop
dec
dec
insb
cmpsl
pushf
or
test
mov
fld1
std
or
cmpsb
sbb
popf
aas
pushf
bound
scas
push
arpl
mov
imul
fstl
or
or
mulb
pop
xchg
lcall
fistps
movsl
loopne
test
fs
mov
js
add
aaa
movsl
jbe
mov
out
sti
mov
int
outsb
pop
dec
fcos
and
in
mov
pushf
mov
push
mov
jecxz
dec
inc
add
add
sub
ficoms
add
and
jno
cmpsl
mov
or
pop
leave
dec
sbb
sub
imul
cmp
sbb
cmpsb
xchg
arpl
imul
add
aas
cmpsb
or
sub
inc
imul
je
sarl
pop
out
adc
daa
mov
mov
xlat
or
sbbb
jns
pop
mov
pop
lods
and
fsubrs
adc
push
sti
inc
mov
or
loopne
xor
mov
jl
xchg
std
ja
loop
aam
mov
push
mov
inc
imul
cmp
sarl
lods
sub
fcompl
sub
mov
js
cltd
je
in
inc
pop
jle
sub
mov
push
adc
rcrb
jne
pop
sahf
dec
lret
sbb
mov
add
ret
sbb
into
xchg
pop
sahf
sti
push
adc
nop
loopne
les
adc
rcrl
pop
fisubl
lcall
xchg
jp
mov
mov
sub
fst
inc
outsb
cmp
cwtl
iret
mov
pop
xchg
push
dec
rcll
mov
je
xchg
cwtl
fs
sbb
or
dec
mov
aad
mov
push
or
push
movsl
jecxz
cmp
push
fs
rcr
scas
loope
in
inc
sub
cli
repz
sub
mov
mov
inc
mov
xchg
adc
and
fisubrl
lock
mov
mov
rorb
push
mov
stos
ror
push
lods
sbbl
xchg
mov
mov
mov
xorl
int
hlt
ficoms
pop
push
rcl
ret
mov
aaa
pop
push
data16
rolb
jno
xchg
in
mov
arpl
in
out
push
pusha
pusha
push
faddl
inc
ret
xchg
arpl
test
pop
ljmp
sub
sub
movsb
into
daa
sub
mov
std
adc
repz
loopne
xor
mov
pop
cmp
fists
test
mov
ret
xchg
mov
sti
popa
jle
adcl
out
adc
out
lock
mov
push
fnstcw
ss
rcrl
into
jl
adc
and
aad
sub
mov
sbb
icebp
adc
daa
fdivs
mov
clc
xor
inc
das
jg
add
xchg
iret
mov
out
xchg
lcall
ds
repnz
test
shlb
cld
icebp
cmpsl
cwtl
push
js
xor
adc
adc
mov
jo
ficoml
mov
cli
xorl
jmp
sbb
aas
adc
popf
popa
push
mov
ja
insl
movb
dec
sbb
push
mov
pop
sahf
sub
clc
mov
jb
rclb
mov
pop
and
mov
pop
es
lock
lods
out
lret
xchg
xchg
jns
popa
movsl
loop
test
cmpsl
mov
popf
xor
notl
cld
and
mov
pop
mov
jge
cmp
push
add
jns
and
stc
idiv
sub
cmp
aad
and
mov
sub
clc
call
push
scas
pop
dec
data16
sub
mov
mov
mulb
pop
pop
push
adc
rcll
bnd
add
push
shrl
aad
arpl
in
sbb
test
xor
rorl
cmp
loope
fdivrs
test
push
mov
sti
inc
in
mov
mov
sbb
nop
add
loop
mov
in
jne
mov
inc
scas
outsb
dec
insl
jp
hlt
aaa
mov
aaa
lea
lods
push
mov
testl
popf
mov
cmp
in
adc
sub
adc
aaa
add
fimuls
mov
adc
push
cmp
int
hlt
out
or
leave
xchg
and
pminsw
add
xchg
inc
and
out
incb
inc
sub
sti
add
mov
adc
sahf
test
mov
addb
loop
insl
sub
in
cmp
mov
sti
mov
jle
out
hlt
repnz
les
test
sub
lock
inc
mov
dec
ja
push
nop
idivl
aam
mov
mov
jmp
inc
or
idiv
sub
sbb
je
pop
inc
lret
hlt
jle
ja
sub
idivb
nop
dec
popf
add
xor
iret
pop
xor
xor
push
cwtl
xchg
js
ds
cmp
ja
and
and
sub
adc
push
sarb
je
sub
sbb
imulb
xchg
mov
movsb
pop
lahf
aas
clc
loopne
pop
cli
inc
mov
xchg
pop
mov
push
jne
jae
rorb
rorl
inc
cmp
jne
repz
out
icebp
xchg
negl
xor
shlb
daa
jg
sub
cld
fs
rorb
mov
jae
fs
mov
sarb
adc
inc
gs
jmp
lock
sub
sahf
sahf
scas
rorb
movsl
inc
dec
sbbb
mov
cmpsb
jae
cmpsb
stc
loope
xor
repz
dec
mov
clc
jae
insl
pop
xchg
xor
xchg
stc
sti
je
add
mov
pop
mov
pushf
push
cmp
pushf
cwtl
addr16
stos
cltd
shr
mov
xor
shrb
inc
adc
adc
push
imul
pusha
xchg
pop
ret
sbb
outsl
mov
leave
mov
pop
lahf
test
dec
or
jae
dec
dec
adc
sbb
cmpsb
xor
cltd
xor
adcb
arpl
jbe
sub
adc
insb
cmp
test
mov
aas
loope
push
sub
int3
test
and
cmp
push
inc
fidivrs
nop
dec
scas
call
es
xchg
lock
inc
movsl
push
add
xchg
popa
push
in
mov
lea
icebp
insb
imul
push
repz
dec
scas
fidivrl
pop
and
test
iret
dec
xor
dec
sbb
jge
fwait
imul
iret
mov
repnz
arpl
adcl
cmp
dec
addr16
xchg
inc
mov
testb
sbb
cmp
arpl
adc
daa
fisttps
or
std
pushf
mov
pusha
mov
mov
mov
inc
shl
jne
sbb
push
in
outsb
aaa
xchg
xchg
enter
xchg
pop
lods
push
push
jb
imul
or
inc
sub
sub
mov
sbb
test
in
in
lods
and
int
push
ss
xor
sbb
and
mov
xchg
testl
cli
cld
jle
pop
jbe
out
cs
nop
push
lahf
sub
out
dec
xchg
jmp
mov
gs
leave
pushf
xor
and
ja
xor
and
shlb
in
jb
mov
mov
fwait
popf
pop
xor
mov
xchg
jl
mov
filds
xchg
jecxz
add
mov
out
sbb
outsb
dec
mov
jmp
movsb
fisubs
mov
jno
xor
repz
xor
int3
xlat
push
jne
int
aaa
jle
sti
sub
inc
add
lods
adc
flds
ljmp
jae
out
dec
pop
push
xlat
and
cmp
sbb
js
sti
call
add
outsl
iret
pop
add
xchg
xor
fdiv
out
and
mov
mov
dec
mov
cmpb
mov
pop
cmp
add
mov
imul
or
and
incl
mov
out
rcll
mov
movsb
addr16
outsb
cmpl
shll
in
ja
das
test
lock
xor
sub
jmp
mov
cmp
fidivl
cmpsl
dec
test
fimull
and
or
jnp
ss
dec
movsl
loop
rorb
shlb
bound
xchg
js
pop
out
push
xorb
sahf
dec
ret
sahf
jmp
xor
xor
adc
mov
movsb
in
mov
ret
stc
test
mov
leave
jne,pt
mov
cmp
ficompl
popf
nop
mov
stos
popa
loope
in
lahf
and
jg
in
mov
js
mov
nop
jae
mov
stc
xor
imul
ja
jg
mov
or
xchg
dec
pop
xorb
aam
stc
cwtl
rcll
mov
jg
dec
lret
and
jl
dec
cmp
lock
xchg
ds
stos
cmpsb
cmpsl
lcall
jle
gs
jae
add
jb
adc
fdivp
mov
lock
jmp
ret
cmp
addb
inc
xchg
xchg
popa
in
iret
popa
and
mov
jo
leave
or
ds
lcall
pusha
outsl
push
mov
and
stos
lret
sbbl
das
jge
into
add
cmp
test
bound
pop
fsubl
push
cs
aaa
cmpsl
out
repnz
cmp
test
sub
push
pusha
mov
lcall
insl
push
setb
mov
call
jmp
test
out
popa
aas
sbb
fstpt
pop
gs
imul
push
or
dec
imul
into
cwtl
jo
gs
push
dec
fldenv
dec
mov
jp
fmulp
xchg
and
pop
stos
aad
loope
popf
enter
outsl
push
push
ret
divl
testb
cmpsl
pop
mov
push
divl
mov
pop
daa
pop
aas
shlb
cmpsb
ljmp
aaa
lret
pop
getsec
mov
cwtl
xor
addl
fdivr
push
aam
sub
and
je
xchg
fsubrs
mov
push
cmp
addr16
push
pushf
jl
push
out
adc
inc
bound
push
sti
mov
mov
adc
push
cmp
mov
dec
mov
mov
and
sti
in
scas
push
cmpsb
leave
jb
call
nop
arpl
pop
or
lcall
push
clc
mov
sahf
xchg
outsb
and
adc
mov
jns
repz
jle
jno
leave
dec
pop
cmp
pop
loope
push
lea
imul
jno
dec
xchg
movsl
sbb
or
add
push
mov
inc
add
inc
leave
cwtl
dec
sub
pushf
icebp
lods
scas
mov
sbb
popa
dec
lcall
je
inc
mov
jmp
insl
outsb
xor
je
mov
push
loopne
xor
jp
mov
push
pop
or
dec
inc
add
sbb
inc
les
lret
loopne
call
inc
test
pslld
addl
out
mov
and
leave
sub
mov
inc
scas
leave
rol
mov
aas
popa
fildll
xor
in
int
gs
add
xchg
outsb
sub
xorl
cmp
xchg
mov
pop
call
leave
cmp
cwtl
and
mov
jg
sbb
call
pushf
pop
loope
stos
lahf
lcall
cmp
dec
push
push
pushf
mov
cmp
fbstp
loope
icebp
mov
pop
ret
daa
test
jecxz
bound
mov
inc
aaa
mov
mov
pop
sub
jge
mov
cs
cmovge
add
adc
addl
pop
jae
test
add
shlb
inc
fadds
inc
cld
jne
repnz
inc
mov
cmp
push
sub
into
pop
add
pop
mov
jmp
push
lea
mov
xlat
mov
lds
and
dec
add
mov
scas
push
mov
or
mov
or
insb
mov
std
dec
jle,pn
push
push
daa
lds
xchg
sub
or
jo
push
pop
or
push
in
ds
mov
aam
loope
loopne
gs
cli
mov
lock
pushw
lods
fistl
cmp
aaa
pop
mov
push
jmp
in
outsb
and
or
jecxz
iret
dec
xor
enter
shrb
loop
xor
mov
jp
mov
sti
xor
pop
movsb
jo
or
xchg
xchg
test
inc
out
out
repz
hlt
inc
xor
sub
sarl
ss
ljmp
fwait
inc
repz
push
push
bound
pop
out
sbb
in
dec
ja
stos
popf
dec
dec
sub
pop
push
push
sbb
push
mov
mov
cmp
scas
lock
es
insb
insl
popf
int
lock
popa
cld
test
inc
loope
adc
enter
je
jbe
mov
mov
pop
dec
push
xor
sti
in
movsb
add
mov
add
insl
pop
dec
cld
stos
lret
xlat
insb
or
ja
sbb
out
clc
sbb
stc
lea
int3
jne
push
pop
stos
xchg
stc
mov
test
insl
adc
sub
repnz
nop
sbb
mov
mov
adc
sbb
or
iret
push
mov
xor
xchg
pop
dec
sar
rclb
int
daa
pusha
lret
jne
mov
and
mov
mov
adc
push
push
sub
pop
dec
jle
jns
mov
repnz
push
in
add
cwtl
test
mov
bound
mov
inc
sub
sub
cmpl
xchg
sbb
repz
cmp
jns
push
xchg
cmp
fnstsw
jmp
lahf
add
add
cmpb
dec
sbb
add
nop
cmovs
jl
shll
adc
cmp
mov
dec
push
inc
call
sbb
xchg
jbe
adc
pop
mov
mov
pop
pop
sahf
ja
out
add
rolb
shl
rorl
sub
dec
and
test
mov
xor
mov
jecxz
cmpsb
mov
sahf
pop
rolb
popf
add
adc
int3
mov
stc
movups
push
jge
xchg
lret
jnp
mov
or
add
pop
cmpsb
cwtl
inc
mov
and
test
test
push
cwtl
cmp
pop
mov
pushf
sbb
mov
stc
hlt
dec
inc
fdiv
cmp
dec
data16
out
inc
pusha
dec
cmp
out
sub
out
rorb
and
popa
je
incb
pop
lmsw
enter
pushf
fildl
testb
fldt
inc
jp
sahf
mov
cmpsl
out
sub
shll
inc
rcrl
out
lahf
pop
iret
mov
addb
dec
imul
adc
jmp
pop
mov
mov
push
shll
adc
in
call
inc
sbb
negl
jns
push
ds
sahf
add
xchg
cmp
out
popf
clc
add
add
xlat
scas
or
dec
or
sbb
lcall
and
pop
insl
fsubl
dec
rorl
push
je
clc
mov
out
or
pop
or
test
cltd
mov
xor
cmp
ss
pop
subb
fldt
call
dec
daa
or
and
insb
or
fisubs
adc
ja
int3
sub
mov
test
subb
sub
test
loopne
mov
inc
sub
inc
int
call
test
ja
out
xor
stos
addr16
cmpsb
sti
add
pop
fistl
mov
pop
xor
sti
xchg
jle
inc
push
rol
popf
mov
cmpsl
test
pop
jle
outsl
call
divb
inc
sbb
adc
mov
mov
jne
and
lods
xchg
ljmp
push
ljmp
stos
adcb
pop
stc
adc
sbb
sub
mov
or
mov
jne
test
lret
mov
cmpsb
add
enter
fsts
adc
aad
popf
cmp
pop
andb
out
add
mov
cmp
xorl
xchg
outsl
sar
xor
movsl
inc
pop
xor
iret
imul
push
cmp
or
adc
inc
into
pop
xor
sbbb
ret
push
outsb
popa
pushf
sub
lahf
faddl
sbb
aad
frstor
out
leave
in
cwtl
pop
add
je
lret
push
cmc
cmp
add
and
sbb
imul
xchg
aas
ss
rorb
sub
outsb
push
rolb
out
outsl
dec
repz
push
mulb
jno
mov
icebp
stos
inc
enter
push
jl
imul
push
scas
mov
mov
enter
cmpsl
stos
push
add
mov
xchg
add
lret
sub
in
add
mov
clc
scas
daa
cmp
imul
pop
ds
sbb
jmp
lock
push
cwtl
mov
fmul
xor
or
mov
sub
ljmp
in
xchg
push
xor
xchg
pushf
jnp
inc
sbb
test
xchg
sbb
pusha
adc
mov
and
add
xchg
add
es
adc
and
add
out
scas
fisubl
jbe
fidivrs
in
xor
inc
mov
inc
cmp
out
xchg
int
mov
jb
xrelease
jne
fadd
pop
fnsave
popf
or
dec
leave
ret
lret
pop
int3
out
inc
loope
sar
out
fsubl
movsl
andl
lods
fsubl
mov
pop
mov
lea
lods
xchg
inc
fistpll
sbb
xor
orb
faddl
call
mov
pop
or
lahf
jne
std
ret
stos
daa
mov
incl
arpl
mov
mov
sub
mov
mov
mov
fucom
push
pop
xchg
loope
adc
ret
sbb
fidivl
or
into
in
mov
mov
adcb
loope
xchg
xlat
out
xchg
pop
adc
jp
pop
jge
add
add
sbb
pop
mov
in
cmp
leave
xchg
hlt
int3
jne
adc
jecxz
sbbl
imul
lea
popf
mov
mov
int
daa
add
std
enter
xor
test
aaa
sub
inc
je
add
mov
cltd
in
or
cmpsb
addr16
cmc
jno
fidivrs
sarb
xchg
lcall
sub
fs
sbbl
dec
dec
xchg
xor
iret
ret
in
cmp
inc
mov
scas
lea
repnz
jo
dec
lcall
jmp
loopne
push
stc
xchg
aam
mov
insb
test
sub
stos
xchg
dec
mov
add
loopne
push
out
sbbl
sbb
out
push
lahf
jg
shr
mov
pop
rcll
loopne
jbe
push
mov
je
and
lods
aas
mov
fnclex
imulb
ja
sub
dec
xor
lods
rcrw
cs
mov
add
mov
mov
mov
sbb
mov
pushf
dec
lcall
push
sub
ss
and
mov
flds
and
dec
lret
adc
dec
testb
jl
ror
in
mov
lcall
and
or
pusha
sub
icebp
clc
adc
sarl
push
inc
push
mov
test
mov
pop
sahf
int
outsb
or
movsl
mov
sub
sti
push
movsl
pop
sub
dec
mov
lods
xchg
and
bound
xor
cld
mov
ja
mov
or
mov
or
outsb
aad
movsl
imul
xchg
mov
push
cltd
push
pop
adc
adc
pop
iret
jle
mov
mov
adc
movsb
test
je,pn
or
adc
sahf
xlat
dec
jno
pop
adc
fimuls
movsl
leave
cmp
mov
push
add
shrb
adc
mov
repz
cld
pop
mov
scas
cld
pop
outsb
popa
cwtl
arpl
fldcw
in
dec
mov
dec
aam
add
nop
jg
lea
and
add
add
nop
jle
ljmpw
mov
xchg
mov
sbb
sbb
mov
fwait
or
push
sub
adc
into
or
add
std
movsb
jge
addb
add
aam
mov
frstor
mov
pop
and
stc
mov
mov
or
call
xchg
inc
adc
xchg
fldcw
test
aam
jae
call
cmp
pop
stos
test
dec
fimuls
ret
lahf
add
cmp
addr16
xchg
pop
and
lret
pushf
lds
in
setnp
xor
cmp
data16
mov
dec
push
in
aas
xor
push
test
add
int3
out
adc
jecxz
mov
adc
push
lcall
mov
jmp
xor
in
xor
mov
ss
lret
cmp
push
jge
popa
faddl
ffree
lcall
jmp
sub
mov
sarb
or
xor
dec
xchg
bound
lods
jbe
icebp
pusha
inc
pop
scas
jmp
out
pop
leave
mov
stos
or
call
sbb
out
lds
xchg
xchg
ret
cmp
insl
lods
inc
and
dec
out
in
fwait
and
sbb
sub
js
jne
pop
lea
sub
mov
lahf
mov
lea
push
inc
push
mov
pop
sub
dec
mov
int3
sub
mov
cmp
cmpb
rolb
xchg
dec
movsb
in
pop
inc
xchg
dec
out
xchg
jg
add
subl
xor
rol
insb
pop
pop
dec
incb
addr16
jb
pop
imul
mov
xchg
cltd
mov
repnz
add
stos
sbb
aam
insl
popa
cmp
outsb
inc
jb
mov
pusha
repnz
iret
and
push
int3
pop
add
aas
dec
test
stos
repz
pop
mov
aad
adc
inc
push
int
adc
cld
mov
cld
js
mov
cltd
add
or
dec
divl
cmp
adc
clc
fcmovnb
mov
push
jle
addr16
xor
cmp
iret
adc
pushf
lock
inc
stc
daa
xor
test
outsl
inc
xor
addr16
lcall
xor
addr16
jne
mov
and
int3
movsl
add
scas
dec
cmp
sbb
inc
pusha
outsb
aam
scas
daa
xor
hlt
imul
push
pop
and
sbb
icebp
cli
pusha
fdivrl
imull
popf
cwtl
out
mov
jge
out
and
push
in
mov
dec
xchg
ja
adc
dec
adc
lret
mov
in
movsl
leave
pop
stos
or
mov
div
mov
cmp
inc
fsubrl
in
or
clc
add
xchg
mov
hlt
dec
js
push
fs
xor
movsl
jne
adc
jb
dec
cmpsb
or
pop
jnp
iret
sahf
dec
push
pop
js
cli
push
jno
lods
lahf
lods
mov
or
imul
test
jbe
cmp
ret
fdivrl
xor
dec
addr16
dec
push
test
mov
dec
daa
sub
out
xchg
xor
rcl
popa
into
jne
mov
daa
out
push
jae
gs
ficoml
or
fsubs
pop
sub
inc
fadds
fdivs
ljmp
out
in
push
sub
adc
rorb
data16
jmp
inc
inc
jae
cmc
outsb
shrb
and
loopne
je
jmp
cmp
xchg
test
pop
and
je
xchg
sbb
inc
or
fadd
movsb
sbb
push
loop
loop
sti
jnp
mov
insb
add
les
mov
xchg
push
outsl
dec
clc
jmp
inc
inc
push
call
add
mov
loopne
inc
jecxz
popa
cmpsl
cmp
push
aaa
rclb
jg
xor
jl
cmp
push
xlat
or
ja
stos
xchg
mov
inc
or
or
jno
ljmp
loope
pop
fimuls
xor
rcll
pop
add
daa
sarl
dec
sti
ljmp
jbe
icebp
mov
movsb
nop
fidivl
in
movsb
nop
mov
aad
and
and
push
jo
push
fdivl
in
mov
sub
es
fimull
loope
sbb
pop
cld
or
push
outsl
je
mov
adc
imul
clc
jecxz
push
mov
jp
ret
fadd
xor
jg
fistpl
mov
psubsb
push
sub
xchg
sub
pop
and
repz
dec
sahf
and
scas
pop
sahf
dec
and
cmp
ss
or
int3
pop
xchg
lock
mov
clc
sub
fnstsw
or
xchg
loop
outsl
pop
adc
imul
les
out
shll
mov
push
fstpl
xchg
and
inc
mov
jle
xchg
add
jnp
test
and
or
mov
in
push
cmp
cmc
xchg
jb
lahf
push
mov
flds
xchg
ljmp
add
lock
cmc
xchg
xor
sub
push
adc
int3
inc
dec
push
scas
add
in
addl
movsl
insb
in
xchg
jno
mov
loop
adc
jg
xchg
in
xchg
cmpsl
cmp
mov
push
int
xor
int
sub
jo
es
add
popa
popa
bound
gs
into
mov
arpl
cmp
ja
add
rcrb
mov
dec
sbb
ret
stos
dec
in
add
push
rolb
pop
fwait
jbe
ja
in
xchg
xchg
in
inc
xchg
test
lcall
stc
add
pop
repnz
int3
mov
ret
xlat
pextrw
sbb
sbb
or
fmuls
add
or
jecxz
cmpsl
inc
mov
int3
ljmp
pop
fst
repz
iret
fs
imul
in
add
lock
movsb
lret
sub
inc
icebp
shlb
adc
xchg
pop
pop
cmc
sbb
test
push
sub
popa
dec
sub
inc
sub
daa
mov
push
subl
rorb
push
mov
dec
cmp
push
icebp
or
bound
lea
and
pop
jecxz
xchg
iret
mov
into
lret
mov
mov
fcoms
pushf
lods
fmul
jo
pop
in
and
dec
push
movsb
loope
cli
jecxz
push
jg
pop
lea
cld
xor
mov
mov
outsl
loop
xchg
fstl
aam
jb
jae
mov
pop
imul
outsl
and
fdivrs
mov
and
or
jecxz
push
sbb
jbe
sbb
addr16
add
int
out
xchg
int
xor
add
sub
sbb
mov
fimuls
and
shl
push
nop
test
cmp
add
aas
push
aad
mov
adc
fcmovne
in
lods
mov
adc
xor
and
and
cmpl
pop
aad
sbb
leave
inc
sub
push
mov
jge
stos
addb
push
jp
call
adc
in
mov
out
dec
adc
data16
push
out
sub
pop
dec
mov
into
sbb
std
pop
cmp
int
int3
cmp
jle
movsb
repz
pop
mov
mov
fisubrl
pop
jg
add
xchg
mov
mov
stos
mov
fcom
inc
push
push
xchg
dec
imul
je
shrl
and
pop
dec
movsl
mov
or
inc
ds
pop
inc
mov
mov
adc
mov
or
icebp
or
hlt
jns
push
sub
outsb
inc
test
jg
push
fs
outsb
call
cmp
mov
lret
lds
mov
shrl
xor
mov
dec
jle
test
xchg
dec
pop
jecxz
lret
je
inc
xchg
shrb
push
mov
ret
rorl
mov
cmp
fstpl
xor
les
xorl
pop
aas
pop
pop
repnz
je
adc
imul
icebp
lahf
fdivrs
push
rcll
jmp
pop
or
inc
jmp
ja
mov
adc
mov
daa
je
mov
dec
cmp
jecxz
enter
aas
clc
ror
aad
jl
mov
das
inc
fcompl
cmp
mov
sub
mov
imul
test
and
fdivp
ja
inc
jbe
fiaddl
fsts
mov
fsubl
mov
arpl
xchg
insb
and
fs
jecxz
pop
mov
rorb
dec
pop
add
cmp
leave
jae,pt
add
mov
dec
fnstcw
jmp
mov
roll
jg
cs
ficoml
cld
dec
add
push
popa
cmc
pushf
ds
addl
ror
sub
xor
and
push
inc
std
cs
gs
pushf
add
sarl
ja
and
fiaddl
push
add
rorb
loope
xor
out
int3
push
mov
shrl
pop
pop
xorl
flds
inc
inc
push
add
out
sbb
mov
jne
jae
leave
ds
test
mov
out
xchg
into
leave
lea
cwtl
sub
and
mov
fnstcw
pop
js
mov
push
fdivp
sbb
push
lea
int3
mov
push
inc
stc
push
sub
dec
daa
sub
and
loope
xchg
mov
sub
jecxz
mov
imul
call
jbe
and
pushf
xchg
sbb
and
jg
repnz
xchg
test
jbe
cld
movsl
push
xchg
xchg
sbb
push
test
sub
das
xchg
movsl
push
and
stos
or
and
ja
xchg
sbb
int3
in
fmuls
push
push
or
xor
or
in
pop
xorb
dec
mov
and
adc
inc
pop
sbb
mov
popa
cmp
add
add
adc
imul
add
inc
call
pop
in
sub
push
mov
fsub
inc
scas
push
out
rorl
iret
mov
mov
in
mov
fs
jg
fcmovnu
lods
mull
mov
pop
aaa
fstpl
cmp
sbb
cmpb
icebp
cmp
mov
cmc
outsb
and
pop
add
add
outsb
jg
add
js
iret
aaa
test
sti
mov
aam
jp
in
enter
out
and
and
orl
int
loope
out
push
fldenv
and
jno
mov
inc
push
cmp
les
in
inc
addr16
pusha
xchg
out
sub
shll
adc
inc
fstl
inc
mov
jns
sub
or
add
dec
shrb
push
jp
movsl
hlt
mov
test
adc
cltd
pop
push
out
or
aas
pop
sti
outsl
stos
jmp
out
sbb
iret
mov
clc
scas
pop
jecxz
and
test
sub
cli
testl
das
xlat
imulb
pushf
jmp
mov
jnp
mov
rorb
mov
inc
jns
jns
mov
inc
push
lahf
sbb
or
fmuls
das
popa
push
lahf
arpl
or
nop
das
mov
jl
popf
loope
in
repz
lds
adc
inc
fs
daa
mov
dec
pusha
outsb
mov
data16
pop
iret
lret
mov
clc
shlb
mov
cld
test
jae
sbb
sub
mov
jge
jo
dec
mov
push
inc
stc
ja
jnp
adc
sub
sbb
xorl
or
or
xchg
es
dec
pop
loop
in
ficoml
mov
mov
adc
in
add
pushf
rcl
insl
lret
sahf
mov
inc
fildll
add
xor
stos
push
scas
repnz
fucomip
shlb
mov
and
lock
ljmp
test
mov
mov
mov
lock
or
call
and
cmp
or
movsb
sbb
fcoml
test
outsl
xchg
mov
ja
out
fmul
mov
pop
dec
xchg
out
scas
movsl
cmp
aam
xor
ret
pop
ret
andb
pop
cmp
mov
pop
ja
popa
insb
out
jecxz
mov
sahf
outsb
cmpsb
pop
js
mov
jle
enter
or
aaa
xor
jbe
imul
push
fucomi
push
data16
jmp
data16
jle
or
or
pop
jae
push
dec
inc
dec
dec
test
mov
fcmovnbe
jmp
int3
scas
adc
sub
adc
addr16
cmp
loopne
sbb
inc
stos
and
stos
lock
inc
sahf
jno
adcb
outsl
out
hlt
lock
outsb
and
cwtl
loop
outsl
jl
mov
mov
aad
xor
inc
lret
push
in
pop
mov
fsubl
and
ficompl
or
negl
pop
cwtl
cmp
cmp
sbb
cmp
mov
adc
or
movsl
pop
stos
xchg
out
ljmp
aaa
lahf
mov
scas
dec
insl
push
pxor
jnp
arpl
add
sbb
sub
ror
mov
mov
and
fcomp
mov
mov
int3
mov
sbb
inc
push
ss
cmpsl
mov
cmp
or
testb
rorl
dec
mov
kmovw
out
std
test
jle
aaa
int
fucomip
push
outsb
pop
pop
mov
out
out
add
daa
dec
mov
out
popa
inc
dec
cltd
cltd
push
jmp
mov
jge
adc
cmp
imul
ficoms
push
hlt
inc
push
decb
mov
jl
fists
xor
in
xchg
lret
adc
in
xchg
pop
leave
xlat
mov
pop
mov
xor
scas
xchg
xchg
xor
test
add
lods
imul
add
std
push
into
std
andl
popf
xlat
jecxz
xlat
pop
dec
pop
arpl
pop
add
ret
sahf
rcl
ficomps
enter
mov
lahf
sub
jb
mov
sub
dec
pop
sbb
push
testb
pop
pop
push
dec
xor
mov
rclb
or
scas
jle
in
xor
aas
inc
push
test
inc
jo
shrl
cmc
rclb
pop
push
cmp
xchg
jns
mov
jge
pushf
and
ret
daa
or
ja
js
pop
sub
nop
cld
lahf
dec
mov
xchg
fwait
imul
adc
add
adc
rorb
mov
ret
pop
lods
cmpb
ljmp
adc
sub
rorb
pop
mov
cmp
cmp
pusha
push
adc
add
out
sub
call
jbe
cmpsb
sbb
jns
xor
in
out
ds
cmp
or
sub
and
out
mov
scas
xchg
cmp
loopne
das
jg
dec
pop
jg
sete
cmp
jo
je
ja
jecxz
aas
mov
mov
jecxz
cli
or
imul
pop
shll
adc
push
daa
mov
pop
aas
xor
xor
mov
pop
jl
neg
add
pop
and
sahf
jbe
cwtl
mov
shlb
into
cmp
fcoml
xor
pop
int3
push
stos
jmp
dec
cmp
out
lret
stos
jns
pusha
mov
or
in
enter
jb
sub
icebp
fstp
cmp
loop
sarb
mov
push
ja
jle
push
negl
jae
movsl
call
fwait
or
pushl
sahf
in
push
xchg
inc
xor
xchg
lret
aaa
sarl
sub
dec
xchg
dec
jbe
pop
out
inc
shl
hlt
fisttps
cmp
shll
scas
rorb
jecxz
mov
sub
adc
ds
inc
cwtl
mov
iret
jmp
mov
andb
adc
out
enter
inc
mul
pushf
insl
jbe
cli
push
push
push
sbb
cmpsl
shll
shr
jne
aas
jae
sbb
and
add
repnz
and
gs
sbb
repz
int
push
pop
aaa
movsb
push
and
loope
xchg
test
vpavgb
mov
pop
sarb
lret
movsl
dec
pop
fsave
outsl
mov
rep
cmp
xlat
cmp
push
test
jae
adc
cld
lea
jb
sbb
mov
adc
addb
sbb
mov
inc
sbb
jl
movsb
add
mov
push
les
cmp
push
push
call
dec
mov
xchg
push
adc
fldcw
mov
cmp
sbb
shll
lahf
testl
jno
popa
scas
or
ja
test
jg
dec
lahf
adc
cwtl
jecxz
sbb
pop
jle
sbb
imul
fsubl
pop
sub
stos
cs
pop
and
inc
pop
jg
xchg
sbb
push
xchg
mov
dec
inc
xchg
mov
lods
rclb
xor
sbb
cs
push
lea
sti
adc
and
and
in
cmp
jmp
out
lret
in
xchg
daa
jmp
jp
jnp
lock
add
and
insb
add
rcrb
loope
ds
lea
out
sti
cmp
popa
push
pusha
jbe
ret
or
iret
shl
mov
je
pop
jne
mov
xchg
das
sbb
ds
jmp
inc
push
jno
lods
lahf
sub
xor
adc
int3
movsb
pop
loopne
stos
pusha
or
stc
push
scas
ret
cli
push
pop
imul
mov
pop
dec
mov
das
fs
push
aam
rcll
push
xchg
pop
testb
push
dec
cmp
sbb
pop
stc
dec
cmp
or
push
movsb
stos
fildll
popf
push
lods
dec
mov
jl
cltd
enter
loopne
call
or
xchg
clc
scas
movsl
pop
xor
pusha
add
sbb
mov
adc
es
pop
push
cli
lods
je
cmp
out
adc
int3
mov
adc
out
push
add
and
les
cmp
lret
mov
dec
xor
filds
pop
sbb
lret
sub
cmpsl
pop
inc
test
rcr
enter
dec
mov
sbb
in
cmpb
jmp
cli
movl
pop
filds
std
fistpl
insb
jl
pop
addl
xchg
in
xor
imul
fwait
mov
popa
stos
movsb
ret
xchg
pop
into
pop
sbb
lods
dec
into
loope
outsb
fisttpl
imul
xchg
add
mov
pop
and
and
add
adc
sbb
jmp
lcall
dec
push
pushf
and
je
test
jp
movsb
add
cmp
clc
repnz
call
pop
xchg
out
sbb
xor
push
jns
pop
std
test
leave
xchg
mov
arpl
dec
xchg
or
add
data16
push
test
aas
les
andl
mov
iret
pop
lds
push
lods
cmp
adc
adc
sub
inc
dec
push
fldenv
in
out
lds
adc
mov
mov
repz
or
js
sub
test
aaa
out
je
lods
push
cmc
divl
es
jns
call
insl
push
sbb
movsb
nop
dec
inc
call
std
in
leave
aam
sub
mov
mov
int3
xchg
xchg
mov
ret
inc
lahf
leave
push
dec
orb
das
imul
inc
aad
xlat
ja
shr
mov
mov
cmc
insl
adc
cs
test
pop
lock
leave
cmp
imul
jle
popa
out
add
imulb
insb
sub
sbb
fimull
sub
adc
add
adc
mov
mov
out
cmp
mov
int3
push
ret
pushf
fwait
ja
mov
pop
adc
cmp
pop
cmp
mov
lret
dec
xlat
sahf
lds
adc
push
cmpsb
test
ljmp
movsl
jmp
stos
nop
jmp
das
inc
xchg
lret
out
xchg
pop
dec
outsl
aad
xacquire
pop
jb
jns
shrl
pop
mov
sarl
lods
pop
gs
inc
lahf
mov
xor
fildl
decl
sub
add
jnp
inc
pop
push
shrb
jns
imul
adc
adc
fimull
in
jp
jnp
je
mov
dec
sti
nop
cmp
fdivrs
mov
mov
push
mov
jle
add
in
jne
pop
sbb
les
pop
push
sub
or
fdivp
jns
sbb
cmpb
sti
lret
mov
push
mov
fcoml
lcall
inc
negb
sbb
insb
nop
subl
xchg
sub
ret
add
dec
mov
add
sbb
lahf
xchg
adc
mov
mov
icebp
imul
lcall
mov
scas
xchg
jecxz
push
xchg
sarb
out
adc
sbb
xchg
push
imul
enter
xchg
out
mov
pop
push
dec
enter
sahf
dec
jns
push
adc
out
std
mov
jle
fcomi
xor
cmpsl
lds
lcall
sub
cmp
in
inc
xor
mov
scas
inc
mulb
add
adc
loop,pn
dec
mov
xchg
push
jp
lahf
ret
jp
movsb
imul
movsb
iret
xchg
mulb
push
xor
mov
mov
sbb
loope
xor
ds
adcl
sbb
sbb
shll
inc
dec
int3
push
movsl
in
fcoms
push
push
push
imul
movsb
scas
jae
out
fidivrs
sub
int3
jg
push
cwtl
rorb
pop
push
int
cli
and
cwtl
pop
push
xchg
dec
rcrb
test
rolb
or
lods
rorb
ret
jmp
push
in
adc
xchg
fcomps
outsl
inc
and
add
sub
icebp
pop
sub
mov
jle
pushf
je
lds
adc
roll
loop
adcb
adc
ds
out
nop
insl
lret
pop
cmp
adc
enter
ficompl
outsb
mov
push
cli
notb
inc
add
inc
ds
ds
xor
ret
cld
addr16
lret
add
and
dec
jae
mov
scas
xor
cmpsb
jnp
pop
xchg
or
xchg
push
or
adc
loopne
jbe
push
mov
mov
lds
cwtl
rclb
push
test
loop
xchg
rcr
bound
in
inc
push
mov
sbb
rolb
das
pop
jne
dec
clc
lds
scas
pushf
or
jg
sbbl
sbb
jbe
pop
adc
es
mov
jg
pop
aam
fadds
inc
dec
movsb
pop
mov
dec
rorl
inc
add
pop
loopne
mov
sub
out
mov
test
lock
shll
cmp
inc
add
loop
jge
clc
push
repnz
pop
sbb
dec
sbb
fidivrs
sbb
lock
mov
mov
mov
js
pop
lcall
adc
sbb
sbb
sub
ja
inc
mov
bound
decb
cmp
xor
call
and
hlt
fwait
lahf
pop
icebp
jge
sarb
lret
sbb
sub
mov
mov
jne
jmp
int3
enter
jne
negb
push
sbb
les
loop
push
in
push
cwtl
mov
sti
cmpsb
jg
mov
fldcw
outsb
mov
rcr
test
jmp
dec
push
imul
inc
mov
outsl
xchg
roll
aaa
iret
sbb
aas
clc
push
pop
int3
pop
rcll
add
mov
push
bound
sarb
xor
insb
mov
cmp
inc
adc
ljmp
xchg
repz
cmpsb
adc
aad
sub
adc
push
xlat
jae
jmp
je
mov
mov
ficoms
sub
outsb
sub
mov
pusha
lret
cld
mov
pop
mov
xlat
icebp
fbld
mov
lret
cmp
xchg
mov
xchg
dec
adc
cmp
jae
mov
push
mov
jnp
mov
pop
fstps
loopne
js
dec
pushf
inc
sbb
mov
adc
jle
cwtl
add
inc
mov
sbb
out
xor
and
xchg
lods
test
outsl
mov
leave
in
std
dec
subl
lods
out
adc
inc
shlb
loopne
add
cmp
gs
mov
dec
inc
ss
fadd
insl
add
pop
out
lock
jge
xchg
ret
jge
iret
stos
jnp
fsubs
das
pop
cmc
add
test
jge
xchg
outsl
test
inc
int3
dec
mov
andb
repnz
adc
push
daa
push
pop
lods
fimuls
int3
setl
mov
adc
popa
das
shl
sahf
or
out
test
popf
pop
mov
pop
cltd
sub
cmp
adc
dec
loope
sub
out
mov
les
dec
sub
jge
jbe
jbe
inc
jge
xor
pusha
cwtl
das
loopne
ficoms
movsl
dec
movsl
push
out
mov
das
mov
add
cmp
sbb
rcl
fdivl
xchg
inc
inc
lret
adc
arpl
push
movsl
mov
pop
shlb
jo
pop
jge
mov
ljmp
cmc
push
lcall
xor
cs
mov
pop
loopne
jae
imul
lcall
repz
push
or
arpl
outsb
mov
push
mov
roll
dec
lcall
rol
fdivr
test
leave
les
sbb
inc
mov
cmp
pop
mov
xchg
and
xor
test
push
jg
push
push
dec
aaa
clc
gs
lret
and
pop
xchg
pushl
mov
stos
ffreep
movsb
scas
xor
sbb
out
or
lcall
pop
jmp
rol
cmc
push
fdivrs
xchg
popa
mov
cmp
pop
out
and
mov
insb
or
arpl
cmpsb
insb
or
loope
das
pop
jnp
decl
sub
cmp
lds
jl
and
inc
dec
decl
push
adc
push
mov
ds
fbld
mov
arpl
jne
or
add
adc
lret
pusha
pop
test
cmp
sbb
rdtsc
es
leave
and
xor
fs
bound
xchg
and
daa
jno
sub
stos
xor
sbb
or
subl
das
jne
add
fsts
cli
pop
ret
repz
or
fcmovnbe
push
dec
les
je
push
test
xor
and
fwait
dec
or
lret
push
lds
adc
ss
or
in
out
fcom
sti
sbb
shlb
jp
in
mov
add
inc
pavgw
mov
sbb
cli
dec
dec
add
or
mov
sbb
into
clc
pop
roll
adc
pop
cmp
ficoms
sbb
push
test
in
in
dec
out
stos
fwait
and
addr16
push
lahf
fadd
js
pusha
pop
jae
test
cli
pop
int3
sbb
out
dec
mov
cmp
or
sbb
bswap
out
xchg
or
adc
out
jle
mov
xchg
mov
mov
les
inc
das
fwait
into
je
ljmp
stos
sbb
scas
and
mov
loope
push
shll
cltd
push
sbb
inc
mov
popa
jbe
dec
mov
xchg
data16
daa
es
stos
push
sub
and
daa
bound
or
mov
je
and
lods
and
mov
mov
repz
inc
cmp
pop
enter
dec
jbe
scas
sbb
sub
popa
les
adc
adc
lret
push
out
enter
inc
sbb
mov
xchg
mov
mov
sarb
add
test
out
add
rcrl
pushf
and
mov
outsb
js
pop
cltd
sub
sbb
xchg
shlb
ret
mov
push
jne
sub
mov
notb
clc
daa
sbb
fisttpl
ja
push
dec
adc
mov
loope
dec
int
jb
pop
lahf
sbb
xor
add
mov
popf
mov
and
xchg
and
pop
jne
inc
dec
inc
mov
and
addr16
rclb
jmp
xchg
in
add
add
data16
in
sbb
push
pop
cmpsb
mov
jecxz
scas
pop
jmp
stc
loopne
repnz
mov
out
pop
std
mov
mov
aaa
xchg
pop
and
push
std
mov
nop
sbb
psllq
test
dec
stos
and
in
lret
out
jno
and
xor
lahf
and
iret
lcall
int
ja
fwait
and
std
sahf
in
jno
aad
int3
es
sub
adc
sbb
add
xor
sbb
xor
fsubrs
and
adc
inc
orl
dec
addps
ja
inc
fimuls
mov
inc
cld
enter
mov
jno
pop
jmp
dec
imul
fwait
inc
lcall
xchg
data16
xor
mov
sar
stos
insl
add
imul
ss
jo
push
push
rorb
lret
sub
das
fcmovnu
push
mov
dec
iret
mov
mov
aam
ret
ljmp
mov
jns
inc
inc
dec
dec
ret
sbb
inc
pop
test
pop
sbb
cli
mov
xor
xchg
and
outsb
or
or
mov
out
jno
and
cmpsb
cli
mov
repz
ret
sub
sbb
or
insb
sub
lds
xchg
push
stos
adc
fdivr
sbb
mov
xchg
add
jg
pop
dec
inc
out
mov
adc
lods
mov
sub
mov
lcall
jge
mov
mov
lods
dec
adc
xor
fstl
roll
loopne
test
jg
cwtl
sahf
inc
sarl
outsb
nop
ja
adcb
lret
jecxz
sbb
nop
xor
pop
movsl
mov
and
push
lock
push
add
mov
add
sub
jbe
cwtl
mov
aaa
rolb
outsl
mov
add
ds
ss
mov
xchg
mov
or
pushf
or
push
out
inc
jl
add
sbbb
orb
cli
mov
stos
outsb
xchg
push
push
jmp
jp
orb
xchg
insl
adc
push
ror
cld
jno
xor
or
lret
dec
xchg
mov
kandnw
lock
xlat
pop
xor
add
cmp
sub
movb
mov
int3
ret
rcll
shll
sub
pop
neg
out
cmp
test
aam
inc
and
sbb
cli
pop
fadd
dec
loopne
hlt
push
out
addr16
rolb
sub
sub
daa
int3
mov
add
and
cld
loopne
push
pop
dec
inc
inc
repz
lds
pop
adc
and
rcr
push
sbb
popa
movsb
out
ret
lods
ja
fsub
xor
lret
pop
js
das
test
out
push
mov
cmp
mov
xchg
int
test
dec
jg
jg
dec
adc
ret
push
sub
bswap
pushf
fnstsw
mov
jo
aam
sbb
mov
mov
int
sub
orl
push
and
xor
fimuls
test
les
adc
js
mov
rcr
out
sbb
cmc
inc
aad
mov
pop
xchg
test
js
cmp
jecxz
xlat
cltd
test
mov
not
pop
mov
pushf
adc
in
cmp
xor
dec
mov
sahf
xchg
test
push
jle
mov
test
xchg
loopne
aad
aaa
jbe
sub
ljmp
push
mov
movsl
pop
cmp
movsl
addr16
jo
stos
dec
lahf
out
mov
dec
add
shll
lods
sbb
jno
test
push
jmp
mov
arpl
cmp
sbb
hlt
fdivs
mov
xchg
add
ret
scas
inc
icebp
stos
sahf
leave
dec
js
pop
sub
jbe
call
and
call
adc
in
aam
xchg
fdiv
sub
xchg
fcom
pusha
cmc
or
jg
cmp
push
xor
push
je
pushf
mov
add
xchg
mov
sub
pop
or
lock
inc
mov
jle
dec
jb
inc
rolb
xor
js
push
stc
jecxz
fs
push
fildl
push
or
movsb
icebp
sti
insl
or
arpl
or
pop
call
aaa
or
mov
push
add
imul
mov
jb
jg
aaa
push
and
ret
mov
aam
and
in
mov
cmp
xchg
sbb
test
sbb
sub
pushf
je
push
and
imul
push
les
sbb
mov
bound
xor
push
fnstcw
xchg
xchg
xchg
and
adc
pop
scas
jle
fstl
cli
psubsb
cmp
inc
clc
mov
cmp
or
xchg
push
adc
icebp
sahf
js
sub
mov
pop
add
and
decl
in
cmp
bound
add
adc
jbe
pop
stos
popf
neg
xchg
test
fldt
and
movq
addl
mov
push
push
mov
xor
test
mov
xchg
lods
test
fldcw
pop
nop
jnp
cmpsl
or
mov
sbb
imull
das
in
push
push
cmp
outsb
inc
sub
mov
sub
fnstcw
shrb
out
add
cs
call
xchg
fiadds
dec
cltd
inc
lods
in
ja
jbe
inc
xchg
mov
mov
xor
pop
lock
mov
jbe
push
push
aaa
js
jns
xlat
clc
add
and
sti
jnp
lods
lods
sbb
loopne
sbb
inc
jo
jp
mov
loop
dec
pop
subl
daa
jp
jecxz
daa
and
stos
cltd
push
popa
and
jecxz
sbb
xchg
sbb
ljmp
xor
outsb
mov
and
mov
mov
pop
leave
or
jl
sbb
leave
mull
fmul
lock
push
aad
daa
push
adc
jl
pushl
into
insb
fsubrl
pop
dec
fs
sbb
pusha
dec
repz
rcrl
adc
das
xor
sub
popf
sub
pop
and
mov
jge
add
rolb
shl
outsb
jecxz
or
and
mov
addr16
xchg
xlat
js
ja
sub
ds
cmp
sub
lods
mov
xlat
loop
mov
jecxz
inc
jle
dec
cltd
sarb
add
lods
pop
and
push
call
ficomps
fists
daa
or
sbb
jo
clc
cmp
movsl
jbe
mov
dec
mov
call
sub
xor
sbb
push
push
int3
in
mov
sub
sbb
jbe
out
mov
incl
or
xchg
imul
ja
inc
in
jbe
lret
fdivrs
or
mov
orl
cmp
dec
out
and
xor
gs
orl
xchg
mov
sbb
std
insb
sbb
cmp
insb
pop
push
movsb
xor
xorb
arpl
sub
jg
arpl
xor
dec
push
xor
jge
pop
pusha
in
js
or
hlt
push
ficompl
dec
xchg
mov
pop
pop
mov
out
xchg
out
jbe
idivl
imulb
movb
mov
dec
add
add
or
sti
es
fistps
jb
fwait
lods
inc
bound
cmp
sub
mov
pop
xlat
xchg
xchg
lahf
cmp
mov
das
inc
sbb
test
jp
adc
cwtl
in
mov
loope
or
pop
inc
sub
sbb
mov
gs
jmp
rcll
mov
hlt
sub
into
push
adc
jg
mov
inc
dec
stos
test
mov
and
lods
fists
int
add
sbb
mov
jno
jne
add
outsl
std
divps
clc
mov
sbb
cmpsl
xchg
xchg
in
cmp
cmp
xchg
jbe
fwait
cmp
adc
pop
push
sti
xor
addr16
push
bswap
lods
cmp
mov
adc
imul
push
sub
inc
out
mov
inc
enter
lods
mov
out
jge
push
shrb
add
and
and
in
cmpsb
lock
pop
dec
push
loop
lcall
jp
xchg
popa
adc
inc
popf
xchg
movsb
jg
fwait
push
jb
sub
and
cmpsb
xchg
rcrl
xchg
fs
nop
mov
movsb
add
push
cmp
inc
dec
out
cli
outsl
sub
scas
push
push
xchg
add
xor
dec
mov
out
mov
jb
jb
cmp
mov
pop
pop
lds
decb
test
dec
xor
mov
inc
andl
xchg
mov
data16
jnp
fs
adc
lock
xor
xchg
sub
bound
jmp
mov
pop
ret
or
stos
adcl
mulb
push
push
push
sarl
gs
or
fdivs
sub
scas
add
sti
sbb
fldl
add
pop
xchg
ret
add
lret
fimull
lock
clc
cmp
pop
mov
and
ficompl
pop
sub
jnp
pop
ljmp
int3
leave
adc
or
inc
mov
xchg
pop
popa
stc
jmp
sbb
idivl
ja
inc
aaa
push
fistpll
pop
data16
lret
mov
lahf
test
jmp
gs
sub
stos
jl
pushf
add
jae
xor
shl
in
add
jno
add
xchg
add
popf
out
pop
inc
dec
or
pop
icebp
jmp
mov
scas
int
packssdw
out
jle
scas
jb
in
or
hlt
mov
push
fwait
xorb
repnz
test
mov
fadds
dec
lcall
jmp
das
in
and
cmp
popa
sbb
push
inc
fmull
and
pop
insl
ljmp
push
mov
push
xor
arpl
jae
jb
mov
xchg
xchg
std
xchg
cmpsb
movsb
mov
mov
jo
jmp
xlat
cld
pop
les
mov
movsl
push
ljmp
movsl
sbb
enter
inc
add
jge
out
lret
push
jno
out
mov
aam
cmpsl
sbb
mov
or
bound
cmpsl
ja
movsb
sub
out
jo
cs
and
sahf
sti
clc
test
mov
and
insl
in
xchg
out
adc
pop
pop
cmp
push
push
xor
aaa
lea
push
and
mov
push
std
call
jge
xor
daa
shlb
mov
adc
movsl
and
cmc
scas
inc
xor
js
shll
test
sahf
and
cli
enter
xor
scas
imul
jmp
in
push
xchg
mov
mov
xchg
inc
xlat
inc
adc
push
mov
out
and
clc
fdivl
mov
loope
gs
dec
pop
mov
fwait
fs
cmp
jl
icebp
testl
fisubrl
arpl
in
jp
outsb
or
lret
lret
call
adc
sti
and
cmpsb
pop
dec
xor
jbe
mov
mov
mov
orl
and
jecxz
call
jmp
cmpsb
ss
js
repz
jg
ljmp
cmp
jl
mov
out
jb
movsb
mov
mov
ljmp
push
into
cmp
scas
cs
jb
sbb
les
nop
or
dec
lods
or
dec
lea
xchg
sub
icebp
mov
pop
jl
cli
cmpsb
xor
subl
sbb
sbb
rcrl
rcrl
pop
clc
ja
ret
and
ret
insb
cld
aas
push
mov
test
push
sbb
clc
out
in
insl
pop
cmp
xchg
bound
jl
cmp
out
push
fstp
jle
iret
cmp
xchg
fwait
pop
or
xchg
bound
mov
jo
stos
xor
pushf
dec
lods
hlt
cmpsl
incl
jp
divl
jae
out
test
inc
shl
cmp
scas
xchg
leave
arpl
fsts
push
jecxz
movl
loopne
out
adc
scas
scas
adc
sti
imul
stos
mov
pop
into
add
scas
dec
jmp
fcomps
in
sub
sbb
pop
xor
ret
mov
jmp
xor
outsl
mov
cltd
sbb
push
leave
mov
rcrb
js
clc
or
stos
movsb
and
repz
inc
and
inc
negb
repnz
enter
add
ss
push
das
and
inc
lret
pop
cmp
jno
pop
mov
mov
fcmovbe
lcall
push
dec
dec
mov
aam
sarl
mov
hlt
or
and
jno
jge
ds
xchg
int
in
xor
mov
ss
pop
repz
inc
insb
adc
adc
push
decb
scas
test
fildll
add
arpl
pop
pop
push
ja
push
pop
jbe
xchg
test
pop
cltd
repnz
sbb
inc
movsb
dec
pop
testl
ret
loope
sbb
repz
lcall
dec
pop
add
add
insb
mov
jl
scas
jge
lret
and
loopne
ljmp
mov
sti
mov
dec
push
pop
rorl
mov
iret
xor
xchg
mov
sub
popf
movsb
xchg
inc
lods
push
std
cli
sbb
fistps
cli
mov
inc
xchg
xchg
push
pushf
cmp
popf
push
outsl
cmp
pop
ficoms
sbb
int3
and
adc
jo
sbb
add
xchg
aas
jne
sbb
mov
pop
es
or
repnz
mov
cmp
mov
ret
test
out
xchg
loop
dec
jns
nop
test
stos
and
and
add
ljmpw
dec
xor
fidivl
push
fs
dec
sbb
pop
sub
das
and
sbb
sarb
rolb
sahf
decb
fistl
inc
cltd
push
cmp
js
jl
pop
dec
es
adc
lock
xor
arpl
push
dec
push
dec
and
push
imul
fnstsw
jne
mov
dec
hlt
in
or
fcoml
sub
add
inc
sub
insb
les
and
dec
push
sub
mov
cld
leave
inc
cltd
adc
and
ret
pop
mov
aad
sbb
cmp
sbb
xchg
mov
push
or
mov
pop
iret
test
sti
jno
sbb
out
mov
xor
push
ds
int3
push
in
mov
nop
fdivrs
add
cmpsl
call
ror
rcrl
test
rcll
adc
fcos
test
pop
sub
loope
add
pop
add
push
xchg
or
xor
pop
div
jp
orl
or
mov
or
mov
lret
popf
lahf
ffreep
sub
mov
cmp
mov
outsl
sub
jp
call
cmp
lea
jmp
clc
fimull
or
xchg
xor
lcall
repz
or
pop
mov
popa
js
jns
cmpsl
jle
lods
xor
in
mov
movsb
mov
fdivs
mov
add
stos
mov
cmp
push
stc
mov
or
aas
inc
adc
mov
fimuls
mov
sbb
mov
cmp
and
inc
mov
pop
push
or
insb
movsl
lea
push
and
pop
stos
push
in
cltd
adc
xor
or
divl
xchg
addb
dec
pop
sbbl
sub
sub
pop
sbb
js
ja
mov
jg
mov
add
bound
pusha
dec
cmp
push
movsb
cmp
push
sub
or
xchg
gs
cmpl
cmpsl
mov
or
mov
test
pop
shrl
movsb
mov
nop
mov
dec
sbb
xchg
pop
fnsave
mov
mov
das
push
add
int3
xor
ss
mov
inc
add
adc
mov
xor
mov
cmp
push
mov
mov
int
add
sub
fmull
pop
pop
xor
gs
repz
ret
mov
lds
mov
aas
push
xor
outsb
fbstp
sbb
outsl
outsl
stos
scas
inc
jnp
mov
rol
cltd
repz
out
test
mov
test
dec
cmp
jo
xor
aad
push
push
add
cmp
and
in
movzbl
nop
xor
lods
mov
addl
movsb
inc
add
iret
mov
inc
mov
or
ljmp
mov
les
xor
pop
jns
data16
jns
jae
in
leave
adc
inc
loopne
jge
repnz
repz
repz
sti
loopne
repnz
push
dec
filds
sahf
sarb
fbld
stos
cmc
mov
ds
repnz
xor
jle
mov
adc
cmpsb
or
scas
pop
sbb
mov
ds
sub
cmp
jnp
leave
mov
ja
roll
mov
arpl
push
int3
mov
xor
mov
lods
fsubrl
or
add
mov
jge
jecxz
jecxz
mov
clc
mov
arpl
mov
sti
mov
ss
xlat
fstp
rcr
or
push
jge
lahf
mov
jnp
push
or
jae
popa
cwtl
cmp
push
dec
pop
je
xchg
stos
out
imul
jp
pop
nop
mov
mov
sub
jge
sbb
inc
test
insb
mov
or
movsl
ficompl
sbb
jno
loopne
in
push
sub
lret
xchg
iret
movsb
mov
jp
scas
ret
out
inc
jle
rclb
aam
sbb
lock
test
push
mov
out
rorb
jns
pushf
shlb
mov
sub
xchg
je
ja
adc
lret
popf
xchg
mov
xchg
cmpsb
cld
jnp
or
movsl
pop
dec
ja
push
stos
sti
sbbl
fdivr
fucomp
imul
pop
dec
rorb
jne
jge
mov
xchg
ret
shl
mov
gs
das
xchg
movsl
mov
dec
cmp
lock
jmp
xchg
lret
cmp
mov
out
lods
pushf
js
out
gs
mov
scas
mov
dec
ljmp
fsubr
push
imul
sbb
add
in
stos
cmc
or
fwait
clc
push
ss
jns
jecxz
xchg
mov
ret
lods
push
imul
out
sub
or
js
and
test
orl
or
or
sar
lret
add
outsb
test
jle
adc
mov
lock
flds
int3
cli
xchg
inc
aas
xor
dec
loopne
and
mov
jae
in
enter
test
repz
cwtl
loope
hlt
rorl
mov
dec
rorb
jns
add
cmp
sbb
in
daa
insb
cld
inc
outsb
adc
lret
leave
xchg
in
mov
sub
xor
mov
sbb
sub
fstl
mov
jb
xor
sbb
loope
xchg
add
jge
and
sbbb
scas
xchg
adc
outsl
jle
call
clc
inc
jnp
adc
jnp
jp
xchg
popf
add
adc
dec
mov
movsl
leave
adc
xor
outsl
sbb
push
repnz
lods
je
adc
mov
adc
pop
out
xor
cwtl
repz
popf
push
lods
xor
sti
pop
jmp
inc
pop
or
jne
ljmp
pop
adc
mov
and
mov
sbb
push
stc
inc
incb
inc
mov
mov
sub
js
mov
xor
xchg
ror
push
sub
gs
data16
inc
fxam
xor
inc
stos
xchg
and
mov
or
lea
stos
scas
addr16
ljmp
cmp
rorb
xchg
stos
pushl
or
addr16
fcompl
int3
fists
or
sbb
mov
jg
xlat
and
scas
insl
dec
cwtl
gs
add
je
insb
jge
pop
or
inc
aam
rcrl
inc
adc
out
fiadds
xchg
mov
mov
in
and
movsl
jle
or
mov
subb
adc
lret
jns
test
mov
adc
int
xchg
pop
sbb
and
cmp
mov
out
sbb
ret
shrl
loope
push
mov
mov
or
test
mov
dec
push
xchg
pop
out
adc
sbb
sbb
xor
sbb
jecxz
inc
mov
outsl
mov
leave
xor
repnz
push
enter
sub
mov
mov
lahf
push
mov
inc
mov
jbe
ror
outsl
cld
fcoms
pop
inc
mov
scas
out
mov
xorb
jmp
pop
xchg
mov
and
or
jnp
or
mov
push
add
popa
adc
daa
jne
jno
notb
pop
mov
mov
and
xor
push
fidivrl
jle
jge
xchg
pop
push
xchg
sti
cmp
add
out
popf
dec
jmp
outsb
jp
cmp
test
inc
pop
push
jle
rorl
xchg
in
mov
mov
test
in
xor
or
push
pop
jge
repnz
adc
lods
scas
cmp
jbe
or
and
xchg
jg
sub
dec
adc
push
cmpsb
sub
fstps
adc
stos
out
lods
lcall
add
xor
xchg
sbb
sbb
jo
jne
aam
jecxz
stos
fnstsw
sbb
jo
mov
inc
xor
sti
test
dec
int
addl
addr16
pop
hlt
rcrl
sbb
ja
out
pop
subb
pop
sbb
push
mov
popa
stos
addr16
in
lret
rcl
out
adc
loop
sbb
je
aaa
pop
insb
jo
jno
mov
and
xor
aaa
dec
sub
jp
jp
std
scas
dec
jg
or
cmpl
js
mov
sub
adc
aas
ficomps
mov
adc
insb
jmp
push
cld
pop
jbe
xlat
dec
xchg
pand
dec
or
int
add
mov
pop
sub
imul
sub
sbb
dec
mov
cmp
mov
sti
stc
inc
xor
cli
add
imulb
adcl
aas
pushl
and
mov
call
mov
stc
int
xchg
into
jp
sarb
out
push
aaa
mov
scas
push
xchg
sbb
xchg
rorb
pusha
cwtl
push
push
push
cmp
cmpsb
leave
mov
and
mov
pushf
xor
and
jmp
jmp
ss
cmpsl
je
push
std
cmp
pusha
inc
inc
sub
out
mov
insl
ret
dec
aaa
cmp
xchg
js
shl
mov
int3
push
flds
xor
lcall
mov
cwtl
jne
hlt
ror
jns
icebp
sti
dec
dec
jno
sbb
jno
stc
and
pop
cmp
jg
imul
cmp
cmpsb
ficompl
sahf
dec
mov
fs
or
call
adc
push
and
fdivrp
sub
stos
sub
xorl
xchg
mov
nop
push
inc
jae
rcl
ret
pop
fcomps
frstor
and
cmpsb
cld
fbld
jb
pusha
scas
stos
xorl
out
and
jge
notb
pop
out
mov
xor
adc
sbb
test
lahf
cmpsl
pop
pop
nop
jns
pop
push
xchg
inc
test
outsl
cli
les
sub
sub
xchg
fisubl
sarb
cmc
gs
in
dec
loop
jle
adc
out
in
jp
pop
jl
movsl
mov
adc
lea
jno
mov
ret
rorb
rcll
pop
dec
mov
test
popf
mov
mov
mov
and
push
jg
mov
std
or
stc
cs
popf
xor
xchg
push
imulb
cmc
inc
imul
mov
dec
mov
add
ret
and
das
xchg
xchg
cli
pop
push
jmp
jge
std
inc
push
cmp
xchg
aaa
aad
stos
and
xor
out
loop
rorl
fs
sahf
cs
lods
or
inc
mov
stos
jo
pop
imul
xor
sub
push
add
xor
into
mov
and
mov
iret
cmc
jae
jecxz
pop
addl
sbb
jp
aas
scas
popa
sbb
jecxz
adc
cltd
fcoms
jae
cltd
push
jb
test
cmpsl
popf
shl
rcll
or
xor
lahf
and
pushf
inc
push
push
lods
dec
ret
lds
sbb
addr16
mov
cwtl
add
push
pop
cmp
inc
jl
or
scas
lea
pop
mov
and
xchg
int
callw
pop
lretw
sub
cmp
shl
subl
outsl
gs
or
out
push
lret
mov
adc
push
and
dec
popf
cmp
insl
ljmp
test
outsb
leave
xor
and
test
lds
xchg
stc
jae
sahf
shrb
lock
sub
cmp
in
push
stos
test
in
lods
int3
push
cmp
dec
jle
sahf
inc
xor
mov
jnp
xor
mov
dec
adc
sub
insl
mov
xchg
rcll
sbb
std
mov
push
fisubs
aam
stos
mov
inc
jge
mov
cmpsb
push
xor
sbb
push
sub
shl
cmp
mov
inc
fs
dec
xor
xchg
rcr
push
imul
mov
arpl
and
dec
jne
xchg
push
adc
mov
clc
adc
lea
and
test
sbb
icebp
dec
lret
ljmp
jle
push
jbe
adc
sbb
sbb
rcll
mov
adc
mov
xchg
jle
out
imul
test
cmpsl
out
sahf
iret
lock
jb
out
jno
inc
xor
push
mov
cli
jae
and
repz
call
imul
into
lcall
mov
repnz
pushf
fcmovnb
jecxz
scas
gs
mov
test
push
rclb
mov
mov
jno
int3
mov
movsl
push
repz
and
xchg
fldenv
sub
mov
cld
or
int
stc
into
cmc
lcall
test
jbe
js
std
sub
imul
jmp
xchg
lds
cmpsb
dec
jnp
inc
mov
add
ss
lret
icebp
inc
push
mov
ja
in
push
int
sub
dec
bndmk
scas
cmpsb
add
jmp
subb
loope
test
arpl
xchg
std
dec
jmp
mov
imul
cmp
outsb
xchg
sub
pusha
in
add
scas
movsb
push
sbb
add
or
push
repnz
jo
push
imul
scas
and
ss
ss
push
jmp
loop
pushf
or
mov
fisttpll
push
fcoml
adc
fwait
dec
dec
test
mov
dec
mov
test
inc
ljmp
push
sub
push
add
mov
loope
andb
push
or
inc
add
mov
push
pop
and
push
popa
mov
call
mov
loopne
fs
mov
jle
jl
pop
adc
repnz
ret
rep
sarb
pop
push
subb
jecxz
insb
xchg
mov
and
popa
or
sahf
jg
jmp
add
fldt
jmp
mov
enter
jns
or
test
roll
shll
xchg
xchg
call
adc
div
aaa
push
xor
andb
loopne
rcrl
outsb
push
jg
fnstenv
cmc
addr16
mov
dec
fldl
in
dec
shlb
mov
jmp
cmp
pop
inc
sub
scas
insb
xor
mov
push
and
sub
mov
fidivrs
mov
sahf
push
pop
in
sbb
or
mov
repz
xlat
lods
add
in
das
rol
dec
out
sub
aam
add
dec
cmp
and
outsl
lods
imul
fldt
fmuls
arpl
jl
ret
lea
mov
push
movsl
data16
fdiv
sbb
movsl
mov
out
xor
bswap
icebp
mov
cld
mov
jns
xchg
leave
pop
ja
pusha
in
leave
jmp
notb
mov
cwtl
xchg
adc
jl
into
clc
int
scas
gs
sbb
push
in
or
push
xchg
and
negb
sub
test
adc
rcr
push
xor
pop
pop
adc
mov
push
shlb
pop
mov
pop
pop
sti
mov
sarl
pop
rclb
aad
xchg
pop
fcmovne
cmp
adcl
lock
cmp
pop
sbb
dec
add
aas
addb
fisttpll
dec
pop
dec
movsb
pop
sbb
lods
popa
adc
lahf
xchg
cmp
and
fcoml
stc
and
and
jecxz
fbld
aaa
cwtl
fisubs
mul
ret
nop
cwtl
ficompl
jmp
cltd
jl
xchg
inc
jns
mov
loope
xchg
mov
inc
mov
test
stc
jns
fldl
mov
add
and
mov
out
insl
out
jo
fcoms
hlt
jge
mov
ficompl
lea
mov
cmp
push
xor
or
mov
dec
mov
cmp
dec
jmp
shll
out
sbbl
rolb
sbb
mov
cmpb
inc
add
ss
cwtl
leave
cli
pop
fldenv
daa
jns
cmp
adc
popa
lods
add
fiadds
push
and
out
lock
inc
int3
mov
mov
dec
pop
dec
movsl
and
enter
inc
mov
testb
loope
flds
pop
test
in
sahf
repz
mov
pop
or
add
out
push
jae
push
adc
das
jg
or
bound
push
out
add
mov
fcom
aad
dec
inc
jle
leave
pop
dec
or
push
xor
dec
push
jle
out
icebp
fcoml
inc
aad
jecxz
and
mov
mov
xchg
adc
push
cmc
int
out
inc
add
pop
xlat
push
mov
nop
add
dec
fmull
mov
outsl
shl
and
fwait
xchg
pop
mov
test
mov
mov
movl
bound
pusha
jmp
sahf
xrelease
nop
repnz
aad
xorb
cmp
pop
sbb
or
in
pop
pop
adc
cmpsl
sub
xchg
imul
jnp
repz
jnp
ja
push
das
insb
lods
xchg
out
and
push
cld
sar
enter
fcoml
movsl
or
aaa
xor
int3
aad
repz
push
cmpsb
add
aas
insb
push
xchg
and
cli
and
lahf
bound
out
insb
aad
mov
adc
insl
or
lds
adc
ds
bound
pop
mov
push
inc
sahf
aam
lds
stos
leave
clc
xchg
bnd
xchg
popf
scas
nop
mov
lds
in
adc
pop
adc
lods
rorl
test
js
sti
adc
addl
aam
inc
dec
mov
inc
cmp
sti
imul
into
ja
or
sub
insl
xchg
dec
xchg
loopne
aas
mov
mov
fwait
imull
test
clc
mov
or
push
loop
mov
push
mov
push
lds
add
mov
xchg
mov
or
insb
sub
shrb
lret
cmc
and
cmp
push
ss
es
outsl
inc
fisubl
rcll
test
pushf
jg
in
xor
insb
lods
push
cmp
idivl
lods
mov
pop
xchg
sub
dec
stos
pop
call
push
mov
out
adc
mov
mov
dec
lret
loop
xor
mov
push
pop
inc
ret
jno
std
loop
add
rdpmc
mov
sub
adc
es
and
jl
fnstsw
rorl
xor
jb
lock
inc
inc
jae
or
in
inc
pop
or
cmp
lds
hlt
jo
data16
cwtl
cmpl
push
lds
repz
setne
dec
push
test
iret
movsl
push
imul
jae
jp
xor
adc
in
push
jnp
aam
dec
mov
imul
mov
lcall
sbb
xchg
dec
mov
and
pop
mov
xchg
popf
adc
repnz
inc
mov
insb
out
clc
out
out
ficomps
arpl
lret
dec
dec
or
mov
push
or
inc
dec
mov
in
fisubrs
or
test
pop
lcall
mov
xchg
push
sbbl
pop
xchg
xlat
pop
stos
test
mov
in
addl
xchg
scas
inc
fisubs
fs
jne
jne
pop
mov
in
mov
outsb
xchg
mov
test
xchg
sbb
dec
jo
push
jecxz
aas
mov
xchg
popa
imul
mov
jo
cwtl
popa
xorl
mov
sbb
movsl
movsl
xchg
jg
in
gs
imul
mov
and
or
fs
js
sub
sahf
mov
ret
daa
fdivs
push
xor
enter
cs
in
shr
pop
sahf
out
or
in
dec
jmp
xchg
add
fisttpll
xchg
push
insb
cmp
dec
test
mov
xor
addr16
push
jge
jae
scas
insl
pop
out
filds
sub
lock
fwait
cwtl
loopne
sub
cmp
mov
jns
cmc
add
es
shlb
fidivrs
jl
add
ss
shrb
rcl
iret
loop
dec
add
sbb
fmuls
imul
pop
dec
hlt
add
mov
fcompl
sti
mov
stc
ficoml
mov
and
loop
pop
xor
inc
out
mov
fcompl
popa
cs
ja
stos
push
push
daa
cmp
ja
pop
in
inc
shl
add
je
addb
fcmovnbe
repz
push
push
mov
cmp
mov
jb
xor
or
xor
in
push
ret
or
push
mov
and
push
or
cmp
add
jbe
mov
jae
jp
and
add
popa
mov
jmp
pop
aad
mov
jmp
out
lds
xchg
push
xlat
iret
xchg
mov
and
dec
pop
es
push
push
lock
cmp
pushl
or
lcall
cmp
mov
or
popf
les
cli
inc
push
stos
dec
dec
xor
mov
cmp
dec
sub
push
stc
or
jb
sub
add
clc
pop
cmp
insl
lock
xor
push
lods
cmpsl
pop
pop
stos
sti
push
ror
jo
push
jmp
jae
xor
pusha
icebp
lock
mov
test
shl
jmp
dec
and
sbbb
and
sub
sub
push
mov
ljmp
inc
test
jge
test
popa
rcrb
or
xchg
cmpsb
hlt
pushf
add
stos
cmp
rclb
lret
out
les
arpl
in
int3
sti
sub
int
mov
mov
mov
push
shll
shll
pop
mov
jp
iret
dec
sub
arpl
loop
add
pop
push
and
roll
daa
jns
cmp
push
loope
add
ror
adc
add
ja
sti
xchg
lea
mov
add
lock
sub
xchg
and
call
pop
frstor
daa
pop
pop
pushf
adc
mov
xchg
fcoml
fsubrp
sub
push
mov
xor
rcr
cmpsl
pop
mov
movsb
jmp
add
adc
adc
ret
out
inc
mov
mov
mov
jnp
test
or
mov
xchg
ret
push
dec
mov
fmuls
lods
dec
push
sbb
push
xchg
imulb
xchg
xor
adc
cmpsl
push
scas
pop
cmpsl
inc
adc
inc
jge
adc
pop
pop
cli
sbb
sub
lcall
xchg
or
stos
mulw
iret
pop
popa
movsl
inc
cmc
cmpsb
andl
loopne
or
int
push
rolb
cli
and
pushf
out
ror
cmp
dec
nop
addl
enter
andb
add
imul
xor
add
mov
cmc
jmp
adc
aaa
mov
push
adcl
loopne
or
pop
test
movsl
shrb
aad
xchg
pop
cmp
push
lret
and
jmp
push
pop
lods
xor
xchg
pop
push
repnz
ja
and
pop
mov
add
shrl
fwait
rolb
nop
dec
iret
pop
mov
xchg
shlb
dec
mov
lock
add
jb
mov
aam
push
cmp
pop
adc
ret
push
into
adc
jne
pop
mov
add
adc
or
repnz
mov
pop
les
mov
das
push
lret
inc
xchg
mov
iret
add
or
push
shlb
fdivrs
xor
ficompl
jae
sbb
mov
xor
pop
sbb
mov
jl
fcoms
cs
cmpsb
jno
cmp
and
lods
sbb
and
ror
mov
xlat
xchg
push
test
rol
sbb
fildl
test
cmp
call
and
das
je
lea
push
fldl
aaa
sub
push
xchg
lcall
and
outsb
add
dec
adc
dec
sub
fwait
shll
popf
cmc
icebp
inc
call
int
imulb
xchg
jb
sub
xor
push
cltd
loope
xchg
and
mov
mov
mov
int3
adc
in
add
mov
cmp
aaa
rclb
and
les
or
fbld
and
add
inc
sbb
push
fnsave
cld
je
ljmp
das
aam
imul
dec
adc
mov
pop
cmpsl
fcmovnbe
cmp
mov
xchg
mov
rcr
xchg
jg
cmpsb
cmp
and
cld
jg
cli
aas
add
daa
push
rolb
imul
dec
sbb
jb
stc
mov
push
and
mov
or
das
pushf
ds
xlat
mov
adc
jo
mov
add
dec
cmp
cmp
repnz
inc
mov
pop
fists
or
adc
neg
nop
shr
popf
add
cmp
xor
mov
movsl
stos
mov
cltd
mov
rcr
jne
lds
fidivrs
movsb
enter
push
cmp
xorb
jno
lret
dec
inc
sbb
mov
mov
pop
out
loope
fnsave
adc
negl
cmpsl
pusha
ja
cld
leave
dec
loope
xor
jne
xor
and
mov
mov
push
or
jo
hlt
push
sar
mov
adc
xrelease
dec
add
jae
into
lods
bound
js
loop
stc
aam
pop
mov
push
stc
jne
fsubp
pop
adc
hlt
and
test
ret
and
in
test
dec
nop
loop
ror
fs
cmpsl
push
gs
dec
pop
jae
loop
jl
mov
in
jge
lds
adc
insl
fcompl
mov
sbb
sbb
mov
in
push
sbb
and
aad
insl
mov
test
jo
nop
movntq
cmpsb
rolb
mov
ret
leave
lcall
and
adc
xor
lea
lods
in
scas
dec
pop
loopne
mov
lock
sub
cmp
test
pop
gs
clc
mov
mov
into
jecxz
test
jb
lahf
daa
rorl
loop
into
test
sbb
xchg
fcoml
add
icebp
pop
sub
mov
gs
test
ja
cmc
repnz
cmp
sahf
and
dec
push
lret
in
jb
pushf
aas
inc
out
adc
push
xor
mov
imul
outsb
fistps
movsb
cwtl
pop
sahf
mov
mov
in
lahf
js
arpl
inc
xchg
mov
push
sbb
and
bound
cmp
mov
iret
lcall
mov
mov
fnstenv
ljmp
xchg
xchg
jb
repz
xchg
lea
icebp
mov
add
and
xor
mov
scas
movsl
mov
int3
out
stos
imul
inc
inc
add
enter
dec
mov
and
lahf
scas
add
sbb
insl
sti
sarb
pop
and
jl
insb
sti
out
mul
negl
xor
vpsrlq
jl
jg
cld
cmp
mov
inc
arpl
nop
cmp
mov
cmp
or
and
xchg
pop
push
cmp
pop
adc
cmp
shrb
add
imul
or
pop
xchg
movsl
je
fwait
xchg
out
cltd
sbb
rcll
sub
mov
insl
pushf
sub
icebp
or
mov
loope
test
test
imul
add
roll
sub
and
sarb
shl
dec
mov
sbb
jb
movsl
cmp
mov
push
and
jo
mov
jecxz
cmp
xchg
movsl
cmp
mov
sarl
push
test
scas
ljmp
sahf
inc
mov
mov
lret
negl
addr16
sbb
push
divl
imul
mov
rorl
adcb
das
xor
mov
lock
lret
mov
sbb
idivl
scas
sbb
sub
int
scas
outsb
daa
iret
stos
and
stos
stc
ret
insl
inc
out
mov
mov
dec
cmc
jp
and
push
shll
and
cmp
das
fcmovb
dec
push
nop
mov
lods
cld
sbb
mov
sbb
inc
test
and
or
add
out
inc
enter
pop
jno
das
sub
das
push
sarl
cmpl
xchg
rclb
xchg
push
outsl
sarl
sarb
push
mov
xchg
cmpsl
jbe
push
sub
pop
cmc
mov
sbb
or
adc
lret
fs
sbb
roll
jecxz
lock
fildl
jmp
ss
sti
sub
fisubs
pop
add
hlt
scas
jmp
xlat
mov
in
movsl
cmp
xchg
sub
cmp
cmp
jmp
movb
into
into
cltd
fwait
dec
jmp
add
xchg
jl
and
add
dec
pop
push
pop
xchg
hlt
add
ret
movsb
dec
push
sbb
adc
xor
testl
sub
cmc
cmpsb
lret
and
shr
gs
imul
adc
leave
rol
ss
addr16
pop
or
jb
in
or
mov
mov
cmpl
mov
mov
and
subb
shr
and
cmpsl
aam
fs
mov
xor
push
nop
jmp
push
out
mov
mov
inc
xor
jnp
inc
shlb
std
xchg
cmpsb
cmpsl
outsl
inc
dec
or
test
xor
mov
xor
stc
push
add
popf
enter
jmp
mov
sbbl
or
mov
adc
cmp
mov
leave
loopne
or
sub
push
pop
push
hlt
sub
adc
test
jns
pop
jb
test
loope
add
jne
xchg
cs
mov
lods
pop
test
inc
or
cs
lret
mov
es
cld
repnz
dec
aam
add
dec
cmc
je
mov
mov
inc
lret
add
test
scas
aad
jmp
xchg
lds
mov
ljmp
pop
cmp
cmp
mov
bsr
xor
mov
mov
int
cwtl
bnd
aam
mov
xor
adc
mov
incb
mov
mov
sbb
push
ja
push
cmp
sbb
movsb
or
dec
lret
fsts
popf
cld
cs
repz
mov
adc
xlat
shlb
pop
aaa
outsb
xchg
je
push
sbb
lods
into
add
xorl
cmp
inc
imul
mov
mov
jae
add
scas
mov
mov
or
jo
dec
mov
iret
scas
outsb
sbb
cltd
aam
rorl
rcl
push
lcall
loope
jb
and
cli
aam
inc
dec
sub
jl
lcall
mov
fidivs
or
or
ret
insb
mov
sbbb
mov
mov
jae
xor
xlat
adc
pop
lods
aaa
sahf
lods
test
out
mov
inc
dec
cmp
push
inc
dec
aam
cmpsl
xor
lret
enter
dec
roll
das
mov
jp
das
add
xchg
dec
sbb
jae
fistl
je
scas
fsub
gs
sub
and
sbb
std
sbb
movsw
and
fisttpl
mov
out
pop
outsl
out
cmp
lock
pop
pop
mov
inc
data16
gs
and
fadd
xor
and
or
fadd
test
mov
inc
jle
sbb
inc
xor
push
aas
cmp
mov
or
out
add
lea
imull
adc
ret
and
pop
mov
lret
inc
mov
mov
mov
test
push
lock
test
xchg
int3
mov
sub
jnp
movsl
loopne
dec
pop
adc
xor
mov
push
imul
xchg
fisubrs
rcrb
unpcklps
rcrl
sub
pop
adcb
sub
jp
test
jno
xchg
stc
mov
aas
test
in
and
imul
in
sub
pop
inc
sahf
jecxz
and
arpl
lods
scas
lcall
negb
sti
xor
cmpsb
mov
mov
ljmp
pop
jne
cmp
popa
xor
xor
xor
rorl
mov
xchg
mov
pop
negl
into
sub
out
aas
jo
push
adc
pop
stc
sbb
fldt
test
out
mov
sbb
mov
hlt
scas
out
jb
loopne
or
leave
inc
push
lret
in
in
arpl
aad
mov
cmp
or
frstor
adc
scas
test
pop
mov
es
dec
aam
mov
mov
lods
jecxz
movsl
xchg
ds
sbb
mov
pop
and
sbb
inc
in
aad
outsb
sbb
ss
push
jns
pop
xchg
mov
push
lcall
int3
test
jbe
jns
fwait
rorb
xchg
mov
es
mov
sub
rep
fisubrl
repnz
ja
repz
mov
jno
scas
xchg
jle
adc
push
aam
lods
movsl
loope
cs
cmp
jp
in
mov
arpl
mov
jmp
sbb
push
daa
stos
jo
xchg
push
jge
rcrl
fcmovu
rorb
cmp
xor
push
add
sub
xor
in
insb
sbb
out
sbb
iret
or
pop
pop
jle
cli
faddl
cli
aad
dec
and
mov
ret
or
xor
subb
sbb
pop
iret
in
hlt
adc
sub
insb
je
inc
inc
push
movsl
mov
cmp
cmpsb
inc
and
repnz
fprem
pop
jg
mov
or
push
mov
xchg
dec
leave
cs
jns
sarl
fmuls
cmp
repnz
outsl
pop
jp
loopne
ja
test
arpl
fstps
ljmp
mov
test
dec
mov
or
pop
jbe
in
xchg
push
or
rcrb
cmp
or
fmull
sub
mov
jns
add
aam
andb
mov
out
ss
mov
fstl
cmp
xchg
fiadds
jecxz
inc
or
mov
repz
mov
mov
dec
ret
rcrb
xchg
movsb
jns
inc
out
xchg
ficomps
arpl
pop
daa
jg
pop
adc
add
iret
orl
nop
xchg
out
pop
jmp
and
movsl
jbe
pop
cmpsb
push
jle
mov
int3
sub
xor
movsl
dec
push
inc
int3
xor
inc
inc
cld
add
test
add
outsb
xchg
enter
scas
ds
and
dec
fistps
pop
or
insl
ret
adcb
push
pop
mov
icebp
int3
bound
pop
test
lods
push
add
and
sub
mov
push
sbb
je
or
subl
aaa
cwtl
pushf
lret
jns
push
push
or
push
std
xchg
adc
daa
clc
dec
bnd
adc
jmp
cmc
xchg
jmp
dec
fcomps
mov
pop
xor
rcll
loop
sbb
enter
mov
jg
shl
hlt
pushf
add
inc
inc
push
insb
cmc
inc
xchg
sub
mov
ret
push
int3
jno
outsb
and
xchg
out
or
xor
icebp
mov
mov
push
push
stos
mov
or
inc
xor
sbb
idivl
xchg
inc
jno
and
lock
subl
jno
pop
test
movsl
aam
popa
fs
adc
cmp
cmp
jmp
jae
push
out
cmp
mov
je
mov
or
addb
cs
cmp
jo
sbbl
sbb
enter
push
push
sbb
fildll
nop
cmp
lods
test
push
mov
sbb
out
mov
xor
addr16
jno
lock
jbe
push
sarb
inc
cmpsl
pop
push
jb
push
xor
cli
movsl
or
adc
cs
xor
or
push
enter
mov
sub
popf
jbe
push
or
iret
xor
cmp
test
push
stos
fwait
ret
imul
adc
push
jp
cltd
lea
ss
mov
add
dec
pushf
jecxz
repz
push
jle
mov
jp
decl
cmp
xor
or
pop
push
pusha
dec
adc
jl
jno
xor
add
cmp
cld
adcl
loopne
ja
lret
push
in
xlat
push
lcall
mov
in
cmpb
cmp
mov
adc
jb
shll
sub
jmp
or
jge
test
and
inc
repz
loopne
cmp
push
mov
aam
push
cs
cmp
shll
sub
enter
xchg
mov
push
sti
push
negl
fdivs
or
mov
mov
addl
popa
sub
mul
fs
rcrb
inc
cmp
dec
mov
ljmp
mov
add
cmpsb
pop
clc
mov
add
movsb
test
inc
jge
mul
inc
mov
jmp
cmp
cmp
dec
icebp
int
insl
fsubr
clc
sbb
sti
or
aas
mov
dec
add
loop
pop
cmp
sub
mov
test
in
repnz
pop
mov
stc
lcall
jbe
imulb
or
jge
outsl
ljmp
test
fisubl
addl
or
and
scas
movsl
mov
push
mov
xchg
pop
mov
lds
fimull
andl
pop
or
dec
loope
ds
jle
fiaddl
and
mov
xor
clc
notb
adc
jno
pop
mov
in
xchg
ljmp
leave
ret
mov
aaa
mov
jne
lea
lods
push
in
adcb
js
movsb
insl
fldl
jne
std
jmp
stos
xchg
nop
popa
imull
or
push
jl
lret
cmpsb
and
popf
push
scas
cli
ds
lret
scas
out
pop
dec
stos
mov
decl
in
fcomps
dec
sti
inc
stc
or
jge
xchg
fmul
push
fstpl
dec
and
gs
ret
mov
fsubs
and
xchg
cmp
mov
jno
add
scas
ds
inc
add
cmp
lods
lcall
inc
mov
sbb
testb
adc
ss
shll
sub
test
out
sub
mov
fstps
mov
lock
sub
jb
mov
pushf
sbb
mov
aas
lahf
cmpsb
jbe
cmp
cmp
movsl
jbe
jbe
mov
dec
jp
fs
std
divl
adc
pop
test
cmp
lds
arpl
sarb
ljmp
push
mov
cmp
jns
push
xor
pop
pop
lods
push
pop
sbb
jle
mov
mov
inc
les
fnstcw
pop
xor
fists
jmp
mov
jg
lcall
mov
ja
sbb
mov
sbb
mov
or
repz
out
pop
cmpsb
in
inc
subb
pushf
negb
sbb
adc
or
mov
call
jp
imul
push
jo
cmpl
hlt
mov
shll
pop
fstpt
or
out
dec
mov
pop
and
fistpl
sub
test
int
add
cmpsb
push
int
outsb
stos
adc
fbstp
in
idivl
cmp
out
push
divl
mov
cmp
jle
ret
test
shrb
xchg
inc
pop
adc
lret
and
xor
jbe
std
and
insl
movsb
jne
mov
and
pop
xlat
in
mov
inc
arpl
dec
int
push
movsb
push
mov
dec
xchg
or
scas
lahf
or
inc
jp
inc
cs
add
cmpsb
pop
pop
sub
push
push
jmp
jno
testb
arpl
jae
push
xchg
daa
xchg
sub
stos
sbb
mov
rorb
push
xor
in
sub
jge
in
popf
and
jae
cs
push
adc
jle
dec
xor
out
cmc
jbe
add
lock
xlat
cmp
or
add
push
test
dec
mov
fwait
cmc
ficoml
enter
push
cmp
and
lock
push
subb
aas
or
push
mov
testb
sub
lahf
and
jge
mov
lahf
mov
push
push
pop
push
int
xor
cmp
out
aas
xor
mov
lahf
xor
je
dec
jl
sub
push
imul
cmpsl
shlb
inc
insl
pop
jae
in
dec
push
icebp
jl
pushf
mov
xchg
dec
js
or
sti
repnz
add
sti
push
test
cld
stos
hlt
and
and
sbb
push
addb
sbb
test
cmpsb
outsb
push
scas
loopne
lods
sub
or
xchg
in
jb
cmp
ljmp
dec
mov
addb
hlt
push
cs
ja
hlt
jmp
repnz
push
mov
idivl
ds
fsubl
add
in
bound
vpextrb
aas
xchg
xlat
mov
ret
cld
shlb
sbb
or
inc
jno
std
mov
push
pushl
rcrl
cmpsl
push
test
popf
cld
inc
pop
mov
les
scas
jae
js
add
jge
gs
xor
cmp
pushf
adc
jmp
rcrl
out
mov
fsts
sub
xor
add
adc
mov
xor
fidivrs
clc
add
xchg
imul
sbb
rorl
jp
cwtl
xchg
repz
rol
fnstcw
in
adc
or
jg
gs
xchg
std
inc
fisubs
sti
mov
xchg
cwtl
aam
sbb
aam
outsb
mov
push
mov
outsb
in
lods
inc
pop
sub
jmp
xlat
test
xlat
pop
loop
loopne
movb
out
jl
and
fnsetpm(287
adc
jmp
sub
mov
cmpsb
mulb
lock
sub
xchg
out
add
sbb
mov
popl
mov
lret
pop
scas
mov
cmp
into
movsl
mov
pop
mov
push
inc
jle
inc
mov
push
pop
mov
fistps
sahf
bound
data16
outsb
lahf
nop
sbb
lret
inc
pop
pop
mov
dec
xchg
pushf
and
inc
fildll
bound
aaa
push
lock
popa
in
das
das
jmp
lahf
xor
popa
adc
add
add
and
pop
xor
sub
addr16
lods
lea
mov
cmc
pop
dec
mov
sbb
inc
jmp
das
pop
rep
push
loop
inc
jno
and
addr16
jge
movsb
dec
pop
xchg
jl
dec
push
mov
std
popa
and
nop
inc
fldcw
mov
call
scas
xchg
xchg
cmp
in
scas
adc
pusha
sub
pop
or
add
mov
out
adc
stc
lea
jno
xlat
rorb
cmc
mov
shlb
repnz
lret
mov
add
pop
add
scas
cld
aas
pushl
inc
xor
std
or
es
pop
push
inc
mov
ljmp
xchg
or
mov
sbb
xor
sub
test
into
push
push
les
inc
or
out
scas
stc
or
and
sbb
pop
pop
xchg
lahf
fsts
mov
popa
pusha
ficoms
arpl
out
mov
xchg
sbb
adc
or
lret
sbb
jb
ret
push
das
or
dec
ljmp
and
lcall
sbb
dec
mov
mov
js
push
jl
adc
adc
stos
xor
mov
sbb
mov
cmpl
fdivrp
fnsave
add
mov
ret
push
jnp
insb
in
into
xor
pop
xchg
jle
adc
icebp
push
in
popf
stc
loope
and
testl
adc
out
das
add
add
int3
mov
mov
jbe
daa
mov
push
out
jg
fs
mov
adc
addr16
shrl
mov
int3
in
fsubrs
scas
xor
fldl
out
sbb
xlat
cld
xlat
jae
mov
js
mov
dec
mov
xor
call
addl
mov
jne
insl
lret
xor
popa
push
and
inc
lret
fs
or
inc
push
nop
mov
imul
fisttps
jl
xchg
adcb
test
and
and
ja
into
adcb
or
pop
out
fwait
mov
aas
jae
or
lret
cltd
popf
and
jmp
test
mov
stos
xor
lods
xor
in
inc
xor
aaa
inc
sub
dec
insb
sarb
lret
fwait
xchg
icebp
imul
mov
test
and
xlat
mov
jns
mov
inc
or
add
leave
ffreep
xchg
int
add
clc
sbb
or
fstps
mov
sub
xchg
cmp
sti
stos
stos
or
leave
add
mov
sub
in
mov
movntq
out
add
mov
mov
xor
pop
pushf
pop
xchg
sahf
mov
in
pop
dec
aas
xchg
fwait
stc
insl
fldl
popa
cmp
sbb
adcl
in
pop
movsl
push
aad
aad
flds
cli
pop
and
jecxz
inc
lahf
adc
aam
cs
mov
in
nop
cmp
imul
inc
cmp
lods
popf
iret
jne
mov
scas
push
mov
inc
sarl
movsl
scas
xor
stos
inc
rcll
and
test
stos
loopne
xor
int3
insb
lcall
repnz
rdmsr
popf
jl
mov
inc
push
pushf
cmp
xchg
jp
fadds
ja
test
adc
insb
popa
lahf
push
sub
lret
lods
push
xchg
addl
lret
mov
inc
int
arpl
fcomip
inc
movsl
xchg
movsb
aaa
mov
xor
adc
mov
out
or
xorb
loop
mov
cmpsl
pop
and
cmpsl
inc
cmc
lea
push
jo
std
jo
leave
aaa
mov
xchg
inc
rclb
data16
lds
gs
outsl
rcrb
mov
mov
adc
out
out
xchg
fidivrl
xchg
leave
jbe
mov
std
adc
jle
loop
add
lcall
bound
and
cmp
xor
xor
mov
test
mov
and
jno,pt
inc
xchg
mov
jge
fwait
sbb
fwait
jno
enter
icebp
xor
insb
cmpsb
add
pop
jmp
cltd
sbb
mov
sti
xchg
dec
sbb
xor
inc
mov
sub
dec
lcall
inc
rcrl
mov
mov
adc
push
sub
sti
jb
mov
jmp
push
lcall
xchg
and
cs
aas
int
int
xchg
push
sbb
icebp
rorb
pop
jle
xor
int3
hlt
mov
push
xor
clc
cmp
sbb
fwait
mov
popa
pop
mov
xchg
stos
leave
dec
pop
push
and
mov
aam
pop
inc
es
popf
xchg
cmp
lods
in
mov
in
add
push
mov
sbb
in
mov
call
pop
push
fistpl
add
cmp
push
test
xchg
aas
cmp
fsts
into
jno
jmp
jo
push
adc
sbb
or
orb
mov
sbb
dec
cmp
fistl
sbb
gs
mov
sbb
mov
sbb
add
ds
sbb
cmpb
xchg
push
ret
push
test
adc
lcall
enter
mov
sub
test
or
xorb
mov
lods
dec
dec
jno
int
xlat
scas
sub
add
dec
ss
fwait
inc
clc
shrl
mov
inc
pusha
jl
cmp
stos
mov
jae
mov
stos
ficoms
mov
mov
inc
loop
lret
mov
das
cld
jb
popf
mov
adc
movsl
incb
cld
jb
xchg
aad
popf
xchg
aas
xchg
dec
jb
and
sahf
xor
mov
in
ja
js
mov
inc
jp
clc
add
cmp
aas
xchg
movsb
in
mov
push
sub
std
in
dec
push
jg
xchg
es
xlat
rolb
es
and
mov
mov
sbb
and
or
and
inc
repz
mov
stos
insl
xchg
imul
inc
dec
xchg
in
inc
test
push
xchg
inc
shll
int3
adc
scas
clc
or
fidivl
and
outsl
lock
adc
push
dec
nop
cmpsl
scas
adc
insl
lods
ret
adc
or
out
rclb
cmpsb
dec
gs
loope
xchg
sbb
sub
pop
mov
push
fnstsw
imul
add
lret
xlat
jecxz
sbb
mov
ljmp
js
mov
xchg
cs
xlat
clc
push
xor
int
adc
ret
sbb
iret
dec
adc
adc
call
andb
sahf
shr
push
adc
loopne
cmp
aad
lods
dec
in
fdivrl
add
cmp
arpl
pop
imul
push
lds
mov
loopne
sub
incl
loope
fcmovne
ret
arpl
pop
or
das
mov
push
insl
test
adc
bswap
inc
out
lret
mov
repnz
clc
shrl
lret
cmc
and
loopne
inc
cmpl
mov
roll
leave
cmp
xor
rclb
pushf
adc
arpl
clc
gs
push
int3
cmp
mov
xchg
enter
fisubrl
fcomp
or
adc
push
in
mov
test
stos
lods
lret
test
mov
xchg
insb
xlat
sub
mov
sti
sub
ljmp
scas
shrl
push
xchg
cmpsb
or
scas
aaa
jge
pop
sbb
mov
xor
dec
dec
cltd
call
lret
icebp
dec
movsb
push
mov
xor
jae
out
fdiv
add
cli
or
or
add
sub
adc
das
pop
sub
adc
xchg
outsl
jae
xchg
sub
scas
std
mov
call
sub
inc
int3
xchg
sbb
xchg
stc
arpl
pop
xor
pop
subb
push
mov
xchg
jl
jge
out
lret
mov
lret
xor
xchg
leave
mov
aad
push
ja
lods
adc
lea
stc
jle
mov
inc
inc
iret
pop
pop
scas
int
lea
pop
jnp
imul
insb
or
adc
inc
fwait
test
inc
js
bound
mov
cmp
push
xor
notl
mov
ss
pop
xchg
cmpsb
test
mov
sub
lods
push
jmp
pop
jb
sti
mov
in
rcrl
xchg
jl
lods
push
jge
aas
push
int
mov
add
pop
enter
xchg
mov
dec
xchg
cmp
cmc
jnp
mov
jnp
cmpsb
fcomps
test
push
push
push
loop
bound
or
add
cmp
imul
mov
dec
mov
hlt
ret
ds
lods
aad
mov
mov
icebp
fsubrl
mov
loop
gs
adc
xor
lahf
sbb
ljmp
jg
push
inc
inc
fldcw
in
out
insb
dec
xor
mov
les
aad
cltd
stos
lods
adcl
scas
adc
je
mov
dec
fdivr
mov
jge
mov
inc
inc
xor
int
add
mov
push
cltd
inc
es
xor
pop
adc
mov
mov
jle
xchg
push
mov
mov
fildll
mov
dec
iret
hlt
icebp
cld
xor
cmp
mov
xlat
mov
xchg
sub
int
mov
sarl
pop
popf
push
and
lds
push
cs
ja
mov
mov
aas
out
pop
lcall
iret
ds
sub
sbb
xchg
and
lods
mov
sub
test
sahf
loop
xchg
mov
add
repnz
stc
fstpt
jne
jno
lea
jp
jno
or
pop
and
fadds
sbbl
ret
sarl
scas
adc
out
jnp
lods
mov
mov
jmp
adc
into
mov
les
clc
push
pop
xchg
es
add
ret
lret
stos
xor
pushf
pop
mov
stos
ds
lret
mov
fdiv
sbb
cltd
xchg
jge
jl
xor
jns
adc
fldenv
dec
inc
imul
dec
push
vmovhps
pushl
inc
mov
int3
icebp
nop
test
mov
jge
icebp
add
inc
outsl
mov
jmp
jb
loopne
js
inc
cmpsb
fwait
mov
cld
push
jmp
mov
cmp
shll
lahf
mov
mov
push
add
push
lahf
in
cmp
popa
sti
mov
popf
es
and
and
pop
jle
pop
test
pop
push
lock
push
add
shrl
xor
les
or
scas
xor
loopne,pn
xchg
mov
testb
sbb
shr
orb
jne
xor
insl
in
push
or
enter
pop
bound
fnstsw
outsb
shll
fldcw
pop
push
mov
sbb
lock
ret
cmp
inc
ljmp
xchg
cs
pop
cmp
cmpb
gs
dec
mov
pop
jo
lock
add
fwait
add
inc
mov
dec
lahf
movsl
adcl
addl
mov
shll
insl
fs
movb
mov
push
xor
js
popf
std
sub
ror
dec
out
xlat
fstpl
add
xor
or
inc
leave
and
inc
xchg
xor
int3
mov
and
cmp
testb
or
jge
sahf
mov
cmp
add
in
dec
mov
loop
js
imul
jno
not
jnp
in
xchg
ja
push
ja
push
cwtl
xchg
movsb
xor
xor
cmpsl
push
xchg
inc
add
lock
hlt
xlat
or
jae
int3
xchg
lcall
lock
fmull
xor
sbb
shrl
test
nop
mov
test
add
mov
aam
adc
lret
pop
jae
mov
aad
leave
jb
sub
push
stc
cltd
iret
imul
outsb
lret
xor
sub
jnp
ljmp
imull
adc
repnz
movsb
and
jecxz
repnz
jbe
stc
je
add
aad
ds
xchg
xchg
adc
cmp
push
mov
enter
sbb
push
imul
inc
int
pop
fstl
stos
adc
inc
sbb
and
cmp
lea
and
push
movsl
xor
dec
out
push
cmc
shrb
mov
arpl
or
pushf
test
cli
pop
pop
fdiv
add
adc
add
inc
js
in
cltd
negb
jbe
rcrb
jmp
mov
lcall
xchg
xchg
sbb
xchg
and
loopne
cld
push
out
lock
inc
inc
das
or
int
je
lods
insb
cli
xor
ficompl
and
xchg
pop
push
mov
rcrb
mov
movsl
data16
imul
push
jg
jmp
mov
sbb
adc
orb
sub
push
int3
and
mov
repnz
fnsave
sti
inc
push
shlb
dec
sbb
mov
shlb
adc
out
fcmovnbe
push
mov
jae
xor
jb
out
sbb
sub
add
mov
jg
jae
dec
nop
push
rorl
out
sarw
jbe
cli
insl
pop
insb
cli
pop
mov
pushf
daa
fstps
addr16
fwait
inc
mov
adc
stc
lods
shrl
cmp
push
imul
pop
cli
popa
sahf
clc
cmp
xor
jnp
push
lea
mov
in
push
mov
shl
pop
orl
fsub
scas
xchg
jo
pop
push
fistpl
dec
mov
shll
repz
movsl
int3
cmpl
fidivs
pusha
xchg
mov
popa
shl
and
mov
mov
mov
add
lret
pop
add
insb
push
js
mov
inc
jge
jnp
push
adcl
int
push
mov
xor
int
pop
xor
or
je
pop
mov
out
lret
lcall
fdivrs
fisttpl
xchg
mov
xchg
inc
mov
mov
jge
ret
xchg
lods
inc
out
push
lret
inc
adc
ret
xchg
xor
ja
adc
cli
jmp
mov
xor
push
add
lods
jp
insl
inc
cmp
jno
scas
sbbb
pusha
adc
or
or
scas
and
les
pop
sbb
fs
lea
cmpsl
inc
and
inc
mov
std
daa
daa
jge
ffree
std
mov
cwtl
xor
add
lret
movsl
stos
lret
sbb
cmp
sub
daa
push
inc
jecxz
call
in
ja
sahf
pop
imul
jmp
pop
and
hlt
popf
and
dec
push
inc
cmpsl
xor
dec
mov
out
fisttpl
in
imulb
jnp
into
cmp
loopne
icebp
test
xor
push
jbe
pop
es
add
or
inc
xchg
test
int3
pop
sbb
shll
cmp
enter
pop
js
add
or
mov
mov
addl
pop
fisubl
jmp
movsl
add
push
leave
mov
lahf
lret
js
mov
ret
add
adc
shll
xlat
scas
imull
cmp
sbb
js
push
pop
add
push
lcall
movsb
sub
push
dec
mov
cmp
dec
sub
fwait
xor
adc
and
sub
pop
jae
push
imul
pop
test
sbb
pop
subb
xor
jns
jge
pop
push
push
and
mov
sub
insl
fidivl
mov
cmp
ss
xor
xor
sbb
push
rcll
test
negb
shll
ret
je
adc
clc
lods
jecxz
add
cmp
in
pop
in
jle
daa
and
dec
push
sub
mov
arpl
lods
push
and
dec
les
popf
push
adc
dec
cmp
stc
orb
jle
aas
inc
pushf
stc
rclb
mov
les
jnp
jae
das
andl
jmp
mov
xor
sub
hlt
push
lret
or
lds
inc
xchg
out
cmp
subl
cmpsl
or
ds
inc
mov
loopne
jno,pn
pop
sub
shl
xchg
sub
hlt
jl
cmp
imul
scas
mov
sbb
dec
jo
push
jmp
or
inc
mov
pop
fs
jmp
je
cmp
sarl
jne
push
loop
int
leave
in
pushf
icebp
adc
imul
ficompl
pop
mov
pop
xchg
out
and
mov
cmp
xchg
pop
in
push
and
sbb
fidivrs
push
adc
pusha
cmp
fists
outsl
stos
adc
loop
loop
pushf
test
nop
ss
rcl
add
imul
sub
push
fwait
cmc
jb
movsb
repz
pop
inc
rcrl
es
push
pop
das
inc
addb
xchg
insb
mov
adc
clc
fs
stc
cmpsl
inc
sti
ret
mov
or
pusha
out
insb
push
xor
xor
dec
movsl
and
ss
lret
mov
icebp
test
call
sub
dec
and
ljmp
xchg
adc
rorl
mov
cmp
add
data16
cmp
in
push
scas
push
push
icebp
shrb
xchg
inc
xchg
pop
mov
jns
pop
ror
cmp
daa
cwtl
push
adc
mov
es
jl
and
jecxz
xchg
pusha
in
dec
dec
cmp
fidivl
cmp
sub
mov
rcll
fiaddl
lret
cmp
dec
jne
int
addr16
add
xchg
imul
mov
and
sbb
or
sbb
jns
mov
cmp
xchg
lods
xchg
and
call
dec
scas
out
or
push
daa
out
ds
das
or
popf
in
mov
stc
loope
push
jp
xchg
hlt
icebp
and
sub
mov
push
test
test
cmp
sbb
mov
out
mov
mov
ds
jns
dec
add
lds
dec
jb
and
xor
rcr
rcr
mov
and
jecxz
pop
fsubrl
xchg
test
adc
adc
or
dec
cmc
mov
test
gs
cltd
ja
sti
or
jbe
mov
adc
jle
shrb
and
ljmp
ret
repz
mov
add
cmp
ret
repz
sbb
test
cli
imul
sub
sbb
ds
shlb
xor
call
ror
addr16
loopne
scas
mov
inc
mov
xchg
push
loope
jge
mov
sub
lret
mov
lret
or
push
bound
fcompl
xorb
push
loopne
mov
lret
or
and
mov
aam
fs
stos
das
add
xorl
pusha
jmp
loopne
adc
cltd
pop
dec
repz
lock
sbb
mov
jo
xlat
jns
mov
insl
mov
mov
mov
aas
mov
jo
rol
mov
arpl
pop
fwait
pusha
jnp
mov
mov
out
iret
dec
decl
std
xor
sti
div
jae
stc
jg
mov
jnp
pop
push
in
mov
adc
and
fs
fsubrs
mov
outsb
mov
xchg
xor
incl
loopne
dec
cltd
mov
jmp
lret
mov
pop
in
mov
xchg
aaa
dec
add
mull
in
jmp
add
xor
sbb
jmp
lock
lahf
mov
inc
loop
sub
jo
rorl
xchg
faddl
jbe
cmpsb
jb
jmp
jg
outsb
inc
push
add
jb
rorl
dec
jno
shll
iret
or
pop
loope
pushf
popa
inc
and
mov
iret
push
leave
dec
outsb
das
push
sub
dec
or
jae
aas
inc
lret
fcom
daa
mov
and
jno
add
je
nop
nop
add
test
ss
pop
leave
adc
scas
xchg
lret
out
pop
xor
jecxz
sahf
xchg
movsl
adc
out
dec
imul
daa
shlb
iret
or
cmpsb
inc
and
fcompl
lret
pop
daa
mov
adc
pop
loope
in
lods
push
push
pop
dec
push
mov
fdivrs
mov
jp
sbb
xor
addr16
loop
mov
jecxz
out
adc
xchg
das
add
repz
in
mov
jp
test
cmp
add
xor
inc
xchg
and
inc
popa
xchg
out
cmp
ljmp
xor
mov
call
push
inc
mov
sub
jge
xchg
lods
sbb
dec
xchg
out
test
sub
popf
push
and
push
adc
and
nop
loop
cmp
aas
and
jnp
aad
sbb
pop
xor
inc
stos
dec
xchg
das
inc
jno
pop
or
lahf
inc
int
dec
scas
pop
jg
rcrl
mov
xchg
jg
loop
das
add
mov
ja
jns
mov
mov
ficomps
push
sub
ss
mov
add
int3
or
mov
test
mov
jg
adc
lea
sub
or
mov
nop
dec
icebp
lods
adc
mov
sbb
sbb
andl
or
frstor
jg
into
mov
mov
jg
fdivrs
cmovae
stos
leave
push
bound
and
jge
mov
sub
adc
mov
mov
sub
sbb
dec
icebp
cmp
add
mov
jo
rcrl
inc
cmp
pop
jo
jl
lods
push
int
inc
sti
jne
leave
add
add
sbb
dec
hlt
dec
dec
in
mov
inc
sub
outsb
leave
push
inc
push
sub
or
and
sbb
divb
sbb
cmpsl
add
aas
cltd
mov
mov
je
fs
mov
ret
or
outsl
fiaddl
dec
dec
jbe
gs
clc
inc
je
mov
jg,pt
es
pop
mov
mov
stos
rcll
roll
out
mov
add
ret
loop
out
insb
pop
mov
inc
leave
sub
fistpll
repz
jge
fisttpll
es
xchg
cmp
ljmp
rcr
or
cmp
ficomps
pop
pop
pop
fwait
adc
ss
mov
push
repz
lret
repz
in
mov
mov
cmp
arpl
fst
cs
and
sbb
test
fs
fs
pop
mov
add
cs
movsl
out
pop
cmp
ljmp
mov
dec
ds
dec
mov
cmp
jnp
decl
dec
push
or
clc
push
addl
sbb
fcmovnbe
std
cltd
jb
and
out
int
jle
cld
jge
and
lcall
movsb
or
mov
out
jge
and
std
scas
xchg
fdivs
divl
cli
jg
cmpsl
dec
push
lret
xchg
push
test
or
mov
shll
lods
pop
cmc
adc
outsb
xor
dec
sbbb
adc
add
insb
or
and
dec
mov
in
insb
insb
cmp
dec
mov
pop
addr16
in
or
int
cmpb
sbb
std
adc
and
xor
mov
push
and
push
outsb
xlat
mov
xor
add
sbb
in
je
or
lret
sbbl
shl
or
test
xor
jmp
int
xchg
in
xor
sbb
lock
pop
and
das
adc
pusha
jg
cmp
inc
jo
mov
rcrb
mov
xchg
leave
xorl
xlat
clc
nop
push
or
inc
push
jp
andl
sub
fidivl
inc
loope
les
pop
mov
mov
mov
divb
loop
int3
xchg
fisubrs
jge
pusha
push
xchg
repnz
lds
pushf
aaa
jns
cld
scas
les
lret
xor
fistpl
pop
and
sbb
shll
pop
mov
and
push
insb
ficoms
int
test
adc
lock
pushf
or
jp
push
enter
mov
mov
lahf
in
out
loope
loope
and
in
cli
popa
xchg
sub
inc
rep
mov
mov
out
xchg
sar
xor
loope
std
jb
or
mov
add
xchg
jns
or
push
adcl
ljmp
andl
sbb
jo
jmp
pop
fdivl
daa
hlt
aaa
jb
lcall
and
lods
imul
mov
add
xchg
icebp
add
repnz
addb
dec
or
cmpsl
cs
sbb
arpl
cltd
lret
or
lahf
xlat
mov
fld
cmpsb
pop
mov
jnp
pop
push
out
xor
fwait
aaa
xor
faddl
shrb
jns
xor
or
pop
test
int
adc
adc
push
push
jbe
jbe
ss
aam
outsl
mov
into
mov
or
jnp
xchg
sub
add
pusha
pop
mov
fs
and
ret
xor
jae
inc
lahf
or
into
jne
sbb
jl
in
sbbb
cmp
add
push
jno
mov
imul
aam
call
in
add
push
fcoms
adcb
adc
adc
pop
data16
xchg
xor
and
jb
pop
cli
cmp
pop
lds
dec
pop
cwtl
jmp
fildl
mov
dec
aad
enter
jge
loopne
xchg
xor
ds
mov
or
dec
pop
mov
jae
adc
mov
aas
aaa
xchg
in
xchg
mov
ret
or
movsb
mov
in
jo
outsb
les
inc
das
arpl
fidivrs
outsl
ds
xor
repz
mov
add
xor
loopne
sub
lods
scas
add
sub
jae
in
fsubr
fidivl
mov
mov
std
xor
fistl
inc
jg
xchg
sbb
pop
add
enter
int3
fnstenv
sub
iret
les
orl
dec
xor
dec
movl
mov
cwtl
xchg
lcall
sbb
call
inc
daa
add
sti
ret
fwait
popa
int
or
cmpsb
pop
xor
loop
xchg
lcall
inc
pusha
mov
sahf
insb
lock
loopne
dec
xchg
add
aaa
subb
sahf
dec
or
dec
add
sub
sbb
jl
fistps
xor
les
fst
sbb
jb
sbb
sbb
xchg
dec
vmovq
test
mov
lahf
fisubl
andb
hlt
or
mov
dec
xor
jb
das
clc
add
inc
push
aaa
jl
test
mov
push
xor
fistps
mulb
insb
leave
scas
jb
nop
lret
inc
cwtl
subb
pop
cmp
push
subl
pop
pushf
scas
mov
jecxz
lret
cli
loope
mov
adc
cmp
fs
mov
ja
shrb
push
sarl
fbstp
aas
cmc
sbb
xlat
jecxz
xor
test
cmp
mull
sbb
cmp
pop
mov
cmpl
cmpsb
leave
jg
mov
inc
movsl
sbbb
fcmovb
xchg
xchg
andb
push
push
andl
xor
mov
outsl
inc
sub
xchg
jbe
xor
sbb
sbb
insl
sub
dec
mov
stc
je
mov
xor
icebp
fs
je
jb
jl
xor
adc
in
inc
jb
fistl
je
mov
adc
cltd
mov
cs
mov
push
gs
cli
loop
adc
jns
mov
mov
or
ret
pop
inc
fisubl
mov
push
and
es
jns
push
jb
or
aam
aad
in
popa
sbb
inc
scas
cwtl
cmp
or
jge
xor
sub
xor
shlb
leave
shll
sbb
or
or
adc
addr16
push
mov
fiadds
hlt
fidivs
fisubrl
adc
fst
cmc
dec
rolb
xchg
adc
inc
add
jbe
cld
mov
fdivs
sub
inc
pop
xchg
fistpll
jb
sub
faddl
cmp
adc
jo
push
fs
repnz
jnp
icebp
je
add
sbb
mov
xor
xchg
cs
out
pop
sub
mov
fistpll
pop
inc
lods
in
ja
dec
pop
mov
iret
pusha
fsubs
mov
ffree
mov
loope
adc
je
mov
gs
xchg
and
outsb
dec
cltd
add
shll
jp
mov
mov
mov
scas
cmp
scas
mov
push
mov
xor
cmp
mov
dec
push
stos
int3
add
cmp
mov
add
mov
push
or
push
inc
and
push
mov
out
mov
imul
or
clc
jecxz
mov
sarb
xchg
loop
ret
js
xchg
cmc
push
cmc
movsb
sub
fs
and
pop
xchg
int
fnstcw
out
and
ds
mov
dec
inc
js
loope
scas
jb
bound
lods
xchg
pop
add
mov
mov
add
cltd
mov
rcll
or
ficoml
add
test
xchg
adc
push
daa
jmp
or
inc
shrl
jp
test
testb
cmpb
insb
jno
push
xchg
jnp
stos
test
sbb
push
repnz
mov
aad
pop
mov
xchg
loop
push
jb
xchg
xor
cmpsl
in
movsb
jl
arpl
ja
js
popa
mov
pop
push
xlat
insb
inc
aam
and
xchg
jns
xor
aas
mov
inc
sti
out
pop
insl
aad
in
xchg
mov
jo
leave
fiadds
sbb
pop
jne
pop
push
fcomip
jns
fwait
pop
mov
xor
enter
pop
test
in
or
mov
jb
mov
stos
aam
test
scas
or
xchg
add
sbb
or
xchg
mov
fwait
mov
stos
gs
adc
imul
test
mov
push
add
push
dec
push
ret
push
movl
and
mov
ds
es
dec
cld
js
test
sub
lret
and
into
and
insb
and
sbb
iret
aam
push
sbb
std
sbb
adc
outsl
jns
movsl
adc
clc
cmpsb
mov
push
mov
mov
sarb
movsl
inc
sbbb
cwtl
xor
jnp
mov
jle
inc
add
pop
out
sub
repnz
sbb
mov
cmp
xchg
xchg
pandn
xor
lock
or
sbb
jecxz
sub
jbe
shrb
into
stos
dec
popf
adc
push
filds
mov
push
mov
pushf
cmc
cmp
and
ss
sti
inc
dec
xchg
mov
mov
and
aam
sbb
aam
sub
pop
jbe
pop
jp
std
fiaddl
mov
ficoms
or
lea
jp
insb
sub
aas
push
push
mov
xor
xorb
xchg
and
inc
mov
xor
push
pop
dec
adc
lahf
dec
xchg
xlat
cmp
dec
dec
pop
push
push
gs
cmp
jecxz
mov
mov
dec
shlb
mov
jecxz
incb
das
pop
push
mov
add
test
sub
adc
call
adcl
pop
push
leave
and
sahf
inc
jge
lds
pop
or
adc
adc
cli
aas
cmp
pop
hlt
lret
cwtl
hlt
jmp
jmp
jnp
push
jg
dec
inc
push
idivl
mov
jp
daa
repnz
push
jmp
loopne
lea
pop
sbb
xchg
lahf
xchg
dec
in
pop
adc
in
sub
jmp
ficomps
repnz
mov
pop
jecxz
mov
bnd
add
fistpl
les
dec
fimuls
adc
jl
lahf
lcall
sub
pop
mov
sub
shrb
and
jge
in
inc
mov
push
pop
fildll
cli
mov
inc
stos
lret
inc
mov
xchg
cwtl
addr16
xor
xchg
insl
fidivl
cmp
mov
xor
and
pop
test
iret
push
fwait
in
xchg
in
rclb
ljmp
loop
mov
push
pop
jae
call
std
jmp
into
pushf
jg
test
mov
add
pop
pop
push
pushl
or
inc
cmp
outsl
int3
cld
in
cmp
and
mov
sbbb
int3
push
sub
or
ja,pn
scas
xchg
fisubl
or
or
xchg
sahf
sbb
ss
sbb
pop
or
pop
ss
push
fidivl
push
fldcw
outsb
stos
sub
loope
iret
int3
sahf
shll
and
sub
in
les
sahf
mov
shll
sub
push
pop
sub
push
cmp
sub
adc
add
xchg
cmpsb
jno
scas
fidivs
xorl
push
loope
mov
scas
dec
inc
int3
jp
std
stos
popa
xchg
outsl
stos
shrb
mov
iret
fadds
aam
mov
loopne
fnstenv
jno
out
xor
dec
aas
mov
stos
jecxz
fwait
ret
in
sbb
adc
sub
das
call
xor
stc
pusha
dec
add
out
pop
push
mov
xor
pop
in
mov
stos
and
out
or
xchg
fadds
test
daa
scas
jmp
mov
out
or
cmp
sub
fmull
dec
push
mov
mov
pop
jns
icebp
shll
scas
sub
repz
repz
push
addr16
mov
xchg
jb
cmp
jecxz
stos
popl
mov
push
shr
sbb
aam
fs
enter
loop
cmpsb
dec
cmp
lds
stc
sarl
pop
mov
std
adc
movsl
outsl
xor
mov
push
mov
stos
mov
mov
mov
out
mov
std
nop
es
mov
rclb
mov
dec
mov
mov
fdivl
mov
mov
push
xchg
or
push
hlt
rclb
and
ja
fildl
pop
and
ljmp
js
sub
inc
imul
pop
stc
fnstsw
sbb
push
inc
dec
xor
stos
mov
sbb
rcl
jle
sbb
mov
loope
jne
sub
cmp
xadd
sub
and
daa
popf
xlat
addr16
aad
mov
push
bound
pushw
inc
mov
sbb
and
cmp
pop
daa
orb
out
popa
mov
sahf
lret
and
test
and
and
adc
pop
test
inc
lcall
sub
lea
push
inc
mov
incb
cli
out
or
jbe
and
lahf
addl
xchg
fadds
cmp
dec
insb
or
mov
jne
scas
fbstp
dec
jg
push
test
jmp
push
arpl
cmpsl
fisttps
les
lods
inc
sub
or
mov
sbb
in
test
gs
jge
jg
imul
and
fucomi
ss
mov
push
adc
fildll
js
int
push
dec
jb
aad
inc
es
imul
dec
bound
sbb
cmp
cmp
mov
ret
outsb
into
call
pushf
scas
dec
pop
sti
jbe
repnz
cs
add
sti
sbb
arpl
bound
mov
in
or
cmp
push
push
add
fs
js
xor
out
in
dec
lret
popa
shrl
cmpsl
test
test
push
push
sahf
ljmp
js
xchg
dec
subl
dec
call
lods
mov
rcll
call
inc
xchg
into
xchg
stc
inc
jne
push
mov
inc
mov
mov
sbb
inc
cmpl
ror
pop
xchg
cmp
outsl
fidivrl
lock
insl
loope
notb
dec
sub
fbld
cmp
cmpsl
test
imul
scas
cli
loop
in
pop
xor
hlt
js
dec
add
leave
lahf
je
jns
daa
pop
or
aad
cmp
aad
sarl
mov
stc
sub
es
pop
jno
push
or
fnop
outsl
fs
jb
push
or
xchg
stc
and
xor
jg
push
ficomps
int
repz
or
cmp
push
cmp
shll
push
sub
jbe
popa
mov
xor
icebp
bound
nop
in
or
mov
and
sub
int3
fcmovnbe
adc
sti
or
inc
call
pop
jb
mov
jne
add
pop
cltd
push
ds
arpl
dec
xor
pop
pop
ja
push
pop
jp
xchg
loopne
add
gs
mov
fsubrl
push
mov
shl
dec
in
cwtl
mov
nop
adc
idivb
mov
inc
icebp
jns
test
insb
lock
xchg
leave
jmp
je
jle
aad
stc
jne
dec
xor
xchg
loop
and
pop
das
xor
cwtl
ret
or
adc
lods
cmpsl
cld
pop
bound
dec
sub
inc
cmp
or
aaa
movsl
inc
fsubl
mov
fisubl
cmp
mov
data16
cmc
sub
rcl
xchg
push
ret
test
xchg
cwtl
iret
push
es
jecxz
fimull
and
pushl
sbb
loope
pop
inc
insl
lret
mov
jg
push
adc
xchg
movsl
jle
in
cmp
bound
cmc
out
xor
fisubrl
xchg
repz
sub
mov
outsl
pop
adc
push
mov
loopne
out
ja
subb
cld
test
xor
dec
mov
lahf
xor
pop
out
mov
cmp
out
outsl
test
mov
sbbl
lret
jbe
inc
sbb
or
cmpsl
lods
pop
shlb
xor
stos
aad
mov
lods
loopne
dec
mov
fcomps
mov
push
cmpsb
jno
pop
pusha
sub
ja
add
pop
or
rcrl
mov
fldl
scas
xchg
cli
mov
ret
insb
out
push
test
jnp
int3
sub
fdivrs
pushf
dec
sbb
adcl
sub
jecxz
mov
cmpsl
dec
insl
or
pop
imul
push
leave
sbb
jne
jg
mov
stc
mov
vcvtdq2ps
cmp
idiv
fidivl
add
lock
and
push
lds
mov
test
jb
icebp
push
js
lds
xchg
push
jecxz
jge
rclb
mov
pop
fisubs
xchg
push
add
sbb
inc
dec
xchg
adc
icebp
ljmp
out
lods
mov
fucomp
mov
insl
xlat
cmp
cwtl
movsl
sbb
sub
cmp
sub
or
dec
daa
fiadds
xor
cltd
leave
mov
sti
push
jae
mov
aad
mov
lret
adc
dec
adc
dec
movsl
cmp
es
iret
jne
pop
pop
jno
jle
imul
push
je
xchg
or
movsb
outsl
lret
push
sarb
xor
sub
aad
or
or
xor
cmp
cmp
mov
stos
ja
or
jl
loopne
data16
mov
ds
jns
out
xor
mov
push
dec
lods
sbb
aaa
xlat
pop
cmpb
icebp
clc
push
xchg
lods
frstor
xchg
orb
test
push
fwait
mov
fsubrp
mov
xchg
mov
sbb
add
and
adc
cmp
adcb
lods
jg
out
cmp
pop
lea
jnp
pop
aam
je
and
and
in
rolb
cld
add
jle
jmp
ja
push
and
sub
add
mov
popf
jb
into
and
aad
cmovle
scas
cwtl
in
inc
or
push
mov
pop
fnstenv
mov
stos
cld
sub
aaa
mov
jae
push
cmpsl
adc
dec
cltd
cltd
leave
or
jl
lods
fidivrl
ret
xchg
xor
fistps
scas
cmp
sbb
sbbb
or
sub
fwait
cmp
sarb
popf
jno
push
in
adc
into
xchg
data16
aad
fcompl
jne
jle
cmp
pop
popf
call
pushf
cwtl
mov
mov
call
aam
out
xchg
iret
orl
mov
push
repz
sbb
jae
pusha
sub
insb
loope
xchg
xor
add
loopne
in
lcall
movsb
inc
add
popa
aaa
add
and
je
lock
or
sub
fwait
ret
ret
ret
inc
inc
ret
mov
inc
repnz
dec
stc
jge
outsl
ret
cmpsl
add
sub
xor
jge
das
push
cli
test
xchg
in
xchg
daa
adc
addr16
pop
lods
cmpsb
and
pop
sbb
test
and
into
lret
in
repz
fiadds
inc
pop
push
xchg
or
push
fwait
ret
push
loop
cs
ficoms
sbb
call
sub
push
mov
jbe
mov
push
cmpb
in
and
push
mov
pushf
dec
in
lahf
rcrl
test
ljmp
add
add
mov
out
scas
iret
jecxz
adc
scas
stos
out
mov
inc
cmp
in
int
sub
add
ret
mov
sbb
int3
int3
int
pop
and
jnp
jecxz
mov
or
mov
push
arpl
cmpsb
stos
into
pop
cmp
adc
cwtl
or
enter
repz
std
add
xor
test
cmp
fisttpl
sub
lahf
pop
int
jge
cmp
test
xchg
fwait
pusha
cmpb
jge
mov
in
aas
data16
fwait
cmp
mov
daa
mov
rclb
sbb
jno,pn
cmpsl
add
inc
pop
push
mov
aam
mov
and
cmpsl
mov
push
lcall
and
testb
cmc
outsb
or
inc
sub
sub
mov
je
call
ds
pop
movsb
xor
lcall
mov
inc
or
cli
xchg
movsb
out
inc
sub
add
jnp
push
inc
repnz
adc
jmp
jnp
stos
test
imul
icebp
loop
mov
aad
fwait
das
adc
cld
js
fs
sbb
outsl
dec
insl
sub
dec
inc
inc
hlt
xor
ljmp
push
icebp
xlat
cmp
push
push
movl
outsb
push
inc
lret
pop
push
testb
push
adc
out
notl
rorl
pop
push
clc
ljmp
or
imul
jnp
inc
cmp
push
loopne
push
mov
push
sub
lds
push
dec
mov
shll
addr16
lock
lds
mov
push
pop
jg
or
mov
or
mov
lea
std
jge
xor
out
and
push
divb
stos
insl
pop
mov
fimuls
cmp
cli
icebp
xor
cmc
data16
inc
stc
out
jmp
daa
mov
mov
icebp
and
inc
movsl
cmp
mov
divb
xor
incl
andl
ja
in
mov
sarb
mov
scas
imul
inc
sbb
orb
in
mov
dec
pop
ljmp
cmp
jmp
and
fistps
out
sti
add
stos
mov
testb
dec
jo
sbb
pusha
add
insl
sub
shrb
addr16
or
js
pop
std
scas
out
and
xchg
xorb
pop
jo
fcomps
movb
jg
test
and
fs
lea
xchg
mov
dec
lcall
leave
xor
sbbl
add
imul
cmc
pcmpeqb
gs
addr16
push
inc
jge
inc
out
or
jb
shrb
sub
jmp
lock
or
pop
adc
addl
clc
or
inc
push
inc
les
mov
ss
enter
add
roll
mov
rcrl
add
add
aam
scas
arpl
lcall
mov
pop
rcrl
outsb
int
call
lods
sub
push
das
lods
push
scas
cs
hlt
scas
std
fmul
or
push
dec
ljmp
lods
adc
cmp
loopne
add
jns
push
gs
and
in
dec
cwtl
fsubrl
push
stos
inc
inc
add
xor
mov
test
icebp
mov
pop
push
cmp
loop
mov
inc
and
testl
sub
push
je
mov
push
stos
push
call
xor
ret
ds
xchg
insl
out
scas
fiaddl
cmpsb
aad
lds
pusha
adc
dec
rorb
lock
ret
subl
and
pusha
and
imul
lods
test
lock
ret
mov
and
xlat
pushl
arpl
iret
adc
shll
fildll
cmp
ret
repz
repnz
xchg
inc
mov
mov
add
adc
jge
sbbb
scas
mov
mov
push
aam
popf
jle
mov
rcl
js
jbe
dec
out
jb
outsb
or
stc
data16
movsb
rorb
mov
jg
push
mov
mov
push
sbb
in
in
mov
stos
insb
add
xor
cmp
sbb
lds
pop
xor
stos
push
mov
sbb
mov
xchg
pop
pusha
lds
fisubrs
add
push
idivl
imul
mov
adc
adc
js
jp
cmp
sbb
pushf
imul
fildll
dec
jl
mov
xlat
xor
loope
add
adc
jns
dec
cld
mov
lahf
imul
cmp
pop
ror
inc
adc
stc
cwtl
mov
lea
in
xchg
pop
in
sbb
xchg
out
iret
es
jnp
mov
adc
xchg
push
fwait
stc
outsl
mov
addl
inc
jmp
xor
popa
loopne
xchg
aad
shll
cmpsb
sbb
es
push
lds
mov
ds
rolb
mov
lret
pop
loopne
inc
jmp
push
inc
pop
push
stos
mov
dec
popf
pop
inc
inc
inc
push
mov
scas
xor
lods
dec
and
and
lock
push
or
xor
fisubs
fwait
adc
push
jp
push
test
and
cmpb
cmp
lret
pop
mov
adc
or
cmpsb
clc
dec
std
xchg
adc
inc
or
sub
je
sub
aad
loop
push
lods
test
sub
jno
mov
sbb
push
rcr
jae
outsb
mov
jb
pop
lcall
adc
ja
mov
aad
cmpsl
inc
loope
dec
mov
xor
mov
push
pop
and
movsb
and
dec
jnp
xor
lcall
out
cwtl
xor
xchg
ret
movsl
mov
pop
lret
push
dec
data16
xor
add
sub
call
mov
push
pop
in
test
xchg
int3
xchg
xchg
pusha
lock
or
int
adc
ljmp
add
push
lods
lret
sbb
mov
inc
mov
fists
pop
cmp
imul
pop
fcompl
fldenv
cmpb
cli
sbb
movsb
outsl
test
sbb
mov
repnz
ljmp
xchg
test
fistl
xor
loopw
lret
jns
push
mov
push
push
lock
data16
jne
xchg
outsl
icebp
cs
mov
mov
jo
pop
inc
mov
addr16
push
xchg
adc
xchg
cmc
mov
jmp
push
ficoml
mov
inc
fbld
out
enter
sbbl
cmp
mov
adc
mull
dec
popa
jecxz
test
push
cli
ja
push
outsb
sbb
inc
div
nop
jge
cmc
in
sub
repnz
jbe
mov
pushf
and
lock
subb
fprem1
jp
adc
cli
mov
inc
pop
add
imul
scas
out
sarb
cmp
ret
js
push
in
mov
inc
popf
rcrl
sub
lods
sub
pop
repnz
fmulp
or
out
adc
outsb
xor
push
inc
cltd
add
lret
out
shlb
cltd
lcall
sub
sub
ds
in
mov
mov
xor
nop
inc
mov
mov
cmpsl
jmp
jle
cwtl
int3
pushf
cmp
jp
in
scas
test
mov
xchg
insl
in
sbb
lods
jne
xchg
xor
fcompl
imul
xadd
xor
les
aam
fidivrs
cmp
ja
dec
sbb
hlt
mov
sbbl
stos
cmp
addb
gs
mov
push
rclb
jno
and
mov
xchg
pushl
outsb
enter
or
test
inc
jne
sbb
push
sahf
jl
sbb
in
dec
push
mov
mov
pop
inc
jmp
scas
dec
popa
cmpl
jbe
push
sub
decl
jmp
sbb
jg
sub
xor
sub
in
lods
push
clc
xchg
fadd
cs
jno
sub
push
inc
push
scas
and
xor
jg
ds
sar
lea
int3
adc
push
cmp
pop
push
in
lds
pop
ljmp
idivb
inc
lahf
lcall
mov
loopne
push
or
pop
cwtl
andps
jmp
push
idivl
pop
data16
fwait
ja
nop
xchg
out
inc
sahf
mov
xlat
imul
pop
xlat
or
pushf
ss
aad
repz
loopne
int3
jne
jmp
inc
outsl
inc
fwait
stos
lods
hlt
sub
adc
sbb
xor
mov
js
lods
inc
rorb
das
sarl
pop
ret
test
lcall
es
push
add
icebp
jo
or
xchg
enter
mov
es
ljmp
pop
jmp
mov
gs
push
fldcw
aad
sahf
in
movsb
daa
pop
sub
xorb
or
outsb
or
dec
stc
cmp
movsb
mov
andl
test
js
rorl
scas
mov
or
lods
add
arpl
roll
daa
pop
mov
testl
dec
inc
insb
jns
pop
imul
lods
xor
aaa
pushf
dec
jmp
push
mov
jae
jmp
mov
mov
ret
std
and
sbb
cwtl
sub
test
mov
lea
mov
scas
dec
into
add
call
clc
movsb
lea
std
mov
imul
pop
jb
sar
cmpsl
pusha
jmp
sub
shll
xchg
cmp
pop
push
adcb
ficoms
sti
sub
sub
and
out
mov
mov
insl
lea
insb
outsb
or
add
fwait
xchg
inc
or
mov
outsl
aad
sbbb
or
call
jecxz
cwtl
repz
icebp
lahf
pop
dec
xor
add
ror
shl
loopne
sarl
out
xor
sbb
loopne
cmpsb
mov
int
jns
adc
in
icebp
test
loope
daa
je
or
xchg
cmpsb
imul
rolb
icebp
mov
jo
jecxz
enter
fcompl
adc
ret
lods
sahf
pop
fdivrl
xchg
dec
xchg
sbb
sahf
rorl
dec
or
das
cmc
shlb
mov
mov
lcall
cltd
std
enter
filds
dec
xor
cmpsb
dec
push
js
pushf
pop
je
cwtl
pop
in
jbe
cmp
pushf
cld
fsubl
stos
cmp
sub
lcall
cli
mov
mov
call
pop
sub
add
inc
rorb
fists
mov
loopne
in
mov
sub
out
hlt
xor
sbb
adc
hlt
pop
adcl
into
dec
and
roll
fistpl
or
addb
sti
add
dec
jno
addl
and
push
in
es
and
mov
pop
jecxz
in
cld
test
dec
or
mov
xchg
inc
in
and
mov
adc
sub
mov
push
jne
ds
lcall
es
jp
lret
pusha
xor
fdivrl
out
fisttps
movsl
shll
sub
lea
loope
test
xchg
sbb
movsb
cld
dec
jns
cmc
shrb
mov
loop
mov
addb
dec
push
cmc
xor
mov
pop
push
or
scas
nop
test
fistl
cmc
aaa
add
fcoms
pop
cmp
aam
adc
insl
jb
enter
cld
pusha
jae
addr16
adc
test
cmp
hlt
gs
or
jb
imul
push
inc
jne
jne
js
in
js
inc
cmp
jo
mov
pop
sub
inc
xor
fs
sub
mov
mov
sbb
test
fbld
sub
rcrl
xor
pop
xchg
pop
stos
dec
jge
xchg
fs
test
idiv
cmp
std
mov
inc
mov
inc
cli
xor
inc
xchg
jnp
inc
std
std
insl
imul
mov
lahf
cmp
mov
movsb
mov
les
test
dec
pop
mov
mull
jl
mov
arpl
jge
test
mov
inc
xlat
xor
scas
cli
or
jge
mov
pmuludq
mov
lods
stos
aas
and
inc
and
aas
mov
mov
add
leave
jno
aas
jae
or
pop
pop
mov
mov
fsubrl
xchg
leave
les
push
jno
fstps
lock
pop
sti
sub
jo
in
push
mov
adc
sbb
xlat
in
xchg
int3
stos
xor
xchg
add
jb
or
sahf
mov
cltd
ss
cs
xchg
out
enter
stc
arpl
pushf
sti
sub
stos
into
std
ja
add
jno
mov
mov
xchg
popf
adc
mov
test
inc
arpl
xor
xor
hlt
sbb
idivl
xchg
mov
ret
or
flds
jns
or
stc
mov
jmp
lds
mov
push
es
mov
adc
xor
leave
or
lock
repz
inc
fidivs
cmpsb
dec
stos
mov
outsb
jge
pop
fwait
sbb
roll
pusha
jl
idiv
jno
divl
hlt
inc
mov
cmp
enter
sub
imulb
adc
mov
in
addl
std
xor
insl
xchg
inc
pop
scas
in
cmp
mov
aas
in
gs
xchg
enter
aas
sahf
imul
jb
lock
sub
xor
push
inc
in
push
movb
addr16
lret
mov
sub
lods
hlt
lds
inc
push
test
ret
adc
jl
and
jb
add
ljmp
xchg
sbb
mov
sub
lods
and
xor
mov
enter
add
outsb
mull
cli
pop
std
mov
shll
sub
adc
cmp
lea
lret
roll
inc
mov
cmpsb
mov
xor
mov
loop
cmp
and
push
idivb
cmpsb
mov
aam
or
add
add
and
and
sbb
roll
mov
push
int3
loop
rorb
addr16
jp
rclb
mov
xlat
mov
bound
mov
push
lds
stos
cli
int3
pop
pop
movsl
mov
aaa
out
push
shl
mov
jnp
cmp
pop
sub
fidivrs
jge
icebp
cmp
arpl
js
mov
test
insb
adc
xchg
icebp
out
cli
push
xchg
inc
out
repnz
lcall
mov
or
cmp
ds
dec
pop
and
mov
push
inc
pop
mov
movsl
jmp
xchg
mov
lahf
lea
adc
inc
das
fcmove
stos
sahf
sahf
ficomps
scas
decl
ret
cmp
fidivl
mov
lcall
sbb
add
aam
lods
adc
icebp
out
pop
inc
sub
mov
lods
xchg
add
inc
push
jnp
std
xor
insb
dec
cld
mov
mov
in
arpl
mov
addr16
cmpsb
bnd
adc
cltd
pop
int3
dec
aad
out
add
sub
xchg
popf
jg
mov
sub
scas
jecxz
insb
mov
fadds
jle
pop
and
or
ss
pop
testb
inc
xchg
movsl
test
neg
and
gs
push
and
mov
aas
xor
mov
fbld
and
cmp
pop
push
fs
lahf
nop
pop
dec
sahf
iret
sahf
int
push
xor
sbb
les
and
cmc
push
fsubrs
pushf
aaa
lods
sbb
fimuls
rorb
test
scas
shlb
xchg
dec
push
xchg
add
mov
mov
dec
outsb
pop
and
and
sbb
std
out
pop
mov
jge
add
dec
xor
pop
jnp
ljmp
shl
dec
xor
pop
mov
push
ds
and
ljmp
dec
and
push
lcall
pop
in
mov
inc
repz
xorb
leave
sbb
cmp
mov
adcl
int3
jnp
sub
scas
lods
rcrb
cltd
ja
sub
popf
dec
sbb
mov
fsub
movsb
mov
mov
sbb
mov
cwtl
data16
sub
or
stc
jbe
mov
jb
and
test
cmp
add
jmp
or
pop
mov
mov
ds
jg
out
xchg
andb
xchg
and
push
sub
sub
xlat
jno
mov
negl
lods
push
arpl
xor
dec
sub
jmp
int3
lret
xor
loop
and
push
pusha
mov
mov
lods
fistpll
add
sbb
out
mov
and
movsl
popa
and
les
fdivrs
mov
fildll
xchg
and
cli
inc
push
test
inc
fstpl
push
sub
and
xchg
in
mov
ret
addl
fs
mov
loope
push
jecxz
cmpsl
or
mov
cmpsb
cmp
push
repnz
jecxz
xchg
fldt
fisubrl
in
adc
outsb
inc
or
sub
loop
scas
idivb
push
mov
jnp
mov
mov
scas
int
push
lcall
jg
jmp
or
es
clc
dec
mov
fsubrs
push
pop
out
in
faddl
lock
into
inc
sub
jge
std
fwait
out
pop
filds
fcoms
lret
sub
fwait
dec
cmp
ds
call
fwait
out
and
push
jle
add
push
xchg
and
or
imul
or
popa
repnz
enter
pop
pop
xor
mov
enter
sarb
lds
stc
out
sub
pop
cmp
adc
lods
fsubrl
add
jb
xor
icebp
xor
or
fimull
lods
or
les
mov
ror
lcall
xlat
aaa
cltd
stc
or
add
js
ror
leave
mov
mov
mov
loop
xchg
cmp
jecxz
pop
sub
adcl
xchg
fistpl
mov
pop
jnp
lcall
sub
enter
mov
out
jns
sub
xchg
jae
inc
daa
or
cltd
cld
xchg
lret
or
fbld
xor
jae
cltd
addr16
stc
push
fnsave
push
mov
inc
push
lods
cmp
adc
imul
insl
cld
pop
fadd
mov
push
sbb
ret
inc
testl
adc
xchg
xor
or
rclb
inc
shrl
inc
adc
js
jb
fimuls
mov
or
aaa
nop
lret
add
mov
ret
rorl
xlat
fwait
or
fwait
add
test
in
stos
cmp
rolb
in
aad
xchg
jg
lret
sti
cmp
sbb
cwtl
add
ljmp
out
push
lock
push
idivl
mov
out
enter
jo
cld
xor
scas
and
add
ret
or
mov
into
adc
and
scas
out
inc
xchg
sbb
xchg
leave
mov
sub
in
mov
cmpsb
lods
and
out
xor
pop
arpl
aas
mov
jno
xor
xor
lods
ret
out
sub
push
jle
subb
mov
lcall
nop
out
jge
mov
aad
xchg
icebp
jnp
outsl
mov
loope
in
sbb
push
jno
lods
pop
pop
scas
data16
out
dec
fldenv
mov
push
mov
jb
mov
loope
adc
subb
movb
in
inc
push
and
jmp
and
arpl
add
push
mov
cltd
es
scas
jne
xchg
xchg
xchg
lods
pusha
adc
xchg
jp
dec
fisubl
in
scas
pop
xlat
dec
ja
xchg
push
lods
jb
jne
lock
xor
bound
mov
fwait
push
fcoml
not
repz
xor
cmp
or
ljmp
mov
call
fcmovne
push
fsubs
mov
arpl
das
xor
mov
jmp
imul
enter
pop
lock
add
cmpsb
push
scas
xchg
jl
jne
add
js
mov
in
insl
orb
xor
mov
or
xchg
out
insb
call
xchg
sbb
cmp
adcl
xchg
mov
and
adc
push
sbb
and
ret
insl
scas
gs
push
iret
pusha
rolb
mov
loopne
stc
in
or
movsl
andb
scas
xchg
shll
xchg
outsb
xor
daa
jle
inc
jecxz
mov
mov
movsb
sbb
repnz
les
sub
je
and
xchg
sub
popf
xchg
inc
inc
out
and
adc
cmp
sbb
sub
dec
dec
sbb
xor
mov
ja
and
jae
dec
mov
pop
xchg
xchg
fists
pcmpeqw
lods
and
mov
and
sbb
lods
xorb
testb
jecxz
pop
xlat
jmp
adc
jg
popa
push
or
xor
pushf
add
fcmove
adc
popa
fmull
cmp
push
das
mov
fisttpll
je
dec
cs
scas
leave
adc
mov
pushw
mov
jae
mov
inc
inc
xchg
xchg
jae
in
adc
test
out
cli
lds
adc
pop
xchg
and
jno
pusha
fnstenv
mov
mov
call
jne
lret
je
lods
ret
stos
pop
mov
jp
push
sub
jmp
dec
inc
add
jbe
imul
fs
sbb
lock
iret
adc
std
mov
in
adc
das
imul
sub
xchg
mov
mov
mov
push
mov
fdivp
cmp
test
notl
and
add
es
ja
mov
lret
inc
clc
adc
rcll
fisubrl
js
xor
sahf
pop
xor
or
in
fidivs
lahf
inc
dec
add
mov
and
adc
jno
call
aam
xchg
rcr
das
jnp
imul
and
daa
and
mov
or
jnp
cmp
mov
mov
aaa
or
cltd
not
and
xor
stos
ret
cmp
in
test
into
mov
lret
repnz
xchg
xor
fwait
ss
xchg
imul
jne
mov
sub
jge
mov
mov
sbb
sub
jg
pop
outsb
ljmp
sub
mov
sbb
shll
fists
outsb
shrb
jle
or
jnp
aas
insb
nop
adc
cmp
and
aam
push
and
xchg
outsl
inc
adc
or
push
push
rolb
or
or
test
cmp
jg
push
lods
xchg
insb
inc
mov
jnp
xchg
cli
mov
inc
xchg
sub
int
dec
lods
sbbl
out
stos
pop
ljmp
popf
and
xor
or
aad
jle
ds
stos
mov
pop
mov
fwait
jne
adc
pop
push
pop
mov
mov
add
pop
cwtd
icebp
out
xchg
pop
call
sub
dec
add
jecxz
cmp
out
add
les
jmp
lds
mov
jecxz
aaa
adc
imul
cmp
and
mov
pop
jmp
in
data16
dec
push
inc
mov
and
pop
jno
subl
jle
xchg
fisubrs
pop
mov
test
dec
xbegin
mov
dec
pop
fcoms
sti
xor
ret
xor
js
loopne
mov
cmpsb
add
scas
dec
adc
jbe
cmp
aad
and
add
popa
insb
pop
add
ret
fidivrl
in
push
jns
adc
dec
cmc
or
out
xor
jmp
mov
les
les
ret
xchg
mov
out
sti
inc
cwtl
pop
lret
xor
jbe
stos
mov
lret
int
mov
xchg
in
fnstenv
inc
jmp
fwait
movsl
mov
jae
push
adc
push
je
insl
outsb
rolb
dec
mov
psllq
jg
enter
push
and
pop
sbb
xor
hlt
pop
mov
rclb
xchg
mov
fisttps
pop
or
mov
cmpsl
fbld
xchg
lock
sub
std
or
sbb
into
cltd
cmp
sbb
add
fwait
cmp
pextrw
jp
pop
adc
insb
daa
cmc
lods
lock
sti
cmpsl
mov
mov
inc
dec
mov
loope
and
inc
int3
add
inc
test
neg
pop
pushf
xchg
lea
dec
stos
inc
mov
push
jne
fstps
pop
popa
ds
insb
out
mov
int3
pop
pusha
jl
push
lods
into
loope
jge
arpl
es
pop
call
pop
pop
cmpsl
enter
dec
pop
ret
in
push
mov
enter
dec
add
dec
lahf
in
sub
sub
in
adc
push
sbbb
and
out
lahf
xchg
push
adc
lods
jno
fdivr
sub
jge
scas
jp
test
lahf
cvtdq2ps
dec
cmc
xchg
xor
push
lea
or
movsl
in
or
call
dec
sbb
pop
xor
or
rcrl
adc
adc
jle
fstp
outsb
mov
add
pop
mov
push
lret
dec
adc
ljmp
xchg
push
xchg
mov
xor
lret
mov
mov
cld
sbbb
or
fidivl
vpshufhw
ret
sahf
mov
or
dec
xchg
adc
arpl
adc
sahf
mov
gs
sahf
xchg
push
bound
mov
int
daa
mov
cmpsb
mov
outsl
cmp
stc
out
out
xchg
jns
push
mov
sub
ds
xlat
nop
inc
ret
cmc
pop
jl
lods
pop
fldenv
dec
out
dec
fisttpl
cmp
inc
data16
jle
dec
sub
pop
sbb
inc
scas
or
push
fimuls
ja
add
jg
les
mov
imulb
adc
cmpsb
cmp
and
imul
cmp
xor
in
int
cmp
call
inc
jle
test
mov
sub
scas
cmp
shrb
xchg
mov
inc
and
mov
pop
test
aaa
adc
dec
loop
add
dec
movsl
mov
lret
test
adc
and
xchg
mov
inc
push
cmp
sub
mov
imul
int
mov
mov
mov
lea
lods
inc
std
sub
lea
and
and
mov
inc
xor
cmp
xchg
push
inc
jp
enter
xlat
xchg
jge
mov
in
jo
add
adc
inc
lcall
push
sbb
js
push
rclb
clc
push
shlb
add
cmp
dec
mov
push
mov
mov
jge
das
pop
pushf
or
xchg
adc
dec
dec
dec
lds
mov
add
fidivrl
filds
inc
inc
std
pop
sbb
xlat
insl
sub
pop
mov
test
movsb
inc
dec
outsl
pusha
iret
xchg
and
leave
fiaddl
lods
cmpsl
nop
mov
daa
mov
xchg
mov
push
aas
jmp
out
scas
out
enter
pop
mov
dec
mov
or
scas
lahf
in
sub
outsb
sbb
push
movsl
add
pop
xchg
scas
pushl
shrl
hlt
in
aad
sbb
inc
ljmp
fdivrs
adc
aad
cli
fsts
shll
loop
ljmpw
cmp
adc
sti
xorl
xor
adc
xorl
and
xchg
adc
test
lahf
xchg
loop
js
xchg
rcr
cmp
fcmovu
ljmp
shl
addr16
ljmp
js
and
call
mov
shll
xchg
push
mov
arpl
mov
and
mov
fisttpll
and
mov
push
test
jle
mov
pushf
jp
movsb
sarb
push
xchg
adc
adc
xchg
aad
mov
lret
add
cmpsb
daa
jle
push
xchg
int3
int
stos
jae
out
div
xchg
jmp
inc
aas
sub
add
pusha
clc
push
lods
jge
dec
ljmp
mov
pop
jge
mov
sub
popf
mov
xchg
int3
std
cmp
or
sahf
push
pop
ret
push
cmc
andb
xchg
push
inc
cltd
jno
dec
push
dec
mov
pushf
shll
nop
inc
mov
xor
cmp
or
test
out
lea
dec
inc
jp
mov
fdivl
cmpsb
pop
mov
dec
push
dec
inc
in
xchg
fistl
test
cwtl
mov
or
lock
lods
xorb
cmpsl
and
mov
jg
sub
icebp
call
pop
movsb
repnz
mov
test
mov
into
insl
in
popa
pusha
ret
add
daa
mov
mov
sub
add
stos
inc
pusha
mov
mov
xchg
push
cmpsb
arpl
mov
pop
jnp
aam
pushf
mov
push
hlt
or
or
test
dec
mov
sahf
vmread
add
pop
scas
xor
adc
mov
ret
std
bound
adc
sbb
enter
sarl
stc
mov
push
in
and
jns
add
sar
or
leave
lahf
loope
or
js
sahf
pop
incb
cmpsb
test
mov
sub
mov
or
and
movsb
jae
mulb
cmpsl
jmp
std
cld
push
stos
mov
mov
fsubr
xor
fadds
cmc
xchg
pop
pop
pop
mov
jp
dec
enter
into
sbb
xlat
adc
mov
shr
cltd
lea
add
cltd
sbb
lcall
xchg
test
mov
das
mov
scas
jns
pop
mov
push
xchg
out
int3
cld
repz
or
dec
subb
rcl
ret
loopne
bnd
pop
mov
fcomps
sub
dec
fsubs
mov
mov
xlat
or
sub
lods
addr16
popf
or
sub
cs
push
test
mov
sahf
repnz
addl
xor
inc
push
dec
adc
or
aaa
cs
dec
push
xchg
mov
mov
mov
xchg
jmp
int
and
mov
sbb
mov
test
fists
cmp
psrad
xchg
fstl
inc
mov
in
mov
adc
sbb
push
push
jnp
mov
cltd
or
mov
sbb
mov
mov
sub
sbb
inc
xchg
stos
mov
pushf
pop
arpl
out
pop
sub
mov
pop
mov
enter
jge
mul
cmpsl
ret
jne
mov
pop
sti
sub
xchg
faddl
or
inc
sub
jb
push
jne
jecxz
je
testb
loopne
rcrb
insl
sahf
fidivs
cmp
scas
pop
add
bound
js
dec
std
xchg
cltd
jle
mov
adc
mov
xor
shr
and
and
lret
xor
cmp
or
adc
jle
sbb
xor
in
sub
jbe
inc
inc
lcall
aaa
add
jecxz
pop
out
cmp
fldcw
fs
jb
sub
pop
in
out
in
jp
cld
aad
cmc
mov
pushf
stos
cmp
sbb
pop
cmp
adc
jnp
push
push
mov
shrb
mov
xchg
outsb
push
mov
push
or
dec
nop
or
test
pop
test
rol
inc
push
mov
dec
dec
mov
dec
sbb
scas
mov
push
loope
orb
and
ja
sub
jle
arpl
sbb
sbb
dec
lock
mov
mov
std
icebp
dec
and
dec
ret
and
pushf
test
popf
adc
loope
icebp
fldt
lods
jge
sub
sub
jbe
sub
fdivs
xchg
sub
mov
repz
repz
cltd
hlt
dec
pusha
xchg
in
icebp
gs
fidivrl
or
gs
je
or
or
rcl
mov
sbb
jae
jb
lret
mov
fwait
pop
mov
fnstsw
adc
xor
mov
scas
dec
jnp
sti
pushf
icebp
shrl
push
mov
testb
mov
pop
push
sbb
cmp
mov
inc
dec
add
shrl
mov
inc
cmc
xorl
inc
cld
mov
xchg
fldl
aaa
push
jecxz
popf
ja
das
adc
into
in
sub
shlb
xchg
fdiv
cwtl
imul
xor
and
outsl
pop
div
mov
je
aas
pusha
xchg
xor
push
push
lds
xchg
xor
and
roll
dec
pushf
add
cmp
cmp
and
sbb
inc
sbb
mov
cmpsb
pop
lret
cmp
lahf
imul
in
or
mov
push
ja
xor
jb
mov
enter
js
popf
and
jne
add
shll
sar
mov
lds
lcall
ret
sbb
lcall
in
incb
mov
and
data16
cltd
add
daa
mov
mov
aad
cmp
in
add
mov
pop
int3
sbb
dec
and
cmc
jl
mov
sbb
mov
adcl
cmc
mov
mov
mov
add
mov
fisubrl
iret
outsl
das
push
and
ljmp
stos
rcll
addr16
xchg
push
push
pop
lods
sub
push
lret
data16
je
xchg
mov
push
shrl
adc
pop
shll
div
push
decl
sbb
push
or
xor
aam
fcoms
pop
inc
nop
shrl
mov
mov
push
dec
jns
sub
into
cmp
dec
add
imul
or
inc
and
ljmp
fdivrs
gs
aad
scas
fld
hlt
adc
in
aad
mov
push
or
cmp
scas
sub
in
pop
jne
cmpsb
push
sahf
lcall
dec
or
mov
mov
dec
jmp
loopne
inc
xchg
mov
scas
fimuls
sbb
push
jno
adcb
lret
cmp
mov
cmp
sub
lods
jmp
pop
adc
inc
out
pop
jno
inc
cwtl
mov
in
jmp
jl
add
nop
mov
adc
scas
mov
inc
xor
fstl
repz
idivl
divb
ss
data16
cmpsb
adc
subb
les
pop
ja
and
rorl
mov
shl
adc
cmp
divb
sub
pop
xchg
imul
int
push
movsb
stos
repz
mov
gs
xchg
jnp
mov
sub
movsl
mull
pop
out
pop
pop
ljmp
push
aad
test
jno
and
and
imul
pusha
mov
out
cmp
aam
jle
js
xor
sbb
and
in
dec
jle
xlat
mov
movsb
push
movsb
cmp
mov
outsl
jnp
sbb
int3
test
jb
leave
dec
sub
out
scas
int3
gs
cmp
out
int3
push
cmpsb
xchg
dec
inc
cli
and
stos
xor
or
sbb
inc
mov
lock
aas
insl
cmp
in
iret
bound
je
inc
in
test
add
movsl
shll
jle,pn
pop
xchg
or
subl
test
fstl
aaa
roll
adc
aaa
clc
pop
jbe
and
pop
lods
push
into
mov
daa
inc
scas
fisubrl
push
or
and
aaa
in
test
test
and
jae
sub
loop
or
and
out
or
or
xchg
and
hlt
shlb
daa
test
pop
icebp
stos
sbb
pop
xchg
lods
jp
jecxz
mov
test
jb
dec
insb
std
add
push
mov
xchg
imul
aas
xor
adc
jmp
cmp
cmp
das
mov
outsl
push
sbb
imul
add
xor
int
ja
out
lock
cli
cld
mov
sub
or
push
or
xchg
pushf
inc
pop
push
xor
mov
and
repnz
std
inc
dec
sub
mov
jl
inc
inc
and
testb
pop
in
cli
std
inc
jbe
daa
add
pop
adc
and
out
mov
stc
lret
ret
jp
sbb
lods
in
cwtl
inc
pop
inc
mov
mov
fs
sahf
sar
pop
push
jbe
xchg
stc
cmp
jp
test
xchg
clc
aaa
imul
inc
adc
add
dec
test
push
sahf
adc
loop
call
jb
mov
dec
sub
xchg
dec
jo
loopne
xchg
outsl
mov
insl
push
cmp
call
inc
sub
enter
fdivs
loope
mov
push
leave
cs
adc
push
call
mov
dec
aaa
aaa
dec
and
sub
jge
fucomp
jns
outsb
cwtl
sbb
add
leave
hlt
jnp
bound
jp
cwtl
xorps
xor
sub
inc
mov
sarb
lods
ret
mov
push
lcall
sbb
mov
cmc
mov
jl
ss
imul
and
jecxz
fldenv
push
icebp
imul
xor
icebp
fldenv
insb
inc
and
loopne
mov
mov
inc
addl
inc
sar
lret
mov
loopne
in
mov
pop
fsubl
xchg
mov
cmp
mov
adc
ret
stos
pop
lods
cmp
xchg
jb
daa
jg
scas
sub
sti
shr
jo
gs
cmp
cmp
or
jmp
or
cmp
mov
js
ljmp
adc
add
or
fsubs
inc
xchg
adc
fadds
lea
loopne
mov
pop
sub
xchg
mov
fadds
mov
cltd
adc
mov
fxch
push
sti
xor
in
xchg
cmp
xlat
dec
jmp
pushf
jg
cmpsb
push
jne
lcall
adcl
push
mov
xchg
sbb
sub
mov
mov
push
ljmp
sbbl
add
cs
out
ret
and
adc
fsubp
lret
in
imul
movsb
test
adc
adc
jmp
repnz
scas
js
lods
and
shlb
pusha
dec
xor
xor
dec
ficoml
push
sbb
and
outsl
test
pop
pop
mov
fwait
cmp
inc
cmp
ss
lcall
mov
mov
push
stos
jle
inc
pop
scas
jo
arpl
push
je
dec
cmp
or
inc
sbb
int3
fsubl
xlat
and
adc
add
scas
in
xorl
rcrb
orps
mov
outsb
jns
add
imulb
ljmp
std
adc
xor
mov
xchg
fsubl
push
xor
sbb
cmc
mov
je
loop
outsb
mov
fstps
les
push
xchg
mov
pop
mov
pop
xor
jb
pushf
pushf
lret
into
adc
dec
inc
push
insb
inc
outsb
jae
mov
cmp
cltd
arpl
aam
js
fistl
dec
inc
jo
pop
inc
loope
or
cmpsb
cld
cmpsl
out
xchg
divl
sbb
je
lods
xchg
mov
movsl
int3
lea
mov
sbb
outsb
and
add
push
adc
popa
and
stc
scas
mov
pop
lods
jo
mov
in
jp
push
and
addl
inc
adc
adcl
jo
lahf
mov
aas
scas
loope
in
jle
sub
fdivs
fiaddl
pusha
lret
iret
loop
sbb
mov
mov
jb
cmpsb
jns
daa
jle
aad
ds
push
jge
xchg
mov
sbb
or
mov
adc
or
xchg
push
xchg
mov
sahf
sahf
dec
xchg
nop
sti
mov
fwait
inc
mov
dec
shlb
mov
xchg
push
mov
jb
int3
push
mov
pushf
pop
enter
xor
gs
minps
sbb
int
in
jnp
push
das
arpl
and
and
sub
in
sub
adcl
cmp
enter
pop
adc
cld
out
push
xlat
insl
pop
cmpsb
adc
push
sub
adcl
orl
sbb
movl
bound
dec
pop
xchg
cmp
sbb
mov
xchg
sarb
mov
xor
jns
std
sbb
lock
sti
ret
cmp
repz
jno
adc
lcall
add
push
leave
jl
mov
push
hlt
hlt
cmp
enter
aaa
popa
shll
sbb
jp
ficompl
aad
shlb
outsl
fidivl
hlt
cmc
lods
push
ret
or
pop
lods
cmp
sbb
movsl
xchg
lahf
xorb
push
inc
fadds
das
mov
scas
jmp
pop
je
insb
sub
sub
dec
xor
jl
and
add
mov
and
jecxz
push
sub
push
ljmp
loope
cs
mov
push
lock
jmp
cmpsb
adc
stos
inc
insl
inc
adc
push
mov
roll
pop
pop
push
adc
push
test
add
cld
jns
movsb
rcll
int
xor
xor
add
jbe
aas
shlb
mov
and
dec
pop
mov
arpl
pop
call
cmp
push
cltd
jmp
mov
xor
xchg
int
lret
cmp
lahf
addr16
andl
sahf
mov
outsb
adc
fstps
stos
sub
and
testl
imul
jg
add
les
lcall
dec
adc
or
sub
jecxz
in
scas
sub
or
jge
addr16
loope
addl
aam
test
jnp
stos
and
sub
jne
jbe
inc
lods
xchg
cmp
dec
mov
xchg
jno
cmp
pushf
pop
arpl
andl
ficoml
sbb
loope
mov
inc
repz
inc
fiaddl
cmpsl
stc
push
stos
sbb
inc
xorl
out
pusha
call
and
adc
enter
pop
pop
pop
sti
push
or
mov
adc
mov
add
mov
pop
xor
test
or
inc
xchg
dec
mov
xchg
in
shlb
stos
mov
and
add
test
lods
jb
xchg
xor
ds
mov
xchg
jmp
jne
cmp
pusha
orb
pop
outsl
xchg
int
mov
imul
mov
adc
jne
xor
sbb
jnp
lods
leave
jno
mov
lods
mov
loop
gs
adc
icebp
mov
pop
mov
in
mov
mov
imul
pop
out
loop
cld
ret
je
rcrb
rclb
dec
and
out
jecxz
cmp
call
pop
dec
cmp
lock
or
push
aaa
leave
inc
nop
sub
dec
adc
jmp
subb
jl
enter
pop
popf
push
lods
add
mov
fs
jo
cmpsl
mov
lea
dec
mov
xor
pop
repnz
dec
xchg
inc
lea
push
clc
in
repnz
lcall
gs
pushf
loopne
jns
in
ja
or
mov
das
int
adc
jmp
scas
push
push
test
jbe
jbe
in
lds
rcrl
mov
hlt
mov
imul
push
and
or
aam
ret
cmp
rorl
dec
shll
xchg
pusha
clc
pop
xor
loop
mov
push
push
lock
and
testl
add
jns
mov
cmpsb
stc
mov
push
push
std
xchg
mov
push
pop
leave
push
and
int3
enter
push
jbe
popl
pop
aam
add
mov
outsb
in
in
shll
movsl
or
jecxz
lret
xchg
add
inc
aad
jno
dec
decl
mov
dec
push
popf
test
xchg
xor
leave
inc
push
jb
aad
jo
jns
add
in
xor
fstl
flds
mov
mov
popf
jo
std
ret
in
pop
xchg
aad
xorb
shll
mov
loopne
cltd
rcrb
mov
je
outsl
out
into
arpl
xlat
fcoml
add
in
sti
loop
movsl
pop
sub
mov
mov
adcb
add
test
movsb
xchg
scas
xchg
pop
mov
ret
repnz
test
pop
scas
pop
das
mov
in
lcall
cs
enter
xor
pop
push
and
in
cmp
loope
mov
ds
lods
mov
jge
fsubrs
sub
jnp
sarb
cmpsb
test
sbb
sub
dec
aad
cmc
test
cmp
push
scas
sbbl
inc
enter
xlat
pop
test
cmp
push
call
dec
insb
adc
stos
inc
imul
inc
and
es
mov
pop
out
jnp
je
test
enter
stc
mov
add
pop
stc
outsb
add
fsubs
jae
dec
lds
inc
shr
movl
aas
sahf
dec
inc
rorl
aam
cld
pop
add
cmp
push
pop
push
add
lds
pop
icebp
testb
lahf
mov
mov
lods
int
lcall
fs
mov
je
inc
push
enter
cmp
pushf
pop
jecxz
ljmp
pop
ss
mov
mov
hlt
cltd
mov
inc
es
int3
fisubrl
adc
lods
repnz
leave
mov
hlt
mov
jle
mov
mov
push
loop
movsl
push
test
ror
adc
fiadds
negb
xchg
inc
fs
inc
sbb
hlt
ss
ret
and
pop
rolb
outsb
jne
sbb
cmp
fwait
mov
adc
adc
sti
xlat
lock
lret
cmc
mov
sub
cmpsl
cmp
stc
jns
arpl
testl
rcl
aaa
mov
mov
sub
mov
lods
loop
lcall
lock
outsl
cld
sti
ret
sbb
sbb
or
cmp
movsl
jecxz
sbbl
popf
sbb
push
add
lods
xor
je
insl
dec
sub
mov
inc
test
cmp
cmpsl
mov
xchg
enter
jecxz
pop
jnp
jo
push
rol
cmp
sbb
push
imul
das
mov
mov
bound
jne
es
xor
lret
loopne
imull
xchg
xor
or
js
mov
adc
jbe
cmp
mov
pop
mov
test
jg
jne
push
xchg
repz
dec
dec
scas
movsb
data16
fidivrl
cwtl
dec
notb
mov
jae
pushf
adc
cld
pop
movsl
js
sti
pop
push
pop
outsb
sti
rcll
mov
popfw
cmovp
mov
and
pop
sub
cs
push
je
sub
xor
push
iret
je
dec
bound
movl
wbinvd
in
in
mov
xchg
andl
arpl
insl
into
aas
outsl
mov
mov
dec
mov
xchg
mov
ds
jne
mov
repz
mov
pop
sub
inc
sub
je,pt
mov
into
adc
sub
adcb
sub
js
imul
pop
mov
lock
popf
insl
cwtl
jo
daa
roll
push
add
ljmp
mov
fisttpl
dec
divl
je
std
test
add
inc
or
fcomps
aas
testl
push
test
call
cmp
jl
shl
add
fsubr
sbb
cmpsl
mov
ja
andl
push
or
neg
jne
add
mov
pop
adc
aam
ss
cli
iret
cmpl
mov
pop
sti
mov
cmp
aam
fimull
shl
sub
jge
jb
ror
dec
out
inc
inc
mov
mov
inc
sub
jo
inc
lea
lock
mov
mov
push
fmulp
pop
xchg
sbb
push
iret
std
test
popf
in
rclb
lret
out
pop
aaa
lret
inc
dec
push
test
std
dec
xchg
adc
sti
pop
pop
les
movsl
cmp
push
mov
xchg
mov
jmp
dec
xchg
pop
ljmp
lods
mov
je
filds
mov
jb
add
xor
adc
xchg
aam
fstl
xchg
adc
push
hlt
jecxz
lcall
add
pushf
xchg
adc
lds
adc
stos
mov
sti
rcr
and
sbb
loop
push
aaa
adc
pop
xor
adc
fs
hlt
push
add
leave
popa
int3
nop
pop
push
fisubrl
rolb
orl
sahf
push
jg
xor
mov
mov
mov
push
jo
inc
aad
adc
adc
pop
test
fldt
hlt
cmp
mov
xchg
adcl
mov
insl
xchg
and
cmp
push
pop
je
pop
sub
adc
jo
stc
out
in
nop
aad
jb
jg
pop
es
cmp
or
push
jnp
mov
mov
jne
mov
jmp
jnp
xor
add
in
mov
pop
shlb
shrb
mov
xrelease
enter
js
cmp
in
sub
mov
imul
js
mov
xchg
sub
scas
cmpsb
pushfw
sti
jo
cmp
bnd
testb
xor
mov
cmp
mov
clc
mov
insl
xchg
leave
jbe
mov
mov
sub
inc
lret
adc
cmp
es
or
scas
idiv
push
fstpl
jne
cld
jmp
mov
lea
jl
mov
jge
cmp
mov
mov
mov
ret
repnz
cmp
lock
pop
adc
movsl
add
outsb
jne
inc
cmp
cwtl
pop
fildll
movsl
daa
stos
out
cmp
push
jne
mov
adc
mov
pop
int
fistps
in
dec
push
push
pop
sbb
mov
sub
insb
out
outsb
aad
dec
inc
imul
xchg
orb
or
or
cs
add
stos
pop
leave
and
popa
rcrb
subl
pop
xchg
or
sbb
lds
xor
mov
aad
repnz
ljmp
push
sbb
and
and
test
cmp
mov
adcl
incb
xor
les
cmp
leave
pop
bound
les
dec
xor
mov
arpl
push
mov
cmp
lahf
xchg
outsb
aas
sbb
add
int3
xchg
jg
pop
pushf
outsb
loopne
sbb
pop
fs
push
fyl2x
pop
push
fcoms
es
out
inc
and
fwait
xor
shrb
std
cld
xor
loopne
xor
int3
pop
adc
sbb
cs
xor
add
sub
pop
mov
fwait
out
imulb
dec
pop
inc
scas
data16
iret
dec
ss
jmp
mov
pop
pusha
mov
jns
in
aas
ljmp
pushl
xchg
je
push
je
xor
rolb
sti
add
xchg
mov
cltd
mov
mov
push
ret
incl
enter
aas
adc
xor
jp
pop
mull
add
mov
push
test
fdivrl
sbb
and
cmp
divl
xor
push
sub
mov
pusha
outsb
cmp
and
cli
and
jns
gs
in
stos
cmp
cmpsb
fildl
aas
pop
cs
imul
xchg
ret
or
xchg
jno
and
bound
data16
js
nop
xorb
lods
cmp
mov
cmp
fwait
push
add
scas
insb
mov
jb
lods
in
aaa
test
insb
fnstenv
loop
inc
pop
movb
outsb
stos
movsb
sar
ja
push
ret
test
push
xchg
lock
jbe
cmp
int
je
and
rcr
cmp
dec
scas
mov
dec
imul
into
jg
imul
in
cmc
daa
jmp
popf
sub
test
jmp
js
jae
cli
inc
mov
jae
jg
in
js
pop
je
pop
arpl
sbbb
sub
mov
lret
lds
push
fwait
dec
add
jge
call
or
loopne
dec
insl
je
push
test
xor
movsl
jnp
addr16
scas
inc
xorb
adc
mov
in
xor
cwtl
mov
lods
push
sub
pop
fs
mov
and
call
mov
mov
inc
ja
rclb
das
push
hlt
fucom
into
fucomi
push
sahf
xchg
movsb
ja
xorb
add
mov
ds
cmc
aas
dec
xor
mov
outsb
ds
mov
arpl
pop
add
out
mulb
mov
cmp
stc
push
cwtl
xor
cltd
shlb
pop
bound
bsr
sti
test
mov
enter
subb
cmp
out
cltd
sbb
mov
mulb
lahf
xlat
jge
sbb
push
adc
inc
push
ds
imul
mov
cmc
and
sahf
popf
sbb
cmp
cli
mov
add
mov
push
add
fwait
ljmp
lea
mov
rorl
cli
fwait
add
lea
ret
inc
scas
lret
lods
aaa
ljmp
mov
cmpsl
test
jecxz
sti
jo
xor
jmp
orb
test
and
sbb
inc
pop
xor
fsubrl
xor
sub
push
or
mov
push
pop
push
dec
mov
push
adc
test
inc
lds
xor
imull
data16
xor
and
shlb
adc
xor
xchg
pop
add
arpl
outsb
push
and
sbb
cli
push
and
adc
and
dec
lea
mov
fnstcw
fadds
mov
out
mov
lret
leave
jg
push
ss
stos
sbb
adcb
xor
cli
mov
add
sbb
push
sahf
pop
xchg
fstpl
cwtl
mov
jecxz
cli
jp
jb
mov
mov
fcoml
xor
jmp
dec
gs
or
stc
aas
iret
fs
jb
out
mov
mov
test
mov
cmpsl
xchg
mov
sbb
cltd
cmovo
and
cmpsl
in
adc
xchg
xlat
jle
fwait
inc
aaa
shl
xor
icebp
sbb
scas
jbe
test
and
inc
inc
out
mov
jo
popa
xorb
in
dec
and
inc
cltd
iret
pop
and
and
push
arpl
in
jbe
cli
pop
xor
dec
repz
add
xchg
mov
jmp
sbb
in
leave
mov
pusha
out
push
jp
sbb
or
cmp
inc
scas
adc
jae
push
xchg
in
jp
in
dec
stos
lock
popf
sbb
out
insb
inc
fsub
add
inc
add
into
lods
roll
nop
dec
xchg
lret
ds
or
aas
mov
push
mov
mov
dec
loopne
and
loopne
mov
jbe
xor
xchg
mov
and
fstps
push
std
add
jmp
in
addr16
pop
inc
repnz
xor
outsb
icebp
js
mov
ja
dec
jp
aad
push
adc
cmc
les
outsl
jno
push
cmp
push
lcall
jecxz
imul
and
in
xor
pop
pop
sbb
sub
jbe
mull
out
sahf
inc
popa
repz
push
aam
xor
pop
xor
movsl
out
cmp
mov
sub
jecxz
pop
xor
fsubrl
mov
inc
clc
xchg
mov
dec
cmp
push
je
mov
xchg
nop
ret
xor
pop
fstpl
fdivp
and
mov
imul
aam
sbb
pop
idivl
js
xor
outsb
mov
es
xchg
movsl
add
es
and
fsubs
mov
aam
pop
in
aaa
out
or
in
lret
outsl
sbb
mov
dec
aas
gs
xchg
into
loope
xchg
and
popa
fdiv
imul
arpl
adc
es
xchg
dec
in
dec
inc
fldt
roll
dec
push
out
scas
pop
mov
imul
sub
icebp
lahf
out
scas
jo
ds
scas
sbb
cs
lahf
iret
repz
adcb
dec
pop
pop
scas
sar
dec
bound
outsb
loop
mov
mov
and
fldt
pop
addr16
cmp
push
mov
xchg
call
lds
sbb
jp
xchg
cmpl
mov
xor
shr
mov
repnz
stos
cmp
insb
dec
dec
popf
sub
out
mov
mov
mov
add
dec
adc
shr
pop
insl
insb
andb
mov
xor
mov
sub
push
push
repnz
dec
push
iret
test
out
mov
fdivrl
lea
mov
clc
inc
outsl
mov
iret
xor
xor
cmc
push
cmp
mov
outsb
cld
add
pop
cltd
inc
jb
sub
testb
mov
flds
mov
lds
mov
lahf
lds
stos
sarb
sbb
ja
rolb
out
xor
adc
pop
popf
mov
inc
ljmp
mov
in
inc
adc
jb
dec
inc
and
mov
divb
jl
pop
xchg
mov
in
out
in
out
adc
loop
mov
in
loopne
lret
and
adc
loopne
lcall
mov
pop
jge
mov
orl
pop
push
roll
popf
ja
in
xchg
push
and
pop
or
aas
xor
xor
inc
sub
mov
pop
in
decl
mov
xchg
jge
decb
addr16
sub
mov
or
sbb
adcb
inc
xchg
out
push
cmp
inc
ja
mov
sub
xor
push
or
dec
test
sub
mov
sti
jecxz
mov
inc
inc
mov
adc
mov
repz
xchg
lcall
lcall
xchg
push
loop
or
sahf
dec
cs
scas
dec
js
inc
xlat
add
mov
test
jg
pop
fsubrs
fsubrl
stc
adc
mov
fstpl
xlat
xlat
adc
fwait
lahf
or
xor
sbb
ja
hlt
cmp
movsl
push
out
mov
sub
fbld
adc
sbb
icebp
cld
jb
add
sub
repz
mov
aad
das
lret
leave
or
mov
mov
adc
call
pop
ja
into
jno
inc
ret
pop
movsb
testb
ljmp
pop
imul
ret
notb
mov
stos
fcmovnb
lock
adc
mov
les
aam
in
fyl2xp1
loopne
fcmove
mov
xor
cmc
push
sbb
add
lea
jmp
rorb
imul
daa
cmp
or
push
gs
dec
sbb
loope
loop
outsb
add
add
js
add
add
test
in
xchg
add
repz
and
out
mov
sahf
movsl
movsl
scas
icebp
jno
and
cmpl
jecxz
fs
scas
mov
jle
fstpt
aaa
mov
repnz
andl
insb
and
loope
sub
test
add
hlt
repnz
imul
push
jns
imul
cmp
add
mov
hlt
rcll
ret
lods
adc
call
xor
test
imul
into
inc
insl
ret
add
cmp
out
call
js
in
aam
push
and
push
lret
xchg
add
out
nop
andl
in
xchg
rcr
addr16
out
inc
cwtl
icebp
gs
sub
or
push
mov
xchg
fmuls
pop
jp
pop
jmp
adc
xchg
sbb
inc
pop
mov
mov
and
inc
adc
mov
adc
shll
pushf
push
mov
xor
aas
lret
lods
arpl
mov
push
mov
pop
push
insb
jl
xor
sub
sub
mov
je
loope
aas
sbb
pop
push
popa
pop
adc
push
mov
dec
scas
movsl
dec
sub
xor
or
in
mov
out
lahf
out
pop
or
mov
adc
fldt
jg
xchg
xor
cmp
cmp
dec
loop
mov
mov
call
xchg
outsb
cmp
xlat
lods
std
push
es
xchg
into
jb
js
clc
int
out
pop
jb
mov
enter
outsl
mov
rcrb
dec
cwtl
out
push
cs
jbe
mov
in
and
dec
adc
add
addr16
repnz
popf
rorb
jle
cmp
shlb
scas
in
push
push
inc
add
ja
gs
jge
inc
orl
fsts
jb
call
jecxz
pop
std
scas
mov
or
push
and
fwait
lods
xchg
jne
mov
repz
pop
pop
xlat
pop
daa
push
xchg
push
out
sbb
sub
aaa
sub
in
adc
add
les
lods
push
out
xlat
sbb
jnp
xchg
mov
fbstp
dec
cmp
stc
data16
cmpsl
je
push
cmp
gs
rcr
addr16
pop
or
stos
add
and
lds
dec
cwtl
sub
cmp
sahf
orb
es
xlat
jg
push
pop
ds
fwait
pop
repz
dec
mov
adc
inc
cld
cltd
pop
js
stc
push
xchg
mov
inc
pop
pushf
jno
movsl
jecxz
mov
dec
loopne
dec
and
or
pusha
pushf
popf
xchg
out
lea
add
daa
in
hlt
push
test
fbstp
xchg
cmp
movsl
clc
in
popf
adc
mov
mov
les
mov
imul
adc
popf
mov
mov
int
mov
aas
lret
pusha
inc
push
mov
mov
insb
sarl
scas
mov
out
pop
adc
scas
inc
push
sbb
xchg
xchg
arpl
int3
add
inc
sub
or
pop
pop
mov
cld
or
sbb
or
cmpsl
imull
into
mov
cld
aam
push
lods
push
cmp
mov
and
sub
testl
jns
add
cmp
les
xor
cs
add
pushf
aam
fs
mov
nop
mov
test
js
fcomps
pop
movsb
es
adc
xor
cmp
xlat
aaa
pop
push
frstor
movsb
sahf
movsl
sahf
ret
cmpb
cltd
cs
mov
dec
cwtl
shr
ds
cmpsb
cmp
out
mov
and
xor
fcoms
popa
mov
popf
fsubl
jg
addr16
mov
test
mov
push
rorb
int3
jnp
cmp
push
xchg
push
adc
test
je
bound
dec
push
call
scas
cmpsb
sbb
lahf
pop
pop
lret
fisubrs
mov
xchg
mov
fildll
push
popf
cmp
movsb
add
ja
je
sub
fmull
xor
or
mov
test
pop
loope
jmp
scas
in
xchg
push
pop
dec
loopne
aaa
push
iret
jne
mov
xchg
lret
cmp
mov
mov
cmpb
mov
mov
ja
mov
add
fnsave
mov
iret
push
jae
outsl
xor
pop
push
inc
dec
loop
dec
sub
and
or
jno
pop
in
pop
adc
das
inc
add
push
and
push
inc
xor
lret
push
pop
aam
cmc
insb
add
sbb
inc
repz
push
xchg
mov
and
int3
loop
icebp
mov
dec
mov
jecxz
mov
ret
mov
push
iret
daa
add
cmp
or
or
mov
dec
addl
pop
pop
enter
and
mov
inc
fsubs
push
or
rolb
ja
addr16
les
dec
test
test
movsl
loope
pop
int
arpl
xchg
pop
lock
xchg
fstps
imul
ss
imul
adc
test
mov
mov
in
out
pop
ds
xlat
pop
sti
mov
jne
aaa
push
dec
iret
cmc
push
and
ret
fsubrp
imul
adc
push
test
sbb
adc
adc
ds
xor
mov
pop
jbe
jno
lods
aam
pop
mov
imulb
xchg
aaa
cmpsb
jbe
neg
enter
push
ffreep
sbb
push
fcompl
hlt
call
stos
and
mov
inc
pop
out
xchg
movl
cmp
lock
xor
inc
sub
cmp
clc
jge
out
mov
adc
pop
test
in
dec
jmp
cmp
mov
mov
out
popf
mov
es
into
lock
outsl
sbb
sub
fldcw
add
jle
and
push
push
or
and
sbb
jns
push
jnp
mov
loop
orl
sti
icebp
jp
out
ret
dec
jg
xchg
imul
mov
cmp
xor
arpl
lret
test
imul
jg
ret
cmpsl
pop
mov
scas
xchg
pop
out
dec
cmpsb
aad
lcall
in
and
mov
aam
and
lea
adc
je
push
mov
mov
cltd
pushf
pop
adc
hlt
out
adc
sbb
lahf
nop
mov
fists
cmp
addl
divb
enter
xchg
mov
mov
das
push
stos
cmp
sti
cmc
ret
add
addr16
cmp
xor
into
or
stos
mov
clc
pop
mov
in
push
hlt
stc
out
push
sub
je
inc
mov
stc
mov
push
shll
arpl
push
imul
mov
adc
pop
xor
push
fdivl
xchg
outsl
sahf
jge
add
sub
push
mov
lret
clc
xchg
imul
roll
or
cmp
loope
inc
pop
cs
mov
cmp
xor
inc
dec
add
outsl
sbb
lds
fstps
pop
ds
mov
jl
mov
loopne
adc
jle
ret
pusha
mov
into
jmp
add
lcall
fdivrl
or
jge
add
cwtl
dec
mov
and
xchg
sbb
add
cmpl
and
mov
dec
mov
pop
fwait
sarl
popa
adcl
testl
js
scas
xchg
call
sar
nop
pop
js
negb
int
outsl
imul
push
or
sahf
dec
pop
and
mov
push
cmp
icebp
in
mov
adc
mov
into
loop
jl
or
mov
ljmp
adc
out
cmpl
add
mov
repnz
lock
sbb
cmp
lahf
lods
test
ds
pop
cld
lret
aaa
push
sub
mov
ficoml
jge
pusha
inc
dec
cmc
and
das
pushf
mov
mov
push
pop
insb
or
test
fsubs
pop
mov
pop
jo
arpl
ffree
lcall
lret
sub
add
xchg
push
test
inc
push
bound
dec
and
out
cmp
cmpsb
push
pop
iret
xor
sub
inc
movb
push
or
and
out
rolb
lods
movsl
test
movsl
fld
mov
inc
mov
dec
shrb
push
enter
or
adc
push
push
inc
add
pop
sarb
aas
repz
das
movsb
ljmp
mov
daa
jg
bnd
mov
sub
stos
and
sub
pop
sbb
popf
ficoms
mov
xchg
pop
int3
mov
addr16
pushf
insl
icebp
cmpsb
daa
arpl
arpl
xchg
je
xor
cwtl
lret
push
mov
push
outsl
pusha
xchg
pop
dec
scas
adc
push
xchg
mov
aas
int
or
orl
into
aaa
sbb
cmpb
push
and
add
sub
rclb
fwait
in
pusha
leave
jle
xchg
sbb
push
pushf
xchg
mov
pop
inc
mov
mov
and
lods
adc
mov
pop
jne
std
outsb
rcll
enter
inc
sahf
sysret
fcoms
stos
inc
or
out
mov
aas
mov
add
xor
adc
in
mov
sarl
insl
imul
ror
jmp
dec
adc
inc
dec
sbb
jne
pop
or
mov
push
and
fwait
imul
fld
cmp
rclb
mov
sbb
shlb
push
sbb
stos
push
and
xchg
mov
mov
jo
xchg
mov
fmull
insb
jae
xchg
add
gs
mov
les
lds
bound
sbb
gs
sub
dec
push
nop
pop
iret
jae
in
adc
hlt
sti
sub
pop
push
ja
repz
imul
mov
int3
in
movsb
add
pusha
dec
out
push
add
push
xchg
or
dec
jbe
mov
gs
and
loop
lea
int
jno
out
es
xchg
add
movsb
fimull
xchg
jl
push
mov
mov
rorb
insl
loop
or
pop
jecxz
adc
push
std
push
xor
movsl
mov
test
aaa
mov
lods
fisttpll
rorb
jns
mov
xorb
addr16
add
imul
aaa
es
or
push
ja
pop
rorb
add
add
fsub
mov
sub
jg
outsl
fwait
sub
sbb
cmp
xchg
cmp
outsl
sbb
jnp
add
push
jge
sbb
ret
xor
ret
push
inc
mov
shll
cmpl
pop
xor
in
jae
in
fprem
dec
sub
enter
imul
clc
cmp
and
fwait
stos
pop
pop
enter
jnp
test
mov
lods
shlb
incl
fwait
cs
and
in
popf
icebp
popf
xchg
push
js
inc
fldcw
mov
sbb
ds
sub
mov
adcb
cmp
sbb
inc
lcall
add
inc
jl
push
cli
push
out
jb
jae
or
data16
pop
test
test
daa
loopne
mov
loopne
das
mov
lea
lods
pop
stos
fcoml
mov
ja
push
dec
cmp
sub
repz
add
insb
sbb
jae
jo
fisttpll
enter
sbb
push
bound
xchg
test
adc
lret
adc
mov
fsubl
jne
jg
pop
add
inc
je
or
in
jg
xor
xchg
or
adc
inc
js
jmp
test
xchg
out
mov
adc
fimuls
test
movl
xchg
cmpsl
mov
pop
sti
int
out
sbb
push
int3
push
outsb
push
inc
dec
cmp
push
aas
push
icebp
stos
mov
lds
loopne
or
inc
stos
stos
and
and
sti
dec
enter
js
push
xchg
xor
push
push
cli
nop
push
and
jo
fstps
sahf
loopne
mov
push
imul
pop
pushl
sbb
push
outsb
daa
xchg
add
data16
jmp
lods
inc
cli
jg
in
and
in
jne
sbb
add
ret
lods
adc
or
into
cwtl
mov
daa
fnstenv
mov
dec
adcl
sar
adc
jecxz
test
fldt
add
ret
cltd
test
jecxz
push
push
xchg
pop
ds
sbb
jg
fdivp
lds
mov
push
push
data16
and
mov
push
in
inc
adcb
adc
clc
aas
mov
out
js
loop
push
les
pop
dec
mov
cwtl
push
decl
data16
aas
xchg
add
jns
scas
popf
push
sti
int3
xchg
not
icebp
ficompl
insb
in
test
addr16
jns
cmp
xor
pop
ds
daa
movsl
jno
mov
movsl
pmuludq
jns
rcrl
mov
and
mov
jp
push
jnp
insb
pop
jbe
adc
inc
or
rclb
xor
mov
stos
mov
imul
jecxz
inc
mov
add
inc
out
lods
aad
xchg
push
mov
sbb
lcall
push
xor
inc
add
sub
cmpsb
push
mov
nop
aam
xor
gs
sbb
imul
mov
pusha
addr16
outsb
ror
mov
and
dec
sub
xor
mov
or
test
mov
or
mov
fisubrs
mov
xchg
adc
pop
gs
add
jmp
mov
mov
adc
insl
hlt
int
nop
sbbb
outsb
pop
or
int
add
pop
fmuls
cmp
leave
popf
cltd
in
xor
push
push
adc
pop
ret
mov
addr16
cld
loope
aaa
xor
shll
sarb
inc
jle
lea
jnp
lock
inc
pop
pop
jle
mov
sbbb
xchg
aam
push
loopne
pop
cmp
adc
dec
hlt
jecxz
and
mov
je
test
roll
adc
fxch
jmp
hlt
lahf
out
ss
xchg
in
inc
inc
into
inc
out
cld
sub
jg
add
shlb
mov
inc
mov
cwtl
jae
cmovns
fidivrs
pop
xorl
mov
sahf
and
jle
or
test
jnp
sbb
lods
mov
or
lcall
lods
arpl
ret
push
call
addr16
cwtl
and
stos
or
pusha
mov
jmp
dec
sub
add
sub
pop
sub
daa
fadd
xor
aad
adc
fcmovnbe
out
adc
jge
cmp
aam
mov
ljmp
dec
in
cwtl
mov
inc
enter
add
sub
add
jg
outsb
mov
fucomi
mov
or
sub
movsb
and
les
hlt
je
adc
xor
sti
push
aad
in
jmpw
mov
xchg
mov
loope
inc
mov
sub
stos
add
call
push
loope
push
mov
jge
stos
loop
rcrl
imulb
mov
arpl
ret
outsb
test
mov
dec
ss
test
shlb
in
and
sbb
and
mov
sub
jno
jp
enter
mov
jb
lock
xor
pop
sarl
xchg
je
in
jbe
test
aas
jecxz
cli
mov
aaa
ficompl
cltd
rcr
ja
mov
cmpsl
idivl
std
jmp
jge
sub
cmp
aas
pop
add
lcall
xchg
push
mov
mov
sub
dec
popf
out
dec
mov
jg
pop
mov
clc
rcl
mov
clc
stos
cmp
cmp
inc
pusha
pop
out
xchg
mov
cmp
sbb
imul
pop
dec
push
outsb
inc
and
push
jne
push
jnp
jno
test
fcoms
push
lahf
mov
repnz
adc
inc
into
sub
aas
mov
xchg
sti
cmpsb
push
sbb
adc
jmp
pop
sbb
xchg
jns
cmc
std
sbb
sub
cmpsl
ljmp
sbb
in
jbe
cmp
sbbb
and
mov
gs
mov
stc
int3
ror
xchg
loopne
js
into
jmp
out
dec
stos
stc
fadd
js
add
stc
inc
xchg
ss
pop
les
cltd
pop
push
mov
mov
push
lcall
lock
out
pushf
sbb
mov
scas
dec
bound
imul
stos
push
lods
dec
in
xchg
jmp
mov
xchg
imul
int
mov
dec
cmp
dec
adc
mov
aas
les
shrl
cmp
dec
cmp
jne
lret
les
and
data16
cmp
shrb
repz
inc
xor
es
mov
or
inc
or
push
gs
mov
xchg
fmuls
mov
popf
xchg
scas
adc
dec
imul
adc
mov
cmp
and
lods
out
mov
inc
jae
dec
inc
fisttpll
mov
mov
push
daa
mov
mov
lea
dec
fcompl
add
push
sbb
xchg
lock
add
repnz
mov
jmp
ljmp
pop
fistl
or
call
mov
jl
cmp
imul
test
scas
mov
jmp
in
cltd
mov
das
movsb
sbb
pushf
clc
xchg
xchg
scas
sahf
sub
shl
cmp
dec
lret
stos
aaa
jbe
test
lods
out
xorb
inc
sub
call
push
mov
loope
repnz
cmpsb
mov
inc
adc
roll
mov
js
mov
mov
adc
jno
push
pop
sti
imul
in
scas
outsl
xchg
dec
adc
jge
lahf
stos
xor
outsl
mov
mov
xchg
sub
pop
in
fcomi
mov
fs
int
test
cmp
fistpl
push
repz
jg
xchg
or
push
or
pop
adc
repz
hlt
mov
add
aas
pop
shr
test
aam
dec
add
lcall
sbb
test
mov
bound
xor
movsb
and
fld
pop
mov
xor
and
xchg
fdivrl
and
pusha
push
insl
int
or
in
dec
add
xor
xor
sbb
andl
out
xchg
inc
cmp
into
xor
mov
push
insl
jne
repnz
divl
sbb
xchg
push
cmp
jbe
stc
mov
jo
add
ficompl
loope
or
movsl
sbb
lds
mov
pop
push
std
imul
xor
adc
rcll
insl
fmull
mov
adc
push
stos
rorl
or
push
enter
jl
test
repz
repnz
int3
shl
clc
inc
stos
mov
push
sarb
scas
lea
push
bsf
inc
xchg
lahf
adc
sub
jle
ja
fcomps
or
dec
jge
pop
sbb
add
jle
blcs
and
cmp
das
or
push
aam
xor
out
jmp
xor
mov
add
data16
popf
pop
stos
push
jne
sub
scas
xor
jnp
pushf
adc
adc
stc
fmuls
outsb
mov
or
push
sti
xchg
jge
fists
ret
scas
lea
dec
inc
or
or
mov
push
cmp
cmp
out
add
pop
fimull
inc
mov
push
adc
cwtl
jmp
sarb
lahf
test
pusha
data16
inc
outsl
and
scas
xor
lea
cmpsb
idivl
mov
push
adc
sarb
sarl
pop
mov
lds
sti
sub
lcall
pop
mov
or
rcr
mov
jno
sahf
dec
or
sub
pop
push
jecxz
aas
iret
jmp
iret
imull
in
mov
jne
mov
outsl
popa
pop
lods
jo
dec
sub
stc
out
in
adc
mov
decb
or
inc
pushf
cli
pop
sub
mov
push
push
mov
dec
and
pop
fcomps
and
inc
les
imul
mov
sbb
and
jno
xor
inc
mov
bound
adc
test
out
mov
mov
add
arpl
iret
sahf
mov
stos
int3
push
pop
jg
shl
stc
cli
cli
icebp
shr
add
lock
sub
mov
repz
fdivs
imul
lret
adc
jno
imul
cmc
fs
inc
aad
clc
jecxz
sbb
dec
or
mov
pop
mov
pusha
lods
imul
lock
and
mov
add
push
mov
inc
rcr
mov
movsb
sbb
add
aaa
cmp
out
fldt
cs
xor
rcll
pop
pop
pop
pop
std
pushf
in
inc
sti
jns
sarl
sub
repz
sbb
out
out
nop
pop
cwtl
xor
mov
fcompl
mov
test
xchg
lret
xor
bswap
inc
inc
addr16
mov
outsb
mov
lcall
lea
dec
xchg
shrb
mov
clc
cmp
jge
test
cmpl
lea
push
sti
mov
or
sbb
xor
push
enter
mov
jmp
aaa
ds
rcrb
stc
mov
jbe
stc
push
mov
inc
std
push
cmpsb
jge
popf
in
mov
cwtl
inc
sbbl
jb
or
arpl
xchg
in
xor
xchg
xor
enter
jns
xor
mov
sbb
cmp
sarb
push
aas
shlb
movsb
leave
inc
xor
insb
mov
daa
lcall
jb
sub
add
push
ja
bound
cmpsl
loopne
push
pushf
lcall
and
push
adc
jno
shr
mov
mov
clc
popa
pop
int
mov
cs
cmpsb
add
cmpsl
into
jp
or
dec
pop
dec
cltd
xor
adc
or
sbb
gs
mov
adc
cld
daa
je
push
and
push
xchg
loop
loope
hlt
sbb
shll
dec
dec
and
cmpsb
lret
out
sub
push
adc
inc
lock
push
mov
xor
sub
ds
fisttpl
pop
loopne
mov
in
add
loop
dec
dec
adc
fwait
adc
push
sbb
shll
xlat
arpl
jmp
call
imul
int3
clc
mov
jmp
xor
stos
push
cmp
fists
mov
mov
sub
dec
out
jno
or
mov
push
movsb
loope
add
test
mov
out
fwait
inc
adc
or
adc
sbb
les
aad
mov
add
xlat
addr16
stc
testb
dec
nop
shrb
cs
pop
xlat
dec
and
xchg
fmull
mov
int
jno
sub
pop
cmp
adc
shrl
movsb
in
xor
push
ret
inc
mov
jmp
sbb
push
push
fwait
xchg
push
xchg
std
aam
in
loope,pn
add
stos
mov
jno
jo
add
stc
loop
arpl
cli
or
fdivrl
dec
arpl
add
sahf
bound
sahf
adc
out
adc
idivb
or
ss
loopne
cmp
pop
mov
cmp
push
fdivs
movsl
fld
adc
mov
pop
push
hlt
fmull
or
loope
xorl
push
mov
aad
cmc
pushf
pop
and
mov
orb
mov
cltd
stos
adc
lea
push
cmp
push
mov
outsl
push
add
enter
xor
in
pop
cmpsb
cmp
mov
sti
xchg
mov
xchg
dec
ret
jp
sub
xchg
push
dec
out
adc
adc
mov
adc
jle
mov
adc
aad
stos
gs
jbe
std
cwtl
dec
fmul
adcb
and
pop
in
call
das
and
cmove
cwtl
leave
jle
shll
or
adcb
mov
dec
test
adc
pop
xorb
mov
mov
sbb
adc
xchg
cmp
xor
fcmove
dec
loopne
popa
lods
insl
insl
in
sbb
out
inc
js
mov
push
cmp
icebp
or
sti
int3
mov
jp,pn
orl
mov
inc
movsb
jecxz
push
xorl
in
add
dec
shl
inc
ss
mov
cmp
pop
inc
pop
movsl
sbb
xor
push
in
adc
jle
aad
je
lds
xor
xor
mov
inc
jmp
aaa
rcr
cmp
lea
push
cmp
insl
insl
add
cmp
aaa
mov
aad
bnd
mov
or
ficomps
mov
paddusw
aas
mov
push
pop
mov
adc
in
cmp
xchg
mov
cmpsb
mov
ss
lahf
jle
mov
in
js
outsb
inc
cli
xchg
mov
cwtl
pop
push
les
pop
ljmp
jne
lock
cmp
jae
jmp
sbb
cld
pop
pop
lods
pop
dec
xor
insl
jno
xor
shlb
mov
sarl
xchg
xchg
vpcmpgtd
fucomip
gs
mov
cmp
lods
xor
ljmp
icebp
mov
jmp
aam
rcrb
addr16
mov
scas
ss
lods
push
xchg
scas
mov
dec
push
xchg
xchg
ror
orl
imul
cli
mov
lea
repz
popf
add
mov
dec
push
push
ss
add
xchg
xlat
adc
sahf
xor
jl
mov
dec
push
fwait
js
mov
mov
jnp
insb
push
mov
adc
dec
dec
rcrl
sbb
mov
ficoms
js
loope
sub
scas
lret
hlt
out
test
mov
inc
add
or
mov
out
add
inc
roll
sarb
dec
mov
cmp
cltd
in
jb
rcll
xor
jmp
jno
sbb
mov
push
fdivrl
nop
mov
push
nop
adc
ss
xlat
sbb
xchg
mov
cmp
fadds
xchg
push
adc
dec
lods
jne
shr
push
xchg
mov
std
pop
fistpl
mov
dec
xor
xor
pop
lea
jbe
or
adc
cs
jns
mov
cli
push
pushf
jae
popa
push
int3
or
sbb
adc
insb
pop
faddl
lds
insb
xlat
sub
cli
jnp
jmp
inc
stos
insb
pop
stc
int3
xchg
mov
lret
fiaddl
rclb
push
xchg
jb
and
jp
sbb
mov
sub
or
inc
imul
sbb
xor
dec
sti
pop
cwtl
jne
pushf
or
xchg
sub
dec
adc
cmp
mov
sub
test
pop
dec
mov
xor
mov
scas
out
lock
sahf
sbb
outsb
les
in
sub
gs
mov
jbe
in
push
pop
sbb
fstl
cmp
call
ret
fmul
inc
in
out
pop
add
sbb
nop
mov
inc
insb
xor
stos
test
inc
push
imul
mov
in
mov
xlat
jmp
add
and
inc
bound
mov
stos
sbb
imul
sbb
outsl
pop
mov
jl
roll
or
mov
fwait
cld
or
mov
mov
outsl
pop
ficoml
test
popf
or
xchg
cmpsl
and
add
xor
sbb
testl
push
mov
cs
push
mov
add
xor
divb
and
outsb
dec
scas
and
sbbb
cmp
enter
aad
pop
mov
and
outsb
pop
pop
mov
adcb
ds
es
ret
lds
xchg
fidivl
ss
jecxz
pop
popf
out
je
into
idivb
adc
arpl
and
int3
fs
lea
pop
or
and
nop
push
cmp
fs
shr
dec
xor
xchg
pop
fs
clc
stos
pop
movsb
dec
add
jle
push
xchg
mov
mov
push
mov
fimull
rcrb
jb
clc
popa
and
jno
cli
cmpsl
or
aas
add
sbb
out
inc
xor
mov
sbb
or
clc
and
pop
pop
clc
or
jo
or
dec
or
sub
pop
stos
xor
stc
aas
insl
push
push
insb
hlt
outsb
fdivr
jne
xchg
fiadds
or
hlt
push
push
adc
pop
sbb
xchg
aad
jl
xchg
stos
push
fisttps
mov
or
or
push
and
mov
frstor
gs
insb
push
movsl
in
and
cmp
ret
xor
push
shlb
dec
aam
lea
push
xchg
mov
inc
pop
push
mov
dec
loop
in
xchg
dec
push
lret
and
push
mov
mov
fisttps
or
pop
mov
hlt
fbstp
xchg
dec
addl
or
push
lahf
sti
add
out
pop
pushf
cmpb
cmc
sub
mov
add
mov
adc
mov
movsb
sahf
test
mov
cmpxchg
loopne
mov
and
in
cmpsl
mov
pop
adc
jge
ss
jle
and
adc
xor
and
xor
cmp
arpl
fcomi
push
nop
dec
or
sbb
imul
loopne
or
jle
lods
jg
pop
les
movsb
jb
or
iret
xchg
outsl
xchg
call
clc
popa
inc
negb
aad
lret
mov
lods
mov
dec
sbb
sub
fiadds
adcb
and
push
jo
test
rorl
pop
clc
popa
jo
lret
add
fadd
mov
adc
mov
jle
in
xchg
pushf
loopne
les
es
sub
push
fsubrs
push
xchg
mov
out
mov
out
dec
lret
fwait
cs
xor
push
fsubs
pop
fistpll
inc
clc
ret
lock
sbb
sarl
fsubrs
mov
js
clc
push
add
xor
out
loop
js
pop
inc
xchg
sub
pusha
mov
pop
or
aaa
out
out
loopne
mov
add
sbb
loope
fnstsw
ds
mov
push
pop
scas
out
mov
xlat
test
pop
js
test
mov
push
gs
popf
movsl
lds
cld
xchg
and
in
or
in
jnp
lret
stos
dec
add
imul
out
mov
mov
push
daa
mov
mov
nop
ds
xor
cmp
sbb
xchg
jae
stos
test
xchg
test
fidivrl
jl
int
sub
sub
outsl
addb
push
jne
mov
cmp
pusha
adc
std
faddl
pop
fstpl
movsl
rclb
pop
dec
std
mov
and
adc
inc
sub
shl
inc
jne
and
rol
pop
loope
fists
pushf
ss
fs
dec
push
xchg
cli
sbb
mov
mov
fistl
into
ret
nop
jne
call
xchg
mov
add
cwtl
and
int
mov
add
dec
shrl
mov
cwtl
mov
cmc
maxps
add
das
cmp
cs
inc
mov
mov
mov
lahf
push
pushf
fs
xor
sbb
cmp
adcb
pushf
in
push
pop
fs
dec
out
lret
dec
pop
cmp
shr
mov
dec
mov
sbb
out
popf
lock
mov
iret
dec
lret
test
jp
and
sub
push
int3
dec
into
loope
adc
daa
sub
ficoml
xchg
and
ficomps
or
lea
jbe
pusha
aam
or
mul
cs
aam
push
mov
jns
pusha
dec
fstl
repnz
pushf
into
fdivr
out
add
div
xor
cmc
stc
scas
push
xchg
in
cmp
bound
stos
add
adc
dec
mov
pop
pushl
pop
jp
scas
aam
or
dec
sub
push
dec
sbb
cld
rcr
push
test
std
lods
mov
pop
in
jne
in
les
mov
ret
fldl
loopne
cmc
sarb
mov
push
out
push
pop
fidivl
mov
insb
push
mov
fs
iret
and
push
ret
xchg
jnp
mov
sti
movsb
pop
data16
fs
scas
ds
inc
cmp
mov
in
ljmp
xor
lret
aas
jmp
stos
xchg
jle
add
or
jne
sub
sub
mov
cmpsb
popa
sbb
add
fisttpll
out
gs
fiadds
and
inc
mov
xchg
cmpsl
enter
loop
fcmovnbe
inc
jg
scas
jne
mov
cmp
cmp
mov
lcall
mov
mov
pop
mov
hlt
cmp
enter
jmp
in
add
push
push
ret
mov
nop
and
lret
lock
pop
std
push
dec
inc
xor
call
jnp
push
pop
icebp
rclb
inc
sbb
cs
sar
sahf
xor
xchg
push
enter
lds
cmp
sbb
rolb
lahf
or
addps
xchg
sbb
cmp
mov
or
add
push
les
out
cli
dec
add
lret
addr16
mov
and
xor
mov
iret
cmpsl
or
out
sarb
mov
mov
jbe
mov
hlt
push
mov
mov
jmp
xchg
int3
push
in
mov
jmp
dec
fs
sbb
in
xlat
stos
push
xchg
addr16
ror
pushf
mov
xchg
jmp
mov
xor
int3
mov
shlb
gs
lds
lcall
sbb
lock
ss
adc
sub
jle
fadd
push
jmp
ret
adc
mull
inc
xor
or
sbb
push
push
cltd
orl
xor
lcall
rclb
scas
test
lcall
out
mov
icebp
pop
repnz
and
mov
ljmp
insb
imul
mov
inc
aam
ljmp
jmp
inc
mov
lret
mov
fwait
inc
nop
and
jne
icebp
gs
ja
push
pop
cmp
pusha
xchg
jb
and
push
fsubl
sub
add
ja
cli
cmpl
addps
lock
pcmpgtb
mov
cmpsb
mov
scas
loopne
add
jae
in
arpl
out
sub
inc
xchg
sbb
add
mov
or
in
sub
inc
mov
push
pop
or
xor
in
sub
xor
in
iret
mov
imul
in
fmul
pop
mov
cmp
loopne
adc
bound
pop
test
clc
cld
push
xor
mov
loop
jmp
sbb
cwtl
fwait
dec
add
insl
insb
pop
rcrl
in
add
cmp
mov
pop
aas
frstor
imul
sub
out
lret
dec
stos
sbb
lret
or
mov
mov
icebp
sti
jecxz
in
jle
push
push
mov
inc
outsb
data16
andl
push
enter
idivb
push
out
and
xor
mov
popf
aad
sarb
mov
xchg
dec
inc
dec
mov
add
out
xchg
mov
das
xchg
mov
jmp
fs
test
mov
mov
das
lahf
pop
sub
xor
aad
sbbb
xor
lret
out
out
dec
outsb
cmc
pop
shl
cwtl
xchg
imul
push
mov
int3
push
pop
stos
dec
sbb
lcall
lock
add
sahf
inc
enter
push
jge
sbb
xor
sbb
cmc
push
adc
dec
push
cmp
or
scas
mov
dec
jg
cmp
loope
cmc
test
sub
pop
lds
cli
in
call
cltd
adc
int3
pop
mov
jbe
lock
lea
or
push
cs
dec
and
dec
sub
inc
call
fidivs
cmp
sbb
push
mov
xchg
pop
cld
dec
pusha
ret
mov
mov
jno
xchg
mov
xor
push
lahf
mov
insl
loope
cs
mov
out
cmpsb
dec
pop
call
popf
repnz
xchg
adc
pop
adc
adc
sbb
aad
fcompp
dec
pusha
jno
dec
std
pop
mov
arpl
daa
cmp
je
add
repz
adc
mov
cltd
loop
fs
out
test
inc
add
data16
ja
dec
inc
in
add
mov
and
jp
jmp
addr16
xor
ret
inc
mov
scas
xchg
push
pop
test
dec
jnp,pn
mov
mov
push
mov
scas
nop
and
sbb
mov
cld
cmpsb
int
insl
pop
mov
bound
adc
jns
push
xlat
xchg
pop
adc
xor
scas
insb
or
xchg
mov
push
std
mov
test
loope
es
mov
mov
add
mov
notb
in
adc
addl
mov
popa
into
xchg
lret
adc
mov
aaa
and
enter
sub
sti
jl
movsl
dec
push
mov
bnd
pop
pop
jecxz
xadd
or
push
xchg
imul
mov
push
xchg
fstl
push
nop
mov
pusha
mov
xor
xchg
sbb
ljmp
cld
mov
shll
int
push
ja
pushf
shrl
push
out
loop
xchg
ljmp
mov
cmpb
cmp
mov
int
inc
fadds
pop
addr16
xchg
dec
jg
fmull
stc
mov
aad
adc
sbb
lds
or
mov
cmp
add
and
cmpsb
add
lea
cltd
icebp
dec
mov
mov
pop
arpl
push
adc
xchg
in
insl
push
mov
fcmovne
repnz
lods
fdivrl
fucomi
jp
xor
push
lds
clc
lock
sub
and
pop
jns
popf
jg
fistpl
mov
loop
push
inc
std
mov
jnp
dec
sbb
mov
fidivs
rolb
outsl
in
push
aas
sub
cld
les
mov
mov
xor
das
test
scas
test
hlt
xor
jno
mov
cmp
in
clc
dec
cli
popa
in
push
popf
test
daa
jbe
ja
out
leave
xchg
add
inc
and
sub
rclb
or
jle
das
inc
outsb
pusha
xchg
add
inc
repz
movsb
pop
lret
addr16
xor
and
sbb
jae
mov
arpl
cmpsb
std
iret
enter
adc
or
mov
mov
and
sbb
rcrl
in
cltd
rorb
push
rolb
and
and
mov
push
pushl
xchg
aaa
rcll
xchg
outsb
pop
leave
add
xchg
andb
xlat
cmp
jns
stos
sub
pop
hlt
mov
xor
aad
sbb
xchg
sti
hlt
outsb
inc
test
mov
scas
cmp
data16
or
lea
pop
jg
mov
iret
and
jno
lret
sarb
shrb
aad
dec
sub
out
pop
inc
inc
shlb
sub
xor
or
xchg
aam
rcll
or
or
clc
push
push
es
imul
ja
sbb
mov
popf
pop
daa
jge,pt
notb
push
pop
gs
lcall
and
in
icebp
into
push
faddl
jmp
imul
pop
cwtl
mov
add
mov
movsb
add
inc
loopne
inc
test
add
sbb
mov
hlt
outsl
pushf
xor
in
push
xlat
loopne
subb
nop
pop
sbb
cltd
ret
mov
push
sub
sub
gs
subl
pop
mov
xchg
test
push
roll
xchg
mov
jnp
pop
adc
sbb
dec
out
das
cmpsl
dec
push
fldcw
je
dec
dec
mov
push
pop
cmpsl
cmp
push
cli
xor
xchg
std
call
xchg
jmp
insb
dec
push
push
lock
mov
mov
popf
repz
mov
rcr
mov
stc
test
es
mov
fmuls
lea
or
adcl
sbb
xchg
mov
mov
xor
iret
inc
cld
scas
nop
adc
push
fistl
xchg
stc
mov
shrb
aam
dec
orb
sub
in
imul
cs
adc
out
adc
mov
mov
pop
jo
push
or
inc
pusha
push
cltd
pop
ja
xor
addr16
ret
cmp
sbb
jno
and
nop
sub
aas
inc
mov
in
pop
xchg
cmp
mov
and
inc
negl
cwtl
addb
je
pop
iret
hlt
inc
sub
lret
add
adc
push
add
jbe
cld
ret
outsb
out
mov
sbb
jno
leave
mov
dec
mov
imul
stos
in
xchg
adc
loope
push
xchg
mov
and
fsubrl
cmp
test
push
test
sub
push
testb
xchg
movl
mov
and
leave
ljmp
out
sub
jle
stos
ficoms
out
xlat
test
scas
jp
into
xchg
inc
dec
fsubrs
push
mov
inc
sti
dec
push
pop
add
test
push
xor
or
fisttpl
cmpsl
popa
pop
mov
xchg
push
pusha
aaa
dec
xchg
push
sbb
popa
inc
adc
cs
xchg
std
ds
mov
leave
or
mov
ljmp
mov
xlat
fidivrl
add
sbb
sbb
pop
or
mov
adc
mov
je
or
stos
inc
pop
mov
cli
insb
add
fcomps
sti
pushf
ret
mov
lret
daa
push
mov
repnz
fnsave
cs
jb
mov
xor
dec
aaa
xchg
sub
jecxz
bound
jl
mov
dec
push
loope
cltd
fdivs
out
int
stos
les
call
and
leave
pop
or
and
negl
ret
sub
sbb
xchg
shrl
cmp
sbb
stc
adc
sub
sahf
jnp
data16
enter
cmp
mov
mov
lds
lcall
mov
test
jne
or
test
inc
imull
call
push
inc
xchg
aas
xchg
cmp
cmp
inc
jmp
addr16
loopne
sti
rclb
push
jnp
add
ret
and
sub
out
mov
lods
loop
in
scas
xor
sub
sbb
xor
loop
fstps
inc
jl
insb
xor
sbb
loop
loope
add
xor
mov
xchg
push
jmp
add
xchg
mov
jb
pop
inc
shlb
pop
sbb
inc
mov
pushf
shll
lcall
ja
nop
rorb
mov
sbb
clc
in
mov
mov
push
mov
shll
je
inc
fwait
loop
and
loopne
icebp
xor
jecxz
gs
lret
dec
push
lahf
je
imul
inc
xor
movsl
adc
adc
sub
xor
xchg
pop
imul
call
mov
inc
ret
fwait
stos
lahf
ret
cs
or
push
sbbl
xchg
icebp
sti
inc
out
cwtl
xchg
divb
ficoms
jl
test
rcl
rcll
cwtl
inc
sub
es
or
pop
jns
lret
and
dec
mov
mov
dec
test
gs
dec
mov
and
adc
xchg
cmpsb
in
mov
ja
insb
movsl
lcall
in
inc
cld
es
xor
xchg
out
jecxz
rclb
adc
repnz
sti
nop
gs
cmpsb
sbb
mov
cmc
cmp
cwtl
jns
mov
rep
shlb
andl
push
sbb
mov
pop
jo
pop
xor
dec
mov
mov
push
leave
aad
mov
mov
cmpsb
inc
push
sarb
sahf
cs
lock
fmuls
sarl
int
jp
sbb
pop
adc
push
scas
sub
sub
ret
jns
test
push
aaa
pop
shll
cmp
ret
ret
popf
stos
fsts
gs
mov
ss
daa
idivl
inc
lcall
aad
les
filds
xor
mov
in
loopne
xor
movsl
cli
pusha
int
insl
add
xchg
pop
ds
rorb
pop
and
xchg
mov
cwtl
sbb
fsub
push
or
xchg
nop
fs
aam
aad
nop
inc
mulb
test
js
push
mov
aam
sbb
mov
inc
dec
and
nop
cli
mov
inc
inc
into
inc
push
cmp
loopne
xor
add
fldl
rcr
fcoms
cmc
sbb
inc
jp
lret
int3
test
imul
cmp
xchg
ret
imul
mov
dec
jbe
jb
rcll
jae
daa
xchg
ret
cs
ds
xchg
push
ja
lret
js
xor
lahf
sbb
shl
sbb
dec
dec
jg
jmp
inc
xchg
xchg
mov
xchg
push
jno
out
jl,pt
fldln2
lret
rolb
cmpsb
jo
jecxz
insl
js
insb
fs
inc
cmpsb
cmp
push
push
fs
xlat
mov
fwait
daa
lods
sub
mov
bound
cmp
xlat
mov
lret
or
adc
movsl
mov
mov
outsb
pop
and
cmc
aad
ss
fstps
int3
sbbb
jno
mov
in
push
in
out
inc
inc
scas
mov
pop
xchg
push
xor
mov
sub
subl
sub
xor
jmp
mov
pop
stos
sahf
mov
pushf
inc
jmp
xor
pop
cmp
mov
lret
push
inc
out
pop
mov
adc
mov
lea
xor
js
push
data16
mov
push
out
sbb
mov
lds
nop
sub
push
or
jl
pop
lea
pop
pop
inc
add
or
test
jns
enter
xchg
cmp
push
imul
push
fstpl
mov
out
sub
lea
xchg
scas
cs
scas
pop
adc
outsb
adc
cmpsb
out
inc
ljmp
enter
mov
sub
jno
pop
and
fsts
mov
xchg
or
dec
and
adc
and
inc
shll
cld
cli
add
lahf
or
mov
jne
push
dec
jbe
lahf
es
inc
stos
lock
and
stos
mov
add
cwtl
pop
xlat
xchg
nop
jp
or
mov
mov
in
mov
cltd
pop
and
cmp
outsl
lret
pusha
repnz
pop
insb
orb
test
in
gs
inc
mov
in
psrlq
xchg
mov
aam
sahf
pop
pop
loop
push
lods
xor
cld
fwait
or
xchg
imul
xor
xchg
pop
decl
cwtl
pop
xor
cwtl
leave
cmp
add
lods
cmp
scas
sbb
dec
aad
das
insb
outsw
ret
scas
sbb
leave
adc
sahf
xchg
cld
xchg
mov
sub
xor
popa
mov
dec
cmp
xor
mov
sub
fistps
mov
add
scas
or
lea
sarb
push
in
adc
or
mov
popa
xchg
xchg
jg
test
mov
xchg
stos
mov
nop
loopne
xchg
dec
insb
cs
pop
ret
xor
or
cwtl
repnz
cmp
testl
cltd
out
imul
push
lret
mov
pop
dec
xor
sbb
movsl
movsl
fs
sub
cld
out
lret
jl
jne
jmp
movsb
sbb
xchg
std
dec
and
icebp
push
in
lods
scas
mov
popa
outsl
loope
mul
jmp
push
sub
out
stos
outsb
adc
cmp
mov
mov
mov
mov
inc
mov
jg
lea
sbb
push
add
dec
mov
shrl
adc
jae
sti
sub
sub
jb
dec
mov
pop
inc
cwtl
ds
xchg
or
mov
dec
sbb
push
and
pop
dec
mov
mov
sti
xor
inc
cmc
xchg
adc
popa
pop
cld
out
inc
inc
mov
cmp
dec
popa
imul
lcall
cli
js
outsl
cltd
inc
movsb
inc
push
pop
push
scas
sub
push
lods
mov
in
pop
ss
lea
ret
add
lcall
sbb
push
cmp
dec
mov
push
or
aaa
test
mov
or
jae
adc
cltd
inc
mov
stc
imulb
sarl
pushf
test
xchg
in
lret
xor
inc
lods
ret
pusha
aaa
add
sbb
fcoml
es
pop
pop
ret
push
gs
inc
adc
adc
int3
je
iret
sbb
sbb
jne
cli
pop
jno
cmc
out
push
pop
mov
mov
bound
pop
movsb
sbb
pop
mov
int3
fcmovne
lret
movsb
xchg
lret
mov
sbb
ss
lock
cmp
insl
stos
mov
xor
ljmp
push
faddp
xor
les
push
cmp
loop
out
dec
cmp
lock
mov
mov
mov
or
xor
es
mov
ret
sub
add
add
pop
iret
sbb
pop
js
cmp
pop
mov
aam
sub
movsl
movsb
mov
outsb
popf
mov
scas
push
imul
shll
cmp
mov
icebp
add
test
push
test
mov
adc
int
xchg
outsl
push
mov
mov
outsb
cli
sti
cmp
mov
and
iret
jg
rcrl
dec
adc
shll
lods
xor
xor
gs
gs
dec
call
push
repz
pop
ljmp
in
lcall
negb
sub
outsb
xchg
aaa
push
movsb
lds
adc
addb
add
or
jl
repz
and
mov
movsl
orl
testl
cmp
subb
das
sub
xchg
jbe
out
and
data16
inc
or
js
or
mov
daa
daa
outsb
outsl
enter
icebp
pop
pop
pop
jbe
gs
daa
aas
test
arpl
loope
xchg
sti
clc
mov
lods
testl
xor
sub
shrl
aas
push
and
or
js
or
pop
sbb
ret
bound
xchg
imul
mov
hlt
imul
pusha
mov
enter
mov
jne
fistl
mov
mov
dec
aad
xchg
xchg
mov
pop
arpl
ljmp
ljmp
sub
jmp
dec
cld
mov
loop
cmp
fadd
fstpl
sub
push
js
inc
mov
sbb
je
in
pop
lods
adc
mov
fwait
outsl
lea
add
lods
lea
mov
lcall
jno
pop
ds
push
add
lcall
stos
and
rorb
in
clc
mov
out
aam
imul
inc
ja
and
cmc
je
mov
std
mov
daa
lock
sbb
stos
push
cmp
adc
xor
rorb
or
push
push
pop
ret
sbb
subl
lods
jmp
mov
ja
adcb
lods
in
int
dec
loopne
cmc
inc
or
lahf
loope
std
mov
into
sub
mov
xor
adc
sub
out
mov
xchg
cmpsl
outsl
rcrl
inc
sbb
xchg
or
jno
mov
sbb
pop
inc
push
jg
sub
movsl
xchg
pop
rorl
sub
in
sbb
cmp
into
adc
and
cmp
pushf
sub
jge
divl
fwait
xor
out
les
movsl
mov
dec
xor
dec
clc
jae
rcrb
js
shl
movsb
insb
add
movsb
int3
and
jmp
fcoml
lods
or
insl
imul
mov
jle
sbb
stc
cmpsb
dec
pop
mov
stos
dec
mov
das
insb
sbb
sub
dec
push
insl
or
push
xor
ss
jnp
inc
outsl
mov
in
mov
xchg
inc
scas
mov
sub
jg
iret
dec
mov
jbe
out
mov
jge
pop
jl
call
cmpsl
lahf
ret
into
inc
inc
popa
jl
xchg
jl
lret
or
mov
nop
movsl
push
cwtl
push
adc
shl
mov
pop
lret
popa
dec
outsl
and
sub
cmp
sbb
orl
mov
inc
jl
push
je
xor
xchg
xchg
adc
xor
lret
xchg
mov
push
pop
stos
daa
aad
jo
fistpl
nop
xchg
pop
inc
rcll
and
cmc
fwait
and
jno
adc
xor
fdivs
data16
outsl
rcrl
sub
dec
pop
gs
xor
xor
arpl
mov
fistps
out
lods
mov
mov
jo
sbb
and
sarl
lock
jmp
dec
mov
ficomps
repnz
rorl
sbb
jbe
xchg
push
jge
xor
add
jecxz
lds
sub
fsubrs
cmp
outsb
loop
add
dec
inc
mov
pusha
testb
rorl
jno
sub
cmp
sbb
push
test
xor
les
inc
mov
mov
mov
scas
stos
outsl
inc
imul
iret
call
repz
pop
leave
js
jl
out
push
inc
pop
mov
sub
fcoms
inc
out
sbb
push
lods
shr
lock
mov
outsb
addr16
adc
lea
jns
push
sti
push
mov
ss
aad
in
mov
and
insl
push
fcompl
lods
shll
lods
xor
test
test
nop
add
and
mov
dec
out
fsubrp
add
cmpl
push
outsl
jecxz
pop
sub
or
cmp
imul
push
xchg
mov
mov
fcomi
ljmp
dec
mov
out
clc
scas
jno
xor
pop
cmp
inc
or
jne
inc
sub
mov
icebp
jp
popa
xor
out
shll
leave
insl
mov
aam
xor
jo
push
sub
xor
test
in
xchg
push
bound
stos
xchg
scas
xchg
mov
inc
sub
sub
add
iret
jge
in
adc
push
cli
mov
push
loop
ret
cs
sub
in
rorb
jo
enter
fbstp
xor
push
arpl
xor
pop
jno
rolb
shll
cs
mov
imul
xchg
je
movntq
jg
outsb
or
das
push
pop
jle
shll
lock
or
aas
push
outsl
mov
or
sar
scas
mov
inc
sbb
or
dec
and
dec
and
popf
dec
mov
pushf
sbb
scas
scas
mov
pop
aad
lock
sub
mov
scas
pop
bound
movsl
mov
rcl
lods
xor
mov
jb
test
push
or
sbb
jge
scas
inc
clc
xchg
dec
push
xorl
lcall
cmp
lods
lahf
xchg
add
push
dec
lds
mov
pushf
fucompp
lea
push
add
jb
add
pop
aas
cmp
dec
lret
pop
pop
jnp
xchg
loop
adc
push
pop
cltd
inc
sub
test
sub
sub
add
and
xor
sub
icebp
push
shrb
stos
pusha
dec
fdivl
mov
or
rol
xchg
cs
xor
clc
out
cmp
outsb
mov
and
cmp
rorb
lods
cmc
cs
aas
jge
and
inc
popa
sbb
push
lahf
mov
hlt
ss
and
or
scas
ja
jb
insl
dec
push
lods
mov
and
jecxz
jbe
popa
ret
jbe
push
and
xchg
fldt
pop
out
sub
mov
cmp
stc
lret
sarl
xchg
test
inc
pcmpgtw
push
pusha
jp
inc
addr16
ss
xchg
test
popf
clc
add
xorl
add
cmp
iret
push
repnz
xchg
xlat
stc
imul
pop
gs
popa
aam
clc
jbe
mov
xchg
push
or
add
xor
push
and
jmp
arpl
clc
test
jae
pop
add
int3
insl
out
add
in
repz
push
add
shl
insb
dec
pop
imul
xchg
add
js
je
push
or
and
inc
insl
jp
xor
in
push
pop
inc
fildll
movsl
aaa
lret
loop
hlt
lret
clc
push
add
and
cld
adc
mov
aam
imul
and
fsubl
fimull
adc
mov
cld
sub
fisubrs
push
aas
in
bound
hlt
jmp
push
jg
dec
rcl
jp
ret
and
aas
inc
pop
rorl
lcall
insb
push
or
addr16
cmpsb
pop
loopne
adc
movsb
mov
enter
push
adc
out
push
je
inc
fcoms
jae
iret
leave
mov
pop
xchg
mov
loop
in
mov
mov
xor
js
dec
aam
aaa
pop
mov
hlt
aam
arpl
mov
inc
mov
or
jmp
sbb
fcmovb
lods
es
bsr
adc
push
dec
subb
push
mov
das
cmp
bound
lahf
and
xor
mov
mov
jo
in
fwait
cld
les
gs
lret
les
xlat
push
fbld
fcomip
or
ss
pop
and
jmp
sarl
pop
fdivrl
lcall
loope
jg
sub
lock
xchg
sub
aaa
mov
arpl
or
mov
inc
cltd
xor
imul
dec
leave
out
mov
cmpsb
lea
add
std
pop
mov
jl
dec
jmpw
mov
push
lahf
stos
mov
imul
shrb
and
jne
add
adc
sbb
sbb
insb
imul
xchg
sbb
xor
test
and
stc
pop
fidivs
cld
adc
les
mov
mov
sbb
sarb
sub
mov
cmp
int3
push
xor
pop
dec
and
inc
mov
jae
xor
std
insl
nop
lods
test
enter
jl
sbb
in
out
xor
hlt
mov
or
mov
enter
insl
test
leave
mov
xchg
test
jp
adc
out
lcall
dec
sbb
sub
pusha
xchg
mov
cmpsl
es
dec
cltd
add
iret
xchg
outsl
dec
ljmp
dec
pop
adc
pusha
fbstp
mov
das
sbb
push
mov
les
mov
movsl
fcomps
mov
iret
sbb
xchg
fwait
sti
jb
push
jg
and
xchg
mov
mov
fstpt
pcmpeqw
roll
mov
xor
mul
or
sub
jmp
negl
adc
adc
ss
push
in
sbb
inc
loopne
push
sub
lret
call
dec
in
mov
lock
iret
out
popf
dec
gs
jae
dec
lret
jl
rcll
movsl
pop
adc
mov
adc
sti
jo
mov
fistl
xor
setle
xchg
std
movsl
movsb
iret
orb
scas
cmc
xor
push
jns
jns
into
into
popa
and
iret
lahf
dec
nop
cmpsl
jbe
lds
xor
sub
andb
and
pop
xlat
ds
adc
jge
pop
cli
inc
je
xchg
aam
dec
stos
or
int
mov
or
test
movsb
ficoms
xchg
dec
or
inc
mov
comiss
pop
icebp
mov
loope
push
dec
std
jno
orl
and
pop
dec
ja
xchg
frstor
daa
inc
std
fdivrs
ljmp
or
leave
lret
mov
out
aaa
fadd
push
fildll
lret
jp
sub
add
mov
jo
pop
adc
decb
repnz
dec
jo
ja
cmp
dec
rcrl
mov
cmp
push
cli
lock
rol
movsl
or
dec
cmp
xor
popf
dec
xor
push
cli
mov
add
testl
add
roll
popf
out
add
push
sbb
mov
mov
scas
xchg
in
or
ss
mov
push
sbb
psrlw
rclb
mov
xor
call
std
shrl
dec
scas
aad
iret
loop
lahf
cli
adc
dec
shl
fadd
loopne
scas
gs
nop
stc
mov
xchg
pop
movsb
and
mov
sub
outsb
xchg
iret
int3
jne
cmp
fnstenv
add
outsl
mov
aas
jecxz
call
cmpsb
cs
push
loopne
inc
enter
xor
inc
mov
xchg
push
mov
xor
inc
or
cltd
add
cmp
loop
js
cmp
mov
xchg
cmp
das
pop
mov
sub
popf
sti
push
mov
xlat
loope
cmp
sti
nop
stos
lahf
sarl
xor
subl
push
jne
jg
mov
aam
xchg
xchg
mov
jbe
cmp
add
adc
leave
mov
test
scas
and
inc
xlat
jle
fildll
mov
es
cmc
ja
inc
test
jo
dec
and
pusha
xchg
sahf
bound
dec
lea
xor
imul
dec
cmp
fwait
jmp
dec
cmpsl
inc
pop
or
adc
or
incb
cs
dec
mov
mov
fld
mov
icebp
mov
ficoml
cmp
sbb
push
and
stos
jp
push
jmp
insb
xchg
add
lods
pop
aaa
jmp
test
mov
imul
std
notb
push
push
out
pop
aam
xchg
fbstp
push
inc
hlt
cmp
iret
or
or
dec
dec
mov
cli
in
repnz
icebp
jb
mov
push
test
insb
adc
into
adcb
add
je
dec
outsl
fadd
inc
fs
dec
jl
and
movsb
adc
xor
ficoms
dec
jnp
mov
mull
in
scas
mov
int
mov
inc
pusha
test
into
pop
test
jmp
add
ss
mov
cltd
or
xor
rcrb
sbb
sub
fdivl
cmpsb
pushf
inc
nop
leave
negb
ja
lret
lcall
ss
stos
in
xchg
sbb
mov
aam
stos
ljmp
mov
test
sub
mov
imul
mov
daa
movsb
lock
loope
cmp
orl
xlat
cmp
pusha
pusha
add
mov
mov
mov
and
dec
sub
aas
das
scas
sbb
loope
loope
mov
mov
sub
outsb
and
add
mov
mov
cs
inc
push
adcb
inc
data16
mov
mov
imul
push
loopne
int
popf
sbb
add
dec
push
aad
sub
jle
jl
inc
pop
add
lds
outsb
aaa
xorl
cmp
je
nop
sbbl
sub
movsl
jg
es
lcall
jecxz
mov
loop
mov
pop
xor
arpl
imul
pusha
adc
mov
faddl
lods
popa
adcb
in
pop
mov
decb
xchg
mov
aaa
lds
or
jl
mov
mov
sub
adc
inc
js
sub
fsubl
and
fnstsw
jle
or
sti
nop
add
add
lock
lods
cli
or
cmp
sbb
les
aaa
pop
pop
and
mov
cli
sbb
pop
add
or
pop
in
loope
das
mov
pslld
pop
and
pop
sbb
sub
repz
andb
inc
inc
std
ss
ljmp
int3
or
jle
loope
sarl
inc
out
adc
inc
or
mov
mov
popa
sbb
and
lret
or
xchg
cmp
pop
popf
shll
and
outsl
inc
dec
inc
insb
mov
inc
roll
and
jmp
lds
orb
cmpsb
sbb
xor
rcrb
mov
ret
data16
pop
clc
aaa
shl
or
add
sbb
das
popa
cld
inc
gs
jg
loopne
xchg
and
mov
pop
pop
ljmp
cltd
out
mov
jecxz
icebp
mov
cltd
sti
js
jle
lds
jecxz
lret
lahf
stos
sub
jae
push
xlat
into
in
push
jmp
out
xchg
shrb
add
loopne
fucom
leave
lahf
ss
out
pusha
mov
mov
faddl
or
call
mov
cltd
mov
int3
dec
call
test
sbb
fs
cmp
repnz
pusha
mov
loop
aam
ja
sub
flds
sbbl
lods
pop
imul
aaa
mov
cmc
lds
fcompl
and
mov
cmpsb
lret
adc
jle
mov
pusha
iret
loopne
jae
xor
jl
xor
call
not
push
mov
dec
add
call
or
mov
cmp
and
inc
fdivs
jnp
or
scas
xor
arpl
sbb
insl
std
sub
sahf
or
bnd
adc
dec
jbe
pop
repnz
int
imul
out
mov
cli
outsl
xor
dec
push
imul
pop
jl
or
cmp
in
mov
jge
jns
jns
cs
push
xor
ret
sbb
inc
push
dec
push
iret
mov
enter
or
fmul
mov
add
adc
or
loop
pop
mov
cmpsb
loop
mov
mov
int
mov
repnz
adc
cmp
xor
cmpsl
push
push
insl
cmpb
jmp
enter
enter
stos
neg
xor
fisubs
push
lcall
mov
pop
mov
dec
and
mov
cld
cmp
jo
cmp
das
xorb
sub
movsl
dec
test
or
fstps
xchg
js
ret
xchg
mov
mov
pop
lret
jmp
inc
icebp
aam
dec
xorl
ljmp
or
sti
adc
xlat
ficoms
lahf
ss
je
fwait
jne
mulb
adc
pop
mov
cmp
mov
negl
int
xchg
lret
popf
mov
scas
sbbl
mov
push
jns
out
lahf
test
sub
jnp
incb
jp
push
push
mov
rcr
jne
and
cwtl
pop
out
mov
mov
cmp
push
adc
rolb
jge
dec
cmpsb
lret
cmc
test
out
shrl
into
and
adc
aad
jl
sbb
jns
lahf
xchg
enter
mov
mov
insl
fidivrl
dec
mov
addr16
mov
mov
jge
test
je
rol
mov
xor
aam
push
mov
jb
lods
mov
push
loope
jnp
lret
popf
xchg
pop
mov
adc
inc
cs
out
test
in
data16
aad
inc
adc
push
and
or
gs
into
and
test
xor
xchg
mov
push
pop
sbbl
cmpb
mov
mov
push
rcl
push
jnp
sub
out
push
int3
arpl
jl
out
sub
das
pop
add
mov
and
push
fbstp
push
lahf
sbb
sarl
sahf
into
cmpsl
loope
mov
inc
pop
pop
add
cmp
push
lret
jnp
es
jnp
xor
jbe
mov
dec
ret
scas
jne
sarl
dec
popf
ss
xor
sub
dec
in
or
jge
out
dec
dec
mov
shrb
cmp
test
sbb
and
pop
mov
js
pop
or
rcrb
add
or
xchg
fnstsw
sub
push
aad
testb
ja
sti
push
push
adc
push
fdivl
aaa
lcall
adc
xor
jmp
inc
in
cmpsl
sbb
adcl
out
minps
jns
sub
xorb
outsl
cmc
in
sub
push
push
sub
jge
sbb
cmp
adc
add
mov
arpl
sub
shlb
xchg
add
sub
decb
test
add
bound
sbb
xor
imul
leave
sub
jo
pop
popf
push
mov
rorl
or
mov
pop
lock
mov
jns
js
fdivs
iret
pusha
sti
test
add
mov
and
pop
sub
xadd
call
jl
mov
lret
or
and
and
shlb
jp,pt
jl
or
cmpsb
pop
outsl
xchg
push
adc
xor
dec
in
shrl
push
sbb
repz
jp
lcall
movsl
cmp
movb
in
pop
cli
aas
dec
ficompl
cmp
outsl
mov
repz
data16
cmpsb
sbb
jg
iret
popf
negl
mov
test
outsb
hlt
iret
pushf
cmp
stc
fldt
mov
rorl
fcoml
out
popa
sub
popf
and
and
in
xchg
push
pop
outsb
add
cwtl
mov
adc
cmpsl
xor
sub
xchg
sub
repnz
xor
lcall
ret
jne
inc
inc
lahf
mov
adc
sub
insb
mov
pop
dec
push
pop
dec
iret
test
arpl
and
bound
dec
push
je
stc
in
repnz
enter
rclb
fsubrl
mov
rcl
push
sarb
ret
xor
mov
mov
scas
mov
push
inc
fcoms
sbb
and
push
xlat
sbb
mov
add
mov
jns
add
es
mov
pop
movsb
jne
mov
lahf
mov
xor
xchg
ss
in
or
cmp
gs
in
lret
popa
imul
fmuls
xor
pop
bound
cli
in
daa
jb
fisubs
jmp
addr16
shrl
ds
and
arpl
aas
push
and
arpl
jecxz
sbb
out
or
inc
cld
sbb
cmp
test
push
pop
fnstsw
repnz
int3
xor
sbb
fwait
mov
jle
lock
lret
fldl
lahf
inc
lds
push
clc
sbb
add
fwait
out
mov
and
cmp
insb
mov
mov
int
and
insb
sbb
mov
xor
dec
dec
or
xlat
call
push
dec
mov
aaa
scas
push
cmp
mov
arpl
pop
add
scas
pop
mov
inc
adc
enter
lar
dec
xchg
lock
mov
push
insb
cmp
mov
es
adc
sub
dec
sub
out
lcall
ds
cltd
xlat
adc
inc
or
push
rcl
mov
jl
and
sub
ja
or
aas
xor
adc
add
inc
cs
aam
push
cmp
mov
addr16
push
in
or
mov
mov
jmp
insb
pusha
imul
pop
roll
cld
jg
fistps
jmp
jg
or
popa
ret
mov
mov
sub
mov
pop
mov
test
test
cmp
dec
ja
add
push
push
xchg
mov
xor
jae
pusha
adc
jg
push
fnstsw
into
rcrb
popa
sub
stos
loope
inc
and
enter
fstl
mov
lea
or
jae
mov
or
aam
test
push
pop
xor
lods
stc
outsb
add
pop
jg
dec
pushl
push
mov
cmp
push
cmpsl
xor
lcall
or
xchg
test
mov
add
dec
movsl
adc
mov
adc
call
test
ja
or
nop
mov
jp
mov
pushl
movsb
repz
pop
clc
jge
pop
push
mov
mov
test
and
insb
inc
lret
sahf
push
mov
adc
jmp
insb
jp
loopne
data16
pop
stc
jno
xchg
jle
in
jbe
movsb
sub
dec
cmp
sub
in
cmp
jle
pop
push
mov
jo
xchg
sub
rorl
and
push
data16
aad
xchg
es
xor
sub
ret
sbb
xchg
xchg
clc
xor
jne
test
push
xchg
mov
stc
ja
repz
cs
mov
xchg
adc
lret
mov
pop
lock
pop
out
ret
push
push
aaa
pop
mov
sbb
cmp
or
cmpsl
mov
in
loopne
repz
adc
xlat
xor
mov
jne
loop
repz
clc
sbb
jmp
pop
jecxz
pusha
push
sbb
pop
stos
das
andb
dec
iret
push
xor
fisttpl
inc
sbb
cltd
xor
and
icebp
mov
adc
sbb
rol
sbb
out
pop
jmp
daa
dec
adc
mov
fwait
sbbl
or
push
mov
xor
sub
dec
repnz
adc
xchg
mov
pop
xchg
mov
adc
xlat
sbb
enter
je
sbb
mov
std
inc
or
mov
fisubrl
std
lods
mov
nop
enter
testb
jo
int
cmp
and
and
mov
push
pusha
addr16
daa
mov
add
fists
mov
int
jae
sbb
inc
imul
cmpb
ja
out
addr16
pushf
sti
popf
xor
fwait
xor
jae
sub
out
sub
mov
nop
xchg
xchg
addb
ljmp
or
iret
mov
inc
daa
lcall
fsubrs
jl
jo
jnp
xor
jae
mov
sbb
sti
aas
sub
push
mov
imul
aam
add
or
je
mov
push
cmp
imul
dec
inc
aas
xchg
sub
dec
xchg
out
out
fs
or
aaa
adc
pop
and
jno
jp
mov
add
xor
popa
push
or
dec
int3
sbb
sbbb
inc
cmp
dec
cs
add
adcl
mov
fsubs
dec
cmp
lea
enter
pop
jns
sbb
ljmp
insb
mov
push
push
push
inc
rcr
je
fisubl
sti
mov
popaw
sub
cmp
rorl
cmpsb
shrl
inc
pop
jns
das
leave
mov
mov
or
stos
ss
and
dec
mov
cld
inc
vxorps
out
mov
int
mov
jno
in
inc
sub
in
add
and
push
setbe
pusha
push
sub
stos
int
push
iret
add
mov
das
loope
fdivl
lea
into
shlb
xor
mov
mov
cli
push
notl
out
lods
arpl
adc
mov
ficoml
cmc
xor
mov
shrb
filds
lds
lret
adc
stos
leave
in
inc
inc
pop
xchg
jo
pop
push
shll
fiadds
loope
or
int
push
jo
aad
mov
inc
pop
mov
cmpsl
push
fdivrs
cmp
mov
jmp
sub
hlt
test
jl,pt
rcll
sbb
popa
imul
pop
mov
dec
lods
call
enter
mov
ss
inc
lcall
or
mov
pop
rcrb
cltd
das
in
adc
es
and
shr
jl
imul
sar
stos
mov
pop
xlat
pop
push
aad
cld
inc
fcmovu
jge
jmp
dec
testl
movsb
xchg
pop
inc
in
aad
push
ficoms
cs
lahf
fimuls
pop
jmp
cmp
or
ss
lea
sbb
sbb
fs
fwait
movsl
jo
aam
roll
sbb
popa
xchg
push
repz
inc
arpl
loop
jge
arpl
cmp
in
lcall
dec
les
loop
sar
push
or
fdiv
fwait
mov
sub
stos
sti
std
fistps
std
mov
ljmp
ljmp
js
mov
pop
movsb
pop
ljmp
xchg
add
ds
mov
outsl
test
mov
loopne
outsb
outsl
aad
xchg
jle
negb
ljmp
adc
cmp
push
inc
sub
mov
out
jmp
fadds
xchg
adc
jmp
imul
xlat
inc
popa
pop
std
ret
fwait
sbb
sbb
mov
lock
dec
sub
cmpsl
dec
adc
fstps
negb
iret
inc
pop
or
add
and
pop
ja
test
ljmp
add
add
je
push
cmpsl
hlt
mov
xor
bound
mov
test
cmpsb
out
clc
lahf
cmp
mov
jo
popl
inc
mov
jl
std
jae
pop
fucomip
into
pop
lret
lcall
mov
inc
lcall
cmpsl
lea
ljmp
dec
sbb
movsl
or
dec
mov
inc
xor
lock
lock
movsb
movsb
js
mov
mov
repz
or
push
fiaddl
dec
les
mov
or
test
cmp
add
repz
and
push
movsb
adc
pop
ret
rep
into
cmp
rcr
cltd
cld
fstps
das
jl
add
enter
sub
out
xchg
inc
mov
subb
ja
lahf
pusha
pop
cmc
jl
cmp
push
test
ja
das
add
hlt
or
adc
scas
lock
data16
push
das
push
or
mov
lcall
fimull
add
xchg
or
aam
dec
imul
mov
jb
into
ss
sbb
cld
dec
xchg
dec
add
fstpl
frstors
lahf
mov
mov
fwait
sbb
cmp
inc
std
popa
lds
xchg
stos
sub
stos
sbb
adc
data16
in
cmp
mov
idivl
es
lds
lea
and
test
sahf
push
inc
xchg
mov
cli
arpl
xlat
mov
push
mov
nop
ds
push
movsb
stc
adc
rcrl
mov
in
cs
in
push
data16
pop
and
mov
cmpsl
ds
push
hlt
jp
pusha
push
mov
subb
test
repnz
pop
push
jno
sub
or
sub
fnsave
mov
add
dec
or
mov
subb
mov
mov
xchg
jns
mov
mov
jae
mov
inc
push
xor
ljmp
inc
sti
add
dec
cmpsl
sub
adcb
test
and
and
or
jae
aas
aas
out
jg
shrb
mov
call
jmp
je
loope
lods
sub
push
cmpsl
incl
xchg
mov
test
test
bound
roll
cmp
mov
imul
mov
mov
sbb
setne
ds
insb
sbb
pushf
fsubr
cmp
xchg
add
mov
test
xchg
mov
inc
pop
pop
mov
call
movsl
dec
pop
negb
addb
jbe
in
mov
inc
roll
or
pop
inc
inc
lods
dec
mull
sbbb
sbbl
cmp
std
dec
iret
cltd
mov
mov
and
fmuls
jg
dec
add
sub
scas
jle
jae
cmpb
xor
sub
sbb
insb
push
or
cmp
and
mov
rcr
dec
pop
and
dec
and
aad
push
push
jb
shlb
xchg
sub
dec
xchg
add
ljmp
or
add
lret
jg
and
sub
pop
sub
and
test
inc
inc
lcall
add
fisttpll
ss
mov
add
into
testb
cs
test
inc
or
cs
shll
pop
sub
and
out
push
in
mov
jg
clc
dec
int
fdivrl
sub
ss
xchg
mov
in
mov
or
insl
cld
test
mov
push
push
jne
cmp
maxps
outsl
outsl
adc
lret
arpl
add
ds
lds
cmp
popa
sbb
dec
dec
xor
or
fnstsw
inc
xor
fidivrl
nop
jmp
jae
push
fmull
sbb
xor
push
dec
pause
ss
shlb
fstpt
call
inc
pushf
scas
fldl
lret
stos
pop
subb
dec
mov
sbb
dec
inc
lods
mov
or
je
push
hlt
cmp
leave
das
ja
repz
add
push
push
and
lretw
scas
cli
fsubrs
out
add
lock
lret
mov
push
sub
pop
js
aam
test
sub
mov
cmp
mov
mov
push
sub
or
push
mov
cmp
cltd
ja
jge,pt
arpl
in
cmovg
lods
pop
cmp
jae
scas
aas
cmp
cltd
cs
cmpb
adc
roll
mov
adc
inc
into
push
sub
mov
lea
mov
ret
jae
and
daa
add
add
pop
out
mov
add
mov
aam
adc
push
xlat
xchg
mov
mov
ret
lods
cmpsl
add
pop
push
std
scas
pop
inc
shlb
jne
mov
xor
fsubl
or
push
jmp
div
push
and
add
and
jl
shl
xchg
mov
jo
cmp
sbb
mov
jp
sbbl
jge
jge
sub
or
dec
jno
lahf
int
mov
lock
inc
sbb
pop
test
inc
add
gs
sub
xchg
movl
add
roll
jns
ret
sbb
jle
imul
loop
mov
pop
popf
out
hlt
dec
mov
in
inc
xchg
test
in
popf
imulb
sub
push
shrb
xor
pop
sub
test
mov
shrl
insb
mov
push
into
bound
and
dec
scas
add
inc
bound
add
inc
inc
push
out
xor
test
ret
out
mov
dec
mov
lea
repz
xchg
test
imulb
lds
sbb
negb
nop
add
xchg
push
dec
sbb
sbb
lret
orl
gs
pop
or
call
and
lret
sbb
cwtl
lcall
frstor
neg
adc
cmp
mov
mov
ficompl
int3
sbb
cmpsl
dec
imul
cmp
aas
ja
and
imul
addb
xorl
subl
adc
jg
sub
movsl
ret
out
lds
into
xor
jnp
dec
and
lods
pop
sub
push
jle
mov
or
inc
dec
pop
ljmp
dec
jl
inc
mov
aas
adc
aam
cwtl
inc
mov
sub
stos
movsl
sub
push
mov
ret
int3
xchg
dec
and
repnz
xor
push
pushf
lods
mov
call
insw
sbb
sahf
mov
pusha
jp
fwait
dec
sbb
mov
fcoml
lock
ficoms
aad
and
insl
cmovno
cmpsl
jg
repz
call
mov
mov
adc
int3
add
and
call
aaa
lods
lret
xchg
imull
xlat
lock
fists
outsl
ret
mov
dec
loope
add
xchg
iret
pop
test
dec
mov
push
mov
cmp
cmpsl
clc
inc
fs
lcall
lcall
adcl
xlat
iret
sti
mov
mov
hlt
test
test
sti
cmp
aas
push
or
add
cmp
icebp
sub
data16
xchg
mov
mov
jne
in
push
mov
outsl
jns
inc
lret
cmp
lret
dec
sub
fs
insl
leave
mov
aam
and
mov
pop
mov
fcoml
and
inc
mov
scas
rcrb
cld
inc
aas
xor
or
mov
jle
add
xchg
lds
stos
mov
dec
jo
push
pop
and
daa
adc
stos
and
lods
out
add
mov
jo
cli
and
rolb
mov
and
shlb
mov
and
xchg
enter
pusha
jbe
pop
xchg
js
movsb
mov
inc
add
test
or
lods
daa
lods
add
xor
in
imul
clc
push
leave
imul
es
inc
xor
mov
push
fiadds
bound
jle
jp
dec
imul
inc
rcl
dec
cli
popf
cmpsb
mov
mov
ss
call
scas
xor
and
mov
pop
jae
lock
push
lea
inc
cs
enter
fidivl
mov
popf
adc
popl
cmp
gs
sbb
pop
xor
enter
imul
subl
xchg
ret
xor
mov
sti
insl
loope
cmp
xlat
addr16
sbb
stos
sub
jecxz
mov
cs
es
int
pop
xchg
lods
aas
loope
xchg
inc
fistl
and
bound
mov
sub
or
xchg
xchg
push
sarl
fisubrs
mov
push
arpl
mov
sub
pushf
jne
cmp
les
jb
bound
mov
xor
cs
push
idivl
shll
int
mov
hlt
arpl
mov
xchg
loope
shl
fadds
jl
mov
jnp
push
fdivl
push
cmp
sbb
xchg
pop
jb
pusha
dec
cmp
xor
adc
mov
sti
inc
lock
xlat
cmpl
mov
mov
push
ret
sub
cs
inc
xchg
fs
addr16
jbe
std
cmp
ret
and
xchg
imul
sub
aad
xchg
iret
int3
add
enter
mov
int
sbb
clc
xchg
rorl
xchg
inc
mov
dec
lods
fstpl
mov
fdivs
pop
pop
idiv
add
out
jne
inc
add
mov
mov
dec
call
stos
lock
dec
fisttpl
sahf
ja
dec
jbe
dec
hlt
fbstp
push
call
sbb
popf
test
xchg
cmp
xlat
repz
mov
or
inc
lret
mov
and
cmp
xchg
jmp
pop
popf
leave
lret
sbb
cltd
cmp
sbb
jnp
repz
jmp
sbb
fcmovnu
fcom
adc
or
mov
cmp
mov
ficoms
pop
adc
xchg
data16
shlb
add
add
cmp
or
pushf
sub
lahf
or
mov
bound
jbe
push
inc
fadd
cmpsl
mov
int3
in
xchg
push
jmp
out
jge
dec
test
jmp
xchg
jb
cmc
cmp
adc
xchg
lock
add
stc
mov
mov
xchg
cli
sub
mov
push
pop
add
in
mov
cs
xor
mov
mov
aam
push
add
addr16
pop
ficomps
in
subl
inc
out
pop
adc
mov
cwtl
and
popa
imulb
out
adc
pop
pushf
rorl
add
xor
mov
push
mov
cltd
fnstsw
inc
xchg
testb
push
iret
push
int
jle
test
pop
push
repz
push
daa
and
pop
xchg
push
aaa
cmpsl
divb
lods
loope
push
mov
xchg
mov
pop
sbb
push
sbb
sub
xor
or
in
loope
and
cmp
cmp
and
bound
xchg
mov
lea
xchg
loopne
roll
xchg
pop
pop
loopne
mov
add
xchg
nop
stos
in
sarl
adc
mov
cmp
mov
mov
adc
call
xchg
movsl
in
scas
add
mov
lcall
mull
mov
movsl
sti
mov
inc
push
cmp
xor
mov
mov
ffree
arpl
mov
lret
xchg
in
jbe
adc
pushf
adc
pop
adc
in
fwait
es
bnd
jb
int3
push
cli
pop
push
stc
jnp
cwtl
mov
mov
stos
inc
cwtl
sub
sub
add
cltd
jl
insb
push
mov
adc
cmpsl
je
sub
lret
in
out
out
cmc
addl
xchg
sub
in
movsl
in
cld
fiaddl
or
cmpsb
mov
test
jle
sbb
dec
mov
adc
subb
cltd
imul
push
repz
shll
mov
jg
xor
pop
cld
add
aas
push
jo
sbb
out
je
int3
lock
mov
iret
bound
movsl
jae
sub
push
pop
sbb
or
dec
imul
in
add
cmc
mov
fcomip
lods
jbe
test
push
pusha
fidivrs
push
sbb
jge
ficomps
jle
je
push
inc
insl
cmp
pop
xor
add
cmc
int
and
lcall
push
mov
sarb
mov
jae
ljmp
or
sub
or
xchg
inc
mov
lret
data16
or
sbbb
pop
adc
xchg
add
lret
ds
jo
test
stc
xchg
and
mov
int
jp
sub
jg
pop
arpl
or
imul
mov
sub
incl
cmp
dec
out
scas
je
fistps
mov
je
add
in
aaa
mov
xchg
pop
int
sbb
pusha
ljmp
aam
dec
push
divl
ss
pop
or
mov
int
cs
cmc
mov
movsl
addr16
push
and
gs
xchg
sbb
ss
ljmp
xor
or
pop
sbb
aam
mov
addl
add
sarb
push
fldt
in
pop
inc
push
xchg
testl
ficoml
paddb
xor
xchg
and
pusha
ss
or
mov
into
or
dec
call
push
sbb
bound
stos
dec
xchg
sub
push
sub
gs
lret
je
xor
daa
rolb
jbe
jle
mov
in
orl
pop
lea
lea
jmp
mov
cltd
pop
cs
outsl
daa
in
out
push
lea
aam
mov
gs
mov
and
sbbb
adc
fnstsw
push
ret
xchg
cwtl
xchg
ss
mov
add
or
sbb
mov
push
addw
add
adc
pop
jb
cltd
repnz
shlb
xor
ds
jns
jp
shlb
push
mov
mov
cmp
nop
je
lahf
xchg
mov
arpl
jnp
jg
shll
loop
movsb
pop
sahf
das
bound
loop
out
enter
mov
cwtl
pop
adc
cmp
arpl
scas
or
pop
jne
push
pop
xchg
adc
sbb
jae
pushf
into
outsl
lahf
mov
mov
addr16
movsb
lahf
jnp
add
stc
dec
jecxz
jbe
insb
aaa
push
xchg
fnsave
inc
push
dec
imul
sub
shr
das
adc
insw
jg
inc
imul
fwait
andb
loopne
dec
xor
out
xchg
push
int
sub
adc
lock
mulb
cmpsb
loop
mov
mov
inc
push
stc
adcl
cmp
test
cmpb
cs
or
mov
loopne
and
rclb
pop
inc
or
test
mov
loope
xchg
jp
push
in
lret
jnp
pop
lahf
dec
fimull
xchg
shlb
adc
sub
lahf
fimull
lock
mov
push
jo
lret
loop
mov
xor
test
push
pop
xchg
inc
addb
stos
inc
cmp
push
sahf
lea
pop
dec
out
mov
dec
cs
jno
xchg
jle
push
fsubrl
push
test
das
sbb
xor
jnp
sub
ja
fcmovbe
mov
out
fs
adc
pusha
sub
mov
mov
std
arpl
jg
adc
dec
jecxz
mov
sbb
xor
shll
pop
push
neg
xchg
xchg
sbb
cmp
and
sbb
cmp
pop
into
inc
arpl
bound
fcomi
or
push
push
sbb
testb
add
add
xchg
lret
jmp
outsb
dec
test
xchg
xorl
fistps
je
dec
ljmp
aas
lods
pop
lods
push
pop
adc
aam
dec
push
gs
inc
imul
mov
in
bound
pop
add
rcrb
bound
push
add
jl
xchg
sub
push
cli
push
shrl
or
sahf
sub
shll
inc
pop
xor
popf
ds
jmpw
xchg
adc
lods
test
sbb
pop
cltd
lret
test
fcompl
out
mov
rorb
mov
dec
adc
cld
or
cmp
pop
lcall
push
loope
pop
pop
enter
lcall
call
adc
mov
jo
lea
and
loopne
pop
ret
ljmp
sahf
das
lock
aam
jle
into
cltd
loope
sti
adc
in
mov
pusha
jnp
cwtl
sub
jl
lcall
out
out
jo
add
jb
jnp
dec
jmp
inc
add
fcoml
mov
push
cmp
adc
fs
mov
es
cmp
in
jnp
add
lret
sbb
add
jae
repnz
mov
jmp
pop
shrl
xchg
scas
xchg
bound
dec
jmp
repz
sbb
sbb
and
cltd
mov
jmp
jl
xor
insl
jge
cmc
xchg
mov
adc
movb
mov
sbb
dec
mov
mov
stos
xor
je
idivb
sbb
xchg
pop
pop
sub
inc
out
loopne
loopne
xor
adc
pop
cltd
cmc
mov
add
dec
dec
pusha
repz
out
inc
leave
cmp
pushl
into
iret
mov
or
shrl
cmpsl
or
cmp
fwait
in
adcb
out
push
stos
and
adc
push
mov
imul
aaa
and
lret
sbb
scas
cmpsl
jmp
sub
int
jl
outsl
subl
add
popa
into
xchg
repz
mov
adc
fimuls
ficomps
pop
test
add
daa
insl
jo
iret
mov
sub
push
or
mov
pushf
push
mov
aas
outsl
clc
mov
mov
int
inc
stos
push
xchg
xchg
cmp
es
out
fs
cmp
inc
lea
xor
lahf
jnp
push
or
cli
dec
or
sti
sbb
stos
adc
sti
pop
jnp
or
icebp
lret
adc
es
push
or
dec
adc
push
inc
cmp
fisubrs
int
rorl
in
sti
sbb
das
dec
gs
jmp
stc
jg
xchg
and
jae
or
xor
pop
in
pusha
adc
ret
xchg
lods
in
incl
int
call
icebp
test
sbb
dec
cld
insb
dec
and
ret
mov
cltd
cmpl
mov
dec
or
sahf
movsb
dec
pop
push
cmpsb
mov
enter
cmp
dec
arpl
adc
push
inc
mov
adc
rcl
in
jb
cltd
xor
ret
repz
cs
cltd
fidivrl
push
jp
push
xlat
mov
frstor
cwtl
and
push
fwait
xor
out
mov
fistl
ja
sbb
aaa
scas
add
out
xchg
push
lods
jns
or
enter
mov
jg
outsl
or
sbb
cltd
pop
ja
jne
std
fisubrl
mov
or
in
movb
into
jecxz
inc
jns
xlat
push
int
push
jmp
xorb
dec
hlt
and
cmp
cmp
mov
or
lods
add
or
vdivpd
xchg
xchg
dec
cwtl
leave
xor
mov
repz
push
push
xchg
out
jle
sub
mov
fstp
mov
divb
gs
pop
sub
xor
stos
sbb
int3
cwtl
inc
jmp
inc
add
sub
pop
pop
mov
std
pop
std
out
icebp
mov
mov
jne
inc
push
or
pushf
jb
mov
mov
xchg
popa
icebp
lret
xchg
nop
sbb
sub
incl
sub
adc
aaa
outsb
orb
stos
inc
insl
pop
xchg
pop
aam
push
push
inc
dec
movsb
pop
pop
push
popa
and
lret
sbb
or
aas
sub
lahf
or
sti
xchg
jle
lahf
mov
xchg
out
xor
testb
test
gs
fsubrs
repz
scas
cmpsb
fwait
add
popa
jecxz
popf
repnz
test
popf
cmp
cwtl
stos
push
xor
jle
imul
xchg
push
adc
popa
leave
fcoml
cmp
int
daa
pop
stos
sbb
xor
pop
xor
mov
xchg
les
cld
or
leave
fmulp
stc
xlat
fistpll
inc
push
adc
in
dec
mov
push
pushl
and
or
js
pop
test
neg
test
mov
jge
shrd
mov
adc
dec
les
fsubrl
dec
push
aas
sbb
adc
sbb
inc
test
push
mov
mov
and
je
popf
ret
mov
scas
push
inc
or
repnz
inc
sbb
mov
or
and
in
mov
ss
sbb
jle
xor
mov
jle
lock
mov
pusha
ljmp
test
sbb
shrb
cmc
dec
call
mov
arpl
fmull
push
inc
lods
jae
popa
jmp
mov
mov
cld
mov
dec
dec
cmp
loope
cltd
rorb
mov
sub
ficoml
jne
mov
lods
out
les
out
add
dec
int3
adc
lcall
add
lods
jge
push
push
cwtl
repnz
test
adc
jns
dec
std
arpl
push
retw
shll
push
paddusb
sbb
push
xor
fdivrs
mov
movl
or
in
sbb
sbb
sbbb
push
sbb
cmpsl
test
push
push
or
sti
scas
or
mov
fsubrp
push
lret
fdivs
das
mov
sub
lcall
jno
fldenv
cmc
jg
test
leave
xchg
pop
loop
mov
loop
dec
jno
daa
int3
aad
push
imul
or
popfw
inc
inc
or
jns
clc
arpl
sub
inc
jns
outsb
inc
pminub
test
cmp
divl
mov
jbe
push
mov
xchg
in
mov
ss
mov
testb
fidivrs
mov
push
cmp
inc
or
cmp
cmpsb
repz
movl
inc
mov
and
cltd
dec
outsl
and
dec
arpl
sbb
cmp
mov
jb
xor
enter
or
sub
jle
ret
js
cmpsb
fldt
push
adc
dec
inc
jae
or
and
outsb
and
add
xchg
ljmp
stos
loope
scas
xor
cld
das
pusha
dec
jl
push
jns
cwtl
push
push
roll
jo
jmp
stos
mov
xchg
jl
jno
jge
pop
in
into
cmp
push
psrlq
outsl
cltd
jae
call
and
movsl
pushf
and
xchg
mov
mov
pop
loop
cmp
cmp
out
sahf
mov
add
int3
mov
stc
push
mov
inc
pop
xor
leave
and
xor
and
sbb
lcall
fs
outsb
add
sbb
leave
xchg
cltd
test
cmp
es
std
xor
mov
adc
loopne
pop
and
fists
push
pop
inc
sahf
mov
xchg
addr16
add
lods
jb
lock
loopne
jp
jecxz
out
push
int
pop
xor
test
es
lods
mov
and
pushf
xchg
add
xchg
or
jbe
stos
jno
gs
and
or
out
push
loope
loope
pop
gs
out
xchg
mov
sahf
ss
or
repnz
mov
inc
xor
xchg
fwait
push
dec
inc
jmp
and
test
fs
jp
and
jecxz
mov
dec
jne
sub
ja
push
jmp
adc
mov
mov
dec
mov
jo
into
scas
test
out
fdivs
imul
mov
fmull
jno
test
push
out
pop
dec
and
jno
cmp
filds
loope
cli
add
xor
push
add
sahf
sbb
shrb
sar
sub
mov
leave
push
data16
shlb
ret
les
fisubrl
sti
test
std
stos
xchg
ret
sbb
daa
xchg
inc
rsqrtps
sbb
pushf
mov
sub
out
mov
lds
lea
outsl
adc
in
cwtl
rcll
outsb
pop
out
inc
lods
repnz
xchg
pushf
mov
or
outsl
into
push
fisubs
mov
mov
loopne
dec
mov
pop
push
sbb
sbbl
dec
sbb
mov
jmp
pusha
out
mov
mov
mov
ret
aam
lcall
pop
imul
lods
xchg
loop
xor
and
into
das
sbbl
jo
pop
das
incb
call
nop
hlt
mov
and
pop
mov
inc
imul
pusha
pusha
mov
cmpsb
dec
lret
xor
cmc
xchg
mov
pusha
pop
cmp
xlat
movl
sbb
cmpsb
sub
aam
stos
fstl
cmc
sub
idivl
or
daa
jno
adc
add
and
repnz
scas
adc
pop
cmp
push
incb
xchg
jp
push
mov
out
push
pop
pop
add
aad
mov
dec
adc
cmc
lret
call
inc
leave
fcomps
iret
xchg
rclb
lods
movl
inc
rorl
sub
lock
js
es
enter
lds
hlt
xchg
mov
xor
data16
mov
mov
jne
mov
rcrl
inc
outsl
pusha
dec
mov
cmp
pop
aaa
scas
aad
pop
je
ds
cmpsb
es
mov
or
fs
sbb
push
inc
and
pop
mov
cs
jge
mov
push
clc
clc
xorb
mull
pop
movl
mov
mov
inc
inc
cmpsb
xchg
sahf
nop
pushf
movsl
sub
inc
mov
jmp
push
fmulp
shll
aad
sub
mov
pop
dec
jp
mov
xchg
sbb
jp
popl
cmp
mov
or
movsl
push
push
mov
jbe
push
das
sti
pop
adc
mov
cmp
add
add
and
repz
mov
hlt
arpl
or
in
add
loope
pop
sub
mov
dec
cmpb
inc
xor
repz
shrl
pop
inc
mov
jnp
pop
adc
call
mov
pop
inc
dec
sub
push
xchg
data16
mov
xor
or
daa
cld
aad
and
xchg
jle
sahf
jl
jbe
or
push
lods
jp
scas
xor
stos
xchg
js
pushf
pop
lds
dec
popf
bound
cld
lahf
lcall
mov
cmp
jmp
lea
jo
pop
xchg
addl
int
dec
cmpsl
push
mov
xor
xchg
lcall
sub
push
ljmp
daa
lahf
jne
jae
cmp
mov
outsb
test
mov
xchg
aas
pop
call
gs
push
and
jle
stc
test
pop
jae
mov
adc
cmp
insl
addr16
sbb
inc
xchg
fildl
cltd
shll
inc
pop
cmp
andl
imul
loopne
enter
mov
sbb
dec
pop
ret
ds
push
loopne
cmp
dec
xchg
pushf
ljmp
dec
mov
cmp
test
sarb
mov
mov
les
jl
xchg
aaa
hlt
dec
scas
andl
fdivr
pop
data16
stos
jne
icebp
cmp
sahf
or
mov
movsl
decl
mov
pop
in
inc
out
jnp
sub
iret
mov
cmp
dec
test
xor
cmp
sbb
push
or
insb
mov
jb
lret
push
add
sbb
aad
es
sub
test
out
pop
sbb
js
pop
sub
je
shl
in
add
arpl
lahf
cmp
jp
pop
mov
xchg
fwait
xlat
add
jl
int3
pop
pop
lret
xor
jp
pop
js
das
jae
shll
insb
push
xchg
cld
sub
das
popf
fs
hlt
sub
push
fldcw
jne
or
mov
sbb
lret
test
mov
cmp
ds
push
mov
cmp
and
mov
stos
aas
push
fidivs
ds
shrb
sub
pop
rol
movsb
sbb
mov
imul
je
xchg
bound
test
jg
sbb
es
out
xchg
clc
cld
insl
dec
das
repnz
inc
ret
xchg
jb
push
into
pushf
test
mov
out
xchg
jno
addl
sbb
mov
jle
loopne
mov
and
scas
xchg
sub
or
fcoms
in
rclb
mov
fs
mov
js
sbb
in
cmp
or
bound
int3
imul
sti
jnp
insl
popf
adc
rep
jb
cmp
lea
inc
add
movsb
inc
cmpsb
dec
xchg
testb
cli
push
loopne
insb
lahf
sbb
dec
or
sahf
mov
lret
sti
jmp
loop
daa
mov
mov
sub
mov
popf
xchg
addl
mov
sarl
scas
or
jmp
sahf
in
and
and
lods
cmpsl
dec
inc
lods
into
sbb
mov
cmp
adc
rcl
add
test
iret
dec
mov
ds
fcmovnbe
cld
cld
icebp
adc
out
adc
push
jb
rorl
pop
lods
cmp
ret
mov
or
cmp
lock
xor
mov
shrb
mov
repz
test
jle
mov
mov
sbb
imul
cmpsl
and
mov
add
add
pop
leave
js
daa
shl
push
rcll
lcall
sub
jb
lcall
in
cmp
push
sahf
dec
sti
imul
xchg
mov
mov
sub
enter
scas
loope
cmp
xor
mov
cmc
sbb
jmp
push
or
adc
repnz
inc
mov
inc
or
insb
sbb
ror
dec
bound
mov
addb
mov
fistps
mov
jmp
and
dec
jl
mov
lock
inc
xlat
or
imul
sub
mov
jno
aam
fcompl
or
sub
dec
pop
or
dec
mov
sbb
cmpl
cmp
mov
arpl
mov
jae
dec
btr
popf
filds
jne
jp
cmp
cli
loop
or
pop
xlat
sahf
cmpsl
add
adc
mov
sub
dec
mov
jne
inc
sti
mov
cli
ss
mov
inc
mov
call
dec
cs
int
es
shll
lahf
sbb
lcall
and
out
pop
fisubrl
out
mov
idivl
push
xchg
sbb
popf
neg
lret
xchg
inc
inc
loopne
pop
xchg
gs
pop
pop
fcoml
mov
mov
std
sbb
stos
mov
jp
out
syscall
dec
aas
loopne
adc
or
test
dec
or
mov
repz
sbb
jns
mov
stos
in
ds
aad
jecxz
and
out
or
daa
setle
pop
dec
out
or
lea
and
xchg
insl
xorl
scas
pop
rcrb
ljmp
push
sbb
ja
hlt
mov
or
sub
fmulp
rcrl
push
jg
xchg
out
ja
out
cmpb
cmc
scas
jns
xor
repz
sbb
leave
push
pcmpgtd
adc
sbb
cmp
pop
adc
mov
jp
cmp
fwait
xchg
scas
test
xor
notb
negb
leave
and
pop
pop
inc
adc
cmc
mov
mov
mov
repnz
cmpsl
jne
std
les
sbb
iret
xchg
mov
fstpl
adc
mov
fwait
cmpsl
das
dec
mov
lret
shll
arpl
sub
cmp
xchg
fnstsw
mov
mov
aaa
xchg
adc
shll
test
pop
mov
lret
or
ja
add
addr16
addl
cli
movsl
mov
xchg
ja
jb
push
dec
jbe
loope
and
test
test
adc
jge
xor
add
xor
dec
test
mov
movzwl
dec
in
push
jo
cmp
push
jl,pn
ffreep
es
mov
mov
jno
stos
mov
mov
cld
stos
sbb
xchg
jnp
test
sti
mov
dec
lcall
in
out
jne
push
xchg
lock
xchg
lahf
xchg
mov
push
cmp
cmp
push
add
push
test
push
popl
ficoms
xor
mov
aad
out
add
cmpsb
aam
sbbl
mov
sbb
inc
pusha
xchg
push
movsl
lret
jnp
pop
xchg
ja
push
int
jmp
mov
xchg
add
fsubs
roll
push
out
ljmp
hlt
jge
dec
pop
aad
scas
xor
cmp
pop
jmp
aam
add
out
adc
loopne
mov
repz
shrl
dec
neg
enter
or
sarb
je
cltd
movsb
lods
imul
pop
movsl
sub
jl
xor
push
cmp
or
icebp
xchg
sbb
mov
popa
sub
lds
pop
imull
or
pushf
loope
rcrl
mov
or
jmp
xchg
and
rcll
movsb
les
out
push
lock
dec
and
sbb
cmpsb
imul
xchg
add
loopne
enter
insl
bound
sbb
hlt
cwtl
ss
shrb
fstl
xor
xor
push
adc
or
lock
cmpl
mov
mov
mov
fsub
sub
xchg
out
xchg
pop
xchg
pusha
divl
stc
test
xor
out
fs
push
fstl
push
push
jmp
pop
aam
add
dec
or
mov
cmp
xchg
mov
cmp
inc
mov
stos
repz
inc
imul
push
sbb
lahf
aam
int3
movb
pop
movsl
xchg
mov
lods
xchg
push
jmp
sub
mov
add
mov
adc
sub
in
lret
lods
insl
xor
mov
sub
dec
mov
pop
add
clc
outsb
dec
sbb
pop
mov
mov
nop
int3
sbb
pop
jecxz
mov
mov
fcmovb
imul
or
rclb
out
sub
xchg
jle
arpl
push
jo
sbbl
cmp
adc
xor
jecxz
or
and
rcll
aad
rorb
pushf
dec
ret
rcrl
lods
mov
jmp
adc
es
lret
xchg
gs
fwait
lock
cmp
xlat
dec
xchg
loopne
lahf
add
pushf
mov
pusha
adc
pop
push
scas
jmp
jmp
xchg
push
add
adc
shlb
popa
and
mov
pusha
push
cmovb
std
xor
mov
xchg
hlt
mov
sbb
xchg
and
and
out
ffreep
and
test
pop
jle
fldl
add
aad
cmp
push
mov
jb
mov
nop
mov
add
imull
mov
xchg
push
clc
pop
jp
gs
pop
fadd
add
pop
pusha
cmc
fimuls
shlb
mov
jno
cmp
inc
shlb
mov
mov
dec
sub
add
andl
sub
pusha
push
out
movb
and
push
pop
lock
fs
std
or
inc
jecxz
aad
enter
shll
push
jbe
jle
xor
push
in
cmp
xor
sbb
jle
mov
popf
ss
lock
xchg
or
lock
mov
pushf
sub
adcl
stos
push
mov
pop
and
rclb
mov
and
clc
push
loope
and
iret
pop
dec
and
sub
fchs
sahf
rdtsc
loopne
push
hlt
enter
out
std
inc
decl
outsb
subb
outsb
jge
or
or
jecxz
xor
in
mov
jbe
sti
sub
ss
in
xchg
push
inc
les
pop
adc
js
and
add
outsl
inc
ror
mov
xchg
or
stos
lcall
push
or
stc
xor
insl
pop
cmpsb
or
addr16
mov
outsl
enter
cltd
adc
jp
jns
xchg
sbb
cltd
je
pusha
inc
repnz
jae
subl
leave
push
push
loope
sub
push
xor
mov
and
mov
test
inc
fadd
adc
inc
mov
mov
pop
push
jl
sbb
xchg
cmc
inc
mov
push
aas
fwait
iret
push
sbb
cmp
aas
jg
out
stos
inc
jg
dec
xor
pop
xor
fwait
pushf
cmp
fs
mov
pop
push
pop
mov
adc
cmpb
mov
cmp
sahf
adc
jns
dec
lods
push
mov
mov
inc
int
xchg
cmp
jbe
mov
out
shlb
add
js
in
lods
mov
lea
lcall
icebp
js
pop
mov
push
cmp
inc
dec
pusha
scas
add
mov
jge
lock
out
cwtl
repnz
cld
aad
ret
movsl
mov
or
lahf
imul
cmpsb
mov
fwait
sbb
jno
add
stc
jns
cmpsb
fdivrp
jg
jns
xchg
hlt
sarb
int
or
loope
xor
adc
add
xchg
push
add
sahf
adc
pop
mov
out
mov
dec
fidivrs
inc
stos
cld
loop
int3
or
mov
dec
out
inc
sbb
dec
push
loopne
inc
inc
pop
fisttpl
cmp
inc
xchg
pop
xor
mov
int3
and
mov
sarl
push
scas
fadd
fs
adc
xchg
mov
sub
mov
lcall
ja
outsl
test
pop
lcall
enter
stos
pop
in
lea
pushf
idiv
cwtl
or
pop
cmpb
js
or
inc
and
jbe
mov
adc
mov
cmc
mov
mov
inc
enter
sti
loop
push
sub
mov
sbb
mov
and
cmp
adc
and
jno
in
ds
daa
mov
test
add
cs
adc
jo
lret
test
daa
push
sub
sti
xchg
or
das
jno
mov
aas
imul
mov
jb
sbb
js
lds
adc
cli
icebp
andl
mov
mov
mov
lods
sbb
in
and
enter
adc
pop
imul
jmp
cmc
adc
loopne
into
mov
or
shlb
jne
mov
push
divl
lahf
mov
repnz
aad
scas
mov
push
add
xchg
sahf
add
xor
dec
incl
and
cs
dec
mov
loope
test
adc
es
int
push
addl
je
mov
xlat
inc
addr16
sub
xchg
dec
push
in
sub
ljmp
mov
sbb
popf
popa
sbb
or
inc
dec
mov
cwtl
rorl
cmp
add
pusha
adc
bound
sub
fwait
enter
gs
incl
jnp
vdivsd
inc
andb
inc
jl
pushf
jmp
xchg
andl
adc
or
cltd
into
jne
or
xor
sbb
push
outsb
div
icebp
shll
push
mov
testl
pop
or
insl
lcall
lods
cmp
call
mov
sub
scas
cmp
xor
xchg
jg
inc
js
sub
js
cmp
mov
aas
mov
enter
xchg
add
xchg
push
cwtl
inc
mov
sahf
sahf
fdivrl
aad
inc
data16
ds
lret
dec
std
sbb
mov
xor
mov
xchg
push
inc
push
sub
fidivs
dec
adc
push
dec
mov
push
add
jl
cli
pop
mov
insl
stos
and
testl
mov
popa
test
sub
cmpsb
pop
scas
das
inc
jns
cwtl
push
aam
leave
push
add
add
nop
jecxz
stos
aam
das
ficoms
mov
add
in
loope
add
mov
and
sbb
adcb
mov
cmp
aad
lret
dec
cld
shrb
ja
mov
andl
cmc
test
jle
loope
jae
iret
test
insl
push
and
add
das
adc
das
out
push
and
std
and
icebp
dec
pusha
fsubrl
dec
adc
inc
hlt
fwait
outsl
push
push
add
or
xchg
dec
shlb
cmp
ljmp
outsl
pop
es
ror
insl
mov
jns
mov
jmp
mov
fsubs
fld
lcall
adc
in
rcll
push
popf
add
divb
not
xor
adc
outsb
and
popf
lods
or
ja
out
mov
add
xor
pop
cmp
cmp
jge
and
adc
in
lea
pop
mov
add
fiadds
in
mov
jo
sub
cltd
sbb
pop
das
jp
les
mov
jg
ljmp
and
xor
xor
mov
cmp
push
sub
pop
cmp
mov
ss
ja
mov
add
jge
pop
mov
mov
in
jecxz
enter
ret
mov
mov
cmp
dec
dec
lret
shlb
je
sub
imul
jecxz
outsl
add
lods
mov
fildl
mov
int
sbb
mov
cli
add
outsb
fisttpl
jg
popf
in
dec
mov
xorl
adc
mov
loop
arpl
imul
popf
dec
lea
sbb
imul
add
adc
dec
arpl
lret
sbb
aas
mov
push
stos
pop
aam
xlat
push
loope
outsl
cmp
dec
mov
lods
adcl
rcrl
in
jae
aas
ljmp
jmp
popa
xchg
pop
push
shll
icebp
fucom
mov
cwtl
mov
jp
push
pop
mov
sbb
add
cmc
fsubrs
adc
test
cmp
mov
jnp
mov
clc
in
loope
mov
mov
lock
mov
pop
mov
jne
or
test
stos
push
xor
and
ret
stos
push
lahf
popf
cmpl
ret
push
sarl
movsl
xchg
aaa
cmp
jg
je
dec
shl
dec
inc
jl
ss
pop
mov
je
cmpsl
fistpl
les
dec
xor
sbb
pushf
jp,pn
stos
jne
and
test
negl
insl
mov
push
int3
out
ret
shrb
sbb
and
leave
sub
xlat
sbb
rcrl
jae
push
mov
mov
xchg
js
xor
pop
ret
outsl
adc
loopne
lret
jns
aaa
cmp
jo
bound
inc
dec
ss
stc
sbb
je
mov
loope
dec
test
popf
or
bnd
faddl
mov
test
decb
gs
mov
mov
inc
movsl
sub
sub
push
jle
or
les
or
xor
and
int3
pop
loop
inc
push
cmp
out
pop
inc
sbb
stos
cli
adc
fldt
pop
add
ret
cmpsl
push
in
ljmp
leave
push
mov
jg
dec
ffree
pop
mov
cld
test
add
fsubp
addr16
fs
push
xchg
subl
in
jecxz
in
inc
and
xor
or
cmp
pop
cs
pop
jge
arpl
sub
push
fcoms
test
mov
jle
mov
push
push
test
outsl
push
filds
nop
mov
cmp
scas
jo
ret
lock
ja
gs
clc
or
mov
push
rclb
inc
pop
fcoms
aam
ljmp
pop
je
inc
sub
paddusw
ljmp
mov
xchg
std
xor
aaa
outsb
xchg
movsb
cmp
push
jbe
jp
mov
sbb
jl
pop
push
xor
mov
push
insb
out
and
inc
fsubrp
push
sub
out
add
leave
sub
cmp
mov
xor
inc
sub
inc
cmp
jnp
loop
fcompl
ret
out
sub
cmp
nop
cld
mov
lahf
push
lcall
xor
adc
dec
jbe
adc
mov
sbb
les
xchg
fildll
sti
std
enter
jnp
jbe
rol
rolb
mov
push
in
mov
xchg
ja
leave
add
call
mov
pop
test
mov
call
cwtl
lret
jmp
inc
loope
pop
test
cs
iret
stos
push
es
push
ss
push
movsl
jbe
testl
rcl
sub
jno
mov
cmp
adc
push
xchg
sub
push
lds
jl
or
in
rcr
cwtl
lret
xchg
add
push
out
movsl
mov
mov
mov
cmp
mov
jne
lea
ljmp
add
test
jecxz
shll
out
loopne
repnz
ja
aam
out
in
mov
ljmp
in
lret
in
push
je
push
mov
mov
cmp
pushl
lods
jmp
sub
nop
xor
inc
addps
daa
ret
aam
btr
sti
ljmp
roll
ja
ss
jmp
std
aad
movsl
dec
lret
outsb
push
rorb
jp
dec
fidivl
mov
scas
sbb
add
sahf
push
cmp
imul
test
xchg
xor
pop
or
mov
xchg
dec
leave
push
ds
jge
or
in
lret
loope
sub
pop
inc
mov
sbbb
cmpsb
pop
popa
inc
xchg
push
loopne
lret
mov
push
inc
dec
sub
or
mov
outsb
sbb
push
adc
or
dec
xchg
or
push
push
adcl
xor
mov
bound
loopne
aad
clc
sti
jno
lods
imul
cs
rcrl
push
movsl
int3
dec
je
fidivl
das
jmp
xchg
mov
lods
std
mov
xchg
push
jmp
xor
fcomps
mov
cmp
inc
sbb
imul
push
mov
jl
insl
cli
icebp
inc
xchg
and
imul
inc
pusha
mov
sahf
push
mov
cwtl
cld
xor
pop
add
mov
mov
or
pop
cmp
mov
xchg
xchg
pop
push
mov
daa
mov
bound
and
mov
pop
in
sbb
in
arpl
cli
inc
inc
popa
xchg
loope
push
lret
shll
add
lods
pop
mov
push
lock
imul
adcl
or
jle
mov
rclb
lods
mov
lea
and
xchg
scas
in
pop
hlt
cmp
add
sub
imulb
mov
sahf
jle
int
pusha
jl
sub
je
pop
add
and
shrl
addr16
ds
addb
sub
mov
cld
pusha
lods
ret
dec
fwait
in
sahf
movsl
lahf
aas
icebp
test
sub
fists
inc
jge
scas
shrb
cmp
mov
xlat
iret
and
mov
xor
xchg
lock
mov
rorl
lods
xchg
jae
fisubl
lahf
add
in
cli
aam
repnz
jno
clc
jmp
outsl
inc
ja
leave
cmp
add
mov
inc
jo
and
hlt
mov
stc
js
sub
in
push
push
hlt
insb
lea
fcmove
sarb
into
test
push
es
push
jmp
out
mov
js
jecxz
fsubrl
cmc
mov
pop
mov
pop
xor
ret
cld
jg
fimuls
inc
and
aaa
js
jle
rolb
inc
sub
insb
mov
dec
mov
cli
in
daa
jge
mov
push
push
imul
das
loopne
fbld
cmpsb
adc
or
outsl
dec
lea
scas
jnp
in
adc
aaa
inc
lret
inc
fmuls
pop
cs
test
dec
imul
xor
insl
out
pop
notl
cmp
and
mov
push
sahf
sbbw
js
jmp
push
aad
imul
lret
xchg
sbb
push
and
xor
push
xchg
adc
in
in
push
jns
enter
in
adc
negb
inc
mov
adc
test
sbb
or
test
and
mov
jge
outsl
push
lods
add
leave
jo
adc
stc
call
sarl
mov
fbstp
mov
cmp
bound
fcoml
pusha
push
cmpsl
or
xchg
lods
pop
insb
add
xor
call
loopne
cmp
lods
xchg
mov
icebp
mov
mov
push
les
fdivrs
adcl
mov
jb
arpl
es
adc
aaa
jmp
inc
mov
lods
mov
imul
mov
adc
mov
cmp
ficoml
jo
or
xchg
push
es
dec
dec
and
je
icebp
inc
xor
push
mov
fdiv
pop
sbb
test
enter
and
dec
out
and
movb
in
test
adc
in
mov
cmpb
bound
ret
mov
data16
push
push
sbb
jnp
bound
mov
xor
xlat
stc
ficomps
add
into
or
sub
inc
les
popa
add
dec
and
mov
adc
or
out
jo
out
cmp
mov
loop
mov
insl
out
rcr
mov
adc
movsb
das
loopne
cmc
clc
fiadds
jg
mov
int
mov
mov
pop
xor
push
cmp
repnz
add
push
and
push
out
pusha
fwait
pop
ja
rolb
mov
or
mov
push
mov
jns
in
mov
aad
push
inc
aad
and
cmp
sub
jge
shrl
jmp
ljmp
cltd
xor
xor
pop
call
stos
dec
push
fs
lret
inc
add
sbb
scas
xchg
sbbl
addr16
jbe
adc
repz
mov
inc
xor
movsl
test
loopne
jo
shll
push
mov
jae
mov
imul
jnp
insl
or
repz
pop
jne
jno
xor
mov
mov
inc
repnz
dec
mov
mov
jbe
adc
jnp
lcall
ja
dec
fs
cli
jns
addl
call
xor
sub
rolb
and
mov
scas
and
ret
xor
repz
rol
cs
push
in
pop
rorb
loope
aam
mov
iret
nop
cmpl
lahf
jns
pop
imul
aam
sub
jge
out
lcall
mov
pop
sub
andl
push
sub
cmp
and
fstps
xchg
pop
push
adc
scas
cltd
sbb
enter
and
lds
push
inc
cwtl
or
mov
fwait
xlat
out
sub
sbb
je
xchg
aad
adc
pusha
ja
xchg
ljmp
fstp
sub
aam
dec
mov
mov
int3
sahf
idiv
cwtl
loope
inc
nop
lock
cmp
mov
addr16
fsubl
push
test
daa
xchg
movsl
push
xor
insl
aam
cld
imul
nop
add
mov
in
dec
jbe
cltd
mov
je
mov
fisttpl
fs
cs
xlat
leave
bndldx
mov
out
xchg
filds
cld
jmp
xchg
xor
mov
jbe
cmp
lea
mov
add
dec
je
std
sbb
jnp
add
mov
aaa
out
cmpl
std
stc
jg
or
pop
std
clc
jmp
pop
pop
popa
scas
sbb
movsb
andb
cmp
ja
and
lods
movb
js
out
out
pop
in
int3
sub
std
xor
pop
and
or
negb
jge
loope
int3
mov
dec
out
mov
cmp
iret
add
adc
push
andb
lods
shl
mov
ja
sub
mov
stos
insl
out
fucomip
inc
jbe
sbb
je
sub
es
cmp
je
es
push
sub
test
xor
dec
jne
cmpsb
push
insb
or
xchg
popa
fwait
cs
dec
add
inc
les
mov
inc
xchg
aas
xchg
adc
aad
cli
mov
mov
cltd
mov
std
mov
sub
push
sarl
sahf
dec
xlat
add
add
testl
jmp
xor
jo
mov
fwait
ret
aam
xor
adc
insl
scas
pusha
push
into
mov
fldenv
inc
shrl
inc
jle
jae
ljmp
xor
stos
enter
ror
out
shlb
mov
add
push
inc
hlt
jge
jmp
sbb
loope
pop
mov
push
inc
popf
cmp
mov
xor
iret
add
dec
call
and
cmp
nop
arpl
icebp
and
sbb
cmp
or
cli
cmpsb
pop
dec
pushf
mul
ret
mov
xor
push
mov
add
sub
jmp
insb
jmp
rorb
mov
testl
xchg
push
pushf
jmp
add
add
arpl
lret
push
jmp
movsb
push
lock
adc
jnp
and
popa
mov
sub
xor
pop
inc
addb
pop
pop
add
add
and
jae
ror
int3
xor
mov
and
push
insl
inc
divb
adc
fsts
push
jo
pop
ss
fsubr
add
std
scas
mov
push
and
sub
or
fwait
or
clc
test
adc
sbb
add
sub
dec
js
push
daa
inc
fdivr
mov
pop
and
dec
cltd
in
out
jo
clc
bound
xchg
outsb
mov
and
pop
inc
xchg
or
lods
fistpll
std
dec
sub
jne
data16
adc
ffreep
out
imul
xchg
insb
cwtl
scas
test
insb
jle
sbb
add
std
into
jl
sbb
lods
andl
das
dec
fadd
fisttps
iret
fldenv
dec
and
mov
sarb
push
jp
xor
lcall
stc
fistpl
add
or
dec
jg
push
shll
into
mov
inc
jno
insb
pop
repnz
lcall
jle
sahf
pop
in
or
mov
mov
cmc
in
xchg
sub
push
xchg
ds
or
out
push
hlt
mov
mov
push
fcomps
sbb
xor
add
sahf
test
leave
push
inc
xorb
sub
and
sub
loopne
nop
das
mov
jge
int3
pop
js
mov
and
jecxz
int3
cltd
lret
cmpsb
sahf
xor
mov
mov
out
loopne
ss
dec
dec
lods
stos
inc
and
dec
pop
lahf
leave
adc
or
leave
mov
cwtl
xchg
xchg
dec
fildl
cmp
addr16
mov
or
ds
jae
inc
dec
aas
inc
loopne
xchg
lsl
sti
sbb
notl
pushf
dec
in
inc
cmp
mov
and
jl
cmp
fisubrl
rolb
add
sbb
mov
mov
addb
mov
sub
stc
add
out
xchg
pushf
push
into
jle
insl
push
or
mov
mov
jle
movsb
outsl
sub
pop
sub
push
insl
xchg
jo
cmp
sub
nopl
jns
ret
cs
or
ljmp
test
pop
push
movsb
addr16
in
mov
scas
dec
and
mov
inc
inc
ja
add
push
in
hlt
mov
cmpsl
and
mov
mov
loope
push
test
aaa
xchg
lods
sbb
adc
rcll
cmp
or
push
push
mov
mov
and
xchg
popa
or
lret
jmp
dec
push
rcrb
popf
mov
mov
in
dec
pop
or
fnstenv
add
sub
mov
push
adc
cmpsb
adc
push
push
aam
cmp
sbb
stos
aas
mov
mov
fwait
pushf
stos
push
aaa
fldt
pop
jmp
add
bound
les
fstp
or
mov
lds
push
mov
call
adc
xchg
push
sub
jne
jne
cmp
xchg
cmpsl
cmp
mov
pop
insl
mov
mov
loopne
lret
call
mov
mov
and
sbb
repz
mov
xchg
sub
sub
jbe
add
sbb
jno
or
in
lea
xlat
shr
mov
mov
or
and
rolb
mov
xor
test
sub
popf
jp
or
mov
pop
fst
dec
cwtl
fadd
scas
pushf
sar
adc
mov
inc
dec
push
lcall
insl
or
fsubs
leave
in
xor
jns
jge
sub
into
push
jmp
andb
decl
pop
rcrb
dec
in
push
fldcw
mov
es
fiaddl
movsb
insl
lret
add
notl
pushf
xorb
sub
or
pop
mov
test
and
fiadds
xor
jae
cmp
inc
xor
nop
dec
cmp
dec
aad
ja
std
fcmovb
or
in
je
lahf
int
js
addr16
in
dec
push
jl
fistps
clc
xchg
dec
jg
subl
sub
add
and
aas
dec
pop
mov
add
sbb
in
xchg
adc
das
push
into
cwtl
add
leave
call
mov
jge
movsb
je
push
insb
xchg
out
movsl
ja
and
out
pop
cmp
outsl
lret
mov
sbb
es
lea
lahf
dec
frstor
shl
pop
int3
stos
hlt
pop
inc
daa
fadd
xchg
xchg
inc
push
enter
mov
test
aaa
idivl
pop
popf
and
adc
inc
scas
jg
ret
pop
dec
xchg
lea
lea
es
loope
dec
repnz
adc
aam
pushf
outsl
mov
andl
sbb
jne
cmpb
outsl
test
iret
cmpsb
jns
sub
sub
and
orb
cltd
mov
mov
inc
xchg
xor
nopl
jnp
xchg
ljmp
or
sti
outsl
outsl
out
int
cwtl
cmp
les
xor
pop
sub
xchg
ja
jb
bound
orl
dec
mov
aam
and
mov
stc
lcall
daa
mov
pop
aaa
and
lret
dec
fs
test
xlat
adc
or
insl
push
pop
xchg
push
imul
movsb
jle
ret
mov
pop
mov
mov
or
push
lock
int
test
test
jnp
xchg
lds
dec
sub
inc
add
jp
mov
outsb
adc
lcall
dec
scas
cs
dec
daa
xchg
repz
out
mov
push
int
test
xchg
jle
sbb
arpl
mov
lds
sub
adc
sar
xor
fistpll
mov
cmp
pop
add
mov
and
jge
test
out
inc
test
cmp
add
mov
addr16
lock
add
mov
mov
mov
pop
ret
xchg
mov
frstor
push
push
mov
mov
sub
out
and
mov
scas
xor
and
mov
fidivs
sub
cmpsl
std
mov
mov
clc
stos
and
xor
add
mov
mov
test
pushf
bnd
cltd
into
dec
addl
push
mov
add
and
loope
mov
shrb
rcrb
aam
dec
rolb
ret
pop
mov
mov
and
sub
jo
mov
push
inc
add
loopne
aaa
push
xchg
pop
aad
imulb
push
xor
push
lret
inc
push
in
xor
stos
cmp
inc
notl
mov
jle
addl
fimull
inc
cltd
es
imul
mov
popf
je
push
xorl
mov
lods
les
mov
cmp
inc
add
sarl
push
jle
mov
je
lahf
fsubl
cmp
stos
adc
bound
ss
imul
jecxz
jecxz
pop
xchg
jmp
addl
je
or
mov
xor
test
push
cmpsl
nop
stos
sahf
in
les
negb
xor
mov
lret
mov
xor
xchg
faddl
jmp
cmp
jno
pushf
sub
stos
lret
mov
jae
inc
cmp
mov
mov
pop
sub
sbb
in
int
mov
inc
jns
stos
ds
mov
je
stos
daa
adc
lcall
sbb
jae
pop
shlb
sub
lods
mov
push
pop
or
aam
mov
pop
jno
xchg
sbb
hlt
imull
sub
cmpsl
leave
cmp
pop
xchg
repnz
jb
aam
cli
popf
mov
hlt
mov
push
arpl
add
xchg
dec
cli
add
test
push
sahf
outsl
lock
pop
aaa
fwait
cmpsb
pop
jbe
cmp
jo
adc
fdivrl
cmp
lds
push
lcall
cmp
pop
push
jae
dec
ss
sbbl
lods
cmp
push
fwait
and
ret
into
or
into
test
lods
lahf
inc
xchg
lods
or
out
push
inc
outsb
push
cmp
mov
cmpsb
add
add
xlat
addb
ss
cmp
clc
inc
jp
mov
gs
add
dec
ret
xchg
mov
dec
pop
mov
inc
push
xlat
call
call
jge
test
jnp
fsubrl
mov
iret
pop
lock
insb
iret
or
gs
inc
xor
out
pop
adc
mov
rolb
adc
mov
sub
fstps
xor
push
enter
mov
lds
sub
mov
into
repnz
bound
push
dec
scas
pop
cmpsb
lock
jnp
sbbl
xor
lea
sbb
mov
and
adc
je
mov
adc
add
push
sbb
or
sub
push
lahf
add
push
pusha
mov
mov
lcall
cwtl
push
mov
or
inc
pop
jno
pop
pop
dec
lahf
hlt
loope
jo
cmpsb
cltd
daa
or
leave
xor
cmpsl
mul
fbld
inc
ret
out
rcrb
dec
sar
outsb
out
mov
dec
outsl
out
push
rorl
loope
jle
sarl
add
out
push
arpl
stc
daa
add
sub
daa
push
jmp
enter
push
xchg
cs
data16
and
sbb
dec
sub
shll
or
int
pusha
mov
in
hlt
add
mov
adc
enter
ret
das
mov
mov
mov
push
push
jbe
ja
ds
gs
incl
xchg
test
cmp
ss
shl
fbld
jbe
adc
add
aaa
test
sub
mov
shlb
mov
sbb
mov
imul
dec
movsl
xchg
ret
push
loopne
addr16
lds
lods
xchg
in
outsb
sti
or
ljmp
jecxz
jecxz
inc
and
push
mov
loope
cmpsl
dec
mov
push
mov
imul
enter
mov
mov
mov
aas
inc
scas
out
dec
lcall
xchg
xchg
ds
add
jp
and
mov
xchg
fsubs
rorb
rcr
sub
cs
push
insl
adc
jl,pt
lret
into
fldl
jne
aas
imul
jns
das
adc
xor
lea
sub
stc
sub
xor
fisubrs
hlt
mov
xor
adc
mov
negl
mov
mov
xchg
mov
addr16
mov
adc
and
icebp
addr16
cmc
lret
sbb
arpl
push
mov
aas
push
repz
jp
mov
adc
repnz
push
popf
popf
jmp
fwait
xchg
int
xorl
imul
mov
push
push
dec
ja
mov
shlb
adc
cmc
mov
mov
mov
cltd
add
mov
xor
and
pop
sbb
push
sub
std
mov
call
sub
fsubs
mov
imul
orb
mov
movsl
incl
roll
mov
xchg
in
xchg
jb
lds
mov
inc
stc
mov
je
bound
mov
arpl
xchg
outsl
dec
xchg
cld
lcall
jb
lret
jmp
shlb
xchg
sub
iret
out
sbbb
scas
addl
sahf
sbb
into
mov
shrl
imul
arpl
mov
add
div
push
mov
jae
imul
popf
jecxz
fildll
pop
movsb
sbb
mov
push
jne
dec
mov
or
or
es
pop
push
lds
and
in
adc
test
testl
sub
sbb
pop
jmp
push
rorb
or
sub
imul
sbb
imul
push
mov
ljmp
sbb
ds
pop
or
mov
xchg
mov
jo
xor
stos
dec
mov
outsl
mov
aam
js
shrl
inc
mov
mov
push
fwait
xchg
dec
stos
js
add
pop
jg
sub
and
gs
enter
pusha
push
movsl
ljmp
dec
push
mov
inc
cmp
push
and
or
adc
inc
icebp
mov
lret
jno
test
lds
repnz
in
mov
jae
ja
mov
push
and
add
inc
mov
pushf
out
xor
inc
xchg
pop
repz
sarb
cmp
arpl
cs
dec
fcmovbe
adc
hlt
jg
call
dec
lret
sbb
xchg
push
rolb
iret
sub
pop
sbb
testl
jle
fwait
xchg
repz
loop
stc
xor
adc
or
jno
add
mov
xchg
std
pop
push
sbb
mov
dec
mov
ljmp
adc
lods
jns
insl
filds
out
pop
sbb
jmp
mov
push
pop
in
aas
data16
jle
mov
pop
sub
xchg
inc
cmp
xor
mov
mov
xor
shrl
jo
lcall
ret
xchg
mov
stos
mov
push
cli
add
cmpsb
test
fidivrs
mov
test
in
or
js
lret
mov
adc
fidivs
dec
jge
dec
orb
xor
mov
lcall
adc
imul
xchg
mov
leave
add
pushf
inc
adc
mov
popa
addr16
jecxz
notl
xor
sub
xor
hlt
push
jg
loop
data16
xchg
jae
sbb
xchg
mov
test
test
dec
cmc
mov
add
fs
flds
adc
fdivs
repnz
adcb
pop
adc
movsl
jge
pop
out
adc
pop
mov
sub
inc
addr16
stos
xor
mov
nop
mov
xor
loopne
mov
push
mov
adc
insb
sub
cld
insl
jae
fcmovnu
cltd
pop
pop
xchg
lret
push
mov
fldcw
add
or
fisubl
jecxz
cs
ficoml
out
mov
push
dec
adc
loop
ret
test
and
dec
icebp
cmp
insb
and
cmp
mov
xchg
in
mov
das
int3
inc
lods
ret
adc
inc
loope
leave
aas
mov
gs
sub
or
test
fisubl
add
pop
adc
in
cltd
xorb
or
mov
pop
mov
and
jle
inc
sbb
into
pop
clc
scas
jmp
mov
mov
xlat
push
cmp
scas
cs
lret
jnp
sub
shl
test
mov
add
arpl
arpl
push
ret
ret
pop
pop
cmp
mov
sbb
in
fxch
cltd
dec
and
and
movsb
mov
cmp
lods
outsb
xchg
xlat
pop
je
movsl
add
lock
mov
out
push
push
fstpt
xor
outsl
xchg
ficoml
stos
jb
lahf
aam
test
mov
push
pop
adc
mov
fsubs
mov
stos
xchg
fbld
arpl
xlat
ret
fstps
dec
adc
loopne
cmp
pop
xchg
out
and
xor
outsb
xchg
and
add
push
rcrb
xchg
lahf
push
xchg
data16
pushf
cmp
in
les
pop
dec
ljmp
push
shrb
aaa
popf
scas
cmp
lods
fwait
movl
xor
xor
sarl
call
cmc
cli
mov
fldl
insl
cmp
clc
int
inc
mov
pop
and
fdivs
in
cmp
out
inc
pop
hlt
mov
adc
shlb
movsb
mov
push
sti
push
lret
outsl
jbe
fwait
xor
enter
or
xchg
lret
fisttpl
push
insb
cmp
pop
dec
scas
push
cmc
push
loopne
jmp
pushf
cld
inc
and
sub
push
lea
xor
sti
bound
mov
in
push
cmp
lahf
sarl
mov
fbstp
pop
pop
out
pop
clc
lds
fs
or
push
shrl
or
neg
or
sub
int3
cli
inc
or
popa
xor
mov
pusha
jae
cmpsl
mov
xor
xchg
ret
fbstp
push
inc
mov
xor
hlt
and
cs
add
fnstenv
jecxz
xor
inc
fiaddl
lea
insb
das
mov
jl
pop
sub
fidivrl
mov
lods
mov
test
inc
inc
sub
cs
sbb
addr16
lods
aam
jg
in
and
repz
mov
cmc
jle
lret
adc
xchg
xlat
ljmp
pop
mov
cld
ret
jge
inc
adc
and
jp
adc
pop
jo
jns
or
xchg
rcrb
xor
add
andl
mov
dec
push
std
pop
sbb
mov
adc
ss
rcrl
mov
mov
shll
out
rcrl
lea
add
xchg
or
pusha
scas
das
sub
incl
inc
jnp
sbb
test
notb
lods
xor
push
xor
pop
pusha
sub
dec
sub
pop
mov
andl
int
and
std
cmp
xchg
add
or
rcll
out
fldenv
pop
xchg
hlt
fistpll
and
movsb
dec
fsubrl
insl
pop
ja
lds
dec
or
ja
and
dec
mov
dec
mov
sbb
dec
sbb
into
das
lret
xchg
in
call
test
sub
sti
iret
mov
jnp
jns
in
lods
or
pop
and
dec
mov
xchg
test
xor
inc
mov
or
adc
stos
sbb
fisttpl
jle
mov
subb
xchg
or
shlb
xor
xlat
iret
and
cwtl
call
sarl
inc
jmp
fs
jecxz
inc
lret
push
mov
insl
std
inc
mov
rol
push
cs
sub
jns
xchg
enter
orb
cli
mov
mov
jge
test
lahf
sub
stc
mov
es
mov
push
stos
adc
mov
test
push
fwait
movsb
or
out
jae
push
scas
pop
in
loope
jl
in
fsubs
or
jg
dec
pop
adc
xor
sub
adc
out
or
iret
sub
je
and
in
mov
ret
adc
jge
aaa
push
movsb
inc
sahf
fsubrl
or
jno
in
rolb
fstpt
lahf
adc
lods
jne
add
out
cli
ljmp
or
fdivl
aam
mov
out
inc
imul
lahf
mov
scas
jmp
xchg
sbb
imul
popa
sub
jl
mov
in
pop
shrl
sbb
mov
jno
rorl
popa
cs
sub
movsl
xor
orb
shrl
jge
incl
xchg
jno
inc
sub
cmp
das
pop
ret
dec
out
jne
inc
sti
and
imul
out
cmpsl
mov
lret
loopne
flds
push
mov
jo
and
test
pop
mov
subl
sub
mov
sub
ss
pop
movsb
sub
outsl
xchg
and
iret
cmp
pop
adc
inc
jne
push
dec
xchg
test
out
out
dec
xorl
or
dec
ret
roll
mov
xchg
or
xchg
mov
jae
andb
ret
outsl
test
mov
xor
movsl
xor
add
inc
jbe
add
js
xor
das
rclb
int
pop
fbld
pop
dec
mov
aad
lret
addb
inc
pop
int3
js
in
loope
rolb
into
xchg
lds
jbe
ret
inc
pushf
cmp
cmpl
xchg
mov
push
jo
mov
and
mov
push
movsb
stos
fdivrl
in
add
out
cwtl
shrb
loopne
loope
adc
push
add
addl
lods
jae
and
popl
gs
sub
xchg
test
and
and
mov
aad
cli
int3
dec
sub
mov
xchg
mov
stos
mov
xchg
cwtl
test
call
scas
sbb
mov
sti
xor
push
xchg
into
or
test
out
lcall
jecxz
jge
push
dec
test
lret
inc
push
mov
hlt
loop
mov
xor
sbb
sbb
jns
xchg
pop
lahf
fscale
fwait
loope
arpl
loop
divl
daa
mov
cmp
cmp
cli
pop
stos
inc
insl
ds
push
mov
or
push
sbb
dec
pushf
jns
or
mov
inc
cli
mov
gs
test
dec
inc
add
mov
call
or
mov
jl
lret
jb
in
xor
pop
clc
mov
iret
inc
ljmp
dec
idiv
push
xor
cld
popa
movsl
mov
pop
adc
aad
fstpl
adc
jecxz
dec
fimuls
jbe
ljmp
aas
mov
pop
imul
incl
lds
pop
ret
js
jno
out
adc
dec
arpl
sbb
mov
scas
mov
ret
int
jmp
out
mov
cmp
mov
adc
inc
or
jb
fwait
ret
or
loope
enter
jae
loope
int
xchg
mov
aaa
cmpsl
gs
lcall
test
cltd
in
cmp
push
sbb
inc
pop
add
sbb
add
loop
pop
fiadds
incl
bound
xor
sbb
push
dec
pop
cmovle
adc
ja
pop
movsb
mov
mov
cs
push
adc
inc
mov
mov
pop
aas
cmp
mov
addl
adc
test
mov
xchg
jbe
inc
pop
loope
ljmp
scas
pop
sbb
sub
mov
test
xchg
imul
sbb
and
xchg
out
mov
push
adc
js
and
pop
or
ret
mov
mov
std
mov
fwait
pop
jns
mov
mov
mul
mov
lret
leave
xor
jp
stos
dec
inc
mov
push
jge
pop
add
cwtl
push
lret
or
jp
movsl
jbe
xchg
mov
inc
js
push
aad
fistpll
stc
and
sub
jno
dec
mul
aad
jbe
test
fsubs
sbb
aas
sub
jbe
fnstcw
lods
mov
popl
or
insl
xorb
lock
std
cmp
aas
push
sti
or
xor
pop
or
rcrl
fwait
or
and
fmul
out
pop
pop
jp
cwtl
sub
sbb
ficoms
mov
push
ljmp
rclb
cmc
sbb
mov
mov
jge,pn
fisubl
xchg
cs
ja
imul
xchg
repnz
jb
mov
movsb
add
and
push
fucomi
xchg
inc
xor
jg
aas
outsb
sub
xchg
lea
lods
mov
jl
arpl
mov
push
js
lods
stos
in
dec
mov
adc
pop
push
fiadds
test
out
mov
mov
xchg
stos
insl
pop
jnp
loopne
out
mov
cs
sub
xchg
jg
push
leave
xor
and
jne
lahf
les
xor
daa
sub
inc
pop
jecxz
roll
popf
cs
mov
push
pop
cmpsb
daa
lds
aas
outsb
leave
cmp
inc
ja
test
das
out
hlt
or
fistpl
sbb
in
out
pop
cmp
mov
jno
dec
mov
and
pop
lcall
data16
int
adc
fcmovu
hlt
lock
xchg
push
mov
fstl
loopne
dec
mov
add
outsl
mov
mov
testb
das
cmp
sar
pop
in
in
pushf
or
mov
and
xchg
jb
mov
cltd
sub
ljmp
mov
adcl
and
cmp
push
hlt
add
inc
and
ss
in
stc
inc
stos
dec
mov
cmp
test
int
inc
dec
xchg
sti
lret
ds
cwtl
nop
test
leave
jp
sub
add
insb
rcl
add
popf
ret
fsubl
andb
cmc
xor
push
call
mov
inc
sahf
imul
repz
daa
scas
xchg
fisttpll
mov
les
clc
sub
icebp
loopne
in
mov
pop
inc
push
aas
lock
push
enterw
mov
les
mov
stos
mov
ja
je
mov
shll
sti
jb
push
xchg
add
cltd
aaa
test
daa
inc
daa
mov
repnz
mov
test
cld
sub
fistps
sub
and
clc
popf
xor
mov
not
addr16
fsts
pop
inc
dec
lds
pop
ror
mov
nop
into
and
scas
cwtl
es
inc
mov
shlb
je
mov
dec
push
mov
cs
pop
mov
adc
jbe
sahf
fisttpll
ds
jp
mov
bound
push
cmp
push
pop
xchg
push
notl
pop
ds
adc
mov
mov
jecxz
cmp
dec
sub
mov
movsb
sbb
mov
mov
cmpb
push
ljmp
lods
push
sbb
rcl
cmp
push
sahf
lahf
testl
lcall
mov
dec
and
push
imul
cld
mov
mov
insb
inc
cld
rolb
lods
idivb
mov
xchg
add
sub
fwait
jbe
push
idivl
in
mov
jb
dec
or
mov
loopne
andb
lret
jnp
aad
ljmp
repz
inc
mov
or
inc
cltd
jne
fdivr
adcl
movsb
add
jecxz
test
push
mov
nop
xor
push
jb
or
out
mov
pop
xchg
pop
jl
jmp
aas
jg
data16
incb
ret
es
scas
fldcw
test
mov
add
movw
xchg
clc
push
and
jns
push
mov
fnsave
sahf
shll
stos
mov
dec
in
adc
xchg
jbe
outsb
inc
mov
mov
in
jecxz
movsl
jb
xlat
mov
mov
int
mov
mov
xchg
sbb
fbstp
push
cmpsl
add
fs
xchg
fidivs
movsb
mov
xor
xchg
sub
pop
test
loope
testb
mov
jp
mov
xor
adc
mov
cwtl
or
andl
sub
and
int
aad
xchg
cs
adc
mov
in
popf
pop
loope
mov
repnz
pop
dec
lret
pop
xor
push
and
and
pusha
adcl
add
scas
inc
inc
adc
je
mov
cmp
inc
out
cmp
mov
jno
sbb
repnz
stos
mov
cltd
dec
addr16
push
adc
mov
cwtl
adc
push
fs
shlb
push
cmpb
sub
push
sbb
jmp
cmp
sbb
and
aas
lock
xchg
mov
mov
daa
popf
jmp
mov
clc
and
je
leave
ret
push
push
sarl
or
outsl
ljmp
pop
push
jb
add
push
sbb
cmp
add
and
cmpsl
cld
xlat
hlt
sbb
and
insb
sbb
push
test
hlt
daa
mov
mov
in
pop
bound
sahf
mov
and
mov
and
jp
adc
repz
add
in
sub
je
adc
adc
inc
in
rcll
insb
dec
movsb
and
cmp
fmuls
mov
sub
in
idiv
xor
adc
sbb
fs
lret
scas
jae
mov
daa
cmpsl
dec
adc
scas
jb
push
jnp
test
mov
mov
cmp
loop
xchg
pop
xlat
mov
sbb
pop
cmpl
mov
sbb
pop
sahf
push
stos
mov
test
rorb
pop
bswap
xchg
addr16
pop
int3
xlat
clc
push
int3
negl
add
insl
dec
sub
inc
pop
popa
fisubrl
fdivs
and
ds
mov
daa
fidivl
xor
aad
jg
and
push
call
es
test
xchg
mov
rorb
cmpsb
ror
add
cltd
lods
repnz
popa
arpl
cmc
add
adc
imul
in
bound
inc
orl
and
inc
nop
gs
or
into
pop
mov
int3
adc
jno
push
stos
add
sub
cmpsl
lcall
insl
bnd
mov
inc
mov
xor
jle
btr
movsb
cs
push
out
stos
iret
loopne
lods
jo
das
das
xor
mov
or
inc
xchg
push
inc
push
and
jo
je,pt
loop
cmp
mov
js
mov
int3
test
movsl
lock
lock
loop
or
fldcw
xor
bound
dec
jge
jne
jae
sar
mov
xchg
icebp
je
daa
test
in
or
andb
mov
lds
cld
pop
xchg
aam
mov
movsb
add
inc
test
dec
mov
outsl
and
mov
rorb
andl
lock
dec
jnp
add
mov
and
lcall
mov
dec
or
adc
push
adc
out
lods
and
jmp
hlt
fildl
stos
inc
add
stos
out
std
and
cmp
subb
xor
mov
test
inc
das
rolb
outsb
inc
ds
mov
adc
cwtl
cld
sub
test
xchg
leave
inc
imul
and
cli
lds
mov
in
sbb
enter
daa
cmp
sbbl
adc
insl
addr16
int
xorb
push
xchg
popf
scas
in
sbb
mov
es
add
or
jo
add
cmp
fscale
dec
add
cmp
and
sbb
push
push
and
mov
pop
inc
imul
das
add
sub
sub
mov
add
or
mov
xchg
stos
test
lods
std
inc
cmpsb
dec
popa
push
test
popa
push
nop
dec
pushf
inc
inc
pop
mov
icebp
sbb
test
popf
dec
mov
popa
add
xor
sbb
sarl
and
pop
sbb
and
insl
test
sbb
jge
gs
or
pop
fidivl
mov
mov
paddw
sub
sbb
movsb
or
loopne
pop
sbb
lahf
fwait
popa
orb
cmc
and
sbb
mov
xor
mov
cmpl
lods
add
jne
mov
enter
movsb
clc
fmulp
dec
addr16
xor
lret
pop
cld
movsb
push
add
iret
cmp
add
pop
mov
add
test
sbb
stos
dec
or
jg
hlt
adc
int3
or
test
pop
jb
data16
cmp
xchg
sahf
movsb
inc
inc
into
dec
jmp
xorb
lahf
leave
inc
inc
loopne
test
leave
xor
or
je
rorl
xor
or
fdivl
jecxz
pop
add
adc
lcall
les
loop
sbb
aaa
mov
sahf
es
test
stc
mov
fidivl
arpl
mov
dec
jnp
lds
and
push
or
mov
movsb
inc
or
jnp
xorb
mov
outsb
mov
sub
xor
adc
aad
dec
xor
mov
xchg
data16
ficoml
mov
mov
inc
popf
cld
std
stc
xchg
cmp
adc
mov
add
flds
pop
and
lock
leave
inc
cmc
push
lock
jge
out
iret
pop
xor
dec
push
pop
inc
add
loop
jl
xorb
xchg
es
rorl
rcrb
sbb
mov
xchg
stos
test
icebp
mov
xchg
sahf
push
push
push
cmovl
mov
mov
test
mov
ljmp
mov
dec
jmp
add
ja
outsb
mov
rcrl
xor
sbb
ja
adc
push
pusha
mov
mov
popf
addr16
xchg
in
test
fwait
jge
fisttps
mov
ja
addr16
or
and
or
mov
dec
test
cwtl
or
nop
lahf
lahf
adc
xchg
in
fsubrl
mov
mov
mov
add
jbe
mov
mov
xchg
cwtl
push
xor
outsb
in
sub
loopne
in
fadd
mov
dec
fcoms
insl
frstor
ja
adc
and
sub
and
adc
inc
int3
outsb
adc
and
sub
test
test
or
shll
lods
lods
adc
mov
mov
dec
pop
nop
lds
rorl
hlt
mov
push
stc
dec
fistl
push
cmc
outsb
and
nop
pop
push
shrb
idivb
pop
or
pusha
out
enter
dec
incl
loopne
xor
cli
adc
cltd
in
push
and
in
or
bound
mov
incb
iret
adc
cmp
enter
mull
into
mov
push
mov
dec
test
adc
push
mov
lahf
dec
jae
int
xlat
fwait
add
cltd
dec
mov
aaa
pop
imul
jl
gs
clc
jo
add
mov
sbbb
xor
push
out
sub
mov
mov
pusha
pushf
fldcw
gs
fdivrl
cmp
xlat
popa
shr
sub
rolb
inc
aam
orl
xchg
inc
jbe
rclb
push
mov
sbb
cs
not
jae
mov
out
jl
pop
mov
mov
nop
pushf
push
call
pop
mov
orl
xor
cmpsb
lea
lret
xor
mov
movsb
cmp
int
cmp
jl
sub
jns
mov
inc
sub
mov
aaa
fwait
imul
inc
dec
ja
adc
cmpsb
mov
adc
mov
mov
testl
and
rolb
or
inc
cmpsb
fnstsw
icebp
in
stos
xchg
or
pop
lock
cmp
xor
inc
insl
cmp
das
das
arpl
je
dec
xlat
inc
scas
mov
cwtl
jns
pop
adc
push
addr16
mov
mov
add
inc
gs
or
xor
popa
mov
mov
movsl
or
sub
hlt
subb
mov
popf
into
mov
add
xor
movb
and
jo
hlt
lods
or
fldl
std
pop
jo
test
dec
lock
scas
lcall
jmp
movsl
nop
loopne
dec
stos
jne
jl
leave
or
imull
int3
sub
mov
mov
int
sbb
stos
jns
sbb
sub
nop
test
gs
adcb
rol
inc
add
ljmp
fsubs
add
sub
push
cmpb
mov
pop
sbb
es
cmp
sub
popf
adc
lcall
adcb
pop
push
cmp
cmp
mov
stos
xchg
mov
mov
fsubp
xor
shl
sbb
loope
push
push
inc
sbb
pop
sti
inc
mov
roll
insl
mull
xchg
fimuls
cmpb
and
lret
sbb
in
sub
sub
fisubrs
pop
fucomi
pop
iret
sti
std
xchg
sub
add
decl
cltd
xchg
pop
cmpsl
dec
add
insb
lds
mov
pop
mov
push
jb
mov
cmp
clc
test
mov
stos
and
adc
cmp
cmp
imul
cmp
fldlg2
lods
mov
scas
sahf
adc
mov
call
dec
or
adc
adc
push
out
lret
mov
mov
cld
mov
sti
cmc
push
call
add
dec
dec
shlb
out
push
outsb
popa
inc
cmpsb
cmp
inc
jl
insb
and
or
adc
inc
test
mov
pop
xchg
jle
loope
int
cmpsb
test
loopne
pop
test
xor
movsl
jbe
jbe
aam
scas
lock
nop
call
enter
inc
jae
outsb
push
and
and
adc
cmp
out
mov
out
ficompl
mov
jne
xchg
xchg
mov
stos
fists
inc
ffreep
out
outsb
push
pop
jae
hlt
pop
imul
sub
lock
xchg
or
push
bound
out
mov
and
cmpsb
pop
fists
pop
push
test
fs
pop
xchg
push
add
js
or
jp
stc
dec
pop
and
push
mov
fs
mov
or
repz
sbb
adc
push
hlt
ss
jecxz
call
jno
dec
lret
jl
mov
shll
jle
xorl
arpl
movsb
xorb
arpl
les
cmp
iret
dec
mov
ljmp
cmpsb
aam
jno
bound
psubb
mov
mov
out
mov
out
push
cmp
leave
nop
scas
rol
jle
call
cmp
jne
mov
out
pop
pop
xchg
lret
push
lahf
xchg
add
int3
fcoml
and
loope
adcl
adc
jns
jl
insl
pop
stc
fdivr
dec
push
inc
mov
es
outsl
or
arpl
push
push
inc
mov
pop
in
sub
mov
jae
and
push
mov
les
lods
add
out
add
iret
cs
cmp
sbb
out
test
xchg
sub
inc
add
pushf
stos
mov
jecxz
ficoms
dec
sarl
lcall
lds
ficomps
xor
jp
cmp
fsts
and
lds
subb
sti
test
stc
stos
mov
std
repnz
push
call
adc
negl
out
sub
dec
jo
push
and
out
addb
and
xorl
xchg
scas
shrl
cltd
mov
ror
fcmovu
shll
fcompl
and
push
orb
sub
sbb
fildl
dec
sub
in
ret
or
jmp
adc
rcl
decb
pop
sub
insb
sub
popl
jo
or
xchg
mov
mov
lea
dec
lods
fcoml
and
xchg
les
fisttps
lods
cmp
mov
test
repnz
sub
and
jno
inc
and
ret
addr16
xchg
pop
and
out
xor
in
pop
andb
scas
push
mov
rcr
jp
mov
jbe
orb
test
cmpsl
dec
movsb
jbe
adc
sbb
xchg
push
or
je
popf
add
add
jl
sub
leave
inc
aad
push
out
dec
pop
cld
adc
inc
loop
mov
js
shll
ds
cmpsl
test
jbe
jle
pop
shl
fdivrl
lret
add
lcall
xchg
aas
test
xlat
lock
jl
or
inc
xor
fdivs
jno
lea
addr16
push
mov
push
addl
or
jp
ja
sub
xor
addb
repz
mov
aad
or
cmc
ds
notb
jnp
dec
inc
cmc
idivl
cwtl
cmpsb
inc
push
scas
cmp
fnstcw
push
adc
idivl
fnstsw
repz
cwtl
sub
sarb
cld
and
test
orl
push
inc
ja
int3
addl
mov
sahf
mov
inc
nop
jns
filds
es
popf
mov
in
aas
nop
xor
fst
mov
sti
fsub
pushf
mov
mov
pop
adc
pop
xor
in
pop
jno
mov
mov
add
lock
sbb
ret
fs
mov
push
pop
pop
dec
sbb
out
jp
insb
or
je
movsl
or
lods
and
shrl
mov
jle
scas
push
and
lds
loope
mov
mov
push
rcll
fs
jg
cwtl
addr16
pop
stc
push
mov
adc
or
loope
inc
mov
push
jns
fdivp
aad
mov
sbb
shrb
jns
cmpsl
dec
test
mov
lcall
test
xchg
mov
push
mov
xor
adc
add
jno
xor
lds
pop
fs
xchg
xchg
mov
shrb
jb
fisubs
xchg
mov
and
bound
dec
and
mov
mov
aad
mov
jmp
lret
xchg
dec
popf
aas
sbb
push
and
out
push
addb
xchg
stc
pushf
stc
rolb
pop
or
mov
push
data16
repz
dec
cmp
push
jmp
or
loopne
inc
scas
outsb
pop
adc
xor
fwait
mov
pop
push
cmp
xchg
push
insb
mov
scas
dec
bnd
cld
jmp
or
repz
out
push
sbb
nop
cmp
roll
lcall
jmp
jmp
push
int
cmp
mov
lret
mov
in
cmc
pop
ljmp
mov
jne
mov
sbb
inc
fnstcw
dec
adc
jno
out
dec
ds
adc
fstl
fisttps
mov
fcoms
jmp
in
push
mov
and
outsl
fsts
movsl
ds
jno
xchg
int3
imul
or
scas
xorl
add
inc
xchg
xchg
fstpl
jo
xchg
xor
mov
ja
and
sti
stos
xchg
or
xchg
lock
enter
jne
mov
xor
iret
cmp
fmull
dec
scas
iret
dec
es
jno
or
mov
jp
dec
dec
inc
testl
sbb
into
xor
and
int3
add
fsubr
jno
sub
sub
push
repz
jo
dec
pop
lahf
xorl
loop
movsb
add
and
mov
pushf
push
roll
push
jb
adc
and
dec
movsb
sub
out
push
sub
aad
filds
sbb
inc
call
push
mov
iret
xchg
out
dec
lods
xchg
repnz
xchg
movsl
push
jae
std
fwait
rolb
and
xor
push
mov
lea
scas
or
stos
mov
enter
fwait
leave
mov
xchg
repnz
movsl
scas
pusha
outsl
push
jp
aas
std
ja
xorl
cmp
ror
in
mov
movsl
out
outsl
jp
xchg
push
call
mov
xor
xchg
adc
popa
xchg
mov
fsubl
pop
sbb
mov
sbb
enter
icebp
std
sub
jl
aas
dec
and
cmp
xchg
lea
adcb
daa
sub
inc
scas
or
insl
loopne
mov
es
je
and
push
into
and
jb
negl
mov
icebp
push
jl
ja
fdivr
and
or
adc
loope
jmp
fs
insb
rorl
repz
lret
dec
adc
pop
inc
cmp
lds
jo
xor
add
xchg
fdivrs
into
pop
sub
lods
jp
mov
xor
mov
xlat
sbb
push
jmp
jns
xchg
mov
push
xor
mov
jae
dec
add
sbb
push
cs
lcall
jl
popa
jbe
repnz
std
cmpsl
pop
lds
push
mov
stos
pop
outsb
loopne
pop
push
fmull
adc
fldcw
insl
sub
movsb
jns
das
in
dec
popa
mov
sbbb
xor
iret
jne
call
addr16
ficompl
icebp
jnp
xchg
scas
or
or
mov
push
dec
mov
pop
fisttps
lahf
aam
ficoml
dec
out
pusha
jecxz
insl
repnz
daa
jl
add
mov
mov
ja
mov
outsb
inc
sub
out
sub
push
or
adc
mov
jb
leave
dec
cld
jmp
add
add
cmp
pop
push
rclb
sub
das
adc
sbb
inc
or
aas
xor
jecxz
aas
mov
cwtl
or
fneni(8087
add
test
cmp
popw
pop
xlat
jmp
mov
push
out
mov
mov
jno
iret
movsl
pop
ftst
bound
add
mov
sbb
scas
push
lcall
sbb
rcl
and
mov
mov
push
jmp
scas
xchg
adc
mov
jbe
movsb
shll
mov
les
mov
add
into
mov
lcall
xstore-rng
cmpsl
inc
pop
xor
das
popa
xchg
cwtl
jg
or
cmpsl
add
or
loop
push
enter
jns
int3
mov
inc
sbb
fwait
shl
orl
ret
lahf
mov
dec
jo
fisttps
cmp
or
xlat
push
sbb
mov
jge
popa
es
shrb
pop
push
mov
mov
dec
xlat
outsb
mov
push
pop
sub
lcall
leave
cmp
lods
int
stos
push
cmp
sti
es
arpl
hlt
xor
les
pmaddwd
insl
jo,pn
mov
movsl
sub
jbe
imul
adcb
cltd
add
mov
inc
mov
das
aas
jmp
jg
xchg
add
jle
mov
pushf
stos
sub
jge
pop
imulb
into
and
popa
mov
popa
sbb
dec
icebp
int3
int3
add
push
cmp
add
repz
test
mov
stos
into
inc
je
sbb
sahf
pop
sbb
jecxz
stos
rep
and
jl
fwait
loope
aas
testl
pop
add
nop
jp
imul
and
aad
fidivrs
rol
pop
pop
and
push
je
inc
adcb
pop
or
jecxz
xor
jae
leave
movsb
pop
cmp
imul
test
jno
add
push
rcl
rorl
or
in
fadd
jmp
shr
and
in
fisttpl
gs
jle
mov
outsb
cmp
dec
jo
inc
aas
rclb
mov
and
incl
jecxz
xchg
jp
cs
mov
xor
adcl
or
sub
mov
xchg
push
call
xchg
xchg
or
or
pop
addr16
mov
sbb
stos
xchg
jno
sbb
cltd
jo
cmpsb
cli
jmp
mov
push
lahf
mov
jge
push
cmp
loopne
enter
rcrb
out
js
stc
mov
jmp
jne
or
in
dec
jbe
addr16
fs
inc
lods
jmp
daa
clc
inc
xchg
fwait
mov
mov
push
call
dec
shl
scas
jb
sarl
js
inc
xchg
mov
daa
xchg
pop
popa
hlt
push
or
out
fildl
movsb
mov
mov
nop
jge
sub
in
cli
movsl
cmpsb
int3
xchg
mul
mov
scas
fsubs
adc
inc
lods
mov
mov
xlat
sti
sbb
cltd
jbe
push
add
aas
nop
inc
push
pop
xor
cmp
pop
dec
fistpll
mov
mov
orb
arpl
cmp
mov
sub
pop
jecxz
push
in
test
jae
stc
cli
sbb
xor
xchg
xor
mulb
add
inc
sub
mov
in
lret
in
xor
cmp
andl
and
sub
sti
adc
mov
pop
pop
cmp
das
insl
mov
pusha
xchg
ret
mov
ljmp
je
or
icebp
das
cltd
mov
xor
divl
sub
outsl
sbb
dec
pop
adc
aas
cmp
xchg
xor
das
int3
jl
push
out
jo
inc
xor
mov
call
clc
inc
sbb
outsb
mov
outsl
mov
mov
stos
popf
inc
xor
fidivl
xor
jae
adc
adc
sbb
jnp
hlt
pop
jae
jo
stos
push
lea
jge
and
push
cmp
imul
dec
lea
adc
mov
daa
icebp
andb
sbb
pop
jbe
inc
testb
dec
xlat
push
push
and
push
xor
mov
scas
or
int3
in
adc
adc
mov
dec
js
lret
jb
imul
loop
aad
xor
fmul
add
cltd
ds
xor
or
jg
mov
mov
gs
and
jp
sbb
push
movsl
sbb
jbe
out
movsb
int3
cs
lds
data16
adc
ja
stos
aas
push
mov
mull
push
dec
and
lods
shlb
sub
gs
fcompl
add
sbb
inc
in
adc
inc
clc
cmp
add
pop
test
lret
add
sbb
enter
jecxz
adc
es
leave
dec
test
or
fcompl
push
je
mov
dec
xchg
mov
divl
lahf
inc
add
pop
rorb
lret
lahf
lret
fiaddl
sti
and
mov
in
sub
jne
sub
nop
dec
lret
insb
pop
in
push
pusha
out
push
ds
adcl
mov
in
xor
pop
in
test
leave
fildl
push
pop
insb
icebp
inc
jge
inc
adc
movsb
and
ret
adc
or
popa
mov
aad
add
pop
cmpsb
xlat
icebp
das
mov
adc
push
dec
pop
in
xlat
sub
lea
ss
loope
push
lcall
in
jno
push
iret
hlt
dec
sbb
roll
sbb
stos
lea
adc
inc
das
cmp
cwtl
mov
imul
cld
jne
out
in
sbb
jecxz
into
push
orb
stos
sbb
push
mov
push
ss
adc
mov
leave
sbbb
insb
adc
ljmp
fmuls
cmc
mov
movsb
pop
xchg
inc
leave
shl
icebp
das
div
ja
xchg
iret
enter
clc
aad
or
mov
push
mov
loop
and
xchg
popf
inc
ds
lret
cli
movsb
es
or
xchg
imul
cmp
sub
outsl
or
or
icebp
and
div
mov
pushf
mov
iret
xor
push
scas
xchg
and
lods
cli
fwait
adc
pop
loop
lcall
push
jno
push
push
dec
mov
add
stc
lret
sub
cmp
inc
pop
and
test
stc
out
xchg
lea
fstl
push
fwait
inc
sbbb
xor
push
nop
ljmp
push
mov
roll
loop
lea
pop
pusha
jns
mov
adc
mov
ss
aas
adc
inc
popa
push
xchg
test
sub
dec
sub
sub
cmp
movsb
mov
mov
push
mov
mov
xor
sahf
mov
mov
pusha
and
test
add
fcoms
mov
lock
cmp
inc
push
and
sub
sub
inc
stc
sahf
fidivl
outsl
add
lahf
mov
xor
dec
ret
cmp
ds
movsl
std
daa
sbb
enter
mov
cmp
jns
mov
add
sub
push
lods
into
gs
int
sbb
xor
jnp
test
arpl
stos
daa
add
or
push
lcall
loop
adc
inc
and
sub
adc
xchg
mov
outsb
push
push
mov
inc
pop
daa
iret
jb
dec
jp
cld
faddl
mov
call
or
mov
aam
cli
push
cmp
aaa
cmpsb
fisttpl
aaa
sahf
pop
inc
ret
pusha
mov
mov
jle
addr16
std
dec
fists
xchg
clc
adc
mov
fisubs
adc
sbb
sub
imul
mov
jne
adc
les
xchg
xor
iret
xor
cmp
sbb
adc
sub
jl
inc
ja
js
pop
push
clc
enter
mov
je
mov
test
je
lods
std
mov
cmpsl
out
enter
cmpb
push
popf
addb
xchg
fdiv
pop
mov
cmp
in
or
push
daa
pop
adc
or
mov
push
data16
in
jl
pop
mov
xor
pop
cmp
and
pop
cmp
adc
data16
stos
or
int
popf
aaa
arpl
mov
jne
adc
jmp
and
sarb
addr16
inc
int3
fmul
mov
rcrb
xchg
adc
imul
or
in
lds
sar
mov
clc
and
add
cmp
clc
sub
mov
push
pusha
cmp
mov
mov
add
dec
sub
lret
dec
leave
mov
xor
push
xchg
daa
jae
lds
mov
inc
stc
inc
repz
jno
jmp
push
fildl
cmp
cltd
hlt
jmp
mov
jnp
pop
inc
lock
insl
addl
mov
rolb
rcrb
cmc
xlat
or
cwtl
stc
push
push
xchg
in
sbb
push
push
pop
cmp
les
sub
clc
addr16
or
inc
in
mov
pop
in
xchg
adc
aaa
xchg
fisttps
aaa
sub
jecxz
pop
mov
push
subl
add
aad
push
mov
fildll
jg
fistpl
pop
imul
mov
sub
dec
into
js
dec
inc
repnz
mov
pop
imul
pushf
mov
dec
shll
pop
popf
in
jb
roll
test
adc
les
in
shll
dec
outsl
fstpt
aam
andl
xlat
int
ret
mov
cmpsl
int
and
shrb
into
dec
dec
push
rep
and
cmp
int3
sub
jecxz
push
call
add
fimuls
inc
ja
sub
mov
jnp
lahf
push
ror
scas
inc
in
jg
mov
inc
pop
je
dec
adcl
std
cmp
or
ss
stos
fmul
pushf
movsb
or
mov
add
mov
inc
in
imul
cmp
test
mov
stos
test
js
lock
mov
iret
cmpb
cmp
xor
fwait
leave
lds
sti
push
loopne
sub
adc
outsl
into
jo
or
fistps
mov
pop
adc
std
std
add
das
dec
adc
sbb
das
mov
pop
jle
ss
dec
push
adc
dec
xor
test
addr16
and
push
pop
and
push
out
stos
xor
jp
gs
cli
sub
out
push
push
addr16
inc
mov
sub
in
pop
sarl
add
addl
or
jae
je
and
adc
shl
out
insl
incb
test
in
jb
punpckldq
inc
jns
ds
hlt
mov
push
pop
inc
adc
aam
mov
ficoms
and
in
inc
sbb
scas
adc
js
repnz
dec
push
data16
dec
sbb
pop
mulb
lret
js
outsb
and
movb
dec
adc
in
mov
push
pusha
lahf
icebp
dec
xor
jge
fnsave
test
pusha
lock
sbb
push
aad
pop
rorl
cmc
add
push
mov
sub
adc
ljmp
scas
cmpsb
cmc
xchg
xchg
push
and
pusha
lock
js
je
push
outsl
dec
mov
mov
fisubrl
outsb
inc
pop
jne
jbe
dec
mov
cwtl
xor
orb
enter
inc
sub
data16
pop
push
jb
inc
iret
les
loopw
into
jne
dec
data16
adc
add
sub
jbe
mov
clc
arpl
sti
push
mov
mov
mov
das
mov
arpl
mov
dec
cmp
cmpsl
or
test
pop
stos
aad
mov
test
enter
and
add
cld
jge
sbb
cltd
scas
mov
lret
fs
cmc
inc
repnz
push
aaa
push
xchg
inc
sahf
cltd
filds
xchg
push
xor
movsb
mov
movsl
imul
xchg
popf
jmp
clc
mov
pop
push
dec
std
shlb
jmp
mov
pop
stos
sbb
sub
inc
aaa
fsubrs
loope
mov
es
stos
test
pop
or
mov
lods
ds
mov
push
out
xor
test
dec
nop
mov
fstpl
in
in
lret
test
test
push
fistpl
xchg
adc
jbe
mov
pop
xchg
call
data16
cmp
js
push
faddl
cwtl
shll
jne
push
scas
xor
call
mov
add
andl
jno
jae
inc
std
xchg
adc
inc
daa
ja
adc
stos
xlat
and
dec
mov
jb
adc
stos
imul
inc
lods
pop
testl
scas
sub
in
repz
jp
lds
test
xor
mov
shrl
cmp
sub
aad
sti
pop
stos
ljmp
mov
jg
or
pusha
mov
mov
test
cmp
fldcw
and
add
xchg
leave
xchg
or
stos
lcall
fldl
jo
cmpsb
jmp
jns
fwait
push
jp
adc
and
and
loop
jae
sub
sub
jg
ret
aas
sub
dec
jns
shrl
outsb
js
sbb
imul
outsb
pop
sub
lcall
cwtl
xchg
push
mov
adc
in
jo
cmp
insl
push
aad
icebp
movsl
mov
inc
fldt
pop
sbb
mov
lods
icebp
sub
mov
clc
jb
mov
outsl
lds
mov
mov
loope
sub
jns
pop
pop
ja
lret
xchg
mov
fwait
push
mov
adc
leave
ds
jne
mov
clc
cmpsb
mov
in
sbb
test
push
popa
leave
dec
and
movsl
insb
cmpsb
cld
sub
rcrl
loope
or
fcompl
aam
sbb
inc
fdivs
dec
clc
xor
adc
shl
xchg
push
sbb
push
and
pop
adc
cmpsb
pop
cmp
jle
pop
je
stos
les
sub
into
jno
nop
pop
aaa
dec
leave
add
lds
aam
or
sti
aas
fcoms
add
pushf
sub
adc
aam
push
mov
mov
push
and
int
aas
fistpl
scas
xchg
dec
push
push
mov
aad
insl
pop
pop
icebp
or
and
jns
popf
dec
sub
dec
ja
mov
xchg
and
into
jne
adc
cli
push
or
cltd
imul
leave
or
xchg
push
xchg
jbe
into
push
xchg
push
pop
adc
test
jmp
dec
adc
xor
iret
ja
sbb
inc
sub
fisttpl
push
push
lods
adc
xchg
jl
push
cs
or
lds
daa
inc
incl
pop
cmp
xchg
mov
mov
and
and
pop
xor
out
pop
mov
sub
xor
push
pop
mov
daa
push
lock
mov
xchg
mov
pop
pop
mov
lcall
pop
call
jnp
adc
push
add
lahf
pop
xchg
pop
add
xchg
pusha
lret
cmc
pop
gs
dec
fisttps
and
xchg
or
adc
or
loop
sub
iret
ret
mov
out
dec
xchg
mov
mov
cmp
mov
mov
mov
mov
push
sub
movsb
hlt
cmp
xor
mov
xor
xor
out
and
lcall
jmp
das
repz
lea
jg
rorl
sahf
mov
cmp
push
lahf
mov
or
mov
jmp
out
push
add
or
test
jl
cmc
movsb
mov
aad
jns
sub
and
push
ss
cwtl
enter
add
sbb
push
xor
adc
adc
mov
dec
mov
xchg
rol
xchg
mov
sbb
sbbl
or
add
dec
in
adc
cmp
cmc
xchg
cmc
sub
add
pop
or
pop
pop
xchg
shlb
cmc
es
or
sahf
mov
mov
and
das
in
mov
mov
jg
cwtl
shl
adcb
pop
imul
pop
push
pop
mov
xchg
call
and
jecxz
push
in
add
push
sub
lret
adc
jbe
nop
push
mov
test
popa
repnz
test
mov
mov
inc
lds
jecxz
mov
stos
data16
cmp
mov
and
fisubrs
pop
aam
insb
sbb
mov
cmp
xor
push
out
mov
jecxz
je
xor
loop
adc
jo
and
mov
test
sbb
in
adc
cmp
cs
inc
push
enter
daa
and
fidivl
mov
cmovs
fs
imul
movb
ds
loop
mov
mov
pop
jmp
pop
mov
push
icebp
xchg
sbb
jne
fs
sub
rclb
push
es
mov
xchg
aaa
cmp
pop
sarb
push
push
xchg
mov
sbb
inc
inc
push
inc
lock
xor
sbb
lahf
push
fs
jnp
lods
mov
icebp
shl
test
push
in
hlt
and
mov
pop
add
pop
shl
out
scas
stc
push
pop
aad
addr16
cmp
mov
out
mov
popf
sub
inc
jb
enter
xlat
ljmp
out
stc
fdivs
sub
dec
push
or
shll
mov
insl
jl
xor
mov
pop
shl
mul
sbb
test
inc
lds
mov
lea
adc
les
int3
pop
ljmp
or
and
mov
jbe
repz
jecxz
mov
je
sub
mov
add
and
in
mov
and
testl
add
arpl
push
mov
mov
shld
call
dec
xor
shrl
mov
outsl
inc
out
pop
in
test
shl
xchg
aam
mov
adc
rol
pop
xor
push
push
inc
dec
lcall
out
sbb
popf
dec
iret
adc
ja
pushf
mov
add
add
sbb
filds
lret
mov
push
and
icebp
sub
cli
cmp
pop
cmp
mov
mov
movsl
loopne
sahf
inc
lock
fisttpll
xchg
sarb
push
pop
dec
sar
cmp
test
lahf
fists
and
jno
jp
add
in
int
idivl
lods
add
cltd
cmp
dec
lret
dec
dec
cmp
jp
xorb
sbbb
hlt
add
test
or
cmp
mov
loop
cmp
dec
stos
in
push
cmp
fistl
notl
movsb
sub
or
add
popf
ret
psubusw
jl
jle
xor
ffreep
sub
push
push
and
je
ljmp
xchg
scas
out
nop
or
insb
outsl
push
repz
adc
aad
out
std
sub
dec
dec
push
dec
cmpsl
dec
stos
jae
mov
pop
cmp
sahf
ret
rolb
lret
sbb
mov
ljmp
or
jnp
cwtl
or
add
xor
mov
mov
mov
fwait
and
xchg
enter
ss
lods
aad
mov
ja
out
pop
xchg
arpl
and
dec
sbb
cmp
push
call
or
xchg
fnstenv
adc
cmp
sub
or
xor
popa
movsb
test
mov
dec
in
sub
cmp
push
sbbl
dec
shrl
pushf
out
shll
hlt
out
mov
inc
xchg
out
lret
ljmp
inc
addr16
movsb
or
mov
mov
hlt
dec
sub
outsb
repnz
lods
sub
pop
jns
dec
push
inc
push
push
rolb
add
mov
hlt
rolb
movsl
jmp
sub
jns
stos
pushf
mov
insb
push
imul
mov
mov
adc
xchg
add
scas
mov
xlat
iret
lods
test
stos
dec
add
and
adcb
xor
je
lods
insl
fadd
icebp
or
sar
xchg
cs
cwtl
add
xchg
lods
lds
push
push
je
lahf
xor
cmp
in
jg
jl
insl
adc
fsubrl
jne
push
sti
sbb
jmp
xor
xor
je
inc
ljmp
jl
pop
leave
xchg
mov
sbb
lahf
mov
fnstsw
pop
data16
push
push
lods
setae
testl
add
xchg
sub
pusha
repnz
ds
inc
push
stos
pop
fidivrs
mov
jns
mov
insb
cmp
or
sbb
dec
and
cmp
xchg
lahf
mov
inc
mov
insb
das
into
lock
das
mov
out
pop
rcr
loope
mov
repz
xchg
decl
jo
shrb
stc
loope
xor
js
aad
popf
inc
aas
mov
pop
hlt
stc
or
out
push
sbb
xlat
insb
iret
fcompl
sbb
fadd
add
jp
imul
push
push
jl
incl
cmp
push
jae
jmp
dec
mov
sbbl
adc
adcl
mov
xchg
lods
push
jecxz
mov
cmp
inc
adc
sub
bound
fmul
decl
pusha
test
sbb
pop
and
lods
cmp
sbb
clc
lcall
xor
xor
mov
mov
testb
insb
mov
mov
imul
inc
cltd
jnp
xchg
ljmp
aam
pushf
push
adc
cmp
push
or
xchg
mov
pop
sub
shl
cs
sub
push
inc
jmp
fldt
ja
dec
xchg
and
ret
cmc
push
pop
jl
ficoms
daa
sbb
mov
xchg
stc
sub
cmpsb
decb
imulb
scas
ja
test
mov
xchg
add
mov
vmovss
sbb
rolb
dec
clc
mov
or
mov
xor
leave
adc
icebp
into
movb
out
bound
and
nop
adc
push
addr16
fld
cwtl
rcrb
lock
and
push
inc
add
xchg
cmp
cmc
cmp
sub
xchg
xchg
lret
je
ds
adcl
adc
or
mov
pop
pusha
sub
or
divb
jae
mov
out
jne
shr
mov
push
push
jecxz
imul
mov
cmp
cmpsl
out
popf
in
fisttpl
hlt
cmc
push
out
pop
test
outsl
adc
stc
aad
pop
adc
pop
fistpll
outsl
lods
lret
mov
sub
data16
jle
std
sub
stos
loopne
jmp
jno,pn
stos
and
lds
add
xchg
push
mov
mov
jge
xchg
icebp
stc
fnstsw
jns
mov
ret
mov
add
mov
adc
vphsubdq
mov
in
sbb
dec
mov
data16
sbb
mov
push
mov
or
jmpw
dec
std
inc
lret
cmp
dec
cltd
mov
jns
lret
sbb
mov
jecxz
lret
je
bound
push
push
cltd
or
and
mov
cld
xchg
aas
push
fistl
lds
inc
test
ljmp
adc
xor
sub
jnp
imul
mov
push
sbb
jnp
pusha
repnz
add
pusha
adc
sbb
mov
fwait
pop
lret
stos
cmc
cld
cmpsb
jge
bound
pop
pop
add
icebp
mov
rclb
jnp
cmp
push
cmp
adc
orb
loopne
dec
xor
test
sub
mov
dec
adc
xchg
inc
cmp
xchg
das
inc
xchg
xchg
fs
imul
loopne,pt
cli
jae
sti
arpl
ret
lea
mov
push
add
xchg
lret
fmuls
fucomip
push
sub
aaa
xor
std
test
sub
ja
mov
outsl
and
mov
leave
jge
jp
shlb
int
pop
out
frstor
mov
and
and
cwtl
jns
movsb
xor
pushf
xor
sub
cwtl
mov
stos
inc
stos
or
in
mov
shll
jmp
mov
out
adc
xchg
and
add
add
fmull
dec
fucomp
loop
aad
in
mov
pop
int
inc
rcrb
pushf
push
push
adcb
nop
jnp
push
cmpsb
add
mov
hlt
in
sbb
das
dec
cmpb
push
movsb
mov
adcl
je
mov
nop
hlt
data16
nop
xchg
std
sahf
ret
cmp
popf
sub
add
xchg
and
data16
ret
or
and
imul
push
cmp
xor
cmpb
and
jae
cli
mov
mov
movsb
dec
cmp
push
arpl
and
je
shrl
or
ret
fstpl
pop
insl
dec
push
popa
mov
rcrb
or
mov
insl
outsl
sti
mov
xchg
lahf
xchg
pop
cmp
fimuls
xor
imul
sbb
addr16
loop
cmpsl
ficompl
call
sbb
int3
test
lahf
push
imul
fbld
int3
mov
mov
rcl
cs
hlt
cmp
lret
call
sbb
cmp
cmp
test
inc
pop
sbb
fs
add
lods
mov
fdivs
xor
jae
xor
fsubrs
dec
ds
dec
cltd
adc
imul
rorb
ljmp
sbb
stos
out
xor
fs
mov
mov
dec
inc
mov
and
fucomip
lret
repnz
jno
jp
xchg
mov
pop
mov
in
cmpsb
fiaddl
enter
xchg
cmpsb
das
aam
fildll
dec
int
push
jo
clc
in
lock
sbb
jnp
push
mov
add
dec
pop
mov
pop
jl
pop
mov
test
sarb
lcall
call
lret
sub
lods
in
popa
jnp
jae
adc
or
addl
mov
pop
add
push
and
pushf
mov
faddp
pop
push
imul
rol
je
jbe
inc
stos
fisubrl
adc
mov
divl
jmp
push
xchg
movsb
addr16
dec
outsl
adc
lods
or
fmul
je
mov
xchg
inc
push
jmp
fwait
lods
popa
adc
sbb
jae
cli
add
insl
dec
orl
test
fdivrp
dec
out
adc
add
xor
fildl
mov
dec
rclb
jo
es
add
rclb
scas
push
cmc
lods
inc
mov
repnz
sti
cmp
adc
in
cld
mov
pop
les
add
cmp
adc
cs
dec
dec
stc
xorl
aaa
push
xchg
cmp
insb
rorb
ret
xor
nop
movsb
arpl
popa
sbb
leave
sub
pop
scas
rcrb
push
leave
js
js
std
xchg
mov
sahf
es
pop
ss
jbe
push
out
mov
xor
mov
leave
and
sbb
jp
mov
mov
ss
cmc
or
mov
sub
pop
cltd
scas
xchg
hlt
xor
push
gs
inc
and
xor
and
movl
in
call
mov
mov
xchg
js
icebp
orl
inc
mov
dec
mov
int3
mov
xor
insb
or
xchg
fcompl
pop
dec
aam
dec
fistl
xor
and
sub
mov
mov
mov
ret
fmull
out
mov
repz
into
jo
sarl
mov
xchg
cmp
add
outsb
cmpsb
and
sbbl
xor
test
je
jmp
in
lods
jle
out
rcll
jp
shl
rorl
pop
ficompl
mov
or
fdivrl
pop
imul
es
pop
pusha
daa
lock
push
pop
and
cmp
xchg
loope
out
dec
pop
sbb
cmp
xor
fidivrl
push
jmp
cmp
pop
adc
lcall
xchg
gs
daa
push
scas
ret
cli
dec
dec
iret
rorb
jg
loope
rcrb
sarl
inc
shrl
icebp
jmp
xchg
xchg
cmp
sbb
lret
xchg
pop
in
pop
or
mov
mov
mov
pop
imul
das
fidivrs
cmc
xchg
out
lcall
loop
dec
mov
xchg
js
xor
jbe
notb
xchg
mov
jae
hlt
cltd
or
aas
mov
jge
mov
mov
dec
pushw
addl
in
xlat
add
dec
out
shll
clc
loop
jns
lcall
pop
in
mov
lock
mov
xor
loop
push
sarb
lcall
adc
stos
xchg
mov
jae
and
lock
scas
mov
stos
scas
std
pop
jns
leave
jge
inc
aam
mov
rcr
add
imul
rol
rclb
jge
popa
movsb
lds
pop
inc
cmp
shlb
sub
int
sub
in
js
jp
cmp
jge
aas
imul
or
and
push
loopne
sbb
imul
jb
pop
in
or
jno
ja
add
sbb
mov
add
xchg
jns
insl
jo
icebp
or
fldcw
push
mov
in
xchg
rcr
cli
lcall
xorl
lret
insl
iret
xorl
cwtl
leave
lcall
sar
rclb
in
cmpsl
jmp
loopne
ja
pop
jns
inc
xor
mov
sar
out
lcall
mov
out
mov
inc
data16
sarb
push
sbb
push
in
pop
push
mov
in
stc
xchg
pop
loop
mov
cmpsl
arpl
mov
jle
lret
jns
out
cmc
pop
jns
sub
sbb
dec
mov
inc
stc
aad
sbb
dec
sub
mov
faddl
ret
andb
mov
xor
mov
and
leave
mov
sbbb
sbb
scas
push
jle
and
jne
sbb
add
inc
stos
scas
xlat
out
cs
lahf
mov
iret
pop
lods
addr16
sub
ror
push
mov
inc
sahf
test
ljmp
xorl
xchg
call
lea
add
pop
fidivrl
adc
std
out
loop
add
les
push
push
push
mov
enter
lods
mov
test
add
das
and
and
pop
into
dec
xor
jp
movsl
rolb
call
cwtl
lahf
fisubl
or
push
cmp
adc
push
adc
outsb
mov
xchg
insb
and
dec
sub
xor
adc
mov
add
ljmp
scas
outsl
push
orb
cwtl
inc
out
sub
test
sbb
out
popf
mov
jo
mov
movsl
call
cmpsl
cmpsb
jl
sub
mov
or
mov
lds
test
push
or
xchg
inc
test
or
jl
mov
inc
dec
inc
jmp
inc
pop
test
ret
das
rcrl
arpl
testb
mov
imul
inc
jecxz
in
subl
bound
sub
push
sti
sub
jnp
dec
cmc
outsb
popa
in
mov
cli
inc
add
imul
sub
pop
jp
fdivrs
xor
test
add
stos
mov
sbb
mov
shr
dec
imul
aas
sub
cmpsl
add
lds
add
fimuls
aas
sbb
push
pop
jns
inc
mov
dec
sub
loop
fisttpll
or
shl
divb
and
mov
mov
jne
cmp
dec
jecxz
inc
ret
and
fcmovnu
shlb
and
add
sbb
movsb
das
sub
push
leave
int
popa
sbb
dec
push
gs
xchg
xchg
dec
sbb
clc
mov
sub
adc
push
fstpt
jge
xor
ds
sbb
sub
and
add
or
adc
ficompl
cmp
push
mov
mov
push
mov
add
insl
sub
ss
cld
dec
scas
cmp
or
mov
add
in
xchg
push
inc
jo
and
cli
and
sub
jbe
xchg
loopne
inc
ss
lea
into
jae
addr16
push
aaa
pop
test
fwait
inc
sub
push
sub
inc
pop
push
mov
sub
bound
sub
out
sub
sub
out
rorb
dec
push
lcall
shll
adc
mov
xor
fistpll
rcr
inc
pop
lahf
ljmp
and
jmp
scas
mov
cmp
push
xor
iret
add
inc
add
in
mov
mov
mov
mov
inc
push
jbe
pop
ss
mov
jecxz
jae
enter
icebp
les
repnz
arpl
and
cltd
lods
fidivrl
or
jnp
in
xchg
mov
ljmp
jno
sar
cwtl
adc
jae
adc
movsb
leave
cmc
xchg
lret
mov
lret
cmp
mov
fwait
mov
insl
fs
jne
cmp
sbb
cmp
mov
xchg
cmp
mov
cmp
aad
cmp
cmp
insb
jmp
pop
jge
cmpsb
leave
aaa
mov
add
xchg
push
adc
pusha
sbb
je
loopne
loop
push
mov
ret
ja
push
movsl
jecxz
in
mov
lret
test
sti
sub
or
add
sbb
jnp
dec
arpl
js
adc
pop
mov
jae
jge
cmc
in
loopne
and
sub
out
jl
out
testl
and
mov
xor
imul
sub
mov
pop
cmpsb
mov
ja
adc
js
stos
or
sahf
ret
jo
push
loopne
movsl
jne
mov
and
das
sub
adc
pop
mov
fisttpl
mov
or
and
adc
xchg
jecxz
add
xchg
jb
pop
push
out
cmp
into
sarb
cmpsb
jo
adc
sub
les
add
leave
cmp
add
ljmp
and
pushl
fdivrl
into
and
popf
test
fwait
mov
leave
xor
aam
imul
adc
roll
push
jge
loopew
mov
or
push
fbstp
push
inc
cmpb
mov
icebp
lds
and
stos
adc
shrb
or
unpcklps
out
sub
push
push
mov
aam
and
into
xor
mov
adc
cmp
push
mov
cmp
ja
lds
pusha
sub
inc
inc
in
repnz
dec
push
adc
cli
dec
pop
adc
out
movb
fldt
sbb
lock
xor
repnz
ss
cmp
jno
pop
adc
ljmp
jne
aas
jge
cmp
aad
push
repz
fucom
dec
sti
in
mov
jne
cld
mov
mov
sub
test
push
shll
mov
cmp
call
and
xchg
test
mov
cmpb
outsb
cmp
or
xor
gs
arpl
rorb
sub
jne
adc
in
adc
outsl
cmpsb
sub
leave
mov
lahf
sbb
jg
sbb
xor
sti
jp
xorb
cwtl
mov
mov
cmp
imul
gs
lods
vpsrld
push
addl
popl
jb
xchg
ficoml
add
dec
dec
cltd
imul
and
xor
mov
sub
cmpsb
xchg
inc
push
cmpsl
mov
sub
jg
or
rep
fwait
sbb
cmpsb
rol
gs
dec
jle
or
cmpl
divb
xchg
cli
mov
xor
sbb
or
push
push
lcall
mov
push
pop
and
cmpsb
push
mov
add
les
cmp
movsl
cmpsb
out
imul
sub
in
jnp
push
cmp
jecxz
xchg
jl
pop
mov
test
xchg
jl
adc
aad
mov
xchg
rclb
adc
jns
pop
jecxz
and
jb
jo
push
lods
cmpsb
fwait
rol
or
xchg
and
addr16
stos
pop
push
shrl
mov
hlt
lea
dec
dec
adc
lcall
jge
inc
std
sbb
xchg
push
dec
roll
pop
add
cltd
stc
cmpsb
fadds
sub
adc
mov
in
mov
sbb
fs
in
lahf
mov
xor
ljmp
insl
mov
packssdw
imul
ret
fidivrs
ret
cmp
dec
negl
shll
clc
mov
rolb
leave
pop
adc
rcll
mov
leave
lret
xor
inc
cli
shr
push
lock
adc
push
sub
fwait
xor
inc
jp
sbb
mov
arpl
dec
inc
jo
movb
mov
and
pop
jg
lret
xchg
clc
aad
pusha
out
sbb
add
mov
xlat
testb
test
sbb
xor
insb
testl
push
lock
push
mov
cmpsb
js
inc
and
loopne
jle
xor
sbb
mov
inc
fisttps
add
xchg
mov
mov
outsl
fistpll
pushf
stos
stc
rcrb
inc
jne
arpl
and
lahf
mov
pop
add
fmuls
push
adc
pop
and
shrl
jb,pt
rcll
mov
xor
push
cmp
ja
icebp
lret
rorl
push
and
cs
loopne
leave
xchg
dec
mov
mov
add
shr
sti
test
cwtl
mov
mull
lcall
sti
test
mov
and
mov
aam
bound
xchg
ret
cmp
xor
dec
enter
int3
xlat
subb
and
dec
mov
jl
push
mov
prefetch
or
or
jnp
ja
and
pop
mov
ret
mov
xlat
push
repz
dec
cmp
hlt
jbe
pop
gs
les
and
movsl
mov
roll
sbb
push
adc
les
int3
fdivrl
test
sbb
and
mov
push
stos
jmp
mov
add
test
das
mov
insl
aad
sbb
mov
or
ror
hlt
mov
stos
and
out
int
test
push
or
js
fcompl
jnp
dec
jmp
mov
xchg
adc
push
mov
mov
lahf
cmp
jno
dec
std
out
inc
bound
xor
inc
xchg
xchg
push
xor
jl
daa
push
jecxz
dec
xor
ds
mov
jp
or
es
fcoms
push
andl
jns
cmp
xor
xchg
std
shlb
dec
mov
std
scas
nop
mov
inc
call
pop
fdiv
insl
jno
sub
fdivs
xchg
jmp
ja
inc
hlt
outsl
clc
lahf
scas
pop
aam
stc
loope
daa
insb
cmp
xchg
jns
fsts
movsb
mov
inc
sbb
jp
bound
popf
inc
mov
mov
movsb
loope
and
hlt
mov
mov
xchg
movsb
gs
adc
les
push
mov
push
cli
mov
rcrl
cmp
adc
pop
icebp
inc
mov
in
testl
xchg
lret
inc
flds
inc
inc
out
jg
lds
sub
cwtl
aas
or
clc
lea
scas
dec
sub
xchg
pop
int
push
imull
clc
adc
js
cld
stos
in
jbe
ljmp
jnp
movsb
lods
adc
fdivrs
pop
insl
adc
mov
das
clc
insb
popa
push
lahf
dec
scas
xor
test
les
in
dec
fstpl
xor
inc
jb
je
pop
jmp
add
mov
xor
pop
xor
outsl
jmp
shlb
aas
stc
out
jae
push
adc
jo
mov
insb
ja
jb
insl
mov
mov
lods
mov
mov
arpl
add
aad
mov
jno
in
leave
imul
aam
mov
add
pop
addr16
sub
lret
or
lret
ret
push
mov
ja
mov
xor
pusha
push
scas
test
push
out
jbe
mov
mov
mov
cmpsb
fcomi
sbb
mov
sbb
jne
popa
cmpsl
jg
fstl
std
test
das
pop
ficoms
data16
vcvtsd2si
lcall
inc
or
jno
mov
jb
inc
nop
sbb
fs
cmp
lcall
dec
lret
push
jle
std
data16
out
cwtl
inc
sti
xchg
mov
lahf
mov
lds
jno
push
push
jle
mov
fwait
sub
aaa
adc
mov
inc
repnz
inc
inc
pop
jo
aaa
push
insl
push
pop
ja
imul
sub
jge
lret
int
jo
xchg
lcall
testb
stos
mov
pop
clc
fs
inc
mov
call
jnp
jmp
jle
scas
push
arpl
sub
ja
and
mov
mov
pop
fnstenv
jno
pop
push
movsb
ljmp
adc
pop
in
jnp
stc
cmp
add
lods
jno
add
jecxz
xchg
cmp
std
push
loop
shl
mov
lods
and
push
daa
das
and
pop
in
fsubrs
push
sarb
shll
or
scas
lods
leave
or
test
sarl
and
call
sub
cli
fdivrs
outsl
push
mov
scas
pop
gs
pop
leave
cmp
lods
cs
jg
push
stc
inc
adc
cwtl
sub
sub
jnp
push
in
pop
inc
pop
push
rcrb
fiadds
lret
loopne
cmc
fldl2e
mov
add
mov
cltd
jbe
inc
adc
add
xchg
stos
fsub
stos
sub
sbb
jns
lods
fsubs
dec
jmp
jp
cmpsb
repz
jl
mov
sbb
dec
cmp
mul
pop
mov
and
xchg
lahf
jge
sub
xchg
aad
adc
in
mov
call
dec
addr16
loopne
sub
or
mov
add
scas
mov
mov
add
xchg
push
ret
sbb
mov
out
push
xchg
jbe
dec
int3
dec
or
dec
push
daa
imul
dec
push
movsl
imul
push
ret
fwait
adc
add
sbb
out
popa
mov
iret
popf
rorb
sbb
sub
ds
pushf
int
hlt
xchg
popf
jge
ds
scas
cmpsb
cmpsl
xchg
pop
or
repnz
int3
add
cs
out
xchg
adc
out
movsb
outsb
lea
inc
out
popa
xor
shrl
xchg
scas
je
xor
in
add
scas
cmp
ret
int3
cmp
fst
or
sub
in
fwait
testl
divl
sbb
popl
sub
loop
push
hlt
daa
xor
mov
fwait
add
push
inc
pop
cmc
pushf
mov
jle
jne
ja
movsl
rclb
push
je
and
pop
jmp
add
xchg
or
sti
mov
gs
loope
and
mov
mov
xorl
add
mov
outsl
sub
popf
ficoml
cmp
push
roll
imul
jno
cmc
bnd
icebp
ss
lock
outsl
sbb
mov
inc
sahf
push
push
fs
xchg
dec
repnz
jge
lret
stos
adc
mov
mov
ret
mov
push
push
subb
mov
ss
sub
dec
in
test
lods
lods
or
mov
jae
arpl
jle
push
xor
cltd
push
cmpsb
rolb
sar
jg
js
sub
push
jb
movsl
jge
bound
mov
jo
push
mov
adcl
adc
jne
pushf
push
sbb
divb
add
stos
imul
cmc
push
xor
call
movsb
and
cmc
sbb
push
in
daa
push
mov
dec
push
push
lds
call
pop
cmpsl
mov
jae
popa
lods
jnp
ds
mov
pop
inc
pushf
and
push
cld
std
mov
loopne
push
test
sbb
sub
in
push
lds
cmp
adc
cmp
pop
rcl
loope
popa
sbbl
mov
cli
cltd
xor
in
fs
add
push
popa
or
xchg
pop
push
jmp
ja
idivb
fildl
in
fsts
xlat
out
pop
mov
pop
push
mov
out
das
cwtl
pusha
pushf
fstps
nop
cli
or
in
imul
or
mov
xchg
cmp
mov
icebp
xor
adc
jge
rorb
stc
int
mov
arpl
mov
xor
cltd
mov
test
test
inc
and
pusha
add
or
stos
fistpl
inc
cmpsl
xchg
push
addb
lea
shll
and
sub
mov
movups
lahf
sbbb
jns
fidivl
cmp
and
in
leave
pop
loop
xchg
xchg
sub
and
and
lods
jne
hlt
adc
out
jecxz
sub
les
out
lcall
mov
fucomip
mov
xchg
sarb
movsl
cmp
lret
adcl
sbb
sub
test
adc
scas
outsl
adc
or
ss
js
test
xchg
mov
add
mov
lock
mov
les
test
in
push
xchg
sub
sbb
cmpsb
mov
movsl
sub
inc
sub
loop
add
or
sahf
adc
outsb
xor
sbb
insl
in
aas
xchg
aad
faddl
scas
repz
les
aaa
xchg
jmp
mov
das
mov
cld
in
adc
xchg
xchg
mov
xchg
fwait
or
movsb
mov
jnp
fadd
aad
lahf
fdivr
mov
mov
sub
outsl
mov
add
test
jbe
popf
add
fcmove
ficoml
fsubs
cld
out
add
mov
sbbl
push
dec
add
mov
lcall
cmc
mov
lds
mov
sub
pop
pushf
mov
inc
cld
pop
lock
repz
cmp
loope
mov
sub
fwait
push
pushf
je
hlt
aaa
arpl
lret
in
nop
jle
hlt
rolb
jp
mov
xlat
test
add
cmp
ret
push
mov
insb
or
stc
lahf
xchg
pop
lret
out
xchg
movsl
xor
push
lods
xchg
jo
pop
mov
jmp
mov
sbb
and
push
shll
cmp
xor
fildll
inc
jl
js
aaa
andl
push
imul
repnz
subl
mov
in
push
and
test
jmp
stc
mov
mov
pop
std
add
sbb
outsl
stos
adc
cmp
pop
jbe
pop
sub
dec
mov
roll
jbe
jae
mov
nop
js
sbb
test
js
sub
cmpsl
sub
notb
movsl
jecxz
cld
lcall
mov
sub
sbb
fisttpl
dec
jmp
jle
xor
add
sub
push
adc
cmp
sbb
cmp
cld
mov
add
pop
jmp
iret
sahf
or
sub
inc
push
mov
cmp
out
jmp
xchg
cmpsl
and
mov
mov
jno
shll
rorb
aas
pop
inc
and
dec
mov
jne
call
aas
mov
out
jle
cli
xor
cli
push
lret
mov
stc
xchg
mov
xchg
adc
sub
push
push
mov
and
jecxz
add
test
mov
jae
mov
mov
xor
push
lods
mov
push
cmc
enter
jbe
les
jo
push
pop
mov
sahf
lret
arpl
sub
lds
jns
cld
inc
add
shrl
test
or
scas
xchg
mov
scas
leave
mov
mov
test
aas
fld
mov
push
jecxz
xchg
out
xchg
stos
xor
rcll
cmp
jg
mov
push
sub
xchg
pavgb
pushf
imul
mov
mov
push
and
in
jnp
cmc
stos
and
push
cmp
adc
add
add
adc
and
mov
add
aad
jo
pop
hlt
insl
icebp
push
sbb
cs
fdiv
loop
or
call
sbbl
pop
mov
pop
pop
add
aas
xor
jnp
push
aad
pop
add
dec
adc
repnz
fwait
lcall
inc
adc
xor
and
outsl
loopne
test
mov
mov
inc
mov
xchg
lcall
or
lock
sbb
call
rorl
cli
repz
daa
pop
mov
pop
xor
test
movsl
fistpl
push
les
mov
popa
add
xor
test
adc
mov
mov
dec
data16
fmull
in
jbe
test
xchg
daa
jge
cli
mov
ret
icebp
cmp
jno
xchg
in
cmp
std
fldcw
ret
adc
pop
mov
xchg
dec
lock
pop
mov
sub
push
dec
out
les
xchg
or
mov
adc
jnp
lret
repz
pop
clc
mul
dec
adc
addl
pop
es
jecxz
inc
fsts
aaa
into
jmp
cmp
arpl
sub
or
int
sbb
cli
xor
xchg
mov
lock
push
cmp
xchg
js
inc
mov
jl
int3
and
stc
out
sub
jo
push
clc
dec
and
lahf
xor
and
pop
mov
xor
js
mov
cli
mov
cmp
cmp
adc
xchg
inc
out
sub
mov
loop
push
in
and
mov
mov
test
fadds
neg
cld
in
or
out
imul
cmc
mov
sbb
dec
pop
jmp
fdivr
push
jl
test
mov
xchg
test
addr16
or
xor
adc
jns
add
xchg
xor
mov
ficompl
sub
jns
cs
dec
push
jl
sbb
and
xchg
int3
stos
sbb
lock
fwait
imull
aas
pushf
mul
outsb
fidivrl
push
xor
test
pop
mov
ja
paddd
cmpsb
xchg
pop
or
xchg
push
push
mov
inc
xorl
jmp
mov
rcll
addps
loopne
test
movsl
lret
mov
popa
push
fisubrs
ja
arpl
mov
test
push
aad
ja
push
xchg
mov
cmp
add
cmc
gs
int
sub
cmp
fmuls
jnp
jmp
lahf
pop
mov
cmp
out
or
lods
inc
daa
arpl
loop
dec
cltd
adc
mov
xchg
cwtl
mov
mov
jbe
mov
nop
sbb
fs
push
aad
imul
cmp
sub
lods
in
mov
push
ljmp
push
sbb
sbb
int
dec
imul
fsubs
add
cmp
cmp
test
or
lret
jne
sbb
int
sbb
jne
mov
push
inc
push
lret
fwait
sarl
aas
adc
mov
xor
pminub
pop
xchg
jne
xor
gs
dec
xchg
add
sets
xchg
lds
pop
fisttps
adcl
cmpsl
int3
iret
lret
in
mov
movsb
jg
push
icebp
mov
lods
pop
movsl
mov
test
out
add
jle
dec
popf
ss
cmp
outsb
sub
lret
mov
pop
cmp
jns
cld
test
in
push
push
jg
sti
aad
sahf
push
pop
repnz
mov
cli
ljmp
loopne
pop
lods
les
jns
mov
outsl
mov
cmp
negl
es
cmp
lea
test
adc
test
pop
dec
fidivrl
jbe
leave
push
daa
or
sbb
dec
sbb
sbb
hlt
call
or
mov
rorl
pop
jp
pop
xchg
add
pop
es
cli
fs
mov
push
lods
loop
mov
cmp
lcall
cltd
jb
fdivp
mov
adcb
add
repnz
dec
imul
pop
mov
pop
addr16
rorl
ror
xchg
movsl
mov
push
jg
sub
dec
les
pop
pop
pop
jge
int3
rcl
push
loop
xchg
jp
ret
push
mov
xor
xchg
outsl
imul
add
mov
addr16
add
in
cwtl
je
push
inc
add
xchg
xchg
mov
jg
mov
orb
sbb
mov
mov
dec
imul
faddl
jecxz
cli
fnstenv
aaa
mov
jbe
inc
mov
icebp
or
pop
pop
dec
ficompl
mov
pop
inc
or
add
adc
mov
loop
repz
shll
sti
add
jb
adc
lods
hlt
lcall
pop
lcall
outsb
mov
xor
out
sub
pop
adc
xor
add
dec
mov
jo
add
popa
cwtl
jo
les
xchg
dec
sbb
or
nop
std
adc
daa
movsb
dec
loop
scas
mov
push
xchg
sbb
jbe
mov
int
in
shrl
iret
mov
lea
aam
mov
sub
frstor
into
aas
push
test
test
pop
shrl
sub
jae
sarl
test
xchg
fildll
xor
rorl
dec
dec
push
adc
mov
mov
and
lcall
push
jmp
into
add
xor
pop
imul
push
out
testb
xor
dec
pop
jg
shrb
mov
enter
fld
mov
aam
ret
push
dec
fiaddl
insl
pusha
pop
pop
xlat
push
and
das
pop
sbb
shrl
inc
divb
loop
or
lds
cmpsl
ret
or
call
cli
dec
and
mov
in
imulb
loope
xchg
loop
cmp
xor
pop
sarb
and
aaa
dec
jp
push
int
out
cmovge
push
ljmp
rcl
outsl
inc
and
cli
es
cli
push
mov
fistpl
jno
or
negb
popl
outsl
push
dec
xchg
pop
clc
pushf
mov
xor
sahf
and
pop
jmp
inc
xchg
add
lods
stos
pop
insl
mov
idivl
jmp
add
or
adc
sub
loope
dec
idivb
push
xchg
xor
lahf
seto
leave
fninit
mov
push
faddl
cwtl
push
int
cli
inc
add
sub
sbb
jae
fsubs
sub
ret
gs
lret
or
stc
sub
xor
fnstsw
icebp
dec
data16
je
aam
mov
shll
test
dec
mov
inc
mov
movsb
ljmp
in
test
mov
neg
in
hlt
out
test
test
lds
lret
push
aaa
inc
sti
sar
loopne
popf
scas
movsb
cmc
ljmp
sbb
pusha
cmpsb
jne
std
xchg
xor
dec
adc
das
inc
mov
das
xor
imul
mov
push
repnz
adc
push
jne
jo
inc
sub
xor
xor
loop
dec
sub
insb
out
test
out
ja
in
pop
mov
adcb
ja
dec
xchg
or
icebp
aam
add
mov
jg
add
and
mov
out
push
sbbb
decb
mov
outsl
dec
out
jno
mov
mov
sti
test
lcall
push
in
in
std
lock
or
fldcw
je
int
push
jp
mov
icebp
jge
pop
nop
mov
mov
out
mov
jb
out
fadds
and
lods
push
or
out
shll
xlat
testb
insl
loope
xchg
xor
dec
fs
sub
movsl
or
enter
dec
dec
xchg
add
adc
or
in
jl
inc
pop
jo
mov
daa
popa
or
sarb
sti
pop
fnstcw
adc
xchg
loop
divb
mov
outsb
lret
out
dec
les
pop
cld
or
rcl
adc
xor
sub
cmp
or
in
fwait
mov
sahf
dec
scas
ljmp
push
int
cli
mov
sub
inc
mov
lock
pop
aam
cmpsb
aad
and
xor
jmp
mov
push
fcompl
pusha
lcall
scas
inc
das
or
aad
int3
jbe
pop
stos
mov
push
push
inc
jmp
xchg
mov
iret
dec
sbb
ljmp
sahf
sub
or
in
adc
clts
movsb
gs
loope
enter
lea
cmp
ds
adc
out
js
gs
out
shr
mov
xor
sub
rcrl
add
jg
std
pop
mov
mov
add
ret
mov
push
add
mov
clc
daa
scas
cmc
shlb
pop
xor
pusha
and
add
ficomps
jge
push
aad
sbb
aaa
jg
clc
inc
sub
pop
rcrb
fwait
cli
sub
fldl
inc
into
repz
fadd
es
jo
adc
push
cmpsl
push
xor
jmp
shrb
jecxz
lods
jnp
into
cmp
call
packsswb
xor
int3
mov
imul
testl
or
pop
lcall
push
out
ss
aad
cs
incl
loop
inc
nop
cli
push
jmp
dec
fnsave
mov
sbb
stc
mov
inc
pop
xor
int3
pop
fldcw
pop
pop
inc
mov
fwait
loopne
adc
sbb
push
sbb
mov
cld
lock
movsb
jecxz
xor
or
into
pop
adc
fcmovnb
and
add
jle
hlt
cltd
das
sub
dec
clc
aaa
es
or
sarb
adc
pop
sbb
lret
rol
xchg
adc
movsb
mov
andb
mov
jae
jno
jl
daa
cmp
stos
push
testl
shrb
lods
push
mov
idivb
ret
mov
mov
stos
cmp
or
decb
pushf
mov
clc
jno
in
xchg
dec
mov
cmpl
xor
jg
loope
ljmp
xchg
popl
xor
mov
sbb
jns
xor
mov
insl
mov
ljmp
scas
int
jl
xchg
cmc
lods
push
xchg
in
xchg
push
sarl
push
shll
rcrb
icebp
jno
inc
pop
cmpsb
mov
je
hlt
jb
lahf
scas
and
push
stos
inc
and
adc
xchg
xchg
popf
or
js,pn
stos
popa
pop
mov
cwtl
fwait
dec
lret
into
sti
or
dec
push
cld
mov
daa
outsb
scas
mov
push
xchg
dec
mov
add
jl
add
or
inc
insb
cmp
push
cmpsl
pusha
cwtl
clc
mov
roll
cmp
cmp
cmp
popa
mov
push
inc
ret
shrb
loop
mov
ss
inc
cmp
sub
push
jae
mov
je
pop
cld
xor
inc
adc
stos
ds
xor
inc
push
adc
leave
cmp
je
inc
cmp
scas
cmc
clc
loope
xchg
rcrb
add
mov
cmp
lods
ja
lahf
xchg
test
sub
ja
sub
sbb
pop
inc
insb
aad
notb
dec
mov
in
push
arpl
scas
je
cmp
lock
arpl
pop
pop
scas
test
lock
sti
cmp
fistps
in
mov
push
mov
dec
xchg
orl
jle
negl
bound
clc
jne
mov
call
out
dec
fistpll
cli
dec
lahf
push
loope
rorb
pop
lret
or
aas
jg
add
sti
sbbb
xchg
aam
insb
xchg
inc
cmp
test
js
fbld
fwait
popa
iret
xor
cli
jmp
xchg
jecxz
fdivs
mov
and
out
sbb
sub
push
mov
outsb
pop
xchg
lds
jno
iret
movsb
scas
mov
mov
cmp
lret
cmp
rcl
cmpsb
jae
jmp
cltd
stos
repz
loop
movl
shrb
jecxz
add
sbb
mov
xor
mov
jge
hlt
lock
shll
subl
dec
and
mov
cld
icebp
inc
ds
aas
add
dec
push
lcall
aam
repnz
pop
daa
pop
cmp
push
shlb
pop
scas
or
pop
popf
fsubr
pop
sbb
push
nop
mov
push
outsl
bnd
incb
insl
test
dec
and
popf
std
or
nop
pop
adc
sub
xlat
jmp
adc
cmp
xchg
shlb
add
mov
mov
push
lahf
xor
xchg
aad
cmp
addr16
mov
enter
nop
xlat
sub
and
dec
xor
or
xor
repnz
sub
dec
mov
add
adc
push
mov
arpl
xchg
xchg
jl
pop
xor
aam
leave
outsb
lret
sbb
stos
fadds
push
add
add
xchg
add
fbstp
sbb
xor
jp
std
call
adc
aam
jnp
pop
mov
lea
dec
aad
push
aas
xchg
js
jg
fisubs
inc
mov
and
or
les
cltd
mov
fldl2t
mov
inc
rclb
jae
add
stc
ljmp
cmp
shlb
cltd
out
cmp
mov
sbb
mov
repz
mov
mov
sbb
sub
pushf
push
aad
out
jne
popa
xchg
mov
cmpsl
or
test
sub
aam
jb
dec
adc
and
adc
and
scas
pop
test
push
jmp
cmc
shl
cli
push
sbb
cmp
mov
add
aas
jo
sub
fdivs
nop
pop
mov
aam
xchg
shrb
stos
add
pushf
cmp
jp
icebp
adc
daa
inc
pop
int3
adc
out
push
or
push
mov
sbb
ss
and
cmp
mov
push
dec
dec
lcall
sub
test
fmuls
cmp
jnp
movsl
lahf
mov
mov
pop
mov
jecxz
lret
iret
and
loopne
scas
data16
fwait
sbb
pop
repnz
jge
pop
in
movsl
fsubr
loope
jo
arpl
or
cld
dec
rcl
xchg
test
ficomps
sbb
ja
hlt
aad
test
jge
roll
jle
stos
lods
shll
sub
pop
lcall
repnz
mov
mov
jo
inc
mov
inc
sub
pop
arpl
adc
orl
aam
push
xchg
mov
out
sub
ret
or
fs
ja
mov
loopne
adc
jl
std
jge
jp
cld
sub
jno
or
xor
and
bound
mov
repz
and
sti
jbe
or
mov
icebp
xlat
mov
inc
jecxz
xchg
sub
mov
lock
or
stos
mov
cmp
sub
push
or
in
jae
int3
aam
daa
enter
popa
fstps
mov
cwtl
mov
push
faddl
lcall
arpl
push
das
mov
add
sbb
sub
xchg
ret
jg
xchg
sub
test
lea
xor
out
mov
add
xlat
rcrb
inc
pop
push
lods
inc
cmpsb
add
mov
cmp
mov
loop
pop
insl
jns
pop
loopne
aas
add
or
cld
insb
sub
addb
mov
or
adc
jmp
in
and
testb
dec
dec
xchg
stc
or
repnz
dec
and
mov
jg
jp
sbb
xor
lcall
sub
test
mov
push
arpl
jo
or
mov
inc
pop
mov
ds
ss
stc
rorb
add
test
roll
scas
nop
mov
shl
inc
inc
cwtl
nop
and
test
sub
mov
inc
bound
bnd
inc
adc
jo
data16
pushf
adcl
data16
adc
fcompl
push
jg
pop
jns
shlb
addr16
into
inc
or
mov
cmp
cmovg
jo
iret
lds
shll
dec
add
mov
add
xor
sub
mov
ss
jno
pop
lods
test
or
scas
loopne
out
out
mov
cmp
cmpsb
cld
in
push
xor
into
dec
int3
adc
mov
pop
ljmp
in
pusha
je
inc
add
push
mov
cltd
adc
xor
in
pop
movsb
add
jmp
adc
das
xor
adc
add
ljmp
insb
nop
fiadds
outsl
fcomps
inc
mov
in
or
pusha
sub
push
sbb
push
lock
dec
jae
int3
sbbl
mov
fadd
fwait
pop
dec
mov
sti
sbb
pop
popf
pop
jae
daa
jecxz
lret
sarb
stos
sbb
xchg
xor
imul
cmpsb
adc
cld
sbb
adc
in
or
xchg
cld
lods
mov
lods
pop
mov
push
in
lahf
stc
jno
add
lcall
lret
dec
jns
pop
cli
adc
nop
jg
inc
fiadds
insb
movsb
xchg
imul
sub
and
daa
cltd
iret
mov
mov
or
int3
lea
push
test
adc
and
arpl
cltd
add
movsb
pop
stos
lret
ret
cli
xchg
push
aad
inc
mov
in
and
sub
pop
pop
scas
pusha
sub
pusha
jp
aad
push
aam
xchg
ja
xchg
and
hlt
and
aad
cmpsb
mov
mov
mov
fidivs
fs
fld
inc
seta
fidivl
scas
fcomps
jg
imul
mov
xchg
xchg
xor
icebp
push
cmp
adc
mov
js
orb
and
into
push
lea
bound
cld
aas
lods
mov
dec
sahf
sbb
cld
iret
mov
mov
imul
lock
sbb
push
xlat
lahf
inc
in
cld
dec
cmp
lret
adc
inc
rcr
jl
outsb
pop
cmp
inc
in
push
imul
mov
fwait
cmpsb
mov
test
testl
pop
inc
adc
mov
div
jecxz
push
outsl
dec
push
xchg
int3
or
xor
cmp
pop
pop
sub
pop
add
ret
xor
jbe
push
idivb
push
loopne
push
fistpll
dec
popf
push
stc
cmp
inc
pop
sub
mov
sub
aas
push
aad
xchg
jmp
addr16
xchg
sub
jp
cmp
push
and
nop
jge
ss
fstl
dec
xchg
in
cmp
out
insl
ficoml
or
bnd
xor
scas
std
mov
sbb
out
mov
cmp
outsb
mov
outsb
rcll
jl
in
inc
mov
jbe
hlt
mov
loopne
test
jns
pop
pop
mov
cltd
adc
call
fcompl
mov
pop
int3
adc
adc
or
ret
imul
push
rcll
inc
xchg
mov
insl
dec
divl
iret
dec
sub
jle
add
test
xchg
or
ret
jecxz
fmuls
push
jmp
pop
sti
cmpsb
fwait
popa
jae
pop
repnz
sub
xchg
stos
clc
clc
loopne
add
mov
push
mov
aad
xorb
int3
sbb
arpl
xor
repnz
out
cmc
pop
mov
mov
sbb
out
je
cld
aaa
repnz
sub
mov
push
inc
and
out
ret
push
sbb
xor
cltd
push
and
out
xor
jbe
icebp
mov
sub
jnp
xchg
lock
stos
fwait
in
in
inc
cltd
scas
inc
movsb
call
lds
xchg
repz
jle
notb
bound
fwait
inc
sub
addr16
mov
dec
push
pop
sub
iret
int3
inc
mov
mov
xchg
pop
iret
cmp
testb
loope
cmp
jae
push
cmp
shl
adc
test
sbb
iret
jmp
cmp
pop
orl
clc
sub
jl
mov
int
sbb
cmp
push
xor
stos
dec
sahf
repz
rcll
aam
jns
jae
add
or
xor
mov
dec
xor
lahf
les
add
adcb
push
les
pop
inc
imul
rorl
jo
leave
mov
jp
inc
cmp
xor
rorb
test
xorl
lcall
iret
fistps
cmp
inc
jne
enter
in
bound
shl
popf
mov
imul
fsubrl
test
sub
jg
xchg
bound
out
add
cmp
jno
stos
xchg
addl
adc
dec
and
mov
inc
outsb
mov
pop
jp
daa
jl
push
or
in
dec
or
adc
adc
sbbb
fiaddl
xchg
leave
pop
mov
je
mov
imul
rorb
mov
jnp
add
cmp
stos
xchg
jns
andb
add
cmpsb
pop
in
test
or
cmp
cmc
xor
jo
aad
cli
idivb
cmp
ss
add
lods
xchg
dec
lea
push
arpl
lea
stos
push
adc
jo
push
or
lcall
jp
mov
scas
xchg
loop
dec
lret
repnz
imul
adc
arpl
aaa
pop
std
pop
push
insb
stos
jno
sbbl
pop
xchg
dec
insl
mov
adc
or
test
scas
test
push
sbb
cwtl
inc
or
pop
ret
stos
adc
add
popa
lods
pop
out
divl
movsb
in
jl
inc
mov
cmp
dec
xchg
inc
adc
mov
jg
sarb
xor
sbb
xchg
inc
xchg
add
js
or
add
outsl
adc
adc
scas
daa
mov
movb
push
ss
xchg
andb
cli
xor
xchg
pop
lock
data16
popa
pop
cld
lea
aad
sbb
jmp
lret
fwait
mov
cltd
dec
sub
dec
loopne
dec
call
cli
mov
enter
add
push
pop
cmp
dec
push
aaa
lock
rcr
mov
cwtl
sbb
movsb
lret
xlat
fadds
mov
in
inc
ss
xor
pop
lods
inc
pop
mov
xchg
sub
push
jg
adcl
mov
js
add
stos
shrl
sbb
or
or
movsb
pusha
sbb
xchg
jbe
lods
push
push
dec
inc
cwtl
and
xor
add
inc
addr16
and
or
in
mov
xchg
xchg
sahf
shrb
jecxz
fistl
sub
pop
jb
or
shl
loop
movsl
mov
or
ret
xor
icebp
dec
test
adc
pop
jae
pusha
loop
bsr
sbb
mov
mov
out
add
insb
and
cs
inc
add
dec
and
clc
insl
test
inc
xor
push
cmc
jns
push
push
mov
shlb
test
je
ja
clc
loop,pt
inc
mov
or
icebp
arpl
test
add
nop
out
mov
insl
add
pop
lcall
mov
int3
insb
mov
push
les
mov
pop
out
mov
mov
std
out
adc
xchg
mov
xchg
pop
cmpsb
outsb
mov
and
mov
idiv
xor
lcall
push
jnp
addr16
adc
pop
jne
fnstcw
add
dec
pop
xchg
mov
js
mov
sub
test
and
f2xm1
xor
testl
les
cmp
in
es
pop
or
pushf
shl
xor
pusha
adc
or
cmpb
lret
mov
cld
nop
dec
add
pop
andl
pop
or
lret
mov
negl
jno
jmp
or
sbb
daa
xchg
sbb
testl
xchg
pop
sub
rclb
cmc
lret
jmp
lea
jl
xchg
mov
pop
adc
aaa
push
cli
lock
enter
pop
xchg
lret
xchg
pop
push
addl
insb
ret
xchg
ret
and
pop
mov
iret
inc
add
sarb
fcomi
mov
hlt
dec
add
stos
jl
test
bound
stc
repnz
jno
cmp
pop
jge
pop
andw
subb
xchg
dec
scas
gs
lods
aad
in
mov
adc
mov
out
sbbb
stos
dec
popa
mov
bound
inc
inc
es
dec
incl
fildll
cli
inc
sbb
sub
cmp
insl
imul
mov
mov
and
cld
jle
inc
popf
flds
movl
dec
dec
gs
pusha
mov
in
pop
mov
loopne
imul
loopne
stos
jg
push
cmp
fcom
inc
lea
pushf
subl
int
mov
sbb
je
inc
lret
or
pushf
push
test
shrb
dec
or
outsl
test
xor
outsb
ljmp
mov
pop
push
cmp
stos
xor
ficoms
pop
cmp
aam
js
das
pavgb
lcall
test
cmp
mov
mov
jmp
fistpl
pop
add
out
lret
ret
xlat
xchg
ret
movsl
jl
push
pop
ss
out
inc
mov
push
cli
lret
scas
inc
dec
popf
lahf
pop
xlat
sti
jle
mov
adc
inc
iret
loopne
call
cmp
dec
sti
push
pmaxub
ljmp
dec
jp
mov
or
xchg
mov
cmp
js
fisttpll
ss
rcrb
inc
lock
rorl
cmc
das
faddp
xlat
cltd
or
push
or
notl
pop
jno
in
iret
cmc
mov
cmp
or
subl
mov
sub
jae
loopne
inc
and
pop
sbb
je
inc
sahf
dec
jge
jle
jp
into
dec
jo
or
push
lods
sub
hlt
int
das
push
xchg
clc
clc
inc
outsl
jmp
add
rolb
fs
inc
cwtl
jge
insb
pop
mov
and
pop
fcmovu
sbb
jge
sub
lods
call
xor
stc
pushf
lea
fwait
push
xchg
test
mov
mov
mov
push
nop
in
mov
sbb
adc
or
add
jp
fwait
shlb
inc
push
xchg
jnp
pop
mov
lds
orl
arpl
mov
xchg
in
add
mov
add
leave
xor
lcall
jbe
pop
subb
daa
loope
fdecstp
testb
xchg
and
sbb
mov
and
test
fists
add
or
icebp
sbb
adc
or
sub
mov
shlb
dec
fildll
xor
push
sbb
and
ljmp
or
fs
pop
das
daa
repnz
jnp
cmp
pop
cmp
imul
test
pop
movsl
out
ss
adc
ret
xor
add
ret
sub
pop
cmp
inc
mov
fidivrs
in
mov
jno
ret
mov
cmp
rorl
enter
dec
mov
shrl
mov
push
rorl
sub
fwait
add
xor
and
xchg
lea
scas
roll
out
lods
or
jle
jae
push
dec
pop
jmp
pop
pop
mov
cmp
lods
cmp
mov
xchg
inc
push
loop
mov
pop
mov
ret
add
sub
push
sbb
push
scas
mov
inc
mov
pop
add
push
out
scas
inc
popf
mov
inc
inc
js
bound
loopne
test
testb
xchg
add
test
insb
pop
adc
int
stc
cmp
cmp
jp
xchg
dec
fnstenv
shrl
ljmp
cmc
adc
xchg
push
lods
inc
xchg
xchg
pop
dec
add
imul
pop
loopne
cmp
push
std
cltd
emms
loope
lret
das
stos
inc
add
lock
int3
mov
inc
lahf
orb
ret
xor
das
add
mov
loope
push
jg
mov
mov
xchg
push
mov
push
dec
cmp
and
aas
stos
adc
aas
out
rcrl
outsl
mov
jmp
xchg
pop
scas
xchg
push
sbb
mov
enter
out
xchg
dec
pop
outsl
jp
mov
icebp
xor
imul
roll
jmp
loop
pop
cmp
cmp
sti
enter
jmp
pop
loope
mov
rcll
push
inc
pop
or
push
test
arpl
adc
js
cltd
iret
jo
cs
add
arpl
mov
repz
repz
jne
arpl
cs
je
jmp
and
pop
push
aaa
test
mov
jne
mov
mov
inc
icebp
jg
mov
fsubl
push
ds
jp
inc
mov
jmp
dec
pop
sub
lock
jbe
push
xchg
shll
inc
lret
add
jae
addr16
mov
andb
mov
subb
cmp
xchg
inc
int
ficoms
movsl
and
and
push
int3
dec
push
jno
push
push
xor
mov
cli
adc
pusha
push
inc
pop
push
inc
pop
jbe
or
adc
mov
ficomps
fisttps
mov
push
pop
mov
mov
xchg
push
mov
fistps
test
mov
sub
xchg
xor
jbe
leave
jbe
xor
insb
into
jl
out
scas
loope
repnz
sbb
mov
cmpsb
inc
sbb
mov
out
xor
ja
push
xor
scas
jne
testb
push
stos
int
jl
mov
and
pop
lea
shlb
repz
mov
xchg
sub
fcoms
mov
mov
push
dec
push
in
js
mov
mov
push
jmp
or
aam
ljmp
jae
dec
fdivrp
adc
sbb
cmpsl
sbb
out
std
dec
pop
jmp
enter
mov
out
cmp
lods
jle
cmp
adc
stos
sbb
jo
mov
mov
and
adc
and
ret
xor
test
aam
add
lock
notl
jl
clc
jle
mov
sub
cld
dec
inc
mov
pushl
jecxz
push
jnp
add
repnz
pop
push
aam
add
and
pop
ds
dec
pusha
int
inc
pop
jb
sub
les
fldl
sbb
push
adc
incb
movsb
testb
mov
repnz
daa
push
cmp
dec
push
shll
pop
repz
mov
addl
sbb
jp
inc
fcompl
xchg
cmpsb
xor
adc
mulb
hlt
add
pop
lock
pop
test
mov
repz
hlt
jp
shr
mov
out
aad
dec
add
inc
int3
aas
add
repz
pop
jae
mov
adc
mov
add
xchg
test
inc
in
adc
int
and
ds
mov
pop
sbb
mov
sub
add
push
jle
sahf
jns
stos
sbb
inc
call
ljmp
and
ret
addl
xor
scas
iret
add
push
cmp
sbb
inc
xchg
cli
loope
add
out
push
jno
scas
or
adc
roll
mov
adc
mov
imul
decb
cmc
mov
aad
out
push
cmc
fsubrl
enter
and
aam
out
xor
jecxz
jecxz
xor
popl
push
je
push
enter
fstl
bound
adc
inc
into
push
jno
inc
xchg
jbe
push
fisttpll
mov
mov
mov
rclb
ret
xor
sub
push
pusha
outsb
adc
push
dec
cwtl
cmp
inc
add
pop
mov
out
cld
xor
jo
sub
shlb
loope
xor
inc
sarb
std
cmp
lods
into
dec
iret
add
aam
insl
and
inc
pop
push
movsb
mov
aad
mov
bound
cmp
sbb
stos
inc
ja
and
sbb
insl
ja
lret
push
pop
rclb
das
mov
dec
and
cmp
jns
pop
inc
xchg
push
gs
mov
or
sbb
jl
adc
fisubrs
movb
pop
xchg
jmp
cmp
rolb
mov
shll
scas
mov
inc
xchg
mov
arpl
pop
shlb
mov
sbbl
push
xchg
jae
sub
ficomps
cmpsl
cmp
imul
imul
stos
rcrb
bound
push
sub
popa
jns
in
or
sahf
icebp
and
cmp
cmp
jns
scas
add
mov
sub
mov
loop
jmp
inc
test
stc
pop
inc
loopne
cltd
and
xchg
push
mov
in
push
mov
and
out
mov
inc
mov
mov
push
out
dec
cmp
and
jnp
mov
stos
add
sbb
fiadds
mov
sti
arpl
icebp
pop
stos
dec
les
pusha
lcall
cmc
lea
sar
mov
in
xor
jp
inc
out
shrb
mov
aaa
inc
cmc
pop
ja
arpl
enter
scas
scas
add
push
push
mov
sbb
jnp
mov
cmp
push
inc
out
mov
and
ret
mov
les
or
out
sub
pop
sbb
out
dec
jp
int3
cld
cmpsb
scas
imul
ret
repnz
clc
fdivrl
nop
jecxz
fs
push
imul
hlt
push
addr16
or
xlat
cld
aas
adc
or
add
out
add
ljmp
ror
add
jl
dec
or
in
pop
xchg
das
stos
inc
mov
clc
unpcklps
cmp
xor
out
mov
jae
mov
mov
das
cmp
scas
inc
adc
jnp
mov
push
or
rorl
push
jo
inc
jl
adc
mov
push
lcall
int
rolb
popf
sub
scas
mov
das
mov
adc
push
pushf
mov
pop
ret
ds
pop
inc
add
icebp
in
cwtl
xor
movsl
and
sti
mov
xchg
adc
dec
int
pop
in
pop
xchg
fildll
or
cmpsb
sub
add
incb
loopne
rcll
push
cmpsl
dec
pop
test
mov
or
jle
or
fwait
mov
xchg
lods
shll
xchg
pop
dec
ret
cmpsb
mov
xor
jbe
inc
adcb
std
adc
mov
add
mov
insb
pop
imul
and
iret
add
lcall
aad
cld
push
add
sbb
mov
inc
sbb
call
cltd
or
incl
pop
or
mull
mov
mov
sub
or
popf
pop
and
pop
pop
iret
jae
mov
iret
aas
ret
dec
xor
lahf
hlt
jne
sbb
push
xor
jne
jmp
fsubr
mov
ss
sbb
and
in
mov
gs
out
js
push
cmpsl
mov
rcl
fwait
sbb
pop
sahf
pop
or
cwtl
adc
jo
fs
sti
cli
ss
mov
dec
addb
in
pop
mov
ficompl
mov
xor
aam
fists
ret
mov
out
jns
rclb
push
adc
xchg
dec
sub
sub
fldcw
xor
out
fdivp
fstps
cmc
adc
dec
sub
aaa
dec
cmp
movsl
loop
xchg
rol
or
aad
jge
lahf
mov
and
out
inc
fisttps
xchg
lea
pop
jo
push
jnp
and
sub
jmp
sahf
fbld
inc
xchg
adc
sahf
mov
xor
sbb
lock
jae
loop
mov
mov
xorl
pop
das
jne
adc
outsb
and
in
sub
adc
push
mov
popl
daa
call
mov
inc
adc
dec
or
mov
xchg
hlt
or
ret
cmp
inc
nop
push
frstor
addb
int
movsb
inc
mov
dec
or
test
jns
mov
jns
mov
out
faddl
xchg
bound
add
fstl
out
sbbl
xor
cmp
inc
pop
and
mov
add
sub
scas
adc
cld
test
dec
stos
pop
push
and
push
sahf
iret
push
lret
clc
mov
es
out
in
dec
sbb
dec
orb
mov
push
push
dec
test
xor
fadds
leave
and
mov
jge
sub
stos
ja
add
stos
xchg
adc
ss
out
xchg
xor
sbb
xchg
ljmp
call
and
lcall
rcrb
mov
sub
stos
insb
fdivrl
in
gs
mov
inc
add
rcll
and
sbb
jno
ret
mov
dec
stos
pop
xor
jo
nop
icebp
jne
aam
inc
stc
out
sbb
and
aas
mov
cmp
dec
mov
lods
cmpsl
scas
test
fimull
mov
popa
movsl
pop
dec
add
and
fidivl
lods
jae
lods
je
jecxz
loope
insb
mov
lret
xor
adc
inc
inc
mov
call
mov
jo
faddp
jge
add
push
add
jp
pop
xchg
mov
cs
adcl
das
jb
lcall
arpl
inc
or
test
stos
dec
stc
push
fs
pop
sub
or
inc
aam
or
inc
dec
cmp
jecxz
mov
adc
ds
add
jp
lret
scas
mov
mov
jle
push
push
fistl
test
in
jmp
cli
repz
cli
out
dec
sub
mov
repnz
rolb
pop
adc
cs
mov
mov
cwtl
lods
loop
fisttpll
roll
adc
jnp
fsub
push
xchg
mov
lods
adc
aad
mov
push
insb
lea
mov
jecxz
add
in
xor
push
add
stos
nop
mov
cmp
xor
bound
loope
das
sub
fcoml
or
rcr
movsl
shll
ds
ss
mov
jl
pop
push
rorl
icebp
sti
cmp
mov
and
xor
mov
cld
dec
movsl
mov
shlb
sbb
incb
sub
sub
int3
sbb
sub
call
cmp
or
xor
andl
xchg
lcall
das
loop
adc
mov
cmp
mov
das
jae
and
cmp
xlat
pop
xlat
not
adc
dec
or
lds
cltd
jns
cld
inc
mov
repnz
add
imul
lret
xlat
pop
test
loope
xlat
js
jecxz
mov
jae
push
out
aam
enter
and
mov
mov
add
jge
aad
or
sbb
or
out
add
pop
mov
rclb
xchg
mov
inc
sarb
pop
push
lods
and
scas
loopne
in
loope
fmuls
lock
rcr
mov
and
out
dec
mov
jecxz
in
out
stos
stos
sarb
mov
clc
mov
aas
jns
loop
jp
mov
cmpsb
or
sbb
scas
or
adc
dec
and
sub
test
mov
sbb
mov
xchg
lods
popa
xor
insb
mov
mov
pop
daa
push
pusha
push
add
pop
icebp
arpl
dec
aad
test
daa
or
in
jecxz
mov
adcb
cmpl
sbb
xor
mov
mov
mov
mov
sbb
mov
dec
pop
add
pop
cmp
bound
js
sbb
sub
push
xchg
or
pushf
daa
adc
movsl
mov
bound
adc
push
imulb
push
test
xchg
call
xchg
mov
lahf
sbbb
sub
insb
sbb
clc
mov
or
lcall
mov
or
scas
bound
ret
mov
adc
mov
inc
xor
add
test
or
popf
out
inc
and
fwait
mov
cltd
mov
mov
fwait
pop
pop
out
sbb
scas
push
fiadds
sbb
mov
jnp
loope
inc
sahf
fucomp
sub
dec
mov
sub
pop
scas
xor
ret
cmc
es
outsb
mov
mov
dec
sbb
frstor
test
add
lcall
sub
ror
xchg
inc
adc
mov
test
repnz
fs
int3
ror
push
test
sahf
aaa
mov
cmp
lods
or
jae
imul
mov
add
push
sub
lahf
sub
nop
cmp
mov
ljmp
test
xchg
add
sub
push
cs
daa
mov
pop
dec
xchg
rcr
or
adc
dec
sub
mov
push
nop
mov
or
ret
add
push
jle
adc
dec
ja
fsubrs
outsl
dec
sbbb
mov
lea
cmp
out
mov
insb
adc
stos
push
lods
push
repz
das
mov
or
xor
inc
frstor
in
add
mov
and
push
imul
xor
sub
mov
cmp
inc
out
fbld
in
mov
in
push
hlt
sub
mov
in
jo
cli
adc
dec
cli
jb
mov
xchg
bound
cli
imul
mov
xlat
rcrb
ja
cmc
xchg
mov
in
mov
jns
and
inc
dec
push
mov
je
xor
lock
push
pop
inc
push
push
negb
fldl
push
push
js
loop
dec
adc
and
or
lahf
ret
test
cmp
sar
arpl
adc
add
cmp
repnz
cmpsl
sbb
fs
insl
in
sahf
pop
push
sahf
inc
xchg
mov
shll
mov
dec
lahf
push
xchg
out
js
jle
inc
mov
pop
imul
jg
cmp
lock
repnz
inc
mov
outsl
push
imul
adc
push
cmpsl
sub
mov
loop
out
and
mov
movl
leave
insb
fdivrl
ss
sbb
or
mov
scas
xor
push
jmp
push
aam
dec
addr16
jbe
test
call
jae
sahf
loope
dec
add
sbb
inc
sub
add
flds
xor
xor
and
fucomi
push
pop
pop
pop
push
lcall
sbb
js
or
push
xchg
push
mov
mov
mov
bound
fsts
int3
xchg
mov
mov
setae
adc
pop
xchg
int3
dec
mov
cmc
push
add
push
jns
fnstenv
mov
jl
xchg
fsts
pop
in
inc
mov
pop
pop
stos
subl
xchg
mov
push
insb
jge
insb
push
pop
lret
xor
scas
fwait
dec
cmp
icebp
xor
jmp
pop
dec
leave
adc
decl
pop
cmpb
sbb
mov
mov
xor
pop
notl
pusha
mov
jmp
repz
lcall
mov
push
inc
ret
bound
or
and
ljmp
rorl
sub
jg
xor
popf
pop
popa
push
pusha
dec
jl
pop
jl
mov
inc
sbb
inc
jg
out
inc
stos
sahf
testl
rep
sbb
push
outsl
cmp
xor
mov
negl
xchg
ficoml
js
cmpsl
or
cltd
jno,pn
pushf
leave
jne
dec
jno
add
das
pushf
sub
push
in
mov
push
scas
aas
and
pop
push
lahf
cs
iret
xchg
arpl
test
leave
cmpl
insb
jecxz
jns
dec
mov
hlt
push
jb
jbe
xorl
mov
popa
sbb
pop
add
bound
stos
inc
or
push
enter
pop
pop
xor
add
movsl
inc
inc
test
pop
jno
mov
ja
cmpsl
lock
cmpsb
sub
xor
fwait
enter
inc
arpl
daa
das
fistl
jmp
or
out
xor
pop
lods
std
mov
adc
inc
insl
popf
jbe
mov
lods
inc
cltd
mov
pop
out
das
cli
lret
mov
xor
xlat
outsl
shlb
insl
inc
lock
mov
mov
outsl
fnstenv
shlb
ja
jnp
xor
subb
mov
sbb
add
popf
inc
xchg
mov
fidivs
xchg
cmpl
dec
mov
cs
test
xor
outsb
push
mov
cmp
xchg
xor
das
jp
leave
in
stc
ljmp
les
sub
popf
cmp
xchg
push
test
dec
nop
push
mov
mov
popl
and
imul
inc
mov
mov
in
in
or
pushf
test
mov
sarl
mov
aad
push
xor
jl
cmp
lods
fildll
mov
and
aad
scas
push
imul
jg
data16
jns
inc
movsb
imulb
call
cs
mov
imul
jmp
out
cltd
mov
mov
dec
jmp
andl
outsl
call
inc
push
lret
cmp
jecxz
push
jge
les
xchg
js
inc
cltd
jp
out
sbb
loopne
leave
or
mov
arpl
mov
add
je
adc
mov
mov
pop
sbb
scas
fisubl
lea
adc
not
cltd
mov
push
in
nop
pop
add
fists
fidivrl
scas
and
fcomip
gs
xchg
nop
jae
fldlg2
adc
and
mov
inc
fistl
push
imul
cli
jno
xchg
xchg
aam
adc
int
lods
jb
sahf
mov
icebp
pop
sub
adc
test
add
mov
test
and
pop
pushf
inc
and
repz
rclb
aas
movsb
cmp
test
clc
or
mov
enter
adc
add
out
in
lock
js
in
testb
insl
mov
mov
pop
xor
ss
call
jno
pop
and
nop
or
or
loopne
jbe
add
cmp
sub
add
mov
inc
cmp
mov
in
mov
and
pop
leave
jo
jo
cs
add
pusha
mov
lock
add
jno
xchg
mull
movsb
inc
stos
ss
adc
xor
into
mov
leave
clc
aam
cmp
jl
gs
jle
scas
jmp
lret
popa
mov
rcrl
stos
stc
sbbl
stc
dec
lahf
addr16
jnp
movsb
mov
lahf
in
cmp
lods
add
loope
pop
jae
je
ljmp
and
je
movl
lds
mov
cmp
dec
lods
jl
adc
testl
icebp
mov
idivl
inc
imul
hlt
shll
aad
int
cwtl
inc
adc
sub
xchg
push
outsb
cli
jno
pop
dec
ds
adc
mov
insb
xchg
pop
or
push
aad
test
in
pop
mov
test
mov
sbb
mov
fnstsw
rorb
push
shrl
add
call
imul
xchg
sbb
mov
mov
sub
xchg
in
insl
add
pop
in
dec
aam
outsl
or
loopne
in
mov
pushf
inc
xchg
pop
push
popa
sahf
inc
shll
push
push
pushw
and
xor
bound
xchg
mov
or
push
jbe
mov
les
insl
int3
pop
subl
or
sub
mov
mov
fcmovnu
stc
push
mov
pop
jg
pop
test
sbb
cmpsl
push
inc
subb
pop
aam
mov
jmp
in
mov
sbb
or
out
mov
xchg
fdivl
test
mov
jae
pusha
sub
cli
push
inc
lahf
repz
scas
mov
movsb
jb
ja
arpl
rorl
out
cld
xlat
mov
push
mov
xlat
sub
pop
cltd
or
cmp
jg
arpl
mov
adc
js
mov
mov
repz
test
or
mov
sbb
mov
xchg
mov
add
roll
lds
inc
sbb
fiaddl
xor
popf
out
pop
sbb
iret
ret
add
fistps
and
fdivs
sub
stos
xchg
rolb
testb
jo
out
inc
aaa
mov
inc
dec
cmp
bound
dec
loope
mov
push
cmp
loopne
mov
xor
mov
adc
nop
sbb
sbb
fadds
test
jno
and
cmc
sbb
jne
push
std
rcrb
stos
and
addr16
mov
ss
cmp
stos
xlat
test
ret
popa
arpl
inc
jb
cmpsl
bound
addb
push
movsl
mov
insl
push
clc
dec
jno
je
add
add
dec
mov
mov
lcall
push
jmp
mov
mov
cmp
push
adc
dec
shlb
push
lds
lea
dec
out
sub
jns
xlat
icebp
pusha
sbb
push
es
or
mov
xchg
jl
jle
popf
lret
mov
sub
mov
fs
pop
imul
or
push
push
int3
sbb
dec
pop
pop
jle
lcall
lret
aam
mov
push
dec
mov
mov
movb
sub
mov
mov
jbe
call
mov
sbb
lret
dec
push
mov
mov
inc
jmp
push
fwait
clc
and
mov
popf
inc
into
mov
lea
aaa
push
or
or
inc
and
push
ljmp
xchg
pop
lret
add
mov
fcomps
out
mov
mov
fcmovne
leave
fsub
out
xchg
out
fists
sti
cmc
fildl
cmpsb
mov
orl
out
aam
sub
sbb
add
inc
repnz
icebp
jne
adc
push
pop
sbb
mov
nop
in
inc
ret
lds
std
push
pop
mov
inc
or
inc
or
mov
mov
push
mov
std
push
aam
adc
cmp
xchg
jbe
mov
shlb
pop
enter
gs
inc
scas
fidivs
div
int3
fcomip
xor
mov
jo
ret
jns
sub
xor
rcrl
hlt
sbb
int
rolb
out
mov
int3
dec
pop
shll
cmp
mov
cmc
and
add
ds
jnp
in
jge
xor
lret
fldenv
add
movsl
push
in
and
sub
stc
aad
add
inc
call
in
mov
inc
jne
rcl
sub
loop
bound
cmc
cmc
push
cmp
push
pop
sbb
push
incb
sub
fsubrp
pop
add
test
xor
mov
lds
mov
or
cmp
cmp
aaa
dec
inc
xchg
sub
add
lret
mull
adc
mov
jl
fcoml
test
push
mov
andl
pop
addr16
and
popf
jp
pop
outsb
push
cmpsb
mov
mov
jp
addl
movsb
mov
into
std
lret
stos
pop
xchg
pop
inc
repnz
mov
cmp
fs
sbbl
fimuls
sub
push
mov
or
ret
repnz
aam
xor
popf
push
sub
xchg
xor
loopne
ret
jb
fstpl
or
jno
arpl
int3
popa
jns
in
push
insl
push
adc
cmp
mov
repnz
pop
sbb
call
andl
shll
enter
xchg
jecxz
outsb
fbld
lret
or
cld
icebp
lahf
adc
cmpb
inc
sbb
sub
push
ja
mov
leave
jp
xchg
leave
mov
push
stos
es
cli
push
inc
out
data16
test
rclb
xchg
fld1
addr16
out
adc
mov
ret
stc
or
sahf
push
pusha
dec
push
lea
xchg
je
fstpt
xchg
aam
jb
jb
cmpsb
fdivl
sbb
cltd
mov
push
sub
mov
cmp
jnp
mov
xchg
jl
xchg
outsb
movups
mov
out
cmpsb
popf
test
pop
cmp
lahf
fwait
xor
lea
jbe
cltd
pusha
faddl
pusha
rcrb
push
rcr
fdivs
add
daa
scas
xor
movsb
or
push
add
add
sub
mov
mov
out
jecxz
in
cmpb
pop
push
jae
lahf
pop
je
jle
xchg
mov
mov
daa
movsb
cmpsl
xchg
movsb
mov
gs
inc
inc
inc
sub
fcomps
push
out
dec
aaa
jge
cmp
imul
ja
in
rcl
arpl
mov
cmp
jb
pop
sarl
stos
mulb
loope
mov
xchg
push
insb
or
xor
add
fdiv
xlat
outsb
dec
aam
and
lods
jle
inc
mov
jp
mov
jbe
repnz
fidivrl
rorl
bound
push
push
pop
inc
pop
arpl
mov
jb
sar
inc
mov
or
sbb
mov
mov
out
cmp
mov
imul
jb
movsl
ljmp
mov
pop
repnz
clc
inc
icebp
push
xor
mov
fildll
mov
test
rep
scas
data16
roll
nop
out
push
jl
nopl
andb
movsb
hlt
inc
fisttps
mov
sub
push
cmpsb
jns
cmp
in
jmp
pushl
rcrl
dec
lods
sub
adc
push
dec
icebp
jns
pop
insl
cmp
ret
hlt
out
xor
aam
add
fimuls
and
imul
sub
js
movaps
dec
jo
cltd
lcall
mov
lcall
scas
or
es
jnp
movsl
test
cmc
scas
pusha
xchg
ja
jl
sbb
sbb
daa
test
call
ja
push
xor
inc
or
or
nop
aam
jns
negl
fcmovbe
mov
push
sbb
dec
cmc
rorb
push
mov
mov
or
push
dec
aam
enter
mov
dec
in
neg
lock
add
jecxz
ja
jle
roll
insb
mov
lret
fs
movsl
nop
aam
pop
rol
outsl
cmpsb
push
arpl
mov
ret
sbb
pop
jns
xchg
dec
ret
jle
pop
movsb
test
insb
dec
cmp
divl
shrl
aas
stos
out
jmp
dec
pop
sub
mov
test
sub
cli
out
mov
jns
push
cli
out
pop
push
push
outsl
outsb
cs
jbe
xor
push
cmp
fcompl
xchg
dec
inc
in
std
pop
out
in
ret
jb
xchg
xlat
inc
movsl
add
cmp
xchg
sbb
cmp
fisubrs
movsbl
daa
mov
cs
test
loop
xchg
or
pop
jbe
js
es
xchg
cmp
mov
sub
dec
pushf
push
fstpl
adc
inc
add
push
insb
lret
dec
adc
mov
pop
xchg
test
mov
and
popa
pop
lcall
mov
or
sbb
jno
xchg
and
add
inc
xchg
movsl
sbb
push
out
cmp
test
std
sbb
mov
sbb
adc
out
add
mov
xchg
cld
sub
xchg
sub
out
fidivs
movsl
pop
or
testl
out
rcrb
jb
inc
lret
stos
aas
jne
test
outsb
shlb
jmp
mov
cltd
push
sti
test
xor
out
adc
cmpsb
subb
and
push
fmull
shl
jae
mov
and
shrl
push
repz
cwtl
pop
faddl
inc
or
and
cmp
xlat
or
mov
push
arpl
xor
sti
adc
cmovno
hlt
dec
pop
std
aad
inc
dec
cmp
mov
mov
stos
and
and
adc
jle
cmp
mov
mov
xlat
mov
mov
cmpsl
jno
and
cmp
aad
sbb
mov
pop
dec
ret
and
dec
jle
insl
dec
dec
rclb
imul
mov
pop
mov
pushf
push
pavgb
mov
or
pop
popa
and
negb
ljmp
pop
push
cmpsb
inc
ja
hlt
mov
pop
sub
dec
mov
in
repnz
pop
cmp
ljmp
cmpsl
jp
imul
stos
cmpsb
mov
inc
jne
rcrl
into
inc
sub
cmp
aas
xchg
arpl
mov
aad
add
mov
sbb
scas
movsb
test
xchg
bound
jns
rolb
xchg
ja
shlb
lret
adc
cmc
mov
mov
pop
mov
pop
push
push
push
mov
aam
lods
cmp
lahf
sti
daa
mov
inc
int3
cmpsb
xor
mov
sub
fildl
xchg
out
loop
jmp
int3
xlat
int3
cli
cmp
into
in
pop
bound
out
inc
pushf
outsb
stc
cmp
inc
lahf
inc
repz
adc
movsl
rolb
in
mov
pop
sbb
and
mov
dec
lea
add
xor
push
outsb
mov
inc
push
mov
adc
pop
and
sbb
push
push
stos
bound
lret
leave
jp
stos
lret
sarb
fcmovne
pop
outsl
in
lods
inc
mov
ret
dec
inc
orb
mov
mov
sahf
pop
pusha
xchg
and
lcall
mov
adc
out
sbb
addr16
outsl
and
sbb
out
lods
imul
stos
stos
in
mov
push
insb
fwait
cmp
std
jae
pop
int
insl
fadds
xor
push
std
cmpsl
loop
dec
nop
jg
xor
pop
sbb
gs
in
inc
mov
xchg
sbb
add
mov
sti
xchg
and
lea
cmp
jmp
inc
out
and
negb
into
pop
inc
fs
mov
mov
jge
iret
sbb
outsb
and
mov
and
lea
cmp
pop
or
cmp
jo
and
outsb
and
xor
jo
rorb
lods
jb
inc
mov
fdivs
sbb
fsubp
jbe
aas
rolb
push
add
bound
push
test
sub
or
test
ficompl
adcl
xor
inc
bound
xor
sub
adc
shrl
loopne
insb
popf
adc
cmpsl
fisttps
loopne
mov
sub
xchg
push
mov
bound
pushf
jg
jae
fyl2x
aam
push
icebp
mov
mov
test
mov
incw
jne
sbb
cmpsb
outsl
pop
test
rep
aas
push
ds
pop
ss
neg
imul
add
out
imul
sbb
cmp
inc
cmp
xchg
repz
mov
rcll
out
lods
xchg
xor
lods
cmp
and
add
jecxz
fdivrs
jae
dec
adc
cmp
push
adc
das
test
aaa
or
jle
icebp
xor
adc
mov
dec
and
dec
jns
push
out
out
shrb
sub
mov
jne
lret
xchg
sbbl
jns
pop
xchg
xor
outsl
cs
cmp
cld
iret
shrl
mov
lods
in
icebp
stc
and
xor
aas
in
in
xchg
mov
addl
xor
push
andb
pop
push
jecxz
and
ljmp
in
jmpw
stc
cmp
xchg
lcall
sarl
inc
daa
aaa
push
push
inc
in
test
shll
int
xor
sub
fwait
push
es
inc
push
outsb
out
pop
xor
insl
or
imul
jno
xchg
xor
inc
and
jle
push
jbe
add
mov
andl
ret
gs
dec
arpl
jae
cli
es
jb
ja
lcall
call
xchg
nop
add
jnp
ficomps
xlat
push
inc
imul
sub
mov
cmp
iret
push
inc
sbb
stc
cld
arpl
test
stos
into
or
dec
mov
cs
outsl
dec
fadds
into
test
push
pop
pop
icebp
test
imul
ds
sub
out
and
lret
adc
inc
cmc
cld
stos
aaa
sbb
das
shlb
hlt
cmpsl
inc
jbe
xchg
out
outsl
test
movsb
sbb
adcb
pop
sbb
or
pop
mov
or
popf
lea
mov
aam
jp
test
bound
ljmp
lcall
sar
ret
lock
cmp
xchg
mov
jmp
lds
adc
mov
cmpsb
mov
out
incl
outsb
adc
and
mov
sbb
or
scas
xor
push
xlat
mov
cmp
xchg
loope
aad
aam
ss
mov
test
inc
cmp
adc
div
mov
inc
stos
cmp
gs
ja
out
or
pop
pusha
stos
lock
cmpsb
sbb
inc
push
pop
insl
jmp
negb
jecxz
push
push
hlt
aaa
mov
imul
cmp
ret
add
lods
movsl
inc
xor
jl
sub
lcall
mov
pop
sbb
cmpsl
jp
mov
cmp
sub
jle
adc
je
inc
movsl
leave
call
push
iret
inc
or
sbb
sahf
mov
push
mov
stos
xor
les
jnp
xor
les
lret
stc
out
int3
adc
sub
mov
jg
or
push
inc
loope
scas
fidivrl
iret
stc
inc
popf
pop
lahf
push
test
dec
ja
stc
imul
cmc
sahf
cli
imul
lock
ficoml
mov
sahf
fcomps
js
push
repz
dec
jb
ret
shlb
jbe
das
jnp
out
divb
icebp
add
xchg
sub
and
rolb
add
sbb
cmp
jmp
inc
adc
or
push
cmpsl
sub
cli
data16
add
mov
xor
xor
mov
shll
es
rcrb
add
mov
inc
pop
loopne
insb
jbe
jg
out
rolb
aad
repz
test
sbb
out
and
add
jae
cld
inc
mov
jecxz
repnz
dec
mov
push
inc
jge
mov
cwtl
into
inc
jl,pt
xor
add
rcl
and
xchg
pop
mov
insl
jle
nop
add
mov
cmp
into
push
int
cmp
jecxz
fwait
xchg
xor
loop
adc
not
test
sub
add
dec
sbb
jo
push
pop
sbb
mov
std
in
fdivrl
dec
jae
out
mov
and
lahf
adc
push
push
jmp
popa
sbb
fisubl
mov
out
mov
out
pop
jg
fildll
jbe
mov
or
insb
pop
lods
sub
push
xchg
jmp
mov
push
lods
lea
dec
js
bnd
es
aas
ja
adc
shlb
push
xchg
and
int
mov
pop
pop
ret
ror
jmp
pop
pop
test
cmpsl
bound
xchg
xor
fwait
aam
shrl
imul
or
or
arpl
movsb
pop
movb
and
push
adc
push
out
mov
push
imul
clc
rcrl
and
inc
sub
out
dec
fnstcw
and
mov
in
xchg
dec
jmp
adc
out
icebp
lea
xchg
and
or
js
ficomps
and
in
sti
adc
sub
mov
lret
push
jnp
adc
data16
gs
inc
push
mov
jo
leave
add
xchg
pop
or
repz
xchg
adc
mov
mov
jno
or
out
mull
cmp
iret
and
mov
and
xor
push
mov
mov
enter
data16
sbb
pop
mov
or
ljmp
cld
dec
add
xchg
and
dec
or
ret
dec
shll
dec
jp
adc
cs
add
out
pop
xchg
cmp
pop
dec
adc
push
or
lret
and
pop
ret
nop
xchg
leave
sub
add
je
cmp
push
popf
in
add
push
bound
loop
adc
aam
cmp
bound
and
ja
ds
mov
jge
hlt
dec
fcmove
mov
dec
pop
add
mov
mov
jle
mov
push
jmp
add
jl
pop
lcall
js
mov
xchg
or
outsb
mov
sbb
imul
mov
rclb
mov
out
cmp
or
mov
xor
lea
mov
push
outsb
mov
sbb
adc
int3
sbb
jo
and
jnp
mov
and
ret
sbb
dec
xchg
jle
push
fs
or
xor
or
repnz
pop
push
mov
add
aad
xor
xor
repz
arpl
frstor
mov
adc
mov
sbb
jl
mov
xchg
and
popf
hlt
pop
cmpsb
call
mov
dec
call
xor
jb
sbb
jmp
mov
mov
les
mov
mov
pop
inc
mov
icebp
outsb
sub
out
xor
stc
ljmp
stc
sub
imul
lret
imul
sub
bound
sbb
clc
adc
dec
jae
movl
lods
test
std
inc
add
or
popa
dec
pusha
movsb
jb
inc
frstor
pop
cmp
ja
mov
ja
fdivr
jne
rclb
lcall
xchg
test
sub
cmc
call
jp
iret
pop
xchg
cmp
sbb
aad
ljmp
mov
stos
clc
rcr
jb
rcll
lock
enter
push
int3
ljmp
inc
inc
xchg
cmp
inc
pop
mov
rorb
push
xchg
mov
xor
cld
jp
hlt
dec
jnp
or
mov
inc
std
jg
xchg
pusha
aad
pusha
pop
add
add
mov
idiv
popa
sub
js
push
mov
jmp
outsb
push
or
mov
xlat
clc
mov
mov
aas
ljmp
mov
adc
push
and
inc
ret
jp
gs
lods
jl
and
mov
cmc
je
inc
in
mov
cmp
lods
xchg
sti
and
out
in
mov
out
add
inc
xor
stc
ror
ja
inc
fs
jecxz
gs
push
ds
adc
imul
das
cmpsb
cmp
out
push
sub
jg
nop
loop
mov
out
inc
sti
mov
ss
inc
mov
add
xchg
xchg
jnp
fs
add
gs
insl
push
add
or
adc
push
clc
cmpsb
test
xchg
sbb
stos
into
dec
sub
push
or
ret
inc
sub
xchg
jb
or
jmp
inc
outsl
jle
sub
lahf
and
test
outsl
scas
adc
mov
nop
add
loopne
adc
movsb
sub
cmc
add
mov
sbb
push
dec
das
jae
pusha
sub
mov
pop
fidivs
xor
mov
pop
les
lahf
sarb
fwait
ror
mov
into
or
push
lcall
jns
dec
lds
mov
xor
fidivs
mov
push
rcrb
outsl
clc
jge
mov
lret
es
pcmpgtb
daa
cmp
daa
and
cmpsl
test
bound
cmp
sub
sti
out
test
pop
fwait
pop
xchg
fldl
mov
lcall
bound
jb
ret
in
or
or
popf
or
cmc
jge
lea
adc
xchg
inc
cs
sbb
adc
and
cmp
cltd
aam
iret
xchg
outsb
arpl
adc
jecxz
popa
iret
inc
daa
dec
adc
cmpsl
fdivr
xchg
aas
inc
movsb
movsb
leave
cmp
mov
push
add
push
shlb
sbb
popa
dec
xchg
pop
cmp
push
orl
sub
out
and
dec
imul
push
sbb
nop
sbb
in
push
jmp
movsb
pop
mov
enter
rolb
or
jp
jo
cmp
jg
ds
aaa
or
cmpl
add
in
imul
imul
inc
out
dec
rcll
daa
ror
cmc
mov
or
test
sbb
imul
imul
ja
lret
cmp
faddl
loope
pop
mov
stc
pop
inc
std
mov
or
sub
stos
and
adc
js
push
pop
cmpsl
or
data16
lret
repz
in
or
outsb
adc
dec
jo
lods
add
outsl
into
test
cmp
ficompl
cmp
mov
int3
adc
jbe
lcall
push
mov
mov
les
or
lds
dec
mov
push
loopne
incb
mov
sarl
inc
inc
xchg
in
and
sub
jae
push
das
or
adc
pop
sub
cmc
insb
add
pop
inc
rorl
call
pusha
ljmp
sahf
ljmp
scas
call
cli
divb
bound
cmpsb
sub
outsl
push
idivb
mov
das
mov
or
mov
leave
repz
idivb
les
addr16
inc
xchg
rcrb
das
lods
sbb
movsb
fiadds
adc
ret
cmc
pop
sub
jl
or
mov
mov
push
push
fnstenv
add
fdivs
push
mov
dec
mov
test
pusha
mov
inc
sbb
push
push
cwtl
dec
mov
mov
and
mov
test
shl
mov
push
das
push
subl
rclb
dec
or
cmp
inc
sub
mov
fidivrl
or
push
adc
ss
jo,pn
test
and
int3
lds
addr16
sbb
movsbl
pop
inc
jl
gs
jge
jp
adc
cmpl
add
and
inc
daa
lods
sbb
out
rcll
nop
push
nop
out
sbb
fistl
pop
mov
dec
inc
push
pop
and
stc
push
lahf
or
int
lock
scas
cmp
sub
aad
cmpsb
nop
jp
or
mov
push
jns
sub
je
daa
cwtl
sub
xchg
fisubrs
fld
mov
xor
sbb
rorl
xchg
mov
jo
js
fistl
scas
or
out
cmc
lahf
out
fmuls
ljmp
and
push
je
leave
adc
fcomps
jno
pop
xchg
ja
test
inc
js
jecxz
add
ljmp
mov
jmp
mov
fstl
xor
and
lret
pop
add
mov
cld
pop
fidivrs
loop
iret
nop
hlt
xchg
subb
in
out
pop
pop
cmp
mov
out
xor
dec
pop
mov
jge
test
pop
mov
push
mov
push
popa
xchg
adc
and
dec
nop
icebp
xchg
ljmp
xor
insl
xorl
fildll
cld
jns
and
aaa
or
push
arpl
arpl
nop
pop
inc
aas
xchg
dec
or
movsl
cmc
jecxz
decb
stos
and
movsl
adc
xchg
loopne
xabort
jl
inc
imul
xchg
cwtl
data16
pop
into
mov
jmp
mov
enter
daa
jl
and
aad
lret
mov
and
scas
mov
push
cmp
mov
pop
sub
cmp
sbb
vminpd
mov
mov
and
push
xor
mov
jmp
leave
out
scas
dec
jb
ret
pop
add
outsb
jns
lods
pop
into
or
test
ret
or
sti
mov
inc
hlt
dec
cmp
sbb
lahf
jecxz
dec
mov
adc
fdivrs
data16
pop
arpl
std
insl
push
push
or
jae
mov
or
stos
add
push
dec
jp
cmc
xchg
testl
out
pop
jecxz
cmp
inc
mov
sbb
pop
jp
jecxz
cs
frstor
xor
sbb
out
dec
adc
jle
adcl
sub
mov
fdivrl
test
xchg
data16
outsb
es
mov
or
jg
xchg
scas
pop
dec
test
jae
and
movsb
popa
dec
pop
lret
push
rol
sti
imul
imul
fs
xor
or
mov
popa
sarl
subl
inc
jo
mov
jge
aam
lods
hlt
pop
add
dec
jbe,pn
mov
jecxz
popa
dec
es
in
xor
aam
cmp
adc
out
or
icebp
cmp
jae
je
mov
int3
leave
mov
cmp
pop
and
cmp
in
pushf
jge
jns
sbb
hlt
xchg
std
xchg
in
and
mov
sysexit
repz
or
dec
mov
cmp
mov
jbe
push
mov
xchg
and
inc
ds
repnz
leave
xchg
cltd
sbb
stos
mov
sbb
outsb
adc
je
arpl
add
ds
xchg
sar
repnz
stos
jp
mov
mov
and
jno
jne
add
jo
adc
sub
push
cwtl
out
adc
mov
call
mov
lret
dec
mov
movsl
and
bnd
sbb
sbb
sbb
jl
cwtl
adc
jecxz
iret
cmp
push
ret
aaa
ds
lock
mov
aaa
pusha
lret
mov
dec
adc
jl
and
sub
and
adc
inc
in
pop
out
nop
daa
popf
push
inc
sbb
adc
cmpsl
call
adc
xor
mov
idiv
xor
mov
dec
scas
ja
mov
cmp
mov
lret
adc
inc
cmp
ja
iret
jecxz
cmp
xor
lds
pop
xchg
adc
push
jbe
loope
test
std
loopne
cmp
cmp
mov
sub
movsb
dec
jo
mov
cld
lea
mov
pusha
sub
ret
movsl
sahf
push
repz
adc
das
inc
mov
cmp
xor
or
popf
enter
cmpsl
fsubrs
hlt
add
and
aad
sahf
mov
mov
imul
xchg
popaw
rol
lods
daa
mov
mov
or
xor
ret
mov
out
xchg
xor
jecxz
push
mov
lods
in
sbb
loopne
sub
jno
add
mov
ss
sti
jl
in
mov
pop
loopne
push
mov
repnz
pop
test
jns
lret
ficomps
mov
std
xor
aaa
fisttpl
pushf
jb
fwait
adc
dec
jno
sbb
ds
aad
in
shll
cltd
sbb
xchg
sbb
mov
push
lods
sbb
aaa
fxam
scas
les
add
fs
inc
ja
dec
cs
andl
rorb
xchg
aad
in
in
jae
test
cld
dec
push
push
xor
mov
sub
lret
and
lock
sbb
rcll
sub
dec
and
and
xor
pop
dec
outsb
cmp
jge
adc
aad
mov
insl
enter
shrb
mov
mov
pop
push
and
mov
adc
mov
sbbl
hlt
sbb
imul
pop
icebp
mov
xchg
push
mov
mov
ja
cltd
add
outsb
xor
call
iret
cmp
lret
lea
sub
call
jmp
pop
mov
arpl
loope
repz
cs
push
add
inc
xor
pop
pop
pop
pop
xor
mov
xchg
inc
cmp
xor
test
xchg
jle
test
gs
aas
pop
and
adc
ljmp
or
clc
ljmp
ss
push
xor
pop
cld
sub
sbb
ficoml
add
popa
sub
mov
pusha
pop
add
inc
movsl
out
popf
sbb
xchg
push
cmp
xchg
or
jne
mov
fs
lcall
inc
cwtl
fbstp
mov
cmc
js
hlt
push
xor
cmp
cmp
xchg
ljmp
lods
push
popa
sbb
icebp
das
xchg
dec
xor
mov
hlt
rcll
mov
jnp
cmp
cs
cmc
pop
outsl
div
insb
and
and
arpl
and
mov
mov
movsl
pop
push
add
cmp
in
mov
xchg
cli
sarb
fwait
and
adc
or
loop
loope
jle
and
mov
mov
movsb
inc
fmuls
mov
jge
sub
leave
add
andb
pop
xchg
xor
hlt
mov
or
and
fidivs
jge
jno
jmp
jb
xchg
lret
or
js
adc
xor
psubusw
out
mov
ja
mov
lds
das
daa
jl
aaa
addr16
lock
std
test
fmul
dec
mov
cmp
xor
in
jmp
sub
outsl
loop
sahf
int
lods
cltd
fldt
push
cmp
ljmp
js
adc
ret
test
stos
ljmp
push
arpl
xor
lcall
mov
std
push
cmp
iret
push
push
nop
jl
adc
test
decb
decb
add
add
aaa
dec
icebp
sbb
rcl
stos
stc
call
mov
mov
mov
xchg
add
pop
aas
pop
pop
lcall
cmpsl
jo
push
sbb
lea
mov
and
mov
sub
fwait
mov
pushf
pop
and
fistpll
std
jle
adc
movsl
rclb
xor
or
or
inc
xor
clc
push
jl
dec
sbb
out
mov
jo
pusha
imul
add
pop
jne
xchg
xchg
into
pop
adc
sub
fists
aam
je
lods
mov
pop
lods
dec
fisttpll
mov
add
push
sbbb
pop
ljmp
loop
push
scas
xchg
jg
mov
aam
adc
inc
xor
outsl
xchg
ret
push
dec
inc
rorl
cmp
fs
rorl
jbe
dec
sub
add
jns
lahf
fildll
cs
enter
add
pop
popl
movsl
sub
movsl
xor
out
xchg
aaa
std
loopne
cmc
pusha
fldcw
mov
lods
sbb
lcall
js
or
repz
scas
mov
mov
jb
outsl
call
stos
std
add
mov
sub
mov
jl
jge
insl
arpl
imul
dec
repnz
sub
ret
inc
jmp
adc
outsb
dec
jno
nop
pop
push
and
xlat
dec
cli
add
dec
jmp
cld
jns
lock
ja
add
lret
out
popa
aam
inc
mov
jp
and
jle
aam
clc
xor
mov
jp
sbb
adc
sbb
mov
out
in
cmp
icebp
or
mov
mov
lahf
cmpsb
xchg
cmp
insb
inc
jne
push
and
cli
adc
push
and
iret
xchg
ja
xor
roll
sbb
pop
shrl
fidivs
dec
or
popa
aam
sbb
nop
sti
cwtl
aam
gs
mov
xchg
push
or
mov
mov
lahf
jne
mov
outsl
sets
jne
ljmp
xchg
les
push
mov
lock
pop
dec
enter
fcmovne
in
xor
mov
cmp
into
imul
xchg
mov
jmp
mov
push
or
or
fiadds
std
sbb
jne
and
iret
aad
es
push
mov
mulb
lds
lods
jmp
mov
pop
pop
clc
mov
sub
xchg
stos
in
mov
cmp
sub
mov
or
addr16
outsl
dec
push
popa
pop
mov
or
push
in
dec
xor
push
jae
or
jg
pop
jb,pn
mov
inc
ja
adc
sbb
aaa
pusha
loop
in
jae
or
jbe
cmp
mov
pop
sub
sahf
jns
fs
leave
enter
shrl
adcl
stos
jb
fstp
iret
pop
cmp
mov
idivl
out
aas
lods
pop
cmp
xlat
dec
mov
mov
daa
mov
adc
gs
sti
nop
mov
jl
xchg
in
sub
mov
xor
fldpi
ficompl
jmp
ljmp
leave
inc
idivb
xlat
push
dec
fndisi(8087
mov
fs
or
jbe
test
outsb
insl
mov
xchg
mov
scas
pop
or
out
lods
loopne
mov
cltd
hlt
add
pop
mov
js
xchg
enter
aad
push
or
xchg
push
jnp
out
xor
jb
ljmp
or
movsb
in
dec
insl
xlat
ljmp
and
cli
add
mov
test
mov
scas
or
aam
push
cmpsb
mov
rclb
xchg
jno
lret
push
in
sbb
push
dec
lahf
popf
jg
or
imul
xlat
or
shrl
jo
pop
push
jnp
xor
mov
test
lret
int
xchg
dec
imul
add
dec
mov
sbb
inc
mov
call
push
sub
clc
add
pop
mov
sub
jns
mov
test
outsb
add
or
or
shrb
cltd
cmpsb
jp
scas
lods
or
and
jecxz
and
fildll
jo
pop
mov
ja
movsl
cmp
and
popa
pop
mov
ss
test
sbb
fxam
pop
sub
arpl
mov
negl
mov
cmp
xlat
loopne
add
pop
jbe
mov
sti
xchg
pop
aad
cmpsl
and
xor
push
pop
stc
aaa
or
sahf
add
test
mov
lcall
inc
test
xor
push
or
popf
ljmp
xchg
xor
xor
loope
outsb
cmp
pop
cmp
sti
das
mov
mov
inc
fdivs
ljmp
loope
cs
scas
sub
mov
jecxz
mov
or
jbe
push
popf
cld
pop
mov
ljmp
lds
sub
mov
push
adc
call
rorl
push
or
stc
mov
and
and
and
push
pop
xchg
outsl
pop
and
inc
incl
sbb
dec
jno
mov
or
add
ja
ret
push
das
mov
ror
adc
cmpsb
lods
or
mov
lods
xor
jl
imul
or
or
jns
pushf
push
xlat
mulb
inc
xorb
push
sbb
int
dec
push
cwtl
inc
imulb
mov
add
add
nop
fldcw
mov
or
fsubrl
dec
fisttps
int3
out
and
outsb
xor
addr16
xor
adc
xchg
ror
stos
das
sbb
sti
fists
mov
insl
in
arpl
sbb
jmp
pop
mov
xchg
xchg
sbb
ds
mov
mov
mov
mov
lock
aaa
clc
mov
popf
cmp
jge
sbb
mov
inc
fnstcw
es
dec
cmpsl
pop
push
push
cmc
add
push
repz
repz
std
dec
fildll
jge
cmp
jne
jns
shll
outsb
sbb
mov
in
mov
andl
ja
mov
pushf
mov
sahf
sbb
fs
sub
inc
ret
or
loope
push
sub
addr16
inc
popa
loopne
jb
arpl
lock
iret
pop
inc
sar
loopne
in
mov
int
lret
pop
adc
adc
pop
sar
test
add
iret
jecxz
xchg
sbb
std
mov
mov
inc
aad
icebp
adc
ret
mov
mov
inc
faddl
xchg
jo
pop
gs
andl
movsl
imul
cmp
stos
vmovupd
adc
pop
push
das
xchg
inc
mov
xchg
and
mov
hlt
xlat
dec
test
pusha
inc
add
sub
dec
mov
inc
popf
pop
test
mov
pusha
mov
push
mov
xor
out
cli
daa
in
loope
scas
push
insl
and
adc
ja
jl
xchg
add
sbb
push
icebp
jns
mov
push
jp
test
mov
xor
dec
je
adc
cwtl
xchg
pop
lods
aaa
sbb
rorl
add
inc
iret
mov
sbb
sub
gs
xchg
push
jmp
out
lods
loop
sub
dec
lods
push
and
mov
daa
clc
add
pop
mov
and
add
mov
shlb
push
test
or
stos
mov
in
inc
in
add
cld
lods
iret
lcall
dec
pop
popf
sbb
push
rcrb
dec
out
mov
sbb
jle
adc
lods
fldl
jb
repz
sahf
or
fmull
pop
jae
ss
rclb
icebp
pop
push
sbb
pop
test
mov
adc
aam
ss
aad
insb
ret
mov
movsl
fldcw
pusha
pop
sbb
jb
rcl
ret
jl
dec
xchg
movsl
add
lds
xor
add
mov
insb
push
inc
addr16
push
dec
dec
cld
inc
xor
loop
popa
leave
mov
loopne
popf
push
mov
rol
repnz
rolb
cld
jmp
push
push
mov
add
lea
clc
push
jno
sub
sub
scas
mov
cmp
aam
test
fadd
gs
xchg
lcall
addl
jno
inc
or
xor
pushf
add
xchg
inc
dec
lods
xchg
std
lock
fidivrl
negl
push
sbb
pusha
xor
lret
popa
cmp
jecxz
push
jo
shll
inc
fstpl
jne
pop
scas
cmp
loopne
fs
stos
jecxz
mov
or
xlat
movsl
in
fwait
and
cmpsl
push
jl
push
in
xchg
ljmp
jae
adc
cltd
mov
mov
cltd
mov
jecxz
subb
rcrb
sub
pop
adc
loop
cwtl
mov
imul
mov
rclb
lcall
mov
xchg
inc
sub
jge
add
rolb
loopne
xchg
push
pop
out
fwait
outsl
rorb
stc
push
sahf
xor
fistl
sbb
push
sbb
jge
mov
xor
mov
loope
xchg
jne
cmp
push
outsl
repnz
fwait
nop
scas
mov
repz
cs
xchg
leave
out
das
into
rcrb
lret
push
add
pop
into
shlb
jb
in
outsb
in
hlt
or
mov
stos
sbb
movsb
imul
add
mov
sahf
xchg
mov
cmp
mov
popf
mov
fstl
lret
stos
mov
sbb
dec
adc
inc
aad
or
pop
sub
mov
cmpl
rclb
aas
sti
cmp
roll
adc
out
pop
nop
pop
sub
test
push
ljmp
mov
sbb
mov
mov
mov
xchg
push
push
mov
dec
loopne
in
add
ljmp
xor
xchg
push
pop
fidivrl
out
jnp
mov
mov
fcmovnu
cmp
push
or
clc
xchg
sbbb
fisubrl
mov
sbbb
pop
clc
sub
lret
adc
pop
pop
in
adc
sub
inc
inc
add
inc
adc
push
daa
pop
outsl
jno
or
mov
dec
testl
stos
loop
mov
cmp
mov
sbb
cltd
adc
mov
adc
jns
add
daa
fisubrl
movsb
orb
and
stc
jbe
and
movsl
mov
outsl
iret
mov
ljmp
pop
mov
jmp
sub
mov
adc
hlt
repz
sbbl
xchg
fs
popf
sub
cmpsb
inc
xlat
call
add
loopne
sbb
std
dec
mov
not
rolb
and
nop
mov
iret
scas
imul
out
pushf
cmp
in
jo
jmp
mov
mov
divl
jno
or
mov
lcall
fimuls
xchg
push
add
lret
push
cmp
imul
fwait
or
movsb
stos
dec
sbb
adc
lods
ss
pop
jae
jge
les
cwtl
mov
scas
and
sbb
pop
and
lds
dec
cli
pop
fnsave
cmp
cmp
cs
cmc
add
add
pop
aam
test
ret
jmp
je
call
push
xchg
inc
push
jno
pop
cmp
sbb
rcrb
pop
sbb
stos
sub
outsb
dec
push
xor
mov
mov
pop
or
inc
shrb
dec
push
jae
ret
dec
adcl
mov
xor
cli
sbb
sti
xchg
fcmovnu
insb
xchg
negl
mov
pop
jge
jmp
xchg
cmp
in
int
push
push
jmp
and
jmp
lahf
xchg
lods
mov
loopne
inc
cmp
xchg
mov
jnp
loopne
dec
call
lock
xor
xor
repnz
rolb
scas
fisubrs
or
mov
sti
xchg
addr16
rolb
xchg
xor
iret
push
xor
out
fisttpll
mov
or
jne
cltd
dec
sub
insb
cmpsl
xor
adc
iret
aam
pushf
aaa
xchg
mov
test
jge
insb
out
jecxz
push
lods
addr16
scas
test
in
push
popf
push
fisubs
fidivl
cmp
shlb
sub
mov
fmuls
stos
xlat
mov
pop
jb
push
or
add
jo
push
iret
test
dec
sub
push
push
stos
pushf
cs
mov
sub
xchg
push
out
aad
stos
add
loope
xchg
negb
aad
inc
adc
push
pop
or
mov
test
nop
aad
push
mov
out
dec
pop
mov
push
sbb
in
scas
sbb
sarb
cmpsl
ja
add
sub
jle
add
xor
gs
ret
jae
out
push
mov
ss
scas
nop
jge
inc
rclb
cwtl
subb
fwait
shrl
movsl
addr16
mov
pop
inc
fiaddl
cmp
or
test
daa
xor
add
pop
sbb
pop
adc
fnstcw
add
adc
scas
fnstenv
add
fldt
std
inc
fs
fldl
ljmp
lds
dec
imul
jg
jne
jno
push
popa
mov
pop
sbb
js
mov
push
cld
and
add
std
inc
arpl
adc
data16
sub
clc
mov
inc
rcrl
scas
notb
icebp
gs
inc
test
dec
cmc
xor
or
sub
adc
xchg
mov
stos
clc
cmp
out
bound
inc
aad
push
add
xchg
push
xor
leave
out
fxch
call
fstps
jmp
out
lcall
sbb
fistpl
lret
je
rcll
scas
push
mov
jno
jp
push
or
mov
mov
movsl
push
stos
adc
or
lods
jg
inc
icebp
xor
movsb
and
ret
js
xor
push
xor
push
es
jmp
xchg
in
clc
adc
in
lods
add
jmp
in
cwtl
pop
or
lahf
push
mov
fcmovnu
xchg
test
sarl
sbbb
xchg
int
insb
pop
mov
xor
imul
dec
cli
push
sbb
mov
mov
or
jae
sbb
dec
ja
stc
jno
xor
add
jo
mov
jle
xor
insl
mov
push
outsl
cmp
add
jae
outsl
sub
sub
mov
lret
mov
sbb
std
inc
incl
mov
xor
fistpll
add
je
xchg
mov
mov
daa
xorb
jo
cmp
js
in
subb
hlt
mov
xchg
push
jo
push
jbe
xchg
pop
fdivs
add
fidivrl
inc
in
inc
vpslld
imul
pop
push
add
add
or
sbb
outsb
ss
enter
cs
fwait
and
adc
push
cmp
test
ficoms
addl
push
or
mov
fsub
aam
or
push
addr16
mov
movsb
cltd
sub
pop
sbb
dec
add
nop
mov
cli
movsb
xchg
inc
inc
cmc
mov
dec
dec
jle
andb
lds
jbe
mov
data16
dec
or
dec
dec
dec
push
push
cmp
popa
out
jecxz
fcoml
addr16
pop
sbb
std
test
adc
sbb
mov
into
xchg
adc
les
stc
cwtl
dec
push
pop
jl
pop
push
mov
imul
stc
inc
outsl
mov
outsl
push
movsl
sar
mov
jl
jnp
add
ljmp
out
es
cmpb
jne
out
xor
mov
jmp
imul
adc
outsb
mov
in
xchg
xor
jb
es
imul
pop
lret
sbb
sbb
lock
jp
stos
xor
or
pop
inc
inc
cmp
aas
sub
adc
add
pop
faddl
pmullw
xchg
ret
sbb
call
in
pop
scas
dec
test
mov
adc
push
mov
xchg
les
scas
sbb
out
sbb
pop
inc
cld
aas
fsub
call
insl
in
mov
outsb
idivb
sarl
sbb
loope
ficomps
cmpsl
sub
lea
incb
sbb
pop
inc
adcb
adc
mov
sub
push
xchg
xlat
cld
xchg
fstpl
fcoms
inc
push
cwtl
add
cmp
adc
pop
dec
jle
add
lahf
push
iret
in
cs
aad
inc
clc
xchg
push
sbb
mov
xchg
imul
xchg
xchg
lahf
ret
pushf
lahf
pushf
cmp
lahf
sub
stc
pop
insb
fld
fdivrs
pop
xchg
xor
adc
daa
jecxz
repz
pop
cld
pushf
cli
hlt
cld
ss
dec
push
push
sub
pop
pop
lods
int
fsubs
cmp
test
mov
lds
ret
mov
ja
jg
mov
in
inc
mov
sub
lock
sbb
bound
imul
push
push
pop
push
arpl
inc
mov
icebp
push
inc
rol
mov
pop
aaa
andb
jge
pop
push
mov
loope
sahf
mov
inc
and
in
sbb
or
outsb
out
lods
push
adc
hlt
or
sbb
jnp
push
sti
mov
pop
mov
incl
xor
mov
lds
xchg
dec
mov
mov
push
mov
add
std
and
addr16
mov
push
xor
inc
mov
js
hlt
test
faddp
mov
add
cmc
pop
xor
testl
pop
push
orl
js
ja
and
xlat
cmp
lods
xor
je
jno
mov
imul
xchg
mov
xor
push
aas
popa
sub
or
inc
lea
mov
fsubrl
mov
into
pop
dec
addr16
js
aaa
ret
or
fnsave
inc
in
scas
ja
jmp
pop
test
push
sub
in
pop
dec
mov
fdivp
push
pop
int
maxps
stos
scas
mov
add
dec
push
push
adc
iret
push
cs
dec
mov
cmp
daa
jp
insl
imul
enter
outsl
test
rcl
scas
jmp
in
mov
mov
not
popf
pop
xor
mov
aas
imul
dec
ja
mov
aad
fstl
sbb
sti
pop
pop
and
add
pop
push
fmuls
and
xor
test
int3
les
roll
sbb
push
popa
inc
dec
sbb
scas
dec
push
insl
icebp
inc
negl
cmp
jmp
mov
test
enter
cmp
or
loop
ljmp
or
fmull
daa
inc
stos
or
data16
into
sbb
mov
inc
rclb
clc
pop
insl
inc
mov
dec
mov
push
aad
ljmp
into
jno
push
xor
std
xchg
xchg
stos
movl
inc
stos
or
enter
outsb
sbbb
xchg
dec
mov
mov
cwtl
mov
dec
xchg
xchg
inc
mov
popf
pusha
adc
mov
fcoms
popf
jns
or
add
sbbl
into
dec
stos
jo
sub
lret
jecxz
and
out
testb
cmp
xor
xchg
mov
loopne
arpl
inc
sub
cs
pop
ss
scas
lea
mov
test
mov
leave
sbb
jae
aam
test
loope
jle
outsb
out
fwait
push
push
mov
pop
in
xchg
rcl
mov
psubw
test
loope
add
das
stc
and
cmp
and
mov
dec
popa
sub
jno
scas
test
mov
out
cmpsl
or
lret
cmp
push
push
or
add
mov
loope
adc
or
xor
jp
call
mov
lds
cwtl
mov
xchg
pop
icebp
aam
data16
mov
mov
mov
es
imul
iret
test
call
xchg
push
andl
sub
loope
jno
outsb
fstpl
and
outsl
or
daa
imul
pop
dec
mov
and
inc
clc
out
lret
iret
pop
inc
sbb
sub
mov
aaa
or
sbb
mov
mov
adc
and
prefetch
addr16
rcrb
cmp
aaa
cwtl
in
fnstsw
mov
jl
or
neg
dec
stc
std
and
dec
in
jbe
jp
js
lock
xchg
out
add
xchg
mov
mov
loop
ds
sti
cmpsb
jp
cmp
out
roll
out
mov
pop
inc
sbb
imul
les
cmp
jmp
outsb
xchg
mov
add
or
pop
cmp
jl
inc
push
xchg
es
pop
and
shr
lea
dec
sarl
or
jno
outsb
imul
cwtl
imul
icebp
nop
jno
div
cmp
add
xor
aad
stos
push
mov
outsl
cmpsb
jne
int
ret
inc
addr16
stos
ljmp
popf
jno
dec
aam
sub
xchg
out
jle
stc
test
jo
xor
pop
sub
pop
add
incl
ja
lods
mov
in
addr16
and
in
pop
pop
in
cmp
les
or
push
adc
movsl
je
icebp
or
xor
and
lea
jle
dec
inc
lret
push
clc
imul
addr16
inc
and
sub
mov
in
xlat
sub
fsubs
fadd
shll
out
arpl
fucomip
jne
stos
pop
icebp
dec
cmp
xchg
inc
jne
addr16
lret
mov
jecxz
mov
lcall
sbb
jle
and
jmp
mov
sti
xchg
lcall
and
repz
pop
xchg
push
xchg
pusha
add
xor
lcall
lcall
stc
sbb
and
jb
push
mov
movsb
insl
jp
bound
or
pop
add
inc
sarb
outsb
je
jl
cmpsl
arpl
into
sbb
enter
or
shlb
pop
add
fwait
or
fdivl
mov
js
cmc
ljmp
daa
mov
ljmp
and
fists
aas
pop
nop
js
adc
cltd
jae
mov
insl
add
aas
mov
enter
daa
rolb
js
stos
pushf
nop
daa
enter
cs
insb
mov
fisttpl
sbb
jne
and
iret
iret
jae
aaa
xchg
push
or
xor
pushf
fwait
stos
jg
in
insb
andb
mov
aas
sbb
shlb
push
add
iret
or
ds
in
pop
inc
ja
movsl
cmp
imul
lock
mov
jl
xchg
jns
add
stos
test
sbb
leave
out
fmull
inc
mov
inc
stos
aad
addl
ds
gs
sub
out
and
push
sub
dec
sub
arpl
test
adcl
xchg
sub
inc
mov
xchg
sub
js
add
cmpsb
pop
stos
test
icebp
add
addr16
push
xchg
lea
pusha
ds
sub
dec
inc
sub
inc
cld
dec
or
bound
jmp
lahf
cmp
add
lods
rcl
add
mov
leave
ja
sub
stos
inc
aas
data16
ret
jmp
mov
mov
xchg
icebp
je
mov
mov
cmpsl
mov
sbb
nop
sbb
inc
hlt
je
repz
jecxz
and
jno
sub
in
dec
fucom
out
cmp
push
out
xchg
pusha
push
pop
mov
shr
sub
fldl
cmc
jnp
or
lods
pop
push
jne
lret
cmp
andl
nop
call
xchg
dec
int3
mov
push
js
outsl
and
and
ljmp
outsb
repz
dec
push
cmp
nop
pop
mov
adc
adc
fnstsw
xorl
push
insb
sarl
mov
lcall
in
push
inc
inc
jae
jbe
cmp
mov
adc
push
aaa
mov
cmc
iret
xchg
out
cs
out
inc
icebp
mov
sub
add
imul
imul
mov
and
das
add
sbb
xorl
mov
and
mov
inc
aas
sbbb
rcl
pop
sbb
test
sbb
fmull
sub
mov
mov
push
mov
jae
loope
call
adc
push
jl
mov
leave
js
out
dec
mov
jp
jmp
test
rclb
loope
mov
and
cmpsl
mov
pop
jle
push
pop
cmpsb
in
sbb
test
imul
aas
or
aad
lcall
scas
sbb
imul
or
movsb
mov
sbb
out
js
push
push
sarb
pop
adc
push
test
or
jecxz
push
loopne
test
mov
mov
inc
push
arpl
and
lret
cmpsl
popa
lcall
out
xchg
mov
and
scas
xchg
frstor
outsl
push
in
pop
mov
dec
or
dec
xchg
ja
loope
out
xchg
outsb
mov
mov
lods
mov
push
mov
outsb
pushf
xchg
cmp
test
mov
xchg
jmp
decb
notb
mov
pop
cmpsb
testb
popf
ljmp
out
xchg
mov
orb
fidivrs
or
stos
adc
movsb
cld
pop
aaa
pop
sbb
xor
pop
add
shr
andl
and
jns
pop
and
xchg
sahf
pusha
push
mov
cs
xor
shl
pop
lret
rolb
cs
sbb
and
sahf
mov
inc
pop
jge
jl
es
aad
cmp
or
mov
int3
jb
cli
hlt
push
inc
subl
xor
fwait
nop
rolb
insb
or
mov
jecxz
adc
call
int3
cmp
jne
push
jo
in
push
sbb
inc
inc
push
add
inc
sbb
xchg
add
push
in
xchg
stos
lea
shll
fwait
pop
jo
sbb
fsubl
fdivl
movb
repnz
cmc
lods
xchg
xchg
push
imul
xlat
idivb
pop
inc
jl
fsub
xchg
mov
pusha
add
push
leave
repz
arpl
out
icebp
jle
push
es
inc
push
xor
vpcomb
push
xor
ficoml
bound
xor
mov
pop
dec
sarl
or
sahf
cmpl
not
xor
es
pop
mov
sahf
lock
mov
stos
mov
adc
xchg
mov
push
mov
push
lock
mov
fmull
movsb
aaa
pop
jae
mov
orb
jmp
inc
fldcw
mov
mov
add
adcb
jo
xlat
ficompl
push
xchg
test
cmp
in
inc
mov
cmp
outsl
outsb
test
dec
jmp
stc
push
out
and
hlt
mov
cmp
addr16
ljmp
lods
jmp
lret
shll
pop
mov
cwtl
lret
xor
cmc
or
cld
push
decl
jl
xor
mov
leave
jbe
or
mov
mov
repnz
outsl
dec
xor
call
sbbl
mov
fimull
pop
and
pop
lret
mov
and
and
jecxz
add
xor
add
inc
bnd
mov
adc
fsubr
loope
insl
lret
dec
inc
std
test
push
je
inc
popa
cmp
repz
push
xchg
mov
iret
adc
out
in
pop
icebp
cmpsl
add
lock
leave
sbb
or
sbb
push
adc
jecxz
cmpsb
xchg
cli
xchg
jge
xchg
hlt
lcall
bound
adc
test
xor
jp
out
in
in
and
repz
into
jnp
push
jle
pop
nop
dec
xor
aas
dec
and
fwait
ja
mov
jge
push
dec
mov
push
or
or
jge
icebp
cs
iret
shll
sub
jl
push
shll
imul
jge
dec
fdivrs
dec
fbld
test
lea
cld
ja
aam
std
aad
jg
xchg
pushf
in
adc
ficompl
jb
push
test
push
push
dec
add
xor
adc
fistpl
cmpb
or
pop
inc
pusha
in
in
sti
dec
sub
pop
jne
and
loop
dec
pop
sbb
mov
or
iret
icebp
rorl
inc
addr16
pushf
pushf
inc
cld
jmp
and
movsl
or
cmp
rcl
fs
or
mov
arpl
shrl
mov
data16
test
mov
xchg
dec
dec
mov
out
mov
in
lock
pop
lea
pushf
add
out
nop
pop
jge
pusha
cmp
lods
mov
jg
sti
add
cs
jbe
jge
dec
mov
sbb
mov
fistpl
dec
and
lods
mov
push
sub
out
fidivrs
dec
lock
mov
sub
sub
lret
popa
inc
fisttpll
test
mov
mov
out
pop
xor
nop
dec
rcr
dec
cmp
xchg
insl
cmc
xchg
and
mov
and
or
mov
popf
mov
sti
push
mov
mov
inc
ja
orb
add
add
dec
cmp
adc
add
movsl
out
add
cwtl
inc
scas
loope
andb
xchg
je
mov
repz
pushf
pop
or
lds
mov
pop
jne
xlat
loop
xchg
adc
mov
fistl
push
cmp
inc
push
cmp
mov
mov
rorb
xor
cmp
xor
push
repz
in
xchg
mov
pop
mov
arpl
iret
shl
bound
push
mov
jns
push
insl
cmpsb
mov
dec
icebp
es
rclb
data16
cld
or
pop
dec
xchg
pop
test
mov
aaa
mov
pop
xor
cltd
mov
movsb
jae
add
lcall
inc
mov
neg
loope
orb
or
xor
lret
lods
sub
jbe
cmpsl
push
mov
add
dec
cmp
jns
jg
inc
jns
sbb
or
fwait
add
sub
adc
fildl
loop
cmc
jge
xchg
fdivr
jg
push
sub
shlb
stc
insb
into
lock
jo
iret
xor
fldenv
cmp
push
imul
lret
les
xor
orl
loop
addr16
sbb
iret
mov
in
out
das
mov
fcmovnu
push
push
dec
ljmp
test
pop
mov
lods
gs
icebp
lahf
int
sti
insl
je
cmpsb
lea
push
xchg
cmc
loop
cwtl
xor
dec
shr
sbb
int
sbb
dec
cltd
mov
ljmp
lock
adc
aam
pushf
push
sbb
sbb
lods
dec
ficoml
std
test
or
xor
xchg
jmp
out
push
fdivl
and
outsb
aaa
lahf
addr16
xchg
jmp
inc
ja
fs
xchg
addl
mov
sahf
popa
shrb
test
jo
inc
sub
inc
mov
insb
hlt
fistps
xor
ljmp
fidivrs
xchg
lock
jg
ds
pop
sub
or
sub
jne
jbe
jecxz
std
popa
or
sbb
sbb
mov
jns
scas
daa
incb
sbb
dec
test
pop
jno
test
comiss
jg
xor
loopne
fdivl
clc
sarl
cli
cwtl
decl
je
inc
jns
mov
dec
push
or
imul
mov
outsb
fnstsw
jg
shrl
cmp
push
jbe
in
xor
addb
addr16
adc
or
fiadds
pop
repz
mov
sub
scas
pop
ds
or
aas
cmpsl
leave
enter
add
data16
arpl
test
out
jns
repz
aam
imul
in
adc
sbb
xchg
ret
movsl
into
cmpl
push
lock
inc
dec
inc
movsl
and
cli
adc
adc
icebp
push
push
pop
inc
in
mov
xchg
push
jg
xchg
shll
xor
icebp
push
sbb
insl
pushl
mov
inc
mov
and
outsl
subl
fs
mov
and
dec
movsb
cmpsl
sbb
adc
in
or
inc
jp
or
xor
fbstp
adc
scas
push
xlat
out
mov
in
idivb
int
or
cltd
cmpsl
pop
jmp
cmp
lods
dec
jg
mov
adc
mov
cli
xor
push
popf
mov
sbb
cmpl
add
push
xchg
jo
stos
sub
push
jp
jmp
push
dec
fsubp
or
inc
jo
ret
and
and
loopne
lahf
cld
sub
push
arpl
dec
cmpsb
and
fchs
sub
mov
sub
sbb
inc
xlat
or
sbb
mov
adc
xor
lret
xchg
call
adc
mov
jle
pop
dec
scas
adc
cmp
or
pusha
cmp
insb
das
iret
std
pushl
mov
pop
mov
scas
add
int
data16
dec
adc
rcrl
andb
subb
fisttpll
cmpsl
movsl
addr16
or
fbld
dec
test
or
xor
iret
mov
xorl
and
mov
iret
inc
jmp
lcall
jecxz
xchg
mov
fs
lret
idiv
mov
jmp
and
pop
loop
dec
subl
cmpsl
imul
sbb
sbb
repnz
hlt
xlat
loopne
inc
lret
dec
outsl
scas
orl
mov
cmp
test
lcall
ret
dec
das
xor
push
inc
lea
jae
js
test
loope
and
leave
cmp
inc
js
aaa
mov
add
sbb
hlt
lret
mov
mov
ret
movd
mov
mov
je
jmp
xor
xchg
jo
or
add
js
ja
ret
inc
addr16
test
sub
and
mov
pop
sbb
sub
mov
loope
inc
sub
xor
sbb
andb
xlat
mov
dec
out
or
xchg
cmp
hlt
pop
rcll
test
pop
stc
cmpb
pop
dec
jmp
testb
add
dec
or
loopne
sbb
clc
sbb
mov
add
jge
sbb
push
ja
push
int3
pusha
cltd
test
lock
xchg
xor
and
insl
inc
cld
fimuls
jnp
test
cmp
dec
rorl
lock
daa
jecxz
push
filds
cmp
push
sti
addr16
pop
in
or
and
insl
cmp
adc
mov
cld
mov
popf
outsb
adcb
mov
adc
movsb
jmp
cld
in
fidivrs
xor
dec
inc
mov
mov
dec
cmpsb
adc
push
inc
cmp
or
dec
scas
bound
push
jle
call
pop
mov
cld
ds
adc
cld
cmp
inc
push
or
pop
fisubl
lods
mov
pop
mov
xchg
int
mov
in
enter
sahf
cmp
xchg
cltd
inc
mov
push
cmpsl
adc
pop
mov
cmp
aas
pop
movsb
mov
in
popa
aas
and
adc
in
ret
push
or
xchg
mov
sbb
repz
sti
mov
sbb
stc
je
xchg
iret
outsb
cmp
xchg
insl
pushf
mov
or
adc
cmpsl
xor
les
jo
pop
jo
mov
xor
or
loop
bound
mov
std
sub
cmc
stc
sbb
clc
nop
lock
jecxz
int3
push
out
xchg
or
dec
imul
test
sub
rcll
ljmp
or
sbb
divb
in
xchg
nop
fwait
sti
jae
mov
sub
pushf
idivb
jg
sub
cmp
mov
out
icebp
aad
lcall
pop
adc
dec
mov
add
fsubs
cli
xor
mov
les
sahf
loope
cld
shll
dec
dec
pop
dec
dec
aaa
clc
lret
or
add
mov
sub
subl
loope
mov
insb
js
fstl
loop
aaa
jno
push
dec
ja
mov
sar
loope
imul
in
jp
sti
dec
int
mov
sti
in
lock
jge
jmp
jg
sbbl
inc
jno
jg
add
stc
sbb
scas
pop
jecxz
xor
nopl
in
es
cmpsl
push
ja
adc
mov
push
jmp
imul
cmp
add
hlt
fwait
add
push
test
sarl
and
add
fldcw
pop
add
mov
and
sub
addr16
aaa
jo
or
adc
jbe
mov
sbb
inc
push
stc
wbinvd
cmpsb
call
ud2
pop
repz
pop
lods
xchg
mov
xchg
cltd
dec
shrl
pop
lret
ret
sarb
sub
sbb
add
movsb
add
clc
insl
ds
cmp
jb
xor
aas
jo
add
cmc
repz
pop
xor
ror
fcoms
sahf
mov
addr16
cmpsl
xchg
popf
int
inc
xor
lods
aam
outsl
pusha
movsb
push
dec
jecxz
jae
std
mov
adc
push
lcall
push
sub
xor
in
and
addr16
scas
mov
xor
jl
push
inc
daa
inc
inc
sbb
jo
or
or
orl
out
pop
dec
or
add
adc
mov
mov
push
mov
lods
mov
add
mov
nop
movsl
mov
sahf
int3
pop
cs
xchg
repz
jo
push
push
lcall
push
lds
out
xlat
inc
call
fstpt
cmp
int
fldcw
jo
cmp
pusha
out
stos
add
pop
or
andb
fwait
lds
jne
xchg
cmp
push
and
arpl
push
xchg
inc
cltd
jecxz
cmp
roll
push
aad
mov
cmp
es
in
adc
inc
out
inc
dec
mov
and
movb
bound
aam
inc
jnp
shrl
adc
iret
mov
ja
fildl
xor
cltd
jbe
gs
dec
andl
out
adc
stos
mov
fiaddl
in
inc
and
in
mov
mov
lret
mov
pop
mov
scas
je
pop
and
sub
jo
fucom
int
add
push
lods
movsb
cs
into
dec
pop
repz
ja
loop
outsl
rcrw
dec
cld
and
ret
pop
shrl
clc
movsb
mov
jae
mov
dec
mov
pop
lods
sbb
inc
dec
ljmp
pop
fnstenv
mov
mov
xchg
push
jle
daa
stos
test
arpl
inc
fisubl
inc
and
neg
push
cltd
cmp
aam
in
and
bound
dec
in
pop
mov
cli
pop
je
std
dec
sbb
sbb
and
daa
sti
cltd
add
adc
movsl
sub
cmp
cmpsb
int3
out
dec
pop
or
lds
out
cmp
leave
xchg
hlt
cs
xor
mov
add
push
mov
lds
cli
daa
repnz
jo
pop
add
rorl
pop
call
das
imul
fldl
add
movsb
pop
jg
push
loope
push
call
xor
mov
xchg
pop
or
std
in
sub
aam
and
into
mov
in
ja
push
les
xchg
stos
dec
movsb
aad
std
push
cmpsb
push
xor
aaa
cs
push
mov
cmp
jge
xlat
cmp
pop
cwtl
test
repnz
inc
pop
das
sbb
sub
push
sarl
push
cmp
add
xlat
loop
lea
jg
cld
out
hlt
jbe,pt
pop
jno
scas
lds
imul
test
fwait
mov
or
imul
insb
roll
scas
rclb
sbb
outsl
sbb
fwait
js
scas
fisubs
fistps
sbb
inc
push
test
rcll
cmp
add
push
loopne
push
sbb
jmp
add
fwait
xor
mov
ds
xor
adc
sarb
sub
push
push
and
test
loop
cmp
mov
pop
andl
call
iret
or
das
mov
xchg
xorl
outsl
mov
xchg
into
and
sbb
mov
jmp
enter
add
int
sub
xchg
sahf
fisttpl
clc
lods
pop
andb
push
outsb
jmp
xor
repnz
test
out
mov
xchg
xor
in
sbb
popf
in
int
sbb
ljmp
xchg
cmp
jg
jne
jmp
std
aam
dec
xor
stos
mov
jge
mov
movsl
lcall
call
sbb
adc
jge
xor
add
mov
xchg
cmp
mov
push
pop
mov
pop
dec
cli
out
cld
stc
int3
inc
jb
sarl
out
je
pop
js
cwtl
loopne
gs
xor
or
ja
sbb
jb
sub
pop
sub
adc
push
push
je
lret
adc
add
sarb
mov
mov
fidivs
push
xchg
add
cltd
das
and
cmp
mov
add
in
jge
outsl
and
mov
enter
inc
pop
push
stc
dec
adc
into
push
test
inc
int
xor
inc
xor
les
cmp
rcrl
jg
imul
dec
push
fldenv
adc
inc
ds
fstpt
repnz
loope
and
add
stc
xor
lcall
cmp
insl
sbb
mov
jge
pop
es
rcrl
fwait
out
xchg
cmc
lret
into
ret
cmp
cs
cwtl
push
jecxz
ret
sub
push
out
cltd
arpl
sub
loopne
add
add
ss
xchg
mov
dec
mov
pop
imul
std
xchg
mov
mov
jnp
mov
repnz
lcall
movsb
shll
push
mov
cmp
jnp
out
out
fildl
and
push
mov
in
mov
cmp
xchg
cmp
mov
stos
es
stos
gs
pop
icebp
lea
sub
sub
into
sub
into
mov
test
xor
es
loope
nop
cmp
jecxz
cmp
jmp
in
outsl
icebp
ret
test
or
sti
imul
leave
sarb
cmp
into
into
not
sbb
mov
repz
outsl
lret
fistl
cmp
sub
pop
lahf
adc
pop
cs
lret
mov
scas
jmp
scas
mov
or
adc
out
into
shlb
nop
dec
push
add
subb
or
inc
lcall
inc
and
inc
int
adc
ds
mov
and
data16
pop
cmpsb
daa
bound
cwtl
das
scas
loop
xchg
mov
xlat
mov
outsb
push
not
aad
sub
pop
in
mov
mov
pushf
jo
xchg
and
jp
out
jb
out
jp
scas
ljmp
mov
movsb
push
out
jge
stos
push
jl
adc
push
push
push
add
cli
lahf
push
lods
shr
sahf
in
jecxz
ss
or
sub
sub
lcall
inc
cmp
or
test
aam
es
jnp
add
mov
or
in
fidivl
add
imul
pop
in
outsl
mov
bound
lahf
mov
movsb
push
pushf
mov
test
mov
rol
mov
mov
mov
push
xor
add
stos
jecxz
cmc
xchg
fadds
shrb
or
std
jne
push
adc
fwait
or
mov
inc
bnd
xchg
mov
push
cmp
mov
call
mov
sti
outsl
and
push
pop
mov
out
sbb
jp
imul
mov
push
std
and
push
sub
scas
xchg
mov
mov
push
xchg
lahf
or
cmp
imul
inc
sarl
add
sub
jecxz
lock
psubsb
push
test
mov
sahf
xchg
sbb
adc
push
ret
dec
jmp
push
and
or
and
add
mov
dec
in
in
push
test
sub
iret
lods
js
neg
daa
add
jbe
nop
out
ficoms
sbb
or
dec
cmp
gs
loop
cld
dec
outsb
adc
cs
mov
push
jle
int
ret
aaa
in
ja
xor
lds
fisubrl
loop
fildll
xchg
mov
lret
pop
pop
and
stc
fists
jae
push
jno
sbb
mov
call
cmp
jae
or
out
in
xor
cltd
jle
sbb
add
fxch
scas
std
xor
out
subb
cmp
jp
xchg
pop
stc
mov
cmp
mov
mov
mov
pop
jb
mov
mov
xchg
sti
add
ljmp
pop
test
xor
aam
inc
sahf
int3
cmp
dec
jns
mov
ja
dec
mov
clc
jae
dec
arpl
call
mov
pop
and
sub
cmp
jecxz
data16
dec
enter
sub
mov
mov
jae
lea
loopne
and
and
rorl
call
in
gs
push
inc
int
fmul
pop
std
movsb
push
jnp
aam
leave
mov
mov
stc
push
pop
test
fmul
femms
faddl
cmpsb
sub
in
push
and
ret
dec
mov
hlt
dec
jge
lds
gs
push
out
fbld
adc
in
leave
cmp
inc
or
daa
bswap
jg
adc
js
je
xor
sbb
lret
insl
scas
sbb
inc
mov
sar
xor
daa
out
pop
xor
push
add
inc
ljmp
cmp
jae
jae
decb
pop
mov
in
ljmp
or
and
mov
std
fisubrs
ret
cmpsl
pushf
push
into
enter
insb
sub
sub
bound
lock
push
fisubs
insl
rcl
xchg
sbb
aad
mov
arpl
popf
mov
or
frstor
adc
fwait
pop
xchg
push
int3
cmp
imul
xchg
sub
in
push
sub
mov
mov
sub
outsl
jae
movsl
push
mov
xchg
lods
fnstenv
icebp
xchg
stos
mov
jno
aaa
fbld
push
lea
lcall
pop
xchg
lods
addr16
and
ja
shlb
shlb
aad
arpl
in
xchg
inc
and
andb
idivl
leave
dec
mov
test
push
sub
mov
push
ljmp
test
push
aas
and
or
mov
sub
sub
jo
repz
pop
clc
jns
sbb
and
push
popl
sub
gs
cmp
lcall
jp
push
add
cltd
sbb
arpl
std
push
mov
push
adc
add
and
test
jb
jle
mov
test
ret
js
aas
sub
andb
js
mov
mov
pop
adc
mov
add
xlat
push
popf
and
jbe
pop
sub
cmp
aaa
xor
inc
xchg
cmp
sub
mov
popf
in
rolb
pushf
and
xchg
subl
das
or
les
lea
in
addl
in
fnstenv
mov
add
out
adc
movsl
xchg
rolb
mov
dec
jnp
add
sub
ss
lods
mov
popf
cli
loope
mov
push
out
movsl
fidivs
inc
mov
jae
xchg
add
insb
jmp
or
inc
mov
fbstp
dec
mov
in
add
or
jecxz
mov
or
mov
jmp
rcrl
rorl
into
xor
aas
pop
rcll
rolb
hlt
in
push
icebp
insb
rol
test
stos
outsb
xchg
and
cwtl
popf
mov
test
and
mov
sbb
mov
dec
out
shll
dec
push
lret
sub
dec
mov
loop
jo
aas
xchg
adc
aad
lcall
or
inc
lea
dec
push
lcall
std
js
pop
add
jmp
outsl
popa
lcall
push
cmpsb
and
jmp
jmp
xor
cmp
pop
adc
jo
aam
fs
loop
and
ljmp
clc
add
shrd
daa
iret
aaa
lcall
pop
negb
bound
push
inc
sub
cmp
or
fnstenv
push
inc
ja
xor
jno
dec
or
push
inc
pop
pop
lret
lret
lcall
frstor
push
arpl
dec
mov
push
pop
aaa
cmp
jae
cmc
lds
xor
xchg
into
hlt
dec
cmpsl
pop
sahf
push
adc
mov
sbb
fcomi
and
xor
xor
je
xchg
outsb
sbb
jne
adc
push
shlb
loopne
mov
jle
xor
ss
movsb
pop
inc
in
dec
stos
cmp
rorl
push
rclb
pop
xor
jb
int3
xchg
imul
sbb
xor
aad
fwait
iret
test
loopne
adc
std
add
int3
mov
leave
add
fs
popa
ds
sub
pop
addb
test
sub
pushf
jl
pop
loop
sahf
xlat
push
pop
sbb
and
setle
push
cli
scas
and
in
pop
mov
sarb
lret
push
lahf
cmpb
or
xchg
std
mov
sbbl
andl
mov
pushf
fnstenv
inc
frstor
mov
es
test
popf
pop
fiadds
stc
ret
pop
ljmp
sarl
inc
fs
call
mov
mov
setnp
push
loope
mov
inc
and
or
cs
mov
pop
xchg
mov
roll
mov
cmp
mov
stc
add
insb
push
outsb
xlat
pop
add
mov
push
dec
push
xor
jp
loopne
sub
add
shll
fiaddl
cmp
dec
xchg
lcall
pop
scas
mov
mov
sub
dec
add
int
insl
cmp
or
mov
sbb
nop
ljmp
push
add
jno
inc
lods
lods
xchg
push
xchg
pop
adcl
popa
mov
push
enter
outsl
mov
push
sub
mov
jmp
shll
imul
test
and
clc
mov
stc
leave
xchg
sub
dec
mov
or
push
sub
ret
ds
sub
add
xchg
cmp
jmp
xchg
cmp
shl
daa
lods
fisubl
and
mov
jns
mov
cmp
mov
test
push
fistl
scas
cmp
mov
mov
rolb
inc
stc
enter
roll
jno
push
lods
shlb
push
fcomi
in
pop
movsl
jb
icebp
mov
mov
js
fldt
addr16
lock
push
insb
xchg
pop
xlat
xchg
sub
xchg
inc
movsl
in
inc
insb
aam
sbbb
imul
lea
test
lock
sub
mov
mov
pop
and
inc
xchg
loope
sbb
sbb
and
xchg
leave
pop
aam
mov
dec
popa
sbb
sbb
add
out
mov
inc
inc
in
popf
jb
or
adc
loop
sbb
int
add
insb
mov
push
mov
jp
adc
add
jle
mov
idivb
scas
mov
aas
test
jno
call
cmp
cmp
imul
adc
xchg
pop
in
jnp
add
enter
mov
insb
and
xchg
lods
sub
fcmovne
lds
mov
bnd
and
fdivrl
or
mov
mov
push
stos
scas
sbb
in
xor
push
call
fxsave
out
dec
insl
in
cmc
dec
and
sub
cld
lods
cli
in
or
lcall
adc
lret
std
mov
mov
pop
aad
sub
jne
add
inc
pushf
ljmp
outsl
and
aad
adc
orb
cmp
mov
pop
pop
outsb
faddl
xlat
mov
adc
mov
lock
pusha
dec
adc
loope
dec
pop
or
mov
add
aaa
repnz
daa
mov
test
ljmp
pop
pop
inc
gs
and
loopne
test
outsb
rcl
xor
test
lods
dec
data16
pop
xor
ret
popa
xchg
call
rcll
cs
imul
push
xchg
lret
xchg
push
dec
scas
mov
outsl
aaa
jl
mov
stos
push
or
dec
aaa
mov
cs
and
push
and
cmp
idiv
xor
popa
cmp
shll
aam
sub
imull
cmc
or
xchg
mov
push
aad
rorl
sti
sar
and
push
lods
sub
fldenv
cwtl
mov
jbe
pop
xchg
push
dec
adc
loopne
movsb
loopne
filds
std
and
out
arpl
push
mov
cmpsl
xchg
arpl
imul
mov
mov
lea
sub
cmp
movsl
push
lret
repnz
stos
ljmp
aas
shl
shlb
mov
adc
add
fisubrl
subb
xchg
dec
fildl
cmp
xor
lcall
mov
push
jge
mov
inc
fdivr
add
add
sbb
sbb
xlat
in
rcrl
jp
fcmovnb
push
call
clc
xchg
add
or
sub
cltd
fstl
push
test
loope
push
sbb
int
inc
dec
popa
jbe
mov
pop
leave
das
mov
std
and
jecxz
jp
leave
mov
into
rorb
mov
and
mov
mov
out
inc
arpl
int3
addr16
add
adcl
movsl
fs
outsb
imul
in
testb
pop
xor
test
repz
mov
or
lret
enter
inc
inc
clc
mov
sub
insb
lret
inc
sub
sti
xor
mov
out
mov
jo
inc
dec
sub
push
cltd
int
fistl
push
into
stc
push
pop
test
daa
cmpsb
add
lret
pop
fisubl
popf
sub
loopne
icebp
jecxz
stos
stos
cli
das
sti
lods
andl
mov
push
test
stos
shlb
int3
mov
or
xchg
daa
dec
scas
adc
aam
jle
es
loope
pmuludq
in
roll
xchg
sarl
mov
inc
jl
pop
iret
out
mov
rcrb
addr16
loop
test
stos
jge
mov
icebp
mov
fisttpll
rcrb
ss
in
push
fists
aad
mov
lahf
out
cltd
xor
push
lea
shr
add
adc
sub
mov
aas
pop
sbb
or
dec
into
xor
jno
jo
loope
imul
fst
xchg
popa
lods
xor
lret
aaa
pop
mov
xchg
jmp
fs
xor
gs
mov
and
mov
fdivl
jge
std
loop
leave
lret
cmc
js
pusha
adc
fists
jo
imul
jle
scas
fsubrs
and
push
jo
add
pop
or
add
andl
xor
cmp
test
ret
test
stos
xchg
pop
out
out
es
jmp
or
loopne
mov
add
jae
decl
jp
jecxz
imul
sbb
fsubs
xchg
es
test
rolb
repnz
jmp
pop
mov
sbb
cmc
bound
mov
rcrb
xor
in
push
movl
ja
cmp
mov
pop
sbb
pop
out
iret
dec
push
test
es
mov
mov
shrl
ds
inc
cwtl
cmpsb
ret
jle
push
xchg
jp
add
shll
daa
mov
das
out
dec
outsl
sarl
sbb
movsl
mov
sbb
dec
xor
jbe
scas
push
gs
jp
movsb
fsubr
lret
sbb
fisttps
sbb
xchg
pop
cmp
outsl
mov
movsb
loope
dec
pop
loopne
imul
mov
cmp
decb
mov
push
fwait
adc
cltd
jmp
aaa
adc
xchg
dec
xor
fcmovb
mov
iret
xchg
cwtl
loope
or
ss
aas
stc
add
test
mull
out
je
subb
pop
mov
jl
icebp
pop
shll
repz
add
jnp
mov
mov
and
les
add
mov
shlb
dec
in
fs
lock
dec
test
mov
pop
testl
loop
div
xchg
lret
mov
mov
mov
xchg
mov
repz
mov
rcrl
jp
out
es
xchg
ds
fsub
sub
loopne
xor
mov
loopne
sbb
jb
inc
mov
sub
mov
imul
push
mov
repz
dec
repnz
imull
jl
adc
insb
stc
jns
js
test
arpl
inc
pushf
arpl
sub
sub
and
inc
jmp
push
rcr
or
mov
les
addr16
je
jns
rcll
adc
cmp
outsl
pop
push
es
sbb
fsubrl
sbb
or
sbb
mov
pop
es
popf
fstl
sub
outsl
add
jne
pop
mov
mov
jne
jl
iret
test
lea
mov
in
mov
fimull
shrb
push
mov
sar
dec
shrl
cmp
mov
inc
fdiv
xor
pop
adc
mov
aaa
in
nop
sahf
fnsave
aam
mov
lds
fwait
aad
jle
lret
xchg
xor
jo
rorl
dec
push
jae
or
stos
leave
cmp
jo
sbb
fisubl
mov
sbb
mov
js
sarb
jne
call
xchg
int
or
icebp
popl
fwait
xor
pop
jge
test
daa
ret
arpl
ds
cmpsb
mov
hlt
xor
rolb
pop
dec
xor
cmp
pop
in
icebp
mov
aaa
icebp
mov
in
push
pop
lcall
jge
aaa
push
push
dec
sub
push
in
test
rclb
dec
pop
cmp
inc
sbb
shlb
rcll
stos
sub
sub
push
xor
shrl
sub
mov
pusha
repz
sub
rclb
shll
push
push
arpl
xchg
mov
outsb
gs
dec
add
mov
idivb
push
clc
in
jle
dec
lods
leave
inc
cmp
jne
dec
lret
ds
repnz
fcmovb
add
dec
lret
pop
xchg
xchg
int
mov
ds
enter
mov
or
add
lods
mov
movl
push
fimuls
push
out
jb
pop
adc
pop
stos
in
lcall
mov
je
pop
iret
arpl
xlat
jne
fs
pushf
xor
orl
mov
stc
and
adc
and
rorl
mov
sarb
and
fwait
popa
mov
push
push
rcr
push
ds
loopne
in
push
sub
js
jmp
insl
jno
ljmp
std
inc
outsb
or
daa
test
sub
xor
cmp
fmull
nop
scas
pop
dec
jp
stos
out
jle
in
iret
push
xchg
mov
dec
fimull
cmp
jge
in
fsubp
mov
xchg
add
cmp
lret
imul
adcb
mov
dec
lcall
mov
sub
jp
adc
jne
mov
jnp
sbb
dec
push
daa
pusha
jl
divl
push
xor
mov
in
sti
mov
addr16
sbb
push
sub
scas
cmp
pop
sbb
sbb
dec
xchg
or
adc
xchg
sub
pop
ss
xor
push
mov
pop
mov
imull
xlat
gs
xchg
xlat
mov
fst
adc
pop
daa
fsts
xor
subl
out
mov
dec
push
sub
movsl
outsl
inc
ror
or
ss
test
xor
push
inc
in
jmp
jecxz
daa
shrb
mov
rcrb
mov
sub
jmp
jmp
mov
imul
pop
testb
and
mov
stc
mov
je
mov
int
mov
mov
fmuls
inc
pop
fwait
aad
add
cmc
mov
push
pop
je
or
inc
js
jbe
jno
aam
jp
out
jnp
lea
aad
push
in
repnz
lea
je
dec
mov
inc
xor
mov
push
jmp
lahf
inc
add
xor
jbe
lock
pop
ds
push
jns
and
cmp
xchg
fildl
fbstp
jnp
icebp
push
loopne
sti
lock
push
inc
les
inc
mov
mov
push
dec
loope
bsf
sti
xor
shl
cmp
sub
add
mov
in
mov
xor
sub
or
sub
adc
in
daa
jp
mov
xchg
jecxz
mov
scas
jnp
inc
pop
bound
pop
pop
shlb
sub
imul
ss
xor
adc
mov
mov
mov
outsl
inc
imul
dec
sbb
ss
ret
jge
add
in
jbe
inc
mov
fnstenv
mov
and
or
mov
in
sub
aam
dec
bound
pop
out
adc
push
jb
test
loopne
cmc
or
sub
push
push
dec
mov
dec
popf
adc
loope
or
ret
push
dec
ljmp
out
cmp
inc
or
aad
mov
mov
xchg
ja
adc
mov
jbe
cmpsb
fistps
cld
scas
or
lea
cmp
shl
js
mov
ss
mov
sbb
cltd
adc
push
pushf
push
mov
icebp
cmpsb
arpl
adcl
data16
mov
mov
call
daa
mov
aaa
ss
es
mov
and
mov
sub
stos
sub
add
jns
dec
aas
xchg
adc
inc
mov
jecxz
pop
shrl
sahf
mov
pop
cmp
bound
cwtl
fisttps
pushf
bnd
outsl
popf
mov
inc
or
setbe
js
jg
inc
xchg
push
jo
gs
dec
mov
paddusw
lods
mov
jp
iret
ret
xchg
dec
or
cmpsb
jl
pop
or
jne
loop
scas
icebp
cltd
jp
dec
pop
mov
aam
testl
or
or
jle
xchg
cmp
leave
test
icebp
fwait
sbb
aam
dec
xor
jne
cmp
dec
sub
sbb
or
outsb
push
shlb
lret
adc
int
out
adc
out
and
cmp
xchg
jp
pop
data16
dec
or
movsb
cld
dec
lods
xor
loop
mov
ss
ja
jmp
pusha
mov
ljmp
mov
imul
fs
mov
testl
scas
aas
pusha
inc
mov
sub
xchg
cld
std
or
jmp
xchg
cmpsl
mov
mov
mov
add
jnp
dec
jecxz
or
cmp
push
jge
xchg
add
bound
test
push
daa
mov
sub
sub
clc
pop
outsb
push
xchg
leave
sti
mov
push
push
and
stc
mov
data16
nop
xor
jl
or
ds
jnp
sahf
ss
arpl
cs
mov
xchg
imul
stos
pop
pop
aad
and
pop
loopne
dec
inc
jmp
ret
pop
out
cmc
push
lods
push
aaa
pop
lret
sbb
loopne
outsl
add
movsb
push
stc
aad
add
lods
dec
mov
rcrl
inc
aaa
cmp
in
les
push
fnsave
push
push
stc
or
dec
mov
adc
sub
dec
xchg
sub
xor
les
pop
in
cmp
loopne
clc
mulb
sti
enter
mov
stos
cmp
add
xchg
mov
movsl
fiadds
push
sbb
push
daa
push
scas
pop
mov
addb
out
ret
jle
mov
push
push
movb
xchg
call
cmp
les
adc
inc
sub
loopne
push
xchg
mov
sbb
jno
fstpl
mov
bound
push
mov
mov
les
push
inc
mov
cmp
icebp
xchg
add
aam
mov
pop
mov
ds
fsub
testl
jge
xchg
fsubrl
push
mov
and
js
sbb
push
je
sbb
adc
lcall
mov
js
mov
movsb
in
jp,pt
sbb
mov
sbb
and
pop
cld
mov
icebp
mov
jl
sbb
mov
gs
dec
adc
in
andl
out
sbb
aaa
xchg
lret
pusha
xlat
push
fsubrl
xchg
jno
cld
sub
sub
pushf
xor
mov
push
pop
sti
insl
lcall
or
add
xlat
dec
sti
out
ficoms
add
dec
fwait
pop
mov
aad
fsub
sbb
xchg
mov
mov
int
mov
daa
xchg
orl
cld
xor
sub
lret
leave
jecxz
in
push
mov
std
jb
and
cmp
add
stos
push
lahf
loope
and
and
xchg
aam
insl
push
fiaddl
mov
ds
ljmp
add
xchg
cmp
or
das
pop
adc
mov
or
shll
mov
scas
cmpsl
mov
fidivl
add
jnp
mov
ja
xchg
test
cmpsl
std
sub
jns
jle
adc
mov
mov
out
ja
xchg
mov
call
pop
hlt
into
cmp
inc
movsl
sbb
cli
xor
inc
stos
into
out
cwtl
inc
mov
lds
loope
sbb
daa
cmpsb
xor
int3
pushf
push
shrl
adc
xchg
cmpsb
inc
pop
mov
xlat
clc
xor
cmp
mov
push
xor
mov
or
outsb
cmc
pop
test
sbb
cli
inc
add
ret
sub
scas
stos
mov
dec
movsl
bound
pop
jle
int3
mov
cwtl
xor
sub
pop
cs
cltd
scas
repnz
pop
das
out
add
add
int3
pop
pop
mov
add
add
cltd
xchg
das
scas
mov
out
ret
enter
loop
inc
cmp
out
and
jg
inc
out
xchg
pop
fildll
jmp
xor
xchg
push
out
pop
jne
xlat
in
pop
test
ret
in
fsub
cmp
and
loope
outsl
or
xorb
xchg
stos
xchg
loope
xorl
out
push
ret
rolb
xchg
jecxz
or
rcll
mov
push
js
mov
cs
cmpxchg
lods
mov
test
es
cwtl
pushf
bound
insb
pop
outsb
dec
je
push
push
fwait
push
sub
add
aas
jecxz
push
jne
mov
xor
pushf
clc
rclb
or
leave
pop
sbbl
les
pop
pop
pop
pop
ret
icebp
adc
jno
sub
hlt
mov
mov
pusha
xchg
push
add
add
mov
jle
imul
out
xor
push
fists
sub
xchg
arpl
push
adc
xchg
xchg
imul
lds
xchg
mov
push
and
in
cmpl
jne
jo
and
dec
add
repnz
mov
stos
testl
cmp
sub
scas
scas
flds
push
out
jle
mov
xor
sub
les
jecxz
imul
lret
pop
or
lock
fs
adc
lock
jno
ss
xchg
push
dec
cmp
cld
push
sbb
dec
or
and
test
jnp
jno
int3
std
test
inc
ret
mov
int3
outsl
pop
ds
iret
fidivs
lea
mov
pop
jns
inc
add
leave
idivb
daa
jmp
pop
stos
mov
mov
andl
lea
jle
fs
lcall
fdivp
lds
aad
xchg
fbstp
push
xchg
cli
or
pop
pop
xchg
or
ret
push
sub
out
icebp
pusha
or
in
mov
mov
inc
or
cmp
add
popa
and
and
jle
xor
mull
mov
sbb
daa
jp
or
stos
jae
iret
pusha
ret
dec
push
outsl
out
out
test
sbb
cld
inc
xchg
je
inc
arpl
or
out
fisubs
pop
popa
push
clc
sub
dec
inc
jno
inc
sub
jmp
dec
jmp
cmp
sub
sub
push
push
push
fildll
lds
loope
xchg
and
cli
mov
sbb
pushf
and
mov
movsl
cmp
aam
loopne
ret
jbe
test
test
jne
iret
sbb
pop
je
das
push
adc
clc
sbb
sbb
jge
xchg
and
fcomps
es
rclb
loop
cmpl
fnstcw
data16
xor
enter
jbe
xor
adc
mov
jno
and
aad
inc
xor
data16
and
cltd
in
ret
push
dec
dec
push
sbb
repz
mov
mov
push
cmp
cmp
out
jge
jb
and
mov
adc
mov
adc
out
lock
int3
aam
call
jle
inc
xorb
push
call
into
int
pusha
stc
dec
rclb
sub
out
sub
or
mov
arpl
cmpsb
jbe
cmp
imul
inc
mov
jg
out
sub
cmp
add
pop
and
iret
push
ficomps
xchg
orb
aas
inc
cmp
mov
xchg
ljmp
movsl
stc
jae
pop
xchg
and
stos
fnstcw
test
mov
cmp
push
imul
mov
xor
cmpsb
les
cmp
push
xchg
pop
xor
inc
jg
pop
or
sub
out
cmc
movb
jnp
mov
sbb
out
sub
adc
pop
mov
insb
push
pop
mov
test
and
in
or
and
push
iret
sbb
mov
adc
lds
xchg
mov
cmp
lock
dec
jg
jae
xlat
insb
cli
mov
sbbb
xchg
into
hlt
or
shlb
sarb
and
cmp
sbb
iret
pusha
sar
and
adc
adc
inc
mov
cwtl
and
loope
xchg
out
shll
pop
repz
cli
push
or
cwtl
shrb
sbb
xor
xor
shl
jge
pop
pop
icebp
mov
loop
aas
cmp
mov
in
loop
dec
mov
add
dec
xor
enter
mov
adc
jbe
bound
mov
ss
arpl
daa
or
cwtl
jne
mov
imul
lahf
imul
add
iret
loop
cld
fs
cmpsl
mov
pop
out
notb
add
add
cs
movsl
push
inc
sub
jmp
adc
dec
bound
fs
jmp
imul
lds
inc
sbb
adc
mov
mov
xor
xchg
pop
xchg
cwtl
xchg
iret
andb
aas
inc
out
mov
and
leave
ja
jp
fmull
add
pop
into
push
clc
xor
rcrl
aam
sub
and
push
mov
pop
fptan
pop
and
fidivrl
inc
adc
sbb
fchs
xchg
sbb
pushf
pop
dec
std
and
fwait
add
pop
out
js
hlt
rcr
and
fwait
pop
sbb
mov
mulb
inc
and
dec
or
fmull
cmp
mov
test
iret
and
mov
mov
xchg
pop
leave
jb
mov
cmpsb
xor
jg
xchg
push
or
or
mov
fwait
mov
pop
jno
and
scas
stc
daa
cltd
popa
pop
lds
nop
mov
xor
mov
dec
jb
stos
xchg
mov
mov
dec
mov
cmp
addr16
mov
dec
aad
mov
lea
outsl
ret
dec
les
mov
mov
lahf
lcall
ret
xchg
cmp
sti
or
outsb
das
pop
sahf
cmp
lahf
mov
dec
xor
stos
cs
mov
ljmp
movsl
ja
aas
scas
jnp
add
cmp
mov
negb
mov
std
or
stos
push
mov
je
mov
push
pop
mov
add
pop
inc
pop
icebp
push
lds
pop
daa
arpl
xchg
or
pop
pop
rcr
and
ret
ljmp
fs
ds
xchg
xlat
jne
cmc
add
jl
popf
xor
jle
sub
scas
dec
mov
dec
lods
inc
sub
sub
rcll
jno
addl
lds
lcall
addr16
push
outsb
ficoms
xor
xor
data16
push
in
les
or
sbb
and
cmp
inc
cmp
loopne
addr16
imul
imul
adc
and
negb
loopne
mov
lret
jno
pop
fwait
cmp
xchg
mov
nop
xor
push
mov
add
fidivrs
xor
jl
mov
mov
loope
jmp
dec
clc
repz
jne
jo
adc
cmp
fdivrp
and
adc
sahf
dec
jb
popa
adc
inc
sbb
or
fists
xlat
stos
cwtl
xor
xchg
mov
stos
cld
ja
cld
mov
rorb
or
fisubl
test
mov
and
fiadds
loope
aaa
dec
mov
push
pusha
mov
cld
insl
in
jb
push
adc
inc
lahf
dec
aam
dec
add
inc
pop
push
cmp
ljmp
mov
cmp
movsl
mov
decb
sub
xchg
cmc
pop
scas
mov
xor
sbb
xor
into
sahf
sub
inc
cld
ja
loopne
hlt
fistpl
add
mov
bnd
in
ja
add
sti
loop
xor
dec
push
rcll
sbb
les
in
and
cmpsl
loopne
notl
xchg
jecxz
add
and
adc
icebp
jl
xchg
test
and
xchg
cli
inc
xlat
xchg
adc
loopne
das
and
popf
mov
dec
jne
push
add
outsb
inc
aas
push
jns
push
fwait
mov
int3
or
or
stc
sbb
sahf
dec
je
insb
ss
popf
pusha
jl
inc
and
sbb
lret
sbb
outsb
lahf
jae
jl
mov
pop
in
movsl
jo
dec
pop
mov
sbb
insl
test
inc
xchg
mov
faddp
shl
xchg
mov
xchg
inc
fildl
xchg
jno
xchg
ret
dec
add
or
or
out
ss
mov
subb
sahf
jo
shlb
cld
or
cli
add
ja
or
sub
sahf
out
enter
pop
jmp
or
mov
push
inc
dec
dec
aaa
es
inc
cmp
mov
ss
icebp
mov
jne
xor
popa
mov
push
xchg
adc
fs
icebp
fisttpll
pushf
xchg
pusha
jno
les
loope
jno
add
mov
lods
in
push
push
lds
mov
inc
push
dec
cmp
mov
inc
mov
jmp
flds
mov
ret
mov
push
leave
stos
scas
add
imul
jle
cli
push
mov
loope
sbb
scas
cmp
daa
and
in
aam
dec
xchg
imul
or
ret
mov
and
pop
dec
push
into
sub
jnp
fsub
xchg
xchg
out
je
mov
movsl
xchg
fwait
clc
icebp
fildll
adc
inc
js
loopne
cli
popa
imul
jae
add
mov
and
stc
repz
fwait
out
jle
out
out
cli
out
push
test
ljmp
mov
adc
push
xchg
rcll
inc
fbstp
or
test
pop
jge
jecxz
in
lret
xor
aad
mov
pop
das
or
fists
test
rclb
je
pusha
clc
arpl
cli
sti
mov
push
pop
add
mov
addr16
add
push
and
push
jne
inc
inc
dec
inc
pop
lods
jle
cwtl
mov
inc
mov
cwtl
call
pop
jmp
xchg
sbb
mov
sub
push
jo
xchg
jbe
cmp
add
pop
fs
pop
dec
jmp
xchg
jge
jb
push
xchg
in
adc
sahf
lea
out
lods
add
add
mov
adc
in
shl
lods
leave
out
int
out
add
fs
imul
xchg
mov
mov
nop
mov
or
or
cmp
jnp
lret
dec
loope
ret
fistps
xchg
outsl
mov
in
sbb
mov
add
jo
aad
lea
std
xchg
jo
cmpsb
scas
sbb
jle
sbb
sbb
out
mov
mov
pop
xchg
pop
pop
cmp
xchg
xchg
inc
cwtl
stc
sbb
lock
push
sbb
cmp
cmpl
movsl
pop
jae
sbb
mov
fisttpll
and
cltd
add
add
jae
addr16
aas
aam
pop
fucomi
inc
xchg
movzbl
push
sbb
andb
stos
lahf
fiaddl
pop
pop
push
mov
mov
sub
push
icebp
sti
inc
xchg
int3
mov
andps
dec
gs
insb
hlt
faddl
fmull
adc
out
test
sub
push
cltd
inc
sub
push
push
and
jnp
aaa
arpl
xchg
shll
lcall
push
and
fistpll
out
shll
lods
or
pop
sbb
inc
dec
mov
shll
enter
call
lds
pop
xchg
mov
and
notb
push
sbb
imul
mov
mov
sbbl
pop
add
adcl
push
in
push
sub
xchg
push
push
xor
icebp
fisubs
mov
out
xchg
jmp
mov
out
imul
add
push
jg
hlt
xor
test
push
xchg
sub
dec
out
icebp
repz
mov
push
icebp
sub
lea
cltd
clc
imul
jp
or
out
or
inc
xchg
or
jg
dec
cmp
and
fsubp
ja
arpl
cs
adc
sbb
cwtl
sahf
cmc
shrl
mov
pushf
inc
in
insl
outsb
xchg
enter
mov
push
dec
into
jnp
imul
inc
push
cli
mov
iret
push
jbe
sbb
mov
push
jns
sbb
ljmp
shl
cmp
xor
in
mov
sbb
shlb
mov
inc
cmp
cwtl
and
loop
shll
cmpsb
test
in
mov
cmpsl
pop
mov
into
xorl
sbb
xor
inc
push
into
mov
push
cltd
pusha
pop
mov
movsl
bound
and
icebp
mov
pop
or
xchg
andl
scas
cmpsb
jp
or
popf
push
sti
sub
in
test
pop
xor
sbb
faddl
push
xchg
jecxz
and
js
xchg
and
xor
mov
popf
mov
mov
xor
inc
mov
adc
mov
mov
call
inc
push
sub
rolb
gs
out
and
in
out
lea
fwait
jmp
inc
movsl
inc
cld
xor
mov
iret
xchg
jecxz
mov
mov
jecxz
das
dec
add
mov
je
cmpsl
and
shlb
cmp
jbe
or
in
outsl
mov
push
push
mov
adc
imul
xchg
add
sbb
push
mov
cli
and
icebp
sbb
out
jl
fmuls
jl
fdivl
xchg
aad
fisttpl
xchg
cmp
adc
loop
stos
jmp
ds
inc
stc
sbb
lea
repz
mov
xor
adc
xchg
pop
xor
xor
imul
xor
aas
jle
dec
xor
icebp
js
or
mov
push
cmp
imul
repnz
xchg
xor
fs
rcr
lds
imul
fildl
pusha
fdivrl
mov
jne
movsb
cmp
cmp
test
jae
xor
inc
dec
sbb
pop
sub
jge
ds
mov
popf
outsb
loope
lret
pusha
jmp
clc
push
stc
inc
insl
les
pushf
js
mov
bound
push
mov
fs
pop
mov
out
pop
or
sub
sbb
cmp
cmp
mov
mov
cmp
mov
pop
gs
push
aam
scas
cmp
and
daa
add
xchg
stc
data16
adc
test
sub
sbbb
mov
mov
xchg
les
push
jb
in
cmpsl
sbb
int3
call
mov
aad
lret
or
mov
lds
rorl
nop
pushl
sbb
sbb
popf
xchg
shl
test
xchg
dec
xchg
lcall
xor
int
jp
cmpsl
es
jmp
addw
outsl
scas
aaa
xor
sbb
mov
repz
jae
push
add
ret
xorb
ss
ss
pop
scas
mov
pop
ljmp
lods
fcmovne
std
rcr
loop
ret
jne
cmp
jmp
test
mov
mov
mov
pop
mov
call
out
in
pop
and
ret
subb
adc
les
cmpsl
xchg
pop
inc
rclb
lds
sub
ffreep
push
inc
or
stos
adc
pop
pop
cwtl
inc
testl
mov
and
dec
jbe
push
cmpsb
push
cmp
mov
adc
jl
insl
call
adc
xor
dec
add
cmpsb
shl
or
sub
ja
in
xchg
ja
cmp
mov
leave
or
test
or
out
xchg
lret
dec
aam
pop
test
or
enter
in
cmp
loope
add
rcr
adc
push
mov
dec
icebp
movsl
arpl
cs
push
pop
mov
mov
xor
nop
test
adc
sub
cmp
cld
fwait
push
add
push
add
jae
pop
sub
cmp
or
outsl
mov
pop
mul
xchg
push
gs
not
outsb
aad
hlt
inc
popf
clc
push
js
jo
outsl
popa
jge
shll
lret
add
addr16
stc
dec
cwtl
sbb
scas
inc
mov
jg
and
ret
mov
aas
in
push
or
cli
stos
insl
cmpsl
xchg
js
sahf
loope
out
aaa
cltd
movsl
dec
shll
mov
icebp
xchg
mov
xor
scas
shrb
xchg
les
lahf
inc
inc
sub
fisttpl
loopne
push
add
push
mov
push
dec
leave
xchg
sub
cmp
cli
rcrb
xchg
push
fwait
xor
adc
js
mov
imul
pop
pop
lret
fisubs
adc
and
xchg
xor
sbb
and
sarl
cmp
repz
push
mov
cmp
pop
mov
sbb
rcrb
std
mov
mov
mov
fcomps
inc
movsb
sbb
loopne
pop
xchg
dec
ret
test
and
adc
xchg
rolb
pop
adcb
inc
pop
pop
sti
fisubrs
xchg
mov
inc
dec
cmc
pop
and
mov
lret
jg
push
call
out
jbe
mov
shlb
jno
in
fiadds
mov
jne
push
jp
and
out
sbb
dec
pop
out
dec
int3
daa
ds
mov
lret
lret
call
xchg
pop
pushf
adc
nop
or
ret
addr16
jle
sbb
pop
outsb
sub
cmpsb
sbb
jnp
repnz
dec
addr16
and
mov
shlb
bound
jbe
shll
aaa
test
dec
inc
idivl
lds
cmp
cmp
int3
sbb
mov
movsb
imul
or
add
push
adc
cmp
xor
and
clc
loope
clc
add
jg
sbb
jmp
clc
pop
sub
scas
or
push
fldenv
mov
nop
inc
push
push
cwtl
fistps
jno
sbbb
rcll
andl
in
jb
sub
movsb
sbb
add
or
adc
pop
mov
mov
adc
adc
fsub
or
cmc
mov
xor
push
push
shrb
mov
fmull
pop
or
inc
loop
push
xor
add
push
push
clc
mov
insl
push
outsb
out
lea
lods
mov
and
es
bt
into
push
and
mov
iret
pop
xor
pop
test
jns
and
xchg
ficomps
pop
push
pop
jne
pop
stos
push
inc
add
mov
push
add
mov
and
mov
cwtl
jp
adc
pop
xor
sub
or
add
cmpsl
clc
xchg
call
jnp
inc
cs
addr16
call
mov
popa
dec
pop
hlt
or
inc
dec
imul
cld
add
xchg
push
jge
sub
subl
sub
inc
out
xor
and
dec
fs
xchg
rol
int
in
push
cwtl
cs
mov
dec
push
xchg
xlat
int
ja
scas
out
js
jmp
sub
xchg
lods
push
rcr
hlt
test
add
jns
mov
push
rolb
dec
cwtl
fiaddl
fcoms
rcll
nop
cmp
and
jae
shr
out
out
outsb
xor
mov
xchg
cmp
dec
mov
or
or
xor
xchg
dec
dec
rcrb
dec
fwait
push
sub
repnz
mov
pop
dec
cwtl
fildl
mov
nop
imul
hlt
rcll
or
jecxz
das
loope
inc
pop
mov
clc
ja
add
cld
insb
sbb
mov
jecxz
lret
xor
jge
fmul
out
xchg
jne
rcrl
gs
jle
shlb
sub
test
ss
push
movsb
pop
lcall
in
sar
addl
test
repnz
pop
rcrb
mov
sbb
test
inc
mov
sub
stos
inc
data16
rcr
push
pusha
fwait
roll
in
rcrl
stos
test
fwait
mov
cmp
and
xchg
sbb
xchg
jle
push
xor
mov
mov
pop
in
push
push
in
cltd
data16
mov
js
jmp
pop
dec
test
aas
push
xlat
and
cwtl
sahf
mov
or
out
or
std
jae
das
xor
pop
fdiv
inc
rep
cmpsl
jle
icebp
shr
loopne
out
or
xchg
out
andb
je
sub
mov
pop
mov
or
cltd
sub
fildll
sbb
xorl
js
pop
sti
notl
and
call
std
test
mov
mov
push
pop
sahf
ljmp
aas
pop
pop
push
bound
push
pop
mov
shlb
pop
or
mov
or
sbb
mov
push
sbb
aam
mov
gs
jnp
pop
dec
pop
add
cmpsl
inc
sub
adc
sub
cmp
pop
fdivrs
and
push
std
mov
es
lods
add
inc
push
loop,pn
pop
push
rorl
and
pushf
cmp
aas
pop
dec
cmc
dec
mov
std
lcall
outsl
jns
sub
mov
sub
lret
dec
mov
mov
loopne
rcll
loop
or
xor
adc
and
jle
movsb
sbb
mov
orl
fimuls
clc
pushf
cmp
out
lcall
inc
xor
dec
stc
lods
xchg
loope
jge
pusha
fldz
movsb
or
leave
jno
lds
inc
xchg
notl
cmp
mov
nop
nop
cltd
add
and
dec
in
mov
test
mov
ret
in
dec
cld
sub
icebp
lcall
or
sub
pop
in
rolb
push
mov
dec
jp
stos
pop
xor
inc
rcrb
negl
push
and
sub
test
out
push
xchg
xor
and
rcll
fstl
push
mov
js
out
stc
sub
xchg
lcall
popa
mov
into
imul
dec
xchg
rol
test
pop
mov
jge
mov
div
jo
push
xor
mov
repz
shl
stos
test
push
in
adc
mull
pop
pop
je
dec
adc
xchg
mov
xchg
insb
xchg
data16
dec
rorb
pop
xor
bt
mov
fiaddl
mov
cmpsb
int3
pop
xchg
lret
cmp
push
mov
mov
outsb
cs
adc
push
into
popa
mov
aam
icebp
stc
int
dec
insb
push
scas
push
xchg
cmp
inc
sahf
mov
jmp
fs
divb
cwtl
out
push
out
xchg
icebp
int3
in
cld
jns
push
jle
xchg
add
daa
sub
in
mov
mov
ljmp
sahf
mov
scas
xchg
rcpps
xor
sub
repnz
in
out
dec
dec
stc
mov
mov
ds
in
add
iret
xchg
xor
dec
add
sub
imul
lcall
fwait
dec
ljmp
pop
loope
into
pop
inc
sbb
pop
in
pusha
pop
in
fld
add
repz
mov
popf
adc
enter
xor
insb
mov
loopne
push
or
ja
outsl
cld
pop
ret
in
in
pop
hlt
add
sti
xor
scas
mov
sbb
orl
pop
push
gs
pop
ljmp
push
mov
jae
jp
and
pusha
out
jp
inc
cmc
pop
mov
pushf
rorl
sub
jp
addr16
pop
sub
jbe
aam
lahf
and
sub
sub
mov
xor
leave
dec
push
jne
test
fidivrs
jo
sbb
or
enter
bound
dec
mov
inc
fidivl
mov
jge
or
pop
imul
loop
out
pop
sub
add
dec
mov
data16
data16
aad
mov
ficomps
in
mov
ret
in
div
sahf
jbe
jnp
loop
push
adc
test
test
mov
dec
xlat
loopne
pop
or
sbb
inc
dec
test
aam
imul
sub
ss
xchg
jbe
cmp
icebp
mov
es
aaa
or
jo
sbb
dec
lret
stos
xor
cmp
xchg
mov
xchg
aam
pop
jbe
lods
addr16
fnstsw
shld
sub
adc
dec
fcmovne
push
adc
pop
pop
fadd
js
xchg
lret
xlat
stc
leave
pop
xor
dec
push
int3
pop
sbb
mov
outsl
ja
jmp
stos
pop
sarl
and
insb
and
stos
or
xor
dec
lods
jp
jecxz
dec
add
lds
or
jecxz
jbe
jmp
jle
mov
fsubrl
mov
mov
ss
cwtl
pop
jecxz
xchg
mov
jge
and
mov
jb
sub
jg
mov
add
jecxz
imul
mov
xorb
lods
add
aas
aam
push
nop
jmp
lods
or
andb
cwtl
mov
jno
pop
pop
xchg
out
cmpsb
fidivs
adc
push
gs
add
int3
and
repnz
xchg
clc
mov
jne
dec
cmove
ds
int3
mov
pop
pusha
push
cmpsl
inc
jp
push
in
xchg
into
xchg
lcall
stos
adc
repnz
or
pop
insb
fs
sbb
sbb
pop
lea
dec
bswap
or
push
push
or
std
test
lret
orb
push
inc
dec
sbb
sbb
fnstsw
push
fcoms
cmp
mov
jp
mov
cli
mov
sti
jo
fadd
or
push
push
ret
mov
push
mov
sarb
xchg
xchg
mov
xchg
fsubrs
or
pop
rorw
xchg
mov
push
daa
jl
ja
jmp
enter
mov
mov
ret
push
jae
or
das
xor
fucomi
loopne
fnstenv
shll
ds
icebp
jl
rclb
scas
and
jp
sahf
es
sbb
sbb
insb
adc
pop
push
fnsave
or
aam
inc
mov
sub
leave
cwtl
pushl
push
sbb
xchg
jmp
xor
xor
mov
addr16
sysexit
lret
subl
pop
js
in
sbbb
mov
cmp
mov
mov
lret
cmpsb
mov
sub
dec
xor
and
push
inc
adcl
mov
pop
call
mov
xchg
pop
xchg
jns
mov
xor
dec
jne
add
and
mov
rcrl
xchg
es
xor
insl
jecxz
ja
xchg
mov
ja
dec
mov
dec
mov
xchg
jp
adc
movsl
xlat
mov
xchg
outsb
int3
mov
dec
mov
xlat
fmuls
add
pop
inc
and
fadd
push
jae
fnstenv
xor
mov
sub
loop
sub
mov
iret
pop
dec
pop
lahf
loop
fldl
push
in
lahf
es
and
stos
fwait
shlb
cs
xchg
xchg
cmc
inc
scas
mov
inc
mov
xlat
inc
daa
push
fsubrl
cs
push
push
sbb
sarb
out
jg
cwtl
aaa
mov
jmp
push
dec
xchg
lods
ja
rorb
and
das
pop
lock
and
fldcw
mov
mov
cltd
in
and
sub
jmp
nop
xchg
in
mulb
ja
out
or
mov
sub
mov
add
mov
sbb
push
sbb
aas
fsubr
shlb
cmp
cmpb
in
xor
push
inc
adc
and
pop
outsb
imul
scas
stos
jae
call
jmp
sub
jae
jmp
xor
or
shll
setns
mov
or
and
cmpsl
int
lods
adc
rol
ret
xchg
cwtl
xchg
jmp
orb
sbbb
push
cmp
sbb
sbbb
mov
and
rorb
inc
add
pop
sub
push
fs
jle
sub
data16
imul
nop
dec
stos
or
subl
jge
push
setle
loopne
pop
lods
in
jbe
jo
lcall
movb
inc
fs
nop
inc
fdivrl
iret
inc
imull
jl
fistpll
cmp
mov
or
dec
imul
xor
pushf
mov
xchg
aam
fisttpl
fnsave
ja
test
push
mov
add
sbbb
cmp
daa
lcall
cmp
inc
push
add
mov
pushw
cli
pop
imul
inc
into
or
or
mov
imul
mov
orl
xor
mov
dec
add
rorb
jg
stc
lahf
scas
sbb
aam
filds
test
xlat
pop
aam
adc
jnp
int
push
add
mov
outsl
rolb
movsb
xchg
xchg
fsub
insb
pusha
fsubrs
or
ds
sbb
repz
pop
mov
add
aas
out
inc
outsl
in
push
pushf
fidivl
bound
push
push
frstor
mov
pop
call
fmul
aas
sbb
in
rcrb
and
out
jbe
js
aam
jns
aas
sub
or
mov
les
mov
dec
icebp
mov
shrl
add
test
int3
sub
in
dec
repz
lcall
outsb
sti
mov
shll
dec
mov
mov
lock
xchg
or
outsb
pop
into
shrb
mov
sbb
hlt
jns
or
jns
mov
outsb
xor
or
ret
lsl
in
mov
or
mov
lcall
dec
pop
insb
nop
mov
or
xchg
outsb
mov
mov
lahf
push
movsl
test
jbe
imul
mov
imull
popf
fisubl
push
mov
jns
dec
fwait
lcall
sbb
xchg
into
jle
outsb
inc
dec
lcall
jl
push
xor
push
je
dec
mov
jp
mov
add
cli
xlat
xchg
fadds
mov
jnp
mov
jb
mov
xor
int3
lahf
pop
rcrb
shll
pop
adc
test
mov
jecxz
add
movsb
sarl
int
enter
add
pop
push
cld
jb
or
push
out
pop
xchg
rcr
addl
fdivrl
and
outsl
sub
das
xor
dec
or
sbb
adc
mov
mov
or
in
cli
iret
xchg
scas
push
mov
sbb
shr
mov
lods
mov
xlat
dec
ficompl
push
jp
subl
addr16
cmp
les
cwtl
or
mov
imul
push
inc
push
lea
addr16
fucomp
movsl
jecxz
jecxz
jp
push
daa
dec
faddl
scas
xchg
repz
fdiv
dec
push
mov
fadd
push
idivb
sub
lods
cli
push
aam
jb
add
sbb
sub
dec
mov
pop
out
mov
push
loope
pop
ret
or
mov
sbb
push
data16
ja
fwait
mov
cmpsb
rcrl
cwtl
pop
test
mov
sbb
cmp
ljmp
pop
adc
push
fisttps
les
mov
inc
cmp
repz
divb
xchg
or
in
jmp
mov
jbe
cmp
dec
or
shlb
lods
outsl
mov
sub
test
bound
adc
jl
mov
inc
push
cmpb
mulb
sub
mov
outsb
shlb
rol
rorl
xchg
xchg
inc
inc
dec
imul
movsb
sub
popa
and
popa
das
pop
pop
xor
push
idivb
and
lea
sbb
test
jmp
or
cmp
jne
mov
inc
aas
std
aad
shlb
lock
stos
icebp
insb
adc
aam
add
adcb
pop
mov
mov
mov
xchg
test
xchg
mov
mov
inc
dec
xchg
scas
inc
jbe
fidivs
mov
popl
push
lcall
int3
cmpsl
in
dec
into
inc
in
mov
div
test
jo
inc
dec
add
mov
imul
out
shll
aaa
cli
fucom
sbb
fisttpll
lcall
icebp
mov
xor
inc
clc
fsubr
std
mov
jmp
add
pop
mov
inc
rol
pop
mov
dec
sbb
shlb
aad
mov
and
in
xchg
mov
jmp
mov
add
add
cltd
xor
mov
inc
cli
es
jmp
sbb
inc
clc
mov
je
stos
cmp
das
push
mov
adc
inc
or
adc
insb
lds
stos
pop
lods
pop
cmp
outsb
testb
hlt
inc
xlat
cmp
loop
jb
xor
das
loopne
and
cmp
je
data16
lahf
jg
insl
jnp
sti
xchg
jl
in
adc
idivl
clc
xchg
mov
xchg
add
insl
or
mov
cmp
fldl2e
aas
or
aaa
fcoml
jbe
sbb
and
outsl
inc
daa
scas
mov
div
adc
leave
mov
mov
ja
jo
icebp
jp
xor
lcall
mov
in
pop
movsb
js
insb
repz
and
out
cwtl
lret
push
cltd
or
out
leave
add
xchg
or
jbe
daa
out
lahf
add
fsubr
pop
push
fisttps
cltd
mov
enter
addr16
inc
roll
sti
jg
add
or
push
mov
jg
ja
xchg
cmp
pop
pop
clc
inc
lods
mov
test
sub
gs
mov
test
adc
push
mov
rorl
jo
jbe
pushf
fstpt
int3
in
sbb
stos
inc
cmp
jecxz
mov
ss
adc
cli
out
xor
pop
jge
jno
mov
lahf
mov
push
leave
insl
mov
add
pop
lahf
cmp
pop
jne
xor
mov
loopne
pop
mov
shll
movsb
aad
repz
mov
inc
loopne
sbb
mov
neg
stos
subb
fbld
or
lcall
out
cmpsb
stos
xchg
in
sti
xchg
xchg
shll
out
mov
je
in
cmpsb
jne
mov
clc
pushf
mov
mov
jg
jns
push
cmpl
push
jge
test
enter
outsl
fdivs
mov
jmp
jae
scas
jno
lock
scas
std
jno
ret
jecxz
out
cmpsb
test
out
xor
lods
rcll
repz
ljmp
movsl
or
xchg
daa
mov
stos
addr16
dec
push
pop
dec
cmp
xor
push
cmp
std
pop
push
xor
xor
dec
jl
mov
hlt
out
daa
cmp
and
adc
pop
movsl
into
inc
mov
xor
and
push
sub
lds
cli
shrl
fisttps
in
js
xchg
jecxz
pop
and
or
mov
cmp
jle
lods
call
jbe
inc
cmp
lret
ret
add
sarl
jns,pn
repnz
pusha
and
shrl
es
test
adc
mov
add
xchg
xor
push
or
mov
inc
push
xchg
xor
daa
push
negl
cltd
push
shr
rorb
cmp
mov
xor
aad
mov
cmpl
lahf
inc
sbb
setle
mov
sub
pop
fstp
pusha
push
test
xchg
arpl
dec
movb
ret
push
jge
jno
les
popf
pushf
idivb
add
mov
inc
bound
xor
mov
fwait
push
dec
pop
dec
push
shr
push
or
push
mov
fadds
in
and
out
in
or
mov
insb
push
cmpsl
mov
das
sub
lret
repnz
push
pop
lret
cmp
mov
sbb
sub
xchg
dec
sbb
je
push
lret
sahf
pop
repnz
jge
test
pop
in
mov
xlat
adc
sub
imul
push
insl
mov
fbstp
add
mov
inc
jns
cmpsb
out
push
dec
leave
cmpsb
andb
lret
jns
sbb
shrl
inc
out
and
fcmovu
arpl
insb
xlat
mov
loope
test
ret
in
out
adc
insb
loope
xchg
out
jecxz
mov
movaps
jno
push
pop
lock
or
pop
xchg
pop
das
jp
xor
scas
push
and
jecxz
cmp
dec
xchg
pop
xchg
push
and
and
add
cmc
adc
shr
and
mov
add
out
mov
inc
pop
xchg
into
adc
inc
mov
sbb
popl
mov
subl
test
lret
call
push
lock
or
negl
adc
ret
push
in
pop
jbe
sub
mov
xor
sbbb
int
lds
loopne
jbe
int
adcb
addb
fwait
sub
jbe
loopne
jle
xchg
jb
jmp
sub
sub
inc
mov
fisubs
cwtl
cwtd
mov
cli
adc
popa
fidivrl
data16
test
xor
aam
jns
jmp
add
paddusb
test
clc
pop
xor
and
jne
or
cltd
out
js
sub
jno
mov
cltd
pop
jl
or
je
mov
cwtl
sbb
aaa
xor
add
xchg
lahf
jle
inc
les
ja
pop
dec
subl
inc
sbb
mov
loop
xorb
xor
adc
inc
and
pusha
inc
dec
pusha
shll
adc
sub
fdivrs
lea
add
pop
mov
and
icebp
push
xlat
sbb
xchg
jmp
fldln2
call
ljmp
lret
pop
imul
mov
push
mov
mov
jle
loope
lods
fdivrl
jge
xchg
addl
adc
enter
das
mov
fisttps
pushf
mov
daa
sbb
movsl
sarl
imul
js
fwait
and
fildl
fs
jmp
aad
int
out
jge
xchg
ds
cmp
in
lahf
pop
shlb
or
out
loopne
xor
cli
jae
mov
and
into
cltd
jae
xor
rclb
cmp
xor
lcall
aad
fstps
sub
cmp
add
fwait
cmp
es
jle
pop
inc
xchg
shlb
inc
sbb
pop
lcall
repz
arpl
jne
test
out
stc
in
aaa
cmp
addr16
ja
mov
test
mov
popa
sub
or
push
lcall
mov
in
lret
aam
lahf
mov
roll
push
ret
jae
test
clc
inc
xchg
lahf
push
or
adc
mov
test
sub
push
pusha
sub
aaa
push
push
test
jecxz
jl
add
test
mov
push
or
sarl
push
cmp
repz
jg
push
sbb
xchg
movsl
fcomps
mov
and
nop
inc
jb
xchg
out
ds
pushf
ret
mov
sub
es
jae
repnz
push
je
hlt
and
loop
mov
je
gs
in
fildll
cltd
xor
mov
jne
cmpsb
cltd
cmpsb
test
sti
xor
out
pop
sti
jae
xchg
movsl
pop
jo
push
psrld
push
xor
sub
cld
push
push
pop
mov
aaa
inc
cmp
mov
adc
push
adc
js
cmp
ds
movsb
sbb
out
xor
insb
inc
cmc
mov
movl
jle
test
mov
xchg
clc
xor
adc
incb
lds
lcall
pop
negl
pop
adc
pop
xorb
sbb
jl
icebp
mov
jnp
fcomp
xchg
pop
dec
mov
cwtl
pop
and
mov
lods
xor
inc
xor
mov
inc
pop
jge
pushf
rorb
notl
popl
andl
clc
divb
addb
jmp
ja
pop
xchg
gs
shlb
inc
push
mov
pusha
clc
or
rcrb
pop
fnstsw
mov
das
fwait
aam
inc
xchg
dec
cwtl
jb
push
aad
lret
popf
mov
jb
stos
inc
adcb
xor
inc
stos
or
xchg
inc
mov
mov
mov
movsb
mov
and
push
mov
jns
xchg
jae
ror
popf
divb
int3
loopne
loopne
fists
pop
and
fisubrs
ljmp
dec
test
stos
sti
cltd
sub
push
jbe
dec
inc
stc
out
mov
mov
popa
scas
repz
insl
sub
call
inc
out
adc
adc
shrb
sar
inc
dec
sub
cmp
stos
dec
jb
adc
mov
pop
cwtl
or
arpl
out
dec
arpl
jno
adc
js
fdivr
cmpsb
fisttpl
xchg
stos
aad
xchg
inc
pop
mov
jmp
push
insl
inc
cmpsl
jp
push
and
mov
dec
inc
cmpsb
pop
cmp
cwtl
in
cmpsl
add
js,pn
sub
sarb
mov
subb
rcrl
imul
in
les
mov
jo
fidivs
fadd
imul
imul
stc
sahf
sbb
popf
lods
es
lea
fdivp
popa
ljmp
movsl
cmpsl
fdivl
lret
jmp
inc
mov
or
mov
jge
or
je
push
out
cmp
call
xor
adcl
mov
icebp
xor
jnp
or
jg
pop
xchg
xchg
pop
inc
push
jne
mov
iret
xchg
sub
sub
push
add
add
push
ss
and
dec
add
popa
mov
mov
nop
push
jno
sub
sub
adc
dec
push
mov
ljmp
out
sbb
mov
imul
fsubl
icebp
hlt
lds
ss
sbb
insb
faddp
fbld
mov
test
idivl
iret
jecxz
in
sbb
cmp
or
lahf
int
pushf
or
jne
or
lock
bound
sarl
mov
jns
nop
je
dec
fidivrl
mov
pop
movsl
insl
out
fwait
cmp
pusha
imul
test
inc
xor
fldcw
cltd
dec
xor
push
or
dec
dec
orl
insb
sti
shrb
lcall
add
push
sub
rcr
xchg
notl
mov
dec
fs
or
daa
into
out
jbe
fstp
inc
nop
push
loope
insb
dec
fists
mov
sarb
cltd
inc
inc
test
in
cld
fnstsw
cld
popf
call
or
cmp
pop
fbld
repnz
pop
mov
add
scas
in
lret
dec
inc
cltd
rclb
ss
xchg
test
pop
nop
sub
push
icebp
shll
xchg
js
xchg
adc
xchg
mov
mov
pusha
dec
push
sti
add
leave
call
add
sti
sub
sbb
andl
fadds
mov
call
mov
dec
aad
clc
roll
mov
add
pop
mov
sahf
lods
sbb
lcall
xchg
sub
sar
sub
jp
outsl
mov
imul
mov
pop
xchg
push
add
jmp
jne
fdivrp
addb
dec
iret
mov
shlb
daa
jns
jl
pop
jne
cmpsl
xchg
shr
xlat
jle
cwtl
jg
pop
xchg
mov
data16
cmpsl
bound
lea
jbe
mov
es
cld
ja
in
andb
inc
xor
mov
pushf
loope
add
or
int
pop
cwtl
repnz
fsubrs
mov
lret
xchg
arpl
mov
or
orl
dec
rclb
cmp
dec
cmp
scas
add
imul
inc
dec
aaa
pop
test
gs
or
fisubrs
cmp
jnp
inc
xor
std
xchg
addl
ja
test
push
mov
js
push
ja
scas
push
xor
mov
jecxz
xchg
mov
inc
in
mov
int
lods
leave
testl
xorl
out
cmp
stos
loope
lcall
lret
enter
inc
xorb
xor
shll
lods
mov
aad
cmc
in
mov
insb
loop
mov
pop
cmpsb
int
adc
adc
enter
mov
fdivl
das
xor
adc
sub
addr16
repnz
fs
pop
sahf
cmp
xcrypt-ecb
cmpsl
or
fisubl
jecxz
stos
out
cmp
mov
leave
pop
hlt
mov
scas
bound
pop
xchg
mov
pop
mov
xchg
mov
rorb
cmpsl
and
or
xor
sbb
arpl
jmp
push
inc
mov
imul
jecxz
jg
movsb
aaa
ds
push
stos
push
bound
sbb
rcll
mov
jnp
inc
insb
sub
push
rcrl
shll
push
cwtl
push
scas
push
sbb
int3
pop
dec
adc
dec
aas
mov
filds
and
outsl
xor
xchg
mov
xchg
or
stc
cmc
sub
das
and
add
sub
mov
sti
jno
or
lock
pusha
sbbb
push
mov
in
push
inc
sbb
cmc
add
xor
push
test
mov
loope
outsl
cmp
xor
sbb
and
mov
add
jle
dec
es
sti
push
es
mov
outsl
lahf
fcomps
inc
and
xchg
inc
fisubrs
popa
call
int3
ret
pop
fdiv
xchg
ds
dec
loop
or
mov
ds
and
push
add
and
pop
xchg
popl
jg
test
mov
rcrb
icebp
fnstcw
inc
pop
insb
loop
adcl
jge
jle,pt
out
ret
add
cmp
fmul
cmc
cmc
popa
outsb
jno
lea
cld
sahf
jb
les
cli
mov
repz
es
push
mov
jg
scas
sbbb
and
adc
je
pop
stc
cmp
out
xchg
fcompl
addr16
iret
jp
add
pop
mov
addr16
pop
pop
movsb
mov
inc
pop
aaa
aas
and
mov
dec
stos
jne
push
push
push
inc
aad
in
jmp
rclb
stc
sub
pop
cmpsb
fcompp
and
cmp
shrb
clc
push
testb
ret
push
inc
test
mov
inc
mov
iret
pop
fmull
das
mov
dec
cmp
mov
xchg
ja
mov
or
std
into
sbb
cmp
mov
pushf
ja
mov
orb
adc
and
aaa
les
jae
lcall
mov
cmp
mov
fcoml
mov
imul
insb
es
arpl
cmpsl
xor
or
mov
out
pop
mov
inc
dec
fdivp
push
pop
mov
insb
add
mov
xchg
inc
xlat
adc
repnz
jl
outsl
xor
jbe
jnp
rcrl
test
mov
sub
mov
clc
mov
adc
mov
jmp
add
jne
add
jo
sbb
pop
imul
pusha
js
scas
mov
imul
xor
inc
adc
sub
fdivrl
mov
es
and
pop
dec
stos
push
js
shlb
mov
mov
pop
lea
ljmp
push
loop
pop
addr16
push
imul
jmp
or
mov
les
and
xchg
insl
and
or
xor
jb
sbb
dec
icebp
push
rcr
negb
push
pop
adc
movsb
dec
lret
insl
push
push
xchg
add
push
int3
mulb
lock
int
or
stc
lods
out
cwtl
xchg
enter
loop
mov
aas
fmull
insb
fisttpl
dec
pushf
sbb
push
jae
inc
repz
ds
or
xchg
lods
adc
dec
inc
dec
roll
sarb
mov
or
mov
cmp
sti
and
fdiv
mov
mov
lods
push
movsb
jge
mov
xlat
push
loop
jno
popf
cltd
lods
xlat
imul
fstl
lods
ds
mov
arpl
add
cmp
ret
mov
mov
xor
jp
xor
aaa
nop
out
push
xchg
mov
lret
push
in
fdivrs
xor
and
xor
and
cltd
push
pop
inc
add
js
sbb
shr
and
xor
jg
movsl
sarl
pop
push
adcl
roll
push
cmp
add
aad
xor
jnp
je
push
daa
pop
in
pusha
sbb
push
sbb
mov
ret
adc
fcoms
addl
sar
inc
push
in
jmp
adc
outsl
inc
lcall
or
cmc
pusha
adc
outsl
lcall
es
and
movsb
addr16
fadds
inc
outsb
push
sub
dec
nop
ja
js
push
jae
neg
push
xor
dec
and
mov
sub
push
xchg
test
cmp
movb
mulb
push
loop
fcoml
xchg
or
push
insl
ljmp
fcompl
fisubl
jns
js
push
sbb
aad
in
sbb
into
scas
sbb
dec
scas
or
lods
dec
or
mov
pop
fcoms
in
jo
enter
iret
popf
pop
ret
fs
lods
mov
jnp
mov
fisubrl
outsb
js
inc
pushl
aam
xchg
arpl
dec
je
lret
sti
out
addr16
shlb
aas
dec
lds
repnz
sub
cld
pop
iret
sbb
and
or
repnz
ret
jb
test
scas
adc
mov
ret
test
mov
jbe
mov
mov
xchg
test
add
loope
dec
cmp
adc
and
cmp
xchg
hlt
repnz
push
pop
sbb
out
out
xor
pop
inc
fidivs
and
xor
je
mov
shrb
mov
xlat
pop
xchg
inc
mov
rorl
cmp
into
and
test
arpl
xlat
adc
xchg
sub
push
fwait
mov
xlat
sub
xchg
push
and
push
lret
mov
je
outsl
shrl
int
mov
loope
dec
lahf
cmc
push
out
imulb
cmc
cmp
mov
pop
push
fcoms
cmp
sti
call
cmp
test
dec
divb
xchg
cmp
in
bound
dec
sbb
push
insl
xor
xchg
or
mov
fildl
out
das
mov
sbb
jge
fcoml
aas
cmp
bound
loopne
out
jge
clc
jecxz
push
cmp
adcb
mov
xor
mull
jno
lea
imul
loop
sbb
add
inc
repnz
cmpsl
and
repnz
pop
xchg
hlt
mov
mov
dec
into
jmp
shlb
jbe
cmp
lret
or
ja
cmpsl
xchg
xor
imul
pop
int
mov
mov
pop
push
aas
push
mov
adc
sub
ds
stos
lock
mov
mov
fistpl
and
repnz
or
stos
sarb
sub
lods
gs
dec
sbb
adc
test
jmp
ret
add
mov
outsb
movl
jb
shrl
mov
ret
xchg
leave
mov
fwait
adc
arpl
gs
or
jp
xchg
pop
jg
fs
mov
cmp
jae
jmp
fidivrs
sbbb
inc
lahf
mov
nop
insl
xlat
ret
aad
and
push
icebp
in
rolb
cs
fwait
add
imul
ljmp
mov
push
push
and
inc
in
insl
dec
inc
fcoml
shrb
out
insb
dec
lds
lods
sub
out
lods
es
js
xchg
fnsave
pop
mov
lret
rorl
sub
test
out
leave
push
insb
mov
rorl
adc
sub
jno
dec
dec
icebp
xor
out
mov
pop
cmp
pushf
or
sub
cmp
cmp
or
in
xchg
outsb
and
test
pushf
addr16
ja
scas
jno
mov
sti
daa
sbb
test
inc
negb
adc
mov
or
mov
push
hlt
inc
pop
add
ljmp
in
jle
test
jbe
stos
and
add
adc
es
sarb
push
mov
repnz
hlt
inc
stos
inc
ds
mov
xor
mov
ja
loopne
out
pop
add
add
mov
sbb
clc
ret
loopne
fnstsw
arpl
out
in
test
push
xor
or
pop
dec
ja
add
cmp
cmpsl
mov
cmp
mov
cmp
pop
and
pop
mov
jne
dec
xchg
ja
xchg
por
cmc
adc
mov
xchg
pop
aam
rolb
mov
dec
and
les
imul
insl
and
imul
das
bound
dec
in
sbb
adc
stc
mov
cmp
add
jge
test
mov
repnz
jecxz
inc
dec
pop
inc
push
ret
push
movsl
testl
jmp
mov
and
loope
xor
ret
sbb
inc
sub
or
sub
pushw
imul
fdivp
mov
insl
pop
fs
and
sahf
js,pt
xlat
jg
add
mov
in
int3
add
ja
icebp
inc
test
in
jg
push
stos
je
fisubl
mov
pop
lea
pop
shrb
cmovb
push
adc
dec
xor
fs
dec
inc
adc
mov
adc
sbb
adc
mov
sbb
daa
adc
out
jl
scas
xchg
jnp
adcl
cld
loop
and
xchg
mov
sub
xchg
push
mov
dec
movsb
dec
push
roll
adc
arpl
loope
mov
in
inc
pusha
popa
jne
xlat
sub
mov
pop
push
adcl
daa
lea
and
jecxz
lcall
adc
test
xchg
xchg
inc
bound
ret
add
imul
dec
xlat
inc
fistl
insb
inc
pushf
out
mov
push
jb
stos
popa
inc
fsts
repz
mov
jecxz
lea
jo
rcrb
es
sub
icebp
and
fsub
xchg
push
js
dec
xor
call
daa
aam
filds
mov
push
and
xchg
je
rorl
cmp
inc
daa
dec
sub
test
push
mov
je
test
lds
clc
ljmp
aam
outsl
sbb
adc
push
rorl
mov
repz
cmp
mov
push
test
fmull
pop
mov
jp
call
imul
mov
mov
int
cmpsl
xchg
mov
sub
icebp
pop
push
pop
adc
xchg
inc
imul
sbb
arpl
leave
cmp
lmsw
popa
push
dec
jae
adc
dec
mov
mov
mov
push
inc
xchg
out
orb
rep
inc
sarl
lds
test
inc
inc
jo
cmpsl
rclb
add
pop
outsb
out
aad
mov
adc
lret
std
xchg
fistl
rep
sbb
xor
push
ret
xor
ljmp
imul
cmpsl
mov
jge
pop
ja
stc
cmp
dec
add
jne
xchg
fcomps
fisubs
push
int3
outsl
fsubr
sbb
and
push
push
dec
inc
xchg
stos
jge
sti
pop
mov
mov
mov
loop
mov
shlb
dec
jb
daa
decb
int3
jns
outsl
xor
sub
movsl
mov
outsb
arpl
adc
ljmp
push
or
fcomi
nop
jb
push
enter
imul
rcll
pop
ljmp
fidivs
call
pop
jbe
and
pop
xor
mov
gs
shlb
fst
sbbl
bound
cmc
mov
repz
ljmp
lods
mov
push
lods
jae
cld
mov
cmp
mov
sbb
mov
inc
and
inc
movsl
lret
mov
out
in
stos
mov
xor
pop
insl
scas
push
repz
xchg
jmp
sahf
mov
inc
jae
outsb
mov
lds
aas
sbb
dec
jne
lods
arpl
adc
mov
and
jo
adc
add
inc
pop
ss
imul
add
adc
js
or
ds
je
int
int
jnp
or
pop
jg
sbb
xchg
mov
mov
sub
cmpsl
out
std
test
dec
jne
xor
ljmp
rorl
ljmp
and
jge
les
arpl
add
inc
scas
fldenv
add
push
imul
push
ja
sahf
xchg
mov
es
jae
and
xchg
xor
lret
mov
sbb
push
pop
ja
fsts
jno
test
pop
leave
movsl
sar
cmp
mov
pop
std
lods
shll
mov
sbb
test
lahf
aaa
loop
adc
xor
push
into
push
aad
pop
push
mov
jge
addl
add
and
aaa
scas
arpl
cmp
inc
lods
adc
scas
cmp
mov
movsb
loop
shlb
and
in
or
mov
or
outsl
aad
ss
cmp
add
sbb
paddusb
xchg
clc
sbb
fcmovnb
push
repz
or
daa
repz
adc
or
sbb
lret
push
inc
mov
jecxz
dec
jle
xchg
lods
inc
in
lret
sbb
push
pop
lret
pop
mov
jge
test
mov
jo
mov
jae
into
add
inc
ljmp
sub
inc
mov
dec
out
nop
jae
rolb
in
iret
imul
cs
inc
lock
cs
popa
ret
sub
inc
jo
mov
mov
aad
fwait
shrb
pop
push
fisttpll
sub
clc
loope
out
sbb
daa
mov
xchg
cmp
xor
push
sbb
loopne
mov
inc
mov
sub
or
push
mov
pushf
jl
mov
cmp
enter
in
dec
outsb
mov
sbb
pop
lcall
jae
divl
hlt
sbb
jb
push
sbb
inc
je
inc
rorl
cltd
arpl
jmp
test
dec
test
mov
push
pop
aad
hlt
inc
iret
inc
loop
lock
fldenv
fsubl
popf
push
sbbl
into
sub
daa
in
dec
and
xchg
and
std
into
cmp
mov
mov
add
pop
insb
outsl
pop
test
pop
mov
sbb
test
xlat
icebp
push
scas
icebp
fdivr
sbb
xlat
push
sbb
or
int3
dec
fmul
pop
ret
cltd
mov
fisubl
dec
inc
dec
mov
mov
jns
mov
xor
clc
popa
clc
push
popa
xchg
mov
js
fs
and
push
lahf
loop
jmp
and
ss
popf
mov
cmp
inc
pop
out
mov
fs
lds
xchg
xchg
push
push
ja
cld
repnz
into
or
or
loop
jae
mov
stos
pushf
adc
mov
push
push
lret
out
fisubrs
sarl
mov
imul
fstpl
ret
enter
repz
cmpl
popf
mov
push
mov
jle
cli
dec
sbb
jns
pop
xlat
xor
pop
xadd
and
jge
sub
inc
dec
inc
fwait
lea
xchg
push
out
aam
rolb
mov
push
fnstenv
cs
pop
lret
mov
push
inc
cmp
jnp
mov
pusha
pop
jmp
jb
lahf
test
xchg
data16
push
jb
push
lea
or
outsl
inc
mov
gs
movsb
push
mov
mov
fdivrl
xor
mov
lea
push
int3
and
mov
icebp
in
bnd
pop
lahf
sbb
pop
aam
stos
mov
loop
cltd
jmp
sbb
and
push
rcr
test
jecxz
fwait
pusha
and
decb
pop
loope
pop
jl
mov
fxtract
shll
adc
movsl
pop
popa
jmp
out
cmpsb
cs
dec
push
js
cmp
cmp
aam
ret
pop
mov
xchg
call
stos
add
inc
mov
rcr
xorb
adcl
sub
sub
jle
lods
aad
adc
adc
adc
adc
fwait
adc
int
int
cmp
in
dec
rcrl
das
push
test
out
sahf
sbb
data16
into
dec
or
jecxz
cmp
dec
adc
pop
push
popa
inc
insl
neg
lret
out
add
jge
std
jmp
das
mov
cli
cmpsb
and
cmp
sbb
fcoms
jg
mov
xchg
lret
jnp
dec
xchg
mov
push
jmp
jne
ljmp
nop
push
fwait
outsl
xchg
mov
ss
mov
inc
xorb
mov
cmp
fwait
icebp
mov
adc
fbld
inc
sbbb
and
call
push
push
fdivs
scas
jg
daa
test
test
movsb
adc
arpl
loope
int3
adc
xor
and
inc
out
sub
mov
xor
push
and
mov
stc
pop
std
and
inc
lcall
loopne
jno
dec
sub
mov
xchg
dec
inc
aam
and
lahf
ficompl
mov
add
inc
mov
cmp
mov
leave
jl
test
and
aaa
jmp
aam
int
lock
fisubrs
movsl
ret
sbb
bound
xor
dec
sub
in
inc
pop
push
xor
lea
cmpsl
mull
ja
dec
and
ljmp
sub
xlat
mov
jb
jbe
rcll
xor
cli
sub
rclb
int3
addr16
dec
jp
cmc
outsb
push
sbb
add
stos
mov
sbb
push
xchg
xor
ret
dec
fmull
mov
mov
adc
jge,pt
pop
push
in
or
jecxz
mov
testb
push
cmp
lods
loopne
imul
xor
pop
cmp
pop
lds
lahf
jne
cmp
mov
sub
mov
or
mov
jmp
aaa
fidivrs
jno
inc
enter
mov
push
mov
push
jl
mov
addl
inc
push
pop
fldt
clc
ret
adc
mov
push
aam
sbb
jl
repnz
mov
mov
jp
out
imul
push
outsb
pop
cmp
addr16
sbb
inc
xor
enter
pop
cmp
filds
ja
and
add
test
es
iret
inc
shrb
jne
sub
mov
push
and
lea
and
inc
adc
subb
addl
divb
outsl
dec
addr16
iret
mov
fidivs
inc
dec
adcb
mov
sbb
add
pop
mov
adc
cld
push
inc
mov
sub
jl
fchs
push
xchg
sub
inc
in
mov
mov
das
loopne
stos
push
mov
and
int
cmpsl
pop
sub
jnp
stc
cmp
sbb
sub
mov
cmpsl
pushf
xchg
cmp
mov
in
mov
push
dec
lret
ret
rcll
and
leave
fimull
leave
inc
jns
shl
cmp
aad
xchg
mov
aam
in
dec
adcb
test
mov
push
mov
cwtl
stos
aaa
push
outsb
imul
mov
push
xlat
outsl
ss
xor
div
ja
data16
add
leave
add
insl
adc
lods
or
out
in
adc
sub
sbb
sub
jmp
xchg
outsl
outsl
push
shrb
sub
pop
arpl
je
jg
cltd
nop
xor
lahf
pop
cld
add
jb
test
or
mov
mov
cmpsl
into
in
jecxz
cli
cmp
sub
loopne
xor
dec
xchg
inc
sub
inc
pop
out
push
push
inc
jae
cmp
or
daa
and
jo
sbb
cli
stc
pop
fisttpll
cmc
clts
pusha
xor
pusha
mov
mov
sub
sub
pop
adc
push
ja
xchg
loope
sti
subl
movsb
mov
fdivrs
ds
fiadds
mov
rcl
pop
push
xor
divl
out
dec
push
or
jp
sub
ficomps
sbb
push
repnz
imulb
clc
or
insl
scas
add
nop
cmp
mov
out
scas
pop
fisubrs
stos
sar
out
cmp
add
pop
push
pop
push
mov
dec
push
leave
mov
inc
cs
mov
jge
int
shl
addr16
push
in
mov
pop
lret
xor
pop
cmp
cmp
leave
lret
in
cmp
push
inc
ret
xor
push
hlt
jl
shll
fst
das
das
in
mov
mov
int3
cmp
sti
mov
clc
movsl
movsb
aas
in
out
clc
cmp
imul
push
je
shlb
xchg
mov
in
lods
dec
lcall
insb
jno
adc
inc
mov
lock
movb
push
loope
das
pop
mov
je
lret
mov
imul
cmp
lret
fidivl
xchg
adc
jae
mov
es
stos
imul
insl
jb
cmp
xchg
loopne
push
repnz
inc
fdivs
add
es
leave
shlb
pop
mov
ret
es
push
fs
jecxz
mov
ljmp
or
bnd
shlb
fs
sub
cli
cld
sbb
cli
stos
pop
cltd
push
add
andb
mov
dec
mov
repnz
pusha
push
xchg
das
mov
push
add
cmc
fldenv
imul
ret
repz
fists
cs
push
stos
mov
sbb
out
rorl
ret
mov
nop
push
mov
cmp
cli
popf
dec
sti
arpl
call
xlat
mov
hlt
xor
mov
mov
push
stc
mov
arpl
cwtl
dec
mov
xor
mov
js
lret
jmp
loop
xor
fiaddl
sub
cmp
add
jecxz
sbb
fwait
mov
add
jecxz
cwtl
gs
or
mov
xor
lods
jae
std
cmpsb
push
outsb
push
mov
push
jnp
inc
pop
pop
je
jmp
lret
js
js
shl
sub
in
ret
arpl
xchg
push
lods
aas
shll
aas
andb
jb
xor
cli
push
fisubrs
outsl
xchg
aas
out
add
inc
pop
ss
xchg
aad
mov
movsb
iret
rorl
pop
jo
movsl
jae
xchg
ss
rcll
fistpll
cmp
in
cmc
mov
jmp
movsb
stc
sbb
sbb
imul
movsl
dec
cli
push
ret
negl
outsb
dec
dec
sub
xchg
and
mov
negl
jne
push
leave
push
adc
ret
rcrl
cltd
pop
dec
jne
push
mov
aas
jae
mov
sahf
mov
xchg
or
mov
adc
pop
lds
sub
rolb
jl
lret
imul
dec
lret
repnz
xlat
add
cmc
lea
push
sbb
cmp
sahf
sub
lock
mov
dec
xchg
leave
push
loopne
sti
jae
push
sbb
jmp
mov
ror
fistpll
lret
and
lds
adc
into
or
pop
add
stos
xchg
jle
scas
adc
xchg
outsl
xchg
aas
mov
cmp
fsts
test
aam
mov
add
fwait
hlt
cld
lret
sbb
pop
adc
xchg
repnz
jno
movsb
out
filds
out
mov
mov
lret
popa
add
mov
inc
arpl
hlt
cs
lcall
xchg
repnz
mov
push
mov
sub
mov
xchg
out
mov
lds
int3
adc
or
repz
adc
or
dec
or
xchg
leave
lcall
cld
xor
push
xchg
adc
pop
inc
xor
sub
mov
xor
test
inc
pop
adc
mov
nop
sahf
popa
daa
lahf
push
xchg
fnstenv
sbb
push
pop
js
lock
sbb
int
pop
cmp
into
fs
jae
outsb
ss
or
and
loop
es
jle
and
adc
adc
dec
dec
sbbl
and
scas
jmp
xor
leave
lods
lock
inc
outsl
or
dec
ds
sub
mov
pusha
sbb
test
iret
js
jg
mov
mov
enter
pop
or
pusha
test
and
movsl
add
mov
aaa
int3
push
or
push
dec
xlat
mov
out
mov
jne
stc
dec
shufps
pop
push
jne
inc
fisttpll
inc
inc
adc
push
mov
xor
jg
dec
sub
sub
xchg
andl
pop
jbe
rcll
mov
jno
and
xchg
jo
fadds
sbb
mov
ja
loopne
lcall
push
mov
std
mov
dec
and
inc
xchg
fists
mov
dec
mov
xchg
add
lret
adc
ja
test
repz
lahf
mov
or
and
fwait
xchg
jg
ficoml
xchg
fstpl
repnz
inc
leave
sub
jge
jbe
cmp
fsubs
jno
iret
and
inc
jge
or
jne
loop
xchg
mov
inc
jg
cmc
mov
test
dec
add
stos
mov
mov
cltd
scas
and
add
pop
das
decl
adc
pop
pop
sahf
test
movsl
outsl
icebp
mov
add
shl
push
sbb
fisttps
jp
fsubrl
pop
in
add
cmpsl
pushf
out
push
inc
sbb
daa
mov
fnstsw
push
imul
cld
scas
jbe
jmp
pop
inc
loop
sbb
xchg
incl
pop
imull
sbb
mov
jae
repz
adc
jl
jmp
int3
xchg
testb
xlat
rcr
test
jge
out
scas
flds
shlb
nop
mov
into
pop
xchg
pushl
or
mov
jbe
andl
add
cs
outsb
icebp
sbb
push
sahf
or
and
insb
fwait
mov
lods
rcr
push
jne
push
push
cmp
pop
dec
cmp
stos
inc
imull
mov
pop
pop
repz
fwait
outsb
inc
inc
sbb
int3
jno
out
inc
sbb
lods
loopnew
scas
jne
and
mov
push
sarl
pop
or
ret
push
add
dec
mov
add
mov
arpl
inc
mov
sbb
scas
inc
cmp
push
in
repz
loopne
mov
in
dec
mov
xor
lret
push
in
cltd
sar
pop
pop
push
or
sbbl
cmp
leave
xor
test
in
dec
insb
sbbl
push
cli
aaa
outsl
in
fnstcw
sub
popa
shlb
jl
xchg
cmp
shrl
roll
xor
inc
dec
adc
mov
scas
mov
cltd
and
cmp
imull
ljmp
stos
adc
xor
xor
add
aas
rcll
loop
sub
in
push
imul
xchg
mov
shrb
jno
mov
into
mov
inc
jns
ret
sub
pop
aas
and
cwtl
cmpsl
pusha
faddl
in
scas
mov
lods
outsl
and
std
std
adc
cmpsl
cltd
lds
mov
lret
sub
or
pop
cltd
stos
jno
pushf
clc
and
ret
sbb
inc
xor
mov
cwtl
inc
and
shlb
repz
and
mov
xchg
push
ret
sub
mov
jne
pusha
mov
add
sbb
imul
lods
inc
stos
add
mov
push
mov
mov
push
ret
pop
mov
cltd
and
mov
in
add
push
inc
sarl
adc
push
loop
push
mov
dec
rorb
pop
xor
mov
aas
pop
in
lcall
push
mov
push
aad
out
cld
std
push
jae
vsqrtss
nop
add
pop
shl
out
xchg
mov
cmp
test
scas
imul
int3
popa
push
negl
xchg
mov
scas
lods
sub
int3
cli
insl
enter
or
outsl
adc
dec
add
subb
jg
out
xchg
rol
inc
clc
test
shrb
sub
stos
test
dec
pop
aas
sub
inc
xor
sub
cmpsb
ja
xchg
imul
inc
cmp
or
aad
inc
xlat
lea
shl
jb
fsubs
push
pop
xor
xchg
loopne
or
add
push
or
rorb
mov
lret
gs
cmp
jmp
aam
mov
add
rol
mov
std
ror
mov
rolb
mov
lds
xchg
adc
sub
sbb
jmp
divb
push
sbbb
rep
int3
aaa
mov
test
addr16
mov
lea
test
out
out
xor
push
aad
mov
xor
jge
js
pop
fstpl
xor
mov
xchg
stos
inc
iret
or
sbb
in
ret
jl
inc
xchg
sti
pop
xor
pop
mov
scas
jge
aaa
mov
leave
aas
repz
mov
pavgb
xchg
sysenter
pop
repnz
mov
push
pushf
mov
fimull
sahf
imul
dec
and
cld
das
xchg
rol
push
push
pop
pop
dec
cwtl
cmp
xorb
in
or
mov
push
sub
adc
xlat
mov
inc
addl
lods
bound
jb
xorb
addl
mov
pop
pop
jg
mov
stc
je
pushw
push
xchg
into
out
nop
lret
dec
jl
mov
push
call
imul
popa
loope
add
loopne
popa
mov
ljmp
dec
xchg
xchg
cltd
dec
or
andl
adc
and
fiadds
sbb
dec
je
mov
addl
nop
xchg
dec
and
dec
push
es
cmp
push
mov
push
or
mov
push
inc
ljmp
xor
sbb
fisubl
jne
push
jo
mov
rcrb
outsb
jns
fcmovu
negb
sub
pop
cmp
sbb
push
mov
xchg
loope
mov
mov
mov
pop
pop
scas
mov
cmpsb
loop
or
xchg
subl
inc
adc
out
jp
pop
out
jl
dec
rcrl
sbb
mov
call
pop
adc
jnp
pusha
ss
test
hlt
je
popf
imulb
mov
xlat
popf
repnz
jle
roll
mov
mov
sbb
jnp
lock
push
shlb
jg
mov
mov
movsb
rcrb
and
adc
or
sbb
nop
fcoml
sbb
lods
clc
in
aaa
jle
sbb
sub
pop
pop
jp
mov
sub
jns
in
add
xchg
pusha
or
push
adc
push
sub
adc
xchg
mov
sarl
add
adc
jns
dec
adc
cwtl
test
pop
sti
daa
cmp
js
or
mov
repz
ja
fxtract
call
scas
mov
pop
push
insb
mov
stos
xchg
xor
loopne
pop
inc
and
mov
scas
stos
repz
adc
xchg
add
pop
xchg
shl
out
out
sbb
sbb
pop
aaa
and
or
cmp
or
dec
mulb
sbb
push
xchg
clc
add
outsb
pop
or
xchg
ret
ret
jne
dec
test
pop
sbb
stos
mov
or
xchg
xor
pop
add
or
std
mov
arpl
xor
in
sub
test
sub
jp
bound
jne
dec
inc
mov
jo
push
into
loop
call
ficomps
pop
mov
int3
xlat
mov
pop
mov
arpl
fidivrl
cmp
mov
cli
pop
sub
adc
mov
jne
push
popf
enter
fcmove
out
xchg
sbb
lds
outsb
push
push
and
cltd
jp
ds
add
out
es
mov
pop
ds
outsb
in
outsb
mov
adc
push
lret
cs
out
xorb
pop
adc
sahf
mov
fildll
scas
loope
mov
inc
push
push
or
pop
icebp
sbb
imul
add
bound
xor
inc
cwtl
sbb
loopne
shl
jp
mov
test
out
jno
shll
push
mov
mov
in
adc
and
cs
stos
es
and
fsubrs
lret
mov
in
pusha
mov
sub
pop
pusha
jg
ljmp
pusha
test
cmpsb
or
cli
dec
jle
jg
and
mov
test
leave
jo
xchg
nop
cmp
add
sub
fistpll
sbb
testl
addr16
cmp
fmul
xchg
mov
push
mov
inc
fisubrs
inc
outsl
mov
push
ret
xchg
jl
in
and
and
out
in
das
icebp
lds
stos
add
dec
cs
sbb
gs
cmp
mov
or
call
das
and
sub
cmp
push
cmp
imul
sbb
add
push
add
xchg
lahf
out
push
xchg
jp,pt
in
arpl
cmp
push
add
or
into
xlat
ljmp
inc
mov
xor
or
add
scas
xchg
push
adc
movsl
and
mov
jmp
inc
cmc
sbb
lock
xchg
repnz
test
data16
mov
xchg
popa
or
das
push
into
sbb
or
lahf
mov
push
ret
iret
ljmp
push
in
dec
inc
jp
sahf
ficoml
pusha
lds
push
push
or
jmp
mov
pop
or
lcall
xchg
gs
addr16
jns
sub
test
push
lock
rcrb
in
xor
or
mov
data16
sbb
xchg
test
test
mov
mov
mov
in
ljmp
faddl
les
jne
mov
cltd
roll
aas
aad
hlt
jae
frstor
inc
repz
xchg
sub
xchg
in
cli
movsb
jle
cli
jo
jmp
mov
fcoms
popf
outsb
pop
inc
rclb
fiaddl
xor
inc
sbb
adc
or
cmc
daa
call
mov
sub
jb
popf
sbb
loope
pop
mov
push
mov
pop
xchg
inc
cmp
lods
fcom
xlat
ljmp
int
jecxz
outsb
gs
cmp
cmpsl
lock
loope
add
daa
lret
add
sub
push
adc
jne
cltd
mov
clc
insb
andb
adc
gs
fists
out
jnp
or
push
fsubrl
out
imul
cld
out
or
testb
xor
psubb
mov
mov
pop
lock
jle
xchg
clc
sub
lea
lea
mov
std
sbb
aam
sarb
xchg
push
lods
jnp
pop
repz
daa
repnz
out
mov
mov
pop
or
lret
mov
xor
mov
test
pop
js
loop
dec
inc
push
sahf
inc
jb
bound
push
adc
faddl
enter
stos
test
hlt
adc
repnz
add
loope
xor
ss
or
sub
dec
dec
fsubr
and
call
cmp
xchg
mov
lods
xor
mov
mov
push
lret
scas
and
enter
pop
test
jmp
insl
cmp
cwtl
in
or
push
mov
pop
xchg
mov
push
ss
out
xchg
cld
orb
xlat
je
jl
std
cmc
ficoml
xor
repz
insl
loope
stos
xlat
push
jp
sbb
jp
xor
cld
mov
stos
testb
imul
xchg
inc
repnz
push
sub
pop
out
jne
jbe
jecxz
decl
sbb
pop
shll
out
shrb
jno
push
dec
mov
adc
scas
pop
inc
insb
jnp
sub
mov
loopne
dec
or
jl
xchg
imul
pop
orl
imulb
into
sbb
xchg
imul
mov
filds
hlt
cld
icebp
jnp
mov
mov
fnstcw
je
in
jae
xor
jns
test
daa
jno
iret
and
jno
mov
and
dec
test
fdivp
out
jmp
out
js
xchg
std
fisubs
enter
add
xchg
aad
xor
mov
xor
mov
imul
jecxz
addr16
mov
mov
add
pop
in
inc
test
daa
jl
push
mov
shll
jnp
out
es
cmp
inc
lock
add
test
imul
ficoms
push
or
das
jbe
sbb
jmp
mov
in
jb
les
xchg
adc
xor
mov
sub
jbe
das
pop
dec
roll
xchg
add
push
int
in
mov
lods
pop
or
addl
lds
aam
and
cwtl
out
adc
ja
mov
in
out
out
inc
add
and
adc
pushf
xchg
dec
clc
push
xchg
adc
nop
hlt
sbb
outsb
ja
pusha
movsl
insb
mov
cs
mov
inc
xor
cmp
arpl
or
popa
rcl
jnp
mov
adc
imul
icebp
cmpb
outsl
daa
mov
jl
mov
sbb
sti
hlt
fdivrl
push
dec
fwait
jnp
and
test
sub
shl
mov
push
outsl
lcall
mov
pushf
ficompl
push
in
aaa
scas
push
mov
cmp
daa
out
pushf
mov
imul
shrb
mov
jnp
cmpsb
cmpsb
jmp
xchg
scas
mov
rclb
shl
xor
insl
push
and
mov
inc
js
jmp
fidivs
inc
xchg
ds
sbb
movsl
inc
add
cmp
aas
arpl
fidivs
sub
scas
mov
push
mov
mov
xchg
out
mov
add
push
dec
mov
pop
aas
jbe
push
xchg
xor
mov
movsl
imul
or
mov
cmp
mov
test
pop
or
inc
push
pop
pop
cmp
aaa
inc
std
xchg
outsl
lahf
scas
nop
jns
mov
loope
lock
inc
leave
and
daa
outsb
fwait
ljmp
dec
xor
notl
pop
loop
aaa
adc
fdivr
les
out
pop
dec
push
sbb
jle
xor
or
cmc
xor
mov
jmp
cvttps2pi
pop
clc
mov
cmp
lods
sub
jo
mov
sahf
popa
mov
push
pop
ja
scas
nop
adcb
xor
loope
cmp
mov
ror
mov
jge
jne
xor
sahf
cmpsb
jnp
dec
pop
bound
insb
mov
adc
jp
in
shlb
xchg
aad
ljmp
push
test
add
subb
mov
xchg
xchg
loope
or
pushf
insb
xchg
icebp
cs
or
pop
or
mov
daa
cmp
lods
aaa
or
inc
hlt
xchg
sti
xor
mov
jae
ja
in
jb
xor
fisubs
dec
addr16
mov
fildll
add
jne
jp
pop
adc
int
cmp
mov
cmp
dec
jne
test
pop
sub
shrb
faddp
or
pop
add
mov
and
mov
push
push
sbb
and
jge
jno
sub
xchg
popa
imul
dec
xchg
std
sbb
imul
int
iret
pop
pop
mov
loop
movsb
ja
xchg
pop
or
mov
and
cld
cmp
insl
sbbl
jo
or
and
roll
jmp
pop
outsb
aad
adc
dec
aaa
push
iret
scas
push
jns
sti
aas
ret
in
ds
es
mov
sbb
test
rcl
xchg
adc
es
icebp
data16
push
inc
inc
mov
out
pop
dec
fs
icebp
or
cmpsb
pop
mov
dec
dec
data16
scas
sti
cmpsb
xchg
es
sbb
cmp
or
cmpsb
mov
into
je
das
mov
cli
mov
sbb
jns
test
lret
aad
es
out
pop
jb
imul
call
loop
lcall
aam
rorb
inc
or
xlat
or
shlb
push
pop
pop
xchg
add
fsubrp
inc
sub
cmp
pop
sub
lds
pop
push
sbb
or
shl
hlt
push
lcall
shrl
cwtd
arpl
inc
add
bound
sub
out
pop
outsl
xor
scas
nop
inc
or
inc
dec
insb
sub
outsl
cmpsl
mov
orb
insb
outsl
into
je
add
sbb
iret
xchg
stos
add
pop
fidivl
sub
fisttps
adc
fucomip
lea
rorl
dec
pop
inc
or
and
ffreep
pusha
add
add
test
sub
pop
inc
sub
xchg
mov
std
add
add
bound
mov
ja
adc
sbb
pop
clc
pop
mov
std
xchg
clc
orb
cmp
inc
sbb
cmp
pop
cmp
xchg
dec
push
mov
push
inc
sahf
shrb
dec
mov
imul
mov
es
lods
pop
push
mov
jb
mov
dec
fwait
shrb
mov
mov
imul
inc
lods
inc
inc
out
cmpsl
rorb
out
adc
lock
incb
test
sarl
sbb
ljmp
mov
adc
insb
sarl
out
inc
sub
inc
and
cltd
hlt
mov
cli
sahf
push
pop
rcl
in
or
pusha
mov
cmpsb
adc
mov
shll
mov
or
and
stc
jg
dec
mov
push
movl
add
test
inc
loopne
insb
push
loop
or
popa
inc
cmp
ret
xchg
mov
mov
mov
pop
out
lcall
lods
mov
movsb
or
aam
out
aas
pop
cmp
mov
xchg
mov
inc
lcall
mov
in
imul
inc
ffree
imul
stos
shlb
subl
int
std
stos
lds
mov
jp
scas
push
mov
vxorpd
jge
push
jle
clc
shll
mov
dec
cmp
push
and
insb
inc
imul
inc
adc
inc
mov
mov
js
clc
iret
inc
cmp
jmp
jb
stc
jns
aaa
xchg
adc
jno
nop
rcr
adc
std
adc
andl
push
mov
xor
int
lea
fdivl
adcl
loopne
stos
pop
and
mov
scas
or
movsl
jp
xchg
xlat
movsb
stos
lods
adc
inc
sub
or
insl
xor
outsb
xchg
lock
sbb
xchg
mov
pusha
inc
add
jecxz,pt
cli
xor
sub
pop
imul
les
mov
into
xor
pop
xor
ss
js
cli
sbb
cmc
and
mov
mulb
jno
jg,pn
sub
out
jne
dec
scas
jno
mov
add
sbb
nop
fmul
adc
fists
popl
lret
xor
and
cmp
fwait
pop
sbb
insb
cmp
lret
outsl
and
xchg
fcomps
ret
jo
orps
orl
push
dec
dec
out
iret
imul
fisttpl
notl
pop
push
mov
int3
push
push
mov
sub
inc
shr
adc
data16
and
orl
jge
sub
daa
adc
shlb
pop
pop
stc
push
aas
or
bound
adc
js
cmp
aad
mov
mov
iret
sub
jecxz
mov
out
mov
inc
sbb
daa
push
repnz
or
push
pushf
nop
jbe
nop
pop
daa
cld
lea
jp
hlt
jo
hlt
ljmp
notb
fmuls
aam
push
and
decl
cmpsb
cmpsb
std
adc
dec
adc
push
rclb
xor
mov
ss
mov
mov
xchg
or
and
jo
xor
lock
aam
mov
mov
adc
in
push
inc
adc
mov
in
xor
and
adc
divl
in
cmp
xchg
popf
stc
cwtl
dec
mov
pop
scas
jmp
movsl
and
mov
and
jl
and
dec
or
das
cmc
cmp
xor
mov
mov
ss
pop
xor
insb
ljmp
jbe
or
push
pop
pop
cmp
imul
call
add
into
mov
jg
je
nop
psrld
xor
pop
cmp
cmp
mov
mov
call
fwait
or
jp
xor
dec
push
rorl
xor
jb
shll
pop
dec
mov
mov
into
or
aad
scas
mov
std
mov
dec
xor
popa
pop
pop
mov
js
xchg
insl
ds
cmp
sub
dec
sub
popa
sub
scas
jmp
push
xor
arpl
sbb
ss
iret
frstor
pop
cmp
inc
jns
mov
enter
jb
pop
adc
scas
push
inc
outsl
rcl
test
add
stos
xlat
mov
stc
mov
test
xchg
jne
stc
add
insl
daa
sbb
addl
add
fdivs
js
stos
mov
ficoms
jne
sti
push
xchg
mov
add
push
adc
roll
cwtl
xor
sub
mov
ja
cmpsl
mov
mov
add
jno
and
adc
shr
stos
mov
cwtl
lahf
mov
out
fmulp
clc
aaa
xchg
add
or
pop
pusha
lods
flds
pop
lret
jnp
mov
out
test
test
popa
pop
lock
mov
ds
cmp
scas
adc
mov
in
jmp
inc
imul
shr
pop
ror
adc
push
dec
lods
mov
lcall
shrb
into
push
xor
adc
jle
icebp
push
lods
add
adc
lods
mov
mov
xor
pop
mov
daa
fwait
mov
das
fidivrl
xor
ror
iret
push
xchg
test
push
gs
adc
test
cmp
test
repnz
fdivrs
test
fcomps
pop
ds
pusha
test
leave
add
inc
addl
loopne
dec
xchg
imul
clc
es
ss
hlt
xor
jbe
jmp
fdivs
nop
fstps
dec
and
hlt
dec
and
sbb
push
call
dec
add
ficompl
inc
aad
sbb
pop
into
popa
jne
and
adc
cmpsl
mov
sbb
loop
in
push
push
xor
and
dec
xchg
push
iret
sub
sub
lret
mov
int3
pop
lahf
push
mov
mov
ror
push
iret
adc
add
orb
sbb
push
or
clc
test
jb
cmpsl
dec
cmp
aam
or
shll
popf
mov
pop
jo
das
mov
xchg
cmc
rcrb
daa
mov
xchg
fimull
dec
int3
pop
push
or
fbld
adc
xchg
jne
fsub
out
sub
cs
pop
clc
std
nop
push
push
cmp
inc
dec
into
cmp
dec
or
jmp
lock
test
adc
iret
xchg
mov
enter
dec
int
cmc
cwtl
mov
inc
ret
sub
pushf
sub
pop
jecxz
jo
ja
ljmp
add
clc
roll
or
mov
xlat
inc
lret
xor
add
sbb
data16
pop
mov
xchg
sub
imul
inc
lds
data16
dec
sub
pop
sbb
and
cmp
pop
xor
inc
in
jns
dec
mov
dec
xchg
gs
data16
aaa
les
cmp
cmpsb
mull
inc
xchg
jbe
mov
fiaddl
setle
pop
mov
aas
dec
lahf
movsb
bound
add
mov
pop
sbb
incl
and
pop
mov
pusha
jmp
scas
cltd
xchg
and
stc
ljmp
or
dec
out
dec
or
lret
xchg
or
mov
in
aas
mov
rolb
jo
je
dec
xor
test
dec
xor
inc
sbb
pushf
push
pop
ret
jp
jne
pop
int
cli
xchg
mov
jno
mov
popa
repz
daa
ljmp
test
add
pop
mov
adc
sbbb
pop
outsb
push
pop
mov
inc
mov
mov
leave
push
push
lds
flds
iret
pop
lock
outsb
outsb
or
dec
ss
iret
and
cmp
ret
js
adc
stc
xlat
pop
jae
icebp
sbb
inc
stos
or
jl
jnp
or
pop
mov
loop
cmp
pop
xor
lods
cmp
dec
in
popf
jmp
jns
cmpsb
jmp
pop
jb
lret
clc
cmp
dec
stos
fsubl
or
pushl
lahf
jle
adc
jle
add
mov
pop
jne
lea
js
int3
mov
fidivrl
or
repnz
out
or
sti
in
mov
sbb
sub
mov
cmpsb
jp
cmp
xor
fwait
mov
mov
mov
fstl
fmuls
test
aam
hlt
int
out
shrb
hlt
enter
inc
sbb
xor
repz
and
pop
xor
sahf
adc
dec
mov
add
dec
sbbl
bound
adc
mov
or
enter
push
push
mov
sub
inc
mov
pushf
pop
js
sub
sub
jnp
shrb
popf
xchg
sub
cmp
dec
pop
je
in
push
jg
push
rolb
imul
arpl
test
js
jne,pt
mov
jl
jg
faddp
jnp
push
std
pop
bound
push
mov
lahf
fwait
sbb
test
inc
fsts
pop
pop
inc
popa
lcall
or
shll
aad
mov
std
add
xlat
aam
insl
lods
ret
mov
sbb
imul
test
inc
cltd
dec
mov
loopne
outsb
movsl
mov
push
aaa
jmp
dec
dec
mov
cmp
test
popa
mov
lock
mov
insl
or
adc
mov
xchg
add
dec
insl
mov
hlt
lods
es
int3
mov
out
aas
push
scas
xchg
mov
jge
ja
repz
mov
pop
call
es
test
cwtl
fwait
mov
into
outsb
cwtl
ret
sub
addl
fstps
sbbl
jns
mov
gs
push
enter
jo
sbb
inc
stc
aad
xchg
xor
out
xor
rorl
pop
dec
mov
lret
pop
mov
mov
aad
sub
movsl
pop
lret
scas
and
add
push
cmp
xchg
aad
inc
mov
ljmp
add
std
mov
shl
add
movsl
sarb
push
push
xlat
jl
lods
pusha
mov
lds
xor
test
cmp
mov
push
jmp
mov
or
insb
xchg
adc
mov
fwait
jge
imul
aas
add
fsubs
and
lds
das
imul
mov
ljmp
push
outsl
adc
fwait
scas
adc
sub
jle
aad
or
in
mov
xorl
xor
icebp
bound
dec
stos
cmp
adc
jle
mov
cmp
test
mov
insl
aad
mov
adcl
aam
xor
shll
rcr
cwtl
stos
jecxz
adc
pop
icebp
mov
int
andb
jg
xchg
sar
mov
ja
pushf
mov
shl
pusha
nop
or
mov
int3
ds
mov
cld
add
clc
fidivs
dec
shrl
loope
pop
shr
dec
iret
cmp
loopne
imul
inc
push
lods
in
push
inc
xchg
pusha
jb
cmp
sti
pop
jno
mov
inc
adc
pop
sub
push
xchg
rol
lret
pop
js
es
mov
movsl
jbe
inc
push
pop
sub
cs
jecxz
mov
popa
mov
into
shll
or
and
in
mov
inc
add
cmpsb
dec
mov
mov
mov
sbb
pop
cld
jle
xchg
mov
xchg
lret
je
add
lcall
shr
std
add
mov
adc
jmp
xchg
rolb
or
adc
fs
shlb
adc
or
mov
cmc
push
test
pop
fcompl
out
outsb
lret
cwtl
imulb
jle
aam
gs
pop
pusha
inc
pop
ja
shll
lfs
pop
mov
sub
ret
push
faddl
xor
test
out
pop
lahf
popa
leave
cmp
or
ja
repz
and
jne
out
adc
ds
push
pop
sub
outsl
mov
stos
xchg
es
imul
stos
pushf
scas
xlat
and
xchg
adc
and
and
aaa
and
jp
fs
dec
lods
sahf
sbb
mov
pushf
dec
push
repnz
sub
and
xchg
femms
inc
push
inc
repz
data16
add
aam
mov
pop
std
insl
pop
ja
call
pop
or
std
test
inc
sub
mov
pop
mov
pop
sub
fdivrl
adc
lahf
mov
xor
pop
aas
add
fisubl
les
js
mov
mov
mov
mov
lcall
pushf
jne
xor
push
and
push
cld
dec
xchg
rcrl
imul
popa
sub
jns
xor
sbb
xchg
mov
adc
test
repz
dec
mov
testb
cmp
mov
fadd
push
mov
mov
enter
ja
adc
sti
out
cmpsl
les
les
outsl
push
sub
popa
xchg
das
pop
adc
push
mov
std
push
js
mov
negb
xchg
pop
imul
sub
cmp
loop
sarl
dec
add
inc
pop
jbe
and
dec
out
popf
cltd
enter
adc
jg
push
xor
aas
and
shlb
pop
lret
xor
sbb
xor
pop
or
pusha
inc
popf
stc
dec
stos
iret
outsb
fdivl
xchg
mov
notl
mov
aad
in
test
fs
pusha
shlb
ja
lock
jno
xor
cmp
xchg
daa
cmc
sub
jmp
pop
add
push
push
xor
cltd
sub
mov
mov
xor
loopne
jae
and
cmp
out
inc
neg
js
inc
jmp
scas
sub
idivl
mov
or
int
xlat
cli
iret
aaa
vhsubps
divb
aas
notl
lock
sbbb
push
ja
mov
iret
pushf
int3
or
gs
aam
adc
push
push
mov
in
xchg
push
int
pop
and
mov
fcomp
dec
xchg
sub
stc
jmp
lea
arpl
sbb
xchg
mov
mov
pop
rcrl
sbb
repz
loope
and
jmp
push
mov
mov
test
mov
sbb
fists
aad
mov
out
call
sti
sub
inc
pop
mov
movsb
outsb
dec
xchg
dec
mov
shr
out
xor
sbb
loope
inc
jne
mov
mov
cs
cmpsl
mov
fldcw
jns
push
push
loop
jne
mov
mov
jb
out
mov
and
movsl
cmpsl
pop
notb
ffreep
jno
cltd
mov
out
adc
mov
sti
pop
sbb
adc
stc
cmp
mov
or
loopne
lods
and
dec
aaa
xor
dec
sarl
stc
sub
dec
fiaddl
push
das
mov
adc
jae
sbb
or
pop
mov
pop
adc
in
sub
sbb
in
call
mov
scas
sub
lcall
lods
pop
jg
sti
loope
stos
popf
ret
inc
nop
arpl
cli
pop
dec
pop
dec
bndstx
lock
cmp
xchg
cs
add
adc
mov
ja
sbb
int3
pop
sub
adc
addr16
lea
loop
xor
cmc
sbb
pop
push
mov
cmp
enter
inc
fsubr
mov
cmp
sbb
jmp
imul
adc
adcb
push
lods
add
push
xchg
adc
rcll
aas
jg
hlt
fistps
sub
fbld
push
test
xchg
push
jp
outsl
cmpb
adc
push
mov
std
and
inc
mov
inc
jle
movsb
adc
push
fmuls
inc
push
data16
cmp
shr
dec
sarl
mov
out
inc
rcrl
pop
ss
add
mov
fcmovnb
std
scas
dec
stc
daa
ss
dec
jp
mov
dec
inc
adc
mov
xchg
inc
fistpll
sbb
push
jae
fcomps
shl
fdivs
test
dec
adcb
sbb
cmp
fcompl
popf
xchg
cltd
hlt
inc
je
subl
jne
repz
pop
nop
mov
cmpb
lods
sub
push
push
mov
push
sbb
insl
dec
nop
pop
mov
xchg
testl
icebp
mov
cmp
mov
jl
out
jp
fs
mov
sbb
fcomp
movsl
adc
pop
dec
fimull
fcomps
mov
lret
scas
int3
shll
xchg
and
test
popa
cmp
mov
sub
aaa
unpcklps
sub
pop
and
push
out
sahf
mov
pushf
add
nop
xchg
jns
clc
mov
cmp
cltd
jl
or
inc
mov
jmp
sub
xchg
jo
or
add
xor
sub
dec
mov
dec
push
sbbb
in
xor
push
sub
fsubr
mov
cs
loope
inc
sbb
aad
bound
jle
into
test
mov
add
je
fdivl
sub
insb
jg
mov
mov
mov
sub
sbb
xor
or
aam
mov
fdivl
and
cli
mov
sub
int
gs
pop
test
sub
stos
sbb
add
mov
icebp
jae
mov
fdivrl
jno
shl
fmuls
add
fistpl
push
rcr
inc
and
shlb
call
cli
fmuls
adc
sbb
pop
mov
ret
gs
jecxz
add
xor
mov
jge
and
and
lret
sbb
inc
mov
pop
stc
dec
push
aam
scas
bound
mov
xchg
jg
cld
jp
aad
jl,pt
jns
xor
mov
inc
cs
fidivl
stos
cmp
adc
mov
inc
push
mov
add
sub
fmuls
adc
jno
adc
nop
inc
fldt
adc
sbb
mov
push
outsl
stos
push
xchg
clc
mov
mov
sbb
lods
push
gs
jle
and
pop
xor
popf
pop
mov
into
sbb
sbb
cmpsl
ja
pop
and
cmp
and
cmpsb
pop
fnstenv
or
rorl
rorb
cmpsb
mov
cmpsb
fcmovnbe
push
inc
out
std
pop
pushf
cmp
outsl
sub
mov
pop
mov
dec
xor
arpl
mov
cld
aad
dec
sbb
push
mov
jo
shll
mov
stc
xorb
imul
xchg
test
pusha
das
outsb
fs
xorb
adc
or
inc
dec
dec
fisubrl
call
cmc
aaa
cmpsl
sti
fidivs
rorl
sbbb
sbb
jl
inc
sub
xchg
pop
mov
loopne
fadds
repnz
movl
and
arpl
inc
xchg
mov
jae
lret
scas
test
arpl
aam
xor
arpl
mov
xor
mov
mov
adc
mov
aaa
imul
xchg
fs
fcomps
fmuls
xor
pop
xor
pop
imul
lahf
ret
jae
or
xor
es
jg
jae
mov
xchg
mov
out
add
dec
xchg
cld
out
fdiv
jo
pop
xchg
xchg
in
pop
pusha
hlt
mov
es
and
insb
add
jmp
sbb
mov
lock
push
fwait
popf
mov
pusha
xchg
and
push
mov
repnz
or
sbb
sub
xchg
test
sbb
jo
pop
sub
sbb
repnz
sub
dec
data16
sets
ret
mov
xor
bound
xor
push
cwtl
iret
clc
aad
outsl
imul
cmpl
es
rolb
ljmp
jmp
jecxz
mov
push
xor
sub
xchg
outsb
pushf
mov
sub
jo
push
lock
lret
aaa
pop
out
adc
mov
js
mov
pop
and
mov
push
jbe
or
iret
dec
dec
popf
in
test
mov
js
clc
fs
add
push
cld
loop
cwtl
xor
movsb
pop
sbb
push
push
add
call
sti
mov
pushf
in
daa
or
mov
pop
out
nop
xor
mov
shll
cmp
je,pt
push
mov
mov
xor
xchg
xchg
sub
lods
int3
mov
xlat
lcall
int
xor
loop
jmp
cs
jo
pop
mov
lods
shrl
data16
push
mov
xchg
cltd
repz
mov
and
leave
ss
iret
shlb
sbb
jns
mov
push
cmp
mov
xor
sbb
push
loopne
sbb
cmp
lock
jp
pop
pop
insb
adc
add
push
cmc
add
dec
flds
add
sbb
sbb
sub
mov
arpl
test
repz
xchg
push
mov
mov
es
jle
jl
jp
xor
insl
rolb
jnp
ret
push
mov
test
lcall
int3
fwait
mov
dec
mov
cmc
sbb
in
dec
std
ss
int
stos
add
dec
rcll
outsb
loope
cmp
xor
pop
popf
repnz
pop
ficomps
jne
pop
jge
mov
sbb
ljmp
dec
dec
scas
shrb
fstpl
adc
or
fsub
fldenv
dec
adc
call
or
inc
mov
or
test
fistl
sub
int
cmp
out
movsl
cs
push
data16
mov
lea
cltd
jo
ljmp
or
xlat
or
sub
aam
das
fwait
mov
push
cs
xor
fnstcw
sahf
inc
stos
test
shll
pop
out
inc
ret
dec
mov
cmpsb
jmp
fstl
jo
popa
dec
gs
push
fmull
dec
inc
outsb
in
jge
dec
ret
shrb
mov
cmp
stos
test
pop
mov
fsubrl
repnz
sub
std
clc
xchg
cmp
lods
fcomps
jecxz
add
insl
fwait
push
in
lods
add
push
fucomp
repnz
fistpll
enter
outsb
fwait
mov
out
inc
scas
lret
push
mov
and
xorb
mov
sbb
fcomps
jle
push
xor
push
cli
jecxz
jae
mov
or
flds
arpl
rorl
mov
rorl
mov
sahf
data16
or
out
scas
ljmp
jmp
insb
sbb
fildl
pop
inc
cmp
mov
addl
sbb
jno
lret
arpl
dec
es
test
rorl
insl
bound
popa
lret
int3
mov
mov
cmp
add
push
leave
push
ss
jbe
orb
pop
mov
pop
ret
mov
lods
adc
dec
lea
xchg
scas
jecxz
rcll
mov
popa
or
movsb
into
or
adcb
lods
jne
and
rorb
test
shrb
das
ret
jecxz
xchg
jmp
jno
aas
push
cmp
or
sbb
adc
pop
loope
popf
pop
jmp
or
inc
sbbl
cmp
imul
call
clc
jmp
into
lahf
push
pop
leave
xchg
add
popf
dec
push
iret
outsb
cltd
cmc
dec
adc
rclb
mov
dec
idiv
popa
or
pop
xchg
test
repnz
push
cmp
clc
push
ljmp
popa
lods
flds
rcrl
into
sbb
je
inc
lock
int
inc
push
xchg
pushf
jae
ret
push
test
push
imul
mov
daa
insb
ja
xor
imul
daa
jmp
out
adc
dec
adc
push
out
adc
clc
sbb
lret
stos
adc
fiaddl
mov
push
push
rorb
xor
mov
add
push
fildll
cmp
out
es
jecxz
stos
rclb
xchg
jge
jae
movsl
imul
add
pop
push
repnz
out
arpl
out
sub
les
push
ret
inc
imul
mov
cmp
loop
rcl
push
shll
xor
rcrb
ss
sub
fstps
mov
jp
out
scas
dec
xchg
jge
out
xchg
mov
pop
mov
xchg
shr
add
dec
xlat
pop
ljmp
mov
lds
cli
push
add
rcrl
push
fnstcw
scas
aad
lret
xchg
mov
xlat
or
and
fwait
mov
pop
inc
xor
cltd
cmp
pop
cmp
and
mov
jge
ja
gs
loope
mov
icebp
ss
ret
xchg
leave
sub
in
inc
pop
mov
xchg
mov
inc
popf
jge
dec
pushf
scas
mov
mov
in
sti
xor
cmpsl
push
dec
mov
sub
sub
mov
jbe
ss
jne
or
cmp
xor
out
pop
add
lahf
adc
and
incl
in
sub
add
aas
aaa
cwtl
adc
fcmovb
adc
shlb
mov
xor
cltd
mov
jge
iret
sbb
jg
xor
cmp
inc
insb
shrl
dec
dec
lahf
je
cmp
sti
fcmovnbe
rcl
mov
and
sbb
lahf
lea
push
lods
mov
nop
shll
cmpl
and
call
push
std
fwait
in
bndldx
sarb
aad
dec
push
pop
out
push
inc
xorl
out
jae
ss
xchg
or
ret
jp
push
cmpl
xchg
and
adc
lods
aad
idivb
insb
and
jne
inc
mov
cld
add
pop
ret
jae
pop
lock
mov
repz
or
mov
xchg
dec
mov
mov
mov
and
cmpb
mov
lret
push
into
lret
mov
sub
arpl
ret
mov
out
mov
mov
in
mov
push
nop
pop
fcmovu
outsb
lea
xchg
rorl
sahf
nop
dec
adc
mov
pop
jo
pusha
insb
jl
and
jno
add
xchg
push
test
mov
xchg
lds
test
or
pushf
pop
ss
jae
mov
call
cmc
imul
xlat
pop
fiaddl
xchg
adc
adcl
mov
mov
inc
pop
ss
in
shrb
and
sub
sub
inc
and
cwtl
out
dec
push
popf
test
cmpsb
ljmp
popf
mov
repnz
adc
or
adc
out
pop
sbb
stos
push
ljmp
stc
je
jno
rcrl
out
inc
sbbl
cs
xchg
lds
ret
mov
fbld
ljmp
pop
loope
dec
mov
jle
sbb
out
mov
cmpsb
and
mov
out
clc
gs
xor
jae
inc
bound
es
mov
mov
scas
dec
lods
out
repz
jg
push
cmc
adc
in
pushf
sbb
add
repnz
aas
lods
jle
add
add
loop
and
gs
inc
shl
insl
in
ds
cmpsb
push
rcrl
xchg
jg
loopne
in
popf
cli
jne
in
xor
cwtl
mov
call
jecxz
cmp
sub
push
xchg
xor
ret
test
cwtl
aaa
rorl
xlat
or
mov
sub
pop
imul
dec
icebp
cmp
mov
cli
imul
mov
mov
push
shlb
bound
jg
inc
imul
pop
scas
daa
pop
inc
imul
std
push
mov
shlb
popf
enter
mov
ret
enter
xorb
scas
loope
out
mov
mov
cmp
dec
mov
addl
mov
loopne
mov
in
mov
mov
orb
jg
mov
stos
sub
insl
sbb
cmp
sbb
or
test
add
mov
mov
imul
mov
inc
jno
pop
cs
stc
push
mov
aad
std
mov
push
inc
mov
jmp
sub
pusha
aad
inc
mov
stos
rcrb
or
mov
cmp
push
in
xor
and
fisubrs
movsl
push
sub
cmp
jbe,pn
popa
cmc
mov
sub
hlt
mov
jmp
outsb
push
ds
or
push
cmp
sbb
add
in
jnp
insl
inc
inc
add
jge
iret
js
pop
pop
int
decl
cmp
test
mov
lods
insb
imul
enter
insl
sahf
dec
daa
mov
fisubl
pop
test
mov
test
mov
inc
dec
or
cmpsl
jo
aad
pushf
push
sub
je
cmp
stos
mov
insl
cmpsl
cli
jp
cmpsl
addl
cltd
rolb
addr16
mov
cli
aad
repz
and
push
aas
pop
mov
popa
scas
xchg
push
lods
inc
sbb
loope
int
in
arpl
mov
xor
rcrb
es
movsb
nop
adc
jmp
dec
out
mov
inc
sub
or
mov
fsubp
andl
mov
cmp
mov
fs
insb
insb
shl
arpl
ficomps
movsl
adc
in
mov
cmp
lock
xchg
into
daa
xchg
hlt
or
push
je
lret
mul
jno
sahf
dec
sub
xor
inc
loopne
and
inc
shl
cmpsb
mov
lret
jae
sub
in
sarb
sbb
sbb
sbb
mov
pop
cltd
xor
aad
jne
pop
imul
dec
rorl
movsb
cld
shll
sub
xchg
xor
inc
xchg
je
push
xchg
std
cmpsb
mov
sub
mov
cmp
sub
jmp
sbb
push
mov
fdivr
imul
push
jge
cmp
ret
je
jb
jmp
push
clc
out
sub
stos
loope
add
test
or
or
aas
stc
xchg
jle
inc
mov
lret
arpl
push
dec
jbe
xor
push
sub
in
lds
push
arpl
sarb
cmpsb
in
testl
cmc
xchg
sbb
sub
mov
pop
dec
out
add
cmc
sbb
stos
push
pop
movsb
repnz
jae
push
xchg
frstor
bound
mov
sbb
or
mov
out
xor
js
push
jnp
stc
xchg
arpl
sarl
mov
addr16
sub
lcall
fidivl
lea
add
jecxz
insl
out
inc
mov
je
jmp
inc
in
mov
stos
and
ja
mov
insl
dec
xchg
lret
push
mov
aad
imul
and
adc
clc
pushf
and
cmp
jbe
adc
cmp
mov
lret
fisubrl
adc
das
clc
cmpsl
push
xchg
pop
jl
mov
aas
int
ljmp
jle
xchg
test
xor
into
fs
adc
jmp
jecxz
push
adc
int3
hlt
dec
or
cltd
push
out
scas
pop
in
sarl
mov
jo
cmp
or
stc
adc
inc
push
pop
cltd
hlt
mov
push
dec
jb
dec
cmp
jns
mov
fsubp
shl
cmc
pop
ds
fs
jecxz
pop
cmpsl
aas
xchg
sahf
xor
imul
rclb
dec
addr16
pop
or
adc
xchg
mov
movsb
test
push
hlt
lods
push
jbe
out
and
inc
movsb
scas
inc
xor
sub
aad
ss
fisttps
out
sub
aam
addr16
sub
aad
cmp
outsb
adc
add
jg
adc
push
cltd
mov
dec
imul
test
sub
cmp
xor
jmp
pop
push
insb
stos
lahf
and
test
lcall
mov
ja
sbbb
loop
push
sbb
xchg
jge
jl
je
test
xor
push
dec
test
xchg
sbb
les
fistpl
lock
mov
mov
mov
popa
insl
xchg
jns
pop
push
jae
sub
and
test
xchg
lods
mov
xor
ds
pop
das
pop
clc
mov
aaa
adc
movsb
out
and
idivb
fstpl
leave
mov
sbb
insb
pop
stos
adc
sub
std
jne
mov
adc
sub
mov
filds
pop
pop
rclb
subl
lret
in
dec
or
jg
xchg
cs
repnz
and
loope
jns
outsl
iret
xor
sbb
ljmp
loopne
adc
dec
xchg
ficomps
adc
icebp
dec
inc
aas
test
out
stos
xor
inc
adc
mov
arpl
lret
adc
rcrl
inc
add
cmp
inc
dec
lock
dec
jns
les
add
add
iret
sarl
mov
out
cmp
lret
clc
or
push
and
addb
lret
notb
and
aam
xor
jge
fidivl
push
clc
jae
out
cmpsl
dec
in
loop
js
jecxz
pop
lea
dec
xorb
dec
cmpsb
je
hlt
scas
gs
je
hlt
stc
movsb
mov
xchg
jne
add
and
leave
jmp
jp
enter
cld
leave
or
and
inc
cmp
and
les
imul
imul
jge
push
rolb
adc
outsl
pop
sbbl
xlat
and
stos
insb
montmul
cmpsb
inc
test
xchg
xor
popa
mov
fidivs
inc
in
in
and
outsl
dec
adc
jo
sub
stos
sahf
bound
inc
add
lock
cld
mov
add
inc
sbb
push
xor
push
cmp
outsl
mov
push
cltd
push
dec
jnp
xchg
lods
aas
pop
push
and
push
mov
clc
jecxz
out
mov
mov
pushf
adc
jp
sub
fcomps
pop
gs
jp
mov
scas
mov
cmp
inc
pop
pop
loope
insb
fcmovb
xlat
adc
shr
cmp
mov
cmpsb
movb
jecxz
inc
rcrl
adc
jge
cwtl
repz
pop
mov
jae
mov
push
mov
sarl
in
mov
add
lock
bound
test
add
adc
inc
add
xchg
lret
aas
mov
add
dec
sub
cmp
sub
push
fs
dec
lret
arpl
dec
sub
or
push
loope
or
dec
jne
ljmp
inc
mov
inc
repz
inc
or
or
or
js
clc
mov
jg
hlt
arpl
orl
in
xchg
and
lock
addl
inc
mov
movsl
jns
dec
mov
and
arpl
cmpsb
dec
les
imul
and
shlb
adc
cmp
and
subl
fsubp
or
jecxz
shrl
jbe
aaa
xorl
addr16
jl
test
aam
push
clc
dec
mov
mov
pop
jne
add
and
sbbb
cmp
mov
nop
shrl
pop
loop
movsl
sbb
or
adc
clc
jns
mov
jo
stos
inc
push
dec
push
dec
dec
adc
xchg
test
push
dec
pop
jmp
cmp
push
jecxz
xor
cmp
loopne
popf
lds
fstps
push
ret
sub
mov
mov
mov
jp
jbe
and
pushf
xor
mov
cmc
or
mov
andl
insl
add
cwtl
xor
jae
push
jg
sti
out
sarb
rorb
dec
sub
cmp
imul
mov
ffree
sbb
insl
add
jl
push
stos
jb
repz
adc
js
addb
mov
ljmp
xor
jle
inc
ds
adc
adcb
insb
insb
mov
push
inc
push
push
dec
iret
lret
mov
lea
in
arpl
pushl
cmp
sbb
mov
not
xor
es
inc
mov
or
push
shll
mov
adc
fisubl
rorl
push
cmpsb
js
lea
cmp
int3
mov
sbb
mov
and
push
inc
mov
jecxz
insl
repz
shr
shrb
jne
repnz
bound
lock
mov
int
add
outsb
inc
jno
lods
mov
inc
or
data16
ret
into
jbe
scas
ljmp
imul
fadds
pop
icebp
aas
dec
lea
nop
mov
shlb
and
shrb
mov
lret
bt
pop
cs
sbb
out
test
cmp
dec
add
fdiv
stc
dec
in
icebp
inc
and
out
cmp
mov
aad
int
pop
aas
mov
and
subl
xor
add
test
xor
mov
lret
fcoml
ds
push
inc
pop
xchg
and
lret
mov
cld
mov
loope
push
push
xor
mov
ss
cltd
mov
roll
sbb
shll
scas
cmp
inc
fucomi
insl
sarb
mov
pop
dec
bound
push
push
inc
xor
and
mov
mov
push
lcall
fiaddl
dec
mov
xor
add
call
rclb
inc
iret
add
cld
sbb
sbb
dec
popa
xchg
scas
push
pop
add
pop
add
ja
fadds
lret
fs
aaa
stos
lret
in
lret
sub
pop
push
pop
inc
inc
fs
or
mov
mov
mov
roll
mov
les
jae
push
aam
inc
sbb
adc
lods
xchg
mov
into
andl
dec
jb
push
out
pop
cli
aad
pop
and
pop
int
jge
aaa
test
gs
in
cmpsb
mov
ret
fdivl
mov
pop
test
pop
jp
dec
push
jno
sbb
shll
fdiv
mov
pop
xlat
mov
inc
mov
fdivs
scas
mov
mov
iret
inc
rcrl
xchg
mov
int3
sub
push
cmp
mov
cmp
push
mov
xchg
ja
sbbb
addb
test
push
popa
and
mov
sub
sub
sub
xor
mov
inc
add
push
inc
dec
ja
and
mov
jg
mov
sarl
push
call
xlat
add
sbb
jno
out
test
adc
and
int
inc
mov
push
scas
cmp
fnstenv
es
xor
sub
or
dec
ror
icebp
in
pop
cld
arpl
dec
lret
loop
orl
pusha
adc
imul
orl
sbb
mov
cmpl
cmc
fcomip
rcll
fs
insl
rcrl
or
and
xlat
js
cmpsb
pop
loopne
leave
jae
lods
aaa
test
insb
inc
sbb
mov
bound
inc
push
faddp
je
rcr
sarl
inc
add
pop
cmp
jo
inc
pop
rcll
xchg
iret
push
jmp
in
xchg
pop
cmp
loope
fldl
negl
mov
xor
sbb
imul
fucom
jmp
push
aaa
or
inc
dec
icebp
push
mov
sbb
push
adc
pcmpgtb
add
stos
adc
pushl
sbb
daa
cwtl
or
aaa
mov
lea
lods
sub
stos
push
inc
push
push
sub
sub
jno
sub
mov
int3
clc
scas
negl
test
pop
out
add
or
cmp
lea
pop
xor
mov
mov
leave
jb
pop
outsl
lret
adc
lods
mov
outsl
sti
xchg
jae
fcompl
jnp
cmp
popa
in
sbb
int
mov
les
fists
sub
test
inc
sahf
inc
jp
pop
xchg
lods
mov
mov
aas
movsl
dec
xor
inc
dec
into
int3
fldt
addr16
fsub
movsl
adc
push
inc
adcl
and
sahf
movsl
mov
pop
xchg
negb
inc
lods
shrb
add
xor
mov
push
icebp
lods
mov
inc
fnstcw
adc
cmp
jmp
jne
mov
pop
lcall
fldl
scas
or
rorb
inc
xchg
mov
lock
cs
or
add
dec
repz
and
xor
jno
jg
dec
movsb
lahf
mov
sub
inc
inc
stos
sar
or
gs
loop
xchg
ficompl
decb
aaa
cmp
popa
mov
stc
in
aam
in
stos
aaa
xor
lret
push
and
fimuls
sbb
inc
xchg
or
mov
xor
and
inc
jmp
xor
fs
les
stos
pop
add
decl
xchg
mov
test
cmp
xchg
add
pop
out
or
imul
and
fisttpl
dec
int3
jge
cmp
adc
jecxz
adc
pop
cmpsb
stc
pop
lods
outsl
dec
sub
mov
out
out
and
xchg
mov
out
xorl
stc
xchg
cmp
push
mulb
das
in
dec
sbb
sbb
push
or
in
dec
mov
test
or
repz
imul
push
in
shll
outsb
jnp
ss
out
sbb
movsl
es
pop
fsts
pop
test
loope
xchg
dec
js
dec
stos
in
aaa
cmpb
cmp
push
lds
lea
mov
stc
jg
ja
push
cmp
mov
not
sahf
jo
fsubl
pop
xlat
int3
frstor
jmp
mov
ss
loopne
sub
stc
aam
sbb
sti
test
push
imul
outsb
imul
repnz
xchg
cmp
scas
cmp
xchg
mov
roll
in
mov
mov
or
lret
xor
lds
push
fsubrs
jnp
sbb
mov
mov
push
imull
subl
mov
push
sub
nop
mov
adc
test
mov
inc
xor
or
or
xchg
movsl
dec
scas
fistps
mov
pushw
and
in
movsl
fisttps
repz
xchg
mov
lcall
cmp
lods
mov
cmpl
xlat
mov
and
js
push
mov
test
fnstsw
out
dec
adc
xchg
sbb
cs
test
push
mov
mov
hlt
xchg
pop
xchg
sti
test
sti
xor
sbb
jmp
jge
outsl
aad
data16
mov
js
mov
pop
imul
outsb
and
lret
jb
or
cmp
popf
pop
push
call
push
mov
ss
movsb
mov
test
or
xor
push
fistpll
sbb
xor
imul
cli
rcll
outsb
aaa
rcl
sub
das
popa
es
and
popf
push
jb
sbb
insb
cmp
mov
das
push
movsl
rclb
aad
pop
mov
aad
nop
jle
clc
imul
lret
fldenv
mov
test
push
loop
rcrl
sbb
xchg
pop
out
mov
mov
popf
movsl
jge
loope
push
fcmovnb
pop
sbb
jle
sar
jp
clc
sub
push
mov
stc
push
jecxz
mov
cmp
mov
pop
dec
dec
add
xchg
movsl
push
push
bswap
popf
or
xchg
cli
push
pop
test
mov
in
jne
push
jo
jmp
mov
jg
aad
adc
fdiv
iret
sub
xor
mov
pop
int
mov
sbb
pop
xchg
shl
pushf
fucom
cs
rolb
inc
test
in
test
mov
sub
es
mov
loopne
xor
cwtl
mov
fidivrl
repnz
sbb
shll
addr16
popl
mov
sub
and
add
lods
test
push
mov
fs
jg
mov
repz
push
mov
xor
xchg
push
call
test
lcall
xchg
inc
pop
lcall
fdivs
rcll
and
dec
pop
dec
adc
fbld
js
add
jle
fstps
faddl
or
insb
fcoml
inc
mov
repnz
popa
push
inc
jge
and
mov
insb
and
iret
push
scas
push
adc
out
arpl
int
or
mov
lea
dec
stos
fisttpl
push
ds
out
mov
sub
xor
in
imul
loop
gs
inc
sbb
jmp
inc
pop
push
jmp
pop
mov
aam
pop
or
adc
xor
cmpsl
enter
push
lcall
and
addr16
lret
fucomi
mov
je
std
shll
int3
and
sub
inc
ret
push
inc
ret
dec
int
or
popf
add
inc
sbb
roll
pusha
mov
rorl
mov
ds
shll
lcall
mov
jp
and
add
jb
mov
push
mov
nop
xchg
cmp
scas
add
adc
jmp
out
insb
mov
xchg
add
fisttps
or
sub
pop
sub
dec
and
add
out
daa
sub
adc
scas
cltd
lret
lret
add
popa
mov
cwtl
and
adc
cmpsb
test
xchg
adc
xchg
sbbb
test
push
pushf
decl
popa
mov
adc
adc
cwtl
mov
and
mov
roll
rcrl
mov
pop
arpl
dec
sub
add
es
ss
mov
xor
jae
arpl
sub
filds
icebp
mov
int
enter
loop
inc
inc
adc
or
push
je
insb
movsl
lret
lcall
filds
adc
mov
lret
dec
adc
out
arpl
filds
mov
and
push
out
push
push
xor
rorl
sub
pushf
push
inc
push
test
add
es
icebp
imul
dec
stc
inc
lea
popa
out
push
cwtl
cltd
daa
pop
jno
aam
test
pushf
sbb
adc
popf
lods
and
je
rolb
aad
sbb
nop
leave
fwait
adc
xorb
lret
loope
pop
dec
mov
imull
add
jae
mov
xor
mov
xchg
mov
pop
pop
cli
int3
xor
mov
adc
cmp
push
or
push
push
push
nop
cmp
stos
xor
sbb
lds
test
xchg
stos
jnp
in
jge
xchg
icebp
pop
sbbl
xchg
mov
pop
xlat
push
inc
mov
lret
sbb
push
ror
fsubl
jbe
sti
icebp
dec
test
in
dec
and
scas
ljmp
in
roll
or
adc
enter
jae
pop
cmp
mov
sub
and
jns
mov
adc
ja
mov
movl
xor
out
inc
dec
arpl
pushf
es
xchg
test
add
pop
inc
or
push
pop
mov
mov
push
push
xlat
add
daa
insl
sti
sbb
pop
cmp
hlt
in
mov
adc
fistpll
mov
movsb
sub
enter
daa
cmpsl
sbb
xor
mov
ss
repnz
sti
sub
mov
mov
mov
xor
loop
or
loopne
pushf
fwait
mov
in
jno
stos
cmpsb
iret
xchg
jecxz
pusha
stc
fst
aas
push
or
pop
mov
insb
mov
in
push
mov
xor
cmpsb
lock
int3
mov
cmp
fdivr
dec
sbb
mov
xchg
outsb
and
pop
dec
scas
pop
pop
es
jmp
cwtl
push
push
sub
or
aaa
js
push
aam
sub
pop
test
mov
pop
sub
jecxz
push
fmuls
repnz
pusha
leave
lcall
push
mov
enter
inc
sbb
ret
add
xlat
std
popa
popl
xor
out
mov
cld
adc
enter
mov
lcall
leave
mov
sbb
fwait
inc
lret
mov
jge
lods
repz
push
cmp
jnp
test
dec
pop
pop
inc
mov
cmp
mov
or
or
inc
pop
fwait
lcall
arpl
arpl
push
imul
inc
adc
sahf
les
lret
and
mov
or
push
mov
fidivs
in
adc
xchg
rclb
mov
add
push
xchg
and
icebp
insb
stc
jle
dec
rcll
loope
mov
clc
fs
push
sbb
pop
jle
lods
cmp
in
shl
push
xchg
mov
push
test
repz
call
inc
repnz
dec
sub
sbb
xor
loope
dec
fs
shrb
pop
cmp
add
mov
cltd
sbb
push
fs
sbb
test
and
pushf
push
fsubl
setb
andb
xchg
inc
push
imul
inc
cmp
jbe
iret
sub
mov
jg
repz
jns
es
rol
cld
test
pop
mov
dec
jmp
aam
mov
cmp
dec
mov
loop
mov
sbb
jnp
fidivs
and
call
jge
xchg
lret
mov
shlb
jbe
loope
testb
test
push
jae
mov
mov
dec
and
lods
cmp
bound
mov
adc
loope
and
xor
in
mov
mov
mov
pop
push
jp
xchg
jae
or
mov
iret
mov
stos
mov
sahf
and
sub
sti
and
xchg
ja
cmp
std
pop
sbb
cmpsb
lcall
idivl
mov
sub
dec
mov
cmpsl
sbb
xor
lock
outsb
test
mov
cmp
aad
rorb
xchg
or
pop
js
push
js
out
mov
stc
mov
rcll
test
sahf
cli
mov
dec
ret
and
jb
and
push
mov
cmpsb
mull
sti
xor
rcr
jl
cltd
icebp
inc
in
or
jmp
cmp
fs
xchg
movsl
push
mov
push
cmc
xchg
mov
sub
in
pop
aad
mov
xor
hlt
push
je
sub
add
and
sbb
xor
push
aas
out
pop
ret
adcl
test
call
pusha
and
lods
movsb
je
fidivrl
mov
out
fstpt
jg
daa
shlb
insb
dec
and
popf
inc
dec
cmp
aaa
sbb
clc
xchg
mov
xor
add
sub
int
cmp
fcmovnu
cmpsb
loop
mov
and
rorl
cmp
add
push
in
push
mov
imul
shlb
inc
fidivrs
into
ljmp
pop
push
test
dec
test
shlb
pop
lods
imul
mov
or
sti
mov
aas
loopne
cltd
and
jb
xor
jne
jb
fistl
sub
loopne
movsl
adc
mov
fists
sarl
xchg
jg
int3
push
test
or
inc
mov
and
jge
icebp
and
mov
add
cmp
dec
push
mov
leave
icebp
insb
inc
lea
sub
outsl
and
andb
jo
loopne
add
testb
and
gs
pop
adc
xchg
std
mov
ljmp
add
call
insb
add
add
loope
movsb
push
dec
pop
pop
fidivl
xor
outsb
dec
mov
sti
pop
repnz
stos
fimuls
fdivrl
leave
xchg
out
jge
call
in
dec
xor
cmpsb
vpaddd
int
pop
fcomps
mov
pop
adc
pop
pop
out
cmp
dec
aad
shrb
lret
add
fsts
aad
push
subl
push
mov
mov
call
aam
int
shll
adc
addr16
add
cmc
pop
nop
pop
adc
das
dec
stos
inc
int3
sbb
lods
ss
jg
fidivrl
push
into
xlat
fimull
and
movsb
xor
into
dec
xor
sbb
mov
adc
cmpsl
shrb
sub
icebp
adc
sub
xor
xchg
std
daa
scas
jge
mov
repnz
sub
sbb
cli
jle
in
xor
xchg
and
inc
push
or
mov
sbb
pop
jns
or
mov
jmp
sbbb
mov
mov
sub
dec
push
je
xorb
pop
andl
xchg
adc
dec
cwtl
mov
mov
popa
sub
xor
add
xchg
or
and
bound
inc
jo
cmp
js
xchg
push
mov
cld
push
cmc
xor
push
leave
stos
cwtl
pop
xor
mov
subb
pop
insl
dec
repnz
sahf
cmp
or
jmp
ficoml
jbe
aas
repz
je
push
mov
mov
inc
lea
pop
lahf
fbstp
add
jb
sti
bnd
fwait
leave
enter
mov
aam
mov
cld
sbbl
cmp
sbb
jb
cltd
add
das
rorl
push
pop
pop
add
cmpb
rcll
int3
ret
icebp
inc
jp
call
mov
out
call
sbb
mov
dec
icebp
fwait
ret
repz
push
icebp
sqrtps
shl
in
fcoms
sahf
dec
fs
mov
dec
outsl
xchg
hlt
xchg
lock
lret
enter
inc
cli
adc
lahf
pop
popf
or
xchg
xchg
outsl
push
movsb
jns
jmp
out
xor
out
loop
ret
rorb
cmp
pop
es
push
pop
out
loope
ret
inc
test
xlat
es
clc
or
jmp
pop
shlb
popa
addl
xchg
das
fistpl
mov
pop
cwtl
lret
aad
sbb
mov
les
enter
ficomps
ja
daa
fsubp
push
sub
cmp
push
or
lods
js
mov
aam
sub
and
mov
xor
add
sub
addr16
pop
aad
je
pop
push
inc
ja
jl
pop
mov
mov
push
pop
pop
arpl
mov
das
push
sub
add
nop
fnstcw
rcll
mov
loop
popa
lcall
lret
and
or
push
flds
cli
cmpsl
dec
xchg
mov
adc
mov
insb
subb
pop
cmp
mov
roll
and
cmp
pop
jo
dec
xchg
sub
notl
and
mov
mov
mov
jnp
scas
xor
arpl
shlb
subl
into
popa
ds
fwait
repz
inc
popl
xor
push
cmp
sub
push
scas
mov
xchg
push
adc
xchg
dec
mov
push
mov
sub
push
les
inc
arpl
adc
js
lret
add
ljmp
hlt
inc
stos
pop
mov
cmpsl
xchg
sub
dec
scas
scas
push
clc
sub
lods
lret
and
cmp
out
mov
pop
test
xadd
pop
mov
or
mov
xlat
adc
repz
xchg
adc
or
push
mov
dec
dec
in
pop
push
aad
rclb
or
hlt
sbb
adc
push
adc
enter
jge
jb
sub
push
cmp
mov
cmp
push
adc
adc
fcoml
mov
arpl
xor
push
mov
jp
test
movsb
and
into
inc
inc
mov
jno
jb
popa
adc
sub
cmp
sbbl
and
xchg
jl
cltd
ret
xchg
fs
test
mov
sti
enter
lods
add
gs
fisttpl
cs
es
dec
push
or
adc
push
scas
rorl
mov
icebp
imul
mov
orb
mov
xchg
jle
xor
jb
jne
pop
or
inc
jecxz
arpl
daa
push
push
push
push
into
mov
inc
push
aas
pop
jns
push
xchg
dec
xor
ja
mov
cmpsl
mov
sbbb
out
fldl
pop
sub
adc
into
push
add
hlt
xchg
and
or
cmp
stc
xor
out
xor
stos
push
sti
xlat
fdivrs
aaa
sahf
push
add
sub
shrl
dec
cmpsl
jo
dec
inc
pusha
xlat
mov
or
jecxz
mov
pop
dec
stc
cs
sbb
addb
call
mov
jns
loopne
cmp
mov
xchg
dec
mov
test
sub
iret
mov
mov
push
mov
rolb
pop
push
jecxz
hlt
outsl
jle
rcr
cmp
pop
in
xlat
loopne
sub
push
fstpt
mov
daa
addr16
mov
mov
add
pop
insb
xor
cmpsb
leave
imul
xor
cmp
mov
mov
das
mov
test
cmp
push
orl
fidivs
push
mov
inc
pushf
rorl
mov
xchg
jbe
es
in
call
push
xchg
mov
lahf
scas
xchg
add
out
xchg
outsb
push
mov
xchg
adcb
xchg
pop
lcall
mov
int3
sbb
xchg
scas
cmpsl
cmp
imul
xchg
stos
mov
fnstcw
mov
inc
pop
adc
inc
call
jo
mov
repnz
cmp
pop
and
scas
and
mov
push
mov
popf
adc
mov
jne
xor
lea
fldcw
dec
mov
add
cli
or
pop
xchg
fwait
or
popl
iret
in
dec
and
push
xchg
loop
push
mov
xchg
insl
sub
gs
sub
jo
insl
xor
dec
ss
and
out
xor
or
frstor
sbb
cmc
ficoml
mov
mov
dec
mov
sub
push
xor
xchg
idivl
cmp
stc
jne
push
loop
mov
or
mov
stos
addr16
ljmp
aad
cli
das
rcl
ret
push
add
xchg
dec
push
or
gs
sub
dec
or
or
aaa
in
xchg
imul
cmp
xor
push
lcall
or
repnz
or
test
xor
fwait
clc
xchg
les
pop
xchg
inc
les
fwait
cltd
pop
aas
test
call
fcmovnb
mov
test
inc
inc
and
fadd
add
push
jno
jbe
jo
leave
sbb
push
mov
ljmp
es
into
ficompl
jge
pushl
adc
leave
sub
adc
xlat
mov
cmpsl
lock
sbb
sti
ja
push
mov
jno
mov
ret
adc
inc
repnz
sub
aaa
add
pop
lock
es
negb
xor
or
mov
sbb
pop
ljmp
repz
jmp
lahf
xchg
scas
or
dec
pop
add
add
xchg
dec
jmp
int
fistpl
mov
fs
pop
pop
ret
inc
scas
cmp
cmpsb
movsl
push
dec
outsb
xlat
cmp
mov
dec
stc
add
outsb
shl
push
pushf
cmp
popa
dec
cld
shrl
mov
mov
stos
push
mov
jnp
mov
sbb
sub
orl
adc
xchg
data16
les
mov
or
iret
jne
in
xor
mov
jmp
pop
jge
imul
leave
sub
cmp
add
and
cmp
sahf
out
xchg
cmp
sub
inc
clc
cmp
ret
ss
xchg
addr16
rcrl
divl
jle
imul
movb
fs
fucom
aam
imull
test
bound
adc
or
cmp
cs
dec
loop
rorl
ja
cs
push
outsl
or
popa
repnz
push
aaa
bound
imul
fwait
cld
test
push
mov
pushf
je
lcall
out
cmp
and
push
mov
jne
dec
aam
pslld
test
pop
lret
mov
test
daa
and
lahf
jge
mov
imul
fdiv
cmp
inc
fwait
cmp
sarl
hlt
or
mov
xchg
push
fdivs
mov
inc
std
mov
cmp
sub
adc
cmp
mov
push
xchg
scas
push
push
mov
xchg
pop
sti
mov
mov
fsubrl
inc
xor
push
cmp
push
std
fdivrl
pop
add
mov
xchg
ljmp
rolb
mov
mov
mov
arpl
fistpl
dec
push
aad
push
dec
mov
adc
pop
lock
enter
pop
mov
sub
jmp
and
mov
movl
gs
push
int3
sub
int3
pushf
inc
aam
pusha
shl
test
mov
call
loop
pop
jae
cwtl
mov
push
sub
scas
imul
testb
xchg
mov
cltd
push
mov
int3
mov
aas
push
mov
and
outsb
and
test
test
xchg
cmp
stos
push
push
cs
ret
xor
xchg
adc
fadd
lods
fnstcw
cmp
adc
jno,pn
test
jo
mov
xor
test
inc
sbb
outsl
mov
xchg
loopne
adc
and
ljmp
xlat
lret
pop
dec
or
daa
push
xchg
pop
xchg
fadds
push
into
pop
cli
pop
xchg
xor
add
dec
inc
jecxz
setne
in
jne
repz
pop
test
inc
sbb
pop
movsl
xor
rcll
rcl
fdivrs
repz
mov
je
in
xchg
jb
ds
out
int3
xor
ret
dec
repz
xchg
sarb
popf
push
mov
mov
inc
inc
mov
in
inc
push
mov
test
movsl
and
jne
pop
hlt
dec
sub
mov
movsl
add
out
mov
inc
mov
insb
test
mov
test
in
in
xchg
movsl
xchg
int
in
adc
andb
push
push
test
lcall
jecxz
cmp
push
inc
fnstenv
mov
aam
imul
xor
add
daa
aaa
shll
cmpsb
repz
dec
adc
push
fcmove
sbb
in
mov
pop
add
popf
cltd
pop
jg
push
shrl
aam
aad
push
stos
call
push
add
or
mov
add
cmp
xchg
je
mov
sbb
call
enter
mov
inc
xchg
jge
push
iret
jbe
cmp
scas
js
push
jo
cmp
mov
mov
addr16
inc
sub
sbb
sub
mov
mov
cmp
and
push
jl
pop
and
js
or
adc
sbb
or
add
xchg
add
pusha
mov
lcall
dec
mov
lea
notb
pop
mov
jb
pop
push
test
inc
filds
pop
jmp
mov
stc
or
or
inc
sub
jo
pushf
xchg
aam
mov
cmpsl
imull
or
mov
popf
leave
jp
cld
jno
andb
aad
adc
push
lods
jl
sub
lcall
jg
imul
adc
or
jg
repz
js
cmp
cmp
in
in
adc
mov
and
jp
dec
fcmovnu
insl
rcrl
and
out
lcall
in
fisubl
cli
sbb
sahf
add
mov
xor
and
pop
lret
cli
fdivl
lods
inc
adc
xchg
or
jbe
ja
enter
andl
iret
insl
popl
cli
leave
pop
imul
nop
ds
jnp
jne
lods
sbb
mov
mov
or
call
mov
movsb
jnp
mov
fldl2t
mov
xor
jnp
test
pop
dec
dec
adc
gs
dec
dec
leave
aas
and
testl
int
mov
lds
xchg
inc
pop
jo
pop
jecxz
es
mov
inc
sahf
sub
xchg
cmp
lock
mov
ret
inc
sub
addb
push
xor
jmp
lods
mov
and
and
mov
rol
xlat
pop
sbb
jp
mov
or
daa
shlb
or
dec
xor
add
gs
push
je
or
mov
cmc
add
ret
jecxz
sub
and
push
push
jo
lret
dec
push
lds
lcall
jno
and
jmp
adc
or
adc
je
sbb
xor
hlt
jae
sub
pusha
push
mov
and
adcl
ss
xor
push
cltd
repnz
pop
jb
and
mov
sub
jbe
mulb
mov
jg
inc
pop
push
adc
pop
fisttps
test
and
lcall
int
pop
sbb
xor
inc
lret
jnp
mov
pop
push
mov
pusha
dec
dec
fcomps
add
popa
icebp
push
xor
adc
in
jmp
or
or
push
xchg
filds
cmp
jl
fsub
sbb
repz
out
mov
nop
in
loope
imul
stc
dec
icebp
mov
pop
shr
and
jns
adc
xchg
add
dec
push
shlb
cld
stc
push
or
jle
mov
out
inc
push
icebp
orl
hlt
pop
mov
test
rcl
lock
mov
cmpsl
iret
xchg
push
push
cmp
push
mov
inc
cmp
jl
pop
jmp
pop
mov
dec
xor
push
or
pop
stc
pop
cmpsl
or
movsb
push
test
arpl
mov
push
dec
in
es
rcrb
adc
int3
xor
xchg
pusha
add
pop
adc
mov
jae
sbb
sub
gs
mov
loopne
ljmp
lret
out
pop
ret
mull
iret
int3
or
insb
rolb
and
or
mov
mov
push
lret
fcompl
shll
orl
xchg
testb
pop
cmpsl
jne
pop
sbb
jbe
mov
and
xor
enter
addb
mov
mov
ret
repnz
cmp
cld
xchg
das
cld
icebp
fidivl
sti
push
cmp
fisttpll
in
movsb
daa
xchg
push
fnsave
pop
push
adc
leave
adc
dec
mov
fistpl
push
dec
pop
push
xor
xor
call
inc
mov
aaa
sbb
fsubp
hlt
sbb
push
mov
daa
imul
inc
jle
fiaddl
lret
imul
sbb
fldt
dec
pop
push
add
jno
decl
dec
fstpt
scas
cmp
inc
cwtl
add
mov
pusha
mov
ret
xor
or
and
mov
outsb
ljmp
movsb
xchg
inc
or
cmp
fldenv
repz
add
mov
cmp
loope
imul
sub
das
push
or
xchg
rolb
fdivs
lret
adc
lock
add
das
test
sti
cld
cmpsl
subb
xchg
scas
loope
fisubl
addr16
or
and
adc
mulps
jnp
push
arpl
into
repz
push
mov
loop
sti
xchg
out
es
sub
aad
push
out
insl
dec
mov
cs
jecxz
and
lret
add
sub
mov
enter
dec
cltd
out
icebp
aam
test
dec
dec
in
pop
adc
and
push
or
xchg
cmovno
push
xor
loopne
push
jo
jne
shll
lods
repnz
sbb
daa
sti
std
inc
mov
sbb
sbb
mov
xchg
mov
inc
ret
pop
nop
rclb
lea
arpl
inc
jmp
jnp
mov
adc
push
cld
pop
mov
adc
in
es
mov
pop
sub
icebp
xor
test
pop
loopne
mov
roll
loopne
xchg
push
cmp
call
sti
jnp
pop
fbld
adc
sbb
in
dec
sub
mov
in
sbb
cmc
jmp
testb
mov
sub
pushf
or
or
adc
insb
push
mov
lahf
cmc
jg
idivl
mov
fildll
and
test
push
and
push
cltd
notb
daa
add
lret
bnd
xlat
and
repnz
dec
cs
sub
data16
jge
and
orl
mov
pop
add
out
cmp
lods
aaa
and
push
aas
rclb
mov
in
fnstcw
shll
cmpsl
sub
out
mov
sbb
mov
inc
loope
ja
stc
push
cli
fistl
cmp
out
ret
data16
xchg
adc
cmp
sbbb
testb
inc
movsb
add
adc
mov
mov
pop
jae
sarl
sbb
dec
inc
stos
xchg
sub
pop
fmulp
test
inc
dec
push
xor
das
cwtl
fisubs
mov
mov
mov
mov
pop
jne
cltd
lods
and
xchg
push
add
push
add
scas
ret
cmp
out
cwtl
jo
xchg
mov
cld
push
mov
pop
aam
mov
shl
in
jmp
add
adc
in
xchg
sbb
jne
jecxz
inc
lds
dec
dec
leave
mov
test
pop
into
icebp
pop
pop
test
pop
adc
cli
fwait
push
inc
cmp
es
mov
or
pushf
pop
and
or
dec
fistpll
movsb
ffree
cmp
sub
pushf
sbb
cmp
cmp
orb
movsb
loop
jmp
and
dec
jnp
sbb
xorl
mov
and
xchg
xchg
das
aaa
popf
pop
cld
sub
add
fadd
addl
rol
jae
fdivl
int3
pop
dec
subl
daa
push
pop
daa
cli
rcl
cmp
out
inc
lret
add
sub
hlt
mov
mov
lret
and
xor
les
push
setbe
dec
xchg
mov
rol
fcmovu
and
imul
fmuls
xor
aas
xor
mov
scas
ljmp
and
mov
fwait
icebp
xor
jns
cmp
sbb
ljmp
lret
into
adc
mov
cwtl
mov
out
jl
rcll
ss
lcall
test
iret
and
fcoml
mov
repz
cmp
ret
xchg
pop
scas
push
aas
mov
push
shlb
mov
lcall
out
pop
mov
sub
cwtl
mov
xchg
and
or
fldl
jp
pop
les
clc
push
roll
rolb
nop
iret
mov
clc
sbb
mov
rorl
pop
jbe
add
jle
inc
mov
xchg
and
cltd
and
fisttpl
jnp
inc
dec
xchg
cmp
xorl
iret
pushf
push
xor
fcomps
add
call
mov
dec
add
lds
jnp
jg
divb
movb
push
aaa
int
mov
gs
and
inc
xchg
inc
mov
mov
xchg
in
lock
jle
aam
inc
stc
jbe
mov
scas
hlt
gs
adc
xchg
leave
pop
xor
das
les
lods
test
data16
jge
mov
pop
xchg
in
out
icebp
cli
fidivrl
rclb
push
arpl
push
in
mov
xchg
cltd
rcll
gs
or
fwait
sbb
dec
push
sbb
in
cltd
cld
fists
cmc
push
push
pop
lds
xor
mov
fldt
rorb
dec
xchg
aas
clc
mov
js
push
scas
and
pop
repnz
jmp
dec
inc
cmpsl
sub
add
out
in
xor
mov
outsb
addb
dec
icebp
into
out
add
and
ja
inc
and
pop
sbb
popf
insb
das
xchg
arpl
mov
or
cli
lods
test
xorb
psubb
push
cs
jae
mov
mov
out
cltd
mov
or
sub
aas
xchg
fnsave
mov
cmp
imul
or
insb
or
stc
cli
jno
inc
sahf
push
xor
lret
sub
rorl
pop
xchg
leave
lret
out
faddl
xchg
cwtl
sbb
dec
incl
clc
and
and
add
pop
pushf
and
jne
jns
loop
jle
mov
fisubrl
xlat
push
jmp
jl
lcall
mov
inc
mov
push
imul
rcrb
adc
notb
out
mov
out
mov
jl
popf
sub
ret
es
inc
xor
pushf
jg
popa
and
shrl
pop
jecxz
jae
js
adc
pop
xchg
fcompl
sub
jg
subl
rcll
push
rorl
std
dec
adc
in
daa
cmpsb
es
inc
movsl
ret
or
lret
sub
outsb
jns
int
lea
mov
test
clc
hlt
jle
and
lods
in
mov
inc
mov
or
mov
pushf
cmp
int3
xchg
movsb
jnp
pop
mov
xchg
dec
subl
cltd
sbb
and
push
in
mov
int3
std
mov
sbbb
daa
dec
cld
push
aaa
jge
cwtl
push
les
iret
push
jge
stc
fstcw
mov
std
movsb
mov
jno
cltd
stos
jns
jg,pn
push
sub
jmp
insb
pop
cmp
and
xchg
or
popf
test
shr
dec
repz
sub
gs
ret
dec
mov
fistl
fucomi
or
jl
stos
imul
test
mov
sbb
stc
jb
jg
ss
xor
or
inc
add
lea
test
mov
mov
or
push
popf
xor
lea
push
int3
or
fwait
imul
test
sahf
into
leave
jns
dec
cmp
push
jmp
insb
xchg
push
cld
mov
das
add
repnz
addr16
dec
pop
pop
jp,pt
lahf
cmpsb
xchg
jae
lahf
sbb
xchg
dec
dec
dec
neg
ja
insl
ss
jecxz
add
adc
xor
add
nop
xor
xchg
dec
daa
cli
adc
jge
loopne
adc
add
fnstenv
push
xchg
adc
push
ds
rol
or
lret
movsb
test
out
cmc
les
inc
mov
cmpl
pop
cmpsl
into
push
testb
icebp
rorb
mov
push
mov
push
fcompl
fsubl
jl
xchg
sbb
mov
loopne
es
mov
out
imul
cwtl
arpl
js
out
jne
mov
or
jo
mov
sub
mov
cmp
mov
lcall
xchg
idivb
jmp
sub
test
mov
mov
out
push
or
call
push
loop
mov
sub
sub
js
and
aad
mov
mov
and
push
mov
jmp
dec
pop
movsb
dec
stc
popf
leave
lds
ret
call
movsl
scas
mov
daa
sbb
sbb
test
sbb
xchg
sbbb
sbb
or
pop
jnp
pop
test
jl,pn
inc
or
addr16
ret
fdivrs
or
fcmovne
pop
cmp
mov
mov
js
test
faddl
call
out
les
jl
test
jbe
or
repnz
in
call
mov
sbb
test
push
jp
adcb
insb
scas
lods
fsubs
sub
push
mov
sbb
fs
es
pusha
xchg
sbb
out
pop
jecxz
pop
push
decl
hlt
sbb
inc
pop
mov
loopne
and
or
push
dec
jp
es
les
jne
mov
scas
sbb
fstps
std
xchg
dec
call
mov
lcall
popf
push
fwait
out
inc
sbb
xchg
add
mov
ljmp
xchg
imull
inc
push
mov
pop
pop
xchg
inc
mov
cmp
inc
sbb
mov
shl
xchg
dec
pop
jg
mov
or
mov
insb
lcall
frstor
addr16
mov
rcrb
xchg
fmull
xor
or
imul
sbb
push
mov
xchg
ds
lods
sti
ja
mov
sbb
mov
inc
std
out
jb
mov
movl
daa
sbb
shlb
cmp
cmp
xlat
sbbl
je
mov
cwtd
and
inc
jmp
stc
push
std
jp
aas
out
fsubs
sbb
negl
fdivrp
daa
xchg
ljmp
xchg
repz
pop
imul
dec
rorl
or
add
sub
loope
scas
sbb
mov
inc
mov
call
push
sahf
hlt
sbb
test
insl
cmc
xor
jl
subl
push
xchg
jg
mov
cmp
mov
cmp
inc
adc
inc
xchg
pusha
rcll
add
out
xchg
or
mov
cmpsl
mov
push
inc
pop
ret
sub
inc
inc
and
testb
or
loope
stc
mov
lret
pop
test
daa
push
jnp
jge
and
or
xor
mov
hlt
pop
xchg
dec
dec
or
push
inc
pop
outsb
lods
push
or
mov
jge
in
xchg
dec
and
dec
jge
rsm
js
fstp
ja
sub
xchg
pop
je
inc
push
out
aaa
mov
mov
test
cli
das
ss
mov
iret
and
and
xchg
push
push
flds
xchg
aaa
jmp
push
mov
in
popf
pop
cld
and
dec
push
sub
dec
cld
cli
aad
mov
popa
sarb
outsl
mov
pop
testb
pop
and
imul
xor
sub
sbb
and
mov
push
pop
loope
cmc
pop
inc
cmp
add
sahf
fimuls
lret
push
fsts
cmp
sti
sub
addb
es
aam
add
jp
fwait
fs
push
sub
mov
movsb
repz
xor
jle
filds
pop
mov
iret
es
jae
mov
icebp
mov
cs
sahf
dec
mov
xchg
into
mov
inc
dec
jge
inc
insb
pushf
dec
mov
jge
cwtl
mov
dec
cmpsb
int
inc
in
and
pop
fisttps
int
lahf
xlat
cmpsl
push
addr16
jp
xor
jbe
test
mov
mov
in
data16
incl
mov
inc
mov
repz
adc
sub
sbb
and
lods
mov
add
xchg
in
push
repnz
pop
ss
xchg
sbb
test
fimuls
cmpsl
lret
ficomps
inc
cmpsl
fbstp
mov
shl
rorb
and
xchg
adc
icebp
loopne
inc
scas
sbb
xchg
and
mov
sbb
xchg
fucomip
popf
push
insl
dec
imul
adc
ss
dec
mov
dec
pop
sub
aas
or
and
outsb
shlb
pop
xchg
pop
js
out
jns
in
pop
pop
adc
xor
fs
and
out
insb
fcmovb
inc
test
cmp
xchg
xchg
clc
mov
fdiv
jb
pop
push
aaa
sbb
lea
ret
fcomp
cmp
and
or
daa
push
adc
das
rolb
loope
jb
rorb
xchg
sbb
and
leave
mov
inc
jae
xchg
mov
inc
lahf
es
inc
push
push
repnz
out
enter
imul
test
movsl
ds
xchg
add
dec
pusha
cmc
add
mov
ret
leave
mov
xchg
xchg
inc
mov
adc
outsb
jno
shrl
arpl
adc
std
mov
xor
sbb
jo
and
fisttps
pop
jp
pop
adc
mov
adc
mov
push
popf
pushf
les
shl
and
insb
push
pop
sub
lea
fdivp
push
sbb
fstps
mov
mov
cmp
push
fst
push
popa
ret
ret
in
inc
cs
mov
mov
mov
fwait
mov
es
add
mov
fimull
mov
lahf
dec
xchg
jle
jno
add
fsubrl
jmp
ss
push
stos
nop
dec
cmp
cmp
lahf
or
jp
sarb
xor
mov
add
dec
xchg
rclb
scas
push
mov
push
subl
cmp
nop
pop
or
jb
test
test
push
push
paddusw
mov
je
popa
mov
adc
push
adc
mov
xchg
in
movsb
mov
lcall
xlat
xor
stos
mov
movsb
adc
jle
daa
inc
adc
rcrb
ljmp
mov
call
cvttps2pi
add
mov
jg
sub
mov
cmp
jbe
and
xlat
jmp
mov
pop
xor
push
add
jecxz
popf
lahf
push
lret
ss
jno
sub
push
or
xchg
or
sbb
out
jae
xchg
dec
push
outsl
mov
test
fists
ss
sar
ret
xchg
lock
mov
inc
es
mov
mov
movsb
adc
pop
insb
pop
popl
stc
je
mov
inc
into
pop
arpl
mov
pusha
sbb
pop
mov
sbb
ja
movsb
arpl
xchg
jmp
inc
cmp
shll
clc
lea
jb
mull
mov
mov
aaa
or
jae
ret
pop
jbe
push
aam
imul
cltd
test
test
xchg
cld
movsl
rcrl
in
add
mov
imul
stc
in
shlb
inc
sahf
les
stc
leave
xchg
js
in
push
in
out
stc
mov
dec
cmp
out
mov
mov
mov
cld
mov
push
or
repz
and
movsb
movsb
sbb
hlt
pop
dec
les
or
insl
out
sbb
dec
je
push
rolb
mov
xchg
push
out
and
je
push
dec
mov
mov
xchg
mov
mov
scas
pushf
lret
cltd
pop
jmp
pop
push
fidivrl
pop
jp
jle
cmp
or
adc
xchg
lea
mov
xchg
clc
mov
xor
mov
push
movsb
and
jno
fld
fstps
js
mov
js
fmuls
sub
xchg
jo
lret
xor
pop
xchg
cmp
mov
mov
jb
div
les
push
add
mov
and
lock
pushf
divb
push
lods
shrl
popf
outsb
xor
ja
xor
inc
cwtl
int
cmp
mov
es
xchg
sub
and
pop
lea
sbb
fidivs
mov
jns
test
mov
repnz
mov
adc
push
test
fs
inc
ss
add
sbb
jbe
jp
cmpsb
push
out
pop
dec
leave
insb
cld
jmp
mov
xchg
sub
repnz
push
lock
add
mov
in
or
pop
sub
inc
cwtl
setp
mov
and
sub
cmpb
sar
sti
and
mov
or
inc
stc
dec
jecxz
arpl
sbbl
push
xchg
leave
or
in
js
add
sbb
add
mov
jg
inc
jmp
add
into
mov
pop
cmp
adc
xchg
aas
lods
push
xor
cwtl
leave
iret
fisubrl
mov
insl
ret
stos
push
jp
push
insb
dec
fidivs
cmp
mov
adc
ret
cld
stos
push
pop
add
or
jg
aam
notb
loope
test
pop
sub
jno
dec
adc
fisubs
mov
in
pop
sar
sbb
gs
pop
jmp
inc
mov
jg
loope
jmp
insl
not
icebp
and
cwtl
lcall
mov
mov
outsl
mov
sbbl
pop
xor
dec
pop
test
jns
setle
push
and
inc
pop
push
xor
pop
jg
mov
cmpsl
push
xor
mov
mov
shlb
gs
jg
push
sub
xchg
pop
pop
push
in
popa
dec
lcall
int
adcl
sub
mov
cmp
inc
jp
ds
movsb
adc
cli
push
sti
xchg
test
add
inc
sarb
xor
jne
fstpt
mov
in
test
int
and
pop
inc
mov
out
dec
aam
mov
out
fsubs
cmp
push
insl
loope
add
testb
adc
flds
mov
es
mov
dec
lret
mov
leave
sbb
mov
or
add
push
movsb
cwtl
pusha
pop
js
mov
and
in
dec
jp
les
mov
into
inc
mov
jp
cmpsb
dec
ror
push
cld
and
mov
cld
hlt
add
shlb
and
and
insb
and
cwtl
repz
les
pop
test
push
cmp
iret
sti
mov
xchg
pusha
dec
sbb
jo
lods
pusha
addb
scas
push
and
fistpl
lret
loop
nop
push
sub
ret
sbb
jb
sub
cli
jne
mov
and
enter
xor
stc
jl
mov
xor
xchg
loopne
pop
xor
rep
push
iret
cmp
sbb
scas
pop
sbb
ss
xchg
jge
and
pop
inc
dec
hlt
add
ficompl
repnz
push
add
mov
dec
cmp
mov
mov
test
enter
add
mov
repnz
in
test
add
sbb
cmpsl
push
scas
xchg
pop
add
ljmp
rolb
add
adc
lret
arpl
fcmovnbe
out
sub
xchg
jbe
movsl
movsb
pusha
outsl
inc
jns
inc
aad
test
loop
pop
imul
and
sti
jle
adc
xor
push
and
stc
jmp
ds
and
mov
jnp
xchg
icebp
idivb
add
les
inc
jnp
in
int3
inc
cltd
bound
or
xchg
adc
jp
jg
sbb
and
movhps
in
lods
and
in
pop
mov
mov
sarb
das
out
jle
cs
repnz
mov
adc
xchg
incb
shr
jmp
cmp
lds
out
inc
cmpsl
fistps
dec
sbb
scas
cltd
in
adc
and
aaa
into
pop
mov
xchg
add
push
stc
dec
loopne
cmp
mov
xor
iret
lahf
addr16
insb
in
shll
jp
shlb
push
das
and
push
pop
into
push
addr16
mov
push
cwtl
test
subb
iret
and
lds
arpl
imul
xor
mov
mov
loop
pop
jle
vpmullw
xchg
add
jns
pop
pop
nop
das
mov
mov
xchg
lods
sub
movsl
mov
push
push
gs
mov
scas
mov
popa
sti
or
int
sbb
lret
mov
push
pop
and
insl
negb
xchg
sub
cmc
inc
out
mov
xor
in
xor
pop
add
arpl
cs
mov
inc
mov
pop
or
add
or
lds
aas
mov
shr
std
mov
out
cltd
and
pop
dec
sub
andb
repnz
xor
rorb
dec
bound
sub
mov
in
ss
aaa
sbb
in
lret
cmp
stc
ljmp
es
mov
add
jo
clc
inc
cmpxchg
push
jp
sub
mov
sub
dec
cld
dec
sbb
adc
out
and
cmp
push
dec
mov
cltd
mov
fld
sarb
sarb
inc
lret
jnp
dec
mov
mov
aas
mov
out
cmp
mov
mov
mov
add
leave
lods
mov
sub
and
lds
push
out
push
sarl
ret
inc
inc
pop
and
xchg
sbb
gs
out
mov
stos
xchg
sbb
lret
sub
push
lea
addr16
popf
bound
test
sbb
aam
je
shlb
pop
inc
jecxz
stc
push
insb
xchg
test
jb
rol
jg
mov
inc
cmpsl
adc
pop
or
pop
or
push
les
mov
inc
pop
popf
rcrl
push
cmp
imull
push
fstps
fnstcw
mov
sbb
mov
rorb
mov
cld
ret
inc
xlat
push
push
fsubl
mov
jle
mov
insb
pop
in
rol
inc
call
dec
inc
pop
xchg
mov
aaa
sarb
cltd
loope
jbe
pop
sub
push
mov
pop
and
mov
pop
orb
push
loope
popf
shlb
sub
cmpsl
jge
sub
jae
jg
adc
and
xchg
ja
push
dec
rorl
mov
mov
cmpsb
dec
mov
pop
jecxz
lock
fidivl
fidivl
dec
pop
fdivrl
shrb
xor
lret
inc
outsb
sub
inc
or
xchg
cwtl
or
scas
dec
rorl
cltd
adc
hlt
fnstenv
aam
xor
and
or
push
inc
xor
popa
clc
sub
les
xlat
leave
jno
jge
test
xchg
jecxz
fistps
pop
daa
loop
xchg
mov
loop
cmp
jnp
mov
ja
loop
mov
mov
divl
or
add
xchg
or
addl
imul
jecxz
repnz
push
neg
loopne
xchg
fadd
pop
mov
inc
push
add
push
mov
push
sbb
aad
jb
insb
pop
sbb
push
pop
mov
cmp
das
lds
andl
das
pushf
mov
ret
shll
popf
fisttps
lock
pushf
lret
mov
daa
adc
xor
lcall
sbb
iret
add
jmp
stos
sti
add
jae
or
or
or
add
pop
sub
sbb
sub
shrl
pop
daa
jb
lret
xor
or
shll
clc
cmpsb
ret
dec
in
iret
sahf
scas
shrd
xor
fisttpl
lret
js
pop
mov
outsb
sbb
mov
movsb
imul
or
out
mov
cs
inc
inc
cwtl
sbb
xor
pop
and
rol
call
ret
pop
pop
sar
push
inc
cmc
mov
shrl
mov
xchg
jb
inc
push
rol
fcoml
inc
lahf
jno
dec
add
push
fiaddl
jb
xchg
idivl
cltd
leave
xchg
shlb
iret
mov
int
sarl
and
aam
xlat
cmp
sbb
stos
stos
test
addl
out
cmpl
mull
cwtl
mov
mov
ljmp
jl
xchg
cmp
out
scas
int3
ret
fsubrs
in
sub
das
mov
jmp
pop
jb
push
in
fucomp
mov
insb
movl
fadd
bound
outsb
jecxz
rcrb
movsl
mov
lahf
cli
lock
pop
adc
js
out
out
xor
outsb
jmp
inc
push
clc
xchg
cltd
jle
enter
mov
xchg
das
mov
je
jl
pushf
cmpsl
push
cli
stos
mov
cmp
mov
mov
pop
push
js
bnd
jp
inc
jns
pop
or
cmpsl
cmp
inc
or
inc
jbe
jno
sti
in
pop
mov
sbb
pop
fs
stos
fisttpl
fcomip
aas
into
imul
adc
cmp
xchg
and
out
sbb
sub
int3
js
repnz
cmp
lds
adc
cmp
xchg
push
jp
enter
lock
jge
xor
or
cwtl
cli
roll
and
shlb
mov
das
pop
jge
stc
adc
jae
or
lcall
xchg
movsl
int3
adc
adc
fadds
rorb
pop
push
loop
xchg
cmp
jns
scas
in
pop
cmpsl
loop
xor
lret
jmp
je
lret
push
xor
mov
xchg
push
in
mov
sbbl
inc
mov
jns
xchg
sub
mov
mov
lret
xor
push
mov
cmpsl
dec
movsl
icebp
mov
cld
pop
sbb
xchg
addr16
jo
dec
push
lds
mov
outsl
mov
imul
mov
pushf
cs
and
add
mov
pop
xchg
mov
cmpsb
push
pop
sub
cs
and
add
das
pop
movsb
jle
out
xor
mov
and
dec
sub
or
xchg
xlat
fwait
cli
iret
out
adc
das
cmp
inc
daa
mov
andl
dec
sbb
jp
cmp
push
cmp
xchg
add
cs
xchg
dec
cltd
xor
cmp
mov
xor
inc
gs
lock
xor
cli
or
adc
jl
scas
into
mov
pop
imul
scas
enter
je,pt
sub
push
jnp
mov
cs
push
ljmp
clc
xor
pop
push
xchg
jecxz
clc
or
lock
andl
in
adc
push
xor
outsl
add
mov
mov
xchg
xor
cli
xchg
cmc
cmc
sbb
frstor
dec
aad
rolb
dec
fcmovnbe
mov
add
bound
inc
or
aas
xlat
inc
leave
rcrl
sbb
popf
sub
aad
mov
jmp
into
mov
xchg
mov
into
sbb
inc
mov
or
cmp
arpl
ffreep
xor
pop
add
fwait
je
sahf
add
hlt
outsb
push
inc
mov
pop
test
mov
push
lods
nop
loope
ja
push
popa
clc
pop
mov
mov
movsb
pusha
je
cmpsb
in
cli
cmp
sahf
push
flds
icebp
xor
jle
jp
loope
cs
ret
loop
aad
mov
smsw
insl
inc
js
adc
xchg
dec
mov
scas
xchg
daa
cmp
inc
sub
popf
pusha
mov
sub
cmc
stos
adc
dec
mov
jae
pop
adc
mov
mov
dec
xor
mov
les
dec
shlb
adc
andb
mov
out
jge
das
push
test
adc
sahf
negb
lock
push
sub
dec
data16
xor
sbb
mov
cmp
aas
in
jge
out
mov
and
addr16
mov
add
mov
in
and
dec
fmul
add
dec
je
cli
xchg
mov
bound
int3
fstpl
rcll
nop
mov
mov
cwtl
mov
mov
jne
rorb
lahf
imul
jecxz
repz
or
pushf
std
orl
cltd
jmp
daa
push
int
aam
mov
ficompl
es
push
dec
pusha
mov
jge
in
pop
mov
cmp
aas
popf
js
pop
leave
adc
scas
lods
add
jno
loopne
dec
mov
and
nop
popa
mov
cld
or
scas
sbb
dec
out
sti
jb
popa
push
mov
jo
ret
push
jno
inc
ret
push
out
add
out
push
dec
imul
pop
mov
adc
push
push
imul
mov
cmp
mov
mov
xchg
adc
repnz
inc
gs
mov
and
outsl
int
test
sarb
fsubrl
and
pop
ret
imul
or
mov
dec
lcall
mov
jmp
mov
js
or
mov
aas
push
fwait
push
mov
xor
fists
test
js
dec
xchg
mov
pop
sub
mov
cs
pop
jmp
inc
mov
stos
sbb
xor
inc
subb
fwait
cmp
ret
stc
xchg
imul
fnsave
scas
xor
adc
data16
cld
dec
fwait
or
cmp
mov
in
pop
in
orl
pop
xchg
mov
sbb
js
inc
cmp
in
loop
mov
inc
jo
push
sub
sub
pop
dec
mov
xor
divl
out
push
popa
jnp
mov
sub
rcr
sbb
xor
push
scas
inc
dec
jae
add
xchg
adc
cld
dec
cmpsb
adc
nop
adc
lods
cmp
mov
into
mov
and
ds
mov
dec
subb
mov
pop
jmp
mov
pop
das
xchg
adc
call
cmc
or
cmpb
imul
aam
mov
sub
sbb
xor
jl
ret
push
sbb
mov
mov
adc
jle
imul
mov
or
loopne
sbb
pushf
dec
jo
adc
jg
jne
mov
outsb
push
pop
jmp
xchg
loope
jo
out
gs
test
cmc
shrb
or
sahf
mov
pop
imul
adc
push
push
fcomps
ljmp
push
je
mov
jmp
outsl
xor
xor
push
rcl
fcoml
jbe
xor
xor
arpl
stos
push
addr16
cmpsl
inc
popf
or
test
mov
mov
or
jmp
mov
sub
mov
cmp
aad
mov
mov
clc
mov
push
movsl
jns
leave
insb
imul
popf
xor
das
in
pop
cld
ja
mov
and
push
add
repz
cltd
out
cmp
sbb
scas
or
sub
fildl
scas
inc
movsl
dec
sbb
xor
stos
mov
jns
roll
out
sub
std
pop
fnclex
out
pop
sbb
xchg
xchg
repz
divl
pop
pop
add
xchg
and
in
popf
jecxz
and
pop
iret
xchg
popf
stos
mov
loope
pop
mov
xor
dec
sub
xor
adc
pop
adc
inc
xchg
jg
mov
cmc
sub
daa
rclb
leave
push
xchg
xchg
mov
out
inc
cmp
mov
lret
sbb
mov
add
out
xchg
inc
rcrl
adc
cmc
in
and
sbb
adcb
rcrb
adc
cmpsb
lock
es
nop
repz
inc
nop
imul
pop
or
or
rolb
inc
sarb
pop
and
inc
sbb
dec
or
mov
dec
and
les
sub
mov
mov
and
lods
aad
or
ja
push
pop
dec
iret
mov
ret
xchg
test
iret
push
ss
mov
insb
faddl
subb
test
jl
xlat
stc
js
or
inc
les
cmp
xchg
mov
pushf
jo
xor
push
sub
push
js
mov
sarb
adc
jb
pop
in
and
jg
dec
cmp
lcall
push
sahf
scas
cmp
sub
inc
andl
pop
or
or
cmp
push
rcrb
lods
mov
inc
daa
movsl
mov
enter
push
push
push
cmp
pop
lret
insb
pop
movl
inc
aad
push
scas
test
shll
out
mulb
lcall
lahf
xchg
rclb
cmpsb
leave
mov
mov
shlb
sti
roll
adc
hlt
pop
push
inc
mov
mov
pop
je
mov
mov
add
sub
jne
sbb
dec
not
jp
xor
lods
cmp
outsb
fcompl
std
and
adc
mov
insl
shlb
decl
jle
xchg
loop
add
or
mul
jbe
mov
je
fldl
lcall
fsts
sub
arpl
movb
xchg
mov
in
dec
push
mov
xor
lea
inc
jmp
aaa
addr16
pop
sub
ja
cmp
dec
das
mov
xor
mov
jnp
dec
lret
xor
or
iret
cwtl
cli
pop
fs
jb
cltd
lret
and
or
ja
fwait
mov
cmp
xor
jecxz
dec
xchg
les
arpl
nop
jns
mov
or
mov
push
addl
push
inc
pop
jns
outsl
mov
dec
pushf
adc
mov
mov
mov
test
sti
push
fwait
pushf
dec
jo
mov
fldcw
push
dec
mov
dec
insb
cmp
pop
xor
test
ret
pop
fcomp
mov
mov
lcall
nop
add
sarl
imul
xchg
sbb
jge
popa
aad
jnp
mov
adc
inc
sarb
xchg
add
and
call
inc
jl
movsb
daa
mov
leave
cs
incl
hlt
jnp
out
push
mov
sbb
sub
push
neg
fs
inc
mov
imul
inc
mov
mov
sub
add
lret
inc
push
popa
sbb
ret
mov
cmpsb
sbb
lock
punpckhwd
cmp
adc
mov
push
lret
popa
mov
sbb
lods
mov
lahf
or
mov
mov
call
cmp
sbb
add
loope
pop
dec
fsubrp
xchg
sub
daa
add
xchg
or
pop
xor
cmp
add
insl
data16
pop
xlat
movsb
sbb
jmp
jo
xchg
mov
sbbb
push
mov
adc
xor
push
pop
pop
les
fcompl
dec
jo
xchg
ljmp
lds
add
cmp
in
aas
pop
ljmp
and
mov
loop
lret
ss
push
ss
sub
mov
call
add
and
cmpsb
inc
into
push
stos
jne
decb
sbb
ljmp
lret
shl
push
je
insb
push
sbb
pop
icebp
xor
fistps
xchg
push
ds
lret
pop
test
dec
outsb
xor
lods
sub
cmp
shlb
pop
arpl
xchg
stos
cmp
test
xor
rcll
loopne
test
mov
add
pusha
insb
dec
xor
or
push
lahf
xchg
sbb
sbb
outsb
and
adc
sub
xorl
dec
test
inc
xor
fisubrs
push
gs
cmp
push
jno
imul
lret
stc
mov
jle
inc
dec
xchg
jge
es
repnz
sbb
sahf
mov
inc
push
movd
pusha
imul
cwtl
push
push
call
push
pop
iret
call
xchg
sbb
mov
int3
adc
pusha
cld
dec
xor
lret
jmp
aas
stos
aas
and
lock
mov
out
push
lret
imul
loopne
inc
cmp
testb
aam
fwait
xchg
stc
pop
loope
into
adc
inc
lods
xchg
repnz
ljmp
inc
ficomps
lea
out
fistl
xchg
rcl
aaa
jne
mov
movsb
mov
ds
mul
mov
movsl
icebp
xor
xor
aam
xlat
dec
mov
and
mov
dec
lcall
and
jl
jnp
lret
push
add
xchg
dec
cmp
pop
mov
mov
pop
xchg
mov
lods
insb
or
jno
scas
shr
jnp
inc
pusha
out
in
or
dec
jne
cmpsl
scas
mov
push
idivb
and
xor
lods
mov
movsb
out
cmc
sahf
daa
xlat
adc
lret
cwtl
mov
sbb
fisubs
add
das
pop
pushf
aas
cmp
sbbb
mov
inc
fdivrs
fidivl
mov
les
out
test
test
enter
lds
pop
add
cmp
jmp
pop
sti
sahf
mov
fdivrp
rorb
outsb
mov
jmp
jl
xor
jl
aad
add
push
jl
or
mov
jnp
adc
stos
adc
inc
pop
xor
enter
pop
loopne
cmp
lret
divl
sbb
xor
or
movb
outsl
cmp
jle
sub
bound
inc
push
leave
pop
repnz
xchg
mov
jmp
mov
arpl
pop
and
push
cli
and
mov
pop
jle
ret
add
xor
lds
imul
mov
inc
push
lcall
xor
out
pop
or
sub
jecxz
in
mov
adc
out
pushf
shr
ljmp
push
cmovbe
out
pop
les
mov
fsts
mov
mov
add
push
int3
adc
scas
fstps
jo
or
out
outsb
push
cmp
in
fidivs
imul
divl
std
pop
shll
mov
arpl
fwait
push
push
stos
xor
cmp
xor
loope
dec
sbb
inc
dec
insl
add
push
cld
mov
pop
jno
pusha
fsts
sub
add
fwait
clc
and
lahf
out
mov
xchg
xchg
sbb
jmp
movsl
jno
ja
xchg
scas
cld
cmc
mov
sub
pop
subl
fwait
push
sar
loope
dec
fcmovb
mov
sbb
mov
dec
xchg
ret
test
scas
xchg
aaa
xchg
xor
lcall
pop
mov
pop
sub
cmp
neg
or
stc
test
push
in
mov
jl
out
cmp
arpl
jbe
jge
bound
inc
sub
cmpsl
push
sub
jnp
imul
enter
pop
sbb
lods
pop
mov
outsb
jmp
push
mov
shrl
andl
fs
mov
pop
cli
loope
inc
ja
jle
push
mov
movsl
xor
mov
pop
or
adc
sbbl
lahf
push
dec
sarb
pop
paddb
adc
inc
lea
ss
cltd
neg
popf
shlb
sub
mov
xor
scas
pushf
push
jo
fstpl
popa
je
shll
add
rcll
and
shl
mov
into
int3
pop
popf
and
push
les
out
fisubrs
imull
fs
sbbb
cmp
hlt
cmp
sahf
adc
push
xor
mov
jle
repnz
inc
pop
xor
xchg
adc
mov
mov
shrb
xchg
jno
add
sub
push
pushf
push
jl
jp
ror
insl
mov
pop
fistl
sub
int3
pop
test
mov
lock
popf
xchg
or
push
and
jb
stc
loop
test
sbb
pop
lods
mov
sahf
leave
lcall
pop
dec
jg
mov
dec
in
mov
push
and
add
jp
es
xlat
push
movsb
loop
fs
mov
aad
bound
test
push
mov
out
sub
mov
sti
ror
fs
sbb
push
inc
mov
mov
loope
inc
push
add
sbb
ja
in
inc
mov
mov
jae
sub
xor
lahf
push
dec
jle
mov
pop
sahf
ds
mov
pop
sbb
pop
lahf
mov
js
mov
stc
sub
xor
cmpl
fldcw
ss
in
mov
fistpl
and
fildll
jle
or
and
fstl
xchg
and
imul
ja
dec
int3
lods
or
adc
mov
mov
adc
add
inc
in
addr16
push
cmp
daa
lahf
dec
mov
stos
push
or
sub
xor
xchg
test
xor
enter
hlt
movsb
push
daa
mov
cmpsl
shlb
jae
add
inc
mov
dec
adc
add
mov
mov
inc
jo
push
add
jae
shld
imul
movl
test
sub
in
shl
ret
das
sbbb
mov
vunpckhps
xchg
pop
mov
pop
xchg
mov
lahf
aas
daa
mov
pop
out
hlt
mov
fisttpl
sub
in
pop
aas
je
xchg
and
aaa
push
dec
movsl
adc
into
mov
enter
inc
push
lock
mov
sbb
aaa
push
int3
jmp
lods
in
or
mull
mov
fisttpll
pop
aaa
xlat
cmp
sbb
in
gs
xchg
mov
xor
sbbl
add
dec
cs
push
fwait
ss
jno
lods
xor
leave
mov
jp
outsb
outsb
sub
mov
jno
mov
mov
pop
xor
shrb
jle
cld
js
jl
or
or
loopne
cltd
pop
pop
push
pop
mov
loopne
ss
inc
minps
inc
dec
ljmp
popf
stos
mov
mov
data16
and
or
rclb
jecxz
xchg
stos
xchg
pop
mov
js
jno
jmp
push
lock
loope
scas
cmp
mov
lods
mov
fistl
je
sti
cmpl
dec
and
enter
jl
xorb
mov
mov
shlb
shlb
sti
mov
inc
inc
fsubrs
test
jmp
xlat
xor
adc
insl
roll
jmp
loop
out
fiadds
dec
int3
sub
xchg
int
push
or
push
pop
mov
aas
fistpl
popa
mov
cmp
sbb
jle
mov
mov
and
test
in
lahf
pop
xchg
xchg
out
mov
mov
add
fcmovne
push
sbb
fucomip
popf
ficomps
out
insb
adc
or
lret
mov
or
xchg
rolb
pop
xchg
mov
jecxz
fimuls
out
outsl
add
cwtl
cmp
loope
jae
imul
outsl
dec
xchg
jle
xor
jmp
sub
pop
das
fsubs
fistps
mov
cmpsl
outsl
pop
sbb
dec
dec
adc
inc
aam
push
lods
pop
enter
pop
jge
repz
sbbl
lods
loope
mov
and
dec
call
inc
fldcw
adc
add
mov
int
lock
andb
aad
lret
cmc
adc
mov
and
lahf
xor
insl
push
lock
dec
sbb
lods
mov
jbe
xchg
nop
mov
xchg
xchg
inc
jg
js
mov
and
lods
cs
xchg
cmp
push
jae
repnz
sti
jp
leave
cmpb
aaa
or
add
inc
lods
out
inc
xchg
pop
or
push
or
loopne
pop
push
gs
inc
dec
std
jo
fmull
mov
iret
out
mov
aaa
inc
fimull
test
sbb
xor
and
ljmp
fildl
xor
testb
inc
fnstsw
add
xor
in
rcll
push
ja
lret
cmpsl
jge
dec
aam
inc
mov
arpl
nop
mov
insb
rcrb
aad
jp
iret
xor
pop
daa
add
xchg
popa
incl
adc
addr16
jle
push
dec
jne
xchg
xchg
cmp
notl
ja
out
into
xlat
scas
or
roll
mov
out
ljmp
cmc
add
push
aam
adc
dec
sub
mov
arpl
jle
cmp
or
ret
test
xor
and
push
add
sbb
dec
add
stos
cmp
jmp
insb
mov
dec
sahf
sbb
pop
enter
daa
fwait
sbb
icebp
mov
insb
and
dec
test
mov
xorl
ficompl
mov
sbbl
in
stos
mov
fidivrl
out
lock
pop
xchg
pop
xlat
test
ljmp
adc
imull
push
movsl
mov
mov
repnz
push
xchg
dec
xchg
call
clc
jbe
in
jae
icebp
push
dec
or
cwtl
pop
lea
test
cmp
es
scas
loopne
pop
mov
xchg
dec
sahf
push
sub
or
jle
push
int
add
jmp
mov
xchg
jp
and
mov
movsl
or
mov
sbbb
addl
ss
push
mov
sub
gs
sub
xchg
das
xchg
fs
fidivs
jne
sbbl
idivb
jno
dec
sub
das
mov
mov
adc
xor
fdivl
push
mov
divb
jecxz
jae
pop
mov
mov
add
aad
dec
test
mov
adc
xlat
insb
push
cmp
je
mov
add
cmp
test
push
aaa
js
in
jns
jle
dec
addl
pop
call
std
adc
push
xchg
mov
arpl
cltd
mov
dec
push
jb
imul
add
cmp
and
stos
shrl
shlb
or
cltd
push
fs
xor
sbb
push
mov
push
sarl
inc
push
jle
movsl
daa
xlat
mov
int
push
sarl
or
ret
push
mov
pop
in
pop
clc
inc
sbb
iret
hlt
pop
xor
push
lea
push
sub
pop
xor
cli
pop
mov
psrlw
cmp
popa
jns
outsb
ds
sbb
xor
mov
and
push
fs
int3
pop
jmp
push
int
xchg
push
mov
mov
push
mov
jecxz
jmp
cli
jns
or
and
out
push
rolb
shll
sub
ss
or
push
int3
loope
out
dec
fisttpl
jle
jnp
sub
xchg
mov
push
mov
push
adc
and
and
mov
cmc
mov
imul
xchg
mov
fcoml
repz
sub
in
cmp
test
idivb
xchg
bound
cwtl
into
pusha
dec
adc
mov
movsb
xor
sahf
shll
inc
out
jb
ss
dec
mov
scas
out
in
ffreep
jae
and
sub
mov
or
fnstenv
adc
fsubl
add
cmpsb
fs
dec
scas
mov
pusha
test
sub
sub
jae
div
mov
into
cltd
jl
jo
push
repz
movsb
fstps
or
and
inc
mov
shlb
jae
push
movsb
pop
jne
mov
pushf
sahf
jp
cmp
je
cwtl
sarl
xlat
push
lds
pop
mov
add
psrlw
inc
add
cmpl
push
inc
out
mov
push
add
pop
cmp
push
out
dec
adcb
mov
jae
movsl
ljmp
fisubrs
mov
out
jmp
pop
mov
mov
mov
pop
notb
push
dec
sub
cmp
cmp
les
dec
xlat
les
aas
nop
call
ja
cmp
lret
sub
mov
or
pusha
imul
fisubrs
sbbb
in
jle
mov
jo
jae
push
push
stc
xchg
jge
push
and
pushf
xchg
pop
cld
pop
mov
int
sub
lahf
lods
inc
ljmp
sub
je
div
pop
aas
mov
outsl
dec
dec
push
dec
enter
mov
js
adc
xchg
or
or
xchg
sbb
push
xchg
mov
ds
pop
dec
ret
repz
mov
sub
fnsave
adc
je
xor
pop
sub
xor
cmp
mov
fsubs
push
ja
test
xchg
enter
or
pop
pmuludq
and
sbb
lret
xor
cmp
jle
xchg
cmp
adc
neg
mov
pop
adc
cwtl
enter
xor
out
xchg
sub
pushf
insb
inc
push
sub
shrb
xor
shll
push
adc
pusha
push
xor
loopne
lods
mov
loopne
jmp
xchg
and
mov
xchg
mov
xchg
mov
jns
dec
ret
in
jecxz
push
push
pop
jb
cmp
push
add
sub
in
mov
inc
mov
xchg
into
xchg
aad
jbe
stc
popa
sub
icebp
push
daa
sbb
icebp
frstor
sbb
ljmp
mov
push
or
pushl
sahf
outsb
jbe
int3
xor
dec
scas
jge
xor
cs
mov
fnsave
jg
jae
loopne
out
fldl
adcl
pop
repnz
mov
adc
loopne
pusha
in
decb
fldl
testb
in
fiaddl
cltd
mov
loop
inc
xor
xor
fsts
cwtl
dec
out
popa
movb
mov
and
add
repz
inc
fcoml
xchg
insb
mov
scas
sbb
gs
or
cs
mov
enter
pushf
or
dec
push
push
pop
sbb
fldt
sbb
hlt
pop
mov
cmp
jmp
adc
loopne
mov
lock
cmpl
pop
jg
cmpsb
lcall
xor
lods
xor
lahf
jmp
test
cmpsb
adc
adc
jg
jg
jg
xchg
jl
ret
in
fiaddl
loope
sub
arpl
fnstenv
sbb
mull
add
jbe
lea
jge
jb
movsl
dec
push
popf
pop
and
dec
xor
insl
sarl
out
fcompl
sub
inc
jae
and
fcmovnbe
scas
inc
dec
cmp
sub
sub
fnstenv
jle
push
enter
mov
leave
or
mov
cltd
arpl
dec
out
adc
mov
stos
push
xchg
lret
mov
push
xchg
xchg
jno
mov
mov
add
lret
add
call
aaa
clc
in
adc
sub
in
sbb
inc
clc
jl
push
lcall
mov
fdivl
lcall
aas
jae
out
stc
cmp
scas
pop
mov
mov
lahf
jnp
xor
add
pop
push
daa
mov
dec
dec
stc
loope
mov
jecxz
repnz
dec
inc
push
xchg
lods
loop
fstp
pop
fildll
dec
jnp
jno
pop
dec
mov
mov
push
mov
bound
xor
cli
fbstp
add
pop
fistps
xor
mov
ret
mov
leave
mov
add
inc
hlt
daa
out
mov
push
mov
push
stc
mov
mov
nop
cmc
int3
call
mov
push
mov
out
or
roll
push
clc
lods
pop
xchg
xchg
and
sbb
xorb
dec
dec
cli
add
xchg
aaa
fs
mov
arpl
insb
cltd
pusha
or
aam
mul
jl
pop
sbb
sub
popf
jae
fcmovu
int
inc
movsb
push
push
push
outsb
dec
ljmp
or
push
xor
fcomps
lahf
pop
or
int3
jl
mov
push
xchg
jb
mov
pop
call
testb
fdivl
and
sbb
cmp
nop
sahf
push
sti
outsl
push
in
sbb
inc
jo
mov
scas
insb
push
cmp
sub
aam
xchg
xchg
pop
xchg
shll
enter
leave
dec
sbb
mov
xchg
pop
add
xor
push
dec
inc
lea
call
insl
jbe
push
jmp
xchg
mov
pop
movsl
jb
push
lret
dec
movsl
pop
subl
xchg
mov
cmc
popfw
lods
jnp
mov
addr16
roll
enter
jecxz
sbb
mov
ljmp
sbb
mov
out
cs
lret
imul
leave
das
fisubrl
adc
cmp
fistpll
inc
dec
movsb
lahf
lcall
push
dec
jne
and
outsl
sub
es
cmpl
lret
xchg
enter
lahf
mov
cmp
push
mov
rolb
jnp
jecxz
in
add
cmp
loopne
mov
xchg
nop
aam
rcrl
lods
fimuls
inc
adc
bound
shll
xor
shrl
ret
sbb
jae
repnz
xlat
or
lcall
insb
jl
ss
jnp
add
mov
push
sbb
lret
pop
or
subb
xor
bswap
sar
dec
outsb
cmp
decl
add
mov
iret
inc
cld
scas
push
sub
dec
stos
in
test
ret
push
addr16
lcall
imul
add
inc
shrd
pushl
stos
imul
jg
aas
cmpsb
pop
push
shr
fstl
iret
mov
mov
jnp
call
in
mov
jno
xor
pop
dec
push
mov
sbb
in
sub
push
inc
mov
adc
fsub
mov
inc
mov
push
ljmp
scas
jmp
int3
inc
jp
push
inc
dec
pop
mov
cltd
cwtl
mov
stos
or
mov
mov
xor
mov
add
js
out
je
sub
stos
sub
cmp
aas
ss
cmc
test
push
fists
jno
stos
add
in
sti
ja
push
scas
mov
cmp
mov
shll
xor
xor
cmpb
test
in
mov
push
jge
fcmovnbe
adc
mov
xchg
inc
bound
xchg
mov
js
dec
fs
mov
aad
int3
repz
stos
arpl
jmp
sub
out
out
pop
cmp
sub
enter
int3
daa
test
sub
adc
out
dec
adc
mov
push
notl
fnsave
ja
push
mov
arpl
push
in
xchg
push
sbb
jno
cmpl
test
outsl
les
in
nop
fsubl
mov
or
pusha
popf
jp
imul
adc
lock
aas
andl
or
inc
and
add
insb
pop
push
mov
cmp
dec
dec
jne
cmpsl
cld
mov
dec
out
push
in
std
xchg
int
push
jae
xlat
dec
rcl
cmp
ljmp
adc
jg
stc
aas
test
mov
jl
ret
pop
out
dec
aad
mov
cltd
movsl
add
pusha
inc
movsl
test
mov
test
fwait
stos
lods
pusha
iret
pop
fstpt
aam
mov
clc
jle
jbe
or
and
stos
out
pop
call
scas
xor
inc
dec
pushf
pop
inc
push
scas
sbb
xchg
movsl
add
xchg
or
ljmp
pop
xor
insl
dec
jle
push
loope
jne
stos
fs
pop
icebp
popf
out
cmpsb
mov
push
mulb
push
xor
out
movsl
xchg
add
or
ljmp
clc
cli
insl
add
mov
mov
cs
mov
mov
push
imul
add
rolb
dec
inc
jmp
and
sti
dec
pop
inc
and
xchg
inc
test
loop
mov
adc
out
dec
mov
dec
jb
dec
mov
inc
fdivs
xor
js
hlt
in
lret
push
aas
jg
loopne
or
jl
shl
mov
cs
xchg
xorl
repnz
pop
pop
xor
xor
movsl
and
outsl
inc
lods
lods
dec
aaa
pusha
imul
mov
xor
fadd
fwait
add
or
jle
es
shr
jae
jge
dec
negl
ret
fcomps
fs
out
cmp
cmp
cmp
leave
jmp
outsb
lds
sbb
mov
and
fldcw
pusha
dec
lahf
jmp
fwait
add
shll
stc
test
aas
outsl
dec
push
out
mov
lcall
lock
jo
sbb
sbb
inc
pop
imul
jne
push
inc
popa
and
subb
adc
insb
xchg
inc
jbe
jmp
xchg
call
leave
or
pop
pusha
cmp
xor
clc
or
aad
jle
mov
xchg
jg
loop
into
lret
fistpll
lea
xchg
lods
frstor
sub
lea
imul
fsts
mov
pop
pop
pop
mov
aad
cmpb
sti
inc
fwait
out
cmc
push
insb
rolb
sbb
sub
gs
xor
xor
cmpsb
mov
add
fadds
and
mov
call
xor
ja
inc
rorb
push
push
cmp
test
jbe
mov
push
stos
cmp
jb
insl
jle
mov
sbb
mov
pop
pop
and
lahf
cmp
rcl
mov
shll
sbb
xchg
adc
movb
xchg
nop
xor
ds
inc
loope
mov
mov
mov
push
gs
xchg
xor
mov
sbb
jbe
add
fwait
addr16
ret
xor
rcrl
add
push
fcmovu
push
push
sbb
jno
sahf
add
das
lods
int
xor
ret
adc
sbb
js
dec
imulb
adc
aas
fdivrl
outsb
jns
fcoml
xor
adc
inc
jmp
int
pushf
fs
inc
sarb
roll
sarb
mov
pop
sahf
icebp
addr16
mov
mov
lds
cltd
imulb
and
mov
movsl
ret
xchg
cmp
inc
sarb
push
mov
mov
jno
jp
sub
dec
and
jae
pop
sbb
loop
mov
roll
xor
xor
cmp
stos
mov
std
xchg
insb
inc
fistpll
repnz
mov
pop
mov
sahf
mov
add
mov
mov
int3
push
lret
shlb
scas
fstl
cs
cmp
xchg
call
daa
fcoms
repnz
divb
cmpsl
inc
leave
lods
sub
cmpsl
pop
mov
subl
mov
jmp
mov
xchg
fs
aas
jns
test
adc
stos
xchg
test
rorb
in
jb
ss
in
mov
loope
pop
xlat
cmpsb
jae
cmp
rcrl
adc
cmpsl
and
stos
mov
ret
mov
inc
subb
mov
pop
sbb
jl
sbb
xchg
push
shll
jmp
insb
xor
sub
mov
pop
dec
jp
sbb
fcmovb
lahf
loop
xchg
adc
cmp
pushf
dec
inc
push
mov
mov
cmp
andl
push
movntps
pop
mov
push
jnp
jno
push
cmpsl
fwait
mov
dec
xor
xchg
test
cmpsl
pop
mov
lods
sub
rcr
imulb
cmp
sti
xchg
sarl
mov
push
sub
movl
loop
push
lea
cmc
adc
imul
xchg
lods
aaa
and
ficompl
fmul
das
push
push
loopne
mov
pop
enter
mov
mov
mov
add
testb
in
shrb
xor
mov
add
lret
daa
mov
pop
xor
popf
xchg
push
ja
arpl
lods
enter
clc
adc
mov
jnp
or
mov
adc
in
cmp
jmp
enter
subb
push
inc
sub
std
pushf
cmp
push
movsl
icebp
das
lock
mov
faddp
sarl
orb
stos
jmp
dec
mov
jl
or
and
pop
das
enter
jp
and
jns
out
sub
cmp
in
adc
shll
pop
std
push
insl
add
hlt
mov
jl
pop
and
out
mov
test
aad
scas
inc
inc
cwtl
pop
and
clc
add
push
or
flds
lods
sub
fwait
inc
roll
or
adc
pop
insl
xchg
add
adc
sub
nop
xor
fnstenv
scas
movsb
jge
mov
mov
cli
rcrl
lret
gs
xchg
dec
leave
sbbb
pop
jl
jns
das
mov
imul
fidivrl
xor
aam
loopne
ds
pushf
test
arpl
rclb
mov
sub
dec
loopne
mov
jae
xor
or
outsl
in
jnp
sbb
into
sub
mov
mov
jge
out
xchg
test
popf
adc
add
cmpsb
movsl
icebp
out
lds
mov
jnp
dec
xor
mov
in
es
outsb
andb
push
mov
sbb
xchg
std
bound
rolb
jmp
mulb
in
sub
leave
or
fsubl
clc
repnz
jg
in
inc
adc
xchg
enter
jnp
xor
scas
icebp
sbb
dec
or
push
dec
lcall
ja
std
sarl
fmul
or
pop
mov
in
les
adcb
outsl
cmp
stos
jae
cmp
pop
je
sub
xor
mov
xchg
cmpsl
repz
mov
push
test
mov
gs
shlb
shlb
mov
xchg
cmp
sar
scas
mov
pop
cmp
pop
push
bound
out
push
add
adc
jnp
pushf
call
sub
enter
divb
in
adc
cs
cwtl
sub
test
push
mov
insb
iret
cmpsb
popf
add
sub
add
insl
mov
mov
lcall
hlt
lret
out
mov
lcall
imull
aas
xchg
ffree
xlat
cwtl
sub
mov
mov
adc
in
ljmp
lock
cwtl
or
sub
rclb
in
ret
or
ja
fdivs
adc
xor
jp
cmp
fisttpl
jle
je
cmovge
xor
jl
jl
rcll
xor
cmp
jne
icebp
cltd
fcomp
pop
repnz
xchg
nop
pop
sbb
mov
arpl
adc
mov
dec
outsb
mov
pop
jno
mov
incl
mov
inc
movw
add
andl
push
mov
adc
bound
jnp
sub
or
add
adc
push
cmp
inc
mov
jmp
inc
out
jecxz
inc
xchg
cmp
stos
sarb
xor
xadd
xorb
xor
dec
imul
mov
nop
xorb
in
lods
les
insl
test
add
dec
insl
imull
push
int3
popa
push
enter
nop
xlat
popf
test
mov
lcall
and
insb
sub
in
arpl
mov
stc
mov
into
iret
and
pop
icebp
enter
shlb
and
outsb
loop
in
dec
outsb
leave
pop
clc
lods
and
popf
pop
mov
jns
popa
xchg
push
imul
jl
cmc
andb
mov
add
gs
popa
sub
movsb
xor
fs
test
pusha
int3
lods
lea
fsincos
aaa
fs
insb
push
ljmp
jb
jmp
in
fmull
xorl
movsb
xor
lods
fucomip
cmpsl
mov
xor
in
mov
loopne
mov
cmpsb
push
cmp
loopnew
in
rol
mov
shrb
inc
xor
test
popa
and
gs
cmp
clc
jg
std
mov
sbb
add
push
or
bound
xchg
lret
fcoml
movsb
das
into
pop
jg
ja
fcompl
cmp
mov
xlat
cwtl
movd
dec
or
popa
mov
pop
mov
jb
jge
push
jle
mov
int3
lds
addr16
pop
push
pushl
repnz
dec
mov
jnp
and
out
cmp
jp
pop
fs
pop
in
fchs
mov
sub
cmp
sbb
xchg
sbb
rcrl
push
pop
addr16
ss
add
fnstcw
pop
shrb
pushf
insl
mov
inc
cmp
mov
push
stos
insl
dec
fidivl
cmpb
addr16
mov
mov
cmp
std
imul
ljmp
or
sub
stos
mov
shlb
gs
loop
ret
adc
cmc
pop
enter
sub
test
mov
dec
jecxz
push
mov
push
ja
xchg
adc
xchg
xchg
mov
in
dec
clc
adc
cltd
dec
cltd
push
fwait
push
and
jp
or
stos
pusha
mov
jmp
test
es
stc
into
cmpsl
add
pop
jge
rcrb
push
pop
das
mov
xchg
mov
sbb
aaa
fwait
addr16
xor
call
pop
popa
sti
fcomps
pop
arpl
jne
stos
sub
fsubl
dec
push
jne
ja
stc
push
rorb
xchg
mov
dec
ret
sub
jnp
jge
xchg
jo
pop
aaa
adc
fsubrp
inc
test
out
aam
pop
pop
mov
daa
jno
aam
xchg
mov
rcrl
cmp
sub
outsb
or
out
and
inc
push
and
mov
gs
es
mov
aaa
add
cmp
test
in
icebp
mov
call
ds
pop
sub
fucom
cmp
sub
sbb
dec
mov
lea
mov
pcmpgtb
push
jnp
xchg
aas
dec
cld
xor
mov
movsl
sbb
loopne
fyl2xp1
mov
sti
dec
stc
out
push
mov
jns
mov
mov
cmp
push
iret
xor
loop
fs
pop
pop
dec
aam
sbb
outsb
cmp
into
mov
inc
push
and
arpl
and
scas
lods
lret
inc
in
xlat
push
adc
pop
push
popa
addb
shlb
ficomps
jg
pop
pop
mov
cmp
add
mov
cmpsb
movsb
movsl
imul
xor
enter
je
negb
mov
jns
rcl
sarb
jns
fucomip
lcall
push
xor
or
icebp
repz
popf
adc
cmp
popf
out
adc
ret
aad
bound
inc
cmp
leave
mov
test
stc
sbb
fldcw
or
int
jno
jge
outsl
in
std
andb
sub
sbb
inc
fs
mov
loope
and
push
xor
es
mov
fidivrl
ljmp
push
pop
push
clc
cmp
push
sbb
imul
icebp
lods
test
decb
int3
repz
xchg
addr16
ret
adc
movsl
mov
xor
jo
lret
adc
cltd
cmp
subb
in
xchg
ds
imul
xchg
xchg
ja
cmp
mov
sub
addb
add
inc
test
lret
add
jnp
or
lret
xlat
test
int3
or
cmpsb
push
aad
and
nop
ret
sub
and
cmp
adc
xchg
inc
test
xor
pop
inc
ret
addr16
mov
cld
lock
adc
adc
sbb
mov
pop
data16
hlt
es
test
push
xchg
std
pop
add
test
xlat
fsubp
vcvttpd2dqy
jbe
repz
mov
dec
aam
mov
mov
inc
or
fidivrs
lcall
and
roll
ror
fld
enter
pop
inc
in
sbb
mov
xor
add
mov
fcmovbe
pop
fisubrs
cld
add
xchg
pop
adc
jmp
shrb
sbb
lock
mov
ret
mov
mov
dec
mov
cli
mov
movb
ljmp
not
mov
shrl
jp
xchg
sub
inc
pop
loop
lcall
sti
cmp
repnz
sub
add
out
daa
pop
or
stos
inc
push
out
test
jns
jmp
mov
jp
xchg
mov
ret
mov
xor
mov
sbb
add
adc
movsb
mov
ss
je
test
fucomp
clc
push
dec
push
stos
jno
scas
push
pop
cltd
test
popf
xchg
dec
pop
in
mov
int3
mov
in
mov
lods
scas
cmc
rorl
mov
mov
int
push
mov
jb
jecxz
push
inc
xchg
push
popf
jne
rcrb
pop
add
call
pop
lock
out
push
shll
sarl
jmp
repnz
mov
negl
and
pop
not
loope
fmul
in
orl
add
dec
imul
test
aad
pop
cmp
ds
insb
movsl
movsb
mov
push
ret
lock
popa
pop
faddl
fwait
ja
adc
sbb
shlb
stc
loop
arpl
dec
jg
lcall
inc
in
add
sahf
insl
xor
jns
dec
and
movsb
mov
xchg
data16
repnz
out
frstor
sbb
adcl
and
add
in
push
int
ljmp
enter
aad
mov
push
sbb
repnz
roll
jns
cmp
jp
jbe
ficoml
jl
outsb
sahf
out
outsb
ds
ds
jg
xor
testb
and
cld
or
mov
pusha
cmp
stos
in
loop
cmp
ficompl
js
lock
popa
and
xchg
enter
into
in
push
lahf
xchg
sub
in
or
xchg
adc
lods
mulb
shrb
pop
lahf
lcall
inc
cmp
addb
mov
pop
xchg
jg
sbb
xchg
pop
outsl
inc
inc
sbb
outsb
cld
add
mov
es
rol
pop
outsb
sub
cmpsb
pushf
cmpsl
loopne
lea
xchg
jno
leave
cmpsl
out
cld
sub
mov
adc
or
mov
jmp
push
add
lods
sub
js
cmp
or
test
pop
xor
xchg
fnstcw
outsb
or
enter
inc
adc
ret
dec
test
mov
sbb
sahf
and
xorb
jne
lds
or
sub
push
sub
lea
fcomi
xchg
sti
daa
mov
int3
out
sub
int
out
jae
and
dec
mov
movsb
or
cmp
and
push
loope
mov
insb
jne
cltd
push
xchg
dec
dec
sub
adc
es
or
aas
adc
jge
xlat
iret
cmp
push
out
sub
mov
push
data16
cs
pop
cwtl
xchg
xor
test
out
mov
andl
sbb
add
push
push
shrb
xchg
sbb
std
divb
out
jp
add
ja
inc
in
outsb
dec
in
cmpsl
movsl
lods
pop
push
add
fwait
mov
aad
and
mov
daa
in
sti
iret
pand
xor
sub
movsb
inc
push
shrl
test
jne
mov
jp
mov
inc
jge
fmull
push
cmpsl
sub
add
pusha
pop
ja
sub
and
add
invd
cmc
insb
insb
cltd
cmc
jae
test
into
xchg
rolb
add
sbb
jb
fcompl
or
adc
mov
aas
movsb
xor
call
push
test
dec
xorl
cmp
pop
popa
pop
inc
aaa
addr16
cld
add
jl
push
jnp
sbb
xlat
mov
hlt
add
sub
sbb
fldcw
cmp
push
dec
lods
xor
insl
std
testl
mov
sub
leave
or
pushf
imul
sbb
stos
or
xor
sub
lcall
mov
movsl
leave
lret
or
jecxz
pop
cld
incb
or
mov
loope
jo
icebp
sahf
push
push
push
jae
sub
out
test
adc
xlat
sub
ficoms
out
sbb
dec
sub
roll
xchg
xchg
cli
jmp
and
add
jbe
sti
cwtl
inc
inc
lods
add
rcrl
jne
fcomps
stc
out
out
jno
jecxz
ret
push
into
mov
idivl
mov
xchg
ret
xchg
popa
xor
mov
iret
roll
rep
cwtl
in
movsl
inc
leave
fs
jecxz
cld
and
pop
add
inc
mov
flds
lret
hlt
mov
sti
xor
pop
mov
in
xlat
sbb
popa
insb
lret
addb
pusha
dec
jge
jmp
mov
das
mov
adc
pop
sbb
pop
mov
mov
mov
adc
inc
sbb
test
and
fstpl
and
xor
inc
fistpl
ret
icebp
xor
sti
mov
shll
incl
in
or
cltd
imul
adc
sub
xchg
or
int3
les
push
mov
mov
in
pop
stos
sbb
adc
push
ret
dec
mov
push
loope
mov
sub
mov
ficoml
cli
cmpsb
cmp
mov
fs
xchg
jle
jae
aaa
scas
insb
fldenv
mov
not
lret
aad
imul
into
iret
jl
lods
cmovae
adc
xchg
xlat
ds
and
out
or
out
jmp
xchg
ljmp
test
xor
and
imul
or
jmp
aad
mov
pop
add
cli
inc
arpl
dec
mov
fbstp
cmpsb
xor
pop
cs
dec
xchg
mov
iret
inc
imul
stos
xchg
mov
jno
iret
jns
inc
popa
int3
pop
sub
mov
pmuludq
arpl
push
adc
daa
repnz
arpl
xchg
cli
inc
jno
add
sarl
mov
ja
mov
xchg
bound
sbb
xchg
out
outsl
das
stos
sbbb
jmp
fldenv
mov
push
inc
mov
lahf
jbe
jne
fwait
lock
add
cmp
mov
ret
outsl
push
push
scas
vunpckhps
adc
ret
les
addl
inc
inc
and
stc
inc
push
dec
cmpsl
ret
sbb
popa
in
shlb
jle
inc
push
xor
push
sti
push
jecxz
mov
cmp
pop
orb
dec
es
mov
ss
jg
sbb
gs
cmpb
jecxz
ljmp
in
adc
imul
push
stos
in
int3
loopne
jno
aas
pop
pusha
sub
out
movsl
inc
push
daa
inc
mov
mov
lret
dec
add
cmpsl
or
lahf
push
aas
and
ds
jae
push
cli
loopne
mov
fsubr
addr16
rcll
xor
sub
mov
jmp
mov
sub
push
pushf
mov
mov
jl
leave
jno
jl
fsubl
mov
arpl
cmp
add
pop
cmpl
lret
mov
push
push
dec
insl
mov
jg
in
adc
dec
mov
pop
xchg
jae
je
dec
lods
lods
mov
fldenv
inc
ja
movsw
cltd
dec
lods
pusha
movsl
inc
adc
xchg
push
std
cmp
sub
cmp
mov
stc
imul
mov
test
mov
fstl
jg
addr16
inc
inc
push
aaa
leave
mov
adc
pop
and
sbb
out
dec
jg
test
pop
or
pop
jmp
cmpl
mov
push
xchg
pop
inc
mov
and
adc
test
shl
je
lret
into
out
cmpsl
pop
idivl
gs
les
mov
das
insb
xor
ds
dec
loop
cmpsl
fildl
dec
lds
les
out
loop
cwtl
loop
gs
out
pop
das
inc
mov
push
mov
mov
aam
xchg
xor
insb
jg
or
aam
push
loopne
inc
pop
ja
cmp
pop
je
mov
shlb
sti
mov
pop
cmp
sahf
push
pop
shll
repnz
pop
jne
rolb
dec
jmp
dec
popf
push
push
mov
jns
dec
xor
pop
and
xchg
fsubr
mov
das
sti
mov
testb
aas
fwait
imulb
rcll
popa
dec
jp
ret
jg
outsl
mov
adc
cmp
dec
movsl
xchg
xlat
loopne
mov
outsb
sub
mov
cmp
stos
sbb
inc
sub
stos
movsb
lret
sub
push
adc
inc
test
xor
es
dec
add
enter
popa
shrb
arpl
and
mov
testb
and
xor
push
cmp
gs
cmpsb
test
xor
in
mov
lahf
cwtl
sbb
inc
jg
dec
std
stc
cmc
fstpt
or
clc
jp
scas
fidivrl
movsb
jno
sub
adc
mov
icebp
mov
pop
adc
lcall
and
movsb
and
fisubrl
jnp
xchg
push
and
dec
push
in
sub
dec
sub
sti
xor
ja
mov
mov
mov
pop
movq
pushf
mov
fwait
mov
xchg
add
or
mov
inc
test
jnp
xor
lods
int
adc
aam
and
jmp
cmpsl
xor
nop
lret
cmp
sub
and
jp
mov
movsb
dec
icebp
add
sbb
jecxz
mov
js
js
ud2
sbb
and
outsb
jmp
shrl
jp
lcall
mov
loope
lahf
jle
nop
les
rcll
jmp
mov
rep
pop
add
rolb
mov
stos
rorb
jbe
call
cmpsb
xorb
push
push
in
mov
mov
movsb
pusha
dec
out
adc
inc
sub
popa
movl
mov
ds
sbb
dec
rorl
andl
push
xlat
cmp
and
dec
dec
pop
inc
into
xor
mov
lock
and
test
out
add
stos
loopne
negl
pop
inc
fbld
mov
and
repnz
push
test
dec
sub
jo
cmp
mov
mov
adc
ds
shrl
addr16
lds
pusha
fwait
insl
xchg
sbb
outsl
fstpl
or
cltd
icebp
aas
or
inc
push
popf
pop
fcom
inc
rorl
or
push
popa
push
cmpsb
adc
test
mov
and
inc
mov
aam
xchg
ljmp
repz
jle
bound
mov
fcompl
mov
addb
insl
mov
into
adc
add
jge
add
sub
pop
pop
out
fdivl
sbb
loop
scas
loope
mov
shll
mov
or
sub
pusha
xchg
mov
adcb
rcr
add
inc
inc
lahf
push
or
daa
icebp
add
ret
setl
inc
and
inc
mov
lods
sbb
pop
sub
push
add
dec
pop
or
fdivrl
in
test
js
or
fdivs
pop
insl
sbb
push
dec
mov
push
js
aaa
ficomps
mov
arpl
sbb
les
mov
test
push
aad
jno
fcoml
sbb
mov
aam
jae
gs
gs
or
sahf
arpl
add
adc
xlat
push
jge
or
loop
fmuls
mov
shr
mov
sbb
cltd
aam
test
out
data16
cmc
cld
dec
movsl
les
inc
jl
stc
sbb
imul
and
fistps
adc
mov
xchg
cli
test
dec
xchg
sub
inc
xchg
cli
in
push
adc
push
and
test
data16
rol
shlb
mov
cmp
rcrb
push
aam
add
shlb
cmp
or
fnstenv
popf
call
mov
ja
arpl
dec
xor
mov
or
das
mov
int3
xor
mov
mov
mov
clc
scas
sbb
aas
mov
pop
xchg
loopne
lret
jmp
loop
sub
pop
adc
mov
xor
jecxz
popf
xchg
sarl
or
lock
push
mov
pop
jmp
rcrl
mov
lods
pop
sti
in
shrl
daa
dec
pusha
call
xor
dec
fsubrs
cld
scas
lcall
stos
insb
fidivrl
in
push
lret
add
mov
int
mov
mov
and
insl
dec
das
push
mov
mov
jae
pusha
dec
push
in
movsl
icebp
sbb
add
mov
mov
and
in
cmp
push
rclb
mov
pushf
shrl
es
sbb
movsl
cmp
mov
dec
dec
mov
push
add
xorl
dec
xchg
aad
in
popf
push
pop
mov
xchg
in
xchg
fwait
mov
cs
cmc
shll
mov
repnz
jno
adc
ljmp
push
cmp
pop
std
repnz
in
mov
repz
arpl
add
sub
add
push
sbb
mov
xlat
mov
out
in
mov
outsl
xchg
jl
fs
insb
mov
lret
mov
jae
jnp
dec
dec
xchg
mov
push
cmpsb
xchg
aaa
jle
xchg
pop
bound
pop
cmpsl
cs
cmp
psubd
mov
sti
in
jo
xor
and
int
xchg
clc
in
or
int
cwtl
lcall
push
xor
jae
das
or
lahf
push
stos
scas
xchg
xorl
push
stos
sbb
insl
cmpsl
mov
mov
insb
inc
test
das
cmp
loope
xor
lods
sbb
ds
or
test
divl
pop
loopne
nop
in
sar
jns
xchg
inc
js
adc
jge
inc
fistpll
scas
adcl
mov
add
cmp
inc
add
sti
mov
shrl
test
fwait
push
jno,pn
jmp
or
adc
movsb
cli
push
pushf
fmuls
mov
mov
adc
cmp
sarl
loop
sub
adc
mov
inc
jb
out
std
push
dec
push
jne
dec
jl
mov
sbb
mov
adc
inc
pop
out
imulb
imul
out
cmp
push
xchg
sbb
push
fbstp
jae
add
popf
cmc
push
and
jl
mov
sbb
mov
insl
mov
scas
pop
jle
push
and
inc
jp
cmp
mov
or
dec
cmp
jns
dec
sub
les
xor
out
imul
arpl
dec
mov
sbb
outsl
mov
call
inc
push
stos
scas
aaa
loope
imul
mull
cltd
int3
jge
shl
dec
push
add
pop
inc
loopne
lock
fdivrs
repz
push
outsb
dec
xor
jns
mov
test
dec
pop
mov
mov
enter
sbb
mov
jmp
clc
or
inc
dec
pop
inc
pop
mov
dec
stos
xchg
push
cmp
aam
std
mov
test
lods
outsl
lahf
mov
adcb
popf
xor
les
push
lcall
xchg
dec
fs
jns
mov
mov
mov
bt
cltd
cltd
mov
add
push
inc
shll
test
mov
adc
mov
sub
add
out
divb
jp
enter
addl
xor
xchg
push
enter
mov
inc
xchg
les
movsl
scas
xchg
inc
mov
sub
xchg
and
jl
ja
outsb
push
adc
pop
std
push
cmc
repz
movsl
rcrb
push
inc
lods
cmpsl
aam
sbb
sub
xor
enter
inc
xor
cmp
dec
xchg
stos
push
mov
leave
cmp
cmpsb
loope
adc
dec
ret
fcompl
loope
jg
xchg
sbbl
xor
imul
sahf
stc
std
js
shr
add
push
mov
sub
lret
je
lea
fistpl
inc
xchg
jb
mov
sub
int
fistps
add
add
jns
adc
and
mov
adc
mov
mov
jns
imul
mov
mov
in
xor
xchg
out
cli
lcall
je
xor
rclb
pushf
jp
push
pop
and
push
mov
push
sahf
mov
ret
fmul
inc
ja
dec
pop
push
stos
push
adc
out
insl
popa
adc
add
dec
sarl
aas
cmp
int3
add
icebp
jnp
aad
cmpsl
fs
mov
clc
mov
sub
jp
jge
scas
in
insb
mov
push
jl
mov
mov
dec
xchg
or
scas
bound
cltd
add
xchg
nop
sbb
mov
clc
lods
popf
push
push
ds
pop
jmp
ret
imul
out
push
sub
repz
int
popa
push
mov
mov
sbb
ds
or
out
stos
sbb
dec
xchg
push
pop
int
xchg
sahf
add
dec
or
push
call
dec
jle
lcall
es
and
and
and
dec
jae
mov
daa
push
sub
into
mov
test
hlt
jbe
xchg
out
mov
xchg
sar
in
mov
mov
daa
cmp
fisttps
xchg
jae
mov
inc
movsb
jne
stc
mov
mov
push
lock
push
xchg
rorb
jns
imul
bound
xor
sub
add
cmc
adc
mov
jnp
xor
lret
out
add
in
fcomi
push
fistl
fs
adc
xor
mov
xor
dec
shlb
and
xchg
cld
push
xlat
xchg
fidivrs
popf
mov
and
mov
fsubs
aaa
es
jns
pop
pop
sarl
imul
dec
xchg
add
movl
dec
aam
mov
fildll
repz
jmp
add
xor
xchg
xchg
lock
repnz
cmpsl
jge
adc
sub
stc
xor
shll
pop
jmp
clc
mov
outsl
fdivl
cltd
mov
pop
add
push
mov
or
inc
ds
fisubrs
xchg
outsb
sbb
xor
dec
xchg
out
xor
insl
rcrb
addb
stos
pusha
incb
xlat
call
mov
inc
jb
xchg
xchg
sub
xor
push
mov
push
jg
lods
pop
loopne
ffreep
mov
in
and
pop
cwtl
pop
lret
and
xchg
out
mov
push
add
sub
xchg
inc
lcall
cli
dec
dec
shll
cmp
adc
or
outsb
lds
cld
mov
and
mov
aam
fs
mov
inc
fs
dec
stc
imull
call
loop
stos
xbegin
inc
mov
mov
xchg
xor
push
lahf
daa
xor
jno
dec
sahf
test
push
sbb
jb
mov
mov
or
pop
out
or
sahf
inc
stc
inc
add
data16
cmp
lret
ret
loop
stos
outsl
dec
stos
jmp
inc
pop
mulb
sub
hlt
cld
mov
popa
push
sbb
add
xor
call
dec
lret
ret
pusha
and
push
test
stos
xchg
shrb
lods
sbb
jns
sarb
ffree
add
inc
fcoml
lds
mov
sub
shlb
pop
out
sub
mov
aaa
int3
sbb
roll
cld
adc
add
pusha
stc
adc
sbb
fiadds
push
mov
xor
jnp
cmp
es
jbe
xchg
cltd
fildl
imul
push
mov
mov
out
and
pop
bound
ror
or
idiv
daa
push
jle
in
hlt
in
ss
pop
inc
xor
jg
sub
and
test
mov
xor
cmc
loopne
lock
xchg
xchg
mov
jnp
dec
pop
sub
loop
add
stos
mov
xchg
fwait
pushf
inc
rcll
lock
sbb
ffree
push
outsl
std
lock
cmp
andl
sub
jns
jae
xchg
and
add
out
fdivrs
jne
pop
jnp
pop
out
push
cmpps
push
arpl
pop
bound
movsb
xchg
xor
popa
jb
aam
pop
shr
pop
jmp
shrl
mov
fwait
call
and
int
mov
ret
mov
test
ljmp
rorl
inc
ss
mov
ret
push
sbb
repnz
xchg
push
jl
jg
mov
xchg
insl
mov
stos
js
push
repnz
js
adc
lret
mul
jno
jle
push
or
xchg
add
pop
test
stc
popa
fcoms
loopne
shl
shll
loop
xchg
fnsave
sub
ss
or
and
aaa
dec
pop
addr16
xor
jl
cmp
aad
inc
fidivrs
repnz
sbb
push
cmp
add
sbb
cmp
inc
and
addr16
pop
add
aam
dec
fbstp
adc
lret
push
mov
sub
test
in
mov
lcall
fisttpl
imul
sbb
adcb
adc
flds
fwait
bound
repz
ljmp
push
xor
pop
outsb
and
xor
cmp
push
arpl
dec
and
xor
adc
pminub
mov
fmuls
repz
hlt
xchg
sahf
mov
data16
mov
sbbb
push
les
shlb
push
add
pop
push
push
mov
shll
add
pop
sbb
aam
fldcw
add
cwtl
test
aaa
call
out
imul
popa
add
or
pop
lds
xchg
aad
jmp
inc
xchg
cwtl
mov
cmpl
movsl
gs
cli
addb
mov
js
add
pushf
fnstenv
sti
xchg
jo
jns
pop
jo
mov
fsubl
imul
and
int3
cmp
daa
sub
repz
add
mov
lcall
ds
lds
mov
hlt
push
cs
stos
aaa
sarb
xchg
dec
jno
cmpsb
in
es
and
xor
fistl
sbb
mov
xchg
sbb
sbb
push
adcl
adc
pop
ja
add
pop
dec
or
pop
fsub
jnp
in
dec
or
cmp
pop
cltd
stos
ja
scas
sbb
dec
push
pavgb
rcrl
jmp
jnp
insb
mov
jecxz
and
ss
jno
or
cmp
dec
mov
and
or
ja
mov
mov
jae
push
pop
sub
pop
pushf
and
xchg
xchg
addr16
ja
dec
xor
shlb
ljmp
aad
adc
pop
and
jge
ss
std
cmp
jne
jp
std
jns
repz
int3
lods
jmp
add
push
shr
mov
imulb
cs
push
or
jecxz
popa
push
fsubs
mov
decw
pop
scas
push
loope
cwtl
dec
fsub
outsb
jle
outsl
sbb
mov
scas
mov
sbb
add
les
cmp
cmp
aad
xorb
pop
frstor
movsl
sbb
jge
mov
test
pop
xor
mov
negl
les
sbb
repz
xor
into
cld
xchg
inc
jmp
in
loop
aas
fs
stos
mov
test
inc
xor
jge
and
mov
cmp
adc
popf
adc
mov
and
lods
inc
xor
push
lcall
insb
outsb
stos
ja
test
push
cltd
lock
loop
int
or
out
sub
inc
data16
popa
pop
dec
mov
push
mov
push
ret
nop
and
jecxz
inc
sub
push
and
dec
out
mov
lahf
iret
mov
push
test
mov
aas
fisttpl
pop
cmp
push
xchg
jl
add
call
dec
add
dec
adc
je
cmp
add
xor
js
adcl
mov
inc
rcrl
mov
out
loope
sbb
movsb
mov
sub
xor
out
dec
and
adc
outsb
pop
inc
xchg
jbe
fnstenv
add
jbe
test
lea
pop
aam
outsl
pushf
movsb
fsubrl
xor
xorb
sbb
mov
jnp
out
inc
andb
xor
lahf
adcb
ds
nop
and
test
lahf
push
sub
dec
xchg
mov
cmp
mov
lret
or
int3
sub
pop
add
inc
xor
pop
incl
je
das
pop
pop
dec
xlat
push
cld
test
clc
and
and
pop
lds
in
std
jecxz
iret
jb
cmpsl
pop
xchg
mov
or
jae
dec
cli
in
sbb
insb
sub
push
insl
dec
fdivp
or
shll
out
jp
and
sbb
sbb
push
movsl
xchg
lret
dec
clc
outsb
ret
ret
xor
inc
ret
add
inc
stc
push
xchg
out
outsl
adcb
cwtl
subb
sahf
xchg
cmpsl
xlat
mov
fisttpll
jecxz
push
mov
inc
shll
mov
pop
inc
sub
adc
outsb
pusha
cmp
jo
xor
into
dec
or
pmuludq
and
xlat
sbb
dec
mov
jne
and
in
mov
cmp
scas
jno
call
push
jg
jae
push
cli
push
cmp
nop
mov
in
xchg
lcall
cmpsb
mov
rdtsc
inc
lret
mov
mov
mov
mov
shlb
std
in
loop
adc
mov
xor
imul
pop
mov
repz
and
sbb
adc
loope
lods
xor
mov
and
xchg
push
xchg
pusha
mov
sbbb
sti
stos
cmp
dec
xchg
add
lods
add
sub
pop
or
push
sbb
mov
jle
pop
js
test
dec
sbb
or
pop
lret
es
push
mov
mov
xchg
lret
xor
sbb
push
repnz
enter
mov
sbb
mov
orl
sbb
and
cs
outsl
dec
xor
jmp
inc
push
lock
out
adcb
push
sbb
or
ss
cmp
mov
sbb
xor
shll
loop
adc
addr16
ss
mov
lds
les
leave
push
push
out
movsl
adc
jecxz
shr
mov
lret
and
imul
inc
sarb
in
mov
jmp
and
sarb
pop
add
mov
pop
xlat
and
insl
cmp
push
add
xor
outsl
rcll
mov
outsb
pop
clc
leave
pop
pop
daa
xor
mov
cwtl
ss
mov
in
mov
data16
jne
test
dec
mov
inc
lds
mov
pop
add
es
push
push
loopne
stc
lahf
nop
and
add
fstp
fwait
popf
daa
or
pop
sub
test
or
and
or
sub
jo
mov
in
sti
mov
jns
fildll
fstps
sbb
jl
mov
inc
punpckhdq
lret
mov
push
adc
adc
ret
xchg
push
dec
sahf
inc
rcrb
mov
mov
aad
in
add
jno
es
cmp
pusha
cmp
mov
aas
sbb
dec
jbe
sub
out
subb
fmulp
lock
dec
je
imul
or
pop
sub
adc
es
push
das
mov
in
inc
push
out
push
push
cli
roll
sbb
cld
pop
ss
out
cmc
iret
popf
jge
inc
aad
insl
dec
scas
mov
imul
in
jbe
cmpsl
push
add
xchg
sbb
fistl
sub
mov
das
mov
lret
loop
scas
xchg
push
sbb
out
push
call
add
mov
dec
lds
pop
mov
rcrl
jecxz
rcrb
movsb
and
and
shll
ret
push
jo
sub
inc
leave
pushl
xchg
rcl
jle
insb
int3
pop
mov
mov
dec
mov
xchg
pop
js
ret
nopl
fwait
mov
test
clc
sbb
xchg
adc
jno
hlt
mov
jb
inc
stos
js,pn
movsl
sub
lock
cmp
and
mov
scas
push
push
adc
jno
mov
mov
xor
inc
xor
lcall
jnp
xchg
testb
jne
cmpsb
fstpt
out
and
mov
dec
cmpsl
ror
xor
pushf
vsqrtpd
nop
scas
cmp
daa
notl
push
outsl
mov
loope
cmc
pop
js
mov
cmp
sbb
fldcw
clc
cmpsl
enter
dec
inc
cmp
inc
mov
adc
fld
hlt
push
mov
fldt
aas
add
popf
xchg
or
lret
or
ret
mov
cmp
mov
sub
pop
inc
les
mov
orb
or
pop
cltd
or
cmpsl
fsubrs
jmp
ror
cwtl
inc
push
mov
pop
sub
stos
jmp
or
push
clc
sbb
xchg
sub
outsl
lods
and
mov
stos
hlt
sub
push
cmp
mov
out
loopne
sbb
push
pushf
popa
test
sub
cwtl
xchg
ljmp
xor
scas
pop
aas
mov
cmp
xor
lcall
out
sbb
inc
in
inc
outsb
or
sub
add
out
js
aam
mov
in
repz
cld
xchg
icebp
mov
lock
out
mov
out
es
cltd
xorl
xchg
bswap
or
mov
fwait
out
hlt
adc
jo
rorl
mov
or
fstpt
mov
loopne
dec
pop
dec
mov
in
sbb
jbe
sbb
cmpsl
mov
ja
cmc
lret
pop
test
pop
out
stos
leave
arpl
insb
cmpsl
loopne
or
jns
mov
ret
test
fimull
push
je
mov
dec
mov
and
add
cmpsb
xor
and
inc
fcomip
xchg
fidivrl
repz
ret
mov
out
jns
jnp
mov
out
xor
adc
ret
pop
xor
sti
sbb
pop
inc
addr16
sbb
adc
xchg
pusha
lahf
int
into
popa
or
xchg
jns
dec
sahf
lcall
xchg
dec
xorb
push
fsts
mov
lret
xor
icebp
jne
mov
add
in
jmp
nop
sbb
xchg
fstpt
push
inc
push
adc
dec
cld
cmp
jl
and
sbb
jg
xlat
data16
fs
mov
cwtl
lds
bound
mov
pop
mov
mov
push
test
push
pusha
push
ret
fcmovbe
rclb
jle
mov
repz
or
test
ljmp
sub
mov
lret
ret
push
ret
push
negb
adc
popf
dec
inc
rcrl
enter
add
cmp
push
push
in
out
test
sbbb
outsb
mov
in
inc
icebp
pop
cli
inc
inc
pmulhw
mov
mov
pushf
out
test
aas
mov
push
icebp
dec
jg
sub
cmpsb
inc
jno
mov
fsubr
cli
push
out
xor
sahf
icebp
or
aam
dec
push
insb
mov
gs
sti
sbb
push
test
cmp
or
lret
aam
notl
rolb
cld
dec
mov
ja
js
fxch
adc
jecxz
sbb
test
mov
outsb
cltd
mov
pop
dec
adc
mov
cmp
mov
sbb
imul
dec
loop
sub
mov
fisttps
jg
inc
rcrb
mov
je
enter
lret
dec
mov
cmpsb
aaa
jecxz
scas
push
pop
cltd
sbb
add
insl
mov
aam
cli
mov
jns
test
loopne
xchg
test
rcr
dec
ret
lahf
imul
push
cmp
inc
int
scas
dec
pop
cmp
pop
dec
iret
rcl
and
orl
sbb
sbb
adc
imul
fnstsw
addl
mov
notl
xorl
cmc
push
xchg
xor
outsl
sti
andl
divb
xor
lds
and
inc
mov
movsb
mov
jns
das
inc
imul
in
aad
fnsave
test
jbe
movb
sbb
cltd
imul
repnz
divb
out
jmp
insl
minps
movsl
outsb
or
jne
stos
popf
stc
shll
in
lret
xchg
leave
jmp
mov
fs
fildll
popl
pop
ror
gs
cld
loope
cltd
inc
loop
je
xchg
jns
dec
decb
cmp
xor
push
push
sbb
std
dec
jne
popa
in
sub
xor
inc
fsub
mov
xor
addr16
rclb
addr16
mov
xor
loopne
and
es
dec
out
xchg
jbe
push
cmc
lea
mov
add
add
pop
in
and
push
bound
je
cmpl
lea
sar
lret
sti
xchg
jno
in
loope
push
fmuls
js
dec
sahf
add
and
cs
pop
add
test
clc
mov
and
mov
mov
sti
xchg
test
xchg
xchg
and
push
mov
addr16
push
popf
and
add
mov
js
and
mov
mov
add
cmp
hlt
shlb
xchg
cli
inc
cli
sbb
je
add
ja
in
sub
pop
nop
dec
push
movsb
dec
loop
jg
jae
xchg
adc
mov
mov
fmull
inc
dec
enter
test
or
and
cmp
jbe
and
xor
movsl
xor
mov
add
sub
add
mov
jo
mov
bnd
popf
cmpl
mov
adc
and
lods
sti
adc
out
hlt
ljmp
or
push
dec
pop
jae
fsts
jo
cltd
jmp
push
fimuls
cs
cmp
jnp
popf
nop
iret
aad
loop
das
rcll
shrb
mov
addl
inc
lahf
adc
out
xlat
push
xchg
int3
dec
pop
pop
outsl
imul
scas
aam
xchg
inc
dec
ret
cltd
arpl
dec
xchg
je
inc
mov
sub
pop
dec
lret
orb
or
xchg
ss
sbb
aam
pop
test
jbe
mov
pop
xchg
adc
xchg
mov
sbb
mov
xchg
cmp
rclb
shl
push
sbbb
jne
pop
stos
repnz
mov
das
sahf
inc
inc
sbb
cwtl
lods
jb
dec
adc
sahf
cld
pop
loopne
rorb
pop
cmc
les
or
or
cmp
inc
mov
sbb
push
rep
rolb
push
mov
sub
insb
maskmovq
dec
adc
cmp
loop
sub
xchg
jnp
lea
xchg
data16
fldcw
jge
repz
dec
mov
fidivl
sub
inc
sarl
sub
jne
mov
filds
xchg
or
icebp
imul
int3
jno
in
sahf
jmp
fs
aas
push
fadd
lahf
push
push
xchg
push
mov
cld
js
scas
and
push
aas
pop
outsb
jae
into
jb
xchg
jb
aas
leave
mov
xchg
jle
inc
sbb
daa
or
clc
jl
scas
add
add
or
sub
dec
in
testl
jecxz
inc
ret
and
cmp
ja
add
mov
loop
pop
push
fcomps
fidivrl
dec
insb
xchg
ss
and
test
jmp
cwtl
xorl
icebp
mov
insl
push
iret
addr16
imul
lcall
in
sbb
mov
pop
inc
aam
inc
cmc
pop
add
or
and
mov
and
add
mov
ds
stc
mov
fistpl
loopne
or
das
sub
enter
add
sarb
mov
inc
mov
mov
cmpl
and
and
mov
and
inc
popa
inc
sti
push
cli
sbbl
pop
mov
sbbl
sahf
sub
mov
add
movsb
dec
int3
out
lock
std
ljmp
pop
mov
adc
lcall
ret
test
adc
pop
fiaddl
mov
je
aaa
or
or
dec
sub
ds
dec
in
clc
jbe
xor
and
mov
lods
enter
ds
cmp
sub
xchg
lds
imul
add
cmpsb
add
sbb
int
dec
pop
and
jle
mov
bound
pop
mull
lods
pop
mov
xchg
jmp
lret
outsb
xor
movl
push
mov
outsl
push
insl
lods
mov
subb
loop
movsb
xchg
iret
or
or
pop
adc
jno
mov
ret
in
add
sbb
mov
mov
clc
test
icebp
jle
pop
movsl
pop
jno
mov
mov
and
rol
add
and
aad
movsb
pop
jae
or
popa
lods
mov
ret
roll
test
xchg
cmp
mov
sahf
push
jno
aam
xchg
xchg
je
or
aad
xchg
pop
pop
addl
sub
push
bound
icebp
ftst
or
mov
shl
jp
inc
cld
pop
jo
nop
gs
cmpb
sbb
push
out
rclb
xor
sahf
bound
add
dec
or
push
or
mov
pop
add
xor
cmp
fdivl
std
sahf
xor
out
insb
cmp
dec
repz
shr
mov
jg
or
loope
movsb
imul
pop
push
test
xchg
js
pop
cld
js
fbstp
ret
call
insl
enter
jnp
xor
mov
insl
outsb
vmwrite
daa
mov
in
dec
sbb
test
push
cltd
mov
jl
lock
int3
and
outsl
push
push
test
lcall
fwait
imul
bound
pop
jecxz
sbb
mov
mov
rcl
je
out
xor
ret
xor
fs
lcall
es
sub
pop
cld
sbb
mov
push
subb
invd
shlb
fisttps
fmuls
fistpll
jg
mov
dec
xchg
stos
or
insb
sub
add
cli
sub
enter
pusha
cmp
mov
out
jp
js
lds
cli
jge
add
xor
les
fidivl
pop
mov
mov
out
xor
jl
gs
add
xor
inc
pushf
or
test
cld
ja
or
insl
adc
pop
add
subl
mov
dec
add
outsb
fdivrs
add
int
pop
sti
call
and
js
adc
or
cmp
add
shlb
add
mov
fnsave
fiaddl
testb
mov
out
fwait
or
inc
outsl
flds
jmp
insl
repnz
dec
cltd
out
rclb
inc
scas
xchg
movsl
or
push
movsl
pop
lea
jnp
hlt
loop
psrlw
popf
mov
sbb
jno
push
mov
pop
inc
movl
or
dec
in
loop
sbb
push
mov
int3
cltd
cmp
xchg
data16
mov
orb
fsubrs
arpl
imulb
xor
xlat
add
pusha
or
adc
dec
outsl
loope
pop
or
pop
fnstsw
pop
inc
stos
cmp
mulb
call
xchg
ret
cmp
or
insb
repz
or
inc
lret
stos
push
jge
test
jno
ljmp
mov
dec
push
mov
cmpsl
test
addr16
cmp
jnp
lret
stc
aaa
aad
out
jae
jae
test
sbb
add
enter
fmuls
sbb
add
jmp
or
push
push
leave
pop
jo
ds
add
mov
and
xchg
fwait
imul
mov
inc
mov
lcall
pusha
mov
js
inc
mov
or
jno
or
pushl
test
mov
stos
xchg
jl
mov
pop
fistpl
movsl
cld
out
mov
jbe
movl
insb
pop
jle
dec
cli
icebp
push
mov
jbe
fistl
lea
dec
cmp
out
jb
or
dec
xchg
jb
lcall
jl
xchg
imul
add
sbb
adc
adc
add
lret
dec
mov
incb
cmp
ret
inc
arpl
subb
outsb
and
ficoml
js
cmp
xchg
add
in
jmp
add
mov
cltd
out
ja
inc
sub
outsl
in
mov
mov
jg
hlt
mov
push
sbb
jo
std
cmp
aad
in
mov
push
aas
or
mov
stos
mov
add
mov
enter
dec
sub
or
cmp
xchg
sub
cld
icebp
shlb
pop
shlb
cs
jo
test
xor
mov
ds
dec
aas
sahf
or
popl
sub
fcoms
lcall
std
push
jae
mov
mov
aad
rep
adc
sbb
fidivs
sub
push
inc
jb
xchg
aam
hlt
pop
popa
ret
xchg
push
push
je
lahf
sbb
sbb
push
mov
or
adc
lret
xor
jb
pop
loope
movsl
insb
cltd
mov
es
fists
mov
cmpsl
shll
mov
roll
out
ficoml
cmc
dec
loope
into
aaa
rorb
xchg
movsb
ret
sbb
push
fbstp
xchg
scas
xchg
push
icebp
push
aam
jmp
inc
jmp
pop
clc
mov
ret
in
or
stos
sti
loopne
mov
push
push
pop
aad
xchg
xlat
mov
pushf
div
sub
scas
addb
fcomps
shrl
in
sub
jbe
sub
stos
ret
sub
stos
decb
and
scas
sahf
mov
in
sub
roll
mov
mov
inc
lds
das
xor
testb
inc
cld
leave
movsb
mov
push
and
sub
cmpsl
mov
rorb
adc
enter
aaa
fs
fidivrs
xlat
add
loopne
fsubl
pop
mov
mov
roll
mov
cs
dec
push
into
jbe
push
rolb
in
xor
fwait
jbe
jmp
inc
popa
ret
js
shr
mov
das
in
lahf
xor
out
mov
out
shl
pop
xchg
cmpsb
fs
cmpl
jl
mov
lret
testb
pop
sub
ja
pop
cwtl
loop
mov
mov
xchg
add
pop
jno
mov
mov
bound
and
sub
mov
add
imul
rcrb
xor
pop
xchg
mov
mov
call
xor
xor
sub
or
lcall
fstps
cmp
push
inc
xchg
cs
push
inc
jne
mov
mov
shlb
outsb
fisubs
xor
pop
add
push
insl
sti
movsl
lock
aaa
sub
inc
dec
rcll
call
jle
fists
ja
arpl
jge
or
mov
enter
pop
ror
icebp
push
sub
daa
xor
add
add
iret
and
cmp
push
cmp
std
inc
mov
leave
js
and
xor
stc
xor
orl
xchg
mov
decb
push
loope
jp
iret
pop
cld
insb
mov
jo
adc
jl
jno
push
call
shll
adc
out
mov
idivl
les
pop
into
loope
mov
jnp
loop
cmp
pop
shl
jle
out
xor
push
imul
or
cld
cwtl
dec
mov
hlt
fwait
lea
sub
shlb
adc
loopne
jno
mov
mov
dec
imul
cmp
les
add
mov
xor
clc
inc
jmp
nop
ja
and
rclb
sbb
push
cmp
adcl
push
add
mov
rcr
cmp
rcrl
add
loope
mov
addr16
lea
loop
fwait
lcall
jmp
scas
aam
ljmp
mov
pusha
mov
add
dec
and
mov
pop
shlb
sbb
icebp
and
ffreep
enter
cmp
gs
adc
and
aas
dec
dec
leave
sbb
cmpb
out
cmp
inc
data16
or
fcomi
mov
xor
mov
inc
pop
sub
rolb
nop
dec
cmpsl
jb
and
push
stos
jo
sbb
faddl
adc
and
out
add
sub
sub
out
add
jp
and
and
pop
movsb
mov
mov
imul
pop
or
lea
mov
push
or
lcall
pop
stos
or
scas
push
mov
jle
notb
lret
jae
in
daa
mov
repnz
adc
jl
lods
push
mov
mov
test
adc
rcrb
jecxz
in
ds
add
pop
jge
cmp
and
or
nop
js
je
lea
fistps
push
cld
in
push
dec
pop
les
loope
arpl
cmp
mov
or
fistl
adc
adc
insb
dec
xchg
push
xchg
test
mov
scas
loop
xor
adc
lds
mov
add
pushf
lods
shrb
sbb
and
adc
xchg
scas
add
js
imul
pop
jo
ret
out
or
dec
jbe
leave
lret
scas
pop
jae
idivb
test
or
inc
cmp
into
inc
in
pop
leave
xor
shrl
xlat
lods
arpl
mov
xchg
push
and
push
mov
iret
pusha
fcoml
insb
push
push
repz
aam
scas
mov
cmp
and
xchg
mul
lcall
push
out
lea
mov
and
negl
rcrb
push
mov
pop
mov
xor
xlat
scas
cmpsl
hlt
pushw
or
mov
xchg
mov
xor
sbb
daa
inc
or
xchg
pop
inc
repz
and
gs
aam
in
or
clc
push
sub
rcrb
aas
and
imul
and
sub
xchg
inc
dec
mov
jge
std
adc
pop
out
mov
mov
pushf
popa
repnz
test
stos
sarb
jno
pop
hlt
push
jecxz
lock
aam
adc
ret
shll
ss
xchg
addr16
xchg
push
icebp
scas
mov
imul
sahf
fmuls
pop
xor
lret
mov
push
jl
fcompl
sbb
push
data16
push
mov
mov
adc
mov
test
notb
fmuls
cld
inc
sub
scas
cwtl
rol
sbb
fadds
ds
pop
dec
je
js
shll
fcmove
gs
out
aad
insb
and
mov
lret
pop
xor
jbe
outsb
sub
imul
xor
cs
leave
sbb
pop
fiadds
fcmovu
dec
push
out
hlt
or
test
mov
fnstcw
testl
xor
iret
in
mov
mov
push
mov
gs
sahf
imul
sbb
ret
daa
xor
leave
or
ret
xchg
fistl
mov
pop
ret
lret
or
jo
jbe
je
xorl
mov
mov
push
push
outsl
jo
fsubr
clc
ret
mov
pop
add
mov
mov
mov
rcrl
or
xor
mov
inc
sarl
ljmp
fadds
inc
jle
nop
add
inc
movsb
sub
or
jo
roll
icebp
loopne
inc
jecxz
jge
in
call
cld
adc
push
cmp
lock
outsb
aaa
arpl
out
and
xor
sub
outsb
jne
addr16
in
fisubl
jmp
test
lock
aam
fcompl
pop
push
mov
sbb
test
jbe
sub
mov
push
push
lods
adc
lock
dec
ffreep
adc
adc
fildl
xchg
dec
sub
mov
imul
and
ret
ds
int3
cwtl
and
test
pop
sbb
ds
loop
ljmp
xor
data16
into
sahf
addr16
call
pop
pusha
lret
xor
jp
jg
shlb
dec
mov
sbb
dec
divb
icebp
sti
and
into
lcall
and
insb
push
pop
pop
in
or
fimuls
sbb
out
mov
shr
loope
xor
mov
pop
inc
arpl
push
arpl
jl
jo
cld
push
call
add
in
or
mov
or
mov
pop
leave
mov
lret
push
mov
js
gs
jae
and
ret
xchg
mov
hlt
out
test
aad
pop
xor
out
aaa
lods
stos
nop
cld
xchg
pop
pop
sbb
adc
push
and
or
sbb
pop
adc
inc
pop
std
and
cwtl
mov
sub
add
mov
lahf
inc
add
jo
jns
popa
sbb
les
and
jno
aad
gs
ss
sub
adc
in
jmp
addr16
js
inc
mov
mov
inc
ljmp
inc
cmpb
fsubl
push
mov
data16
dec
cmc
jecxz
imul
jno
or
mov
mov
pop
test
dec
div
lock
jne
insb
gs
insb
out
stos
pop
xchg
daa
loope
xchg
sbb
clc
xchg
mov
adcb
mov
adcl
mov
sar
icebp
xor
cmp
pushf
mov
mov
jecxz
pop
aam
mul
jb
fisubrs
push
sub
cmp
mov
imul
pop
mov
inc
sti
adc
pop
rcll
sti
mov
sub
sub
inc
push
jmp
pop
nop
jmp
out
je
es
lods
or
dec
rol
mov
mov
lea
push
leave
pop
sbb
stos
shr
mov
inc
mov
sbb
outsl
sbb
push
lret
jne
repnz
lahf
dec
cltd
ds
data16
cltd
test
fwait
aam
lahf
pop
out
lock
loope
pop
adc
imulb
pop
pop
and
mov
jo
and
sub
sub
popa
stc
and
add
pop
pop
jmp
pop
mov
rcrb
adc
add
movsb
ljmp
mov
cwtl
inc
je
push
pop
arpl
xlat
pop
or
fs
sub
lcall
sbb
in
pop
jbe
mov
xor
jno
imul
incb
push
mov
mov
loop
inc
sub
and
enter
mov
xchg
dec
push
pop
and
popa
adc
repz
call
bsr
xlat
xchg
adc
pop
orl
lds
and
push
scas
mov
and
cmp
enter
dec
mov
test
push
lret
sahf
in
fs
fmull
scas
adc
adc
mov
lods
repz
rorl
mov
hlt
mov
jg
mov
push
movsb
mov
clc
lahf
jmp
pop
call
mov
jbe
add
daa
daa
clc
andb
in
popa
cltd
push
pop
mov
add
mov
mov
or
mov
sahf
push
adc
or
mov
orl
xor
rcrb
jp
lcall
popf
imul
mov
cs
cmp
mov
lahf
pop
mov
pop
in
mov
andb
aam
rcrb
dec
test
imul
aad
push
hlt
adc
jo
ucomiss
xchg
sbbb
adc
inc
push
nop
xlat
loopne
iret
xor
jge
inc
negl
ss
loope
icebp
shll
add
out
push
cmp
out
mov
mov
add
mov
cmp
nop
je
sbb
pushf
cwtl
xchg
call
daa
or
lods
jmp
cltd
xchg
jae
inc
push
fcoml
lcall
ret
fisubrs
push
inc
roll
mov
or
imul
inc
je
cwtl
jg
adc
in
vprotq
shll
lahf
push
pmaxub
xchg
mov
mov
dec
fdivrs
iret
jbe
sbb
dec
xor
loopne
xor
mov
add
ja
jo
and
pusha
push
aaa
sub
push
data16
adc
sbb
fs
popf
pop
and
jnp
or
inc
stos
out
push
sbb
dec
cmp
dec
rcrl
jno
rcll
dec
enter
pop
cli
ficomps
pop
into
mov
xlat
xor
js
ss
xor
jecxz
xor
push
mov
and
cltd
or
jbe
out
fwait
and
inc
scas
inc
cwtl
jb
or
jnp
mov
and
outsb
lea
movsb
pop
push
xchg
roll
fimuls
jecxz
lret
inc
sbb
mov
js
lcall
mull
pop
sub
test
and
mov
sub
insb
loop
cmp
iret
in
pop
sub
push
in
mov
fildl
out
into
inc
or
jbe
aam
jns
rcl
leave
push
lea
lret
into
jg
inc
aaa
out
adc
or
ja
adc
inc
inc
sbb
stc
adc
aaa
push
or
xor
pop
lds
inc
push
jp
mov
aad
in
icebp
xlat
xchg
jne
inc
dec
lock
test
xor
shlb
lods
cmp
stos
aas
xchg
sarl
pop
popa
mov
pop
jl
ss
jnp
jnp
aas
arpl
stos
add
neg
repz
cld
mov
or
cmp
aas
add
cmpsb
mov
jmp
dec
mov
mov
add
pop
or
test
out
add
jmp
mov
call
mov
sub
mov
mov
dec
sbb
adc
scas
or
out
icebp
lahf
mov
push
cmpsb
cmp
mov
xor
jp
sbb
lea
adc
sbb
addr16
cmp
test
fs
cmp
push
jo
bound
repnz
clc
dec
or
shlb
xor
sti
ds
test
mov
test
aas
mul
adc
mov
sbb
loop
xlat
icebp
and
test
mov
jl
add
fdivp
test
loope
inc
mov
mov
dec
cmp
mov
loopne
imul
clc
push
call
mov
dec
ret
sar
shll
outsl
movsl
pop
sbb
mov
outsb
aas
xchg
scas
cmp
ret
into
cltd
xor
mov
push
inc
in
in
pop
aam
insl
adc
xchg
inc
pop
xor
aad
loop
aad
jb
push
cmp
leave
xchg
mov
dec
dec
pop
push
lock
adcl
xor
mov
pushf
cmp
push
mov
testb
sbb
dec
pop
xor
push
loopne
in
popf
xchg
insl
mov
push
loope
scas
loopne
fisubrl
or
jmp
in
movsb
cwtl
pushf
mov
xchg
jl
jp
pop
into
push
fisttpll
inc
ja
ja
lcall
scas
sub
scas
daa
pop
add
sub
movsl
pop
sbb
ja
std
mov
arpl
sub
add
and
and
and
insb
fimull
and
add
and
mov
pushf
daa
push
frstor
push
pop
notl
or
sbb
pop
clc
daa
pop
jmp
adc
pop
jecxz
sbb
lea
mov
or
inc
mov
les
push
sbb
fs
lods
nop
icebp
cmp
pushf
push
mov
mov
and
jnp
pusha
dec
imul
inc
ss
das
push
aad
dec
xchg
jno
push
lcall
popa
inc
inc
mov
or
sbbl
xchg
out
mov
xor
stc
fwait
in
enter
imul
cld
push
addr16
enter
enter
inc
mov
loope
xor
jae
loop
xorb
xchg
rolb
out
sbb
shll
push
clc
cmc
enter
sbb
xor
cs
in
iret
stc
jnp
mov
cs
je
and
add
imul
mov
mov
lods
cmp
sahf
lret
cmp
jno
xchg
add
jns
cmpsb
rorl
xor
jmp
ljmp
outsl
test
mov
adc
push
push
xchg
cs
push
xor
movsb
testb
subb
daa
jo
lcall
cltd
cmp
mov
jns
jmp
in
ret
sbb
stos
push
mov
and
psubb
inc
xchg
sahf
fildll
jle
dec
dec
scas
gs
add
lock
mov
sub
add
test
stc
xor
jmp
in
je
cld
insb
inc
out
pop
pop
dec
fnsave
xor
das
stos
dec
test
xlat
int
push
shrb
pushf
subb
jb
mov
sarl
fists
shrb
mov
or
dec
fisttps
adc
loop
jnp
push
lahf
xchg
sub
inc
push
pop
lahf
xchg
dec
or
clc
cwtl
outsb
stc
sahf
gs
fmul
test
xorl
cmp
ss
pop
leave
std
loope
scas
inc
dec
and
jmp
adc
enter
add
push
jge
push
cmpsl
loope
mov
popa
cs
mov
xor
loopne
mov
in
loopne
test
or
cltd
pop
push
call
aad
push
stc
xchg
jne
lods
aaa
push
sub
lods
scas
xlat
or
pusha
add
mov
mov
pop
loopne
stos
mov
shr
mov
cmp
cmp
mulb
movsl
adc
jne
mov
jecxz
pop
int3
or
mul
fdivrs
sahf
test
ds
int3
sbb
repnz
aas
adc
cmp
imul
cmp
xchg
push
dec
sub
xor
movsb
xor
sbb
cmp
cli
mov
fsubrl
jmp
scas
jmp
ds
pop
cld
sbb
int3
jmp
mov
stc
roll
sbb
in
test
insl
mov
xor
cmp
hlt
call
in
nop
out
fnstenv
pop
mov
in
push
mov
ljmp
and
das
decl
icebp
jo
sub
sbb
cmp
paddusb
push
mov
xlat
jne
into
mov
mov
fistps
lods
pop
js
xchg
push
sub
adc
sub
pop
lods
lea
jle
inc
and
sbb
out
mov
mov
inc
loope
cltd
lahf
dec
add
addb
fildl
arpl
into
add
inc
lods
stos
sbb
fcmovbe
and
dec
and
xchg
std
cmp
xchg
push
mov
sub
ss
test
nop
adc
inc
mov
je
out
mov
push
xor
xchg
xor
sbb
jae
mov
shlb
ss
jno
inc
movb
dec
lock
inc
mov
sub
enter
xchg
insl
jbe
popf
out
pop
lods
cmp
or
add
lahf
xchg
gs
icebp
pop
loope
mov
dec
imul
pop
add
repz
les
sbb
pop
aam
out
popa
mov
ret
in
movsb
adc
outsb
ja
xchg
arpl
pop
das
sbb
divl
cmp
inc
xchg
pop
xlat
xor
test
mov
push
mov
jp
mov
xchg
cltd
jb
gs
xor
lcall
aaa
popa
sti
test
in
movsl
mov
mov
ja
enter
xor
lock
jo
sub
ret
xorl
xchg
outsb
int
inc
xor
into
repz
add
stos
push
mov
aad
int
mov
imul
push
movsb
xchg
sub
inc
data16
loope
ss
scas
jge
gs
pushf
jb
daa
add
jg
lods
push
sbb
rolb
and
pop
adc
inc
mov
fdivl
test
push
jns
std
xchg
or
cli
xchg
xchg
in
loopne
shl
cmp
ret
fstpl
pop
cld
push
inc
sbbb
repnz
je
pop
jecxz,pn
fprem
sub
add
xchg
movsl
lds
push
push
sbb
push
add
test
pusha
or
out
in
mov
mov
addr16
or
test
loop
inc
enter
adc
pop
sbb
cmp
xchg
lea
bnd
in
or
outsl
out
and
mov
jp
push
mov
insb
test
mov
pop
mov
mull
mov
orb
dec
mov
mov
pop
jmp
sbb
loop
popa
imul
jnp
xor
in
in
scas
sarl
stc
int3
enter
fldcw
sbb
fs
cld
add
push
aad
jo
ficomps
push
or
adcl
movsb
js
cmc
dec
jns
adc
push
in
ret
int
movsl
inc
mov
mov
int
in
inc
aad
add
call
inc
dec
aad
pushf
in
ds
push
lret
insl
test
cld
xor
inc
mov
call
push
gs
outsb
movsl
in
divb
jp
add
cmp
cmpsl
mov
jmp
pop
gs
lret
addr16
cmp
test
and
std
notl
mov
inc
jp
sbb
call
ljmp
daa
shll
xchg
dec
pop
sbb
lahf
mov
fsubs
jp
mov
pop
xchg
pop
cwtl
pop
lahf
push
jns
jge
jae
roll
mov
scas
mov
loope
test
sti
in
fsts
clc
xchg
icebp
aas
dec
call
cmc
testb
jb
arpl
dec
jns
jo
sbb
andl
stc
jae
into
std
mov
mov
inc
addb
nop
out
ljmp
inc
test
jle
jmp
pop
out
loopne
jecxz
pushf
sub
outsl
int3
mov
push
cmp
cmp
fcmovnbe
mov
lea
into
ds
pop
scas
xlat
icebp
add
sub
fwait
pop
mov
or
xor
xchg
or
popa
cmpsl
ret
xchg
jbe
sub
hlt
inc
outsl
aaa
movsl
fimuls
jns
gs
mov
lahf
popa
divb
add
rcrl
rorl
inc
sti
cmp
shll
test
rcrl
xchg
sub
dec
pop
out
sbb
aam
push
dec
or
dec
sub
int
xchg
ficoms
lds
and
mov
jge
mov
movsl
sbb
or
pop
xchg
adc
les
or
pop
lods
test
daa
nop
add
inc
lea
fsincos
mov
stos
push
aad
inc
cmp
jge
sbb
xor
insb
leave
sbb
repz
aad
pop
jmp
and
and
enter
xor
push
add
inc
fs
dec
sub
cmp
xchg
out
test
fcmove
cmpsl
xor
dec
and
jg
cwtl
adc
or
cwtl
sbb
cld
data16
inc
or
adc
arpl
mov
shlb
into
dec
test
scas
stos
cmp
or
insb
add
lea
loopne
xor
cs
cs
mov
and
inc
notl
stc
ret
xlat
lret
out
lcall
mov
cmp
push
mov
sahf
bound
movsl
emms
call
jg
js
xchg
hlt
out
and
adc
mov
sub
ds
adc
cmp
mov
fisttpl
subl
mov
cs
repz
cs
fiadds
sub
adc
call
inc
cli
loope
je
jge
popa
adc
mov
xchg
adc
arpl
aas
pop
hlt
mov
imul
xchg
mov
push
std
xchg
adc
or
and
cli
into
aaa
data16
loop
cs
lcall
and
inc
mov
ljmp
push
mov
xchg
add
lods
fs
mov
dec
inc
pop
xor
out
fidivrs
jl
rcrb
and
mov
or
mov
ret
dec
xor
decl
ljmp
xor
aam
loopne
ret
cmovle
or
mov
fcmovb
sub
cwtl
pop
cmpsb
cmp
ficoml
dec
xor
adc
shlb
lds
into
and
repz
pop
cmpsb
ss
sub
push
xor
pop
scas
adc
orb
cmp
cmp
cmpsb
xchg
adc
inc
inc
sarl
mov
mov
jb
addr16
mov
pop
mov
inc
movsb
inc
imul
pop
mov
out
jmp
cmp
sti
add
xor
pusha
je
mov
out
mov
cli
jbe
imul
cs
int
loop
sbb
sbb
jno
lahf
scas
inc
clc
sti
mov
addr16
pop
xchg
xchg
es
data16
jg
pop
loope
stc
bound
insl
add
or
in
xchg
jns
ljmp
mov
mov
bound
cwtl
fsubl
lcall
scas
adc
pop
xchg
ss
inc
cmc
ret
in
push
push
aam
int
outsl
imull
cmp
push
mov
loopne
pop
pop
clc
insb
lea
or
sbb
pop
ret
shl
xlat
jecxz
out
popl
xchg
aam
jecxz
push
mov
and
je
sahf
fmull
ret
mov
stos
cmp
out
loope
sbb
dec
je
push
ret
rcrb
mov
sarl
push
insl
dec
jl
mov
popl
sub
push
ffreep
add
lcall
push
loopne
gs
loopne
or
insl
mov
xchg
shr
push
cmp
pusha
arpl
out
inc
into
mov
stc
stc
les
sbb
dec
sbbb
imull
ret
sbb
stc
clc
pusha
daa
inc
mov
addr16
rclb
push
xor
dec
or
mov
mov
pop
into
ret
movsb
lods
fxch
cmc
xor
mov
inc
stc
je
push
loope
call
xchg
ret
pop
out
pop
pop
loop
or
ljmp
sub
sub
les
mov
jno
pop
or
aaa
arpl
in
xchg
pop
int
pusha
cli
pushf
jnp
mov
push
mov
pop
in
jne
lahf
mov
or
jle
ds
cwtl
test
test
sub
xchg
pop
or
addr16
testl
dec
add
xor
xchg
pop
push
aad
popa
sub
sti
idiv
fists
cmpsl
mov
adc
inc
add
sub
mov
and
mov
push
inc
addb
sbb
js
xchg
and
inc
mov
test
sub
cmp
xchg
xchg
mov
lods
lods
push
sub
fdivs
sti
xchg
xor
xlat
jae
popf
dec
popf
jbe
adc
lret
ret
xlat
mov
xor
dec
rorb
lahf
jp
adc
enter
cld
daa
mov
cmp
pop
enter
nop
pop
dec
mov
cmpsl
mov
movsl
lret
adc
scas
loopne
adc
add
adc
mov
stos
movb
jle
push
pop
pop
imul
inc
into
movsl
nop
mov
add
std
gs
ja
rcrl
push
pop
add
sub
push
daa
pop
mov
movsb
mov
cmpsb
jecxz
ss
mov
out
mov
dec
iret
inc
and
or
pop
and
inc
cli
lea
cltd
cmp
jmp
inc
sbb
mov
pop
in
mov
shlb
dec
int
pop
jmp
mov
clc
aaa
or
frstor
rorl
inc
out
pop
mull
gs
pop
incb
mov
sub
jae
xor
sbb
and
icebp
pop
inc
sti
dec
shl
fdivs
mov
xor
add
jmp
push
jle
or
xor
mov
push
cli
xor
inc
imul
rorb
mov
mov
fdivrl
aad
pop
push
fistpl
pushf
pop
aas
inc
addr16
jmp
enter
in
push
fbstp
dec
jge
mov
jbe
ljmp
aaa
mov
adc
xor
cmc
jne
lds
or
ljmp
insb
rcrb
xor
dec
push
ljmp
and
mov
add
cmp
inc
pop
cwtl
lret
cli
sub
inc
nop
jne
inc
in
push
insb
push
sahf
cmpsb
and
push
xor
stos
je
outsl
cmp
xchg
arpl
push
pop
outsb
dec
not
dec
and
xchg
iret
cmp
bound
inc
push
sarl
xor
push
adc
pop
jnp
aas
jnp
out
sbbb
push
inc
js
inc
adcb
pusha
or
js
xchg
lret
lcall
leave
cmpsb
xchg
rorb
paddusw
dec
xchg
cmpsb
cmc
add
ja
jg
bound
std
push
lea
mov
cmp
jle
mov
rorl
cmp
fs
pop
or
push
mov
roll
repnz
int3
test
push
repnz
cmp
sbb
rorl
adc
push
cmpsb
clc
lods
cmc
inc
sbb
loop
jns
popa
in
mov
mov
repnz
fsubrp
push
xchg
and
sahf
cwtl
ds
push
aas
hlt
xor
mov
into
and
add
xchg
xor
jbe
rolb
fcoml
adc
pop
sbb
call
adc
or
adc
insb
sbb
jl
jecxz
inc
mov
pop
stos
stos
sti
loop
pop
sahf
es
sbb
pop
cmp
mov
sub
or
fisubl
ret
icebp
mov
loopne
gs
and
js
and
mov
mov
lret
fs
and
mov
mov
mov
mov
jns
cwtl
jno
ss
cmp
push
or
iret
xchg
cmp
pop
loopne
jg
addl
int
inc
out
icebp
lahf
fcomps
mov
dec
mov
cmp
repz
cmpsl
or
add
mov
mov
out
xor
inc
push
xchg
ret
dec
push
and
pop
stos
mov
sti
dec
mov
mov
in
dec
jg
push
jmp
imul
and
icebp
nop
std
mov
clc
stc
je
sub
sbb
xor
push
mov
ret
mov
addr16
jp
lods
mov
popf
movsb
and
aas
inc
test
cmp
mov
add
or
stos
mov
push
sbb
andb
cli
ja
sub
mov
dec
ss
pop
and
std
bound
sub
and
adc
outsl
inc
jo
pushl
and
mov
sub
push
add
xchg
xchg
jecxz
dec
loope
mov
lds
sub
jno
repnz
loopne
push
aas
xor
fadds
mov
dec
inc
les
enter
insl
insb
xor
add
shrb
out
jecxz
push
das
loop
je
mov
and
ljmp
pusha
fcoml
out
movups
xor
add
stos
int
dec
pop
fstpt
pop
orb
dec
sbbl
imul
hlt
sbbb
in
adc
sbb
inc
push
in
mov
sbb
je
and
mov
jbe
aam
jle
ret
or
fdivs
insb
push
pop
int
iret
movsl
mov
dec
pop
cmp
andl
push
pusha
hlt
jmp
ret
pop
or
repnz
mov
mov
dec
push
jle
xchg
cltd
popa
push
orb
enter
sub
cmp
sarl
out
and
and
iret
mov
lcall
mov
adc
sarl
addb
dec
dec
pop
jae
test
cwtl
mov
aad
mov
or
dec
aam
jl
pop
and
sbb
cmpsl
push
les
pop
decb
addb
cmp
jl
push
scas
pop
xor
xchg
push
cwtl
push
sub
mov
dec
in
sub
dec
fdivr
insb
push
mov
mov
inc
addl
iret
imul
add
push
icebp
mov
xor
adc
loopne
pop
outsb
in
out
mov
inc
stos
push
jecxz
or
push
inc
enter
inc
mov
jbe
dec
or
adc
cmpsb
int
pushf
jns
adc
imul
mov
push
jo
sbb
cld
mov
clc
jg
pop
inc
sub
or
cld
jl
icebp
imul
xor
jns
sbb
repz
or
sub
fistpll
inc
mov
fwait
dec
je
and
sahf
jbe
call
out
js
pushf
pop
test
xchg
xchg
in
rcll
sub
nop
orb
out
cli
push
hlt
xchg
mov
dec
sbb
insb
fwait
lcall
aad
xchg
or
push
jbe
sbbl
adc
sbb
sahf
or
fbld
push
loope
call
xchg
enter
adc
ds
inc
pusha
sub
ret
inc
addr16
das
cwtl
test
movsl
mov
ljmp
pop
and
bound
push
mov
shr
and
ja
das
std
loop
mov
pushf
pop
add
pop
sarb
inc
in
add
mov
in
cmp
adc
inc
sbb
pop
cmp
dec
sbb
cld
mov
dec
xor
sbb
dec
mov
sti
push
in
in
mov
adc
sbbb
xor
or
test
test
rcll
aaa
pop
or
aas
xlat
bound
std
dec
outsl
imul
mov
xchg
sbb
pop
jge
xchg
clc
push
in
rorl
push
jns
testb
xchg
sub
push
dec
lods
dec
xchg
scas
mov
mov
mov
sbb
or
xchg
adc
in
mov
lret
dec
lea
adcb
adc
cld
mov
dec
mov
xor
ret
cwtl
sbb
jg
int
pop
mov
fs
jns
xlat
aaa
pop
stos
out
dec
adc
pop
push
int
cmp
inc
cli
daa
in
call
cmp
mov
push
test
pusha
outsl
sbb
mov
jle
loopne
int3
dec
sub
fcompl
icebp
stos
dec
into
sub
push
xor
xchg
shl
rcll
pop
dec
push
adc
pusha
stos
shrb
sbb
rol
add
addr16
mov
data16
mov
testl
xchg
lret
icebp
cmpsb
lds
xor
subl
popf
imul
fdivs
hlt
mov
fld
or
leave
daa
int3
mov
sbb
filds
mov
dec
mov
push
sbb
adc
in
inc
jp
jp
aam
cld
jo
xor
andl
arpl
or
fwait
clc
test
sbb
into
mov
jns
mov
mov
pop
adc
mov
sbb
les
fs
mov
or
clc
cli
fnstenv
shll
mov
xor
shrl
push
lahf
cmp
ret
out
rclb
mov
xor
xchg
cmp
psllq
jg
adc
ret
or
mov
lods
jp,pt
fdivrl
pop
dec
xchg
bound
mov
outsl
cmp
dec
xor
out
adc
pushf
enter
enter
pop
sub
imul
call
iret
loope
ret
push
fnstsw
xchg
das
aas
pop
pop
push
sub
scas
inc
cld
test
dec
xor
mov
bound
clc
push
lock
jns
mov
fcmove
and
dec
jbe
incb
or
loopne
mov
cld
es
int
and
add
and
xor
xor
sub
cmp
add
idivl
loop
lahf
stc
xchg
sub
jno
cmp
in
jle
aas
punpckldq
scas
lret
lret
fistps
mov
out
jmp
stos
add
imul
enter
fsubp
in
icebp
push
cltd
lcall
stc
ret
test
cltd
sbb
movb
pop
inc
or
sub
mov
adcl
je
inc
jp
vmread
daa
fmuls
sub
add
out
out
inc
and
dec
imul
in
jmp
fiadds
sahf
and
dec
rcrl
cmpsl
push
jl
test
cmpsl
out
pmulhw
fldl
push
dec
pushl
sub
and
inc
jmp
xor
xor
inc
in
add
mov
sahf
scas
dec
and
pop
fisttps
dec
push
int3
dec
inc
enter
ds
lret
pop
dec
les
xlat
dec
icebp
push
in
call
push
hlt
lds
cmp
cmp
jnp
dec
pop
push
aad
xchg
adc
and
addb
push
jb
data16
cmp
mov
shl
ja
push
xor
mov
jno
mov
and
inc
dec
into
pop
inc
aas
mov
rcrl
mov
imul
lret
mov
inc
and
pop
xchg
mov
add
fstpl
daa
jl
push
add
mulb
cli
adc
ret
jae
push
or
fldt
mov
sbb
cmp
xchg
int3
adcb
xor
ds
or
sub
shld
lock
cs
mov
mov
ficomps
push
mov
xor
and
cmpsb
popa
inc
mov
xor
in
xchg
mov
scas
cmp
lods
sub
adcb
push
fistpl
rolb
sarl
stos
jns
jo
scas
cli
adc
jne
push
mov
push
sbb
cmp
push
repnz
push
inc
push
jmp
add
ljmp
push
jmp
fdivrl
or
les
popa
outsb
xor
ret
jp
js
sub
and
mov
std
addl
stos
sub
push
adc
ficoms
inc
ja
pop
jp
sub
xlat
repnz
lret
and
cltd
or
inc
jmp
mov
cld
xchg
and
cmp
negl
ja
mov
int3
bound
es
unpcklps
loop
sbb
lcall
inc
repnz
js
dec
xchg
sbb
hlt
xchg
xor
ret
add
test
jecxz
fcmovb
aam
mov
add
cmp
jo
mov
lods
xchg
mov
inc
jne
pop
pushf
sbb
mov
bound
mov
mov
push
mov
outsb
and
popf
scas
add
jge
pop
mov
divb
mov
shll
push
add
add
mov
mov
jbe
in
inc
sub
mov
or
cli
rol
push
fcom
jbe
lods
pop
out
mov
mov
adc
lret
or
outsb
fdivp
fisubl
or
cwtl
cmp
movsl
popf
mov
sbb
dec
scas
cmp
shlb
loopne
and
cld
testb
das
jmp
shrl
push
test
sub
push
movsb
lds
xor
rclb
inc
movsl
es
andb
or
rcr
dec
push
dec
std
popf
or
iret
adc
aad
xchg
fcomi
dec
mov
rcr
mov
arpl
or
cmc
xchg
ljmp
cmp
pop
jle
add
outsl
push
and
cmpsb
jg
mov
sub
inc
xor
pop
mov
stos
enter
daa
pop
fmulp
mov
xchg
sbb
jnp
mov
pop
sbb
pop
andl
mov
popf
mov
sub
mov
es
loope
cli
and
outsb
outsb
in
mov
push
movsl
imul
push
pop
push
divb
push
js
jnp
push
in
lret
fistpll
cmp
push
mov
mov
adc
push
cmp
pop
sub
mov
arpl
rcll
push
decl
imul
pusha
mov
sbb
or
loopne
lret
out
pop
call
hlt
pushf
or
in
test
and
daa
test
sub
movsl
xchg
push
jmp
fidivl
jb
mov
push
popf
cmp
shl
jae
adc
xor
fisttpl
xchg
add
mov
out
insb
push
mov
in
xchg
xor
shrl
outsl
add
pop
mov
out
je
adc
ret
sarl
hlt
lahf
sub
test
sbb
sub
lcall
cmp
lahf
sub
sub
test
dec
test
xor
popa
fwait
push
mul
insl
in
or
jecxz
sub
dec
pushf
fdivr
pop
jmp
sub
test
lahf
push
xor
rcrl
cmp
mov
push
pop
jne
sbb
adc
xor
push
clc
xchg
aas
rclb
hlt
push
add
out
repz
xor
clc
popf
sbb
jle
dec
jae
adc
test
movsl
inc
adc
in
pop
ljmp
imul
pop
hlt
xor
shll
out
and
sub
push
add
jnp
scas
scas
jno
pop
stc
adc
loop
cmp
xor
xlat
stc
cmp
push
xor
cli
lds
jae
popa
cli
mov
push
mov
sbb
cwtl
fstpt
cmp
add
ja
gs
clc
push
or
mov
cmp
adc
mov
sub
sbb
mov
xor
stos
mov
sbb
jno
push
mov
lret
pop
xchg
clc
hlt
cli
mov
ja
adc
imul
adc
or
mov
cmpsl
mov
jb
mov
push
adc
add
addr16
push
xchg
pop
mov
and
test
xor
shlb
jg
sbb
pop
lahf
stos
cmc
add
xor
inc
icebp
dec
and
jge
shlb
add
xorb
push
jno
ss
adc
cmp
lods
push
push
push
add
push
or
pop
aas
cmc
or
ss
iret
and
scas
sbb
lcall
mov
cs
mov
cwtl
lea
cmp
mov
adc
xchg
and
lret
inc
mov
adc
sub
push
clc
mov
dec
sti
das
btrl
sahf
movsl
arpl
lcall
xchg
sbb
xor
in
cmp
sub
xor
test
adc
cmp
inc
xlat
mov
dec
mov
mov
int3
cmp
out
inc
mov
not
xchg
lods
out
add
cmp
dec
adc
and
paddusb
into
jne
or
mov
lods
stc
lahf
ja
jl
sub
mov
dec
inc
fucomp
lock
sub
xor
jle
mov
mov
std
push
cli
sub
pop
cmp
sbb
mov
xchg
add
cwtl
push
pop
movsb
push
and
push
je
and
adc
pop
xor
lds
ss
call
mov
pop
push
jp
sbb
jg
inc
push
mov
movsl
scas
lock
mov
jb
test
scas
cld
loopne
inc
out
jne
push
lock
hlt
test
rep
sub
jnp
cmp
loopne
cmp
sub
push
out
xor
add
lret
fnstcw
jno
ljmp
dec
adc
lret
outsl
pop
sub
dec
fidivrs
call
sbb
inc
cli
loop
movsl
shlb
roll
inc
loopne
adc
xchg
sbb
inc
fsubs
inc
addr16
cmpl
push
in
mov
pop
in
sahf
dec
es
add
loopne
fistpl
fdivrl
cmp
and
out
in
dec
adc
push
or
mov
lock
stos
xchg
and
mov
xor
adcl
popf
sbb
cmp
cmp
sub
mov
jae
or
insb
das
adc
shld
cmpsl
sarb
rcrb
stos
rolb
push
jp
xchg
add
aas
scas
inc
adc
push
mov
inc
shr
and
adc
mov
stc
cwtl
xor
jge
xchg
and
jmp
fsubs
push
into
adc
movsl
out
cmp
sti
cmc
inc
cmp
sti
fadd
or
xor
push
sub
outsb
cld
dec
inc
inc
push
add
dec
push
push
ds
pushf
int3
repnz
es
cmpsb
inc
xor
add
ficompl
fcoms
pop
pop
mov
and
mov
mov
push
cmp
mov
sbb
rorl
jl
or
push
fdivrs
hlt
sbb
and
adc
mov
inc
in
fdiv
add
test
jnp
outsb
mov
xor
outsl
pop
push
dec
push
icebp
xchg
in
aad
push
and
adc
add
sub
outsb
cli
test
std
movsl
aas
bound
push
pushf
dec
or
push
push
aas
jno
setle
xlat
loope
jb
jo
inc
ficoml
fimull
xchg
xchg
mov
push
rcrb
clc
sbb
push
pop
inc
cmpl
jne
and
add
cltd
cld
pop
js
mov
dec
test
mov
out
or
dec
inc
insl
repnz
pop
rol
fnstcw
fisubs
rolb
add
js
adc
add
cwtl
inc
mov
sbb
loopne
cmpsl
in
shr
pop
or
xor
fsubrp
push
fwait
mov
add
pop
movb
sbb
push
fnstcw
dec
divb
les
xor
push
fwait
push
mov
fsubrs
or
nop
stos
mov
xor
cltd
sbb
gs
sbb
fdivs
add
inc
xchg
sbb
mov
adc
jae
and
jo
movsb
and
fwait
daa
lea
xor
xchg
push
fbstp
or
cmpsl
inc
imul
add
lret
pop
lea
lret
cwtl
adc
sub
sub
dec
add
movsb
subl
jnp
nop
out
or
lods
xor
popa
jne
and
fidivl
pop
mov
gs
xorb
aam
repnz
dec
lcall
adc
stos
jne
les
xchg
addl
loopne
fmull
dec
incl
mov
or
dec
aad
subl
sub
xchg
mov
sbb
mov
stos
pop
aad
push
out
push
jnp
cmp
xor
jge
mov
ret
sub
and
test
ret
mov
dec
or
in
inc
hlt
loopne
adc
push
xchg
fs
push
push
add
inc
or
aad
lcall
xchg
out
and
xchg
mov
push
mov
mov
dec
inc
mov
jne
add
pop
int
popa
mov
pop
cwtl
out
push
jg
and
insl
loope
xlat
mov
nop
jg
loopne
pop
pop
leave
iret
sbbl
pop
aas
repnz
outsl
into
xchg
xor
sbb
mov
xchg
imul
or
add
iret
movsl
scas
pop
xor
xor
jmp
movsl
pop
lret
jbe
jecxz
push
xchg
jo
enter
scas
cmp
cmpsl
push
cmpsl
and
lea
out
adc
dec
fdivl
int
aaa
iret
outsl
arpl
ja
dec
sub
jmp
xchg
inc
add
push
sbb
jne
xchg
icebp
add
sub
ret
cltd
test
fdivl
cld
push
iret
sahf
in
fcompl
inc
xor
sub
cmpsl
or
push
adc
cs
nop
adc
jo
mov
inc
mov
outsb
ljmp
out
movsb
sbb
imul
orb
fnstsw
cmp
dec
cmpsl
cmp
mov
dec
cmp
inc
mov
dec
mov
rol
jno
push
and
jle
mov
xchg
dec
push
movsb
mov
gs
cmp
adcl
in
ficomps
test
in
inc
aam
inc
cmp
testb
loop
leave
dec
cmp
push
xor
xor
xchg
or
imul
push
cmp
xchg
add
sbb
rorb
mov
repz
out
jns
data16
ret
popa
movsl
sub
hlt
or
xchg
fdivrs
jp
pop
imul
fistps
test
outsl
movsb
jno
lds
mov
mov
loope
repz
inc
jl
mov
mov
aaa
jae
xor
fcoms
fcomi
cltd
xchg
popf
add
mov
jg
xchg
leave
decl
movsb
sub
mov
loopne
fs
jmp
fsubs
jg
jne
mul
imul
add
mov
popa
mov
inc
ja
and
movsb
test
and
outsb
outsb
mov
sbb
mov
leave
xchg
add
aad
lret
push
addr16
sbb
ds
mov
jae
aad
call
scas
hlt
sub
adc
aam
lret
cld
ss
mov
jge
xchg
and
lcall
and
mov
mov
lods
xlat
add
es
push
jecxz
sub
call
xchg
inc
pop
jno
sahf
fisubs
shll
pop
test
pop
mov
xchg
inc
cmpsl
icebp
xlat
pushf
sbb
les
in
jnp
div
movsb
outsl
lods
jp
mov
negl
addr16
jb
sub
sub
imul
mov
mov
imul
fdivl
mov
cmpsl
and
pop
and
rclb
loope
scas
xchg
push
mov
mov
or
jno
in
inc
pop
gs
arpl
sarl
addr16
xor
push
xchg
stos
ret
out
jg
and
push
mov
or
imul
sub
imul
testb
jbe
jo
cmpsb
or
stos
pop
nop
push
and
push
dec
xchg
pushf
inc
in
rolb
cmp
int3
stos
into
xchg
or
jb
sbb
fdivrp
insl
mov
xlat
xor
adc
jmp
pusha
fnsave
dec
dec
scas
fstl
push
std
jmp
pop
pop
push
mov
in
push
add
push
lret
mov
mov
jne
jbe
ja
xlat
push
and
add
ds
mov
fwait
loop
or
pop
mov
sbb
loop
subb
push
fidivl
ret
push
mov
int
lods
in
or
and
aad
out
out
icebp
les
push
mov
mov
in
cli
and
xchg
pop
iret
leave
pop
pop
mov
sub
nop
test
xorl
adc
loopne
push
fst
jecxz
dec
jae
mov
cltd
ficoml
cld
jmp
push
int
adc
pop
mov
jns
push
push
mov
in
mov
pop
sbb
and
xchg
cmpsb
loop
mov
dec
dec
push
aad
cmp
push
fmuls
push
pop
das
out
in
dec
xor
cld
sahf
adc
int3
xchg
out
flds
adc
ja
ret
negl
into
daa
mov
mov
add
daa
xor
or
pop
les
imul
aad
or
mov
mov
sub
sahf
and
mov
aaa
cs
xor
push
loop
pushf
roll
std
pop
cmpsl
enter
sbb
pop
mov
xchg
jp
rclb
jae
insb
pop
cwtl
sbb
outsl
or
mov
mov
mov
mov
cli
movsb
mov
mov
rcrb
push
pop
xchg
adc
cmp
push
sbb
jo
orb
lods
in
gs
lods
dec
mov
mov
or
mov
fisubl
je
and
sbb
in
ret
mov
xchg
pop
movsl
mov
out
scas
mov
lea
fbstp
mov
mov
mov
dec
lret
bound
pop
das
cmpsl
aam
dec
enter
or
mov
dec
jnp
test
sub
es
aas
adc
lock
sub
out
push
movsb
nop
imul
test
out
mov
jmp
dec
shlb
aam
fisttps
sahf
xor
aaa
mov
pop
jb
and
mov
mov
mov
add
cmpxchg
mov
mov
call
stc
movsb
lcall
pop
jge
arpl
nop
push
sub
dec
xchg
and
std
sub
jmp
imul
int
stos
out
fcmove
xchg
lret
lock
mov
jno
inc
cmp
add
and
mov
addr16
outsl
ficompl
mov
daa
lret
cmp
stos
adc
cltd
xor
cs
fs
loop
inc
dec
mov
leave
adc
and
jmp
fmuls
dec
xor
daa
bound
mov
mov
push
cmpl
xlat
inc
icebp
testl
lds
jb
out
mov
in
mov
dec
icebp
jno
out
fiadds
xor
idivb
pop
popf
aas
movsb
std
lret
loopne
pusha
cmp
mov
call
mov
mov
push
rcrb
mov
mov
mov
pop
cmp
mov
cmc
aam
xchg
popf
add
add
sbb
insb
js
or
loope
add
in
leave
add
test
mov
stos
cli
xchg
adcb
std
jno
jno
adc
cwtl
cmp
dec
mov
jmp
push
outsb
sub
pusha
sbb
aaa
movsb
lea
dec
fcoml
addl
push
sbb
test
mov
fnstsw
or
jns
mov
mov
repz
je
sbb
imul
cmc
lea
add
outsb
push
repz
jns
adc
pop
push
icebp
lcall
add
adc
sbb
daa
in
cmp
cmp
mov
dec
lret
or
nop
inc
ss
xchg
and
jecxz
fsubs
pop
pop
jg
test
inc
movsb
push
mov
clc
xchg
nop
sub
pop
dec
fisubrs
js
jno
push
imul
mov
jg
lea
out
push
rorb
out
movsb
ret
or
loope
push
jne
ljmp
add
cmp
popa
hlt
adc
hlt
cltd
mov
lret
fnsave
mov
or
sub
mov
jo
rorb
jge
pop
xor
lods
mov
sbb
sti
arpl
lods
out
lcall
out
rorb
or
mov
clc
adc
arpl
test
sub
sbb
mov
cwtl
pop
push
daa
test
shrl
sbb
stc
xchg
and
or
into
or
shlb
iret
push
enter
lea
push
test
xor
repz
andl
aam
pop
rcll
jne
and
ljmp
mov
jge
jo
cltd
iret
mov
inc
push
imul
sub
jno
shll
ja
mov
cmc
sub
dec
fwait
movb
out
out
outsl
push
leave
ret
xchg
adc
mov
shll
mov
add
in
loopne
xchg
sbb
sub
push
cmp
mov
jl
xchg
movsb
push
fimuls
cmp
mov
jns
jl
inc
dec
rcrb
cmpsl
mov
and
rcll
js
inc
ret
imul
mov
and
jecxz
add
push
pop
and
test
adc
gs
popf
aas
inc
rclb
xor
test
xchg
in
pop
and
and
xor
aas
in
inc
sti
mov
mov
and
pop
pushf
add
sbb
aaa
add
cs
adc
movsl
push
dec
and
addb
jns
push
mov
adc
cmp
jbe
arpl
rcr
jne
jl,pn
jb
lds
lock
pusha
fisubrl
adc
add
pop
pop
pop
in
pop
xchg
sub
imul
sbb
lods
sub
mov
xchg
std
imul
mov
pop
or
in
mov
push
aas
jge
push
dec
dec
sub
pop
or
cli
test
or
lock
add
sbb
cld
jmp
cmp
dec
xchg
stos
adc
mov
pop
movsl
jp
xor
sysenter
rclb
outsl
rorl
pop
jle
mov
and
or
imull
cmp
add
idivb
push
in
ffree
mov
and
aad
jmp
dec
sbb
and
sbb
scas
and
mov
push
inc
shlb
fisttps
outsb
push
add
mov
and
mov
and
int
out
dec
jne
arpl
lcall
pop
scas
inc
mov
cltd
subl
cmpsb
out
xchg
roll
mov
leave
sarb
outsb
cmpsb
es
add
cmp
stos
sbb
mov
lret
mov
cmp
scas
dec
js
push
dec
sbb
pop
dec
xor
das
enter
int3
mov
add
arpl
lds
push
inc
sarb
jmp
hlt
les
inc
sub
jg
lods
iret
sbb
xchg
jno
push
adc
add
sbb
pop
push
dec
out
addr16
mov
xor
aaa
movsl
in
iret
jmp
jne
imul
imul
mov
sub
push
cmp
or
mov
jb
cltd
adc
popa
nop
in
test
cmpsl
and
lods
popa
lcall
adc
or
and
jnp
adc
nop/reserved
fnstenv
push
loopne
in
pop
ret
xlat
rorb
hlt
fcoml
int
fwait
inc
cmp
lcall
mov
movsb
out
pusha
jge,pt
xor
ja
or
push
sbb
push
xor
push
fwait
sti
pusha
pop
in
loopne
add
add
in
jno
pop
jno
into
dec
jle
out
push
ss
stos
or
rcr
jle
xchg
cmpb
dec
or
push
or
ljmp
movaps
pusha
es
cmp
pop
out
cmpl
movsl
test
jno
jge
in
clc
mov
mov
mov
loope
dec
sbb
icebp
jmp
das
fwait
in
shlb
sub
push
jb
mov
fs
sub
gs
mov
sar
pop
mov
push
out
mov
negb
jbe
ljmp
add
push
sbb
test
sub
jbe
jg
stos
and
dec
sahf
lahf
enter
lds
ret
sbb
mov
vhsubpd
movsl
cmp
shlb
idiv
enter
and
or
sar
xchg
cmpsl
mov
into
repz
imul
bound
mov
inc
stos
insb
inc
loope
mov
leave
and
out
adc
in
pop
insl
push
imul
js
out
fnstsw
cmpsl
push
rcl
or
push
pop
sbb
lret
hlt
lds
mov
aas
or
fsts
icebp
in
fisttps
mov
cld
mov
jne
call
fidivrl
aad
loopne
add
mov
cmp
outsb
push
fwait
mov
cmp
fcomp
popf
adc
ret
ror
out
jmp
movsl
cmpb
in
imulb
sbb
mov
out
in
test
mov
lods
insl
xchg
sbbb
cli
mov
mov
mov
and
pop
mov
stos
jl
cmp
or
les
mov
int3
cmpb
movsl
lcall
xlat
sarb
addr16
in
in
xchg
repnz
sbb
dec
add
stos
outsb
fwait
js
out
mov
xchg
mov
das
repnz
pushf
loop
js
mov
ffree
jl
push
xchg
mov
mov
adcl
insl
flds
fmuls
std
jl
xchg
sbbl
arpl
loopne
sub
inc
int
in
mov
adc
mov
add
gs
imul
je
test
cmp
mov
cmp
dec
cmp
mov
mov
push
jl
gs
lods
mov
lds
mov
and
aas
sti
inc
adc
insl
std
xor
sbb
arpl
sti
cmp
mov
cmp
or
ds
lcall
rorb
fs
loopne
mov
pop
xor
jb
lahf
xlat
inc
dec
xchg
fdivrs
push
inc
pop
mov
add
insb
int
sbb
in
loop
les
inc
sti
inc
hlt
mov
movsl
int
and
out
cld
dec
xchg
popf
test
push
out
mov
ljmp
jecxz
sub
adc
pop
dec
pop
mov
iret
adc
shlb
mov
mov
adc
notl
xchg
pop
in
std
inc
out
out
dec
dec
xchg
xchg
out
push
push
or
push
lcall
in
subb
mov
std
scas
xchg
mov
shl
decb
sbb
cli
dec
jne
fwait
pusha
or
rolb
sub
push
fldt
gs
lock
insl
insb
inc
add
nop
xchg
pop
lock
inc
mov
cmp
jp
adc
int3
and
cmpsl
jo
mov
pop
push
cmp
push
mov
pop
sarl
cmp
or
jmp
sub
cmp
xchg
push
fiadds
xchg
out
sbb
mov
mov
ret
cmp
bound
idivb
nop
cmc
and
popf
fisttpl
out
mov
sbb
mov
fwait
jg
sub
xor
lods
mov
dec
mov
je
out
insb
dec
jne
dec
lods
cmpb
push
cmp
popf
add
mov
dec
pushf
mov
rcr
repnz
mov
push
testl
pop
mov
movsb
aam
mov
test
push
arpl
jle
lea
daa
ja
mov
pop
sbb
xor
icebp
mov
dec
ror
sub
mov
fsts
push
jnp
xor
icebp
jecxz
daa
in
jge
mov
cmp
xlat
sub
jne
xchg
sbb
pop
scas
jns
pop
test
rcll
ret
call
inc
fsubl
addb
mov
jg
pop
sbb
pop
or
adc
jno
fstl
icebp
and
ret
dec
mov
stos
jle
pop
mov
enter
adc
enter
pushf
dec
outsb
decb
inc
or
aam
mov
inc
mov
lahf
mov
roll
jge
stc
cmp
jbe
sub
sti
cmp
sbb
mov
ljmp
cltd
mov
fimuls
test
cld
cmp
jnp
pop
lds
es
loope
insb
dec
push
jbe
xchg
aam
inc
mov
xor
dec
push
mov
xchg
icebp
adc
idivl
aad
imul
add
sti
jae
fldt
mov
cwtl
lock
pop
sub
in
test
sar
lods
mov
push
ja
adc
movsl
inc
push
movsl
pop
cld
mov
gs
repnz
mov
ljmp
push
test
cmp
pop
sbb
sbb
bound
ret
sbb
stc
xchg
xor
adc
cmp
int
cltd
dec
decb
out
call
sti
dec
fcmovnbe
cmp
outsl
push
xchg
popf
in
push
bound
shufps
mov
bound
movsl
test
sbb
add
xchg
dec
push
xchg
pop
ja
orl
shrb
jae
push
gs
cmp
xchg
add
cmpsb
and
incb
or
pusha
dec
out
push
mov
and
fadds
roll
int
scas
repnz
dec
jbe
mov
jmp
add
or
inc
lds
or
inc
lds
mov
pop
pop
stc
mov
cli
jns
shlb
mov
cmp
pop
enter
dec
aam
cmp
scas
and
dec
cmp
mov
sub
es
test
loop
test
and
sarb
cmpsb
dec
mov
sbb
push
fidivrl
push
clc
add
cmp
shlb
push
mov
xchg
adc
mov
or
ljmp
dec
or
fdivrs
mov
mov
sub
xchg
mov
jmp
cmp
adc
ja
rorb
sbb
mov
out
pop
fildl
pop
fbstp
repz
adc
pushf
or
adc
xor
add
scas
push
pop
aam
cmpsb
push
xchg
movsl
lret
xor
sti
lcall
xlat
mov
loope
mov
outsl
mov
stos
jnp
sbb
ja
movsb
cltd
or
push
push
dec
adc
cli
sahf
sbb
cmp
push
inc
jns
mov
xchg
fldt
cmp
test
lret
pop
xchg
ljmp
jns
dec
shlb
or
inc
xchg
lret
add
push
and
sti
cld
lcallw
jno
imul
lahf
flds
cmp
inc
cmp
xorl
mov
shll
and
lock
adc
mov
jae
setno
mov
xchg
addr16
xor
inc
mov
dec
and
add
data16
sbb
into
outsb
adc
outsl
and
test
out
subb
inc
loop
sbb
jl
push
mov
xor
and
sbb
xor
jbe
jns
mov
fnop
xchg
mov
out
lret
mov
call
in
call
cli
scas
rorb
mov
xor
adc
dec
add
push
movsl
lret
insb
push
std
aad
xor
fbld
mov
rcll
into
adc
daa
cmp
and
sbb
lahf
clc
out
pop
jbe
or
adc
notl
and
xchg
maskmovq
mull
add
in
xchg
and
cli
adc
and
rol
jp
mov
and
leave
push
in
adc
push
loope
popa
jecxz
shrb
mov
xchg
lahf
push
cmp
mov
adc
sti
je
cmpb
mov
fwait
adc
jg
inc
lods
xchg
inc
sub
lret
mov
xchg
dec
mov
ds
mov
test
mov
sti
mov
rcrl
cli
xor
ret
fldl
push
mov
imul
xor
xchg
push
mov
in
das
sbb
fcmove
xor
call
xchg
imul
ret
add
loopne
jbe
mov
iret
adc
xchg
adc
out
jge
push
jmp
fcmovnb
rcrl
push
outsb
xor
pop
mov
mov
and
in
mov
sub
mov
sub
mov
jg
das
lea
sbb
pop
dec
xchg
rolb
ljmp
faddl
inc
nop
les
jns
jmp
push
andb
sub
sub
push
add
jbe,pt
in
or
pop
jne
es
jns
call
pop
adc
outsb
into
int3
adc
cmp
push
loop
dec
mov
or
or
mov
fisttpl
scas
insl
sub
xchg
cmp
icebp
fisttpl
ficoms
pop
xchg
xlat
mov
cmp
and
sbb
jl
sbb
jp
sti
ja
add
divb
jl
push
sbb
fadds
or
or
pop
ret
sbb
push
ffreep
mov
decl
test
cmp
dec
call
iret
mov
and
pop
jle
ret
jb
pop
or
lret
mov
inc
mov
push
push
lret
push
lahf
and
mov
xlat
divl
les
or
push
ja
mov
vorps
aaa
add
adc
cmp
rclb
jno
or
sbb
aas
pop
push
xchg
fcoms
inc
pop
dec
cld
loop
icebp
sub
xchg
ljmp
pop
sbb
subb
lret
lret
divl
fwait
mov
or
mov
vpminsw
mov
ret
popf
fiadds
cltd
sub
pushl
out
idiv
repnz
mov
or
dec
cmp
pop
dec
push
add
jo
lods
sub
idiv
mov
jne
popa
out
aad
inc
nop
mov
add
out
mov
jae
adc
xor
into
push
mov
add
stos
mov
test
sbb
fisttpll
adc
jg
pop
ds
fiadds
pop
sub
movsb
scas
ret
fadd
insl
inc
xchg
mov
imul
add
les
xor
stos
iret
sbb
lods
fsts
gs
repz
mov
inc
mov
inc
imul
out
or
bound
jns
add
ss
jp
negb
imul
popf
mov
adc
mov
mov
inc
outsl
jb
aam
jnp
aad
aas
push
or
xlat
adcl
nop
cmp
outsb
mov
lret
cmc
mov
or
mov
or
xchg
in
push
or
jmp
scas
test
out
lods
jle
test
call
aas
cmpsl
add
clc
mov
fcomps
leave
jp
cmc
lock
repnz
dec
sub
sbb
mov
fdivl
pmulhuw
rolb
lock
adc
lods
cli
bound
mov
and
or
lock
mov
mov
lret
mull
xor
les
sbb
sti
shlb
pop
or
les
aad
mov
xor
mov
loopne
add
push
sbb
and
icebp
inc
mov
ja
cmpb
lahf
sbb
or
je
addr16
cmp
aam
inc
mov
cmp
inc
pop
fadd
inc
arpl
sbb
jmp
cmp
insb
adc
and
and
adc
mov
jo
add
pushf
xchg
lea
or
mov
loope
sbb
scas
or
adc
cmp
in
aaa
jne
push
call
cmpsb
enter
out
and
or
popf
int3
sbb
mov
dec
fcmovnb
mov
mov
ret
aaa
mov
xor
and
xchg
rorb
stos
bound
and
andb
pop
lcall
xor
mov
test
mov
jns
dec
jae
xor
mov
sbb
sub
js
stos
or
push
mov
push
mov
push
pop
icebp
shlb
push
sahf
mov
loop
loope
cwtl
and
mov
push
dec
push
push
adc
mov
out
mov
leave
loopne
fs
aaa
decb
lds
cld
hlt
or
or
ja
cwtl
sub
sbb
mov
in
mov
js
pop
int
jl
pusha
xchg
jg
push
jmp
repnz
or
add
xchg
adc
push
pop
insb
mov
add
into
fsubrs
mov
in
jbe
sub
iret
sbb
sub
lret
push
xchg
shll
pop
mov
dec
icebp
fldl
fnstenv
sti
mov
sub
daa
call
add
push
scas
add
mov
sbb
loop
or
jne
add
pop
insb
lods
ss
and
movsl
jg
pop
sahf
mov
cmp
gs
push
je
test
push
sti
clc
cmpsl
cli
int3
xchg
loopne
loope
in
and
aad
push
push
je
dec
xchg
push
iret
xorb
pop
sub
in
fnstenv
lock
in
jb
cmp
sbb
cli
dec
xor
mov
loope
fsubs
gs
arpl
inc
mov
cmpsb
aam
xchg
cmp
and
les
clc
xlat
fbld
popf
gs
jnp
pop
mov
mov
fisubs
jl
pusha
movsb
sub
lret
cmp
jle
mov
push
mov
loope
addr16
stos
or
cmp
roll
xor
mov
cld
cmp
stc
aam
enter
rolb
add
mov
push
sbb
stc
jp
inc
dec
sbb
incb
xchg
inc
popa
adc
loopne
loopne
jb
lahf
pop
xorb
xchg
or
jbe
sahf
xchg
adcl
mov
pop
push
or
ljmp
jo
adcl
xor
mov
or
and
fimuls
inc
and
outsb
push
stc
jecxz
and
sub
dec
mov
push
lock
cmp
xchg
int3
and
stos
ljmp
int3
mov
xchg
fldenv
xlat
inc
lods
xchg
into
and
pop
test
popa
lret
ja
pop
or
pop
sub
lds
pop
cmp
and
add
mov
mov
mov
and
push
pop
jo
jno
stos
lods
xchg
mov
jecxz
jl
xor
pop
mov
and
sbb
lcall
mov
cmpsl
loop
jmp
jge
jmp
mov
jecxz
adc
push
push
or
ss
adc
out
ljmp
add
push
jge
xchg
incl
mov
mov
gs
arpl
dec
push
jmp
shlb
xchg
notl
or
test
xchg
lds
aas
xchg
pop
and
cmp
mov
bound
add
lock
jo
jmp
add
outsl
and
pusha
and
sbbl
cmp
fwait
ds
clc
pusha
ja
or
ret
popf
pop
xchg
adc
sub
push
mov
insb
xor
iret
outsl
add
arpl
jae
bound
out
inc
cltd
stc
rcrb
aam
mov
shl
and
push
bound
outsl
jle
push
xchg
cmp
add
jg
pop
inc
or
fisttpll
lock
sbb
xor
or
shrl
aam
pop
stos
xchg
adc
jbe
pop
arpl
aad
xchg
lock
add
clc
arpl
movsl
inc
cs
push
fldl
sbb
and
lret
or
cltd
mov
adc
fcompl
popa
rolb
cmp
cmpl
test
daa
mov
mov
data16
call
out
jnp
cmp
mov
aas
rcrl
mov
mov
repz
aaa
bound
sarb
adc
mov
sub
gs
sbb
stos
pushf
jmp
testb
gs
stc
add
fwait
and
inc
hlt
jp
cwtl
lcall
xchg
stos
jmp
adc
fiadds
aas
rcll
scas
aaa
jecxz
mov
mov
xchg
adc
push
mov
insb
cmpsb
mov
pop
inc
sbb
push
out
or
jg
jg
mov
jmp
shrb
mov
test
sti
mov
out
pop
clc
and
inc
xchg
lods
pusha
cmpsb
cwtl
or
loope
cld
sub
pop
fiaddl
sub
mov
mov
dec
mov
mov
out
dec
cmc
pop
idivb
sub
and
mov
jnp
lcall
ret
mov
leave
loop
bound
inc
test
and
inc
push
jno
test
in
dec
add
inc
enter
adc
mov
cmp
fisttpll
insb
adc
jle
jge
adc
nop
or
aaa
dec
sub
jne
sbb
sub
push
repz
rolb
inc
or
mov
xchg
popf
dec
scas
aam
jecxz
add
pop
cwtl
xlat
sub
insl
jnp
fnstcw
fs
pop
sub
int3
sub
mov
sahf
out
and
or
lods
aaa
pushf
push
cwtd
mov
cld
dec
sbb
jne
int
xorb
insb
mov
xchg
popf
inc
scas
xchg
add
in
add
push
dec
lods
and
sti
push
ds
inc
es
mov
je
fwait
and
fistpll
cmp
lock
push
push
repnz
pushf
lahf
clc
sbb
ret
ja
pop
jo
gs
shlb
push
push
add
shrl
dec
and
cli
jb
int3
push
adc
cmp
popf
mull
popf
in
hlt
xchg
test
clc
cli
inc
pop
mov
out
pushf
push
sbb
xor
xor
add
xor
rcrl
and
lcall
lret
jge
cmc
jnp
idiv
xor
fbstp
push
iret
push
push
popa
out
dec
int3
mov
mov
ret
addr16
outsl
ja
dec
leave
addr16
outsl
pop
add
push
fcmovnu
mov
in
js
outsb
mov
aaa
xor
push
lret
repnz
js
outsb
xchg
dec
sti
movsl
add
fiadds
lea
lret
scas
push
ret
dec
test
inc
fmuls
or
hlt
adc
or
rorb
int3
mov
mov
pop
pop
mov
lds
add
add
add
add
sub
add
cwtl
add
adcb
add
fadds
add
add
add
add
add
dec
add
addb
add
jo
add
add
add
add
add
pusha
add
add
or
call
add
add
add
mov
add
sub
or
sub
add
mov
add
addb
add
add
add
enter
add
or
and
add
add
add
lock
addb
add
add
add
or
add
in
or
add
add
add
and
add
add
add
mov
dec
es
jae
loop
xchg
mov
sbb
and
mov
push
xor
inc
js
push
icebp
sub
mov
xchg
fiadds
in
stos
push
push
mov
cmp
les
and
pop
leave
hlt
adc
push
add
outsb
xchg
repnz
dec
lock
and
push
lret
mov
dec
pop
aam
sbb
stos
xor
out
outsl
mov
scas
adc
lods
sub
cmp
movsl
pop
fsubs
and
leave
js
movsb
movsb
loop
pop
sbb
cmp
aad
out
inc
mov
pop
aaa
cmp
add
es
pushf
std
or
in
negb
sbb
push
cmc
xor
loope
fisubrl
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
push
pop
call
fstps
cmp
add
enter
pop
pop
mov
add
push
mov
pop
sub
jne
push
je
pop
mov
add
add
mov
sub
xor
and
push
movzwl
popl
push
pop
jmp
aam
jb
inc
jns
pop
insb
xor
mov
mov
sbb
add
mov
cmp
jne
sbb
dec
jle
repnz
inc
popa
push
movsb
pusha
jne
mov
fdivs
push
dec
pop
ds
xor
xor
add
hlt
jbe
mov
jne
pop
in
imul
mov
scas
gs
movsb
leave
xor
enter
lods
icebp
stc
sbb
scas
mov
out
je
and
jl
xchg
daa
int3
ljmp
adc
pop
xchg
arpl
jae
push
adc
das
dec
andb
in
adc
adcb
fs
arpl
ds
repnz
arpl
inc
mov
insb
in
mov
out
cmp
mov
pop
xchg
fdivl
int3
imul
pusha
outsl
jecxz
inc
and
sbb
push
mov
xchg
imulb
in
and
in
mov
pop
mov
stos
and
dec
sbb
xchg
and
dec
test
or
or
push
inc
mov
jecxz
test
nop
and
cmpsw
jg
aam
mov
sbb
das
sbb
lret
xor
push
adc
adc
dec
and
cltd
push
cmpsl
jle
push
and
outsb
mov
push
test
and
cmpl
pop
xor
pop
mov
repz
dec
outsb
and
lahf
call
sbb
lea
bnd
das
icebp
adc
insl
mov
jbe
or
stos
fs
cmp
in
lods
sub
and
dec
fsubr
inc
mov
sti
enter
mov
lret
jne
loopne
pop
inc
push
test
daa
push
aaa
add
xchg
push
or
pop
adc
push
mov
mov
fcompl
mov
inc
rol
lock
scas
insb
jmp
jae
lahf
js
and
in
jmp
sbb
mov
popf
cmp
fdivrl
fwait
sbb
decl
cmp
inc
outsl
inc
rol
fstl
clc
scas
mov
pop
adcb
cmc
jp
fucomi
mov
push
mov
inc
or
fcmove
adc
mov
clc
aam
fucomp
cwtl
icebp
cltd
lods
pop
aad
inc
shr
fs
jbe
add
add
jo
push
mov
cmp
int3
adc
push
sti
ret
pusha
sub
fdivrp
ret
ret
dec
sub
clc
ret
clc
ret
add
pop
adc
ljmp
dec
sbb
jge
adc
into
mov
cwtl
push
adc
or
icebp
fcmove
mov
pusha
xor
sub
ret
dec
inc
mov
xchg
cmp
add
fistpl
push
fs
inc
cmpsl
ret
dec
cmpsb
les
pusha
fcompl
mov
lret
ror
call
dec
pusha
fsubl
xlat
adc
push
cmpsl
xor
movsl
and
setl
jmp
or
repz
fmull
aas
inc
adc
sub
or
sbb
or
xchg
test
sbb
out
int3
push
or
or
push
or
sbb
or
xchg
enter
fmull
push
pusha
fmull
push
pusha
icebp
data16
daa
psubd
xchg
push
lret
pop
fmull
add
xor
lahf
mov
pop
aaa
push
pusha
fdivl
mov
push
push
xlat
popa
push
cmpsb
bound
xor
out
or
or
sbb
push
xor
or
mov
jmp
imul
pusha
xor
fmull
pop
neg
and
popf
push
fmull
sub
das
dec
pusha
fmul
nop
enter
pusha
insl
rcrb
insl
loopne
pop
fmull
icebp
fisubs
cmpsl
add
fmull
insb
repz
push
shll
dec
pusha
fsubrl
sub
or
pop
adc
icebp
pop
test
aad
fmuls
push
cmpsl
sbb
lock
xchg
lods
aad
push
rcll
ds
pusha
pmulhuw
adc
pusha
fdivrl
in
cs
imul
pop
cmc
jge
lahf
xchg
cmp
aad
and
pusha
adc
dec
and
jae
inc
je
ficomps
cmpsl
xor
fmull
andb
adc
jno
fwait
push
fiadds
and
push
pusha
pmulhw
push
push
pusha
fdivl
pop
adc
dec
push
pusha
fsubrl
sub
or
pop
loopne
int
test
push
out
in
or
cmpsl
leave
xor
leave
rcll
fisttpl
mov
inc
push
enter
pusha
cltd
sub
fmull
push
pusha
fcoml
push
push
cmp
push
into
xchg
lods
insl
cmp
mov
cmpsb
loope
sbb
push
into
loop
inc
adc
xchg
pop
pop
mov
cs
into
fimuls
pushf
and
into
loop
inc
adc
and
xchg
pop
pop
mov
cs
adc
add
xchg
lock
outsb
mov
outsb
repz
and
push
push
xor
inc
adc
xor
or
xchg
inc
jl
dec
pusha
fmull
push
outsb
repz
and
push
push
xor
inc
adc
dec
push
int
ret
fmull
push
outsb
repz
and
push
push
xor
push
into
loop
inc
adc
lods
jecxz
jae
mov
outsl
sbb
insb
insl
jmp
jns
lods
push
adc
push
test
fmull
push
pop
inc
add
xchg
lock
outsb
mov
outsb
repz
and
push
push
iret
insl
or
fmull
addr16
or
fdiv
lcall
dec
mov
outsl
pop
jmp
insl
mov
xlat
imul
pop
out
leave
push
push
imul
push
and
xchg
je
pop
cs
xchg
push
cmpsl
jae
push
inc
mov
out
leave
push
repnz
pop
jmp
icebp
push
jo
lea
fmull
pop
or
fmull
pop
fmull
dec
pusha
sti
or
fmul
leave
pop
sbb
fs
cmp
aad
push
cmpsl
dec
cmpsb
or
cmp
int
push
movsl
or
pusha
fsubrl
push
cmpsl
test
movsl
jmp
or
xchg
or
xor
push
int
les
stc
adc
popf
pop
fmull
pop
call
cmpsb
and
dec
std
or
sub
cmp
or
dec
jle
sti
or
jp
fbstp
imul
fldlg2
fs
into
movsl
jno
into
stos
mov
nop
ret
pop
out
sbb
mov
imul
leave
dec
je
mov
jno
ss
jmp
adc
push
and
pop
gs
or
fmull
push
pusha
fmull
push
pusha
fmull
push
pusha
fmull
push
pusha
fmull
push
pusha
fmull
push
pusha
fmull
cld
pop
faddl
cmp
or
pop
fmull
nop
pop
fmull
push
pusha
fmull
push
pusha
fsubrl
push
pusha
fmull
push
pusha
fmull
push
pusha
fmull
push
cmp
or
fmull
push
pusha
fmull
push
pusha
fmull
push
pusha
fmull
test
mov
popa
ljmp
rclb
fisttpl
aaa
sbb
or
sub
mov
movsl
and
inc
fsubs
push
push
leave
fsubl
pop
mov
and
mov
push
pop
lret
or
pop
mov
push
bound
add
jb
mov
mov
or
insl
addl
dec
int
xchg
inc
xchg
jg
mov
cmp
push
imul
add
es
push
fs
sbb
mov
ret
js
mov
les
out
sub
jae
out
std
mov
cmp
adc
cwtl
mov
rcrb
cmp
out
xorl
je
inc
push
sub
ret
daa
loope
xchg
in
das
stos
mov
xchg
cmp
xchg
aad
divb
test
cmp
shl
mov
bndldx
movsb
aam
and
cmp
scas
or
mov
dec
cmp
mov
inc
test
stc
je
pop
lret
sbb
xor
push
cwtl
js
add
pop
xchg
arpl
xor
xchg
mov
adc
bound
jns
cltd
mov
adcl
mov
inc
lock
test
pop
test
xchg
arpl
pop
xchg
lcall
adc
jecxz
pusha
adc
aaa
ljmp
add
fimull
xchg
push
mov
leave
jae
fldcw
mov
mov
mov
dec
frstor
add
lods
mov
ljmp
dec
scas
mov
cmp
or
xor
jnp
cmp
scas
aad
repnz
addr16
roll
cmp
into
inc
ret
int
lret
cmp
adc
xor
inc
pushf
hlt
adc
or
insb
lcall
loop
push
inc
jecxz
xchg
lods
roll
mov
in
adc
ficoms
fmul
jmp
ja
jmp
popf
imul
push
xchg
jbe
shlb
inc
mov
mov
leave
lods
mov
mov
std
ja
inc
lahf
push
cmp
mov
jno
test
jge
dec
inc
mov
daa
imul
lock
jmp
hlt
lods
popf
or
jl
cmp
ljmp
iret
loope
pop
mov
fldenv
mov
movswl
cmp
pop
dec
out
jmp
stc
aas
mov
daa
pop
inc
add
cmp
push
insl
int3
jbe
push
pop
push
and
mov
jns
cmp
loopne
int
popf
push
or
jnp
cltd
mov
and
add
add
add
or
add
or
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
or
add
or
cwtl
or
add
add
add
or
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
or
add
add
add
or
add
add
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
sbb
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
or
or
add
add
or
or
add
add
add
add
add
add
add
js
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
push
add
add
add
add
add
add
xor
xor
bound
xor
add
dec
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
popa
add
imul
je
and
push
add
insb
add
sub
add
add
arpl
je
outsl
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
add
add
imul
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
jae
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
je
jb
popa
add
je
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
insb
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
sub
inc
add
add
add
imul
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
dec
pop
jne
bound
addr16
sub
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
pop
add
add
inc
add
add
pop
add
and
and
and
and
and
and
and
and
and
and
and
and
add
add
je
sub
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
sub
push
add
add
add
imul
outsl
add
jae
sub
push
add
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
add
add
add
and
adc
add
add
call
add
adc
add
add
sub
add
add
sahf
dec
sub
add
adc
add
and
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
add
add
add
add
add
or
pushl
jo
xor
jo
push
aas
addb
idivl
divl
addb
icebp
pop
data16
dec
addb
stc
pop
out
dec
addb
incl
inc
add
addb
inc
inc
inc
jo
addb
mov
rcrb
jnp
jnp
pop
xor
rolb
add
add
mov
add
xor
add
add
add
loopne
xor
loopne
mov
loopne
xor
loopne
add
loopne
ja
sub
add
and
add
inc
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
xorl
xor
xor
xor
add
add
add
add
jnp
jnp
add
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
mov
xor
xor
xor
xor
xor
ja
addb
xor
aas
pushl
xor
push
addb
jg
aas
push
add
push
orb
div
aas
push
xor
push
addb
xor
xor
xor
add
testl
push
xor
testl
clc
mov
addb
xrelease
push
maskmovq
testl
incl
lock
addb
add
mulb
incl
addb
add
ljmp
cld
in
addb
add
jmp
cld
testl
push
addb
add
mov
xchg
ja
ja
ja
ja
ja
ja
add
add
inc
inc
inc
add
add
addb
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
inc
inc
inc
inc
addb
add
ja
ja
ja
ja
add
add
mov
mov
lock
push
add
push
add
push
add
jg
add
aas
lock
aas
lock
aas
lock
aas
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
lea
add
and
push
add
add
add
inc
repnz
adc
mov
sbb
cmp
mov
mov
dec
in
aad
or
cmp
je
jne
pop
adc
call
lret
and
iret
xchg
sbb
inc
dec
outsl
rolb
in
mov
jnp
aaa
js
repnz
lret
mov
dec
or
adc
adc
xchg
mov
movsl
int3
dec
addl
pop
lcall
xor
mov
lcall
cs
xor
jecxz
sbb
and
push
loopne
filds
cltd
push
sahf
or
sbb
clc
ljmp
cmp
push
push
pushf
addl
inc
iret
cmpsl
sub
adcb
loop
jno
fwait
aam
mov
jp
lcall
pop
ret
arpl
pop
sub
inc
into
pop
pop
in
jg
mov
scas
imul
or
adc
xlat
push
fdivr
dec
das
xchg
xchg
popf
std
imul
outsb
push
push
and
mov
sbb
rolb
roll
sbbb
cmp
xchg
mov
testl
scas
push
test
jle
out
inc
pusha
mov
jne
sub
ss
loope
fildl
push
icebp
popa
loopne
xor
inc
adc
pop
clc
and
sbb
dec
adc
in
jecxz
jecxz
adc
ss
sbbl
inc
and
mov
popf
sbb
dec
cmp
xor
mov
icebp
jae
and
out
jnp
sub
cld
dec
outsl
fisttpll
push
ror
icebp
jo
rcrb
and
ja
dec
dec
sub
push
sub
mov
jb
clc
jmp
inc
nop
mov
mov
test
push
scas
cmp
pop
cld
rcll
icebp
lcall
jp
jno
jno
sub
xor
repnz
icebp
xorl
sbb
mov
iret
pop
inc
push
add
sub
shrb
call
outsb
mov
orl
test
sti
sbb
mov
push
jnp
pop
mov
fdivr
gs
aam
sub
daa
xor
dec
out
add
test
lods
push
xchg
fucomi
push
jnp
dec
dec
sbb
mov
aaa
imul
cmp
or
lds
loopne
mov
xchg
and
and
ja
ds
lahf
sub
xchg
dec
arpl
lret
cli
fcmovu
jbe
and
lods
inc
mov
orl
ds
enter
lods
subb
push
jecxz
mov
imul
lods
scas
imul
xchg
cmp
roll
imulb
out
mov
and
fs
int
mov
ds
jl
mov
sbb
push
imul
dec
sub
repnz
lcall
lock
push
test
sbb
fiaddl
inc
bound
mulb
in
movsb
aam
sub
sti
inc
pop
clc
xlat
add
xchg
xor
mov
adc
leave
xor
jae
shl
jp
cmp
push
jnp
loope
inc
aaa
pop
roll
mov
mov
add
out
cld
jb
cli
aas
insl
sbb
mov
dec
dec
int
and
mov
ja
xchg
adc
sbb
sub
adc
pop
adc
or
push
pusha
sbb
mov
pop
out
in
sub
pop
jae
scas
cmp
frstor
test
call
sub
in
and
mov
push
rcrl
mov
bound
push
in
cmp
sub
pop
xlat
into
stos
pop
mov
test
test
fmull
cmpsl
pop
pop
cmp
xor
mov
xor
and
data16
stos
in
cmpsb
insb
push
sti
add
int3
fcmovnbe
sub
inc
adc
jb
xchg
jae
arpl
jns
into
xchg
sti
xorl
mov
mov
cmp
sbb
inc
sbb
pop
int
repnz
jno
sub
rorb
into
sbb
in
scas
and
push
mov
sbb
mov
xchg
loope
repnz
fiadds
xchg
fwait
xchg
pusha
mov
idiv
out
push
push
jmp
in
inc
imul
das
sbb
cmpsl
in
push
test
lods
movsl
fistps
nop
hlt
push
sbb
inc
xor
or
push
and
pop
mov
inc
xlat
lret
xlat
sub
jns
aaa
add
cmpsb
lock
xchg
jb
push
inc
mov
dec
push
test
jmp
fs
adc
xlat
jge
enter
xchg
cmp
mov
dec
mov
sbb
pop
push
xor
mov
scas
jns
or
cmp
mov
fisubrl
jle
or
aam
int
js
pusha
rorb
mov
data16
sbb
xchg
sti
jg
outsb
sahf
shlb
lret
push
or
mov
mov
sbb
lcall
sub
pop
icebp
sbb
imul
out
pop
jb
lcallw
push
data16
jae
or
xor
push
and
fsubl
in
cmpsb
jg
jp
lcall
outsl
jno
cmpsl
jo
insl
out
mov
mov
shr
int
mov
inc
and
or
jle
ret
jae
xchg
push
addb
repnz
test
sbb
daa
sub
cmp
adc
outsb
ret
ret
scas
test
cs
jmp
sbb
mov
pop
adc
loop
cmp
dec
je
adc
repnz
stc
xchg
pause
jns
jnp
add
add
push
insb
add
and
mov
out
sbb
cmp
sahf
daa
jg
pop
xchg
pop
xor
ds
scas
adc
aam
lret
gs
mov
jnp
ja
pop
push
fistl
push
inc
and
sub
jbe
fildll
mov
ss
pop
jmp
sub
inc
inc
mov
push
mov
push
adc
scas
loop
test
jmp
inc
rorb
jp
inc
lea
dec
push
mov
push
stos
sub
fstpl
mov
adc
aaa
add
nop
loopne
or
add
add
lret
cmpsl
dec
cmpsl
inc
mov
jo
jno
popf
jl
push
mov
out
xchg
aam
push
sbb
clc
out
lods
fs
pop
sarl
js
sahf
mov
and
jno
mov
sbb
mov
xchg
xchg
clc
mov
mov
xchg
mov
popf
js
js
daa
dec
outsl
fdivrl
adc
add
cmp
inc
mov
test
fwait
pusha
inc
xchg
aas
and
or
imul
rcll
movsl
nop
cmc
pop
cmp
mov
stc
mov
jae
sarb
jo
or
adc
or
insb
mov
in
xchg
test
add
adc
dec
mov
cltd
pusha
cmpl
std
sub
push
dec
mov
dec
cli
jmp
xor
popf
lea
out
mov
push
and
mov
daa
pop
fwait
mov
jecxz
int3
int
cwtl
xor
push
lods
fisubrs
stos
inc
cmp
fisttps
imul
cld
or
inc
rorb
mov
pop
inc
dec
push
xor
sbb
mov
xor
xor
mov
jbe
inc
pop
mov
dec
mov
dec
inc
or
test
test
outsl
icebp
jbe
sahf
jle
scas
or
xchg
xchg
sbb
rcrl
mov
shr
pop
aaa
insl
std
out
and
mov
sarl
or
mov
lret
sahf
cmp
mov
xor
push
mov
rol
jp
mov
add
mov
mov
sub
push
dec
mov
jns
mov
adc
bound
pop
mov
insb
les
sbb
jo
inc
imul
mov
adc
es
in
ss
mov
nop
mov
jb
ret
push
popa
cs
pop
or
out
fldt
cmp
mov
mov
xor
popf
outsl
xchg
sub
cmp
jb,pt
fwait
jg
aaa
movsl
and
std
sbb
aaa
pop
adc
stos
scas
pop
js
subl
pop
and
push
or
jbe
xchg
mov
jp
mov
es
xor
lret
out
hlt
xor
outsb
push
test
cli
add
xchg
sub
jg
into
xchg
xor
fistpll
pop
cli
loop
dec
or
sbb
lds
inc
xor
push
push
test
push
nop
lret
and
xchg
mov
xchg
stc
idivb
mov
mov
lods
push
lret
ljmp
pop
cmp
rol
jmp
dec
lahf
xor
popf
xor
lock
jae
dec
leave
push
movsl
pop
cld
or
mov
jg
loop
div
xlat
iret
mov
outsl
cmpsl
xor
mov
ret
mov
aaa
pop
mov
xchg
sbb
lret
cmpsl
aam
push
jne
jno
xor
test
cmpsb
cli
sbb
stos
nop
mov
mov
outsb
inc
out
ljmp
mov
stc
into
stos
pop
xchg
imul
and
popa
stos
lods
xchg
cmc
paddq
push
or
push
mov
dec
out
in
in
xchg
and
mov
int
int
jmp
mov
mov
inc
fmull
aad
cmp
in
jle
aaa
lock
add
scas
xchg
aam
pop
lahf
fidivl
jnp
not
std
shrb
sti
mov
fnsave
cmp
in
xor
xchg
fisttpl
mov
push
jo
inc
test
sarl
push
mov
loopne
lods
or
dec
pop
pop
movsb
dec
test
adc
test
ret
cmp
scas
andb
ljmp
pop
subl
mov
mov
sub
movsl
pop
popa
push
and
xchg
js
cmp
xor
and
adc
aam
dec
jns
fwait
dec
mov
xor
mov
lcall
into
mov
js
out
adc
jl
cmp
addr16
and
out
sub
inc
sbbl
inc
pop
pop
xchg
dec
ljmp
pop
and
add
test
cltd
testb
add
cmp
insb
mov
jno
mov
sub
test
xor
rcll
push
out
pop
sub
je
stos
jno
xor
adc
inc
mov
lret
daa
rclb
jae
xchg
frstors
jmp
test
push
fldcw
mov
movsl
add
inc
icebp
ja
jge
cmp
adc
rorl
divl
inc
idivl
fistps
adc
xlat
repz
lahf
js
lods
jno
inc
xor
mov
jmpw
mov
xchg
push
cmpsb
xor
ret
mov
shlb
ret
jne
pop
inc
loop
cmc
add
jecxz
jle
xor
mov
cwtl
mov
int3
ljmp
push
xchg
stos
jo
xor
cltd
dec
push
xor
call
popf
jmp
dec
loope
xchg
cs
inc
jb
subb
pop
psubusw
lock
inc
jl
sbb
fs
sbb
rorl
and
jl
mov
pop
fimull
dec
ss
pop
and
xchg
mov
fsts
and
jno
pushf
int3
movsl
push
xor
fdivr
das
testb
in
aaa
loope
das
and
movsb
xchg
add
and
push
sub
out
push
lcall
or
push
in
and
fadds
mov
insb
andl
outsb
xchg
shlb
pushf
xor
imul
lea
or
xchg
dec
jmp
arpl
dec
dec
dec
xor
mov
pop
xchg
cmp
push
enter
loope
fdivs
mov
ret
xchg
xchg
stos
push
lcall
lahf
pop
add
xchg
sub
push
pop
push
shll
stc
fucomi
int
out
dec
xchg
xchg
push
std
aas
dec
adcb
jg
jno
xor
mov
roll
cmp
insl
inc
inc
int3
jnp
mov
movsl
sbb
and
jb
stos
pop
mov
insb
pop
mov
push
mov
imul
out
ror
aad
xor
cmpl
cmpsl
stos
mov
mov
icebp
ja
push
mov
sub
cmp
jecxz
les
call
inc
inc
cmp
push
or
in
jp
push
icebp
mov
test
cmpsl
pop
cli
cwtl
add
insb
arpl
mov
jp
adc
or
jnp
sub
adc
xchg
nop
adc
cmp
sub
jns
or
xorb
mov
jle
dec
jno
test
rcll
stc
stos
mov
aam
add
clc
pushf
std
mov
repnz
popf
test
adc
popa
iret
jle
push
adc
xchg
mov
stc
push
cwtl
out
stos
or
jl
int3
test
in
cmc
pop
roll
jne
add
popa
sbb
movl
cmpsl
addr16
xchg
std
insb
js
adc
stc
stos
aaa
inc
ret
ffree
addb
push
movsb
inc
jecxz
outsb
mov
negl
in
push
ret
mov
pop
shrb
lret
cmpsb
cmp
xor
lahf
out
cmp
ret
sub
push
add
sub
sub
xchg
jg
xlat
fsubr
and
leave
sub
les
psrld
cmp
loope
insb
cmc
nop
imul
jo
jp
cwtl
dec
mov
mov
pushl
insl
repnz
fdivp
repz
mov
mov
fnstcw
mov
mov
rep
rorl
pop
loope
mov
push
decl
outsb
fists
rcrl
cltd
lock
xchg
filds
xacquire
pop
mov
mov
movsb
mov
dec
in
cmp
or
imul
mov
rcr
imul
inc
inc
jnp
ja
adc
in
mov
in
out
mov
ljmp
sub
push
or
xor
popf
mov
cmp
movsl
jecxz
mov
or
push
test
sub
and
inc
mov
and
int3
and
and
and
lods
pop
shll
ret
and
pop
xor
mov
dec
jns
jbe
adc
div
adc
imulb
xchg
int3
adc
add
or
lret
fldenv
inc
push
pop
aad
in
enter
inc
mov
popl
addl
adc
std
scas
popf
xchg
hlt
inc
mov
imul
cmp
and
dec
jle
scas
pop
out
repnz
outsb
jno
jge
incb
xor
cmp
or
je
jp
bound
in
mov
adc
pop
or
enter
xchg
add
push
je
je
and
cs
test
stos
cltd
mov
mov
inc
sbb
imul
test
fnstenv
shl
pop
push
scas
les
cmp
addl
dec
jecxz
pushf
lds
sbb
shrb
or
cmpsl
mov
and
and
cmc
mov
push
fbld
add
cmp
jge
jno
xchg
mov
adc
and
lcall
scas
adc
popa
addl
shll
cmpsl
orb
sub
mov
mov
neg
sub
shll
push
addl
sub
stc
in
stos
mov
cld
and
imul
xchg
fcmove
pop
lds
daa
mov
aam
or
sbbl
xor
fwait
jmp
mov
loopne
inc
dec
mov
and
and
xchg
mov
add
rorb
stc
adc
shrl
mov
cmc
in
push
xchg
testb
jl
xorl
cld
cmp
sub
in
jae
loopne
enter
decb
add
insb
lahf
aad
cmc
inc
outsl
popf
ret
jns
add
and
cmc
insl
jecxz
arpl
pop
out
sbb
adc
mov
movsl
add
adc
xchg
sbb
add
dec
dec
imul
div
xchg
lock
lea
push
mov
out
mov
xchg
repz
cwtl
mov
push
adc
data16
mov
ds
popf
xchg
pop
out
popa
inc
lock
lea
outsl
adc
lret
pop
js
faddl
je
cli
xchg
and
mov
fdivrp
xlat
mov
mov
mov
test
add
pop
jnp
cmp
and
jp
lods
pushl
enter
cmc
lret
ret
insl
lret
sar
out
push
test
das
hlt
cmc
mov
ljmp
adc
mov
fs
loopne
fimuls
jecxz
jbe
data16
daa
add
ret
cmpsb
lahf
in
mov
pop
ljmp
push
push
xor
jmp
andl
sub
inc
popf
dec
pop
xor
and
leave
hlt
push
xchg
fcoms
pop
and
xor
fistpll
fmull
int
popa
idiv
out
js
popa
or
inc
es
call
stos
inc
popa
add
or
lret
cmp
pop
cmpb
testb
mov
xchg
pop
push
test
pop
ret
xor
mov
cmpsb
imul
rol
inc
test
ja
mov
cmp
imul
pop
fnstsw
adc
arpl
add
pop
test
xchg
adc
or
pop
cmp
xlat
adc
pusha
mov
pop
sarb
cwtl
and
jl
jle
push
mov
pop
rorb
fmuls
cs
mov
in
mov
xchg
mov
in
xchg
inc
dec
mov
fcomps
sub
cmp
or
adc
clc
or
add
js
in
stos
jno
test
push
lret
sbb
pop
movsb
or
mov
mov
lods
aam
mov
mov
inc
xchg
std
inc
sbbl
jns
add
sti
adc
xchg
sub
flds
cmp
pop
daa
popf
sub
cmp
xchg
mov
jle
pop
jmp
xor
int
gs
jge
mov
scas
mov
loopne
data16
xor
mov
and
sbb
test
or
jb
and
aaa
pop
dec
mov
mov
movsl
imul
adcl
mov
inc
sbb
bound
call
in
cmp
ja
in
xchg
jg
lret
cmp
pop
popa
mov
repz
fnstenv
jb
xchg
aaa
jge
mov
inc
jge
mov
fildl
adc
push
dec
imul
jo
sahf
test
push
push
aad
or
pop
hlt
negb
xor
flds
push
test
xchg
sub
movb
scas
movsl
mov
xor
sub
cmp
push
jno
ss
xor
sub
jecxz
pop
adc
jg
cmp
popa
mov
daa
repnz
int3
dec
push
sar
js
sbb
xchg
pop
jo
pop
mov
sub
jmp
xlat
mov
lret
mov
jne
inc
push
shlb
adc
or
push
les
addr16
aaa
stc
test
xchg
ficoms
cmpsb
fwait
in
js
jmp
xor
into
dec
jp
fsin
mov
xor
push
lock
jp
int3
fs
clc
push
or
pop
imul
xlat
and
lds
cltd
cwtl
cmp
and
shll
xor
xchg
jb
jmp
lods
mov
adc
sti
mov
or
fldt
in
add
lea
fwait
insl
dec
adc
fidivs
xor
orb
mov
bound
xor
and
pop
mov
pop
repz
mov
cmc
fwait
ret
xchg
movsl
pop
loopne
cli
out
push
dec
roll
and
cld
pop
lock
test
xchg
fnstsw
shll
std
ds
insl
das
ficomps
push
lea
sub
int
sub
fcmovb
and
adc
movsb
ficoms
icebp
xlat
lods
pop
stc
and
cs
shrb
push
imul
push
rcr
xchg
lods
hlt
in
push
or
scas
sub
dec
lcall
jno
lods
inc
cwtl
pusha
push
push
dec
fdivp
pop
push
inc
push
sub
mov
in
inc
pop
sbb
mov
or
or
into
out
rcrb
and
jp
and
mov
inc
data16
cmp
loope
sbb
leave
mov
pop
das
jle
mov
test
addr16
shll
or
add
add
xchg
xchg
xor
out
mov
outsl
in
mov
push
xor
les
pop
xchg
jne
sub
hlt
pop
jmp
inc
cmp
test
test
jne
je
dec
mov
or
cmp
xchg
mov
cmp
dec
cmp
jae
xchg
stos
push
dec
shlb
roll
jmp
arpl
jle
jge
je
leave
sbb
inc
adc
pop
inc
push
push
push
sahf
push
enter
add
xchg
aaa
sbb
stc
dec
jg
jp
jno
sbb
mov
push
int3
jmp
nop
and
xor
out
xchg
cltd
cltd
sub
sbb
fwait
jecxz
xchg
rcr
in
ds
imul
mov
cmpsb
pop
pop
inc
stos
gs
sbb
add
dec
sub
xor
or
lret
mov
pop
mov
xchg
push
or
mov
push
fists
sub
orb
iret
dec
lock
jb
clc
inc
mov
dec
add
mov
loope
adc
sub
clc
loope
cmp
ficoms
sub
dec
pop
ds
pop
cs
pop
pop
ss
mov
xchg
pop
lea
mov
test
push
insb
fidivrs
dec
sarl
push
hlt
scas
push
dec
cs
movsl
test
pop
mov
std
push
jecxz
or
jecxz
pop
or
inc
adc
cmp
jmp
aad
dec
pusha
es
lods
dec
mov
push
notb
loopne
mov
popl
mov
sub
pop
push
jmp
out
inc
rorl
movsb
lret
sbb
dec
sbb
insb
mov
sub
dec
les
pop
shrl
add
lret
mov
cmpb
mov
sbb
adc
jbe
lret
push
dec
mov
xchg
and
cmp
fsubl
out
add
stos
insb
insb
dec
fwait
mov
mov
mov
xchg
fwait
inc
out
jo
enter
aad
lcall
xchg
mov
out
cmp
jmp
pop
pop
sub
and
add
mov
xchg
adc
push
movsb
shll
divl
sbb
addr16
daa
mov
notl
xchg
pusha
add
insb
add
out
inc
sahf
lcall
pop
add
ds
stos
ljmp
fiaddl
pop
sbb
test
inc
call
pop
sub
out
jno
shrl
cld
xlat
add
pop
ret
cmc
push
cmp
fcomps
lahf
mov
inc
imul
lods
popf
mov
inc
jmp
pop
add
daa
adc
dec
push
je
add
pusha
rcr
out
mov
pop
ljmp
jg
cltd
test
sub
rorb
psllw
mul
xor
mov
sti
jg
fidivrs
jp
icebp
cmc
add
std
mov
incb
movsb
arpl
in
push
mov
aas
push
ja
arpl
loopne
in
cmp
testb
rorl
inc
jbe
fwait
pop
stos
mov
add
mov
push
lret
mov
pop
sti
out
fldt
jmp
pop
rcrb
shl
adc
jbe
sub
sub
xchg
adc
mov
call
mov
sub
push
mov
xchg
lods
adc
shll
cmp
fmuls
js
ljmp
mov
sub
mov
scas
movsl
setle
xor
sbb
mov
ss
jmp
mov
daa
lret
xor
cmpl
and
sub
mov
cmpsl
jg
sti
cltd
xlat
xchg
and
adc
scas
xor
ja
outsb
cmpsl
mov
cmp
adc
adc
pop
and
scas
pop
adc
xor
sbb
or
lret
xchg
cli
fs
inc
dec
mov
push
xor
divl
aas
sbb
cld
push
xor
aaa
jecxz
aas
cmp
push
in
iret
push
lods
movsl
mov
sub
into
pop
std
add
sbb
ja
cltd
adc
pop
stc
mov
popf
aam
sub
rorl
scas
das
sub
mov
mov
push
iret
sbb
mov
repz
fsubr
dec
cmpxchg
inc
lea
jg
mov
gs
dec
cwtl
push
popl
int3
ss
add
pop
and
lret
ret
daa
mov
and
mov
iret
inc
fwait
or
fmull
pop
sahf
cs
outsl
xchg
orl
dec
pop
and
mov
jp
sarb
sub
mov
add
and
gs
sbbl
ja
pop
mov
or
lret
adc
aaa
push
and
cld
xor
inc
inc
dec
push
dec
aaa
out
dec
daa
add
sbb
sbb
xchg
inc
push
cmpsl
jecxz
cmp
xlat
mov
loopne
mov
jl
sub
mov
pop
testb
and
shlb
iret
sub
cmpsb
mov
aaa
nop
adcb
cltd
push
fs
adc
clc
xchg
cmp
pushf
xchg
jge
add
pop
ficompl
fucomi
jecxz
jns
mov
adc
adc
adc
not
adc
jne
inc
jle
mov
add
rcrb
inc
pop
dec
push
adc
adc
popl
jle
or
out
lret
or
cltd
add
bound
cli
xchg
jnp
mov
cltd
out
stos
mov
lret
shrb
cmp
in
xor
cwtl
pushf
mov
or
and
adc
jae
scas
cmp
fstps
inc
pop
jae
fsts
xchg
lock
adc
push
and
aam
std
sub
int
sbb
int
lahf
pop
sbb
fdivl
ljmp
arpl
dec
fisubs
pop
jl
lahf
fdivrs
jle
pop
fbld
mov
in
js
mov
sub
fs
loop
inc
add
xchg
sbb
mov
imull
mov
pop
inc
xor
test
xor
cmp
jl
push
inc
add
mov
out
adc
push
loope
mov
mov
xlat
jmp
mov
xchg
mov
pop
sub
and
das
out
test
xor
pushl
jmp
js
xor
movsb
rolb
out
imul
dec
mul
enter
imul
fstl
call
movsl
icebp
sar
sub
fdiv
std
xor
or
push
sbb
int3
xchg
push
aas
cltd
inc
sub
imul
push
pop
cmpsb
fstps
mov
lods
xchg
push
xchg
rcl
push
int
xor
clc
push
cs
cmp
mov
jbe
jecxz
call
movsl
mov
pusha
loopne
ja
mov
pop
fdiv
inc
insl
arpl
rol
mov
mov
mov
dec
fcomps
add
rolb
ja
fdivrl
sahf
push
test
imul
in
outsb
cmp
mov
nop
in
xchg
clc
insl
xor
pop
jb
dec
push
clc
nop
in
ret
and
inc
lock
sbb
aaa
dec
test
rcll
jae
jle
aam
sub
mov
fwait
inc
pop
cmp
xorl
sub
add
imul
cli
and
mov
sub
and
insb
push
xchg
adc
add
xor
addr16
loop
in
or
mov
in
add
pop
sahf
xor
leave
loope
mov
cmpsl
or
movsl
mov
jbe
fnstcw
jmp
repz
push
pop
cmp
push
xor
fistpl
mov
push
jecxz
adc
sub
fsubl
mov
inc
out
pushf
loopne
dec
inc
lret
adcb
imul
sub
ret
cwtl
and
pop
andl
mov
ds
sbb
addr16
es
pop
add
sarl
fcom
das
aaa
push
inc
pop
daa
mov
fwait
icebp
sti
loope
ds
clc
mov
cmpb
xchg
sub
jne
pusha
xchg
jne
subl
pop
xor
insb
mov
mov
jecxz
mov
adc
and
insl
cli
push
mov
jl
push
push
dec
cmp
and
shl
test
jl
pop
lock
jnp
sbb
stos
in
popf
mov
mov
andb
xchg
jbe
subl
xchg
cmp
push
pop
daa
shr
out
dec
test
pop
xor
popa
add
mov
std
test
mov
ret
dec
cmp
add
dec
mov
jne
in
inc
cld
lahf
lcall
xchg
sub
int
add
aad
sahf
ss
rorl
test
inc
inc
adc
mov
int
adc
fisubrs
mov
fisubrl
or
sub
je
jg
xor
out
adc
aaa
mov
sub
pop
in
outsl
hlt
inc
adc
sbbl
jns
out
sub
mov
jp
xor
dec
insl
dec
test
cmp
out
lods
fidivl
inc
jb
ret
add
test
cmp
ret
mov
cmpsb
or
popa
mov
adc
cs
nop
popa
sbb
dec
mov
popf
mov
mov
rcrl
cmp
jne
mov
mov
add
add
shll
inc
jle
adc
mov
clc
pop
mov
movsl
stos
push
and
test
sti
cmp
es
dec
inc
xchg
mov
movl
orl
xchg
jl
ja
cmp
stc
adc
out
adc
lea
pop
fldcw
dec
int3
fstl
sub
xlat
sbb
ljmp
push
int3
cmp
inc
sar
adc
fistps
or
scas
fsubrl
mov
jecxz
add
cld
or
mov
and
daa
mov
and
out
sti
jl
xor
dec
fcomps
mov
sbb
cmp
lret
sub
xchg
iret
int3
ret
and
lret
and
dec
aaa
jle
sti
rolb
aad
cmp
mov
out
mov
jb
mov
or
pushf
popa
pop
jbe
ss
or
std
mov
mov
jnp
sbb
mov
xor
aad
lds
mov
sub
inc
loopne
xlat
push
inc
and
add
hlt
test
jb
jmp
popf
cmp
dec
std
insb
xor
xor
mov
mov
dec
test
lret
or
fdiv
aam
movsl
outsb
jno
adc
dec
adc
aas
iret
daa
ljmp
pop
add
lret
xchg
jns
fidivs
mov
xchg
mov
xchg
mov
aas
push
pop
mov
and
mov
xor
popa
rcrb
aad
jmp
xchg
icebp
push
or
xchg
bound
pusha
xor
add
insl
daa
xchg
test
ja
mov
ret
xchg
jge
mov
ret
mov
jl
jmp
popa
cmp
in
pushf
pop
pop
adc
cmpsl
xor
ja
scas
xchg
jno
dec
data16
push
andb
adcl
jg
out
test
int3
lcall
cmp
ret
stc
mov
mov
orb
je
mov
scas
dec
inc
lock
jmp
int3
push
push
mov
sahf
ja
push
aas
xchg
je
jmp
cmp
mov
fdivrl
jnp
test
xchg
lds
push
inc
mov
icebp
xchg
imul
add
jle
int
cwtl
mov
js
test
or
jecxz
dec
sub
mov
mov
jl
data16
iret
stos
aad
and
daa
gs
push
test
jl
inc
movsb
adc
mov
aad
xlat
pop
and
sub
shl
hlt
inc
pushf
xchg
outsl
cmpsb
adcl
sbb
mov
lods
add
in
jb
fwait
or
mov
inc
push
cmpsb
jmp
cmp
dec
loope
adcb
repz
fnstsw
pop
movsl
sub
rorl
dec
sbb
aas
xor
fidivs
xchg
fidivrl
mov
jae
pop
shrl
jp
push
and
xor
mov
dec
call
push
sub
ud0
mov
aad
shll
or
das
insb
sbb
xchg
iret
outsb
fcmovnb
adc
into
test
int
mov
outsb
es
test
push
inc
ljmp
insl
scas
dec
test
in
push
rol
pop
jmp
lock
jmp
adc
jae
mov
outsl
push
sarb
sbb
jne
gs
xchg
rcrb
sub
push
sub
jae
jne
popa
hlt
add
dec
add
imul
out
bound
daa
sbb
nop
sub
movsb
cld
scas
fsubs
jne
cmp
outsl
dec
imul
mov
push
fdivrl
mov
inc
and
fdivrs
loop
cmp
push
mov
xor
repz
mov
fmul
push
push
inc
dec
idivb
fsubrl
mov
in
dec
icebp
jg
test
test
addr16
imul
test
jmp
fdivrl
or
cwtl
mov
dec
daa
mov
sub
data16
lahf
mov
add
dec
call
push
cwtl
movsb
mov
test
jb
lds
xor
out
jo
stos
pop
push
and
mov
push
mov
push
stos
gs
fimull
cli
jns
repnz
leave
jle
and
xchg
das
xchg
adc
out
fcoml
iret
loop
mov
stos
pushf
aad
shlb
cmp
xchg
arpl
mov
push
add
loopne
mov
mov
adc
repz
sbb
dec
cmp
jb
push
in
cld
adc
cmpsl
int
fildll
jecxz
jb
adc
dec
or
das
out
cmp
add
fdivrp
cmc
inc
dec
test
ret
jmp
mov
shrb
sarl
shll
in
popf
xor
sub
rclb
js
inc
jg
daa
xlat
inc
lods
ljmp
cs
testb
fnsave
cmp
mov
pop
les
lock
mov
mov
scas
xchg
mull
jg
ficoms
addr16
cltd
aad
inc
push
out
lods
test
xchg
push
lods
xchg
arpl
movsb
jg
push
fisttpl
pop
adc
inc
dec
pop
jae
add
mov
mov
fcmovne
dec
mov
addr16
inc
repz
insb
ret
push
test
push
push
or
push
pop
lret
stos
sub
and
mov
addr16
sub
pop
jbe
subl
cmp
sbb
insb
cmc
je
cmp
jae
cli
inc
sub
popa
mov
add
lods
add
out
dec
cmp
or
add
adc
xchg
jns
lods
call
xor
mov
testl
pusha
jecxz
xchg
mov
aas
mov
dec
mov
pop
inc
fcomp
enter
or
jmp
fcmovne
lock
sbb
das
sarb
cmp
adc
cs
xlat
xchg
and
add
mov
cmpsb
push
mov
or
cs
cmp
addb
push
sub
es
cltd
push
and
jne
sub
add
cmp
xchg
mov
sub
in
mov
orb
daa
inc
xchg
ret
push
scas
gs
xchg
dec
mov
and
js
fstp
cltd
or
mov
push
mov
pop
icebp
iret
enter
cmp
jl
aad
jns
inc
mov
and
mov
imul
pop
mov
mov
negb
out
test
ror
sbb
mov
notl
and
mul
fdivp
int
pusha
add
xor
ds
mov
jge
or
jno
and
aas
xor
pop
cmc
mov
sti
push
sbb
popa
call
fisubl
xchg
jns
push
mov
fwait
popf
jle
out
inc
test
mov
in
int
arpl
imul
cmpsb
cmpsl
shlb
stos
lret
lods
ret
inc
loope
pop
inc
pop
sub
shrb
testb
mov
std
jo
add
scas
jle
mov
faddl
jbe
dec
mov
in
sbb
int3
cltd
shll
xchg
jne
repnz
and
and
pop
subl
shl
in
jnp
mov
xorb
pop
xchg
cmc
repz
repnz
xor
mov
cmp
sbb
fiaddl
cmp
decb
mov
xor
add
aas
nop
in
sbb
xchg
scas
lret
test
push
mov
test
mov
insl
or
push
xchg
adc
cwtl
lock
adc
out
bound
dec
push
jae
sbb
push
cmp
loopne
mov
jo
adc
imul
insl
sti
scas
mov
push
stos
lock
out
xchg
stos
rclb
jae
xlat
mov
dec
jp
int
jb
pop
xchg
pop
cmp
pop
push
adc
lret
int3
out
movsb
test
pop
xor
xchg
pop
mov
mov
push
mov
fs
push
pop
or
add
stc
push
pusha
xor
out
jb
ja
mov
sbb
pop
jb
mov
fidivl
inc
ja
pusha
or
pop
cmp
sub
clc
xor
cmpsb
and
mov
out
lret
lods
lret
mov
mov
out
xchg
push
pusha
stos
jecxz
cmp
fs
xor
cmp
push
dec
xor
sahf
xor
pop
pop
nop
jp
in
fcomps
jne
pop
fmuls
mov
mov
clc
pop
adc
cli
cmp
pop
popa
out
mov
and
aaa
in
xlat
push
into
jecxz
cmp
pop
dec
sti
aam
shll
mov
gs
and
sbb
pop
push
les
fistl
fldl
mov
push
in
fwait
mov
push
daa
lea
inc
push
jmp
dec
cmp
ret
repz
or
jmp
add
xor
fs
cmp
int
pop
dec
adc
inc
push
jle
addb
sub
cmp
aad
lods
add
xchg
push
inc
cmpsl
pushf
mov
cmc
sub
pop
subl
test
loop
mulb
xchg
inc
xchg
sub
push
add
call
inc
pop
pop
mov
sbb
das
lea
xchg
xor
sub
xlat
mov
mov
dec
mov
add
add
cs
push
insl
lcall
loopne
in
and
test
cltd
test
sti
fldl
into
sbb
xor
and
push
fs
dec
mov
or
add
sub
inc
cmp
jne
dec
push
mov
je
bound
mov
fldcw
lods
push
cmp
jle
add
adc
push
lock
push
add
inc
jge
aas
rol
dec
sbbb
push
int3
test
notl
push
pop
mov
ret
xchg
jmp
cmp
fsubrs
mov
lods
mov
jb
bound
or
cmp
popa
rcll
adc
inc
fildl
cmp
sbb
or
xor
dec
and
xchg
test
test
stc
add
sbb
sub
add
cmpl
cmpsl
arpl
fdivl
jmp
cltd
jb
jno
sub
mov
xor
std
dec
cwtl
lret
dec
xchg
mov
inc
cmpsb
jnp
enter
aam
loopne
mov
mov
fisttpl
out
push
cmpsb
dec
int3
vsqrtsd
mov
sahf
gs
jecxz
or
fwait
and
add
addr16
stos
push
push
sbb
inc
aaa
imul
mov
push
popa
xchg
popf
xor
test
rcr
cmp
xchg
ljmp
mov
arpl
data16
mov
pop
ja
imul
pop
mov
ljmp
push
mov
push
pop
push
hlt
mov
pusha
lcall
push
jmp
test
sbb
nop
fildll
insl
xchg
imul
inc
xor
push
dec
mov
inc
in
inc
cmp
pop
pop
mov
in
sahf
mov
out
pop
aas
cmc
dec
jmp
lock
cmpsl
icebp
mov
mov
xchg
adc
popa
clc
popa
jmp
inc
push
je
xor
push
push
nop
xor
fldenv
jne
test
sbb
and
pop
jno
inc
mov
and
xchg
sub
mov
mov
jo
pop
sar
dec
testb
call
cltd
dec
test
jno
lret
push
js
push
push
icebp
mov
pop
pop
cmpsl
mov
int3
rcrb
insb
and
xchg
xchg
into
sbb
sub
xchg
adc
in
xor
aas
test
mov
leave
dec
lret
sbb
scas
sbb
or
gs
ret
xor
orb
or
int3
pop
dec
push
lds
cmp
cmc
rol
cld
stos
pusha
adcl
cmp
add
cltd
into
rcr
mov
addl
dec
je
aam
lods
and
rolb
or
dec
cmp
sbb
imul
mov
dec
std
push
or
pop
enter
mov
mov
mov
into
fisttpl
js
jns
mov
fcomps
es
add
xlat
pop
cmp
mov
pop
movsb
jmp
mov
cmp
mov
fwait
lea
stc
cmp
push
cld
dec
roll
out
insb
push
lea
jg
adc
push
xchg
pop
aaa
push
dec
pop
add
out
sarb
stos
lea
push
or
push
mov
loop
jecxz
cmp
xchg
das
and
sub
ret
sub
fsub
cmc
popf
sbb
fiadds
pushf
pushf
stos
andb
mov
data16
jae
lret
dec
out
call
lret
test
push
jecxz
cmp
or
insl
add
arpl
mov
lods
mov
gs
xorb
mov
sbb
les
mov
jg
idivb
mov
pop
fmuls
push
mov
pop
jp
rorl
rcrl
jb
leave
inc
dec
pop
popf
and
je
jmp
sbb
arpl
outsb
int3
inc
popa
loopne
mov
xor
insb
dec
leave
js
sti
inc
pusha
lcall
sbb
xchg
cmp
pmuludq
fwait
and
into
fsubs
dec
mov
sbb
sbb
loop
sbb
mov
xor
push
cs
and
mov
repz
pop
pusha
arpl
jl
dec
xor
cmpsl
mov
mov
out
pop
sub
aaa
int
dec
repz
xchg
xchg
gs
sbb
mov
gs
roll
test
outsl
cmp
sub
ds
mov
insb
adc
or
push
or
lods
jbe
ret
and
in
mov
adc
jae
push
push
pop
mov
sub
sub
in
sti
xchg
push
push
cli
jge
mov
loope
movsb
repnz
cld
sbb
scas
dec
sub
in
lods
mov
cmpsl
jnp
bound
stos
push
dec
fcomps
pop
mov
rep
push
cmpb
out
lds
push
dec
jb
cli
mov
xchg
repz
cmp
inc
jle
in
mov
out
cltd
inc
stc
inc
sub
mov
pop
ret
adc
insb
jecxz
dec
and
add
xor
mov
enter
mov
or
adc
and
insl
pop
xor
movsl
sub
jl
into
arpl
popa
xor
int
xchg
pop
sti
subb
dec
xchg
stc
scas
sub
dec
loope
cmp
mov
mov
js
cli
push
xchg
call
inc
pop
movsl
hlt
xchg
mov
adc
data16
xor
push
inc
in
xchg
and
inc
cmp
cmp
jle
pop
sbb
and
pop
imul
pop
daa
adc
test
cmp
inc
push
dec
mov
mov
adc
cmp
fnstcw
sar
test
push
shlb
sbb
into
jb
fstps
scas
sub
in
neg
inc
xor
inc
call
mov
fucomp
inc
pushf
pop
ljmp
sbb
push
roll
inc
std
push
iret
pop
jno
jge
xor
push
mov
jb
xorl
xlat
dec
adc
xor
push
popa
adc
cli
les
movsb
and
movaps
jmp
cld
and
popl
or
test
fdivrs
sub
out
dec
add
cld
push
das
daa
add
and
adc
push
mov
loopne
mov
cmpsb
test
mov
xchg
pop
push
loope
cmpsl
lea
mov
into
stc
xor
ja
mov
pop
lcall
je
xor
push
jne
push
dec
lret
ret
cmp
out
jmp
popa
int3
adc
test
and
fst
pop
icebp
xchg
ss
hlt
ss
notl
jns
dec
outsl
test
xchg
adc
rcll
ret
mov
xchg
xor
sub
iret
cmp
icebp
cmp
xor
pop
xchg
cmp
sbb
add
add
add
xchg
push
jge
ret
test
or
dec
push
sub
rolb
aad
cmpsb
mov
push
adc
pop
cmp
add
jecxz
mov
add
cmp
out
cwtl
inc
and
and
jecxz
mov
or
in
mov
mov
sub
pop
inc
mov
out
mov
mov
adc
lods
lcall
add
pop
cmpsl
fcompl
clc
mov
popa
fcomip
clc
jne
mov
xchg
adc
adc
imul
adc
sub
xor
daa
cmp
faddl
leave
imul
js
push
bound
lahf
sbb
add
iret
dec
in
push
mov
enter
loope
dec
addr16
xor
mov
bound
filds
xchg
add
pushl
roll
int
in
jb
or
int
outsb
mov
iret
pop
int
fisubs
pop
pop
xchg
insb
std
xor
push
jne
shll
fnsave
jns
xor
cs
push
sub
push
fiadds
aad
jecxz
or
mov
cmp
inc
pop
rcll
cmp
mov
xchg
je
popa
mov
shl
repnz
into
lea
adc
mov
into
xor
and
mov
lret
jne
movsl
and
cli
xchg
jle
add
lods
sub
pop
xchg
fistps
ret
dec
add
stos
xor
cmp
repnz
dec
and
sub
seto
in
inc
call
adc
cli
lret
pop
imul
in
cmc
jno
jb
jp
aaa
das
lret
loope
iret
cmpsb
push
jge
inc
iret
outsl
roll
sbb
loopne
pop
cli
adc
cmp
stos
sbb
icebp
jmp
lahf
ficoml
push
xchg
enter
fwait
sbb
and
in
loop
dec
scas
inc
and
lds
das
mov
sbb
stos
repz
dec
mov
cmpsl
fs
pushf
leave
dec
mov
fdivr
insl
aam
int3
cmp
scas
jge
ret
fadds
mov
out
pop
lods
adc
lods
cld
test
mov
je
and
in
jl
icebp
lahf
jb
mov
jle
xchg
imul
jb
dec
rcr
daa
pop
jo
add
or
and
sbb
mov
mov
adcl
subl
fcmove
fidivrl
xorl
push
cmp
loopne
icebp
std
ja
sbb
xchg
inc
pushf
jmp
imul
es
outsb
jecxz
jmp
push
push
mov
aaa
int3
mov
xchg
add
in
lcall
add
ds
icebp
orl
sbb
test
inc
mov
add
jno
movsb
push
sbb
cmp
jns
jno
shll
clc
pop
push
dec
pop
mov
add
lea
ret
jnp
in
and
xchg
inc
xor
mov
sub
das
rclb
cmpsl
pop
mov
test
outsl
mov
rolb
mov
cmp
fildll
lret
xchg
add
sarb
aam
fstp
push
ficoml
aaa
call
test
iret
mov
inc
jle
sub
mov
rorb
push
cltd
loop
xchg
into
mov
cs
mov
ret
add
lahf
cmp
xorl
pusha
int3
pop
subb
aas
xchg
in
bound
jno
rcrb
push
mov
je
loopne
sub
imul
jle
and
ret
sub
add
movsb
repz
push
test
mov
xor
rclb
pushf
popa
out
jmp
pushf
dec
dec
fsubrs
cs
mov
add
fistpl
int3
roll
xchg
jge
jbe
pop
push
rcll
lahf
outsl
mov
out
aaa
push
push
bound
pop
pop
js
jnp
int
sub
cmp
lret
jne
out
or
cmp
mov
add
push
cli
cltd
fptan
cs
jne
out
sbb
cmp
adc
fdivs
pop
pop
jl
xor
or
sub
ss
testl
pop
cmp
shl
adc
jb
pop
aas
sti
add
stos
xchg
jne
sbb
jne
rol
xlat
inc
mov
pop
mov
and
sub
and
dec
xor
or
pusha
dec
mov
sub
jmp
nop
mov
pop
cld
outsb
loope
das
adc
push
iret
mov
stos
jo
fadd
gs
inc
xor
lret
addr16
inc
lods
inc
loop
inc
and
stos
rol
out
and
lea
mov
repz
dec
popa
push
data16
in
push
stos
rcl
dec
iret
notl
and
cmp
push
mov
inc
gs
or
test
mov
lcall
pop
pop
rcl
jp
and
cmpsb
nop
stos
scas
out
mov
and
lahf
sahf
inc
into
inc
dec
mov
daa
jecxz
icebp
add
pushf
aas
or
out
push
xor
pop
push
loope
pop
push
ffreep
in
push
and
xor
adc
adc
cltd
fnstenv
ds
loope
cmp
xor
pop
shrl
in
int3
xchg
sbb
pop
pop
ljmp
scas
push
mov
ss
jns
push
lret
push
lret
adc
add
clc
jmp
sbb
movl
push
dec
inc
adc
outsb
xchg
jns
addr16
nop
mov
in
sbb
mov
push
mov
push
inc
ja
and
xchg
push
xchg
push
ljmp
pop
hlt
inc
addb
xchg
xchg
add
dec
ds
dec
arpl
repnz
fcom
lcall
fwait
sahf
add
and
std
test
shlb
adc
sti
pop
xchg
or
das
jns
jp
or
test
push
outsb
mov
mov
add
mov
aas
in
les
mov
leave
inc
inc
cmpb
aam
pop
rorl
roll
pop
cmp
mov
int3
pushf
int
or
push
dec
cmp
dec
sarb
gs
xchg
cmpsb
cmp
sub
mov
xor
stc
sbb
fs
nop
xor
jno
cmp
push
icebp
jle
jb
aad
stos
or
bound
clc
fidivs
dec
ret
mov
jo
mov
add
dec
lahf
fistpl
outsl
into
jno
push
pop
rcrl
mov
es
jecxz
clc
inc
xor
test
pop
pop
mov
jnp
jle
adc
mov
fisubs
fdivl
iret
arpl
add
cmp
jecxz
imul
mov
ret
lods
dec
adcl
xchg
and
pop
sub
jp
pop
loope
cmpsb
sub
pop
insl
jnp
pusha
pminub
add
es
adc
lret
pusha
shll
aas
and
sub
cs
adc
mov
in
xchg
push
pop
adc
mov
movsb
insb
int3
popf
imul
out
stc
lods
jge
xchg
add
mov
cmpsb
arpl
fcom
nop
sbb
or
je
pushf
es
mov
cmpsb
cmp
fwait
enter
outsb
call
mov
ret
mov
lret
mov
rolb
push
into
cmpsb
sbb
sub
call
lret
clc
jno
shl
iret
and
dec
in
or
loope
cltd
adcl
imul
pop
mov
shrl
aaa
inc
sar
jns
jmp
mov
mov
jno
cmc
and
test
decl
push
loop
xchg
add
xlat
push
push
mov
adc
bound
xchg
add
mov
test
scas
ds
cmpl
test
stc
dec
push
jnp
stos
xchg
mov
push
sbb
mov
inc
in
sbb
sbbl
xor
jno
iret
sub
out
mov
pop
jo
pop
mov
jae
cmp
ds
shrb
mov
mov
cmp
cmc
rcr
xchg
inc
push
sub
dec
dec
fnstsw
push
ja
movsb
and
shll
stos
and
xlat
cmp
and
incb
addr16
stos
or
jmp
pop
dec
inc
sbbl
mov
adc
jno
popa
stos
lock
dec
sbb
jae
pop
push
in
cltd
cmpsb
mov
or
pop
aas
sub
pusha
push
mov
xlat
insl
mov
adc
mov
ss
out
pusha
fs
aas
inc
orb
cmpsb
push
scas
pop
jecxz
fs
bound
fwait
ret
test
aas
dec
push
es
fdivrl
xchg
mov
pop
jns
adc
and
fwait
xchg
pop
pcmpeqb
inc
gs
inc
in
and
jge
clc
jns
scas
loope
test
imul
imul
dec
fwait
fisttps
scas
sar
test
pop
mov
test
aas
cwtl
or
and
mov
xchg
outsl
mov
scas
stos
dec
jbe
xchg
dec
pop
cwtl
pop
int
movsl
lcall
adc
cwtl
jns
fimull
sbb
cmp
mov
movsb
mov
out
jnp
mov
lods
pop
pop
arpl
cmpsb
xchg
cltd
stos
sbb
inc
jmp
std
fsubrl
mov
popf
xchg
push
cwtl
hlt
or
xchg
and
shll
sub
cwtl
xor
fistpl
out
push
test
cltd
or
into
pop
test
pop
and
mov
stc
mov
mov
lock
jns
mov
mov
aam
mov
sar
decb
dec
add
push
and
jecxz
add
and
jp
push
push
fwait
push
dec
nop
jns
mov
testb
test
pop
loopne
mov
xchg
jns
jne
test
shrb
hlt
jmp
shlb
loope
pop
enter
jbe
ja
fstpl
or
dec
sarb
test
rorl
cmp
and
xor
cltd
nop
rolb
mov
das
mov
aaa
jp
dec
fwait
in
adc
mov
push
testb
mov
jnp
dec
cld
icebp
out
pop
in
jge
adc
mov
jne
xor
sbb
pop
movsb
and
add
jae
sub
mov
movsl
mov
pop
ljmp
lahf
dec
stos
jae
cmpsb
jo
iret
mov
xor
pop
pop
jl
jmp
lods
xchg
mov
fbld
sbb
ss
push
push
push
leave
out
mov
mov
fisubs
jbe
or
mov
cmpsl
or
dec
mov
pop
movsb
mov
stos
test
shl
push
and
push
adc
mov
and
cli
testl
jb
cmc
xor
cld
mov
and
ja
pop
sub
or
jl
sbb
jnp
and
cmp
fcoms
repnz
mov
out
adc
inc
aas
sbb
add
arpl
insl
add
jecxz
pop
shlb
and
cmp
adc
xchg
popf
mov
pop
sub
mov
jg
pop
lods
stc
and
jo
mov
loopne
cmpsb
cmp
adc
push
icebp
jbe
test
int
pusha
int3
xor
xchg
mov
fs
or
dec
ret
ret
std
sbb
fmull
movsb
xchg
jle
mov
fbld
cmpsl
inc
sub
jge
out
add
adc
jno
and
mov
mov
rcrl
sub
xor
push
dec
sbb
shr
aaa
lock
dec
jecxz
mov
sub
out
leave
xchg
in
scas
mov
loopne
ds
rorb
push
jo
in
lods
ret
js
out
dec
sti
scas
mov
fs
mov
pop
movsb
insb
push
sub
inc
loop
lret
cmp
test
nop
outsb
mov
insl
and
cmpsb
lea
pop
test
jg
adc
inc
leave
sbb
pop
stos
lock
mov
push
jno
outsb
rol
loop
cld
rcll
test
cmp
xor
and
mov
xchg
notl
and
push
mov
cmc
push
sbb
push
xchg
mov
mov
inc
push
add
dec
repnz
lods
push
pushf
das
xchg
mov
lock
pop
aad
dec
out
imul
mov
fimuls
mov
mov
adc
xchg
mov
cmpsb
sub
leave
adcl
addb
shr
add
jp
int
sbb
jle
add
lea
outsb
sub
leave
adc
fldl
xchg
loopne
pop
sbb
sub
cmp
cmp
add
add
mov
push
vpsrad
shl
push
or
in
mov
mov
mov
aas
popf
test
imul
in
mov
test
xchg
lds
sub
jb
jge
and
repnz
mov
cltd
sbb
stos
xorl
lock
stos
dec
shr
ss
les
mov
sahf
imul
stos
sarl
jecxz
xor
clc
cli
lret
in
cmp
lcall
jns
mov
xchg
sub
cltd
xchg
inc
gs
jle
mov
mov
or
or
mov
dec
dec
adc
and
cltd
fs
scas
or
fidivs
std
add
repnz
div
shll
outsl
loopne
dec
into
mov
add
inc
hlt
push
cmp
mov
scas
pop
add
sub
add
cs
xchg
aad
or
lds
pop
jg
sub
cli
icebp
pop
cld
iret
xchg
or
out
jne
xchg
repnz
sarb
fimuls
pop
dec
in
push
mov
mov
xchg
movsl
push
sbb
add
cmp
call
push
lds
sub
jecxz
sti
movhlps
pop
sbb
xchg
test
pop
ret
mov
daa
sbbb
aaa
and
jl
sub
dec
or
loope
mov
and
push
add
xor
jmp
adc
in
movsl
fwait
dec
mov
add
into
mov
sbb
push
loope
shrb
push
push
mov
sahf
hlt
push
out
lahf
popf
cmp
cmc
push
les
dec
xor
test
cmp
xor
xchg
leave
xor
outsb
fstpt
iret
stos
dec
or
xchg
gs
insl
xor
jl
nop
data16
mov
pushf
dec
sbb
iret
punpcklbw
push
mov
add
fs
fsubl
push
mov
push
mov
add
jecxz
xchg
fldl
fiaddl
xlat
push
pop
jle
mov
jmp
fwait
leave
mov
pusha
pop
add
movsb
aas
dec
inc
fistpl
lahf
jns
dec
xor
cmc
imul
xchg
cwtl
push
dec
fisubl
inc
loopne
sbb
add
jae
jmp
jmp
aam
sarb
adc
aam
jne
cmc
xchg
lods
out
sbb
loop
insl
testl
mov
cs
out
rcll
repnz
sbb
in
pop
xchg
xor
jno
ljmp
ja
jbe
arpl
ljmp
out
mov
aad
push
movsb
ljmp
test
pop
rcl
push
or
int3
les
jge
mov
test
les
data16
sbb
push
push
rol
add
mov
pop
xor
stos
cmpsb
ss
dec
adc
dec
dec
mov
adc
inc
sbb
dec
sbbb
je
fldcw
pop
leave
inc
lds
movsb
out
jmp
push
pop
iret
push
pop
ret
mov
ret
xorl
rorl
iret
scas
outsl
in
in
mov
vcomiss
aam
and
loope
cmp
push
xchg
loop,pn
dec
push
mull
imul
imul
cld
fs
mov
inc
xorb
fsts
cmpsl
push
and
add
sti
inc
and
int
std
jnp
pushf
jns
mull
iret
push
mov
xchg
xchg
xchg
sub
dec
scas
push
pop
mov
sbb
sti
mov
addr16
adc
xor
add
pop
cwtl
pop
jg
sbb
iret
sarb
push
shlb
cmp
add
cwtl
sbb
xchg
add
xchg
ret
pushf
loop
xor
fnstcw
lahf
mov
jge
addr16
jp
loop
in
fistpl
fisubs
in
cmpl
enter
dec
jno
mov
imull
lahf
rclb
inc
aas
int
xor
pop
push
ret
add
pop
mov
sub
jne
fs
mov
shrl
or
enter
jae
xor
jnp
js
lahf
add
inc
stos
pop
lret
push
aad
inc
sbb
xchg
jno
xor
cwtl
cli
xchg
hlt
enter
out
xor
rorl
pop
xchg
ret
sub
xor
xor
pop
and
mov
push
subl
lods
pushf
js
shlb
scas
xor
ja
and
jp
sbb
pop
cwtl
pop
jbe
or
lea
adc
mov
arpl
and
xor
scas
mov
rcll
xor
mov
or
mov
push
sub
jl
xchg
xorl
pop
mov
mov
xor
or
inc
stos
fwait
mov
or
fst
pop
ud1
ljmp
cmp
or
cmp
mov
imull
or
orl
push
adc
or
repz
loopne
xchg
addb
shlb
lods
jb
pop
and
ja
shl
cmpsl
pop
imul
jno
jbe
out
icebp
iret
cld
sarb
xchg
cmpsb
popa
mov
rorl
nop
nop
scas
push
sti
gs
add
dec
push
imul
daa
mov
popf
push
subb
and
jb
jae
in
sbb
test
pop
cld
xchg
mov
jno
pop
vandps
cli
ret
pushl
dec
pop
sub
pop
iret
inc
aam
stos
sahf
int3
adc
aam
xchg
cwtl
jge
adc
inc
and
es
scas
loopne
cmpsl
test
add
jo
pop
outsl
inc
push
fmul
scas
je
pop
sbb
idivb
xor
xor
int
mov
fstpt
pop
mov
aas
out
and
addr16
add
mov
inc
jae
jge
pop
inc
lcall
push
mov
jle
sti
add
das
pop
fidivrs
andb
shlb
add
push
cmp
dec
cmp
push
push
cmp
aad
sub
sub
pop
sahf
mov
call
xor
mov
int
xchg
into
mov
adc
in
xchg
pop
in
es
repnz
leave
jae
iret
cltd
pop
out
sub
mov
stc
out
jnp
xor
jo
pop
shll
imul
cmp
insb
addl
mulb
pop
lods
jae
mov
je
mov
lret
insl
add
mov
aas
mov
and
sub
sub
and
stos
ss
mov
add
sbb
ret
mov
enter
adc
in
xor
mov
sbb
and
push
inc
push
call
adc
fwait
out
xchg
filds
jge
stos
adc
jle
into
mov
cmp
jbe
dec
cld
std
push
test
mov
xchg
cmc
rol
jl
sub
mov
pop
aas
andb
jmp
and
int3
insb
inc
xor
add
mov
cmp
aaa
aad
pusha
sbbl
xor
orl
mov
sub
in
fisttps
out
inc
roll
dec
inc
popf
and
aas
aas
out
shll
mov
adc
adc
jp
xchg
xor
dec
insl
jle
in
sub
pop
jns
lret
fs
mov
leave
jp
popa
mov
repz
subl
sbb
pop
mov
outsl
loop
jecxz
fwait
lods
sbb
outsb
push
fistpll
lock
cmp
add
inc
mov
test
jmp
jbe
divl
rcl
jle
stc
flds
pop
pop
ss
jb
test
jns
push
out
xlat
mov
dec
dec
fucomi
jnp
adc
out
push
roll
sahf
mov
push
out
add
mov
mov
push
push
call
mov
mov
or
ss
sub
and
flds
jl
jns
jl
xchg
jmp
dec
aaa
gs
lahf
pop
out
mov
ficomps
and
mov
mov
pop
mov
add
sbb
pop
adc
mov
dec
lcall
cmp
and
in
loope
cmpsb
rolb
push
jns
fadds
sbb
loope
fdivrl
mov
test
mov
int
xchg
cmp
ljmp
je
mov
loop
aas
jmp
jo
sub
lret
xor
ret
les
lods
jbe
jmp
add
sbb
rorl
in
inc
or
dec
add
xchg
jae
call
adc
fcmovbe
fs
test
add
ret
or
punpckhwd
sbb
pop
and
aad
add
aam
mov
movsb
inc
aam
in
pop
adc
out
xor
out
push
fdivp
push
xlat
loop
or
rcrl
lret
out
dec
pop
mov
sub
je,pn
or
fcoms
jge
cmp
inc
dec
insb
mov
xchg
push
je
add
add
and
outsb
faddl
jno
iret
pop
mov
sti
fucomp
add
jb
jg
dec
imul
dec
pop
pop
push
cmpsl
push
call
cmp
push
popa
insl
mov
mov
jns
in
aaa
jae
or
jge
dec
mov
pop
ds
cltd
dec
and
loopne
out
out
imul
mov
push
ljmp
into
stos
int
popa
push
and
iret
inc
sub
and
push
cwtl
and
stos
xchg
mov
pop
or
repz
mov
mov
cld
xor
lea
aaa
jo
inc
sbb
hlt
mov
sbb
mov
es
in
jp
xchg
xor
std
mov
nop
addb
xor
repz
jnp
add
push
addl
js
inc
sub
shlb
push
mov
sarb
insl
jp
dec
or
mov
sbb
dec
sub
jge
mov
lcall
lds
ss
xlat
inc
dec
sub
lcall
ljmp
xchg
push
xchg
test
push
cmp
ja
dec
inc
sub
negl
icebp
inc
push
jo
es
pop
mov
rorl
mov
hlt
dec
addr16
jbe
ds
adc
adc
dec
sti
loopne
push
push
add
cmp
cmpsb
and
jp
ja
jge
arpl
mov
push
int
leave
pop
push
adc
or
xor
ds
pop
inc
scas
lahf
imul
mov
aas
es
es
jmp
push
pop
push
sahf
arpl
loope
jae
sti
out
push
adc
jg
icebp
sbbl
push
xor
std
lcall
dec
mov
stos
xor
rcrl
xlat
xor
mov
das
mull
lea
inc
inc
xchg
mov
pop
mov
jp
mov
xchg
sub
cmp
loopne
push
ret
lods
mov
push
data16
incb
and
sbb
inc
mov
cmp
je
sbb
test
cwtl
push
mov
pusha
or
jmp
adc
test
sbb
sub
cmp
adc
inc
push
insl
cmp
test
and
cmc
cmp
pop
es
dec
sahf
imul
std
cmp
cmc
xchg
sarb
mov
push
mov
pop
pop
pop
xchg
in
dec
daa
jnp
xlat
fildl
mov
xchg
inc
ss
jo
jl
cmpsl
rcr
jno
outsb
sbb
pusha
jnp
clc
lret
push
sub
rcll
sub
icebp
add
fdivp
push
icebp
lret
add
andb
adc
push
hlt
pusha
jmp
rorl
sbb
inc
cmp
into
mov
lahf
mov
dec
mov
scas
lods
sbb
dec
ret
add
jge
pop
outsl
dec
adc
rolb
lods
loope
jo
lock
pop
aam
pop
movzbl
jae
out
push
jmp
icebp
popa
or
loop
xor
sub
int3
int
icebp
or
inc
adc
test
and
cmpsb
jg
stc
test
fyl2x
push
jns
mov
dec
mov
sti
hlt
xor
aad
xchg
cmc
xor
icebp
mov
test
adc
repnz
add
xor
mov
clc
subb
test
sti
out
xorb
dec
insb
imul
pop
fsub
adc
mov
movsl
cmp
xchg
xchg
push
adc
xchg
xor
fldl
clc
add
out
inc
notb
cmpsb
xor
xor
mov
mov
leave
cmp
stc
ror
xchg
inc
pop
fcomps
xchg
mov
cwtl
insl
repnz
daa
icebp
outsl
call
xor
adc
or
adc
leave
ret
cmp
dec
pop
adc
int
and
es
cltd
int3
and
jp
mov
popf
mov
lea
inc
addl
imul
xchg
not
jno
mov
mov
cli
sbb
jae
dec
cli
cmp
pop
negb
stos
mov
das
leave
pop
pop
lret
push
jp
pop
jb
ds
bound
pop
in
icebp
jne
xor
jo
imul
jbe
fdivr
fwait
and
outsb
jo
xor
inc
std
inc
arpl
adc
outsb
sub
nop
mov
mov
push
aaa
jge
pop
add
jne
in
insl
add
das
jns
clc
shr
xchg
add
ret
mov
dec
push
cli
loopne
mov
dec
jns
je
cmp
jnp
in
addr16
jno
shlb
aaa
jp
scas
insb
jb
or
push
out
dec
mov
cmp
sahf
jne
popf
push
jno
sub
adc
adc
lfs
mov
popa
fisubrl
addb
icebp
es
jecxz
and
jno
int
inc
xor
aas
sar
sub
into
inc
jno
sbb
les
adc
or
push
std
call
pop
sahf
cmp
lcall
nop
or
call
and
out
xchg
into
bound
ss
lret
mov
repz
xlat
sub
dec
pop
lcall
pop
cmpsb
xor
jmp
add
insl
imul
cwtl
std
lahf
mov
lods
adc
or
fnsave
mov
mov
in
adc
addr16
sbb
ljmp
mov
shlb
out
xchg
jg
testb
shrl
or
sub
popa
cld
loop
fidivrl
ret
cmp
int
jns
cmpsb
pop
or
jbe
add
and
cmc
rcl
std
adc
push
fmuls
in
pop
fisttpl
fildl
xchg
jmp
out
frstor
mov
stos
call
dec
cmpsb
push
xor
pop
and
les
imul
movsl
xchg
xchg
leave
das
scas
jbe
in
mov
inc
repnz
pop
jg
xor
xchg
scas
push
stc
sub
bound
xchg
fs
mov
inc
ret
jl
fidivs
sbb
repnz
sub
cmp
mov
inc
dec
lret
mov
aaa
in
push
aas
cld
jp
or
int3
icebp
pop
jno
pop
xchg
addb
and
cli
ja
add
sub
cmp
mov
pop
xchg
sub
add
data16
or
sub
mov
daa
sub
in
cmp
sub
mov
cmp
add
xor
mov
jmp
pop
inc
aam
mov
enter
mov
test
xlat
mov
repz
mov
leave
and
jge
out
sub
cwtl
mov
mov
push
mov
inc
pop
jo
xchg
pushf
pop
xchg
push
call
jae
popa
mov
add
lret
loope
hlt
xor
jl
daa
jmp
mov
jmp
inc
inc
xor
outsb
cmp
cld
pop
sbb
pop
xor
test
pop
gs
scas
das
lods
subb
pop
int
sbbb
js
je
sahf
ret
mov
or
mov
test
push
sbb
sbb
sub
in
inc
add
mov
lds
pop
shr
es
dec
sub
cmpb
mov
jg
icebp
pop
jns
cltd
iret
xor
xor
lea
je
clc
ljmp
subl
daa
sub
pop
and
xor
mov
jge
test
in
mov
sbb
cmp
inc
jp
dec
add
scas
mov
or
or
cmp
pop
push
mov
mov
orl
fwait
mov
in
scas
xchg
fwait
loope
jecxz
shlb
es
push
sbb
or
mov
into
test
loop
pop
mov
js
dec
mov
icebp
push
rorl
int
and
fs
js
in
sar
iret
push
mov
cmp
loopne
adc
mov
lret
xchg
lea
arpl
dec
ret
push
into
lret
mov
sbb
imul
fucomp
cwtl
ljmp
xchg
ret
add
mov
roll
xor
jp
mov
out
lods
ja
adc
jle
scas
rorb
xor
pop
repz
xor
adc
sbb
or
cwtl
push
icebp
cld
push
dec
in
addl
stc
adc
mov
or
mov
cmpsl
rcrl
sbb
insb
mov
in
mov
ss
adc
pop
out
bound
push
xor
jne
sti
sub
mov
fs
arpl
das
std
stos
in
popf
clc
cld
test
push
or
mov
cs
scas
pop
movb
jns
mov
call
jl
or
mov
push
insb
or
dec
sbb
out
cld
adc
adc
ljmp
icebp
mov
loope
js
xor
das
sub
repz
pop
jb
push
lret
js
push
mov
out
rcl
pusha
sub
jl
sub
add
cmp
out
xlat
jl
mov
add
popa
movsb
insb
sub
adc
into
cld
inc
pop
cmp
fsts
das
push
add
sbb
call
shll
push
push
fiadds
or
jo
aad
scas
hlt
or
xchg
xchg
popa
push
xchg
dec
out
push
xor
fcomp
adc
call
add
mov
mov
jmp
push
push
cmp
dec
sub
xchg
fs
dec
xor
lahf
fisubl
sbb
push
out
mov
lahf
xor
pop
inc
iret
jae
iret
sub
aad
sbb
ret
loopne
mov
rorl
dec
mov
testb
cli
sbb
pop
inc
xchg
push
loop
popa
outsl
and
ds
mov
sti
jge
sbb
jb
loop
adc
call
push
rcrb
xorl
adc
pop
call
out
inc
lret
les
xor
sbb
cmp
mov
imul
stos
sti
outsb
lret
and
xor
xor
sahf
and
das
lret
jb
int
add
adc
das
add
xchg
inc
dec
push
push
sti
mov
ret
and
jne
mov
or
or
jmp
mov
adc
aas
xchg
mov
push
cmp
mov
mov
inc
test
pop
ja
leave
sbb
cmp
daa
jle
cmc
lods
loopne
mov
dec
inc
sub
sarb
fmuls
sbb
inc
imul
jno
negl
dec
cmpsb
pushf
xlat
mov
lcall
sbb
outsl
push
jmp
xor
repz
fdivs
or
mov
cld
adc
roll
pop
or
mov
pop
sahf
mov
fdivs
out
jmp
xchg
jge
rcll
movsl
inc
jp
add
in
push
in
cmc
mov
enter
and
cmp
mov
pop
mov
scas
repz
sub
aad
cmp
dec
and
xchg
jbe
add
pcmpgtd
lods
inc
int
inc
xchg
pop
cmovns
inc
popf
cmp
or
jge
lss
mov
or
outsl
mov
adc
test
mov
fmulp
jb
inc
sub
repz
jb
mov
pop
inc
pop
jbe
shlb
int
push
or
clc
adc
adc
ljmp
push
pop
in
stos
add
mov
inc
adc
jo
pop
insl
fadds
scas
in
repnz
pop
das
mov
xor
testl
cmpsl
mov
mov
stos
inc
sbb
and
sbb
cwtl
jmp
jl
push
dec
repnz
dec
sub
cmpl
mov
pop
pop
adc
jbe
lods
loopne
movsb
das
cld
lods
sahf
in
pop
cmp
sar
add
jbe
mov
inc
cmc
xor
out
shl
aas
inc
or
adcb
imul
mov
test
push
sahf
push
repnz
std
stos
in
mov
pop
scas
mov
add
in
inc
xor
imul
daa
push
push
fwait
add
cmc
xchg
pop
xchg
mov
xor
or
andl
cmp
dec
call
mov
xchg
cmpsl
mov
lahf
add
popf
xchg
out
int
aam
imul
pop
cmp
lock
and
outsb
add
mov
add
mov
mov
jl
lea
clc
repz
inc
sbb
and
push
inc
pop
cmp
test
lods
sbb
movsb
fsub
jge
outsb
jno
add
stos
pop
imul
add
inc
je
push
cmpsb
and
les
sub
loopne
dec
xchg
mov
imul
jno
inc
mov
adc
cli
clc
ret
xchg
stc
shlb
shlb
mov
rcll
or
rolb
test
push
repnz
cmp
mov
dec
sbb
imul
mov
and
dec
cmp
mov
cmp
jb
lcall
and
icebp
inc
stos
cld
ljmp
xchg
je
adc
mov
int
icebp
adc
enter
sar
lcall
push
sub
mov
mov
xchg
sub
repz
or
sbb
fsts
add
int
xchg
mov
lret
enter
jb
jne
cltd
imul
movsl
sub
addr16
cmp
inc
push
lods
movsb
shl
scas
jecxz
mov
std
xchg
mov
push
insb
lret
inc
and
push
js
xchg
insb
ret
or
adc
insb
sar
loopne
enter
push
lcall
repz
lea
scas
cmp
mov
mov
add
divl
popa
dec
mov
cmp
pop
adc
in
cwtl
adcb
imul
pop
icebp
xchg
xchg
jg
xchg
xchg
lock
xchg
jg
out
testl
out
mov
mov
jg
xor
js
rorb
jmp
into
mov
mov
adc
les
int3
sub
pop
or
mov
int
xchg
daa
mov
fadd
int3
adc
cli
int
arpl
xor
cld
mov
sbb
cmpsl
xchg
into
and
div
stc
mov
add
rclb
je
push
scas
dec
inc
cmp
dec
xor
dec
xchg
mov
stos
jae
lret
dec
fwait
fs
adc
cmpsl
or
cmp
aam
mov
hlt
mov
adc
sub
cltd
pop
mov
adc
rcll
nop
loop
pop
xlat
lock
adc
mov
mov
call
in
jns
push
jmp
pop
cwtl
mov
mov
inc
int3
add
cmc
pusha
int3
pop
sahf
pop
push
and
adc
bound
outsb
repnz
mov
adc
push
and
sbb
fisubrl
cltd
cmp
push
xor
dec
cwtl
ret
inc
sbb
cmpsl
push
call
call
cmp
dec
cs
daa
orb
fldl
data16
jo
fstpt
push
popa
in
dec
pop
inc
push
xor
hlt
or
and
mov
clc
and
sbb
std
jp
lock
lods
xchg
xor
mov
daa
shlb
insb
loope
filds
mov
mov
mov
nop
inc
cli
mov
adc
xchg
push
pop
inc
sti
pop
fwait
or
mov
lds
adc
gs
push
mov
adc
test
or
ret
pop
sub
cmp
mov
pop
sub
pop
scas
sub
sbb
cli
add
test
mov
fsubs
aaa
into
ret
cltd
pop
mov
dec
ror
cld
add
inc
dec
lds
pop
gs
mov
shlb
pushf
ss
lret
add
push
mov
sbb
das
inc
insl
cwtl
push
and
lahf
test
mov
jg
iret
int3
in
pop
inc
sbb
add
jo
mov
or
or
inc
adc
test
mov
and
and
xchg
add
push
sbb
ret
mov
jmp
cltd
out
inc
outsb
cmp
dec
add
pop
ret
sbb
pmulhw
insl
ja
inc
push
icebp
test
jecxz
mov
add
pop
dec
mov
dec
fldt
outsb
popl
repnz
ds
add
lds
mov
int3
inc
mov
test
popl
xchg
in
and
fwait
pushf
fdiv
mov
add
mov
mov
scas
cmp
sbb
xchg
scas
ret
sbb
push
cltd
cmp
sub
sub
push
mov
xlat
js
inc
scas
cwtl
jbe
ret
mov
sbb
aas
and
dec
pusha
sti
shr
lock
push
cmp
not
pop
mov
jge
and
xor
jge
ljmp
mov
das
pop
adc
into
jns
push
mov
dec
mov
in
mov
std
dec
cmpsl
jl
stos
jne
loop
dec
pop
icebp
jns
mov
lds
int
fadds
pop
out
popf
int3
mov
adc
adc
push
inc
sbbb
std
dec
cld
fwait
add
xchg
push
cmp
adcl
loop
jp
pop
jbe
sbb
lods
push
mov
mov
jle
pop
inc
push
outsl
mov
cmp
dec
mov
mov
pop
daa
dec
sub
xor
jnp
sub
arpl
cmp
cwtl
sbb
mov
ficompl
sbb
push
mov
es
or
pushf
ljmp
push
jl
and
adc
repnz
test
or
sti
sbb
lds
outsb
cmpsb
popa
or
add
sbb
inc
lcall
test
shll
imul
adc
mov
or
xchg
aad
mov
pop
fs
xchg
xorl
cli
fisttpll
mov
dec
in
enter
jo
pusha
scas
clc
fstpt
nop
inc
das
xchg
sub
mov
lret
cmp
jmp
adc
scas
push
sub
movsb
inc
outsb
add
lret
outsl
cmp
mov
popa
mov
and
xchg
add
mov
dec
xchg
lret
cmpsl
lea
daa
or
inc
inc
mov
or
daa
push
mov
inc
js
in
int
xor
mov
pop
sbb
enter
cmp
movsl
fcomip
dec
cmp
inc
stc
insb
and
and
pop
nop
fisubrl
or
ljmp
sub
mov
mov
sbb
fistl
iret
call
dec
bound
and
repz
and
inc
add
xchg
push
mov
pop
cmp
xor
sbb
hlt
xchg
mov
sub
jg
and
jne
dec
mov
rclb
loopne
xchg
xor
aad
cmp
and
loop,pn
sub
and
add
sbb
and
add
pop
das
xchg
or
mov
and
mov
push
gs
add
and
test
es
xchg
mov
enter
xlat
out
cmp
dec
in
data16
das
inc
mov
out
jmp
jge
mov
outsb
push
jmp
cmp
outsl
adc
sub
cmc
sub
lea
into
outsl
mov
into
mov
mov
mov
sarb
icebp
pop
test
mov
jbe
mov
andl
and
dec
daa
arpl
cli
movsb
shll
out
fisubrs
inc
and
push
sahf
insb
scas
xor
ja
add
sbb
dec
test
or
pop
push
movsb
dec
std
cmp
sub
loope,pt
aas
or
popa
pop
out
jg
xor
sub
lock
push
or
jns
ds
jmp
mov
inc
fwait
mov
sbb
stc
and
add
xor
lods
xchg
add
dec
and
lret
ret
pop
sub
pop
sti
xor
fnclex
dec
enter
or
or
jbe
cld
and
mov
subl
out
daa
pop
movsl
dec
lods
out
and
andl
pop
cmpsl
pop
rcrl
and
out
test
loope
aaa
and
ljmp
sar
push
cmp
add
push
sarl
dec
ja
sub
push
leave
outsb
mov
and
push
fimull
pushf
mov
nop
cs
inc
out
mov
movsb
sahf
dec
push
adc
lods
add
repnz
mov
and
loope
pop
ret
mov
mov
imul
ret
mov
data16
rcrl
xor
mov
jp
xchg
fs
mov
movl
enter
sbb
xor
mov
xlat
shrb
das
pop
lods
xorl
xor
aas
mov
cmp
jo
std
daa
mov
fidivrl
sbb
pusha
xchg
loop
shr
pop
pop
jge
dec
pop
push
aam
and
nop
add
ret
fwait
mov
xchg
nop
lods
xchg
cmpb
sub
sarl
pop
adcl
rol
fnsave
ljmp
jg
std
fildll
push
pusha
push
xchg
adc
inc
inc
sub
ljmp
test
mov
pop
sahf
dec
xlat
or
push
mov
test
sbb
sub
sti
or
pop
shlb
paddd
aas
push
jecxz
sub
or
sub
vphsubbw
inc
pop
cmc
cwtl
mov
icebp
pop
mov
mov
push
inc
loopne
jne
push
int
push
adc
inc
jg
hlt
sub
adc
mov
adc
rcll
cmp
xchg
scas
and
mov
bnd
enter
das
mov
cwtl
addl
mov
mov
loopne
push
cmp
xor
je
in
push
dec
dec
movsl
aas
imul
test
insb
or
and
sub
mov
scas
ret
pop
jne
xchg
add
jge
jae
mov
lds
pop
inc
mov
pop
lds
sbb
mov
movsl
ja
loope
cmp
jns
jnp
idivb
dec
mov
sub
aam
adc
sbb
sub
addl
insb
adc
mov
testl
outsl
sub
stc
js
mov
ljmp
cmp
enter
push
push
add
movsl
or
inc
iret
jle
arpl
dec
xor
in
adc
sbbb
ret
dec
jge
or
mov
mov
mulb
outsl
test
popf
dec
popf
mov
cmpsb
mov
or
cmpsl
lods
je
xchg
addr16
sbb
shlb
outsl
add
ret
sub
sarb
js
stos
or
pop
mov
cmc
cmp
adc
pop
out
jg
pop
jnp
add
or
scas
xlat
mov
pushf
inc
add
xor
adc
cmp
ljmp
out
mov
cli
mov
adc
loope
loope
insl
pusha
sbb
in
xchg
push
cld
cmp
jae
insl
push
sub
repnz
mov
cld
jecxz
sub
cli
adc
mov
int3
out
fcmovu
push
xchg
xchg
orb
insl
inc
mov
out
addr16
dec
mov
pop
pop
scas
leave
jp
mov
xchg
insl
repnz
out
hlt
das
push
mov
leave
insb
mov
xchg
outsb
sbb
insl
xchg
outsb
sbb
outsb
icebp
push
dec
push
fidivrl
xor
push
mov
ljmp
sbb
or
jmp
lds
cmp
lods
sti
mov
and
or
int
addb
sub
repnz
in
cltd
push
enter
push
mov
xchg
cmp
movsb
lds
push
sbb
jmp
orb
jns
jecxz
movsb
adc
jbe
popf
aad
fcomi
je
jnp
aas
cwtl
dec
popa
mov
pop
fbld
dec
mov
pop
test
imull
adc
loop
dec
ss
sbb
pop
xor
std
in
push
and
push
ss
jle
and
and
cwtl
lret
jnp
dec
loopne
add
pop
popa
std
and
in
ss
push
lahf
ja
and
push
jo
imulb
push
or
std
fdivrl
mov
cmp
in
add
sub
cmpsl
pop
arpl
cmp
xchg
jne
and
and
rorb
or
jae
push
mov
shll
or
ds
fmull
decb
and
test
dec
inc
gs
mov
repz
ss
popa
repnz
int
sbb
pop
int
rep
out
pushf
enter
pop
cmp
mov
lock
xlat
jge
outsl
inc
xor
sbb
and
stos
jle
add
xchg
mov
data16
sarl
addr16
insl
add
pop
mov
je
out
xchg
popf
arpl
jg
ficomps
int
mov
in
dec
stc
add
pop
icebp
cli
sahf
int3
iret
int
cs
cmpb
out
lods
sub
push
or
lcall
lds
enter
adc
repz
adc
aam
push
out
ficomps
push
cmpsl
mov
out
movsb
xor
loope
mov
in
sbb
add
sbb
cltd
xchg
je
subb
xchg
js
gs
pushf
jle
nop
push
lock
cmp
pop
mov
sti
mov
rolb
jo
loope
cmp
jbe
ja
jl
clc
inc
ret
fcomps
aad
push
add
out
aas
push
add
mov
and
shrb
jae
negl
aas
dec
mov
xor
roll
scas
std
xchg
mov
scas
mov
ss
stos
das
pusha
cmp
or
nop
arpl
add
adc
mov
sbb
sbb
rcl
pop
test
popf
mov
mov
ror
xchg
add
inc
mov
sbb
sbb
into
in
ficomps
imul
and
push
lods
pop
xchg
into
fcompl
cltd
ret
adc
rcl
aam
sbb
popf
cmpsl
sbb
jecxz
add
xor
adcb
add
sub
dec
xchg
andb
inc
outsl
jae
add
mov
and
jo
clc
mov
out
rcll
jle
or
adc
rorb
test
mov
lds
inc
aaa
sub
addr16
sbb
std
dec
lea
aaa
fistpll
lcall
f2xm1
sbb
mov
sbb
xchg
jmp
sbb
js
add
js
cld
scas
pop
xchg
fwait
cmp
push
and
push
xlat
shlb
mov
mov
subl
pop
or
xchg
pushf
outsb
or
and
xorb
and
xor
adc
mov
lds
xchg
leave
adc
aad
jge
dec
cli
push
sti
inc
jmp
pop
cmp
push
mov
add
sbb
imulb
mov
push
addb
shrb
test
fnstcw
lds
push
and
jmp
jecxz
mov
les
xorb
in
movb
mov
imul
add
aam
inc
mov
push
cli
adc
and
pushl
fdivp
stc
sub
push
inc
dec
mulb
stc
sub
dec
xchg
xor
push
fisubrs
adc
jle
outsb
les
fs
cmp
mov
cmp
sahf
cmp
adc
cmp
or
mov
jp
jle
pop
pusha
imul
das
rcrb
mov
mov
cmc
movl
lret
dec
aad
jnp
adc
in
or
pop
and
cmp
bound
orl
or
adc
xchg
jg
jp
dec
jp
jne
imul
loop
enter
cmc
jle
scas
stos
dec
cmpsb
or
and
repnz
sbb
xchg
scas
mov
bound
insb
add
test
ljmp
pushf
daa
add
dec
mov
add
xchg
daa
cmp
test
xorb
pop
aaa
push
add
inc
cmpsl
dec
mov
inc
and
xchg
sbb
out
adc
mov
stos
fidivs
pop
jno
ds
bound
bound
in
out
inc
adc
xchg
movsb
icebp
aam
or
pusha
mov
testb
and
add
mov
and
push
push
jecxz
pusha
sub
cmp
icebp
dec
xchg
lret
and
test
dec
jbe
idivl
pop
mov
lea
outsl
push
sbb
mov
inc
mov
xchg
lds
jae
insl
rsm
pop
shll
mov
aam
lods
fdivs
dec
test
imul
pushf
repz
push
push
jmp
cmp
inc
pop
mov
adc
stc
scas
inc
outsb
test
pop
jae
jp
fcompl
cmp
sbb
test
sahf
dec
addb
mov
inc
cwtl
xchg
std
fsubs
test
pop
in
lods
shlb
sbb
int
cmp
or
ljmp
dec
xchg
insb
push
mov
pop
push
xor
add
in
mov
xor
mov
and
push
push
jnp
and
stos
or
cmp
adc
dec
pusha
mov
xchg
loopne
stos
fs
loope
enter
test
and
inc
daa
pop
aas
in
xor
sbb
ror
roll
pop
jnp
mov
shrl
lea
adc
xchg
outsb
test
int3
sti
notl
sbb
in
ret
movsb
inc
or
repnz
xchg
mov
add
testl
leave
cs
inc
aad
imul
and
in
call
shrl
rcrl
pop
xor
adc
cltd
lods
xchg
sbb
ja
jg
cmp
ret
stos
adc
xchg
mov
clc
xchg
es
pop
fisttpll
xor
je
add
mov
pushf
mov
push
in
imul
cmp
cltd
and
xor
push
dec
xlat
leave
pushf
out
aam
push
shlb
mov
clc
adc
fdivrl
cltd
xchg
add
mov
inc
sub
scas
cltd
push
ljmp
push
add
push
dec
sbb
fwait
xor
out
cmc
push
out
repz
add
mov
insl
gs
shl
mov
mov
or
fisubrs
jle
inc
jb
test
arpl
xor
dec
push
lea
ja
outsb
ss
mov
lods
les
fnclex
cmp
jnp
test
ss
mov
sbb
mov
cld
in
pop
pop
scas
stos
testl
je
pop
bound
fcoml
cmp
imul
jmp
scas
cltd
jle
push
fcompl
filds
decb
and
repnz
ja
inc
cmp
inc
push
inc
shr
popa
jo
mov
push
imul
test
cmp
xchg
cs
les
adcb
push
or
inc
add
mov
nop
cwtl
mov
test
leave
clc
xchg
mov
xchg
or
mov
push
lcall
lods
and
cmpsl
lahf
cmp
divl
arpl
cmc
xchg
or
pop
inc
push
sub
push
adc
loope
ret
xor
push
xor
dec
decb
popf
popa
lea
rcll
in
mov
es
sbb
mov
xchg
push
mov
mov
pop
cs
mov
dec
or
fmull
inc
pop
xor
fwait
or
mov
xor
inc
cld
lret
mov
sbb
cmpsb
mov
pop
pop
sbb
bound
xor
in
jo
and
mov
inc
xor
cmpb
pop
jecxz
push
std
sbb
jo
add
mov
xchg
and
enter
enter
cmpsb
enter
popf
dec
sarl
scas
lods
dec
pop
mov
mov
adc
data16
adc
add
mov
movsb
rcrb
cmpsb
aas
jmp
call
lds
aas
add
mov
out
out
push
xchg
add
xor
andl
xor
daa
out
mov
jae
je
sbb
cmpsb
dec
xchg
out
push
out
or
aas
jg
movl
jae
mov
in
pop
pop
pop
push
sahf
mov
xchg
mov
and
dec
jl
sbb
in
addl
fimuls
rclb
add
jo
push
ret
cmc
and
fiadds
mov
add
leave
dec
ret
and
daa
adc
pop
rcrl
jns
or
fmuls
in
ret
ss
pusha
in
sbb
inc
pop
movsl
shlb
xchg
ret
test
jne
inc
addr16
mov
arpl
shrl
ficomps
add
fs
xorl
jae
shrl
push
repnz
cmp
sbb
lds
dec
xchg
insb
and
call
cs
ret
imull
dec
mov
xchg
or
cmp
sbb
xorl
mov
sbb
mov
clc
add
jb
cmpsb
mov
xchg
out
lods
xlat
stc
mov
or
movsb
add
jle
or
xchg
icebp
loop
jle
test
sti
xor
push
mov
nop
push
add
popa
xor
push
pop
mov
je
xchg
cs
dec
stos
jl
or
repnz
mov
ds
add
stos
sbb
sbb
dec
por
inc
sub
dec
push
movsb
ret
xchg
out
out
sub
push
cmp
popa
ss
sbb
dec
sbb
mov
fidivrl
pop
pop
repz
sub
pop
cmp
outsb
mov
hlt
nop
lcall
push
mov
cld
imul
push
or
ss
mov
adc
mov
sti
add
pop
inc
popa
imul
adc
add
dec
ret
xor
test
pushf
call
aas
addl
xchg
aas
cli
dec
popa
jge
pushl
movsl
xchg
pcmpeqb
jae
sbb
fldt
cli
imul
es
push
and
aaa
pop
jge
fistl
add
cmp
ljmp
xchg
jg
xchg
fwait
repnz
cmpsb
rcrl
lcall
pushf
stos
sahf
xor
cltd
into
lods
xlat
and
fldenv
inc
add
out
xchg
push
xchg
mov
add
mov
xchg
pop
lret
jmp
mov
dec
imul
pop
push
out
cmp
in
mov
push
push
inc
out
jo
cmp
cs
xchg
fs
cmpsb
mov
fwait
outsb
add
out
adc
scas
xor
mov
aad
pop
sbb
in
js
pop
repnz
cmpsl
inc
xor
inc
mov
nop
js
aad
imul
and
je
pop
jb
bnd
push
inc
scas
inc
in
push
int
out
or
push
movsb
mov
mov
daa
aas
sbbl
daa
push
jecxz
and
addl
fcompl
inc
cwtl
push
leave
adc
fmull
cld
jbe
mov
cmp
test
and
fidivl
or
dec
cltd
sub
sub
adc
and
cmp
imul
xor
or
xchg
xor
xchg
push
sub
shlb
cmp
ljmp
add
xor
stos
mov
scas
bound
mov
out
mov
in
inc
lods
ss
and
inc
leave
and
pop
cmp
ja
loopne
pop
jb
imul
imul
mov
adc
adc
fstpl
push
addl
xor
dec
push
movsl
cwtl
cmc
add
push
aaa
test
jg
inc
lcall
inc
lea
pop
xchg
ja
push
mov
fwait
push
jb
fidivrl
shlb
lea
add
jmp
xchg
xlat
cld
mov
sbb
cmpsb
or
sbb
xor
adc
or
scas
push
xchg
orb
adc
dec
daa
push
outsl
xchg
xchg
lea
pop
xor
pop
jg
pusha
jnp
mov
push
iret
pushf
lret
lea
xor
or
and
and
cld
rcl
mov
push
jae
mov
jg
fidivs
mov
mov
adc
arpl
fstps
ds
mov
add
cmpsb
insl
cmc
jl
sar
int3
xor
xor
sbb
mov
lret
out
cmp
enter
repnz
jecxz
mov
xchg
mov
adc
lret
mov
xor
popa
push
xchg
mulb
xchg
cmpsl
cs
cwtl
push
pop
popf
add
enter
int3
mov
and
xor
cmp
mov
movsl
add
mov
cmp
mov
inc
hlt
mov
fdivs
shll
repnz
mov
xlat
mov
pop
in
dec
inc
mov
jns
dec
pop
stos
pushf
cmpsb
scas
in
dec
scas
ljmp
int
mov
negb
loopne
stos
xchg
push
in
and
push
xchg
je
cmc
repnz
aas
mov
or
and
out
sahf
inc
shll
stos
jo
or
pushf
outsb
adc
cmc
mov
pop
mov
sub
outsb
push
daa
mov
xchg
pop
push
add
xor
test
jge
adc
cmp
cltd
es
cmp
aad
popa
mov
inc
shl
pop
xchg
cs
leave
daa
es
mov
or
enter
jecxz
fnstenv
rclb
scas
mov
lods
cs
insb
lods
mov
test
les
int3
push
js
add
add
daa
push
daa
dec
cmp
movl
movsb
icebp
xchg
jg
push
fisubs
jecxz
jp
je
adc
xor
scas
mov
sub
inc
push
test
xor
fimuls
lods
daa
js
imul
mov
pushf
xor
mov
ss
out
cmpl
in
shlb
inc
sub
sub
jl
cmp
sub
pop
sub
dec
dec
stc
sub
in
and
pop
mov
gs
sbb
std
rcl
dec
dec
add
das
pop
enter
fiaddl
nop
shll
mov
mov
aas
cmpsl
jno
movsl
scas
outsb
jne
shll
into
addb
xchg
pop
call
repz
lds
mov
add
ret
lock
push
xor
les
dec
repz
sbb
cmp
cmc
call
cmp
pop
dec
xchg
sbb
mov
add
test
inc
shlb
stc
lahf
adc
mov
imul
stos
shrb
mov
push
mov
cld
test
mov
mov
movl
mov
aas
push
fwait
push
ret
jg
movsl
xchg
or
mov
outsb
jmp
mov
popf
adc
fistps
test
xchg
inc
cmp
cmpsb
je
pop
inc
dec
pushf
push
std
shlb
xchg
mov
and
mov
mov
aas
push
lock
push
jno
or
mov
lods
xchg
mov
sub
xlat
lahf
nop
clc
stc
mov
mov
inc
sub
sub
in
in
sahf
test
clc
xchg
add
jl
push
mov
and
adc
jl
dec
imul
pop
incb
imulb
add
mov
dec
or
std
adc
push
inc
cmpsb
hlt
lret
movl
or
sub
push
cmp
xor
jmp
test
ret
ret
inc
cmp
clc
outsb
xlat
es
mov
cwtl
mov
xor
jecxz
pop
fdivs
mov
and
cmp
inc
adc
outsl
push
sbb
inc
mov
clc
mov
inc
jb
stos
sbb
outsl
fcoms
and
sub
jp
push
and
inc
xchg
neg
movsb
loopne
inc
and
and
mov
push
movsl
sbb
jmp
fwait
jmp
adc
out
dec
in
cmp
jbe
mov
sti
in
xlat
lahf
xor
mov
btc
push
sahf
loopne
into
push
mov
cltd
pop
fwait
and
mov
add
and
aas
popa
xchg
sbb
cmp
add
gs
aas
and
mov
lea
jmp
enter
mov
pop
mov
cmpsb
jno
ficoml
repnz
test
xor
cli
bnd
leave
in
xchg
imul
or
fnstenv
out
dec
adc
fidivl
stos
xchg
clc
pushf
fdivs
jg
jno
sub
cmp
push
sarb
divb
sbb
loope
add
mov
mov
mov
add
cmp
inc
mov
mov
push
insb
push
inc
jo
pushf
test
jge
cmp
sub
es
pop
imul
cltd
fdivp
aaa
lods
cmp
cli
mov
mulb
imul
shlb
test
mov
ja
push
fcoms
test
mov
adc
add
or
not
mov
or
int3
mov
lea
popf
out
sti
add
loopne
rcrb
gs
in
push
pop
rcll
sbbl
aam
inc
test
mov
insb
add
sbb
jg
ss
dec
or
push
or
fwait
adc
fucomp
stos
mov
jnp
and
jno
pusha
mov
push
lcall
dec
jae
outsl
or
in
out
movsb
les
jns
out
xchg
inc
or
mov
sub
sbb
rcrl
sbb
inc
sahf
cli
mov
mov
dec
cmpsb
sub
leave
rolb
test
xor
inc
sub
add
sbb
xchg
incb
pop
cs
inc
sub
sti
inc
roll
mov
dec
adc
dec
idivb
mov
push
adc
and
mov
icebp
sub
push
ret
pop
adc
sub
in
or
lock
xchg
inc
mov
dec
iret
xchg
out
les
sbb
lret
mov
dec
pop
mov
jecxz
clc
out
dec
inc
mov
xor
mov
push
dec
push
movsb
dec
mov
lods
lcall
sbb
aad
dec
mov
xor
sarb
inc
mov
jmp
mov
cmpsl
mov
and
sahf
add
outsl
aaa
in
dec
pop
mov
mov
jne
add
nop
xor
sahf
adc
inc
inc
fisttpll
add
push
ret
jnp
ss
mov
xor
or
or
mov
repz
daa
pop
lods
push
loopne
std
jo
imul
add
mov
out
pop
sub
adc
addl
loope
ret
adc
test
popf
xchg
jg
mov
shl
shl
and
andb
push
jmp
adcb
sbb
xor
ret
stos
loopne
outsb
xchg
mov
outsb
sti
lret
xor
or
add
sub
xor
call
cmpb
mov
mov
and
lret
mov
fwait
lods
add
and
cmp
mov
dec
add
push
and
inc
into
cmp
push
mov
shrl
and
dec
mov
jg
ret
dec
sti
cld
push
int3
jo
add
jae
xchg
dec
inc
sbb
std
and
out
mov
nop
pop
jecxz
or
mov
das
lcall
iret
mov
scas
jcxz
jg
sarl
mov
dec
xchg
in
push
mov
mov
in
push
or
cmpsb
test
out
cwtl
mov
ljmp
sti
or
push
xchg
push
imul
fisttpl
adc
jl
sbb
cmp
mov
sub
xor
loope
lock
xchg
sbb
dec
sub
push
or
out
pushf
fnstenv
xor
jge
icebp
sbb
in
pop
ss
mov
leave
add
jnp
je
or
inc
or
bound
sub
mov
xchg
jmp
mov
mov
call
inc
xlat
shlb
hlt
jg
hlt
xchg
sub
push
mov
pop
addl
inc
jae
out
imul
xor
and
scas
jecxz
dec
jbe
mov
inc
faddp
and
js
push
adc
imul
cmp
in
incb
xchg
scas
xor
fsubrs
out
pop
pop
enter
push
cltd
cmpsb
fmull
addr16
or
outsl
push
cmpsl
or
ret
icebp
cmp
sbb
stc
stos
movsl
inc
rclb
and
cmpsb
aad
pop
loop
mov
hlt
xchg
in
jecxz
repz
jo
mov
mov
lret
lret
pop
and
roll
add
xchg
mov
mov
subl
imul
sub
lods
daa
ss
adc
mov
push
inc
cmpsb
pop
sub
out
cmp
es
adc
aas
jmp
mov
out
sbb
add
pop
sahf
dec
ret
mov
in
ret
call
adc
sub
jo
imulb
mov
adc
ret
in
das
sbb
xor
or
aas
je
hlt
dec
in
inc
inc
xorl
xlat
orl
dec
es
mov
xchg
jns
shrl
rclb
stos
and
and
pop
add
xchg
and
fdivs
or
clc
lea
or
or
addr16
inc
mov
add
push
out
mov
js
ret
in
push
mov
mov
mov
stos
push
jmp
clc
daa
sub
sahf
iret
or
xchg
sub
out
out
jo
cld
aam
lret
adc
jae
xor
aas
das
adc
xchg
dec
stos
mov
test
imul
gs
push
cli
jne
sbb
jecxz
sbb
pop
pop
clc
nop
inc
mov
ja
mov
mov
xchg
loopne
xchg
push
daa
outsb
rorl
jns
adc
sbb
sub
inc
jne
das
adc
inc
scas
xchg
ficomps
cmpsb
cmp
popf
clc
mov
movsl
push
in
mov
cmp
cwtl
cwtl
inc
aas
pop
loop
jmp
jge
cld
pop
inc
popa
mov
aam
push
iret
stc
jmp
fcmove
cmp
stos
mov
insl
jno
iret
adcl
andb
pushf
pop
repz
cmp
xlat
scas
outsl
sbb
lods
jnp
movsb
or
mov
clc
jl
mov
cmp
mov
mov
pop
rclb
push
scas
jne
fwait
add
inc
aam
fisttpll
jae
push
push
stos
insb
sub
shrl
shll
adc
fimull
daa
int3
adc
add
icebp
test
out
pop
stos
clc
aad
jno
sbb
cmp
cmp
in
mov
in
push
inc
push
add
sbb
push
arpl
out
mov
and
cmp
jp
sbb
dec
imul
add
fstl
mov
xchg
xchg
nop
mov
stos
push
mov
jno
jnp
fwait
and
mov
jno
sbb
cmp
fildll
inc
lods
xchg
lea
xchg
fidivrl
das
push
movl
stc
cs
inc
lret
cmpsb
jo
mov
and
scas
push
inc
rolb
sub
xor
insl
mov
cmc
push
and
push
stos
in
stos
in
mov
std
movsb
inc
adc
xor
inc
imul
stos
pop
sahf
and
mov
inc
mov
aas
jmp
push
xor
add
mov
pop
push
push
ds
sub
cs
pop
push
enter
lock
fldcw
dec
iret
mov
je
inc
jne
cld
or
in
into
jg
xor
cmpl
incb
mov
push
push
fidivrl
sahf
int3
pop
push
or
cmpsl
dec
xlat
les
cmpsb
inc
mov
add
dec
repnz
in
jbe
dec
pushl
ds
mov
dec
push
inc
mov
dec
jle
ror
mull
adc
dec
pop
cld
out
inc
inc
sub
mov
pushf
lret
lahf
and
cmpsb
cmp
and
cld
cmpsb
dec
jg
sub
sbb
mov
mov
add
xchg
sbb
ret
adc
repnz
dec
sub
int
mov
push
dec
push
fnstcw
enter
mov
xchg
mov
test
mov
in
popa
and
dec
cltd
clc
sarb
mov
adc
ret
mov
and
jno
pop
and
aad
cmp
enter
jp
jle
sub
js
dec
jmp
jns
scas
icebp
mov
and
imull
jo
jle
or
cmp
stc
push
inc
bound
inc
pop
rolb
cs
nop
sbb
imul
lea
inc
setg
fwait
les
insl
loope
popa
lret
scas
cmpsb
cmpsl
adc
and
add
testb
or
adc
test
xor
shl
or
add
mov
movsl
decb
dec
popl
js
out
push
sbb
push
add
jns
mov
stc
gs
in
cmc
pop
xchg
xlat
pop
mov
cwtl
rcrb
andl
nop
pop
hlt
or
add
sub
cmp
lea
adc
dec
sub
push
cmp
mov
lods
sti
push
icebp
adc
jl
xchg
in
jno
mov
pop
mov
jmp
jno
rorb
rorl
sub
xor
push
idivl
movsl
pushaw
dec
cmp
filds
daa
leave
inc
mov
dec
and
pop
movsl
xor
stos
test
mov
jg
stos
insl
outsl
fwait
gs
mov
pushf
mov
out
fisttpll
push
dec
jge
popa
adc
roll
mov
out
fwait
mov
inc
fadd
insb
jb
cld
mov
mov
sub
pop
mov
mov
push
sub
outsl
jmp
jp
aaa
lahf
mov
sbb
mov
mov
push
or
inc
addr16
dec
mov
add
enter
dec
pop
mov
cmc
lods
cmp
cmp
in
jo
adc
ss
mov
ret
push
mov
test
dec
je
and
insb
mov
xchg
mov
or
stc
dec
jg
loop
add
sarb
jo
xchg
or
push
call
shll
dec
faddl
dec
mov
scas
out
mov
push
mov
lcall
mov
push
jo
mov
jecxz
jnp
popf
mov
sti
inc
je
js
repnz
xor
lock
push
cmp
xchg
into
xchg
cs
fstpl
fstl
mov
jmp
stos
or
insb
jle
movsb
push
mov
xor
adc
ds
repz
add
test
or
jp
sub
arpl
mov
leave
adc
sub
cs
mov
xchg
pop
sub
out
stos
jmp
mov
push
fmul
lock
hlt
add
dec
add
sub
int
out
test
mov
jmp
push
scas
punpcklbw
insb
pushf
push
cmp
int3
out
mov
pop
addr16
aaa
test
jo
jge
push
mov
fiadds
lods
repz
scas
jnp,pt
lds
cmpsl
ret
shlb
sub
jo
push
lock
push
lods
inc
jo
push
jle
adc
and
push
pop
data16
fcoms
popl
adc
cmp
movsb
fidivl
stc
in
push
insb
lcall
jge
pusha
mov
push
ret
arpl
lcall
pop
mov
mov
stc
mov
xchg
filds
push
loop
mov
dec
sbb
push
pop
jbe
mov
fsubrs
pop
or
fiaddl
arpl
ret
loop
mov
insb
mov
mov
dec
in
or
out
movsb
popa
cmp
and
sub
inc
adc
mov
cmc
aam
sti
mov
inc
cld
pop
push
rorl
ja
fiadds
push
jne
push
clc
les
pop
sar
lds
stos
mov
shll
xor
addr16
in
cld
mov
in
aas
xlat
lods
pop
sti
mov
sbb
lahf
shlb
push
xchg
push
aas
rclb
dec
inc
mov
adc
in
fsubrp
out
dec
insb
cmpsb
into
xchg
jecxz
clc
dec
mov
aaa
mov
mov
sarb
push
stc
into
pop
jp
xchg
cmp
loopne
mov
and
popf
pusha
mov
jg
lret
ss
mov
push
adc
add
out
push
xchg
jno
add
xor
std
mov
outsb
int
pcmpgtb
shrb
das
lcall
pop
es
add
popa
or
push
sbb
and
mov
pop
or
xchg
jl
xchg
std
cld
ret
leave
pop
cmp
cmp
or
scas
or
push
dec
pop
dec
pop
mov
pop
repnz
rolb
in
pusha
fisubrs
inc
jmp
int3
mov
ficoml
fwait
sar
and
cmp
pusha
subb
cmp
mov
xor
stos
mov
test
mov
mov
or
adc
jo
mov
xchg
adc
or
xlat
mov
shll
inc
out
mov
data16
in
mov
fsubl
cwtl
fnstsw
ljmp
fwait
ljmp
ret
inc
pop
push
adc
inc
mov
mov
jne
sbb
sbb
outsb
sti
mov
mov
lret
and
xor
push
orb
pusha
mov
lahf
call
mov
or
std
lcall
mov
inc
out
in
mov
fcompl
mov
iret
dec
pop
loopne
or
lahf
push
xor
enter
push
or
test
hlt
lret
inc
fstl
bound
xor
or
cli
sub
xor
lds
jecxz
fsts
lcall
jnp
imul
sbb
push
fwait
mov
cmp
pushf
pop
pop
lods
sbb
rcl
adc
and
mov
ja
pop
int3
jmp
sub
popa
js
sub
jae
rolb
push
pop
push
test
xchg
or
pushf
ljmp
adc
dec
inc
dec
mov
or
add
cmpsb
pop
es
pop
mov
sub
inc
inc
fcomps
lods
dec
data16
mov
xchg
jmp
jns
push
dec
sub
into
in
dec
repz
rorl
mov
adc
jmp
sub
fwait
or
cmpsl
inc
les
imul
hlt
shlb
insl
or
sub
xchg
xor
sahf
movb
sbb
dec
cmp
out
pop
pushf
in
dec
dec
cli
lea
fcmove
or
ret
and
lret
push
xor
fidivl
jae
sub
dec
inc
das
xchg
or
adc
xchg
test
outsb
insb
inc
jnp
xadd
bound
lea
jmp
cmp
add
jl
jg
pop
ficompl
jl
push
jle
inc
mov
scas
cmp
test
mov
adc
imul
mov
lods
addr16
jne
pop
js
repz
mov
pop
cs
jle
or
dec
adc
jae
pop
orl
jg
sub
and
sti
and
inc
xchg
add
mov
adc
in
sub
push
mov
xchg
outsl
and
or
xchg
shrl
push
xchg
adc
xor
dec
mov
mov
mov
push
pop
loop
or
jg
daa
cmp
xchg
mov
repnz
push
pop
divl
or
jo
jo
das
test
dec
out
pop
or
pop
xchg
adc
test
push
dec
mov
gs
mov
xchg
imul
std
push
mov
dec
xor
add
out
insl
xchg
adc
push
outsl
inc
xchg
insb
push
mov
fnstenv
add
mov
cmp
mov
push
xchg
pop
or
lret
xchg
das
stos
pop
lahf
mov
xchg
repz
cli
push
pop
loope
popf
sbb
xchg
mov
mov
pop
dec
outsl
push
mov
jl
enter
mov
xchg
std
test
mov
lods
icebp
push
mov
bound
xchg
mov
mov
je
xchg
xor
jge
insb
ja
mov
or
pop
scas
rolb
daa
notb
cmp
and
dec
addr16
pop
fisubrs
sbb
test
cmp
ss
add
ss
icebp
ficoms
xchg
pop
mov
jg
lahf
ret
adc
repz
stos
int
loope
clc
lret
mov
out
fdivr
sub
dec
push
ror
xchg
js
adc
or
push
mov
ret
xchg
adc
nop
xor
call
pop
mov
jl
mov
pop
push
stos
mov
cmp
sbbb
out
ja
dec
loop
add
jnp
push
out
idivb
lret
shl
xor
aam
scas
aaa
push
popf
sbb
hlt
cmpsl
arpl
js
rcrl
adc
add
xchg
sbb
sub
dec
mov
in
mov
cmp
mov
or
inc
jns
or
in
out
icebp
inc
push
lods
or
fbstp
ret
dec
cld
jp
sbb
sbb
or
sbbl
jae
jnp
adc
insl
clc
cmp
pop
sbb
jo
and
cmpsl
mov
sub
xor
and
dec
jge
jge
push
mov
in
inc
fisubs
test
frstor
call
jge
and
imul
adc
pop
popa
pop
sbb
jo
jnp
in
lret
inc
cmp
sub
cmp
test
arpl
loopne
mov
test
jns
sbb
andl
push
jle
push
push
pop
mov
aaa
cli
shll
incb
loopne
insb
ficoms
popf
sub
push
outsb
or
add
int3
adc
rclb
rcr
sti
push
push
mov
xchg
jbe
pop
mov
jbe
adc
mov
popl
jle
jnp
pop
pop
cmp
mov
shlb
bound
in
std
icebp
xchg
cmpsl
pop
addb
xchg
outsl
sahf
imul
xchg
pop
lds
movsb
push
adc
roll
jp
leave
in
jl
pop
mov
pop
adc
je
aaa
test
and
add
and
mov
or
mov
sahf
add
xchg
jae
das
dec
dec
pop
mov
jl
mov
out
and
leave
je
or
aas
scas
and
jge
pop
test
xchg
out
push
stos
test
adc
jo
scas
cld
int3
out
pusha
and
and
mov
mov
sub
inc
loop
hlt
aas
mov
xchg
flds
ss
pop
pusha
push
shrb
mov
jb
mov
fldl
mov
xor
pop
jg
cmp
scas
or
movb
jp
mov
pop
sbb
xor
loop,pt
xor
mov
inc
mov
std
xchg
fbld
xchg
inc
xchg
ljmp
js
lret
inc
push
gs
ret
dec
cs
fcomps
and
xlat
cmp
or
sahf
and
xchg
loope
frstor
movsb
and
sbb
dec
stos
test
sub
orb
enter
inc
out
cmp
out
jmp
mov
shl
add
out
clc
ja
arpl
mov
sarb
and
into
stos
sub
fs
adc
iret
cs
aas
inc
and
dec
lret
or
pop
or
out
stos
and
lret
std
sub
push
out
pop
insl
mov
leave
and
leave
in
jne
pop
push
or
jmp
sti
hlt
popa
scas
lock
into
cmp
addl
jbe
mov
cmc
mov
mov
pop
je
inc
sbb
les
jae
mov
psllw
push
scas
clc
aam
mov
jb
xchg
mov
add
push
sbb
rcrl
loopne
cmp
bound
aaa
in
fnstenv
mov
dec
adc
jmp
push
pop
mov
roll
mov
movsb
add
js
sbb
jl
mov
iret
inc
mov
and
fisttpl
adc
inc
je
adc
push
jl
xor
shr
dec
in
push
ss
cmp
inc
jmp
add
mov
lcall
add
scas
icebp
js
popf
fs
leave
mov
mov
mov
js
jle
add
jle
test
sbb
dec
bound
out
jl
test
xchg
jp
mov
call
inc
ret
xor
inc
out
mov
outsl
lahf
push
das
andl
sub
lcall
fadd
inc
add
jo
arpl
push
mov
icebp
movsl
in
jbe
sarb
sti
rcrb
pushf
in
jp
mov
ljmp
pop
lock
pop
andl
test
and
mov
and
ja
int
pop
lcall
aaa
aad
mov
or
dec
mov
sti
lahf
cld
fwait
jnp
rolb
rol
add
aas
mov
push
es
pop
popa
aaa
loopne
jnp
or
inc
iret
push
hlt
lods
sbb
int
pushl
ret
loop
pop
scas
data16
jns
push
out
inc
adc
push
js
pop
cmp
cli
mov
leave
inc
shrl
and
ret
jno
adc
fldl
mov
jb
mov
and
add
and
adc
rcrl
aad
les
inc
inc
in
inc
sub
fs
jle
push
ret
mov
mov
lret
mov
aad
out
in
dec
add
jne
mov
mov
and
imull
or
mov
add
or
pop
out
push
test
loope
mov
addb
mov
out
or
pop
imul
cwtl
pop
test
dec
or
inc
in
sbb
jno
dec
int3
lods
insl
outsl
xor
je
add
scas
jae
enter
dec
daa
jg
jl
xlat
push
lods
jno
fisubrl
stos
push
cltd
enter
mov
dec
jmp
daa
jb
dec
aam
cwtl
xchg
inc
out
aas
fadd
pusha
fstps
sbb
insb
jge
adc
dec
jb
mov
mov
mov
pusha
lods
scas
inc
mov
lds
mov
rorl
lods
test
lahf
add
adc
aam
int3
inc
out
dec
unpcklps
mov
lock
das
ss
out
sub
insl
adc
pop
inc
push
call
pop
add
add
pop
inc
jno
sub
jo
push
mov
mov
mov
cmp
repnz
jge
cmpsb
pushf
or
cli
jmp
sub
mov
cmp
daa
cmpsb
or
dec
inc
and
mov
pop
imul
mov
sbb
and
into
pop
mov
dec
lcall
xchg
or
sbb
stos
out
and
imul
xlat
jo
sub
mov
or
test
cmp
stos
aas
sysret
mov
data16
bound
repz
add
or
pop
aas
in
aaa
daa
pushf
out
cmc
jg
xchg
xor
or
sbb
je
fsin
mov
sbb
out
adc
mov
lods
les
mov
enter
cmpsb
push
movsb
cld
stos
popa
sub
xchg
cmp
out
repnz
mov
or
jno
cmp
xchg
bound
aas
jo
mov
aaa
push
stos
pop
dec
jl
push
leave
outsl
pop
dec
jae
jl
xor
pop
inc
mov
xor
cld
std
aad
pop
add
fwait
lcall
mov
pop
jns
mov
xor
lcall
xchg
add
and
dec
add
push
lret
pop
cmp
fistpll
xchg
adc
out
lahf
insl
cmpsb
mov
sbb
adc
push
push
adc
xlat
sub
popf
adc
mov
insb
shr
push
repz
jnp
lds
adc
xor
fisttpl
adc
inc
cmp
pop
call
sar
stc
cmp
shrb
out
push
sub
mov
pinsrw
xchg
sbb
pop
dec
mov
mov
xchg
icebp
jmp
iret
daa
xor
dec
gs
test
xchg
mov
mov
fs
and
or
and
rcr
dec
cmpsb
out
xor
call
and
sbb
xchg
loopne
mov
loope
cmp
imul
pop
or
icebp
cmpsb
pop
fcoms
cmpsb
ds
jnp
pop
adc
mov
repz
jne
in
aaa
lret
pushf
sbb
call
rolb
pop
call
idivb
cmp
mov
mov
call
mov
xchg
enter
pushf
and
repz
into
mov
repnz
cmp
pusha
pop
and
pusha
mov
jmp
mov
inc
test
fldt
pop
hlt
shll
mov
ret
out
mov
aad
ret
mov
and
push
shll
xorb
push
fstps
pusha
push
adc
cmpsb
mov
add
enter
test
jl
xchg
cmpsb
inc
mov
cmp
cmpsl
ret
rcr
aad
arpl
adcl
addr16
cmpsb
hlt
jo
jl
xchg
mov
mov
pushf
js
xor
jl
leave
push
add
addl
int
jle
lea
push
and
and
stos
and
mov
cmp
sub
sbb
dec
inc
xchg
fmulp
push
mov
bound
add
pop
jge
mov
pop
mov
pop
add
push
jb
add
jnp
mov
adc
dec
mov
mov
iret
pop
or
rorb
xor
insb
and
paddusb
sub
cmp
rcr
add
es
adc
rcl
or
ds
jecxz
jno
in
mov
xor
mov
sarl
adc
add
push
cmp
jnp,pn
inc
adc
fwait
outsb
sarl
and
jecxz
js
jecxz
push
xchg
std
lcall
loope
leave
jno
shufps
push
loop
mov
fwait
add
sbb
xor
test
popa
imul
pop
pop
nop
push
in
repnz
and
les
push
enter
xor
push
add
adc
xchg
test
loope
sub
xor
arpl
sbb
lds
mov
mov
adc
dec
aam
shl
lret
les
call
rcll
xor
adc
sahf
subl
jl
popa
jmp
mov
imul
ret
repz
mov
leave
cmpsl
mov
cwtl
mov
push
mov
aas
pop
orb
xchg
rorb
dec
addr16
sbb
gs
pop
lods
jo
in
lods
adc
or
xor
sub
add
sub
dec
push
xlat
push
in
xchg
seta
pop
and
ret
or
mov
mov
mov
mov
mov
add
cmp
push
fcomp
hlt
jnp
mov
push
mov
mov
sahf
jg
cmp
scas
leave
and
jge
les
divb
sub
pop
pop
inc
stc
in
pop
mov
push
ss
pop
inc
iret
sub
jl
push
jg
pop
scas
cmpsb
mov
push
popa
mov
aad
arpl
jmp
sub
sbb
addl
pop
xchg
push
dec
rclb
dec
jne
inc
fdivrl
cmp
xchg
lret
inc
push
inc
addr16
mov
fucomp
xchg
add
jl
js
inc
repnz
fstp
dec
popa
es
jmp
fcomi
nop
pop
out
xchg
ss
pop
aas
les
or
xchg
xchg
lods
jmp
leave
repnz
inc
and
in
fcoms
jge
pop
dec
and
push
mov
jecxz
add
jge
cwtl
jo
pop
xchg
adc
inc
rcrb
out
out
push
in
popf
push
test
hlt
fucom
ljmp
fidivrs
or
add
in
enter
les
push
in
push
iret
mov
mov
clc
addr16
imul
imul
clc
pop
or
fidivrs
into
cmpsb
pusha
sahf
mov
outsb
fists
bound
adc
jmp
sub
clc
push
ds
cmp
pushf
inc
xchg
pop
testl
add
xorb
inc
jne
dec
pop
es
xchg
loop
mov
rclb
jno
and
mov
icebp
jle
lret
out
jmp
daa
adc
xchg
or
adc
outsb
push
fs
sub
push
stos
push
jecxz
iret
scas
cmc
pop
fstpl
arpl
in
or
push
mov
mov
push
popf
pop
adc
adc
mov
outsl
pop
pop
lods
lahf
shlb
xchg
xchg
or
outsb
movb
stc
test
inc
fnsave
or
dec
and
push
movb
lahf
push
dec
ret
pusha
jg
jg
cmpsl
xchg
popa
or
sbb
outsl
sub
sub
lea
negl
imul
cmp
loope
out
mov
dec
outsl
rclb
xor
outsl
enter
clc
aam
nop
xor
je
sbb
cmpsb
push
cmpsb
ss
repz
jg
pop
pop
adcl
std
mov
aas
dec
mov
jl
jae
mov
hlt
aad
sti
inc
sub
dec
xlat
add
xor
jmp
jno
negl
xchg
and
mov
sti
sti
fnsave
idivl
inc
ss
and
hlt
push
test
mov
and
mov
rcl
and
in
pop
or
sub
addb
jecxz
push
cld
rol
aaa
mov
lahf
iret
and
inc
sub
sbb
loop
and
mov
dec
mov
mov
sbb
icebp
cli
outsl
outsb
cmp
lods
test
sub
jmp
sbb
mov
xor
sbb
test
sbb
push
sar
das
cmp
adc
fsubrl
inc
lock
cwtl
jl
fsubrs
aaa
std
pusha
and
cltd
loopne
sub
mov
or
jbe
pop
sub
arpl
cmp
sbb
pop
mov
push
shll
dec
mov
adc
jb
adc
mov
scas
pop
lods
push
fistl
jge
dec
scas
cmp
push
push
sbb
mov
cmpsb
jno
push
cmpsl
mov
popf
xor
lret
cmpsb
pusha
xchg
bound
div
jge
ljmp
sub
bound
xor
adc
loopne
push
pop
cmp
mov
jno
xchg
add
sbbb
aaa
in
popf
push
xchg
mov
std
dec
popa
jmp
cwtl
shlb
aad
and
push
cmpb
inc
sahf
inc
out
cmp
add
jp
cmp
mov
dec
bound
push
dec
sub
jecxz
dec
out
mov
push
ja
or
les
push
sub
push
mov
jg
xchg
shl
push
xchg
xchg
inc
push
fstpl
adc
sti
dec
scas
stc
aas
shr
xor
cmpsl
loope
pop
adc
or
ret
fwait
jo
mov
out
cs
and
add
inc
in
jmp
bound
jne
cmpsb
shll
xchg
xchg
dec
addb
xchg
fisttpll
and
pushf
shrb
xchg
mov
popa
scas
xchg
jle
stos
nop
mov
push
mov
and
mov
adc
fucomip
mov
cmp
mov
daa
fildl
adc
stc
stos
sbb
jno
mov
inc
hlt
mov
es
or
out
jno
ljmp
int
sub
daa
or
mov
push
leave
andl
scas
shrl
sub
fistl
test
pop
xchg
mov
cmp
push
pop
push
or
idivb
in
les
loop
lds
jge
sub
lea
inc
fcomps
push
sbb
push
outsb
test
cmpsl
movsl
mov
mov
dec
stc
dec
or
adc
jp
clc
add
xlat
pop
inc
shll
inc
lcall
sbb
mov
stos
mov
mov
movb
fs
or
jo
pop
pop
outsb
jge
test
jne
dec
xchg
fsubrs
cmc
outsb
cmp
inc
dec
jmp
cmp
mov
mov
fwait
leave
ds
sub
xchg
sub
lods
cmp
mov
cmpsl
dec
lds
loop
xchg
lcall
leave
xchg
std
lods
je
dec
roll
test
insl
ds
stos
scas
xchg
inc
mov
inc
test
xor
mov
mov
insl
call
mov
mov
leave
xor
sbb
ror
cmc
sbbb
mov
and
jne
fwait
pop
push
push
in
rcrl
xorb
mov
sbb
adc
sbb
sarb
movsl
dec
sti
lahf
test
jmp
xchg
inc
xchg
das
cmp
push
aad
in
rorb
sbb
test
xorl
scas
mov
xor
das
repnz
or
dec
mov
push
popf
push
dec
addl
and
add
cmp
mov
inc
loop
pop
xchg
push
cli
testl
movlhps
aad
pop
std
jnp
lds
loope
call
cmp
shll
pop
pushf
xchg
int
jl
xchg
mov
push
mov
add
in
test
imul
cltd
fcompl
test
sarb
dec
mulps
push
xchg
dec
jecxz
mov
vcvtsi2ssl
xchg
cmp
and
faddl
shrb
repnz
negb
jmp
sub
cmp
and
xor
sub
mov
jbe
and
push
push
xchg
cmp
in
xchg
arpl
pop
adc
pop
sub
inc
xor
aaa
lds
pop
mov
xor
mov
and
jmp
inc
mov
xor
and
ret
fnstcw
insl
mov
daa
dec
je
loop
fimuls
mov
sti
xchg
push
sbb
sub
js
orb
fdivrs
dec
outsb
mov
nop
scas
mov
mov
jnp
inc
div
and
sub
xor
push
push
sub
lods
in
xor
sub
ja
cmp
xchg
and
adc
lcall
aaa
flds
push
andb
xor
sbb
jmp
out
push
mov
xor
xchg
ds
scas
cmp
pop
jmp
sti
fs
ljmp
sti
pop
add
iret
inc
bound
rorb
dec
xchg
or
into
std
fmull
shl
lea
push
inc
sar
push
push
in
stc
mov
or
adc
lods
or
adc
mov
frstor
add
cwtl
mov
xor
mov
sbb
xor
and
into
dec
leave
aam
xchg
jle
push
jle
push
dec
gs
imul
pop
inc
int3
mov
mov
out
add
cmc
mov
jne
sbb
or
push
lea
out
mov
dec
mov
jne
xchg
jmp
popf
xlat
adc
xchg
xchg
adc
jbe
xor
aaa
or
neg
dec
cli
repnz
jecxz
stos
mov
cmpsl
cltd
fwait
stc
enter
clc
in
mull
push
ss
out
sbb
icebp
jmp
mov
test
imulb
sahf
nop
movsb
adc
add
ljmp
shlb
sub
lret
cmp
jb
xchg
push
xor
psraw
jo
jmp
add
outsb
xor
shr
cwtl
push
xorb
out
pop
fwait
dec
push
fistps
and
mov
lock
jmp
xlat
inc
or
push
xchg
push
xlat
mov
jns
sbb
xchg
pusha
sbb
scas
mov
ljmp
out
mov
and
sub
push
std
repnz
and
xor
lds
pop
jne
cmp
push
in
push
inc
out
in
rcrb
rolb
or
imul
rcrb
test
pop
mov
incb
das
jp
lahf
or
and
inc
mov
sti
cmpsl
mov
sub
and
pop
pop
push
scas
pop
cmc
fwait
mov
aam
xor
or
xor
mov
lds
mov
xor
xchg
or
cmp
xlat
cltd
loopne
test
enter
out
aas
loopne
mov
add
pop
push
xchg
neg
jp
dec
hlt
xchg
jg
out
and
mov
fdivrl
sahf
jecxz
imul
dec
mov
inc
imul
sti
stos
stos
imul
test
mov
je
jns
bound
xchg
xlat
add
pop
imul
and
test
fldenv
or
mov
mov
add
cld
ljmp
push
sub
add
cmc
pop
mov
gs
jne
mov
cwtl
outsb
jl
aas
les
lock
inc
mov
or
pop
dec
push
pop
dec
add
nop
outsl
repnz
push
pushf
int3
lahf
push
test
jle
jg
jns
test
push
or
push
rcrl
and
test
dec
fmull
repz
lods
aas
add
movsb
mov
cltd
mov
xor
roll
sbb
ret
xchg
xchg
or
dec
inc
xchg
xchg
or
pop
mov
adc
xchg
sbb
fmuls
ret
inc
out
xor
add
adc
or
or
push
mov
jo
push
or
popa
mov
pop
mov
insl
ds
mov
cmp
jae
push
outsl
aaa
sti
out
sbb
out
cmp
cli
dec
je
cmpsb
cmpsl
nop
data16
push
test
loopne
cmp
fldt
clc
stc
gs
sbb
push
jnp
pop
mov
cli
pop
in
xor
jae
dec
push
out
fmuls
stos
out
xor
fsts
jae
pusha
lods
xchg
imul
adc
pop
mov
mov
popf
jne
jno
sbb
enter
push
pop
jl
jge
xlat
push
adc
inc
out
movsb
cmpsl
in
fidivl
mov
paddw
roll
loope
cwtl
test
int3
push
xor
bound
jb
jae
outsl
lcall
jnp
pop
jns
adc
or
les
mov
cwtl
or
cmp
mov
adc
ja
add
in
sahf
shrl
leave
cmp
gs
adc
sti
mov
ret
mov
cmpsl
stos
adc
xor
int3
mov
xchg
aad
mov
push
pop
jmp
xchg
aas
push
inc
test
shll
jecxz
popf
test
dec
jbe
mov
out
aas
adc
call
mov
sub
or
jp
or
mov
adc
cli
lods
push
aas
inc
aad
pop
repz
dec
mov
mov
push
aaa
test
fcom
aam
or
fisubl
add
shlb
and
mov
cwtl
or
cmp
lcall
ret
mov
and
insl
dec
sbb
inc
dec
jmp
insb
dec
pop
insb
sbb
dec
push
cmpsl
push
sahf
leave
repz
pop
int
fdivl
pop
loope
std
add
arpl
mov
test
add
mov
shlb
inc
xsaves
sarb
push
or
lcall
int
sbb
push
in
out
jne
fwait
lock
cs
out
cmp
jp
xor
push
push
push
dec
and
stos
or
test
dec
mov
mov
add
movsb
or
or
fs
dec
ja
in
into
aam
shll
add
fbld
push
push
ja
pop
and
js
xchg
dec
or
fsubl
or
mov
mov
mov
xchg
cmp
add
lret
lahf
cmp
rcr
xlat
inc
je
pop
icebp
cmpsb
frstor
xchg
xlat
sub
stos
fdivl
push
cmc
cwtl
data16
movl
arpl
fsts
mov
fiaddl
repz
inc
pop
jg
mov
sub
nop
mov
xchg
jbe
pop
mov
movsl
mov
out
push
dec
stc
sahf
pusha
popf
daa
adc
xlat
dec
or
sub
cmovge
rcl
lea
push
mov
pop
mov
fs
dec
sahf
int3
push
or
fisttps
rorb
mov
les
jl
in
out
cmp
jo
adc
xchg
mov
aad
sbb
std
xor
xlat
pop
sbb
xchg
pop
int3
fadds
pop
pop
mov
xor
mov
add
or
ds
sbb
daa
xchg
sub
or
fwait
pop
testb
shlb
jnp
xchg
into
mov
fisttpll
imull
dec
xlat
jnp
iret
xor
mov
mov
mov
dec
lods
cwtl
iret
mov
mov
sbb
add
cmp
lcall
jge
jnp
dec
sub
call
stc
jl
outsb
into
sub
shl
les
imul
lret
addb
fisubrl
lcall
fsubrs
outsb
into
adc
and
xchg
sahf
fsubr
subl
add
adc
xchg
addr16
xor
out
jp
xchg
fldl
xlat
addb
in
jge
mov
ja
sbb
mov
lea
sub
mov
and
inc
lods
xchg
jnp
fcmovnu
ds
mulb
into
nop
inc
and
pop
hlt
jmp
xchg
lds
sar
adc
or
xchg
hlt
imul
inc
sbb
jl
pop
iret
repz
adc
bound
push
push
repnz
inc
inc
mov
mov
mov
test
adc
outsb
xor
mov
adc
mov
mov
mov
loopne
jo
push
notb
mov
inc
ss
jae
xlat
jbe
cmc
mov
jb
popa
inc
fs
push
lea
xchg
pop
leave
add
in
inc
aam
daa
cli
imul
push
lods
movsb
test
psrld
add
mov
in
shrl
sahf
outsl
call
ds
test
jno
pop
inc
popf
cmpsb
pop
lcall
push
push
mov
push
jmp
insl
repnz
loopne
das
sbb
loope
cs
push
std
stos
cmpsb
test
in
lock
sub
out
insb
or
inc
or
jge
cmp
stos
jnp
mov
dec
popa
cmc
cwtl
insb
iret
cmp
mov
mov
clc
mov
lret
shll
lods
gs
fidivl
popl
xchg
adc
imul
mull
loopne
in
xchg
les
cmp
out
jo
sbb
jne
aam
je
decl
xor
out
ret
sbb
out
js
mov
mov
and
inc
push
lret
jmp
sbb
aad
cs
inc
xor
lock
sbb
jns
adc
nop
and
rol
insl
ljmp
int3
push
cmp
jmp
fbld
fcmovnbe
out
les
mov
adc
xchg
mov
mov
cmp
xchg
dec
sub
add
les
push
push
cltd
cmp
movsl
dec
jp
add
jg
out
xor
jb
mov
add
pop
push
push
out
ja
hlt
or
xor
lret
pop
insb
push
pop
cmp
movsl
sub
mov
iret
mov
in
testl
sub
fdivp
mov
jg
divb
inc
jl
fsubrs
push
cmp
mov
stos
fistl
ds
pop
or
stc
mov
imul
or
mov
test
mov
stos
cmpsb
idivl
in
push
mov
sub
jae
mov
sbb
add
mov
lcall
inc
dec
mov
loopne
xchg
and
clc
test
popf
addr16
pop
clc
mov
or
out
out
xchg
mov
std
insb
test
cmp
jmp
or
jmp
mov
notb
lea
mov
dec
xchg
jp
inc
loopne
insb
mov
lahf
push
cmp
dec
sbb
xchg
push
stos
mov
enter
aad
test
and
mov
jo
pop
das
movsl
sbb
ds
xchg
inc
in
sbb
and
fisubrs
or
push
popa
and
cmpsl
jge
jg
rcrl
fs
int3
pop
rol
inc
mov
in
subb
sub
rcll
cmovno
cwtl
nop
pop
jmp
ret
test
icebp
jne
loopne
pop
outsl
insb
inc
push
jmp
cmp
fcmovb
pop
or
cmc
adc
mov
jp
push
aad
jbe
cmpsb
pop
clc
test
cmc
out
and
rcl
cmp
sub
out
and
cs
mov
leave
icebp
dec
or
ss
ret
addr16
and
loope
pushf
lcall
shrb
ror
jl
mov
insb
loopne
bound
je
and
les
iret
add
pop
shll
fnstcw
gs
clc
jb
xlat
notb
ror
js
std
fmull
cmp
xor
out
pusha
and
lods
push
xor
mov
xchg
leave
mov
lea
inc
inc
clc
mov
push
jge
sbb
stos
lahf
jo
push
cli
mov
and
and
inc
mov
mov
push
shlb
aam
jno
orl
xor
push
xchg
pop
sbb
sarb
mov
test
sti
dec
fmuls
outsl
mov
test
sbb
sbb
or
test
notb
push
pop
shlb
mov
ds
xchg
fcompl
rclb
xchg
ds
xchg
push
cmpsl
nop
adc
sbb
stos
stos
jl
out
sub
jmp
xchg
cmpsb
inc
divl
sti
push
xchg
xchg
insl
xchg
out
or
ret
aad
fwait
xor
pop
lcall
sti
mov
pop
push
sbb
adc
mov
nop
test
cltd
sbb
cmpsl
ljmp
sub
push
jne
loop
pushf
sub
adc
imul
xor
jo
stos
pop
js
frstor
pop
and
call
repz
inc
and
addr16
in
mov
jo
shrb
jbe
mov
loop
cs
dec
jmp
out
int3
or
xchg
mov
adc
outsb
pop
adc
xchg
fcmovne
orb
faddp
sbb
lock
push
popf
imul
cmpl
or
outsl
push
rol
pop
aam
add
subb
sbb
jl
or
mov
mulb
jle
bnd
hlt
ds
arpl
jg
mov
mov
adc
xorl
push
add
enter
cltd
out
das
push
xchg
or
mov
aaa
out
xchg
mov
outsb
test
fnstenv
repz
jb
lea
dec
add
imul
scas
cli
test
addr16
mov
xchg
enter
push
fisttpll
mov
pop
out
mov
out
sbb
ret
dec
ret
jnp
testl
cmp
loop
imul
sub
loopne
sub
push
adc
mov
inc
in
lds
push
mov
pop
sbbb
clc
shll
lret
fwait
lcall
shll
test
push
mov
mov
pop
push
cmp
imul
out
ret
insb
test
pop
pop
jno
aaa
call
jecxz
add
iret
and
or
mov
cs
mov
loop
lcall
xchg
rcrb
mov
push
and
mov
xchg
cmc
xchg
xchg
sahf
xchg
test
popa
jp
mov
mov
jle
rcrb
xchg
and
xor
or
pop
or
mov
xor
addr16
mov
arpl
sub
or
or
sub
aaa
imul
rorb
add
pop
testb
xchg
icebp
std
sub
adc
sub
aam
dec
call
loopne
adcb
out
sbb
outsl
mov
lea
pusha
outsb
xor
pop
mov
scas
push
cmpsb
dec
adc
aaa
ljmp
adc
fisubs
push
or
in
into
test
int
push
add
mov
mov
jno
ret
mov
or
pop
mov
ja
in
cmc
xchg
popf
adc
cmpsb
pop
out
fldenv
dec
push
sbb
mov
dec
push
xor
inc
xchg
loope
mov
mov
mov
arpl
sub
mov
push
dec
imul
imul
fisttps
jbe
nop
xchg
jmp
fistpl
adc
and
outsl
or
mov
and
fisttpll
rclb
push
lods
jl
dec
mov
lret
lods
mov
xchg
push
add
fs
sbb
mov
xchg
jge
hlt
mov
xor
cmp
cmc
xlat
outsl
inc
mov
jns
mov
xor
mov
sbb
mov
out
xchg
sub
mov
push
pop
movsb
mov
add
stos
inc
jecxz
repnz
cwtl
icebp
outsb
or
aaa
in
lods
das
mov
or
lcall
xor
cld
imul
and
or
jmp
lahf
sahf
adcl
jmp
fcompl
jnp
addr16
or
sub
stc
lret
or
scas
jne
gs
pop
sbb
lret
xor
fidivs
jecxz
lret
rolb
dec
daa
inc
cmc
aad
or
ljmp
xchg
push
data16
stos
push
mov
clc
and
xchg
mov
sbbl
push
jne
adc
fdivrl
push
call
mov
popa
lret
xchg
adc
std
outsl
or
mov
or
inc
add
leave
in
pushf
jl
fbld
mov
xor
jle
filds
lcall
scas
pop
mov
sbb
rep
sahf
movsb
lahf
mov
jl
data16
mov
add
sbb
out
aaa
pop
push
mov
mov
stos
and
inc
enter
jbe
mov
pop
fbstp
mov
lock
adc
xchg
push
inc
dec
sub
ss
adc
loope
push
xor
jecxz
and
outsl
ss
mov
jo
and
cltd
jnp
cli
mov
mov
out
fisttps
lret
push
mov
mov
lods
ficoms
imulb
and
dec
inc
cmp
mov
aad
push
fwait
popa
sub
mov
dec
xor
push
jb
out
inc
mov
adc
fwait
cmc
xchg
shrl
pop
cmp
or
popa
and
inc
mov
idivb
push
outsb
out
inc
ljmp
ret
push
jo
imull
bound
cmp
dec
or
sahf
jp
icebp
or
mov
aaa
iret
aam
inc
xchg
into
cld
fists
int
outsl
dec
js
hlt
rorl
jo
insl
fidivl
sbb
fstpt
mov
mov
call
push
icebp
lods
cmpsb
idivb
sub
sub
cmp
push
aaa
cmc
jo
mov
sbb
mov
xchg
loopne
js
mov
test
call
rorb
push
lahf
fdivrs
aam
sub
or
cmc
daa
push
xchg
sar
stc
ljmp
add
int
sbb
stos
dec
push
stos
mov
fldl
push
out
test
or
dec
and
int3
push
xor
and
stos
adc
test
lods
and
pusha
sub
pop
push
repz
fcomps
sbb
imul
pop
mov
stos
repz
dec
repz
adc
or
cmp
mov
inc
scas
pop
xchg
xor
test
and
mov
lcall
or
fwait
push
ja
les
xchg
jge
jp
cmpsl
xchg
fsubl
jp
and
push
lret
push
movsbl
lcall
shl
lock
fstpt
xchg
into
loopne
mov
mov
out
scas
mov
or
in
jmp
jns
bound
add
cmp
xchg
imulb
xor
add
pop
stos
pop
call
out
and
and
mov
scas
imul
or
push
dec
xchg
loopne
pop
cmp
mov
mov
shlb
xchg
outsb
dec
add
bound
out
adc
sbb
push
push
and
xchg
xchg
xchg
pop
sbb
ds
rorl
lods
inc
nop
je
add
scas
out
sub
rolb
lret
or
push
aad
clc
mov
cmp
rclb
xchg
lds
mov
ds
ficoml
cmpsb
sub
movsl
popf
lods
dec
xlat
xor
mov
adc
push
push
inc
in
imul
in
stc
lea
mov
mov
test
push
repz
cli
jb
cmpsb
bound
jmp
add
and
call
es
xor
popa
adc
rolb
inc
mov
push
or
and
hlt
dec
xor
cwtl
sti
push
inc
arpl
mov
inc
xchg
std
ret
dec
xchg
push
stos
jp
dec
adc
inc
inc
pop
and
adc
or
fsubp
pushf
inc
inc
ret
mov
mov
xchg
push
dec
push
xchg
inc
cmpsl
push
dec
mov
ror
and
popf
repnz
in
mov
je
or
pusha
adc
mov
cmp
sub
repz
rorl
das
mov
push
push
mov
in
aad
popf
mov
xor
movsl
push
xor
movsb
call
xor
jnp
pop
sbb
test
out
jno
or
loopne
xchg
xchg
sub
pop
ficoml
cld
mov
movsb
ds
pop
push
test
roll
test
in
call
test
jns
push
pop
jae
pop
mov
mov
in
push
inc
sbb
mov
mov
imul
iret
test
sub
and
xor
sbb
jae
test
lcall
fstpt
pop
add
lcall
xor
jmp
pushf
push
inc
repnz
imul
and
jmp
loop
hlt
add
dec
xchg
push
mov
mov
cld
mov
inc
mov
mov
cmc
mov
outsb
mov
jge
mov
push
push
sbb
jge
jnp
push
subl
leave
fsubrl
or
adcb
and
and
repnz
jmp
cwtl
sahf
test
mov
scas
sbb
lock
in
xchg
jo
mov
pop
hlt
repnz
and
cltd
or
divl
inc
mov
jp
inc
xor
pop
pop
std
mov
sahf
loop
jg
add
jg
push
sbb
scas
ret
mov
jle
aam
add
jne
xor
hlt
pop
loopne
pop
sub
js
push
scas
push
aam
dec
outsl
sti
cmpsb
mov
xchg
push
idivb
jp
addr16
ret
xchg
loop
xchg
sbb
adc
lock
lock
inc
rcll
mov
fsubs
xor
cmc
ss
pusha
sarb
pop
adc
xor
cwtl
fucom
mov
xor
inc
or
xchg
imul
ss
sub
nop
mov
inc
ret
jge
leave
incb
stos
pop
andl
shr
out
xlat
xor
fdivrs
push
pop
or
jecxz
lret
push
jg
in
lods
push
add
testb
sub
gs
lret
inc
cmp
ret
mov
mov
jbe
dec
cmpl
sbb
xor
out
mov
push
imul
out
adc
add
inc
xor
dec
sbb
outsb
out
cmc
je
dec
ja
mov
fsubs
gs
push
mov
ret
iret
fldl
outsl
test
jae
push
outsb
lods
icebp
and
in
push
mov
repz
add
sub
dec
jb
push
call
mov
push
pusha
cmp
xchg
add
gs
adc
mov
test
sub
sbb
dec
fnstsw
mov
ljmp
xor
lret
sbb
ds
gs
adc
mov
subl
int3
leave
mov
pop
or
mov
repnz
cmp
js
aad
fsts
test
ds
or
movsl
add
clc
sub
mov
jno
call
jge
jl
sbb
and
icebp
or
arpl
sub
daa
lods
outsb
je
mov
adc
insl
stc
sub
test
sar
les
scas
jae
test
jnp
aam
and
push
dec
xchg
push
jge
fwait
les
adc
mov
push
mov
sub
out
fst
push
add
sbb
pusha
ds
jg
xchg
pop
xorb
insb
lahf
mov
mov
push
ljmp
sub
call
xchg
repnz
mov
stos
imul
jle
into
into
lock
data16
mov
inc
mov
xor
out
lcall
es
inc
mulb
mov
mov
in
push
sbb
xchg
push
arpl
mov
sar
inc
addr16
cltd
fcompl
pop
sti
stos
add
mov
in
fcoml
sbb
out
mov
idivb
xchg
je
scas
sbb
mov
xor
cltd
scas
pop
lods
and
andl
add
icebp
lock
inc
test
addr16
pop
mov
mov
bound
and
or
cli
add
popa
pop
test
cs
push
jns
inc
push
push
test
sub
dec
ret
xor
xchg
add
icebp
sub
jne
jne
fimuls
stos
std
mov
xchg
adc
enter
call
fnsave
int3
stos
psllw
mov
xor
cmp
push
adc
notb
sahf
fwait
jne
hlt
fwait
sub
pop
hlt
add
fstps
dec
sub
inc
jns
mov
lock
les
adc
inc
addb
bound
stc
adcl
ljmp
popf
aam
mov
std
mov
call
inc
mov
nop
test
add
shll
and
mov
push
adc
jecxz
lahf
in
cmp
stc
inc
iret
in
xchg
rclb
test
dec
fucomp
xlat
adc
jge
loop
pop
dec
lret
cwtl
push
loopne
or
pop
jne
mov
aas
negb
fisubrs
popf
mov
pop
stos
mov
lahf
je
cmp
ret
bound
nop
cmp
adc
jne
sub
push
push
jp
ret
dec
mov
dec
push
mov
rorl
stos
insl
cmp
rcrb
adc
push
xchg
xor
stos
pop
cli
pop
lds
shlb
shlb
push
xchg
je
leave
cmp
add
outsb
test
insl
jmp
je
ret
aad
dec
sti
or
xchg
lret
adc
fisubs
push
data16
add
push
mov
aaa
adc
ffreep
and
push
ja
jge
mov
into
push
or
addr16
ljmp
int3
mov
fmull
fisubl
and
mov
fnstcw
jg
hlt
fnsave
fwait
or
pop
mov
hlt
add
pusha
sbb
jns
imul
bound
fisubrl
hlt
inc
ds
rcrl
add
pop
icebp
lahf
jbe
or
or
lahf
adc
icebp
jge
or
inc
jne
jb
mov
inc
mov
pop
cmpsb
int
sub
jecxz
fisttpll
aas
aaa
push
mov
jb
jbe
stc
jmp
push
jle
pushf
fcoml
mov
xor
xchg
jno
mov
stc
lds
jmp
adc
mov
pop
js
shrb
mov
ss
push
stc
repnz
mov
pop
stos
jg
adc
sub
out
test
sbb
sub
loopne
mov
iret
test
mov
jg
fwait
imull
xor
xor
daa
lods
push
decb
lret
lods
inc
sahf
enter
mov
movsl
xor
and
repnz
mov
fwait
lahf
popf
fwait
sahf
jne
lret
push
repz
scas
rorl
push
xchg
mov
pop
rcr
cmp
push
imul
loopne
pop
pushf
xchg
pushf
lret
test
pop
lahf
jnp
jbe
push
hlt
mov
and
mov
ljmp
dec
mov
and
push
sbb
lods
gs
insl
add
cmp
jae
js
push
xchg
mov
mov
insb
repnz
push
insb
inc
leave
in
addr16
push
loopne
and
aad
mov
adc
movsl
lods
jo
cli
out
xchg
xor
mov
aas
mov
or
dec
ss
mov
add
dec
bswap
std
dec
mov
push
movsb
stos
ret
mov
cmp
push
fdivl
lcall
shl
pop
cmp
mov
and
push
lds
test
push
faddl
in
add
dec
and
jae
into
test
sub
mov
jmp
cld
shlb
lret
push
lret
and
int
jge
or
popa
add
cmp
cmc
hlt
out
mov
int
shl
sbb
jae
leave
and
call
test
jne
pusha
and
popf
sbb
jg
push
xchg
in
jo
or
add
rcl
imul
mov
push
fisubrl
add
pop
outsl
insb
shl
fwait
roll
pop
lds
inc
insl
push
fucom
or
push
push
repnz
and
lods
into
and
xchg
pop
js
out
add
jb
popf
adc
mov
sub
inc
aas
mov
and
or
shll
jecxz
mov
adc
fldcw
or
sbbb
imul
lahf
or
push
mov
push
sbb
stc
and
add
jne
push
xchg
xchg
cmp
or
pop
sub
mov
mov
push
add
insl
sbb
xlat
pop
sub
into
sbb
xchg
jb
push
je
enter
loop
mov
or
sbb
push
mov
outsl
and
fisubs
or
mov
sar
jo
test
push
mov
jge
push
aam
xor
in
test
push
pop
mov
lcall
shll
sahf
push
mov
push
cmp
pop
sbb
jno
adc
add
movsb
jmp
pop
call
pop
sub
outsb
mov
push
pop
xor
adc
cld
call
and
cld
addr16
popf
pop
mov
enter
push
push
nop
push
jne
lds
lods
mov
and
cwtl
jl
out
jecxz
xchg
popa
rcrl
daa
aad
xlat
push
and
pop
outsl
pop
scas
dec
insb
mov
das
push
cmc
or
mov
cmpsl
and
rorb
addr16
clc
mov
std
jnp
ljmp
jle
inc
loopne
xchg
or
int
mov
inc
jg
xchg
mov
pusha
addr16
lods
mov
push
xchg
dec
ds
sbbl
daa
jns
outsb
rorb
call
mov
pop
or
cmp
push
adc
jecxz
sub
xor
xchg
test
mov
dec
mov
scas
mov
pop
inc
mov
xchg
fucomp
das
inc
fidivs
adc
lea
imull
enter
mov
ficompl
xchg
mov
cmp
fists
lods
xchg
mov
xchg
jg
popf
lock
data16
pop
aam
xor
imul
and
mov
jmp
andb
lods
lds
pusha
lock
or
ds
dec
sbb
cmc
sub
and
xchg
fnstsw
cmp
jns
shlb
adc
movsb
pop
insl
inc
test
push
jmp
mov
push
jmp
pop
sbb
fcompl
out
jae
xchg
sub
lahf
clc
cltd
ljmp
movsb
scas
imul
out
xlat
push
ror
mov
mov
cmp
jecxz
pop
mov
mov
lods
mov
add
mov
inc
mov
orl
stos
hlt
enter
cmp
fwait
pop
jmp
cmp
xchg
popf
pop
hlt
xor
sbb
cmp
call
inc
jo
sti
lea
mov
and
sti
sbb
rcrb
xor
adc
jo
mull
in
jle
movsl
repz
add
loopne
mov
outsl
insb
sub
imul
pop
inc
push
sbb
mov
jnp
cmc
mov
je
pop
sub
sahf
mov
bnd
push
mov
fistps
adc
movsb
push
imul
sahf
mov
cwtl
sbb
cmpsl
test
testb
addr16
and
or
aaa
cltd
fs
push
std
add
fbld
repnz
test
imull
mov
mov
cwtl
movsb
inc
mov
insl
jecxz
xor
adc
jg
inc
imul
xchg
push
mov
test
push
xchg
mov
xor
cmpsb
pop
and
adc
xorl
fmull
pop
not
fwait
inc
into
pop
mov
cmpsl
ds
jno
mov
shl
hlt
ljmp
sub
mov
imul
pop
mov
test
inc
lret
and
fwait
jb
jl
rol
push
and
stos
divb
daa
mov
ja
xchg
xchg
mov
xchg
loop
insb
inc
popf
pop
dec
inc
and
mov
cmc
mov
incb
out
fistpll
clc
mov
jno
mov
mov
mov
imul
fistpll
aaa
push
add
xor
xchg
or
pushf
and
push
cmp
jbe
jmp
movsw
hlt
xor
push
test
push
adc
aad
sbb
and
icebp
jnp
ljmp
data16
jns
mov
or
out
incb
add
mulb
fisubrl
jmp
xor
imul
aaa
push
add
mov
imul
cwtl
sarl
inc
mov
cwtl
dec
add
popf
mov
mov
push
sbbb
inc
es
fbld
addl
xor
mov
mov
popf
mov
add
movsb
cmp
jl
push
pushf
test
jno
ds
or
mov
jecxz
cmc
and
push
addb
test
mov
xchg
sub
inc
mov
rcr
inc
cmpsl
xor
mov
std
cltd
cs
pop
movsl
lds
jno
jbe
data16
hlt
xchg
dec
stos
push
pop
or
jne
inc
mov
fistpl
das
sub
mov
cmp
sbb
int
je
adc
aas
xchg
inc
dec
pop
call
cmovns
adc
jmp
sub
rorb
lret
sub
sahf
adc
xor
movsb
sub
fucomi
test
stc
dec
adc
addb
xchg
sbb
jmp
out
es
dec
adc
je
sti
lds
sub
fcomp
in
add
or
cmc
stos
test
sub
mov
pop
push
mov
jb
ret
pop
xchg
sysexit
in
jp
mov
xchg
out
adc
sbb
jbe
aad
sbb
jns
ficomps
iret
in
pusha
jb
adc
and
or
mov
adc
pushf
mov
movb
clc
lods
pop
int
jp
into
sub
xchg
add
xor
sbb
sbb
pop
cli
sub
add
test
test
call
dec
pushf
std
jb
jg
and
inc
mov
loop
ficoms
inc
rorb
add
mov
xchg
shl
fwait
hlt
mov
xchg
loopne
adcl
add
pop
jmp
scas
and
mov
cli
sbb
ficoml
xchg
mov
icebp
int3
pop
cmp
leave
inc
xchg
cwtl
es
add
dec
pushf
xor
sub
xchg
xor
xchg
je
push
scas
ljmp
stos
mov
out
repz
lods
fdivs
sbb
add
rclb
xchg
push
adc
test
stc
std
jb
cmp
lock
test
xchg
add
cs
push
dec
aas
inc
xlat
test
int3
rcll
jg
dec
rorl
and
call
mov
clc
push
push
je
adc
gs
pop
ja
xor
add
shlb
enter
push
stos
pop
cli
push
lods
pop
mov
push
and
jns
push
sub
add
jae
pop
xlat
mov
and
jne
or
pop
pop
mov
mov
mov
dec
sbb
cwtl
pop
arpl
or
das
xchg
in
add
shrl
repz
xor
adc
pop
repz
repz
cld
out
sub
inc
xor
decb
dec
popf
int
add
mov
jle
ja
mov
xchg
lods
and
xor
push
inc
push
mov
mov
aas
mov
xlat
repnz
mov
xchg
jno
mov
aam
mov
sqrtps
or
call
xchg
inc
repz
ret
out
and
ficoms
loope
and
and
sbb
iret
push
repnz
inc
inc
push
add
data16
cmpsl
pop
icebp
popa
sar
and
mov
xchg
and
test
je
pushf
movsb
imul
cmc
cmc
outsb
jb
or
pop
pop
outsl
pop
outsb
mov
inc
push
mov
xor
addr16
cli
jb
push
popa
xor
mov
das
shrl
mov
mov
int
rcrb
adc
int3
lret
rolb
push
in
sti
lret
push
jp
shlb
jg
sbb
pop
xchg
scas
cmp
xor
pusha
out
mov
mov
inc
test
mulps
ficomps
sbb
sbb
testl
add
imul
pop
clc
out
sub
pop
sbb
or
xchg
inc
pop
sahf
out
test
adc
or
jmp
xorb
movsb
lds
stos
xor
push
push
sub
sbb
hlt
sub
mov
or
cld
int
es
jne
sub
lret
out
xor
bound
mov
pop
or
int3
fsts
inc
add
arpl
scas
dec
jae
xor
pop
jle
loope
pop
outsb
iret
mov
jbe
nop
adc
mov
ret
push
fmulp
icebp
push
xlat
inc
aad
mov
inc
adc
leave
notb
lahf
mov
aad
cli
inc
adc
inc
xchg
adc
push
repnz
cld
mov
or
out
test
sbb
lret
pop
out
shlb
test
push
mov
mov
rorb
addr16
inc
fisttps
jo
xchg
inc
mov
test
dec
xchg
xor
jmp
imul
rorb
in
mov
lahf
outsl
xor
or
cltd
jg
mov
mov
jno
sbb
fidivs
xchg
sbb
mov
imulb
sbb
fnstsw
in
stc
mov
mov
jle
sub
and
fadds
movsb
xchg
mov
adc
push
add
mov
jge
popa
scas
sub
lods
push
insl
adc
pop
shlb
stos
pop
es
ret
ds
fwait
scas
push
jg
xor
jns
adc
test
mov
clc
daa
push
jge
and
fmull
jns
ret
or
loopne
int3
xchg
jno
cs
lods
pop
or
xchg
mov
nop
stc
fldcw
enter
out
xchg
test
fnstenv
aas
mov
xor
mov
loopne
arpl
dec
in
gs
adc
das
rcrl
mov
hlt
addb
jnp
sbb
xor
mov
das
lods
and
xor
adc
jno
add
dec
cwtl
fdivs
clc
aad
movsb
test
mov
or
popf
std
mov
inc
fld
sti
jmp
out
dec
inc
call
andb
lock
test
dec
push
fwait
cmpsb
out
test
insl
fwait
push
sbb
add
fnstsw
and
adc
aas
ficoml
mov
mov
ret
xor
sub
int3
aaa
cs
mov
or
lods
leave
lret
lret
mov
das
xchg
pop
mov
mov
adc
pop
test
into
cmp
mov
imul
xchg
leave
or
repnz
orl
fdiv
mov
jl
mov
inc
out
push
scas
cmp
bound
sbb
pop
cmpsl
pop
adc
adc
or
leave
xchg
out
fcomps
inc
mov
and
pop
test
test
push
test
add
mov
imul
test
adc
push
pop
shl
cmp
dec
inc
outsb
pop
xchg
daa
repz
xchg
or
jbe
lret
xor
and
pop
cmp
xor
cltd
fs
inc
xor
and
insb
das
sbb
jne
sbb
pop
or
out
adc
daa
lret
lcall
mov
mov
push
inc
jle
mov
sti
ret
dec
mov
sbb
fiaddl
jg
nop
pop
hlt
rcrb
imul
mov
and
dec
mov
inc
xchg
jmp
cmp
push
addb
stos
mov
dec
cmpsl
lahf
mov
or
push
les
mov
sbb
scas
and
pushf
mov
gs
fwait
jecxz
cmp
daa
adc
dec
inc
push
mov
adc
jmp
and
mov
iret
dec
icebp
insl
aas
jmp
aaa
push
movsb
rorl
inc
leave
sub
pop
pop
cmp
inc
add
cwtl
cmp
shlb
or
push
fdivs
sti
leave
push
xchg
xchg
popf
add
adc
std
push
movsb
jns
xor
xor
adcl
loope
hlt
xor
inc
dec
xchg
addr16
loopne
jns
ret
in
adcl
das
inc
nop
inc
fs
and
rclb
pop
add
out
and
sti
stc
jns
or
sbb
lret
sbb
sbb
shlb
lea
and
ljmp
lods
loopne
xorl
xchg
sbb
sbb
cmp
sbb
lds
xchg
add
mov
loope
mov
addr16
daa
mov
mov
cmc
mov
jb
pop
insl
xor
push
call
cmp
jmp
xor
jbe
xor
pop
movsl
xor
mov
repnz
inc
lahf
lret
loopne
jle
mov
mov
ds
sbbl
popa
jbe
wbinvd
adc
pop
cmc
ljmp
jns
inc
cltd
andl
cs
inc
mov
aaa
pop
ja
xchg
lds
mov
iret
aad
test
fildll
or
cltd
in
sub
imul
adc
or
mov
lret
pop
sbb
jp
test
xor
into
cmpsb
dec
mov
mov
mov
jecxz
imul
xchg
shll
addr16
cmpsb
mov
adc
xor
xor
sbb
call
sbb
or
sbb
sbb
pop
cmpsl
jns
cmc
cs
jo
imul
push
loop
addr16
mov
addr16
mov
xchg
jns
add
js
cld
ds
out
fwait
mov
xchg
push
cwtl
popf
daa
sub
shl
test
ret
shlb
lcall
pop
jle
rol
jge
pop
jecxz
push
mov
cmpsb
rorb
pop
cli
loope
push
fbld
pop
mov
out
pop
cmp
ja
add
aad
lcall
negl
fisubs
xlat
push
decb
int3
das
or
jg
xor
or
and
xlat
bnd
xor
call
hlt
movl
xchg
push
gs
shrb
or
jae
dec
adc
dec
je
xlat
insb
xchg
pop
jo
inc
jno
cmc
sub
or
pop
iret
and
and
ja
in
dec
icebp
sarb
adc
test
or
jno
test
jns
xor
push
jbe
pop
jg
int
add
add
dec
stc
retw
dec
shr
or
inc
sub
int3
mov
dec
jo
and
loopne
rcll
fwait
mov
stos
and
push
adc
adc
jb
lds
into
es
jge
pusha
and
cmp
jecxz
gs
insl
lahf
jnp
lds
jbe
rolb
cmc
xchg
jge
push
imul
daa
cmp
push
mov
lret
inc
lds
mov
adc
je
add
es
jae
mov
pop
mov
in
inc
sarl
movsb
popf
inc
mov
jmp
cs
loop
lcall
adc
mov
mov
cmpsb
push
repnz
icebp
push
imul
sahf
and
push
push
sbb
fsubl
ss
stos
or
repnz
lret
pop
sar
cmpsb
push
testb
in
pop
sub
dec
xchg
pop
insb
inc
shll
and
fnstsw
rcl
push
sbb
jnp
sahf
mov
pop
pop
ljmp
pop
je
fmull
xchg
popa
mov
cs
push
cmc
rorl
movsl
add
mov
enter
lret
add
and
fucomip
jmp
mov
ljmp
test
fimuls
or
jnp
mov
mov
adc
and
jno
div
mov
test
mov
lcall
cmp
xor
movsb
scas
inc
loopne
adc
repz
call
push
xchg
xchg
mov
cltd
or
pop
cmp
dec
cmpsb
aas
jns
mov
cmp
push
add
jmp
outsb
fadd
push
sahf
test
aad
sub
data16
into
pop
adc
adc
dec
add
cli
pop
mov
imul
test
inc
inc
cmp
adc
jb
inc
mov
sub
inc
out
jl
das
adc
sub
cmp
andl
aas
rol
out
mov
jecxz
inc
ja
nop
jg
or
xlat
dec
loopne
movsb
andl
inc
imul
ljmp
mov
lods
fs
outsb
xchg
movsb
mov
into
dec
dec
adc
sarb
cmpsb
add
xchg
aad
sbb
sub
cltd
push
faddp
leave
clc
mov
testl
sbb
bound
mov
push
add
push
loopne
sbb
mov
fwait
into
enter
sahf
and
sub
into
sbb
mov
test
rcll
int3
pop
bound
out
adc
mov
inc
je
out
in
cmp
or
dec
xchg
loope
out
lret
arpl
mov
mov
sti
jae
mov
dec
std
adc
sub
pop
ljmp
testl
jnp
mov
adc
pop
repnz
inc
push
test
xor
lock
into
dec
leave
outsl
leave
cld
jle
or
in
push
add
test
rcrb
mov
cmp
add
jecxz
enter
push
mov
in
jns
aas
mov
mov
push
loopne
int
mov
das
jb
setge
ret
mov
jne
ret
sbb
jg
inc
mov
imul
std
and
test
decb
sbbl
imul
fdivr
lock
push
shll
jecxz
jne
ficoml
xchg
inc
int3
shlb
sbb
aaa
sbb
inc
aad
je
jg
dec
pop
in
xchg
fldt
icebp
test
mov
in
add
jg
xchg
or
shrb
icebp
fmuls
into
xor
cli
sub
mov
push
pop
cmpsb
fildl
mov
dec
lds
cmp
ret
test
jg
call
inc
xchg
sub
in
pop
rol
cmpsl
sarl
mov
add
insb
mov
and
push
dec
mov
rol
lods
xor
insl
adc
and
add
xor
lods
ljmp
in
leave
std
idivb
or
outsl
int3
xchg
pop
movsb
mull
sub
jnp
pop
ds
jmp
outsb
xchg
daa
or
jmp
shll
xor
imulb
push
inc
inc
je
lock
lods
add
mov
bound
inc
xchg
push
insl
stc
roll
xchg
sbb
or
xchg
scas
fwait
push
cmp
cmpsb
out
pop
mov
fisttpll
jle
or
fbld
into
cmpsb
shll
pop
mov
pushf
or
ds
ljmp
pop
inc
sbb
xchg
push
call
dec
mov
mov
cmp
push
imul
dec
sahf
jecxz
sti
lods
sub
and
lret
ss
adc
xor
xchg
jle
loopne
movsl
pop
mov
and
pop
adc
das
or
inc
daa
mov
pop
enter
fsubrl
cmpsb
adc
sbb
push
gs
mov
sub
mov
add
lock
or
lea
loopne
cmp
or
ljmp
pusha
das
sbb
arpl
and
mov
mov
sub
sub
sub
dec
test
and
jns
dec
dec
xchg
scas
xchg
or
jl
pop
in
je
pop
dec
cmp
stos
mov
adc
pop
xchg
or
mov
lret
lcall
andl
cmpsb
inc
and
jno
lea
push
sbb
mov
imul
xlat
icebp
push
or
loope
sub
inc
dec
clc
inc
cmc
mov
and
stos
out
addl
mov
fwait
jmp
fwait
jno
in
imul
or
arpl
sub
jnp
xor
shl
sbb
icebp
mov
rclb
xorl
cmpsb
mov
xchg
inc
jmp
cmpsb
cmp
jnp
inc
push
into
pop
mov
enter
sahf
mov
mov
pop
cli
pop
cmpsb
sub
push
pop
jmp
adc
pop
lds
sub
cmp
cmp
stc
push
pop
fstl
ds
cmp
dec
shl
addb
push
adc
mov
mov
movsl
add
fs
lock
lret
ljmp
mov
enter
sub
aad
imul
or
std
xor
push
inc
lods
xchg
hlt
nop
in
ja
mov
and
push
cmpsb
jo
inc
xchg
clc
jno
mov
dec
nop
movsb
ljmp
loopne
inc
pop
sbb
lcall
gs
aad
xor
std
ss
sbb
push
mov
mov
imul
and
or
dec
in
push
outsb
push
add
inc
lods
das
daa
int3
fwait
and
or
xchg
pop
sub
and
aam
adc
adc
stos
fidivs
int3
loope
push
je
aas
or
mov
call
pop
out
jmp
cmp
je
fisubl
aam
ss
rclb
lret
test
ud1
std
sbb
movsb
lock
cmp
aas
nop
repnz
das
jno
sub
aam
out
stos
adc
out
int
insb
xlat
adc
pop
in
nop
inc
pusha
nop
pushf
push
mov
cmpsl
push
mov
fsubrs
fwait
mov
or
push
fdivrp
adc
insl
pushf
push
stc
adc
clc
in
mov
movsl
pop
cmp
xorl
cli
ds
jle
jp
push
push
mov
inc
inc
sub
pusha
mov
pop
jnp
fmul
jns
mov
sub
pop
rcrb
daa
and
out
jae
mov
rcrb
mov
cli
sar
lahf
adc
fdivrl
xor
sub
data16
dec
cmp
dec
jg
call
jno
add
cmp
cli
fcomi
push
imul
out
scas
or
sbb
mov
enter
popf
mov
les
stos
inc
sarl
loopne
loop
mov
lret
bound
loope
mov
bound
bound
rorl
push
rcrb
dec
cmp
jb
adc
mov
mov
mov
das
lods
inc
in
cmp
add
dec
xchg
mov
mov
jb
cmp
leave
pop
fdiv
out
lds
and
cmc
cwtl
pop
xor
mov
pop
fidivrl
sbb
push
pop
and
add
mov
or
nop
inc
sbb
in
outsl
xchg
xchg
xorl
cmp
fldenv
leave
jns
cmp
popa
jne
jae
sbb
push
xor
inc
shr
loop
lret
pop
xchg
popf
enter
nop
jbe
imul
enter
clc
into
mov
cmp
ret
adc
pop
inc
and
jae
fnstenv
cmp
dec
outsl
jnp
rcll
pusha
xorl
imul
xor
xchg
mov
iret
int
sub
aaa
sub
adc
push
pop
pop
out
push
jbe
aaa
sub
fildl
cmpsl
pop
dec
les
and
mov
ret
sub
lcall
loopne
stos
cmpsl
and
xorb
mov
mov
lcall
and
sbb
stos
add
mov
pop
ss
fsubrl
pop
inc
cmp
fdivrl
leave
roll
cld
cmp
cmpsb
ds
mov
popa
je
idivl
scas
push
lret
ljmp
mov
insl
add
test
mov
popa
mov
adc
insl
in
jmp
cmp
enter
scas
push
sub
sbb
adc
mov
or
movsl
jge
push
push
mov
popf
insb
dec
insb
cmp
jae
ds
fnstenv
dec
adc
insl
out
push
push
imull
jns
roll
inc
push
aam
outsb
jno
daa
popl
enter
bound
test
jo
jle
stos
xchg
aad
and
pop
inc
inc
hlt
pusha
dec
add
test
inc
push
sti
lret
add
push
std
dec
addr16
or
push
xchg
aam
cltd
aaa
mov
adc
and
inc
jmp
jp
or
jecxz
mov
cmp
jns
push
movsb
cltd
xchg
mov
out
rcrb
stos
arpl
push
adc
sub
movsb
sbb
mov
mov
mov
cmp
mov
mov
testl
loop
add
lds
push
adc
rcrb
mov
pop
push
push
insb
or
pop
loopne
rorb
mov
pop
pop
xorl
sub
addb
mov
mov
xchg
mov
adc
lea
adc
sub
enter
cmp
hlt
xchg
sbb
mov
and
push
sub
cmp
aaa
sub
aas
test
fstpt
stc
jno,pn
mov
xchg
jecxz
test
rcrb
ret
addr16
out
fiadds
scas
adc
mov
dec
mov
ja
loope
jmp
dec
pop
xchg
jno
adc
dec
inc
nop
inc
addr16
mov
in
sti
cmc
sti
cmp
lcall
into
fwait
lret
mov
imul
into
jl
sub
into
sbbl
sub
inc
lea
rol
ret
cmp
movsl
mov
sbb
sbb
repnz
lea
js
mov
popl
clc
xorb
lock
dec
hlt
push
cmovns
icebp
and
adc
iret
xor
xor
cmpsb
mov
dec
pop
test
jg
mov
add
test
icebp
push
pop
adc
in
sbb
xor
cmp
call
fcoml
adc
xchg
xor
aaa
or
or
enter
cmpsl
dec
mov
test
or
fwait
inc
cltd
sbb
stc
mov
cmp
loope
stc
inc
pushf
roll
cs
arpl
or
or
and
popf
pushf
jecxz
es
aam
add
test
fidivs
imul
add
add
pop
dec
mov
or
test
mov
adc
add
dec
movsb
cwtl
lret
adc
push
sub
mov
xor
mov
sub
push
nop
insl
cld
inc
ja
cltd
inc
inc
aas
data16
addl
inc
adc
xor
hlt
and
imulb
pop
lahf
or
int3
sbb
dec
sbb
lods
lock
push
ss
xor
idivb
inc
cltd
pop
and
sti
cmp
test
ret
inc
xchg
cs
inc
rep
js
mov
cwtl
hlt
add
fcoml
dec
sbbb
and
es
pop
push
shlb
jp
mov
test
push
ljmp
fiadds
jnp
xchg
loop
jmp
cltd
mov
mov
mul
adc
jecxz
andb
jg
xorb
jge
xlat
dec
dec
mov
les
add
inc
jecxz
push
mov
cwtl
xchg
fxch
movsb
xchg
cmpsb
loope
xor
pushf
mov
mov
sub
mov
or
mov
cmp
insb
in
jle
stc
dec
xchg
push
jg
mov
enter
xchg
lea
xchg
sti
jl
mov
or
xor
cld
sub
sbb
mov
push
call
sbb
iret
roll
and
and
mov
dec
cmpsl
xchg
dec
jo
incb
pop
sbb
jnp
sahf
jl
dec
mov
dec
and
sbb
lcall
cld
xchg
repnz
loop
lcall
test
leave
fsubrl
lods
push
arpl
dec
xor
add
mov
jb
dec
mov
gs
push
xchg
fucomip
add
cmp
pushf
int3
inc
pop
pop
push
in
xor
mov
adc
sti
sahf
adc
xchg
xchg
jmp
adc
cmp
cmp
xlat
and
or
gs
cpuid
rolb
jbe
xchg
aas
in
dec
push
mov
fmull
arpl
pop
enter
adc
fisubrs
stos
into
xor
xchg
xor
pop
add
mov
pop
jecxz
aad
xor
mov
add
mov
into
in
enter
rol
mov
insl
pop
mov
cli
test
mov
jo
mov
push
fnstenv
test
dec
mov
xchg
jmp
repz
lods
and
mov
push
rol
xchg
bswap
sbb
imulw
mov
fidivrs
add
orl
into
push
std
shlb
in
inc
jle
jecxz
stos
clc
push
in
cmp
test
jb
or
pusha
add
int3
push
leave
sub
lea
pop
stos
ja
pusha
inc
or
or
rorb
cmp
mov
and
sub
out
xchg
loope
out
or
add
mov
or
and
mov
je
sbb
fimull
pop
mov
aad
mov
test
cmp
push
mov
out
xchg
subb
push
insb
and
mov
sub
sbb
loope
sub
pop
push
ljmp
jb
lret
sub
xchg
push
lods
cwtl
or
push
pop
loop
stc
sbb
lcall
pop
push
lcall
jecxz
cmp
ljmp
jns
jg
aad
sbb
test
add
inc
mov
loop
mov
lea
sbb
insb
out
iret
mov
daa
dec
jno
mov
daa
addr16
jl
test
insb
xor
ret
loop
push
insb
test
scas
sbb
adc
into
fs
and
cli
or
in
mov
dec
je
decl
out
leave
pop
gs
sti
mov
push
pusha
nopl
nop
xor
fs
or
sti
add
push
rcll
fistl
sub
cli
aaa
inc
scas
mov
fiaddl
push
outsl
pushf
fistpl
mov
jne
aas
popa
decl
loopne
xor
rcll
push
outsb
or
ja
add
mov
jb
lret
sbb
outsb
in
mov
in
jo
lods
gs
enter
inc
cmp
cltd
or
mov
lds
jmp
pop
mov
in
sub
out
sbb
popf
loope
xchg
aaa
cmp
inc
and
jl
mov
fidivrl
in
incb
nop
fwait
adc
pop
les
sahf
push
in
ss
cwtl
jge
xlat
movsb
dec
int
cmpsb
lcall
inc
pop
ret
mov
repz
mov
popf
xchg
movsl
test
pop
add
cmp
into
inc
or
das
fcmovnu
test
and
clc
adc
fsts
ja
repnz
mov
or
push
xorb
push
pop
fdiv
lret
adc
adc
sbb
pop
cmp
push
sbb
xchg
inc
dec
sar
leave
loopne
mov
add
ret
push
dec
pop
je
test
test
jbe
mov
adc
and
sub
cmc
sbb
movsl
jl
xlat
sbb
jp
xorl
inc
jge
mov
xchg
ffreep
mov
dec
scas
or
push
inc
pop
into
sub
int3
mov
mov
push
test
jl
lods
stos
sub
stc
aaa
sbb
xchg
and
mov
js
jb
xchg
cmp
frndint
sub
loopne
mov
jne
ret
jmp
les
dec
popa
sub
das
loopne
into
push
jnp
out
fisttpll
mov
in
fcoml
mov
cltd
je
ds
mov
in
jge
or
movsb
stos
xchg
cmpsb
in
stos
add
sbb
cmp
mov
sub
sbb
pop
test
and
int3
dec
testb
rcrb
xlat
mov
lahf
fwait
or
std
and
push
dec
movsb
js
mov
lock
mov
mov
sub
add
loope
and
stc
add
xor
and
adc
pop
ds
adc
popa
lds
sbb
inc
pop
ss
mov
int
inc
cmp
jl
and
inc
xchg
int3
cmpsb
in
pop
xorb
loopne
inc
pop
push
sub
adc
or
adc
mov
dec
dec
cwtl
pop
sbb
addl
stos
movsb
adc
loopne
add
mov
in
icebp
jns
test
mov
lret
and
adc
scas
pushf
sub
stos
incl
or
js
xchg
cmp
pop
lods
adc
mov
pusha
mov
jle
rorb
adc
xchg
mov
loope
push
add
shlb
dec
sbb
fs
pop
push
cmpsl
imulb
das
push
int
add
stc
push
in
pop
mov
and
mov
mov
lods
movsl
xor
hlt
or
idivb
test
stos
lret
out
fistps
jecxz,pt
int3
jecxz
imul
xor
out
jbe
aad
imul
mov
mov
push
cmp
mov
adc
jl
lea
loop
jge
rorb
les
mov
jcxz
jle
int
scas
mov
loopne
sub
pop
push
push
cld
jecxz
outsl
stc
and
ja
popf
push
dec
pop
sub
xor
sbbl
or
or
fnstenv
outsb
arpl
lcall
pop
pop
shl
jbe
adc
add
mov
cmp
lds
mov
movsb
adc
ja
mov
inc
fdivs
and
jno
sub
loopne
sbb
inc
cld
jbe
pop
cs
or
clc
into
adc
dec
fstpt
pop
add
inc
nop
lds
cmpb
scas
int
out
outsb
or
daa
int3
inc
sbb
out
mov
xor
aad
xor
flds
loop
in
addr16
mov
pop
out
fwait
clc
xchg
daa
mov
mov
mov
and
sub
and
xchg
jmp
xchg
sbb
mov
dec
sub
roll
leave
pop
push
lock
nop
mov
adc
movsb
lods
sahf
pop
push
lods
andb
jb
sub
idivb
jo
in
lret
mov
pop
xor
sbbl
stos
mov
xchg
outsl
mov
shl
cmp
or
mov
rclb
aas
lret
adc
xchg
xchg
mov
shlb
insb
push
fs
add
clc
rorl
add
mov
fmul
out
push
cmp
clc
adc
pusha
xchg
rcl
icebp
push
xchg
mov
xchg
sub
psubsw
mov
xchg
data16
clc
mov
or
shr
movsb
lods
das
clc
sbbl
or
cli
sti
pop
test
bound
jne
fimuls
sbb
adc
mov
sub
or
das
js
mov
jnp
xor
aam
dec
jne
sbb
imul
sub
test
test
sbb
outsb
xorl
add
mov
jle
sub
div
or
xchg
mov
xor
mov
insb
or
sub
fscale
cmpb
rcrl
adcb
pop
cltd
jne
and
and
in
adc
nop
pop
jmp
sbb
mov
icebp
pop
shl
and
jb
arpl
jp
int3
enter
dec
loop
mov
cmp
cmp
stos
pop
mov
or
pop
jmp
cld
mov
adc
add
movl
mov
lea
stos
xor
xchg
sbb
aad
mov
sarl
outsb
ds
arpl
mov
mov
inc
lahf
arpl
mov
mov
inc
lret
scas
adc
xorb
cmp
dec
xorb
es
and
shl
pop
xchg
inc
and
fisubrs
and
test
xchg
faddl
mov
adc
lds
fiadds
testb
pop
add
movsl
push
je
add
imul
xchg
imul
mov
or
es
xor
cmpb
dec
and
rcr
repz
jnp
call
inc
dec
jns
pop
std
fwait
jb
push
jmp
xchg
cmc
jl
pusha
inc
xchg
imul
ret
imul
popa
sub
repnz
mov
sbb
clc
cli
in
insb
cld
mov
ret
mov
mov
popf
imul
outsb
lea
fistpll
or
test
push
aas
jbe
jb
pop
js
sub
ret
mov
mov
pop
repnz
popf
out
shlb
jge
jb
movsb
ljmp
ret
xchg
lcall
mov
fwait
cs
jbe
jp
out
cmp
mov
loopne
popa
adc
mov
pop
movb
or
hlt
xor
ret
jno
cmp
arpl
mov
mov
mov
lds
cmp
inc
cmp
data16
add
movsb
pop
xchg
jno
cld
lds
pop
jp
pop
push
jo
loope
outsb
cltd
mov
sahf
lds
mov
arpl
mov
stos
jae
mov
subb
jle
dec
mull
popf
lret
idivb
xchg
imul
shrb
cmpsl
fs
jge
mov
es
push
fwait
test
fbld
sub
jne
sbb
and
lahf
sub
add
call
jle
jmp
lret
test
jae
in
shrl
jns
lock
sbb
adc
popf
rcrb
push
scas
in
and
mov
mov
test
push
loop
jo
xchg
push
outsl
sar
inc
push
push
int3
test
lea
fsubrp
mov
cmp
cmp
std
dec
data16
in
invd
or
xchg
inc
rolb
mov
xchg
adc
cs
adc
inc
or
repnz
subb
sub
adc
lahf
pop
lods
mov
cli
xchg
scas
mov
bound
cmc
xchg
arpl
pop
test
xor
dec
dec
xchg
sbb
into
adc
push
lcall
into
cli
cld
inc
pop
fcmovbe
pop
cmp
jg
mov
cmp
adc
inc
lods
pushf
ss
mov
xchg
push
xchg
cltd
dec
repz
xchg
xchg
movsb
push
cmp
pop
scas
imul
fiaddl
rorl
imul
xchg
inc
inc
jge
sub
mov
pop
loop
cmc
and
out
pop
insl
andl
into
mov
push
pop
inc
dec
mov
pop
stos
adc
in
jg
fs
mov
scas
jnp
pop
sbb
icebp
pop
cmp
lret
notb
cwtl
jns
pop
pop
adc
into
mov
pop
lret
push
shrb
pop
xor
push
add
jno
adc
das
mov
jg
je
push
cmp
les
dec
inc
and
adc
inc
mov
cmpl
test
mov
add
lret
rcrb
and
jmp
cli
dec
addr16
jno
mov
jl
pop
mov
fiaddl
lahf
dec
jl
mov
aad
push
icebp
mov
roll
push
daa
mov
add
xorb
mov
sbb
push
stos
pop
inc
int
sbb
add
or
mov
cwtl
scas
shrl
push
dec
test
pop
fidivrl
dec
sbb
xor
mov
icebp
repnz
lahf
add
test
rol
mov
inc
arpl
xchg
or
js
outsl
in
jb
pop
adc
mov
pop
int3
pop
test
lods
loope
leave
loopne
call
js
pop
fs
arpl
cmp
pop
cmp
jle
ljmp
lret
add
sbb
mov
dec
fadd
daa
jmp
out
ds
cmp
sbb
mov
jmp
inc
mov
mulb
mov
fdiv
cmp
add
xlat
dec
xor
pop
xchg
xor
xor
imul
insl
or
lret
in
negl
insb
and
dec
push
jne
nop
cltd
fwait
push
jo
popf
sbb
cmpsl
out
xchg
jbe
inc
push
and
sub
or
push
xchg
fidivs
rcrl
pop
push
mov
inc
sub
xchg
lcall
xor
insb
cmc
aad
arpl
push
mov
inc
mov
imul
cmc
xchg
adc
xchg
les
test
cmpsb
xchg
int3
sbb
repnz
rclb
arpl
xchg
js
scas
stc
push
inc
sbb
repz
scas
ljmp
cld
push
xor
xor
inc
insb
outsl
fidivs
add
or
add
ljmp
ret
pop
out
scas
add
aas
sti
cmp
shll
popf
and
and
fildll
adc
rorl
lcall
push
push
cwtl
rclb
inc
adc
add
out
adc
mov
pusha
mov
adc
adc
fwait
cmc
les
or
inc
xor
fcmovu
call
lea
jnp
rcl
jge
pushf
jmp
ljmp
mov
inc
inc
jae
xor
xorl
dec
test
jbe
xlat
test
xor
cli
ss
adc
sbb
lret
aas
lods
cwtl
test
jle
out
arpl
mov
inc
dec
cltd
pusha
and
dec
and
pop
leave
mov
cli
rep
mov
pmulhuw
dec
popa
lret
sbbb
adc
pop
and
in
dec
ret
dec
cmp
out
push
shlb
rcr
add
pop
xor
add
imul
orb
sahf
push
sti
mov
mov
or
call
xchg
in
jne
or
dec
xchg
adc
pop
addb
gs
lds
in
hlt
loop
int3
jg
test
xchg
fisttpll
cld
iret
mov
ficoms
cltd
test
test
mov
mov
push
faddl
fadds
inc
gs
loop
pop
xchg
lds
sub
popf
loopne
aam
sub
sub
call
fdivr
mov
and
xchg
les
cld
xchg
or
js
test
push
pushf
int3
xor
push
ljmp
mov
xchg
mov
or
fwait
mov
xorb
ljmp
or
cmp
movl
jb
mov
dec
xor
inc
gs
pusha
inc
int3
mov
cmp
inc
jns
out
mov
bound
leave
dec
rcrl
add
sbb
mov
ds
stos
scas
or
mov
xor
adc
out
movsb
inc
call
mov
jne
out
mov
adc
repz
push
lcall
addb
mov
jns
inc
subb
repnz
mov
jae
sbb
add
ret
jl
loopne,pt
cwtl
mov
xor
sahf
pop
or
in
out
add
cmp
sbb
xor
dec
or
sbb
sub
out
push
dec
sub
jae
pop
sbb
les
mov
dec
xor
cmp
dec
and
dec
adc
movsb
dec
xor
mov
fimull
xor
add
in
imul
enter
sti
pop
jg
test
inc
mov
aaa
negl
xor
gs
sub
stos
test
pop
imul
xchg
xor
push
movsl
dec
push
pop
adc
cmpsl
mov
andb
sahf
mov
add
sub
cmp
xlat
or
mov
jg
cltd
mov
pop
xor
sbb
or
pop
ja
lret
jp
fidivs
bound
add
push
ja
pushl
jno
sbb
inc
femms
mov
fidivrl
outsl
sub
fldl
xor
jmp
test
pop
jmp
in
cmp
call
arpl
aaa
pop
fdiv
sub
sahf
lret
sbb
sarb
push
movb
mov
lods
jnp
xor
stc
jae
fs
mov
cwtl
xor
sbb
xchg
sbb
mov
mov
cwtl
fwait
icebp
sbbw
adc
cmovg
mov
lcall
in
loope
cmp
nop
leave
xor
test
out
mov
mov
cmp
mov
lcall
imul
lds
std
in
add
cmp
jne
xlat
popa
gs
push
imul
mov
cli
js
gs
int3
shlb
cs
jge
mov
cmpsl
pop
push
push
stos
call
add
das
mov
mov
push
add
andl
pop
icebp
dec
push
push
or
jle
cs
and
rclb
sarl
xor
xor
xor
das
hlt
inc
pushf
pusha
in
leave
dec
bound
pop
jle
lahf
in
addr16
cld
arpl
ret
adc
push
adcl
adc
mov
imul
dec
pop
dec
clc
fsin
sahf
add
cmp
and
xchg
xor
shll
sbb
push
outsl
xorl
inc
pusha
in
not
mov
dec
insl
sub
std
sbb
mov
dec
xor
cld
pop
insl
cmp
xchg
out
aad
or
mov
clc
dec
es
std
pop
jns
cmpsb
in
cmpsl
dec
inc
sub
insb
pop
sbb
mov
push
xchg
push
jmp
cmp
int3
inc
das
mov
lret
in
inc
shll
lock
push
stos
mov
lock
scas
cli
shr
mov
mov
in
aas
imul
shr
add
adcl
addr16
sti
pop
sbb
push
mov
pop
pop
push
adc
ss
pop
jg
scas
xchg
les
lods
test
xchg
imul
xchg
push
cmpb
lcall
cmp
push
int
inc
hlt
mov
rclb
aas
xchg
xchg
sbb
cmp
lahf
dec
jbe
popa
lock
and
dec
jno
lahf
sbb
test
dec
or
sbb
leave
int
scas
jo
jns
mov
in
pop
pop
int
push
inc
hlt
lret
push
mov
jge
and
mov
mov
push
movsb
cmp
mov
push
inc
pusha
sub
in
inc
pop
or
andl
push
cmp
ss
rorb
xlat
call
stc
sbb
adc
out
and
dec
jl
and
mov
icebp
loop
divb
lcall
push
adc
mov
lea
pop
dec
cmc
out
push
out
jp
test
clc
int
loope
xor
jecxz
movsb
fldenv
xchg
xor
inc
stos
inc
add
dec
stos
scas
jle
and
jb
lcall
jo,pt
int
aad
int3
adc
pop
adc
mov
test
xor
jns
rolb
adc
xchg
iret
add
pop
lea
mov
dec
ja
pop
mov
mov
jns
neg
sub
pop
pop
sbb
mov
out
cmp
jne
nop
into
cltd
daa
aam
xor
push
add
out
subb
xchg
cltd
or
cmp
xchg
leave
jge
repnz
mov
push
fcmovnbe
loope
out
scas
inc
mov
int3
push
xor
mov
inc
mov
jmp
mov
inc
fs
out
xor
inc
ficomps
pop
bound
xor
xchg
mov
mov
andb
pop
xor
out
dec
push
fistps
out
or
and
push
shl
std
test
mov
add
insb
cmp
jno
out
push
jg
dec
sbb
ss
into
outsb
insb
adc
jmp
mov
dec
mov
mov
clc
fwait
pop
repz
pop
cmp
dec
lods
cmp
sbb
daa
jnp,pn
adcb
pop
and
cwtl
adc
ret
enter
sbb
fbld
xor
xchg
ss
dec
and
popa
into
push
call
lcall
fbstp
add
scas
mov
pusha
jbe
gs
push
cmpsb
ss
fwait
rclb
xlat
bound
xchg
or
in
push
or
imul
add
je
and
mov
cmp
push
pop
or
jl
fs
call
lock
mov
mov
adc
scas
sub
loope
fs
sbb
jno
jb
pop
enter
pushf
mov
add
sbb
xchg
sub
adc
add
adc
or
scas
cmp
sub
lea
pusha
and
dec
fwait
popa
pop
jl
sti
push
repnz
push
sahf
movsw
add
adc
jns
rclb
test
scas
outsb
mov
jmp
aad
mov
xor
xor
jno
jge
in
push
jae
and
push
add
andl
adc
jne
cmp
aas
fstpl
je
push
daa
icebp
insl
rcr
cmp
rcr
and
inc
insl
out
les
push
adc
push
fcoms
pop
xor
dec
or
push
out
jnp
sarb
inc
shrb
jl
dec
mov
std
pop
rcrl
mov
repz
xchg
icebp
cmpsl
cmp
out
daa
push
mov
mov
sub
ja
test
mov
test
repz
xor
mov
xor
ss
add
rcl
mov
jecxz
push
mov
loope
scas
and
sbbl
pusha
movl
adc
es
cmp
jg
pop
jmp
imul
dec
mov
xchg
mov
int
xchg
in
cmp
daa
xchg
js
addr16
loop
sub
jmp
mov
pop
pop
mov
aas
ljmp
fwait
repz
and
out
pop
cmc
mov
das
cltd
pop
scas
ss
out
xchg
push
dec
dec
rorl
pop
mov
pop
cs
pop
jns
rorb
shlb
dec
shlb
stos
push
jmp
xchg
and
mov
inc
jecxz
inc
ljmp
inc
xlat
pop
rorb
test
stc
out
mov
xor
mov
jle
ret
cwtl
in
add
mov
sub
outsl
nop
or
aam
jmp
add
push
pop
addr16
push
mov
or
mov
das
cmpb
int3
lods
inc
sbb
xchg
lret
sbb
xchg
pop
sbb
mov
stc
inc
nop
mov
add
clc
xchg
jb
adc
mov
pop
and
pop
mov
mov
inc
xchg
pusha
lret
add
lds
into
or
repnz
faddl
int3
movsb
sbb
lret
cmpsl
ficompl
stos
lock
jo
paddsb
in
les
adc
mov
sbb
xor
adcb
imul
cmpl
push
pop
jne
xchg
aad
mov
iret
fstl
fwait
loope
jg
popa
rcrl
jp
and
in
mov
shrb
fnstsw
sub
dec
and
sbb
mov
cltd
lods
lcall
adc
cmp
xchg
mov
adc
test
dec
jecxz
inc
ljmp
sbb
push
ret
sbb
xor
test
inc
pop
mov
addr16
cmp
adc
sbb
xchg
enter
sub
test
js
pop
mov
mov
aad
ficompl
mov
push
push
call
mov
cs
mov
adc
stos
lods
decb
sub
popl
cmp
cmp
fistl
pop
fnstenv
mov
out
in
stc
cmp
adc
shl
bound
fmuls
add
lret
in
mov
lret
test
dec
cs
push
les
adc
xchg
mov
fwait
jns
call
push
xchg
sbb
call
adc
mov
mov
mov
mov
and
outsl
cli
pop
ret
into
mov
and
cld
jecxz
cmp
and
je
std
aas
sub
outsl
pop
mov
xor
pop
clc
imul
or
fisubrl
loop
clc
into
and
dec
outsl
cwtl
mov
mov
or
dec
inc
xchg
sbb
loop
cmp
ja
loope
xchg
mov
mov
push
jbe
int
dec
cltd
es
adc
push
lods
adc
pop
stos
call
in
enter
add
xor
in
dec
jg
dec
or
or
xchg
mov
jo
aas
in
xchg
adc
jo
lock
and
push
sbb
adc
dec
cwtl
clc
movsb
leave
push
fs
add
xchg
sbb
rorl
ja
sub
push
clc
test
push
pop
cmpsl
xchg
das
cmp
mov
pop
sbb
and
lahf
pop
aas
dec
mov
ds
xchg
push
fistl
addr16
popa
cltd
cmp
fstps
add
jnp
adcb
imul
sub
das
out
loope
fildll
dec
hlt
xchg
enter
loopne
xchg
jmp
mov
sbb
loopne
jae
and
popf
int3
push
lahf
leave
jl
and
fwait
lods
dec
jle
lret
and
cmp
test
subl
shlb
cmp
bswap
add
push
and
mov
adc
mov
adc
pop
and
stos
sbb
imul
or
sahf
aad
cmp
cli
sub
adc
fildll
sbb
popf
roll
jbe
movsl
movsb
loop
mov
in
fimuls
xchg
xchg
fists
outsl
pop
imul
mov
outsl
loopne
xlat
mov
pop
push
enter
cs
scas
push
push
xor
push
shll
jne
and
adc
mov
std
cwtl
jae
imul
fsubrs
pushl
push
inc
sub
sbb
in
pop
jmp
or
out
pop
push
xor
lock
push
dec
push
xchg
xor
adc
xlat
jae
pop
jp
cmpsb
cmp
pop
out
mov
adc
ds
movsl
nop
jg
hlt
jae
outsl
int3
dec
into
rolb
sub
xor
lods
outsb
cmc
dec
subb
fildll
mov
or
xor
sub
adc
and
call
jno
addr16
out
ret
shll
xor
xchg
fwait
or
xchg
in
mov
or
mov
addr16
adc
push
sbb
sbb
hlt
jmp
sbb
jno
mov
icebp
nop
sbb
dec
or
sbb
in
mov
cmpsl
add
aaa
and
js
fidivrs
mov
les
lock
loope
push
xchg
cs
or
scas
test
or
shlb
fistl
xor
dec
movsb
fsubr
sbb
mov
push
repnz
mov
icebp
jg
mov
inc
xchg
stc
lcall
push
sbb
jge
out
fldt
xchg
je
push
lcall
or
rcr
in
push
inc
mov
jle
dec
push
scas
ja
into
jno
mov
mov
stos
and
push
sti
mov
daa
sub
push
shrl
lcall
and
adcb
xchg
jg
jne
enter
inc
cs
hlt
adc
repz
jmp
jne,pn
push
mov
inc
pop
into
idivb
xchg
pusha
pop
add
je
in
or
lahf
mov
xchg
bswap
push
sbb
push
jnp
adc
loope
icebp
or
clc
pop
jge
inc
stos
push
mov
cmc
shrl
lods
jle
mov
lahf
pop
aam
and
add
cmp
jmp
cmp
inc
jns
addl
das
dec
or
scas
stos
push
and
sbb
inc
dec
test
jns
lock
jo
add
xchg
neg
push
mov
out
imul
mov
mov
sub
lcall
push
insb
out
insl
int3
dec
stc
sbb
mov
push
das
orl
fsubl
push
mov
int3
sbb
rclb
cmp
loope
iret
scas
dec
imul
fnstcw
jg
sbb
inc
inc
jb
dec
or
mov
fld
sbbl
mov
push
ss
stc
stos
lret
ficoms
jbe
xor
xchg
test
push
stc
in
xchg
jp
js
inc
shll
cmp
dec
aas
imul
xor
add
loopne
pushf
dec
mov
push
fbld
mov
lock
mov
inc
mov
sbb
imul
jp
and
fisubrs
add
lahf
imul
in
jns
pop
pop
ja
sbb
stc
pushf
rclb
imul
sbb
and
ljmp
cs
pushl
mov
cli
push
ja
push
call
adc
sbb
clc
xchg
imul
inc
xchg
dec
cwtl
je
mov
les
sbb
xchg
inc
scas
xchg
push
and
adc
xor
jle
dec
xchg
in
inc
pop
mov
mov
cmpsl
mov
loop
into
int3
xlat
xchg
rep
mov
push
xchg
jnp
adc
rcrb
mov
and
adc
mov
int3
stos
ljmp
inc
cli
cmp
cmp
fistl
pop
gs
cmpsl
loop
xchg
mov
pop
out
mov
xchg
cmc
and
jl
mov
and
mov
int
and
mov
jne
mov
cmp
push
jnp
aas
rep
jecxz
add
loop
stc
sarb
and
inc
dec
sahf
lods
or
and
and
pusha
cmpsl
ljmp
sub
xor
xchg
inc
push
hlt
shr
jmp
outsb
rcl
call
lret
jbe
inc
in
pop
mov
aaa
cmp
or
repz
mov
mov
adc
push
jae
rcll
jp
xchg
lock
in
dec
and
je
ja
dec
adc
xchg
lret
mov
jo
imul
and
ficoms
inc
sahf
outsb
shlb
adc
add
sub
outsb
xchg
mov
or
mov
dec
int
mov
lahf
rol
je
ljmp
in
push
mov
mov
xlat
mov
pop
inc
loopne
mov
out
sarl
les
xlat
dec
and
xchg
out
sahf
push
sub
xchg
jbe
push
mov
fists
aam
ss
mov
sub
ret
mov
cmpsl
xchg
test
jbe
jo
fidivs
mov
enter
inc
pop
inc
add
pop
pop
sti
sub
push
jge
cli
scas
popf
bnd
dec
leave
pop
and
mov
aaa
mov
or
scas
and
call
shrl
inc
mov
add
and
dec
icebp
popa
cmpsb
sahf
das
mov
repz
add
outsb
mov
sahf
arpl
mov
clc
sub
and
adc
cmp
add
fldl
enter
push
and
dec
dec
shrl
sbb
xchg
mov
mov
mov
lret
faddl
adc
mov
stos
cs
xlat
pop
sbb
movsl
sbb
mov
adc
sbb
test
repnz
xchg
and
cmp
scas
mov
stos
hlt
xchg
push
mov
adc
pop
loopne
stc
xchg
push
into
in
inc
test
mov
push
nop
sub
jno
leave
xchg
mov
jle
jge
scas
lcall
jl
in
mov
pop
or
stc
call
mov
cmpsl
jle
inc
push
fcompl
inc
in
inc
inc
stos
int
jb
pop
mov
sbb
xchg
cmpl
pop
jecxz
sarb
jo
fwait
lds
out
in
test
in
js,pt
adc
fwait
scas
lea
aas
xor
shl
lret
fisubl
daa
jno
out
in
jns
jg
adc
sbb
adc
fldt
or
sbb
lds
popf
repnz
stos
and
dec
xlat
push
dec
adc
insl
insl
ror
push
inc
or
dec
xchg
or
ret
add
cmp
test
aam
lods
push
add
push
pop
mov
fwait
mov
in
pop
test
push
mov
imul
data16
and
pop
mov
and
jp
mov
push
fldl
das
sub
xor
and
xorl
cmp
xchg
lods
inc
je
jnp
fyl2xp1
hlt
mov
jo
dec
jae
cmc
sub
cmp
cmp
or
ret
xchg
lea
stos
cmpsb
and
stc
lods
sbb
push
jne
popf
jmp
enterw
sub
mov
sub
and
xor
adc
aad
mov
incl
fildl
dec
ljmp
pop
dec
pop
add
push
pop
cltd
pop
mov
shll
addl
adc
clc
leave
adc
sarb
mov
dec
adc
ret
fisttpll
subb
and
in
orb
or
jp
adc
or
outsl
ja
int3
adc
das
sub
pop
addr16
ret
push
jne
or
js
std
imul
xchg
sahf
jmp
adc
pop
cmp
add
push
push
rcrb
rcr
sarb
loopne
clc
lea
xchg
mov
cmpsb
xchg
pop
adc
cmp
jg
jns
outsl
push
inc
xchg
xor
int
inc
cmp
push
mov
in
push
and
lahf
shrl
popa
test
adc
cmp
or
cltd
pusha
xchg
cmp
in
xchg
sub
push
out
and
ret
into
jae
push
cmp
movsl
fisubrl
in
and
pop
mov
mov
add
inc
adc
push
test
or
jno
ret
lock
or
test
imul
or
std
mov
fcoms
mov
adc
fwait
sub
inc
inc
mov
mov
call
mov
lahf
xor
pop
adc
jp
nop
inc
lds
and
fadds
repz
mov
push
jmp
mov
mov
icebp
rcrl
and
subl
movsl
xchg
cmp
mov
and
fildl
sbbl
jns
mov
sahf
aas
cmp
enter
lcall
and
mov
dec
jl
cmp
mov
andl
loopne
sub
dec
fnstcw
add
mov
fsubrp
test
xchg
lods
mov
cmp
dec
repz
inc
push
jmp
cwtl
and
lahf
std
jnp
and
pusha
rcr
dec
cmp
cltd
test
adc
mov
xchg
or
lea
xchg
movsb
cmpsl
jo
jbe
dec
out
test
mov
std
adc
test
xchg
jl
dec
inc
mov
lds
sub
mov
add
push
stos
in
or
xlat
push
mov
xor
push
out
in
mov
scas
int3
jge
adc
push
pop
nop
iret
inc
jns
push
dec
lods
inc
es
std
push
mov
xchg
pushw
adc
mov
and
mov
cmp
call
testb
push
iret
lret
sti
cmp
iret
cltd
sbb
mov
int
pop
sbb
sarb
or
loop
cmp
cs
test
addr16
loope
mov
push
and
fisubl
jae
int
cltd
les
dec
dec
pushf
cmp
push
shld
cmp
cmp
push
xorl
fcmovnb
inc
or
fmul
xchg
pop
pop
cli
fsubs
push
dec
insl
adc
xor
mov
int3
mov
xor
pop
or
add
and
fwait
pop
inc
jb
shrb
jb
rcll
imul
dec
lds
rcr
inc
dec
mov
inc
in
jmp
mov
movsl
inc
pop
icebp
lods
gs
mov
nop
xor
or
insb
jo,pn
cld
push
mov
loopne
mov
push
lds
shll
mov
push
movsb
in
subl
in
daa
mov
inc
icebp
cmpsl
aas
and
addr16
or
xor
ds
test
inc
push
call
adc
cwtl
mov
mov
lods
add
lods
mov
xor
sbb
pop
mov
test
mov
lds
adcl
iret
xor
orl
mov
mov
sbb
lock
pop
sti
jb
inc
hlt
mov
int3
sahf
aad
int
or
push
ffree
or
ja
add
sub
cmp
inc
pop
xor
lahf
jp
mov
sahf
sub
xor
sarb
lods
jae
popf
mov
xchg
lods
or
push
and
ret
cld
jb
repz
xchg
sbb
mov
addr16
repz
inc
lods
clc
psubq
out
pop
aam
inc
pop
sbb
cld
cmp
negb
sti
push
out
sbb
insl
dec
ds
add
sub
int
jo
jno
out
leave
rol
xlat
movsl
fs
cmp
mull
add
jp
es
xchg
enter
or
pop
mov
push
into
mov
and
and
xchg
mov
jecxz
cmp
jle
out
ljmp
in
shlb
inc
mov
or
int
jbe
fucomi
pop
aam
sub
or
popa
inc
xor
add
mov
movsl
or
fisubrs
push
arpl
sbb
cmp
push
leave
and
jo
outsb
into
fsubl
jb
push
pop
ret
dec
jb
add
sti
jp
rcr
xchg
pop
int
std
clc
shlb
call
out
nop
add
stc
test
testl
shl
sarb
xor
clc
nop
push
in
add
mov
sub
cmpsl
mov
jmp
sub
cmp
adc
adc
mov
sbb
hlt
and
jecxz
in
jecxz
sbbl
jns
movsl
aam
mov
dec
mov
ja
cmp
aam
cltd
imul
adc
int
cltd
and
xchg
cli
cmp
xchg
sub
ja
lea
imul
xor
pop
leave
fimuls
addr16
in
pop
push
icebp
scas
push
leave
js
fs
ljmp
in
out
das
or
jb
mov
xchg
xchg
scas
or
loope
inc
xor
aaa
push
pop
mov
fwait
leave
loopne
xchg
rcrl
inc
ret
xchg
sub
pop
add
and
cmpl
ret
push
in
scas
inc
and
fists
dec
and
mov
fdivp
mov
xchg
pop
mov
cmp
xor
call
scas
loopne
pop
sbb
xchg
or
xor
icebp
outsb
ljmp
cmc
adc
add
xor
xchg
inc
in
sahf
cmp
jle
dec
fcom
bnd
shlb
mov
aam
jno
jge
std
ret
rep
add
mov
scas
aas
imul
mov
fisttpll
adcl
iret
repnz
sub
out
rolb
enter
test
fpatan
mov
into
and
out
es
xchg
xchg
lret
test
mov
cmpsb
out
mov
and
mov
push
push
ss
insl
jp
imul
xchg
mov
je
sbb
and
push
xchg
xchg
xchg
fnstcw
cmpsb
lret
shrb
pop
inc
pop
push
imul
popf
or
inc
fimuls
ficoms
popa
shlb
xchg
inc
push
jg
push
cmp
cmp
lret
popf
cmp
les
fnsave
add
xchg
xchg
sti
cltd
js
jb
push
sbb
inc
and
mov
adc
pop
xchg
popf
pop
test
cmp
adc
inc
jo
es
xor
adc
inc
cltd
push
mov
or
dec
jle
shl
arpl
lret
jge,pn
xchg
add
arpl
enter
sbbl
into
push
int
push
sub
adc
mov
push
mul
inc
sti
stc
push
call
push
xchg
cld
inc
pop
repz
pushf
sub
cmp
add
and
mov
inc
fisttpl
lcall
jg
jmp
cltd
stos
sub
lds
jns
movsb
add
repnz
imul
or
push
jae
ret
pop
cli
mov
push
stos
mov
push
test
aam
sub
lcall
stos
loop
pop
sub
cli
sbb
repnz
xlat
les
add
ret
pop
xchg
dec
pusha
xchg
xchg
mov
jg
adc
pop
shlb
pop
xchg
test
cs
cmpsl
push
inc
lahf
sub
in
fstpl
sahf
mov
mov
xchg
jmp
insl
cs
jp
xor
mov
pop
in
pop
xorl
mov
fwait
jno
and
mov
mov
lcall
xor
cmc
bound
inc
push
push
push
pushf
loopne
jo
aad
push
mov
mov
mov
xchg
arpl
cmc
adc
pop
cmc
test
inc
jp
adc
in
lds
loop
push
in
mov
mov
in
enter
cmp
sub
mov
cmp
xlat
out
mov
jo
and
hlt
ret
fisubs
adc
mov
mov
add
adcl
fs
gs
xchg
insl
push
mov
jl
jp
daa
in
mov
arpl
or
call
insb
cmp
push
adc
jmp
aas
xchg
sbb
push
add
or
stos
jle
xchg
addl
repnz
pop
stc
xor
mov
add
ret
out
xor
fnstsw
and
jns
in
inc
movsl
in
sub
xchg
ret
pop
mov
sub
cmp
or
jmp
sub
push
jle
jmp
divl
inc
jae
inc
add
mov
add
std
aas
sbb
lret
idivb
call
adc
cwtl
daa
push
les
push
mov
shrl
cs
in
jb
in
xor
aad
ss
jns
adc
jb
bound
xchg
aam
add
push
mov
je
inc
outsb
lock
xchg
rorl
mov
dec
test
sbb
fcoml
fwait
arpl
jmp
imul
or
inc
xor
out
xchg
orb
sbb
sbb
cmp
cmp
pop
test
divl
fcoms
pushf
push
inc
test
lods
or
inc
idivb
aam
mov
jns
idiv
xchg
shlb
push
and
sbb
mov
mov
movsl
dec
mov
dec
loope
fwait
cmp
rorb
gs
xchg
addr16
pop
insb
xor
ror
fs
xchg
push
mov
xchg
mov
dec
xchg
mov
xchg
jmp
jg
inc
xlat
jbe
out
fs
cmc
mov
pop
mov
lcall
adc
or
outsl
mov
mov
out
mov
pop
cs
xlat
ret
rcl
outsl
xor
adc
adc
aas
ret
sub
lock
and
jne
dec
pop
out
push
loopne
test
jno
push
jne
dec
daa
das
mov
and
lcall
pop
jg
add
das
cmpsb
dec
jb
pushf
jbe
push
sbb
fwait
xor
adc
cs
push
enter
stos
pop
jmp
orl
lret
inc
xor
stos
mov
shll
mov
arpl
inc
jmp
jge
mov
lock
sbb
cmovp
jge
cs
lret
lods
add
or
xchg
inc
cwtl
sbbb
dec
loop
mov
mov
int3
fadd
outsl
mov
pop
das
mov
dec
popa
pop
lods
cs
jno
push
mov
adc
or
imul
fistpll
bsr
jmp
test
mov
adc
call
add
sub
aaa
dec
mov
push
scas
cmp
pop
push
adc
stos
jmp
addr16
mov
rclb
popf
ror
shll
fucom
mov
dec
rcrl
mov
xchg
mov
mov
cwtl
mov
xor
loop
faddl
xor
push
cmp
aaa
sub
sub
sti
jns
cli
jae
repnz
add
lods
xlat
rorl
rorb
mov
cs
add
jae
cmp
sub
stos
xchg
das
xchg
sbbb
sahf
mov
out
mov
test
out
test
push
shrb
lds
push
leave
fdivrl
movsb
dec
lock
pushf
out
and
and
pop
add
xor
push
out
mov
jg
cmpsl
data16
xchg
fbstp
fcomp
jae
mov
add
inc
jle
mov
sbb
decl
inc
hlt
stc
and
push
cmp
xor
sti
lahf
fcoms
fldt
testb
mov
add
mov
push
adc
add
jg
pop
push
sub
inc
call
cmp
test
and
cmp
fwait
and
pop
bound
dec
and
push
je
out
mov
jmp
repz
push
outsl
mov
add
call
rorb
rol
pop
leave
jge
filds
imul
xchg
fsts
cmp
testl
push
test
ljmp
push
and
aaa
mov
idivl
sub
clc
sub
dec
or
and
cwtl
sti
mov
popa
fcmovb
mov
mov
add
out
fldl
repnz
sbb
cmpsl
push
xor
xor
imul
ret
jno
test
mov
push
push
mov
inc
lock
mov
xor
ret
xchg
fisttpl
jecxz
add
and
mov
shlb
xchg
push
pop
push
rolb
jae
push
inc
cmp
mov
add
adc
inc
aas
inc
cmpb
out
lret
mov
or
mov
aad
in
int3
push
xchg
push
jle
dec
xchg
add
sbb
test
stos
lods
add
sbb
data16
lcall
xor
jo
pusha
mov
xor
addb
jae
in
fbstp
mov
inc
xor
pushf
jo
add
dec
hlt
adc
sbb
notb
sbb
repz
in
jne
and
sub
shrb
cmp
aad
std
mov
call
add
ds
pop
push
int
fistps
mov
lahf
lret
rcrl
dec
dec
push
lods
cmp
ret
lret
mov
mov
and
movsb
xor
sub
push
fbstp
adc
jbe
sbb
mov
test
ret
out
ljmp
fadd
std
data16
adc
je
jge
inc
inc
inc
sub
test
push
sub
inc
sub
xchg
fmull
es
aas
mov
adc
hlt
inc
roll
ljmp
adc
jmp
fisubs
push
sbb
dec
andl
inc
das
or
movsl
mov
jle,pt
imul
adc
mov
ret
shll
dec
xchg
mov
inc
jb
pop
out
add
stos
and
enter
ret
in
jns
imul
sbb
insb
rorb
imul
dec
cmc
xor
ds
or
pop
leave
pop
push
adc
into
ljmp
out
jl
shlb
push
rep
mov
mov
ljmp
xadd
insl
bound
xlat
mov
cmp
jl
add
test
cwtl
fildl
loope
mov
mov
aaa
sub
pop
or
xchg
rcll
out
loope
loope
lea
or
and
push
mov
and
push
push
cli
loope
repz
dec
loope
ja
test
jno
test
cmp
mov
dec
jbe
pop
push
push
lcall
mov
in
cld
pop
hlt
mov
cmpsl
fisttpll
mov
div
dec
mov
push
not
jge
xchg
or
sub
inc
adc
rol
out
nop
mov
sub
cmp
imul
push
dec
cli
sbb
dec
mov
sahf
mov
push
mov
clc
inc
stos
mov
push
inc
cld
testl
movsb
sub
jle
xor
jb
lret
sbb
mov
mov
andl
daa
inc
jmp
sbb
loop
mov
add
shll
xor
xchg
inc
pop
fdivl
xchg
xchg
popa
dec
jb
inc
or
inc
push
out
mov
xor
mov
mov
push
insl
out
dec
inc
fcoml
fst
jmp
adc
sub
push
sarb
loop
out
xchg
inc
adc
dec
add
shl
arpl
das
outsl
sti
push
in
and
fistpl
or
cmp
stos
sbb
shl
test
jmp
outsl
inc
ds
mov
mov
iret
lahf
cmpsl
stc
adc
ficompl
into
fidivs
outsb
jno
cmp
insl
pop
je
imul
mov
xor
mov
xchg
dec
mov
adc
mov
cmp
or
mov
andb
rorb
in
shll
dec
iret
push
xor
cmpsb
jmp
outsb
les
std
in
les
imul
stos
int3
ljmp
xchg
sub
fsubrs
mov
inc
fadds
out
lods
adc
imul
adc
adc
mov
jnp
sbb
mov
mov
outsl
mov
ret
mull
sub
fcoms
cmpsb
sbb
cs
mov
xchg
cltd
cmp
jne
repz
xchg
enter
cmpsl
xor
sub
and
int3
outsb
or
push
adc
sub
or
xor
sbb
fstpt
shl
into
ficomps
out
jo
and
xor
std
rclb
jbe
fcom
rcrl
sbb
sbb
cli
fdivrs
js
test
jp
insb
xchg
sti
push
mov
or
repz
pop
mov
mov
jmp
mov
dec
mov
xlat
jg
mov
nop
jb
xchg
fadds
mov
cmpsb
jmp
push
cmpsl
pushf
aaa
out
xchg
scas
repz
faddp
mov
faddp
push
data16
dec
jecxz
cwtl
adc
sbb
pop
dec
cli
pop
incl
dec
adc
int
adc
jbe
ja
adc
mov
fnstsw
mov
pop
jae
adc
inc
roll
pop
sub
shl
or
lahf
dec
mov
fisttpll
fcoms
cltd
loop
in
mov
shrl
push
inc
rol
xchg
aam
pop
sub
ds
lods
pop
xchg
sub
mov
mov
cmp
fcmove
pushf
add
cmp
ja
mov
jl
jns
jbe
xchg
adc
or
add
sbb
aaa
gs
cmpsl
stos
std
sbb
pusha
xchg
aad
pop
inc
into
cltd
int
cld
and
mov
dec
loope
outsb
cltd
or
repnz
notb
mov
std
es
inc
lret
adc
nop
jae
in
xor
test
stos
jecxz
cmpb
dec
inc
pop
mov
in
inc
lcall
cmp
mov
xor
xor
testb
dec
andb
adc
mov
pop
sub
mov
repz
nop
or
xchg
idivl
inc
les
ds
lea
mov
jecxz
dec
add
xchg
out
xchg
xlat
cli
inc
mov
cs
aas
mov
lea
add
orl
jmp
jecxz
aad
sarl
js,pn
loopne
lea
inc
loope
xor
xor
push
icebp
cmp
cmpsl
insb
ss
hlt
mov
inc
add
pop
insb
pop
xor
cwtl
shll
fildll
outsb
xchg
sbb
lods
mov
pop
add
scas
xchg
xchg
ja
cmp
stos
incl
cli
lahf
in
hlt
and
ret
rcrb
xchg
je
xchg
jge
jmp
sub
dec
and
fwait
fisttpl
test
ds
pop
sub
fimuls
dec
push
dec
cmp
sub
rol
inc
xor
jl
lock
inc
adc
push
insl
std
lahf
movsb
jbe
leave
xchg
icebp
into
repnz
cltd
xchg
adc
outsb
inc
or
pop
sbb
push
pop
mov
cmc
inc
hlt
push
xchg
test
and
jmp
sbb
xchg
out
dec
les
scas
and
in
cmc
push
push
add
jbe
or
iret
xor
loop
pop
dec
pop
add
sub
dec
and
adc
jnp
xchg
mov
gs
out
push
stc
jl
fsubrs
js
cli
std
nop
lods
push
push
push
fisubl
inc
mov
shr
lods
lock
add
iret
inc
mov
insb
pop
jbe
std
mov
js
je
out
scas
xlat
sbb
movsl
lcall
mov
clc
pushf
cmp
out
sbb
sub
movsl
movsl
mov
popf
push
adc
sbb
sahf
icebp
xor
adc
mov
idiv
dec
pop
inc
out
pop
fmull
outsl
inc
loop
dec
dec
mov
ljmp
ret
add
data16
enter
push
push
xchg
lret
ret
inc
mov
mov
and
add
xchg
sbb
lods
out
test
ss
xlat
dec
jg
jmp
mov
xchg
testl
push
test
jnp
xchg
mov
addr16
bound
mov
out
pop
cmpsl
cmp
in
xor
fcmovnb
mov
popa
aam
mov
push
dec
fs
xchg
sbb
xor
or
arpl
sub
push
pop
xchg
shl
mov
inc
pop
shrb
or
jmp
mov
insl
rcll
fnstenv
lahf
mov
std
jp
jge
or
add
lea
out
push
repz
fwait
lahf
xchg
cld
xchg
in
mov
mov
or
ljmp
inc
inc
xchg
jp
inc
fstps
add
pop
or
icebp
add
pop
fnsave
andb
cmp
xor
cltd
push
loop
push
in
popa
cmp
sarb
cwtl
lea
pop
lea
xor
cmp
cmp
push
push
stc
xor
cmpsb
rorb
dec
sbb
rorb
sbb
xchg
addr16
mov
or
in
jecxz
fsubrs
sbb
push
fnstcw
mov
in
inc
push
mov
aam
jp
xchg
mov
mov
fbld
or
xchg
arpl
in
mov
aas
scas
in
adc
inc
pop
icebp
pop
inc
jnp
test
movsl
aad
xchg
jl
pop
ljmp
js
jo
xor
hlt
inc
or
push
test
sti
add
aas
sub
cltd
or
out
in
aaa
cwtl
popf
adc
xchg
stos
in
lahf
xchg
cmp
cwtl
pop
data16
and
pusha
mov
sbb
inc
shll
inc
ds
dec
aaa
lods
sub
fwait
imul
lods
cmp
mov
dec
jns
pop
loopne
lea
dec
stos
fistpl
jg
movsl
mov
adc
lock
pop
dec
pop
jbe
shll
enter
ja
fildll
sub
mov
push
movsb
add
xchg
int3
mov
mov
pushf
insl
inc
mov
cwtl
loope
icebp
stos
fisubl
adc
stos
loope
inc
push
add
adc
cld
dec
jno
mov
push
cld
std
sbb
mov
std
fcomi
imul
jbe
xchg
or
mov
or
stc
xor
leave
dec
flds
cltd
inc
cli
adc
aam
pop
mov
into
mov
pop
cld
push
imul
ret
xor
les
mov
nop
mov
movsb
pop
add
loope
out
bound
test
test
add
orb
fwait
aam
imul
cmp
outsl
add
sub
cmpsl
xor
jnp
jb
aad
push
shll
in
test
inc
fstpl
jmp
xor
into
cmp
and
rcrb
adc
mov
sbb
pusha
arpl
xor
jg
cltd
aaa
movzwl
adc
sub
pop
dec
xchg
icebp
add
cwtl
rolb
xor
das
test
inc
enter
lret
popa
add
scas
xchg
fldcw
ja
xchg
out
fwait
jp
ds
fs
pop
push
jbe
jle
test
mov
je
lds
jbe
les
addr16
sub
fnstsw
and
push
outsl
xchg
adc
cmpsb
dec
fs
outsb
mov
dec
sti
push
xchg
mov
rol
ror
jle
pop
xor
mov
lods
addl
gs
out
mov
rclb
jg
std
loope
stc
cmp
out
lock
pop
push
das
inc
mov
pop
enter
lcall
sub
add
xor
inc
int
lea
out
lods
and
dec
shrb
cwtl
xor
push
nop
imul
repz
rcll
sahf
std
cmp
xchg
enter
in
rcll
adc
sub
andb
pop
mov
add
outsl
pushf
push
enter
lds
or
mov
pop
mov
adc
fwait
subl
push
push
test
fadd
fsubrp
pop
pop
jae
cmpsb
inc
mov
imul
mov
adc
lock
xor
out
stc
adc
jne
xchg
pusha
mov
add
xchg
push
push
push
jle
fdiv
out
jns
and
xchg
jo
loopne
jecxz
test
cmp
xchg
cli
movsb
outsb
fucomip
lock
adc
sbb
push
cmp
add
xlat
cmpsb
and
jae
adc
aam
in
call
xor
and
dec
je
and
xor
adc
sti
pop
mov
lret
mov
cmp
mov
and
jle
xor
das
addl
pop
ds
xchg
inc
jge
ljmp
ret
or
inc
sbb
pop
mov
mov
out
add
outsb
imul
andb
and
cmc
dec
pop
jl
popf
leave
cwtl
inc
movsb
insl
inc
xchg
dec
lea
rcll
inc
and
scas
mov
fsubs
repz
aad
popf
jno
cmc
adc
and
insb
cmp
fwait
sub
cs
insb
xchg
push
idivl
ror
sub
fidivl
xor
and
fdivs
push
insl
cld
stc
xchg
xchg
js
cmpsb
mov
popf
sbb
and
mov
mov
mov
les
arpl
hlt
shll
xor
sbb
movsl
les
mov
xchg
jo
fldl
scas
repnz
lahf
push
inc
cld
sub
inc
mov
testb
outsb
sbb
mov
ja
pop
aad
lods
and
dec
mov
dec
push
addr16
aaa
push
sbb
xchg
adc
sub
push
test
add
cmp
in
adc
xchg
cwtl
push
push
mov
imul
lods
testb
inc
loop
popf
mov
adc
leave
push
jns
jge
mov
jmp
cwtl
into
add
out
test
push
push
cmc
iret
sahf
movsb
popa
or
mov
fnstenv
ret
jb
ret
test
jbe
mov
mov
xchg
adc
sub
stc
sub
aad
leave
pop
sbb
pop
jbe
test
dec
pop
loop
mov
cltd
neg
in
adc
repz
shl
ja
adc
pusha
push
rorb
pop
mov
scas
add
aad
repnz
xor
push
sub
mov
pusha
nop
inc
dec
lods
loop
sub
or
pop
sbb
add
inc
test
xchg
mov
stos
pop
out
cld
pop
ret
ss
or
dec
fstpl
lds
push
dec
add
jg
aad
repz
push
std
and
pop
stos
cmp
lods
ret
fwait
or
xchg
jne
in
loope
fldl
lret
inc
jne
dec
mov
mov
test
andb
icebp
mov
add
mov
addr16
jbe
mov
mov
sub
xchg
inc
fstps
imul
pop
movsl
mov
cmp
cli
dec
add
xor
pop
mov
jge
fdiv
mov
lods
aas
adc
lret
call
push
push
mov
push
adc
into
mov
xchg
mov
jge
pop
cli
gs
cmpsb
jnp
sahf
or
push
cltd
sub
push
mov
test
pop
aam
lods
aas
cmp
sub
test
setp
sbb
jg
cmp
or
imul
pop
push
and
mov
das
icebp
inc
outsl
in
and
xchg
xchg
insb
jge
fs
mov
notl
adc
cwtl
add
xchg
adc
push
sbb
out
jecxz
pop
cmpsb
daa
ljmp
push
xor
cmp
je
mov
mov
add
dec
data16
jecxz
dec
mov
fsubs
mov
lret
pop
dec
mov
aam
test
ret
push
outsl
rolb
pop
aaa
mov
lods
out
out
out
imull
and
popf
lods
lock
push
mov
dec
jo
pop
aas
sti
sub
add
add
stc
adc
out
sub
mov
and
jmp
dec
cmpsl
fmuls
sti
jmp
int
push
mov
cltd
mov
lods
test
mov
mov
lock
rclb
testl
movsl
inc
fdivl
mov
fimuls
sbb
out
out
pop
push
neg
xor
aam
lods
mov
in
adc
ret
aam
mov
shr
nop
out
cld
out
mov
pusha
inc
xchg
adc
xchg
sbb
iret
stos
cmp
lods
out
cmpsb
lcall
movsl
xchg
fldenv
fidivs
or
add
mov
loopne
cmp
pop
stos
adc
push
gs
adc
sbb
pop
cmpsb
lea
fnstcw
test
popl
xor
cmc
mov
lock
lahf
xor
fnstcw
xor
jg
stc
jns
aad
and
cmp
test
dec
iret
test
mov
fbstp
aad
aaa
negb
xor
cmp
push
movsb
lock
jl
pushf
clc
je
push
push
shll
xchg
andb
fwait
mov
fsts
cmp
cmpsb
nop
push
loopne
sub
jmp
mov
sbb
cmp
jnp
ljmp
movsb
xor
shll
jmp
jne
shl
mov
nop
pop
xor
mov
xor
xor
notb
fs
cli
sub
xchg
xor
ja
mov
jmp
adcb
and
hlt
stos
adc
push
dec
jb
cmpsl
inc
cs
es
mov
punpckldq
sbb
mov
leave
or
mov
xor
mov
pushf
outsb
enter
stc
jmp
xchg
sbb
cltd
dec
loop
movsb
or
inc
test
fidivl
add
jbe
or
in
aas
js
lods
addb
pop
ljmp
jne
pusha
fnstsw
sarb
iret
sub
jl
push
mov
es
pusha
jge
nop
cmp
xchg
push
aaa
cmp
ss
or
gs
jle
bswap
mov
pop
add
push
int3
fidivs
aam
and
cwtl
jmp
dec
xor
in
ljmp
rorl
cmp
dec
jo
and
mov
cmp
mov
mov
fnsave
cmpsb
pop
adc
pop
aad
mov
out
inc
push
pop
jecxz
ss
xor
pop
stc
jle
cmp
mov
pop
xchg
or
jne
mov
rcll
push
or
test
jge
jb
cmp
or
mov
jb
cmp
and
lea
fs
leave
cwtl
mov
addl
jne,pt
mov
dec
ret
sbb
cs
fiadds
mov
out
sahf
mov
jle
and
mov
lea
xor
decl
adc
push
mov
insl
je
data16
xchg
pop
lods
fs
pop
and
shll
sarb
fwait
psubd
stos
scas
in
sbb
pusha
push
fnsave
mov
and
sub
xor
push
xor
in
mov
and
test
xchg
imul
inc
mov
pop
jno
aam
fnstenv
divl
fnstenv
mov
lea
scas
insb
sub
dec
xchg
adc
addl
or
dec
cmp
stc
ret
mov
inc
pop
sbb
mov
xor
movsl
push
test
lods
fwait
daa
mov
xchg
mov
xor
filds
or
mov
rolb
push
pusha
xor
sub
push
es
dec
sub
xor
inc
ds
add
scas
loope
cmp
les
xor
jns
mov
movsl
cltd
and
jp
mov
stos
push
sub
mov
and
adc
stc
add
xor
out
cmp
mov
cltd
das
add
lcall
out
pop
ds
sub
jecxz
pusha
mov
out
sti
xchg
xor
nop
inc
and
jle
out
cmp
rol
dec
lret
sub
mov
mulb
lcall
into
imul
test
adcl
jle
mov
mov
rcrb
cmp
sbb
call
jge
push
dec
jle
jne
and
add
cmpsb
cmpsl
jb
dec
jne
enter
jb
adc
or
arpl
ds
push
and
and
xchg
pop
jno
testb
ret
mov
push
or
in
roll
push
ret
pop
mov
into
ret
mov
dec
incb
addr16
adc
pusha
pop
lods
data16
arpl
sub
jnp
dec
cmpl
lds
iret
mov
imul
popf
div
pop
pop
inc
lfs
lods
xor
adc
push
stc
cmp
cs
jnp
push
movsl
or
sbb
sbb
aaa
popa
es
enter
push
or
out
sti
jp
fwait
stc
xor
fsubs
fidivrl
dec
lods
xor
xlat
mov
shlb
dec
pop
bound
roll
mov
shrl
jmp
orb
push
dec
out
cmp
mov
fxch
pushf
fistpl
mov
leave
pop
insl
iret
sbb
and
jle
out
daa
adc
inc
add
ss
or
sub
fcomps
mov
cltd
cmpsl
cmp
mov
jp
es
add
inc
xor
cld
cmp
cmp
lods
loope
add
xchg
paddusw
das
scas
sub
es
cltd
into
stos
cmp
jmp
stos
arpl
stos
and
fwait
xor
ret
pop
fimuls
jo
mov
pop
xchg
popf
test
adc
int
shlb
rcrb
inc
xorb
jae
xor
ja
add
mov
es
stc
sbbb
fcomps
add
nop
lock
mov
adc
int3
adc
mov
mov
xchg
pop
adc
mov
mov
push
cld
int3
sub
pop
push
cmp
xor
sbb
push
pop
clc
stos
jbe
js
lods
fisttps
jns
or
mulb
cli
sbb
xor
idivl
inc
sti
ljmp
movsl
adc
clc
inc
fstpl
pop
adc
sub
ljmp
repz
into
iret
mov
mov
lds
pop
sbb
aaa
scas
add
test
pop
cli
xor
fldcw
pop
sbb
lret
mov
cltd
sub
mov
inc
rcrl
loopne
addr16
int3
ret
lock
mov
out
mov
insb
adc
insb
push
mov
push
das
sbb
jl
dec
test
jmp
ret
dec
nop
xor
in
call
imul
call
fcmovnbe
loop
dec
push
fsubrs
push
mov
mov
rclb
testb
fstpt
movsl
repz
aas
decb
dec
clc
mov
xchg
cmpsl
mov
dec
adc
dec
out
mov
lret
push
out
in
xor
sub
into
xchg
sahf
jbe
sub
outsb
push
push
adc
ds
and
insl
fucomi
ljmp
movsb
and
dec
orb
icebp
xchg
pop
add
adc
into
cmpsl
mov
das
mov
arpl
xchg
dec
lods
std
pop
lock
jae
stc
lods
popf
adc
push
int3
cmp
sbb
int3
sbb
jp
mov
mov
jb
jae
andl
int
lret
jb
adc
cmp
ljmp
shll
jge
xor
dec
sub
pop
cmp
int3
jg
inc
aas
das
add
sbb
test
jmp
je
mov
mov
in
cmp
mov
jge
mov
mov
jp
aaa
jecxz
or
pop
loope
cmpsl
leave
lock
xchg
clc
xor
mov
dec
jns
jmp
jmp
sub
xchg
loopne
fadds
jmp
xchg
std
push
insb
cmp
fisttps
fucomi
or
js
lock
add
jg
and
sub
sbb
mov
inc
push
loope
add
add
sub
or
pop
pop
sub
add
and
sahf
cli
daa
jns
push
and
decl
xorl
lret
mov
cwtl
jle
stos
xor
enter
xchg
jb,pt
push
notb
sti
loopne
mov
pop
gs
dec
out
rcll
mov
adc
add
mov
sahf
cmc
gs
jge
fbld
or
lret
mov
mov
std
jb
xor
fdiv
xorb
pusha
addl
outsb
loopne
adc
and
jb
sbb
xor
or
mov
sahf
test
push
cmpsl
rcrb
js
lret
fisttpl
add
shrl
pop
or
lret
idivb
sbb
shrl
sbb
cmp
xchg
dec
xor
outsb
pusha
and
testb
in
sarb
add
pop
lock
stos
push
icebp
mov
stos
mov
jge
aam
and
leave
imul
into
lods
outsl
repnz
in
add
fnstenv
clc
xor
cmc
jg
mov
cmp
loope
out
mov
push
outsb
push
xchg
imulb
cltd
nop
add
ret
cld
xchg
adc
xchg
xchg
negb
xchg
xchg
pop
dec
pop
add
std
loop
mov
imul
fisubrs
cli
and
div
jae
push
movsb
int3
nop
bound
mov
mov
mov
pop
xlat
and
inc
faddl
inc
subb
insb
cs
push
ret
or
movsb
sti
sub
leave
push
inc
imul
sub
int
mov
and
or
outsl
in
imul
adc
or
cmpsl
test
es
repz
sub
shl
div
push
add
cs
cld
xor
addr16
xchg
or
ret
rolb
pop
sbb
xorl
subl
mov
hlt
scas
roll
popf
and
test
fcoms
cmp
call
inc
push
fdivl
loop
lods
xchg
into
or
or
mov
push
jae
push
mov
out
or
mov
in
cmc
jmp
or
mov
add
adc
sbb
xchg
inc
adc
pop
mov
jno
sbb
mov
sub
cltd
scas
sub
rcrb
and
sub
sub
in
add
mov
icebp
cmc
lods
push
xchg
dec
pop
adc
mov
xchg
lret
mov
cmp
aad
popf
mov
add
scas
pop
outsb
in
int
sub
gs
in
mov
ja
fisubl
fsubrs
shrb
jns
push
pop
mov
rcr
pop
dec
enter
ja
mov
sub
ret
bound
sub
add
gs
aam
aas
clc
push
inc
ret
adcb
adc
dec
pop
cmp
adc
or
jge
push
sub
add
pop
std
addl
mov
test
xlat
fs
jp
outsl
lods
popa
xor
mov
sub
int3
fstpt
xchg
sub
sub
adc
xchg
int
int
and
mov
or
cmp
jne
out
aaa
int
xor
xchg
jle
adc
sub
shrl
jno
cmpsb
mov
outsl
daa
scas
jge
mov
dec
test
mov
dec
popf
cld
inc
xor
test
int3
jne
inc
ret
mov
mov
sub
aaa
mov
les
pushf
cmp
pop
je
jecxz
inc
cmc
inc
pusha
test
or
arpl
lock
pushf
pop
pop
loop
cli
dec
jge
add
pop
leave
add
cmp
ret
or
pop
cmp
mov
aas
loopne
adc
sbb
icebp
and
cmpsl
lds
or
mov
nop
rclb
das
shll
or
in
pop
or
call
mov
loop
push
dec
pop
js
stos
sbb
mov
lahf
push
mov
int
mov
and
lock
stos
sbb
and
and
jne
inc
cwtl
mov
hlt
repnz
pop
mov
pop
fisttps
and
mov
leave
jecxz
sbb
sub
filds
jl
add
sbb
ss
lahf
push
jl
adc
adc
notl
sub
sbb
and
sti
ljmp
jmp
and
pop
sbb
xor
ret
nop
addr16
loope
popa
pop
imul
test
je
jo
repz
mov
stos
inc
outsl
xchg
push
ljmp
into
xchg
pop
scas
lods
adc
cld
jp
ret
movb
mov
cld
cmpsb
es
cmp
mov
nop
pop
sarb
mov
jmp
sahf
or
push
fimuls
push
mov
jo
jecxz
jae
test
jnp
add
cmpl
je
into
mov
and
test
aaa
xor
rep
testb
rcll
push
loope
ficompl
cmpsl
dec
pushw
add
xor
dec
addr16
adc
jne
mov
data16
pop
mov
fcoml
addb
scas
pop
jbe
push
popa
rolb
dec
rcl
test
fwait
and
lcall
fst
repz
add
movsl
xor
or
fimuls
pop
popa
stos
lret
inc
jne
test
data16
or
push
inc
sub
jmp
add
mov
nop
add
enter
mov
loop
adc
pusha
adc
outsb
jl
nop
fnstcw
test
cmp
push
cmp
rcrl
cmp
mov
or
sbb
cmpsb
scas
in
shrl
and
add
jp
scas
push
push
mov
xlat
dec
sti
fiadds
and
xor
cld
sbb
popf
stos
mov
jns
fnsave
mov
mov
sbb
lret
mov
push
loop
inc
iret
add
outsb
xor
imul
inc
push
dec
bound
popa
lahf
aam
jp
aam
repz
jl
stc
das
mov
pop
rorl
orb
dec
lock
jle
sbb
mov
jp
addr16
and
ret
cld
dec
jecxz
cld
or
xchg
add
popf
push
sub
cmp
cli
stos
punpckhdq
sub
mov
xchg
inc
loope
movl
ss
bnd
xor
lds
mov
fcmovnu
or
mov
fidivrs
int
loopne
addr16
jle
stos
dec
aam
mov
out
cmpsb
pop
xchg
sub
sarl
lret
mov
bnd
enter
mov
inc
inc
dec
in
dec
addr16
cld
jg
imul
fcmovnbe
mov
nop
dec
mov
push
cmp
and
insl
or
fmulp
daa
lret
xchg
xor
fadds
add
push
push
out
movsb
dec
daa
pushf
inc
pusha
aas
mov
pop
test
mov
movsl
decl
je
repz
or
cmp
mov
xchg
mov
adc
sbb
xchg
sbb
lcall
into
dec
enter
repnz
repz
ljmp
in
daa
fdivs
mov
xchg
ljmp
aad
rorb
dec
xchg
dec
mov
mov
aas
mov
test
mov
jb
add
and
pop
push
dec
stc
outsb
fadd
mov
pop
xor
lods
in
outsl
out
push
jl
lret
or
xchg
faddp
xor
or
sbb
fs
sub
pop
and
lea
push
lds
cmp
popf
in
shrl
mov
rcrb
ficompl
mov
mov
or
pop
sbb
push
mov
shll
push
test
lods
xchg
and
xor
outsl
ret
xchg
dec
es
xchg
fstl
pop
cmpsb
int
leave
push
mov
push
out
sub
adc
adc
xchg
cmp
out
inc
loopne
je
call
sbb
dec
xchg
push
jle
jae
leave
pusha
cwtl
pop
sti
clc
out
aaa
daa
mov
mov
mov
mov
jg
cmc
scas
adc
cmp
xlat
in
push
jg
adc
cmp
sub
ljmp
out
scas
pushf
sbb
cmp
and
mov
testl
mov
insb
mov
pusha
test
and
mov
fucomip
cmpsl
jno
sbb
fsubrl
icebp
lret
cmp
adc
xor
aaa
dec
inc
xchg
inc
sbb
rcll
stos
stos
loopne
inc
cmp
xchg
out
mov
test
fmulp
xchg
push
inc
dec
in
adc
test
outsb
mov
and
rcll
hlt
lcall
add
jns
es
out
or
jp
nop
mov
xchg
orb
jmp
mov
or
or
jmp
add
push
inc
dec
loopne
adc
mov
add
addr16
aad
jmp
and
cld
pop
push
mov
addr16
repnz
push
mov
iret
call
shl
test
jne
mov
push
scas
dec
leave
inc
sti
lret
mov
mov
mov
arpl
lret
xchg
mov
xchg
dec
out
cwtl
jbe
lcall
xchg
or
aas
outsl
jg
mov
sub
xor
xor
jl
dec
mov
gs
mov
notb
in
mov
lods
frstor
mov
fcompl
lahf
adc
cld
into
mov
lahf
mov
cmp
xchg
fmul
repz
test
cmpl
push
or
lret
xchg
mov
std
in
or
fbld
dec
or
sub
test
jge
lret
push
mov
mov
cmp
in
sbb
jecxz
xor
xchg
sub
cmp
or
sbbb
xchg
ret
mov
or
jb
mov
mov
pushf
sahf
cld
lock
mov
xchg
xlat
cmp
add
lock
push
into
loopne
cmp
push
loope
dec
dec
push
jecxz
dec
inc
outsb
jno
mov
stos
jnp
add
pop
add
fistps
out
or
add
out
jp
xchg
and
dec
xchg
leave
sub
mull
mov
and
dec
pop
cmp
in
xor
jae
ret
push
cmp
jo
cmp
push
xchg
jl
sbb
std
call
psadbw
cltd
add
sub
sub
cmp
popa
and
stos
cmp
push
mov
bound
dec
addb
xor
pop
std
xchg
mov
enter
cmp
mov
cli
xor
dec
fnstenv
imul
sbb
imul
out
shll
xor
js
lods
dec
inc
push
out
mov
mov
xor
imul
mov
popf
jge
sub
inc
sbb
popf
xchg
jle
leave
rcll
sbb
enter
arpl
shrl
ljmp
cmpl
adc
daa
ret
test
in
loop
cmpsl
js
add
addr16
xor
or
inc
in
xor
push
loopne
sbb
lcall
mov
jbe
add
lock
insl
bound
add
mov
mov
or
rol
mov
sbb
gs
je
mov
xchg
and
add
push
xchg
mov
dec
adc
rcll
fiaddl
add
push
xchg
inc
jge
aaa
loop
and
mov
push
jbe
mov
sub
js
or
xchg
jmp
sub
xor
cmpsb
call
xor
sbb
mov
pushf
jae
mov
xchg
or
sub
in
hlt
fisttpll
arpl
mov
pop
sub
and
cmpsb
cmpsl
sbb
dec
das
jecxz
mov
mov
inc
xchg
dec
adc
leave
jno
clc
aaa
and
and
negl
inc
dec
sbb
out
pop
int
push
into
jp
inc
mov
adc
push
sbb
push
push
fs
das
xor
outsb
scas
or
jl
fdivs
fstpt
pop
rol
rcrl
mov
loopne
cltd
imul
mov
outsb
cmpsb
xchg
push
ret
aaa
pop
push
sub
je
test
int3
mov
adc
adc
jns
in
mov
mov
mov
imul
hlt
les
mov
dec
daa
arpl
iret
xor
dec
add
subb
pushf
xor
je
bound
cmc
cmpsb
mov
iret
sbb
pop
xchg
rcr
arpl
das
outsb
push
bound
mov
nop
jmp
addr16
call
add
adc
shrb
ficoms
loope
push
rorl
mov
inc
sbb
int3
popa
int
sarl
lret
or
movb
nop
push
xlat
negl
sbb
sti
dec
inc
fstpt
iret
int
xchg
adc
icebp
xchg
js
repnz
dec
aam
mov
test
sbb
std
imul
cmp
movl
xchg
enter
icebp
arpl
call
shrl
push
push
test
pop
add
loope
call
xchg
inc
les
fisubrs
mov
cmp
lret
xlat
les
repnz
sub
into
dec
stc
outsl
add
sub
pop
jo
mov
stc
je
dec
xchg
mov
sub
add
sbb
jmp
aam
sbb
popf
dec
test
sbb
pop
add
sub
roll
pushf
adc
adc
sbb
test
fcomp
jg
jnp
stos
out
iret
xor
cltd
jp
jge
pushf
inc
sub
aad
jnp
dec
repz
sub
cmp
pusha
sbb
push
sbb
pop
mov
sub
pop
sbb
idivl
pop
arpl
pop
out
rorl
test
jae
cmp
test
or
fcompl
pop
push
es
lahf
cli
clc
inc
daa
ljmp
jmp
enter
cli
push
insb
xchg
cld
mov
mov
cltd
gs
pop
jge
nop
push
xchg
out
rcrb
dec
mov
push
shll
xchg
jecxz
sbb
outsl
scas
or
pop
pop
sti
cmp
lret
bound
lahf
ss
xchg
and
mov
and
cltd
jmp
pop
xor
sbb
fcoml
inc
jge
cmc
jb
lds
in
cmpsl
xor
xor
dec
lods
dec
fcoml
or
mov
aas
loop
or
aas
ficomps
cmp
das
fnstenv
ret
lahf
xor
fldcw
test
call
sub
jecxz
fisttpll
xchg
lahf
xchg
inc
iret
push
lods
ja
sub
pop
fdiv
mov
xchg
aad
add
or
cmp
add
pop
fildll
add
insl
cmp
rcr
xchg
push
lcall
es
ficoms
jnp
push
icebp
das
in
push
dec
daa
lea
lods
arpl
out
mov
repz
mov
inc
clc
xor
jbe
jle
xchg
pop
mov
add
das
cmp
mov
mov
jl
movsb
xor
lock
in
mov
fisttps
adc
arpl
lahf
mov
cs
shll
subb
pop
pop
jl
cmp
sar
pop
jmp
or
in
mov
sub
or
xchg
push
adc
push
sub
cmpl
add
jno
std
mov
jge
jo
dec
aaa
jp
jbe
lea
out
cmp
test
jae
ret
cmp
pop
or
cmp
repnz
insl
push
in
popa
sarl
xorl
sbb
jle
inc
imul
imul
lods
iret
jmp
and
lcall
pop
fcmovnbe
enter
neg
adc
jae
fists
and
push
push
sbb
xorl
mov
cmp
aad
jb
iret
inc
cmp
loop
divb
ds
gs
dec
mov
fisttpl
sub
dec
fnsave
hlt
adc
gs
pushf
mov
cmp
movsl
js
in
xchg
fwait
jecxz
incb
pop
cmc
mov
int3
aas
xor
and
pop
fwait
dec
pushf
xchg
jp
hlt
sbb
adc
mov
sbb
pop
xor
dec
mov
in
and
imul
sbb
scas
sarb
push
xchg
xchg
xchg
inc
inc
jno
add
add
sub
fwait
mov
or
lds
adc
jecxz
or
mov
dec
outsb
xor
add
push
adc
cmpsl
pop
cmp
lret
sbb
ss
cs
xchg
in
aaa
dec
test
jp
movsb
pop
fs
or
popa
xchg
sarb
xor
decl
lcall
and
mov
sub
pop
push
inc
repnz
out
loope
jg
jb
add
or
ret
sbb
dec
push
and
jns
out
data16
xchg
sahf
pop
pop
pop
shll
outsb
movsl
aas
and
cs
out
sub
pop
sub
xchg
sbbl
lret
dec
icebp
lcall
jae
mov
mov
mov
rorb
push
sti
iret
test
mov
mov
lret
dec
arpl
fimull
jno
cmpsb
adc
aas
pop
sub
outsl
sbb
or
daa
mov
cs
int
test
push
inc
notb
push
mov
insb
aas
xchg
in
push
mov
adc
ret
js
out
push
add
push
or
stc
mov
hlt
push
add
iret
dec
repz
bound
and
adc
mov
fwait
rcll
out
mov
pusha
cmp
and
dec
inc
scas
mov
add
enter
cld
in
xor
push
push
sbb
adc
mov
scas
ror
or
iret
and
ds
or
mov
mov
insl
sub
jae
pop
out
testl
mov
cld
xlat
push
pop
push
sti
sub
sti
and
cmp
sarb
pop
mov
jmp
mov
hlt
jne
nop
sbb
xchg
mov
test
adc
adc
adc
adcl
mov
sbb
inc
cmp
xor
movsl
pop
mov
xor
xor
xor
cmp
push
into
call
enter
fdiv
mov
pop
dec
and
sub
scas
fldenv
xchg
dec
dec
xlat
cmp
jmp
push
cmp
mov
stc
fs
add
sub
faddl
push
pop
lret
iret
or
out
out
stos
or
loop
push
push
jecxz
fiadds
mov
adc
aam
mov
dec
push
or
pop
push
std
cmp
les
sub
or
xchg
push
jns
rcrl
jmp
mov
ds
xor
pop
sub
loope
pop
mov
xor
andl
subb
sahf
jp
inc
iret
sbb
icebp
sbbb
adc
call
mov
arpl
bound
lock
mov
xchg
aas
sbb
lret
xchg
jecxz
jle
mov
cmp
test
xlat
ss
pop
adc
ret
mov
out
inc
imul
lcall
mov
push
or
je
xchg
xchg
push
or
enter
push
sub
xor
xor
mov
lret
or
jno
xor
jo
mov
imul
adc
pushf
sbbl
sbb
dec
clc
shll
push
js
cmp
fwait
xchg
in
inc
movsb
seto
cmp
arpl
jp
imul
ss
cwtl
add
fucom
leave
test
and
cmp
dec
pop
popf
test
dec
add
data16
and
push
aam
mov
ja
jno
push
xchg
push
inc
repnz
mov
sub
xchg
lcall
and
les
xor
inc
adc
inc
ret
sub
pop
pop
scas
inc
outsl
int3
pop
jns
jnp
out
and
dec
adc
jo
testb
rorl
fists
and
jne
cmp
cmp
xor
jnp
nop
not
shlw
fidivl
xchg
xchg
xor
jl
xor
pop
xchg
sahf
lcall
sbb
cmp
aaa
lcall
or
ss
mov
mov
pop
inc
xchg
pop
push
xchg
sbb
popf
and
adcb
pop
jbe
enter
mov
in
push
xchg
stos
cmp
bnd
clc
ret
mov
mov
add
popf
sub
sbb
rol
sub
and
fwait
mov
imul
scas
adc
lods
mov
js
pop
lret
xlat
mov
pop
pop
pop
ja
repnz
stc
in
sar
out
fimuls
test
mov
push
mov
lock
push
inc
adc
mov
add
icebp
sub
rol
sub
mov
mov
xchg
or
movsb
fistl
or
jns
aam
and
mov
pop
fidivrl
cmp
pop
js
sahf
jno
stos
roll
sub
js
repnz
or
sbb
test
fldt
out
dec
rorl
mov
ja
mov
ljmp
mov
dec
inc
shll
push
cmp
adc
xchg
pop
mov
test
mov
movzwl
outsl
outsl
aam
pushf
add
pushf
js
outsb
enter
jp
add
scas
or
ljmp
cmpsb
aas
rcrl
pop
hlt
stc
outsb
xchg
icebp
sbb
icebp
push
mov
ljmp
cmp
pop
mov
pop
je
fsts
dec
add
aam
cld
pop
cmpsl
icebp
dec
in
dec
aam
cld
nop
aaa
mov
iret
sub
lds
add
dec
mov
xchg
cli
pop
movups
divl
push
outsl
popf
or
cmpsl
adcb
and
int
xor
repz
or
pushf
je
lods
xchg
in
inc
push
mov
rcll
fiaddl
and
pop
icebp
mov
mov
imul
sbb
bound
jbe
clc
popa
cli
and
sub
testb
faddl
hlt
roll
ret
push
inc
adc
cmp
sub
add
into
inc
pushf
sub
xchg
imul
mov
jecxz
mov
push
insl
stc
dec
out
or
inc
mov
icebp
and
fsubl
cmp
dec
inc
adc
or
frstor
mov
daa
dec
arpl
in
jbe
jne
mov
xor
addr16
insl
imul
pop
push
fmuls
jmp
orb
lods
lahf
xchg
jge
xchg
xor
dec
in
or
jmp
es
imul
or
or
fsub
repnz
rclb
mov
jno
pusha
mov
jno
mov
cmp
push
mov
rorl
dec
mov
pop
sbb
sbb
adc
dec
pop
je
cmpsl
pusha
dec
push
cmp
lahf
mov
repnz
xchg
sbb
pop
out
mov
push
xchg
je
aam
xlat
insl
sub
adc
xchg
ja
adc
jno
xchg
and
xor
dec
cli
xchg
pop
fisttpl
fst
add
ficomps
and
jmp
ja
dec
push
jae
mov
sbb
popf
adc
xchg
xlat
mov
test
shr
in
mov
icebp
jmp
out
mov
lahf
stc
jb
es
pop
sbb
fdivrs
jbe
jns
xor
outsl
cmp
clc
jne
mov
or
mov
lret
push
pop
inc
push
push
inc
sub
and
sub
xlat
cmpsb
stos
inc
ljmp
ljmp
sbb
fdivp
mov
or
into
cmpsb
rcrb
xchg
add
ret
add
shll
add
mov
jl
or
sub
ret
fwait
cmp
rorl
pop
hlt
mov
xchg
dec
xor
pop
loope
ja
data16
dec
push
loop
inc
pop
dec
xor
mov
xor
mov
dec
fidivrs
mov
fbstp
in
pop
jnp
mov
xchg
test
adc
je
test
ljmp
pusha
xor
cld
rorl
add
fucomp
mov
push
xchg
dec
xor
mov
cmp
loope
jge
fs
mov
loope
andb
mov
popf
mov
or
pusha
inc
bound
add
lea
cmp
cmpsb
lds
pop
stos
scas
push
int
and
lods
mov
cmpsl
cmp
jge
jns
into
xlat
mov
mov
xchg
mov
scas
outsb
mov
push
test
mov
clc
add
mov
loope
jnp
insb
std
mov
xchg
sub
test
pop
repnz
arpl
cmp
mov
testl
outsl
and
jnp
sub
mov
mov
out
int3
jge
mov
xchg
data16
mov
push
sbb
and
add
pop
mov
push
mov
lea
stos
pushf
aaa
sbb
in
add
mov
mov
cmp
jg
pop
pusha
sub
pop
lret
roll
sbb
push
xchg
sub
pushf
xchg
roll
mov
mov
inc
xchg
js
push
je
sbb
nop
or
dec
jmp
icebp
jbe
dec
insl
stos
enter
cmp
cli
dec
pop
sub
push
lds
ret
iret
jg
fs
jae
sub
jne
les
mov
inc
jecxz
nop
enter
imul
js
sbb
inc
stc
push
mov
mov
mov
sub
xchg
push
adc
sbbb
push
pop
ds
lds
inc
movsl
jp
push
fiadds
icebp
jbe
mov
push
pop
sahf
mov
repz
aam
add
fwait
jne
cmovge
in
test
push
dec
out
lods
andb
iret
ret
mov
push
ds
mov
xchg
and
pop
mov
lods
insl
pop
fsubp
mov
pop
mov
mov
dec
inc
jno
mov
add
subb
jns
repnz
arpl
xor
iret
jns
mov
push
or
pop
test
mov
pop
jbe
iret
push
dec
ret
js
ret
mov
mov
jp
das
shl
outsl
std
out
mov
mov
sbb
stos
scas
jnp
push
push
pop
scas
out
or
xor
outsb
xchg
xchg
sbb
lcall
push
sbb
xor
int3
rcrb
jnp
xor
xchg
dec
addr16
xchg
dec
pushf
push
in
push
cmc
push
or
or
mov
jns
xchg
pop
jo
or
test
int3
lret
jnp
stc
xchg
adc
xor
xor
xor
xor
dec
xchg
dec
insb
cmc
xchg
jno
cmp
xor
ljmp
icebp
push
clc
iret
mov
mov
xchg
sub
xchg
adcl
xchg
leave
mov
fmulp
insl
sbb
xchg
cli
inc
or
xor
sbb
loope
insl
sub
shll
jae
mov
test
loope
jb
bound
test
or
sarl
rol
or
and
aad
cmp
fldenv
nop
jmp
push
inc
xor
pop
test
idivl
xchg
inc
sbb
out
mov
out
jne
aaa
push
daa
cmp
xor
xlat
icebp
mov
jle
int3
push
aas
or
mov
mov
nop
mov
mov
repnz
sub
xchg
and
sub
push
sbb
xchg
lods
std
pop
scas
aam
add
mov
lahf
jle
jns
jae
rcrl
movsl
in
sub
dec
pop
rorb
adc
clc
mov
call
rorb
jecxz
loopne
into
xchg
pop
mov
or
call
xor
mov
int3
es
adc
xchg
inc
shrb
adc
icebp
pop
and
aaa
mov
pop
cmp
push
addr16
sub
cmpsb
cmp
pop
pop
mov
sub
out
roll
outsb
cld
inc
div
mov
lods
fmul
push
inc
out
mov
and
jl
imul
repz
cmpsl
mov
enter
or
jnp
add
test
shll
movsb
int3
pop
rclb
scas
btc
sub
ret
scas
mov
lds
cmp
sub
and
xchg
cmp
mov
pop
sub
adc
bswap
mov
mov
lcall
sub
mov
push
pop
mov
out
sti
jp
rorb
push
je
xor
cmpsb
xor
roll
out
xchg
jns
mov
sbb
jb
and
in
je
lock
lds
jo
mov
jle
les
js
daa
mov
pop
iret
ds
in
aaa
cmp
fsubs
loope
sub
testb
outsl
pushl
xchg
es
and
ljmp
mov
xchg
clc
mov
dec
dec
pop
sub
jo
std
sub
mov
call
sub
dec
dec
or
rcll
cmc
pusha
test
addr16
imul
pop
mov
or
dec
cmp
enter
in
call
int3
addr16
push
sarb
shll
xchg
and
jmp
xchg
loope
idivl
xor
loopne
shl
or
vpmovsqb
xchg
mov
mov
ret
xor
popf
mov
and
adc
adc
push
addr16
push
mov
cwtl
and
sub
fbstp
sub
aaa
jae
sub
repz
in
call
mov
ja
xor
jl
sbb
jnp
es
mov
std
leave
sub
jl
push
push
shlb
or
lock
ret
or
push
out
pop
cmp
jns
cmp
xor
shlb
mov
jmp
mov
int
out
dec
test
sbb
mov
enter
sbb
xchg
cmpsb
movsb
cmp
pop
pop
inc
arpl
jnp
outsl
int
je
cmp
arpl
imul
cmpb
imul
cmp
ror
test
jle
mov
push
rclb
fimull
test
sbb
test
and
daa
add
xchg
jbe
inc
add
or
lock
mov
out
sub
adc
cmp
pop
pop
aaa
cmp
inc
lods
xor
sub
xchg
sub
adc
cmp
clc
hlt
mov
mov
or
nop
lea
mov
cmp
cmp
mov
rol
adc
das
stos
fstl
std
adc
sahf
push
imul
sub
mov
sbb
int3
jle
xchg
loope
das
inc
out
mov
and
mov
push
ret
xor
dec
push
add
jle
arpl
mov
jge
shlb
push
inc
int3
adc
jae
test
movsb
lea
insb
stos
dec
dec
ds
sarb
sub
out
lods
and
es
pop
push
popf
adc
testl
test
push
jno
jno
cmp
mov
push
movsl
push
ja
xchg
in
mov
xor
addl
cmp
inc
jl
push
cltd
gs
outsl
loope
pop
xchg
xchg
xchg
icebp
cwtl
push
pop
cmp
push
or
adc
popf
pop
movsl
dec
out
js
cli
pop
xor
mov
sub
pusha
fisttpl
sahf
add
mov
cmp
push
jmp
cmp
ljmp
sub
rcrl
sarb
adcl
xchg
mov
hlt
dec
sbb
add
std
add
roll
dec
enter
cmp
mov
data16
scas
xor
pushf
aam
stos
xchg
in
test
jbe
push
mov
subl
outsl
xor
mov
jg
cmp
std
hlt
lods
pop
jmp
jno
cli
mov
lahf
in
mov
pop
aas
outsl
js
adc
icebp
nop
stos
sbb
inc
adc
jg
jl
loop
pop
and
loop
pop
mov
fnstcw
shr
lret
inc
adc
pop
stos
cmp
inc
xor
je
or
lds
xchg
and
xchg
push
fcomps
cmp
cmp
enter
lds
fcompl
adc
outsl
int
add
ficomps
shlb
int3
orb
pop
xor
push
mov
xchg
dec
sub
outsl
in
dec
add
fidivl
xor
adc
hlt
mov
xor
push
mov
jno
pop
pop
jbe
pushf
lea
pop
inc
mov
pop
mov
insb
inc
pop
cmp
jmp
leave
jg
mov
jecxz
flds
jp
je
in
pop
scas
imull
add
sbb
adc
push
jge
divb
and
sbb
xchg
lcall
fbld
add
or
or
hlt
enter
jae
ret
aad
ret
stos
repz
add
jmp
jo
push
dec
jno
scas
fcmovu
cmp
and
mov
cmp
xchg
in
mov
add
mov
jge
mov
fmull
orl
jno
rcrb
mov
rolb
and
adc
adc
push
xchg
dec
cld
test
hlt
mov
aam
pusha
addl
adc
or
sbb
test
in
dec
adc
mov
mov
adc
push
xchg
insl
pop
mov
jb
dec
lcall
in
arpl
cmp
or
xchg
notb
mov
jmp
sub
sarb
in
insl
insl
push
imul
xchg
out
movsl
jecxz
adc
sbbb
or
aam
jp
inc
or
lcall
cld
rolb
test
jge
jp
popf
test
and
inc
scas
popa
jnp
les
mov
mov
arpl
std
jg
ficomps
xorb
add
cmpsl
xor
inc
inc
sahf
jge
push
jecxz
out
xchg
cltd
dec
xchg
mov
add
fstl
in
pop
lahf
pop
in
jmp
inc
int
lret
or
pop
outsl
enter
or
mov
jg
je
xchg
stc
pop
push
mov
ss
inc
sbb
cld
mov
aam
sbb
lcall
jo
xchg
mov
xchg
frstor
enter
pop
sti
xor
pusha
push
add
fwait
jnp
and
aas
sub
mov
dec
mov
or
mov
jns
fwait
sub
movsl
ja
imul
jle
insb
inc
cmpsl
jmp
addb
mov
mov
dec
jge
loop
cwtl
jge
ljmp
pop
stos
or
cld
icebp
popa
jnp
push
sti
mov
movsb
jne
pop
sub
pop
pop
je
out
nop
lahf
fists
mov
and
pop
xorb
mov
lcall
and
xchg
cmc
mov
xchg
or
lcall
loope
stos
xchg
sbb
addr16
out
aad
fstps
test
popf
push
jecxz
lods
pop
inc
push
sub
push
fs
popf
inc
aaa
out
je
data16
mov
sbb
outsl
popa
ds
sub
mov
and
xchg
cs
adc
xlat
xchg
out
adc
test
push
loope
pushf
dec
mov
shll
inc
or
jge
inc
inc
jge
mov
aaa
mov
les
pop
leave
sbbl
loop
cmpl
popa
mov
ficoml
dec
push
xchg
aaa
mov
adc
fcomp
je
stos
aas
jle
pop
cld
adc
dec
fwait
xchg
das
pop
add
mov
jle
mov
movl
imul
and
sti
xchg
push
std
sbb
mull
push
mov
push
movsl
mov
sbb
mov
movsb
ret
aam
ja
sub
cmp
shlb
es
adc
dec
sub
sub
mov
and
sbb
xlat
movsl
mov
fcoml
mov
sub
fsubrl
cmp
cltd
pop
adc
in
iret
cmc
stc
scas
xchg
sub
ficoms
test
xor
cmpsl
mov
inc
dec
hlt
jbe
or
sub
or
fstpl
cltd
lret
dec
iret
jbe
adc
xchg
inc
pop
xor
jnp
xchg
push
into
lods
pop
jecxz
push
arpl
add
jnp
dec
cmc
lret
out
cli
bound
mov
or
arpl
pop
inc
add
bound
xor
adc
aam
xor
aas
movsl
dec
cltd
push
sub
scas
popf
sarl
sbb
jecxz
and
xchg
cmp
mov
lcall
jecxz
pop
mov
aad
pop
xor
insb
and
sbb
pop
dec
pop
stos
push
inc
adc
sahf
sub
sahf
outsb
shll
push
mov
push
push
lahf
aad
mov
inc
out
push
pop
or
lcall
dec
adcl
in
and
insl
test
paddsw
inc
jle
hlt
stos
nop
shrl
jae
jecxz
fwait
imul
mov
push
jae
das
sub
push
push
nop
push
adcl
xchg
and
mov
sarl
shll
inc
arpl
enter
pushf
stos
jns
mov
lret
push
jns
dec
dec
mov
push
daa
es
cltd
ficoml
sbb
adc
pop
or
int
iret
repnz
add
pop
daa
stos
or
bound
loop
mov
push
mov
addr16
test
das
jne
sbb
leave
push
aaa
ret
in
lds
loop
xchg
mov
mov
xor
in
ret
or
addr16
pop
cmp
test
cmp
or
sub
adc
insl
adc
add
jo
rcrb
xchg
hlt
rorb
mov
xor
mov
and
adc
fdivrl
cwtl
rcll
push
into
sbb
into
mov
aad
in
mov
mov
inc
lock
in
shll
ds
fistpl
je
xchg
and
adc
test
jle
xchg
xchg
mov
cmp
movsb
out
aad
das
cmpsl
mov
sbb
sbb
jl
mov
mov
fcomps
divl
and
mov
fdivs
mov
sub
cmpsl
mov
lcall
dec
lret
cmp
ss
xor
test
cmp
mov
in
lahf
sti
mov
add
into
loop
mov
xchg
pushf
mov
enter
jp
lcall
inc
and
insl
js
push
popf
jnp
xor
xlat
dec
out
push
push
fnsave
mov
pushf
out
pusha
ret
add
arpl
into
or
and
sbb
jg
out
mov
test
push
jecxz
cltd
orl
push
jecxz
jnp
int
popf
hlt
leave
dec
pop
xlat
and
lea
popa
push
ret
incl
insl
aaa
inc
daa
cmpsl
add
sub
sbb
sti
lret
sub
adc
data16
imul
rclb
js
mov
and
sub
test
adc
jo
push
jmp
fsubl
out
jp
push
mov
mov
inc
pop
push
out
push
leave
mov
push
fwait
jae
cmp
test
jg
sub
addr16
loope
ffreep
loopne
jno
arpl
stc
addr16
xchg
push
inc
ja
ss
or
jno
add
stc
js
cltd
push
sbb
and
jns
push
out
bound
imul
rol
jne
mov
fadds
fmul
pop
mov
cwtl
pushf
addr16
cmpl
shl
arpl
fs
std
mov
sbb
daa
and
popa
ret
mov
data16
lds
lock
test
pop
push
mov
orl
add
mov
xor
mov
cs
pop
sbb
add
js
gs
negl
sub
mov
and
jae
sub
pushf
mov
test
pushf
push
hlt
and
idivl
je
aas
ja
mov
push
adcl
iret
cmp
jns
imull
ds
add
cmp
dec
fwait
cmp
push
cmc
mov
dec
scas
cmp
iret
pushfw
test
mov
iret
mov
mov
xchg
push
push
dec
xor
aaa
pusha
mov
push
icebp
add
das
pop
std
mov
cmc
loopne
shll
pushf
or
movsl
aas
ja
and
sub
ret
arpl
jmp
adc
nop
xor
and
fimuls
xor
xchg
sub
enter
jmp
ret
cmp
pop
divl
mov
call
pop
pop
out
out
jns
adc
ljmp
jmp
xchg
sbbb
scas
aaa
in
xchg
xlat
iret
dec
imul
insl
test
and
jle
ret
popa
test
adc
pop
dec
in
push
mov
out
iret
add
dec
test
push
stos
adc
or
aam
fs
push
mov
mov
adc
push
sbb
insl
add
rolb
mov
adc
imul
jp
dec
stos
addl
adc
out
jns
pop
pop
and
ret
imul
pop
jmp
push
fdivl
divb
sub
dec
sbb
xlat
pop
insl
pop
lcall
pop
lahf
popa
dec
adc
ljmp
fimull
push
scas
jb
rcll
pop
sbb
inc
push
call
clc
adc
lret
pop
xchg
lret
rclb
mov
xchg
cmp
jle
loope
push
bound
iret
push
inc
out
pop
cwtl
pop
inc
cmpsl
test
pop
push
dec
and
adc
pusha
daa
out
jecxz
aas
sbb
pop
push
scas
cmp
xor
js
ja
stc
ret
add
fwait
adcl
jne
jo
call
mov
addr16
sub
or
mov
xchg
adc
mov
inc
ss
push
call
xorb
cmp
push
add
push
enter
test
and
xor
dec
mov
divl
push
mov
int
pop
xor
roll
xchg
mov
add
sarl
or
cmp
dec
cltd
insb
fists
xchg
pop
pop
lahf
js
bound
or
mov
inc
gs
test
test
outsb
add
shlb
mov
loope
int
sub
add
int3
xchg
push
iret
dec
fstl
in
inc
xchg
push
and
xchg
mov
test
bound
jnp
mov
neg
ret
mov
xchg
test
lcall
mov
jl
xchg
in
dec
leave
or
sti
lock
sbb
pusha
pop
pop
push
test
xor
mov
outsb
into
mov
je
and
adc
mov
in
mov
xor
add
aam
mov
jns
daa
sub
adc
das
rclb
sub
jmp
sbb
mov
and
push
gs
inc
mov
outsb
rolb
ja
and
mov
push
in
inc
mov
cs
jg
out
fs
push
mov
push
push
enter
ja
test
sti
sarl
xchg
push
add
stos
dec
cmp
xchg
std
outsl
out
ja
ss
inc
and
mov
ss
add
mov
iret
call
pop
into
iret
aam
cltd
cmp
inc
dec
mov
fwait
add
dec
out
adc
cmp
iret
std
lret
lret
je
pop
jo
enter
into
in
cld
out
fistps
les
cmc
adc
aas
icebp
sbb
pop
mov
call
lods
stc
push
iret
push
stos
iret
and
movsl
mov
mov
pop
add
mov
fldt
cmp
aad
pop
xchg
stos
pop
insl
addr16
add
loope
in
sti
fstp
cmp
in
or
movsb
fildl
test
mov
popa
cmc
adc
enter
adc
in
sbb
add
and
ja
pushf
jmp
adc
mov
inc
imul
js
sbb
in
push
or
dec
adc
mov
inc
mov
lret
lock
mov
inc
mov
or
std
mov
ja
mov
mov
pop
lahf
lods
push
loopne
dec
cmpb
add
and
or
shl
fadd
fsubs
jge
test
add
sbb
popa
int3
dec
inc
hlt
cmp
inc
ret
or
add
inc
inc
sbb
mov
mov
cli
iret
jp
pop
push
lock
out
dec
nop
sub
sub
lods
cmpsl
test
das
bound
xor
push
sarb
aam
rcll
fiaddl
fs
mov
and
fwait
movsb
movsb
push
jno
mov
inc
xor
add
hlt
inc
dec
mov
test
les
loop
das
pop
and
and
fisttpl
mov
fisubrs
fstpl
push
sbb
pop
inc
sar
xor
adc
in
add
inc
fstl
mov
mov
shlb
popw
aad
mov
sahf
mov
outsl
sbb
xlat
and
xchg
iret
mov
loope
jg
movsl
jge
mov
mov
dec
lret
cli
xchg
pop
mov
addr16
sbb
inc
in
xor
and
xor
cmpsl
lret
pop
scas
lods
xlat
mov
cmpb
ret
pop
mov
leave
gs
aam
fiadds
into
dec
mov
test
push
ret
sub
outsb
jne
enter
jo
fdivrp
in
jnp
arpl
aam
rcrl
pop
jb
sahf
int3
sbb
cmpsl
xchg
push
sbb
xchg
jb
cwtl
xlat
xlat
mov
xlat
inc
add
mov
testb
push
sahf
sbb
push
stos
mov
cmp
fdiv
mov
cmc
jmp
inc
mov
repnz
or
sub
shlb
fldl2e
cmc
cmp
push
xchg
or
cmp
cld
in
stos
mov
scas
vpshufd
cmp
add
out
cmp
arpl
outsl
sub
stc
xchg
sub
mov
push
out
rcll
jno
xor
stos
daa
icebp
mov
inc
pop
aaa
dec
cmp
jl
sbb
add
movsb
lods
or
mov
ror
xchg
hlt
push
jecxz
inc
daa
dec
mov
jge
mov
mov
sbb
mov
ret
mov
mov
aaa
rcr
scas
sbb
mov
ds
gs
movsb
push
cmpsb
xor
cmp
sub
test
int
xchg
inc
fwait
pushf
cmpsb
sub
rsm
and
dec
loopne
add
lea
lds
int
push
loope
and
pusha
inc
sbb
stos
mov
mov
pushf
roll
sbb
jmp
rorl
lahf
mov
icebp
adc
rolb
jmp
jle
xor
push
out
mov
pop
dec
inc
int
mov
and
lods
mov
add
adc
into
push
xchg
push
icebp
idivl
pop
test
mov
pop
sbb
rcrl
jo
jae
mov
inc
sub
nop
inc
push
jge
mov
scas
std
lret
dec
and
ss
add
lret
sub
mov
sarb
aaa
push
push
fnsave
std
adc
mov
ja
xchg
sub
jo
jg
orb
mov
jge
xor
dec
sub
jb
dec
and
loope
ret
jl
xchg
and
and
mov
clc
sub
mov
popf
inc
push
dec
lret
pop
sub
push
je
xor
xchg
fs
pop
fdivrs
pop
aaa
xorl
cmp
push
pop
xor
xchg
lods
jns
addr16
adc
lods
fwait
sbb
xor
dec
repnz
mov
push
bound
cmp
xchg
cmp
rcrl
mov
shlb
xor
paddq
and
mov
add
movsb
mov
movsl
aam
or
sahf
mov
push
int3
or
inc
push
pop
sahf
mov
add
xchg
mov
stos
aam
lock
ja
xchg
mov
mov
and
xlat
sbb
xchg
loopne
cmpsl
mov
push
loope
mov
loopne
xchg
nop
stc
xor
mov
scas
movsb
mov
clc
mov
or
dec
lods
xchg
pop
cmp
jbe
lea
adcb
movsl
outsb
int3
iret
nop
cmpsl
xor
in
fsts
sbb
pop
jmp
jle
mov
cs
loop
xor
cmp
mov
xor
fmuls
cmpb
xchg
jbe
add
push
lds
insl
jno
repz
pop
mov
inc
movb
push
pop
popa
ss
inc
fistl
push
push
stos
mov
mov
mov
insb
popf
jge
fs
xchg
xchg
mov
pushf
mov
mov
lods
stos
mov
xchg
push
test
ficoml
in
inc
aaa
cli
scas
jge
or
iret
jno
out
xor
fldcw
mov
xchg
inc
add
inc
rclb
into
mov
cmp
xchg
push
ret
insl
rorl
je
xchg
cwtl
mov
test
jge
lods
mov
mov
arpl
jle
xchg
sbb
icebp
push
adc
sub
int3
lock
xlat
xor
rolb
push
aam
jbe
clc
pop
cmpsb
gs
daa
aam
pop
movsl
cmp
fiaddl
xor
cmpsb
pop
ret
popf
daa
loop
mov
mov
fsts
or
lret
add
stos
loope
xchg
xor
or
scas
jnp
sub
loop
mov
push
sbb
add
sub
int3
mov
mov
jge
int
inc
int3
add
dec
rclb
test
add
inc
push
lods
in
daa
push
mov
into
gs
ljmp
inc
jb
cmp
cwtl
jecxz
loope
xor
sar
ljmp
jns
mov
xchg
out
adc
sbbb
cs
pop
mov
decb
dec
aas
pushf
add
and
xlat
adc
jl
pop
cmp
ljmp
outsb
or
mov
jg
push
fsubrp
mov
repz
or
xchg
and
pop
cmp
mov
ljmp
dec
or
or
pop
push
leave
pusha
sbb
lcall
cmp
ljmp
or
lcall
imul
xchg
call
xor
dec
mov
sbb
push
incb
mov
loope
dec
int3
add
mov
cmpsb
aas
mov
adc
scas
fwait
ss
xchg
or
xor
pop
dec
mov
mov
dec
mov
sbb
mov
sbb
push
lock
imul
jge
add
test
gs
data16
xchg
mov
sub
stos
sub
push
mov
pop
mov
dec
jmp
loope
mov
loop
and
and
cmpsb
xchg
imul
pop
adc
cmp
push
mov
inc
loop
cld
jae
ds
push
sbb
inc
lock
ror
in
xor
ja
push
cli
cmp
mov
or
test
dec
jnp,pn
dec
mov
inc
jo
jl
mov
push
cmpsl
xchg
lock
into
sbb
ljmp
fldenv
out
aad
fadd
mulb
cmp
mov
cmp
jg
pop
cmp
push
ja
ret
cmp
rorb
xchg
jbe
stos
mov
cmp
sub
adc
leave
xchg
loopne
or
jl
or
mov
xor
and
jge
mov
xor
rolb
pop
loopne
mov
int3
push
sub
ss
lods
cmp
stos
sbb
sub
cmp
and
jnp
jle
out
je
jp
push
shll
mov
or
push
fs
or
nop
add
rcrl
fidivrs
xor
xchg
mov
add
xor
xorl
xchg
sub
ret
cmp
mov
dec
cmp
sbb
mov
into
fwait
cmp
in
or
mov
sbb
push
xchg
or
int
adc
mov
pop
dec
push
mov
test
shll
not
leave
call
pop
add
cwtl
fcoms
ljmp
cmp
test
mov
jno
sub
lock
sub
push
aad
aad
pushf
adc
es
lods
js
mul
add
leave
xchg
jg
js
push
adc
xchg
in
xchg
adc
sbb
dec
mov
imul
in
aam
cmp
xor
cmp
mov
sub
xor
rcr
xchg
pop
inc
or
cmp
stos
or
pop
bnd
mov
inc
adc
ja
aad
sbb
inc
sbb
testl
test
jbe
push
mov
cmp
movsb
and
push
adc
pop
and
xchg
sub
sti
push
sbb
outsb
pop
les
ljmp
lcall
in
xor
jno
and
fcmove
lds
lret
dec
inc
outsb
push
notl
rorb
lret
pop
lods
cs
popf
adc
dec
scas
int
iret
in
pop
sbb
mov
outsl
testl
mov
ret
mov
dec
js
subb
test
or
in
je
push
loop
push
and
int
jmp
adc
shll
pop
sbb
push
adc
jmp
xchg
sub
outsb
push
shrb
mov
push
cmp
out
xchg
cmc
rolb
pop
loop
cld
lcall
repnz
enter
mov
sti
faddp
adcb
jp
inc
push
mov
xchg
push
popf
and
adc
add
cltd
and
or
loop
or
int3
clc
mov
cltd
mov
mov
adc
adc
inc
mov
sahf
and
xor
mov
std
sbb
arpl
jnp
pop
clc
mov
pop
pusha
addl
in
or
addl
fsubs
outsl
rolb
inc
inc
adc
xor
std
icebp
mov
xchg
leave
push
mov
sahf
adc
fld1
sub
add
jle
push
movsb
sahf
add
fiadds
cli
mov
jecxz
pop
fnstcw
sbb
pushf
negb
adc
insl
call
je
ljmp
push
leave
lock
loopne
xchg
and
in
inc
loopne
leave
insl
xor
imul
mov
faddl
push
leave
je
movsl
or
adc
in
jb
and
dec
loopne
inc
dec
fsts
inc
cmp
mov
push
in
dec
orb
ret
xchg
xor
adc
xor
sahf
dec
jecxz
mov
push
mov
jne
inc
jle
cmp
sahf
push
pop
jne
xlat
es
cwtl
dec
adc
fsubl
rcrb
fcomi
pop
hlt
add
or
pop
inc
xchg
and
jo
in
sub
in
nop
test
xchg
and
pop
inc
and
lret
aad
mov
test
pushl
lea
cmpsb
outsb
data16
push
fistl
test
pop
mov
loope
cld
dec
xor
repnz
fdivrs
jne
sbb
loopne
ror
pop
mov
bound
adc
jge
mov
into
int
mov
scas
outsb
or
or
dec
jbe
and
and
mov
lds
push
sub
in
cmp
xor
movsl
inc
inc
scas
add
or
add
ja
lret
das
int3
movsb
sbb
sbb
xor
adc
das
cmp
lahf
jmp
fldenv
jno
dec
fs
cmp
push
aaa
pop
bound
ret
sbb
mov
pushf
jecxz
lahf
pop
jg
push
sahf
sbb
adc
shrb
push
push
ret
sbb
sub
add
cmpsb
xchg
sub
xor
loopne
push
repnz
xchg
cltd
pop
jecxz
lret
fimull
jle
movsl
icebp
dec
inc
ja
mov
adc
dec
rolb
push
jge
loop
mov
inc
sub
lcall
xchg
fildl
pop
or
add
outsb
in
xchg
or
cmpsl
std
cmp
imulb
jne
adcb
mov
mov
and
dec
loope
das
pop
lds
inc
cmpsb
add
mov
fstpl
inc
stc
jns
mov
cmpb
shl
jecxz
xchg
mov
mov
cmpsb
ds
xchg
adc
out
push
dec
pop
push
mov
mov
pop
dec
adc
xlat
xchg
pop
mov
jne
mov
in
cmpl
pop
or
es
ss
cmpsl
add
imul
movsl
jno
aam
in
or
ret
mov
repz
adc
xchg
pmaxub
out
pop
sub
mov
cmp
test
pop
rcrl
int3
ja
hlt
and
in
xor
arpl
sarb
dec
data16
scas
imul
nop
je
push
nop
mov
fdivrs
shrb
sub
in
add
sub
add
imul
rcl
pop
add
jmp
dec
test
call
aam
arpl
adc
xchg
pop
mov
out
mov
jp
aaa
lock
insb
add
mov
push
imul
cmp
es
loop
push
flds
lcall
mov
and
inc
mov
stos
dec
iret
int3
xchg
outsl
or
jb
nop
adc
sbb
adc
lret
pop
adc
jmp
mov
into
hlt
mov
adc
cmpsb
jnp
xchg
cmpl
std
lret
cmp
add
and
add
daa
rcl
into
add
sbb
and
or
in
cwtl
jge
sub
dec
jge
adc
xlat
pop
mov
sti
inc
cmp
jo
xchg
jecxz
fwait
gs
add
and
inc
movsb
out
int
shll
jns
cmpsl
push
pop
sbb
cmpsl
mov
inc
imul
outsb
xchg
setnp
loope
scas
jns
insl
add
dec
mov
sar
lods
add
or
hlt
aas
dec
mov
into
xor
pop
and
push
ret
inc
stc
add
mov
dec
gs
cmpsl
leave
fldl
rorb
ds
fidivrl
xchg
movsb
out
xor
and
gs
fsubrl
jnp
cmp
inc
aaa
lods
sbb
sub
popf
pop
imul
inc
imul
out
xor
sbb
mov
jmp
test
orl
push
xor
xchg
les
sbb
adc
gs
sahf
mov
adc
pop
shll
lods
dec
int
sub
push
cltd
inc
icebp
les
shl
adc
xlat
sbb
jb
inc
stc
xor
mov
fs
adc
cld
sbb
push
out
fstpl
clc
xchg
mov
stos
inc
lret
or
inc
sub
jb
or
xchg
xchg
and
jle
daa
jns
push
pop
scas
leavew
sbb
xor
stos
mov
mov
sub
call
repz
shlb
insb
cld
pop
fs
leave
pop
and
jg
jo
mov
sub
fwait
cmpsl
sbb
push
sbb
inc
nop
jp
imul
add
lahf
in
mov
sbb
insb
jmp
imul
in
fidivs
popf
mov
add
aas
mov
orl
das
mov
mov
aam
out
daa
jae
lods
test
mov
rol
pop
inc
ss
insl
push
es
pop
idiv
xor
mov
fwait
fwait
xor
repz
test
mov
inc
xor
cli
push
je
xchg
xchg
add
inc
and
ljmp
fmul
loopne
adc
mov
or
pushf
nop
jp
mov
xchg
sub
ss
xor
jnp
cmc
popa
or
add
shl
xchg
inc
jne
lock
inc
adc
dec
xchg
inc
cmp
cmp
fsubrs
and
and
orl
push
dec
mov
mov
das
test
mov
push
add
movsl
mov
test
jle
or
mov
jo
sbb
inc
dec
je
popf
mov
push
call
sub
and
mov
mov
out
mov
test
paddsw
mov
scas
inc
std
flds
jl
xchg
out
ljmp
popa
iret
aam
arpl
push
mov
mov
or
repnz
lahf
inc
clc
ficompl
bound
cltd
push
mov
outsb
gs
les
jmp
cmpsl
lcall
sub
dec
pop
cmp
stos
ja
mov
aaa
cmp
pop
cs
orb
push
mov
pop
cmp
xchg
adc
lods
dec
bound
cmp
sbb
inc
call
xchg
push
or
push
scas
mov
fwait
inc
cmc
or
nop
xchg
jecxz
push
inc
add
loop
sbb
sub
push
add
sub
and
push
test
cmpsb
xchg
cmpl
test
mov
and
push
loop
xchg
cs
mov
outsl
xchg
sbb
add
cmpsb
rclb
pop
mov
movsb
mov
gs
cmp
rclb
or
xor
or
scas
mov
lock
mov
cltd
inc
lds
xchg
aad
fwait
out
loop
pop
pop
test
mov
clc
sbb
push
fstpt
ret
jl
fwait
aad
pop
dec
mov
inc
aas
push
sarb
xchg
adc
add
outsb
push
out
jmp
inc
lcall
sbb
in
mov
pop
sti
es
test
dec
jp
imull
popf
push
xchg
jbe
aas
in
xchg
add
lcall
mov
cli
mov
ds
xor
push
xchg
adc
out
dec
cltd
in
inc
mov
mov
mov
dec
sar
imul
frstor
cmp
shlb
arpl
push
cmp
pushf
or
popa
jmp
inc
xor
add
in
cmpb
movsb
cld
push
arpl
cwtl
ds
push
xor
add
iret
push
and
cmp
out
xor
push
mov
aas
inc
notb
out
cli
pop
fldenv
cltd
dec
jns
imul
adc
push
lret
mov
popf
pop
fwait
nop
scas
cmp
pushf
stos
shrb
push
add
push
push
push
mov
mov
inc
notl
fs
test
xchg
mov
arpl
cmc
fdivl
dec
enter
scas
push
xchg
dec
call
out
mov
andb
inc
adc
movsl
clc
xchg
cld
jno
push
pop
mov
pop
fimuls
add
mov
std
xchg
in
int
shlb
mov
mov
into
or
es
int
adc
scas
sahf
jg
jnp
push
mov
repnz
aas
xlat
xlat
popf
mov
fnstenv
xchg
loop
je
mov
xchg
push
pop
cs
mov
testl
pop
movl
cld
je
sbb
and
mov
and
js
cmc
lods
repz
push
sti
mov
test
mov
xor
sub
and
xchg
cmp
jae
xchg
lea
jg
hlt
xchg
test
test
sbb
ja
in
lahf
inc
mov
outsl
cltd
add
test
or
idivl
or
aam
leave
andl
iret
pop
xchg
popa
incb
jmp
xchg
jno
iret
or
out
es
inc
dec
lock
cmp
push
add
test
lret
jge
push
cmpsb
test
push
shr
mov
sub
addr16
into
add
xchg
jge
stos
xchg
cltd
add
dec
popa
mov
pop
mov
test
addl
inc
xchg
jnp
dec
cmp
hlt
mov
mov
or
sub
scas
sbb
mov
sbb
xchg
lret
lea
mov
jl
add
adc
mov
leave
hlt
icebp
call
push
jb
inc
or
aas
insb
into
lds
xor
mov
call
fistps
inc
and
cmpl
adc
xchg
test
fstpt
and
outsb
icebp
cld
push
jno
pop
mov
ja
mov
cli
pop
add
in
sub
fstps
iret
push
or
enter
enter
cmc
ss
nop
mov
push
xchg
das
stos
jp
or
adc
aas
cmp
cld
lea
ss
push
icebp
scas
pop
pop
cmpsb
cmpsl
pushf
fdivrs
mov
inc
fwait
in
scas
shll
neg
mov
nop
and
xchg
push
dec
es
xor
bound
sbb
andl
ret
ljmp
inc
push
cmp
loope
aas
hlt
ljmp
adc
sahf
aaa
in
sti
or
dec
test
sub
inc
dec
psrlw
test
out
inc
mov
aam
ret
pop
pop
icebp
adc
and
push
or
and
cwtl
gs
jb
fsubrs
mov
bound
pop
pop
leave
cmpsl
fcmovnbe
dec
or
lods
imul
outsl
cs
ss
add
sbbb
xchg
mov
pminub
adc
ss
and
popf
clc
movl
mov
stos
test
mov
sbb
adc
or
inc
in
mov
xor
stc
pop
fcmovu
jbe
push
fcoml
in
push
es
dec
push
sub
stos
call
cmp
ret
cmp
scas
cmp
rorb
jle
pop
lea
aaa
call
clc
jl
int3
and
jnp
or
push
pop
push
or
mov
or
mov
or
xchg
pop
sbb
test
movsl
dec
jne
clc
out
mov
pop
fistpl
add
mov
test
ret
push
adc
pusha
icebp
cmp
fstl
in
popa
sbb
rorl
jb
xor
mov
or
cmp
jns
test
stos
clc
stos
pop
jb
add
cmp
jbe
cmpsl
add
adc
mov
lret
std
jecxz
or
lea
hlt
inc
add
aaa
fs
add
cltd
sub
jle
rorl
fs
push
mov
add
adc
popa
xor
push
ret
outsl
std
jae
adc
jl
push
jmp
icebp
push
sub
pop
bound
and
leave
daa
lahf
mov
push
ret
aad
inc
mov
pop
sub
ds
stos
inc
sbb
dec
and
adc
sarl
mov
add
test
jl
xor
and
mov
lret
xor
aam
adc
mov
ror
sub
mov
dec
mov
mov
dec
xchg
jge
cwtl
mov
sahf
push
sti
and
pusha
lret
cmp
mov
sti
adc
jnp
adc
lods
push
inc
gs
pop
and
adc
or
pop
sbb
aas
aad
rorb
cmpsl
push
cmpsl
jle
cmp
popa
sub
jp
scas
enter
ret
dec
ljmp
fs
outsb
repnz
cmp
inc
not
and
cli
fcomps
daa
fs
aam
sbb
lea
xchg
add
pushf
outsb
push
cmc
cmp
cmpsb
push
out
std
pop
mov
push
das
cmpsl
xchg
shl
lret
aad
daa
fbld
std
sub
jae
mov
call
repnz
pop
inc
dec
idivb
fmul
jle
push
or
fisttpll
jle
inc
lods
sbb
sub
push
sbb
adc
pop
cld
leave
pop
stos
test
or
sbbl
pusha
out
push
cmp
outsb
xchg
inc
jb
and
pop
pop
mov
int3
jle
fcomp
mov
add
dec
dec
test
inc
arpl
sub
out
pushf
adcb
inc
lds
enter
mov
add
mov
lret
rol
lret
dec
addr16
mov
and
push
push
lds
mov
aad
fnstsw
xorb
test
push
daa
es
aam
sub
xor
xchg
push
xor
lret
popf
out
mov
mov
out
dec
add
sub
jmp
call
mov
xor
fprem1
sbb
cmp
arpl
dec
cli
mov
lods
ljmp
mov
into
jae
popf
xchg
daa
iret
lock
ltr
out
xchg
lea
movsl
xor
scas
arpl
and
jle
adc
pop
out
data16
int3
cld
mov
xor
and
jae
add
insb
lods
es
add
unpckhps
test
ret
xor
dec
loope
je
pop
popa
cmp
ljmp
mov
scas
stos
lods
pushw
lret
imul
popa
or
adc
mov
in
dec
dec
push
mov
icebp
pop
xchg
sub
cmp
cld
cltd
cmpsb
push
iret
jl
mov
push
pop
popf
push
data16
scas
jg
loop
jecxz
out
adc
jl
cmp
xor
jge
jns
inc
test
ss
mov
lds
xchg
xchg
je
cltd
lret
push
clc
xchg
sub
adc
xlat
jle
cmp
lcall
popf
arpl
sti
mov
shrb
loope
data16
jge
cmp
loope
adc
sahf
dec
fnstsw
imul
xchg
push
pusha
mov
inc
gs
cltd
and
and
mov
inc
imull
out
xchg
cmc
cwtl
ljmp
in
push
add
lret
push
mov
sbb
addr16
xor
or
sub
out
mov
pop
cmpsl
inc
mov
inc
xchg
mov
xor
jmp
icebp
adc
xor
daa
mov
popf
mov
ds
jl
jno
into
pop
js
sub
pop
mov
push
sbb
jle
or
mov
iret
xchg
jb
orb
loop
les
stc
je
xchg
pop
popf
add
in
mov
dec
xchg
test
ret
cmp
scas
fnstenv
test
cmp
fstl
test
shlb
push
add
mov
sbb
hlt
push
sub
xchg
xchg
and
add
mov
pop
jns
aaa
cmc
daa
test
rol
sar
adc
iret
and
sbb
push
ret
imul
popf
scas
mov
in
mov
mov
loope
mov
xchg
imul
in
enter
leave
addr16
jbe
fs
xor
fs
subl
clc
out
adc
xor
pop
adc
fnstcw
pop
mov
bnd
popf
ss
in
cld
xchg
lods
cmpsb
icebp
loopne
or
nop
cmp
out
mov
jns
div
gs
cmpl
inc
pop
int
adc
int3
dec
bound
shll
enter
cmp
add
or
sbbb
mov
pop
push
loope
test
cmpsb
inc
test
mov
pop
adc
mov
lcall
xchg
adc
aaa
jmp
dec
repz
lds
mov
sbb
pop
mov
pop
pop
or
push
addr16
outsl
push
cmpsb
inc
in
icebp
insl
shll
imul
fistps
imul
jmp
sbb
test
loop
fs
and
in
pushf
loop
mov
fcomps
in
lcall
push
mov
mov
arpl
mov
int
das
xlat
xchg
sub
out
jmp
mov
imul
sbb
jmp
jne
xor
inc
in
dec
jne
ja
ret
xor
adc
mov
fimull
popa
pop
inc
int
clc
int3
mov
cmpsb
ja
xor
sub
cs
enter
add
daa
cmp
imull
lcall
arpl
sysenter
add
jo
add
rcrb
xchg
lahf
mov
rcrl
ret
fsubrs
movsl
xchg
lcall
xchg
jns
pop
adc
mov
insb
jp
push
push
es
xchg
xor
pop
out
xchg
mov
mov
cmpsb
mov
mov
insl
outsb
std
xchg
inc
int3
mov
dec
insb
fisubl
in
movsl
fs
stc
jmp
xor
push
push
pop
test
mov
inc
sbb
or
adc
add
in
cltd
fbld
jo
aad
dec
jecxz
hlt
ljmp
enter
add
out
xchg
and
into
sbb
cmp
mov
aam
icebp
pop
out
sbb
cmp
iret
xchg
jg
cmp
lods
and
outsl
xor
push
ss
aas
int3
pop
aam
pushf
adc
cmpsb
mov
lret
xor
adcl
mov
iret
lret
dec
movsb
xor
call
sub
mov
into
dec
aas
inc
mov
popf
sbb
sarl
lret
test
xchg
jae
test
scas
inc
fcoms
cmp
pop
xchg
bound
mov
inc
imul
hlt
or
dec
inc
fidivrs
pop
push
or
mov
jmp
in
add
cwtl
mov
popa
xorb
loop
movsl
in
dec
fists
or
btr
sbb
push
sub
movsl
decb
test
mov
adc
push
jecxz
cwtl
add
xorb
adc
sbb
lret
fisubs
push
ljmp
ret
and
push
arpl
mov
sbbl
addps
pop
and
mov
fidivs
inc
or
inc
sarb
xchg
cld
in
inc
pusha
adc
pop
or
mov
mov
lods
ja
sbb
mov
dec
jnp
add
ds
xchg
lret
mov
enter
insb
notl
sbb
push
scas
fisubrs
mov
xchg
in
mov
fidivrl
inc
push
ret
orb
test
out
cmc
in
mov
pop
in
cltd
dec
es
iret
rolb
adc
cld
in
pop
fsts
or
xchg
movsl
repz
sbb
or
cwtl
push
cmp
ficompl
out
cltd
in
jle,pn
dec
xor
hlt
in
test
imul
pop
iret
aam
fcomps
mov
popf
and
and
sub
gs
jmp
popf
jle
out
sub
out
leave
push
jmp
or
pop
leave
shlb
stc
inc
fst
or
jns
mov
popf
lock
arpl
pop
jnp
push
aas
fsub
xchg
dec
test
add
rcrl
je
mov
jg
in
adc
xor
xchg
gs
aad
inc
lret
add
fistps
add
jge
or
test
xlat
inc
xor
jp
stos
nop
cmpsl
xchg
outsb
pop
out
sub
inc
je
push
adc
jns
mov
lds
dec
sub
add
add
and
and
call
repz
inc
xor
outsb
jnp
push
int3
rclb
cmovae
das
in
sahf
pop
repz
mov
bound
fiaddl
mov
insl
dec
xchg
nop
mov
jno
pop
and
jno
jns
je
es
cmp
jnp
cld
stos
icebp
aam
adc
nop
pop
cmc
addb
jno
sbb
xchg
inc
jno
addr16
mov
stos
add
stc
cmp
sti
pop
sbb
out
insb
lret
fistpll
dec
fidivl
loop
jp
sbbl
pop
or
negl
add
sbb
mov
sub
adc
popa
push
push
dec
adc
aas
xchg
gs
xchg
ja
push
aas
push
fstp
mov
xchg
mov
sahf
add
popf
jg
and
addr16
and
gs
sbb
mov
lods
hlt
cmp
leave
out
push
cmp
pop
dec
push
push
enter
daa
pop
sub
fs
testb
mov
popf
aaa
pusha
mov
mov
inc
xor
jle
adc
xchg
xchg
xorb
xor
push
inc
xchg
loope
xchg
mov
mov
call
leave
xchg
push
adcl
mov
shrb
mov
popf
cmp
mov
mov
subl
movsb
push
sahf
imul
stos
dec
and
adc
inc
jl
mov
iret
pop
mov
dec
out
incb
insl
xor
rcll
sbb
imul
add
sub
push
subb
ret
xchg
outsl
and
dec
fisubrs
clc
inc
xchg
and
aaa
inc
les
outsb
xchg
aam
lahf
xchg
push
repnz
sub
js
cmp
loop
or
fidivl
shrb
xchg
cmpb
mov
mov
inc
ja
sbb
mov
pop
jmp
sbb
repz
mov
dec
fs
jmp
xor
mov
mov
les
inc
xchg
add
mov
xor
mov
cmc
dec
negl
addr16
fs
ljmp
pop
xchg
mov
sub
jecxz
movsl
push
jp
cmp
sub
mov
push
mov
scas
mov
std
push
push
stc
xchg
enter
sub
sahf
stc
cli
cs
cli
jmp
jne
jne
cmovle
pop
lods
sub
fdivs
xchg
iret
fnstcw
mov
cmc
in
inc
ret
adc
mov
lcall
pop
stos
out
fidivrs
mov
jns
orl
xor
dec
cltd
push
dec
pusha
sbb
in
xchg
xchg
jns
xchg
jmp
arpl
xor
mov
frstor
cltd
shrl
jno
mov
scas
das
outsb
or
call
or
push
xorps
lds
stos
bound
mov
xchg
insb
xchg
jns
hlt
cmp
ret
pop
lret
loopne
ljmp
aaa
in
and
into
es
addr16
push
cmp
xchg
jno
in
fcoms
lea
inc
add
push
lods
lcall
inc
jle
hlt
shrb
xor
dec
push
push
push
jecxz
jecxz
test
add
rcll
mov
jle
incl
mov
ret
and
and
dec
out
sub
addb
cmc
pop
outsl
into
xorb
sub
in
fistpl
lret
or
pause
pop
int
pop
iret
inc
arpl
je
outsl
mov
cmp
mov
xor
shr
out
jp
cmp
sub
xchg
aas
or
iret
pop
pop
leave
dec
aas
cmpsl
fiaddl
sbb
mov
out
in
xchg
in
sub
and
dec
stos
shlb
and
cld
xchg
fwait
xor
out
xchg
nop
xor
lea
fwait
hlt
insl
add
aaa
mov
fpatan
xchg
std
inc
dec
fcomi
adc
fcmovnu
lods
mov
dec
lods
je
xchg
xor
inc
dec
jecxz
mov
sub
sub
sub
xchg
into
cmpsl
mov
inc
xchg
scas
adc
jg
dec
xchg
lea
jmp
pushl
aam
inc
or
fldcw
popf
xchg
mov
movsl
mov
lcall
dec
jmp
sbb
cmpsl
jnp
arpl
adc
cmc
pop
mov
adc
outsl
popf
ljmp
mov
divl
js
ljmp
arpl
sbb
and
into
jbe
lahf
cmp
mov
lods
daa
mov
test
jo
push
insb
les
cmp
ljmp
inc
shlb
or
popf
inc
lcall
or
or
add
xchg
mov
sub
decb
ljmp
push
sbb
pop
cmp
dec
push
imull
movl
mov
aam
test
daa
adc
in
shufps
in
mov
push
scas
stc
jge
jne
add
sub
xor
pop
in
std
pusha
popf
ljmp
mul
movb
int
cmpsb
mov
repz
or
xor
mov
mov
mov
inc
rol
cmpsl
cmpsl
stc
aam
sbb
shlb
flds
adc
xor
je
mov
push
jne
fsub
in
dec
and
daa
enter
xchg
scas
sub
push
pop
mov
test
int3
mov
loopne
xchg
push
mov
jb
cwtl
pop
mov
jge
fs
adc
or
sbb
mov
scas
repnz
dec
movsb
mov
repnz
mov
jl
sub
leave
add
in
dec
fcmovnb
gs
pop
mov
cmpsb
cwtl
lea
push
mov
push
xlat
mov
cwtl
dec
add
mov
sbbl
cmp
jns
lcall
aad
daa
out
ret
rcr
xchg
lock
sbb
push
insl
cmp
inc
scas
lods
test
dec
cwtl
repnz
add
ds
cmpsb
cmp
mov
orb
xor
sbb
addl
lcall
vpaddsw
pusha
or
pop
push
xor
jp
aas
fldt
inc
adcl
pop
std
xor
jb
rcl
shll
in
jp
lahf
fwait
shl
fmulp
xchg
shlb
add
push
int
sub
push
mov
ret
arpl
xor
lret
idivl
leave
and
push
aaa
sub
xchg
mov
ret
adc
inc
push
sbb
inc
mov
insl
push
sti
pop
orl
ret
movsl
xchg
add
jae
nop
dec
shl
repz
hlt
add
pop
adc
rcl
test
shlb
fnstcw
push
mov
pop
mov
jno
cmp
sbb
and
test
iret
das
lea
inc
lcall
or
lahf
cmp
fisubrs
or
std
xchg
pushf
ror
mov
add
lods
popa
sti
and
je
scas
xchg
add
insb
insb
pcmpeqd
lods
cmp
xchg
cli
out
or
mov
dec
push
jo
sub
in
je
fstl
mov
pop
addr16
xor
in
push
mov
and
inc
xor
mov
arpl
push
test
sbb
lret
push
pop
clc
mov
push
add
sahf
sbb
pop
or
movsl
gs
or
xchg
push
xchg
inc
pusha
dec
sbb
aas
jle
sbb
jmp
popf
pushw
mov
xchg
cmp
outsl
inc
xchg
sbb
jae
subl
push
cld
mov
imul
and
lahf
and
add
jnp
mov
daa
dec
stc
lret
js
loopne
test
inc
dec
dec
fnstenv
gs
dec
xchg
fcoms
mov
leave
leave
std
lret
pushf
stos
push
pop
inc
jo
test
xor
adc
lock
ret
test
popa
in
ret
movsl
sub
sbb
mov
cmpsl
xor
testb
pop
mov
hlt
and
fdivr
aas
in
ret
or
xchg
jl
rclb
adc
adc
adc
movsb
dec
mov
sub
jg
jno
divb
adc
sbb
lods
jp
ja
jmp
push
mov
insb
lret
xchg
fisubrl
or
xchg
push
js
jne
scas
pop
pop
cmc
inc
lret
int3
cmp
jmp
cmp
and
adc
mov
es
mov
pop
xchg
xor
pop
add
nop
xchg
mov
jg
popa
push
or
mov
aad
push
mov
jle
fucom
mov
xor
stos
add
mov
jecxz
xchg
mov
pushf
imul
lcall
mov
sqrtps
push
xchg
pop
mov
mov
push
jnp
out
mov
pop
jge
dec
mov
cmp
shl
inc
xchg
push
inc
sbb
xor
ret
jmp
push
popf
and
stos
gs
cmpsl
outsl
shrb
insl
mov
sbb
loop
jae
rol
cmp
jl
adc
jnp
int3
cmp
in
adc
into
mov
adc
cmp
cmpsl
xlat
movsl
shrb
sub
xlat
and
pop
mov
add
fcomps
push
sti
sbb
out
inc
xchg
imul
jo
insb
sub
mov
xchg
sub
xor
sub
data16
pop
jle
inc
scas
ljmp
shl
pop
data16
xor
push
and
loopne
fucomi
stos
ret
mov
jne
jmp
inc
cmpsb
inc
in
or
movsb
mov
scas
shrl
test
jle
mov
xchg
test
scas
aad
imul
shrl
shlb
pop
into
xchg
andl
mov
mov
nop
fistpl
add
and
rclb
repz
test
mov
cmpsb
jge
mov
cmp
pop
sub
pop
mov
je
mov
mov
fcomp
das
lahf
dec
sbb
mov
mov
sbbb
push
cmp
or
bound
in
mov
pusha
push
rcrb
jmp
popf
cmp
dec
movsl
adc
fcmovb
pusha
stos
ret
add
dec
xor
or
cwtl
dec
mov
mov
decb
imul
mov
pop
mov
push
mov
icebp
push
out
out
sub
jno
dec
shll
rcl
aad
cmp
mov
mov
mov
sarb
mov
in
mov
xor
cmp
xor
and
inc
fwait
cmp
insl
rorb
ficomps
cmp
arpl
stc
xchg
pop
mov
add
int3
xchg
mov
cmp
adc
and
xchg
jmp
pop
jmp
mov
scas
jl
xor
jl
or
dec
pop
mov
fmulp
mov
sbb
push
inc
pop
mov
fcoms
or
loopne
int3
aas
mov
idiv
cmp
cmp
mov
out
inc
lret
cwtl
xor
clc
fildll
out
cmpsl
sub
dec
jecxz
pop
insl
xor
insl
test
or
or
leave
shll
jo
jne
xchg
popa
aas
mov
nop
cld
push
jmp
jb
jmp
lret
pop
xchg
dec
mov
pop
les
sti
sbb
enter
add
dec
jle
pushf
dec
dec
pop
mov
popa
testb
fs
mov
arpl
xchg
ret
push
clc
jnp
std
arpl
iret
divl
cmp
sbb
sbb
add
sub
aad
mov
xchg
xor
lds
mov
imul
dec
and
cmp
and
pop
inc
rcrl
push
inc
adc
ss
aad
lcall
adc
cmp
in
push
outsl
repz
or
pusha
ds
insb
xlat
dec
sub
scas
push
pop
fidivs
xor
jg
cwtl
pushl
jp
inc
sub
adc
dec
pop
aad
popa
fs
and
xchg
call
sbb
mov
and
mov
xchg
sub
mov
push
sbb
test
mov
scas
add
ds
test
test
push
xchg
aas
hlt
lahf
daa
push
ret
lret
xchg
in
pop
mov
out
push
and
loop
jp
push
hlt
rorb
pop
fldcw
in
sub
fwait
sbb
mov
or
fmuls
push
in
cmc
mov
es
cmpsb
inc
inc
push
adc
adc
or
pop
test
push
mov
push
lock
mov
and
cwtl
in
push
push
adc
bound
rcll
mov
mov
mov
hlt
add
push
sti
cmp
insl
data16
daa
dec
jle
sbb
pop
or
push
test
mov
or
enter
sar
mov
push
pop
scas
sbb
mov
xchg
sbb
inc
in
sarl
clc
into
test
ficoml
lahf
jne
aad
lods
loope
orl
jne
lret
cmc
lcall
ljmp
inc
lds
inc
sub
lret
shrb
xchg
sub
test
fnstcw
cli
cmp
push
adc
cld
and
xor
insl
aam
imul
pop
sbb
inc
cltd
add
sbb
dec
jbe
jmp
sub
or
adc
mov
or
fwait
clc
or
clc
pusha
mov
jmp
mov
push
lahf
jg
or
add
xchg
in
out
pop
fwait
rcrl
insl
jecxz
in
inc
imul
ret
cld
pop
push
scas
sub
and
add
in
push
xchg
push
stos
mov
shll
fistpl
pop
test
mov
inc
fmuls
popa
lret
push
dec
std
sub
xor
les
negb
dec
cmpb
or
xchg
pushf
sti
dec
jl
sti
xlat
push
add
cmp
enter
dec
pop
mov
fsin
pop
add
clc
jmp
pop
test
fcomps
mov
add
repnz
into
loopne
stos
ds
fstl
dec
jl
incl
and
test
test
loop
jb
jno
imul
rolb
sub
sti
aad
lcall
mov
cmp
inc
mov
adc
notl
mov
xor
fmul
js
imul
xor
jb
mov
cmpsb
int3
icebp
push
inc
insl
pop
add
addr16
imul
jae
push
mov
sub
arpl
fadds
inc
cmp
mov
and
sbb
cmpsl
mov
pop
fstl
or
sbb
rorb
jbe
dec
ret
cmpb
jmp
sbb
adc
bound
mov
xor
mov
ja
pushf
es
inc
xchg
pop
add
push
or
cmp
aaa
or
pop
xor
mov
inc
adc
imul
jbe
jp
xchg
push
add
jmp
ret
jo
or
adc
dec
mov
shlb
inc
sbb
scas
repnz
in
sbb
jmp
mov
leave
adc
enter
enter
fnsave
out
xchg
stc
fiaddl
and
inc
repnz
int3
and
push
sub
int
inc
inc
cli
orl
aad
jae
pop
ret
lock
dec
jecxz
mov
or
xlat
mov
je
jns
push
dec
xlat
push
mov
in
cmp
and
cmp
aaa
fadds
adc
cmp
adc
es
daa
and
lea
inc
out
inc
lods
xchg
fadds
push
add
push
jb
jno
mov
or
sbb
xchg
cli
mov
jge
push
pop
fldlg2
cmp
repnz
dec
sub
inc
pop
mov
pop
mov
leave
gs
fcoml
fnstsw
in
jnp
mov
sahf
pop
lret
in
ds
into
fiaddl
jns
pop
sub
ret
mov
out
lret
test
xor
lret
mov
pop
and
fs
cwtl
lcall
sbbb
xor
pushf
inc
nop
or
mov
mov
rcll
aas
cs
aad
je
pop
scas
cmp
mov
push
lcall
popf
mov
jp
pop
pop
jle
adc
jg
add
jecxz
jno
lcall
dec
cmpsb
movsl
shl
push
cltd
pushf
test
inc
sub
xor
imul
aas
xchg
in
pushf
dec
cwtl
mov
add
push
push
jnp
dec
push
sub
xchg
aad
sbb
lret
mov
push
push
dec
in
mov
jp
pop
sbb
sbb
mov
rcrl
jmp
add
mov
ljmp
mov
test
aaa
or
stos
fistl
cltd
ret
popf
out
sbb
add
mov
xchg
pop
les
scas
and
ret
imul
sub
jo
inc
jb
iret
and
push
adc
xchg
adc
sbb
stos
add
repnz
rcrb
and
push
xor
aaa
dec
test
jmp
jb
sub
in
test
aaa
test
loop
iret
cmp
js
cmpsl
jns
mov
sub
mov
and
adc
adc
dec
loopne
xchg
lds
push
sub
xlat
sbb
adc
mov
lcall
sbb
and
imul
mov
mov
push
mov
pop
test
jg
loopne
scas
mov
mov
sub
jp
cli
xchg
or
inc
int
xchg
mov
insl
imul
scas
add
int3
xor
sbb
icebp
popa
add
cld
stos
loope
mov
xor
popa
std
jb
or
insl
mov
rcl
mov
test
push
and
imul
orl
xor
jne
and
outsb
inc
xor
nop
mov
xchg
mov
push
aad
mov
popa
pop
popf
add
sbb
in
iret
insl
mov
jb
push
out
cli
mov
sbb
mov
mulb
out
jne
rcll
xor
loop
arpl
std
aaa
adc
sub
pop
lea
ljmp
dec
repnz
out
pop
pop
outsb
cmp
cld
jne
dec
lret
pop
or
sahf
xor
in
arpl
cmpsb
scas
test
mov
jne
into
xchg
or
stc
adc
sub
cmp
sub
or
out
sahf
inc
ret
mov
lea
fidivrl
or
dec
add
dec
xchg
sbb
scas
jge
add
scas
pop
mov
lock
mov
mov
ja
sbb
sahf
cltd
sbb
js
lret
mov
cli
outsl
dec
push
jmp
mov
je
inc
inc
fnstenv
ret
mov
or
inc
repz
sub
add
fcmovnbe
xlat
cld
push
stc
ffreep
mov
push
clc
ficoms
xlat
lods
ret
mov
inc
mov
ds
mov
jmp
or
mov
or
jge
inc
orb
add
stc
notb
faddp
dec
es
movsb
cmc
in
jns
dec
or
rep
push
sub
dec
lahf
in
mov
and
sbb
popf
shll
ja
insl
fisubl
mov
mov
jbe
dec
hlt
sbb
cld
imul
xlat
xchg
movsl
test
mov
jle
insb
push
cld
add
neg
inc
jno
inc
push
sub
pop
dec
mov
mov
data16
fidivrs
sbb
sbb
or
aas
mov
loop
nop
sbb
mov
add
scas
xchg
leave
ret
mov
movsb
stc
sbb
icebp
outsl
pop
lds
mov
pop
lret
call
and
cmc
lods
fwait
ja
nop
sbb
inc
inc
push
in
dec
and
mov
xor
dec
mov
mov
inc
cli
push
popf
xchg
pop
cmpb
shll
jg
mov
rcl
cmp
or
and
add
pusha
jle
cmp
lock
ss
sub
fcomi
in
cmp
pop
fistps
mov
sbb
test
cltd
cltd
pop
add
inc
xor
xchg
subl
xor
add
fldl2e
fiaddl
pop
jecxz
and
test
pop
imul
daa
les
mov
imul
cmp
cs
sub
or
mov
xor
ljmp
and
push
xchg
adc
mov
xor
pushf
in
mov
fs
xchg
inc
leave
dec
outsl
cmp
outsw
sub
mov
dec
out
icebp
pop
dec
xchg
mov
jp
pop
jae
push
arpl
push
xchg
push
sbb
insb
and
loopne
dec
xor
dec
pop
mov
xor
test
pusha
cld
mov
add
loope
andb
add
in
inc
adc
ret
jnp
mov
sub
dec
sbb
add
addr16
ficompl
mov
xchg
cltd
jnp
shll
adc
dec
pop
mov
mov
pop
and
push
jbe,pn
add
insb
cltd
pop
cld
das
xor
imul
sti
inc
xchg
ss
jle
inc
sub
insl
pushf
insl
cwtl
xor
dec
inc
outsl
outsb
add
je
sub
pop
lods
loope
insl
pushf
push
dec
sub
xor
fistps
ss
daa
cltd
mov
movsl
es
adc
push
out
jecxz
jecxz
ja
pop
rcll
shlb
sbb
xchg
aam
lret
xor
lahf
cmpb
mov
popf
lea
out
push
ljmp
int
adc
hlt
outsb
mov
shlb
popf
ret
pop
mov
xor
cmp
inc
sbb
out
repz
adc
mov
loope
mov
sbb
ret
subb
fisubrl
cmpl
daa
das
dec
sub
gs
fwait
jg
xor
push
cli
cmp
and
lods
jns
xchg
mov
and
push
lock
aad
mov
or
cld
outsl
cmp
cmc
xor
push
sahf
jmp
inc
or
dec
out
dec
push
pop
xchg
pop
cwtl
sub
out
cmp
xchg
and
pop
flds
xchg
jl
jae
lods
data16
ss
sbb
hlt
jb
add
dec
xor
in
cli
ja
sarl
neg
in
mov
add
sarl
loope
test
or
lods
ja
sbb
add
sbb
ljmp
sub
and
cwtl
xchg
mov
add
call
mov
clc
push
xchg
sub
push
outsb
dec
ljmp
adc
rcrb
cmp
xor
xchg
ja
sti
sub
add
pop
sarl
cltd
and
insb
mov
mov
cmp
adc
jge,pt
mov
loopne
mov
dec
ss
out
int
jns
addr16
push
jmp
xor
iret
ret
aam
stos
xchg
call
and
xchg
inc
cmc
cmp
sbb
bound
jle
adc
dec
filds
xchg
dec
loope
inc
cmpsl
or
mov
dec
mov
js
dec
xorl
dec
xchg
add
inc
fisubs
into
sub
sub
stc
cmp
icebp
lock
cwtl
add
jb
mov
sahf
cwtl
lahf
stc
jle
rcrb
push
xchg
dec
imul
pop
inc
fcom
dec
mov
ret
push
push
push
pop
mov
jno
adc
mov
and
pop
ret
stos
faddp
popa
add
call
push
cmc
pop
out
scas
xchg
fwait
push
jae
iret
aas
lods
int
shrl
xchg
sub
fs
mov
mov
xchg
dec
in
jo
mov
dec
adc
push
out
and
bt
stos
fiadds
out
adc
jecxz
int3
jmp
jl
pop
and
sub
lahf
fsubr
mov
adc
in
mov
mov
xchg
or
pusha
sub
ljmp
clc
sub
aad
add
in
andl
or
loop
mov
subl
iret
pusha
ds
int3
mov
loopne
xor
test
rorl
stc
mov
cmovg
add
jle
dec
cwtl
mov
cmpsl
scas
push
pop
imull
setge
adc
scas
pop
dec
jo
xor
sub
cmc
aas
out
loop
mov
add
and
inc
lods
stos
aad
in
sarb
jp
jns
push
mov
addr16
adc
int3
cmpsl
mov
sub
adc
dec
aas
push
add
fsubrl
es
push
cld
fsubrs
mov
pop
and
inc
ret
add
mov
rcl
xor
xor
pop
cli
xlat
fwait
in
nop
jmp
gs
jge
xor
xchg
aam
mov
lock
fs
sbb
fcomp
mov
lahf
lods
jmp
cmp
cli
mov
inc
jl
jp
ds
call
dec
xor
pop
jb
repz
clc
mov
push
dec
scas
mov
xchg
inc
fidivl
sbb
mov
xlat
jle
call
push
scas
sti
and
in
mov
cmp
jno
mov
out
cltd
and
ljmp
inc
xlat
fcoms
or
mov
push
and
mov
hlt
fisttpl
dec
mov
adc
pushf
les
lock
jp
xor
add
sub
pop
call
or
jbe
mov
mov
cmp
cmc
push
adc
add
mov
cmpsb
push
aaa
add
mov
mov
sbb
or
xchg
mov
mov
rorl
xchg
fiadds
mov
dec
add
mov
adc
mov
adc
inc
or
sub
jo
das
xchg
popf
cmp
gs
popa
mov
lret
sub
std
xlat
cltd
loope
cmp
cwtl
and
in
cmpsl
sbb
push
jbe
imul
or
sbb
mov
add
flds
stos
inc
and
popa
rcl
mov
jnp
push
inc
jne
add
xor
jmp
adc
int
push
jecxz
jnp
fldt
fmull
neg
cmc
shr
pop
jg
mov
add
insl
jae
sbb
call
fnstsw
js
fstpt
dec
mov
jg
push
push
je
outsb
pop
idivb
sub
mov
int
sub
jb
jnp
inc
cltd
insb
rorb
sbb
add
test
int3
or
xor
stos
mov
and
cmp
or
shlb
fwait
sahf
rorb
xchg
pop
into
add
and
lods
lea
cmp
mov
fs
sbb
push
testb
or
ljmp
test
into
sub
push
push
mov
sbb
mov
jnp
add
mov
push
and
std
mov
test
cld
enter
add
cs
lods
in
or
push
pop
push
cltd
and
cmp
mov
push
cmp
jne
adc
push
sub
pushl
mov
in
aad
push
push
shrl
leave
scas
mov
fiaddl
fs
gs
lret
leave
cli
rcrl
daa
andl
in
mov
push
push
sub
push
push
cmpl
push
test
std
inc
mov
xchg
add
into
push
push
pushf
loope
lea
cmp
xchg
xlat
clc
sbb
dec
inc
xchg
imul
pop
sarb
in
adc
push
add
adc
and
in
icebp
cmc
push
cmpsb
loope
popa
xchg
mov
fmull
outsl
and
push
jae
xor
xor
cwtl
in
repnz
xchg
mov
in
fdivr
imul
xor
xor
sbb
out
cmp
je
stos
fisubrl
mov
jo
movsl
jecxz
inc
jp
stc
scas
iret
lea
mov
xchg
or
inc
out
mov
xor
dec
stos
sbb
xor
fstpl
xor
psadbw
lahf
cmpb
enter
xor
xchg
cli
lahf
dec
mov
gs
sarb
mov
xor
nop
sbb
idiv
mov
adc
mov
roll
into
add
lret
imul
pop
pop
das
mov
mov
and
xor
xchg
adc
dec
nop
xchg
cld
ljmp
add
popl
lds
ret
add
fnstsw
cld
cmpsb
dec
add
cmc
add
and
rcr
lret
cltd
shrb
push
push
lcall
cltd
dec
xor
lea
pop
out
jb
pop
mov
xor
lds
add
fisubl
lods
mov
sub
inc
sub
mov
sbb
add
stos
mov
js
cmp
jo
push
xor
xor
imul
mov
fistpl
fldcw
xchg
adc
mov
add
mov
mov
jl
xchg
jl
inc
imul
mov
stc
xchg
jmp
pop
mull
xchg
push
jp
jae
and
pop
inc
rcl
lods
sti
or
cmp
sbb
xor
xchg
xchg
fbstp
pop
cltd
jp
jno
cmp
mov
pop
mov
sarb
stc
lcall
xchg
aam
add
mov
movb
xchg
ljmp
cmc
pop
xchg
ret
in
sub
cwtl
and
dec
mov
jno
jnp
or
mov
mov
in
adc
cld
hlt
loopne
pop
pop
roll
jmp
add
loopne
mov
fwait
sbb
sub
pop
add
adc
out
mov
in
ficoml
mov
mov
out
lock
stc
cmpsb
test
mov
mov
into
xlat
sub
cmp
or
insb
fsubs
rcl
and
fst
xchg
mov
popf
mov
shrl
insb
mov
mov
mov
push
imul
sub
dec
jne
in
sbb
in
dec
mov
dec
clc
xor
movsb
mov
pop
andb
xlat
mov
jmp
pop
xor
mov
bound
lahf
mov
fcomps
dec
stos
lock
sub
xor
pop
jo
and
scas
add
inc
xchg
sahf
sub
fsubrs
or
nop
mov
cmp
in
aaa
xchg
icebp
imul
jns
jb
cmp
cmpsl
cmc
push
push
fsubrl
fildl
adc
ss
mov
and
ja
icebp
fsubrp
jle
stos
pop
mov
jbe
loop
int3
jae
sahf
dec
mov
or
out
sub
cmp
call
add
jns
out
mov
xchg
sbb
add
lcall
stos
mov
in
jecxz
dec
ss
push
jecxz
push
push
std
push
mov
adc
fldcw
mov
es
mov
out
iret
dec
es
mov
cltd
in
data16
mov
popf
add
sub
xor
js
mov
inc
out
jg
pop
pop
ret
cmp
rclb
sbb
xor
flds
jecxz
xchg
jmp
xchg
push
jnp
out
xor
enter
orl
fwait
push
cld
adc
push
pushf
push
or
stos
sbb
rcll
out
xlat
or
mov
or
and
pop
lret
popf
mov
sbb
xor
inc
in
and
sbbb
enter
lcall
ljmp
mov
inc
mov
fisttpl
lret
or
push
in
jno
mov
cmp
fsubrs
cltd
and
jo
lea
call
shlb
add
es
pop
stc
orb
mov
outsb
flds
shrl
jecxz
push
inc
icebp
push
into
mov
dec
loopne
stos
and
addr16
and
cmp
mov
popf
movsb
and
lock
and
jge
mov
xor
mov
cli
mov
jae
ficoml
hlt
lret
bound
call
cltd
adc
testb
add
inc
aas
imul
sub
adc
mov
loope
mov
and
sbb
lret
pop
sbb
or
test
mov
lret
cmc
mov
mov
sar
jno
dec
scas
mov
adc
std
imul
pop
fwait
pop
dec
sub
jmp
push
jl
rcrl
fimuls
inc
xor
jae
test
push
enter
arpl
xorl
aaa
pop
lea
xchg
dec
data16
mov
orb
cmp
enter
sub
jno
jbe
test
pusha
mov
popa
lds
jmp
lds
enter
mov
mov
mov
cld
xchg
clc
mov
inc
sub
inc
sub
lahf
xor
jne
stc
adc
inc
push
sahf
mov
mov
push
xor
arpl
movsl
add
lods
leave
bound
cmpl
push
cmp
xchg
addr16
shrb
call
cmc
mov
mov
aaa
xorb
xchg
dec
cmpsb
xor
jge
xchg
mov
adc
mov
inc
adc
sbb
lea
mov
adc
push
pop
pop
push
sub
cmp
dec
cwtl
out
and
cmp
inc
and
mov
lea
xlat
sub
cltd
outsl
push
push
dec
inc
and
inc
cli
add
mov
movsl
loop
int
xchg
in
xor
sbb
jge
jo
addr16
push
sbb
fisttpll
inc
xlat
stos
push
lcall
adc
add
sbb
addr16
and
mov
or
jns
dec
or
ffree
stos
bound
sbb
sahf
cmp
or
jbe
ret
xchg
mov
jns
adc
push
inc
dec
and
cmp
in
inc
lods
subb
pop
and
mov
inc
cmpsb
les
flds
adc
inc
ret
repz
aad
int
cmpl
cmc
fistpll
scas
addr16
mov
nop
sub
je
gs
add
cmpsb
push
sub
jmp
mov
jo
cmc
push
ljmp
pop
jb
cmp
into
fisubrl
icebp
xchg
or
push
pop
and
inc
xorb
dec
pushl
pop
dec
lods
stc
jae
scas
addr16
or
incb
add
xlat
jae
mov
xor
rcrb
inc
das
js
add
arpl
test
add
ret
int
mov
xchg
pop
add
cmc
fadd
call
movsb
test
out
cmp
mov
mov
cmp
jle
fstpl
mov
jns
rcll
out
sbb
or
loop
cmp
dec
mov
dec
popa
test
add
push
cmpsb
cmp
loope
pusha
dec
inc
sbb
dec
inc
cmc
add
es
cmp
jmp
roll
shlb
push
pop
pop
arpl
push
out
inc
rcrb
and
es
outsl
jbe
loope
filds
adc
mov
jecxz
cli
jae
rorb
xchg
push
mov
mov
ret
test
push
int3
dec
rclb
cmpsl
inc
cmp
hlt
shll
iret
jo
mov
hlt
push
sarl
inc
adc
add
dec
fidivs
mov
inc
call
and
sbb
cmpsl
in
jne
fdivl
addb
adc
jmp
xchg
mov
inc
iret
sbbb
int3
sub
or
mov
ds
js
pop
jp
das
push
mov
scas
pusha
jp
or
aam
cmpsb
subl
cmp
out
icebp
or
stc
sti
push
pop
xor
xor
aas
data16
mov
dec
insl
repnz
adc
inc
push
cli
shlb
cmpsb
insb
shl
mov
pop
pusha
aad
movd
loopne
aas
loope
or
loope
xchg
push
cmpl
mov
inc
ficoms
sub
ret
sti
nop
adc
mov
cmc
push
js
fcmovne
jge
addl
ret
inc
mov
out
dec
cmp
enter
aad
mov
ds
mov
xchg
mov
mov
fisttpl
lods
hlt
faddl
popf
add
enter
add
rorl
adc
mov
xor
outsb
push
or
pop
cmp
out
movsl
loopne
int
or
mov
lcall
adc
pop
lods
notl
xor
cmp
test
rolb
and
or
dec
inc
sub
rsm
test
or
sub
inc
imul
pushf
push
jo
pop
jne
testb
xchg
subb
jge
loop
mov
jbe,pt
popf
push
ja
sbb
add
imul
add
addl
dec
ret
xlat
or
int
mov
pop
jle
or
cmpsl
xor
push
pop
jmp
dec
mov
fnclex
scas
iret
and
in
mov
xchg
xchg
dec
inc
pusha
or
mov
test
dec
dec
aaa
es
test
out
dec
xlat
aam
add
push
cmp
dec
test
cmp
cltd
mov
loop
sbbl
xor
mov
cld
cltd
pop
add
test
outsb
cmp
aam
testb
into
push
or
lock
std
push
jmp
or
and
sub
fcmove
subl
mov
ds
jmp
xorb
ljmp
push
pop
daa
pop
sti
jne
inc
mov
mov
addb
sub
jle
push
dec
repz
sub
or
mov
push
ljmp
add
test
sbb
adc
clc
in
lret
in
cmp
outsb
push
sbb
sub
ss
arpl
rolb
div
mov
outsl
dec
jmp
mov
into
insl
jno
mov
xchg
jmp
cld
ss
xchg
or
add
pop
daa
mov
adc
adc
ds
jno
inc
cmp
cltd
add
outsb
sbb
je
inc
inc
loope
and
pop
mov
sbb
mov
add
push
or
out
adc
xchg
mov
cmp
jns
icebp
mov
inc
adcb
test
mov
lcall
mov
clc
xor
sub
dec
mov
cmp
push
repnz
fists
inc
sbb
mov
jmp
jne
fs
stos
pop
mov
mov
in
test
mov
in
xchg
mov
in
clc
jne
loope
outsl
jbe
dec
ja
adc
xor
cmp
pop
xor
or
inc
outsb
jae
fidivl
mov
cwtl
dec
repz
mov
pop
icebp
imul
test
shrl
sti
in
push
pushf
xchg
lar
shl
aad
add
ficoml
in
adc
pop
dec
sub
cmpsb
cmp
jmp
stos
push
dec
mov
cld
or
sbb
stc
cwtl
testb
pop
fdivr
mov
dec
ja
mov
xor
pop
fldcw
ljmp
mov
popl
add
jmp
push
xlat
mov
pop
fldenv
fmull
or
cmp
sub
lret
into
pop
subb
inc
inc
and
and
dec
cmpsl
xchg
shll
lock
add
jmp
test
std
cld
xor
xchg
fs
gs
insl
jae
fnstenv
outsb
xor
pop
lds
push
in
inc
aas
rorl
jmp
lahf
les
insb
ja
push
daa
not
fstl
fstps
dec
mov
lds
repnz
adc
mov
fbstp
lock
xchg
clc
mov
les
js
sbb
sub
aas
cmp
mov
pop
loopne
shlb
data16
loope
adc
bound
pop
push
xor
into
xchg
out
mov
xchg
mov
nop
jle
shrl
sbb
mov
and
push
mov
xor
in
movsl
jmp
mov
mov
call
test
sub
pop
sub
daa
sub
push
arpl
mov
mov
jae
scas
mov
jo
ja
pop
adc
in
mov
sbb
psubd
subl
sub
mov
pop
dec
repz
rcll
cmpsb
int3
outsb
or
repz
js
aam
stos
sub
mov
pop
cmp
scas
stc
mov
jae
cli
das
xchg
bound
loopne
xchg
shlb
cmp
loopne
sub
xchg
popa
adc
mov
mov
add
shrb
pop
lea
lret
dec
popf
xchg
cmp
cs
and
xor
cmp
outsb
jae
in
add
ret
pop
fdivl
in
sbb
mov
ret
orb
clc
popf
int
cld
leave
add
jecxz
mov
xor
in
cmp
adc
mov
xchg
jg
and
mov
cli
sbb
sbb
outsb
add
dec
faddl
and
test
sub
cmp
jo
lds
xor
sbb
add
mov
lret
lock
xchg
movsb
mov
inc
mov
bound
jo
push
scas
inc
xor
rorl
jns
inc
adc
push
out
repnz
mov
adc
ficomps
cltd
dec
inc
adc
push
cmp
int
pop
pop
lea
fsubl
scas
pushf
xor
ret
pop
repnz
sub
xor
push
out
js
fs
xor
xor
xchg
mov
push
int
imul
xchg
push
cld
push
pop
ds
and
xchg
icebp
inc
push
std
dec
ljmp
pop
inc
in
ljmp
cmovge
adc
cs
mov
mov
stos
jae
daa
cld
add
push
mov
xchg
cmpb
cli
ss
jae
or
aaa
test
dec
mov
mov
add
sub
loopne
icebp
push
inc
arpl
stos
test
inc
jecxz
ret
ss
mov
push
inc
mov
dec
iret
pop
mov
lock
pop
jnp
fwait
andb
hlt
test
int3
pop
pop
jl
xchg
scas
xor
push
pop
js
mov
sub
enter
and
les
inc
int
sub
dec
mov
push
sub
and
push
sbb
xor
movsb
in
adc
adc
sub
mov
cmp
add
popf
lock
cmp
adc
inc
or
mov
fwait
rolb
pop
xchg
cmp
ljmp
adc
stos
mov
shrb
jge
out
repz
fwait
fs
dec
stos
mov
lods
rclb
or
pop
aas
pop
sbb
enter
xchg
out
mov
xor
push
or
dec
xchg
popf
adc
mov
in
out
scas
roll
jnp
push
adc
das
xor
and
push
stc
push
fcmovbe
dec
int
int
pop
mov
lret
cmpsb
mov
lods
jbe
pushl
pushf
sahf
sbb
js
mov
inc
mov
loope
lock
jge
adc
jl
mov
mov
rolb
and
fstpl
push
and
pop
or
ljmp
cmp
inc
pushw
jge
mov
loope
sbb
sbb
cld
mov
cs
ja
mov
ficoml
lahf
popf
insl
cmpsl
ljmp
mov
xor
mov
adc
shlb
movsb
addl
shl
bound
imul
jmp
xchg
push
outsl
test
lcall
cmp
leave
daa
addr16
or
jecxz
sahf
push
sbb
cmpsl
cmp
dec
inc
xor
xor
adc
and
gs
imul
out
and
mov
ret
popa
push
rcrl
inc
hlt
out
js
out
xchg
pop
add
dec
jno
pop
mov
adc
outsb
jp
pusha
dec
inc
mov
jo
inc
xor
ja
jecxz
push
es
xchg
and
je
push
jle
outsb
or
fisttpl
jge
add
std
frstor
test
and
cmp
xchg
insb
dec
shl
mov
pusha
test
lock
ficoml
push
pop
xor
fs
ja
rcrl
cmp
in
into
fidivl
out
cmp
inc
sbb
mov
and
out
sub
fbstp
xchg
jne
ja
mov
nop
cld
xor
cmpsl
mov
fwait
aas
mov
dec
add
xor
add
stos
scas
and
testb
ja
sbb
and
mov
push
or
inc
pop
xchg
movsb
dec
js
inc
dec
jno
dec
mov
sub
mov
std
mov
sub
outsb
mov
adc
loopne
jle
sub
cmp
data16
daa
xor
ss
xchg
pop
lds
loop
jecxz
bound
dec
push
insb
add
mov
cmp
incl
in
pusha
mov
xchg
jb
adc
cmp
or
outsl
mov
test
mov
adc
es
test
cwtl
mov
shll
je
sbb
mov
inc
cltd
xchg
test
xor
push
pop
push
ja
pop
mov
push
xorl
adc
mov
fists
or
cli
xor
add
dec
inc
mov
mov
mov
repz
shlb
mov
add
pop
mov
lds
mov
xchg
mov
cli
enter
pop
int3
jno
dec
or
add
dec
pop
idiv
push
scas
shrb
pushf
mov
scas
sub
faddp
mov
push
xchg
jge
lret
in
xchg
inc
hlt
call
jnp
adc
xchg
ret
mov
add
leave
out
pop
jp
inc
inc
jne
orb
icebp
inc
and
cs
fmul
lock
mov
jnp
pop
dec
lea
insl
xor
stc
divl
pop
dec
sub
mov
nop
dec
xor
imul
mov
cmp
and
sahf
enter
pop
push
mov
push
cld
push
jne
in
das
fildll
jmp
rorl
lahf
sti
xor
sbb
stc
sub
iret
test
sbb
in
sub
push
in
pop
call
call
sbb
fimull
leave
stos
stos
mov
test
lods
xchg
adcl
scas
mov
sbb
inc
pop
lcall
cmp
mov
lret
fidivs
rorl
movsb
sub
sbb
mov
or
adc
cmc
xchg
cmpsl
inc
enter
bound
push
pop
mov
push
test
xchg
or
sahf
bound
imul
incl
pop
mov
dec
pop
ss
sti
rorb
xor
movsb
icebp
adc
repz
sub
pop
dec
xor
push
adc
loop
mov
shll
daa
jle
xchg
xor
mov
jl
add
xchg
pop
enter
popf
sub
in
sbb
adc
popl
dec
mov
or
pop
bnd
and
mov
cmp
cmp
ficomps
ja
mov
jle
inc
jb
push
loop
fistpll
dec
mov
xchg
stc
jmp
stos
stos
scas
pop
call
sbb
xchg
mov
or
leave
push
ds
or
imull
xchg
stc
dec
add
dec
mov
lods
mov
pop
frstor
sub
mov
test
out
sbb
nop
in
pop
or
imul
movsl
adc
push
xchg
or
mov
or
jl
rol
ret
lea
pop
mov
pushw
js
cmp
sbb
mov
lret
xor
cmc
mov
mov
addl
sub
iret
mov
loope
and
nop
lods
mov
pop
bound
cwtl
push
mov
xor
jle
cmp
aam
mov
lds
xorb
outsb
push
lds
push
iret
mov
loopne
scas
call
push
xchg
mov
lahf
pop
mov
ss
jecxz
add
mov
or
pop
ss
outsb
jo
out
mov
fnstenv
bound
shr
aam
xor
imul
mov
xlat
lock
mov
mov
jl
addl
in
xchg
int
mov
cmp
scas
fdiv
es
mov
jo
enter
inc
sbb
hlt
adc
mov
icebp
mov
jp
push
xchg
imul
add
xchg
clc
pusha
aaa
out
test
or
sub
xchg
iret
jmp
sbb
loopne
std
int
mov
icebp
mov
jnp
mov
mov
push
and
int3
sti
mov
mov
lahf
cmpsb
push
fnstsw
jp
into
lahf
sahf
pop
aaa
or
imul
dec
sbbl
jbe
mov
cmp
outsl
jbe
adc
ss
push
ljmp
inc
in
sub
rcr
push
jae
jg
negb
addr16
inc
push
popf
stos
pop
xlat
in
add
mov
and
imul
cmpsl
xchg
xchg
push
dec
cmpsl
lret
dec
add
and
sbbl
push
dec
sbb
iret
scas
mov
out
inc
push
dec
fstpl
fildll
test
mov
lahf
sbb
xchg
in
pop
movsl
push
cld
bound
add
sbb
mov
pop
mov
mov
sub
xchg
shll
push
push
sti
ss
imul
ds
call
ja
cmpsl
sbb
test
loopne
mov
pop
repz
fwait
mov
ret
pop
dec
inc
adc
or
arpl
xchg
pop
or
inc
hlt
or
jae
dec
jbe
pop
call
lcall
push
and
push
add
and
mov
pop
add
loope
mov
movsb
pop
push
lock
rclb
xchg
popf
push
lock
inc
dec
xchg
aas
add
shlb
stos
addl
mov
rclb
and
dec
iret
ljmp
arpl
pop
nop
test
xchg
pop
and
dec
loope
lahf
jnp
sub
jno
in
xchg
xor
outsl
add
jmp
aas
stos
adc
push
ret
inc
iret
mov
push
jb
jo
push
sar
pop
hlt
and
inc
daa
pop
imul
test
fnstenv
aas
les
sub
hlt
sub
fs
or
imul
lahf
push
jl
rolb
cmc
faddl
fsubrs
sbb
popf
mov
lret
ret
sbb
sti
outsb
imul
add
test
cld
dec
cli
stos
sti
pop
lea
jmp
fcomps
add
jne
pop
fst
fmull
lods
adc
cltd
pushf
push
out
jl
fistps
push
inc
repz
mov
adc
sub
jmp
adcl
xor
add
adc
sarl
lock
not
cs
cmp
fdivl
inc
and
ret
sbb
mov
push
clc
out
mov
sub
jne
out
mulb
in
cs
fsubr
ja
push
xor
icebp
xor
mov
xchg
popa
and
stos
in
dec
mov
push
or
test
fs
sti
jecxz
cmp
sbb
or
lds
jmp
sub
lods
mov
jmp
inc
push
mov
push
cmp
divl
adc
js
or
outsb
mov
loop
loope
cld
nop
ss
or
scas
popf
dec
addr16
out
mov
aam
mov
cmp
inc
sbb
xchg
imul
idivb
test
jg
jecxz
mov
cmp
pop
xor
cmpsb
xchg
stos
sar
mov
int3
iret
mov
inc
icebp
lcall
mov
xchg
push
rcrb
adc
mov
push
add
or
sub
or
fbld
js
sbb
jl
icebp
xchg
mov
add
fnsetpm(287
pusha
push
movsb
repz
lea
jno
add
mov
xchg
push
dec
cmp
enter
and
mov
xor
jo
sbb
ja
and
movsb
std
shlb
in
and
mov
jp
dec
or
cmp
lds
sahf
pop
mov
dec
cmp
add
inc
subb
es
xor
jne
jl
push
adc
or
xor
rorb
fucom
jl
xor
xchg
int
dec
cmp
and
sbbb
xchg
add
push
hlt
cmp
adcl
lods
or
popa
pop
add
mov
popa
add
adc
popf
lods
sbb
adcl
test
lret
mov
push
popa
fadds
cs
mov
fdivr
int3
sub
cmpsl
enter
ds
aam
mov
sub
arpl
cltd
bound
outsb
cmpsb
or
int
add
and
cmp
ljmp
decb
mov
dec
leave
cltd
sbb
test
pop
pop
inc
sbb
pushf
push
stos
popf
popa
mov
or
sbb
sub
lods
push
ja
xchg
pop
popa
aam
sbb
xchg
lea
xchg
cmp
int3
push
enter
xchg
mov
dec
mov
or
or
fs
scas
lret
inc
push
dec
add
push
stc
mov
dec
cmp
rcrl
fsubrl
add
push
ja
adc
mov
xchg
icebp
and
ret
xchg
jb
jmp
xor
mov
push
movsb
xor
jne
sahf
pop
jmp
push
mov
or
ret
testb
fildll
cmpsb
sbb
rorl
push
push
and
mov
addb
inc
out
inc
pop
lret
iret
jmp
or
in
fs
or
mov
push
mov
mov
xchg
jae
push
lds
in
fadd
pop
inc
ja
sbb
into
or
mov
sub
and
jne
test
scas
fdivrl
push
es
and
pop
hlt
fcomps
inc
push
xchg
in
jge
inc
jle
jns
mov
loope
lcall
adc
arpl
jmp
sub
dec
sarb
sbb
orb
lcall
fnsave
lock
or
lds
mov
jle
std
loope
aam
mov
daa
pop
jbe
nop
das
xchg
es
push
mov
test
test
mov
test
inc
shrb
stc
test
xlat
cld
fisttps
mov
clc
jl
fdivrp
push
ffree
mov
sbb
inc
in
ja
in
xchg
add
into
inc
push
loopne
pop
or
jno
inc
pop
xor
push
arpl
jnp
ljmp
fsubrs
jbe
test
negb
mov
xor
mov
pop
cmc
bnd
lods
cmpsb
je
cmp
pop
jne
in
pushf
in
mov
xchg
fsubl
notl
enter
mov
mov
bound
outsl
mov
into
cmp
mov
enter
push
mov
jbe
wbinvd
repnz
fimuls
and
shll
jb
dec
addb
pop
lahf
mov
call
xor
fcmovu
js
or
adc
mov
push
sti
stos
ja
insl
das
movsb
leave
jl
jb
xchg
repz
cmc
mov
push
add
jne
inc
or
push
xchg
mov
into
lcall
dec
sub
repz
out
cwtl
dec
es
jl
rcrl
dec
mov
seto
ret
jno
fwait
out
add
sbb
xor
std
xchg
xor
cmp
movsb
mov
aam
xchg
jmp
shlb
inc
ret
push
xor
outsb
cmpsl
sahf
aaa
push
add
xchg
iret
mov
out
push
dec
jmpw
sbb
pop
nop
arpl
cmp
sub
and
xchg
hlt
iret
or
xor
or
push
popa
imul
mov
jmp
insl
imull
cmp
into
hlt
inc
in
adc
outsl
cmp
stc
or
push
dec
dec
xchg
cmpsb
adc
jge
and
sub
fmul
popf
inc
sub
mov
mov
and
mov
push
addr16
jl
shld
jnp
sbb
jae
fwait
or
inc
lret
inc
xchg
push
and
jmp
sub
loopne
mov
mov
or
push
inc
pop
push
adc
fidivl
in
jne
outsl
sbb
pusha
popa
jnp
incl
xchg
int3
xchg
hlt
imul
ret
das
sbb
sbb
bound
std
mov
ret
repz
in
sbb
mov
pop
cli
test
mov
out
icebp
or
lds
imul
add
dec
xor
adc
jmp
daa
sub
mov
std
test
js
push
imul
jno
cmp
inc
sbb
shll
sbb
and
pop
lods
or
push
mov
bound
adc
pop
fdivl
loopne
xchg
mov
cwtl
loope
shl
fisubrl
dec
push
xor
adc
iret
or
mov
rcrl
out
cmp
xor
fcmovu
test
pop
aaa
rcrb
insl
cmc
pusha
mov
xchg
jmp
inc
scas
int3
sbb
inc
cli
les
and
movntq
dec
sbb
into
out
loopne
aas
and
and
hlt
iret
mov
xor
xorb
add
cld
iret
pop
sub
inc
sub
mov
jb
lret
in
adc
xchg
subl
dec
inc
cmp
stos
jmp
dec
pushl
xor
ja
lret
add
lods
shlb
fwait
ret
shrl
int3
pop
push
xor
mov
insb
jnp
sub
xchg
loopne
imul
mov
adc
test
xor
ret
mov
dec
adc
test
jge
hlt
cmpsl
mov
fbld
fdivs
and
and
cmp
adc
les
jp
pop
xor
addr16
dec
andb
sub
shl
lret
jb
out
cmp
insb
icebp
aaa
jne
arpl
leave
jbe
pop
cwtl
mov
fistpll
jl
adc
pop
hlt
jmp
sub
rolb
add
fldt
cmpsl
inc
negl
mov
mov
dec
fidivs
pusha
push
or
mov
nop
mov
pop
xor
xchg
int3
mov
in
scas
mov
jne
mov
mov
outsl
pop
pop
into
push
mov
in
test
dec
mov
push
or
out
mov
jns
lods
pushf
test
test
mov
sub
cmp
jmp
xor
mov
mov
or
int3
mov
mov
ror
icebp
fldt
icebp
mov
inc
add
rcl
iret
mov
xor
jg
or
or
cmp
push
adc
stc
sti
ret
rclb
icebp
nop
mov
or
stc
pop
out
sub
mov
scas
lcall
jno
pop
fwait
cmp
cmp
outsl
sub
add
dec
mov
js
xor
xor
mov
inc
cmp
mov
iret
jae
iret
jne
test
mov
cmp
jb
add
dec
ret
sub
adc
mov
and
popf
mov
les
lret
and
xor
pop
or
test
cmp
xchg
sbb
repnz
inc
lcall
cltd
sbb
pop
mov
and
push
xchg
inc
dec
out
cmp
jo
xor
xor
push
lock
cmp
in
dec
sbb
sarb
cmp
in
cmpsl
push
cltd
ja
or
push
xchg
and
shll
mov
xchg
int3
sub
insb
pop
mov
cmpsb
mov
add
xchg
fimuls
adc
cmpsl
shrb
mov
sbb
jle
or
mov
fwait
addr16
std
jae
popa
fbld
rclb
addr16
call
test
fdivs
adc
out
cmpsb
lods
mov
lret
xor
mov
xor
mov
movsb
xor
enter
and
inc
sbb
imul
or
mov
cmpb
sub
push
lods
lahf
jae
fadd
mov
inc
mov
cwtl
jl
cli
sar
sbbl
sub
fisubrl
fimull
xchg
sbb
add
jbe
inc
sub
add
mov
cwtl
inc
jge
lea
or
cli
push
cmc
call
dec
fldcw
cwtl
push
fs
aad
pop
insb
mov
test
ss
xchg
fwait
pop
jl
loopne
mov
repz
xor
mov
and
je
and
sub
pop
jb
adcb
loop
jns
push
jg
cmp
push
test
adc
pop
das
jle
and
mov
mov
push
shrb
lcall
mov
pop
xor
les
test
dec
stos
adc
inc
testb
lahf
and
or
stos
mov
jb
jg
push
fldl
xchg
cmovnp
cld
cli
xchg
and
iret
mov
pop
mov
xchg
xor
shlb
movsl
stos
fwait
inc
gs
dec
scas
and
push
pushf
mov
mov
test
sbb
ficomps
cmp
mov
xchg
test
fwait
sbb
stos
fwait
cld
jne
adc
lahf
outsb
mov
inc
ss
or
popf
inc
mov
out
je
or
cs
mov
out
sub
cmp
xchg
insl
xlat
mov
das
xchg
pop
xor
outsb
aad
xlat
lcall
in
push
data16
jl
rorb
lcall
mov
test
pop
mov
adc
movsl
dec
in
fildl
xchg
and
das
cmp
scas
aas
out
jb
aaa
repnz
cwtl
sbb
movsl
or
xchg
cmpsl
loop
pop
lret
sub
mov
ret
test
lea
jno
out
jno
cwtl
iret
and
cmpsb
repz
icebp
push
or
movsl
inc
pop
cmp
shl
pop
jns
out
ret
aas
or
cld
mov
or
fs
inc
call
addr16
adc
mul
mov
pop
pop
fwait
push
movsb
pushf
rcl
sub
scas
inc
outsb
fcoms
adcb
push
ret
push
mov
cmpb
shr
mov
xor
adc
sub
icebp
mov
mov
roll
sub
inc
pushf
sti
pop
loop
jno,pt
cmp
push
pop
inc
jmp
jnp
in
sub
add
je
mov
mov
xor
adc
outsb
je
cwtl
inc
pop
and
aaa
dec
xchg
adc
jle
xchg
inc
mov
dec
xchg
xor
jge
subb
test
jo
add
imul
lds
jbe
sbb
fs
jae
sub
ds
sbb
mov
xchg
xor
ss
gs
outsl
or
sbb
lods
jp
out
xchg
cmp
or
mov
ljmp
jns
bound
pop
xchg
sbb
mov
dec
sar
jbe
mov
ret
cmpsl
fidivrs
or
mov
and
hlt
stos
pop
f2xm1
testb
cmpsl
sbb
hlt
dec
cmp
aas
fdivs
popa
mov
cs
movsl
push
fistps
sahf
or
mov
xchg
outsl
daa
mov
push
in
or
loop
lret
xor
inc
scas
xor
insl
jbe
pop
push
xor
sub
mov
inc
leave
adc
ficoml
mov
pop
or
inc
xor
lret
mov
push
ficompl
cmp
pop
sbb
lahf
push
leave
insb
cwtl
aaa
fnstsw
aas
pop
sti
les
movsl
mov
jmp
dec
pop
out
insb
lock
imul
push
cmc
popf
into
xchg
sub
lods
sbb
jno
jno
adc
pop
insl
xor
repz
mov
jmp
test
cmp
shll
lret
and
out
in
jns
pop
mov
mov
cmc
or
or
push
and
push
lret
jg
das
aas
iret
shr
ja
jle
pop
cmp
add
xchg
in
xchg
inc
ret
call
inc
inc
or
aad
push
je
xchg
sbb
inc
cmc
andb
je
ds
jo
mov
xor
jnp
stos
xchg
xor
xchg
mov
mov
inc
push
sbb
roll
jae
sbbb
les
or
jnp
cmpsb
add
loopne
aaa
lcall
pop
lret
fucomip
je
xchg
or
xor
out
test
mov
and
ja
cwtl
out
lds
xchg
fisubrs
sti
scas
inc
into
dec
ror
push
cmc
jno
xor
fisttpll
fwait
xlat
repz
ret
inc
inc
ja
fwait
stos
sbb
mov
cmp
add
fbstp
and
gs
pushf
mov
cmp
jp
jb
dec
loopne
idivb
push
mov
xor
xchg
scas
inc
fsubl
jecxz
dec
pop
sub
fsubs
adc
pop
ret
sub
cmp
andb
popl
lds
sub
mov
xchg
add
jnp
or
inc
bound
aaa
scas
sub
pop
inc
je
leave
xchg
loopne
lods
dec
test
jo
sbb
lret
adc
adc
test
rorl
insl
rcrb
or
leave
inc
arpl
out
es
sahf
lret
daa
jg
ret
cli
bound
pop
out
sbb
call
mov
call
outsb
movsb
push
shlb
outsl
je
inc
bound
cs
adc
mov
sub
push
push
xchg
dec
and
addb
mov
cmp
in
xchg
je
push
xchg
mov
test
cmp
ret
mov
push
jecxz
inc
lret
les
addl
adc
xlat
mov
loop
movsl
sbb
mov
fimuls
dec
mov
cmp
cmp
or
sub
push
push
out
lahf
or
or
push
jg
lret
sbb
mov
or
cmp
cmpb
bound
jo
mov
push
mov
test
push
sub
loopne
inc
out
insb
mov
into
cmp
daa
pop
add
mov
jns
mov
push
push
and
popf
ss
in
sub
cli
jg
jg
xchg
lret
or
hlt
adc
push
fs
xor
testl
inc
mov
repnz
jp
push
adc
mov
mov
call
push
mov
inc
insl
mov
xor
lock
pop
mov
jae
inc
mov
je
nop
adc
push
xor
je
xor
or
sbb
jle
dec
adc
aaa
gs
pushfw
mov
add
mov
jno
xchg
xchg
das
push
push
xchg
jo
sahf
nop
les
jbe
mov
mov
xor
lret
out
fldt
mov
scas
push
sbb
adc
or
cmpb
fmull
fwait
or
inc
and
jo
rcll
inc
stos
xor
jl
scas
add
in
and
shlb
sub
cmpb
mov
into
lods
sahf
arpl
movsb
inc
in
lods
int
sub
push
adc
adc
aam
mov
ljmp
pop
add
insl
sub
add
fisttpl
push
push
cmpsb
div
mov
pop
int
rcl
add
sub
int
jmp
mov
xlat
mov
mov
inc
stos
add
mov
push
pop
sub
adc
push
addb
fldl
repz
adc
mov
es
sbb
in
cmp
loopne
dec
inc
test
add
int
pop
sbb
jle
adc
add
divl
add
jle
push
dec
or
test
mov
mov
aad
add
clc
leave
int3
and
push
push
addr16
pop
jg
xor
cld
xlat
mov
sahf
xchg
shll
mov
paddb
clc
mov
jb
imul
sub
outsl
fisubrs
es
sub
lea
jnp
insl
mov
icebp
mov
pop
and
mov
outsl
add
mov
sub
test
ficoml
mov
pop
shll
cmpsb
adc
aad
dec
mov
sub
pop
xor
subl
sbb
lods
adc
ss
adc
inc
dec
push
ljmp
mov
out
sahf
cld
leave
mov
mov
add
mov
adc
pusha
mov
and
push
jl
in
push
out
cmpsl
in
pop
outsb
ljmp
ljmp
or
adc
fiaddl
xchg
inc
jne
fwait
cmp
pop
pop
mov
sbbb
cmp
lock
pop
xchg
in
outsb
mov
adc
pop
mov
popa
xor
int
daa
pop
rol
das
stos
dec
cmpsl
imulb
jnp
jo
rclb
sarb
sub
int
inc
sbb
and
sub
aad
sahf
xchg
or
loop
flds
xchg
pushf
in
shlb
mov
mov
jno
xchg
dec
gs
sti
repnz
jge
enter
cmpsb
add
lds
out
sbb
pop
rorl
andl
jmp
jmp
mov
cld
fsubr
out
xor
arpl
pop
std
test
cmp
mov
xchg
inc
xor
aaa
mov
sbb
or
jo
add
icebp
fsubp
jp
sbb
sbb
clc
fstpt
lret
lds
sbb
push
or
dec
jle
repz
out
gs
ja
mov
cmp
cld
pop
xor
cmp
and
jo
cltd
clc
jbe
fcoml
in
cmc
pop
lock
mov
push
insl
ficomps
pop
insl
sub
movsl
cld
std
dec
xchg
add
stos
jmp
push
dec
push
adc
pop
push
pop
push
loop
cmp
jbe
cwtl
int
cmc
mov
fstps
loope
add
faddp
xor
or
xchg
lods
ret
in
mov
mov
fdivrs
sahf
cmp
cmp
mov
loopne
cmp
aam
loop
lcall
les
incb
dec
int3
or
repz
xchg
inc
sub
ja
je
xchg
mov
cmp
call
and
jp
clc
rcll
or
outsb
xchg
mov
pushf
mov
xchg
shrb
push
xchg
cmp
int
enter
stos
rclb
adc
ffree
push
mov
les
fcompl
sub
roll
xchg
insl
sbb
sub
xlat
scas
mov
cltd
imul
into
rcll
jns
pushf
dec
dec
inc
fwait
mov
mov
shlb
cmp
jmp
dec
mov
mov
mov
push
xlat
mov
stc
orb
add
fucomip
and
fdivl
negl
cmp
test
mov
shr
sub
mov
cwtl
adcb
fildll
jno
cmpsb
sti
push
iret
mov
loop
dec
scas
sub
mov
movb
das
inc
xchg
xchg
aam
jl
in
fisubrs
test
jle
loope
sbb
jl
xor
sbb
jmp
xor
xchg
loopne
cs
lods
xchg
and
push
aas
or
shrl
mov
sbb
aaa
int
push
neg
or
das
lock
mov
into
xchg
pop
vaddpd
pop
stc
adc
inc
daa
push
push
sub
scas
movw
pusha
into
stc
jle
cmp
push
xor
lds
sub
xchg
outsl
sahf
test
mov
lds
sbb
test
or
pop
mov
xor
pop
mov
pop
aaa
js
mov
xor
fwait
cmp
mov
jmp
xor
adc
fildl
add
xor
mov
push
cmp
fwait
sub
repnz
mov
pop
stc
xchg
add
jb
das
fistl
ret
subb
push
xchg
out
aam
push
mov
sub
repnz
inc
addr16
mov
inc
les
nop
add
jp
dec
test
leave
lahf
nop
and
lret
cmp
or
and
dec
mov
lahf
sub
pop
xorl
push
xchg
push
fnstenv
jp
cmc
fwait
lahf
or
into
into
fnstsw
loopne
adc
lcall
movsb
mov
mov
in
jmp
adc
fnstenv
out
dec
sub
inc
mull
cli
push
adc
cmp
add
insb
jecxz
int
sub
fstl
dec
das
adc
dec
pop
mov
movl
pop
ss
or
sbb
sub
out
lcall
sbb
pusha
pop
jmp
mov
fsubrl
mov
pop
test
jb
pop
cmc
dec
fcmove
hlt
mov
fldcw
pop
fisubrs
push
inc
mov
xchg
insl
repnz
dec
or
pop
fisubrs
shlb
fisttpl
or
xchg
xor
sahf
push
shl
jmp
and
loop
test
pop
bound
fcmovu
push
fcos
push
dec
pop
pusha
leave
jle
aam
xor
jmp
daa
add
cmpl
push
cmp
fwait
inc
jge
cs
pop
cmpsb
popf
fs
dec
mov
mov
xchg
jne
notb
mov
movsl
addb
mov
mov
and
xchg
bound
in
push
pop
xchg
stos
and
jo
push
add
mov
xchg
and
sbb
shlb
cmpsl
insb
inc
push
outsb
popf
add
sub
inc
aam
inc
lds
in
jae
sbb
cmpsb
ret
xchg
push
push
lock
daa
jp
pop
jo
add
rcl
je
into
jle
mov
aam
mov
lods
xor
push
ret
push
mov
xchg
shl
inc
jp
cmpsl
popf
mov
jmp
pop
push
xor
pop
fistps
add
pop
jae
jo
pop
rcrb
mov
movsb
dec
xor
ror
cli
mov
jbe
sbb
add
push
jp
daa
sbb
dec
jge
sub
mov
dec
shrb
into
cmp
popa
lock
cmp
repnz
aam
loope
ret
lret
rcrb
cmp
mov
mov
jnp
test
das
cmp
addl
mov
ss
aad
xchg
movsb
gs
rolb
and
popf
rcl
out
push
cwtl
lock
imul
fwait
mov
push
das
dec
add
dec
xchg
lret
xchg
ret
sub
sub
cltd
pop
sbb
stos
add
push
icebp
mov
pushf
jle
xchg
jae
cmp
aam
cmp
ficoml
xchg
lds
popa
ds
mov
jl,pt
jae
daa
aas
xchg
fisttpl
shll
mov
sub
fwait
lds
add
mov
mov
sahf
sub
adc
inc
or
arpl
inc
cwtl
orl
cmp
ffree
movsl
jne
xchg
mov
ljmp
mov
stos
or
pop
jbe
in
add
mov
loop
movl
cltd
aam
dec
lcall
enter
and
mov
push
je
ds
cld
pop
sub
adc
neg
jnp
aaa
dec
popa
push
adc
stos
sar
dec
cmp
adc
in
sbb
inc
mov
pop
insb
xchg
xlat
and
cmp
jle
xchg
xchg
jp
mov
xchg
dec
mov
cmp
test
int3
daa
cmpsl
out
xlat
fbstp
dec
js
les
jge
and
cmp
rcll
mov
add
sahf
loop
scas
jecxz
jle
sub
inc
sub
inc
push
pop
jge
jecxz
mov
mov
jne
nop
repz
pop
call
jne
mov
mov
les
xor
out
cmp
stc
jle
sahf
push
sub
rcr
mov
aam
data16
addb
loop
notl
mov
xor
rorl
movsl
jecxz
loop
or
xor
pusha
xor
push
aam
xchg
insb
imul
cmpsb
xchg
test
mul
movsl
dec
sbb
clc
jns
mov
inc
dec
mov
in
fwait
clc
jmp
mov
mov
test
inc
cmp
imul
sbbl
mov
or
push
stc
sbb
inc
jge
sar
lds
jnp
jno
int3
xor
sub
dec
cmp
pop
mov
cmp
cs
roll
inc
push
or
insl
movl
mov
adc
ljmp
lret
jmp
movsl
pop
loope
repnz
lock
les
fiaddl
pusha
mov
inc
mov
inc
mov
mov
repz
push
aam
daa
cwtl
adc
popa
jo
mov
cmp
lcall
fsubrs
leave
and
sahf
cmp
cmpb
inc
cmc
or
cmp
repnz
cmp
inc
add
leave
and
outsb
mov
popa
pusha
dec
nop
mov
lods
jle
sub
lahf
cmp
push
mov
ficompl
fsub
out
push
clc
add
dec
ds
push
pop
adc
add
jnp
ficoml
or
lock
jg
fstpl
xor
mov
fsubrs
aaa
repnz
mov
mov
stc
mov
iret
lret
and
dec
adc
pushf
and
mov
jb
mov
sub
jecxz
sbb
inc
or
test
daa
sbb
mov
lcall
dec
lret
pushf
es
xlat
jmp
or
sub
shrl
xor
mov
sahf
xchg
loopne
push
aad
push
rolb
cltd
sub
jae
jmp
scas
std
pusha
ja
push
pop
cmc
xor
cmpsl
dec
and
push
es
push
in
mov
dec
inc
push
fwait
arpl
xor
shl
mov
mov
pop
pop
call
cmpsl
std
adc
lods
insl
in
and
stos
clc
repz
mov
add
mov
pop
cltd
push
push
push
daa
push
pop
enter
xlat
and
hlt
pop
cmc
aam
rolb
or
cmpsl
out
fcomp
notb
int
xchg
das
mov
mov
xchg
pop
fbld
push
es
inc
movsb
stos
push
adc
adc
jbe
rcl
fisttps
add
cwtl
scas
jnp
push
jecxz
adcb
cmc
aad
pop
stc
cld
mov
xchg
pop
scas
lock
mov
jae
xchg
ds
xchg
aad
cmpsb
sbb
cli
icebp
addb
stc
jmp
pop
js
call
lea
in
hlt
clc
jge
mov
inc
testl
popl
adc
rorl
lcall
cmpsb
lea
dec
or
lock
or
pop
orb
cmpsb
xchg
fwait
cltd
pop
pop
add
jno
cmp
cltd
xchg
popa
pop
mov
mov
push
mov
insb
mov
pop
sub
push
iret
pop
aas
scas
bound
jno
sub
lcall
adc
bound
pop
cmpsb
popa
fs
jnp
shrl
pusha
into
in
insb
xchg
sbb
stos
mov
mov
lcall
push
ret
sbb
hlt
xlat
aaa
cmc
adc
jns
loopne
sbb
mov
mov
sub
push
sbb
pop
xchg
inc
ficompl
fildll
pushf
rcrb
repnz
adc
xchg
inc
rclb
out
sbb
insl
sti
sti
and
mov
jbe
inc
push
loope
fmuls
imul
sub
mov
repz
mov
lahf
inc
ficoms
sbb
xlat
int
xor
popf
cltd
loop
adc
mov
mov
sub
aas
pop
jb
or
or
mov
sub
mov
out
rcrl
ja
and
inc
movsb
scas
aam
mov
push
mov
popf
fidivrl
sub
push
xor
sub
cmp
mov
or
in
into
fdivrp
lcall
outsb
out
imul
lret
imul
pop
cmp
xor
ljmp
xchg
xrelease
and
and
xor
add
pop
push
jmp
mov
outsb
and
ds
xchg
lcall
push
or
xchg
cmc
mov
rorb
sub
dec
clc
push
mov
fwait
xchg
push
bound
cmp
in
add
jmp
arpl
sarl
or
jne
or
and
ret
ljmp
jmp
mov
jg
insb
xor
and
roll
out
ds
mov
mov
negl
test
or
into
aad
sub
rolb
adc
shr
add
pop
pusha
push
dec
inc
pop
lods
push
cwtl
arpl
ljmp
popf
pushl
cmp
data16
sub
insb
xor
test
sub
cmp
xor
outsb
je
cmpsb
jae
stc
test
lds
cltd
push
jg
push
enter
iret
adc
jl
jge
mov
sbb
iret
xor
add
pop
fimull
outsb
jecxz
lahf
xchg
mov
ja
out
in
dec
adc
dec
ret
jp
adcb
pushf
fcmovnbe
out
adc
jnp
or
ss
ds
int
out
les
mov
push
sub
out
add
and
enter
addr16
mov
clc
hlt
and
or
mov
ljmp
mov
mov
lret
repnz
sbb
repz
sti
or
pop
inc
clc
out
push
mov
pusha
jle
sbb
orl
adc
mov
adc
jmp
scas
dec
adc
arpl
or
push
mov
ret
imul
out
and
dec
std
les
sar
clc
popa
pop
pop
cli
jle
and
mov
xchg
add
adc
daa
lds
dec
outsl
lods
inc
lea
push
push
jae
es
sbbl
xchg
dec
xchg
sbb
and
lods
or
or
mov
push
push
xchg
mov
testb
xchg
xchg
mov
test
ljmp
imul
mov
sbb
push
in
and
dec
cmp
xor
adc
stc
jno
dec
outsb
call
push
mov
push
mov
incb
jecxz
in
decb
sbb
cmp
and
bound
daa
call
jbe
pop
add
iret
push
outsl
jo
cmpsb
popa
fcomi
sub
mov
mov
addr16
jle
add
scas
jb
das
decb
fidivs
mov
pop
lret
cmp
jns
mov
mov
and
sahf
shlb
fidivs
and
mov
mov
scas
js
pop
adc
out
cmc
push
xchg
mov
or
mov
out
repz
mov
lods
inc
fscale
jl
paddsw
rclb
inc
int
bound
cmpsl
or
jl
pop
bnd
adc
mov
fmul
push
fists
insl
pop
call
call
and
mov
pop
test
stos
bound
sub
in
iret
in
arpl
cmc
ret
xor
cltd
dec
nop
push
xchg
jbe
mov
xchg
mov
sbb
cwtl
or
pop
inc
push
mov
cmp
xchg
out
out
and
xlat
out
int
and
aas
inc
push
add
sbb
int3
int3
push
add
xchg
pop
mov
push
into
cwtl
stos
jle
dec
cmpsl
addr16
and
xchg
mov
jno
imul
sub
sahf
xor
xchg
fwait
nop
es
int
push
stc
rclb
lret
movsb
push
mov
jbe
xor
sub
mov
aam
fwait
scas
js
mov
fincstp
lods
jl
cmpsl
fiadds
popf
sbb
mov
xlat
fdivrs
mov
fwait
push
cli
in
cmp
sbb
cmpsl
cmc
xchg
shl
movsl
es
or
and
cmp
das
repz
mov
xchg
or
sub
ss
fimull
pop
dec
pop
or
inc
add
cmp
cltd
sbb
push
or
lret
and
in
jbe
cmp
in
xchg
xorb
les
push
mov
xchg
xor
stos
pop
shr
fidivl
xor
insl
pop
xor
adc
aad
ja
sub
call
push
repz
fidivrs
ret
std
lods
add
xor
stos
xor
inc
sbb
push
mov
mov
fwait
jle
out
cmp
shll
loopne
jb
inc
pushf
sarl
dec
pop
inc
mov
sbb
mov
add
dec
fildl
pusha
push
inc
push
sub
dec
sub
jecxz
roll
aas
push
cmp
pushf
aam
mov
and
pop
mov
loopne
lods
adc
movsl
or
push
mov
push
xor
dec
mov
lods
mov
scas
mov
fxch
xorl
js
enter
push
lods
cltd
sbb
fs
cmpsb
sbb
jp
sbb
pop
stos
pop
arpl
jbe
cmp
and
pop
repnz
push
and
jmp
adc
cmpl
dec
fucomp
pop
outsl
pop
add
push
outsb
imul
ss
inc
mov
repnz
add
dec
pop
stos
mov
adc
rcrb
in
sub
add
dec
fcomip
ja
adc
nop
aad
cs
jbe
cmp
xor
push
repnz
int3
ficoms
imul
loopne
stos
or
jle
popf
pop
pop
dec
outsb
lret
movsb
xchg
mov
lret
ret
push
mov
xor
pop
inc
lock
pop
es
sbb
cmp
fstps
shrb
push
and
mov
sbbl
call
push
inc
cmp
lock
cmc
push
push
xor
imul
jg
call
and
jae
sbb
repnz
xor
insl
fcmovb
adc
hlt
cmpsb
in
rcll
pusha
enter
xlat
leave
xor
ret
gs
pop
push
cmp
aas
adc
dec
dec
shlb
sub
sub
mov
dec
sub
mov
loope
inc
ficoms
addl
roll
data16
adc
mov
shl
add
stos
pop
cltd
gs
cmp
adc
and
pop
insl
xlat
lods
test
pop
call
mov
sub
and
cmpsl
cwtl
inc
in
or
add
movsb
sbbl
clc
xchg
lods
add
xlat
fidivl
gs
repz
or
pop
pop
cltd
sub
jge
out
loop
sbb
sbb
sbb
adc
out
test
nop
sub
or
in
xor
inc
cmp
inc
aam
imul
int
pop
data16
mov
lret
xor
insl
out
xor
pop
js
lods
outsl
lea
add
fists
fstl
and
lods
sbb
mov
mov
add
dec
and
pop
aam
mov
addr16
fwait
stos
divb
and
jno
mov
daa
sbb
loope
adc
xchg
and
clc
xchg
pop
test
mov
pop
mov
sub
cmp
sahf
stos
clc
or
dec
add
fwait
mov
repnz
push
dec
scas
mov
pop
es
mov
jl
fisubl
sub
jbe
int3
imul
push
add
test
jge
push
jno
cmpsb
in
and
sub
sub
or
inc
push
xchg
into
jmp
nop
lock
lods
push
push
scas
adc
inc
mov
mov
add
addr16
out
fwait
mov
dec
jmp
std
adc
sbb
rol
nop
push
into
fld
push
shlb
sbb
push
jnp
adc
aam
hlt
jns
mov
dec
mov
add
stc
fucomi
and
push
adc
mov
pop
push
inc
xor
loopne
repnz
roll
rcl
xchg
mov
add
call
test
mov
jecxz
jno
call
sbb
cmp
aas
call
jmp
xchg
mov
dec
cmc
pushf
inc
mov
out
xchg
push
pop
out
add
test
and
dec
jns
jno
sbb
imul
pop
loopne
inc
pushl
lds
pop
insl
lock
dec
dec
sbb
iret
stc
mov
shl
mov
mov
jmp
jne
push
sbb
mov
js
popf
sarb
in
mov
mov
cmp
stos
ja
or
dec
dec
xchg
mov
xor
fsubr
mov
test
fdivl
jp
pushf
sub
stos
xlat
subl
cld
or
loopne
mov
daa
ret
dec
cs
or
xchg
xchg
aam
dec
sub
or
cmpb
cmc
daa
adc
jae
setp
adc
add
roll
fiaddl
xchg
xchg
in
pop
fs
jle
xchg
mov
cwtl
loop
sub
cmpsb
mov
or
dec
push
pop
jbe
xor
xor
xchg
xchg
jmp
inc
mov
int
or
pop
cltd
dec
das
or
mov
jg
or
popa
push
xchg
xchg
das
gs
lret
mov
movsl
push
loope
repz
ss
mov
int3
stc
mov
add
or
loope
pop
repz
icebp
scas
push
xchg
mov
lods
psllw
leave
pop
cmp
mov
jns
cmpb
xchg
sub
std
fstl
inc
jg
mov
mov
inc
cmp
outsl
add
or
inc
das
and
inc
idiv
daa
pop
jnp
imul
lcall
inc
mov
in
or
lcall
leave
mov
dec
sbb
mov
repz
int
adc
and
int
pusha
fcomi
in
push
mov
mov
add
sarb
fs
hlt
filds
hlt
adc
lcall
cmpsb
push
push
mov
sub
mov
pop
in
test
mov
sarl
addb
adc
xor
es
mov
bound
push
mov
aaa
jecxz
js
filds
cmp
into
rcrl
jae
test
insb
cwtl
pxor
cmp
xchg
adc
and
xchg
push
fwait
movsb
in
jl
ss
clc
ja
mov
or
jl
repz
scas
cmp
jbe
es
les
icebp
push
pop
test
repnz
dec
xchg
mov
cli
mov
inc
mov
es
jne
ss
iret
jle
mov
mov
or
or
rcrb
xchg
jle
xor
mov
cmp
inc
push
leave
push
int3
adcl
or
imull
xchg
mov
jle
test
mov
pop
and
or
and
jmp
daa
pop
inc
loope
inc
nop
jp
fnsave
sbb
pop
in
sbb
sub
pop
std
sbb
jge
lods
aas
dec
hlt
xor
and
sub
mov
stc
push
push
jno
insb
imul
and
fdivrp
dec
cmp
iret
sbb
loop
fmulp
ljmp
cwtl
in
enter
jecxz
ret
and
jae
xor
xchg
jb
ss
movsb
repz
shrl
mov
sahf
xchg
pop
mov
sub
je
scas
jae
test
xchg
jg
push
jl
push
sahf
fldl
adc
sub
loop
inc
cmc
inc
aad
xchg
cmp
xorb
rcrl
shrb
push
shrb
cmc
mov
iret
xorl
push
cmp
add
xchg
insl
stos
ret
pop
adc
js
sub
sub
enter
lahf
inc
mov
jnp
cmp
gs
inc
cmpsl
popa
loopne
mov
gs
sbb
sbb
mov
mov
or
rorb
outsb
mov
adc
fwait
xchg
cmpsb
mov
mov
sbb
dec
xor
in
mov
aad
sbb
lret
mov
jecxz
les
xor
push
ds
xchg
bound
loope
pop
jae
out
outsb
dec
ds
lcall
sbb
and
dec
mov
mov
xchg
mov
inc
adc
mov
enter
pop
mov
inc
push
jg
xchg
cmc
leave
sbb
add
fadds
fnstenv
out
addr16
pop
stos
or
mov
cmpsl
jne
push
adc
xor
adc
movsl
xlat
fstps
test
push
sti
dec
ror
mov
cmc
cmpsb
mov
pop
ret
repz
int3
add
ss
in
add
in
or
subb
xchg
pop
sbb
push
cwtl
es
push
and
lret
stos
ret
cmp
push
std
push
cwtl
dec
outsb
loope
lock
adc
or
rcrl
enter
add
sub
xlat
xor
or
jg
xor
jp
call
lahf
sahf
rep
jg
rcrb
add
jo
ja
jmp
in
adc
sbb
imul
mov
loope
jo
jbe
ss
dec
push
imul
rclb
int3
jg
je
pop
sub
add
push
in
out
push
pextrw
jne
or
lock
dec
shr
mov
lock
jnp
jecxz
std
add
subb
and
and
ljmp
test
add
pusha
lods
mov
sti
out
in
xchg
dec
andb
dec
fmul
dec
cmp
mov
jno
imul
dec
jmp
call
mov
mov
add
mov
cmpsb
add
pop
xchg
dec
testb
dec
mov
iret
iret
call
push
and
out
dec
scas
aam
mov
mov
mov
xor
ret
pop
xchg
add
sbb
into
out
in
pusha
mov
cwtl
cld
push
jmp
lock
je
js
sbb
test
jno
fisubrs
pop
out
js
pushl
sbb
out
in
sbb
ja
add
lds
lret
divl
cmpsl
aam
push
test
dec
mov
sub
push
les
cwtl
lret
loope
mov
cmpsl
xchg
pop
loopne
mov
pusha
dec
nop
inc
jmp
mov
add
popa
ss
lret
fwait
mov
sarb
mov
add
push
cs
push
jmp
xor
das
sahf
pop
jmp
outsb
clc
cmc
insb
das
inc
xor
push
jnp
sub
idiv
out
push
adc
sbb
fdivrl
and
ds
dec
mov
push
pushf
std
push
push
sbb
pop
mov
fwait
jne
iret
cmp
sub
push
xor
pop
jp
mov
xchg
push
jle
ds
pop
in
inc
xchg
lret
and
in
shrb
fdivp
fcoml
mov
ss
out
fldcw
jbe
int3
lds
stos
pop
mov
jg
push
and
sub
dec
push
xor
sti
sbbl
jg
popf
ret
dec
mov
jl
std
mov
mov
mov
in
pop
enter
fldenv
jo
push
ja
pop
sahf
es
test
shrb
fidivs
pop
lods
imul
fs
int
push
lahf
sub
dec
jns
das
adcb
lods
mov
jmp
loopne
clc
insb
jl
and
aam
inc
cmpsl
pop
xor
repz
clc
pop
out
aad
cld
add
mov
sbb
loop
das
into
enter
jo
mov
pop
pop
inc
sbb
nop
add
addr16
xchg
movsl
xchg
repz
icebp
scas
xor
cltd
ljmp
mov
outsl
adc
add
jo
out
pop
cmpsb
or
lahf
push
pop
inc
xlat
aad
in
std
pop
mov
dec
lcall
je
mov
pop
mov
dec
pop
xchg
pop
insl
scas
mov
scas
mov
in
xor
push
push
cmp
orl
lret
dec
icebp
jae
pop
sarl
ja
jne
mov
loopne
xor
repz
mov
pushf
aam
loop
aad
cmp
sete
mov
pop
cmpsb
pusha
xor
sbb
jb
int3
push
jecxz
cmp
outsb
hlt
add
jecxz
lds
mov
fs
push
dec
sti
dec
dec
jne
ljmp
or
push
pop
scas
pop
popf
mov
ja
pop
fmuls
and
imul
shl
pop
push
or
push
dec
push
cmpps
lea
add
mov
aam
push
jno
shl
stos
das
pop
lret
out
hlt
cmp
mov
push
push
hlt
mov
pop
neg
das
and
pop
loop
sub
jle
pop
lahf
je
adc
cmpb
jo
push
or
cmpsl
adc
cmpsl
mov
xor
shll
cmpsl
xchg
or
inc
jns
xor
dec
push
mov
lods
sarl
and
cmp
lods
out
dec
mov
adc
inc
mov
add
inc
pop
add
inc
push
mov
rclb
xor
pop
mov
cmp
pop
sbb
add
gs
mov
push
iret
movsl
mov
cmpb
jmp
mov
cmp
mov
mov
inc
aas
fisttps
push
inc
sarb
push
inc
sahf
dec
cmp
mov
sar
pop
cmc
std
inc
in
pop
shlb
jns
mov
cmp
repnz
xor
pop
jmp
mov
imul
cmp
cmp
movsb
iret
xchg
mov
sub
pop
int
mov
pop
pop
out
pop
in
gs
fucom
mov
sub
pushf
fisubl
dec
xor
ficoms
jmp
cmp
or
inc
scas
loope
mov
cli
icebp
into
lret
jnp
clc
sbb
cli
testl
xlat
adc
fimuls
push
add
stos
dec
dec
cmp
js
jne
std
cltd
cmp
mov
repnz
push
movsl
pop
mov
loop
push
mov
push
loope
lds
je
sub
cmp
mull
fwait
gs
inc
push
xchg
sbb
mov
les
movb
test
in
scas
xor
jmp
jl
aaa
adc
je
mov
push
jg
loop
test
cmp
ss
jns
sub
fs
pop
push
stos
mov
gs
inc
add
js
cmc
sbb
lret
mov
scas
int
cmp
iret
xchg
rorl
xchg
test
mov
cmp
insl
ss
push
pop
in
inc
ljmp
or
mov
cltd
btc
pop
mov
stos
mov
inc
xchg
pusha
cwtl
add
dec
popl
dec
mov
punpcklwd
test
popf
jmp
pusha
pusha
clc
int3
cli
push
push
sarb
jp
cmp
push
sub
push
pop
stc
test
mov
lret
adc
inc
ja
cmp
imulb
and
sbb
jae
xchg
mov
inc
push
aaa
push
cmp
aad
dec
cmp
fisubs
or
out
or
andb
shll
call
sbb
xchg
into
out
cmc
fsubs
dec
push
testb
dec
sbb
inc
jb
cmp
fdivr
sbb
pop
into
or
out
add
bound
push
das
mov
out
aam
push
xchg
shll
mov
cld
fwait
in
out
and
stos
push
in
push
cmp
and
outsl
lret
clc
xor
aam
sbb
xor
xchg
test
jl
lret
push
aas
mov
ret
add
jne
sub
lock
test
mov
adc
cmp
mov
push
fistpl
ljmp
les
jno
aad
stos
mov
lods
dec
pop
lret
xlat
and
loope
pop
in
pop
imul
mov
sbb
pop
cmc
xchg
clc
mov
inc
mov
dec
addb
lock
pop
ret
sbb
cmp
xchg
rclb
sbb
sti
orl
or
push
jnp
push
pop
int
pop
dec
ss
jecxz
and
cmc
jle
mov
inc
inc
mov
cmp
cmp
mov
dec
inc
mov
adc
enter
lock
into
jb
clc
flds
sbb
loope
cmpsl
movsb
pop
xchg
das
adc
dec
add
dec
into
lods
incl
enter
sbb
jnp
enter
stos
adc
inc
cmc
hlt
or
mov
scas
jmp
inc
mov
cmp
mov
sub
aaa
or
mov
or
out
sub
cmp
cs
inc
sub
arpl
je
mov
push
cmp
mov
lahf
rorb
mov
xor
sbb
iret
inc
in
mov
adcl
mov
hlt
out
or
sbb
or
xchg
fstl
movsb
loop
adc
bswap
imul
dec
adc
sbb
xor
xchg
mov
cmp
lods
jo
push
dec
stos
or
xchg
add
dec
push
loopne
das
sahf
shrl
int3
ja
cmp
xor
movsl
push
mov
and
inc
daa
add
jne
test
test
rolb
cmp
adc
sub
cmp
push
jb
add
pop
xor
push
adc
xor
imul
stos
sub
scas
mov
mov
xchg
divb
dec
cmpsb
sub
add
out
sbb
test
mov
movsb
loopne
push
jmp
aas
into
mov
std
aas
xchg
sub
xchg
mov
seta
nop
je
push
repz
lcall
ds
stos
mov
jne
sbbb
pop
mov
shll
mov
jns
inc
loope
ja
mov
pop
cld
or
jl
xor
popf
jge
cmpsl
outsb
inc
enter
pop
jb
sbb
inc
push
iret
adc
inc
and
jns
mov
pop
inc
fs
xchg
mov
add
sub
mov
lods
inc
mov
nop
xchg
in
aas
shrl
xor
out
pop
sahf
mov
ror
dec
mov
in
and
sbb
mov
les
das
or
or
ja
mov
fisttpll
ret
ret
test
add
mov
cli
lods
mov
in
xor
fmull
out
nop
pop
push
cmp
inc
cmp
mov
push
pushf
dec
add
push
jb
sbb
cli
leave
sahf
mov
and
call
in
jmp
adc
or
and
add
std
into
jo
mov
enter
mov
add
and
lods
sbb
and
push
jle
shll
mov
xchg
or
jle
inc
iret
inc
sub
int
fmul
inc
inc
sub
out
cmp
push
popf
push
sub
imul
pop
hlt
dec
mov
mov
push
pop
mul
adc
mov
dec
push
sti
and
cmp
ficoml
shl
adc
cs
xchg
loope
push
push
sbb
sub
loope
pop
inc
imul
xchg
fists
rol
cld
dec
push
jbe
cmpsl
jle
jl
adc
ret
das
clc
sbb
sbb
push
aas
and
in
ds
in
and
test
hlt
sub
dec
cli
notl
and
dec
fst
shl
add
push
pop
mov
scas
adc
fxch
jge
pushf
repz
out
movsb
out
xchg
sbb
aas
push
jne
or
mov
xchg
ja
fildl
sub
clc
bnd
sbb
in
jb
xchg
ret
mov
movsb
pop
mov
xchg
lea
sbb
pop
inc
xchg
sbbb
pop
jns
sub
jns
nop
sti
dec
stos
pusha
lock
mov
push
inc
mov
push
sbb
jge
mov
scas
stos
add
test
adcb
mov
mov
sbb
rsm
xchg
sbb
ss
inc
xor
push
in
ud2
jnp
ret
jl
adc
adc
ffreep
jg
fdivl
dec
ja
mov
cs
mov
xor
js
dec
mov
jmp
push
in
je
inc
add
sbb
das
pusha
leave
xor
lahf
push
push
sbb
mov
shlb
inc
jb
dec
inc
aas
sarb
and
xchg
aas
sbb
stc
jge
push
or
imulb
mov
fwait
dec
add
test
dec
sub
sub
mov
popf
decb
sub
fmul
arpl
pop
cmpsl
xor
xchg
cmpsl
xor
jecxz
cmpsb
lret
divl
cmpsl
pop
movsb
sbbb
insb
mov
data16
pop
xor
adc
xor
movsb
out
ror
arpl
xchg
lea
je
test
out
inc
add
cld
jns
push
mov
out
in
jb
push
roll
dec
dec
or
jb
or
cmp
adc
sub
dec
ret
sti
jno
mov
stos
push
cmp
daa
inc
cli
or
into
push
loopne
aam
inc
add
xchg
sbb
inc
cmpsl
xchg
mov
sbb
dec
lcall
clc
jne
insl
mov
aad
in
aas
xchg
push
es
push
sub
aad
sahf
outsl
mov
xor
inc
cmp
mov
push
push
xchg
jle
sbb
scas
mov
pop
cmp
mov
pop
xor
cmpsb
hlt
push
push
call
movsl
or
mov
cmp
inc
insb
mov
push
mov
sbb
xchg
push
push
mov
rol
add
lds
push
mov
mov
push
popa
rclb
inc
sarb
imul
test
adc
cmpl
xlat
mov
lods
mov
test
sarl
mov
and
daa
mov
int3
mov
jnp
out
push
or
dec
jb
outsl
int
sub
sbb
mov
test
mov
push
and
out
lea
push
xor
mov
or
stos
inc
pushf
sbbl
mov
les
lea
loope
iret
fwait
push
cld
push
jp
outsl
fcmovb
push
xor
jbe
insl
mov
in
stc
popa
call
and
shrl
data16
mov
mov
into
mov
pop
in
xchg
iret
js
push
xchg
push
fbld
jbe
cmpsl
cmp
scas
mov
dec
mov
dec
aad
les
pop
mov
or
in
notb
in
push
xchg
in
mov
cwtl
icebp
push
pushf
and
or
adc
adc
push
aaa
or
cmp
push
dec
mov
dec
jle
inc
sub
js
icebp
repnz
inc
imul
pop
popa
sub
stc
clc
and
jno
pop
leave
sub
jns
idivl
popa
jno
movsl
xchg
mov
mov
or
lds
ret
sbb
dec
xor
jne
mov
dec
cmp
mov
fsubrs
sub
pop
fists
sti
xor
push
popa
stc
push
jmp
mov
pop
imul
sbbl
inc
push
xchg
jmp
insb
roll
or
nop
xchg
lds
sub
lcall
dec
icebp
call
xchg
mov
cwtl
sarb
out
mov
pop
lahf
xchg
aam
cmp
aaa
sbb
je
xor
hlt
dec
addr16
cmp
inc
pop
cld
cmpsl
adcb
inc
int
test
dec
test
and
sbb
hlt
xor
test
mov
clc
xlat
xor
cmc
aam
dec
dec
inc
sbb
inc
test
mov
gs
and
add
test
pop
jmp
hlt
movsb
lcall
xor
repnz
test
cmp
lcall
dec
test
mov
cmpl
stos
xchg
rcll
pusha
cmp
push
cmp
inc
xchg
lods
mov
mov
adc
add
xchg
jbe
cmp
mov
lods
push
outsl
aas
pop
jle
inc
push
pop
jge
dec
xlat
scas
lret
sub
call
imul
scas
cli
ja
test
pop
mov
mov
xchg
add
jg
addr16
pop
jg
bound
mov
icebp
lcall
and
xlat
in
pop
dec
andb
mov
xor
inc
sub
imul
sbb
jnp
adc
push
mov
lods
jae
xorl
fnsave
out
add
lock
aaa
iret
lret
popf
xchg
mov
mov
imulb
and
int
dec
or
cs
dec
out
xor
add
add
mov
xor
aaa
and
jmp
fnstenv
insb
jbe
ljmp
lock
fld
add
scas
out
ret
int
out
pop
or
mov
mov
daa
xchg
and
sti
sahf
jmp
stos
adc
lahf
rcr
cmc
inc
dec
lcall
aam
jbe
mov
in
pop
lea
shl
icebp
and
js,pt
cmp
mov
mov
outsb
pop
pop
xor
ret
sub
cmpsb
adc
faddl
jecxz
scas
cmp
dec
movsb
fistps
in
sbb
nop
mov
inc
data16
xchg
fidivs
or
lea
int3
jg
in
inc
mov
cmc
sub
stos
push
xor
in
fidivl
fldenv
jg
cli
add
daa
push
add
out
out
mov
and
jns
pop
pop
cmp
ljmp
gs
jno
jp
adc
iret
ds
inc
lds
jp
jp
pop
mov
add
xchg
popf
adc
loope
dec
xor
add
loope
mov
pushf
cmp
cwtl
xchg
call
cs
push
mov
adc
push
in
shlb
and
lcall
dec
dec
mov
int
stos
push
imul
addb
push
xor
shll
data16
scas
or
or
enter
sub
mov
lods
dec
mov
push
rclb
mov
or
loopne
jp
cmp
lds
inc
into
pop
je
test
cmpsb
adcb
lret
or
bound
pop
xchg
add
imul
test
jp
or
imulb
lcall
pop
or
pusha
cmp
arpl
xchg
pop
mov
xchg
mov
fcompl
inc
jge
jge
mov
sahf
scas
xor
fstps
dec
add
jnp
sbb
mov
push
cmp
ljmp
jns
ret
fstl
ds
rcrl
mov
lock
aad
pop
addb
cli
adc
cld
out
sub
mov
arpl
jae
mov
push
mov
cmp
mov
iret
ja
mov
sbb
jae
negb
push
ret
shlb
neg
mov
mov
cli
scas
pushf
int3
shr
xchg
mov
jge
adc
icebp
orb
orb
cmp
leave
adc
dec
int
cmp
add
ja
shlb
fnstcw
hlt
aad
sahf
cs
jne
outsb
int
mov
loop
sub
leave
inc
data16
xor
xchg
jnp
push
lods
push
stos
pop
inc
les
daa
imulb
int3
cmp
mov
insb
movsb
test
or
mull
nop
xchg
mov
lods
push
jmp
aaa
and
repz
ja
add
cmp
pop
fisttps
out
jo
aaa
into
mov
out
sahf
cmp
sbb
jmp
mov
add
xor
cmp
jns
push
shll
cmp
mov
int3
mov
fcompl
cmpsl
sbb
mov
mov
jb
lahf
sub
push
xor
in
jl
mov
ss
xchg
or
outsb
push
movsl
or
jno
popf
ja
int
jo
scas
sub
imulb
rcr
sarb
dec
adc
cmpl
sbb
mov
scas
icebp
pop
jo
shll
pushf
stc
jecxz
dec
out
xchg
mov
mov
pop
pop
xchg
loop
or
cmp
and
push
std
jmp
mov
shl
jne
int
loop
push
sub
inc
sbb
inc
icebp
mov
mov
xchg
scas
ljmp
dec
xchg
cmp
mov
mov
int3
fnstcw
or
jne
hlt
mov
push
sahf
add
inc
push
dec
sbb
or
jp
sbb
xchg
dec
mov
int
call
inc
in
imul
jecxz
jmp
lea
repnz
arpl
iret
mov
pop
pop
xor
adc
add
jo
pop
imul
ja
xchg
sbb
aaa
sub
mov
push
scas
or
loope
mov
and
or
pop
cmpsb
repnz
lods
insl
aad
jmp
xchg
mov
xchg
leave
add
inc
adcb
lret
nop
dec
andl
or
ljmp
inc
hlt
fnstenv
std
xchg
add
inc
dec
xchg
pop
test
adc
in
push
push
clc
fucom
lods
dec
insl
lds
in
jle
push
ret
aam
lcall
out
shrb
dec
sarl
loope
cmp
push
jno
inc
and
pop
cmpsl
inc
in
lcall
mov
test
or
insl
dec
addl
hlt
sub
fstl
in
jns
adcl
jmp
dec
rclb
jle
mov
mov
xchg
lods
cmc
out
push
fwait
inc
jmp
or
or
jp
pop
shlb
fs
ret
fcompl
xchg
outsl
ja
scas
jnp
fs
iret
mov
and
fistl
mov
lcall
out
fisubs
call
aas
xchg
scas
pop
jbe
sahf
mov
lds
rol
in
mov
push
inc
movsl
push
mov
cmpsl
jne
js
mov
mov
inc
pop
or
mov
mov
ds
or
mov
decl
lcall
cld
ja
xor
rorl
in
fildll
mov
lea
sbb
sub
out
lods
mov
insl
push
sub
add
adc
mov
mov
in
ljmp
and
push
xchg
ljmp
sahf
in
cmpsl
adc
mov
xor
dec
jg
inc
cmp
ss
xchg
cmp
pop
repz
pop
xchg
jp
mov
sub
dec
cmpsl
push
xlat
xor
outsl
dec
and
sub
fs
add
jb
cs
mov
add
ja
xchg
inc
jle
ss
push
push
push
sub
or
add
adc
loope
imul
mov
mov
push
mov
lcall
and
xor
cwtl
in
frstor
sti
out
in
jg
fisttpl
sbb
int
fwait
dec
nop
xchg
roll
iret
adc
push
cmpsb
scas
sbb
js
daa
shlb
xchg
cmp
sbb
fs
jl
out
jg
addb
aam
xchg
pop
xchg
cld
das
icebp
adc
mov
dec
cmpb
ja
cmp
sbb
inc
pop
loope
daa
xor
mov
fdivrp
imul
clc
mov
aad
insb
mov
lds
pushf
sub
ficoms
fildll
cmp
mov
jo
mov
mov
lahf
mov
out
add
xor
das
pop
pop
out
in
mov
sahf
xlat
loop
cmp
pop
fsubrl
cmpl
stos
orb
or
in
mov
xor
aaa
inc
outsb
sub
mov
jle
or
mov
stos
xchg
xor
sub
inc
aad
jno
or
add
mov
or
popf
dec
jne
fisttps
adc
out
jl
jge
mov
mov
mov
inc
xchg
sub
in
and
imul
jmp
das
cmp
mov
cmpsb
aas
jnp
ror
sub
daa
repnz
int
repz
mov
jmp
xor
sbb
jle
test
sbb
cmp
mov
push
xchg
movsb
dec
sbb
ret
shl
jl
mov
rcl
call
xor
cmp
das
xorl
mov
enter
push
aad
rorb
dec
sbb
in
les
mov
mov
mov
mov
lock
test
fwait
mov
aam
jae
mulb
aam
mov
adc
data16
lds
push
outsl
pop
aad
xchg
int3
jbe
stos
xlat
shlb
or
jo
xchg
jbe
inc
lcall
add
scas
sbb
xchg
cs
nop
sti
or
xor
mov
jp
adc
add
aaa
mov
aad
sahf
je
push
jnp
or
or
imul
aad
mov
pusha
sub
cld
rcrl
outsb
sub
lcall
and
out
mov
pusha
scas
pusha
arpl
jmp
gs
jge
lods
add
cmp
setge
test
inc
and
jnp
and
es
inc
cmp
dec
nop
lock
rorl
orl
sbb
add
add
sub
xchg
ljmp
pop
in
jnp
pop
icebp
jo
adc
dec
jno
pop
cmpb
test
and
dec
rorb
push
xor
sbb
mov
test
imul
mov
xchg
addl
sub
ljmp
std
sub
and
or
stc
jb
int3
sbb
xor
sub
dec
in
ljmp
jmp
das
jbe
and
mov
insl
and
jecxz
mov
xor
js
dec
mov
ss
icebp
movb
xchg
push
mov
mov
mov
in
fdivrs
popf
cwtl
mov
pop
mov
nop
sub
xor
bound
stc
push
cmpsl
roll
shll
mov
lret
testb
fstpl
inc
and
inc
push
pop
xchg
jp
jmp
mov
sti
inc
jne
loope
cmp
cltd
add
cli
push
out
loopne
cmp
and
jmp
or
pop
fbstp
mov
sbb
cmp
call
fsubrp
push
mov
in
push
dec
lock
inc
adc
cmpsb
call
cltd
or
pop
mov
das
mov
btl
fs
ret
mov
fldt
add
cmp
pop
jmp
pushl
daa
dec
addl
aad
xchg
sbb
psllw
loopne
dec
out
xor
jb
push
jno
lcall
out
cmc
mov
or
mov
movsl
sbb
cwtl
xor
pop
push
stos
jns
mov
or
pusha
jbe
js
es
jl
jge
sbb
dec
test
shl
adc
sub
push
fs
jg
or
adc
idivb
pop
dec
cmpsl
pop
nop
xchg
test
adc
daa
mov
repz
push
call
jno
pop
sbb
lock
es
jg
js
xchg
jo
fisubs
cli
xor
in
cmp
ss
fwait
sbb
insl
popf
add
xchg
jmp
lock
in
ljmp
mov
cmp
iret
sarl
ja
ja
ret
mov
stc
rorl
or
mov
movsb
push
push
cltd
je
adc
sub
mov
add
cmp
ret
idivb
call
xor
pop
aaa
adc
insl
add
mov
outsl
push
addr16
add
cs
xor
sbb
or
imull
pop
stos
mov
dec
ret
mov
pop
add
xchg
or
scas
sbb
xchg
inc
inc
ds
insl
pop
scas
lds
inc
mov
scas
jb
jg
adc
cltd
popf
add
push
data16
sbbl
repnz
mov
push
rorb
mov
push
adc
test
dec
int
daa
push
dec
xchg
push
ljmp
mull
rorl
and
xchg
xor
lods
pop
int3
clc
pusha
ret
mov
and
call
mov
xor
jp
fdivr
mov
stos
out
xor
lcall
clc
jge
adc
add
push
mov
stos
pop
xchg
fmulp
fs
pop
insl
into
adc
push
sub
sub
pop
fiaddl
rcl
push
addr16
call
mov
shrb
stos
dec
pop
sti
xor
imul
mov
test
in
inc
daa
sarb
leave
nop
nop
pop
xor
sub
lcall
orb
inc
mov
pushf
mov
pop
das
push
mov
inc
cmp
test
or
jecxz
xor
movsl
fbld
and
pop
mov
repnz
pop
or
add
je
mov
incb
xchg
xor
pushf
subl
adc
test
lea
pop
cs
in
movsl
push
repnz
lock
je
adc
andl
popa
inc
jnp
gs
ficoms
add
xor
xchg
sub
pushf
sbb
jecxz
int
out
sbb
ss
jp
cld
pop
dec
ja
test
nop
sub
or
xor
inc
ret
mov
mov
pop
lret
xchg
jnp
fbstp
ds
xchg
mov
lock
stos
mov
inc
add
mov
orb
insb
cmpsb
mov
mov
and
mov
lods
jne
xchg
sub
stc
and
xorb
les
mov
imul
jmp
mov
les
pop
jo
pop
rorb
mov
jno
cmp
xor
and
mov
mov
aad
mov
pushf
add
sbb
jl
shl
loope
pop
lock
notb
push
mov
lret
das
punpckhdq
cmpl
inc
out
lret
mov
inc
xchg
jl
lret
sarb
pop
into
mov
dec
mov
lcall
ja
rolb
sbb
stos
sub
ss
pop
sbb
lret
jo
out
dec
or
cld
faddl
push
int3
pop
pushf
aas
ret
je
xlat
xor
mov
xor
jbe
inc
in
mov
rolb
cmp
adc
icebp
jg
fstps
dec
fbld
cmpsl
cltd
cmp
in
mov
lret
push
inc
arpl
aad
je
xor
xor
xor
jl
xor
and
leave
xchg
sbb
mov
int3
mov
jno
jmp
mov
test
out
cld
adc
insb
test
mov
lods
insl
out
out
ret
inc
cmp
mov
jns
and
sbb
jp
xor
cmp
dec
pop
lock
out
adc
scas
out
or
mov
imul
or
stos
xchg
xor
mov
adcb
in
ja
sub
xlat
mov
mov
lods
dec
ljmp
jb
pop
dec
sbb
pop
dec
test
arpl
imul
je
pop
sub
or
sti
test
jae
and
std
push
push
and
mov
in
pusha
negl
pop
sti
ds
imul
je
jne
stos
and
aaa
daa
mov
ret
fldl
mov
xchg
out
call
inc
ret
out
decl
add
mov
and
inc
in
dec
fcmovb
mov
lcall
xchg
push
lods
mov
stc
mov
or
fimuls
loop
pop
loop
add
stc
loopne
mov
pop
aam
mov
pop
or
lock
jmp
mov
xchg
fwait
std
xchg
ja
loopne
into
mov
adc
subl
pop
leave
adc
mov
mov
imul
imul
and
jecxz
push
out
addl
fnstsw
lret
mov
fistl
loopne
push
add
xchg
push
ljmp
fnstcw
jnp
mov
xor
sbb
popf
std
jb
mov
xor
cmp
lea
out
mov
jge
push
fadds
inc
push
xor
dec
or
fadd
enter
clc
leave
inc
in
adc
mov
cmp
add
bound
mov
popf
inc
adc
push
fldt
mov
data16
gs
jbe
mov
subl
lret
insb
shrl
inc
dec
imul
pop
inc
enter
pop
into
mov
jo
aas
jg
pop
xor
mov
mov
jnp
aaa
add
outsb
dec
jns
dec
mov
lods
cltd
cli
inc
sub
pop
cmp
das
mov
pop
sub
popl
cmp
lahf
xchg
fmuls
xchg
jb
pop
gs
push
movsl
cli
mov
xor
mov
std
pop
xor
mov
aas
fbstp
inc
add
mov
mov
int
stc
pusha
mov
jnp
movsl
je
xchg
shl
lahf
cltd
mov
mov
loope
sub
mov
shlb
jecxz
mov
sub
push
xlat
ficoms
out
fsubs
mov
pop
fwait
mov
xchg
aam
lea
inc
dec
insb
add
add
fsubrl
aam
mov
pop
adc
sub
stc
flds
jle
xchg
xor
cmpb
lods
fcomip
xchg
je
popa
mov
es
lret
std
inc
in
nop
adc
mov
cmp
inc
test
iret
addl
andl
dec
loopne
jmp
scas
fisubrs
pushf
fwait
xor
or
cmp
push
xor
mov
sbb
stc
ret
repz
fadds
lcall
repnz
nop
aaa
cs
mov
xor
cltd
repnz
mov
into
test
jl
repz
xor
inc
scas
jg
mov
popf
jg
movsl
dec
cmp
push
inc
mov
cmp
mov
mov
aas
dec
incb
dec
insl
pop
sbb
pop
adcl
mov
shll
je
mov
aaa
xor
and
dec
cmp
push
add
addr16
adc
sub
into
mov
out
mov
add
jl
push
pop
mov
mov
in
jae
and
or
jnp
or
repnz
into
out
jo
test
cli
incb
xchg
mov
xor
out
hlt
out
mov
jp
jmp
pop
adcb
xadd
rorl
cwtl
daa
and
add
ret
test
or
sbb
repz
stos
mov
stos
jno
cmc
mov
xor
sahf
out
inc
movsl
adc
and
xchg
and
cli
cmpsb
cli
cwtl
dec
shll
test
xchg
dec
and
sbb
jb
es
setns
lea
adc
test
sub
stos
pop
cmp
cmpsl
cmp
sub
pop
xor
push
cs
pop
sub
xchg
inc
jo
add
popf
pop
lahf
push
mov
cmp
loopne
mov
jae
mov
gs
adc
or
fisubrs
neg
sub
adc
out
xchg
div
cmpl
test
std
push
dec
jbe
sysenter
add
sbb
inc
mov
ficompl
or
cmp
popa
xchg
pop
rep
dec
std
dec
cs
iret
add
repz
mov
inc
nop
outsl
push
leave
stc
or
call
and
pop
movl
nop
out
cmpsb
shl
mov
das
hlt
leave
push
push
xor
cmp
dec
into
add
call
frstor
stc
js
imulb
ja
int
scas
push
cli
mov
cs
xchg
mov
xor
jo
mov
mov
adc
push
and
int3
dec
popl
or
out
cmc
fcoml
adc
adc
mov
and
inc
stos
sbb
ret
lcall
and
imul
push
push
xchg
out
xchg
push
cmp
scas
fsubrs
ljmp
adc
sub
shlb
loop
lahf
push
out
mov
inc
dec
repnz
insl
popa
cmpsl
jp
sahf
inc
jmp
and
jnp
clc
mov
push
dec
mov
aam
or
jge
sbb
mov
or
mov
mov
mov
and
or
inc
or
lds
sbb
cpuid
jge
push
jbe
fwait
test
arpl
cmp
out
aaa
ret
int3
inc
flds
push
inc
cld
add
fdivr
jns
push
sbb
shlb
cli
xchg
das
sbb
in
push
andl
mov
pop
sub
and
xor
cmp
pop
sahf
jne
fisttpl
test
xchg
and
jg
popf
les
sbb
ds
xchg
sub
mov
add
and
jmp
int
inc
adcb
shl
xchg
enter
mov
ss
jno
les
sbb
popf
dec
sbb
dec
lcall
inc
pop
inc
inc
sub
outsl
adc
fcmove
test
xor
ret
sub
clc
and
xchg
xor
mov
fcomip
push
push
and
stos
clc
cmp
or
mov
inc
std
xor
mov
mov
push
push
outsb
push
xor
scas
adc
mov
xlat
outsl
dec
add
sub
sbb
mov
inc
adc
inc
push
mov
ficompl
and
xchg
out
clc
push
mov
add
stc
out
fiaddl
inc
ret
xor
mov
in
divb
or
hlt
mov
icebp
pop
stos
xor
shrl
clc
sbb
mov
jae
loope
ret
xor
push
sahf
testb
mov
fnstcw
ja
mov
pusha
out
dec
aam
iret
clc
jg
add
add
push
dec
adcb
sbb
sub
xchg
or
add
sub
push
add
push
aad
mov
add
mov
dec
ficoms
mov
movsl
mov
mov
or
shlb
fists
outsb
adc
sbb
or
add
enter
out
mov
ja
pushf
bound
mov
mov
divl
adc
in
cmp
jge
jo
inc
push
jmp
icebp
flds
and
pop
hlt
cltd
push
loop
xor
jp
ret
clc
popa
dec
loope
add
push
sub
je
sub
lea
leave
mov
adc
cmpsl
jo
pushf
sarb
stos
jmp
enter
iret
add
inc
aam
insb
loope
std
add
test
js
cmpsl
inc
inc
sbb
or
cmc
push
sub
xchg
lret
push
test
cmc
out
test
sbb
inc
leave
das
test
jl
test
mov
in
mov
in
push
stc
lods
sbb
mov
sub
and
sub
xchg
mov
and
or
nop
mov
cmc
push
arpl
mov
mov
ljmp
mov
adc
push
cmc
sub
xor
push
adc
or
rcrl
mov
orl
clc
pushf
incl
push
mov
into
pop
pop
adc
js
out
xor
enter
aad
loop
loope
mov
or
ret
aam
mov
sub
iret
out
test
shlb
cmp
ret
and
popf
rcll
adc
fisubrl
cli
mov
inc
xor
mov
pop
out
in
iret
popa
mov
pop
repnz
mov
movsb
movb
sbb
dec
lret
and
push
xchg
sti
lret
push
je
cmp
fs
enter
adc
enter
ret
inc
sub
add
in
xor
mull
jns
icebp
fistl
std
pop
cmp
or
sbb
enter
testl
cmp
mov
repz
shll
add
dec
sarb
mov
lock
add
inc
rorb
inc
xchg
jp
xchg
addr16
in
jbe
es
stos
jo
adc
push
mov
pop
lea
insb
loope,pn
mov
push
jge
pop
mov
outsl
stc
movsb
jae
out
push
or
and
cmp
in
cmp
add
rcrb
cltd
shl
mov
aas
inc
and
lea
sub
sbb
mov
lcall
lret
push
xor
sbb
loop
ret
inc
ljmp
js
lods
sbb
fdivrl
stc
inc
fmull
outsl
pop
and
rep
mov
stc
inc
mov
sbb
cmpsl
es
hlt
mov
mov
mov
xor
sub
aam
xor
sti
or
add
pop
jno
xlat
push
adc
imul
in
into
rcrl
call
sti
lds
out
sbbl
mov
inc
fiaddl
hlt
dec
into
stos
mov
push
mov
jecxz
mov
iret
in
scas
lea
dec
cmpsl
dec
gs
movsl
push
jp
mov
stos
push
scas
lock
outsl
mov
inc
cmc
nop
push
jb
sub
addr16
cmp
cmp
jp
das
mov
addr16
gs
stos
push
xchg
jmp
lahf
push
sahf
lcall
mov
call
add
pop
inc
popf
outsl
lcall
movsl
xchg
sbb
les
xor
mov
stc
pop
loope
cmp
mov
sub
and
scas
rorb
and
jmp
sti
jne
jmp
pop
cmp
pop
xchg
sarl
stc
push
in
xor
fadd
fcomp
pop
mov
mov
push
sub
insl
in
push
roll
es
sarl
fstpt
lret
jb
cmp
dec
test
add
mov
rclb
std
loopne
xchg
repnz
push
jle
pushf
adc
or
push
adc
les
mov
jnp
pop
lock
movsb
mov
ljmp
sub
or
notl
sub
xchg
popf
js
jb
push
rolb
clc
mov
lar
pusha
frstor
mov
movq
xchg
popa
notb
fldcw
jb
sub
cmp
popf
dec
dec
lods
push
test
sbb
xchg
xchg
imull
mov
xchg
inc
fnsave
int3
fwait
mov
mov
in
cmpl
mov
movsl
mov
stos
and
mov
je
or
test
rcl
mov
pop
enter
repnz
int3
pushf
out
fwait
mov
sub
xchg
push
xchg
lahf
bound
aas
jmp
sub
stos
cmpsl
xchg
or
mov
int3
mov
xlat
push
out
jl
lahf
jne
cmp
loope
xor
int3
cwtl
roll
push
dec
int3
loopne
ss
rcrb
or
dec
int
mov
rolb
or
sarl
sarl
loopne
ja
insb
sbb
rcrl
mov
push
add
jno
cmpsl
pop
dec
ficoml
push
lret
push
lcall
loop
aad
pop
jecxz
xchg
pop
pushf
repnz
mov
mov
pop
shrl
fs
fdiv
cltd
scas
pusha
lahf
pushf
icebp
loop
dec
icebp
push
or
inc
jne
cmp
sahf
jp
add
xchg
shrb
pop
scas
pop
sub
rcrb
out
fwait
dec
in
xchg
pop
les
sub
add
bound
repz
mov
cmp
xchg
mov
mov
cmp
xor
inc
jecxz
xlat
arpl
or
or
cmpsl
pop
xchg
aam
cwtl
test
add
dec
jle
cli
jnp
int
jl
add
push
ret
dec
fbstp
inc
pop
lds
jge
sarb
icebp
cmpsl
fcoms
jnp
loope
test
sti
fwait
loope
pushf
bound
aas
in
lock
sub
push
mov
mov
sti
movsl
mov
mov
mov
movsb
cld
arpl
lds
push
dec
pushf
cltd
stos
insb
push
push
inc
push
sub
jno
dec
xchg
fisubl
cmp
sbb
sub
jle
jo
adc
mov
in
mov
and
sub
les
jg
or
or
leave
test
sbb
shr
dec
pushf
inc
mov
mov
sub
mov
loopne
aad
mov
xchg
sbb
fld1
mov
out
jno
mov
push
loop
xor
mov
in
add
sub
frstor
xor
mov
fidivrl
out
jmp
push
xor
ficomps
adc
mov
fidivrs
movsl
idivl
pop
out
clc
mov
cmp
fistpl
cmpsb
stos
mov
push
jae
lods
jnp
lcall
lret
xchg
scas
mov
out
or
bound
jae
and
in
fcomip
je
sahf
cli
out
sbb
shlb
xchg
movsl
sbb
fs
pop
ds
mov
push
popf
lret
fistps
and
sub
cltd
jnp
cmp
dec
popf
sub
test
push
mov
sbb
in
cld
pop
cmp
add
and
in
push
scas
in
mov
mov
mov
repnz
mov
jp
adc
xchg
and
mov
mov
inc
test
sbb
loopne
repz
xchg
cld
or
sbb
nop
sti
add
push
nop
setg
pushf
aas
sti
andb
cli
cltd
jp
lods
add
and
fwait
pusha
jle
sbb
add
popf
pop
std
mov
mov
jg
dec
ja
cmp
add
dec
fisttpll
out
call
jmp
xchg
fwait
imul
and
stos
ljmp
testb
mov
dec
push
cmp
xor
out
add
bound
lods
mov
hlt
mov
and
paddb
out
sbb
rolb
pusha
dec
lcall
push
cmpsb
and
xor
inc
jg
pop
call
jnp
adc
sar
jae
fwait
jo
cld
les
add
scas
loopne
sub
cmpsl
sub
sti
popf
jo
mov
sub
call
pop
stos
fimuls
pushl
mov
cltd
mov
test
imul
insl
push
sbb
dec
les
mov
div
jnp,pt
ret
mov
mov
fsts
rol
in
aad
lret
xchg
sub
push
adc
adc
mov
fildl
mov
adc
shrb
mov
pop
add
ficoml
call
cwtl
repz
cmp
inc
sbb
dec
dec
dec
out
out
and
xchg
mov
xchg
scas
pop
cmp
pop
insb
flds
mov
imul
sub
cmp
rorl
movsl
icebp
aaa
pop
aam
lock
xchg
mov
adc
or
addr16
xchg
pusha
or
jnp
ja
push
jmp
pop
scas
stos
je
aaa
inc
xlat
adc
pop
xor
sbb
xor
push
outsl
mov
sbb
aas
dec
cmp
mov
ds
jg
icebp
dec
repz
add
loopne
ljmp
cmp
js
dec
mov
sub
pop
jl
push
add
enter
sbb
sub
out
pop
push
cld
push
popa
add
dec
fbld
sbb
sbb
mov
int3
incb
jae
push
add
add
out
jecxz
in
or
outsb
jle
stos
fisttps
dec
rorl
cli
int3
ja
dec
cli
adc
notb
popf
sbb
and
test
sub
popf
cmpsl
and
push
ds
shlb
shlb
push
aad
push
sarb
subb
test
das
mov
lock
adc
jmp
lret
xor
xchg
mov
shrl
imul
arpl
addb
mov
push
movsb
jbe
jo
outsb
add
mov
jmp
idivb
push
orl
xchg
xor
jnp
jbe
shrb
arpl
imul
arpl
and
xchg
pop
mov
imul
dec
int
mov
sbb
loopne
or
fdivrs
fldl
idivl
dec
inc
insl
pop
imull
mov
bound
jbe
arpl
pop
mov
adc
adc
dec
fmull
pop
mov
stc
aaa
jbe
xchg
ror
or
jns
jns
int3
out
rclb
iret
xlat
inc
mov
jne
mov
sbb
xor
jne
out
mov
add
clc
call
hlt
ds
pop
rcrl
mov
and
nop
mov
sub
int3
enter
imul
lea
mov
sbb
dec
push
loope
sub
mov
mov
fwait
add
sahf
popf
jg
dec
rolb
ret
cli
xchg
mov
mov
shrl
push
pop
insb
pushf
clc
shr
frstor
orl
mov
dec
aaa
cli
imul
pop
hlt
cs
test
inc
pop
cmpsl
sti
add
cmp
test
in
pushl
aam
js
emms
mov
add
cmp
leave
mov
xchg
lds
sbb
popa
lods
popf
dec
stos
ss
push
and
or
fcoms
pop
ds
into
int3
push
into
popa
sub
shlb
inc
pop
inc
rolb
dec
mov
pusha
lret
call
or
inc
in
jno
adc
xlat
cmpsl
stos
jno
es
jmp
inc
bound
out
out
jo
adc
shrb
pop
dec
cmp
fisttpl
int
idiv
aaa
fidivl
mov
xor
repnz
ljmp
pop
in
fnsave
pop
shrl
jne
sub
jmp
push
dec
sub
dec
inc
cli
les
testl
or
mov
enter
mov
xchg
addr16
ljmp
xlat
pop
pop
push
dec
xor
and
push
and
push
fnstsw
mov
and
add
imul
orl
cltd
repnz
addr16
dec
or
pop
fs
mov
cmpsb
adc
rol
push
in
ljmp
mov
mov
test
sub
in
or
sahf
pop
inc
lret
aas
sahf
jne
std
insl
sbb
pusha
mov
add
jmp
sub
cli
sahf
mov
mov
cmp
push
daa
inc
loopne
cmp
aam
cmpsb
cli
pop
fidivl
push
xor
adc
ret
repz
jecxz,pn
aas
sbb
dec
aad
bound
jg
out
mov
jae
adcb
inc
loop
aas
fs
mov
flds
cmpsl
shlb
stos
mov
sbb
or
xchg
cli
xor
xor
xor
sahf
mov
adcl
mov
js
push
pop
aad
and
push
cmp
test
pop
insb
addr16
sbb
ret
xor
aam
or
je
repz
aam
je
dec
xchg
adc
test
stos
xor
and
cs
xlat
or
enter
sahf
sub
xchg
dec
lcall
sbb
std
mov
dec
lods
sub
fstl
imul
and
and
imul
pop
and
je
push
push
mov
mov
or
adc
cs
loopne
rcrl
xor
cmp
pop
imul
cwtl
scas
and
ficompl
xrelease
fs
imull
test
imul
add
sbbb
stos
mov
inc
addr16
lcall
xchg
cmpsl
cmc
xchg
test
insb
cmc
mov
out
sbb
mov
test
movsb
push
push
mov
cs
add
xchg
lods
xor
out
ds
cwtl
je
add
shlb
minps
pop
add
bound
cmp
loopne
dec
dec
adc
push
cwtl
outsb
cmp
xor
mov
icebp
imul
push
push
orb
jo
jl
or
push
mov
push
push
xchg
mov
ret
and
sub
add
jge
and
imul
fmull
inc
mov
and
xchg
mov
mov
fcomps
cmp
sahf
dec
cmp
and
mov
mov
push
inc
jno
cld
pop
ret
mov
xchg
or
icebp
aad
sti
test
push
out
fcomps
fcmovnb
add
loope
sarb
fucomi
xchg
clc
dec
sbb
mov
cmp
cs
cmp
jne
sbb
mov
scas
dec
push
jmp
int
cmp
ss
xchg
paddusb
rorl
lods
mov
dec
push
aas
inc
pop
jns
xlat
nop
push
pop
or
and
rclb
mov
in
adc
imul
pop
push
inc
mov
adc
push
fsts
mov
jnp
por
pop
xchg
add
sub
xor
pusha
inc
cli
scas
in
push
inc
mov
mov
inc
ret
clc
shrb
and
pop
push
repz
push
loope
sbb
sub
sub
dec
fimull
and
mov
sub
loop
sub
jbe
sbb
xor
stos
enter
push
cmp
mov
mov
inc
mov
lcall
xchg
mov
xchg
fwait
xor
cmpsl
insl
adc
ja
sub
mov
lret
loop
lahf
mov
mov
movsl
fidivs
or
xchg
xchg
xchg
mull
ljmp
out
push
pop
jmp
loopne
fnstsw
pop
lock
dec
inc
cmpsb
sahf
or
push
mov
testl
loope
xor
jae
data16
inc
mov
adc
jno
outsb
outsl
arpl
pop
cltd
add
mov
sti
insb
xchg
pushf
lods
inc
enter
cmpsb
adc
stos
push
mov
inc
mov
xlat
fisttps
ds
jo
add
or
gs
pop
push
inc
test
fists
enter
xchg
jns
jp
push
adc
les
or
repnz
aas
jo
dec
mov
jl
movsl
lds
cli
lret
add
ds
dec
fidivrs
jmp
cmp
lods
and
cwtl
push
dec
fisttpl
mov
ds
pop
adc
mov
js
mov
nop
inc
pop
and
add
xlat
jle
hlt
in
push
scas
mov
jecxz
ret
xchg
popf
cmp
sub
notl
cmpsl
aaa
pop
lds
int
cmp
push
aas
sbb
fmuls
adc
jno
jo
clc
sbb
jbe
pop
sbb
sub
scas
inc
or
mov
inc
es
movsl
cmp
mov
insb
movsl
cs
or
fdivl
mov
cld
or
enter
mov
fnstsw
and
sti
pop
imul
repnz
les
mov
or
push
daa
xchg
sub
mov
mov
pop
sub
pop
mov
xor
enter
rorb
inc
cltd
add
and
rol
cmp
jl
repz
scas
adc
push
pop
movb
mov
stc
xor
inc
sbb
sub
inc
jne
pop
inc
jp
mov
or
lods
test
sbb
aam
jl
push
xor
mov
cli
cmp
pop
mov
add
hlt
sub
cltd
and
cli
sti
xchg
cltd
shl
bound
dec
sbb
outsl
pop
dec
cmp
fs
xchg
iret
or
add
add
or
xor
iret
and
hlt
or
mov
shlb
inc
dec
pop
cltd
and
xor
jb
leave
fdivr
mov
subb
repnz
out
inc
adc
and
sarl
pushf
mov
push
dec
mov
xchg
adc
mov
sub
mov
push
pop
cmc
js
loope
adc
fcmovnbe
cmpsl
repnz
and
jg
mov
cmp
fcoms
adc
fsubp
pusha
arpl
test
orb
push
mov
fwait
jb
arpl
into
imul
les
orb
lds
mov
outsb
in
jne
inc
jns
push
push
sbb
call
and
lds
lock
adcb
cmpsl
xor
fiaddl
sub
xor
fwait
sbb
fwait
pop
or
pop
lahf
mov
add
pop
sbb
mov
movsb
ret
mov
add
movsb
pop
and
outsl
adc
stos
mov
out
ja
imul
mov
cltd
sti
dec
shll
das
ja
cs
icebp
popf
adc
mov
stos
dec
shlb
dec
push
std
and
pop
xchg
clc
je
push
fcmovne
aad
sbb
xchg
shrb
push
loop
or
or
scas
lret
in
shlb
mov
adc
mov
push
push
sbb
lock
adc
call
insb
push
mov
in
andb
sti
xlat
cmpsl
mov
xchg
xchg
test
addr16
pop
add
jno
mov
sarb
pop
pop
sub
es
lret
add
pop
xchg
mov
pop
aad
adc
mov
add
arpl
xchg
cmp
pop
loop
pop
pop
push
aaa
adc
xor
xor
mov
hlt
push
sbb
loope
inc
pop
adc
in
adc
test
xchg
cmp
aad
cmp
push
dec
ljmp
fisttpl
fsubrp
push
push
stos
fld
aad
loope
xor
dec
out
enter
ljmp
mov
or
sbb
push
lods
xlat
stc
and
out
repnz
repnz
mov
jecxz
mov
pushf
mov
or
push
pop
cli
and
cwtl
sbb
xor
lea
or
add
stos
or
jl
adc
pop
scas
fwait
es
inc
mov
out
push
lret
inc
sbbb
leave
cmpsb
jo
or
mov
pop
adc
or
fnstsw
shrl
movsl
push
or
jb
sbbb
cmc
es
inc
fwait
mov
loope
fadds
cmp
icebp
or
xor
test
pop
repz
inc
xor
jae
pop
pop
mov
mov
cmp
xor
cltd
clc
das
sub
std
out
movsb
inc
ss
sbbl
clc
sti
int
sub
arpl
fsubs
xchg
in
jnp
mov
pop
adc
lods
add
sahf
movsl
xor
ja
or
fsubs
cmp
push
mov
jmp
push
inc
in
sub
or
pop
mov
push
inc
add
cmp
clc
mov
out
rorl
rcrb
fsubp
jp
sbbb
aam
xor
movsl
cltd
into
or
pushf
inc
jmp
std
inc
dec
loop
mov
rorl
cmp
cmp
repnz
lahf
imul
in
or
lock
xchg
aas
repnz
inc
xor
xlat
jp
inc
push
adcb
sub
jecxz
or
mov
mov
and
jge
dec
mov
xchg
lahf
add
inc
imul
movl
lahf
mov
inc
xchg
mov
sbb
les
add
xchg
jae
fdivrl
jne
mov
test
mov
fistpll
add
dec
inc
push
xchg
je
cmc
fdecstp
dec
xchg
mov
or
adcb
call
push
rorb
pop
test
ds
fsts
insb
loopne
addb
jne
adc
jmp
xor
js
ja
and
sbbb
call
mov
insb
fldl
imul
sbb
mov
fwait
das
lahf
fwait
lea
xchg
gs
inc
addr16
push
pop
aaa
mov
data16
ud2
jo
fs
ret
sub
cmp
out
scas
idivl
out
rorb
pop
sbb
test
xorl
insb
mov
addl
push
stos
or
pop
orl
pop
or
cmp
cmp
jne
push
sub
cld
pop
jle
scas
fmul
cmpsl
mov
push
mov
add
ror
pop
adc
mov
stc
jnp
psadbw
fldenv
stc
dec
or
ret
sub
int3
pop
adc
xchg
lea
stos
hlt
sub
lock
pop
pop
cmp
insb
mov
jo
insb
mov
push
jns
jl
ret
mov
clc
addr16
ja
stos
popa
je
mov
mov
xlat
mov
sub
pcmpeqb
inc
pop
aam
mov
push
fisubrl
rcrl
dec
pushl
dec
daa
rol
mov
jb
loop
xchg
xchg
push
xchg
dec
stos
test
cmpsb
bound
push
cmp
fbld
aad
pop
fs
fldcw
testl
add
push
fists
int
dec
dec
cmp
push
insl
mov
pop
xor
sti
loope
dec
adc
jnp
xchg
xchg
mov
sbb
pusha
testb
add
pop
fimull
sub
and
in
cmp
cld
pop
pushf
movb
hlt
push
sbb
mov
add
fucomip
ficompl
or
ror
jne
mov
cwtl
pop
and
out
jmp
mov
scas
shll
jne
xor
xor
int3
mov
xlat
in
fildl
outsl
cmc
or
cmc
bound
faddl
adc
or
stos
inc
arpl
lock
lock
adc
imul
imul
fldenv
inc
push
xorl
cli
lea
imul
aad
mov
iret
mov
div
jbe
mov
and
lcall
sub
xlat
and
lock
xchg
mov
push
ret
mov
popa
outsl
jecxz
adc
add
jns
lods
aaa
add
out
dec
inc
mov
xor
aaa
push
xor
sub
push
xchg
lcall
loopne
adc
test
sbb
or
rcll
sbb
jne
fmuls
lock
addr16
inc
call
push
sub
int
cld
inc
cmpsb
ja
out
movsb
xchg
arpl
out
imul
xchg
add
lcall
jg
and
dec
mov
xor
xchg
pop
pop
andb
ret
cmp
movsl
outsb
mov
xchg
fnsave
inc
lock
push
pop
imul
out
inc
loope
dec
xor
mov
and
push
imul
je
in
bound
cmp
out
dec
test
xchg
rolb
cltd
mov
into
sub
push
cmp
dec
repnz
cmpl
inc
add
out
rcll
ror
xor
or
in
ja
push
mov
fisubs
jmp
push
or
mov
xchg
jbe
and
pop
mov
test
fdivrl
cmp
pop
push
popl
pop
testb
push
xchg
loop
xor
dec
scas
in
addb
add
jp
fdiv
fldcw
aad
sbb
idiv
iret
sbb
and
ret
sbb
loope
scas
loope
or
lods
loop
mov
mov
push
sub
cmp
lret
sub
and
mov
jg
cmp
inc
lahf
push
lds
cmp
push
mov
loopne
lcall
sub
mov
push
jecxz
lods
comiss
xchg
lret
push
mov
shrb
shlb
pushf
inc
mov
xorl
shl
jl
or
and
and
imul
jae
ja
mov
mov
iret
dec
sbb
inc
cs
cmp
filds
mov
test
mov
dec
aaa
jns
xor
push
es
sahf
or
jno
into
das
out
subb
pop
mov
dec
sbb
fs
bound
xor
add
insl
sarb
test
mov
pushl
jl
fidivl
and
pop
roll
mov
arpl
inc
and
add
mov
inc
sbb
pushf
fcoms
xor
out
js
sbb
inc
rcrb
cltd
movsl
sub
fdiv
or
imul
repnz
nop
fisttps
cwtl
mov
xchg
in
scas
loopne
mov
movsl
push
lods
movsb
inc
xor
push
jecxz
cli
imul
fists
in
imul
bound
dec
lcall
aam
sar
push
jb
mov
dec
sub
mov
mov
mov
xor
push
arpl
mov
add
in
inc
into
mov
xchg
cmp
insb
fdivl
cmp
enter
aas
sub
js
out
clc
aaa
jp
sbb
loop
mov
loopne
insl
aaa
mov
pop
cmpsb
pop
out
mov
mov
xor
ss
mov
arpl
add
jp
aam
ljmp
out
and
fisubrl
leave
rolb
push
into
mov
sbb
mov
push
adc
mov
cli
lock
aas
cmp
and
inc
flds
and
fdiv
scas
push
dec
or
mov
xor
push
fs
sbb
loop
insb
mov
push
mov
pop
add
cmp
cmpsb
rcr
sub
and
or
adc
scas
sbb
popa
inc
cmp
cltd
sub
xor
dec
fcmovnu
decl
adc
dec
jnp
or
pop
andl
popf
mov
cmpsl
lods
aad
addr16
sbb
jns
mov
hlt
dec
or
sar
push
dec
aaa
mov
lret
xchg
push
xchg
imul
or
cmp
cs
sub
aam
xchg
dec
mov
jecxz
xchg
imull
jle
lahf
cmp
mov
push
xchg
jge
ret
add
push
push
bound
in
out
test
or
mov
divb
mov
xor
sbb
mov
rcrb
mov
pop
cld
xchg
cmp
sbb
shll
push
add
add
mov
enter
xchg
xor
xchg
dec
test
aad
lahf
pop
call
sub
push
adc
out
pop
cmc
aam
hlt
inc
int3
and
push
test
mov
xchg
or
call
jecxz
adc
pop
scas
enter
and
pop
imul
je
and
push
and
lret
decl
repz
pop
leave
lods
test
imul
cs
xor
into
or
jecxz
loop
lock
xchg
sub
repz
cmp
push
push
add
jg
icebp
jbe
dec
loopne
lret
daa
sub
scas
push
adc
adc
jmp
push
cwtl
or
push
loope
add
imul
testb
insl
test
dec
mov
je
pop
roll
inc
or
imul
adc
jno
lea
stos
fs
mov
cmp
sahf
adc
sub
push
xlat
cmc
xor
gs
negl
cmc
or
data16
pop
cmp
cmpsb
sub
cmp
cmp
mov
negb
adc
mov
repz
mov
push
int3
loope
push
cmpsl
cmp
add
pop
push
push
cmp
push
pop
mov
test
sub
jns
cmp
loopne
add
adc
ljmp
sbb
in
hlt
mov
into
popa
adc
jecxz
nop
pop
jo
dec
rolb
fisttps
pop
stos
xchg
cltd
or
push
cmp
pop
xchg
push
sub
mov
xchg
inc
mov
inc
cld
enter
sbbl
imul
xchg
pop
xchg
pop
addr16
test
xchg
out
dec
loop
jle
test
push
ffreep
sbb
loop
inc
mov
jns
cmp
shrl
bound
data16
inc
xchg
scas
mov
sbb
mov
sbb
cmpsb
push
xchg
or
int3
or
out
jmp
and
xor
out
sub
mov
mov
das
push
insl
insl
out
sub
seta
mov
and
insb
jne
sbb
sbb
outsl
mov
cmp
pop
cmp
pop
int3
scas
cmpsb
sbb
in
pop
lcall
push
sub
push
subb
xchg
mov
fisubl
out
xchg
adc
and
mov
fidivs
jl
dec
cs
stc
add
adc
fldcw
xchg
test
sbb
mov
push
loop
mov
fidivl
mov
je
mov
lds
fldl
mov
dec
ret
lods
sbb
repnz
stc
xchg
add
sbb
rol
sti
test
movl
pop
mov
cltd
jb
jmp
jle
push
mov
les
ret
outsl
cld
jmp
pop
test
frstor
adc
out
pop
hlt
add
test
jo
mov
imul
std
mov
daa
hlt
pop
dec
sbb
in
movsb
sbb
mov
in
into
cmp
adc
movsb
jns
dec
or
ljmp
int3
clc
push
je
mov
mov
rcrl
mov
bound
jge
push
cmp
push
mov
jmp
inc
push
int3
sarb
out
mov
sahf
orl
dec
cmp
cli
insb
cltd
add
clc
add
or
xchg
movsl
bnd
je
sbb
adc
out
jecxz
addr16
ds
mov
fdivr
rcll
sub
shll
push
mov
cmp
stc
or
xor
adc
stos
rol
clc
xchg
stc
insb
xchg
mov
fs
gs
sub
js
filds
sub
inc
push
test
add
sub
daa
xor
frstor
push
mov
xchg
cwtl
inc
cmp
cmpsb
push
int3
movsl
and
fdivrl
jg
lods
push
push
cmp
push
lret
add
cmp
xor
test
mov
mov
clc
fs
js
dec
dec
or
in
rorl
dec
inc
jo
gs
push
jb
mov
jns
and
xlat
aaa
jnp
sbb
loopne
pop
std
ret
cmpsl
outsl
rclb
adc
jno
push
add
add
cmp
lret
call
sbb
lods
subb
cs
je
jg
mov
inc
push
dec
hlt
cld
leave
and
mov
jle
cmp
mov
cmpsl
cmp
push
mov
cmp
arpl
or
sub
jmp
aas
or
shrl
test
cmp
fcoms
cmc
or
es
lock
fs
aam
int3
loopne
out
xlat
jle
pop
bnd
shlb
pop
daa
mov
fisubl
int3
cltd
cld
lods
dec
mov
pop
out
sub
adc
adc
push
fldl
cmp
jno
mov
popf
inc
ljmp
sub
mov
dec
je
push
pop
hlt
fdivrl
out
dec
add
jb
push
cmp
test
ror
and
and
mov
mov
sub
ret
fcoms
test
pop
loopne
pusha
clc
out
fsubs
and
adc
push
or
loopne
sub
cmp
sbb
jae
je
dec
dec
cmpsb
lods
out
or
fs
mov
sbb
sub
jmp
daa
adc
and
sarb
sub
push
das
idivb
push
imul
inc
pop
adc
cmpsb
cmpb
push
cltd
sbb
ja
int
mov
inc
and
cmp
dec
cld
mov
lret
arpl
imul
xor
cmp
inc
push
stos
fcmovne
cmc
pop
aas
cmp
ja
aas
cli
bound
cmpb
jns
cmp
and
mov
mov
jo
adc
mov
in
jp
bound
push
ret
fsubrl
xchg
mov
adc
repnz
stos
xchg
mov
fsubrs
inc
addr16
loopne
inc
inc
vaddpd
pop
je
jle
mov
or
daa
jne
mov
xorb
addr16
fcomps
push
inc
xor
rorb
ss
popa
out
sbb
pop
or
stc
into
mov
fidivs
das
and
fisubrl
mov
out
in
xchg
jae
pop
dec
sahf
adc
xor
shlb
repnz
ljmp
pop
in
std
mov
inc
fbld
clc
jmp
jmp
subb
imul
lock
or
fiadds
cmp
mov
fwait
xor
or
dec
push
add
nop
sub
fwait
xchg
xor
add
sub
xchg
inc
std
push
sbb
scas
daa
ja
gs
std
bound
movsl
xor
pusha
pop
ja
gs
or
or
stc
int3
sub
sub
pop
jecxz
movsl
pop
add
jge
cmp
inc
inc
ret
mov
inc
mov
and
dec
sub
loope
dec
dec
je
jle
inc
dec
ljmp
cmpxchg
mov
mov
je
pop
fisttps
cli
clc
or
pop
repnz
data16
ret
pop
cmp
mov
sub
dec
cmpsb
or
xchg
and
jg
and
jecxz
xchg
mov
lock
aaa
add
add
sub
xchg
ss
idivl
andl
cmp
dec
push
cs
sbb
mov
xor
std
dec
les
das
jmp
pop
icebp
or
lahf
clc
sbb
mov
mov
scas
loope
lea
lret
jecxz
inc
adc
xchg
fcomps
js
sub
xchg
std
clc
or
out
insl
pop
and
inc
sahf
sbb
in
imul
add
jbe
sbbb
out
inc
sbb
sub
popl
mov
mov
andb
fisttpll
jno
pop
inc
mov
in
push
xor
insl
cmpsb
inc
ret
or
push
jmp
push
dec
outsl
insl
cltd
cmp
std
cli
ror
sub
xor
adc
into
mov
lods
lea
sub
cmp
push
pop
xchg
and
lret
add
lret
dec
mov
sub
sub
lock
adc
ficoml
stc
dec
cmp
outsb
add
add
rcl
or
dec
mov
push
lods
add
adc
imul
mov
pop
sbb
pop
into
and
jbe
aaa
test
out
in
ja
push
mov
pop
cli
jae
ss
add
mov
push
pop
mov
mov
mov
or
loopne
out
or
xchg
xlat
insl
add
jl
pop
xchg
movsl
pop
test
jge
push
jmp
out
lds
dec
enter
dec
sub
push
imul
fcoml
dec
adc
rdtsc
cmc
xchg
adc
std
in
dec
test
loop
icebp
and
stos
ret
fcoml
mov
pop
shrb
push
mov
sbb
fldcw
ds
and
fwait
mov
xchg
aam
pop
or
xchg
inc
popa
sub
lods
mov
fistpl
loope
insl
xor
fistl
mov
and
sbb
fsubrs
mov
subl
lret
mov
lds
test
mov
mov
dec
jmp
pushf
rcll
int
enter
cmp
fs
div
sub
stc
lea
lahf
sarb
lods
ficomps
mov
cs
push
adc
out
out
stos
insb
cmc
push
lret
cmp
lcall
icebp
addb
pop
xor
push
rcr
inc
cs
mov
pop
cmp
mov
push
insl
pop
inc
ljmp
out
dec
stos
cmp
mov
add
ret
repnz
jge
in
xor
mov
xor
mov
pop
pop
int3
mov
mov
inc
sub
jbe
test
fidivl
lock
mov
gs
repz
push
fdivrl
push
jmp
les
arpl
in
nop
mov
or
mov
dec
cld
jp
mov
lea
mov
pop
push
dec
mov
jmp
ret
xchg
movsl
mov
lea
xchg
jle
mov
mov
and
out
out
bound
sub
sbb
insl
or
sub
jne
dec
push
pop
pushf
mov
pop
mov
in
rorb
sbb
lret
aas
add
inc
test
scas
jmp
flds
movsl
sbb
mov
ja
pop
jb
fldcw
xchg
mov
cmp
push
dec
push
pop
cmp
xchg
loope
push
xlat
aaa
roll
xchg
push
imul
rol
enter
lea
je
and
adc
pop
xchg
push
push
jl
jp
add
mov
cli
shlb
mov
jo
jmp
loope
ja
sub
mov
enter
adc
mov
int
mov
loope
cltd
out
dec
ficomps
cmc
loope
push
scas
std
outsb
shrb
xchg
push
lea
xor
test
lods
je
adc
fs
sbb
cld
adc
lea
movsl
gs
out
mov
inc
int
cmp
imull
loope
in
daa
mov
das
inc
shlb
ds
ljmp
inc
push
popf
call
decb
xchg
js
mov
adc
pusha
sarl
bound
or
pop
scas
dec
and
mov
jge
cwtl
xor
inc
mov
shll
cltd
repz
std
add
inc
cmc
jmp
pop
shl
ret
inc
dec
in
lret
mov
adc
mov
inc
leave
rcl
mov
js
cmp
std
jae
sub
xchg
cltd
pop
imul
lahf
push
dec
mov
sub
add
sub
pop
loop
dec
je
lcall
xchg
std
mov
dec
rclb
push
rol
hlt
loopne
sar
add
inc
loope
cmpl
les
dec
aad
adc
adc
push
fdivrl
sbb
lock
ljmp
adc
or
jge
lods
adc
es
into
in
call
add
xor
lods
push
mov
sti
or
leave
loop
pop
push
cltd
popf
fst
inc
inc
aad
lds
or
ja
out
pusha
push
push
mov
je
sahf
and
stos
repz
mov
cmpsl
jg
loop
xor
xchg
fmulp
hlt
in
in
dec
add
mov
fidivl
inc
insb
das
push
fldt
and
sarl
stc
js
cmc
aad
int
icebp
in
add
adc
mov
jecxz
jg
ss
pop
pop
imul
fcoms
xchg
stos
xchg
fs
insb
pop
int
loopne
add
cmp
xor
mov
insb
sbb
lods
mov
or
jg
vpmovuswb
loop
cli
in
mov
sti
std
dec
push
arpl
out
pop
push
stos
sub
out
pop
push
lret
cmc
dec
sub
dec
clc
cli
sbb
outsl
aam
loopne
lahf
in
shll
push
sub
testl
xchg
adc
loop
sub
push
js
mov
int
dec
div
stos
hlt
mov
sbb
xchg
sbb
or
js
fistl
ss
xchg
inc
jg
pop
dec
leave
loop
dec
mov
mov
add
les
adc
xchg
and
mov
push
mov
imul
pop
jecxz
pop
cli
jecxz
cmp
xor
cmp
inc
mov
inc
je
movsb
push
pop
mov
int3
and
rorb
dec
into
fsubrp
jbe
pop
divb
adc
fidivrs
inc
sub
aas
icebp
mov
int
pop
xor
sbb
loope
cmp
fidivl
data16
sbb
xor
int3
adc
push
cmp
inc
mul
fisubrs
sub
inc
cmc
dec
mov
loop
jbe
and
out
and
or
xorb
add
jne
icebp
int3
jns
add
inc
fidivl
mov
int3
clc
sbb
iret
lods
or
mov
shlb
je
aam
mov
arpl
fcomps
push
pop
cmpsb
jg
xchg
add
lods
push
sbb
mov
out
fstpt
subb
inc
stc
cmpsl
pop
scas
es
push
mov
mov
mov
lahf
inc
mov
daa
fs
xor
movsb
mov
cmp
xchg
sub
mov
test
ret
xor
inc
sbb
rclb
lret
push
jb
mov
xchg
aad
lods
ret
mov
dec
cmp
xchg
or
repnz
push
and
frstor
out
test
pop
jns,pt
js
pop
jb
pop
sti
adc
sarb
inc
dec
scas
jnp
ffreep
shlb
outsl
ret
movl
out
push
dec
mov
cmp
cmp
sub
cmpsb
mov
fidivl
cmp
movsb
jns
xor
inc
and
inc
inc
mov
flds
pop
dec
mov
sbb
sub
test
sti
cmpsl
bnd
jl
in
in
xchg
push
orb
fisubrl
fdivrl
xor
ss
push
inc
push
jne
lds
test
xor
cltd
inc
stos
in
std
stc
insb
jl
jmp
adc
jne
notb
in
sub
push
lret
and
fcomps
arpl
fsubs
lock
mov
push
mov
xchg
cmp
icebp
shlb
cmp
cltd
xchg
push
cmp
lea
fs
les
adc
rcr
or
xor
mov
xor
mov
sbb
daa
mov
out
cmp
hlt
mov
push
jle
out
std
out
mov
adc
js
in
push
xor
sub
inc
aas
xchg
enter
hlt
in
out
inc
cwtl
aam
jmp
inc
fstp
jbe
jb
jl
sbb
or
fwait
inc
sbbl
out
incb
frstor
and
adc
pop
and
lods
ret
or
push
adc
iret
push
or
in
mov
in
xlat
les
mov
cmc
call
fsub
push
std
repnz
pop
stc
ficompl
outsl
xchg
pushf
aas
mov
imul
imul
repz
mov
imul
data16
push
adc
inc
call
mov
xchg
sbb
std
xlat
cmp
lock
js
pushf
out
mov
sub
sub
mov
mov
pop
pop
pop
or
jnp
push
xor
notl
pop
insl
and
sar
mov
inc
add
or
into
out
adc
shr
iret
loopne
mov
stos
ret
pop
xor
iret
mov
daa
imull
jl,pn
mov
int
repnz
inc
bound
inc
arpl
test
fildl
xchg
outsb
mov
adc
push
pop
enter
mov
pop
mov
or
in
enter
inc
add
or
ds
test
jnp
fadds
ret
push
rclb
push
notl
or
loopne
ja
adc
inc
xchg
pop
lea
mov
xchg
aas
mov
cmpsl
loope
mov
in
xor
aad
mov
popa
push
addr16
mov
stos
xor
cmp
mov
mov
js
mov
sbb
jge
test
clc
jns
xchg
in
mov
fcompl
inc
lcall
daa
ss
sbb
inc
pushl
rorb
mov
jnp
add
mov
and
mov
mov
mov
pop
sbb
frstor
hlt
dec
jecxz
jle
adc
pop
pop
adc
xchg
lea
xchg
cmpsb
mov
sbb
add
std
cmp
inc
in
xchg
and
xchg
faddl
aam
data16
mov
outsb
mov
mov
vmovaps
out
sbb
jle
jg
push
mov
mul
loopne
lret
fwait
mov
popa
repz
fildl
sbb
loopne
lret
or
sti
lcall
or
je
push
or
out
jbe
loopne
pop
xor
stc
lahf
push
adc
mov
leave
in
jle
push
push
sub
mov
dec
imul
push
add
ret
push
lret
movsl
mov
xchg
cmc
pop
dec
mov
mov
ret
test
outsl
loopne
std
sbb
mov
cmpsl
adc
fisttpll
in
fwait
subl
fnstsw
in
mov
mov
into
jmp
roll
hlt
das
xor
adc
sbb
inc
pop
pusha
loop
xchg
cmc
xchg
dec
and
xchg
sub
sub
insb
push
imul
and
cmc
iret
xchg
and
adc
clc
bound
sbbb
xchg
outsb
xchg
mov
call
cs
sub
push
pop
mov
sub
push
rolb
sub
mov
in
out
push
jle
pop
xlat
pop
fcoml
movsb
sub
pop
inc
sub
mov
mov
call
icebp
inc
xchg
jg
enter
int
sbb
push
js
cwtl
sbbl
test
sub
dec
rclb
jp
ss
adc
test
mov
rorb
xlat
andl
adc
mov
or
notl
jl
shr
inc
and
jp
mov
rcrb
add
dec
lds
sarb
and
push
sahf
push
pusha
cli
lods
mov
push
insb
pop
sbb
sub
mov
adc
jne
xorl
xor
mov
pop
push
sbb
or
decb
inc
xchg
xchg
jmp
psllw
push
shrl
mov
xor
adc
dec
insb
sub
call
movsl
mov
notl
mov
push
in
into
xchg
mov
xchg
mov
ja
in
sbb
jo
cmp
sub
adc
push
lock
or
mov
pop
icebp
xlat
movsl
cmp
addl
adc
lock
jle
pop
rcr
ret
mov
cmpsb
test
andl
stc
pop
out
adc
push
inc
out
mov
sbb
push
fistps
adc
mov
jb
mov
rorl
adc
pop
xchg
push
daa
push
or
push
mov
fcompl
lods
shr
or
dec
stos
loopne
cltd
push
out
in
or
push
mov
cmp
cmp
addr16
inc
cli
outsb
mov
mov
stos
lods
sub
repnz
movsl
jecxz
xor
mov
mov
mov
sub
jp
stos
rcrl
aas
jmp
push
pop
mov
dec
adc
mov
and
cmp
movsb
call
push
ja
lods
mov
add
sub
jns
mov
adc
shrl
push
iret
pop
cltd
mov
push
pop
or
lods
pop
jg
xor
jo
mov
lea
cmc
push
sub
xchg
aad
or
dec
sbb
lock
or
xchg
push
mov
mov
jl
mov
xor
jl
jbe
mov
stc
dec
cmp
insl
pushf
fsubl
movsl
fdivr
xchg
loopne
xlat
dec
jmp
imull
out
scas
out
jns
jle
les
outsb
mov
dec
xor
mov
jne
jle
xor
cmpsb
hlt
addl
nop
push
add
stos
out
cmpsl
es
sti
insb
xor
mov
ljmp
or
fwait
lods
xor
or
int3
mov
sub
fwait
adc
mov
xchg
or
xchg
cmpl
push
cmp
sbb
xchg
arpl
sbb
jno
jmp
dec
xchg
cmp
int3
lcall
stos
and
sbb
fmul
push
mov
add
xor
mov
xor
daa
mov
mov
sub
mov
cmpb
sbb
xor
in
push
shl
sidtl
dec
push
aaa
push
push
cmpsb
out
add
inc
push
mov
push
sub
fdivl
sbb
lods
push
nop
hlt
lods
add
iret
dec
int3
fimull
and
cmp
sbb
js
pop
pop
ret
hlt
pop
add
out
jl
test
insl
sub
sbb
insb
fsubrs
mov
pusha
xor
xor
or
pop
cli
out
add
loope
out
movsb
repz
push
repnz
pop
dec
cmpsb
cmp
lods
mov
mov
sub
insl
xchg
jmp
movsl
push
sub
sub
push
sti
mulb
xchg
sahf
xor
ds
lea
scas
in
dec
in
clc
mov
jecxz
sub
fisubrl
loopne
andb
mov
clc
stos
imul
scas
xchg
sub
and
push
pop
popf
xchg
fstpl
fadds
mov
loope
jmp
sub
xor
cmp
mov
pop
jg
and
scas
outsb
leave
sub
dec
or
std
leave
lds
into
mov
outsl
mov
adc
mov
cmp
daa
scas
mov
sub
ret
jb
jb
test
fdiv
jl
int
fstpl
push
dec
ljmp
xlat
outsl
or
push
enter
lock
and
adc
loopne
cmpb
icebp
sahf
push
int3
jne
lods
cwtl
or
dec
aaa
daa
les
adc
mov
jne
hlt
mov
sub
mov
mov
or
fldt
repnz
fs
fidivrl
xor
pop
lods
push
pop
mov
out
aad
mov
push
int
or
xor
movsb
push
cwtl
jl
es
rorb
jbe
leave
out
sbbl
outsl
push
imul
in
xchg
jmp
mov
pop
mov
and
xor
push
pop
cmpsb
xchg
pop
in
inc
pop
push
shll
stos
mov
fsubr
pop
add
ja
loopne
repnz
mov
dec
in
in
jnp
xor
add
dec
pop
ljmp
mov
jmp
ret
sub
jne
repnz
jmp
mov
xlat
nop
or
std
xchg
mov
dec
jecxz
lcall
jecxz
pop
xchg
add
jnp
mov
mov
ss
lds
rcr
jae
ljmp
jmp
and
cltd
push
scas
fcoml
jb
outsb
mov
xchg
lea
mov
and
pop
sbb
xor
jecxz
loope
aad
push
cmp
jns
mov
push
push
cmc
scas
jle
jl
shl
clc
xchg
mov
inc
sbb
std
mov
and
add
cltd
jle
out
aas
sbb
mov
lods
dec
push
icebp
aas
xchg
inc
cmpsb
mov
mov
pop
push
push
gs
int
pop
jnp
dec
lahf
lods
movsl
mov
xor
divb
push
lcall
push
ss
pushaw
imul
fistps
addl
stos
mov
enter
dec
xchg
loope
decb
cmc
or
out
and
fstpt
lock
in
xor
jo
push
jae
rcrb
sbb
jp
aas
jne
push
xlat
sub
lds
leave
push
jns
addr16
push
aam
adc
fwait
xor
inc
push
addr16
inc
jmp
scas
push
mov
sbb
push
mov
jae
mov
ljmp
mov
xor
stos
sbb
mov
sbb
push
pushf
loop
add
dec
cwtl
adc
jne
jmp
cltd
ja
test
xchg
sub
mov
dec
in
lret
gs
jnp
ss
mov
fpatan
hlt
pop
stos
cmp
mov
jmp
test
cs
jmp
jb
sub
push
lock
add
adc
fnstsw
jnp
mov
mov
push
clc
xchg
add
je
movsb
cmpb
and
fldenv
dec
cmpsl
push
pop
pop
push
pop
mov
es
xchg
jne
dec
ja
inc
xchg
sti
mov
inc
mov
daa
add
pop
pushf
xchg
cmp
gs
and
iret
xchg
in
out
jg
pop
outsl
jp
cmc
mov
dec
sub
cld
pop
cmp
dec
xor
testb
dec
jp
push
pop
mov
xor
pop
pop
or
xchg
push
aam
aas
lods
in
adc
int3
xor
and
lcall
cmp
insl
out
cmp
outsb
rcrl
icebp
sub
arpl
orb
ss
addr16
in
jl
add
mov
mov
or
and
cld
ja
out
movsb
lcall
repnz
and
shrl
xor
stos
in
mov
shll
lahf
inc
mov
sbb
and
mov
sub
stos
xchg
push
adc
sub
call
add
adc
fucomp
shl
or
inc
lock
mov
test
sti
leave
sbb
xor
out
ret
loopne
lods
dec
pop
imul
mov
dec
pop
in
pop
jnp
out
xlat
xchg
es
jp
mov
repnz
add
out
fs
sbb
mov
fistps
rcll
and
inc
mov
orb
dec
and
sbb
sbb
mov
dec
outsb
stos
dec
imul
dec
icebp
jne
popf
mov
cmp
push
enter
xchg
jae
sub
int
or
dec
or
pusha
sub
out
fsubs
dec
out
fs
pop
mov
aam
pop
mov
push
gs
lcall
sub
pop
test
rcrl
ljmp
adc
and
xor
xchg
daa
pop
cmp
fstpt
mov
icebp
push
push
ss
gs
push
std
lret
arpl
sbb
out
pop
and
push
fdivrl
clc
or
in
mov
rolb
mov
call
iret
sub
call
xor
je
int3
cmp
inc
mov
jne
dec
shll
mov
adc
xor
pop
jge
xor
jmp
and
and
push
push
push
mov
adc
icebp
and
sahf
or
insb
or
mov
dec
loopne
in
dec
xor
cmpl
std
add
add
jae
insb
or
pop
popa
fstps
pop
xchg
or
pusha
jbe
mov
xchg
mov
ss
and
sub
cmp
adc
or
incl
dec
shlb
arpl
push
addl
cltd
mov
adc
pusha
sahf
and
cmc
sub
in
inc
addb
mov
test
pusha
dec
push
ja
fisubrs
test
shrb
daa
mov
dec
je
dec
adc
sub
ret
ss
cmpsl
js
dec
lret
test
lahf
call
lret
adc
imul
call
je
das
mov
shrb
cmp
loope
jg
inc
mov
and
repnz
daa
cmp
push
lods
je
into
jg
fdivs
in
es
cltd
xchg
in
pop
outsb
or
cli
jbe
inc
fnstsw
pop
out
cmc
js
popa
neg
mov
mov
pop
adc
push
aaa
sbb
dec
pop
enter
inc
insl
out
xor
xchg
notb
nop
loopne
jnp
sti
imul
fbld
or
repz
lret
xchg
out
aam
pop
dec
ja
sbb
lods
adc
mov
push
mov
lahf
push
bnd
dec
into
test
push
std
inc
fisubl
flds
jle
hlt
enter
loopne
test
jo
inc
imul
rolb
out
push
bound
dec
inc
gs
inc
sbb
mov
mov
lahf
imul
cmp
roll
xor
scas
jmp
xchg
xchg
outsb
in
mov
insb
sub
mov
out
nop
and
push
cltd
in
out
pop
cmp
test
scas
arpl
les
cmp
sti
sub
sub
fisubs
inc
ja
mov
or
jecxz
mov
add
loopne
lods
and
fstpl
test
imul
mov
mov
mov
aam
outsl
bound
orl
push
ljmp
imul
or
lods
jmp
aad
call
nop
dec
push
cmp
xchg
mov
outsb
insl
pop
repnz
popw
incb
sahf
pop
adc
pop
fwait
enter
or
pushf
cld
cld
daa
jae
jg
fcmovu
and
mov
mov
mov
mov
out
mov
flds
lcallw
inc
mov
pop
dec
dec
mov
jecxz
out
xchg
mov
lds
mov
jmp
add
mov
mov
sbb
clc
imul
imul
sar
popa
push
sbb
jmp
jne
xchg
xor
cwtl
popa
scas
insl
cmpsb
jnp
jg
popf
add
xor
inc
cld
xchg
addr16
jmp
jae
hlt
sbb
insl
jp
lret
out
sbb
fisttps
cwtl
ret
sbb
dec
aas
sub
push
imul
mov
mov
push
dec
shlb
cli
adc
and
pushf
xor
mov
enter
sarl
idivl
aaa
adc
out
cmp
std
add
cmpsl
pop
hlt
inc
dec
adc
mov
sbb
sub
lock
movsb
add
fcmove
hlt
cmc
xor
out
fsubrs
out
xchg
xorb
dec
fistpll
push
sbb
mov
push
mov
in
dec
push
jmp
call
push
jmp
cmpsb
jo
mov
hlt
mov
test
pop
nop
push
sbb
adc
orb
pop
das
push
lock
fsubs
cli
push
test
imul
cld
fisubrl
call
sbb
sub
push
lea
and
ficomps
scas
int3
and
test
movsl
icebp
add
push
shrl
out
imul
rol
iret
xlat
shrb
call
imul
mov
dec
mov
xchg
lahf
aam
dec
divl
add
inc
out
test
fdivrs
ljmp
sbb
shrl
mov
add
cmpsb
jnp
add
mov
xchg
fadds
repnz
push
inc
ss
iret
mov
mov
inc
and
or
out
enter
xchg
pop
aam
push
icebp
dec
std
or
ret
movsb
mulb
dec
in
push
adc
mov
pop
scas
sbbl
fldenv
xlat
push
or
mov
cmc
pop
sbb
fdivs
rclb
dec
push
clc
sbb
test
subl
scas
or
aam
ljmp
les
scas
fdiv
ljmp
add
push
and
push
pop
push
lods
jno
inc
lea
dec
cmpsb
cmc
fwait
cli
icebp
inc
fimuls
fcompl
sub
scas
int3
mov
loopne
jo
mov
and
nop
jmp
movsl
test
xchg
outsb
int3
xchg
mov
cli
jns
lcall
inc
dec
push
test
add
in
cmpsl
imul
fsubrl
fstpt
jae
aaa
push
xor
jno
call
mov
pop
aad
mov
mov
adc
pop
pop
sub
mov
loopne
and
add
sbb
and
movsl
js
cmpsb
add
dec
mov
push
cmp
xchg
bound
shll
sub
inc
loop
mov
push
jle
lret
movsl
sbb
pop
mov
stos
aad
jg
cmp
mov
in
cmpsl
roll
fs
int3
cmpsb
push
dec
push
inc
mov
sub
xor
call
xchg
imul
scas
mov
fs
shll
push
lds
incb
inc
out
ss
mov
ss
dec
inc
popa
out
xor
jg
pusha
loope
cmc
xchg
iret
fldl
xor
mov
fwait
mov
dec
mov
loop
arpl
sbb
add
stos
pusha
cli
fwait
cltd
out
add
repnz
sub
mov
ja
std
mov
cmp
test
sub
imul
test
jnp
cmp
add
lahf
push
or
pop
and
dec
push
shl
mov
and
sub
mov
mov
sub
cmp
popa
mov
or
push
dec
jo
xchg
in
cmp
ret
lret
push
leave
je
stos
imulb
cmp
scas
scas
cli
cmp
insl
dec
rorl
mov
sbb
mov
mov
icebp
adc
xchg
mov
and
sahf
inc
jo
mov
cmp
mov
movsb
dec
push
sbb
cmp
cmc
data16
xor
fs
fidivl
insb
mov
test
or
mov
mov
mov
adc
leave
bound
fldenv
cmp
pop
mov
aad
clc
mov
daa
dec
adc
inc
push
pop
pop
pop
cwtl
sub
roll
out
adc
inc
cmp
outsb
push
lods
xchg
pop
std
cmpsl
loopw
mov
sbb
push
int
aad
xchg
xchg
inc
mov
mov
test
push
dec
cmp
cmpsb
inc
mov
jae
pop
jnp
push
xchg
enter
arpl
pop
dec
aas
repz
lods
jb
das
jg
sbb
and
fisttpll
cmp
stc
jecxz
push
lret
loopne
jg
frstor
pop
pcmpeqw
icebp
pop
jecxz
jne
and
adc
fs
rorl
sbb
add
fs
insl
loopne
or
pop
or
or
mov
mov
aam
fcomps
test
sbb
mov
pop
mov
cwtl
sub
dec
xchg
xchg
imul
movsb
jnp
dec
mov
mov
jae
adc
stos
add
leave
mov
iret
mov
lcall
popa
lret
fadds
jae
inc
push
push
and
js
sub
scas
repz
add
and
mov
stos
daa
ljmp
mov
int
mov
fwait
call
into
adc
jno
xor
cmp
clc
mov
push
rcrl
sub
negl
cltd
dec
ficoml
test
sti
push
mov
in
cmpl
xor
lret
stc
sahf
pop
sub
call
pop
sbb
pop
xchg
cwtl
sub
mov
xor
xor
push
and
dec
pop
cs
fdivrs
dec
into
loop
sub
jne
cmp
mov
shll
mov
popf
mov
jl
sahf
mov
mov
jmp
pop
sbb
xor
lahf
dec
or
mov
jbe
xor
imul
adc
aaa
xchg
add
xor
jl
add
mov
sbb
pop
lods
mov
push
ret
aad
pop
cmp
add
lret
cmp
mov
fwait
imul
sahf
push
je
aas
movsl
imul
xchg
fbstp
mov
jo
movsl
out
pop
mov
mov
mov
mov
mov
mov
sbb
movsl
jl
add
rcr
push
ret
sbb
or
add
pushf
inc
sub
addr16
insl
pop
out
or
sub
pop
fidivrl
je
aaa
nop
imul
test
xor
fsubl
lods
push
dec
gs
loop
jns
jge
cmc
mov
notl
dec
inc
pop
inc
movsl
sub
sub
jl
jo
aas
insb
popf
fsubrl
lds
jl
test
pop
fnsave
push
mov
enter
xchg
aaa
adc
js
jge
outsb
addb
xchg
push
pop
in
repz
mov
rclb
adc
push
lds
lock
test
xchg
mov
leave
lret
insl
xor
aas
and
sub
or
or
cmp
in
add
sbb
rorl
push
mov
jmp
jbe
mov
mov
xchg
lock
outsb
bound
in
xor
test
fnsave
clc
lds
cmp
mov
enter
jo
mov
ljmp
stos
xor
mov
adc
jg
aaa
cld
shrb
test
lcall
mov
cwtl
out
mov
xchg
push
pop
inc
pop
pop
jns
push
push
stos
inc
xchg
and
mov
sub
or
adc
lock
frstor
iret
test
cltd
and
adc
sub
xchg
pop
push
mov
or
dec
pop
inc
cltd
mov
push
lea
jge
mull
jecxz
jae
mov
adc
ds
loope
cmp
push
mov
xchg
add
test
ljmp
xor
or
cmc
mov
ja
xchg
jno
pmuludq
xor
incb
mov
mov
lods
jecxz
mov
pop
sbb
mov
push
js
lds
sbb
xchg
cs
ret
jl
ljmp
sub
mov
xchg
cli
sub
fmuls
inc
jo
push
rol
and
push
jmp
and
addr16
pop
adc
push
int3
fdivl
nop
jg
arpl
mov
jno
out
mov
mov
add
jae
stc
sub
repnz
sub
icebp
inc
jecxz
cld
mov
mov
ret
mov
cmp
into
adc
xchg
ljmp
ror
hlt
mov
jb
fistps
xlat
sub
xchg
int3
movsl
push
jne
jne
xchg
cmp
and
shlb
addr16
shrl
cmp
jmp
inc
enter
loopne
push
sbbl
jno
or
adc
ret
mov
jp
jno
xchg
add
dec
mov
fldcw
jne
sbb
or
mov
fcom
addr16
xchg
pop
outsb
jae
cli
or
scas
in
cwtl
mov
js
add
mov
imul
jg
fstpt
inc
jb
negl
sbb
cmpsb
xor
lret
fcoml
stc
jp
pop
mov
or
xor
ret
push
and
jae
ret
fstpl
jne
nop
pusha
in
mov
ljmp
leave
or
ss
sbb
jle
mov
mov
cltd
rcrl
filds
int
out
xor
jbe
roll
movsb
fidivrs
je
enter
fstpl
mov
push
dec
adc
xchg
lret
nop
lret
in
shrb
aas
ds
push
outsb
rorl
cld
std
dec
fdivrs
cmp
sbb
pushfw
jb
inc
jecxz
push
mov
dec
aaa
gs
or
xchg
iret
cwtl
pop
jle
adc
js
jb
hlt
mov
mov
xchg
dec
fdiv
sti
adc
js
and
dec
push
je
sbb
test
inc
pop
mov
outsb
arpl
pop
test
xchg
mov
in
out
or
mov
sbb
adc
jb
sbb
or
mov
fisubl
shl
xor
push
lret
cmc
into
fsubrl
inc
mov
dec
and
sub
mov
fdivl
sti
or
lods
fsubl
mov
ret
pop
stc
pop
into
int
add
in
jno
repnz
adc
les
xchg
or
outsl
stos
ret
shll
jb
push
push
mov
lds
je
mov
je
sub
add
and
cmc
call
mov
ret
inc
lret
push
dec
stos
pusha
jl
notb
dec
dec
loope
sarb
cltd
imul
adc
add
pop
cltd
lods
inc
push
subl
outsb
ficomps
xlat
cmp
xchg
outsb
out
fsubrs
mov
add
or
fnsave
push
jo
int3
pop
cmpb
xchg
ficoml
test
adc
dec
dec
push
xor
fcompl
leave
loop
int
and
addr16
fsubs
inc
in
sarl
and
push
dec
adc
leave
es
shr
lds
sub
gs
pop
xor
imulb
fcomp
imul
and
mov
cmc
aam
adc
out
call
add
mov
je
inc
push
loope
mov
sub
aad
bound
in
xchg
push
jae
fistl
jg
subl
pop
pop
sub
xchg
cmp
mov
add
fistl
movsb
int3
adc
sbb
mov
and
sbb
push
adcl
mov
dec
std
andl
test
pop
or
mov
sbb
push
push
test
inc
jbe
jmp
icebp
inc
and
push
xor
imul
and
fstpl
lahf
mov
adc
mov
movsl
pop
or
and
xchg
xchg
mov
arpl
lret
jnp
enter
and
or
clc
dec
movsb
pop
dec
fsts
dec
jecxz
mov
and
add
push
movsl
mov
arpl
sbbl
mov
insb
aaa
outsl
lock
mov
sti
in
addb
aaa
stos
aas
jae
rcr
addw
push
xchg
stos
repz
jp
scas
or
adc
aas
jne
xor
mov
or
sbb
fbld
inc
in
test
xchg
lock
xchg
negl
ret
outsb
xor
cltd
out
and
push
jmp
dec
mov
mov
and
cli
les
xchg
mov
pop
mull
push
lods
aad
jbe
ror
xchg
leave
sbb
pop
push
push
mov
dec
cmpl
arpl
mov
adc
aaa
insl
jb
xor
dec
add
lcall
lock
push
cwtl
or
xor
mov
loope
movsl
sub
sbb
sub
mov
mov
cli
loopne
lea
mov
fmuls
sbb
xor
out
pop
adc
stos
adc
jg
scas
js
add
pop
mov
fsubp
daa
mov
test
add
daa
mov
loope
jecxz
pop
pop
sar
cmp
lret
lds
nop
notl
fidivrs
jbe
push
pop
fsubrs
jnp
outsb
and
ja
lock
stc
les
pop
test
stos
imul
aaa
lcall
mov
push
and
test
ret
jbe
adc
mov
aas
fwait
lds
push
lock
aas
mov
pop
sub
adc
mov
std
adc
outsl
aaa
inc
xor
loopne
imul
sub
xlat
push
stos
repz
push
das
push
lret
movsb
stc
push
arpl
xor
adc
fnstenv
repz
std
sbb
cmpb
fwait
jo
aad
jp
ja
add
inc
sub
lods
xchg
or
pop
jmp
jmp
xchg
push
xchg
popf
dec
subl
xor
js
jno
lahf
adc
xor
cmc
enter
mov
xchg
cmc
out
dec
and
push
mov
sbb
mov
int
mov
mov
adc
or
imul
mov
out
inc
ret
js
push
cmc
movsl
fsub
mov
test
mov
shr
or
bound
mov
in
add
mov
repz
mov
inc
into
xchg
mov
icebp
out
mull
aam
jnp
dec
lret
in
test
in
sub
dec
jmp
adc
fwait
dec
xchg
std
cwtl
aad
mov
xor
lret
stos
adc
sbb
lcall
mov
pop
pop
xchg
stos
ds
pop
jae
sbb
and
xor
nop
add
icebp
outsb
shll
push
mov
hlt
popf
add
sub
mov
sbb
xchg
jo
jg
dec
lret
sub
xchg
mov
sbb
mov
xchg
inc
ja
data16
add
jl
lods
out
xchg
ja
pop
push
adc
mov
cmpsl
roll
pop
push
lret
or
cmp
fimull
add
sbb
push
jg
inc
pusha
xor
jne
mov
es
mov
mov
insb
lret
rol
mov
int
jmp
cs
ret
and
insl
xchg
xor
hlt
mov
mov
insb
sbb
imul
xor
cmovo
cmp
sub
stos
mov
ret
inc
xchg
lahf
lods
dec
aas
out
imul
xchg
add
movsb
test
push
adc
sub
ss
pop
mov
les
loopne
and
fldcw
fwait
cmp
pop
sbb
rcrb
dec
lea
in
push
xchg
push
pop
std
dec
fnstenv
out
es
into
in
sbb
popa
icebp
sbb
imul
divb
int3
hlt
fmull
repz
cmpsl
mov
pop
notb
sbbl
pop
sbb
adc
xor
int
fisttpll
fldcw
mov
ss
mov
mov
shlb
adc
xchg
dec
popa
mov
ret
test
in
or
add
popa
sub
cmp
xchg
and
test
push
mov
nop
mov
cltd
sti
inc
cltd
jne
adc
rcrb
jno
xchg
in
js
imul
fwait
jnp
enter
cs
js
sbb
xor
fs
add
mov
aam
jg
push
and
mov
stos
xlat
lock
add
icebp
add
and
dec
add
repz
inc
mov
in
xor
add
xchg
and
cli
jbe
arpl
jns
fcmovne
or
jae
push
testl
pop
cltd
jno
sbb
out
xchg
dec
push
std
push
push
mov
rol
and
dec
mov
mov
addr16
cmpw
mov
das
push
gs
hlt
jae
scas
mov
sbb
aaa
and
dec
sub
mov
push
cmp
mov
push
aam
aam
sbb
jecxz
mov
mov
mulps
pop
iret
ljmp
push
je
ljmp
push
adc
cli
adc
xchg
lret
ret
adc
out
mov
xchg
pusha
mov
push
sub
cli
enter
inc
fiadds
nop
sbb
or
mov
and
rclb
push
stos
cmpsl
xor
enter
jae
pop
add
pop
lods
sarl
add
jb
sahf
inc
xor
fs
leave
pusha
fwait
xchg
and
mov
cs
push
cmpsb
sub
int3
cmp
sbb
testl
inc
scas
inc
leave
int
and
ret
hlt
push
jle
in
lcall
cmpsb
test
loope
dec
pop
int
ss
sub
cltd
pop
pop
dec
fidivl
xor
es
mov
and
sti
ss
xchg
lret
mov
lcall
cmp
cmp
mov
inc
es
aad
adc
div
dec
ror
rcll
push
in
xorb
mov
scas
and
lods
in
mov
insb
jo
sbb
inc
imul
sbb
pop
dec
xchg
jg
sbb
in
movsl
movsl
lahf
xor
mov
adc
lods
lock
mov
mov
add
mov
sbb
xor
or
mov
ret
sbb
pop
push
sbb
ret
or
pop
mov
rolb
lcall
mov
cmp
lret
les
add
mov
jg
out
mov
inc
test
add
cli
cmp
bnd
jle
and
xorl
cmpsb
ljmp
add
insl
dec
xlat
fwait
test
cli
loop
std
scas
lret
push
mull
pop
jecxz
ret
jns
arpl
iret
scas
pop
xor
je
notb
mul
adc
sub
outsb
sub
inc
xchg
xchg
jle
into
lret
inc
rolb
jbe
dec
add
inc
jae
out
sbb
decb
hlt
jmp
add
in
mov
or
cli
fidivrl
dec
cmpsl
punpckhwd
daa
jne
or
daa
mov
push
sub
sbb
cmp
je
addr16
cmp
jns
xor
dec
inc
mov
xchg
pusha
xchg
imul
data16
dec
pusha
push
pop
ja
dec
push
jb
mov
popa
lds
and
push
xor
js
inc
bound
lret
push
aaa
dec
sub
aas
js
jecxz
add
into
rclb
aad
inc
xor
out
fnstenv
sbb
rorb
dec
mov
mov
rolb
jae
jno
es
lods
notl
frstor
xchg
ja
or
pop
loope
xor
loop
out
pop
xchg
stos
push
cmc
shll
outsb
sbb
mov
xchg
xor
stc
enter
sbb
stc
jb,pn
ds
das
sbb
scas
mov
out
jl
jecxz
lds
push
sub
inc
mov
push
push
xor
lds
adc
sub
sub
push
dec
lods
movb
loope
in
mov
jp
aas
add
loop
dec
arpl
xchg
repnz
push
sub
jno
sbb
int
loopne
ret
and
dec
push
jle
aas
dec
dec
sub
in
popf
cmc
ror
hlt
push
repnz
fistl
negb
inc
push
test
aaa
pop
test
sti
arpl
lahf
dec
or
out
add
in
xor
fcoms
add
jecxz
cmp
sbb
push
mov
xchg
fwait
cmpsl
sub
test
jp
cmp
ds
in
clc
adc
gs
negb
sub
sub
les
lret
pushf
pop
out
icebp
add
out
aaa
adc
test
and
sub
cmp
mul
inc
jnp
test
or
imul
sbb
in
xor
dec
cmp
fs
mov
pop
mov
jb
add
aam
xchg
or
pusha
fisubl
adc
out
mov
xor
out
pop
icebp
mov
subb
cmp
loope
inc
dec
outsl
push
scas
inc
xchg
fstpt
jbe
pop
mov
mov
es
jge
xchg
inc
jmp
aam
call
mov
cmpsl
es
fwait
in
xchg
add
push
xchg
jbe
push
add
aam
cmpsb
popf
ss
adc
jae
sub
pop
add
mov
mov
stos
sbb
dec
mov
outsb
lahf
or
pop
push
hlt
outsl
mov
push
lret
cmc
addr16
gs
jle
and
daa
sarb
data16
pop
in
pop
call
dec
pop
iret
dec
dec
test
iretw
hlt
shll
sub
add
push
jo
movsl
std
dec
outsb
lods
lds
enter
ret
movsl
sbb
sub
rcll
ret
mov
xchg
and
dec
pop
and
out
mov
ror
push
das
test
stc
clc
movsl
imul
adc
mov
dec
fsubl
adc
cmp
push
popa
dec
pop
test
std
or
lock
fcoml
fs
add
js
test
cmpsb
lahf
push
add
push
inc
mov
cmp
inc
ja
mov
insl
add
push
mov
dec
data16
and
add
fisttps
fbstp
xchg
into
jl
mov
pop
sub
mov
imul
mov
es
aaa
cmpsb
adc
pop
pop
insb
les
dec
shll
mov
cmp
inc
cmp
mov
ds
and
pop
sbb
lahf
shlb
xchg
insb
or
xor
push
xchg
dec
aad
fsub
cmpsb
test
ja
loope
mov
or
inc
mov
xor
clc
xor
jns
data16
sahf
pop
add
add
jmp
dec
adc
loopne
out
mov
inc
push
stos
pusha
out
loop
std
lods
rcr
mov
sti
jnp
mov
adcb
stos
push
add
push
test
adc
push
shl
mov
orb
out
loopne
test
fsub
scas
jnp
xor
lock
test
fsubrs
int3
mov
jecxz
inc
fwait
jbe
pop
mov
mov
inc
shlb
clc
mov
jnp
ret
dec
cs
pop
xchg
imul
loop
cmp
arpl
jb
dec
or
test
rcrl
repnz
xchg
ja
xor
mov
arpl
jne
xchg
xchg
push
sbb
and
test
mov
out
sub
imul
mov
mov
icebp
movsb
jnp
add
cmp
fildl
out
rorl
ds
aas
pop
add
into
dec
push
out
mov
lcall
rcr
aad
inc
mov
mov
std
sbb
dec
mov
xchg
adc
sbb
cmc
add
push
mov
push
adc
xor
mov
pop
jnp
nop
jg
loop,pn
dec
cwtl
pop
scas
aas
or
cli
or
int
dec
mov
and
push
subl
cmp
andb
icebp
add
dec
mov
in
inc
push
jmp
xor
icebp
mov
dec
iret
insb
mov
xchg
push
sub
push
pop
push
jne
sbb
orl
mov
jb
lret
add
in
inc
in
lahf
loopne
mov
push
shl
mov
mov
fstpl
in
jae
sti
jp
dec
mov
mov
push
mov
jmp
aam
xor
in
push
loop
shl
lds
xchg
xchg
push
fistl
fnstcw
sub
lret
lcall
ret
rcrb
xor
sbb
mov
fistpl
inc
xchg
popa
pop
out
sbb
xchg
cmpsb
xchg
jp
addb
sub
lods
and
stc
mov
adc
cmp
mov
rorb
aas
and
sbb
sub
sbb
fwait
add
incb
rcll
repz
adc
not
jl
sub
cli
cld
fwait
lods
dec
shll
xor
adc
stos
add
inc
pop
dec
xchg
ss
iret
pop
mov
push
xchg
out
sub
jl
addr16
cld
mov
jbe
dec
jnp
cmpsl
xchg
and
jp
pop
add
test
in
movsb
data16
mov
or
repz
imul
inc
shl
sbb
and
sub
adc
stos
jmp
cmpsb
jg
sub
data16
mov
mov
es
out
stc
xor
push
mov
inc
rcrl
adc
and
cmp
jge
sbb
mov
outsl
jns
mov
lcall
mov
push
push
adc
mov
das
pop
pusha
out
nop
aam
adc
pop
dec
mov
pop
jbe
leave
mov
nop
cltd
cmp
cmp
imul
sub
adc
out
and
pop
dec
or
cmpsl
pop
nop
lock
mov
add
imul
lods
outsl
js
cmp
mov
out
xchg
jns
insb
mov
dec
mov
test
gs
xor
mov
pop
lock
pop
sub
push
clc
out
and
icebp
dec
aaa
popa
push
fwait
lahf
pop
adc
or
adc
lea
xor
mov
ss
inc
push
sbb
lods
rorb
shlb
hlt
test
mov
xor
popf
aad
pop
stc
js
call
xchg
and
jbe
mov
shrb
inc
out
ret
xchg
clc
sti
bound
sub
test
xchg
push
fdivl
ret
push
xor
pop
addr16
aam
adc
lods
lahf
push
jp
pop
add
adc
enter
jbe
sbb
fimull
dec
bound
stos
mov
add
imul
mov
or
jecxz
dec
cmc
addr16
cmpsb
iret
inc
mov
ljmp
int3
lods
dec
sbb
and
stos
jge
dec
or
or
jge
pop
mov
popf
xchg
and
inc
in
fcoml
push
or
push
xchg
mov
cmp
mov
lods
cmp
xor
jle
pushf
or
jnp
add
mov
pop
adc
pop
fwait
in
and
dec
adc
jp
cmp
mov
sub
push
pop
jno
frstor
int3
dec
fdivrs
sti
call
cmp
mov
jno
adc
or
stos
iret
xchg
addr16
inc
add
in
sub
jae
shl
gs
jge
test
bnd
cld
ljmp
xchg
xor
xchg
pushf
jp
xor
or
outsb
or
xchg
or
pmuludq
push
mov
push
in
lods
jg
in
lds
xor
jge
out
movsb
stos
mov
sbb
mov
adc
test
push
jo
xor
mov
mov
adc
shl
dec
lcall
in
sar
js
mov
xor
popf
pop
enter
das
loop
push
movsl
adc
out
push
scas
add
sub
out
cmp
dec
cmp
mov
testl
cmp
sbb
and
int
hlt
je
jmp
loopne
mov
out
call
in
inc
jl
into
std
inc
adc
nop
in
or
pop
aad
out
jp
jg
cmp
outsb
icebp
sbb
adc
or
adc
outsl
pextrw
mov
or
dec
push
xor
mov
mov
mov
push
cwtl
mov
int3
cmp
fstl
adc
sbb
inc
dec
shlb
sarb
stos
repnz
ret
js
xor
cli
jno
shr
add
mov
cli
stc
inc
lods
mov
xchg
inc
stos
jmp
je
add
cltd
imul
popf
popa
add
mov
movsb
pop
roll
int3
mov
cmp
jg
adc
aaa
insl
lds
push
xor
xchg
mov
and
jl
lret
push
mov
sub
mov
pop
sarl
mov
push
sub
sub
fadd
mov
stos
adc
mov
mov
add
inc
push
adc
push
outsb
mov
mov
pop
mov
fdivs
jl
imulb
dec
shll
fcoml
pop
aaa
dec
fimull
push
sahf
out
enter
movsl
pop
enter
bound
cmp
pop
jmp
mov
mov
movsl
push
test
mov
dec
sub
and
adc
stc
mov
sbb
pop
mov
cmpsl
push
or
add
test
pop
aas
mov
stos
pop
cwtl
jno
xchg
mov
adc
jle
push
or
add
or
or
and
xor
cmc
in
push
jns
daa
rcr
mov
jle
ljmp
cli
insb
daa
push
popa
pop
jmp
or
jae
cld
jo
and
int3
xchg
scas
adc
push
insl
in
add
out
xor
je
inc
xor
test
mov
loope
inc
jo
popf
cli
mov
inc
sti
mov
lcall
out
jmp
pop
leave
push
rorb
jns
sbb
in
sbb
cmc
jbe
pop
lods
xchg
cltd
jno
adc
shlb
shll
and
cmc
out
pop
jle
rorl
lret
jl
nop
mov
xor
outsb
mov
mov
mov
cmpsb
cmpsb
jne
stos
cmp
mov
add
andb
sbb
jnp
xor
fsubr
pusha
or
fwait
into
push
lret
mov
je
jle
or
add
gs
call
mov
nop
xchg
icebp
lea
iret
stc
outsl
jno
stos
and
or
test
pop
sbb
in
mov
fsts
mov
inc
test
addr16
lret
fsubrl
and
shll
out
fs
mov
pop
sbb
jo
xchg
and
mov
ja
pop
enter
sbb
lock
jne
movsl
data16
fcmovu
js
inc
cmp
xor
ficompl
into
stos
lret
idivl
push
pushl
aaa
mov
adc
testl
add
push
bound
jnp
ret
call
xor
idivl
dec
imul
and
or
out
insl
xchg
mov
cmp
std
jg
stos
rcrl
cli
xor
sub
mov
pop
inc
dec
mov
dec
xchg
jbe
fs
push
cs
push
enter
rorb
mov
lahf
push
ret
or
dec
repz
sub
and
mov
std
push
test
sub
jno
fs
inc
cwtl
or
clc
pop
aam
aas
shrb
imulb
aam
mov
imul
pop
dec
fcoml
lahf
push
jno
inc
fdiv
cmp
jno
mov
sbb
lods
inc
dec
adc
imul
jbe
outsb
dec
les
out
int3
cmpsb
mov
mov
jle
inc
sbb
imul
test
insb
mov
outsb
stos
divl
push
pop
je
leave
imul
cmp
icebp
mov
shlb
cmp
sarl
dec
rclb
mov
jp
sub
add
add
xchg
cmp
adc
or
push
lods
js
imul
or
add
in
add
movl
push
jnp
imul
sub
out
aad
adc
fcomps
sbb
xor
xchg
or
jp
pop
jne
cmc
xchg
sub
iret
push
xchg
jb
dec
mov
push
pop
pop
push
call
scas
inc
cmc
mov
sub
ror
jnp
mov
js
stos
mov
xchg
movsb
dec
fstpt
jo
push
sahf
sti
dec
pop
out
lods
lods
cmpsl
and
jo
sub
scas
ret
xor
add
test
sbb
inc
xor
ss
icebp
insb
loopne
pushf
in
dec
inc
ja
and
sub
subps
cltd
mov
adc
push
call
mov
pop
jo
outsb
ds
xor
mov
mov
test
es
insl
mov
mov
ret
leave
sub
xchg
mov
dec
bound
call
lock
xchg
outsl
sbb
mov
inc
and
or
lcall
insb
rclb
sbb
call
and
dec
mov
sub
ds
divl
call
and
and
mov
cmc
cmpsl
mov
xchg
movsb
mov
test
push
aad
inc
mov
xor
int3
jo
dec
adc
mov
jb
sti
mov
addr16
packssdw
push
int
jns
popa
sbb
lret
sub
push
nop
arpl
inc
mov
mov
xchg
in
push
add
insb
xchg
and
out
clc
fcmovnu
shlb
push
das
inc
dec
rcl
push
xchg
test
insb
mov
jne
ja
pop
jnp
pushf
mov
push
push
mov
loop
inc
or
shlb
dec
adc
lock
jge
add
dec
lods
cltd
cld
cs
lahf
loop
mov
and
jl
lods
lods
je
hlt
ret
xchg
cmpsl
push
test
das
push
mov
mov
adc
out
push
jle
das
ret
repnz
out
insb
psllq
pop
push
lock
popa
push
sbb
lods
fstl
rol
data16
fsubs
or
jge
icebp
insl
adc
add
dec
adc
jo
loopne
in
jae
xchg
lods
jecxz
xchg
popa
push
das
imul
mov
clc
adc
push
sbb
dec
cmpsb
adc
rorl
jae
pop
xchg
cli
sbb
scas
cmpsl
stos
es
subl
vpunpcklwd
hlt
or
sub
add
js
or
mov
sbb
bound
test
bound
add
lret
in
xor
mov
adc
ljmp
loop
filds
lock
mov
jae
icebp
f2xm1
cld
push
testb
jp
arpl
sti
loop
pop
and
popa
jb
xchg
test
subb
scas
cmpsl
out
movsb
inc
jno
dec
call
jo
adc
mov
ds
mov
loop
or
lods
jne
test
mov
inc
fnstenv
cld
lcall
cmc
xchg
ljmp
addr16
daa
inc
mov
and
push
xor
pop
and
cmp
mov
cld
cwtl
mov
pop
cmp
pop
ss
push
push
or
xlat
inc
loope
gs
mov
shrl
mov
sbb
inc
notb
push
and
dec
mov
mov
dec
adc
imul
icebp
sub
pcmpgtb
dec
or
jmp
dec
fdivr
push
fisubs
xorl
insl
sbb
sbb
xchg
inc
outsl
inc
sbb
xlat
cmpsl
js
sbbb
cltd
ds
dec
packssdw
mov
cli
cli
inc
clc
es
mov
push
fs
sub
mov
push
mov
cmpsl
nop
sbb
hlt
popf
aas
xchg
mov
inc
fnstenv
and
jmp
xchg
in
cmc
xor
cmp
inc
pop
push
or
jle
cli
into
pop
pop
cmpl
rolb
outsb
rcr
push
jle
dec
dec
les
dec
iret
movsb
repz
jmp
or
dec
int
fsubp
pushf
pop
mov
jle
mov
add
lret
inc
popf
fsubrs
jecxz
outsb
ret
cmp
jbe
popa
outsl
inc
dec
test
sahf
test
mov
sub
fwait
mov
mov
mov
and
adc
popf
push
pop
sbb
bound
mov
adc
fsubrl
rcr
xor
mov
pop
stc
in
lods
mov
imull
lock
add
das
mov
ss
test
enter
mov
ret
sbb
arpl
jecxz
inc
xor
insl
mov
mov
mov
neg
xchg
xor
test
movsl
push
shlb
push
push
je
xor
and
fdivrp
daa
jge
loop
fs
push
fldenv
jbe
mov
stos
jb
imul
rcll
xor
lret
loopne
push
dec
insl
cmp
xchg
push
call
les
mov
sub
leave
sar
gs
pop
push
and
jae
or
and
inc
mov
lods
test
jne
add
lret
cltd
into
dec
bound
sub
pop
insb
cld
or
sbb
jl
cwtl
jbe
stos
lods
xchg
sbb
add
addr16
in
sbb
ja
nop
js
pop
pop
or
xlat
jp
fxtract
lods
pop
addr16
jecxz
mov
and
mov
mov
nop
enter
js
outsl
mov
pop
mov
adc
jno
mov
jl
jo
fidivl
cltd
scas
pop
movsb
push
das
and
add
outsl
jmp
data16
fsubrs
cmp
dec
mov
sarb
mov
mov
cmp
inc
test
push
fwait
mov
gs
cld
mov
test
jbe
jae
icebp
pop
add
jge
or
or
into
push
decl
push
mov
vxorpd
mov
add
imul
mov
mov
mov
out
pusha
ficompl
and
jbe
divl
int
and
xor
push
pop
or
cmp
cmpsb
sbb
pop
nop
scas
in
jne
jno
xor
ljmp
mov
or
sarl
pop
xor
jnp
repnz
fucomi
dec
push
lods
mov
jmp
outsb
rcrl
enter
sub
xchg
call
or
mov
xor
aam
sarl
mov
cltd
push
sbb
and
and
inc
mov
imul
mov
mov
push
out
sbb
mov
sub
andb
adc
inc
jo
mov
push
int3
bsr
in
data16
sahf
sbb
aad
sub
js
ja
les
mov
jae
pop
and
push
in
lods
cmp
or
out
add
cmp
add
and
mov
or
incl
repnz
inc
dec
aad
mov
in
and
cmpb
inc
int3
or
jl
pop
outsl
adcl
jp
cmc
pop
out
adc
iret
js
dec
cmc
test
mov
dec
xor
in
jp
mov
cltd
cmp
mov
push
fld
mov
daa
pushf
ret
maxps
inc
clc
add
pusha
add
fs
mov
xchg
xor
mov
xchg
jmp
jno
lcall
mov
test
sbb
lods
sbb
push
mov
movsl
sarb
jbe,pn
jns
mov
pop
arpl
fs
inc
jl
not
jb
insl
jnp
sub
test
hlt
fcompl
sbb
jmp
mov
imul
iret
in
fiaddl
xchg
cmc
lahf
inc
mov
sbb
xor
jge
inc
popf
add
mov
add
push
push
inc
add
rcrw
jo
adcl
lods
jle
out
lods
sub
lods
shl
mov
out
dec
int
aas
xor
inc
xchg
jns
push
pop
nop
lret
test
cwtl
jmp
loope
ret
out
and
lcall
lret
int
jne
add
fdivr
repz
lea
add
sbb
push
fwait
cmp
scas
and
outsl
pop
stos
in
in
out
and
add
out
fstps
jl
mov
mov
inc
lret
fs
cli
dec
add
rcrl
or
call
jbe
into
xor
lret
fildl
cs
add
or
mov
push
or
stc
ljmp
lret
in
adc
push
int
jno
mov
add
pop
cmpb
dec
sub
out
out
dec
jmp
pop
pop
pop
push
inc
adc
test
push
push
sub
xchg
test
pop
fwait
js
mov
pop
cmc
scas
xor
ret
mov
xchg
add
imul
mov
test
or
pop
cmc
push
jne
std
mov
enter
fsub
sub
mov
cli
hlt
test
xor
xor
mov
outsb
mov
cwtl
push
insb
lcall
das
xchg
xchg
mov
stos
ret
into
fidivs
push
loope
push
das
cmp
iret
popf
mov
push
xor
mov
aaa
pop
sbb
lret
in
lret
shrb
xchg
mov
xchg
adc
stos
jo
loope
pop
and
movsb
cmc
stos
in
scas
xchg
jne
sti
clc
nop
and
xchg
xor
lcall
adc
icebp
and
pop
xor
adc
bound
cmp
aam
ljmp
and
test
jp
clc
xor
imul
jecxz
or
adcb
inc
sbb
jne
lcall
inc
sahf
ret
xchg
mov
xchg
mov
loope
mov
xorb
mov
mov
iret
or
lock
xchg
jp
addr16
jnp
mov
aaa
push
faddl
cmp
sub
sub
pusha
in
shlb
adc
xchg
mov
aas
pop
testl
xor
xchg
push
aas
mov
cmp
cmc
lods
adc
mov
jo
adc
test
js
cmp
xlat
mov
add
mov
dec
cwtl
ja
xor
mov
push
fldln2
ret
mov
rcl
ljmp
xor
sbb
iret
scas
fwait
nop
fucom
xchg
push
mov
mov
movsb
cld
pop
stos
xor
lret
das
lret
into
or
fcoms
mov
fimull
movsl
pop
movsb
lods
sub
cld
lds
mov
adc
adc
test
aad
loop
pop
daa
dec
xchg
out
mov
lds
pusha
add
cld
xor
push
add
lcall
out
mov
sahf
rolb
sbbb
into
out
fs
out
pop
les
push
mov
leave
js,pn
mov
lods
dec
inc
jmp
arpl
mov
hlt
cmpsb
outsb
mov
ficomps
ret
sbb
das
cltd
adc
pushf
adc
fcomi
push
daa
cmp
sbb
lods
lods
add
negb
repz
js
out
ret
add
mov
mov
test
mov
mov
jbe
xchg
stos
pop
