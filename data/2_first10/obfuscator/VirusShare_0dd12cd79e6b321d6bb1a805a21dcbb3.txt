push
mov
push
push
mov
mov
mov
movl
cmp
jne
andl
mov
inc
mov
cmpl
jne
imul
xor
pushl
push
call
cmpl
jb
mov
movl
mov
cmp
jb
mov
xor
mov
add
mov
xor
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
leave
ret
sub
mov
scas
test
sbb
cmpsb
mov
jo
mov
inc
inc
and
inc
iret
mov
into
movb
mov
stos
mov
mov
mov
fcmovbe
rcr
not
lret
xlat
lock
mov
int
int3
stc
in
int3
loope
ret
loope
imul
cld
jmp
or
cli
out
adc
ret
adc
jmp
std
sbb
call
loop
cmp
sbb
adc
xor
adc
and
pop
and
sbb
adc
pop
sub
sub
push
dec
sub
cmp
dec
inc
cmp
jns
pop
xor
jo
xor
jns
insb
push
push
jo
push
jle
pushf
inc
jle
pop
and
fs
js
inc
push
fs
ja
cltd
xchg
popf
mov
xorb
nop
jg
ja
test
sahf
jne
mov
xchg
insl
mov
scas
orb
lcall
mov
lahf
xchg
mov
mov
test
fcmovbe
lds
addl
mov
shl
mov
imul
lock
icebp
stos
lret
into
test
ror
mov
mov
ret
pop
cld
adc
ret
adc
lret
fsubrl
rcl
leave
mov
stos
ret
frndint
mov
shlb
call
aam
test
jmp
fsubrp
loopne
ret
adc
loope
push
adc
hlt
cld
sbb
int3
or
adc
loope
or
or
out
loopne
std
sbb
pop
loope
pop
out
cmp
cmp
ss
push
pop
sub
or
adc
pop
sbb
cmp
aaa
das
adc
xor
push
and
pop
daa
inc
pop
aas
cmp
or
and
jle
jg
jbe
jne
jne
jo
insb
push
xor
mov
test
mov
mov
jg
inc
and
inc
imul
js
inc
insb
dec
bound
dec
jb
dec
pop
insl
jne
inc
inc
lcall
mov
imul
push
xchg
xchg
mov
ja
xchg
arpl
jo
xchg
mov
fwait
mov
cmpsb
test
andb
mov
lods
stos
mov
cwtl
mov
mov
aam
iret
mov
lret
mov
cmpsb
cld
mov
stos
test
cmpsl
mov
in
mov
test
cli
in
ret
loop
int3
ljmp
clc
hlt
sbb
sti
push
jecxz
loopne
out
lea
stos
mov
ret
lods
sti
addb
cld
movsb
fdivl
mov
iret
jmp
cmc
shr
cmpsl
in
ret
rol
fadd
out
adc
rclb
out
ljmp
add
pop
or
or
adc
sub
in
aaa
out
or
or
call
and
sbb
pop
or
cmp
push
xor
xor
sub
dec
cmp
inc
pop
sub
jns
sub
aas
cmp
and
xor
inc
dec
pop
jp
xor
inc
jnp
push
push
dec
inc
dec
outsl
push
jl
jno
inc
jp
jns
xchg
push
jne
lcall
jns
dec
jb
dec
xchg
test
pushf
mov
mov
xchg
jno
mov
pusha
jns
cwtl
popf
stos
xchg
imul
mov
mov
cmpsb
mov
mov
cmpsl
mov
adc
dec
fadd
shll
test
sti
mov
shrl
aam
stos
stos
mov
shlb
jmp
neg
repnz
rcrl
mul
lret
sti
mov
mov
mov
clc
cmp
mov
aas
pop
fiaddl
add
inc
and
inc
mov
into
xchg
ret
clc
ret
mulb
into
mov
fsubr
out
jmp
xlat
xlat
cmc
hlt
lret
ror
loop
loopne
icebp
rcr
jecxz
jmp
sbb
mul
in
pop
cli
out
clc
push
ljmp
jmp
jecxz
pop
call
ljmp
sub
sub
cmp
and
ds
or
push
aas
es
pop
and
aas
and
dec
inc
xor
cs
push
dec
es
inc
dec
sub
pop
inc
sub
pop
pop
push
push
jp
das
insb
push
push
je
jae
jnp
gs
pop
push
inc
dec
data16
dec
fs
addr16
xchg
lahf
jp
push
jl
jbe
mov
dec
jbe
je
pusha
popa
andb
mov
addr16
data16
jbe
mov
scas
mov
bound
mov
xchg
movsb
andb
mov
mov
int3
xchg
std
mov
mov
mov
shr
cld
out
repz
repnz
test
les
out
mov
fsubr
sti
shr
or
push
push
roll
mov
lods
mov
ret
cmpsl
scas
stc
icebp
ljmp
lret
cmpsl
jmp
leave
shr
movsb
clc
sbb
enter
bnd
stc
adc
rorb
push
shl
out
add
or
push
hlt
or
or
add
xor
sbb
ss
das
add
or
call
and
and
pop
pop
and
ds
sbb
sbb
sub
push
xor
cmp
dec
pop
or
sub
cmp
dec
sub
pop
add
ja
and
sub
push
push
and
jnp
mov
mov
xor
inc
xlat
stos
mov
test
cmpsb
xor
inc
inc
loope
inc
inc
pop
sub
bound
dec
jae
addr16
daa
jns
popf
arpl
xchg
push
sahf
push
inc
inc
jb
jge
xchg
addr16
mov
push
mov
jg
imul
jae
mov
test
nop
test
faddl
lcall
sbb
mov
mov
fldt
xchg
lods
fcmovnu
cmc
aad
mov
mov
out
ror
cmpsl
shr
rcr
ror
shr
test
loop
ljmp
rcr
sbb
or
adc
shll
mov
aad
mov
mov
fbld
clc
fmul
xlat
ret
stos
leave
div
out
test
call
call
decl
loope
stc
adc
repz
jecxz
adc
jecxz
bnd
std
or
add
repnz
cmp
add
das
aaa
sub
sbb
aaa
das
adc
das
sub
and
add
push
pop
and
push
adc
sub
cs
and
sub
cmp
jp
ds
pop
and
cmp
jb
xor
dec
push
push
cs
inc
jbe
ja
imul
data16
jg
insl
popa
jp
cltd
jg
pop
pop
outsl
outsl
jae
insb
jns
outsl
jne
dec
test
mov
mov
jle
xchg
gs
mov
mov
mov
test
xchg
cwtl
mov
arpl
mov
test
adc
fcoms
in
sub
push
push
movl
mov
cmp
jle
xor
xor
mov
adc
mov
mov
xor
movl
cmpl
je
cmpl
jne
xor
sbb
push
pushl
call
mov
dec
mov
jmp
jmp
xorl
subl
xor
xor
and
mov
lea
mov
mov
mov
xor
push
lea
imul
cmp
mov
je
imul
xor
mov
lea
mov
jmp
imul
mov
mov
mov
xor
add
and
mov
movl
movl
mov
movzbl
sub
mov
mov
movl
jmp
xor
or
or
mov
mov
or
mov
mov
addl
cmp
jne
cmpl
jne
cmp
jne
mov
imul
mov
mov
xor
mov
mov
mov
or
mov
mov
mov
mov
mov
test
sbbl
add
xor
lea
xor
cmp
jne
mov
xor
lea
xor
mov
cmp
jne
movl
xor
or
cmp
jge
xor
xor
and
mov
mov
xor
lea
xor
mov
cmp
jne
pop
pop
pop
leave
ret
mov
test
cli
mov
stos
mov
repz
jg
inc
scas
test
fsubrs
lods
roll
std
fidivl
in
icebp
divl
in
mov
in
in
mul
into
loopne
out
negl
test
lds
std
lret
ror
xchg
mov
mov
ffree
test
mov
mov
mov
test
fsubrp
xlat
cmpsl
enter
shrl
fcmovnbe
sbb
sbb
jmp
std
shl
repz
sbb
or
pop
adc
adc
cmc
add
repnz
sbb
ljmp
clc
loop
cmp
aaa
icebp
sbb
add
adc
jecxz
sub
cs
cmp
pop
pop
pop
xor
cmp
push
dec
dec
and
xor
daa
push
and
inc
add
or
es
pop
sub
cmp
inc
and
push
dec
push
push
daa
dec
dec
jb
dec
pop
and
outsl
inc
imul
popf
jne
push
fs
inc
inc
sahf
xchg
dec
jns
jp
jl
inc
dec
mov
mov
mov
xchg
xorb
xchg
bound
outsb
mov
popa
test
test
bound
xlat
mov
leave
mov
lds
mov
lret
add
aam
push
shrb
stos
lret
out
test
movsb
rcl
ljmp
adc
mov
std
sbb
sbb
enter
mov
shll
ret
test
les
mov
xlat
mov
cli
out
sar
in
in
in
fxch
ret
cmpsl
sbb
int
in
sbb
sbb
rol
push
fnclex
iret
repnz
sti
stc
out
cmc
testb
push
repz
or
ss
add
or
xor
mov
mov
mov
mov
pop
bound
inc
inc
and
inc
cmp
adc
out
jecxz
or
pop
cmp
and
xor
cmp
push
ss
and
cmp
push
push
ss
pop
push
push
cmp
and
push
pop
jns
js
cmp
inc
daa
ja
aaa
xor
push
and
sub
jp
dec
addr16
bound
dec
and
dec
and
jle
cwtl
fs
xchg
pop
xchg
outsb
cltd
dec
nop
dec
cltd
dec
mov
jbe
xchg
dec
mov
cltd
mov
mov
mov
xchg
xchg
mov
xchg
cmpsl
imul
mov
mov
frstor
gs
lcall
mov
mov
into
shlb
ret
iret
cli
mov
mov
xlat
jmp
into
into
icebp
in
not
enter
in
icebp
into
sbb
sbb
out
fcomps
lcall
lds
icebp
iret
not
sti
loopne
lret
int3
aam
int
mov
scas
addl
iret
xlat
mov
lock
rcl
lret
icebp
in
out
aad
std
std
jecxz
out
aam
jmp
iret
sar
push
sbb
in
leave
repz
add
aas
in
ds
or
divb
clc
adc
or
xor
sub
in
sub
sub
es
jecxz
sbb
daa
and
sub
ss
cmp
or
xor
push
pop
inc
or
sub
inc
js
pop
push
jle
jge
push
inc
jge
sub
pop
push
push
jne
dec
push
jo
jl
push
dec
pop
pop
jg
pop
ja
pop
xchg
jl
cwtl
inc
lcall
inc
dec
addr16
push
addr16
push
mov
xorb
mov
xchg
mov
gs
arpl
fdivrl
aad
movsl
aad
xchg
mov
mov
lods
mov
in
mov
test
mov
jbe
inc
and
inc
xlat
cmpsl
mov
test
mov
ror
scas
scas
std
ljmp
cli
mov
ret
fsub
std
enter
call
pop
pop
loop
fstp
adc
in
sbb
in
sbb
mov
stos
mov
mov
mov
repz
mov
fcmovnbe
test
out
hlt
clc
icebp
cmc
out
cmpsb
std
into
out
jmp
fdivrp
inc
sbb
xlat
push
in
repnz
jmp
in
adc
loope
jmp
cmp
xor
cmp
loope
add
aas
sub
xor
sbb
jecxz
sub
cmp
cs
push
pop
pop
push
cmp
sub
or
inc
pop
push
or
aas
push
xor
inc
sub
inc
push
push
xor
and
push
inc
and
sub
sub
es
popa
pop
insl
dec
lahf
lcall
cltd
lcall
jbe
outsl
mov
addb
inc
lahf
inc
pushf
mov
lcall
adcb
subb
mov
mov
mov
sahf
mov
pusha
mov
xchg
mov
fisttps
mov
int
adc
cmp
int3
int
iret
cmpsb
hlt
into
icebp
test
movsb
fmul
out
test
out
ljmp
xabort
inc
ret
int
lock
mov
cmpsb
add
mov
mov
mov
rcr
cli
fnstenv
lret
icebp
jmp
std
int
out
lds
sbb
adc
or
adc
stc
adc
stc
loope
enter
cmp
add
adc
jmp
or
mov
lock
test
mov
stos
mov
and
and
and
inc
sbb
in
in
adc
or
add
sub
or
add
pop
pop
cmp
aaa
push
xor
cs
pop
dec
push
inc
xor
push
and
dec
pop
cmp
pop
and
pop
cmp
pop
insb
insb
insb
push
ja
insb
jae
push
jbe
push
push
pop
sahf
dec
pop
inc
push
pop
jl
jbe
xchg
cwtd
popf
xchg
imul
push
lea
cwtl
bound
gs
arpl
lahf
lods
xchg
insl
mov
mov
mov
fldt
mov
sarb
xchg
lea
mov
mov
stos
aam
lods
movsl
fldcw
hlt
leave
xlat
sar
mov
call
cmc
into
cmpsl
movsl
call
sar
int3
out
aad
ret
std
aam
stc
adc
out
jmp
repz
sarb
movsl
add
roll
movsb
fmulp
rol
iret
fcomi
repz
mov
not
movsb
lods
out
loope
int
into
call
adc
ret
sbb
std
into
icebp
sbb
in
adc
ret
add
stc
add
push
in
cld
adc
adc
out
sbb
sbb
cmp
or
and
push
and
adc
pop
xor
push
push
daa
pop
adc
dec
inc
jg
add
pop
pop
and
cmp
cmp
push
and
jge
push
imul
push
inc
popa
cs
outsl
imul
dec
lcall
pushf
push
data16
dec
jb
imul
nop
lea
dec
ja
jg
jge
jl
mov
mov
mov
xchg
xchg
insl
stos
insb
xchg
pusha
mov
xchg
test
mov
mov
mov
mov
and
jo
mov
mov
mov
add
inc
xchg
inc
inc
inc
test
mov
movsb
cmpsb
mov
scas
mov
ror
mov
rcr
xlat
lock
mov
test
hlt
mov
sar
inc
cmc
rcl
push
mov
sub
movl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
xor
add
and
mov
mov
push
movl
mov
cmp
jb
xor
add
adc
mov
xor
mov
add
mov
mov
push
push
test
je
mov
mov
imul
mov
add
cmp
jle
mov
ror
mov
jmp
lea
mov
xor
xor
mov
xor
lea
mov
mov
mov
and
mov
mov
xor
add
sub
xchg
sub
mov
mov
call
mov
lea
mov
mov
movzbl
or
mov
mov
mov
xorl
xor
add
cmp
jne
mov
xor
add
jmp
stos
mov
mov
cmp
lods
lods
mov
push
testb
inc
inc
inc
movsl
jmp
in
cld
in
aam
aad
shl
sbb
iret
fidivrl
test
enter
mov
divb
iret
in
movzwl
rcl
mov
mov
push
call
mov
mov
movzbl
xor
mov
mov
mov
xor
add
cmp
je
cmp
mov
mov
adc
mov
mov
add
mov
movzwl
shr
mov
mov
mov
add
mov
cmp
mov
shlb
mov
mov
add
xor
mov
mov
mov
cmp
jbe
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
add
xor
push
call
jmp
mov
movl
xor
add
cmp
jge
mov
mov
sub
movzbl
adc
mov
mov
mov
addb
mov
xor
mov
add
mov
mov
lea
push
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
movzwl
mov
mov
mov
mov
mov
andb
mov
mov
xor
andl
add
cmp
je
mov
add
mov
mov
test
je
movl
mov
test
lea
mov
xor
add
mov
sbb
mov
inc
inc
sub
dec
lea
mov
xor
or
mov
and
mov
imul
sub
movl
xor
or
cmp
jg
mov
xor
add
adc
mov
lea
mov
mov
mov
add
xor
add
mov
or
mov
mov
mov
xor
xor
add
mov
and
mov
mov
add
mov
cmpl
jne
mov
or
mov
jmp
lea
mov
mov
mov
sbb
mov
xor
xor
add
mov
andl
mov
inc
mov
cmpl
jne
adc
adc
xor
push
call
cmpl
jb
mov
mov
xor
xor
lea
mov
add
imul
cmp
je
mov
cmp
jno
lea
mov
mov
movzwl
sub
jmp
mov
mov
xor
mov
lea
mov
mov
mov
or
mov
mov
xor
mov
xor
mov
add
div
mov
xor
mov
add
lea
mov
mov
mov
cmp
movzbl
mov
sbb
mov
mov
mov
xor
lea
mov
mov
mov
imul
mov
xor
lea
mov
xor
add
imul
cmp
jne
mov
mov
jmp
movl
mov
cmp
ja
mov
mov
mov
xor
add
mov
test
sbbl
andl
subl
xor
lea
add
call
xor
inc
cmp
je
xor
add
mov
add
mov
xchg
mov
mov
inc
mov
mov
xor
mov
inc
sub
andl
mov
inc
mov
cmpl
jne
adc
adc
add
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
dec
movl
mov
cmp
jne
lea
mov
mov
mov
sbb
mov
imul
add
xchg
test
lea
mov
xor
xor
mov
adc
push
xor
mov
dec
inc
add
lea
mov
mov
mov
sub
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
test
mov
mov
movsb
stos
les
int
test
mov
cmp
jb
inc
and
inc
in
fcompl
enter
repz
in
std
ret
wbinvd
int3
clc
mov
mov
cmp
int
test
test
cmpsb
ret
aad
repz
iret
shll
lret
sar
xlat
test
test
enter
in
lret
repnz
pop
fcomps
or
repnz
sti
in
icebp
lds
push
ljmp
or
xor
jecxz
cmp
jmp
sub
jmp
or
xor
adc
pop
out
push
and
push
pop
add
dec
dec
or
dec
and
pop
push
xor
pop
pop
jns
pop
and
je
jae
push
cmp
jl
pop
ja
dec
and
sub
inc
sub
and
dec
jp
lahf
fwait
data16
xchg
imul
push
ja
lahf
mov
inc
mov
lahf
mov
jp
sahf
lahf
arpl
insl
xchg
mov
xchg
scas
push
mov
mov
mov
mov
mov
test
lds
cli
test
ret
mov
iret
mov
ret
into
mov
aad
out
jmp
movsb
lret
jecxz
pop
cld
leave
fstpl
cld
in
rol
rcr
rorl
repnz
pop
mov
xchg
lods
movsb
mov
leave
hlt
std
idiv
mov
icebp
out
iret
ljmp
loope
call
in
enter
ficoml
icebp
cli
rcl
cli
std
jmp
in
int
iret
pavgw
leave
in
adc
pop
or
pop
adc
push
repnz
xor
adc
xor
daa
adc
add
add
aas
pop
push
add
pop
adc
push
and
sub
sub
and
pop
daa
jle
dec
and
mov
lods
lods
mov
jns
imulb
stos
mov
xor
inc
and
inc
inc
and
and
jge
jp
inc
es
and
insb
inc
pop
outsl
xor
push
dec
push
push
pusha
sub
push
inc
push
js
inc
popf
popa
jne
push
jl
nop
jae
popa
js
mov
dec
cwtl
nop
js
lahf
fs
lcall
popf
jae
nop
mov
mov
mov
scas
nop
xorb
mov
mov
xorb
sarb
mov
test
mov
movsl
clc
stos
test
mov
mov
push
iret
xlat
stc
scas
ljmp
in
in
mov
leave
out
ret
cld
out
cmc
in
loop
cld
shl
push
scas
leave
mov
mov
scas
int3
lret
test
shlb
shll
fmulp
rol
test
lods
leave
call
fmul
pop
cmc
adc
call
out
shr
sbb
sbb
add
test
or
out
divl
cld
sti
push
sbb
pop
out
cmp
ds
in
adc
ds
cmp
add
and
pop
ds
daa
pop
cmp
pop
cmp
ss
rdpmc
or
or
pop
push
or
or
sub
sub
pop
dec
xor
cmp
jae
je
dec
sub
imul
arpl
bound
dec
dec
jns
cwtl
js
data16
outsl
popa
jnp
xchg
inc
jl
jns
jnp
dec
dec
xchg
inc
adcb
mov
test
mov
scas
nop
xchg
mov
mov
scas
mov
bound
fs
movsb
xchg
xchg
mov
test
mov
fisubrl
fdivl
cmpsl
xlat
rolb
mov
xlat
mov
in
aad
call
scas
rol
in
loopne
in
in
sbb
mov
iret
mov
cmpsb
stos
mov
imul
adc
inc
and
inc
out
vpmaddwd
fadd
repz
sbb
repz
cli
scas
fcmove
test
mov
andb
mov
shlb
rcr
mov
lods
aad
repnz
leave
scas
test
sbb
leave
mov
notb
psadbw
push
or
add
out
in
or
jecxz
add
cli
pop
add
sbb
xor
add
icebp
in
pop
sbb
adc
push
in
and
aas
or
add
pop
push
das
dec
dec
adc
or
push
daa
and
jnp
and
and
cmp
js
push
push
jno
imul
arpl
and
bound
bound
lahf
pop
xchg
inc
inc
inc
jnp
xchg
xchg
push
dec
push
cwtl
xchg
xchg
xchg
mov
popa
jg
popf
mov
mov
mov
pushf
bound
imul
nop
fidivrl
popf
mov
iret
mov
fldt
mov
stos
lods
mov
addl
sar
neg
shl
cli
fildll
mov
repnz
stos
vpxor
out
cmc
fisubs
leave
xlat
adc
adc
dec
adc
or
mov
mov
mov
movl
ret
mov
mov
fucom
shl
hlt
in
rol
loopne
int3
sbb
fabs
cld
aad
shl
test
in
loopne
or
ljmp
pop
add
loopne
cmp
push
loop
adc
add
add
repnz
adc
or
cmp
and
jecxz
or
cmp
cmp
pop
sbb
push
adc
cmp
xor
sub
or
dec
cmp
mov
mov
mov
mov
lods
mov
movsb
repnz
inc
inc
jg
inc
sub
inc
aaa
pop
and
pop
dec
js
cmp
jbe,pn
jp
pop
push
imul
jb
pushf
jl
lahf
pushf
pusha
pop
inc
jge
jp
lahf
push
jb
je
dec
lea
js
nop
imul
jle
popa
xchg
mov
jne
jb
mov
insb
imul
mov
stos
test
xchg
mov
fcoml
lret
mov
xlat
roll
lods
mov
mov
stc
aam
aad
mov
into
in
scas
cmpsl
fdiv
repnz
clc
sar
sbb
ret
rcrb
or
adc
fsubrl
into
fcmovne
scas
ret
stc
mov
lock
out
std
cmc
stc
hlt
loope
cmpsb
enter
cld
rol
mul
adc
hlt
clc
fninit
rorb
jmp
repz
jmp
or
sbb
cmp
adc
repnz
es
sbb
aaa
sub
jecxz
and
pop
pop
add
das
sbb
push
xor
push
pop
dec
push
xor
push
pop
adc
cmp
and
and
pop
cmp
pop
sub
jbe
aaa
jne
sub
push
outsb
push
push
inc
xor
dec
je
and
push
inc
dec
daa
bound
jnp
xchg
arpl
xchg
imul
jl
push
inc
jns
nop
lea
push
mov
push
push
mov
mov
xor
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
sbb
imul
pushl
call
cmpl
jne
mov
inc
mov
jmp
movzwl
add
mov
push
movl
xor
add
cmp
ja
xor
xor
mov
or
mov
mov
mov
shl
mov
movl
mov
mov
mov
xor
add
cmp
movl
sbbl
andl
mov
mov
mov
xor
pop
mov
and
mov
add
pop
leave
ret
push
mov
cmp
mov
mov
adcb
mov
imul
mov
sub
xor
mov
pop
ret
sub
mov
cmpsb
mov
fisttpll
pop
mov
stos
mov
cltd
pop
or
and
inc
inc
cwtl
mov
xorb
fs
mov
lods
xchg
mov
xchg
xchg
mov
test
fildl
mov
scas
xchg
mov
movsl
lret
fadd
sti
mov
std
cli
cmpsb
cmc
fcmovu
fsubrl
scas
aam
stos
in
in
loopne
ret
jmp
loope
stc
fdivr
shl
sbb
repnz
or
sbb
mov
scas
rcl
lret
scas
mov
push
rol
mov
ljmp
mov
mov
mov
enter
sbb
imul
leave
lock
cmc
adc
in
ret
push
push
or
add
xor
sbb
out
repnz
icebp
sbb
xor
and
and
cmp
pop
pop
push
aaa
sub
xor
sbb
dec
or
inc
dec
and
ss
add
pop
ds
sub
push
xor
insl
ja
pop
imul
jo
dec
and
pop
dec
xchg
pop
push
arpl
jle
dec
push
jg
push
js
jg
xchg
je
test
orl
inc
mov
xchg
xchg
mov
xchg
mov
insl
movsl
mov
arpl
mov
sahf
xlat
mov
adc
orl
mov
xchg
xorb
test
cli
mov
mov
stc
fisubl
fsubrs
out
test
push
in
fdiv
leave
stc
enter
hlt
inc
repnz
out
jmp
enter
lret
mov
stos
cmpsb
ror
fldl
rcl
ret
test
mov
icebp
fdivl
int3
test
out
fbld
stos
mov
stos
mov
test
mov
scas
scas
mov
push
imul
lret
out
xlat
icebp
mul
push
into
push
iret
stc
cmc
test
sbb
repz
out
jecxz
add
sbb
in
jmp
adc
jmp
ss
sub
sbb
out
jecxz
sub
jecxz
or
sub
aaa
pop
cmp
ds
cmp
or
or
inc
dec
add
cs
xor
pop
jnp
je
cmp
ss
jp
insb
sub
outsl
push
outsl
dec
inc
and
addr16
dec
dec
inc
je
jg
js
insl
xchg
dec
popf
lcall
gs
imul
xchg
bound
lahf
insl
mov
lahf
outsb
test
mov
fldl
mov
mov
nop
mov
mov
test
mov
mov
lock
cmc
rcl
jmp
jmp
test
ljmp
sbb
stc
aam
lock
adc
lret
mov
lds
mov
lret
ret
lods
aad
mov
movsb
fildll
lock
hlt
enter
repz
int
shr
jmp
xlat
stc
int
sbb
push
adc
in
lds
repnz
enter
add
or
ss
loop
aaa
sbb
adc
or
push
sub
adc
sub
xor
pop
add
es
add
push
add
and
push
push
sub
adc
or
inc
inc
xor
inc
cmp
jge
pop
dec
pop
jne
js
dec
and
push
imul
outsb
push
outsb
outsb
dec
push
jb
inc
inc
jnp
js
bound
cwtl
popa
lahf
inc
lea
xchg
xchg
jp
insl
jp
xchg
imul
inc
jb
arpl
movsl
test
insl
push
cmpsb
mov
lods
lods
mov
fsub
xor
inc
and
inc
inc
mov
fs
xchg
mov
mov
mov
outsb
xchg
cwtl
push
mov
mov
xchg
cwtl
cmpsl
cmpsl
cltd
mov
mov
int3
mov
xchg
mov
mov
mov
fadd
jmp
in
in
ret
lret
fistps
jecxz
fucomp
loop
enter
unpcklps
std
int
scas
xchg
test
mov
aam
scas
ret
test
cli
mov
fdivr
shll
mov
iret
sar
lret
lret
fld
clc
leave
mov
repnz
sar
sbb
std
add
leave
sbb
or
push
out
or
in
clc
in
pop
or
stc
pop
icebp
stc
negl
adc
in
lock
jmp
or
add
das
sub
sbb
aas
pop
sub
push
sub
dec
xor
pop
push
sub
xor
dec
and
inc
pop
ja
pop
and
pop
jb
xor
dec
jnp
and
outsb
sub
dec
pop
jl
insl
and
inc
xchg
jae
nop
push
jnp
dec
sahf
jae
xchg
mov
mov
mov
jle
mov
mov
popf
jo
mov
lcall
bound
lahf
mov
rcr
xchg
orl
aad
mov
mov
mov
mov
sti
mov
xlat
shll
jmp
test
sbb
lock
sbb
repz
adc
ror
cli
leave
mov
test
int3
lret
ret
mov
stc
lods
fisubrs
out
test
enter
cld
iret
xlat
fadd
test
rcl
jecxz
mov
mov
push
mov
scas
mov
stos
mov
sub
inc
daa
jg
inc
jecxz
jecxz
stc
xlat
in
std
shl
clc
int
or
sbb
enter
les
push
out
loopne
cmp
add
or
ljmp
jmp
or
ds
es
adc
ss
adc
cmp
cmp
xor
and
dec
add
cmp
cs
push
push
dec
cmp
inc
outsb
inc
ja
push
jle
imul
and
jae
push
push
jb
dec
jno
cwtl
lcall
xchg
mov
pusha
xchg
imul
imul
outsl
arpl
mov
mov
mov
subl
fldl
scas
int
mov
test
subl
movsl
lret
mov
scas
div
lods
mov
out
jmp
rol
jmp
mov
push
push
negb
pop
aam
out
adc
adc
or
cmpsl
fimull
mov
fdivrp
fnstcw
shlb
jmp
fcmove
in
lret
shrl
shll
fcmovbe
ret
sbb
iret
lret
push
in
lret
jmp
int
std
push
jecxz
sbb
lds
out
stc
repz
out
xor
sbb
or
add
adc
pop
or
cmp
xor
pop
sub
dec
sub
ss
and
add
jns
cmp
and
add
ja
inc
xor
inc
js
dec
inc
js
insl
sub
pop
jle
jge
outsl
pop
inc
insl
jl
gs
and
jae
inc
inc
fwait
push
dec
popf
outsl
xchg
insb
xchg
js
xchg
push
mov
sub
push
xor
mov
movl
cmpl
je
cmpl
jne
mov
xor
xor
mov
mov
pushl
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
xor
or
cmp
jle
andl
xor
xor
mov
sub
jmp
xor
xor
mov
adc
mov
add
mov
push
mov
push
lea
mov
mov
xor
xor
xor
xor
mov
add
xor
or
mov
and
mov
mov
xor
add
movl
movl
mov
cmp
je
jmp
mov
cmp
jne
mov
mov
mov
mov
mov
mov
jmp
test
lods
mov
cmpsb
mov
mov
scas
enter
and
inc
inc
mov
inc
out
lret
cmpsb
leave
leave
ret
mov
iret
jecxz
les
div
jmp
adc
out
rcrl
ror
push
push
hlt
or
add
loope
out
sarl
add
mul
xor
add
add
test
add
mov
movzbl
xor
or
or
mov
andl
mov
mov
movl
movl
xor
or
mov
and
mov
mov
mov
cmp
movzbl
mov
sbb
mov
movl
movl
andl
xor
xor
inc
mov
cmpl
jne
imul
mov
xor
xor
or
push
push
pushl
push
pushl
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
mov
cmp
jae
xor
mov
mov
sub
cmp
mov
adc
mov
add
mov
mov
cmp
je
mov
mov
xor
xor
lea
mov
sub
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
mov
xor
add
add
ror
xor
or
sub
mov
add
mov
movl
cmpl
je
cmpl
jne
sbb
imul
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
sub
xor
cmp
jne
movl
mov
cmp
jle
mov
mov
xor
xor
sub
sub
xor
mov
test
mov
mov
sbb
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
xor
pushl
mov
call
mov
jmp
mov
mov
mov
scas
xor
mov
stos
mov
ret
addb
cmc
inc
inc
mov
inc
aas
repnz
adc
sbb
sub
and
adc
push
adc
xor
loopne
loopne
and
or
add
sub
sub
dec
push
sub
dec
xor
sti
cwtl
add
add
test
add
add
test
pushl
inc
hlt
mov
mov
sub
mov
mov
cmp
xor
xor
shl
mov
mov
xor
add
mov
andl
addl
lea
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
mov
mov
adc
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
mov
lea
push
movl
xor
xor
cmp
ja
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
cmp
mov
mov
sbbb
mov
xor
add
mov
mov
mov
cmp
mov
mov
sbb
mov
mov
mov
movzwl
neg
mov
push
pop
sub
add
mov
or
mov
mov
xor
lea
mov
cmp
jne
cmp
movzwl
movzwl
sbb
mov
mov
xor
add
pop
pop
pop
leave
ret
mov
test
stc
push
mov
test
mov
adc
inc
inc
and
inc
je
popaw
inc
jl
xorb
mov
pusha
jno
mov
xchg
fbld
test
orb
xchg
nop
xorl
aam
std
movsl
mov
fcmovu
mov
shll
movsb
iret
fprem1
imul
lock
imul
shrl
sbb
into
jmp
hlt
adc
sbb
jecxz
loopne
sbb
ljmp
cmpsb
addb
ffree
movsb
mov
mov
mov
rcr
xlat
int
lret
cmpsb
fsubp
jmp
clc
fcmovnu
clc
loop
rcl
jecxz
shr
adc
enter
push
jecxz
or
out
out
add
loopne
div
or
in
xor
xor
pop
and
add
add
jmp
xor
and
xor
xor
cmp
pop
inc
or
xor
sub
jp
cmp
jl
cmp
jp
xor
jns
pop
cmp
dec
pop
je
pop
and
jno
outsb
and
jo
inc
jl
jae
addr16
jbe
xchg
xchg
je
jle
dec
jp
outsl
dec
test
inc
cmpl
pusha
lahf
mov
mov
lea
push
mov
bound
fstpl
aad
lea
iret
les
rcr
test
xlat
mov
icebp
icebp
out
mov
divl
test
out
jecxz
mov
clc
push
imul
loop
rol
iret
ret
jmp
or
mov
stos
mov
leave
sarb
enter
mov
repz
repz
out
cmpsb
int3
mov
scas
mov
mov
mov
scas
mov
roll
popa
inc
inc
and
inc
in
std
shr
call
ret
leave
out
leave
sti
sbb
in
sbb
adc
icebp
jmp
lock
mul
adc
leave
sbb
cmp
add
div
xor
out
xor
xor
and
daa
loope
or
and
sbb
xor
add
pop
push
sub
xor
cmp
push
dec
dec
push
pop
cmp
dec
cmp
je
jg
outsl
jge
sub
push
insb
and
dec
outsl
jno
dec
dec
bound
push
cwtl
imul
pop
xchg
dec
mov
xchg
imul
imul
fwait
xorl
nop
lods
sbbb
xchg
mov
mov
mov
lods
test
lea
mov
subl
test
movsl
test
mov
movsb
lret
fmulp
clc
mov
aad
out
cli
shl
stos
call
out
out
pop
sbb
out
lret
ret
fst
rclb
or
sti
sbb
rol
movsl
subl
mov
mov
shlb
out
sti
rcl
out
stos
ljmp
jecxz
sbb
sti
sbb
cld
rorl
ret
adc
in
imul
sbb
stc
add
shl
lds
loop
ret
sbb
icebp
add
pop
icebp
cmp
cmp
push
add
aas
pop
sbb
sbb
pop
pop
sbb
pop
sbb
cmp
sub
push
or
xor
push
inc
inc
or
dec
cmp
xor
inc
pop
jb
inc
pop
aaa
cs
jo
push
cs
pop
dec
inc
jbe
and
and
inc
dec
jno
and
pop
jnp
push
pushf
arpl
xchg
xchg
xchg
lcall
dec
nop
jne
mov
lods
mov
xchg
fs
mov
mov
lods
mov
mov
jg
inc
dec
mov
test
jns
sahf
mov
cwtl
jne
test
mov
push
frstor
xchg
sbb
xchg
lea
mov
lods
ror
movsl
mov
mov
test
ret
not
fstp
iret
fcmovnbe
jmp
jmp
iret
shr
loop
fsubrp
lret
adc
ret
loop
inc
or
or
test
movsb
xchg
incb
leave
mov
std
mov
dec
stos
cmc
aad
scas
int
clc
ljmp
jecxz
loopne
neg
lret
adc
lds
push
loope
adc
in
negl
imul
loopne
in
sbb
sbb
cmp
add
loop
sbb
sub
or
push
add
pop
and
add
cmp
push
add
loopne
xor
and
cmp
dec
es
xor
push
es
dec
jnp
pop
add
inc
cmp
jb
inc
jne
dec
inc
outsl
push
jns
jb
dec
insb
sub
dec
dec
arpl
jne
imul
sahf
outsl
lcall
insb
xchg
inc
inc
inc
pusha
insb
gs
insb
mov
push
gs
xchg
xchg
lcall
addr16
cmpsl
push
mov
stos
xchg
mov
cmpsb
mov
lods
mov
mov
aad
xchg
fisubrs
div
clc
sar
mov
sti
enter
scas
sti
icebp
shl
ret
in
shl
loopne
ror
push
fadd
int3
mov
shl
out
sbb
aam
lods
rol
aad
int
lods
std
cmpsl
clc
stc
fisubs
lock
aam
sti
stos
lods
scas
clc
fstp
test
hlt
out
stos
mov
mov
mov
mov
cmpsb
mov
cwtl
popf
inc
inc
scas
jg
inc
xlat
lcall
fstp
rcrl
ret
pop
out
lock
or
or
sbb
testb
loop
push
enter
ret
cli
sbb
cmp
jecxz
cmp
or
call
or
or
das
cmp
push
or
es
pop
cmp
pop
adc
das
dec
sub
push
or
push
add
cmp
xor
cmp
dec
push
xor
cs
das
sub
jbe
push
jo
jo
arpl
jle
dec
inc
pop
lahf
xchg
jno
push
outsb
jne
je
mov
jnp
xchg
jle
test
xorl
popf
mov
mov
mov
scas
stos
lcall
xchg
popa
test
mov
mov
mov
mov
mov
shrl
mov
into
cld
mov
lods
cmpsb
enter
jmp
test
sbb
fxch
idiv
out
int
adc
push
mov
shlb
ret
movsb
cmpl
movsl
cld
cmc
clc
movsl
scas
lods
in
int3
mov
lods
out
int
test
call
mov
in
push
call
repnz
mov
sub
movl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
mov
sbb
push
push
push
call
jmp
mov
movl
mov
cmp
ja
mov
lea
movzwl
add
mov
mov
mov
push
lea
mov
mov
mov
sub
mov
mov
push
push
mov
lea
mov
mov
xor
xor
sub
mov
mov
lea
mov
xor
xor
mov
xor
mov
mov
xor
add
mov
add
xor
mov
xor
xor
add
add
div
mov
cmp
je
movl
lea
mov
mov
xor
add
sub
mov
imul
mov
mov
cmp
je
movzbl
mov
xor
mov
mov
movl
cmpl
je
cmpl
jne
mov
xor
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
orl
movl
mov
cmp
jg
lea
mov
mov
xor
xor
or
mov
mov
adc
mov
mov
mov
sbb
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
cmp
mov
adc
mov
or
cmp
je
mov
xorl
jmp
mov
mov
xor
mov
and
mov
mov
add
mov
mov
cmp
je
mov
xor
add
mov
mov
mov
add
mov
mov
xor
add
andl
mov
inc
mov
cmpl
jne
adc
imul
imul
pushl
pushl
pushl
push
pushl
call
cmpl
jb
add
movl
xor
or
cmp
je
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
test
mov
sub
mov
mov
mov
inc
inc
xchg
inc
inc
inc
pop
dec
dec
and
and
js
je
es
imul
je
dec
insl
push
sub
push
dec
dec
dec
popf
dec
push
sahf
jl
bound
insb
js
mov
mov
xor
cmp
je
mov
addl
jmp
cmpsb
mov
mov
mov
movsl
mov
xor
stos
mov
test
xchg
pushf
cmc
mov
xchg
inc
inc
inc
popf
jno
insl
bound
dec
popf
ja
imul
test
popf
gs
lea
mov
mov
je
mov
jmp
mov
cmpsl
mov
arpl
test
mov
loopne
and
cmc
inc
inc
xchg
inc
inc
inc
mov
xchg
imul
xlat
ficomps
xchg
xchg
lods
adcl
fnstenv
shll
mov
mov
sbb
mov
test
std
inc
mov
and
inc
ret
sbb
adc
stc
add
or
aas
or
in
loopne
sbb
add
jecxz
out
lock
or
ss
push
loopne
sub
aas
pop
pop
add
push
add
adc
ds
cmp
aaa
dec
and
dec
pop
inc
and
cmp
jnp
jg
imul
jns
inc
pop
pop
outsl
jae
jb
push
dec
outsb
addr16
pop
xchg
dec
ja
jbe
jnp
xchg
jl
lcall
insl
jae
mov
jge
popf
xchg
imul
mov
mov
popa
subl
test
test
iret
mov
mov
shll
fbld
mov
mov
mov
rcl
sti
iret
shlb
int3
out
lret
leave
ror
jmp
adc
idiv
jecxz
adc
pop
adc
aad
int
stos
mov
stos
fiadds
imulb
ret
cld
clc
idiv
sti
std
in
scas
out
stos
aam
leave
rcl
out
fstp
jmp
loope
sbb
adc
decl
hlt
push
in
cmc
rcrl
repz
or
loop
ljmp
cld
repz
hlt
sbb
sub
cmp
jecxz
add
add
add
pop
push
pop
sbb
push
add
push
add
xor
sub
das
add
push
push
add
or
and
pop
jno
pop
dec
xor
insl
pop
and
daa
pop
insb
jbe
jae
outsl
sub
pushf
sub
dec
jns
inc
jge
imul
dec
dec
jge
test
inc
addb
push
mov
mov
mov
mov
add
xor
stos
mov
cmpsl
lcall
xchg
outsl
xchg
insb
xchg
xchg
pusha
cwtl
scas
insb
mov
mov
mov
mov
xchg
mov
mov
into
leave
mov
ret
rcl
cmpsb
into
std
mov
scas
mov
dec
out
int
int3
test
cmc
loope
loopne
test
sbb
fstp
fcompp
pop
adc
push
loopne
lock
out
xlat
icebp
mov
mov
mov
mov
scas
mov
mov
movsl
mov
in
fldl2t
movsl
cmc
les
enter
cmpsl
in
int3
out
adc
sbb
rcr
sbb
iret
pop
repnz
icebp
pop
into
ljmp
loop
or
or
push
call
lock
daa
out
or
adc
sub
sub
jecxz
sbb
add
adc
push
adc
pop
push
add
push
xor
adc
xor
push
and
sub
pop
js
aaa
inc
jns
js
xor
jl
cs
jb
inc
jno
dec
inc
inc
sahf
inc
and
inc
arpl
inc
jp
bound
outsb
push
dec
popf
xchg
jge
imul
jge
mov
jnp
mov
gs
jne
jae
push
lcall
mov
lea
mov
cltd
rorb
fcmovnbe
mov
fmuls
test
roll
lret
lret
sti
repnz
mov
into
fdivl
stos
out
int3
aad
in
sbb
lret
int3
ret
loope
std
neg
sar
sbb
lret
rorb
mov
mov
subl
mov
repz
inc
lods
ljmp
hlt
hlt
repnz
shl
stos
std
sar
sbb
shl
ficoms
mov
mov
clc
push
mov
mov
scas
mov
roll
inc
inc
adc
cld
lret
stc
pop
shr
leave
in
in
pop
in
hlt
adc
cmp
out
cmp
adc
ss
cmp
xor
in
or
in
sbb
cmp
sbb
ss
push
sub
push
sub
ss
push
aaa
mov
dec
sub
dec
ss
dec
cmp
das
push
xor
inc
daa
dec
inc
push
xor
inc
inc
inc
xor
dec
jl
dec
push
inc
pop
dec
dec
push
insl
inc
imul
outsb
inc
inc
outsb
jno
pop
insl
inc
pusha
popa
xchg
gs
cltd
xchg
inc
push
jl
push
push
xchg
arpl
xchg
mov
jae
outsl
imul
mov
jae
xchg
mov
xchg
mov
mov
test
mov
cwtl
xchg
fisubl
fstl
int3
int
mov
enter
stos
mov
mov
fldt
fcomip
xlat
aam
out
not
rol
mov
in
enter
repz
adc
loope
adc
fcmove
mov
ret
aam
sti
stc
mov
repz
mov
lock
aad
lods
scas
stos
cmpsb
loopne
aam
shr
shr
neg
sbb
sti
adc
fdivp
sbb
or
or
adc
jecxz
rcll
mov
repnz
or
pop
pop
decb
loopne
clc
lock
loope
hlt
loopne
jmp
ss
cmp
cs
or
sub
cmp
cmp
sub
das
xor
xor
dec
xor
xor
ss
inc
xor
inc
and
add
pop
and
pop
outsl
dec
xor
jns
jb
das
xor
imul
push
dec
pop
dec
jnp
popa
pop
jns
push
popa
xchg
xchg
xchg
je
insl
push
push
popa
mov
push
xchg
fwait
push
xorb
test
mov
sahf
mov
mov
scas
mov
mov
mov
scas
adc
sbb
xchg
inc
inc
adc
inc
orb
lahf
insb
fwait
xchg
cltd
mov
xchg
mov
ficompl
cmpsb
mov
mov
lods
movsl
lods
mov
aad
int3
test
lret
rol
cli
mull
mov
repz
fmul
ret
out
mov
cli
ret
adc
enter
into
int3
ret
cli
lret
mov
lret
leave
mov
int3
mov
sar
std
fldenv
mov
stc
shr
cmc
in
cmc
int
ljmp
enter
push
out
adc
enter
cmc
aad
adc
cli
in
pop
adc
or
aas
push
jmp
in
testb
sbb
sub
sub
add
and
sub
or
and
sbb
cmp
xor
sbb
cmp
pop
dec
push
cs
xor
and
cmp
inc
push
jnp
pop
sub
pop
push
and
inc
jb
sub
dec
push
jbe
and
outsb
dec
popf
inc
jl
insl
jl
push
fwait
jno
inc
jbe
jbe
sahf
imul
xchg
mov
je
inc
imul
push
xchg
outsb
jno
cwtl
mov
cltd
cmpsb
xchg
bound
sahf
lods
xchg
mov
fnstsw
int3
mov
aam
xchg
mov
nop
lret
xchg
xorl
rcl
cli
movsl
fcmovnu
repnz
aam
int
stc
hlt
jmp
stos
ret
fdivrp
rcrl
out
int
out
lds
jecxz
loopne
adc
or
test
scas
stos
push
mov
push
cmpl
je
pushl
mov
pushl
mov
pushl
call
jmp
mov
mov
inc
sub
mov
dec
mov
inc
pusha
inc
inc
inc
inc
scas
ret
aad
shlb
shl
fsubrl
out
rcl
push
lret
movsb
cli
loopne
inc
or
inc
adc
iret
xor
movl
mov
mov
mov
push
mov
cmp
mov
je
movl
cmpl
je
cmpl
jne
sbb
xor
add
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
xor
lea
xor
cmp
jne
jmp
lea
movl
mov
cmp
jne
xor
add
and
mov
movzbl
add
mov
mov
xor
add
mov
mov
xor
xor
mov
mov
lea
mov
xor
add
xor
add
sub
mov
mov
mov
add
push
pushl
push
pushl
cmp
sbbl
orl
call
mov
mov
pop
pop
leave
ret
sub
mov
mov
daa
mov
stos
scas
mov
jo
mov
aaa
xchg
inc
inc
and
inc
mov
test
scas
enter
cmc
lods
mov
in
mov
repnz
jmp
not
shl
into
test
sti
ret
sbb
xlat
jecxz
adc
pop
or
shl
cmc
repz
or
or
loopne
add
or
push
push
out
xor
or
sub
jmp
daa
adc
pop
add
pop
sub
and
cs
aas
push
cmp
or
push
push
or
sub
or
es
push
and
and
xor
outsl
jae
jge
push
outsb
dec
imul
daa
sub
inc
outsb
inc
fs
pop
inc
pushf
pushf
jp
jnp
inc
jbe
xchg
lahf
inc
bound
xchg
jnp
dec
xchg
dec
jae
inc
imul
gs
mov
mov
mov
outsb
mov
stos
mov
lahf
pushf
mov
movsl
mov
popf
movsl
xchg
xchg
mov
xchg
ret
rorb
mov
sar
aam
shl
shl
cmc
leave
rol
lods
lds
mov
loope
mov
fadd
sbb
aad
loop
shr
hlt
ror
fldt
mov
cmpsl
clc
mov
fidivs
scas
repnz
call
out
cli
jecxz
out
leave
sbb
cli
faddp
jmp
cmc
cmc
loop
adc
ljmp
out
adc
shl
ljmp
cmp
sbb
add
or
xor
sub
out
sub
cmp
pop
cmp
and
adc
xor
adc
or
dec
push
and
inc
sub
dec
jns
pop
jl
sub
and
push
jae
dec
and
jnp
pop
jp
dec
outsb
inc
inc
mov
cmpsl
mov
stos
imul
mov
mov
adc
inc
inc
and
inc
jno
outsl
pop
bound
dec
inc
inc
fwait
inc
xchg
jg
cwtl
je
jns
mov
outsb
xchg
jns
xchg
inc
imul
fs
xchg
mov
xchg
test
insb
je
jno
cmpsl
mov
mov
addb
movsb
mov
mov
mov
aam
aad
les
ret
mov
leave
hlt
fcmovu
mov
fsubs
sti
fucomp
jmp
loopne
shlb
out
les
cld
push
cli
clc
sbb
call
mov
xchg
into
mov
lods
mov
movsb
lods
int3
cmc
fst
mov
fsub
leave
hlt
rol
fucom
out
mov
pop
lret
adc
cmc
adc
test
adc
add
out
loop
sbb
call
jecxz
in
adc
sbb
cmp
cmp
ljmp
sub
xor
add
jecxz,pn
loop
ds
sbb
push
push
and
cmp
pop
cmovs
cmp
xor
push
dec
sub
jl
aas
push
and
cmp
sub
pop
dec
das
push
outsb
pop
jbe
push
sub
arpl
daa
outsl
and
pop
pop
fs
lcall
jne
jg
jle
inc
push
arpl
orb
inc
lcall
js
fs
mov
ja
push
push
mov
mov
mov
subl
xchg
orl
subb
stos
movsb
aad
mov
ffree
in
cmc
shrl
icebp
ljmp
loope
fstpl
call
jmp
lcall
jmp
mov
xlat
mov
stos
test
movsb
mov
xor
xorb
scas
mov
notl
inc
inc
leave
test
test
lret
ret
lret
leave
enter
shr
mov
repz
jmp
clc
in
int3
jecxz
lret
notl
adc
stc
push
iret
loop
hlt
imul
sbb
in
enter
cmp
add
cli
add
xor
add
xor
cmp
pmaddwd
and
or
cmp
sub
cmp
add
pop
xor
adc
das
pop
sub
sub
das
aas
dec
xor
dec
inc
dec
and
jbe
aaa
daa
jge
jno
push
push
dec
xor
insb
sub
push
inc
jne
and
inc
popf
insl
push
xchg
xchg
dec
addr16
jg
push
inc
pushf
jge
xchg
dec
jp
insl
xchg
sbbl
arpl
insb
mov
mov
orb
pushf
mov
mov
cmpsb
xchg
lahf
lahf
pusha
fsubl
mov
nop
mov
int3
stos
nop
mov
rcr
rcl
stos
lods
mov
mov
mov
lods
mov
stc
sti
mov
in
shrl
enter
loope
in
iret
in
ret
ret
cmc
sbb
adc
shl
ret
std
cli
std
loopne
lods
aad
subl
scas
mov
div
hlt
aam
mov
enter
cmpsb
out
ljmp
rcr
pop
aad
fcomip
fstl
rcll
cld
sbb
into
jmp
ret
in
out
push
sbb
loopne
aaa
loopne
add
pop
sub
cmp
or
add
and
xor
and
push
in
lsl
pop
and
aaa
pop
sbb
or
sub
inc
add
add
pop
sub
and
xor
inc
ja
push
jne
push
outsb
push
dec
sub
jno
inc
push
cmpsb
mov
movsl
xchg
pop
add
mov
scas
mov
xlat
popl
loop
inc
inc
outsb
inc
pop
and
jnp
xchg
dec
dec
inc
popa
xchg
fwait
fwait
push
inc
arpl
je
push
imul
dec
js
outsb
test
mov
adcl
stos
fwait
cmpsb
xchg
fs
test
fidivrl
xorl
mov
test
cmpsb
test
iret
cli
ret
mov
out
mov
fcomp
into
fsubrs
into
loope
mov
sbb
in
sbb
out
adc
aam
rcrb
mov
fmul
stos
lds
mov
cli
fcomip
mov
fmul
fxch
in
in
mov
mov
std
sti
rol
scas
rcr
mov
cld
in
leave
jmp
fcoms
adc
jecxz
shl
shr
std
jmp
add
in
jecxz
add
sbb
shl
loopne
cmp
xor
repnz
adc
daa
jmp
push
push
loop
push
xor
cmp
pop
aas
and
add
sbb
cs
sub
inc
push
inc
sub
or
sub
cmp
xor
jae
and
insl
jnp
jno
push
js
and
popa
sub
jge
jo
dec
pop
inc
pop
popa
lcall
outsl
inc
lea
inc
cltd
imul
bound
mov
mov
mov
insl
cwtl
lea
adcl
movsl
xlat
mov
xchg
fidivs
stos
aad
scas
mov
mov
push
mov
sub
movl
push
xor
add
and
movl
movl
cmpl
je
cmpl
jne
add
mov
mov
imul
push
call
mov
dec
mov
jmp
mov
movl
mov
cmp
ja
mov
dec
mov
push
mov
xor
or
sub
xor
push
mov
xor
or
subb
add
mov
mov
mov
add
xor
add
mov
jmp
mov
mov
xorl
subl
xorl
xor
add
mov
inc
cmp
jb
mov
xor
add
mov
cmp
jae
jmp
mov
mov
mov
xor
lea
addl
cmp
subl
orl
sbbl
mov
sub
add
mov
mov
cmp
jae
jmp
movl
mov
cmp
jg
mov
push
call
mov
xor
xor
or
mov
mov
imul
mov
lea
mov
orl
xor
movl
cmpl
je
cmpl
jne
push
pushl
call
xor
add
dec
mov
jmp
mov
add
and
mov
cmp
jae
mov
andl
mov
xorl
mov
adcl
andl
xor
add
push
mov
or
mov
xor
add
push
movl
mov
cmp
jge
mov
add
push
movzbl
xor
mov
pushl
call
mov
mov
add
mov
xor
lea
cmp
jb
cmp
lea
mov
mov
mov
adc
mov
mov
add
mov
mov
xor
lea
mov
cmp
jb
cmp
mov
mov
adc
mov
mov
mov
mov
add
mov
xor
lea
mov
cmp
jb
movl
cmpl
je
cmpl
jne
xor
or
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
xor
add
cmp
jb
xor
mov
mov
sub
mov
add
pop
pop
mov
mov
pop
leave
ret
lods
mov
movsl
lods
aad
pop
pop
mov
cmpsb
mov
jmp
int3
push
jns
inc
inc
and
inc
mov
mov
mov
mov
mov
mov
mov
stc
jecxz
hlt
cmpsl
call
fmul
jmp
ret
ret
aam
xlat
cld
out
or
movl
fiaddl
mov
cmpsb
fcomip
ret
div
out
cmpsl
test
ljmp
rcrb
adc
hlt
fistl
adc
bswap
out
aad
or
add
push
add
ret
icebp
push
sbb
aaa
pop
out
pop
cld
jmp
loope
push
or
cmp
and
pop
adc
pop
pop
and
jecxz
push
pop
sub
adc
cmp
push
adc
cmp
sub
inc
inc
and
inc
jle
js
pop
pop
xor
xor
jg
push
jle
dec
pop
js
jno
dec
inc
push
jne
push
inc
push
dec
xchg
push
inc
jb
inc
jge
dec
dec
push
xchg
inc
cwtl
jno
jo
inc
mov
lahf
subl
mov
mov
mov
jno
xchg
xchg
mov
lods
mov
scas
popf
mov
fisttpl
mov
mov
cmpl
mov
test
shlb
fildl
mov
mov
shrb
test
jmp
inc
fmul
aad
enter
pop
adc
aam
decb
mov
int3
cmpsb
scas
mov
into
ret
cmpsl
sti
rol
movsb
cmpsl
lods
mov
fdivrp
xlat
mov
cld
in
call
cmpsl
ret
loop
stos
call
rcl
ljmp
iret
adc
icebp
loop
repz
or
pop
adc
in
or
unpcklps
add
decb
aaa
or
in
ss
ds
xor
or
adc
adc
xor
mov
adcl
mov
lods
mov
mov
adc
mov
and
inc
loope
in
cmp
sub
push
sbb
pop
xor
aaa
dec
push
or
and
and
add
cmp
jg
dec
cmp
pop
push
je
jno
pop
imul
sub
push
and
and
bound
jp
addr16
inc
pop
jo
jns
jle
pop
mov
xchg
mov
mov
mov
test
jb
xchg
mov
mov
mov
gs
mov
lods
imul
xchg
fnsave
mov
test
mov
mov
mov
addb
test
cli
mov
cli
mov
fmulp
in
mov
out
repnz
out
mov
sbb
enter
adc
lock
clc
loope
cld
aam
test
subb
xchg
movsl
mov
repz
fstpt
stos
stos
lock
lock
ljmp
jecxz
lret
cli
cld
ret
adc
out
sbb
jmp
in
or
ljmp
add
shr
add
notl
hlt
jmp
cmp
icebp
aaa
daa
ljmp
and
cmp
cmp
sub
add
and
pop
and
pop
push
push
dec
add
xor
cs
das
sub
inc
dec
cs
and
ja
jnp
cmp
jae
cmp
jp
jae
push
jb
dec
dec
insl
outsl
das
inc
and
dec
dec
jo
pop
inc
cltd
xchg
xchg
jge
inc
jno
xchg
jno
push
push
inc
dec
mov
xchg
insl
gs
xchg
xchg
addb
xchg
gs
mov
je
cwtl
pusha
lahf
mov
mov
mov
addr16
xchg
cmpsl
mov
mov
lea
mov
filds
aam
subb
enter
mov
adc
mov
test
mov
lods
cmp
inc
inc
leave
test
or
cli
sti
ffreep
test
in
movsl
mov
mov
out
cmpsl
repnz
out
sbb
lret
fistpl
adc
or
leave
xchg
ret
movsl
rcl
lods
scas
fst
mov
rcl
lods
stos
lods
hlt
lock
into
in
ret
iret
in
movsb
mov
pop
sbb
ret
rcrl
pop
icebp
adc
out
or
out
in
adc
cli
sbb
cmp
cmp
sbb
loop,pn
push
xor
xor
in
es
push
xor
push
sub
sbb
pop
or
aaa
cmp
sbb
adc
xor
and
cmp
sub
jg
jle
dec
inc
jne
push
pop
jnp
pop
es
jo
push
pop
xor
pop
push
push
push
sub
sub
and
jl
jg
pop
arpl
jae
js
outsb
dec
xchg
mov
jo
ja
mov
pushf
arpl
mov
xorb
pushf
je
movsl
xchg
xchg
mov
mov
popf
test
test
sbbl
stos
mov
aam
xchg
sar
int3
cmpsl
enter
enter
stc
clc
mov
call
enter
ret
into
mov
cli
hlt
cli
sbb
loop
hlt
or
rorl
mov
cmpsl
aam
enter
lods
clc
mov
enter
mov
in
xlat
mov
int3
repnz
hlt
imulb
call
jecxz
leave
out
les
out
loope
jecxz
icebp
sbb
mov
leave
out
out
add
loopne
pop
out
loop
in
cmp
push
adc
xor
cmp
mov
mov
mov
in
cs
mov
stos
mov
mov
sbb
inc
inc
cs
sub
nopl
cmp
pop
sbb
add
sbb
pop
sub
or
sub
jg
add
push
and
pop
es
ja
cmp
ss
xor
dec
pop
dec
insl
dec
daa
push
fs
dec
jnp
bound
jg
jns
dec
fwait
pop
inc
pushf
jnp
jle
pushf
jnp
fwait
jne
dec
mov
xchg
arpl
push
push
xchg
mov
jl
cltd
mov
mov
mov
mov
lcall
frstor
mov
mov
mov
scas
mov
xchg
rorb
int3
rcl
std
mov
idiv
lods
cmpsl
mov
iret
mov
test
enter
ljmp
ror
push
fadd
adc
sbb
rcll
cmc
cld
cmc
mov
test
xchg
stc
test
cmpsl
stc
aad
out
std
shl
mov
clc
scas
mov
into
clc
shl
cmpsb
in
movsb
cmpsl
ror
pop
adc
repz
push
or
push
cld
sbb
cld
add
add
jmp
sbb
sbb
adc
sbb
cmp
aas
cmp
and
sbb
sub
or
cs
sbb
or
push
adc
pop
xor
sub
sub
cmp
pop
and
and
dec
sub
daa
inc
inc
pop
jb
pop
cmp
inc
pop
push
pop
jp
jno
dec
push
pop
outsb
jnp
js
dec
jge
bound
jge
cwtl
pop
lea
mov
inc
xchg
lahf
mov
mov
bound
bound
lea
scas
mov
mov
movsl
mov
shlb
stos
mov
mov
mov
mov
test
mov
mov
stc
xchg
roll
inc
mov
fdivrp
mov
test
lods
cmpl
out
mov
scas
mov
ljmp
in
sbb
call
sbb
repz
adc
xlat
cmc
stc
pxor
in
lret
mov
test
mov
test
mov
iret
shl
shl
repnz
movsb
enter
movsb
shl
fadd
sbb
push
mov
sub
movl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
mov
mov
mov
sub
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
mov
cmp
jbe
mov
xor
add
mov
mov
cmp
jae
push
mov
xor
xor
sub
mov
mov
xor
add
mov
or
mov
mov
mov
mov
mov
mov
or
mov
mov
mov
mov
mov
orb
mov
mov
mov
cmp
mov
adc
mov
xor
lea
mov
mov
cmp
jb
pop
mov
leave
ret
mov
mov
iret
int
mov
lods
mov
mov
clc
dec
xchg
and
inc
adc
shr
sti
jecxz
sbb
loope
shl
stc
rol
adc
or
push
push
loop
in
sbb
ret
add
push
cmp
in
sub
xor
ds
adc
add
add
loop
sub
or
push
xor
xor
pop
dec
cmp
push
push
inc
push
sub
push
dec
xor
inc
pop
pop
push
pop
cmp
sub
jge
jg
dec
outsb
jns
inc
sub
and
pusha
insl
arpl
lahf
pusha
lcall
jg
mov
push
cwtl
mov
jb
insw
jo
popa
mov
jno
cmpl
xchg
mov
arpl
data16
pusha
lods
fildl
mov
xchg
mov
mov
cmpsb
mov
mov
movsl
cld
movsb
lret
lret
mov
ret
mov
mov
test
imul
lret
enter
std
cli
in
pop
in
sbb
sbb
repnz
ret
mov
iret
stos
stos
mov
test
cld
rcl
repnz
into
int3
into
aam
enter
out
cmc
out
call
ret
pop
fcomi
fcomps
cld
adc
sbb
sti
jmp
ljmp
add
out
or
push
or
cmp
cld
hlt
adc
or
lock
sbb
xor
add
sub
push
cmp
loopne
and
push
dec
push
sub
xor
daa
pop
cmp
cs
xor
inc
pop
dec
das
dec
dec
pop
inc
jle
jns
dec
and
cmp
push
pop
pop
push
sub
sub
and
dec
jae
inc
dec
lahf
inc
inc
cwtl
pop
jg
ja
xchg
outsl
jle
insl
jo
dec
jge
je
jp
imul
jnp
inc
push
scas
cmpsl
mov
mov
mov
scas
mov
test
out
ljmp
and
inc
popaw
lcall
fwait
sahf
imul
stos
lods
addr16
xchg
cmpsl
lods
cltd
fcomps
mov
mov
aad
scas
mov
pushl
lods
mov
mull
faddp
sarl
jmp
shl
stos
ret
lock
cli
cld
faddp
cmc
in
sbb
adc
in
iret
pop
adc
push
fisubrs
stos
lret
lret
mov
neg
aam
mov
ret
fcom
shl
stos
cli
out
stc
mul
cmpsb
rcr
cli
call
ret
in
loop
stc
cmc
icebp
lock
not
call
add
pavgb
sbb
in
or
add
aas
loop
icebp
lock
push
adc
add
xor
sub
push
or
xor
ss
xor
sub
xor
xor
dec
xor
and
dec
jle
push
dec
sub
and
jae
pop
jl
je
dec
jnp
sub
jae
push
lahf
push
inc
dec
inc
push
xchg
gs
inc
push
inc
push
inc
xchg
popf
mov
cwtl
imul
popa
arpl
bound
jbe
jne
data16
lods
lods
js
mov
test
bound
lods
stos
lods
mov
sbb
mov
rcll
mov
shrl
lret
cmpsl
std
cmpsl
mov
fcmovnb
mov
hlt
clc
cmc
int3
into
cmc
out
enter
lods
jmp
sbb
ret
fcomi
lds
adc
sbb
sti
push
adc
ror
int
lods
roll
lods
mov
xlat
mov
jmp
fsubp
leave
out
lock
int
aad
iret
jmp
rcrl
lcall
enter
mov
movsl
mov
test
mov
scas
mov
je
or
inc
inc
and
inc
fld
lock
in
in
pop
rorb
lret
lret
lock
ret
rorl
out
add
cmp
cmp
or
xor
jmp
adc
push
adc
sub
pop
ds
push
add
sbb
xor
dec
or
sub
and
inc
push
jg
sub
cmp
pop
inc
pop
jbe
jg
dec
jle
pop
pop
jo
sub
inc
jne
dec
popa
inc
ja
jg
popf
insb
jns
dec
pop
arpl
xchg
fwait
outsl
jle
inc
jge
sahf
ja
inc
imul
cmpb
mov
jno
je
imul
xchg
sahf
ficoms
test
movsl
pushf
mov
test
mov
iret
xchg
cmpsb
movb
int3
int3
not
icebp
shlb
aad
out
sar
int3
test
out
lret
out
cli
stc
into
sbb
rcl
repnz
jmp
aad
ret
fcom
leave
mov
lret
add
mov
cmc
cmc
mov
lret
rcl
repnz
fldz
shl
shl
ret
enter
in
fcoml
repnz
sbb
into
sbb
out
loope
call
add
loop
ud2
cmp
rorl
sbb
cli
sbb
loopne
add
push
or
lock
adc
jecxz
in
aas
ds
cmp
pop
sub
pop
sub
pop
add
pop
xor
dec
dec
adc
sub
sub
push
xor
sub
inc
add
pop
pop
inc
inc
cmp
jle
jge
je
push
jg
push
sub
fs
pusha
and
jo
push
dec
and
jae
js
popl
push
pusha
imul
inc
push
mov
insb
inc
inc
adcb
jge
jl
jge
mov
test
mov
repnz
mov
mov
addr16
addb
jg
inc
mov
mov
lea
imul
test
mov
mov
cmpsb
cmpl
xchg
scas
xchg
fdivrs
mov
mov
add
shlb
ret
int
mov
mov
lods
fldt
lock
iret
test
in
mov
fsubp
sbb
leave
jmp
loop
aad
into
jecxz
sbb
mov
mov
xchg
scas
scas
stos
mov
mov
stc
scas
shll
scas
out
aam
cmpsl
in
in
loope
jmp
mov
sbb
jmp
bswap
rol
push
ror
clts
or
movl
rolb
in
call
out
repz
jecxz
stc
loop
ljmp
out
jecxz
adc
pop
adc
cmp
cmp
adc
aas
inc
pop
ss
pop
and
dec
add
cmp
sub
aas
xor
aaa
inc
outsl
pop
pop
das
sub
inc
jno
dec
jae
dec
inc
popf
daa
bound
push
dec
sahf
pop
inc
jbe
pusha
push
jno
xchg
mov
push
mov
jle
addl
xchg
push
mov
lea
mov
lods
xchg
mov
movsb
lahf
mov
mov
fnstcw
scas
xlat
mov
movsl
mov
cmpsl
mov
mov
lds
into
jmp
stos
repnz
std
sti
lret
mov
out
scas
cmc
ljmp
sti
jecxz
lret
sbb
in
sti
leave
pop
fsubs
mov
movsl
shlb
aam
shr
cmpsl
mov
lods
div
mov
call
ljmp
fsub
out
mov
mov
jle
mov
mov
mov
int3
mov
inc
inc
aad
fistl
adc
jmp
out
mov
sub
push
movl
movl
andl
push
cmp
movzbl
sbb
movzbl
or
movzwl
add
movzwl
add
mov
test
xor
add
adc
mov
mov
or
movzwl
sub
mov
or
mov
cmp
movzwl
adc
mov
mov
add
cmp
movzbl
sbb
movzbl
or
mov
xor
movzwl
xor
cmp
mov
sbb
cmp
mov
sbb
mov
mov
and
mov
cmp
mov
mov
adc
mov
and
mov
mov
sub
test
mov
mov
sbb
xor
or
sub
mov
xor
xor
xor
and
mov
test
mov
adc
xor
or
or
mov
movzwl
and
mov
movzbl
or
mov
pop
xor
lea
rep
push
push
lea
push
push
push
call
mov
movl
andl
cmpl
je
push
mov
xor
add
push
mov
add
push
mov
pushl
call
push
mov
xor
add
push
mov
add
push
mov
pushl
call
mov
xor
dec
xor
mov
cmpl
je
movl
push
mov
xor
add
push
mov
add
push
mov
pushl
call
call
mov
push
mov
xor
add
push
mov
add
push
mov
pushl
call
jmp
mov
mov
imul
stos
mov
lods
adcb
inc
addl
stc
out
aam
loope
cld
adc
pop
or
lods
mov
into
mov
mov
scas
test
cmpsb
mov
aad
rcr
movsl
into
mov
fsubrp
cmpsl
fsubr
in
hlt
shrb
repz
add
add
ret
mov
mov
test
mov
stos
mov
xor
out
mov
inc
inc
or
sbb
clc
adc
jmp
sbb
out
cli
add
sti
push
adc
xor
or
pop
adc
adc
sub
adc
loope
pop
add
sub
pop
sbb
pop
cmp
dec
pop
cmp
cmp
inc
dec
xor
sub
dec
and
inc
inc
jne
jp
inc
jl
je
outsb
imul
jle
jnp
insl
jne
sub
push
inc
jo
push
imul
xchg
ja
jbe
imul
xchg
jae
jne
outsl
inc
nop
sahf
xchg
mov
ja
subl
lods
stos
mov
xchg
xchg
mov
xchg
lods
lods
cmpsl
xlat
cmpsb
lcall
mov
fimuls
fxch
shlb
stos
subl
fbstp
mov
icebp
mov
out
ljmp
into
jecxz
sbb
clc
in
not
sbb
clc
pop
stc
jecxz
ror
or
rorb
movsl
xchg
cld
lods
test
into
cmpsl
cld
not
mov
repnz
sar
stc
repz
lock
movsb
test
in
in
stc
stc
rol
rcrl
pop
cmc
in
adc
push
call
push
cli
or
out
add
add
adc
sbb
xor
adc
sbb
push
jmp
cmp
or
pop
or
pop
xor
and
pop
sub
aas
pop
push
and
add
pop
xor
sub
and
pop
pop
pop
cmp
cmp
pop
insb
ja
push
je
push
dec
dec
pop
insl
sub
popa
and
inc
outsb
ja
lahf
inc
sahf
jae
jno
xchg
jne
xchg
mov
jp
insb
insl
jae
dec
arpl
inc
mov
addb
mov
jb
mov
mov
scas
cmpsb
scas
mov
popa
mov
mov
mov
fidivrs
inc
mov
xchg
push
sbbb
movsl
aam
xchg
cmpsl
mov
int
mov
mov
adc
mov
pushl
clc
into
fcomp
repz
enter
mov
sbb
lret
in
push
jecxz
rol
idiv
push
rcrb
stos
leave
xlat
test
scas
ret
call
int
mov
divb
mov
ret
rcr
mov
lods
cmc
movsb
repnz
shl
pop
fsubp
sbb
icebp
cli
sti
or
sbb
jmp
push
or
repz
lds
push
push
in
aas
or
cmp
out
jecxz
xor
add
adc
adc
stc
out
xor
or
das
aaa
add
add
pop
add
or
and
and
adc
add
dec
push
push
xor
push
dec
add
sub
pop
and
inc
pop
cmp
jg
pop
push
dec
and
push
dec
pop
jb
push
jae
push
inc
dec
jo
pop
imul
jnp
xchg
xchg
pop
inc
jae
popa
popa
jnp
mov
dec
dec
outsb
arpl
sahf
mov
popf
mov
mov
sahf
cwtl
mov
addr16
test
lahf
fwait
addr16
mov
mov
or
int
lret
mov
mov
scas
sarb
mov
hlt
iret
mov
icebp
test
lret
leave
out
loop
jmp
sbb
sbb
pop
repz
shl
int
loope
mov
fnsave
mov
int3
mov
std
clc
mov
scas
mov
fnstenv
cli
cmc
into
out
pop
mov
loope
int
sbb
fsubr
loope
adc
cmpsb
mov
cmpsb
test
mov
mov
das
pop
mov
jg
inc
push
sbb
or
or
loope
jecxz
lock
cmp
cmp
call
das
clc
aas
adc
out
sub
sub
or
jecxz
xor
pop
add
add
add
pop
or
aaa
and
push
adc
push
xor
cmp
dec
pop
es
xor
dec
jle
inc
inc
inc
sub
jne
cmp
push
and
xor
jo
je
dec
ja
push
sub
push
jnp
popa
pop
jg
inc
jg
inc
inc
lahf
push
push
js
dec
jno
push
gs
jo
mov
fwait
addr16
lcall
andb
cmpsl
mov
lods
nop
push
test
popf
mov
xchg
mov
mov
mov
lret
shll
fildll
movsb
mov
not
mov
xlat
leave
aad
test
stos
ret
in
mov
mov
ljmp
clc
adc
cli
loope
fcom
mov
enter
mov
test
mov
not
fdivp
into
aam
divb
shl
lret
sbb
mov
div
sti
std
hlt
sbb
push
shl
pminsw
hlt
adc
add
ds
in
ds
loopne
add
or
add
sbb
repnz
sub
adc
and
out
cmp
es
or
cmp
daa
cmp
cmp
cmp
sub
xor
xor
dec
pop
add
sub
inc
jp
cmp
push
push
inc
jb
push
inc
push
jo
dec
push
jno
pop
jne
dec
and
and
bound
xchg
js
arpl
push
nop
xchg
pusha
sahf
jae
lea
jne
jbe
popa
popa
nop
mov
mov
xchg
xchg
gs
fwait
bound
test
mov
mov
cmpsb
mov
lods
mov
mov
negb
jg
inc
xchg
mov
movsb
addr16
mov
mov
cmpsl
mov
mov
mov
lods
int3
xchg
mov
rol
leave
fisubl
fcmovnu
fbstp
lods
out
repz
sti
imul
lret
shr
rcrl
lcall
jmp
push
test
pop
aam
into
movsl
stos
cmpsb
xchg
addl
std
iret
ljmp
mov
int3
leave
stc
repnz
iret
test
aad
lret
jmp
std
jmp
int
clc
push
in
std
negl
loopne
sbb
icebp
adc
jecxz
ljmp
aaa
cmp
push
divl
ds
loop
loope
push
jmp
adc
or
pop
and
add
ds
pop
pop
sbb
adc
add
push
ds
push
or
sub
and
jg
jg
xor
js
es
cmp
and
das
jbe
dec
insb
xor
jle
dec
ja
inc
insb
jbe
outsl
and
jg
pop
pop
jp
jp
inc
jns
insl
push
mov
sub
mov
mov
xor
or
xor
add
sub
mov
mov
mov
movl
mov
cmp
jge
mov
movzwl
adc
mov
movl
andl
mov
inc
mov
cmpl
jne
mov
add
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
push
xor
add
add
push
push
mov
xor
mov
add
mov
movl
test
xor
or
adc
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
push
mov
xor
add
movl
xor
or
cmp
jge
push
mov
xor
xor
add
mov
xor
add
push
cmp
je
movzwl
xor
mov
jmp
mov
xor
mov
sbb
pushl
mov
test
xorl
adcl
andl
lea
call
test
je
lea
push
mov
xor
add
push
mov
xor
mov
mov
add
push
cmp
movzbl
sbb
mov
mov
mov
pushl
call
mov
jmp
cmp
mov
adc
mov
lea
mov
test
je
lea
push
mov
xor
add
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
sbb
mov
mov
and
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
imul
mov
xor
add
push
pushl
andl
subl
orl
lea
pushl
call
test
je
lea
push
movl
mov
cmp
jb
mov
mov
andb
mov
sub
mov
add
mov
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
cmp
lea
mov
mov
movzwl
sbb
mov
xor
mov
sub
mov
sub
mov
sub
add
mov
pushl
xor
mov
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
addl
call
mov
mov
add
pop
pop
pop
leave
ret
mov
mov
test
scas
cmpsb
cmpsb
mov
lods
lods
mov
xchg
inc
inc
dec
popf
imul
ja
dec
inc
mov
mov
pushf
mov
mov
jae
xchg
mov
xchg
xchg
cmpsb
scas
cmpsb
lcall
xlat
mov
mov
mov
fsubrs
movsl
or
cli
dec
mov
repz
jmp
mov
mov
cmpsb
test
stos
shlb
in
pop
jmp
loopne
or
adc
mov
int3
mov
fildll
fprem1
repz
iret
hlt
std
rcl
ljmp
mov
mov
push
sbb
sbb
adc
or
add
add
ret
add
cmp
xor
aaa
hlt
repz
pop
out
cmp
es
cmp
xor
or
add
add
sub
and
sbb
pop
pop
pop
inc
inc
dec
xor
cs
push
dec
dec
inc
inc
cmp
and
and
and
pop
xor
pop
insl
sub
ja
outsb
lahf
dec
and
dec
dec
xchg
push
ja
push
pushf
jno
fs
inc
xchg
lcall
test
mov
mov
cltd
mov
mov
subl
xchg
scas
xchg
fiadds
xchg
mov
shrl
xchg
mov
cld
sar
enter
mov
in
shrb
enter
mov
mov
sti
push
rcr
ret
les
adc
cli
mov
mov
movsb
sti
cmp
movsb
fnstcw
test
mov
mov
idivb
mov
mov
stos
dec
in
data16
inc
and
inc
lock
lock
test
cli
hlt
out
out
loopne
jmp
loopne
adc
repnz
clc
xlat
or
ror
bswap
sbb
lret
notb
add
adc
add
push
call
in
cmc
push
jmp
sbb
add
cmp
daa
jmp
add
adc
add
pop
and
sbb
pop
and
sbb
and
push
or
cmp
inc
maxps
inc
add
sub
inc
and
xor
es
push
xor
dec
sub
outsl
jno
outsl
dec
inc
inc
dec
dec
jl
imul
inc
pop
sahf
push
jp
dec
xchg
cwtl
push
sahf
jnp
inc
jae
outsl
bound
insb
bound
outsb
test
test
xchg
test
ja
xchg
mov
scas
mov
xchg
stos
xchg
fbld
movsl
xchg
aad
mov
stos
mov
lret
mov
clc
mov
rcl
stos
sti
rol
mov
scas
repnz
in
in
lock
std
stc
out
in
loopne
out
aad
or
psubq
xchg
mov
mov
aam
std
mov
ljmp
movsb
lods
in
out
aam
hlt
leave
lret
in
in
fdecstp
cld
loopne
sti
in
shl
stc
icebp
rcrb
pop
jmp
adc
or
out
cmp
jmp
rcll
hlt
stc
cmc
adc
das
adc
loopne
out
sbb
lock
aas
push
sub
sub
push
or
cmp
adc
das
sbb
push
ds
xor
inc
sub
push
push
jg
das
inc
inc
sub
and
and
xor
pop
jno
cs
dec
jnp
push
jne
push
dec
and
pop
insl
pop
xchg
pusha
pusha
xchg
push
jg
lods
cmpsl
scas
mov
sub
adc
mov
test
lahf
je
inc
mov
inc
and
inc
inc
push
dec
jle
jo
jnp
dec
inc
dec
test
inc
xchg
addr16
fwait
mov
pusha
gs
xchg
mov
insl
xchg
fwait
xchg
mov
frstor
mov
mov
cwtl
mov
xchg
adcb
shll
aad
lret
fsubrl
clc
ret
stos
ret
mov
mov
enter
fldcw
int3
sbb
out
fsub
sbb
push
psllw
div
adc
rcl
fcmove
movsb
mov
mov
frstor
lods
mov
mov
out
fcmovbe
cli
cld
movsl
test
loope
loop
ror
shl
test
or
push
hlt
sbb
push
icebp
ljmp
or
aas
add
aaa
sbb
icebp
aas
sbb
cmp
sub
or
add
xor
in
pop
cmp
cmp
adc
cmp
or
add
dec
jg
inc
sub
and
cmp
jne
inc
xor
ss
xor
pop
inc
insl
imul
and
outsb
imul
push
addr16
push
pop
js
inc
xchg
sahf
insb
jns
dec
xchg
cltd
dec
xchg
dec
mov
arpl
mov
mov
mov
mov
movsl
mov
mov
cmpsl
mov
xchg
adc
xchg
movsl
lea
xchg
lods
stos
scas
enter
mov
scas
mov
fdivr
sti
div
enter
fldt
sti
repnz
cmc
int3
enter
in
cmpsb
cld
out
lock
push
call
iret
div
pop
jecxz
shr
mov
stos
cmpsb
xchg
scas
mov
std
repz
test
mov
mov
sub
cmpsb
mov
lods
mov
test
mov
psrlw
mov
inc
popf
jg
inc
cld
out
std
mov
cmpsb
aad
shr
int
ljmp
fcmovnb
loop
cli
sbb
push
out
leave
add
leave
add
sbb
aas
in
add
xor
adc
testl
push
adc
and
pop
pop
pop
and
pop
and
sbb
cmp
aas
or
inc
add
inc
dec
pop
add
ss
dec
push
inc
and
push
ss
push
jge
outsb
inc
sub
dec
insb
je
inc
jg
push
push
pop
and
jb
inc
inc
bound
dec
push
nop
imul
gs
outsb
inc
orl
pushf
cwtl
xorl
andl
mov
mov
bound
fs
mov
aad
aam
scas
mov
mov
stos
fadds
test
leave
enter
rcr
repnz
fsubl
int3
cmpsb
stc
hlt
lods
cmc
iret
cmpsl
shl
jmp
int3
sbb
negl
mov
or
mov
sub
mov
mov
mov
movl
mov
cmp
jg
mov
mov
adc
mov
mov
andl
mov
inc
mov
cmpl
jne
xor
mov
mov
sub
push
call
cmpl
jb
mov
and
mov
mov
push
push
mov
xor
push
test
mov
xor
or
adc
mov
mov
add
mov
lea
mov
mov
mov
mov
orb
mov
xor
add
mov
mov
sub
mov
movl
lea
movzwl
xor
xor
or
mov
mov
mov
mov
xor
add
cmp
movzbl
sbb
mov
mov
mov
mov
mov
mov
mov
movzwl
add
mov
sub
mov
movl
mov
mov
mov
xor
add
cmp
jne
movl
mov
cmp
jle
mov
mov
or
mov
mov
add
mov
mov
mov
xor
subl
add
cmp
jne
mov
cmp
lea
mov
mov
mov
adc
mov
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
xor
xor
adc
mov
sbb
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
add
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
movzwl
xor
mov
mov
xor
add
xor
sub
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
movl
mov
movl
jmp
lods
mov
movsl
mov
mov
mov
lods
lods
mov
xchg
hlt
inc
inc
lcall
sbb
loop
loopne
xlat
adc
sar
jecxz
decl
pop
push
clc
repz
clc
int3
or
repnz
in
sbb
sarl
movl
mov
cmp
jne
xor
xor
mov
add
mov
and
mov
movl
cmpl
je
cmpl
jne
xor
adc
mov
imul
push
pushl
push
pushl
pushl
pushl
call
mov
dec
mov
jmp
mov
addb
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
cmp
mov
mov
adc
mov
mov
xor
add
cmp
xor
xor
sar
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
add
movl
mov
cmp
jge
xor
add
sub
mov
ror
mov
mov
mov
mov
orl
addl
andl
mov
mov
mov
add
xor
cmp
je
mov
mov
andb
mov
mov
xor
add
mov
jmp
xorl
jmp
cmp
movzwl
mov
sbb
mov
mov
mov
mov
mov
mov
movzwl
or
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
stos
stos
test
test
mov
es
stos
mov
jmp
pop
inc
inc
mov
inc
and
inc
adc
adc
mov
rol
scas
stos
fsubs
test
cli
fldt
rol
lods
iret
sti
stos
lret
imul
lret
std
rcr
test
sbb
jmp
out
clc
adc
rorl
sbb
add
adc
or
enter
cmp
push
cmp
push
loope
out
pop
add
in
aaa
cmp
sbb
add
and
add
and
sbb
push
push
dec
push
push
push
add
push
sub
xor
or
push
or
inc
dec
dec
push
pop
dec
inc
jnp
cmp
dec
cmp
and
je
sub
fs
insl
jb
insb
outsl
pop
dec
outsl
pop
jle
jg
inc
pop
xchg
pop
push
jg
push
jnp
cltd
jbe
insl
jae
dec
imul
test
mov
mov
pushf
lahf
mov
xchg
fwait
pusha
mov
scas
mov
xchg
fiadds
cwtl
aad
mov
xorb
int
enter
mov
shlb
inc
fbld
into
mov
lods
stos
cld
rcr
mov
in
in
ficomps
aam
in
out
adc
loopne
adc
leave
rcr
mov
lret
rolb
aad
fcomip
mov
mov
shl
out
stos
cmpsl
test
mul
cmpsl
rol
in
loop
ret
loop
out
into
push
sti
adc
sar
lds
adc
adc
stc
clc
or
jmp
adc
ljmp
cmp
xor
add
add
adc
or
repz
jmp
cmp
loope
cmp
sub
add
adc
xor
dec
add
adc
sub
or
add
inc
inc
add
cmp
js,pn
sub
push
dec
je
push
pop
js
mov
mov
mov
movsl
mov
mov
test
jnp
shlb
inc
inc
and
inc
push
imul
pop
pop
and
jne
and
jge
popa
pop
inc
popa
jp
jno
jg
jb
inc
push
mov
dec
inc
mov
mov
insb
inc
outsb
inc
push
mov
xchg
pushf
pusha
jo
mov
cltd
xchg
scas
cmpsl
test
movsl
mov
fldl
xchg
fldenv
mov
mov
mov
mov
mov
les
rcr
mov
mov
mov
scas
lods
stos
std
leave
aam
shr
jmp
in
in
fdivr
cld
sbb
ficoml
cld
jecxz
in
adc
shr
mov
mov
stos
mov
xorb
mov
mov
shrb
in
clc
shl
lret
fucom
sti
sti
loop
movsb
jmp
stc
sbb
adc
out
clc
sbb
or
adc
test
add
cmp
or
add
xor
loopne
sbb
ss
or
sub
pop
sub
pop
or
cmp
cmp
sbb
xor
sub
sub
sub
dec
sub
add
push
jno
imul
xor
ja
bound
jne
inc
and
dec
insb
addr16
inc
inc
jle
inc
ja
pushf
lcall
dec
imul
insl
xchg
sahf
addl
popa
mov
lea
lahf
mov
xchg
movsl
jo
scas
xchg
fistps
fistpll
mov
int
cmpsl
rorb
test
mov
lock
lods
call
lret
loope
movsl
loope
ror
lock
jmp
enter
cmc
sti
jecxz
clc
clc
imull
movsl
mov
xchg
mov
stos
lods
aaa
and
add
inc
inc
hlt
into
adc
mov
test
sti
rcl
fmulp
rcr
rcr
int
scas
jmp
cli
cli
movsl
jmp
rcr
in
sbb
lcall
in
pop
cli
adc
in
repz
pop
hlt
lock
pop
in
loopne
movl
sbb
ds
ds
adc
adc
sub
xor
loopne
aas
add
cmp
and
or
push
xor
cs
sub
cmp
sub
cmp
jns
pop
jo
dec
pop
push
pop
outsb
sub
dec
push
inc
inc
insl
pop
outsb
dec
popa
insb
cbtw
inc
cltd
pop
inc
jae
push
ja
jnp
push
pushf
jl
inc
nop
adcl
outsb
jno
mov
test
scas
mov
mov
mov
test
mov
pushf
test
movsl
cwtl
xchg
lods
into
rcl
mov
lods
mov
cmpsl
stos
std
mov
fldenv
pushl
scas
lods
cmc
out
clc
in
imulb
sbb
sar
mov
sbb
fcmovbe
cli
adc
or
shlb
cmpsl
int3
fildll
mov
mov
out
mov
in
shrl
iret
clc
pop
cmc
enter
ret
fucomi
jecxz
push
sbb
pop
in
or
stc
or
add
push
cmc
or
out
call
jecxz
in
ds
out
xor
cmp
icebp
push
xor
pop
out
add
es
or
pop
sub
pop
adc
dec
adc
push
pop
dec
cmp
push
dec
push
xor
inc
push
pop
sub
pop
pop
jg
jb
jge
xor
mov
test
mov
test
mov
scas
mov
imul
jg
inc
push
push
bound
and
jne
inc
jp
jg
xchg
pop
xchg
xchg
xchg
lcall
dec
xchg
imul
dec
inc
xchg
lahf
nop
arpl
mov
xchg
mov
stos
mov
nop
xchg
mov
cmpsl
mov
fiaddl
aam
mov
mov
cmpsl
mov
scas
movsl
mov
ret
lods
rcl
imull
cmpsb
mov
repz
rcl
out
inc
call
mov
out
fucom
pop
sbb
hlt
aad
notl
sbb
repnz
aam
lods
test
std
int
test
les
std
ror
lret
fisubrl
out
jmp
cmc
lret
ljmp
jmp
bndstx
jecxz
or
stc
pop
int3
ljmp
loope
cmp
or
sar
sbb
push
hlt
add
in
xor
cmp
pop
add
pop
cmp
xor
adc
push
cmp
cmp
inc
dec
and
sub
and
js
cmp
inc
inc
xor
jnp
jb
xor
dec
outsl
jle
jbe
inc
sub
jno
push
inc
inc
inc
inc
bound
jae
pushf
push
jae
je
cltd
cltd
popa
jns
jle
push
imul
test
xchg
mov
lods
insl
mov
xchg
xchg
mov
movsl
arpl
mov
xchg
cmpsl
mov
rcl
subb
ror
test
xorb
stos
repz
shrb
in
mov
test
clc
mul
loope
in
sbb
fcompl
mul
ror
xlat
in
or
cmpsl
mov
sub
mov
cmpsb
stos
mov
mov
ret
test
inc
inc
aam
call
cmpsb
test
ret
lret
mov
stos
enter
mov
int3
stos
jmp
out
leave
cmpsb
test
rcl
div
leave
mov
loopne
call
loop
clc
aam
pop
or
lret
jmp
idiv
cmp
sbb
clc
sbb
mul
pop
loop
sub
xor
sbb
push
ds
pop
sub
loope
cmp
push
pop
aaa
push
loopne
daa
push
and
push
cs
mov
sub
push
push
mov
andl
mov
inc
mov
cmpl
jne
and
adc
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
movl
mov
cmp
jl
mov
mov
or
push
mov
add
movzwl
lea
mov
mov
mov
add
mov
movb
lea
mov
xor
add
mov
orb
mov
mov
xor
sub
mov
movzbl
movzbl
or
mov
movl
movl
mov
mov
xor
mov
shr
mov
mov
add
jmp
mov
mov
inc
cmp
jb
mov
xor
movzwl
or
add
mov
mov
cmp
je
shl
mov
xor
mov
add
movzwl
or
movzwl
mov
mov
mov
add
movzwl
mov
xor
add
mov
mov
not
mov
mov
inc
jmp
mov
mov
cmpl
jne
mov
sbb
mov
jmp
mov
or
mov
mov
or
mov
xor
add
mov
andl
mov
inc
mov
cmpl
jne
sub
xor
xor
pushl
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
movl
mov
cmp
je
mov
mov
sub
mov
movzbl
movzwl
and
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
movzwl
xor
mov
addl
mov
mov
xor
lea
inc
jmp
mov
xor
lea
mov
mov
mov
or
add
mov
pop
pop
pop
leave
ret
stos
mov
scas
mov
push
fcmovnb
mov
mov
push
xchg
inc
inc
and
inc
push
ss
cmp
inc
inc
cmp
dec
xor
pop
dec
inc
pop
jbe,pt
inc
outsl
and
push
and
pop
imul
jbe
and
push
xchg
inc
push
fs
arpl
jo
pusha
cwtl
jp
lcall
imul
mov
imul
xchg
xchg
xchg
jae
mov
imul
mov
sbbb
mov
lret
mov
mov
ret
subb
mov
mov
jmp
int
repz
lock
aam
iret
jecxz
shrl
lret
jmp
iret
hlt
adc
idiv
adc
test
test
xorb
cmpb
mov
scas
rcr
in
sti
repz
lock
push
call
in
lret
fsub
adc
or
cli
int3
out
sbb
repnz
loop
sbb
adc
shl
jmp
cli
loope
aas
das
stc
sbb
cmp
or
pop
sub
push
adc
and
sub
aas
cmp
pop
push
and
and
add
adc
or
sub
cmp
sub
jle
jp
jge
inc
pop
add
xor
jbe
jno
sub
pop
outsb
pop
jbe
push
push
sub
jb
pop
push
push
and
ja
inc
and
ja
insb
lahf
js
dec
jl
push
inc
push
insl
xchg
mov
nop
addr16
jbe
mov
insb
xchg
stos
mov
mov
mov
mov
test
mov
xchg
enter
enter
fcmovb
enter
mov
fidivrl
lods
mov
cmpsl
mov
cmpsb
mov
lods
lods
mov
and
inc
inc
stos
shl
les
iret
rol
ror
ror
int
fistl
push
enter
rorl
out
or
shrb
xchg
int
int
test
lret
stc
rcr
cld
ret
int
in
shr
ljmp
loop
shll
enter
pop
stc
call
hlt
notl
int
leave
ljmp
repnz
cmp
sbb
xor
cmp
xor
lock
sub
sub
adc
pop
push
push
xor
pop
sub
pop
pop
sbb
pop
or
push
dec
pop
adc
sub
cvtps2pi
inc
or
or
es
sub
push
and
pop
inc
pop
pop
dec
jne
cs
inc
push
ss
xor
dec
inc
and
jae
dec
imul
xchg
jge
xchg
pop
jo
xchg
push
pushf
jge
jle
dec
mov
xchg
bound
jo
xchg
xchg
cmpb
imul
xchg
mov
xchg
cwtl
movsl
sbb
sbb
mov
scas
movsb
mov
lret
mov
test
lods
ljmp
ret
mov
repz
stc
fdivr
hlt
shl
fadd
sti
ret
lret
ret
rcr
in
mov
cld
sbb
sbb
adc
sbb
clc
sbb
iret
mov
mov
mov
int
mov
mov
mov
fstp
test
jecxz
aam
in
mov
lock
mov
out
xlat
rcll
adc
repnz
int
in
jecxz
jmp
adc
add
les
in
pop
sti
add
add
or
cmp
sbb
and
and
pop
adc
pop
or
and
cmp
push
cs
cmp
stos
cmpsl
mov
jg
in
test
mov
scas
mov
ret
movsl
inc
inc
and
inc
xor
pop
push
dec
inc
inc
dec
pop
inc
sub
es
sub
add
inc
and
inc
inc
push
dec
jne
jge
inc
push
inc
fs
inc
popa
es
inc
sahf
and
jnp
inc
dec
pop
popa
push
jbe
push
mov
dec
xchg
jp
outsb
jo
xorb
inc
jg
bound
pusha
cwtl
fwait
mov
mov
mov
xchg
popf
mov
andl
xchg
movsl
cmpb
mov
mov
adc
stos
fnstcw
into
into
int3
aam
mov
cld
xlat
std
lds
mov
fcmove
jmp
hlt
mov
int3
out
sbb
loop
clc
push
sbb
sti
sbb
hlt
sbb
fldcw
cmpsl
test
shrb
sti
cli
lock
shrl
ljmp
lret
movsl
mov
lret
enter
sbb
aad
sar
ljmp
stc
push
adc
out
cmp
div
pop
jecxz
repz
repnz
sub
cmp
sub
jmp
jmp
pop
sub
push
xor
cmp
pop
adc
pop
pop
pop
pop
adc
add
push
adc
or
or
pop
inc
cmp
push
pop
and
jns
pop
jo
sub
push
insb
sub
jno
jae
jg
jl
popa
imul
inc
push
jge
popf
popf
dec
push
xchg
dec
mov
dec
nop
xchg
jo
mov
sbbb
mov
test
lea
xchg
imul
fimuls
mov
xchg
mov
scas
mov
fcmovb
mov
shlb
aam
mov
mov
not
in
mov
mov
cmpsl
mov
mov
mov
lods
lods
mov
xlat
loope
inc
inc
insb
jg
inc
int
fdiv
aad
out
hlt
inc
cmc
ljmp
sbb
hlt
icebp
adc
out
repz
or
in
mov
mov
mov
filds
cld
cmc
lret
repnz
icebp
not
imul
lods
fnop
out
in
ret
cmc
lret
out
sti
inc
out
movsb
ljmp
fadd
cmc
out
wbinvd
hlt
call
jmp
push
test
or
or
add
aaa
aas
add
das
or
cmp
xor
in
sub
in
add
add
and
sbb
or
das
add
push
pop
push
dec
daa
sub
xor
dec
jg
and
sub
pop
cmp
dec
pop
inc
jno
das
jns
push
pop
jp
jp
ja
outsb
jne
inc
dec
dec
jnp
pusha
and
pop
pop
popf
sahf
xchg
push
nop
jb
inc
xchg
jp
xchg
xchg
jp
jnp
addl
inc
xchg
popa
bound
test
cltd
nop
mov
xchg
lods
mov
mov
stos
fcomp
ficoml
in
sub
movl
movl
movl
movl
push
movl
call
test
je
push
addl
xorl
sbbl
push
push
call
test
je
push
pushl
push
jmp
pushl
push
pushl
call
xor
jmp
cmpsl
mov
cmpsl
mov
dec
sbb
test
mov
scas
mov
mov
lods
hlt
inc
inc
mov
inc
jmp
adc
pop
out
or
or
es
and
adc
sbb
aas
sbb
sbb
pop
daa
and
xor
push
orps
cmp
and
xor
inc
fmuls
test
add
jbe
xchg
adc
test
je
push
addl
push
push
push
push
push
push
push
call
movl
cmpl
je
cmpl
jne
mov
xor
or
xor
or
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
lea
movl
xor
or
cmp
ja
lea
mov
mov
mov
sbb
mov
mov
mov
sub
mov
lea
mov
mov
mov
mov
mov
or
mov
mov
push
mov
xor
mov
add
mov
mov
cmp
jne
mov
xor
add
mov
mov
test
je
xor
xor
mov
add
mov
mov
mov
xor
add
xor
cmp
je
mov
sub
mov
jmp
mov
or
movzwl
adc
add
imul
mov
xor
add
rcl
mov
mov
xor
add
imul
cmp
jne
pushl
pushl
call
movl
cmpl
je
cmpl
jne
adc
imul
and
sub
pushl
call
mov
dec
mov
jmp
mov
mov
mov
mov
movl
xor
add
cmp
jg
xor
xor
rol
mov
mov
addb
mov
mov
mov
mov
xor
push
lea
push
lea
push
push
call
mov
add
cmp
jb
mov
mov
or
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
pop
cmp
je
andl
mov
inc
mov
cmpl
jne
or
or
sbb
push
pushl
push
pushl
push
pushl
pushl
push
pushl
push
pushl
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
movl
mov
cmp
jb
mov
xor
add
imul
mov
jmp
push
call
push
mov
call
cmp
je
xor
inc
jmp
call
lea
mov
mov
andb
mov
mov
mov
mov
mov
mov
mov
and
mov
lea
push
mov
or
mov
call
movl
mov
mov
pop
movl
pop
leave
ret
mov
mov
jno
mov
stos
mov
mov
sbb
or
jg
inc
mov
mov
mov
fstpt
scas
mov
xchg
xchg
rcr
leave
mov
mov
mov
repnz
inc
out
cmc
cmc
not
in
movsb
out
jmp
cmpsl
in
jmp
sbb
movups
or
mov
scas
rorl
mov
fldt
mov
ror
scas
ret
stc
sti
jmp
out
mov
stc
cli
mov
fdiv
sbb
in
ljmp
push
ret
or
lock
add
sbb
std
in
sti
ds
aas
xor
xor
cmp
or
unpckhps
cmp
pop
sub
cmp
push
xor
pop
pop
pop
pop
aas
sub
cmp
inc
xor
and
add
cmp
sub
jne
xor
jge
inc
push
xor
ja
push
dec
and
insl
arpl
dec
and
inc
inc
dec
push
push
popa
inc
jge
xchg
inc
insb
mov
js
insl
arpl
outsb
mov
orl
mov
lahf
xchg
jbe
mov
cwtl
je
push
mov
scas
mov
nop
test
lods
mov
mov
orb
orb
mov
mov
lret
test
movsb
mov
ffree
mov
repnz
lods
lock
cmc
into
lret
repnz
cld
out
cmpsl
lock
xlat
xlat
xlat
aam
enter
pop
cmc
aam
adc
mov
shrl
mov
mov
enter
std
mov
sar
in
std
ljmp
clc
mov
into
shr
push
stc
sbb
sbb
adc
loope
push
lock
or
or
add
push
incl
add
lods
cmpsb
mov
cmpsb
sub
mov
stos
mov
mov
inc
and
inc
in
add
jecxz
in
pop
das
hlt
xor
adc
adc
in
xor
or
cmp
loop
daa
sbb
push
cmp
cmp
pop
push
das
inc
or
or
and
cmp
cmp
and
cmp
dec
xor
je
outsl
jne
jge
imul
dec
insb
dec
inc
jge
arpl
jnp
push
dec
cltd
xchg
lahf
pop
fwait
je
jp
push
mov
push
cwtl
fs
gs
lahf
lea
xchg
mov
jbe
mov
mov
mov
cmpsl
mov
lods
fisttpl
mov
movsb
xchg
aad
lret
int
test
lods
rcl
lds
clc
test
cld
neg
shr
sti
leave
mov
out
test
in
hlt
out
lret
sar
sbb
enter
rcll
icebp
sti
int
sbb
sarb
xorl
movsl
fisubrl
mov
lods
mov
fdiv
pushl
ret
hlt
test
lret
int
ffreep
ficomps
jecxz
fcmovbe
vpsubsw
div
out
pop
ljmp
adc
repnz
cmp
hlt
pop
cmp
loop
adc
cmp
sub
add
jmp
and
add
push
sbb
es
cmp
push
add
sub
pop
push
sub
or
and
dec
add
push
dec
pop
cmp
push
and
and
insb
jp
pop
jp
imul
dec
jl
dec
push
data16
jp
outsb
jge
outsl
xchg
xchg
insb
xchg
insl
dec
xchg
insb
ja
cltd
inc
jg
nop
mov
insl
xchg
pusha
jl
arpl
popf
fwait
outsl
lcall
mov
test
mov
cmpsb
mov
mov
mov
mov
lods
mov
dec
insb
fsubs
jg
inc
aad
rclb
xchg
iret
mov
test
iret
mov
roll
lods
mov
aam
aad
cli
scas
aad
repnz
fcomip
scas
fsub
aam
mov
mov
call
aad
repz
out
or
pop
mov
movsb
stos
roll
ret
movsl
std
cld
fstpt
ret
mov
cld
stos
jmp
jmp
repnz
into
sti
pop
test
sbb
sbb
out
sbb
rol
jecxz
push
add
clc
aaa
cld
ds
in
cmp
sub
add
pop
add
and
pop
add
ds
add
add
pop
pop
pop
dec
sub
or
or
jl
jge
add
push
inc
xor
pop
outsl
outsb
jbe
jne
arpl
dec
sub
sahf
and
inc
jns
pop
push
jl
dec
bound
nop
jg
jae
jg
test
xchg
mov
mov
xchg
xchg
push
gs
mov
insl
mov
cwtl
xchg
mov
arpl
fisttpll
movsl
mov
cmpsl
aad
mov
stos
mov
xchg
mov
mov
cmpsb
stos
movsl
aam
stc
clc
movsl
sar
out
movsb
fucomp
ror
stos
into
into
push
icebp
ljmp
sti
out
in
out
not
sbb
sar
push
mov
mov
mov
test
or
cmpsl
lods
ret
lret
clc
aad
call
out
mov
aad
sti
int
stos
repnz
movsb
ror
in
cmc
loope
dec
out
leave
in
jecxz
sbb
aam
repz
stc
jmp
notb
add
add
add
loopne
push
or
cmp
test
pop
sub
cmpsb
mov
lods
lods
mov
inc
rep
faddl
and
inc
cmp
sbb
push
pop
adc
jmp
ss
cmp
push
push
ds
pop
and
and
adc
cmp
adc
adc
das
add
pop
push
push
daa
dec
or
pop
cmp
es
jp
and
dec
push
jnp
jge
jns
cs
and
jo
imul
js
jp
arpl
jbe
inc
pushf
pop
xchg
push
inc
jno
cwtl
dec
xchg
push
mov
inc
mov
mov
mov
outsl
xchg
mov
mov
movsl
pusha
mov
mov
xchg
fisubs
xchg
subb
mov
andb
mov
stc
mov
fbstp
leave
hlt
hlt
out
out
repz
pop
std
adc
loopne
cmc
sbb
cli
sbb
fcmovb
int3
test
lds
mov
fdivs
xlat
repz
test
into
lods
cmpsl
not
jecxz
rcr
mov
aad
ret
shl
out
loopne
hlt
or
sbb
clc
sbb
or
hlt
ret
repnz
hlt
icebp
or
sti
sbb
push
or
jmp
in
stc
sub
adc
in
add
aas
add
sysret
xor
pop
ss
push
cmp
sbb
pop
pop
push
or
adc
push
and
inc
and
and
add
ds
inc
inc
cmp
pop
outsb
pop
insb
sub
sub
cs
inc
insb
inc
sahf
imul
and
xchg
cwtl
popf
fs
fs
addr16
jns
pop
nop
xchg
xchg
xchg
dec
imul
insl
jb
mov
subb
mov
addr16
cmpl
push
xchg
lods
mov
mov
mov
mov
movsl
adc
icebp
into
stos
mov
mov
lahf
fiaddl
fiaddl
inc
sahf
mov
mov
mov
fnop
ret
lods
mov
enter
fcmove
mov
mov
mov
int3
aam
scas
out
jmp
jmp
int
in
out
int3
sbb
ret
jmp
adc
sbb
aad
out
lock
jl
mov
movl
cmpsb
mov
mov
push
mov
push
push
push
mov
push
movl
mov
mov
movl
mov
cmp
je
movl
cmpl
je
cmpl
jne
push
call
xor
add
dec
mov
jmp
mov
xor
add
cmp
je
movl
xor
xor
cmp
jne
xor
xor
and
mov
mov
xor
add
push
pushl
pushl
pushl
call
mov
mov
mov
mov
jmp
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
cmp
sbbl
orl
xor
add
mov
pushl
pushl
call
movzwl
sub
mov
xor
andl
mov
inc
mov
cmpl
jne
mov
imul
sub
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
pop
add
pop
leave
ret
sub
mov
mov
mov
mov
mov
scas
cli
fisubl
out
inc
inc
and
inc
scas
hlt
lock
mov
test
repz
shl
aam
lock
std
hlt
hlt
icebp
adc
aad
hlt
repnz
adc
cmc
sbb
loope
or
pmulhuw
out
or
or
or
push
cmp
loopne
cmp
aaa
xor
sub
and
push
and
pop
pop
cmp
sbb
sub
add
push
adc
pop
or
inc
push
dec
aaa
dec
dec
pop
and
inc
sub
jnp
pop
inc
inc
aaa
jnp
push
jno
pop
insb
je
dec
dec
jp
js
dec
jno
data16
je
pop
pusha
gs
fs
push
mov
pop
jno
fwait
addr16
jne
cltd
nop
test
inc
xchg
insb
mov
xchg
mov
popa
xchg
mov
mov
fistps
mov
xchg
lcall
mov
mov
mov
iret
lods
rcl
ffree
lods
std
test
movsb
test
lret
lret
cmc
ret
mov
fsubr
ror
lock
imul
hlt
test
sti
pop
sbb
pop
call
std
push
enter
stos
mov
xchg
movsb
mov
lret
cld
mov
fsubs
enter
fcomp
shll
fdecstp
in
leave
fsin
adc
out
repnz
ljmp
out
adc
sbb
call
divb
cmp
loopne
sub
cmp
ljmp
or
sub
push
push
push
push
pop
and
xor
push
pop
push
or
or
xor
add
sub
dec
aaa
and
jno
pop
xor
jge
dec
jl
outsb
je
sub
inc
jno
dec
dec
bound
jl
fwait
je
ja
jl
jp
mov
cmpsl
scas
xor
daa
aas
mov
mov
and
fadds
and
inc
popf
inc
cwtl
insl
push
jbe
imul
mov
mov
push
xchg
subb
insl
stos
mov
mov
nop
subb
pushf
mov
popf
mov
or
xchg
xlat
fldenv
mov
movsl
les
mov
fcomi
movsb
mov
jmp
ljmp
jmp
push
fcmovb
call
push
aad
stc
negl
adc
int
in
clc
lret
movsl
movsl
cmpsl
shll
mov
stc
mov
repz
stos
jmp
jmp
loop
repz
sbb
fmulp
call
loop
push
dec
sbb
adc
out
clc
bswap
call
syscall
rcll
jmp
clc
cmp
sti
sbb
cmp
xor
push
adc
aaa
sub
or
adc
and
push
pop
pop
and
aaa
sbb
sbb
push
push
cmp
xor
xor
daa
and
jp
inc
add
sub
and
jg
push
jno
inc
inc
sub
gs
addr16
insl
dec
insb
and
push
pop
push
inc
jns
inc
push
dec
pusha
outsl
outsl
jns
dec
push
addl
orb
mov
jns
xchg
lahf
mov
sahf
scas
mov
lods
lea
fbld
mov
xchg
sbb
lods
xchg
int3
mov
cmpl
lods
mov
enter
lret
cld
lds
cmc
xlat
iret
scas
aad
movsb
shl
movsl
iret
in
lret
lret
ffree
cli
fdivr
pop
out
sbb
repz
or
fisttpll
mov
mov
fdivrp
test
mov
mov
cmpsl
lods
imul
mov
cmpsb
mov
lods
mov
fstl
inc
inc
and
inc
mov
fcmovnbe
mov
out
scas
lock
inc
push
mov
aam
div
in
clc
iret
or
icebp
sbb
add
lock
lret
adc
lock
cmp
aas
adc
aas
add
add
cmp
or
sbb
push
add
adc
loopne
pop
push
sub
cmp
pop
xor
and
dec
dec
pop
sub
cmp
das
pop
add
inc
and
cmp
add
push
push
jnp
sub
push
jle
pop
sub
pop
pop
push
dec
inc
pusha
inc
jae
insb
popf
push
insl
inc
popf
inc
pop
dec
jp
xchg
addr16
jnp
xchg
js
nop
push
dec
mov
addb
addl
cwtl
sbbb
mov
lea
test
mov
pushf
test
mov
scas
scas
xchg
xlat
fsts
mov
cmpsb
fcmove
mov
mov
sar
stos
fmul
aam
rcr
enter
repz
sti
ljmp
hlt
in
iret
scas
enter
sbb
out
out
sbb
sbb
out
sar
into
stos
mov
mov
test
ret
mov
rcl
test
cld
fmulp
out
mul
shl
loope
ret
int3
jmp
int3
cmc
leave
loope
cld
rcrb
sbb
or
ljmp
add
add
pop
loope
cmp
cmp
aaa
sub
icebp
in
or
cmp
in
call
or
cmp
pop
add
push
pop
pop
push
adc
xor
or
pop
inc
push
sub
dec
xor
xor
aas
sub
dec
and
inc
push
push
js
and
push
dec
imul
popf
inc
and
inc
jl
pop
popf
push
cmpsl
mov
mov
test
xchg
cmpsb
mov
test
mov
mov
xchg
inc
inc
enter
pusha
jl
insl
bound
jp
cltd
outsb
test
addl
push
imul
popa
mov
nop
movsl
xchg
test
mov
fstpt
into
mov
nop
mov
movsl
rcl
scas
inc
std
shrb
movsl
ffree
movsb
mov
int3
fcmove
rcr
fsubrp
scas
leave
icebp
cli
repz
pop
cmc
shr
out
sbb
fucomip
dec
ljmp
into
or
mov
cmpsb
mov
test
cld
fdivrl
movsb
xlat
mov
div
enter
jmp
shl
rcr
ljmp
rcl
in
loope
fdivr
adc
or
out
add
cmp
stc
cmp
les
jmp
add
out
repz
or
or
adc
adc
pop
add
xor
pop
cmp
pop
sub
ds
or
xor
inc
and
push
inc
pop
pop
pop
add
add
jbe
and
xor
daa
es
inc
jno
push
insl
sahf
jne
outsl
popf
push
lcall
jbe
addr16
jae
dec
nop
xchg
push
push
inc
xchg
outsb
mov
mov
xchg
jnp
xchg
lahf
mov
outsl
jne
test
imul
push
mov
sub
movl
movl
movl
mov
cmp
jb
xor
add
mov
and
mov
push
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
xor
push
mov
add
mov
mov
xor
add
mov
movl
mov
xor
add
cmp
je
jmp
mov
mov
mov
mov
mov
mov
sti
hlt
inc
inc
lea
inc
cmp
push
add
dec
ja
and
and
pop
ss
jb
pop
sub
dec
inc
inc
jne
jo
jno
and
push
inc
dec
imul
hlt
xor
cmp
mov
sbb
mov
add
sub
cmp
jb
mov
mov
movzbl
add
mov
xor
xor
add
add
movl
mov
cmp
jl
xor
add
imul
mov
and
imul
mov
mov
sub
cmp
mov
jae
xor
add
jmp
scas
mov
stos
mov
scas
cmpsb
cmpsb
mov
lods
lods
mov
or
inc
inc
lea
inc
jbe
jae
push
outsl
popf
xchg
mov
dec
imul
inc
gs
popa
xchg
lods
imul
sahf
imul
add
add
mov
inc
mov
cmpl
jne
mov
mov
mov
pushl
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
mov
or
xor
add
add
imul
mov
mov
sub
cmp
mov
mov
jae
xor
add
jmp
stos
mov
test
les
mov
mov
push
hlt
inc
inc
lea
inc
mov
mov
scas
fldcw
lcall
test
stos
mov
lods
xchg
cli
cld
movsb
fcmovb
ret
mov
clc
ret
adc
dec
mov
xor
xor
movzwl
add
mov
add
add
imul
mov
xor
or
or
mov
mov
mov
sub
cmp
mov
mov
jae
xor
add
jmp
movl
mov
cmp
jge
mov
and
mov
mov
sarb
xor
xor
add
mov
add
mov
add
imul
lea
mov
mov
mov
and
mov
mov
sub
cmp
mov
mov
jae
xor
add
jmp
xor
or
neg
mov
xor
xor
add
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
mov
xor
or
mov
add
push
pushl
pushl
push
pushl
pushl
push
pushl
call
jmp
imul
mov
mov
sub
cmp
mov
mov
jae
xor
add
jmp
xor
add
xor
add
imul
mov
movl
mov
cmp
jge
pushl
mov
addb
mov
add
call
test
mov
xor
xor
adc
mov
add
mov
mov
xor
mov
mov
xor
mov
sub
mov
mov
xor
add
imul
sub
cmp
jbe
pop
pop
leave
ret
test
mov
mov
movsl
stos
pop
jo
push
mov
mov
mov
psrlq
and
inc
xchg
mov
scas
into
roll
lods
lret
int3
enter
leave
ror
mov
std
fildll
stc
rcr
fucomip
fldenv
int
fdiv
stc
shrl
icebp
out
in
loop
out
sbb
cli
lret
shl
push
push
or
int3
sbb
mov
incl
int3
mov
aam
shl
shr
xlat
mov
out
leave
repnz
fld
mov
fsubr
test
icebp
sbb
out
or
adc
idiv
sbb
lock
repz
add
or
or
loopne
sbb
cmp
aas
out
pop
cmp
xor
idivb
cmp
sbb
in
or
in
sub
jecxz
xor
add
or
sub
cmp
pop
push
cmp
xor
and
xor
inc
push
and
inc
add
jbe
sub
inc
inc
cmp
push
dec
dec
insb
sub
daa
inc
dec
js
inc
push
popa
addr16
jp
pop
pop
dec
pop
je
push
push
push
dec
jo
jae
xchg
push
dec
push
mov
pusha
xchg
inc
push
outsb
xchg
xchg
andb
mov
mov
test
xchg
stos
popf
mov
mov
fwait
lods
aam
xchg
rorb
movsb
into
addb
test
frstor
mov
jmp
cmc
shl
shrl
mov
out
leave
sbb
sbb
sbb
shl
std
sti
icebp
adc
repz
shrl
into
cmpsb
fiadds
stc
mov
movsl
xlat
mov
shr
sti
repnz
stos
lret
aad
leave
mulb
int3
loop
notl
xlat
pop
sti
out
rorb
or
hlt
push
icebp
lret
aas
int3
pmulhuw
adc
pop
cmp
movsb
mov
sbb
mov
cmp
out
roll
and
inc
or
stc
das
cmp
pop
aaa
add
xor
sub
xor
cmp
out
sub
sub
sbb
or
or
cmp
dec
pop
push
add
pop
inc
or
push
push
dec
sub
sub
dec
inc
jge
jp
inc
outsl
je
aaa
inc
jnp
jle,pn
dec
dec
inc
daa
jno
daa
sub
dec
pop
jg
inc
jnp
push
jnp
jp
inc
xchg
lcall
outsb
cwtl
dec
outsb
adcb
test
test
pushf
fwait
lcall
cwtl
fs
movsl
andb
mov
mov
pushf
mov
cmpsl
fsubrl
fisubrs
mov
xchg
roll
enter
mov
out
in
sti
sti
out
jmp
aad
cmc
ret
movsl
cld
loope
rcrb
push
call
ret
adc
int
icebp
cld
loope
lret
lret
aad
mov
subb
incl
cli
repnz
stc
repnz
cli
loop
aad
aam
lret
sar
aad
sti
enter
loope
sbb
enter
bnd
add
incl
enter
sbb
div
adc
hlt
xor
push
sub
icebp
sbb
sub
adc
xor
sub
pop
and
or
pop
push
sub
add
cmp
push
pop
or
dec
pop
or
dec
cmp
daa
dec
aaa
sub
push
inc
sub
dec
das
dec
cmp
sub
push
xor
sub
jno
dec
daa
daa
dec
push
inc
and
dec
popf
imul
jg
cltd
bound
imul
inc
jo
jle
test
gs
sbbl
pushf
lods
mov
mov
test
mov
mov
xchg
imull
mov
xchg
test
iret
inc
inc
and
inc
mov
mov
mov
fimull
lods
iret
mov
add
mov
std
fcmovnu
shrl
cld
stos
in
int3
imul
in
ljmp
sbb
fsubp
mov
or
or
mov
int3
lret
mov
mov
repnz
fsubl
mov
jmp
cmpsl
fldenv
fmulp
out
in
rcl
hlt
rcr
adc
in
or
sbb
or
pop
cmc
jmp
vpmulhw
or
in
pop
or
pop
pop
pop
out
sbb
icebp
aas
ds
lock
cmp
xor
in
or
or
add
and
ds
push
and
cmp
cmp
dec
and
xor
or
inc
and
jg
dec
add
jge
cmp
push
and
jle
dec
pop
xor
jnp
pop
sub
lahf
sub
sub
xchg
push
inc
push
jg
push
cltd
jle
dec
lahf
push
insl
xchg
jno
xchg
adcb
cltd
mov
xchg
jnp
xchg
gs
xchg
jb
lea
scas
stos
xchg
xchg
cmpsb
cmpsl
fisubl
lods
xchg
sbb
cmpsl
mov
mov
cmpsb
xlat
leave
mov
int
mov
mov
fyl2xp1
repnz
std
test
mov
in
rcl
test
loopne
mov
iret
jmp
notb
sbb
aad
clc
rcll
iret
into
stos
scas
mov
rol
lds
mov
mov
mov
fxch
mov
fcmovb
mov
loope
sbb
inc
pop
pop
sbb
aam
ret
or
in
div
shr
int3
pop
int3
in
adc
loop
cmp
add
stos
scas
test
stc
xor
mov
cli
scas
int
inc
js
inc
inc
adc
or
cmp
pop
ss
ds
or
or
sub
sub
or
pop
sub
sbb
cmp
push
cmp
sub
daa
sub
or
add
jp
add
add
je
jo
jae
imul
jge
push
inc
data16
inc
push
bound
inc
pop
dec
jnp
addr16
inc
pop
ja
inc
arpl
xchg
jno
jne
ja
dec
dec
inc
xchg
lea
pusha
test
popf
pusha
push
mov
jbe
stos
mov
cmpsl
xchg
xchg
fs
fldt
fldenv
scas
mov
fcmovnu
rorb
lret
movsb
mov
ret
mov
fdivr
mov
enter
into
lock
mov
loopne
iret
fmul
hlt
std
xlat
pop
ret
rcl
clc
jmp
push
rcl
stos
mov
mov
lds
ror
lret
fnsave
icebp
fistl
in
push
push
movl
andl
xor
xor
inc
mov
cmpl
jne
adc
xor
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
xor
add
cmp
ja
movzwl
movzwl
and
mov
mov
mov
sub
mov
mov
mov
sbb
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
xor
or
mov
add
mov
mov
pop
test
jne
mov
xor
add
leave
ret
sub
mov
scas
mov
mov
stos
cmp
mov
test
mov
int3
inc
inc
and
inc
mov
cld
neg
in
stos
out
in
in
ftst
pop
sbb
aad
in
sbb
ljmp
lret
ljmp
out
ljmp
cmp
hlt
ss
imulb
sbb
add
pop
add
sub
and
and
es
push
add
sub
dec
dec
aas
xor
inc
cmp
or
pop
inc
or
and
jbe
dec
je
sub
pop
inc
jge
pop
xor
dec
dec
push
sub
push
sub
je
jo
jns
pop
xchg
cwtl
inc
dec
gs
inc
xchg
jg
mov
push
outsb
jae
xchg
imul
je
xchg
insb
mov
jae
xchg
scas
xchg
jae
jno
imul
test
fsubrl
mov
mov
addb
mov
aam
mov
movsb
ret
test
mov
rcr
fsubl
icebp
mov
fcmovbe
int3
scas
pop
out
vpavgb
in
lds
mov
hlt
in
cli
or
mov
movsl
rolb
mov
fcomip
mov
iret
mov
leave
stos
test
out
out
leave
loopne
fcoms
icebp
in
sbb
shr
adc
adc
or
ljmp
loope
cmp
out
cmp
stc
pop
add
xor
pop
cs
push
ljmp
add
add
cmp
or
xor
add
adc
pop
push
inc
pop
or
xor
push
dec
pop
push
and
pop
jne
inc
and
pop
ja
and
dec
push
dec
inc
insb
jp
outsl
push
sub
outsb
pop
fs
popa
bound
dec
pop
pusha
jp
inc
pop
lods
mov
movsl
test
test
mov
mov
jmp
inc
inc
and
inc
xchg
inc
insl
popa
jge
jns
mov
jnp
test
inc
lahf
mov
mov
lahf
lahf
bound
cltd
mov
movsl
xchg
mov
bound
fiaddl
andb
mov
mov
fnstenv
stos
test
pushl
add
scas
int3
neg
mov
lods
fmul
lods
hlt
out
icebp
shlb
repz
icebp
icebp
call
in
push
loop
cmc
icebp
adc
pop
mov
shll
mov
mov
mov
cmpsb
mov
rcl
test
std
icebp
mulb
int3
pop
mov
neg
sbb
clc
pop
aad
sbb
sbb
push
enter
or
jmp
out
pop
loopne
pop
sbb
aaa
call
push
pop
adc
sbb
call
xor
push
pop
xor
push
add
daa
aaa
add
pop
ds
push
dec
pop
xor
dec
or
push
dec
push
xor
add
ja
pop
inc
jne
push
pop
and
pop
jle
push
push
inc
dec
gs
dec
pop
push
popf
jg
jl
bound
popa
pop
addr16
push
xchg
cltd
ja
imul
imul
inc
lea
bound
addr16
jno
mov
mov
mov
fnstcw
mov
mov
mov
fcmovnbe
sbb
scas
int3
test
xchg
ret
stos
test
test
fdivr
sar
fsubr
aad
iret
stos
fcmovne
lock
out
int
in
leave
fstpl
sbb
cli
lock
mul
loopne
in
adc
mov
mov
lret
mov
mov
shrb
mov
push
into
and
mov
stos
xchg
inc
inc
and
inc
ret
out
jmp
sti
out
stc
hlt
lret
in
jecxz
enter
in
in
pop
sbb
out
sbb
repnz
repz
push
ljmp
notb
loop
or
cmp
push
adc
xor
xor
cmp
sbb
cmp
in
xor
or
sub
cmp
pop
add
sub
aas
push
aas
es
pop
and
push
and
sub
dec
es
xor
add
jl
sub
aaa
cmp
xor
xor
xor
pop
imul
imul
bound
push
jl
inc
cltd
push
insb
pop
je
bound
outsb
jo
lcall
outsb
inc
xchg
lahf
gs
arpl
test
pushf
mov
mov
bound
mov
xchg
mov
mov
mov
mov
mov
into
xchg
ret
mov
shlb
ror
int3
stos
sti
test
cmc
rcr
aad
sar
out
sar
icebp
mov
cmpsb
jecxz
std
ret
out
mov
adc
jecxz
pslld
adc
rol
rcr
stos
test
into
stos
cmpsl
fcom
aad
repnz
sti
in
int3
icebp
cli
xlat
test
shlb
rol
ljmp
ficoml
sbb
iret
or
cmc
push
aam
lret
adc
ret
jmp
or
pop
add
pop
jecxz
xor
sbb
icebp
xor
cmp
sub
loopne
sbb
sub
cmp
pop
push
pop
ds
push
cmp
dec
push
daa
cmp
push
dec
add
xor
aas
inc
dec
jl
and
inc
inc
inc
xor
push
dec
push
pop
imul
outsl
sub
push
push
sub
popf
popa
insl
inc
inc
pop
jne
js
mov
stos
mov
xor
push
mov
stos
mov
ja
iret
filds
inc
inc
and
inc
je
inc
cltd
jg
jno
mov
je
inc
sahf
mov
mov
data16
cltd
xchg
nop
xchg
mov
test
mov
movsl
lea
fidivrs
mov
fmuls
into
mov
movsb
mov
stos
lds
scas
lods
clc
aad
mov
rcl
sar
shr
stos
fscale
into
out
out
loop
mov
loop
jecxz
in
jecxz
psrlq
sar
hlt
out
jmp
enter
cmp
fsubrs
stc
hlt
fyl2x
cmc
lret
rcr
stc
mov
cmpsl
icebp
clc
stos
scas
aad
ljmp
pop
repz
aam
rol
ror
adc
adc
hlt
hlt
pop
jecxz
push
add
stc
add
loop
das
cmp
ss
das
cmp
xor
in
daa
pop
daa
pop
sbb
push
add
xor
xor
dec
cmp
sub
das
push
or
push
dec
dec
dec
pop
inc
sub
inc
pop
jp
pop
dec
cmp
pop
jnp
jg
outsl
outsb
sub
push
and
and
sahf
jl
push
inc
dec
pusha
jge
pop
inc
inc
fwait
inc
jl
insb
nop
push
andl
addr16
jg
mov
js
outsb
mov
mov
imul
arpl
mov
adcb
mov
fdivrl
enter
ret
lds
mov
mov
rcl
std
repz
clc
scas
fdivr
shll
leave
mov
sbb
in
adc
jmp
stc
in
out
aad
repnz
movsb
lret
adc
fldl
mov
shll
lods
cmpsl
movsl
cmpsb
sbb
scas
mov
cmpb
inc
stc
inc
inc
inc
mov
out
stc
cmc
rol
movsb
in
shl
out
in
sbb
pop
jmp
shl
out
cld
hlt
adc
ror
leave
out
or
icebp
jmp
ljmp
lock
or
std
push
ds
aaa
sbb
loope
in
cmp
xor
adc
pop
das
push
and
or
or
push
and
cmp
aas
sub
cmp
pop
sub
add
and
inc
jnp
inc
jns
push
inc
dec
cs
push
mov
push
push
mov
add
xor
movl
cmp
jne
movl
cmpl
je
cmpl
jne
or
sub
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
movl
xor
or
cmp
jle
add
lea
mov
mov
xor
xor
add
mov
mov
mov
xor
push
test
mov
mov
adc
mov
mov
mov
add
cmp
pop
je
mov
leave
ret
mov
xor
add
leave
ret
mov
xor
add
leave
ret
sub
cmpsb
test
mov
in
mov
mov
and
mov
jg
inc
insl
jp
jns
inc
jo
arpl
pop
pop
inc
lahf
es
jl
dec
inc
inc
inc
popf
bound
inc
dec
xchg
jl
nop
mov
inc
dec
mov
test
mov
mov
xchg
scas
mov
scas
xchg
mov
addb
aam
mov
nop
mov
fcom
fimuls
lods
mov
stos
stos
mov
cld
fdivrl
mov
frstor
in
mov
test
jmp
repz
clc
int
jmp
adc
sbb
lock
mov
mov
shll
stc
shll
in
clc
scas
jmp
ret
fadd
movsl
sbb
sbb
mov
sbb
out
stc
shr
adc
adc
jmp
or
add
adc
sbb
stc
adc
cmp
push
adc
jmp
aas
out
sub
and
add
xor
xor
xor
push
push
pop
xor
push
pop
or
or
push
sub
sub
push
inc
xor
sub
jp
cmp
and
jne
jle
pop
js
sub
dec
je
inc
sub
pop
je
insb
jo
jg
gs
inc
fs
jae
arpl
xchg
push
jo
jge
inc
cwtl
mov
bound
mov
data16
outsl
outsb
mov
jae
ja
mov
mov
cmpsb
movsl
mov
mov
int3
lods
fidivl
mov
test
mov
mov
movsb
jmp
fcom
mov
scas
ljmp
loop
into
in
fucom
mov
cmc
cli
testb
shlb
mov
mov
mov
scas
mov
or
add
add
inc
and
inc
into
fisubrl
leave
cld
lret
lret
xlat
stos
lods
cli
stc
icebp
mov
lret
imul
into
stos
lock
enter
out
aam
les
sbb
adc
repz
rcrl
ror
adc
in
ror
push
repnz
mov
icebp
sbb
push
call
or
xor
sub
adc
or
aas
xor
push
sbb
pop
sbb
dec
cmp
dec
pop
dec
sub
xor
pop
dec
dec
dec
add
jle
daa
je
js
ja
push
outsl
cmp
jns
pop
inc
imul
imul
popf
push
push
jo
pop
bound
jbe
jne
xchg
je
pusha
arpl
mov
jns
dec
mov
inc
outsb
mov
jbe
jns
mov
jl
mov
xchg
xchg
movsl
mov
xchg
xchg
fnstenv
mov
lret
test
fadd
mov
mov
mov
cld
test
aam
shll
fldl2e
movsl
ljmp
in
loopne
loopne
idiv
int
div
sbb
aad
or
clc
sbb
mov
movsl
stos
sarb
cmc
fcmovnu
rcl
jmp
mov
test
call
in
into
ror
rol
mov
pop
adc
sti
adc
out
into
or
int3
or
int
sti
cld
call
in
sbb
in
call
push
loope
hlt
idivb
push
push
add
cmp
repz
adc
sub
unpckhps
and
push
sub
push
pop
sbb
add
add
xor
dec
push
add
push
pop
sub
pop
pop
pop
sub
and
pop
inc
cmp
and
pop
inc
inc
and
ja
push
push
stos
cmpsl
lods
mov
mov
movsl
sti
jp
pop
mov
mov
pop
or
rolb
jg
inc
pop
sub
dec
inc
dec
push
and
jg
fwait
inc
sahf
and
push
inc
push
cwtl
push
inc
inc
push
jnp
lea
imul
mov
bound
push
lahf
jne
xchg
cltd
xchg
mov
xchg
mov
mov
push
scas
fistpl
aad
xchg
aad
fidivrl
test
stos
mov
fmul
movsl
cmpb
movsl
test
cmc
iret
lods
fstp
lock
repz
cmpsb
not
leave
repz
lret
lret
push
rcl
lds
aam
adc
adc
adc
in
test
mov
into
mov
sbb
lret
mov
ret
fcmovnb
mov
stc
fcomi
out
int3
repz
int3
test
lock
mov
in
cli
push
cli
push
cld
pop
not
repz
rorb
icebp
lock
repz
add
in
out
in
sti
add
icebp
xor
or
xor
xor
adc
and
or
add
pop
sub
sub
sub
and
pop
aas
cmp
adc
adc
sub
daa
inc
add
dec
dec
sub
add
xor
inc
push
jge
push
jge
outsl
imul
push
dec
imul
sahf
outsl
dec
es
imul
inc
xchg
mov
jns
jo
mov
subl
mov
imul
scas
popa
push
cwtl
stos
test
nop
mov
xchg
xchg
mov
ffreep
lret
rcr
rorl
mov
ret
int
mov
lret
cmc
ret
out
shlb
loop
in
loope
loope
out
stc
out
cmc
sbb
sbb
cmpsl
stos
mov
cld
sub
mov
scas
mov
cmpsb
mov
inc
incb
xor
inc
inc
lret
cmpsl
lods
leave
mov
mov
cmpsb
mov
cmc
ret
movsl
test
out
jmp
lret
aad
cmpsb
aad
ffree
loop
out
movsb
pop
fcoms
ret
sbb
adc
out
adc
adc
rcrb
sbb
or
cmp
sbb
icebp
loope
repnz
cli
jmp
adc
sbb
aaa
adc
push
add
add
pop
cmp
cmp
push
cmp
push
pop
cmp
push
cs
push
or
cmp
xor
push
cmp
sub
cmp
jns
jp
pop
outsb
push
push
dec
addr16
insb
ja
push
popa
gs
addr16
and
jbe
inc
cwtl
xchg
jle
inc
push
push
xchg
js
dec
imul
jae
xchg
xchg
jge
cltd
mov
mov
mov
arpl
jo
cwtl
mov
lods
test
cmpsb
xchg
mov
mov
mov
fldenv
fidivl
test
mov
fisubl
hlt
mov
idivl
shl
int3
fldt
out
mov
sbb
fcomip
push
stc
push
loope
ret
or
push
out
loopne
test
shrb
mov
lret
mov
mov
icebp
bnd
jmp
vpmovmskb
ret
cmpsl
les
rcr
out
ljmp
inc
push
cmc
loope
adc
test
loopne
lcall
pop
cmp
sbb
std
std
cmp
cs
daa
adc
cmp
in
add
and
add
push
addps
cmp
push
and
push
pop
push
push
push
dec
sub
das
pop
push
sub
inc
add
in
sub
push
movl
movl
cmpl
je
cmpl
jne
sbb
adc
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
movl
movl
mov
cmp
jge
xor
add
mov
add
mov
push
mov
movzbl
movzwl
add
mov
mov
xor
mov
xor
add
add
imul
cmp
jne
mov
mov
xor
xor
orl
add
add
imul
jmp
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
cmp
ja
mov
sbb
jmp
mov
add
lea
mov
mov
mov
adc
add
mov
imul
add
mov
mov
pop
pop
leave
ret
mov
mov
test
cmpsb
mov
lods
lods
mov
xor
xor
inc
inc
and
inc
and
and
inc
dec
je
cmp
inc
inc
dec
push
dec
xor
jge
imul
jge
inc
jge
addr16
pop
gs
push
je
jb
inc
push
outsb
outsb
mov
dec
test
mov
popf
mov
xchg
xchg
cmpl
jo
mov
mov
jae
mov
xchg
mov
addl
ficompl
lret
test
mov
lds
mov
stos
xchg
clc
lret
lock
rcr
int3
stc
aad
shr
cmpsb
call
stos
bnd
sbb
iret
not
out
vunpcklpd
negl
clc
cmc
sti
hlt
int
xchg
int3
mov
scas
test
stc
mov
out
cmc
test
repnz
push
mov
iret
push
pop
fcoms
push
adc
sbb
xlat
pop
adc
or
mov
adc
repnz
cmp
jecxz
cmp
cli
add
xor
sbb
aas
pop
or
movhps
pop
jmp
pop
loopne
mov
pop
add
adc
cmp
xor
cmp
and
inc
cmp
inc
sub
push
jns
and
outsb
push
jge
push
sub
arpl
sub
daa
arpl
inc
dec
pop
xchg
jge
xchg
push
nop
jge
jge
jnp
imul
jno
insl
mov
lea
bound
mov
fs
outsb
mov
cmpsb
cltd
movsl
test
cltd
mov
mov
xchg
rcr
stos
xchg
lret
fidivrs
mov
icebp
sti
int3
stc
jmp
lods
iret
idiv
shr
out
lret
mul
cmpsl
sbb
mov
xchg
pop
mov
mov
test
clc
sbb
lret
inc
inc
and
inc
sbb
iret
sti
cld
xlat
jmp
leave
jecxz
repz
test
mov
stos
int3
scas
scas
fstpt
mov
fcmove
aam
mov
fildll
clc
mov
int3
cmpsb
std
loop
fsub
ffreep
sbb
adc
adc
iret
negb
sbb
sbb
out
push
rcll
ret
ret
cli
push
ds
call
ds
in
cmp
cmp
ljmp
pop
sbb
loop
sub
add
pop
ds
push
sub
xor
das
inc
and
and
jns
jl
dec
pop
jp
jbe
push
aaa
inc
inc
imul
jp
jo
and
jno
lahf
dec
sub
sahf
and
bound
cwtl
lahf
push
pusha
outsb
push
xchg
dec
cltd
jl
insb
mov
lea
test
test
lcall
insl
lea
fists
movsl
movsb
movsb
mov
mov
aad
fsts
lods
shll
mov
cmpsl
fdivr
stos
sti
fistpll
repnz
movsl
scas
aam
cli
ror
jmp
into
rcrb
leave
lds
test
fcoms
cld
cmc
loop
or
cmpsb
mov
xchg
scas
roll
mov
mov
mov
aam
sar
mov
mov
repnz
aam
shr
enter
pop
fmulp
jmp
call
stc
loop
sbb
adc
adc
adc
in
call
out
ljmp
pop
jecxz
xor
ds
adc
add
sub
daa
cmp
sbb
sub
add
aas
dec
and
xor
cs
push
or
push
xor
pop
stos
mov
test
test
mov
mov
ja
jb
hlt
stc
inc
inc
and
inc
dec
add
sub
pop
js
cmp
and
pop
push
addr16
push
jae
inc
bound
jge
jo
jnp
dec
fwait
sahf
lahf
jle
popf
jae
xchg
outsl
jg
push
insb
insb
xchg
mov
je
subl
sahf
mov
xorb
js
stos
xchg
mov
scas
cwtl
xchg
mov
xchg
fiaddl
mov
popf
mov
test
fldt
int
mov
andb
idiv
mulb
rcr
out
hlt
lock
cli
repz
shr
ljmp
xlat
cld
jmp
std
push
loop
call
icebp
lret
fmul
lods
mov
xchg
or
mov
stos
repnz
hlt
out
mov
icebp
lods
hlt
fsubrp
lock
cld
leave
enter
movsb
imul
leave
call
jmp
aam
lret
rcl
sbb
hlt
jmp
in
in
sbb
out
jecxz
pop
out
repnz
rorl
repz
cs
sbb
sub
xor
add
or
daa
cmp
add
xor
pop
pop
push
sbb
push
inc
sub
sub
or
inc
jle
pop
inc
pop
jbe
and
push
and
xor
inc
jnp
push
jo
dec
outsl
push
gs
inc
dec
sub
inc
jl
fwait
jns
inc
dec
dec
pop
jbe
push
inc
dec
xchg
xchg
outsb
mov
push
jp
insb
mov
xchg
lea
imul
jl
mov
jo
mov
mov
imul
filds
mov
mov
mov
rolb
lret
scas
enter
mov
vpandn
repz
fsubrp
div
fyl2xp1
in
lods
in
shr
loope
repnz
mov
mov
stos
aam
cmp
stos
mov
lods
mov
aam
inc
inc
cmpb
fdivrp
in
fcoms
in
ficompl
iret
sbb
push
or
fimull
adc
mov
test
mov
clc
cmpsb
repz
iret
into
aam
leave
call
sbb
jmp
loop
push
fcoms
adc
pop
repnz
push
cld
repnz
lock
push
or
jmp
or
in
push
cmp
cmp
out
adc
adc
sub
xor
xor
cmp
push
add
pop
add
push
sbb
sub
sub
xor
and
dec
dec
aaa
ss
pop
dec
jge
xor
pop
inc
dec
aaa
and
jle
das
aaa
pop
jle
js
xor
dec
jo
jae
push
and
sahf
lahf
sub
jbe
addr16
jbe
push
mov
xchg
outsb
insb
dec
ja
dec
test
jno
test
gs
xchg
nop
mov
imul
scas
mov
scas
cmpsb
test
mov
pusha
mov
mov
xchg
mov
test
lods
fstp
into
test
hlt
cmc
cmc
fcom
movsl
sti
mov
shl
iret
lret
loop
out
.byte
