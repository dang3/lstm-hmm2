push
inc
loope
ret
nop
pop
std
mov
pop
out
rsm
lods
xlat
mov
test
aaa
adc
pop
jae
push
pop
xchg
repnz
fsubl
scas
adc
shlb
pop
repnz
stc
jp
in
add
movsb
rol
or
and
stos
sub
or
add
fbstp
stc
mov
xchg
test
fnstcw
fnsave
lcall
jge
leave
test
subb
shlb
sub
sub
fdivs
push
outsb
xor
pop
dec
adc
xor
int
dec
inc
sbb
aam
int
adc
outsb
loop
xlat
fldenv
cmp
mov
mov
push
push
or
std
mov
bnd
jmp
in
add
in
movsb
loopne
cmp
mov
in
repz
xchg
fisttpll
lret
or
pop
gs
and
xor
mov
lds
aam
push
lods
andl
jo
ds
jle
mov
adc
xor
je
xor
pop
test
outsl
lds
imul
pushl
insl
fidivl
cmp
xor
push
add
mov
xor
sbb
adc
xchg
push
mov
jno
xchg
insb
cmp
or
sti
jns
push
test
or
cmp
das
mov
xchg
sbb
negb
add
mov
ljmp
or
adc
xchg
cmp
imull
push
push
movsb
dec
pushf
shrl
jg
adc
rclb
inc
jae
mov
test
and
cmp
in
gs
push
jp
push
cmp
fwait
dec
sbb
outsl
jno
xchg
aam
xor
nop
mov
sti
jae
adc
mov
adc
lods
vpunpcklbw
xor
fisubl
push
xor
int
add
and
mov
inc
xor
mov
pop
dec
xlat
nop
mov
test
pushf
or
and
iret
movsb
push
ret
rcrl
pop
push
push
xchg
or
dec
sub
push
gs
std
mov
scas
fldl
arpl
xchg
mov
dec
cmpsb
mov
or
xchg
jle
xchg
add
sahf
mov
in
mov
hlt
fld
test
push
in
xchg
adc
dec
dec
jns
push
inc
mov
movsb
add
cltd
in
sub
lods
lods
popf
gs
inc
ss
int
sahf
out
movsl
ja
divl
ja
int3
decl
jne
push
and
out
pop
inc
and
fmuls
inc
leave
sub
xor
xor
pop
xor
pop
imul
xchg
decb
insl
pop
popf
movsl
es
xchg
rcl
jnp
ss
int3
mov
mov
or
outsb
xchg
mov
jns
inc
mov
test
xchg
mov
cmp
sbb
xor
mov
mov
nop
push
popl
scas
negb
in
pop
add
cmp
pop
mov
or
lcall
xchg
cmpsl
pop
xchg
inc
std
sub
dec
mov
div
in
lea
and
ja
stc
dec
cmp
xchg
and
dec
jae
xchg
dec
daa
xchg
sub
stos
push
scas
mov
or
or
icebp
testl
test
pusha
mov
test
push
out
pushf
cmc
push
fwait
addr16
clc
insb
jae
pop
adc
xchg
lahf
out
xchg
loopne
repnz
sbbb
jnp
data16
mov
shll
adc
xchg
mov
add
dec
into
xchg
and
test
shr
pop
jmp
mov
or
jmp
clc
add
and
jle
pop
mov
push
je
and
adc
inc
add
icebp
sub
insb
push
or
ss
pop
or
push
push
adc
insl
or
sub
mov
pavgw
es
sbb
xchg
and
lret
lret
mov
es
je
lea
rcrb
mov
das
sub
xchg
fstp
mov
lret
adc
push
lock
dec
outsb
and
xchg
int
xlat
test
dec
icebp
xchg
aaa
mov
jl
es
inc
or
adc
adc
je
and
inc
ja
sti
popf
pop
cltd
mov
call
mov
and
test
mov
fchs
int3
cmp
xchg
rclb
lock
dec
int
clc
fadd
jbe
mov
scas
pop
je
aas
fldl
les
adc
push
sbb
stos
fiaddl
and
test
adc
xchg
inc
outsb
mov
sub
pop
jge
mov
mov
insl
adc
xor
test
mov
add
fnstenv
movsb
push
cltd
push
xor
xchg
mov
pop
jnp
or
dec
sbb
out
jns
cld
jns
sbb
push
dec
mov
sbb
es
add
dec
mov
scas
pop
cmp
ret
sub
inc
test
fildll
scas
mov
or
dec
jge
cltd
xor
mov
dec
gs
xchg
mov
adc
pop
mov
mov
dec
push
shll
ds
shr
out
xor
movsb
inc
aaa
shlb
bound
aad
idivb
xlat
in
enter
jns
or
call
jae
and
in
or
mov
adc
dec
cwtl
inc
mov
fwait
inc
cmp
outsb
adc
pop
push
adc
xor
mov
push
jmp
xlat
outsb
and
push
adc
lods
pop
jae
inc
or
jo
lahf
mov
divb
ret
inc
dec
inc
insb
xor
mov
movsl
mov
lcall
mov
xor
add
sbb
mov
fstl
lcall
xor
and
insl
faddp
pop
sub
mov
jmp
aam
add
dec
nopl
add
mov
fwait
sub
subl
out
lcall
lret
fmuls
jle
jle
test
loope
jb
rcll
andb
pop
aas
sub
call
das
repz
mov
xor
test
pop
sbb
dec
aad
jl
sub
jg
and
das
dec
adc
test
push
xchg
mov
idivl
adcb
inc
fs
and
xchg
lret
in
iret
xchg
xor
push
or
xchg
mov
cmp
ljmp
jmp
push
mul
sbb
add
pop
sub
push
mov
outsl
or
dec
inc
xor
add
sar
shlb
adc
pop
cli
std
cmp
les
adcb
sub
and
xor
popa
mov
mov
mov
outsl
sub
adcl
xchg
sti
iret
clc
jmp
ffreep
sub
jg
push
xor
clc
xor
mov
add
or
jno
pop
mov
jo
movsl
out
cwtl
lahf
push
mov
push
push
call
cmpsb
clc
mov
nop
clc
sbb
es
xchg
xchg
test
lcall
das
pop
popf
inc
dec
in
xchg
cmp
cli
push
aas
or
xchg
mov
xor
xchg
xchg
push
mov
pop
mov
mov
mov
and
mov
xchg
cwtl
rcl
xlat
jmp
out
scas
fimull
sbb
sub
ret
ljmp
xchg
mov
imul
dec
jmp
push
or
push
adcl
insb
add
add
mov
sub
cltd
jmp
jne
daa
cld
fsubrl
andb
sub
sbb
push
inc
xor
leave
dec
adc
rcrl
cmp
dec
and
pop
or
xlat
sub
xchg
dec
mov
lock
inc
dec
jnp
sub
ja
adc
sub
dec
sar
mov
sub
jge
test
cmc
enter
insl
jle
xor
pop
pop
std
mov
or
adc
scas
shl
sub
cmp
or
lods
pop
iret
jne
inc
fwait
cmp
jb,pn
inc
pop
sbb
add
leave
stos
roll
and
xchg
and
repnz
mov
and
cmpb
or
push
sarb
outsl
inc
mov
add
xchg
addr16
les
push
jmp
sbb
out
decb
or
scas
gs
mov
jp
mov
cld
jbe
in
or
aam
jbe
mov
jg
pushf
adc
pop
add
clc
dec
xchg
ret
add
inc
cmp
mov
add
js
enter
push
mov
cmp
sti
dec
xor
icebp
out
pop
fs
adc
test
je
pop
fdivs
inc
pop
ficoml
in
mov
sub
inc
sbbl
daa
pop
ljmp
or
fdivrl
xor
mov
push
aam
jnp
les
push
shr
arpl
imul
and
addl
mov
mov
out
mov
fldl
push
jo
or
mov
test
mov
iret
cmp
in
inc
jmp
push
mov
daa
add
stos
dec
mov
enter
hlt
xchg
into
mov
or
outsl
sub
mov
adc
insl
xchg
arpl
repnz
cmp
push
scas
xchg
sahf
cmpb
dec
jecxz
or
lcall
push
inc
rorl
sbb
and
sbb
pop
mov
lock
shlb
roll
mov
and
inc
sbb
repnz
jne
fsts
in
mov
push
xchg
mov
sub
cld
fsubr
mov
mov
mov
je
jns
jo
clc
jae
or
inc
inc
hlt
cwtl
xchg
pop
das
xchg
test
xor
and
push
pusha
or
dec
pop
mov
lret
aad
inc
addr16
lds
les
iret
scas
push
or
sbb
lods
cmp
xor
push
mov
lret
push
lods
lds
jge
ss
cmp
adc
ljmp
sbb
cmp
or
push
out
stos
jg
xor
ljmp
or
lea
sti
jle
mov
mov
dec
push
adc
push
rcll
cmpsl
cvttps2dq
rolb
outsl
das
inc
insb
jbe
sahf
or
push
inc
lock
sbb
push
adc
push
mov
ds
mov
jmp
cmp
mov
sbb
gs
push
nop
mov
and
add
lods
scas
lar
fwait
push
cwtl
lock
nop
xchg
outsb
loope
or
inc
sbb
cmp
out
cwtl
in
rclb
jns
iret
dec
jo
and
shlb
sbb
nop
sbb
push
mov
push
jne
cmp
fdivrl
push
mov
add
iret
int3
nop
call
jmp
sub
xor
push
hlt
lds
cmp
int3
mov
sub
mov
jnp
jae
clc
imul
sahf
ret
das
pop
mov
in
in
fists
fwait
call
jae
mov
fcompl
icebp
sahf
or
rcrb
popa
inc
ss
xor
xorl
mov
push
cmp
and
cmc
dec
aam
cmp
in
adc
fwait
stos
cltd
pop
leave
lret
testb
mov
enter
sub
xor
popa
inc
adc
lds
xchg
adc
mov
lcall
in
movsl
add
outsb
je
sbb
inc
sbb
outsb
pusha
xor
stos
mov
out
mov
dec
inc
xor
ftst
lret
inc
push
push
scas
mov
or
lret
mov
dec
mov
cld
out
dec
je
dec
repnz
sub
ret
xchg
cmp
nop
rclb
mov
shlb
fwait
xchg
sbb
mov
xor
xlat
lret
sub
jb
xchg
nop
push
lret
fcoml
cmp
mov
loope
or
popa
push
cmp
mov
mov
pop
subb
jb
rcll
mov
add
ljmp
enter
mov
xchg
fidivs
out
js
insb
outsl
mov
addl
lods
xchg
mov
add
cmp
push
ja
movsl
inc
adcb
mov
xchg
addr16
dec
mov
int
sbb
fst
filds
je
jg
or
stos
fbstp
mov
sub
and
jb
cmp
aam
loop
cmc
mov
mov
sbb
jecxz
pop
jle
jbe
and
sbbl
jl
xlat
xchg
leave
in
xor
or
mov
inc
shll
pop
pop
and
mov
mov
in
sub
xchg
orb
sti
mov
data16
mov
pop
cmpl
dec
fsubrp
pop
leave
xlat
mov
lods
sbb
ja
out
xchg
lahf
loop
cmc
aad
mov
test
dec
pop
pop
xor
dec
sbb
cmc
dec
test
ds
dec
fs
pop
cmc
mov
aaa
rclb
pop
pusha
imul
dec
arpl
mov
sub
enter
mov
imulb
shrb
stc
lahf
or
jbe
shlb
out
rcrb
in
lret
xchg
pushf
sub
push
sbb
jecxz
ljmp
xchg
jmp
xchg
hlt
xor
cmp
ljmp
gs
mov
outsl
jns
mov
add
adc
in
pop
call
pop
add
stos
cli
jns
out
aam
pop
push
xor
loope
insb
cmp
and
xchg
clc
in
mov
dec
xlat
xor
sub
insb
lcall
arpl
scas
aas
or
dec
loope
and
pushf
sub
scas
jmp
push
mov
not
adc
or
inc
xor
push
sbb
adc
or
lock
xchg
sbb
or
pop
mov
xchg
mov
mov
pop
sbb
outsl
ret
addb
fcompl
in
test
incl
adc
cmpsb
scas
push
lods
inc
decl
incl
xchg
mov
pop
arpl
jge
ret
jge
cmp
ja
aam
into
dec
xor
push
into
out
je
loopne
and
and
outsl
imul
imul
or
in
mov
aas
enter
sub
rorl
movl
inc
mov
stos
notb
lret
add
lret
inc
and
xchg
cmpsl
pop
mov
jne
xor
mov
xor
mov
inc
repz
sbb
push
push
ret
mov
cmp
cs
xchg
or
inc
cmp
push
adc
nop
mov
add
inc
jg
adc
sar
arpl
jmp
add
and
push
inc
pop
aas
xor
jecxz
ret
imul
dec
and
ljmp
mov
movsl
pop
mov
mov
jmp
push
jle
arpl
xchg
mov
mov
inc
movsl
adc
scas
repz
inc
or
add
cmp
das
xchg
jns
inc
pushf
mov
mov
popa
mov
sub
test
jns
dec
into
mov
dec
outsb
shrb
inc
xchg
pop
stc
movsl
ja
ret
mov
sub
rclb
fcoms
push
dec
pop
lds
das
dec
idivl
and
sti
fcmovb
addr16
clc
pop
and
mov
outsb
xorl
cwtl
inc
outsb
dec
fwait
int3
xchg
dec
divl
pop
jl
dec
inc
mov
push
jg
push
dec
test
xlat
mov
dec
nop
pop
mov
in
push
sbb
xor
sarl
in
adc
addr16
jb
cld
or
adc
sub
xor
insl
push
outsb
cld
pop
test
cmp
movsb
daa
and
insl
pop
pop
sub
cld
adc
pop
or
mov
in
mov
mov
lds
je
inc
pop
xorb
mov
stc
out
mov
faddl
sahf
pop
das
xor
dec
jb
xor
filds
leave
sub
rcrl
push
xor
rcrb
shlb
pop
enter
xorb
movsb
jecxz
and
cltd
cli
call
pusha
jecxz
pop
mov
fisubrs
jmp
mov
mov
movntq
out
or
popf
mov
sub
insl
in
pop
test
out
jl
add
jmp
sbb
bnd
jae
sarl
je
jp
inc
jbe
pop
sbb
out
dec
xchg
outsl
shlb
aad
in
shll
add
sbb
jne
lds
cmpsl
scas
jle
xchg
repnz
cmp
popf
dec
stos
cmpsl
movsb
lcall
test
clc
outsb
test
dec
rcrl
xchg
ret
add
and
jecxz
ds
jno
sub
sbb
iret
stc
xchg
xchg
mov
sbb
fsubrl
in
popf
arpl
popf
sub
pop
data16
pushf
test
xor
xor
mov
jle
push
mov
mov
mov
adc
wrmsr
ljmp
dec
mov
cmp
jecxz
js,pn
cs
dec
dec
sbb
out
mov
into
jecxz
les
dec
cld
fdivrl
or
mov
daa
outsb
sub
out
dec
aaa
insl
push
js
out
data16
inc
xchg
pop
dec
shlb
xchg
incb
cli
cmp
cmpsb
adc
adc
dec
sbb
and
inc
push
lods
ljmp
cmpb
addr16
fs
cmpsl
test
fldenv
fdivr
ja
jmp
mov
test
cwtl
loope
leave
cltd
clc
data16
xchg
jl
mov
cli
mov
repnz
je
push
xor
pop
inc
dec
test
clc
jp
mov
fnsave
inc
outsl
cmpsl
and
dec
cli
jg
jecxz
int3
clc
jae
push
outsl
ljmp
jmp
xchg
pop
dec
adc
in
fsubr
loopne
pop
out
sbb
pop
leave
stos
and
mov
mov
jge
dec
out
pop
lds
pusha
adc
sti
gs
push
mov
cli
icebp
xor
push
jecxz
cmp
lret
fsubs
aad
inc
push
in
dec
notb
cmpsb
xor
aas
in
dec
and
xchg
and
cmc
pop
cmpsb
cmpl
mov
in
dec
hlt
leave
sub
adc
mov
add
cmp
push
ljmp
test
add
xchg
xchg
imul
dec
inc
mov
jo
inc
jp
iret
cltd
pop
dec
pushf
push
das
and
movsb
jae
stos
std
adc
xchg
inc
test
pop
jecxz
rolb
les
sub
add
popf
and
push
prefetch
aas
xchg
push
cwtl
rorl
inc
cs
cwtl
fs
mov
call
adcl
into
mov
pop
enter
cmp
xor
mov
xchg
std
mov
aad
sub
pop
mov
in
mov
cld
mov
mov
aam
jb
fmuls
inc
pop
movsl
std
adc
sbb
sub
insl
jge
ss
scas
mov
test
cld
lcall
xchg
push
push
dec
ja
mov
push
add
mov
in
ja
dec
or
test
les
lcall
mov
mov
or
ja
pop
mov
and
cmp
imul
in
mov
pop
mov
shll
xlat
xchg
subb
scas
shlb
test
call
cltd
pop
mov
add
cmp
jg
lods
inc
mov
jns
xor
inc
xchg
mov
rcrb
sbb
das
dec
inc
and
sbb
popf
and
pop
mov
jno
clc
add
pop
subl
mov
jo
call
sub
lea
mov
jno
adc
sub
sub
mov
fistpll
clc
mov
aaa
mov
mov
pop
aam
sbbb
rcr
jge
not
mov
mov
pop
stos
dec
push
mov
xor
inc
dec
or
mov
xchg
mov
pop
adc
push
jl
sub
inc
pop
test
dec
paddw
mov
xor
stos
mov
pop
stc
xchg
sbb
dec
outsb
mov
jae
or
enter
push
dec
mov
adc
or
jnp
ds
icebp
xchg
jne
jg
dec
lcall
inc
scas
or
xchg
cmp
shll
cmpsl
nop
xchg
jae
fldt
add
addr16
sbb
hlt
loop
jo
sub
push
iret
or
cmp
ljmp
jb
add
je
lock
push
clc
mov
ss
cld
dec
out
imul
cli
adc
fs
pop
rorl
mov
cs
aam
dec
js
adc
push
call
fidivl
xchg
stc
mov
popf
les
pusha
xchg
dec
xchg
jmp
mov
fwait
pop
out
mov
cmp
hlt
xchg
clc
inc
ret
icebp
imul
push
rol
jle
jl
xlat
add
mov
inc
lock
pop
out
imul
xorl
outsb
inc
rcrl
pop
lods
xchg
mov
xchg
sub
out
adc
push
ds
sti
mov
xor
iret
mov
or
xor
jg
lock
js
pop
fmull
pop
repnz
div
push
or
mov
mov
test
mov
daa
mov
pop
movsl
out
pop
mov
popa
insl
sbb
or
stc
mov
mov
sbb
push
adc
ds
mov
mov
fadds
jno
adc
divl
dec
xchg
rorb
jne
dec
mov
bnd
ss
leave
int
push
push
pop
lcall
pop
lds
mov
insl
aam
push
xchg
rcr
ret
xchg
push
sbb
in
xchg
pushf
leave
pop
loopne
jp
int3
call
outsl
push
push
ja
xor
cmpsb
mov
mov
ja
dec
inc
in
sqrtps
push
adc
test
cmpsb
ficompl
int3
xor
ja
int3
orl
jbe
mov
jbe
push
pop
inc
movb
mov
push
inc
rcrb
movsb
shlb
inc
sbb
add
add
push
mov
push
jnp
pusha
mov
clc
dec
lods
cld
sar
fsubrs
pushf
and
iret
ljmp
insb
test
mov
jl
aad
xor
daa
inc
xor
jno
push
push
adc
xorl
mov
dec
test
xadd
nop
or
mov
test
test
xchg
in
push
cmpsb
and
nop
les
lret
add
jecxz
fnsave
adc
mov
jecxz
mov
xor
call
sbb
ds
xor
adc
das
and
jbe
adc
cmp
sub
test
outsb
xchg
mov
sub
fstps
add
iret
mov
cmp
cmp
test
cmpb
std
jnp
pop
je
dec
pop
push
iret
mov
pop
sbb
aas
push
adc
and
sbb
push
aam
and
das
cmpsl
fisttpll
lret
inc
jle
out
adc
dec
pushf
rol
scas
mov
jmp
addr16
and
shl
xor
push
lds
mov
icebp
aam
cmp
xchg
sbb
pop
int3
test
or
xchg
and
bnd
cmpsl
dec
add
gs
xor
stc
cmp
adc
jo
sub
sti
jns
test
mov
inc
imul
jb
ret
adc
xchg
jbe
sbb
ret
gs
test
rolb
push
outsl
dec
mov
xchg
inc
xchg
icebp
mov
addb
dec
sti
lods
ficompl
push
pop
add
outsl
push
push
ds
add
test
or
inc
aam
int
jge
fcmovne
in
and
ljmp
inc
lret
lods
mov
cmpsb
repz
int3
sub
xchg
fldl
ja
mov
mov
sbb
inc
xchg
cmpsb
push
imul
jo
sub
push
out
and
gs
fsubl
leave
mov
sub
sarb
sti
addr16
cmp
mov
push
repnz
subl
movsl
pusha
pusha
mov
sbb
test
mov
jbe
lea
repz
sbb
out
jns
mov
insb
inc
pop
outsb
lock
lret
cmp
repz
scas
inc
pop
out
addl
test
ja
das
jnp
and
mov
call
call
icebp
add
fdivp
hlt
jns
pop
cmp
fisttpl
xchg
leave
movsl
jle
sbbl
adc
add
repz
add
pushf
pop
mov
shrl
aad
push
int
push
xchg
lret
hlt
inc
cmp
jmp
fildll
inc
popf
mov
scas
fimull
fldl2t
hlt
dec
in
insb
pushf
test
mov
sub
adc
fimull
cltd
xchg
out
xchg
mov
mov
xor
sub
call
xchg
movsb
add
lret
outsl
les
adc
push
sahf
sahf
mov
cmpb
mov
imul
inc
inc
jnp
pop
xor
shll
lea
add
adc
popa
aad
pushf
pushf
into
cs
aam
sbb
sbb
pushf
imul
les
scas
and
xor
pop
mov
cwtl
sbb
xchg
dec
sub
xchg
mov
call
cmp
push
in
xchg
call
jno
mov
mov
insl
es
mov
push
loope
stos
int
call
sub
cmp
pop
cld
and
pop
cmpb
stos
mov
cmp
subl
cmp
add
adc
pop
sahf
sub
xor
push
das
mov
movsl
and
xor
fisubrs
inc
xor
mov
sbbl
aas
repnz
and
ret
xor
sbb
mov
push
or
mov
mov
dec
shl
cmpsl
jge
xchg
push
adc
push
andl
cmp
sub
je
push
mov
lcall
loopne
repz
adc
jae
gs
pop
lret
stc
stc
mov
jmp
and
cmpsb
mov
mov
leave
in
mov
popf
in
and
nop
xchg
aad
loope
add
rolb
insb
jge
push
mul
fsubr
pop
or
mov
jecxz
outsl
into
sti
xchg
outsb
idivb
movsl
jo
or
inc
ret
add
decb
xor
mov
outsl
outsl
in
push
daa
push
dec
js
mov
mov
dec
lea
in
inc
and
sub
mov
mov
stos
shl
cmpsl
js
repz
adc
ror
lds
dec
xchg
add
add
ss
loope
movsl
lock
out
cmp
cmpb
xchg
sub
gs
data16
mov
xchg
xor
sbbb
mov
ret
pop
cld
test
mov
push
iret
inc
scas
xor
in
sbb
add
aaa
aas
xor
add
test
mov
das
sbb
int
aad
dec
fnstsw
cld
and
pop
xchg
or
ds
loopne
push
cmp
or
sahf
jbe
subl
cwtl
dec
les
shrl
divb
fsubrs
push
mov
dec
sti
jecxz
mov
fadds
test
cmp
in
clc
xchg
shrl
or
inc
lds
add
faddl
les
fcoml
arpl
push
test
repz
out
xor
into
aad
cmp
dec
sarb
sbb
jle
inc
cli
or
adc
xchg
pushf
lods
into
roll
mov
push
push
shlb
addr16
dec
mov
lret
ljmp
mov
fiaddl
jbe
jp
jle
adc
dec
sbb
subb
loope
hlt
sbb
dec
adc
ret
lcall
js
mov
pop
daa
std
leave
sti
movsb
sahf
push
jns
xchg
sbbl
mov
popa
int
push
movsb
outsl
scas
pushf
dec
sub
sub
pop
mov
inc
divb
xchg
cmp
mov
xor
jp
cmp
add
xor
cs
pushf
loopne
and
adc
lods
add
imul
ja
pusha
in
cmp
adc
xlat
sbb
lods
xlat
sbb
iret
je
lret
fs
cmc
push
push
repnz
out
call
jecxz
add
sbb
xchg
sbb
pop
inc
aas
inc
repnz
out
push
aas
cmp
mov
xchg
adc
xchg
fs
loop
leave
fwait
iret
xchg
shrl
rcll
outsb
and
pop
fisubl
clc
fisubrs
or
jae
cmpsb
jo
push
pop
jmp
fucomip
call
cltd
outsb
ds
jl
iret
dec
lret
dec
push
cmp
out
lcall
push
push
mov
jno
adc
mov
bound
das
push
aam
inc
dec
icebp
mov
xchg
imul
pop
imulb
aam
mov
dec
lcall
pop
push
xchg
jbe
pop
jnp
push
xlat
jmp
jecxz
or
jge
and
pop
js
inc
insb
cltd
and
xor
into
push
aaa
inc
and
dec
stos
test
xlat
mov
mov
addr16
pop
stc
adcb
sarb
movb
or
mov
aas
xchg
movsb
lock
jle
lds
ficomps
mov
in
iret
jns
test
pop
add
flds
xchg
cmp
dec
sub
xor
call
cmp
mov
add
mov
dec
pop
sbb
and
jae
jne
sbb
cli
sbb
cmp
icebp
cmp
ja
int
cmp
addr16
lret
fsubr
inc
sahf
jbe
jne
dec
mov
or
fadds
fdivp
fistpl
inc
xor
mov
cltd
call
pop
add
sbb
cmp
gs
les
and
add
into
inc
sti
jg
into
fadd
cs
pusha
mov
sub
add
nop
xchg
lahf
sti
int3
out
jno
mov
cli
aas
mov
xchg
mov
cli
jmp
repz
push
bound
sub
inc
popf
lock
jmp
loopne
cmp
inc
test
inc
mov
mov
mov
mov
mov
test
cmp
in
int3
imul
mov
adc
outsl
js
mov
cmc
mov
enter
cli
mov
xor
jge
dec
test
arpl
or
xor
or
mov
shr
jle
inc
xor
dec
pop
ror
sub
enter
mov
jge
clc
hlt
xorl
cld
jns
scas
stos
push
push
and
js
mov
pop
push
pop
mov
pop
popf
adc
imul
or
adc
jnp
leave
je
movsl
je
jg
lcall
cltd
cmpsl
arpl
and
mov
insl
repnz
or
and
sub
stos
fldt
leave
xchg
insb
xchg
push
inc
in
push
int
outsb
xor
inc
in
popa
sbb
jns
push
push
cmp
jge
pop
adc
insl
add
or
inc
out
inc
mov
jge
pop
lahf
inc
xchg
iret
adc
arpl
arpl
jl
rolb
rcll
idiv
pop
sbb
lret
sbb
std
cmp
ds
xchg
push
aad
mov
pop
xlat
jb
dec
ret
xchg
lock
inc
sbb
jmp
pop
sub
shl
sub
adc
mov
in
int3
cmp
mov
loop
push
cmp
sub
sub
push
int
mov
lcall
mov
ret
mov
rolb
sti
xchg
scas
mov
inc
pusha
pop
adc
int
push
rorb
push
sbb
cmp
inc
jo
rep
dec
popl
adc
lahf
cld
cs
testl
iret
popf
shll
mov
leave
mov
cmovno
sbb
cmp
xor
jl
sub
test
sub
test
enter
fcomps
fisubrs
insl
popa
repz
call
lock
bound
sub
sarb
icebp
dec
loope
xchg
adc
dec
sti
daa
dec
test
imulb
push
stos
pinsrw
insl
jge
ret
icebp
lcall
push
cmpsl
out
test
push
mov
cltd
cmp
ret
cli
call
pusha
fsub
out
out
jbe
push
fs
or
outsl
icebp
cmpsl
mov
mov
inc
int3
sub
inc
mov
pop
mov
rcrl
add
loope
fsubrs
lea
sub
fwait
mov
or
dec
jl
mov
cmpb
fldenv
xchg
or
fldenv
lret
adc
lret
xor
or
mov
decl
addr16
jb
xchg
xlat
adc
out
repnz
jmp
add
das
imul
jno
and
pop
lahf
xchg
sub
cmp
mov
gs
stc
outsl
cmp
ficoml
dec
inc
xchg
mov
sub
mov
xchg
test
adc
movsb
pusha
aas
cmpsl
sbb
movsb
adcl
jmp
mov
inc
add
inc
pop
scas
leave
push
sarb
clc
mov
ja
add
sar
or
mov
mov
inc
jecxz
dec
push
movsl
and
aam
icebp
adcb
jmp
cmp
dec
jb
popl
ret
repnz
rorb
push
roll
add
push
scas
ja
std
xchg
stos
mov
aas
js
add
divps
push
lret
insl
xor
mov
sub
add
stc
cmp
es
dec
loop
sbb
mov
mov
imul
repnz
fwait
jnp
fucomip
shl
dec
add
mov
scas
add
jle
xchg
fdivl
cmp
add
or
jg
test
sub
adc
xchg
or
pop
or
push
imul
dec
daa
dec
loope
inc
push
and
sti
push
dec
stos
aaa
scas
xor
pop
jno
ds
push
mov
jp
loop
imul
add
mov
arpl
jle
cltd
das
sub
xor
fldenv
mov
outsb
roll
pop
sbb
mov
adc
aas
sarb
aad
sub
mov
stos
sahf
loopne
dec
aas
and
mov
or
je
sbb
bound
add
add
inc
out
cmp
push
popf
repz
mov
aas
jg
inc
xor
in
dec
xor
sti
mov
dec
inc
into
aaa
xchg
mov
enter
mov
sahf
mov
add
sub
rorb
adc
fildll
stos
mov
icebp
add
ja
js
jns
dec
in
lods
mov
inc
ljmp
push
fsubl
adc
andl
rcrb
stos
out
jecxz
jo
stos
mov
faddl
cltd
in
mov
faddl
fstps
fstps
push
inc
fldenv
xchg
xchg
std
call
inc
dec
mov
cli
jbe
out
iret
cltd
mov
jns
dec
addb
xchg
sahf
jns
loopne
adc
cwtl
je
inc
push
dec
cmpsb
pop
xchg
inc
push
movsl
dec
inc
dec
repnz
sub
test
stc
mov
and
stc
dec
sbb
pop
jne
sub
cltd
push
aas
cmc
cli
rcl
push
stos
or
mov
sarb
mov
fld
xchg
sar
pop
mov
sub
jne
insl
ficompl
lods
fs
inc
xchg
inc
loop
mov
or
add
dec
ja
xchg
cmp
sbb
les
sbb
inc
push
flds
jecxz
out
and
push
xchg
daa
cmp
xchg
xchg
pushf
dec
and
dec
mov
mov
cmp
outsl
or
or
jnp
cwtl
mov
sbb
lret
in
cmp
jecxz
or
inc
mov
xchg
xchg
shll
addl
mov
loope
loope
mov
stos
out
pusha
jmp
jle
shrb
test
jne
pop
jno
jmp
push
mov
stc
loop
ja
mov
loopne
loope
xchg
clc
bnd
mov
xor
add
xchg
jne
xchg
or
add
ret
add
cmp
pop
pop
jmp
sub
dec
mov
pop
ds
jle
es
sub
or
data16
es
jae
cmpsl
orb
sbb
incl
push
push
ror
pop
call
push
push
push
mov
pop
pop
pop
ror
nop
jo
shl
push
and
pop
pop
add
push
pop
push
add
pop
jmp
sub
adc
jmp
addr16
pop
xor
cmp
loope
cmpsl
xchg
xchg
mov
sbb
roll
push
mov
jne
cmp
mov
repnz
lahf
mov
jle
pop
outsl
cmpsl
popa
push
mov
sbb
push
add
in
imul
popf
push
mov
push
jb
jb
add
shr
out
in
stos
sbb
push
fs
dec
test
cmp
int3
lcall
and
jmp
sbb
sar
loopne
pop
xchg
cmp
pop
nop
fcoml
jne
packsswb
pop
mov
mov
add
add
je
add
push
mov
push
xor
pop
pop
add
jmp
popa
mov
in
mov
cmpsl
add
xchg
xor
aaa
hlt
and
fsubs
scas
mov
adc
mov
sub
movsb
clc
xor
sbbl
push
xchg
or
test
sbb
pop
aam
lods
shr
sbb
shll
sti
stos
push
daa
cmp
inc
jle
subb
mov
inc
out
sub
inc
mov
adc
pop
in
inc
xor
dec
aad
les
lods
pop
int3
add
inc
aaa
fidivl
cmp
mov
shlb
fcmovu
shrb
sbb
mov
sub
and
sub
fistl
pop
sbb
ss
into
xor
dec
and
test
and
or
test
loope
sub
xchg
enter
push
push
push
pop
pop
stos
push
push
pop
pop
pop
pop
nop
jmp
pusha
aaa
lea
divl
mov
jb
push
mov
scas
push
sbb
adc
popa
cwtl
ret
ljmp
mov
int3
jnp
stc
ja
mov
cmp
sbb
cmp
and
data16
mov
add
pop
sti
ljmp
mov
adc
adc
jl
cmp
inc
shlb
into
xor
int
or
inc
jge
inc
fdivp
xor
jge
divl
fdivs
int
repz
jns
or
mov
mov
test
out
outsl
xor
scas
pop
pop
mov
sbb
add
adc
lea
sub
xchg
aas
gs
cwtl
mov
mov
jp
popl
sub
lods
mov
and
add
push
test
pop
je
and
jmp
inc
jne
fmul
stos
inc
jnp
pop
stc
dec
ret
lock
fs
jno
cmp
scas
sub
dec
adc
rcl
lcall
pop
adc
test
enter
xchg
push
out
adc
leave
mov
add
imul
add
in
sub
sub
sbb
clc
arpl
mov
jno
xor
loopne
mov
sbb
aaa
mov
inc
sub
lahf
lea
into
mov
in
mov
cmpl
push
jo
mov
ja
fsubrl
lods
mov
xchg
andb
fsubrl
pop
test
push
xchg
jecxz
outsl
les
or
aam
pop
cmpsl
dec
out
pop
sub
or
pop
pop
pop
pop
adc
daa
outsb
cmp
mov
mov
jg
sti
dec
das
pusha
aaa
mov
imul
pop
in
or
jecxz
mov
out
pop
sbb
fmull
dec
jne
jmp
xor
cmpsl
pusha
adc
dec
sub
clc
mov
lret
push
fiaddl
cmpl
mov
jl
jo
lret
mov
mov
jnp
pusha
test
sub
sti
negl
mov
std
imul
out
sti
xchg
nop
fildll
mov
daa
negb
push
xchg
aaa
xlat
cmpsb
adc
test
nop
adc
loop
xor
dec
je
push
jl
xchg
mov
pop
jmp
jnp
ds
and
sar
adc
adc
fwait
pop
cmp
insb
mov
mov
nop
das
enter
orb
stos
out
scas
mov
adc
mov
xchg
in
xor
and
dec
ret
fmuls
push
into
and
inc
xchg
mov
cmp
jg
mov
jnp
lods
xorb
pop
std
js
cld
cmp
fldt
add
add
push
cmp
dec
push
pop
fdivl
fs
fucom
push
insb
dec
push
xchg
mov
xchg
xor
and
xchg
test
mov
sbb
push
loopne
add
fisubrs
hlt
mov
aas
loop
mov
cwtl
hlt
lds
pop
sub
imul
xchg
in
cmp
pop
cli
and
std
mov
jle
add
mov
cmp
popa
out
push
xchg
mov
adc
mov
sub
fs
sbb
push
jo
repz
nop
test
sarl
pusha
movsb
pop
insl
adc
mul
jl
sbb
jmp
mov
arpl
loopne
adc
aad
jge
aas
in
jmp
jae
xchg
and
jno
iret
jae
adc
insb
popa
xor
into
lret
and
push
push
aad
push
stos
xlat
insb
scas
jg
jae
in
cmc
mov
adc
cmp
push
idivb
jle
mov
xor
cltd
pop
and
mov
daa
js
sarl
mov
add
xchg
fwait
jl
push
xchg
addr16
pop
jns
test
aam
or
inc
jb
icebp
div
cmc
dec
test
jns
push
repz
inc
or
mov
hlt
add
push
and
popf
pop
fdiv
sub
xchg
repnz
adc
fsts
test
ljmp
imul
shlb
push
jl
xchg
push
and
jle
push
xchg
scas
arpl
pop
sub
loopne
add
daa
mov
mov
scas
jp
xchg
repz
add
jecxz
decl
notb
stc
and
hlt
xchg
xlat
mov
je
jae
addr16
jecxz
mov
jle
insl
add
imul
xlat
negb
adc
mov
adc
jae
gs
xchg
jb
test
jb
mov
outsl
stos
mov
out
aad
add
jae
inc
gs
jp
insb
xchg
hlt
sbb
cmp
cmc
mov
bnd
lret
mov
lret
jno
icebp
mov
repnz
jge
icebp
sub
inc
jb
jns
jb
xorl
jb
cltd
lret
roll
ss
jno
aad
icebp
cmp
leave
cli
icebp
add
pop
icebp
repnz
call
xchg
icebp
pop
xchg
cmp
pop
popf
out
imul
pop
jae
popf
mov
jb
mov
jae
mov
mov
in
jb
in
ljmp
add
sub
mov
icebp
pop
add
bnd
or
inc
repnz
sar
imul
pop
jae
aad
jb
mov
lcall
xlat
jb
jae
adc
jb
sbb
bnd
xchg
lret
lock
and
test
sub
enter
or
mov
mov
insl
mov
sbb
sahf
and
jae
pop
stc
incb
cmp
cmc
or
pop
add
jbe
sub
inc
sub
mov
bnd
jno
repnz
xor
dec
in
dec
inc
std
lock
clc
pop
repz
add
jns
pop
sbb
jo
add
dec
jo
sbb
jbe
and
jne
dec
sbb
push
int
popa
mov
imul
repnz
pusha
pop
imulb
imul
jmp
sbb
lds
mov
leave
cmp
jno
and
pop
insl
mov
cmp
jge
xchg
jbe
jns
jno
sbbl
out
fnstcw
jmp
subb
mov
jmp
xchg
jge
sbb
dec
in
out
cmc
dec
sahf
jmp
push
dec
insb
pop
outsl
mov
imul
outsb
outsl
mov
insb
sahf
pop
into
outsl
sub
imul
ljmp
movsb
pop
lock
mov
in
dec
cltd
mov
jmp
movsl
sub
xor
mov
aas
lock
gs
jmp
insl
scas
out
or
in
sbb
imul
imul
jo
sbb
outsl
xchg
jo
mov
push
not
push
icebp
jns
lret
mov
cmp
add
fstps
in
sub
mov
lock
mov
lea
insb
pop
mov
stos
insb
mov
pop
jno
aad
insb
stos
psubw
lret
xchg
jecxz
ss
sub
test
std
pop
in
in
xchg
imul
cmc
shl
fisubl
cmpsb
sbb
adc
lods
cmp
pop
add
pop
sarl
aas
int3
mov
push
cli
icebp
movsb
push
loopne
das
adc
daa
mov
jns
loopne
jg
xchg
in
cltd
inc
sahf
jae
sbb
inc
imul
pop
ljmp
sbb
sahf
aas
jmp
push
pop
notb
pop
fwait
daa
fstpt
push
mov
push
and
imul
pop
imulb
sbb
xchg
daa
or
scas
es
cmp
out
lods
ret
dec
flds
ljmp
jge
mov
outsb
mov
mov
ds
xchg
and
mov
xchg
clc
push
outsb
movsb
mov
mov
stc
pop
cmp
sahf
imul
mov
sbb
or
ret
aad
test
lret
jns
dec
aad
mov
add
xchg
cltd
sub
mov
mull
mov
cmpsl
scas
push
xchg
cwtl
insl
mov
iret
jns
in
stc
outsl
loopne
mov
pop
nop
outsl
movsl
jo
fs
outsb
jg
inc
mov
push
addb
or
ja
xor
cmp
mov
inc
mov
pop
arpl
xor
lcall
pop
jae
cmp
test
cs
repnz
jl
std
dec
mov
dec
sbb
popa
sbbl
insb
loopne
dec
push
jecxz
fstpl
mov
ja
js
shrl
jne
or
test
add
fsubr
rol
ljmp
xor
cmpsl
cmp
scas
dec
sub
xchg
mov
dec
lretw
and
neg
jnp
lret
mov
ret
addr16
clc
xchg
inc
jmp
push
mov
pushf
jge
add
test
jnp
das
ja
dec
add
test
outsb
or
xor
jbe
out
add
pop
xchg
cltd
push
push
jmp
aam
and
and
or
fldl
push
xlat
mov
mov
int
incl
test
ja
addb
mov
out
pop
shrl
out
out
ja
jno
sbbb
inc
push
repz
push
fidivl
sub
inc
jp
bound
adc
jmp
clc
or
add
sbbb
hlt
arpl
outsl
ret
inc
sbb
mov
mov
insl
je
lcall
mov
loop
and
sti
inc
cld
loopne
sbb
xchg
xor
negl
fisubrl
dec
insb
addr16
jle
andl
xlat
jp
es
enter
repz
imul
push
das
or
cmp
lods
test
ja
push
adc
clc
js,pn
out
js
inc
cmp
jmp
mov
jge
xorl
subl
pop
jmp
ret
scas
fnsave
push
les
inc
ds
addr16
mov
mov
dec
push
test
subl
and
xor
sbb
into
jne
gs
test
mov
adc
rcl
sbb
mov
xor
jnp
notl
cmp
shrl
jns
add
das
xor
sbbl
insl
or
add
mov
push
lods
fs
insb
sub
fcompl
jbe
mov
out
shll
insb
mov
inc
fists
xor
data16
lcall
loop
sub
js
jecxz
out
popf
outsl
shll
hlt
nop
aam
ds
repz
xchg
mov
int
cmp
push
fwait
out
pop
jg
hlt
ja
inc
cld
pop
cld
fists
lcall
xor
in
fnstsw
pop
fsubl
arpl
cmp
fs
jp
mov
dec
dec
xor
cwtl
in
adc
loope
repz
adc
inc
mov
mov
jb
push
add
inc
fcmovb
cld
ret
fisubl
mov
or
cwtl
mov
mov
fbld
pop
test
scas
pop
loop
and
leave
push
clc
movsl
and
pop
insl
outsl
aaa
repnz
test
or
mov
jno
or
adc
cmp
dec
or
xchg
je
ret
mov
inc
pop
jne
pop
mov
std
adc
xchg
loopne
xor
stos
stos
adc
xchg
fidivrs
dec
jb
jmp
out
push
sbb
pop
aaa
call
sahf
je
fsubr
adc
shll
scas
pop
xchg
mov
push
fs
ss
data16
pop
loope
push
lock
imul
loope
scas
inc
push
mov
mov
shll
dec
into
lds
push
imul
ja
pop
cmp
push
ljmp
dec
ficomps
jg
icebp
cmp
jp
pop
lods
lret
or
ret
xor
and
jmp
xchg
push
hlt
xchg
dec
lret
inc
or
stc
mov
mov
and
add
push
jno
les
mov
imul
xor
inc
addr16
mov
test
xchg
imul
push
and
ja
dec
sub
sub
mov
and
arpl
cmpsb
out
ficompl
out
rol
push
aam
outsl
push
loope
dec
cmp
popa
in
imul
add
aaa
inc
test
add
xchg
jecxz
cld
loope
sub
mov
rolb
lods
cmp
or
jge
xor
pop
in
mov
pop
push
rolb
icebp
pushf
popf
push
jecxz
int3
and
cmp
push
cmpsl
enter
cmp
fmul
mov
xchg
stc
xchg
mov
push
mov
and
jb
mov
inc
or
frstor
mov
rorb
shlb
inc
dec
inc
cmp
aas
rcl
pop
stc
jmp
dec
clc
adc
rol
call
scas
pop
adc
pop
pop
pushf
lahf
or
cltd
daa
sti
ret
lock
or
mov
jb
and
sbb
xchg
xchg
scas
mov
fnstsw
mov
dec
shrb
mov
das
and
push
loopne
out
mov
sub
mov
fnstsw
aaa
inc
sbb
movsb
insb
sub
dec
nop
and
call
int3
and
push
js
inc
mov
ljmp
std
lcall
sub
cli
add
mov
test
je
aam
pop
or
xchg
les
xor
lcall
in
data16
das
push
mov
jge
mov
push
sbb
sbb
mov
or
inc
ds
enter
in
add
dec
mov
in
inc
dec
jmp
and
pop
leave
or
dec
sub
out
ficoms
pop
sbb
push
out
sbb
adc
and
adc
pop
roll
mov
push
mov
je
pushf
or
cmp
icebp
mov
fwait
in
push
into
adc
sbb
push
mov
adc
sbb
adc
fistpl
add
sarl
test
popf
jae
js
insb
arpl
loop
dec
mov
or
test
mov
fnstenv
add
mov
dec
insl
test
pop
imul
sub
scas
jge
xchg
sub
or
faddl
pcmpeqd
call
mov
fsubl
add
inc
hlt
sahf
dec
test
push
stc
cmc
sarb
shrb
negb
into
fldenv
push
lea
adc
add
or
cmp
int3
mov
push
sarb
das
mov
cmp
cli
add
mov
lods
adc
shl
cs
inc
inc
inc
add
movsl
mov
push
cld
and
mov
inc
mov
fcomip
test
jecxz
sbb
loope
mov
movsl
xlat
movsl
dec
int3
inc
in
or
es
xor
push
push
xchg
pop
fxch
shrl
mov
iret
mov
push
and
dec
data16
int
xchg
cmp
ud1
test
pusha
fimull
repnz
xorb
or
lds
jae
xchg
or
add
aaa
jg
xorl
inc
mov
sar
sub
pop
sti
adc
ret
dec
outsb
mov
lods
cmp
aaa
adc
mov
xlat
or
push
andb
icebp
sbb
inc
jge
in
aas
jne
adc
mov
pop
ss
push
xorb
or
jno
rolb
mov
xor
mov
repz
rcrl
pop
stos
idivl
ljmp
hlt
mov
out
xor
lret
cmp
and
lods
cmpsb
movsb
adc
sarl
inc
push
imul
out
scas
adc
das
sbb
loope
outsb
pop
int
lods
jns
ret
aam
dec
adc
in
aas
or
and
xchg
inc
add
add
hlt
test
add
push
push
in
mov
cmpsl
xchg
rorb
mov
cmc
mov
lock
xchg
pop
cmpsb
mov
mov
pusha
subl
arpl
and
scas
movsl
stc
jae
mov
out
pusha
mov
cmp
dec
inc
hlt
jne
pop
js,pn
insl
lret
ljmp
sub
inc
add
jo
jae
out
insb
lods
xorl
dec
subl
iret
cmc
pop
inc
fildl
pop
add
test
std
pop
aas
enter
imul
add
lds
sbb
push
adc
cmp
movsl
js
push
lea
xchg
pop
shll
int3
or
shr
adc
cltd
pusha
rorb
cld
arpl
sub
lea
lods
xor
or
jecxz
dec
pop
or
loope
xor
push
popa
mov
mov
data16
add
inc
lock
cmp
cmpsl
cmp
test
ljmp
adc
or
and
pop
lret
in
aaa
stos
dec
mov
leave
mov
xchg
mov
push
imul
and
xchg
jbe
loope
dec
push
mov
push
in
rcl
jnp
lret
push
jmp
inc
sbb
sub
mov
repz
jmp
cmp
shlb
adc
stos
add
push
aaa
sbb
jg
imul
loop
xchg
jb
out
out
dec
cmc
out
adc
and
adc
outsb
sub
ret
hlt
sbb
cmp
mov
sbb
push
add
and
arpl
js
inc
mov
push
rcll
pushf
cmpsl
fisubrl
jno
mov
jo
inc
call
jne
ror
push
or
aaa
jmp
rcl
jge
daa
push
test
movsl
faddp
jae
mov
movsl
movsl
dec
loopne
outsb
push
dec
outsb
clc
popf
pop
mov
mov
mov
cs
xor
sar
xor
out
mov
call
and
dec
mov
imul
nop
cmc
outsl
in
clc
mov
jnp
lret
scas
test
lods
fldl
dec
adc
xchg
mov
call
and
jne
outsb
icebp
cmp
lea
into
pop
ret
repnz
or
adcl
repnz
pop
dec
pop
aam
push
or
xchg
leave
push
movsl
sbb
mov
cwtl
pop
mov
inc
loope
cmp
lcall
mov
aad
pop
or
mulb
sub
dec
hlt
lods
imul
mov
aas
mov
xchg
in
add
mov
mov
test
sbb
hlt
push
or
les
mov
test
aas
addr16
and
scas
push
lahf
rcl
not
shlb
adc
ret
mov
ds
scas
clc
cs
inc
mov
mov
push
scas
and
add
xlat
xor
pushf
jle
fs
pushf
cmpsb
inc
leave
cli
aam
mov
jno
jb
test
test
loop
js
rcrl
fistpl
ja
gs
das
mov
and
jmp
iret
inc
pop
inc
lcall
jno
adc
insb
das
pop
sbb
jbe
xchg
mov
xor
sub
mov
cli
inc
das
jle
ret
nop
mov
push
pop
push
movsb
fisttpl
and
sbb
int3
mov
dec
sub
out
jne
pop
xchg
adc
or
push
insl
xchg
xor
xchg
lds
pop
rorl
outsb
leave
aam
scas
icebp
pop
mov
scas
out
mov
or
adc
xchg
ja
in
insl
pop
outsl
popf
jo
hlt
data16
mov
push
loop
mov
or
push
arpl
mov
mulb
out
imul
add
jnp
lds
inc
push
push
in
incb
popa
add
inc
mov
sub
bound
mov
out
mov
or
pop
loope
out
adc
pop
loope
push
xor
fimuls
fsubr
mov
jb
ds
mov
jne
inc
cmc
fcompl
icebp
mov
inc
out
dec
repnz
adc
xchg
sbb
inc
scas
push
and
jo
nop
lods
jae
rcll
cmp
lcall
sub
add
dec
sub
fs
das
gs
fisttps
xchg
push
cli
std
and
negl
pop
inc
jge
pop
cld
hlt
shlb
inc
cmpsl
in
lahf
daa
pop
aas
aaa
shl
fsub
ljmp
mov
dec
push
aad
pop
shl
dec
test
dec
xchg
dec
adc
aaa
fwait
sbb
mov
bound
je
xlat
mov
dec
or
movsb
mov
sahf
sbb
scas
enter
push
pushf
jl
push
mov
adc
adc
sarl
jbe
mov
in
roll
and
and
stc
test
push
fstps
out
lahf
xlat
out
jbe
movsb
push
dec
stos
int
push
adc
xor
sti
lods
fiadds
and
imul
shrb
mov
mov
mov
xchg
cmc
aaa
bound
xchg
or
cmp
jl
jle
movsl
xchg
lods
adc
cltd
mov
call
mov
adcb
jne
push
xchg
in
mov
xor
or
mov
outsl
in
mov
arpl
ja
cmc
fs
mov
repnz
daa
pop
inc
xor
xor
mov
cmc
add
cmp
or
sbb
fisubrs
mov
scas
adc
js
shlb
fldenv
mov
ja
xchg
sbb
out
scas
push
push
ds
js
push
aas
test
test
sub
ja
shl
mov
shrl
cmpsl
in
iret
xchg
into
lods
mov
orb
sub
mov
dec
ret
ret
daa
jne
stos
call
loopne
push
pop
dec
mov
test
nop
pop
push
popl
imul
sbb
out
pop
rorl
into
imul
out
rep
and
std
mov
mov
incb
insb
rol
cmp
pop
mov
pop
sbb
fsubrs
push
inc
lahf
dec
pop
cmc
jo
mov
insl
add
repnz
mov
adc
adc
out
movsl
imul
cltd
mov
stc
mov
jecxz
sahf
mov
shrb
jo
jb
xor
sbb
cmc
sarb
inc
push
repnz
out
and
xor
xchg
je,pt
and
insb
lret
cmpl
push
dec
fistl
shl
enter
icebp
clc
pop
mov
xchg
push
stc
mov
jmp
stos
xor
xchg
lret
ja
or
xchg
mov
clc
add
ret
dec
jne
lea
mov
lods
push
lods
inc
push
lahf
out
out
out
insl
data16
sub
ds
sub
lods
or
cmc
cltd
adc
mov
xor
adc
jmp
or
jns,pt
scas
jp
jnp
jne
mov
test
outsl
fucom
stos
lock
data16
adc
shlb
pushf
outsl
loopne
mov
and
out
jmp
dec
cld
and
aas
lret
fisubrl
and
push
mov
xchg
inc
mov
lret
dec
mov
push
inc
mov
hlt
adc
mov
orb
pushf
stc
adc
cs
movsb
fstpt
in
fisubrs
inc
inc
or
sahf
lods
xor
xlat
out
cs
insb
sbb
clc
jge
push
cld
jge
sahf
lods
add
lcall
ss
stos
add
ja
aas
push
pop
ja
mov
push
mov
aad
xor
push
jecxz
ret
cmpsb
loope
mov
or
fsubrp
daa
ja
mov
mov
loopne
std
dec
test
orb
pop
stos
lret
lods
aas
icebp
sub
push
movsb
cli
iret
int
lods
test
push
xor
push
mov
arpl
stc
jo
mov
xchg
jbe
rorl
inc
fwait
jecxz,pt
adc
xor
cld
mov
jns
sbb
test
xor
pop
inc
stc
imul
out
xor
inc
rolb
nop
push
sbbl
in
mov
push
in
in
cmc
mov
inc
inc
push
fistps
insl
inc
dec
xor
lds
xchg
aad
cltd
leave
outsl
divps
push
and
mov
jns
test
fwait
mov
sub
xor
je
ds
js
jp
sahf
xchg
ds
push
xlat
std
cmpsb
sbbl
jnp
xchg
inc
mov
jb
sti
js
lcall
out
sub
and
ss
aas
ror
push
lock
rcll
int3
sub
fisttps
jp
jnp
pop
cmp
rolb
sub
sbb
push
dec
mov
mov
xor
int
cmp
and
daa
fildll
test
aam
shlb
sbbl
add
cmp
call
test
dec
push
push
stos
cltd
sub
inc
mov
mov
loop
rcrl
fistps
jle
push
jmp
call
mov
xor
lds
cwtl
xor
lea
sbbb
daa
jae
jb
mov
test
aas
xor
pushf
xor
in
je
aad
fistps
arpl
adc
xlat
jmp
ret
fmuls
add
sub
repnz
nop
sbb
rorl
rcll
mov
outsl
test
sarl
jl
popf
push
pop
jmp
or
add
or
sub
andl
test
xchg
in
mov
add
jne
rol
adc
mov
xor
aas
inc
add
cvtpi2ps
cmp
cmp
sub
sahf
mov
jae
sub
or
or
fcomip
lds
inc
ljmp
jle
in
xor
inc
rorb
addl
in
nop
subl
sbb
icebp
xor
rcrl
loope
ret
in
sahf
daa
inc
cmp
xor
rclb
stos
mov
lret
sbbl
push
cmc
push
or
and
test
mov
adc
sbb
scas
mov
jle
mov
aaa
jo
insl
lret
cmpsb
sbb
cld
sub
pop
xor
mov
imulb
loop
insb
add
decl
xchg
push
test
test
ficompl
loopne
mov
sbb
test
ds
scas
clc
ret
dec
dec
ds
push
negl
fwait
push
insb
mov
adc
pop
push
cwtl
add
or
jae
jns
scas
loope
dec
push
clc
add
xchg
or
push
or
xchg
enter
movl
bound
cmp
jo
int
inc
jmp
ss
jecxz
cs
pop
mov
cli
jp
loope
mov
cmpsb
inc
mov
sbb
es
ret
or
xlat
mov
fisttps
ss
mov
cmovl
mov
test
mov
imul
mov
and
mov
lods
fwait
rcrb
loopne
lock
xchg
fcoms
mov
pop
out
push
mov
inc
subb
test
fisubrl
into
into
mov
cld
lods
sbb
jmp
je
in
pushf
gs
xor
cld
push
pop
idivl
fxch
insl
repz
xchg
sarb
xor
sbb
adc
mov
mov
sbb
jmp
cmp
sub
xor
pop
divl
add
andl
inc
ds
and
loop
in
adc
lea
and
mov
or
mov
repnz
data16
repz
pushf
iret
jle
mov
mov
mov
xor
fcom
leave
xchg
mov
aad
add
imul
imul
das
mov
test
push
xorb
ret
ret
mov
cwtl
add
stc
jp
out
cmpb
mov
mov
push
sarl
add
mov
pop
cs
inc
mov
pop
jecxz
dec
jb
and
and
in
mov
mov
rcl
adc
rcrb
dec
jbe
dec
or
movl
stc
rol
aaa
stc
xor
sahf
dec
arpl
enter
in
add
arpl
dec
ljmp
incl
xor
add
cmp
insb
jge
outsl
mov
or
or
inc
das
xor
fstp
pop
inc
dec
sub
loope
add
test
push
jb
cmpsb
popf
mov
mov
dec
jbe
jb
movsl
call
inc
pop
sub
ljmp
orl
lea
push
add
inc
mov
pop
das
stos
pop
push
cmp
into
pop
frstor
sbb
adc
dec
mov
mov
stos
lea
mov
jae
out
pop
sub
add
es
ret
aas
xor
mov
push
or
cmp
xor
subl
ret
repnz
loope
inc
lcall
ja
pop
mov
aaa
negl
dec
out
xchg
test
xchg
les
add
cli
mov
xor
cmp
cs
pop
mov
mov
xchg
sub
push
add
mov
xor
jae
mov
adc
out
xor
ja
rcrl
mov
je
mov
cmc
mov
insb
loope
xchg
sub
stos
or
push
ds
xchg
insl
mov
jmp
shlb
xchg
pop
inc
sar
aad
dec
sti
xchg
sbbl
mov
int
inc
cld
pop
push
adc
inc
mov
adc
inc
push
cmp
inc
les
xchg
inc
mov
test
xor
fdivrl
repz
pop
lahf
push
cvttps2pi
xchg
fisttpl
jne
push
mov
jbe
insb
push
pop
fcmovu
out
dec
out
xor
mov
out
repz
dec
adc
xchg
dec
dec
xchg
out
aad
sub
mov
pushf
mov
add
lret
das
xchg
adc
add
cmc
pop
outsb
mov
out
adc
jp
mov
jno
imul
adc
jne
int3
mov
mov
repz
loopne
jbe
in
std
test
mov
rorl
daa
outsl
and
aam
ja
lock
cli
cmp
pop
loop
cli
test
add
cmp
or
mov
mov
jb
jg
add
iret
push
mov
adc
xor
notb
sbb
inc
adc
dec
mov
cwtl
scas
push
cmpsl
out
mov
fisttps
in
fistpll
jb
and
cmp
jne
cmpsl
and
repnz
fwait
xchg
cli
pop
mov
dec
inc
insl
popa
dec
pop
lds
ljmp
ret
mov
push
loop
push
data16
ds
xchg
add
jmp
mov
dec
clc
imul
or
dec
cmp
rclb
filds
in
pop
adc
push
cmp
sarb
psubusw
xchg
mov
and
sub
out
adc
fcoms
sti
inc
loopne
icebp
in
mov
sub
sti
shrl
movsl
inc
add
sub
push
pop
inc
popf
shlb
lods
mov
and
inc
jmp
in
lods
jmp
xchg
mov
and
cmp
inc
or
sbb
pop
push
arpl
idivl
clc
les
xor
mov
adc
jmp
mov
mov
lods
push
fcomip
clc
test
inc
sahf
sbb
dec
pusha
dec
and
clc
dec
fisubrl
repz
rolb
cs
xchg
pop
add
sub
jmp
mov
lds
jmp
enter
mov
ds
enter
bound
pop
xchg
or
fcoml
lods
mov
mov
cli
call
loope
dec
inc
arpl
inc
cmc
test
pop
subb
ret
cmp
mov
movsb
and
addr16
decl
psubw
inc
dec
fbld
mov
ret
pop
call
ja
mov
adc
mov
xor
adc
xor
sub
push
out
out
cmp
loop
xchg
cmp
and
cmp
mov
ds
inc
xchg
clc
les
mov
push
inc
pop
cltd
jmp
mov
cld
adc
or
xchg
rol
pop
mov
inc
or
orb
icebp
push
sub
movb
pop
popf
dec
mov
sub
sbb
leave
xor
xor
or
shr
testl
test
call
jg
cmp
pushf
push
mov
pop
dec
dec
jnp
lods
ss
nop
les
int3
cmp
cld
subl
dec
mov
dec
push
push
push
into
outsb
into
or
cmp
lcall
dec
adc
push
mov
lret
arpl
arpl
inc
and
into
aad
push
mov
inc
cpuid
shlb
pop
cmpsb
and
push
jnp
stos
pushf
sub
sbb
stc
data16
sub
add
jmp
rolb
loopne
ss
mov
pop
adc
negl
push
bound
popf
mov
test
or
cmp
push
pop
stos
sub
addl
add
push
pop
cli
icebp
or
dec
popf
fdiv
stos
sub
xchg
mov
cld
xchg
adc
cmp
test
aam
or
jb
adc
mov
imul
inc
push
jnp
mov
mov
aam
aas
addb
inc
stos
sbb
pop
lds
pop
and
push
cld
out
dec
sti
dec
data16
lret
js
imul
cmp
out
xchg
jge
pop
fiaddl
call
clc
push
scas
sbb
daa
clc
push
and
insl
mov
push
lock
push
rclb
addr16
dec
iret
jg
push
daa
xchg
fbld
out
adc
and
lods
iret
lcall
mov
aaa
dec
and
dec
std
cli
inc
pop
repnz
xchg
or
push
push
mov
jle
pop
jge
pop
sub
sbb
push
nop
mov
orb
gs
iret
inc
inc
clc
jg
stos
jmp
jg
repnz
int
pop
mov
push
jbe
xchg
rolb
sti
pop
pop
pusha
test
in
pop
add
sti
sbb
add
ret
mov
sbb
lret
sub
pop
data16
loopne
in
ja
sub
inc
cmp
fdivs
shlb
push
rcrb
pop
cld
out
dec
or
es
outsb
repnz
in
in
mov
inc
mov
adc
mov
mov
lock
in
and
sbb
stos
pop
cltd
shl
rorb
sub
mov
xchg
dec
pop
in
cmp
mov
outsl
mov
cmp
dec
ss
js
aas
js
adcl
mov
insb
or
ss
lods
dec
push
movsl
test
lock
repnz
sub
dec
xchg
jmp
cs
pushf
imul
inc
imul
mov
mov
test
mov
int
dec
inc
jno
jae
xchg
scas
dec
dec
and
sbb
pop
add
lret
shrb
out
fs
adcl
lahf
dec
push
insb
inc
fdivs
int
mov
pusha
iret
push
adc
leave
mov
int3
cmp
cwtl
jecxz
in
cmc
jb
inc
mov
cli
or
adc
or
dec
jl
aad
roll
add
pop
or
mov
and
xlat
ficomps
dec
sub
pop
loop
cli
jbe
mov
mov
inc
ffreep
pop
add
cmp
sbb
in
sbb
sbb
stc
mov
push
in
jl
adc
push
xchg
pop
movsl
pushf
enter
imul
lea
stc
xor
outsl
adc
lret
out
enter
mov
aas
inc
pop
scas
mov
cmp
ss
ret
jmp
test
mov
cwtl
into
mov
lahf
xchg
and
jb
mov
call
inc
dec
in
mov
xchg
dec
test
pop
icebp
jp
int3
test
pop
mov
jle
adcb
pop
shlb
sub
inc
mov
fcoml
adc
cmpsb
mov
or
loopne
repz
mov
fs
into
cmp
lods
sar
mov
out
mov
jns
fdivrl
lahf
fmull
inc
aam
push
push
pop
aaa
push
or
and
cs
scas
dec
push
cmpsb
adc
rcr
mov
outsl
lcall
jg
pop
sbb
xor
mov
lahf
out
mov
aas
loopne
mov
loop
fdivp
andb
jbe
jp
push
or
and
aad
das
mov
sbb
popf
punpcklwd
push
pop
jmp
out
cs
add
inc
dec
cs
popa
lea
dec
fisubs
in
add
int
cmp
rol
add
jecxz
jg
push
mov
mov
or
inc
sbb
sarl
pop
push
mov
jo
add
push
scas
add
push
add
push
jmp
dec
into
fwait
cld
cmp
jmp
rorl
jno
in
ss
pop
xchg
or
xor
push
dec
enter
lcall
arpl
das
push
pop
xor
adc
pop
lock
loope
sub
pop
sbb
add
dec
ret
lret
cmpl
xchg
push
stos
mov
mov
sub
push
ret
sti
xchg
dec
inc
dec
loope
jp
ds
mov
in
sub
cmp
adc
inc
dec
ret
mov
cmp
loope
push
js
pop
adc
cltd
mov
xor
jae
cld
mov
or
or
push
or
adcl
push
cmp
test
sbb
jns
out
adc
jns
and
pop
aas
in
mov
movsl
inc
hlt
mov
push
cmp
sarl
insb
gs
push
stos
jae
fnstcw
jnp
rolb
shrl
sbb
xor
push
jmp
sarb
insb
inc
pop
and
lret
add
sub
scas
fisttps
mov
xor
data16
and
outsl
xor
sbbb
repnz
popa
lds
sahf
fldl
jle
shll
sbb
push
popa
or
jg
mov
out
push
mov
jns
adcl
lcall
in
stos
add
aam
jp
cmp
repz
sub
adc
mov
test
sbb
out
cmp
jbe
jge
xor
mov
sahf
notl
mov
lret
or
dec
ficoml
mov
sub
jle
in
cwtl
sbb
jae
sbb
jle
inc
js
pop
xor
ror
mov
xor
dec
es
push
popa
pop
mov
mov
mov
lock
add
jbe
jo
inc
or
fdiv
push
cltd
cmp
and
add
pop
mov
cmp
repnz
out
sub
adc
sub
js
or
pop
test
dec
lds
out
push
fcomip
mull
insl
pop
inc
ljmp
lea
mov
jno
std
sub
mov
jno
jmp
outsb
push
push
mov
gs
push
adc
adc
out
sar
bound
push
dec
inc
push
adc
mov
inc
mov
sub
xlat
sti
in
popa
stos
test
xor
in
lods
dec
bound
cmp
sub
jae
ficomps
sub
inc
mov
inc
mov
in
outsl
pusha
mov
and
div
arpl
adc
or
ja
adc
fists
cmc
inc
inc
cwtl
inc
faddp
mov
pop
rcrl
test
or
gs
fs
daa
js
fnstenv
fwait
cld
loop
or
dec
or
mov
cmpsl
icebp
mov
sub
sti
out
lods
leave
adc
xchg
test
ror
daa
sarb
inc
enter
popf
sbb
sbb
std
stc
clc
mov
adc
int
mov
sbbl
je
ret
movsb
mov
add
insl
inc
lea
jp
jp
test
cmp
pop
loopne
int3
cmp
lods
dec
sub
clc
mov
fucomp
xchg
inc
lds
cwtl
flds
jbe
enter
jo
iret
arpl
mov
xchg
and
fimull
xor
jnp
xchg
xor
in
test
mov
loopne
data16
outsl
add
add
notb
outsb
mov
imul
jp
dec
pop
frstor
cmp
cmc
shll
clc
mov
dec
adc
out
or
shlb
dec
sub
push
or
das
subb
sub
xor
xchg
ss
int
sbb
dec
xchg
mov
dec
fstpl
sarl
pushf
popa
fidivs
filds
jmp
shll
add
cmp
xchg
xor
ja
adc
push
stos
loop
or
jb
testb
mov
add
jo
clc
jno
add
mov
sbb
test
push
test
mov
popa
add
push
dec
cmpsb
js
stc
lds
out
xor
and
xor
lock
iret
adc
shll
out
jb
es
inc
mul
cmpsl
dec
xchg
xlat
mov
pop
in
mov
andl
out
notl
ja
xor
loopne
stc
mov
mov
jo
lcall
jno
andb
insb
mov
cwtl
fprem1
jb
jmp
cmpsl
fucom
std
stos
fs
jnp
or
xchg
lods
lea
pop
add
js
mov
std
mov
add
testb
aaa
and
inc
lock
fsubr
jecxz
ret
jge
jmp
xor
ss
push
and
roll
inc
xchg
inc
shll
xor
xor
jp
xor
clc
dec
add
jae
dec
xchg
shll
jne
mov
mov
pushf
jl
or
subb
xchg
ljmp
ret
lahf
rcr
mov
call
inc
mov
cwtl
mov
mov
stc
aaa
enter
dec
clc
jg
sub
int3
les
mov
dec
outsb
hlt
push
xor
xlat
or
int
loopne
ds
repz
push
jb
jge
fsubl
outsb
cmc
in
mov
push
bnd
repz
and
clc
xor
cmp
insb
mov
mov
jno
pop
dec
ret
push
jp
and
xchg
out
dec
pop
rorl
lret
ljmp
fnstcw
adc
jns
rol
imul
dec
xchg
cmp
sub
shll
movsl
bnd
jecxz
jp
xor
movsl
add
jb
jnp
xlat
dec
roll
xchg
lea
je
js
call
and
imul
push
jl
out
and
jmp
and
or
imul
loope
inc
dec
add
mov
inc
push
and
sti
pushl
scas
into
push
ret
hlt
clc
add
mov
jp
xor
fsub
mov
std
lock
loopne
shrl
lcall
into
and
ja
mov
sti
rorl
dec
adc
mov
pop
push
lds
stos
pop
mov
push
inc
sub
negb
adc
sbb
push
adc
insl
fcompl
pop
xchg
aad
inc
pop
inc
ds
fsubrp
cmpsl
mov
andl
in
push
push
jge
sub
or
push
adc
mov
and
jge
xchg
adc
inc
ret
push
push
ret
pop
or
mov
movsl
rcrl
push
push
es
les
or
inc
jae
scas
xchg
dec
dec
add
push
addr16
es
shrl
cwtl
call
cmpl
gs
and
out
in
jbe
mov
jmp
das
jecxz,pt
in
lods
jge
sub
int
mov
gs
pushf
lahf
mov
fisubs
and
sbbl
push
sbb
cmp
jmp
or
push
mov
push
mov
sbb
xchg
jo
xor
mov
add
adc
dec
loopne
inc
mov
mov
mov
mov
jbe
lock
xchg
loopne
dec
cmp
push
ret
jmp
and
push
fwait
shrd
and
xor
pop
xchg
push
sbb
daa
mov
pop
jg
sub
lret
mov
mov
stos
aad
mov
or
test
or
sub
push
fsub
hlt
lret
test
stos
mov
lods
and
jbe
sbb
pop
dec
scas
je
inc
icebp
adc
test
mov
stc
ror
pop
pop
pop
into
pushf
pop
and
popa
inc
mov
push
aaa
xor
adc
add
push
sahf
enter
ljmp
push
leave
xor
imul
ljmp
iret
nop
mov
jle
lods
sbb
mov
and
shrl
jno
push
pop
dec
scas
rcll
push
push
sbb
jle
mov
mov
push
imull
xchg
pcmpeqd
add
imul
into
inc
bnd
push
inc
inc
insl
sbb
loop
gs
into
inc
das
xchg
mov
in
cmc
test
sbb
push
xchg
mov
sbb
push
insl
sti
cs
jmp
xor
pop
inc
and
cmc
dec
xchg
mov
push
add
and
xor
inc
jle
inc
lds
aad
add
test
inc
dec
sbb
mov
push
adc
dec
sub
ret
xchg
cmc
ljmp
lods
push
cs
stc
cmp
jb
push
gs
and
clc
insl
sbb
mov
lods
popf
clc
fldenv
es
mov
stos
shlb
fdivs
sahf
mov
xchg
and
cs
pusha
pop
mov
iret
push
test
cmpsl
imul
loope
stos
dec
cs
inc
inc
xor
dec
sub
aad
pop
ljmp
push
cwtl
dec
cmp
xchg
pop
dec
into
xchg
sub
xchg
sub
loopne
out
cmp
dec
sbb
xor
inc
sbb
cltd
dec
push
mov
and
jmp
inc
daa
xor
test
repz
jg
adc
pop
mov
dec
int
aas
add
or
xchg
push
sub
mov
pushl
out
sub
shr
push
xchg
adc
outsl
popa
jl
pop
mov
movl
push
add
leave
ficoml
sbb
sbb
cltd
xchg
pop
addr16
inc
xchg
xchg
mov
jne
stos
stc
out
fstl
and
cmpsb
test
inc
adc
mov
clc
movsb
xor
adc
cli
mov
aam
or
test
inc
mov
xor
fildll
aad
xor
add
out
loop
inc
enter
test
bound
loopne
xor
jecxz
gs
push
add
mov
lea
cmp
cmpsb
adc
mov
in
dec
je
scas
dec
xorl
sar
int3
mov
cli
frstor
outsb
adc
es
repnz
mov
mov
mov
les
mov
lret
inc
add
lods
xchg
repz
dec
and
mov
or
adc
push
in
dec
sti
outsl
lahf
mov
pop
movsl
imul
pop
in
fiadds
mov
out
lods
in
int
jne
add
mov
and
ljmp
dec
cmp
pop
sub
movsl
popf
in
js
mov
ja
jbe
adc
maxps
xchg
addr16
pushl
sarl
iret
mov
sub
or
jno
jle
dec
adc
jb
mov
fimull
in
xor
outsb
in
mov
inc
call
fs
jne
ret
lods
jne
inc
ss
jg
add
sar
xor
ja
loope
sbb
inc
lods
adc
sarb
add
movsl
fcompl
daa
fs
loopne
or
in
rorl
sbb
repz
jbe
mov
insl
add
dec
push
idivb
hlt
pusha
cmp
lret
add
or
pop
out
dec
lret
lahf
data16
jo
xchg
push
xorb
pop
sbb
jno
in
sarb
add
adc
repnz
int3
or
popa
leave
adc
lods
mov
xor
rcrl
cltd
or
mov
out
xchg
outsl
sahf
cmc
dec
pushf
sub
xchg
pusha
adc
add
mov
daa
loop
push
aas
ds
out
sbb
xchg
mov
inc
sub
divl
cmc
add
in
out
mov
xchg
mov
push
pop
pusha
push
test
cmp
mov
out
enter
xor
lods
sub
mov
push
shrl
imul
jmp
mov
xor
hlt
pop
mov
scas
pop
xor
sbb
jmp
cwtl
stos
repnz
add
outsb
or
cli
push
mov
cmp
add
or
pop
sub
inc
pop
push
out
and
xorl
insl
stc
addl
rcrb
adc
xchg
sysret
sti
xchg
mov
ljmp
push
jne
popf
mov
int3
je
fistpll
int
movsb
sub
rcrb
ss
push
negb
cmp
inc
out
xor
cmp
mov
xor
les
pop
lret
jnp
fildll
cmp
shlb
dec
je
lock
dec
lods
jg
xchg
rcrl
popf
lahf
lea
cltd
cmpsb
cmc
pop
mov
sbb
jns
cmp
sarl
in
jns
aas
pop
clc
push
mov
roll
call
scas
ja
sub
fstl
and
dec
arpl
push
add
pop
lods
jns
sub
lods
fs
xlat
fcoml
push
pop
jp
add
repnz
sti
mov
add
repz
test
dec
xlat
inc
jb
popa
and
push
mov
push
aad
xorl
or
add
or
dec
das
pop
mov
int
nop
les
inc
aad
movsb
jae
ja
das
cld
bound
fsts
jns
popf
std
inc
mov
adc
pop
stos
sbb
ds
mov
push
movsl
xchg
ret
dec
fstps
fninit
add
jmp
xor
jecxz
or
mov
in
xchg
in
pop
sbbl
outsl
movsl
jnp
pop
inc
push
add
hlt
jae
je
pop
es
xchg
push
rorb
sar
out
adc
xor
sahf
and
sub
fbstp
cli
xchg
fcmovb
fstps
cwtl
mov
notl
xlat
jae
mov
lds
inc
jo
dec
xchg
and
xlat
add
xchg
dec
push
inc
or
inc
lock
add
icebp
sub
les
cltd
std
mov
mov
add
adc
wrmsr
aas
mov
push
insl
jg
adc
adc
cmp
mov
inc
sub
jmp
jns
xlat
imul
xchg
stos
sbb
hlt
fisubrs
out
or
pop
in
ljmp
mov
movsb
pop
loop
out
xchg
mov
pop
mov
sub
das
setbe
enter
pop
add
mov
sub
sbb
int
test
cmpsl
add
dec
test
adcb
jle
test
sub
in
pop
das
leave
pop
stos
leave
xor
imul
daa
pop
cmp
or
sarb
aaa
das
lahf
test
daa
insb
sbb
jmp
in
test
popl
aaa
add
sahf
andb
mov
out
dec
jo
test
add
cmp
icebp
movsb
or
push
pop
ret
fnstsw
outsb
out
jns
push
cmovo
pop
xchg
mov
mov
into
cmp
xor
xchg
or
mov
lock
or
jbe
xchg
arpl
leave
or
push
enter
xlat
in
jnp
inc
cmp
push
pop
les
pusha
pushf
cld
shll
dec
stc
mulb
cli
jmp
or
and
icebp
inc
adc
mov
imul
lcall
fists
test
mov
gs
xchg
repnz
or
lock
and
out
pop
inc
dec
or
sub
fisubs
mov
sub
cmpsb
mov
pop
cs
bound
inc
or
mov
std
rcr
or
je
sbbl
mov
mov
jmp
jnp
test
sub
push
xchg
nop
std
mov
cmc
in
dec
pop
leave
push
inc
adc
mov
jle
push
xchg
xor
scas
frstor
ficomps
jne
jl
gs
jno
jbe
gs
xlat
gs
cmp
inc
add
pop
incl
xor
scas
lcall
test
cmpsl
imul
adc
xor
outsb
jo
fisttpll
lods
cli
subb
mov
dec
test
push
sbb
mov
cmpl
cmp
dec
mov
mov
xchg
sbb
out
ds
das
pop
push
jp
or
pop
add
les
int
dec
cs
test
push
sub
cmp
sub
sahf
outsb
sub
xchg
inc
arpl
mov
fcompl
sub
adc
fsubrs
stos
lods
call
pop
and
or
gs
push
cmp
pop
stos
call
xchg
and
popa
jne
lock
shll
repz
sbb
pop
inc
sbb
cmp
inc
and
out
adc
mov
cmp
or
push
fstpt
psrad
ljmp
push
je
movsb
aam
xchg
adc
mov
addr16
mov
lock
dec
je
fs
in
or
mov
call
lods
js
xor
lds
insl
aad
loope
lods
loopne
scas
jl
sbb
and
into
stos
dec
addr16
or
repz
xchg
pop
jns
mov
xor
xchg
jne
cwtl
lea
mov
pop
sub
jp
mov
out
outsb
push
xchg
push
ljmp
xchg
inc
jae
sbb
ljmp
jne
fistpl
stos
loopne
sbb
call
push
xchg
push
fimull
ret
mov
pop
inc
mov
das
mov
out
jo
and
dec
jle
or
xor
and
pop
sub
jle
sbb
aad
in
cmpsl
in
sub
call
adc
or
jmp
incl
mov
and
cmpsb
jl
xchg
sub
pop
scas
jae
movsb
loop
and
or
nop
mov
and
and
ret
mov
add
aam
int
test
dec
sbb
add
add
pop
test
fisubs
mov
adc
and
sub
add
sbb
jle
dec
mov
add
popf
mov
xchg
rcr
add
fnstenv
mov
loope
mov
add
fucomip
mov
or
cmp
mov
dec
xor
mov
in
inc
roll
mov
dec
pop
aam
and
imul
sub
icebp
push
inc
mov
cmc
jns
sahf
clc
mov
push
xor
sbb
sub
stos
pop
rcrl
mov
aas
bound
fldenv
jecxz
xor
sahf
mov
cmc
rcrl
cli
jb
pop
xlat
or
popf
scas
inc
lcall
mov
or
roll
push
lea
cmp
mov
dec
movb
sbb
jmp
je
xchg
inc
loopne
push
push
mov
pop
jecxz
lock
loope
pop
xor
mov
nop
sub
jae
push
shll
xchg
fnstenv
jnp
insl
xor
arpl
push
les
ret
fstpt
jno
xchg
movsl
ljmp
cvttps2pi
stos
nop
xchg
lcall
hlt
dec
cwtl
mov
cmpsb
or
push
fiadds
pop
xor
pop
push
aam
mov
cmp
xor
xor
sbb
lds
xchg
fs
sub
into
das
enter
insb
or
rolb
scas
test
mov
sahf
xor
pop
xor
jl
sti
jnp
sub
shrl
es
or
jnp
fwait
pop
cltd
jae
jnp
sub
push
dec
jge
mov
mov
cwtl
mov
or
sahf
jbe
inc
cmpsb
or
outsb
mov
fldcw
gs
rcr
testb
jne
mov
push
dec
pop
sarl
xor
or
jg
mov
cmp
shlb
sbb
movsb
es
out
jg
xchg
popf
test
sub
xchg
out
xor
int
pop
mov
popf
inc
test
sbb
inc
inc
cwtl
add
ficompl
xor
mov
push
outsb
movq
mov
jg
in
dec
hlt
mov
in
imul
sbb
adc
imul
push
cmc
add
popa
xchg
mov
cltd
sbb
inc
mov
mov
mov
jnp
sbb
fucomp
ret
jae
inc
stos
fsts
fadds
cmc
decl
shll
rol
or
inc
add
stc
faddl
les
cmp
orl
fdivrs
por
xchg
mov
jle
mov
xchg
pop
mov
push
insb
aaa
fiadds
inc
fisubrs
xor
les
gs
mov
shll
insl
loope
int3
mov
inc
push
dec
xchg
mov
push
insb
pop
push
jmp
fwait
lods
mov
jnp
xlat
insb
add
or
push
jecxz
inc
maxps
lea
ss
jp
jp
pushf
xchg
jae
mov
scas
and
xabort
adc
into
mov
jae
cmpsb
and
pop
mov
fs
sub
notl
pushf
dec
or
cmp
inc
pop
pop
xchg
or
imul
cmpsl
movsb
pop
sti
mov
icebp
stos
add
sbb
mov
mov
ret
test
sbb
sub
cmp
mov
or
mov
dec
jbe
cmpsl
cwtl
fidivs
push
sub
rcll
adc
rolb
mov
mov
mov
icebp
cwtl
in
in
aas
roll
dec
pop
loopne
and
cmovs
cltd
mov
pop
sysenter
jmp
jno
xchg
pop
aaa
or
loopne
popa
sbb
andb
pop
xchg
lods
lods
lds
ffree
int3
pop
mov
cmp
adc
mov
cli
mov
nop
cmpsl
or
jge
mov
jns
jmp
rcl
rcrl
ret
push
and
xchg
test
in
mov
push
xchg
popa
shlb
mov
fsts
je
in
pop
out
jle
jmp
into
mov
dec
iret
inc
out
loop
jnp
popf
cvttps2pi
shr
outsb
fdivs
dec
sub
jae
test
rcr
fnstenv
popf
fmull
das
xlat
pop
in
repnz
jle
dec
rorl
add
xchg
mov
dec
mov
clc
in
mov
popa
and
jo
nop
lock
mov
mov
pop
push
dec
fs
inc
pop
out
out
mov
and
pop
testb
cld
xor
xchg
or
pop
into
enter
inc
jbe
leave
in
mov
jmp
mov
dec
lret
fwait
ja
jle
cld
ss
or
outsb
stc
test
outsl
sub
mov
and
jne
ss
xor
mov
sub
cmp
sbb
add
mov
push
pop
cld
mov
mov
or
int3
je
loope
cli
push
adc
scas
mov
repnz
jg
fs
bound
jmp
push
or
sahf
ljmp
push
dec
push
or
push
pop
negl
or
inc
push
dec
stos
mov
mov
mov
push
int3
popa
ja
loop
and
andb
push
test
repz
icebp
loop
pop
addr16
ljmp
lds
movsl
stos
stos
xor
loopne
fsubr
int3
mov
fmull
dec
pusha
and
mov
sbb
pop
fcmovnb
jp
sub
andl
xchg
insl
adc
push
pushf
push
sub
push
shll
or
or
cmp
dec
sub
xchg
std
mov
or
out
dec
dec
cmp
dec
in
push
dec
jae
mov
dec
mov
xor
out
rcrl
mov
jp
aam
mov
xchg
sub
dec
jge
fistl
cmp
mov
mov
jp
xchg
dec
cmp
lahf
mov
mov
pop
in
inc
push
inc
shrl
dec
roll
adc
inc
adc
add
lea
notb
sbb
mov
jge
leave
pop
fldcw
sbb
cmp
sbb
lods
pop
cwtl
ficompl
and
xor
xchg
ret
jne
add
test
xor
test
in
dec
lret
adc
jmp
inc
pop
sbb
push
ficomps
dec
and
fimull
js
pinsrw
fwait
cmp
aaa
or
stc
add
cmpsb
mov
jg
stos
test
xchg
shrl
add
ret
xchg
add
adc
out
imul
push
pop
push
popa
cltd
dec
mov
xchg
mov
xor
loopne
jnp
push
cwtl
mov
mov
mov
addr16
xchg
pusha
imul
fists
or
popf
push
pusha
push
jns
in
jl
ljmp
push
xchg
jl
and
mov
gs
fs
xchg
flds
fwait
stos
lock
or
arpl
add
jo
push
fsubrs
ds
popa
out
sub
cmp
jb
mov
pop
fistpl
jns
xor
cmpsb
mov
sbb
mov
out
xchg
add
and
mov
test
cs
xlat
inc
rep
stos
shll
mov
inc
andb
mov
hlt
arpl
cs
push
or
pushf
sub
imul
sbb
orl
mov
out
and
clc
gs
jl
push
stc
cmp
jmp
incl
das
lods
sbb
add
call
adc
push
loope
dec
ret
xor
mov
ss
push
iret
aam
jb
test
lods
xchg
mov
pushf
dec
adcl
jmp
sbb
loopne
jl
scas
out
movsl
sub
repz
out
mov
ret
inc
fsubrp
fisubl
sbb
inc
cmpsb
push
xor
push
insl
inc
pop
push
pop
jle
adc
mov
fcmovnbe
sub
dec
inc
dec
jmp
jmp
test
pop
push
lds
pop
sarb
lock
movsl
lret
and
pop
test
cmp
int3
dec
xor
shll
aam
ret
dec
pop
int3
and
jecxz
mov
cmp
mov
hlt
cmc
rcrb
lds
icebp
push
mov
or
iret
jo
imul
lret
fnstsw
daa
jg
repz
aaa
push
sbb
inc
cmpsb
push
test
movsl
xchg
stos
pop
lret
lods
mov
aas
aad
cmp
xchg
aad
sub
sti
in
dec
push
mov
sbb
jg
mov
cmp
daa
cs
icebp
in
adc
inc
add
stos
je
ljmp
sbb
or
xchg
sbb
jecxz
mov
mov
je
and
clc
rorb
movsl
fsub
shlb
pushf
fdivrl
lahf
xor
sub
or
xor
inc
adc
xchg
lea
jno
push
cs
and
addr16
das
call
or
inc
lret
out
fidivl
mov
push
mov
add
jle
pop
test
popa
iret
sub
ret
sbb
loopne
sub
out
sub
mov
in
cmp
push
pop
nop
sbb
xchg
lret
mov
xchg
or
add
push
mov
dec
stos
lret
push
daa
es
loopne
add
lar
mov
pop
mov
std
adc
pop
cmpsb
out
insl
bound
rclb
sub
cs
sub
push
divb
xchg
sub
sbb
stos
test
dec
push
nop
mov
xchg
lcall
movl
pop
push
in
pusha
sbb
mov
pop
cmc
lods
and
ljmp
clc
es
insl
mov
loopne
cmp
cmc
push
loopne
mov
test
fwait
loopne
daa
aas
add
mov
xchg
negb
push
mov
jnp
mov
pushf
out
stos
push
lea
jmp
xchg
xor
mov
push
xor
xchg
push
lret
xchg
jns
xchg
jne
cmp
cwtl
push
loope
and
push
xchg
insl
mov
int3
xchg
cmpsb
inc
lds
xor
stos
mov
rclb
fldt
lret
js
or
leave
cmp
ret
jecxz
mov
adc
cmp
stos
ror
sub
aad
repz
call
dec
sub
add
xchg
lahf
mov
jae
pop
or
jge
mov
inc
push
sub
jmp
add
and
in
pop
push
sbb
or
xchg
jno
dec
xchg
repz
inc
push
pushf
ss
add
mov
int
push
cmpsb
repz
pop
adc
sub
push
inc
cmpsl
ljmp
les
inc
xor
das
mov
lods
int
cli
aas
push
shr
push
jb
aad
test
jbe
aaa
iret
cmc
add
pop
xchg
pop
sbb
js
xor
cs
xchg
cld
xor
enter
mov
sub
adc
lret
ds
cli
pop
repnz
add
mov
pop
lret
pop
xor
xchg
push
rcrl
les
testb
push
fldl
cmp
cmp
cmp
and
push
xchg
mov
jo
add
cmpsl
repnz
addr16
xor
mov
cmp
pop
jge
mov
dec
js
sub
jns
mov
push
dec
mov
and
mov
adc
sahf
and
cs
daa
dec
mov
jge
test
lahf
sbb
push
dec
push
adc
pop
push
push
push
sbb
mov
xchg
jle
inc
jle
push
insb
xor
and
cmpsl
popf
jns
lods
sbb
fmull
push
jmp
subl
adc
jecxz
or
fbstp
mov
xor
fs
mov
rcl
outsl
arpl
sub
pop
ljmp
xchg
ss
fistpl
jo
call
sub
cltd
int
mov
pusha
push
xchg
xchg
in
loope
insb
rcr
cmpsb
jb
gs
pop
dec
pop
sub
shlb
lahf
popa
test
inc
popa
hlt
and
dec
out
cmpsl
and
cmp
popa
xchg
xchg
adc
pusha
pop
aaa
enter
cmp
imul
mov
adc
movsl
sub
cwtl
dec
es
pop
push
mov
imull
mov
dec
mov
outsl
stos
and
fsubr
or
pop
int
xchg
mov
out
add
call
xlat
inc
decb
xchg
mov
in
adc
movsl
cmpsl
xchg
push
aaa
pop
lcall
jns
cmpsl
fwait
dec
inc
sbb
cwtl
arpl
pop
xchg
dec
and
ja
dec
adc
cmp
xor
lds
insl
cmp
addb
jg
rcll
andl
and
push
jb
lea
sbb
mov
dec
mov
in
xor
adc
jg
dec
arpl
stos
fildll
bound
pop
add
fildl
jo
rclb
mov
pop
dec
push
mov
flds
dec
mov
gs
inc
and
xchg
fmul
fcmove
push
push
loope
mov
outsl
and
idivb
mov
mov
jae
xchg
and
adc
outsb
pushf
and
mov
xchg
outsb
mov
mov
hlt
out
movsb
push
mov
mov
pop
ja
pop
shl
jb
cs
sahf
xor
sub
test
fs
lcall
jb
out
mov
mov
pop
inc
ret
cmp
or
or
add
lret
mov
pop
sub
mov
push
jae
outsb
cmp
cmpsl
xor
stos
jno
pop
dec
loope
arpl
js
les
scas
out
testb
xchg
aaa
add
f2xm1
enter
mov
cmc
pop
test
cs
iret
ret
cmpsb
les
call
dec
sbb
cmp
mov
xor
jo
push
icebp
mov
push
outsb
sbb
adc
inc
arpl
mov
shlb
mov
mov
and
cmp
push
rclb
aad
push
insl
data16
cld
mov
or
sub
jle
pop
sahf
movb
iret
movsb
test
xchg
sahf
sbb
sub
mov
inc
popf
xor
loop,pt
inc
cld
mov
js
ss
outsl
or
test
cmp
cli
sub
mov
pop
cmpsb
mov
imul
movsl
and
mov
jbe
mov
mov
add
enter
lcall
data16
xchg
adc
xor
lods
int
loope
or
mov
leave
inc
hlt
call
cmpsl
or
movsb
xchg
les
out
or
iret
or
pop
mov
inc
adc
out
push
jnp
fstpl
scas
mov
push
addr16
add
loope
inc
xchg
das
mov
pop
cmpsl
jecxz
filds
out
dec
sub
push
mov
mov
icebp
in
fsubrl
rorl
cwtl
adc
cmpsl
dec
mov
inc
fcmovne
test
imul
xchg
push
sbb
adc
adcl
adc
sub
add
rorl
insb
sti
sbbb
push
sbb
mov
xor
test
movsl
lahf
jns
xchg
ret
cltd
xlat
sbb
sahf
out
bound
icebp
dec
or
adc
sbb
fdiv
push
dec
dec
imulb
lds
sub
shr
mov
je
dec
test
push
jg
lock
inc
lods
pop
popa
add
lods
je
xchg
jl
bound
das
test
loopne
push
out
cmpsb
mov
es
xor
sub
ja
mov
adc
mov
mov
scas
stos
mov
sbb
dec
lods
lods
daa
push
mov
lret
stos
imul
movsl
cmpsb
sub
push
cmpsl
ficoml
out
push
add
jnp
test
xchg
jmp
inc
aas
fsubrl
ss
mov
lods
mov
ftst
das
insb
cld
xor
das
call
out
sub
pop
dec
ds
adc
push
and
sysret
loop
iret
mov
pop
jae
insl
lret
and
inc
inc
nop
lods
stc
in
push
stos
test
cli
xchg
andb
cwtl
adc
xchg
icebp
movsl
mov
sar
mov
shlb
filds
add
xlat
inc
or
or
pop
cmp
repnz
dec
pop
stos
pop
adc
and
gs
jne
and
psubsb
cmp
lods
mov
dec
ffreep
or
test
and
jle
dec
nop
dec
push
xchg
shll
fdivrl
pop
xchg
jae
loope
xchg
mov
dec
pop
push
out
pop
lock
push
or
fldt
pop
cmp
mov
call
ja
mov
lahf
pop
jp
inc
movsl
nop
orl
out
out
sbb
loopne
pop
sub
sbb
in
imul
out
cli
sub
xchg
xchg
mov
push
xchg
ja
arpl
out
and
sbb
ja
push
sub
cs
stos
xchg
push
dec
arpl
and
xor
dec
les
pop
pop
lock
xor
add
mov
push
fistpl
lcall
sub
dec
or
aaa
insb
inc
jmp
scas
stos
dec
lea
add
push
dec
adc
sub
in
pop
dec
pop
jmp
add
rolb
inc
inc
and
enter
mov
adc
rorb
insl
nop
outsb
and
arpl
pop
aas
fistl
mov
jns
pop
sbb
arpl
loopne
sbb
cmp
aam
and
repnz
ja
fxch
or
rol
fmull
dec
adc
mov
or
sysenter
stc
insl
adc
mov
mov
adc
loope
lret
push
and
shrb
js
jle
mov
out
int3
popf
sub
mov
xchg
push
stos
push
mov
sbb
dec
cltd
dec
das
rorb
sbb
xor
mov
jae
lcall
xor
aam
sti
inc
xchg
jns
adc
or
sub
rorb
aaa
cld
sbb
test
orb
into
push
jp
decb
lret
arpl
mov
and
jne
sub
xchg
stos
cmp
imul
adc
jae
insb
push
rclb
test
mov
cmp
add
out
pusha
and
sub
outsb
mov
popf
xor
sti
loop
nop
scas
jno
dec
xchg
insb
adc
js
dec
insb
insl
pop
sbb
call
cmp
xor
mov
cmp
rol
into
fwait
xor
in
pop
mov
loopne
and
daa
das
dec
lahf
test
ret
sbb
test
mov
loopne
mov
inc
push
jo
inc
jo
pop
std
jge
pop
aas
lret
adc
sub
mov
xchg
sahf
ss
and
and
jmp
lods
test
xor
pop
enter
jne
data16
sbb
mov
mov
push
push
cmp
jp
and
into
in
cs
xlat
jmp
jle
lret
mov
enter
out
cwtl
mov
cmpsl
std
mov
push
ljmp
gs
out
mov
es
imul
mov
fsubl
iret
xchg
push
dec
fldl
inc
loop
jle
pop
lret
xchg
test
and
lret
jle
lcall
xchg
in
cmc
and
add
repz
jb
mov
fsubl
in
mov
mov
xor
jbe
push
lcall
sarl
call
movsb
cmpsb
mov
int
add
mov
lcall
rcrb
test
in
std
mov
std
jle
loope
arpl
or
or
les
lcall
pop
dec
xor
push
pop
mov
cmp
pop
sub
mov
or
push
inc
cwtl
decl
ja
mov
add
icebp
cmp
xchg
pop
jns
dec
ds
aad
add
bound
jmp
sarb
inc
sub
mov
outsb
lock
into
mov
xchg
jl
push
imul
inc
add
jne
cld
xchg
adc
mov
adc
lret
sbbl
sub
sahf
xchg
shl
aad
out
hlt
push
mov
test
insl
inc
add
ret
ja
cli
xor
movsl
cltd
jae
dec
mov
push
lods
jg
or
int
xchg
in
insl
sub
inc
rcrl
or
adc
mov
cmpsb
iret
ja
jae
sahf
bound
aad
inc
inc
clc
cmpsb
shll
repz
shrb
xchg
sub
lea
out
push
test
inc
repnz
push
mov
lahf
fst
push
sub
xchg
loopne
shl
sbb
sbb
inc
scas
mov
mov
mov
je
pushf
and
inc
push
in
iret
sbb
out
or
cmpsb
jns
adc
and
push
sub
sbb
ljmp
es
xchg
ret
sbb
and
pop
mov
push
cli
sti
pop
xor
loope
int
push
xchg
aad
inc
orb
sahf
pop
fnsetpm(287
ljmp
je
dec
movsl
cmp
mov
icebp
lret
in
scas
mov
orl
inc
xlat
push
jecxz
js
jo
fists
mov
adc
push
push
inc
inc
bound
scas
adc
enter
loope
lock
popa
pop
xchg
mov
andl
push
push
out
xchg
ret
sub
inc
pop
xchg
xchg
es
aas
pop
cmp
ja
jecxz
pop
xor
scas
les
enter
cli
ja
mov
lea
mov
out
inc
pop
mov
jns
adc
into
test
sub
out
mov
js
arpl
pop
mov
jns
push
xchg
sub
add
test
jecxz
shll
lds
mov
sarl
shll
imul
mov
rcll
mov
mov
mov
and
idiv
pop
dec
jns
mov
pusha
add
test
or
xchg
xchg
fstpl
lret
jl
push
lds
cmp
pop
out
push
cmp
rcrb
lods
arpl
pusha
movsb
jmp
lea
jae
sarb
in
pop
mov
popf
jp,pt
cmp
and
clc
dec
ds
pop
sbb
mov
dec
lods
jns
sub
push
out
and
jo
and
xor
lret
scas
adc
pop
ret
in
xchg
mov
and
adc
mov
sarb
xchg
jl
adc
lret
mov
shl
inc
xchg
lods
lret
jno
adc
loopne
rcl
lods
repnz
daa
lahf
rolb
cmp
sub
jge
cld
jle
mov
ja
cmc
push
adc
sub
add
pushf
inc
cli
mov
pop
sub
jns
ror
js
pop
inc
dec
lret
insb
fisttpll
xorb
xchg
mov
pop
shr
pushf
bound
cmp
and
jle
int3
scas
leave
jns
dec
add
fcomi
push
ss
ljmp
jbe
mov
les
adc
jg
xor
testb
jnp
aaa
imul
xchg
cli
pop
lea
outsb
pop
cmp
jecxz
and
inc
dec
lods
repnz
push
test
mov
ret
out
add
or
je
insl
push
sub
shl
cli
sahf
sbbl
shl
ret
jae
pop
lods
and
add
fldcw
std
mov
int
jp
jne
insl
cmp
sub
stos
cmc
outsb
mov
inc
insb
xchg
fwait
jge
add
adcl
aas
sbb
dec
dec
cli
inc
pop
add
xor
imulb
in
xorb
push
arpl
sbb
add
push
jne
push
jnp
fwait
jg
loope
mov
pop
in
cmp
lods
fisubl
jne
out
add
push
xchg
imul
cmpsb
sbb
mov
mov
dec
lods
xor
imul
test
sbb
mov
aam
add
and
rcl
pop
dec
pop
loopne
cmp
adc
inc
loop
sbb
xchg
loope
xor
push
cmc
inc
push
xchg
push
xchg
cmpsl
xchg
pop
outsb
jmp
inc
jg
mov
sbb
shr
repz
jg
cmp
sti
pop
inc
rolb
pop
push
sbb
js
xchg
xor
inc
push
js
and
and
cmp
pop
outsb
ret
pop
add
sbb
mov
xacquire
call
mov
sbb
fdivs
adc
ss
arpl
jl
icebp
mov
loope
test
pushl
dec
or
ljmp
inc
test
push
xchg
mov
dec
fnstcw
shl
andb
push
pop
or
in
call
cmpb
push
xor
cmp
scas
cmc
lods
pop
aaa
mov
or
bound
je
sbb
xchg
cld
fiadds
xchg
dec
lods
inc
mov
or
xor
call
mov
aas
aad
lahf
and
loop
rcl
es
pop
stos
and
in
fucomp
data16
pop
cmp
divb
push
test
push
xchg
enter
and
cmp
sub
jl
out
xor
aam
cmc
xchg
sub
gs
adc
inc
cltd
adc
or
call
jo
jno
ret
cmc
push
int3
dec
hlt
xchg
pop
lahf
adcb
icebp
je
xchg
test
jae
jle
sbb
repnz
or
add
or
lcall
push
or
les
cmp
loope
popa
mov
push
insl
inc
inc
hlt
add
popf
lea
sub
mov
mov
pop
call
xchg
out
xor
pop
cli
push
lock
cmc
lcall
cmp
jecxz
cld
add
les
dec
xor
xchg
jb
mov
pop
add
pop
movsb
sub
or
out
jge
lcall
sahf
push
cmpl
sbb
mov
ret
cmp
lret
dec
jle
lahf
cmp
rcrl
pusha
push
ljmp
aad
pop
movsb
or
and
scas
fstpl
out
inc
outsl
inc
or
mov
imul
ret
xor
mov
jae
mov
xorl
cmp
out
pop
dec
mov
add
bnd
mov
jns
rcrb
mov
pop
cmp
mov
cmpsl
inc
js
adc
adc
mov
test
cmpsb
dec
add
and
outsl
push
sbb
movl
stc
inc
outsb
ljmp
test
lahf
jp
cmp
enter
aas
stos
mov
movsl
push
mov
fidivl
sub
pop
outsb
es
jno
pop
xchg
cmp
cs
mov
adc
bnd
mov
loope
mov
xor
xchg
inc
pop
ljmp
xchg
mov
inc
xchg
push
int3
lcall
lret
mov
ret
cmp
sbb
xchg
andl
xor
fisttps
xor
mov
into
flds
adcw
jbe
into
fmuls
out
aad
shlb
dec
fs
loop
xchg
pop
and
xor
fs
pop
mov
dec
out
les
mov
mov
pop
xchg
lock
xchg
mov
cli
nop
xor
out
subl
fcmovbe
lods
inc
mov
or
jnp
dec
andl
pop
scas
xor
icebp
mov
insb
imul
mov
push
lods
pop
dec
jo
fmuls
ljmp
xchg
jg
popa
cmc
push
or
outsl
xchg
lock
ficoml
ds
in
cltd
xchg
push
cmc
aaa
jne
xor
aaa
dec
jnp
mov
or
pop
jae
fmuls
leave
jmp
inc
and
and
movsb
enter
cmp
mov
sahf
push
jge
outsl
xchg
sub
xor
cltd
push
jb
cmp
aaa
lahf
hlt
stc
cmp
jp
pop
or
and
dec
sti
daa
insb
loopne
sub
lock
ds
iret
std
sub
push
add
lods
sub
or
jle
or
and
mov
mov
xor
xor
cmpsl
hlt
sbb
add
cli
xor
xchg
or
sti
push
cs
pop
add
push
orl
xchg
ror
in
cmpsb
dec
pop
xlat
scas
push
xchg
push
push
ljmp
cmp
repnz
movsl
imul
xor
dec
inc
loopne
inc
adc
inc
or
loope
test
pop
push
xchg
cwtl
dec
mov
shrb
cmp
std
iret
popa
lret
cmc
ficoml
lret
cmp
pusha
lcall
cs
movq
lcall
dec
jb
mov
xlat
cmpl
dec
arpl
mov
dec
popf
je
push
fwait
sti
jp
cltd
scas
jo
xor
push
jnp
sub
cmp
cmp
rcrl
inc
adc
adc
push
pop
in
and
inc
imul
loope,pn
mov
xchg
lock
fnstcw
inc
xor
sub
int
and
sbb
testl
imul
mov
cwtl
loopne
jo
lds
sub
pop
xor
mov
outsl
inc
inc
mov
mov
mov
dec
je
jl
shlb
cmpsl
mov
call
std
test
cmp
and
mov
jb
pushl
out
jns
mov
loopne
icebp
ja
xchg
movsl
jo
stc
and
repnz
loop
mov
adc
xchg
int
and
cmp
add
clc
sub
mov
push
fs
sbb
mov
stc
or
push
inc
push
xchg
push
add
pusha
push
sbbl
in
pop
scas
pop
cmp
xchg
cmpsl
mov
mov
add
fs
inc
in
add
inc
nop
aad
in
jo
cmp
leave
ret
cltd
cmp
xorb
es
ficoms
icebp
jno
bound
inc
imul
xchg
xchg
dec
xor
mov
lcall
inc
loope
dec
das
pop
jb
lret
or
push
iret
xor
repz
int3
lcall
fisubs
leave
push
int
inc
js
jp
pop
adc
dec
nop
hlt
iret
pop
mov
mov
testb
jbe
push
and
es
add
test
adc
mov
pop
dec
lds
inc
dec
or
mov
js
push
mov
fdivrs
push
subb
dec
leave
fisttpll
mov
jae
mov
mov
hlt
cld
hlt
rorb
js
scas
mov
loope
into
mov
mov
mov
ss
stos
push
jecxz
xor
rcrl
xor
inc
nop
stos
and
aad
mov
inc
outsl
push
arpl
or
ret
mov
or
nop
sub
adc
xchg
mov
fwait
adc
sub
and
push
push
cli
sub
ret
mov
mov
in
call
lock
sbb
and
cmp
cs
daa
sub
test
push
xor
cmpsl
arpl
mov
je
inc
daa
insl
sahf
test
bnd
adcl
jg
insb
add
adc
mov
mov
mov
jg
xchg
test
scas
imul
mov
ljmp
insb
and
test
xchg
data16
mov
jne
pop
ret
push
jmp
pop
lahf
xchg
cli
and
cltd
push
es
test
add
and
fwait
sub
imul
fiaddl
push
adc
mov
loope
roll
inc
push
insb
xchg
xor
ljmp
mov
mov
outsb
sbb
xlat
loopne
push
js
add
or
add
xchg
add
daa
in
adc
ret
sub
out
icebp
mov
cmp
jge
ret
inc
movsb
and
and
push
loopne
loop
or
movl
mov
sbbb
xor
into
cltd
jmp
ljmp
mov
xchg
popf
mov
xchg
push
sub
add
ret
imul
fwait
mov
cli
push
jge
xor
or
sarb
xchg
inc
addl
imul
pop
sub
pop
and
nop
pop
mov
push
mov
in
mov
jae
lods
mov
insb
sti
mov
sbb
push
mov
leave
adc
xchg
mov
call
fistpl
loopne
sahf
xchg
sbb
mov
sbb
mov
pushl
mov
jmp
mov
int
xchg
test
adc
push
push
pop
lret
mov
ja
nop
aad
lds
cmp
xor
adc
jle
ss
rcr
fists
push
scas
push
and
outsb
adc
cmc
jmp
sub
stos
repz
ljmp
in
jecxz
dec
cmp
cltd
jecxz
mov
div
mov
int3
cltd
xchg
outsl
aaa
test
push
popf
stc
pop
mov
sahf
leave
cmp
fcomps
jecxz
push
add
jge
xor
sti
push
cmpsb
sbb
jne
jmp
ja
mov
inc
pop
cmpsb
jns
mov
mov
repnz
mov
outsl
dec
rorl
mov
dec
mov
xchg
pop
sub
cmp
ds
cld
rolb
dec
in
pop
mov
roll
int
std
jp
inc
or
xchg
ret
jecxz
pop
dec
add
lahf
in
xchg
xor
push
clc
loope
into
loope
cmp
std
dec
mov
cmpsl
inc
xchg
lcall
cmpsl
mov
fisubs
and
jnp
jnp
sbb
xchg
stc
scas
and
sbb
or
mov
lods
in
cmc
int
mov
jg
xor
jo
shll
lea
jno
ret
cmp
inc
outsb
sub
fwait
lock
rorb
or
fsub
mov
bound
jecxz
sbb
mov
push
xchg
lahf
cmp
pushl
ds
sub
mov
adcb
pop
jl
sbb
cmpsl
addr16
mov
es
and
lds
mov
cmp
jl
push
xchg
ret
jnp
cmp
jno
fidivrs
aad
push
outsb
inc
in
lea
inc
jecxz
or
daa
clc
dec
fs
cmc
or
cmp
stos
js
aad
test
test
das
call
xchg
out
mov
push
mov
jp
pop
jo
scas
jle
cmp
sahf
pop
addr16
stos
bound
cmpl
sbb
mov
loope
out
testl
sbb
insl
lahf
mov
je
movsb
mov
neg
mov
jnp
push
xchg
xchg
or
or
movsb
mov
ljmp
lock
int
xchg
sub
ja
add
adcb
cmp
mov
shl
jo
testl
scas
sub
xchg
dec
mov
mov
scas
pop
adc
lahf
movsl
xor
lds
sbb
in
and
loope
push
bound
and
clc
test
pop
pop
loope
cmp
inc
pop
push
cmp
hlt
in
insl
pushf
jne
jb
pop
std
xchg
add
xchg
jg
pop
cmp
hlt
mov
pop
das
jbe
and
xchg
inc
and
popa
mov
xlat
aam
lahf
call
testb
inc
clc
aaa
mov
inc
dec
pop
jo
jne
out
pushf
pop
cmpsl
rorb
adc
int
xchg
rcrl
push
mov
push
sub
jno
dec
lcall
psubw
dec
push
loop
pop
sbb
and
cmpsb
in
leave
std
loope
mov
mov
leave
into
add
ret
mov
push
pop
sub
mov
mov
inc
jge
cmpsl
leave
lods
mov
push
push
fistps
clc
pushf
ss
xchg
pop
xchg
xor
push
and
mov
stos
outsl
mov
sub
pop
das
pushf
nop
pusha
push
cvtps2pd
inc
imul
dec
and
addl
push
push
mov
or
add
cmp
cli
push
sub
rcrb
inc
lods
mov
cwtl
pop
test
inc
ret
ficoms
insb
lcall
push
stc
clc
test
dec
loopne
out
sub
out
dec
insb
jb
jbe
stc
pop
push
push
insl
jne
fmul
push
mov
inc
ds
sub
lea
lods
stc
repz
fcmove
xor
outsb
adc
xchg
jb
mov
cmpsb
jno
popf
lds
jbe
dec
and
insl
inc
jne
and
movhps
xchg
jns
cmp
fcmovne
lods
loope
std
adcb
hlt
sbb
fmull
ret
add
mov
in
out
add
insl
daa
xchg
push
cmp
shlb
ret
mov
mov
sahf
fistl
in
bound
test
adc
pop
adc
rclb
fstpl
xor
lahf
and
jo
xor
repnz
out
enter
adc
in
adcl
imul
loop
mov
pushf
add
sahf
test
jns
pop
in
cltd
ds
pusha
inc
fbstp
in
call
outsl
ds
or
add
sbb
push
mov
arpl
out
sbb
adc
adc
in
js
imulb
adc
add
push
add
daa
xchg
mov
sub
jp
push
jns
in
rcl
inc
notb
jno
xor
push
lahf
jmp
mov
movsb
aad
sbb
jb
cltd
push
in
in
jo
adc
mov
pop
nop
mov
sub
aas
cmp
sub
sahf
sbb
or
test
aas
or
pushf
dec
pop
cmpsb
dec
test
xor
jmp
insb
mov
call
pop
xor
xchg
or
push
ljmp
mull
inc
lahf
test
movsl
mov
pop
mov
pop
int
sub
mov
out
addr16
cmp
sub
mov
pop
push
pop
movsb
xchg
cmp
das
mov
xchg
cmp
lcall
mov
mov
imul
fmull
int
test
aad
imul
mov
ja
jb
movsl
scas
mov
iret
pop
cmc
popa
adc
fwait
mov
cwtl
add
je
dec
out
xor
fmuls
pop
daa
adc
fists
fld
mov
push
out
add
les
adcl
or
test
xchg
cmp
stc
push
loopne
pop
flds
xchg
cmpl
repz
push
fdivrl
push
dec
lods
inc
add
mov
aad
mov
jb
xchg
pslld
push
repnz
cld
iret
sbb
mov
jbe
xchg
in
add
lds
mov
pop
or
mov
loop
push
adc
sahf
and
and
cli
dec
pop
push
xchg
mov
ret
int
mov
int
mov
inc
fimull
rcrl
insl
inc
cmp
push
cmp
sub
mov
adc
and
pop
nop
je
mov
cmpsl
rcll
repnz
jg
sub
stc
xchg
jns
and
inc
pop
lock
xor
and
mov
arpl
pop
mov
xchg
dec
js
inc
fidivrl
mov
or
insb
jl
sbb
imul
cmovs
outsb
out
xchg
andb
inc
push
lret
xor
mov
shl
test
mov
repnz
test
mov
mov
xchg
inc
sbb
fmull
push
lea
out
cmp
push
pusha
sahf
shlb
sub
push
jmp
imul
mov
jb
pop
jae
adc
outsb
mov
lahf
add
pop
fcoms
or
lret
pop
adc
sbb
lods
mov
lock
icebp
mov
adc
push
add
add
jp
jns
adc
or
or
fs
inc
mov
mov
xchg
inc
in
popf
xlat
inc
inc
sbb
cmp
sbb
jp
fs
outsb
xchg
fldcw
and
icebp
cmp
jnp
sahf
xchg
add
lcall
imul
jns
dec
sbb
loop
movsl
cmpsl
lret
iret
fistl
push
into
ficompl
pop
mov
mov
push
test
or
mov
scas
test
lahf
fs
ljmp
cmp
adc
adc
je
dec
pop
sub
push
pop
nop
and
pop
dec
mov
push
pop
lcall
mov
add
cmp
arpl
mov
add
std
inc
and
mov
pop
jne
imul
mov
lock
gs
stos
cwtl
pop
lds
xchg
pop
inc
xor
jb
insl
cmovbe
rolb
cmpsl
dec
rorl
add
incb
fildll
sub
mov
sbb
stos
ja
push
push
and
and
mov
inc
enter
inc
mov
dec
clc
outsl
call
aam
jbe
xchg
rol
aam
xor
pop
sti
cltd
xchg
dec
popf
lock
stos
mov
pop
cmp
push
mulb
mov
sti
sbb
movsl
mov
sub
stos
add
aas
add
push
xor
shll
loope
ljmp
jge
mov
push
leave
pop
jg
out
cmpsb
and
jae
iret
dec
in
pop
in
pop
push
push
popa
scas
sbb
cmpsl
out
jecxz
dec
push
loope
das
xor
clc
sub
stos
fisttps
ljmp
cmc
sbb
mov
out
loop
mov
jbe
sbb
les
outsb
cmp
xchg
out
xchg
mov
sbb
dec
jl
pop
arpl
jg
xor
insl
mov
xchg
xchg
xor
push
mov
or
fdivrl
add
jg
mov
insl
call
hlt
add
adc
inc
add
xor
xchg
repnz
insb
arpl
push
xchg
dec
addr16
cmpsb
pop
and
fisubl
lcall
cmp
fiaddl
push
sbb
ljmp
sub
jp
inc
cli
jmp
cld
add
test
sti
sub
mov
lahf
mov
retw
pop
fbstp
or
aad
out
adc
add
xchg
mov
pmaddwd
xchg
mov
xchg
ds
pop
dec
xor
push
cmp
push
icebp
sub
xor
ret
bound
lock
push
cmp
adc
inc
adc
cvtpi2ps
mov
pop
xlat
push
or
subl
dec
mov
push
mov
ljmp
sbbl
mov
fldenv
pop
out
mov
sti
xlat
pop
adc
sub
push
in
dec
cld
sub
out
popa
or
cmp
das
iret
xchg
aas
icebp
popf
jmp
loopne
xchg
push
sti
and
jmp
mov
pushl
xchg
pop
jno
pop
or
and
mov
push
aaa
mov
sub
in
xor
mov
mov
nop
aad
std
in
xchg
test
insl
repnz
or
xchg
dec
lea
xlat
clc
mov
rcl
loop
jecxz
repz
pop
push
ljmp
pusha
inc
mov
lea
cli
xor
dec
dec
leave
mov
cwtl
in
insb
cmpsb
ja
sbb
dec
adc
es
jl
dec
movsb
xor
aaa
dec
insl
jmp
fbld
outsl
mov
out
mov
add
mov
popa
mov
pop
pop
dec
mov
add
mov
int
fld
pop
jmp
bnd
jno
pop
xchg
xchg
and
dec
je
leave
dec
js
or
loopne,pt
loop
jb
mov
paddsb
mov
cs
pusha
scas
xor
pop
dec
cmpsl
pop
fiadds
xor
jne
adc
jno
push
dec
inc
add
fwait
jae
insl
outsb
iret
cmpsl
data16
xchg
out
push
or
mov
out
pushf
jno
mov
xchg
add
xor
cmpl
lock
adc
cmp
inc
push
repnz
pop
push
jns
mov
cld
or
xor
rolb
pop
dec
xor
jge
lea
arpl
fidivrl
pop
in
mov
cmc
adc
fsubl
lods
sbb
and
xor
mov
filds
adc
or
ss
or
jne
and
inc
cmp
gs
sub
mov
push
xchg
test
fiaddl
mov
in
mov
aam
out
int3
sbb
mov
outsl
pop
daa
in
add
dec
or
dec
popf
dec
jl
es
jecxz
jg
mov
stos
cmp
and
clc
insb
mov
jns
int
mov
lods
jo
inc
out
mov
daa
les
xchg
adc
rorb
addr16
cmpsb
andb
xchg
push
adcl
jbe
ljmp
call
dec
sub
push
or
scas
dec
jbe
out
inc
inc
adc
or
lahf
mov
addr16
push
cmp
mov
dec
mov
shll
repz
jae
adc
out
sarb
lcall
stos
push
inc
jg,pt
movsb
enter
cmp
fistpl
addb
dec
push
inc
jmp
loopne
cli
or
jns
montmul
cmpsb
test
in
mov
xchg
outsl
ss
push
rorl
cmp
outsb
pop
bound
cmc
dec
lds
inc
lods
add
push
les
fldenv
vpunpcklwd
jne
dec
lea
insb
xchg
jns
or
es
mov
mov
in
xor
ficomps
outsl
je
add
or
lcall
out
int3
jmp
js
jno
js
dec
dec
add
dec
xchg
add
sub
dec
jnp
jge
and
mov
inc
repz
hlt
ret
push
xor
shl
pmulhuw
xchg
jl
mov
test
les
pushf
loopne
pop
pusha
xchg
push
pop
adc
js
add
sarl
pop
cmc
dec
lods
mov
ja
stos
push
xlat
jbe
pusha
cmp
outsl
or
jp
scas
aaa
mov
addl
fs
mov
pop
aad
add
jbe
cmp
mov
pop
ret
arpl
imul
push
inc
pop
cltd
sub
out
cld
fadd
mov
pop
mov
inc
pushl
cmp
cmpsb
decl
enter
daa
dec
stc
vpmacssdqh
aad
mov
mov
scas
jns
add
inc
xor
xchg
and
jne
pusha
nop
xchg
push
cmpb
bound
inc
add
sbb
aad
adc
push
pushf
imul
test
add
xchg
pop
imul
les
cmp
insl
orb
sahf
js
in
testb
outsl
jmp
pop
adc
jnp
jno
aas
xchg
fdivrp
shlb
mov
lds
and
loopne
adc
aad
call
push
sub
pop
jb
pop
inc
sti
mov
xor
cmp
cmpsb
outsl
lods
testb
stos
jnp
cmp
pop
jl
mov
dec
jmp
lods
add
in
adc
out
in
repz
insl
daa
test
adc
dec
pop
add
mov
mov
add
in
mov
push
jecxz
pop
aaa
out
mov
dec
adc
stc
jb
sub
icebp
insb
cmp
pop
es
or
arpl
jmp
outsl
push
jnp
dec
lret
stc
pop
xchg
lock
pop
mov
clc
cli
lahf
mov
mov
scas
or
xorl
lcall
xlat
aam
push
nop
cwtl
int3
or
mov
lea
outsb
ret
shlb
sbb
icebp
mov
psubsb
mov
into
push
stos
femms
push
pop
in
cwtl
dec
xchg
cmpb
inc
ds
js
shlb
enter
add
xchg
sbbl
rcr
cs
cmpsb
jne
pop
insb
dec
movsl
ret
or
pop
insb
out
push
mov
jecxz
insl
sub
mov
movsl
hlt
inc
stos
cmpsb
pusha
mov
fs
lods
test
mov
jb
mov
pop
mov
mov
shll
das
jge
pop
sub
cmp
bound
pop
icebp
mov
out
cmp
mov
fdivrs
jmp
pop
mov
lret
pushf
cltd
and
cmpsb
xchg
cld
cmp
insl
xor
and
shrl
out
sti
arpl
pop
jecxz
daa
jnp
pop
ret
xor
or
data16
pusha
shrd
cmp
sub
sti
mov
pop
popf
fwait
sub
fisttps
cmp
pop
vpsubsw
xchg
sbb
inc
jl
in
push
mov
hlt
or
jle
cmp
sbb
cwtl
sub
mov
arpl
push
xor
rcl
aaa
adc
xor
lds
iret
xchg
iret
mov
dec
repz
cs
insb
mov
mov
int3
dec
es
pop
cmp
pop
popf
adc
xchg
stos
sbbb
push
test
pop
pop
sub
mov
jmp
jmp
aad
ljmp
sub
jmp
test
and
pop
int3
pop
add
stc
pop
mov
push
les
popl
xchg
pop
mov
push
mov
je
add
sahf
call
lret
in
mov
mov
or
dec
add
popf
test
lods
jle
dec
adc
sbb
lea
fwait
in
xchg
push
shlb
sub
pop
jns
adc
in
outsb
xchg
mov
es
in
into
cmp
and
sahf
sbb
movsb
jns
cltd
addr16
xor
jle
imul
rorl
xchg
ret
fcomi
or
mov
push
add
imul
loopne
jl
icebp
inc
add
cmc
pop
xchg
mov
pop
insb
mov
cmp
adcb
ds
popf
mov
aad
data16
push
xor
and
and
push
clc
mov
loopne
aad
popf
mov
sbb
pop
lahf
aas
xchg
adc
in
in
lahf
outsl
in
push
loope
add
dec
add
es
fbstp
clc
xchg
jp
mov
mov
or
int3
inc
pop
adc
xchg
popf
loope
pusha
stos
in
arpl
clc
dec
xchg
add
sub
mov
and
xor
flds
dec
lea
dec
cmp
cmp
xchg
push
or
daa
sahf
cld
outsb
and
or
inc
xchg
adc
inc
ficompl
mov
sbb
arpl
add
scas
xchg
pop
sbb
push
xchg
and
and
dec
jg
cmp
and
popa
filds
fs
inc
push
insb
dec
arpl
push
cli
pushw
pusha
scas
arpl
push
push
sbbl
daa
pop
and
push
cmp
xchg
out
inc
or
pop
push
cmp
data16
sub
arpl
xor
pushf
cmp
push
jo
cmp
js
and
test
pop
fidivrl
arpl
mov
pushf
mov
or
fiaddl
push
dec
cmp
dec
aas
mov
pusha
pop
inc
lret
pusha
xchg
mov
sahf
pusha
cs
stos
imul
daa
ficoml
aas
ljmp
pop
or
into
jns
cmpsl
mov
cli
mov
cltd
je
and
rcll
lds
cmp
je
pop
sahf
dec
js
stos
sbbb
xchg
test
popa
pop
jp
js
cltd
push
out
jg
les
cmp
mov
cmp
mov
inc
mov
mov
js
rorb
or
incl
stos
in
cmp
jno
cmp
cwtl
rolb
pushf
jl
push
das
pop
xchg
fwait
jp
sub
subb
mov
cmp
loope
daa
mov
rolb
in
mov
clc
aas
pop
sahf
loope
gs
stos
popa
xchg
mov
sbb
and
ljmp
and
mov
inc
pop
mov
inc
pop
mov
cld
pusha
mov
fcompl
dec
lds
lcall
jge
sahf
cld
xor
stos
fsubr
aaa
xchg
clc
fwait
pop
fidivrl
test
cmp
popa
ljmp
jns
sbb
subl
fsubr
cmp
push
dec
inc
push
insl
or
repz
jns
fistps
sbbb
and
cmp
cmp
lods
inc
lret
inc
fidivs
pusha
push
mov
jns
cmp
cmpl
inc
mov
or
and
jo
inc
sub
adc
clc
int
pop
add
addl
inc
dec
and
mov
inc
jp
fstps
and
dec
shlb
push
jle
mov
sahf
pop
out
cwtl
sub
cltd
xchg
adc
fisubrl
and
sarb
shl
inc
dec
sub
lret
popa
pop
sbb
popa
push
inc
jle
sub
mov
es
xchg
mov
clc
inc
sahf
pop
xor
imul
jns
je
jns
cmp
addb
pop
cmp
stos
pop
testl
push
jecxz
cmp
jp
dec
push
js
push
incl
sahf
pop
outsl
popf
sub
xchg
fcom
fiaddl
aas
inc
ljmp
js
cwtl
dec
fisubs
mov
fwait
cmp
loop
dec
lds
ds
les
pop
or
pop
push
pusha
movsb
data16
bound
jno
jle
je
pushf
pop
jl
cltd
push
sub
and
leave
adc
xchg
dec
pop
stos
vaddsd
mov
fs
pop
pusha
mov
iret
fwait
push
rolb
and
cld
mov
pop
pop
cltd
add
xorb
lea
lret
cltd
pop
jo
test
insb
sahf
mov
sti
cmp
loopne
inc
lret
inc
xchg
les
aam
jge
frstor
stos
sti
faddl
xorl
ljmp
inc
or
les
movsb
cmpb
xor
push
loopne
incb
sahf
lahf
or
fwait
push
gs
cmp
imul
pop
xchg
mov
pop
pop
dec
lea
mov
out
inc
or
lahf
dec
adc
fidivrs
ret
and
pop
outsl
aas
cmp
inc
dec
enter
rolb
or
cmc
jle
fsubl
xchg
adc
and
out
aas
pop
pushf
jle
push
pop
pop
xchg
fiadds
sbb
jle
and
mov
jp
data16
loope
nop
mov
sarl
push
movsb
jg
mov
inc
sub
xchg
pop
xchg
in
push
jl
cmc
add
xchg
or
xor
popf
lret
cmp
daa
push
pop
inc
mov
icebp
dec
mov
cmp
jnp
inc
push
js
push
ret
pop
jbe
sahf
add
popf
stos
pop
jecxz
xchg
adc
daa
ficompl
repz
ljmp
insb
or
ret
jl
sub
imulb
jecxz
incb
cmp
push
clc
dec
mov
sahf
pop
insl
sub
xchg
pop
sarb
xor
mov
ss
ljmp
sub
cmp
fidivrs
mov
xor
cmp
and
fcom
jl
inc
sti
mov
faddl
mov
sub
sub
dec
pop
mov
pop
push
ds
xchg
xchg
mov
mov
hlt
pushf
notb
sub
push
gs
pop
sbb
rorl
dec
sbbl
dec
imul
xchg
lea
cltd
add
pop
pushf
mov
ljmp
inc
lret
dec
pop
mov
cmp
repz
out
jnp
adc
dec
jle
sahf
xchg
les
sahf
popa
and
sub
xchg
pop
pop
inc
cmp
lods
bnd
mov
lea
xchg
or
fwait
jne
negb
fs
mov
dec
insl
push
shl
insb
mov
test
lea
in
popf
xchg
mov
lcall
xor
ljmp
pop
dec
cwtl
dec
pop
fisubs
mov
lea
mov
popf
loopne,pt
lcall
inc
cmp
push
enter
call
or
hlt
mov
pop
cld
imul
or
xchg
sub
mov
stos
sarl
negb
dec
jp
push
pop
inc
or
lds
int3
jns
mov
and
lcall
push
cmp
or
pop
in
stos
dec
ljmp
push
adc
jge
and
push
mov
daa
mov
sub
xchg
dec
mov
pop
sahf
fstpl
push
in
push
lock
clc
ss
fdivrp
ljmp
or
or
mov
pop
imulb
fldt
inc
xchg
inc
cmp
mov
stos
cwtl
sahf
xor
stos
or
dec
ficoml
pop
ljmp
js
add
ficoms
mov
dec
lods
sahf
ss
imul
ds
dec
dec
xor
dec
push
xor
pop
or
push
pop
cwtl
jle
and
jp
insl
or
pop
and
push
sbb
cmp
cmp
stos
sub
lods
cmpsl
jl
mov
clc
std
mov
xchg
icebp
imull
sti
jl
sub
inc
pop
fidivrl
insl
pop
jge
push
ret
mov
adc
ret
in
icebp
mov
mov
mov
mov
shl
leave
shl
shlb
int3
xor
lock
in
and
adc
cmp
push
mov
inc
or
rcll
adc
or
lret
mov
and
adc
loope
popf
fnstenv
adc
out
mov
dec
gs
icebp
loop
and
aad
nop
out
and
shlb
add
push
xor
dec
mov
lahf
dec
mov
ds
dec
cmp
int
dec
les
push
int
jnp
aad
mov
sbbb
push
sub
mov
dec
push
sbb
jno
arpl
or
je
lods
cmp
mov
stos
popf
xchg
jp
pop
movsb
popf
push
sub
lock
push
mov
sub
pop
sub
mov
lock
mov
cs
and
movsb
sub
dec
inc
pop
cmpl
pop
scas
mov
je
rorb
lret
xchg
lods
sahf
jg
push
sahf
sbb
outsb
inc
ret
cmp
andb
push
mov
icebp
or
ret
add
inc
ja
movsl
dec
xor
adc
sub
ds
cmp
push
rorl
loopne
popa
daa
call
xchg
xchg
xchg
mov
insl
out
pop
cmpsb
mov
sub
add
jno
mov
cmpsb
jae
push
scas
daa
repz
pop
aam
pusha
bound
adc
jbe
mov
bound
movsl
push
lret
push
dec
push
icebp
sti
pop
pop
clc
scas
pusha
pop
cld
imul
and
adc
lcall
in
xor
dec
mov
dec
incb
push
mov
push
dec
jo
mov
jp
pusha
rorb
xchg
inc
inc
mov
pop
pusha
mov
inc
adc
push
lret
popa
pop
sbb
imul
loopne
mov
pop
inc
lahf
lret
test
mov
sahf
std
adc
in
fcoms
cmp
das
fiadds
popa
pop
ljmp
sahf
or
sub
mov
inc
repz
dec
jp
int
sti
inc
subl
dec
icebp
orb
push
cltd
and
mov
inc
pop
popf
and
dec
push
or
rcll
call
aad
mov
ds
mov
rorb
sarb
loop
push
pusha
mov
cld
shll
sbb
fidivrl
mov
pop
xchg
push
and
sub
mov
ds
shrl
stos
test
push
imulb
outsb
mov
testb
cmp
pop
dec
testb
push
mov
mov
out
cli
mov
roll
push
pop
xchg
xchg
pop
ljmp
jbe
mov
addr16
loope
aad
or
ljmp
cmp
in
push
jmp
or
adc
in
popf
jo
ljmp
cwtl
xor
fsubrl
fdivrp
mov
mov
stos
push
dec
pop
xlat
push
nop
jne
pop
inc
loop
std
mov
test
cwtl
mov
addr16
mov
sahf
hlt
dec
les
imul
ret
cli
loop
stc
sbb
lods
and
adc
xchg
in
popf
aam
lret
sbb
pushf
inc
pop
adc
push
in
iret
xchg
mov
mov
cli
jg
lea
xchg
add
sbb
jg
scas
mov
pop
mov
pop
adc
xor
inc
xchg
shlb
fistps
inc
dec
and
loope
adc
xor
push
lds
fisubrs
dec
sub
jg
xchg
in
xor
push
jnp
pop
clc
pushf
sti
popa
sbb
fiadds
dec
es
cmp
shrl
dec
aam
ret
mov
inc
lock
push
movsb
orl
mov
mov
ficomps
les
or
out
xor
mov
bound
pushf
adc
mov
and
pop
xorl
test
leave
or
arpl
jno
pop
fnstenv
xchg
cmp
subl
cmp
movsb
push
xor
add
cmp
xchg
icebp
and
stc
cld
xchg
sub
adc
inc
and
cld
pusha
pop
gs
shll
jne
jns
xor
icebp
cmp
test
inc
inc
xor
cmp
dec
push
pop
bound
push
push
sub
jg
push
xor
pushf
mov
xor
mov
inc
lret
dec
pop
pushf
jb
imul
cmpb
inc
or
in
xchg
xchg
mov
addl
dec
xchg
insb
ja
iret
jbe
arpl
and
jae
lea
pushl
cmpsl
je
leave
hlt
jle
cmp
clc
movsl
inc
out
repnz
xor
pop
add
hlt
mov
sbb
jbe
iret
insl
sub
clc
cmc
xchg
xchg
mov
dec
jmp
jge
outsl
cmc
roll
jg
jp
test
dec
jl
mov
push
dec
mov
ds
movsb
sbb
fidivrl
mov
jle
loope
cwtl
pop
out
cli
mov
lret
insl
mov
test
std
out
test
aas
decb
jge
jbe
call
aam
jp
inc
je
cmp
mov
push
push
push
jbe
jl
jne
test
fstps
xchg
repz
int
test
aad
pop
clc
arpl
imul
mov
mov
test
jbe
in
movsb
jne
aam
jne
loope
je
call
je
sub
fstpl
or
test
clc
jae
mov
sbb
jp
hlt
cli
cmp
repnz
cmc
add
in
mov
cltd
hlt
cli
add
sub
divl
stos
jne
clc
data16
add
jne
add
jne
test
ljmp
ljmp
leave
dec
jne
push
push
cmc
mov
dec
data16
sub
cmc
or
hlt
jp
mov
sub
cmc
xchg
jmp
cmpsb
cmc
pop
cmc
imul
dec
jmp
mov
in
popf
mov
leave
xorl
mov
jne
scas
jle
jb
lock
cli
test
loope
add
popf
ljmp
ja
xchg
jb
repz
pop
sbbb
lds
mov
pop
inc
imul
dec
pop
jb
push
lret
jb
push
xchg
cmp
out
xchg
jne
push
push
jne
pop
or
test
jb
jno
jne
insb
jmp
nop
cmp
or
stos
lock
lods
pop
bnd
mov
repnz
lock
jne
jno
pusha
in
sub
divb
in
stos
neg
hlt
out
pop
cmp
xor
sub
inc
mov
jae
mov
insl
fidivrs
divb
mov
mov
lock
roll
or
push
sub
cmp
adc
nop
cltd
je
adcl
xor
push
jbe
sub
stos
mov
cltd
test
cmp
popa
out
jnp
loopne
ret
pop
loope
xchg
xchg
loopne
cmp
in
fdiv
pop
popf
cwtl
add
add
lds
test
repnz
add
xor
inc
in
xchg
mov
insl
sahf
orl
hlt
xchg
mov
fnstenv
neg
sbb
jmp
lea
repz
stos
imull
push
push
idivl
lret
pop
mov
push
dec
insb
push
dec
fnsave
in
ja
cmp
cli
jb
adc
ja
sbb
lret
xor
dec
sbb
repz
fdivp
jmp
sub
lock
lods
testl
popf
lock
out
sub
cmp
in
ljmp
std
dec
jae
push
or
xor
insb
jnp
push
jbe
dec
fidivl
push
mov
jns
aas
in
std
cmp
xrelease
add
pop
popf
pop
mov
notl
sbb
repz
and
insb
or
stos
jae
and
mov
sub
xor
popa
sub
cmp
insl
xchg
mov
lock
pop
cli
jmp
push
push
fnstenv
repz
jmp
xor
call
sbb
inc
dec
outsl
divb
mov
ja
sub
push
aam
imul
rorb
jb
repnz
outsl
sub
pop
fdivrp
call
inc
or
lock
xchg
sub
fisttpll
or
jmp
mov
cld
icebp
cmp
push
sbb
or
push
pop
xorl
jo
push
cwtl
pushf
jo
pushf
dec
lock
outsl
ljmp
dec
out
cmc
insl
dec
test
inc
out
jmp
add
jbe
ljmp
insb
jbe
jb
jo
je
outsl
pop
adcb
xchg
lock
xchg
lods
jno
mov
or
mov
shlb
jge
mov
fucomp
test
xchg
jmp
popf
fldl
lock
nop
popa
out
fstps
shl
jmp
lods
xor
cwtl
in
push
stos
movsb
dec
jno
lods
push
loopne
imul
hlt
subb
cmp
lock
lock
icebp
fyl2xp1
push
out
pop
decb
jmp
dec
lcall
jmp
scas
cmp
cltd
in
jbe
mov
dec
outsb
push
scas
or
mov
jbe
cmpb
test
jno
or
mov
imulb
add
sbb
out
or
arpl
jns
pop
in
test
sub
jns
xor
std
fucomi
call
add
hlt
add
in
in
mov
rcll
call
outsb
ljmp
jbe
xor
dec
mov
std
sub
mov
mov
loope
push
cs
loop
orl
cwtl
insl
negb
add
out
fsts
adc
fildl
iret
outsb
ljmp
popa
or
jecxz
outsb
sub
imul
mov
outsl
pop
arpl
push
aam
mov
sti
pop
xor
sub
xchg
test
xor
sbb
pop
scas
or
sub
insl
daa
dec
jo
daa
fisubrs
adc
imul
xor
mov
dec
push
adc
push
jg
ja
movsb
cs
je
in
pop
jns
hlt
imul
pusha
out
sbb
cld
shr
cmc
dec
test
jp
das
std
repz
mov
lahf
movsl
push
pop
push
cli
mov
ljmp
sub
outsl
insl
xchg
jmp
iret
inc
pop
int3
addl
aas
ds
fxtract
xchg
test
cmc
imul
test
rcl
repnz
aas
sub
sbb
call
fisubrs
ret
pop
ljmp
mov
and
popf
push
xor
imul
add
mov
sub
mov
adc
push
jmp
xchg
clc
xor
xchg
add
negl
add
jmp
fdivl
dec
dec
and
bnd
add
cmp
cmc
movsb
ds
mov
xchg
push
or
jno
lds
in
notl
jecxz
aas
pop
mov
repnz
test
gs
pop
lds
pusha
sbbl
std
pop
out
mov
push
cli
mov
mov
sub
arpl
jle
insb
fisubrl
dec
pop
incl
mov
sub
test
push
mov
jo
aaa
add
mov
push
es
leave
push
sar
test
or
mov
sahf
test
mov
push
fimull
mov
ljmp
cmp
pusha
loop
push
outsb
xchg
jne
push
inc
dec
idivb
mov
mov
push
decb
jmp
and
mov
loope
xchg
stos
xchg
sbb
scas
push
lcall
add
or
gs
dec
push
and
fidivrs
aad
ljmp
jae
repz
je
xchg
dec
jnp
jo
insb
or
push
ja
out
sub
fdivrs
mov
mov
push
idiv
test
push
negb
mov
jge
sub
out
cmc
std
ljmp
push
stos
inc
ja
mov
sbbl
jo
pushf
fisubl
test
mov
sbb
stos
xchg
negb
push
std
imul
or
or
or
stos
cmp
xor
stos
repnz
call
mov
ja
stos
lds
adc
xchg
and
cld
sbb
cwtl
dec
cmp
jns
test
std
pop
pop
sbb
or
add
fwait
xor
sub
jmp
insl
fidivl
stc
xchg
ret
mov
jb
sub
xchg
not
jg
fimuls
in
cmp
cwtl
sub
pop
mov
filds
or
mov
push
call
daa
call
mov
insl
push
imull
stos
jge
and
push
stos
insl
not
jp
jp
es
cmp
imul
dec
cli
mov
cmc
jmp
sub
jmp
xor
std
pop
mov
ss
lds
clc
leave
push
and
pop
popf
dec
jge
test
mov
jp
push
mov
jp
lock
stc
ss
jo
stos
jno
push
fyl2xp1
or
mov
jmp
xor
std
sbb
lds
cmc
in
clc
jns
xor
std
rcrb
leave
or
push
int3
enter
add
push
mov
sub
fnstsw
or
outsb
ficoml
stc
ja
sub
decb
mov
call
xor
fsubr
cmp
in
call
or
mov
shrl
in
jp
cmp
pop
clc
mov
lds
add
jg
cmpsl
and
or
pop
outsb
push
stos
xchg
js
dec
mov
fwait
mov
and
mov
mov
mov
jo
and
fwait
movsb
sbb
cmp
sub
idivl
data16
lods
dec
dec
push
aad
test
mov
cli
xchg
xchg
pushl
popa
push
or
ss
jmp
test
stos
sbb
cld
test
cs
mov
sbb
popf
and
mov
mov
pop
xlat
dec
sbb
cmpsl
out
fistpl
scas
roll
xchg
out
leave
js
test
or
jge
cwtl
lret
popf
and
sahf
lret
cld
dec
lcall
arpl
movsb
es
test
jo
mov
int
outsl
sarb
or
push
in
ljmp
jle
jb
lcall
out
cmpsb
push
outsl
push
mov
stc
pop
and
mul
stos
fwait
clc
fidivrl
lcall
popf
or
test
mov
clc
jns
sbb
jmp
fs
add
js
clc
popf
jl
sti
sub
fidivrl
imul
jg
test
fs
mov
push
pop
rorl
leave
push
mov
stos
js
aam
outsl
mov
enter
int3
jnp
mov
das
lcall
mov
out
fsts
mov
hlt
jle
dec
aaa
dec
popf
mov
repnz
add
popf
fsubrs
dec
lock
insl
or
push
dec
fwait
pop
mov
xchg
pop
div
mov
xor
das
jno
inc
pop
iret
lods
hlt
mov
movsb
xchg
arpl
popa
lods
pushf
cmpsb
xchg
sub
add
add
add
lock
add
cld
mov
add
sbb
add
xor
add
dec
mov
add
insb
mov
add
test
add
pushf
mov
add
mov
mov
add
call
mov
add
sbb
add
xor
add
inc
mov
add
add
add
cld
mov
add
sbb
add
xor
add
dec
mov
add
insb
mov
add
test
add
pushf
mov
add
mov
mov
add
call
mov
add
sbb
add
xor
add
inc
mov
add
add
add
imul
gs
xor
cs
insb
add
inc
gs
gs
imul
inc
jb
popa
je
dec
jne
gs
add
dec
outsl
popa
fs
imul
js
add
inc
jb
popa
je
push
imul
je
imul
imul
jns
add
inc
jb
popa
je
inc
imul
push
imul
imul
jns
add
inc
gs
gs
imul
insb
jae
jb
outsb
inc
add
inc
imul
inc
imul
jb
jo
push
add
inc
gs
imul
bound
gs
add
inc
gs
gs
jo
popa
je
inc
add
inc
gs
imul
inc
gs
outsl
fs
gs
imul
add
insb
jae
jb
jo
inc
add
dec
outsl
popa
fs
imul
js
add
push
gs
imul
outsl
arpl
jae
add
je
jb
arpl
fs
jae
add
inc
js
je
jb
arpl
jae
inc
imul
jne
arpl
add
fs
imul
add
inc
insb
outsl
jae
dec
popa
outsb
fs
add
je
jns
je
insl
push
imul
