nopl
out
ljmp
aam
jle
xchg
sub
popf
cmp
adc
lcall
ds
jnp
sub
test
sub
fcompp
jns
add
jne
push
out
imul
mov
xlat
xchg
mov
jae
sahf
mov
int
scas
dec
cld
mov
lcall
call
mov
stos
jbe
xchg
xchg
mov
add
jo
pop
dec
lahf
es
jnp
mov
std
jecxz
adc
cvtps2pd
cmp
scas
dec
jbe
popf
jbe
sub
xor
insl
dec
xor
cmc
cmp
sbb
lcall
cmc
lds
shll
sbb
jmp
pop
jge
test
iret
cmp
pop
cltd
mov
je
and
popf
pop
push
inc
in
mov
add
test
lea
in
xchg
push
rcl
les
sahf
mov
inc
jb
int
sbbb
jp
add
in
lds
fdivrl
cmp
pop
gs
inc
stc
scas
cmp
mov
pop
mov
sahf
jnp,pn
aad
scas
or
mov
addr16
sbb
aad
mov
test
add
jmp
lret
pushf
xchg
fists
shlb
add
cmp
neg
jle
jae
es
or
data16
mov
and
repz
outsl
ret
cs
and
arpl
mov
adc
lret
cltd
in
bound
xor
push
adcb
sub
cmp
add
lret
sahf
repnz
inc
ret
xor
stc
in
cwtl
mov
sub
popa
test
test
mov
or
or
mov
dec
es
sbb
stos
mov
pop
push
or
sub
sbb
xchg
lahf
ja
mov
cmpsl
jns
insl
cmpsl
mov
push
in
mov
cmpsl
mov
sbb
pop
shlb
sti
jecxz
jp
push
cwtl
loop
jo
repz
retw
cwtl
adc
cli
ret
mov
cmpb
int3
mov
cld
mov
addl
sti
pop
mov
lds
hlt
pusha
insl
push
mov
test
jle
xor
enter
aad
aad
add
cs
sub
outsb
mov
sbb
call
pop
sbb
sbb
fmuls
mov
popw
dec
add
into
and
sbb
inc
dec
jnp
xor
xor
andl
cli
out
push
scas
pop
rol
shll
les
and
cmp
xchg
es
shll
push
repnz
cmp
mov
xchg
add
jl
inc
hlt
cmp
jmp
jo
lcall
mov
pop
es
fists
ja
mov
dec
mov
shll
loop
popw
mull
dec
pop
mov
repnz
repnz
dec
xchg
and
popa
lahf
jmp
push
ja
mov
faddl
sbb
xchg
stc
sbb
jecxz
mov
mov
movsl
lods
shll
es
sar
cmp
cmp
jmp
rcrb
push
dec
movw
aam
cmp
cmp
verr
jge
push
stos
push
adc
not
sub
sbb
mov
push
lret
jecxz
xor
sbb
mov
test
daa
outsb
mov
pop
mov
mov
jns
dec
fistps
dec
xchg
cmc
shl
gs
repz
lods
sub
cwtl
lods
pop
adc
sub
xchg
dec
push
xchg
xchg
xor
jne
or
lahf
sub
xchg
xor
adc
rcl
js
outsl
clc
pop
xor
cmp
roll
outsl
push
js
cmp
popf
mov
pop
fstpl
adc
in
shrl
cmp
repnz
mov
dec
mov
sbb
mov
dec
pop
jo
push
pop
mov
incl
shll
test
out
repz
rorl
xchg
mov
cltd
ja
adc
inc
fsub
or
pop
sti
outsl
xchg
rcl
mov
or
ss
movl
out
or
mov
or
dec
into
mov
jg
fldenv
fldl
out
mov
push
rolb
sub
int
jbe
xchg
test
and
dec
pop
jno
js
mov
jmp
push
mov
outsl
mov
push
aam
dec
xor
jg
jbe
xor
xchg
push
jl
ja
dec
pop
mov
scas
mov
push
out
xorl
nop
mov
repnz
mov
arpl
inc
test
mov
xchg
mov
pop
jle
add
push
xchg
jl
sub
xchg
jg
and
push
sub
xor
repnz
mov
imul
pop
rclb
ror
sub
pop
mov
test
popf
nop
insl
sub
cmp
hlt
sbb
cli
in
push
xchg
add
or
xchg
inc
les
repnz
fisttpl
js
sbb
jnp
adc
cs
and
lods
push
dec
bound
sub
fnsave
pop
or
int3
iret
jg
xor
sub
push
cmp
pop
loop
jnp
jnp
mov
jle
mov
mov
dec
inc
and
push
or
pusha
test
lret
and
out
in
dec
mov
push
mov
adc
inc
adc
xor
loopne
cmp
push
jbe
cmp
pop
ds
add
adc
push
cs
sti
and
mov
insb
add
rclb
aaa
into
lret
cmp
test
dec
mov
cmpsb
and
cmpsb
dec
daa
push
imul
add
pop
dec
das
sbb
sub
stos
jge
loope
pop
aaa
std
sub
and
and
daa
inc
clc
cltd
repz
dec
xchg
leave
jge
jl
test
sahf
xor
mov
fldl
sbb
pop
int
add
dec
jle
pop
test
enter
xor
sbb
mov
push
jae
pop
pop
fcoml
xor
pop
sub
mov
jg
scas
adc
jnp
shlb
call
sbb
cltd
mov
xchg
inc
cltd
inc
out
in
out
cltd
es
mov
leave
fwait
mov
out
js
test
arpl
push
cs
popf
dec
mov
enter
mov
mov
xchg
fucomi
nop
stos
fwait
rcl
fnsave
pop
and
outsb
adc
adc
fwait
and
shlb
xor
lea
mov
xchg
outsl
mov
push
ljmp
mov
pop
push
hlt
xor
add
jae
jno
sub
test
movsl
push
enter
jbe
rorl
or
add
mov
mov
xor
mov
mov
jp
aad
fstps
sub
dec
mov
es
repz
cmp
insw
repnz
scas
adc
pop
dec
mov
xchg
int
ds
xor
xor
push
idivl
sub
repz
push
lahf
out
in
push
movsb
or
adc
lds
imulb
into
movsb
pop
and
mov
icebp
and
call
nop
into
jb
xor
push
iret
sbb
xchg
faddl
inc
xorb
fiadds
idivl
cld
sti
add
loopne
pop
lcall
push
and
rolb
push
jb
and
sarl
out
sub
push
pop
mov
and
outsb
dec
sbbl
mov
mov
mov
or
push
je
jae
dec
push
dec
ret
xchg
mov
bound
fnstcw
cs
mov
scas
xchg
mov
notl
add
or
mov
es
stos
es
in
mov
add
or
jp
and
pop
jno
mov
xchg
sbb
je
int
out
push
dec
andb
push
imul
rclb
jecxz
aas
scas
ss
xchg
mov
add
xchg
mov
mov
and
sub
popa
or
leave
pusha
stos
enter
std
scas
mov
or
jo
in
xchg
mov
mov
fnstsw
push
xchg
test
lds
addb
aad
jle
pop
cli
repz
ret
pop
ja
push
call
and
rorb
and
std
bound
mov
adc
fcmovnu
sbb
shl
loope
lret
lods
add
stos
cli
mov
sub
push
or
adc
push
cltd
out
test
lret
pop
inc
cmp
movsb
aad
jge
in
and
hlt
jl
outsb
or
sub
sbb
push
mov
add
ret
ror
adc
xchg
inc
adc
jo
add
loop
or
lock
pop
xchg
push
pop
hlt
in
int3
xor
loopne
movsb
aad
pushf
mov
or
pop
mov
add
sarb
push
dec
or
push
add
in
fdivrp
mov
adc
fiadds
nop
mov
stos
dec
mov
lcall
add
shll
pop
pop
add
insb
ret
cmp
iret
insb
in
add
out
cli
mov
xchg
stc
mov
add
dec
out
stos
dec
movsl
sbb
jne
dec
add
scas
and
ret
adc
jle
push
call
push
mov
mov
push
push
dec
negb
or
lret
out
mov
shll
ds
imul
sub
insl
mov
fildl
shrl
cmp
and
das
dec
ljmp
jo
add
lock
push
shrl
mov
ljmp
hlt
fdiv
or
sbb
pop
movsl
add
mov
push
jbe
xor
arpl
cwtl
aam
pop
inc
pop
xchg
mov
mov
jnp
insl
mov
jg
sub
cmp
jns
jp
addb
cld
jg
pushf
imul
mov
xchg
dec
sub
push
in
rcl
data16
testl
xchg
cmp
scas
and
add
cltd
sar
mov
jl
jge
loop
ja
shrb
shrl
inc
popf
push
bound
sbb
in
sub
push
sahf
sbb
test
loop
ljmp
mov
jle,pn
ret
jge
push
out
pop
pop
inc
push
inc
jl
xchg
pop
push
ss
lock
xchg
jae
ficomps
push
out
pop
or
pop
popf
and
jb
mov
pop
sub
lea
in
dec
sub
mov
shl
add
imul
pop
or
xchg
mov
pop
mov
pop
test
mov
inc
dec
mov
cmpsb
pop
icebp
mov
adc
in
inc
push
sti
vrsqrtps
adc
dec
iret
lret
arpl
out
push
jbe
cmpsl
fs
aad
mov
int3
pop
nop
test
inc
pop
pusha
mov
incb
js
jp
ret
mov
cmc
dec
negl
push
mov
adc
push
pusha
inc
outsb
leave
push
popf
stos
subl
xchg
push
push
out
xchg
shl
scas
subl
push
jle
ss
mov
xchg
xchg
inc
sti
xor
inc
lock
push
jae
push
popf
lea
dec
mov
xchg
lea
mov
adc
insl
loope
aaa
stos
inc
xor
xchg
jp
fdivs
testb
add
fnstenv
mov
leave
mov
cmp
out
adc
sub
pop
xchg
rorl
sbb
xchg
mov
inc
std
adc
loopne
sub
loope
in
adcb
inc
fnstcw
fnstcw
adc
mov
sbb
xor
mov
sub
jge
push
mov
mov
movsb
ljmp
xchg
jbe
sbb
movsl
sarl
shl
xchg
jb
mov
out
mov
mov
push
rclb
pop
out
xchg
arpl
mov
jns
xlat
std
fwait
clc
mov
or
arpl
dec
inc
push
stos
shlb
enter
cwtl
fcmovnbe
jecxz
in
xchg
xchg
jg
cmp
rcrb
cwtl
adc
dec
sbb
and
pop
das
mov
lds
test
push
lahf
or
arpl
or
xor
lods
sub
stos
rcll
or
test
push
add
sub
cmpsl
in
push
mov
add
int
mov
lahf
ss
mov
shll
out
mov
pop
imul
push
jmp
daa
push
cmp
orb
out
aam
xor
cld
jge
in
mov
aam
ret
loop
jl
add
cld
push
lret
mov
lcall
or
mov
jl
hlt
jp
test
pop
adc
pop
fisubrs
mov
scas
jnp
add
add
mov
dec
loope
adc
fucomip
stos
inc
inc
jae
mov
xchg
or
xor
xor
cs
push
sub
cmp
pushf
sbbl
fistpl
adcb
lods
imul
push
lcall
mov
outsb
loopne
dec
flds
sub
inc
ss
fsts
loop
dec
adcb
shll
mov
movsl
loop
popa
xchg
xchg
sbb
mov
iret
pusha
mov
repz
das
xchg
xor
pop
imul
xlat
or
xchg
dec
add
std
cmp
shrl
push
lahf
nop
and
pop
sub
hlt
enter
adc
or
pushfw
shlb
sbb
cs
fcomp
orb
jo
in
movsb
pop
jae
sti
adcb
jg
jbe
xor
adc
add
xchg
jmp
test
pop
push
mov
roll
sbb
adc
nop
ss
imul
enter
jge,pn
inc
insb
dec
dec
stos
or
push
ret
clc
ss
int
dec
inc
adc
imul
imul
or
sub
adc
leave
popa
pop
in
repnz
xchg
cwtl
xor
xchg
xchg
adc
pop
push
aam
sbb
test
pushl
in
hlt
cmp
or
sbb
aam
sbb
test
clc
mov
mov
leave
shrb
inc
into
ret
push
addr16
xlat
jp
mov
push
sub
shlb
add
imul
outsb
test
add
in
push
jmp
mov
popa
xchg
cmpb
cmp
mov
sub
lods
ja
insb
add
jmp
mov
dec
or
in
mov
or
dec
rolb
rorb
out
jle
xor
cmc
stc
push
bound
stos
out
pusha
inc
jo
pop
out
xchg
jns
jecxz
jle
xchg
sbb
xchg
pop
and
stc
cmc
test
mov
or
jns
fiadds
lock
shll
mov
adc
pop
mov
pop
pop
gs
paddusb
mov
cli
dec
mov
mov
stos
ds
mov
int
sbb
int3
lret
andl
xchg
repnz
es
and
mov
rclb
sti
mov
inc
cmpb
mov
test
arpl
dec
cmp
or
nop
xchg
movsl
mov
inc
pop
ds
out
pop
jo
stos
cmp
mov
inc
out
in
ja
ds
xor
mov
dec
jns
pop
jnp
add
out
and
enter
data16
test
or
and
mov
add
cmp
sub
xor
inc
lret
dec
jge
sub
mov
insb
gs
fdivrl
push
scas
dec
imul
inc
dec
and
or
jmp
pop
je
xor
mov
shrb
add
cmp
enter
test
xlat
lods
in
in
hlt
mov
int
sbb
adc
pop
sbb
sub
jb
push
rcrl
adc
and
inc
xor
lods
pop
movsb
pop
outsl
cmp
out
add
adc
mov
cmp
xor
sub
mov
test
xchg
addr16
xchg
das
add
xor
test
stc
jmp
jo
ja
popf
fnstsw
out
aaa
and
stos
cmp
push
not
pop
std
movl
mov
pop
dec
lcall
cmp
and
jp
lahf
fsts
push
je
adc
fwait
xchg
out
loope
dec
and
mov
or
pop
inc
ja
pop
pop
cmp
sbb
mov
movl
jge
pop
and
jno
ror
stc
push
push
mov
outsb
add
in
mov
lods
lea
push
mov
push
jp
ljmp
inc
adc
push
pop
jne
dec
imul
xor
pop
hlt
inc
pop
jne
inc
bt
int3
shll
cmp
sbbb
loop
stos
pop
mov
add
and
in
movsl
inc
stos
push
repz
and
int
out
mov
mov
push
orl
dec
xchg
aas
jmp
pop
mov
popa
insb
xorl
je
push
decb
adc
fadd
add
jmp
cmp
dec
or
jp
and
loopne
inc
sub
xor
and
popa
lods
or
fmuls
fidivrl
test
cmpsl
push
out
sub
inc
or
outsb
bound
test
inc
cmp
imul
sub
jmp
movsb
pop
outsb
cli
js
daa
bound
mov
je
lock
and
jp
shrl
push
out
dec
in
cmpsl
dec
jg
pop
push
cmp
sbbb
popa
mov
imul
sub
xchg
cwtl
rep
sarl
sbb
push
movsw
mov
stc
cld
imul
xchg
xor
mov
dec
test
adc
clc
jg
es
mov
lds
jp
mov
mov
jl
jo
adc
push
mov
xor
lea
cmp
cmp
and
sbb
shr
movsb
imul
xchg
les
orb
xchg
sbb
mov
gs
sbb
xor
adc
mov
js
xchg
lcall
or
imulb
push
stos
test
ja
aam
mov
in
mov
cli
xchg
push
aaa
xchg
push
pop
outsl
rcl
pushf
jb
push
leave
outsl
call
in
cmpl
cmc
mov
rcll
mov
dec
jge
arpl
mov
fistpll
push
pop
cmp
cli
insl
dec
dec
popl
nop
push
mov
mov
inc
xchg
cmp
dec
movsb
push
pop
mov
imull
or
int
insl
je
xor
jne
sahf
lahf
fnstcw
sbb
ret
push
jnp
push
and
adc
rcrl
pop
mov
jo
adc
and
mov
push
xchg
pop
out
ja
dec
insb
inc
movlps
cmpsl
insl
cmp
jle
pop
jnp
jb
mov
clc
call
testl
inc
cli
mov
mov
pop
aas
popf
xchg
rorl
sub
sbb
xchg
lock
lods
mov
imul
jle
pop
ljmp
scas
mov
dec
sub
adc
orl
jmp
add
repz
push
mov
mov
pop
lds
mov
pusha
nop
adc
aas
lds
adc
shl
cmp
pushf
out
out
pop
pusha
inc
outsb
add
sub
push
pop
pop
pop
fbld
lahf
xchg
mov
mov
jle
adc
ja
jnp
push
sarb
cmp
cmp
popa
int
jb
cmc
loope
inc
xor
aam
fisttps
xchg
mov
push
jns
push
mov
ja
or
mov
cmp
idivb
mov
adc
jo
adcb
fs
lea
js
in
in
pop
mov
mov
xchg
pop
xchg
pop
jo
cmp
and
outsl
add
test
push
arpl
fisubs
sbb
mov
negb
pop
fidivrs
adc
adc
insl
ja
ds
test
add
cmp
mov
pop
push
dec
shlb
sub
adc
push
fsts
test
int
pop
movsl
push
mov
dec
inc
dec
enter
push
andl
fwait
aam
ds
inc
sub
jne
neg
push
mov
mov
addr16
pop
xorl
add
mov
and
sub
xor
jno
push
jne
aad
mov
out
clc
stos
fnstenv
pop
xchg
mov
pop
push
imul
loopne
loop
mov
jle
push
push
roll
adc
add
subl
and
pusha
out
xlat
in
movsl
daa
movsb
cmp
jle
sub
or
sub
push
rcr
pop
imul
cmp
leave
cmpsb
add
out
or
xchg
adc
mov
sub
es
shll
cli
aad
arpl
or
add
pop
xorl
push
mov
push
test
xor
xor
out
insb
mov
in
and
mov
push
pop
sbbb
ljmp
cmc
dec
pushf
js
add
test
mov
xor
insb
std
test
jne
inc
cli
mov
pop
push
data16
pop
mov
hlt
mov
mov
jb
loop
fsubrs
fisubrs
mov
lds
mov
in
lret
xor
daa
loopne
enter
js
adc
mov
jb
lcall
cmp
mov
shll
sbb
dec
outsl
fxch
sbb
nop
pusha
push
xorl
jne
cmp
leave
add
xlat
fistpl
xchg
rorl
jno
cmp
mov
xchg
pop
xor
mov
inc
lahf
push
jns
sbb
call
leave
adc
fs
or
repz
incl
lahf
xchg
jge
das
or
lahf
and
test
mov
jbe
aam
jb
test
enter
or
fdivrs
cwtl
shll
adc
int
imul
xor
or
inc
daa
cmp
cmpsl
lods
loopne
outsb
jle
lea
jb
out
push
mov
mov
add
pop
pop
push
mov
loopne
in
clc
lock
pop
bound
loop
mov
cmp
jle
push
inc
xor
add
adc
loopne
movsl
lods
add
jns,pt
cmpsl
sub
mov
js
xor
or
pop
rorb
add
jo
adc
popa
lret
adc
xor
mov
mov
fmul
sub
stc
decl
dec
std
jl
out
test
jecxz
push
pop
pop
repz
sub
push
mov
push
cli
das
push
jl
or
fimull
adc
mov
nop
cwtl
cwtl
ret
push
jb
lcall
aam
push
lods
enter
aad
push
sahf
pop
popl
nop
int3
ficoms
pop
repz
xchg
adc
mov
lcall
push
and
aad
add
adc
popa
daa
das
cmc
cmc
jnp
sbb
push
mov
fildll
scas
leave
mov
into
cmp
xlat
sub
loop
sbb
cli
inc
cmpsb
scas
in
sahf
push
and
sbb
mov
dec
lock
mov
sbb
sub
inc
ljmp
mov
shl
sub
xorb
add
adc
cli
dec
adc
addr16
and
mov
and
outsl
into
lods
sbb
mov
mov
push
inc
scas
sbb
in
jb
pop
xlat
pop
push
sti
js
cmp
sub
or
daa
es
fstpt
mov
mov
scas
cmp
pop
out
jge
in
lock
or
ja
pop
and
jbe
and
xchg
sub
hlt
mov
xchg
cmp
idivl
sub
repnz
jnp
jbe
rcrl
cmpsl
add
mov
movsl
mov
bound
in
lds
jecxz
add
out
lret
xor
cmp
mov
or
in
mov
jp
xor
sahf
mov
sahf
add
fidivs
insl
int3
aam
jnp
out
jno
leave
jl
mov
xchg
inc
cwtl
enter
setbe
outsl
jg
and
xchg
fldcw
push
decb
imul
int3
mov
jb
psllw
sbb
loope
push
ficoms
pop
js
cld
hlt
loopne
xchg
fs
sbb
and
call
dec
dec
pop
adc
jb
insb
mov
aam
imul
in
pop
fiaddl
aaa
xchg
and
aad
cmc
cmc
jbe
jns
ss
push
xor
mov
inc
sbb
lret
sub
icebp
outsl
and
imul
enter
ss
mov
mov
push
adc
xchg
inc
mov
push
fdivr
or
jecxz
mov
clc
test
and
fstl
jp
cwtl
mov
and
mov
inc
ret
rcr
push
fnstenv
mov
push
add
cmp
cmp
imul
mov
in
hlt
xor
pop
sbb
imul
icebp
xor
mov
pop
in
iret
push
pop
sbb
xchg
addr16
cmpsl
or
setno
pop
inc
sub
lods
mov
aad
xchg
iret
mov
shrl
fldcw
mov
scas
cwtl
popf
test
mov
sbb
inc
or
int
mov
push
lock
fstps
pushf
jg
insb
loope
jbe
repnz
sbb
ljmp
dec
sbb
sti
push
dec
arpl
aad
js
stc
cmp
mov
dec
xchg
ficomps
jp
mov
xchg
mov
mov
pop
mov
inc
pop
in
hlt
xchg
xor
jbe
into
push
xor
xor
adc
pop
pop
cmp
inc
mov
or
sbb
test
lods
xorl
xor
roll
and
cwtl
rclb
xchg
sbb
sti
jmp
sbb
inc
mov
aad
xchg
sbb
je
call
data16
sub
mov
iret
dec
cld
cmp
aas
call
in
inc
cmp
mov
divl
insb
repz
lods
lock
mov
dec
jno
sub
cmp
adc
or
roll
pop
popf
add
jno
filds
setp
fstl
add
int
cmpsl
outsb
mov
lret
mov
mov
scas
ljmp
ss
test
lock
add
mov
dec
push
aam
cwtl
pop
push
ret
popf
xlat
lret
cmp
push
mov
faddl
sub
aad
popf
stc
cmpsb
cltd
into
push
mov
addr16
xor
sar
add
or
jmp
push
push
dec
push
shr
test
shl
call
ficomps
clc
mov
rcr
call
sbb
lock
inc
lea
not
ror
shl
rol
cmp
jne
imul
add
adc
sbb
call
incb
aad
and
cmpw
je
sub
add
jmp
xchg
jo
add
jl
fs
shr
sub
rcr
test
xor
jmp
and
leave
mov
ret
fisubrs
pop
push
mov
ljmp
sub
add
not
shl
sub
cmp
jne
dec
std
pop
push
scas
out
scas
sar
test
dec
jmp
not
rol
rcr
jmp
jb
cmp
test
shl
shr
rol
call
stos
repnz
ror
sar
inc
ror
ror
shl
jmp
aad
ja
sub
lret
rcr
rcl
rol
call
sbb
scas
cmpsb
sbb
sbb
sbb
jmp
test
sub
into
adc
add
add
pop
sbb
fs
or
call
cmp
popf
not
xor
shl
cmp
add
call
jnp
or
and
sbb
adc
jmp
dec
or
xor
cli
and
sar
jmp
pusha
add
fiaddl
add
adc
ffreep
fistl
shr
shl
jmp
xchg
push
loop
sbb
shl
or
add
shl
jmp
movsl
mov
fs
not
cmp
jne
loopne
in
cmp
test
inc
test
not
ror
shl
jmp
ljmp
and
adc
cmp
jne
outsl
lods
sub
not
shl
call
ret
mov
sar
call
daa
bound
rcr
xor
shl
rcl
cmp
jne
mov
xor
or
shr
sub
shl
cmp
jne
mov
into
addb
roll
std
test
cmpsb
jne
xor
xor
rol
sar
rcr
inc
cmp
jne
dec
stos
jbe
cmpsl
inc
sbb
roll
cli
cmp
and
jmp
push
lret
ret
sar
or
jmp
mov
sub
lea
shl
add
add
xor
jmp
or
enter
add
rcrb
fisubs
leave
sar
cmp
jne
daa
xchg
pop
fsub
shlb
repnz
imul
ror
call
aam
and
fs
sub
rol
sar
add
inc
call
jle
cmc
and
lea
test
jmp
call
neg
shr
adc
sbb
shl
shl
call
cmp
inc
or
sar
add
mov
neg
call
cs
mov
loopne
fistps
not
mov
rcl
call
fstp
inc
scas
repnz
adc
test
sbb
sbb
cmp
jne
idivl
xlat
jae
and
shl
rcr
or
sar
sar
cmp
jne
push
outsl
cmpsb
sbbl
rol
and
not
mov
cmp
jne
or
lea
mov
shr
call
into
clc
inc
int
fs
mov
shl
rcr
jmp
inc
aam
cmpsb
rcl
shl
shl
cmp
jne
pop
xchg
fnstcw
and
xor
shl
ror
sbb
rol
jmp
fcomps
xchg
mov
shl
ror
mov
jmp
mov
in
lea
shl
call
jle
jle
fs
ror
cmp
jne
test
into
sbb
and
sar
shl
or
sbb
jmp
sbb
or
fs
shr
cmp
jne
jb
mov
shl
shl
call
cs
pop
mov
mov
push
or
add
cmp
jne
mov
pop
jnp
fs
sbb
sbb
cmp
jne
repz
test
xor
rcl
sar
rol
adc
jmp
rcll
out
mov
test
sub
neg
cmp
jne
lods
mov
pop
repnz
sub
fs
neg
rcl
xor
dec
or
call
lods
add
ror
and
test
adc
add
add
jmp
andb
jge
sar
test
sar
jmp
shrl
dec
sbb
add
test
adc
jmp
aas
jno
sbb
pop
xchg
lea
test
neg
add
sub
add
call
adc
add
rclb
neg
ror
cmp
jne
and
push
call
sub
neg
mov
cmp
jne
and
test
sar
rcr
cmp
jne
out
push
std
fildl
mov
ror
or
not
call
in
xchg
mov
cli
sbb
and
test
rcl
jmp
popa
push
ret
fsubrs
loop
and
loop
enter
shr
sar
adc
xor
cmp
jne
out
fdivl
out
cmpsb
adc
rcr
shl
mov
add
cmp
jne
xchg
js
push
mov
ror
sub
rcr
cmp
jne
mov
outsb
test
xor
and
test
call
mov
inc
dec
sbb
and
sar
adc
not
call
mov
lea
sub
xor
add
jne
jmp
cmpsb
inc
mov
inc
inc
xor
or
xor
cmp
jne
xor
rcr
add
rol
dec
ror
neg
cmp
jne
pop
insl
mov
call
and
sti
nop
imul
imul
xchg
iret
ss
cmp
xchg
imul
nop
imul
pop
lret
cmpb
or
imul
cmp
fmuls
repz
ss
stc
mov
imul
ss
imul
nop
imul
sub
ss
aad
in
xchg
imul
nop
imul
fdivrl
nop
imul
fdivrs
mov
fsts
xchg
dec
ss
adc
or
ss
loope
ljmp
out
ss
std
stc
mov
repz
ss
aad
xor
ss
dec
sub
ss
ss
adc
pop
inc
ljmp
adc
or
sti
jbe
repz
enter
cld
jno
enter
ss
imul
fdivs
or
ss
sub
dec
ss
imul
repz
ss
xchg
orl
mov
ss
mov
dec
and
ss
imul
mov
ss
or
outsb
dec
call
nop
imul
nop
imul
and
push
scas
nop
imul
js
imul
sahf
repz
ss
inc
ljmp
ss
imul
fbstp
jbe
jl
xchg
push
add
nop
imul
imul
nop
imul
push
xor
and
nop
imul
icebp
nop
imul
jmp
mov
imul
imul
nop
imul
cmp
pop
nop
imul
dec
dec
ss
fdiv
nop
imul
inc
repz
aas
jge
pop
pop
nop
imul
outsl
cs
imul
jl
ss
stos
jl
mov
ss
imul
fmuls
nop
imul
push
mov
insl
lret
ss
and
add
imul
nop
imul
in
ss
imul
out
or
ss
add
nop
imul
pop
shl
push
pop
dec
mov
sti
repz
ss
and
imul
imul
jns
nop
imul
push
or
repz
ss
cli
lea
ss
popf
add
mov
lods
ljmp
imul
mov
sub
jecxz
fdivs
nop
imul
fmuls
nop
imul
jge
ss
test
call
adc
or
fidivl
nop
imul
imul
aam
xor
lea
repz
sarb
add
nop
imul
nop
imul
loop
ss
ret
fisttpll
sti
jbe
repz
sub
mov
xor
call
nop
imul
fdivs
nop
imul
imul
imul
ss
sub
sti
repz
ss
addl
xor
mov
ss
fwait
add
sub
imul
imul
repz
inc
pop
mov
sti
mov
sti
xor
ss
adc
jmp
repz
jbe
test
pop
ljmp
seto
nop
imul
insl
dec
ss
insl
dec
ljmp
nop
imul
nop
imul
mov
jbe
clc
jl
push
mov
ss
imul
xor
sub
ljmp
hlt
dec
ss
int3
push
jp
dec
call
nop
imul
imul
imul
repz
jbe
jbe
jbe
push
insl
mov
adc
or
nop
imul
imul
aam
repz
ss
dec
dec
push
pop
nop
imul
adc
ss
dec
jae
or
or
fdivrs
nop
imul
pop
or
and
rorl
imul
ss
nop
imul
jbe
aaa
xor
or
sarb
pop
repz
ss
addr16
add
cwtl
nop
imul
bound
ss
xor
jge
adc
or
imul
mov
or
sbb
mov
imul
nop
dec
ss
sti
mov
dec
ss
dec
push
nop
imul
imul
imul
nop
imul
push
jbe
xchg
cmp
call
imul
sahf
dec
ss
imul
aam
repz
ss
mov
ljmp
nop
imul
nop
imul
jmp
test
out
ss
imul
js
ss
imul
imul
int
ss
cmp
ljmp
nop
imul
imul
mov
ss
jae
aam
jns
imul
imul
pop
divb
mov
mov
test
imul
sti
inc
fmull
nop
imul
mov
test
pop
ljmp
nop
imul
jmp
aaa
nop
imul
mov
cmpsb
call
imul
nop
imul
fdivs
imul
imul
bound
ss
mov
imul
push
pop
nop
imul
sbb
ss
adc
je
fcoml
leave
ss
mov
xor
sti
jbe
nop
imul
fdivs
nop
imul
orl
nop
imul
xchg
dec
ss
imul
pop
or
mov
adc
popf
nop
imul
pop
pop
nop
imul
cli
or
adc
adc
or
jbe
jbe
imul
imul
imul
jno
ss
mov
adc
xor
imul
nop
imul
fdivs
nop
imul
mov
fwait
mov
imul
jne
ss
imul
icebp
lret
ss
jbe
rcrl
jge
nop
imul
call
nop
imul
mov
divb
or
sti
imul
nop
imul
repz
ss
lods
cld
nop
imul
ss
imul
mov
add
enter
dec
dec
insb
adc
imul
nop
imul
repz
ss
mov
repz
dec
ss
imul
fs
dec
enter
not
sbb
aas
xor
imul
pop
enter
pop
push
lcall
cmpsl
nop
imul
leave
nop
imul
sub
ss
out
jo
mov
aam
xor
ss
imul
nop
imul
in
ss
sti
std
xor
or
ss
sti
stc
es
nop
imul
leave
nop
imul
inc
lret
dec
fwait
sbb
push
ss
mov
nop
imul
es
imul
and
dec
xchg
insl
imul
nop
imul
mov
ss
inc
dec
adc
sbb
nop
imul
fdivs
xor
mov
nop
imul
imul
aam
nop
imul
push
or
adc
adc
imul
sti
jns
imul
int3
divl
mov
jns
imul
imul
imul
cli
dec
ss
jg
mov
nop
imul
sti
nop
imul
fcomip
jbe
nop
imul
mov
xorb
push
and
add
jbe
cmp
xor
or
ss
or
ss
or
pop
nop
imul
mov
nop
imul
or
repz
sbb
add
xor
jbe
imul
mov
bnd
pop
cmp
ljmp
fistl
dec
call
repz
ss
dec
mov
call
nop
imul
inc
nop
imul
or
or
ss
mov
or
aaa
repz
jbe
outsl
lahf
mov
nop
imul
pop
pop
nop
imul
push
sbb
sub
ss
movsl
movsb
pusha
ljmp
jbe
xor
ss
imul
testl
imul
imul
xor
jbe
pop
mov
loop
cmp
adc
or
add
nop
imul
sub
ss
mov
jbe
xor
imul
repz
pusha
ss
pop
mov
dec
mov
fbstp
lgs
divl
nop
imul
ret
jbe
push
add
mov
jbe
imul
fs
mov
pop
mov
jbe
scas
dec
scas
dec
nop
imul
imul
nop
mov
ss
cmp
imul
imul
imul
lds
repz
leave
ss
aam
mov
adc
or
lret
ss
in
or
nop
imul
imul
repz
jbe
pop
daa
push
ljmp
inc
jg
imul
imul
jae
jbe
sub
or
leave
ss
je
jbe
mov
jbe
xor
sub
lret
imul
ss
imul
fdivs
nop
imul
jns
ss
outsb
add
xor
imul
imul
nop
imul
sub
jbe
clc
mov
mov
leave
ljmp
repz
ss
sbb
dec
call
nop
imul
pop
or
dec
ss
rcll
add
ljmp
sti
imul
ss
leave
cmp
mov
inc
jge
call
nop
imul
movsl
or
ss
divb
nop
imul
or
sti
xor
jbe
repz
enter
std
push
nop
imul
imul
aam
nop
imul
or
fwait
je
jbe
sarb
sbb
mov
lret
mov
imul
lret
lret
ss
nop
imul
imul
nop
imul
imul
jb
ss
out
nop
imul
sahf
pop
repz
jbe
test
dec
nop
imul
nop
imul
insl
or
ss
imul
mov
mov
ljmp
repz
ss
cmp
sub
sti
jns
pop
hlt
jbe
cmp
imul
jbe
imul
imul
decb
ss
dec
sub
ss
fimull
dec
sub
imul
imul
fimuls
repz
imul
imul
ss
js
imul
ss
call
nop
imul
fimull
nop
imul
aad
jbe
cmp
xchg
or
nop
imul
testl
je
jbe
test
imul
pop
or
or
repz
jno
pop
or
nop
imul
sti
mov
jbe
lret
pushf
sti
inc
fucomip
fdivrs
nop
imul
fdivs
nop
imul
ss
nop
imul
imul
aam
nop
imul
pop
enter
nop
imul
jbe
aaa
repz
divb
jbe
pusha
push
add
nop
imul
fs
stc
or
ss
pop
ss
xor
sbb
cmp
ss
nop
xor
imul
repz
jbe
jbe
inc
iret
mov
pop
nop
imul
or
divb
lret
in
mov
pop
sbb
loopne
arpl
push
dec
ss
icebp
nop
imul
imul
aam
jbe
xor
mov
ss
leave
ss
add
nop
imul
xor
jbe
jbe
ror
ss
jmp
nop
imul
adc
nop
imul
mov
imul
pushl
jbe
addl
imul
and
cmp
imul
nop
imul
xor
mov
jbe
push
mov
mov
sub
add
nop
imul
repz
nop
imul
les
popa
cs
ljmp
imul
fcomip
jbe
repz
jbe
mov
leave
dec
nop
imul
imul
mov
imul
jbe
adc
add
lret
lret
xor
ficoms
jbe
fbstp
aaa
dec
ss
hlt
ljmp
repz
mov
jbe
out
or
push
mov
mov
ss
in
outsl
daa
ljmp
xor
or
ss
sub
nop
imul
jbe
imul
nop
imul
mov
add
fxch
ss
dec
dec
rcll
nop
imul
imul
jns
call
nop
imul
pop
add
push
mov
jbe
sub
xor
ss
ss
lret
ss
or
or
sbb
sti
popf
jae
andl
shr
aaa
nop
imul
fimuls
xor
cltd
das
xchg
nop
imul
dec
movsb
leave
nop
imul
jmp
repz
jbe
pop
out
add
adc
or
lret
jo
jne
imul
fdivs
imul
nop
imul
fdivs
ss
push
enter
dec
or
xor
sti
loop
aas
mov
jbe
decb
fsubrl
imul
sti
and
jbe
jbe
imul
xchg
ss
rclb
stc
ljmp
imul
repz
jbe
lds
stos
xor
sti
imul
nop
imul
adc
dec
mov
nop
imul
or
ss
push
nop
imul
push
lret
ss
or
xchg
in
adc
or
ds
jbe
nop
imul
aam
xor
dec
ss
push
mov
inc
jnp
imul
call
nop
imul
nop
enter
mov
nop
imul
ss
ss
imul
imul
imul
aaa
enter
ss
andl
sti
nop
stos
xor
mov
imul
mov
imul
sti
shlb
jbe
nop
imul
jmp
mov
sub
pop
repz
or
sbb
add
adc
or
nop
imul
es
imul
imul
adc
xor
in
imul
imul
fmuls
nop
imul
xor
mov
xor
push
cmp
cwtl
nop
imul
nop
imul
jbe
imul
bound
ss
xchg
xor
nop
imul
es
imul
imul
push
adc
out
jb
xor
mov
fimull
repz
divl
cltd
jne
xor
imul
aas
xchg
sbb
sub
ss
dec
int
cmp
dec
sub
jbe
nop
imul
sti
nop
imul
jne
jbe
repz
mov
ss
mov
in
imul
sbb
add
nop
imul
fdivrs
jbe
xchg
xchg
cmpsl
nop
imul
mov
sti
nop
imul
nop
xor
dec
mov
stos
push
or
fnsave
lret
mov
ss
cmpsb
jns
push
out
ljmp
sti
repz
pop
fwait
lea
imul
or
jbe
mov
aas
imul
nop
imul
imul
icebp
divl
or
xchg
pop
or
sbb
es
imul
nop
imul
sbb
sti
xor
divb
mov
or
repz
enter
adcb
imul
adc
fldt
sbb
ss
imul
xor
popf
lret
sbb
clc
or
xor
ss
ljmp
nop
imul
jge
ss
or
sti
xor
ss
sti
dec
loop
cmp
nop
imul
jl
jbe
sub
cmpsb
stos
ljmp
imul
jbe
aam
or
dec
call
repz
ss
repnz
sti
ljmp
repz
divb
mov
ljmpw
std
stc
mov
ss
mov
push
xrelease
ss
imul
cld
ss
imul
xor
ss
sbb
pop
nop
imul
fmuls
repz
fsubr
adc
or
ss
call
nop
imul
imul
daa
or
ss
call
sti
dec
test
repz
jbe
inc
repz
adc
add
ss
imul
popf
or
nop
imul
cltd
or
ss
sub
fidivs
sti
xchg
ss
imul
fdivs
jbe
jo
adc
or
xor
ss
imul
push
or
xor
dec
ss
push
aad
bound
push
nop
imul
stc
mov
jbe
push
loope
in
ljmp
repz
jbe
and
in
mov
push
ljmp
nop
imul
imul
xor
mov
ss
cmp
push
nop
imul
fdivs
jbe
jp
sahf
or
xor
adc
or
add
push
out
repz
ja
jbe
or
imul
ljmp
jbe
or
inc
lret
ss
ljmp
jbe
xor
in
lds
adc
pop
lret
ss
imul
ret
lods
pop
repz
jbe
vpor
adc
or
repz
jbe
adc
rcr
xchg
jp
imul
mov
sti
nop
imul
testb
pop
push
nop
imul
fmuls
dec
call
xor
mov
jbe
or
pop
push
or
imul
cmp
imul
imul
fdivs
xor
test
ljmp
leave
ss
cmpsb
dec
push
pop
nop
imul
addr16
jbe
mov
imul
nop
imul
or
popa
mov
ss
lock
nop
imul
fidivs
nop
imul
and
ljmp
jmp
es
imul
jmp
dec
sub
bnd
repz
mov
inc
mov
call
dec
es
jbe
js
ja
ljmp
fdiv
jo
jbe
cmc
sar
mov
xchg
lock
nop
imul
test
jbe
add
fdivl
jbe
repz
or
ss
js
shlb
adc
add
ss
imul
pop
or
cmp
lahf
inc
sub
inc
sti
nop
imul
nop
cmc
jbe
nop
imul
bnd
jbe
mov
lea
nop
imul
fdivrs
nop
imul
push
jbe
xor
xor
in
mov
jbe
std
aam
repz
or
ss
pminsw
add
sti
mov
sti
nop
imul
repz
ja
jbe
cmp
xor
imul
adc
imul
imul
imul
mov
enter
aam
lret
sti
imul
sti
xrelease
jbe
imul
add
jbe
jle
and
mov
sti
imul
repz
jbe
dec
dec
pop
imul
nop
imul
mov
jbe
xchg
and
or
mov
sti
repz
fcompl
push
shr
adc
or
add
nop
imul
loopne
jbe
das
mov
nop
imul
mov
xor
ficoms
imul
nop
imul
in
adc
imul
pop
dec
ss
jbe
dec
inc
jle
sti
mov
sti
nop
imul
imul
xchg
leave
ss
fsubr
adc
or
nop
imul
fimull
nop
imul
jg
lret
mov
jbe
icebp
push
mov
jge
nop
imul
fdivs
repz
and
icebp
xor
or
nop
imul
adc
jbe
jnp
adc
imul
mov
jbe
nop
imul
imul
mov
jbe
jb
adc
imul
imul
cmp
repz
ja
jbe
jge
icebp
nop
imul
imul
nop
imul
imul
loop
jbe
xor
jge
nop
imul
nop
imul
ss
call
repz
cmp
xchg
ljmp
sti
dec
call
xor
jne
jbe
js
mov
imul
mov
sti
repz
hlt
jbe
mov
ret
add
nop
imul
pop
bnd
cmp
mov
or
or
mov
jbe
bsf
pop
bnd
repz
ja
jbe
dec
xchg
rclb
sti
nop
imul
cmp
adc
adc
or
sub
imul
pop
or
bnd
ret
mov
sbb
adc
or
aaa
mov
jbe
imul
imul
inc
jbe
jbe
imul
jbe
xlat
sbb
sub
sti
imul
nop
imul
or
repz
jae
jbe
push
sub
adc
or
xor
imul
fmuls
nop
imul
fdivs
pushf
enter
in
les
sti
repz
ss
push
cmp
adc
or
sti
adc
push
ss
imul
fdivs
and
jbe
stos
xchg
cmc
ljmp
adc
ss
xor
ss
xor
lds
push
cwtl
in
dec
call
nop
imul
fdivs
nop
imul
add
cmp
ljmp
inc
xor
xor
mov
mov
ljmp
sti
ljmp
repz
jbe
adc
nop
imul
imul
dec
xor
shlb
or
nop
imul
mov
sti
nop
imul
or
ss
ss
std
nop
imul
push
pop
nop
imul
sbb
nop
imul
push
jae
jbe
jmp
cmp
imul
in
adc
ljmp
repz
jbe
int3
loop
ljmp
imul
fimull
repz
jbe
inc
sarl
popa
into
and
adc
or
sti
push
repz
mov
jbe
inc
pop
push
fs
nop
imul
fdivs
imul
repz
jbe
rorb
pop
nop
imul
nop
imul
pop
divb
xor
jbe
cmp
and
mov
jbe
imul
hlt
jbe
jns
add
adc
or
or
nop
imul
insb
divl
push
xchg
outsl
mov
ss
aaa
xor
jbe
sbb
sti
imul
cmp
jbe
pop
rorb
mov
xor
imul
movsl
jae
jbe
lods
gs
fsubrl
xor
jbe
jbe
mov
or
imul
fidivl
repz
insl
mov
dec
ljmp
ss
imul
outsl
repz
sub
popa
ljmp
repz
cltd
mov
nop
imul
daa
fwait
push
sahf
call
adc
or
jo
dec
nop
imul
stc
xor
jae
notb
pop
pushf
xor
jne
jbe
out
push
lret
nop
imul
cmp
jbe
jbe
push
loopne
imul
imul
nop
imul
or
mov
jbe
cmp
nop
imul
xor
repz
jb
jbe
mov
adc
or
xor
jbe
or
and
nop
imul
outsl
je
jbe
imul
xor
cmpsb
mov
imul
aam
jbe
aas
xor
hlt
jbe
imul
nop
imul
aam
repz
jbe
adc
push
jnp
ljmp
nop
imul
aam
jbe
xor
repz
jbe
stc
loope
nop
imul
push
adc
imul
mov
xor
mov
call
clc
nop
imul
fcomi
jbe
push
sbb
ljmp
xor
jp
ljmp
xor
ss
negb
nop
imul
mov
pusha
mov
daa
nop
imul
imul
pop
psllq
xlat
sub
imulb
nop
imul
imul
imul
cmp
jbe
mov
ljmp
imul
call
imul
es
repz
mov
add
nop
imul
ret
leave
ss
frstor
roll
imul
sahf
pop
sti
mov
ja
jbe
addr16
fs
fdivrs
nop
imul
cmp
jbe
jae
sub
repnz
xor
fwait
repz
insl
rorl
dec
ljmp
imul
fdivrs
imul
shlb
dec
ljmp
repz
jbe
arpl
mov
or
nop
imul
jbe
imul
mov
add
jo
jbe
or
leave
ss
imul
ret
lods
pop
data16
and
cmc
jbe
xchg
loop
mov
sti
nop
imul
jbe
jbe
cwtl
mov
fwait
ljmp
imul
out
jb
jbe
out
xchg
insl
and
nop
imul
dec
leave
ss
xchg
imul
inc
or
loopne
arpl
clc
ss
imul
aam
pop
test
repz
mov
jbe
push
int
nop
imul
fimuls
repz
mov
pop
nop
imul
imul
mov
jge
and
jo
jbe
xchg
jne
jbe
daa
adc
adc
or
or
jb
jbe
imul
repz
jb
jbe
cmp
lea
ljmp
imul
cmp
and
jbe
sub
cmp
pop
cld
sbb
icebp
xor
nop
imul
xor
jbe
fadds
and
imul
jmp
jbe
nop
imul
dec
bnd
shll
jmp
jge
ljmp
sub
mov
jbe
imul
xchg
psllq
adc
ret
imul
imul
xor
mov
nop
imul
fdivs
ss
imul
imul
push
repz
jbe
call
imul
jb
jbe
nop
imul
imul
fdivs
repz
pop
enter
adc
in
jbe
nop
imul
xchg
divl
rep
aaa
jbe
jns
add
imul
fimuls
nop
imul
imul
les
jbe
enter
jmp
adc
mov
call
sub
push
sar
xor
sub
shr
sar
call
mov
shr
ja
out
xor
mov
sbb
jmp
push
fisubl
test
or
or
rcr
sub
jmp
cltd
lahf
mov
dec
ror
jmp
rcrl
std
test
and
mov
adc
sbb
rol
jmp
push
dec
std
mov
and
call
sti
cmp
push
push
in
outsl
shr
ror
cmp
jne
mov
fs
shr
shr
sub
cmp
jne
pop
sub
lea
rcr
call
lea
out
lock
call
fwait
jp
jns
icebp
and
ret
jp
mov
rol
shl
sub
cmp
jne
int
lret
testl
push
pop
jne
xchg
cltd
dec
adc
sar
sar
inc
call
or
rorl
mov
pop
rol
and
cmp
jne
int3
sbb
lock
test
sar
shl
and
jmp
xor
sbb
test
shl
lea
xor
cmp
jne
pop
mov
xlat
inc
cs
sub
and
cmp
jne
fdivrs
clc
in
inc
inc
lea
adc
add
rol
rcr
jmp
jl
jmp
fiaddl
dec
sbb
jmp
or
or
std
cmp
stc
inc
loopne
test
lcall
and
neg
dec
adc
inc
call
mov
fadd
les
test
shl
not
rol
cmp
jne
inc
inc
mov
test
neg
add
add
call
add
icebp
jns
shl
or
shl
cmp
jne
push
repnz
neg
cmp
cmp
rol
call
gs
ljmp
add
push
push
or
std
ror
mov
shl
cmp
jne
in
xor
lea
xor
xor
call
add
and
xor
and
rcl
or
rol
cmp
jne
xchg
cmp
jne
je
adc
pusha
shl
and
inc
cmp
jne
cmp
lcall
ret
jo
shl
ror
jmp
pop
jae
je
sti
js
xor
or
mov
call
adc
xor
mov
sbb
add
ror
cmp
jne
pop
sub
lea
or
sub
add
dec
and
cmp
jne
iret
dec
rolb
or
fiadds
out
int3
rcl
jmp
mov
std
rol
rcl
call
out
cmp
not
lret
lea
shr
shr
sub
ror
not
cmp
jne
std
test
fs
adc
jmp
sahf
outsb
jmp
xchg
mov
test
rcr
rcl
rcr
jmp
fs
lea
and
jmp
lcall
xor
sar
ror
sbb
sub
cmp
jne
outsb
mov
ror
cmp
jne
xor
not
call
mov
mov
add
fsubr
stc
add
add
xchg
jo
sbb
sbb
test
jmp
and
jb
xlat
shl
rcr
rol
ror
or
cmp
jne
pop
xor
adc
lret
adc
rcr
add
sar
cmp
jne
add
dec
or
rol
neg
call
or
mov
fs
push
cmp
jne
in
shr
orb
adc
fisubs
clc
call
bound
faddp
lock
rcl
mov
call
jge
mov
lea
xor
rcl
shl
cmp
call
cwtl
push
cmpsb
shl
ror
rcr
rcl
dec
not
cmp
jne
jb
gs
sbb
neg
mov
jmp
testb
push
or
xor
jmp
out
fwait
das
cmp
shl
and
call
adc
and
lret
out
loopne
jmp
jmp
fsts
and
ret
or
or
cmp
jne
sti
arpl
add
rol
jmp
add
shr
or
sub
shl
mov
cmp
jne
ljmp
lea
or
neg
rcl
adc
call
xchg
adc
or
not
ror
add
test
call
cltd
inc
jae
daa
rorl
test
not
add
cmp
jne
loope,pt
rcr
fsub
rol
shl
cmp
jne
rolb
and
dec
and
add
dec
shl
jmp
xor
in
clc
lea
rcr
shl
jmp
mov
inc
sub
or
and
adc
cmp
jne
and
test
add
cli
push
cmp
jne
push
xchg
inc
xor
xor
and
dec
jmp
mov
dec
lea
rcl
test
or
rcr
shl
call
pop
mov
rol
shl
add
and
xor
jmp
add
cmp
mov
shr
cmp
jne
ds
leave
mov
inc
mull
ret
and
ror
sbb
call
lret
fsubrs
lea
adc
rol
call
adc
mov
mov
pop
not
jmp
adc
xor
sbb
sbb
rcr
cmp
jne
test
inc
or
dec
cmp
jne
push
aas
lcall
sar
and
ror
shl
mov
cmp
jne
scas
inc
add
cli
and
jmp
jl
out
cmp
sbb
jmp
stos
sbb
popf
mov
ror
sub
and
test
jmp
xor
and
add
mov
shl
jmp
sub
ret
mov
int
rcl
adc
and
sub
cmp
jne
sub
aam
loope
int3
shlb
lea
xor
test
xor
cmp
jne
sub
lret
fiadds
fists
test
rcl
or
call
fcmovnb
jne
imul
leave
cmp
jne
lea
test
test
sbb
and
call
mov
and
stc
sar
sub
shr
ror
shl
cmp
jne
lea
loope
jnp
add
shr
test
rcr
ror
jmp
clc
iret
or
test
neg
shl
rol
ror
call
jl
add
add
movb
sar
adc
sub
jmp
lods
inc
test
and
not
add
sub
shl
xor
cmp
jne
mov
dec
lock
shr
add
rol
sar
ror
jmp
xchg
jle
shr
shl
shl
add
shl
sbb
jmp
or
mov
neg
rcl
and
shr
cmp
jne
cld
cmpsb
dec
