pop
cmp
mov
sbb
or
pusha
xor
add
mov
add
jno
mov
int3
test
and
movsb
outsl
inc
sbbb
fcmovnb
aaa
cmp
mov
into
adc
daa
pop
or
sbb
xor
inc
xor
add
add
adc
lret
inc
rorb
test
inc
push
subb
xor
sbb
jnp
or
xor
push
push
push
sbb
mov
or
scas
sbb
cmp
adc
and
sbb
push
inc
mov
jecxz
mov
sahf
mov
mov
adc
popa
das
es
ret
sbb
push
adc
loope
popf
orl
mov
sub
inc
ja
sub
pop
mov
xchg
xor
adc
dec
xor
or
mov
enter
and
test
pop
mov
out
pop
mov
mov
cmp
jno
push
xor
pop
imul
andl
sbb
and
das
push
mov
movsl
add
test
sub
inc
popa
jg
aad
cmpb
add
hlt
mov
scas
or
adc
hlt
repz
xlat
in
sub
mov
sbb
int
aaa
hlt
jge
mov
hlt
mov
mov
addb
mov
scas
es
push
mov
xor
push
clc
pop
xchg
or
je
out
out
scas
push
aad
push
mov
test
inc
loop
bound
mov
into
cld
dec
inc
xor
stos
push
mov
xchg
jmp
out
out
xor
repz
push
mov
and
call
adc
addl
gs
push
dec
stos
adc
test
pop
add
pop
test
dec
cmp
xor
iret
mov
cmpsl
jl
xor
test
or
cmpb
dec
add
inc
mov
cmpl
mov
cmp
dec
in
js
mov
stos
adc
mov
and
adcb
cmp
cmpb
int
test
mov
jns
jl
jo
inc
fdiv
call
mov
inc
aad
cmp
inc
stos
cmp
dec
cmp
dec
push
filds
sub
push
cmp
push
jae
jp
leave
test
insl
lock
mov
xor
mov
and
loop
mov
push
aaa
and
out
push
or
push
rorl
into
popa
jge
stc
or
out
hlt
or
or
jecxz
xor
inc
sti
mov
das
or
xor
mov
and
loop
push
xchg
rorb
sub
add
or
ds
mov
sbb
mov
int3
inc
test
mov
inc
adc
mov
out
mov
mov
inc
sbb
or
jne
jnp
je
mov
sbb
andl
push
add
mov
jmp
xor
sbb
or
cmpsb
cmp
xor
imul
adc
or
xchg
iret
sub
or
jae
lods
loop
loopne
aam
scas
xchg
inc
or
sub
daa
dec
mov
les
push
xor
adc
push
dec
add
xor
mov
movb
popa
mov
and
push
mov
and
cmp
xor
mov
pop
lds
sahf
cwtl
aaa
enter
adc
lds
inc
addl
cmpsl
sub
adc
insb
pop
mov
adcb
popa
sbb
and
cmp
andb
inc
dec
adc
pop
cltd
add
xlat
xchg
mov
sub
push
rcll
rorl
push
bound
push
push
xchg
pop
jmp
xchg
lret
shrb
sbb
pushf
mov
push
xchg
pop
ret
test
xchg
movsl
or
and
xchg
inc
push
push
add
sub
int
mov
cwtl
cmp
mov
rcll
mov
aaa
lcall
dec
dec
cmp
test
xor
inc
pop
xchg
adc
cwtl
idiv
repnz
lret
mov
push
in
inc
shll
fs
das
imul
mov
shlb
popf
dec
xor
sarl
imul
inc
mov
inc
xor
in
orb
cmp
and
loope
sbb
enter
sarb
or
pop
loope
mov
mull
inc
jne
xor
cmp
cltd
xchg
pop
jbe
mov
and
xor
inc
icebp
push
fisubrs
rcrl
and
sbb
cmc
mov
xor
mov
xchg
and
xchg
enter
and
lcall
loope
add
and
cmp
in
jmp
pop
shlb
or
mov
push
daa
lock
int
pop
movsl
mov
add
pop
dec
push
cmpl
push
sbbl
ret
mov
xchg
cmpsl
inc
lcall
into
bound
xor
xchg
xor
fwait
arpl
mov
aas
test
mov
add
lea
loop
loopne
push
jne
cmc
jb
lret
mov
mov
arpl
inc
ret
sbb
mov
push
test
inc
push
aad
icebp
or
jle
and
inc
or
jno
jae
pop
inc
and
das
sub
jne
imul
and
daa
xchg
mov
add
movsl
cmp
test
mov
and
xor
add
lds
mov
sbb
sti
dec
adc
dec
fnstcw
fimuls
xor
sbb
dec
xchg
stos
dec
sbb
addl
inc
push
jae
outsl
pop
jp
movsl
push
pop
cltd
std
mov
aas
sbb
and
dec
imul
adc
jle
fcmovnbe
pop
push
xor
pop
jmp
adc
loope
ljmp
mov
cmc
cmpl
popa
fcmove
inc
pop
push
pushl
push
mov
adc
dec
fisubrl
xchg
sbb
lock
ljmp
dec
popw
aad
push
inc
and
movlps
dec
xchg
in
lcall
pop
push
sbb
pop
jecxz
mov
aam
or
xchg
jmp
pop
pop
dec
pusha
mov
test
inc
mov
cmpsl
and
in
push
mov
mov
lret
push
lds
sub
test
pop
out
das
arpl
fsincos
sub
add
adc
stc
push
inc
jno
sub
mov
pusha
xor
cmp
xorps
or
xchg
repnz
mov
mov
test
push
rolb
dec
imul
test
pop
dec
adc
or
out
das
add
jge
mov
inc
add
pop
nop
cmp
push
out
mov
mov
jno
lret
inc
shl
mov
push
mov
xorb
push
fisubrl
sub
xor
gs
fwait
cmp
lds
bound
pop
cmp
enter
adc
scas
arpl
mov
add
pop
aad
xchg
cwtl
scas
out
xor
jo
imul
cmp
rorb
cwtl
xor
outsb
mov
and
cs
pop
jne
std
in
push
add
jns
out
mov
xor
pop
adc
xchg
addr16
dec
sub
or
rolb
mov
xchg
scas
sbb
pop
xchg
rorl
rorb
add
xor
sbb
xchg
push
inc
psubb
cmp
int
cmpsb
jecxz
jnp
jp
dec
cmp
lock
scas
mov
sahf
inc
xchg
xchg
inc
cmp
inc
cs
scas
cli
ds
mov
arpl
xchg
dec
insl
pusha
mov
outsb
fisttpl
fs
lods
mov
pusha
mov
or
inc
roll
or
jne
push
imul
and
inc
xchg
or
test
xchg
ret
leave
xor
xchg
out
jge
nop
repz
test
xchg
daa
dec
push
sub
out
and
aaa
jns
and
push
sbb
add
mov
mov
push
in
inc
leave
or
cwtl
fidivl
out
add
or
add
sbb
xchg
roll
mov
je
xchg
test
mov
pushf
stos
cmp
or
mov
sub
inc
jmp
aaa
idivl
xchg
inc
inc
test
mov
mov
test
and
fistps
aad
xor
cwtl
mov
in
sub
xchg
lahf
xchg
insl
mov
xchg
fwait
dec
and
pop
loopne
mov
pushf
push
or
and
gs
and
flds
lret
orl
adc
sub
add
xor
pushf
jae
movl
inc
inc
pop
push
enter
dec
test
xchg
add
movsl
lcall
add
repz
add
push
add
lahf
decb
pop
rcrl
inc
out
into
inc
jl
lds
fucomp
jp
lret
sub
adc
sbb
mul
jmp
adc
push
and
arpl
insl
pop
mov
inc
mov
mulb
xor
mov
sbb
out
dec
scas
inc
inc
pop
sbb
mov
loopne
fs
sbb
jge
and
jecxz
aad
aas
sbb
sub
inc
or
icebp
sbb
popa
rcll
mov
xchg
fcompl
test
xchg
inc
xchg
inc
mov
push
cmpsl
jmp
jb
in
xchg
xor
rorl
and
push
xchg
addr16
inc
xor
fs
sbb
push
lods
mov
and
inc
jecxz
sti
cmp
sub
nop
subb
pop
sub
inc
icebp
enter
loopne
dec
imul
xchg
jmp
ret
adc
inc
and
loope
mov
xchg
dec
and
ljmp
mov
cmp
nop
dec
iret
sub
jge
test
mov
and
fcom
out
dec
andb
out
cmp
mov
xor
or
aad
mov
and
inc
pop
mov
das
test
xchg
adc
or
test
xchg
push
sti
push
icebp
add
movsb
sarl
dec
ret
stos
and
jmp
push
adc
nop
out
sub
scas
cmp
dec
repnz
out
xor
les
sub
imul
stc
or
mov
and
lea
push
inc
outsw
test
sarb
add
cmpl
push
dec
inc
and
repnz
in
inc
xchg
and
std
stos
rcll
loopne
sub
loope
mov
cmp
sbb
adc
sub
lcall
xor
setno
or
cmc
inc
andl
xchg
sbbl
add
or
mov
inc
sarl
and
mov
adc
pop
mov
inc
je
or
mov
or
mov
fldenv
loopne
sbb
xor
mov
into
ds
dec
test
xchg
jp
adc
aad
icebp
mov
cmp
mov
stos
xor
lea
pop
rcl
ret
mov
leave
inc
mov
jne
add
jecxz
inc
inc
push
test
jo
sbb
test
or
jo
rolb
insb
push
adc
mov
inc
mov
mov
push
dec
xor
add
push
sar
cmpsl
cmpb
lds
mov
mov
mov
mov
adc
push
and
or
push
sahf
adc
cmp
jecxz
mov
mov
int
add
sahf
and
mov
jb
adc
jne
xor
das
in
add
leave
lret
addr16
pop
and
push
ds
mov
das
scas
add
out
ret
fmull
push
cmp
mov
or
clc
dec
xor
movsl
sub
xor
sub
mov
lret
or
inc
mov
lods
push
outsb
sti
add
sub
adcl
adc
xor
xchg
pop
pop
mov
adc
xor
pop
nop
xor
adc
xor
sbb
sbb
cmp
in
xchg
sub
test
mov
outsl
nop
cli
jne
inc
sub
xorb
movsl
mov
pop
lods
mov
inc
jecxz
mov
mov
sbb
mov
test
std
mov
push
dec
push
inc
clc
inc
or
sahf
adc
pop
dec
xchg
mov
xchg
ja
mov
mov
fistpl
outsl
adc
lods
cmpsb
les
push
mov
repnz
add
adc
push
mov
lea
orb
xor
dec
aad
mov
scas
sbb
repz
pushf
std
sub
xchg
rorb
inc
adc
rolb
stc
loop
insl
xchg
jo
sbb
mov
lahf
and
in
push
jne
stc
inc
fsubp
mov
aas
push
arpl
jne
orb
lret
shll
mov
push
jecxz
in
imul
pusha
dec
adc
out
sub
mov
pop
and
jo
mov
lods
inc
push
jmp
rolb
xor
outsl
test
test
adc
add
pop
daa
inc
jge
xor
add
inc
or
iret
adc
mov
das
add
xor
jmp
adc
xchg
fiaddl
call
pop
aad
adc
and
mov
xchg
stc
fwait
lea
inc
in
cmp
mov
push
xchg
adc
ret
repz
cltd
lock
push
mull
mov
mov
mov
outsb
out
subl
nop
jge
inc
adc
inc
pop
in
pushf
bound
mov
xorl
lds
jmp
roll
add
lea
pusha
mov
inc
lds
and
sub
jmp
push
xor
cmpsb
xchg
xchg
icebp
call
sub
jge
lcall
jl,pn
lahf
jae
cmp
sbb
jg
adcl
repz
jnp
imul
outsl
popa
dec
and
cmc
sbb
pop
loopne
xor
arpl
add
xchg
rorb
xor
and
xor
jge
rorl
jge
sub
inc
in
test
jle
cltd
movsl
mov
jno
in
push
rcr
mov
popa
adc
test
lcall
test
in
push
jo
or
adc
jno
stos
add
push
xchg
sbb
jno
jns
outsl
xchg
cwtl
or
mov
push
scas
inc
mov
and
sbb
pop
sbb
fs
and
cmp
loop
fidivl
es
dec
subl
aas
and
shlb
add
fildl
fistpl
sbb
jecxz
sub
sub
xor
out
das
cltd
or
aad
testb
mov
sahf
fstpl
test
pop
push
popa
pop
mov
nop
out
sbb
xchg
lea
adc
cmp
xchg
or
insl
adc
test
and
mov
mov
adc
outsb
stc
cmp
hlt
nop
fldl
js
out
pushf
rclb
mov
icebp
add
cld
cmp
xchg
dec
insl
and
pop
push
mov
jecxz
addl
roll
cwtl
adc
inc
add
out
insl
xchg
push
add
or
loopne
sub
lret
pop
mov
mov
or
jle
xchg
jg
jmp
fisubl
sub
or
mov
cli
dec
daa
mov
inc
or
inc
lret
loop
inc
mov
andl
fisubl
xor
xchg
cmp
mov
xchg
das
shrb
mov
bound
xchg
add
inc
xor
loop
or
xor
xor
push
les
xorb
dec
mov
add
shlb
xor
sbbb
jae
ret
dec
pop
movsl
push
adc
cmp
das
push
popa
insl
repnz
xchg
shl
loope
pop
and
ja
cmpsl
insb
jg
adc
cmp
inc
sub
icebp
cltd
or
movsb
add
adc
sub
and
outsl
xor
inc
ret
mov
xchg
and
rorl
mov
scas
pushf
mov
sti
lahf
sbb
daa
jno
sub
xor
or
add
adc
addb
jno
ja
jg
sahf
mov
dec
popl
call
test
daa
jecxz
xchg
and
dec
sbb
rol
or
inc
test
lret
dec
jnp
sub
adc
imul
rcrl
xor
scas
repnz
and
sbbb
scas
jge
pop
aad
pop
sub
rorb
jmp
cmp
sti
in
dec
mov
jne
mov
add
xor
loope
daa
adc
std
mov
adc
mull
stos
mov
adc
inc
lods
imul
or
dec
sbb
outsl
sub
ja
stos
push
cmp
clc
mov
mov
jns
sub
xchg
adc
adc
decl
jl
pop
sub
or
movsl
fidivl
enter
cli
out
inc
daa
mov
fs
les
rcll
xchg
in
mov
lea
std
cli
mov
xchg
das
movsl
xchg
push
outsb
jmp
daa
fidivrl
shlb
xchg
push
icebp
cltd
or
fwait
jne
push
mov
icebp
lock
inc
sbb
or
sbb
sbb
pop
aaa
adc
out
push
aas
adc
pand
and
inc
sbb
imul
sbb
mov
dec
les
imul
pop
xchg
scas
jae
lock
and
mov
into
cmpsl
data16
ja
push
mov
aas
arpl
dec
xor
ljmp
enter
and
in
xchg
mov
popa
xchg
mov
adc
adc
cs
sub
in
inc
add
push
sbb
dec
sub
pop
in
cmp
aam
rcrl
pop
popa
mov
std
fistps
lds
pop
inc
or
lods
popa
jno
aam
cltd
leave
popa
and
cld
mov
js
mov
movsl
adc
jns
sub
mov
or
pop
adc
push
inc
ljmp
imul
daa
dec
add
xchg
xor
push
dec
jle
rorl
xor
js
lds
adcb
cmovg
fisubrl
mov
adc
xor
jl
dec
gs
fbld
sub
test
mov
pusha
addl
ljmp
inc
push
add
cltd
pop
pop
cmp
add
cmpsl
sub
ret
add
xchg
imul
js
sbb
adc
push
imul
sbb
pop
jo
arpl
jno
sbb
push
mov
movsb
inc
les
orl
adc
cmp
nop
and
loope
pusha
xor
cltd
and
test
and
sub
or
pop
push
adc
les
adcb
adc
xchg
push
daa
dec
inc
sbb
les
dec
pop
cmp
or
jo
xor
inc
mov
imul
dec
in
or
xchg
movsl
add
popa
in
add
xchg
loop
sub
xchg
and
mov
mov
inc
scas
sbb
int3
fsubrs
jno
in
sti
sub
lret
rcrb
pop
inc
xor
inc
xorl
and
push
out
adc
sbb
int
sub
pop
mov
xchg
or
xor
mov
inc
popl
imul
mov
and
and
or
lret
inc
add
and
xor
and
icebp
lea
xorl
dec
inc
pop
xchg
xor
and
mov
pop
gs
or
sbb
xchg
iret
fisttpll
orb
pushf
sbb
fwait
stc
cmp
add
pop
in
dec
cwtl
sbb
subl
add
adcb
add
sbb
shr
or
and
addr16
outsb
rclb
push
aad
repnz
movsb
fs
ss
clc
sbb
jle
fmuls
int3
mov
add
sti
push
jp
mov
mov
es
pushf
pop
xor
mov
or
imull
adc
and
inc
mov
lret
xor
add
nop
dec
or
cmp
or
jmp
push
fmull
mov
pushf
lret
popa
jo
pop
stc
cmc
jbe
sub
int3
push
add
mov
pop
enter
pop
test
adc
and
ja
or
mov
and
cmp
add
imul
jne
mov
inc
addb
sub
mov
push
adc
lea
dec
pop
jmp
dec
sbb
mov
orb
loop
mov
mov
jae
jb
adc
into
in
cwtl
add
pop
notl
shll
int3
sbb
mov
mov
test
xchg
lret
jns
pop
or
mov
lods
imulb
fyl2x
xchg
pop
fdivr
pop
ljmp
pushf
cmp
xor
and
xchg
addl
and
sbb
cli
daa
movsl
add
inc
sub
mov
scas
jno
and
pop
lret
mov
inc
jnp
shrl
jno
sub
and
xorl
and
xor
dec
pop
ja
pop
mov
sbb
lds
jp
jge
add
cmp
pop
adc
push
les
aad
outsb
test
loopne
in
xchg
adc
out
push
test
hlt
pop
push
add
pop
in
xchg
arpl
or
dec
xchg
lcall
nop
iret
sub
movsl
push
hlt
int
mov
je
mov
movsb
xchg
fdiv
inc
imul
cmp
bound
inc
and
inc
xchg
sub
inc
aaa
cmp
pop
adc
mov
xchg
push
or
push
or
vmwrite
sub
jae
push
loope
dec
sbb
cmpsl
push
and
rcll
jmp
adc
repz
adc
and
inc
outsb
enter
gs
and
out
ror
movsl
test
adc
negl
xchg
cmp
int3
lods
sub
pop
add
test
nop
movsl
adc
loopne
test
pop
add
stos
inc
mov
movsb
ds
sub
add
sbb
div
sbb
dec
stos
sbb
add
sbb
dec
das
push
inc
mov
into
jo
sar
inc
mov
sarl
sbbl
adc
repz
pop
pusha
mov
inc
outsb
mov
dec
or
imul
adcb
lea
xor
lods
dec
mov
add
mov
push
push
mov
mov
mov
mov
lods
cmpl
or
cmpsl
inc
andl
ret
sub
stos
jb
pop
xchg
or
or
mov
test
mov
aam
addl
mov
cmp
dec
sbb
and
mov
push
fwait
and
hlt
test
sub
notb
int
or
fwait
popf
stc
inc
das
dec
test
divl
xchg
rcll
pop
pop
cmpsb
adc
inc
add
sbb
inc
insb
sub
jno
adc
in
rorl
lahf
and
outsl
xchg
push
cli
lahf
jns
jno
lcall
rcrb
jbe
jmp
getsec
dec
subl
jne
mov
ljmp
mov
test
das
sbb
add
push
sub
jp
aas
in
lds
xchg
fistps
pop
or
int
fcompl
sub
push
sub
dec
jb
jmp
and
clc
rcll
mov
aaa
daa
clc
sbb
adc
inc
pop
jo
mov
sbb
mov
lret
bound
bound
add
mov
sbb
fisttpl
rcrl
cmpsb
lods
xchg
rorb
xor
jnp
orl
cmpsb
pop
jb
adc
push
pop
push
push
push
aaa
push
cmp
lock
mov
test
lret
xor
rcrb
fucomip
lahf
lcall
stos
ljmp
xor
bound
or
jmp
inc
inc
mov
xlat
loope
sub
ja
push
imul
adc
sbb
adc
jp
loope
das
dec
xchg
and
push
out
xorb
mov
icebp
push
stos
xchg
test
push
add
push
mov
and
xor
cmp
add
add
or
dec
fwait
sub
gs
mov
adc
adc
loopne
push
pop
xor
add
or
push
cmp
jge
test
in
cmp
std
test
addb
adc
dec
or
arpl
xchg
cmpl
mov
push
add
add
test
dec
xor
roll
sub
test
mov
in
cmp
cmp
and
push
rorb
xor
daa
push
orb
ja
push
mov
into
ret
dec
push
in
aaa
outsl
xor
sar
xor
push
cltd
jg
orl
or
push
xor
push
test
inc
xor
push
orb
int
out
sbb
xor
add
ret
unpckhps
mov
mov
lds
or
sbb
icebp
fdivr
add
lcall
adc
cmp
push
bound
hlt
jae
inc
inc
icebp
das
or
shl
cld
call
xor
sahf
jno
adc
cmp
cmc
jae
or
xor
push
lock
pop
scas
mov
adc
pop
push
lret
inc
mov
adc
xchg
sub
lret
bound
xchg
sbb
dec
jmp
and
pop
or
mov
inc
pushf
divl
movsb
mov
nop
mov
orl
sub
add
inc
les
xor
iret
jns
lret
dec
and
movsb
arpl
add
or
stos
loop
pop
dec
jg
sub
les
xor
pop
xchg
cmp
xor
clc
ret
popa
int
test
ret
dec
push
cltd
cmp
rolb
cltd
pop
jns
aad
sub
dec
cmp
dec
shrb
ljmp
nop
dec
and
jmp
out
aaa
xchg
cmpsl
or
and
lds
add
das
xchg
movsb
and
and
inc
pop
sti
int
fbstp
cmpsb
mov
iret
mov
add
call
clc
adc
jbe
jmp
pop
inc
es
inc
pop
fstl
je
or
adc
inc
pop
pop
outsl
add
xchg
mov
and
push
inc
jmp
pop
daa
pop
jmp
pop
shll
xorb
pop
frstor
je
inc
mov
push
dec
xchg
fisttpll
in
jns
je
inc
pop
jmp
pop
push
je
fisubs
jecxz
jecxz
fs
pop
fnsave
je
shl
icebp
movsb
and
inc
pop
gs
pop
jmp
pop
jmp
pop
enter
frstor
mov
jmp
pop
inc
cs
fucom
jo
je
sbb
cmc
or
mov
inc
pop
jmp
pop
inc
push
test
inc
pop
fisttpll
inc
je
bound
dec
xchg
je
jmp
pop
shlb
mov
in
jmp
pop
rcrl
xor
jmp
pop
jmp
pop
fstl
je
cltd
into
test
cmc
dec
jecxz
fs
pop
frstor
mov
je
inc
pop
rcr
mov
je
mov
pop
push
push
jmp
pop
scas
jmp
pop
fucom
dec
je
shrb
mov
inc
pop
pop
sarl
dec
aad
data16
or
pop
shrl
je
subl
jecxz
fs
pop
js
inc
rcrl
js
js
and
pop
rcll
push
je
jmp
pop
jmp
pop
inc
outsl
shr
inc
pop
fucom
push
je
into
sub
je
inc
pop
enter
pop
js
js
daa
pop
adc
cmp
dec
fs
jmp
pop
jmp
sub
pop
jl
inc
pop
pushf
je
ja
movb
fs
pop
inc
sub
inc
pop
imul
je
mov
cmp
roll
jmp
pop
pop
cmp
inc
lods
je
jp
arpl
inc
pop
jmp
pop
jg
inc
pop
jmp
pop
roll
js
js
adc
out
jmp
pop
dec
outsl
add
inc
pop
fisttpll
je
inc
cmpsl
xchg
pop
sarl
fs
jmp
pop
js
jmp
pop
sarl
sbb
and
in
jmp
pop
inc
push
jmp
pop
fisttpll
je
sbb
mov
pop
jl
jmp
pop
fnstsw
je
cltd
pop
pop
jb
test
mov
je
jns
and
and
js
inc
pop
rcrl
shrl
mov
je
inc
pop
shr
fs
pop
pop
cltd
cmc
inc
mov
jmp
pop
inc
jae
jmp
pop
push
fstl
je
xchg
mov
jmp
pop
mov
fnsave
movsb
je
jmp
or
inc
pop
jmp
pop
fnsave
add
inc
jnp
jmp
pop
fnstsw
je
mov
es
jecxz
fs
jmp
pop
xor
dec
je
fnsave
push
lret
jecxz
fs
pop
js
adc
cs
fldl
gs
mov
inc
pop
jo
je
je
or
jae
movsl
loope
inc
pop
inc
arpl
push
fst
pusha
je
testb
mov
inc
shr
inc
pop
js
mov
jbe
je
mov
enter
je
jmp
pop
sar
inc
je
rcll
inc
pop
scas
inc
shrl
and
test
jmp
pop
shl
mov
jae
je
je
mov
sahf
jmp
pop
fstpl
inc
pop
sarl
gs
fs
xchg
jmp
pop
daa
jno
inc
pop
fldl
dec
je
dec
mov
jmp
pop
jmp
pop
inc
dec
push
jmp
pop
fisttpll
jo
xchg
sub
dec
je
jmp
pop
mov
dec
fstl
and
inc
movsl
jmp
pop
enter
inc
pop
push
pop
fisttpll
lods
je
daa
outsl
bound
inc
pop
push
out
and
inc
pop
and
roll
mov
je
fimuls
pop
lahf
fstpl
add
js
lock
push
xor
pop
add
fs
je
outsl
add
pop
push
es
mov
jle
pop
outsl
adc
inc
pop
fldl
je
adc
divl
sarl
je
jmp
pop
fstpl
lods
xor
jmp
pop
sar
lods
je
in
jp
ss
jecxz
fs
pop
jb
jo
inc
pop
fnsave
mov
mov
jecxz
rcrl
inc
pop
lds
call
iret
or
inc
pop
jmp
pop
pop
jns
je
test
je
jge
mov
jge
jmp
pop
jmp
pop
inc
cs
jmp
pop
fnsave
insb
je
mov
ja
jle
dec
jecxz
fs
pop
inc
push
inc
jmp
pop
fstl
xchg
or
jmp
pop
pop
or
inc
pop
jmp
pop
testl
lcall
pop
fucom
pop
je
xor
jmp
pop
inc
dec
shr
inc
pop
inc
jg
fstpl
adc
dec
enter
mov
jecxz
xchg
je
push
pslld
in
inc
push
mov
inc
pop
push
pop
fldl
je
fnsave
je
cmp
pop
xchg
pop
inc
in
jmp
pop
shll
in
gs
sub
pop
testl
add
push
fldl
je
pop
insl
xchg
inc
je
inc
pop
fldl
push
insb
or
in
jmp
pop
jg
inc
pop
fnstsw
add
js
adc
or
sub
shr
add
js
push
push
jmp
pop
inc
or
stos
shlb
setbe
push
in
dec
jecxz
fs
outsl
push
jmp
pop
fstl
mov
dec
std
jmp
pop
adc
js
rorl
je
mov
mov
inc
jmp
pop
inc
scas
mov
inc
pop
aas
lods
jmp
pop
fst
fs
sub
inc
sub
dec
jecxz
fs
pop
es
orl
fsubrl
mov
in
jb
je
lock
je
ds
push
cmpsl
jb
je
outsb
ret
je
inc
pop
enter
shrb
push
dec
jecxz
fstl
je
inc
pop
jmp
pop
fisttpll
mov
dec
jecxz
fs
push
shl
push
je
fnstsw
or
js
fmull
in
pop
dec
pop
mov
je
cs
fstp
js
js
sbb
dec
jecxz
fs
pop
inc
fnstsw
jbe
jg
inc
pop
rcrl
xor
dec
movsl
mov
jns
je
inc
pop
jmp
pop
scas
rorl
je
fsubl
jmp
pop
inc
movsb
fnsave
push
call
shl
fidivrs
or
rorl
dec
jecxz
fs
jmp
pop
inc
outsl
add
inc
pop
fstp
mov
je
jb
mov
fs
pop
fnsave
inc
je
pop
gs
lea
in
dec
mov
pop
mov
js
gs
je
repz
jecxz
fs
pop
fstpl
je
pusha
insl
lcall
je
je
inc
pop
inc
mov
inc
pop
dec
test
je
lret
push
je
fcmovne
je
xchg
dec
jecxz
fs
pop
fldl
inc
mov
sarl
jecxz
fs
inc
pop
dec
outsl
and
decb
je
dec
or
jecxz
fs
pop
rorl
sub
adc
and
je
jne
mov
fs
pop
daa
jno
inc
pop
shl
mov
je
fcompl
nop
cmp
jmp
pop
ret
pop
mov
mov
js
sub
add
xchg
ret
mov
js
sub
jmp
pop
inc
outsl
push
jmp
pop
push
movsb
je
je
sbb
dec
jecxz
pop
fnsave
mov
je
inc
pop
frstor
je
inc
xchg
incl
adc
js
jmp
pop
inc
daa
jmp
pop
fnstsw
je
fucomp
sbb
popa
mov
inc
jmp
pop
scas
inc
shll
shl
dec
je
leave
shrb
int
je
jmp
pop
fnstsw
push
je
jmp
pop
inc
mov
je
and
dec
jecxz
fs
pop
rorl
js
jmp
pop
mov
je
adcb
stos
rcr
dec
jecxz
fs
push
js
sbb
inc
pop
jmp
pop
inc
dec
push
ror
dec
je
ret
loopne
dec
adc
jmp
pop
mov
js
inc
pop
jmp
pop
shr
add
js
mov
dec
jecxz
fs
pop
shl
pop
je
jle
sbb
adc
jmp
pop
fisttpll
or
js
int
inc
mov
xchg
jge
push
jmp
pop
ret
pop
roll
inc
pop
ror
jo
je
pushf
add
outsb
jo
je
jmp
pop
js
and
cs
jmp
pop
jmp
dec
or
inc
pop
data16
pop
fstl
je
jecxz
test
gs
jmp
pop
fstl
pop
je
mov
loopne
dec
jecxz
fs
rorl
testl
pop
shll
add
js
jecxz
sub
jmp
pop
imul
shlb
xor
pusha
je
jmp
pop
shl
mov
sub
js
fstl
je
rolb
pop
frstor
js
jmp
pop
jmp
pop
xchg
roll
inc
xchg
jmp
pop
push
pop
shll
js
xchg
mov
dec
jecxz
fs
pop
jmp
sbb
je
mov
pop
dec
outsl
add
inc
pop
rcrl
and
dec
mov
inc
pop
push
dec
je
stc
sahf
xchg
and
dec
jecxz
fs
pop
jmp
pop
shll
adc
js
inc
pop
mov
je
dec
inc
bound
aam
sbb
js
inc
pop
js
jmp
pop
inc
outsl
add
push
mov
push
outsl
push
jmp
pop
testl
jne
pop
mov
pop
shll
js
ljmp
in
inc
rcll
push
sub
iret
lock
js
jmp
pop
jmp
adc
mov
inc
pop
dec
outsl
add
inc
pop
roll
jb
nop
mov
pop
dec
outsl
and
inc
pop
rcrl
je
scas
les
call
push
pop
js
mov
dec
mov
je
add
clc
mov
push
pop
mov
inc
pop
fldl
je
test
adc
push
dec
jmp
pop
inc
jae
jmp
pop
push
adc
js
bound
jle
data16
mov
je
inc
pop
push
push
je
je
mov
jb
je
outsb
rorl
fldenv
js
xor
sub
js
inc
pop
jmp
pop
push
pop
fstl
fistps
push
sbb
push
push
jmp
pop
jmp
pop
add
scas
push
pop
in
xchg
fnstsw
push
je
cmpsb
in
inc
jmp
pop
push
jmp
pop
fnsave
js
inc
fisubl
daa
jno
xor
js
jge
mov
fs
inc
pop
jle
inc
js
je
mov
js
sub
js
insb
lds
dec
jecxz
fs
pop
sbbb
pop
imul
je
and
xchg
jmp
pop
fnstsw
js
xor
jmp
pop
scas
inc
shr
pop
scas
jmp
pop
rorl
js
sbb
movswl
in
jmp
pop
push
fldl
je
fldl
xor
dec
jecxz
fs
pop
test
rorl
xchg
dec
jecxz
fs
pop
data16
pop
dec
pop
mov
je
push
adc
into
in
or
js
jmp
pop
inc
addr16
jmp
pop
push
sbb
js
mov
mov
daa
mov
je
cmp
inc
imul
inc
pop
jge
pop
jmp
pop
vmovddup
testl
mov
jns
int3
pop
gs
js
inc
pop
frstor
js
mov
ja
inc
pop
inc
insl
jmp
pop
jmp
pop
and
rol
push
je
data16
cmp
in
mov
adc
je
je
mov
and
xchg
mov
jne
je
in
push
cmp
jge
jmp
pop
jmp
pop
je
mov
je
das
shl
and
inc
pop
mov
inc
pop
gs
pop
fstpl
sub
js
ror
lods
xchg
dec
jmp
pop
jmp
pop
push
outsl
and
je
je
adc
js
xchg
jle
ss
mov
js
inc
pop
fucomp
xor
push
or
jmp
pop
frstor
xchg
por
mov
mov
je
or
js
pop
orl
pop
inc
fs
sarl
rorb
or
insb
or
js
inc
pop
pop
outsl
shr
inc
pop
jmp
pop
inc
outsl
rcr
test
pop
fidivs
jb
bound
inc
pop
fstp
inc
je
mov
push
push
jmp
pop
sub
jmp
pop
mov
xchg
jmp
pop
inc
mov
inc
cltd
jmp
pop
fstl
js
ret
dec
jae
jmp
pop
ror
push
je
into
jb
int
jmp
pop
pop
outsl
adc
inc
pop
fstp
and
js
dec
cmp
jmp
pop
pop
fst
insb
je
xchg
adc
mov
in
jmp
pop
jmp
pop
fstp
and
js
inc
pop
inc
pop
xor
shlb
js
mov
cltd
push
dec
jecxz
fs
pop
jmp
mov
cli
lahf
pop
stos
jmp
pop
jmp
pop
jg
inc
pop
jmp
pop
shll
adc
leave
jo
jmp
pop
mov
js
imul
popaw
and
inc
pop
shr
pusha
je
push
push
call
jmp
pop
js
mov
cs
or
js
fnsave
je
cmc
arpl
jecxz
fs
pop
inc
push
push
jmp
pop
shll
sbb
sub
xchg
std
out
dec
sbb
fs
je
bound
push
pop
mov
cs
fucom
push
jb
enter
in
pcmpeqb
je
roll
push
int
int
dec
gs
pop
fstpl
daa
mov
inc
pop
jmp
pop
scas
inc
sarl
js
js
mov
and
push
jmp
pop
cmp
inc
pop
fisttpll
je
mov
dec
jecxz
fs
pop
dec
int3
jmp
pop
enter
pop
ror
inc
je
lods
pop
push
jecxz
dec
jecxz
fs
loope
sarl
icebp
sarl
js
jmp
pop
ffree
sbb
js
xlat
fstps
jae
inc
pop
cmp
js
inc
pop
inc
imul
je
adc
insb
mov
inc
pop
popw
je
jns
js
clc
pop
xchg
sbb
ret
jmp
pop
push
pop
inc
jae
jmp
pop
fnstsw
repz
shll
je
outsl
shr
pop
rorl
mov
mov
in
inc
shll
shl
push
xor
in
jmp
pop
mov
inc
pop
dec
outsl
and
inc
pop
ffree
inc
js
mov
xchg
sarl
ret
movq
inc
pop
push
pop
jmp
pop
fnstsw
inc
pop
fstl
cmp
cltd
dec
jecxz
fs
inc
pop
sarl
shrl
inc
dec
jecxz
fs
pop
fucomp
adc
push
sbb
dec
jmp
pop
into
jmp
pop
fnstsw
mov
cmpb
jmp
pop
pop
outsl
push
frstor
clc
scas
jl
mov
roll
je
jmp
pop
inc
popl
xchg
frstor
js
mov
mov
jmp
pop
inc
xor
jmp
pop
roll
jbe
dec
jecxz
loope,pn
mov
incl
pop
lret
dec
xor
push
jmp
pop
dec
test
js
dec
inc
fstl
js
pusha
test
pop
and
jmp
pop
fnsave
or
jmp
pop
mov
pop
frstor
stos
hlt
dec
ds
mov
inc
mov
js
jnp
loope
fdivl
push
dec
je
pusha
imul
je
je
jmp
pop
rcr
jl
je
mov
jecxz
fs
outsl
adc
inc
pop
mov
inc
pop
dec
outsl
add
out
or
js
mov
in
rcrl
fstl
je
dec
out
pop
adc
jmp
pop
js
and
jge
je
jmp
pop
pop
outsl
sub
je
je
loop
push
sbb
in
jmp
pop
daa
jno
inc
pop
jmp
pop
fnstsw
jns
mov
inc
pop
pop
jns
je
inc
pop
jmp
pop
js
rcll
mov
mov
je
and
in
daa
jno
and
je
push
or
jmp
pop
jmp
pop
rcll
rorb
mov
jecxz
fs
cmp
je
orb
inc
pop
pop
add
test
inc
pop
jmp
pop
inc
cmpb
pop
jmp
pop
jmp
pop
fstp
pop
je
sbb
rcrl
pop
je
jmp
pop
cmpsl
shl
sub
js
sbb
js
aad
sub
or
js
inc
pop
ror
sbb
js
jp
adc
shr
inc
pop
fstpl
js
imul
push
decl
inc
pop
frstor
inc
pop
js
xor
js
adc
lea
adc
inc
shrl
sbb
test
jecxz
fs
inc
in
jmp
pop
mov
js
js
loop
imul
pop
dec
jecxz
fs
cmp
jmp
pop
mov
je
inc
pop
fnsave
cmpsb
rorl
in
jmp
pop
daa
jno
inc
pop
inc
dec
inc
jmp
pop
fldl
imul
dec
jecxz
fs
dec
add
inc
js
js
sub
outsb
lret
in
cli
jmp
pop
jecxz
nop
xor
fstp
push
je
movsl
fistps
rdpmc
rcll
pop
fstl
js
fucomp
push
je
lds
or
leave
or
in
cmpsl
stos
xchg
fisttpll
js
ds
scas
inc
mov
fs
inc
shll
mov
je
je
out
sbb
js
mov
jle
adc
je
jmp
pop
je
jmp
pop
mov
js
in
js
rcl
push
je
jmp
pop
rcr
or
and
int3
jmp
pop
mov
mov
je
pop
mov
inc
pop
xchg
fs
sahf
jo
je
mov
mov
in
jmp
pop
xchg
inc
pop
inc
dec
loope
jl,pt
je
pusha
je
xchg
aas
add
inc
pop
push
push
je
sbb
push
pop
js
and
xchg
je
dec
jae
iret
lods
mov
jecxz
fs
pop
inc
pop
shll
je
inc
pop
shrl
je
icebp
stos
movsl
cltd
cmc
push
dec
jecxz
fs
outsl
add
inc
pop
pop
rcll
adc
lods
pop
mov
je
inc
pop
inc
pop
rcrl
cmp
js
fwait
jae
sbb
push
inc
pop
fstl
je
lahf
loop
dec
jecxz
fs
dec
add
inc
pop
inc
popl
pop
daa
pop
fisttpll
js
int3
or
lea
mov
jns
je
inc
pop
jmp
pop
scas
inc
shll
fstpl
das
add
jecxz
cmpsl
stos
rorl
adc
inc
outsl
push
jmp
pop
pop
outsl
adc
inc
pop
frstor
push
es
es
mov
dec
pop
je
fnsave
push
mov
fmuls
in
jmp
pop
mov
js
sub
adc
dec
jecxz
fs
jns
je
inc
pop
jmp
pop
roll
in
arpl
jecxz
fs
pop
dec
scas
and
js
inc
pop
frstor
sarl
cmp
push
jmp
pop
fstl
and
js
sub
nop
jb
imul
je
inc
pop
frstor
pop
add
daa
gs
jecxz
fs
je
inc
pop
jmp
pop
fnstsw
je
jg
inc
jg
mov
js
jmp
pop
jg
push
lds
out
jo
inc
pop
jmp
pop
scas
inc
shll
or
movntq
out
dec
jecxz
fs
roll
sub
js
push
test
aaa
mov
jmp
pop
inc
outsl
inc
jmp
pop
cmp
mov
in
jmp
pop
pop
dec
loope
inc
pop
jmp
pop
js
loope
lea
xchg
push
dec
mov
jmp
pop
dec
pop
fst
sub
mov
xor
jmp
pop
jmp
pop
scas
fnstsw
je
mov
jmp
pop
lahf
jmp
pop
data16
inc
pop
pop
lds
dec
jecxz
fs
pop
popw
je
shr
pop
jmp
pop
fnstsw
sub
inc
pop
inc
inc
fs
pop
data16
sarl
mov
cmp
xchg
sarl
inc
pop
xchg
jmp
pop
fstpl
js
jns
mov
sub
inc
pop
inc
scas
icebp
jmp
pop
inc
outsl
mov
je
int3
outsb
data16
jmp
pop
mov
adc
or
or
js
inc
pop
and
jg
gs
je
mov
push
and
mov
jno
imul
mov
mov
sub
fwait
dec
jecxz
rcll
inc
pop
pop
outsl
icebp
shrl
js
push
or
inc
sbb
inc
pop
enter
pop
roll
sarl
call
push
mov
js
inc
pop
jmp
jl
je
mov
js
mov
movsb
dec
jecxz
fs
inc
pop
jmp
pop
js
inc
jmp
pop
frstor
js
mov
shlb
inc
pop
test
jmp
pop
lds
xlat
push
dec
fcoml
orl
mov
inc
pop
fstpl
je
xchg
loop,pn
out
aam
inc
pop
jmp
pop
fnsave
outsl
push
or
andl
pop
jmp
pop
jmp
pop
daa
pop
fnsave
js
jno
jge
cmp
js
inc
pop
data16
jmp
pop
pushw
inc
je
outsb
aad
js
fisttpll
sbb
js
sbb
shr
inc
pop
fnstsw
sub
add
pop
aaa
mov
fldl
js
jmp
pop
jl
je
xchg
arpl
jmp
pop
inc
dec
inc
jmp
pop
inc
scas
mov
inc
pop
fstl
xor
imul
js
jmp
pop
cmp
adc
je
jmp
pop
daa
mov
dec
rcl
mov
js
cmpsb
inc
or
dec
jecxz
fs
push
mov
js
inc
pop
xorb
fnstsw
loope
fwait
mov
dec
jecxz
rcrl
rcrl
js
jmp
pop
shrl
aam
cmp
es
js
and
cmp
dec
jecxz
fs
outsl
adc
inc
pop
mov
inc
pop
ror
int
js
push
cwtl
dec
jecxz
fs
loope
cs
fistl
js
sub
in
cmpsl
inc
jmp
pop
inc
es
fnstsw
js
lods
fsubs
xchg
jmp
pop
inc
dec
mov
stos
jo
je
cmp
jecxz
fs
outsl
push
jmp
pop
pop
outsl
and
inc
pop
inc
outsl
inc
xor
aad
aam
add
mov
js
jmp
pop
frstor
imul
inc
pop
shll
je
inc
pop
dec
outsl
adc
inc
pop
js
fdivs
jmp
pop
push
pop
inc
push
mov
lea
js
movsl
inc
inc
mov
js
inc
pop
daa
jno
inc
pop
sarl
inc
pop
fstl
js
leave
in
ja
jmp
dec
add
inc
pop
dec
outsb
and
js
inc
pop
pop
outsl
je
js
js
dec
les
jmp
pop
or
or
js
bound
mov
push
sub
js
jno
outsb
jb
js
jmp
pop
dec
jno
bound
sarl
ret
push
icebp
insb
imul
push
jmp
pop
fnsave
popa
nop
fsubrp
inc
pop
jmp
pop
scas
inc
shll
jmp
pop
fisttpll
or
mov
lods
insb
dec
lea
mov
inc
pop
jmp
pop
js
push
jmp
pop
rorl
or
js
mov
loop
inc
pop
fstpt
inc
pop
rcrl
shll
js
rcl
leave
js
cmp
and
jo
adc
js
inc
pop
sarl
xchg
push
outsb
in
xorb
pop
fnstsw
jo
cmp
dec
jecxz
fs
pop
rcr
adc
js
push
lea
ja
mov
inc
pop
testl
js
add
push
cmc
push
pop
outsl
xchg
jmp
pop
fstl
js
pop
sbb
inc
pop
mov
je
js
mov
sub
fstpt
inc
pop
rcrl
rcr
and
frstor
cmp
dec
dec
jecxz
fs
pop
fnstsw
adc
push
lods
mov
in
shrl
js
jmp
pop
jmp
pop
jmp
pop
shrl
icebp
jb
cwtl
mov
inc
pop
jg
sti
sbb
js
dec
inc
jnp
jmp
pop
jge
pop
jmp
pop
cmp
frstor
js
mov
add
popf
scas
inc
shll
cmpsl
frstor
js
fistpl
lret
das
je
je
jmp
pop
mov
cs
lods
and
jmp
pop
frstor
js
jmp
jecxz
fs
pop
jmp
pop
stos
jmp
pop
fucomp
or
inc
xor
imul
fs
pop
jmp
pop
xchg
jmp
pop
fstl
cmp
fucom
xor
js
mov
bnd
je
inc
pop
inc
mov
inc
pop
xor
add
addr16
mov
in
fnsave
js
frstor
js
inc
cwtl
movsl
cwtl
out
jecxz
fs
shll
push
add
movsb
ficoms
daa
test
inc
pop
jmp
pop
jmp
pop
loop
arpl
js
sub
rolb
js
inc
pop
roll
js
xor
fs
cs
mov
js
jmp
pop
jmp
pop
shll
test
jp
jecxz
fs
mov
js
repnz
jns
sub
jl
inc
pop
inc
xchg
pop
fnsave
add
js
jle
cld
sbb
jmp
pop
mov
jmp
pop
fisttpll
js
pop
xchg
cltd
dec
jecxz
fs
pop
pop
shll
js
xor
aas
mov
jecxz
fs
pop
pop
jmp
pop
inc
and
inc
pop
fisttpll
js
cmpsb
aam
icebp
jmp
pop
jmp
pop
fstpl
js
inc
in
les
in
jle
test
rcrl
leave
js
mov
jecxz
fs
jmp
pop
inc
push
fstpl
shlb
fldl
jp
scas
xor
pop
mov
mov
js
movsb
xor
inc
pop
push
pop
mov
and
js
frstor
arpl
sub
jmp
pop
data16
jmp
pop
roll
fnstcw
les
repnz
dec
jecxz
fs
push
xchg
jmp
pop
rol
sbb
mov
push
lahf
jmp
pop
imul
mov
adcl
rcrl
rcrl
sub
js
iret
sbb
js
jl
addr16
inc
pop
dec
sub
mov
js
cwtl
data16
and
fs
pop
fucom
jmp
sub
inc
pop
inc
inc
inc
jmp
pop
frstor
js
int
jo
out
aas
inc
shr
pop
jmp
pop
frstor
js
cmc
jbe
jns
jecxz
fs
je
inc
pop
jmp
pop
scas
rcrl
js
pop
jo
mov
inc
pop
js
mov
inc
pop
dec
outsl
adc
inc
pop
sarl
clc
jns
jns
je
inc
pop
fnstsw
adc
lret
negl
push
je
inc
pop
jmp
pop
scas
rorl
xor
sub
inc
pop
xor
xor
imul
js
sti
cmp
mov
pusha
jmp
pop
mov
inc
pop
rcrl
sarl
xorb
adc
inc
pop
jmp
aad
mov
jge
inc
jmp
pop
fisttpll
js
enter
dec
jecxz
cmpsl
fstl
js
out
mov
mov
jns
je
inc
pop
and
js
outsw
ret
jmp
pop
inc
cs
rorl
jnp
ret
xor
jmp
pop
dec
outsl
add
inc
pop
mov
and
js
cltd
mov
cmp
and
neg
inc
ror
jmp
mov
mov
inc
xorb
lret
adc
call
cmp
add
inc
push
lea
sub
ror
shr
sar
sbb
jmp
mov
jns
rcr
add
shr
adc
rol
call
dec
test
int
pop
mov
jecxz
fistpl
ror
rcr
rol
call
sar
adc
sbb
lcall
jecxz
test
les
rcl
scas
push
adc
and
sbb
or
sbb
sbb
sar
rcl
xor
not
cmp
jne
cmpsl
jp
push
sub
shl
shl
rol
cmp
jne
sbb
mov
rol
adc
cmp
jne
leave
and
dec
adc
shr
adc
adc
rcl
jmp
jns
cs
sbb
dec
xor
test
mov
adc
rcl
call
sahf
xchg
cmp
add
add
adc
shr
jmp
push
adcl
add
incl
xchg
test
or
fisttpll
xlat
imul
je
dec
add
call
jecxz
jle
rol
adc
jmp
bound
dec
shl
add
cmp
jne
clc
std
xchg
add
neg
jmp
imul
popf
adc
sar
sub
or
cmp
jne
add
jbe
test
sub
adc
shl
and
test
cmp
jne
nop
cmp
test
adc
add
or
and
shl
cmp
jne
fistpl
jmp
jno
rorb
enter
sbb
shl
shr
jmp
mov
add
sbb
out
sbb
ret
call
or
push
sbb
call
incl
lea
xor
rcr
sub
jmp
pop
lret
imul
lea
add
or
jmp
pushf
add
rcrl
icebp
or
shl
call
adc
iret
rol
shl
test
call
leave
xchg
and
add
jecxz
shl
mov
xor
jmp
xchg
mov
xchg
jge
fisttpl
out
jnp
in
adc
shl
jmp
cmp
and
mov
jmp
or
sub
neg
shl
shr
mov
cmp
jne
push
test
ljmp
rcr
and
shl
inc
call
rcrl
rcrl
jae
cli
sbb
jmp
push
fs
test
shl
shr
sar
call
inc
mov
fs
and
dec
test
call
pop
push
int3
pop
mov
add
int
or
sar
call
cmpsl
icebp
push
fiaddl
mov
mov
call
mov
inc
xchg
dec
dec
add
rcr
rcl
shl
adc
jmp
cmp
scas
lea
test
cmp
jne
xor
rol
rcr
cmp
jne
fnstenv
inc
mov
sar
xor
mov
call
adc
cld
jae
fs
shl
neg
dec
rol
call
add
lret
rol
cmp
test
and
call
xor
hlt
je
fistps
mov
xor
rcr
shl
jmp
mov
jae
fs
sbb
jmp
dec
pop
push
movsb
cmp
fs
dec
shl
sar
shr
rcr
jmp
and
and
sub
rol
add
cmp
jne
jbe
mov
neg
dec
neg
shl
call
repnz
mov
shr
shl
call
add
pusha
inc
lea
sub
xor
jmp
cltd
pop
aad
sahf
jo
lea
shr
inc
rcr
call
out
adc
aad
lea
test
shr
mov
call
das
push
jns
xchg
test
jmp
das
andl
lds
shll
roll
pop
jne
inc
je
jo
shr
rcl
rcl
cmp
jne
mov
in
mov
adc
roll
add
mov
test
mov
cmp
fs
adc
adc
rcl
rol
jmp
dec
adc
cltd
inc
out
je
mov
dec
call
rcrl
push
sar
add
ror
call
mov
fs
rcl
cmp
jne
lods
ds
into
lea
adc
neg
jmp
and
not
leave
cmp
jne
icebp
stos
sub
mov
cmp
and
jmp
cmp
int
lret
push
cwtl
js
dec
rcl
jmp
mov
es
shr
cmp
jne
pop
pop
pushf
lea
mov
cmp
jne
clc
push
mov
lea
shl
or
shl
cmp
jne
sbb
inc
adc
test
rol
jmp
fmull
mov
loope
shl
shr
test
sub
jmp
push
inc
aam
rcl
sar
not
rcl
mov
adc
call
popf
lock
jmp
jne
cmp
jne
popf
lods
loope
out
mov
adc
xlat
cli
add
shr
inc
jmp
inc
adc
add
test
call
mov
mov
daa
xor
rcl
cmp
jne
and
fsubr
out
aaa
push
rol
cmp
rol
cmp
jne
mov
js
xor
xor
shr
test
call
cltd
sbb
repz
int3
cmp
repnz
ror
call
fwait
addl
lea
neg
xor
or
call
xlat
cltd
js
xchg
adc
sbb
call
jge
andb
xchg
lea
rcl
rcr
shr
rcl
call
int3
xchg
aaa
sub
ret
and
shl
jmp
filds
add
int
cs
repz
call
cs
mulb
rol
inc
xor
call
cmp
push
ret
xor
fsubr
popw
add
fmull
not
ror
sbb
rcl
xor
call
and
repnz
jecxz
xor
call
pushf
jb
mov
sbb
rcr
and
jmp
xor
cltd
not
mov
shl
call
push
sub
dec
dec
inc
rcr
mov
jmp
out
mov
lea
test
mov
xor
shr
call
pop
loop
js
not
sub
ror
sbb
call
out
and
fs
and
mov
rol
shl
add
call
push
scas
lea
shl
sub
and
ror
jmp
jo
pop
mov
sub
xor
jmp
sbb
and
add
sar
mov
and
cmp
jne
movsl
jg
inc
add
sbb
sbb
add
adc
call
push
aad
loope
lahf
lea
rol
jmp
adc
leave
shl
dec
sub
rcr
and
and
call
jae
lahf
lea
sti
neg
inc
shl
not
call
mov
adc
shr
mov
shl
add
cmp
jmp
popf
adc
mov
psrld
rcl
dec
call
mov
movsb
lret
lea
adc
cmp
jne
mov
enter
rcr
not
add
rcr
cmp
jne
loope
pop
sbb
pop
adc
jmp
adc
xor
lea
add
inc
rcl
rcl
or
cmp
jne
pop
stos
shrb
imul
aaa
lds
out
push
sub
neg
cmp
jne
popa
cmp
lea
ror
cmp
jne
aad
ret
sub
adc
sar
cmpw
jmp
xchg
jp
lea
shl
sbb
xor
call
das
cmp
fs
adc
or
rol
cmp
jne
inc
pop
es
dec
sbb
xor
rcl
shl
not
rol
jmp
fstpt
sti
sbb
sub
rcl
shr
call
in
push
xor
test
shl
test
shr
mov
call
mov
add
movd
roll
mov
out
lods
jno
test
add
add
mov
out
or
rcl
sbb
call
jmp
sub
lea
mov
ror
call
xor
rol
ror
test
and
shr
rol
jmp
je
sbbl
or
adc
inc
xor
jmp
mov
lea
rcl
call
cmp
nop
repz
lea
or
sar
sub
call
mov
lret
inc
mov
shr
sar
xor
cmp
jne
sbb
inc
jne
adc
sbb
sub
test
jmp
lods
mov
fs
adc
rol
call
mov
inc
ror
shl
shl
shl
cmp
and
jmp
outsb
movsb
sbb
outsl
data16
sti
or
push
out
fcmovb
xlat
adc
jmp
inc
into
sub
jne
add
inc
not
cmp
jne
and
mov
sar
or
jmp
or
cmp
iret
paddd
cmp
jne
loope
or
and
inc
not
ror
mov
mov
jmp
sbb
fs
ror
shr
shl
cmp
jne
scas
and
imul
out
jge
jmp
push
mov
test
ror
mov
mov
cmp
jne
andl
xor
jae
flds
cmp
jne
mov
and
add
sar
not
add
jmp
std
dec
call
neg
or
sub
dec
adc
call
sti
iret
aad
jmp
cmp
fimuls
out
fadd
jecxz
call
cli
mov
lea
rcr
add
rcr
cmp
jne
pop
jmp
lea
and
or
inc
cmp
jne
popf
mov
jo
lea
mov
sar
or
jmp
dec
ja
rol
sbb
shr
not
test
cmp
cmp
jne
cmc
js
add
in
xor
cmp
jne
lods
mov
in
cmpsb
push
int3
lea
test
test
rcr
or
jmp
or
fisubs
fs
add
and
and
adc
not
jmp
jl
inc
add
add
aad
not
adc
or
not
cmp
jne
jb
push
lods
sbb
sti
shr
cmp
jne
xor
xchg
jg
fs
ret
cmp
jne
lods
pusha
scas
and
rcr
sbb
or
jmp
daa
pop
xor
rclb
and
rcr
dec
sub
cmp
jne
dec
lahf
outsl
pusha
fdivrs
fisubs
push
pushl
sbb
call
call
pusha
jmp
filds
fidivs
call
out
inc
adc
aas
idiv
aas
pop
sub
loope
jmp
and
adc
or
call
imul
inc
sub
jmp
push
and
addr16
push
mov
cli
cmp
jne
mov
or
filds
cli
lcall
mov
in
jae
rcl
rol
shl
call
fdivrs
or
ror
adc
shl
xor
call
rcrl
not
sar
ror
jmp
fsubrp
stos
jne
adc
sar
sbb
cmp
jne
mov
xchg
jmp
in
ror
mov
and
rcl
mov
call
adc
inc
lea
rcr
rcl
ror
jmp
push
adc
roll
stc
mov
mov
call
das
cmp
or
fs
shr
call
mov
sbb
rcl
cmp
jne
mov
add
shl
ror
sub
jmp
mov
and
fs
and
cmp
rcl
or
cmp
jne
scas
xchg
iret
sahf
sbb
or
sbb
rcl
rcr
call
pop
dec
pop
pop
in
jge
rcl
mov
and
cmp
jne
arpl
shl
shr
rcr
rol
sbb
call
jne
ds
test
leave
or
cs
call
lahf
pop
daa
jo
or
rcr
adc
cmp
jne
fchs
into
xor
rol
xor
call
and
sbb
dec
adc
mov
xor
xor
jmp
inc
popa
xchg
lea
xor
shl
sbb
cmp
jne
lock
pop
dec
fwait
dec
out
xor
rcl
cmp
jmp
mov
mov
add
pop
jmp
out
lea
rcr
ror
mov
dec
sub
cmp
jne
inc
aas
js
pushf
aam
out
cld
sar
call
leave
cmp
lea
sar
rol
call
lds
