dec
in
inc
pop
xor
cld
not
cmpsb
scas
sbb
movsb
inc
dec
fcoms
in
jne
sbb
in
sbb
mov
leavew
dec
loopne
test
pop
imul
jecxz
pop
mov
ret
push
jge
lret
mov
sub
jne
push
pop
jns
jns
adc
add
call
cmp
xor
or
loopne
cs
in
inc
xor
imul
jbe
xchg
mov
negl
int3
mov
loop
stos
fnsave
imul
sbb
cmpl
rcr
lods
dec
and
lret
out
inc
xor
jecxz
sti
mov
jae
mov
rolb
mov
push
jno
dec
outsb
push
movsb
movsl
cltd
lock
ja
addr16
stc
les
roll
inc
push
jb
add
test
jno
pop
xchg
out
outsb
repz
mov
pop
cmp
xchg
and
jae
jmp
sti
rcrb
aad
das
push
rclb
add
ret
cmpsb
inc
iret
xchg
scas
fcmovbe
mov
xor
ss
sahf
lods
mov
cwtl
mov
cli
xchg
cmpsb
cld
fiaddl
jbe
jecxz
mov
dec
jge
pop
add
dec
or
jge
jbe
push
and
ja
inc
push
ret
mov
pushf
push
lea
ja
rol
sbb
rol
sub
bsf
call
adc
jno
mov
mov
nop
or
movsb
sub
cmp
scas
fs
push
pushf
cmpsl
cmp
pop
test
xchg
mov
ds
in
loopne
jge
je
pop
icebp
jp
orl
inc
xor
in
es
sbb
pop
and
pushf
dec
xchg
sbb
test
rolb
mov
fs
addr16
call
or
pusha
lea
call
pusha
push
lea
jae
js
cmp
stc
sub
pushf
jmp
cmp
mov
call
cmpb
call
sub
hlt
push
pop
jno
adc
in
jmp
mov
lods
push
mov
jecxz
xchg
ss
push
xor
adc
iret
push
aad
out
outsb
std
lcall
pop
dec
inc
ds
xor
jo
pop
dec
test
cltd
cld
mov
sbb
loopne
cwtl
jb
xchg
add
aas
jnp
jns
or
sub
imul
jns
stos
pop
js
fs
outsb
ss
pop
jno
xchg
jnp
xchg
ja
mov
mov
test
sbb
test
inc
ret
pop
popw
call
mov
movsb
lds
adc
test
call
fstps
mov
lret
add
add
and
fs
jne
pushf
movb
call
jmp
push
push
push
pop
jno
hlt
push
lock
add
mov
push
cmp
adc
mov
lret
or
pshufw
sub
insb
sub
dec
pop
outsl
push
jl
outsl
lods
daa
rcr
data16
mov
lods
mov
sti
push
push
jg
pop
addr16
jo
es
jl
ss
lcall
popa
int
fisttps
dec
push
jge
in
movsb
xchg
aad
jae
shll
movsl
jnp,pt
imul
mov
xor
xlat
mov
cmp
push
sub
in
dec
mov
add
jns
out
std
or
mov
xor
insl
jbe
test
mov
movsb
fwait
pop
leave
orb
mov
inc
arpl
iret
or
sbb
enter
xchg
sahf
push
mov
or
add
pop
push
ja
inc
sbb
push
incb
stos
xchg
pop
jno
stc
jl
jo
mov
pusha
lds
fnstcw
inc
scas
push
pusha
faddl
xlat
stos
fistl
enter
std
add
xor
mov
cmp
ret
jle
pop
dec
fs
outsb
and
loop
call
addr16
fldt
sbb
cmpb
lret
jae
icebp
rorb
mov
cmp
jns
cmpsl
add
inc
xor
fs
adc
outsl
mov
push
mov
cwtl
mov
rcll
neg
jb
outsb
hlt
insl
xor
loopne
call
call
aad
pop
pop
jno
mov
mov
cmp
movsl
add
flds
dec
fsubrl
dec
ljmp
cmpsl
pop
pop
hlt
jae
mov
mov
repz
inc
push
das
into
mov
push
mov
add
xchg
mov
lods
lret
push
cs
movsl
fnstsw
push
gs
ja
jb
int3
mov
loopne
loopne
pop
add
xor
jne
jmp
lret
xor
shll
xchg
out
mov
ljmp
cmp
js
jp
pusha
add
cmc
jmp
pushf
call
cs
push
loop
push
addr16
xchg
adc
movaps
cmp
jo
push
and
jno
bound
ficompl
mov
push
movb
xor
xchg
dec
outsl
or
jae
mov
stc
dec
cld
ljmp
cwtl
fcompl
cwtl
clc
push
xchg
xor
pop
fldt
lds
dec
sbb
inc
jb
jbe
or
or
sbb
lret
les
add
call
call
mov
pop
pop
pop
jno
cs
mov
push
xchg
out
push
inc
data16
mov
add
jbe
movsb
sub
inc
add
out
cmpsb
cld
mov
stos
rcr
loop
xor
andl
das
sub
dec
sub
add
movsb
xchg
xchg
negl
stos
lret
mov
insb
ds
in
fsts
add
xchg
js
cmp
mov
test
dec
and
mov
sub
push
arpl
jp
add
jb
es
sbb
push
sbb
scas
pushl
jmp
in
mov
pop
jno
and
int3
mov
add
jbe
pop
sti
push
and
sub
shrb
imul
inc
sub
mov
insb
xchg
add
es
subl
and
mov
sbbb
dec
sbb
dec
nop
popa
pop
dec
mov
and
mov
mov
loop
xor
sub
mov
int3
dec
enter
xchg
int
test
popf
clc
leave
push
xor
cli
xlat
xchg
add
xchg
imul
cmpsb
cmp
inc
fbld
inc
xchg
dec
gs
add
push
dec
daa
push
stc
insb
cmp
call
popa
add
mov
lods
mov
daa
testb
adc
dec
adc
sub
push
jb
jnp
popa
decl
gs
mov
xchg
mov
rcrb
out
wrmsr
or
ficompl
nop
loopne
fbld
hlt
pop
pop
jo
jge
dec
or
aad
or
inc
roll
pop
add
outsl
push
dec
push
cmp
push
insb
inc
es
dec
out
aad
inc
jge
push
pop
pop
jno
outsl
out
cmp
mov
fwait
ljmp
pop
mov
pop
xchg
mov
inc
shr
mov
sahf
lcall
fidivrl
ret
mov
test
mov
adc
jmp
popa
cmp
in
in
mulb
bound
fstps
cltd
out
and
sub
nop
dec
xor
mov
mov
dec
xchg
ret
xchg
pushf
jge
cli
lea
jecxz
lods
pop
pop
jno
jp
pop
xchg
xor
subb
sahf
push
add
lret
fiadds
pop
mov
jno
pop
outsb
cltd
inc
dec
in
xchg
mov
inc
xchg
inc
cmpl
fiaddl
mov
mov
cmc
lea
pop
xor
ja
cwtl
add
sub
add
mov
outsl
push
cmp
xlat
mov
pop
and
and
or
sub
adc
add
shll
push
popf
movb
lea
jae
xor
mov
ror
mov
pusha
bt
mov
call
xchg
mov
pop
jno
dec
pop
sub
mov
fsubl
pop
pusha
rorl
lock
shrb
and
dec
jle
xor
push
mov
xchg
daa
in
sub
mov
pop
fsts
divb
pop
movsb
sub
cmc
fwait
out
mov
push
and
scas
jmp
in
mov
xchg
mov
jp
push
in
lock
xor
pop
pop
jno
in
xor
push
cmc
nop
mov
insl
cmpsb
repz
sbb
add
out
jne
mov
or
hlt
addr16
adc
inc
dec
inc
cmp
mov
lods
int
cld
xchg
rcll
negb
mov
pusha
pop
sti
mov
nop
imull
cmp
bound
xor
pop
sbb
mov
push
jmp
cmpsl
stc
push
rcrl
jae,pt
jg
pop
jb
push
aaa
push
insl
inc
sbb
sbb
and
jae
movzbl
shld
xadd
cmp
mov
shrd
test
xchg
test
mov
stc
btr
mov
call
sbb
add
jno
adc
fdivs
fsubr
enter
mov
pop
call
mov
xlat
push
sub
dec
adc
pop
jmp
aam
dec
and
out
aas
int
scas
inc
pushl
or
stos
jg
and
adc
inc
cmc
addr16
in
add
mov
inc
je
imul
pop
inc
dec
out
mov
mulb
xchg
pop
outsb
dec
jp
inc
mov
out
scas
lods
xchg
fs
or
sbb
pop
xor
jmp
or
sbb
mov
mov
sub
push
add
dec
and
adc
sbb
or
add
mov
stc
ror
mov
jmp
jmp
shr
ror
btr
or
mov
jmp
pusha
lea
call
push
push
lea
jmp
in
movsl
pop
pop
jno
popa
cld
gs
xchg
xor
cmp
hlt
inc
data16
push
call
mov
aad
rcrl
mov
sbb
or
push
inc
adc
sbbb
aaa
inc
leave
mov
movsb
cmp
push
inc
adc
push
call
fsubrp
in
cwtl
stc
mov
pusha
or
pop
and
data16
jbe
push
sub
bound
popf
aas
xchg
push
or
adc
lea
je
test
jmp
jno
sbb
jno
aam
sbb
aam
les
mov
or
or
fbld
pop
mov
adcb
push
out
adc
jmp
mov
push
inc
bound
popl
mov
inc
and
fimull
mov
pop
dec
pop
int
push
in
pushf
cmpsl
andb
inc
fiaddl
jp
hlt
mov
push
add
push
pop
jnp,pt
outsl
push
sbb
cmovo
inc
push
sti
mov
repnz
pop
jno
pop
jle
popw
mov
das
push
jp
pop
nop
cmpsl
not
add
jl
pop
hlt
jns
stos
addr16
int3
loope
test
jnp
out
inc
enter
lea
jg
sub
mov
and
je
adc
sub
addr16
sbb
out
push
fnstenv
shlb
sub
inc
push
ret
mov
out
mov
push
sub
pop
mov
or
nop
add
mov
mov
cmp
fcomps
pusha
and
rolb
mov
rclb
jbe
test
mov
push
popa
pop
jno
mov
sbb
clc
jno
push
and
loopne
sarl
inc
ljmp
pop
outsl
or
mov
pop
bound
inc
mov
adc
data16
lahf
sbb
mov
mov
icebp
xor
jmp
jmp
dec
cmp
inc
lods
mov
sbb
sbb
movsb
ds
lahf
fs
mov
mov
mov
stos
lret
ret
xchg
mov
ret
aas
outsb
mov
pop
jno
repz
jp
mov
lcall
mov
cmpsl
or
pop
cmp
mov
sub
mov
imul
inc
in
pop
push
and
rorl
jmp
mov
repz
jnp
mov
mov
lds
stc
push
inc
xor
je,pn
mov
shll
adc
cld
xor
dec
cmp
jl
pop
jno
popa
cld
adc
xchg
xor
or
sub
pop
ja
adc
ret
bound
mov
jle
outsb
lret
idivb
sarl
imul
jp
popf
sarb
hlt
push
sti
mov
push
lret
imul
movsl
xchg
or
dec
rorl
xchg
dec
leave
lahf
sbb
aad
jnp
sub
addr16
jns
fs
jle
arpl
jp
aam
jge
xchg
hlt
outsb
loope
ret
outsl
enter
iret
push
popa
lret
shrb
enter
out
lds
es
sub
mov
ror
int3
test
lcall
icebp
out
into
mov
xor
dec
jae
xor
xor
add
scas
hlt
mov
sahf
mov
or
addr16
sub
outsb
or
cmp
shrb
dec
fbld
mov
and
sar
scas
call
lock
andb
push
mov
hlt
imul
insl
add
aam
ret
pop
stc
push
inc
or
jo
leave
pop
pop
aaa
push
outsl
jmp
xchg
adc
xchg
dec
or
lock
out
add
fdivp
lahf
xchg
xor
mov
pop
jecxz
and
jl
js
in
mov
xor
test
stc
sbb
les
sbb
sarb
movsl
cmpb
test
jg
xchg
addr16
mov
mov
stos
mull
xchg
stos
lahf
lds
arpl
pusha
pusha
mov
movb
pushf
pushf
push
mov
jmp
lahf
movsb
andb
movsl
add
cltd
in
lock
jne
imul
ss
rorb
sub
cmpsb
pop
pusha
es
jne
cmp
rcr
push
ds
scas
fwait
or
lods
jmp
test
dec
xor
pop
jne
aam
out
loop
xchg
fnclex
sar
iret
hlt
fistl
cmp
xchg
pop
dec
sbb
jnp
pop
adc
dec
cmpl
cmp
add
jbe
and
xor
and
xchg
mov
or
add
cmpsb
sbb
sub
push
dec
out
and
push
jnp
js
xchg
mov
jecxz
add
mov
loope
test
in
mov
je
push
add
scas
sahf
lahf
cwtl
or
sub
lds
mov
lret
aas
or
sbb
jae
inc
movsb
sbb
xchg
ret
inc
dec
aad
insl
movsl
pusha
inc
orb
fimuls
stc
jmp
jmp
jmp
mov
xor
movsb
pop
cmp
shl
out
push
mov
test
jne
test
fwait
add
repz
nop
pop
inc
dec
popf
sub
in
mov
lahf
xor
das
add
into
mov
sbbb
dec
frstor
and
mov
rol
ficoms
sub
pusha
mov
pushf
pusha
pusha
lea
jmp
shl
shr
mov
ror
jmp
adc
pushf
pushl
pushl
ret
clc
mov
test
jmp
call
xadd
push
mov
bts
jmp
push
outsl
xor
sub
mov
mov
mov
jmp
xor
in
and
int
pop
pop
xchg
lock
push
mov
popf
test
mov
rclb
adc
jne
es
sub
movsb
mov
cmpsb
das
inc
jae
or
xchg
fldl
mov
sbb
pop
sub
cmc
mov
imul
adc
push
inc
push
aaa
jbe
fs
fldenv
arpl
mov
jge
add
gs
jno
and
xor
fsubl
xor
pop
ret
jne
dec
cli
mov
and
outsb
cli
adc
test
pop
and
jg
ret
int3
push
inc
int
jle
daa
sbb
out
push
inc
xor
test
lcall
ret
mov
mov
xchg
ret
pop
cmp
inc
clc
push
int
mov
bswap
movzbl
push
lea
setp
mov
movzbw
lea
mov
call
jge
sti
gs
jno
or
jge
jns
xchg
in
jno
imul
arpl
push
cli
jmp
std
jp
pop
pop
mov
push
arpl
pop
push
mov
xchg
xchg
loopne
jb
mov
xor
hlt
outsb
inc
mov
scas
hlt
sarb
or
push
jno
push
xor
cmp
push
lcall
push
call
in
push
addr16
jno
sbb
add
and
js
js
inc
in
cld
xlat
and
mov
fistpl
inc
aam
iret
inc
jne
jae
inc
xor
xchg
sub
popa
insb
stc
xchg
stos
outsl
cmpsl
int
outsl
dec
cmpb
mov
fwait
jb
fistl
and
in
test
pop
mov
push
xlat
jb
dec
das
push
aas
jbe
jp
push
and
test
jl
pop
mov
fucomip
add
shr
sub
xchg
adc
mov
inc
mov
clc
jmp
jmp
add
dec
outsl
popa
fs
imul
add
push
jl
add
repnz
pushf
push
mov
push
pushf
pusha
pushf
lea
jmp
xchg
shr
and
mov
pushf
stc
mov
add
cmc
test
pushf
mov
xchg
push
mov
call
and
push
aam
add
dec
aad
mov
insl
or
xor
mov
add
fsts
inc
scas
outsl
and
jno
pop
cmp
jmp
xor
ret
mov
divl
enter
push
push
hlt
fsubrs
pop
or
outsb
push
cwtl
cmp
fnstsw
clc
addr16
out
fldenv
test
out
pop
jbe
jle
data16
adc
addr16
insl
inc
in
or
imul
mov
test
popa
clc
test
lods
aam
sub
jnp
insl
js
push
mov
mov
lds
jecxz
insb
icebp
xchg
xchg
jge
xchg
lods
mov
sub
inc
pop
jae
sub
jnp
pop
mov
xor
aad
lods
lret
shl
sarb
xchg
jecxz
test
fildl
incl
sarb
and
push
dec
adc
or
or
and
push
or
push
test
push
daa
imul
test
pop
xor
in
adc
leave
movsb
or
add
gs
mov
inc
jns
mov
and
outsb
add
adc
incl
ja
xchg
mov
dec
xchg
pop
xor
or
xor
mov
mov
shr
ds
add
shrl
and
mov
pop
sbb
jne
dec
fs
sub
inc
fidivrs
ja
cmp
cmp
or
pusha
lea
jb
jmp
call
pop
daa
push
jno
jp
sahf
pop
mov
push
ret
mov
push
aas
sbb
push
jg
add
movsl
and
xchg
cmp
xor
and
or
in
push
sar
ret
stc
mov
out
xor
jns
or
add
dec
dec
loope
hlt
lods
mov
and
mov
popf
mov
movsb
stc
movsl
enter
loope
and
sahf
mov
inc
fucomi
xor
in
sbb
subb
adcl
xor
cmp
add
js
push
and
and
cmc
in
push
xor
je
add
movzbl
bswap
mov
mov
test
jmp
add
pusha
push
lea
jmp
shrd
mov
stc
cmc
call
pushf
push
adc
call
call
bswap
shld
mov
pusha
pusha
cmpb
jmp
sbbb
push
jno
and
leave
pop
and
push
rorl
cld
fldcw
mov
clc
cltd
adc
cmp
sahf
pop
aad
xchg
into
pop
pushf
lods
rcrb
pop
pop
stc
cmp
out
push
mov
push
jne
or
dec
push
pop
and
arpl
insb
add
js
sbb
xor
add
xor
cwtl
cmp
ret
dec
out
lods
cmc
sbb
sahf
les
inc
jp
icebp
and
push
push
add
and
xor
int
js
clc
movsl
pushf
dec
pop
sbb
dec
pop
push
push
pusha
mov
sbb
pushf
cmpsb
loop
jae
pop
je
pop
test
pop
or
cmp
in
pusha
int
jns
clc
test
mull
fsubr
mov
pop
or
pop
mov
cwtl
pop
aaa
adc
cmp
fdivrs
fcmovnu
aas
pop
mov
insb
fbld
jl
pushf
pop
pushaw
xor
mov
out
mov
pop
lods
repz
fisubl
xor
stc
insb
pusha
mov
mov
pushf
jo
pusha
xchg
adc
jo
push
pusha
inc
xchg
push
mov
insb
int3
cs
pop
pusha
cmp
arpl
cmp
cmp
cmp
pop
cmp
pop
cmp
push
pop
cmp
popf
or
mov
mov
mov
fsubs
sub
test
or
or
pop
jmp
xor
cmp
pop
adc
push
and
sbb
aam
addr16
push
aaa
or
sbb
fidivs
pop
add
fsubl
shrb
sbb
stc
and
and
inc
sbb
push
inc
push
xor
dec
sub
and
xor
xchg
stc
or
and
xor
xchg
sub
je
push
sub
cwtl
jge
popa
mov
sub
andb
mov
pusha
js
sbbb
push
pop
mov
sahf
sbbb
cltd
scas
fwait
popf
sarb
rol
cwtl
pop
fldl
int3
stos
int
pop
or
adc
sbbb
rol
mov
pop
sub
pop
scas
call
and
adc
push
fmuls
sub
cmp
pop
es
push
js
cmpb
pop
sbb
push
sub
mov
and
insl
push
xchg
dec
mov
pop
pusha
adc
add
pop
pushf
fdivrs
sub
xor
mov
nop
test
xor
popa
cmp
pusha
sbb
add
call
dec
cmpl
mov
inc
cmp
insb
pop
loopne
mov
inc
push
dec
ljmp
inc
cmpl
add
std
insb
mov
inc
in
insb
in
inc
adcb
in
subl
xor
fnsave
insb
pop
or
pop
std
and
outsl
insb
js
push
mov
adcl
jp
push
mov
inc
inc
repz
cmp
pushf
aam
js
mov
lock
ffree
cwtl
mov
movsb
js
loopne
fildll
mov
scas
dec
insb
add
pop
cld
arpl
sbb
pop
or
and
call
xchg
mov
loopne
mov
dec
add
ret
shrb
rep
das
xchg
insb
mov
jnp
inc
cs
add
out
dec
xchg
pusha
add
mov
movsl
inc
mov
test
cld
and
insb
jmp
nop
dec
cli
adcb
les
add
pop
scas
jmp
insb
sub
cld
arpl
cmp
xchg
add
test
mov
orl
rcrb
int3
pushf
inc
xchg
cwtl
sub
xchg
mov
adc
cmp
jg
test
xor
aad
test
loope
lret
pop
mov
mov
mov
mov
insb
pop
out
xchg
mov
and
and
cs
mov
orl
adc
inc
xchg
jo
jmp
pop
dec
add
cmpsb
pop
loop
cld
xchg
insb
jmp
pushf
xchg
das
xchg
adc
pop
sub
inc
scas
jo
pop
insl
rcll
loope
dec
test
inc
cwtl
push
xchg
inc
push
inc
iret
sti
clc
stos
push
add
mov
lods
cmp
push
xchg
add
pop
popf
fmuls
jp
inc
inc
in
adc
test
pusha
sbbl
mov
and
push
in
add
loope
xchg
adc
pop
adc
inc
icebp
movsb
mov
push
pop
xorl
inc
nop
push
fucomp
adc
inc
pusha
inc
mov
add
lods
jnp
in
scas
pop
fwait
pop
and
pop
shl
stos
in
jp
pusha
pusha
mov
pop
pusha
xor
lahf
fadds
fiadds
insl
sub
icebp
nop
mov
inc
jmp
je
je
je
je
je
je
jae
gs
dec
test
jne
jl
pop
xor
mov
pusha
scas
add
mov
scas
icebp
pop
sub
cld
mov
aaa
add
fs
mov
and
popa
xlat
pop
lahf
dec
test
push
add
jnp
test
jg
xchg
lock
cmp
cmp
cmp
xor
lfs
loope
sbb
arpl
psraw
adc
popf
pop
pop
pop
lods
push
pop
pop
fisubrs
scas
aad
cmp
pop
std
sub
dec
xor
xchg
ljmp
mov
mov
movsl
push
ss
xor
xor
pop
fsub
insb
mov
cmc
sbb
sbb
adc
pop
pop
xor
pusha
hlt
and
mov
lret
icebp
pop
shlb
cmp
cmp
insl
push
popa
dec
hlt
jno
jge
xchg
inc
pop
push
dec
cmpsb
pop
dec
faddl
addr16
push
mov
loopne
mov
inc
lcall
adc
adc
movsb
adc
or
insb
lret
int3
mov
loop
adc
adc
jno
popa
int3
push
jl
mov
mov
sub
sub
xchg
mov
xor
mull
push
xchg
push
fdivs
push
jbe
cmp
mov
dec
push
nop
or
aam
mov
fsubs
call
jp
mov
popf
test
mov
loopne
enter
lods
jmp
stos
sarb
mov
enter
cltd
cmpsl
into
mov
pop
lods
insl
lret
mov
sub
sti
mov
addb
adc
push
popf
cli
or
adc
rcpps
daa
sub
pop
mov
xor
xchg
das
inc
pop
or
push
sbb
xorb
add
shll
or
sub
dec
push
lahf
pop
adc
std
mov
and
mov
cmp
inc
sub
sub
lcall
xchg
subl
add
dec
bound
out
or
femms
ud0
fists
stc
and
pop
mov
sbb
mov
mov
cmpsb
js
test
aaa
sbb
cmp
xchg
mov
xor
mov
aaa
fs
or
pop
daa
push
cld
cmp
mov
repnz
or
movsb
shlb
daa
cs
sub
adc
mov
pushw
std
sbb
jl
and
sti
and
daa
sbb
inc
sbbl
sahf
jl
cmp
shlb
mov
sub
sbb
pop
pop
or
mov
clc
leave
push
dec
fwait
cmp
insb
fadd
in
jle
add
int3
cmp
mov
pushf
mov
mov
xchg
popa
imul
cmpb
test
jp
clc
push
xchg
jne
enter
mov
dec
rolb
je
insl
pusha
mov
dec
xchg
sbb
xor
sbb
stos
test
cltd
mov
add
add
sub
repnz
jl
fbstp
mov
pop
fwait
push
imul
mov
stos
cmpsl
lret
mov
cwtl
movsb
push
lret
inc
pop
sub
dec
sub
cs
decl
notb
cmp
and
xor
pop
push
push
es
cmp
adc
mov
or
test
pop
test
adc
push
cmp
loopne
mov
push
pop
cltd
jp
ljmp
sahf
sub
cwtl
inc
ret
sbb
cld
in
popa
jge
fsub
cs
rclb
aaa
push
call
bound
fs
sbb
loop
enter
mov
out
xchg
pop
push
sbb
sub
sub
mov
jns
ja
js
lods
popa
lret
xchg
xor
insb
stos
push
pop
pop
pushf
popf
sahf
cltd
lods
movsb
lods
pop
mov
fwait
cmpsl
cmpsb
popa
jbe
fists
pop
js
sub
mov
arpl
adc
es
and
movsb
clc
sub
and
nop
sub
xor
push
insl
jbe
adc
xor
add
jae
xchg
dec
pop
icebp
adc
pop
adc
pop
sbb
in
adc
mov
pop
sub
pop
dec
imul
cltd
je
loopne
jbe
or
insb
pushf
pop
xlat
and
pop
popa
pop
loope
push
jl
mov
fistpl
pop
jl
movsb
addr16
jge
xchg
rorl
cmp
fsubs
sbb
adc
outsb
iret
arpl
in
fs
fstps
imul
push
lret
fstps
push
jl
mov
loope
push
jl
mov
cmp
fs
gs
jl
mov
sub
push
jl
mov
and
sbb
adc
outsb
jp
pushf
outsl
or
jo
or
add
jb
add
clc
jl
mov
lock
ja
loope
push
jl
mov
loopne
jnp
loope
push
jl
mov
les
mov
out
orb
loope
push
jl
mov
movsb
pushf
xchg
jl
mov
xchg
pushf
mov
jmp
mov
jl
mov
mov
lds
enter
mov
into
iret
sarb
sbb
insb
pusha
pop
fs
pop
arpl
pop
cwtl
mov
popa
pop
pop
pop
outsl
imul
mov
cmp
les
enter
xchg
or
jne
jl
jnp
jno
jo
jb
jae
mov
lea
jle
xchg
popl
or
mov
mov
pop
mov
je
jbe
ja
jns
jnp
aam
inc
xchg
pop
jns
mov
mov
push
fcoms
lcall
pop
jo
pop
mov
jbe
jo
fsubs
pop
daa
pop
insb
push
pop
fsubs
fbld
loop
sbb
cvtps2pd
ja
jno
mov
arpl
sbb
add
pop
gs
data16
js
pop
mov
mov
jg
jp
frstor
andb
pop
dec
insb
jns
jae
mov
pusha
pop
jmp
je
pop
push
jo
insl
popa
and
pusha
pop
jns
outsb
fmuls
bound
jo
pusha
jae
jb
jno
mov
pop
push
std
fs
push
sti
pop
add
jne
jl
pop
mov
jnp
pop
ja
daa
jno
pushf
std
jp
js
bound
push
jp
loop
leave
jnp
push
jne
jl
mov
mov
daa
andl
jmp
dec
jl
pop
jg
ret
test
mov
insb
mov
sbb
jne
and
fisubs
sbb
pop
pusha
jns
je
fadds
pusha
test
xchg
jb
popa
je
test
push
je
jnp
mov
dec
mov
stc
pop
mov
mov
divb
test
mov
xchg
push
lea
js
push
pop
xchg
nop
in
mov
xchg
in
orb
pop
adcl
test
mov
inc
cwtl
aaa
jl
pop
lahf
fstpl
es
pop
cmp
scas
jbe
sbb
jns
jb
pushf
fcoms
mov
jo
jns
push
ja
and
sbbl
xchg
scas
pop
mov
mov
fs
jae
mov
pop
mov
jo
je
andb
insb
movsb
fcomps
movsl
call
cmpsl
jo
and
xor
fwait
cmp
mov
orl
test
pop
stos
push
je
loopne
test
je
data16
jae
jb
fildll
lods
mov
pop
scas
imul
mov
js
ja
pop
lcall
movsb
jne
dec
lea
fsubs
mov
in
pop
loop
bound
and
mov
mov
jl
and
fs
mov
mov
fsubl
cmpb
mov
mov
pop
rclb
xchg
shrl
xor
bound
cld
pusha
lahf
lds
nop
or
fsubrs
stc
mov
fdivr
pusha
ror
mov
pushf
int3
int
cmpsl
jle
xchg
into
fdiv
data16
iret
xchg
rolb
mov
jno
sarb
jmp
and
jle
pop
xchg
sub
pop
popf
aam
jb
negb
mov
aad
jp
pop
mov
add
jns
pop
fldenv
ficoml
push
dec
jb
pop
call
jg
cmp
mov
fiadds
push
ja
pop
jno
in
mov
pop
mov
jmp
jl
test
loope
cld
pop
mov
pop
arpl
jecxz
in
mov
in
jb
pop
and
je
out
push
out
shr
mov
pop
ljmp
pop
mov
mov
cmp
xchg
jnp
cltd
in
fsubr
and
xchg
sarl
leave
out
in
adc
lcall
cmpsb
push
pop
jns
cmp
mov
and
pop
sub
fdivr
pop
hlt
xor
pop
pop
call
xchg
jb
insl
mulb
divl
pop
clc
scas
pop
cmp
stos
fsubs
cli
stos
js
in
jne
pop
jns
call
cmp
pop
mov
ss
incb
fisubs
pop
test
add
add
mov
jp
fwait
mov
jg
xchg
pusha
add
add
insl
pop
mov
push
popl
push
fmul
pop
es
or
xorl
or
pop
jo
je
or
dec
jno
mov
or
test
or
xchg
mov
addr16
call
pop
adc
adcb
cmp
jnp
jp
jne
jns
jns
jae
adc
fcomps
adc
adc
loope
js
and
jno
mov
sbb
movsb
pop
and
xchg
push
mov
pop
push
pop
jo
jp
xchg
sbb
stos
pop
fistpl
fcomps
in
mov
dec
push
dec
push
pop
cmp
cmpl
repnz
fsubs
cmp
and
stos
es
data16
jge
pop
mov
fsubs
adc
subl
sub
into
js
pop
mov
insb
or
mov
cs
andb
fsubs
mov
inc
mov
xor
mov
jb
jo
je
jnp
ja
jp
mov
arpl
sub
and
lea
jno
pop
xor
stos
jb
jns
jmp
nop
inc
push
ja
jno
dec
pop
mov
out
pushf
jae
fnstenv
adc
mov
fdivrs
mov
mov
pop
and
lcall
xorl
and
mov
pop
xchg
aas
addb
inc
gs
scas
insl
inc
andb
test
jne
pop
jmp
fsubrs
inc
fadds
push
inc
push
dec
adc
pop
andb
mov
cwtl
lea
insl
mov
dec
ss
lahf
fimull
dec
jmp
jnp
call
fsubs
add
data16
shlb
bound
bound
and
push
jb
cmp
fdivs
sbb
add
pusha
idivl
jno
and
mov
andl
call
mov
jmp
push
fsubs
cltd
push
sub
or
push
jmp
jns
pop
jp
lahf
jb
pop
fldenv
jo
pop
push
js
sbbl
sbb
mov
jno
pop
cwtl
jp
pop
popa
pop
mov
jb
pop
nop
inc
pop
mov
imul
push
mov
sahf
pop
in
jge
and
pop
push
data16
pop
xor
frstor
lret
fistpl
fld
gs
pop
leave
push
push
imul
mov
cmp
subb
or
pop
lcall
mov
pop
insb
jo
cmp
sti
jno
lods
mov
jb
mov
outsb
jns
jb
mov
pop
pop
jns
scas
lahf
je
jnp
pop
jne
jbe
fs
ja
inc
pop
scas
jb
test
jnp
rol
lcall
jg
daa
jp
xorb
pop
adc
test
pop
adc
in
jge
cmp
fldcw
js
jg
repnz
andb
mov
imul
mov
adcb
jb
jo
je
cmpl
adc
movb
push
jno
test
je
xchg
xchg
mov
mov
stos
jae
and
mov
dec
lcall
mov
pop
lahf
ja
jno
call
cmp
pop
xchg
inc
test
stos
jl
sub
nop
pushf
es
in
xorl
xchg
js
les
out
xchg
jo
mov
xchg
jno
pop
xchg
in
gs
bound
jl
test
mov
pusha
loopne
mov
hlt
pop
scas
fwait
push
pushf
fscale
pusha
jne
pop
pop
popf
jl
mov
and
je
loope
pusha
sahf
ss
sbbl
mov
fs
test
pop
mov
mov
je
jnp
pop
pop
pop
pop
xchg
lret
pop
cltd
mov
mov
lock
mov
cmp
jnp
lock
pop
lock
mov
addr16
mov
mov
push
gs
test
js
sub
addr16
mov
jns
shlb
xor
push
in
outsl
jo
pusha
movsb
jg
insb
arpl
pop
movsl
fstps
push
scas
fdivp
hlt
xchg
push
mov
sbb
fcoml
dec
pop
add
cmp
lea
cmpsb
fidivs
push
xchg
gs
sub
mov
fdivrl
xchg
in
pop
andb
push
push
mov
arpl
outsl
jp
call
addr16
sub
imul
inc
mov
jo
mov
pop
hlt
lock
pop
test
hlt
jl
push
xchg
andb
mov
ds
imul
insb
vmread
sub
jo
in
or
jp
and
pop
pop
pop
mov
fildl
sbbb
cs
cmp
js
mov
xchg
insb
pop
jg
fs
pop
jb
sub
test
add
sahf
push
mov
nop
test
pop
ja
test
mov
fldl
out
pop
sbb
add
les
inc
lcall
mov
mov
jbe
jp
jo
jl
cli
out
lea
mov
mov
xor
jg
jb
shll
loop
pop
test
bound
fwait
int3
adc
lods
cmpb
jb
jle
cmp
mov
pop
insb
jg
movsl
inc
push
popa
cltd
mov
call
lods
popa
dec
mov
mov
mov
mov
pusha
fldl
xor
rcrb
pop
jae
sbbb
lret
jno
add
insl
jne
fucomi
ficomps
add
sub
sub
popa
pop
jns
add
or
cs
pusha
lret
scas
fldenv
fs
andb
fldt
mov
and
cmpb
jl
xchg
xchg
mov
js
and
jb
repnz
xchg
mov
jle
or
test
popa
cwtl
divb
jae
les
les
cwtl
pop
cli
push
fmull
ljmp
cwtl
popa
jae
push
loope
pop
outsb
jle
mov
xor
les
clc
ja
outsl
mov
shrb
and
insb
subb
mov
sbb
imul
hlt
push
cwtl
pop
test
push
pushf
jg
adc
pop
pusha
bound
xchg
adc
mov
mov
sub
add
lock
inc
pop
or
mov
push
js
mov
popa
clc
jge
xchg
mov
push
imul
insl
scas
int3
gs
gs
cmp
movsb
jp
cwtl
call
lock
fld1
mov
jo
mov
mov
dec
mov
sbb
sub
pop
ljmp
sahf
call
shlb
mov
jo
mov
mov
mov
ret
les
addr16
dec
pop
pop
je
jns
cli
imul
push
movsb
pop
ja
push
popl
push
js
popa
mov
loope
pop
ds
xor
sbb
nop
jno
jne
push
test
push
gs
ret
fnstcw
arpl
lock
cwtl
mov
ljmp
pop
sub
call
popa
and
stos
cld
mov
test
je
outsb
mov
clc
sub
fstps
int3
lds
jecxz
js
pop
ja
xor
fsubrs
fxch
psubusw
imul
lea
popa
test
je
outsl
bound
xchg
clc
addb
into
pop
in
push
es
test
adc
stos
sbbl
insl
jo
fsubs
inc
and
les
mov
jae
sub
sahf
pop
push
test
imul
cmp
fwait
lods
cs
cmp
fwait
call
add
jns
lret
jae
push
lret
imul
imul
pusha
adc
bound
sub
shrb
cltd
xor
ljmp
fs
addb
ret
add
or
imul
cmp
arpl
jno
into
jl
pushf
loopne
shlb
jnp
push
pop
sbb
pop
or
jo
shlb
or
inc
jg
mov
mov
shr
shrb
push
xor
jle
loop
shr
test
pop
add
push
or
jo
sbb
jp
fsts
popa
pop
lock
mov
js
mov
out
mov
lock
subl
pop
mov
ss
sub
movsl
xlat
push
nop
jp
in
add
popa
pop
imul
mov
mov
int3
and
sbb
fucompp
loopne
dec
and
sbb
push
mov
popa
jo
out
cmpsb
outsl
fs
cmp
pop
cmp
cmp
fucomp
jbe
cmp
insb
ja
xor
lods
data16
pushf
mov
fisubrs
jne
outsb
mov
and
dec
xor
mov
jns
sahf
stos
lock
into
and
je
imul
jne
or
jb
and
add
pop
xor
fldcw
cmp
je
fcoml
push
sub
xchg
jl
idivb
mov
pop
js
stc
cld
pop
jns
push
lcall
clc
out
ss
lock
push
int
test
bound
in
add
xor
in
cld
adcb
sbbb
cmp
mov
popa
add
mov
test
sub
mov
rcrb
mov
or
popa
lea
xor
dec
xchg
dec
ja
fstps
add
push
insb
aaa
enter
mov
jb
push
outsl
jl
fldenv
pusha
outsb
jno
sahf
jo
movsb
clc
pop
je
adc
ljmp
fucomi
inc
xor
jo
enter
push
lret
pusha
and
jg
mov
jne
repnz
lcall
pop
mov
in
adc
pop
ficompl
sbb
stc
adc
sbbb
sbb
fdivl
fsubl
xchg
je
fsubrs
bound
xchg
negl
push
mov
fnstcw
cwtl
ljmp
int3
jns
es
out
cmovno
push
mov
sbb
sbb
call
sbb
sbb
fstl
or
pusha
pusha
rcr
aam
movsl
xchg
mul
stos
add
ljmp
xchg
mov
adc
sti
push
push
push
bound
xor
mov
sub
sub
mov
pop
dec
insb
inc
sbb
cmp
and
mov
cltd
loop
out
mov
push
jl
cld
pop
test
sub
sub
sbb
out
jl
addr16
scas
movsl
dec
pop
add
cmp
retw
hlt
jecxz
test
jle
jg
adc
mov
sub
sbb
xor
fsubrs
insl
test
aam
push
mov
mov
in
adc
rolb
lret
mov
je
dec
iret
jecxz
gs
lcall
sub
cli
and
andl
call
std
jle
xchg
sbb
jbe
mov
data16
call
not
pop
fcmovu
add
push
add
loop
mov
mov
ljmp
addr16
mov
stc
xchg
popa
nop
mov
sub
repnz
xchg
repnz
pop
std
hlt
outsb
jmp
mov
ljmp
insb
popf
sub
pop
test
pop
out
je
rcrb
and
arpl
adcl
pusha
dec
mov
add
pop
lods
popa
dec
gs
or
sbb
push
jl
test
mov
jge
mov
sub
mov
rorb
out
mov
or
fcompl
mov
data16
js
rorb
pop
data16
add
jnp
clc
insb
popa
mov
fdivs
jge
jge
pop
add
cmc
ret
clc
mov
add
pop
sub
js
enter
scas
lock
push
mov
pop
inc
pop
jo
aam
jle
mov
push
data16
imul
fs
xor
xchg
ljmp
std
adc
outsb
call
sbb
or
push
jb
jno
faddl
das
pop
add
mov
jae
mov
insb
clc
push
mov
xchg
xor
jne
sbb
fs
cmp
sti
ret
fnstenv
repnz
movb
xchg
clc
and
outsl
insb
and
movsb
pop
mov
insb
mov
mov
lret
rcll
sarl
outsl
mov
push
test
cld
fchs
popa
ljmp
push
test
pop
in
add
imul
pop
pop
jns
mov
out
or
push
jle
mov
jb
pusha
fisubl
fstps
xor
jp
shll
sbb
fldcw
mov
add
push
push
in
imul
mov
insl
or
sub
imul
add
cmpb
insb
jne
mov
movl
pop
stos
out
clc
pusha
sbbb
hlt
dec
and
jg
sub
call
test
mov
fcompl
fldcw
pop
ret
push
pusha
test
dec
or
es
or
mov
loopne
imul
or
cld
popa
sub
pop
les
jo
jl
mov
pusha
dec
stos
pop
mov
push
leave
xchg
push
add
sub
insb
jo
cmpl
lea
push
add
sbb
dec
stos
call
mov
jne
enter
into
ss
roll
mov
push
sar
hlt
xor
cmp
dec
inc
dec
loope
js
add
loopne
test
inc
jle
andb
pop
mov
or
push
jo
jo
jl
cli
fdivp
ret
ret
mov
inc
push
jl
jl
lds
jns
scas
pusha
ror
out
pop
pop
ret
inc
pusha
outsl
repnz
fstps
push
push
fucomip
or
or
add
fwait
pop
lret
push
mov
xchg
pinsrw
xchg
cmpb
inc
mov
sar
jo
test
mov
or
test
adc
sbb
jae
negb
mov
add
test
aam
gs
cmp
pop
ja
lcall
clc
or
cmp
insl
xchg
jb
test
xchg
bound
push
je
push
movsb
fisubs
fxch
pushf
pushf
mulb
pop
test
test
pop
mov
imul
fucom
lods
xchg
popa
call
cmpsb
sbb
sbb
in
jbe
or
inc
or
sub
or
sub
sbb
test
pop
in
movntq
xchg
movsl
je
mov
pusha
mov
pop
in
xchg
in
mov
ficompl
adc
mov
popf
andb
test
pop
push
movsb
cmpsl
adc
jo
sbb
inc
mov
popa
adc
or
sbb
les
mov
pop
and
insb
mov
popa
shll
xor
jl
or
mov
mov
movsb
ja
dec
imul
adc
out
cwtl
mov
in
in
mov
push
mov
cli
or
in
pop
call
push
adc
popa
xchg
xor
jg
jo
hlt
call
fisubrl
js
test
lods
loopne
fisubrl
or
xchg
sbb
adc
mov
test
movsb
pop
mov
push
jmp
fistpll
inc
push
stos
adc
imulb
jle
mov
bound
cmp
lods
add
jb
lock
jno
fsub
lcall
mov
ja
jnp
cs
repnz
scas
jg
sbb
out
loopne
fisubl
mov
data16
sbb
pop
sbb
jl
aam
jl
push
dec
xchg
lds
fs
sbb
ftst
pop
jno
faddp
mov
sbb
je
ret
test
hlt
lods
sub
sbb
pusha
push
cmp
in
add
push
fcompl
pushf
fisubl
ret
push
push
adc
or
push
mov
dec
mov
insl
nop
cmpb
sbb
push
push
jb
mov
hlt
cwtl
hlt
fs
jecxz
cltd
mov
add
fnstsw
sarb
sbb
lcall
mov
faddl
fsubrl
jno
movsb
insl
nop
push
sub
les
cmp
pushf
fs
mov
fnstenv
jo
push
test
andb
movsb
fsts
push
les
outsb
xchg
mov
in
mov
sbb
ja
push
mov
and
addr16
incb
fimuls
sarl
popa
outsb
fucom
sub
push
call
jle
or
insb
cli
push
mov
insl
hlt
push
mov
sbb
imul
shl
nop
pop
test
jo
dec
enter
and
jl
fiaddl
mov
sarb
and
adc
insl
sbb
and
mov
mov
fidivrl
loopne
or
cli
pop
arpl
ret
stos
mov
xchg
outsl
data16
sbb
cli
adc
repnz
movsb
jae
mov
les
push
sub
popa
cmp
insl
test
leave
movsb
jns
pop
in
sbb
mov
sbb
mov
test
push
mov
pop
cld
jno
out
mov
sub
sub
mov
mov
test
fsubs
and
sub
je
mov
std
testb
xchg
sbb
adc
xchg
mov
jl
je
or
in
clc
in
jo
fldcw
pusha
fs
je
outsl
fcmove
xchg
aam
les
mov
adc
mov
xchg
mov
cmpsb
out
add
cwtl
popf
push
outsb
jns
mov
xchg
imulb
jp
pop
mov
adc
lea
rolb
popa
jnp
rolb
mov
jge
adc
loope
imul
int3
mov
sbb
inc
cmp
add
mov
push
adc
call
in
jns
data16
add
xchg
jg
cmp
sbbl
jbe
in
fisubs
xor
rolb
dec
mov
push
and
stos
mov
push
movsl
fisubs
pushf
rcrb
imul
push
adc
rolb
sbb
in
in
inc
dec
xchg
les
jg
jb
cli
in
int3
xor
rcrl
imul
xchg
add
fidivrl
addl
test
out
out
lods
cmp
cmp
add
imul
sbb
loope
add
test
testb
push
sbb
jno
jne
lds
out
enter
cmp
in
jns
clc
cmp
rcr
inc
jb
jo
adc
adc
insl
push
jne
xor
imulb
sub
jge
test
sbb
add
pop
sub
dec
inc
xor
je
hlt
dec
inc
mov
loopne
cli
fmulp
scas
jg
mov
add
insb
js
lea
sub
popa
pusha
pop
xor
call
xchg
lds
and
adc
loop
in
in
test
jne
cld
mov
mov
jae
popa
jns
jge
jge
lock
lods
hlt
mov
gs
shrl
jle
aam
lea
das
cmp
fld
cwtl
les
push
adcl
adc
cli
mov
ss
mov
pop
cmp
test
inc
cltd
adc
and
cmpsb
add
or
test
mov
inc
mov
push
xor
outsl
ja
sbb
outsb
adc
push
cmp
outsl
xor
cli
or
dec
cwtl
andl
push
adc
inc
ss
inc
ds
shrl
loopne
in
int3
sbb
cmp
xchg
test
or
and
pushf
sarb
xchg
xchg
nop
jbe
sub
xchg
in
cli
sub
mov
shrb
popf
in
out
ret
pushf
pop
sahf
cld
bound
lods
cld
clc
cwtl
xchg
or
push
mov
lods
jno
jnp
hlt
mov
sbb
aam
mov
pusha
push
jge
jns
pop
in
in
outsb
adc
add
dec
pop
dec
or
push
adc
popa
mov
dec
pusha
ret
pusha
jl
outsb
sbb
mov
popa
mov
clc
sub
movsb
xchg
mov
or
pop
fsubrl
pop
dec
sub
je
jle
loop
and
mov
jge
pop
call
in
mov
and
add
es
shrb
aam
cli
dec
xchg
je
mov
jbe
gs
dec
lcall
adc
pop
imul
jno
je
jp
stos
jp
or
lds
outsb
jge
js
jge
jne
outsl
mov
pop
fcmovnu
ljmp
add
bound
pop
add
cmovns
ret
insb
jno
jl
add
pop
outsl
add
pop
fwait
push
mov
or
pop
jmp
add
cwtl
gs
pusha
pop
imul
lea
inc
imul
fisubrs
ret
push
xchg
les
popa
xor
jnp
cltd
add
pop
pop
pusha
sub
adc
ret
mov
mov
push
std
rclb
out
jne
sub
push
lret
lcall
mov
jge
or
jge
scas
mov
pop
in
mov
imul
pop
repnz
mov
xor
gs
gs
dec
jns
notb
jo
fimuls
jl
fs
mov
xor
pop
xchg
lods
jnp
ret
js
fs
cld
push
mov
ret
ficomps
mov
fdiv
push
xor
jns
gs
test
rorb
sub
bound
sahf
fsubl
fs
sbb
mov
mov
imul
call
pop
sbb
andl
pop
je
cmpsb
inc
imul
lods
push
call
test
jno
mov
cltd
pop
push
andb
gs
loop
ret
loop
pop
pushf
and
je
adc
fstpt
xchg
gs
jo
sbb
addr16
jmp
fsubl
push
shll
nop
fcmovb
sbb
jnp
js
outsb
mov
fs
stos
out
inc
fadds
xchg
xchg
push
fs
mov
in
add
je
jb
cli
cmc
loopne
pop
xchg
jp
lods
je
sahf
or
push
js
fs
jg
dec
ret
xchg
pop
lcall
pushf
pop
jns
add
mov
dec
jnp
js
jp
dec
stos
pop
lea
push
mov
pop
adc
sub
arpl
or
push
test
test
jo
cmpsl
out
adc
lahf
pop
mov
movsb
gs
jg
mov
push
fs
mov
pop
test
iret
mov
mov
sub
or
fs
pop
fsubrl
mov
jbe
pusha
xchg
mov
stos
gs
inc
std
mov
sbbl
clc
pusha
mov
outsl
pushl
std
rolb
sbb
test
push
push
cmp
fcmove
loopne
pop
xchg
xchg
pop
cltd
sub
dec
js
rcrb
jb
push
xchg
mov
push
xorl
imul
aam
xor
gs
mov
lcall
insb
or
jbe
insb
popf
test
shl
int3
and
fs
dec
pusha
pop
fdiv
out
mov
mov
cmpsb
or
gs
std
pusha
mov
push
xchg
pcmpgtw
pop
sub
mov
sahf
lcall
fs
loope
pushf
jl
push
bound
ljmp
jmp
add
popf
jo
push
pusha
addr16
insb
push
jbe
pop
outsb
pushf
jnp
xor
pop
sbb
push
pushf
pop
push
lock
cltd
mov
bound
jnp
push
popf
inc
cwtl
mov
popf
adcl
jb
dec
gs
gs
call
pusha
add
dec
orb
xchg
jl
movsw
pusha
mov
mov
pop
insb
and
push
lea
cmp
mov
icebp
sub
pusha
pop
add
lds
mov
xor
je
sahf
push
jnp
cmpsb
dec
test
pop
aam
sub
in
fcompl
xchg
int3
push
std
or
addl
gs
hlt
xor
pushf
jae
loop
sub
loop
jl
int3
xchg
fs
cltd
push
js
mov
and
jl
jmp
sub
int3
push
jbe
add
jo
andb
sub
mov
dec
test
sub
mov
or
push
pop
and
lret
add
test
add
out
js
into
outsb
push
insb
bound
imul
jecxz
lret
rcrb
mov
jg
adc
push
ljmpw
xchg
outsb
cmpsb
jb
sbb
nop
je
xchg
stos
mov
jge
mov
inc
lcall
rolb
cmp
cmpsb
xor
test
and
movsb
jbe
repnz
jmp
stos
test
rcll
jge
ljmp
jne
lret
rcrb
dec
fsubrs
fisubrl
add
int3
cmpb
mov
insl
adcb
in
sub
mov
xchg
lock
fmull
sbbb
and
mov
mov
adc
lcall
pop
ja
orb
inc
mov
arpl
andl
pop
rol
lcall
sbb
jb
ja
cmc
mov
xor
sub
clc
pusha
mov
dec
mov
cli
in
mov
dec
fadd
fsubs
jle
orb
insl
jns
push
dec
sub
and
push
jnp
push
in
outsl
push
pop
lods
dec
mov
fs
pushf
cltd
pop
mov
xchg
pop
loope
add
add
sahf
cs
lret
aad
outsb
cmpsb
in
sub
mov
cld
jg
sarl
call
push
mov
add
mov
sub
repz
jle
popf
pop
jl
add
mov
imul
xorb
xchg
lea
jg
jle
or
rolb
in
mov
push
xchg
push
ficoms
popa
int
rorl
mov
xor
pop
pop
mov
popa
test
pop
inc
mov
popa
bswap
gs
sbb
add
int
lds
mov
mov
icebp
test
mov
jmp
ret
ret
insb
fs
int3
push
jl
mov
mov
popa
fwait
rolb
pop
cltd
pusha
outsl
insb
pusha
hlt
fadds
sbb
sti
pop
or
daa
sub
pop
sbb
mov
insb
xchg
js
enter
xchg
test
mov
fs
orb
and
dec
andb
pusha
pop
or
adc
push
or
push
das
cli
push
fdivrl
jo
push
pop
data16
in
push
bound
aaa
or
xchg
mov
adc
data16
cld
sbb
inc
lods
jmp
xchg
and
and
scas
cltd
mov
pushf
sub
arpl
je
xor
add
mov
mov
xchg
push
add
xchg
int3
rcrb
inc
orl
faddl
push
ja
dec
cmc
test
dec
rorl
fs
bound
pop
insb
scas
ljmp
xchg
popf
xor
inc
xchg
dec
pusha
adc
push
fcoms
fs
xchg
popa
xlat
sub
jecxz
imul
call
nop
data16
das
js
cmpsb
pusha
xchg
ret
insl
outsb
push
pushf
ja
jecxz
mov
movsl
mov
mov
loop
and
inc
mov
add
icebp
jno
pop
cs
test
mov
pusha
faddl
jo
fs
sti
pushf
shlb
fs
es
stos
gs
sub
lods
popf
and
addl
fldenv
mov
subb
mov
pop
mov
loop
and
scas
nop
in
mov
scas
lahf
jns
stos
xorb
into
xchg
xchg
sahf
fcoml
int3
test
lock
enter
ror
aad
sti
mov
andl
cmp
jb
cmp
pushf
repnz
pop
add
xchg
xorb
shlb
out
and
xchg
frstor
mov
outsl
test
adc
pop
int3
jae
jbe
xchg
mov
push
pop
mov
sub
cmp
sbb
mov
mov
fcomi
sbb
sahf
mov
jne
popa
sub
mov
js
push
test
push
jl
jp
mov
or
xor
test
push
insb
sub
ss
aas
mov
adc
and
jbe
xor
pop
insl
mov
dec
addl
scas
jbe
xchg
sarb
xchg
test
mov
mov
sahf
test
or
out
shlb
adcb
pusha
jl
sbb
mov
and
mov
stos
lds
pop
xor
push
push
imul
push
sahf
mov
fstps
divb
mov
aam
rorl
call
inc
lds
mov
shlb
pusha
mov
add
hlt
sbb
scas
rol
lret
lods
dec
int3
clc
jo
inc
mov
pushf
jmp
test
push
jl
mov
imul
sub
and
sbb
adc
or
add
cld
hlt
loope
push
jl
mov
loope
push
jl
mov
mov
lods
push
jl
mov
test
inc
loopne
xlat
imul
loope
push
jl
mov
fcompl
test
cwtl
mov
jecxz
pushf
dec
pusha
cmp
sub
pushf
or
loope
push
subb
lcall
sahf
mov
mov
movsb
push
jl
mov
test
lods
push
jl
mov
mov
mov
sub
xor
lret
lock
int
sbb
rorl
mov
icebp
ror
leave
push
jl
mov
into
pushf
iret
shl
shrl
test
jp
outsl
and
popf
dec
xchg
aam
cmp
jp
push
xchg
shl
cmp
jp
outsl
and
popf
dec
xchg
aam
cmp
pop
test
popa
xchg
call
fwait
int3
lret
stos
jbe
sarl
insl
push
jbe
xchg
lahf
loopne
push
ja
mov
mov
xchg
popf
mov
enter
stos
or
pop
inc
insb
add
call
fstl
cmp
adc
inc
clc
and
stc
fs
or
je
xchg
pusha
jnp
jmp
lret
mov
sub
mov
jl
jl
jl
jl
jl
jl
jl
jg
and
mov
jnp
jmp
scas
lret
lods
je
out
stos
jnp
jmp
cmpsb
lret
movsb
je
out
mov
and
xchg
pushf
jne
xchg
lcall
es
cs
mov
cmp
jne
movsl
dec
gs
mov
mov
addl
xchg
mov
inc
sti
mov
mov
jecxz
push
shl
outsb
xor
xchg
jle
inc
fdivl
add
pop
push
and
gs
ret
xor
fdivrs
scas
mov
mov
xchg
sarl
adc
push
push
sbb
mov
mov
pop
sub
fs
jo
js
sbb
addl
jecxz
mov
fwait
pop
or
xchg
or
cmp
push
pop
and
push
fsts
inc
jl
mov
and
push
adc
push
push
jl
mov
fcomps
lods
jl
mov
test
fs
pushf
push
jecxz
inc
jmp
enter
push
jl
mov
inc
pushf
js
loopne
loop
inc
push
jl
mov
mov
cmp
cwtl
jl
mov
je
cmp
cmp
sub
jl
mov
xor
mov
xor
xor
je
xor
fldcw
push
jl
mov
in
pushf
sub
loope
push
jl
mov
test
sub
mov
push
fistpll
pushf
cmp
loope
push
jl
mov
and
push
jl
mov
sbb
insb
sbb
cmp
rcrb
sbb
jns
mov
sbb
pop
jmp
sbb
loope
push
jl
mov
adc
adc
movhps
or
mov
in
or
or
fmuls
inc
out
orl
adc
sub
inc
xchg
pop
inc
orb
mov
adcb
insb
jg
and
sub
test
test
pop
push
push
sub
mov
int
or
jo
test
and
sub
pop
xor
pop
add
add
push
mov
xchg
mov
xchg
imul
inc
cmpsl
adc
jb
pop
inc
and
jl
push
out
sub
fdivrl
mov
or
dec
pop
mov
jns
stc
or
push
cs
adc
sbb
or
or
aam
sub
inc
sub
mov
sub
fimuls
pop
or
andb
push
or
daa
cmp
push
xorl
jge
or
xlat
mov
add
data16
lret
jb
call
in
sbbl
fdivl
fiaddl
stc
fs
rorb
test
rcll
sub
ret
mov
mov
popa
adc
cs
xor
pop
mov
mov
adc
sub
adc
insb
std
lcall
xchg
lods
dec
xchg
cmp
cmp
subb
lods
xor
adc
add
test
fcompl
in
cli
sub
adc
and
dec
into
je
lcall
js
fcmovb
or
push
mov
dec
or
cmpsl
adc
pop
sub
xchg
std
or
ss
cmp
sub
cltd
test
mov
nop
lahf
sub
adc
jg
cld
or
xor
lods
jne
add
cld
jge
jne
faddl
jno
pop
cmpsb
push
and
fmull
lods
test
dec
mov
add
adc
test
and
jl
stos
sar
pop
xor
fcmovbe
insb
push
call
fisubrl
mul
insb
in
mov
out
jle
stos
adc
and
adc
and
out
repz
loopne
push
or
inc
mov
in
mov
push
stc
sti
sti
pop
test
ljmp
data16
or
pop
js
fldl
je
enter
push
insb
cmp
push
js
stc
stos
cli
lds
popa
test
js
inc
adc
aaa
in
push
add
icebp
insb
pop
sub
push
rcll
sub
test
data16
lret
and
cs
adc
sahf
js
orl
jle
mov
cmp
pop
fnstsw
fsubl
and
mov
jle
and
and
xchg
js
mov
in
inc
cmp
imul
je
cld
inc
stos
movsl
pusha
test
or
in
or
or
adc
sub
cli
fs
sub
insb
std
mov
int3
js
cli
push
popf
sub
sub
bound
cld
das
dec
je
test
sbb
lcall
js
mov
movhps
mov
test
add
loopne
fwait
imul
call
sarl
ficoml
and
paddw
mov
jl
in
test
stos
mov
dec
dec
xchg
dec
in
int
test
or
jns
insl
xchg
test
mov
lods
cli
jg
insb
jbe
sub
cmp
outsl
inc
push
mov
sub
sub
cltd
cmp
js
xchg
sub
and
push
bound
adc
daa
or
das
dec
lods
pop
imul
push
ss
inc
shl
mov
pop
adc
ds
daa
leave
gs
adc
lcall
fs
push
dec
cmp
or
jnp
pop
jge
xchg
jno
pop
pusha
mov
mov
mov
mov
mov
mov
pop
loope
jo
xor
mov
inc
jl
mov
and
rolb
fcoml
inc
jns
dec
mov
sbb
push
jnp
js
fsubl
arpl
mov
fs
in
mov
movsb
movsb
test
pop
jle
xchg
push
pushf
sbb
outsb
lret
sub
outsb
movl
mov
popa
sar
je
xchg
js
mov
and
pop
pop
or
jg
pusha
cmp
jmp
stos
pusha
bound
in
lock
mov
ja
loopne
rcrb
jnp
pop
enter
shrb
data16
adc
mov
pusha
mov
add
push
add
mov
test
jo
cwtl
push
or
sbb
mov
xor
imul
call
or
imul
fdivr
enter
mov
imul
test
sbb
mov
jns
sub
adc
and
sbb
and
push
fsubl
cmp
push
movsb
movsb
sbb
test
daa
and
lock
or
pusha
sbb
mov
cwtl
adc
subl
cwtl
jns
or
mov
mov
jle
mov
cld
cwtl
sub
sub
push
enter
mov
stc
xor
js
in
in
fidivrl
push
fdivrs
bound
xor
int
rclb
inc
cmp
mov
pop
pusha
and
sub
push
das
add
mov
test
adc
mov
popf
lahf
movsl
aas
and
jno
imul
mov
fs
fwait
jge
and
adc
pop
cmp
insb
sub
add
sti
or
outsb
packssdw
imul
cmp
push
jmp
sub
or
xchg
add
inc
pop
jno
jno
fstpl
dec
pop
sbb
movsl
adc
popa
bound
pop
out
cmp
xchg
and
stos
pop
imul
popa
dec
movsb
imul
jmp
add
scas
fwait
cmpsl
test
cwtl
ret
jo
stos
rol
cmc
mov
xor
mov
push
js
xchg
pushl
enter
shr
xchg
pop
cmpsb
pop
orl
xchg
inc
xchg
sub
xchg
xchg
jo
cmp
loopne
sarl
jo
scas
or
mov
jo
lds
lds
sbb
shr
call
fnsave
les
push
push
mov
jmp
pop
notl
mov
xchg
insl
inc
js
mov
nop
add
mov
sarl
test
lods
mov
int3
out
je
test
xor
dec
lods
lret
mov
cltd
mov
sahf
mov
shlb
xlat
dec
popf
pop
cwtl
fildll
mov
call
cmp
andl
repz
inc
lcall
and
movsb
test
mov
lds
stos
mov
pop
repnz
lahf
fdivs
shrb
mov
js
ja
cmpsl
pushf
push
movsb
popf
xchg
test
js
sahf
or
rclb
pop
mov
cmpsb
test
adc
gs
pop
lea
scas
enter
push
jge
adcl
pop
dec
ror
mov
rcll
scas
mov
cwtl
add
jle
cwtl
inc
enter
test
call
mov
mov
or
lds
sub
mov
das
fwait
cwtl
sub
test
daa
js
or
mov
sbb
scas
lret
xlat
xor
mov
insl
std
xchg
pop
int
xchg
jo
je
mov
imul
lods
arpl
push
les
out
out
pop
out
movsb
mov
std
cmp
testb
popa
shl
stos
fdivrp
sub
sti
cmp
int
push
dec
pop
sbb
int3
js
cmp
int
ja
mov
lods
pop
outsb
cmp
mov
jne
daa
mov
sahf
push
dec
movsl
pusha
sti
cmpb
outsl
xchg
out
ljmp
adc
enter
bound
sbb
bound
sub
pop
movsl
fdivrs
sub
sub
push
pop
loopne
negb
mov
bound
mov
mov
cmpl
popa
loopne
fdivrl
aam
sarb
pushf
sarb
cwtl
mov
test
je
jo
insb
push
sbb
loope
push
jp
mov
dec
mov
mov
and
sub
loope
push
jl
mov
in
pushf
in
loope
insl
aas
xor
pusha
pop
loope
push
jl
mov
pop
pushf
fs
out
popa
andl
repnz
pop
pusha
mov
insb
imul
jns
icebp
push
stos
test
subl
mov
aam
icebp
jo
push
mov
bnd
popa
push
and
mov
mov
fsin
pusha
stos
fidivrl
fucomi
fsubl
xor
and
enter
movups
movsb
js
out
jo
sbb
pop
pusha
cmp
pop
pop
mov
pause
loop
aaa
pusha
lcall
cmp
fmuls
sti
xor
fsts
pushf
cwtl
lret
mov
cli
cmp
jb
cmp
jb
call
test
and
jns
enter
cmp
mov
int3
scas
xchg
cmp
push
repnz
add
loop
xchg
xor
cwtl
push
imul
push
jl
mov
imul
loope
push
jl
mov
sbbb
jl
pushf
cmp
push
loopne
mov
lods
adc
or
push
xlat
bound
xor
das
adc
pop
mov
adc
mov
fs
in
push
xchg
hlt
ljmp
dec
loope
insb
fidivrs
fs
cli
popa
sub
mov
fsub
lea
sarb
xchg
and
dec
jle
mov
sbb
pop
insb
pop
test
or
imul
ja
push
mov
orb
jmp
cmp
loope
push
jl
mov
pushf
and
loope
push
jl
mov
js
adc
push
jl
mov
je
lock
call
mov
outsb
pushf
shrb
enter
les
jl
mov
push
push
rcrb
inc
xlat
roll
push
orb
sub
out
or
lea
loopne
jns
bound
jl
enter
pusha
xchg
out
and
ds
push
xlat
jl
call
xchg
cwtl
pushf
sahf
movsb
loope
push
jl
mov
add
push
jp
mov
jne
jp
lcall
cli
push
jl
mov
push
js
mov
jle
loope
push
jl
mov
push
pushf
and
inc
imul
mov
pushf
out
loope
push
jl
mov
push
jp
pushf
push
jl
mov
orb
mov
or
push
push
push
sub
inc
int
insl
push
pusha
pop
mov
subb
dec
mov
fcoml
pop
mov
cmp
out
pop
lcall
mov
test
loopne
sbb
push
std
insb
pushf
dec
dec
cmp
push
sahf
je
pop
push
jno
popa
fwait
adc
fwait
insl
js
pop
js
test
imul
insb
pop
ljmp
stos
lods
adc
pop
cwtl
lcall
xlat
jb
dec
push
sub
push
arpl
mov
in
pusha
je
fucomip
out
call
ljmp
pop
jl
mov
scas
adc
inc
sahf
mov
pushf
mov
add
cmp
sub
mov
test
mov
sti
popf
enter
enter
jp
push
stos
in
mov
stc
jo
pusha
mov
in
jle
mov
sbbl
loopne
pop
enter
adc
hlt
or
jl
push
fsubrs
lock
clc
js
push
sahf
jno
pop
pop
and
mov
jbe
and
pop
sbb
cmpsb
sbb
testb
sbb
mov
push
jge
jb
cmpsl
jno
aam
pop
leave
out
das
in
fwait
pop
in
addl
clc
pushf
inc
fsts
adc
daa
push
mov
fadd
push
cmp
inc
pop
fsubs
lahf
adc
add
lods
jg
in
enter
lcall
push
pop
inc
add
pop
cmp
addl
add
sub
sbb
inc
ljmp
dec
add
mov
popf
mov
pop
incb
clc
jno
sti
sahf
gs
outsl
data16
fidivrs
mov
lcall
adc
inc
stos
aad
cmp
clc
jecxz
ljmp
stc
js
lods
std
in
pop
mov
js
jge
loope
push
xor
jg
pop
cli
and
and
pop
out
js
pop
stos
mov
push
jb
and
push
leave
xchg
bound
sti
enter
sbb
cmpsl
in
push
dec
dec
sbb
pop
test
movaps
dec
pop
sub
fcompl
call
inc
pop
cwtl
decb
rol
pop
adc
pop
mov
pop
sub
sbb
push
loopne
mov
and
cmp
xchg
push
in
in
and
cmp
and
sbb
mov
popf
add
sbb
cmp
adc
xchg
mov
lods
mov
or
aam
adc
in
pop
push
ljmp
data16
inc
xchg
mov
adcb
add
cmp
mov
xor
pop
and
pop
lods
iret
fistl
fsts
jno
mov
add
xchg
jns
sub
adc
das
xchg
xor
mov
jae
or
fdivrp
pop
cmp
fcompl
icebp
int
xor
je
jnp
mov
pop
call
push
sbb
pop
cli
or
pop
imul
punpckhbw
jge
cmp
mov
ret
mov
sbb
sbb
push
inc
push
jbe
pop
aas
loopne
scas
jmp
fstpt
cmpsb
mov
out
pop
pop
in
aad
mov
mull
sub
pop
xor
dec
lahf
je
gs
bnd
push
nop
xchg
enter
lahf
xchg
cmp
fisttpl
sub
inc
lock
fisubs
mov
lret
jae
movsl
insb
negb
int3
cmc
cmpsl
insb
xchg
pop
cltd
or
test
insb
inc
pop
fildl
test
into
fimuls
insb
aas
pop
dec
gs
stos
insb
daa
movsb
pop
dec
nop
sti
stos
pop
xorb
ror
mov
mov
jmp
rcl
mov
pop
push
bound
imulb
je
mov
jbe
aad
test
mov
push
or
pusha
je
test
push
cld
je
xchg
insb
subl
pusha
xchg
mov
fisubs
pusha
mov
adc
test
cmp
cmpsb
fwait
mov
push
cmp
lcall
sar
lcall
xor
outsb
sarl
cmp
loope
cmpsl
jmp
jo
cmp
mov
sti
push
repz
mov
scas
je
inc
je
push
sub
cltd
stos
or
push
lret
js
outsb
sahf
adc
jns
outsl
lahf
jns
jp
xchg
or
cwtl
push
ret
clc
cwtl
jl
cmp
les
mov
jecxz
xchg
repz
pop
jp
dec
jge
scas
lcall
jnp
int
clc
xchg
data16
pop
mov
lahf
dec
test
xchg
out
scas
dec
pusha
xchg
mov
mov
mov
push
pop
fmull
or
test
fwait
mov
mov
jnp
push
daa
dec
fwait
pop
lahf
pop
jl
xchg
add
mov
xchg
cmp
ret
scas
pop
bnd
mull
ljmp
cltd
add
frstor
lods
out
test
movl
push
lods
ja
nop
mov
popa
lahf
sahf
sub
nop
ljmp
sub
pusha
mov
dec
movsl
mov
pusha
lret
jns
cmpsl
mov
jp
mov
mov
loope
stos
mov
popa
jmp
pushf
mov
sti
loope
jecxz
bound
loopne
loop
in
nop
mov
jno
cmp
pop
repnz
jmp
addr16
xor
add
hlt
jne
jge
sbb
mov
hlt
jnp
pop
jbe
add
movsb
sub
arpl
je
mov
idivb
sbb
sbbb
mov
xchg
and
sarb
fsubp
mov
adc
fidivrs
xchg
jo
test
arpl
or
faddl
mov
xchg
maskmovq
negl
inc
jl
mov
sbb
dec
add
cltd
mov
sub
addl
and
in
inc
clc
sbb
push
mov
sbb
sbb
cmp
call
popa
shr
jnp
fs
je
clc
push
stc
bt
sub
cmp
bt
pusha
cmp
cmp
push
mov
pushf
movw
lea
ja
push
stc
pushl
imul
mov
jmp
call
sbbl
mov
jno
cmp
dec
mov
cmp
mov
dec
pop
and
inc
xor
scas
enter
iret
pop
in
adc
and
push
jge
sti
call
mov
andl
mov
push
fildl
orb
adc
xchg
push
jno
push
into
pop
dec
mov
pop
cmp
sub
ss
fcoms
in
test
out
aam
lahf
sbb
xchg
or
add
sbb
jl
mov
mov
and
out
fadds
mov
jno
fimull
pop
xor
mov
out
fistl
jo
enter
out
addr16
dec
adc
jle
inc
xchg
xchg
scas
lret
jp
xorl
pshufw
fstpt
mul
lcall
mov
int3
stc
pop
popa
dec
ret
pop
push
daa
or
mov
movsl
mov
cld
rcrl
loopne
jae
sar
or
jno
mov
cmp
xchg
sbb
adc
jno
cmpsb
cld
push
cmp
or
dec
push
sbb
and
andb
cmpsl
xor
dec
jl
loope
mov
pop
dec
jne
arpl
pop
jne
mov
gs
push
ds
insl
cmp
xor
std
popf
xor
mov
cmp
pop
subb
int3
not
sbb
adc
ficoml
push
pop
in
cmovle
pop
push
cmp
push
daa
jle
imul
pop
jno
mov
pushf
lea
jmp
pushf
pushf
lea
call
pushf
lea
jae
setns
pusha
setnp
mov
not
sets
inc
call
jl
mov
shll
fs
pop
fisttpll
std
sbb
mov
aas
cmp
pop
xor
test
push
test
cmpsl
jecxz
loope
in
aad
shl
fstl
inc
add
mov
mov
pusha
dec
inc
push
and
pushf
xchg
lea
mov
adc
adc
mov
stc
add
jo
cmc
push
sbb
ror
or
pusha
mov
push
cmp
sub
call
ljmp
hlt
jns
cltd
loopne
xor
sub
jge
pop
cmc
push
std
ljmp
sbb
dec
shll
dec
pop
push
popf
lods
push
pop
les
or
lods
fwait
outsb
bound
and
inc
jns
popa
pop
cmp
pop
out
sarb
push
fldl
bound
and
repz
sbb
shl
fdivrl
test
mov
mov
pushf
cmpsl
jge
pop
jno
mov
push
dec
aas
inc
lret
outsb
testl
iret
hlt
rol
sbb
xchg
pop
les
dec
mov
inc
or
outsl
jp
imul
fldt
mov
mov
loope
pop
out
adc
push
inc
push
ficompl
mov
mov
inc
xor
popa
push
sbb
cmp
and
in
nop
or
movsb
stc
test
loop
dec
mov
jno
fsubl
int3
mov
dec
int3
mov
mov
mov
sub
scas
fcomps
pop
push
aas
push
pop
inc
adc
negb
sub
jg
xchg
or
mov
cmp
in
sub
push
fimuls
bound
imul
and
cmp
push
dec
jmpw
mov
xchg
xlat
mov
out
repnz
scas
hlt
aad
in
mov
je
or
sbb
ja
mov
sarb
cmp
mov
jns
ficompl
jl
and
push
gs
in
out
cld
shlb
xchg
call
stos
adc
repnz
or
xchg
or
inc
cli
xchg
cmp
sub
jns
lcall
pop
je
pop
imul
push
ds
js
xor
mov
in
sub
inc
fcoms
mov
in
lock
or
arpl
xor
or
insb
mov
or
add
adc
insl
lock
movsb
std
fsubr
mov
xchg
jne
push
fistpl
inc
sub
push
repz
mov
paddsw
and
stos
xor
mov
mov
sbb
sahf
xor
adcb
jns
jae
ss
mov
and
ljmp
pusha
movsl
xchg
mov
lock
sarb
push
rorl
lret
push
push
in
fdivr
mov
dec
out
ficompl
into
xchg
cmpsb
notl
sbb
iret
sbb
inc
mov
scas
stos
cmp
or
scas
mov
sbb
int
mov
sbb
mov
std
lcall
mov
mov
push
movl
xor
add
test
rcr
jno
imul
pusha
cwtl
mov
clc
mov
test
fstl
xchg
fidivs
das
add
pop
orps
pop
cmp
pop
bound
lock
lods
js
inc
dec
xor
cs
insb
add
and
pop
and
and
xor
pop
movsb
mov
and
popf
test
rclb
push
imul
push
ss
add
jmp
sbb
popa
sub
call
jno
or
mov
xor
and
adc
cmp
mov
shll
xchg
lods
lahf
mov
xchg
jl
cmp
xchg
add
add
dec
js
push
icebp
adc
jo
inc
xlat
push
pushf
jb
pop
jno
mov
mov
cmp
fs
xor
xor
jb
add
mov
inc
sub
fistps
xor
jle
pop
fs
mov
push
cmp
push
rcrl
nop
add
sbb
rorl
xor
out
test
repz
sbb
pop
dec
in
aad
mov
push
adc
popf
rclb
lcall
in
sbb
enter
adc
dec
sub
sub
ds
js
call
xor
mov
and
push
jg
mov
lahf
ret
mov
movl
daa
dec
jno
and
mov
sbb
jmp
js
es
pop
mov
dec
adc
sbb
scas
lea
testb
ja
iret
popf
mov
cmp
jnp
pop
mov
mov
lret
out
repz
mov
adc
xchg
lods
js
clc
test
mov
jmp
movb
call
xor
jmp
pop
cmp
mov
mov
dec
leave
mov
inc
xor
inc
ljmp
scas
cmp
and
add
gs
adc
or
add
inc
inc
xor
je
pop
xor
mov
sbb
inc
dec
aaa
push
outsl
sub
enter
sbb
cmpsb
loopne
add
sbb
cmp
lock
sbb
pop
or
pop
jb
outsb
and
lea
dec
movsb
test
cltd
mov
add
and
fidivrl
arpl
arpl
sub
repz
movsb
and
mov
int
rcrl
roll
int3
or
push
xor
mov
out
aam
es
sar
adc
mov
and
or
ja
push
sub
adc
sbb
inc
jp
test
out
mov
lods
jmp
xor
test
or
call
or
adc
pop
jno
mov
divl
cmpsb
rorl
scas
out
mov
in
xchg
ljmp
and
popf
mov
push
aam
mov
add
pop
das
int3
std
dec
sbb
cmp
push
adc
inc
jle
nop
int
rcrl
sahf
push
and
cld
lret
sar
test
rcll
lock
jne
and
xor
je
iret
mov
push
mov
sbb
xchg
mov
adc
jp
jbe
pop
and
push
imul
lds
xor
cld
add
pop
pop
sti
sahf
fiaddl
inc
dec
test
or
jmp
data16
dec
jns
or
dec
and
fimuls
cmp
nop
stc
pop
and
test
mov
or
stos
xor
fbld
ret
and
clc
sub
pusha
in
jbe
imul
sub
or
sbb
es
mov
pop
and
fs
int3
outsl
or
adc
mov
jno
mov
lods
fcmovnb
add
out
lret
and
mov
je
mov
dec
sub
mov
cwtl
add
adc
and
pop
cmp
in
fmull
pop
push
cmp
sub
lods
lock
sub
pop
jecxz
jns
gs
xor
push
ret
test
sub
inc
adc
jb
or
movsb
sbb
std
outsb
popa
cmpsl
pop
push
xchg
sbb
adc
jae
xchg
mov
cwtl
cmc
aas
roll
iret
test
add
shrl
cltd
pop
scas
int
xchg
nop
clc
into
mov
pop
pop
mov
adc
cli
inc
mov
cmp
enter
push
mov
jne
stos
fiadds
stc
out
cmc
or
in
scas
es
aaa
jno
pusha
mov
jg
cltd
cmp
out
addb
loop
cmp
push
xor
add
jnp
dec
arpl
lock
nop
ja
push
add
mov
test
sub
sub
pop
rcrb
or
xor
decb
and
out
daa
jmp
ficoms
cwtl
loope
mov
mov
or
mov
inc
shrl
leave
imul
out
push
xchg
push
pop
movsb
pop
addr16
and
dec
sahf
push
shll
push
bound
cwtl
rcl
rorl
daa
pop
jp
mov
push
cli
mov
sti
les
cmpsl
cmpb
jbe
cmp
pop
gs
ljmp
and
jb
subb
mov
aad
rorl
mov
or
shl
push
sbb
neg
movzbl
mov
bsf
rcl
pushf
mov
btr
ror
sbb
mov
call
jmp
pushf
adc
lea
pushf
jmp
mov
add
xchg
fwait
sbb
imul
ss
inc
dec
ljmp
push
popl
loope
xor
or
in
mov
fimuls
mov
jp
inc
fstl
repnz
in
pop
stos
call
adc
mov
mov
into
movsl
xchg
addr16
mov
xchg
arpl
pop
xor
cmpsb
mov
dec
and
int
sub
jae
movsl
in
pushf
fstl
leave
nop
lods
xchg
jns
out
xor
and
stc
ret
pop
jno
push
sub
cwtl
sbb
push
sahf
lods
inc
ljmp
mov
sub
pop
scas
inc
loopne
shlb
push
icebp
lret
xor
adc
rcr
mov
imul
out
mov
in
xor
mov
sbb
add
mov
pop
loope
dec
out
test
test
lods
cmc
mov
sub
int
jnp
mov
and
jne
jmp
clc
call
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
jno
pop
outsb
out
dec
pop
das
inc
jecxz
out
cmovle
lret
repz
mov
stos
jns
stos
into
lret
aas
inc
int
mov
aas
data16
pop
hlt
xchg
lods
sbbl
jo
pop
ljmp
pop
sbbb
add
popf
mov
popf
jbe
cmpb
sbb
push
mov
les
sub
sbb
dec
mov
mov
push
and
push
xor
jmp
in
sar
rcrl
rorl
inc
dec
jnp,pt
mov
call
jmp
je
inc
fnstsw
adcb
mov
sbb
enter
mov
fchs
in
nop
adc
dec
test
push
inc
sbb
fldt
hlt
mov
leave
push
cmpsb
aam
xor
add
mov
in
imul
ja
mov
js
outsb
or
fisttpl
xchg
sbb
pop
push
xchg
mov
adc
popf
in
fists
inc
sbb
imul
jp
jbe
fs
das
repnz
lret
mov
movb
lea
ja
rcr
ror
or
xor
sub
shrd
add
shrd
mov
and
cmc
mov
cmc
jmp
jmp
jmp
adc
cld
roll
sub
shrl
test
daa
sbb
mov
orl
jmp
dec
add
ss
cwtl
int
mov
test
inc
jns
sub
popa
sub
std
xor
cmc
fisttps
jbe
pop
outsl
test
ret
in
add
cmp
call
push
popa
cmp
mov
lcall
mov
add
jns
dec
insb
fstpl
sub
pop
pop
sbb
jne
jne
fdivr
dec
push
mov
mov
fstl
cmp
in
std
in
dec
inc
ret
fcompl
test
outsb
push
jecxz
adc
jne
outsb
xchg
test
push
sub
insb
inc
push
jne
or
and
or
jle
jmp
push
lea
je
test
bt
push
clc
add
pushf
cmp
jmp
movl
test
cmp
pusha
lea
jae
lea
jmp
inc
js
ret
pop
jno
mov
in
imul
imul
mov
inc
in
pop
cltd
sub
jl
inc
push
jge
lret
jp
push
imul
add
mov
xchg
movsb
in
shrl
cwtl
stc
ret
inc
orl
add
mov
mov
in
fidivs
lahf
movsbl
pushf
sub
bsr
shl
lea
mov
movb
sub
test
cmc
call
mov
lea
call
pushf
pushl
call
cld
popf
les
jno
imul
popf
adc
test
cmpb
pop
pop
fdivl
cmp
pop
pusha
pop
sub
test
mov
mov
jne
push
test
pop
mov
mov
push
xor
add
jb
push
sub
jp
out
dec
sbb
cmp
call
and
ja
mov
jmp
xchg
lods
ja
pop
jno
fs
cwtl
cmp
cld
sub
push
daa
or
sbb
sahf
popf
jmp
push
aam
popa
mov
push
mov
mov
mov
push
inc
cs
add
shlb
add
sub
jb
adc
mov
lods
jmp
mov
lea
clc
bound
lds
jno
sbb
fwait
ds
lret
push
jp
jnp
jb
ss
out
aad
pop
pushf
daa
dec
aad
pusha
rcl
sub
sbb
push
dec
cltd
jmp
dec
ss
outsb
sub
stc
into
ret
aam
xchg
mov
sbb
stos
aad
mov
out
rcrb
dec
sub
pop
sbb
adc
or
cli
gs
inc
adc
mov
pop
jno
lret
arpl
imul
lret
mov
mov
jmp
ds
xchg
cmp
cmpsb
daa
push
xor
dec
mov
sub
inc
cli
sub
sti
xchg
test
sub
enter
js
test
cmc
cmp
dec
lret
cld
lds
xor
sub
gs
push
or
adc
scas
cli
mov
inc
or
and
inc
adc
mov
push
or
pushl
call
adc
jno
ret
mov
jae
fwait
mov
add
fcomip
call
add
fcmovnu
and
or
fcomi
push
mov
cmp
or
jno
dec
je
adc
outsl
dec
sbb
ds
pop
cltd
mov
pop
movb
sub
ds
pop
sub
loop
or
add
andl
outsb
inc
push
sub
jmp
adc
push
push
pop
dec
jae
dec
sub
ret
xchg
xor
pop
jle
inc
adc
push
cli
popa
or
fdivrp
jecxz
dec
and
jne
lcall
sub
shlb
pop
add
inc
sbb
fwait
pop
xlat
pop
xor
cmp
and
inc
add
push
pop
sub
dec
data16
jb
es
jle
mov
adc
pusha
lea
je
cmc
or
jmp
adc
daa
test
pop
int
lds
nop
jle
jge
sarb
popf
incl
add
or
rorl
je
test
mov
mov
bound
outsl
fidivl
shlb
stc
cmp
lock
call
sbb
shlb
and
pushf
lea
jmp
push
mov
movzbw
mov
not
jmp
jge
push
movl
int3
insl
cld
xchg
adc
call
ret
ret
in
jne
mov
lds
or
les
iret
xor
aas
bound
outsl
xor
inc
das
jns
rcrl
or
push
jnp
dec
sub
mov
inc
in
cmp
out
test
clc
cmp
lret
mov
mov
mov
mov
add
lods
hlt
movsl
lock
lods
loopne
in
pop
cmpl
lea
ja
cmc
ror
sub
bt
add
bts
rol
add
shr
not
bswap
not
mov
ror
mov
test
bt
jmp
pop
pushf
mov
cwtl
mov
lea
jmp
pusha
cli
ror
pop
jno
sahf
adc
ret
stos
and
mov
push
add
imul
hlt
iret
inc
push
in
in
xchg
in
dec
sbb
add
jge
jmp
stc
xchg
or
mov
inc
push
test
lods
add
push
sub
stos
and
cmpsl
sar
fs
iret
xchg
out
mov
sbb
jmp
icebp
adc
ret
pop
jo
adc
inc
add
cmovle
inc
pop
lea
mov
ret
push
inc
pushf
inc
ror
rol
xchg
clc
mov
or
bt
mov
clc
jmp
jae
jmp
jmp
push
mov
mov
pushl
ret
call
stc
sub
bt
cmp
pusha
jmp
pushf
cmc
cmpb
push
lea
jne
rcr
cmp
mov
stc
bt
add
cmc
test
movzwl
cmp
shld
rcr
mov
stc
cmc
add
cmc
test
stc
bt
mov
clc
clc
test
pusha
lea
jno
je
push
jmp
add
dec
data16
je
imul
dec
jb
inc
js
ret
lret
pop
rolb
int3
mov
mov
jns
jno
mov
sbb
pop
add
test
pop
xchg
xchg
adc
js
sahf
fildll
lret
nop
scas
iret
xchg
aas
cwtl
rep
jle
dec
inc
test
pop
outsb
sub
inc
or
mov
vpshuflw
ja
jb
and
lret
sub
mov
outsl
nop
loope
cmp
dec
jno
inc
jo
outsl
dec
out
dec
xor
push
sbb
mov
push
movb
pushf
pushl
ret
mov
mov
je
mov
pusha
adc
mov
insb
dec
jp
idiv
jbe
and
enter
leave
push
xor
loopne
out
data16
add
imul
shlb
add
outsb
arpl
dec
je
adcl
inc
mov
shrl
adc
out
sbb
lds
stos
cmp
pop
and
arpl
dec
xor
jle
pop
imul
mov
fbld
jp
push
loop
pop
ret
jmp
mov
xchg
neg
in
mov
inc
outsl
lods
loop
stos
lret
pop
jno
pop
es
dec
push
call
notb
int3
not
int
aad
neg
dec
cmpsl
ja
inc
lret
lahf
lret
leave
aam
jp
movsl
outsb
fsubs
in
lret
xchg
test
shlb
xor
xor
div
xchg
orl
sub
je
xor
fs
sub
pop
push
out
jb
xor
push
push
cmp
pop
jno
hlt
popf
lock
call
jne
cltd
mov
rol
push
int
out
loop
fiaddl
or
shll
mov
sub
fsubr
or
ds
sahf
add
add
sbb
out
fdivl
nop
icebp
fistpl
inc
sbb
outsb
cmp
js
fnclex
mov
clc
rorb
jns
jge
add
push
jns
dec
shll
repz
out
jp
je
and
jae
call
dec
pop
int3
pop
jno
jecxz
xsave
dec
cmp
sti
into
jmp
mov
dec
pop
push
pop
pop
xor
pop
pusha
pop
pusha
pop
and
aad
out
fwait
xchg
pop
jl
add
push
testb
pop
pushf
sti
fsubs
sub
int3
xchg
pop
cmp
jmp
hlt
xchg
jbe
jbe
mov
add
push
lods
xor
scas
pop
cmc
push
adc
sub
push
push
daa
jle
dec
shlb
lods
xchg
rolb
call
call
pusha
movl
mov
movw
pushf
movb
lea
jmp
pusha
lea
jb
push
jmp
inc
sbb
int3
pop
jno
xor
mov
jmp
negl
dec
ret
cmpsl
int3
arpl
push
jmp
or
sbb
imul
lcall
xchg
fcmove
roll
adc
xchg
add
mov
out
dec
xor
xchg
xor
inc
int
enter
stc
push
mov
mov
xchg
lock
mov
hlt
int
movsl
je
iret
dec
pop
ss
push
xchg
loop
idivb
mov
xchg
cli
jae
jns
mov
int3
pop
rcl
pop
bnd
data16
mov
roll
mov
ss
inc
and
mov
dec
pop
sub
js
add
icebp
insb
in
push
scas
add
imul
orl
repnz
stos
outsl
add
push
sbb
aam
aam
mov
ljmp
push
cmp
or
push
jle
jl
pusha
add
jno
jne
or
add
xchg
fwait
push
sub
aad
jmp
into
pop
jno
ljmp
xchg
push
stos
addr16
mov
sahf
aad
xlat
js
dec
inc
out
imul
mov
inc
sbb
daa
iret
ret
push
in
xor
mov
in
mov
mov
jl
jle
jo
clc
mov
cmpsb
jg
xchg
jno
inc
add
adc
jns
mov
stos
out
idivb
sahf
add
mov
cmc
mov
push
pusha
call
mov
jno
cmpsl
into
push
imulb
fwait
push
outsl
cli
imul
ljmp
sub
jbe
shlb
jmp
sbbb
push
test
jnp
pminsw
xchg
loopne
inc
inc
pop
out
pop
cmp
xchg
scas
xchg
and
pop
inc
mov
pop
xchg
xchg
push
inc
push
call
sbb
movsl
je
incb
repz
enter
mov
imul
jp
jb
push
push
push
cmp
dec
and
sub
mov
pop
jno
jnp
xlat
inc
ljmp
test
repnz
les
jge
cmpsb
leave
push
adc
mov
sub
inc
imul
sbb
pop
sub
call
mov
push
movsb
lcall
xlat
ss
sub
xor
or
cmp
mov
int3
inc
fsubrp
ja
inc
pop
and
adc
inc
mov
shr
adc
xor
out
jl
jecxz
insb
repz
arpl
cltd
call
pop
jb
fidivs
mov
out
jno
jnp
cmc
cli
sbbl
scas
xor
jae
cmp
and
cmp
popf
jl
mov
cmc
test
test
jno
pop
jno
sbb
xor
and
sarb
inc
cmp
push
sub
outsl
fcmovnu
mov
jge
rcrb
add
inc
sub
push
repz
pop
sub
mov
dec
int3
fimuls
jge
mulb
jge
push
jnp
in
movsl
in
add
xor
nop
push
jp
stc
shrl
push
jl
adc
adc
lods
xlat
sub
or
iret
pop
jno
or
pop
aaa
pop
ret
push
mov
lcall
gs
cmp
lret
aas
mov
fs
fadd
test
xchg
or
cmp
movb
in
data16
xchg
adc
test
dec
jle
mov
jb
jnp
fldl
je
mov
push
mov
xchg
sbbl
data16
fidivrl
pusha
lea
push
sub
sub
push
sbb
pop
sbb
mov
es
mov
and
cmc
mov
sar
add
pushf
pushl
rol
mov
bt
test
movb
pusha
lea
jmp
movzbw
test
movzbw
mov
dec
push
clc
cmp
mov
call
das
jne
roll
jno
jle
xor
adc
xor
cs
fadds
add
fdivp
popa
rorb
cmp
sub
test
push
push
or
xchg
sti
mov
clc
leave
xchg
mov
cwtl
int
add
sub
fidivs
mov
xlat
pop
iret
mov
jecxz
fbld
icebp
pop
and
jbe
add
lret
enter
bound
xchg
xor
and
loopne
cmp
inc
ds
adc
mov
insl
sbb
xchg
icebp
scas
inc
movsb
xabort
sahf
ret
fwait
sbb
cltd
fnstcw
xor
push
cmp
fisttpl
and
outsl
add
sbb
adc
or
in
je
pop
sub
cld
lea
xlat
ds
jae
push
push
inc
push
jg
add
arpl
mov
xor
jg,pn
fptan
scas
pushf
lea
jne
call
push
push
inc
push
xor
cs
insb
add
fisubs
sti
pop
iret
dec
lret
push
and
aas
push
pop
js
les
das
outsl
loop
int
jb
fwait
int3
cmpsb
lahf
and
xlat
lahf
xor
add
lret
push
xor
roll
sub
and
or
ljmp
std
add
or
sub
mov
je
outsb
sub
xchg
lods
icebp
mov
int3
xchg
test
int3
xlat
mov
inc
sarb
mov
jno
aaa
cmpsb
add
jp
xchg
jle
mov
fmul
enter
pop
and
push
into
in
dec
test
enter
cmpsl
lea
outsl
loop
repnz
mov
cwtl
mov
out
test
call
sbb
lahf
faddl
movsb
das
dec
adc
pop
xchg
add
mov
jge
pop
es
test
fisubrs
std
xlat
test
mov
loope
and
sarb
xchg
lret
pushl
pusha
lea
jae
call
xor
roll
jno
adc
sbb
sbb
sub
sbb
or
mov
pop
sub
popf
add
sub
jb
adc
jnp
sub
cmp
dec
add
repz
negb
loopne
out
jecxz
pop
fdivrs
sbb
fstps
inc
sub
or
xor
gs
sti
decl
ret
mov
adc
jecxz
imul
xchg
mov
mov
xchg
ret
clc
xlat
mov
sub
xchg
inc
aam
jno
fidivrl
fwait
loop
push
mov
imul
ret
in
cltd
xchg
xor
iret
fsubrs
xchg
repnz
and
adc
repz
stos
push
jne
sub
inc
push
cld
pop
mov
sti
test
mov
mov
in
push
xor
mov
mov
mov
movsl
add
sbb
mov
push
and
out
ja
sbb
mov
dec
aaa
jae
test
lock
subb
mov
out
jne
ret
aam
jno
cmp
pop
dec
fisttpll
popf
mov
shr
add
sub
fisubs
sarb
or
push
pop
insl
mov
insb
mov
add
xchg
and
imul
mov
jg
lret
fnstenv
xchg
jl
das
mov
loope
xchg
pop
mov
jbe
popf
repz
pop
lock
jge
jb
fdivp
lock
cmp
jp
sbb
pop
jbe
loop
repnz
xchg
or
stc
lea
outsl
jg
in
insb
push
aaa
jbe
fdivrs
rorl
inc
in
sahf
stos
sbb
xchg
aaa
jbe
jp
push
das
jbe
push
imul
js
int3
shlb
mov
xor
pop
jno
mov
nop
std
xchg
adc
je
test
push
insl
sub
pusha
enter
sbb
ljmp
fisubs
mov
pop
xchg
xorl
mov
test
mov
pop
sti
ss
pop
or
outsl
cli
fwait
jne
sahf
jmp
mov
xor
lds
xor
xchg
mov
in
test
movsb
xchg
mov
lcall
mov
jmp
aam
and
pop
jno
popa
in
xchg
sbb
cmp
jl
ljmp
divl
pop
mov
add
push
aad
xchg
mov
xor
adc
jg
adc
daa
leave
iret
out
pop
sbb
in
in
into
adc
mov
inc
xchg
cs
stc
add
cmpsl
cmp
jecxz
pop
fidivl
push
shrl
push
arpl
dec
xor
sbb
add
fs
sub
stos
mov
xchg
ret
mov
dec
lods
mov
add
push
push
dec
outsl
je
data16
arpl
inc
add
jno
and
and
out
mov
inc
fstp
mov
mov
and
mov
in
jne
xor
std
push
sub
sub
aaa
dec
fneni(8087
aas
lret
dec
and
inc
outsl
pop
sbb
dec
jne
mov
popa
pop
mov
mov
test
addr16
pop
cmpsl
push
enter
das
sub
mov
imul
lret
mov
mov
or
or
mov
dec
cmc
shld
btc
btr
mov
push
push
sub
jae
add
jmp
adc
xlat
pop
jno
popf
lock
cld
mov
xchg
add
in
sahf
inc
scas
mov
mov
addr16
test
scas
push
shll
and
lret
cmpsb
or
ret
cmp
and
xchg
test
into
mov
xchg
mov
imul
mov
pop
or
clc
ja
fcomi
pusha
cli
rol
sub
test
loopne
xchg
mov
adc
insl
pop
sbb
add
adc
sahf
mov
cmp
shr
cmp
fs
call
pusha
jmp
sub
fadds
jno
adc
add
sarb
loope
cli
rcrb
pop
jl
into
push
push
and
rcrl
add
test
jbe
imul
xchg
xchg
vmulpd
mov
sub
rcr
push
cmp
or
xchg
jnp
cmp
js
push
sbb
adc
test
ss
jl
sbb
cld
movsl
rol
lods
xchg
and
repnz
leave
clc
mov
adc
les
pop
movsb
lds
push
cmp
jmp
dec
xchg
movsb
xchg
fwait
push
add
mov
cmp
pop
mov
jo
or
jg
pop
lods
les
aas
cli
sbb
mov
or
add
jnp
lock
cs
aam
mov
popf
pop
pushf
dec
stc
outsb
int
jmp
mov
add
bound
jl
xor
data16
cmpsb
xchg
or
fldcw
jo
repnz
cli
notl
xchg
lods
insb
cltd
stos
aas
dec
in
clc
mov
push
pop
inc
cmp
add
aam
sbb
add
sub
aas
sbb
test
sbb
das
sbb
addr16
les
aas
cli
jo
push
xchg
fwait
repnz
shl
pop
hlt
repz
scas
jp
in
fiaddl
iret
xchg
pusha
or
xchg
mov
loopne
push
fsts
movsb
cmp
and
pop
sub
into
ret
dec
and
add
in
mov
cld
jb
repnz
mov
cmpsb
sbb
jmp
or
mov
sbb
aas
sbb
dec
jae
jae
dec
rcrl
sahf
scas
cmc
mov
inc
and
into
cmpsb
push
mov
xchg
xor
rol
inc
or
lea
jno
fldenv
dec
out
sub
cmp
cmpsl
mov
add
xchg
loopne
lahf
cmpsb
popf
or
notl
and
push
pcmpeqd
push
ja
mov
pop
insb
push
outsb
sub
or
push
and
test
mov
inc
xor
cmp
lahf
ds
outsb
push
and
sub
aas
popf
adc
icebp
test
pop
mov
test
xor
sub
adc
and
fiadds
jge
push
jg
ja
or
dec
es
mov
ja
rorb
jno
cmpsb
sub
int
mov
std
mov
mov
outsb
cmp
pop
push
cmp
mov
pop
bound
scas
out
push
clc
mov
out
stos
jp,pt
push
call
mov
mov
adc
inc
mov
push
pop
fdivl
imul
imul
and
idiv
pop
fwait
rorl
xchg
cmc
mov
nop
inc
fs
add
in
cmpl
aad
out
pop
xor
xor
bnd
shr
notl
lea
inc
ret
fs
mov
xor
adc
stos
nop
imul
hlt
xchg
add
push
pop
push
and
add
mov
mov
lahf
clc
mov
mov
push
fisubrl
mov
nop
dec
stc
or
pop
pop
and
mov
xor
aad
and
arpl
pop
lahf
xor
or
mov
or
mov
xchg
ret
out
push
pop
pop
ds
add
cmc
sahf
mov
or
push
sub
push
push
lods
pcmpgtd
inc
adc
xchg
xchg
insl
push
jge
mov
and
ja
arpl
and
in
je
cmp
jp
push
sbb
pusha
jae
fidivs
out
aam
cli
inc
popa
in
mov
pop
and
pop
sbb
jl
xchg
imul
imul
xchg
sbb
cmc
push
xor
mov
mov
dec
int3
fwait
popf
popa
push
jno
adc
pop
cld
popf
pop
test
adc
xchg
fwait
bound
imul
nop
pop
cli
jne
mov
out
daa
sub
adc
mov
daa
push
cmp
arpl
stos
mov
dec
out
mov
mov
cwtl
repz
sub
push
or
lret
cmpsb
leave
in
adc
inc
push
mov
xor
mov
arpl
data16
inc
rcr
orl
imul
pusha
pop
stc
cwtl
add
mov
into
xchg
pop
test
cltd
or
cmp
in
lret
pop
movsb
shrl
mov
outsl
add
jb
inc
inc
out
mov
fnstenv
fs
push
inc
cmc
popf
mov
or
enter
insl
xlat
loope
adc
xorl
dec
mov
insb
push
in
xchg
hlt
imul
adc
outsb
xlat
loope
filds
cmp
sub
loopne
lds
aas
mov
std
fsubrl
fs
ret
in
lods
mov
pushf
test
dec
cmpsl
stos
aaa
push
adc
pop
cs
aad
dec
add
mov
outsb
ja
lahf
out
out
aad
mov
push
data16
add
pop
sub
sti
xchg
int3
iret
mov
hlt
lds
rorl
dec
cmp
add
xor
dec
pop
loopne
into
mov
mov
loop
mov
js
pop
enter
pop
dec
xor
jbe
lea
inc
outsb
push
and
movsb
neg
aad
push
pop
jle
dec
and
or
inc
xor
or
jnp
ljmp
pop
jmp
dec
inc
lret
cld
jne
cld
loope
arpl
lahf
in
movsb
xchg
scas
imul
jns
jns
shll
cmp
fcomp
mov
fsubl
mov
loopne
add
xor
adc
lods
repz
ja
sbb
insl
imul
out
sahf
adc
shll
sbb
sbb
movlps
and
notl
cmpl
adc
daa
inc
add
jb
mov
xor
sub
mov
lcall
fidivs
mov
fldt
ljmp
dec
jle
adc
cld
dec
and
mov
fidivl
shrl
in
push
sub
sub
inc
or
jno
icebp
fwait
mov
movsl
mov
mov
stos
nop
imul
gs
inc
cltd
push
push
mov
hlt
push
or
push
mov
xor
push
repnz
xor
push
mov
mov
aam
repnz
pop
fs
jbe
push
jne
mov
cmp
movsl
clc
push
fstpt
sub
and
jge
test
test
bound
xchg
xor
imul
repnz
imul
jns
sub
add
imul
mov
enter
or
jmp
add
dec
cmp
xchg
je
orb
mov
stos
test
das
mov
xor
adc
ret
jo
xlat
in
icebp
add
cmc
scas
js
in
jo
stos
shl
stos
pop
mov
jmp
mov
fs
or
mov
sbb
xor
sub
les
mov
mov
fwait
lahf
adc
add
inc
sub
movsb
cmp
icebp
call
push
sbb
push
jecxz
xchg
andb
mov
imulb
gs
pop
data16
pop
xor
cld
mov
rcl
ficoms
jae
adc
cmpsb
dec
loope
or
mov
subl
sbb
jae
xchg
cmpsb
cmp
ret
test
xchg
mov
ljmp
cmpsl
stos
shl
xchg
mov
push
pop
jle
ds
add
push
jns,pt
cmpsl
push
push
lods
mov
mov
mov
and
xchg
shlb
daa
into
out
enter
jle
adc
loopne
mov
push
popf
sub
cmpsb
cmp
sbb
ret
pop
push
lds
andl
js
iret
cmc
push
aaa
lods
std
mov
adc
inc
adc
ret
scas
push
and
cmc
push
scas
cltd
xor
adc
mov
sub
cmpb
push
push
enter
xchg
sbb
or
das
lret
mov
sbb
push
jge
fimuls
mov
xchg
lret
movsb
push
fs
jo
add
push
das
push
cmc
xchg
scas
push
xor
sti
imulb
sahf
in
fiadds
push
into
fisttpl
ss
out
test
les
daa
lcall
daa
movsb
adc
inc
add
lahf
xor
mov
mov
fst
loope
nop
sti
popa
cwtl
cld
jge
and
and
xor
pop
add
bound
or
int
push
mov
push
lret
xchg
add
call
cmc
call
inc
sbb
sbb
push
dec
outsb
pop
push
jae
leave
movsb
js
mov
out
fiaddl
out
repz
jbe
in
leave
mov
fstps
inc
movsb
outsl
loop
cltd
into
push
cmp
movsl
data16
incl
lods
add
mov
mov
xor
sbb
sub
insb
loope
popf
mov
push
aam
sbb
inc
in
mov
dec
divb
cli
sub
and
jb
dec
imul
or
add
into
popf
insl
or
jnp
arpl
push
imul
js
mov
dec
cmp
stos
int
stos
lcall
pop
xchg
adc
sbb
rorl
xor
xchg
shl
shll
cmc
push
sbb
aad
stos
enter
testb
fidivl
mov
hlt
int
xchg
rorl
icebp
notl
xchg
fidivl
or
push
dec
push
cmpsl
push
repnz
mov
ret
in
and
arpl
mov
sub
sbb
adc
sbb
shlb
mov
dec
mov
or
lods
aaa
fs
push
and
bound
loop
sbbb
inc
insb
pop
xor
pop
jle
cmc
pop
mov
cmp
mov
xor
add
sub
and
mov
out
dec
dec
rorb
push
xor
pop
cmp
std
ret
inc
cwtl
xor
lock
pop
adc
gs
sbb
push
mov
enter
cmp
mov
lahf
outsb
sbb
or
loopne
lahf
loope
mov
push
push
test
seto
inc
aam
push
cld
mov
lret
cmp
adc
rcrb
jl
cmp
sti
pushf
mov
mov
in
iret
push
fstl
out
or
add
je
test
cmp
movsb
and
cltd
add
sar
push
and
sub
pop
lds
cmp
mov
mov
inc
test
clc
pop
cmp
mov
and
mov
ds
add
stos
mov
movb
lahf
cmp
mov
and
insl
ss
jge
or
pop
jle
inc
and
lahf
add
fimuls
push
xlat
inc
cmp
imul
std
movb
xor
nop
cmpsl
mov
cli
popf
fdivr
push
cmpsb
rcl
mov
mov
popa
push
imul
inc
push
mov
inc
mov
test
push
outsl
jp
push
js
out
out
lds
adc
cs
or
push
pop
ret
pop
jle
adc
hlt
shll
jae
pop
and
movsl
aas
ficoms
popa
push
lret
cld
shlb
pusha
push
pop
icebp
jl
in
ret
pop
push
sub
mov
xor
insl
or
cld
mov
ds
mov
out
sarl
sbb
fwait
mov
xchg
or
andl
mulb
lock
adc
push
cli
jne
xor
ja
adc
shlb
mov
xlat
dec
lds
lea
bound
dec
gs
xor
mov
pop
inc
push
repnz
sub
sub
out
or
push
sbb
leave
xchg
in
mov
or
stos
icebp
outsl
vmovd
rorb
in
jno
xor
inc
sbb
lds
rcrb
and
xor
inc
xlat
movsb
rorl
mov
cmp
aas
push
jg
adc
test
cwtl
cmpsl
pop
arpl
push
mov
sub
mov
mov
cli
mov
mov
cltd
fdivr
mov
pusha
std
mov
mov
jge
jg
adc
icebp
cmp
mov
stc
pop
and
test
push
dec
ds
dec
push
push
mov
push
or
jl
add
pop
inc
mov
mov
loop
mov
mov
jne
adc
xchg
lock
icebp
sbb
lcall
lret
push
pop
sub
sti
xchg
test
push
in
mov
jg
adc
in
or
push
add
aaa
xchg
aad
divb
pop
and
sub
out
repnz
or
sarb
in
and
cmp
lock
inc
cmp
in
mov
scas
enter
jmp
sub
je
aad
add
cmp
nop
pop
pop
jae
pop
cs
or
nop
pop
and
in
fs
cmp
xchg
leave
xchg
jmp
ljmp
sub
mov
xor
xchg
loope
dec
sbb
pop
iret
mov
lret
cs
inc
sub
cmp
mov
sub
jge
mov
int
movsl
or
aas
cmpsl
inc
rcll
pushf
adc
cmp
cmp
lcall
jg
xchg
lahf
ds
inc
xchg
or
adc
pusha
lahf
mov
daa
cmp
jg
icebp
push
sub
mov
pop
lods
dec
inc
lret
push
pop
cld
icebp
push
inc
enter
mov
cld
leave
xchg
pop
aaa
or
fiadds
popa
mull
scas
xor
jl
push
incb
lods
into
mov
or
mov
outsl
movsl
xchg
shrl
rorl
jl
pop
jg
lock
mov
pop
adc
sub
loope
dec
sti
rcrb
lock
sub
ret
mov
mov
mov
call
jne
mov
lahf
mov
dec
xor
xor
sbb
jb
xor
cmp
or
cmp
out
dec
xlat
ja
clc
sub
inc
sbb
jmp
or
cmp
imul
cmpsb
pop
push
ss
jo
ja
mov
mov
outsb
jecxz
cmp
pop
sbb
hlt
adc
cmp
cmp
xchg
clc
roll
or
adc
rorl
push
aas
gs
mov
adc
dec
mov
mov
test
pop
mov
jnp
je
mov
fildll
add
pop
imul
inc
jl
mov
testl
in
fwait
test
push
inc
xor
int
xor
pop
cmp
mov
iret
push
std
jmp
pusha
lar
mov
js
pop
ds
rcrb
cmpsb
jae
loopne
stos
int3
lea
lahf
add
add
inc
insb
add
je
or
fisttpl
out
mov
test
and
inc
aas
push
jg
scas
jp
mov
fs
mov
sub
sub
fs
jp
add
adc
mov
frstor
push
pop
mov
mov
pushf
xor
jns
in
xor
cmc
push
outsl
or
push
outsl
push
or
mov
loopne
lock
xor
enter
xor
pop
jb
aam
or
ss
int3
xorl
and
test
or
inc
je
pminub
xchg
fwait
cmp
inc
outsl
push
push
mov
out
in
jae
mov
push
pop
xor
fs
mov
push
lahf
ljmp
adc
imul
mov
sbb
les
ficompl
push
mov
sti
inc
cltd
jno
arpl
lret
in
sub
or
test
stos
nop
pop
push
imul
enter
arpl
shl
xchg
ljmp
cmpsl
mov
into
jmp
into
push
fcoml
dec
dec
out
not
bound
loop
and
stos
cmp
call
dec
call
es
icebp
stos
cmpsb
pop
adc
lds
ljmp
lods
dec
inc
ds
lret
sbb
aam
out
jl
sbb
mov
loop
mov
enter
daa
and
notb
and
sub
clc
fnstcw
jecxz
xorb
stos
lcall
dec
movsb
jle
add
xchg
sti
shl
fsubs
sub
das
sbb
out
outsb
repz
push
pop
xor
daa
cmp
xchg
push
imul
and
push
mul
in
test
xchg
scas
mov
daa
dec
or
stos
cmpsb
mov
dec
fwait
add
adc
adc
dec
notb
xor
xchg
dec
and
mov
fdivp
adc
mov
gs
jmp
inc
arpl
xlat
add
dec
setl
icebp
clc
or
push
imul
pusha
or
adc
out
add
cmp
lods
ret
into
push
push
sub
dec
push
lcall
push
clc
push
lret
lods
xchg
cmpsb
outsb
arpl
adc
xchg
jnp
cmp
icebp
cwtl
in
fsub
mov
popf
pop
and
pop
jo
push
pushl
push
cmp
inc
sbb
mov
xor
mov
mov
mov
push
repnz
or
les
push
insl
and
mov
aaa
dec
pop
clc
ret
jo
addl
int
inc
jmp
jmp
push
lock
insl
into
cmc
cmp
jp
jne
jne
xchg
jge
sbb
sbb
push
mov
dec
call
test
push
enter
ret
push
dec
and
fisubs
jge
cmp
ds
cmp
mov
jl
cmp
adc
js
push
negb
adc
andb
scas
xlat
out
filds
dec
aas
push
jge
inc
mov
or
fistps
and
in
xchg
les
inc
adc
testl
cmp
jo
ret
push
mov
andb
fisubrs
aam
add
adc
adc
cwtl
xor
mov
insl
cli
dec
rcrb
xor
add
push
mov
pop
les
and
xchg
cmp
xor
jl
insl
ss
int3
mov
pop
jl
xor
mov
out
cwtl
mov
scas
data16
gs
outsb
das
or
push
ret
sbb
jnp
scas
fsubrs
push
mov
cmp
out
and
test
call
xorl
andb
sarl
push
popf
out
ds
fs
jne
addr16
sbb
jecxz
fwait
lahf
add
pop
sub
orb
push
in
out
pop
pop
enter
mov
lods
xlat
fistpl
test
xchg
flds
imul
repz
pop
pop
sub
and
fdivl
js
jb
out
pop
push
jno
aaa
mov
or
push
cmp
push
inc
out
cwtl
icebp
fsub
mov
popa
jecxz
dec
aam
repnz
mov
cld
xor
push
push
cmp
loop
aaa
out
dec
loop
sbb
stos
loope
int
inc
jle
ret
popa
mov
dec
xor
inc
sbb
gs
cld
xchg
mov
push
mov
shrl
sbb
cld
xchg
or
sub
push
sub
add
add
out
xor
pop
add
sub
mov
dec
loope
cld
fldcw
inc
jl
scas
pop
sbb
iret
inc
xchg
lret
rcrb
sub
loope
dec
adc
popf
imulb
xor
xchg
cmp
push
aas
movsl
outsb
mov
adc
sub
dec
adc
jle
mov
jae
adc
pop
mov
xlat
mov
and
rcrl
dec
and
push
sbb
idivl
pop
jge
lods
or
loope
dec
popf
sahf
popa
ret
mov
mov
fsubrl
pop
aas
xchg
imul
xchg
xor
mov
aam
stos
jmp
loop
mov
scas
out
js
out
ss
mov
rclb
decl
cmp
cmp
das
cmp
pop
ds
inc
insb
pop
pop
shlb
or
jge
daa
mov
add
or
add
loope
dec
sti
rcrb
inc
addr16
test
sahf
in
outsb
push
mov
xchg
out
es
inc
out
xchg
mov
sub
inc
insb
push
cmpsl
and
or
and
xor
aam
lahf
mov
outsl
add
mov
sbb
dec
jnp
sbb
pop
mov
pop
jp
cli
ret
outsl
add
pop
ja
xchg
hlt
xchg
vmread
cmp
data16
and
out
aam
stc
xchg
xchg
xor
adc
jns
xor
fucomi
arpl
xchg
cmp
fildl
sub
push
fbstp
mov
xor
inc
dec
xor
ficompl
vmread
test
cmp
div
mov
push
jo
notb
or
mov
push
imul
inc
mov
addb
lods
jae
les
mov
fdivrl
xor
and
inc
jae
cmp
iret
clc
mov
mov
cmpsl
cmp
outsl
rcll
xor
fcmovbe
xchg
sti
mov
pusha
cmp
imul
jae
imul
jno
fidivrs
pop
xor
es
jmp
pop
or
sub
push
pop
pusha
out
sbb
fwait
sbb
adc
adcb
xchg
and
add
aad
dec
imul
inc
mov
imul
imul
shrb
in
inc
cmp
xchg
stos
xchg
jle
cmp
ret
rorb
icebp
pop
jno
xchg
or
sarb
hlt
test
imul
aaa
cld
jecxz
xor
pop
pop
shll
dec
jne
jl
sbbl
cld
mov
cmp
mov
loop
nop
cli
es
js
mov
xlat
vcvttsd2si
xchg
fs
or
add
fs
test
test
test
pushf
test
mov
xchg
sahf
mull
sbb
pop
jno
insl
int3
mov
inc
fcoml
mov
rolb
repnz
sub
aad
add
mov
push
push
xchg
test
cwtl
cmp
mov
lret
pop
into
test
sti
mov
ret
mov
nop
in
sar
insl
push
xor
cmp
fwait
test
sbb
cmpsl
loop
out
cli
ret
test
sarl
inc
jecxz
cmp
sbb
jno
mov
inc
mov
scas
push
xchg
jg
cmpsl
loop
push
ljmp
sub
push
es
or
adc
js
cmp
xchg
push
inc
push
jge
in
sbb
cmpl
adc
inc
orl
loop
and
lods
xchg
jno
adc
jge
es
sahf
cmpsb
mov
leave
cmpsb
lret
subb
pushl
test
push
jns
push
lea
ja
call
not
test
stc
pushf
bt
add
pusha
pushl
stc
test
not
cmc
add
cmp
movl
clc
shr
push
jmp
test
pushf
pusha
pushl
lea
je
shl
bt
neg
shrd
add
pushf
test
or
shl
mov
cmp
add
cmc
test
pushl
mov
lea
stc
btc
shld
mov
test
push
pushf
cmp
pushf
lea
jbe
adc
jmp
inc
jg
repz
jno
pop
dec
iret
cmpsb
fistpl
xchg
out
pop
xchg
rcrl
bound
lahf
add
std
push
pop
pop
jp
sub
cwtl
iret
mov
mov
jg
or
inc
imul
loope
mov
jg
mov
dec
xor
faddp
aad
mov
mov
sub
xchg
insl
sbb
dec
fs
sbb
xor
fs
xor
xchg
fldlg2
jg
jns
hlt
pop
jno
push
aas
mov
sti
outsb
sbb
mov
out
setle
and
dec
lds
lods
xor
adcb
mov
loop
xchg
mov
stc
hlt
sub
mov
mov
dec
repz
cmp
test
and
andb
rcl
push
and
cmp
push
xor
add
adc
rcrl
cltd
push
outsl
push
sbb
pop
jno
push
rorl
test
pop
xor
jecxz
mov
add
pop
pusha
xor
ror
rcrl
jle
xlat
mov
dec
lock
cli
addr16
add
inc
rcrb
fnstsw
out
cmpsl
lea
mov
mov
in
out
mov
jne
rcrb
inc
jo
jl
sbb
sub
add
adc
fwait
mov
add
adc
mov
lea
divl
jnp
ds
lods
les
inc
sarb
in
push
sub
pushl
aas
push
test
lea
xor
jbe
mov
stc
xchg
jmp
ljmp
mov
icebp
stos
push
jae
jnp
mov
outsl
clc
xchg
mov
arpl
fimull
push
pop
nop
lds
xlat
mov
repnz
int3
movsl
sahf
fwait
jb
and
lret
lock
mov
mov
fcomi
jp
jb
clc
test
shlb
mov
pcmpeqd
in
xchg
ds
lcall
ret
cmpsb
dec
fdivs
int
pop
xor
inc
inc
out
test
jno
and
push
mov
je
lea
add
adcl
loop
xchg
pushf
adc
sub
stos
xor
fwait
loop
pusha
cli
and
xchg
and
jnp
adc
dec
loope
iret
lcall
mov
sbb
cli
jg
psraw
mov
ss
pusha
sub
lret
cmp
lcall
mov
sbb
pop
insl
fstpt
dec
orb
scas
aas
adc
jae
loop
or
or
dec
inc
clc
ss
push
cmp
push
sub
jns
f2xm1
xchg
int3
cmpl
je
jo
dec
sub
pusha
call
pushl
call
mov
jno
pop
aaa
xchg
out
dec
fildl
scas
daa
dec
iret
mov
mov
lret
dec
and
cmp
xor
inc
sbb
pop
fstpt
adc
dec
loop
add
pop
leave
mov
jp
xor
pop
adc
lret
lods
add
out
xchg
jg
shrl
jmp
fs
sub
aaa
adc
leave
mov
fsubs
mov
dec
jb,pn
push
pushl
in
rorb
testl
fdivrs
test
xor
mov
jmp
out
inc
xor
cmpb
pusha
punpckldq
sahf
mov
jbe
notb
ja
cmp
pop
jo
dec
stos
insb
arpl
fwait
movsb
jne
stos
sbb
jns
inc
dec
and
stc
or
in
neg
sahf
stc
loop
out
add
cli
mov
addr16
jne
and
lods
push
int
rcr
call
ss
popf
repz
in
rcll
out
iret
mov
dec
or
add
add
lea
mov
in
xchg
add
add
cld
fldcw
imull
mov
insl
push
loope
pop
pusha
push
jns
sub
inc
ja
ret
inc
test
aas
ds
pop
push
stc
xchg
test
jno
adc
subb
pop
loopne
loopne
jb
push
mov
jnp
dec
push
xor
sahf
lret
divb
lcall
mov
jle
pop
jno
cmpsl
scas
ret
mov
out
and
psrlw
ljmp
mov
les
movsl
aas
or
inc
js
push
cmp
push
push
lock
lcall
or
mov
lock
outsl
dec
into
movsl
xchg
scas
test
fwait
xchg
and
pusha
dec
rorl
ds
xor
stc
jnp
jg
or
loopne
in
lds
fxch
les
push
roll
mov
cs
push
ja
imul
push
addr16
cmc
icebp
fnsave
ror
cmpsb
out
inc
xor
pop
shlb
push
mov
lret
xchg
or
lods
dec
dec
inc
aam
int
ret
pop
ss
jns
adc
pop
sahf
stc
xchg
mov
mov
xchg
cmp
movsl
and
fimull
jge
ret
jecxz
and
cmp
scas
or
pop
outsl
inc
and
inc
adc
pop
add
jae
aad
cmp
lahf
sbb
hlt
jno
movsl
sub
mov
fs
mov
icebp
pop
cli
mov
pop
pop
pop
pop
int3
stos
xchg
xor
fsts
pop
aaa
push
push
lret
in
adc
jl
nop
push
and
ljmp
std
jb
push
movsb
pop
fnstcw
ss
ja
repnz
xchg
inc
ss
test
pop
sub
pop
push
add
pop
lea
jmp
sub
jo
sbb
pop
stos
fs
daa
stos
lcall
cli
pop
jno
pushf
in
pusha
loope
lds
in
add
add
mov
push
cmp
mov
xchg
pop
in
sbb
mov
insb
cmp
push
push
jecxz
xchg
jo
aas
aaa
cmp
dec
xor
xor
pop
into
movsl
ret
lret
xor
pop
adc
or
jns
xchg
shl
xchg
fwait
adc
hlt
es
in
in
lea
mov
mov
add
outsb
inc
iret
mov
xchg
mov
and
in
mov
rorl
arpl
pop
jno
pop
sub
insb
icebp
pusha
loope
std
xchg
movsl
xor
mov
add
adc
les
stos
jno
dec
rorl
jg
pop
je
es
out
sub
sbbb
adc
push
or
aaa
push
outsl
xor
cs
in
pusha
jmp
mov
pop
mov
cli
call
cmpsl
dec
dec
addr16
das
fmuls
mov
jge
stc
or
imul
out
or
cmpsl
lcall
pop
jno
insb
stc
sbbb
or
push
jne
out
sbb
insb
jns
and
xor
cwtl
mov
loop
jmp
inc
or
fidivl
jp
sub
in
xchg
cli
shll
shlb
push
iret
mov
imul
lcall
adc
test
fisubl
out
int
xchg
jge
mov
pop
adc
cltd
add
and
cmp
fs
sub
xchg
clc
mov
fistpl
lret
loop
out
aad
decl
jae
xchg
mov
sti
pop
jno
mov
fs
mov
xor
sbb
push
fsub
cmp
outsl
mov
pop
jnp
negl
push
pop
or
mov
xor
pop
popa
cmp
out
aad
andb
xchg
xchg
push
push
jge
fs
out
in
mov
dec
mov
cmpb
sti
mov
test
cmc
test
jno
test
cld
pop
jno
xor
xor
pop
fcomps
mov
add
sbb
cmp
lcall
popf
and
das
adc
xchg
add
fsubr
adc
in
cmp
int
inc
jo
or
push
sub
lods
xchg
pop
or
sub
imul
or
jmp
mov
insb
pop
pusha
and
dec
or
jo
dec
jno
or
xor
jb
dec
add
pop
data16
pop
jno
dec
ds
loop
and
fcomi
sahf
add
jl
sti
jg
inc
flds
mov
mov
hlt
fwait
add
pop
and
insl
repz
xchg
mov
repz
push
bnd
push
ret
pop
pop
jo
xor
lcall
pop
and
lds
negb
sbb
and
clc
mov
dec
mov
push
scas
xor
jbe
sub
cwtl
sbb
loopne
pop
and
dec
rorb
push
sbb
sub
mov
scas
cmp
addr16
addr16
fdivrp
popa
mov
cld
push
xlat
inc
pop
inc
test
clc
push
iret
cmpsb
negl
push
and
test
inc
les
sahf
mov
lret
push
notl
pop
jp
je
mov
and
cmp
lret
adcb
mov
cwtl
repz
cld
adc
rcrl
sbb
cmpb
mov
nop
mov
cli
out
je
xorb
int3
repz
loopne
and
fs
dec
aam
cld
fisttpll
cmp
sub
insl
pusha
std
adc
inc
loopne
loopne
xchg
add
cli
xor
pop
mov
push
outsb
stc
and
jmp
and
cs
cmp
cs
pop
orb
mov
mov
adc
and
push
je
test
jae
jns
sub
xor
xor
sub
xchg
fwait
hlt
xchg
int3
pop
add
cmp
cmp
mov
sti
inc
jns
dec
out
fmuls
inc
gs
pop
xor
sbb
fwait
adc
pop
divb
inc
fadds
lods
jo
lcall
sti
ret
inc
and
test
push
jns
inc
out
jmp
sbb
loopne
enter
pop
xor
inc
movb
pop
cmp
dec
add
imul
idivb
inc
sbb
dec
sete
inc
mov
not
pushf
inc
lea
xor
jmp
mov
movzbw
or
mov
sub
add
mov
cmp
sub
clc
push
call
jmp
filds
mov
jo
dec
lds
rolb
in
mov
stc
shrl
shll
pop
xor
pop
cwtl
sbb
sub
add
ljmp
push
cli
inc
lcall
xor
dec
scas
loop
lea
sub
outsl
xchg
adc
loope
in
mov
mov
adc
inc
jo
inc
add
imul
jno
or
cmp
daa
push
aaa
mov
sti
incb
mov
scas
xor
js
adc
mov
movsl
xor
pop
push
dec
fmulp
clc
sbb
cld
int3
call
insl
push
jns
adc
or
add
push
xor
xor
mov
and
repnz
fcomi
xchg
adc
fwait
push
push
or
cmp
dec
push
das
jbe
dec
jne
in
push
jb
out
daa
pusha
pushf
pusha
xchg
call
std
sahf
add
jno
jmp
repz
xchg
pop
jbe
outsb
out
xchg
jbe
fdivp
into
bound
popf
cmp
icebp
fs
pop
jns
mov
cltd
ficoml
jge
pop
rorl
mov
mov
lret
popf
data16
sub
lods
das
mov
inc
inc
cmp
or
sbb
imul
ja
jg
imul
pop
jae
pop
dec
sub
rolb
lods
cmc
popa
test
repnz
call
push
movb
pusha
setg
pop
mov
movzbw
movw
lea
pushf
lea
pushl
call
mov
mov
mov
push
and
pusha
icebp
js
sub
adc
jmp
pop
cld
cmc
jl
push
dec
ss
popf
aam
gs
add
movsl
xor
add
lds
adc
popa
inc
fldcw
mov
cmc
sbb
jno
sub
sarl
mov
notb
ret
jmp
lea
aad
mov
scas
mull
pop
pop
cli
push
sub
mov
sub
push
fcomps
and
mov
and
sub
or
dec
jecxz
sbb
fs
adc
pop
mov
xchg
data16
mov
jne
loope
jl
insb
and
mov
aam
cmp
jnp
pop
shl
mov
pop
jg
inc
jmp
jl
enter
mov
jg
mov
setbe
sbb
mov
addr16
add
jle
popa
cltd
aaa
nop
je
fwait
push
int3
jl
or
pop
lods
mov
jle
out
xlat
push
push
push
or
lods
pop
pop
jb
addr16
mov
js
in
jg
push
push
or
imul
loopne
fsub
cwtl
pop
jne
enter
lret
mov
pusha
jae
and
dec
push
sbb
pushf
jge
add
loop
aam
mov
stos
mov
addr16
push
imul
and
je
mov
cmpsb
arpl
mov
xchg
push
cmovne
pop
inc
pop
andb
loope
repnz
pop
mov
add
inc
fs
imul
call
call
ljmp
push
es
insb
fldl
int
dec
popa
inc
jbe
fwait
jg
clc
std
sbb
inc
icebp
fisttpll
pushf
hlt
inc
or
pop
pop
and
pushf
or
inc
filds
stc
jecxz
cmp
fwait
sbb
insl
enter
bound
sub
and
push
sub
xor
inc
imul
and
mov
pop
addr16
dec
inc
mov
push
loope
cwtl
sub
push
push
inc
movl
out
cmpb
fisubl
lods
inc
add
pop
lea
idivl
shrb
pop
jne
hlt
popf
jge
adc
jl
pop
sbb
mov
adc
aam
or
fistpl
nop
push
inc
sbbb
imul
fildl
fwait
xor
stos
pop
scas
dec
push
movl
test
leave
push
dec
pop
push
icebp
fs
pop
cld
inc
jbe
cmp
fisttpl
sub
mov
xor
inc
out
cwtl
add
sti
mov
sbb
or
jb
add
dec
mov
pop
clc
and
push
mov
mov
mov
mov
sbb
jge
test
scas
rclb
mov
mov
dec
cmp
insl
inc
jg
jle
shlb
mov
xor
jl
sub
sbb
dec
jo
mov
and
hlt
push
inc
xchg
repnz
test
out
inc
mov
fucom
sbbl
mov
pop
test
inc
push
rcll
mov
mov
mov
js
jb
dec
aam
fcmovnu
cmp
outsb
push
xchg
fs
cmp
les
mov
push
fmul
xchg
mov
inc
in
test
push
arpl
jbe
sbb
inc
arpl
pop
push
push
jecxz
test
test
dec
jl
mov
outsb
mov
jns
nop
cmc
lea
xor
mov
jl
pusha
fistps
push
dec
pop
int
scas
sub
mov
sub
ljmp
push
fdivs
aad
pop
dec
xor
daa
mov
pop
fcoms
dec
dec
imul
jae
adc
arpl
mull
sahf
fucomp
aas
fwait
push
or
fdivs
sbb
jge
stc
jo
inc
gs
push
pop
mov
dec
icebp
das
pusha
popa
mov
roll
pop
mov
mov
xor
add
rcll
roll
fstl
loop
nop
mov
dec
pop
jnp
pop
test
fsubl
jne
mov
xchg
loope
mov
insl
ja
mov
jns
imul
mov
mov
xchg
fidivrs
dec
out
inc
repnz
aad
fistpll
pop
je
fcomps
inc
repnz
mov
mov
push
adc
lea
or
xor
jbe
repnz
and
into
andl
sub
lods
add
pushf
adc
and
or
jecxz
lods
fdivrl
fs
popa
lods
test
sbb
push
addr16
pop
dec
int3
xchg
fsts
push
push
push
js
xchg
inc
aad
stos
and
xchg
cmp
in
cli
imul
inc
test
icebp
adc
mov
popa
inc
sub
add
cwtl
mov
imul
cmp
jmp
outsl
xchg
rol
jnp
sub
mov
pop
inc
adc
push
pushf
sub
bound
fisubrl
jge
gs
fnstsw
mov
inc
shr
pop
loopne
addr16
jo
cltd
jo
shrb
outsb
sbb
stos
into
jne
and
fidivl
jne
dec
xor
movsl
aad
ret
lea
repnz
gs
jmp
jle
pop
imul
mov
push
add
jl
sbb
cmp
xchg
loop
dec
mov
sarl
jecxz
std
jns
in
dec
loope
inc
inc
popl
jne
test
test
addb
mov
imul
xorb
repnz
jg
orb
push
std
mov
sub
loop
adc
cmp
pop
addb
arpl
jge
cs
out
jno
push
mov
aad
jecxz
sbb
popf
lret
lock
fadds
fincstp
loop
cmpsb
push
mov
shll
loopne
test
aam
pop
sub
fsubs
orl
ljmp
and
xchg
int
fcoms
sub
inc
jmp
xchg
shrb
lods
gs
jp
sub
inc
xor
mov
sbb
pop
addr16
sbb
imulb
fstp
sbb
cmp
pushf
mov
frstor
push
xor
pop
xor
loopne
icebp
cmpsb
mov
add
sbb
int
cmpb
fisubrs
inc
push
fsubrl
jge
inc
clc
mov
imul
js
pop
xchg
sub
and
pop
mov
sbb
leave
pop
cltd
push
inc
and
pop
imul
cmp
sbb
adc
pop
mov
cwtl
insb
hlt
lods
test
loopne
test
xor
mov
flds
andb
rorl
mov
loopne
sbb
xor
push
js
and
hlt
filds
add
ja
push
lock
xchg
loope
aad
mov
hlt
jmp
sarb
pop
mov
mov
int
mov
sbb
adc
dec
cld
out
or
inc
js
rcrb
pop
ret
stos
stos
mov
pusha
inc
inc
pop
data16
and
loopne
nop
dec
sub
addb
xor
shl
movsl
mov
push
fsts
pop
inc
xchg
sbb
jno
repnz
jle
dec
pushf
fs
jecxz
movsb
jae
sub
shl
xor
mov
push
mov
insb
jmp
adc
fs
or
dec
adc
movsl
push
js
push
xor
fs
std
dec
mov
clc
xchg
mov
outsb
lock
sub
decb
lcall
pop
push
xor
mov
cmp
and
push
pusha
jl
mov
daa
arpl
push
cli
sub
je
outsl
ljmp
mov
push
test
imul
jmp
or
js
inc
cmp
fsubs
adc
in
enter
push
fcmovne
js
jmp
shlb
popa
aas
fsubs
sti
cs
test
bound
push
or
shll
pushf
pop
mov
adc
mov
jnp
lods
movsl
insb
jmp
cmpl
lea
lock
out
js
xchg
cmc
into
loope
inc
dec
cwtl
add
out
mov
push
sub
xchg
or
out
pusha
jb
add
or
popf
test
dec
fwait
shrb
mov
insl
sub
insb
push
dec
jbe
sbb
aas
arpl
repz
push
sahf
nop
call
xchg
daa
add
roll
jno
fsubs
mulb
test
pop
stos
xchg
arpl
inc
xor
inc
subb
loop
pop
shrb
in
in
inc
xchg
or
xchg
pusha
movsb
sbb
daa
popa
xchg
scas
cmp
inc
sbb
int3
or
pop
movsb
loopew
insb
ds
scas
mov
cmpb
jmp
pop
pop
sub
lock
cbtw
sbb
push
inc
int3
cmovno
sub
cli
sbb
stos
in
adc
stos
add
adc
xor
test
jg
pusha
jb
pop
push
in
mov
stos
sub
lcall
mov
jo
insb
js
cmpl
adcl
mov
shld
mov
cwtl
mov
stos
scas
mov
repnz
push
fsubl
inc
dec
jmp
lcall
insb
imul
bnd
mov
sub
repnz
push
addr16
cld
insb
sub
call
push
sahf
test
sbb
stos
fs
test
popf
mov
cwtl
lea
enter
cmpsl
std
test
scas
test
sbb
movsl
mov
lcall
bound
lret
inc
cltd
jmp
lcall
mov
call
mov
shlb
jl
jge
and
mov
sub
lods
repnz
push
pusha
adc
and
pop
mov
jl
cmpsl
inc
sbb
fwait
bnd
cmp
scas
cld
push
stos
mov
lcall
js
and
mov
je
cmp
pop
stc
js
pusha
mov
and
mov
sub
fsubr
push
fdivl
clc
test
mov
fs
lods
shr
add
js
jo
fs
jnp
jge
cmp
mov
in
cli
fsubl
push
bound
mov
mov
imul
jo
sar
push
push
sbb
add
repz
test
call
js
fcomp
hlt
mov
lcall
cmp
jns
mov
push
jmp
add
fisubs
scas
pop
test
and
pusha
xchg
andl
movsb
jnp
mov
sarl
popf
pop
sarb
popa
rclb
and
xchg
cwtl
inc
jmp
adc
cmpsl
pop
dec
outsb
or
push
pop
addr16
push
xorl
aad
iret
loope
inc
pop
nop
inc
cmp
dec
loope
cltd
jae
cmc
lret
pop
sti
push
fcoml
xor
lods
rorb
hlt
rcrb
fs
cli
cs
xor
sub
das
pop
in
cmp
sub
pop
movsl
dec
pusha
sub
std
rcrb
nop
pop
fcoml
xor
lahf
sti
mov
cmc
cmp
in
fidivs
push
mov
inc
fdivl
jge
cltd
pmuludq
rcrb
lds
push
push
pop
mov
lods
loopne
fs
ficoms
push
pop
adc
cmp
sbb
cli
loopnew
int
pushf
xor
dec
mov
push
push
jg
outsb
push
push
cmp
shlb
mov
inc
cs
adc
lcall
adc
test
mov
mov
jmp
dec
mov
mov
inc
mov
es
clc
push
fisubrs
mov
arpl
clc
outsb
nop
cli
xor
fs
stc
test
mov
xor
add
sbbl
hlt
inc
mov
xchg
mov
and
pop
pop
xor
stos
loope
stos
lock
scas
lods
inc
outsb
xor
jmp
pushf
cmp
out
fisubs
inc
cmp
xor
pop
add
pop
imul
sub
imul
insb
nop
dec
fmull
lcall
add
fs
test
loopne
aas
xchg
mov
test
shl
mov
and
popa
xor
mov
icebp
arpl
adc
pop
mov
sbb
cmpsb
fistps
fistps
test
rorb
fildl
test
cmpsl
nop
push
mov
xchg
iret
pusha
inc
aas
push
jge
clc
mov
mov
jo
mov
lods
sub
dec
in
cwtl
jns
subl
dec
push
aam
pop
fnstenv
mov
adc
xchg
push
sub
andl
clc
mov
es
sbb
inc
addr16
mov
xchg
aam
sbb
dec
std
or
and
in
and
outsl
adc
add
jne
mov
insb
iret
popa
lods
mov
js
rcr
jge
cmp
fcoms
mov
jge
sbb
jecxz
xchg
std
sub
insl
test
jg
mov
jbe
shlb
movsb
mov
jecxz
js
dec
imul
sub
inc
clc
sahf
add
hlt
pop
stos
les
test
inc
cmc
clc
popf
dec
push
xchg
aas
lods
mov
stos
or
lcall
addr16
and
pop
mov
or
mov
and
icebp
mov
xor
jecxz
sub
mov
icebp
pop
lock
inc
rcrb
fcmovnb
shll
push
out
adc
pushf
test
insb
push
fs
lock
mov
mov
jo
insl
scas
jo
xchg
jle
mov
mov
dec
cmp
dec
popf
rcll
fs
imul
test
insb
push
mov
aad
inc
fists
sub
jno
sub
repnz
es
fs
popf
xchg
test
fbld
mov
fdivrl
pop
inc
fs
sbb
xor
int3
fsubr
sub
rcrb
cmp
js
and
jecxz
push
in
addr16
rcr
sbb
loop
adc
sbb
fdivr
jge
js
jg
fdivrs
in
inc
mov
and
enter
xor
test
and
jg
push
push
push
mov
inc
jmp
data16
in
rcrb
dec
je
push
es
cmpl
lcall
jle
test
inc
fs
lea
in
mov
adc
outsl
push
lret
cwtl
fs
and
mov
stos
xchg
xchg
mull
add
gs
dec
mov
cmp
push
inc
pop
dec
movsb
lods
sub
mov
lret
aaa
fildl
cmp
mov
movsl
aas
inc
imul
es
jmp
or
in
push
dec
or
pop
pop
fsubrs
pop
xchg
shl
popa
jecxz
push
cmpsl
test
xchg
pop
iret
mov
clc
loopne
subb
pop
lods
cmpsl
lcall
xor
lods
pop
stos
dec
popf
inc
push
dec
mov
mov
arpl
lods
loopne
mov
movsb
fsub
pop
jbe
jge
mov
and
pop
mov
popa
mov
in
jns
pop
outsl
jnp
jl
pop
or
addr16
aad
aam
mov
xor
sbb
pusha
push
js
adc
sahf
push
and
cwtl
sub
push
loop
pop
dec
and
xor
jmp
ljmp
pushl
jge
push
sub
inc
std
or
cmc
scas
popf
pop
pop
inc
sahf
cmp
and
test
ficoml
dec
aam
jo
inc
test
jl
cmp
icebp
adc
call
iret
push
add
cmp
push
pop
cmc
mov
lods
jmp
lock
mov
lock
ret
out
sub
add
sbb
rorb
sbb
clc
jge
xchg
shrb
imul
xor
mov
popf
movsl
xchg
push
lods
xor
out
stc
xchg
je
pop
pop
out
loop
dec
xchg
mov
push
outsb
sbb
xor
imul
imul
mov
or
lcall
fisttpll
lods
pop
cli
jns
sub
ds
mov
xlat
ret
lea
xchg
sub
pop
sub
adc
push
and
push
stos
xor
pusha
sahf
addr16
lods
lock
xchg
scas
add
pop
sub
and
sub
cld
mov
pop
push
pop
mov
jl
pop
fmuls
pop
js
inc
ficompl
xchg
in
fwait
mov
inc
fdivp
mov
mov
fildll
lock
inc
popa
push
xor
loopne
mov
hlt
or
sub
or
mov
jae
and
push
inc
jns
stos
fstpt
pop
in
xor
in
mov
push
xchg
mov
frstor
clc
aad
gs
arpl
loop
xchg
xchg
push
les
adc
pop
and
fisttpl
dec
mov
mov
jmp
imul
sti
pop
mov
xor
pop
xchg
lahf
test
xchg
cs
js
mov
xor
pusha
rcrb
inc
jno
movsb
push
mov
push
dec
popa
insl
and
xor
pop
lcall
nop
gs
arpl
ljmp
jbe
sub
adc
outsl
mov
repnz
jmp
cmpsl
in
pusha
inc
add
lcall
mov
inc
imul
data16
xchg
loopne
sub
lea
loope
aas
lods
push
push
mov
in
jnp
call
mov
out
inc
lods
sbb
test
movnti
inc
jl
xchg
outsl
dec
fcoml
pop
xor
sarb
sub
jle,pt
insl
insl
imull
clc
or
out
fstpt
xchg
jmp
cmp
test
icebp
shr
rcl
sbbb
xor
sbb
imul
mov
sub
mov
add
push
lret
xchg
test
out
push
ret
mov
sbb
pop
add
fsubrl
and
shr
or
push
int
cmp
mulb
pop
dec
jo
fs
rcll
xchg
add
and
jae
pop
scas
pop
sub
int
rcl
jno
rcrl
xor
ja
sbb
in
js
imul
out
add
out
pop
push
pushf
mov
jp
fstpl
mov
cld
sub
lret
movsb
inc
dec
cld
cmp
jnp
pop
mov
cld
hlt
sahf
jle
stc
add
in
arpl
cmpsb
inc
jp
sbbb
insb
sub
fs
rcrb
cmpsb
jnp
and
mov
mov
xchg
cmp
movsb
sti
popa
rcrl
pop
jne
test
inc
fisubl
push
pop
or
and
dec
push
push
fsubl
daa
xchg
adc
aad
daa
cwtl
inc
add
lods
pushf
xchg
mov
xor
xor
xchg
in
inc
push
fcoml
sbb
mov
sub
imul
mov
fistpl
pop
shrl
xchg
mov
test
pushf
bound
jns
jl
stos
adc
cmpsb
ds
scas
or
popa
insb
hlt
sbb
mov
dec
aaa
flds
aaa
and
mov
aas
fs
arpl
pop
cmp
push
ficomps
inc
dec
fmuls
mov
push
jmp
xor
push
pop
int
pop
sbb
pop
int3
cld
sub
push
xchg
cmp
pop
mov
in
outsl
mov
xchg
aaa
pushf
lahf
sub
movsb
push
and
adc
jg
mov
mov
rorb
fcomps
mov
stos
imul
rorb
jmp
es
stos
or
je
jns
push
pop
stos
mov
pop
and
repz
outsb
ss
lock
mov
dec
pop
sub
loopne
icebp
inc
pop
and
adc
xor
lcall
int
push
xlat
adcb
cmp
jmp
xchg
mov
imulb
pusha
inc
adc
xchg
enter
out
ret
xor
xchg
pop
hlt
es
adcb
dec
ret
push
mov
movsl
inc
jp
or
sub
fadds
cwtl
xor
xchg
sti
loopne
jge
cmp
push
pop
and
fcompl
and
sarb
das
loopne
or
add
pop
adc
inc
push
push
mov
mul
insb
pop
shr
roll
jg
out
mov
js
loopne
shlb
dec
push
int
adc
cmpl
stc
pusha
jl
ljmp
jb
js
fmul
imul
push
pop
push
sbb
jg
xchg
dec
fisttpll
sbb
je
pop
leave
pop
shrb
mov
pop
fsts
push
lret
lret
mov
in
adc
pusha
xchg
scas
or
pop
test
leave
jge
mov
add
xchg
data16
jecxz
cld
and
stos
js
je
gs
and
lock
mov
fldenv
pop
mov
cli
jp
outsl
repz
pop
jl
je
lcall
pop
push
arpl
push
xchg
mov
push
inc
sbbl
imul
cmp
or
fisubrl
repz
sbb
adcb
in
sub
jns
inc
and
popf
push
mov
hlt
jmp
popa
test
xchg
mov
outsl
pop
iret
pusha
aas
adc
mov
mov
pop
jb
enter
xorl
cmp
shl
push
mov
popf
pop
fs
js
and
xor
pop
ror
test
dec
pop
stos
pusha
adc
in
test
or
shlb
stos
in
jge
lds
xchg
jo
pop
addr16
and
inc
icebp
mov
aad
push
mov
cmc
fcomps
xor
pop
cmpsb
jge
pop
inc
mov
popa
mov
movq
enter
negl
fadds
rcr
jle
int
pushf
cmc
dec
jmp
sub
subl
push
fbld
push
js
push
push
pop
in
mov
out
outsl
push
dec
sbb
aas
jl
in
scas
popa
repnz
stos
pop
popa
dec
cld
pop
inc
imul
aaa
adc
lcall
jbe
das
mov
adc
add
loop
lea
ljmp
scas
push
lcall
mov
sub
fidivrl
adc
push
inc
in
sub
jecxz
stos
inc
dec
int
pusha
lcall
jmp
push
mov
push
sbb
mov
ss
mov
push
pushf
addr16
xchg
fdivl
inc
dec
push
mov
movsl
cmp
sub
fidivl
mov
add
popa
mov
mov
fcoms
dec
sbb
mov
bound
push
popa
sti
dec
addl
cmp
stos
mov
mov
or
dec
mov
lock
xchg
jnp
fdivrs
insb
add
mov
and
jbe
jnp
stos
cmp
dec
pop
pop
es
cs
jo
shll
jmp
xchg
movsb
jp
cmp
push
xchg
jns
pusha
mov
icebp
or
fwait
xchg
adc
cmpsl
aaa
mov
cli
outsl
cmpsb
cmp
lock
push
pop
xchg
arpl
sbb
cmp
lods
inc
mov
push
add
jge
and
jbe
fldcw
push
int
loopne
shlb
pop
fnsave
mov
sbbb
fs
adc
ds
mov
xor
dec
mov
lods
aas
adc
ret
js
sub
pop
cmp
int
jae
scas
sbb
pause
lcall
inc
je
cs
into
cltd
xor
cmpsl
dec
adc
insb
jnp
pop
push
call
rcl
mov
adc
xor
cmp
pop
lock
out
jge
aas
mov
and
dec
insl
aam
push
push
jno
cmpl
mov
inc
push
cmp
sbb
inc
cs
xor
mov
inc
adc
mov
sub
and
pop
mov
xchg
shr
test
pop
push
pop
mov
dec
cld
sub
lods
add
inc
add
mov
dec
sbb
fsts
dec
cmpl
jne
cwtl
aaa
shlb
nop
lret
or
in
sarb
icebp
outsl
ljmp
rcl
cmc
adc
fdivrl
dec
xor
mov
pop
push
out
and
in
daa
or
pop
push
pop
aad
add
sbb
js
popa
adc
mov
icebp
lds
xchg
cmpsb
faddl
pushf
in
lock
popf
or
cmpsl
enter
jns
loope
sub
scas
fnstcw
xchg
cwtl
add
or
arpl
jl
jmp
iret
dec
push
pop
cli
in
in
push
andb
popa
cmpsb
pop
sub
jbe
sbb
fcoms
nop
inc
pop
sbbb
in
mov
jl
push
pop
xchg
mov
jecxz
ficomps
icebp
mov
mov
fdivs
mov
scas
test
push
pop
rolb
mov
icebp
mov
js
add
test
pop
shl
and
test
mov
scas
cs
je
push
jne
sbb
mov
xchg
jnp,pt
es
mov
mov
jmp
sub
jo
les
inc
cmp
loopne
sahf
cmp
stos
sub
mov
mov
and
pusha
fs
mov
rcrb
imul
dec
push
sub
jle
stc
pop
mov
pop
mov
sub
int
loope
data16
mov
rolb
fistpll
test
jbe
in
in
faddl
xor
imul
daa
jge
loope
and
call
fwait
xor
push
push
mov
fs
push
pop
scas
mov
stos
mov
loope
fsubs
dec
fwait
adc
push
mov
jecxz
sbbb
inc
push
and
leave
popa
pusha
push
pop
out
out
pop
dec
test
stos
ljmp
add
scas
ss
iret
inc
cmp
push
xchg
hlt
jmp
cmpb
add
inc
sbb
roll
std
sbb
pop
addr16
sbb
add
stos
jns
fmul
test
cwtl
fmull
rcl
xchg
xchg
fcomps
lret
les
fmuls
lcall
aad
lods
mov
out
arpl
and
icebp
sti
cmp
add
dec
aam
sub
pop
and
sahf
push
fisubl
xchg
imul
push
push
cmc
jno
push
movsl
sub
and
xor
xor
xchg
mov
adc
mulb
arpl
aad
es
pop
in
jp
mov
fcompl
loope
jge
jp
movsl
mov
mov
pop
inc
jle
push
mov
dec
popa
inc
jp
mov
or
inc
adc
jne
inc
and
pop
rclb
dec
hlt
sub
push
pop
mov
aam
pop
sub
out
scas
stos
sub
jb
jbe
mov
aam
add
gs
mov
add
mov
loope
push
dec
inc
inc
ljmp
and
rclb
lods
cmpl
push
repz
and
out
in
xchg
popa
jle
adc
cmp
pop
sbb
cmp
inc
adc
cwtl
inc
pop
or
ljmp
sub
loope
inc
cwtl
lret
push
sbb
mov
pusha
or
pop
add
loopne
gs
sbbb
sub
ljmp
inc
mov
movsb
repnz
fisubl
and
scas
fcomip
decb
sub
lret
loope
pop
ljmp
pop
cwtl
cmp
outsb
mov
subl
pop
stos
lods
inc
loope
jge
pop
push
mov
fisubrl
push
pop
test
cvtdq2ps
adc
notl
jne
and
adc
mov
pop
movsb
inc
lods
das
fwait
sbb
mov
dec
fs
iret
pop
lods
addr16
and
sbb
xchg
sub
jo
adc
and
mov
outsb
cmp
push
popa
add
sarb
jge
idiv
or
das
jg
cmp
push
inc
aam
loope
imul
cmp
inc
lret
les
int
insl
inc
and
scas
mov
shlb
jle
jge
mov
outsb
mov
in
mov
mov
xlat
inc
jp
mov
mov
loope
mov
sub
mov
inc
dec
sub
rcrl
or
adc
sbb
popa
loope
repnz
mov
or
clc
imul
cmpsl
xchg
mov
and
loope
sbb
andb
mov
outsb
inc
mov
and
mov
andl
add
xchg
xchg
into
sub
popa
pop
push
test
fsubl
and
pusha
fistl
imul
ffree
jne
outsb
test
fsts
loop
int3
imul
mov
cmc
leave
subb
subb
jg
xor
pop
mov
hlt
and
dec
jge
jl
fs
mov
jae
imul
adc
rclb
adc
dec
and
addr16
fs
mov
adc
gs
sbb
insb
jmp
mov
pop
pop
rorb
mov
int
cmp
xor
and
loopne
rcrb
sbb
fcoms
mov
add
rorb
xchg
jmp
in
icebp
push
mov
push
jmp
daa
fnstsw
dec
lahf
popa
mov
stc
xchg
mov
cmp
leave
jno
inc
and
in
in
clc
pop
fs
out
inc
insl
inc
mov
cltd
sub
filds
out
mov
pop
out
inc
fldcw
xor
repz
hlt
inc
js
dec
outsb
inc
pop
das
sti
pop
sbb
inc
arpl
shr
in
dec
or
cmp
fstpt
cmpl
inc
cmp
mov
mov
mov
popa
cmp
popa
stos
lods
stos
jmp
dec
or
and
sarl
rorb
fcmovnb
jp
test
mov
jge
jp
sti
cmp
cmpsb
sbb
sbb
push
jp
frstor
ljmp
inc
xor
push
push
in
outsl
dec
mov
dec
call
stos
push
pop
push
mov
inc
dec
ja
pop
test
jp
cmp
jmp
mov
sbb
push
pop
mov
outsb
add
mov
inc
orl
or
cwtl
and
rcrl
pop
addb
into
sahf
mov
call
xor
sbb
sbb
push
out
jge
add
fs
lahf
roll
and
push
pop
pop
fmuls
inc
sub
ret
or
mov
inc
pop
mov
out
jbe
xor
xor
pop
xchg
test
mov
popa
mov
fcoms
test
add
mov
push
sbb
pop
sahf
test
verr
dec
push
pop
ss
inc
fstp
mov
dec
sbb
mov
lods
adc
nop
sbbb
sub
aaa
lahf
push
sbb
and
cmp
sbb
dec
mov
jne
mov
pop
push
pop
and
data16
cwtl
and
pop
outsb
dec
xchg
out
dec
mov
cmc
stos
push
mov
out
cmp
jbe
add
mov
cwtl
mov
pop
je
lret
int
imul
jecxz
mov
popa
das
xlat
fisubs
pusha
ljmp
ss
cwtl
mov
xor
pushf
je
mov
ret
popa
addr16
cmp
pop
mov
inc
sbb
push
shr
jo
sahf
xor
push
ret
aad
adc
push
mov
ss
fadds
pop
aam
int3
pusha
xchg
pop
aaa
pop
ja
data16
repnz
ss
loop
sub
jo
mov
fs
mov
push
imul
jnp
pop
add
pop
mov
out
in
mov
mov
movsb
jge
enter
push
movsl
inc
sahf
and
clc
pop
sbb
cmpb
aam
test
icebp
out
pop
push
imul
jge
shr
stos
push
add
xor
cmpsl
mov
cld
mov
ret
fistps
inc
pop
cmp
sub
repnz
jb
cld
jbe
popa
sahf
cmp
xchg
or
add
lret
mov
or
js
jmp
inc
mov
popa
push
shl
mov
mov
std
xchg
cwtl
lds
aam
and
add
ret
int
sbb
mov
rclb
test
ffree
sbb
cwtl
mov
dec
inc
push
ret
and
push
mov
pop
push
rorb
mov
repnz
pop
in
xor
push
push
xor
pop
dec
arpl
cmp
and
call
pusha
scas
inc
mov
pop
je
sub
jge
push
adc
lcall
mov
fsts
inc
ljmp
dec
call
pop
and
xchg
mov
cmp
jle
out
stos
fsubs
mov
cwtl
bnd
push
and
sub
jge
fstl
aam
bnd
and
pop
mov
and
push
test
xor
push
pop
popf
push
sbb
adc
mov
les
fiaddl
cwtl
inc
xor
faddl
pop
es
sub
shrl
shlb
call
fidivl
aad
adc
push
shlb
pop
mov
push
push
pusha
inc
xor
pop
jecxz
adc
push
pop
or
mov
sbb
xor
ret
test
lock
mov
or
in
repz
push
jb
and
dec
mov
pop
jecxz
sub
inc
mov
pop
push
in
dec
movsb
sbbb
adc
xchg
jl
push
pushf
out
cmp
rorb
lds
xlat
sbb
adc
fcmovnu
test
fnstenv
mov
in
sti
cmpb
pusha
outsl
mov
jbe
loopne
hlt
cwtl
lahf
test
mov
call
add
fidivs
mov
ljmp
fnstenv
pop
pop
sbb
jecxz
pushf
xlat
addr16
add
fs
out
fadds
pinsrw
loopne
scas
sbbl
inc
icebp
or
mov
lods
push
pop
pop
addr16
inc
jecxz
sti
stc
pushf
sub
or
sbbb
int
setl
xchg
jecxz
and
daa
stos
stc
outsb
scas
test
test
lods
popf
adc
scas
jnp
mov
lods
addr16
inc
ss
pop
mov
sahf
and
mov
sbb
je
pop
imul
add
fstps
sbb
pushf
nop
pop
aas
mov
jbe
xor
pusha
mov
adc
mov
mov
pushf
cmpsl
xchg
cltd
adc
subb
sub
pop
push
loope
pop
addb
inc
out
js
in
jle
pop
inc
pop
mov
dec
ss
fimuls
sub
jae
shll
mov
sbb
dec
mov
fdivrs
ljmp
movsl
sub
xor
jae
sbb
xorb
push
or
pop
rcrb
or
xchg
mov
outsl
js
fistps
fsubs
mov
sub
jmp
test
push
adcl
cltd
int3
push
fwait
or
cltd
push
cmp
pop
idivb
pop
inc
jl
xorl
xchg
imul
mov
dec
xchg
cmpl
jmp
loope
out
rcrb
inc
stos
jmp
cwtl
das
fnstcw
jmp
cmp
dec
jecxz
lods
ljmp
pop
dec
sub
cltd
and
in
iret
lods
pop
inc
inc
inc
mov
xchg
filds
test
enter
insl
mov
lcall
xchg
fs
roll
punpckhbw
jg
dec
fdivrs
add
movsl
xchg
lds
and
in
xchg
inc
and
dec
test
xchg
cmp
in
lret
cwtl
push
fnsave
cld
fsts
pusha
xor
sbb
sbb
popf
adc
or
pop
in
sbb
sbb
mov
mov
cmp
sbb
cld
int3
in
inc
mov
inc
cs
dec
mov
mov
scas
imul
ljmp
jecxz
push
xchg
or
insb
dec
and
icebp
jne
cmpb
js
adc
popf
pop
pop
push
fadd
mov
outsb
mov
fbld
lock
mov
imul
xor
jmp
or
push
gs
arpl
mov
pop
jge
jnp
push
and
pop
outsl
stos
inc
mov
and
test
frstor
cmpsb
dec
in
loope
repnz
add
pop
repnz
jmp
movsl
sbbb
cmp
jp
adc
mov
bound
mov
pop
fdivl
imul
add
jno
cwtl
arpl
cltd
cmpsb
sbb
sbb
sbb
ss
jl
mov
dec
lret
movsb
insb
in
mov
add
addr16
out
push
inc
call
xor
mov
mov
pop
pop
inc
fisttpll
or
rcrb
daa
cmp
lret
and
mov
dec
pop
xor
sbb
mov
push
arpl
loopne
inc
cli
mov
shlb
int
loop
adc
cmp
xchg
inc
xor
sbb
add
popa
inc
dec
ret
call
insb
scas
jnp
pop
fcmove
jp
inc
mov
ret
dec
mov
xor
test
mov
in
mov
pop
movsl
movsb
ss
mov
mov
nop
push
dec
into
dec
mov
test
imul
shlb
fnstenv
mov
cs
jne
adc
int3
fsubrs
dec
pop
fld1
jl
mov
xchg
add
out
test
xchg
icebp
cmpl
aaa
sub
or
push
sub
testl
testl
fwait
ljmp
jb
push
das
rclb
jle
sarb
pusha
test
or
shrl
pop
arpl
js
pop
ret
mov
jl
dec
or
jg
mov
adc
sbb
test
jecxz
stos
fisttps
mov
adc
aam
aas
mov
fstpl
sbbl
xchg
data16
repnz
shr
pushf
inc
pop
hlt
inc
jle
lret
pop
cmpsb
and
daa
pop
mov
mov
shrl
push
inc
push
sub
mov
inc
add
pop
rcl
mov
sbb
lea
sbb
xorb
ffreep
jbe
loope
xor
pop
mov
mov
into
nop
mov
push
pop
adc
pop
pop
push
shrb
sub
jecxz
ljmp
aas
inc
push
lea
mov
leave
sbb
pop
add
cmp
push
in
mov
out
lods
cwtl
cwtl
push
rcrb
sub
daa
or
out
sbb
push
and
and
outsl
xchg
scas
fs
xchg
lahf
shll
mov
mov
ja
rcrb
inc
push
cmpsl
addl
outsl
adc
std
pop
addr16
insl
mov
addl
inc
jnp
mov
jg
jb
icebp
je,pt
adc
int3
mov
shl
or
int3
lods
mov
mov
mov
lret
sbb
mov
and
icebp
pop
mulb
pop
mov
adcl
pop
sub
fsubrs
jl
popa
jb
mov
cs
bound
dec
mov
push
into
adc
rcr
addb
imul
lds
mov
sbb
shll
mov
lea
jp
jbe
xor
stos
push
add
pop
sbb
inc
xchg
popa
call
pusha
inc
mov
test
test
mov
shll
xchg
jno
mov
push
in
loopne
pop
inc
mov
sbb
cwtl
scas
cmp
fcompl
and
mov
into
outsb
or
incb
stos
lock
je
or
cmpl
lock
add
in
lods
nop
jne
xchg
inc
nop
inc
jmp
pop
mov
cltd
adc
cmp
shr
bound
outsb
sbb
inc
adc
stos
pop
mov
insb
mov
call
dec
arpl
das
nop
pop
rol
out
push
jle
fs
push
jnp
sub
fsub
movsb
or
clc
mov
jnp
mov
mov
popa
inc
cmp
addr16
cld
and
fwait
add
mov
sahf
and
mov
push
add
jle
loope
dec
shrl
fistl
imul
cmc
sbb
adc
xor
sahf
cli
shll
xlat
in
jae
pushf
sbb
push
sbb
xchg
das
jne
scas
pop
inc
loop
fs
inc
cmpsb
jnp
cmc
xchg
out
jg
fsubrs
push
push
pop
fsubp
shlb
mov
xor
pop
or
xchg
popa
out
cltd
cld
and
sbb
jae
loopne
push
gs
aaa
push
mov
addb
sub
das
idivb
ficomps
mov
push
ljmp
and
ljmp
fs
rcrb
jbe
fmuls
cmp
ret
cmc
and
jae
arpl
inc
push
mov
sbb
cmc
jecxz
dec
add
ss
inc
lcall
add
jg
xchg
scas
addr16
xor
and
mov
icebp
pop
adc
movsb
mov
fisubl
mov
in
mov
adc
popa
movsb
add
ljmp
fwait
and
popa
or
inc
arpl
add
mov
out
outsl
xchg
jle
shll
ret
mov
pusha
jmp
test
lret
int3
add
pusha
cmp
clc
or
mov
sub
jge
les
sub
or
movb
aam
push
pop
hlt
jmp
jecxz
push
movsb
mov
arpl
pop
mov
xor
xor
shll
imul
fldl
lds
jno
js
add
call
inc
add
adc
scas
loope
inc
mov
ds
adc
cmp
pusha
cld
gs
ds
fisttpll
loopne
notb
andl
ret
out
fcoms
loope
sub
pop
dec
test
std
add
fneni(8087
in
sub
mov
faddp
dec
mov
loop
ja
into
push
cld
dec
pushf
mov
xchg
add
stos
filds
adc
pop
addr16
aam
fs
nop
push
mov
jnp
pop
loopne
inc
mov
mov
shrb
movsb
adc
arpl
imul
jae
sub
fisttps
mov
jbe
sub
pop
mov
out
mov
in
fisubl
in
aas
dec
or
pop
nop
test
popa
in
cwtl
push
xchg
mov
sbb
mov
fsub
xor
inc
inc
mov
fsubrl
or
imul
loope
jae
cmp
jnp
fsub
int3
in
sbb
sub
stc
inc
aaa
mov
lods
popa
mov
orb
or
xor
pushf
fistl
outsb
scas
mov
jmp
and
fiaddl
in
fnstsw
neg
xor
cmp
enter
mov
fs
shrb
pop
dec
jmp
sahf
xchg
insb
sub
loopne
test
dec
outsb
add
gs
xchg
push
shlb
inc
loope
arpl
dec
test
fldenv
dec
frstor
fdivs
movsb
or
popa
dec
and
repnz
test
in
mov
pop
cmp
ficomps
pop
les
sti
pusha
mov
adc
cmpsb
fadds
popa
movsb
pop
shll
dec
xor
rorb
push
arpl
sbb
dec
movsb
sbb
test
out
push
adc
test
std
lea
ja
xchg
loopne
cmc
jmp
daa
dec
mov
loope
inc
movsl
push
pop
fldenv
inc
pop
mov
bound
shrb
pop
shl
mov
xchg
les
push
mov
jge
cmp
icebp
test
sahf
mov
in
movl
add
adc
cmp
xchg
and
jle
cli
imul
sbb
lods
mov
mov
adc
mov
pop
lds
lods
adc
shl
push
iret
sbb
jb
ror
loopne
mov
mov
stc
pop
mov
or
pop
scas
inc
imul
lods
test
mov
repz
shlb
xchg
mov
mov
out
lea
cmp
pop
rclb
xorb
repnz
mov
cld
sbb
js
push
xor
cmc
push
aas
loop
mov
jne
xchg
imul
std
imul
pop
outsb
adc
mov
movsb
in
pop
xchg
ret
daa
test
loope
xrelease
mov
fsubrl
cmpsb
mov
cs
push
les
les
push
test
inc
popf
ljmp
xchg
lock
add
scas
or
inc
ds
sub
sub
cmpsb
mov
sub
hlt
mov
imul
mov
popf
hlt
pushl
aas
xchg
or
sub
enter
outsb
mov
arpl
push
and
sbb
jge
mov
cs
fwait
cmp
or
rcrb
movsb
push
stos
mov
popf
stos
fs
inc
shl
fbld
pop
mov
mov
and
inc
mov
fcoml
or
xchg
jo
cmc
insb
inc
int3
hlt
xor
ljmp
jmp
test
rcrb
movsb
cmp
aas
lock
add
xchg
stos
mov
fs
ja
mov
xchg
jle
lret
ret
dec
and
cmp
pop
pop
pop
mov
mov
mov
dec
lods
inc
mov
sbb
cwtl
cltd
loopne
cmc
stc
aaa
cld
xor
mov
add
adc
gs
xchg
subl
and
pop
mov
mov
xlat
stos
call
enter
fsubr
pop
fildl
xchg
outsb
int3
pop
pop
ja
sti
sub
sbb
jecxz
and
icebp
mov
pop
mov
cmp
push
popa
aad
jge
decb
push
scas
mov
pop
inc
fstp
jmp
mov
sbb
pop
adc
sub
adc
mov
sbb
push
ds
jnp
sbb
sbb
imul
sahf
xor
and
cwtl
sub
pop
push
pop
inc
into
out
and
ja
and
pop
shrb
pop
inc
stos
loop
push
testl
pop
int
inc
push
lods
mul
adc
fs
mov
mov
mov
fstps
xchg
scas
fsubr
repz
jp
adc
stc
pop
stos
or
xor
std
push
add
pushf
adc
loope
inc
stos
mov
add
inc
fnstcw
int3
cmp
into
xchg
adc
rcrb
cmp
fistl
inc
fucom
pop
test
pop
scas
push
mov
ret
dec
lcall
push
adc
fadd
outsb
adc
jmp
lea
fdivr
sub
mov
push
jbe
pushf
std
mul
mov
inc
call
push
sbb
jmp
ret
inc
jg
or
fcomi
lock
rcrb
dec
mov
jmp
cmpsb
and
stc
pop
mov
xchg
inc
stos
iret
adc
jo
lods
js
xorl
jb
mov
sarb
inc
dec
jne
cwtl
push
pop
sbb
loope
insb
mov
es
pushf
lds
enter
ljmp
fwait
loopne
and
movsb
in
mov
jne
lock
je
out
arpl
cwtl
sahf
lret
call
jae
arpl
cmpl
jge
ret
in
test
cmpsb
scas
and
inc
ret
xchg
mov
cltd
mov
cltd
cwtl
dec
jo
cmp
fadds
mov
negl
push
add
imul
scas
mov
add
mov
pop
inc
adc
cwtl
sub
lods
jg
push
aam
stos
sub
aam
lock
jge
jmp
out
shll
mov
scas
pop
adc
xor
push
or
jecxz
push
mov
scas
mov
arpl
je
jmp
mov
mov
inc
sbbb
imul
sub
mov
mov
mov
add
inc
inc
mov
jns
repnz
popa
mov
testb
xchg
mov
or
loope
mov
pop
movsb
inc
sub
mov
push
bound
lods
test
xchg
icebp
sub
pop
hlt
call
outsb
push
xor
xor
cmp
inc
neg
push
jae
mov
rorl
int
ret
mov
push
call
clc
cmp
icebp
out
mov
insb
mov
mov
xor
imul
mov
push
pop
ret
je
cmc
sbbb
sub
push
subb
sub
jle
sbb
test
rorl
dec
fs
das
cwtl
jg
inc
loope
jb
dec
xor
das
repnz
loop
push
popf
pusha
pop
cmp
mov
test
movsl
outsb
dec
hlt
icebp
xchg
mov
cmc
cwtl
inc
cwtl
jb
dec
fmulp
pop
push
test
inc
xchg
shrb
aam
pop
pusha
ljmp
pop
or
xor
fstpl
xchg
fstps
out
xchg
cwtl
pop
in
mov
test
repz
outsb
in
pop
sub
inc
les
sbb
fnstenv
call
test
addr16
mov
cmp
or
lods
mov
pop
xchg
insb
jae
add
lret
loop
cmpsb
rorl
inc
push
jb
iret
aam
addr16
aad
push
pop
cmp
shlb
in
pop
je
sub
icebp
pop
adc
cmpsl
inc
inc
idiv
fcomp
outsb
xchg
add
add
mov
test
dec
mov
into
or
push
imul
pop
adc
dec
imul
ja
dec
pop
push
iret
in
repnz
daa
sub
mov
outsb
lods
lds
fildl
pop
dec
jl
fldl
xchg
push
inc
sbb
dec
cmc
ds
add
mov
push
pop
addr16
xchg
push
repz
push
dec
mov
daa
in
pushf
popf
or
jge
add
ret
push
push
mov
jnp
pop
push
or
int3
imul
loope
neg
lds
rolb
shlb
imul
jae
and
or
lods
fistps
cli
test
shll
imul
mov
addb
mov
testl
pop
cs
insl
aam
fsub
jo
inc
cwtl
xor
bound
sahf
sub
cli
jns
xor
xor
pop
pop
pop
mov
into
pop
rclb
das
mov
fs
imul
pop
addr16
cld
fcoms
pop
in
xchg
or
sub
add
mov
sahf
lret
inc
ja
or
jle
es
lahf
pop
lock
cmp
loop
sbb
xchg
das
sub
dec
lret
loope
adc
gs
les
lods
push
push
jp
cmp
pop
jecxz
dec
mov
adc
xchg
test
push
imul
or
push
test
push
movsl
pop
jmp
cmp
fdivs
cmc
inc
iret
pop
rcrb
lcall
dec
mov
popl
fwait
inc
int
push
call
lea
imul
add
inc
cmp
or
sbb
es
fmul
push
outsl
loop
push
lds
pop
call
pop
hlt
add
mov
cwtl
int3
inc
cs
mov
movsl
mov
mov
enter
jmp
notl
jecxz
pop
je
add
std
pop
cmc
icebp
cmp
fisubs
pushf
mov
and
loop
and
filds
aad
fsubl
fs
xlat
jl
xchg
jbe
adc
jne
mov
aaa
pop
lcall
iret
pop
pop
pushf
add
adc
jb
pushl
je
pop
popa
and
mov
pop
inc
mov
fsub
jo
pop
adc
xchg
in
ljmp
jno
inc
je
xor
fmuls
add
daa
push
push
subl
push
or
pop
shrb
mov
pop
mov
add
pop
xor
add
jno
repz
pop
iret
xor
mov
push
xor
ret
sub
xor
xchg
mov
mov
repz
test
sbb
pop
gs
mov
flds
cmp
ficoml
sub
je
negb
pop
and
push
dec
scas
gs
adc
lret
outsb
icebp
in
jno
jecxz
nop
popf
pusha
cmp
pop
inc
or
ja
js
cmp
stc
inc
push
mov
mov
int3
addr16
ret
fs
xchg
pop
rcrb
mov
sahf
ja
dec
and
lcall
popa
xor
sbb
pop
mov
jo
arpl
mov
lcall
mov
add
inc
push
imul
fucom
test
pop
xchg
jae
pop
idivl
movsl
lret
mov
sbb
enter
jmp
icebp
push
pop
sub
ret
std
aad
scas
addr16
hlt
jae
sub
cmp
je
xlat
pop
addr16
data16
inc
leave
in
jge
adc
lahf
fdivr
pop
gs
pop
stc
xor
call
pop
and
js
js
dec
mov
repz
adc
addr16
scas
mov
jno
pop
nop
in
jmp
mov
and
jb
mov
jmp
pop
pushf
test
inc
xor
pusha
loopne
stos
mov
js,pt
adc
mov
pop
imul
adc
icebp
sub
sahf
scas
int3
inc
pop
std
xchg
jnp
outsl
lret
cltd
addr16
lahf
mov
add
pop
add
xchg
mov
pop
rcl
pop
pop
pop
subl
sbb
fdivrs
insl
push
lods
outsb
dec
push
gs
xchg
sarl
cmp
mov
pop
popa
cmp
cmp
repz
test
xor
pop
push
xchg
ficomps
pop
mov
sbb
adc
je
lea
mov
or
mov
sub
jb
xchg
fdivrs
loopne
subb
out
or
sbb
push
imul
cmp
adc
mov
pop
mov
push
adc
clc
sub
pop
push
daa
mov
cmp
add
push
cmpsl
sbb
pop
lcall
pop
mov
mov
inc
pop
int
out
inc
dec
cmp
mov
fs
pop
das
mov
mov
rorl
iret
mov
outsb
cmp
xchg
or
inc
in
xchg
in
fisubl
pop
mov
aas
dec
mov
xchg
negl
inc
mov
cmp
cld
or
call
fadd
push
stc
pop
jle
xchg
add
sub
or
insl
pop
out
outsb
jne
cmp
in
or
pop
fwait
push
adc
data16
out
cmp
ljmp
pop
cmp
and
mov
add
ficompl
ss
or
dec
in
inc
xchg
mov
add
out
xchg
std
sbb
cmp
adc
dec
out
xchg
mov
inc
aas
out
js
pop
loopne
pop
shr
xor
mov
sub
loope
sbb
add
dec
dec
xlat
aam
pop
es
adc
lret
outsb
pop
jne
ffree
lds
pop
lret
push
pop
dec
in
pop
imul
test
mov
mov
xchg
or
pushf
pop
out
dec
shll
daa
pop
test
sub
ds
xor
jo
ja
add
add
pop
into
xor
fwait
cmp
sbb
mov
mov
hlt
cmp
pop
pusha
mov
adc
inc
imulb
pop
inc
lods
imul
push
int
pop
sbb
icebp
popl
pop
loop
test
sbbl
aas
cltd
fbld
mov
pop
push
xor
pop
hlt
mov
mov
pop
cmp
in
loop
insl
enter
fdivl
sbb
pop
or
ret
mov
cmp
pop
push
mov
adc
or
xor
out
cmpsl
loope
sti
insb
sub
jmp
pop
mov
mov
in
pop
out
cmpsb
call
inc
pop
rcl
or
sbb
mov
mov
cwtl
lcall
jle
data16
ljmp
imul
xchg
shr
pop
out
or
jnp
adcb
add
xchg
cmp
mov
sbb
dec
pop
popf
mov
in
xor
ret
leave
imulb
ret
cmc
pop
mov
mov
aad
push
lahf
xchg
jbe
pop
xchg
into
cmp
pop
cwtl
and
push
cmp
ja
mov
rol
pop
int3
repnz
mov
bound
or
out
clc
les
bound
sbb
pop
pop
push
mov
mov
je
mov
fdivs
push
xor
cs
inc
std
dec
out
jl
scas
and
faddp
or
dec
sbbb
jne
mov
fistpll
xchg
dec
or
cmp
and
pop
aam
inc
loopne
jo
xor
shlb
js
sbb
push
shll
icebp
fcomp
fs
fadds
arpl
pop
adc
cmp
fisubl
mov
cmp
add
xor
lock
mov
or
add
out
or
xchg
lcall
lret
std
rorb
call
mov
pop
inc
mov
jmp
leave
push
inc
jl
insl
aas
data16
cwtl
mov
push
dec
pop
mov
shll
cmp
sbb
loope
dec
adc
lcall
sbb
xor
outsl
add
mov
lcall
fidivrl
imul
xlat
push
js
in
inc
mov
xchg
mov
pop
xor
inc
pushl
scas
outsb
mov
inc
rol
xor
xor
sbb
sbb
test
lods
sbb
push
mov
inc
pop
mov
shrl
mov
int
mov
shlb
push
push
inc
push
cli
pop
xchg
mov
push
mov
sahf
push
sub
and
xchg
pop
jp
loop
bound
mov
and
pop
pushf
xchg
out
xchg
sub
aas
mov
push
orb
sub
adc
aaa
aas
mov
gs
mov
adc
outsb
cmp
fisubl
stc
icebp
push
jg
inc
les
xor
cld
cli
daa
cmc
lret
bound
mov
scas
dec
fwait
pop
pop
mov
dec
fldt
xor
arpl
scas
fs
mov
fmuls
sbb
sbb
mov
addr16
orb
push
roll
sbb
inc
pop
ljmp
inc
sub
loop
push
cltd
push
or
mov
xchg
in
popf
push
js
lea
repz
addr16
mov
addr16
sbb
addr16
pop
push
mov
pop
sub
mov
test
inc
out
cmpl
ss
pop
es
adc
dec
in
fs
mov
into
rolb
add
scas
shl
jo
addl
ljmp
fstpl
jne
mov
mov
loopne
mov
insb
popf
lds
jecxz
fs
dec
sbb
fisubrl
insb
jl
jb
ja
out
jo
sbb
mov
data16
loop
adc
rclb
ret
arpl
aaa
int3
jge
pop
cmp
add
inc
sbb
xor
xor
or
sarb
repz
pushf
cmp
aad
stos
lods
out
daa
call
add
and
fcomp
movsb
pop
cltd
loopne
leave
xchg
pop
js
mov
push
add
scas
push
jnp
frstor
mul
ds
mov
push
ljmp
sub
dec
call
mov
mov
ljmp
add
xor
inc
xchg
movsb
pop
mov
pusha
push
sbb
xchg
repz
adc
push
dec
sub
out
push
or
inc
inc
adc
popf
push
dec
loope
shll
add
mov
cwtl
in
add
xor
shrb
mov
jmp
push
test
mov
loopne
pop
imul
aas
and
adc
test
scas
cmp
vmwrite
int
mov
test
js
push
pop
es
ficoml
loope
lods
sbb
loopne
hlt
push
ror
pop
stos
mov
pop
loope
cmp
popa
xor
fs
xchg
mov
add
inc
xor
push
insb
rolb
mov
inc
add
shrb
push
cwtl
into
clc
pop
jo
mov
or
sbb
mov
in
hlt
aaa
addr16
mov
das
cltd
lahf
dec
jmp
loope
jge
js
lea
lds
cwtl
test
push
mov
inc
sbb
mov
and
es
test
fnsave
aam
cwtl
pusha
inc
ss
add
imul
mov
add
push
mov
test
adc
jnp
adc
ret
xor
jns
pusha
loope
pop
fs
sbb
mov
fidivrl
test
iret
push
stos
mov
fwait
jmp
or
cltd
addr16
sahf
cmp
mov
sbb
xchg
pop
bound
adc
call
in
jge
xor
xor
push
and
dec
lea
pop
test
pop
call
jecxz
pop
push
mov
jge
bound
pushf
adc
call
in
sbbl
fs
or
cld
test
xchg
cld
or
fiaddl
sbb
sar
bound
inc
mov
add
dec
movsl
ljmp
subb
mov
xchg
push
pop
sbb
mov
jae
xchg
cmc
ss
test
push
fldl
dec
gs
inc
push
mov
or
push
adc
xchg
js
pop
push
lods
in
aaa
push
lds
sub
in
jns
inc
mov
mov
adcb
or
and
cwtl
or
jg
sti
mov
cli
mov
mov
stos
jae
popa
mov
xor
ljmp
or
mov
sub
cli
daa
fadd
sbb
pop
cmc
rcrl
aas
insl
fidivrl
mov
pop
mov
frstor
dec
js
mov
jecxz
test
push
lret
fisubrs
or
stos
mov
fstl
repnz
inc
ret
sbb
addr16
inc
mov
adc
mov
int
mov
jae
inc
inc
nop
jns
test
add
js
and
cwtl
mov
xor
roll
jo
dec
inc
jp
push
xor
inc
push
mov
sbb
jae
call
idivb
sub
lds
or
scas
iret
or
cmpb
push
mov
gs
or
dec
es
or
or
push
xor
cwtl
dec
inc
ret
call
push
cwtl
stos
insb
fisttpl
jl
xlat
ljmp
adc
es
mov
adc
push
hlt
dec
popf
icebp
pop
out
out
push
clc
shrl
dec
mov
mov
cmp
push
add
jge
movsb
addr16
mov
or
pop
out
loopne
xor
imul
push
pop
int
addb
lea
outsl
push
incb
mov
in
gs
loope
xchg
in
lods
adcb
stc
mov
inc
sbbb
std
adc
popa
inc
mov
sub
mov
push
mov
bound
scas
mov
fidivrl
sub
mov
mov
scas
out
sar
jns
in
iret
jp
and
push
outsl
cmp
push
jl
js
in
fnsave
outsb
enter
mov
xchg
in
inc
and
cwtl
loop
adc
inc
adc
pop
icebp
orb
cmp
imul
sub
pop
push
mov
jg
ret
inc
jnp
push
js
in
enter
insb
inc
cmpsl
mov
mov
mov
inc
mov
fstl
jmp
mov
sub
loop
ret
mov
aas
jg
mov
test
pop
inc
jge,pt
test
ret
ljmp
jns
aas
push
jno
stos
mov
hlt
insl
adc
outsl
insb
vmwrite
and
mov
jmp
in
xchg
subl
test
insl
imul
push
fchs
cwtl
lods
mov
pop
fcomps
enter
lcall
sbb
pusha
out
cmpsb
imul
push
lahf
fnstcw
out
xorb
mov
xchg
movsb
mov
js
jne
lret
inc
pop
inc
sbb
test
popw
mov
adc
mov
ljmp
xor
cs
notb
fsub
jno
in
cwtl
ret
fildl
add
test
aam
add
dec
pop
or
ja
loop
fnstsw
inc
lcall
cmp
loope
push
jae,pn
shl
js
xchg
cmc
and
out
cwtl
shlb
push
cmc
sahf
cmp
test
cmp
and
aad
out
sub
test
push
pop
and
mov
cli
jbe
cmp
mov
call
scas
adc
aam
in
mov
sbb
icebp
adc
xchg
out
fsubrl
pop
sub
and
push
or
movsl
xchg
cmp
jbe
js
pop
imul
push
stos
fs
push
lods
in
inc
cmpsb
pop
cs
adc
jo
aad
adc
pop
inc
js
subb
icebp
movsl
pop
pusha
jae
mov
call
jbe
popa
stos
movsb
xor
aaa
lds
dec
nop
filds
pop
inc
pop
mov
fs
loopne
test
hlt
inc
lahf
nop
jg
cmp
push
adc
fmuls
out
mov
pusha
mov
pop
pop
arpl
jo
dec
mov
and
adc
mov
das
mov
enter
push
xor
xchg
filds
hlt
sub
mov
or
xchg
xchg
and
imul
push
leave
push
mov
sub
jp
pop
pop
fdivrs
pushf
inc
jo
pop
cli
movsl
push
cs
jp
pop
jl
mov
pop
pop
mov
out
jns
gs
sbb
pop
mov
push
dec
arpl
je
ljmp
add
and
dec
popa
xchg
mov
call
arpl
mov
xchg
or
popa
stos
mov
pop
pusha
inc
roll
xor
inc
cld
aaa
or
test
inc
cmp
test
xchg
add
sbb
mov
rclb
mov
mov
sbb
jl
hlt
faddl
inc
jg
sbb
fidivrs
xor
lods
push
cmp
inc
jge
jno
cwtl
sbb
icebp
dec
fbstp
stos
sarb
fnstcw
mov
outsb
scas
add
jle
lret
adc
or
or
xchg
mov
add
push
pop
xchg
test
cmpsl
test
push
inc
mov
pop
inc
jecxz
jge
pusha
adc
popa
jb
cs
call
mov
mov
pop
add
sub
xchg
xor
shll
mov
sbb
pop
negl
xor
inc
mov
mov
imul
adc
imul
fs
sbb
jo
and
add
test
dec
call
test
sub
test
ss
stos
or
pop
mov
adc
orb
movsl
les
addr16
rcr
sti
stos
adc
fdivl
in
mov
or
cmp
dec
and
sbb
or
adc
pop
pop
pop
jno
pop
mov
bound
or
jne
xchg
lock
js
addl
or
clc
and
inc
adc
push
pop
inc
cmc
sub
testl
mov
arpl
pop
rclb
lods
mov
mov
sub
lods
fiaddl
addr16
in
sbb
mov
addb
mov
scas
fdivrl
gs
cwtl
fisubl
jno
add
fcmovnb
push
add
or
or
nop
pop
sahf
pop
shl
inc
push
lahf
rorl
mov
rcrl
dec
stc
dec
and
addr16
sbb
ret
dec
stos
xchg
pop
pushl
dec
cmp
push
sbb
stos
pop
pushf
out
add
mov
sbb
jecxz
scas
in
push
pop
cwtl
adc
mov
test
outsl
mov
or
cmpsb
add
stc
or
sbb
or
adc
adc
stc
adc
test
mov
iretw
mov
jnp
repz
push
negb
dec
pop
pop
dec
scas
adc
xchg
add
pop
mov
gs
pop
icebp
test
js
mov
inc
jno
jae
sti
jecxz
ss
add
out
sbb
mov
movsb
lret
clc
xchg
and
inc
jle
inc
mov
fidivrs
lcall
negb
sbb
pop
int
cwtl
push
dec
sub
pop
shr
mov
mulb
xchg
arpl
int3
add
cmp
inc
xchg
jl
rclb
lds
mov
mov
popa
inc
cmp
mov
dec
stc
or
dec
adc
ficompl
sbb
cli
test
nop
pop
mov
inc
and
push
scas
clc
pushf
nop
adc
xor
push
add
fadds
and
je,pt
outsb
loop
mov
pop
ret
xchg
fiaddl
add
arpl
sbb
rorb
jo
sub
loop
inc
fsub
add
or
pop
inc
inc
negl
adc
loope
pop
scas
pop
lods
shlb
sub
lock
cld
std
loopne
jns
mov
lock
xchg
out
cmp
mov
ljmp
fsubs
pop
ficompl
sbb
inc
shrl
mov
repnz
sbb
or
cmp
dec
fstp
les
std
repnz
cmpsl
mov
jl
sbb
scas
sub
icebp
inc
inc
hlt
sub
jmp
or
int
jo
add
push
sub
je
push
js
pop
movsb
lods
cli
mov
inc
out
mov
cmc
pusha
mov
arpl
shl
adc
fwait
adc
push
add
push
or
push
pop
xchg
jno
adc
adc
pushf
shrl
rolb
jge
push
mov
imull
outsl
adc
mov
jl
popa
and
adc
flds
lods
inc
inc
xlat
stos
jg
aam
pushf
mov
fwait
and
rcll
repnz
loop
sbb
add
imul
sub
jle
pop
add
std
sub
iret
loopne
or
stos
je
and
xor
insb
pop
aas
das
bound
xchg
into
inc
adc
add
pop
xchg
cld
and
xchg
int
imul
pop
loopne
insb
mov
jg
ret
fadds
decb
or
pop
pop
lds
inc
push
cmpsl
pop
ljmp
leave
jmp
outsl
mov
loopne
sub
lods
enter
lods
loop
pusha
adc
in
sub
sar
jp
mov
ljmp
pusha
push
adc
fwait
xchg
jae
aad
cwtl
aas
jnp
dec
jo
inc
inc
movsb
pop
orb
dec
cmp
dec
push
into
sbb
push
pop
and
sti
pop
mov
pop
and
pop
dec
xchg
add
inc
loop
fcomps
mov
add
pop
push
mov
mov
into
pop
cli
fisttps
sub
jg
inc
dec
cwtl
test
mov
mov
cld
sbb
fwait
mov
cwtl
or
pop
pop
xchg
mov
dec
pushf
testl
fldl
mov
test
aam
add
hlt
pop
or
dec
mov
pop
out
das
or
lods
dec
sbb
inc
popf
mov
rclb
and
data16
pop
dec
test
das
xchg
dec
mov
mov
sbb
fsub
test
cltd
mov
lcall
and
sub
push
jb
lods
loopne
inc
push
mov
mov
roll
in
sub
mov
and
and
iret
pop
push
dec
inc
js
mov
idivl
scas
push
std
cmpsb
or
fadds
cmpsb
fimuls
int3
js
pop
sbb
icebp
jg
fsubrs
dec
sub
test
inc
lods
sub
jecxz
jne
add
mov
lods
fbstp
imul
je
ss
ljmp
cmpsb
test
mov
or
jg
sub
test
inc
pop
sbb
ret
nop
loop
scas
pop
pop
inc
adc
pop
movl
jmp
add
push
lea
jge
pusha
pushf
lea
jne
push
mov
mov
pusha
pushfw
popw
xor
seta
bt
neg
mov
pushl
clc
push
not
cmc
clc
add
clc
clc
not
movb
add
cmc
movw
pushw
popfw
mov
call
mov
ret
push
or
enter
fsubs
rorb
sbb
inc
push
jg
inc
jmp
cmpsb
insl
mov
test
fwait
and
shrb
stos
ds
mov
xlat
sub
stos
repnz
lret
decb
dec
pop
push
and
push
testl
cmp
iret
cs
aas
push
shll
jp
cltd
xchg
test
pop
pop
sbb
sbb
cltd
movsb
xchg
cmp
test
movsb
cltd
shlb
enter
mov
sbbl
repz
ror
xchg
rol
bsf
mov
and
test
rol
adc
mov
jmp
inc
pop
repz
or
cmp
shlb
aam
int3
pop
rolb
push
cmp
cmp
es
xor
xor
pusha
es
mov
and
rcrb
mov
cmp
repz
lret
fsubrs
sbb
icebp
pushf
mull
xchg
subb
xorl
dec
imul
lea
lcall
add
test
xor
cs
pop
leave
call
push
xor
xchg
fcomi
mov
fcomi
lret
xchg
xchg
out
push
ss
xchg
pop
inc
sbb
jno
lcall
or
push
push
xor
mov
dec
and
dec
jbe
fwait
xchg
je
stos
dec
adc
push
inc
mov
or
outsl
or
sbb
cwtl
cmp
push
jge
shll
xor
jle
nop
mov
adc
inc
add
ffree
loop
ljmp
jno
and
inc
cmp
nop
dec
mov
popf
mov
dec
ss
cmc
mov
cmp
imul
out
sub
dec
xorb
std
jb
pop
shlb
sub
clc
mov
jbe
jbe
mov
pop
icebp
arpl
mov
ds
sbb
adc
je
sub
les
repz
push
or
int3
insl
cld
xchg
or
adc
and
test
cs
add
cmp
insb
out
daa
jp
stos
scas
popf
in
aad
stos
mov
dec
fcoml
sub
cltd
pop
pop
xor
push
adcb
pop
mov
xor
jb
outsb
aas
jne
adc
dec
sbb
fildl
cli
pop
lahf
clc
cwtl
mov
ja
push
sub
sarl
mov
in
jp
cltd
loopne
xchg
rorl
stc
mov
ret
mov
stos
arpl
scas
hlt
lret
jno
je
pushf
sbb
aad
sub
push
ds
aam
xlat
cmpsb
sub
pop
sbb
cmpb
xchg
and
bound
fxch
sti
ret
dec
and
push
cmpsb
add
pop
orl
mov
mov
mov
fldt
adc
add
int3
mov
lret
out
scas
lahf
xchg
mov
in
call
and
jl
jmp
sub
mov
jecxz
pop
xchg
jbe
xchg
adc
add
arpl
icebp
mov
jnp
test
push
out
dec
cmp
lea
adc
dec
sub
jmp
or
pop
les
sti
imul
sub
push
nop
out
scas
xchg
sub
cmpsl
sub
std
adc
ja
ja
pop
inc
ja
aas
jbe
sbb
mov
xor
push
pusha
mov
cld
xlat
not
movb
cmp
add
call
movw
movl
pushf
movw
mov
push
movw
pushl
ret
dec
adc
sbb
and
or
test
rclb
pop
dec
lret
addr16
jmp
mov
jg,pt
xor
push
shlb
push
pop
daa
inc
push
mov
sub
jo
sbb
push
aad
sub
xchg
mov
test
pushf
mov
movsl
fdivr
push
sarl
int3
sbb
mov
jbe
rcll
mov
pop
rorl
add
scas
out
mov
xlat
xchg
xchg
notl
testb
pop
outsl
insb
xor
cs
insb
add
jno
and
inc
cmp
lret
push
fstpt
cli
imul
mov
pop
sub
push
popf
dec
pop
xchg
mov
cmpsl
mov
test
push
stos
sbb
subb
inc
push
jnp
pop
dec
xchg
dec
enter
mov
int3
sub
jmp
push
xor
xor
cmc
add
dec
fdiv
gs
mov
cld
cltd
fdiv
test
mov
fsts
repnz
fwait
pop
or
cld
xchg
adc
sbb
pushf
or
jbe
cwtl
or
scas
mov
cmp
es
add
test
arpl
xchg
std
mov
repnz
xchg
iret
mov
out
ljmp
cmc
xchg
mov
pop
or
inc
pop
cmc
loop
rcl
cmp
aaa
ds
push
and
in
jae
and
out
dec
ret
dec
test
sub
lock
xlat
mov
lahf
movsb
dec
ljmp
or
or
push
xor
jns
movsl
cld
outsl
lea
jb
push
mov
pushl
ret
cwtl
add
pop
or
xchg
out
jecxz
pop
xchg
outsb
sti
jle
bound
mov
pop
xchg
lahf
adc
call
into
push
imul
pop
adc
push
pop
push
sbb
lcall
jnp
mov
dec
repz
push
dec
dec
add
int
int
repnz
mov
cmp
push
push
jb
test
sub
cmp
jb
jbe
jp
push
das
push
and
and
test
sub
cmc
clc
repnz
pusha
pushf
lea
jne
jmp
rcrl
loope
aaa
into
cmp
or
mov
xchg
flds
clc
pop
loope
pop
rorb
fisubs
fcom
scas
into
jg
sbb
mov
scas
cmc
xor
jnp
test
pop
xchg
pop
pop
mov
loope
shlb
pushw
jns
jo
jmp
fstps
mov
in
repz
mull
jl
daa
mov
outsb
push
ret
and
aad
jecxz
xor
pop
cmp
daa
fidivl
adc
je
popf
inc
pop
jo
sub
nop
cmpsl
outsl
repnz
aad
add
clc
mov
adc
cs
pop
jp
jmp
sahf
bound
out
in
addr16
cmpsb
push
insb
pop
enter
jp
dec
push
pop
xor
repnz
adc
pop
fmuls
hlt
sub
or
sub
inc
xchg
inc
ja
push
cli
cwtl
cmp
cltd
mov
inc
xchg
fwait
dec
fsubr
shl
cmp
xlat
inc
ficompl
xor
mov
pop
cwtl
ret
push
adc
adc
jge
leave
pop
mov
pop
sub
sti
pop
scas
inc
shlb
inc
aad
loop
sub
inc
mov
pop
mov
mov
mov
jbe
mov
dec
push
adc
cmp
xchg
pop
fdivrl
sbb
pop
shr
xchg
and
add
cmpsb
repnz
sub
cld
and
push
pop
cmc
dec
push
inc
lret
mov
les
sbb
xchg
stos
push
lahf
sub
xchg
lret
insb
dec
mov
imul
test
or
push
daa
stos
inc
mov
sbb
push
dec
js
cmp
inc
jne
adc
dec
enter
les
daa
in
mov
outsb
cmp
sbb
xchg
pop
call
shrl
push
ret
pop
shr
test
fmul
dec
pop
xchg
mov
pop
cmpsl
and
xor
lret
add
pop
xor
lcallw
testb
sbb
pop
dec
or
jg
lods
pop
jnp
and
out
jp
or
jno
data16
sbb
out
push
ljmp
rcr
or
dec
out
insl
loopne
push
add
add
sub
sub
xchg
daa
jp
pop
and
pop
mov
pop
pop
dec
or
jb
add
je
pusha
xchg
pop
cmc
pop
fmul
mov
pop
push
je
jmp
sbbl
cwtl
es
aaa
mov
fwait
and
fdivs
pop
jp
arpl
stos
in
or
in
cltd
dec
jbe
jecxz
push
pop
cmpsl
xchg
mov
mov
lea
outsb
in
sub
jb
repz
mov
pop
stos
popa
push
aad
mov
js
mov
xchg
jae
popf
adc
mov
pop
fsubs
jnp
mov
pop
rclb
ja
fwait
divl
mov
and
inc
pop
gs
cmp
cmc
jle
xchg
movsb
sub
iret
mov
gs
jl
lods
mov
pop
movsl
push
pop
jge
or
cmp
test
or
xchg
jge
ja
xchg
lods
push
fcoms
lcall
inc
sahf
faddp
inc
mov
mov
mov
inc
sbb
aas
repnz
pop
push
lds
hlt
mov
nop
sti
pop
dec
pop
cmp
rep
pop
jg
pushf
and
and
out
mov
pop
gs
xlat
cmp
movsb
xchg
mov
cli
cmp
or
push
pop
and
mov
sbb
push
and
and
and
fs
jno
push
test
ss
jmp
xchg
fstps
pop
pop
rcrl
mov
jno
mov
pop
mov
pop
movsl
inc
and
lock
pop
add
push
xchg
fwait
lods
push
scas
xchg
xchg
mov
ja
adc
cmp
jnp
sbb
pop
xchg
jge
fwait
xlat
shll
pop
jp
movsb
insb
daa
dec
pop
jne
sub
fists
or
nop
xor
fmuls
xlat
icebp
push
into
outsl
fisubs
jne
arpl
rolb
pop
repnz
sub
movsb
push
mov
xor
loopne
pop
in
adc
pop
cmpb
push
leave
loop
pop
in
jno
mull
cmc
aam
pop
xchg
js
jl
rclb
or
dec
shl
inc
add
shlb
sbb
push
pop
int3
pushf
pop
mov
mov
mov
cltd
xorl
fcomp
data16
jl
add
and
negl
loope
pop
jns
lods
int
cmpsb
sbb
lahf
movsl
mov
xchg
pop
xchg
in
andb
mov
scas
xchg
cmp
jae
daa
jno
mov
push
scas
in
or
jle
pop
out
cmp
cmovo
adc
or
repnz
pop
mov
scas
call
testl
cwtl
nop
xchg
sbb
mov
lret
sbb
inc
lcall
lret
imul
pop
ja
mov
call
mov
mov
mov
pop
and
nop
popa
add
inc
fbld
pop
loope
daa
jnp
or
mov
int3
sub
shlb
test
int
out
fsubrs
in
pop
pop
cmp
fs
je
jne
xchg
movsb
and
sbb
jl
mov
arpl
lcall
adc
pop
pop
fisttps
mov
jno
pusha
pop
cmpb
xchg
sbb
pop
cmpsl
mov
pop
mov
test
mov
inc
cmpsl
add
mov
test
imul
mov
mov
sti
movsl
clc
test
cmc
leave
jge
test
cwtl
cmp
jb
push
into
sub
mov
pusha
das
push
sbb
add
add
mov
rorb
pop
and
enter
sbb
adcb
das
cmp
sbb
mov
fsts
dec
test
aaa
stos
aam
dec
mov
cmp
mov
leave
cmp
xor
call
dec
mov
lods
xchg
sbb
sub
scas
xor
aad
mov
add
stos
lret
idivb
in
lret
outsb
pop
fcomps
loop
add
xor
cltd
jo
xchg
push
lret
sbb
std
adc
mov
jmp
shlb
xchg
lods
imul
int
inc
pop
insb
test
clc
pop
ret
ljmp
jp
pop
je
lds
pop
fcoms
or
xor
adc
js
inc
and
push
mov
pusha
mov
mov
mov
mov
mov
jmp
rol
ret
jl
mov
pushf
enter
push
jl
mov
negl
sti
jl
mov
lcall
sbb
sub
inc
pushf
dec
push
loope
push
jp
inc
pop
pop
mov
mov
les
fldl2t
ljmp
xor
jmp
jp
pushf
jp
loope
push
jl
mov
loop
icebp
jmp
or
jl
mov
push
jp
pushf
test
jl
mov
clc
pushf
or
loope
push
xchg
lcall
ret
mov
imul
gs
int
fwait
je
sub
test
call
lods
shll
mov
mov
mov
cmpsl
enter
rcll
loop
dec
mov
scas
xchg
das
iret
push
stos
int3
in
into
xchg
inc
lds
lret
fwait
push
dec
fpatan
mov
scas
xchg
cmp
stc
xchg
pop
stos
dec
int3
lods
rol
fcmovnu
lahf
arpl
lret
rcrl
mov
mov
imul
int
dec
rcrl
pop
push
sbb
jns
cmp
push
lcall
and
pop
dec
int3
pop
test
add
ss
sub
cmpsb
and
mov
and
pushf
nop
ret
dec
mov
or
fisubs
mov
dec
cmp
lods
out
cltd
addr16
and
push
push
out
jne
or
lret
test
adc
cmp
inc
int3
xchg
int
xchg
test
gs
fistps
cltd
shlb
test
push
int
lds
sahf
mov
addl
test
in
into
jle
mov
js
push
push
in
shrb
lock
lret
in
jnp
mov
pusha
fadds
push
jb
mov
add
ret
or
dec
addr16
or
xchg
mov
popa
test
mov
adc
pop
es
mov
out
pusha
mov
imul
mov
adc
fs
jb
inc
stos
inc
insb
fidivrl
pop
aas
test
call
pop
insb
sub
xchg
push
insb
pop
int
call
pop
cmpl
fcoml
call
jl
roll
mov
lahf
pop
dec
arpl
call
cmp
fdivrs
mov
push
dec
push
mov
mov
jl
sub
fsubs
or
and
sbb
pushl
icebp
pop
cmp
or
push
mov
js
jno
cmp
fmul
sbb
cmp
adc
adc
clc
sbb
mov
fstps
loopne
call
or
dec
or
mov
mov
sbb
test
test
mov
es
fwait
dec
xchg
mov
adc
lcall
adc
sbb
lock
cmp
je
fcomps
lea
pop
push
inc
nop
dec
push
mov
xor
pop
xor
and
adc
mov
sti
pop
aad
mov
mov
fsubs
call
jp
mov
popf
test
pop
push
enter
pop
mov
scas
push
mov
push
or
add
xchg
and
cmp
pop
sbb
pop
sub
pop
and
pop
pushf
cmpsb
sahf
xchg
xor
addps
or
cli
and
push
xor
fcomp
xchg
mov
dec
das
rclb
sahf
mov
jg
push
jno
xor
cmp
push
or
and
jp
xchg
or
adc
jmp
and
inc
jl
and
out
dec
aas
and
adc
data16
sub
out
xchg
sub
mov
adc
mov
mov
cmp
pop
push
fdivrl
xchg
lcall
test
push
add
mov
mov
cmp
adc
mov
xchg
stos
mov
loop
pusha
lcall
jnp
iret
imul
push
sbb
fstpl
dec
faddl
jmp
div
into
jl
adcb
mov
add
and
popf
mov
xchg
loope
adc
pushw
and
mov
fsub
mov
pop
inc
data16
and
push
mov
pop
bound
sub
fs
push
dec
adc
push
cmp
nop
sbb
ret
ds
test
cmp
cmp
mov
enter
and
pop
xchg
mov
rcrb
xor
sbb
pusha
adc
push
jae
shrb
push
js
aad
sarb
xlat
mov
frndint
loopne
fcmovu
add
cmp
xchg
lea
nop
xchg
cltd
lcall
mov
movsb
movsl
cmpsb
cmpsl
test
stos
pop
stos
lods
lods
scas
scas
mov
mov
jmp
pusha
jp
pusha
jl
and
push
jae
push
ljmp
jl
fs
pop
out
cli
push
dec
add
inc
mov
pop
mov
sti
inc
cs
in
or
out
or
cmp
adc
repnz
push
jle
xchg
add
cmp
insb
cmpsl
mov
andb
jo
sbb
and
xchg
dec
cmpsb
int3
pop
jbe
fistps
call
pusha
dec
cmp
xchg
jp
dec
js
xchg
mov
nop
push
xchg
js
pop
js
pop
jge
xor
push
xor
and
fidivrl
cltd
imul
lcall
adc
xchg
and
jle
mov
xor
cmp
sub
out
das
imul
pusha
test
stc
nop
enter
pop
pop
out
mov
pusha
dec
imul
pop
xchg
pushf
imul
js
cmp
sbb
adc
imul
out
fdivrs
cmp
sarb
gs
jl
aam
fcompl
jmp
jnp
cmp
pushf
sub
pusha
fstl
enter
mov
mov
mov
loope
xor
popa
add
xor
sub
push
fsubrl
mov
sbb
cmp
lock
js
xchg
pusha
dec
jns
pop
dec
pusha
test
imul
cmp
mov
mov
insb
pop
cmp
call
jo
cmp
cltd
pop
data16
inc
mull
sbb
ja
pusha
mov
aas
stos
int
or
ds
faddl
jnp
rcrb
loopne
dec
fmuls
dec
fistps
mov
xlat
je
cmp
dec
jmp
xlat
popa
andb
mov
sbb
cmc
cmp
popa
jl
adc
push
lahf
pusha
and
fmuls
sti
ror
push
xchg
pushf
jbe
fwait
push
cmp
addr16
mov
mov
xchg
pop
cli
fcomps
dec
enter
js
call
push
pop
insl
cmc
jo
adc
lcall
fmul
mov
or
pop
nop
mov
popa
xchg
insl
fcomps
jo
push
push
cmp
xchg
push
ja
xor
cbtw
pop
mov
pop
fistpll
dec
dec
pop
jg
dec
or
imul
pop
xlat
pop
xchg
int
mov
mov
popa
push
sub
and
call
sub
push
push
push
arpl
mov
dec
dec
cmp
test
fmull
pop
divl
mov
gs
sti
cmp
xchg
int
jmp
jo
out
andl
enter
insb
es
fcompl
mov
test
sub
fdivrl
sub
cmp
movsb
fadds
jmp
pop
outsl
and
insl
nop
dec
cmp
mov
adcl
popa
imul
fucomp
outsb
fdivrs
or
xor
mov
js
jno
loopne
jnp
dec
int3
jns
orl
imull
arpl
outsl
mul
pusha
cwtl
outsl
aam
sbb
push
cmp
jb
push
fistps
push
imul
enter
pusha
push
fdivs
jo
pop
and
cmp
aam
mov
sbb
cmp
lret
pop
cmp
jnp
cmp
fmull
jb
mov
mov
mov
mov
xchg
outsl
or
push
push
fwait
jp
call
mov
inc
push
insb
sub
push
js
cmp
xor
xor
mov
dec
jle
pop
mov
out
jmp
or
push
pop
push
insb
adc
dec
cwtl
xchg
mov
mov
push
pushf
pusha
cwtl
loop
or
insl
cmp
sbb
or
xchg
jae
cmpb
into
sbb
nop
test
jmp
fisubrl
imul
and
ss
mov
jmp
adc
dec
fcomps
enter
mov
outsl
pop
pusha
cld
xchg
insb
test
fcoms
mov
fnstenv
pushf
xchg
inc
outsb
enter
push
push
cmp
cmpsl
fcomps
dec
outsl
int3
loopne
stos
lahf
test
dec
popf
jg
cmp
lahf
ret
sbb
shl
add
mov
addr16
in
lret
cmp
mov
adc
mov
stos
jno
or
dec
cmpsb
nop
jl
loopne
mov
push
dec
adc
pop
push
test
jo
loope
cmp
fs
fwait
mov
pusha
sbb
pop
inc
xchg
jo
sbb
rcrb
enter
popa
mov
jp
jns
sbb
fs
xorb
jmp
sbbl
call
cmpsl
icebp
imul
push
js
and
xchg
sbb
mov
jns
aad
push
xchg
test
faddl
mov
cmpsb
inc
js
scas
dec
loopne
cmp
push
jecxz
mov
icebp
cwtl
popa
mov
lock
test
addl
mov
xchg
test
negb
movsl
leave
mov
sbb
shlb
iret
loopne
push
into
pusha
sub
jo
imul
cwtl
stos
loopne
js
pop
lods
fcompl
adc
std
loopne
dec
mov
or
pusha
js
mov
out
loopne
cwtl
dec
sarb
or
in
ret
jl
push
int3
data16
push
dec
sbb
cmp
xor
mov
rclb
test
or
pusha
dec
cmp
test
or
leave
xorb
cmp
xorl
cmp
push
dec
loop
fsubrs
cmp
clc
filds
sub
mov
xchg
mov
adc
xchg
sbb
clc
mov
cmp
sarb
adc
movsl
push
pop
push
ja
imul
out
stos
pop
pop
jp
stos
or
pop
pop
mov
mov
movsl
pop
adc
jo
pop
pop
and
mov
sub
push
mov
test
push
fisubrl
push
pop
outsb
xlat
in
ds
fnstenv
in
clc
push
enter
fstps
ss
jo
pusha
push
cmp
pop
leave
push
fmuls
arpl
mov
popa
or
ja
popa
insl
pop
cmc
xor
cmp
lahf
pop
loopne
loopne
jae
test
mov
mov
pushf
je
cwtl
cmpl
xchg
movsb
dec
inc
cwtl
and
jo
jnp
js
pop
add
pop
lahf
enter
pop
mov
call
mov
pushf
pop
js
pop
xchg
inc
adc
jo
mov
addr16
pop
cmp
jl
loope
pop
jle
fs
js
gs
js
dec
jb
add
jnp
pop
scas
imul
xor
addr16
dec
lods
push
mov
pop
mov
loopne
mov
cmp
or
mov
mov
popa
mov
pop
sub
imul
jp
jl
cmp
popa
rclb
pop
nop
adc
fistpll
js
xchg
imul
fisubrl
pusha
fadds
xor
fadds
pop
test
pop
xchg
jge
pop
adc
aam
test
pop
or
out
jne
mov
pop
data16
jae
cmc
lock
mov
loopne
jg
pop
cmc
js
or
test
call
xor
inc
nop
cmp
mov
mov
push
imul
imul
jmp
mov
ret
mov
lcall
add
add
and
cwtl
into
jl
pusha
aam
mov
in
cmc
clc
push
xchg
js
cmp
mov
prefetcht2
pusha
pop
push
popa
mov
test
mov
jg
xchg
lock
inc
enter
fdivr
push
adc
loope
arpl
fisubrs
adc
adc
pusha
adc
lods
pop
dec
fcompl
sbb
fwait
shl
test
pop
test
inc
mov
adc
push
and
sbb
std
push
enter
dec
push
test
fsubr
push
pop
subl
or
sbb
or
jno
xor
xchg
adc
jecxz
xchg
inc
je
fwait
xor
cltd
adc
jmp
cmpsb
outsl
mov
sub
jo
popf
sub
lods
int3
filds
mov
pop
pop
test
lcall
sub
inc
je
fwait
cmp
mov
cmp
mov
call
jmp
outsl
mov
jecxz
leave
push
inc
je
fucomip
mov
shll
sbb
pop
scas
push
sbb
xor
sbb
pop
jo
inc
dec
arpl
pop
pop
adc
pop
in
add
frstor
xor
mov
mov
stos
pop
fcoms
into
mov
lret
outsb
sub
pop
testl
xchg
pop
cmc
inc
lcall
mov
scas
and
cwtl
mov
test
xchg
adc
stc
subb
shrb
pop
sbb
or
insb
pop
push
lahf
cmp
fsub
dec
pop
push
push
dec
es
sbb
dec
es
sbb
jo
fwait
dec
loopne
adc
xor
push
std
jo
mov
fnstsw
shrl
sbb
std
jo
mov
mov
mov
outsl
mov
lock
xchg
ja
arpl
push
lahf
jo
pusha
push
aam
sbb
clc
sahf
mov
cmpsl
pop
xchg
clc
lahf
or
insb
xchg
inc
clc
jg
pop
push
js
pop
pop
or
int3
mov
fmuls
pusha
pop
into
add
sbb
pop
fsub
sbb
pop
and
jecxz
rcrb
pop
adcb
mov
sub
pusha
cwtl
jno
scas
in
or
call
call
inc
cmp
pop
scas
orl
cwtl
popa
pop
ficoms
in
clc
cmp
add
pop
mov
mov
shll
jae
rorl
sub
sbb
outsb
jge
pop
cmp
mov
jmp
mov
mov
clc
cmp
cmpsl
mov
enter
adcl
outsb
das
and
push
cld
cmp
dec
ja
jmp
xchg
test
movsl
add
aad
add
test
adc
mov
sahf
mov
cwtl
dec
scas
sub
insb
loopne
pusha
loope
stos
xor
push
mov
jg
les
cld
push
push
arpl
push
jg
jo
lahf
jb
mov
mov
insb
lods
rcrb
ljmpw
add
adcb
nop
jmp
pushf
cmpl
outsb
push
enter
jbe
popa
jge
test
jl
mov
ja
jg
mov
xchg
pushf
xchg
mov
xchg
jl
mov
test
mov
sbb
dec
fsubl
push
and
jmp
sbb
loope
pusha
push
loope
push
jl
mov
fcomp
fsubrs
imull
mov
add
jns
push
jo
mov
arpl
je
lds
jae
push
lods
mov
pop
push
sbb
lds
lods
nop
push
jae
lds
push
out
pushf
push
add
enter
jg
aaa
les
dec
xchg
inc
mov
dec
cmp
pop
movsl
jmp
add
inc
jbe
sub
js
xchg
pop
lcall
sarl
adc
rcl
test
pop
lret
add
pop
sbb
xchg
push
pop
sbb
push
pop
fcomps
adc
pop
fistpl
pop
xlat
pop
js
push
xor
jnp
imul
inc
ja
pop
clc
mov
hlt
mov
sti
mov
divl
push
pop
sbb
dec
pop
arpl
xchg
push
pop
pop
dec
pop
loopne
adc
fcompl
adc
fistps
inc
jo
jl
insb
sub
addl
jg
outsl
das
pop
add
lock
mov
ret
repz
mov
sbb
push
pop
pop
sbb
push
pop
ficompl
push
pop
fstps
adc
push
xchg
ss
jns
imul
pop
cli
mov
divb
test
pop
bound
xchg
push
pop
push
mov
popa
and
dec
pop
loop
adc
ficomps
mov
or
jb
jle
outsb
cs
addl
sub
mov
mov
shl
std
mov
es
loop
int
jg
cwtl
mov
inc
pop
dec
pop
or
enter
push
ds
pop
jns
pop
jmp
lds
mov
out
or
adc
push
hlt
fiaddl
sbb
pop
js
fldenv
shl
arpl
jecxz
cltd
mov
mov
pop
pop
cmp
int3
add
mov
enter
cmp
pop
arpl
enter
xchg
mov
mov
and
inc
stos
xchg
pusha
pop
xor
loopne
cmp
xchg
mov
xchg
lock
fwait
push
int3
add
xchg
lret
mov
pop
inc
shl
mov
decl
xorb
pusha
mov
and
mov
subb
int3
pop
jge
inc
lock
mov
mov
jnp
inc
cwtl
arpl
mov
sub
shll
xchg
sub
fwait
jno
aad
dec
ja
lock
mov
sbb
mov
cmpsb
push
call
out
lcall
in
imul
jns
lret
lret
fldenv
mov
imul
jl
mov
sbb
push
mov
lahf
shrb
cmp
scas
xchg
call
lahf
mov
das
cmpsb
pop
loopne
lahf
mov
jb
pushf
enter
sbb
mov
in
and
test
mov
dec
pop
stos
ja
pop
lcall
adcl
xchg
js
lcall
ret
mov
mov
lods
inc
jecxz
stos
sub
lock
push
sbb
pushf
dec
test
mov
and
incl
mov
xchg
loopne
dec
clc
stc
jp
mov
add
shll
int
lret
xchg
dec
cwtl
gs
or
sbb
loope
push
jp
mov
call
jl
pusha
stos
jmp
jno
pushf
mov
loope
imul
sarb
pushf
sub
pop
cwtl
mov
inc
mov
jno
mul
push
pushf
cmp
loopne
shlb
lcall
push
jns
lock
imul
mov
jg
mov
dec
js
loope
mov
jns
fistps
cmpsl
push
fs
mov
loopne
dec
out
push
fwait
mov
rcrb
cmpsb
mov
push
inc
mov
mov
les
inc
pop
test
fmuls
movl
or
lcall
faddl
mov
testb
mov
pop
mov
and
cmpl
aaa
cld
andb
push
jge
adc
push
xor
ja
jns
sbb
and
into
js
movsl
stos
js
mov
mov
nop
rcll
test
repz
ljmp
sub
mov
add
mov
mov
nop
adc
cwtl
js
pushl
lea
and
dec
push
xchg
jl
cld
in
test
gs
ja
pusha
stc
orb
lea
sbb
cmp
mov
mov
sbbl
jo
pop
mov
out
mov
rcrb
loopne
xchg
insl
mov
jae
jmp
jnp
cmp
mov
xchg
cmp
mov
dec
push
mov
movsb
mov
sbb
pop
cmp
bound
mov
sbb
les
mov
and
fs
fwait
stc
lcall
jg
js
ja
mov
jp
sub
xchg
cmpsl
and
lahf
nop
or
sub
movsl
jp
shrb
mov
dec
leave
xchg
pushf
fcmove
enter
repz
cmpsb
popa
xbegin
mov
in
shrb
rcrl
fwait
mov
ror
std
movsl
movsb
push
cmpb
stos
lods
xchg
test
lret
pushf
gs
xchg
jno
cmp
inc
xor
cmc
verr
pop
jp
inc
pushf
pop
cld
pop
sbb
jge
pop
sbb
insb
loopne
mov
in
push
out
xchg
and
cmp
popf
shlb
cmpsl
movsl
adc
mov
pushf
shll
mov
je
sbb
fcoml
scas
and
lods
inc
mov
test
cltd
cmp
jno
mov
mov
pop
mov
push
idivl
mov
mov
mov
sbb
int3
push
dec
popf
stos
and
adc
repnz
pop
or
dec
pop
out
push
js
pushf
push
enter
adc
in
inc
enter
mov
pop
dec
pop
xor
lcall
mov
nop
cmp
movsb
mov
sbb
inc
pop
xchg
pop
mov
pop
xlat
xchg
clc
arpl
int3
xchg
jne
icebp
jmp
fadd
nop
adc
and
fistpl
icebp
xchg
fdivrl
shll
fnstcw
roll
repnz
loopne
adc
loop
jo
mov
call
or
fwait
pop
mov
stos
aam
add
inc
sbb
movsl
pop
push
pop
aas
sbb
cwtl
dec
mov
js
mov
aam
xchg
in
cmp
add
jnp
pop
cs
mov
bnd
pusha
jle
mov
ret
call
dec
aam
sbb
cltd
in
lcall
inc
out
push
xchg
sti
push
mov
loopne
jl
fs
inc
rcr
mov
js
ljmp
sbb
lahf
mov
pop
cltd
enter
jg
cmpsb
test
ljmp
mov
xchg
andl
scas
pop
mov
mov
mov
mov
test
mov
daa
mov
stos
mull
sbb
lods
test
or
push
mov
out
jns
xchg
aad
lcall
in
mov
jns
shl
jmp
test
inc
imul
pop
test
cmp
mov
jns
mov
lock
test
jl
push
lock
test
sbb
mov
ja
sbb
mov
fnstsw
pop
out
cmpsl
and
pop
shlb
fnstenv
pop
in
dec
aad
shrb
pop
adc
mov
xchg
clc
jmp
push
or
dec
sbb
into
daa
dec
shll
nop
jmp
fs
lds
sub
mov
js
pop
lds
sahf
inc
pop
addr16
negl
or
rol
movl
icebp
pusha
jb
popa
push
mov
insb
sbb
jnp
and
fs
leave
js
push
mov
xor
jl
shrb
stos
or
nop
mov
gs
and
jmp
rcrb
jg,pt
jno
fs
repz
mov
cmp
xchg
push
lcall
cmp
mov
dec
mov
fdivs
fwait
pushf
scas
push
lret
xchg
sahf
and
lret
xor
popa
fwait
jae
mov
js
dec
jl
dec
dec
sbb
or
aas
movsl
lcall
andb
cld
jo
jno
or
adc
movsl
dec
lods
out
xor
mov
addr16
cmp
sbb
mov
inc
movsb
lods
clc
push
xchg
dec
pop
rcrb
jb
arpl
clc
and
mov
pop
in
lods
js
adc
sub
mov
enter
pop
xor
mov
pop
jo
pushf
in
pop
fnstsw
dec
inc
arpl
pop
add
add
shrl
jno
add
cmp
pop
fst
in
xor
int3
cmpsl
adc
sub
add
scas
pop
data16
jecxz
hlt
int3
mov
mov
test
in
nop
jp
mov
cmp
popf
cwtl
mov
cli
mov
repz
movsl
cmp
mov
mov
jge
aaa
bound
clc
push
push
or
je
mov
mov
lock
pop
cmpsb
push
sbb
rcrb
xchg
xchg
push
cmp
mov
call
cmpsl
mov
cmp
out
divl
jbe
cmpsl
mov
cmpsb
push
pusha
andl
adc
movsb
lcall
aad
lock
nop
mov
pmaxsw
mov
mov
lret
push
sbb
jmp
dec
les
nop
int3
js
fs
jo
cmp
data16
fs
addr16
xchg
mov
je
and
lds
clc
mov
mov
lret
je
jo
pop
test
movsl
fisubs
pop
cmp
inc
out
addr16
dec
jmp
adc
or
dec
scas
into
fs
sub
dec
in
je
int
add
les
jl
push
enter
adc
pop
sbb
mov
push
loopne
arpl
push
pop
movsb
push
shrl
cwtl
cltd
xchg
pop
mov
mov
push
imul
insb
and
lods
stos
int
cmpsl
popf
imul
mov
fidivrl
daa
xchg
jbe
fs
mov
cmpsb
mov
lahf
movsb
cmpsl
lcall
test
sahf
inc
dec
adc
nop
mov
cmp
pop
mov
jg
int3
cmp
daa
add
in
sub
jb
pushf
gs
in
dec
sbb
jl
mov
stos
mov
mov
les
ljmp
xor
jl
jns
js
lcall
stc
mov
inc
lret
enter
mov
insb
iret
rcll
lret
in
inc
insl
mov
mov
into
push
and
test
jb
stc
stos
sub
mov
mov
adc
xor
mov
enter
mov
out
jns
pop
dec
and
mov
jb
mov
jl
cmp
push
das
stos
repz
popf
add
ret
pop
mov
out
mov
push
lret
pop
enter
add
scas
mov
lods
xchg
test
add
and
lds
sub
sub
int
lret
jmp
test
xlat
js
or
jge
jg
fsubrs
jb
sbb
mov
dec
iret
jmp
xchg
sub
faddl
mov
loope
imul
jecxz
sub
xchg
cmp
xor
daa
sub
ret
xchg
sahf
xchg
pusha
pop
test
pushl
jg
push
jle
fmull
xor
sub
popf
stos
cmpsb
and
mov
xor
dec
xchg
xlat
pop
lea
sarb
and
mov
xchg
pop
pop
lock
xlat
xchg
pop
mov
popa
popf
mov
cld
mov
shrb
mov
push
push
imul
lret
les
test
outsl
add
cmp
inc
cltd
adc
loopne
int3
mov
lret
insb
mov
jecxz
popf
lcall
shl
lret
scas
pusha
xchg
pusha
bound
mov
insb
in
iret
push
fcmovu
dec
mov
xchg
sahf
pusha
dec
lods
lcall
imul
int
push
mov
nop
mov
imul
out
dec
fimuls
and
inc
popa
pop
pop
jge
pop
jnp
pop
aad
in
mov
mov
loope
sbb
jbe
adcb
fisttpl
daa
in
pop
cmp
rorb
pop
dec
popf
gs
aaa
push
addr16
clc
pop
idivl
mov
ficoms
xchg
adcb
xor
mov
adc
jo
fisubs
push
xchg
jo
sub
pop
stc
arpl
fdivrl
jg
xchg
and
jno
roll
add
adc
sbb
and
pop
lods
mov
cmp
mov
into
jecxz
pop
sti
int
insb
stc
push
movsl
pop
mov
test
adc
inc
add
js
sbb
test
cwtl
push
mov
push
cmpsb
mov
pop
xlat
pop
cmpsb
jae
push
test
andl
imul
dec
sahf
jbe
loop
js
jg
push
pusha
dec
fsubr
out
jne
icebp
lock
and
call
pop
arpl
loopne
inc
mov
loopne
orl
mov
into
lcall
stos
clc
insb
insb
js
cmp
stos
mov
cmp
pop
pushf
dec
icebp
insb
nop
dec
lahf
jo
jo
idiv
imul
icebp
loope
movsb
insb
mov
test
rcrb
pushf
insb
call
jnp
mov
cwtl
pushf
cmp
insb
stos
loopne
dec
pusha
mov
fdivrl
rcrl
mov
insb
clc
cmpsb
test
mov
lahf
enter
fsubrs
test
add
cmp
aad
pushf
sub
insb
sbb
cwtl
and
into
js
mov
cmpb
insb
shrb
bound
cmp
or
movsb
insb
js
loopne
inc
lods
cwtl
add
mov
icebp
insb
nop
cmpsb
test
nop
mov
test
pushf
insb
mov
xchg
jo
loopne
push
cmp
shlb
into
lcall
cmp
icebp
cwtl
dec
pusha
out
fistps
js
mul
jno
stc
test
popa
nop
sahf
loopne
fdivrs
insb
fists
xor
sub
xor
shlb
add
cwtl
pushf
nop
insb
stos
enter
shlb
push
mov
movsb
call
sbb
xchg
jp
int3
adc
sbb
aad
pushf
push
icebp
insb
and
repz
nop
rcl
pushf
mov
push
cmp
push
mov
movsb
clc
movsb
insb
push
pushl
cmp
movsb
in
insb
lods
out
mov
js
ret
lahf
ret
subl
call
insb
aam
icebp
pop
push
ret
test
bound
ja
out
ret
movb
ret
cmp
pushf
mov
test
enter
cwtl
pushf
lock
insb
dec
jmp
pop
and
mov
and
leave
sbb
popa
adc
pop
in
dec
rorb
lods
lods
les
ja
loopne
les
test
and
test
sahf
loopne
clc
xchg
fstps
lock
xor
pushf
imul
mov
ja
jb
cltd
jne
imul
in
loope
insb
and
clc
xchg
lds
sub
test
and
test
pushf
orl
jo
cmp
cwtl
insb
mov
icebp
lret
pusha
cmp
xchg
leave
shlb
clc
movsb
stos
or
mov
xor
mov
mov
adc
mov
xorl
cltd
add
push
pop
pushf
add
jmp
addl
pushf
popa
push
pop
dec
mov
rclb
pushf
or
call
jmp
and
ja
jecxz
enter
test
pushf
insl
or
negl
enter
dec
test
pushf
nop
jl
push
inc
test
jnp
leave
enter
js
stos
test
xorl
pushf
clc
mov
out
in
cltd
add
call
cwtl
pushf
dec
insb
stos
loopne
dec
jo
jae
mov
rcrl
cwtl
icebp
insb
add
pop
dec
lret
lds
insb
and
nop
sub
xor
inc
loope
insb
dec
dec
leave
nop
xor
or
js
stos
mov
xchg
adc
popf
loopne
insb
pop
xchg
call
mov
aam
lret
dec
lds
insb
sbb
int3
adc
insb
clc
xchg
stos
subb
pusha
jl
push
jbe
insl
cld
pop
push
fwait
js
sbb
fwait
cwtl
and
lahf
mov
out
mov
repnz
sbbb
and
cwtl
pop
mov
dec
jo
fsts
jnp
call
jmp
jmp
call
push
adc
jmp
insb
cmp
jns
sbb
jns
cmp
jns
cmp
jnp
jmp
fsubrs
fsubs
enter
clc
xchg
pop
push
or
pusha
xor
lahf
sbb
jnp
jmp
push
jae
jnp
jmp
xchg
jnp
jmp
mov
lds
shlb
fldt
cmp
pop
jmp
sbbb
mov
subb
push
sbb
insb
xorb
addl
sbb
movl
pusha
shll
call
and
add
icebp
pusha
and
call
jmp
add
loope
jae
mov
imul
mov
mov
mov
xchg
mov
pusha
fadds
rorb
fmuls
ss
cmp
sub
cmp
fildll
adc
fists
jnp
leave
cwtl
addr16
sarl
jp
or
adc
cwtl
loop
pusha
mov
out
adcl
mov
je
decb
cmp
lret
and
dec
loope
pop
push
cmp
clc
cmp
cld
push
out
jo
js
push
cmp
mov
in
cwtl
mov
loopne
in
mov
jmp
xor
push
fsubrs
adc
aad
lahf
sub
jp
fldenv
cmpsl
sbb
add
sbb
addb
pop
fs
loope
or
sub
mov
sbbb
loope
inc
ljmp
pop
push
jecxz
mov
and
jl,pt
mov
pop
add
fs
push
jl
mov
addr16
xchg
jl,pt
mov
push
mov
insb
jl
mov
outsb
pushf
hlt
outsl
loope
push
jl
mov
jb
sub
loope
push
jl
mov
jbe
fs
in
adc
enter
shlb
xor
mov
test
fadds
fsubr
dec
jo
dec
jo
dec
jo
dec
jo
dec
jo
dec
jo
dec
jo
dec
jno
push
jo
dec
jo
dec
jo
dec
jo
dec
jo
dec
jo
dec
jo
dec
jo
dec
jo
dec
jo
dec
jo
dec
jno
sbb
adc
mov
sbb
ds
dec
sbb
pop
pop
jno
sbb
jbe
mov
sbb
imul
test
fsub
sbb
pop
mov
cmp
das
jno
dec
cmp
lret
lcall
mov
xor
sub
sahf
pop
sahf
fnstenv
lock
pop
lret
jl
stos
and
fxch
sbb
push
mov
fdivs
cmp
xchg
push
cmp
push
jae
mov
mov
cwtl
pusha
shlb
lcall
and
ss
clc
aaa
jnp
sbb
and
cmp
dec
rcr
or
fcmovne
js
jnp
rcrl
jae
sar
stos
mov
lock
call
fdivr
icebp
pusha
push
movsb
jo
loop
int3
sbb
jo
xchg
xor
dec
mov
cmp
data16
rorl
jae
mov
dec
nop
sbb
fcoml
andb
push
popf
loopne
xchg
icebp
imul
push
sub
in
add
scas
or
xchg
push
fcmovu
in
shlb
dec
or
int3
pushf
out
mov
dec
mov
or
scas
xor
jnp
testb
sbb
or
js
call
or
dec
jo
dec
jo
dec
jnp
loop
mov
xor
ficoms
call
addb
lock
adc
jmp
fs
enter
or
mov
xchg
pop
jb
sbb
subl
mov
insb
bound
mov
out
rorb
sbb
lret
nop
ffreep
lock
or
mov
js
leave
bound
enter
ss
sub
jp,pt
popf
dec
jnp
fwait
sub
cmp
jg
or
loopne
ss
mov
stos
loopne
mov
jo
jl
mov
mov
jnp
jmp
pop
adcl
and
pop
push
jl
mov
pop
push
nop
add
add
mov
popf
andb
test
insb
mov
sbb
and
cmp
lret
mull
loop
mov
and
sub
leave
or
dec
sbbb
ljmp
mov
insl
pop
imul
sub
enter
pushf
pop
lock
mov
aad
js
mov
push
jo
repz
push
loopne
sbb
shr
mov
js
jo
incb
push
inc
cmp
adc
mov
cmp
clc
fisubs
mov
ret
cwtl
jnp
test
je
in
mov
sahf
in
clc
xchg
hlt
mov
fadds
and
aas
inc
loope
dec
jnp
in
clc
jns
ficoml
insl
sbb
in
pusha
scas
insl
icebp
mov
inc
pusha
in
lcall
push
int
imul
out
cmp
cmpsl
shl
pop
jmp
fwait
mov
adc
mov
scas
jnp
shrb
rcrl
mov
nop
out
jl
xor
mov
fstpl
sbbl
xchg
fnstcw
sbb
loopne
cmp
or
lock
push
nop
or
jo
dec
jo
dec
ret
out
sbb
lea
shrb
jb
and
clc
pusha
scas
loopne
sub
jnp
in
adc
dec
dec
in
sub
loopne
rcrl
nop
shl
mov
pop
jl
mov
mov
test
adc
rclb
or
dec
call
pop
rclb
leave
call
shlb
add
push
jmp
pop
es
jnp
push
mov
mov
sub
idivb
xchg
inc
dec
cmp
loopne
adc
imul
jbe
xor
mov
xchg
jnp
mov
jbe
jnp
ret
jnp
sahf
xchg
fstps
out
sahf
xchg
cli
sahf
xchg
add
xchg
sbb
and
cs
jo
dec
jo
dec
jo
dec
jo
sahf
adc
jo
jns
jnp
jp
xchg
loope
push
jl
mov
jle
mov
loope
push
jl
mov
sbbb
jl
mov
xchg
mov
and
popf
sub
shlb
dec
adc
adc
push
xchg
imul
sahf
xchg
mov
xchg
mov
xchg
fstps
cmc
sahf
xchg
add
pop
sahf
xchg
sub
xchg
dec
sahf
xchg
push
sahf
imul
subl
imul
xchg
mov
inc
xchg
aam
xchg
fbld
rcll
addr16
rcll
sbbb
cmp
and
dec
loope
cwtl
adc
enter
shlb
insl
mov
jmp
jmp
jmp
jmp
jmp
adc
out
leave
dec
addr16
shrb
fildll
adc
out
jne
in
test
fs
lret
enter
ror
in
aam
mov
fistpll
ljmp
jnp
or
push
jnp
and
sub
jbe
jnp
inc
jnp
dec
jnp
sbbl
loope
insb
addr16
mov
test
insb
shl
lcall
out
insl
add
mov
insl
and
shrl
mov
clc
sahf
sbb
pusha
mov
sbb
xchg
pop
jb
sbb
cmp
nop
jnp
jbe
jg
loopne
cwtl
mov
js
subb
loop
pop
nop
loop
test
cmp
lret
or
jnp
jmp
pusha
and
cmp
mov
add
mov
icebp
cwtl
and
icebp
cmp
xchg
inc
movsb
pusha
dec
push
inc
rclb
rcrb
push
add
adcl
dec
inc
rcl
jo
in
call
mov
jp
adc
mov
pusha
sbb
rcrb
push
jne
movsb
sbb
jbe
in
mov
sti
repz
test
mov
and
mov
movsb
push
cmp
mov
lock
clc
and
mov
sbb
cmpb
call
dec
nop
orb
or
cmp
jo
pop
jnp
xor
hlt
push
cmpb
rol
jnp
jmp
pop
adc
xchg
push
dec
pop
cwtl
sub
xor
xor
mov
mov
push
cmp
cmc
or
xchg
jl
xchg
fcomps
xchg
insb
fsubr
push
call
rcrb
pop
xchg
cmc
shlb
js
sbb
and
mov
pop
jmp
dec
pop
pop
dec
aam
cmp
jp
jmp
sbb
mov
mov
pop
imul
mov
cmp
lods
lahf
fsubrs
and
mov
cwtl
xchg
mov
xor
mov
mov
jge
dec
mov
hlt
inc
jnp
divl
jns
mov
arpl
cmpxchg
dec
sahf
mov
pop
jge
divl
add
fldl
imul
pop
pop
cmp
add
and
dec
loopne
and
push
dec
or
js
clc
push
add
mov
fcompl
pop
dec
pop
jmp
jmp
jmp
nop
pop
clc
in
and
or
stc
push
and
scas
nop
mov
mov
and
cmp
xchg
call
adc
cmp
iret
rorb
cmp
lret
jo
nop
jnp
jbe
test
sbb
sub
or
dec
xchg
pop
cmp
nop
jnp
not
jg
pop
in
mov
in
or
pop
xchg
fadds
and
mov
mov
xor
and
pop
sahf
orb
jbe
clc
dec
cwtl
xchg
pop
push
vpshab
out
enter
cld
adc
std
sub
adc
out
bound
and
fsubrl
and
dec
cmp
into
and
bound
or
adc
push
insl
inc
hlt
pop
adc
adc
dec
and
sbb
js
xchg
mov
orb
cwtl
and
add
std
adc
enter
clc
mov
adc
and
or
jns
std
sbb
lcall
iret
jg
pop
mov
xor
fdiv
xchg
loopne
clc
out
push
fdivr
adc
pop
cli
push
repz
mov
divb
mov
out
jno
dec
cmp
cmpb
ja
push
enter
rclb
shrb
icebp
and
cmp
cmp
cmp
cmp
cmp
and
inc
cmp
sub
stos
and
lock
imul
jmp
sub
adc
out
pop
add
cmp
icebp
pusha
fsubs
clc
mov
add
imul
leave
add
sub
mov
add
or
cmp
lods
loopne
lock
and
add
stos
fwait
pusha
andl
or
in
add
jnp
call
jmp
pop
mov
mov
lock
dec
jnp
pop
pushf
and
cmp
and
outsl
push
sub
pop
xchg
loope
push
subb
mov
mov
in
repnz
rol
sbb
and
sub
lret
push
movsb
push
aad
xchg
es
sahf
mov
sahf
dec
dec
test
jnp
add
enter
shr
addr16
rorl
jne
jl
jp
fldenv
je
jmp
in
inc
pusha
and
mov
in
mov
daa
insb
add
in
add
insb
mov
mov
nop
or
and
sarb
xchg
lock
cld
lret
sahf
and
xchg
aaa
addr16
rorl
movsl
sub
fdivl
push
xor
jg
adc
scas
cmpb
pop
jbe
cwtl
cwtl
dec
scas
mov
loopne
mov
shlb
andb
add
jnp
shrl
ja
dec
pop
in
pop
sahf
push
cmp
addr16
orb
andb
lahf
pop
jnp
mov
mov
shlb
rcl
imul
mov
fucomip
mov
adc
jmp
jmp
jmp
jmp
sub
imul
mov
enter
jmp
dec
mov
clc
or
or
enter
sbb
sub
mull
loop
clc
loopne,pt
fbstp
leave
push
mov
test
add
aas
push
xor
sub
dec
out
or
dec
jo
in
cmp
mov
or
lcall
push
jnp
inc
sub
jg
outsb
hlt
pop
in
cmp
xchg
dec
out
or
dec
jo
out
sbb
outsb
js
mov
cmp
mov
pusha
sub
push
jo
aas
pop
sti
nop
mov
sub
cmp
or
xchg
and
push
dec
fsubs
mov
fsubrl
mov
cmp
in
mov
pop
leave
or
loop
adc
mov
shl
jae
int3
rorl
jae
loopne
xor
hlt
rcr
or
orb
jmp
rclb
repz
in
dec
pusha
and
in
mov
sti
xorb
push
vpshab
mov
mov
push
sahf
dec
neg
sahf
fmuls
xchg
loopne
jnp
sar
addr16
rorl
enter
cmc
aam
push
cli
inc
or
xlat
nop
pop
pmulhw
mul
scas
loopne
or
jno
sbb
add
std
sub
adc
fnstsw
pusha
adc
lods
jp
sahf
mov
adc
shlb
mov
loopne
add
or
adc
jnp
shrl
addr16
inc
notb
addb
idivb
shl
inc
lock
inc
in
rcrb
cwtl
push
pop
mov
shr
je
jge
test
jbe
in
mov
adc
mov
xorb
cmp
mov
mov
rclb
adc
mov
and
add
sub
clc
xorb
sbb
mov
enter
dec
lock
loope
xor
lret
jmp
dec
mov
sbb
div
sbb
adc
push
adc
loop
sarb
pop
sahf
nop
or
enter
xorb
mov
dec
adc
jo
shll
movsb
and
cwtl
adc
stos
rcrb
adc
or
cmpsl
loopne
clc
call
cmp
pushf
adc
cmp
lret
jnp
push
jbe
jns
jl
push
push
pop
cmp
push
xor
je
inc
subb
mov
sub
pushf
pushf
dec
pop
loope
enter
arpl
cmpsb
pop
stos
xchg
jmp
stc
adc
lds
lods
dec
jb
setge
pop
cld
dec
cmp
mov
dec
push
pop
mov
adc
xlat
std
mov
xchg
ss
jle
rcrb
pop
mov
add
popa
jbe
cmp
cwtl
gs
ret
out
sarl
popf
aas
adc
pop
ljmp
imul
pop
mov
shlb
aam
pop
sbb
push
gs
xorb
push
movsl
add
ja
daa
sbb
leave
sbb
pop
adc
testl
or
pop
xchg
gs
dec
cmp
inc
pop
push
xchg
cmp
pop
es
mov
push
pop
rorl
stos
ljmp
and
jbe
xor
mov
pop
scas
cmp
mov
mov
fists
ja
leave
cwtl
inc
mov
add
dec
sbb
and
push
jbe
pop
nop
or
pop
fs
popa
scas
loope
push
js
dec
pop
out
mov
mov
or
jp
les
jb
pop
pushf
push
aaa
pusha
inc
jmp
sbb
add
cs
js
push
pop
loopne
sub
pushf
es
loope
push
jl
mov
movsb
pushf
cwtl
mov
subb
pop
pushf
inc
sub
xor
and
clc
push
adc
imul
mov
enter
loope
push
jl
mov
push
sub
pushf
xor
loope
push
jl
mov
rcrb
adc
mov
and
dec
push
jp
cmp
jl
xchg
popa
les
ficompl
loope
arpl
popa
mov
lret
xor
mov
imul
push
mov
fcompl
cwtl
jl
mov
xchg
sbb
loope
push
jl
mov
enter
loope
push
jl
mov
push
xor
pushf
xor
loope
push
jl
mov
rcrb
mov
push
pop
push
pushf
sub
loope
push
jl
mov
mov
dec
loopne
push
and
jp
pushf
adc
loope
push
jl
mov
mov
inc
and
jl
mov
cld
pushf
out
loope
push
jl
mov
pushfw
pop
push
cwtl
and
xor
jl
mov
in
rolb
mov
jl
insb
jl
pushf
push
and
jmp
sbb
in
push
jl
mov
xchg
pushf
subb
lods
xor
mov
xor
mov
mov
sti
popa
adc
loopne
aam
lock
and
adc
mov
rcr
lock
jl
mov
inc
pushf
push
cbtw
sub
push
jl
mov
clc
pushf
or
loope
push
jl
pushf
pop
sub
icebp
xchg
flds
xchg
jns
sub
jp
es
sbb
loope
jmp
pushf
out
loope
imul
loope
push
jnp
daa
mov
and
sbb
pushf
cli
in
loope
push
jl
mov
xchg
pushf
xorb
pop
jp
es
cmp
add
mul
loope
push
jl
mov
cwtl
pushf
mov
jp
and
jmp
add
loope
push
jl
mov
add
jb
bound
and
loope
push
jl
mov
movsb
sub
pop
loop
pop
cli
jp
or
inc
jl
pushf
pop
xor
jp
pushf
stos
shl
push
jl
mov
cmp
loope
push
jl
mov
rcrb
sbb
xor
push
popa
js
mov
pushf
scas
int3
loope
imul
pop
mov
push
leave
jmp
mov
fs
and
jmp
cli
ljmp
cwtl
movsb
fstps
ret
or
dec
cmp
cmp
mov
pop
push
jl
mov
imul
shlb
cwtl
mov
dec
fnstenv
and
popa
adc
lds
ror
lret
les
movsb
sbb
movsl
cmp
fcompl
and
daa
aam
bound
cltd
mov
cmp
mov
add
ret
xor
pop
test
push
jmp
pop
aaa
jns
push
enter
sub
dec
nop
scas
clc
jne
push
fsubr
out
loop
loope
cmp
mov
ja
xor
push
scas
pop
mov
movsl
push
and
int3
jo
test
push
add
retw
pop
sub
cmp
pop
int3
aam
mov
pop
jle
sbb
bound
pop
pop
rcrl
ja
inc
add
iret
lock
pop
pop
sbb
rcrb
xchg
xchg
imul
or
push
insb
dec
cmpsb
int
pop
pop
jle
stc
lret
pop
pop
rcrl
enter
fcomps
mov
sbb
stc
add
and
adc
mov
lret
or
push
jo
push
inc
add
mov
xchg
cmp
xchg
fdivrs
bound
mov
js
nop
xchg
cs
lods
testb
jmp
scas
xchg
sub
add
cmp
push
xchg
pop
pop
sahf
jns
pop
or
shrl
test
jg
pop
stos
mov
cmp
popa
push
leave
scas
call
push
sub
outsl
xchg
dec
mov
fcompl
in
lret
sub
sbb
lea
jnp
xchg
in
adc
jg
pop
push
call
rorl
pop
stos
stos
mov
divl
xchg
sbb
imul
out
fcoms
jne
pop
xchg
fsqrt
mov
jecxz
jb
pop
out
inc
mov
xchg
sbb
push
xchg
mov
push
jmp
cld
push
cmp
out
cld
loop
mov
xchg
xchg
fmull
xor
fistpl
scas
icebp
stos
loopne
xor
scas
mov
mov
fcom
hlt
push
cld
pop
adc
jno
sub
faddp
lcall
int
lret
add
push
cli
sahf
xor
pop
cmc
outsb
bound
pop
mov
shrb
fwait
jecxz
iret
mov
sbb
cmp
cmp
sub
cmp
mulb
rcr
imul
jmp
vfrczps
cli
call
sbb
and
pop
outsl
fisttps
sbb
out
pop
cltd
out
das
out
push
pushf
imul
addr16
dec
test
push
pop
inc
shrl
clc
mov
insl
lcall
add
hlt
or
inc
in
pop
mov
add
pop
sbb
neg
icebp
xchg
jg
xor
dec
xchg
mov
jbe
fsubl
in
lret
jle
cmp
nop
test
mov
cmp
mov
and
jns
clc
mov
jecxz
inc
js
test
loop
sbb
popa
cli
outsl
pop
cmp
mov
in
sbb
loop
popa
or
addb
push
jo
pop
fnstcw
pushf
add
mov
pop
sub
js
add
mov
stos
mov
das
pop
loopne
or
mov
push
add
xchg
xor
cltd
out
push
lret
imul
imul
rcr
cld
fldt
sbb
pop
inc
loope
push
dec
je
push
jo
nop
mov
push
ficompl
cmp
loope
pop
sbb
mov
cmp
jle
call
and
mov
pop
and
xchg
lret
sarl
cmc
or
xlat
ja
jo
repnz
mov
mov
stc
je
jmp
pop
mov
and
pop
fs
jge
mov
dec
imul
pop
push
movsl
sbb
repnz
push
loopne
lcall
xchg
test
cmp
pop
shrl
cmp
pop
das
js
fldcw
xchg
fsubr
jbe
ds
stc
lea
lods
insb
ja
pop
xlat
leave
fists
cmp
pop
stos
jg
add
sarb
mull
or
in
xor
jne
cmp
xchg
mov
pop
ficompl
pop
mov
out
pushf
movsl
test
xor
cld
inc
and
imul
or
fstpt
lds
inc
into
mov
jecxz
dec
xor
mov
xchg
mov
adc
jecxz
fistpl
sbb
adc
jbe
lds
sub
cwtl
popf
loop
fcoms
je
pop
add
and
shl
iret
insl
pop
mov
xorl
jo
sbb
and
mov
lock
stc
adc
fmul
call
push
jge
mov
mov
in
pop
inc
jb
fdivp
mov
pusha
outsb
addr16
pop
mov
pop
ret
dec
or
dec
mov
jmp
pop
rcrl
inc
mov
pop
cli
xorl
push
pop
fsts
int3
sub
push
pop
inc
jbe
jb
jo
pop
sbb
xchg
dec
push
cmp
xorl
daa
addr16
fiadds
enter
loope
or
jl
rcll
test
negl
push
mov
hlt
je
sbb
clc
and
sbb
lahf
or
je
jmp
xchg
fadd
ficoml
loopne
or
pop
push
rcrl
xchg
pop
sub
dec
mov
dec
data16
push
fdivl
ljmp
leave
aas
lahf
dec
push
clc
pop
cmpsb
daa
xchg
in
cld
int
fmuls
lock
jne
movsb
shl
jae
dec
inc
shrl
mov
cwtl
xor
pop
test
mov
mov
pop
jg
iret
out
sbb
fs
pusha
aaa
pop
sbb
enter
mov
pop
inc
adc
and
xchg
pop
push
jp
cltd
test
out
scas
iret
sti
pop
pop
push
dec
arpl
andnps
pop
mov
or
stos
adc
das
cmp
loop
cmpsl
std
fwait
lock
dec
add
xchg
ret
cs
pop
je
nop
inc
push
pop
test
repz
std
outsb
sbb
out
repnz
push
negl
sub
fcomps
mov
lret
add
pop
in
pusha
mov
aam
cmp
je
mov
cmp
fimuls
pop
add
jne
adc
cmp
push
sub
push
inc
cwtl
xchg
mov
mov
testl
fsubs
mov
adc
jbe
clc
cmp
ffree
jbe
lds
pop
mov
adc
cmp
out
dec
adc
sub
push
mov
mov
popf
dec
daa
dec
in
xchg
enter
outsl
mov
add
es
xor
xor
rclb
inc
insb
sbb
mov
cld
pushf
jbe
sahf
xchg
cmpsl
pop
and
fs
les
leave
add
or
xor
dec
clc
insb
lods
call
jmp
xor
or
pushf
enter
add
jne
leave
jmp
push
mov
fstpl
test
xchg
pop
fdiv
movsb
inc
pop
sub
pop
mov
test
mov
clc
push
negb
pop
jecxz
into
sub
enter
rcr
dec
adcb
aaa
mov
push
xchg
mov
pop
xor
jl
mov
aad
loopne
hlt
and
pop
imul
negl
mov
rcrb
xlat
pop
clc
push
lds
push
pop
lock
mov
mov
pop
cmp
adc
cmp
or
ss
pop
and
mov
and
js
cld
pop
mov
popa
out
pop
jae
push
pop
pop
lahf
ss
and
test
mov
addr16
std
insl
fwait
sbb
or
pop
sbb
ja
push
dec
out
jge
mov
xchg
lds
inc
std
push
jg
ja
cmpsb
ret
cmp
leave
pop
mov
mov
stos
roll
xor
inc
xchg
ret
or
nopl
push
adc
pop
dec
jmp
jns
xchg
pop
pop
imul
sbb
dec
paddusw
pop
sbb
mov
pop
add
sbb
push
inc
inc
pop
call
sbb
inc
mov
pop
adcl
dec
movsb
xchg
pop
push
cmpsb
sub
gs
pop
sub
dec
xchg
xor
or
xchg
mov
fldenv
enter
icebp
pushf
sahf
cmp
js
leave
test
xor
mov
jecxz
jbe
mov
sub
inc
add
mov
pop
mov
xchg
pop
mov
push
and
push
dec
test
aam
inc
adc
pop
adc
push
mov
cwtl
fs
cmp
sbb
push
xchg
stc
mov
clc
adc
cs
pop
or
xor
ss
jecxz
inc
or
loope
subb
add
popa
enter
scas
sbb
sbb
daa
pop
jle
ss
adc
call
pop
cld
fmul
push
dec
mov
ljmp
sahf
pop
cmp
ficompl
pusha
pushf
jne
jns
xorb
cmc
fsubs
int3
and
mov
lods
adc
adc
aad
lock
add
in
inc
shlb
adc
cmp
lods
rolb
pop
in
iret
xor
fmull
cmp
and
mov
pop
push
mov
sbb
xchg
jbe
fnop
mov
and
dec
pop
cmp
test
je
fs
dec
cmc
cmp
pop
cmpsb
lret
adc
imul
pop
pop
hlt
fadds
leave
gs
cmp
cmp
push
mov
bound
mov
push
fidivrl
js
mov
and
jb,pt
xchg
pop
insl
add
pusha
lret
add
jp
jge
push
imul
dec
out
mov
pop
sub
push
mov
jb
cmp
pop
jp
pop
inc
mov
pop
aaa
pop
in
or
pop
sbb
sbb
xchg
or
fcmovnu
xchg
jmp
xchg
repz
cmp
clc
cs
jnp
fmul
dec
sbb
fildl
cmp
mov
cmp
pop
mov
cmpsl
mov
pop
pop
adc
lea
gs
mov
or
inc
aas
arpl
imul
adc
data16
mov
cmp
jne
mov
xor
push
pop
sarl
outsl
adc
fucomip
cmp
cmp
shl
jp
jnp
sub
aam
in
inc
popa
mov
fdivr
bound
cmp
xchg
pop
enter
pop
add
ret
ds
xchg
outsb
xchg
fistps
adc
cmp
jae
pop
xlat
gs
pop
out
xor
cmp
js
sti
test
aaa
mov
addr16
imul
or
pop
pop
inc
push
mov
xchg
adc
push
hlt
bound
daa
mov
fsubs
imul
mov
sub
push
sbb
xchg
pop
rorl
sbbl
jge
lcall
into
sub
aam
iret
fwait
es
cmp
cmp
mov
xchg
je
fildll
dec
add
mov
sub
sbb
xorb
lods
xchg
je
dec
outsb
xchg
out
ds
js
mov
jo
imul
push
fisubrl
lock
sub
loop
imul
jae
push
ret
pop
sbb
mov
xchg
test
lock
push
ret
xchg
pop
fisubl
out
fcomps
jnp
pop
mov
pop
cwtl
in
and
sar
jg
clc
xchg
mov
pop
adc
mov
push
sbb
jge
sbb
ljmp
jbe
in
ss
sbb
xor
js
std
dec
inc
dec
loope
cmc
pop
push
sbb
lock
stos
rclb
or
rcrb
xor
imul
mov
pop
xchg
sub
mov
addl
push
enter
fs
pop
dec
and
mov
jns
mov
out
xchg
lock
jno
push
xchg
test
sbb
ja
cmp
pop
scas
lret
aam
fwait
pop
subl
sbb
sbbl
ljmp
adc
add
js
arpl
jno
fsubrs
pop
xchg
jle
inc
and
cmp
or
lret
pop
sbb
in
idivl
loopne
mov
inc
dec
mov
jmp
dec
enter
jecxz
loope
jle
repz
cmp
mov
jb
outsl
xchg
in
push
clc
pop
pop
cmp
xchg
out
pop
xchg
sahf
es
stos
add
and
dec
or
pop
fwait
xchg
mov
outsb
jecxz
push
pop
and
adc
mov
or
idivl
mov
cli
mov
sbb
ss
and
andl
dec
inc
mov
mov
mov
ret
call
cmp
outsb
push
xchg
cmp
pop
das
fmull
push
arpl
insl
or
ja
or
fcomi
das
add
adc
push
add
repnz
scas
dec
fisubrs
arpl
cld
fildll
pusha
dec
push
sti
xchg
aam
ja
sub
adc
jno
or
in
pop
pop
stos
pop
sbb
cwtl
mov
pusha
xchg
sub
pop
cmp
mov
pop
fildll
daa
push
cmp
lods
mov
and
inc
and
icebp
xchg
lret
out
mov
sub
repnz
repz
pop
out
out
inc
mov
fcoms
std
es
pop
xchg
jge
xchg
out
stos
addr16
in
mov
aaa
push
leave
pop
jns
clc
cmp
shlw
pop
fcomp
mov
fisttpl
cmp
fdiv
push
mov
add
das
sub
adc
cmp
ds
mov
or
mov
push
sub
int3
xlat
cwtl
pop
mov
add
pop
loop
jge
xchg
aad
cmp
jne
push
pop
movsb
dec
xchg
in
adc
test
js
out
cmp
xchg
push
cmpl
pop
fiaddl
idiv
pop
inc
cmpsl
xor
movsl
cltd
loopne
mov
or
mov
pop
mov
lock
fwait
adc
fmull
pop
xchg
adc
test
aad
enter
adc
jge
cmpb
pop
inc
mov
pop
xor
data16
pop
cs
add
xchg
aaa
mov
sbb
jmp
mov
cmp
lods
pop
out
inc
js
mull
push
test
jno
std
cmp
or
add
pop
pop
add
jbe
mov
dec
dec
push
xor
ljmp
mov
frstor
pop
adc
push
sub
push
xor
add
push
cmp
mov
cmp
cmp
add
cmp
push
pop
roll
iret
gs
cld
imul
je
pop
mov
adc
xlat
xor
lahf
rol
jl
orb
repz
out
push
sub
mov
jge
sbb
fstps
test
mov
add
adc
pop
dec
jmp
notb
pop
mov
into
lea
ja
add
pop
je
pop
sub
or
pop
iret
enter
lds
xchg
shlb
test
mov
pop
sbb
jns
arpl
push
pop
data16
es
subb
pusha
in
lock
lods
les
loope
inc
lahf
pop
outsl
cmc
cmp
or
pop
mov
wrmsr
lret
test
add
loope
pop
push
inc
cmp
std
into
xor
add
and
lcall
pushl
je
pop
outsl
scas
loope
jnp
call
out
dec
pop
cs
xor
shr
pop
mov
cli
shll
lret
pop
outsb
test
jnp
ds
outsl
into
out
mov
ss
and
inc
mov
popa
push
in
hlt
mov
fdivs
subl
push
mov
test
cld
int3
pop
test
movsb
orl
xchg
lods
cmp
and
jne
icebp
sbb
jecxz
stc
cmp
cmp
pop
in
or
dec
jmp
sub
add
rcrl
lock
pop
xchg
in
add
daa
fidivrl
dec
pop
xchg
jnp
mov
sahf
test
add
pop
shll
lods
mov
jl
xor
pop
jge
pop
mov
addr16
in
inc
test
or
pop
test
sbbb
inc
xchg
fwait
push
fnstenv
fidivrs
in
pop
mov
lods
mov
sbb
pop
fsts
fdivr
out
cmp
cmp
sbb
loope
ds
pop
rdpmc
push
inc
xchg
pop
push
cmp
sub
lods
data16
adc
push
std
dec
rorb
mov
outsb
add
pop
sbb
jmp
jae
in
rol
dec
arpl
ficompl
mov
dec
pop
and
mov
pop
cltd
cmpsl
push
jb
push
pop
call
outsb
pop
js
push
ljmp
pop
dec
incl
or
pop
dec
bound
cmpsl
jp
lock
push
dec
xchg
lods
popa
dec
lds
add
icebp
push
or
cmp
sbb
add
pop
cli
lahf
adc
rcrl
pusha
lret
shrl
pop
iret
arpl
mov
out
call
pop
pop
cmpl
and
ret
pop
sbb
xchg
out
pop
xchg
js
jge
dec
inc
jg
mov
and
xor
int3
gs
push
mov
xchg
ret
push
push
sbb
nop
into
pop
jb
shlb
and
fs
daa
pop
cltd
pop
pop
cmc
lahf
lock
test
and
pop
mov
cwtl
addr16
ds
pop
lret
dec
cli
xor
mov
insl
addr16
adc
jecxz
sbb
cmp
xor
jl
test
dec
jl
jns
push
cld
fwait
pop
fdiv
lahf
mov
sub
sarb
sbb
pop
fcom
cmp
or
add
sbb
stc
repz
jno
mov
pop
pop
push
add
xor
sbb
dec
lahf
mov
sub
push
or
ja
hlt
ret
adc
cmpsb
fstps
jns
xchg
fprem
sbb
cs
roll
mov
notb
int3
mov
js
cli
pop
rcrb
mov
je
enter
jg
ret
mov
lock
or
mov
aas
inc
adc
inc
fcoml
loopne
push
push
clc
dec
pop
jl
outsl
inc
xchg
pop
lret
adc
push
mov
ficompl
xchg
je
adc
fldl
cwtl
imul
xor
mov
scas
xchg
cltd
lcall
xor
adc
dec
jp
sbb
pop
add
icebp
xchg
dec
inc
faddl
adc
jl
sbb
fcmove
pop
sbb
aas
pop
xor
shrb
lea
into
test
notb
int
out
inc
pop
mov
sbb
les
stos
pop
pop
sbb
movsl
push
jns
sarl
pop
adc
pop
pop
mov
adc
mov
sbb
sub
add
in
outsl
cwtl
push
inc
cli
xor
sbb
ficompl
insb
data16
mov
aas
xchg
mov
adc
pop
out
out
pop
aam
out
pop
pusha
sbb
mov
pop
xor
jb
ret
repz
add
call
out
jae
ljmp
pop
movsl
repz
sub
pop
and
mov
or
pop
xchg
mov
sub
fdivs
cmp
mov
cmpsl
inc
jge
pop
orb
test
push
dec
or
repz
testb
gs
cmp
jge
in
pop
pop
mov
icebp
lods
cmp
dec
sub
sbb
test
xchg
icebp
cld
pop
lods
mov
fs
adc
out
pop
or
shlb
fsubrs
adc
jo
inc
popf
cmp
fmuls
mov
sbb
dec
cltd
call
ret
push
add
cmc
ljmp
pop
stc
insb
mov
dec
jle
sub
mov
xor
dec
insb
cmpsl
jge
sbb
mov
jle
xchg
adc
je
data16
cmc
push
pop
mov
rcll
fs
mov
fwait
orps
js
ljmp
cli
jbe
push
ficomps
cmp
call
fstpt
decb
jbe
insl
dec
mov
push
sbb
icebp
push
enter
xchg
icebp
andb
sub
popl
std
mov
pop
push
insl
out
jb
pusha
stc
pop
mov
xchg
pop
or
ficompl
je
imul
sbb
lret
xchg
inc
scas
dec
leave
rcrl
mov
mov
lds
xor
jg
jo
shrl
pop
aaa
pop
iret
xchg
mov
fistps
inc
out
xchg
xor
clc
insl
out
cmpsb
aaa
movsb
ds
or
cmp
shlb
push
out
xlat
das
icebp
jbe
pop
add
pop
ss
fstl
data16
and
js
es
jne
js
mov
pop
and
push
enter
in
icebp
mov
pop
jge
pusha
push
jmp
push
cmp
loop
pop
shrb
adc
xchg
pop
push
sbb
popa
les
pop
icebp
std
push
inc
insl
fisubrl
pop
mov
dec
mov
or
xchg
movsb
pop
iret
mov
div
pop
mov
mov
xor
mov
cwtl
or
cmpsb
inc
pop
jecxz
dec
cmc
repz
sbb
jl
imul
scas
mov
sbb
lret
pushf
pop
push
or
addr16
popa
je
out
pop
push
sub
pop
mov
dec
push
sub
mov
inc
inc
pop
or
pop
sub
xchg
lcall
and
mov
iret
lahf
out
pop
mov
jb
mov
incl
test
mov
mov
dec
adc
xchg
fcomps
pop
mov
push
ret
sbb
daa
cmpsl
or
ret
dec
lea
pop
pop
cmp
add
lahf
sbb
rcrl
adc
cmp
jnp
rolb
cmp
loopne
push
add
fisttps
scas
outsl
int
fistpl
scas
jecxz
add
xlat
int3
pop
movb
addr16
pop
leave
cmc
inc
cmp
out
cmp
sbbb
xchg
push
mov
pop
stos
clc
inc
pop
xor
cmp
or
into
pop
jmp
mov
imul
fincstp
insb
jns
push
pop
ss
fisttps
pop
sub
xor
pop
pop
mov
mov
pop
scas
jne
xchg
pop
js
dec
xchg
pop
ret
fucomi
inc
ss
push
jge
insb
pop
fdivs
jns
lret
idivb
sbb
les
maskmovq
divl
rclb
into
xchg
sbb
notb
je
pop
inc
pop
pop
xor
mov
mov
cmpsb
outsb
mov
jge
sub
pop
test
dec
lcall
jbe
pop
dec
nop
scas
dec
pop
cmp
cmc
xor
lahf
popf
pop
faddl
out
dec
leave
add
mov
adc
jo
lahf
pop
test
stc
sbb
lret
popf
popa
loop
sub
pop
adc
xor
xchg
inc
adc
pop
fwait
leave
push
pop
jmp
mov
add
outsb
lret
pop
out
pop
pop
xchg
fnsave
mov
jmp
data16
ficompl
divl
lcall
xor
insb
fdiv
das
imul
insl
iret
idivl
cmp
mov
mov
insl
xchg
iret
js
push
das
shll
lahf
cmp
aad
jbe
lock
add
pop
fisubrs
hlt
jp
jmp
mov
pop
push
lock
jne
xchg
pop
scas
mov
fcmovb
cmp
pop
rolb
lea
inc
sbb
lret
or
xchg
or
imul
jp
xor
sub
addl
mov
lds
fbstp
inc
push
jae
int3
dec
ficomps
cmc
push
jl
xchg
jb
data16
mov
pusha
xchg
loop
or
add
sbb
repz
lds
mov
cli
cmpsb
cs
jbe
mov
xchg
bound
pop
out
pop
jge
int3
inc
rorl
std
sbbb
jo
pop
xor
pop
sar
jns
or
fdivs
and
mov
mov
dec
fldt
xor
push
pop
in
jp
lea
push
pop
or
hlt
dec
popf
mov
hlt
pop
bnd
ja
pop
sub
mov
cwtl
sbb
xchg
mov
xchg
add
out
clc
mov
jecxz
pop
aaa
mov
repz
cmp
push
std
fnstsw
mov
test
mov
add
mov
stc
cmpsl
dec
xchg
pop
sarl
paddsw
pop
nop
sub
shll
push
bound
daa
aas
sub
or
push
pop
iret
add
xor
test
pushf
add
mov
cmp
and
orb
aas
ffree
pop
lcall
or
adc
fnstenv
aad
pop
ret
lcall
ret
and
test
test
sbb
data16
mov
pop
cltd
jae
cmpsb
in
js
jl
test
data16
pop
sarb
mov
sub
jg
cmp
fsubrs
xchg
xlat
pop
inc
clc
mov
cwtl
clc
divl
icebp
fists
shll
pop
addr16
inc
xor
add
or
cltd
in
cmp
pop
rcrb
add
inc
int
xchg
cmc
xchg
xchg
sub
dec
pop
fwait
or
mov
xchg
jl
cld
ss
cmp
adc
push
stc
mov
arpl
or
pushf
outsb
out
fcoms
aas
jae
mov
pop
pop
icebp
je
repz
pop
aaa
push
push
pop
inc
jg
imul
pop
and
and
or
lret
jnp
cwtl
adc
cmp
push
sbb
sbb
aas
mov
ret
clc
pop
imul
and
cs
icebp
loopne
pushf
fstpl
jne
out
pop
lds
shl
dec
mov
lret
mov
arpl
mov
int3
xlat
cmp
or
xor
lret
repz
mov
add
sbb
ds
fsts
mov
stc
pop
dec
sub
das
mov
mov
push
and
pop
daa
pop
aam
xor
dec
sub
gs
lret
pushf
out
iret
cli
pop
or
jle
je
addb
mov
mov
pop
jbe
mov
and
adc
push
in
jg
mov
inc
addb
data16
je
xchg
imul
lcall
aaa
addr16
scas
lret
fs
mov
jge
enter
mov
scas
js
mov
xchg
jp
mov
pop
jg
jae
pop
into
dec
jmp
inc
sbb
mov
mov
repz
pop
into
cmc
pop
lock
xchg
pop
inc
fdivs
pop
mov
inc
inc
cmc
cld
dec
and
mov
add
mov
mov
adc
mov
mov
insb
popa
adc
ss
test
pop
pop
pop
lcall
push
xor
xchg
in
mov
and
xchg
lods
insl
incl
les
xor
pop
mov
mov
fxch
add
dec
fs
ret
mov
dec
lret
dec
and
jae
lds
push
sbb
jecxz
lahf
or
adc
data16
push
ja
daa
jp
push
push
push
out
sbb
add
or
adc
push
xchg
push
or
push
and
add
adc
dec
adc
arpl
pusha
or
dec
fld
aad
popa
push
fs
movsl
mov
sub
xchg
mov
adc
sub
push
ss
int3
or
inc
out
mov
sub
mov
sti
mov
add
insb
loop
jno
pop
mov
clc
int
rcll
loop
jmp
inc
iret
xchg
repz
lea
sbb
cli
sbb
mov
push
mov
mov
xchg
lret
sbb
pop
in
dec
adc
cwtl
xchg
shll
xchg
mov
int
adc
cmc
dec
jl
aas
movsl
fmul
rcll
inc
cmp
outsl
xor
sarb
jne
lahf
xchg
imulb
sbb
shll
clc
imul
sub
inc
ljmp
int
inc
or
or
and
hlt
push
jmp
repnz
adc
mov
sbb
cmp
mov
pop
mov
push
jb
repz
mov
mov
cld
push
jnp
pop
leave
pushf
xchg
push
mov
ja
dec
sub
stos
lock
and
jmp
cwtl
jae
dec
cmp
test
hlt
lds
jae
loopne
negl
fisttpl
xchg
adc
add
fwait
lods
pushf
pop
cmp
adc
push
pop
push
inc
adc
dec
setne
or
cmp
pushf
cmp
pusha
lea
jns
pusha
lea
ja
jmp
ss
push
fwait
push
mov
inc
cmpsl
cmp
rclb
stc
shll
lea
mov
dec
and
out
sbb
sbb
loope
insl
repz
aam
aam
pop
icebp
data16
jl
cmp
xor
test
jns
jno
or
ficompl
subl
adc
adcl
insb
add
scas
stos
sub
movsl
dec
dec
out
add
cmp
sub
mov
push
or
pushl
mov
bound
pop
bound
dec
pop
jae,pn
jo
mov
adc
outsb
cli
lea
jne
setbe
mov
or
movzbw
xor
inc
mov
shl
stc
and
add
shr
shr
mov
push
jmp
mov
lea
jae
push
pushf
cmp
jmp
filds
mov
mov
sub
fs
imul
icebp
jle
jo
mov
mov
cmp
aad
aad
fucom
mov
jb
aad
xor
add
das
sub
lret
pop
loope
lret
add
aam
lcall
inc
in
mov
andl
and
aas
cmp
mov
push
xchg
push
das
push
pop
cmp
out
neg
mov
cli
mov
cmp
repnz
add
mov
enter
cmc
mov
pusha
clc
add
test
push
jmp
clc
repnz
lea
jae
pushf
lea
jne
mov
movb
pushf
pusha
not
mov
mov
mov
mov
jmp
add
ja
jbe
dec
jne
push
outsb
jo
gs
jb
dec
gs
fs
rorb
movsl
sub
sarb
imul
or
sub
ds
mov
scas
gs
inc
mov
xlat
mov
mov
dec
adc
sbb
fnstcw
js
shrb
sbb
sahf
cmc
ret
mov
xor
jnp
inc
rorb
xor
inc
mov
das
stos
shl
out
xor
xor
outsb
jle
shr
test
or
in
push
dec
xor
mov
inc
ret
ljmp
iret
scas
repnz
ljmp
movsl
jp
and
or
jl
test
push
fisttpll
adc
outsb
xchg
mov
push
sbb
pop
mov
shrl
cmp
gs
dec
sbb
out
adc
mov
negb
das
push
jbe
pop
add
cmp
push
fsqrt
sahf
xchg
cltd
nop
nop
mov
xchg
gs
lahf
mov
or
sbb
ret
inc
lds
pushf
movsl
nop
shr
adc
or
mov
in
xchg
rorb
mov
pop
ljmp
popw
xchg
jecxz
das
mov
mov
jmp
fstps
in
push
sbb
cli
movsb
cmc
rclb
fwait
or
push
pop
stc
xchg
or
mov
or
and
mov
mov
xchg
sub
sbb
adc
inc
pop
out
imul
adc
or
xchg
aaa
shlb
addr16
das
outsb
sub
xor
and
jg
sub
movsb
roll
shrb
std
fs
mov
nop
sbb
mov
insb
dec
js
mov
and
and
inc
fstl
cmp
lods
test
test
outsl
inc
push
sub
adc
int3
lods
cmp
fs
adc
or
repz
sbb
mov
adc
gs
aad
test
nop
aaa
push
into
cltd
mov
repz
call
jne
mov
cmp
jnp
mov
add
bound
ljmp
mov
mov
inc
stos
pop
push
arpl
mov
pushf
lahf
movb
lea
pusha
push
pushf
call
mov
jno
mov
dec
push
sub
fiaddl
sbb
jo
mov
add
sbb
clc
jno
lods
in
push
aam
dec
test
push
popa
xor
pop
push
fcoms
out
pop
pop
dec
ret
jmp
cmp
cmp
mov
testl
fdivrs
xor
mov
fsub
dec
aam
and
jg
and
std
adc
xchg
mov
repnz
cmpsb
cmp
scas
xorb
or
call
push
les
hlt
mov
aad
adc
push
sub
mov
cmp
shr
sbb
je
mov
aam
push
xchg
adc
fidivl
add
inc
cmp
mov
clc
roll
loop
lea
mov
mov
loop
xchg
cli
fiaddl
sub
out
pop
cmp
btr
mov
push
bt
push
pushf
cmpb
mov
lea
jne
jmp
mov
movsl
ret
or
mov
dec
rolb
xor
fdivrs
xchg
mov
dec
call
aad
jmp
sbb
xchg
bound
push
cmp
jbe
mov
bound
or
orl
jns
xchg
addl
popf
nop
in
mov
cli
cmp
pop
ss
dec
xchg
test
pop
and
aam
and
adc
pop
and
lret
inc
out
lods
cmp
adc
movsb
std
mov
les
mov
ret
movsl
xchg
mov
loope
ret
or
les
popa
or
adc
int3
mull
push
mov
or
jp
aaa
cmp
push
int3
inc
jp
xor
stos
sub
sub
ror
jbe,pn
pop
movsb
fnstsw
cmp
negb
movsl
test
push
add
scas
or
es
cmp
jno
int3
mov
jne
push
mov
ds
outsb
ds
jnp
push
xchg
cmpsl
out
cli
lahf
ficoml
or
scas
insl
ss
inc
les
jno
mov
cmpsl
sub
mov
repz
stos
cmpsb
iret
mov
fwait
or
sbb
mov
push
push
imul
ss
gs
jg
mov
push
xchg
sahf
xchg
pop
xorb
test
xchg
pop
jle
inc
pop
inc
cmp
out
mov
rclb
mov
data16
sbb
dec
arpl
lea
fdiv
int3
lods
hlt
iret
mov
loope
inc
sbb
jno
mov
dec
cmp
and
cmp
hlt
gs
xchg
mov
mov
cmp
mov
enter
pop
add
pop
jb
frstor
orb
cmp
adc
xchg
and
mov
cwtl
cmpsl
xchg
movsl
insb
xchg
aaa
fwait
adc
dec
sbb
fdiv
pop
xlat
mov
mov
roll
xlat
scas
cltd
outsb
inc
sbb
and
lahf
ret
jecxz
xchg
mov
js
in
add
add
cmp
jecxz
or
xor
sub
in
call
mov
into
jmp
mov
push
push
iret
cltd
cmp
mov
mov
or
in
repz
or
mov
sub
lods
lods
mov
add
lret
movb
scas
imul
push
pop
hlt
dec
mov
or
mov
jmp
imul
mov
pop
xchg
and
js
loop
stos
lahf
jmp
xchg
scas
jecxz
lcall
or
cwtl
sbb
pusha
mov
not
movb
setp
pushf
lods
cmc
rol
call
pusha
jmp
inc
pushf
pushf
mov
lea
pushf
lea
call
pusha
adc
pusha
jmp
pop
data16
or
add
mov
popa
loopne
aam
enter
lods
std
mov
and
inc
jnp
outsl
cmc
shrl
pop
mov
sbb
test
test
sbbl
mov
out
fwait
aaa
nop
test
cli
loop
testb
mov
cmpsl
sub
and
lret
test
push
mov
inc
enter
js
insb
sub
sbb
push
loope
jns
lods
sub
jnp
not
clc
add
mov
pushf
movb
pushf
lea
call
clc
cmp
cmp
pusha
jmp
ja
push
clc
imul
cmp
clc
add
pusha
mov
pushf
lea
jmp
fwait
mov
mov
into
mov
out
outsl
lret
or
rcr
mov
xchg
pop
roll
cmp
gs
push
cs
inc
jge
adc
adc
std
xchg
xor
outsl
lret
stos
out
loop
cli
xchg
popf
jl
add
fs
cs
fsubs
rclb
jmp
fiadds
hlt
jns
lea
pop
clc
insl
in
adc
popa
inc
cmpxchg8b
pushf
push
ds
test
cmp
mov
or
pop
into
xlat
out
out
inc
fnsave
mov
fldl
jnp
and
xorb
jmp
xchg
mov
fadds
mov
iret
sar
jmp
push
xor
push
cmc
mov
popf
out
dec
int3
push
push
pop
insb
cmp
xor
sti
sbb
mov
test
fwait
mov
add
popa
sbb
enter
adc
mov
lret
out
pop
ficomps
lea
pop
call
fistl
loop
pop
lds
lret
mov
iret
test
add
hlt
subb
jecxz
sub
call
and
or
cld
inc
imulb
or
mov
stos
lahf
into
out
scas
sahf
fnsave
idivl
push
lea
push
dec
inc
dec
xor
cs
insb
add
movl
call
call
test
enter
adc
xor
and
adc
or
dec
sbb
and
inc
mov
adc
imul
fstl
sti
sub
stos
cmp
sbb
pusha
pop
sbb
jno
lock
sbb
je
add
cmp
idivl
xchg
das
adc
xor
ds
jb
or
cmp
xchg
or
add
enter
add
add
add
add
jo
add
inc
push
add
enter
add
add
add
add
inc
push
add
enter
add
add
add
add
adc
aam
push
add
enter
add
add
add
add
inc
push
add
sbb
add
add
add
xchg
adc
in
push
add
sbb
add
add
add
rcrl
add
sbb
add
add
add
sbb
add
sbb
add
add
add
add
inc
push
add
sbb
add
add
add
xor
add
push
add
sbb
add
add
add
sbb
add
push
add
sbb
add
add
add
adc
add
push
add
sbb
add
add
add
inc
push
add
add
add
add
add
inc
push
add
add
add
add
add
adc
sub
push
add
mov
jno
jns
push
cmp
inc
sub
enter
les
xchg
sbb
repnz
adc
pop
pusha
and
add
xchg
sbb
cmp
cmpl
pop
cs
cmp
adc
scas
sub
push
jno
mov
jns
subb
inc
or
lret
dec
mov
push
popf
sbb
js
fs
adc
hlt
or
mov
movl
inc
and
mov
and
push
pushf
lea
jmp
movl
lea
call
call
fwait
mov
mov
negb
cs
and
call
out
stc
shrb
jp
lahf
pop
ss
outsb
jb
iret
pop
lea
cltd
lcall
lret
lods
add
xor
sub
in
add
cmp
shrb
push
scas
test
or
stos
out
jo
sub
popf
enter
int3
mov
pop
pusha
sub
or
inc
in
add
or
in
lea
rcrb
mov
in
inc
popl
mov
ljmp
adc
filds
shlb
or
sbb
sbb
repnz
mov
test
stc
cld
das
imul
dec
jl
add
push
sbb
jo
jo
add
mov
xor
cmpsl
xor
pop
sbb
xchg
or
jl
mov
sub
cmp
testl
push
imul
ja
cmpsb
xlat
inc
pop
push
imul
fsub
mov
jnp
dec
aaa
mov
mov
mov
in
std
cs
sti
nop
mov
lea
loopne
shrl
in
jmp
frstor
or
inc
imul
pop
add
xchg
pop
cmpb
movsb
jne
repz
add
pop
or
test
mov
mov
xorb
gs
jbe
mov
pop
pushf
xchg
mov
sbb
cltd
mov
ss
push
and
mov
ret
dec
lret
cli
ja
aam
iret
push
lret
jae
xor
push
loope
imul
stc
lods
std
mov
xchg
int
fbstp
mov
and
ljmp
ret
dec
aaa
dec
aas
push
fstpt
pop
iret
cli
pusha
out
insl
ret
in
dec
fnstsw
mov
negb
push
add
and
mov
xchg
nop
jecxz
adc
dec
bound
adc
sarl
pusha
adc
adc
ss
bound
xor
adcl
sahf
stos
adc
mov
rcl
aas
mov
je
cmp
add
movsb
dec
pop
cmp
lods
mov
lock
jnp
ljmp
mov
aas
xchg
loopne
xchg
ljmp
cmpsb
mov
loopne
sbb
into
xchg
scas
fisubs
or
in
insl
xor
inc
and
sbb
jo
dec
or
pop
xchg
out
ljmp
nop
int
jno
ds
push
sbb
fidivs
repz
xchg
xchg
aam
scas
pop
iret
cli
test
add
jmp
xchg
loop
ljmp
mov
inc
adc
loope
sbb
push
outsb
pop
pushf
xchg
or
clc
xchg
or
bound
sbb
xchg
test
cmp
xchg
leave
in
ja
jg
sbb
mov
insb
movsb
xor
out
loope
call
mov
jnp
and
xor
jmp
mov
shlb
pop
pop
shr
fcompl
push
movzbw
bswap
mov
pushf
pushf
pushf
lea
jmp
fsub
mov
jne
orl
cmp
pop
imul
cmc
add
in
adc
xorb
in
hlt
lret
adc
pop
aam
lcall
cwtl
dec
into
lods
fsts
test
fisttps
iret
repnz
pop
and
sti
test
sahf
add
sbbb
inc
shlb
mov
iret
sahf
sti
lret
mov
in
pusha
jle
sarb
pop
xchg
test
sub
cmc
pusha
pusha
movw
pushl
popl
test
cmp
jmp
dec
jae
into
or
push
cmp
shll
iret
mov
add
mov
push
xchg
jmp
jecxz
xor
xchg
xchg
push
jnp
push
sbb
je
add
add
jne
movsb
lahf
gs
or
pop
ret
dec
aaa
xchg
pop
mov
enter
sbb
mov
addr16
movsl
dec
popl
sbb
aam
sub
sub
jb
or
in
jbe
mov
pop
mov
fldt
lds
sti
jae
fwait
xor
pop
inc
loope
push
test
cli
cmp
mov
lock
jp
xchg
ljmp
sti
cmpb
cmpsl
mov
and
nop
or
xchg
mov
les
sub
jo
push
jge
inc
sbb
inc
cmp
rolb
push
fmul
or
bound
xchg
dec
lret
pop
ret
mov
mov
adc
mov
cs
in
jmp
and
jg
rclb
xchg
fucomp
mov
flds
test
jo
in
fmuls
add
add
daa
mov
rcrb
xor
push
mov
icebp
sbb
inc
loop
lods
mov
test
sub
cmpsl
nop
stos
or
dec
ret
cltd
or
popa
add
jl
pop
and
pop
mov
sbb
jecxz
cmp
inc
loop
je
push
mov
es
cwtl
ret
push
xchg
das
test
add
shr
pop
jbe
pop
dec
out
push
scas
mov
daa
jp
mov
int3
test
sahf
ljmp
adc
xor
aam
sub
test
sarb
int3
dec
int3
mov
mov
xchg
or
hlt
fsubrs
inc
fmul
idivl
mov
inc
lods
stos
push
into
fisubl
lret
xchg
adc
jp
jno
dec
and
ss
js
lods
popf
lods
sub
xchg
aad
mov
mov
push
popa
je
cwtl
sbb
out
and
test
ljmp
out
inc
mov
mov
mov
mov
cmpsl
mov
nop
cmp
test
filds
rorl
jno
cmp
or
mov
fsubr
enter
or
xchg
xorl
pop
pop
sarl
push
xor
jne
adc
ds
cmc
iret
int
jno
repnz
fmull
lods
pop
repnz
rorb
cld
ficompl
cmpsl
fwait
jecxz
xor
fsubp
lret
out
xchg
jecxz
iret
scas
xor
cmp
stc
cmp
cmp
sub
rorl
jno
testb
xchg
out
orl
push
ja
mov
mov
test
stos
cmc
xor
push
inc
jmp
sarb
mov
or
int
mov
ret
aam
sti
shlb
lret
mov
pop
sub
or
dec
sub
dec
sub
cs
dec
stc
sub
mov
jno
or
or
xor
hlt
xchg
rorl
ja
jp
sbb
add
and
jge
imul
insb
sti
bound
jb
pop
arpl
push
sbb
add
pushw
call
bt
cmpb
jmp
add
dec
gs
popa
addr16
outsl
js
add
test
add
pop
sub
bsr
cmc
call
test
pushf
push
movb
pusha
lea
je
ror
not
mov
shl
lea
add
add
rcr
mov
jmp
je
adc
push
xchg
adc
xchg
jnp
pop
es
lret
cmp
adc
dec
vmaxss
and
repz
test
and
mov
lcall
nop
imull
stos
mov
xor
add
cmp
push
sub
add
push
in
cwtl
es
pop
add
repz
test
lods
stc
ret
ss
cwtl
cmp
add
dec
jb
jbe
add
inc
sub
sahf
call
inc
clc
push
pushf
add
mov
mov
pushf
pushf
dec
push
pushf
pushf
lea
jne
sub
add
mov
stc
test
cmc
cmp
push
lea
ja
pusha
jmp
and
push
jns
jge
push
les
jns
xchg
loopne
pop
xchg
jae
jnp
rcll
cli
mov
int
push
arpl
dec
push
icebp
ffreep
mov
cltd
mov
inc
shlb
out
test
add
mov
dec
dec
std
and
stos
cmp
add
das
push
push
sbb
call
jecxz
popf
push
lcall
xchg
aam
je
add
lret
pop
xor
mov
daa
push
leave
test
mov
clc
lds
lret
stos
fbld
ret
dec
fdivrl
add
rorl
jno
jle
inc
ret
dec
fisttpl
sahf
jecxz
sti
mov
xorb
pop
sub
mov
sbb
jg
sbb
imul
pop
test
mov
insl
lret
out
stos
out
lds
aas
outsb
sbb
pop
mov
ja
jne
insl
pop
adc
and
dec
sub
out
fs
je
std
aam
jno
enter
and
adc
faddl
icebp
fisubl
scas
cmp
xchg
mul
iret
push
and
ret
dec
sub
add
and
xchg
loope
pop
mov
pmaddwd
push
dec
pop
outsl
dec
and
vpmaxsw
mov
movb
in
mov
sahf
stc
dec
inc
inc
xor
inc
inc
lods
lds
adc
cmp
in
mov
inc
fidivs
lods
shll
xchg
enter
xlat
jb
cld
sarl
sar
outsl
sub
pushf
pushf
rep
pop
mov
mov
lea
jmp
stc
xor
pusha
push
inc
lea
jbe
call
pushf
jmp
sti
shlb
scas
or
xchg
mov
sbb
sbb
add
stc
mov
std
nop
jmp
insl
cmp
jecxz
dec
ja
icebp
add
lods
int
cmc
dec
sti
inc
outsl
aad
int
fsubr
push
out
scas
mov
pop
xchg
xchg
fcomps
lods
jae
ss
push
push
and
movsb
push
adc
push
ret
sub
inc
inc
imul
and
xchg
xchg
mov
pop
insb
or
or
js
push
sub
stos
push
or
sbb
and
lret
out
fcmovne
mov
addr16
iret
lret
jge
xor
pop
int3
in
ds
jle
out
fiaddl
adc
out
lar
pushf
les
jne
arpl
add
pop
pusha
cwtl
psadbw
std
ret
divl
dec
insl
xor
dec
xchg
xchg
loop
mov
mov
push
inc
mov
jmp
leave
cmpsb
aad
mov
cwtl
jmp
jno
sub
jo
cmp
pop
adc
add
jl
je
mov
jno
lods
xor
cmc
jo
nop
sbb
cmp
mov
adc
xchg
stos
in
cmp
cli
popf
ret
push
outsb
fistl
xor
push
mov
sub
xchg
scas
loop
sahf
hlt
insb
aaa
adc
jo
shlb
jecxz
jo
xor
inc
jge
fsubrs
repnz
mov
bound
push
jg
inc
push
inc
sbb
dec
sbb
push
mov
pand
sub
mov
or
adc
mov
bt
cmc
bt
repnz
call
mov
mov
inc
pushf
inc
pushf
shl
shl
and
xchg
das
pop
mov
xor
mov
clc
test
movb
mov
neg
bts
mov
mov
cmp
jmp
sbb
jno
fisttps
scas
fisttpl
push
jp
inc
fistps
xor
mov
imul
cmp
fcmovnb
mov
sahf
lods
mov
add
push
jbe
pop
sub
adcb
adc
xor
add
push
popf
not
xchg
mov
jo
sub
push
push
gs
leave
jne
in
mov
in
xor
je
dec
and
cmp
sbb
int3
fdiv
mov
psubw
or
pop
pusha
inc
fmuls
jno
mov
ret
push
and
xor
xor
int
adc
push
adc
dec
out
mov
jle
out
xor
loop
push
or
sbb
mov
mov
jne
in
fldz
mov
lods
push
inc
mov
jle
es
test
aad
int3
inc
and
insb
and
mov
stos
lret
andl
iret
inc
sbb
dec
outsb
pop
mov
dec
bound
push
xor
inc
adc
push
push
aaa
insl
dec
imul
push
lds
mov
add
cmp
sub
bt
cmc
lea
jns
ror
push
mov
cmc
pusha
movw
cmp
add
pusha
test
mov
lea
jne
jmp
movw
pushf
lea
ja
call
pusha
call
mov
pop
jno
pop
mov
push
iret
dec
xor
mov
push
ret
xor
stc
jl
mov
in
cmp
in
sub
sbb
cmp
into
call
mov
sbb
dec
inc
sarl
pop
jb
mov
outsl
mov
jno
mov
xchg
xchg
push
xchg
in
mov
imul
jbe
inc
imul
or
ljmp
mov
pushl
test
jno
cmp
cmp
xchg
or
or
popf
or
loope
pusha
repz
pushf
mov
xor
cld
testb
push
pop
movsb
fwait
jns
add
and
imulb
add
push
cmp
adc
sub
fldcw
inc
dec
loop
add
pop
add
test
or
fdivrl
mov
push
lret
cmpsl
rolb
faddl
lahf
sar
lcall
mov
mov
ja
jae
cmp
scas
jae
ja
inc
cs
mov
pop
int3
sbb
jp
arpl
aam
sub
ds
pusha
es
fbstp
or
mov
xor
xor
fs
negb
push
cmp
bound
ljmp
mov
ret
daa
cli
inc
aam
imul
cmp
inc
add
add
push
rcll
outsl
ljmp
fimull
jno
fs
jl
sbbb
shll
iret
mov
inc
out
pushf
in
ja
aas
pop
pop
push
xor
pop
add
lods
aaa
push
into
fs
pop
ret
mov
push
jmp
inc
push
in
cmpsb
sbb
enter
fwait
pop
dec
lret
and
add
lds
scas
cmp
jnp
or
or
add
imul
pop
or
pop
jne
das
mov
fisttpl
jno
xchg
lcall
iret
inc
ret
mov
lods
das
cmp
imul
mov
add
and
sub
mov
ds
sub
push
lea
cmp
jns
insl
push
add
cld
je
orb
push
push
inc
push
repz
je
jae
sbb
and
and
insb
sub
sbb
push
xor
dec
gs
inc
out
fs
jo
push
insb
cmp
or
push
mov
mov
loop
fldcw
rorl
icebp
jno
pop
rorl
cmp
into
push
ljmp
mov
rclb
ljmp
outsl
int3
dec
jo
movsb
daa
inc
fisubrs
dec
or
xchg
adc
daa
jb
dec
cmp
test
je
sub
cmpl
adc
sbb
dec
push
das
dec
aam
push
and
call
push
lea
ja
clc
add
cmc
shr
sub
sub
not
add
sub
jmp
jmp
fmull
jno
mov
repz
pop
ja
jbe
movsl
push
mov
add
imul
xchg
fwait
cmp
stos
loop
xchg
mov
outsl
lret
xchg
add
jno
fs
pusha
adc
test
jl
lods
icebp
mov
adc
sti
call
dec
adc
pop
pusha
add
shll
fs
sahf
or
das
push
xchg
pusha
sub
mov
cmc
lret
inc
arpl
ret
push
adc
push
jmp
aad
sub
mov
cmc
xchg
popa
les
in
mov
mov
inc
cltd
std
adc
push
xor
or
pop
xchg
jmp
out
push
mov
aaa
or
imul
arpl
mov
lcall
insl
push
cmpl
or
stc
data16
sub
sbb
lods
sub
in
xchg
jb
mov
sub
cs
jecxz
mov
lock
push
mov
lahf
push
inc
je
adc
mov
mov
mov
mov
mov
pop
ds
fs
or
pop
das
inc
fistl
pop
aaa
dec
aas
mov
dec
mov
add
insl
push
pusha
inc
pop
pop
add
cmpsb
jae
push
add
push
sub
les
adc
jnp
xor
in
inc
or
mov
imul
leave
cmp
xchg
mov
mov
jae
inc
inc
out
lods
aas
add
mov
popa
dec
jne
and
push
lds
add
add
out
into
xchg
testb
mov
mov
scas
or
and
push
shll
pop
addr16
jne
test
shl
idivb
sahf
inc
pushf
fcmovu
mov
popf
push
jge
test
jge
push
sub
into
and
pop
and
inc
jg
sub
inc
sub
sbb
jge
test
stc
inc
cltd
sub
adc
push
outsb
lds
dec
and
int3
and
adc
mov
dec
adc
mov
sahf
cmpsb
repz
mov
mov
or
test
or
add
out
bts
btr
call
lea
not
pushf
mov
lea
bswap
pusha
mov
lea
jmp
mov
jno
std
fs
add
mov
adc
hlt
popf
mov
inc
loope
pop
sub
sahf
les
xchg
add
test
cmp
adc
and
jae
inc
lret
lods
repnz
mov
fdivrs
aaa
popf
shlb
lods
mov
pop
js
adc
pop
insb
pop
xchg
outsl
pop
aas
push
imul
mov
scas
mov
push
sub
xchg
xchg
shl
cmpb
lret
push
xor
cmp
std
xchg
test
or
inc
jl
fisttps
jno
repnz
cs
pop
sarb
mov
inc
sti
xchg
loopne
dec
faddl
xchg
mov
add
arpl
push
js
pusha
jmp
adc
jae
dec
movsl
nop
rcrb
xor
ret
ret
sbb
aam
fs
dec
jge
sbb
mov
dec
fcomps
and
ja
push
call
dec
jbe
loopne
jno
scas
cmp
mov
into
dec
cmp
rep
ret
jmp
lods
add
push
pop
inc
pop
pop
add
dec
sbb
cltd
mov
mov
shl
push
inc
sub
lock
cmpsb
cmp
in
sub
arpl
inc
out
pop
call
les
fwait
cli
rcrb
inc
daa
fcomps
mov
mov
in
pushf
cmp
je
and
dec
pusha
pop
fs
filds
inc
push
pop
das
push
jnp
add
inc
outsl
arpl
outsb
je
jb
jo
jb
imul
mov
call
cmpb
pusha
loope
std
jo
js
cmp
loope
pop
push
loope
xchg
push
sbb
adc
popl
xchg
push
das
out
in
jecxz
sub
jae
in
je
add
gs
push
mov
cli
jmp
cmpsb
repz
sti
les
cs
inc
loop
pop
adc
dec
out
mov
ret
cmpsb
mov
cmc
int3
and
xor
mov
jle
or
lcall
pop
push
pop
sub
jno
sub
ret
inc
sbb
out
inc
adc
pushf
mov
mov
pushf
push
pushl
ret
faddl
sub
pop
sub
fcoml
dec
xor
enter
into
xlat
push
cli
pop
xchg
movsb
jns
mov
pop
mov
scas
sarb
mov
lret
fsqrt
mov
jp
mov
push
imul
add
jmp
lods
test
fs
js
sub
push
sbb
in
xchg
roll
xor
jl
jo
and
pop
outsb
lds
clc
imul
loop
jno
mov
je
cwtl
sbb
into
aaa
into
pop
push
rcrl
inc
push
daa
testb
pop
ret
test
cmpsb
outsl
push
rcl
xrelease
push
aas
imul
xchg
addr16
jge
adc
sub
inc
mov
push
or
xchg
adc
add
ljmp
and
subb
add
subb
stos
repz
test
mov
cmp
scas
jmp
out
aam
loop
jno
pop
iret
inc
sub
incl
sti
jmp
push
inc
adc
mov
ss
mov
loopne
push
test
sbb
jo
lret
xor
push
pcmpgtw
into
movsl
out
popa
test
sub
pop
xchg
and
sub
mov
sahf
or
adc
shrl
inc
cwtl
adc
pop
mov
enter
mov
inc
push
jl
ljmp
mov
dec
adc
or
sbb
fcompl
insb
popa
loopne
mov
out
push
jecxz
jno
in
cld
jne
jge
dec
faddl
pop
fdivr
push
jmp
xchg
in
mov
xchg
cmp
sti
pop
icebp
sahf
adc
xor
mov
ja
push
and
js
dec
push
mov
into
mov
iret
push
sub
adc
or
inc
cmp
popf
fwait
cmp
nop
mov
sahf
push
js
fdivs
mov
jb
cmpsb
jecxz
xchg
xchg
stos
out
fdivp
mov
stc
push
xchg
lock
jecxz
jno
adc
mov
mov
jb
mov
cmp
jmp
fidivrl
sarl
xchg
inc
pop
pusha
dec
and
cmpsl
notb
scas
mov
push
sbb
jae
fldenv
jecxz
aas
ret
xor
cwtl
cmpsl
in
xor
cltd
add
aaa
outsb
sub
push
dec
sub
xor
jge
xchg
push
sub
or
rorb
cmp
enter
cmp
add
inc
cmp
inc
mov
add
xlat
dec
push
loopne
mov
push
mov
dec
mov
pop
ja
jne
jne
imul
push
xor
add
dec
in
jno
mov
int
roll
cmp
jae
pop
dec
and
rclb
jbe
lcall
fst
rorb
out
mov
lea
repz
xchg
xchg
xchg
mov
dec
add
stc
mov
out
jl
les
imul
sub
jae
aas
add
adc
xor
mov
roll
shlb
add
shr
mul
decl
jno
pushf
sbb
test
push
cmp
xlat
mov
int3
popf
fistpl
xchg
or
dec
sbb
or
mov
pop
cmp
xor
push
cmp
mov
add
xor
push
sbb
mov
popa
or
pop
sbb
fs
adc
cltd
xor
in
sbb
xchg
dec
test
ds
push
add
dec
and
jne
pop
pusha
and
fs
xor
lods
sub
and
arpl
in
jno
pop
decl
daa
mov
mov
pop
jge
loope
jge
aaa
sub
jno
adc
inc
and
aad
sub
mov
icebp
insb
sti
pushf
mov
lock
sbb
cmp
lea
enter
sub
fdiv
inc
jecxz
mov
xchg
cmp
movl
sbb
adc
sbb
dec
sarl
test
add
add
test
or
lcall
and
lea
ja
call
add
inc
gs
je
dec
popa
outsb
fs
add
in
jnp
pushf
mov
mov
pusha
pushf
pushl
pushl
ret
mov
sbb
lods
jecxz
inc
cmp
pop
adc
inc
loopne
cmp
mov
jo
xchg
jne
lcall
cmp
int
add
pop
fcoms
sbb
int
jp
xchg
xchg
jae
in
sbb
int
jecxz
xchg
xor
int3
jl
mov
cmp
jae
inc
push
outsb
call
in
sbb
aas
adc
lret
jae
sub
xchg
pushf
pop
int3
fs
loop
lcall
adcb
lds
sub
and
in
pop
inc
jmp
insb
cmpsl
pop
popf
push
cld
or
xchg
pusha
sub
sbb
std
pop
rcrb
cwtl
or
cmp
hlt
fsubrs
pop
loope
push
add
nop
fadd
iret
push
cli
nop
pop
and
jecxz
frstor
int
adc
sar
adc
mov
je
dec
jecxz
fcomps
mov
fwait
dec
and
mov
loopne
dec
jnp
imul
add
push
js
and
addr16
sbb
fwait
repz
mov
inc
mov
dec
cmpsb
add
rcr
shll
push
icebp
mov
dec
int
pop
cmp
inc
and
int3
add
push
hlt
pop
dec
std
sub
jmp
loopne
mov
pop
call
adc
int3
inc
cld
cmpsl
push
xorb
rcrb
imul
pusha
test
dec
adc
lahf
jno
bound
or
pusha
mov
pushf
jge
pop
in
add
fmull
inc
rcrl
mov
pusha
inc
test
push
mov
repnz
push
cwtl
pushf
pop
repnz
jl
adc
aas
test
lret
ljmp
jo
bound
push
mov
fwait
jg
leave
push
jbe
lret
cmpsb
jl
sarb
pusha
xchg
lcall
jns
jp
stos
lahf
sti
cli
jp
imul
pop
adc
adc
icebp
in
test
xchg
push
and
push
xchg
inc
or
mov
imul
bound
sahf
push
push
cmpsl
mov
arpl
icebp
nop
popa
mov
in
imul
inc
and
sbb
cltd
fmull
ja
dec
jecxz
adc
outsl
sub
fisttpl
mov
adc
enter
pop
fxch
inc
jecxz
push
xchg
cmpsl
jle
mov
cmp
addr16
in
push
sbbl
jns
push
call
iret
mov
mov
push
insb
ljmp
scas
movsl
lock
or
repnz
pusha
clc
jne
pop
stc
xchg
xchg
outsb
dec
out
lret
inc
adc
hlt
or
js
loopne
out
stos
and
test
jne
sub
xchg
lcall
jl
push
mov
pushf
fidivrs
insl
ljmp
mov
insl
sub
xchg
sbb
cwtl
rorl
mov
push
dec
cld
and
pop
and
outsl
mov
and
jle
andl
mov
jmp
xor
adcb
inc
fcoms
push
lds
aad
xor
jle
mov
jl
loope
stos
jo
push
out
cmc
cmp
push
adc
insb
jp
addb
cmp
add
loope
fcoms
repnz
jp
mov
mov
shll
out
loop
shrl
sbb
int
out
imul
cmp
and
push
pusha
loope
sub
mov
pop
addr16
cmp
xchg
cmp
pusha
inc
push
lods
fcompl
push
subb
add
lahf
in
loopne
push
pusha
pop
loop
and
repz
or
lcall
push
pusha
jecxz
pop
icebp
mov
mov
jge
popf
mov
ljmp
subb
add
stos
in
mov
pop
out
and
cmp
xchg
test
je
push
lret
outsb
xor
sub
mov
sahf
icebp
inc
loop
mov
movsb
arpl
xchg
sti
aam
mov
cmp
test
ljmp
jp
mov
imul
lcall
push
fidivrl
clc
push
pop
lock
push
shr
out
rolb
jmp
add
push
data16
int3
lahf
xor
dec
mov
mov
pop
cld
sub
fcmovnbe
pop
ja
cwtl
loope
imul
inc
lods
cwtl
cmp
mov
fistpll
mov
stc
arpl
mov
outsb
jmp
mov
sbb
xchg
cltd
lcall
mov
cmp
jecxz
fsubl
lcall
pusha
faddl
ljmp
movsb
mov
sbb
inc
or
jne
int3
nop
sbb
push
mov
pop
jns
ljmp
add
call
popa
jmp
mov
push
mov
jae
movsb
nop
mov
movsb
push
jb
mov
imul
lock
push
dec
popa
inc
cmp
clc
popa
pusha
outsl
ss
mov
inc
in
mov
in
mov
sub
jnp
pop
xor
lcall
in
xor
or
cmp
movsb
xor
shlb
pushf
repnz
orl
ja
gs
stos
dec
pushf
nop
jp
stos
pop
jno
jge
jge
fcmovu
inc
pop
push
mov
call
movsl
scas
mov
lock
xchg
fstpl
sarb
mov
dec
pop
arpl
in
sbb
cmpl
jne
jl
ror
in
std
movsb
pusha
and
jns
out
sub
pop
add
lcall
dec
xchg
mul
fucomip
addl
cmpsb
push
lcall
repnz
ja
movsb
out
mov
dec
pop
repnz
nop
cmp
adc
fs
popa
rcll
shrb
test
js
ds
imul
repnz
hlt
add
inc
pop
lods
pop
inc
pop
sbb
cmpsb
adc
push
adc
xor
pop
dec
sub
pusha
addr16
loopne
and
enter
call
mov
xchg
in
sbb
fistpll
inc
fisttpl
push
pop
add
enter
clc
es
adc
xchg
cmp
loopne
stos
daa
xor
sbb
cmp
cmp
sbb
int3
pop
xchg
push
push
cmp
sbb
mulb
aad
fstpl
fsubp
popf
sahf
mov
fucomp
mov
push
into
imul
dec
jecxz
xchg
push
lcall
jecxz
pusha
and
pushf
pop
inc
stos
dec
daa
fdivrl
movsb
test
dec
jbe
push
mov
jb
call
stc
popf
lahf
inc
bsr
adc
and
sbb
stc
js
ljmp
bound
jge
bound
cmp
stos
std
push
mov
and
add
sub
daa
push
bound
xchg
scas
scas
test
or
mov
mov
mov
dec
mov
push
lods
xchg
jle
insb
push
jns
lock
iret
shrb
ja
scas
sub
in
xchg
lea
sub
jmp
push
nop
jge
lahf
pusha
rolb
pop
nop
sub
push
jge
mov
or
test
pusha
in
push
mov
adc
test
mov
push
pop
inc
lock
fistpl
int3
pusha
addl
addr16
lahf
or
insb
mov
jns
fs
int3
push
daa
jle
cmp
mov
jo
fcmovnbe
cmpsb
insb
out
jbe
pop
mov
insb
sbb
fs
push
xchg
mov
pop
mov
out
sub
cld
jg
out
adc
add
mov
scas
inc
cmp
and
sub
mov
or
inc
dec
lods
push
cmp
mov
jge
lcall
popa
je
mov
mov
inc
and
xchg
mov
mov
decb
les
push
xchg
add
fwait
js
ds
gs
add
lock
les
repz
enter
loopne
jl
jecxz
dec
imul
fisttps
cmpsl
test
stos
pusha
and
mov
test
fisttps
xlat
clc
in
xchg
imul
cwtl
inc
xchg
push
aad
ds
xchg
popf
test
xchg
lcall
add
roll
in
lock
pop
lods
andb
iret
sub
call
sub
cwtl
dec
cmp
xchg
pop
lods
push
and
pusha
mov
inc
mov
and
xchg
lea
jg
adc
jbe
mov
jo
mov
pop
das
test
out
add
cli
pop
adc
stc
pop
mov
je
scas
lcall
mov
mov
push
enter
lock
push
push
mov
fwait
dec
das
rep
mov
std
imul
insb
xchg
jae
nop
call
popf
jo
jbe
in
ljmp
jmp
or
pop
ret
xchg
jb
jns
addr16
cmp
pop
push
or
pop
out
xor
sub
xchg
inc
jae
mov
mov
inc
jno
outsb
jns
fnsave
lods
mov
cmc
mov
mov
xchg
cmp
xorb
cmc
call
mov
and
xor
fsubr
fmull
filds
jmp
inc
xor
stos
fmul
jo
sub
dec
inc
gs
xchg
lcall
cmp
gs
push
jg
sub
adc
inc
pusha
cmp
gs
jge
and
cld
movsl
pop
or
mov
sub
push
lcall
add
push
mov
rcrl
aaa
cmp
je
jo
std
js
and
sbb
inc
cmpb
push
in
es
faddl
cmpsb
adc
cs
movsl
push
jp
jns
adc
lea
jo
movups
cmp
cmp
mov
fimull
lret
adc
bound
sub
add
in
repnz
mov
push
leave
push
push
mov
mov
jle
out
jle
mov
jae
and
push
fldenv
or
dec
add
jne
mov
int
fdivrl
xor
dec
std
rorl
jns
shll
mov
enter
mov
pusha
mov
jo
loope
pop
repz
jnp
popf
rolb
fadds
xor
clc
pop
sahf
pusha
jge
outsb
dec
scas
in
jge
je
or
jge
xchg
addr16
faddl
scas
mov
xchg
dec
fldenv
addb
popf
pop
pushf
adc
testl
jnp
mov
test
mov
int3
cli
sbb
adc
decl
add
jp
cmpsb
ljmp
sub
out
movsb
lret
cmp
inc
popa
scas
ret
lret
in
lret
fidivs
xchg
lea
adc
xchg
mov
mov
push
mov
pop
xor
inc
sub
sub
cmp
pop
test
fdivrl
pop
push
dec
add
jo
stos
rcrl
and
out
push
in
lock
enter
jg
sbb
imul
outsb
scas
mov
popf
cmpsl
pop
sti
push
mov
fs
int
cld
sub
inc
fwait
aad
in
add
aad
dec
dec
gs
sbb
ds
call
cmp
jmp
pop
dec
pop
jnp
jmp
mov
test
js
scas
mov
xor
fwait
cmp
sahf
aad
mov
xchg
ja
mov
test
loopne
aad
shll
cmc
sahf
aam
pop
pop
add
roll
fcompl
roll
sub
rol
cmp
push
aad
loope
imul
test
cmp
and
leave
shrl
mov
inc
pop
out
sub
push
cmp
shrl
adc
pushf
mov
mov
arpl
push
jecxz
test
inc
jae
pop
mov
rcr
sbb
xchg
sti
ds
test
shlb
test
inc
xchg
cmp
fst
stos
fistpl
lcall
lcall
mov
dec
ror
xor
out
call
outsb
les
repnz
cmp
lret
shl
rol
das
cmpb
push
cmp
lcall
jo
mov
jmp
and
cltd
dec
es
push
fs
pop
sub
add
das
and
mov
lds
inc
push
and
xchg
inc
imul
loopne
lods
cltd
inc
xchg
iret
mov
dec
fstl
int3
add
test
je
push
into
lret
scas
xchg
test
cmp
ss
lret
cmp
mov
lods
repnz
mov
pop
sbb
mov
loop
es
lahf
shlb
sbb
insb
jmp
mov
mov
into
out
out
xchg
rcll
add
fbld
pop
shlb
mov
popa
into
stos
or
or
mov
in
fs
insl
cli
jecxz
pop
bound
test
push
push
rcll
fcompl
mov
xorl
mov
pop
lahf
mov
mov
sbb
adc
int
dec
lret
xchg
int
push
jge
mov
rcrb
add
jp
loop
aam
nop
movsl
mov
lcall
push
insb
fcompl
shr
mov
inc
push
icebp
sahf
insl
pusha
shll
or
loopne
data16
cmp
roll
lcall
or
xor
add
sbb
call
pop
int3
mov
dec
je
out
dec
fs
cmpsb
lret
and
out
lret
xor
jg
lret
jne
in
or
shrl
roll
adc
pop
dec
pop
jns
popa
iret
lret
push
adc
scas
out
push
inc
rolb
cltd
dec
pop
cmpsb
push
xchg
cmpsb
cmp
arpl
ror
sbb
in
push
mov
xor
lret
cmp
lea
test
lcall
and
lcall
xor
sub
pop
stc
push
leave
xchg
negl
leave
xchg
leave
daa
stc
mov
jmp
popf
xor
fistl
lock
test
gs
ljmp
push
lock
insb
pop
xchg
sub
addr16
push
inc
lock
leave
jp
insb
stos
xchg
mov
ljmp
lret
cld
mov
mov
pop
popa
ss
fists
and
out
adc
dec
add
in
dec
mov
fs
jno
jl
xchg
out
cwtl
push
stc
pushf
movl
push
cmp
lahf
push
popf
jl
jge
adc
repz
stc
mov
arpl
sub
inc
pop
and
ret
outsb
jns
jae
sti
pop
loopne
sbb
xchg
push
out
ds
mov
xor
adc
icebp
xor
test
les
insb
xor
lahf
je
jle
fwait
popf
pop
jns
push
adc
insb
stos
jno
mov
jns
mov
pop
arpl
mov
adc
cmp
pop
xor
xor
sbb
jo
inc
sahf
das
xor
outsb
dec
cmp
lret
xchg
and
xor
ffree
xor
fidivs
mov
or
movsb
and
mov
aas
xlat
mov
aas
cs
xchg
xchg
stc
or
and
fsubrl
gs
mov
imul
ja
mov
adc
mov
mov
jns
pop
push
dec
fmull
xchg
or
ss
mov
mov
fldl
cmc
mov
inc
xchg
jns
xor
cli
dec
ja
sub
sahf
cmp
rcl
jp
pop
mov
sub
push
nop
test
cmp
loop
cmp
ficompl
test
inc
lock
dec
pop
cmp
mov
sbb
xchg
outsl
xchg
xor
mov
xchg
clc
sub
gs
push
mov
pop
inc
pushf
add
dec
adc
jnp
dec
jne
cmp
cmc
jge
pop
mov
jp
pop
sub
cmp
sub
push
push
mov
xor
mov
mov
je
repnz
out
ljmp
loop
in
inc
mov
push
addb
negb
les
add
mov
dec
ja
push
xchg
mov
in
pop
add
insl
xchg
test
je
pop
test
outsl
rolb
je
jo
sti
daa
loope
mov
in
pop
xchg
and
outsl
and
js
push
xor
sarb
insl
add
std
jnp
in
pop
pop
pushf
movsb
push
je
pushf
jecxz
xlat
xchg
subl
push
inc
ss
jecxz
shrl
push
out
inc
xor
leave
hlt
push
push
arpl
sub
ljmp
ljmp
icebp
imul
das
sub
test
xchg
std
mov
cld
outsl
lcall
shlb
movsb
rol
push
in
mov
and
xchg
imul
nop
shlb
push
pop
popa
cmp
inc
jbe
pushf
mov
nop
mov
cmpsb
add
aam
inc
cmpsl
sub
sahf
inc
outsb
sub
and
inc
dec
sbb
popa
jne
ljmp
popf
mov
mov
dec
in
add
pusha
out
xor
push
jno
xchg
and
mov
lret
xchg
roll
jnp
popa
inc
popa
test
pop
pop
mov
push
mov
pop
mov
fsubl
pop
scas
decl
jmp
xchg
xlat
pusha
mov
call
pushf
je
insb
test
popf
jo
addr16
insb
pusha
push
push
hlt
inc
jg
cmpsl
orb
call
lcall
mov
ret
or
dec
scas
data16
ja
adcb
aam
jns
jno
int
js
pusha
stos
mov
lock
mov
js
gs
xchg
sbb
stos
ret
insl
in
mov
ret
js
add
lahf
lods
stc
imul
pop
jo
mov
sbb
jbe
in
inc
test
mov
mov
mov
shlb
jl
fstps
and
enter
mov
add
js
scas
ja
mov
lahf
stos
and
mov
js
mov
ret
es
scas
jl
iret
cmp
sub
loopne
and
inc
mov
rorl
arpl
mov
pop
ja
xlat
ds
in
dec
movsb
jo
xchg
pop
test
xchg
out
adc
scas
loopne
dec
pusha
pop
cltd
loope
sti
inc
popa
push
lods
fisttpll
icebp
popf
outsl
imul
insb
xchg
jl
jns
leave
je
mov
mov
insb
nop
cmp
push
xchg
and
loopne
int
or
orl
pushf
mov
push
in
sbb
mov
push
jno
fs
imul
add
cmp
cmpsl
or
imul
imul
jo
pushf
movsb
pop
fucom
inc
dec
call
nop
push
fwait
xor
mov
int
out
pop
add
mov
pop
push
lea
loop
adc
shrl
push
mov
loop
test
push
mov
into
in
pushf
add
js,pt
and
mov
out
imul
jbe
cmc
mov
dec
mov
cli
cmp
fxch
insl
ffree
mov
sarb
fcomps
add
in
mov
and
pop
jge
iret
jge
testb
sarl
not
sti
jbe
pusha
fnstsw
cmpsl
fs
pop
jge
push
negl
loope
push
jo
rcll
mov
dec
mov
int3
push
fs
insb
mov
ffree
push
out
rcrl
das
sbb
jecxz
stos
or
out
outsl
sbb
test
ficomps
lods
push
push
in
mov
or
or
stos
rcll
jge
cs
shlb
push
fsubrp
pusha
push
mov
mov
sub
and
mov
aad
jns
loop
nop
and
sbb
lea
mov
push
andl
jecxz
inc
push
or
out
test
nop
ss
push
xor
mov
jns
push
cmp
lret
enterw
mov
mov
and
push
pop
jnp
cmp
jno
je
lahf
orl
mov
cltd
pop
push
mov
sti
jecxz
adc
and
or
insb
gs
jns
or
cmp
sub
add
int3
mov
stos
lret
out
xchg
or
cmpsl
rorl
aam
cltd
dec
fstps
dec
lret
and
mov
loopne
add
les
inc
mov
les
push
jg
sbb
push
cmpsb
jns
std
ljmp
leave
jmp
lods
cld
push
scas
push
or
mov
mov
sub
jns
call
cmc
jecxz
scas
test
cmpb
fsubrp
js
inc
aaa
push
negl
push
jmp
lret
mov
popf
push
addr16
enter
pushf
int
ja
addr16
fistpl
push
add
out
or
push
mov
lods
lret
std
xchg
and
and
sub
test
fwait
mov
cli
jno
push
loope
mov
mov
stos
leave
jmp
jge
movsb
call
xchg
jns
leave
jp
jnp
cmpsb
leave
cmp
mov
std
add
sub
leave
xchg
fdivl
sar
sbb
push
pop
jp
leavew
mov
es
pusha
aam
mov
mov
das
clc
sbb
fidivl
mov
cmp
cmpsl
mov
xchg
mov
inc
imul
push
outsb
or
add
adc
inc
mov
inc
mov
das
cli
sub
cli
mov
jns
jb
aaa
mov
sub
fadds
lock
lcall
inc
jns
into
or
push
mov
jge
mov
iret
xchg
cli
call
popa
int3
arpl
xchg
into
aas
xchg
inc
jae
dec
in
jmp
cmp
or
nop
mov
xchg
fcoml
push
test
lahf
jle
rcl
cmp
ljmp
adc
mov
cmp
jno
xchg
jecxz
shr
xor
mov
push
cmc
inc
push
iret
loopne
mov
js
in
mov
pusha
jns
scas
mov
push
arpl
mov
test
jmp
sub
mov
xor
loopne
and
fisttpll
and
scas
cld
or
cmpsb
leave
lahf
adc
sbb
sbb
xchg
sbb
scas
mov
les
lcall
pop
adc
lods
scas
fsubrl
ret
sbb
lods
shrb
lcall
lods
mov
mov
mov
sub
mov
movq
mov
or
test
scas
aam
lret
int3
cmp
jae
cmp
push
xchg
repz
lret
jmp
lock
comiss
mov
pusha
dec
push
mov
loopne
inc
jp
adcb
insl
loope
lods
mov
xchg
jl
mov
lret
pop
mov
imul
pop
loopne
iret
or
push
lods
fdivr
fstl
test
stos
leave
inc
test
dec
or
mov
rcrl
imul
xlat
cli
add
push
stos
jne
jne
push
adc
imull
adc
loope
stos
or
stos
cmp
sti
insl
fdivrl
adc
test
stos
cmp
je
dec
jbe
xor
dec
adcl
outsb
bound
or
push
test
call
sbb
mov
adc
pop
aad
scas
divb
fidivrs
test
dec
mov
cmp
in
cmp
xchg
add
xchg
jnp
test
jne
addr16
cli
scas
outsl
call
sahf
cmpb
xlat
sti
push
mov
js
mov
cmpsl
or
aad
aam
cltd
pusha
adc
jnp
adc
int
dec
jecxz
subl
in
adc
mov
rclb
sbb
test
hlt
sub
loopne
dec
popa
jno
cmpb
ja
jnp
aaa
cmpsb
insb
negb
jle
js
xor
std
mov
inc
mov
les
imul
cli
fs
mov
mov
bound
cmpsb
xchg
push
push
stos
push
popa
rclb
movsl
call
add
cli
inc
or
lea
ret
loopne
lcall
or
mov
fistps
mov
mov
jle
stos
xor
outsb
mov
loopne
movsb
mov
inc
movsb
idivb
mov
int3
jl
fildl
push
jge
pop
mov
inc
adc
aas
pop
cmp
and
mov
movsb
push
jns
jmp
call
jno
jbe
in
lcall
mov
mov
jnp
mov
or
jnp
cmp
cmpl
dec
adc
test
xchg
sbbb
hlt
cmp
push
sbbb
mov
in
xor
cmp
mov
jecxz
inc
shll
push
fs
hlt
test
sti
push
add
cmp
sbb
mov
mov
xchg
jo
cmp
and
xchg
test
mov
outsb
dec
xor
hlt
adc
pop
jno
adc
fisttps
mov
jl
push
mov
je
mov
loope
inc
sbb
jg
lahf
div
insl
inc
inc
in
jmp
popa
or
lahf
lret
mov
jns
push
into
dec
sbb
je
xchg
lcall
inc
adc
lcall
lcall
push
out
in
sub
cmc
sbb
imul
imul
add
mov
imul
out
int3
pop
xor
cmpsl
ljmp
xor
xchg
mov
xor
outsl
sahf
pop
xchg
mov
mov
iret
cmp
jle
sub
icebp
adc
mov
push
adc
dec
repnz
cmp
movsl
sahf
cld
pop
jge
push
mov
jmp
mov
rep
mov
adc
or
mov
out
call
test
fisttpll
jg
lcall
add
sbbl
push
fstp
pop
dec
rolb
push
gs
mov
lret
movl
add
inc
insb
ficompl
cmp
mov
cld
adc
or
stos
or
push
addl
aas
push
cmpl
pop
xchg
mov
sbb
xchg
mov
mov
rcrb
jns
inc
jnp
sbb
imul
inc
mov
push
push
mov
shlb
lds
std
nop
sbb
adc
shrb
jmp
jb
arpl
pop
jge
push
mov
xor
sub
xor
jbe
push
outsb
pop
and
mov
mov
mov
dec
or
adc
xor
movsl
mov
out
push
mov
inc
sahf
add
mov
jns
push
cli
jp
call
or
jbe
sbb
in
sahf
jl
xchg
mov
push
cwtl
mov
sbb
cwtl
orl
insb
in
fs
clc
movlps
in
shrl
mov
cld
xor
pop
sub
mov
add
std
nop
push
mov
cwtl
jle
push
das
or
pushf
pop
js
sahf
and
add
cld
mov
test
lcall
movsb
in
jmp
call
jmp
sbb
lock
pop
lods
mov
add
fnsave
cmp
in
fcoms
add
sbb
pushw
or
xor
clc
popf
mov
push
mov
xchg
cmpsb
jmp
mov
push
imul
sbb
out
pop
push
push
push
push
daa
adc
push
ret
es
pushf
sbb
cmp
xchg
mov
dec
cmp
cmpsl
clc
dec
jnp
xchg
loope
leave
insb
fidivrl
paddw
mov
push
lret
ror
loopne
xchg
and
mov
inc
pushf
mov
std
ret
xchg
lret
pop
nop
mov
sti
fidivrs
xchg
mov
mov
test
adc
xchg
push
rcr
fsub
and
test
lock
adc
xchg
xchg
test
xchg
hlt
cmpsl
aas
enter
popf
into
lahf
loope
sub
pusha
adc
inc
xchg
add
mov
repz
jl
mov
sarb
xchg
je
out
and
cmc
icebp
ror
lahf
pop
imul
arpl
pusha
in
out
sti
or
xchg
jae
jle
fstpl
les
fwait
cmp
shl
jmp
jnp
xchg
call
jbe
xchg
sub
subb
jmp
aas
lahf
xchg
jb
jecxz
push
testb
mov
pop
sub
in
pop
loope
xchg
xchg
clc
jmp
push
xorl
push
test
xor
pop
iret
loop
xlat
lods
lahf
js
test
jnp
nop
std
inc
xchg
icebp
jno
jnp
nop
sbb
nop
mov
stc
mov
nop
in
ret
dec
ret
in
add
pusha
pop
push
orl
mov
pop
nop
stos
lods
cli
jae
imul
mov
pop
inc
fwait
pop
adc
pusha
jle
add
pop
popa
add
scas
inc
lods
sbbl
lods
cmp
dec
repnz
xchg
ret
pushf
test
rol
fucom
add
lret
shll
jge
nopl
mov
push
or
dec
jae
stc
mov
mov
arpl
mov
stos
test
cmpsl
jmp
lea
inc
loop
or
subl
xor
nop
xchg
mov
sub
sub
add
sbb
xor
cltd
adc
cltd
js
repz
test
test
cmp
mov
mov
sbb
adc
push
mov
aas
mov
dec
imul
lea
lahf
cld
push
shll
aam
adc
jnp
push
ret
subl
mov
mov
mov
sub
lret
cli
hlt
jo
divl
arpl
sarl
dec
mov
repz
in
movsl
inc
adc
fdiv
mov
mov
scas
push
xchg
xchg
pop
xchg
or
push
jns
sub
and
pop
mov
jp
ss
push
add
icebp
insb
fcmovu
push
subl
orps
inc
movsb
insb
add
int3
pop
add
pop
lcall
leave
ret
rcl
int3
xchg
dec
push
jl
jnp
sbb
mov
fimuls
aad
pushf
dec
dec
mov
andl
mov
or
dec
inc
jo
loope
pop
push
xchg
jp
adc
lret
dec
mov
pop
aad
std
sbbb
add
outsl
or
sarb
cmpsb
aam
pop
mov
lahf
sub
mov
filds
lods
jmp
outsb
push
mov
mov
mov
rclb
fisubs
pushl
and
sbb
test
hlt
popf
mov
xlat
daa
nop
dec
xor
loope
pop
in
and
aaa
xchg
ljmp
jl
push
outsb
xchg
test
mov
rcll
push
adcl
lcall
sti
rolb
nop
cld
or
movsl
sti
lret
lahf
xchg
stos
xchg
cld
nop
lock
aas
bound
push
inc
fimull
ror
pusha
in
scas
jnp
xchg
jl
sub
add
sbb
js
jmp
mov
out
adc
and
mov
leave
mov
xchg
push
push
jl
iret
daa
and
popa
std
negb
mov
or
adc
push
cwtl
sub
push
hlt
add
and
lahf
cltd
jg
lahf
jb
xor
lods
test
mov
jbe
movsb
xchg
popa
xchg
xchg
loopne
outsl
sbb
mov
sub
test
test
test
in
in
ljmp
cmp
ffree
shrb
inc
fsts
dec
pop
fmul
pop
add
or
mov
pop
lock
out
ret
mov
pop
test
lods
inc
aaa
arpl
inc
inc
cmpl
pop
cltd
jns
pop
jp
pop
push
mov
out
xor
fcompl
test
shrl
andb
pop
lcall
movsl
test
out
cmp
xchg
push
fcoms
mov
xchg
xchg
test
jo
xchg
xchg
and
rcll
xorl
stos
shll
je
jo
js
add
push
sarl
test
xchg
jnp
cmpl
jo
test
ret
xchg
fstps
inc
and
mov
insb
loope
dec
in
mov
mov
inc
lods
xchg
fsubrp
dec
scas
mov
inc
sub
inc
repz
mov
test
mov
fsubrs
insb
cmc
cltd
sbb
nop
pop
fucom
loopne
daa
xchg
mov
and
addb
push
adc
mov
cmp
inc
sbb
or
mov
push
dec
and
loop
xor
dec
fsts
insb
jns
subb
dec
cmpl
hlt
fdivrl
lahf
dec
mov
stos
xchg
ja
jo
jo
sub
outsl
pop
pop
push
xchg
insb
cltd
cmpsl
jle
pop
or
fistpll
sbb
addr16
aas
pop
js
push
outsb
insl
cltd
sbb
pop
cwtl
adc
xor
mov
orb
jnp
jge
out
ljmp
loope
sti
orb
pop
sbb
aas
cmpsb
adcb
lcall
sub
jge
jle
mov
xor
data16
lea
xor
popfw
mov
aas
rcl
int
push
xor
sub
xor
xor
and
and
and
orb
push
and
xor
adc
outsb
faddl
lea
and
mov
mov
lods
call
jp
pop
cli
in
leave
ljmp
out
call
test
leave
fcmovb
jg
mov
jl
sub
xchg
call
inc
mov
nop
cmpsl
xor
sub
outsl
xor
test
fs
xchg
cmp
std
imul
xchg
jl
icebp
mov
in
negl
faddl
add
xchg
je
and
or
cltd
xor
jl
mov
cmp
xor
movsl
xor
add
xor
inc
fs
cmpsb
mov
push
lcall
lahf
xchg
push
cmp
je
imul
pop
out
xchg
out
sarl
iret
pushf
sbb
jge
js
xchg
test
inc
cltd
int
shrl
fwait
jmp
out
lods
loope
or
jge
es
jns
lcall
rclb
out
lcall
loopne
jl
add
rcrb
jns
inc
push
sub
jl
mov
xchg
in
xor
jp
in
into
outsb
je
xchg
cmpsb
ret
jge
mov
sub
shl
pushf
int
ljmp
dec
mov
ljmp
mov
or
sbb
dec
fwait
dec
sub
mov
sbb
or
mov
mov
test
cli
jnp
jmp
imul
jae
jnp
shlb
jl
out
mov
xchg
xchg
dec
xchg
aam
push
pop
int3
orl
addr16
sahf
lahf
shll
outsl
pop
and
popf
pop
cmpsb
pop
imul
inc
push
cmc
pop
inc
adc
xchg
jecxz
out
cmp
mov
lcall
movsl
scas
mulb
xchg
or
mov
or
xor
push
sbb
outsb
and
jno
int
and
dec
xor
fnstcw
das
adc
jo
mov
clc
pusha
xor
jne
adc
int
xor
sbb
fcompl
int3
mov
cmpsb
or
cs
lret
cmpsb
jb
sbb
fwait
push
push
pop
pusha
mov
mov
xor
jmp
xchg
fs
mov
faddl
cld
jp
fs
mov
inc
out
push
fwait
pop
cmpl
pop
xchg
inc
cs
pop
loop
bnd
xchg
shlb
xor
scas
pop
mov
push
jecxz
push
or
jns
sbb
push
cmp
dec
lods
pusha
stos
jns
cmp
cmpl
xchg
lcall
or
pop
test
dec
mov
std
imul
bound
xor
xlat
mov
add
and
pop
in
add
js
jp
ss
inc
or
negb
repz
mov
out
jns
lcall
clc
or
cmp
cmp
loopne
xor
leave
adc
fisttps
push
clc
or
cmp
push
pop
ja
imul
mov
push
cmp
and
sbb
xchg
and
jbe
mov
ja
add
xchg
inc
mov
adc
pop
lcall
or
test
lcall
push
pushf
in
fwait
cmp
xor
jg
push
insb
push
nop
or
int3
push
jbe
cwtl
xor
fnstcw
nop
pop
push
lds
sub
js
lcall
insl
pusha
xor
sub
cmp
xor
add
inc
cmpsb
dec
subb
or
into
sahf
xor
shll
sub
mov
test
jne
mov
push
je
pusha
inc
je
jns
je
lock
test
je
test
je
cmp
ss
adc
outsb
call
add
lcall
enter
sahf
jae
ja
jae
dec
pop
ds
cmpb
inc
jb
popf
lcall
dec
push
dec
in
mov
jb
shl
sub
pusha
xorl
dec
jno
daa
inc
fisubrl
pusha
ljmp
mov
mov
jae
xchg
fcomp
subb
add
sahf
jo
mov
push
xchg
jae
cmpsl
sub
mov
add
lcall
in
outsl
ret
fsubrl
outsl
push
js
outsl
aas
or
ret
outsl
sbb
outsb
push
mov
stc
pop
imul
mov
insb
jns
test
insl
fnstsw
iret
insl
sub
jnp
insl
inc
pop
mov
jno
pop
in
xlat
imul
cmp
ja
sbb
sub
cwtl
fstpl
bound
jmp
xor
cltd
pop
xchg
mov
jo
jno
jo
test
fsubp
fs
inc
or
out
test
lds
pop
loopne
mov
jl
mov
ret
and
ret
sti
arpl
popa
xchg
int3
jp
mov
lods
pop
arpl
fcompl
mov
stc
imul
jl
nop
mov
adc
mov
mov
insb
cwtl
hlt
ja
fildll
fs
out
and
loopne
daa
popa
mov
wbinvd
out
je
in
mov
mov
cwtl
inc
pop
js
and
jp
xchg
aam
xor
shll
push
mov
dec
dec
je
fmull
flds
rcrl
pusha
xor
enter
pop
xlat
pusha
aam
test
lret
pop
cltd
call
pop
dec
adc
bound
cmp
dec
fwait
mov
pop
cmc
outsb
fucomp
leave
mov
mov
int
adc
lahf
imul
inc
sub
lcall
xorl
jge
fwait
cmp
js
xor
xchg
sbb
sub
adc
sbb
pusha
adc
sbb
test
adc
hlt
arpl
mov
ja
sti
iret
pushf
or
int
sbb
dec
insl
pusha
push
push
lds
aad
lcall
daa
nop
mov
sbbl
jle
hlt
mov
insl
and
in
imul
clc
inc
adc
mov
pop
add
fisttpll
inc
clc
xor
fs
pushf
sarb
lret
cmp
ja
aam
xor
lcall
mov
arpl
adc
push
fwait
jg
and
mov
in
out
xchg
shrb
push
lea
daa
data16
pop
data16
jns
enterw
test
data16
jae
insl
scas
jnp
gs
dec
in
fldenv
push
jg
in
ficomps
jle
insl
jbe
jns
xchg
sbb
xchg
sbb
fs
iret
int
jns
fs
fs
jnp
fs
mov
out
adc
fstpl
xchg
cmp
lret
xchg
or
bound
cmpsb
lret
xchg
neg
mov
into
fbstp
jns
popa
mov
lret
jns
popa
mov
lret
inc
sahf
sbb
lahf
in
jmp
in
cld
ficoms
imul
pusha
shrb
or
ja
addr16
push
cmpsb
xchg
fisubs
ret
aaa
pusha
sub
mov
inc
pop
outsl
mov
fadd
lods
jns
pop
mov
pop
in
mov
pop
ja
insb
pop
mov
in
push
pop
in
pop
insl
scas
jnp
pop
push
mov
and
sbb
aas
dec
incl
pop
stos
push
pusha
mov
cmp
fwait
je
mov
cmc
mov
pop
sahf
cs
inc
lahf
pop
xchg
cmp
fsubrl
pop
and
lcall
les
scas
stc
add
lods
jns
sahf
in
pop
test
mov
call
xchg
xorb
inc
add
test
test
xchg
enter
rorl
xor
xchg
xor
popa
inc
xor
adc
insb
fidivl
mov
stos
dec
in
and
into
jnp
pop
test
sbb
jns
ret
mov
jmp
mov
dec
jns
orl
dec
push
dec
insb
pop
cmp
scas
pop
and
jecxz
xor
aam
into
pop
test
inc
sub
pushf
incl
sub
and
inc
sbb
pop
mov
jno
sbb
adc
adc
pop
insl
cmc
jg
mov
cwtl
mov
and
xchg
add
or
jbe
stc
movsb
out
cmp
loopne
jb
mov
xor
shrl
sbb
pop
stos
cmp
fnstenv
mov
dec
clc
test
or
jl
mov
mov
out
aad
test
pop
mov
fcompl
outsl
mov
cld
jge
out
std
fs
mov
and
jno
push
or
push
testl
lahf
pop
mov
pop
addr16
aaa
or
ffree
push
icebp
jcxz
insb
sbb
sbb
pop
cmp
sbb
pop
push
mov
dec
push
push
cltd
sub
nop
pop
sbb
in
xor
push
loope
dec
mov
mov
popl
adc
fs
xlat
pusha
enter
popf
lods
je
pop
jb
jno
int3
sub
cmpsl
push
ret
mov
stos
out
mov
loopne
push
call
mov
fwait
mov
pop
cs
test
xor
gs
and
pop
mov
push
imul
pop
add
fsubrs
pop
or
jno
int
jbe
mov
push
gs
ss
jae
jbe
or
sub
movlps
aam
fs
fstl
push
sub
mov
js
les
subb
sarb
push
dec
das
add
sti
push
jne
leave
jg
add
or
jnp
in
mov
int3
pop
bound
mov
test
jns
or
pushf
addb
jo
arpl
xlat
pusha
test
nop
xor
pcmpeqb
imul
jns
loop
jae
adc
adc
test
mov
mov
cmpsl
pop
cmp
jmp
jl
or
lret
subl
jg
fdivrl
loopne
mov
adc
pop
pop
fwait
pop
mov
cmp
inc
inc
orb
xor
pop
pop
lahf
lret
dec
jo
jnp
sub
imull
push
cmpsb
cli
or
movsl
push
pop
dec
lahf
ds
cmp
rclb
xlat
sahf
push
jne
lahf
icebp
fistpl
icebp
imul
dec
and
arpl
ret
ja
in
mov
cmpsl
int
es
mov
aaa
sarl
addr16
push
jb
push
ja
frndint
scas
fdivr
ss
popa
fmulp
add
fstpt
aas
data16
bound
arpl
jnp
adc
pop
mov
bound
je
add
pop
ret
repnz
std
js
scas
test
xchg
aam
nop
out
jmp
jmp
cwtl
nop
mov
cltd
arpl
mov
pop
ljmp
cli
rcr
inc
arpl
and
pusha
enter
pop
lahf
sub
enter
mov
sub
xor
adc
xchg
add
rolb
repz
fstpl
xor
jnp
jns
std
sub
fcmovne
test
pop
or
cmp
lock
addr16
insb
mov
ljmp
imul
pop
sahf
fmul
jbe
je
jb
js
sbbl
add
pop
dec
pop
pop
jo
jmp
dec
mov
das
popf
in
pop
or
jg
int3
push
add
sub
jo
cmpb
inc
lea
test
fnsave
pop
pop
frstor
in
lock
push
mov
ret
data16
add
insb
jl
js
xorb
fimull
xlat
loopne
mov
lcall
pop
mov
dec
fldl
mov
pop
in
clc
popf
in
insl
popf
inc
or
pop
repz
mov
into
shlb
or
rolb
dec
pop
sub
js
xchg
pop
inc
push
xor
subl
out
outsl
out
popf
dec
xor
pop
loop
mov
and
push
stc
or
jno
int
pop
sarl
inc
popf
pop
ja
arpl
test
fsubrs
mov
xor
jnp
inc
sbb
fstps
jnp
sub
jo
mov
xchg
sbbb
pop
loope
pop
into
inc
je
dec
pop
inc
lahf
popf
outsb
mov
xchg
dec
dec
or
dec
jecxz
mov
aad
adc
out
mov
data16
insb
sub
das
mov
mov
mov
pushf
addr16
dec
aam
jno
jo
ret
inc
mov
cmpl
mov
mov
add
mov
inc
jg
daa
test
sub
int
sarb
loopne
inc
dec
popf
sub
loop
pop
fsubl
addb
adc
jmp
les
fisubrs
fsubs
jb
pushf
mov
cmp
mov
pop
sti
ret
pusha
cld
pop
jg
stc
jmp
adc
jge
push
loop
out
cltd
test
rolb
lock
mov
js
ja
pop
fbld
hlt
aaa
mov
push
inc
daa
sub
fisubrs
pop
loop
fdivr
test
loopne
push
jo
lret
ror
rcrb
inc
js
pusha
inc
gs
sbb
inc
adc
mov
cwtl
adc
push
xor
and
lret
pushf
data16
mov
out
cltd
lcall
sbbl
xor
cmpsb
push
add
test
push
add
pop
std
mov
jle
imul
movsl
fistps
jp
jo
pop
lea
sbb
js
push
jl
push
push
push
sbb
pop
arpl
js
pop
imul
outsb
outsb
sahf
pusha
sti
mov
fbld
test
or
insb
movsb
jp
loopne
ret
popf
scas
xor
inc
cmp
dec
xchg
inc
and
insb
pop
pushf
lahf
mov
inc
sbb
mov
mov
xchg
jb
mull
je
xor
ret
out
add
mov
in
in
jb
ret
sbb
les
jo
jb
test
fmul
lret
js
loop
pop
mov
xor
loop
xor
pop
outsb
imul
repnz
cmp
mov
in
jno
mov
fsub
mov
mov
scas
mov
inc
mov
mov
insb
sub
mov
mov
xchg
and
insl
fsubrs
jg
jo
in
int3
jnp
push
mov
mov
ret
mov
cmp
mov
imul
jo
lahf
jl
mov
and
fwait
int3
loopne
inc
fwait
data16
movsl
je
data16
loopne
insb
jecxz
js
pop
popf
pop
mov
xchg
jae
cs
das
call
subb
push
lcall
outsl
test
scas
mov
push
sbb
ljmp
stc
mov
enter
cmpsl
mov
imul
arpl
jmp
jnp
gs
jmp
movsl
test
leave
mov
imul
xchg
insb
pop
adc
cld
insb
rcll
call
lods
popf
lods
jno
scas
jns
cltd
lret
fwait
addr16
lret
or
ljmp
adc
cmpsb
lods
fst
fidivl
xor
inc
rolb
adc
js
out
push
jecxz
cwtl
jo
sub
pop
hlt
sbb
cmp
push
lcall
and
les
js
into
sbb
dec
inc
in
jo
js
pop
dec
fisttpll
in
je
data16
push
pop
inc
jae
fdiv
jno
inc
int
jo
inc
fsubrs
dec
sbb
les
cs
mov
loop
andl
fwait
push
clc
dec
xor
and
jmp
je
pop
xor
push
push
loope
addr16
andl
pop
pop
imul
sbb
jb
bound
in
fcoms
jge
pushf
lahf
add
mov
sub
and
in
sbb
ds
ds
scas
pusha
sub
pop
cmp
leave
sahf
jmp
or
loope
insl
or
pslld
aad
pop
daa
in
pusha
jae
adc
jnp
cmc
jmp
and
fstpt
iret
pop
mov
pop
lret
outsb
mov
clc
aas
mov
and
stos
jns
insb
scas
lea
cmp
arpl
fnstcw
mov
pop
jl
cmp
in
in
mov
iret
jne
push
pop
int
jecxz
scas
dec
push
pusha
inc
add
addr16
sahf
push
mov
pop
xchg
int3
lods
scas
inc
mov
jecxz
mov
fsts
cmpsl
outsb
mov
mov
insb
in
gs
jo
ljmp
sbb
mov
jne
out
mov
sbb
jnp
sbb
push
sub
mov
pushf
movsb
jp
jo
in
scas
or
jecxz
and
sub
adc
js
cmp
call
and
inc
push
adc
mov
cmp
pushf
loopne
shlb
notl
insb
mov
jl
outsl
fs
jo
arpl
shlb
push
fisubs
xchg
int
adc
inc
mov
or
lcall
imul
push
mov
inc
push
addr16
fldenv
pop
push
out
cmp
sbb
test
mov
sub
sbb
push
pop
xchg
mov
add
loop
mulb
pop
icebp
pop
les
pop
xor
pop
mov
inc
popf
mov
movsb
xor
pop
pop
sbb
or
int3
data16
ja
xor
je
popa
jo
ficoml
in
jecxz
lcall
jge
jge
test
stc
xchg
cmp
sub
sbb
pusha
jg
mov
push
inc
sbb
sub
and
ljmp
shll
xor
mov
fadds
xchg
outsb
jno
push
imul
ja
mov
push
jge
jp
aam
repnz
js
loopne
test
sub
outsl
outsl
mov
orl
outsb
add
stos
fmuls
aad
mov
shll
outsb
and
call
fcoms
pusha
pop
loopne
loop
xchg
dec
jo
aam
call
mov
scas
cmp
push
push
int3
xchg
jp
lds
sbb
aam
jne
adc
fisubs
addl
push
lret
sbb
cwtl
xlat
aad
fstpt
dec
jecxz
int3
mov
sbb
xchg
sbbb
cmp
nop
pop
in
pusha
test
dec
sub
imul
jbe
push
scas
negl
pusha
in
sbb
mov
loope
pop
mov
mov
jl
ficoml
and
loope
popa
mov
jnp
int3
lods
mov
addr16
fidivs
pop
in
popa
or
xchg
mov
jl
stc
test
stos
bound
pop
mov
loop
stos
shlb
insl
xchg
cmp
or
jo
bound
push
mov
sbb
mov
jge
jge
jnp
and
xchg
adc
and
sbb
scas
mov
mov
pop
add
gs
inc
push
xor
test
lret
mov
and
adc
mov
inc
and
sbb
enter
push
clc
int
jecxz
sbb
jmp
mov
into
loopne
ljmp
cmc
mov
stos
inc
popf
mov
es
or
aam
mov
fidivrl
xor
mov
jl
jno
stos
scas
fwait
xchg
push
mov
js
push
mov
movsb
pop
nop
call
push
leave
adc
mov
xchg
mov
mov
stos
imul
fiadds
ds
adc
adcl
in
jo
pop
outsb
out
mov
popf
fmul
addb
fimuls
cwtl
cmpsb
outsb
add
andb
gs
push
xchg
fsubs
sahf
js
jle
dec
bound
jo
fdivs
dec
dec
cs
in
pop
enter
dec
lcall
jns
mov
addr16
shl
loope
xchg
fildl
andb
lods
pop
sbb
in
pop
cmpb
pop
lret
push
je
hlt
js
idivl
in
sbb
lds
in
xor
jo
jb
sbb
and
or
pop
je
inc
pusha
hlt
popa
adc
loopne
dec
std
ljmp
mov
ljmp
enter
shrb
sahf
cli
pop
int3
test
and
mov
and
mov
push
and
pop
pop
jg
nop
jecxz
pop
mov
xchg
or
mov
xchg
mov
mov
add
ret
jp
dec
out
mov
lret
arpl
inc
subl
sub
aaa
push
ror
mov
fs
movsb
lock
jae
aam
mov
insb
inc
in
or
fistpl
fsubrs
dec
cmp
mov
pop
and
lcall
jecxz
mov
pop
bound
mov
adc
mov
fs
stos
sti
shlb
mov
cmc
jmp
jecxz
mov
out
fisttpll
add
iret
js
jle
push
inc
jmp
js
xchg
sbb
mov
or
mov
nop
mov
xor
fidivl
bound
mov
out
lcall
cmp
loopne
jg
xchg
lcall
push
mov
lahf
jo
arpl
lods
xor
imul
push
loopne
lcall
int
bound
cmc
push
mov
xchg
dec
mov
inc
mov
pop
xor
gs
push
inc
in
push
out
or
lock
mov
insl
cmc
mov
xchg
sub
imul
xor
lret
pop
mov
dec
xchg
fs
xchg
and
cwtl
shll
ret
cmp
ret
push
cmp
cltd
int3
gs
in
adc
sub
loopne
push
inc
roll
arpl
popa
push
popa
negl
out
and
xchg
pusha
mov
out
cld
mov
out
dec
out
or
jo
stos
sbb
xchg
jle
insb
adc
xchg
mov
insb
add
pushl
lcall
cld
cli
xlat
call
jl
arpl
push
lret
out
mov
pop
pop
sbbl
inc
push
icebp
flds
pop
sbb
push
std
push
mov
push
pusha
movsl
pop
pop
scas
inc
xchg
out
imul
push
cmp
pop
cmpsl
mov
inc
aam
lret
test
fs
pop
lret
pusha
or
rcrl
xchg
adc
xchg
aas
cld
outsb
dec
mov
lret
mov
into
in
sbb
xchg
sub
outsb
sbb
aad
loopne
xchg
insb
cwtl
mov
or
dec
pop
mov
mov
test
test
jns
aas
hlt
jo
fistl
ss
cltd
push
imul
dec
cli
mov
fs
insb
dec
sub
mov
fbld
push
sbb
into
aad
outsl
es
les
scas
jl
mov
dec
pop
fs
lods
shrl
adc
imul
daa
inc
subl
pop
in
sub
gs
sahf
xchg
clc
or
lea
fnsave
mov
stos
pop
mov
movsl
repnz
fisubl
fcomip
pop
dec
cmp
addr16
ret
out
mov
addb
xor
imul
dec
repnz
scas
es
insb
in
cmp
push
mov
sbb
cli
cmpsb
pop
fs
scas
jecxz
int
into
scas
bound
mov
cmp
or
dec
or
insb
test
imul
push
int3
pusha
scas
push
add
mov
das
adc
push
dec
icebp
or
in
loopne
pop
push
leave
mull
js
mov
rorb
addr16
adc
nop
and
sbb
orb
pop
shlb
mov
cmp
lcall
push
inc
cmp
test
or
cltd
dec
adc
sti
xchg
in
xorb
jecxz
pop
mov
call
sub
fnstenv
push
lahf
mov
pop
jae
pushf
mov
movsl
ja
fldcw
sbb
ret
add
std
ljmp
pop
mov
pop
xchg
xlat
pusha
cwtl
inc
js
cltd
mov
mov
gs
xchg
jl
mov
daa
sbb
push
ljmp
mov
lods
inc
adc
out
lcall
jp
or
push
mov
sbbl
ss
imul
test
sbb
push
jo
pop
sbb
jp
int
jo
scas
mov
in
jo
push
xchg
cs
ret
jo
mov
imulb
rolb
insl
jmp
xchg
push
fistl
in
xchg
sbb
add
pop
mov
pop
pop
xlat
push
popa
and
stos
xchg
mov
xchg
jns
in
mov
pusha
jp
cmp
inc
mov
xor
mov
shrb
shl
sub
dec
scas
jns
stos
stos
inc
xor
cld
mov
movsl
push
xchg
xor
out
sub
sbb
inc
mov
cmp
inc
push
pop
test
sub
sti
mov
test
pop
dec
mov
jle
popa
pop
jbe
jge
cmp
cmp
test
ss
sti
jl
cwtl
in
aad
cwtl
mov
test
dec
mov
lahf
xor
lcall
mov
adc
popa
pop
xchg
mov
fldl2t
pusha
or
in
test
pop
xor
dec
test
js
mov
jns
popf
xchg
sarb
sub
lret
push
and
jp
and
pushf
insb
adc
movsl
cmp
int3
dec
dec
popa
aad
fildl
mov
and
outsb
inc
push
dec
xor
fwait
add
mov
cmp
cmpsl
mov
test
pop
sahf
push
sub
mov
adc
popf
add
data16
stos
ret
push
jmp
outsl
sbb
enter
idivl
pop
in
lcall
or
gs
bound
jbe
push
dec
test
insb
inc
in
jle
jle
popa
xor
add
pop
mov
mov
ficomps
imul
bound
and
arpl
sub
pop
jge
ss
jno
and
scas
loop
push
or
pusha
enter
push
imull
or
fs
mov
xchg
fcoml
mov
sti
es
and
aad
push
test
mov
imul
dec
sets
insb
mov
test
dec
inc
pop
xchg
mov
jnp
lret
test
mov
inc
sbbl
les
sbb
inc
xchg
jp
pushf
sub
pop
inc
int3
data16
xor
mov
jb
adc
int3
shrb
popa
dec
jge
test
test
arpl
sbbb
sahf
subl
adc
mov
sub
js
xchg
notl
or
popa
sub
in
fists
jp
xchg
shlb
arpl
jp
cmp
lea
cmpsl
sub
repnz
pop
nop
sbb
bound
loop
push
or
mov
test
test
jp
sbb
outsb
cmp
nop
fcompl
imul
push
jge
loop
cmpsb
js
and
cltd
addl
push
sub
xchg
dec
out
outsb
rolb
sbb
and
jns
mov
shrl
fldln2
inc
sub
sbb
jno
int
mov
pushf
pushf
outsb
sbb
iret
cs
lahf
int3
mov
rolb
popf
fldl
dec
cwtl
or
mov
cltd
jnp
push
andl
add
pusha
xchg
call
xlat
mov
cmp
lahf
inc
add
push
jge
cmp
into
out
fsubrs
scas
jns
jns
sbb
pop
or
jo
inc
addl
adc
mov
lret
shll
cmp
mov
jmp
dec
imul
loope
mov
loopne
and
test
xor
and
push
mov
daa
mov
nop
loope
stos
sub
fbld
cwtl
sub
fwait
push
loopne
xor
jmp
in
leave
sbb
into
lret
fucom
sub
mov
jns
and
andl
pop
push
mov
fs
int
je
cltd
pushf
shl
xchg
fistpl
jle
aas
loopne
adc
jl
adc
imul
xor
jnp
out
lds
rcll
test
fstpt
pop
fmul
push
int
cmp
push
or
push
ss
clc
cmp
sbb
pop
rcl
ds
fmull
stos
and
les
popa
cmpsb
xchg
ss
fsts
inc
push
rcrb
insl
jb
jae
repz
mov
inc
xor
insl
jns
jecxz
adc
imul
xchg
xchg
stos
rclb
test
mov
outsl
popa
mov
clc
jecxz
push
adc
stc
pop
inc
in
fcoml
pop
aad
or
addr16
insl
push
stc
imul
nop
mov
mov
test
inc
stos
push
inc
or
inc
pop
lcall
pcmpgtw
mov
test
jno
rorb
test
inc
mov
stos
mov
inc
add
pop
fsubr
or
and
js
imul
aad
rclb
adc
or
je
or
gs
cmpl
xor
mov
lret
or
test
jl
cmp
cmc
sbb
push
stos
cwtl
jae
xor
lret
and
sbb
cmp
ja
in
xor
xchg
ja
mov
mov
lret
or
pop
dec
bound
shlb
sub
into
mov
std
cmp
aam
push
inc
arpl
push
out
sub
leave
repz
mov
bound
lock
pushf
sahf
push
sub
rorl
popa
mov
sub
fsubrl
sub
mov
push
je
dec
test
xor
sub
dec
inc
fidivl
cmp
inc
gs
cmc
cmp
push
jno
ss
sbb
xchg
std
xchg
je
mov
pop
test
push
nop
fiadds
mov
daa
pop
inc
cwtl
cmp
lahf
sub
lcall
imul
jo
dec
notb
fdiv
call
scas
mov
movsb
mov
daa
xlat
scas
sub
jb
mov
jecxz
dec
pop
push
mov
out
xor
mov
js
pusha
lock
cmp
imul
sub
xchg
lock
movsb
sbb
jle
push
test
sbbb
filds
mov
push
das
cmp
cli
pusha
shrl
leave
cli
gs
jecxz
inc
lcall
jno
jno
or
das
and
jmp
bound
mov
rorb
scas
cwtl
inc
js
sbb
aas
or
dec
push
cld
into
cli
insl
sahf
sub
fsub
fisubl
pop
sbb
or
adc
int
rolb
and
je
mov
or
into
movsb
ljmp
in
lods
loope
ljmp
out
into
js
insb
inc
push
loope
cli
bound
in
push
mov
xor
jo
frndint
jae
push
jmp
stos
jecxz
inc
mov
cld
lea
roll
sbb
push
xchg
mov
fs
cmp
sub
sub
jae
push
push
add
mov
mov
mov
cli
sbb
mov
cltd
xchg
pop
pmulhw
adc
jmp
jg
insb
and
jmp
hlt
inc
fxch
or
in
mov
bound
stc
cmp
mov
mov
and
jbe
sbb
pop
mov
enterw
scas
loop
cltd
push
scas
pop
rorb
addr16
mov
cmpsl
sbb
inc
inc
xlat
das
or
lcall
test
mov
sub
add
dec
or
in
inc
jge
push
adc
inc
and
pop
jle
addb
pop
or
pop
xor
mov
test
in
dec
jl
pusha
and
pop
or
mov
int3
mov
in
inc
cmpsb
mov
push
xor
popa
outsl
das
loope
popf
movsl
incb
sbb
fstpt
adc
jmp
cwtl
fildl
jbe
outsl
mov
cld
dec
movsb
es
out
jl
mov
fidivl
test
js
inc
and
sbb
idivb
pop
js
mov
push
sub
jge
sbbl
je
mov
ret
inc
mov
push
mov
sahf
push
ret
inc
jge
in
push
rorb
dec
ljmp
pop
pop
loopne
test
stos
test
jg
mov
fdivl
test
js
sbb
xchg
test
test
ja
aam
push
pop
clc
int
ss
int
push
test
jns
xchg
pop
mov
push
pusha
pop
outsl
insb
bound
loopne
pop
test
inc
lds
jecxz
fisubrl
notl
sbb
sbb
xchg
push
jecxz
cltd
dec
and
insl
inc
xchg
adc
stc
push
jno
or
lods
loope
inc
add
mov
adc
inc
inc
insb
je
fstpl
inc
xor
push
and
jno
mov
das
xchg
push
adc
jno
out
add
mov
inc
arpl
mov
inc
test
loope
ds
bound
out
jbe
push
pop
test
rcrb
iret
xorb
push
push
test
fwait
inc
test
xorb
jnp
pusha
aam
xlat
push
into
cmpsb
ficompl
shl
inc
cmp
sarb
int3
jb
int3
xchg
bound
cmp
pop
mov
inc
out
and
push
loop
pop
xor
adc
jg
pusha
fwait
inc
mov
aam
mov
cli
push
mov
xor
inc
adc
sbb
push
cmpsl
dec
jbe
cwtl
int
lock
mov
shlb
jb
je
mov
gs
mov
cmp
cli
fwait
neg
jmp
xor
jno
cmp
dec
jp
jae
cmp
stos
sbb
mov
mov
xchg
mov
mov
cld
jp
or
inc
mov
ljmp
mov
cmp
jp
mov
and
jbe
jns
arpl
or
mov
inc
sub
ficoms
fmuls
into
aas
stos
jae
int3
mov
push
and
mov
push
push
test
mov
xor
xor
sti
test
pushf
popa
mov
in
dec
pushf
bound
out
push
pop
insb
inc
dec
lret
mov
clc
mov
mov
in
adc
outsb
mov
aam
cmp
clc
mov
mov
popf
push
inc
jp
add
push
lahf
cmp
mov
aam
in
cltd
and
sub
insl
fdivrs
inc
rclb
lods
test
fldl
fdiv
push
imul
out
jle
jne
push
insb
mov
mov
fsubrs
jecxz
inc
ds
and
xchg
scas
cmpsl
in
xchg
and
out
jne
cmp
xchg
mov
jae
popl
jg
sbb
jle
xlat
pop
mov
lods
leave
pushf
and
ja
orl
addr16
sbb
test
mov
xlat
notb
ss
and
enter
les
fcoms
add
or
shlb
in
cmpsb
lcall
sub
test
inc
popa
jbe
test
je
bound
call
test
sbb
inc
popa
push
popf
dec
jp
not
cmp
mov
ljmp
shlb
pop
insl
inc
or
stos
je
inc
icebp
call
out
dec
mov
dec
jl
inc
fstpl
lcall
sub
ror
adc
cld
cmp
mov
xor
lahf
dec
jl
call
scas
mov
into
shrl
in
jge
insb
jmp
jo
popa
je
mov
mov
adc
lds
cmpsb
fs
xchg
sbb
imul
ja
aam
arpl
stos
xor
mov
in
ror
ret
imul
xor
pusha
cld
adc
sbb
dec
cwtl
fldt
mov
inc
out
cld
adc
pop
jge
clc
or
cmpsb
shl
mov
call
xchg
popf
out
jno
lcall
outsb
mov
enter
loop
inc
jo
xchg
push
ret
fstpt
rolb
mov
inc
roll
jnp
jns
xchg
push
je
insb
loope
imul
jns
loopne
adc
stc
int3
jno
jg
mov
jp
xchg
xor
nop
ret
scas
imulb
add
out
imul
mov
sbb
cmp
cld
cwtl
mov
call
ret
in
pop
jg
fucom
jno
dec
cld
cwtl
lods
sbb
test
je
sbb
lock
cmc
les
push
js
std
pop
mov
jnp
pusha
scas
inc
lods
imul
xchg
cld
mov
inc
test
out
add
sub
sbb
jns
sti
sbb
leave
mov
fdivrl
mov
sbbb
repnz
scas
jbe
iret
lods
jge
and
test
cs
insb
push
paddw
call
or
cmpsb
insl
xchg
and
mov
movsb
jmp
cmp
scas
out
nop
jno
mov
sub
lret
pop
mov
loopne
pop
clc
or
ljmp
cltd
adc
xorl
es
inc
xchg
mov
mov
mov
jns
pop
addr16
das
mov
sar
shrb
pusha
cmp
icebp
fmulp
cmp
fsubl
xlat
imul
sbb
in
mov
rclb
lds
js
pop
xchg
loope
adc
aam
mov
and
mov
popa
jo
xor
shlb
int3
ss
in
inc
inc
xor
xchg
pop
jae
pop
jb
cmpsl
notl
cmp
je
imul
xchg
outsb
jecxz
ret
jne
gs
push
or
aam
stc
cmpsb
xlat
pmulhw
sbb
aam
popa
and
lahf
lods
or
mov
cwtl
mov
fsubr
push
cmpsb
hlt
and
sub
ds
into
movsl
pop
sub
or
pop
inc
and
std
jns
test
cmp
test
pusha
outsl
aam
sub
mov
ret
mov
pushf
sbb
mull
xchg
mov
and
aaa
sub
dec
pop
aam
ret
push
sbb
push
jns
fisttps
cmp
sub
add
mov
imul
iret
fmuls
test
stos
sbb
adc
imul
in
cmp
shrb
test
nop
lods
inc
push
shlb
insl
sahf
pop
in
mov
pop
adc
pop
push
popa
in
rclb
repz
pop
rorb
lods
pop
cmc
das
xchg
dec
xchg
cmpsb
sub
in
inc
gs
mov
pushl
int3
mov
or
data16
mov
ret
mov
mov
rol
cwtl
pop
dec
ljmp
inc
cmp
and
mov
pop
ljmp
mov
cmp
fcoml
xchg
into
rolb
call
flds
inc
ret
mov
add
stos
inc
dec
addr16
popf
inc
jg
int3
jmp
in
dec
or
addr16
mov
inc
loopne
mov
ja
adc
sub
faddp
in
xchg
xchg
movsb
hlt
out
jp
sahf
test
push
dec
sbb
add
sahf
lods
mov
je
lahf
jbe
rol
cmp
in
xor
and
xchg
popl
add
mov
cld
cmovs
and
sub
push
fmull
xorb
inc
ror
ret
outsb
in
mov
lcall
jo
sub
rolb
int3
jns
pop
jmp
hlt
fildl
xor
fwait
pusha
hlt
jp
pusha
test
cmp
leave
imulb
jl
mov
test
rep
and
jno
icebp
les
or
jbe
sbb
mov
sahf
jl
test
pop
jecxz
js
xchg
and
push
cld
ds
adc
enter
dec
ret
fcompl
lahf
add
es
jl
fidivrs
popf
shr
xor
test
in
in
ds
xor
stos
add
mov
out
lcall
cmp
cmp
push
xchg
and
pop
cmpsb
loope
mov
jg
loopne
call
adc
scas
mov
sbb
mov
int3
loop
fmull
popa
or
loopne
iret
addl
pop
bound
xor
pop
mov
aam
push
xchg
mov
cld
data16
icebp
stos
adc
rorl
and
and
adc
xor
fisubrl
mov
mov
mov
fwait
ret
pop
pop
inc
dec
into
pop
dec
jno
dec
sub
es
pop
mov
mov
xchg
sbb
int
ss
mov
bound
imul
cwtl
clc
cwtl
or
jecxz
jb
stc
mov
cltd
mov
mov
insb
outsb
enter
sbb
fstpl
mov
aaa
stos
cmp
test
xlat
jno
inc
mov
ret
pop
inc
arpl
imul
sbb
rcrl
dec
pop
cmc
subb
cld
fwait
mov
daa
insb
mov
mov
test
add
bound
sbb
test
jae
push
push
adc
jmp
pop
pop
mov
test
xchg
jbe
in
rclb
lock
add
mov
jnp
int3
out
jp
out
imul
lds
fs
mov
js
or
js
inc
mov
sbb
les
push
sbb
jecxz
mov
inc
imul
leave
aaa
insb
movsb
movsl
adc
dec
or
insl
lods
jl
and
lea
call
inc
mov
insl
nop
sahf
pusha
and
pop
call
pop
cmpsl
jns
scas
lret
insb
fimull
sbbl
jnp
enter
jge
add
scas
scas
ficoml
fs
pop
mov
dec
inc
mov
pushf
int3
nop
or
inc
pop
inc
pop
call
int3
ficoml
xor
jo
nop
push
jp
sar
add
jle
stos
jne
push
sbb
jg
jge
negl
xor
and
fimuls
push
cmc
pop
sub
insb
mov
xchg
aad
sbb
js
mov
repz
daa
fmuls
pop
jge
arpl
jae
pop
inc
ds
pop
sbb
js
outsl
dec
test
test
mov
xor
xchg
xorb
sbb
and
pop
cmp
repnz
lock
pusha
push
inc
mov
jno
fldcw
xchg
xchg
loopne
je
into
popf
add
sahf
lods
mov
test
lcall
jle
jp
pop
xchg
out
cmpsl
pop
loopne
pop
mov
inc
mov
stc
test
mov
ss
cwtl
fidivs
icebp
mov
lods
push
push
inc
sub
pop
popa
push
and
sahf
daa
ja
inc
js
pop
dec
xchg
dec
int3
cwtl
xor
mov
addl
adc
test
jbe
mov
cltd
or
jp
push
movsb
arpl
xor
js
push
ja
jne
testl
ret
sbb
mov
xchg
mov
jnp
pop
pop
cltd
pusha
jp
mov
fdivl
sub
pusha
test
mov
pop
lcall
adc
inc
pop
push
mov
cmpsl
test
and
add
and
pop
test
mov
leave
pusha
jl
test
popf
clc
xchg
movsl
lock
lds
pop
sbb
in
lock
push
cwtl
inc
dec
add
cmp
lods
cld
cmp
inc
test
imul
mov
mov
arpl
les
loopne
imul
lret
inc
mov
push
sbb
add
cmp
fnsave
bound
fsts
int
pop
loopne
mov
sub
mov
fwait
movsb
pop
mov
jge
mov
sarl
pop
fbld
loopne
call
imul
and
jnp
sbb
sbbl
stc
lods
sbb
pop
shrl
adc
sbbb
jp
mov
mov
sub
xor
mov
lods
js
mov
jae
jnp
test
push
jl
insl
pushf
sbbb
inc
inc
mov
mov
pushf
loopne
das
inc
das
cld
js
push
push
inc
jb
iret
in
cltd
loope
ds
jo
out
andl
fisttpl
or
test
addr16
xchg
inc
push
out
jp
inc
pusha
pop
mov
push
stos
cwtl
enter
xor
fdivl
popa
addr16
jae
sub
or
pop
inc
call
mov
test
or
enter
out
jo
stos
scas
inc
scas
inc
insl
shll
push
fsubs
adc
push
orl
add
dec
xlat
call
mov
push
sbbl
ljmp
addr16
jo
scas
adc
bound
sbbl
popf
inc
loopne
in
pop
xchg
popa
rol
mov
push
dec
out
imul
test
jl
fnclex
into
loope
test
into
cmp
gs
mov
push
xchg
jl
cmpsl
insb
idivb
nop
dec
movsb
mov
mov
ljmp
push
lock
imul
fbld
inc
push
mov
mov
xor
test
frstor
cli
pusha
mov
inc
std
xchg
xchg
lods
inc
aas
mov
adc
inc
sub
sbb
inc
ja
pop
sub
and
jp
je
jmp
lahf
pop
add
enter
mov
fcoml
inc
mov
in
popf
adc
loopne
sarb
dec
cld
fidivs
jo
jns
mov
push
insb
inc
mov
xlat
in
cmc
add
jns
sarb
mov
jecxz
cwtl
push
clc
mov
mov
sub
shll
mov
js
and
and
inc
movq
pop
loope
sbb
sub
subl
jno
outsl
mov
jno
xchg
sbb
sub
and
enter
repz
jnp
adc
loope
push
pusha
and
imul
cs
pop
dec
mov
arpl
mov
xchg
call
arpl
pop
mov
pusha
jmp
pop
mov
fdivr
outsl
jp
popa
lods
test
jnp
sub
in
movsl
std
xor
test
out
arpl
int3
fisttpll
sbbl
rcrl
mov
jecxz
pop
jge
add
shld
inc
ljmp
and
rorb
int3
in
mov
xchg
or
outsb
sarl
mov
jae
xchg
xchg
jp
je
mov
xchg
pop
lret
lret
push
insl
pusha
sbb
into
cmpsl
mov
lret
nop
not
xchg
ljmp
or
inc
fisubrl
aam
cmp
mov
popa
jo
dec
shlb
xchg
mov
mov
out
cltd
dec
inc
cmpl
sub
iret
movsb
dec
jo
pop
arpl
xlat
mov
popa
xchg
lods
int3
mov
cmpsb
lahf
xchg
push
std
and
outsb
add
mov
mov
je
dec
cs
sub
adc
scas
sub
loope
clc
pushl
fcmovu
push
mov
loopne
push
xor
mov
pushf
out
mov
xchg
mov
out
mov
aam
fidivrs
pushf
mov
pop
das
fildl
aas
arpl
es
fwait
push
push
mov
je
addr16
xchg
pop
and
dec
push
outsl
mov
jmp
jns
sahf
test
jp
push
iret
pusha
leave
divl
sub
push
push
loopne
int3
add
int3
sahf
add
mov
enter
loop
mov
lcall
cmp
scas
test
mov
or
jl
cltd
xchg
inc
adc
jge
rcll
or
mov
not
push
test
pop
adc
and
mov
pop
rorb
pop
test
js
sbb
das
pop
sti
fsubs
fdivs
add
hlt
lcall
sbb
loopne
jns
sub
fdivrl
sub
hlt
imul
dec
mov
imul
inc
sbb
push
mov
pusha
es
mov
cmp
jo
stos
call
mov
loopne
fstpl
es
push
and
gs
pop
push
jecxz
imul
xor
dec
push
sub
inc
sbb
outsb
cmc
imul
dec
inc
imul
and
xchg
mov
mov
add
dec
lcall
enter
je
imul
sub
fcoms
into
lods
stc
test
insl
cmp
pop
popa
int
adc
pop
mov
dec
cmp
loope
add
mov
lcall
into
repz
test
mov
mov
jne
lods
enter
jl
fdivs
cltd
cmp
lahf
pop
pusha
or
stos
or
scas
pop
jle
mov
repnz
hlt
jge
sti
mov
mov
loopne
fwait
adc
shrl
jnp
repnz
das
je
pushf
pop
arpl
adc
arpl
mov
and
pusha
cwtl
or
or
jnp
dec
roll
sbb
mov
dec
addl
icebp
addr16
aad
sbb
pop
pop
int
push
or
pop
xchg
push
out
cwtl
pop
loopne
cwtl
lods
inc
cmp
test
or
cwtl
sahf
inc
dec
inc
aam
rcr
test
mov
js
popa
mov
out
cmpsb
lock
add
cmp
cmp
sbb
pop
int3
xor
or
adc
sub
out
jge
test
mov
insl
xchg
xchg
push
pusha
imul
out
dec
push
add
and
jge
jmp
pop
stos
jns
mov
add
fs
mov
push
adc
int3
leave
jecxz
sbb
scas
js
fdivl
int3
add
xchg
dec
jl
enter
imul
jnp
test
cmp
call
fs
loopne
mov
jmp
and
gs
jl
jge
xor
push
test
int3
shrl
cvtps2pd
push
pop
stos
hlt
jae
bswap
test
pop
idivl
enter
popf
push
adcl
in
sahf
xchg
enter
data16
pop
fcomi
test
push
das
xchg
mov
sub
shll
or
dec
stc
mov
arpl
scas
inc
mov
push
leave
jns
insb
and
and
and
xor
push
xor
mov
dec
pop
in
fimuls
jge
dec
leave
in
lods
cmp
lcall
movsb
cmp
jmp
scas
sub
inc
loop
or
outsb
xor
test
test
pop
pop
or
bound
and
cmp
sub
xor
pop
in
sahf
dec
or
push
sti
add
mov
stos
gs
push
pop
divb
inc
insb
mov
cmpsl
mov
mov
fmull
mov
jo
jne
xchg
pusha
sahf
je
stos
scas
insl
or
repnz
test
in
repz
test
jbe
cwtl
inc
jl
sub
inc
cmp
mov
in
int3
aas
mov
sbb
xchg
js
out
data16
into
in
popf
test
inc
in
cmpsl
std
or
shl
in
sub
or
call
mov
ret
add
ret
inc
dec
push
stos
adc
ljmp
mov
movsb
test
stos
xor
movsl
in
cmpb
sub
dec
cmp
lret
pop
fisttps
test
stos
scas
cwtl
mov
inc
jmp
mov
jae
icebp
mov
fnsave
testl
dec
push
dec
pusha
scas
add
fadds
js
int3
mov
and
mov
inc
mov
stos
shlb
fcompl
call
and
in
lods
fldenv
xchg
clc
scas
cmpsb
int
stc
inc
jbe
xor
pop
sti
cmp
shl
js
sub
push
xchg
and
cmpsl
stos
pop
movsl
rolb
shrl
push
mov
popa
pop
mov
arpl
adc
pop
ds
pop
pushf
add
or
mov
push
add
lahf
jmp
test
jmp
hlt
cwtl
lret
add
out
push
fsubs
in
cmp
hlt
sahf
int3
or
mov
dec
lods
arpl
inc
pop
add
inc
cmp
push
pop
fsubrl
xchg
pop
cld
fldenv
out
mov
movsb
jnp
enter
inc
or
xchg
outsb
mov
pop
jp
mov
das
sbb
sbb
test
and
fs
xor
or
flds
add
adc
ja
jle
mov
xchg
setg
and
jmp
loop
jae
inc
mov
loopne
out
push
loope
dec
jne
sub
jmp
adc
jo
repnz
jmp
mov
mov
mov
ret
xor
mov
scas
mov
push
push
pop
push
divb
mov
scas
fisubs
jge
fst
in
loope
mov
and
out
push
pop
addl
xor
sbb
cmpsb
rclb
js
imul
insl
push
ret
sahf
scas
jo
loope
hlt
cmc
jecxz
data16
and
push
add
pop
pop
fcoms
js
mov
mov
or
adc
fnstcw
jae
stos
xor
fiadds
pop
test
mov
and
push
js
mov
movsb
jecxz
je
faddp
jae
sub
pop
xor
or
jns
fst
jecxz
mov
cmp
push
dec
xchg
xchg
imul
cmpsl
mov
flds
out
fldt
cmpsb
dec
inc
fs
hlt
pop
loop
xchg
jp
in
mov
scas
stos
imul
test
loope
inc
mov
aas
lds
mov
fstps
test
insl
dec
loopne
pop
jge
jnp
xchg
lahf
daa
pop
cld
je
sti
inc
cmpsb
mov
cmpsl
mov
stos
push
jae
cwtl
mov
out
cmp
sbb
sub
pop
inc
subb
sub
ret
push
jle
mov
lods
lcall
js
test
cmp
and
clc
xchg
push
jns
fadds
fdivrl
loope
jg
cmp
faddp
in
in
in
and
mov
into
inc
stc
mov
out
inc
sub
orb
push
mov
mov
rcr
pop
nop
ljmp
dec
jl
cmp
int3
pop
imul
scas
movsb
cld
dec
stc
out
mulb
push
adc
adc
fsub
aas
js
fwait
push
cwtl
pop
aam
scas
sahf
idivb
jae
xor
sbb
xor
sbb
fisttps
mov
push
mov
insb
adcl
jo
xor
sub
fnstsw
in
sub
test
icebp
and
fisubl
adc
dec
xchg
dec
cmp
pushf
sub
pusha
popa
stos
test
push
cmp
in
fs
jg
lods
sub
arpl
adc
insl
mov
dec
add
mov
adc
push
callw
push
je
andl
cwtl
stos
lods
stc
fistps
test
mov
inc
loope
mov
and
stos
sbb
or
jmp
push
push
mov
in
mov
movsb
test
jecxz
dec
cmpsb
pop
dec
shll
scas
and
mov
imul
push
lods
pop
cmpsb
jnp
into
insb
sub
pop
fidivl
mov
pop
sub
test
iret
sbb
jb
imul
sbb
adc
out
stc
sbb
xor
jmp
xchg
xlat
and
arpl
imul
nop
mov
adc
lahf
and
popf
mov
sub
imul
pop
sub
in
xor
inc
jns
pusha
mov
and
test
pushf
in
jns
mov
inc
ljmp
add
ljmp
push
add
cmp
mov
inc
pop
das
dec
into
popa
mov
pop
mov
stos
stos
test
mov
push
ljmp
loop
shl
sahf
test
lcall
dec
outsl
test
sbb
test
ret
pop
js
data16
or
push
and
int
test
shll
lahf
adc
lahf
test
mov
mov
ret
mov
sub
push
adc
cmpsl
xor
cmp
or
lcall
pusha
adc
je
in
sub
dec
loopne
cmc
sub
xor
pop
cmp
inc
inc
loope
xchg
cli
cwtl
cmp
xlat
mov
pusha
mov
je
cld
push
in
cld
sbb
adc
lock
loop
or
cs
and
fldt
das
or
out
shlb
call
jnp
push
arpl
xlat
mov
test
fs
lahf
mov
ret
repnz
cmp
sub
les
scas
enter
jns
xor
negl
push
clc
hlt
ficomps
mov
pop
ficomps
in
stos
mov
loopne
adc
out
jns
mov
jmp
pop
add
fisubrs
scas
xchg
pusha
xor
cmp
and
and
adc
push
pushf
ret
shll
in
ffreep
or
cld
addr16
out
xchg
pop
mov
cmp
xor
fstpl
fisttps
lods
sahf
cld
jns
loopne
cmp
ror
bound
loop
sub
dec
push
jns
mov
loopne
cmp
xor
js
add
add
fdivl
pushf
sahf
cwtl
sbb
pop
int3
jl
or
scas
cmpsb
js
cli
ror
out
fimull
jecxz
sbbl
scas
xor
test
jge
add
loope
les
outsl
jns
test
xor
add
mov
mov
sbb
neg
lcall
lcall
adc
test
pop
subb
push
jns
test
xchg
dec
lahf
push
mov
add
pushl
and
leave
mov
rolb
enter
adc
test
xlat
out
sbb
mov
jns
pusha
stc
or
adc
inc
fdiv
and
cwtl
mov
out
mov
pop
cmp
mov
cmp
loopne
dec
push
addr16
and
mov
xchg
xorb
or
hlt
mov
xor
push
ret
loop
cli
sbb
ret
jb
ljmp
jmp
lcall
jge
dec
and
shl
cmp
popa
or
imul
std
aam
cwtl
test
ficomps
push
inc
sbb
subb
sub
fmuls
je
lods
imul
dec
cmp
mov
hlt
movsb
push
and
das
dec
cmp
xchg
mov
lcall
xlat
out
cmpl
fsubs
sub
push
outsb
fwait
inc
fs
ficomps
sbbl
jne
call
push
pop
mov
fistps
ds
ds
xchg
jl
lds
sub
sbb
jp
mov
fnsave
je
jmp
or
jge
popa
xchg
dec
aam
clc
jecxz
loope
sbb
in
xchg
mov
adc
ss
in
push
mov
cmp
push
xchg
pushf
hlt
mov
jo
mov
fwait
xchg
aaa
fs
pop
xchg
adc
mov
in
push
jnp
xchg
and
insb
bound
mov
mov
movsl
call
mov
gs
popa
jp
in
push
add
imul
std
les
mov
mov
loop
clc
sub
or
popf
ljmp
outsl
shlb
lock
push
xchg
push
aam
inc
ret
mull
lret
aad
int
subb
int3
xlat
push
jo
xchg
sbb
in
test
jns
lock
int
sbb
add
mov
js
in
jo
aaa
jae
mov
push
inc
addr16
test
scas
pop
sti
push
loop
pop
cmp
int
popf
test
pop
sbb
sar
add
int3
cmp
mov
je
xorb
inc
xchg
lahf
xchg
xor
lods
mov
loope
popa
ret
fs
mov
adc
sub
ret
mov
mov
das
pushf
aas
xchg
inc
clc
push
loope
mov
mov
call
notb
adc
imul
leave
push
out
cwtl
ja,pn
inc
testl
fmulp
xor
mov
push
in
push
subb
pop
or
scas
les
stos
dec
mov
jbe
jbe
jae
dec
int3
jae
and
shlb
sbb
xor
int3
jo
adc
fcoms
sbb
mov
js
jl
addr16
jecxz
cmp
insl
jp
pop
mov
in
mov
lret
loopne
ficoms
fsubrl
bound
and
pop
add
sti
jl
jns
push
mov
addr16
pop
add
sub
pushf
jmp
jl
jp
imul
xchg
sbb
lret
shlb
add
jo
out
loopne
in
call
mov
clc
pushf
cld
mov
mov
dec
pop
jmp
fmuls
lcall
sbb
sub
pop
sbb
and
pop
and
sub
jge
bound
jmp
cli
sub
ljmp
lods
pop
outsl
into
sbb
lret
mov
inc
lcall
xchg
out
sarl
add
mov
stos
scas
mov
shrl
leave
push
cmc
add
cmpsl
mov
and
or
leave
in
mov
orb
cltd
xchg
in
jl
jl
pop
hlt
and
repz
ret
ljmp
adc
push
in
jbe
popa
mov
aaa
insb
dec
outsb
cmpsb
outsb
or
aas
jg
aam
in
mov
mov
pop
mov
jns
je
out
dec
enter
out
and
mov
lock
mov
cltd
adc
inc
push
test
mov
not
movsl
fidivrs
inc
call
je
in
sub
arpl
pop
lods
inc
and
adc
mov
inc
inc
adcb
jne
inc
pop
push
inc
mov
lcall
cmpl
push
shr
push
or
cwtl
pop
jns
xchg
mov
jp
pop
into
pusha
sbbl
dec
inc
mov
and
roll
cmp
mov
lret
insb
or
xchg
pop
cld
enter
ret
add
mov
mov
add
add
insl
cwtl
jmp
or
inc
jmp
insb
xor
nop
dec
pushf
cmpl
inc
or
hlt
and
fdivrl
rcr
lcall
jnp
jmp
in
aad
out
daa
xorl
dec
push
inc
fs
mov
bound
mov
in
xchg
push
je
jns
mov
jmp
popf
xor
pusha
ret
sbb
movl
orl
les
mov
push
dec
jge
inc
sub
pop
das
lcall
adc
aad
add
mov
dec
pusha
pushf
sub
ret
jns
outsb
inc
movsl
cltd
nop
repz
xchg
pushl
std
lret
mov
cld
pop
pusha
sub
xchg
sbbb
push
or
jle
mov
das
orb
out
jno
jnp
test
cmp
das
and
dec
fstps
mov
inc
jl
loope
sbb
cli
in
jo
loopne
and
inc
xor
mov
ret
in
pop
jg
out
add
push
inc
icebp
lahf
push
jle
test
in
imul
call
or
push
bound
neg
xchg
daa
xor
lods
and
and
xchg
xchg
sahf
lods
mov
cwtl
outsb
int3
jmp
sbb
lcall
jle
loop
mov
scas
mov
jno
mov
lock
xlat
loop
or
notb
jo
adc
lahf
dec
popa
inc
fimull
jno
or
icebp
pop
cmp
jns
pop
cmp
jns
xchg
cmp
and
mov
inc
lods
jecxz
mov
out
cld
add
mov
add
fcoml
jne
mov
push
jmp
add
test
je
sub
scas
push
mov
mov
and
mov
jle
push
and
mov
popa
int3
rcrb
mov
pop
jmp
mov
xchg
mov
imul
and
sbb
shlb
movsl
cmpsb
jmp
ficompl
in
lods
orb
ret
adc
lock
xchg
lahf
jo
jnp
mov
arpl
in
mov
cmc
jl
sbb
sbb
cmp
mov
data16
pop
sub
jl
sbb
push
jp
cwtl
push
dec
mov
mov
adc
lods
sub
inc
jmp
addl
aam
pop
sbb
mov
pop
jne
pop
adc
mov
and
loopne
gs
cld
xchg
movsb
adc
mov
lods
stos
stos
push
mov
mov
push
push
jecxz
mov
les
in
mov
xor
inc
fstps
or
mov
xchg
sub
jg
js
popf
dec
orl
js
mov
dec
pop
pushf
mov
or
pop
push
int
das
sbb
mov
loope
dec
rcll
sbb
xchg
xchg
in
std
cmp
push
pop
out
test
jb
push
adc
and
clc
fistpll
aam
fistpll
js
test
test
add
clc
fs
xchg
insl
push
or
jle
xchg
movsl
mov
push
cwtl
test
pop
pop
or
and
movsb
mov
dec
cpuid
popa
pop
cmpsb
mov
nop
sbb
sarl
enter
mov
test
fxtract
mov
push
inc
fimuls
cmpsb
pop
pop
inc
orb
pop
adc
out
adc
mov
push
das
fiadds
cmp
daa
mov
adc
insb
pop
and
mov
lods
scas
jp
loop
mov
add
cs
mov
sbb
add
push
jns
push
dec
insb
mov
es
bound
stc
mov
mov
sti
insb
enter
rcrb
mov
jecxz
cli
adc
or
jno
fmull
add
pop
cmp
test
inc
inc
mov
sbbb
cmc
xlat
int3
or
jle
dec
outsb
mov
mov
inc
insl
jmp
mov
lret
xchg
mov
fists
mov
pop
cltd
add
inc
ret
out
rcrb
rcl
xchg
rorl
imul
mov
cltd
mov
arpl
fcompl
nop
lods
lret
std
int3
or
popa
jns
xchg
mov
push
out
test
cmpsl
shlb
xor
sarl
scas
scas
push
into
arpl
cmp
iret
dec
frstor
sti
lods
or
popf
xor
xchg
dec
fstpl
pop
jo
push
dec
leave
push
in
lock
pop
jle
pushf
mov
mov
adc
sbb
add
and
pop
or
pusha
jno
adc
sub
stos
xor
ss
inc
mov
inc
je
dec
push
adcb
push
jle
lock
insl
pop
jecxz
jb
sti
fs
pop
inc
mov
jb
je
js
jl
lcall
dec
sub
cld
outsb
mov
nop
push
cwtl
jmp
and
mov
mov
mov
mov
pop
shlb
jns
imul
loop
jnp
mov
imul
in
call
mov
dec
in
bound
jbe
mov
sahf
jns
gs
cmpsl
popf
lock
jmp
add
pusha
or
sahf
or
adc
jns
push
and
sub
pusha
xor
sahf
xor
cmp
jne
jnp
cmp
inc
push
dec
mov
jg
js
pop
or
push
lcall
insb
bound
je
je
and
jo
ficomps
xchg
loopne
sbb
lock
add
pusha
movsb
fcompl
mov
mov
mov
mov
in
les
call
sarb
mov
jo
ficomps
in
call
out
fs
sub
sub
cmpsb
xchg
jns
movsb
pop
imul
xor
mov
jge
push
out
jp
inc
push
popf
pushf
jmp
fucom
jns
mov
adc
push
fldenv
insl
pop
pop
pop
pop
xchg
lea
jnp
or
push
aam
clc
fidivs
cmp
lods
int3
xchg
xchg
pop
adc
pop
pop
inc
dec
mov
add
cmp
icebp
test
mov
out
inc
or
test
outsl
ja
cli
imull
es
mov
cltd
mov
cmp
mov
jns
cmc
sbb
and
sbb
call
xlat
rep
scas
mov
test
leave
pusha
int3
sub
sub
mov
sahf
cwtl
in
push
mov
xchg
hlt
inc
mov
stos
in
add
mov
mov
fs
xor
ret
jp
mov
popf
shr
data16
add
jno
adcl
pop
inc
inc
scas
pusha
push
clc
cltd
dec
jmp
mov
adc
das
sbb
push
push
sti
je
fstps
cwtl
fs
xchg
pop
push
insb
cmp
jb
das
pop
sub
fistl
sub
mov
out
out
das
ficomps
cltd
cwtl
fstps
leave
aaa
mov
rcrl
mov
stos
lods
js
mov
in
mov
and
mov
adc
jb
adc
loop
sbb
scas
movsb
xchg
aad
dec
cmpl
imul
push
test
loopne
shlb
lahf
dec
popf
addb
subl
jbe
push
pushf
stos
enter
jnp
pushf
fimuls
cmpsb
xchg
mov
push
imul
adc
imul
jecxz
icebp
sbb
sbb
fbstp
fnstcw
mov
cltd
in
addb
mov
imul
mov
mov
scas
iret
mov
aad
stos
inc
pushf
bnd
mov
and
les
lock
push
aaa
jbe
insb
lcall
test
jecxz
data16
mov
lahf
jle
pop
sbb
fs
mov
mov
icebp
mov
mov
xchg
pop
mov
mov
imul
test
jnp
xchg
jno
xchg
mov
mov
jp
adc
test
jg
insb
jns
scas
in
mov
pop
push
mov
outsb
xchg
mov
pop
pop
fadd
stos
push
pop
or
std
jecxz
outsb
int3
mov
lods
fs
mov
ret
sub
rolw
sub
flds
push
xchg
ret
scas
dec
and
sbb
les
jg
mov
mov
ftst
mov
iret
into
jnp
arpl
outsb
xor
in
fsts
jle
arpl
mov
movsl
nop
fs
lahf
jmp
or
js
js
xchg
jns
cmpsl
push
call
jnp
enter
out
xchg
jns
pushf
test
dec
add
mov
stos
mov
push
add
cld
add
mov
js
pusha
in
flds
add
push
push
imul
adc
inc
push
int
dec
mov
xchg
imul
enter
and
inc
dec
mov
stc
repnz
inc
icebp
outsb
sbb
lcall
ret
or
jl
xor
pop
out
cld
lahf
mov
jo
mov
mov
inc
cld
pop
stos
sbb
popa
jns
mov
xchg
sbb
pop
mov
cwtl
sbb
push
adc
sbb
or
mov
dec
aam
popf
push
cmp
popa
das
xchg
jge
mov
or
push
xlat
loopne
cwtl
mov
cld
jns
inc
ljmp
jo
lds
or
sbb
int3
pop
adc
mov
leave
lahf
mov
test
lahf
sub
gs
dec
in
lods
dec
insb
out
in
cltd
jnp
pusha
je
jge
mov
lret
iret
stos
ret
push
pop
rolb
adc
shrl
pop
lods
insl
enter
lcall
data16
nop
dec
pushf
inc
cli
mov
in
sub
das
insb
in
and
stos
loop
mov
mov
fcoms
js
lahf
inc
notl
pusha
in
sbb
mov
lock
pop
push
add
push
ret
and
xchg
std
iret
mov
cmp
mov
js
sub
cltd
repz
pop
pop
nop
dec
mov
adc
push
and
mov
lods
inc
rclb
mov
mov
xlat
or
push
cmp
popa
inc
pop
in
pop
xor
incl
jl
or
shrl
push
xchg
cmp
fdivl
push
xor
jnp
into
aam
or
sbb
jae
jne
fisubrl
and
scas
lcall
shrd
out
cld
adc
xor
sbb
mov
inc
cwtl
adc
cmpsl
cs
mov
icebp
pop
ljmp
xchg
aam
push
push
and
and
enter
vpextrd
xlat
pop
inc
mov
sar
ret
cli
push
ja
push
cs
cwtl
test
das
popf
flds
mov
inc
flds
es
dec
movl
pushf
xlat
jo
rcrb
inc
mov
sub
je
xchg
pop
mov
fwait
ret
pop
xchg
test
adc
or
int3
sub
add
mov
loope
das
or
sbb
out
mov
into
out
push
jmp
lret
cwtl
push
outsb
jnp
pop
imul
pushf
jmp
add
fcmovu
xchg
stos
lret
push
pop
and
aaa
hlt
fs
xchg
mov
jns
pushf
mov
dec
loope
mov
imul
jecxz
loop
cwtl
and
fsubl
int3
insb
fisubrs
repz
cmp
scas
or
pusha
mov
push
inc
movl
sub
mov
arpl
or
mov
movsl
popa
repnz
and
and
mov
and
push
loop
js
sub
addb
lea
or
xlat
pop
mov
dec
out
mov
lods
sti
movsb
out
test
pusha
xchg
out
popa
loope
fs
jo
dec
cwtl
add
in
int3
xor
fst
xchg
sahf
pop
enter
mov
shrb
mov
mov
call
insb
cli
ja
imul
stos
adc
sbb
sarb
aam
pop
xorl
sub
popf
mov
cmp
add
rcll
les
out
mov
loopew
pushf
pop
lret
mov
and
cwtl
insb
shlb
cmpsl
insl
jne
mov
scas
or
lcall
mov
imul
int3
pop
push
jb
loopne
mov
push
push
repz
dec
sbb
addr16
jmp
push
push
mov
jb
or
and
inc
cmp
or
pusha
je
in
aam
xlat
or
pop
xchg
int3
xor
inc
lds
test
dec
jo
pop
loope
cmpsb
inc
daa
inc
mov
cltd
in
pushf
pusha
jge
test
faddp
fs
not
gs
sub
dec
fcmovb
clc
inc
loope
lods
pop
sbb
mov
loope
push
cmc
push
icebp
test
test
push
mov
or
mov
xchg
dec
aad
mov
jo
sti
movsb
cmp
andb
insb
aad
outsl
pop
or
jg
mov
jae
loope
or
call
xchg
sbb
jo
pusha
push
pusha
mov
add
ret
sbb
pusha
in
inc
pop
insb
or
pushf
imul
add
mov
shlb
mov
xchg
and
sub
outsl
pop
int
outsb
leave
push
fisubl
mov
mov
fldl
mov
sub
jnp
sub
or
jle
std
imul
xorl
pop
jo
lods
in
test
jecxz
sub
push
ds
xchg
je
jle
push
sub
loope
jnp
and
mov
outsb
mov
dec
movsl
xor
push
daa
pop
scas
andl
fs
stos
lock
dec
pusha
and
and
mov
ds
or
xor
pusha
lods
pop
adcl
or
cmp
notb
lods
mov
cmp
xchg
in
mov
pop
push
xor
shl
mov
outsl
sub
sbb
bound
fldt
cmp
std
ficompl
cmp
xchg
fistpl
mov
je
loope
outsb
aaa
gs
into
gs
jp
stos
and
out
enter
mov
sub
insb
add
stos
aad
aam
insb
lcall
clc
xlat
cmp
shll
jnp
dec
mov
into
cs
pop
cmpsb
xor
inc
aad
in
inc
js
push
mov
mov
pusha
add
outsb
and
movsl
out
fcmovnu
lods
cwtl
scas
loope
fildl
popf
ja
lcall
and
popf
rcrl
sbb
movsb
pop
iret
cmp
push
in
test
and
mov
in
es
inc
fcomi
test
test
and
jno
push
mov
sbb
adc
movsb
ds
dec
into
fistpl
roll
add
xchg
xchg
cwtl
inc
jl
faddl
add
mov
cmpsl
inc
insb
cmpsb
xchg
mov
sbb
lea
jns
jge
pushf
xchg
pop
mov
stos
ret
pushf
sahf
insb
push
ds
arpl
stos
pusha
push
jne
loopne
jbe
sarb
ficoml
sbb
rcll
icebp
das
stos
xchg
outsl
xchg
push
mov
pop
xorl
mov
scas
fmull
loope
outsb
fs
push
push
pop
dec
repnz
mov
inc
test
shl
sub
outsb
sbb
jne
fisubrs
addr16
lods
pop
pop
sub
in
aad
adc
xor
test
test
test
clc
scas
jg
pop
push
test
mov
mov
push
push
pop
into
pusha
add
cmpsl
mov
ja
jle
lcall
pusha
dec
lds
mov
icebp
out
adcb
clc
and
cli
fistps
mov
loop
pop
shl
insb
pop
pop
push
mov
fbld
imul
lods
scas
sbb
scas
fdivrl
xchg
adc
aad
loope
mov
jo
mov
pop
mov
xlat
in
iret
xorb
scas
bound
sub
dec
les
cmpsb
faddl
fs
test
pop
gs
xchg
mov
les
lock
mov
inc
mov
inc
cli
scas
jle
scas
lcall
sub
or
fsts
inc
adc
or
sub
subl
clc
gs
pop
stos
ret
inc
loope
jle
or
call
clc
fsubl
dec
imul
xchg
push
gs
call
and
enter
into
rorb
push
mov
push
nop
lock
mov
test
jge
fsubrs
cmp
pop
mov
push
addr16
push
negb
jnp
ret
jge
sbb
repnz
movsb
sbb
loopne
jp
pop
fdivr
jb
sub
jecxz
and
mov
subb
outsb
out
scas
add
pop
push
cwtl
xchg
nop
pusha
xor
in
iret
mov
pop
popf
add
mov
push
cmp
insb
add
mov
adc
xor
pop
xlat
ds
sbb
dec
xlat
dec
insl
mov
add
or
shll
out
sbb
and
add
xchg
or
out
or
imul
sbbb
push
mov
jnp
aad
fistpll
movsb
test
adc
in
popf
fs
cwtl
cld
out
mov
mov
pop
mov
clc
aas
xor
pop
xchg
insb
jbe
mov
push
adc
scas
mov
popa
fwait
test
xabort
lods
movsl
or
inc
stc
jae
adc
add
je
or
pop
insb
inc
xor
jb
or
jp
dec
inc
in
or
sbb
out
sti
push
nop
popf
mov
stos
xchg
arpl
ljmp
js
sahf
insb
dec
sbbb
test
insb
inc
movsb
lods
pop
cltd
mov
and
addb
call
mov
loop
pop
mov
pop
int3
addr16
jo
ret
and
test
clc
ret
xchg
fldcw
mov
addl
mov
mov
aam
mov
rcll
sub
movsb
es
xchg
sbb
or
push
js
arpl
adc
sar
xchg
mov
push
jmp
dec
jl
roll
inc
mov
cmp
test
mov
and
sub
sub
inc
in
movsl
ja
inc
lcall
inc
daa
push
call
iret
sub
or
or
call
imul
les
dec
jecxz
xchg
jbe
aas
pop
push
je
pusha
sbb
dec
push
adc
and
xchg
pop
xor
bound
mov
cmpl
jge
push
push
jb
ret
pop
out
dec
enter
fstpl
pop
xor
aam
ret
nop
jae
pop
mov
lods
mov
cmp
pusha
mov
inc
adc
dec
mov
xor
push
push
negl
fwait
inc
xor
mov
in
pop
xchg
shlb
dec
imul
mov
addb
sarb
xor
or
sbbb
inc
movl
je
cltd
sarl
out
pop
out
lods
popa
pushf
int3
push
xchg
mov
bound
test
test
sbb
xor
inc
pop
sub
in
aam
adc
loopne
sbb
test
insb
sar
jge
xor
add
push
sbb
cwtl
jae
mov
test
ds
cltd
inc
and
inc
inc
enter
addr16
sub
mov
pop
int3
push
sbb
or
call
cmc
mov
or
clc
xlat
sbb
clc
mov
pop
test
push
sarl
mov
dec
outsb
dec
stos
or
cmpsb
sub
stos
jne
xlat
jmp
mov
sbb
in
sub
adc
fdivrs
test
dec
add
scas
push
cmp
loope
mov
movsb
jb
mov
sub
inc
inc
idivb
jle
loopne
rcrb
pop
jecxz
and
cltd
int3
je
shlb
pop
andb
jg
sahf
pushf
out
lcall
sbb
pop
bound
arpl
cmp
out
lock
ja
lods
mov
inc
sub
inc
sub
mov
loope
or
fdivrl
sbb
loop
jecxz
mov
jb
loop
mov
mov
push
inc
mov
loopne
push
cltd
cld
scas
scas
test
push
daa
inc
outsl
jge
pusha
mov
adc
ljmp
mov
lret
scas
cwtl
ss
rcr
sub
bound
scas
enter
test
mov
inc
clc
add
mov
cwtl
pop
fsubrl
sub
test
int
addr16
lcall
dec
stos
adc
hlt
push
insb
dec
sbb
shll
or
mov
dec
aam
pop
cmc
shll
int
pusha
shr
shrl
mov
shl
imul
jge
popa
lahf
inc
and
aam
subl
inc
jge
inc
cmpsl
movsb
cmc
in
inc
sub
mov
lds
fidivl
cmp
lcall
inc
mov
jo
js
push
loope
dec
or
mov
ret
dec
test
sub
inc
sub
es
dec
popa
sbb
and
outsb
mov
loope
cmp
mov
inc
movsl
call
fcoms
sub
call
cmp
inc
call
inc
mov
clc
aam
out
leave
mov
outsb
fs
repz
out
call
xlat
ret
xchg
pop
mov
inc
xor
shll
and
icebp
mov
nop
orb
pop
stos
into
inc
stos
mov
test
push
andb
and
scas
call
data16
push
pop
fistpl
pop
cmpsl
or
je
mov
pop
in
pushf
or
imul
dec
mov
and
in
outsb
or
insb
or
xor
popf
rorl
je
xchg
fcoms
sarb
stos
iret
neg
call
fwait
pop
jecxz
popa
cwtl
jp
fistpl
xchg
cwtl
clc
adc
jo
mov
hlt
sub
push
aam
jg
sbbb
fldcw
lcall
in
call
lahf
out
lcall
push
pop
stos
imul
sti
jp
fsub
shlb
repnz
das
rolb
nop
pop
cltd
enter
adc
ficoml
scas
push
cmp
in
xor
mov
mov
call
pop
or
int
mov
inc
addb
test
mov
in
jecxz
xchg
add
jb
and
jge
fimull
hlt
xchg
test
mov
adc
add
mov
in
fidivl
rorb
popf
sub
push
js
pop
dec
pop
lods
mov
outsl
sahf
ficomps
add
idivb
insl
fs
add
pop
imul
out
dec
mov
mov
leave
dec
enter
jnp
push
nop
addr16
push
insb
js
inc
enter
bound
pop
je
hlt
sbb
int3
push
mov
fucom
mulb
jns
cmp
mov
jns
sbb
movsb
jnp
stc
mov
out
jno
pusha
jecxz
lcall
idivl
test
pop
push
cmp
cld
jge
fwait
fmul
addl
fisubrs
in
xor
popf
hlt
jmp
inc
adc
jbe
jno
loop
leave
sbb
and
fwait
and
sub
sub
js
sub
lods
fsubrs
inc
jae
or
loope
loope
imul
dec
cwtl
pop
js
lods
cmp
add
fs
ficomps
in
jbe
and
popa
pop
mul
cmp
pop
lock
fisubrs
pop
lods
push
jo
je
enter
and
in
mov
das
pop
inc
mov
inc
repz
mov
int3
repnz
push
into
pop
hlt
mov
movsb
pop
or
fildl
in
inc
and
fwait
mov
dec
sti
fcomps
enter
cli
mov
jp
or
loopne
mov
loopne
inc
in
lds
push
push
addr16
daa
bound
addr16
popa
std
mov
test
sbb
inc
or
loope
mov
shl
std
lods
dec
lods
scas
mov
repnz
jb
mov
insl
pop
roll
aad
adc
jle
sbb
adc
in
popl
push
inc
pushf
adc
sbb
cmp
rcrl
minps
fsubp
arpl
add
fnstenv
mov
mov
int
mov
insb
mov
aaa
fistps
js
lahf
xor
sbb
hlt
arpl
jae
aam
loopne
mov
aaa
cs
shlb
pusha
hlt
push
sbb
cwtl
outsb
outsl
out
jle
mov
jmp
push
mov
out
cmp
js
imul
mov
adc
jo
out
cli
jnp
or
in
jp
xorl
mov
test
pop
test
push
sahf
jns
jmp
mov
arpl
lahf
enter
jb
mov
popa
lret
mov
inc
mov
cmp
mov
pop
je
fdivrl
pop
out
mov
icebp
mov
xchg
fucom
daa
pop
jp
inc
dec
dec
subl
imul
shr
jns
pop
nop
loopne
xlat
mov
pop
fildll
fstpt
jne
dec
into
in
stc
push
inc
std
jmp
imul
mov
mov
outsl
sub
subb
dec
mov
inc
mov
push
mov
test
punpckhbw
inc
or
cmpsb
fsubr
lods
sub
fstps
pop
enter
xchg
pop
popa
jo
sbb
pop
insb
test
inc
sub
mov
xor
sahf
pop
push
enter
lahf
inc
push
cmp
test
jo
lahf
sub
fstpl
inc
pop
xchg
sub
inc
fcoml
sarl
adc
or
and
sahf
imul
sahf
pop
testb
subb
lcall
sub
sbb
xchg
jo
jge
push
fistpll
pop
movsb
lret
pop
push
cmp
mov
mov
fisubrs
and
cmp
lods
pop
adc
xchg
das
test
jo
mov
cmp
lret
pop
test
pop
sub
push
arpl
test
cmpl
sub
leave
nop
push
cltd
in
inc
das
lcall
out
call
aas
insl
xchg
or
jge
add
mov
pop
mov
pop
xchg
sub
cmp
inc
rolb
inc
rcrb
popf
popf
jnp
xchg
mov
adcb
insl
jne
xchg
inc
cltd
mov
pushf
mov
repnz
fsts
inc
icebp
out
or
push
inc
xor
inc
cmp
and
push
sub
pop
ret
addl
jo
ds
lahf
cmpsl
sub
inc
idiv
pusha
int3
call
call
popf
and
fcompl
pop
outsl
cld
jge
stos
mov
test
mov
orb
jno
jbe
xchg
mov
aad
adcb
lcall
call
xchg
pop
sub
mov
jnp
mov
xchg
int3
iret
popf
ret
push
push
int3
mov
outsb
and
lcall
in
add
fdiv
mov
sarl
gs
pop
pop
xor
and
movsl
pop
pop
mov
repz
test
dec
stos
inc
pop
sub
jmp
rcrb
xchg
idiv
and
pop
fsubrp
adc
addl
and
shl
stos
sbb
jbe
out
jge
sub
push
pop
xchg
jae
jmp
nop
rolb
js
sbb
or
pop
cmpsb
aaa
sub
cld
repnz
xchg
stos
loope
xor
xchg
mov
mov
xchg
xchg
mov
jo
inc
xlat
mov
add
sahf
xchg
lods
into
insl
cmpsb
scas
dec
mov
pop
fnsetpm(287
inc
aad
sub
das
inc
jmp
xor
nop
xchg
dec
pushf
and
jg
mov
jmp
fs
pushf
mov
cwtl
mov
in
shl
xor
mov
pop
adc
leave
faddp
seto
gs
ds
push
mov
lcall
mov
jo
mov
out
outsl
mov
loop
nop
xor
and
add
repz
in
repnz
inc
loopne
push
inc
ss
or
lret
andl
scas
push
imul
nop
cmp
pushf
lods
lahf
lcall
sub
test
bound
dec
cltd
adc
sbb
stos
cli
cmp
cmp
cmpb
jecxz
data16
mov
loop
pop
sbb
push
lods
insb
mov
or
inc
dec
or
nop
mov
mov
stos
xchg
add
test
pop
mov
adc
mov
pop
inc
icebp
adc
adc
fldcw
imull
push
das
mov
pop
fdivl
test
in
mov
in
mov
rclb
mov
faddl
pop
in
cmpl
mov
pop
bound
popl
pop
outsl
or
inc
insl
loop
cmpb
insl
fimuls
or
sub
xlat
popa
add
test
int
sbb
cmp
mov
pop
test
and
frstors
xor
inc
gs
repnz
mov
push
les
add
call
mov
push
enter
fnstcw
jecxz
cmpsb
bound
jns
mov
scas
xlat
xchg
mov
shll
mov
pop
xor
inc
mov
adcb
les
outsb
dec
loop
test
xor
call
ja
fidivs
dec
mov
adc
sbb
jns
pop
jecxz
push
fs
in
in
dec
test
pushw
lcall
testb
lods
int3
out
stos
mov
and
nop
jge
sbb
data16
ja
inc
add
xchg
and
out
inc
pop
addr16
xchg
lret
push
lahf
loopne
popa
imul
cmp
mov
imull
push
lods
jns
cmpsl
int
sbb
inc
xor
int
or
fldl
lods
jp
sbb
or
loop
test
popa
inc
repz
mov
in
stos
mov
bound
fiadds
lret
fsubrp
mov
jp
fsubrs
insb
add
jl
pop
pop
lds
cwtl
jmp
adcb
fwait
mov
scas
jp
mov
inc
or
rcrb
mov
jl
pop
dec
jno
cmp
pop
bound
sub
and
out
push
mov
das
data16
stc
or
fxch
gs
pop
insl
adc
pushf
adc
push
movsl
cld
ret
jbe
jmp
pop
or
inc
out
xchg
aaa
sbb
push
jne
je
jle
mov
shll
fimuls
mov
xchg
xor
in
jo
out
push
pop
icebp
jp
xchg
jns
shrb
nop
stos
scas
ret
push
test
inc
jge
pop
hlt
mov
push
pop
push
jge
pop
mov
push
xor
dec
imul
call
dec
pop
test
std
mov
cmp
ds
xor
in
inc
movl
jmp
add
jnp
xor
sbb
inc
cwtl
pop
insb
flds
cmpsb
cmp
cmp
sub
outsl
int3
inc
js
nop
pop
ss
and
mov
fdivl
mov
pop
dec
out
test
daa
mov
loope
in
fs
scas
loope
push
loope
jmp
test
and
outsb
cmp
jo
mov
jo
nop
inc
dec
jns
sbb
imul
push
mov
fisubrl
inc
push
mov
jmpw
adcl
pusha
adc
popf
push
cmp
push
mov
pop
xor
xchg
and
stc
jecxz
insl
inc
and
outsb
ret
inc
inc
mov
add
jbe
adc
jl
or
xchg
adc
cwtl
and
inc
jg
push
cmpsb
push
mov
mov
mov
xchg
fcoml
mov
je
inc
xchg
test
mov
jbe
adc
jno
imul
fucomi
loope
push
jle
leave
js
ret
lret
subl
jo
and
add
inc
push
cmp
fldenv
jl
mov
outsb
jp
mov
mov
fbld
loope
jmp
pushf
push
ss
pop
enter
mov
jp
leave
pop
frstor
lret
jge
dec
lret
mov
jae
pop
add
subl
xor
or
in
fs
loope
sub
mov
ljmp
insb
mov
push
je
mov
insb
movsb
sti
mov
ret
out
lret
push
cmp
mov
pop
dec
lahf
adc
cld
mov
push
enter
mov
enter
xchg
dec
outsl
mulb
scas
fsubrl
dec
inc
outsb
call
adcl
inc
jecxz
stos
icebp
andl
insb
adc
fisubs
jp
sub
cmp
mov
or
pop
jg
js
je
fstpl
push
or
mov
sahf
cmpsl
cwtl
push
stos
inc
push
or
or
sti
insb
dec
add
cmp
sub
mov
das
xchg
sbb
popf
ja
int
adc
test
cwtl
bound
push
bound
std
jb
sbb
test
outsl
adc
and
jns
jmp
push
and
pop
mov
test
mov
bound
mov
sbb
cmpsl
ja
mov
addr16
cmp
inc
pop
fnstenv
in
mov
inc
mov
in
sub
int
inc
dec
and
push
push
push
call
insl
push
or
sub
cld
movsl
into
fcmovnbe
aaa
loop
inc
pushl
ret
fsubs
sbb
lock
call
pop
ficoms
cwtl
push
fsubs
fwait
aas
jmp
loop
inc
cwtl
lock
mov
mov
arpl
loopne
call
orl
insb
mov
mov
sbb
je
addb
sbb
int
pusha
jne
push
cmp
mov
in
shll
test
out
jp
pop
shlb
inc
xor
psraw
add
mov
cmpsb
mov
fcmovnb
dec
arpl
fstps
test
pop
clc
mov
mov
fs
stos
xor
fnstenv
inc
cmc
push
repz
mov
jmp
add
pop
xchg
imul
push
push
add
mov
jno
pop
in
popa
stc
call
lock
enter
inc
push
sbb
daa
popa
pop
into
or
idivb
pop
adc
test
xor
pop
inc
mov
jle
das
pop
fstps
lds
lods
fs
mov
lods
pushl
and
je
mov
popf
pop
inc
sub
xchg
cwtl
aam
cltd
sbb
lods
pop
push
test
jecxz
lret
shll
xchg
pop
sarl
in
test
roll
pop
insl
sub
sub
repz
scas
xchg
xor
dec
mov
jae
and
mov
jecxz
fdivrs
hlt
push
inc
ss
dec
in
outsb
mov
shll
daa
push
jns
inc
push
sub
dec
xchg
push
pop
jne
pop
pop
xchg
or
jp
cltd
lods
imul
xchg
mov
and
push
cwtl
mov
popa
fistl
push
mov
or
inc
mov
adc
sbb
xchg
in
jae
ret
xor
xchg
stc
fstps
push
sbb
cwtl
mov
ja
enter
outsl
xacquire
fsubrl
adc
out
fidivrl
xor
push
mov
aad
add
sbb
sub
in
mov
movsb
mov
jle
out
or
popa
test
std
clc
adc
add
outsb
adc
jecxz
add
repz
push
imul
repz
sbb
loope
push
jge
lods
fstpt
xchg
aam
jmp
shlb
mov
jecxz
lret
jo
ss
lcall
push
jp
push
iret
push
xchg
mov
out
jnp
scas
inc
mov
xchg
int3
arpl
negb
subl
mov
aad
mov
jnp
xor
mov
ss
fwait
test
cs
hlt
mov
int
aas
lods
in
cs
sahf
and
jl
mov
call
xchg
cwtl
sub
inc
enter
outsl
cld
lock
pop
and
and
mov
sub
loope
pop
repnz
cld
insb
mov
jnp
xchg
mov
push
jecxz
mov
std
mov
fdivrs
cmpsl
jnp
inc
int3
sbb
mov
push
dec
pop
rcr
and
fcompl
je
lahf
jae
xchg
sbb
dec
xchg
popa
pop
int3
pop
lret
pusha
mov
fldenv
scas
pushf
push
call
mov
cli
scas
in
fs
fisubl
adc
lods
out
int
jmp
push
cmc
jl
mov
imul
and
stos
mov
inc
fisttpll
sbb
pop
inc
xchg
dec
loope
popf
lahf
mov
mov
out
xchg
cmpsl
dec
inc
mov
jl
mov
jbe
repnz
mov
jmp
mov
mov
mov
mov
xchg
out
inc
and
stos
test
neg
sbb
cli
push
adcl
mov
inc
in
push
mov
jno
outsl
cs
jae
stc
out
mov
popa
pushf
ret
insl
out
push
outsl
jp
mov
mov
mov
push
cmp
mov
xor
cmpsl
insb
jnp
mov
cli
in
sub
jecxz
adc
pushf
js
iret
pushf
imul
push
addl
push
mov
pusha
or
jae
inc
sarl
inc
sub
cmpsb
cmpb
pop
pop
cmp
dec
mov
outsb
stos
jo
mov
jg
cmp
fstpl
fmull
int
inc
xor
fisttps
dec
mov
pusha
push
inc
jb
adc
mov
test
fs
cmp
fwait
gs
jno
mov
adc
cmp
imul
mov
lock
out
psubsb
les
sbb
xchg
jp
test
pop
repnz
out
test
inc
jbe
push
mov
shlb
insb
nop
lds
in
dec
fistps
xchg
mov
and
cmpsl
test
mov
fdivs
jge
fidivl
call
mov
mov
fistl
sahf
push
and
in
mov
rclb
mov
inc
andl
mov
movb
xor
or
adc
stos
cmp
int3
cmc
inc
cmpsl
js
push
add
add
or
shll
or
dec
fsubrs
sub
mov
in
nop
test
mov
xor
notl
pop
pop
scas
sbb
mov
in
push
aam
jp
addb
sub
and
cmpsl
jbe
test
mov
pop
aad
stos
add
push
ret
xlat
pop
and
jp
into
std
pop
jl
adc
rcrb
adc
cltd
xor
jmp
jecxz
inc
lahf
sbb
pop
pusha
pop
mov
add
inc
sti
mov
arpl
arpl
lahf
pop
mov
sub
jl
sub
int3
xor
mov
dec
test
stos
mov
inc
loopne
inc
stos
jo
jp
jno
aam
add
sub
cmpsb
std
imul
dec
mov
pusha
loope
inc
jecxz
sub
push
dec
push
inc
fs
pusha
mov
jo
rol
in
pop
leave
clc
jp
xlat
xchg
sbb
and
inc
xchg
in
pop
push
daa
mov
in
sti
std
inc
or
jb
imul
loope
xchg
sub
aad
inc
pop
add
adc
jne
or
outsb
dec
test
in
pop
loop
insb
xchg
push
and
jae
mov
cmp
inc
push
mov
adc
lahf
lods
jo
xchg
push
aam
js
pushf
inc
fdiv
inc
pop
repnz
test
daa
js
pop
and
js
inc
or
bound
mov
sub
pop
adc
into
movsb
adcb
or
and
adc
ja
xchg
add
and
imul
mov
mov
adc
cwtl
pop
in
in
lods
push
mov
mov
scas
jmp
pop
pushf
in
mov
add
sahf
jae
or
filds
dec
ret
add
in
xchg
movsl
mov
test
addr16
jmp
push
fstl
dec
iret
nop
hlt
xchg
and
fisttpll
add
adc
orl
imul
xchg
es
and
shrb
repz
or
fsubrl
xor
imul
mov
out
int
in
xor
rcl
icebp
cmc
sahf
xchg
adc
adc
xchg
or
or
mov
test
mov
data16
or
jge
mov
pop
mov
cmp
or
mov
cmpsl
je
test
mov
aaa
dec
jecxz
je
sbbb
adc
and
sbbl
xchg
lcall
sbb
invd
cs
mov
hlt
sub
cmp
clc
inc
dec
int
jp
sub
loopne
xchg
fsubs
iret
test
jno
mov
cwtl
into
shrb
in
adc
les
add
icebp
int3
mov
inc
int
pop
pop
cmp
das
sti
movsl
mov
inc
lcall
int
add
and
loop
sti
imul
push
pop
aad
mov
imul
insl
movsb
aam
xor
pop
sbb
xorl
cmpsb
enter
mov
test
or
mov
sbb
cmpsb
stos
pop
mov
dec
sub
imul
adc
fucomp
jl
add
xchg
jle
mov
add
inc
repz
adc
popf
xchg
push
aam
jl
push
popa
xchg
mov
ljmp
jp
call
mov
push
test
cmpsb
cmp
or
cmpsl
dec
ret
push
xor
in
in
push
jnp
mov
mov
leave
or
out
mov
mov
add
xor
jle
loopne
call
lcall
outsw
jo
mov
mov
arpl
push
fisubl
cmp
filds
call
jno
jb
mov
imul
mov
dec
push
or
adc
out
fs
out
out
and
test
stc
sub
imull
pushf
or
and
sbb
int3
mov
fldt
mov
lcall
lret
int3
xchg
in
cmc
mov
or
mov
js
movsb
jns
mov
ret
daa
call
inc
ficoml
iret
lret
ss
outsl
dec
inc
clc
test
clc
push
mov
stos
jns
fisubrl
adc
lea
push
imul
shlb
mov
lahf
add
xchg
cli
adc
rol
add
and
cmp
mov
add
lock
add
scas
jmp
fwait
out
mov
jne
outsb
call
insb
mov
pushf
xchg
inc
loop
int
sti
test
mov
push
or
push
stos
mov
rol
sbb
notl
mov
outsb
stos
sub
je
push
mov
xlat
mov
lahf
push
pop
push
rclb
in
mov
mov
push
push
pop
mov
mov
push
cmp
ds
mov
mov
adc
fdivs
notl
sbb
imul
jle
out
pusha
inc
ja
inc
stos
adc
and
push
mov
movsl
mov
xor
mov
shl
fxtract
pop
loop
loope
or
inc
and
cld
and
shrb
xlat
add
ficoml
fisubrl
adc
movsl
decl
out
aad
fistl
es
sbb
push
jnp
pop
pusha
fistpl
lods
mov
shlb
loop
imul
dec
push
cmp
sbb
mov
push
push
je
lods
xor
cs
sub
faddl
xchg
imul
mov
fnstsw
cwtl
sub
xor
pushf
xchg
or
push
push
test
cltd
jbe
pop
push
cs
int3
rcll
in
or
pusha
movsl
imul
or
shl
pop
inc
adc
sahf
cwtl
fsub
enter
jp
stos
adc
andl
xchg
test
sub
std
cmp
push
or
mov
out
and
sub
cmp
xchg
insb
test
inc
dec
leave
mov
insb
fcoms
jae
call
aam
mov
xchg
dec
mov
daa
sbb
imul
shll
cwtl
cmp
pop
jno
aas
movsl
loop
sub
mov
adc
in
jg
and
sbb
lock
int3
push
pop
bound
roll
js
or
imul
mov
cmp
lea
mov
pop
sub
push
pusha
ret
subl
pop
ja
out
scas
jecxz
jmp
sub
ja
sub
mov
popa
ret
or
or
push
mov
lret
out
daa
fs
das
psllq
mov
sbb
jmp
add
fwait
mov
movsl
nop
pop
fistl
xchg
add
roll
dec
out
add
sub
sub
fiadds
jg
imul
pop
push
xor
nop
in
call
mov
add
jno
pop
test
stos
fdivrs
popa
addb
out
adc
sub
popf
stos
aad
dec
cmp
dec
in
adc
dec
pusha
ret
mov
dec
mov
mov
mov
mov
mov
in
test
lcall
jae
add
and
mov
sbb
sub
pop
repz
mov
push
js
insb
scas
in
mov
sahf
lea
adc
mov
imul
pop
xor
mov
insb
aam
xchg
adc
add
push
icebp
nop
sarb
scas
enter
push
loop
mov
in
jns
fldcw
or
mov
xor
xor
enter
js
fimull
mov
or
push
sub
add
lock
xor
push
scas
sbb
gs
mov
fmuls
imul
push
pop
lcall
mov
addb
stos
test
mov
addr16
into
imul
sar
mov
test
fwait
xor
ljmp
pop
jae
and
clc
lods
or
sbb
mov
fwait
xor
setae
popf
out
push
stos
imull
pop
popa
fs
pop
mov
nop
pop
clc
addr16
fisubl
jg
divb
out
fwait
lods
pushf
ja
sbb
scas
cmp
cmpsl
xchg
pop
mov
xchg
ret
scas
inc
fcompl
mov
loope
or
xor
in
lahf
pop
sbb
adc
call
or
add
out
push
sub
dec
inc
cmp
jge
dec
push
sti
push
mov
xchg
and
mov
lcall
inc
dec
ret
add
add
and
mov
jb
xor
outsb
test
popf
ret
mov
add
lods
jmp
scas
in
xor
sbb
add
xlat
xchg
rcrl
inc
rcrl
aam
fdivrl
in
cwtl
sbb
xchg
xor
mov
pop
icebp
arpl
adc
lods
push
fcoml
clc
cmp
xchg
pushf
xchg
add
aad
lods
inc
ret
ss
shrl
push
inc
pop
xor
popa
dec
out
jo
call
xchg
lock
cs
jae
addr16
mov
add
add
icebp
push
jecxz
sbb
maxps
push
jne
arpl
xchg
jo
mov
loope
stos
mov
test
xchg
fidivrl
cltd
adcb
jmp
pop
pop
je
inc
inc
jle
push
stos
rcr
pushf
mov
lahf
lret
fwait
jmp
mov
dec
jle
cwtl
repz
stos
cmp
jp
mov
enter
mov
pop
xor
shrb
popf
pop
pop
xor
mov
dec
push
orl
mov
mov
iret
mov
jge
mov
in
pop
xchg
outsl
mov
jo
adc
adc
sub
ret
cmp
js
int3
mov
mov
stos
scas
pop
test
loop
jle
ret
insb
fsubrl
xchg
popf
out
mov
in
push
inc
leave
mov
mov
cmpsl
sbb
sbb
shl
push
loop
rorb
mov
sbb
rolb
mov
daa
xchg
popf
cmp
sarb
jb
push
popa
xorb
jae
fistpll
ficoml
lcall
enter
mov
pop
and
jno
imul
jb
xlat
cmp
jnp
movsl
dec
mov
inc
rcrl
adc
or
sbb
std
ss
mov
int
jecxz
jge
fnsave
pop
das
push
aad
push
jmp
and
pop
fisubrl
ds
cmpsb
clc
xor
insl
jecxz
mov
fs
cltd
cmpsb
andl
cmp
and
dec
cmpsl
and
fwait
xchg
repz
stos
add
test
fmul
pop
jecxz
push
das
call
sbb
rcrb
popa
fcoms
fcompl
pop
xor
mov
aaa
enter
movsl
outsb
into
in
cmp
aas
int
test
mov
xor
dec
mov
mov
mov
push
inc
cmpsb
jle
mov
lods
jb
test
mov
cli
xchg
jge
sbb
ljmp
fistl
fnstsw
pop
fisubrl
inc
and
gs
adc
pop
fistl
mov
mov
cwtl
loopne
mov
int3
inc
out
adc
fwait
popa
mov
xchg
into
movsb
mov
and
xor
push
popa
sub
loope,pn
arpl
xchg
fistpl
push
addr16
gs
mov
out
push
pop
test
dec
int3
test
fistl
test
std
inc
mov
das
xlat
idivb
int3
loope
aam
and
mov
jmp
ret
filds
data16
js
jo
or
and
stos
mov
scas
imul
jp
addr16
int
std
loop
push
iret
mov
iret
xchg
sub
pop
test
int
fcoms
push
mov
sbb
or
sbb
notl
jae
jo
jns
pusha
movl
jl
sbb
add
mov
cmp
ret
mov
lods
and
shll
inc
xorl
mov
cmp
test
je
pop
fstpt
xor
pop
fsub
pop
pusha
xchg
shll
push
ficoms
test
loopne
mov
jp
jns
adc
inc
fdivrl
xor
add
or
out
clc
movsl
nop
dec
leave
jle
lods
inc
enter
mov
cmpsb
cmp
jmp
mov
insb
dec
andb
movsb
fisubl
pop
adc
inc
add
imul
addr16
scas
push
inc
ds
adc
mov
inc
stos
stos
push
sub
jmp
or
lods
cmp
push
cmc
insb
fstpt
imul
xor
je
scas
lods
mov
test
sub
mov
ss
popf
dec
dec
dec
cltd
cmp
insb
imulb
adc
mov
fcoml
mov
pushl
imul
push
mov
inc
icebp
fwait
inc
mov
pop
cmp
mov
dec
shlb
int
icebp
fdivrl
stos
xchg
add
aad
fwait
lcall
lea
std
test
inc
pop
sarl
add
shll
imul
shr
mov
movsl
jno
mov
mov
out
adc
and
push
pop
add
in
xchg
js
mov
in
adc
jmp
int3
sub
sbb
stos
or
sub
jl
cmc
hlt
jae
mov
xchg
mov
fsubr
add
stos
into
and
std
sub
jge
nop
cmp
jbe
ret
out
mov
cmp
jno
jb
std
xor
outsb
xor
mov
adc
jmp
popf
pop
pop
sub
out
call
and
cmpsb
stc
out
pop
hlt
and
scas
test
mov
cmp
outsl
mov
in
xchg
bswap
lret
mov
or
in
push
pop
xchg
add
fidivrs
test
rclb
inc
scas
loope
cmp
fisubl
mov
mov
pop
or
xlat
push
hlt
cmp
rep
mov
adcb
dec
pop
mov
shlb
pop
fidivrs
fcmovnbe
or
cld
sbb
push
xchg
scas
movsl
addr16
lret
pop
fsubs
pop
add
cmp
cwtl
inc
jecxz
out
and
xchg
jge
mov
aam
fs
imul
pop
int
fs
arpl
fs
adc
sub
jle
jge
sbb
pop
fprem1
add
xchg
mov
popa
cmc
sub
popf
xorb
adc
push
jae
nop
insb
mov
in
cmpsb
adc
xchg
into
sbb
or
shlb
and
fdivr
sahf
jae
testb
movsb
adc
mov
fstpl
arpl
xorl
sahf
ss
mov
mov
fucomp
lea
jge
xor
fsubrp
jno
xor
adc
int
ret
ds
cmpsb
cmp
fwait
or
pusha
movsb
repnz
jnp
push
out
lcall
fstpl
push
mov
inc
scas
pop
loopew
fs
push
fs
sbb
sbb
addr16
sub
sahf
je
mov
fldenv
xor
ja
mov
pusha
jae
push
pop
je
adc
imul
insb
cmp
jnp
xor
or
outsb
je
testb
pop
aam
push
ret
rorl
pop
shll
xchg
js
int3
mov
or
cmp
inc
xor
xchg
cmp
mov
gs
jecxz
aas
pop
or
cld
cmpsb
jge
or
pop
fistl
add
in
fdivl
js
dec
sti
xor
clc
icebp
icebp
jp
out
mov
shll
loope
adc
mov
push
push
sahf
pop
mov
imul
dec
imul
and
je
cs
imul
push
or
aas
add
fcmovnbe
cmpsl
imul
sub
fs
ret
mov
xor
mov
adc
pop
jge
lods
mov
jae
int
pop
cmpsl
lcall
mov
shrl
mov
bswap
stc
push
push
das
mov
push
push
mov
int
xchg
out
loope
cmp
inc
cmpsl
xlat
faddl
pop
jo
stc
nop
adc
lcall
imul
aad
int
jb
bound
sbbb
add
iret
pop
adc
sbb
mov
pop
mov
fistps
jp
pop
and
loopne
clc
pop
push
push
not
or
push
loope
insl
iret
sar
jne
iret
xchg
mov
js
jl
mov
lcall
in
mov
sbb
push
loopne
push
stos
xchg
jle
divb
andl
xor
and
mov
ds
inc
and
push
mov
mov
test
fs
sahf
mov
pop
jle
es
mov
test
popa
mov
and
inc
pop
pop
cwtl
pop
pop
pop
pop
out
stos
sub
mov
add
push
push
push
jp
mov
shlb
out
mov
insb
inc
hlt
mov
push
cmc
push
push
dec
or
cltd
push
mov
and
mov
or
mov
cmp
dec
or
adc
pushf
jb
push
hlt
xchg
lret
mov
ficomps
stc
out
pop
ss
sbb
fdivr
jge
lcallw
push
xchg
jecxz
sub
jg
sub
loopne
sub
lods
ljmp
mov
fwait
in
jo
lods
xorb
repz
dec
dec
pop
mov
scas
stos
mov
add
mov
push
jge
sub
sub
add
jge
push
lcall
pop
or
mov
sbb
lods
or
int3
cmp
std
shrb
push
imul
add
pusha
mov
jl
arpl
test
mov
mov
lcall
push
aam
push
test
loopne
pop
out
cwtl
mov
pop
jge
dec
push
jb
fstps
insb
sbb
cmc
add
inc
mov
mov
jp
and
idiv
mov
push
or
or
movl
cmp
inc
insb
mov
mov
mov
cwtl
test
addr16
mov
jecxz
aad
fs
stos
jb
cmp
clc
nop
test
popf
std
cmp
jnp
and
stos
fisubrl
jb
test
sbb
loopne
test
adcb
xorb
pushw
inc
lret
lock
out
xor
mov
nop
adc
clc
jmp
xchg
jnp
jl
aaa
jl
jle
lock
sbbl
inc
mov
imul
cmpsl
mov
test
mov
jecxz
sbb
hlt
ret
test
test
xchg
fistpl
push
ret
jb
scas
gs
cmc
sub
mov
mov
sub
lods
aaa
std
xchg
mov
icebp
or
push
test
es
adc
inc
fdivrl
cmp
push
fldenv
ja
xchg
loopne
jmp
jp
imul
adc
dec
int3
in
repz
das
popf
dec
pop
jecxz
inc
sub
pushf
and
fcoms
icebp
je
or
pop
and
sub
cmpsl
stos
push
mov
subb
andl
std
aad
jo
in
mov
inc
lods
clc
in
loopne
inc
lret
shlb
inc
jg
leave
dec
xchg
push
or
push
mov
and
mov
cmp
push
test
jge
pop
scas
or
sub
pop
and
insb
fwait
add
add
loope
inc
addr16
jecxz
fsubrl
movsb
xchg
sbb
imul
in
lea
aaa
stc
call
jae
in
addl
mov
sub
inc
jmp
mov
fwait
xchg
and
mov
shrb
orb
dec
insb
pop
int
and
add
mov
and
xlat
js
js
out
jle
cli
jmp
jns
xchg
icebp
int3
adc
jecxz
andb
push
dec
shll
pop
aam
das
lcall
sub
test
cmp
test
jg
outsb
sub
jmp
arpl
push
stc
push
push
popa
ljmp
enter
add
dec
data16
dec
push
popa
aad
pop
sub
mov
nop
inc
jecxz
outsb
xchg
cmpsb
dec
clc
pushf
fldcw
adc
mov
pop
orl
mov
xchg
sbb
add
lahf
sbb
cltd
jns
mov
scas
movsb
xchg
mov
sbb
mov
inc
data16
aad
out
push
pop
adc
inc
daa
fstpl
js
adc
out
mov
or
push
nop
inc
adc
sahf
sub
nop
sub
addl
jg
xor
es
negl
fcmovbe
dec
fnstcw
cli
inc
xchg
or
xchg
cmp
dec
stos
sbb
dec
lcall
sub
xor
dec
cltd
jnp
xor
call
imul
add
clc
dec
mov
popa
pusha
pop
cld
pop
in
leave
repnz
sbb
inc
stc
stos
inc
push
lods
dec
push
imul
stc
jae
sub
adc
cmp
cmp
rclb
iret
dec
sbb
jo
jmp
bound
popa
adc
pushf
js
pusha
loop
inc
jno
test
pop
xchg
pop
pop
lret
mov
out
pop
pop
pop
jo
in
popl
insb
jmp
xchg
loope
push
jl
scas
push
rcrb
into
cltd
std
mov
rcr
cwtl
mov
mov
icebp
mov
loope
pop
push
mov
test
testl
mov
and
enter
xchg
pop
aam
sbb
dec
pusha
mov
movsb
fdivp
push
lock
jge
imul
addl
mov
jo
test
push
out
inc
cld
pop
jle
jle
cwtl
pusha
inc
sti
jae
xchg
mov
test
mov
pop
or
xor
cli
call
bound
inc
sbb
aad
repnz
inc
test
jl
mov
lcall
mov
cld
jns
lret
inc
insb
sub
jp
shll
or
jb
pop
mov
inc
shlb
rcll
bound
lods
les
xchg
loope
jp
ret
lcall
dec
or
mov
fs
repnz
push
dec
cltd
addr16
sbb
sub
mov
xchg
data16
outsb
ds
imul
jp
insl
aaa
and
inc
sub
xor
shlb
sub
jne
sub
scas
cltd
cmpsw
sbbb
bound
add
ret
dec
ret
and
jmp
push
lods
mov
add
or
loop
xchg
je
shlb
loope
std
xchg
push
mov
jmp
roll
addl
sbbl
pusha
cld
adcb
sbb
js
add
jmp
pop
add
add
and
xlat
ljmp
dec
test
xchg
jns
adc
inc
sbb
mov
jp
inc
das
pusha
inc
jmp
mov
clc
cmc
xchg
add
pop
scas
jae
jnp
hlt
imul
cli
cwtl
push
shll
inc
popf
arpl
pusha
xchg
nop
int
pop
fiaddl
ret
sarl
sub
jmp
insb
pushf
insb
pushf
and
jge
pop
lods
addr16
jp
ret
shrb
sub
insb
insb
out
scas
andb
inc
mov
adc
arpl
xchg
cwtl
jb
mov
pusha
rol
sbb
lds
add
jp
pop
lcall
enter
dec
in
pusha
test
loope
jmp
and
sbb
rolb
pushl
hlt
pusha
jne
mov
jbe
jl
fdivrl
and
aad
cmp
sub
out
add
addr16
fsubrl
jns
imul
imul
jp
test
pushf
inc
inc
pop
push
fstpt
pop
inc
mov
fwait
pusha
add
out
outsb
push
les
int3
mov
arpl
lods
sub
dec
inc
dec
sbb
inc
push
std
jp
mov
push
nop
sub
lods
aaa
data16
cwtl
mulb
das
mov
jo
aaa
imul
sub
pop
addr16
mov
adc
lods
jb
in
cmp
insl
popf
mov
jge
popa
aas
mov
das
and
out
cli
rol
and
test
rolb
mov
out
scas
sub
in
ds
pushf
jo
fdiv
sub
inc
dec
cmp
inc
mov
cli
hlt
dec
ds
mov
lret
cld
js
repnz
jecxz
and
push
clc
adc
pushf
in
sub
dec
mov
test
pop
test
jns
pop
fildll
arpl
data16
jb
fstps
mov
subb
push
add
add
mov
std
outsl
rcll
orl
push
jp
aaa
add
pop
mov
push
test
hlt
push
mov
pop
out
mov
daa
lods
jecxz
jl
xchg
and
jecxz
push
lods
xlat
gs
rcl
in
int3
adc
popf
dec
push
mov
jp
adc
stos
inc
cmpsb
jns
mov
cmp
and
scas
fdivrl
bound
jge
add
mov
aaa
repz
sbb
jp
imul
loope
jl,pn
jp
into
cmp
jp
clc
lods
in
push
sbb
cwtl
andb
test
inc
iret
jbe
mov
lret
pop
push
js
xor
cmpsl
cltd
test
adc
jg
data16
insb
pop
in
mov
outsl
lock
popa
js
clc
cmp
js
fwait
add
fsts
xlat
fs
push
aad
adc
inc
outsb
clc
sub
jne
mov
adcl
into
imul
mov
pusha
xchg
xchg
arpl
xchg
std
mov
or
test
push
out
imul
imul
push
loope
mov
mov
sub
jno
out
test
mov
mov
popa
dec
subl
stos
fistl
cmp
fcomp
xor
loope
lock
inc
gs
cltd
push
pop
adcb
cltd
xor
sub
xchg
adc
sub
jo
cli
inc
cmp
movsl
dec
js
xor
popa
mov
jnp
pusha
push
je
jns
sub
fsub
jo
jle
and
ds
xchg
inc
ret
sub
push
outsb
mov
push
mov
fildll
addb
out
lret
stc
mov
test
clc
lcall
out
scas
mov
jns
jge
pop
int3
fs
fsubrp
in
jl
popa
clc
pop
inc
ret
nop
loope
jmp
adc
mov
scas
adc
lods
out
pop
inc
mov
cltd
jecxz
repz
jmp
jge
fcomp
scas
fistl
jns
popl
jae
lahf
inc
loopne
je
and
jl
mov
pop
pop
inc
lea
mov
jnp
cmp
push
loope
jmp
jmp
pop
lods
inc
inc
loopne
pop
mov
icebp
ss
das
iret
popf
pop
subl
jb
pop
in
pop
xchg
dec
test
jae
inc
jno
nop
ret
pop
test
xor
fmuls
jno
sbb
adc
jg
inc
adc
jns
jbe
mov
fsts
cs
push
jns
cmp
xor
in
push
imul
jbe
stc
cmp
and
pop
cli
xor
pop
jmp
adc
jle
les
mov
push
mov
or
cmc
cmp
dec
sahf
aaa
add
and
xchg
outsl
aad
std
pop
and
add
mov
xchg
orb
mov
xchg
int3
sub
test
loope
int
mov
and
mov
jns
adc
sub
pusha
fisttpl
pop
ret
mov
xchg
or
or
mov
fstl
je
aas
insl
ljmp
mov
fistpll
stc
push
mov
adc
and
jp
arpl
popa
xchg
scas
cli
cwtl
or
lds
jmp
xchg
jle
pop
cwtl
in
and
into
pushf
pop
mov
loope
push
negb
insb
dec
ret
pop
in
sbb
adc
roll
sbb
arpl
jecxz
push
xor
scas
push
test
cwtl
mov
sub
ret
mov
dec
xor
jnp
sbb
fidivl
lahf
loope
add
clc
sub
icebp
sbb
lods
pusha
jns
popf
insb
nop
dec
ljmp
cli
shr
ja
lcall
jo
cmp
pop
imul
incl
fsubrl
ret
jle
mov
nop
lods
jo
jbe
pop
add
sub
xchg
fbstp
xlat
cmpsl
in
pop
mov
inc
nop
push
pop
mov
mov
jp
shlb
bound
insb
insb
mov
jae
in
popa
test
and
sbb
mov
loop
jns
adc
in
cwtl
dec
xchg
fdivrl
mov
inc
scas
lods
cwtl
jns
std
xor
inc
push
scas
pop
jb
imul
xchg
mov
cmpb
and
in
scas
adc
pop
cmpsb
cmp
in
stc
std
fwait
jg
imulb
or
int3
out
mov
lcall
mov
and
xchg
stos
nop
mov
or
add
outsl
pop
dec
popa
inc
push
sahf
mov
push
popf
xchg
stc
jg
mov
cmpsb
xchg
xor
cltd
in
repz
add
lods
call
jmp
scas
or
bound
mov
movsb
popf
insl
cmp
arpl
popa
add
addr16
jmp
mov
pushf
mov
inc
in
add
mov
inc
lret
dec
mov
jg
cmc
mov
jmp
cmc
mov
es
call
stos
addr16
sti
cmc
inc
shl
adc
fsubl
inc
cmc
clc
movsb
fistpl
fcoml
mov
mov
mov
jns
mov
xchg
cwtl
cmpsl
lcall
rclb
aam
dec
cmpsb
scas
mov
popa
add
pop
push
stos
iret
mov
je
add
mov
mov
mov
xadd
arpl
mull
popf
jp
pop
es
test
repz
and
lea
sti
jle
data16
pop
stos
mov
push
mov
inc
and
sub
negb
add
xor
jecxz
jnp
fsubp
fisubl
sub
or
jnp
loopne
or
push
pushf
aas
sbbb
in
jl
mov
ja
jg
movsb
mov
popa
pop
mov
pop
adc
nopl
adc
or
push
mov
bound
insb
loop
mov
jp
jp
adc
pop
pushf
sub
pop
sub
xor
into
call
jge
outsb
clc
jns
pop
pop
int3
add
gs
ja
or
add
mov
push
stos
and
pop
orb
es
flds
lods
test
and
pusha
fnop
mov
mov
cmp
fstps
dec
cmp
pop
jp
insb
sbb
scas
sbb
mov
popf
enter
mov
ja
popf
and
inc
inc
xor
adc
scas
loope
mov
ret
xchg
and
add
out
mov
cmp
imul
shll
jnp
lret
mull
cwtl
rorb
test
pop
inc
mov
mov
insb
popa
test
push
jmp
adc
mov
jbe
fxam
fs
pop
or
xchg
int3
in
inc
dec
jg
lock
ret
loopne
data16
bnd
cmp
jbe
jne
je
je
punpcklwd
push
rcll
pushf
or
jmp
sbb
sbb
bound
shlb
jns
push
cpuid
fidivrs
sbb
stos
sbb
cmp
ljmp
or
lods
pusha
and
push
mov
push
cmp
sbbl
xor
pushl
jl
fstp
inc
mov
pop
or
jo
test
jp
lcall
xor
mov
sub
jg
jo
cmpsl
loope
lods
inc
adc
adc
cmpsb
or
out
ret
lods
cmp
insl
xor
push
push
cmp
lret
cmp
cltd
andl
out
mov
mov
gs
aad
aam
push
dec
xchg
movsb
call
pop
and
mov
and
dec
mov
pop
xchg
inc
pop
fimull
scas
mov
aad
cltd
or
mov
cwtl
jl
sahf
clc
sbb
lods
push
loope
int
xchg
popf
lcall
and
inc
imul
in
call
sbb
arpl
into
xor
pop
sbb
in
push
push
sub
xchg
popa
xor
lods
push
inc
test
mov
cmp
es
cmpsl
cmpsl
pusha
loopne
xorl
dec
mov
stc
out
bound
inc
inc
dec
jl
sub
pop
test
cmc
and
mov
pushf
sahf
pop
cmp
jl
jp
xorl
inc
sar
imul
pop
ja
inc
call
jbe
test
sbb
push
inc
stos
cmc
lock
test
xchg
int
or
push
ret
fnop
sbbb
inc
js
xchg
xor
dec
insb
call
int
je
rorl
pop
sbb
aas
pop
dec
gs
pop
mov
subl
pop
insb
lods
imul
pop
dec
lret
iret
push
jmp
jmp
hlt
mov
push
mov
mov
movsl
pop
fldcw
popa
xlat
or
out
jecxz
stos
bound
mov
mov
popf
ret
aaa
lcall
xchg
jmp
clc
adc
out
insb
in
sbb
adc
loope
insb
push
ret
out
mov
in
or
je
jo
insb
imul
fs
pusha
mov
dec
fidivrl
das
repnz
sbb
push
movsl
andl
stos
and
scas
fidivrs
into
pop
gs
sahf
pop
test
pop
sbb
jns
fxch
in
xor
loop
andl
add
addb
mov
sti
mov
mov
call
xchg
std
aam
gs
inc
jno
mov
pusha
pop
imul
mov
cmp
mov
cmp
test
call
jns
pusha
inc
es
mov
mov
push
orl
rol
mov
dec
outsb
dec
mov
adc
jge
aad
mov
fs
lret
insb
int3
jge
cmp
push
ret
imul
jl
insl
jp
push
push
or
das
jecxz
int
sbb
arpl
pushf
test
jns
mov
push
lea
add
std
mov
xor
mov
mov
test
sub
and
jmp
loop
jo
je
adc
fdivrs
cmp
arpl
push
pop
outsl
lcall
push
xchg
addr16
aam
mov
sbb
enter
je
mov
add
dec
xchg
lds
jo
xlat
mov
mov
in
or
aam
enter
pop
hlt
cmp
mov
push
ds
push
jp
cs
mov
testl
pusha
mov
subb
aaa
fdivs
pop
sbb
cmpsl
popa
xchg
dec
sbb
lea
outsl
cwtl
out
call
andb
das
jb
int3
arpl
pop
sbbl
shlb
fidivl
loop
mov
pop
jecxz
mov
mov
mov
xorl
addr16
ret
dec
xchg
pop
lahf
pop
fldenv
fidivrl
insl
push
mov
call
out
movsb
pop
outsl
int
push
sub
inc
or
jae
fcompl
pop
fdivl
pop
call
imul
pop
adc
inc
bound
aam
inc
cmpl
popa
push
mov
int3
lahf
cmp
jecxz
jl
lods
cmpl
int3
frstor
push
fdivrl
gs
xor
inc
jmpw
or
xchg
jb
jecxz
cmpb
idiv
fldenv
mov
ja
ljmp
rcrl
mov
int
fnstsw
icebp
adc
dec
push
mov
lret
push
call
push
bound
adc
cltd
pop
xchg
and
mov
cmp
lret
pop
pop
fcoms
rcrb
mov
pop
or
ja
mov
out
les
popa
aam
cwtl
push
mov
cwtl
mov
lahf
hlt
sbb
xor
sbb
cmp
cmp
jne
or
mov
dec
ljmp
inc
sub
addr16
xor
mov
xlat
xor
xor
sbb
cwtl
pop
jecxz
dec
icebp
lret
fdivs
jp
xchg
mov
int
mov
int
inc
pop
push
movsl
push
insb
insl
test
xor
jae
scas
subb
inc
sbbb
call
xor
xchg
inc
popf
lods
adc
stos
test
and
jne
xor
mov
pop
cmpsl
loopne
xor
sub
out
mov
mov
shrl
mov
fs
jbe
cmp
imul
mov
enter
andb
xor
xor
sub
arpl
xchg
movsb
imul
mov
cmpsl
jmp
inc
adc
sarb
cwtl
pusha
inc
adc
loope
andb
xor
cld
cmp
lods
in
test
xor
mov
push
gs
das
movl
push
pop
or
lea
pop
dec
mov
mov
mov
outsl
icebp
jecxz
dec
adc
push
bound
ljmp
in
cmp
and
xor
inc
into
xchg
cli
leave
cs
test
inc
mov
jae
dec
or
inc
pusha
call
or
fs
jnp
mov
call
test
in
gs
lahf
jecxz
or
xor
adc
mov
xchg
dec
aaa
lret
or
xchg
mov
fwait
int3
jo
sbb
fwait
sarl
stos
mov
mov
shl
or
aad
mov
fcmovbe
xchg
loope
pop
cmpsl
in
xchg
jb
or
lea
push
jnp
jbe
mov
adc
push
sub
cmpsb
jp
push
call
sub
loop
pop
add
rorb
or
or
loop
lahf
lret
or
jo
fmul
xchg
int
cwtl
push
mov
cmpsl
test
lret
sbb
popa
icebp
pop
mov
mov
xchg
js
andb
mov
pop
jg
rorb
xchg
pop
fcoms
xchg
sub
jo
fptan
call
int
lods
jmp
repz
push
pop
add
sub
push
cltd
xchg
push
push
pop
push
mov
dec
mov
sub
mov
imul
leave
or
addl
mov
sub
cld
lcall
and
push
jle
add
lret
bound
pop
lcall
xchg
cwtl
lcall
pop
addr16
mov
xchg
call
mov
push
imul
mov
adc
cmc
push
xor
inc
stos
cwtl
mov
loope
jne
mov
jno
andb
ja
jb
fwait
insl
fstps
sub
pusha
outsb
jp
inc
popa
sbb
data16
mov
sub
sbb
cmpsb
mov
add
and
rorb
jge
pop
lret
jae
outsb
sub
aaa
push
mov
ds
cltd
outsw
rol
aad
insb
sub
and
js
mov
insb
jne
mov
cmp
mov
mov
shrb
mov
mov
and
test
sbb
fstl
mov
mov
xor
addr16
rsqrtps
ja
test
pop
call
data16
jmp
out
jecxz
pushf
aam
daa
push
ret
and
mov
mov
adc
inc
scas
jns
addr16
arpl
stos
scas
das
sbb
imul
fnstsw
rcl
cmp
dec
das
movsl
outsl
cmpsl
out
xchg
xor
push
pop
jecxz
mov
frstor
inc
push
dec
jae
in
adc
insb
xor
push
add
popa
int
pop
push
icebp
sbb
orl
xchg
push
mov
mov
push
pop
clc
xchg
adc
test
mov
dec
cli
stos
lods
call
fisubs
jge
repnz
jge
pop
out
lods
push
push
outsl
pop
stos
xchg
imul
jg
das
sbb
mov
mov
hlt
or
sub
add
stc
loop
int
xchg
xchg
add
or
sbb
adc
pop
inc
inc
push
inc
inc
insb
inc
addb
sti
xchg
fs
into
pusha
fstl
push
pop
out
xlat
sbb
lcall
jnp
js
inc
movsb
rorb
cmpsl
inc
xchg
sbb
frstor
stos
or
pop
jg
ficompl
xchg
pop
fists
pop
mov
dec
xchg
arpl
aas
push
mov
mov
fs
push
pop
dec
add
imul
jnp
mov
mov
mov
imul
je
imul
inc
jp
sub
pop
sub
xlat
sbb
call
xchg
lret
and
fstps
cmpsb
inc
jl
pop
inc
outsb
and
cmp
or
inc
add
data16
mov
popl
inc
jg
jle
mov
adc
mov
mov
pop
jecxz
pushf
and
clc
sarl
push
mov
jo
cmpsl
out
mov
in
jmp
or
cmp
in
mov
imul
mov
ret
inc
int3
or
ljmp
stos
push
xchg
cwtl
pop
inc
aam
mov
adc
int3
dec
test
nop
andl
mov
and
mov
in
or
mov
imul
outsb
stos
dec
inc
xchg
mov
xlat
jbe
mov
push
test
loopne
push
inc
pop
adc
mov
and
xor
fs
sub
sarb
and
idiv
stos
xor
lods
orl
cmp
cwtl
xchg
pop
mov
xchg
subl
outsl
pop
mov
mov
adc
jg
adc
jo
mov
lcall
inc
jbe
jnp
inc
mov
in
mov
inc
stc
jg
lret
out
and
test
outsl
into
out
pushf
in
cmp
not
push
mov
or
icebp
call
sub
addr16
pop
bnd
mov
test
sub
sbbl
or
add
mov
xchg
pop
jns
clc
inc
dec
cmpsb
mov
mov
fisubrs
je
lcall
pop
inc
jnp
call
addb
dec
rclb
iret
cmp
out
frstor
pop
cli
adc
pop
pop
dec
lods
mov
sbb
orl
nop
cmp
add
push
ja
mov
dec
pushf
pop
mov
adc
xor
mov
int3
mov
jnp
mov
ljmp
in
shlb
in
add
and
mov
scas
inc
adc
sub
imul
mov
bound
sbb
dec
arpl
mov
push
in
sbb
fs
pushf
paddusb
fimull
pop
lahf
fs
fs
imul
es
push
mov
cmp
push
mov
pop
movsb
aam
xchg
dec
mov
mov
push
mov
xlat
mov
sbb
sub
ficompl
cmp
xlat
push
pop
data16
sbb
scas
subb
movsl
xchg
in
cmp
bound
xchg
cltd
insl
inc
fdivrs
js
or
push
cmpsb
pop
and
iret
mov
xor
dec
ljmp
outsb
dec
pop
cs
jne
add
es
loopew
jo
jecxz
outsl
shrl
daa
scas
outsl
jp
test
enter
mov
pop
mov
stos
lock
addr16
int3
sbbl
sbb
inc
outsb
loope
scas
mov
repnz
xor
test
sahf
arpl
js
fiadds
xchg
mov
mov
push
xor
pushf
inc
push
loope
push
add
mov
lcall
pop
xchg
cmp
fs
int
sar
push
lcall
insb
test
js
leave
ficomps
outsl
xchg
xlat
lret
imul
das
stc
sti
test
jge
sbb
insl
loop
out
test
in
jp
push
mov
mov
push
andl
pushf
int
ret
sar
nop
sbb
push
pop
cmp
jmp
js
pop
lock
sub
jae
lret
push
lods
xor
cmpsl
mov
dec
cwtl
mov
arpl
mov
pop
fimull
or
pop
mov
insl
pop
mov
flds
mov
testl
fisubrl
push
dec
cld
cld
loop
cmpsb
mov
mov
das
and
pop
push
cwtl
pop
pusha
mov
pop
nop
jns
das
ja
pop
andb
fwait
loope
pusha
push
sbb
adc
xchg
je
mov
test
cmp
mov
call
int
cmp
lods
inc
push
or
push
cs
jle
rcrb
ja
iret
pop
lods
mov
ret
dec
sub
addr16
xchg
push
inc
mov
loop
stos
fcoms
int3
push
out
bound
bound
cwtl
and
mov
push
mov
cmpb
adc
mov
pop
jns
insb
jmp
arpl
jmp
mov
jmp
sbb
test
insl
push
mov
addr16
outsb
jb
xchg
sbbb
dec
push
bound
push
leave
sub
std
pusha
lods
cmp
test
cmp
push
pop
jmp
dec
outsb
xchg
pusha
jge
dec
in
adc
push
or
pushf
movsb
sub
jge
sub
fsubrs
ret
lds
push
aam
pop
dec
add
adc
xlat
add
jp
std
rcrb
fstps
das
andl
sbbl
loope
or
fnsave
add
cltd
fcoms
pop
mov
lods
mov
cltd
ret
jge
rcll
icebp
push
pushf
xchg
dec
mov
cld
jno
pop
mov
xchg
jp
mov
mov
movsb
mov
insb
mov
insl
add
add
inc
loopne
enter
xchg
mov
xchg
popf
mov
xlat
in
into
mov
mov
scas
lods
stos
mov
pop
mov
and
or
fldenv
push
popf
inc
int
inc
dec
jle
inc
sti
lea
fstl
mov
lret
sbb
in
arpl
imul
add
jne
push
mov
dec
push
ret
dec
mov
addr16
lods
test
xchg
je
mov
dec
pop
xor
pop
mov
sbb
inc
cmp
adc
in
mov
or
stc
push
lock
shrb
xchg
sbb
jb
lock
dec
push
dec
test
dec
pop
pop
je
and
aaa
fs
jge
insb
insb
push
in
and
jg
and
imulb
jmp
or
rorb
les
aam
iret
mov
shrl
xlat
inc
inc
cmp
ljmp
pusha
mov
fcompl
sbb
fs
lret
loopne
jbe
pop
pop
in
pop
icebp
dec
repnz
push
rorl
cmp
mov
push
mov
xchg
aad
loope,pn
push
loop
lahf
jge
out
out
popf
movsl
cmc
addr16
daa
mov
push
lods
js
int
push
inc
sub
push
lods
sbb
pop
xchg
sub
movd
fldenv
pushf
xor
loop
mov
pop
loop
mov
pusha
in
test
adc
in
enter
pusha
aad
pusha
pop
jno
fs
jno
shlb
fs
mov
pusha
nop
mov
loop
fcmovb
inc
push
push
mov
sub
add
fldpi
test
push
xor
in
mov
test
or
jbe
mov
sbbl
pushf
jae
je
push
loope
bound
xor
xor
cmc
jp
movsl
push
and
mov
in
xor
es
adc
out
fnstcw
inc
addr16
sbb
mov
fstpl
shrb
call
insb
psubb
addb
insb
int
cltd
push
and
and
lret
inc
out
lcall
insb
bound
mov
jb
cmpsl
enter
lahf
divb
push
push
je
rolb
test
ret
in
fwait
inc
sahf
ret
mov
movsb
inc
cmpsl
mov
enter
loopne
subl
mov
pop
add
lock
in
andl
test
test
sub
sbb
inc
dec
leave
ds
scas
sti
addb
mov
inc
shrb
stc
cmpsb
addr16
leave
inc
idivl
flds
sarl
dec
stc
xchg
bound
popf
sbb
add
fsincos
push
inc
in
or
inc
icebp
add
jb
push
xchg
push
scas
mov
in
movsb
cmp
stos
jecxz
cmpsl
jl
adc
cmc
ret
inc
aaa
pop
lea
mov
push
jmp
out
jno
pop
movsb
pop
insb
test
lock
ja
lret
xorl
push
test
enter
rorl
push
pop
int
jb
test
jle
mov
loopne
into
mov
pop
int
stc
outsl
addr16
xchg
out
or
pop
pop
xchg
mov
xchg
mov
jecxz
mov
loopne
sub
ficoml
scas
mov
or
pop
ss
dec
lret
adcl
aas
xchg
cmp
jg
enter
outsb
scas
push
mov
sahf
lret
push
in
rclb
and
shr
arpl
pop
dec
call
mov
loop
xor
dec
mov
mov
lods
mov
xchg
mov
loope
scas
je
xchg
mov
inc
mov
cmp
cmp
xor
or
mov
clc
lret
xor
and
and
adc
stc
adc
test
xchg
dec
fadds
dec
jp
ljmp
js
inc
out
mov
test
stos
lods
clc
jne
mov
inc
and
add
push
test
or
shlb
jb
mov
into
repnz
out
sbb
sar
inc
pop
xchg
sbb
data16
lret
adc
xchg
xor
push
mov
sub
push
jg
fs
sub
sub
pop
andl
jae
cwtl
adc
mov
sub
stos
nop
leave
hlt
call
imul
call
mov
rcr
xchg
xchg
int
adc
adc
mov
inc
xchg
mov
enter
sbb
mov
pop
out
inc
dec
pushf
inc
popa
push
and
mov
enter
test
mov
int
and
int3
xor
xor
das
inc
jb
popf
push
je
jge
repz
xchg
popf
pop
dec
sbb
lret
cmpsb
popa
int3
popa
shr
popa
mov
pop
dec
cmc
dec
imul
stos
js
inc
mov
fwait
cmpsb
int3
mov
cmpsl
jg
pop
xchg
mov
dec
clc
mov
je
ret
push
and
in
jp
movsb
inc
clc
push
sub
lds
mov
je
addr16
cmp
loope
xchg
add
pop
int
js
xchg
aam
lods
inc
aaa
mov
fcomps
pop
pop
sbb
lods
xchg
sarb
push
xchg
mov
mov
mov
push
or
adc
adc
mov
idiv
sbb
lock
jp
push
push
repnz
xor
std
lods
les
arpl
sub
mov
loope
loopne
loope
pop
dec
pop
cmpsb
jmp
cld
mov
loop
and
inc
out
sub
mov
xor
sbb
sbbb
jecxz
push
push
add
test
test
pause
adc
pushf
jb
dec
adc
mov
roll
mov
or
mov
push
or
inc
dec
test
pop
dec
or
pop
sahf
insb
loopne
stos
jmp
mov
adc
sbb
rcll
data16
mov
stos
rolb
inc
addl
iret
outsb
sbb
mov
jp
mov
fistl
clc
mov
cmpsb
shlb
cmp
jae
loop
fstpl
cwtl
sbb
jns
shr
mov
ficoml
mov
popa
test
loopne
dec
xchg
scas
inc
scas
mov
and
push
push
mov
test
stos
mov
jmp
xchg
mov
out
add
stc
test
inc
mov
movsb
mov
test
lahf
outsl
mov
orb
ds
mov
push
push
imul
sahf
mov
loop
inc
js
push
or
add
pop
std
xor
lock
dec
sbb
sbb
ficompl
dec
pop
jl
les
sub
jo
lods
mov
adc
lret
in
lahf
cwtl
jl
cwtl
cmp
pop
lcall
push
sub
inc
popa
orl
sarb
jnp
mov
js
shr
das
test
rolb
cmp
scas
sbb
out
lea
sbb
inc
popa
int3
in
stos
pop
mov
stos
pop
xor
push
aad
inc
mov
mov
pop
pop
adc
imul
pop
lea
stos
shlb
imul
cwtl
popa
loopne
inc
test
mov
xchg
pop
xchg
call
jno
jg
call
mov
adc
movsl
imul
mov
sahf
insb
and
pop
pop
js
or
outsb
in
icebp
stos
stc
insb
pop
xlat
mov
push
aad
test
push
jl
adcb
imul
in
mov
mov
pusha
aam
xlat
push
into
mov
pop
cltd
mov
sbb
cld
andl
and
jno
js
je
and
lods
loopne
outsl
xor
inc
lods
ret
xchg
popa
and
mov
rcrb
movsb
inc
scas
adc
xchg
mov
inc
jae
lock
mov
mov
mov
das
andps
das
in
shl
lret
roll
loopne
push
inc
and
jge
jmp
bound
cmc
inc
mov
pop
push
iret
jg
push
and
adc
sub
je
pop
fwait
pop
insl
dec
pusha
imul
pop
push
or
aaa
jnp
lods
cmp
out
dec
push
push
pop
sub
int3
pop
xchg
xor
mov
cwtl
or
mov
in
int
out
into
loope
push
pop
in
movsb
out
fistl
cwtl
int
mov
jecxz
and
fld1
loop
pop
cli
ds
mov
push
mov
sub
jp
arpl
addb
pop
mov
repz
jmp
xor
add
inc
ds
sbb
out
mov
outsb
dec
test
aad
bound
cmp
inc
out
sahf
lret
cmp
cmpsb
scas
mov
mov
or
inc
imul
sbb
negb
or
pop
enter
sub
pop
dec
ret
imul
bound
or
cwtl
shll
repnz
fistpl
mov
mov
mov
fucomip
push
scas
jbe
mov
inc
fcompl
cmp
sbb
sub
mov
xchg
test
mov
jmp
sbbb
push
fs
pop
bound
int
cmp
fcomp
lods
xor
lea
call
xchg
adc
push
ret
ret
das
test
push
sub
cmp
in
repnz
cwtl
sti
imul
push
push
rcrb
mov
xchg
push
xor
fldcw
cwtl
popf
inc
out
mov
lods
cmp
gs
inc
shrb
push
dec
jp
insl
xchg
lods
xor
movsb
cmp
cmc
or
add
lods
xchg
stos
jnp
mov
arpl
push
out
outsb
jl
nop
leave
mov
cmp
ret
mov
movsb
out
popf
fildl
xor
sbb
into
das
outsl
movsl
mov
ret
mov
outsl
pop
add
stc
xchg
loopne
std
adcb
mov
sbbl
nop
lods
hlt
and
imul
push
or
loopne
jmp
xchg
dec
test
fwait
icebp
pushf
loopne
jl
sbb
mov
mov
inc
xchg
jmp
push
mov
dec
xchg
pop
jp
lock
mov
scas
stos
adc
inc
xor
stos
popf
fsubrs
in
push
jecxz
sti
lods
pop
leave
shrb
inc
mov
cmc
pop
mov
enter
addl
ret
xchg
xchg
movsl
cmp
sbb
out
jecxz
xor
xchg
js
loope
push
sti
cmpsl
add
xor
sbb
jno
aas
sbb
in
xchg
mov
xchg
pop
inc
ret
inc
test
js
xor
push
dec
movsb
inc
orps
mov
mov
insl
cli
adc
inc
or
cwtl
mov
inc
mov
or
cmp
xchg
loopne
addr16
cld
lods
jle
hlt
ret
and
and
insl
xlat
popf
cltd
test
adc
mov
xor
in
pushf
in
pop
inc
mov
orl
lret
data16
mov
push
pop
sub
mov
cld
inc
popw
jge
frstor
jmp
cwtl
xor
pop
bound
inc
shll
popa
mov
pusha
cmp
dec
push
popf
insb
pop
jo
mov
popa
out
jl
mov
mov
clc
pop
js
inc
pushf
sub
pusha
andl
pusha
and
cmp
push
negl
or
shl
fcoml
sub
push
inc
xor
in
outsl
xchg
adc
cltd
dec
out
sbb
inc
ljmp
xchg
popa
and
fiadds
orl
insb
inc
mov
stc
jle
insl
push
stc
sub
mov
data16
arpl
pop
mov
das
fs
iret
loope
xor
pop
sbb
adc
addr16
enter
out
sub
std
pop
rcll
adc
js
arpl
arpl
fs
nop
js
xor
sub
test
or
mov
sbb
cmpsl
adc
jp
jmp
sub
or
in
scas
inc
outsb
outsl
xchg
sbb
movsl
or
inc
cli
int
fs
iret
insb
int
dec
and
push
std
mov
mov
in
or
iret
mov
adc
loope
das
es
pusha
out
and
cmpsb
rcr
and
fwait
out
fstpt
jecxz
push
into
mov
dec
insb
mov
inc
push
in
sbb
outsl
fstps
loopne
fsubrl
mov
sti
insb
fwait
pop
imul
movsb
sbb
inc
sub
mov
pop
fmuls
sub
sbb
xchg
xor
roll
jl
mov
aaa
dec
enter
fmull
jmp
out
jmp
cwtl
jg
xor
pusha
pop
inc
and
pop
adc
sbb
insb
cmpsb
mov
mov
push
or
xor
lea
fstpl
pop
or
xor
inc
mov
push
inc
imul
dec
push
sub
sub
scas
bsf
pop
lret
ret
adc
xor
daa
out
jp
xchg
andl
xor
mov
scas
push
sub
shll
cmp
jno
lods
std
adc
mov
gs
inc
aam
xor
arpl
pop
adc
pushw
dec
leave
jbe
mov
mov
nop
dec
fiadds
xor
inc
push
jp
and
jae
sub
andb
jne
imul
aam
xlat
mov
in
test
imul
aad
daa
push
outsl
es
push
in
dec
stc
scas
gs
je
shrb
inc
std
and
xchg
add
mov
popf
mov
fs
mov
xor
mov
shrb
pushf
adc
pop
cmp
mov
insb
pop
mov
mov
sub
xchg
inc
jo
cwtl
pusha
int3
jb
jae
test
pop
test
sarb
jb
int3
rolb
inc
loope
adc
ljmp
push
xor
sub
scas
push
sub
fisubrs
sahf
xchg
dec
test
push
pop
lock
out
jmp
xchg
jb
hlt
mov
push
pop
sub
push
in
jb
mov
or
stos
or
test
in
enter
rorb
adc
jno
pusha
push
push
xorb
cmp
enter
pop
int3
bound
sub
jbe
push
out
testl
adc
dec
sahf
mov
mov
into
mov
cwtl
ret
adc
dec
fsub
jmp
pop
xor
cmp
lds
jo
ljmp
and
das
cmpsl
mov
pop
movb
add
inc
cltd
mov
test
lock
push
xchg
pusha
jae
out
int
dec
jno
popa
sbb
inc
imul
xor
cmp
cmpsb
test
cmp
stc
push
adc
pushf
jbe
mov
dec
xchg
mov
push
adc
jp
mov
mov
mov
mov
cmpl
mov
mov
pop
inc
pusha
imul
test
lret
push
fcmovbe
push
stos
repz
jo
xchg
pop
cld
pop
pop
je
shr
push
adc
and
enter
pop
mov
popf
or
fldenv
sbb
mov
sbbl
testb
push
add
es
push
pop
negb
cmpsb
inc
popf
jp
fidivrs
cli
cmp
aad
fstps
mov
inc
push
sbb
adcb
call
or
pop
js
stos
lods
mov
int3
fistl
int
fldl
test
sbb
mov
jge
pop
inc
test
dec
mov
mov
push
imul
sbbb
mov
sbbl
xchg
mov
jge
xorl
int3
sbb
push
lods
call
sub
jns
push
insb
dec
cli
ficoml
pop
pop
inc
inc
and
mulb
scas
xchg
sbb
and
cmpsl
les
pushf
xchg
push
loope
xchg
and
add
jl
ljmp
iret
scas
adc
jge
sub
test
lods
pop
sub
pop
xor
jnp
js
fsubs
addr16
xor
push
xchg
dec
cmp
sarb
frstor
xchg
icebp
imul
arpl
popf
pushf
adcb
sub
push
add
cltd
add
cmpsb
inc
inc
stc
dec
and
lds
mov
outsb
cmpsb
and
enter
loop
lods
lods
test
call
xor
lret
shll
mov
sub
nop
mov
push
std
add
and
adc
push
lea
roll
sahf
popa
jns
push
jb
cmp
sub
push
in
inc
test
mov
push
mov
mov
cs
or
mov
and
push
mov
arpl
push
fistps
int3
pop
loope
ljmp
and
aas
mov
mov
nop
iret
jp
bound
mov
jg
and
ds
lock
mov
fbld
int
and
pop
dec
outsb
pop
xchg
mov
int
inc
pop
sbbb
xchg
xchg
mov
sub
jge
jmp
stos
jnp
jle
lret
out
rorl
js
rolb
int
or
shr
repz
ret
in
pop
mov
add
int3
xchg
incl
sbb
sub
fstl
xchg
outsl
int3
test
call
mov
scas
jge
fld
mov
xchg
imul
leave
inc
pop
call
je
mov
and
fnstcw
loop
or
inc
and
loopne
inc
fcompl
fdivs
clc
loope
out
xor
xchg
scas
jp
mov
xchg
aam
cs
scas
push
pop
xchg
fsubrs
in
cwtl
cld
or
jl
jle
je
mov
out
cltd
pop
jns
xchg
js
scas
mov
pop
xchg
or
mov
dec
aad
fiadds
ljmp
imul
and
jecxz
sub
test
inc
dec
jmp
mov
nop
and
jnp
cmpsb
out
lret
scas
insl
js
gs
cmp
jecxz
aaa
jmp
wrmsr
out
ret
xchg
es
mov
mov
xor
pop
sbb
dec
aaa
adc
xor
mov
pop
dec
xchg
cwtl
jno
pop
push
mov
mov
sahf
pop
imul
cwtl
mov
stos
inc
fcoml
and
mov
mov
xchg
jp
paddusb
push
mov
or
xor
stos
cltd
test
xchg
cli
pop
inc
dec
mov
mov
aad
jns
fistpll
into
scas
popf
shlb
sub
adc
jle
sarl
shrl
inc
sbb
inc
in
ret
jg
push
sbb
aam
outsl
nop
mov
mov
push
rcr
mov
mov
fs
int3
xor
push
cmp
sbb
xchg
jp
movsl
in
xchg
imul
ja
add
mov
pop
iret
pop
sbb
and
sbb
popa
mov
jg
pop
jae
xor
scas
mov
cwtl
or
push
pop
enter
sbb
xor
popa
lods
int
popf
mov
shl
outsb
push
xor
xor
pusha
icebp
pop
popa
inc
cmpsb
xor
iret
sbb
aam
add
inc
push
and
daa
cmp
aaa
idivl
mov
mov
or
popf
mov
test
movsl
rcll
int
xor
not
mov
mov
and
lcall
jp
inc
rcrb
cld
push
js
xchg
insb
mov
stos
and
lods
sbb
nop
pop
sub
test
and
js
cmpsl
stos
pop
inc
inc
jns
mov
cli
xchg
pop
sbb
jg
sub
dec
pop
adc
sbb
push
lds
test
lret
decb
fs
test
push
jecxz
dec
pop
cli
pop
fcmovnbe
rcrb
pop
mov
jge
cmp
cwtl
jmp
popa
scas
fcmovnbe
mov
xlat
insb
aam
pop
add
cld
leave
fcmovu
cmpsl
sbb
xor
mov
sbb
dec
cmp
jnp
or
jle
es
je
mov
push
inc
mov
fsubrp
ja
jns
push
xchg
cltd
pop
nop
adc
adc
sub
xchg
fadds
jmp
or
mov
xor
rcr
int
sub
cmp
xchg
sbb
pop
inc
and
imul
push
adc
sti
or
jge
push
in
inc
jb
addl
jecxz
inc
sbb
shll
jns
loopne
xchg
gs
inc
andl
stos
fwait
cmpsb
pushf
jnp
int
cli
jle
stos
loope
je
jns
sub
insl
inc
stos
enter
xchg
arpl
cmc
arpl
and
mov
lahf
push
lcall
or
or
xchg
mov
mov
pusha
pop
popf
mov
lods
cmp
out
push
pusha
lcall
lcall
jecxz
cmpsl
addl
dec
fmull
dec
adc
inc
mov
or
adc
pop
inc
or
pop
cmp
mov
pusha
pop
fwait
loope
jl
insb
in
lock
sbb
dec
mov
pushf
xor
sbbb
mov
nop
inc
in
mov
shlb
shrl
out
xchg
fs
enter
adc
and
fsubl
loopne
in
inc
cwtl
inc
adc
cmp
adc
add
ss
jecxz
xchg
pop
arpl
push
fisubl
push
shlb
test
mov
sub
cmpsb
push
test
fsts
test
push
sbb
mov
fiadds
fdivrl
sub
add
addr16
les
sbb
les
inc
dec
ljmp
repnz
negb
in
subb
aam
xchg
pop
and
shr
fwait
cltd
jns
imul
outsb
mov
fwait
jp
nop
push
fs
imul
and
enter
cmp
lret
xorl
incl
sbb
je
ret
mov
imul
mov
into
pushf
std
xchg
pop
mov
lret
out
loopne
jns
stos
ljmp
movsb
cld
insb
mov
je
call
and
pop
stos
inc
in
xchg
mov
xchg
out
mov
imul
test
and
mov
lea
lcall
xchg
cli
sbbb
scas
test
lods
in
ret
sub
cmp
loope
int
cmpsl
pop
rcrl
sbb
xor
mov
stos
pop
je
mov
or
nop
adc
fistpll
shlb
into
lcall
adc
outsl
push
sbb
xchg
jle
lret
rolb
inc
data16
into
fwait
addr16
jne
cmp
mov
adc
call
xchg
jb
ja
mov
xchg
call
mov
mov
xchg
cmp
gs
lock
mov
or
aad
aad
stos
jle
mov
stc
and
lcall
push
movsl
inc
popa
adc
bound
lret
mov
mov
enter
xor
adc
pop
test
pop
lock
or
in
cmpl
inc
gs
sbb
rorl
jnp
aad
jmp
or
cmp
ds
pop
arpl
gs
mov
or
imul
call
cli
clc
lcall
outsb
out
inc
or
push
fnstsw
int3
outsb
aad
mov
cmp
mov
push
pop
jg
or
rorl
pop
fs
out
mov
mov
mov
loopne
push
fisttpl
jno
fwait
js
mov
stos
adc
inc
inc
xchg
fbld
sub
mov
jae
and
jg
int3
sub
ret
xor
xchg
add
shrb
and
pop
je
inc
push
adc
mov
sub
gs
in
js
hlt
iret
popf
sub
pop
cmp
fs
lcall
addb
fwait
cld
addb
or
call
call
pop
pop
cmp
xlat
adc
inc
pop
std
pushf
mov
inc
mov
in
movups
inc
cs
sbb
imul
nop
popa
mov
jbe
sbb
mov
enter
enter
fs
ds
pusha
std
inc
pop
mov
icebp
jl
sbb
clc
and
jecxz
cld
inc
xor
pop
or
js
andb
out
insl
pop
std
xchg
adcl
js
int3
mov
ljmp
in
inc
jp
adc
pop
inc
jnp
mov
inc
out
jo
bound
or
stos
inc
popa
out
push
orl
sbb
adc
fwait
adc
mov
push
ds
xlat
jge
arpl
out
js
add
arpl
pushf
push
je
adc
add
mov
int
jle
sub
jne
outsb
sub
imul
xchg
clc
cmp
sbb
mov
addr16
pop
loop
mov
dec
xor
dec
xchg
pop
xchg
cmp
xor
in
pop
aaa
push
lahf
outsl
fistpl
arpl
mov
out
and
popf
pop
xchg
mov
scas
subb
push
xchg
fwait
dec
arpl
mov
push
dec
loop
mov
in
xchg
lods
int
ja
pop
jg
rcrb
pop
arpl
int
sub
lcall
movsb
loop
out
outsb
push
jge
fcmovbe
stos
push
xor
in
popa
jne
mov
pop
dec
cmc
inc
imul
ds
mov
xchg
fcoml
outsb
push
hlt
push
pusha
jge
add
ljmp
sbb
imul
push
test
dec
jg
xor
in
mov
mov
addl
jae
pushf
ds
std
jmp
inc
push
arpl
fcoms
pop
inc
pusha
jecxz
jne
insb
out
mov
pop
arpl
mov
sub
push
cwtl
repz
push
push
push
pushf
bound
cmp
xchg
test
pusha
xchg
negb
jp
addl
out
clc
or
mov
imul
sub
movsl
call
inc
sti
subb
stos
movsb
out
aam
jl
pop
stc
adc
adc
filds
loope
xchg
mov
jne
pop
mov
getsec
addr16
inc
scas
pop
sbb
shlb
gs
jl
mov
pop
jmp
clc
and
mov
push
pop
int
mov
push
pminub
test
iret
mov
push
js
xor
jne
sbb
scas
pop
rolb
sub
pop
addr16
fisubrl
aaa
sbb
mov
adc
xchg
and
jl
xchg
popl
xchg
mov
dec
scas
call
into
or
je
fbld
push
sbb
stos
addb
notl
cmp
cmp
pusha
jge
inc
push
inc
mov
lods
scas
stos
je
shrb
xchg
loopne
fsub
sbb
ud1
inc
pop
mov
pop
adc
addl
mov
sbb
lea
das
rclb
pop
xchg
roll
xor
lods
xchg
dec
je
dec
mov
mov
mov
inc
ss
data16
lock
sti
fs
sbb
jns
mov
loopne
stos
add
push
rcr
jmp
push
inc
dec
out
push
adc
jl
push
jb
stos
push
rorl
dec
shlb
cmpsl
cs
adc
sahf
inc
push
mov
sbb
mov
sub
int3
in
imul
push
mov
fwait
imul
or
xor
movsl
sbb
scas
push
jecxz
sbb
in
cltd
xor
adc
jns
jo
xchg
dec
aaa
sti
mov
xchg
xor
or
xchg
dec
mov
push
mov
nop
push
fldcw
inc
add
push
shrb
add
inc
loope
int
jo
fxch
fsubrl
xchg
inc
loope
ds
xorb
mov
inc
dec
popa
inc
imul
jbe
arpl
fsubs
cld
cmp
sub
add
add
mov
fisubrl
or
shlb
mov
lods
int
jne
popf
ljmp
sbb
fmul
xor
sti
sbb
test
popa
iret
sub
xchg
jl
pmaxsw
jb
dec
stos
cmc
cmp
add
fistps
mov
xchg
or
pop
in
es
ds
add
bound
or
inc
dec
inc
mov
mov
insl
outsb
adc
mov
adc
mov
frstor
lods
pop
lcall
aas
out
lods
push
jmp
and
xor
stos
mov
iret
jl
movsb
push
push
inc
sbb
pop
push
push
xchg
ret
pushf
leave
push
push
stos
movsl
ljmp
pop
xchg
es
lea
push
mov
inc
jb
inc
mov
das
xor
pop
mov
cmp
push
cmpsb
pop
add
pop
addb
add
inc
in
rcr
adc
mov
dec
cmp
out
fsub
jns
in
xchg
xchg
sub
inc
and
aam
stos
lea
adc
testl
jp
test
jns,pn
test
imul
jp
adc
dec
pushf
jnp
stos
fdivl
arpl
je
push
push
fisttpll
fisubrs
incl
sbb
mov
adc
inc
mov
jp
cmc
fcmovnb
pop
loope
pop
inc
test
xchg
inc
fwait
leave
xor
imul
jg
sbbl
sub
popa
xchg
sub
imul
dec
fs
sub
xlat
int3
pop
sbb
mov
popa
je
dec
movsb
xor
lods
push
call
or
mov
fs
das
jae
out
and
sub
sbb
dec
ret
lcall
popa
push
test
pop
out
movsb
inc
popf
scas
jmp
ficompl
xor
push
movsl
jle
xchg
ret
fistpll
ja
sbb
jnp
cwtl
cltd
mov
xorl
pop
ret
das
popa
sahf
mov
lods
mov
adc
cmp
push
jle
mov
int
cmp
lods
sbb
dec
pop
xor
jbe
jge
mov
sub
jecxz
scas
xor
test
and
mov
jl
xchg
xchg
std
pop
dec
insb
or
cld
inc
daa
stos
int
ljmp
or
cmp
jmp
jnp
pusha
inc
loopne
jno
dec
push
mov
mov
cmp
cmp
lret
xchg
push
sbb
test
addr16
and
sub
xchg
mov
push
nop
xchg
stos
fidivrs
mov
jl
mov
mov
xor
lds
xchg
arpl
stos
imul
pop
ficompl
inc
mov
inc
push
mov
aam
fs
dec
mov
push
idivl
stos
cmp
mov
punpckhwd
rorl
adc
lahf
push
cltd
mov
jg
out
cwtl
push
sbb
jns
cmc
inc
in
jmp
daa
and
mov
ret
adc
push
xchg
icebp
pusha
cwtl
pusha
inc
subb
scas
adc
int3
cmc
lret
xchg
sub
push
in
push
js
cmc
scas
and
jo
cmpsb
test
sbb
add
pusha
addl
sbb
loop
lods
jecxz
cmp
int
icebp
imul
or
in
push
mov
jns
in
testl
insb
mov
cmpsl
jp
js
scas
mov
outsl
xchg
imul
sub
dec
push
mov
xor
mov
pop
pushf
pusha
mov
cmpsl
cmp
pop
mov
dec
pop
in
dec
push
lock
mov
push
xor
outsl
mov
lret
ror
lods
repz
push
mov
xorb
add
fcoms
mov
inc
mov
xorb
add
jns
push
jno
ljmp
adc
xchg
mov
ftst
cmp
or
insb
clc
aad
das
push
push
loopne
orb
ljmp
xor
xchg
mov
fstpt
cmp
out
mov
ret
add
cmp
mov
lahf
pop
pop
stos
inc
xchg
mov
and
cmpsl
xchg
test
sub
adc
out
fdivs
inc
mov
popa
dec
iret
inc
lds
int3
scas
cltd
hlt
imul
push
lock
lods
mov
sub
inc
push
in
add
inc
and
mov
xor
mov
sbb
mov
mov
cmp
fsub
mov
int3
mov
sahf
push
sbb
rcrl
repz
push
pop
pop
rorl
cmpsb
lods
mov
outsb
jecxz
outsb
jb
xorl
mov
outsb
dec
adc
mov
add
cs
aaa
xchg
cmpsb
stos
dec
scas
mov
xor
scas
pop
nop
push
push
jae
cld
xlat
leave
out
insb
outsb
inc
xchg
xchg
cmpb
mov
cmp
nop
in
jns
pusha
sbb
push
stos
xlat
clc
xchg
int3
mov
fnstcw
fistpl
fistpll
xchg
and
lds
push
jbe
mov
dec
fstps
dec
mov
xor
pop
hlt
clc
sub
lods
pop
lcall
push
adc
and
jecxz,pn
rorb
dec
imul
xor
outsl
and
push
sbb
jo
out
mov
add
cwtl
sub
sub
cltd
das
movb
sbb
push
and
mov
test
fsubl
dec
in
sahf
cltd
xlat
or
fldcw
pop
pop
jecxz
cmp
xlat
inc
imul
mov
pop
fstpt
push
xchg
sub
data16
test
stc
stos
pusha
int3
sbb
pop
aaa
pop
inc
xor
mov
orb
sbb
pop
hlt
xor
fldl
into
into
jno
push
js
push
mov
jo
pusha
jno
cmp
mov
mov
aaa
push
dec
and
imul
imul
popa
insb
xor
imul
in
cmpsl
test
into
sarb
out
mov
repz
pop
icebp
not
cmp
pusha
pusha
cmp
adc
push
call
shll
dec
ret
cmpsl
scas
push
loop
out
ljmp
dec
jecxz
iret
ljmp
sub
outsb
loope
inc
or
xchg
jns
or
pop
popa
fldt
cs
inc
pusha
pushf
jecxz
in
lods
cmp
mov
push
pushf
test
dec
nop
cmp
add
or
sub
mov
fsubl
sar
sahf
cmpsb
jl
cwtl
test
pop
sarl
popf
faddl
stc
stc
mov
iret
leave
pop
gs
add
ret
cs
into
imul
push
adc
mov
mov
das
lock
xor
mov
pop
insb
pop
inc
or
insl
xlat
jge
push
leave
jo
xchg
dec
test
addr16
jge
mov
scas
in
cli
lock
jle
push
sbb
push
mov
frstor
pop
xchg
test
mov
int
and
jo
xor
mov
jbe
add
out
pop
mov
clc
xlat
xor
cmpsl
js
stos
jp
xor
cmp
xchg
ret
fwait
sahf
jne
test
push
je
ds
cwtl
loopne
in
imul
pusha
cld
cltd
xchg
mov
add
cmp
xor
jmp
pop
hlt
shlb
jp
xor
mov
pop
call
xor
stos
cmpb
test
aaa
inc
data16
fcmovne
loopne
js
adc
iret
notl
mov
xchg
add
pop
sub
nop
in
ficoml
jecxz
inc
mov
out
dec
cld
or
in
mov
push
out
cmpsb
test
jg
mov
loop
inc
pop
push
lcall
test
test
adc
add
loope
push
dec
dec
in
mov
outsl
lods
pop
ficomps
inc
pop
and
scas
shlb
fistl
push
push
in
nop
cmc
lret
sub
ror
call
rep
jge
cld
cmpb
je
sub
pop
push
in
popf
mov
call
mov
in
push
sbb
arpl
and
cwtl
mov
aam
insb
cmpsb
fildl
pop
dec
aad
inc
push
or
cmpsb
jnp
mov
add
cmpsl
inc
cmp
outsb
inc
ds
ljmp
mov
insb
adc
das
clc
and
xchg
test
repnz
cmp
mov
mov
pop
inc
mov
mov
or
push
mov
jge
xor
cmp
and
or
icebp
xchg
pop
inc
loope
sub
mov
imul
fcoml
dec
imulb
or
enter
jl
les
add
addr16
jo
in
clc
inc
jg
shlb
stc
pushf
fldt
xchg
inc
clc
sub
inc
mov
jno
mov
insl
sbb
mov
jno
rcrl
xor
mov
mov
mov
sbb
mov
std
mov
loope
push
cmp
test
pop
aad
xchg
adc
and
jp
pushf
mov
nop
and
fisubrl
stos
xchg
xor
movsb
das
push
fcoml
popf
fdivrp
inc
xchg
sbb
sub
imul
addr16
out
fldcw
xchg
sub
mov
push
test
outsb
cltd
inc
mov
and
push
jg
loop
movsb
pop
add
jge
jbe
xlat
jecxz
or
lock
stos
add
fstpl
mov
xchg
pop
cmpsl
mov
push
pop
stos
test
add
outsl
jge
sbb
inc
dec
pop
cmpb
xor
fs
pop
sub
push
pushf
inc
vmwrite
push
test
dec
int3
aam
push
shr
cs
rol
addl
hlt
stos
dec
cmp
push
mov
jns
pop
fisubl
decl
mov
xchg
lods
addb
inc
call
xorb
fwait
in
pusha
scas
int
lock
dec
je
jo
push
inc
inc
push
jns
mov
add
pop
inc
inc
insb
pop
jnp
out
pop
and
mov
arpl
push
pop
adc
ror
jp
push
clc
dec
mov
inc
pop
stc
cwtl
icebp
popa
push
repnz
into
in
jmp
add
outsl
mov
cs
push
ja
xchg
pop
inc
dec
mov
fstpt
mov
adc
mov
out
pop
mov
xchg
xchg
cvttps2pi
cld
add
daa
insl
cmp
jae
xor
jae
xor
inc
insb
aaa
int3
add
adc
push
movb
test
xor
mov
sub
pop
js
dec
out
xor
push
mov
xchg
or
ret
mov
jne
pop
cmc
fistl
in
lock
test
adc
int3
inc
lcall
adcb
vpaddsw
jp
push
push
mov
mov
ss
or
std
imul
in
pusha
lahf
clc
roll
push
insl
stos
inc
push
jl
scas
popa
int3
lods
pop
cwtl
inc
cltd
int
jecxz
jnp
jns
push
lock
fbstp
add
lods
lods
int3
fcomps
jmp
test
call
test
xor
xor
mov
mov
fnstsw
pop
pop
jmp
and
lods
loope
cli
push
movsb
dec
or
test
out
xchg
scas
lds
cmp
adc
cmpsl
arpl
add
and
xorl
arpl
shl
pusha
xor
scas
sbb
popf
outsb
sbb
xor
lret
xchg
inc
pusha
negb
xor
adc
in
dec
xor
sti
out
push
in
rolb
imul
push
lods
movsl
test
lods
mov
jae
adcl
ficompl
or
add
jbe
mov
inc
dec
ljmp
push
mov
xor
mov
push
push
mov
pop
mov
lret
int3
stos
xor
in
loope
fidivrl
xchg
pushf
inc
xchg
lret
mov
aad
packssdw
xor
enter
cmpb
pop
data16
pop
dec
test
mov
call
inc
pop
jo
inc
rorb
jl
frstor
lods
dec
mov
adc
sbb
jns
adc
push
arpl
in
jmp
and
sub
cmc
arpl
iret
cli
xchg
sbb
sbb
pusha
sbb
pushf
leave
addr16
sub
jbe
inc
lret
xor
das
lods
imul
ret
fcomps
inc
ja
push
movsb
imul
or
push
fimuls
push
int
inc
mov
xor
lock
inc
lods
mov
inc
and
in
mov
jp
loop
roll
dec
cmp
pop
xchg
ret
fwait
notb
xchg
int3
sub
xorl
mov
lods
test
sub
add
cld
aam
in
stos
pusha
jecxz
stos
stc
add
test
and
jmp
orb
out
pop
jno
data16
imul
mov
insb
mov
into
mov
and
mov
nop
sbb
frstor
jnp
leave
adc
mov
std
push
sti
mov
inc
cmp
insb
sub
lock
mov
push
cltd
xchg
push
mov
call
popa
pop
shr
pop
pusha
fsub
and
mov
mov
inc
scas
mov
call
lods
jp
jo
repnz
mov
arpl
jb
popf
inc
loop
and
pop
adc
fsts
pop
add
mov
sbb
sbb
adc
and
in
jle
push
out
out
pop
addr16
jge
in
pop
imul
orl
inc
sbbl
adc
push
jmp
pop
test
repnz
imul
cmp
cmp
adc
push
popf
ret
dec
jno
jo
xchg
ja
jg
adc
mov
push
xorl
mov
test
jl
hlt
out
stos
pusha
jmp
cld
xchg
inc
stos
jecxz
xor
and
test
pusha
jb
xor
in
jp
and
in
sub
insb
ss
jp
subl
cltd
pop
adcb
cmp
out
lea
inc
xchg
xor
idivl
pop
ljmp
repnz
mov
arpl
mov
lret
mov
test
flds
subl
push
sbb
lahf
jp
jle
imul
dec
subl
xlat
fst
mov
bound
das
jge
pop
lods
jb
jl
jbe
arpl
aaa
mov
test
dec
enter
pop
mov
add
cmp
cmp
push
cmp
loopne
popa
sub
sub
fsub
xor
push
mov
mov
jae
cltd
addr16
inc
push
pop
cmp
sbb
inc
imul
pop
je
rorl
repnz
xchg
sahf
push
add
bnd
fndisi(8087
call
out
sahf
mov
adc
sbb
dec
adc
cltd
pop
inc
pusha
cld
lcall
and
in
xchg
dec
or
jge
inc
test
sub
xchg
mov
or
cmpsl
je
xor
int3
jmp
fwait
adc
iret
mov
mov
xor
in
add
sbb
daa
sub
ret
push
negb
cmp
sub
popa
xlat
clc
pop
mulb
ror
out
mov
rcrl
lahf
add
gs
fwait
loopne
mov
loopne
pop
inc
std
or
in
jle
inc
das
std
push
jnp
ds
popf
mov
int3
inc
bound
pop
ja
xchg
jg
insb
mov
je
and
and
popa
int3
nop
mov
or
add
in
xor
pop
outsb
addb
in
mov
fstps
int
and
mov
lret
xchg
insb
xlat
ficomps
sbb
nop
popa
mov
lock
out
imul
lcall
int3
cli
mov
enter
mov
push
push
push
addl
rcrl
push
inc
mov
arpl
shrb
lods
inc
lods
insb
movsl
push
mov
adc
jo
pop
inc
sahf
outsb
jge
aam
enter
sbb
mov
add
sbb
sub
inc
sub
cld
push
lahf
repz
mov
and
fsubrs
inc
or
lcall
jg
stc
push
ds
sub
mov
hlt
jg
test
sub
in
insb
dec
ficompl
push
mov
cmp
or
ret
jmp
push
pushf
sub
out
jnp
jecxz
jge
pop
and
subb
mov
sahf
jmp
or
data16
arpl
movsb
sahf
and
and
repnz
sbb
repz
lods
loopne
outsl
roll
icebp
dec
jge
test
mov
fsts
enter
mov
push
ret
xchg
leave
mov
call
push
push
orb
imul
push
int
and
call
lds
sub
out
xchg
test
and
fcomps
pop
sbb
jg
mov
xchg
pop
push
inc
pop
scas
pop
loope
inc
mov
or
cmp
adc
je
and
loope
jno
int3
adc
inc
fs
imul
fadds
nop
xlat
cmpsl
fs
or
inc
add
mov
mov
shrb
cmpsl
movsl
cli
insl
stos
test
fcompl
dec
sbb
les
int3
jns
mov
mov
sahf
push
mov
jp
mov
insb
cmpsl
fcoml
jp
pop
cltd
inc
mov
pop
scas
inc
or
mov
inc
sub
pop
ret
fistps
inc
jne
inc
in
stc
ljmp
push
cs
xlat
jp
pop
dec
ret
imul
mov
fbld
loop
xchg
adc
test
cmpsb
cwtl
enter
sahf
repnz
jg
std
push
inc
fcoml
fists
dec
and
loope
pop
adc
imull
add
push
pop
jecxz
test
and
add
aam
xchg
xchg
subb
incb
movsb
cs
in
cld
xchg
jmp
mov
dec
int
mov
subb
ss
test
fdivr
scas
push
fs
adc
lods
ds
push
ja
pushf
js
loope
imul
jp
jb
cwtl
pop
push
cwtl
clc
mov
out
leave
push
loope
pop
xlat
shlb
push
xor
dec
pop
std
inc
js
cmp
jo
test
dec
xor
jecxz
and
xchg
je
fwait
in
sbb
bound
arpl
pop
adc
iret
push
mov
pop
inc
shlb
dec
aam
iret
ds
popa
outsl
aas
xorl
invd
rep
faddl
add
test
leave
push
adc
mov
addr16
xor
rclb
pop
insl
movsb
jl
test
push
sbb
aad
outsb
dec
out
or
xor
push
pop
sbb
pusha
xor
mov
pop
fnstcw
pop
dec
add
push
sub
mov
fstpl
inc
mov
xchg
test
imul
inc
outsl
loop
test
push
xorl
testl
mov
xchg
push
mov
lea
cli
jnp
jge
push
dec
dec
jns
popa
andb
enter
push
loopne
or
mov
das
mov
xor
out
push
popf
and
xchg
dec
add
fsub
das
call
aas
shlb
jmp
jmp
cwtl
inc
sub
fwait
inc
lret
cli
mov
insl
pop
test
mov
pop
sbb
xchg
jp
jo
jg
push
mov
pop
jns
js
jg
jge
dec
push
sbb
push
xchg
dec
int3
push
iret
pop
scas
jp
sbbl
sub
js
and
test
out
dec
mov
cld
arpl
inc
pop
sbb
dec
nop
cmpsb
pushf
aam
and
mov
push
repnz
adc
inc
pop
or
pop
popa
sub
sbb
fstps
jg
cmp
rorb
daa
mov
push
pshufw
test
xor
clc
setno
xchg
and
sub
loop
call
jge
dec
mov
int3
mov
mov
cmpsb
sbb
sub
mov
inc
mov
in
xor
iret
xor
rcl
inc
daa
push
add
adc
inc
add
mov
addr16
jbe
jmp
mov
outsl
iret
lret
movaps
in
sahf
imul
adc
sub
jge
loope
iret
leave
fmul
dec
cmp
loopne
out
push
flds
or
cli
loop
push
push
mov
pushf
sahf
pop
mov
push
add
mov
loopne
popa
or
scas
adc
popa
ljmp
xchg
bound
sbb
dec
pop
xchg
into
inc
andb
mov
push
jg
fsubl
jge
bound
jnp
cmp
test
scas
dec
add
pandn
mov
mov
out
mov
in
outsb
clc
sahf
mov
xchg
frstor
scas
js
xor
sti
mov
enter
arpl
push
dec
pop
add
adc
adc
xlat
sbb
xchg
icebp
xchg
andb
pop
xchg
xchg
mov
movsb
fldl
jmp
sahf
fdivrp
cmp
ficompl
lods
jecxz
scas
lcall
mov
jmp
xor
or
scas
clc
stos
mov
sbb
std
les
cmp
incb
xor
jge
lret
btr
or
xchg
outsb
mov
test
xor
in
pop
sub
subb
loop
pop
mov
loopne
fsubs
fs
loopne
push
sahf
test
cmpsb
loope
lret
fcmovnbe
adc
or
insb
cmpsl
int
or
lods
pop
es
sub
adc
mov
cltd
xor
subb
xor
jno
adc
stos
jg
lods
imul
cwtl
aad
lret
adc
sbb
fiaddl
lret
scas
adc
or
push
cmp
xchg
outsl
out
sbb
ror
dec
sbb
sbb
push
sbb
addr16
and
mov
in
fs
jmp
movb
sbb
fsub
bound
push
ljmp
clc
sub
and
imul
and
inc
std
jbe
mov
mov
dec
lods
pop
push
and
mov
repz
mov
scas
pop
sbb
xlat
fcmovne
xchg
popa
lods
jecxz
pushf
aaa
jnp
in
dec
imul
scas
pop
mov
xchg
fs
call
es
pusha
jmp
insb
pop
fcoms
bnd
add
inc
outsl
and
lock
testl
loope
test
cli
hlt
push
ljmp
imul
mov
fs
leave
jo
dec
loopne
addr16
mov
sti
or
and
sub
lock
ret
in
leave
addb
ror
jl
nop
jge
rcrl
jge
mov
mov
test
inc
mov
adc
mov
in
lcall
les
outsb
scas
popf
cmpsl
add
xor
sub
pop
fistpl
inc
and
ja
inc
xchg
in
rep
lcall
je
pop
cmc
push
loope
cs
lcall
int3
jnp
dec
into
cmpl
imul
pop
rolb
sub
call
or
dec
sarb
sbb
mov
pop
in
sub
sub
sub
sbb
inc
sbb
pusha
xchg
or
xlat
les
push
std
add
pop
int3
pop
push
pusha
adc
stos
jp
add
ja
inc
lods
insl
test
aaa
mov
xchg
pop
nop
lea
ds
lods
aaa
add
ret
loop
es
adc
addr16
or
shrd
loopne
adc
insl
jmp
inc
add
imul
stos
js
ds
cld
jl,pt
jb
movsb
loopne
and
fs
inc
je
ret
bound
in
push
mov
stos
scas
mov
fadds
mov
push
in
orl
cld
out
xor
or
adc
and
bound
les
enter
jbe
in
jae
pop
rcrb
xchg
int3
setge
jp
pop
and
lret
dec
out
or
movaps
mov
push
xchg
ss
fisubrs
push
dec
pop
add
pop
jb
push
lock
push
negb
rcrb
int
ret
inc
cmpsl
cs
rcll
cmc
push
call
ret
loopne
or
mov
incl
jle
mov
pop
outsl
stos
jo
push
push
mov
popa
mov
mov
adc
pushf
mov
jl
lock
stos
push
lret
das
in
inc
imul
ret
pop
icebp
movsb
sbb
rcrl
inc
int
mov
jb
scas
test
or
sub
ret
insb
adc
cltd
in
in
push
test
decl
imul
push
dec
xorb
mov
cwtl
clc
dec
int
add
cmpsb
xchg
and
lods
pop
sub
nopl
pop
pop
inc
and
aam
sbb
mov
in
into
jecxz
sub
mov
mov
popa
stc
in
lods
add
adc
out
push
std
dec
and
lret
scas
repz
imul
sbb
inc
ss
cli
in
hlt
mov
clc
sarb
adc
sti
add
xchg
aaa
pop
popa
mov
int
dec
jo
xchg
lcall
enter
mov
xlat
cmp
test
je
mov
and
inc
push
stc
xchg
xchg
inc
call
xor
dec
and
adc
loop
icebp
popa
mov
popa
scas
jmp
test
addl
mov
aad
dec
cmpsb
push
and
loop
cmpsl
sub
aad
lock
pop
lock
lcall
and
mov
iret
pop
loope
xor
ss
cmp
pop
test
data16
in
mov
push
movsl
mov
cmp
fsubrl
or
jo
or
cmp
dec
daa
loope
shrd
test
fs
add
jmp
sbb
stos
add
mov
add
cwtl
mov
or
stos
adc
js
test
pop
sbb
in
ror
xchg
mov
lods
test
dec
fcoms
adc
xor
cmp
mov
dec
xor
push
bound
pop
adc
in
mov
ret
adc
sar
clc
jge
jb
outsb
fs
xor
push
scas
adc
das
cmpsb
cmpsb
lret
mov
sbb
and
std
js
pushf
inc
popa
jb
pop
mov
and
lock
jnp
mov
pop
jle
push
sub
pop
inc
test
js
cmp
mov
outsl
stos
adc
inc
add
icebp
cmp
sbb
xor
sub
push
lods
adc
cmpsb
dec
sub
xchg
fildl
cltd
lods
and
mov
sub
mov
je
fildl
mov
or
jp
aas
adc
xor
mov
imul
cmp
mov
jo
movsl
cli
ss
idivl
jmp
mov
je
lcall
cmp
dec
sahf
mov
or
mov
sbb
pop
jnp
inc
jl
std
ret
imul
sbb
xchg
scas
mov
push
cld
imul
or
dec
pop
pushf
cmp
imul
mov
test
add
pusha
testb
xchg
add
and
stos
mov
xor
pop
pop
stos
inc
or
test
mov
xor
mov
cltd
lods
sub
fxam
lods
inc
or
stos
popa
roll
push
lods
and
fstps
dec
movsb
inc
inc
jl
push
jle
pop
jne
mov
lods
les
jae
bound
pop
nop
jmp
mov
pop
xorb
cwtl
push
xor
or
mov
arpl
sbb
mov
inc
dec
push
test
dec
pop
bound
sti
stos
enter
lock
push
outsl
jnp
xchg
les
lods
xchg
sub
xchg
pop
faddl
pop
aam
lcall
and
jns
inc
xlat
push
sbb
mov
lock
lret
test
sub
jnp
inc
add
mov
lods
mov
inc
xchg
or
lahf
xor
test
dec
in
mul
mov
and
in
or
dec
lock
ror
xchg
lods
jnp
dec
mov
push
das
lahf
push
rep
mov
addr16
sub
cmp
shrb
inc
pop
dec
jno
mov
inc
dec
lcall
call
mov
lcall
test
leave
sbb
adc
or
and
iret
or
push
test
push
subb
test
in
cltd
jle
sahf
test
pop
pop
push
dec
jg
lret
pop
stc
pop
push
mov
addr16
cmpsb
lods
ret
xlat
mov
mov
pop
xor
xlat
outsl
sub
loop
fnstsw
rcll
test
lcall
subl
out
scas
push
xor
dec
sub
loopne
cmpsb
pop
sub
ficompl
pop
xchg
and
je
test
pop
mov
cmp
jecxz
fwait
les
adc
inc
cs
mov
insb
in
loope
mov
fimull
lahf
mov
fcmovnbe
enter
mov
inc
mov
loope
nop
js
ret
orb
int3
es
je
and
aas
shlb
mov
fsubrl
call
enter
lahf
mov
daa
jns
xchg
imul
and
addr16
in
int
sub
loopne
cmpb
cltd
dec
ljmp
jns
jae
hlt
loopnew
xor
cmpb
aas
fsubs
xchg
add
inc
xor
and
xchg
jecxz
push
sbb
jae
mov
jmp
int3
data16
inc
int
jne
pop
push
and
xchg
subl
stc
mov
mov
push
out
js
stos
shrb
enter
test
les
mov
mov
int3
and
and
popa
push
mov
insb
xchg
lcall
loope
call
push
fucomp
in
inc
and
imul
hlt
repnz
sub
js
lret
jge
in
lcall
dec
cmp
mov
adc
stos
mov
inc
test
loope
push
cwtl
add
jnp
jmp
pushf
js
int3
mov
lret
jnp
dec
jle
xchg
scas
jge
int3
dec
jmp
roll
ljmp
push
cmpsl
sub
js
fsubrs
nop
iret
sub
xlat
neg
outsl
mov
mov
adc
jge
lcall
inc
sti
shll
fistl
out
lahf
add
xor
pusha
jae
pop
loope
sbb
jecxz
outsb
int
sbb
pop
addl
xchg
lea
clc
mov
stc
xlat
insb
xchg
xor
push
jb
in
add
mov
jmp
mov
insl
je
add
lret
int3
pop
and
cmc
push
out
adc
mov
xchg
test
stc
fisubrs
cmp
jecxz
loopne
xchg
pushf
call
mov
cmpsb
enter
mov
imul
pop
adc
push
dec
test
fsubrp
cmp
imul
adc
jmp
leave
fisubrl
push
jbe
cmp
cld
in
outsl
sbb
bound
mov
mov
mov
mov
xchg
jle
xchg
lcall
cmp
dec
mov
jnp
mov
les
pop
xlat
jns
push
mov
popf
adcb
mov
adc
jecxz
shlb
in
dec
idivl
xor
sbb
mov
push
pushf
jle
dec
cltd
stos
pop
pop
mov
inc
insl
addr16
bound
and
push
xor
cltd
lahf
dec
fucom
push
je
sub
adc
jl
rcr
xchg
loop
in
cmpsl
mov
in
pop
xchg
sbb
mov
push
inc
loop
mov
mov
cs
mov
rclb
test
inc
mov
enter
pop
sti
xorl
call
int3
test
fldcw
movsl
nop
push
xchg
sbb
arpl
dec
pushf
arpl
pop
cwtl
xchg
fs
aam
or
aaa
lock
jo
jae
bound
dec
into
mov
xor
imul
mov
mov
fiaddl
inc
add
xchg
sbb
mov
inc
or
in
rorl
outsl
std
pop
pop
fcoms
pop
inc
in
push
mov
pop
call
shl
jmp
or
nop
icebp
mov
jp
rcrb
fistpl
pop
movsb
test
lods
pop
popf
nop
popa
sbb
repnz
jo
lahf
jb
sbb
push
aam
sub
in
jns
pop
xor
add
stos
mull
cmp
mov
jl
scas
sbb
sbb
or
imul
adc
addb
cmpsl
pop
orl
stos
add
inc
jo,pt
fwait
ljmp
xor
push
add
cmp
orb
jp
push
int
call
sahf
pusha
xor
mov
pushf
test
fcomps
adc
insb
mov
outsb
push
jne
xor
dec
dec
cwtl
pop
outsl
push
cwtl
and
nop
cmp
pushf
inc
and
out
jne
rcr
jl
push
lcall
add
aad
sar
jecxz
push
push
xor
pop
rcll
or
sub
loop
mov
pop
mov
mov
test
jmp
mov
les
mov
ret
stos
cmp
cmc
fsubr
cmc
add
jbe
cmp
pusha
push
loopne
scas
fdecstp
jmp
scas
xchg
inc
dec
icebp
in
daa
loope
scas
push
add
in
lret
push
scas
dec
push
inc
jns
adc
pop
int
test
inc
mov
xchg
mov
cmpb
loope
pushf
xchg
push
clc
fwait
mov
mov
test
popa
loop
sub
pop
imul
std
pop
push
sbb
pop
mov
pop
mov
addb
adc
mov
sub
jnp
int3
and
movsb
xor
sub
xor
fisubrs
adc
loop
or
fidivrs
push
lcall
and
in
sub
shl
cwtl
ja
xchg
test
fincstp
pusha
loop
xor
jo
cmp
sub
int3
loope
push
push
mov
pushf
imul
cmp
mov
popa
mov
sub
push
mov
ror
mov
les
inc
push
popf
sbbl
push
mov
jl
call
push
int3
lahf
or
negl
cltd
mov
jp
pop
pop
fs
test
sbb
stos
aam
movsb
pop
xor
push
nop
xchg
push
mov
call
stos
or
scas
dec
jo
mov
outsb
int
mov
mull
aam
xor
lcall
std
std
sbb
outsb
and
sbb
mov
cltd
arpl
enter
and
mov
lret
call
call
jmp
clc
jne
cmp
icebp
lods
xchg
stos
xchg
pop
mov
inc
fstps
andl
js
outsl
int3
pop
stos
aaa
adc
inc
push
sbb
lret
pushf
pop
cmp
insb
mov
mov
or
cld
adc
adc
roll
lcall
mov
push
mov
rcrb
sbb
dec
out
inc
cwtl
insb
enter
pop
test
pop
popa
popa
adc
mov
xchg
repz
outsb
mov
and
dec
shll
andl
mov
imul
mov
mov
dec
mov
sbb
mov
jle
inc
mov
rcll
imul
gs
ret
sub
mov
out
loope
dec
dec
mov
mov
sbb
icebp
popa
xlat
mov
inc
and
pop
xor
lret
fistl
mov
pop
adc
cs
or
shlb
and
jp
out
mov
cs
addb
mov
jp
xchg
xlat
mov
add
pop
inc
xchg
in
flds
imul
out
lods
lcall
ljmp
imul
adc
or
mov
rcrb
bound
push
and
dec
inc
test
movsl
jecxz
push
lret
dec
test
mov
inc
stos
push
inc
cmc
dec
nop
jae
sbb
cmp
push
aad
inc
sar
xor
adc
lock
pushf
fsts
arpl
sbb
mov
fdivrs
add
add
pop
movsb
push
pop
imul
fistl
push
lcall
outsb
pushf
stos
inc
or
iret
shll
cmpsl
sub
mov
cltd
push
mov
pop
addr16
pusha
pusha
add
mov
mov
cmpsl
stos
add
aaa
ljmp
inc
and
cltd
mov
lret
scas
jbe
lods
mov
mov
lods
andb
fs
mov
outsl
adc
push
push
test
push
imul
sub
mov
dec
test
mov
ja
fwait
inc
ljmp
out
int
pop
pop
add
sbb
sbb
cmp
pushf
adc
mov
adc
movsl
mov
sbb
cmc
pushf
push
outsl
fdivrs
pop
add
jbe
fcmovne
xor
sbb
push
int
int3
bound
pop
out
stos
push
int3
dec
cmp
adc
inc
test
mov
jmp
dec
fstpt
pop
mov
mov
push
cltd
pop
mov
lret
test
gs
adc
addl
subl
int
out
jp
mov
pop
imul
shlb
jl
inc
in
in
dec
fsubr
cmpsb
pop
add
pop
jnp
test
lea
addr16
call
inc
cltd
cmpsl
jno
xor
int
inc
loop
shll
inc
mov
loope
xchg
or
lahf
imul
arpl
lret
cmc
mov
hlt
cli
and
adc
push
stc
out
or
loopne
adc
dec
jne
mov
cli
insl
lods
lods
xor
pop
inc
outsb
scas
mov
scas
ja
les
push
cmp
or
inc
mov
sub
fidivl
lods
scas
loope
movsb
mov
loop
xor
pop
inc
into
nop
adc
popa
jecxz
pop
in
mov
sbb
addr16
jp
js
add
popf
xlat
pusha
insl
repz
int3
popa
mov
push
xchg
or
jnp
dec
ss
call
fildll
jae
push
xor
dec
cs
sarl
enter
stos
push
sahf
push
pop
push
je
lea
push
push
jp
pop
sub
nop
push
cmp
dec
and
inc
stos
push
or
dec
jle
mov
xchg
jge
fstl
pop
pop
sbb
int
mov
jecxz
in
loop
and
inc
cld
push
lret
movsl
xchg
cmp
push
out
inc
in
sbb
pop
xor
ror
mov
mov
mov
adc
xlat
push
ret
sub
daa
pop
out
shl
pop
xor
pop
loope
push
jnp
xchg
jl
in
jle
pop
inc
dec
mov
stos
in
dec
shr
imul
cmp
push
mov
sbb
sub
pop
test
mov
xor
xor
outsb
filds
push
andl
ljmp
gs
mov
sbb
adc
pusha
xchg
mov
out
dec
lods
add
pop
stos
data16
pop
xor
pop
ret
inc
and
lret
push
push
addb
ds
outsl
adc
mov
repz
xchg
xor
pusha
jecxz
shlb
nopl
test
sub
sbb
mov
out
loopne
cmpsb
mov
cmpsb
int
xchg
cmp
inc
test
mov
dec
scas
int
into
test
sbb
sub
out
movsb
fwait
adc
push
jae
mov
push
push
xor
xchg
imul
ja
sarb
and
dec
sub
mov
xlat
lret
test
inc
jl
clc
mov
addr16
sbb
in
inc
repz
push
mov
xchg
push
sahf
shlb
mov
push
imul
test
mov
and
jo
lods
lcall
int
lret
pop
stc
jmp
cltd
notb
cmpsb
add
adc
lock
nop
add
sbb
insb
and
jo
fwait
into
mov
fistpll
cmp
dec
or
or
in
jo,pt
dec
pop
mov
cmp
loope
outsb
mov
dec
fimull
inc
hlt
add
sbb
add
sub
jl
insb
mov
jge
inc
jmp
jno
cmc
loop
and
add
xchg
jge
aaa
hlt
insl
push
mov
scas
lock
mov
sbb
inc
cmp
iret
popf
xor
js
mov
shl
xchg
cmp
mov
adc
data16
mov
scas
adcl
jbe
enter
mov
outsl
pop
jmp
test
adc
pop
mov
xor
cmp
aam
out
jno
rcrb
ret
inc
lahf
popa
add
fldcw
fidivs
sbb
sbb
mov
lcall
das
pushf
add
mov
insl
jo
aam
popf
mov
rcr
das
mov
in
outsb
jle
push
push
lea
sahf
scas
mov
jnp
mov
mov
inc
addb
jecxz
inc
adc
es
xor
inc
jl
int3
subl
in
mov
inc
das
and
xchg
mov
std
xor
sti
pushf
loope
and
push
sub
xchg
jecxz
ljmp
fs
scas
jle
shll
mov
mov
jno
adc
in
filds
loopne
xor
mov
loopne
lods
fisubrs
cli
lods
clc
push
mov
jb
bound
loopne
mov
xor
cmp
push
pop
cmc
cwtl
sbb
or
dec
orb
movsb
fistl
pusha
adc
sbbl
mov
cs
ficomps
mov
add
aam
lods
jp
outsl
scas
insb
push
mov
aas
push
gs
cltd
stos
xchg
and
in
mov
fs
pop
int
push
ret
test
adc
shl
mov
mov
in
popf
pop
fs
out
lcall
push
mov
and
push
dec
push
cmpsl
loopne
cwtl
adc
xchg
push
outsl
add
in
push
push
jecxz
inc
xor
push
lock
pusha
mov
popa
xchg
mov
popa
movsb
inc
cmpsb
adc
in
cld
loope
mov
sub
shr
je
xor
aaa
push
xchg
mov
int3
mov
inc
dec
test
rcl
inc
fidivl
sahf
jns
pop
out
inc
in
push
sbb
fdivrs
ret
dec
xor
inc
push
inc
pop
lea
mov
outsl
push
add
push
xlat
sarl
push
jl
dec
lcall
hlt
rorl
movsb
nop
mov
imul
xchg
fidivs
test
pcmpeqd
mov
inc
neg
push
je
fcmove
or
dec
lods
cmpsb
mov
std
stc
adc
jo
rcrb
mov
inc
out
movsb
pop
das
in
stos
inc
pop
mov
jae
iret
inc
cmp
inc
cmp
std
push
cmp
les
test
jge
les
subb
rcrb
sbb
sbb
or
cmc
cltd
mov
shlb
je
xor
je
aad
sub
mov
push
enter
fldenv
mov
rcll
push
xchg
add
je
jg
mov
mov
jnp
js
cmpsl
test
pop
in
cmp
mov
aad
in
stos
les
xchg
and
add
cmp
shll
inc
ljmp
mov
mov
add
cli
xchg
and
fwait
outsb
outsb
inc
es
jo
bound
stos
jp
js
inc
subb
push
leave
push
andb
cmpl
movsb
jmp
cmpsl
popf
mov
movsb
push
rcrl
cmp
cmpsl
mov
in
lahf
adc
push
stos
mov
sti
mov
and
cltd
mov
adc
fnstsw
push
fwait
mov
js
fnsave
adc
add
jno
push
xchg
insb
xor
mov
ja
sbb
sub
pop
ds
and
push
pop
fs
jle
jge
mov
pop
push
jg
mov
in
pushf
pusha
fs
in
cmp
aaa
push
ds
mov
adc
fldcw
mov
outsl
xchg
out
orl
mov
lret
pushf
and
mov
pop
sbb
pop
xor
loopne
inc
int
fs
cli
pushf
mov
sbb
notl
and
dec
add
aad
mov
test
popa
lods
inc
dec
scas
pop
mov
inc
in
push
cmpsl
mov
mov
xchg
cmpl
in
push
pop
adc
xchg
sub
fnstsw
test
sarb
lret
imul
jne
pop
jno
cmc
std
xchg
sub
movsb
scas
mov
mov
push
addr16
incb
insb
or
and
sahf
shrb
mov
sbb
mov
dec
pop
mov
scas
sbb
sbb
jge
xchg
out
faddl
cs
fsubrl
xchg
aaa
dec
stos
iret
stc
scas
stos
repnz
dec
popa
movsl
adc
hlt
lods
inc
xchg
dec
or
mov
sti
mov
fidivl
push
sub
jle
insb
or
jp
pushf
fbstp
mov
nop
cld
fs
jl
cli
dec
mov
adc
push
or
int3
movsl
in
ret
nop
fsubs
in
call
cld
jp
cmpsl
mov
inc
mov
imul
sub
cwtl
push
mov
aas
jbe
inc
xor
stos
jle
cwtl
popf
pusha
adc
ljmp
imul
pop
jl
fs
inc
movsl
xor
cmpb
adc
fs
add
in
lret
xchg
mov
ja
enter
dec
jo
rcrb
pop
popa
push
lahf
fsts
es
stc
mov
mov
sbb
pushf
jbe
mov
jo
jbe
sbb
in
jb
ljmp
ficoml
stos
shrb
ljmp
sbb
cwtl
and
aad
outsb
jae
push
pop
ja
pop
negl
mov
cltd
add
push
clc
inc
add
arpl
mov
pop
adc
mov
loope
pop
sub
cwtl
lcall
shlb
xor
push
fistps
sbb
test
ja
popa
and
loop
cmp
xlat
mov
sbb
push
jnp
push
inc
dec
jnp
mov
jp
add
addr16
cmp
js
in
fs
jle
loopne
push
sahf
dec
cwtl
xchg
pop
loop
clc
outsb
mov
mov
dec
jecxz
mov
mov
fwait
sbb
in
push
in
test
pusha
stos
shll
in
lods
mov
fcoms
int
sub
pop
into
movsl
andl
fwait
adcb
jecxz
int3
adc
adc
clc
jg
push
xchg
mov
mov
bound
cmp
jmp
xchg
or
push
gs
mov
int3
pop
bound
push
das
mov
pop
iret
insb
inc
lds
jmp
imul
cs
lahf
pop
mov
mov
adc
and
pusha
ss
xlat
loop
int
pop
je
ret
test
push
push
ljmp
sahf
jns
int
push
stos
and
ljmp
test
fwait
loop
jb
mov
or
adc
fnstcw
adc
int
stos
std
xchg
nop
loop
lea
andb
in
ror
test
fsubl
add
lcall
cltd
insb
sub
jp
mov
inc
mov
jg
jns
or
popf
jns
test
fucomp
sub
dec
jno
xor
loopne
pop
inc
ss
adc
cmpb
cmp
cwtl
push
sub
jbe
in
sbb
loopne
loope
ret
stc
pop
pusha
push
out
clc
jb
xchg
rcl
cmp
xor
fisubl
sbb
pop
dec
fiaddl
cltd
sbbb
repz
cmp
fcom
push
sti
lret
mov
loop
sbb
pop
call
pusha
bound
mov
int
lahf
inc
add
out
fnstcw
fcoms
scas
aad
sti
xor
sub
add
jo
scas
mov
pop
dec
inc
or
fs
psrlq
cltd
mov
data16
fstpt
cmpsl
xchg
pop
stos
adc
cmpsb
enter
test
cmp
std
sarb
xchg
ss
mov
push
xlat
pushw
out
mov
data16
addr16
push
xchg
sbb
add
lret
aaa
ret
popf
push
mov
gs
sti
outsb
fsub
xlat
xchg
cmp
fs
shll
fbld
mov
ds
cmp
call
inc
adc
ds
cli
cmp
xor
dec
shlb
out
rolb
je
into
push
sub
pop
test
sub
bound
ja
cmp
ja
sbb
andl
pusha
mov
sbb
dec
popa
movsl
cmp
sbb
pop
out
fisubrs
pusha
cld
outsb
adc
notl
loop
enter
std
mov
pop
sub
cld
mov
jecxz
scas
scas
shr
pop
pop
int3
jb
mov
jae
aad
or
jns
lds
mov
pop
test
clc
loope
mov
jp
out
push
cmpb
xchg
push
sbb
nop
out
pop
xchg
dec
xor
repnz
aad
push
fildll
mov
cmp
lock
popf
lcall
cld
inc
jge
mov
in
test
lock
pop
pop
lret
lods
and
ljmp
fstl
pop
inc
hlt
out
mov
adc
or
fisttpll
ret
arpl
rcr
or
outsl
adc
jnp
aam
loopne
adc
mov
enter
jns
jb
fidivrs
mov
jo
int
lods
push
cli
icebp
mov
pop
int
fistl
push
adc
scas
test
testl
mov
jp
pop
mov
insb
sbb
push
cmp
mov
cmpsl
inc
mov
cs
pushf
mov
dec
fistpl
in
push
xchg
push
xor
lods
daa
jmp
adc
push
xchg
adc
test
adc
cmp
ss
xor
mov
jns
fcompl
cld
subb
push
push
lea
out
lcall
stos
inc
mov
cltd
mov
sub
push
mov
call
stc
insl
enter
push
loope
xchg
cmp
js
xlat
rclb
jmp
insb
sub
ja
xlat
outsl
ja
fnsave
sbbl
adc
icebp
inc
push
xlat
pop
xchg
aad
and
test
or
cwtl
data16
push
jnp
cltd
fcomp
popf
test
inc
mov
push
das
es
push
sbb
ret
cmp
mov
sub
loope
cmpsb
inc
inc
addr16
mov
mul
inc
push
mov
mov
lcall
jmp
sbb
mov
jecxz
rcr
scas
ret
dec
mov
xchg
pop
adc
jg
and
jno
jg
popa
or
add
mov
cmp
out
push
loope
popa
mov
add
call
mov
mov
fdivrl
into
push
inc
mov
int3
repz
popa
inc
loop
fnstsw
jl
jl
ljmp
jl
sub
mov
jle
je
shr
hlt
inc
xchg
and
push
xor
xorl
push
sahf
and
fdivr
mov
fmull
andl
outsb
cltd
sub
sbb
pop
add
mov
stos
dec
adc
mov
dec
mov
xchg
dec
jmp
dec
push
test
jbe
jns
rcrl
mov
inc
stos
or
movaps
jg
lcall
jnp
adc
pop
jnp
inc
test
xchg
out
sahf
rcl
movsb
aam
mov
mov
add
xchg
insb
test
cmp
stos
mov
cs
lods
mov
incb
mov
sub
or
cmp
addr16
mov
pop
and
mov
sub
pop
mov
loope
aaa
pop
in
sbb
push
inc
add
sub
inc
inc
dec
cmpb
test
push
fisubs
cld
sbb
aad
mulb
addb
inc
iret
ret
sar
sbb
ja
call
pop
gs
push
pop
push
out
pushf
mov
rorb
push
inc
jno
mov
inc
or
sub
sbb
dec
scas
mov
call
mov
bound
scas
xchg
mov
loop
pminsw
roll
push
loope
xlat
pop
lea
lahf
nop
jp
lahf
and
cmc
mov
shrl
arpl
push
cld
cmp
mov
cld
scas
into
and
xor
popa
mov
inc
insl
inc
xor
adc
loope
test
xchg
inc
jnp
mov
test
pop
insb
inc
jg
nop
mov
lds
mov
add
inc
test
sarl
sbb
add
scas
push
fsubs
push
or
or
cmp
xchg
js
in
call
bound
jmp
pop
fsubp
xchg
xchg
pop
jmp
pop
jb
bound
call
lcall
xchg
popf
xor
js
mov
outsl
cmpsl
adc
mov
popa
jp
cmc
push
pop
mov
push
pop
lea
fisubl
add
dec
cmpb
mov
push
inc
shl
cmp
xor
jle
flds
xchg
imul
pop
push
pop
adc
mov
ja
lock
mov
inc
sub
dec
scas
gs
addb
push
das
jge
push
push
hlt
outsl
in
cli
jmp
mov
pop
lahf
sbb
push
int3
cmc
stos
bound
fisttps
dec
iret
mov
pop
psubsw
mov
js
sbb
jo
jo
je
js
lret
push
mov
mov
add
and
mov
inc
adc
pushf
rolb
add
les
jnp
mov
mov
or
lods
dec
add
fs
inc
cltd
loopnew
xchg
cmpl
out
jb
mov
xchg
adcl
and
xor
inc
push
dec
sbb
cmp
fs
cmpsb
dec
adc
and
sti
xchg
add
sbb
sbb
addr16
and
insb
sbbl
adc
in
jge
ret
dec
mov
aad
andl
sub
cmp
push
es
cltd
movsl
inc
sbb
xorl
out
mov
or
int
pop
pop
fldt
adcl
cwtl
xchg
loopne
mov
push
pop
notl
sahf
push
pop
mov
xorb
and
dec
push
xor
mov
cs
ja
outsl
inc
adc
data16
orl
sahf
dec
xor
jmp
out
mov
mov
fsubl
push
pop
outsb
sbb
jge
add
push
call
sahf
push
cwtl
int3
xor
pop
fnstcw
lock
test
cltd
das
pop
jb
lret
and
stc
loopne
xlat
inc
xor
sbb
jp
pop
ret
pusha
fwait
pusha
cmc
lret
sahf
push
jg
imul
jge
xchg
cmpsb
test
fldl
jp
fcomp
add
or
movsb
push
adc
inc
rorl
pop
loop
xchg
sbb
mov
push
movsb
test
lcall
mov
rcrl
cmpsb
imulb
insb
jle
mov
js
fs
cmp
inc
shlb
data16
jbe
pop
arpl
adcb
test
ljmp
mov
inc
mov
jo
dec
xchg
push
mov
push
mov
outsb
adc
mov
nop
push
dec
mov
push
in
test
pushf
add
jl
pop
das
push
jecxz
fs
push
xlat
adc
push
and
addr16
adc
iret
aam
pop
int
pop
and
or
aaa
jmp
cmp
test
arpl
sub
xchg
jge
rcll
push
dec
adc
ljmp
jg
push
push
fdivrl
outsb
dec
stc
cltd
nop
dec
gs
jp
dec
enter
mov
add
add
push
test
popa
xlat
sarl
push
fidivrl
xlat
jl
mov
dec
cmp
add
jno
dec
arpl
xor
cmpsb
les
pop
shl
lods
sub
push
push
out
mov
jo
add
inc
cmpsl
rorl
cmp
cli
mov
test
sar
mov
pop
cmp
insl
arpl
in
lcall
sbb
xchg
adcb
data16
adc
xchg
inc
sbbl
invd
push
or
in
cwtl
jle
fdivr
jne
out
in
clc
fwait
addb
in
mov
fldcw
push
test
ret
cmpsl
jno
or
jp
and
int
call
fidivs
stc
js
shlb
mov
cli
cmp
push
arpl
testl
js
jl
addb
mov
pop
xchg
pop
inc
js
hlt
or
pop
movsb
cltd
test
cmp
push
adc
scas
xchg
sub
jno
sarl
call
stos
or
imul
aaa
sbb
adc
call
scas
push
xchg
xor
jl
mov
call
jnp
lds
fucomp
lods
push
rorb
lock
call
mov
sbbl
clc
push
loope
loope
add
andb
mov
pop
into
push
aas
fsts
ret
or
in
jl
xor
xchg
mov
lods
jecxz
sub
nop
inc
mov
dec
jmp
or
das
or
sbb
mov
lahf
pop
xchg
test
mov
pop
fstpl
inc
push
xor
fbld
inc
pusha
jb
sbb
sbbl
fs
mov
daa
push
lea
pop
pop
mov
movsl
jg
sbb
or
loop
inc
add
push
push
loop
shll
dec
insb
loope
fs
jp
sahf
insb
shll
jmp
lcall
nop
test
in
fcmovu
sbb
int
mov
dec
test
in
jnp
test
mov
or
lret
and
nop
add
loope
dec
inc
dec
js
xchg
sub
lods
rorb
loope
push
mov
dec
out
fsubrl
push
inc
js
imul
xor
mov
jl
pop
inc
insb
mov
stc
sub
outsb
mov
jl
push
push
test
push
fsubp
cmp
lret
fldl
fildll
xchg
test
cmp
ret
subb
lods
sub
pusha
js
inc
sub
cmpsb
push
in
aam
daa
mov
xchg
popf
mov
imul
sub
jo
in
push
fs
pop
inc
inc
sub
pop
js
movsb
fwait
and
xor
rorl
jge
cmp
cmc
dec
ret
test
mov
gs
sbb
xchg
sub
ja
out
je
xor
xchg
rol
mov
int3
imul
imul
lret
mov
pusha
mov
inc
adc
scas
or
addl
pop
inc
jnp
jns
les
cwtl
add
test
loopne
popa
popa
dec
xor
movsb
jae
mov
data16
inc
iret
sbb
cltd
movsb
inc
leave
pop
inc
xor
jb
mov
lret
mov
vpcomd
adcb
jmp
enter
cltd
push
outsb
xchg
pop
xor
arpl
gs
shlb
or
mov
int
add
cmp
shr
ret
mov
xor
test
movsl
mov
data16
in
push
xor
push
gs
dec
fnstsw
fmuls
cs
cltd
int
loope
cmp
faddp
scas
xor
mov
arpl
fdiv
push
pop
std
int3
xchg
mov
int
jl
push
in
scas
lods
cmp
pusha
lods
fcomps
jl
mov
cmp
and
repnz
mov
push
psubb
jnp
lret
pushaw
mov
cmc
cwtl
jns
pushf
fstps
or
pusha
idivl
mov
xor
mov
arpl
mov
jg
sbb
shll
pop
push
sub
scas
mov
push
jge
out
cltd
jb
in
je
jae
fstps
into
fldcw
mov
xlat
jp
insb
pop
mov
jo
icebp
popf
or
mov
shl
sbb
pop
and
stos
scas
add
in
mov
int3
and
clc
sarb
outsb
out
pop
or
mov
ret
push
dec
popf
fidivs
ret
ljmp
sub
sbb
add
clc
jb
icebp
test
add
adcw
push
xorl
loop
cld
gs
xchg
pop
popa
fcoms
std
insl
outsl
xchg
popf
bound
adc
clc
push
lock
fs
shrl
jbe
nop
out
int3
lea
div
mov
test
imul
movsb
cmp
popa
mov
lods
loope
mov
jg
les
fbld
scas
test
stos
cmpsb
mov
xchg
mov
fucom
pop
adcl
mov
out
pop
xchg
sbb
push
out
mov
jp
inc
dec
fnsave
add
and
lcall
ds
subb
gs
pop
pop
xchg
xor
jo
test
pop
xchg
mov
mov
pop
pushf
dec
int
mov
in
test
jns
lcall
call
adc
rorb
cwtl
and
inc
lock
cs
incl
loope
in
cltd
pop
pop
pusha
fsubs
pop
ja
bound
xor
xchg
and
pop
js
subl
sub
jmp
shr
cltd
jge
fcomp
xor
mov
test
out
mov
lahf
pop
loop
jl
xor
pop
ja
sbb
popa
pusha
pop
jno
aas
outsl
push
shll
xor
jl
scas
pop
and
ds
loopne
loopne
scas
pop
lea
sbb
or
and
cmp
push
and
lds
pop
push
fs
push
mov
in
inc
stc
mov
in
sub
mov
push
lcall
jo
or
mov
sub
ja
inc
xchg
add
dec
jae
bndldx
sahf
lock
cli
fstp
pop
mov
imul
cltd
scas
mov
inc
cmc
lods
xchg
mov
fs
jbe
icebp
sub
sbb
arpl
and
mov
xchg
out
repnz
jae
scas
cld
movsl
loop
or
popf
in
lahf
arpl
adc
pop
fcom
pop
xchg
inc
pop
lea
jmp
into
out
or
loopne
in
imul
test
int3
fcoml
fsubrl
pushf
popa
cmpsb
outsl
call
mov
ljmp
movsl
scas
jno
sahf
ret
loope
bound
and
push
dec
push
or
or
pop
push
xlat
mov
push
xchg
shl
outsl
ret
cmp
daa
xchg
and
mov
cmp
fdivrs
pop
arpl
dec
fcom
int
and
mov
mov
test
sub
cwtl
dec
mov
pop
and
fsubs
sbb
and
movsb
or
pop
sbb
lods
test
int3
addr16
jp
mov
fistpl
pop
popf
inc
int
push
cmc
pop
ficoms
enter
scas
nop
cmp
bound
or
fs
xorl
imul
sbb
pop
jecxz
pop
pop
mov
mov
mov
sbb
jecxz
loop
pop
mov
add
int
sbbl
dec
stc
xor
lret
pop
icebp
stos
pop
jns
add
xchg
js
adc
push
or
rcrl
pop
cmp
mov
push
mov
sbb
inc
cmp
call
and
mov
int3
test
out
hlt
cmpsb
sbb
cs
arpl
out
dec
cmp
nop
mov
cmpsb
nop
sub
adc
inc
jg
scas
pop
inc
lahf
mov
sbb
sub
in
cmpb
or
sub
int
adc
cwtl
sub
pop
mov
test
repnz
wrmsr
mov
jp
or
inc
mov
imul
mov
int
cmp
xchg
scas
outsb
fdiv
cmp
cmpsb
cmpsb
pushf
push
lcall
test
cmpsl
push
cld
rol
sbb
int
in
jmp
out
popa
pushf
mov
int3
les
call
gs
aam
hlt
neg
gs
pop
daa
aam
pop
sbb
addr16
bnd
test
and
mov
xchg
pop
xchg
jbe
fistps
jns
dec
jae
pop
movsb
daa
inc
aad
ret
mov
jns
mov
imul
cmc
cmc
cmp
loope
dec
les
insb
loope
mov
sub
cmp
sub
aas
push
loope
mov
arpl
in
lods
adc
add
add
loope
mov
or
mov
fsubrl
lods
sub
stos
mov
jmp
mov
call
into
int3
out
xchg
jo
and
loop
mov
mov
movsb
out
lods
or
xor
ret
loopne
imul
fldl
sbb
pop
add
mov
imul
movsb
sbb
add
fs
push
je
pop
testl
pop
test
add
sub
in
fs
cmp
incb
sub
stos
add
jae
xchg
repnz
xchg
stos
mov
idivb
aad
pop
insb
pop
pop
lock
loopne
fistpl
lahf
dec
shr
xchg
aam
dec
stc
enter
mov
pop
nop
lods
sbb
sbb
xchg
jle
nop
popf
sub
cmp
adc
adc
xchg
sbb
sbb
pushf
dec
outsl
scas
mov
sbb
int
sbb
jl
pop
data16
test
mov
inc
dec
add
xlat
sub
bound
int
sub
lods
pop
bound
pusha
ss
insl
js
shrb
js
es
aam
movsb
pop
pusha
pop
push
lcall
lcall
outsl
loop
push
loope
jle
cwtl
data16
call
ss
jmp
movsb
data16
dec
aam
icebp
add
sahf
jns
jecxz
push
dec
roll
int
rcr
dec
jl
cmpb
or
push
inc
loope
pop
xchg
scas
mov
testb
or
lods
data16
cwtl
cmpl
add
scas
adc
push
dec
pop
data16
adc
pop
lret
test
popf
push
mov
sete
mov
mov
mov
pop
fs
jbe
fstpt
std
int3
les
inc
decl
mov
imul
dec
aas
enter
inc
pop
mov
xchg
enter
loope
or
adc
or
cwtl
sarb
adc
lahf
daa
fwait
lods
fwait
push
loop
mov
cmovns
and
jecxz
mov
shrb
shrl
aas
gs
in
scas
push
stc
push
in
popa
inc
sti
adc
xchg
arpl
mov
enter
xchg
inc
lcall
loop
hlt
pop
jecxz
fs
ss
sub
fs
lea
dec
xchg
inc
popa
addb
lahf
mov
je
nop
xchg
mov
push
rcll
stc
jp
add
cltd
aaa
mov
xchg
jg
mov
clc
loope
leave
jns
pop
cld
fs
outsl
inc
mov
adc
testl
fs
adc
add
cmpsl
arpl
shlb
mov
arpl
imul
adc
xchg
jae
and
jge
notl
jb
bsf
xorl
or
lret
bound
xchg
imul
fmull
pop
add
add
dec
in
or
push
insb
test
insb
lret
push
dec
std
dec
rcr
test
jo
jne
xchg
int
fldl
xchg
into
jne
xor
sbb
insl
push
jg
mov
aaa
xor
popa
movsb
lds
xchg
push
xlat
adc
cld
or
adc
pop
pop
fnsave
int3
imul
push
jno
cmpsl
pusha
rcrl
push
int
insb
call
addr16
mov
mov
lret
xchg
fcomps
dec
clc
je
inc
mov
lods
xor
jo
mov
aas
inc
sbb
sub
cld
sbb
and
xchg
fldl
fsubrl
call
aam
aam
int3
jge
xchg
insb
sub
lcall
inc
add
lods
sub
popf
xor
xchg
mov
adc
lret
loopne
rcrb
stc
pop
push
xchg
dec
int3
outsb
or
sti
mov
sbb
inc
ror
imul
pushf
stos
lds
jmp
or
cmp
sub
movsl
das
mov
xorb
dec
add
ja
inc
or
incl
sbb
aas
mov
xchg
loop
cmc
push
cmpsl
in
mov
clc
in
sbb
rolb
lcallw
pushf
mov
jecxz
aam
jo
mov
mul
mov
iret
jl
test
mov
cld
xor
pop
or
andb
jge
scas
mov
enter
push
andl
movsb
enter
aaa
mov
inc
je
and
mov
shr
fst
int
push
inc
insl
mov
rorb
sahf
mov
out
lods
xchg
xor
inc
insl
fnstsw
jle
popf
cmp
add
sbb
cmp
lock
xchg
pop
or
dec
insl
data16
jae
leave
sbb
pop
mov
sub
in
aam
fdivrs
dec
and
rcl
lods
or
cwtl
cmp
push
push
nop
mov
lret
leave
aam
daa
pop
xchg
add
jge
cmp
insb
xchg
pushf
test
xchg
andl
lock
mov
push
and
andb
fwait
in
movsb
scas
pop
pop
xchg
push
mov
imul
shr
loop
adc
cwtl
in
pop
jle
mov
push
out
scas
mov
pop
dec
icebp
loop
int3
push
pop
xchg
or
pushf
int3
fdivs
sub
fsub
dec
and
pop
cmp
or
fcomi
orb
or
pop
sub
fs
insl
clc
stc
cwtl
shlb
sbb
mov
repnz
in
movsb
imul
jno
ds
push
sub
movsl
dec
pop
mov
mov
incb
test
jmp
leave
psubw
dec
cmpb
sub
cli
lahf
mov
xchg
mov
sbb
cmc
pushf
adc
jg
gs
ret
push
enter
cmp
scas
rcr
mov
xlat
or
test
dec
sub
cmp
inc
xchg
in
sarb
dec
out
cmp
out
stos
movsb
fsubl
stos
push
lret
in
mov
or
xchg
or
xchg
lcall
test
lcall
loop
sbb
daa
or
aas
fdivs
faddl
pop
mov
popf
and
mov
jae
adc
rcl
mov
cmp
enter
int
jb
mov
scas
paddusw
popf
cmp
shl
mov
arpl
mov
or
pushf
pop
aad
cli
or
std
loop
ja
jge
push
sbb
in
arpl
dec
sbb
mov
ret
sbb
aaa
rcll
addr16
mov
scas
or
push
push
mov
jge
push
mov
sbb
push
stos
mov
cmp
ljmp
xchg
fdivr
lods
out
push
mov
icebp
fsqrt
shl
xorl
mov
and
inc
mov
pop
and
push
cld
lods
xchg
mov
insb
fwait
xchg
adc
insb
dec
inc
fisttpll
movsl
fsubl
inc
mov
ss
cmpsb
iret
dec
cwtl
ja
pop
sahf
je
ret
rcrb
push
push
xor
pop
jge
inc
dec
das
test
insl
bound
outsb
insb
mov
cwtl
add
push
ljmp
push
lcall
cmp
test
sub
jno
cmpsb
mov
cmp
or
jmp
sbb
mov
das
sub
outsb
lods
insb
push
out
loope
adc
mov
fdivs
int
fnstenv
js
scas
cmc
sub
mov
icebp
sbb
pop
inc
cmpsl
scas
enter
xchg
or
push
xchg
dec
aam
xchg
mov
inc
lods
dec
loop
or
andb
lahf
mov
sbb
fbld
mov
pop
inc
inc
mov
outsl
int3
dec
jl
outsb
and
test
test
pop
mov
pusha
jns
popf
mov
inc
adc
mov
pop
inc
xor
mov
add
mov
cwtl
das
xorb
cmp
pop
fbstp
nop
call
test
js
jo
test
mov
sbb
mov
push
mov
leave
jg
mov
int3
bound
jns
fidivrl
scas
mov
loop
jl
push
fldl
repnz
int3
loopne
pop
loop
mov
jne
add
mov
jnp
adc
jne
xchg
fcoml
pop
push
jecxz
mov
in
mov
push
movsb
mov
movsb
lahf
test
gs
mov
dec
inc
and
add
push
daa
or
test
aaa
and
ficoms
inc
ja
add
push
add
gs
clc
loopne
adc
mov
and
push
stos
fs
mov
in
sbb
fwait
or
xor
icebp
loope
pop
pop
cmp
test
jge
jecxz
lds
test
jg
jecxz
adc
and
insb
cmpb
xor
popa
mov
shl
lret
xchg
arpl
in
shlb
sbb
mov
jmp
or
jo
flds
jle
push
fcmovnbe
frstor
fistpll
mov
cwtl
push
jl
arpl
imul
xor
sbb
inc
sbb
arpl
pop
insl
xor
pusha
pusha
out
icebp
loopne
push
fsubl
out
inc
lret
push
mov
cmpsb
ret
imul
js
fnstenv
insb
loopne
mov
mov
int
inc
outsb
pop
inc
sub
in
xchg
in
in
sbb
pop
jmp
adc
and
inc
add
popa
sbbb
lret
jl
mov
xchg
pushf
frstor
pop
cmc
mov
cmpsb
sbb
test
int
gs
push
fnsave
call
mov
jo
in
pop
add
xorb
fwait
daa
mov
rol
jo
test
or
test
int
test
mov
and
mov
jo
inc
xlat
outsl
or
je
jnp
mov
lock
push
inc
cltd
pop
aad
push
push
xchg
mov
pop
and
pop
jge
xchg
ss
in
aam
les
cmpsl
stos
add
popl
mov
lret
push
xlat
push
dec
push
je
push
insl
test
je
jns
int3
jecxz
stos
push
sbb
jns
fwait
jo
repnz
call
int3
test
inc
xchg
jnp
sar
or
mov
lret
jl
ficoml
jne
int
imul
cwtl
dec
dec
clc
jmp
fiaddl
stc
iret
pusha
xchg
mov
cmc
sbb
push
mov
sbbl
lock
dec
xor
shrl
mov
inc
lds
test
and
fs
jge
jb
mov
repz
xchg
dec
aad
adc
cwtl
fisttpll
dec
fcomps
pminsw
stos
or
nop
jns
or
inc
push
cmp
pushf
ffreep
scas
pop
sbb
mov
lods
nop
mulb
sub
aam
or
sbb
cwtl
mov
subl
push
sub
pop
xchg
push
test
ss
add
xor
push
push
inc
pop
dec
and
int
jl
pop
cmp
mov
push
pop
jp
pusha
iret
popa
jnp
sub
sbbb
push
inc
push
test
arpl
ja
insb
xor
pop
jp
out
int3
idiv
lea
push
cmp
xchg
fdivs
je
js
and
inc
bound
push
mov
sub
stos
mov
pop
mov
js
js
mov
push
out
inc
push
or
inc
push
jae
lods
lods
sti
test
int
in
or
mov
arpl
aam
loop
test
pop
je
enter
and
mov
rcr
cmp
mov
jns
xchg
fistpll
clc
imul
adc
push
bound
mov
jne
cltd
shrb
pop
sahf
pop
jae
mov
mov
xchg
mov
jo
add
xchg
push
push
jb
inc
js
fstpt
pop
sbb
mov
aaa
push
pushf
frstor
xorb
jl
fwait
mov
test
shrl
add
arpl
cmp
popa
stos
xor
adc
cld
bnd
fwait
jo
jns
add
pop
stos
cmp
cmp
jp
sub
cmc
push
pop
push
fidivs
sahf
stos
shrb
ljmp
aad
jp
aad
cmpsb
and
mov
arpl
add
cmp
icebp
push
inc
add
push
push
mov
jge
loope
push
mov
push
scas
cmp
imul
pushf
shrd
mov
push
jle
mov
nop
pusha
inc
mov
or
mov
sbb
adc
addr16
ret
dec
pop
inc
mov
fsub
fidivl
pop
mov
mov
fs
inc
test
mov
rcrl
mov
jae
push
push
in
xor
mov
bound
adc
fsubrp
pop
int3
scas
test
ficoms
cmp
adc
or
mov
fwait
mov
jae
lret
stos
test
jmp
imul
es
pusha
mov
jmp
pushf
cltd
xlat
or
mov
rclb
mov
mov
aad
outsb
push
mov
icebp
xchg
push
in
out
jo
push
inc
xchg
lock
lret
popf
pusha
push
jmp
imul
incb
push
inc
sti
or
js
shlb
in
imul
xchg
or
pop
jne
push
lods
stos
and
je
test
or
mov
mov
lods
popa
repnz
cld
dec
fildl
jno
inc
test
insb
xor
cmpsl
cmp
cmp
fistps
push
leave
enter
decb
loope
sbb
inc
sbb
inc
int
test
push
nop
xor
xchg
dec
xor
hlt
push
outsl
lods
sub
add
xor
lret
xchg
and
js
adcl
cmp
jae
pop
or
jge
pop
sbb
orb
or
in
lahf
push
xor
jnp
mov
inc
sub
popf
inc
push
cmp
jge
bswap
sbb
dec
cmp
xchg
adc
adc
fimull
push
add
insb
scas
test
dec
adc
or
or
ss
and
outsb
xor
je
frndint
and
and
ret
jge
fildl
pusha
bound
cltd
and
pop
jp
lds
rcl
test
stos
loope
jb
mov
inc
mov
insb
mov
dec
cmp
sahf
xchg
add
push
insb
fcmovu
rcll
iret
adc
sbb
out
popa
test
xor
push
ljmp
xor
sbb
and
dec
out
add
imulb
js
addr16
sbb
cmpsb
or
das
push
fs
aaa
xlat
das
adc
pusha
daa
mov
xor
cmp
mov
mov
es
jb
mov
sahf
sub
push
push
lcall
addl
pop
out
mov
or
adc
mov
cmp
add
sbb
mov
lret
mov
cld
je
mov
jg
fcoml
gs
in
and
sub
shrb
sarl
test
jle
mov
mov
jg
cmp
mov
cwtl
jl
cltd
inc
fimull
add
push
imul
cwtl
outsl
inc
xlat
sbb
andb
pushf
push
ds
sbb
pop
test
sub
cmp
push
in
mov
push
scas
pop
fs
imul
and
sub
push
add
inc
aaa
mov
pushaw
inc
and
nop
adc
fsubrl
pop
rcrl
jp
adc
inc
out
aam
bound
push
in
std
insb
pop
popa
inc
mov
clc
int
push
fidivl
pop
loopne
and
inc
xchg
andb
cmpl
je
pop
inc
adc
jnp
mov
xor
pop
inc
sahf
jo
fistps
ret
mov
imul
sbb
mov
pop
mov
scas
imul
mov
sahf
loopne
mov
jns
xchg
mov
data16
flds
flds
flds
flds
addl
flds
flds
flds
fnstcw
out
adc
fistl
adc
mov
addb
jp
xchg
faddl
adc
pop
cmp
mov
pop
arpl
inc
arpl
jbe
pusha
ja
dec
adc
pusha
jbe
lret
pusha
jne
jle
lods
pusha
je
push
lods
pusha
jae
mov
xor
jns
adc
sbb
jecxz
icebp
mov
sbb
sbb
xchg
push
popf
sbb
pop
popf
sbb
fcompl
stc
js
sbb
fldl
in
sbb
test
fisubs
fs
fdivl
fiaddl
adc
stos
mov
xor
fs
imul
into
mov
pop
lret
push
sub
push
jo
push
mov
push
push
mov
push
mov
push
pop
scas
xchg
mov
stos
andl
xchg
push
adc
addb
jnp
pop
test
loopne
xchg
insl
xor
movsb
add
pusha
mov
mul
shrl
xchg
jp
cmc
push
or
push
mov
jne
push
dec
mov
sahf
dec
jne
jge
enter
push
or
mov
cmp
jl
ljmp
add
mov
xchg
adc
push
pop
and
ror
inc
mov
in
and
jae
mov
mov
int3
vpaddq
arpl
jne
cmp
sbb
dec
xor
test
inc
lods
lcall
in
cld
jbe
xor
adc
adc
js
inc
in
mov
hlt
cmp
nop
inc
sbbb
inc
and
jl
scas
mov
subb
mov
ja
test
ret
imul
mov
fs
testl
fsubr
cs
mov
rorb
pop
and
mov
adc
jecxz
iret
lods
inc
mov
or
aas
stos
into
mov
pop
inc
int3
rol
xchg
iret
lods
jge
mov
lock
rcll
stc
orl
mov
clts
pushl
sub
addr16
jae
stos
ja
dec
test
or
out
push
mov
push
inc
sbb
sub
loope
pop
js
mov
xchg
or
ljmp
fstpl
imul
sbb
dec
bound
push
or
xor
mov
cmpb
movsb
loopne
add
leave
cmp
imul
add
pop
in
icebp
jecxz
pusha
call
pop
add
sub
xchg
bound
mov
insb
scas
push
push
xchg
addr16
popf
xchg
repnz
int
rorl
sub
mov
clc
mov
ja
rclb
mov
sub
or
mov
outsb
or
sbb
mov
test
outsb
outsb
dec
xor
ret
jb
sbb
push
fstpt
popf
andb
bound
cld
movb
jae
jo
test
or
mov
loopne
xchg
xchg
fnsave
stos
fcoml
push
and
insb
stc
cmp
jmp
add
cmp
js
push
add
push
in
out
sarl
xchg
fstpl
dec
pop
pop
jecxz
cli
std
subb
pusha
jl
inc
int
clc
sahf
pop
jecxz
and
subl
scas
jno
pusha
pop
in
mov
pop
jl
outsl
pop
cs
out
shll
call
and
int
inc
not
or
pop
push
iret
cmp
mov
iret
and
call
mov
jb
leave
pop
imul
outsl
pop
adc
bound
ljmp
and
sbb
jmp
insb
shl
addl
cltd
ja
mov
push
push
xchg
mov
push
pop
aam
arpl
subb
mov
inc
mov
inc
fwait
push
adcl
push
xlat
cmp
fsts
dec
xchg
mov
scas
and
nop
sbb
mov
xchg
dec
addr16
mov
jo
push
push
inc
dec
add
sub
and
mov
aaa
rcrl
adc
popf
jo
adc
jmp
cmp
int
icebp
adc
pop
in
iret
pop
or
lahf
cwtl
xchg
add
mov
into
mov
mov
xchg
popf
mov
mov
cltd
loope
insl
inc
pop
push
aad
js
nop
inc
mov
clc
loop
pop
or
js
pop
mov
js
andl
inc
and
and
mov
iret
sbb
ret
pushf
lds
subb
mov
pusha
int
jb
mov
pop
adc
cmpsb
lahf
xchg
gs
sub
pusha
push
jge
inc
xor
into
jo
ja
cltd
inc
push
orl
mov
push
or
adc
fcmovne
add
in
cmp
ja
adc
data16
push
inc
les
movsl
jl
mov
lods
lds
sbb
mov
int3
js
inc
or
je
fdivl
adc
sub
andl
push
push
mov
popf
jmp
push
lret
pop
inc
fdivs
mov
lret
andb
pop
pop
push
lea
inc
js
pop
inc
sbb
ds
out
cmp
mov
or
test
mov
shll
jbe
pop
out
lcall
xor
and
mov
in
lds
sbb
outsl
xor
xor
pop
out
mov
mov
mov
push
insb
cmpl
dec
mov
popa
jg
and
pop
mov
push
and
popa
into
push
aad
inc
test
push
popa
or
nop
and
pusha
xchg
cmpb
xor
in
out
or
les
das
ljmp
in
push
push
inc
cmp
jns
sbb
and
pop
add
scas
inc
imul
pop
insl
ja
inc
jo
loopne
aad
inc
pop
in
xchg
insl
call
popf
pop
xchg
mov
lahf
mov
outsb
fsts
lock
sbb
lret
mov
pop
movl
loopne
push
cmp
mov
pop
scas
adc
dec
xchg
loop
pop
and
and
pop
jae
das
dec
push
fwait
mov
push
testb
ja
push
add
in
mov
push
dec
shl
je
inc
mov
imul
insb
adc
orl
jg
sub
xor
xor
pop
loope
fs
and
ds
scas
int
pop
fmull
pop
jno
mov
pop
dec
ret
loope
int
addl
xchg
shll
jns
dec
pop
ret
popa
fwait
jl
mov
dec
adc
shrl
jg
dec
inc
call
add
test
push
xorl
sub
pusha
jecxz
std
lods
and
pop
imul
pop
arpl
stos
pop
mov
inc
stos
js,pn
fstl
loope
mov
pop
cwtl
mov
int
mov
aam
ret
sbb
fisttps
dec
sbb
sbb
popf
adc
js
xor
imul
push
push
mov
mov
fnstenv
in
data16
enter
frstor
or
push
inc
add
cmc
test
scas
or
fildll
dec
test
mov
sbbb
scas
sarb
jno
stc
add
mov
lds
mov
js
shll
jo
je
jnp
mov
cwtl
mov
ljmp
loop
jp
and
mov
mov
scas
pop
sahf
mov
pop
xor
cltd
mov
pop
push
pop
aam
xchg
inc
pop
pop
pop
adc
pop
sbb
aad
push
xor
aas
rcrb
xchg
sti
bound
insb
aad
adc
push
dec
cwtl
fstl
dec
add
xchg
mov
into
ret
pusha
xlat
jmp
cmpsb
xchg
xchg
scas
aas
dec
sahf
fwait
sbb
cmc
adc
lcall
test
pusha
sub
or
sub
aas
call
mov
push
insb
pusha
aas
pop
lahf
iret
and
or
mov
mov
mov
into
pusha
sarb
add
mov
idivb
cltd
mov
mov
out
mov
lds
mov
sub
pop
loope
xor
lods
test
mov
inc
or
or
cwtl
add
push
loopne
fs
push
xchg
fistpl
nop
sbb
lret
in
jl
inc
jge
cmp
test
nop
mov
pop
lret
int3
cmc
shll
sbb
jb
dec
cmpb
lock
jge
pop
pop
int3
pop
xchg
or
outsl
lcall
orb
enter
mov
push
jmp
in
mov
push
int
dec
sub
fsubrs
inc
mov
cmovle
xor
insl
cltd
test
push
mov
jmp
das
cwtl
icebp
pop
insb
xor
insl
iret
sbb
add
rcrl
pop
pop
bound
rclb
enter
sbb
in
xor
mov
scas
outsb
int3
popa
mov
fmull
add
ljmp
xchg
xchg
pop
jb
jo
jns
xchg
dec
dec
add
mov
fucom
add
int
inc
rorl
test
out
or
pop
insb
mov
adcb
push
jo
push
xor
and
pop
stos
cmp
push
mov
ds
sbb
lea
inc
inc
adcb
lods
dec
enter
sbb
jno
adc
lods
ljmp
in
add
das
and
fwait
mov
loope
int
or
and
mov
imul
mov
pop
jg
xor
sbb
dec
sahf
insb
cmpsb
pop
push
and
inc
mov
inc
mov
pusha
push
shl
loope
arpl
test
xchg
lods
lret
fidivrs
pop
loope
pop
ret
add
stos
test
stos
pop
daa
pop
cmp
pusha
mov
arpl
fs
hlt
bound
add
sub
bound
mov
int3
push
test
inc
xor
addb
jns
fdivl
add
push
mov
shll
in
ds
jl
inc
jecxz
movsb
cmc
loope
adc
push
push
mov
lds
fdivrl
pusha
xchg
push
pusha
data16
jge
push
sarl
cmp
add
xlat
mov
mov
addl
mov
and
inc
adc
rolb
xchg
sub
add
sbb
fistpl
loope
fldt
popa
scas
lods
insl
dec
out
into
sub
stos
lock
repz
dec
test
fwait
adc
xchg
out
dec
add
out
movsl
pop
inc
xlat
cmp
ror
les
or
test
sbbl
cmp
push
push
ja
iret
push
dec
bound
jg
aaa
sbb
mov
sbb
pushf
and
cwtl
mov
cmp
xor
jnp
and
lret
jnp
pop
jmp
iret
insb
xlat
pop
mov
insl
scas
pushf
jg
mov
loop
dec
iret
mov
dec
inc
out
add
add
mov
int3
in
bound
mov
aam
pop
insl
xchg
dec
xlat
popa
inc
xor
gs
and
icebp
push
mov
jae
orl
lods
lock
stos
daa
int
mov
xchg
mov
test
aam
jp
or
push
push
int
das
pop
mov
popa
test
repz
adc
mov
jmp
nop
int
pop
and
inc
imul
push
jmp
push
xor
jmp
add
lock
jno
jge
sbb
mov
hlt
xchg
sbb
cli
jo
jne
push
add
push
int3
jae
dec
push
adc
int
cltd
in
in
in
xchg
stos
cvtpi2ps
push
jp
cwtl
fwait
iret
mov
jmp
push
sbb
mov
pop
in
arpl
loopne
push
mov
test
popa
call
jb
xchg
sub
pop
mov
xor
pop
adcb
scas
mov
out
in
enter
gs
dec
scas
add
in
insb
int
ret
imul
jae
mov
cs
notb
in
add
std
sbb
jns
test
lds
fs
imul
lods
adc
pushf
add
out
adc
insb
faddl
out
fidivl
mov
lret
aad
arpl
add
jg
mov
popa
mov
cmovs
push
lret
test
out
push
pushf
les
push
pusha
popa
sahf
js
mov
dec
int
aaa
movsb
mov
cmpsl
jbe
dec
fstl
ja
jp
daa
aam
das
pushf
xor
inc
jecxz
jl
lds
ret
pop
stos
movsl
jg
sub
popf
inc
scas
xchg
loop
lret
icebp
jno
daa
xor
arpl
popf
xor
fistpl
in
imul
aam
pop
dec
pop
stos
sub
shlb
jns
inc
or
sti
sub
popa
cmp
cmp
gs
in
fisubs
insl
imul
sti
imul
cwtl
imul
iret
push
pop
out
call
push
mov
leave
jge
mov
mov
das
pop
jge
mov
sub
cwtl
pusha
int3
je
mov
cmpsl
dec
clc
or
loope
fnstsw
lods
ret
lcall
pop
scas
mov
xchg
cmc
sbb
push
xor
movq
mov
incb
cmp
push
or
je
mov
loop
or
sarb
xor
enter
xchg
mov
insb
push
push
cmp
shlb
ja
mov
loopne
loopne
sub
jns
loope
pop
ret
mov
sahf
test
sbb
sub
loope
mov
cmpsl
mov
sub
and
jbe
cmp
std
xor
pop
outsb
cmp
fisttps
mov
pop
lcall
test
xor
sbb
imul
jb
cmp
add
mov
mov
test
xchg
js
lcall
sub
fstpl
test
jp
stos
ljmp
mov
cwtl
sub
mov
add
dec
mov
dec
sbb
cmc
xchg
jecxz
sub
sub
test
jne
addb
mov
cmc
sub
fidivrs
jbe
inc
and
nop
inc
dec
jne
cmp
out
pop
jb
or
loop
adc
fwait
nop
add
jecxz
pushf
dec
fldl
xor
stos
mov
int3
scas
jnp
jl
mov
jns
fisubrs
sub
pushf
insb
sbbl
cli
aam
pushf
mov
in
pushf
insb
jmp
and
mov
mov
cltd
in
dec
xchg
call
leave
sub
dec
loopne
sahf
rcrb
xchg
cmp
and
clc
fmul
outsl
xchg
xchg
je
jg
or
cmp
scas
les
ret
add
sbb
pushf
test
ret
insb
in
jo
inc
add
lods
pop
jbe
push
mov
sar
dec
jns
or
aaa
lahf
push
add
pop
push
scas
test
pop
stos
aad
out
jge
add
and
in
xlat
push
int3
jb
add
sbb
outsl
jp
test
mov
mov
subb
data16
mov
pop
mov
popf
push
add
mov
dec
adc
add
mov
sbb
pop
scas
les
mov
ds
mov
xor
push
pop
mov
inc
pop
jg
movsb
scas
sahf
xchg
push
xorb
std
pop
fs
bound
aam
mov
pusha
xlat
mov
in
cwtl
pop
inc
lods
js
dec
mov
das
xchg
sbb
jns
mov
push
push
movsb
sahf
or
lock
jno
imul
insb
mov
xchg
sbb
pushf
mov
lcall
mov
jg
fs
outsb
ja
cwtl
sub
mov
call
fildll
test
mov
or
jg
mov
sar
mov
xorl
addl
lods
pusha
shl
imul
adc
xor
ljmp
insl
mov
mov
fstpt
xchg
pop
jecxz
adc
mov
test
pop
xor
lret
add
out
out
scas
sub
push
lock
push
aam
roll
cmp
mov
out
push
adc
pop
xor
xor
fmull
pop
and
pop
jae
push
jecxz
add
pop
sbb
mov
pusha
or
mov
mov
jl
dec
push
fcomps
outsl
imul
xor
rcrb
xor
mov
mov
lcall
mov
mov
mov
push
sub
jbe
push
loopne
sbb
addr16
mov
inc
mov
fisubl
add
or
mov
mov
add
lods
inc
imul
mov
push
or
push
insl
movsb
daa
clc
jg
sub
loopnew
cmp
popf
xchg
push
loope
xchg
push
pop
jno
outsb
push
out
imul
sub
mov
xor
faddl
sub
cmp
fmull
test
dec
test
pop
xchg
in
jp
outsl
inc
repnz
pop
dec
cltd
and
aam
sbb
outsl
arpl
int3
dec
imul
sbb
pop
inc
jae
inc
adc
out
loope
loope
addb
push
adc
xor
gs
fdivl
add
mov
gs
push
xor
inc
mov
mov
cmpb
sub
push
stos
pop
test
mov
jne
jo
loopne
inc
insb
cmc
mov
lret
daa
jmp
scas
ds
stos
loope
mov
jnp
test
incb
fwait
xchg
cltd
hlt
rcll
jae
rorb
out
mov
ljmp
test
jp
aam
int3
adc
mov
add
test
jne
fldt
jle
jmp
repnz
daa
out
int3
std
pop
stos
mov
jl
in
add
push
sub
cmp
add
pop
popf
insb
sub
scas
lock
sahf
jnp
fldl
pop
jmp
mov
imul
insb
dec
fcomps
jp
sub
clc
lea
mov
test
test
add
popf
mov
test
push
adc
stos
mov
adc
test
in
xchg
xor
jg
pop
hlt
sbb
xchg
pop
scas
test
jns
imul
imul
fcompl
les
fwait
mov
xchg
mov
movsl
out
inc
pop
stos
xchg
aad
sub
jle
inc
sub
ret
gs
mov
popf
hlt
pop
jno
test
loope
mov
sahf
pushf
sbb
adc
lahf
and
loope
mov
xor
jo
mov
dec
jecxz
ljmp
pushf
sub
imul
xor
add
mov
push
insb
push
mov
fstl
in
xor
cwtl
out
xlat
jo
mov
repnz
fsubl
mov
inc
xchg
dec
inc
out
stos
pop
inc
es
popf
rcr
lods
sub
xlat
cmp
or
test
jae
xor
cmpsb
jae
bound
subb
inc
mov
pop
inc
inc
cmpb
xor
jmp
cld
je
loopne
loope
je
pop
inc
mov
xchg
mov
mov
mov
push
push
adc
nop
ficomps
lods
jns
scas
cwtl
add
clc
dec
mov
sbb
mov
scas
push
cmp
test
and
sti
xor
jecxz
or
lods
dec
cmpsb
sub
into
clc
imul
jne
mov
les
in
sbb
push
pushf
rolb
inc
cmc
fisubl
pop
test
fildl
xchg
mov
nop
sbb
loopne
dec
jg
jnp
std
dec
daa
add
mov
add
cmp
inc
and
push
xorb
lcall
lods
adcb
xchg
sub
sub
loop
mov
dec
pop
cmc
in
fstl
bound
lods
and
test
data16
call
or
mov
outsb
out
dec
ljmp
iret
lahf
faddl
lret
inc
popa
xchg
xchg
mov
mov
les
xchg
jecxz
xor
or
xor
add
mov
sbbl
daa
in
dec
imul
add
jp
shrl
mov
inc
jg
pop
push
mov
aaa
pushf
jge
add
test
rclb
xchg
push
jmp
scas
lahf
mov
mov
aam
fld
sahf
jns
nop
pop
in
pop
jle
jo
and
aad
mov
push
pop
push
push
adc
fnstenv
mov
loopne
dec
or
cwtl
jmp
sbb
and
lods
pop
cli
scas
imul
addb
xor
jp
lock
mov
sbb
dec
inc
jl
enter
dec
dec
ret
add
fadd
fsubl
push
push
cmp
mov
and
addr16
jnp
test
add
popf
lods
jmp
pop
ret
add
sarb
and
test
pop
shrb
pop
icebp
jne
jle
lcall
ljmp
pop
xchg
inc
pusha
push
movsl
mov
loope
test
sbb
fimull
sub
push
loop
mov
hlt
shlb
pop
movsl
push
enter
aad
imul
rolb
movaps
out
xor
test
inc
pop
into
icebp
loopne
popf
aad
shrl
mov
or
clc
adc
lods
test
jecxz
push
nop
sbb
lods
mov
jmp
push
in
jge
mov
inc
push
rcr
jmp
pop
mov
pusha
sbbl
add
out
sub
popl
adcl
sbb
pop
gs
jge
lcall
ljmp
and
in
xchg
fsts
lods
jns
dec
insl
test
pop
jge
mov
pushf
pop
call
test
pop
lea
jge
pushw
mov
aad
lods
scas
mov
add
sahf
sub
mov
sahf
pusha
cwtl
test
jecxz
xchg
adc
xor
push
mov
add
inc
jnp
int3
arpl
scas
rcrb
ret
mov
cwtl
xorl
stos
push
repnz
pop
pop
cltd
push
push
imul
cmc
jp
arpl
pusha
push
and
mov
pop
jmp
adc
fnstsw
stos
lods
xchg
jmp
out
xor
ss
push
dec
dec
repnz
push
arpl
pop
or
ljmp
aam
xorl
cltd
mov
leave
and
and
fsts
out
pop
lea
subb
pop
xchg
inc
je
bound
and
mov
mov
sahf
iret
xchg
js
inc
cwtl
scas
inc
jbe
fwait
bound
push
cmp
nop
shl
cmc
in
cld
push
push
add
lds
jnp
add
into
jmp
pop
mov
bound
push
movsl
mov
nop
movsb
loope
mov
mov
mov
das
mov
mov
or
rcrb
sub
shl
mov
cmc
mov
into
outsl
inc
or
cmp
or
in
push
inc
dec
mov
bound
repnz
cmpsl
ss
test
add
mov
mov
ret
imul
adc
repz
rol
aaa
pusha
adc
cmp
out
cmpl
test
rorl
decl
inc
push
subl
arpl
lock
test
lods
clc
aaa
mov
or
lods
test
fcmovb
push
scas
mov
hlt
loopne
pop
mov
mov
aad
dec
imul
test
lods
fisttps
or
icebp
push
rorb
cmp
cmpb
repz
out
mov
and
stc
or
pusha
mov
push
cwtl
inc
fcoml
mov
loop
test
cmp
mov
add
aas
or
mov
jmp
cmp
xchg
ja
or
in
into
pop
and
sub
hlt
nop
mov
cs
mov
lods
jp
mov
pop
mov
loope
insl
mov
gs
test
fnstsw
push
enter
jns
xorb
or
cmp
nop
leave
in
xor
test
sbb
mov
mov
mov
jae
lods
dec
movl
and
js
into
test
negl
cld
xchg
xor
push
jmp
cmp
add
mov
mov
dec
jge
rol
jmp
or
mov
cmc
push
cmp
xor
addr16
lods
outsb
iret
addl
int3
cmpsb
push
push
cmpb
cmpsl
ret
jb
xor
loope
or
fisubrl
jg
push
addl
std
das
jo
inc
les
or
mov
insb
xchg
mov
movsl
push
inc
push
adc
pop
test
push
mov
ret
sbb
or
jge
mov
mov
sbb
mov
and
add
fsts
sbb
in
cmp
cltd
adc
xchg
aam
xor
int3
mov
lcall
jo
xchg
jp
mov
loope
loopne
js
adc
push
cwtl
test
ljmp
lock
loope
xchg
fcmovbe
fisubrl
imul
mov
inc
fidivrs
addr16
pop
mov
sbb
aad
jae
daa
ds
lret
jmp
subb
pop
test
gs
ret
jp
fldenv
cmp
fisubl
fdivrl
push
int3
xrelease
lret
ficompl
mov
stos
loope
xchg
push
jle
scas
ss
xor
outsl
and
inc
cmpl
mov
aas
imul
sbb
fs
sarb
adc
ret
pop
adc
xor
insl
or
ficomps
fnstsw
mov
stos
inc
mov
push
mov
in
daa
xchg
sub
test
lods
mov
int3
pop
imul
adc
cmp
push
mov
data16
adcl
loope
mov
popa
lds
jecxz
imul
in
aad
cltd
ret
lods
lods
test
in
addr16
scas
dec
or
cmpsl
sbb
pop
lods
notl
mov
mov
mov
loop
hlt
or
add
insb
stos
pop
adc
and
push
add
icebp
into
fldenv
addr16
mov
pop
lret
insb
cmp
mov
jp
loope
popa
hlt
adc
fdivrl
insb
mov
mov
xchg
sub
sahf
and
insb
loopne
jae
mov
jns
jmp
outsb
inc
xor
cmp
faddl
int3
jns
adc
sub
jo
add
pop
insl
jno
in
ljmp
pop
jae
inc
shlb
in
data16
pop
jns
imul
outsl
sbb
pop
nop
sahf
cwtl
in
jmp
subb
mov
sbb
or
or
mov
popa
cmp
mov
pushl
pop
pop
inc
cmp
loop
insb
mov
les
xchg
push
mov
shrb
inc
loope
adc
pushf
push
adc
pusha
in
push
cld
movsb
jo
cmpsl
lods
mov
mov
stos
cmp
mov
fcompl
mov
mov
xor
cmp
jbe
xor
fbstp
add
mov
sub
cmp
xchg
js
cmp
or
adc
movsb
adc
mov
andl
cmp
cmc
pop
dec
sahf
jle
and
movsb
sbbl
out
fisubrs
lods
dec
push
inc
sbb
jle
outsb
das
dec
pop
sub
mov
mull
cld
inc
sbb
pushf
inc
lods
stos
jp
scas
leave
mov
xchg
sbb
sbb
aaa
mov
and
ret
adc
cmpsb
mov
mov
and
and
push
cs
or
nop
fs
inc
cli
repnz
stos
imul
mov
mov
mov
call
sbb
pop
add
pop
mov
lret
sub
daa
xchg
rclb
jecxz
nop
push
mov
mov
test
lock
push
addb
dec
rol
out
addr16
insl
mov
inc
jp
mov
pushf
sub
stos
test
sub
popf
mov
inc
popf
cmpsl
mov
lods
sbbl
loop
scas
test
scas
mov
mov
sbb
mov
cli
insl
gs
inc
aad
mov
mov
jae
jecxz
ljmp
xchg
mov
bound
mov
xchg
adc
pop
inc
push
ret
cmpsl
add
add
jns
pop
push
pop
fdivp
scas
add
mov
addl
nop
scas
test
xor
loop
in
stos
shll
mov
xorl
sub
adc
stos
jge
mov
iret
cmp
punpckhdq
mov
inc
cmp
lret
fistpl
inc
ds
inc
sbb
insl
in
idivb
fisubrl
mov
dec
adcb
mov
or
xchg
add
je
ljmp
mov
adc
insb
mov
push
les
cli
dec
xor
stos
shll
loopne
lods
fucomp
mov
jb
inc
xor
xchg
sub
jb
mov
js
cmp
cmp
push
mov
jo
inc
test
dec
jmp
mov
mov
inc
push
fnstsw
js
jle
ret
pop
into
jle
mov
ljmp
les
iret
in
add
out
loope
xorl
cwtl
mov
inc
mov
mov
push
sub
test
mov
jne
nop
pop
or
jp
or
arpl
ja
cmpsb
and
jae
or
aad
bound
jno
pop
mov
lahf
and
xor
fmull
mov
add
aas
pusha
dec
pop
mov
fldenv
enter
sub
dec
xchg
std
in
repz
outsl
mov
adc
adc
mov
cmc
cs
jno
stc
or
cmc
js
sub
icebp
sub
cmpl
test
sub
mov
pop
out
mov
imulb
int3
xchg
mov
and
mov
or
pusha
and
pop
xlat
ds
jo
or
ret
fdivrl
stc
push
inc
ficoml
test
popa
lds
xor
sbb
cli
adc
aad
xchg
jne
sub
int
lds
push
sarl
xchg
pop
push
mov
push
sub
xchg
test
popa
clc
mov
addr16
psllw
ret
fcmovb
imul
mov
mov
subl
jae
or
push
lret
es
mov
pop
mov
push
int
or
imul
stos
mov
cmpsl
cmp
mov
rcll
dec
int3
jae
shrb
je
out
xor
js
test
cs
xlat
cmp
dec
les
adc
insb
xchg
cmc
dec
mov
enter
imul
mov
jl
pusha
sbb
fdivl
pop
pop
in
jl
into
cmpsl
or
dec
sbb
jge
inc
int
jbe
push
dec
int3
jo
cwtl
out
push
test
pop
outsl
insl
push
inc
push
add
push
jl
lcall
and
shll
pop
xor
outsb
jnp
pop
and
ret
cmp
pop
insb
jns
or
bound
call
inc
ja
ss
jp
sarl
imul
pushf
pushf
stos
loopne
push
mov
xor
push
sbb
jmp
pushf
repz
cmpsb
sub
fdivs
int
mov
insl
int
outsb
ret
cmp
inc
sub
arpl
lods
cwtl
jo
push
xchg
into
sub
pop
or
jmp
sbb
pusha
ljmp
cld
cmp
data16
jmp
test
in
enter
or
in
cmp
cmp
xor
fs
dec
test
out
jge
je
imul
pop
and
lret
les
jg
pop
push
jbe
loopne
inc
mov
lock
pop
cmp
call
cmp
xchg
popa
sub
dec
add
mov
in
iret
pushf
mov
in
adc
xor
mov
mov
inc
jl
sub
or
mov
imul
sbbl
or
loopne
cmp
ds
outsb
cwtl
xlat
arpl
sub
inc
sbb
jle
mov
mov
clc
dec
pop
add
mov
arpl
or
test
add
loopne
dec
aad
mov
insb
dec
mov
xchg
push
popf
push
adc
mov
xchg
pop
test
daa
dec
and
and
in
push
mov
xchg
pushf
cs
xchg
dec
sub
mov
cmpsb
scas
or
push
cmp
mov
mov
sarb
bnd
sub
lea
mov
hlt
insb
mov
scas
dec
jne
mov
and
pop
out
jg
xchg
test
push
jle
iret
mov
in
orb
push
mov
out
test
gs
cltd
jne
int3
ror
mov
add
out
cmc
out
push
es
sahf
fildll
jns
add
mulb
sbb
push
inc
in
jns
xor
add
fdivr
push
adc
push
bound
sarb
add
int3
or
hlt
push
inc
mov
call
imul
and
js
sbb
mov
rolb
sub
lcall
mov
aam
gs
gs
cmc
or
push
ret
and
in
jle
and
lods
cmp
mov
jp
fxrstor
inc
cwtl
movsb
inc
xor
test
test
sub
mov
mov
adc
fdivl
fistpll
mov
pop
or
mov
xor
adc
cs
aaa
mov
dec
xor
mov
punpckhbw
xorl
adc
fwait
jg
xchg
ljmp
jle
jl
pop
addl
fadds
inc
jge
sub
xchg
std
fcomps
fdivrl
mov
mov
pop
inc
loope
inc
dec
jge
test
dec
stos
and
pop
scas
inc
enter
jno
enter
push
test
inc
pushf
mov
sub
pushf
les
je
jno
jl
test
dec
loope
xchg
jnp
cwtl
push
pusha
adcl
push
xor
jp
jle
sub
sbb
arpl
adc
jbe
jns
sub
jl
and
loopne
xor
outsb
ds
xor
xor
aaa
lock
loope
stc
clc
sub
jnp
lcall
rorb
lret
loope
nop
xor
sbb
add
inc
push
adc
push
js
pop
mov
loope
icebp
lock
push
hlt
or
rcll
in
loope
fwait
cmp
out
dec
in
jbe
insb
addl
sbb
cmp
jmp
incb
jne
insb
cmp
lcall
sbb
aad
dec
in
loop
ljmp
push
arpl
cwtl
movsb
fdivrs
ja
jp
add
movsl
push
sub
cmp
lahf
nop
aam
pop
push
dec
insl
nop
and
mov
lret
jl
sub
mov
sub
or
jns
sbb
shl
pop
arpl
sub
xchg
scas
subb
lds
or
mov
jg
and
xchg
xchg
inc
test
pop
jmp
or
xchg
mov
movsb
pushf
cwtl
insb
sbbb
or
imul
mull
aad
bound
sub
out
mov
mov
loope
sbb
scas
push
popl
jmp
mov
stos
ljmp
les
in
push
and
xchg
mov
or
and
lcall
mov
jp
pop
mov
adc
sub
in
cli
pusha
das
lret
cwtl
adc
or
inc
pop
xlat
lds
jl
mov
jno
roll
insb
or
js
dec
mov
mov
mov
sbb
mov
ret
popf
rcll
test
je
cmp
jnp
out
mov
mov
imul
push
loopne
or
fdivl
mov
pop
bound
fcompl
pop
adc
adc
mov
insl
loope
inc
xor
adc
sub
pop
les
test
jp
inc
or
inc
stc
pop
and
jbe
test
in
cmpsl
sbb
sbb
xor
mov
push
sahf
andb
add
push
xchg
lret
insb
enter
cmc
jno
mov
cltd
mov
push
mov
add
push
or
push
sub
jno
or
xor
movsb
or
jmp
ret
fucomp
xchg
cmp
movsb
mov
mov
mov
data16
fcomp
aas
addr16
pop
sbb
xor
pushl
and
pop
jb
jmp
sbb
arpl
lods
add
in
or
arpl
push
push
shlb
imul
push
adc
out
int
and
ret
loope
mov
xchg
repnz
push
mov
jp
insb
aad
ret
inc
frstor
and
adc
repnz
dec
mov
and
pop
sbb
mov
add
dec
adc
xor
xchg
or
imul
imul
popa
mov
faddl
pop
dec
and
inc
cmp
dec
cld
rclb
sbb
sbb
outsl
pop
in
and
jnp
dec
fsubl
rcrb
mov
fimull
test
psllw
mov
jmp
es
mov
lock
pop
inc
jg
cmpsb
imul
es
xchg
out
pop
mov
inc
mov
inc
mov
js
sub
xchg
pop
xchg
and
jnp
js
sbb
test
test
iret
lods
inc
xchg
xor
sbb
sbb
stc
stc
mov
mov
shlb
rclb
xlat
jmp
push
and
nop
pop
inc
xor
insl
inc
pop
sub
mov
ljmp
or
nop
shlb
push
and
lods
movsbl
push
lods
std
imul
jecxz
int3
cltd
push
sbb
js
pop
pop
int3
into
and
xchg
cmc
inc
fs
scas
mov
fdivr
inc
int3
or
pop
push
xlat
mov
cmp
cmp
adc
js
pop
sub
cwtl
outsb
pop
push
fstps
xor
bound
fs
gs
add
test
xorb
insb
pop
pop
faddl
and
outsl
pop
ret
testb
lods
jp
sub
ret
add
aam
sbb
jg
inc
les
out
fmull
lcall
adc
gs
fldenv
and
imul
jnp
popa
push
mov
jp
movsl
sub
lods
insb
sub
and
jl
cmpb
inc
imul
mov
and
inc
andb
push
ds
cmovl
int3
popa
mov
in
jecxz
inc
sbb
test
cmpsb
es
lods
xchg
arpl
sbb
shr
sub
imul
pushf
je
fdivrs
das
nop
pop
cmp
fs
mov
stos
test
inc
lret
jae
mov
dec
or
movsl
out
imul
inc
popf
std
lds
jl
lcall
stos
jnp
scas
mov
fucomip
add
or
lods
gs
movsb
dec
fsubl
mov
jno
popa
mov
shlb
loope
stos
adc
mov
popf
xchg
addl
test
sbb
mov
and
push
cmpsb
bound
xchg
adc
pop
dec
dec
ret
sub
lods
test
cmp
lcall
push
add
arpl
sbb
jge
mov
js
loopne
dec
ja
sbb
les
arpl
mov
adc
fisubrl
fdivrs
hlt
cmpsl
sub
jle
jns
andl
pop
rcrb
push
jge
sub
mov
adc
mov
push
int3
or
fadds
in
les
pop
in
mov
jecxz
int3
jl
xor
xor
xchg
adc
mov
test
xor
adc
sub
xor
int3
pusha
jecxz
xchg
cltd
mov
and
inc
sub
outsl
jo
pop
fadds
gs
cmp
clc
xchg
lds
les
add
jecxz
cmpsb
jo
imul
sbb
jno
cld
and
push
cmp
fimull
xchg
jp
shrb
sub
repnz
int3
cmp
pop
jo
or
add
repnz
xchg
mov
popf
test
adc
sbb
xchg
in
stos
jp
imul
adc
movsb
in
ljmp
sub
stos
inc
inc
arpl
cmpsl
popa
push
jl
pop
movsl
stos
sbb
push
sbb
addl
pusha
pusha
inc
add
mov
out
or
or
jg
or
xchg
bound
aaa
hlt
pop
je
pop
push
int
test
dec
in
cmpsl
jb
inc
mov
movsl
sub
or
cmp
bound
xor
js
inc
test
pop
sbb
loop
mov
dec
lds
sub
sub
add
mov
pop
push
mov
arpl
leave
clc
jp
rcl
sub
mov
cmc
lahf
enter
loop
scas
pushf
insb
dec
sbb
cmpsb
sbb
scas
xchg
adc
mov
pop
jp
pop
scas
pushf
test
mov
sub
jne
pushf
call
jno
aam
and
and
pop
fcoml
sbb
push
movsl
aas
test
pop
nop
inc
lds
push
imul
pop
fs
testb
aam
movsl
cmp
daa
insb
inc
dec
sbb
xchg
movsb
lods
test
jnp
pusha
mov
je
push
jnp
mov
mov
cs
mov
inc
outsb
xor
mov
mov
sub
sbb
dec
lea
call
test
test
jne
cmp
sbb
inc
jne
push
andb
shlb
add
xadd
sahf
nop
clc
call
mov
jge
mov
mov
idivb
cmp
rclb
cwtl
pop
aam
xchg
ret
mov
push
mov
xlat
dec
pop
stos
pusha
sarl
cwtl
data16
call
mov
mov
iret
jg
cltd
leave
mov
push
jae
xchg
xor
popf
fidivl
stos
pusha
loop
mov
and
mov
js
test
bound
ret
subl
imul
mov
cli
int
popf
jecxz
leave
jecxz
mov
pop
inc
pop
cmpsl
jno
outsl
sahf
pop
jge
jecxz
inc
inc
lcall
inc
test
xchg
out
push
je
cmc
bnd
mov
fldcw
jmp
insb
test
insb
mov
pop
je
out
xor
pop
lahf
int3
mov
xlat
repz
sub
test
jo
jmp
cmp
mov
sbb
push
mov
xor
mov
sbb
je
lea
fcmovbe
loope
push
mov
or
movsb
cmp
jo
sub
sub
mov
or
and
push
pop
and
add
popa
inc
test
sub
imul
inc
ret
dec
push
pop
sbb
push
inc
stc
sub
xchg
ret
inc
mov
stc
pop
mov
roll
and
pusha
pop
fs
xchg
pop
leave
popf
pop
xchg
jns
cmpsl
leave
movsb
loope
pop
inc
mov
neg
int
mov
mov
pushf
stos
mov
insl
lds
mov
mov
scas
outsl
cmpsl
xchg
leave
lahf
mov
sbb
inc
push
out
nop
xchg
js
lea
shll
jge
xchg
mov
fisubrs
jns
mov
dec
xchg
into
and
mov
cltd
leave
rcrb
cwtl
pop
jg
adc
mov
and
mov
and
xchg
sbb
stos
cs
cwtl
xchg
add
sbb
and
pop
cmpsl
imul
mov
dec
fstpl
jb
push
data16
inc
pop
jne
mov
bound
mov
out
sahf
in
inc
cwtl
mov
cs
adc
mov
subb
outsb
ds
push
shll
and
fsubs
loope
push
xchg
outsb
clc
mov
clc
lahf
fdivl
jbe
sbb
cmpsl
push
jp
clc
je
pop
mov
clc
and
mov
pushf
jnp
loope
jne
push
leave
pop
dec
pop
jnp
mov
mov
xchg
jp
inc
and
mov
mov
sub
inc
mov
dec
mov
push
addr16
in
pop
adc
jecxz
pop
pop
dec
mov
push
mov
and
jns
in
mov
pop
or
lods
cmc
popa
mov
mov
or
mov
pop
cmc
inc
js
rorb
cmc
inc
sbb
fadds
mov
xchg
test
xor
jmp
xchg
xor
jp
je
in
subl
in
mov
sbb
sub
aam
sbb
cli
xchg
insb
aad
subb
leave
decl
pop
outsb
adc
adc
insb
outsl
push
mov
repz
mov
ret
ljmp
cli
cld
mov
cli
xchg
xorb
jo
xor
rolb
test
shlb
lods
push
leave
je
xchg
daa
jmp
mov
popf
inc
in
fdiv
inc
loope
addl
sbb
inc
mov
mov
leave
repz
pop
pop
mov
fcmovnbe
test
sub
mov
adc
js
cmpsb
cwtl
mov
arpl
and
int3
mov
push
add
bound
test
adcb
jl
sahf
pop
jnp
cltd
addr16
xchg
ja
sub
enter
mov
add
jle
ficomps
fisttpll
pop
repz
pop
sti
jle
scas
jmp
icebp
out
xlat
out
ljmp
insl
js
test
insl
cmpsb
mov
mov
pop
ret
xchg
lods
in
ficoms
jge
xchg
cmpsl
mov
loope
mov
fcmovb
movsb
cmp
or
pop
lea
das
pop
xchg
fmuls
loopne
je
imul
in
js
pop
in
test
rcll
outsb
stos
jmp
je
push
in
inc
fnstcw
outsb
xchg
sub
bound
push
cmp
mov
jmp
or
mov
pop
mov
mov
mov
push
mov
jo
cwtl
popa
sbb
dec
lock
mov
mov
adc
loopne
mov
push
sub
gs
test
pop
sub
imul
mov
cld
jns
xchg
mov
jno
scas
inc
mov
xorb
jno
ret
xor
cwtl
outsb
fistpl
dec
dec
pop
xchg
or
jno
jno
push
icebp
scas
gs
imul
jns
cmp
pop
rorl
imul
dec
les
xor
jmp
out
pushf
jnp
test
sub
push
loope
pop
pop
push
lret
push
addr16
pop
jnp
adc
repnz
xchg
lock
popa
push
ja
xor
jl
mov
push
jbe
xor
xchg
pop
ficompl
pop
arpl
pop
mull
popa
cmp
cmp
cmp
in
jns
insb
std
xchg
push
mov
out
shlb
xchg
mov
xchg
sarl
mov
push
jmp
leave
adc
jns
mov
mov
pop
outsb
stos
jecxz
ljmp
out
js
jp
arpl
je
out
mov
cmp
push
nop
mov
push
mov
popa
push
or
dec
xchg
inc
add
stos
xlat
xlat
aaa
jge
cltd
leave
lods
push
sbb
inc
mov
or
shr
jno
push
add
push
lds
ds
je
dec
gs
or
int3
ds
std
dec
cmpxchg
jbe
inc
fcmove
mov
cmp
addr16
push
sub
jle
push
mov
test
mov
icebp
jmp
jmp
pop
aas
push
ret
inc
jecxz
adcl
jecxz
lods
or
imul
sub
push
sbb
xrelease
sbb
outsl
repz
cmp
adc
popa
fcoml
cmp
aam
call
cmp
into
push
into
icebp
sbb
mov
bound
xchg
jle
mov
push
add
mov
pop
xor
inc
sbb
and
mov
scas
test
out
mov
push
mov
data16
fimuls
inc
push
loop
mov
push
dec
sbb
popa
aad
sbb
mov
xlat
sbb
arpl
cmpsl
gs
cs
js
sbb
mov
mov
ja
xor
insl
inc
mov
pushf
mov
xor
scas
mov
adc
mov
and
nop
inc
negb
push
pushf
mov
addr16
adc
aaa
cmpsb
fsub
add
jmp
pusha
xchg
clc
and
mov
mov
lea
imul
mov
cli
ror
jb
lock
test
ljmp
dec
jno
pusha
mov
inc
add
xor
decl
fisubrl
iret
test
mov
jl
lock
std
push
jno
movsb
dec
sbb
std
loopne
mov
mov
lods
out
sub
mov
push
imul
cmp
int
xchg
or
inc
push
dec
mov
xor
mov
stc
add
jmp
test
js
and
adc
addr16
inc
std
xchg
mov
stos
push
scas
fisubl
inc
cmp
scas
arpl
incl
sbbb
loope
roll
mov
mov
pop
rcr
int3
sarb
iret
imul
cltd
insb
movsb
call
xchg
aad
mov
sahf
jge
xchg
aaa
int3
mov
stc
mov
movsl
loop
je
nop
das
fs
outsb
dec
in
movsb
popf
or
xlat
or
jo
fists
adc
sbb
lcall
mov
inc
rcrb
aam
les
dec
xor
push
insb
stos
icebp
sbb
pop
adc
or
out
push
call
sbb
bound
xchg
mov
lret
pop
rol
in
mov
mov
in
mov
mov
adc
stos
stos
rep
test
adc
cmp
jnp
out
mov
in
sub
faddl
rcll
mov
aam
pop
adc
mov
cmpsl
sti
push
js
xlat
scas
insb
push
andb
int3
xchg
push
jl
cmp
push
jg
sub
and
cltd
iret
mov
scas
pushf
dec
lret
cwtl
stos
test
imul
insb
lea
and
mov
fwait
mov
cmp
xor
xlat
pop
cmp
push
outsb
dec
incb
js
push
icebp
pop
mov
adc
pop
mov
out
fs
cwtl
xchg
mov
xor
test
mov
add
sbb
das
mov
rcrb
push
dec
push
mov
je
scas
xchg
imul
cmp
lea
xor
adc
js
jecxz
pop
sbb
rcr
push
jns
arpl
inc
xor
pop
out
mov
movsb
lock
adc
imul
dec
enter
leave
enter
cmp
pop
test
xchg
mov
sbb
orl
mov
fwait
imul
cmp
dec
stos
push
jns
neg
xchg
fwait
out
ret
pop
jo
mov
aad
push
movsb
daa
nop
cmpsb
js
addr16
xchg
cltd
xor
xor
mov
mov
aaa
inc
and
xchg
ja
adc
push
pop
stos
hlt
shll
lods
and
mov
add
cmc
xchg
or
ja
lret
mov
test
pushf
test
fnstenv
xchg
jl
and
stos
lock
pop
mov
jmp
jmp
insb
sbb
inc
pusha
sub
jns
lcall
mov
or
mov
xchg
addb
pop
and
push
push
adc
inc
movsl
loopne
jecxz
scas
inc
push
pop
decb
into
je
lret
cwtl
int
xchg
sbb
mov
aaa
fsubrl
mov
je
bound
add
inc
out
test
gs
jno
xchg
icebp
roll
std
rorb
sahf
enter
jbe
incb
jbe
inc
jg
into
mov
ja
jbe
push
xor
sub
je
out
add
and
je
je
push
mov
aad
data16
aas
nop
scas
jns
imul
jns
sbb
insb
jp
pop
enter
std
cs
imul
and
test
sahf
push
in
repz
arpl
mov
dec
lret
outsb
fmull
into
xor
push
repnz
or
mov
adc
xchg
jo
in
nop
scas
and
push
add
cmpsb
gs
repz
dec
sarl
sub
mov
dec
and
movsb
mov
inc
jb
adc
and
arpl
mov
add
push
push
sbb
cmpsl
adc
inc
fmul
test
movsl
int3
push
sbb
cwtl
adc
inc
mov
mov
int3
stos
dec
cmovle
loope
pop
inc
sbb
push
push
push
jg
adc
jno
loope
mov
daa
insb
stos
mov
jmp
jmp
push
pop
loopne
mov
nop
xor
lea
xor
adc
push
push
stos
cmp
test
jns
and
jb
xor
popa
nop
xchg
jmp
adc
inc
jge
cld
mov
sbb
mov
lcall
and
pop
inc
call
gs
insb
mov
loopne
pop
inc
mov
test
jp
mov
test
stos
inc
push
sub
lcall
rolb
jbe
pop
xchg
orb
movsb
cmpsl
mov
rorb
scas
jmp
xlat
faddp
mov
pop
mov
pop
aad
subb
jno
repz
fstpt
or
inc
int3
inc
mov
push
mov
mov
in
xorl
pop
stos
adc
mov
loope
mov
add
loop
rcrl
pop
fcos
int3
into
pushf
out
add
stos
push
cld
mov
push
ljmp
out
fsubrs
dec
add
out
jl
sti
cs
int3
inc
xrelease
xchg
adcb
sbbb
inc
pusha
or
int3
xchg
push
int3
mov
loope
jb
int
insb
xor
mov
jg
loopne
lock
lcall
jge
add
sub
pushf
fs
adc
mov
lret
test
out
xchg
divl
mov
ljmp
jle
sbb
data16
and
lds
aam
addl
adc
mov
jmp
sbb
adc
pop
mov
inc
jp
stos
cli
pop
cmc
xlat
mov
test
dec
lahf
mov
insb
call
adc
pop
aad
ss
xor
dec
aaa
xor
jo
xchg
inc
jno
add
movsb
sub
inc
aam
mov
dec
aaa
jle
jbe
lcall
mov
jp
das
inc
adc
or
gs
jo
add
push
gs
hlt
jo
je
jo
cmpb
rolb
std
arpl
mov
dec
push
or
in
cld
push
adc
xor
push
ja
pop
cs
jge
mov
imul
cmp
scas
ljmp
outsl
adc
sbb
repz
mov
push
ficoml
lods
xlat
push
out
scas
lcall
fisubl
mov
js
push
mov
push
and
pushf
and
loope
xchg
mov
xchg
sub
nop
insl
jno
call
ljmp
or
outsl
rclb
jge
push
mov
pop
or
imulb
sbb
repnz
add
arpl
in
mov
rcrl
and
lret
ficoml
xchg
dec
sbb
imul
inc
cwtl
cmp
int
loope
clc
bound
pop
fs
fnstcw
mov
pop
sbb
pop
cli
orl
mov
cld
jb
xchg
addb
cmc
xor
xchg
jl
inc
inc
xor
adc
arpl
inc
rcl
mov
rcrb
loope
push
test
test
movsb
pop
push
test
mov
in
int3
sbb
push
jp
gs
addr16
push
jns
sbb
adc
icebp
sbb
stc
stos
push
jbe
adc
out
aaa
jae
fwait
xchg
mov
cltd
lods
les
xchg
dec
jg
pop
scas
in
jp
mov
xchg
push
jge
or
shrl
sahf
push
andl
scas
gs
inc
cmc
xchg
adcl
xor
pop
mov
cmp
shl
mov
mov
push
adc
jmp
nop
mov
fmull
adc
cli
xchg
sahf
mov
mov
sub
push
and
mov
ja
mov
mov
adc
sub
jae
jnp
adc
jge
out
movsb
bound
stos
scas
leave
aam
data16
data16
fs
mov
test
xor
push
cmp
xchg
inc
jbe
mov
sub
mov
fimuls
imul
push
rorl
mov
insl
fsub
jmp
push
daa
loope
xchg
enter
lods
xchg
scas
xchg
push
mov
jbe
pop
test
xor
sahf
scas
or
inc
inc
lea
lcall
xor
mov
aad
sbb
into
fldenv
mov
stc
or
or
inc
dec
sti
mov
addr16
test
xor
adc
and
push
clc
loope
movsb
pushf
mov
jge
pop
push
movsl
jg
cmp
lods
push
or
pop
dec
fmull
movsb
movsl
dec
stos
fldcw
adc
fcmovu
xor
dec
jbe
shl
push
test
adc
mov
mov
cli
xorb
inc
call
jg
fsubrl
xor
sbb
mov
add
in
lock
mov
dec
test
mov
test
outsb
call
jge
pop
mov
into
inc
adc
cmpsl
sub
mov
lods
and
mov
aaa
inc
dec
movsl
imul
daa
pop
mov
stos
adc
pushf
pop
mov
and
push
xchg
and
dec
pusha
jmp
jmp
pusha
push
out
sbb
test
cmovns
pushf
jo
inc
loope
cmpb
shll
addr16
xor
cwtl
mov
jg
cmp
pusha
xlat
inc
jne
add
xor
in
mov
cmpsb
stos
dec
ret
mov
cltd
or
xor
sub
inc
ret
mov
test
test
into
sbb
mov
push
enter
inc
faddl
add
push
cmp
mov
shrd
iret
pushf
jp
ljmp
add
lds
pop
inc
out
sub
inc
jle
push
out
push
xchg
divl
aas
pop
int3
mov
call
in
lods
push
mov
and
out
lock
das
adc
pusha
sub
cmp
aaa
sbb
jge
sub
mov
inc
xchg
mov
sahf
out
insb
mov
push
repnz
jns
in
xchg
jg
aam
lods
imul
push
mov
adc
int3
rorl
push
mov
fiaddl
push
jmp
adc
cwtl
ret
add
push
cltd
std
das
xor
or
inc
popf
iret
or
mov
insl
cli
sbb
rol
jp
pop
jmp
clc
insl
test
test
jp
out
mov
js
cld
xchg
dec
sarb
iret
cs
stos
mov
aad
stos
push
mov
cmp
sbb
push
ljmp
int3
push
cld
insl
cwtl
xor
loope
hlt
jb
sbb
mov
pop
sbbl
inc
sbb
pop
xchg
cmp
push
push
inc
mov
cs
mov
stos
test
add
sbb
mov
mov
cwtl
bound
pop
pop
cld
outsl
addr16
inc
push
xchg
inc
mov
cmpsb
mov
dec
insl
inc
subb
jmp
inc
in
fistl
inc
hlt
fdivs
sub
aaa
addl
insb
jno
subb
gs
pusha
ja
shll
push
ret
dec
pop
icebp
aad
addl
sub
push
imul
inc
add
sti
add
push
push
scas
ds
leave
cwtl
jl
inc
jno
adc
mov
stc
addr16
adcb
sub
cmp
inc
xchg
sub
dec
movsl
int3
fimull
push
sbb
insb
stos
subb
xor
fldl
repz
or
dec
pusha
xchg
jnp
and
xchg
and
stc
xchg
jge
inc
sub
fidivrl
push
cmp
dec
out
insb
mov
nop
xchg
pop
mov
dec
mov
aas
xor
cmp
rcrl
dec
jle
mov
mov
pop
add
mov
loopne
insb
mov
in
sbb
rcrl
fdivrl
gs
pop
dec
ss
mov
cmpsb
loopne
dec
aam
push
dec
mov
test
test
mov
mov
and
call
cmp
dec
aam
shll
push
mov
imul
or
push
cmp
xchg
mov
repz
push
sub
mov
cmp
push
lock
and
or
inc
movsl
and
inc
jnp
sbb
sub
lods
mov
mov
fcom
aad
icebp
inc
fucom
repnz
inc
cmp
cmp
add
call
testl
mov
cli
inc
lds
xchg
add
neg
scas
lods
test
dec
or
lods
and
push
loope
popf
nop
adc
sti
sub
insl
lods
inc
mov
add
sub
cmp
loop
test
mov
mov
pop
imul
icebp
daa
movsb
pusha
and
js
push
addl
subl
dec
leave
jb
pusha
cli
leave
lret
pushf
push
andl
cmp
adc
shll
jmp
sti
jg
push
and
xchg
sbb
cmpsl
loope
out
cmp
fldt
inc
fsubs
repz
adc
jno
mov
and
xor
xlat
pop
push
mov
xchg
jns
stos
inc
mov
aad
lods
in
pop
nopl
pop
xchg
test
pop
push
int3
cmp
inc
xchg
mov
lock
jno
xorb
repz
daa
pushf
dec
jl
or
push
pop
push
adc
dec
adc
mov
pushw
inc
arpl
inc
outsb
ss
fcmovb
dec
cwtl
pop
cmp
andl
jae
adc
fimull
xor
xor
cwtl
jge
add
xchg
dec
jle
cli
xchg
ljmp
pop
jb
pusha
xor
fwait
mov
xor
or
movsb
and
add
add
fcmovnbe
sbb
mov
jb
xchg
dec
adc
pop
lea
mov
jecxz
sbb
push
xchg
jb
imul
fidivs
aad
arpl
push
jo
loope
jo
loope
jno
jl
mov
pusha
jmp
dec
loopne
jmp
dec
loopne
jmp
dec
sbb
inc
mov
xor
dec
cmc
dec
pop
shl
cmpsl
pusha
popa
jno
xor
xchg
pop
push
add
lock
outsb
cmp
sbb
dec
fsubl
pop
sarl
shlb
xor
pusha
jl
push
movsb
or
dec
or
push
push
jmp
scas
stos
cmp
insl
xchg
lahf
push
test
mov
subl
inc
in
and
lahf
sbb
push
sar
adc
mov
push
lods
stc
fiaddl
mov
mov
inc
mov
push
inc
loop
jno
adcl
iret
push
outsb
or
ss
lods
push
subb
and
test
cld
xchg
or
pop
cs
test
push
lcall
mov
and
js
addr16
imul
repz
mov
pop
jmp
subb
dec
dec
sbb
push
shlb
inc
mov
bound
jbe
in
push
push
addr16
pop
arpl
aaa
pushf
clc
test
popa
ret
clc
jbe
js
sbb
inc
jl
fnstcw
jbe
dec
aaa
cmpsb
ljmp
xchg
pop
cmpsl
bound
pusha
cwtl
xchg
push
aam
dec
inc
pop
adc
cmp
mov
mov
rorb
pop
jnp
jge
adc
out
push
stc
jbe
popa
mov
fs
sub
ljmp
icebp
ret
cltd
addb
movsl
pop
je
stos
test
sbb
int
inc
fsubrs
ret
xchg
push
pop
adc
lock
mov
push
popf
stos
mov
sbb
mov
lods
je
js
sbb
mov
or
ja
push
inc
subl
loopne
lods
cld
outsb
cld
xchg
sbb
fnstcw
lret
fcoml
pop
cmpsb
int
inc
pop
pop
adc
lods
mov
popf
jnp
lock
cmc
aad
cmp
cmp
int
jg
sbb
push
loopne
int
testl
jne
ss
push
cmp
fists
cmp
enter
int
add
xlat
and
stos
ljmp
test
ficompl
xor
stos
jge
jp
sahf
fistpl
lret
xor
cmpsl
fnstenv
add
inc
mov
add
cmp
jp
cli
dec
push
leave
ljmp
mov
pop
call
je
int
add
rcrl
popf
inc
push
movsl
xlat
xor
cmpsl
ror
outsl
call
repnz
test
bnd
pop
sub
xchg
inc
jl
outsb
jo
stos
cwtl
mov
xchg
and
int
push
scas
lcall
push
inc
decl
scas
cmp
test
scas
int
inc
cmpb
jb
add
imul
adc
movsl
xchg
jae
xchg
ljmp
faddl
stc
lahf
jp
mov
cmp
fsts
pusha
int3
addr16
add
insb
xchg
sbb
pusha
ret
lods
movsl
cmp
xor
test
sbb
arpl
xor
dec
loop
adc
enter
shl
aaa
mov
pushf
call
dec
inc
negb
stos
mov
jne
stos
xor
and
and
scas
rol
shll
push
mov
jb
fcompl
adc
push
cmpsl
sbb
insl
scas
mov
sbb
or
jge
adc
inc
pop
sub
mov
int
daa
add
mov
orl
jg
push
leave
add
dec
cmpsl
ret
pusha
xchg
mov
and
push
sbb
push
pop
mov
int3
xchg
pop
jecxz
push
mov
jp
mov
cmc
movl
test
arpl
pop
cmc
lods
push
rcr
push
adc
dec
cmpsl
pusha
inc
jge
mov
xlat
and
shlb
and
adc
lcall
lods
inc
or
iret
test
pusha
and
test
fs
pop
loope
scas
jbe
sub
mov
cli
clc
mov
push
imul
add
lods
sbb
sbb
sbb
movsl
clc
loopne
push
lods
push
inc
shl
insb
hlt
mov
cltd
dec
mov
int3
pop
addb
fwait
pop
adcl
fcmovnbe
inc
dec
inc
jb
insl
loope
fucomp
clc
adc
mov
ds
arpl
aad
jnp
dec
add
cmc
inc
scas
icebp
pushf
lods
ljmp
pcmpgtd
inc
sbbl
xchg
movsl
pop
mov
pop
stc
outsl
inc
add
mov
cmp
fdivl
or
out
fs
stos
icebp
std
pop
fistps
cld
cmp
pop
test
in
jnp
imul
push
repnz
sbb
xchg
mov
into
pushf
repnz
scas
gs
pop
fisubrs
cmp
xor
cmpl
xor
leave
fsubl
mov
ficompl
negl
push
insl
add
nop
pop
int
push
pop
icebp
stos
sbb
jl
sbb
popa
test
push
add
dec
xchg
rorl
jns
jmp
out
insb
jns
mov
sbb
xchg
inc
lods
sub
mov
in
call
pop
in
daa
scas
fwait
push
fucom
or
mov
fstpl
cmpsl
push
adc
adc
loop
push
jne
and
adc
pusha
in
sbb
loopne
adc
jle
adc
insl
jb
bound
sub
je
add
pusha
inc
addr16
jle
popf
xchg
lock
popf
and
ljmp
push
cwtl
push
in
repnz
pop
lods
frstor
push
or
jp
popa
fstpl
aas
popa
push
sbb
xchg
and
sub
subl
pop
jno
insb
mov
cwtl
add
scas
fcomps
cltd
int
sub
mov
jecxz
add
mov
pop
fs
insb
adc
push
mov
inc
and
lcall
ret
adc
mov
iret
add
test
clc
imulb
push
in
inc
pop
rcr
scas
scas
out
icebp
test
or
pop
popa
ljmp
int
pop
test
dec
sbb
and
rolb
std
mov
int3
shlb
popf
fldl
push
or
sahf
les
dec
sbbb
xor
test
mov
nop
dec
je
mov
sahf
xor
sub
movsb
pop
addr16
push
jge
or
jnp
movsl
and
lock
jl
stos
int
and
jl
bound
jne
or
mov
push
push
push
mov
aam
out
stc
cmp
xor
jb
mov
mov
ret
out
popa
jmp
dec
popa
int
pop
mov
push
pop
icebp
inc
sahf
sarb
imul
mov
jg
xor
movsb
scas
shrl
push
test
stos
scas
pushf
dec
call
mov
in
mov
inc
ljmp
imul
aas
jb
push
ja
xchg
jne
lahf
pop
movsl
int3
addr16
add
stos
lret
scas
dec
mov
rclb
call
inc
jne
jp
inc
shrb
jp
test
mov
int3
lds
hlt
mov
sbb
mov
lea
fwait
cli
sbb
in
sbb
push
add
or
xlat
adc
push
mov
dec
jle
sbb
dec
jmp
into
nop
inc
ds
mov
adc
popf
cmpsb
mov
adc
jo
sahf
je
push
pop
dec
pushf
scas
inc
xchg
cmp
js
push
pusha
pop
stc
pop
fs
imul
loope
dec
dec
mov
xor
cld
cmpsb
push
push
addb
cmp
dec
stos
push
popa
scas
stos
inc
std
popa
inc
pusha
mov
sub
adc
arpl
std
pop
xlat
mov
mov
adc
daa
lahf
int
or
repnz
xor
or
insb
out
sbb
call
ret
and
loopne
mov
push
loope
mov
fcomps
jecxz
cwtl
popa
insl
mov
push
push
pop
aad
gs
jl
xor
test
test
cmp
idiv
pop
xor
xchg
add
addb
rep
jnp
jge
mov
in
xor
aaa
int3
nop
ret
test
insb
or
jge
ret
outsb
mov
xchg
push
or
sub
aas
jo
cmp
dec
cwtl
sub
lock
xchg
mov
pop
insb
add
mov
jmp
cmp
adc
mov
pop
stos
fdivrl
cmp
fmull
imul
call
repnz
shrl
jge
pop
cs
mov
mov
sub
lcall
in
orb
in
lahf
inc
add
dec
cld
andps
scas
clc
in
cmp
jp
add
cmpsb
out
dec
pop
inc
lods
fisubrs
pop
mov
ret
rol
aas
sbb
xchg
cltd
pusha
insb
fnstenv
and
jns
mov
or
adc
mov
adc
out
sti
cmp
jl
push
popf
pop
test
adc
rol
cmpl
pusha
insl
pop
fistl
loopne
fdivrl
lods
call
inc
imul
cli
mov
xchg
ja
test
enter
lret
jns
stos
mov
fwait
push
fmull
shr
stc
or
pop
lcall
push
jge
push
dec
push
nop
cld
enter
ret
repz
leave
addr16
cld
sbb
iret
jp
fsub
pop
push
sti
mov
outsl
call
sub
inc
dec
mov
cmp
imul
push
out
adc
xchg
pusha
outsb
mov
xor
push
es
fwait
xchg
int
add
int3
cmpsb
and
int3
test
fxch
imul
mov
int3
bound
int3
aad
sub
mov
jne
inc
pop
loope
shr
dec
test
imull
push
push
fcomip
and
idivl
inc
pop
data16
ja
mov
adc
add
push
push
repz
pop
push
insb
clc
xor
fidivrl
scas
fwait
cltd
das
pop
test
imul
bound
cmp
cli
insb
inc
outsl
xchg
loope
pusha
inc
lods
push
jb
cmp
aaa
int3
test
fisttpll
test
outsl
lods
test
icebp
push
xor
jp
les
pop
mov
js
xor
fwait
cli
lods
test
ss
mov
aam
fsubl
push
mov
or
mov
idiv
js
aaa
mov
push
insb
scas
cmpsl
cmpsb
cmp
ja
mov
cmp
in
jge
in
int3
fnstsw
jb
test
cltd
lret
mov
jmp
pop
fdivp
mov
cmpsl
push
or
xchg
pushf
imul
add
orb
test
cwtl
imul
outsb
test
mov
mov
out
mov
pop
inc
mov
pop
inc
inc
xchg
inc
test
fwait
mov
fucomp
inc
imul
incl
int
mov
push
add
das
push
ljmp
aad
imul
pop
jp
xor
cmpl
mov
fwait
push
push
adc
shll
nop
fldl
addr16
adc
cmp
sysenter
lods
int3
adc
xorl
in
jo
imul
mov
sbb
inc
rorb
shrb
in
pushf
pushf
inc
lcall
inc
jp
daa
mov
imul
sub
pop
sub
loopne
scas
sbb
mov
pop
aaa
cmp
jl
mov
cmp
pop
push
mov
push
stos
in
fimull
push
fs
shrb
push
std
jp
cli
pop
mov
add
mov
cltd
dec
subl
inc
ds
mov
mov
cmp
in
xor
sub
lcall
test
in
repz
ja
mov
shl
sub
cld
jnp
mov
or
mov
or
pop
jecxz
rorl
addr16
cli
dec
xchg
or
dec
leave
imul
jbe
adc
jns
or
arpl
rolb
arpl
lock
test
out
jae
inc
mov
sbb
pop
das
xchg
sub
insl
sbb
mov
movsl
xor
jle
mov
das
movsl
pushf
cld
pop
or
mov
cmp
data16
inc
cmp
std
push
dec
push
jne
pop
popa
xchg
loope
dec
mov
and
enter
je
bound
dec
push
aas
aad
push
sub
push
cmpsl
into
rorb
repz
jmp
imul
inc
push
bnd
fs
lcall
sarb
loope,pn
push
pop
popa
mov
das
jge
mov
aam
xor
pusha
mov
ret
push
lods
repnz
in
lods
push
ds
fisubs
cmpsl
arpl
gs
std
or
imul
push
stos
out
fs
test
mov
xchg
mov
addr16
jge
push
popa
sub
pop
jp
push
add
dec
stc
lcall
fbstp
add
pop
fs
sbb
jecxz
sahf
inc
stos
fs
inc
xchg
sbb
out
jns
lret
imul
insb
inc
mov
jne
mov
mov
xor
xchg
jbe
jnp
imul
and
mov
xlat
jns
jne
xchg
adc
popa
xor
jbe
dec
xor
fmull
or
sbb
or
xor
stos
and
xlat
fisubrs
call
sti
std
sbb
ret
push
js
jp
cld
fadds
ret
sub
push
je
roll
shlb
cmp
mov
inc
fsubrp
pop
xchg
in
jo
jo
arpl
add
mov
movsb
or
negb
jno
xor
and
mov
and
aam
xchg
xlat
test
jge
add
adc
xor
sub
push
mov
cmpsb
popa
pop
adc
adc
sti
and
mov
mov
or
jmp
pushf
loope
loope
push
jl
in
sub
cwtl
cld
inc
stos
add
stos
dec
js
sbbb
in
push
outsl
pop
int
dec
sahf
pop
pop
mov
lret
cmp
fnstcw
lods
inc
test
in
test
xor
push
cs
xchg
call
dec
pop
xchg
fisttpll
jle
lcall
mov
pop
adc
lods
pop
test
fucomp
cwtl
mov
and
push
pop
inc
xchg
cli
das
insl
push
pop
insl
loopne
sbb
jp
insb
sahf
stos
jp
lock
add
push
pop
add
sahf
test
punpcklbw
jecxz
push
scas
sbb
mov
xchg
in
xchg
xchg
dec
push
scas
jo
mov
and
cmpb
add
dec
sbb
jno
xchg
js
imul
stc
int
sbb
lret
popa
nop
mov
push
jle
xchg
inc
int3
pop
xchg
mov
iret
pop
pop
test
xchg
jecxz
xchg
fistl
popa
rorb
jle
jecxz
and
cmp
repz
push
je
and
aam
sbb
outsb
lods
xor
xchg
or
and
add
dec
andb
jge
lock
popa
push
jl
out
push
jb
adcb
pop
or
mov
fs
pop
je
movsl
fimuls
pop
push
inc
and
pop
sahf
shrl
lret
dec
pop
fadds
mov
xorb
pusha
push
push
pusha
xchg
stos
imul
je
and
in
fimuls
mov
es
mov
push
and
bound
pop
loop
je
les
jl
fmul
xchg
lock
push
lods
popf
xor
jns
mov
das
jmp
movsl
or
lds
pop
sub
mov
jmp
jge
pushf
call
mov
in
out
or
pusha
aam
aad
js
imul
jns
inc
addr16
or
aaa
xlat
imul
mov
loopne
push
jle
or
call
daa
push
rorl
xchg
push
fdivrs
fs
int
sarb
mov
loope
pusha
addr16
xchg
cmpsl
pop
sub
push
bound
mov
mov
pop
pop
fistl
dec
mov
dec
popa
add
mov
dec
and
add
out
xor
shrl
addr16
mov
jle
push
imul
fwait
sub
xlat
call
shr
xlat
enter
int
push
xor
stos
cld
js
xchg
cmp
imul
push
mov
popa
jbe
loope
pop
adc
out
lds
pop
push
pop
cmp
cmp
sub
xlat
jb
inc
and
sti
xor
in
fldt
mov
stc
mov
ljmp
int3
jb
mov
xchg
dec
jle
std
lods
movsb
lahf
and
sub
int3
fwait
push
jbe
pushf
fsub
hlt
mov
adc
insb
pop
aad
cwtl
sub
xchg
jg
pusha
test
jo
adc
and
mov
scas
push
pop
pop
xchg
sahf
pusha
int
inc
pop
insb
setle
aas
fiadds
pop
out
sub
jmp
add
add
pop
push
cltd
or
mov
adc
in
lret
jns
sbb
mov
scas
clc
cwtl
xor
push
pop
pop
nop
int3
ja
inc
mov
cmpsl
mov
inc
mov
test
push
pop
loop
fdivrs
pop
leave
imul
test
scas
ds
mov
scas
loope
jge
pop
xchg
lret
pop
pop
bound
sbb
mov
add
mov
in
pop
jecxz
inc
es
shlb
sbb
inc
adc
lods
mov
or
scas
lods
jecxz
xchg
adc
fildl
int3
xchg
xchg
sti
pop
jle
imul
push
mov
test
out
push
push
sbb
mov
dec
fsubr
or
test
cwtl
in
adc
dec
sbb
ret
pushf
nop
out
dec
popa
pop
stc
sbb
fildl
mov
out
dec
push
xor
pop
jmp
and
loope
clc
scas
mov
cli
push
fwait
pop
call
xor
mov
clc
push
jmp
ljmp
and
mov
mov
lcall
clc
jmp
insl
cmpsl
clc
cmpsb
loope
cltd
fs
jge
loope
mov
ljmp
pushf
into
inc
ret
push
cli
adc
mov
xchg
faddl
inc
cli
int
xchg
sbb
loope
xchg
push
sub
mov
dec
bnd
jne
cmpsb
sahf
movzbl
test
xlat
adc
lret
xchg
jge
jl
je
popfw
pop
int3
fwait
lods
in
test
sbb
xor
push
in
mov
loop
and
lcall
jl
jge
imul
mov
scas
les
or
stos
or
in
or
cmp
inc
insl
mov
cltd
test
add
fbstp
inc
test
test
mov
insb
push
je
loope
outsl
call
inc
loope
pop
pop
xchg
mov
sbbl
sahf
sub
mov
rolb
daa
push
mov
in
pusha
rep
mov
add
pusha
jae
test
jp
inc
push
lret
je
test
jge
pop
hlt
pop
mov
inc
das
mov
sti
push
xchg
sti
lcall
lods
scas
add
adc
mov
sbb
faddl
cmpl
mov
pop
and
or
add
adc
mov
inc
insl
fnstsw
dec
rorl
mov
mov
call
cltd
mov
repnz
mov
leave
jnp
jp
mov
popa
or
out
ficoms
out
cmpsl
sbb
fwait
subb
lahf
subb
cmp
test
nop
daa
cltd
fmull
test
out
test
mov
pop
push
pusha
inc
jp
mov
arpl
enter
fmul
mov
insb
hlt
xchg
out
addb
sbb
inc
hlt
popf
cwtl
in
sub
or
insb
shl
cmp
mov
mov
lods
cmp
sahf
in
imull
test
add
testl
push
fmull
dec
push
dec
xor
dec
jae
arpl
aad
xlat
or
cltd
pop
mov
in
xchg
faddl
insl
gs
xchg
cmc
out
sub
inc
hlt
addl
jecxz
jmp
push
loopne
add
mov
mov
aam
dec
xor
push
int
lock
outsl
call
scas
push
push
mov
lcall
addl
ja
test
cs
mov
scas
mov
fs
scas
pop
lcall
or
inc
int
mov
fldt
and
mov
imul
bound
flds
gs
mov
mov
jecxz
xlat
out
outsl
inc
mov
xor
call
or
inc
inc
mov
or
imul
dec
inc
dec
sub
xor
mov
sbb
jb
or
pop
cmp
pop
ret
add
lods
inc
jp
jo
xchg
out
inc
or
jno
test
pushf
int3
mov
ret
outsb
jp
lcall
subb
int3
pop
inc
std
outsl
test
cmpsl
xchg
adc
popf
jbe
push
pop
or
mov
dec
sub
jbe
in
fstpl
cwtl
or
lods
adc
daa
aad
in
jmp
jns
sarb
loope
push
imul
dec
cmc
push
pusha
call
mov
jo
mov
fsubrs
xchg
mov
cwtl
mov
cli
ja
or
jl
movsb
dec
les
sbb
inc
jmp
mov
add
add
orl
fdivl
mov
inc
arpl
add
int
jge
in
lea
adc
or
test
mov
in
xchg
mov
clc
push
push
cmpsl
mov
shrl
mov
cltd
iret
aam
inc
cmpsb
mov
pop
insb
in
pop
loope
jnp
jp
in
and
lods
push
cmc
adc
int3
sahf
les
lahf
jb
je
mov
ja
add
mov
inc
mov
adc
jg
sarl
sub
sub
or
outsb
xchg
jg
sti
lea
jge
mov
jns
movsl
loope
cld
add
jo
imul
mov
sbb
scas
mov
mov
popf
xchg
cmp
mov
jl
sbb
pusha
lods
int3
popf
enter
negb
in
push
notl
cmp
jp
aad
mov
push
out
cld
lods
mov
int
inc
lret
jns
arpl
inc
arpl
filds
nop
mov
pop
popf
mov
int3
mov
sub
jo
fisubl
sbb
out
into
lret
cmp
or
scas
mov
stos
or
pop
scas
inc
adc
addb
aas
call
fs
int3
nop
dec
lods
push
lea
mov
into
stos
mov
mov
out
call
jae
loope
popf
lret
cmp
faddl
enter
cli
xorb
mov
dec
xchg
mov
bound
mov
sbb
xor
cmpsl
cmpsl
andl
in
sbb
push
pop
test
jbe
cmp
cld
js
in
and
inc
push
sbbl
fsubrs
mov
push
add
mov
imul
mov
mov
xchg
stos
jbe
jmp
xchg
jp
cmpsb
xchg
lods
stos
insb
sbb
call
mov
mov
insb
fdivrl
mov
les
mov
push
and
mov
mov
inc
icebp
daa
test
fdivl
stos
stos
inc
cmp
cwtl
in
in
out
aas
subl
outsl
test
cmp
mov
cmp
sti
sbbb
not
in
jmp
push
mov
lea
js
cmp
jl
roll
jae
fisttpll
dec
fsubrp
adc
pushf
xor
shll
popa
sbb
mov
lret
out
stc
and
scas
mov
ret
add
pop
in
mov
mov
mov
add
cmc
cwtl
cmpsb
fwait
in
mov
pop
inc
mov
mov
clc
push
cmp
push
in
push
orl
int
xchg
test
int
insb
jmp
int
cli
jl
lcall
andb
xchg
popf
insl
push
cmc
xor
test
cmpsb
aas
pop
mov
sbb
mov
pop
loope
and
in
and
fwait
xchg
lahf
sti
jecxz
dec
and
jo
outsb
adc
stc
test
jnp
cmc
and
jecxz
cmpsl
ss
pop
pop
loope
or
mov
fcompl
mov
mov
cmpsl
xchg
push
outsl
xor
mov
inc
ljmp
imull
ja
mov
cli
add
sub
pop
push
jg
pop
mov
mov
popa
inc
mov
jno
adc
jbe
lods
stos
sbb
dec
leave
in
outsb
movsb
push
lret
mov
push
push
aaa
cmp
cmp
pusha
or
lcall
in
hlt
call
sbb
sub
sbb
adc
inc
pop
orl
loope
adc
iret
cmpsl
mov
xor
pop
inc
jbe
jp
push
cmpsb
sahf
cmp
sub
orb
xlat
imul
pushf
dec
cmp
ds
jmp
lds
jge
mov
cltd
mov
mov
cwtl
out
sbb
inc
xchg
xor
pop
pusha
movsl
pop
xchg
mov
outsb
movsb
xchg
adc
stos
inc
mov
add
inc
cmc
int3
call
sbb
call
lcall
into
aad
ds
subw
inc
or
xchg
lcall
fiaddl
push
shll
loope
pop
jmp
mov
pop
jb
cld
add
or
jle
mov
xchg
mov
outsl
out
inc
jg
add
mov
mov
xchg
cld
add
sub
imul
xchg
imul
cltd
popa
sahf
pop
mov
dec
dec
test
inc
adc
sbb
in
dec
lret
in
loope
push
jno
je
or
out
and
repz
mov
cs
and
sub
aad
mov
or
or
push
int3
mov
jne,pt
loope
pop
xlat
js
xlat
mov
loop
loope
pop
test
xchg
je
push
push
mov
xchg
xchg
movsl
cs
xchg
arpl
andl
fdivl
xor
mov
lods
faddl
hlt
jb
cs
inc
or
push
insb
mov
jp
sbb
inc
mov
movsb
pusha
call
adc
lahf
push
sbb
in
or
mov
pop
les
and
dec
test
mov
dec
xchg
cltd
fs
movsb
fisubrs
clts
test
adc
jo
movsb
pop
sbb
mov
pushl
mov
scas
inc
adc
cmc
pop
xchg
and
xchg
nop
mov
lods
mov
loop
sub
call
xor
rcr
lods
pop
adc
cwtl
fs
pop
mov
ljmp
aam
pusha
jmp
cmpsb
test
pushf
jmp
cli
aas
test
test
lahf
mov
sahf
xor
jb
mov
lock
andl
pop
data16
jge
pop
decl
lods
inc
mov
sbbb
fyl2xp1
loopne
pop
out
aas
push
lock
outsb
pushf
pushf
jmp
add
pushf
cmpsl
insb
push
lea
add
loope
dec
ja
into
xor
cmpb
ret
jbe,pt
js
dec
jg
cmpsl
fistpl
adc
and
test
add
test
push
cmp
adc
dec
lds
adc
ljmp
mov
cmp
or
loope
pop
xchg
or
dec
xor
xchg
cmp
mov
insb
imul
int
mov
repz
push
popf
mov
js
fdivrs
sbb
and
sbb
xor
cmpsl
pop
popa
stos
lods
rcrb
addl
and
mov
pushf
test
pop
sbb
cmp
jecxz
sbb
test
mov
mov
mov
and
out
sub
loope
push
jmp
jp
mov
stos
add
icebp
loop
decl
movsb
loope
ds
mov
loopne
pusha
aas
sbb
xchg
sahf
sub
fcompl
cmp
jo
fdivrl
aaa
int
jns
mov
loopne
insb
aad
push
int
jns
push
mov
jo
test
pop
cld
arpl
jecxz
mov
loope
push
push
movsb
aas
jp
ss
inc
xor
shlb
jp
mov
test
mov
adc
mov
enter
je
or
ds
sbb
lret
scas
mov
inc
notl
jmp
mov
mov
lahf
jnp
jb
jecxz
test
xor
cmpsl
cmp
movsb
jecxz
jl
and
cmp
mov
bswap
popf
dec
push
inc
cltd
in
aad
adc
stc
mov
loopne
vmwrite
mov
loop
inc
sar
ret
inc
inc
xor
out
test
mov
push
pop
xchg
int3
sbb
fmull
cli
xor
rcrb
inc
mov
adc
xor
dec
rcrl
lock
add
add
pusha
pop
inc
repnz
and
mov
sub
outsl
mov
inc
fwait
or
andl
mov
int3
flds
pop
mov
sbb
push
dec
pop
inc
dec
lret
es
sub
sbb
cmp
rol
les
ret
lahf
in
sbb
fcmovnbe
repz
ret
inc
lret
or
jp
imull
jo
mov
cmp
and
sti
outsl
inc
cli
dec
xchg
push
xor
out
mov
cwtl
shlb
sbb
xchg
lcall
cmc
stc
pusha
sbb
jns
fisubl
ds
mov
das
sub
jo
push
jbe
xchg
sbb
int3
jle
stos
scas
pushf
xorb
pop
arpl
pop
pop
push
jns
mov
repnz
pop
mov
adc
call
mov
pop
call
jmp
shr
nop
loope
imul
push
adc
scas
imul
idivl
andl
sbb
imul
mov
hlt
scas
xor
add
pop
inc
sub
nop
stos
sti
push
sbb
mov
popa
scas
scas
stos
push
aad
and
mov
lock
push
pop
push
dec
xchg
pushl
scas
outsb
and
or
pop
jnp
sbb
pusha
mov
xor
insb
inc
call
xchg
sbb
xor
sub
loop
sub
bound
test
or
mov
aas
cwtl
ret
inc
mov
leave
int
pop
adc
gs
push
iret
mov
push
mov
push
aas
sbb
mov
popf
clc
call
test
int3
mov
out
dec
outsb
pushf
fcompl
in
dec
insb
jge
sbb
hlt
leave
stos
inc
inc
imul
pusha
loope
out
dec
mov
sub
cmp
pop
dec
xor
popa
pusha
add
jnp
lea
mov
jge
jp
insb
jno
pop
orl
push
pop
popa
inc
cmp
inc
cmc
insb
jae
add
out
rorl
outsl
push
inc
sbb
push
call
lods
cld
jne
mov
andb
inc
sub
adc
mov
shll
jnp
pop
int3
outsl
dec
dec
adc
fcomp
lahf
pushf
and
push
cltd
pop
cmpb
cmpsb
push
mov
xchg
sahf
mov
bound
popf
decl
xor
push
insl
inc
cs
dec
mov
sbb
in
jno
pop
call
js
in
mov
loope
jecxz
imul
mov
add
lret
cmp
jl
js
mov
jge
add
scas
ret
fs
sbb
int3
test
cwtl
pop
and
inc
fmulp
insb
jb
jl
mov
mov
insb
ss
pop
adc
in
rcr
inc
and
mov
call
cmpsb
mov
inc
sub
jp
cmpsb
mov
dec
inc
shl
dec
dec
sbb
inc
andl
add
in
lret
cmp
call
aas
js
cli
pusha
xor
mov
pop
out
and
dec
jecxz
or
scas
pop
in
inc
mov
adc
inc
pop
out
push
add
and
in
movq
inc
fldt
sbb
mov
cmc
push
cmp
add
mov
test
push
cmp
cmp
call
jbe
js
loope
xchg
lods
jmp
loop
clc
in
loopne
push
test
mov
lds
cld
xchg
fsubr
ds
jge
fcmovbe
mov
fdivrs
in
jo
in
cmpsl
fsubrl
fbstp
mov
ds
mov
xchg
cwtl
adc
pop
int
sub
fs
push
test
int
adc
shlb
test
mov
lahf
dec
pushf
pop
jge
inc
dec
push
pop
sub
das
call
fldenv
lock
adc
loop
daa
scas
je
scas
cmp
lahf
in
jns
or
movsl
and
stos
push
cmp
mov
mov
insl
sahf
pop
popf
sbb
dec
sub
in
dec
or
aaa
xor
sub
mov
inc
dec
or
mov
xchg
push
lock
jg
lods
gs
pop
inc
ds
icebp
flds
ret
add
test
inc
sti
ss
mov
orb
xchg
fsubl
addb
sub
fnstsw
insb
jge
bound
mov
shr
cwtl
push
pop
cwtl
mov
popa
test
push
mov
scas
jmp
cs
push
mov
cmp
sbb
arpl
pop
in
xchg
pushf
and
ret
cli
fiaddl
xchg
gs
add
add
dec
movsb
cld
dec
lock
out
in
fwait
loop
pop
jge
xorb
lods
jbe
push
pop
fs
fsubrl
mov
cmp
js
sbbl
and
mov
out
sbb
and
jle
xchg
insl
cltd
int
adc
shll
insb
ss
jmp
sub
ret
out
push
pop
cltd
pop
lahf
or
stos
mov
pop
test
cmpsb
pop
into
inc
lock
mov
add
idivl
pushf
test
or
mov
fs
test
fs
sbb
iret
into
xlat
xchg
hlt
imul
dec
and
movsl
jmp
lock
jle
push
or
jmp
xchg
test
mov
popa
stc
in
scas
arpl
jge
pop
call
aas
les
in
scas
mov
xlat
mov
in
test
jmp
scas
dec
andl
scas
inc
filds
push
jbe
cmpsl
addr16
dec
mov
fadds
vpperm
popa
inc
mov
fists
sbb
pop
fcompl
inc
call
add
fidivs
mov
add
std
mov
fcomp
shll
jg
pusha
pushf
add
mov
cwtl
mov
jb
inc
pop
xchg
mov
add
out
sahf
lret
push
cmp
pop
pop
add
jecxz
mov
push
pop
stos
or
fwait
mov
mov
dec
lods
fwait
mov
mov
mov
jl
out
bound
repz
sbb
dec
or
outsb
add
imul
popa
mov
lea
fs
pop
in
push
test
pop
movsb
ret
fldlg2
lea
cmp
inc
and
pop
loope
test
or
mov
or
inc
shrl
pop
lahf
cmp
push
mov
stc
adc
mov
rcr
adc
mov
sub
rcl
push
and
test
lcall
pop
xchg
push
arpl
dec
sbb
aam
sbbb
daa
int3
jno
mov
inc
iret
jp
call
pusha
push
in
jo
jbe
dec
or
imul
stc
popf
pop
fisubs
in
mov
push
rol
cmc
pop
gs
sti
jno
jge
push
test
cs
push
sbb
cmp
xchg
sub
sub
in
iret
pusha
lods
cli
push
ret
push
std
dec
mov
cmp
inc
push
xchg
fwait
dec
mov
adc
or
rcll
cmpsb
les
pop
lods
cs
mov
xchg
es
cmpsb
sbb
stos
sub
cmpsb
jp
test
movsb
test
int3
pause
cmc
mov
aaa
sub
fiaddl
mov
inc
mov
andb
sbb
or
mov
push
stos
fs
or
imul
jne
xchg
sti
in
imulb
jle
loop
stos
mov
add
xor
stos
loopne
popf
fnstsw
ret
inc
leave
repnz
fidivrl
int
adc
stos
push
cltd
fdivrp
cs
pushf
add
mov
and
fsubl
int
loop
adc
jns
bound
loopne
jo
inc
push
mov
out
insb
mov
fcompl
inc
cmp
mov
inc
aaa
fs
xor
xchg
outsb
xchg
int3
mov
inc
jecxz
loopne
xchg
faddl
mov
scas
lcall
inc
movsb
xchg
sub
mov
enter
pop
pop
and
insb
subl
add
and
iret
mov
outsl
fistl
sahf
jg
lods
jle
lds
popa
and
or
movsb
push
jb
pop
bnd
mov
test
or
push
and
ror
push
in
push
sub
and
push
inc
lret
mov
mov
cmpsb
sub
jg
cltd
addl
jge
sahf
gs
jmp
mov
cmp
inc
push
call
in
sbb
mov
lret
xlat
hlt
test
cwtl
cmp
jno
push
aam
jnp
in
in
js
mov
fimuls
lret
xchg
xor
mov
add
stos
pop
rcrb
sahf
push
pusha
sbb
jb
dec
mov
ror
bound
lret
lahf
sub
popa
pop
fprem
insb
xchg
mov
mov
in
and
cld
mov
jno
fs
lcall
stos
loopnew
insl
call
push
hlt
jge
mov
sbb
and
addb
and
fisubrl
adc
in
inc
inc
sub
mov
pop
outsb
add
fnstcw
jecxz
mov
xchg
lods
push
clc
inc
int3
iret
or
scas
pop
inc
mov
insb
scas
rorl
aam
test
push
loope
jnp
jae
push
jns
mov
push
and
out
jb
imul
and
mov
je
pop
sbb
cmp
mov
pop
cmc
sub
ljmp
push
mov
jecxz
sahf
xor
mov
je
inc
mov
lahf
imul
push
ret
mov
jo
mov
into
xor
popa
mov
dec
gs
xor
adc
je
push
addl
insl
ret
ficomps
loope
xor
jae
jg
jl
xor
add
fsts
mov
xchg
sub
mov
loope
cld
xchg
dec
psubb
pop
mov
mov
cmc
pop
and
cmp
and
nop
loope
les
outsb
jl
sub
and
cmpsl
in
push
adcb
mov
subb
push
sub
scas
xchg
cmpsb
xor
les
fwait
inc
gs
add
xchg
sub
test
sbb
mov
cmp
mov
push
lret
int
test
imul
js
int
jecxz
mov
inc
lcall
mov
lret
movsl
xchg
data16
js
mov
mov
scas
sub
push
inc
add
xchg
push
enter
push
mov
dec
lods
inc
aas
test
jp
popf
adc
push
mov
pushf
insb
pop
inc
int
add
bound
int
push
mov
sbbb
ds
adc
rcrl
mov
sub
aad
dec
faddl
mov
jg
scas
sbb
test
inc
stc
loopne
imul
xchg
jmp
mov
psubsw
lods
cwtl
call
fwait
repz
jg
xchg
aam
sub
jge
scas
scas
bound
sbb
jns
inc
test
mov
push
outsb
loop
mov
cltd
and
or
jge
pop
fcoms
jnp
roll
test
popa
pop
int3
scas
xor
adc
stos
lods
pop
popf
scas
adc
rorl
and
outsb
dec
mov
pop
lods
dec
in
mov
or
das
rcr
pop
mov
mov
fldt
pop
mov
mov
and
jnp
add
adcb
rcrl
bound
sub
pop
leave
jp
xchg
or
bound
fildl
stos
sarl
inc
decl
lret
push
pop
pushf
pusha
and
mov
mov
mov
icebp
sub
mov
or
mov
bound
lods
lahf
mov
test
xchg
lods
dec
test
lods
jecxz
icebp
mov
add
scas
pop
cld
clc
and
daa
imul
es
in
dec
push
cmp
dec
fnstenv
mov
xchg
adc
inc
mov
jge
popa
out
push
mov
inc
icebp
insb
dec
rcll
mov
mov
gs
xor
adc
mov
insb
fsubl
and
pop
js
pop
call
gs
mov
popa
push
pop
sbb
inc
faddl
movsl
scas
test
out
enter
dec
leave
subb
or
jo
outsb
mov
sub
dec
subb
test
insb
scas
mov
pop
loop
divl
mov
inc
subl
inc
pop
iret
popa
pop
xchg
lods
out
push
faddl
cmpsb
mov
repnz
pop
pop
sbb
push
scas
push
push
shrb
fsubr
mov
clc
insb
fstpt
loopne
sbb
pushf
imul
bound
ss
icebp
fwait
push
xor
int
je
mov
ffree
jnp
mov
mov
dec
enter
int3
ja
ljmp
aam
mov
loope
inc
adc
cmp
mov
mov
test
xchg
pop
and
out
mov
pop
insl
cmpsb
popa
pusha
test
cld
clc
test
sahf
sub
aaa
cmp
es
loope
inc
fwait
mov
insb
or
jp
xor
lcall
mov
lock
js
xchg
or
das
aaa
cltd
cli
sbb
insl
sbb
pop
shl
sub
mov
pop
and
jge
icebp
add
mov
inc
mov
clc
mov
insb
xor
lods
pop
testb
ret
dec
fisubrs
sti
xchg
inc
iret
xlat
mov
movaps
jp
ljmp
pop
rclb
jmp
fstl
add
ljmp
inc
adcb
push
jle
mov
cs
push
xor
cmp
sub
and
pop
arpl
fsubrs
cmp
jge
fld
out
insb
imul
push
inc
pop
adc
inc
test
in
test
jne
fildl
cmp
stos
ficompl
and
fimuls
enter
push
jp
jo
test
lods
rcrb
subl
dec
in
ret
xlat
add
outsl
lea
pop
add
inc
pop
mov
les
repz
sbb
rorl
jb
sbb
jmp
pusha
imul
cli
xor
sahf
mov
push
inc
flds
push
mov
push
out
inc
xor
insb
fcom
ficompl
sbb
pop
mov
sahf
pop
jecxz
pop
nop
pop
fnstcw
popf
pop
xchg
mov
into
pop
sbbb
enter
inc
pop
or
loope
jp
mov
popf
xor
lods
arpl
stos
enter
dec
sbb
popa
int3
iret
fstpt
test
cmp
jo
jge
mov
pop
xchg
cmp
mov
fisttps
mov
dec
mov
jbe
mov
fisttpll
std
mov
pop
test
gs
or
fadd
cltd
gs
pop
fistpl
insb
cwtl
xchg
orl
dec
test
fwait
int3
inc
mov
mov
mov
jp
or
dec
testb
test
loope
or
sub
inc
clc
les
lret
add
xchg
jbe
inc
mov
je
movsl
sbb
sbb
mov
mov
loopne
jge
cmc
inc
jns
fucomi
or
mov
push
jmp
icebp
cmp
xchg
xor
xlat
or
or
sub
lods
inc
mov
add
and
xor
scas
push
mov
ror
dec
jo
pop
jnp
enter
xchg
std
and
pop
je
push
movsb
movsb
fcmovnu
pop
fisttps
pop
je
out
sub
adcb
in
sbb
sahf
mov
cmpsl
jmp
add
mov
mov
stc
xor
jp
mov
cmp
fmull
stos
loopne
popf
ja
cltd
push
mov
in
jecxz
dec
push
pop
in
xchg
cmp
roll
hlt
and
loopne
pop
popa
xor
es
jb
jnp
jge
pop
arpl
test
pop
je
and
jno
push
jge
push
xorb
push
sub
lods
popa
int
pop
adc
hlt
rcr
imul
fiadds
sbb
jmp
mov
mov
sbb
jo
sahf
lcall
jmp
les
icebp
in
test
imul
stc
adc
js
mov
or
sbb
push
aad
push
and
and
punpckhwd
xor
xchg
das
pop
or
push
pop
daa
pop
dec
cvtdq2ps
testl
xchg
das
pop
inc
out
dec
test
mov
jecxz
adc
jmp
pop
popf
sbb
fndisi(8087
cmpsb
mov
xor
dec
scas
mov
imul
mov
pop
jmp
arpl
mov
les
test
mov
jno
mov
popa
addr16
sbb
subb
addr16
scas
xchg
dec
int
inc
std
add
inc
add
mov
imul
sbb
movsb
out
mov
and
adc
push
mov
mov
jp
mov
and
xchg
xorl
dec
xor
xor
dec
popa
outsl
mov
mulb
dec
jbe
push
jo
je
js
popa
jl
cmpsb
xchg
mov
in
mov
xchg
mul
insb
push
pop
mov
in
test
or
pop
loop
pop
lea
pop
adc
cwtl
in
out
clc
jl
ficomps
pop
sub
fiadds
mov
xchg
fcoms
loopne
mov
mov
cwtl
popa
loop
loopne
push
sub
arpl
loope
jno
popa
movsb
push
jns
pop
arpl
push
cwtl
sbb
int
mov
test
xchg
push
add
scas
xchg
movsb
in
pop
jmp
inc
add
jnp
sub
fildl
lahf
xorb
loope
popa
push
clc
fs
push
jl
lahf
cltd
mov
or
pop
sarl
jmp
icebp
jb
cli
js
or
ret
xchg
push
pushf
loope
mov
data16
scas
movsb
jmp
aam
mov
popa
insb
mov
xchg
dec
sti
cmpl
mov
lret
loop
xchg
or
cmp
in
xor
push
and
xor
cwtl
mov
dec
cmpsb
orl
lods
inc
test
test
sub
mov
imul
inc
mov
sub
pop
and
xchg
pop
xor
cmpsb
int3
push
daa
popa
mov
jns
test
fldl
bound
mov
jb
aas
and
pusha
repz
sti
pushf
repz
mov
cmp
bound
sbb
imul
jecxz
sub
clc
xchg
ss
pop
xor
aad
add
pusha
test
leave
and
dec
repnz
sub
dec
pushf
cs
inc
lret
sarl
in
pop
scas
cmp
jne
jbe
pop
push
mov
inc
mov
cwtl
jle
cmpsl
push
mov
js
cmp
cmpb
pop
fadds
dec
and
xchg
push
andb
lds
adc
dec
ss
call
mov
imul
ljmp
shrb
imul
in
jno
push
fnstcw
repnz
xchg
aaa
mov
incl
pop
fwait
xchg
movsb
xchg
test
jo
push
mov
xchg
lret
push
sbb
add
cmp
int3
mov
mov
js
and
mov
jg
subb
mov
les
loop
mov
inc
push
cmpsb
bound
push
lret
and
pop
cmp
je
and
cmp
sub
pop
xor
ficompl
inc
mov
arpl
bound
xchg
ljmp
or
rcrl
mov
xchg
sbb
sbb
push
lock
mov
cwtl
fistpl
push
pop
mov
adc
inc
sub
sahf
xchg
cwtl
jl
call
adc
test
mov
push
cmc
pop
xlat
icebp
shlb
bound
push
sbb
jno
push
ret
iret
mov
pop
adc
cmpb
rorb
sahf
pop
fs
je
mov
mov
xchg
pop
aam
ficomps
xor
pop
mov
pop
sbb
sbb
add
inc
mov
pop
jg
xchg
xlat
fstps
xchg
jg
dec
pop
mov
loopne
dec
and
into
pop
in
mov
mov
xor
or
add
jmp
es
scas
mov
int
stos
pop
and
and
ds
dec
bound
das
aam
cltd
xchg
pop
inc
pop
xchg
jns
call
scas
jp
in
ss
repnz
in
pop
loop
xchg
mov
lds
xlat
popa
jmp
jge
mov
jge
cmp
lods
mov
out
mov
sbb
push
scas
lock
mov
and
mov
and
insl
ljmp
mov
xchg
cwtl
lahf
pop
jmp
repnz
scas
mov
outsb
jo
dec
cmpb
stos
dec
xchg
jl
gs
stos
in
cwtl
push
cli
jl
jl
repz
repz
pusha
push
std
mov
add
push
jecxz
dec
mov
mov
mov
outsl
xchg
cmpsb
inc
sub
test
sbb
lds
mov
sbb
mov
call
mov
into
fucomp
mov
imul
aaa
add
outsl
push
xchg
pop
insb
aam
ss
shl
outsl
loop
cmp
mov
jae
pushf
mov
jbe
pushf
pop
mov
lods
mov
xchg
daa
ds
mov
sahf
sbb
push
and
jo
fwait
je
jae
cwtl
aam
popf
xor
lcall
add
mov
imul
push
andb
or
mov
and
and
int3
movsl
adc
fidivrs
push
pop
shll
sbb
aaa
dec
or
popa
stos
inc
sbb
repz
leave
mov
mov
in
addl
cmp
pop
test
std
push
inc
mov
jns
jecxz
lock
mov
jecxz
push
add
mov
daa
call
mov
imul
test
add
push
out
insb
cmp
lcall
cmp
aad
in
in
movsl
js
adc
mov
jge
test
mov
sahf
int
out
cli
cmp
and
pop
push
xchg
mov
pop
cmp
out
mov
mov
addr16
sti
andl
xchg
daa
pop
les
xchg
loop
scas
lea
jge
sub
push
sub
jbe
das
or
loope
push
popa
xlat
hlt
jno
ret
mov
leave
mov
cmp
loopne
pop
scas
inc
inc
pop
sbb
push
faddl
aaa
or
pusha
push
and
int3
mov
cmovno
xor
in
data16
cli
cmc
popa
movsl
aad
imul
andl
outsb
test
nop
xchg
mov
mov
push
push
and
dec
or
mov
xchg
mov
nop
add
aaa
ja
arpl
cltd
sahf
js
xor
ror
xchg
fldcw
gs
mov
push
mov
pop
jbe
cmpsb
jbe
ret
incb
jmp
push
outsb
loop
mov
sub
jle
test
cli
pusha
test
in
fs
and
pushf
shrl
sub
inc
and
mov
stc
pushf
jge
or
pop
insb
inc
or
inc
lcall
fsub
sahf
js
mov
adc
cmp
cmpsb
je
sbb
mov
daa
cltd
sub
cmp
cld
sbb
loope
addr16
lcall
fisttpl
cmpsl
int
xorb
popf
test
lahf
popa
pop
mov
enter
mov
mov
dec
mov
add
push
scas
mov
arpl
adc
pop
inc
js
jl
cwtl
or
sbb
push
mov
ss
cwtl
aaa
aas
sbb
xchg
sbb
push
xchg
and
xchg
push
subb
popa
pushf
insb
jo
rorb
gs
sub
les
mov
loop
and
stos
ja
push
pop
and
pop
test
xor
sbb
in
mov
xchg
inc
ss
or
fwait
scas
cmp
cmpsl
xor
std
in
aad
jp
xchg
arpl
adc
cmp
dec
pushf
cmc
dec
ljmp
cli
add
dec
clc
or
mov
pushf
mov
test
push
adcb
iret
sub
sti
mov
test
mov
inc
rcll
in
xchg
add
icebp
pop
push
cmpb
fs
pop
xchg
int
ja
je
jp
shl
das
jne
aas
inc
pop
mov
inc
in
pop
rcrl
add
inc
mov
jns
test
inc
in
js
inc
inc
test
rorl
dec
jecxz
sbb
jmp
aaa
cmp
inc
scas
jne
jne
popa
pop
dec
in
pusha
adc
mov
arpl
sub
iret
pusha
dec
xor
mov
cld
sub
pop
pusha
cmp
xchg
lea
and
std
jae
int3
xchg
loopne
pop
pop
inc
into
pop
movsb
lret
inc
xchg
popf
shlb
cmp
or
mov
pushf
mov
cli
pop
xchg
js
nop
mov
mov
rcrb
or
jecxz
lods
jmp
xor
mov
mov
lcall
testl
fs
lret
mov
fldl
mov
insb
ret
cmc
pop
inc
xor
stc
add
mov
pushf
sbbb
lahf
mov
icebp
lea
sbb
mov
xorb
cmp
dec
xor
repz
arpl
pop
push
add
mov
push
lods
lock
loope
arpl
pop
inc
sub
cmp
repnz
sbbl
dec
sbb
fcomi
pop
sub
insl
mov
and
and
inc
inc
cmp
mov
mov
push
sbb
pop
sub
pushf
je
adc
xchg
insb
stos
pop
pop
stos
inc
push
cltd
sub
xchg
fs
ficoml
jecxz
int3
insb
push
adc
ss
xchg
sbb
xlat
jnp
inc
dec
mov
mov
dec
mov
pop
les
bound
jmp
jnp
test
inc
scas
and
mov
popf
or
lods
and
mov
inc
fnstcw
and
cmc
ljmp
lret
cmpsb
in
scas
pop
mov
pop
sahf
mov
out
jmp
lcall
inc
cmc
mov
lret
mov
pop
pop
cmp
inc
xchg
test
cld
push
orl
fwait
sbbb
fs
cmp
outsl
push
out
mov
in
cltd
imul
pop
dec
jo
jle
mov
inc
cmp
sbb
pmuludq
cmpb
sarb
subb
dec
sub
roll
jp
popf
cmpsl
cmp
pop
jno
shlb
mov
pop
mov
int3
test
arpl
push
aad
scas
jne
pusha
mov
lock
sahf
xor
cmpsb
data16
adc
xor
pop
pop
xor
fwait
push
popf
sbb
js
loopne
mov
popa
pop
mov
sbbl
or
popa
pop
inc
xlat
stc
dec
shl
jge
mov
mov
fwait
out
stos
mov
je
and
test
add
mov
loopne
xor
dec
rcll
in
mov
sbb
fldcw
pslld
mov
jns
cwtl
icebp
dec
push
push
sbb
inc
jo
loop
addr16
scas
gs
outsl
jmp
mov
cmp
insl
loop
and
mov
xchg
insb
pop
xor
lcall
xchg
in
mov
inc
sub
pop
fstps
in
lock
push
in
xchg
loop
adc
imul
sti
xor
push
ret
pop
aam
inc
jnp
pop
fs
push
dec
cwtl
in
movsl
loop
pop
fisubl
pop
mov
fs
test
jle
lea
gs
in
fisttps
sbb
sbb
sub
xchg
sbb
pop
mov
cwtl
inc
mov
push
sub
cld
lcall
or
jne
jg
xchg
call
fdivr
out
mov
jge
stos
dec
gs
pop
cmp
push
add
movsl
sbb
fnsave
fnsave
lahf
pop
push
js
dec
xlat
or
stos
idivl
int3
jo
subb
js
mov
fwait
outsl
in
xchg
out
mov
test
adc
jne
and
je
mov
push
es
fdivl
mov
xlat
arpl
push
jle
in
gs
mov
xor
xchg
cmpsl
arpl
repnz
mov
ret
lcall
mov
mov
cli
cmp
pop
repz
add
inc
pop
adc
insb
in
mov
std
aad
adc
repz
push
fidivl
mov
jge
int
fldl
jmp
jo
int3
jge
sub
rorb
adc
jecxz
mov
in
add
sbb
data16
jb
sbb
push
bound
fcompl
jb
scas
xor
cltd
addb
fadds
jp
jo
in
fiaddl
fcomp
int
cli
jmp
mov
enter
aas
mov
jo
and
mov
popf
sbb
push
aad
add
test
cmc
imul
andl
jns
xchg
clc
xor
scas
out
pop
push
inc
in
test
xor
scas
inc
sbb
or
pusha
test
movsl
int
call
xchg
sub
jle
mov
push
pop
push
std
sbb
lods
sbb
dec
andl
jno
jbe
roll
sub
fisubrl
js
inc
pop
sbb
mov
dec
bound
mov
mov
mov
mov
xchg
mov
mov
mov
fcmovnb
mov
and
mov
xor
adc
mov
sub
mov
inc
test
mov
popf
shrb
push
daa
mov
imul
pop
flds
fs
cwtl
push
in
cwtl
ret
fdivr
clc
les
mov
gs
cld
jno
aas
push
xchg
cli
jmp
jge
mov
jmp
and
int
enter
in
jne
pop
jge
add
out
rolb
jbe
pop
outsl
jns
in
insb
out
mov
das
imul
sub
mov
jl
or
rcr
les
ficompl
jae
addb
pop
mov
int3
popl
lahf
sti
mov
sbb
rorb
out
mov
pop
lock
aam
loopne
aas
sub
xchg
data16
pushf
ja
popa
iret
and
sbb
sbbl
mov
mov
dec
loopne
adc
rclb
negl
jnp
jo
insb
dec
popf
xchg
mov
stc
mov
out
mov
insl
pop
xor
pop
push
jbe
mov
insl
jbe
stc
jno
les
or
clc
insl
jne
loop
lcall
sbb
push
cmp
aad
sub
data16
callw
sbb
adc
sub
or
sti
fstps
mov
cmp
push
xor
jp
cmp
adc
sbb
sbb
adc
rcrl
add
cwtl
adc
test
add
incb
inc
jne
in
sbb
inc
pusha
push
call
scas
sbb
mov
mov
sbb
jecxz
or
mov
shlb
addr16
pop
lods
push
sub
sahf
xchg
dec
xchg
aam
xor
insl
test
in
js
and
stc
jnp
sarl
mov
loopne
xchg
mov
lods
pop
fsub
movsl
mov
imul
arpl
push
xchg
mov
adc
cmp
inc
sarl
pop
mov
jl
movsl
call
in
push
gs
adc
test
pop
test
mov
jmp
scas
jle
mov
lods
call
movsb
xor
jns
pop
arpl
pop
inc
xchg
shl
jbe
loop
andb
rorb
or
fneni(8087
mov
xor
das
js
int
loope
mov
lcall
sub
loopne
cmp
add
cmp
sub
mov
jo
mov
jp
rorb
mov
loop
imul
sub
cmp
jo
cmp
push
je
dec
push
int3
pop
fs
xor
push
das
incb
inc
int3
cld
popa
lods
cmp
scas
loope
inc
mov
mov
nop
push
je
loop
xchg
pop
xchg
pusha
sbb
loopne
xor
int3
pop
dec
call
fs
mov
fcompl
push
int
cs
inc
push
xchg
ret
xchg
pusha
icebp
pop
pop
popf
inc
fwait
adc
imul
and
xor
mov
or
xor
fnsave
outsb
pop
jmp
mov
or
add
sbb
lods
push
sub
pusha
incl
icebp
outsb
jmp
popf
inc
mov
fidivrs
adc
out
mov
test
add
int
adc
mov
lock
into
imul
pop
mov
or
ret
sub
and
fildl
adc
cli
popa
jge
pop
in
test
rolb
add
movsb
cmpsl
fs
int3
stc
subb
jg
ret
add
sub
jb
inc
and
sub
fcmovbe
lea
push
xchg
push
mull
xlat
jle
push
or
in
mov
pop
test
hlt
jbe
test
push
sub
cmpsb
push
or
push
xor
push
test
and
cmp
xor
jp
movsb
das
sub
add
adc
inc
and
addb
insl
stc
and
loop
outsb
pop
dec
pop
cmp
jnp
in
sbb
inc
arpl
sbb
pop
in
pop
in
sar
ret
inc
cmp
mov
mov
mov
int3
sub
and
ss
in
bound
and
test
xchg
sub
gs
sub
stos
push
sub
fs
pop
in
imul
js
dec
sub
adc
arpl
pop
mov
out
xor
xor
sahf
ja
mov
adc
outsb
xor
shlb
pop
push
loope
in
popa
xor
xorl
push
nop
pop
addr16
sub
inc
lcall
and
and
scas
mov
pop
sbb
insb
fldenv
jae
stos
sbb
sub
pop
imul
imul
pop
in
sahf
push
push
repz
std
xor
sahf
clc
mov
cwtl
std
xor
xor
fadd
lods
das
dec
cwtl
idivb
fistpl
pop
cmpb
push
loope
pushf
pop
jnp
dec
pop
and
xlat
fadd
sbb
js
sbb
imul
and
movsb
div
ficoml
das
mov
fwait
sbb
cwtl
not
dec
xor
into
mov
testb
or
inc
dec
fidivrl
call
pop
jl
mov
cwtl
sbb
leave
sbb
imul
or
dec
xchg
push
jnp
addb
sbb
fwait
rcrl
imul
in
sbb
and
add
addr16
or
pop
dec
mov
add
xchg
daa
and
lcall
dec
lcall
xchg
arpl
xor
dec
inc
insb
or
adc
fcompl
sub
sti
adc
cmp
int3
cltd
movsb
push
lcall
adc
dec
sub
inc
adc
cwtl
pop
add
stc
ds
pop
out
rcrb
fwait
js
jmp
mov
xchg
push
sbb
pop
ljmp
dec
les
ljmp
mov
push
pusha
stos
insb
pushf
pop
pushf
outsl
pusha
popa
xchg
popa
daa
pop
sbb
aaa
dec
mov
outsb
xlat
cli
cmpsb
jns
fnstcw
stc
lahf
andb
aam
mov
xor
adc
and
aas
push
xor
and
lcall
mov
push
aaa
pushf
push
xor
int
xchg
ds
in
inc
xor
add
push
add
cs
sbb
pop
popa
push
aam
fcoml
pop
sub
gs
sub
data16
fdivrl
dec
mov
jb
insb
mov
popf
lods
aaa
pop
cmp
incb
out
arpl
mov
pop
inc
cmp
adc
decb
xorb
lahf
in
fwait
sub
lea
pop
push
push
mov
in
pop
and
fcoml
xor
mov
push
mov
imul
push
xor
pop
mov
movsb
xorb
sbb
cld
push
cli
into
and
push
daa
mov
mov
sbb
xchg
push
mov
movsl
insb
inc
je
test
aaa
je
xor
inc
fdiv
lods
movsb
inc
fldcw
leave
fildll
popa
stc
insl
pop
jmp
in
std
fdivr
sub
jp
mov
test
lds
push
test
push
mov
mov
mov
pop
push
push
sub
mov
cmp
sbb
enter
popa
pushf
inc
push
cld
imul
xchg
insb
sbb
daa
add
mov
push
cltd
cmp
add
pop
jne
in
and
pop
addr16
aaa
pop
push
cltd
aas
cmp
or
push
sub
xor
enter
push
jp
outsl
pop
popa
mov
mov
nop
push
repz
cmp
stc
sarb
pop
loop
adc
imul
push
adcb
inc
sub
sub
jle
rcrl
movsb
ja
aam
popa
fisttpll
jae
sbb
push
aaa
mov
inc
inc
inc
dec
mov
pop
jne
pop
pushf
pusha
rolb
mov
and
xchg
addr16
xchg
sub
xor
dec
cmp
push
mov
pop
pop
cmp
sub
popa
ja
mov
imul
ja
pushf
sarb
pushf
pushf
sub
aaa
pop
xchg
sbb
xchg
clc
jmp
loop
ret
ljmp
sbb
cmp
fildl
jmp
cmpsl
and
scas
mov
imul
pop
jl
js
sub
fsubrl
cmp
cld
sub
out
push
sbbb
lcall
cmp
or
jmp
jnp
in
add
push
test
aam
loopne
scas
pushl
mov
fdivs
sbb
pop
pushf
adc
ss
add
test
ljmp
add
sub
xor
mov
aad
arpl
ret
push
sbb
inc
push
sub
hlt
imul
mov
int
ficomps
cwtl
pop
dec
les
cmpsl
add
loopne
int
js
cmp
stos
loopne
jmp
cmp
test
cld
test
stc
das
outsb
lea
aaa
jb
data16
sbb
push
and
cmp
and
push
or
cwtl
hlt
stc
push
dec
dec
jge
aam
and
cmp
and
hlt
fcmovbe
stos
dec
ficompl
sarb
push
lock
shlb
xchg
adc
je
mov
call
lock
bound
sub
xor
shrl
mov
jno
jno
dec
mov
hlt
pop
jmp
int
sbb
jmp
movsb
incb
test
jo
xor
xchg
jp
fwait
sahf
mov
cwtl
js
mov
aas
mov
add
das
adc
mov
add
xor
arpl
mov
ljmp
lret
bound
xchg
bound
adc
pop
xor
sti
mov
cmp
pop
ss
loope
mov
in
jecxz
sub
rcrb
shr
add
lcall
pop
jnp
popf
mov
and
push
mov
mov
adc
mov
sub
sarb
clc
fs
xchg
inc
pusha
push
or
xlat
jecxz
dec
add
imul
jecxz
test
in
push
pop
jno
xchg
and
xchg
pop
das
lret
mov
pop
sub
sbb
pusha
cmp
inc
adc
fdivr
jmp
test
pop
pop
fstpt
xchg
repz
cmp
pop
adc
test
into
lcall
loopne
pop
xchg
scas
push
push
mov
and
ret
test
or
and
fsubl
aaa
loop
fs
mov
pop
pop
pop
or
pop
inc
adcb
test
test
imul
adc
scas
out
mov
jne
push
jecxz
fnsave
push
or
outsb
and
roll
cwtl
or
cld
aam
inc
xor
pop
loop
xor
fwait
lods
pop
in
pushf
pop
dec
sbb
mov
jno
cltd
inc
xchg
cs
loope
mov
jecxz
fwait
pop
adc
adc
jne
lcall
lret
sub
cmpsb
pop
push
les
in
addl
xchg
push
lods
dec
push
push
int
xchg
sbb
xchg
dec
lret
jb
jb
pop
sbb
sbb
fistpl
repz
dec
mov
ds
out
pop
bound
push
jl
mov
stos
outsl
scas
std
push
dec
out
lret
test
pusha
dec
cmpsb
or
cmpsb
fisttpl
fldl2e
in
lods
sub
movsl
adc
in
push
sub
stos
pop
in
inc
mov
mov
push
inc
jne
repnz
xchg
xor
ja
inc
cmpb
mov
mov
hlt
ror
nop
jo
sub
je
dec
mov
outsl
push
sub
shrb
jmp
jne
ret
inc
mov
xchg
pop
push
sahf
mov
jbe
pop
and
inc
mov
lods
jo
jno
pop
inc
clc
cld
fnstcw
cwtl
andl
jl
stos
jo
mov
int3
sub
stos
push
adc
pop
xorb
mov
test
movsl
mov
cmp
stc
mov
mov
shlb
andl
jge
dec
test
outsb
loop
imulb
pop
push
insl
pop
mov
aad
inc
jno
mov
jae
or
and
mov
mov
dec
cmp
mov
subl
addr16
cmpsl
in
fadds
xchg
call
aad
pop
push
push
jecxz
jp
fisttpll
test
mov
in
sbb
sub
stc
loop
andl
pop
sti
jg
push
into
mov
sti
cmpsl
es
daa
xchg
pop
lgs
cmpsb
int
mov
sbb
test
mov
stos
sbb
popa
jns
mov
pusha
testb
loopne
out
add
jecxz
popa
aam
mov
jg
push
push
jge
push
fisttpll
xchg
adcl
stos
shll
sub
xchg
es
xor
lods
xchg
cmp
inc
push
push
pop
inc
adc
sub
dec
push
jl
adc
enter
mov
test
int3
insb
in
adc
ret
xor
and
inc
jle
push
jne
sbb
mov
adc
gs
aad
and
fdivp
xor
ljmp
cmpl
xor
into
xor
mov
cs
inc
fnstsw
push
jge
sub
sub
dec
inc
jp
in
inc
push
ja
imul
pop
push
adc
call
xor
fstpt
cmp
xor
fdivrl
cmp
cmpl
mov
xorb
out
cwtl
pop
inc
movsb
cwtl
inc
pushl
xlat
clc
lret
in
adc
and
pop
dec
pop
loop
jmp
and
mov
cltd
cltd
stos
mov
sub
aam
andb
inc
add
imul
inc
xchg
sub
nop
mov
push
xchg
test
in
pushf
ljmp
andl
mov
stos
test
ret
out
xor
xchg
mov
pusha
cmc
jnp
sbb
loope
sbb
jl
lcall
mov
mov
int
mov
push
push
jo
movsb
dec
mov
or
fistl
adc
sbb
or
jb
adc
dec
arpl
sub
cmp
cli
cmp
push
clc
pushf
dec
cmp
in
data16
pop
imul
test
xchg
adc
adc
js,pn
inc
imull
and
adcl
dec
mov
icebp
jb
xchg
lcall
out
loope
adc
movsl
and
cmp
fistpl
pop
dec
xor
and
loop
and
sbb
icebp
jnp
mov
cmpsb
push
outsl
and
jbe
negb
sahf
push
scas
sub
add
ss
inc
ficoml
scas
sbb
jns
jp
adc
out
push
addb
call
xor
mov
xchg
inc
aam
jb
nop
fdivr
sub
pop
test
lahf
add
jle
adc
bound
dec
scas
jge
test
cmp
or
int
mov
loope
or
add
in
mov
sbb
fsubrp
mov
push
test
inc
out
js
loope
sti
fists
or
dec
pop
jno
inc
cmp
out
negb
pusha
inc
cld
inc
test
lea
cs
cmpsb
pop
pop
xor
dec
cltd
inc
and
das
lahf
lock
cwtl
push
xchg
mov
mov
push
xchg
outsb
data16
sbb
pop
bound
mov
ret
and
dec
loope
push
xlat
aas
mov
inc
push
stos
cmp
fwait
out
dec
jae
add
sahf
scas
inc
cmp
test
bound
cmc
pop
shll
dec
js
mov
lcall
jge
out
fmull
orl
dec
int3
dec
sub
add
fcmovnu
pop
lret
test
pop
fistps
pop
pusha
jmp
clc
fsubrl
sbbl
xor
arpl
mov
dec
in
mov
mov
pop
cmc
dec
push
jge
push
dec
lock
insb
pop
and
pop
loope
fs
mov
pop
fwait
jbe
movsb
cmp
mov
movsb
jo
loopne
fdivrl
mov
call
idivl
push
fs
mov
cmp
popa
jl
xchg
or
pushf
into
fucomip
dec
and
mov
or
addr16
jmp
cld
lret
outsb
xchg
cmp
pushf
addr16
fwait
mov
jmp
ds
js
mov
jmp
sbb
and
push
mov
sub
jo
fs
nop
sbb
fucomip
mov
call
outsb
push
je
out
fisubrl
inc
dec
sbb
dec
nop
mov
aam
mov
sbb
pop
xor
inc
das
fmull
push
sahf
mov
cmp
mov
cmp
sahf
mov
cmc
jmp
cmc
push
mov
test
push
fdivrl
sub
stos
rclb
jle
les
movsb
pop
popf
lods
mov
loopne
pushf
stos
mov
jno
fs
inc
pusha
movsl
ficomps
ficomps
jns
call
mov
mov
lcall
hlt
not
lcall
out
cld
mov
hlt
pusha
cmp
lods
lcall
imul
xchg
xor
mov
jno
cmpsl
ficomps
loopne
mov
pusha
mov
pushf
cmpsb
fldenv
mov
push
mov
ss
mov
or
shlb
xchg
mov
fs
popa
jmp
lahf
pop
xlat
in
push
adc
pop
loope
jl
sahf
into
addb
add
sbb
fs
xchg
popa
arpl
xchg
or
mov
mov
cli
enter
mov
mov
xor
sbb
fcos
mov
rcl
pop
jo
push
or
inc
push
push
mov
adc
pop
ja
pop
data16
jecxz
dec
push
push
fcom
push
or
mov
push
dec
or
movl
mov
and
jle
jecxz
mov
mov
imul
xchg
movsb
stos
xchg
popf
outsb
loope
fwait
test
sahf
mov
je
cmp
pop
das
imul
inc
repz
or
rorl
inc
frstor
cmpl
cwtl
outsb
test
and
hlt
mov
adc
testb
adc
and
mov
mov
dec
nop
or
xor
xrelease
and
push
imul
repz
pop
add
es
pop
ss
mov
xor
ja
sub
iret
push
pop
inc
push
int3
enter
int
in
repnz
ds
inc
lea
jecxz
mov
pop
repnz
mov
sbb
insl
inc
test
cmpsb
inc
test
cmp
cmc
sub
loopne
ljmp
out
loopne
inc
jae
mov
stos
jbe
mov
jns
add
cld
popa
jbe
mov
nop
or
sub
scas
pop
stos
inc
push
sbb
lods
in
in
ret
push
sbb
pop
ret
in
xchg
push
addr16
sbbb
and
and
data16
cwtl
negb
movsb
mov
push
or
insb
jbe
mov
jle
jecxz
mov
mov
mov
jnp
jmp
jle
lret
cmc
clc
xlat
insb
sarb
xlat
shll
mov
jnp
add
jmp
outsb
fs
lods
inc
fidivl
push
pop
xor
in
dec
sbb
sbb
sub
mov
and
lock
mov
jge
push
jns
sub
enterw
and
pop
jb
pusha
scas
sahf
or
xor
loopne
lret
add
mov
pop
cli
shrb
loopne
mov
fdiv
stos
cld
mov
movsb
xorl
mov
sahf
push
cmp
sub
repnz
mov
orb
subl
data16
jo
pusha
cmp
xor
loope
int
into
js
or
mulb
jnp
clc
movsb
cmp
testl
cld
mov
das
push
loope
add
mov
sub
mov
jecxz
mov
pushf
cmp
mov
cmp
das
sub
mov
and
jbe
mov
push
mov
js
je
dec
nop
lcall
jnp
insb
insl
sti
fucom
fdivrl
loopne
mov
dec
aad
add
jp
cld
outsl
and
js
push
loopne
adc
jecxz
mov
xchg
stos
xchg
scas
inc
add
xchg
movb
fmul
pop
push
js
ficoms
xchg
into
pop
xchg
sahf
shrl
push
cmpsl
pop
mov
dec
mov
test
pusha
arpl
int3
pop
pushf
int
test
lcall
cmp
xchg
mov
fidivl
inc
dec
sarl
loope
gs
dec
jmp
inc
out
cwtl
ret
call
sbb
jecxz
stos
popaw
mov
cmp
mov
pop
ficomps
jnp
fbld
pop
loopne
mov
and
inc
lcall
mov
jbe
cmp
shrl
fs
out
jecxz
jne
sub
cmp
adc
roll
jo
pop
mov
jo
inc
mov
lea
mov
xor
inc
and
pop
mov
imul
scas
rorb
out
cmp
inc
dec
scas
mov
out
fimuls
cmp
sbb
push
negb
je
fimuls
lods
pusha
jecxz
mov
mov
addr16
js
jbe
jo
inc
addr16
or
fistpll
cmp
sub
adc
mov
scas
inc
outsl
in
lods
inc
sub
rcrb
imul
pop
adc
pop
popa
adc
das
sbb
jb
pop
mov
call
aaa
mov
push
xchg
fucom
aam
scas
jne
add
mov
mov
rcr
sbb
loop
sbb
pop
shrb
popfw
push
mov
shrb
add
cmpsb
cmpsl
pop
arpl
test
push
je
pop
andb
add
sahf
mov
pop
jae
mov
outsl
mov
jno
adc
cli
scas
movsb
lcall
push
aas
aam
aaa
insl
dec
pop
mov
popa
pop
jo
xchg
jge
mov
scas
mov
mov
sbb
push
cli
add
mov
pop
into
mov
mov
inc
push
lods
cs
adc
test
cwtl
pop
sub
jmp
vandps
xchg
push
fcompl
insb
test
and
jo
inc
or
inc
or
ficoms
imull
sub
bound
mov
jg
push
push
jge
cwtl
int3
xor
scas
push
es
mov
js
test
fwait
out
dec
xchg
roll
or
or
or
es
pushf
lea
pop
xor
push
pop
cmpsl
jne
xor
push
and
inc
imul
js
sar
adcb
inc
sbb
pop
inc
mov
jnp
push
and
mov
mov
dec
lcall
leave
mov
jno
mov
notl
jnp
mov
loope
sub
nop
lahf
pop
fsubl
mov
xchg
jb
fildl
or
cmp
in
icebp
gs
int
and
xchg
sti
imul
jmp
xor
shrb
jbe
cmp
rol
nop
mov
arpl
pop
jns
mov
mov
mov
push
gs
mov
mov
out
pop
cltd
loope
xor
orl
enter
mov
sbb
shrb
lcall
mov
inc
pop
pop
stc
inc
push
pop
pushf
das
mov
sahf
xchg
outsl
scas
loopne
fs
fidivs
sti
sahf
bound
mov
mov
cmp
mov
int3
pushf
in
test
sbb
pop
stos
cli
gs
test
faddl
xor
cmp
outsb
mov
push
fdivr
dec
jne
sbb
xchg
enter
outsl
loope
leave
mov
pop
jo
ficoml
sbb
arpl
sub
jo
push
test
sub
je
test
shlb
test
jnp
mov
mov
or
xchg
scas
sbb
xchg
sub
out
in
cmp
xchg
jg
das
aas
sub
daa
inc
mulb
aad
cli
decl
in
jb
jle
adc
pop
nop
in
call
mov
std
mov
adc
fwait
test
adc
jb
clc
push
sbb
pop
mov
fistpll
and
and
xlat
jns
insb
loopne
xor
xor
js
scas
sbb
fwait
test
pusha
sub
js
sbb
lahf
and
rcrl
leave
dec
sahf
gs
dec
pop
in
jmp
js
inc
sarb
gs
mov
iret
jg
sub
and
mov
jb
adc
xorb
jmp
add
and
jmp
icebp
gs
jb
popa
lahf
jp
pushf
popf
stos
loope
push
jge
mov
icebp
fs
jo
ljmp
int3
adc
xchg
sub
ja
mov
xor
idivb
mov
add
insb
scas
mov
jp
aad
cld
jne
jo
push
mov
jns
fdivl
mov
sbbl
cmpsb
cmpb
cli
test
mov
xor
inc
mov
nop
ret
pop
test
add
mov
mov
pop
xor
pop
sub
sbb
fildl
nop
sbb
fcomi
sbb
push
test
and
fisubrs
stos
loope
inc
sub
lcall
or
inc
push
mov
fnstsw
lods
and
add
test
mov
outsl
xchg
inc
pop
loope
xor
push
cmpsb
repz
aam
and
test
pushf
repz
fdivl
outsb
mov
mov
insb
inc
sub
mov
outsl
mov
mov
movsl
jo
cs
mov
loope
lret
test
dec
cld
pop
in
and
outsb
jns
adc
or
lock
pop
mov
xlat
icebp
std
pop
lcall
test
xchg
xor
mov
sub
mov
aaa
add
pop
adc
das
shrl
push
movsb
mov
test
pop
sti
push
mov
lcall
scas
test
or
rorl
dec
lods
js
mov
dec
ret
test
int3
xchg
mov
pop
xchg
insb
dec
mov
mov
mov
inc
cmpsb
lret
daa
mov
cld
imul
inc
add
scas
mov
mov
sub
jp
insb
pop
inc
mov
js
scas
jns
pop
lret
fs
fucomip
rcrb
sbb
clc
out
shlb
pop
add
mov
insl
aas
xchg
cmpsb
sub
dec
mov
sbb
push
stos
cld
fisubs
adc
pop
inc
jmp
mov
pop
pushf
popa
mov
sti
push
jg
push
inc
cltd
jp
mov
sub
pop
xor
pop
xorl
lods
sahf
adc
cmc
jno
push
pushf
lods
push
fwait
inc
jp
jnp
push
imul
movl
fldcw
or
and
xchg
mov
and
mov
xor
xchg
cmp
shrl
fwait
or
sbbb
call
jbe
cmp
mov
inc
ret
mov
mov
in
sbbl
inc
adc
mov
and
je
addb
inc
inc
insl
pop
punpckhdq
cmp
pop
arpl
mov
ds
popf
pop
mov
add
pop
inc
mov
push
lahf
imul
mov
sbb
sub
bound
inc
and
lock
jg
fmull
pop
xchg
xor
push
and
pop
shll
fsubrl
daa
jae
adc
daa
jp
cld
rcrl
out
daa
inc
sahf
outsb
cmpsb
push
adc
aad
ljmp
inc
lea
daa
clc
hlt
mov
js
insl
iret
mov
push
cmpsl
jle
data16
pop
jb
test
cmc
scas
push
dec
adc
sbb
push
in
lods
mov
addr16
mov
pop
add
and
and
mov
bound
push
jbe
pop
imul
shll
mov
sub
lods
pop
popa
sahf
mov
cmp
gs
sbb
pop
mov
addr16
xor
scas
push
jl
stos
and
mov
adc
js
xchg
cltd
xchg
push
push
push
jl
inc
ja
mov
loope
cmpsl
addr16
pop
add
scas
mov
mov
addr16
daa
mov
jl
in
loope
dec
and
add
sbb
xorb
add
int3
call
push
cmp
je
jno
cmc
push
cwtl
hlt
push
test
jl
push
in
sbb
fs
call
xchg
popa
xchg
ret
cld
xor
scas
adc
lods
inc
xlat
subb
mov
adc
imulb
nop
loope
rcl
lods
test
movsb
ret
adc
test
jge
and
inc
inc
scas
xor
js
cmc
aaa
or
jg
bound
test
pushf
mov
or
push
cmpsl
xchg
push
loope
xlat
pop
dec
push
lcall
es
lock
xchg
shll
add
mov
stos
aad
pop
pusha
aad
pop
shll
sbb
movsb
dec
pop
sbb
xchg
jp
jne
insl
sub
stos
inc
pop
jne
push
sbb
add
pop
push
addb
jmp
loopne
fs
cmp
aas
mov
adc
pushf
fdivs
xchg
scas
leave
mov
ret
or
stos
lret
sbb
dec
lods
enter
lds
jle
ret
inc
pop
enter
add
shl
push
xor
push
cltd
push
lahf
ret
inc
jmp
fsubrl
sbb
stc
or
dec
or
add
cli
insb
in
jne
or
pusha
pushf
pop
ret
push
xchg
cwtl
inc
aad
call
push
loope
gs
jne
cmpsl
mov
out
ljmp
add
mov
dec
mov
mov
jge
push
mov
fidivs
inc
incl
pop
pop
iret
jg
repnz
cwtl
push
jecxz
dec
cli
or
shll
data16
sbb
push
popa
mov
inc
adc
paddq
jmp
dec
xorb
out
pop
dec
mov
scas
jle
aad
sub
outsb
aad
test
lret
cmp
movsb
jl
mov
xchg
clc
push
fistps
cld
leave
sti
mov
push
pop
fs
lcall
es
xchg
in
push
stos
jg
in
and
pushf
imul
insb
add
cmp
inc
jp
lods
stos
xchg
loopne
cmp
xchg
mov
enter
push
stos
and
shr
jge
adc
das
sbb
ret
ljmp
shlb
xor
xor
push
rorb
push
push
dec
shl
imul
fldcw
adc
pop
mov
imul
mov
push
lea
test
mov
in
int3
jg
and
jp
sub
enter
out
test
rcrb
inc
test
xlat
mov
cld
insb
inc
inc
aad
adc
cmp
pop
iret
sbbl
dec
aaa
sub
inc
cs
and
lcall
stos
dec
xor
push
sub
mov
lcall
push
mov
int3
lods
xor
cmc
mov
loopne
pop
jle
mov
sub
arpl
xchg
shll
je
test
das
mov
movsb
pusha
mov
jge
mov
repnz
push
pushf
addl
jb
ret
xlat
push
mov
pop
loop
cmp
test
stos
cmpsb
out
dec
ficoml
mov
roll
push
adc
dec
sub
jbe
outsl
mov
sub
sbb
aas
sbb
daa
jecxz
push
jecxz
mov
inc
out
bswap
xor
mov
push
lock
jo
int
cltd
insb
test
or
mov
mov
jnp
cmp
add
fsubrl
inc
and
in
jae
mov
mov
xchg
fs
mov
pop
xor
dec
js
mov
fs
cmc
les
cltd
pop
pop
enter
pop
popf
and
pusha
ljmp
pop
lea
cmp
sub
int
mov
jns
pop
and
test
xchg
mov
add
gs
repnz
popa
fiaddl
mov
sub
and
cwtl
lcall
mov
mov
pop
outsl
pop
inc
xor
sub
mov
js
push
push
pop
shll
mov
cwtl
or
adc
test
pop
lods
les
sbb
sbb
rorl
stos
push
fidivl
imul
mov
sbb
push
in
push
jb
ret
addl
mov
pop
push
popf
add
divl
insb
lods
outsb
out
xor
and
jno
push
mov
xchg
loop
xchg
fstl
dec
mov
in
jecxz
aad
fsubrl
std
pop
xor
mov
int
sbb
and
movsb
rorb
lods
cmp
fmul
xchg
push
jnp
and
xor
dec
sub
fstps
mov
mov
inc
mov
jne
cmp
gs
cmp
mov
cmc
out
sub
js
jecxz
sub
xor
js
fldl
jl
jp
cwtl
pop
pop
int3
add
sbb
jg
mov
aam
mov
clc
cmc
loope
arpl
test
stc
xchg
andb
jae
aad
jns
adc
inc
loope
dec
imul
fildl
mov
js
test
dec
cmp
pop
mov
mov
std
mov
sahf
xchg
cmp
xchg
dec
push
pushf
insb
arpl
pusha
mov
pop
add
mov
dec
sbb
cwtl
shll
inc
xchg
jle
mov
push
pop
call
nop
mov
pop
mov
mov
popa
loope
ror
mov
inc
iret
inc
insb
lds
push
sbbb
mov
loopne
mov
test
mov
mov
pop
icebp
pop
pop
cmp
nop
fnstcw
add
cmc
mov
outsb
or
cmc
mov
and
xchg
xor
mov
dec
pop
fsubs
dec
dec
std
mov
sbb
push
mov
leave
sbbb
in
rorb
cmpsb
sub
into
pop
mov
mov
loopne
sarb
adc
adc
mov
jae
int
add
cld
icebp
pop
fwait
test
outsb
pop
andb
ret
mov
mov
mov
push
sub
jmp
cli
jbe
addr16
sahf
sbb
xchg
pop
mov
enter
js
std
loopne
leave
pop
mov
sbb
dec
mov
stos
mov
mov
xchg
push
jge
push
std
cwtl
cmp
pushf
nop
movsl
das
mov
adc
jns
or
test
mov
push
dec
pop
jge
loop
dec
inc
loope
xor
fneni(8087
and
xchg
lods
addl
jae
test
lock
mov
inc
pop
test
adc
adc
das
jo
jo
push
popa
adc
inc
jmp
nop
cmpsb
fs
lahf
xchg
sbb
bswap
dec
sbb
inc
mov
pushf
lods
jo,pt
aam
and
aaa
sub
xchg
outsl
fsubs
lahf
inc
dec
push
adc
lahf
lcall
pop
loopne
mov
mov
andl
pop
dec
sbb
inc
pop
sbbl
dec
xchg
pop
fcoms
cmp
in
into
mov
popf
mov
sarl
lcall
sub
and
xor
and
fisubl
lahf
ret
mov
popa
push
mov
inc
into
mov
mov
sbb
push
fstpt
pop
aad
lcall
js
bound
int
fisttps
sbb
dec
and
clc
sti
aam
xor
sub
mov
iret
mov
mov
fdivl
pop
and
xchg
mov
and
int3
out
insb
sub
adc
pop
push
lock
cmp
xchg
ds
jne
sub
subl
loope
cli
loop
loope
sbb
mov
aaa
inc
test
gs
xchg
mov
mov
aam
pop
push
dec
inc
jg
push
ds
add
push
dec
pop
pop
push
and
jle
leave
popa
pop
int3
and
jae
imul
out
push
stc
aas
lods
ljmp
std
into
inc
jo
or
pop
data16
pusha
pop
cs
pop
in
in
and
push
sbb
stos
popa
popa
jbe
mov
std
dec
popf
or
dec
push
push
adc
or
out
lret
or
add
add
sahf
outsb
inc
xchg
adc
in
imul
movsb
frstor
loopne
pushl
cmp
packssdw
js
xor
out
jnp
test
mov
int
in
int3
into
enter
pushf
insl
outsb
stc
sahf
scas
mov
test
cmpsb
and
mov
cmp
addl
leave
jg
mov
sbb
push
sbb
pop
inc
sbb
test
int3
mov
or
stos
mov
mov
mov
lods
dec
sti
cwtl
pop
xchg
gs
es
rclb
push
js
lcall
mov
mov
idivb
xchg
cltd
test
inc
scas
mov
mov
push
or
inc
dec
add
fcomp
push
fsubrl
rol
jp
testl
clc
inc
stos
fwait
daa
fstp
inc
push
add
pop
pop
mov
test
xor
push
fists
adc
add
or
xchg
lods
outsb
pop
pop
add
std
push
insl
sub
repnz
mov
adc
jne
pop
jge
clc
popf
sbb
rorb
je
movsb
jmp
test
add
mov
add
xor
xchg
gs
sub
mov
in
jno
xchg
int3
jp
mov
dec
movsb
cmpsl
stos
adc
dec
push
inc
scas
mov
push
push
dec
pop
xchg
shlb
pop
in
roll
mov
outsl
xor
out
inc
fsub
iret
push
push
dec
push
and
sbb
inc
push
fcomps
mov
jne
and
push
daa
movsl
vmread
rol
mov
shrl
xchg
inc
cmpsb
adc
rorb
dec
xchg
orb
push
idivb
push
jge
pop
fadds
cmp
adc
and
in
lcall
addl
mov
xchg
test
cwtl
push
lcall
and
cwtl
inc
fsubr
hlt
add
bound
pushf
xchg
pop
push
adc
jg
lret
stc
std
lods
data16
mov
sbb
jle
pusha
fs
jg
gs
jno
pop
xchg
mov
jne
cwtl
xlat
adc
and
xchg
dec
scas
lcall
js
test
insl
sub
add
jns
enter
pop
lret
pop
out
jae
cmp
jmp
mov
fldenv
cmpsb
mov
xchg
sub
add
pop
inc
cmp
test
pushf
aad
test
xchg
cwtl
ljmp
mov
bound
and
ret
lahf
mov
rclb
mov
xchg
pop
sub
and
adc
loope
jae
fisubl
mov
pusha
inc
pop
fcoml
push
popf
sarb
loop
sti
mov
out
mov
xchg
pop
test
das
aas
rcll
or
pop
push
mov
or
mov
mov
lock
sub
test
jnp
cmp
mov
inc
and
pop
aad
int
mov
adc
mov
or
test
jb
mov
jge
pop
cmp
push
sar
xchg
std
push
lret
or
es
idivb
jecxz
jns
cwtl
stos
in
test
mov
cltd
aaa
xor
cltd
pushf
stos
inc
sbb
outsb
je
sbb
adc
inc
jne
mov
div
jge
lcall
out
out
push
pop
or
mov
cltd
outsl
stc
leave
fldl
sbb
sbb
rcll
data16
and
insl
test
dec
push
inc
cmp
icebp
lahf
in
mov
daa
pusha
pop
enter
stos
mov
addr16
out
or
insb
iret
cmp
cltd
add
jge
mov
call
lock
jmp
xchg
daa
out
cmp
in
mov
xchg
xor
lcall
push
int
fisttpl
jl
push
loop
pop
loope
adc
out
das
sbb
sub
mov
push
adc
sbb
cmp
in
xor
fdivr
test
outsl
cmpsb
inc
sahf
test
jg
cmp
xchg
or
xchg
sub
inc
or
or
test
pop
in
and
scas
fdivr
cmpsb
gs
sub
shrl
test
inc
lods
insb
pop
imul
gs
pop
in
cmc
int3
jecxz
jnp
inc
movsl
shlb
ljmp
mov
xchg
mov
mov
jle
stos
and
jns
push
xchg
add
and
fistpl
fs
movsb
push
or
fwait
and
inc
add
nop
out
lds
mov
icebp
stc
out
mov
cwtl
aam
jmp
lcall
mov
nop
rorb
fwait
in
mov
gs
dec
test
jb
les
xchg
test
inc
inc
push
imul
xor
les
dec
xchg
in
jnp
in
inc
push
bound
imull
mov
imul
push
sub
imul
xor
shll
inc
sti
cmp
xchg
imul
adc
jecxz
sbb
push
hlt
loopne
mov
jbe
test
xchg
std
in
sbb
ds
sub
mov
pushl
fisttpll
jo
cmp
lcall
mov
popa
add
int
or
or
les
sbb
mov
xor
mov
add
loop
push
lcall
and
mov
test
add
mov
sub
pop
pop
pop
pop
loopne
test
outsl
test
push
jle
fs
cld
push
dec
adc
mov
add
xor
test
rcr
pop
imul
cmc
out
pop
lock
push
outsl
and
push
and
scas
stos
test
insb
ljmp
inc
dec
or
mov
call
pop
sahf
xchg
js
icebp
testb
xchg
jno
cwtl
pop
pushf
loopne
mov
sub
wrmsr
dec
cmpsb
cmpsb
fstp
push
je
jbe
cmc
sahf
movsl
subl
sbb
push
pop
stc
push
pop
sbb
fs
adc
cmp
in
push
jb
sbb
sbb
ret
insl
or
gs
inc
xor
cli
pop
adc
xchg
rcl
ficoml
pop
pushf
call
fst
xchg
mov
push
out
mov
out
pop
call
jle
adc
movsb
outsb
imul
add
outsl
test
push
in
mov
mov
jno
int
mov
jns
rolb
and
or
adc
sub
popf
fcomps
inc
cmp
call
test
loop
in
mov
pop
xor
jae
pusha
lcall
mov
pop
inc
pop
stos
jge
shrl
inc
mov
aad
movsl
int3
adc
gs
jae
sub
jmp
sahf
xor
aas
adcb
sbb
nop
sub
sub
sbb
hlt
mov
scas
ja
ss
jmp
sbbl
inc
dec
bound
mov
dec
into
adc
push
sub
enter
sarl
call
jns
daa
pop
addl
jg
repnz
int3
jecxz
idivb
xlat
adc
jecxz
mov
inc
push
mov
mov
lods
sub
cmp
mov
lcall
pop
pop
cli
bound
repnz
cmp
mov
mov
stos
adc
pop
dec
out
sub
ficoml
call
int
inc
push
jl
pop
and
mov
sbb
mov
js
cmpsb
pushf
in
cmp
jo
mov
xor
lea
ds
xchg
gs
jecxz
clc
stos
jno
rcrb
mov
arpl
inc
shll
inc
fwait
pop
test
in
xor
cmpsl
push
dec
movsl
test
mov
cmp
data16
clc
push
push
fsubrl
xchg
push
bswap
and
xchg
imul
cld
rorb
inc
and
ret
pop
mov
mov
xchg
jp
mov
mov
jb
adc
cmp
jge
mov
ds
enter
imul
into
insb
pusha
mov
mov
pop
xchg
test
mov
gs
push
mov
test
xchg
pop
cmpsb
std
mov
jle
scas
test
sarl
int
outsb
pop
pop
popf
fwait
inc
jle
mov
inc
popf
dec
sbb
mov
fwait
push
shrb
fsts
fnstsw
ret
lahf
mov
and
adcb
stc
fldcw
test
out
insl
aas
shlb
enter
dec
mov
out
push
roll
movsl
push
call
cmpsb
outsb
lcall
xchg
jl
mov
movsl
scas
add
xor
and
pusha
cmp
push
pop
push
mov
mov
ja
inc
shlb
or
repnz
nop
jnp
int3
mov
push
int
arpl
inc
xchg
std
subl
into
sub
or
daa
mov
and
jo
inc
iret
mov
ds
sahf
dec
mov
insb
ret
sti
xchg
andl
sahf
xchg
scas
mov
push
mov
mov
daa
inc
loop
mov
nop
leave
push
pusha
dec
lcall
int3
fs
into
push
jo
std
leave
inc
or
sbb
dec
lds
pop
inc
mov
inc
js
dec
cmpsl
sbb
xchg
mov
popa
sub
movsb
andl
or
mov
dec
rclb
inc
js
scas
jmp
or
test
push
pop
mov
cmpsb
xor
bound
subl
pop
push
stos
or
int3
ret
pop
gs
out
mov
int3
sbb
push
fisttpl
imul
add
jl
pop
sbb
lcall
cli
in
clc
lock
xlat
add
mov
popf
loopne
push
fiadds
popf
mov
lods
push
xor
push
fcoml
mov
and
loope
push
loop
mov
mov
push
sbbl
push
scas
cs
jp
insb
loop
subl
mov
cs
mov
jbe
push
sbb
aam
mov
test
lcall
xchg
pop
sbb
ja
pop
push
xchg
adc
aaa
stc
in
xor
inc
or
icebp
out
lods
mov
push
jl
ret
jo,pt
fsubrl
stos
fs
cwtl
cltd
pop
call
jg
lock
cmp
jns
dec
jb
jns
push
lds
fldt
mov
dec
loopne
popa
sub
mov
movsl
lahf
insb
xor
cld
scas
imul
movaps
mov
int3
insb
add
fiaddl
sub
cmp
push
push
shlb
imul
lods
dec
data16
inc
insb
mov
jg
in
jge
call
push
insb
imul
adc
fmuls
aam
xchg
push
lcall
cmp
fiaddl
sub
pop
xor
pop
mov
bound
movsb
cmp
outsb
loope
pop
lods
ss
test
dec
popa
mov
sarb
and
cmpsb
mov
imul
jnp
lahf
xchg
mov
dec
call
mov
enter
data16
in
and
sbb
or
add
ret
cwtl
mov
popf
out
call
mov
cltd
xchg
orl
fbld
loopne
ds
push
or
xchg
outsl
mov
ret
mov
xor
xlat
jmp
sub
sbbb
sub
xchg
sbb
pop
leave
jmp
je
pop
insl
push
xchg
push
lds
in
mov
hlt
cmp
push
sbb
push
in
xor
lock
ret
add
pop
xor
pop
cmpsb
xchg
adc
adc
pop
sahf
cwtl
lods
pop
or
divb
jnp
pop
loope
pushf
sub
xchg
or
jae
push
loope
add
jl
cwtl
divl
and
cmp
add
push
xor
insb
stc
cmp
data16
jmp
xchg
xor
bound
fidivrs
fistpl
inc
mov
mov
enter
xor
push
adc
pop
and
xchg
jl
pop
nop
or
and
movsl
sub
inc
int
fsubp
lret
insl
cmp
loope
mov
sti
shrl
mov
add
std
pop
out
mov
mov
adc
xchg
jnp
in
and
test
or
lahf
stos
scas
imul
addr16
mov
xchg
mov
fistpll
xor
mov
test
cwtl
cmp
cli
mov
out
xor
test
scas
das
dec
push
std
and
inc
mov
push
aad
sbb
mov
pop
mov
cwtl
xor
stc
ret
repnz
jge
pusha
inc
inc
sbb
je
xor
inc
repnz
mov
in
push
test
aad
popa
inc
or
pop
mov
mov
adc
and
ljmp
push
mov
sbb
pop
mov
call
cltd
and
popa
lahf
fistpl
pusha
sbb
mov
push
inc
jecxz
movsl
cmpb
fsubrs
xchg
scas
mov
lcall
test
sbb
pop
pop
xchg
iret
fstpl
or
in
pop
arpl
pop
jmp
jge
cmp
std
xchg
ljmp
pusha
adc
jns
mov
ljmp
sub
mulb
out
clc
dec
icebp
test
jae
js
in
insb
pop
fdivrp
in
movsb
lea
add
mov
push
fcmovnbe
retw
sub
mov
rcll
js
add
imul
jge
push
dec
mov
aaa
mov
lcall
into
sub
shrb
pop
mov
push
ficompl
inc
and
push
addr16
pop
mov
push
mov
dec
add
mov
xchg
ficoms
insb
sahf
cmp
or
xor
cmp
mov
sahf
popa
outsl
xor
popa
scas
stos
push
and
sub
and
fstps
stc
sbbb
cld
push
xchg
clc
adc
cli
jl
fdivrl
jbe
mov
mov
add
in
xchg
push
sbb
pusha
out
insl
nop
jp
mov
sbb
shl
scas
jb
dec
fiadds
mov
inc
push
pusha
lock
mov
push
enter
ljmp
movsb
add
adc
fldl
stos
dec
insb
cltd
sub
bound
dec
nop
and
les
push
cmp
inc
fistpll
cmp
adc
cmp
fisubrl
jl
xchg
sub
pop
sahf
outsb
inc
in
mov
imul
outsb
xor
push
std
pop
clc
js
popf
mov
fisubrs
jecxz
push
stos
mov
sub
pop
jns
inc
xchg
push
int3
and
cmpsb
in
cmp
pop
mov
inc
push
cmp
xchg
sbb
les
jge
jno
fisubrs
jle
addl
sub
push
pop
ficompl
pusha
sub
outsb
les
mov
mov
jne
sbbb
cld
fs
inc
mov
out
or
mov
mov
pusha
cmpsb
lods
xchg
aam
add
outsb
imul
mov
bound
adc
add
scas
mov
loope
ret
or
aad
sub
das
add
arpl
dec
xor
push
test
test
dec
insl
out
nop
cltd
inc
lret
and
jno
fimuls
ret
das
jmp
mov
stos
and
xor
inc
outsb
sahf
cli
dec
sub
mov
adc
cmp
lea
scas
jp
push
test
dec
jmp
fildll
sti
popa
mov
repnz
push
cmp
movsb
jmp
loope
lods
test
sub
addl
inc
inc
mov
sbb
dec
jge
add
ljmp
scas
push
sbb
add
sbb
sub
inc
mov
sbb
pop
fcos
xchg
mov
sbb
in
movsb
mov
test
mov
lods
sub
cmpsb
mov
popa
inc
in
fstp
cmpsb
ret
insl
xor
loop
cltd
pusha
adc
pop
dec
sti
cwtl
pavgb
pop
cmpsl
xor
ljmp
lds
pop
xor
adc
sub
and
addb
ljmp
pop
jge
pop
sbb
pusha
arpl
sub
popa
test
xchg
and
out
cmp
test
jo
cmc
cli
vcvtdq2ps
push
ds
lea
loope
and
pushf
daa
pop
mov
sub
pushf
or
clc
data16
movsb
out
into
mov
xchg
push
popa
jecxz
repnz
sub
push
cmp
jle
pop
cmpsb
or
inc
push
mov
xchg
inc
lcall
cmp
xchg
stos
popa
insb
and
jns
int3
movsl
mov
iret
stos
fildll
shl
bound
cmp
mov
adc
pushf
jp
inc
push
sbb
mov
ret
add
push
cmp
or
dec
mov
sahf
clc
sbb
jle
jnp
push
sarb
mov
outsb
js
jge
xlat
jb
int
jne
sbb
into
xchg
and
mov
dec
dec
fisttpll
std
roll
xor
jne
in
push
inc
ret
sub
outsb
and
insl
mov
or
lret
add
mov
fistl
loope
pop
inc
pusha
push
pop
scas
mov
sbb
insb
sub
js
popfw
imul
add
cmpsl
scas
push
nop
xlat
push
sahf
and
jno
mov
fisubl
pop
insb
and
jecxz
jo
adcb
arpl
push
divb
jp
dec
cwtl
sub
cmpsl
popa
ficomps
loop
cmp
push
call
mov
adc
and
fwait
or
ficoms
mov
jge
xlat
lcall
mov
mov
dec
push
mov
mov
pop
das
xorb
pop
iret
roll
jbe
test
pop
sahf
xchg
addr16
cli
stos
push
sarl
or
imul
in
xor
std
into
jge
pop
sub
pop
mov
add
xor
scas
jae
sub
xorl
inc
ja
popf
xchg
pop
addl
push
es
out
adcb
xor
xchg
mov
xor
arpl
pop
cmpb
jmp
xor
pop
pop
or
push
sbbl
fiadds
ja
imul
push
add
pop
fs
pop
loope
int3
push
mov
inc
arpl
ror
jmp
sbbb
lock
jae
jp
out
mov
mov
pushf
xlat
pusha
scas
test
mov
pop
insb
inc
cwtl
ljmp
xchg
push
pop
push
pop
inc
xor
insb
jg
scas
addb
push
stos
inc
jb
test
lcall
fwait
jl
fs
mov
pop
pop
rclb
test
pop
mov
psllq
mov
jle
inc
push
xor
mov
hlt
and
mov
xchg
mov
dec
popf
fsubr
and
pushl
test
xor
xchg
test
lret
mov
out
clc
xrelease
ljmp
daa
stc
xchg
popa
mov
jns
mov
or
mov
imul
add
test
test
out
push
rol
in
mov
mov
jmp
daa
add
sbb
repnz
pusha
ss
int
sbb
movsb
mov
pusha
sub
lcall
push
pop
mov
das
xchg
andl
aas
sahf
mov
pop
xor
xchg
sub
adc
xchg
loop
lock
add
add
dec
sbb
aad
flds
or
inc
sarb
scas
push
cmpsb
xor
xchg
test
pop
push
in
mov
loope
fimull
pusha
jno
jns
pop
lret
in
in
pop
jmp
xchg
adc
xchg
sahf
test
lcall
mov
sub
xor
das
test
mov
lock
lret
enter
sbb
pop
pop
and
aas
int
and
sub
xchg
addr16
push
and
adc
jecxz
mov
cld
or
or
addr16
out
mov
pop
add
movsl
add
fwait
mov
sbb
push
inc
xlat
jp
test
and
add
mov
sub
push
inc
insl
cwtl
add
cli
sbb
pop
popa
pop
subb
add
jb
ja
mov
addr16
jo
lahf
js
push
push
outsb
pop
fs
cwtl
pusha
mov
mov
insb
sub
popa
pop
pop
je
idivl
pop
cs
add
das
stos
dec
lahf
cmp
cltd
int
stos
imul
lcall
stos
scas
sub
mov
test
test
mov
jns
inc
test
sbbb
inc
cwtl
jge
xor
aam
call
dec
in
imul
xchg
adc
cmp
pop
dec
dec
jg
xchg
xchg
xchg
dec
out
stos
cmp
push
mov
push
adc
cmpsl
xlat
inc
scas
sub
push
loope
push
ds
fcompl
orb
inc
xchg
sbb
inc
sub
mov
js
fadds
enter
pop
jns
pusha
shlb
stos
loopne
movsb
addb
clc
inc
mov
lods
fmul
inc
out
mov
testb
mov
sub
inc
mov
adc
xor
outsb
aaa
pop
xchg
cmp
push
rorl
pop
rorb
call
js
rcrl
adc
pop
xchg
loopne
hlt
mov
mov
inc
jb
dec
xor
sahf
test
mov
imul
adc
imul
pop
je
pop
add
inc
sbb
sbb
mov
lret
fsubs
dec
xchg
jp
inc
sub
fists
fstps
add
push
aad
and
xchg
push
shlb
testl
mov
lahf
sub
sti
sub
loope
xor
mov
mov
sbb
ret
mov
fs
sub
lea
fidivrs
mov
mov
insb
jmp
jmp
xor
pop
xchg
jp
adc
add
bnd
or
int
or
mov
dec
jl
scas
mov
jno
shlb
fdiv
mov
cs
scas
push
into
rorl
xchg
mov
leave
dec
dec
mov
mov
pusha
xchg
jg
out
pop
xchg
jecxz
imull
sub
and
jecxz
test
ljmp
loop
mov
popa
arpl
cmp
testl
aaa
sbb
aad
push
mov
xlat
imul
push
cli
mov
out
or
or
popa
inc
cmpsl
out
test
jmp
and
shll
xor
xorb
cld
push
in
jecxz
js
pushf
orb
lods
sub
mov
adc
or
mov
in
pop
into
out
ja
in
int3
aas
call
cli
push
jp
int
push
xchg
stos
loop
test
popa
push
xorb
mov
dec
fistpl
lods
in
sub
push
mul
andl
lcall
xchg
addr16
pop
aad
fcmovnu
or
fisttpll
cwtl
std
imul
push
fwait
mov
ret
push
lods
or
adc
pop
fs
std
loope
cmc
push
sbb
ds
cmc
pushf
push
mov
out
mov
cli
inc
popa
adc
add
clc
movsb
mov
adcl
in
subl
xchg
mov
shlb
leave
in
fiaddl
or
scas
mov
outsb
scas
or
sbb
adc
mov
jmp
or
and
sbb
cmpb
inc
dec
loope
fdivrl
xor
jnp
stc
sbb
adc
pop
cltd
xchg
sahf
je
mov
adc
push
rorl
mov
test
cmpsb
push
stos
adc
loop
xor
jl
movsl
fs
mov
aaa
pop
scas
in
fs
push
jbe
hlt
fsts
arpl
stos
mov
cli
mov
push
call
fs
mov
insb
push
pop
fistpl
lods
xchg
xor
add
shlb
nop
jmp
xor
mov
je
scas
inc
js
pusha
cli
insl
cltd
inc
scas
xchg
cmpsb
cltd
stos
mov
cmpsl
dec
loope
mov
dec
rolb
test
pop
movsl
lock
ljmp
fs
je
hlt
mov
xchg
and
push
jns
inc
pop
cmp
test
mov
sbb
jnp
pop
mov
sub
xor
pop
mov
jmp
mov
dec
sbb
mov
xlat
cs
dec
mov
mov
and
mov
cmp
clc
sbb
or
ficomps
les
xor
fsts
mov
and
and
in
cmpsb
push
pop
in
pop
fstpt
pop
dec
sbb
outsb
xchg
dec
int3
mov
stos
pop
fstpt
js
sbb
int3
jle
jns
cmp
stos
addr16
push
adc
push
cltd
add
pop
ret
mov
or
mov
pop
xchg
mov
imul
dec
arpl
cli
inc
mov
popf
fsts
hlt
cmpb
cmp
lods
rclb
rcll
int
test
in
test
loop
lahf
jp
push
arpl
xchg
jecxz
jo
mov
pusha
xor
into
out
or
mov
int
xor
jns
sbb
xchg
addb
into
mov
xor
inc
int
dec
inc
xor
movsb
rcr
sbb
sbb
xor
add
push
push
jbe
pusha
ret
mov
std
and
insb
je
nop
mov
popa
sbb
add
sbbb
mov
cltd
sbb
cmpsb
push
popl
test
mov
je
pusha
add
sbbl
jb
test
xchg
sbb
xor
aam
jmp
push
enter
push
insb
addb
stos
lds
pop
mov
xor
mov
loopne
movsl
test
nop
mov
out
aad
jnp
add
lds
cmpsb
pop
sbb
insb
test
aad
cld
insb
xchg
or
fsubrs
outsl
cmpsb
loopne
dec
insb
sbbl
loop
fistpl
inc
xchg
mov
and
sbb
sahf
xchg
and
je
out
aam
outsb
mov
and
outsl
insb
and
insb
lds
icebp
aam
adc
popa
jno
int3
pop
and
adc
mov
inc
in
xor
sbb
popa
jb
into
loope
mov
mov
add
mov
je
and
jae
fcoms
je
out
xchg
jp
pop
loope
jbe
jnp
jnp
fadds
sub
movsb
add
jmp
mov
scas
mov
fsub
sub
pop
stc
mov
dec
jns
cwtl
rcll
cmp
push
imul
insb
imul
imul
pusha
cld
dec
popa
jg
cmp
adcb
insb
test
push
fidivl
in
xor
mov
lock
sbb
xorl
out
dec
insl
test
call
inc
pop
xor
push
fs
xchg
cmpsb
mov
fisttpll
in
mov
les
test
cs
jl
push
cltd
mov
int
jnp
insl
mov
outsb
jmp
jmp
ljmp
cmc
add
leave
jg
ljmp
mov
inc
xchg
sub
push
or
add
mov
mov
push
jle
mov
xchg
push
push
mov
cld
arpl
push
jmp
xor
pop
dec
cmpsl
loop
fwait
adc
subl
pop
sbb
fcompl
inc
je
add
addb
loope
test
lret
out
mov
xchg
add
mov
jmp
dec
ret
outsb
int
mov
test
push
jge
mov
fimuls
add
push
push
push
icebp
push
outsb
mov
mov
mov
push
and
scas
push
cwtl
pop
jo
scas
inc
adcb
lahf
lock
pop
pop
adc
mov
pop
insb
fs
lahf
stos
loope
jge
sbb
hlt
stos
and
mov
mov
pusha
std
jmp
cwtl
cli
je
popa
outsb
enter
jl
fisubs
cmp
push
test
je
inc
push
out
enter
call
clc
jl
and
jo
icebp
xor
fdiv
lcall
ljmp
or
cmpsl
int3
icebp
mov
push
adcl
xchg
jo
xorb
test
adc
ficoml
xchg
cltd
add
popa
xor
jns
or
loope
imul
popa
push
cmpl
push
cwtl
loope
push
jl
mov
stos
pop
push
and
daa
lcall
fisttpll
popa
bound
fs
data16
sahf
xchg
jecxz
leave
pop
mov
pop
mov
xchg
xlat
mov
int3
adcb
fimuls
es
or
mov
push
cmp
in
inc
leave
add
inc
or
outsb
pop
or
jo
loopne
shlb
xchg
jbe
les
fisubs
xchg
jl
orb
xchg
test
nop
pop
add
fists
scas
sbb
ret
fisttpll
push
ljmp
insb
adc
cmpsb
call
lcall
pop
cmpsb
pop
and
arpl
jg
sub
leave
dec
outsl
bound
pop
push
enter
mov
outsb
fld
xchg
cmpsl
jo
xchg
arpl
outsl
ljmp
cmp
xor
stos
push
js
jmp
sub
sbb
push
pusha
fcompl
mov
into
data16
pop
pop
js
xlat
xchg
cwtl
arpl
push
in
insb
mov
mov
cli
xor
in
jl
jg
sub
pop
fildl
enter
mov
jecxz
lret
loope
mov
out
mov
or
pop
aas
mov
jno
xor
add
fidivs
cmp
push
sbb
stc
mov
shrb
roll
dec
add
das
sbb
lods
je
lods
addl
out
in
je
insb
test
or
mov
sar
cmp
lret
leave
mov
mov
and
insb
sub
jo
mov
aad
cmpsb
test
xor
insb
scas
das
stc
bound
insb
jl
jne
loop
fwait
xchg
jge
adcb
lea
pop
movsl
push
adc
and
fdivrs
xchg
sub
mov
int
xor
cmp
xchg
jl
push
dec
repnz
sbb
xlat
mov
addl
sahf
imul
xchg
pop
out
scas
xchg
xor
std
cmp
xchg
outsl
int3
mov
cltd
sbbl
lcall
popf
cmp
xchg
jl
fldcw
mov
inc
aam
jg
mov
and
lahf
adc
icebp
push
adc
in
popf
push
sarl
call
mov
and
cmp
loope
in
rcr
imul
jecxz
pop
cwtl
mov
loope
shll
loope
adc
arpl
sbb
insb
push
out
sub
mov
cmp
fwait
out
adc
or
sbb
pop
test
cmpsl
lods
mov
pop
mov
push
inc
or
pusha
pop
lcall
pop
inc
sahf
xor
fiaddl
and
push
mov
lea
jnp
and
shrl
pop
pop
rolb
loop
rcrb
mov
cmp
out
js
pop
scas
int3
xor
cwtl
lret
jge
xchg
out
jg
sub
push
pop
loopne
xchg
jnp
es
dec
test
cmp
pop
cmc
fs
insl
je
addr16
pushf
dec
loope
push
insb
out
pusha
mov
push
fwait
std
pop
leave
enter
sub
or
nop
and
insb
or
xor
cmpsb
xchg
mov
mov
rcr
jnp
lcall
movsl
add
popf
lcall
out
mov
xor
mov
popf
cmp
subb
nop
mov
mov
sbb
lcall
test
lahf
cwtl
fisttpll
out
pop
fildll
loopne
rorb
stc
insb
pop
fistl
sbb
fstpt
outsb
jmp
fcoml
int
inc
cwtl
fcoml
or
push
out
xlat
jae
jbe
fs
iret
jb
std
pop
fucom
sbb
mov
inc
cmpsl
and
je
mov
loop
popa
mov
popf
scas
test
je
xlat
jge
js
sub
loope
dec
int3
not
inc
mov
mov
das
jb
sbb
inc
xchg
test
or
shll
inc
fbstp
popa
lods
push
stc
xchg
loope
jne
inc
cltd
stc
iret
mov
jp
fs
push
sbb
pop
dec
std
ljmp
push
sar
and
sbb
push
mov
test
jmp
lods
and
rolb
cwtl
aad
fsts
insl
test
divl
pop
nop
call
xchg
sahf
xchg
jno
repnz
and
iret
cwtl
xor
xor
lcall
push
stos
in
mov
sbb
push
sbb
sbb
push
mov
subb
pusha
in
inc
sbb
push
cmp
out
in
or
arpl
int
push
push
je
jge
jae
insb
fcmovu
icebp
jo
cmp
in
add
mov
push
mov
fwait
pop
sub
push
pop
push
cmp
fcomps
insl
xor
jp
in
shlb
sbb
sub
push
lea
pop
mov
addr16
and
pop
nop
rol
pop
aam
adc
shll
subl
jns
int
cmc
push
xchg
popa
inc
cltd
push
xor
cmpsl
aaa
dec
dec
out
jp
movb
aaa
sub
mov
je
dec
arpl
insl
dec
jb
popf
lret
add
inc
outsl
arpl
fwait
add
mov
and
or
pop
fwait
cmpsl
loope
insb
xchg
stos
and
shll
fdivrs
fucomp
pop
loopne
sub
loopne
cmpsl
fwait
and
andb
push
and
mov
jns
inc
jmp
imul
aam
rcr
popf
jg
xlat
movsb
inc
push
inc
push
rcl
pop
xor
ja
cwtl
mov
loopne
push
test
mov
or
or
stos
xor
arpl
cmpsb
insb
test
cmp
push
int3
mov
mov
dec
cmp
loope
push
movsl
fs
jb
adc
xchg
loope
popa
mov
jge
cmc
filds
sar
scas
inc
xor
test
lea
push
xchg
pop
xchg
dec
int
scas
push
sub
or
arpl
sbbb
fsubl
jg
js
push
jo
fdivl
js
cwtl
scas
jl
mov
cmp
pop
js
loope
test
push
xchg
mov
mov
add
jns
xchg
pushf
test
rorb
sub
sti
push
push
add
mov
je
fs
test
test
lret
outsb
test
cmpsb
fwait
sub
xchg
pop
jge
int
into
fs
mov
insb
xchg
cmp
cmpsl
pusha
jl
xor
mov
sub
cmp
sbb
lods
inc
gs
sbb
into
add
dec
mov
loope
xchg
dec
cltd
cmpb
imul
xor
cwtl
adc
shlb
mov
or
movsb
ja
inc
test
adc
jmp
push
or
outsl
mov
shrl
imul
pop
xchg
int3
into
push
fdivrs
test
mov
loop
mov
out
push
cwtl
sub
mov
jnp
xor
cmp
mov
into
mov
outsb
sub
ds
in
inc
and
loope
pusha
int
inc
in
jmp
sub
push
sbb
pop
pop
push
sbb
sbb
psadbw
and
mov
sub
fcompl
sahf
mov
cwtl
add
adcl
loop
pop
popa
in
fs
mov
cwtl
and
jg
pop
addl
in
sbb
cwtl
push
mov
push
mov
int3
js
push
inc
in
mov
dec
loope
push
push
in
shrl
mov
add
jl
fdivrl
dec
mov
std
push
push
out
jmp
mov
jb
into
mov
mov
or
pop
into
fwait
jecxz
pushf
lock
lret
cwtl
mov
and
mov
push
push
jae
push
into
insl
loopne
cs
adc
loope
jne
sbb
mov
ror
and
mov
sbb
pop
std
sti
scas
sahf
fwait
sbb
mov
cmpsl
insb
sbb
mov
jns
sub
js
sarl
or
in
push
pop
inc
fmull
adc
mov
ret
sbb
imul
aaa
jne
shll
fs
js
fcompl
cmpsb
mov
and
jmp
lods
call
cmpsl
mov
pusha
dec
movsl
fistpl
dec
out
call
jge
mov
leave
imul
sub
pop
fdiv
lea
movsb
pushf
push
imul
orl
pop
dec
popf
adc
pop
scas
scas
stos
inc
mov
aam
enter
repnz
inc
data16
dec
push
mov
add
sar
sbb
dec
pusha
int3
ja
push
or
mov
cwtl
mov
push
cmpsb
dec
loope
push
out
adc
cmpsb
cmp
stos
adc
insl
push
fs
mov
test
inc
and
and
imul
movsb
rcrb
cmpsb
insb
fs
jo
je
jl
test
test
push
imul
sahf
inc
inc
push
rorb
mov
lds
gs
pop
ljmp
scas
frstor
cwtl
popf
push
pop
sub
subb
bound
loope
ret
push
inc
test
xchg
mov
sub
pop
shll
into
movsl
js
and
outsl
mov
jge
adc
mov
addl
jl
pop
xchg
jo
pop
loope
faddl
rcrl
add
ret
scas
cli
fsub
je
push
jle
test
test
xor
insb
sbb
cmp
cli
or
sbb
mov
out
pusha
or
shlb
hlt
insb
outsb
and
mov
fs
lahf
push
or
in
icebp
sar
out
pop
mov
aam
int
stos
or
addl
in
add
mov
stc
xchg
jb
or
mov
dec
and
std
or
mov
iret
ss
push
dec
lds
je
je
daa
subl
scas
repz
inc
pop
or
rcl
into
sbb
and
lea
mov
and
test
push
scas
mov
pop
aam
stos
in
mov
sub
push
mov
mov
lods
inc
inc
ja
mov
pop
sti
add
pop
fisubrl
insl
cmp
addb
xor
je
out
or
push
lret
stos
inc
push
dec
mov
lcall
mov
pusha
inc
in
out
iret
mov
bound
sahf
xor
mov
xor
fcompl
decb
push
das
jae
inc
loope
fwait
add
cld
ljmp
pop
daa
pop
and
loope
xchg
js
inc
or
mov
adc
dec
jmp
sahf
push
fs
cwtl
mov
popa
jb
mov
scas
pop
frstor
pop
cwtl
scas
nop
pusha
sub
int
ds
jp
xchg
xor
mov
nop
jns
add
push
icebp
inc
dec
in
mov
add
inc
xor
jmp
xchg
sub
jo
xor
mov
jmp
data16
xchg
clc
fwait
inc
jge
cmp
ljmp
cmpsb
shll
cmp
jl
jmp
push
xor
dec
out
jl
cmp
sbb
inc
test
sbb
pop
xchg
push
test
jl
ret
cmp
mov
cwtl
push
mov
pop
inc
ret
jb
pop
xorb
dec
jnp
mov
outsb
fadds
mov
pop
ja
insb
pop
cld
in
fs
or
test
bound
insb
sbb
iret
jg
dec
ficoml
pop
mov
jmp
enter
cmp
push
inc
cli
pop
inc
in
mov
jne
jno
arpl
mov
lret
pop
mov
adc
outsb
inc
ljmp
pusha
mov
scas
sub
scas
loope
sub
loope
mov
mov
stos
js
lock
dec
push
jle
aad
je
dec
jae
fs
and
sub
xchg
aaa
xlat
cmpsb
jae
imulb
xor
cmp
pop
pop
sbb
cltd
loope
in
js
out
lods
or
add
lea
lcall
scas
cmp
fsubrl
outsl
xchg
in
lods
pop
mov
int
xchg
andb
xchg
stos
sbbl
sub
mov
int3
push
mov
mov
jbe
cmp
dec
ficompl
cmp
imul
pop
out
loope
aam
lcall
mov
int
pop
push
cld
insl
pop
aam
xchg
pop
andb
into
loope
jae
xor
push
mov
in
pop
jnp
std
xlat
mov
lcall
test
dec
xchg
shll
adc
mov
xchg
lcall
sbbb
outsb
shlb
movsl
jecxz
test
into
sarl
and
imul
test
pop
cltd
mov
or
jb
ljmp
adc
xchg
test
and
int3
adcb
mov
mov
mov
or
jg
mov
mov
sbb
jge
test
push
xchg
nop
inc
push
and
push
and
mov
xchg
shll
mov
or
pop
ljmp
arpl
ficompl
int
sbb
mov
les
int3
leave
out
xchg
out
cmp
fdivr
jge
push
loopne
mov
xor
mov
dec
fidivl
mov
pop
test
push
lock
fiaddl
mov
in
cmp
je
hlt
sbb
frstor
jo
lcall
in
bound
popf
test
sub
mull
sub
sahf
in
pop
xchg
add
push
enter
push
lds
cmp
outsl
cmp
inc
cld
jl
inc
pop
and
jbe
imul
loopne
push
mov
jo
add
pushf
pop
daa
int
scas
jp
stos
pop
lret
test
jo
scas
test
daa
int3
test
lods
insb
sti
int3
fwait
into
repnz
mov
pop
cwtl
pop
loope
xor
mov
test
and
sahf
xor
shlb
xorb
sbb
dec
insb
mov
cwtl
dec
pusha
es
mov
sbb
pop
fcoml
jmp
cmpsl
std
and
mov
call
in
sbb
int3
bound
fcomps
cltd
lcall
mov
push
mov
adc
jp
subb
ljmp
loopne
test
psllw
ljmp
push
xchg
sbb
and
and
int3
mov
inc
mov
jp
jl
push
or
insl
add
loope
or
mov
adc
out
inc
cmp
lds
pop
cmpsl
mov
inc
mov
xlat
adc
sbb
imul
in
aad
popa
mov
pop
sti
mov
shlb
inc
sbb
sub
pusha
les
jns
sbb
lahf
cwtl
jle
ja
std
cltd
insb
inc
jl
fidivrs
test
adcb
and
ret
test
mov
sub
or
fsub
negb
add
stc
pusha
lea
jns
xor
sbb
cwtl
in
cmp
movsb
mov
sbb
sbb
shll
add
loope,pn
xchg
dec
mov
sub
fdivrs
jmp
rorb
lahf
mov
pop
out
inc
push
cli
in
and
arpl
dec
jge
add
pop
xchg
adc
out
sbb
adc
out
imulb
push
stc
and
push
arpl
jno
sbb
xor
mov
jb
ret
je
mov
subl
cld
test
mov
je
out
sbb
sbb
aad
je
movsb
rclb
or
adc
js
or
mov
jns
mov
sarb
fmuls
mov
stc
subl
lcall
push
stos
pusha
cmp
js
mov
inc
aam
cmpsl
cld
pop
sbb
mov
jo
stc
rcll
sbb
jno
push
nop
testl
out
xchg
arpl
bound
inc
fs
call
cli
out
outsl
mov
sbb
in
lock
cmp
push
xor
sbb
jp
imul
lods
and
loopne
insb
inc
test
push
xor
insb
icebp
pop
imul
add
or
test
fadds
mov
std
and
inc
mov
in
mov
clc
sarl
mov
test
outsb
mov
xor
loope
movsl
pop
pushf
pop
movsb
pop
mov
mov
popa
jmp
in
js
jmp
cmp
and
cmp
sbb
addr16
pop
test
test
rcrl
push
fwait
xchg
or
mov
in
pop
jae
imul
lea
add
cmp
xchg
pop
jb
in
pop
cmpsb
cmc
pop
sbb
mov
mov
xor
xchg
test
loop
in
mov
jmp
movd
jge
cmpsb
outsb
jo
dec
popa
xchg
les
sub
pop
lahf
inc
dec
in
sub
jae
mov
out
xchg
out
mov
jbe
mov
loopne
orb
inc
add
imul
pop
jb
and
fstl
xchg
pop
xor
mov
adc
mov
mov
shl
loope
insb
push
fsubl
inc
pushf
es
adc
xchg
js
aam
xor
inc
cli
pinsrw
mov
cwtl
sub
in
aad
in
pusha
test
div
aam
js
mov
test
out
stos
lods
xlat
lods
xchg
nop
lret
xor
mov
dec
test
lret
sbb
int
cmpsl
push
outsb
or
sub
jg
sbb
stos
test
xchg
inc
mov
leave
xchg
inc
jge
pushf
inc
int3
lods
shrb
stos
aad
cmpsb
fldl
imul
lock
jge
cwtl
cli
out
nop
jp
test
imul
mov
fimull
int
pop
xor
xchg
bound
jno
xor
fwait
mov
xchg
mov
int
outsl
scas
inc
idivb
addr16
or
cwtl
lods
and
test
fmull
mov
shll
sub
fcmove
mov
jecxz
cmp
ret
stos
mov
mov
or
shrb
js
insl
inc
jl
fldcw
sub
repnz
lcall
xchg
scas
lret
mov
xchg
mov
jge
xlat
add
cmovle
mov
in
pushf
jge
lcall
add
data16
jecxz
subl
or
mov
sbb
push
jl
jo
mov
imul
xchg
les
mov
mov
mov
adc
pinsrw
int
out
frstor
and
push
loop
je
mov
mov
pushf
test
xchg
and
cmp
inc
ja
lret
scas
shll
push
mov
lcall
mov
rclb
pop
das
imul
push
in
data16
iret
push
jp
push
inc
int3
outsl
mov
call
ffree
outsb
pop
add
pop
dec
fs
dec
leave
cmpsl
push
add
sbb
adc
add
js
aam
push
leave
mov
stos
cld
popa
loopne
xchg
insb
arpl
pop
mov
push
xchg
add
dec
subb
inc
test
jb
jge
dec
add
mov
test
arpl
ret
fwait
pusha
mov
enter
sbb
scas
in
jae
mov
flds
mov
sbb
pop
sbb
and
pop
addr16
mov
sub
push
xor
adc
and
sarl
inc
cli
mulb
lods
insb
push
imul
cwtl
mov
test
in
mov
cmpl
enter
jl
or
cmp
push
cmpsl
decb
jmp
pop
lds
adc
lahf
xchg
mov
or
push
or
test
fadds
mov
add
adc
and
imul
fstps
and
xchg
push
call
xchg
pop
out
sub
test
jl
xor
cmpsl
push
add
push
mov
lods
inc
jns
scas
inc
fcomps
push
fsubrs
fs
add
fdivp
push
add
insl
or
call
outsl
int
bound
fsubl
stos
xlat
mov
stos
lods
popa
pop
nop
enter
into
fisubrl
in
fiaddl
xchg
xlat
sbb
xchg
popf
mov
iret
sbb
and
cmpsb
dec
in
adc
cs
sub
loop
inc
mov
adc
jo
mov
mov
popa
test
jmp
push
mov
dec
add
jp
mov
cmpsb
xchg
fimull
mov
out
mov
loope
inc
faddp
cwtl
lret
popa
mov
mov
adcb
ja
adc
js
out
inc
jp
push
cmpb
cmp
mov
in
stos
add
aam
lea
arpl
dec
cs
xchg
scas
mov
sbbb
sti
test
xchg
movsb
scas
lods
test
push
out
xchg
cwtl
xchg
mov
imul
mov
mov
imul
enter
in
jl
adc
fisttpl
mov
push
mov
dec
add
ljmp
insb
jl
sub
sarb
jno
nop
jg
shrl
faddp
lret
mov
rcr
lahf
arpl
ficomps
in
jne
or
ret
idivl
mov
clc
lock
subb
xchg
sbb
or
nop
sbb
push
in
inc
mov
add
lret
push
test
fildl
stos
cwtl
xlat
sbb
jb
movsb
and
jl
mov
out
rcrb
mov
in
mov
xchg
lea
aas
ja
jl
cld
mov
js
sub
push
cmp
test
cli
xor
ret
jle
or
je
mov
shl
push
sahf
and
fildll
jmp
lods
xor
imul
inc
mov
shrl
mov
xchg
and
mov
jecxz
sbb
jle
jge
mov
lock
test
sbb
call
insl
pop
pop
sbb
aaa
fstps
pop
arpl
fistpl
or
lcall
and
paddw
dec
aam
add
subb
adc
cli
mov
adc
sub
mov
mov
mov
cwtl
in
js
out
movsb
lods
or
push
jmp
js
test
pusha
dec
xchg
inc
js
jmp
pusha
out
in
mov
mov
cmp
mov
movsb
sbb
test
stos
aaa
jge
mov
call
subb
je
cmp
imul
mov
lock
rcl
push
jle
jl
mov
mov
loope
aam
push
mov
jg
and
pop
enter
xchg
and
mov
ds
fsubp
clc
mov
mov
outsl
les
mov
ja
fs
adc
andb
test
dec
addb
jbe
sar
addr16
push
ret
lods
mov
sbb
cmp
mov
stc
xor
and
ret
mov
ret
repnz
push
test
cmp
push
sub
mov
mov
scas
das
gs
sub
cmpsb
je
or
movsb
sbb
loop
arpl
mov
push
loope
sar
mov
fs
stc
outsb
inc
mov
mov
into
mov
push
lea
arpl
push
push
push
je
pop
fbstp
mov
mov
out
add
das
fistps
cmpsb
pop
pop
fstpt
gs
idiv
gs
enter
push
arpl
pop
scas
jge
add
sub
and
fisttps
imul
push
jl
fsubs
jns
fdiv
fiadds
lods
jmp
xchg
jnp
push
addr16
loope
pop
leave
jl
pop
ret
ljmp
enter
or
in
sub
adc
gs
pop
push
push
jp
pop
add
into
lret
dec
loop
jge
pop
dec
jo
pop
pop
insb
jae
jle
xchg
inc
std
xchg
movsl
mov
mov
sbb
xor
mov
adc
mov
xor
xlat
or
inc
pop
xlat
cmpsb
jecxz
into
addr16
mov
xor
cltd
mov
sbb
sahf
add
out
clc
sub
shll
pop
pop
sbb
push
mov
pop
call
rcl
or
sbb
std
std
lods
mov
pop
mov
cmpsl
lret
js
fldcw
adc
outsb
in
arpl
dec
mov
movsb
pop
movsb
jp
mov
push
sbb
stc
repz
adc
mull
aam
ja
es
pop
push
mov
pop
jp
dec
sbb
andl
scas
push
adc
adc
mov
mov
nop
popa
bound
outsb
jle
and
jg
pop
mov
shrb
cltd
push
push
lea
clc
popf
inc
mov
xor
mov
mov
js
int3
mov
in
jg
pop
xchg
mov
sbb
add
jbe
jb
imul
frstor
mov
pusha
pop
movsl
jno
add
cmpsl
rclb
sahf
out
sbb
jecxz
inc
fldl
movsb
ficoms
mov
outsb
imul
sbb
push
ficomps
addr16
mov
hlt
push
icebp
subb
jo
mov
pop
or
jl
cwtl
and
aad
pop
mov
mov
aad
sarb
ljmp
jns
lret
push
int
inc
xor
test
jg
sub
jns
jno
outsb
or
cwtl
rorl
outsl
mov
popa
mov
sub
outsl
mov
and
jo
das
psraw
nop
imul
pusha
dec
push
jecxz
xchg
mov
cmp
push
in
push
inc
lcall
pop
in
xor
test
sarb
mov
loopne
mov
js
in
aam
aad
add
inc
mov
fs
imul
andb
adc
js
je
inc
loopne
pop
inc
aam
fisttps
popf
pop
jmp
add
jge
or
mov
dec
adc
or
fcmovnbe
fcomps
push
adc
sub
jl
pop
mov
mov
jae
in
mov
push
jmp
sbb
hlt
movsb
pop
lods
mov
xor
mov
in
outsl
pop
test
outsb
scas
cld
mov
int3
lods
sar
divl
push
mov
adc
mov
and
loope
adc
pop
int
pushl
das
popf
mov
cwtl
or
xchg
dec
sahf
test
push
addr16
push
stos
lods
cmpsb
lods
mov
aas
jno
mov
leave
push
in
jnp
cltd
xchg
add
inc
pop
or
pop
cmpsl
enter
jo
sbb
pop
sbb
adc
popf
sti
or
fists
and
out
hlt
repz
dec
loopne
imul
out
outsb
inc
je
inc
push
cld
pushf
jno
xchg
add
inc
shl
xchg
xor
or
mulb
imull
stos
sbb
mov
aaa
addr16
fistl
aam
in
pop
jl
sbb
mov
sub
js
push
ret
mov
call
adc
ja
fistl
adc
bswap
pop
loop
mov
sbb
fsubrl
addr16
dec
mov
andl
adcb
fmull
sbb
pop
jge
mov
cltd
xchg
inc
int3
dec
mov
sahf
fnstenv
mov
mov
lods
fisubl
loope
cwtl
push
test
adc
mov
cmpl
pop
cltd
adc
and
fbstp
cmp
pop
sub
mov
pop
adc
popa
xchg
adc
fidivrl
sarb
and
cmp
jmp
push
or
or
pop
sub
das
mov
insb
dec
clc
es
sub
pop
in
mov
and
loopne
test
lcall
jae
sbb
pushf
jo
sahf
fdivrl
cwtl
sbbb
stc
mov
jmp
int
mov
lahf
dec
sub
xchg
xchg
jecxz
jl
inc
popa
push
jno
sub
or
inc
jg,pn
loopne
lock
std
insb
scas
insb
ret
lods
sub
mov
ficoml
aaa
push
scas
cmpsb
sarb
stos
xlat
test
int3
sub
sbb
inc
and
xchg
xchg
arpl
dec
mull
sbb
ret
xor
scas
sub
jle
pop
das
push
popw
xlat
sbb
lods
and
jns
in
movb
in
xchg
inc
cmpsb
or
or
inc
cmp
ror
fwait
mov
pop
not
aaa
push
js
stos
inc
inc
cmc
push
loop
icebp
repnz
lds
push
call
test
inc
faddl
rcll
daa
mov
pop
adc
xchg
sub
cwtl
jge
ds
fnsave
jmp
stos
jns
cmc
lcall
inc
add
push
leave
lret
dec
cmp
cltd
loope
out
test
insb
dec
xlat
sbb
mov
or
push
push
das
mov
sbbb
arpl
int3
sub
arpl
xchg
dec
ds
xchg
loop
mov
imul
adc
aad
cltd
js
sub
jae
xchg
mov
je
dec
jns
mov
out
cmp
xchg
push
cli
cwtl
enter
fistl
call
rcll
pusha
push
jle
mov
fidivrs
in
insb
sub
cmp
stos
out
mov
mov
sub
call
aam
ljmp
mov
mov
notb
pop
adc
in
xchg
pushf
adc
adc
popa
in
cmc
nop
push
cli
pushf
jp
aad
pop
lods
leave
inc
jno
ret
push
inc
ljmp
jae
pop
mov
scas
popf
mov
aad
call
movsb
insb
jg
sub
pusha
sbb
inc
pushf
mov
insb
jns
adc
int3
mov
outsl
push
push
and
pop
das
inc
and
imul
insl
cli
pusha
mov
test
icebp
nop
xchg
imul
push
aam
movsl
mov
stos
hlt
inc
clc
ljmp
cmpb
mov
popa
sub
aad
pop
dec
pop
jbe
in
mov
xchg
call
imul
jo
in
add
push
mov
idivl
dec
adc
aad
sarb
js
inc
sub
and
pop
xchg
push
or
mov
aad
pushf
mov
mov
push
xchg
sti
addr16
out
popf
sub
dec
outsl
addr16
loop
mov
imul
inc
pusha
lds
das
or
sub
test
dec
push
adc
pop
popa
leave
ss
in
pushf
mov
js
lods
xchg
push
insb
aad
scas
cmpsb
je
push
subb
cwtl
cmpsb
adc
aad
aaa
sub
jne
ja
pop
fs
mov
roll
pop
dec
inc
pop
and
mov
fmull
lods
in
in
ret
pusha
lcall
hlt
sbb
push
pop
pop
sahf
push
icebp
inc
cli
ds
mov
push
fnsave
jmp
jnp
sbb
xorb
pop
aaa
push
cwtl
mov
addr16
mov
or
push
insb
aaa
jecxz
add
fadd
ja
pop
push
mov
addr16
fnsave
cltd
cmp
add
sti
inc
inc
and
out
fmull
push
test
push
push
push
push
arpl
adcb
jecxz
call
inc
pusha
sub
mov
pop
mov
or
cltd
xchg
inc
test
cld
ficompl
mov
or
inc
fwait
xchg
int3
or
mov
cmpsl
out
adc
lcall
push
xchg
cmpb
sbb
stos
jnp
mov
push
pop
sub
mov
test
inc
mov
mov
or
adcb
aaa
pop
lahf
fs
pop
outsb
adc
pop
es
sbb
shrb
rcrl
into
pop
sarb
mov
arpl
or
push
push
cmpsb
arpl
cmpsl
insb
or
jecxz
adc
sbb
aam
or
fisubrs
loope
jl
out
cmpsl
add
mov
adc
push
sbb
dec
or
gs
or
sbb
adc
push
push
mov
mov
je
adc
push
out
mov
arpl
test
fs
cwtl
gs
inc
mov
push
sbb
fcos
in
sbb
cmp
xor
push
int3
bound
mov
jne
cltd
bound
xlat
pop
cwtl
aam
mov
cmpsl
mov
in
add
lock
fsubrs
xlat
call
stos
dec
pushf
xorl
push
dec
out
cmpsl
jge
push
jae
mov
xor
mov
cmp
outsb
outsb
ret
js
cmpsb
idivb
fdivp
in
xor
addr16
in
testl
jns
loop
int3
mov
fdivp
loopne
loope
pop
mov
and
fiadds
jmp
test
lret
ret
push
in
pushf
int
fnstenv
popa
xchg
fldenv
fidivrs
sahf
imul
outsb
imul
sub
out
imul
cmp
inc
in
popf
or
xchg
add
call
ljmp
lcall
lcall
test
cwtl
mov
test
pop
mov
loope
xchg
push
movsb
or
mov
cmp
mov
in
mov
sbb
jl
imul
mov
pushf
and
or
push
jg
sbb
adc
or
insb
nop
adc
xor
jp
lcall
bound
adc
imul
xchg
in
dec
jno
out
sbb
sti
jg
mov
push
mov
pop
lcall
adc
fidivs
aas
xchg
add
mov
mov
sbb
aaa
jge
jle
popa
jae
js
add
pop
in
mov
int3
jge
test
lods
pop
adc
fadds
test
cmp
ja
or
loop
fcoml
cmp
fildll
push
out
sub
mov
fs
loopne
mov
lahf
das
xchg
mov
push
mov
out
sub
mov
sub
gs
rorl
lcall
dec
fldenv
and
add
insb
lods
nop
in
rolb
xchg
stos
leave
loope
ss
out
adc
into
call
gs
je
stos
rep
pop
lret
clc
add
sub
movsl
and
adc
not
ljmp
sub
movsb
shl
in
adc
rclb
fdivl
inc
fwait
mov
outsl
mov
mov
pusha
sub
pushf
mov
push
inc
inc
jg
push
sti
shll
lret
adc
or
xor
stos
stc
jbe
jge
js
ret
and
push
js
scas
in
iret
mov
pop
imul
loopne
push
jns
mov
and
shl
mov
in
loopne
dec
lods
pusha
mov
insb
dec
filds
pop
mov
sbb
mov
sub
push
std
mov
inc
dec
fucomp
out
nop
or
test
pusha
mov
sbb
add
fdivl
movsl
sbb
popa
fistl
lods
ja
mov
mov
jb
and
outsl
sbb
add
mov
aam
pop
lds
xchg
outsb
sbb
jle
bound
loop
mov
mov
push
cmpsb
jnp
cs
inc
movsl
loope
dec
or
add
jne
scas
insb
push
inc
and
push
in
sbb
sub
call
mov
mov
jo
push
mov
loope
or
mov
repz
cmp
mov
rclb
lahf
sbb
push
push
in
js
xorb
jo
je
xor
ds
out
cli
xorl
or
push
xorb
ret
jp
js
adc
inc
out
int3
out
xor
es
mov
dec
sbb
sbb
ljmp
test
xor
sbb
aam
loope
xchg
sub
popa
pop
fdivl
loop
popa
es
mov
and
daa
inc
xor
jns
jmp
insl
xchg
pop
and
outsl
popa
push
movl
lret
xchg
ja
popf
push
loop
cli
arpl
pop
mov
jge
call
addb
sarb
stc
push
int
mov
cmp
popa
aas
xchg
test
mov
int
add
int3
fmull
inc
mov
jno
and
mov
cltd
mov
push
push
adc
dec
or
inc
sbb
jg
mov
int3
xor
push
loope
fs
rep
lods
in
pop
push
sbb
popf
jge
adc
or
in
mov
adc
adc
inc
mov
mov
jbe
jp
inc
xor
cwtl
inc
sub
mov
pushf
dec
cmp
rcll
fsub
ret
ret
adc
cld
push
lret
outsb
aad
sbb
out
subl
cmpsb
dec
sub
sub
jbe
jno
in
orb
in
in
loope
xchg
popf
adc
test
jbe
jns
dec
outsb
stos
insb
jb
inc
orl
pop
push
pop
fisubrl
insb
pusha
int3
scas
out
or
arpl
out
inc
test
or
pop
repz
pop
sub
sub
jbe
scas
aam
pop
pop
sbb
movsb
inc
push
test
arpl
lahf
cmp
subl
mov
cmp
xchg
mov
lock
push
call
test
push
sub
add
mov
daa
jno
pop
arpl
mov
aas
and
pop
xchg
dec
aad
test
add
je
sub
push
sbb
xor
cmp
xor
cmpsl
mov
addr16
roll
pop
fidivs
push
fisttpll
sbb
mov
outsl
lcall
jle
out
push
mov
fadds
call
data16
pop
outsb
stos
notl
mov
lahf
imul
push
adc
lahf
cli
mov
scas
hlt
mov
adc
movsb
out
sub
lods
inc
jle
xchg
mov
mov
mov
call
mov
adcb
cld
add
xchg
int
lods
xchg
pop
movsb
xchg
fsubrl
xor
lods
fildll
sbb
jmp
bnd
int
popa
test
call
test
pop
cs
push
xor
mov
cs
mov
push
jp
xor
mov
add
mov
and
dec
xor
int
das
push
ds
pusha
pop
adc
lods
pop
jmp
loope
sub
in
push
pop
fisttps
xorl
pusha
clc
jmp
ljmp
leave
insb
insb
inc
lret
push
mov
push
fsubl
pop
cmc
mov
pop
inc
xchg
pop
pop
icebp
scas
inc
dec
sub
andb
sub
jo
lcall
add
fdiv
cmp
pop
fists
loop
lods
push
fisubs
pop
loope
mov
push
mov
lret
dec
xchg
lahf
xchg
dec
xor
pusha
das
pop
and
pop
js
jbe
outsl
sbb
imulb
sbb
adcl
mov
xchg
mov
push
pop
xor
mov
imul
int
sub
inc
adc
xchg
mov
subl
add
test
in
mov
push
pop
and
ljmp
test
mov
jmp
mov
push
int
inc
sub
sub
fdivrl
push
call
mov
jecxz
pop
ljmp
stos
jp
sahf
pop
jp
push
push
in
jne
push
loope
push
add
pop
pop
test
lcall
inc
in
scas
cmp
adc
rcrl
xchg
jg
sub
mov
pushf
and
pusha
jne
sbb
test
ret
mov
out
lock
fwait
xchg
ljmp
mov
movsl
sbb
fildl
xor
fbld
les
jo
dec
inc
mov
popf
jmp
inc
insb
movsb
stc
cmpsb
cmpsb
pusha
adc
ljmp
es
aaa
sarl
popf
icebp
mov
mov
mov
fs
mov
and
repnz
js
clc
loope
inc
loope
stos
je
int3
loop
fs
push
call
xor
cmp
je
cmc
pusha
mov
les
sbb
cmpsl
push
sub
out
pushf
loope
lods
push
mov
test
cli
pop
cli
push
aad
cmc
std
push
cmp
pop
outsl
imul
inc
jae
nop
call
lods
cmp
inc
data16
dec
adc
add
jo
mov
and
cmp
scas
lahf
cmp
cmp
inc
sti
sub
stos
sbb
stos
test
ret
mov
enter
in
out
loope
dec
stos
int
xchg
jge
add
jg
lcall
test
lods
arpl
and
insb
cmp
mov
push
pop
in
das
adc
adc
sbb
mov
jo
test
movsl
jmp
mov
mov
mov
pop
sub
add
scas
in
loopne
or
loop
pop
fldcw
frstor
push
add
adc
mul
or
or
mov
and
lods
mov
negb
ret
cwtl
dec
icebp
testl
insb
sbb
jp
jg
pop
sbb
out
in
ja
movsb
aad
test
nop
icebp
les
ds
jmp
add
mov
fiaddl
popf
cmp
mov
mov
cmpsb
mov
in
aaa
repnz
int
xor
adc
mov
jg
int
lahf
out
cmp
pop
inc
dec
add
int
loop
outsl
push
mov
mov
and
add
pop
pop
into
sbb
test
mov
repz
push
repnz
lahf
setns
popa
inc
das
inc
andl
cmc
or
jp
mov
jbe
ror
test
inc
fs
movsl
push
mov
jecxz
popf
aam
cli
loop
loopne
outsl
dec
movsl
fidivrs
movsb
clc
push
out
loop
notb
mov
in
js
enter
dec
push
xor
inc
movsb
scas
adc
loope
xor
add
jge
mov
lods
pop
dec
push
or
and
cwtl
int3
mov
jecxz
subl
jo
or
mov
xchg
cli
mov
sahf
cmpl
test
xchg
or
push
outsb
stos
mov
sub
iret
cmpsl
add
pop
push
push
stos
sub
shl
mov
mov
in
bswap
subb
dec
aad
jne
push
andl
dec
adc
cmpsb
out
sbb
scas
fistpl
movsb
mov
xchg
call
push
ja
mov
cs
es
insb
aas
pop
sub
js
xchg
xor
jecxz
mov
test
push
test
loope
sbb
push
xchg
lea
leave
xchg
ljmp
add
fistpl
sbb
push
cwtl
mov
sub
mov
push
mov
sub
ljmp
push
test
adc
subb
inc
loopne
ret
enter
sub
inc
xchg
pop
dec
lret
fwait
loop
cltd
ret
inc
popa
jle
mov
sub
mov
pop
mov
sarl
sub
push
mov
mov
in
sbb
pop
jns
popa
enter
adc
push
xchg
mov
stos
stc
inc
ret
sti
rcr
xor
in
sbb
out
arpl
in
repnz
loopne
xor
pop
stos
addb
test
xchg
sbb
dec
js
enter
push
xor
fcomi
rcrb
lods
bound
gs
add
lret
gs
sahf
loopne
insb
xor
lret
orb
aam
ret
mov
pusha
push
mov
scas
mov
mov
mov
fwait
cmp
insb
jge
cmp
adcl
shll
in
pop
ss
imul
sbb
mov
subb
movsb
pusha
fsubl
iret
mov
dec
mov
scas
cmp
icebp
loop
mov
lcall
orl
dec
fs
fiaddl
sub
cmp
imul
lods
jb
sbb
push
push
jnp
cwtl
add
int3
xchg
mov
sbb
imul
adc
movsl
int
mov
stos
lret
push
or
or
mov
pop
pusha
in
faddl
cmp
js
loop
ret
xor
sarb
in
push
mov
insl
enter
mov
dec
pusha
out
ss
xchg
mov
inc
jns
out
xchg
pop
jle
mov
je
mov
inc
xchg
jo
test
push
mov
pop
xchg
inc
push
xor
jle
pusha
mov
sbb
loope
or
or
sub
addr16
inc
pop
into
pop
dec
lahf
sbb
mov
lcall
aaa
call
js
xchg
cwtl
push
jg
jecxz
aad
inc
cs
inc
jne
int3
lahf
ret
fsubrl
add
int
mov
mov
imul
add
fmul
and
pop
daa
movsl
mov
or
insb
mov
pop
cltd
data16
scas
lcall
pop
xor
jmp
into
mov
pop
jns
lea
push
mov
fstl
push
popa
mov
mov
pop
and
sbb
outsl
js
ret
sbb
mov
imul
pop
int3
addb
rcrb
jp
jns
jo
aad
mov
and
aad
xorb
ret
or
sahf
fidivl
cmpsb
jl
in
shll
cli
testb
imul
inc
pop
add
mov
dec
test
addb
dec
int
lea
jns
push
add
lcall
lcall
mov
popa
xchg
cmp
sarb
xlat
lock
lods
bound
push
inc
xchg
xchg
cmp
insb
jbe
lods
les
pop
les
jae
xchg
inc
adc
aam
cmp
push
cmpsb
sbb
or
shll
push
mov
dec
push
enter
add
xor
push
setl
in
pop
inc
sahf
push
imul
rolb
inc
mov
negb
mov
jle
loopne
mov
pop
sbb
jne
push
adc
arpl
test
add
sbb
je
xor
aaa
fnstenv
inc
mov
push
cli
sbb
inc
sub
push
fldenv
inc
jb
or
dec
and
push
or
or
into
inc
test
sbb
xorb
cwtl
insl
aad
xlat
shr
adc
cmc
dec
and
loope
mov
mov
outsl
test
sbb
fsub
push
add
out
arpl
mov
clc
push
sub
pop
mov
cmp
stc
cmpsb
dec
xchg
lahf
dec
orl
ljmp
mov
xor
pop
loop
adc
or
in
push
cli
gs
mov
and
ss
insb
imul
push
and
lcall
adcl
mov
xchg
adc
mov
cmpsb
popl
push
mov
bnd
cli
aam
sub
andl
jb
sbb
test
rol
enter
out
mov
stos
sbb
dec
and
mov
cmp
jns
fs
xorb
pop
push
fstl
pop
loop
cltd
loopne
sbb
cmpsl
int
cs
imul
dec
dec
sub
push
jo
jmp
sbb
lock
xchg
enter
sti
insb
mov
clc
add
mov
clc
inc
adcl
dec
jmp
cli
push
or
fs
loopne
mov
push
xor
nop
ljmp
jle
push
mov
dec
mov
jg
adc
add
call
push
jae
xorb
push
ljmp
pop
dec
fucomi
cwtl
mov
imul
mov
in
or
in
mov
nop
pop
mov
pop
xchg
iret
je
insb
add
cs
ljmp
js
cmp
out
inc
lcall
test
push
call
mov
jne
sbb
xchg
fwait
andl
jge
jae
cmpsb
loope
js
shr
sahf
sbb
xchg
test
mull
pop
arpl
mov
ret
jae
push
rorb
loope
pmuludq
fdivr
or
lahf
enter
dec
mov
pop
jl
test
fisttpl
sub
add
repz
les
inc
xchg
jl
or
scas
enter
dec
lods
bound
imul
lahf
sbb
out
insb
dec
jo
imul
jo
adc
adc
js
cwtl
aaa
pop
scas
mov
sbb
daa
clc
mov
cld
movsb
shr
pop
ljmp
mov
mov
mov
mov
mov
fisubrl
inc
pop
adc
xor
ficomps
jmp
test
add
pop
lret
enter
sbb
mov
pusha
popf
push
adc
testb
sub
into
bound
daa
inc
arpl
add
dec
sub
xchg
fsubp
pushf
pushf
mov
pop
and
xchg
dec
in
test
imul
loope
mov
cli
sti
andl
xor
enter
push
cmp
cmc
push
xchg
outsb
shll
ss
jge
dec
jo
test
stc
cltd
loope
pop
or
xchg
clc
ljmp
outsb
in
inc
test
imul
insb
cltd
je
out
push
insl
inc
addb
sub
insb
inc
mov
fisubrs
fdivrp
mov
je
cmp
mov
xchg
enter
addr16
add
call
leave
imul
scas
or
mov
adc
jmp
dec
mov
ja
insb
mov
or
mov
sbb
push
loopne
push
in
xchg
or
push
js
subl
jne
push
data16
jecxz
pop
inc
xchg
in
mov
mov
orb
pop
int3
lahf
stos
rep
repnz
mov
jae
sub
adc
push
jae
lods
loopne
out
jmp
in
or
loopne
sbb
sub
bound
push
mov
jg
test
lret
add
mov
shll
push
and
mov
and
and
cwtl
mov
inc
xor
jo
iret
leave
aam
pusha
and
or
jl
fcomps
jns
pop
ljmp
es
lods
sbb
jge
lret
mov
test
xor
dec
clc
imul
sti
jae
jmp
pop
movsl
popf
dec
inc
in
repnz
jl
imul
jbe
adc
pop
inc
and
xchg
popa
push
sti
test
sub
andl
adcl
push
or
out
mov
mov
stos
push
test
shll
pop
add
jge
sub
jp
cld
cmp
dec
push
insb
sub
mov
jmp
sbb
mov
shl
push
loope
jle
outsb
xchg
out
pop
adc
cmpsb
jge
push
lods
test
jecxz
jp
and
fnstenv
lods
inc
sub
fs
mov
push
xor
jmp
cmc
subps
je
adc
sbb
aam
fidivrs
add
fstpl
add
and
xor
push
sub
push
subb
lahf
inc
ret
std
push
loopne
insl
mov
cli
cmpsb
mov
sbb
jno
aam
sbb
je
stos
push
mov
fldt
pusha
aad
insl
rep
ficoms
cmpsb
pop
sti
pop
stos
add
ds
mov
adc
sub
mov
mov
sbb
out
iret
adcl
out
add
mov
pop
cmc
dec
inc
pushf
popf
sub
adc
fstl
lret
inc
insl
jg
xor
mov
aad
rclb
sub
jbe
pop
pop
dec
adc
daa
cmpb
cmp
sub
cmpsb
push
inc
mov
dec
je
enter
sbb
xor
dec
xor
xchg
xchg
sub
cmp
pop
and
xchg
mov
adc
es
or
jl
cmpsl
in
icebp
adc
xchg
pop
sbbl
jmp
adc
sbb
scas
in
inc
xchg
mov
jge
fldt
push
lock
cli
mov
inc
insl
push
cwtl
jge
scas
repnz
test
js
call
inc
in
push
xchg
cmc
les
mov
lcall
mov
icebp
push
sahf
mov
aam
cwtl
cmp
mov
loopne
mov
sub
push
pop
sub
or
pop
in
xlat
or
repnz
push
cmp
out
addr16
add
adc
push
inc
cmp
jg
pusha
xchg
bound
sub
mov
or
pop
mov
lods
push
shlb
jecxz
mov
aas
insb
scas
out
jne
arpl
inc
into
xlat
xchg
mov
ret
arpl
loop
pop
pop
cltd
pop
sbb
pop
cmp
inc
pop
jno
jg
fldcw
pop
fidivrs
xchg
dec
dec
push
iret
xchg
mov
cmpsl
int
add
xchg
xchg
mov
in
test
dec
mov
jmp
frstor
dec
pop
cltd
test
addr16
pusha
addr16
iret
je
bound
popf
cmpb
mov
inc
cmp
mov
divps
cld
ljmp
xor
fisttpl
adc
push
loop
pushf
push
fldenv
aas
pop
leave
leave
push
lods
pop
lock
jmp
les
and
addr16
and
movsl
popa
popf
scas
icebp
inc
add
mov
mov
cmp
cmpsb
cmc
or
inc
int
xchg
flds
dec
xchg
lds
fwait
hlt
sbb
ss
lahf
add
psubq
jge
shrl
call
mov
lret
cld
adc
jb
dec
in
cmp
sbb
pop
push
or
ds
pop
pop
test
scas
scas
test
mov
rcrl
push
sub
stos
inc
test
mov
pop
out
mov
out
sub
jo
mov
sbb
cmp
loope
lods
lret
jg
or
pop
loopne
test
add
sub
fs
pusha
adcb
adc
fwait
push
stos
ret
push
pop
jl
inc
push
push
adc
mov
jp
js
test
cmp
notb
mov
out
fsubrl
push
sbb
xlat
in
mov
jl
fstpl
xchg
or
movsb
ficoml
fildll
push
sub
xchg
xor
test
fsub
mov
insb
mov
pop
fnstenv
mov
and
mov
ljmp
xchg
sbb
aad
je
subl
cmp
sub
xor
lret
cltd
ja
fmuls
xchg
xchg
daa
aad
popa
jecxz
orl
inc
ss
daa
pop
sub
and
mov
xor
arpl
dec
sbb
sbb
xchg
push
xlat
xlat
push
rcrb
rclb
and
addr16
test
xor
push
and
movsb
cmp
mov
or
insb
les
inc
xchg
xchg
pop
mov
adc
lret
pop
es
push
test
jb
repz
mov
push
imull
in
and
cmpsb
pop
fwait
test
loope
subb
or
adc
inc
xor
std
out
mov
sbb
lret
les
push
movsb
mov
jns
test
mov
test
inc
adc
mov
aam
movsb
push
aam
btr
rcrl
pop
pop
scas
adc
xor
in
out
fists
ljmp
or
mov
cmc
outsl
loop
pusha
add
adc
inc
mov
addr16
or
bound
pushf
pop
and
push
fdivr
loop
imul
sub
leave
mov
cwtl
gs
ja
push
out
jns
inc
pop
aam
xor
in
into
push
add
mov
movsl
in
pop
movsb
xchg
fstps
loope
adc
jmp
mov
pop
andl
jno
call
cmpsb
inc
loopne
imul
and
movsl
int
out
les
sub
je
popf
jae
int
lahf
dec
pop
nop
push
pop
jge
dec
and
movsb
sbb
cli
hlt
mov
inc
adc
xor
and
sarl
fildl
test
adc
sahf
insb
icebp
je
dec
push
mov
mov
or
mov
jne
lcall
mov
fstps
xchg
sub
int3
xchg
xchg
cwtl
jecxz
addl
pop
pop
sub
mov
xchg
mov
dec
xchg
int3
sbb
sub
iret
enter
xchg
pop
test
sarb
lods
jno
mov
addr16
loopne
enter
pop
sbb
lahf
jg
int3
out
popa
js
out
mov
mov
pop
addr16
jmp
sub
test
jmp
push
xchg
and
stos
jle
mov
pusha
pop
stc
fdivp
movsb
lods
mov
and
shlb
lods
movsl
fbld
in
mov
ljmp
mov
frstor
loop
insb
mov
add
cwtl
pop
xchg
adc
jnp
test
push
in
push
adcl
minps
pusha
or
mov
pop
lret
insb
call
jle
push
cmc
loope
pop
in
fdivl
mov
shrl
mov
xlat
mov
mov
lods
int
sub
or
loop
sarb
mov
enter
out
les
mov
enter
jle
push
or
orl
arpl
mov
pop
mov
es
dec
jle
pusha
je
loope
jg
pop
xor
es
jle
mov
lahf
pushf
pop
cmp
rcrb
insb
pop
out
and
in
pusha
jmp
stos
and
andb
inc
icebp
pusha
enter
mov
enter
mov
mov
outsl
addr16
scas
push
and
xchg
cltd
lcall
shll
repz
adc
imul
mov
popa
test
mov
xor
cmp
jmp
imul
inc
sub
mov
xor
fisttps
lret
xchg
xchg
jmp
mov
push
dec
daa
mov
ja
scas
scas
cmovbe
sahf
pop
pop
mov
jp
xchg
xor
insb
int
test
lods
add
loope
ret
jp
adc
inc
imul
mov
sbb
js
mov
outsl
std
loope
test
cmpsb
or
mov
lret
xchg
mov
loop
lods
jo
jecxz
jo
jns
enter
cmp
shl
mov
or
pusha
jmp
idivl
aam
or
pop
outsb
addr16
mov
or
call
dec
xlat
cwtl
push
in
popf
es
pop
pop
and
add
ds
scas
xchg
leave
sub
cwtl
fsubr
dec
cld
add
dec
cmp
jge
adc
pushf
test
xchg
adc
clc
inc
mov
jne
aad
xchg
call
sbb
aam
in
and
shrb
jmp
fidivrl
sub
jns
dec
xchg
loope
adc
jne
aad
add
lcall
mov
jp
int3
xlat
mov
pop
sbbl
js
insb
xchg
push
xlat
or
jl
jae
pop
jg
jge
push
clc
jmp
int3
fsub
inc
int
sbbl
jbe
rclb
scas
sub
mov
fistps
add
std
jbe
frstor
pusha
call
roll
fucomp
bound
xchg
mov
mov
fucomp
aad
jo
fs
sub
dec
add
add
movsb
imul
adc
sub
call
ret
xchg
add
mov
dec
xlat
data16
int
jg
in
cwtl
fisttps
push
pusha
xor
imul
loope
push
test
adc
loopne
jns
sarb
pushf
pop
imul
ja
shrl
aad
jp,pt
cwtl
mov
fsubl
lret
subl
insl
jo
xor
inc
lds
test
addr16
inc
cmp
cmp
out
pop
repnz
jmp
nop
movsb
inc
pop
and
cmp
jg
inc
sub
enter
lret
push
push
test
sub
xlat
xchg
imul
mov
add
sub
jl
sub
in
pop
jnp
int3
or
dec
cld
push
ljmp
xlat
lock
push
leave
movsl
push
push
stc
push
cmp
aam
shll
cmp
pop
xor
aad
add
arpl
clc
flds
push
das
icebp
imull
je
in
int3
int3
in
jge
les
scas
xchg
sub
sub
sbb
in
add
jp
popf
outsl
in
dec
popa
dec
push
xor
je
add
std
das
aam
push
cmc
sti
xor
ret
ja
std
scas
mov
sub
adc
in
xlat
or
scas
push
pop
xchg
pop
jl
push
movsb
imulb
popa
pop
adc
call
adc
int
loopne
test
iret
jmp
mov
cwtl
adc
inc
andb
dec
jns
inc
push
xchg
shrl
loopne
test
inc
lds
mov
pop
js
push
stc
loope
fimull
and
pop
int3
push
or
pop
in
cs
xor
scas
xchg
std
mov
push
inc
hlt
in
je
xor
cs
jecxz
mov
insb
xor
jbe
cmp
dec
pop
or
inc
xchg
outsb
cwtl
lcall
lahf
inc
jg
cmpsb
jb
iret
jno
nop
test
fdiv
mov
dec
jecxz
test
pop
push
xor
mov
jnp
test
jle
mov
dec
mov
dec
stos
arpl
sbb
cmc
push
xchg
arpl
test
dec
stos
xlat
icebp
scas
mov
imul
xchg
je
inc
mov
in
cmpb
mov
stos
bound
sahf
xor
add
nop
int3
xchg
push
cmc
movsb
test
adc
addr16
inc
add
inc
fnstenv
ja
insb
push
and
je
sbb
aas
and
je
bound
int
leave
xchg
jp
imull
sbb
movsb
or
outsl
int
or
addb
push
iret
jg
xor
xchg
mov
movsb
sbb
imul
mov
insb
test
pop
cld
insl
cltd
je
inc
push
pusha
mov
xchg
cld
push
mov
and
cltd
rcll
hlt
mov
pop
fisttpll
sbb
sbb
scas
jb
or
repnz
mov
pop
or
daa
fld
mov
inc
jge
sbb
pop
push
shr
dec
incl
push
pop
mov
dec
cmc
test
adc
dec
xchg
in
js
push
jb
jne
cwtl
bound
int3
sbb
add
loop
scas
imul
fiadds
mov
addr16
gs
push
push
mov
cs
jl
add
arpl
out
arpl
mov
xorl
subl
mov
sub
sbbl
inc
pop
or
mov
aam
lods
sahf
sub
popa
shrl
scas
add
aam
rcl
popa
add
add
xchg
loop
push
inc
imul
addl
data16
mov
iret
adc
mov
add
xchg
push
aad
imull
ja
jmp
push
mov
mov
popa
in
push
mov
cmp
clc
inc
mov
aad
into
cld
outsb
sub
filds
es
cs
add
inc
mov
pop
pop
xchg
dec
push
loopne
mov
nop
mov
mov
jns
xchg
aas
loope
into
mov
or
mov
in
cmpsl
pop
mov
pop
sbb
test
jg
or
inc
cltd
das
fistl
or
push
adc
mov
inc
in
mov
mov
addr16
inc
sbb
cli
mov
ds
shrb
inc
sbbb
sub
or
scas
jecxz
test
cmpsb
mov
imul
scas
xchg
cs
or
int
imul
inc
popa
push
notl
mov
cli
shlb
cs
mov
xor
xor
and
in
lock
leave
push
insb
jg
and
mov
mov
iret
pop
mov
sub
flds
jns
mov
cmp
lods
xchg
outsl
sbb
or
mov
dec
outsl
jo
sbbb
out
and
inc
loop
adc
inc
mov
push
fisubl
pop
frstor
mov
leave
push
cmc
cwtl
gs
inc
jmp
pop
lds
js
in
not
push
xchg
lods
mov
push
sbb
mov
out
cli
in
test
movsb
mov
ds
imul
les
cli
jle
or
stos
push
mov
mov
sbb
loopne
lahf
add
push
mov
add
inc
cs
inc
jmp
icebp
test
xchg
sbb
out
mov
mov
cmp
scas
ljmp
imul
movsb
sub
pusha
push
lods
and
and
enter
cmp
imul
sbb
leave
popa
jnp
dec
fdivr
negl
inc
mov
cmp
or
decb
fwait
push
addr16
mov
je
in
mov
fs
call
xchg
pop
mov
imul
adc
sbb
pop
sub
push
jno
movsl
adc
imul
push
jecxz
jns
pushf
fisttpll
sbb
into
pop
loope
mov
shlb
mov
xorb
test
dec
jmp
dec
cmovs
mov
jmp
inc
ficompl
pop
pop
pushf
xor
dec
push
in
sbb
aad
cmp
jmp
jmp
jnp
sub
in
sbb
cmp
popa
and
shrl
pop
push
loope
inc
daa
mov
mov
dec
lods
scas
movb
test
loopne
pusha
shrd
out
or
stos
movsb
call
dec
idivl
or
into
mov
movsb
push
jg
jbe
clc
mov
sub
jl
fsubrs
and
loope
fdivl
xchg
loopne
cmpsb
cld
int
add
test
cmp
int
xor
subl
shrl
fnstenv
enter
repz
add
jns
out
inc
push
jl
shl
les
popa
je
subl
cmpsl
sub
sbb
jecxz
out
orb
nop
cmpsl
pusha
test
inc
mov
rclb
xor
lcall
jns
jno
data16
inc
lea
push
movsb
sub
dec
cmpsb
push
push
imul
jb
and
js
cmc
dec
fidivs
aad
xorl
or
out
sbb
adc
xchg
sbb
hlt
insl
loopne
iret
sub
mov
mov
sbb
pop
in
adcl
inc
jb
xlat
mov
sub
fistpl
aam
je
pop
sbb
push
fs
xchg
sahf
mov
or
push
push
xor
push
mov
popa
pop
sbb
mov
or
push
sti
and
mov
int
add
cmp
fimull
lea
push
jns
jnp
jno
enter
jp
lcall
stos
mov
cmp
mov
or
out
xchg
sbbl
das
cwtl
cmc
scas
jno
xchg
ret
jl
popf
jbe
lods
rclb
jb
nop
andl
lret
cmp
dec
mov
mov
jnp
into
cmpsl
stos
icebp
cmpsl
dec
cmpsb
jb
test
dec
inc
xchg
and
or
mov
lea
xor
xor
mov
or
nop
lock
lcall
in
imul
mov
outsb
subb
daa
pop
cmp
lcall
and
iret
dec
repz
push
mov
sub
ret
mov
bnd
ret
pushf
xchg
test
dec
pop
jno
xchg
and
andl
pushf
sub
imul
xor
mov
xchg
fwait
pushf
mov
xor
xor
test
xchg
mov
dec
push
push
inc
daa
push
lahf
xchg
pushf
fndisi(8087
das
loope
xchg
sbb
int3
enter
push
ds
loopne
nop
sub
fs
adc
dec
sbb
jo
fidivs
push
rcrl
cmpsl
or
out
loop
mov
adc
in
rorl
pop
mov
loopne
lahf
movsb
insb
pop
fsubl
sbb
in
adc
ss
icebp
jbe
jo
outsb
es
pusha
in
insb
or
in
clc
int3
int
cmc
push
sahf
jg
into
sbb
and
fwait
xor
adc
in
lods
inc
loope
lods
xlat
and
in
js
fwait
dec
aam
jecxz
bound
ret
sbb
ret
jmp
xchg
pop
outsl
flds
jp
xchg
jae
mov
lods
sub
push
scas
ss
ret
lods
mov
ds
xor
lret
xlat
pop
dec
shrl
imul
cwtl
popa
dec
push
imul
arpl
cld
popf
pop
dec
jae
mov
scas
addr16
and
jns
pop
pop
fisubrl
pop
push
std
xchg
loope
cwtl
sahf
cltd
js
cwtl
cwtl
mov
clc
stos
pop
sbb
insl
sbb
jge
pushf
jbe
mov
inc
sbb
fidivl
add
jp
xor
jp
pop
inc
in
xchg
mov
enter
orl
lea
outsb
jbe
dec
test
les
subl
pop
sbb
mov
inc
xchg
mov
bound
subl
pop
pop
adc
mov
shll
adc
mov
test
je
ret
out
mov
or
bnd
mov
adc
cmp
pop
dec
outsl
jb
bound
fdivrs
mov
mov
test
bnd
pop
aaa
test
and
jo
xchg
mov
repnz
push
xor
mov
dec
fwait
mov
and
clc
rcrl
cmp
lcall
jnp
mov
or
bound
pusha
ja
dec
pusha
cwtl
insb
xor
cmp
arpl
dec
xlat
and
push
lock
rcll
cltd
and
push
dec
cltd
fdivs
in
mov
cmpl
out
ds
repz
cwtl
test
lods
mov
or
mov
fcmovnbe
xor
jo
push
cmp
jle
insb
es
pop
add
lock
loopne
mov
jg
pop
pushf
add
dec
adc
pop
arpl
xchg
xchg
push
push
and
jl
js
sbb
loopne
hlt
inc
cwtl
outsl
loope
js
push
push
jge
jge
push
add
sbb
adc
add
sbb
rcl
cld
icebp
ret
cld
sbb
xchg
mov
xor
pop
outsl
mov
pushf
ss
jae
test
cltd
pop
in
push
mov
scas
dec
ljmp
sti
fisttps
sub
inc
pop
fidivrl
mov
das
jg
sub
outsb
cld
popa
int3
pop
mov
leave
pop
outsb
pop
aad
loopne
jmp
js
pop
cltd
pop
push
pop
pop
pusha
pop
pop
pop
inc
lods
adc
mov
fldcw
out
cwtl
push
call
insb
bound
xor
adc
cmp
cmp
mov
and
dec
int3
jecxz
jbe
and
cltd
and
leave
sub
jp
sub
inc
jg
in
insb
mov
into
test
inc
repz
xchg
stos
adc
stos
mov
mov
xor
ljmp
mov
jo
mov
cmp
jl
fsubr
icebp
repz
adcl
lea
stos
mov
push
sbbb
and
hlt
pushf
mov
mov
dec
hlt
push
std
ja
loopne
loope
bound
xchg
jl
and
je
movsb
cs
loopne
cld
insb
xor
pop
in
cmc
movsb
mov
fldcw
pop
lcall
ljmp
and
jno
popa
push
pop
loope
sbb
lods
shlb
add
mov
fstps
dec
fsubrl
mov
xchg
add
mov
mov
push
sbb
pop
jg
inc
mov
nop
pop
jge
jmp
test
repnz
cs
lock
testl
mov
scas
push
addr16
test
test
cwtl
pusha
js
mov
xchg
add
bnd
mov
cli
push
mov
pop
test
fisubrs
xchg
fildl
icebp
pop
xchg
mov
inc
ror
ds
sub
cmp
and
pop
call
or
xor
lret
inc
into
mov
jecxz
mov
jbe
sub
and
push
jo
pop
imul
mov
fldcw
subl
orb
pop
in
mov
xchg
fdivl
jmp
xchg
pushf
outsb
std
cs
lods
andb
xchg
cltd
and
je
jno
pop
loope
mov
inc
or
cmp
jb
cmp
adcb
in
in
negl
out
andl
pop
mov
insb
dec
ret
gs
jb
bound
push
pusha
inc
jae
xor
pop
dec
lods
insl
fsub
inc
pop
sub
mov
aas
pop
outsl
cmp
dec
insb
or
and
out
mov
ret
mov
pusha
xlat
loope
mov
cmp
and
loop
lock
test
clc
jno
jle
outsl
mov
pop
test
mov
daa
push
jmp
fldl
mov
bound
fdivs
inc
inc
inc
mov
aam
sub
mov
test
inc
add
inc
in
fisubrl
pusha
cmp
test
inc
fcmovbe
rcrl
pop
fsubl
in
shrl
inc
mov
loope
dec
sub
and
pop
int
push
imul
adc
pop
pop
pop
pop
pop
pusha
pop
push
and
clc
inc
imul
xchg
adc
fs
pop
and
fwait
xchg
cmp
mov
mov
lds
in
push
xchg
add
movl
movsl
shr
je
in
subb
in
lds
xor
cmpsb
or
clc
sbb
fs
sbb
inc
jecxz
lods
xor
jns
mov
cli
fsubrl
icebp
out
jg
jae
subb
loope
xor
fstpt
mov
mov
mov
jecxz
jb
in
imul
mov
aaa
xchg
mov
or
push
mov
cmpb
dec
es
mov
jl
xchg
pop
jnp
push
fwait
mov
adc
mov
fs
cmpsl
mov
hlt
cwtl
and
fisttpl
mov
addl
cmp
mulb
xchg
ljmp
xchg
inc
sub
sbb
xor
xchg
fwait
mov
cmpb
mov
lock
or
pop
scas
fstps
and
mov
lret
and
cwtl
pusha
or
bound
inc
cmp
cwtl
lea
rolb
xchg
popa
xor
mov
mov
fs
fs
icebp
fwait
jecxz
adc
into
orb
ret
cltd
stos
cwtl
imul
mov
jge
sub
add
jae
test
mov
js
xor
sahf
sarb
pop
sbb
sbb
mov
pusha
xor
sub
subb
mov
stc
inc
add
lods
lea
xchg
lods
insb
js
mov
cli
dec
mov
rorl
mov
or
lcall
mov
ljmp
loop
mov
je
insb
adc
cmp
jbe
inc
stc
fsubrp
dec
mov
add
outsb
test
push
mov
mov
aad
mov
push
adc
cwtl
movsl
shr
jne
mov
js
push
xchg
dec
sbb
jo
lock
cld
imul
mov
push
fsubs
clc
mov
aad
xchg
sbb
scas
dec
int
cmpsb
loope
jne
jp
or
mov
mov
pusha
mov
push
fs
and
jecxz
loope
push
pop
mov
pop
or
mov
adc
jmp
sbb
ret
insb
outsl
mov
sub
lods
sti
icebp
int3
fs
lcall
scas
xchg
data16
js
mov
rcrl
stos
xor
mov
lods
ljmp
xchg
scas
add
mov
in
scas
xchg
inc
ror
cmp
in
pop
mov
sbb
outsl
inc
shlb
lahf
pop
in
sbb
js
fs
cmpsl
pop
inc
subb
inc
and
xor
jl
fisubrl
pop
pop
inc
inc
jnp
push
fnsave
xor
jnp
lret
dec
dec
inc
push
jnp
add
push
jnp
test
repnz
and
mov
sti
ret
mov
sbb
ljmp
or
adc
inc
test
leave
movl
imul
sub
movsb
jg
test
pop
js
pop
push
pop
faddl
iret
or
shr
nop
or
out
sub
jbe
mov
jg
arpl
dec
movsl
bound
jo
dec
xchg
xchg
in
pop
xor
jb
mov
arpl
outsl
mov
mov
test
bound
cwtl
inc
stos
test
jg
icebp
movsb
lds
pop
cwtl
clc
in
mov
rcrl
pop
pop
jecxz
cwtl
pusha
ja
adc
andl
sub
in
insl
pop
pop
push
jecxz
pop
mov
andw
lret
push
or
or
and
dec
dec
add
idivb
insb
pop
inc
sub
add
sub
adc
mov
inc
orl
fistps
je
cld
in
adc
ss
dec
fsubl
pop
call
dec
in
jo
aad
jb
les
jmp
jo
xchg
mov
sbbb
rcrb
push
sarl
rcrl
pop
fs
xchg
sub
loope
inc
jl
xchg
mov
arpl
adc
fsubrl
lock
fdivs
mov
in
in
in
mov
push
pop
xor
es
push
int
jp
mov
dec
pusha
xchg
sbb
mov
sub
and
popa
addr16
push
mov
push
and
mov
xchg
sub
adc
xchg
xchg
xor
adc
adc
insb
pop
es
pusha
fwait
cwtl
mov
arpl
or
ss
or
xorb
jns
push
je
call
fiaddl
mov
shrb
roll
in
and
shlb
pop
xchg
cld
cmp
insl
ja
pop
cld
sub
dec
aad
rorb
popa
push
repnz
cmp
inc
iret
subl
lods
mov
repz
push
pushf
add
test
xchg
pop
shl
mov
testb
adc
ljmp
jecxz
and
test
mul
jmp
lcall
js
int
pop
fcoml
dec
mov
test
push
pop
dec
addl
sub
and
push
mov
stc
data16
mov
push
push
push
mov
popf
and
lret
mov
and
pusha
stos
test
cmp
add
cmpsl
pop
push
and
stos
add
inc
lods
cmpxchg
lods
mov
inc
jecxz
jle
scas
ja
mov
shlb
inc
adc
sub
pop
and
shrb
fisttpll
cmp
dec
insb
pop
sub
rcl
adc
dec
shll
mov
call
mov
xchg
mov
dec
and
pop
xchg
bound
xor
sub
scas
aam
outsl
jmp
lcall
ljmp
mov
das
jg
imul
outsl
hlt
mov
adcb
add
subl
push
pop
or
xchg
insb
push
hlt
or
jno
sbbl
pop
mov
ds
mov
jecxz
popa
sarl
dec
inc
aad
pop
adc
in
lds
pop
jno
mov
mov
sub
mov
push
shrb
sbb
pop
push
out
sbb
gs
fnstenv
pop
inc
aam
out
test
scas
popf
mov
je
xor
cld
xor
addr16
test
ret
mov
jp
xor
xchg
stos
push
mov
jo
jmp
popa
sub
sub
xchg
push
popf
jnp
push
outsl
cmp
popa
or
repnz
call
push
mov
test
in
mov
mov
or
pushf
or
cwtl
push
push
cmpsb
fcmovbe
push
and
loop
fcompl
add
insb
loopne
bound
pushf
mov
mov
push
dec
ds
pop
mov
xchg
xchg
js
cmp
test
xchg
stc
loope
xchg
pop
pop
fcmovnu
iret
mov
pop
daa
imul
adc
pop
pop
cmpsb
lret
daa
ret
fbld
addr16
cwtl
and
cld
daa
fabs
stos
insl
inc
movsl
or
mov
stc
popa
pop
mul
lea
subl
pop
pop
adc
imul
push
popa
mov
sahf
fs
add
xchg
sub
xor
rcrl
lods
jae
jle
xchg
cmp
not
mov
inc
dec
or
aas
mov
cmp
sbb
popf
push
shll
sbbb
push
test
fs
inc
mov
cmpsl
ficoms
push
jl
aad
data16
xchg
rolb
jae
inc
pop
fisubl
sub
jns
addr16
fwait
pop
fsub
lods
jge
ljmp
pushf
mov
fnstenv
orl
insl
gs
fsubl
test
sub
in
sbb
imul
xchg
pop
xchg
shrl
jne
xchg
pop
mov
outsb
data16
in
sub
popa
xchg
push
dec
jb
jl
loop
xor
pop
test
mov
jl
jnp
iret
mov
jp
faddl
out
lcall
jmp
jae
adc
jp
xchg
fsts
push
cltd
mov
add
mov
aas
cli
mov
jae
xchg
push
xor
xor
rep
insl
sbb
dec
and
data16
repz
jle
sub
bound
lcall
pop
insb
mov
inc
jl
mov
in
cs
out
xor
push
jecxz
repz
popf
cmp
addl
inc
push
aas
hlt
xor
sub
xor
xor
inc
pop
xchg
fbld
int3
clc
std
lods
inc
and
cmp
sub
sub
and
insb
mov
lods
in
das
bnd
push
fistpl
push
mov
inc
lods
sti
xchg
inc
xor
dec
aad
ret
int3
arpl
inc
pop
inc
mov
aad
div
test
mov
push
popa
das
sbb
outsl
jge
addl
xchg
sti
mov
bound
popa
popa
jb
das
sub
fwait
xchg
fsubr
addr16
xchg
stos
sbb
push
lods
int3
mov
in
fwait
pop
rolb
loopne
push
test
stos
cltd
push
pop
jo
mov
divl
lahf
outsb
imul
es
pop
inc
jle
mov
in
push
add
popf
xchg
js
sahf
test
addl
sub
shrb
std
cwtl
push
rclb
inc
jns
aam
jecxz
loope
pusha
mov
jo
cwtl
imul
ljmp
dec
ret
jecxz
fdivr
subb
mov
popl
xchg
pop
jg
adc
clc
jge
jo
cmp
and
mov
lods
sbb
inc
lea
gs
push
xchg
sbb
loope
js
cmpsb
jmp
mov
push
fs
lods
cwtl
insb
mov
pop
addl
jbe
sbb
inc
bound
pop
cmc
pusha
cmpsl
stos
add
pop
pop
ja
cltd
pop
mov
mov
rolb
and
or
fdivrs
in
lods
cmpsl
push
loope
pop
and
dec
mov
fstps
xor
in
inc
jl
mov
sbb
pop
pop
mov
pusha
test
cli
js
andb
xor
movsb
pop
stc
enter
pop
imul
sbb
and
mov
pop
sub
inc
es
clc
xchg
cwtl
push
stos
or
sbb
xchg
push
cmp
xchg
insl
jae
xor
mov
rcr
popf
xchg
enter
sbb
pushf
int
mov
xchg
jmp
or
and
lret
dec
sub
lods
data16
sbb
test
lea
push
outsb
fwait
xchg
idivb
mov
pusha
sub
push
outsb
and
xorl
data16
bound
xor
dec
bound
sub
xor
xchg
mov
insb
aad
pop
int
stos
scas
out
dec
pop
jbe
and
ss
cld
xchg
xchg
adc
or
and
pop
dec
mov
cwtl
inc
mov
xchg
cmovs
mov
mov
push
test
xchg
popa
mov
xor
loope
insb
add
lret
lcall
stos
aaa
pop
int
inc
inc
std
and
cwtl
push
sbb
inc
pop
sub
fxch
fwait
ret
push
lock
adc
xlat
jmp
cmp
aas
jb
lds
insb
add
imul
jle
mov
imul
pop
bound
add
cmc
sahf
push
insl
xchg
shl
add
andl
sbb
aad
jg
jg
addr16
fistpll
repz
xchg
loop
ficoml
fldcw
push
fs
popf
pusha
push
mov
mov
ret
mov
push
cmc
sar
ret
data16
dec
xchg
xchg
cmp
mov
push
push
mov
xchg
call
dec
mov
xchg
dec
hlt
cld
pop
js
fsubl
jecxz
in
ljmp
cmp
cmp
loope
pop
pop
sub
inc
insb
outsl
inc
stos
call
jnp
jbe
and
mov
jmp
popf
in
sub
fidivrs
sbb
sbb
dec
push
adcl
ret
fs
iret
pop
fs
int3
pop
mov
pop
inc
jo
sbb
pop
out
bound
je
loope
mov
cmp
xor
and
pop
aad
xor
mov
inc
insb
push
push
xor
xor
inc
pop
sub
and
je
mov
push
jne
pop
fnsave
incb
popf
push
nop
fiaddl
mov
mov
pusha
xor
jl
pop
and
shrb
sub
sbb
push
cwtl
test
je
fstps
call
xchg
shl
jbe
lds
sar
adc
xchg
mov
sahf
push
ret
or
push
mov
lcall
dec
ljmp
out
xchg
ss
in
icebp
subb
lods
pop
dec
int3
iret
jecxz
gs
push
or
fucom
rcrb
pop
ja
and
popf
pop
mov
icebp
out
dec
stos
push
xor
mov
pop
insb
lods
dec
dec
in
sbb
je
jp
ret
pop
fimull
jno
ret
mov
je
mov
test
lods
push
int3
mov
dec
pop
push
push
fs
inc
mov
and
in
add
cld
in
jbe
mov
lahf
or
shll
out
cmp
fcmovbe
pop
cmpsb
sahf
fsubs
push
pop
cwtl
daa
adc
mov
and
jo
pop
inc
mov
pushf
cmp
mov
int3
or
pop
arpl
jp
rclb
mov
imul
fidivs
test
pusha
xchg
out
mov
sahf
pop
call
inc
sbbb
inc
cmp
out
sti
je
loop
shl
xor
push
sarb
mov
cmc
inc
loope
outsb
pop
jg
push
inc
leave
insl
dec
repz
lret
insb
bound
pop
lcall
xor
and
inc
sbb
mov
dec
mov
push
mov
fmull
enter
dec
fsubr
pop
xor
jl
cmp
int
xor
cld
movsl
push
addl
cltd
mov
fistpl
popa
inc
sub
mov
mov
addl
pop
jl
jle
imul
lods
pop
outsb
in
fdivs
into
xorl
out
cmp
cmp
out
xchg
jp
sahf
pop
sahf
hlt
lret
test
and
scas
jno
fdivl
push
mov
dec
and
xchg
adc
lcall
cmp
arpl
push
mov
cmp
arpl
add
xchg
mov
aad
mov
xchg
push
shl
inc
mov
inc
mov
dec
scas
test
pop
inc
imul
das
cltd
dec
pop
les
cwtl
mov
push
das
push
add
jbe
lock
cli
test
mov
scas
aas
jo
mov
dec
add
imul
test
mov
mov
outsb
lahf
lret
sub
lret
jno
int
pop
jo
insb
pop
push
sub
stc
enter
sbb
mov
lock
fstpt
jg
mov
push
test
imul
ss
lods
movsl
ss
xor
sbb
imul
xchg
add
xchg
cmp
xchg
imul
push
ja
js
mov
mov
pop
inc
add
bound
aaa
jns
pop
shl
arpl
sbb
push
jecxz
pop
jmp
fsub
js
div
mov
pop
mov
popf
jl
cmpb
fisubl
mov
sbb
outsl
sbb
mov
enter
cmp
filds
ljmp
pop
rolb
fnsave
sbbl
xchg
stos
xchg
adc
outsb
xor
xchg
inc
ss
iret
ss
scas
clc
cli
adc
xor
bound
scas
int3
movsl
cwtl
loopne
push
pop
jge
xchg
inc
bndldx
push
mov
movsb
enter
push
xchg
push
int3
into
adc
or
aam
mov
cs
jo
sti
inc
mov
mov
sarb
inc
fisubl
dec
pusha
xchg
rcrb
dec
pusha
test
add
push
js
shl
call
adc
mov
jne
mov
ficomps
cltd
sbbb
test
test
std
sbb
push
adc
pop
xchg
inc
mov
sbb
add
or
jae
int
outsb
stos
inc
pop
dec
xor
push
pop
mov
popa
push
imul
pop
adc
lcall
mov
pop
test
push
mov
insl
mov
dec
popf
jmp
imul
mov
subl
loopne
adc
aad
sbb
inc
hlt
mov
gs
jge
or
mov
lahf
or
push
lds
push
pusha
push
mov
mov
dec
xchg
ss
mov
inc
orb
fadd
mov
add
shlb
fwait
scas
jno
lret
pop
pop
pusha
in
mov
jp
call
fwait
iret
ljmp
dec
std
pop
and
mov
subb
mov
lret
subb
test
loop
sbb
mov
frstor
fstpl
mov
sbb
push
fistpl
mov
inc
hlt
fsubrl
movaps
cwtl
fs
iret
mov
sub
inc
fs
lret
cld
test
pop
mov
lahf
insb
cmp
icebp
cs
pop
fstp
adc
mov
cmp
jo
test
inc
push
pop
sub
leave
ljmp
mov
mov
addr16
mov
scas
rolb
jg
xchg
ljmp
xor
lods
xchg
inc
add
sbb
xor
lock
int3
jmp
scas
roll
pusha
inc
mov
mov
fsubs
mov
dec
push
jo
jb
jo
mov
cmp
jae
jnp
adc
in
test
adc
outsb
test
nop
cmp
call
pop
stos
inc
adc
cmc
dec
orb
push
add
hlt
jmp
test
push
mov
adc
cwtl
mov
cmpsl
mov
mov
ja
das
inc
add
mov
loope
cld
dec
imulb
sbb
outsb
add
pop
outsb
frstor
mov
adc
xorl
stos
jo
jne
jmp
ret
in
scas
xor
lcall
aam
xchg
push
lret
popa
push
loopne
repnz
ds
cmc
int
jne
jae
fdivrl
shlb
out
loope
les
push
push
push
cmp
sub
sbb
jmp
or
ds
mov
stc
imul
jb
or
mov
insb
test
mov
adc
in
gs
jns
sti
or
nop
iret
cltd
popa
mov
xor
lret
roll
sti
mov
xchg
push
lahf
pop
std
int3
pop
jg
lcall
pushf
pushf
cwtl
cltd
mov
enter
xchg
xor
sbb
test
adc
pushf
inc
int
pop
lods
stos
ret
jb
sub
dec
jl
inc
adc
xchg
mov
sbb
mov
xchg
xor
mov
lods
push
cmp
sbb
mov
push
faddp
pop
bound
int
stc
and
scas
scas
stos
push
mov
inc
aas
and
andb
rcr
repnz
sbbb
test
jle
orl
movsb
add
mov
pusha
inc
mov
mov
lods
loope
iret
int3
gs
jecxz
pushf
xor
mov
adc
rol
pop
int3
mov
loop
push
lret
popf
mov
pusha
inc
mov
pop
aam
mov
add
movsb
or
in
sti
add
jbe
insb
jb
jno
or
mov
insb
adc
loop
sbb
shlb
bound
and
xchg
and
imul
or
fs
lods
jae
inc
pop
jecxz
test
repz
test
dec
inc
mov
in
pusha
dec
push
negb
mov
sub
inc
int3
in
aaa
jmp
dec
loop
add
lret
sarl
mov
les
push
stc
daa
lcall
in
and
adc
je
iret
out
inc
shrl
out
pop
mov
pushf
outsb
inc
cwtl
cltd
inc
outsb
mov
sbb
xchg
sbb
dec
jns
jp
mov
lods
outsb
hlt
addr16
mov
add
sub
fnstcw
js
xchg
arpl
pop
arpl
inc
adc
int3
push
and
cmp
pop
repz
into
jl
lods
jge
mov
mov
int3
adc
xchg
push
jno
fs
andb
dec
jl
xor
jb
int3
xchg
inc
shrb
pop
sbb
dec
xchg
outsb
xchg
xor
and
andb
jmp
inc
jle
in
fbld
pop
xor
lods
fwait
jae
adc
jbe
xorl
or
sti
pop
mov
sbb
xor
or
repz
int
int
cmp
fildll
mov
icebp
pop
je
std
cmp
cmc
dec
jmp
mov
push
rolb
mov
scas
inc
lea
jg
xor
or
mov
xchg
jl
fstpl
cld
xchg
aad
aam
ja
popf
cmp
js
mov
mov
push
cmpsl
add
mov
adc
popf
stos
cld
jp
hlt
ret
jns
in
jle
test
xchg
mov
sahf
mov
sub
addr16
int3
je
xor
jge
fldcw
aas
lahf
loopne
lcall
add
sbbl
cmp
inc
jo
jae
jne
sti
mov
rorl
mov
pop
cmpsb
xchg
xchg
mov
movsb
loope
enter
flds
lock
mov
pop
dec
push
in
shrb
js
roll
lock
aas
test
mov
xchg
cmp
xor
pop
dec
jg
adc
outsl
push
cwtl
sbb
loop
push
lock
pop
hlt
mov
xchg
mov
mov
and
out
push
jmp
cld
outsb
inc
test
in
jmp
inc
mov
fstps
jnp
jnp
arpl
sub
aam
mov
sub
mov
mov
imulb
jl
stos
test
test
data16
jno
push
js
inc
jno
xchg
fildll
lret
dec
adc
xchg
aad
cmpb
and
aad
lds
cmp
dec
push
pusha
loope
cmc
insb
mov
sbb
cmp
ss
jns
push
adc
sub
int
pusha
daa
mov
adc
or
pop
add
jne
sbb
pop
lcall
mov
cmp
dec
int
jbe
push
and
lock
dec
jns
sbbb
andb
int
add
sub
cwtl
pushf
mov
enter
subb
ret
cli
aaa
ret
push
mov
js
dec
out
sbb
insb
push
mov
fiaddl
sbb
scas
jge
mov
inc
sub
bound
int3
cmpsl
sahf
inc
cli
ss
pop
rclb
arpl
lcall
pop
xchg
pop
mov
outsl
jp
fcoms
stos
and
pop
inc
push
stc
inc
sub
nop
in
nop
pop
xchg
and
adc
sbb
mov
sti
pusha
cltd
cmp
mov
push
cmp
mov
pop
jl
ficomps
jge
mov
push
clc
add
jg
pop
push
dec
test
jmp
test
cwtl
mov
sub
push
ds
scas
lret
adc
das
test
out
cld
test
pop
loope
pop
sub
cld
sub
ljmp
dec
mov
stos
scas
cmp
push
cwtl
cmp
repz
fildl
hlt
sub
mov
test
out
inc
or
inc
adc
mov
dec
std
enter
pusha
sub
imul
mov
pop
nop
dec
xor
pop
sub
jno
and
or
fs
je
inc
jp
push
stos
mov
and
lock
mov
pusha
loope
adc
lds
cli
xor
push
pushf
jl
pop
fisubs
sub
out
fs
push
test
push
mov
nop
scas
pop
sbb
enter
stos
outsl
jp
sub
jns
mov
jmp
adc
jmp
mov
or
sbb
mov
bound
insl
insb
pop
jns
add
outsl
iret
pop
pop
lds
jl
lea
pushf
sti
inc
inc
inc
cmp
ret
js
and
es
int3
ret
dec
jnp
and
and
mov
push
in
ret
hlt
aam
fistl
rcrb
rorb
push
push
push
xchg
movsb
fldt
mov
mov
ja
mov
mov
je
xor
jl
sbb
dec
lock
int3
pop
xchg
lahf
jge
iret
lods
mov
push
jmp
jl
mov
rcrb
push
shrl
mov
pop
cmp
dec
inc
test
pop
out
int3
ret
xlat
xlat
jg
test
push
shlb
test
adc
sbb
lea
mov
loopne
add
int3
xchg
or
jecxz
or
lcall
sub
aam
pop
call
pop
rolb
push
lods
sbb
sbb
ss
mov
fcompl
shrl
test
xchg
mov
sub
sarl
sbb
dec
inc
popa
pushf
dec
mov
or
fs
mov
pop
or
jg
or
sbb
push
pop
xchg
adc
int3
sub
inc
in
and
mov
cltd
mov
js
sahf
inc
sub
ja
scas
inc
sarb
rcll
cwtl
push
fcompl
lods
jns
push
cltd
lahf
cmc
test
jecxz
cmp
addl
xor
mov
cltd
arpl
inc
push
aaa
out
mov
mov
fistl
ficomps
int
dec
xor
leave
cwtl
test
test
mov
push
out
lcall
xor
icebp
mov
lret
fistps
ret
xchg
dec
repz
dec
inc
mov
jo
and
fisubl
icebp
ud2
jns
stc
sbb
push
enter
mov
push
and
cmpsl
ret
inc
lods
test
rorl
mov
dec
push
fs
fiaddl
stos
cmp
out
sub
sbbl
mov
mov
sub
adc
or
loope
dec
xchg
jno
sub
adc
insb
mov
adc
ret
pop
dec
fdivr
adc
pop
int3
outsb
loop
fcompl
hlt
pusha
outsb
mov
mov
lahf
push
dec
call
call
sahf
jg
imul
xchg
pushf
adc
sub
xor
xchg
mov
into
in
push
sti
das
and
mov
sbb
jp
push
movsb
mov
mov
cld
add
lcall
fwait
pop
jnp
test
clc
adc
dec
inc
cltd
and
icebp
call
outsb
orl
pusha
int3
scas
fcoms
inc
ret
ret
outsb
push
gs
sbb
push
adc
stos
jbe
cld
adc
daa
lret
push
cmp
push
inc
jo
ljmp
popf
mov
push
adc
pop
sbb
addr16
loop
clc
mov
push
or
clc
sub
js
js
sahf
imul
stos
fcoms
mov
pushf
out
sbb
fwait
add
ds
dec
jo
adc
sti
fbstp
loop
popa
js
xchg
stc
frstor
jo
push
xchg
push
ja
sbb
sbbb
aaa
loop
cwtl
loopne
mov
cmp
ja
outsb
scas
mov
mov
mov
add
insb
arpl
aad
lahf
cmpl
fcmovne
pop
stos
cmp
xchg
je
fwait
jo
je
aas
mov
mov
insb
adc
mov
push
cltd
jo
push
mov
inc
jg
lahf
inc
mov
addr16
dec
cmpsb
sub
ds
sub
xchg
test
dec
fidivs
push
push
cmpsl
jae
xor
jns
dec
sti
or
scas
pop
dec
cli
fs
push
imul
jae
jo
cmp
call
aad
sbb
jo
shll
sub
push
and
jmp
jp
dec
imul
mov
push
mov
push
sarb
movsb
adc
negl
sbb
pop
push
fisubrs
loop
push
mov
fcmovbe
mov
inc
adc
pop
int
cmp
les
sbbl
andb
insb
pop
adc
adc
test
cmpsl
jbe
inc
lock
jno
in
xchg
call
mov
pushf
clc
jnp
sub
pop
dec
mov
pop
push
push
fstps
stos
mov
outsb
bswap
loopne
test
jle
jne
dec
pusha
fucomp
call
lahf
stc
jb
cmpsb
cwtl
mov
fs
pop
mov
pushf
inc
cmp
xor
addr16
lret
out
imul
loope
outsl
mov
push
outsl
mov
in
cmpsb
stos
cwtl
je
ljmp
cwtl
jmp
hlt
mov
jl
xchg
fs
gs
cld
lds
arpl
pop
sub
xchg
mov
insb
gs
cmp
push
dec
sbb
dec
mov
sub
call
jg
popa
mov
bound
mov
popa
js
jae
pop
ficoms
or
icebp
in
cld
jno
pop
inc
jnp
and
addb
add
inc
bound
pop
mov
pop
shlb
loope
push
jl
mov
shlb
popf
jo
jl
mov
popf
push
jp
pusha
sub
jl
dec
or
icebp
xor
push
and
pusha
adc
add
inc
push
lret
repnz
paddsw
or
xchg
popf
xlat
lret
aam
arpl
lret
pop
mov
cli
pop
dec
imul
xorb
gs
push
pop
pop
test
sbb
aaa
inc
inc
mov
sub
pushf
jge
mov
popf
jo
push
add
mov
push
into
pop
loopne
inc
pop
inc
mov
pop
sahf
fstl
and
out
sbb
or
jle
cmpsb
pop
cmp
data16
loopne
jg
sbb
push
mov
and
inc
push
jne
insb
mov
push
cwtl
mov
insl
bound
pop
addr16
sbb
push
cmp
inc
les
insb
stos
icebp
pop
ret
pop
pop
mov
iret
imul
adc
cmp
test
nop
mov
shll
mov
mov
xchg
mov
das
sub
lret
inc
fs
test
fstpl
imul
pop
std
jecxz
jb
cmp
addb
outsb
mov
xchg
addr16
das
xchg
adc
int
lahf
lods
push
add
pushf
or
shll
push
imul
int
imul
dec
rcr
mov
in
test
adc
add
popa
sbb
cmpsb
and
jge
shll
mov
pop
xchg
cmpsl
mov
jecxz
xorl
pop
shr
cmpsb
rcr
std
xor
in
pop
rdtsc
jno
mov
movl
jge
mov
andl
fstpt
dec
int3
gs
imul
push
xchg
push
xchg
movsb
jp
or
mov
mov
scas
mov
xchg
push
mov
push
push
js
jecxz
pop
sub
dec
mov
sbb
fistpl
fxch
ss
fsubrl
xchg
test
test
or
jo
int
int3
inc
jo
int
push
jp
cmp
lods
loop
iret
bound
pop
clc
mov
add
in
cld
out
push
imul
mov
pop
add
fidivs
subb
jge
push
adc
xor
popa
inc
imul
rcrl
stos
or
fisubrl
jbe
sub
lahf
je
cmp
inc
test
sbb
wbinvd
dec
in
cmp
out
xor
push
notb
and
addr16
cmp
xor
outsb
jmp
xor
lahf
jne
psllw
mov
mov
scas
adc
call
cmp
out
lcall
mov
fstl
aam
cmp
jp
rol
jg
mov
mov
push
fbstp
mov
loopne
add
call
sbb
fucomip
pushf
xchg
stc
mov
mov
or
fs
add
jp
out
icebp
jl
and
sub
enter
ds
inc
outsb
xor
cmp
and
xchg
push
arpl
inc
xor
or
or
test
roll
jmp
fistl
addr16
mov
xchg
jbe
pusha
lahf
sbb
test
insb
aaa
mov
popf
in
aaa
pop
mov
jb
imul
insb
sub
and
je
inc
xchg
jno
fstps
inc
xor
lods
sub
mov
hlt
scas
cs
insl
jb
loope
imul
xchg
fdiv
orb
jnp
jmp
loope
pop
mov
orb
sbb
cld
fidivs
cmc
dec
mov
cmp
js
jo
push
enter
jle
sbb
xchg
cmp
lods
gs
pop
inc
push
dec
aam
loop
ret
xchg
lcall
iret
mov
sbb
stos
scas
mov
push
dec
fnsave
lds
xchg
insl
insb
aad
ja
cli
pop
mov
bound
gs
push
lcall
stos
jmp
mov
xchg
jbe
arpl
jp
lea
push
or
outsl
pop
arpl
addr16
xorl
gs
stos
inc
in
xchg
test
test
pusha
push
push
out
loopne
test
mov
cmp
sti
popf
pop
add
pop
push
sub
jle
inc
out
cmp
mull
sub
mov
loop
sub
mov
mov
popa
inc
and
aam
mov
mov
fwait
jnp
stc
icebp
mov
popa
sti
movsb
push
inc
xchg
divl
or
lret
adc
inc
js
pop
fstl
pushf
ljmp
cltd
xchg
leave
icebp
stos
cwtl
jne
dec
push
mov
dec
hlt
das
jle
imul
aaa
loopne
mov
loope
jns
fnsave
push
dec
adc
bound
xchg
fsubs
adc
daa
insb
fistl
pop
aad
popf
leave
addr16
pop
leave
inc
imull
notb
mov
sbb
xor
ds
loopne
push
push
inc
ret
push
sub
pushf
mov
and
bound
loopne
sub
adc
or
out
in
mov
mov
adc
pusha
nop
sarb
or
xor
mov
in
popa
js
incl
mov
pusha
les
fildll
ljmp
sbb
mov
adc
rol
jge
pop
pop
cmp
aad
addr16
sahf
nop
sub
insl
mov
lcall
pusha
mov
in
pop
imul
push
pop
mov
andb
nop
cmp
mov
jnp
ss
aaa
inc
or
push
loope
xchg
push
in
jae
loopne
pop
gs
dec
out
mov
jg
mov
ja
jecxz
mov
scas
adcl
insl
xchg
mov
lret
pop
nop
jbe
mov
push
test
subl
insb
pusha
xchg
and
xchg
nop
mov
jne
cwtl
icebp
je
inc
inc
jo
jbe
mov
imul
shr
pop
lcall
sbb
icebp
mov
ret
aad
jle
jp
dec
sbb
sahf
pop
imul
lcall
and
test
arpl
scas
jl
cmp
push
bound
imul
fcomp
push
fisttpl
hlt
cwtl
mull
out
push
add
fnstcw
call
hlt
mov
push
movsb
jne
ds
cwtl
xchg
outsl
lcall
in
nop
addr16
popa
jg
test
pop
jb
jle
aad
jmp
inc
out
mov
or
sahf
push
jns
xchg
sub
popa
sub
push
or
cltd
popa
dec
xor
insb
popa
lahf
nop
pop
int3
push
mov
repnz
std
mov
cli
mov
int
sbb
dec
jl
stos
subl
jno
mov
pop
push
test
jno
jbe
clc
pop
cltd
repnz
adc
popa
int
aaa
loope
pop
sub
sbb
in
push
dec
xor
xchg
adcb
movsb
dec
xchg
arpl
dec
mov
mov
pop
xlat
cwtl
mov
lods
xchg
int3
repz
scas
inc
mov
rol
sub
xchg
xor
in
cmp
pop
dec
add
fwait
jg
or
jnp
pop
ja
sub
in
pushf
pop
fisttpll
jecxz
sub
push
mov
pop
test
aam
ret
dec
es
pop
sub
sbb
loop
lea
sbb
dec
mull
inc
mov
outsl
jbe
push
scas
mov
jle
insb
int
fcoms
pop
adc
test
aas
xorl
ljmp
mov
loop
jbe
mov
mov
movsl
xchg
pop
lret
notl
cmp
pop
aaa
stc
pop
push
jl
sbb
xchg
mov
pop
addb
lcall
mov
cltd
push
mov
jbe
sbb
inc
push
jne
and
jae
jb
jno
mull
loope
movsb
mov
shr
stos
xchg
lret
mov
out
insb
pop
mov
scas
sub
pop
adc
loope
pop
imul
inc
xchg
and
lock
stos
bound
xchg
jecxz
scas
ljmp
jns
push
outsl
adc
xchg
dec
mov
inc
pop
push
pop
into
pop
adc
sarb
xchg
sbbl
shrb
jbe
rcrl
jo
xchg
add
out
adc
push
sbb
mov
fwait
or
mov
add
jmp
jmp
push
icebp
jl
push
sbb
cmpsb
je
pop
xor
jbe
repz
sub
pop
adc
or
inc
jg
pop
xchg
test
sbbl
aas
mov
in
push
and
inc
mov
and
mov
cwtl
xor
sub
mov
push
pop
ret
dec
mov
lcall
mov
mov
mov
in
push
into
push
sbbb
pop
cmpsl
movsl
push
xor
lock
dec
daa
in
adc
mov
popf
movsb
arpl
subl
lcall
cmp
lret
lods
push
out
movsl
cmp
xor
pusha
mov
add
mov
call
cmp
js
lcall
pop
lds
js
jns
fs
mov
xor
flds
fs
stc
pusha
sbb
icebp
jo
in
ss
cwtl
xchg
aaa
mov
mov
out
pushf
jle
arpl
jbe
imul
push
and
fwait
mov
pop
leave
jge
mov
jl
pop
in
mov
scas
hlt
jbe
movsl
mov
imul
push
out
out
lcall
pusha
int
sub
subb
push
lcall
jno
es
test
pop
mov
pusha
pop
pop
jne
pusha
imul
adc
iret
mov
aad
mov
push
fbstp
movsl
outsb
cmpb
cltd
jbe
pop
pop
addr16
mov
mov
iret
movsb
jns
cltd
dec
add
loop
pop
loope
xor
nop
mov
xchg
push
mov
lret
in
incb
dec
dec
mov
popa
mov
push
int
cld
clc
pop
or
js
push
adc
or
outsb
daa
and
andl
pushf
jnp
jns
xchg
outsb
adc
jecxz
or
int
jmp
stos
scas
rcrl
add
addr16
jecxz
mov
jp
jge
xchg
mov
jno
inc
ljmp
xchg
repz
dec
mov
mov
mov
lea
into
shll
push
nop
mull
pushf
dec
mov
cmp
loope
pushf
sbb
and
scas
jno
push
fnsave
gs
xor
mov
bound
sbb
or
int
pop
and
daa
mov
jge
push
jnp
into
jmp
mov
push
fisttpl
jns
dec
cli
cmpb
pop
in
lods
jb
jo
and
cli
lods
sbb
cmp
ret
test
inc
imul
jmp
jg
arpl
and
mov
int
mov
jnp
jmp
mov
leave
test
mov
decl
data16
adc
xchg
sti
insl
je
fnstcw
int3
inc
add
push
stos
and
or
add
mov
in
in
jecxz
out
movsl
sbb
ss
in
add
fcmovnb
cmp
jecxz
cmp
xchg
xchg
fidivrs
jg
lahf
nop
sbb
dec
test
fcomps
js
sbb
cmp
addr16
ja
loope
je
inc
push
test
pop
lret
call
pop
inc
inc
insl
jns
test
andl
mov
xor
pop
xor
lcall
pop
cmpsl
fs
and
nop
imul
xor
cmp
and
popa
cmpsl
jge
jle
xchg
sti
adc
xchg
je
jmp
mov
push
pop
push
fsubr
push
xchg
es
repnz
sub
call
lcall
fcompl
insb
loope
push
push
addr16
popf
in
mov
push
fimull
jae
sub
push
add
fldenv
loopne
cli
cmc
outsb
inc
pop
sbb
add
mov
pop
ficomps
sti
sahf
xchg
push
pop
push
fcompl
dec
jmp
cmp
in
aad
cmp
loope
mov
mov
mov
cmp
sub
dec
cwtl
scas
push
mov
mov
push
jp
push
addr16
jno
pushf
lret
pop
shll
shl
ror
jle
out
xchg
addr16
scas
lods
fld
push
mov
fstl
xchg
movsl
cltd
jle
cmp
rcll
pusha
cwtl
and
inc
movsl
cmp
dec
ret
rcll
rcrl
inc
stc
adc
dec
iret
cmpsb
je
pop
subb
ret
loop
mov
dec
in
mov
dec
out
mov
pusha
jo
stos
mov
out
jne
ret
push
test
jae
lock
dec
std
sub
fs
pop
cmp
mov
arpl
adc
sub
push
push
mov
sub
pop
sarb
iret
popa
inc
dec
mov
fisubl
push
call
insl
sahf
addr16
pop
lret
dec
jecxz
sbb
mov
test
call
mov
jbe
push
mov
arpl
inc
pusha
pop
or
inc
popf
add
mov
push
pusha
das
jbe
inc
inc
fs
inc
cmpsl
lods
jl
cmp
bnd
push
mov
daa
dec
scas
pop
dec
and
lcall
sbb
sbb
sub
mov
cwtl
cmp
jnp
jp
sarb
push
push
outsl
hlt
arpl
popa
cmp
popf
cwtl
sub
jnp
sub
jnp
mov
mov
xchg
jmp
jl
loop
cwtl
scas
mov
dec
fsubr
popa
in
clc
adc
jge
or
mov
jge
jo
nop
jmp
cwtl
hlt
push
jge
fs
add
adc
popa
sbb
and
sub
loope
push
subl
mov
js
ds
pushf
adcb
gs
je
pop
in
pop
int3
dec
fucomi
push
push
dec
sbbl
test
lods
add
outsb
test
aad
mov
lret
outsb
mov
mov
in
in
adc
pushf
inc
ljmp
mov
jbe
or
int3
mov
daa
jb
loopne
mov
in
sbb
cwtl
sti
xchg
movsl
fs
jno
inc
and
push
dec
je
sahf
mov
or
dec
jge
jno
ljmp
les
xor
or
jg
push
popf
lods
std
sub
mov
int3
lahf
sahf
movsb
sets
push
lock
movsb
test
mov
into
mov
and
int
test
and
xor
pushf
push
push
int3
pop
dec
add
les
movsb
gs
add
or
loope
pusha
sbb
inc
loop
pop
sub
ret
mov
xchg
mov
in
dec
sbb
jmp
cltd
mov
int
pop
clc
and
mov
inc
jmp
and
push
mov
mov
int
add
jnp
imul
push
or
scas
fs
sbb
call
mov
stos
das
stos
ss
jecxz
sbb
arpl
mov
adc
pop
cld
out
push
loop
xchg
addr16
sahf
lahf
mov
lahf
outsl
nop
sub
popf
frstor
insl
mov
or
cmpsb
cmovo
sub
adc
std
and
sahf
jle
orl
jg
cmpsb
sub
daa
movsb
movsl
in
jle
pop
popl
jne
pop
cli
inc
test
mov
jmp
sbb
test
addr16
and
aas
xchg
and
inc
or
imul
cs
cmp
pop
xchg
loope
and
test
scas
push
rclb
mov
xlat
jl
mov
stos
int
aad
dec
jnp
xchg
xchg
cmp
cld
jns
mov
in
or
in
movsb
imul
imul
jg
xchg
loope
cmp
sbb
je
sub
scas
xlat
imul
or
insl
inc
int3
ja
fisubl
push
add
out
push
test
jle
jns
xchg
jle
and
ss
pop
sub
jg
pop
xchg
pop
aad
testb
jl
inc
fidivrs
pop
xchg
fmuls
xchg
mov
xlat
arpl
test
fwait
inc
loope
in
xor
popa
push
fistl
inc
aad
jnp
scas
inc
jnp
xor
stc
jo
xchg
orl
xor
bound
xchg
jb
mov
js
cmp
lret
sub
lcall
mov
icebp
sub
push
jbe
sub
stc
jo
sub
in
test
aaa
andb
mov
scas
dec
aad
jb
sbb
fcoms
aaa
sahf
jns
test
rcr
jns
mov
call
pop
js
ja
sahf
push
sbb
dec
add
adc
pop
xchg
pop
aad
stc
jns
pushf
pusha
sub
sub
data16
cs
ja
cmpsb
mov
sbb
pop
jl
into
fs
inc
adc
addr16
lret
mov
cmp
cwtl
call
mov
loope
ljmp
popa
stc
lods
repz
mov
pop
pop
push
sub
inc
dec
mov
jae
arpl
inc
xlat
std
test
xor
xor
xchg
cmpsl
dec
in
imul
push
jg
push
pop
repnz
cmp
or
mov
xchg
mov
mov
bound
stc
outsl
pop
fmuls
rcll
aam
add
lahf
loopne
jne
xorl
mov
addr16
dec
lret
pop
repz
inc
pop
push
dec
repz
lret
inc
mov
stos
push
lock
imul
pushf
mov
int3
psrlw
loop
out
inc
mov
fwait
loopne
jbe
ret
jns
cmpsl
pop
popa
shll
xchg
mov
xchg
push
dec
cs
sahf
inc
pop
cld
iret
inc
and
sbb
push
stos
out
js
loop
in
iret
pop
aam
jg
lahf
sbb
jns
mov
incl
clc
jbe
inc
sub
push
test
iret
pop
jbe
insb
pop
push
pop
repz
outsb
ret
mov
lahf
jbe
addr16
pop
cmp
mov
inc
sbb
sbb
push
jl
bound
mov
pop
xchg
xlat
ror
lods
mov
pusha
fsubl
pop
int
int
lods
push
pop
fidivrl
movsl
arpl
pop
push
cmp
adc
jo
push
mov
push
and
inc
mov
cmp
inc
faddl
jecxz
mov
pop
scas
mov
lea
insb
inc
xchg
in
lret
mov
push
inc
add
inc
dec
into
lret
std
fcoml
pop
imul
jo
je
dec
mov
xor
pop
loop
dec
inc
cmp
mov
mov
loope
push
add
xlat
int
jae
pop
mov
sbb
aad
pop
pop
fmul
icebp
enter
xchg
lock
jg
or
dec
out
pop
pop
fs
int3
sbb
fmull
jl
dec
cmp
jge
push
minps
dec
shrl
push
pop
cmpsl
insb
xor
xlat
cmp
enter
cmp
jl
cmp
into
cmp
popf
jnp
loop
jge
cmp
cmc
xchg
in
les
ljmp
sbbl
ja
sub
clc
lods
notl
aad
fidivrl
dec
dec
cmp
push
dec
mov
xor
movsl
in
cmp
lds
popf
jge
int3
xchg
test
mov
dec
mov
xor
loope
mov
andb
jb
sbb
jge
cltd
push
xor
sub
out
cmpsb
mov
xchg
popa
in
pop
add
fnsave
cli
sti
jge
rcrl
jge
in
sbb
mov
in
addr16
push
inc
fdivrs
dec
hlt
inc
roll
subl
out
popa
pop
mov
push
into
sbb
cmp
add
sub
and
ljmp
nop
xchg
mov
jg
arpl
shrl
imul
lods
cltd
cmp
mov
insl
push
cmp
dec
nop
popa
pop
or
sub
xchg
dec
loope
adc
divl
fistpl
sbb
jb
dec
or
push
js
jl
iret
jne
or
enter
lea
fs
in
mov
push
adc
jnp
insl
push
inc
inc
cld
test
shlb
outsb
pop
jae
jns
roll
sub
shll
flds
ret
sub
adc
popf
and
add
mov
iret
push
arpl
mov
xchg
ds
adc
insb
push
sbb
pop
aad
fistpl
mov
fucomip
shl
mov
call
fsubl
adc
je
fcomps
and
pop
pop
sbb
inc
jns
cmp
cmpsl
or
jne
aam
xor
jp
xchg
movl
in
adc
pop
je
imul
andb
jo
int3
lret
jns
xchg
pusha
inc
in
and
mov
fwait
in
cmp
jecxz
ret
and
adc
imul
int
aam
pop
fildll
lods
jp
bound
in
sub
inc
push
fstl
cli
fsubs
inc
xlat
das
stos
xchg
ljmp
dec
mov
lcall
fcom
pusha
mov
jbe
rcrb
jp
jo
jge
loop
in
data16
fs
jno
int3
mov
jl
dec
std
cmp
fcompl
cmp
mov
inc
lret
mov
push
cli
sti
leave
sbb
fcmovnbe
cwtl
mov
pop
ret
sahf
xor
xchg
loope
mov
jle
pop
dec
push
js
pop
popa
fdivs
pop
iret
stc
lahf
sub
sub
or
test
and
adc
mov
pop
sarb
or
int3
cmpl
cmp
or
mov
icebp
xor
fsubrl
test
pop
inc
pop
faddp
sbb
push
push
push
pop
cmpsl
dec
inc
packssdw
jl
inc
sbb
push
cwtl
insb
mov
xchg
imul
pop
add
inc
dec
jg
mov
addl
fwait
lock
cmp
sti
outsl
ret
iret
popa
in
pop
imulb
sbb
mov
dec
loop
cmp
and
aad
xchg
pop
fstpt
divb
repz
imul
mov
xchg
jne
mov
mov
inc
enter
fsubrl
sub
notb
pop
mov
add
fcompl
push
data16
arpl
cld
dec
xchg
pop
fnstsw
dec
lcall
ficoml
clc
in
pop
xor
add
loope
popa
fiadds
pmullw
decb
sbb
shrb
sub
loope
mov
pusha
lods
cmp
sub
xchg
inc
movsl
push
jno
js
stos
cs
cmpsl
jmp
jge
pusha
popf
loopne
xchg
pop
adc
in
call
xor
pop
xchg
pop
iret
insb
jecxz
push
loop
ljmp
cwtl
or
cltd
cmp
ljmp
sub
push
mov
adc
std
inc
stos
es
push
rcll
call
mov
jl
fldt
push
sbb
lahf
lret
push
cli
test
push
loope
dec
cmp
imul
push
adc
pushf
mov
push
sbb
jg
addr16
dec
mov
inc
in
imul
es
adc
out
stos
push
pop
and
std
aad
decl
mov
jmp
add
push
int
stc
xchg
sbb
stos
jb
mov
dec
les
mov
bound
sub
pop
fcomi
sbb
push
jne
xor
pop
sbb
jnp
cmp
scas
je
add
xchg
sbb
js
jl
mov
mov
loopne
pop
cmpsl
jl
test
sbb
sub
pusha
aam
cld
xor
insl
fcompl
inc
cmpsl
clc
xor
dec
loop
dec
and
pushw
cmp
pop
stos
scas
in
dec
fistl
aad
pop
xchg
sbb
jne
and
stc
sbbl
dec
js
cli
aas
mov
dec
leave
lcall
sub
loopne
fcmovbe
jns
jge
scas
add
mov
pushf
jl
jbe
mov
inc
call
cwtl
jl
push
lret
lock
sub
or
jecxz
iret
fcompl
loop
test
clc
loopne
je
mov
rcrb
jle
bound
fdivr
jne
jle
popf
sbbb
inc
mov
mov
or
js
cmp
mov
ror
data16
es
inc
std
inc
cmp
mov
dec
add
int3
pop
int
ret
jo
xor
adc
scas
inc
movsl
mov
sbb
fs
push
mov
push
fcmovne
xchg
ret
jns
mov
jns
fisttpll
dec
andl
pop
dec
in
jo
enter
inc
push
cmpsb
cmp
lret
fistl
pop
mov
mov
stc
mov
data16
fs
andb
push
sbb
cwtl
test
addb
data16
mov
ror
mov
adc
xor
push
dec
or
cmp
cwtl
sahf
mov
out
lods
jle
insl
mov
add
stc
hlt
aam
jecxz
loope
sub
test
and
sbb
jmp
int
fsubrs
push
mov
popa
int3
iret
sbb
mov
aad
cmp
sahf
test
imul
cwtl
mov
pushf
in
dec
sub
add
cmp
ret
push
fisttpll
jge
mov
and
sarl
jae
jecxz
cs
test
js
in
fadds
dec
mov
push
scas
inc
ret
insb
pop
stc
adc
jl
cltd
js
ss
cmp
mov
shlb
inc
pop
scas
mov
jge
push
pop
arpl
outsl
xchg
sbb
mov
ficoml
scas
mov
fdiv
mov
mov
clc
ret
in
lret
je
mov
cwtl
popa
push
pop
insb
sbb
fldenv
cmpsb
aam
ret
fsubrl
bound
pop
je
movsb
push
and
jg
loop
mov
mov
test
out
leave
cmp
push
pop
loopne
sbb
push
daa
pop
clc
popaw
arpl
pusha
loop
int
jo
faddl
cmpsb
fwait
adc
insb
gs
fistl
int
fisttpll
addr16
pop
pop
ret
inc
sbb
pop
dec
test
inc
cs
mov
movsl
outsl
xlat
imul
movsl
lods
jge
jp
xchg
dec
pop
push
fsubs
mov
bound
pop
xor
fistl
pop
aam
push
and
mov
in
push
adcb
in
jmp
roll
lahf
pop
lret
jns
mov
fcmovnbe
xlat
fdivrs
inc
or
xlat
pop
mov
sbb
outsl
mov
pop
cltd
cmp
jle
push
adc
add
sub
adc
sbb
or
jge
lea
testb
sub
xchg
push
pop
movsb
lahf
movsb
imul
xchg
inc
sub
xor
xchg
mov
or
cld
jb
adc
nop
ja
xchg
lods
xchg
int
pop
mov
fcoms
mov
mov
pusha
scas
add
mov
dec
pop
push
sbb
int
mov
movsb
fldl
jno
dec
loope
jne
in
jbe
mov
cmp
push
adc
push
or
push
pop
push
jo
lret
jb
pop
mov
inc
pop
fs
xor
jg
push
enter
pop
arpl
stos
push
fdivr
movsl
and
push
ljmp
call
test
cli
lret
popf
adc
jge
mulb
outsl
scas
mov
mov
sti
ret
sbb
test
xlat
cmp
mov
test
div
mov
loop
sbb
arpl
loope
xchg
mov
int
pushf
loop
pop
cwtl
out
push
repz
push
xchg
inc
shll
imul
mov
test
dec
loope
sub
gs
lahf
and
cltd
mov
pop
add
bound
fldt
pop
mov
jbe
and
sub
push
int
inc
pop
mov
sbb
mov
fstpt
push
cmp
fiadds
jo
loop
adc
negb
sub
xor
fisubrs
mov
pop
and
test
sbb
jge
popa
xchg
aad
filds
jecxz
mov
shrd
sub
mov
jno
jo
in
sbb
jge
inc
mov
inc
int3
data16
fwait
loope
push
pop
mov
outsb
or
fistps
xor
jecxz
xchg
mov
xchg
pop
jnp
xchg
pop
icebp
js
je
jmp
xor
lcall
outsl
addr16
and
fstpt
std
scas
std
clc
push
jle
sbb
or
add
imul
xchg
xchg
dec
movsl
add
addr16
or
mov
addr16
mov
push
push
pusha
jo
stc
je
pop
mov
cld
imul
shlb
xchg
jbe
ret
inc
test
or
jo
push
cld
pop
pop
dec
sbbl
inc
jbe
loope
sub
out
pop
call
popf
push
das
ret
daa
mov
xchg
jge
test
xchg
movsl
out
sub
mov
dec
es
mov
imul
out
add
stos
jmp
push
xor
out
or
pop
iret
cwtl
aaa
push
rcrb
adc
cs
insb
and
arpl
mov
cmc
cmpsl
mov
in
xchg
stc
fs
xor
inc
sub
ret
stos
cmpsb
cmpsl
sbb
xchg
mov
pop
int
jecxz
xchg
frstor
js
pop
xchg
sbb
out
loopne
lcall
mov
imul
aam
inc
andl
jl
rcr
inc
lods
pop
pusha
vmaxpd
mov
sub
fistl
jno
push
imul
pop
sbbl
jp
call
cmp
push
clc
fsubl
mov
orb
in
jns
nop
cmc
pop
idivl
mov
xlat
pop
test
push
cltd
js
jno
lcall
inc
js
movsl
xor
fwait
pusha
call
push
xchg
cwtl
test
mov
clc
jae
adc
jae
fwait
mov
jbe
push
int3
jo
ret
inc
sub
pop
adc
mov
and
shll
xchg
push
js
loopne
jno
xchg
fs
ret
mov
lods
add
mov
jo
pop
sub
jo
lock
mov
add
inc
ds
lock
push
test
mov
pop
sti
inc
pop
ja
mov
jmp
xlat
jecxz
jnp
int
push
insb
add
inc
bound
xchg
int
hlt
outsb
popf
mov
addr16
mov
mov
jl
mov
scas
sbb
scas
int
test
fstl
test
cltd
jmp
fdivl
xlat
je
lret
fsub
enter
cwtl
fistpl
ffreep
push
iret
insl
ret
push
fwait
mov
and
sub
lods
xchg
lahf
aam
sbbb
inc
jg
jmp
pop
cmpsl
sbb
sahf
das
push
jno
test
sbb
mov
cmp
mov
jge
sub
push
ljmp
jge
mov
leave
hlt
inc
outsb
dec
push
push
cmp
pop
or
pusha
jo
push
outsb
lea
ss
jo
xchg
add
dec
adc
aaa
xchg
out
cli
jae
sbb
cmc
xlat
imul
mov
jg
push
jecxz
fnsave
cltd
pop
sub
mov
and
or
scas
push
adcb
bound
into
sub
jg
push
jp
fstpt
pusha
ret
dec
rol
int3
mov
jno
jge
aas
xchg
mov
jl
imul
jbe
jecxz
push
je
sub
lea
rclb
cmpb
xchg
add
test
sub
cmc
outsl
dec
movsl
pop
mov
push
dec
loop
movsb
outsb
das
jl
loope
sbb
mov
mov
xchg
int3
es
gs
mov
lods
cmp
dec
xchg
popf
divl
vpshuflw
jbe
das
jne
push
and
mov
repz
mov
mov
sub
icebp
push
dec
or
mov
pop
and
sbb
lods
or
xlat
mov
mov
mov
mov
shll
sub
testl
inc
pop
int
inc
gs
scas
out
pop
addr16
sahf
aam
dec
push
sbb
fs
fsubl
int
mov
xchg
imull
jl
fs
and
xor
repz
dec
jl
lods
xorb
fcoms
mov
popf
fcmovb
inc
inc
sbb
mov
push
inc
mov
test
mov
mov
cmpsb
xor
lret
ret
in
nop
test
int
mov
adc
and
loope
bound
xchg
jle
popf
mov
push
popa
xchg
orb
jne
push
cmpsb
push
lods
andb
outsb
mov
pop
pop
ret
les
inc
test
and
mov
sbb
call
test
push
mov
mov
mov
mov
push
mov
mov
mov
cmp
adc
test
xchg
clc
test
pop
clc
icebp
into
pop
adc
jecxz
int
push
pop
xor
lahf
mov
shrb
pop
jecxz
jle
rorb
leave
es
shrb
push
pop
enter
lds
mov
stos
das
and
popf
fcmovbe
cltd
pushf
sahf
rcll
pop
dec
xor
addb
imul
dec
add
adc
inc
xor
cltd
in
insb
pop
adc
add
xchg
sub
jp
in
push
cwtl
sub
int
std
shrb
out
scas
roll
mov
popa
sahf
pop
pop
dec
aad
fmul
jb
sbb
cmp
xor
outsb
mov
mov
push
mov
dec
mov
stos
mov
xchg
cld
jl
fildl
pop
or
idivl
pushf
fdivl
mov
xchg
adc
pop
lahf
in
pop
lock
pop
mov
pop
in
pusha
xchg
ljmp
adc
mov
pusha
mov
mov
outsb
sbb
mov
xlat
loopne
push
lret
push
call
int3
pop
dec
insb
sbb
enter
or
imul
mov
sbb
stc
sbb
jp
dec
bound
xchg
push
js
push
mov
or
test
cmp
inc
insl
insb
ljmp
insb
inc
cmp
aad
sbb
jno
gs
into
fstps
adc
jo
outsb
cmpsb
cmp
inc
stos
imul
stos
iret
pushf
movsl
mulb
outsl
jb
pop
mov
dec
outsb
mov
arpl
popf
enter
bound
mov
inc
stos
imul
and
std
es
psubsb
dec
fnstsw
insb
jb
dec
je
ss
pushf
test
dec
sbb
lock
cmp
or
inc
sahf
leave
arpl
xor
dec
mov
testl
pop
imul
das
sbb
pop
js
pop
sbb
mov
xor
sub
bound
cld
in
pop
mov
xchg
shlb
inc
mov
mov
push
mov
daa
bound
xor
hlt
jnp
jnp
jns
js
pushf
inc
inc
fadds
xor
jns
in
mov
add
lods
addr16
xchg
mov
pop
pop
adc
cmc
scas
pop
insb
cltd
std
xor
dec
outsb
ss
adc
lods
mov
loop
in
mov
mov
push
dec
ficompl
cs
dec
push
scas
inc
mov
gs
shrl
push
test
fmull
inc
sub
cmpsb
gs
dec
sbb
scas
dec
push
xlat
insb
mov
jge
mov
mov
mov
fcom
pop
int
imul
mov
inc
jne
mov
loope
mov
out
add
sti
test
cmp
sti
or
pop
nop
test
in
xchg
sub
xchg
push
mov
lret
addr16
push
outsl
xchg
fldenv
pop
xor
bound
push
ret
rorb
add
push
xchg
sbb
neg
dec
cmp
pop
bound
in
inc
sbb
push
lock
inc
dec
jmp
lods
pop
mov
mov
pop
adc
shrl
pusha
fsub
pop
adc
push
mov
jp
and
test
cs
cmpsl
lods
adc
call
loope
adc
jne
xlat
jge
jnp
cmpsl
or
inc
aad
push
daa
push
dec
inc
popa
int3
outsl
cmp
xor
aad
insb
add
pusha
aas
dec
cmp
dec
xor
push
sbb
out
mov
iret
sbb
adc
lcall
add
xorl
fcoml
and
pop
xor
in
sbb
js
ja
jg
sub
js
inc
movsb
push
imul
pop
push
jp
xchg
in
and
test
bound
fidivl
jae
ja
cmp
and
sbb
inc
jns
jne
popa
xor
incl
mov
pushf
or
imul
adc
ljmp
fstpt
js
insl
and
and
divl
jnp
insb
sbb
scas
lahf
inc
push
insb
lods
or
mov
sbbb
sarb
jne
pusha
lods
jecxz
xor
xor
shll
mov
jae
jne
jns
shl
lods
jp
lret
pop
sbb
jnp
pop
stos
pushf
out
mov
pop
jg
shrb
jecxz
scas
jb
iret
mov
sub
test
inc
adcl
push
xchg
popfw
insb
int
ljmp
xor
mov
lds
ljmp
inc
mov
in
movsl
lret
sahf
jbe
lcall
incb
mov
ljmp
das
and
loop
inc
iret
outsb
enter
leave
mov
adc
inc
outsl
scas
mov
stos
mov
jmp
pop
pusha
fwait
insl
sbb
push
and
inc
clc
jg
subb
das
mov
and
clc
and
mov
arpl
add
ds
mov
or
sti
test
xchg
imul
or
jne
outsl
stos
jnp
pop
ret
sub
or
mov
out
inc
mov
nop
imul
fimuls
add
xor
out
jnp
addr16
rorb
inc
mov
push
mov
stos
mov
xchg
xor
popa
shlb
cs
push
and
jge
stc
dec
xchg
sub
mov
js
push
mov
iret
inc
mov
mov
repz
sub
cmp
jg
repz
insl
add
cmpb
mov
pop
jno
fwait
pop
test
int3
xor
pop
shl
push
inc
pop
repz
outsb
shlb
pop
ret
add
inc
sbb
inc
insl
scas
jbe
sarl
fs
cmp
fisttpll
jg
or
pop
sbb
pop
jl
insb
pushw
jmp
repz
dec
pop
jle
loopne
and
out
xchg
mov
and
cmp
cltd
arpl
mov
fisttpll
jecxz
test
rorl
adc
push
sbb
inc
pop
jnp
fsts
and
insl
push
outsl
outsb
inc
insl
inc
out
fcompl
imul
fadd
mov
lahf
pop
adc
pop
outsl
popa
rorl
js
insl
popf
xorb
push
mov
mov
mov
pusha
testl
sub
js
imul
out
and
xlat
test
fcompl
movsb
xchg
jp
pusha
js
inc
jb
aas
sub
pop
inc
arpl
gs
mov
imul
adc
addr16
jl
addb
or
loop
pusha
not
cmc
mov
dec
ds
jne
nop
jg
mov
mov
ss
imul
ljmp
stos
mov
or
mov
fsub
pop
fstpt
push
imul
push
call
pop
fiaddl
mov
jb
pop
call
push
pop
cmp
data16
les
popa
inc
enter
cmpsb
pop
fs
pop
sub
cmp
pop
in
pusha
bound
pop
loope
pop
fnstsw
les
stc
mov
in
outsb
push
addb
mov
mov
popa
pop
out
xor
add
scas
pop
lock
ja
or
mov
insb
fmul
cltd
sub
stos
outsb
inc
rcrl
aas
push
inc
and
dec
push
enter
dec
inc
stos
mov
or
push
lret
addr16
mov
xchg
pusha
add
or
jp
mov
jmp
push
mov
stos
push
mov
call
xor
pop
nop
push
xchg
mov
mov
out
js
scas
inc
insb
test
andb
mov
nop
jnp
popf
jbe
enter
and
pop
push
inc
cs
lock
adc
xor
xchg
adc
inc
ljmp
pop
xor
leave
jmp
xor
bts
pop
shll
fs
jns
xlat
push
cmp
aad
adc
lods
lcall
sub
popf
push
fstpt
loope
push
pop
sub
clc
adc
jb
sbb
mov
pop
jbe
sub
dec
je
and
jae
jo
mov
nop
pusha
icebp
fstpl
jns
gs
lods
repnz
ja
jl
mov
loop
sub
loop
arpl
fstpl
in
jp
inc
mov
jbe
mov
subb
fsubrs
sub
pop
fidivrs
mov
and
loop
imul
orb
js
repz
sbb
fs
leave
jne
adc
ror
adc
cmp
fstpt
sahf
cs
popa
inc
inc
pop
int3
push
stos
mov
leave
cmpsl
sub
je
pop
xlat
outsl
inc
pop
xor
mov
test
sbb
or
jmp
pop
test
sti
mov
xchg
or
popa
int3
dec
sbb
cld
popa
aam
mov
pop
and
loop
out
aad
ret
outsb
adc
daa
push
cli
lock
pop
push
loope
pop
mov
and
push
jmp
sub
push
cmc
adc
movsl
mov
push
adc
fcomps
xor
mov
ljmp
push
cmpsl
fs
int
cmp
outsb
and
xchg
push
push
mov
adc
and
xor
and
push
ret
imul
adc
mov
inc
sub
sbb
jg
jl
fs
mov
sub
mov
mov
fisubl
push
mov
ds
mov
push
loop
arpl
dec
outsb
jb
insb
cmpsb
inc
aas
loope
jle
inc
mov
imul
jnp
cmpsl
push
sub
aaa
in
inc
jg
test
out
sub
data16
insb
pop
mov
pop
dec
flds
jle
mov
jo
inc
mov
test
test
loop
xor
stos
xlat
mov
sub
jnp
mov
aad
shlb
loope
xor
lds
lahf
jnp
ljmp
bound
test
push
repz
test
push
fcmovnbe
sub
mov
stos
mov
mov
sbb
dec
push
xor
inc
jno
shrl
sbb
sbb
adc
subb
roll
int3
insb
lock
dec
jbe
in
nop
xchg
pop
sbb
aam
push
sar
aam
mov
jo
jae
sti
lcall
xchg
insb
inc
mov
call
adc
out
inc
and
cmp
sahf
dec
push
call
fsubl
leave
jae
or
xor
call
or
int
sub
lods
jge
pushf
js
mov
sub
jno
mov
data16
lret
inc
hlt
rcll
les
loopne
test
pop
add
ficompl
sahf
insb
mov
subl
pusha
dec
push
loop
inc
push
test
and
sbb
mov
mov
xchg
js
into
pop
jp
cmc
mov
pop
fwait
loope
into
pushf
dec
fucom
mov
in
notb
push
sarl
rcrl
fisubrl
scas
mov
stos
test
cltd
loop
lods
dec
aaa
mov
hlt
gs
jl
mov
push
xor
mov
dec
stos
mov
xor
or
loope
sarb
jl
clc
pop
addr16
xor
or
lds
sbb
sub
push
and
xor
mov
lods
pop
fstps
addr16
lock
lea
add
pop
int3
pop
outsb
ss
sbb
je
adc
cld
adc
clc
addr16
mov
xor
dec
test
test
scas
lcall
test
mov
xor
in
mov
je
jbe
outsl
dec
jb
shll
out
sti
int
and
lods
loop
imul
insb
cs
insb
addb
in
test
push
cwtl
shlb
loopne,pn
xor
pop
jp
mov
inc
push
in
lods
aad
sbb
fcmovbe
xchg
dec
fidivrs
test
push
sbb
popa
and
stos
jge
ss
outsl
testl
imul
add
dec
int3
xchg
js
fs
ftst
dec
shrb
mov
insb
mov
mov
inc
stos
xchg
lahf
fwait
insb
loop
jl
lcall
mov
and
push
ja
cmp
jbe
push
lock
fsub
scas
hlt
stos
sahf
jo
faddl
ret
cmc
in
and
or
jno
mov
inc
jbe
outsb
sahf
aas
inc
mov
cld
fcoml
lcall
jo
cmp
insb
and
stos
and
jnp
mov
ja
xchg
sti
outsb
sahf
sbb
test
lcall
in
lods
int3
stos
shll
test
pushf
and
mov
fisubrs
or
rcrb
cld
cld
jg
sub
jl
shlb
or
scas
fs
lock
and
push
cld
xadd
rcrl
mov
cld
fcoml
lcall
bound
shll
mov
stos
es
jnp
mov
ja
xchg
sti
outsb
sahf
sbb
test
lcall
in
shrb
test
negl
and
subb
push
in
loopne
cmpsb
or
cmp
outsb
movsb
xor
mov
std
filds
subl
xchg
jo
sbbl
push
divl
movsb
push
push
jae
xchg
xor
movsb
js
xchg
dec
pusha
xchg
loopne
aaa
loopne
push
insb
mov
aas
nop
lcall
and
loopne
push
push
aam
or
push
arpl
push
aam
fistpll
test
fwait
data16
push
push
ja
jg
insb
push
fs
insl
jmp
or
test
cmp
pop
addr16
adc
popa
fcoms
in
push
xor
insl
jg
jns
mov
fdivl
jbe
test
and
imul
mov
xorl
mov
jb
bound
idiv
insb
addb
fwait
jb
mov
pop
xchg
inc
pop
jbe
shrb
adcb
mov
std
pop
adc
dec
adcb
cli
dec
sbb
pushf
stc
int
dec
dec
mov
mov
cld
mov
sbb
and
pop
cmp
fnstcw
lret
sahf
mov
xor
cld
lock
jmp
int
xlat
xor
fildl
int
cli
xchg
mov
xchg
mov
insb
test
adcb
sbb
add
xchg
sbb
sar
mov
dec
jno
xor
pop
loop
sbb
add
add
xchg
inc
mov
fwait
dec
imul
rorl
adc
je
lcall
jle
mov
jb
xchg
imul
mov
pushf
and
bound
push
sub
sbb
mov
fsts
xor
rcrl
push
jmp
bound
pop
out
sbb
or
js
xchg
mov
subb
xor
cmp
js
enter
out
sub
pop
and
notb
inc
jns
aad
dec
xlat
jnp
aad
adc
movsl
jecxz
jns
mov
test
jno
fs
jnp,pn
dec
xchg
pop
dec
ja
mov
aaa
push
pop
jge
mov
dec
std
jo
faddp
mov
push
fiaddl
push
sub
jnp
ret
fsts
lea
pop
fcompl
imul
xchg
into
jge
jle
jmp
aam
mov
das
pop
loop
insb
ret
ss
mov
xor
adcb
pusha
int
xchg
scas
cs
pop
pop
jecxz
mov
dec
xor
in
out
imull
cmp
mov
dec
scas
mov
jmp
loope
inc
pop
insb
dec
cld
jbe
adc
shrb
bound
call
es
lods
or
adc
cmp
sahf
lret
jns
sub
pop
pinsrw
lods
pushf
je
lods
push
movsb
pop
xlat
aaa
mov
or
bound
adc
push
pop
out
adc
inc
cmpsb
mov
pushf
movl
push
js
xchg
jp
std
sahf
pop
mov
lcall
mov
insb
inc
jno
scas
sahf
pop
or
int
inc
mov
test
push
sbb
cmpsb
out
int3
sbb
xchg
adc
adc
dec
or
int3
cwtl
xchg
jle
jecxz
scas
fdivr
dec
or
mov
addr16
sbb
pop
sub
push
pop
mov
jo
adc
lods
sub
push
jne
lods
xchg
adc
mov
mov
std
outsl
xchg
aaa
pusha
loope
add
adc
xchg
int3
aaa
push
nop
cld
mov
xchg
jle
sbb
mov
loope
sub
imulb
fstl
enter
fcmovne
xchg
das
sbb
mov
xchg
ds
jle
sti
jge
andl
xor
inc
enter
in
into
push
push
sbb
xchg
inc
ljmp
mov
int
sub
push
pop
int
in
int
dec
fnsave
mov
mov
mov
mov
ret
xor
popf
sahf
jp
xchg
mov
pop
adc
shld
or
mov
sbb
jnp
push
dec
or
int3
pop
cmpsb
push
add
jae
fisubrl
jnp
lcall
es
hlt
cli
and
cld
xor
push
push
imul
cmpsl
push
aas
lahf
mov
loop
nop
jl
xchg
das
jno
sahf
jb
sub
sbbl
sbb
ja
sbb
cmpsb
out
stc
je
inc
jns
mov
jl
in
jo
mov
jecxz
xor
das
pusha
lds
pop
add
lahf
cli
int
inc
dec
xchg
xchg
movsb
sbb
test
imul
mov
test
lcall
and
pushf
movb
icebp
or
mov
cmp
xchg
fnstsw
xor
pushf
jnp
in
out
push
mov
bound
pusha
pop
push
push
pop
pop
push
sbb
loop
jne
sbb
inc
inc
mov
add
jmp
movl
dec
mov
adc
pop
sub
inc
mov
mov
enter
and
pusha
shll
pop
js
jmp
dec
xchg
push
fnstcw
pusha
pop
inc
hlt
fistps
ja
xor
movl
inc
mov
ds
scas
xchg
or
fsts
in
enter
insb
je
mov
fadd
jne
push
outsl
lods
jl
push
mov
scas
push
aas
xor
inc
mov
push
dec
and
inc
bound
lcall
inc
dec
cmpb
fcom
cmp
cwtl
cmc
dec
inc
mov
sbb
xchg
cltd
pop
sbb
mov
inc
adc
fsub
sbb
push
sbb
push
or
popf
outsb
push
mov
cltd
and
cmp
xlat
cltd
inc
out
jecxz
push
insb
pop
pusha
xchg
cwtl
inc
inc
enter
push
adc
popa
inc
outsb
stos
int
sbb
loopne
add
stos
enter
pusha
arpl
and
popf
sub
popf
mov
mov
sbb
scas
icebp
inc
jo
adc
cmc
mov
mov
addr16
add
cmpsb
rcrl
add
lea
mov
cwtl
in
rcrb
push
js
into
call
fstl
jb
movsl
push
sub
jno
xlat
cmp
inc
movsl
fidivl
inc
sarl
pop
lods
stos
lea
adc
std
pop
sub
popa
insb
inc
aam
ljmp
popa
inc
leave
pop
dec
dec
shrb
add
add
cmp
inc
jbe
cltd
dec
lods
and
or
sahf
shl
jns
mov
shl
sahf
nop
test
bound
fwait
dec
push
lret
cmpsl
sti
xchg
aam
and
loop
adc
or
cmpsb
mov
fcmovnb
pop
cld
sbb
dec
sarb
test
dec
cld
ret
aam
cmp
pop
inc
rolb
insb
inc
add
lret
sub
outsl
lahf
cltd
fmul
mov
in
imulb
cmpsb
pop
insb
dec
popf
int3
mov
movsl
pop
fs
jp
add
xchg
add
fxtract
bound
pop
mov
mov
mov
shr
jl
std
repnz
dec
ret
test
sbb
lret
daa
and
push
lods
mov
addr16
pop
mov
cmp
lahf
mov
fs
push
or
push
lea
cmp
lea
hlt
fldt
jmp
clc
cld
cmovae
das
mov
pop
das
mull
or
inc
cmpl
pop
imul
add
stc
gs
test
adc
pop
scas
inc
push
and
lcall
pop
jle
jp
sbbb
fs
push
subl
pop
sub
in
cmpsb
lret
mov
jo
repz
in
xor
loopne
sahf
adc
inc
mov
les
or
mov
pop
cmp
jp
lcall
arpl
arpl
sti
pop
mov
aam
stos
or
sbb
in
les
popf
mov
lahf
jecxz
js
sub
loopne
mov
sub
pop
lock
std
lcall
popf
or
xor
cwtl
cmc
inc
or
fdivr
arpl
cmp
fsts
fcmovnbe
cmpsl
mov
jl
sbb
inc
and
dec
mov
inc
adc
dec
pop
sarb
mov
jno
stos
leave
imul
sub
icebp
add
in
int3
mov
dec
jle
int
jmp
int
dec
and
mov
aam
inc
jp
xchg
dec
and
outsb
pushf
jecxz
dec
into
or
adcl
mov
mov
jbe
loop
stc
jno
sbb
test
out
sbb
jp
or
cltd
aaa
mov
mov
movsb
lret
pop
or
cmp
scas
adc
jp
and
test
dec
pop
fstl
jecxz
pusha
jnp
and
scas
inc
out
nop
mov
scas
pop
int
inc
mov
sahf
in
mov
je
rcl
mov
enter
mov
mov
jl
addb
mov
jae
xchg
sbb
cwtl
in
pusha
test
lahf
or
loope
addl
push
mov
adc
ljmp
jnp
loopne
aam
test
nop
pushf
jae
sarb
imul
mov
sub
nop
popf
fs
rclb
mov
xchg
pop
fsubrl
sbb
cmp
fs
and
sbb
sbb
xchg
push
pop
leave
mov
sub
mov
mov
push
sub
xor
inc
iret
push
mov
pop
mov
inc
test
mov
fcmovu
sbb
lock
pop
outsb
int
ds
sbb
enter
ja
aas
inc
adc
push
inc
arpl
mov
or
mov
cwtl
stc
jge
push
enter
push
sub
scas
mov
mov
pop
repnz
movsl
pop
addb
push
sub
test
or
je
dec
sbb
gs
insl
dec
cwtl
cld
dec
sbb
inc
xchg
cwtl
cld
jl
mov
mov
stos
xchg
das
shrb
dec
pop
pop
addr16
pop
cmp
daa
loope
xchg
aad
mov
loope
mov
arpl
mov
mov
test
mov
fs
xor
pop
subps
rcl
cwtl
addr16
xor
push
sub
cmp
mov
and
popf
mov
push
sub
das
mov
fmul
push
sbb
or
xor
add
lods
hlt
push
jecxz
mov
test
and
aam
sbbb
mov
dec
mov
cmp
jne
out
loop
and
subl
jl
test
sbb
mov
sub
push
sub
call
iret
cwtl
sub
pop
insb
loop
lcall
push
pop
add
jp
lcall
pop
push
mov
dec
push
push
test
sahf
or
and
cmpb
mov
pop
cmp
ljmp
inc
cltd
jp
lcall
mov
bound
mov
pop
pop
loopne
movsb
add
aad
mov
aam
testb
popf
dec
stc
popf
jbe
push
jne
rcll
ljmp
aaa
sub
popf
js
in
sub
rolb
sbb
add
pop
cmp
cwtl
fldl
js
fnstenv
arpl
popf
loope
mov
hlt
std
cwtl
and
mov
cmp
jl
arpl
jmp
dec
imul
loop
imul
push
bswap
sub
int3
mov
mov
inc
pop
push
icebp
dec
movsl
stc
dec
jae
call
sbb
xchg
add
xor
popf
jge
pop
sbb
je
dec
or
xchg
cs
xlat
jbe
call
lcall
test
sub
xchg
lahf
jo
sahf
ljmp
jns
mov
aaa
jno
or
and
shrb
jp
hlt
add
or
int
pusha
inc
scas
pop
in
stos
rolb
fldenv
cli
adc
leave
push
addb
in
int3
pop
mov
in
inc
test
enter
jecxz
dec
mov
jae
fcmovnb
sbbl
sbb
pop
cwtl
pushf
inc
loop
mov
orl
dec
and
adc
mov
cmp
mov
dec
imul
push
ds
lea
xor
stos
inc
and
test
mov
add
push
aam
loopne
jmp
mov
xor
push
xchg
xchg
inc
push
xlat
stc
mov
fstl
mov
call
shrl
int
xchg
or
jae
jns
mov
add
sti
test
cmp
xor
mov
stc
pop
pop
ja
fmuls
add
cmp
mov
test
fsts
inc
cltd
push
js
insb
jg
inc
repz
adcl
mov
lds
mov
pop
push
fistpl
sbb
sarl
sbb
push
daa
imul
pop
add
pushf
bnd
pop
movsl
jecxz
mov
push
lock
insb
mov
je
push
lods
dec
cmp
push
daa
fs
push
push
sbb
xchg
add
sbb
mov
into
pop
ret
jecxz
cmp
sbb
lret
jbe
test
fsub
and
or
movsb
pop
pop
dec
int
pop
sti
pushf
push
popa
int
add
xor
push
mov
enter
sbb
jns
pop
pusha
mov
pop
fs
fsubl
sbb
dec
push
rcrb
lods
fs
push
out
imul
fsubs
out
dec
fwait
or
int
jge
push
pop
mov
mov
pop
jecxz
or
test
cwtl
loope
xchg
jge,pn
fidivs
int3
mov
lahf
push
nop
pop
cwtl
fistl
je
mov
sub
dec
jns,pn
adc
movsb
pop
pop
int
mov
bound
scas
or
rcrb
and
fs
cmpsb
fs
push
jno
int
daa
ret
dec
fisttpl
lock
fxch
add
pop
mov
pop
in
mov
xor
jbe
mov
test
sbb
jno
jge
aad
fisubl
jl
jno
leave
pushf
lahf
push
dec
jo
andl
jns
inc
stos
fcoml
xchg
add
lret
pushf
mov
mov
mov
test
ljmp
gs
pop
inc
lock
pop
sbb
addr16
mov
mov
fldcw
js
mov
add
jb
push
flds
loopne
xor
fwait
cld
arpl
fcom
dec
cwtl
add
mov
dec
shr
pop
outsl
rcll
enter
imul
adc
dec
jecxz
mov
sbb
mov
rcr
movsb
imul
xchg
jge
das
add
jge
gs
mov
pop
mov
xchg
cld
std
push
popf
jbe
jecxz
subl
inc
xchg
test
pop
mov
and
push
xchg
pop
mov
push
push
imul
xchg
fcmovb
inc
enter
inc
sbb
sub
xchg
stc
rolb
jl
pop
pusha
lret
jno
jnp
lds
es
xchg
sbb
push
mov
aas
sbb
shl
xor
lcall
mov
jle
pusha
cwtl
push
subl
je
mov
adc
jle
xor
xor
ja
add
mov
sub
movsl
adc
and
mov
aam
pushf
loope
popl
imul
jl
fidivl
shl
sti
addr16
arpl
outsl
mov
fcoml
sbb
sbb
xchg
int3
inc
shl
lock
mov
or
int
gs
mov
or
pop
pop
sub
lahf
inc
dec
jecxz
fwait
lods
push
loopne
orl
rorl
push
push
sub
mov
out
adc
stos
inc
cmc
fdivrs
fistl
fnsave
push
aam
inc
stos
pop
dec
inc
jnp
loopne
pushf
sbb
addr16
xchg
arpl
and
test
mov
jno
add
icebp
fiadds
xor
pop
rorb
adc
inc
or
pusha
lret
push
iret
bnd
add
dec
and
gs
sahf
daa
into
stos
test
das
testb
outsb
arpl
subl
xor
pop
movsb
or
bound
inc
popa
xchg
arpl
pop
adc
addl
cmpsb
cmp
jns
lods
sarl
in
repz
mov
fdivrp
popa
out
test
shll
bound
mov
dec
xchg
int
or
sahf
pop
fisubrl
push
mov
pushf
in
js
inc
jb
movsb
jne
divb
icebp
xor
or
outsb
in
pop
mov
pop
gs
mov
or
test
push
jge
jb
mov
lods
cmp
dec
pop
int3
lcall
jb
pop
arpl
sbb
ret
sub
jl
adc
fldcw
into
pop
shl
cmp
add
popa
cli
js
or
scas
inc
subb
test
jb
or
jb
and
push
jge
cs
pop
push
jnp
pop
or
mov
inc
scas
and
int3
test
or
push
testb
jmp
addr16
rorl
fidivl
pop
xor
ja
push
fiadds
rcll
cmp
int
cmp
imul
in
repnz
sbb
inc
jmp
int
out
js
addr16
push
iret
xchg
movsb
lahf
dec
mov
jle
addr16
pop
iret
mov
or
fwait
or
sub
pop
mov
jnp
insl
pop
pushf
scas
sbb
into
pop
jecxz
push
fcompl
push
adc
in
cmpsl
and
fs
pusha
call
fmulp
adc
cmp
loop
fwait
mov
sbb
int3
shl
aam
pop
int
popa
rcrb
repnz
inc
dec
sub
mov
fs
stos
sbb
int3
xchg
outsl
andl
sbb
addr16
cmpsl
push
mov
test
jne
inc
xlat
ljmp
cmpsl
imul
cwtl
pusha
out
sub
jae
dec
xchg
and
into
pop
call
jecxz
mov
test
lret
ja
mov
in
movsb
pop
imul
jl
jo
dec
hlt
call
push
ljmp
xlat
jle
mov
andl
push
mov
daa
push
dec
pop
aad
andb
cmpsl
and
leave
push
push
je
cwtl
and
add
leave
sahf
pshufw
jbe
mov
in
pop
push
loope
xchg
movsb
aam
jns
adc
pop
adc
add
or
repz
mov
fstpl
pop
sbb
in
mov
xchg
mov
inc
lahf
pop
xchg
inc
fwait
addr16
xchg
cmp
subl
mov
mov
aad
stos
test
jnp
inc
movsb
xor
jecxz
jnp
int
pop
popf
jno
jp
cwtl
xchg
lahf
sub
les
jl
pop
shrb
cmpsb
je
pop
iret
inc
add
push
sbb
pusha
out
pop
ds
add
leave
rcrl
shll
mov
xchg
jo
mov
sub
jl
mov
fmull
sarb
test
popa
loope
pop
movsb
jo
scas
mov
jg
sbb
sub
pop
rcll
lods
mov
sbb
jno
jne
js
dec
mov
inc
push
int
int
sbb
pop
clc
jle
push
pushf
pop
cmp
enter
subb
adc
mov
cmpsl
sbb
sub
adc
mov
dec
mov
jbe
push
sbb
sbb
je
pusha
inc
insl
insb
loope
stc
popa
mov
bound
mov
ffreep
jg
cmp
daa
mov
in
cmpsb
or
movsl
pop
stc
inc
adc
test
push
ja
sbb
sbb
mov
in
fnstenv
mov
pop
arpl
or
mov
push
sbb
xchg
jae
out
leave
or
mov
add
or
dec
jge
sub
and
in
mov
pop
fsts
lcall
mov
adc
push
jb
cmp
sbb
enter
lea
and
sti
loopne
fwait
mov
and
loope
pop
push
clc
add
stos
push
pusha
jmp
dec
sar
mov
push
leave
test
imul
out
int3
adc
int
sbb
pop
aaa
shlb
inc
cmc
mov
push
push
dec
lock
push
gs
or
js
pop
lock
xchg
xor
mov
flds
mov
inc
inc
fnsave
xchg
or
popa
test
loope
scas
pop
add
jo
cltd
fucom
cltd
js
dec
nop
pop
fs
pusha
ljmp
inc
push
neg
aam
test
jg
in
adcl
and
bound
dec
popa
push
push
int3
pop
inc
inc
add
mov
and
notl
mov
or
cmp
sbb
sbb
dec
leave
pusha
cmc
sub
mov
loope
mov
xchg
add
push
imul
nop
js
pop
cwtl
pop
icebp
outsl
pop
int
push
pop
ljmp
push
ja
cld
push
or
mov
scas
inc
repz
mov
pusha
fcmovnb
jo
pop
imul
push
fildl
dec
lret
pop
xchg
cmp
xchg
push
mov
jecxz
out
fsubs
aam
xchg
mov
pop
into
insl
stos
sbb
roll
aaa
xchg
imul
pop
add
jo
movsb
push
fnsave
jecxz
cmp
aam
jno
insb
mov
ret
jle
flds
sar
or
xchg
aad
or
orl
fwait
mov
xorl
mov
ret
jmp
and
fs
clc
add
sub
mov
inc
inc
dec
mov
jg
int3
dec
sbb
lcall
pop
pop
xchg
push
movsl
imul
pusha
sub
sub
das
sbbb
insl
scas
adc
insb
cmpsl
add
nop
adc
scas
outsl
nop
repz
cmp
or
repnz
jbe
loopne
push
mov
stos
adc
hlt
imul
jbe
loope
arpl
pop
mov
sbb
xchg
dec
lret
stc
sti
xchg
lock
pop
xchg
inc
dec
das
je
push
pop
pop
lahf
fs
insb
out
pop
mov
cmp
push
pushf
fisubs
xchg
rcr
outsb
mov
push
andl
sub
jne
lods
jno
into
lds
imul
mov
test
in
pop
mov
add
les
push
stc
mov
in
jno
arpl
sbb
lcall
pop
outsl
loopne
pop
dec
pop
pop
imul
sbb
ja
inc
xchg
in
es
je
fcoms
push
in
pop
cmp
fwait
loop
arpl
xor
mov
mov
mov
xchg
pop
sub
cld
lret
cmpsb
ljmp
inc
mov
mov
out
inc
pop
clc
clc
dec
pop
add
jne
aam
dec
lret
dec
outsb
aaa
rclb
jle
cwtl
std
lret
mov
mov
jge
mov
popa
sbbl
idivb
mov
sbb
imul
mov
inc
push
sbb
pop
iret
dec
mov
sbb
shrb
mov
fadds
and
loope
loop
jl
add
cmp
ljmp
lcall
fs
movsl
insb
pop
in
pop
jo
push
pop
mov
pop
addr16
lahf
cmp
sub
fldt
das
imul
imul
movsl
mov
loop
sahf
ret
xor
iret
sbbl
lret
insb
hlt
push
loope
nop
pop
fnstcw
lcall
mov
addl
mov
mov
pop
addr16
cld
mov
out
ret
mov
pop
in
push
mov
mov
scas
mov
or
mov
pop
sub
lock
cmpsb
pop
mov
cld
or
cmp
stos
inc
fidivs
insl
fisubrs
mov
xor
in
lahf
fcoms
js
imul
int3
sbb
push
ret
adc
xchg
add
push
clc
sbb
arpl
inc
pop
js
jl
push
mov
cmp
and
outsl
xor
cltd
dec
sub
sbb
les
xchg
bound
test
out
mov
mov
int3
push
mov
pop
dec
in
in
pop
pushf
jecxz
fcomi
in
fidivrl
pop
and
push
jnp
lcall
xor
in
xchg
repz
dec
push
inc
test
push
and
lods
xchg
ficompl
inc
dec
add
pop
jns
clc
sbb
mov
pop
std
nop
mov
sahf
adc
rol
cwtl
imul
fldenv
cmp
push
js
daa
sbb
sub
pop
into
mov
push
dec
jl
inc
test
jp
enter
imul
in
sub
push
jno
out
inc
add
arpl
loopne
pop
sub
sbb
nop
jno
jecxz
xchg
jl
sbb
or
mov
or
fistps
out
pusha
adc
mov
inc
mov
ja
fwait
push
cli
stc
add
enter
jp
fnsaves
pop
mov
mov
adc
adc
fisttpll
jbe
pop
mov
mov
aam
mov
frstor
int
adc
and
sbb
cmpsb
mov
sub
and
and
pop
pop
aas
pushf
lcall
outsb
cwtl
and
or
sub
xlat
sar
les
pop
inc
inc
pop
add
loopne
lea
iret
loop
aam
fstl
ret
js
mov
mov
and
inc
sbbl
sbb
add
pop
push
bound
iret
jns
loopne
scas
dec
push
mov
jae
fs
push
movsb
pop
pusha
xor
jecxz
pop
jg
andl
xchg
outsb
outsl
addr16
jo
inc
mov
sub
pop
or
test
stc
inc
imul
test
lods
rolb
outsb
xchg
mov
aas
inc
lea
repz
mov
fisubl
ficoms
jnp
jl
mov
pop
mov
inc
adcb
jmp
pop
inc
sub
dec
inc
aaa
popf
jle
mov
cmp
stc
popa
push
sahf
in
xchg
xchg
movsl
or
cwtl
movsb
jmp
jl
ja
mov
add
inc
cmp
data16
pop
jnp
mov
fisttpll
jns
in
test
fstpl
lahf
xor
mov
popf
insl
lcall
push
lods
leave
cmp
subl
mov
and
loopne
pop
js
jp
jg
inc
xchg
push
sti
faddl
pop
and
inc
jl
ds
cmp
loope
aaa
test
cmpsb
inc
lods
add
xchg
pop
insl
cmp
ljmp
loop
push
cmp
pop
mov
jg
das
inc
insl
lahf
mov
push
call
mov
or
popa
int
inc
pusha
inc
lds
data16
arpl
pop
jno
cwtl
in
shll
movsb
aad
int3
fs
jp
insb
mov
cltd
xchg
jno
jns
cwtl
mov
mov
sbb
inc
jge
inc
testl
fsubl
sub
inc
cmp
and
pusha
mov
cltd
jb
jne
cmp
jno
in
sbb
lret
imul
adc
dec
mov
dec
xor
mov
inc
pop
jne
imul
jo
cli
lret
movsb
popa
jbe
add
pop
xchg
popf
icebp
jg
add
movsl
xor
jge
lods
loope
loope
rclb
insb
sbb
pusha
je
int3
xchg
push
push
int
scas
scas
into
lods
mov
sub
sbb
ds
push
xchg
cld
xor
mov
out
loopne
inc
mov
sub
jle
xor
xchg
or
xchg
mov
add
mov
mov
popl
test
mov
push
mov
pop
mov
dec
sbb
jle
pop
pop
lods
pop
call
sub
out
shlb
sub
js
jmp
xor
pop
dec
daa
mov
adc
scas
orb
sub
in
fldt
pusha
inc
xor
ret
stos
outsb
mov
jno
bound
data16
push
cltd
fs
or
and
rolb
pop
sbbl
int3
adc
inc
push
mov
dec
pop
popa
mov
ficomps
loopne
inc
inc
cld
xchg
insl
jecxz
cmpsl
xor
sub
imul
inc
loope
jb
sbb
push
mov
cmpsl
mov
mov
lods
or
push
arpl
push
mov
cmpsb
inc
js
lahf
out
jno
outsl
out
mov
jl
mov
in
pop
loopne
fs
push
mov
imul
cmpsl
pop
pop
add
inc
or
cmc
leave
jno
imull
push
sbb
cld
pop
mov
adc
jl
cmp
arpl
insb
inc
add
sub
stos
jns
dec
mov
cmpsl
push
xor
xor
mov
scas
sahf
lds
push
fdivl
test
cmp
lods
push
idivl
daa
pop
arpl
mov
pop
cltd
lock
test
inc
xchg
xchg
cmc
sub
stc
pop
cmp
dec
mov
add
xor
add
xchg
addr16
add
je
pop
cltd
jecxz
cmp
xchg
mov
mov
not
pushf
sub
dec
xchg
imul
mov
dec
inc
mov
in
test
iret
mov
xchg
call
bnd
cmp
or
push
ljmp
xchg
lock
out
sti
jb
mov
jne
and
fadd
dec
leave
push
loop
mov
popa
loopne
loope
mov
lea
xlat
ror
stos
subb
sub
inc
sbb
fcom
mov
scas
stc
int
int3
jecxz
sbb
int
cmpsl
pop
cmp
call
add
mov
fwait
inc
inc
insb
aam
addl
jnp
in
jnp
push
mov
sub
into
popf
scas
gs
jl
xchg
std
mov
cmp
es
add
jnp
sub
pop
dec
sahf
gs
or
xchg
mov
mov
jae
cmpl
fldl
xor
std
dec
cmp
fcoms
mov
mov
mov
inc
imul
scas
test
nop
in
jmp
out
data16
fmul
inc
jl
push
push
fildl
cmpsb
dec
js
and
mov
loope
pop
jl
adc
pop
mov
cmp
sub
cmp
mov
xchg
lea
int3
lret
mov
test
adc
sarb
testl
dec
sbb
mov
insb
dec
mov
push
sbb
inc
jb
outsb
adc
mov
mov
int
arpl
lret
lea
jp
dec
sbb
int3
aam
ljmp
mov
dec
adc
pop
scas
push
fcompl
pusha
or
cli
xor
shlb
pop
jae
pusha
jne
mov
mov
lods
pop
dec
pop
dec
push
jae
pop
sbb
jge
fwait
shll
int
ret
sbb
sbb
clc
cmpsb
cmc
pop
pop
push
jp
outsl
inc
sbb
icebp
cmp
ja
xchg
adc
and
out
test
dec
mov
pop
loop
pop
mov
cmp
pop
fisubs
dec
sbb
jo
cwtl
push
insb
sub
int3
bound
pop
sahf
test
jecxz
mov
pop
cltd
push
cld
daa
jge
pop
pop
out
ret
and
jbe
andb
popf
inc
lea
ret
push
nop
mov
pop
setns
mov
js
inc
sub
int3
cmp
pop
int3
jns
sbb
sahf
lahf
nop
push
lret
xor
leave
pop
sarb
mov
push
cltd
sbb
mov
and
mov
adc
inc
sbb
dec
xor
std
push
xlat
or
cmp
jecxz
pop
dec
ja
adc
mov
movsb
and
movsl
mov
add
xchg
arpl
jne
int3
jnp
int3
inc
jmp
test
xlat
push
hlt
leave
repz
gs
dec
jmp
rorl
imulb
ret
lret
push
xor
andb
adc
mov
jmp
loopne
mov
frstor
add
cmp
pop
or
inc
or
cmp
out
pop
in
rcrl
mov
cmpsl
lret
add
add
flds
mov
mov
das
mov
bound
test
popa
pop
imul
and
mov
nop
push
fdivl
push
mov
inc
mov
mov
pusha
imul
jae
imul
mov
mov
mov
fcoms
xor
jno
popa
inc
push
jl
mov
mov
push
sbb
mov
and
pop
dec
push
popf
dec
pop
icebp
data16
mov
inc
xor
mov
cmc
sbb
lret
jmp
int3
push
shl
adc
pop
inc
mov
xchg
int3
mov
or
inc
lods
mull
sub
movsb
pop
jno
and
lods
mov
xor
sahf
sarl
inc
xchg
loopne
dec
mov
sahf
dec
add
mov
orb
cld
pusha
popa
dec
gs
pop
pop
rcl
pop
shlb
dec
push
add
sub
push
add
adc
fs
loopne
sub
inc
test
push
xchg
add
xchg
stos
repnz
fwait
push
jo
rclb
test
xchg
and
push
ficompl
int3
subb
insb
jge
shll
dec
inc
and
or
arpl
addr16
data16
inc
mov
bound
mov
pop
mov
pop
in
jp
bound
out
push
cmp
jo
pop
mov
ret
mov
ror
add
repz
pop
loop
mov
movsb
fs
mov
mov
lock
fimuls
lcall
and
or
in
xchg
mov
cwtl
push
test
data16
sti
arpl
xchg
call
int
ret
xor
shll
loope
mov
pop
xchg
push
dec
dec
lock
push
fnstsw
pop
xor
fcmovnb
test
mov
mov
les
and
cmp
loopne
mov
enter
jne
or
int
adc
mov
pop
bound
xor
leave
pop
addr16
jmp
inc
mov
dec
mov
lcall
into
push
pop
mov
ret
int
pop
lcall
test
cld
test
mov
outsl
inc
push
jmp
clc
icebp
mov
stc
in
mov
icebp
xor
clc
movsl
mov
jle
out
push
addr16
loope
pop
test
mov
mov
jns
int
push
pop
pop
mov
push
repnz
aad
jo
pusha
and
test
mov
lods
std
rcll
push
push
scas
out
imul
int3
jl
das
jmp
jno
push
xchg
insb
sbb
sub
imul
inc
adc
mov
lahf
loope
fcoms
imul
icebp
in
lcall
jb
dec
arpl
inc
imul
push
jb
cmpsb
jg
mov
push
dec
dec
fdivl
cmp
pop
nop
ret
inc
outsb
incb
nop
mov
bound
cmp
scas
inc
jo
ffree
sarb
push
sbb
cmp
cli
aad
xor
int3
mov
mov
popa
or
sbb
js
push
loop
and
pop
xchg
jne
mov
les
xchg
jo
fcoms
mov
pop
ficomps
inc
pusha
into
sbb
sub
mov
pop
dec
orl
jecxz
jmp
add
pop
pop
push
les
ja
cmpsb
int
mov
loop
jecxz
ja
inc
repz
pop
pop
test
loope
andl
jb
sub
stos
xchg
fidivrl
fwait
jmp
mov
mov
jb
xchg
push
or
jecxz
mov
pop
and
mov
cmp
pop
sbb
gs
mov
popa
int3
mov
and
inc
in
cltd
in
jmp
test
or
ret
pop
xchg
xchg
and
mov
js
js
jge
add
loope
insb
js
pop
or
imulb
dec
mov
mov
pusha
movsl
rol
pop
fsubrl
xorb
push
mov
jp
and
sub
std
xchg
js
insb
mov
and
dec
mov
and
int
and
mov
jg
or
jp
out
lock
fdivrl
js
int
cmpsl
sub
or
arpl
sub
clc
bound
out
icebp
mov
or
insl
mov
push
dec
jg
inc
or
cmpsb
mov
mov
xchg
mov
clc
adc
js
popf
push
mov
bound
jge
inc
xchg
cmp
imul
pop
jb
fidivl
pop
scas
dec
lods
jl
cmp
adc
inc
ret
mov
popa
pop
inc
inc
pop
fdivl
adc
sub
dec
xor
jb
sbb
andb
mov
xchg
enter
sbb
into
pusha
fcompl
sbb
pop
inc
xchg
in
xchg
pop
sub
push
jp
stc
subl
mov
pop
std
adc
fdivl
in
ja
ss
mov
fucomp
mov
mov
bound
pop
dec
aaa
popa
in
sub
jle
sbb
cmpl
xor
inc
push
mov
push
mov
jmp
adc
cmp
pop
jl
gs
sbb
arpl
in
add
insb
push
mov
and
add
cltd
sub
push
jge
shrb
dec
pushf
and
add
fsts
mov
pop
cmpb
jecxz
nop
push
mov
jle
aad
pusha
jo
out
adc
and
in
nop
add
cli
nop
cltd
adc
pop
scas
mov
movsl
or
or
and
jmp
mov
push
imul
and
popa
push
bound
cmpsb
sbb
stos
inc
sahf
dec
out
imul
push
movsb
sarl
xchg
mov
pop
inc
sub
loope
push
jge
mov
mov
int
adcl
aaa
mov
push
cmpsb
mov
xchg
fldcw
int3
xorb
mov
add
enter
ljmp
push
sub
loop
xchg
jae
xor
mov
pop
mov
sarb
jnp
daa
and
mov
mov
or
xchg
pop
cwtl
mov
fdivs
inc
ljmp
adc
mov
xchg
sbb
pop
pop
ja,pt
push
pop
andl
test
mov
cmp
cmp
loope
push
dec
push
mov
das
pop
sbb
xchg
push
clc
std
inc
mov
pop
je
fnstcw
dec
push
cld
sahf
add
adc
mov
jnp
leave
jge
push
add
roll
xchg
mov
pusha
insb
in
sbb
mov
sub
loope
push
call
arpl
out
scas
scas
sub
push
mov
push
and
sbb
rcrb
nop
pop
imul
mov
out
loope
push
push
sub
cbtw
pop
xchg
bound
fcmovbe
push
in
stos
pop
inc
into
pop
push
pushf
mov
pop
push
push
jb
ljmp
inc
xchg
lods
arpl
pusha
mov
into
jl
shlb
mov
adc
insb
stos
jo
loopne
pop
jg
rclb
adcb
popf
jl
lods
fnstsw
mov
call
lret
out
sbb
mov
push
fiadds
fsubs
push
popf
icebp
xchg
fisubrl
jl
push
loopne
rorb
pop
insb
and
insb
ret
mov
fsts
fldenv
arpl
addb
mov
mov
nop
cld
ljmp
gs
pop
gs
jecxz
lret
mov
cmpxchg
sbbb
sub
dec
cwtl
bound
jnp
nop
aam
mov
stos
pop
push
ja
imul
ja
out
jecxz
fwait
loopne
mov
jg
xchg
push
add
arpl
xchg
jo
hlt
push
mov
jb
mov
jmp
ficoml
jb
ljmp
cwtl
test
addl
xchg
dec
mov
pop
js
jns
jns
sbb
flds
test
sbb
inc
test
insb
ret
adc
and
push
add
sub
je
fimuls
jl
divl
cltd
pop
add
lods
push
adc
repnz
andb
fcmovb
xor
fldcw
outsb
xchg
in
cmpsb
adc
push
loope
adc
xchg
jl
lcall
push
js
hlt
cmp
jp
cwtl
cli
in
sbb
pop
fidivl
inc
je
jle
dec
test
pusha
pop
scas
int3
mov
mov
jo
sbb
xlat
fisubl
test
dec
ja
mov
popa
dec
jno
aas
mov
adc
adc
pop
cmc
subl
pop
lret
cmpl
or
loopne
inc
call
aam
mov
sbb
mov
pop
mov
pop
inc
das
mov
ret
xchg
sub
xor
loope
mov
ja
lcall
cmp
jmp
fdivl
push
mov
inc
popf
jg
dec
pop
outsl
mov
in
andb
sbb
xchg
pop
int
mov
dec
data16
cmp
push
add
mov
popf
lods
mov
sbb
ret
stos
and
fiadds
mov
inc
mov
mov
pop
ss
fs
insb
dec
enter
cwtl
mov
insb
and
in
subb
inc
mov
and
sub
sbbl
lods
cmp
add
dec
jo
cmpsl
arpl
cwtl
xchg
mov
aam
insb
and
movsb
sub
xor
cli
insb
aad
mov
sub
sti
push
call
fdivl
shll
decl
adc
in
dec
scas
test
push
or
inc
insb
mov
pushf
mov
push
push
push
in
test
stos
jns
cwtl
data16
dec
nop
sub
add
outsl
inc
push
cld
je
bound
inc
test
std
dec
negl
or
adc
xchg
in
aaa
lods
push
psrad
out
xorl
fsubs
mov
dec
sbb
fidivrl
pop
pop
sahf
sub
in
push
ret
out
push
sbb
pop
sub
mov
lods
je
in
cwtl
inc
jnp
cmp
push
push
insl
pop
pop
movsl
jo
pop
gs
std
xor
pop
test
in
imul
dec
int
sub
push
ret
bound
rolb
jle
xchg
add
jmp
sbb
cmp
or
ficomps
dec
pop
add
jge
rcl
lock
in
cmp
lock
popa
scas
adcb
or
shrb
pop
push
inc
test
bound
sti
jo
aam
js
jno
and
setbe
ss
fstpt
fmuls
push
cmp
sbb
scas
shlb
insl
jns
sbb
fstps
push
inc
jne
je
dec
icebp
gs
cwtl
jmp
sub
sti
sub
dec
push
mov
stc
xchg
mov
dec
sub
xchg
stos
push
call
test
jb
movsb
fdivrl
lahf
push
xchg
jb
sub
lea
negl
in
mov
test
idivl
xchg
mov
dec
pop
mov
or
mov
push
mov
aam
in
jno
fcmovne
subl
addr16
jb
ljmp
test
lea
out
mov
mov
out
lods
mov
leave
fisttps
loop
ljmp
fldcw
and
xor
fistl
int3
push
loope
dec
js
loop
jle
pop
loopne
out
sahf
dec
pop
arpl
sbb
clc
cmp
test
call
in
arpl
cmp
lret
out
int
cli
and
addr16
hlt
adc
ret
mov
loopne
inc
test
mov
lea
call
jne
mov
sub
movsl
inc
mov
push
push
insl
gs
ss
fstpt
movsl
ljmp
cwtl
pop
stc
clc
insb
jecxz
ret
mov
push
pop
sbb
rcrl
mov
mov
scas
lcall
push
scas
insb
lahf
pushf
ror
jb
stc
loopne
stc
stc
push
sbb
test
movsb
fsincos
or
push
pop
insl
inc
mov
mov
ret
js
mov
sub
scas
sub
sub
das
pop
xor
push
ficompl
fnstenv
mov
arpl
mov
push
in
and
pop
add
into
jo
imul
cltd
mov
jno
cwtl
mov
in
or
pop
lea
mov
scas
lds
in
pop
jae
out
xorb
dec
int3
ficompl
mov
mov
test
sbb
xchg
adc
cmpsl
out
fadd
pop
push
mov
push
mov
sbb
push
pop
mov
sbb
mov
sahf
add
mov
and
and
scas
popf
add
rcll
or
xchg
sbb
pop
fcoms
inc
inc
ret
cmpsb
jp
jne
movsb
sbb
jp
pop
and
xchg
dec
jp
mov
fsubl
movb
dec
xor
dec
dec
repz
push
pop
pop
mov
stos
loopne
cmpsl
test
imul
push
sbb
mov
loopne
repnz
push
cltd
std
repnz
cmp
out
lret
pushf
movsb
jle
ljmp
xchg
pop
add
push
out
cld
mov
movsb
jo
xor
fsubrp
ret
testb
movsb
imul
int
insl
aam
scas
mov
push
jnp
insb
add
stos
scas
insl
mov
insb
pop
mov
add
and
mov
jae
subb
scas
imul
jle
lods
jecxz
xlat
pop
nop
pop
push
and
inc
scas
lcall
jns
inc
xor
mov
mov
gs
pop
xor
pushf
rcr
popa
mov
insl
add
data16
adc
arpl
je
sub
jbe
or
pop
nop
mov
shlb
lock
aaa
andb
mov
cmpsb
lock
aam
sbb
xlat
dec
pop
pusha
pusha
sub
loope
addb
pop
sarl
cltd
or
dec
pop
or
dec
cmc
adc
addr16
inc
or
stc
push
sbb
iret
insb
sbb
fstpt
outsl
fisttpll
cmpsb
movsb
pop
lock
popa
mov
sub
mov
sub
call
mov
push
mov
pop
iret
pop
push
fsubrl
hlt
fbld
icebp
dec
cmp
jo
xchg
lods
insb
je
data16
pop
sbbl
inc
scas
adc
bound
bound
fs
inc
jo
pop
int
push
js
pusha
jecxz
test
mov
fcoms
inc
xlat
pop
lods
jae
xchg
bound
and
imul
pop
movsl
es
aad
pop
int
jle
jl
outsl
add
leave
add
insl
test
push
sti
cld
push
addb
lcall
add
gs
pop
mov
cli
mov
adc
xchg
sbb
xlat
fucom
cltd
test
sahf
icebp
adc
sub
cmp
or
pop
lods
and
test
sub
pop
sbb
rolb
add
sbbb
rolb
xor
pusha
sti
lock
sti
mov
das
xor
mov
test
imul
jno
jp
pushf
cmpsb
push
cmp
push
push
sub
sub
mov
sar
dec
sub
pusha
inc
imull
jle
or
int3
test
lds
popf
and
in
popf
or
test
pop
jge
dec
hlt
mov
das
mov
dec
add
cmpsl
pop
ret
mov
pop
sbb
pusha
inc
aaa
mulb
pop
push
cltd
pop
dec
loope
mov
and
jecxz
push
mov
push
cs
push
push
jecxz
scas
mov
fs
imul
mov
pop
jns
sub
pop
and
jnp
mov
push
xchg
and
dec
test
mov
dec
pop
push
shr
loop
sarl
in
stc
loop
lock
jmp
js
dec
cld
in
cli
insb
jecxz
adc
sbb
push
mov
ds
mov
mov
pusha
adc
fidivs
lret
mov
xor
arpl
push
int3
sbbb
test
push
pusha
imul
dec
addr16
ja
dec
int
mov
xchg
and
addr16
sub
sbb
xchg
je
fsts
aad
in
inc
sbb
sbb
jnp
aam
adc
mov
and
jge
js
xor
movsl
dec
push
xchg
lods
sbb
sub
fdiv
popl
mov
mov
je
jmp
insl
mov
jno
and
test
xchg
add
or
push
jb
adc
mov
icebp
movsb
or
adc
jb
loop
mov
imul
fcoml
stos
adc
cmc
insb
mov
loopne
cmpsb
cli
addr16
dec
aad
mov
cltd
test
xchg
arpl
xchg
sbb
jb
insb
and
sbb
jg
add
add
push
lods
nop
push
popa
mov
mov
leave
cmc
js
out
push
pop
push
or
pop
mov
jg
sbb
cltd
pusha
push
in
jge
cmp
jmp
dec
mov
subl
add
sbb
das
bound
jg
pop
insl
xor
push
xorl
cs
pop
and
mov
jnp
arpl
xchg
in
pop
inc
ret
lods
cmpsb
jg
jnp
int
pop
lock
ret
mov
inc
cs
aaa
adc
sbb
xor
xor
mov
mov
cmp
and
call
xor
lret
xor
adc
push
xchg
inc
adcb
jl
pop
sbb
inc
pop
sub
push
aas
popa
mov
fnstsw
loopne
mov
in
jno
mov
stc
inc
sbb
push
xor
xchg
insl
iret
pusha
jp
ja
cmpsb
aam
pop
fwait
dec
inc
js
test
insl
fs
add
inc
xchg
xchg
xor
xchg
sub
out
xor
mov
or
push
fisubs
jl
in
mov
js
inc
mov
or
mov
aad
jmp
insb
cli
lret
pop
cwtl
cli
inc
stos
push
scas
ja
fdivrs
pop
dec
inc
mov
adc
sbb
nop
xlat
push
jg
lcall
dec
cmp
cwtl
sub
out
push
add
lret
call
js
pop
outsl
dec
mov
shlb
cmp
and
jge
mov
pop
loope
dec
or
andl
testl
in
inc
dec
mov
pop
pop
push
pop
mov
xor
jmp
push
pop
xchg
jo
addr16
mov
pushf
pop
ret
loopne
cwtl
fnstenv
in
test
iret
push
xchg
lea
gs
xchg
daa
fists
push
push
push
mov
lcall
ret
mov
popa
mov
pop
imul
enter
icebp
insb
xor
add
mov
mov
daa
inc
in
inc
jl
fmul
add
xor
in
or
sbb
jnp
jb
mov
es
jmp
pop
jno
push
pop
xlat
and
inc
arpl
test
repnz
and
push
and
scas
ret
pop
int
std
int3
imul
cld
fstpt
fistl
jmp
adc
jecxz
push
sub
mov
and
mov
cmpsb
popf
pop
subb
fiaddl
insl
mov
xor
sarl
pop
mov
int
jne
jne
and
sbb
arpl
in
push
cwtl
arpl
pop
scas
shlb
inc
movsl
aaa
arpl
daa
repnz
cwtl
dec
lods
xchg
in
mov
push
mov
jl
inc
mov
incb
fnstsw
sbb
adc
xchg
outsb
xor
xchg
xchg
pop
fcmovne
mov
inc
dec
pop
pop
xchg
and
mov
outsb
stc
rorl
test
in
adc
and
call
arpl
into
sbb
cld
fndisi(8087
or
cmp
mov
mov
jl
cmpsb
lock
sqrtps
ljmp
adc
cmp
jno
pop
bnd
leave
mov
int3
insb
adc
scas
popa
push
mov
add
lock
mov
jo
push
mov
hlt
mov
inc
int
cwtl
scas
adc
data16
popa
adc
call
push
jnp
xchg
and
cwtl
cmp
push
pop
pop
jb
imul
add
push
scas
inc
xchg
insb
xchg
mov
testb
outsl
fbld
stc
push
cmp
jae
jb
scas
and
inc
sbb
pop
cli
inc
fcoml
jne
push
int3
les
mov
out
test
xor
ljmp
shl
push
cli
xchg
sbb
out
mov
fadd
call
test
mov
fs
lret
and
jb
pop
mov
pop
jbe
mulb
pusha
lret
and
add
outsb
ds
sar
popf
mov
loopne
push
addr16
test
inc
shrb
jge
sub
popa
ficoml
inc
mov
cmc
xlat
out
mov
sbb
mov
or
sti
xor
test
fst
and
jmp
sub
shlb
mov
xor
sarl
and
or
mov
lret
imul
mov
dec
lods
fcmovnb
fadd
push
int3
test
mov
test
xchg
jbe
xor
rcrb
xchg
scas
int3
dec
cmc
test
andl
lods
dec
sbb
xchg
je
repz
mov
jp
xchg
nop
jo
imul
inc
out
iret
iret
outsb
jge
popa
shr
jbe
mov
mov
outsb
adc
rolb
pushf
push
mov
cmp
dec
dec
imul
cmp
push
addb
dec
lret
js
int3
arpl
bound
pop
pop
gs
lahf
inc
aas
sbb
mov
shlb
repnz
arpl
iret
pop
push
jns
or
mov
xlat
pop
push
dec
inc
jne
mov
jbe
dec
sahf
scas
inc
ret
int3
jbe
jnp
ret
loopne
sub
pop
adc
out
popa
mov
call
push
negl
dec
aam
sbb
mov
jp
mov
bound
call
out
pop
fnstenv
push
mov
mov
ret
inc
lret
cmpsl
shlb
sbb
jo
popa
mov
sub
mov
jno
fs
or
pop
or
xchg
insl
or
imul
pop
or
cli
mov
xchg
daa
test
jnp
inc
in
cmp
pushf
jno
push
fmuls
movsb
sub
adcb
arpl
mov
cmp
pop
pop
xor
int
inc
push
add
cmpsb
adc
ficomps
inc
lahf
adc
jnp
sub
test
push
in
sub
inc
mov
cmc
sub
mov
in
push
push
mov
jg
leave
loope
gs
ret
mov
and
std
mov
shl
push
imul
mov
data16
popa
mov
inc
adc
int
pushf
jg
sbb
xchg
int3
orb
xor
insb
sbb
or
leave
fcmovnbe
mov
pop
gs
loope
push
fldcw
cmpsl
dec
mov
cs
in
sahf
inc
jge
aaa
dec
loopne
jae
loopne
imul
cld
or
xchg
je
push
sbb
xchg
pop
dec
xlat
mov
push
jecxz
mov
stc
test
imul
sub
sti
add
nop
push
call
mov
add
insl
fcom
adc
aam
push
push
cmpsb
add
fmull
jns
push
imul
pop
addr16
lods
hlt
or
sbb
mov
cmpsl
lods
adc
sub
push
pop
jo
mov
in
push
sbbl
xchg
mov
lcall
mov
das
cld
xor
lods
or
and
add
sbb
inc
pop
popf
inc
mov
cmp
mov
or
pop
popa
cmp
clc
aad
inc
mov
in
aas
js
sbb
inc
or
mov
jmp
pusha
insl
out
pushf
data16
outsl
sub
sbb
mov
xchg
leave
pop
out
pop
mov
mov
imul
jl
fldenv
sbb
clc
jmp
mov
adc
mov
add
pop
and
sbb
fs
shll
sbbb
lods
repnz
arpl
pop
mov
and
cwtl
incl
cli
inc
cmp
mov
fnsave
inc
xchg
push
nop
data16
mov
subb
decl
outsb
pop
pushl
jae
xor
rorb
jo
xchg
lock
mov
dec
jbe
rclb
and
xchg
test
sahf
out
add
inc
aam
arpl
hlt
rclb
xor
fisubl
cwtl
ret
jmp
mov
sarb
scas
scas
xchg
lret
lret
and
nop
sbb
int3
inc
sbb
inc
jno
pop
or
mov
push
das
adc
jno
into
es
pop
int
stc
je
pop
sbb
dec
fnstsw
insl
inc
xor
and
xor
pop
in
mov
jmp
dec
or
das
or
sub
push
push
cmpsb
pop
popa
cwtl
sbb
lods
arpl
aaa
jmp
in
jo
je
imul
mov
loope
pop
insb
sub
loope
icebp
xor
inc
aaa
mov
jl
int
lods
jns
stc
mov
xlat
enter
xor
cmc
loopne
stc
leave
push
mov
mov
hlt
and
mov
in
xchg
loop
mov
cmpsb
ret
mov
int3
sub
nop
pop
imul
adc
pop
mov
out
adcb
flds
arpl
in
sbb
sub
and
test
cmc
jecxz
lret
out
cltd
jmp
ret
cs
repnz
xchg
leave
cwtl
inc
lret
cs
hlt
inc
ljmp
pop
clc
std
sbb
cwtl
cmp
sub
push
sbb
mov
scas
xchg
dec
les
pusha
orb
mov
pop
jbe
fcmovnbe
push
mov
push
fistpl
sahf
push
ds
sbbb
cmpsl
pop
fwait
mov
data16
mov
lods
imul
push
jmp
push
jl
add
ljmp
shll
in
in
push
sbb
filds
cmp
call
sbb
mov
mov
and
mov
leave
test
dec
rolb
bound
punpckldq
stos
inc
jp
pop
sub
mov
push
xchg
mov
xchg
and
scas
mov
ja
dec
loopne
repz
jbe
push
outsl
jl
pop
adc
lret
pushf
dec
xor
push
stos
or
xchg
sub
insb
sbb
aas
adc
jnp
sbb
scas
mov
or
outsb
pop
cmp
rep
mov
test
pusha
sbb
outsb
mul
stos
pop
jno
pushf
nop
mov
push
add
mov
pop
cmp
gs
jl
mov
mov
popf
sahf
addr16
sbbl
pop
mov
or
sahf
dec
out
mov
pop
fistpl
lcall
fnstenv
cs
cli
into
mov
xchg
push
mov
rclb
fadds
ja
mov
push
imul
leave
pop
inc
cmc
push
mov
inc
outsb
out
fstps
pop
lea
sti
sub
outsl
xor
mulb
addb
or
popa
pop
mov
icebp
clc
push
mov
arpl
pop
pop
pop
int
jecxz
lods
das
jge
lods
lret
shll
mov
sahf
repz
loope
dec
mov
and
arpl
sbb
movsl
sbbb
scas
cmpsl
test
gs
sarl
jp
xchg
jnp
cltd
pop
push
xchg
daa
aam
cmp
insb
loope
repz
je
repnz
pop
sub
fildll
inc
mov
pushf
mov
push
cli
jle
push
pop
loopne
push
test
loopne
decb
adc
jecxz
mov
in
pushf
mov
xchg
lret
jbe
stos
push
push
mov
xchg
pop
fs
pop
xchg
enter
inc
jl
loop
sbb
cmc
sahf
out
roll
rclb
mov
adc
test
mov
mov
out
les
ret
call
and
adc
fwait
pop
test
lods
or
push
insb
movsl
pop
movsl
cltd
outsl
push
iret
sub
testl
pop
mov
rclb
es
dec
loope
pop
lret
inc
ja
dec
test
sub
push
lahf
ljmp
inc
sub
cmp
call
mov
mov
push
push
mov
arpl
loope
jne
inc
jno
inc
ds
scas
xor
dec
mov
xor
popf
mov
sub
pop
inc
sahf
jle
jnp
cmpsb
cwtl
data16
sahf
stos
pop
pop
arpl
test
dec
in
dec
std
pop
push
mov
lods
pop
adc
inc
pop
stos
push
mov
mov
fcoms
mov
xchg
push
push
mov
push
and
subb
push
enter
dec
push
cmp
sub
push
fcmovnu
push
push
jle
push
arpl
sub
inc
jne
dec
mov
adcb
mov
fwait
notl
jle
pop
inc
iret
fsubs
push
imul
arpl
sbbl
popf
cmp
pusha
cmp
jl
mov
inc
pushf
inc
inc
loopne
push
fadds
adc
cmp
pop
test
gs
arpl
xchg
int
movsb
sarb
sub
insl
push
fcmovne
jnp
jno
pusha
pop
pop
pop
pop
mov
ret
mov
fld
rclb
not
fdiv
pop
xchg
cmp
xchg
dec
aas
sbbl
pop
iret
inc
sahf
lcall
mov
rcrl
cwtl
jb
and
rclb
mov
sub
mov
inc
sub
scas
mov
out
pop
pop
outsl
cmp
sbb
mov
jo
sbb
add
cmpsb
dec
dec
adc
cmpsb
call
ret
and
or
push
inc
adc
es
push
rclb
push
dec
xor
mov
fstps
push
push
xchg
lret
xchg
sahf
mov
addr16
dec
jo
call
push
push
lds
imul
dec
aad
cmp
mov
fmulp
push
push
sbb
xchg
pop
push
dec
shl
imul
movsl
xchg
outsb
mov
dec
cmp
fnstcw
push
jne
imul
pop
xor
test
mov
inc
int
cmpsl
pushw
mov
push
mov
popa
pusha
negl
jg
jmp
jecxz
and
pop
xorb
dec
loopne
inc
test
mov
push
lea
pop
inc
lret
cmpl
cwtl
push
pop
cwtl
mov
jne
sbb
and
mov
orl
int
mov
loope
mov
mov
mov
sub
sbb
call
xchg
jle
ljmp
sahf
bound
pop
mov
sbb
and
aas
icebp
or
jl
mov
pusha
push
imul
cmpsl
clc
mov
and
mov
in
xchg
adc
pop
mov
xlat
int
out
mov
test
in
dec
and
pop
sub
jbe
stos
fsubrs
mov
pop
sbb
push
mov
lcall
js
fs
pop
jecxz
pop
sbb
dec
mov
mov
pusha
dec
ds
xchg
jo
push
iret
xchg
pop
popa
jo
sbb
fildl
test
inc
sub
and
aam
mov
sub
movsl
inc
int
and
push
or
cltd
mov
hlt
mov
sbb
sbb
push
jns
bound
inc
jns
cli
jbe
xlat
cmp
xchg
outsb
sub
mov
push
fimuls
pop
int
daa
aam
push
lcall
movsb
mov
inc
fstl
rcll
and
jcxz
xchg
dec
mov
jb
int
xchg
lcall
sti
add
cmp
jne
sbb
decb
sbb
data16
push
dec
in
ss
test
push
aad
arpl
data16
push
js
cmp
pop
jbe
jo
mov
inc
push
cmc
inc
lods
jecxz
imul
pusha
mov
popa
mov
adc
jmp
xor
mov
aad
in
test
mov
add
or
clc
jp
scas
pushf
scas
fildl
pop
xor
pop
lock
jg
lahf
or
xchg
xor
mov
pop
sbbl
adc
lret
jne
and
push
sbb
push
in
adc
xchg
adc
sbb
into
popa
mov
in
pop
push
mov
lods
rorl
jnp,pn
inc
adc
jnp
and
imul
into
nop
stos
int3
aad
popa
push
stc
call
nop
push
dec
mov
mov
cmp
sarb
mov
mov
in
test
jnp
stos
inc
out
pop
aad
push
jb
sub
arpl
scas
inc
push
cmpsb
sub
clc
cmc
mov
sub
fstpt
jge
xlat
pop
fs
fistpl
or
sbb
scas
inc
jge
xchg
pop
cmpsl
inc
xchg
mov
sbb
lock
dec
out
xchg
adc
mov
adc
fcmovbe
sbb
sahf
mov
fwait
test
flds
push
out
cmp
rcrb
cmp
in
imul
and
and
pop
sbb
popa
cmc
into
into
or
inc
fs
cwtl
xor
jae
xchg
fwait
loopne
shl
gs
test
mov
jns
pop
mov
stos
dec
repz
xor
jnp
xor
popl
pop
fs
add
jmp
outsl
inc
or
xor
popf
dec
sahf
repnz
xlat
enter
cmp
pusha
pop
xor
xlat
jecxz
jnp
xchg
lcall
xlat
mov
out
jb
cld
push
fwait
jno
mov
pop
cmp
mov
aas
clc
stc
je
jbe
insb
js
sub
cmpsb
andb
or
das
push
xor
popa
fisubrl
sub
pop
jp
ljmp
sub
rcrl
jne
cmpsb
xor
xor
popa
mov
cmpsl
aam
cmp
fimull
mov
xchg
test
adc
fsubs
mov
pop
aad
mov
push
aam
data16
mov
sahf
mov
shl
int
mov
sbb
ret
cwtl
stos
das
movsb
jle
imul
jb
mov
pop
data16
push
sub
lcall
ficoms
imul
fwait
pop
jnp
imul
xchg
lcall
fcmovbe
scas
loope
std
dec
stc
inc
sarl
jns
jp
ss
fwait
mov
shl
sub
inc
aaa
mov
pop
pop
xchg
mov
jb
sbb
mov
push
mov
cmpsl
sbbl
loopne
insb
mov
fstl
mov
inc
frstor
jecxz
mov
dec
xlat
sbb
xor
xor
xchg
xchg
pop
lahf
mov
sbb
arpl
call
dec
addr16
insb
fs
call
mov
push
add
aam
les
ljmp
sbb
fiaddl
sbb
stos
addb
and
jno
or
cmpsb
mov
imul
jmp
jl
pushf
repz
cmp
mov
insb
repz
ret
mov
pop
mov
push
test
pop
jmp
mov
mov
fldl
mov
test
fistpl
sahf
int3
jnp
test
add
pop
int
mov
popa
jl
jge
jae
icebp
shll
adc
jmp
or
fcmovnb
push
popf
fistps
out
xchg
out
push
xchg
movsl
imul
push
shr
push
outsb
lahf
adc
jnp
push
inc
mov
fwait
jnp
imul
test
cwtl
int3
lods
mov
mov
js
pushf
je
mov
adc
call
mov
ret
mov
test
pop
sahf
ret
jle
xor
insb
dec
scas
dec
cmc
aad
jno
popa
mov
jl
test
push
xor
pop
jecxz
sub
jbe
inc
in
outsl
in
xchg
cmp
sub
xchg
ss
cmc
cltd
mov
pop
pusha
jecxz
sbb
test
xor
jl
out
push
jl
test
fisubrl
fs
in
mov
mov
xor
adc
out
jnp
pop
outsb
pop
dec
jae
stc
mov
jl
adc
mov
xor
insb
xchg
push
inc
je
clc
test
lcall
js
aad
add
insb
mov
pop
je
push
mov
push
push
outsb
es
and
aad
inc
in
pushf
jg
xor
inc
daa
push
mov
mov
push
ror
sub
add
adc
jecxz
js
in
insb
lret
pop
pop
aam
or
inc
jp
aad
iret
in
mov
in
fs
jns
loope
int3
pop
sub
adc
dec
lret
jb
sbb
jb
in
mov
in
or
pusha
fdivs
jmp
inc
loope
rcrb
lods
roll
es
cmp
push
hlt
jns
dec
pushf
pop
adc
mov
xor
adc
inc
dec
test
xchg
mov
stos
add
pop
mov
movsb
stos
test
pop
pop
pop
lock
fucomp
inc
xor
pushf
add
push
dec
bound
sahf
out
insl
leave
pop
mov
fnsave
xchg
cmp
fisubs
push
mov
test
fdivp
repz
loope
dec
pop
pop
pop
push
test
gs
mov
pop
push
pushf
mov
icebp
push
jo
popa
xchg
jne
mov
xchg
outsl
mov
jmp
arpl
xchg
insb
push
fadds
pusha
jno
lods
or
cwtl
loope
sahf
mov
clc
fdivp
cmp
andb
pop
orl
push
pop
push
xchg
mov
pop
jbe
or
arpl
daa
inc
cltd
mov
mov
pop
ret
push
mov
mov
js
bound
in
sarb
lods
cmp
scas
inc
in
push
bswap
fwait
test
jb
bound
scas
push
into
mov
andl
pop
sahf
das
test
mov
in
push
popa
inc
loope
pop
add
pop
test
mov
hlt
push
inc
fisubrs
mov
jbe
jle
mov
es
shrl
dec
ficomps
int3
pop
loope
jo
pop
cltd
fstl
xchg
pop
fistl
add
jle
subb
imul
jns
mov
mov
scas
mov
pusha
cmp
enter
cld
pop
jle
in
scas
ljmp
stos
dec
jg
mov
out
adc
xchg
fsin
fsubr
sbb
inc
pop
mov
or
sbb
cmpsb
rcll
xchg
push
add
mov
call
mov
negb
xor
jle
pop
jl
lret
cmpsl
je
cmp
aad
fwait
outsl
inc
aas
jb
test
mov
jne
sub
push
lcall
je
test
mov
or
push
movsb
lcall
mov
xchg
fstpt
loopne
jae
or
cmpsb
shlb
fcoml
fmul
lcall
lahf
jo
popf
push
js
and
sbb
or
push
out
les
cmp
stos
and
mov
outsl
push
jg
dec
sub
push
cmp
sub
stc
aam
mov
cli
arpl
imul
cld
pop
aad
std
sbbb
jge
inc
pop
sbb
call
shll
mov
cmp
test
addr16
sub
jmp
cmp
rcrb
jp
into
mov
stos
insb
cmpb
jp
sub
push
mov
ds
push
pop
sub
sbb
push
lods
add
mov
pop
inc
scas
adc
mov
pusha
loopne
imul
sbb
pop
jne
decl
mov
fs
xor
lret
lret
loope
xchg
inc
jg
xorl
fdivrs
scas
aad
dec
scas
push
add
xchg
ret
pop
mov
jl
inc
stos
sbb
outsb
push
xchg
jl
inc
pop
sbb
test
nop
addr16
ror
jo
jl
sub
pop
int
test
or
loopne
shlb
sbb
decl
dec
pop
arpl
sub
test
in
out
pop
inc
jle
cld
bound
shr
xor
or
lret
cwtl
lods
or
sbb
push
pop
adc
push
xchg
lods
sti
inc
sub
fidivs
mov
or
outsl
dec
xchg
pusha
pop
jb
mull
mov
cmpsl
test
mov
mov
fcompl
pop
push
int
inc
cs
bound
sar
or
pop
mov
lcall
sbb
jp
mov
test
cwtl
pusha
movsb
fisubs
push
insb
mov
mov
rcll
pop
inc
cmp
and
cmpsl
imul
int
arpl
push
cmpsb
sbb
sbb
cwtl
xchg
out
mov
ror
mov
mov
xchg
cmp
mov
scas
in
aas
jp
fiadds
xchg
inc
mov
mov
jmp
in
mov
fnstenv
fcompl
inc
das
test
insb
das
mov
sbb
xor
lahf
jae
andb
adc
dec
push
leave
popf
xchg
js
jmp
addr16
xchg
outsl
scas
and
leave
mov
push
cmp
addr16
xchg
inc
mov
mov
es
fs
pop
pop
daa
sub
mov
cmp
pushf
fisttpl
mov
lds
cmpsb
sbb
les
cmpsb
pop
fldenv
test
mov
pusha
pop
pusha
sahf
pop
pusha
xchg
cwtl
pop
aam
fs
in
bswap
add
xor
xchg
mov
cs
subl
nop
andb
and
push
je
pop
bound
jecxz
int
mov
and
test
shll
push
lock
cltd
and
test
andl
and
xchg
jecxz
icebp
aad
je
out
fs
loopne
pop
rorl
punpcklwd
dec
mov
mov
mov
push
lret
je
shll
xor
push
in
xlat
fcoml
cld
mov
jno
push
jo
push
aad
push
push
daa
cmp
insl
cli
repz
lret
inc
orb
pusha
lret
xor
lcall
mov
loope
pop
push
aas
insb
xchg
fnstenv
cmp
sahf
push
cwtl
fs
lcall
lcall
ljmp
jo
xor
jp
insb
and
jo
cmp
movsb
je
and
int
sbb
gs
hlt
js
xlat
test
or
andl
pusha
imul
pop
or
shlb
mov
sahf
push
sbb
inc
adc
mov
addr16
mov
mov
pop
add
push
mov
loope
push
add
push
dec
pop
icebp
insb
push
pop
mov
aas
add
sbb
and
push
sub
mov
sub
loope
pop
imul
jmp
mov
leave
mov
cmp
add
pop
fsubrp
incl
dec
fcmovnbe
jl
int
adc
fcomps
es
ret
popf
jb
imul
push
pop
push
into
ljmp
js
mov
dec
ret
pop
stos
loope
jl
and
jo
je
pop
ficoms
mov
and
inc
loopne
xchg
enter
sbb
adc
out
dec
mov
ficompl
pop
mov
mov
jnp,pt
flds
pop
in
daa
push
xor
mov
sarl
sbb
movsl
jl
scas
mov
leave
ret
dec
push
pop
jecxz
ret
int
pop
pop
fistpl
jmp
imul
fistl
xor
cwtl
outsb
ret
ret
jle
in
or
inc
scas
sarl
mov
test
xor
sbb
mov
mov
adc
aaa
loope
je
jae
scas
cmp
sub
dec
loope
ror
pop
add
inc
sbb
int3
bound
mov
cmp
js
test
push
in
inc
and
je
mov
or
push
rcrb
test
fisttpll
jnp
xor
cmpsl
jb
mov
bswap
fsubl
mov
aad
dec
std
xchg
shlb
xchg
push
jnp
int3
mov
outsb
inc
xchg
lds
lret
mov
aam
pop
outsb
push
sti
push
mov
jne
nop
or
fdivs
sub
jo
js
ror
fistpl
call
cltd
sub
popf
sub
jnp
mull
dec
test
mov
pusha
dec
jo
pop
jge
pop
aas
push
pop
mov
jmp
mov
inc
and
push
jle
arpl
fdivrl
and
mov
mov
cmp
pop
push
xor
fnstsw
sbb
test
mov
stos
in
ret
mov
lods
sbbb
cmpxchg
test
add
dec
jbe
mov
cs
dec
pop
inc
popl
push
cs
loopne
loop
pop
inc
cmc
test
mov
jmp
aad
mov
rol
arpl
xchg
xor
shlb
rcrl
pusha
lods
pop
push
cli
dec
popa
fs
jmp
mov
pop
rcrb
sbb
sbb
nop
mov
into
jecxz
pop
pusha
fnstenv
sub
out
insb
ficoml
fsubr
add
stos
sub
dec
mov
cmpsb
push
xchg
outsl
and
inc
mov
or
dec
inc
pusha
pop
mov
test
fbld
int
xlat
fcomps
cmp
inc
jb
sub
adc
cwtl
inc
inc
push
inc
or
test
repnz
xlat
mov
cmp
push
inc
dec
sub
and
pop
pop
das
sbb
pop
stos
leave
addb
fsts
xchg
inc
shlb
mov
and
add
pop
pop
aam
adc
push
std
mov
jg
sbb
mov
mov
sub
or
lea
sub
inc
ljmp
data16
repnz
xchg
mov
ret
out
adc
cs
pop
js
pop
add
in
inc
pusha
aaa
mov
cmp
iret
nop
dec
shr
shl
adc
enter
outsb
xchg
or
inc
cwtl
lea
and
pop
dec
jge
pusha
data16
loope
xor
add
inc
and
call
mov
mov
inc
mov
add
jl
fnstenv
add
std
adc
cs
mov
orps
pavgb
andl
sbbl
pop
inc
data16
xor
adc
push
cmp
pusha
das
popa
lods
jnp
mov
and
or
cmpsb
xchg
jl
popa
or
subl
rorb
sub
pop
cmp
push
rclb
push
xchg
iret
sbb
arpl
sahf
icebp
mov
sbb
test
addr16
or
adc
repnz
outsl
ljmp
sbb
repnz
js
pop
and
mov
cwtl
roll
fisttps
jno
xor
lock
ret
jno
test
lahf
scas
pusha
or
dec
out
mov
xchg
mov
lds
pop
clc
jl
cltd
leave
icebp
pop
aaa
fcompl
pop
adc
pop
rolb
aam
inc
mov
vmptrld
mov
test
cmp
cmp
lahf
into
rcl
das
imul
lahf
pusha
cs
call
add
in
es
iret
punpckhdq
mov
repnz
aad
into
push
sarl
mov
jns
mov
dec
divl
cwtl
or
sbbl
int3
int3
movsl
jb
cltd
scas
pop
cmp
addr16
mov
loop
pop
ret
push
inc
and
hlt
insb
jno
jne
daa
push
test
cltd
rol
and
lea
pop
fistpll
dec
jmp
add
lahf
mov
lcall
lret
cmp
pop
jae
xor
call
outsb
fstpt
lea
cltd
and
popa
sub
pushf
fidivrl
lea
inc
xlat
pminub
test
cmp
fdivrs
js
sub
in
xlat
lcall
andl
lahf
rcrl
sahf
inc
inc
jns
popf
lds
fwait
jnp
mov
mov
sbb
insb
mov
loopne
sub
shll
ret
add
cwtl
cltd
xchg
dec
push
adcl
mov
loop
pop
enter
xor
xchg
mov
mov
sub
dec
popf
xchg
xchg
cmp
sbb
in
cmp
jnp
fs
shl
mov
sbb
mov
and
insb
pushf
mov
rcll
inc
sbb
or
inc
fdiv
rcrl
jge
sahf
test
rorb
cmp
jmp
push
jge
ljmp
lock
gs
jns
mov
mov
cmpsb
loope
pushfw
jns
mov
xorl
push
mov
sarb
xor
outsb
add
inc
ss
mov
add
xchg
jb
push
das
jp
xchg
cmpsb
and
in
mov
call
jns
mov
inc
mov
adc
pusha
push
adc
add
out
idivb
cmpsb
ret
mov
lods
pop
outsb
dec
leave
cs
mov
js
mov
sub
pop
cmp
or
pusha
and
popa
dec
scas
int3
jnp
mov
xchg
imul
inc
xchg
rorb
in
mov
lcall
icebp
push
arpl
pushl
xchg
xchg
cwtl
cmc
inc
lret
cld
xor
jno
rcr
cmpsb
lock
lods
add
cs
sbb
jge
cmp
dec
test
mov
adc
out
in
cwtl
or
xchg
shrb
or
or
inc
push
adc
push
fucomp
pushl
int
call
call
add
jle
int
lahf
ljmp
ja
or
inc
mov
jmp
pop
dec
lcall
data16
and
xchg
pusha
test
test
fnstenv
loope
adc
mov
xchg
loope
add
dec
mov
jmp
arpl
bound
xchg
mov
pusha
into
jbe
sub
xchg
push
into
xor
popa
pushf
in
aam
xchg
inc
dec
fwait
xchg
lock
outsb
lret
jns
cmp
fabs
shlb
sbb
or
push
jns
js
movsb
pushf
xor
lcall
outsl
imul
insb
jns
push
mov
mov
call
sbb
and
dec
pop
icebp
out
mov
outsb
xor
pop
cmpl
dec
imul
fsubl
dec
enter
sbb
call
push
ja
mov
push
sub
repnz
ja
inc
decl
es
cld
int
sub
repz
jns
mov
out
bound
jb
in
test
mov
dec
mov
pushf
mov
lahf
xor
daa
js
iret
jp
push
dec
xor
addb
pop
rcrl
jmp
into
push
push
loopne
loope
arpl
push
lret
cmp
pop
stos
mov
adc
das
mov
ret
loop
jns
ficoml
cmp
jge
cmp
loopne
outsb
jbe
cmp
pop
fcmovnbe
dec
pop
aam
cmp
cli
sbb
mov
xchg
push
mov
mov
inc
mulb
addr16
cwtl
cltd
test
sub
ret
pop
test
dec
dec
pop
sbb
mov
imul
out
sarb
fidivrs
push
sahf
xchg
jns
push
pop
fcomp
jns
push
push
fcomp
cmp
pop
lcall
xor
mov
pop
insl
add
add
xor
add
mov
adc
mov
clc
aad
add
ret
sbb
popa
mov
test
add
mov
sti
je
ds
insb
pop
push
pusha
pop
cmp
jp
lcall
pop
loope
pusha
pop
je
pop
fdivrs
rcr
inc
xor
jg
cltd
sbb
cwtl
les
jp
sbbb
ret
stos
test
popa
addr16
push
jg
int
mov
push
sbb
pop
in
bound
sub
cld
inc
sbbl
adc
xlat
add
jb
fs
call
xchg
cli
hlt
jmp
bound
jle
jb
scas
sub
repnz
xor
insl
jmp
push
jmp
in
add
mov
cmp
inc
aad
pop
jle
and
cltd
sub
xorl
mov
pop
xlat
pop
into
xchg
jno
xor
mov
aas
mov
push
out
arpl
mov
hlt
loope
dec
push
out
pop
pop
push
inc
sub
sbb
or
sub
imul
outsl
fcomps
pop
popf
push
jg
test
addr16
sar
fnsave
pop
jb
mov
xlat
fimuls
jbe
cmovns
mov
dec
jge
stos
xchg
jge
xor
pop
fisubrs
and
mov
xor
inc
popa
cld
xor
mov
test
mov
jl
xchg
xchg
pop
and
xchg
fcmovnbe
ffree
inc
fidivrl
jp
jp
or
enter
sti
inc
insl
push
addr16
sub
fwait
cs
daa
xor
aad
scas
lcall
push
fildl
sub
jg
xor
inc
lods
xchg
int3
popa
ljmp
pop
mov
pop
stos
lahf
xor
jge
std
lret
sar
push
pushf
xor
in
mov
mov
push
mov
jo
xchg
stos
jne
test
mov
ja
jo
xchg
int
adc
adcl
mov
faddp
scas
jns
jbe
popa
mov
inc
fistpll
test
cmp
inc
inc
push
push
pop
and
xchg
inc
mov
mov
push
test
lock
xchg
rclb
out
mov
sub
adc
lea
popa
push
jno
test
int3
fwait
insl
sbb
push
les
fbstp
fs
fs
sub
enter
sub
push
int3
cli
mov
pushf
stos
lock
sub
and
in
stc
xlat
adcl
add
test
inc
js
js
jmp
icebp
mov
fistps
cld
popf
loop
enter
xchg
insb
mov
cmpb
imul
jg
or
je
mov
stc
test
mov
stos
int
or
push
out
pusha
push
addr16
jnp
aad
pop
sahf
test
in
lahf
pop
test
fwait
adc
fnsave
and
jbe
xchg
pop
in
jns
push
out
ljmp
loope
push
in
bound
shl
movsb
shl
push
ficomps
insb
pop
sbb
inc
and
dec
mov
cmc
xor
fcoms
jne
stos
pop
push
addr16
or
cld
mov
pop
loopne
mov
dec
cmc
adcb
in
mov
xchg
bound
mov
bound
cwtl
dec
or
stc
outsb
insl
cli
add
fxch
pop
jecxz
fnsave
int
inc
ss
xchg
jne
stos
jne
jle
add
xchg
xlat
add
mov
outsb
xchg
jnp
cmovl
and
ret
dec
push
popf
inc
js
dec
xchg
jp
pusha
shl
sub
xchg
and
add
test
stc
lods
mov
sbb
enter
lods
aam
ja
cmpb
mov
in
subb
lds
xor
add
inc
pushf
mov
daa
into
or
fldt
pop
movsb
xchg
ss
sbb
shlb
mov
mov
callw
mov
jmp
xchg
insl
pop
jne
add
int3
arpl
pop
setb
dec
ficoml
push
xor
sub
push
mov
out
adc
mov
add
and
cwtl
out
std
lea
inc
or
bound
lret
pop
lods
inc
scas
jg
popa
pop
aad
int
test
push
in
mov
arpl
movsl
dec
sbb
testl
inc
fisubrl
and
stos
jge
push
pop
or
cmpsb
pop
in
or
aas
or
pop
dec
and
push
in
cltd
and
pop
in
lods
dec
push
popa
or
pop
ret
cmp
mov
adc
int
adc
cld
ljmp
pop
jb
mov
push
int3
jns
mov
call
lea
pop
mov
add
inc
xchg
outsl
fdivr
add
mov
dec
sub
inc
pop
jnp
sub
fs
fldl
dec
jno
lods
cmp
imul
pop
lahf
sbb
pop
sub
push
jbe
sti
rcrb
dec
scas
stos
test
roll
addl
sbb
jne
cmc
nop
enter
sbb
add
lods
notb
push
std
ss
pop
jp
mov
mov
pop
inc
sub
or
loope
in
xor
int
and
inc
aaa
imul
arpl
mov
mov
ljmp
int3
xchg
insb
scas
xchg
push
pop
pop
add
addr16
loopne
pop
jo
or
in
movsb
xchg
mov
push
add
aad
fidivrs
rsqrtps
inc
insb
xchg
and
add
dec
jmp
push
subl
fldcw
popa
sbb
mov
cmp
push
scas
sahf
addb
push
fwait
sbb
fwait
loopne
mov
jmp
movsb
cmpsb
lods
sahf
jg
adc
xlat
nop
push
jp
jle
jp
addl
int3
mov
mov
xchg
test
popa
pusha
inc
add
imul
xor
and
sbb
daa
mov
out
sub
or
lods
lock
ds
fldcw
movsb
popf
pop
push
popa
add
mov
fnclex
mov
ljmp
mov
scas
dec
es
add
pop
and
jns
mov
mov
push
mov
daa
dec
and
lds
in
push
mov
jno
ja
rolb
imul
mov
mulw
dec
shr
xchg
in
call
cld
pop
pusha
lock
es
dec
mov
int
or
xor
pop
dec
test
inc
mov
mov
clc
sub
push
nop
sub
inc
inc
sbb
pop
jge
or
cmp
dec
and
mov
dec
cmc
cmp
inc
jns
jne
pop
add
cmp
inc
mov
test
ljmp
push
push
cmp
mov
xchg
pop
and
jp
push
mov
and
test
gs
push
js
mov
pusha
inc
mov
dec
popf
cmpsb
leave
cwtl
pop
mov
in
imul
push
jno
aas
xchg
pop
call
andl
inc
pop
loopne
mov
out
rcrb
push
xor
fcompl
repnz
test
fs
dec
in
int3
cmpsl
add
imul
out
inc
dec
fsubrl
dec
addr16
push
inc
xchg
and
jg
scas
jno
cwtl
xchg
sbb
inc
outsl
int
in
jmp
test
rclb
mov
add
push
je
ljmp
and
movsl
cmpsb
sbb
mov
lcall
test
loopne
lds
mov
arpl
popf
cmpsl
ret
and
outsl
addl
movb
jnp
mov
call
jl
cmp
cmp
movsb
inc
je
pop
shlb
push
jg
mov
pop
je
fsubr
mov
lahf
cwtl
push
xchg
cmovb
push
addr16
sub
ljmp
sub
outsl
fcompl
lods
dec
pop
fadds
fxch
push
hlt
cld
gs
lahf
clc
xchg
and
insb
jecxz
fisubs
imul
stos
fs
shr
cmp
je
jo
add
insb
xor
es
or
inc
push
mov
or
cmpsl
sbb
je
sahf
stos
mov
sub
adc
lcall
call
jno
out
dec
in
xor
enter
fidivrs
mov
nop
mov
fucomp
aad
out
or
out
jns
hlt
jle
data16
repnz
insl
mov
cmp
and
sahf
mov
or
jg
sbb
mov
lds
cmp
xlat
add
or
inc
xchg
ljmp
jecxz
icebp
stos
ret
fidivs
xor
lcall
mov
push
into
lea
imul
lret
xor
sbb
jl
arpl
sbb
movsb
jg
inc
outsl
imul
push
jb
jbe
outsl
mov
pusha
clc
cli
stos
inc
not
rclb
aad
or
cmp
pusha
xlat
cli
sarb
add
and
pop
cwtl
je
rclb
sub
outsl
pop
jb
sbb
cmp
ret
xchg
loope
dec
mov
cmc
cltd
icebp
sub
and
into
mov
in
adc
popa
daa
mov
dec
xor
sbb
add
insb
fsubrs
or
pop
mov
addr16
xchg
and
cld
loop
jnp
dec
sahf
pushf
jmp
fildl
cwtl
in
inc
fisubrs
imulb
bound
mov
mov
mov
test
mov
xchg
mov
iret
adc
lcall
in
push
ret
dec
icebp
lds
xor
sahf
test
mov
cmp
inc
pop
dec
cmp
cmp
mov
inc
lret
fucomi
mov
outsb
popa
ret
inc
sbb
xor
scas
fistpl
adc
xchg
test
mov
mov
mov
or
push
test
push
sbb
addr16
lahf
push
fstpt
jp
mov
mov
cmp
hlt
fsubr
jb
jo
sub
test
popa
pushf
sbb
cwtl
shlb
sub
sahf
mov
adc
pop
push
mov
pop
out
jmp
xchg
or
fistps
jge
cmp
insb
or
cwtl
gs
jmp
push
mov
inc
fistpl
or
sub
scas
mov
mov
push
sbb
mov
pop
xchg
pop
int3
stos
jp
into
jo
ret
mov
xchg
mov
sbb
add
mov
fadds
test
out
test
fadd
mov
sub
dec
mov
arpl
and
sub
jl
lcall
insb
inc
sub
sahf
je
popa
mov
cmp
mov
enter
test
cli
jl
lret
jg
mov
loope
je
shll
xchg
pop
xchg
inc
adc
out
sbb
mov
ffree
fsubrp
shll
outsl
fsts
mov
mov
movsb
dec
scas
mov
sbb
fdivrs
test
dec
push
jno
je
insb
imul
js
aaa
ret
dec
xor
jo
outsl
into
pop
out
les
jle
jge
mov
out
and
pop
mov
ret
dec
cltd
mov
out
push
xchg
loope
fnstenv
rcrb
fsts
jl
push
test
push
test
in
or
outsb
jmp
fmuls
ja
jl
ss
pusha
jg
bound
pushf
std
jp
movsb
fisubs
movsb
add
negl
outsb
and
push
jg
jns
lret
sub
mov
push
mov
pop
clc
and
test
push
pop
or
mov
les
xchg
jns
fcmovnbe
mov
lock
jle
pushf
bnd
popa
cltd
fsubr
inc
pushf
iret
sbb
adcb
btr
or
dec
mov
mov
mov
xchg
cmpsb
sub
push
pusha
into
insb
inc
pusha
jmp
dec
sbb
jg
addr16
js
stos
and
jg
lods
in
inc
pop
pop
inc
ss
jl
add
repnz
add
xor
std
xchg
filds
xlat
lret
sub
icebp
cld
mov
gs
lea
pushf
mov
cmpsl
ret
jle
mov
in
jb
and
iret
inc
add
or
pop
loop
subb
inc
pop
in
cld
lcall
jg
mov
insb
test
imul
xchg
xchg
jp
jbe
pop
test
addl
mov
cld
ficomps
cmp
test
or
xchg
scas
mov
mov
fucomip
pusha
push
jg
inc
clc
scas
and
sarl
outsl
sub
push
pop
pop
mov
jb
inc
cwtl
outsb
push
orl
mov
fdivrl
or
xlat
in
mov
pop
scas
fs
push
cmp
inc
mov
imul
dec
jbe
jnp
adc
insb
xchg
sbb
subb
cld
jge
js
cmp
sbb
imul
arpl
adc
dec
xchg
rorb
subl
mov
ljmp
mov
cs
and
mov
shrb
lods
test
dec
cwtl
xor
xchg
adc
popa
movsl
dec
int
pop
ret
ja
dec
pop
dec
jne
loop
lcall
popf
jnp
test
rep
hlt
mov
and
adc
jns
mov
pop
mov
mov
int3
ja
xor
int
outsl
mov
dec
cmpsb
divb
lds
in
push
sbb
aad
push
inc
or
mov
or
movb
ljmpw
das
fs
cmc
int3
push
imul
mov
into
add
aaa
outsl
clc
mov
lret
push
or
cmp
sbbl
dec
int3
jno
testb
mov
push
js
mov
insb
mov
add
cltd
test
xchg
jl
or
addl
dec
xchg
je
and
es
jbe
std
push
iret
cmpsb
push
cmp
add
pop
pop
fwait
xchg
push
sahf
and
nop
push
insl
inc
cmpsl
mov
mov
gs
jecxz
fsts
pushf
cmpsl
data16
sub
pusha
inc
sbb
mov
movsb
daa
das
push
push
mov
pop
fwait
jg
pop
int
fwait
in
cmpl
inc
stos
int3
and
dec
inc
adc
test
in
inc
pop
and
inc
adc
push
data16
inc
fstl
sbb
sbb
ss
mov
sbb
fsubrs
sub
jbe
sahf
pushf
roll
addr16
and
xor
in
mov
mov
scas
sub
pop
cwtl
jecxz
adc
nop
cmp
clc
outsb
cmpsb
jl
push
mov
dec
imul
or
cmp
sbb
orb
mov
xchg
or
in
negl
or
lock
mov
and
ljmp
push
scas
repnz
test
jb
les
andl
stc
stos
mov
outsb
xor
mov
push
dec
mov
je
cmpsl
stos
xor
das
pop
aas
mov
adc
sahf
leave
ds
repnz
mov
jb
push
in
lret
imul
pusha
nop
pop
push
jl
pop
sub
mov
lahf
out
mov
sub
imul
ja
sub
loop
test
std
push
xchg
pusha
pop
cmp
mov
cltd
adc
inc
adc
lahf
fists
mov
dec
and
push
mov
jb
clc
mov
insb
fidivl
push
mov
shl
or
mov
dec
adc
leave
pop
push
int3
mov
out
arpl
jge
dec
dec
push
jmp
sub
push
mov
loopne
fbld
push
jb
scas
ljmp
push
dec
insb
inc
jge
scas
add
enter
mov
push
mov
popa
sbb
out
cli
lods
xchg
enter
out
pop
int3
mov
les
push
jbe
xchg
xchg
insb
or
jp
mull
mov
sbb
jb
inc
imul
or
mov
push
fmul
loope
jnp
bnd
inc
out
jecxz
int3
xor
rorl
popf
adc
mov
push
insb
pop
sbb
sarb
dec
or
stos
cmp
inc
fadd
inc
insl
inc
pop
adc
shll
cmp
imul
loop
dec
mov
lret
mov
jo
lahf
fnstenv
js
push
nop
loopne
push
mov
ja
xchg
test
fbld
add
jae
cs
jmp
mov
ljmp
or
int3
loopne
aad
lahf
ljmp
add
test
inc
adc
add
xchg
inc
xchg
iret
pop
addr16
cwtl
dec
push
mov
push
push
dec
ljmp
cmp
lock
pushf
dec
ret
pop
movsb
ret
lods
inc
xchg
jge
pop
test
mov
xchg
pushf
arpl
lahf
or
mov
outsl
js
bnd
test
xchg
mov
jnp
shl
adc
lock
bound
cs
inc
ret
shll
jno
mov
cmp
cs
das
pop
xchg
sub
jl
sahf
bound
outsb
mov
pop
loope
scas
inc
stos
jae
dec
pop
jle
adc
cld
movsb
imul
cmp
push
int
jecxz
subl
stos
scas
inc
lock
mov
add
cmpb
mov
cli
mov
insl
sbb
push
mov
jo
loop
xchg
push
ljmp
add
mov
mov
sub
cmp
mov
out
in
repz
inc
les
into
sbb
xchg
cmpsb
test
jl
in
idivl
sub
rolb
outsb
mov
mov
cld
fmuls
mov
cld
cmpsl
ret
pop
addb
dec
test
inc
lods
push
sti
lock
fsubl
mov
adc
mov
xchg
insb
jne
sbb
stos
int
test
mov
sub
jmp
ja
adc
test
sbb
gs
mov
mov
test
mov
fdivrs
mov
fs
cld
fcoml
add
or
push
sti
add
add
sub
add
test
sbb
pop
inc
pop
or
test
dec
outsl
test
or
inc
lret
ret
sub
test
mov
jecxz
mov
xor
mov
mov
inc
push
imul
xor
cmp
xorl
sbb
push
pop
push
pop
adc
dec
out
xlat
push
dec
fistps
push
roll
cmpsl
in
loopne
test
shlb
sbb
inc
jmp
jbe
xchg
pop
sahf
stos
pushf
test
inc
movsb
and
sbb
fs
sub
xchg
jg
sti
movb
sbbb
xor
cwtl
scas
adc
sub
push
je
pop
xor
pop
pushf
bound
mov
push
and
sbb
push
subb
inc
push
test
iret
or
arpl
sub
cmp
cltd
clc
fstpt
stc
jg
out
jo
xchg
inc
and
mov
and
popf
je
std
pop
push
or
push
test
iret
pop
je
jle
gs
addr16
mov
mov
xchg
in
fistpll
cli
rol
ds
movsb
pop
and
mov
je
scas
js
mov
push
and
mov
and
mov
inc
mov
and
mov
lods
inc
mov
enter
push
xor
xchg
js
test
sub
adc
bound
shll
push
mov
cmpb
xor
mov
out
iret
nop
mov
fs
mov
mov
dec
pop
mov
repnz
adc
fs
je
popa
out
or
pop
and
xchg
js
sti
sbb
or
ds
cli
outsb
iret
imul
pop
mov
mov
das
loope
cmpsb
nop
enter
int
cmp
push
mov
sub
pop
ret
test
mov
inc
mov
enter
sbb
or
inc
cmp
out
sub
inc
imul
imul
fwait
test
add
cltd
mov
jns
leave
fst
fmuls
imul
sub
lea
push
pusha
mov
out
fisubs
sbb
outsl
sbb
adc
out
stos
ret
es
ljmp
jno
jno
and
andl
scas
rcll
inc
stos
addb
loop
dec
popa
add
pop
sbb
stc
aam
cwtl
or
in
sbb
inc
sbb
xchg
or
test
fwait
je
cmp
fcomip
mov
fs
dec
sbb
pushf
pop
fldenv
mov
std
stos
mov
mov
int
push
sarl
js
pop
mov
je
cmp
xchg
xlat
mov
pop
xorl
cmpsb
pop
loopne
call
and
xchg
and
xchg
out
push
push
insl
repnz
jo
lcall
mull
cs
rcl
push
lahf
fmuls
enter
cmpsb
mov
mov
dec
arpl
ljmp
mov
push
pop
jmp
jb
push
pop
sbb
gs
sahf
add
xchg
sub
jmp
mov
das
xchg
add
xchg
cltd
roll
stos
cwtl
insb
push
and
dec
pop
jno
push
sbb
notl
mov
movsb
pop
jno
and
push
inc
dec
shrb
jno
xor
xor
and
inc
adc
popa
clc
movsl
leave
xchg
adc
mov
mov
andl
pop
hlt
jmp
cli
inc
loop
adc
test
adc
popf
imul
fidivl
mov
pop
push
bound
daa
into
lds
outsb
sbb
sahf
sbb
arpl
sub
lea
fwait
xlat
cmp
rclb
test
mov
ljmp
js
cs
repz
pop
dec
test
loopne
arpl
je
ja
adc
data16
push
cmp
inc
rcl
je
aam
ds
jae
inc
pop
scas
xchg
ret
call
push
mov
pop
shlb
imul
test
out
shlb
outsl
das
sbb
dec
inc
mov
mov
stos
cli
je
sahf
jbe
je
out
lock
cmc
cs
stmxcsr
mov
mov
cltd
aas
ret
js
push
in
data16
ret
xchg
add
out
js
dec
js
push
stos
mov
cmc
movsb
data16
lret
lods
sahf
xchg
cmc
mov
add
and
dec
jo
pusha
lret
mov
nop
mov
and
xchg
push
test
std
mov
push
aas
mov
pop
popa
mov
or
cwtl
and
outsl
or
in
imul
ror
or
mov
orl
popa
ret
loop
sbb
cltd
popa
dec
cmp
stos
push
cmpb
outsb
fs
stos
mov
cwtl
outsb
test
lcall
or
or
iret
imul
out
inc
std
outsl
or
dec
mov
dec
cmpsb
jp
addr16
xchg
adcl
sbb
mov
mov
rorl
dec
pop
jne
pop
inc
inc
imul
adc
stos
pop
int
push
mov
std
fs
inc
pop
sarb
icebp
movsl
mov
ljmp
bound
stos
or
xor
call
outsb
insl
insb
pop
outsl
cli
clc
cmpl
or
pop
pop
popa
adc
leave
fsts
addl
xchg
test
cmp
lods
loopne
jne
and
push
cmpsb
movzbl
push
inc
sub
loope
dec
test
gs
aam
and
pop
loope
sahf
je
and
mov
jge
mov
mov
mov
sub
incb
adc
ret
and
test
and
adc
jmp
push
pop
and
pop
mov
sbb
roll
mov
mov
cmpsl
out
inc
jns
pop
aam
pop
int
xchg
fwait
pusha
add
mov
add
ljmp
pop
pusha
in
sub
add
je
loope
or
or
call
fdivrs
and
outsb
out
addb
mov
or
push
adc
rcr
lds
loope
jno
jmp
test
mov
mov
fdivrs
sbb
mov
fwait
cmp
sub
out
mov
xor
lahf
jle
push
stos
cld
inc
cmpsb
mov
js
mov
pop
shll
cs
in
push
cmp
in
adc
sbb
xchg
test
push
into
inc
mov
pcmpgtb
mov
lds
jne
aad
stc
add
dec
ss
mov
mov
in
daa
repz
int3
jecxz
stc
gs
jno
xchg
add
outsl
rorl
inc
xchg
inc
ds
arpl
mov
adc
mov
xor
pop
scas
jmp
lcall
out
cmp
pusha
enter
stos
movsb
sub
out
aaa
jge
arpl
xor
xchg
jge
loope
cmp
mov
int3
pop
popf
xor
sbb
cwtl
shlb
arpl
pop
push
pop
jns
jl
pusha
loope
bound
addr16
inc
rcll
lahf
sub
bound
or
insb
test
mov
jmp
loop
andl
test
inc
xor
andps
adcb
dec
imul
je
in
mov
jbe
push
mov
cmp
ss
dec
pushf
sub
and
insb
jle
cmpsb
add
in
cltd
inc
dec
daa
mov
inc
bound
dec
addb
es
stc
jmp
mov
push
pop
mov
ja
pop
jl
fisttps
orb
jle
aam
mov
inc
mov
scas
icebp
or
push
dec
jb
lret
insb
inc
iret
outsb
into
or
pop
leave
std
stos
test
cmp
jge
test
sbb
cltd
mov
nop
push
and
outsb
int
lcall
mov
enter
cmp
in
jmp
dec
dec
in
mov
aad
cs
ljmp
push
and
aad
loopne
jge
test
mov
insb
jo
imul
jp
idivb
jle
imul
push
jmp
push
popa
adc
jp
pushf
mov
push
loope
insb
fs
imul
push
jg
pop
fcmovu
imul
or
sub
outsb
jecxz
cmp
sbb
testb
mov
test
sub
mov
andb
pop
pop
sub
and
mov
fsubrl
test
aad
inc
jo
movsb
push
int3
mov
stos
push
stos
push
dec
scas
sub
mov
fcoms
aas
pop
pop
loope
gs
sar
mov
push
mov
mov
sub
dec
sbb
mov
notl
jbe
sub
cmp
jecxz
mov
sahf
pusha
jbe
and
js
test
inc
stos
cmc
scas
and
enter
xor
and
pop
or
div
daa
push
add
mov
out
cltd
je
out
sub
jge
push
lcall
mov
test
push
push
es
mov
mov
push
and
xchg
in
jp
dec
pop
scas
test
ss
mov
cmp
ret
repnz
jl
push
loope
or
ret
aam
pop
jo
orl
lds
call
repnz
pop
jo
xchg
imul
fsubr
inc
dec
adc
sarb
pop
xchg
mov
mov
mov
je
cli
subb
push
shrl
sti
lock
nop
dec
bound
sbb
adc
mov
sub
push
xor
inc
inc
orl
sub
sub
imul
cmpsb
data16
mov
scas
mov
shll
popa
fisttpll
mov
lods
fiaddl
push
sbb
xchg
jbe
aas
aaa
rorb
jmp
je
add
insl
adc
mov
fst
insb
icebp
aad
jo
sbb
xor
or
mov
scas
inc
add
lods
sbb
nop
stc
xchg
xchg
and
add
insb
imul
push
cmpsl
fsubrl
jl
call
ds
scas
push
cwtl
test
cmp
push
test
xor
xchg
xorl
dec
mov
ljmp
stos
addr16
jecxz
xchg
call
mov
adc
jecxz
ret
jne
loop
orb
jbe
cwtl
hlt
jns
in
or
adc
push
movsl
xchg
push
xchg
pop
mov
jecxz
pop
dec
sarl
imul
imul
imul
lods
scas
dec
pop
insb
movsl
pop
aas
and
jbe
mov
add
mov
pop
jle
jbe
sub
pmulhuw
mov
mov
data16
mov
add
jno
loopne
shrl
xchg
stos
lock
neg
in
push
mov
and
mov
fs
nop
mov
or
movsl
insb
adc
test
das
test
icebp
adc
rcll
lds
adc
lcall
test
xchg
fwait
arpl
int
mov
mov
loope
dec
mov
cmp
add
mov
xchg
lods
fs
xchg
pshufw
or
xchg
es
rcrb
mov
pop
addr16
pop
inc
sub
add
clc
add
mov
mov
cltd
xchg
stos
xchg
cmp
xorl
fldenv
insb
push
sub
dec
push
cmp
shlb
fnstcw
inc
jb
rcll
add
rcrb
xor
pusha
sti
arpl
pop
int
idivl
mov
cmp
addb
mov
hlt
dec
fdivs
scas
repnz
lods
add
push
dec
cli
jmp
jl
push
adc
andl
xor
cli
push
andb
mov
xor
int
or
icebp
push
jp
push
imul
sbb
pop
mov
or
nop
subb
jge
gs
sub
lods
xor
xchg
adc
insl
mov
icebp
inc
cmp
leave
ljmp
mov
fsubr
scas
addb
cld
loope
pop
popa
mov
mov
mov
outsb
mov
add
movsb
mov
das
lock
cld
jmp
nop
call
leave
xchg
stos
mov
pop
dec
pop
jp
cmp
jno
cs
dec
mov
sub
mov
jo
xchg
cmp
bound
das
jg
sarl
imul
das
mov
cmp
and
inc
xor
push
inc
sbb
xchg
push
iret
test
cmp
sbb
cmp
xchg
mov
outsl
mov
push
sub
cmp
setle
push
loope
push
out
lea
cmp
cmc
das
nop
js
push
test
xlat
push
xlat
int3
push
pop
jl
cmp
loope
test
inc
shrl
jns
cmpsl
mov
int
add
and
add
ljmp
mov
xor
andl
xchg
push
or
jge
xchg
sbb
lods
sbb
mov
or
mov
fcomp
std
cmp
mov
cmpsl
sahf
push
bound
mov
stos
adc
jnp
mov
mov
push
push
pop
push
lods
icebp
daa
test
bound
cld
movsb
xchg
into
and
inc
mov
nop
iret
popa
mov
jbe
lret
xchg
stc
bound
ret
fldcw
leave
out
loopne
jg
test
and
outsb
das
add
repnz
dec
pusha
jl
push
int3
add
push
sbb
pop
cltd
mov
dec
shll
stos
xchg
aad
add
pop
cmp
inc
dec
xchg
xor
jle
inc
test
faddl
aaa
jo
inc
jg
adc
mov
mov
andl
and
shll
adc
mov
dec
rolb
or
xor
xor
cmpsb
mov
inc
inc
popa
out
or
pusha
jnp
movsb
out
inc
nop
dec
aas
push
cwtl
or
push
sbbb
cmpsl
and
cmpl
ret
les
pop
adc
out
clc
xchg
fucom
push
sub
ret
sarb
outsb
and
push
js
les
adc
pop
dec
clc
sbbb
cmpsb
dec
addr16
movsl
clc
test
jae
jle
fs
shll
pop
jno
push
or
mov
push
cs
scas
pushf
push
in
data16
push
xchg
push
add
stos
dec
xchg
inc
js
inc
stos
test
sbb
in
xor
stos
repnz
gs
fmuls
js
dec
cmp
mov
push
aad
cmp
addl
sbb
daa
mov
xor
sub
push
es
popf
and
add
dec
mov
roll
aad
addb
imul
push
pop
ret
pusha
xor
dec
xchg
out
jae
inc
ja
inc
push
dec
popa
push
xor
ja
rcl
xchg
ret
push
pop
scas
test
push
cld
pusha
pop
inc
cmpsb
inc
pop
sub
shll
int3
lea
in
mov
sub
push
mov
push
jp
push
pop
jbe
push
test
push
jnp
imul
das
pop
cmc
scas
jmp
pop
or
mov
out
push
js
data16
mov
and
hlt
sahf
lret
je
mov
stc
xchg
mov
pop
adc
pop
adc
fimuls
fwait
loop
jo
clc
xor
or
fcmovb
cmp
mov
inc
imul
fs
jno
add
scas
mov
aam
out
das
jl
adc
in
test
scas
cltd
push
rorl
dec
xchg
mov
imul
sarb
cmp
mov
jnp
lcall
ss
xchg
push
out
xchg
mov
iret
pusha
js
mov
mov
xchg
addr16
aaa
stc
sbb
mov
jo
aam
arpl
movsl
mov
cmpl
xchg
mov
cmpsb
xor
or
dec
xchg
pop
fistpl
int3
into
mov
mov
mov
mov
dec
loop
mov
in
inc
ficoms
xchg
mov
insb
push
imul
jno
adc
pop
movsl
or
out
dec
jns
push
popa
test
cwtl
ret
rorb
jo
faddl
jmp
std
adc
test
jnp
subb
inc
mov
pusha
hlt
pop
shrb
rcll
imul
das
fildl
cmpsb
arpl
push
jns
inc
xlat
sub
ret
dec
mov
mov
cmpsb
push
and
cltd
jl
cmp
or
push
inc
jo
jnp
mov
jno
std
scas
pop
sbb
stos
add
arpl
mov
testb
shld
push
cwtl
sbb
out
fldcw
out
out
arpl
ret
mov
jae
scas
inc
and
rcll
nop
out
pop
adc
and
mov
shrl
js
sbb
and
cmp
xchg
sbb
arpl
jg
mov
pop
mov
jecxz
inc
jne
imul
jmp
ds
lock
add
jo
fldenv
jl
stos
dec
outsb
cli
arpl
or
in
sahf
mov
mov
jne
jmp
arpl
bound
test
push
push
inc
jecxz
mov
xchg
jae
inc
sbb
mov
movsl
dec
ret
adc
dec
icebp
or
in
lds
and
push
cmp
fucom
inc
xor
push
mov
sarl
jae
movsl
and
test
adc
imul
or
loope
scas
js
or
add
sub
loope
cmp
push
es
inc
jge
push
mov
sbb
jg
pop
jge
popa
jne
add
mov
add
dec
std
std
test
pop
test
rorb
adc
in
jp
jl
dec
sahf
pop
mov
lahf
cwtl
int3
insb
cmc
ret
scas
push
fdivrs
outsl
iret
rolb
push
pop
jne
je
adc
sahf
fstpl
call
inc
pop
jno
pop
loopne
lds
jns
push
je
imul
jne
pop
loopne
mov
aad
scas
jp
imul
jne
out
fsub
lret
les
aad
mov
jno
std
sbb
xor
inc
jnp
jne
xchg
pushf
pop
pop
fsubrp
xor
mov
leave
jo
ret
push
jnp
xchg
sbb
cmp
mov
lret
andl
push
int3
lock
notb
int
pop
sub
xor
inc
xor
jl
push
xor
gs
xchg
sbbb
cli
pop
fs
mov
mov
adc
push
pushf
or
adc
std
sbb
fs
mov
mov
cltd
mov
call
outsb
push
and
pop
in
test
stos
xor
inc
arpl
outsl
mov
in
clc
jae
pop
test
fmull
aam
xchg
inc
pop
mov
inc
adc
inc
cmp
js
je
dec
adc
stc
adc
sbbl
mov
int3
imul
arpl
xchg
dec
cli
js
fmull
adc
jge
nop
jno
imul
lock
and
inc
gs
or
sbb
mov
stc
lock
or
dec
push
mov
cmp
fs
mov
inc
and
sub
ja
and
push
stc
jne
mov
and
inc
cmpsb
sub
std
add
lcall
mov
jo
adc
jmpw
ljmp
jnp
or
cli
pop
mov
push
fisttpl
mov
call
sub
add
push
int
test
mov
xlat
mov
inc
jae
movsb
jnp
lcall
sub
bound
scas
sub
clc
lods
lock
lcall
lcall
add
push
xchg
cli
fnstenv
sub
stos
cmp
xchg
js
cwtl
nop
test
cmp
inc
cmp
jmp
sti
mov
loope
in
adc
imul
ss
js
test
dec
sub
mov
add
dec
jmp
pop
es
push
sbbl
mov
pop
and
mov
ds
pusha
leave
enter
aad
in
xchg
adc
repz
loopne
cs
jae
xor
xchg
add
push
ficompl
xchg
mov
int3
adc
rcll
stos
test
fstl
rcrb
or
mov
arpl
push
pop
lret
sbb
xor
test
les
cmp
push
adcb
ljmp
xchg
popa
push
mov
scas
mov
adc
and
mov
inc
test
pop
jecxz
xlat
lret
fcomi
cmp
pop
fadds
leave
mov
rolb
sahf
push
cmp
stos
push
call
fbld
jp
loope
cld
je
dec
push
popf
dec
cld
push
mov
pop
mov
xor
or
push
aaa
imul
pop
popa
outsl
sbb
stos
inc
in
popa
xchg
sahf
aam
rorl
mov
call
or
cli
popaw
loope
fsubrl
jmp
sti
and
sub
les
pop
lcall
fildl
sub
sub
mov
int
xchg
mov
xchg
jge
sub
xlat
clc
or
std
lret
sbb
mov
cltd
into
xchg
stos
jb
jno
pusha
ret
std
icebp
xchg
pop
inc
bound
stc
js
add
jecxz
rcr
jg
cltd
push
and
push
pop
and
subl
pop
iret
xchg
and
xchg
jb
in
add
sub
test
inc
gs
add
mov
gs
ja
xor
mov
test
pop
and
jp
push
jne
inc
clc
dec
xor
jecxz
mov
and
push
xchg
sbb
xchg
pop
popa
inc
es
mov
jno
shr
gs
pop
mov
mov
or
cmpsb
or
lahf
test
lcall
dec
loope
andl
cmp
imul
fndisi(8087
push
add
xchg
inc
loope
sbb
mov
sub
pusha
pop
fs
ret
dec
mov
loopne
cmp
cltd
cmc
sub
icebp
pop
push
je
or
js
out
loope
mov
sub
xchg
inc
cmp
loop
in
or
fildl
out
stos
or
and
outsb
shlb
rcrl
inc
shlb
insb
inc
mov
out
loop
arpl
inc
popf
jg
fst
bound
mov
cwtl
js
mov
cmpsl
fidivrs
pop
push
jl
fnstenv
jo
xchg
fwait
std
arpl
ret
xor
js
xchg
mov
or
std
jo
cmpl
inc
and
push
inc
xchg
sub
outsl
js
mov
adc
mov
clc
das
imul
dec
shrl
jno
or
das
jge
jg
daa
in
fwait
push
push
adc
dec
xor
int3
sbb
push
or
mov
test
xor
sub
and
jge
mov
test
jl
push
jne
xor
push
jae
loope
sbb
js
or
mov
cmpsb
clc
sub
mov
and
cwtl
xor
out
pop
adc
filds
test
stos
pop
sub
xor
mov
enter
lods
push
jnp
dec
sbb
mov
mov
fadds
mov
xchg
push
push
rcrb
xor
stos
pop
or
popa
shrb
test
sub
ret
push
lods
outsl
test
jle
enter
loope
js
mov
dec
mov
push
bound
int3
pop
cmpsb
push
andb
enter
pusha
js
cmpsl
jl
mov
movsb
or
adc
jle
leave
in
outsb
aam
cs
stc
aam
cmp
push
pop
pop
fsubs
daa
enter
pop
sbb
inc
cmpsb
lods
dec
hlt
jg
test
outsb
insb
scas
ja
das
fs
sub
cli
sbb
es
fmul
mov
je
mov
push
mov
pop
sbb
dec
xchg
repz
cmp
pop
jno
pop
sahf
jo
iret
in
insl
or
jp
push
jo
jmp
mov
test
lods
insb
push
int3
cmovbe
cmc
cmp
push
mov
mov
fs
add
aam
pop
in
scas
imul
push
xchg
adc
add
gs
pop
pop
lea
repnz
scas
shrb
xchg
stc
mov
inc
nopl
pop
jl
jne
repnz
or
mov
arpl
mov
js
push
xchg
mov
mov
mov
movsb
addr16
lcall
push
rcrl
mov
int
in
pushf
push
imul
jmp
out
cmp
push
out
js
dec
pop
sbb
sahf
mov
inc
int3
arpl
daa
push
scas
rolb
sub
inc
rol
movsb
inc
and
xor
pop
and
cmpsl
bound
push
inc
lcall
cltd
scas
xchg
dec
mov
sbb
daa
ljmp
xlat
nop
aas
loope
sti
imul
popa
xor
cmp
iret
insl
push
mov
inc
mov
fld
pop
mov
cli
or
push
cwtl
mov
add
push
pop
test
mov
repnz
cmpsb
jb
cmp
lea
gs
sahf
dec
stos
mov
mov
das
mov
jg
lret
lods
stc
addr16
stc
insb
mov
mov
lcall
popf
rolb
cmpsb
inc
dec
in
adc
push
inc
jmp
jno
push
fcmovnbe
shll
and
shl
nop
cmpsb
xchg
shl
xchg
test
sarl
mov
push
push
mov
mov
outsl
mov
scas
xchg
test
or
sbb
jecxz
imul
lds
iret
test
xor
cmpsl
icebp
mov
xor
stos
xlat
cwtl
dec
sub
lods
data16
lods
cmp
jae
enter
rolb
pop
imul
mov
dec
adc
je
mov
adc
popf
out
pusha
arpl
dec
lods
mov
in
loopne
pusha
cld
jne
aam
das
stos
lods
mov
xchg
shrb
adc
jecxz
fidivrs
cmc
int
mov
or
in
mov
pop
lods
inc
out
scas
and
data16
dec
pop
jne
pusha
jae
adc
test
insb
pushf
mov
repnz
xchg
lcall
adc
jo
mov
dec
fwait
pop
pop
xchg
pop
lret
outsl
lods
in
and
push
gs
mov
mov
mov
fstpl
cmpsl
jo
imul
pop
jb
xchg
pop
loop
cmp
lret
out
xor
insb
data16
inc
andb
lods
cmp
xchg
sbb
int3
xlat
mov
mov
je
ret
mov
jge,pt
mov
insb
and
inc
push
sbb
pop
mov
ljmp
mov
inc
pusha
xor
pushf
pop
pop
and
imul
inc
jbe
arpl
mov
mov
int
push
aad
mov
pushf
fsubrs
inc
cmp
jge
stos
test
pop
enter
mov
sbb
mov
xchg
enter
mov
insl
push
mov
mov
in
push
es
popl
aaa
enter
xchg
dec
sbb
adc
xchg
sub
or
loope
fcompl
and
pop
cmp
repnz
xor
clc
add
addb
test
pop
pop
bound
imul
mov
mov
js
xor
cmpsl
rcrl
inc
mov
xchg
mov
push
dec
mov
mov
testb
movsl
ret
rcrl
mov
jge
pop
daa
imul
inc
cld
popa
fsts
xchg
call
and
push
mov
sbb
mov
test
mov
int3
rol
mov
xor
mov
lods
shll
fistl
adc
adc
pop
ret
aad
mov
addr16
std
push
popf
fmuls
js
xorb
mov
sub
movsl
sti
xchg
add
stos
push
imul
shll
xor
and
xor
les
mov
push
push
loop
jmp
int3
jle
mov
fidivl
mov
data16
subl
nop
pop
adc
sbb
adc
stos
es
xor
dec
cwtl
or
jo
inc
cmp
add
sub
imul
cmc
inc
dec
mov
es
push
pop
mov
add
in
lret
push
std
jb
movsl
fsubr
mov
push
ret
xor
sbb
bnd
outsl
sub
loopne
pop
mov
sbb
xor
sbb
clc
push
cmp
pop
daa
loope
aas
into
mov
xorl
push
add
xchg
inc
cmp
rcrb
cltd
jb
add
lcall
lods
call
add
cmp
cltd
loop
xchg
add
xor
dec
jb
jno
mov
add
test
clc
jp
cmp
movsb
sarb
mov
and
jecxz
notb
mov
arpl
sub
and
stc
push
xlat
fstpl
pop
pop
pop
pop
cld
xchg
pop
clc
jns
test
jmp
pop
hlt
shlb
mov
icebp
jno
repz
mov
pop
push
arpl
jg
xor
popa
add
jno
jbe
sbb
fs
iret
jg
stos
data16
test
mov
test
push
xchg
call
pop
pop
push
pop
test
jg
movsb
pop
test
loope
js
jge
mov
or
jp
or
daa
cld
add
xor
enter
popa
inc
sub
shr
sahf
jns
pop
pop
loopne
xchg
mov
js
inc
mov
fistpl
and
pusha
jmp
call
xchg
pusha
mov
int3
fisubs
popw
inc
xchg
loop
push
mov
mov
fnstenv
push
jne
mov
cmpsb
jb
or
insl
sbb
fistpll
out
add
pop
inc
push
adc
lock
iret
test
add
cmp
les
into
fmull
insl
jecxz
adc
inc
pop
lahf
gs
sbb
int
jp
mov
jns
inc
fimull
int3
jae
test
outsl
adc
stos
sbbl
fnsave
int
inc
pop
cmpsl
ret
mov
mov
test
jmp
popa
pusha
int3
fisubrl
shrb
dec
push
inc
loopne
jle
push
cmp
add
insb
ja
loopne
movsb
imul
sbb
pop
cmpsl
ficompl
imul
fwait
pop
fldl
test
je
push
mov
push
pop
stos
dec
mov
xchg
push
dec
mov
mov
jbe
push
lahf
or
pop
outsb
add
inc
inc
xor
inc
cmpsb
adc
leave
adc
jae
mov
mov
cltd
dec
out
mov
in
cmp
sub
js
jbe
addl
adc
scas
jmp
xchg
or
movsb
pop
test
loope
fstpl
sete
and
push
lret
insb
xchg
fst
daa
push
mov
xor
aad
push
cwtl
int3
outsb
inc
inc
add
xor
mov
mov
xchg
mov
pop
mov
sbb
mov
fldenv
cwtl
lods
out
pop
scas
xchg
sub
mov
orl
and
pusha
jo
sbb
mov
pusha
xchg
jl
or
clc
mov
enter
movsb
or
addr16
mov
rcll
jecxz
mov
mov
leave
xor
and
cmpsl
into
cmp
data16
mov
in
movq
jg
adc
jge
sbb
int3
xchg
and
sub
xchg
sub
mov
in
int3
inc
lcall
fldcw
adc
push
outsl
jno
mov
cmp
sub
or
ljmp
inc
scas
jp
divb
sti
dec
or
or
pushf
xor
cmp
lcall
fidivrl
mov
addl
add
inc
or
idivl
cmp
js
inc
andl
loope
pop
pop
and
pushf
jbe
int
sbb
pop
inc
sbb
mov
fadds
das
ja
add
adc
stc
repnz
add
pusha
or
or
jns
sbb
xor
or
inc
cmp
and
push
dec
add
jo
test
mov
mov
repnz
push
loope
sub
outsb
dec
mov
pop
lods
divl
imul
dec
js
push
add
jge
icebp
pusha
ss
jge
sub
mov
sbb
xchg
jmp
adc
jl
mov
sbbl
frstor
jo
popa
jns
cmp
xchg
int
negl
push
cmc
pop
lret
lahf
jge
xlat
loopne
cltd
xchg
add
lret
pop
sbbl
xor
add
inc
sti
sahf
arpl
nop
mov
fwait
subb
pop
add
jg
xor
outsl
fs
mov
jns
vcvttss2si
mov
xor
mov
test
scas
push
scas
cmpsl
inc
add
add
and
movsl
cwtl
test
into
pop
into
adc
shr
pop
aad
movsb
test
and
ss
cmp
pushf
push
popa
mov
jecxz
or
lods
test
pop
fstpt
pop
das
test
bound
rol
dec
andb
pop
cmp
dec
fstpt
lods
sub
jb
pop
mov
pusha
ret
push
pop
xorb
andl
popa
sbb
stc
movl
pop
mov
addr16
cmc
mov
inc
shll
or
rorl
lods
mov
mov
sbb
out
lock
cltd
insb
in
mov
mov
pushf
xlat
lahf
mov
std
fwait
out
push
mov
mov
lods
and
push
push
movaps
xchg
int3
stc
or
push
insb
fdivrl
sti
inc
jg
jb
jns
jmp
mov
or
mull
iret
loop
test
add
cmp
jb
mov
fwait
dec
add
bound
pop
mov
adc
andl
stc
pop
add
popa
bnd
mov
xchg
mov
or
cli
pop
adc
inc
loopne
push
cmp
push
mov
mov
fwait
or
xchg
mov
pop
test
push
pop
pushf
ja
cwtl
loope
mov
sahf
int3
sub
aad
add
test
cwtl
ljmp
or
insb
fldl
mov
jae
adc
fldcw
sahf
ds
mov
push
sbb
or
xchg
adc
mov
aam
movsb
sahf
adc
xchg
mov
cmc
aam
add
outsb
call
pusha
les
push
jo
cmpsb
sub
adc
fcoms
mov
stos
and
and
dec
cmpsb
lods
sub
lods
imul
jb
push
xchg
fs
rorl
pop
adc
push
or
fidivl
lcall
sarb
imul
leave
ljmp
mov
fldl
fnsave
rep
gs
jl
push
ja
mov
insb
xchg
adc
xor
pop
in
xor
mov
mov
xchg
xchg
cmp
xor
fsubrs
mov
lods
inc
mov
push
popf
lods
sub
inc
sbb
mov
into
mov
mov
mov
push
setb
cmp
repz
jecxz
ficoms
addr16
insb
test
push
mov
mov
xchg
lods
repnz
insb
cltd
jl
bound
iret
test
inc
inc
insb
lods
mov
jp
cwtl
fs
ficompl
push
rcrb
push
jg
cmpsb
loopne
lock
mov
inc
xchg
ja
ja
jl
popa
ret
sarb
rep
jo
aaa
inc
mov
ljmp
inc
imul
ljmp
xchg
mov
adc
dec
and
outsl
ss
mov
test
hlt
out
sbb
mov
mov
sti
outsl
ljmp
aaa
jnp
outsb
mov
or
mov
sbb
icebp
inc
out
mov
jge
dec
cmp
push
mov
push
and
insb
test
jns
dec
jg
fldcw
jp
arpl
push
int
or
xchg
in
xchg
addb
inc
lea
xchg
pop
xchg
mov
or
xor
mov
ss
inc
adc
popa
pop
push
or
inc
jl
push
outsb
mov
out
xchg
jbe
idivl
js
jecxz
enter
mov
mov
mov
js
int
jl
mov
xchg
pop
test
pop
push
outsb
add
test
mov
sub
test
cmp
xlat
cs
in
push
arpl
push
jb
iret
pop
lds
outsl
arpl
push
xchg
cli
jns
movsb
push
sbb
mov
outsb
pop
jmp
mov
scas
scas
nop
cwtl
mov
fnsave
cwtl
push
fwait
pop
scas
test
jge
ss
outsb
cli
sahf
lcall
call
ret
inc
scas
das
in
cmp
clc
sub
inc
imull
mov
inc
rolb
fwait
sub
sbb
inc
insb
xchg
in
call
bound
mov
loop
in
iret
js
subl
mov
cmp
and
pop
mov
in
fistps
std
sub
pop
mov
jg
lods
jnp
into
push
mov
push
fiadds
adc
andl
inc
push
out
imul
xor
sub
stos
fsubs
inc
stos
mov
arpl
inc
insb
orb
pop
sub
push
pop
inc
lcall
adc
out
and
addl
pop
adc
test
andl
arpl
lcall
rolb
lock
mov
inc
mov
push
mov
push
jl
inc
sub
dec
mov
fisubrs
jecxz
addr16
insl
dec
scas
pusha
fdivr
pop
sub
cmp
cmpsl
sbb
mov
dec
push
outsb
xchg
out
mov
or
test
bound
jecxz
or
adc
ds
stos
xchg
fmuls
js
hlt
mov
cmp
in
pusha
stos
scas
popa
fidivrl
mov
push
adc
lret
xor
arpl
addr16
xorb
pop
xor
popa
lret
fsts
xchg
xor
movsl
adc
xlat
and
sbb
jb
sbb
push
mov
test
mov
arpl
shll
xchg
cmpsl
mov
outsb
cmp
sbb
or
xchg
mov
out
xchg
pushf
cmp
movsb
jnp
dec
or
rclb
ffree
imul
sbb
jb
loop
ret
rcrl
test
jb
sbb
addb
jg
pop
sbb
pop
fcomps
or
test
shrb
andb
test
and
jp
pop
negb
pop
rcrl
sbb
jmp
sbb
lret
lcall
add
jo
orb
sub
mov
adc
lcall
or
mov
mov
or
rorb
push
pop
outsl
lcall
fwait
sbb
xchg
leave
mov
jno
je
mov
sub
stc
dec
test
sbb
mov
jp
xor
cmpsb
insb
or
popa
push
orl
pop
or
sbb
push
pop
shll
jne
or
movsb
mov
mov
aas
sub
lods
test
lahf
or
and
js
lahf
iret
sarb
push
shrl
incl
push
js
cltd
jmp
cs
cmp
es
jle
mov
dec
mov
mov
sbb
sbb
jp
sub
add
cltd
xchg
shll
popf
or
jns
mov
sti
hlt
mov
mov
cwtl
test
test
fstpl
jae
in
cmpsb
fldenv
xchg
xlat
nop
mov
sub
push
adc
adc
test
mov
sbb
cwtl
inc
cltd
jae
rcll
cltd
test
outsb
inc
lods
sbb
jecxz
mov
imulb
xchg
sti
outsb
cmpsb
addb
jnp
adc
adc
les
mov
pusha
rcrb
inc
outsl
rolb
inc
jne
pop
out
sahf
xchg
and
cmpsb
mov
aad
lret
pop
addr16
cld
jo
bound
inc
jge
data16
mov
and
jne
gs
imul
cld
fiadds
addr16
fldl
xlat
jb
fnstsw
mov
mov
mov
jns
lret
push
xlat
pop
out
push
gs
repnz
inc
cmpsb
out
into
xor
jbe
imul
jns
daa
add
cmpsl
and
xchg
gs
movsb
mov
outsl
ds
push
jl
sbbl
mov
addr16
in
dec
inc
das
ds
clc
jmp
pop
les
jg
xor
sub
adc
test
pop
pop
scas
shrb
and
jo
xchg
fisttpl
in
daa
addr16
pop
dec
sub
sbb
idiv
mov
sbb
nop
xchg
pop
mov
pusha
rcr
jne
mov
jl
cwtl
inc
shll
push
push
mov
pusha
faddp
nop
shll
lcall
scas
inc
stos
jg
dec
pop
push
xchg
pop
mov
lods
ljmp
or
mov
pusha
scas
xchg
outsb
and
dec
in
xchg
loope
pop
push
push
mov
shl
adc
lcall
jle
js
arpl
pop
repnz
lcall
push
mov
ja
xchg
push
call
iret
pusha
cld
es
int3
adc
stos
test
jmp
cmpsb
nop
xor
hlt
imul
xlat
std
and
adc
add
loopne
dec
loop
jl,pn
cmp
orl
push
cmc
ds
pop
and
push
dec
enter
pop
loopne
jecxz
sbb
jo
mov
sbb
into
mov
xlat
iret
mov
popf
sbb
push
sbbl
aaa
xorl
fstl
push
xor
cltd
popf
cwtl
iret
pop
adc
mov
xor
addr16
pop
shl
bound
xchg
insb
push
lret
cwtl
add
jl
nop
shl
inc
jb
inc
dec
out
push
popa
icebp
imul
outsb
pop
popf
frstor
mov
and
dec
xor
mov
scas
adc
sub
les
out
mov
cltd
lods
push
stc
scas
jnp
mov
clc
sbb
subb
mov
adc
jge
ljmp
mov
rcr
jae
sbbl
gs
xchg
push
scas
andl
add
test
sahf
xorb
xchg
sbb
sti
subb
jno
inc
jg
imul
inc
xchg
inc
jbe
push
add
ljmp
jmp
mov
jae
fsubrl
bound
mov
gs
pop
pop
ljmp
fdivrs
xchg
outsb
scas
push
in
outsl
mov
mov
jle
sbb
aas
arpl
mov
ret
pop
pop
loopne
stos
and
pop
jb
cli
and
jns
sub
lret
mov
sbb
add
in
dec
xor
test
add
scas
stos
add
fisubrs
add
sbb
aad
adc
jge
in
das
pop
pushf
dec
or
pop
inc
xor
test
in
leave
mov
mov
mov
mov
dec
pop
and
mov
fisubrs
fisttps
push
jge
inc
sub
loope
pop
xchg
adc
pushf
imul
shlb
sbb
sub
ret
mov
in
lds
cmp
stos
cltd
or
popa
sbb
fbstp
jns
nop
das
loopne
pmulhuw
lcall
pop
jmp
add
jl
cmpl
adc
or
cltd
test
xchg
outsl
sbb
imul
adc
fcmove
cmp
cli
fs
loopne
jnp
mov
popa
stos
inc
pop
dec
imul
insb
jbe
aad
mov
cmp
inc
jne
ret
and
out
fs
xchg
add
sbb
pop
add
lock
jecxz
xlat
jmp
dec
fcompl
dec
lcall
testb
mov
sub
popf
scas
add
sub
clc
in
and
mov
push
push
test
mov
ds
xchg
test
adc
gs
or
fwait
stos
outsl
pop
lods
inc
cmp
or
mull
imul
add
mov
inc
dec
push
mov
jle
scas
mov
cli
in
js
and
push
loopne
and
dec
stos
jne
push
cmp
lods
insb
insl
jmp
insl
xchg
or
inc
ret
add
and
dec
scas
adc
pop
cs
xchg
or
cmp
sbb
pushf
sbb
cmc
paddd
mov
push
ljmp
ljmp
xchg
mov
int
mov
and
xchg
mov
xor
or
mov
push
cmpsb
mov
adc
xchg
add
clc
cmc
int3
dec
mov
icebp
adc
stc
cmp
adc
jl
push
mov
out
loop
pop
stc
cmp
ljmp
pop
test
popf
cwtl
mov
or
frndint
mov
loope
cltd
push
sub
push
test
ds
mov
dec
cli
into
mov
adcb
sti
jae
insb
sbb
sub
push
or
movsb
sbb
data16
in
es
pop
inc
sbb
cmc
or
insb
ss
lcall
xlat
xchg
fdivp
add
loopne
jge
pop
in
fs
xor
test
sti
sbb
pop
push
ja
std
push
push
mov
cld
push
ljmp
pusha
pop
stc
xchg
int3
stos
inc
inc
popa
xchg
aaa
into
fwait
push
cmpsb
mov
push
push
push
lret
mov
push
fs
push
js
movsb
pop
or
xchg
mov
sbb
stos
mov
mov
jp
jo
and
into
pop
xor
ret
outsb
insb
lret
pop
mov
je
sbb
int3
or
into
test
and
rorl
sub
cmp
js
aam
sub
sbb
test
pop
fadd
dec
sbb
insb
jne
pop
xchg
rol
outsb
jo
stos
mov
add
out
repz
mov
in
bound
dec
pop
mov
shrl
pop
mov
push
call
push
jmp
or
arpl
inc
add
insl
sbb
loope
sub
inc
jecxz
popf
push
mov
pop
jmp
cltd
jl,pt
or
mov
test
dec
movsb
xchg
gs
jns
clc
imul
fistl
mov
or
dec
fnstcw
out
inc
sahf
adc
std
js
inc
and
push
insb
pop
int
dec
or
out
mov
or
loope
jo
push
div
jb
mov
cmp
pop
inc
sbb
int
pop
dec
jl
insl
les
dec
cs
jge
inc
rclb
icebp
cmc
js
aam
movsb
jmp
dec
ds
jg
cs
outsb
mov
dec
and
cwtl
out
dec
cmp
adc
gs
lock
lea
sbb
int3
jo
sbb
in
mov
pop
jbe
inc
bound
xchg
in
pmuludq
mov
mov
push
and
xadd
clc
fimuls
dec
or
xchg
cmpsb
dec
cmp
dec
int
pop
push
ss
imul
rolb
in
inc
mov
bound
inc
shlb
out
mov
or
lods
and
and
or
test
xchg
imul
int
mov
pop
mov
add
sub
and
adc
dec
ljmp
in
or
adc
hlt
int
cmp
std
adc
jecxz
rolb
aaa
loop
ret
cmp
xlat
and
daa
mov
imul
mov
je
fcompl
add
arpl
jl
testl
inc
fisttpl
xchg
sarl
ljmp
sub
or
sub
dec
scas
jecxz
mov
std
mov
pusha
push
aad
sbb
push
sbb
cltd
mov
jo
jmp
loope
xchg
cltd
jbe
xchg
pop
jns
enter
pop
pop
jge
inc
pop
xor
bound
sbb
cmp
lcall
pop
shrl
ret
repnz
add
ficomps
clc
test
movsb
add
popa
jns
lea
les
xor
call
fdivrp
imul
sti
outsl
fimuls
dec
inc
arpl
xor
mov
jle
pushf
js
or
loope
and
add
pop
lret
push
sbb
je
mov
cltd
inc
clc
mov
out
stos
pusha
mov
arpl
mov
cmpb
insb
scas
in
cltd
xchg
scas
loope
dec
jbe
stc
imul
pop
push
inc
pop
aam
or
scas
stos
mov
mov
adc
out
in
movsl
adc
or
cld
jo
dec
movsb
cmpsb
mov
cmpsl
insb
mov
insb
push
sti
int
sub
add
add
sarl
inc
jno
fmul
push
fucomp
adc
int3
or
mov
mov
loop
aam
inc
mov
icebp
jecxz
outsb
pop
out
pop
cld
pop
test
inc
shll
fs
mov
dec
test
enter
in
popf
mov
cmp
popa
sarb
hlt
cmp
sub
stc
jp
movsl
test
sbb
and
xchg
mov
cmp
rorb
inc
mov
dec
pop
mov
dec
cld
jge
and
divl
nop
jbe
cmpsl
mov
pop
aam
int
adc
aam
test
mov
mov
xchg
addr16
pop
sbb
inc
nop
inc
pop
sti
pusha
mov
jg
jl
and
pop
fldenv
jae
scas
or
addr16
cmpsb
sbb
cmpsl
pop
fwait
stos
xlat
test
jmp
arpl
add
jne
sub
adc
push
pop
xchg
insl
lahf
inc
sbb
sub
arpl
sar
push
jg
sub
mov
add
push
mov
cs
push
dec
jmp
cmp
scas
push
lret
cld
sub
repnz
fsubrl
mov
in
stos
jns
clc
stos
in
nop
mov
fwait
popa
loopne
lods
or
popa
int3
imul
and
ss
jmp
push
adc
aam
loopne
scas
or
push
shl
pop
iret
fldcw
mov
lock
cs
xchg
push
add
xchg
aas
xchg
sub
push
add
test
je
lcall
in
ret
movsb
pushf
mov
mov
and
adc
pusha
xchg
out
sbb
bound
jge
push
sbb
jo
gs
stos
arpl
cmp
fwait
pop
lock
or
mov
sbb
je
leave
lock
arpl
testb
sub
add
cmc
xchg
enter
movsl
jne
popf
jb
addr16
and
in
orl
rorb
jl
insl
shrb
xchg
pop
or
je
add
in
cld
repz
out
cmp
ljmp
pop
scas
xor
cltd
push
cmp
xor
loopne
inc
mov
push
cvtps2pd
mov
inc
sub
mov
pop
cli
ljmp
jb
xlat
loope
sub
imul
xchg
call
dec
popa
cmp
sub
out
sub
icebp
mov
inc
mov
jbe
rclb
pop
cmpsb
push
enter
mov
bound
outsb
shl
pusha
ljmp
outsl
dec
xchg
cmpsl
loop
mov
pusha
jg
lret
push
push
data16
popa
jmp
flds
pop
shll
xlat
jo
icebp
pusha
js
pushf
movsb
lcall
adc
mov
pusha
cmp
test
outsl
int
outsb
adc
push
out
in
into
into
test
insb
push
fidivl
dec
dec
cmpsb
pop
push
dec
add
loope
xchg
xor
addb
lea
pop
and
out
inc
clc
mov
mov
sti
mov
imul
push
push
jg
pop
dec
shl
lahf
xor
adc
shlb
and
fcom
les
popa
cmp
nop
fs
in
ljmp
xor
mov
xchg
rorb
adc
fwait
ljmp
test
mov
das
sub
jecxz
into
sbb
mov
push
cmp
out
mov
cmpb
flds
pop
in
dec
loope
test
test
subb
stos
sub
xchg
jg
lahf
lods
cmp
loopne
ds
xchg
cmp
mov
cltd
bound
inc
sbb
mov
jnp
dec
stos
sbb
fdivrl
push
jge
push
cli
inc
sbb
stos
push
dec
mov
in
call
mov
mov
push
sbb
xor
fidivl
loope
cmp
mov
mov
inc
inc
fwait
mov
fidivrl
sahf
push
pop
fistpl
pop
cmpsb
movsb
int
outsl
mov
cmpsb
and
inc
xchg
lods
or
shll
icebp
xor
inc
mov
sub
outsb
test
pop
jo
or
and
pushf
fdiv
aam
pushf
clc
mov
test
jmp
pop
push
rcrl
cwtl
push
sub
or
cmp
or
push
pop
push
sbb
es
pop
stos
stos
loope
mov
mov
addr16
adc
gs
mov
jne
addr16
fcmovnu
stos
mov
shll
sbb
xchg
and
int
push
movsb
add
nopl
jmp
dec
mov
dec
lds
lock
lods
hlt
fimull
mov
test
or
frstor
inc
lods
mov
sub
cltd
stos
in
sarl
sbb
andl
adc
pusha
pushf
mov
mov
cmp
dec
lock
lods
jmp
popa
jmp
mov
inc
jp
push
lcall
xor
jb
fwait
adc
lods
mov
js
jae
adc
and
test
add
rcr
cmpsl
fcmovb
inc
movsb
or
sub
xchg
add
push
xlat
push
mov
cwtl
cwtl
adc
sbb
mov
out
outsl
push
cmp
sahf
adc
jecxz
mov
pop
imul
dec
jbe
int
arpl
cmpsl
inc
das
mov
and
jae
sub
cmpsl
push
mov
fimull
mov
cmp
call
jnp
shll
xor
dec
mov
sbb
int3
jo
xchg
jns
push
pusha
es
stos
test
lods
out
cmp
sbb
fdivr
cmp
add
push
push
inc
outsl
pop
gs
mov
inc
xor
inc
insb
scas
ret
mov
pusha
shrb
sub
mov
adc
and
repnz
ja
jge
loopne
jle
stos
std
popa
mov
inc
or
sub
and
xor
scas
mov
fsubr
adc
inc
test
loop
imul
mov
mov
dec
mov
shl
mov
mov
jge
cli
psrlq
outsb
jnp
lret
fnstcw
pop
lret
mov
cmpl
mov
stc
jns
fdivrp
aad
insb
in
scas
mov
xchg
mov
movsl
out
xorl
leave
data16
xor
insb
insb
stos
fwait
cmpsl
inc
popa
fs
inc
inc
fstpl
cmp
mov
pop
inc
mov
jl
inc
cmpsl
dec
stos
sub
popa
scas
repz
outsl
sar
inc
add
xor
out
clc
loop
stos
xchg
xchg
shlb
mov
inc
lods
mov
adc
sbb
fimuls
ja
in
mov
fs
push
xor
inc
pop
inc
popa
faddl
inc
rorl
test
mov
xor
mov
mov
inc
outsl
movsb
pop
add
imul
iret
push
clc
popa
pop
int
dec
dec
hlt
fstps
and
or
test
fwait
or
mov
push
imul
test
push
jns
fmuls
and
and
outsl
sarb
lcall
gs
filds
sbb
outsl
inc
xchg
popf
adc
les
jp
lcall
test
jl
testb
pusha
ret
adc
sbb
xor
int
dec
cltd
adc
add
xchg
add
sub
pushf
dec
mov
loop
xor
add
nop
lahf
fs
pushf
inc
jp
mov
xor
dec
jp
xchg
sub
push
add
popf
sub
jl
fidivl
lock
cmp
push
mov
subb
jno
fs
jp
xchg
push
xor
pop
or
xchg
scas
adc
out
in
lds
sbb
pop
pop
pop
fsubrs
stc
add
jo
xchg
stos
arpl
cltd
inc
xor
add
js
adcb
jae
adc
out
mov
pusha
push
xchg
or
sbbb
jge
mov
add
inc
fdivs
adc
inc
xchg
dec
push
in
sbb
mov
arpl
mov
push
or
inc
mov
in
add
loopne
pop
stos
and
jge
mov
mov
repz
xchg
arpl
lds
pop
ficoms
cmp
lcall
loope
sub
add
loopne
xchg
xchg
sbb
loopne
fstpl
mov
movsl
and
test
pushf
cwtl
lcall
or
inc
lcall
adc
jmp
cli
popa
loopne
inc
or
sub
xor
cmp
push
mov
out
ret
and
cltd
push
pusha
mov
or
fsubl
pop
adcb
push
sub
rclb
jl
jecxz
xchg
decb
adc
fwait
inc
add
adc
clc
lcall
xchg
enter
fisttpl
imul
mov
push
scas
subl
icebp
mov
xor
add
div
into
push
push
sbb
dec
movsl
gs
mov
jp
pop
aad
cwtl
sahf
test
bound
sub
mov
stos
xchg
ds
stc
mov
in
xchg
and
xchg
das
mov
jge
loopne
lea
test
pop
js
jl
sbbb
cmp
push
xchg
js
dec
jp
call
jecxz
data16
mov
loopne
mov
adc
mov
dec
scas
jnp
push
pop
test
fdivrl
lock
call
push
icebp
ret
stos
insl
pop
jae
xchg
sti
mov
add
ljmp
and
loope
pop
adc
addb
mov
mov
lret
and
andb
mov
jp
out
cmpsb
stos
cmc
dec
pop
lcall
jp
pop
movsb
jg
sub
and
addr16
cmp
lcall
imul
pop
ror
mov
bound
mov
nop
gs
filds
pop
loopne
out
xchg
mov
repz
daa
ljmp
rcrb
mov
jbe
mov
push
mov
in
mov
shrb
test
push
fwait
cmp
xchg
dec
mov
iret
or
mov
xlat
pusha
and
lret
pop
or
xor
imul
push
adc
push
imul
dec
mov
lret
clc
cmpsb
xor
push
mov
insb
pop
sub
cmp
pop
mov
shl
popa
push
push
fisubl
popa
inc
mov
mov
sub
fistpl
negl
mov
xchg
sub
cltd
xor
lock
int3
ja
push
xchg
scas
out
xchg
imul
mov
loop
imul
scas
mov
aad
mov
sub
out
int3
jmp
scas
icebp
ret
bound
je
call
mov
pop
add
sub
bound
push
popa
xchg
inc
pop
cmc
inc
cltd
mov
mov
add
xchg
sbb
out
xor
pop
out
insb
push
and
rcrb
call
cmp
ja
int
mov
or
and
push
leave
push
mulb
je
xor
push
xchg
inc
aas
sub
test
stc
add
or
pusha
xchg
push
aad
gs
dec
and
loopne
mov
xchg
inc
jae
dec
jl
xchg
push
lahf
imul
in
out
jmp
jo
sbb
sti
out
sbb
cmp
sub
pop
ljmp
inc
jp
call
xor
shrb
ja
mov
cmc
lret
outsb
xchg
push
pop
lds
shlb
mov
push
jb
mov
push
xchg
add
sbb
and
ss
movq
test
repnz
and
xchg
dec
aam
pop
in
adc
push
mov
shrb
cwtl
shlb
mov
cmp
call
out
mov
sbb
xchg
repnz
xchg
add
add
push
std
test
mov
or
jnp
xchg
mov
aad
dec
in
jge
daa
adc
js
jl
loope
into
pop
jmp
cmp
adc
mov
push
adc
mov
push
sub
xor
jge
inc
fs
cli
cmc
test
mov
mov
mov
insb
add
inc
lcall
fsubl
and
mov
aaa
int3
fldt
dec
add
int3
es
imul
xchg
mov
cs
push
loope
movsl
imul
mov
lds
sub
fs
pop
int
pop
out
mov
pop
or
mov
add
jl
cmpsl
mov
xor
cmc
mov
lods
mov
add
mov
frstor
jbe
aas
loope
call
jo
cmp
sahf
and
in
cmp
sbb
fistpl
mov
and
xlat
int
mov
pop
inc
sbb
and
dec
cltd
xchg
imul
mov
lea
lahf
xchg
mov
insl
es
int
lcall
xchg
pushf
xchg
push
pop
add
xchg
adc
jne
adc
or
mov
xlat
sbb
js
xchg
in
add
xchg
sti
sub
scas
xor
adc
xchg
push
adc
fnstcw
pusha
cmc
mov
jg
faddl
fcoms
dec
lahf
and
in
je
mov
loopne
push
dec
insl
push
jo
int3
xor
pop
mov
out
test
mov
inc
jbe
sbb
jb
mov
stos
mov
inc
mov
in
mov
loop
cs
push
push
ljmp
pop
inc
je
jl
imul
hlt
cmc
cld
jne
sub
loope
js
jl
movb
fs
dec
mov
inc
or
mov
enter
jecxz
cltd
fisttpll
dec
mov
mov
push
pushf
dec
scas
push
push
psubb
mov
mov
mulb
adc
push
pop
add
imul
and
mov
call
dec
lods
xchg
lcall
test
jne
push
out
mov
jp
push
adcl
ret
mov
lods
pop
aas
inc
jecxz
push
xchg
cld
loop
adc
mov
popa
xlat
into
jmp
bound
sbb
mov
xchg
scas
rolb
cmp
out
sbb
add
lea
xchg
pop
out
nop
gs
popa
int
push
mov
fstpt
addr16
sbb
clc
test
cmpsl
or
push
push
jo
mov
shll
or
dec
mov
call
jge
cmp
push
popa
call
xlat
jno
push
loope
nop
mul
in
and
add
loope
dec
filds
adc
popa
or
push
ss
in
fs
sahf
sbb
pop
ret
mov
push
mov
in
call
push
mov
fmuls
or
mov
jno
sbb
inc
andb
lock
fsubrl
ficoms
loop
inc
cmp
outsb
mov
push
fwait
mov
cltd
sub
add
les
cmpsl
add
mov
cmpb
mov
imul
adc
cltd
pusha
sub
pop
pop
adc
xchg
fcomps
mov
iret
or
and
dec
movsl
xorb
xor
dec
xlat
cmp
xchg
es
mov
xchg
jne
imul
xchg
dec
loopne
sbb
push
push
cmc
sub
push
popf
or
push
sub
fs
mov
sub
or
addr16
add
mov
out
in
lods
out
mov
lods
fdivl
xor
adc
stc
push
mov
ret
out
aam
stos
fsubl
loope
inc
mov
xchg
fs
int3
xchg
cwtl
das
mov
outsl
inc
add
inc
shll
andl
subb
mull
mov
cwtl
adc
inc
ljmp
add
jns
jmp
push
add
mov
cmp
adc
adc
mov
sub
lock
jmp
mov
sahf
push
xchg
jecxz
mov
add
cs
adc
popa
mov
out
sbb
push
call
sbb
test
pop
push
pusha
mov
pop
add
icebp
imul
mov
popa
pushf
jg
or
inc
std
dec
aam
mov
adc
mov
lock
dec
pop
outsl
and
add
jns
xchg
pop
ret
in
int3
lds
inc
pop
aam
push
pop
scas
inc
lret
sub
aad
repz
push
fs
fwait
mov
and
insb
loope
mov
fcoml
stos
mov
mov
mov
push
flds
sub
pop
push
pop
dec
je
push
in
loop
xchg
imul
nop
addr16
ja
cmp
outsb
mov
dec
pop
sub
and
lcall
push
inc
mov
push
jg
cmp
dec
nop
cmp
stc
repz
cwtl
cmp
leave
sbb
insb
xchg
sbb
sbb
in
inc
mov
outsl
loop
out
or
lcall
fistpll
push
nop
stos
pop
fcmovnu
movsb
ret
mov
cmc
mov
mov
adc
mov
jnp
mov
mov
movsb
loop
pop
lods
mull
nop
sti
popa
jge
jg
adc
adc
sbb
xchg
fwait
mov
sti
stos
iret
cld
icebp
test
pushf
pop
cmpxchg
or
outsb
dec
inc
jp
push
imul
es
inc
lds
lods
dec
mov
and
push
push
test
xchg
adcb
das
aam
loope
les
js
xchg
movsl
cmp
lcall
insb
dec
fs
jns
mov
sub
pusha
lods
pusha
loopne
scas
push
dec
in
mov
sub
xchg
lcall
lea
dec
aas
imul
or
mov
sbb
rorb
adc
pop
fs
ret
outsl
cwtl
push
mov
enter
les
adc
int3
repz
outsl
dec
add
mov
in
addb
aas
pop
mov
lods
sub
pop
lea
mov
sahf
rclb
stc
push
loope
pusha
or
fs
pop
in
push
arpl
adc
insb
ret
test
cmp
fdivrs
push
add
xor
jbe
nop
adc
xchg
popa
xchg
mulb
jbe
test
fsubrs
mov
int
mov
fs
cmp
adc
arpl
popa
jb
test
pop
stos
add
xchg
insb
sahf
shr
lret
fldcw
or
jg
push
jecxz
push
rclb
push
outsb
and
inc
mov
fcomi
mov
fdivrs
jg
imul
lods
jge
rorb
cwtl
sub
adc
rolb
cmp
mov
push
jp
pop
xchg
xlat
mov
sub
int
popa
and
push
sbb
add
inc
mov
mov
bound
imul
jbe
iret
mov
push
and
pop
out
scas
int
xchg
inc
in
lea
inc
push
xchg
insl
xchg
mov
xor
add
mov
inc
in
jge
lock
mov
movsb
stc
cli
mov
pushf
adcb
sub
push
lea
js
mov
arpl
mov
das
push
sub
mov
fistpl
jge
push
sbb
pop
add
mov
inc
das
es
mov
jb
fsubl
xorb
mov
fsub
mov
gs
shrb
sub
or
sbb
inc
or
push
pop
shrl
bound
mov
mov
cmpsb
pop
fldl
push
dec
test
push
cmp
fwait
adc
jle
mov
pusha
mov
push
adc
mov
mov
mov
jge
mov
pusha
cltd
cmpsl
stc
adc
sahf
cwtl
test
imul
mov
sbb
adc
adc
lret
imul
mov
call
orl
shrb
stc
subb
imul
sbb
jle
mov
cmp
cs
frstor
sti
jns
insl
pop
pop
dec
cwtl
xchg
ret
xor
xor
jle
xchg
jp
repnz
arpl
fadd
loop
addr16
push
sub
sbb
pusha
pop
popa
and
cmpsb
lods
mov
pop
ja
int3
fldcw
sbb
mov
inc
jno
mov
mov
push
int3
push
add
adc
lea
cwtl
jmp
rcrb
add
pop
dec
push
dec
mov
insl
data16
jge
loope
xchg
xchg
outsb
or
sbb
cmp
idivb
addr16
cli
cwtl
test
or
mov
ffree
xlat
cmp
and
das
adc
outsb
pop
inc
mov
call
dec
xor
sub
jns
jmp
push
sub
push
ja
jle
mov
jg
cli
call
add
xchg
outsl
aad
adc
xchg
cmp
xchg
or
aaa
les
lret
dec
imul
outsl
mov
dec
push
insb
jae
out
in
dec
pusha
jp
or
mov
mov
xchg
in
fstps
lcall
js
sti
bound
mov
adc
pop
stc
mov
cld
push
mov
xchg
jmp
push
and
jge
xor
cld
add
push
sbb
in
and
adc
arpl
orb
fcoml
and
fsub
sub
in
or
cmpsl
xor
sbb
mov
jge
cld
imul
pop
lods
jl
dec
in
sub
inc
pop
insb
scas
jge
cli
push
pop
fwait
loopne
stos
pushf
or
jge
popf
out
sub
stos
jl
stos
gs
xchg
mov
ja
std
movsb
xchg
adc
mov
lcall
dec
push
pop
loop
ret
fmull
icebp
loopne
inc
sub
mov
movsb
in
jo
inc
xor
loopne
sbb
pop
push
jne
setne
fs
ret
addr16
out
adc
mov
lea
sub
fcmove
arpl
push
shrb
dec
andb
xchg
cmp
gs
cmp
aad
xchg
push
pop
sub
fdivr
inc
pop
xchg
inc
shlb
push
jl
test
jle
imul
andb
fmuls
inc
andb
js
data16
jne
inc
mov
insl
stc
mov
jns
pusha
push
jne
push
mov
dec
stc
jge
arpl
cmpsl
js
pusha
adc
xchg
loopne
mov
lods
mov
jg
mov
clc
imul
lcall
loopne
push
dec
ss
push
imul
lods
jns
push
inc
push
push
insl
clc
inc
fcomps
add
sub
loopne
mov
cld
fdivrs
movsb
push
xorl
pusha
iret
leave
aas
lcall
push
xchg
test
add
jmp
lods
pop
arpl
jbe
cmpsb
add
stos
imul
popf
xorb
lret
inc
pusha
jno
fists
clc
arpl
push
mov
pop
add
pusha
addb
hlt
push
mov
stos
enter
inc
or
inc
nop
cmpb
sbb
fcompl
lcall
stc
scas
mov
call
fsubp
mov
insb
xchg
lods
roll
jns
pusha
scas
jne
sarb
shrb
in
rclb
call
test
jo
test
jo
std
call
stos
fcoms
xor
js
arpl
cmp
jecxz
jnp
shr
test
dec
mov
mov
jmp
fsubrl
jp
sbb
inc
scas
out
fmuls
pusha
daa
frstor
sbb
push
andb
lock
and
shlb
lcall
outsb
push
jl
arpl
or
lods
fwait
mov
mov
and
push
pusha
push
jne
pusha
test
ja
mov
mov
pushf
xchg
jp
imul
shl
pusha
or
lock
mov
clc
jns
insb
idivl
nop
fdivrl
shl
xlat
data16
cmpb
pop
sub
lcall
icebp
imul
js
pusha
or
sbb
push
and
adc
mov
aad
test
or
pop
xchg
fsubs
dec
jbe
adc
test
add
or
enter
push
enter
pusha
mov
test
sbb
cwtl
cwtl
jmp
mov
fdivrs
jo
clc
js
aam
iret
mov
clc
mov
loopne
mov
clc
jp
cmpsl
test
js
fldl
sahf
adc
lock
loop
mov
out
fs
push
flds
stos
clc
stc
add
pushf
cmp
lock
pusha
adc
sbb
inc
insl
fiadds
sahf
in
or
fcompl
sub
inc
insb
inc
cmpsb
push
fwait
icebp
lcall
add
into
stos
pop
enter
jp
sbb
lds
or
cli
xorb
lcall
xchg
hlt
jp
insb
jp
pop
imul
pop
xchg
mov
loopne
test
push
fsubl
loopne
test
push
test
mov
loop
nop
sbb
mov
imul
nop
fdivrl
pop
call
mov
int3
loopne
test
push
push
mov
sahf
push
jns
push
orb
clc
in
push
nop
mov
xor
jp
sbbl
imull
or
test
test
xor
imul
jo
xlat
loope
test
inc
in
dec
js
call
pushf
fiaddl
loopne
lcall
fnstsw
sub
imul
movsb
mov
lcall
mov
lcall
lcall
add
lcall
push
stos
pop
pushw
mov
fstl
nop
in
inc
add
lcall
sub
jns
pushf
mov
int3
jns
pushf
hlt
jp
insb
lcall
jo
out
fcoml
sbb
mov
data16
push
or
xchg
stc
xchg
push
jns
insl
loopne
loopne
popf
inc
stos
pop
outsb
sbb
test
pop
mov
dec
push
hlt
pop
test
pop
imul
cmpsb
mov
lea
push
in
and
stc
jbe
mov
sar
adc
jmp
cmp
das
add
or
jno
cmp
adc
mov
data16
clc
loop
test
sbb
test
std
pusha
xor
pop
mov
imul
scas
cmpsb
clc
loopne
lcall
cld
inc
push
pop
cltd
lcall
mov
fwait
ja
adc
popa
aaa
dec
out
sub
loop
js
aaa
adc
adc
fdivrl
xchg
imul
adc
pushf
cmp
mov
cmp
mov
cmp
out
lcall
dec
sub
add
stos
cmp
or
jp
pushf
push
push
mov
fstp
psubsw
add
or
filds
add
sbb
nop
jecxz
adc
clc
mov
repnz
sub
jl
sub
pop
enter
pop
js
sbb
and
jbe
lahf
cld
and
ret
pushf
or
lahf
outsb
adc
imul
rcll
out
incl
fisubrs
divb
add
cmp
or
sbb
jge
fsubs
popa
iret
mov
xchg
pushf
sbb
xchg
cwtl
push
stos
arpl
lods
cmp
loopne
popf
fsubl
lret
mov
dec
mov
loopne
mov
call
inc
dec
sahf
arpl
mov
pop
fsubs
test
or
adc
imul
out
push
jecxz
adc
jbe
ja
mov
sub
test
js
ffree
call
je
or
shl
imul
scas
mov
or
sbbl
mov
or
lcall
push
andb
popf
test
arpl
jp
push
lcall
popf
adc
pusha
lcall
cmpsl
adc
je
xchg
gs
addr16
sub
popf
loop
pusha
repnz
push
sbb
fcompl
arpl
int3
jns
pop
rcr
cmpsl
sbb
dec
mov
jnp
cmc
sub
sbb
sub
in
inc
arpl
lods
push
pop
or
push
sub
inc
mov
out
test
mov
jae
daa
out
mov
jo
fdivrl
mov
iret
repz
in
sahf
sbb
push
outsb
shl
jmp
mov
pushf
loopne
loopne
adc
sbb
lea
pop
shrb
add
push
das
js
sub
and
xchg
xlat
in
sub
stos
cmpb
out
loop
arpl
cmp
in
cli
sub
outsb
lcall
lds
and
xchg
or
or
cmp
imul
inc
lahf
mov
fwait
push
test
jle
pusha
fsubl
cmp
popf
adc
pusha
nop
lss
mov
mov
pusha
test
sub
idivb
nop
adc
loop
mov
enter
inc
push
lcall
sub
jno
add
test
xchg
fnstsw
inc
inc
xor
push
inc
xchg
jp
push
sbb
rol
push
sahf
lock
jo
add
ljmp
sub
pusha
pushf
enter
mov
mov
mov
rclb
enter
jo
mov
cwtl
push
push
or
add
push
stc
nop
iret
insb
push
pop
or
ret
mov
fdivrl
test
jno
push
jge
pusha
xchg
std
enter
sub
hlt
fdivr
js
ja
pop
push
adc
mov
or
loop
push
loopne
leave
aam
adc
sbb
sub
popa
push
pop
shlb
rcl
cmp
pushf
testl
cltd
xlat
mov
pop
mov
jp
cs
subl
fmull
insl
xchg
cwtl
scas
call
cltd
jo
push
outsl
clc
sbb
pusha
test
subb
pusha
inc
lea
push
pop
les
ret
jecxz
xchg
lcall
push
cmp
testb
xor
mov
push
pop
xor
cwtl
subb
nop
jns
shr
notb
dec
push
and
imul
sbb
incl
popa
sbb
push
popa
shrb
sub
inc
fwait
sbbb
imul
js
jl
xchg
push
test
js
fistpll
arpl
inc
imul
and
lock
outsb
icebp
dec
xchg
test
sbb
lahf
js
jmp
sbb
cmp
push
pushf
arpl
mov
push
fcompl
in
imull
loopne
pushf
mov
arpl
jns
pop
arpl
pop
jp
imul
fwait
test
nop
pushf
fadds
outsb
int3
lcall
xchg
arpl
jo
push
loope
fs
clc
push
fisttps
xorb
push
outsb
call
and
mov
pusha
push
jge
mov
push
fbld
popf
push
jg
je
mov
fstl
rcr
loopne
push
mov
inc
outsb
jns
adc
jns
adc
shll
imulb
popa
adc
dec
cmp
adc
mov
inc
outsb
shll
mov
inc
mov
fidivrl
cwtl
xchg
aad
nop
aas
mov
cwtl
pop
mov
mov
adc
div
scas
or
push
movsb
jp
insb
lcall
pushf
jp
sbb
cmpsl
or
or
mov
push
es
test
bound
push
or
cmp
stc
je
imul
sbb
in
pushf
popa
subb
jnp
adc
fs
call
test
lods
fdivr
lcallw
add
jmp
ficoml
repnz
test
sub
jp
fisubl
test
lcall
and
mov
push
imul
jp
xor
outsb
mov
ja
lods
cmp
mov
loope
lahf
js
xchg
or
js
xchg
cs
hlt
pop
mov
rcrl
fadd
push
lret
mov
arpl
loopne
cmp
jge
insl
or
inc
popf
xchg
push
in
imul
fcompl
gs
cwtl
pop
js
jne
and
mov
add
loopne
mov
push
or
std
js
xchg
push
data16
out
mov
cli
lcall
test
lcall
imul
outsl
push
mov
adcb
arpl
and
rorl
sbb
fidivrs
push
jg
insl
in
cwtl
addb
lret
loopne
mov
mov
xor
jns
cmpsl
push
push
imul
mov
outsb
jle
nop
loope
cltd
arpl
imul
test
rcll
xchg
std
mov
adcb
sub
sti
gs
push
push
fadds
sti
cmp
adc
jns
nop
xchg
arpl
and
cwtl
jnp
push
insb
nop
pusha
fisttpll
fmuls
and
jecxz
xchg
lahf
or
pusha
js
into
adcb
rolb
insl
and
dec
pushf
jne
js
rolb
jecxz
andb
fildll
call
xchg
cld
mov
test
mov
push
add
cmp
xor
arpl
xlat
pushf
push
nop
fadd
fucomp
push
dec
imul
and
insl
xchg
add
sbb
int
xchg
scas
dec
fadds
cwtl
pusha
adc
and
icebp
lcall
cwtl
icebp
fdivl
pop
lock
test
cwtl
call
pusha
test
lock
mov
push
fs
loop
js
pusha
jg
or
cmpsb
lock
mov
push
mov
lods
push
repnz
mov
std
add
pop
outsb
or
insb
data16
clc
popa
pop
xchg
jne
pop
mov
js
out
rolb
fdivl
adc
nop
push
jecxz
in
test
inc
ja
enter
dec
aad
ret
dec
xchg
in
jns
pusha
push
outsb
push
pushf
repz
clc
add
jp
push
shlb
fsubs
subl
cli
arpl
sti
push
or
pop
call
aad
js
clc
cltd
or
nop
lcall
popa
lea
adc
imul
pusha
cld
and
nop
test
push
pushf
inc
mov
js
arpl
xor
push
mov
mov
pusha
adc
in
push
cmc
dec
mov
lock
ljmp
outsb
fdivrl
jb
pop
sub
cmp
jl
xchg
inc
mov
or
pop
cwtl
jo
push
pusha
mov
inc
fsubs
push
cwtl
jbe
jbe
jp
shl
sub
pop
inc
jp
clc
imul
int3
mov
loopne
into
lcall
mov
lcall
mov
outsb
mov
pushf
adcb
inc
xchg
loop
cwtl
jo
lods
stc
mov
push
inc
sahf
push
rorb
cwtl
lcall
jo
pusha
ja
cwtl
cmp
lret
lock
dec
sahf
loop
js
call
addr16
mov
mov
xorl
loope
xchg
testb
mov
insb
call
push
cli
movsl
rol
mov
sbb
test
cwtl
jge
in
push
push
clc
stc
outsl
test
pusha
das
mov
or
jb
add
rcrb
jns
into
pop
mov
mov
dec
rol
test
fisttpll
or
js
mov
testl
xlat
xchg
push
dec
sar
loopne
pusha
mov
cwtl
js
fcompl
shrb
fsubs
loope
mov
in
divl
clc
dec
pushf
push
call
cmp
add
jge
out
pop
aad
push
cld
push
arpl
jns
mov
push
loopne
dec
adc
insl
mul
out
repnz
sub
mov
push
pop
fsubp
rorb
push
scas
fldl
mov
enter
sub
jns
mov
imul
xchg
sti
lcall
pusha
pop
push
sub
pop
in
sti
push
sub
sti
lahf
xchg
inc
sub
in
insb
sti
lcall
lcall
ja
sti
lcall
ja
test
imul
pop
mov
pusha
pusha
call
decb
cs
outsb
cmp
push
mov
or
or
js
xchg
mov
js
pushf
movl
lods
push
pusha
outsl
inc
int
dec
pusha
mov
adc
push
push
inc
add
mov
pop
insb
jmp
mov
lcall
sub
fcompl
pushf
addb
mov
in
push
sbb
lcall
sbb
aam
scas
push
arpl
stos
fs
shlb
pop
add
dec
push
pop
sbb
pushf
ret
rcrl
cmp
test
int3
rorl
jg
sti
sub
imul
xor
inc
xchg
int3
jl
nop
js
and
sbbl
cmpsb
pop
sub
sti
pop
adcl
fisttps
push
cmpsb
scas
imul
outsb
jns
in
jmp
xor
sahf
int
enter
xchg
mov
or
lret
psubsb
lcall
push
aam
mov
jns
push
insb
ja
adc
sarl
rcr
fwait
mov
pop
sub
imul
faddl
push
jo
imul
pop
xchg
stos
cmpl
inc
pop
js
and
arpl
ficompl
ljmp
pusha
js
call
jge
sahf
push
sti
fnstcw
jbe
clc
fnsave
call
rorb
jg
fstpl
movsb
jo
imul
test
call
scas
mov
cld
in
jmp
add
push
insb
xor
inc
mov
jno
scas
mov
test
lock
fcmove
fwait
les
imul
mov
pop
popf
add
test
jp
imul
stos
adc
testb
mov
push
fidivl
test
adc
enter
mov
imul
adc
fcompl
enter
pusha
xchg
xchg
jp
loopne
push
jns
push
jp
push
ljmp
imul
ret
pushf
jl
sbb
imul
push
flds
xchg
sub
insb
test
shll
cld
and
adc
insb
stos
mov
mulb
fisubl
scas
je
sub
mov
sbb
or
bound
mov
insb
fwait
inc
rcr
push
lock
ja
orb
and
fbld
mov
sahf
jecxz
js
sub
jl
call
mov
ret
js
fwait
jmp
pushf
pop
fbstp
test
inc
push
loopne
loopne
cmp
addl
jp
fsubrs
icebp
lods
insb
shrb
in
adc
std
and
sub
fucomp
adc
cmp
pusha
or
in
jp
imul
in
push
push
pusha
stc
int3
mov
jl
jb
pop
imul
xorl
outsl
jb
push
cmpsb
dec
jp
loopne
jl
out
fnstcw
insb
and
sti
push
push
jge
test
ja
lcall
loop
mov
mov
js
inc
and
call
lods
lds
push
fsubrl
dec
cmp
int3
jns
jl
nop
pavgb
mov
mov
shl
and
insb
mov
loop
insl
push
stc
push
fstps
pusha
xlat
fucomp
in
inc
popf
ret
int
fiaddl
aam
clc
jnp
jg
pushf
cwtl
std
shlb
cwtl
stc
insl
andl
push
outsb
imul
push
lcall
dec
mov
outsl
popa
inc
jg
loopne
xorb
cmp
sbbl
outsb
jne
pusha
adc
sbb
ret
mov
cwtl
and
jp
fdivrs
jb
loopne
popa
push
fsubrl
dec
imul
les
cltd
xchg
pusha
adc
jb
clc
pop
fs
iret
mov
cltd
lcall
loopne
pushf
ja
or
ret
adc
pusha
insb
arpl
imul
ja
sbb
cmp
test
daa
shrb
shlb
pop
jp
jo
jns
clc
cltd
je
jle
jo
lods
inc
leave
add
in
xchg
subb
or
in
les
push
cltd
test
sbb
stc
xchg
clc
fdivl
mov
enter
dec
sub
jae
loop
fs
jl
mov
enter
fwait
movsb
js
les
adc
loopne
bound
lahf
test
sbb
jp
imul
push
insb
dec
mov
sti
outsb
lcall
jl
stos
inc
or
insb
shll
pop
pop
bound
or
les
ja
mov
mov
sub
mov
jns
out
and
or
mov
sub
popf
lcall
or
das
jp
add
stos
fidivs
fdivl
aad
push
or
insb
test
mov
sbb
jl
adcl
out
xchg
mov
xorb
add
dec
or
mov
call
pushf
lea
je
setbe
shld
push
add
bts
rcl
rol
call
pop
popa
inc
mov
ret
mov
and
fs
add
das
jns
lcall
mov
pop
pop
lods
lahf
mov
sbb
les
not
cmp
dec
js
pop
cmc
bound
test
popa
loopnew
das
push
lock
push
outsb
cmp
add
addr16
xor
sbb
insl
push
imul
push
stc
stos
arpl
adc
test
jno
scas
fidivrs
arpl
mov
in
mov
push
and
in
mov
dec
fisubs
sbb
mov
out
inc
add
sarb
aas
das
mov
add
xor
inc
imul
inc
jge
mov
cmp
xlat
pop
or
mov
and
movl
lea
jle
push
pushf
pusha
pushl
ret
rcrb
lods
les
test
call
sbb
mov
ss
push
mov
pushf
cwtl
inc
pop
in
xchg
pushf
mov
or
sub
dec
enter
inc
lock
jo
mov
jmp
mov
imul
mov
mov
popf
cld
mov
mov
sbbb
pop
xor
or
jae
jno
lea
int3
dec
fdiv
shlb
lahf
xchg
adc
mov
sub
loopne
adc
cmpsb
push
adc
adc
cmc
movsb
jo
movsl
lret
push
xchg
pusha
lahf
out
mov
enter
in
sbb
xor
in
pop
add
jmp
xchg
idivb
mov
push
push
popa
push
sub
dec
fdiv
movsb
jmp
lods
stc
jmp
xchg
dec
mov
mov
les
inc
inc
or
lcall
mov
loopne
shrb
push
int3
mov
mov
jl
jne
lahf
mov
cmp
xchg
lods
mov
popf
fwait
cld
bound
sbb
negb
lahf
popa
dec
dec
sub
pop
xlat
push
leave
dec
push
inc
sbbl
enter
lcall
aad
jno
sbb
mov
dec
data16
ret
mov
mov
fwait
push
jmp
jle
push
pop
jb
jp
jb
push
dec
jo
mov
mov
push
and
fsts
aad
leave
mov
inc
xor
xchg
adc
dec
jg
in
sahf
in
loopne
fiadds
data16
add
test
mov
jg
test
xor
cmp
adc
repz
mov
mov
xchg
or
dec
je
bound
rclb
fisubl
xor
pop
ds
and
stc
mov
cmp
test
jo
fcmovne
push
jnp
mov
jl
sub
jl
and
or
cmp
cmp
cmp
cli
rorb
daa
mov
pop
xlat
inc
xor
lods
clc
andl
outsl
cmp
les
mov
jnp
sub
cmp
mov
xchg
out
call
xlat
xlat
xchg
fistps
fwait
int3
adc
sbb
mov
fisubl
xchg
inc
xchg
repz
insb
jnp
mov
std
adc
lea
lret
neg
pop
aaa
jp
push
sub
inc
push
pop
or
jle
sub
jbe
sub
sub
nop
or
rolb
ds
sarb
push
outsl
cs
cwtl
fs
icebp
ficomps
test
fidivrl
xor
cs
fiaddl
ds
sub
push
out
mov
dec
xor
nop
scas
xchg
jb
out
lods
push
std
outsb
or
cwtl
test
out
push
inc
jmp
xor
pop
das
inc
mov
xor
mov
mov
lods
subb
leave
sbb
sti
lret
lret
int
mov
pop
jnp
and
inc
mov
mov
gs
jle
or
int3
mov
cmpsb
cmpsl
fldt
loope
stos
dec
out
cmpsl
xlat
cmc
lods
xor
hlt
loop
popf
ja
xchg
lods
stos
in
fwait
mov
stos
aas
loop
lods
mov
lret
pop
movsl
sarl
cmpb
pushf
movsb
loopne
js
cmp
hlt
jne
lods
xchg
stos
lahf
fstpl
xchg
lea
scas
mov
jbe
cltd
es
lods
hlt
sbb
cwtl
jnp
lret
lret
lds
mov
adcb
mov
nop
and
xchg
ror
jmp
adc
cmpl
lfs
stos
int3
mov
cmp
ja
mov
stos
stc
pop
icebp
andb
cwtl
jle
pop
loope
fcomps
cmc
pop
push
pop
popa
pop
movsb
pusha
lods
push
pusha
mov
cmp
lods
pusha
stc
jns
js
mov
fisubl
pop
and
fwait
popa
mov
jp
sbb
push
loope
push
adc
xchg
fmull
jp
xlat
pop
cmp
jo
push
push
xlat
or
push
sbb
or
jns
js
pop
push
outsb
push
xchg
mov
mov
mov
pop
jp
pushf
ja
loop
jo
outsb
in
pop
and
jmp
pop
sbb
pop
scas
sbbl
pop
pop
jno
sbb
arpl
xchg
loopne
push
pusha
pop
lds
mov
jmp
mov
xlat
call
cmp
jnp
jmp
mov
push
xchg
stos
push
mov
insb
stos
mov
jp
movsb
mov
cmp
imul
pushf
push
sbb
clc
jo
scas
jbe
je
jo
push
bound
pop
lods
xlat
fnsetpm(287
mov
pushf
push
es
data16
sbb
pop
ja
pop
jns
pop
popa
js
call
es
cmp
ret
adc
push
mov
popa
mov
mov
push
in
xchg
pop
cwtl
push
fcompl
add
fstpt
mov
flds
and
loopne
call
icebp
xchg
sbb
pushf
rorb
pop
jecxz
or
pushf
pop
pop
sbb
fldt
mov
movsb
cmp
jno
movsl
sbb
insb
pop
call
pop
sub
cltd
sub
xor
pop
aam
inc
scas
xor
pusha
cmp
shlb
lods
loopne
fadds
sahf
xor
push
shll
cwtl
sbb
pop
adc
push
movsb
cwtl
push
sti
push
enter
rcrl
lahf
push
repnz
push
dec
out
imul
cwtl
in
scas
jecxz
fdivrs
pusha
repnz
push
ljmp
imul
testl
mov
jmp
ret
jmp
xchg
mov
dec
add
out
arpl
js
jno
aaa
jns
xchg
add
repz
pusha
xor
in
shrb
push
jae
mov
cmpsb
sbb
clc
push
fldenv
adcb
shrl
inc
insb
adc
rcl
push
lcall
dec
insb
insb
pushf
loop
pop
ret
dec
insl
fdivr
jge
xchg
pushf
cli
loopne
pop
fldl
pop
fbld
sarl
arpl
cmp
iret
fwait
call
bound
mov
xor
sub
outsb
fs
std
jo
mov
imul
jb
jo
sub
mov
push
lcall
jo
mov
rclb
mov
cmp
and
scas
xorl
aas
rol
mov
stc
fcoml
mov
xchg
cmp
and
mov
mov
lret
and
mov
push
xorl
pusha
int3
in
mov
data16
mov
into
shlb
mov
sti
data16
pop
loope
fucomip
movsb
pop
icebp
test
pop
adc
pusha
pop
scas
jl
xor
cmpsl
dec
test
xor
dec
jg
jp
dec
repz
cmp
lock
mov
arpl
cmp
je
dec
pop
mov
stc
addr16
dec
sub
enter
add
jmp
lahf
test
mov
ret
mov
andl
in
cmp
cld
int3
xor
ds
mov
js
xchg
xor
jp
loop
pop
xchg
and
cld
jl
mov
cmpsb
cli
lods
iret
pop
dec
or
ficomps
clc
jp
rcrb
lret
xlat
sub
adc
ficompl
movntq
pop
pop
stos
fistps
fs
data16
add
sub
adc
iret
pop
mov
shll
xlat
lahf
js
cmpl
data16
leave
out
addr16
pop
mov
shr
jl
nop
jb
imul
jne
pop
mov
mov
lods
or
or
mov
dec
movsb
shlb
loop
mov
push
push
jl
pop
mov
lcall
jmp
fistps
pop
jle
outsl
in
push
sbb
and
pop
sbb
pop
dec
leave
cmpsl
jns
sarl
fstps
push
addr16
or
jne
or
jne
mov
addr16
jb
iret
mov
rcrl
lea
or
lods
shlb
or
scas
call
sub
sbb
cwtl
andl
dec
arpl
pusha
nop
call
cmc
pop
xor
loope
enter
mov
add
pop
outsb
cmp
jmp
pop
and
mov
jbe
test
mov
cmp
stc
pusha
movsl
push
cmp
pop
mov
mov
pop
lcall
dec
jg
gs
adc
inc
int
pop
mov
addr16
notb
test
dec
test
pop
insb
xor
dec
or
xor
movsb
insb
xchg
subb
addb
test
adc
clc
cld
lds
arpl
ds
and
mov
dec
repnz
outsb
insb
fwait
dec
lret
jp
rcl
in
sub
xor
push
adc
sub
enter
insb
loopne
cmpsb
test
and
jb
pop
ret
mov
stos
pop
xchg
and
mov
mov
mov
stos
out
icebp
lcall
je
je
outsb
andl
mov
mov
imul
movb
pop
push
jnp
cmpsb
filds
jmp
jp
cmpsb
lcall
lods
lock
int
stos
popa
in
or
pushf
mov
fmuls
pop
mov
sbb
hlt
outsb
sahf
loopne
mov
or
lret
mov
mov
adc
xchg
push
xchg
cmpb
jl
pusha
lret
stos
sbb
sbb
sbb
std
or
data16
jns
insl
xchg
andb
stc
movsb
loopne
jge
push
jle
jmp
jmp
call
js
adc
push
leave
shr
bound
pop
xchg
mov
sbb
mov
stos
mov
movsl
pushf
mov
cwtl
mov
loopne
jmp
jp
and
int
outsb
mov
pusha
and
dec
xchg
scas
cmpsl
or
movsl
cmpsl
std
and
mov
pop
mov
mov
fstps
test
fadds
movsl
je
cmp
je
je
jno
pop
dec
jmp
lcall
leave
dec
je
xchg
xor
popa
fs
pop
ds
stc
cwtl
mov
pop
adc
or
je
in
hlt
jnp
dec
enter
mov
insb
movw
cmpb
hlt
xchg
pop
fs
test
ret
test
lods
sub
andb
pop
ret
subb
mov
fwait
pop
pop
push
mov
test
mov
pop
cmp
mov
jmp
xor
sarl
stos
lods
dec
xor
test
cs
fwait
outsb
std
aam
pop
and
inc
pusha
pop
push
mov
shr
out
add
jb
pop
push
mov
pusha
mov
dec
jecxz
jmp
ja
bound
nop
imul
pop
stos
pusha
mov
fwait
pop
mov
movsb
enter
push
movsb
pop
mov
hlt
ret
je
imul
sbb
hlt
ljmp
mov
cmp
pop
jbe
loope
pusha
dec
pusha
sti
sub
push
fists
pop
enter
cmc
or
insb
and
fs
xorb
mov
nop
mov
clc
push
je
inc
inc
dec
sbb
imul
fdiv
filds
mov
jmp
stos
mov
data16
push
mov
sbb
lahf
xor
dec
or
mov
lods
jns
test
leave
or
fstl
lock
lods
cwtl
cltd
xchg
fstps
add
pop
or
ja
xchg
subb
sbb
mov
cmpsb
xchg
mull
add
mov
les
je
inc
call
mov
mov
bound
lock
in
pop
lods
stos
movsl
cmpsl
and
inc
ret
lret
aam
imull
hlt
lods
insb
insl
push
or
in
mov
enter
dec
mov
fisubs
lahf
pop
or
enter
fs
imul
rorb
shll
aam
cmpsl
shll
and
sbb
call
xchg
loopne
pop
mov
mov
cs
ret
sbb
stos
xchg
call
mov
jp
loopne
call
xchg
mov
hlt
icebp
test
mov
pop
mov
adc
mov
mov
mov
fidivl
jno
jecxz
sub
loope
fs
popa
fptan
mov
popa
inc
xchg
fsubrl
jns
pop
js
pop
into
pop
stos
sub
popf
jo
js
das
jl
jg
mov
jo
dec
push
out
popa
mov
or
hlt
fstps
dec
scas
mov
movsb
rclb
mov
mov
into
test
fnstsw
out
arpl
add
add
jbe
std
mov
and
or
mov
cmpsl
lds
jp
popf
nop
dec
outsb
andl
mov
pusha
iret
push
dec
movb
sub
outsl
lods
out
shrl
and
push
sub
mov
fistps
and
lods
xlat
push
enter
cmp
lods
rcrb
xchg
mov
cld
call
jg
push
push
int3
cmpsb
scas
mov
ljmp
hlt
push
push
jl
icebp
clc
inc
cmp
add
movsl
cmpsl
xlat
xchg
mov
and
scas
cwtl
je
push
fsubr
mov
adc
scas
adc
cmp
fisubs
repnz
mov
push
stos
and
shr
gs
mov
test
loope
into
sbb
mov
aaa
pushf
cmpsb
sahf
lcall
xchg
ds
scas
cmp
popa
jge
lds
or
push
pop
xor
mov
subl
sbb
jg
pop
sahf
arpl
pop
es
arpl
or
hlt
add
incb
pop
nop
adc
mov
out
dec
or
pop
cmpsb
clc
and
leave
xor
fdivrl
dec
mov
xchg
jg
test
addb
push
sbb
mov
sbb
fwait
pop
nop
cmp
fidivrl
lock
fs
dec
jecxz
shlb
div
inc
aas
out
pop
lret
sub
mov
ret
imul
lods
and
jmp
aas
enter
mov
adcl
mov
nop
xor
enter
xchg
je
fdivrs
mov
xchg
cmp
nop
out
jnp
xor
mov
divb
pminub
push
mov
and
movsl
mov
je
jae
pop
mov
gs
pop
test
shrl
push
stc
cmpb
mov
loope,pt
and
data16
jb
in
and
andl
pop
xchg
mov
sbb
dec
fcmove
mov
popa
push
mov
fnstcw
xchg
stos
cmpb
cmp
cmpsl
jb
lods
call
dec
mov
jle
lock
inc
les
lock
xchg
je
into
fmull
sarb
dec
mov
stos
sub
movsb
cmp
stos
in
or
movsb
mov
dec
pop
es
into
or
or
test
incl
inc
mov
and
dec
shrb
xchg
orl
fucomip
pop
inc
movsb
lret
jge
sbb
jl
cmpsb
ljmp
jl
sub
and
clc
cmp
in
or
cmpsb
subb
lods
push
mov
jl
fisttpll
jne
js
pop
out
mov
cmpsb
mov
in
cmp
dec
pop
sub
mov
aam
pop
nop
xchg
and
nop
hlt
mov
pushf
in
call
or
in
jo
in
or
fdivrp
in
iret
test
add
ror
lods
pop
sub
js
and
pop
jae
pop
je
rorb
jl
subl
addb
outsb
sub
jb
jge
in
push
xor
pop
addl
jg
sbb
js
mov
fs
lods
fcompl
push
lods
popa
and
call
arpl
out
loope
popa
xor
sarb
js
sar
mov
ja
pushf
adc
jge
mov
fadds
in
shll
xchg
fdivrs
push
inc
push
hlt
mov
mov
push
lds
pusha
repnz
pop
push
lahf
test
mov
lock
mov
jae
nop
fdivl
ret
push
movsl
mov
outsb
mov
push
call
sbb
loopne
movsb
mov
mov
adc
cli
fabs
movsb
mov
jge
cld
test
cwtl
imul
jb
jmp
int3
jp
xor
jmp
out
jno
or
test
add
ret
pop
cli
aam
adc
test
pop
jp
in
mov
ss
add
cli
fs
jl
sahf
mov
push
mov
mov
cmp
in
mov
js
push
loop
scas
mov
push
jb
out
jae
mov
shl
js
cwtl
popa
call
mov
leave
mov
or
arpl
mov
jae
cmp
xchg
cld
mov
xchg
test
xchg
pop
jg
pop
mov
jo
dec
mov
jb
aam
lock
sarb
movsb
jb
sub
ljmp
in
sbb
xor
fwait
call
jb
xor
jp
je
jle
out
sar
jl
push
inc
xor
leave
repnz
cli
add
test
jecxz
mov
jb
fs
imul
negb
pop
fmuls
lret
push
icebp
sahf
test
faddp
bound
stos
push
lock
test
in
jo
sub
jl
orl
icebp
test
cs
pusha
sub
outsl
ror
jg
and
je
push
push
leave
cld
clc
outsb
jl
loopne
bound
call
pop
cmp
xor
push
pop
sbb
shrb
call
push
fs
jbe
in
int
sbb
in
test
push
add
cld
fldenv
mov
and
lcall
add
stos
subl
out
xorl
mov
or
fisubrs
stos
mov
shlb
stos
mov
mov
imul
sbb
inc
andb
adc
test
mov
cmp
jbe
test
loop
lods
sbb
bound
stos
push
mov
sbb
push
insl
cmp
ficompl
scas
ljmp
lcall
mov
jo
or
mov
mov
pushf
fmul
test
out
pop
fisubs
js
pop
in
jbe
gs
icebp
pushf
jle
sbb
or
in
out
lods
movsb
popa
inc
shr
xor
mov
mov
aam
lods
xor
mov
call
test
pop
incb
jmp
popa
into
in
aam
sarb
loope
popa
sbb
mov
sarb
pop
fidivs
mov
pop
lds
stc
adc
js
data16
pushf
je
pop
test
pushf
push
cmp
push
mov
ret
add
mov
inc
int
leave
push
or
fs
jmp
popf
mov
push
arpl
mov
and
mov
test
in
add
jne
jne
xchg
pop
xor
daa
bound
mov
cmp
fdivr
jle
bound
adc
stos
xor
movsb
stos
add
cmpsb
adc
pushf
lcall
test
je
xor
ret
js
add
jns
pop
add
add
mov
stos
and
inc
rorb
push
sub
lahf
push
adc
ret
mov
imul
jl
ficompl
add
mov
jb
mov
xchg
add
cmp
jge
and
cs
dec
mov
repnz
sub
stos
insb
lods
cwtl
in
fcompl
int
out
xchg
movsl
fisttpl
cmp
jne
dec
fcomi
fisttpl
mov
movsl
test
cs
test
lock
ss
mov
cmp
shr
clc
jmp
mov
mov
call
jmp
add
inc
gs
outsl
fs
gs
imul
add
jno
mov
mov
shrl
jg
pushf
lret
jmp
mov
popf
cmpsb
jge
mov
lret
into
xchg
push
aaa
jnp
mov
cli
mov
scas
ds
or
dec
jno
das
or
sub
pop
jne
mov
sbb
pop
mov
xor
ror
jbe
lcall
in
ficomps
pop
add
shrl
xchg
jl
test
aam
movsb
cltd
fdiv
movsb
in
mov
push
mov
mov
aad
shr
shld
mov
bswap
add
stc
or
add
sub
call
rep
jmp
addr16
icebp
sbb
pushf
jl
mov
xor
dec
push
fsubs
movsl
hlt
shlb
mov
imul
dec
mov
enter
jo
adc
aam
xlat
inc
lcall
push
outsl
sbb
aam
mov
lods
jmp
sbb
imul
icebp
test
and
mov
xor
nop
xchg
pop
rorb
pop
sbb
inc
sub
pop
jecxz
dec
loopne
pop
rolb
subb
and
das
or
shll
jle
call
pop
scas
into
inc
lahf
sub
mov
push
mov
inc
outsb
stos
push
inc
mov
sti
pop
stos
sub
ss
rorl
aaa
xchg
aad
lea
mov
addr16
inc
ds
pop
int3
test
lods
xor
scas
inc
stos
push
std
pusha
bound
loopne
stos
scas
adc
push
inc
sub
pop
mov
mov
pop
cli
adc
add
push
cmp
rolb
cmc
mov
push
cmp
fs
push
xorl
jo
fcmove
push
sarb
pop
loope
xor
pop
imul
add
call
jg
insb
mov
inc
mov
pop
idiv
rol
push
push
inc
push
jb
pop
lods
jne
in
test
inc
xor
sub
mov
dec
stos
jb
sub
fmuls
out
dec
movsb
and
sahf
inc
and
out
mov
ljmp
dec
xchg
lahf
in
xor
xchg
sbb
inc
in
lods
pop
cmpsl
cmpsb
je
mov
xor
push
test
push
jo
int3
pop
mov
xchg
xchg
inc
add
adc
inc
fs
mov
lods
fsubrs
pinsrw
movsb
cli
fdivrs
nop
bound
ja
addb
sbb
mov
jl
aam
shll
lret
sbb
in
data16
in
notb
push
sbb
in
mov
mov
shlb
ficompl
mov
stos
jno
addb
mov
sbb
sbb
sbb
jecxz
sub
sar
loope
jl
lods
mov
lret
fadds
push
lsl
inc
xchg
ljmp
pop
shrb
mov
stos
call
and
sub
mov
pop
bound
jg
shrl
sti
or
in
pop
out
es
cwtl
sbb
leave
mov
inc
xchg
jne
inc
xchg
fs
stc
xchg
lds
mov
add
jbe
mov
xor
dec
insb
js
jo
add
test
div
sub
jecxz
data16
lahf
add
rcl
mov
mov
test
jecxz
sar
dec
sbb
fdiv
mov
push
push
sub
jb
or
pop
cs
dec
jp
lods
push
pop
and
pushf
clc
fsubrs
jb
pusha
hlt
bound
nop
sbb
mov
repnz
sub
push
pop
jbe
adc
mov
lcall
sbb
bound
cmp
cmpsl
pop
test
jecxz
cmc
add
jl
mov
out
mov
mov
scas
lock
xor
pushf
repnz
in
js
aad
adc
push
pushf
sbb
test
cmp
insl
jge
loopne
pop
insl
pop
xchg
sarl
in
push
and
adc
scas
mov
jmp
sbb
push
repz
lds
test
pushf
pop
insl
add
test
outsl
sub
adc
pop
leave
movsb
inc
ljmp
out
aas
xor
push
lret
outsl
jg
cmp
jae
mov
cmpsl
adc
outsl
into
movsl
mov
xchg
iret
pop
enter
ret
mov
mov
mov
inc
xlat
pop
and
icebp
call
xchg
std
loop
inc
xor
xor
fcmovu
pop
aaa
cld
xchg
xchg
icebp
js
pop
pop
test
aad
xor
sbb
xchg
inc
add
dec
ss
xchg
mov
pop
pop
les
arpl
cmp
jo
push
dec
scas
pop
fidivs
mov
xlat
pushl
rcrl
aaa
dec
sbb
leave
dec
pop
mov
repnz
addr16
xchg
cwtl
mov
fisubrl
push
pop
inc
enter
mov
fistl
xchg
out
pop
pop
daa
popf
cs
push
cmp
pop
aad
clc
pop
subb
pop
divb
out
pop
mov
sbb
sbb
jp
pop
dec
pop
pop
jle
int
js
aam
cmp
out
mov
mov
pusha
notl
xlat
insb
pop
jns
pop
movsl
outsl
faddl
pop
dec
aas
gs
or
les
scas
mov
sub
ret
add
in
xchg
mul
aas
ds
dec
pushf
cmp
xchg
adc
ja
cs
mov
and
lock
fwait
dec
add
adc
loope
dec
mov
lret
cs
push
mov
pusha
sbb
adc
rdtsc
xchg
out
pop
test
insb
test
out
mov
cmc
add
and
data16
mov
imulb
pop
lds
xchg
scas
int3
inc
cmp
and
nop
sbb
xchg
test
pop
jbe
cmpb
shrb
fucom
xchg
cmp
pop
xor
pop
mov
dec
mov
add
jo
sub
loope
mov
mov
jns
fsub
mov
sub
sub
stos
pop
pop
jmp
adc
pop
jge
movsb
fwait
cmp
rolb
divb
adc
fcomp
add
cmp
fs
jne
scas
jecxz
sti
decl
mov
pop
cmp
pop
addr16
push
aad
dec
dec
jp
xor
mov
lcall
jns
cmp
cmpsb
inc
xor
pop
movsb
pop
mov
push
sti
xor
jno
pop
cs
mov
repnz
dec
pop
mov
fldt
mov
and
pop
fiaddl
cs
lahf
pop
jns
in
adc
xchg
pop
leave
daa
sbb
xchg
mov
out
lea
xor
icebp
pop
mov
sub
shrb
mov
pop
xchg
in
mov
sbb
jns
sub
aaa
add
fsubr
pusha
pop
repz
adc
call
and
sahf
inc
cwtl
adc
lret
pop
imul
hlt
cli
adc
cld
inc
sbb
loopne
xchg
clc
aad
stos
xor
nop
jnp
fsubr
push
out
sbb
adc
push
fisubrl
out
and
pop
xchg
ljmp
pop
or
pusha
and
or
loope
arpl
std
pop
adc
es
mov
pop
push
into
je
fstps
cs
lock
out
sarl
and
pop
push
ja
popf
in
js
push
pop
cs
arpl
inc
fwait
cmp
lret
es
jnp
push
test
inc
repz
gs
mov
imull
shr
dec
xor
hlt
mov
lcall
dec
enter
add
stos
cmp
jge
negb
xor
mov
jp
dec
inc
cmp
push
mov
or
mov
insl
ljmp
xchg
dec
hlt
mov
or
loop
and
push
in
push
add
cmpsb
js
in
adc
loope
dec
inc
pop
pop
scas
jbe
pop
dec
xchg
sbb
fyl2xp1
xchg
mov
push
fsubl
fcom
imul
mov
fiadds
mov
in
dec
mov
mov
jge
sbb
scas
inc
dec
call
push
or
aaa
scas
pop
fs
mov
sub
mov
xlat
bound
fs
sbb
pop
rcl
push
movsb
push
jle
das
and
loopne
call
test
clc
inc
mov
movsb
int3
fbld
shll
mov
scas
repz
push
mov
lods
icebp
and
mov
dec
mov
dec
mov
fsubs
lcall
mov
fwait
xchg
mov
in
jl
cmpsl
lock
fs
dec
dec
mov
filds
rclb
imulb
lock
push
popa
jo
je
fsubrp
lods
filds
lds
mov
and
popa
dec
movsl
ja
pop
pop
fbstp
inc
and
scas
sbb
jg
lds
mov
cmc
mov
or
enter
fucomip
lret
or
clc
std
cmp
jmp
fisttpl
repz
sbb
and
pop
insb
and
sub
jae
scas
dec
mov
rorb
pop
jl
call
fimull
inc
pusha
or
xlat
mov
loop
popa
mov
jno
jo
in
loop
addr16
ljmp
fisubs
jecxz
xchg
push
dec
sub
loope
push
repnz
cmpsb
mov
rcrb
rclb
xor
loopne
orl
pop
dec
mov
imul
ret
push
jle
hlt
lds
and
call
stos
mov
jmp
xchg
call
enter
pop
addr16
popf
loope
stos
mov
mov
add
pop
sbbb
hlt
mov
imul
sbb
fs
stc
mov
sbb
rolb
pop
mov
ljmp
inc
test
aas
stos
je
in
fnstenv
cmpsb
mov
out
pop
push
push
push
pushf
shlb
rcrl
jp
push
clc
mov
pop
xlat
pop
push
pop
addr16
aam
pusha
jmp
sub
push
data16
mov
cwtl
fsubs
call
test
sub
sub
mov
jmp
sub
jo
rolb
adc
call
imul
xor
ja
push
cwtl
mov
cmp
repz
or
ficompl
sub
call
dec
lret
lret
pushf
out
cld
mov
repnz
dec
push
jns
mov
adc
xchg
pushf
test
cwtl
sub
dec
jecxz
jg
js
jle
mov
xchg
inc
sbb
jp
in
dec
add
mov
lods
xor
mov
push
das
mov
stos
arpl
in
or
cli
dec
cs
imul
pusha
ficoml
adc
push
dec
cmpsb
fs
out
jmp
pushw
xchg
outsb
lret
das
xchg
add
mov
dec
es
fs
xor
scas
lock
dec
shll
cmpsb
mov
loope
push
gs
jle
inc
jbe
lcall
add
xor
dec
lea
or
test
inc
pop
pop
fidivrs
fcomps
leave
mov
push
mov
and
mov
inc
ds
jle
outsl
and
out
outsl
loop
jns
mov
sub
notb
mov
pop
push
mov
jmp
std
or
or
mov
jmp
subl
pop
adc
fiadds
inc
inc
fs
leave
icebp
in
out
faddl
mov
arpl
cmp
push
xor
xor
push
addr16
shrb
out
jmp
mov
gs
inc
lfs
fs
pop
sub
imull
xchg
icebp
movsb
inc
lret
xchg
stos
fsub
inc
loope
inc
jecxz
push
test
scas
notb
cmp
lea
jo
pop
lods
inc
leave
dec
push
out
xchg
daa
inc
jle
call
pop
xlat
adc
cmp
sub
dec
call
xchg
adc
jle
in
pop
pop
in
jnp
imul
jmp
lods
test
pop
es
lcall
sbb
fadd
adc
test
mov
sarl
cld
outsb
mov
fstpl
jnp
es
bound
push
jnp
inc
hlt
adc
jmp
pusha
xchg
mov
bnd
or
mov
hlt
ds
jae
loop
mov
adc
jmp
cmpb
mov
gs
or
mov
mov
sbb
arpl
inc
dec
push
push
inc
ljmp
rorb
pop
repnz
test
lods
out
xchg
loope
dec
in
mov
pusha
repz
fcomp
call
fs
or
pop
push
in
fcoms
pop
hlt
stos
mov
xchg
mov
sub
push
adc
call
pop
stos
mov
sub
xchg
cltd
loope
jge
cmpsl
js
in
popa
test
fidivl
xchg
inc
sub
pushl
adc
loopne
data16
in
insb
popa
xchg
push
mov
dec
adc
sahf
jp
mov
mov
jnp
or
and
in
lret
cmp
int
lcall
lods
jne
sahf
cmc
rcr
in
inc
sbb
in
inc
les
test
pop
add
xchg
pop
test
outsb
aam
data16
fsubr
out
add
xor
lds
imul
add
jecxz
mov
pop
in
xchg
imul
lock
mov
bound
mov
call
mov
daa
out
dec
arpl
cmp
pop
in
arpl
dec
xor
sbb
dec
fdiv
rorb
jl
in
flds
mov
mov
pusha
cmpb
popa
out
pop
pop
sub
bound
inc
pop
flds
arpl
or
or
shll
jle
stos
sub
in
cmc
cld
mov
sub
mov
adc
mov
cld
pop
shrb
sub
cld
idivb
cltd
popa
mov
lods
jmp
or
sbb
jl
filds
addr16
outsb
adc
flds
pop
int3
test
cmp
mov
nop
mov
adc
pop
or
add
pop
fidivs
nop
subl
pop
scas
fdivrs
lret
cwtl
push
inc
mov
rclb
lock
mov
pop
dec
inc
out
xchg
adc
jg
mov
lret
nop
mov
mov
ljmp
sbb
lods
xor
mov
and
std
nop
mov
mov
push
lret
jb
cmp
fs
mov
add
mov
pop
popf
sbb
lds
loope
mov
xor
pop
jge
pop
les
push
mov
mov
sbb
xor
cmp
movsl
mov
insb
sbb
ds
dec
pop
add
mov
pop
jle
inc
pop
or
adc
inc
jg
mov
fs
sub
mov
xchg
dec
or
jns
or
call
sub
in
inc
gs
test
cwtl
daa
sub
scas
pop
pop
cmp
pop
or
jns
mov
out
ds
lcall
arpl
scas
cld
and
push
mov
mov
add
fnsave
jecxz
push
and
adc
xor
inc
aam
mov
out
pusha
dec
or
ljmp
jbe
pop
push
aad
stos
in
push
dec
int
sub
rcr
add
xor
add
test
or
ljmp
xchg
sub
push
and
insl
nop
xchg
arpl
inc
sbb
out
pop
mov
mov
mov
dec
jecxz
outsb
xor
add
sbb
inc
cwtl
imul
je
push
sbbb
inc
sbb
mov
scas
or
cmc
js
arpl
pop
xchg
out
pop
and
sub
mov
lahf
pop
inc
fldl
add
shlb
cmp
push
sahf
xchg
or
mov
sbb
adc
js
or
mov
ret
pusha
popa
dec
cmc
imul
jl
repz
out
sbb
lcall
pop
sub
xchg
pop
jbe
or
jg
mov
push
and
adc
push
push
cltd
mov
xor
push
or
add
daa
movsl
lds
popa
mov
call
repz
addr16
aas
inc
cmp
push
ret
inc
mov
jmp
sub
faddl
jne
aam
jg
mov
xchg
sub
inc
test
or
hlt
idiv
adc
sbb
cmp
cmp
rcrb
adc
pop
scas
dec
ljmp
shlb
mov
and
movsl
loope
fisubl
stos
fisubl
nop
sarl
fisubl
cmpsb
mov
jg
mov
ja
xchg
popf
shrl
icebp
push
lea
xchg
les
jno
adc
rolb
adcl
sti
fisubrl
mov
and
and
test
pop
ljmp
sub
stos
sbb
hlt
daa
dec
arpl
pop
ret
test
ljmp
sbb
jg
scas
inc
sbb
xchg
mov
scas
push
fwait
dec
adc
call
mulb
in
in
sidtl
lcall
inc
pop
pop
loope
cwtl
cmc
jmp
sbb
bound
push
dec
pop
pop
mov
pusha
pop
inc
dec
and
jmp
pop
js
rclb
inc
add
fadds
int
cld
hlt
cld
xor
and
mov
push
fnstenv
inc
sub
pop
push
std
clc
int3
sbb
outsl
fwait
daa
cmpsb
mov
popa
inc
popa
or
loopne
loopne
lret
lahf
pop
sbb
mov
nop
sub
pop
xor
es
xchg
mov
inc
mov
cld
stos
repnz
pop
mov
push
rclb
pop
das
loope
popa
push
sbb
cwtl
mov
xor
or
pop
mov
pop
fsubrs
loopnew
popf
sti
mov
popa
mov
lcall
mov
loope
and
loopne
jmp
jae
and
lahf
jp
hlt
xchg
aam
push
filds
test
mov
pop
mov
dec
fwait
or
mov
decb
cwtl
sahf
test
test
insl
inc
mov
nopl
xor
lcall
call
mov
rclb
pop
mov
pop
ja
sti
xchg
jae
testb
cmp
xchg
or
clc
out
xchg
or
call
loopne
mov
sub
gs
ja
inc
call
sub
adcl
rcrb
xchg
test
sub
push
arpl
sbb
into
mov
popf
bound
inc
dec
or
adc
dec
sub
push
out
sub
aad
push
or
lock
out
arpl
ficompl
insl
nop
push
ljmp
lea
test
imul
or
pop
or
inc
test
push
dec
dec
jge
scas
and
jns
inc
cwtl
fnop
test
fistpll
lcall
mov
jge
or
push
inc
jle
call
jns
adc
xor
push
js
aad
addr16
cmp
jno
mov
lods
mov
inc
nop
xchg
xchg
pusha
ret
imul
enter
xchg
and
addr16
mov
pop
xchg
out
pusha
fdivs
mov
in
dec
icebp
adc
jo
pusha
dec
fisubs
or
scas
inc
push
aam
pop
ljmp
push
jle
xchg
shr
arpl
movsl
dec
sti
push
jbe
arpl
ret
mov
xchg
inc
ret
xchg
cmp
cmpb
fstl
dec
std
xor
cmp
bound
loopne
mov
shlb
mov
lcall
loopne
cltd
pop
pop
add
mov
out
call
xchg
mov
loopne
push
nop
jo
es
out
dec
paddb
movsb
pop
dec
sub
pop
mov
mov
sbbb
jp
or
jo
and
sub
jle
rol
push
sbb
mov
scas
pop
out
cmpsb
dec
ljmp
pop
scas
loop
xlat
shl
test
cmpsb
stos
jnp
sbb
inc
clc
lods
fs
jge
out
push
pop
ror
mov
lcall
loopne
or
push
stos
inc
adc
mov
adc
inc
mov
loopne
in
dec
ljmp
fistps
std
pop
aaa
pop
or
sbb
pop
sub
add
fdiv
add
lret
add
jmp
sub
movsb
push
sbb
fdiv
addr16
sbb
add
shlb
xor
mov
mov
movsb
push
inc
jno
pop
dec
mov
push
out
add
ss
mov
adc
out
std
sub
mov
xor
sbb
incb
pop
cltd
inc
push
add
jge
pop
mov
into
and
cmp
cmp
out
dec
mov
outsb
cwtl
push
test
cmpl
lret
xchg
popa
mov
xor
mov
mov
stos
sbb
and
jb
pop
mov
mov
int
pop
push
xchg
out
sarl
jmp
xchg
mov
mov
das
insb
outsb
or
cmc
cwtl
bound
imul
insb
inc
sbb
loope
sub
aaa
pop
movsb
shrb
mov
cmp
pushf
aas
aaa
ret
js
jb
imul
mov
pusha
sahf
sub
adc
aad
cli
in
int
dec
sbb
push
test
cs
pusha
jmp
mov
test
js
shll
cmp
out
repz
pop
add
xlat
in
pop
jmp
fsubrl
lret
call
inc
pushf
ficoml
loope
jl
sbb
mov
pop
mov
add
dec
in
fs
flds
jge
or
push
fisubl
jno
negl
sbb
pop
pop
insb
cli
dec
sbb
ja
rclb
mov
xor
cmpl
cld
fld
sbb
lcall
scas
ficompl
popf
std
fwait
das
jl
fsts
jmp
jae
mov
int3
pop
dec
stc
mov
lret
aam
pop
sub
cwtl
sub
adc
aad
popa
dec
inc
in
mov
xchg
insb
dec
jl
mov
je
icebp
mov
jae
test
insl
fildl
sbb
adc
jle
out
mov
jbe
decl
insb
or
xchg
cmp
xchg
inc
shlb
inc
dec
xor
mov
lods
cmp
push
and
movsl
pop
fsub
xchg
mov
sub
sbb
ja
jecxz
mov
jne
test
jne
cmpsl
cmpsl
sbb
inc
or
sahf
cld
mov
push
cli
sub
jge
mov
fldcw
xchg
pushf
fsubs
cmpsb
andb
mov
arpl
adc
mov
inc
jmp
out
cmp
pusha
loopne
mov
filds
adc
arpl
cmp
add
push
xchg
fstpl
adc
popa
dec
icebp
mov
inc
jno
jb
popa
adc
pop
sbbl
mov
test
sbb
sub
or
mov
shl
call
xchg
push
out
adc
outsb
dec
inc
xchg
rclb
lds
aam
fldl
push
xlat
in
ror
stos
hlt
lods
les
insb
movsb
xor
fucom
push
out
add
jl
int3
xorl
mov
mov
sub
xchg
pop
cmpsb
out
mov
mov
cltd
add
dec
test
ljmp
jge
call
popa
ds
cltd
mov
inc
hlt
or
scas
ljmp
and
aam
mov
aas
mov
inc
cmpsb
testl
icebp
or
nop
xchg
pop
fs
lds
push
xchg
adc
sub
jmp
fnstsw
lods
jae
outsl
xor
xchg
test
fadds
mov
cs
in
test
lahf
outsb
mov
sti
in
imul
cmp
fs
out
test
rcrb
jmp
inc
icebp
aam
loopne
filds
jns
testb
pusha
cltd
aaa
les
pop
in
fcmove
mov
xchg
shlb
or
les
int3
test
sbb
mov
sbb
mov
adc
jae
in
inc
sub
mov
lods
std
aas
ror
ljmp
es
inc
mov
lcall
dec
outsl
xchg
adc
jecxz
loope
inc
mov
mov
cltd
cmc
js
dec
das
test
sbb
hlt
test
mov
outsb
inc
sahf
iret
lock
jmp
jb
ja
pushf
test
push
xchg
jb
add
mov
imul
cmc
mov
int3
outsb
cwtl
fistl
pop
adc
std
leave
mov
cmpsl
inc
mov
jmp
xchg
jle
xchg
ja
inc
mov
lret
insb
call
xchg
push
test
add
and
fistl
stc
in
xorb
add
xlat
and
push
out
dec
mov
mov
mov
inc
test
repz
imul
xor
ds
test
inc
lret
mov
icebp
insl
negb
jecxz
rcrl
mov
pop
mov
popf
fisubrs
fs
mov
sbb
subl
dec
and
test
shlb
cmp
push
js
sub
mov
push
js
xchg
loope
push
jl
jns
popa
push
and
or
imul
mov
pusha
ret
sbb
adc
cmp
jno
pop
and
in
aad
outsb
lds
mov
push
cmp
addr16
in
sbb
or
push
cmp
xchg
xchg
mov
and
test
andl
int
std
and
xchg
popa
aas
adc
popa
sub
mov
gs
push
pop
and
scas
repz
cmp
rcrb
sbbl
jmp
lds
dec
xchg
in
inc
imul
loope
gs
orb
fnstsw
je
push
pop
cmp
mov
ds
dec
mov
or
ret
rolb
out
cmp
imull
mov
clc
or
xor
dec
sub
cmpsb
mov
imul
rolb
mov
add
inc
insl
test
in
add
pop
faddl
std
imul
sbb
inc
test
cmp
xchg
out
aas
movsb
jmp
lret
mov
testb
stos
popa
pop
jo
or
repz
mov
stos
mov
out
jp
js
shr
cltd
daa
pop
xchg
xor
and
mov
mov
cmpsl
mov
jnp
clc
in
inc
dec
iret
xchg
divb
and
xchg
notl
xchg
ds
int3
jecxz
mov
jle
stos
aad
insb
movsl
xor
mov
insb
lret
imul
mov
in
popa
mov
fimull
lret
push
xchg
mov
stos
scas
out
pushf
push
xchg
pop
mov
fistl
jmp
pusha
addr16
jg
pop
call
add
movsl
fisubrs
ret
nop
sahf
je
fisubrs
xchg
push
mov
push
dec
call
fiaddl
mov
push
fmul
aam
test
push
cmp
or
mov
sub
cmp
outsl
xor
in
dec
incl
ds
outsl
inc
pop
lcall
or
xor
lcall
ud1
incb
xchg
xchg
mov
hlt
call
frstor
mov
popa
inc
push
testl
call
mov
jmp
mov
inc
adc
lret
imul
inc
test
mov
mov
cmp
popa
xor
xor
insb
movsb
mov
icebp
cmpsl
pusha
push
or
or
cmp
imul
mov
mov
adcb
cmc
fisubrl
insb
lret
pop
cmp
in
lods
enter
mov
push
imul
les
xorl
lods
pusha
es
and
outsb
push
pusha
push
in
push
add
mov
inc
popf
push
pop
adc
pop
js
fs
pop
jne
pop
ret
jne
mov
ds
xor
mov
pop
repnz
lret
mov
stos
jns
rcr
movsb
xchg
jecxz
jg
fiaddl
jp
or
insb
in
in
xor
pop
mov
lret
incb
push
or
dec
insb
insb
mov
or
sbb
xor
mov
in
sbb
popa
aam
pop
das
pop
into
lock
cwtl
aas
data16
movsl
clc
outsb
js
mov
mov
iret
inc
out
addl
fstps
fsubrs
loopne
lahf
test
shlb
aaa
addr16
call
or
hlt
cli
sahf
pushf
into
arpl
inc
push
push
inc
daa
inc
mov
adc
loop
pop
mov
pop
inc
add
fstl
addr16
aam
mov
nop
push
mov
movsl
pop
jno
outsl
mov
jp
or
into
fists
mov
call
in
pop
cld
lds
test
sub
shlb
repnz
inc
sub
and
adc
push
xlat
sbb
and
mov
xorb
xlat
sub
ljmp
sbb
dec
fisubs
cmp
adc
sbb
xor
mov
pusha
mov
mov
sar
adc
fisttpl
leave
push
pop
push
sub
aaa
add
jmp
popf
xor
add
pop
inc
loope
mul
fbld
fdivl
scas
mov
in
push
push
jge
sbb
dec
hlt
insl
inc
jle
inc
test
hlt
ljmp
ret
ficoms
xchg
push
inc
out
loopne
pusha
in
pop
push
cmp
out
notb
insb
ljmp
mov
xchg
lods
mov
lahf
and
insl
pop
push
insl
call
clc
cmp
mov
pop
sahf
pop
jbe
inc
jge
ds
or
jmp
arpl
test
movsb
mov
leave
dec
lods
sub
test
les
pop
dec
popa
pop
xor
push
inc
mov
ljmp
insb
std
mov
rol
jno
fsubs
pop
inc
cltd
adc
mov
jnp
scas
push
enter
inc
and
lret
push
sarb
test
push
mov
adc
push
shrl
jbe
outsl
out
fimull
mov
jo
addr16
cltd
inc
or
pop
cmp
mov
fsubrs
xchg
test
das
mov
lds
cmp
pop
addr16
loop
movsb
decb
scas
fsubl
ficompl
mov
fisttpll
push
aam
fsin
mov
pop
sar
movsl
call
hlt
js
test
movsb
adc
and
les
fsubrl
hlt
jl
inc
cmpsb
movsb
rcrl
dec
das
adc
pop
test
popw
cld
movsl
add
mov
mov
mov
hlt
sbb
cs
jp
in
fcoms
add
mov
imul
stos
popa
inc
loopne
pop
mov
lock
call
pop
push
fisubl
sub
shlb
jmp
pop
adc
mov
pop
ss
bound
mov
mov
rorb
loop
mov
and
cmp
lahf
jge
mov
arpl
cli
cmc
jmp
cmp
lods
push
test
mov
js
packssdw
sbb
cmp
push
test
pusha
fnstcw
cmp
cmp
cs
pushf
cltd
lea
jbe
push
xchg
in
sarl
leave
pop
mull
mov
fsubl
sbb
pop
add
popf
push
sub
push
or
ljmp
dec
push
out
mov
les
in
andb
cmpsl
or
ret
lcall
mov
out
and
mov
add
rorl
lcall
sbb
call
xor
ret
test
add
sbb
xchg
js
dec
jns
sarb
mov
inc
test
mov
mov
pop
stc
xor
hlt
xchg
aas
test
rcrb
dec
and
or
jg
sbb
or
aas
and
inc
movsl
jle
mov
imul
cmpsb
jno
inc
push
ja
inc
cmpsl
mov
sbb
add
sbb
mov
cmc
insl
loopne
sbb
imul
dec
sbb
pop
sub
adc
imul
cli
aam
adc
ret
mov
iret
dec
push
sbb
xchg
sbb
mov
lods
stos
pop
mul
adc
add
mov
popf
std
jecxz,pt
out
xor
pop
mov
loopne
jmp
lret
inc
faddl
xor
sub
movsl
mov
punpcklbw
dec
add
push
adc
xor
cmpsl
enter
sbb
or
nop
scas
in
inc
push
fs
mov
cmc
fwait
mov
xor
out
scas
lcall
lods
pop
cmpsl
sub
fwait
cmpsl
test
sub
sbb
push
jg
mov
out
pop
movsb
fwait
shll
das
enter
xor
inc
jmp
xor
inc
jp
push
cmp
and
lods
cmp
bound
inc
call
push
or
sub
lods
out
test
adc
stc
addr16
nop
ja
rclb
or
push
jecxz
xchg
xor
mov
lock
les
shlb
pop
or
orl
lock
adc
loope
fnsetpm(287
mov
xchg
mov
bound
fbld
je
loop
pop
jns
cmp
pop
mov
or
lods
mov
push
loop
fnstcw
and
in
jno
fldlg2
ret
inc
jno
loope
and
movsb
jg
ficomps
inc
jecxz
pop
shlb
cmp
push
out
mov
cmpsb
add
and
jbe
mov
rorl
mov
stos
test
js
push
imul
dec
pop
mov
cmp
push
push
aam
jge
std
rolb
xchg
lcall
in
inc
mov
add
popa
nop
inc
mov
outsb
dec
movsb
loopne
test
pop
or
lds
xchg
sub
mov
loope
mov
lcall
mov
sbb
lock
insl
pop
adc
out
push
repnz
jno
fucomi
xchg
mov
les
cltd
inc
imul
sub
adcl
or
xor
mov
xchg
cmp
inc
inc
mov
cld
loop
in
fldl
dec
push
pop
pop
popa
adc
iret
insl
xchg
inc
out
pop
pop
add
xor
repz
lret
jmp
fistl
adc
mov
inc
xchg
es
out
inc
jns
add
mov
sbb
add
fisubrl
mov
push
mov
push
mov
adc
loope
mov
lods
mov
push
roll
fiaddl
movsl
dec
cmp
jne
clc
mov
loope
xchg
int3
and
adc
jmp
cmpsb
push
daa
inc
adc
pop
pop
xchg
xchg
outsb
js
add
add
adc
lret
pop
popa
repnz
jb
test
cmpsb
bound
ja
lods
or
pop
fildll
js
add
cs
cmp
loope
fsts
sbb
in
mov
xor
push
sub
mov
aam
mov
sahf
mov
sbb
sub
pop
mov
scas
sub
aas
sub
inc
push
xor
in
mov
xchg
sti
add
test
andl
ret
in
out
inc
and
mov
pop
rcr
test
push
lahf
pop
pop
mov
pop
dec
xlat
add
js
mov
xchg
lods
push
sub
inc
inc
test
repnz
out
lods
cmp
pop
dec
addr16
mov
lods
lea
testl
push
add
pop
mov
xor
call
xchg
test
lock
addr16
sbb
jecxz
mov
in
in
sti
and
mov
add
adc
inc
cli
pop
pop
xor
dec
mov
or
cmpsb
shr
or
push
lods
lret
ss
cmp
xchg
inc
dec
int
mov
lcall
push
jns
mov
insl
mov
mov
sbb
repnz
cli
jle
dec
lcall
mov
aaa
iret
pop
cmc
adc
inc
outsb
ret
movsl
nop
mov
jmp
mov
mov
aas
cmp
push
cli
cmc
mov
sbb
xor
clc
ret
jge
jno
cmp
pop
pop
dec
xchg
daa
lds
fadds
loopne
adc
inc
and
and
fcmovb
pop
cmp
xchg
scas
jno
cmp
jo
jbe
movups
inc
pushf
cmpsb
fwait
dec
pop
imul
add
inc
dec
xor
call
mov
push
lahf
movsb
pop
je
in
test
cmpsl
sbb
movsl
fcomp
std
sub
inc
pop
rolb
ja
mov
pop
mov
pop
fs
arpl
add
out
ja
mov
push
adc
stos
test
inc
jae
call
xor
and
sbb
shlb
in
fs
cltd
in
inc
xchg
sbb
cmp
stc
jg
cmpl
ljmp
push
mov
adc
mov
std
fbld
or
std
sbb
cli
xchg
int
pushf
jae
pop
mov
xorb
sbb
test
les
cmp
ret
mov
cmpsb
cld
cmpsb
adcl
dec
in
jecxz
roll
arpl
jns
push
adc
push
mov
shl
shlb
pop
aas
inc
fcomps
mov
xchg
push
xchg
and
and
or
cs
sbb
fsts
loop
mov
ja
mov
sub
fimuls
iret
aam
sahf
mov
sub
cmp
divb
shlb
cmp
or
add
idivl
mov
inc
push
cmp
xchg
test
adc
mov
ds
pop
add
mov
inc
sub
repz
cmp
pop
in
mov
mov
sub
sbb
adc
repnz
iret
mov
mov
gs
inc
test
inc
jge
adc
fnop
hlt
sub
cmpsb
orb
pop
jl
and
andb
repz
test
dec
loopne
call
jb
push
fsubrl
stos
mov
cltd
imul
mov
mov
fldl
xor
cld
xchg
inc
cmpsl
cmp
insb
repz
jge
stos
lcall
daa
adc
arpl
push
icebp
mov
inc
lock
data16
cmp
and
fnsave
mov
and
xchg
data16
loopne
xchg
sbbb
adc
rolb
mov
dec
cwtl
addr16
loopne
stos
pshufw
dec
mov
enter
mov
cmc
mov
pushf
sub
mov
mov
push
outsb
rolb
movb
pop
imul
sub
int
mov
popl
jge
insb
fdivrl
leave
dec
xor
js
fsubrl
cmp
pusha
push
or
into
mov
jmp
push
imul
dec
cwtl
aam
or
pop
jp
andb
jp
mov
pop
scas
lods
sbb
call
fucomip
leave
or
jl
xchg
popa
xlat
pop
adc
jge
pop
pop
add
dec
sub
push
repnz
repz
repz
cmp
fsubrl
std
ret
scas
add
mov
xchg
in
ljmp
lock
les
cmp
inc
and
ret
es
imul
test
icebp
out
pop
das
das
repz
pop
sbb
or
hlt
scas
inc
std
adc
add
dec
popa
fcomp
inc
mov
dec
sbb
xchg
add
push
mov
jl
je
and
inc
fcoml
js
in
jb
in
sbb
push
cmc
mov
add
add
rol
std
cmp
mov
sbb
packssdw
jecxz
sub
pop
sub
jns
or
jp
rorb
je
nop
test
mov
inc
out
arpl
fcoms
mov
add
rcrl
or
mov
and
fnstsw
pop
mov
fdivrp
xor
dec
fidivrs
sbb
das
mov
pop
fwait
scas
hlt
and
int3
mov
inc
arpl
jmp
inc
pop
mov
sahf
mov
lods
test
push
cwtl
in
or
jl
xchg
ficoml
inc
aam
negb
jbe
push
push
pop
dec
in
dec
push
mov
pop
shr
jmp
test
mov
mov
add
mov
jge
mov
pushf
je
imul
or
sahf
mov
popf
mov
fmull
adc
inc
inc
and
adc
out
push
adc
leave
out
pop
arpl
mov
pop
shrb
mov
mov
or
mov
ficomps
add
inc
aas
push
mov
xor
popa
stos
pushf
push
sub
cmp
mov
test
xchg
cmp
cmp
mov
je
mov
sbb
negl
imul
sahf
or
insb
ret
lea
imul
lret
xchg
push
ds
ret
je
shrb
out
dec
dec
adc
pop
dec
inc
rolb
movsb
test
fxtract
adc
dec
ret
movsl
dec
loope
pusha
insl
push
xchg
test
xor
push
jo
jmp
into
sarb
hlt
in
fnstcw
push
loope
sti
pop
pop
in
ss
dec
add
jge
in
push
cmpsb
jne
or
mov
cmpsl
mov
pop
pop
mov
bound
mov
outsl
and
and
mul
xor
popf
xchg
shlb
xchg
sbb
xchg
xor
lsl
inc
dec
jecxz
inc
jnp
mov
cwtl
ss
movsb
imul
dec
push
call
insb
negl
jnp
fs
sbb
jge
sti
fdivs
mov
aas
mov
pop
lea
fwait
jl
sbb
adc
jle
inc
testb
or
dec
call
xor
sub
inc
push
js
adc
cli
out
sti
popf
fadds
adc
cmp
jne
mov
arpl
aaa
fdivs
imul
jecxz
aam
inc
cs
jmp
ds
push
pop
add
lret
pop
ljmp
fs
pop
ror
inc
add
fbld
inc
repz
pushl
lock
sub
shlb
and
loopne
sub
mov
mov
frstor
sbb
js
jge
out
aad
inc
or
out
call
je
mov
mov
or
ret
xchg
pop
lret
adc
imul
cld
jmp
in
pop
bound
jnp
sub
sbb
mull
jg
mov
movsb
clc
mov
sbb
call
mov
push
dec
outsl
inc
imul
pop
jns
mov
or
in
adc
or
mov
mov
pop
jmp
jge
mov
jnp
pop
fists
pop
movsl
addl
fs
jno
mov
or
stc
jo
int3
lock
inc
add
outsl
jecxz
scas
lods
mov
mov
inc
in
xchg
mov
iret
mov
inc
mov
add
sub
push
std
fucom
pop
dec
scas
jl
int
addr16
push
mov
push
push
stos
or
jns
in
icebp
outsl
pop
loopne
enter
ds
sub
cwtl
sub
pushf
inc
fisubrl
cmp
mov
aam
call
call
test
sbb
mov
dec
jns
mov
push
adc
inc
js
sbb
inc
fldl
pop
les
mov
mov
jb
iret
stos
mov
pushf
cmp
mov
insl
arpl
sub
inc
xchg
push
dec
inc
jbe
pusha
in
fisttpll
pop
subl
xchg
dec
cmc
rcl
int
push
ljmp
loope
pop
jo
nop
mov
dec
xchg
ret
negl
popf
jmp
arpl
pop
cli
in
pop
rcrb
shlb
push
sub
fsubrs
xchg
gs
jo
ljmp
sub
inc
call
aad
push
mov
mov
cmp
ficomps
cs
lahf
add
int
or
or
sbb
mov
bound
inc
push
fldenv
loop
out
jmp
addl
in
subb
loopne
out
bound
push
fdivrl
mov
adc
inc
loope
push
cld
mov
add
adc
ret
pop
test
mov
insl
cmp
xchg
mov
jnp
push
imul
add
inc
insl
shrb
test
popa
mov
mov
loop
leave
push
mov
pop
rclb
hlt
test
cltd
cmp
test
push
and
imul
nop
sbb
xor
ret
mov
jg
push
enter
pop
push
inc
dec
mov
out
pusha
pop
mov
adc
mov
je
repz
icebp
inc
pop
jmp
fs
lods
mov
leave
inc
jg
xchg
addr16
fldcw
mov
shl
pop
pop
shlb
adc
leave
sub
pop
ret
in
mov
xlat
and
push
jne
push
mov
fs
pop
cmc
test
inc
push
mov
add
mov
ret
js
inc
imul
sahf
add
or
lahf
cmp
or
mov
es
out
daa
popf
inc
sbb
in
popa
inc
ja
aad
pop
mov
addr16
lds
loopne
sbb
push
js
ds
cmpsb
push
loope
mov
ret
mov
lods
xchg
mov
inc
dec
xor
mov
lods
test
dec
push
shr
pop
cltd
inc
mov
lock
test
xchg
sbb
pop
sbb
fcoms
pop
inc
int3
clc
add
stos
stos
clc
mov
pop
fs
inc
ss
pop
sub
test
fcomip
imulb
sarb
cli
call
int
arpl
mov
xor
cmp
mov
repnz
pop
adc
ljmp
mov
add
test
das
scas
or
sub
pop
push
in
outsb
popa
inc
rcrl
mov
push
inc
pop
push
aad
jle
scas
cwtl
mov
shll
adc
mov
ds
cmp
rclb
add
mov
add
shlb
or
in
adc
push
inc
lret
test
cmp
shlb
and
cld
mov
or
add
mov
inc
lods
jbe
call
pop
clc
mov
subb
test
std
sbb
sub
xor
enter
sti
push
rorl
sbb
das
fisubl
dec
jl
pop
pop
insb
or
inc
addr16
fsubs
loope
out
cmp
xlat
jmp
sbb
jns
inc
cmpsl
xorb
rorb
das
mov
stos
jl
add
arpl
addr16
mov
xchg
loopne
pushf
fsubrl
aad
clc
sbb
push
movsb
jp
jne
pop
dec
sub
pop
mov
fcoms
mov
ds
mov
pop
das
addr16
push
adc
cltd
outsb
shl
jns
outsb
xchg
xchg
jns
rcrb
inc
mov
test
fisubrl
cmpsl
cs
aas
and
stos
push
ret
aas
cmp
sub
sbb
test
cmp
sbb
pusha
cmp
fs
loopne
fwait
adc
push
loopne
loopne
test
ficoml
sub
subb
dec
inc
mov
and
in
inc
jg
sti
push
sbb
rcl
and
filds
scas
inc
mov
cmpsl
cs
out
hlt
cmc
loop
xchg
jecxz
push
pop
cmp
hlt
jle
adc
fsts
dec
adc
arpl
std
js
push
push
adc
push
ja
pushf
push
cmpsl
fs
cmpsl
mov
dec
push
sahf
pop
fwait
push
arpl
push
js
add
data16
shll
ss
lahf
loopne
sbb
or
out
cli
and
xlat
popa
xchg
int3
inc
mov
add
call
mov
push
aaa
sub
jl
mov
and
inc
xchg
jnp
sub
cmpsb
mov
xchg
pop
mov
aas
sub
jo
sub
sub
ss
xor
scas
adc
ret
in
js
je
sbb
jno
fs
add
xchg
je
test
push
push
mov
fsub
shrb
in
test
dec
pop
mov
clc
pop
mov
jnp
jo
and
adc
or
outsb
cs
pop
sbb
shlb
pop
es
mov
pop
fs
int
sahf
xchg
fcoms
mov
inc
adc
push
ret
xchg
pusha
dec
jo
popf
mov
inc
inc
inc
movsb
push
push
mov
dec
popa
clc
pop
mov
in
jno
push
cmp
adc
fsubl
fildll
push
cmp
push
push
xchg
fsubl
jle
lcall
mov
out
cmp
mov
addr16
rorb
popa
push
in
pop
lods
in
mov
enter
inc
push
mov
jnp
cld
mov
movsl
in
ds
jbe
push
pop
nop
mov
jle
mov
add
icebp
scas
push
jp
add
sti
std
push
dec
cltd
xchg
sbb
pop
stos
push
push
jno
cli
es
cwtl
sahf
pusha
adcl
jl
cmp
clc
ljmp
cltd
arpl
push
add
movsl
in
pop
popa
mov
icebp
popa
xor
pop
mov
lods
inc
sub
test
pop
pop
arpl
shlb
sub
popf
xchg
dec
out
arpl
in
jecxz
lea
mov
and
or
out
cli
inc
fwait
les
adc
lret
das
fimuls
jge
adc
adc
cmp
or
pop
push
and
loop
xor
xor
jno
inc
loope
mov
mov
fcomps
pop
mov
inc
xor
in
sbb
call
xchg
cmp
icebp
sbb
movsb
pop
outsl
out
or
dec
fsub
dec
ror
pop
adc
mov
frstor
sbb
pop
in
mov
or
pop
adc
sbb
test
shlb
loope
sbb
call
in
es
mov
mov
xchg
adc
pop
sub
push
or
popf
sbb
or
icebp
push
in
xor
mov
cmp
mov
cltd
sub
repz
fadd
add
jg
push
mov
mov
jle
dec
lods
fs
fsub
inc
mov
sub
shrb
jmp
and
out
sub
xchg
cmp
sub
aad
pop
push
cmp
push
test
and
jne
jecxz
pop
mov
int3
neg
mov
bound
xchg
arpl
je
jnp
aaa
add
dec
hlt
mov
mov
mov
mov
popa
loopne
scas
fdivrs
sbb
call
pop
mov
dec
xor
mov
mov
jp
lods
call
push
imul
xor
out
loope
mov
faddl
es
push
pop
movsb
addr16
adcl
adc
and
cmpsl
pop
stos
loope
imul
adc
nop
stos
and
das
outsb
scas
std
cltd
or
fwait
xlat
mov
mov
pop
test
inc
sub
shlb
or
iret
dec
je
aaa
ljmp
inc
push
clc
mov
mov
push
mov
test
das
cmp
pusha
xchg
in
je
not
mov
xor
popa
fs
xor
in
jg
push
jge
pop
aad
inc
outsb
mov
and
lock
pop
sbb
cmp
inc
jns
add
sarb
ror
test
addr16
add
mov
mov
ss
fidivrl
fldt
sbb
and
sbb
or
sbb
jmp
xorb
inc
aaa
xchg
add
iret
stos
movsbl
inc
ljmp
hlt
mov
cmc
inc
cmp
in
push
clc
das
add
fldenv
xor
cmp
lea
js
or
mov
leave
pop
sarb
pop
and
daa
or
jb
xor
pop
or
lret
or
cmpsb
sub
jb
js
pop
adc
sbbb
add
adc
rcll
xor
lds
xchg
test
stos
jnp
cmp
sub
popa
inc
js
cwtl
hlt
lods
jg
js
add
push
dec
xchg
and
adc
es
addb
lods
push
lret
push
out
lret
and
push
jp
mov
add
pushf
dec
sub
and
les
push
enter
xchg
mov
inc
mov
shl
push
pop
pushf
cmc
es
lahf
loopne
ret
xchg
scas
pop
je
fs
jl
scas
push
sub
pushf
hlt
ret
xor
push
js
pop
imul
add
fildll
cli
sub
add
push
arpl
mov
js
into
shll
jo
popa
ds
fisttps
fcmovu
pop
popa
xor
icebp
bound
cltd
cmp
in
fisttps
nop
mov
dec
sbbl
sbb
dec
lret
mov
push
imul
pop
push
mov
mov
mov
test
dec
and
inc
shll
test
outsb
mov
sub
fcomps
mov
xchg
and
mov
hlt
mov
clc
mov
pop
xchg
add
hlt
stos
enter
push
out
inc
dec
or
lods
in
mov
lahf
test
pop
dec
push
jecxz
cmp
test
mov
mov
ret
jp
je
iret
jp
mov
dec
loop
int
bound
jle
sbb
jge
scas
mov
inc
test
push
cmpsl
lcall
mov
pop
lret
rorb
push
insb
into
in
pushf
call
gs
pop
mov
or
stos
mov
imul
xchg
hlt
add
fwait
or
pop
mov
jmp
cmc
pop
xchg
inc
add
iret
xor
add
sub
hlt
mov
sarl
mov
cmp
inc
out
jns
mov
out
xor
test
fisubl
inc
out
mov
pop
adc
cmpsl
or
mov
xchg
inc
repnz
sub
adc
enter
cmp
push
cmpsl
outsb
cmp
cwtl
sbb
xor
cltd
push
mov
nop
xlat
call
bound
ficompl
ljmp
pop
fildl
std
mov
mov
js
and
js
xor
mov
or
adc
push
call
cli
and
arpl
jecxz
lods
iret
cld
pop
in
popf
lods
fcompl
dec
shl
xchg
mov
cmc
loope
or
int3
int3
call
cmp
out
les
mov
xchg
ret
jp
pop
push
dec
pop
shll
shll
xchg
lods
jg
movsl
sub
or
sub
sub
xchg
test
pop
cmpsb
or
mov
ds
fcomps
ds
push
push
mov
sub
sub
mov
jmp
add
inc
sbb
cmp
hlt
test
mov
push
pop
popf
cmp
cmp
pop
jle
mov
out
in
daa
cmc
inc
imul
pop
add
push
mov
mov
jmp
insb
xchg
cmp
outsl
mov
test
stc
lods
xor
scas
call
std
cmovo
inc
xchg
jp
inc
stos
call
test
out
push
push
cli
push
mov
enter
popa
sbb
fildl
mov
xchg
inc
dec
xor
pop
test
xlat
adc
mov
xlat
mov
pop
cmp
adc
jecxz
xchg
mov
outsb
inc
xlat
leave
fwait
pop
mov
movsl
and
nop
cmp
and
and
jnp
dec
adc
dec
cs
mov
and
jle
imul
jecxz
cmp
sbb
lcall
xor
out
fisubrs
and
pop
lods
jecxz
sbb
adc
dec
orb
mov
popa
and
lock
sbb
repz
push
pop
lret
orb
push
mov
sub
sahf
out
ljmp
mov
insl
inc
testl
dec
mov
push
push
js
xlat
imul
aaa
dec
fldl
cmpsb
cld
or
xor
aas
ret
das
adc
lcall
cmc
pushf
and
lcall
push
dec
jecxz
aaa
rcr
inc
mov
aam
call
cmpsl
shrb
jg
ljmp
imul
jbe
push
push
cmpsb
cltd
pop
sub
dec
loope
sbb
dec
pop
insb
and
cwtl
xchg
lods
scas
mov
in
adc
push
test
push
js
jecxz,pn
mov
mov
loopne
inc
sub
insl
push
mov
scas
imul
push
mov
push
jbe
sbb
rorb
mov
xchg
dec
xchg
mov
sbb
cmc
pushf
adc
mov
popf
xchg
inc
arpl
or
mov
call
lahf
enter
sti
sub
inc
mov
insl
movsl
cli
sub
shl
shlb
and
adc
sarl
add
or
clc
or
das
add
mov
aas
es
in
xor
aad
jg
imul
pop
or
push
push
pop
pop
dec
mov
fldz
ljmp
mov
push
add
int3
dec
add
jp
inc
xor
sbb
daa
or
popa
or
adc
shll
aaa
je
sub
lret
dec
mov
sbb
pop
inc
repnz
adc
pop
push
daa
mov
loopne
or
xchg
mov
sti
filds
outsb
xchg
push
add
cmp
dec
sub
jae
adc
popa
sbb
stos
and
xchg
mov
xor
ret
adc
jecxz
add
xchg
jge
mov
add
aaa
mov
mov
and
popa
rorb
int
push
scas
movsb
adc
inc
mov
mov
inc
orl
pop
jg
scas
inc
stos
and
bound
pop
or
pmuludq
pop
rcrb
or
mov
int
pop
pop
mov
pop
push
mulb
int
inc
sub
or
imul
xor
inc
lds
fnsave
scas
adc
test
mov
shlb
inc
xchg
insl
sbb
clc
jo
dec
or
cmc
dec
pop
lods
inc
sub
andb
test
outsl
mov
fcoml
cmp
inc
jle
push
fsubrs
push
dec
cmpsb
push
bound
sbb
lret
push
adc
xchg
inc
pushf
mov
jne
insb
jno
or
lock
imul
inc
sub
mov
fdivrs
pop
ljmp
out
inc
test
push
sbb
cmp
cmpsb
push
syscall
xor
inc
adc
fwait
daa
test
push
xorb
js
push
mov
mov
and
push
arpl
sub
xchg
jo
stos
sysexit
rcrl
adc
and
std
dec
popa
js
cld
imul
push
bound
xchg
or
pop
loope
dec
loope
movsl
cwtl
pop
and
pop
out
in
adc
pop
icebp
pushf
sbb
dec
out
push
jge
and
sbb
ljmp
cs
lret
mov
sbb
cltd
sbb
dec
cmp
xchg
mov
push
pop
xor
in
inc
dec
xor
fdivs
cmc
mov
das
cmp
pop
add
xor
ret
pop
or
popa
call
mov
cmp
aas
push
mov
or
inc
xchg
mov
in
cmp
popa
mov
hlt
mov
push
and
jl
fsubrs
sbb
bound
xor
ljmp
std
xchg
add
mov
or
js
inc
repnz
cld
cwtl
mov
xchg
fcompl
out
mov
insb
sbb
frstor
pop
in
cmc
sarb
push
push
cli
xor
or
outsb
cmp
lcall
dec
pop
cmp
xchg
or
pop
xchg
inc
inc
mov
sti
inc
std
call
cmp
ret
adc
and
mov
mov
fsts
ret
arpl
idivb
nop
clc
outsb
pop
gs
shr
add
mov
dec
xor
or
jmp
cmp
sub
pop
mov
hlt
scas
fadds
insb
jbe
sahf
mov
ljmp
cmp
pop
adc
adc
outsl
inc
popl
mov
inc
mov
dec
cmpsl
pop
outsl
sub
jns
aaa
shll
cmp
cmp
xchg
sub
aam
imul
lock
or
pop
pop
inc
or
mov
and
lock
push
adc
xchg
mov
mov
je
push
mov
imul
inc
cltd
in
adc
mov
in
sbb
inc
lea
inc
loop
outsb
inc
jbe
js
popa
sub
cmp
movsb
in
inc
test
add
dec
xchg
jge
enter
out
test
mov
fidivs
shl
icebp
push
ficompl
inc
fcomps
in
add
aas
push
cli
out
mov
loope
int3
inc
add
inc
xor
or
cld
popa
insb
cmc
test
pop
sub
addl
xor
cltd
jge
xchg
adc
fistps
push
cmp
xchg
fcos
xchg
out
or
test
out
sbb
xor
add
bound
scas
in
pop
stc
sbb
int3
aad
popa
cltd
sub
mov
subb
addr16
mov
inc
pop
je
pop
mov
xchg
adc
or
mov
sub
rol
movsl
pop
jns
lods
nop
mov
fsubs
jo
lock
pop
mov
std
js
lock
sbb
dec
inc
sbbl
arpl
cli
push
push
lock
jl
sbb
add
push
cltd
cmpsl
pop
sahf
inc
loopne
scas
push
and
in
outsb
cmpsl
stc
nop
sub
sarl
cmp
loopne
test
clc
inc
popa
mov
push
or
mov
cwtl
xchg
add
pushf
or
add
aad
mov
mov
cmp
dec
daa
inc
shll
loop
jae
adc
out
leave
outsb
mov
les
out
sub
fs
or
out
cld
inc
lods
inc
mov
addr16
sbb
daa
es
fadd
or
sbb
loopne
xor
push
pusha
adc
inc
add
add
lods
pop
push
sahf
data16
jnp
fs
clc
push
arpl
out
push
pop
inc
movsl
pusha
mov
outsl
mov
inc
lock
addr16
rorl
push
movsl
add
daa
out
clc
leave
pop
ret
xchg
add
pop
mov
loop
mov
outsl
pusha
pop
and
jecxz
cmp
out
adc
sbbb
mov
jae
mov
mov
xchg
cmp
test
mov
inc
mov
xchg
scas
mov
adc
sub
jmp
and
icebp
xchg
mov
shlb
sbb
in
dec
pop
notl
mov
imul
or
and
mov
call
out
js
jbe
fisttpll
int
out
mov
movsl
imul
mov
das
fmuls
fdiv
pop
cmpb
stos
mov
adc
int3
cli
mov
lret
into
mov
inc
movsl
xchg
pop
in
ds
add
pop
loop
jmp
xchg
inc
popa
test
lret
cld
or
sub
dec
arpl
dec
andb
mov
adc
arpl
dec
sub
sti
testl
jbe
pop
in
adc
mov
rcrb
xchg
pop
dec
mov
iret
inc
lea
xchg
leave
mov
mov
add
push
in
cmp
mov
push
outsb
insb
inc
rol
lea
pop
jecxz
loopne
scas
or
cli
addr16
add
push
test
add
movsb
inc
dec
lods
adc
test
add
xor
adc
lahf
xchg
mov
push
loop
rol
stc
mov
sub
in
pop
dec
pushf
into
sbb
mov
out
cltd
xchg
dec
adc
adc
push
mov
loopne
ljmp
imul
stos
xlat
mov
fcmovb
xor
aam
push
insb
in
sbbl
sahf
sub
pusha
out
cs
push
popl
fsubl
movb
sbb
imul
call
inc
test
pop
mov
pop
je
insl
pushf
fs
and
push
dec
shlb
xchg
cmp
enter
xor
mov
loopne
mov
push
adc
cwtl
insb
loop
jge
xchg
call
jle
and
inc
mov
mov
lcall
pop
cmc
sbb
cmc
pushf
push
mov
scas
sbb
repnz
sub
insb
sbb
ljmp
or
in
cld
sarb
in
es
inc
outsl
push
jnp
jno
imul
pop
xor
pop
or
frstor
adc
dec
subl
in
cld
ja
pop
lock
dec
xor
xchg
fwait
inc
cmp
push
loope
inc
pop
sbb
negl
xor
fs
dec
adc
out
pop
inc
inc
imul
outsl
sbb
dec
adc
jns
scas
inc
xchg
stos
cmp
movsb
int
push
hlt
or
pusha
mov
cld
jb
push
pop
sarb
lods
and
and
dec
les
inc
xchg
jbe
inc
ret
mov
ljmp
fadd
and
pop
in
ds
mov
ja
out
out
sti
aas
adc
jnp
add
jl
push
sub
inc
cmp
loopne
popaw
adc
push
test
mov
jno
mov
and
iret
ret
enter
and
lea
pop
push
push
scas
jnp
in
jge
pushf
add
sub
popf
inc
mov
out
repz
addb
pop
mov
mov
and
pushf
or
std
aam
lret
push
hlt
scas
insb
xor
test
cmpsb
lahf
pop
jae
fbstp
mov
push
cli
shll
je
lcall
mov
pushf
cli
cltd
dec
loope
adc
loope
aas
sub
pop
mov
sbb
pop
push
rolb
jecxz
inc
xor
test
enter
addr16
or
mov
sbb
imul
test
sub
repz
push
adc
ficoms
xchg
jb
pop
lods
pop
pop
lret
lcall
xchg
cmp
add
ljmp
sub
adc
lds
test
in
mov
inc
jge
jmp
fs
jmp
xor
push
adc
iret
out
cwtl
es
xchg
pop
xchg
mov
xchg
je
sub
fs
push
lods
mul
mov
sbb
push
imul
out
imul
sub
add
inc
cltd
mov
aad
jecxz
or
or
adc
addr16
and
mov
dec
mov
add
cmc
add
enter
leave
xlat
std
sub
movsl
pop
mov
imull
incb
push
jnp
fs
out
out
sbb
outsl
adc
or
repz
sub
sbb
pop
loope
xor
push
daa
or
push
cli
mov
dec
je
push
lods
out
and
insb
scas
fistps
inc
inc
out
cmpsb
hlt
fcmovnb
push
mov
inc
push
or
pop
dec
jg
bound
imul
jno
mov
jmp
loope
dec
mov
jnp
ret
and
dec
mov
imull
call
jg
lret
pop
mov
xchg
mov
sar
movsb
dec
fcoms
in
jns
cmp
inc
lcall
cmc
jmp
movsl
sub
rcl
inc
insb
sbbb
sub
or
inc
cltd
or
in
inc
mov
neg
dec
xchg
lcall
enter
sarb
popf
lods
negw
stos
inc
bound
and
mov
mov
incb
hlt
aad
inc
add
in
iret
cmp
push
adc
mov
or
rcr
stos
xchg
xchg
mov
mov
in
jg
std
sub
mov
mov
scas
sbbl
jnp
fs
clc
xor
pop
fsubrs
ret
sbb
test
out
xor
xchg
and
test
pusha
clc
test
cltd
test
loop
adc
pop
add
mov
leave
ret
and
sbb
loope
jnp
imul
cwtl
mov
cmp
imul
adc
add
call
pop
adc
mov
rclb
xor
cmp
clc
jmp
jns
subl
ljmp
sbb
mov
scas
leave
mov
rcrb
dec
xlat
insb
imul
pop
or
xchg
ljmp
push
dec
adc
sub
sub
mov
fnstsw
arpl
pop
out
mov
add
jecxz
sbb
sbb
add
push
pop
fdivr
xchg
mov
outsl
jo
adc
lea
mov
mov
shlb
fs
push
xchg
inc
lods
int3
push
movsl
pop
sub
in
push
sbb
sbb
push
dec
jge
test
sbb
jmp
movsb
pop
pushf
shr
cmp
int
aad
pushf
sarl
add
sbb
ret
sbbb
add
lds
adc
js
adc
fdivrs
xchg
push
stos
lock
jnp
ret
test
movsl
pop
mov
mov
cmp
popa
mov
sub
inc
inc
imul
and
or
insb
imul
aad
stos
dec
xor
aaa
in
add
iret
lahf
popa
ficoms
or
dec
pop
sub
sbb
jns
jecxz
not
call
popa
push
xor
fildl
dec
inc
sbbl
push
and
lahf
mov
faddl
incb
daa
dec
xlat
cwtl
repz
mov
jecxz
jge
and
daa
int3
negl
xchg
mov
loopne
dec
lds
sbb
push
add
push
test
pop
bnd
gs
das
add
stc
pop
imul
push
sarl
cmpsb
and
hlt
adc
jl
movsb
pop
mov
xor
nop
jecxz
lcall
call
xchg
cld
mov
pop
xor
mov
xchg
mov
shlb
fdivrl
popa
jg
xor
aas
push
stos
mov
xor
pop
ret
ret
rorb
cmpsb
sbb
jge
dec
fnsave
sbb
loop
inc
jle
icebp
sbb
fs
jno
in
sub
pop
adc
adc
and
insb
mov
push
stos
cwtl
mov
inc
pushf
sub
add
xchg
scas
push
sub
outsl
ret
mov
imul
inc
xchg
clc
xchg
add
cmp
adc
cmpsl
sbb
adc
cmc
jno
xor
call
imul
sbb
mov
popa
lods
pop
js
addb
stos
push
xchg
inc
les
insl
fisubrs
xchg
in
rcl
cltd
pusha
sub
dec
adc
out
mov
out
aam
or
arpl
sub
in
sbb
sarl
std
rorl
inc
push
das
mov
data16
lret
and
das
mov
mov
pop
or
fstl
xor
or
cwtl
or
rorb
and
outsl
scas
mov
stos
add
dec
cltd
movsb
jo
mov
cmp
pop
mov
lcall
add
mov
jmp
inc
or
ret
xchg
nop
cmp
mov
sub
mov
cmp
mov
in
sbb
or
js
inc
movsb
enter
jmp
xchg
push
xchg
test
jle
pop
jbe
in
mov
jp
fidivrs
cltd
sub
lcall
sub
pop
insl
in
ljmp
inc
cld
hlt
outsb
out
dec
cli
jns
rclb
mov
mov
notl
dec
sub
or
adc
and
stos
add
jl
mov
fadds
fidivrl
mov
adc
pop
jo
dec
inc
push
xor
jg
pop
aam
cltd
and
cmp
int3
cwtl
or
inc
jle
hlt
sbb
jnp
lret
test
and
repz
sbb
sti
pop
scas
cmp
pop
sarb
retw
mov
roll
popa
inc
and
inc
aam
push
push
pop
nop
stos
rcrb
test
incb
xchg
fists
pop
ficomps
fucom
je
or
mov
mov
push
out
xchg
imul
and
cmp
ljmp
fsubp
outsb
inc
cmp
pushf
test
xchg
jbe
xchg
sbb
clc
inc
and
test
fs
shrb
and
cmp
repnz
xchg
fistpll
and
fdivs
xor
cmp
out
cmp
out
fcomps
fnstsw
dec
xlat
movsb
gs
outsl
add
inc
mov
movsl
insb
sbb
insb
adc
ljmp
xor
and
and
andb
push
xchg
cs
negl
inc
xchg
call
sbb
arpl
xor
call
inc
fildl
pop
andl
lahf
jmp
out
mov
js
repz
mov
loopne
mov
jg
arpl
shrl
rolb
mov
test
jge
lahf
sbb
arpl
mov
into
inc
fiaddl
shrb
ds
mov
mov
je
cmpsb
repz
nop
xchg
cmp
aam
rorb
xor
icebp
outsb
push
cmpsl
test
and
sub
add
jmp
sub
sub
add
incl
dec
sbb
loop
lods
mull
sbbl
pusha
or
xor
xchg
jle
xchg
cmp
cmp
mov
cld
xor
pop
mov
cmp
cs
int3
inc
and
fstps
add
and
frstor
jge
xor
xchg
pop
sub
adc
jbe
popa
std
push
push
test
and
setle
sbb
lret
inc
inc
cmp
arpl
cwtl
mov
out
aam
push
faddl
mov
jp
xchg
dec
into
mov
insb
lods
dec
movsl
cmpsb
nop
cmp
push
and
repnz
stc
add
mov
fs
test
jmp
aad
subb
in
xor
push
jb
inc
jge
fs
xchg
cld
sub
scas
xor
sbb
out
dec
fisttpll
fldt
sub
addr16
pop
jmp
fwait
pusha
jbe
data16
pop
mov
shlb
movsb
sbb
mov
aaa
cmp
cltd
mov
sbb
sub
xchg
add
jo
lods
gs
adc
popa
or
inc
mov
je
outsl
aas
call
fistl
cmp
popa
inc
cmp
iret
xadd
and
leave
push
cmc
aad
push
clc
pop
jmp
test
adc
test
imul
shrb
adc
das
outsl
addr16
xchg
scas
js
xchg
jne
adc
or
test
or
and
call
cmp
subl
pushw
xchg
cwtl
mov
sbb
push
cmp
loopne
push
adcl
pop
sub
jno
ljmp
cmp
mov
and
fnstsw
cwtl
rorb
gs
or
pop
insl
jmp
ljmp
inc
mov
cs
ds
icebp
push
std
rolb
inc
popa
out
cmpsb
pop
popa
je
mov
mov
add
pop
jecxz
fwait
shlb
push
iret
push
pop
mov
jge
mov
movsb
ret
xlat
ljmp
and
cwtl
icebp
aas
sbb
clc
xor
inc
imull
loopne
add
jo
push
outsl
imull
pop
inc
pop
xor
rcrb
adc
cmpb
loope
sarb
cmp
jg
lret
adc
mov
insl
push
sub
inc
push
cmpsb
add
fdivp
sbb
and
cld
inc
add
sbb
clc
dec
push
mov
cmp
cmp
repz
test
jno
sbb
pop
inc
cli
pushf
adc
loopne
lcall
outsl
pop
pop
aad
mov
mov
sub
in
gs
sub
inc
sub
jp
in
xor
sbb
jns
or
mov
inc
pop
cmpsl
out
push
lret
fs
mov
pop
pop
or
pop
inc
inc
jg
rclb
lods
loope
dec
pop
into
ss
ljmp
inc
sti
pop
test
add
ds
outsb
mov
jle
insb
ffreep
or
ret
stos
jmp
gs
push
fisubl
xchg
dec
jb
mov
mov
ror
add
push
inc
jl
cmp
inc
cmp
adc
test
fdivrs
cmc
sbb
mov
fs
pop
ja
cld
bound
pop
push
dec
xlat
test
shlb
leave
pop
adc
dec
cmpsl
stos
sbbb
iret
or
pop
rorb
fadds
adc
mov
mov
pop
mov
das
mov
mov
adc
out
cmp
popa
lret
ss
insb
dec
push
mov
xlat
pop
lret
lret
xchg
cmp
mov
cld
jo
loope
inc
mov
pop
in
sbbb
jnp
xchg
inc
push
sbb
fstl
cmpsl
adc
ja
scas
imul
xchg
mov
std
arpl
dec
cmpsb
lock
out
in
sub
or
in
lods
loopne
jno
in
mov
jecxz
iret
call
adc
cli
adc
inc
push
push
xor
outsb
pop
push
addr16
aas
data16
movsb
pop
cli
pop
mov
push
jge
lock
in
negl
dec
ret
adc
or
cmpsb
xor
ret
lods
and
xchg
jno
inc
adc
mov
out
fistps
movsb
mov
insl
mov
xchg
mov
sbb
sub
sbb
pop
sbb
rorb
in
mov
imul
adc
rol
push
gs
dec
fidivl
dec
pushf
pop
rcrb
mov
fildl
xchg
shr
ja
cld
incl
pop
cwtl
daa
adc
adc
stos
jno
andb
xchg
mov
std
sbb
add
xlat
xchg
test
sub
ljmp
sti
stos
jmp
pop
mov
enter
je
movsb
add
hlt
cmpsl
push
dec
out
cmpsl
mov
icebp
pushf
push
sbb
outsb
aaa
sub
inc
sub
mov
sbb
insl
dec
xchg
xor
stos
lods
mov
and
mov
dec
adc
mov
fwait
mov
test
int3
ljmp
stos
jmp
sub
sub
inc
js
push
loope
and
rcrb
sbb
fadds
lea
ret
enter
mov
or
scas
fmuls
mov
jbe
dec
sbb
pop
rclb
hlt
fs
pop
jbe
inc
push
popa
test
shrl
or
mov
pop
rol
jnp
inc
int
in
stos
call
loop
mov
mov
out
inc
fsubrs
adc
push
cmpsl
outsb
fbstp
mov
sbbb
dec
popa
xor
dec
das
lods
mov
mov
and
cli
cwtl
in
dec
gs
jo
scas
mov
push
mov
push
add
push
inc
pop
cs
aas
push
dec
cs
or
jmp
out
rorb
cmpsl
gs
repnz
pop
mov
fwait
stos
mov
pop
mov
mov
insl
arpl
adc
or
cmc
dec
adc
pusha
lock
inc
clc
or
dec
xchg
jg
enter
sbb
call
std
cmpl
dec
call
mov
xchg
sbb
mov
push
mov
clc
and
dec
push
pop
adc
push
lods
pop
sbb
pop
push
dec
js
xchg
inc
add
push
xchg
mov
dec
mov
sbbb
mov
stos
add
jmp
fwait
sbb
nop
dec
push
adc
sbb
arpl
or
pop
dec
inc
outsl
add
call
pop
mov
popa
jb
addr16
data16
insb
orb
jns
sbb
mov
xchg
cmove
shll
test
xchg
and
pop
int
push
pop
sub
stos
arpl
pop
or
adc
mov
xor
mov
mov
adc
and
mov
inc
addr16
jl
js
pop
and
mov
shrb
imul
jo
cltd
and
popa
or
cli
add
sub
sub
pop
in
adc
mov
data16
pop
in
xchg
fsub
mov
mov
loopne
inc
cmpsl
fisubrl
iret
icebp
movsl
cmpl
lods
lods
jb
mov
push
lods
insl
jne
mov
ds
push
mov
dec
xlat
frstor
insl
dec
add
sbb
push
notl
pop
dec
jecxz
xchg
mov
push
push
push
sar
xchg
and
sbb
mov
push
xchg
pusha
out
outsb
mov
cmp
pop
lods
sahf
xor
bound
mull
sub
cs
mov
sub
push
mov
test
mov
sbb
shlb
ja
mov
pop
scas
dec
insl
loopne
and
insb
psrlw
cs
arpl
mov
lahf
fs
inc
inc
mov
lock
cmp
sub
out
cmpsb
sub
gs
xchg
xchg
add
ds
add
cmc
mov
or
sub
or
add
cwtl
lea
sub
mov
mov
mov
iret
cmp
lock
or
sbb
dec
sbb
sti
pop
sarb
jno
scas
cltd
das
or
out
fs
rorb
and
dec
xor
ljmp
or
cmp
pop
jb
push
mov
and
ret
pop
and
sub
push
ret
repz
fmuls
or
pusha
fadds
imulb
icebp
inc
loope
xor
sbb
jge,pt
rclb
inc
shr
pop
mov
push
fildl
jo
push
filds
js
loope
insb
push
jle
fbstp
jo
testb
jp
push
in
sti
push
les
cmpsl
pop
xchg
rorb
add
mov
test
cmpsb
mov
arpl
cwtl
jp
mov
dec
shr
xchg
mov
push
bound
add
jg
clc
cmp
enter
inc
lahf
push
mov
sahf
enter
xlat
cmpb
jecxz
mov
stos
rcll
aad
inc
mov
out
sbb
inc
xor
or
js
pop
sub
fldl
scas
loop
and
mov
sarl
in
jge
sbb
cmpb
stos
lods
and
in
sbb
sbb
xor
dec
pop
sbb
xchg
adc
mov
cwtl
test
sub
or
out
hlt
dec
sub
xchg
inc
adc
inc
mov
or
icebp
xchg
sub
out
jp
ss
hlt
inc
outsl
scas
icebp
mov
sbb
jns
aas
jmp
mov
adc
pusha
sbb
je
int
xor
fld
xchg
stc
sub
insb
mov
jmp
mov
mov
inc
mov
aam
push
js
int3
cmp
shrl
out
hlt
in
ds
scas
mov
jmp
sub
lret
xchg
imul
loopne
popf
test
or
cli
push
cmp
lea
fwait
inc
js
xchg
and
mov
mov
lods
nop
loope
loopne
and
test
jno
popa
rolb
sbb
push
jmp
mov
push
xlat
or
ljmp
mov
out
cli
mov
push
inc
fiadds
enter
push
loope
cmp
pop
shlb
sarl
mov
xchg
subb
icebp
mov
roll
or
cli
pop
xlat
or
shrb
loop
xchg
out
into
shll
dec
sarl
mov
btr
fiadds
xchg
aaa
xchg
sub
fwait
mov
cltd
std
arpl
movsl
loope
jo
cmpsl
ret
mov
call
push
ror
ja
mov
outsb
jno
push
xchg
and
mov
ljmp
inc
lcall
popf
adc
aam
xchg
adc
sub
lods
mov
cmpl
pushf
shll
rcll
pop
loopne
das
inc
add
cli
add
scas
cmp
pop
stos
mov
cmp
mov
inc
mov
fisttps
sbb
int3
dec
inc
in
inc
mov
cmpsl
and
xchg
cmpsl
cmp
arpl
icebp
mov
dec
cwtl
sbb
xchg
pop
adc
fninit
pop
push
push
clc
ljmp
add
inc
pop
test
cmp
test
adc
mov
aad
or
mov
jmp
pop
mov
loope
imul
cmp
sub
sbb
insb
mov
pop
cmp
jp
test
mov
add
jmp
cwtl
jnp
out
push
xor
add
sahf
push
pop
fsubr
pusha
fildl
imul
test
adc
cmp
jg
jmp
fdivl
enter
out
ds
dec
in
pushf
out
add
iret
cli
fidivl
fwait
ja
lahf
cltd
sbbl
in
add
dec
mov
adc
add
cmp
cmpsb
lods
push
adc
or
mov
xchg
jge
inc
sub
inc
jg
mov
loope
bound
sub
jno
stc
mov
add
mov
or
std
mov
pop
ja
rcl
pop
loope
add
movsl
xchg
aam
and
pop
or
aas
mov
lock
xchg
pop
xor
cli
mov
imul
sbb
loope
jnp
push
fdiv
into
jg
dec
dec
add
cs
dec
mov
dec
sub
sbb
adc
mov
or
cmp
xor
maxps
loope
mov
pop
pushf
roll
mov
cmp
mov
test
into
pusha
adc
call
or
sbb
mov
push
push
sbb
loopne
pop
orb
shl
daa
addr16
inc
mov
imull
sub
rolb
pop
std
popf
aad
ljmp
bound
xchg
daa
iret
jecxz
lods
mov
cmc
mov
fldl
xchg
out
inc
mov
jge
imul
lods
sub
out
es
and
clc
inc
in
out
mov
iret
and
add
test
hlt
jecxz
dec
cmp
cmp
js
adcb
pop
loope
jne
xchg
ljmp
repz
ss
dec
push
mov
push
test
sub
fldl
mov
jl
add
test
outsl
inc
sub
fsubrl
mov
cli
div
push
sbb
lods
rcrb
and
in
inc
lods
mov
jg
lea
pop
xchg
mov
inc
into
mov
test
mov
loopne
dec
jbe
and
scas
inc
lret
arpl
test
and
pop
mov
jns
popa
xchg
sub
pop
es
mov
mov
aaa
lock
push
outsb
fmuls
push
push
add
imul
in
jge
adc
lods
scas
push
jae
mov
pop
rclb
push
sub
lss
negb
adc
scas
pop
push
mov
jb
mov
dec
fldcw
cwtl
push
and
xor
push
jmp
outsl
sub
test
daa
lea
adc
jmp
xor
pop
push
movsl
shlb
ficomps
test
pop
xchg
inc
faddl
sbb
imul
mov
xchg
or
lods
jbe
adc
xor
or
xchg
jmp
fisttpl
adc
sub
imul
cmpsl
mov
add
out
stos
xchg
mov
dec
mov
and
test
and
dec
mov
cltd
test
mov
and
sbb
pop
xchg
inc
inc
stos
jge
pop
call
or
mov
loopne
dec
cmp
mov
jb
daa
ljmpw
addb
test
cmp
inc
and
in
xor
cmpsl
inc
sub
mov
push
and
cli
test
dec
jge
in
cmpsb
jmp
imul
or
mov
inc
xlat
cmp
xlat
xor
sub
scas
push
mov
mov
punpckhbw
repz
addr16
dec
xlat
pop
jl
push
pop
push
cs
add
cwtl
push
test
lods
lds
rclb
mov
dec
mov
fidivrs
pop
jge
xchg
adc
xchg
bound
enter
pop
cmc
jecxz
mov
shlb
inc
rolb
mov
mulb
lock
mov
push
jmp
cli
cmp
in
mov
push
repnz
pop
jmp
or
pop
cmpsb
xchg
mov
leave
je
inc
stos
xchg
adc
and
mov
in
mov
pop
mov
xchg
shll
mov
movsl
sbb
sub
adc
sbb
inc
inc
mov
xchg
mov
pop
in
mov
out
sub
and
inc
jmp
pushf
test
xor
mov
push
add
fisubl
cld
push
les
cmc
mov
xor
pop
hlt
rolb
and
sbbl
fcoms
inc
in
loop
mov
mov
pop
loope
test
and
mov
sbb
or
push
popa
jmp
and
stc
xchg
nop
lods
in
inc
notl
xchg
jo
ret
bound
fs
clc
out
push
nop
or
nop
adc
cmp
inc
jno
test
mov
xchg
fs
jecxz
addr16
jo
add
into
cmpsl
mov
lock
arpl
leave
out
icebp
fs
xchg
jg
je
xor
cli
aad
jl
mov
gs
imul
push
jle
xlat
cmpsb
inc
sub
mov
push
cmp
sbb
sub
popa
fcoms
mov
cmc
push
jnp
outsl
pop
push
cmp
cmpb
mov
dec
movsl
mov
dec
cmp
pop
jb
fsts
jge
subl
or
mov
inc
orl
mov
aas
mov
sar
subl
fstpt
xor
push
arpl
and
das
mov
fs
pusha
test
pop
addr16
xchg
add
les
popa
fcomps
and
sub
decb
push
push
or
mov
cmpsb
aam
mov
xchg
sub
adc
in
push
jnp
and
jp
fdivs
es
movsb
xchg
mov
arpl
outsb
out
fiaddl
push
mov
mov
inc
loopne
fdivs
jmp
or
test
repz
add
cwtl
cmp
out
pop
and
xor
push
psubb
xchg
push
inc
outsl
loope
mov
pop
aam
outsl
xchg
jle
icebp
xchg
into
lea
mov
adc
sub
popa
add
pop
rcr
scas
sbb
push
dec
iret
sub
test
mov
lock
loope
stc
stos
xchg
testb
cld
fdivl
mov
stos
push
jmp
les
xchg
cmp
mov
outsl
lds
hlt
loope
andb
or
testl
scas
pop
sti
filds
es
icebp
dec
push
push
mov
sbb
xor
repz
aam
dec
faddl
sub
je
fsubrl
loope
inc
mov
lahf
pop
pextrw
jmp
pushf
cltd
push
pop
mov
sub
mov
jle
adc
jl
rolb
test
push
test
cmp
or
pop
mov
jae
stos
xchg
jge
mov
cwtl
filds
push
cwtl
cmpsb
rclb
in
adc
in
mov
into
out
mov
mov
test
call
outsb
scas
adc
not
jl
lock
dec
push
lods
idivl
hlt
mov
cmp
loope
aad
dec
insb
das
test
mov
cli
cwtl
inc
sbb
cli
xchg
popf
sbb
fdivl
inc
repz
pop
mov
lahf
out
loop
in
pushf
frstor
ja
push
xchg
ss
pop
adc
dec
xlat
popa
or
fs
sub
add
push
xchg
or
mov
sub
pop
pop
mov
rolb
push
fdivl
je
ss
push
sbb
inc
sbb
xchg
jmp
popa
push
add
sbbl
movl
rclb
jge
adc
push
fmull
pop
cld
jbe
mov
sbb
repnz
sub
mov
jl
or
dec
das
insl
pop
call
jb
dec
cs
push
pop
mov
adc
movsl
test
push
mov
push
mov
das
mov
dec
xchg
pop
int3
int
mov
outsl
outsb
mov
rorb
ret
fnstenv
pop
xorb
ret
js
inc
xlat
daa
icebp
ja
jmp
pop
aad
cmc
inc
xlat
mov
xchg
sub
or
and
int3
lcall
popa
sbb
jmp
pop
push
mov
ss
xchg
sub
loope
mov
jl
dec
test
pop
in
cmp
sarb
xchg
je
mov
test
js
adc
dec
inc
pop
add
sbb
loope
testl
adc
fs
cmp
push
mov
int
lret
cmp
mov
sub
adc
mulb
push
ljmp
jo
inc
xchg
out
fcoms
mov
add
mov
mov
push
mov
xor
fadds
dec
pop
subb
push
mov
add
mov
insl
adc
ret
adc
mov
faddl
push
fdivrs
hlt
lock
fisubrl
ja
lds
pop
xor
jge
jecxz
movsb
and
add
aas
mov
push
imul
lods
mov
pop
fisttpll
pop
sarb
mov
insb
scas
dec
cmp
rclb
inc
adc
arpl
hlt
sub
lcall
rclb
stc
mov
cmc
ficoml
sbb
pop
fwait
and
nop
sub
push
jl
pop
and
mov
pop
aad
add
pop
ret
sub
cmpsl
test
inc
xchg
test
cmpsb
and
out
imul
sahf
imul
xchg
ljmp
stos
jmp
and
insb
cmp
jge
mov
pushl
lret
push
sub
push
inc
es
fdivs
inc
rcl
aam
loope
movsb
stos
mov
pop
shlb
jp
mov
dec
fiadds
ret
sub
fsub
mov
clc
jae
or
jg
popl
movsl
movsb
rcll
ret
push
mov
or
pop
sti
in
jg
into
loop
leave
cwtl
int
jns
dec
mov
lret
add
add
jae
inc
cmp
popa
inc
push
ret
and
dec
ja
jb
add
fisttpll
jl
xor
pop
aam
push
adc
loope
scas
and
pop
sbb
call
jmp
icebp
xor
popf
add
test
jns
cli
leave
test
mov
fisttpl
arpl
imul
ljmp
xorb
mov
inc
mov
iret
cmpsb
call
insl
inc
mov
pop
mov
xchg
mov
mov
scas
out
mov
cmp
out
mov
cwtl
bound
negl
stos
jb
and
loop
sbb
push
jo
push
mov
rcrb
add
cmc
pop
mov
lcall
xlat
ljmp
xchg
cwtl
jg
sub
and
loopne
test
aam
inc
ficoml
fcoms
das
sahf
xchg
test
out
lods
mov
ret
pop
pop
and
hlt
cmc
mov
das
jns
inc
or
jge
imul
sub
cmp
xor
xor
push
sbb
sbb
and
cwtl
mov
jnp
xor
and
movsb
popf
loop
push
inc
aaa
mov
lods
cmpb
icebp
xchg
ja
push
call
mov
sti
in
inc
gs
mov
lret
xlat
jl
je
jmp
das
mov
inc
and
mov
fsubl
cld
push
cmp
cmp
scas
push
cmp
test
inc
lock
add
sub
push
dec
popa
orb
lods
or
rcrb
adcl
dec
ret
imul
movsl
and
adc
add
mov
cmpsl
dec
pop
mov
xchg
pop
loope
sbb
mov
inc
jae
inc
jg
xchg
sub
and
mov
ret
in
jle
sbb
je
shr
pop
push
mov
xchg
out
es
jno
push
adc
inc
in
or
addr16
shrb
lea
pushf
dec
inc
and
mov
in
subb
imul
jge
pop
jecxz
addr16
mov
sub
jg
inc
popf
andb
hlt
dec
mov
xor
pop
push
mov
ret
bound
call
inc
inc
push
sbb
xchg
repnz
popa
inc
jno
test
dec
sub
cwtl
mov
push
pop
outsl
push
mov
pop
pop
jo
inc
int
sbb
fyl2x
inc
mov
pusha
mov
ret
xor
cmp
insb
in
pop
sbb
into
test
repnz
inc
addr16
pop
inc
aam
and
outsl
adc
pop
or
sbb
pop
inc
sub
repnz
mov
cs
pop
and
adc
pusha
mov
das
and
xor
loopne
cmp
popa
repz
jp
sub
dec
inc
lcall
mov
adc
dec
test
pop
add
pusha
imul
sub
int
movl
xchg
loope
xor
test
test
popa
mov
mov
jl
out
test
mov
in
cs
mov
frstor
data16
call
xchg
sub
adcb
lds
xchg
nop
jmp
stos
cmc
popa
fwait
sub
or
add
mov
mov
jnp
cmp
negb
subps
push
outsb
dec
in
adc
mov
jle
pop
xor
insb
hlt
mov
enter
mov
negl
mov
pop
push
xchg
fisubrl
and
stos
sbb
cmc
dec
jne
xor
shll
sti
or
dec
xchg
in
jmp
push
adc
mov
xchg
pop
inc
cmp
adc
lods
and
aaa
cwtl
cwtl
mov
je
inc
push
bound
sub
outsb
out
mov
dec
ret
sbb
adc
sub
cwtl
jmp
and
loope
enter
fldt
lds
xchg
jecxz
addr16
mov
or
sub
push
loopne
daa
pusha
jle
pop
addr16
dec
sub
sbb
inc
mov
ds
push
pop
dec
repnz
mov
jp
pop
pop
mov
pop
jge
add
inc
iret
mov
hlt
int
les
cmpsb
popf
movb
push
xor
cmc
test
cmp
cmp
fnsave
test
pushw
sub
add
or
andb
pop
popa
in
xor
push
std
jmp
push
mov
inc
movsl
jecxz
xchg
and
jge
int3
lods
sbb
jl
mov
inc
jmp
inc
inc
adc
arpl
stc
les
cmpsb
inc
cmpl
clc
stc
sbb
mov
mov
inc
mov
mov
jl
push
cmc
pop
xchg
daa
leave
mov
loopne
xor
fsubrp
push
ljmp
rcl
or
fnstsw
shrl
mov
xrelease
push
xchg
cmc
dec
push
fiaddl
cs
or
push
pusha
test
cs
inc
aaa
into
mov
cmp
mov
in
adcl
pop
cmc
jne
loopne
mov
arpl
add
ds
sub
arpl
into
mov
mov
leave
fsubr
dec
loopne
stos
xlat
hlt
nop
out
inc
adc
arpl
mov
xor
mov
inc
aad
popa
pop
adc
inc
in
xor
cmpsl
fld
add
shll
pop
xchg
dec
rcrb
push
adc
aam
xchg
je
dec
sbb
inc
cwtl
push
jl
sbb
icebp
imul
pushf
mov
pop
mov
or
mov
cmpsl
popl
pusha
inc
pop
pop
sub
imul
inc
rcpps
call
hlt
imul
and
je
ds
lods
mov
cmpsb
jns
xor
loope
xchg
and
jmp
sub
mov
js
out
rcll
jb
cltd
and
int3
mov
js
mov
daa
cmpsl
test
mov
stos
test
popa
nop
dec
fs
ljmp
dec
cwtl
add
push
aam
imulb
mov
dec
jo
xor
mov
mov
cmpsb
inc
sbb
pop
pop
mov
repz
push
out
cmp
in
mov
or
jecxz
push
les
negb
mov
fimuls
addb
or
fisubl
adc
das
sbb
adc
push
cmpsl
addr16
cmc
cmpsl
add
mov
es
test
and
jp
fsubs
push
jns
pop
popf
aam
cltd
insb
mov
xor
push
dec
xchg
or
sbb
adcb
mov
push
cwtl
mov
sahf
jns
lea
jg
out
push
loope
rcr
pop
aad
jno
cltd
mov
dec
pushf
rorb
hlt
mov
and
xlat
enter
test
adc
pop
shl
into
fcmovb
loopne
inc
jl
mov
inc
jnp
push
mov
inc
mov
sbb
inc
jmp
test
mov
std
jl
inc
pop
xchg
imul
out
lret
mov
jno
push
push
ret
mov
dec
imul
dec
add
fsubp
push
inc
lret
loopne
and
inc
lds
jmp
adc
clc
int3
push
sbb
popa
push
ret
mov
mov
sti
ficoml
cli
push
lods
out
add
mov
test
int3
iret
jl
ret
mov
mov
mov
cli
scas
movsb
xlat
fiaddl
push
mov
xor
and
shlb
jne
popa
stos
pop
sbb
pop
movsb
test
jmp
cmp
popa
out
mov
mov
pop
sbb
mov
or
stos
rcr
push
adc
in
or
inc
mov
jecxz
jmp
sub
mov
jge
gs
xchg
pusha
mov
add
and
inc
jo
inc
pop
jnp
cmp
je
push
arpl
popf
jbe
xor
andl
ret
cmpsl
jmp
adc
sub
ret
cmc
sbb
pop
and
xchg
mov
inc
jg
add
jle
ljmp
and
and
xchg
cs
xchg
jmp
or
mov
jg
sub
test
call
decb
out
hlt
lcall
popf
leave
repnz
push
add
imul
ficoms
push
arpl
lods
into
call
adc
test
mov
cmc
call
jecxz
or
aaa
test
scas
xlat
cmpsb
jecxz
mov
sub
lahf
insb
pop
adc
cmpsb
inc
or
clc
test
fildl
sub
or
adc
pop
jns
lods
cmp
es
cli
pop
sbb
fcmovnu
dec
jo
pop
sbb
push
pop
adc
jl
push
xchg
cmp
inc
cmp
pop
fmull
adc
imul
pop
mov
pop
out
mov
add
mov
push
fnstcw
and
shr
jmp
mov
shlb
dec
pop
pop
fisttpl
cmpsb
sub
adc
mov
dec
sahf
dec
pop
cmp
add
jmp
scas
aad
push
pop
dec
adc
jle
dec
and
pop
inc
fdivs
mov
push
jmp
pop
clc
adc
lods
das
pushf
sub
jbe
ret
inc
rcrb
add
pop
lock
std
cmp
pop
shll
and
pop
aam
add
or
das
pop
inc
aaa
add
leave
repz
adc
ds
stos
push
fnstcw
pop
into
arpl
filds
rclb
movsl
pop
shrb
fs
jne
cwtl
lods
and
aam
pop
mov
jg
sbb
mov
cs
sbb
jno
pop
cld
sahf
sbb
pop
lock
pop
sbb
sbb
insl
pusha
jns
mov
xchg
mov
inc
mov
mov
iret
je
imulb
jne
cmpsl
out
cli
stos
rcl
jmp
pop
push
stos
add
into
pop
icebp
es
outsb
lret
sahf
pop
push
mov
call
sbb
mov
les
inc
shrl
popf
cmp
inc
fmuls
jbe
stos
fldl
mov
xchg
lock
pop
cwtl
daa
mov
clc
inc
imul
add
cmp
test
and
xor
xor
sbb
daa
mov
pop
divl
or
stos
jne
addr16
pop
call
cmc
adc
loope
or
sub
sbb
cmpsl
adc
aaa
lret
pusha
push
cltd
sti
pop
lcall
mov
jmp
inc
adc
and
sarl
add
jne
mov
addr16
xor
sahf
fsubs
pop
imul
outsb
inc
mov
fmuls
mov
cld
sbb
push
jge
pushf
mov
cmp
mov
loopne
shr
xchg
subb
test
mov
pushf
pop
add
clc
repz
push
xlat
pop
out
mov
jge
or
mov
adc
xchg
pop
jmp
icebp
js
stc
mov
inc
movsb
ss
cmp
jg
dec
mov
and
das
lcall
fdivr
mov
in
fbld
add
push
pusha
dec
pop
dec
aas
cmpsl
js
jnp
cli
pop
or
add
ljmp
jns
or
pop
testb
cmp
out
pop
js
push
sub
cs
pop
push
call
xchg
lret
sbb
and
cli
pop
sub
pop
mov
xor
push
mov
loopne
dec
in
fadds
jbe
mov
mov
insb
cmc
add
sub
xor
mov
pop
xor
fmul
jns
movsl
int3
je
pusha
jae
or
add
imul
lods
push
xchg
in
pop
out
ret
and
arpl
lahf
lds
imul
mov
jge
push
add
int3
hlt
dec
bound
popa
sbb
inc
xchg
ret
mov
inc
mov
mov
and
cwtl
in
loopne
xchg
pop
stos
fld
jbe
or
push
arpl
mov
test
arpl
or
call
add
frstor
mov
loop
dec
push
mov
adc
inc
test
mov
jmp
mov
arpl
mov
stos
gs
shrb
lods
addr16
sbb
or
and
jge
enter
xlat
ret
mov
int
fldcw
hlt
or
ja
adc
loopne
test
mov
push
push
mov
lods
or
cltd
push
hlt
jecxz
jg
mov
out
mov
or
movsb
ljmp
idivb
adc
add
int
pusha
mov
xor
das
xchg
and
je
inc
cmpsb
test
scas
xchg
rorb
or
mov
outsb
pop
js
inc
rolb
cmc
jmp
xchg
mov
jo
fdivrs
pop
jp
add
xchg
stos
push
insb
jle
mov
pop
shll
loope
push
test
mov
lea
or
inc
mov
cwtl
cltd
sbb
or
push
int
sub
daa
sti
in
mov
adc
fsubrs
pminsw
sub
mov
movsb
push
mov
mov
cmp
loopne
aad
ret
pushf
add
in
push
je
mov
inc
jge
popa
loop
pop
out
in
lret
fs
push
out
test
lcall
adc
xor
cwtl
out
sbb
jbe
hlt
mov
pop
call
inc
inc
int
out
inc
mov
aas
addr16
push
outsl
into
add
mov
cmovbe
iret
loope
mov
stos
pop
push
insl
addl
push
push
push
popf
adc
in
add
inc
into
hlt
sub
imul
lock
fistl
cmp
inc
mov
fsubrs
xor
pop
mov
xor
in
rcr
fs
dec
jecxz
ljmp
and
loope
pushf
outsl
adc
daa
xchg
jmp
push
ja
frstor
sbb
sub
mov
or
in
movsl
divl
or
mov
xor
xlat
loope
jo
leave
ljmp
pop
or
sub
sarl
idivb
js
jl
jne
mov
pop
mov
mov
sti
in
rorl
cwtl
xchg
hlt
mov
jl
dec
loope
or
ficoms
mov
arpl
mov
mov
xor
pusha
jmp
sbb
mov
xchg
popa
test
fwait
adc
inc
mov
out
and
stos
int3
inc
mov
mov
outsl
pusha
lret
loopne
in
in
ljmp
stos
xor
inc
inc
mov
xchg
shrl
pusha
dec
outsl
dec
jmp
test
mov
inc
add
popf
jmp
or
pushf
scas
sub
cmpsl
jmp
roll
sub
jl
subb
dec
hlt
inc
or
pop
dec
js
add
test
pop
shrb
xchg
shrb
cwtl
mov
jae
jge
push
imul
fsubrp
inc
lahf
rcrb
mul
call
in
pop
add
mul
pop
mov
addl
in
xor
push
int3
and
push
js
fdiv
aam
arpl
inc
xchg
sub
xor
aaa
add
fbld
and
cs
sbb
adc
test
lret
cmp
jmp
inc
xchg
test
inc
fidivl
jb
int3
add
insb
sbb
in
dec
mov
pop
sbb
lds
jge
inc
subl
fpatan
test
ret
dec
inc
arpl
lcall
arpl
movsl
aad
inc
loope
cwtl
das
mov
loope
pop
mov
cmp
inc
push
pop
dec
push
xchg
mov
scas
cs
popa
jns
int
in
popf
jne
jo
fists
jnp
inc
push
and
inc
dec
xchg
sbb
aas
idivl
sub
cmp
loope
aad
pop
mov
and
addr16
shr
loopne
int3
jge
push
aam
fldl
nop
cwtl
in
je
dec
inc
mov
xor
pushf
sbb
outsl
leave
fistl
sub
pop
or
imul
pusha
cli
popa
dec
mov
mov
pop
jl
rcrl
inc
push
sub
outsb
js
outsb
cmpsl
mov
enter
add
push
push
and
in
orl
mov
push
stos
inc
fs
aaa
mov
movsl
pusha
ret
and
or
hlt
push
dec
cmpsl
inc
out
mov
sub
sub
mov
cli
insb
lods
pop
std
jb
stos
out
lods
inc
sarb
out
xchg
sub
scas
inc
xchg
mov
js
or
mov
ljmp
or
jb
adc
add
out
push
mov
shl
inc
test
push
pop
mov
xchg
incl
or
inc
sti
mov
iret
push
push
and
imul
push
lods
xor
add
call
mov
out
je
xchg
mov
repz
and
idiv
and
mov
stos
aas
popa
jb
pop
rorl
lret
cmpsl
sub
in
js
mov
inc
mov
lret
outsb
push
lock
out
mov
inc
fisubrl
arpl
xlat
mov
daa
fisubrl
jge
xor
data16
andb
fcoms
cmpsl
lcall
cmpsl
or
mov
dec
cs
stos
add
clc
decb
mov
inc
je
dec
arpl
mov
pop
inc
ret
dec
mov
or
pusha
and
lds
and
adc
cld
pop
cwtl
out
dec
pop
pop
ljmp
sub
push
mov
jecxz
ret
mov
jbe
movsb
incb
cmpsb
popf
push
out
cmp
arpl
sar
je
xor
loopne
dec
addr16
inc
sete
lcall
in
cmp
lods
daa
stos
cltd
add
sub
mov
lds
shlb
jge
push
loope
xchg
push
fsubs
lock
adc
add
sbb
cmpsl
dec
fsts
mov
mov
scas
or
jne
test
pushf
hlt
sbb
js
dec
out
jne
sub
es
xor
add
dec
inc
cwtl
and
loop
imul
sbb
push
popa
cmc
test
popl
pop
pop
cld
dec
cltd
ljmp
lret
into
push
fcoml
loopne
movsl
mov
sbb
cld
int
push
pop
ror
lret
sti
mov
in
adcl
mov
mov
popa
fildll
sub
popa
jae
cli
inc
cwtl
mov
push
lods
cwtl
mov
inc
adc
es
in
xchg
and
movsb
lods
xchg
out
test
mov
pop
cmp
mov
loop
adc
pop
push
js
cmp
cmp
fcompl
bound
mov
dec
mov
je
mov
push
cmpsl
ret
aaa
test
cmp
in
cwtl
push
bound
jge
xchg
sbb
jle
stos
imul
lods
or
jns
bnd
lcall
mov
mov
bound
clc
or
sub
jb
hlt
stos
test
mov
xchg
cli
imul
add
in
icebp
in
cmpsl
lret
cmp
mov
pop
lret
shr
fadds
iret
inc
clc
in
or
ja
mov
orb
mov
and
subl
je
push
lock
sbb
push
mov
popf
stos
inc
or
add
sbb
pop
mov
dec
adc
loope
dec
push
ret
or
adc
adc
repz
xchg
lock
inc
mov
call
lods
popa
xchg
inc
rolb
loopne
sti
add
scas
lods
inc
push
das
movsl
cmp
jecxz
xor
mov
mov
cmpsb
dec
xchg
test
push
mov
pop
jmp
push
sub
cmp
loopne
and
inc
lea
call
inc
pusha
xchg
mov
pop
ljmp
stos
mov
cli
mov
add
leave
pop
cld
cmp
push
outsb
inc
subl
cld
fsubrl
jp
sbb
in
sub
aad
test
pop
pop
pop
mov
sahf
sbbl
dec
test
loope
int
imul
lods
cmpxchg
add
cmp
xchg
add
or
jae
fwait
in
rclb
pop
mov
sub
sbb
test
test
pop
xorb
inc
xchg
dec
mov
in
sbb
js
push
xor
sub
push
and
sbbl
sub
xchg
test
pop
cli
sbb
push
cmpsb
mov
int3
sbb
shl
rcl
ljmp
pushf
sbb
mov
push
and
dec
popf
testl
mov
xorb
mov
or
out
popa
repz
cmpsb
pop
shl
push
lods
or
popa
inc
dec
mov
das
mov
in
ret
negl
adc
jo
jo
cmp
loopne
aas
sbb
inc
push
addr16
xchg
and
lock
je
adc
fiadds
jl
lret
pop
in
add
adc
pop
sbb
test
imul
ret
push
int3
stos
cs
loope
sar
nop
cltd
cmpsb
jp
dec
xchg
std
ror
nop
or
rcl
popa
int
cltd
cmpsb
and
xchg
xor
sbb
xchg
in
push
mov
pop
dec
push
lret
jne
pushf
cltd
test
or
adc
fcmovbe
cmc
mov
dec
jns
push
fcomps
int3
mov
ja
mov
xchg
mov
ja
dec
sub
push
nop
jp
pop
int
aam
pop
and
sahf
lods
aad
mov
push
push
and
sbb
pop
sbb
adc
sub
push
jl
ljmp
dec
sub
xor
lock
shll
pusha
mov
dec
pop
decl
js
jo
inc
std
add
sub
negb
xchg
mov
push
arpl
rcrb
sub
pop
mov
jle
inc
mov
jecxz
inc
sti
ss
xchg
push
or
mov
pop
jo
ret
insb
mov
das
xchg
dec
dec
pop
sub
add
jnp
shr
popf
pop
xchg
loopne
push
test
in
dec
jg
jl
mov
call
outsb
fldt
inc
ds
mov
fstps
cltd
fs
dec
lds
lcall
arpl
int3
inc
mov
mov
inc
nop
pop
adc
shlb
sub
mov
inc
jmp
and
data16
lret
xor
dec
andl
scas
fsubrs
out
adc
pop
jmp
push
pop
hlt
lods
ljmp
stc
fninit
aaa
insb
fbstp
jnp,pn
sub
scas
inc
jg
push
shll
out
adc
shll
loopne
xor
xchg
in
push
jge
jo
sahf
scas
fildl
sbb
add
inc
xchg
xor
jnp
movsb
pop
dec
pusha
stc
pop
jg
mov
pop
out
adc
inc
mov
test
mov
xchg
adc
mov
mov
ljmp
leave
into
pop
fstps
outsb
pop
add
xor
sub
and
xor
inc
dec
inc
and
lock
pusha
mov
arpl
sub
jo
arpl
loop
les
sbb
in
adc
ss
add
es
int3
dec
aad
sar
jo
dec
push
inc
jl
jo
sarb
cmpsb
stos
mov
enter
sbb
add
mov
cli
cli
call
clc
or
in
subb
inc
mov
mov
loop
lds
scas
ror
aaa
das
test
sbb
or
xchg
push
jge
cli
fdivl
pushf
out
pop
lcall
jo
and
bound
je
adc
aas
loop
pop
adc
adc
outsl
flds
enter
inc
ljmp
incl
shlb
ret
and
dec
fldenv
cs
xchg
pushf
pop
subb
out
jbe
lahf
or
xorb
mov
adc
push
pop
xor
add
mov
jo
push
cmp
jge
mov
dec
pop
jecxz
pop
mov
xchg
xchg
mov
pushf
inc
dec
cmpsb
pusha
adc
cli
pop
mov
xor
and
repnz
movsl
and
test
dec
adcl
mov
pop
mov
sbb
mov
jb
stos
xchg
shrl
das
jg
pop
xor
jae
add
push
mov
or
mov
je
and
test
arpl
repnz
fcomps
mull
adc
add
cmp
push
nop
fstps
cwtl
test
pop
push
pop
arpl
call
pushf
imul
push
push
shrl
dec
or
push
and
fwait
cmp
mov
dec
imul
push
adc
cli
pop
fs
and
je
jg
jecxz
cmpsb
clc
and
subl
push
pushf
xlat
adc
aad
xor
sbb
lods
and
test
movsb
fildl
loope
push
xor
xor
clc
sub
and
fisubs
cmovs
xlat
adc
es
adc
mov
adc
push
clc
fisttpll
cmp
adc
rcrb
std
sub
in
push
pop
movaps
pop
int
cmpsb
or
popf
outsl
fisttpl
push
jle
out
fdivs
add
test
in
xchg
fldcw
sarb
in
sbb
mov
xor
mov
test
lret
inc
loopne
pop
xor
insl
je
mov
pusha
popl
lret
ljmp
add
fiaddl
mov
sbb
or
inc
sbb
mov
cli
and
mov
xor
or
test
fs
cli
jns
dec
in
nop
mov
sub
dec
bound
push
enter
xor
cmp
ds
pop
shlb
inc
stos
fsubp
pushf
adc
adc
push
or
movq
dec
xchg
jno
xchg
stos
dec
sub
inc
lret
adc
mov
mov
cmc
or
cmc
jmp
stos
sub
pop
mov
jmp
inc
lcall
or
jo
int3
shrb
xchg
push
rcrl
repz
adc
movsb
mov
pusha
mov
add
mov
mov
dec
scas
popa
inc
aas
mov
clc
mov
insl
inc
sbb
mov
imul
adc
in
lea
inc
shlb
and
mov
inc
stos
clc
icebp
loope
popf
xor
daa
int
out
stos
xchg
mov
imul
stos
enter
adc
inc
les
popa
or
add
push
inc
shlb
and
mov
int
test
scas
data16
push
xchg
imul
ss
testl
mov
jns
push
mov
xchg
pusha
lea
iret
xor
mov
fsub
call
ds
mov
mov
das
enter
test
loopne
sbb
out
mov
cwtl
outsl
mov
aas
xchg
cs
test
mov
pop
jns
cltd
lcall
push
push
mov
fs
dec
sub
cwtl
xlat
ror
mov
jp
xorb
sti
loopne
and
inc
das
imul
shlb
adc
mov
add
jnp
push
dec
inc
mov
xor
mov
pop
adc
add
mov
ljmp
jl
pop
xchg
pop
jbe
sahf
mov
fs
mov
cmp
test
and
pop
mov
fcom
sbb
and
or
sbb
inc
sbb
mov
movsb
jae
test
add
imul
lea
data16
test
xchg
ljmp
out
sub
dec
lock
rclb
xchg
jl
push
and
cltd
cwtl
iret
roll
push
dec
out
mov
inc
push
in
cmp
imul
xorb
add
sbb
rcrb
cltd
mov
cmpsl
adc
sub
pop
adc
mov
ret
dec
mov
jae
push
pop
xchg
test
fdivrl
jp
stos
flds
jb
pop
pop
nop
add
call
mov
fdivrs
dec
rorb
add
mov
fucomip
cli
pop
push
adc
adc
mov
xchg
int
xchg
int3
cli
lcall
sub
mov
test
lock
push
adc
outsl
mov
scas
inc
push
sbb
xchg
push
jo
and
cmp
test
ljmp
dec
add
iret
call
das
mov
rcll
scas
inc
cvtpi2ps
jns
pop
and
addr16
fisubs
fiadds
mov
mov
add
outsl
sub
add
sbb
enter
ds
or
std
dec
pop
push
add
movq
popl
pop
sub
inc
mov
cld
mov
pop
xchg
mov
mov
test
inc
js
and
xchg
test
cmpsl
addr16
inc
mov
cmp
cmpsb
mov
xchg
fidivs
mov
jp
adc
out
xchg
arpl
jl
sub
lods
out
mov
int
add
sbb
arpl
mov
lcall
pop
mov
push
and
mulb
mov
ljmp
test
dec
loopne
lret
mov
sub
icebp
stc
inc
lahf
ljmp
fld
rorl
jbe
xlat
mov
test
ss
mov
push
mov
inc
sar
subb
lock
mov
scas
into
fs
and
push
fcom
insl
in
out
pop
test
or
cltd
pop
lcall
inc
aaa
fcomps
insb
aam
lea
jns
adc
pop
mov
cld
in
in
adc
cwtl
loop
ds
sarb
cmp
jle
xor
dec
xchg
sti
adc
movb
test
jp
test
pop
inc
test
stos
pushf
pusha
lahf
lcall
jecxz
sbb
popa
fstps
cwtl
movsb
shlb
inc
cli
adc
inc
jmp
push
cmpsb
sbb
call
adc
dec
jl
loope
fisubrs
in
nop
mov
inc
insl
adc
push
outsb
push
out
lcall
insb
cmp
cmpsw
sarb
loope
xlat
pop
inc
or
test
js
lods
mov
jg
pop
stos
adc
and
mov
adc
cmpsb
stc
jo
ljmp
dec
mov
fldcw
add
pop
sub
lea
movsl
sbb
mov
xchg
stc
testb
jle
testb
movsb
rclb
fidivl
dec
insb
jecxz
push
xchg
call
sbb
hlt
dec
sub
lret
inc
cli
xor
sbbl
xchg
fcomps
dec
mov
shrb
mov
dec
or
lahf
and
repz
insl
push
cwtl
outsb
sbb
xchg
jbe
fucom
sbb
rorl
adc
pop
loopne
push
cmpsb
xor
sbb
mov
pop
fdivrp
mov
mov
push
mov
fistpl
pop
lcall
cmp
mov
push
clc
cmpsl
inc
xchg
pushf
mov
cmpsb
stos
dec
pop
jecxz
ret
mov
jg
mov
fmull
push
data16
lods
std
stc
cmp
arpl
sub
and
cs
push
fs
jmp
pop
jno
fldt
test
inc
mov
mov
cmp
pop
dec
test
shll
sub
add
or
cs
lea
pushf
cli
sub
mov
dec
inc
leave
pop
adc
insl
mov
rcrb
ret
cmc
xchg
pop
mov
insb
add
pop
les
push
repz
repnz
jb
push
jmp
insb
mov
jecxz
scas
pop
lds
enter
dec
dec
mov
out
ja
sti
ljmp
mov
jmp
push
pop
xchg
fisubrl
pop
jl
inc
adc
push
aad
and
pop
add
xchg
nop
lods
outsl
push
jecxz
dec
adcl
je
cmpb
movsl
dec
jl
scas
rcpps
loopne
roll
mov
shrl
rclb
rclb
and
xchg
loope
pop
jo
shrb
add
in
fwait
inc
xor
pop
cmp
stos
xor
inc
cli
xlat
mov
jns
pop
and
mov
test
stos
cmp
ficomps
int3
mov
cmp
push
in
xchg
cld
cmpsb
or
out
pushf
in
lock
js
sbb
xlat
cmpsb
mov
xor
or
dec
push
cmc
cmp
icebp
push
out
push
jo
in
hlt
or
outsb
adc
adc
sbb
add
push
mov
in
cmpsb
dec
push
pushf
inc
scas
icebp
pop
adc
aad
ret
fistpll
and
cs
push
adc
pop
add
mov
insl
lock
out
mov
xchg
clc
or
pop
cmc
jmp
movsb
sub
push
iret
sbb
inc
hlt
les
mov
add
or
fs
xchg
inc
sahf
sbb
icebp
pusha
push
inc
inc
and
test
mov
mov
jg
call
ret
mov
lods
mov
fidivrl
inc
lods
or
call
lret
jo
adc
insl
mov
dec
sub
insb
js
jbe
rcl
jmp
neg
mov
test
push
stos
pop
dec
fidivl
pushf
insl
pop
lods
push
pop
das
xor
enter
mov
xchg
cmp
jge
jae
loop
imul
test
popf
repnz
push
arpl
std
mov
adc
inc
mov
lret
adc
shll
pusha
and
inc
sub
inc
inc
lock
push
fnstcw
and
cld
jg
jl
xchg
loope
xchg
out
sub
or
pushf
and
fisubl
jmp
pushf
inc
sub
loopew
xor
fdivrl
and
mov
lret
cmpsl
int
mov
ret
in
call
lea
sbb
adc
push
les
fdivs
scas
pop
add
leave
dec
pop
sarl
sbb
and
in
jbe
mov
mov
adc
loop
repz
das
push
aaa
jmp
and
mov
mov
fsubrl
out
loopne
push
int
push
or
inc
adc
pop
leave
push
clc
xchg
sbb
and
lds
cld
shl
popa
mov
jp
cmp
shrb
jecxz
pop
call
in
movsb
jp
lahf
or
fbld
stos
popf
jmp
inc
ljmp
push
push
push
imul
inc
stc
jg
cmp
push
mov
stos
stc
xchg
filds
mov
mov
cmp
xor
xchg
push
xor
fistl
dec
popa
inc
pop
enter
and
lods
ret
sbb
pusha
pop
arpl
add
xlat
ret
insb
jns
ds
int3
dec
lret
add
repz
stc
xchg
icebp
xorb
cmp
lods
shlb
out
loopne
mov
rclb
testl
loopne
sbb
xchg
fs
adc
pop
mov
into
push
push
fstl
cmpsb
test
shrb
mov
shl
dec
inc
xchg
pop
xor
out
repz
sti
cmc
scas
lds
and
xor
push
loope
push
std
jge
pop
add
lock
cmpsl
imul
jns
sub
stos
pop
jecxz
mov
cmpsl
jge
sbb
xchg
movsl
xchg
inc
sub
dec
adc
mov
push
sti
rolb
icebp
push
stos
fisubrl
je
jmp
pop
sbb
dec
scas
out
add
push
test
fsubrl
pop
xchg
je
js
sub
imul
cwtl
dec
push
dec
jmp
push
or
jle
imul
and
clc
in
pop
mov
js
shrb
push
xchg
aas
jp
icebp
imul
shrb
push
ffreep
or
mov
aam
fsubr
dec
inc
jge
popa
dec
pop
out
popa
push
mov
sub
insb
lods
scas
cs
add
mov
das
enter
fstps
arpl
xchg
pusha
lods
or
fsts
sub
lret
push
sub
cwtl
out
lret
stc
sbb
aad
lret
push
sub
out
jb
xlat
insl
mov
dec
out
ret
mov
imul
in
cmp
lods
fldenv
stos
mov
faddl
xchg
push
cmpsl
in
cmp
inc
js
int3
pop
dec
push
adc
jecxz
movsb
pop
dec
data16
sahf
pushf
sbb
pusha
rcrb
and
inc
iret
dec
sbb
inc
lods
enter
scas
cmp
mov
mov
pop
mov
icebp
repnz
stc
add
mov
xor
cmpsb
je
jns
call
sub
add
out
cmpsb
jg
fildll
loopne
cmpsl
push
xchg
mov
lods
adc
popa
jno,pt
loope
or
push
push
mov
or
jecxz
mov
jp
sub
or
cwtl
mov
and
decb
dec
dec
cs
adcb
in
test
dec
jp
mov
mov
dec
xchg
jbe
jl
mov
sbb
ljmp
pop
mov
inc
pushf
dec
imull
insb
inc
xorl
mov
or
xor
insb
hlt
push
enter
pusha
sarl
rcl
imul
cmp
iret
ss
nop
mov
outsb
push
mov
pop
dec
inc
daa
pop
dec
js
pop
lods
ljmp
dec
xor
sub
call
sub
inc
imul
adcl
ficoml
mov
and
cmp
call
mov
and
fsubs
repz
shll
inc
bound
dec
pop
shr
mov
aad
pop
jo
push
sbb
fdivs
xchg
arpl
daa
add
shl
out
popa
pop
xchg
xchg
pop
mov
sahf
stc
sub
js
mov
fbstp
or
jbe
movsb
repz
fsubl
ret
cmp
movsb
mov
popa
jle
sub
mov
mov
movsl
int
cs
push
push
sub
pop
mov
pop
jns
dec
mov
mov
cld
scas
insb
pop
rorb
into
dec
iret
pop
mov
add
mov
sbb
stos
xor
cmp
mov
or
in
mov
adc
xchg
inc
imul
add
inc
incl
cld
stos
clc
add
jb
jmp
inc
test
xor
sarb
pop
dec
fbstp
insb
or
scas
cli
stos
cmc
cmp
fisttpll
insl
cmp
pop
xor
insb
lret
pusha
mov
mov
mov
mov
shrb
loopne
in
cwtl
in
shlb
fldenv
sub
inc
cli
test
out
fs
or
inc
ficomps
mov
dec
lods
dec
push
addr16
test
mov
aad
aam
jmp
and
mov
jg
pop
pop
dec
incl
addr16
bound
dec
inc
fsub
jle
jg
inc
mov
shrl
cmpsb
js
mov
pop
jno
fbstp
xchg
movsb
lock
xlat
adc
adcb
sbb
outsb
mov
call
bound
fiadds
pop
fs
mov
jae
adc
or
cs
xchg
xor
loopne
push
mov
lret
jmp
ret
lods
mov
imul
inc
mov
jl
add
jae
ss
popa
jno
or
jge
dec
inc
mov
aad
loopne
mov
and
test
push
xchg
or
mov
xor
jp
add
aad
bound
call
test
jle
jmp
aam
xchg
sbb
push
xchg
js
faddl
sub
scas
arpl
jo
sbb
jg
xchg
sub
xchg
sbb
xchg
xor
lock
pusha
mov
hlt
sub
dec
orl
xchg
sbb
das
mov
loop
pop
ljmp
mov
out
add
stos
call
aam
cmp
push
mov
and
ljmp
mov
ret
inc
loopne
mov
sbb
cltd
pop
imul
push
dec
and
cmc
fbld
and
in
or
nopl
popf
mov
xchg
test
pop
ss
or
and
xchg
dec
mov
inc
lock
pusha
xchg
push
out
lahf
pop
xchg
mov
dec
call
push
divb
and
int
adc
testl
call
mov
gs
xchg
test
inc
das
and
scas
inc
sarb
xchg
and
adc
cmp
inc
sub
sbb
ficomps
pop
inc
push
push
xor
test
jmp
fwait
pop
fsubs
xchg
inc
jnp
out
xchg
dec
cs
incl
xor
les
lret
cmp
inc
pop
or
and
sbb
adc
xlat
fldenv
pop
lods
faddp
mov
or
dec
gs
into
cltd
add
push
loope
rcrb
mov
fistps
inc
dec
fmul
inc
inc
cli
xor
incb
inc
xor
jl
js
fs
push
insl
pop
push
xor
js
mov
ds
mov
pop
jp
push
ret
dec
push
pop
mov
mov
sbb
sub
xlat
mov
mov
dec
sub
shlb
cmpsb
pop
inc
mov
in
xchg
push
scas
inc
jg
test
mov
je
jae
xor
fnsave
outsb
push
add
out
imull
test
mov
adc
inc
cltd
aad
jb
xchg
adcb
and
aaa
call
jecxz
fsubs
xchg
pusha
decb
lret
fildl
mov
inc
pop
test
push
xchg
in
cmpsb
sbb
xchg
mov
fisttpll
cmpb
std
les
cmp
mov
xchg
das
sahf
dec
inc
insl
sub
mov
jb
jnp
push
arpl
pop
lcall
inc
dec
stos
inc
scas
dec
sbb
jmp
mov
dec
cli
or
jp
test
ljmp
inc
inc
test
push
jl
inc
and
push
jmp
inc
add
bound
push
and
sbb
mov
stos
dec
adc
cld
shlb
sub
jl
pop
notb
push
adc
call
daa
push
sbb
xchg
test
test
lods
out
jp
cmp
jle
pop
sbb
or
mov
adc
cmp
jg
or
push
and
aam
add
sahf
mov
lcall
jmp
add
aad
cmc
insl
cld
adc
or
decl
add
xchg
pop
sbb
jns
stc
hlt
sarl
int3
sbb
call
loope
cmp
mov
rcr
mov
pop
push
mov
cmc
scas
popf
lods
pop
adc
cmc
scas
add
push
sbbb
gs
loope
rcrb
hlt
adc
sbb
sub
cmpsl
inc
popa
lea
mov
outsl
jge
mov
cmpl
push
aad
dec
fmull
outsb
subb
cmp
lcall
fadds
hlt
or
dec
movsl
add
adc
xchg
fs
mov
fwait
addb
cmp
inc
mov
sub
xchg
shlb
pop
icebp
jge
push
loope
push
cli
mov
adcb
push
outsl
mov
or
out
mov
in
les
xor
mov
cld
sbbl
adc
das
test
clc
out
jne
jb
sbb
imul
pop
mov
loop
out
push
and
jp
or
imul
dec
jnp
flds
cmpsl
es
fwait
addb
add
jecxz
push
inc
or
inc
in
out
mov
out
arpl
xor
test
rcll
in
fstps
insb
std
lds
cmp
mov
jne
psubusb
outsl
lods
imul
push
mov
pop
add
dec
sbb
jbe
adc
movsb
aas
push
cld
fwait
add
jbe
pop
sbb
pop
lock
xchg
xor
mov
enter
jecxz
shlb
mov
std
cmpsl
push
lock
mov
push
cmpsl
push
jo
aad
or
cmpsb
push
inc
push
stos
adc
xchg
sbb
pop
adc
pop
push
xchg
inc
insb
pushf
aaa
mov
mov
je
mov
jge
inc
adc
pushf
jno
inc
xchg
cmp
std
fisubrs
sub
ljmp
scas
and
ljmp
andb
sub
fwait
push
dec
arpl
xor
mov
or
cmc
test
test
jb
push
clc
jae
xchg
call
push
ja
add
or
jge
inc
jne
neg
mov
push
lret
pop
pop
inc
push
ficompl
ja
ljmp
adc
inc
ficompl
and
je
and
push
xor
adc
popa
mov
sete
fsubl
lcall
and
pop
inc
push
ja
pop
xchg
jmp
fwait
mov
push
gs
aad
ljmp
and
test
test
aas
and
je
clc
mov
mov
sbb
push
mov
addr16
cmp
aad
in
adc
cmp
lods
popa
stos
inc
add
xchg
lret
sub
fstpl
push
leave
mov
insb
jg
aad
loop
arpl
std
iret
mov
cmpsb
mov
cmpsl
imul
inc
movsb
scas
cmc
js
addr16
or
imul
popf
dec
cltd
push
and
jb
xchg
fs
inc
ljmp
lahf
jmp
inc
or
cmpsb
imul
push
mov
sub
jecxz
lods
jno
das
cmpsb
inc
pushf
jno
push
imul
or
sub
sbb
jae
inc
js
hlt
inc
adc
push
mov
dec
addr16
fiadds
lret
mov
loope
aad
call
sti
fldcw
notl
arpl
pop
pop
popa
aam
inc
pop
mov
gs
jl
inc
cwtl
fs
jo
in
fstpl
xor
adc
jne
pop
sub
or
pop
jns
xor
cmc
inc
inc
inc
incb
sbb
or
xchg
xor
push
add
sbb
test
add
daa
push
lods
or
sbb
and
in
loope
out
mov
lods
cmp
ljmp
insb
mov
je
add
mov
pop
mov
or
icebp
mov
pop
movsb
sub
cmp
outsl
andb
sahf
mov
mov
push
cli
divb
aad
pop
inc
sti
mov
push
inc
or
scas
lea
enter
fidivrl
jg
mov
mov
mov
imul
daa
pop
mov
cs
outsb
les
clc
leave
loopne
adc
js
add
popl
jg
cmp
hlt
push
outsl
out
mov
push
ja
xor
jecxz
mov
xchg
mov
cwtl
lcall
loope
lock
imul
pop
add
adc
pusha
popa
pusha
hlt
stos
sub
jecxz
cmp
xor
outsl
imul
or
movsb
shr
adc
enter
cmpsb
or
jo
push
jns
inc
arpl
push
ljmp
xchg
push
push
xchg
dec
dec
pop
imul
or
stos
dec
push
pop
and
subb
pop
pop
call
outsl
adc
lcall
jge
xchg
into
nop
and
sub
dec
pop
inc
faddl
not
fildl
jbe
repz
xor
jp
cltd
lods
xor
inc
and
mov
das
ja
lods
mov
test
mov
scas
sbb
sub
aam
pop
sub
loop,pn
xor
popa
push
sub
outsl
stos
shl
loopne
jl
inc
test
pusha
ret
lahf
sub
into
dec
pop
in
fldl
enter
fucomp
ljmp
mov
fimull
jecxz
imul
call
mov
dec
call
je
and
outsb
and
cmp
xchg
nop
pop
push
push
jge
test
out
sbb
ss
mov
in
xchg
sub
pushf
ficoml
lock
ja
or
stos
mov
adc
cmp
push
jmp
inc
fistl
arpl
mov
adc
rcrl
sbb
int3
ds
cmpsb
cmp
cmc
lds
cld
test
notb
lea
iret
mov
movsl
inc
mov
stc
bnd
add
hlt
popa
push
popa
xor
enter
lret
adc
add
fnstcw
dec
gs
test
adc
out
push
sbb
sub
loopne
in
scas
pusha
popa
mov
jo
fisubrl
adc
ret
bt
mov
hlt
inc
dec
cltd
out
test
ds
xor
pop
out
push
inc
mov
pop
mulb
push
shl
int3
lcall
iret
cltd
out
out
jmp
mov
fs
stos
stos
scas
xchg
fwait
leave
adc
jle
add
or
dec
icebp
adc
xchg
ret
push
and
pop
jae
and
sub
xchg
incb
mov
ja
in
fwait
cmp
scas
jge
add
lret
xor
or
cmp
scas
movsb
fcompl
inc
rcll
ja
dec
push
and
es
mov
dec
cwtl
add
sub
jmp
dec
pop
out
cwtl
inc
mov
shll
push
ds
mov
jne
adc
repz
nop
gs
daa
add
int
adc
pop
faddp
nop
add
xchg
push
scas
push
jmp
fsubl
cmp
mov
dec
testb
adc
fs
arpl
cmp
push
push
inc
jl
popf
mov
lock
inc
mov
or
pop
sbbl
loopne
mulb
pop
or
lcall
cltd
mov
sbb
call
push
add
sub
cmp
sbb
call
aaa
mov
push
mov
xchg
add
inc
inc
out
xor
das
jmp
pop
mov
push
mov
push
in
jmp
rcl
outsl
mov
inc
js
jns
sti
popa
movb
nop
sub
inc
xchg
pusha
insb
js
or
pop
aad
dec
jmp
out
mov
cmp
xchg
gs
mov
and
push
xor
jns
and
ret
lret
push
pop
hlt
dec
popf
xchg
cwtl
aam
test
mov
cmc
mov
mov
stos
inc
add
xchg
insb
mov
pushw
inc
pop
cld
inc
xchg
and
pop
imul
test
add
jo
mov
int
scas
jg
inc
std
js
inc
les
ret
sub
jne
mov
pushf
jge
add
out
shlb
popa
popf
dec
inc
cwtl
mov
jg
xor
push
cmp
inc
lds
sub
popl
std
jns
es
cld
in
imul
inc
push
mov
lea
xchg
mov
cmpsl
gs
xchg
dec
addr16
mov
push
cmp
push
popf
jecxz
mov
js
inc
mov
pop
and
cmp
sbb
fistpl
arpl
inc
sahf
push
lcall
insb
pop
pop
jecxz
iret
cwtl
or
and
scas
push
sbb
cmp
call
jno
or
fmull
aam
insl
adc
inc
jp
cmp
pop
pop
sub
leave
pop
inc
gs
cld
pushf
mov
sahf
pop
loopne
cvttps2pi
fwait
mov
and
test
mov
pop
popa
adc
or
add
out
pop
sbb
bound
lock
rorb
fisttpll
shrb
pop
and
pop
jno
sbb
clc
xchg
or
or
jl
push
pusha
xor
pop
insb
fildl
adc
imul
fs
add
enter
pop
in
jl
adc
sub
sahf
cmpsl
pop
adc
aam
inc
js
xchg
mov
hlt
insb
dec
xor
pop
cld
xchg
int
lods
xchg
fcompl
inc
jl
push
lret
lods
pushf
in
mov
pop
cmp
lods
mov
jg
cmpsl
pop
dec
or
add
sbb
mov
pop
cmp
pop
out
xchg
icebp
pop
pop
cmc
xorl
adc
push
test
sti
andl
pop
out
add
jns
adc
mov
or
bound
mov
addr16
inc
stos
push
xor
fistps
call
loop
inc
xor
push
mov
bound
fcomip
into
xchg
jp
adc
push
pop
jl
sti
aas
jmp
or
imul
sbb
ds
int3
cwtl
dec
imul
repz
dec
xchg
pop
push
xor
xchg
mov
mov
cmp
sub
mov
xor
rolb
lock
adcb
pop
popa
test
mov
test
inc
fsubs
jo,pn
cmp
pop
pop
loopne
sub
fs
nop
xor
xchg
cmpsb
mov
mov
popa
mov
cli
insl
and
pop
aas
cmp
lds
pusha
rclb
lret
mov
lock
in
push
pop
popl
sbb
mov
mov
push
clc
mov
enter
movsl
pushf
cmp
pop
popa
mov
leave
adc
jmp
adc
sbb
into
dec
mov
movsl
lret
jns
mov
lret
popa
mov
icebp
mov
movsb
out
jle
mov
jns
jns
or
insl
out
icebp
mov
pop
js
push
mov
insb
add
fs
mov
sbb
shrb
inc
or
pop
inc
jns
cmpsb
mov
xchg
jbe
adc
push
fdivs
add
inc
jl
aam
rcl
in
lcall
or
jg
or
clc
pushaw
in
pop
dec
hlt
pusha
and
loop
iret
fcoms
mov
imul
mov
cmovo
push
subb
pop
sbb
shrb
lock
call
shrb
repz
out
lods
pop
jmp
pop
bound
int3
mov
outsb
pop
push
lock
or
add
xchg
push
xchg
bound
outsl
sahf
sets
js
shlb
aaa
fwait
lods
fstpl
mov
xor
mov
cmc
dec
pop
insb
int3
and
jo
jmp
mov
shl
and
jge
xor
sub
imul
test
xchg
or
jle
pop
pop
addr16
mov
pop
or
fists
das
jl
lcall
cld
cmp
add
jl
pusha
cmpsl
fdivl
fstpt
outsb
pushf
call
fcoml
jnp
adc
and
js
mov
enter
enter
pop
dec
xor
lock
pop
insb
jae
popf
in
adc
jle
sti
iret
inc
fidivrl
mov
lahf
cld
pop
cld
pushf
jge
sbb
mov
dec
in
js
mov
mov
enter
jno
je
pusha
outsl
ret
mov
jne
xchg
sbb
jo
mov
jl
sbb
repnz
pusha
push
mov
push
mov
lret
in
push
mov
cmp
cmp
mov
pop
int3
dec
test
aam
lcall
adc
popf
test
fs
pop
cmp
mov
insb
inc
cwtl
dec
xor
pop
inc
out
add
loopne
add
inc
inc
pop
xchg
jmp
negl
ss
in
call
movsl
stos
mov
pop
dec
jp
jo
jnp
xor
insb
pop
fisubs
test
sbb
test
ficomps
xor
test
and
bound
adc
cmp
add
push
and
jle
in
mov
stc
push
scas
test
out
or
popa
cmp
mov
bound
fwait
add
add
clc
or
cmpsb
lcall
cwtl
fs
sbbb
lods
push
outsl
pop
mov
pop
in
jl
enter
inc
cli
addr16
in
jg
pop
add
fs
jnp
mov
cld
mov
je
call
add
movsb
xor
pop
ja
shrb
in
clc
lods
testb
nop
aaa
mov
fdivrl
test
shlb
jmp
dec
mov
sbb
or
xor
and
movsb
iret
lcall
push
inc
xor
pop
pop
lahf
adc
mov
xor
stc
mov
insl
sbbb
clc
mov
in
jp
sbb
xor
pop
xlat
je
ss
push
mov
dec
mov
test
add
cmp
loopne
cmp
jnp
cmp
and
pop
mov
in
fisubl
mov
fisubrs
cmc
outsb
fadd
div
cmp
pop
pop
insb
mov
xor
arpl
push
fdivrs
mov
repnz
push
sbb
loop
inc
mov
pop
push
fdiv
or
je
mov
sbb
cld
arpl
in
adc
loope
imul
push
mov
inc
lcall
out
frndint
xchg
pushf
jo
gs
sbb
sub
and
adcl
xchg
pop
outsl
fimuls
pop
jb
adc
fsubr
and
mov
pushf
pusha
jmp
js
out
bound
cmp
lods
lcall
hlt
hlt
outsl
mov
aam
inc
jg
insb
je
sbb
nop
dec
and
add
lock
aas
or
add
js
jp
sbb
mov
lods
hlt
movb
inc
add
icebp
push
popf
push
pop
insb
cwtl
xchg
adc
jl
in
insb
sbb
loopew
movsb
adc
jge
test
gs
fidivl
mov
push
nop
and
cmp
xchg
pop
mov
ret
in
fstps
xchg
test
lock
nopl
push
test
jg
sbb
jp
out
mov
std
jae
ds
ficompl
cmp
or
mov
lcall
cwtl
and
scas
or
jbe
jns
outsb
mov
lods
shlb
int3
mov
sub
lods
pop
inc
enter
xchg
mull
jns
outsb
pop
std
mov
xorb
pop
mov
mov
int3
int
imul
inc
nop
push
pop
dec
push
inc
lret
mov
mov
mov
in
insl
sub
dec
movsl
push
loop
mov
jne
lods
movsb
and
add
pop
sub
in
lods
push
add
enter
xchg
lcall
mov
pop
mov
inc
js
cmp
popa
mov
jl
xor
jae
cmp
push
fnstenv
mov
mov
nop
fsubrs
xchg
lret
cmpl
ficompl
cli
sub
loop
cmp
jmp
jo
mov
xchg
scas
or
cwtl
add
out
fs
mov
testb
popa
xor
loopne
hlt
push
sarb
enter
push
clc
rclb
jbe
fstps
movsb
or
mov
pop
cld
pop
push
imul
sahf
movb
rcrl
rclb
mov
das
push
sub
push
xlat
adcb
loop
sub
je
das
flds
mov
movsb
push
push
pop
fld
fwait
or
fs
push
or
vpermi2ps
outsb
bound
pop
pusha
mov
sub
enter
mov
test
push
pop
xchg
dec
xchg
add
or
jl
cld
lods
pop
loopne
inc
or
push
sub
jl
or
sub
mov
xchg
in
push
leave
loop
xor
cmp
in
jle
push
clc
repnz
das
inc
imull
insb
nop
je
cmpsb
cmp
push
lcall
jge
stc
xlat
rcrb
call
jmp
or
adc
adc
push
sbb
push
lods
and
jae
and
jo
aas
adc
cmp
pop
stos
sub
pop
inc
cli
or
insb
sahf
add
mov
mov
mov
dec
cwtl
pop
fmuls
lods
pop
dec
mov
pusha
out
scas
push
divl
test
mov
or
cmpl
hlt
mov
ljmp
add
rcrl
insl
lock
pop
or
jl
sti
test
pusha
cltd
mov
mov
push
stc
adc
and
outsb
dec
mov
pop
cltd
mov
pusha
push
cmp
lea
enter
sbb
stos
dec
sub
jno
fsubrl
imulb
iret
int3
gs
add
lods
icebp
fs
and
and
fmul
push
mov
pop
jns
cmp
sub
popf
jns
inc
pop
test
jl
dec
sub
sbb
pusha
or
jb
fidivl
jl
jns
cwtl
fs
xchg
int
jns
imul
dec
ljmp
dec
fs
mov
jg
outsb
inc
cmpsb
test
dec
faddl
call
sbb
pop
mov
in
add
js
cmp
lods
jl
mov
sbb
popf
add
mov
rorb
dec
xor
dec
mov
js
push
or
movsb
add
insb
inc
sub
cld
xchg
cli
mov
xor
mov
fsubrs
jnp
sbb
fcompl
lods
into
lods
pop
or
aas
inc
xchg
mov
in
jo
call
inc
sbb
fs
cld
js
std
call
sbb
mov
mov
mov
test
jae
sub
cmpsb
pop
push
or
nop
insb
pushf
stos
sarb
inc
lods
lcall
pushf
dec
xchg
js
xlat
imul
fcoms
xchg
shll
stos
push
pop
loop
xor
or
pop
fcomi
or
push
mov
push
inc
mov
lods
dec
adc
das
sbb
fcoml
repz
mov
push
clc
pop
in
adc
sarb
loop
fcomp
adc
ja
push
adc
stos
dec
adc
lcall
jl
lock
imul
push
shll
jle
js
lock
lds
fcomps
mov
pusha
loopne
call
int
add
pop
pop
scas
lods
dec
dec
mov
fnstsw
sub
mov
aam
outsb
int3
mov
sbb
mov
mov
pop
mov
hlt
shl
sub
int3
cltd
adc
and
lods
push
or
dec
push
add
lds
sahf
sbb
push
outsb
orb
mov
add
push
into
pushf
add
jl
dec
jo
and
popf
jg
movsl
jnp
call
jle
push
push
xor
inc
sub
mov
movsl
lock
or
gs
jge
push
jle
push
mov
int3
inc
aas
mov
add
and
jge
fs
cmc
push
in
rorb
nop
mov
pop
cli
mov
je
pop
fbld
test
or
les
ja
pop
pop
xchg
insb
fnsave
rcrl
push
bound
mov
jns
ds
int3
or
push
lcall
fnstsw
imul
pop
repnz
decl
mov
jmp
mov
adc
adc
lods
clc
jl
sub
subb
loop
cmp
lock
nop
call
insb
ljmp
repz
orb
pop
or
jge
leave
mov
dec
stos
and
or
insb
adc
lcall
outsb
add
js
cld
fldt
cmp
push
cmp
test
fsubrl
push
add
pop
or
in
jae
add
push
shlb
jo
xor
xchg
pop
xchg
sbb
or
and
inc
test
mov
jl
add
insb
outsl
fsubrs
pusha
iret
mov
pop
cmp
mov
fs
jne
aaa
cmp
popf
add
cld
nop
imul
in
lret
movsb
lcall
mov
call
fistpll
sub
clc
jbe
pusha
pop
or
lret
mov
ljmp
cmpsb
hlt
dec
push
pusha
add
mov
fildll
pusha
icebp
cmp
outsl
scas
lods
jns
jle
cmpsl
sbb
inc
iret
cld
repz
insl
cwtl
adc
fldenv
stos
add
dec
bound
push
dec
sub
mov
jl
xor
sbb
and
outsl
int
mov
mov
push
outsl
mov
cmp
adc
pop
dec
stc
xor
in
xor
cmp
js
cmp
push
and
pop
bound
fdivp
mov
test
add
pop
and
dec
pop
push
rclb
sbb
test
lcall
sbb
cli
cwtl
rcrb
in
mov
stc
or
cs
pop
ret
shrl
mov
push
mov
mov
xchg
sbb
mov
and
add
movsb
or
push
leave
jmp
mov
or
pop
push
mov
push
lods
lcall
and
xor
add
pop
ror
lock
add
pop
lods
in
mov
fdiv
dec
pushf
adc
xchg
dec
lock
nop
rcll
popa
adc
cmc
outsb
cmp
pop
push
nopl
movsb
mov
inc
sub
stos
jno
pop
mov
arpl
insb
inc
lahf
imul
mov
cmp
pop
push
mov
xchg
cmpb
jge
pop
loop
insb
iret
cld
es
popf
shrb
pushf
movsb
call
xor
adc
lods
lock
add
inc
nop
mov
push
fsubrl
and
fs
or
js
mov
pop
repnz
dec
bound
push
fldt
int
adc
ljmp
insb
mov
cmp
inc
or
insb
sub
cmp
js
sbb
xchg
div
lods
inc
adc
pusha
je
sub
push
sub
icebp
pop
sbb
lock
dec
loope
mov
flds
sbb
xor
mov
pop
call
push
cld
enter
sub
mov
in
pusha
ret
ja
jl
movsb
push
dec
hlt
lock
and
inc
pop
dec
test
jo
cmpsb
pop
mov
loopne
add
jb
in
std
jp
xor
pop
mov
inc
lock
jo
cmp
pop
loopne
and
push
cwtl
xchg
dec
pop
pop
jle
and
cmp
pop
or
pop
sub
outsb
push
push
mov
pop
jge
xchg
or
popf
mov
hlt
pop
add
call
int3
popa
orb
mov
adc
int
fucomip
xchg
sub
cmp
jp
mov
and
adc
push
outsl
clc
inc
loopne
pop
pop
or
add
mov
cwtl
jo
push
mov
mov
jmp
cmpsb
mov
sbb
mov
ret
adc
cmp
fmuls
fsubrl
or
lods
cmpsb
mov
push
jne
xchg
punpcklbw
insl
cwtl
loope
loop
insl
test
mov
inc
fcomps
dec
and
mov
sub
or
sti
test
ja
mov
cmp
repnz
gs
fs
sbb
pop
out
clc
xchg
js
mov
jle
sbb
mov
imul
push
nop
loopne
lods
push
cld
pop
push
in
cmp
sub
cld
call
fdivr
xor
jg
loop
xor
lods
out
jo
sub
imul
mov
mov
sbb
fistpl
out
test
call
mov
pop
add
sbb
or
enter
and
cmpsl
or
push
inc
jns
pop
outsb
cmp
cmp
push
mov
popa
adc
dec
pop
inc
dec
lcall
js
jns
and
clc
dec
push
mov
pop
bound
add
int3
sub
mov
js
fnstsw
xor
lock
push
dec
cmpsl
fwait
or
cwtl
jle
jle
cwtl
pop
rorl
jne
push
dec
pop
sahf
sbb
jo
into
pop
inc
xor
sbb
rcl
call
rolb
pop
sub
adc
bound
pop
add
push
cmp
and
daa
mov
out
pop
out
sbb
mov
push
hlt
lahf
jo
jl
pop
xlat
sub
mov
int3
hlt
jne
push
or
imul
mov
mov
adc
into
hlt
and
add
cmpl
pop
push
jl
adc
rcr
push
sti
jge
addr16
mov
test
sub
ret
cli
les
cltd
inc
gs
xchg
loopne
nop
js
jns
je
loopne
int
dec
mov
lock
jns
ret
in
adc
push
fdivrs
insl
bound
les
add
cmp
je
push
push
xchg
sarb
lock
jp
arpl
faddp
jge
je
loopne
lods
dec
mov
adc
or
data16
clc
loop
lods
jns
jp
pop
dec
pushf
inc
mov
fs
or
sub
popa
xor
push
jo
jmp
pop
sbb
ss
lods
jg
xor
stc
insb
js,pt
or
add
call
sbb
clc
nop
and
fcoml
or
cwtl
xor
insl
nop
js
jo
add
adc
xchg
fcmovnb
pop
cmpsb
inc
in
jl
or
and
fwait
les
push
jl
mov
aas
pop
insl
shll
jle
pop
jmp
push
out
and
jns
pop
pop
and
jns
adc
sbb
sbb
push
cmp
jge
push
mov
call
into
loope
roll
pop
lock
dec
cwtl
out
and
addr16
or
fwait
pop
pop
lea
mov
inc
sbb
add
lods
mov
cld
dec
and
dec
mov
std
xchg
jbe
ret
push
bound
and
adc
dec
arpl
xchg
push
outsl
pop
shll
xor
and
cmc
xor
add
sub
sub
mov
mov
and
mov
test
mov
loopne
add
pop
fwait
nop
pop
icebp
push
pop
xor
aam
and
popa
cmp
outsb
cmp
cli
scas
xchg
mov
jae
fisttps
movsb
int
adc
mov
push
inc
xlat
push
sub
sbb
jo
pop
icebp
adc
push
pushf
mov
dec
xor
sbb
xchg
sbb
sbb
insl
mov
mov
pop
lcall
or
xchg
mov
mov
jl
push
test
dec
and
arpl
setp
pop
add
add
insb
push
xlat
cmovo
dec
enter
xchg
inc
pushf
int3
push
insb
mov
xor
je
stos
cld
call
jmp
pushf
sbb
sub
test
scas
sti
xchg
cmp
call
dec
mov
xchg
mov
popf
cmp
scas
push
loopne
mov
push
mov
jns
jb
inc
repz
icebp
dec
jns
insl
pop
add
dec
jno
cmp
cmpl
jp
leave
cld
push
ret
and
lods
xchg
shl
pop
pop
sub
jl
js
xor
mov
sub
sbb
mov
xchg
fcompl
cmp
pushf
mov
mov
es
pop
lods
aas
push
imul
cwtl
mov
test
outsb
js
dec
sahf
jbe
lret
xor
outsb
movsb
push
add
dec
in
jnp
daa
test
lcall
lods
xor
aam
jnp
mov
dec
insl
hlt
out
xchg
pop
mov
fwait
jo
jle
outsb
pop
sbb
movsb
jle
test
xor
pop
sbb
mov
xchg
in
push
mov
mov
mov
pop
sub
push
cmp
pop
sahf
addr16
imull
in
icebp
pop
pop
stos
into
cmp
or
mov
dec
scas
pop
mov
andb
mov
jne
sbbb
add
pop
in
push
mov
ja
inc
push
sub
and
or
pop
jp
or
pop
cmp
sar
pop
jnp
dec
gs
add
cmp
fs
addr16
mov
adc
inc
pop
fcomip
push
dec
pop
outsl
or
js
nop
out
inc
jns
mov
xor
and
push
fcomps
inc
pop
wrmsr
or
int3
arpl
inc
xchg
popa
cmc
loopne
mov
and
mov
xlat
adc
nop
adc
push
or
mov
push
fcompl
lds
push
stos
or
cld
jno
mov
push
push
jns
add
stc
ja
or
sbb
cmp
push
sub
idivb
fiadds
fiaddl
push
jl
or
pusha
fcompl
rolb
loope
pop
jnp
sub
pop
push
nop
roll
pop
cmp
stos
mov
pop
or
sar
jno
jmp
jno
dec
and
jl
dec
mov
inc
pop
test
adc
or
lods
jge
dec
mov
jl
lock
add
outsl
fidivl
mov
jl
xchg
mov
push
sbb
cwtl
shl
rolb
mov
push
and
mov
mov
push
mov
pop
dec
iret
test
jo
lahf
lock
dec
insb
pushf
dec
pop
inc
pop
mov
push
hlt
xchg
clc
jl
mov
mov
inc
push
cli
xchg
sub
mov
iret
inc
adc
mov
aam
pusha
add
jnp
scas
dec
cwtl
mov
js
test
insl
enter
cmp
xchg
xchg
xchg
lret
mov
lret
cwtl
ret
xlat
data16
pop
add
cmc
imul
rcll
out
pusha
mov
jno
sti
aam
popa
bound
cmp
push
jge
push
mov
add
fstpl
jmp
cmp
or
subl
sarb
out
dec
jle
pusha
jge
jns
dec
push
dec
cmp
pushf
pop
rolb
xchg
scas
je
insb
or
jp
pop
fisubrs
cmpsl
lcall
outsl
int3
adc
out
jge
inc
enter
jne
pop
sbb
ret
insb
pusha
lock
cmpsb
and
mov
imul
pop
mov
sub
cmp
ss
popf
jp
ljmp
cli
rcrl
lock
cwtl
xchg
std
in
mov
sbb
cli
or
fcomps
call
xchg
pop
and
xchg
sbb
mov
xchg
mov
lods
loopne
bound
ja
xabort
add
and
mov
mul
dec
lcall
out
pushf
outsl
and
lock
mov
test
pop
add
push
aad
lods
dec
shlb
pop
mov
push
insb
sbb
fwait
or
mov
iret
xchg
pop
js
mov
and
mov
bound
cmpsb
adc
out
mov
inc
pop
mov
or
mov
sbb
inc
or
jne
lea
push
pusha
cmp
pop
call
lret
mov
jns
pop
lods
loope
fmull
push
cwtl
mov
popa
cmp
lea
pop
sbb
mov
mov
insb
or
xor
movsb
bound
js
mov
outsb
loopne
sbb
insl
pop
or
cmp
call
and
sub
out
push
test
leave
addr16
push
imul
hlt
xor
pop
jb
in
push
fnstcw
fdivl
lret
hlt
arpl
sub
inc
push
int
addr16
cmp
aas
jmp
int3
hlt
je
ficomps
mov
mov
cmp
aad
pusha
xchg
or
cbtw
stc
push
mov
pusha
ja
mov
cwtl
ficompl
mov
mov
cmpb
sub
test
loopne
loop
fucomp
mov
imul
mov
mov
sti
mov
js
cltd
adc
pusha
cmp
mov
jb
mov
rcrb
fcoml
xor
pop
fnsave
xor
pushf
adc
mov
test
divl
fcmovnu
mov
shlb
inc
cmp
sbb
ja
mov
out
fmull
push
pop
fsubrs
or
sub
movsl
adc
pop
stos
cmp
test
loopne
cmpsb
pop
decl
js
lcall
and
popa
pushf
arpl
test
shr
insl
pop
nop
mov
sti
pop
stc
jl
nop
aam
out
lahf
jl
jl
push
cmp
pop
mov
pop
call
loopne
cmp
popa
pop
and
mov
fwait
mov
xchg
popa
sti
inc
int3
enter
rcrl
sub
cmp
lcall
fstl
dec
jg
jl
dec
lods
insl
popa
xorl
dec
mov
jns
push
cmp
adcb
cmc
das
dec
mov
adcb
mov
cli
sbbb
push
imull
enter
jl
cmp
xor
jno
push
nop
out
dec
or
push
push
pop
fstpl
adc
fidivrl
xchg
push
push
fisubs
mov
pop
cmp
lea
repz
dec
dec
push
out
pusha
lock
cmp
or
fwait
push
adc
jl
bound
sbb
push
sub
out
dec
push
cld
push
imul
insb
and
jl
pop
int
mov
xchg
cwtl
add
pop
loopne
mov
sub
push
stc
adc
sbb
cwtl
clc
je
mov
sbb
mov
push
pop
or
dec
mov
xorb
shll
or
inc
arpl
lock
jnp
aas
int3
movsl
cli
loopne
xor
insl
out
and
pop
jmp
mov
pop
push
pop
mov
inc
fcompl
mov
lods
pushf
mov
pop
mov
cwtl
fcmovu
std
push
adc
cwtl
jle
fists
inc
stos
push
mov
test
popa
popa
or
pushf
cmp
movsb
xchg
mov
add
mov
mov
aam
dec
fcoms
mov
cmp
add
scas
mov
pop
sti
adc
push
xor
cld
pop
jae
fdivrl
adc
arpl
jg
lock
push
pop
xor
fsubr
jp
mov
dec
je
adc
mov
xor
jg
cmp
sbb
fs
fwait
lods
pop
cmp
repz
std
push
rolb
pushf
aad
push
in
loopne
add
and
and
in
clc
cwtl
dec
call
xchg
sub
pushf
js
lea
bound
mov
ret
ja
mov
das
cmp
adc
pop
lcall
sub
fldenv
arpl
xchg
xor
aam
pushf
loope
out
les
and
lods
and
scas
jne
jp
mov
pop
mov
pop
mov
fdivrp
in
jb
std
push
jno
jle
mov
cmp
sub
subl
adc
sbb
jns
js
clc
sub
test
pop
or
mov
jle
fxch
push
int3
pop
adc
or
fxch
pop
mov
fcmovb
xor
xrelease
stc
pop
push
cmpsl
dec
shlb
push
pop
insb
pushf
pop
imul
hlt
clc
cmpl
and
ds
pop
adc
mov
hlt
xor
andl
subb
int3
pop
pushf
push
jo
cwtl
and
add
cmpb
sbb
adc
adc
in
dec
pop
or
je
aaa
push
dec
pop
call
mov
cmc
test
inc
inc
push
dec
mov
jo
mov
loopne
xor
bound
cmp
ret
inc
sbb
inc
jle
and
enter
mov
ret
push
inc
mov
xchg
nop
cmp
pop
and
pop
xor
into
lcall
or
push
fwait
pop
das
mov
stos
lods
in
adc
or
cmp
rcrb
cmp
pop
push
and
xchg
or
xchg
js
adc
or
mov
mov
cld
data16
jo
data16
adc
js
out
arpl
mov
jo
push
jle
dec
icebp
scas
js
imul
dec
test
les
popf
mov
test
pop
icebp
sub
ljmp
jmp
push
lock
test
rorb
rorl
mov
stc
ja
cmpl
ret
mov
add
sub
xchg
arpl
pop
icebp
not
adc
scas
ds
out
mov
ja
push
mov
fisubl
push
aaa
push
or
inc
push
daa
push
cmpsb
jbe
push
jle
mov
sbb
imul
cmp
scas
xchg
sbb
pusha
xor
pop
jnp,pn
mov
push
mov
mov
cmp
sbbb
sbb
sub
pop
jmp
pop
repz
popl
xchg
les
or
sub
xor
pusha
mov
inc
ret
pusha
jno
sub
stc
and
sbb
jl
jecxz
outsb
fcoml
cltd
arpl
in
fsubrl
repz
or
or
and
xchg
daa
jne
test
inc
fcompl
lret
ret
pusha
xchg
push
jnp
pop
jl
loope
cld
outsl
adc
lods
fisubrl
fdivrl
mov
leave
or
lods
mov
xchg
xchg
js
adc
xchg
adc
stos
gs
pop
mov
imul
in
fwait
xchg
dec
into
std
test
cmc
sbb
hlt
pushf
xchg
cmp
pop
jnp
push
outsl
pop
xchg
or
cmc
js
dec
xor
jle
insl
inc
mov
mov
in
pop
jae
sub
push
mov
add
loop
test
addr16
roll
insb
jl
add
nop
sub
and
in
push
jl
mov
add
ja
mov
xor
subb
mov
rcrb
dec
xor
into
hlt
sarb
scas
fisubl
mov
cmpsb
jp
pushf
pop
jmp
int
add
aam
popa
or
loopne
sbb
dec
cmc
cwtl
and
lcall
fisubl
loope
jo
push
cmpsb
pop
jns
mov
fiadds
in
ror
cmc
ficoml
cmp
dec
mov
dec
mov
insb
mov
rcrb
xchg
adc
fmul
outsl
push
and
adcb
lock
inc
aam
sbbl
push
arpl
xchg
cld
stos
sub
cs
jno
cmp
nop
outsb
test
and
call
jno
sub
push
mov
adcl
pop
push
pop
push
loopne
mov
pop
cmp
movsw
mov
test
adc
inc
imul
test
test
lret
test
jo
pop
movsb
scas
xchg
fs
fisubrs
pop
jp
mov
jo
adc
lret
dec
rorb
jns
pop
icebp
cmp
lret
and
insl
adc
in
jge
xor
pop
lock
js
or
add
sub
cmp
jnp
fcmove
mov
aam
test
mov
and
lcall
pop
insb
push
xchg
insb
jl
cmp
pop
mull
xlat
or
push
pop
js,pn
aam
test
jo
pop
movsb
add
clc
pop
imul
or
clc
and
jb
pop
outsb
or
push
xchg
jge
into
outsb
in
mov
cld
xchg
mov
icebp
cmp
xchg
pop
mov
imul
repz
jl
xchg
clc
or
jg
or
in
sti
add
js
add
cmpsl
dec
test
and
pop
lahf
repz
jnp
cwtl
mov
pop
pusha
rorb
cmp
cwtl
sbb
imul
mov
fnstsw
mov
adc
dec
push
xlat
subb
xchg
out
mov
stos
cmp
xchg
cmp
cmc
popf
and
mov
in
pop
je
andb
pop
nop
sarb
sub
pop
jbe
pushf
lods
pop
adc
xor
jno
pop
pop
jp
inc
addr16
sub
aad
sub
inc
nop
push
fstps
push
fsubrp
or
dec
in
pop
mov
test
les
push
sahf
cwtl
dec
in
test
pop
movsb
jl
pusha
nop
enter
jl
mov
aam
mov
sbb
enter
cmpsl
je
or
andb
mov
icebp
pop
loope
fcmovnu
xor
or
and
adc
fsubr
mov
out
jge
data16
scas
cmp
sti
fs
mov
sub
fcom
hlt
or
push
jno
cmp
test
imul
push
push
lea
je
dec
add
movsl
pop
in
push
divl
lods
xor
rorl
shll
jne
mov
pop
jnp
je
xchg
adc
imul
int
in
es
ret
std
pusha
int3
jo
out
mov
data16
mov
push
imul
lock
lods
int3
or
sbb
adc
mov
bound
or
fsubl
pop
add
push
pusha
mov
mov
and
pop
std
popa
xor
pop
popf
push
add
imul
enter
mov
loope
inc
ja
aaa
in
sbb
xor
sbb
hlt
push
mov
push
pusha
push
dec
ja
sbb
lret
nop
loope
mov
mov
or
sti
stos
test
jmp
inc
sbb
stos
lods
fstpl
insl
pusha
out
adc
das
jl
cld
enter
and
and
push
pop
push
mov
xchg
or
fs
movsb
je
pop
mov
pop
ret
dec
mov
jns
sub
pop
lock
and
xchg
inc
xor
dec
mov
push
aaa
popf
cmp
add
sbb
fmuls
inc
orb
sub
jg
loop
gs
pop
test
add
xchg
push
pop
ja
dec
inc
pop
outsb
sbb
fsubs
aas
jo
iret
pop
and
loopne
lds
fadd
adc
mov
pusha
test
pop
dec
lock
add
ror
mov
pop
cmp
pop
fldcw
scas
push
nop
jmp
sbb
or
inc
push
fs
xchg
pop
bound
imul
and
cmp
jo
mov
pop
dec
cmp
stos
or
mov
je
in
dec
pop
add
and
jns
xchg
sub
bound
insb
adc
xor
jle
imul
in
inc
icebp
push
nop
pushf
stc
movsb
cltd
test
adc
and
es
jl
cmp
fcoml
dec
push
aam
or
sbb
je
ficompl
nop
bound
insl
cmp
loopne
and
dec
aad
jmp
push
out
mov
dec
xchg
add
or
dec
sub
push
push
icebp
pop
rcll
mov
stc
xor
rorl
pusha
in
lock
adc
xchg
out
xor
jp
fs
sbb
sub
gs
cmp
das
xchg
fdivr
or
gs
adc
cmp
fsubrs
cmpsl
inc
cmp
imul
mov
les
mov
pop
pop
decl
andb
jno
lock
sbb
and
pop
fwait
insl
pop
mov
movsb
hlt
cmp
xor
adc
loopne
out
cmp
je
sarl
imul
loope
cmp
arpl
xchg
into
adc
popf
daa
pop
in
test
inc
call
add
sti
mov
dec
cmp
pop
hlt
adcl
mov
ja
pop
in
fistpll
imul
dec
jnp
adc
sub
call
mov
cmp
fcoml
pop
add
inc
loopne
aam
sub
lock
jl
imul
mov
out
out
dec
sub
pop
xchg
push
or
aam
cmp
sahf
cld
call
int
dec
in
fstpl
cmp
mov
out
loopne
xor
data16
mov
xchg
test
or
fisubrl
pushf
mov
push
push
pusha
and
xchg
xor
push
mov
add
pop
bound
inc
mov
sbbb
pop
ficoml
test
fsubr
push
mov
push
jl
pop
sub
xor
int3
pop
in
das
sub
xor
mov
clc
addr16
jl
addr16
xchg
fdivrl
push
popa
xlat
or
test
push
enter
pop
sahf
inc
mov
cltd
mov
jns
lret
add
rclb
pop
fists
inc
test
cmpsl
ljmp
and
leave
mov
test
mov
pusha
adc
add
stc
in
cmp
pop
idivl
nop
jne
xchg
push
es
ficoml
adc
test
gs
pop
sbb
test
push
sub
cltd
imul
cmpsl
mov
mov
mov
sub
cmpb
pop
loope
xor
mov
sbb
out
ret
pop
push
js
cli
xor
fcoms
rol
pop
lods
jbe
sbb
and
in
roll
test
xlat
cmp
je
xchg
loop
dec
enter
fsubrl
sahf
cld
pop
adcl
nop
scas
lock
jmp
jle
and
test
sub
and
cld
insl
pop
xchg
xor
push
adc
cmc
xchg
popa
stos
push
mov
xchg
sub
jmp
cwtl
test
loop
inc
arpl
sub
loopne
mov
mov
rorb
pop
fldcw
sar
test
nop
lcall
mov
mov
arpl
push
gs
ret
xor
xchg
lods
cltd
dec
add
imul
mov
add
mov
push
cld
ss
pusha
or
gs
push
popf
inc
xchg
pusha
hlt
mov
or
les
pushfw
adc
mov
jne
inc
add
scas
lock
mov
inc
jg
pop
je
xorb
push
xchg
cmp
sbb
fstl
lods
push
pop
jl
mov
adc
push
adc
aas
inc
sbb
mov
repnz
insb
pop
xchg
push
insl
clc
stos
jo
in
fwait
pop
jo
ret
pusha
adc
fcmovu
ja
out
push
xchg
fcomps
pop
mov
hlt
test
orb
jecxz
or
in
pop
xor
popf
mov
arpl
sbb
push
adc
cmp
lcall
lcall
inc
or
mov
mov
popa
in
dec
push
pusha
ficomps
pop
push
sub
inc
in
mov
push
stc
cmp
loop
mov
push
call
add
cmp
arpl
test
mov
out
sarb
cmp
or
inc
cwtl
jnp
xor
cmp
push
adc
test
mov
js
mov
in
hlt
out
jecxz
pusha
fsubrs
aas
mov
push
sbb
subl
jo
pop
std
xor
imul
mov
pop
loop
add
insl
xchg
ja
mov
xchg
lcall
sbb
xor
push
mov
imul
xchg
pop
sbb
js
ret
dec
cltd
data16
cmp
cs
pusha
pop
and
mov
sub
xlat
inc
cmp
cmp
push
xchg
mov
stos
xchg
loopne
or
in
pop
cmp
insl
pusha
mov
scas
jl
push
xchg
ja
pushf
pop
sub
mov
sbb
sbb
mov
mov
dec
fldcw
mov
insb
pusha
or
outsb
lret
mov
push
sub
pop
or
sub
and
pusha
in
pop
mov
add
popa
int3
jle
xchg
sbb
outsb
sub
subb
aad
pop
xor
pop
jmp
insb
sbb
mov
or
cmp
popf
xchg
fmul
cmpl
lret
jge
mov
js
pop
adc
insb
cltd
jne
std
addr16
pop
fnstsw
fsubrs
inc
dec
mov
pop
std
xorl
loopne
cmp
pop
push
pusha
rolb
or
sbb
mov
sbb
stos
push
lods
cmp
outsb
sbb
pop
push
js
mov
lock
cmpsl
hlt
mov
pusha
das
movsb
pop
imul
ja
inc
inc
lcall
sbb
or
push
pushf
lcall
adc
in
test
imul
jg
enter
and
and
pop
ds
enter
fcomps
and
ficompl
mov
pop
cmpb
add
inc
cs
int
dec
lock
leave
bound
mov
sbb
mov
in
mov
jle
mov
or
mov
push
in
xchg
jl
jmp
inc
pop
or
test
addr16
sub
mov
push
aam
pusha
mov
pop
jmp
mov
sub
mov
rol
push
insl
jmp
adc
divl
cmpsb
loope
jo
jmp
test
push
sub
mov
int3
cmp
repz
sbb
addr16
xor
add
pop
rcll
lock
pop
or
push
outsl
jl
shlb
movsb
hlt
pop
cltd
xchg
or
clc
jo
mov
and
aas
pop
fmull
or
fmul
lods
mov
dec
bound
push
mov
jl
or
jns
int3
add
push
cwtl
and
in
mov
sbb
cld
push
rcrb
hlt
insb
cmpsb
jo
adc
add
mov
loope
inc
xor
add
pop
sub
inc
fcompl
xlat
aad
sbb
pop
mov
leave
hlt
fcoms
xor
jns
dec
pop
loope
adc
pushf
pop
std
and
xlat
je
sub
push
sbb
mov
push
pop
jp
push
std
cmp
jle
sub
dec
shrl
sbb
dec
or
pop
es
in
icebp
lock
push
inc
aam
adc
insl
int3
in
ss
in
scas
cmp
cld
int3
pop
push
shrl
sbb
pop
pop
test
lret
mov
enter
dec
jne
sahf
jo
pop
cwtl
xchg
inc
outsl
fs
test
and
dec
leave
loopne
cltd
push
icebp
push
and
sbb
lock
xor
xchg
mov
adc
movsb
hlt
xor
xchg
jle
insb
mov
xor
sbb
int3
cmc
xchg
sbb
push
insb
jnp
adc
or
mov
shr
jl
ret
test
jg
imul
add
push
imull
loopne
xchg
bound
and
stos
cmc
mov
xchg
andl
iret
sbb
and
test
jo
pop
xchg
xor
mov
sbb
stos
imul
cmpsb
push
ret
xchg
mov
in
adc
xchg
xchg
add
push
cwtl
cwtl
jae
nop
or
fdivrl
bound
into
mov
push
add
pusha
sbb
dec
leave
js
mov
pushf
mov
pusha
cmp
xchg
test
mov
and
and
pusha
bound
xchg
pop
adc
lcall
or
rcll
ss
dec
sbb
scas
fstps
sbb
dec
hlt
or
xchg
js
call
xchg
sbb
dec
mov
sbb
sbb
cmp
sub
gs
lods
mov
pusha
insl
int3
cmp
pop
sbbl
mov
cmp
nop
xchg
enter
or
std
inc
bnd
rcr
dec
insb
pop
ret
cmp
fmull
adc
push
pushf
clc
add
jle
pop
ljmp
sbb
pop
adc
xor
fadd
enter
adc
fadds
jne
hlt
or
sbb
add
push
or
cs
inc
jg
test
outsb
jae
inc
jp
pop
mov
dec
pop
cmp
mov
sub
outsb
pusha
adc
mov
cmp
pop
hlt
pop
xor
push
stc
arpl
jbe
sbb
bound
mov
fcomp
lods
push
xlat
lret
fldcw
sti
div
or
xchg
sbb
jnp
pop
dec
push
fcompl
xchg
pop
mov
fsubr
mov
sub
fwait
push
cmpsb
pop
push
fcompl
or
scas
in
dec
xchg
test
fsubl
mov
sub
add
jl
adc
insl
dec
negl
pop
mov
lahf
fcomps
dec
jns
mov
inc
cmpsl
in
fbstp
mov
xor
stos
pusha
or
push
popa
aam
outsb
xchg
pop
mov
sbb
fadds
add
inc
push
mov
mov
fsubs
stc
fisubrs
rclb
xor
pop
aas
sar
mov
lods
jno
test
or
mov
xor
pop
ljmp
lcall
pop
test
incb
popa
and
mov
jge
rcrb
sarb
pop
xchg
fistps
mov
push
and
pop
jbe
int3
xor
mov
repnz
push
aas
inc
pusha
out
jns
pop
sbb
cmp
mov
dec
fnstenv
jns
mov
lea
fadds
push
loop
mov
jmp
imul
dec
inc
mov
adc
js
jecxz
pop
sub
call
fs
xchg
je
sbbb
push
xchg
dec
dec
mov
add
jge
ja
mov
pusha
mov
subl
addl
test
jnp
pop
rcrb
scas
cmp
xchg
fdivs
mov
stos
or
mov
mov
popa
cltd
xor
fsubrl
movsb
and
cmp
stos
enter
js
or
mov
pusha
call
test
cmc
movsb
rcrb
push
loopne
sbb
mov
shrb
jns
cmp
mov
pop
xor
jg
and
mov
jns
cli
bound
pushf
jle
hlt
jmp
and
aaa
lods
pop
jo
or
sbb
push
pusha
xchg
mov
jae
popa
out
xorb
sub
outsb
mov
mov
js
insl
test
jno
sbb
aam
adcb
pop
inc
popf
xor
cli
nop
pop
leave
insl
mov
or
adc
cwtl
add
jl
adc
pop
sub
mov
ret
push
daa
out
adcl
int
cmp
mov
lock
or
mov
cmp
push
pop
push
pop
in
pop
dec
pushf
add
popa
pop
and
xchg
hlt
mov
pushf
push
lods
lock
out
insl
pusha
mov
adc
ret
addb
hlt
pop
call
push
pop
lcall
pop
dec
ret
mov
loopne,pt
ljmp
ret
xor
cwtl
sbb
push
es
enter
jb
and
xor
add
dec
clc
or
or
test
mov
cs
mov
add
or
rolb
bound
mov
sbb
icebp
call
sbbl
rolb
fcmovu
leave
cmp
mov
pushf
jp,pn
push
rcl
pop
push
test
push
sahf
sbb
or
mov
mov
fidivl
push
pop
sub
sbb
clc
xchg
sbb
fwait
or
mov
je
cmp
pop
int3
repnz
cmpsl
mov
arpl
push
sbb
shrl
fs
lcall
test
jb
jns
add
pop
das
sbb
cmp
icebp
mov
or
cmc
repz
int3
and
lcall
imul
lock
cld
jl
jmp
cs
call
cmp
pop
and
fistpl
pushf
popf
mov
enter
ss
xchg
jge
dec
mov
enter
push
outsb
xchg
shlb
pop
adc
enter
in
sub
shrb
out
or
out
shll
loopne
cmp
mov
adc
sub
call
fdiv
cld
mov
push
sbb
add
mov
cmp
sbb
loopne
cli
pop
pop
dec
mov
jb
dec
lret
add
jne
repz
insb
test
sbb
daa
and
xchg
jns
movsb
in
dec
cmp
ds
push
aad
aas
add
imul
lods
insl
dec
and
out
fmull
out
outsb
mov
fcoms
adc
or
fsubs
pop
and
mov
mov
lods
push
adc
and
jg
and
push
popa
shlb
subb
push
jmp
mov
insl
or
pop
das
loopne
enter
cmp
cmc
fidivrl
cmp
loopne
incb
loopne
cmp
inc
fildl
fsubs
aam
or
mov
test
cld
lods
addr16
ss
in
push
lock
cs
sti
movsl
jnp
jno
cwtl
adc
or
mov
sub
sbbl
mov
pusha
in
sahf
pushf
jle
adc
mov
pusha
js
xchg
jno
push
mov
lods
repnz
aam
mov
mov
jp
cmp
fisttpl
mov
mov
aas
or
lods
cmpsb
int3
popa
paddusw
lods
outsb
pusha
jg
xor
cwtl
mov
out
outsb
dec
push
add
push
insb
sbb
cld
sbb
xchg
cmp
pushf
push
sti
hlt
push
pop
movsl
sbb
xor
lcall
ret
sbb
xor
mov
inc
mov
fidivrl
lcall
addr16
inc
mov
into
pop
inc
cmc
adc
dec
pop
mov
push
outsl
loopne
adcb
push
loop
xor
pop
xorb
sub
pop
mov
mov
cmp
sub
inc
outsb
pop
sbb
mov
pop
ss
adc
mov
inc
jg
stos
xor
leave
adc
dec
sbb
fadds
movsb
fmull
lahf
insl
push
shrl
inc
push
pop
ficoms
mov
cmp
pop
out
jns
jp
pusha
jmp
jb
inc
cmp
sbbb
dec
in
inc
call
jae
push
pop
adc
loop
outsl
lods
fcoms
test
cmp
js
out
inc
cmc
pop
es
mov
mov
mov
stos
lret
incb
aas
fidivs
pop
in
sbb
push
test
cmpsb
sbb
pop
cmp
fsubrs
clc
fs
lds
test
push
and
mov
and
pop
cmp
ds
subl
adc
mov
jbe
test
ljmp
pushl
jl
aas
js
adc
popa
pop
cmp
and
mov
nop
jns
pusha
cmp
fildl
enter
fadds
fisubrs
cmp
sbb
rcrb
lcall
pop
sub
jb
ljmp
stos
hlt
mov
fnstcw
mov
pop
sbb
iret
lock
mov
pop
pop
aaa
inc
fdivs
rcr
inc
aam
out
and
jecxz
jbe
mov
mov
loop
aaa
dec
jne
jmp
fcompl
pushf
xchg
test
inc
jg
pop
in
inc
and
fs
loopne
jge
jl
add
push
mov
jl
mov
in
stos
dec
fcompl
jno
inc
mov
hlt
pop
jmp
lret
out
clc
and
sahf
xchg
lods
les
mov
jo
jge
fcomps
insb
arpl
data16
fs
pop
enter
gs
call
shll
jl
fdivrs
sbb
add
addb
test
in
mov
pop
js
jge
xchg
flds
outsl
lock
loop
pop
or
sub
and
clc
cwtl
pop
enter
and
sub
outsb
mov
push
push
movsl
adc
dec
xor
jecxz
arpl
lock
pcmpeqb
fcoml
nop
xor
dec
cmp
call
pusha
cwtl
jg
adc
imul
add
dec
pop
push
add
fdivr
loopne
clc
test
pusha
adc
in
stos
addb
jbe
dec
stos
lcall
insl
pop
imul
lods
jo
push
rol
or
rcll
mov
bsf
popa
push
out
push
hlt
mov
jecxz
pop
popf
or
xchg
dec
insb
test
inc
mov
out
fisttpll
add
lret
in
cmp
fdivl
mov
xchg
ja
stc
pop
loope
andl
sahf
cld
pop
in
and
scas
mov
call
test
adc
add
cmpb
cwtl
cmpb
ja
push
sbb
adc
test
cmp
inc
cli
rcrb
in
xchg
test
test
jl
pop
xlat
or
inc
sub
cmp
shrl
out
loope
mov
imul
movsb
imul
xchg
cmp
loopne
fcompl
js,pn
mov
push
xor
pop
mov
or
flds
cmp
lock
lret
mov
shlb
jg
push
out
sub
lds
out
ficoml
and
insb
push
mov
pusha
sahf
mov
sbb
mov
pushf
cwtl
inc
add
fmul
mov
cmp
sbb
or
clc
xchg
and
cs
mov
lock
imul
jge
pop
jo
inc
pop
data16
ss
inc
jp
sti
bound
js
cwtl
adc
sbb
fdivs
sbb
cmpsb
jbe
jge
mov
mov
popa
hlt
sbb
sbb
jns
aam
adc
frstpm(287
andl
je
movsb
xor
mov
in
int3
or
lret
fdivr
xor
mov
test
xchg
xchg
test
loopne
dec
cwtl
int
dec
xorb
and
test
pop
mov
cmp
push
int
xor
mov
add
jge
xor
jae
ret
xchg
mov
testb
push
mov
cmc
in
dec
pop
push
stos
pop
pop
sarb
cld
data16
jnp
push
inc
leave
cmp
push
xor
sbb
mov
mov
fbld
sbb
es
cld
xor
lock
popa
stos
pop
dec
push
leave
dec
sbb
pop
and
mov
cwtl
pop
dec
repz
pusha
inc
adc
inc
cwtl
pop
sti
cmpsb
jge
and
mov
cmpsb
push
fld
in
lods
mov
mov
cmp
lcall
mov
push
pop
adc
stos
mov
dec
int3
std
mov
jg
and
jl
or
lods
pop
pop
mov
sbb
aam
or
mov
xor
cmp
test
loopne
int3
pop
mov
data16
cmp
cltd
adc
jno
cmp
iret
xchg
jmp
js
and
mov
adc
sbb
cmp
sub
lods
mov
aad
mov
and
insb
jns
cmp
inc
pop
fdivrl
lcall
jbe
adc
faddl
dec
repnz
push
dec
pop
mov
cld
sbb
lcall
push
and
jns
jl
lds
mov
push
faddl
cld
stos
inc
xor
outsl
outsb
jmp
xchg
lock
dec
in
mov
push
imul
aaa
ficoml
inc
or
or
dec
inc
fiaddl
cld
outsl
repz
cmp
mov
sub
cld
sbb
pusha
cmp
mov
js
jno
lcall
pop
fsubrs
pop
and
aam
cltd
mov
adc
jge
sbb
into
dec
sahf
enter
cmp
call
and
rclb
cwtl
fs
mov
sub
fwait
sbb
popa
mov
pop
outsb
es
in
push
mov
je
int3
cmp
enter
pop
lock
dec
mov
or
jl
and
pop
call
inc
js
jbe
jl
lock
sub
add
inc
cmc
cli
insl
js
insb
lods
pop
mov
rclb
dec
push
js
jb
inc
inc
fsubs
pusha
mov
in
inc
or
loopne
xchg
jns
fiadds
bound
fcos
add
jne
enter
popf
call
pop
ret
sarb
lods
nop
fwait
adc
add
xor
adc
fdivr
mov
add
jp,pt
cmp
mov
mov
out
les
pop
loopne
hlt
add
pop
dec
popa
test
loopne
cmp
push
pusha
jge
push
out
add
stos
clc
lret
cli
mov
push
cmp
pop
add
cmp
idivl
in
dec
flds
and
lods
addb
xor
push
mov
gs
adc
mov
inc
xor
adc
ljmp
fsub
pop
int3
fcomp
test
xor
aam
push
mov
sbb
movsb
cmc
in
sbb
rcrb
sbb
pop
pop
enter
pop
test
shl
pop
add
jl
and
mov
lods
pusha
ret
in
cmpsl
pop
lahf
out
je
enter
pusha
lods
xchg
stc
add
sbb
cmp
enter
cld
mov
test
cmp
test
popa
data16
fs
xchg
push
dec
in
rclb
lahf
notb
in
and
or
data16
je
stos
jb
sbb
pop
mov
enter
ss
or
int3
pop
cmpsl
lods
hlt
xor
cmp
pop
cmp
stos
std
jo
add
into
cld
mov
push
jl
fdivs
test
mov
push
setl
lods
mov
or
negl
xchg
enter
dec
mov
popa
and
add
xor
call
shrl
insb
fsubr
xor
pushf
int
and
rcrb
daa
xchg
xlat
mov
or
and
push
pop
aas
mov
repnz
cmp
push
lret
dec
insb
pop
push
sbb
pop
cmp
pmaxsw
pusha
or
je
insb
js
cmp
pop
jo,pt
and
addr16
and
mov
mov
xchg
in
mov
push
jae
loopne
mov
mov
imul
dec
mov
cwtl
scas
jl
fdivrs
pusha
mov
sub
ds
out
push
pushf
sub
mov
cmpsl
test
adc
adc
sti
lock
leave
push
sbb
jno
pusha
inc
pop
subb
sub
push
std
aaa
sti
dec
fisubrs
push
inc
fs
jl
aaa
sbb
pop
in
push
and
dec
fsubs
mov
mov
mov
dec
cmp
jl
nop
sbb
repnz
pop
insl
jae
ret
mov
mov
or
xchg
nop
scas
fsubrl
dec
push
nop
or
into
pop
cmc
pushf
cmp
adc
jg
repz
inc
insb
mov
in
jmp
pusha
mov
fsin
push
lock
call
pop
add
clc
xor
jp
pop
mov
jnp
jl
nop
fmuls
enter
idivl
in
pop
es
pop
fbstp
pop
lahf
fs
fmuls
push
push
jl
aam
seta
and
fnstenv
pop
cmp
push
cmp
pushf
rcl
xor
mov
shlb
mov
fs
push
xchg
or
add
pop
or
cmpsl
andb
out
jmp
jbe
mov
sub
insb
pusha
clc
pop
or
out
mov
fwait
lods
lods
adc
xlat
xchg
sbb
enter
sbbb
sub
stc
clc
shl
test
test
add
fdivrl
push
cmp
mov
mov
mov
mov
cmpsl
pop
dec
aam
cli
add
inc
ret
shl
cmc
or
cmp
or
mov
scas
push
sub
in
pusha
mov
andl
je
repz
and
scas
sub
movsb
dec
negb
pop
jnp
xor
inc
and
pop
in
cmpsb
test
enter
data16
mov
mov
insb
add
and
adc
push
dec
mov
mov
sbb
xchg
pop
sahf
jne
cltd
test
xor
jbe
mov
push
outsl
ficompl
out
clc
xchg
push
ret
mov
cmp
in
insl
dec
call
testb
cmp
push
test
out
hlt
out
insl
push
or
call
adc
je
and
fs
ljmp
jl
pusha
scas
mov
nop
movsb
mov
fs
xchg
push
cmp
mov
cmp
insb
xchg
inc
enter
int3
mov
push
jno
cld
pop
push
sbb
fcomps
popa
xor
push
cmp
push
loopne
sahf
push
fdivs
lret
jle
xchg
sbb
jp
pop
in
mov
loopne
jl
lret
dec
out
mov
cmp
fs
call
jbe
iret
inc
pusha
adc
cwtl
lods
xor
icebp
shll
push
inc
xlat
push
cmp
pusha
push
pop
repz
popa
or
aas
mov
bound
imul
loopne
clc
pop
add
imul
add
dec
mov
mov
sub
out
cwtl
mov
lcall
lret
jp
dec
jle
ret
mov
stc
fisttpll
bound
movsl
or
mov
decb
push
jle
pop
xorl
inc
mov
hlt
sbb
bound
nop
jo,pt
push
shl
and
jl
or
paddusw
in
cmp
cltd
ja
movsb
lods
jecxz
add
call
jns
insl
insb
dec
push
popa
bnd
mov
enter
shrb
pop
enter
mov
sbb
fmuls
sub
mov
mov
inc
cmp
and
fdivrl
outsl
mov
insl
mov
pusha
scas
mov
mov
inc
pop
sbb
arpl
imul
cmp
mov
mov
fstps
lret
jl
pop
mov
stos
jmp
mov
dec
js
test
bsr
fcomps
push
adc
fwait
in
or
mov
fstp
xlat
add
xor
dec
sbb
fadds
loopw
stc
and
lock
inc
pop
gs
mov
xorb
mov
call
jns
gs
fsubrs
sbb
inc
mov
pop
mull
fsubl
mov
mov
nop
inc
inc
test
jl
pop
adc
in
lods
dec
in
jo
jl
dec
sbb
clc
jl
psubsw
insl
cmp
into
popa
cmp
push
andb
mov
mov
test
pop
out
xchg
int
dec
pop
and
cld
sbb
cmp
lods
dec
mov
fcomps
fisubl
jo
pop
data16
add
jg
and
repz
insl
clc
jo
dec
xlat
dec
insb
jbe
dec
call
push
daa
out
jb
mov
push
in
push
icebp
sub
cmp
sti
inc
div
div
inc
xchg
cltd
sub
jge
out
pop
jb
mov
xchg
or
pop
rcl
lcall
and
cwtl
lods
jns
inc
pop
xor
in
stos
popa
jnp
sub
aad
in
test
inc
mov
xor
inc
stos
movsb
and
pop
ja
sti
imul
fwait
xchg
std
or
inc
loop
and
inc
roll
and
cmpsl
or
fwait
push
or
cmc
sbb
jl
decb
dec
iret
and
jo
push
cmp
pop
sahf
or
jo
adc
and
cmp
mov
mov
bound
movsl
fbstp
and
fadds
sahf
aad
fdivrl
gs
ljmp
data16
lds
pop
loope
imul
xchg
xchg
call
mov
lods
or
push
adc
andb
mov
mov
cli
push
ret
push
jnp
mov
mov
pusha
test
daa
pop
jge
outsb
negb
or
dec
mov
sbb
leave
or
lods
fcmovne
ficoms
add
cmp
and
push
hlt
nop
cmp
pop
xor
fdivl
mov
inc
or
imul
xchg
js
lods
xchg
mov
lcall
add
mov
addr16
insb
lahf
inc
xchg
jge
cmp
jb
cli
jle
arpl
sub
jne
mov
jge
hlt
pop
or
adc
inc
jg
icebp
pop
push
cmp
jb
pop
xchg
and
pusha
sti
fnstcw
xchg
cwtl
fs
inc
pop
arpl
mov
fnstcw
outsb
xchg
fs
dec
popa
pop
and
push
dec
imul
enter
in
loope
repz
mov
push
lods
fdivrs
cli
inc
aam
test
mov
jne
and
clc
mov
insb
lods
mov
dec
test
sti
jo
frstor
scas
shrb
pop
in
mov
bound
adc
pop
dec
int3
cmp
pop
ljmp
test
cli
fidivs
dec
lods
jns
fs
pusha
shrb
mov
sbb
pop
or
test
decb
out
ljmp
enter
in
cmp
mov
cld
in
sub
in
in
les
std
aaa
sbb
test
arpl
pushf
sahf
push
test
adc
fdivr
sbb
pop
mov
or
imul
imul
jns
jp
mov
in
mov
fadds
inc
stc
mov
push
rolb
sbb
and
cwtl
lret
pusha
sbb
gs
fildl
es
jl
pusha
cmp
push
lods
shl
insb
std
and
adc
inc
bound
inc
outsb
pushf
jnp
dec
or
data16
add
jecxz
lret
fbld
mov
nop
stc
dec
fsubrl
or
fadds
mov
push
dec
mov
push
cmpsb
xor
or
cmp
repz
mov
xchg
sbb
outsl
xchg
pop
hlt
jns
imul
push
add
mov
and
scas
lea
pop
stc
ds
adc
push
jo
je
mov
jl
js
xchg
cmp
pop
pop
lret
cld
movsl
cmpsb
arpl
stc
dec
jge
call
and
sbb
adc
sbb
rorl
xchg
nop
cmp
or
cmpsb
mov
ficomps
fs
jns
nop
cwtl
rcrb
sahf
test
je
fsubr
outsb
pop
cltd
add
fcomi
push
loope
or
jo
pop
rcrb
mov
mov
lock
iret
loopne
push
jbe
pop
andb
aas
sbb
ret
out
cmpl
mov
fs
push
push
std
sbb
cmp
push
pop
pushf
cmp
mov
loope
movsb
sbb
cmp
int
or
ja
cmp
lock
insb
pop
clc
dec
push
movsl
and
movsb
in
sbb
mov
nop
in
movsb
cmpsl
js
gs
movsb
cmpsl
mov
pop
call
shlb
cmp
jo
das
fisubs
mov
adc
jl
dec
mov
dec
scas
fsubs
ds
xchg
push
cwtl
mov
fdivrl
mov
dec
adc
es
fs
mov
inc
mov
pop
icebp
lret
adc
mov
fwait
xchg
fisubl
or
inc
mov
pusha
sbb
add
inc
pop
xchg
sub
xor
jne
mov
fdiv
jo
pop
mov
or
es
clc
les
cmp
jp
xor
mov
imul
in
and
hlt
lods
pop
mov
aam
je
dec
xor
sub
sbbb
leave
push
inc
sbb
xlat
and
repnz
push
stc
bound
aam
xchg
fildll
mov
mov
xchg
outsb
movsb
pop
andl
insl
push
mov
popa
or
cmp
sbb
stc
outsl
pop
scas
fs
push
stc
or
les
ljmp
push
imul
aam
mov
or
add
or
push
js
mov
mov
pop
fisubrs
nop
pop
cmp
or
insl
mov
push
pop
aad
sbb
lcall
pushf
or
lret
int3
pop
sub
repnz
lods
adc
sbb
jl
aam
mov
sbb
test
stos
pop
dec
popa
xor
push
or
inc
dec
inc
cwtl
mov
ficoml
adc
pop
and
repnz
lods
sub
movsl
hlt
inc
loop
bound
jbe
test
xchg
mov
pop
or
lcall
xor
into
addb
push
fwait
push
fdivrs
add
push
mov
xchg
js
cmp
mov
enter
mov
lcall
sbb
fsubs
add
jne
repz
and
outsl
test
push
push
ja
lock
loopne
mov
xor
jne
scas
jmp
dec
add
mov
and
xor
sbb
in
cmpsl
aas
stos
sub
bound
lods
xchg
or
mov
pop
mov
jbe
sbbb
scas
and
mov
test
or
pop
aaa
fadd
pop
mov
xor
decl
daa
aam
or
scas
rcll
lock
and
cld
inc
push
mov
sub
adcb
inc
fisubrl
xor
jno
cs
rcll
pop
jo
jle
sbb
push
gs
sti
sbb
pushw
pop
sub
clc
aam
insl
sub
ss
stc
out
bnd
pop
clc
mov
mov
inc
fs
and
mov
sub
icebp
push
or
pop
adc
inc
push
sti
cld
out
push
cmp
fucomp
mov
test
nop
or
mov
fstl
sbb
adc
dec
js
imul
add
cmp
test
in
shlb
lock
adc
pop
sbb
push
fcompl
loop
mov
pushf
in
addb
and
std
sub
cwtl
cli
sbb
cmp
mov
mov
jl
add
in
push
inc
dec
adc
in
mov
clc
lret
push
js
mov
sbb
mov
shr
jae
inc
js
int3
cltd
paddusw
cmp
cld
sub
aam
cwtl
mov
sbb
pop
cwtl
sub
fnstenv
pusha
dec
pop
ficomps
pushaw
push
pop
mov
xchg
insb
sbb
clc
lods
decl
mov
hlt
or
nop
test
rep
faddl
jo
es
push
js
pop
mov
sbb
arpl
fstp
ss
dec
mov
sbb
cmpsb
inc
sbb
sub
mov
pop
cltd
adc
pop
xor
andl
scas
inc
sbb
add
test
push
or
popa
adc
je
xor
mov
cmp
xchg
push
in
xor
and
ret
dec
nop
sbb
jns
int
popa
mov
in
push
pop
xor
sub
cmp
daa
test
aas
inc
jg
shr
pop
cmpsl
xchg
push
mov
shlb
jl
push
enter
call
add
fs
cwtl
push
rcrb
dec
xorb
imul
fcompl
ds
xchg
cld
je
test
in
mov
cmp
pop
sbb
cld
push
push
scas
bound
inc
cmp
js
in
jge
dec
cmpsl
nop
je
rcr
pop
push
iret
movsl
xchg
jae
or
pop
test
jne
jo
sbb
sub
insb
outsb
je
mov
pop
and
insl
leave
jl
into
xor
mov
aad
aas
push
loop
test
lock
fstps
ret
in
add
test
push
mov
xchg
divl
jp
cmp
mov
sbb
dec
clc
lods
cli
or
mov
cmp
mov
call
mov
popf
dec
mov
mov
sub
jno
jo
stmxcsr
lods
fnstcw
sbb
cmp
push
mov
dec
inc
insb
movsb
cmpsb
xor
ret
mov
data16
dec
rcrb
fyl2xp1
adc
push
into
out
jg
sbb
sbb
fmulp
xchg
sbb
emms
add
cmp
out
xchg
cmp
bound
xor
cmp
pop
mov
lock
or
andb
or
and
cld
test
jmp
xor
cmpsb
and
fcoms
icebp
pushf
push
hlt
cmp
aam
sub
adc
jo
mov
push
sub
xchg
repnz
out
aas
cmpsb
or
cld
cmp
lret
dec
js
ds
mov
clc
f2xm1
ret
push
mov
mov
fsts
jae
pop
bound
mov
xchg
push
mov
jns
push
inc
lea
lret
or
mov
in
cmp
insb
and
fisttps
xor
call
pop
xlat
adc
pushf
mov
fstpt
pop
js
movsb
bound
sbb
pop
psubsw
mov
jecxz
insl
hlt
sbb
xchg
out
xor
cld
mov
movsb
inc
sbb
pop
adc
cmpsl
enter
pop
push
pop
jb
rcr
test
mov
jecxz
aam
fistpll
stc
daa
adc
jo
jg
sbb
push
imul
sbb
arpl
idivl
inc
ds
fs
addr16
and
int
and
call
xor
iret
push
mov
mov
int3
aam
jmp
sub
repz
or
cmp
dec
push
jmp
test
je
mov
push
popa
mov
sbb
adcb
bound
pop
ljmp
ficompl
cwtl
ljmp
icebp
nop
testb
mov
pop
fldenv
into
add
cltd
lods
pop
xor
call
pop
js
rcrl
mov
lcall
out
pop
test
aas
addr16
pushf
or
mov
imul
mov
jbe
pop
add
icebp
in
dec
les
sbb
sub
insb
jl
jne
adc
fldcw
dec
xorb
adc
jo
lea
addr16
or
dec
repnz
in
imul
mov
or
bound
jg
dec
aam
add
pop
mov
push
sbb
push
and
jns
push
fcoms
pop
mov
call
enter
mov
add
mov
jbe
push
fistpl
cmc
xchg
sub
enter
pop
ret
push
cmp
test
mov
xor
cmp
dec
jl
arpl
mov
pushf
cmp
addr16
jge
sub
nop
cmp
push
and
out
js
rcr
adc
lret
es
or
sbb
inc
add
cmp
adc
mov
pop
subb
lock
les
add
inc
jecxz
je
outsl
mov
roll
popa
xlat
mov
xor
cmp
bound
pop
cld
mov
inc
xchg
hlt
or
cwtl
jne
fstpt
insl
add
sub
pushf
and
xchg
jecxz
jge
lods
insb
xbegin
mov
mov
fwait
pop
or
inc
pop
inc
std
js
cld
and
repnz
inc
std
fstpl
add
in
pop
dec
push
jle
adc
sbb
mov
dec
js
loope
fmull
call
fcmovu
pop
scas
xor
sbb
push
adc
xorl
call
out
dec
shlb
sub
inc
jns
xchg
orb
pop
jle
mov
es
mov
xchg
push
adc
insb
fcomip
cld
or
xchg
or
hlt
mov
mov
int3
icebp
mov
hlt
lret
test
fsubrs
sub
lcall
lea
cmp
jne
or
add
pop
js
inc
popf
cwtl
out
outsl
rcrb
pop
pop
fistps
movsl
pusha
inc
mov
push
jne
jle
and
fdivrl
outsl
out
hlt
mov
fcmovnb
movsb
and
push
add
sbb
and
icebp
loop
frstor
pop
es
adc
call
rolb
in
adc
test
and
popa
mov
cmp
sub
fcmove
push
je
test
clc
rclb
jle
push
push
pop
xor
or
out
insb
xchg
xchg
cmp
orl
mov
pusha
rolb
movsb
push
call
cmpsb
cmp
mov
pop
enter
pop
mov
inc
into
sub
push
push
js
add
mov
xor
icebp
cwtl
fcoms
jmp
mov
mov
nop
sub
test
jo
pop
add
imul
pop
rcl
mov
aas
sahf
push
pop
dec
xor
clc
fmuls
jmp
cmpsb
push
test
inc
mov
pop
add
mov
bswap
mov
mov
fdivrs
aad
fsubrs
push
jl
inc
dec
ret
cli
push
aaa
leave
rcrb
lcall
push
lock
out
pop
dec
xor
fdivs
loope
add
dec
cli
fs
inc
lock
sbb
mov
xlat
cmc
mov
nop
mov
mov
rcrl
imul
adc
test
lret
int3
cmpsl
arpl
cmc
inc
pusha
xchg
cmp
jns
push
gs
jmp
test
rdtsc
sub
or
divb
aam
hlt
cmp
fldenv
clc
enter
js
je
inc
dec
mov
jno
fisttpll
lret
lret
adc
mov
call
and
out
jno
xor
popf
sbb
mov
imul
push
ficoms
out
sbb
ss
js
lahf
je
and
push
mov
add
push
and
in
mov
cmpsl
jg
mov
imul
out
dec
jno
and
jne
test
fsubrl
pop
mov
rcll
jl
mov
pusha
mov
fldcw
into
in
js
in
cmc
sbb
dec
js
push
and
movsl
call
fsubs
mov
clc
jo
sbb
fcoms
xchg
mov
or
faddl
and
dec
pop
arpl
rcr
lock
rcrl
mov
hlt
icebp
aas
push
push
aam
dec
cmp
push
fwait
inc
and
xchg
or
js
imul
sti
pop
ficoml
push
xchg
mov
jo
inc
pop
fcmovnbe
sarl
call
fiaddl
mov
in
and
push
pop
add
lds
cmp
lahf
js
or
dec
pop
sbb
test
stos
inc
mov
or
lock
popa
fistps
enter
push
pop
std
imul
xlat
fsubrl
in
jns
pop
cmovo
push
fnstcw
aaa
sbb
add
pop
push
fsubr
dec
in
ljmp
dec
test
mov
push
mov
push
adc
adcb
jl
mov
xor
outsl
mov
cmp
adc
cli
sbb
jnp
xor
imul
adc
push
fnstsw
mov
dec
pusha
pop
rcrb
cwtl
ficoms
test
cbtw
push
inc
sub
xchg
loopne
fs
cld
add
mov
lcall
add
je
push
shl
dec
fsubrs
xchg
push
pop
ja
hlt
test
js
inc
pop
mov
mov
pop
push
jg
xor
sub
pop
aad
sbb
fs
test
je
js
stc
scas
pop
insl
cmp
cwtl
and
pushf
mov
jmp
jmp
addr16
and
in
gs
or
jl
loopne
cmp
fsubs
xchg
or
mov
data16
pushf
sbb
cmp
mov
cmp
dec
js
pusha
adc
jl
addr16
push
ret
stos
jl
push
jecxz
xchg
test
mov
mov
cld
cs
enter
mov
rcr
push
arpl
or
insb
fildll
push
fadds
outsb
push
push
add
cltd
ds
outsl
and
popa
int
cmp
lahf
sbb
push
insb
enter
mov
dec
sbb
xchg
sbb
js
push
fisubrs
andb
add
push
bound
lock
push
sub
lods
mov
nop
xor
push
test
mov
xor
js
mov
cmp
test
mov
mov
inc
lods
aam
stos
ret
adc
xor
outsb
xor
lock
test
mov
cmpsb
pop
jecxz
outsb
adc
mov
xlat
pusha
je
lds
lcall
xacquire
mov
jg
inc
in
pop
and
mov
cltd
clc
gs
mov
cmpsl
inc
pushf
or
ja
aad
ret
mov
imul
jo
pop
rcrb
out
out
cmp
test
dec
xchg
es
aam
mov
mov
je
sbbl
pusha
repz
fisttpl
fldenv
rorb
push
mov
jge
outsl
pop
addr16
adc
cmp
lock
cmpl
fsubrl
cwtl
push
lock
xchg
nop
mov
in
jecxz
mov
fadds
pop
andl
loope
sahf
pushf
mov
rep
pop
ja
fmull
call
jmp
pusha
pushf
cmp
pop
push
pop
xor
cltd
jl
pop
shrl
inc
or
into
add
pusha
pusha
jmp
mov
push
dec
loope
adc
jg
repz
xchg
pop
ss
cmp
add
pop
cmp
add
fcoml
xor
in
pop
ret
fsubr
xor
or
mov
js
adc
es
jmp
mov
push
test
movsl
pushfw
outsb
adc
cmp
and
cwtl
arpl
movsb
inc
mov
sbb
cld
fdivl
mov
pop
fmuls
add
andb
jne
imul
push
jnp
cmp
inc
pop
in
cmp
inc
rclb
mov
and
add
test
mov
in
dec
fcomp
std
xchg
mov
js
push
pop
hlt
in
cmpb
aas
dec
mov
in
mov
mov
or
sbb
loop
into
outsb
enter
pop
sbb
mov
lcall
ret
loope
mov
data16
sbb
stc
jl
push
xchg
push
push
xor
add
lock
shrl
pop
test
cwtl
pop
rorl
das
insl
cmp
out
rcrb
add
imul
fneni(8087
push
adc
jb
mov
insb
mul
paddusb
push
sbb
pop
add
lods
push
daa
nop
outsb
lret
xor
jge
ds
adc
add
adc
mov
xchg
xor
mov
fcompl
shl
cld
mov
aaa
fcompl
xor
test
bound
orl
shlb
ficomps
push
enter
clc
jo
add
icebp
inc
insb
push
sbb
pusha
hlt
mov
sbb
fdivrs
pop
imul
ds
out
push
lea
nop
mov
pop
js
dec
fcompl
nop
out
or
out
mov
insl
sbb
or
ficoml
out
cwtl
mov
aas
xchg
dec
and
aam
cwtl
mov
cmp
cwtl
punpckhwd
aas
dec
cmpsl
adc
int3
js
pop
inc
fabs
xor
inc
inc
push
out
fdivrs
push
outsb
in
mov
inc
jl
jp
add
je
out
dec
rcr
das
jnp,pn
pop
js
or
mov
pop
xor
add
mov
cwtl
sbbl
int3
sub
fistps
jl
dec
test
push
je
idivb
lret
mov
fsts
iret
pop
add
or
addr16
sets
call
out
or
int3
and
jl
sahf
arpl
pop
push
sbb
cwtl
fsub
xchg
lods
jp
test
cmp
push
js
mov
pop
mov
jecxz
pusha
add
cbtw
std
in
adc
loop
cmp
push
sbb
popf
push
cld
pop
add
lock
sub
pop
jnp
repnz
and
cmpsb
lahf
or
dec
mov
mov
in
fsubs
push
pop
adc
mov
fiadds
hlt
pop
neg
stos
mov
cld
xchg
xor
loope
dec
push
sbb
mov
pusha
and
sbb
stos
xor
add
call
xlat
mov
cmp
outsb
es
sbb
js
repz
mov
dec
jae
xchg
xchg
loopne
cmpsl
pop
out
jg
cmp
cmp
inc
or
pop
inc
fmul
fsubl
lcall
fisttps
fwait
fs
fisttpll
push
push
inc
jb
cwtl
add
scas
daa
arpl
adc
mov
cltd
aam
inc
jnp
pop
jns
jle
or
mov
dec
push
ljmp
pusha
lcall
push
clc
mov
cmp
in
pusha
lcall
ja
inc
std
jge
cld
enter
hlt
sub
dec
addr16
jge
mov
mov
nop
jns
inc
pop
inc
mov
mov
daa
add
adc
dec
dec
xchg
sub
sub
pop
cld
dec
and
inc
add
xor
lahf
push
nop
mov
lods
push
sub
jno
mov
inc
in
inc
or
pop
test
out
ret
jno
gs
clc
clc
sbb
leave
ja
out
jmp
xor
gs
sti
fs
sbb
fs
xchg
cmc
pop
jns
or
inc
push
adc
and
sbb
inc
insb
push
dec
pop
sbb
xchg
mov
fprem
and
test
pushf
repz
or
dec
push
pop
and
mov
xor
idivl
cs
mov
imul
push
cli
movsb
sbb
aas
pop
pushf
jne
jle
in
mov
ja
jns
push
clc
jmp
idivl
cld
hlt
mov
inc
sbb
xor
xchg
mov
popa
cmpsl
cli
mov
pop
sbb
cmp
lea
fwait
jno
push
mov
mov
iret
push
psubusw
sti
pop
in
and
lods
test
add
pusha
push
rclb
popf
push
adc
bound
test
ljmp
imul
pop
cld
int
shll
das
test
jp
push
popa
mov
mov
cs
outsl
lret
jl,pt
insb
push
pop
inc
add
inc
sub
mov
xchg
cmp
mov
insb
sub
xchg
pop
fidivs
xchg
sbb
push
gs
testl
jl
xor
cmc
sar
lods
nop
clc
ret
js
jg
xor
push
test
xor
inc
push
xor
cmp
mov
fisttpl
push
and
adc
shlb
call
into
pushf
out
sarb
repnz
fstps
int3
pop
int3
pop
mov
jp
lret
pop
lahf
adc
lods
jo
add
cmp
lret
je
cmp
pop
pop
sti
or
dec
pop
in
sub
gs
xor
push
mov
mov
push
or
movsb
add
pop
test
iret
je
mov
add
mov
in
outsb
and
fistl
mov
push
popw
bound
xor
add
cmp
mov
and
lods
and
pop
btr
dec
gs
fwait
jmp
dec
add
repnz
inc
enter
js
dec
xor
mov
push
adc
js
cwtl
in
mov
xor
dec
lock
rcll
push
js
ljmp
hlt
sbb
mov
js
dec
inc
call
call
pop
outsb
repz
or
test
jo
pusha
and
adc
std
scas
loop
enter
pusha
popf
mov
faddl
jge
mov
sub
imul
mov
lods
imul
insb
push
push
mov
int
insb
lret
hlt
cmp
movsb
and
pop
loope
icebp
insl
and
rorl
bound
mov
int3
test
adc
lods
aad
pop
loopne
test
cwtl
mov
test
or
cmpl
testb
dec
jo
mov
xchg
sub
mov
cmp
jno
and
xor
test
jl
pop
xchg
sub
je
push
sub
pop
inc
mov
add
popa
ja
sbb
xor
mov
adc
pushf
ret
sub
stos
sbb
push
sub
add
adc
push
orb
push
adc
pop
jns
gs
dec
andb
or
test
test
jl
push
mov
sub
inc
cmp
data16
sub
lea
std
mov
loopne
inc
push
pop
mov
mov
fucomip
jl
pop
mov
cmp
mov
aaa
sarb
lock
sbb
nop
and
xchg
enter
add
fs
cwtl
and
jo
aas
pusha
aaa
sub
and
push
or
pop
cmpsb
scas
pop
pop
sbb
push
add
and
xchg
mov
xlat
adc
insb
xchg
xchg
aaa
jo
lds
sar
push
ja
mov
mov
and
pop
mov
push
js
mov
adc
jl
fcompl
sub
push
pop
adc
xor
aaa
push
cwtl
pop
inc
in
sbb
incb
adc
cwtl
shlb
xchg
bound
aam
mov
lahf
in
call
inc
scas
nop
mov
lret
int3
push
jo
inc
js
adc
jbe
jno
inc
lods
lock
push
int3
pop
cwtl
mov
sub
xor
lcall
je
push
mov
gs
cmpl
in
fmull
xchg
sbb
lock
jne
sub
pop
inc
lock
loopne
insb
push
push
fsub
add
or
icebp
movsb
cmp
pop
push
mov
inc
cwtl
xchg
pop
mov
push
out
pop
dec
rcr
inc
dec
pop
aaa
jge
int3
enter
dec
mov
jnp
push
pop
pop
mov
add
adc
lcall
jle
or
rol
js
in
movsl
add
mov
outsb
pusha
js
test
add
mov
outsb
xor
adc
adc
push
jle
xor
nop
mov
in
lods
loopne
icebp
inc
andl
sub
shrb
pop
sti
shrl
fcoml
dec
outsl
inc
shlb
int3
cmp
jl
loopne
int3
push
shrl
mov
pop
scas
iret
mov
jle
arpl
jp
push
jmp
cs
or
jo
mov
pop
movsl
sbb
and
call
fwait
dec
cmpsb
das
mov
les
imul
pusha
adc
sbb
push
or
gs
test
mov
loop
or
dec
mov
jno
mov
pushf
outsl
lcall
rclb
pushf
outsb
pop
sub
mov
iret
jo
cmpsb
dec
arpl
hlt
rolb
mov
lods
mov
negl
add
xor
scas
leave
jl
pop
mov
stos
dec
xchg
hlt
pop
push
push
lock
pop
out
sbb
and
aas
jle
cmc
bound
shrl
add
inc
adc
xor
call
int3
push
mov
pop
sub
lea
repz
test
fwait
mov
and
pop
pop
sbb
fisttps
js
jo
std
in
xchg
in
dec
addr16
mov
adc
mov
fs
cli
pop
lahf
aas
andl
cmc
clc
les
sbb
jb
test
test
push
jo
jns
ret
jecxz
push
scas
ds
jl
je
cwtl
push
push
xrelease
mov
jl
cmp
pushf
shlb
jmp
cmpsl
jl
sub
sahf
mov
int
or
cld
pop
enter
cmpsl
sbb
mov
mov
out
dec
and
pop
movl
les
jbe
enter
je
push
imul
mov
enter
pop
sub
xor
adc
push
pop
or
push
test
xor
popa
test
jo
je
push
xor
movsb
cld
cmp
xchg
jo
sarl
or
pop
fwait
mov
test
out
xor
test
test
popf
sbb
test
jno
push
sbb
jl
in
mov
add
std
jp
lcall
fsubp
js
or
add
imul
fs
adc
leave
stc
cmp
xchg
lock
outsb
fcomps
scas
arpl
add
cwtl
imul
aad
bound
div
fcom
xchg
cmp
shl
xchg
iret
and
lods
sbb
cli
mov
cmp
leave
cmp
movsb
or
pop
ficompl
xor
inc
pop
fbstp
insb
sbb
or
cmp
cmp
or
aaa
push
mov
fnstcw
inc
test
lea
or
mov
xlat
je,pt
fwait
hlt
repz
in
push
cwtl
mov
bound
jg
call
fcoml
cmc
call
shlb
jo
minps
lock
sbb
rclb
and
or
test
in
lods
ret
jg
pop
out
adc
nop
sub
pop
adc
es
flds
or
das
shlb
cmp
imul
pop
mov
pop
pop
test
les
test
add
mov
pop
adc
call
push
pop
stc
es
inc
inc
pusha
inc
pop
scas
fidivrl
int3
mov
dec
fsubs
into
test
mov
mov
dec
cld
in
mov
ds
jl
mov
jp
std
jne
stos
mov
and
sbb
js
mov
fistps
xor
lcall
mov
add
lods
fmuls
pushf
movsb
push
clc
sbb
es
imul
cltd
mov
out
jno
fcoms
mov
fldt
sub
fdivs
lcall
and
add
pop
xchg
xor
pop
data16
xor
mov
fcompl
mov
inc
mov
fidivrs
cmp
addr16
mov
jo
pop
adc
fsincos
and
ret
pusha
and
addr16
or
clc
mov
cwtl
cs
mov
sub
jl
outsb
xchg
cmp
dec
mov
cwtl
xchg
jmp
cmp
add
nop
aam
dec
add
sbb
rclb
fmuls
insb
push
push
outsl
cmp
push
sbbb
cmpsl
fisubs
adc
shl
clc
aas
rclb
inc
xchg
pusha
adc
mov
or
add
cmpsl
js
dec
cmpsl
imul
mov
pusha
xchg
fs
and
push
rcrl
dec
addb
pop
push
je
rorb
loopne
clc
jl
test
in
inc
xorb
imull
sub
mov
cmp
add
sub
jl
mov
xor
push
hlt
pop
imull
lods
cmpb
pusha
bound
fmuls
outsl
data16
pop
or
mov
inc
pop
cmp
int3
js
mov
xchg
int
jle
pop
mov
push
fmull
mov
fs
out
pop
add
sbb
jg
pushf
clc
dec
or
xchg
sub
in
out
sbb
mov
mov
addr16
cld
jge
roll
stc
icebp
clc
cmc
fcomps
sbb
fdivrs
mov
jl
jl
cmp
fsubl
insb
cmp
xchg
loopne
out
pop
mov
sub
fsubs
addr16
pop
jge
cs
fmul
and
fisubs
popf
ret
sahf
test
lock
and
dec
mov
jns
adc
pop
xor
cmpsl
or
push
dec
sbb
in
mov
push
cmp
sbb
mov
push
xchg
push
sbb
sbb
sub
adc
jmp
jl
cmp
push
loop
adc
sub
adc
pusha
test
lahf
cld
idivl
jb
lods
inc
outsw
pushf
xor
add
sti
pushf
movsb
popf
cwtl
sbb
imul
sbb
test
dec
push
adc
adc
data16
mov
pop
test
dec
mov
jnp
enter
pushf
stos
test
dec
outsl
mov
lret
insb
pop
cmp
enter
pop
push
mov
ret
in
aam
push
orl
lods
jmp
jo
cmp
jae
fldenv
fimull
lret
in
rorb
mov
cld
pop
jno
mov
jle
sbb
or
inc
scas
call
pop
push
cmc
lods
std
insl
sbb
push
pop
adc
jg
pop
imul
fimull
jl
mov
and
iret
pushf
add
mov
or
mov
stos
cwtl
and
cmp
lods
jns
cmp
out
pusha
pop
mov
pop
lock
testl
out
sub
cmp
insb
pusha
or
inc
lahf
dec
jecxz
dec
dec
sbb
outsl
or
lods
inc
jo
pop
mov
add
and
lock
xchg
mov
in
cmp
dec
inc
mov
clc
fs
mov
dec
hlt
fdivr
xchg
and
xor
cmpsl
and
loope
je
xchg
sbb
addr16
dec
lock
in
sub
insb
cmp
and
mov
aas
add
cli
xchg
iret
push
xor
aaa
enter
les
loop
push
ret
mov
cmp
pop
aad
jg
test
xchg
inc
pop
iret
pusha
push
je
into
pushf
lcall
pop
cmp
pop
push
adc
scas
mov
repnz
jo
push
or
pop
push
jle
and
xor
lock
xchg
pop
or
jg
or
call
cmp
mov
out
and
js
jg
dec
pop
pushf
sub
stos
fs
sbb
sbb
lds
or
xchg
insb
js
push
call
xchg
enter
test
pop
sbb
stos
pop
mov
fdivr
cli
mov
and
xor
or
add
insb
sbb
in
mov
sbb
push
adc
pop
aas
push
mov
jl
in
popa
loop
fsubs
dec
pop
xchg
xor
push
push
movsb
add
fimuls
fstpt
pop
pop
fdiv
cmpb
data16
sbb
in
je
pop
jmp
mov
aas
dec
ficoms
xchg
outsl
mov
mov
std
lret
fsubrl
mov
and
cmp
sti
mov
push
push
mov
in
mov
cmp
fsub
cmp
pushf
fadd
cs
dec
clc
mov
leave
or
test
and
and
or
and
mov
ja
nop
subb
push
cmp
fisubrl
push
sbb
add
sbb
jo
cmp
test
cmp
mov
mov
or
gs
adc
out
pop
inc
add
enter
fcompl
ss
int
ljmp
inc
repz
add
jns
aaa
sub
inc
popa
int3
jo
out
sub
ja
and
std
jg
xchg
push
hlt
imul
test
js
dec
xor
enter
andb
add
std
jmp
dec
cmp
jmp
mov
mov
push
sbb
hlt
inc
jg
addr16
sub
mov
test
loopne
cmp
xor
cli
fs
loopne
sub
adc
hlt
pop
movsb
sbb
mov
lcall
into
sub
adc
das
add
dec
or
inc
aaa
and
int
jle
xorb
inc
xor
out
test
out
test
movsb
decb
bound
inc
dec
fadds
insb
aas
shlb
or
scas
ficoml
xchg
add
out
dec
cwtl
xor
xchg
pop
mov
arpl
and
add
and
or
inc
movsb
or
pop
cmpsb
xchg
or
push
adc
lock
and
ret
sbb
cmp
std
pop
xor
cld
insb
js
pop
out
bound
push
cli
in
and
pusha
push
push
ret
imul
insb
jecxz
pusha
in
sub
out
and
fcmovnu
jns
jle
leave
jns
clc
dec
mov
inc
lcall
enter
jl
int3
pop
add
add
sub
cmp
jecxz
enter
sbb
push
pop
fsubrs
fldenv
or
sbb
mov
jl
adc
and
jae
mov
dec
lods
pushf
enter
mov
fdivrl
push
faddl
fstpt
push
mov
orl
pushf
test
in
sub
addr16
in
sub
cmp
mov
in
mov
cmp
stc
cmp
xor
mov
clc
push
repnz
andl
pushf
and
pop
test
sti
popa
sub
imulb
pop
ret
cmp
arpl
rcrb
jmp
mov
addr16
mov
push
cmpsb
cmp
dec
cld
cbtw
push
dec
mov
dec
pushf
inc
movsb
xor
pop
inc
mul
outsl
dec
shlb
push
pop
ds
je
push
mov
fsubp
aad
add
int3
push
lods
fwait
cmp
ljmp
outsl
adc
iret
sbb
inc
aam
lret
bswap
mov
pop
aas
pop
test
out
sub
in
fmul
adc
sub
nop
lods
jae
aaa
pop
sbb
xor
xor
pusha
inc
je
imulb
hlt
leave
stc
xchg
test
ljmp
xchg
or
xchg
mov
dec
adc
fdivrs
insl
xor
sub
adcb
adc
std
or
lret
cmp
nop
je
push
sbb
jl
enter
push
jns
jg
inc
pop
cmp
cld
lock
enter
fdivrs
imul
mov
ficompl
test
jp
mov
fsubs
cmp
pop
push
enter
push
lods
inc
lods
or
out
push
andb
pop
add
sbb
movsb
add
popa
leave
push
sbb
insl
and
inc
leave
add
sub
mov
jbe
mov
int
arpl
in
push
lret
fadds
cmp
fldcw
push
jl
jnp
fldl
mov
push
ja
arpl
bound
dec
pop
mov
jg
sahf
add
mov
pop
bound
sbb
adc
lcall
mov
loop
mov
es
mov
or
jo
lods
adc
pop
add
sub
loop
dec
dec
push
lock
or
jl
bound
outsb
lods
stos
mov
mov
in
mov
cmp
roll
jmp
in
subb
pop
divl
es
sbb
nop
inc
fsubr
mov
cmp
and
loopne
clc
mov
imul
aam
and
mov
adc
and
jp
jmp
shlb
fstpl
mov
imulb
lods
sti
mov
mov
leave
dec
mov
stos
fcompl
stos
sub
adc
push
mov
add
pop
or
sti
mov
add
fcoml
fcoms
lret
hlt
dec
mov
xchg
insl
sub
add
pop
xor
add
push
xor
jne
add
das
jns
ja
xchg
pop
imulb
pop
and
mov
insb
cwtl
xchg
inc
rcrb
add
adc
clc
stos
fsubs
aas
imul
cmp
data16
dec
fadds
fisttps
in
pusha
fdivl
out
dec
push
pop
mov
mov
imul
pop
popa
add
dec
lock
cmp
mov
mov
jo,pt
pop
subb
pop
dec
int3
lock
rcrb
stc
rorb
push
cmp
les
inc
bound
jnp
and
dec
xor
test
ss
jl
or
adc
cs
mov
jp
pop
idiv
shlb
inc
sbb
je
insl
test
jno
pop
sbbb
sub
neg
fwait
loop
jl
nop
insb
mov
jo
fsubl
push
loopne
js
lcall
mov
test
mov
jbe
fcompl
or
insl
fs
dec
mov
adc
fcompl
cmp
aaa
fwait
adcb
popa
xor
mov
sub
cmp
mov
xchg
sti
adc
sti
roll
dec
shl
push
imul
mov
pop
ret
push
js
jno
push
sub
popa
mov
arpl
jmp
std
xor
je
sbb
imul
into
lds
cmp
test
cmp
and
jl
and
ja
sub
imul
filds
dec
or
cmp
inc
out
orb
mov
incb
js
adcb
cmp
fists
ret
aas
clc
mov
mov
adc
fcomip
pop
lahf
femms
jl
es
insb
dec
hlt
cmp
movsb
pop
orl
lods
push
test
imul
cld
pop
call
out
imul
inc
xchg
xor
outsb
cmp
pushf
icebp
je
cld
xor
aas
call
jbe
xor
push
lret
stc
mov
mov
mov
cmp
shll
out
sti
pusha
mov
cmp
jge
cmp
pop
push
mov
lock
out
pop
pop
and
mov
cmpsl
nop
stos
mov
les
jne
mov
dec
or
enter
dec
pop
out
outsl
inc
mov
add
clc
mov
lods
adc
push
push
pop
add
cld
add
jl
sub
adc
in
in
add
pop
ds
xchg
pop
sbb
or
mov
pop
test
inc
jo
ja
dec
addr16
sub
pop
movsl
cmp
dec
popf
push
push
adc
pop
fsubl
int3
scas
orl
cmp
dec
dec
ret
cmp
cmp
out
cmp
pop
dec
xchg
mov
push
xchg
push
and
imul
xor
xchg
pop
dec
jnp
sar
jge
jno
jl
jo
and
mov
mov
int3
xchg
pop
pop
sub
test
test
or
addr16
loopne
or
pop
sub
pop
mov
dec
pop
jl
cld
dec
jle
mov
adc
sahf
and
add
add
cmp
mov
cmp
inc
pusha
insb
js
xchg
enter
or
add
or
rcrb
adc
movsb
daa
jg
pop
adc
int3
mov
outsb
cmp
pusha
push
test
mov
xor
iret
jg
mov
or
arpl
push
test
jo
pop
mov
push
lock
subb
lahf
lock
sub
xor
dec
mov
jae
xchg
mov
adc
shll
icebp
push
loopne
mov
push
lret
xor
lock
pop
das
hlt
dec
lods
mov
cwtl
test
aad
xchg
pop
leave
jae
pop
or
fs
pop
stos
pop
out
test
test
mov
mov
sarb
lret
sub
test
movsb
inc
xchg
cmp
test
pop
aam
push
jns
push
pop
test
cmp
jo
mov
dec
jg
pop
cld
arpl
insb
sbb
insb
insb
push
popf
data16
sub
insb
cltd
or
mov
enter
fs
xchg
mov
add
pop
sub
and
test
add
sbb
pushf
inc
adc
xchg
sbb
cmp
out
insl
sbb
adc
push
mov
test
mov
cltd
insb
adc
jo
cmc
outsb
push
hlt
movsb
adc
pop
or
clc
pop
ljmp
aas
shlb
in
xor
orb
fs
inc
cmp
jp
int3
cs
push
sbbl
cmp
sbb
mov
add
sub
hlt
shrb
xchg
sbb
or
ljmp
sarl
sub
push
sahf
sub
cmp
sahf
rcrb
decb
bound
dec
jle
aad
mov
sbb
mov
fcoms
test
cmp
repz
push
push
out
setl
jb
pop
out
sub
mov
test
ja
pop
inc
in
xchg
lret
xor
jb
jo
insb
repnz
scas
loop
ret
pop
adc
not
inc
mov
jp
std
fs
mov
jno
mov
pop
mov
enter
add
push
sbb
sbb
fisubrl
ljmp
cmpsl
mov
dec
sbb
imul
mov
pushw
pop
lret
mov
imul
push
cmp
mov
jae
jl
insb
fcompl
sahf
lds
in
cld
mov
and
insl
jg
sub
push
cmp
insb
aas
sbb
pop
xchg
sbb
sub
in
scas
mov
rcrl
pop
test
lret
or
dec
lods
testb
or
jle
inc
mov
outsb
cmc
test
add
pop
pop
jns
adc
fldt
cmp
mov
mov
jo
lahf
ret
pop
es
test
xchg
incl
cmpsb
dec
mov
test
aam
test
mov
lods
or
faddl
sbb
fs
in
jnp,pt
fstpl
les
inc
outsl
inc
or
nop
fcomps
dec
dec
pop
fbld
mov
lock
cmpl
and
cmp
rorl
hlt
sbb
cmp
js
repnz
sti
popa
lods
fdivrl
mov
popl
decb
fiaddl
pusha
mov
pop
aad
aam
mov
push
push
mov
test
addr16
mov
cld
xchg
xchg
sub
sub
jl
sub
mov
nop
aam
cmpsb
out
pop
cmp
es
mov
mov
xlat
adc
nop
xor
hlt
lcall
push
mov
mov
push
inc
arpl
call
pushf
add
lcall
cwtl
add
jns
insb
xchg
stc
pusha
aam
adc
and
push
or
fldpi
mov
lahf
xor
sub
push
pop
sub
subb
out
jge
sbb
pop
add
jns
pop
push
and
sub
movsl
insb
es
mov
xor
pop
adc
pop
or
stos
adc
stos
jl
fisubs
mov
nop
xor
mov
aam
cmpb
mov
call
pop
and
mov
mov
loopne
insb
into
lcall
xor
pop
dec
fcoms
cmc
cmp
aad
push
xchg
nop
cmp
cwtl
fisttpll
sahf
dec
cwtl
mov
scas
test
jo
pop
in
jno
pop
in
pop
mov
or
inc
dec
in
and
push
loopne
mov
add
add
sbb
fcompl
cld
outsb
pop
pop
nop
hlt
mov
pushf
push
dec
mov
mov
stos
lock
fcoml
sti
inc
lret
mov
cmpl
test
repnz
lcall
mov
sbb
es
and
imul
cld
popa
dec
xor
sbb
mov
pop
adc
imul
push
jl
sbb
enter
data16
inc
cltd
cmp
js
pop
xor
pop
add
jae
dec
push
sahf
and
js
push
mov
pop
sbb
fsub
cmp
xchg
adcl
fsubs
cltd
mov
cwtl
gs
loop
fsubs
cld
push
cmc
out
jo
jl
outsb
mov
pop
loopne
leave
and
mov
adc
jae
enter
jno
or
fs
sbb
pop
add
cmp
xor
insb
repnz
add
inc
xchg
fdivr
mov
jge
imul
jge
and
jl
sarl
fs
lods
pop
loop
and
out
into
mov
std
xchg
sub
aas
mov
in
push
sub
into
push
in
xor
pop
jge
test
nop
cmp
mov
or
jns
push
jno
pop
dec
testb
cmp
je
adc
out
loopne
jg
in
mov
or
push
dec
popa
cmp
inc
gs
cwtl
pop
and
cmpsb
xor
pop
dec
sbb
inc
lods
jp
and
test
push
inc
stc
mov
int3
push
test
test
addl
iret
inc
add
fdiv
jbe
and
js
popa
jp
cmp
ja
cmp
mov
or
sbb
out
pusha
out
fcoml
push
ljmp
mov
sarl
sbb
out
cmp
pusha
sahf
push
call
add
or
push
fsubrs
sub
call
rolb
jnp
movsb
aad
test
imull
cmp
add
adc
icebp
enter
mov
imul
loop
jp
pusha
sbb
cld
pop
pop
push
shll
loopne
imul
nop
cwtl
enter
xchg
xchg
jmp
push
mov
dec
rcrb
scas
lods
or
ljmp
fldcw
mov
and
xor
gs
cmpsl
mov
jle
sbb
mov
mov
push
jmp
imul
aas
pop
xlat
push
nop
pop
or
mov
mov
inc
test
addb
push
clc
xchg
fcompl
movsb
movsl
dec
jae
ffreep
js
iret
andl
xor
aad
addb
cmpsl
dec
pop
jae
adc
push
in
sub
jo
sbb
clc
jo
pop
mov
sub
pop
pop
or
mov
fdiv
out
sub
or
je
aam
xor
jmp
js
or
int3
stos
lods
adc
jns
cmp
pusha
cmp
fwait
hlt
pop
dec
lahf
cmp
push
out
loopne
mov
outsb
clc
xchg
or
mov
stos
push
lcall
pop
mov
data16
pop
inc
dec
jno
leave
inc
imul
lret
gs
cld
aaa
ja
popa
jnp
dec
adc
lock
xor
inc
mov
xor
mov
mov
adc
pop
ljmp
mov
mov
adc
sbb
jmp
lock
pop
popa
xchg
xor
mov
add
mov
and
test
ja
jmp
jp
or
pusha
or
push
cmp
out
movsl
jl
mov
in
pop
scas
or
sbb
mov
add
or
pop
and
insb
or
gs
lods
xchg
test
stos
xor
dec
in
stc
pop
jne
pop
cs
aaa
pushaw
push
fs
dec
aad
lods
das
push
pop
pusha
push
bound
mov
xor
xchg
xchg
mov
xchg
fmuls
testl
mov
aaa
sbb
adc
and
mov
dec
mov
dec
imul
and
dec
jbe
mov
lods
fdivr
mov
std
cmp
jmp
inc
mov
out
jl
lock
mov
adc
iret
mov
xor
popl
pop
loop
push
insb
out
outsb
dec
xor
hlt
outsb
insb
adc
rcrb
push
push
mov
leave
in
jecxz
insl
test
mov
mov
dec
outsb
pusha
mulps
jo
cmpb
repnz
push
mov
and
out
pusha
das
jbe
and
inc
xchg
inc
js
mov
sbb
and
xor
out
inc
in
xor
pop
or
ss
pusha
or
test
out
sbb
push
jl
cli
test
in
js
clc
mov
mov
jbe
test
sbb
les
adc
pop
imul
fistpl
stc
fisubl
xor
pop
add
adc
cs
add
pop
sbb
rcr
ss
pop
inc
sbb
cs
or
int3
pop
cmp
in
test
inc
sbb
xor
jno
outsl
dec
mov
mov
cmp
out
add
dec
mov
mov
pop
hlt
mov
inc
jns
aas
mov
xor
xor
dec
push
inc
dec
bound
cmp
loopne
icebp
sub
add
cld
clc
scas
les
jb
mov
xchg
data16
loop
fsub
jg
fisubrl
xor
scas
dec
mov
or
add
push
mov
jo
mov
cwtl
popf
mov
out
add
pusha
pusha
pop
sub
xor
pop
lods
push
jl
sbb
mov
js
jge
sahf
test
pop
cmpsb
add
mov
sbb
movsl
and
adc
pop
je
sbbl
cld
mov
jb
les
jne
mov
repnz
mov
mov
cmp
add
sahf
adc
or
push
fmull
xor
subl
jmp
ss
cmp
mov
inc
cli
lock
and
cmp
popa
test
rol
sbb
je
push
cs
icebp
jne
sub
dec
jge
insb
sub
gs
adc
jnp
cli
jmp
push
pusha
movsb
andl
insb
fldl2e
xchg
int
pop
adc
pop
or
add
int3
mov
lods
xor
test
in
pop
repz
ret
pop
outsl
es
or
sbb
and
hlt
lcall
incb
daa
lcall
insl
push
add
adc
cmp
push
int
push
cmp
test
push
test
push
test
ljmp
cmp
adc
subb
leave
inc
pop
and
aas
add
and
xchg
subb
sbbl
add
insb
push
cmp
xlat
fcompl
dec
pop
cmp
mov
arpl
imulb
out
lock
loope
fdivs
pop
out
push
insb
dec
lods
nop
mov
sub
aam
cmc
cwtl
cmpsb
push
out
cwtl
adc
ss
mov
or
pand
mov
cld
rorb
int3
mov
ss
cwtl
mov
stos
js
sub
or
out
xchg
mov
jbe
je
cmc
sahf
jg
shrb
fcoms
or
sbb
scas
outsl
or
inc
mov
push
xchg
inc
inc
xchg
into
push
popf
push
mov
sub
js
fists
in
imul
push
pop
inc
pushf
or
inc
insl
fmull
inc
xchg
adc
or
shlb
ja
imul
nop
in
inc
outsb
mov
ss
pop
ja
mov
sbb
fs
jmp
repz
movsb
and
scas
mov
cwtl
mov
sub
jl
sub
sub
pop
cmp
lods
insb
repnz
sahf
movsb
in
cmp
daa
sti
js
mov
jl
imul
pop
push
lret
adc
rol
push
fcompl
mov
sub
in
roll
push
in
cmp
aaa
pop
jl
je
or
push
sbb
push
in
cmp
adc
mov
add
aam
jbe
mulb
nop
loope
arpl
out
cwtl
fidivl
inc
sbb
lcall
cbtw
push
aas
stos
push
pusha
sub
lods
imul
or
xchg
xor
mov
mov
jl
pop
and
cmp
clc
mov
cmpsl
iret
clc
mov
inc
mov
lahf
insb
pop
inc
fidivrs
mov
stc
xchg
xchg
insl
push
loop
aas
jl
pop
inc
mov
rclb
cmp
aam
addb
push
data16
push
xchg
mov
hlt
adc
bound
jo
aaa
mov
xor
out
int3
mov
or
sbb
jl
ss
add
sub
cmp
mov
jns
mov
outsb
insl
or
pop
xchg
mov
or
fdivl
and
loope
xor
push
shl
lods
fldt
mov
mov
push
xlat
popa
aas
mov
mov
jmp
xchg
outsb
sbb
jge
xor
mov
insb
add
hlt
sbb
pop
mov
mov
dec
sbb
inc
jno
cli
push
dec
popa
or
jae
in
bound
push
or
hlt
mov
xchg
push
sahf
cmp
fs
leave
jg
lahf
inc
insl
stos
les
gs
push
jl
and
push
insb
push
adc
insb
mov
xchg
mov
cmc
add
mov
lret
inc
or
jbe
cmc
cli
scas
jmp
repnz
aaa
or
adc
pop
push
in
cwtl
push
in
mov
test
js
pop
mov
pop
je
push
cmp
pop
jl
insb
sub
js
mov
pop
iret
jo
add
in
sbb
fdivrl
test
pop
mov
lcall
pop
and
ficoms
or
cs
mov
jg
das
scas
insb
jl
mov
jb
push
out
imul
mov
sbb
pop
mov
loop
hlt
xchg
push
and
mov
movsb
pop
es
cmp
out
xchg
popa
lods
xlat
xchg
in
lock
fstpl
fs
adc
lea
inc
icebp
aaa
mov
cmpsl
cmpsl
js
out
inc
aad
add
sbbb
ficoml
and
loope
in
add
imulb
xchg
stos
pop
ds
cli
mov
jo
push
mov
push
jl
test
jns
in
xchg
call
inc
in
add
out
cmpsb
cmp
call
insl
push
cmp
xchg
fstpt
adc
pop
xchg
cmp
js
cwtl
or
movsl
mov
fistpll
push
or
sbb
push
insl
outsl
int
pop
std
fcmovne
xchg
lods
push
adc
mov
faddl
sub
push
cmp
pop
insb
push
ret
cld
leave
mov
inc
loopne
bound
sub
addr16
lahf
dec
imul
cltd
frstor
or
andb
pop
pop
push
loop
or
fdivs
add
xchg
loope
cmp
mov
mov
outsb
negb
add
lock
cld
call
pop
xor
adc
and
hlt
or
stos
sub
movsb
or
pop
xor
stc
mov
inc
mov
cmp
dec
jg
jno
in
in
clc
jl
pop
cmpl
sub
push
sbb
and
and
or
nop
sbb
adc
pop
sti
xor
mov
sar
push
mulb
mov
ss
cld
pop
stc
and
mov
fldt
inc
xor
cmp
xchg
rorb
fidivs
addr16
jl
lret
cmp
adc
jp
fs
cmp
imul
add
in
xchg
fs
adc
or
pop
xchg
movsb
mov
fmull
outsb
jge
xchg
pusha
and
mov
jle
in
ret
mov
mov
and
addr16
push
lock
int3
jbe
lock
mov
push
movsb
andl
sbb
adcl
or
enter
mov
outsb
lods
dec
cli
fcomps
cmp
xchg
in
pop
push
in
cmc
popa
pop
je
loop
pop
pusha
add
in
jae
and
xor
fcompl
add
mov
mov
jmp
cmp
sub
xchg
sub
xor
nop
or
js
in
pushf
or
fmuls
or
fnstcw
jns
cmp
xchg
mov
fwait
sbb
icebp
decl
imul
cmc
sbb
aaa
addr16
cmp
mov
dec
pop
je
xchg
sub
int3
sub
repz
mov
jnp
push
popa
mov
mov
in
xchg
rorl
pop
jo
cli
lock
pop
sbb
mov
mov
dec
adc
pop
movsb
sub
fsubrl
jo
jno
loop
fistpll
xchg
cli
out
imul
stc
push
sub
mov
or
add
dec
cmp
popf
push
out
jl
nop
insb
mov
out
pop
or
inc
mov
sbb
pop
imul
xchg
sbb
ljmp
jnp
cmp
lods
call
lret
cmp
adc
jge
lock
loope
and
xor
loopne
jae
dec
data16
cmp
or
jnp
inc
push
in
add
in
clc
aad
je
mov
jne
mov
test
push
movsb
into
lock
hlt
scas
and
or
test
popa
xor
and
lock
test
mov
jl
std
scas
lods
lcall
cmp
sub
sti
aaa
sahf
jl
jae
xor
inc
push
sub
push
js
loopne
div
dec
and
pusha
pop
aas
and
rorb
xlat
pop
pusha
mov
dec
cld
mov
push
nop
jmp
js
test
enter
cmc
ja
bound
or
jl
lea
mov
push
orl
call
jg
scas
std
inc
push
lea
in
andb
pop
cmp
je
inc
fcompl
push
pop
xor
cmp
cwtl
aad
loope
rcll
adc
in
xchg
pop
data16
sbb
jp
js
insl
hlt
popa
inc
or
jg
or
xchg
je
clc
lods
test
sub
push
cmc
pop
xor
mov
into
push
jbe
movsl
flds
adc
push
add
inc
jmp
cmp
addr16
arpl
outsb
push
xor
mov
out
cld
xor
lret
pop
pushf
cmp
popa
adc
cmp
mov
mov
adc
and
jno
stos
aaa
xor
mov
mov
fcoml
add
or
movsb
cmp
pusha
adc
and
sahf
je
jle
mov
loopne
sub
xchg
sbb
xor
pop
icebp
aam
or
addb
cwtl
into
cmp
arpl
lcall
in
xchg
pop
inc
int
or
dec
mov
push
sub
jg
addb
fs
sbb
mov
mov
sarl
xor
enter
loope
xchg
lret
jns
je
rcrb
or
jo
jo
shll
test
pop
push
jb
mov
pop
push
and
add
out
or
mov
pusha
add
cmp
in
xchg
cltd
je
dec
jo
nop
or
and
lods
leave
or
jne
in
ficompl
enter
pop
mov
or
andb
pop
add
into
ror
movsl
hlt
js
shlb
sub
ds
jl
lret
mov
loopne
enter
pop
stc
jl
lret
js
push
adc
subl
movb
fcomps
popf
icebp
into
and
hlt
sbb
cld
pop
insl
push
inc
inc
ja
js
push
and
outsb
mov
inc
into
addr16
rcll
sbb
insl
xchg
pop
push
aam
sub
sbb
pop
mov
jl,pn
jmp
mov
sti
cmp
out
enter
bound
push
ljmp
nop
pusha
xchg
test
jl
pop
test
dec
jp
aad
pusha
and
ja
lret
rolb
push
mov
bnd
imul
add
pop
jo
xchg
nop
push
push
and
cmp
sbb
xchg
mov
mov
jge
nop
fstpl
mov
dec
jno
mov
xchg
rolb
xchg
pop
pop
sbb
xlat
xchg
int3
push
lahf
mov
hlt
es
push
or
mov
lcall
js
ja
call
arpl
mov
mov
repnz
imul
mov
test
shr
adc
dec
mov
jge
in
subl
jo
xchg
in
mov
mov
hlt
xor
out
lock
jbe
mov
fucomi
sarb
cwtl
loopne
insb
nop
lcall
pop
cld
sbb
dec
pop
jl
data16
sbb
outsl
je
pushf
add
cmp
jnp
out
add
aad
imul
add
loopne
popa
je
stos
in
mov
or
dec
out
arpl
sbb
nop
mov
cmp
cmp
jge
mov
push
jl
fcmovnu
enter
pop
push
xchg
outsb
add
sbb
lcall
lcall
fwait
addr16
movsb
divb
inc
addr16
add
add
js
mov
data16
int3
jno
fcoms
mov
or
push
clc
test
pusha
cmpsl
cmpsb
js
mov
mov
fstl
push
aaa
clc
jo
sbb
xor
imul
push
xor
js
notl
fnstsw
popf
test
js
jo
xor
and
dec
or
xor
push
test
jecxz
insb
mov
or
xor
jl
lock
xchg
push
int
dec
imul
cmpsl
std
or
lcall
out
in
jae
cwtl
fnsave
mov
adc
std
mov
movsb
dec
out
xor
rcrb
lods
mov
pushf
stos
push
pop
fbld
push
jo
ss
push
xchg
hlt
jl
adc
or
inc
cmp
fidivs
sbb
cmp
dec
sbb
lock
inc
pop
mov
sarl
add
jo
sub
out
add
out
jg
adc
and
imul
pop
xchg
push
push
jbe
fs
je
mov
test
enter
push
sarl
xchg
dec
js
lods
stc
in
sbb
mov
jge
adc
pop
adcl
jnp
pop
in
dec
add
pop
push
push
fdivr
pusha
cs
jo
mov
jle
stos
sti
adcl
js
jno
or
fdivl
loopne
imul
adc
bound
push
adc
pusha
je
cmpb
sub
pop
insl
jmp
mov
mov
pop
sbb
or
imul
rcll
cmp
je
mov
push
push
movsl
lret
xchg
push
pushf
ljmp
dec
stc
sbb
sbb
movsb
add
jle
enter
pop
push
ds
xchg
mov
sub
push
pop
in
and
push
add
xor
mov
orb
shlb
popf
fwait
in
sti
or
xchg
pop
inc
and
fst
pushf
mov
test
mov
cmp
hlt
clc
repnz
mov
xor
test
or
repnz
xchg
cld
mov
xchg
dec
dec
js
test
popa
out
fsubrl
push
icebp
push
sbb
dec
jge
lret
out
sbb
out
sahf
cmp
clc
mov
pop
push
mov
xchg
jl
dec
xor
mov
sahf
movl
inc
sbb
adc
cmc
inc
mov
cmc
add
imul
cmpsb
push
jnp
jle
add
sbb
int3
idivb
mov
cmp
lahf
or
fdivl
inc
mov
mov
cwtl
cli
into
mov
sbb
ficompl
and
popa
sahf
adc
ljmp
subb
sub
fcompl
mov
jns
aam
push
push
or
and
test
cmp
mov
xorb
sub
and
imul
inc
push
ljmp
and
aam
add
or
jge
jmp
insl
adc
and
mov
push
sti
and
push
mov
mov
xor
lret
movsb
push
mov
cld
cmc
lds
push
push
xchg
push
sbbb
fcomps
push
cmp
aad
add
mov
clc
xor
push
lods
xchg
and
das
call
mov
icebp
cmp
je
mov
mov
and
xchg
push
data16
clc
rcll
call
mov
insb
jae
rcll
or
push
clc
sbb
jmp
lods
int
dec
imul
call
int3
test
fmuls
xchg
push
movl
outsb
pop
js
fstpt
js
test
cld
mov
dec
xchg
jge
testb
cmp
fsubs
addb
adc
outsb
inc
xor
cmpsb
jmp
mov
pop
ficoml
mov
test
sbb
sahf
push
pop
ljmp
dec
shrb
pop
push
out
ljmp
cli
in
nop
movsb
aam
cwtl
push
and
push
xchg
loopne
sbb
stos
pop
in
mov
mov
fs
into
or
sbb
xchg
and
lcall
out
lods
adc
fcompl
mov
ret
xor
dec
jl
pop
je
lret
scas
pushf
mov
imul
and
push
sbb
and
aas
fcoml
pop
jmp
es
call
mov
imul
mov
add
fimuls
jge
divl
dec
cwtl
add
xor
insb
mov
fnstenv
sbb
ds
xchg
dec
mov
adc
icebp
jge
stc
test
fwait
xchg
popa
sarl
cmp
das
nop
mov
dec
mov
jnp
adc
shll
xchg
xchg
lods
insb
inc
sub
sbbb
ret
xchg
mov
pop
repnz
sub
mov
shr
popa
or
mov
clc
mov
call
or
add
adc
pop
xor
cwtl
fs
sub
lcall
mov
or
aam
jl
sub
jmp
ds
pop
adc
into
es
aam
lock
or
aam
test
xor
xchg
or
push
mov
cmp
add
lret
aas
es
sub
negl
xchg
xlat
outsb
and
cltd
fcomps
and
adc
xchg
mov
fcoms
ss
push
clc
mov
inc
pusha
ss
shrl
jo
xor
arpl
mov
jl
mov
les
sbb
rcrl
leave
dec
pop
orb
pop
into
inc
and
inc
cltd
push
popa
sbb
lock
mov
shrb
push
mov
adc
aas
fsubs
popa
mov
inc
push
mov
add
jns
ficompl
pop
in
jmp
enter
pop
addr16
in
and
mov
push
fsubl
scas
sub
int3
pop
lock
mov
inc
push
mov
pop
cli
sub
stos
outsl
cmp
inc
sub
push
cmp
lcall
cmc
sbb
out
out
pushf
lret
in
icebp
aam
sub
mov
aam
adc
xor
aas
sbb
movsb
aad
sbb
add
jl
add
test
mov
nop
inc
call
cltd
cmpsl
mov
stos
int3
shll
clc
rcr
pop
mov
cmp
or
push
jl
mov
or
fidivrl
shrb
pusha
nop
call
pop
pop
xor
inc
sahf
cld
mov
loopne
jl
adc
dec
mov
inc
xchg
mov
xor
pop
shlb
mov
push
stc
shrb
popa
pop
jmp
inc
repnz
enter
ror
hlt
pop
fisttpll
and
dec
dec
call
and
enter
js
shl
pop
lcall
testb
lret
lods
inc
gs
xor
pop
push
pusha
sbb
fbld
lahf
mov
mov
xor
in
fwait
cmpsb
imul
inc
mov
arpl
js
in
pop
pop
mov
cwtl
testl
pushf
xchg
pop
and
sbb
pop
push
mov
shlb
popa
ret
stc
jl
les
cmp
mov
pop
mov
mov
fnstenv
add
pop
divl
push
and
or
add
xchg
sub
sbb
push
lcall
addr16
fldcw
pushf
out
or
js
outsl
mov
xchg
lret
cld
fisubrl
insb
pop
xor
xchg
cld
out
pusha
mov
jg
cmp
enter
cld
mov
cmp
dec
xchg
sti
adc
imul
lret
call
jb
push
pop
cmp
mov
mov
sbb
sub
cld
inc
dec
int3
mov
pusha
pop
lahf
fs
iret
jp
pop
or
push
cmc
hlt
sbb
pop
out
pop
jg
fisubrs
pop
fcmovnb
mov
in
mov
push
imul
adc
lea
adc
push
jbe
inc
inc
fcompl
shll
mov
js
rorb
pop
or
push
in
push
xchg
ret
pop
mov
dec
scas
push
scas
add
imul
push
adc
jo
pop
add
sbb
push
inc
dec
arpl
inc
inc
and
jl
je
sbb
aas
mov
lret
or
cli
sub
mov
sub
and
rorl
bound
dec
in
out
mov
fistps
lods
jnp
das
nop
mov
xor
iret
insb
lcall
fidivrl
jae
hlt
sub
mov
enter
arpl
lcall
push
pop
test
js
insb
pop
arpl
dec
and
push
xchg
jl
inc
or
mov
mov
movsb
inc
cmp
mov
es
jae
fsubrs
dec
jns
cmp
divb
push
rcrb
sub
ljmp
dec
sbb
add
outsl
mov
dec
imul
shll
pop
fsubs
ds
push
mov
mov
inc
call
in
mov
cmp
cli
sti
aas
or
bnd
adc
aas
js
mov
movb
and
jo
jb
dec
mov
mov
sub
jl
sub
das
je
fildl
cmp
faddl
adc
cmp
push
mov
inc
pusha
and
call
add
fcoml
nop
lock
sbbb
sahf
out
or
xor
xchg
xchg
xchg
aam
imul
fwait
out
jns
fmuls
and
push
roll
lret
sbb
aas
pusha
adc
in
mov
sub
push
addr16
push
add
fs
shl
mov
push
icebp
add
xor
jo
xor
cmp
or
sub
call
jl
push
pop
lds
dec
dec
and
or
sbb
jp
stc
pop
xchg
lds
sub
push
dec
cmp
add
mov
fcoms
cmp
or
push
sbb
mul
call
je
ret
pop
xchg
sub
test
jl
pop
leave
nop
std
je
pop
out
pusha
imul
aam
xchg
pop
mull
lods
push
mov
insb
loope
push
dec
cmp
jo
mov
mov
imul
adc
sbb
adc
or
push
pusha
pop
daa
outsb
out
push
cld
mov
xchg
push
call
nop
imul
mov
dec
hlt
imul
jno
or
lcall
and
push
xor
jo
xchg
arpl
popf
pop
adc
imul
sbb
insb
dec
mov
adc
shrb
stos
popa
iret
ret
pusha
sbb
cld
pop
mov
jg
call
xchg
cmpsb
lock
lock
arpl
lret
loop
inc
jo
stc
clc
xor
mov
stos
in
fcompl
sub
mov
pop
dec
xor
shrb
lret
cmpsb
lahf
and
dec
cwtl
xchg
decl
ret
bound
inc
insl
and
in
sub
add
sub
mov
push
and
push
xchg
ja
out
sbb
dec
pop
xchg
inc
faddl
mov
fucom
and
xor
js
iret
jp
sub
cmpb
xchg
pop
out
sub
jo
push
insb
dec
fdivs
cmp
xchg
mov
jp
inc
leave
mov
stos
cmp
or
jle
pop
in
out
lcall
cmp
enter
xchg
arpl
mov
je
xchg
push
outsb
cwtl
outsl
sbb
imul
nop
xor
sahf
nop
pop
cmp
jp
hlt
push
cli
xlat
adc
inc
sub
aam
xchg
cmp
mov
cmpsb
pop
cli
insb
pop
in
adc
test
pusha
cmc
dec
mov
adc
shr
inc
adc
jns
jb
or
pop
cltd
sub
mov
fildl
adc
aam
shrl
fsubrs
repnz
jmp
cmp
push
push
dec
mov
insl
fcoms
xchg
mov
cmp
aas
pop
jl
decb
aaa
cld
sbb
sbb
xchg
jg
mov
mov
repz
cmpsb
pop
ret
push
mov
pop
xchg
fwait
aad
mov
mov
mov
and
loop
test
aad
call
or
stc
jle
push
andb
clc
and
fdivs
cmpsl
add
lods
shrb
imul
cmp
test
mov
insb
call
inc
imul
jp
outsb
pop
xor
push
pusha
stc
into
and
je
jl
in
dec
out
popa
mov
adcb
lcall
clc
xchg
notb
add
jg
outsb
loopne
mov
test
mov
js,pt
xchg
stos
popa
lret
out
cwtl
mov
outsb
in
jl
push
mov
data16
xor
lret
das
lods
and
addr16
popf
dec
jl
cmp
loope
das
insb
nop
call
loop
cmpsl
ret
ret
or
loop
lods
stos
cmp
test
push
mov
fsubs
jmp
aas
jl
mov
cld
sbb
ret
js
pusha
mov
cwtl
push
jmp
mov
fcompl
xchg
js
xor
jle
xor
mov
and
sbb
push
fisttpll
mov
sub
inc
jo
out
pop
sub
dec
xchg
clc
mov
fnstenv
movsb
enter
jl
pop
pop
xchg
push
push
push
daa
add
mov
dec
xor
cmp
imul
fs
push
lock
fdivl
cmp
test
enter
sarl
fs
stc
jl
aaa
cmp
xor
push
cmp
pop
in
fsubr
cmp
out
outsb
and
dec
jns
xchg
leave
test
popa
adc
push
pop
pop
adc
in
or
mov
enter
clc
adc
dec
sbb
lods
pop
lret
cmp
xor
mov
pusha
lahf
outsl
sbb
adc
in
inc
jne
stos
data16
push
dec
pusha
jns
in
mov
pusha
loopne
aaa
push
push
test
mov
push
fcoms
iret
adc
push
mov
imul
or
xor
mov
mov
cmc
mov
mov
insb
or
sti
fidivrs
stc
jle
cmpsb
enter
cmpsl
bound
mov
bound
into
ror
and
cmp
nop
jno
sbb
pop
clc
dec
cmc
orb
sbb
dec
mov
sub
inc
cmp
scas
pop
cmp
jecxz
jb
mov
std
pusha
into
fs
cwtl
dec
je
shrb
sbb
mov
pop
xchg
fdivl
jno
call
movsl
lock
fstps
mov
add
dec
fdivrs
dec
aad
insb
stos
mov
mov
mov
push
push
push
fadds
fmuls
pop
clc
mov
fyl2xp1
cli
pushf
inc
cmp
test
outsl
addb
pop
clc
cwtl
inc
pop
dec
in
dec
cmp
aad
cmp
out
push
fcompl
xor
dec
sbb
push
or
xor
js
inc
cwtl
fwait
xchg
sub
xchg
jo
mov
push
inc
mov
call
push
sbb
pop
dec
insl
inc
sub
mov
leave
out
cwtl
cwtl
sarb
jl
ljmp
pusha
clc
je
insl
fwait
repz
lret
lods
cmpsl
mov
fbld
in
call
xchg
cmp
dec
push
jae
xchg
and
jns
add
cwtl
mov
gs
mov
sarb
add
push
test
int3
cmc
jmp
jge
jmp
idiv
enter
data16
inc
enter
test
lret
jl
mov
sbb
scas
arpl
popf
hlt
loopne
cmp
push
shlb
and
cli
cld
pop
dec
xor
dec
cmp
rolb
mov
imul
dec
enter
cmp
rcr
fsubrs
js
inc
cwtl
fs
jg
mov
in
int3
xchg
jmp
lods
sbb
out
fcompl
and
test
in
mov
push
stos
call
in
cwtl
mov
fnsave
mov
test
fcomps
enter
popa
mov
aad
dec
mov
mov
aas
adc
std
or
inc
and
mov
mov
jo
js
insl
xlat
add
roll
xchg
or
lods
fmull
jb
jle
lods
popa
cmp
nop
test
push
mov
fisubrs
add
mov
jl
in
mov
cmp
fidivrl
lock
jns
pop
push
cmp
or
add
pop
jp
jnp
rorb
mov
testb
imul
jno
jp
mov
das
shlb
fadds
out
test
aas
cmp
sbb
push
adcb
nop
divps
or
xchg
mov
jge
lods
mov
xchg
xor
mov
and
dec
arpl
or
ret
inc
xor
mov
mov
cld
jnp
fcompl
sahf
cmp
xchg
xor
adc
push
xor
roll
imul
out
mov
xor
adc
or
inc
pusha
dec
pop
push
adcl
cmp
pop
push
mov
cmpb
inc
stos
cltd
push
cmp
icebp
mov
sbb
js
test
or
lods
or
mov
or
pusha
sub
push
push
sub
fwait
je
mov
cli
js
adc
dec
sbb
adc
pop
jno
inc
xor
jo
push
mov
enter
mov
push
cmp
hlt
pusha
iret
call
mov
mov
inc
and
and
push
std
mov
enter
pop
outsl
lahf
pusha
sti
jle
jnp
pop
arpl
and
jg
addr16
xor
pushf
imull
test
mov
push
jo
fcompl
sti
clc
pop
or
mov
add
shrl
in
fcomps
push
pop
insl
mov
bound
lods
mov
mov
xor
lea
sub
mov
pushf
inc
lock
fwait
loopne
je
mov
lock
cmp
fisubl
test
or
cmp
fsub
les
push
add
cmp
gs
dec
mov
sbb
push
outsb
hlt
adc
clc
orb
lods
and
sti
pop
add
push
hlt
hlt
jns
outsb
or
popf
fs
mov
mov
lock
lods
pop
ja
add
rolb
test
xchg
push
aad
hlt
or
push
push
sti
in
movsb
xor
inc
fsub
jmp
mov
mov
fs
pushf
call
xor
xor
leave
pusha
rolb
or
xchg
in
mov
inc
xchg
jl
jbe
dec
call
pop
test
xchg
shll
cwtl
sbb
cmpsb
jo
in
sbb
add
inc
push
or
movsb
and
cmp
mov
cmp
mov
push
fbld
sub
adc
insl
pop
pushf
push
je
andl
sbb
cli
js
sbb
shlb
sub
lods
lods
inc
pop
call
sar
sub
sbb
iret
jno
outsb
daa
cmp
jecxz
insb
pop
cmpb
fadds
jl
rorl
subl
lock
mov
pop
mov
push
and
stc
aaa
xchg
xor
add
loop
sub
pusha
pop
aam
jae
or
push
scas
xchg
int3
fsubl
icebp
dec
xchg
pop
loopne
je
or
dec
push
cmp
rcrl
rcrb
or
cmpsb
inc
fs
rcrb
xchg
sub
aam
in
dec
jo
repz
cmpb
pop
loop
stc
rcr
mov
mov
int3
pop
inc
adc
mov
je
push
xchg
mov
adcb
pop
cmp
cld
inc
xchg
push
add
pushf
mov
cli
sub
je
fdivrl
mov
add
fwait
outsb
jns
jb
jp
jge
cmpsb
lods
in
xchg
mov
cmp
loope
ljmp
sbb
xchg
in
ficompl
in
imul
pop
sbb
fstps
push
stc
mov
movsb
add
push
mov
js
lret
nop
arpl
daa
dec
test
idivl
data16
sub
lcall
jo
inc
pop
and
xchg
jge
test
cwtl
xor
xchg
andb
in
repnz
iret
mov
pop
movsb
mov
xor
mov
insb
stos
sbb
mov
cmp
jg
repz
negl
sub
push
xchg
push
ja
scas
hlt
hlt
mov
call
push
negb
bound
enter
js
adc
jge
xlat
dec
insb
mov
push
mov
lret
xchg
and
in
mov
rcrb
int
ljmp
pop
push
pop
pop
jl
or
lods
test
push
pop
sbb
int
fistl
mov
cmp
mov
aaa
jecxz
rol
mov
pop
or
bnd
pop
clc
in
xor
push
dec
aaa
test
cwtl
xchg
pop
ret
add
adc
jo
insb
push
or
jne
mov
mov
xlat
xchg
loop
rolb
call
scas
jns
iret
insb
xchg
test
cmp
leave
cld
mov
popa
clc
adc
popf
in
sbb
cld
pop
pop
frstor
xchg
dec
sbb
fdiv
out
jg
sbb
pop
jno
sbb
call
fs
sbb
push
out
cld
push
out
inc
out
add
sbb
fmuls
loopne
mov
lock
push
push
or
call
leave
xlat
mov
fnsave
stc
insl
nop
test
mov
pusha
scas
shlb
or
insl
mov
shlb
js
sbb
push
lcall
mov
pop
add
out
imull
adc
mov
fidivrl
jns
imul
cmp
js
fsub
int3
mov
pop
jns
inc
pop
sbb
in
sub
cmp
inc
add
and
cwtl
mov
xlat
in
cwtl
scas
je
jns
jne
cmp
loopne
pop
jecxz
xchg
inc
mov
movsb
sbb
nop
enter
cmpsl
or
loopne
lods
iret
mov
fcmovne
adc
pop
nop
xchg
jp
cmpsl
dec
fdivrs
enter
sbb
mov
test
sahf
cmp
or
daa
loope
mov
xor
sub
out
mov
pusha
cmp
insb
cwtl
pop
inc
push
mov
fwait
cmp
lret
pop
call
jb
mov
js
push
into
jns
push
mov
cmp
jns
cmp
movb
mov
xchg
sbbb
inc
pop
adc
lods
mov
sub
cmp
xor
out
mov
test
jp
int
xor
lcall
cmc
arpl
lret
fcompl
es
dec
and
cmp
negb
enter
mov
sbb
mov
mov
and
test
mov
sbb
aaa
out
sbb
jo
pop
push
pop
push
sti
test
adc
lcall
mov
and
xchg
adc
lods
int
add
out
int
into
push
inc
inc
mov
pop
sub
pop
fidivl
inc
loopne
adc
loope
mov
sub
cwtl
rcll
insl
fdivrl
hlt
pop
sub
lcall
dec
xor
jg
pop
pop
dec
mov
test
in
dec
pop
notl
nop
je
mov
div
adc
add
daa
les
and
sbb
dec
shrl
push
jmp
mov
dec
fcomp
add
and
adc
xchg
ljmp
jl
int3
jp
inc
lret
mov
mov
rcrl
adc
mov
nop
cs
mov
je
jg
adc
fadd
or
jl
add
lret
push
fisubrs
mov
jg
cmp
mov
sti
leave
mov
and
pusha
dec
xchg
cmp
adc
es
cwtl
mov
jne
push
sub
sbb
dec
hlt
sbb
pop
popf
adc
in
jle
mov
xor
lods
jo
fisttps
movsb
cwtl
dec
fwait
adcb
xchg
cld
fcoml
or
cmp
jl
out
cli
push
mov
mov
xchg
pop
sbb
out
xchg
jl
mov
test
mov
je
scas
negl
mov
add
sbb
aas
in
cs
clc
lods
jnp
inc
insb
outsb
test
xchg
pop
jnp
adc
xor
push
int
sbb
loopne
and
sbb
arpl
mov
and
add
push
mov
stc
fbld
pushf
ljmp
pop
enter
bound
fstps
je
in
xor
sbb
push
icebp
sbb
out
call
mov
pop
sbb
inc
stos
pop
add
mov
sbb
cltd
dec
je
jl
outsl
cmp
pop
hlt
add
jg
pusha
sarl
dec
lods
xor
and
lcall
dec
sbb
pop
cmp
cmp
fdiv
test
ror
icebp
inc
repnz
in
lock
rol
jp
and
xor
xchg
into
cwtl
jns
pop
and
and
sub
push
and
rolb
enter
inc
cmc
jo
leave
xor
fnstcw
loop
je
inc
pop
push
cmpsb
lods
lods
add
sub
movsl
push
enter
fcomp
or
add
jns
pop
loop
mov
xor
int3
xor
sbb
xor
lcall
cmp
mov
clc
jbe
push
insl
sub
xchg
pop
dec
sub
jge
mov
packsswb
cld
mov
je
mull
pop
aas
loopne
dec
sub
mov
bound
adc
pop
inc
xchg
shll
sbb
cld
out
insb
pop
and
or
mov
xchg
aaa
nop
faddl
nop
in
in
out
enter
out
inc
push
jno
sub
dec
dec
mov
jo
fs
pusha
orb
jl
or
cli
jbe
outsb
mov
mov
push
pop
dec
je
add
data16
cmpsl
mov
mov
fidivrs
arpl
push
insl
sbb
push
mov
fistpl
pop
push
lods
jge
cmp
aas
pusha
das
pop
int
sbb
cli
jb
xor
es
enter
mov
cmp
sbb
jmp
insb
pop
add
lret
pop
faddl
scas
pop
mov
or
fcompl
pop
hlt
push
popf
cmp
andb
pusha
enter
mov
or
sbb
xor
arpl
adc
xchg
shl
pop
mov
adc
decb
pop
mov
cs
adc
in
xor
xchg
mov
push
aad
pop
mov
and
cwtl
jl
rorb
dec
xchg
fstpl
fiaddl
stc
pop
rorb
aam
dec
pusha
jmp
xchg
insb
div
sbb
and
fdivrl
imull
shlb
push
enter
adc
hlt
dec
mov
dec
pop
sarl
mov
jp
cwtl
push
mov
adc
es
insl
mov
shll
pop
xchg
arpl
out
push
sub
jl
pop
mov
shlb
jl
xchg
pop
pop
in
jge
aaa
inc
pop
or
lcall
jno
mov
cs
fists
and
shlb
jo
jg
lods
pop
jbe
adc
jp
mul
stos
mov
js
loope
out
arpl
pop
dec
mov
pop
jle
in
sub
pop
mov
and
outsb
fsubrs
xchg
sub
mov
cmp
out
rcr
sbb
cld
xor
movsb
add
hlt
ficompl
idivl
pop
addr16
inc
sbb
fstp
movsb
jns
mov
fldenv
jbe
xor
and
xchg
sbb
push
jo
inc
cmpsl
push
cwtl
fldl
mov
pop
inc
int3
jmp
dec
adc
or
dec
clc
mov
imul
adc
jo
aas
cli
add
hlt
enter
cmpb
mov
pusha
push
cmp
pop
cs
mov
js
jp
adc
orb
imul
cmp
nop
push
dec
mov
push
jg
clc
test
fistpl
pusha
or
push
fsubl
std
pop
jnp
cmp
mov
mov
mov
insb
cmp
add
test
in
insb
out
ds
insb
ljmp
xor
jmp
pop
insl
movsl
add
mov
inc
in
data16
lods
cmpsb
les
and
jae
sub
imul
xchg
stc
fdivr
xchg
sub
in
dec
xchg
sub
insb
and
cmp
cmc
je
iret
or
jmp
pop
and
xor
mov
clc
fs
and
xchg
dec
cwtl
movsb
mov
ror
cld
outsl
cmp
clc
sbb
les
xchg
lods
daa
es
jge
xor
mov
sbb
pop
mov
adc
push
xchg
sub
pop
dec
push
popf
cwtl
and
test
fidivrs
pusha
lods
mov
pop
cmp
fcmovnb
cmp
push
adc
dec
lahf
dec
outsb
clc
push
pop
cmp
mov
cwtl
mov
cs
push
add
icebp
cmp
sbb
fldenv
dec
imul
fdivrs
stos
pop
xor
add
sub
mov
aam
call
sbb
push
rcr
inc
cmp
adc
lods
sub
or
add
dec
push
imul
clc
sahf
and
int3
shlb
adc
subb
addl
fs
jae
mov
ja
cmp
xor
sub
or
gs
push
dec
adc
fdivrs
lret
pop
aad
aam
xchg
sbb
jne
popa
out
cld
sub
hlt
fmuls
mov
fcompl
mov
push
cld
imul
sbb
sub
mov
mov
and
pop
pop
and
cmp
sbb
cwtl
jo
pop
and
cmpsb
gs
sub
les
cmc
jno
dec
or
fistpl
lret
aaa
sbb
roll
or
pop
adc
jge
push
int3
dec
jb
cli
xchg
mulb
add
jo
out
hlt
cmpl
sahf
xchg
dec
movsl
nop
xchg
das
loopne
call
jno
ljmp
sbb
cmp
insb
je
sub
push
mov
aam
jns
inc
pop
lcall
xchg
in
cmp
and
dec
ljmp
xchg
cmpsl
call
stc
push
push
push
push
fmull
scas
pop
xchg
clc
inc
movsb
data16
call
fsubr
dec
mov
mov
loope
rcll
pusha
loopne
jb
out
or
lock
in
mov
insb
aad
sbb
outsb
pushf
add
or
dec
or
hlt
int3
jns
sbbb
adc
ret
jbe
mov
add
aam
insb
lock
xchg
pop
and
push
mov
leave
nop
lcall
jo
mov
sbb
ss
fwait
leave
jb
enter
pop
xor
cmp
fsubs
push
pop
xchg
push
nop
pusha
aam
push
adc
or
lret
insb
pop
test
cltd
lods
jne
pop
pop
out
in
cld
xchg
push
nop
and
mov
cmpsl
and
call
push
pusha
jns
jns
out
xchg
aam
movsb
xorb
jl
add
mov
ja
xchg
popa
in
andl
stos
xlat
push
jecxz
xor
enter
mov
jg
cmp
and
mov
mov
fcompl
xchg
jnp
dec
sbb
mov
xchg
jmp
pop
cmp
inc
addr16
jecxz
push
out
lods
cld
jl
pop
in
sbb
and
loop
pusha
test
cmp
inc
adc
mov
bnd
jne
pusha
in
pop
jnp
mov
test
pusha
loope
xorb
push
jns
jg
or
mov
dec
out
mov
and
into
sbb
lods
in
js
lcall
repnz
icebp
lcall
pop
pusha
addr16
pop
test
lcall
sub
inc
pop
pop
dec
pop
mov
insl
hlt
test
xor
dec
sbb
mov
mov
shrl
xchg
add
fdiv
jns
test
decb
or
mov
jo
test
daa
pushf
das
jge
jl
cmp
or
out
xchg
cmp
mov
scas
cmp
jo
ja
or
cmp
and
pop
insl
pop
or
stc
out
push
aaa
adcl
or
test
mov
test
push
inc
adc
cmp
fs
pop
pop
dec
sub
adc
call
or
bound
lods
fcom
aaa
scas
movsb
sbb
cmpsb
push
cwtl
test
xchg
ficompl
insb
fdivrs
outsl
aas
lods
mov
push
or
sbb
aaa
icebp
movsb
fsubrs
das
aas
pusha
dec
pop
out
pop
jo
lock
clc
sbb
add
xor
insb
test
jl
std
push
cmpsl
ret
inc
sbb
nop
mov
stc
sub
bound
xchg
cwtl
dec
mov
mov
or
inc
and
call
and
pop
pop
adc
hlt
xorl
pop
fsubr
int
mov
inc
sbb
cs
push
test
stos
push
cld
jbe
add
fsubr
orb
pop
sub
pop
jb
imul
in
lcall
mov
dec
add
xchg
mov
push
lock
push
sbb
and
mov
cld
jnp
mov
je
pop
lods
jmp
pop
xor
and
push
cmp
fprem1
aaa
xor
lods
in
sub
pop
hlt
aas
push
in
mov
lds
and
push
fnstcw
mov
bound
cwtl
popf
mov
out
int3
not
pop
cmp
and
adc
cwtl
xchg
inc
push
bound
pop
sub
mov
push
sbb
adc
mov
xor
shlb
push
xchg
int
imul
arpl
test
call
iret
mov
lret
jle
pop
into
mov
jns
test
add
xchg
dec
mov
sar
arpl
insb
jo
pop
dec
stos
inc
sub
fs
pop
arpl
jb
mov
push
aaa
cwtl
mov
xor
push
fidivl
cmp
push
fcompl
in
aam
mov
or
or
movsb
mov
xchg
xor
push
cmp
lahf
je
loopne
sti
ja
pusha
jb
insb
jge
sbb
insl
and
inc
sbb
loopne
xchg
or
imull
clc
pop
arpl
fbstp
jb
and
and
pop
pushf
jns
dec
pop
and
leave
jnp
inc
pop
adc
scas
or
jno
test
jle
les
lea
adc
mov
out
jae
mov
rcr
test
xchg
sub
ds
aas
es
push
fcompl
sbb
jnp
pop
pxor
es
jge
lods
out
mov
loop
ja
pop
jge
loopne
sub
pushaw
pop
dec
movsb
cmp
shr
int3
pop
mov
adc
push
cmp
xchg
fsubs
mov
jns
inc
leave
mov
fcmovne
js
mov
js
mov
shl
sbb
cmpb
mov
test
lods
pop
icebp
mov
nop
popa
clc
dec
jmp
adc
and
mov
stc
ds
xor
push
lods
icebp
add
cmp
and
pusha
dec
loope
cwtl
fdivrl
mov
jle
push
ret
adcl
aam
mov
arpl
bound
data16
fnsave
mov
outsb
jae
push
mov
xchg
in
or
xor
cmpl
mov
mov
push
cmp
pop
or
mov
pop
jno
divb
test
push
popf
js
mov
push
push
mov
addr16
or
add
inc
cmp
insb
ja
out
xchg
cli
sahf
jp
cmpsb
mov
test
mov
rolb
das
popf
test
fcoml
cmp
popf
dec
adc
and
inc
stos
jl
bound
jo
cmp
outsb
les
std
jo
adc
sbb
pop
jmp
mov
loop
gs
dec
xor
mov
adc
sbb
and
lcall
imul
test
jo
pop
push
cmpsb
push
andb
imul
add
cmp
mov
ret
mov
out
cmp
pop
cmc
mov
test
and
lods
jg
dec
ret
arpl
cmp
dec
lods
and
test
pop
adc
lret
enter
fcoms
push
mov
sbb
aaa
lahf
cmpsb
enter
push
ret
xchg
in
mov
lods
dec
cmp
mov
inc
into
shlb
or
xchg
mov
pop
repz
mov
pop
cwtl
xor
lcall
fwait
ret
xor
pop
js
inc
cwtl
jl
mov
push
push
pop
pop
xor
ror
adc
imul
movsl
ret
fdivrl
adc
das
pop
outsb
push
dec
in
jle
sbb
mov
repz
int3
loope
mov
push
mov
mov
pop
inc
in
push
push
loopne
add
cmp
pop
imul
pop
xor
mov
or
sub
addr16
out
lock
pop
in
dec
lahf
outsl
test
cwtl
mov
test
jo
pop
jg
cmpb
int3
pop
push
scas
sahf
adc
dec
xlat
dec
insb
mov
pop
jge
lret
mov
xchg
push
adc
cld
pop
inc
imul
mov
std
pushf
cs
or
mov
mov
cli
add
cld
xchg
in
or
pop
and
sbb
xchg
sbb
aam
out
lods
lods
mov
cmpl
pop
test
repz
pop
or
leave
adc
jecxz
leave
sbb
xor
mov
nop
fcmovb
shll
aam
aas
les
pop
js
adc
arpl
inc
loope
scas
push
dec
pop
pop
out
dec
xor
sahf
and
iret
sahf
outsl
jns
and
pop
push
mov
sub
sub
pop
or
dec
idivb
fsubl
cmp
nop
cmp
div
in
sbbb
js
je
testb
and
dec
jge
ds
rclb
fwait
inc
xchg
pusha
push
xor
push
cmpsb
cmp
cmp
cmp
mov
andb
repz
mov
jne
jp
sbb
push
pusha
clc
pop
fidivs
addr16
push
jp
or
enter
pop
sbb
stc
inc
pushf
fcoms
push
jl
hlt
push
aaa
jmp
jl
sbb
icebp
dec
fcomp
dec
ret
jns
cmp
push
jae
sbb
sbb
push
push
mov
jns
addr16
sti
into
jge
inc
aam
cmp
jl
sub
mov
nop
in
out
push
test
ja
pop
mov
loopne
lcall
mov
inc
insl
mov
mov
andb
xor
daa
mov
out
pop
stos
push
jle
adc
mov
aam
xchg
sub
xchg
xlat
test
popa
cs
jmp
fcompl
jns
jb
mov
mov
mov
mov
iret
insb
aam
aas
sbb
push
add
sbb
jno
jl
cs
imul
push
jge
dec
insb
pop
sti
loopne
stc
mov
das
into
pop
ret
cs
add
lds
inc
enter
mov
xor
cmp
jp
lock
out
lods
test
js
std
and
inc
and
push
jbe
pop
inc
outsl
jle
fdivrp
popa
adc
inc
xor
pop
jns
dec
sbb
adc
xchg
test
xor
lret
cmp
or
jg
xchg
dec
pushf
fadds
jno
cmp
push
mov
insb
cmpsb
cmp
sbb
cmp
xchg
xchg
mov
sbb
push
outsl
mov
sbb
mov
mov
or
adc
fdivrl
push
or
decb
xchg
pop
sbb
sub
jne
daa
loop
mov
jae
out
dec
jnp
push
jnp
js
and
xchg
inc
outsl
pop
mov
sub
add
lcall
jmp
pop
jno
mov
and
scas
mov
sbb
add
and
xchg
dec
in
fcompl
sub
js
and
pop
jns
int3
in
pop
fs
adc
push
fdivrp
rcrb
stc
and
cmp
jge
cmp
lock
cwtl
data16
dec
mull
mov
inc
fs
xlat
or
mov
lods
mov
inc
push
enter
cmp
mov
cmp
or
or
in
out
clc
mov
and
fcomps
dec
rolb
lahf
clc
xchg
inc
sti
lds
cmp
xchg
cmp
pop
ja
sbb
pop
pop
adc
push
pop
lahf
out
fs
inc
jae
sbb
in
and
dec
clc
mov
fcomps
inc
adc
rclb
cmp
cli
jg
adcb
mov
stos
pop
adc
test
push
addr16
inc
dec
mov
rorl
loopne
jmp
dec
test
pop
loopne
sub
test
in
mov
or
dec
clc
arpl
lcall
pusha
mov
and
ret
push
mov
daa
cmp
fsubs
pop
js
insb
out
dec
jl
mov
pop
and
in
js
add
xchg
xchg
int3
cmp
pusha
test
ss
in
mov
fldcw
add
mov
cmp
sub
mov
shrb
xor
mov
adc
sbb
cmp
mov
int3
ret
dec
inc
add
in
je
adc
mov
movsb
sbb
repz
and
lods
call
xlat
xchg
fdivrs
fcoml
pop
dec
adc
pop
inc
push
mov
dec
pop
aas
xchg
mov
jl
adcl
cli
or
add
jno
jno
inc
sbb
sbb
enter
cmp
pop
inc
push
mov
push
pushf
sbb
or
out
push
adc
in
mov
xor
or
test
out
dec
mov
push
test
ret
jl
pop
imull
test
test
fmuls
cmpsb
add
cmp
push
dec
pop
mov
mov
loopne
in
push
push
dec
fs
inc
dec
pusha
adc
push
mov
cmp
xchg
mov
push
sub
push
mov
fdivrs
inc
fsubrs
sarl
inc
mov
jmp
fcomip
shll
pop
xchg
sbb
faddl
xchg
xor
enter
shl
jne
jl
mov
push
stc
icebp
lods
cs
pusha
je
shll
adc
and
pop
shl
mov
stos
mov
popa
fcoms
adc
xlat
jb
or
cmp
mov
in
int
js
out
jge
mov
out
dec
lods
pop
icebp
mov
fisubrs
out
mov
rcl
pop
jge
pop
leave
in
dec
sbb
loop
xor
xorb
dec
lods
push
loopne
fidivrl
dec
sbb
push
sbb
or
xchg
imulb
mov
mov
pop
ret
aas
test
mov
xchg
xor
popf
mov
cmp
pop
adc
test
adc
clc
fdivs
out
xchg
pop
jl
cmp
lea
push
rolb
into
mov
sub
and
in
mov
jo
dec
repnz
mov
fbstp
lds
fcompl
fs
pop
jmp
in
movsb
aas
pop
rcl
mov
dec
pop
mov
jge
mov
and
inc
mov
xorb
inc
pop
int
and
call
cmpsl
mov
adc
push
lcall
add
push
lcall
popa
jl
out
outsb
add
mov
adc
cmp
push
jo
jns
fmull
adc
push
js
xchg
pop
cltd
out
shlb
fs
cmp
insb
or
inc
jge
cmp
mov
pop
shlb
or
lock
inc
adc
add
sbb
dec
rorb
dec
idivl
in
inc
dec
in
dec
pop
pop
add
inc
pop
mov
pop
mov
push
movsb
cmp
dec
or
cmp
push
fsubr
addl
pop
sbb
cwtl
jae
xchg
xor
jns
xlat
fadd
test
and
pop
xchg
push
jp
imul
inc
lea
je
sbb
aam
add
xor
and
inc
jnp
xchg
inc
sti
fucomip
jns
jae
mul
loopne
int
sbb
mov
fidivrs
enter
pop
mov
mov
and
addr16
pop
or
fimuls
mov
insb
xchg
fstpl
fsubrs
cmpsl
mov
cmpsb
sbb
enter
mov
mov
test
fstps
xor
add
lock
test
cmp
pushf
rorl
nop
cmp
fs
xchg
xchg
adc
xchg
inc
aaa
pop
js
push
test
bound
xchg
pusha
mov
mov
push
and
and
xchg
pmuludq
roll
sbb
inc
mov
add
sbb
add
xor
fsub
jp
xchg
clc
jns
cmp
sbb
arpl
mov
sub
iret
jb
sub
stos
sahf
jl
stc
pusha
pop
pushf
push
decl
xchg
fcompl
nop
pop
fldl
mov
or
dec
loope
pop
cmp
out
push
fdivr
sbb
stos
dec
sbb
roll
lcall
mov
ret
mov
test
je
push
mov
mov
dec
cmp
in
pusha
sbb
pop
jae
push
insb
jne
nop
test
test
hlt
cwtl
dec
mov
test
pop
icebp
adc
mov
js
sub
add
pop
sub
cmpsb
arpl
sbb
mov
dec
add
sub
mov
sti
mov
pop
xchg
pop
cmp
imul
add
adc
mov
jnp
rep
and
push
or
mov
jns
outsl
filds
mov
cmp
dec
mov
orl
cmp
fcoms
stos
lret
popf
pusha
pop
xor
push
lods
xor
hlt
jne
or
and
dec
fdivr
aad
cltd
sub
gs
out
shr
adc
push
xor
mov
xchg
jne
iret
sbb
and
nop
jl
dec
pop
ljmp
rclb
pop
mov
xlat
mov
data16
ret
xchg
les
sbb
pop
enter
ja
xchg
outsb
jo
mov
mov
fsub
decb
ljmp
enter
notl
imul
lods
in
and
in
mov
rcrb
aaa
sbb
and
jo
js
fisubrl
inc
popf
mov
stos
insb
test
fcoms
mov
fcom
push
jno
nop
sbb
jo
sub
and
dec
in
jnp
int3
ds
pop
push
mov
insb
inc
push
popa
mov
cmp
cli
ds
les
cmp
jg
or
add
and
lcall
dec
pushf
sbb
inc
push
daa
dec
pop
insl
pusha
mov
add
test
and
pop
pop
sbb
add
js
mov
and
in
sbb
cli
icebp
fstpl
add
fsubl
dec
bts
notb
inc
jnp
lret
int3
fsub
jl
pusha
pop
lea
imul
jl
inc
mov
sub
in
ljmp
fisttpl
insb
mov
inc
pop
into
cs
cwtl
mov
out
pop
sti
sbb
pop
jl
xor
nop
pop
into
bound
pushf
outsb
mov
pop
loope
mov
sbb
test
addr16
aad
pop
cwtl
jnp
mov
loope
fsubrs
xor
dec
js
fadds
xor
fsubl
or
sbb
iret
jge
inc
sbbb
lock
insb
jno
push
aam
outsb
cld
stc
push
jns
jo
je
insl
test
in
dec
push
or
sti
pushf
pop
xor
nop
pusha
sbb
xor
or
add
adc
jns
jae
ds
lret
sti
push
icebp
pop
adc
jg
xor
jmp
cmp
pop
out
lcall
jo
ret
mov
fwait
data16
subb
loope
test
and
test
push
test
jl
cmp
es
lea
fwait
push
js
pop
dec
mov
push
jnp
rcrl
add
aas
test
out
mov
outsl
dec
dec
roll
sbb
push
mov
pop
adc
jl
xchg
jecxz
insb
lods
and
sbb
aaa
fisttpl
cmpsb
test
sti
test
insl
cmp
sub
pop
xchg
inc
mov
pusha
pop
pop
dec
add
shl
test
loopne
aas
sbb
xor
lods
sbb
mov
lock
sbb
popa
fdivr
scas
rorl
push
xchg
mov
mov
out
mov
fcompl
jnp
xlat
and
mov
std
dec
xchg
in
jg
fs
mov
and
bound
dec
add
in
xlat
mov
out
jge
leave
lock
mov
out
lahf
adc
cmp
xor
push
es
insl
xchg
fadd
lods
pop
inc
notb
fs
ss
je
push
fwait
icebp
sbb
orb
dec
pop
mov
push
sub
iret
xor
xchg
jmp
aas
jl
test
fs
pop
jmp
mov
pop
idivl
imulb
aam
insb
fcompl
jbe
mov
dec
xchg
jge
jl
pop
xchg
call
cwtl
and
cld
sbb
xor
mov
add
mov
icebp
shll
movsb
hlt
ret
jmp
in
imul
jo
xchg
sub
gs
pop
lahf
hlt
popa
pop
jmp
and
sbb
fmuls
pusha
aad
insb
push
adc
mov
int
insb
pusha
insb
sbb
into
int3
xchg
aam
jae
insb
mov
jne
aas
or
cld
mov
mov
fcompl
add
pop
mov
and
jl
inc
test
add
pop
push
pop
adc
out
lcall
outsl
or
lcall
ficomps
loopne
xor
lahf
lods
fidivs
jmp
sti
rcr
xchg
imul
fdivrl
int3
cmpsl
sub
nop
orb
push
addl
jo
xchg
adc
pop
mov
jge
cmp
sbb
imul
cmp
push
dec
xchg
mov
or
jnp
std
sbb
test
cmp
jb
sbb
mov
pop
dec
pop
jo
push
js
test
dec
call
push
scas
out
and
push
mov
ds
pushf
je
jg
shll
dec
pop
cmpsl
mov
or
and
and
data16
mov
imul
call
rolb
mov
addr16
mov
mov
fstpl
inc
cmp
pop
repz
xchg
hlt
and
jl
js
pushf
outsb
lcall
lock
mov
push
lcall
xchg
jbe
jl
addl
xchg
mov
pop
sub
add
push
sahf
test
push
scas
mov
sub
int3
repnz
out
inc
xor
jge
mov
jnp
ficoml
push
in
sbb
mov
adcb
ss
inc
ret
sbb
pop
mov
adc
sub
sbb
stc
dec
out
es
shr
mov
mov
dec
aam
fists
enter
sub
cmp
in
pop
cmp
sbb
ds
push
test
mov
movsb
pop
pop
sub
fmull
in
pusha
imul
sbb
dec
fadd
inc
xchg
inc
pop
jg
dec
dec
je
cmp
cmp
pop
lret
fldlg2
or
or
xchg
repnz
and
sub
lock
pop
pusha
into
aam
add
pop
cmpl
shrb
sahf
lea
inc
addb
call
dec
in
and
xchg
jle
cmpsl
mov
arpl
mov
sub
mov
cmp
insb
bound
jle
in
push
aas
cwtl
push
cmp
ret
pop
fnstsw
lods
jo
cmpsl
jne
mov
push
cmpsb
or
add
push
ja
lds
sub
in
hlt
add
dec
sbb
lcall
adc
scas
jnp
pop
push
insb
jno
imul
sahf
rcrb
aas
lods
lock
fldcw
jl
rcrb
mov
in
or
mov
lods
test
jp
fs
xchg
pop
push
add
lds
jo
mov
fs
cwtl
pusha
lds
adc
fstpt
and
testb
xlat
mov
pop
lret
xor
dec
fdivs
ss
insl
lds
mov
nop
mov
mov
icebp
cmpb
repz
insl
imul
mov
dec
mov
mov
lods
hlt
je
jns
mov
cmp
pop
arpl
dec
xchg
scas
test
test
fs
pop
cwtl
ret
xor
mov
dec
mov
and
and
cltd
mov
bound
lret
jl
push
fcompl
rorb
addr16
es
rcr
cmp
call
mov
sbb
rcrb
mov
push
xchg
int3
dec
adc
dec
pop
lock
lods
jb
sub
pop
enter
pop
xchg
fldl
mov
pop
std
sbb
mov
mov
push
arpl
lock
cmp
pop
aam
jge
pop
in
into
insb
pop
test
mov
out
xor
clc
cmpsb
ds
xchg
testl
sbb
fsubs
or
cmp
insb
mov
roll
nop
or
rolb
in
popf
clc
cmc
ds
jo
mov
rcll
cmp
pushf
movsb
aad
mov
or
sbb
test
popa
insw
shr
mov
ss
mov
roll
push
loop
mov
jmp
or
js
xor
pop
xchg
outsb
lods
adc
fcompl
sbb
outsb
int3
sub
xchg
insb
xor
sbb
outsb
pop
mov
aad
mov
inc
fldln2
js
sbbl
dec
insl
pop
mov
sbb
test
xor
mov
fucompp
and
cmp
add
push
popa
dec
mov
cmpsb
push
test
lock
jno
shl
pop
xchg
and
out
in
mov
daa
push
lret
fmull
je
mov
adc
movsl
sbb
ret
sahf
cmp
lock
lret
pushf
push
clc
mov
outsl
dec
cwtl
pop
and
push
add
xchg
in
xor
adc
ss
adc
insb
adc
jns
pop
mov
sti
in
add
pop
or
stc
add
cwtl
mov
inc
jge
cli
or
pop
nop
je
and
movsb
flds
test
fmuls
cmp
fsubrp
pop
adc
fs
ds
jno
jb
das
mov
cmp
fs
clc
aaa
aam
movsb
cld
mov
cmp
jmp
push
fiaddl
orb
pop
adc
mov
jge
pop
loope
arpl
pop
imul
dec
push
rolb
pop
pop
mov
add
sbb
or
xchg
xchg
ret
dec
clc
and
adc
inc
add
mov
out
sahf
fidivs
pop
nop
andl
cld
lods
jne
push
pop
xchg
test
sub
arpl
psubusw
add
fcomps
call
jns
addl
dec
out
cmpsl
xor
shlb
pusha
push
pop
fwait
call
lods
pushf
int3
pop
add
mov
pop
cmc
sub
and
inc
rcrl
and
loop
das
ja
mov
test
push
add
daa
sub
out
push
aam
add
sbb
pop
add
jg
xor
pop
mov
pusha
ljmp
jecxz
push
adc
pushf
sbb
dec
fsubrs
pop
pushf
sahf
dec
sbb
test
insb
sahf
pusha
pop
cli
pop
jb
or
fdivl
test
repz
pop
xchg
fwait
out
pop
decb
and
inc
movsb
sbb
pop
movsb
jno
addr16
test
dec
and
xor
test
adc
push
pop
push
shlb
pusha
fdiv
sub
fdivs
call
pop
add
test
sbb
xchg
pop
or
jp
jo
jnp
popf
dec
cld
fwait
lcall
pop
cmpsb
dec
push
lret
inc
fsubs
pop
ret
fnstcw
pusha
es
inc
popa
or
xor
dec
ret
pop
push
stos
aas
lock
rcrb
jo
push
add
cltd
pushl
popa
cld
lods
push
mov
lock
mov
stos
sub
test
out
jnp
fdivr
add
in
test
pop
in
push
mov
jecxz
pusha
xchg
sub
mov
aam
jp
ret
or
add
mov
mov
clc
and
les
arpl
test
xor
loopne
sti
push
gs
push
xchg
pop
and
sbbl
jne
adc
sub
iret
outsb
lods
xchg
shrb
inc
pop
adc
pusha
sarb
pushf
mov
hlt
iret
jno
rcrl
push
cld
fmuls
leave
bound
pop
push
push
movsb
popl
cmc
lds
xor
push
loopne
push
cmp
addr16
sub
lea
hlt
and
mov
inc
xor
cmp
nop
mov
fs
cwtl
pop
loopne
xchg
adc
ja
popf
cmp
mov
jl
add
test
jns
xchg
pop
lods
sbbb
adc
adc
shll
pop
adc
mov
icebp
sub
sbbb
pusha
int
test
insl
pop
dec
cmp
aas
ss
fisubs
jbe
loop
inc
fs
movl
jns
aaa
pop
sti
sub
cmpsb
fs
loop
mov
dec
movl
pop
and
jne
pusha
cmp
cmp
push
in
push
inc
pop
add
jg
fcoml
sahf
pushf
arpl
push
mov
cmp
adc
sbb
inc
inc
and
int
fcoml
mov
pop
push
das
or
cmp
pusha
rcl
arpl
test
fisttpll
mov
scas
inc
outsl
leave
cld
sbb
push
cltd
in
jl
push
add
clc
stos
or
cmp
sar
mov
call
pop
cmp
xor
or
push
movsl
or
pop
sti
pop
test
mov
cwtl
cwtl
sub
aas
popaw
add
es
nop
pushf
nop
mov
aad
stos
push
cmp
dec
fmul
cmp
push
adc
dec
dec
jo
sub
inc
lret
cmp
in
push
mov
xchg
pop
iret
into
lods
cmp
add
push
aam
insb
mov
add
in
inc
and
push
adc
mov
push
call
mov
lods
ljmp
mov
pushf
dec
fistps
jb
daa
and
add
test
test
lahf
data16
ret
mov
insl
in
and
fs
or
cmp
cwtl
std
pop
mov
and
in
es
fmull
test
jl
xchg
mov
dec
lret
jo
insl
cmp
lock
lock
fcompl
inc
test
gs
data16
inc
rcr
scas
sub
insb
rcrb
dec
xchg
pop
push
adcb
jl
mov
dec
fidivrl
add
pop
insb
mov
fcmovnb
stc
xor
shl
clc
jge
mov
fsubs
xchg
mov
cs
mov
xchg
jae
cmp
cmpsl
dec
push
cld
or
pushf
mov
dec
dec
enter
in
sbb
mov
push
iret
pop
into
sub
mov
std
fs
add
rcrb
out
pop
lock
mov
jg
fdivrl
int
mov
cmc
jg
inc
pop
mov
or
mov
jmp
test
pushf
mov
adc
daa
push
clc
jl
repz
fs
lds
pop
mov
xchg
cmpb
pop
add
imul
stc
fnstsw
movsb
pop
in
outsb
enter
dec
lods
jo
adc
ds
rcr
into
cmp
mov
pop
inc
cmpb
faddl
push
test
fldt
xor
mov
inc
jg
mov
add
dec
aaa
scas
adc
cmp
aad
push
mov
inc
or
and
dec
xchg
cld
ret
fmuls
pop
out
bound
and
jnp
jns
add
mov
fwait
xor
leave
lret
jnp
out
pusha
inc
lahf
inc
ficoml
mov
fisubrl
adc
add
pusha
lahf
sub
mov
bound
fmuls
push
fsts
hlt
pop
adc
dec
xor
add
pushf
jns
dec
pop
dec
mov
pop
dec
test
push
clc
fdivs
cmc
sbb
test
or
int3
add
dec
pop
fsubs
push
repnz
jle
push
imul
jg
cld
cltd
dec
sbb
call
inc
sar
inc
cmp
adc
add
or
loopne
aaa
lahf
cmp
lea
int3
stos
push
mov
daa
rcl
sbb
push
aaa
mov
adc
fcomps
mov
dec
cmp
inc
lahf
mov
mov
fisubs
mov
add
lret
mov
pop
inc
lds
add
loop
pop
repnz
fdivl
in
sub
sbb
mov
pop
shlb
cmp
xchg
or
je
mov
fdivs
sbb
xchg
pop
insb
xorb
sub
outsb
dec
pop
sahf
pushf
int3
jne
dec
aaa
rorl
fsubrl
pushf
outsb
nop
mov
ja
in
pushf
xchg
pop
push
sbb
movsl
jnp
jo
mov
xchg
sub
repz
out
rclb
and
cmp
test
fisubs
arpl
pop
mov
int3
dec
mov
pop
nop
call
hlt
jge
jge
fs
cmp
out
arpl
adc
into
jg
pop
stc
adc
sarl
sbb
xor
jp
sbb
sub
in
mov
test
fidivrs
adc
and
sysenter
arpl
pop
and
fsubr
and
mov
dec
out
bound
push
xchg
jne
fmuls
addr16
push
ljmp
aas
lods
mov
xor
xor
imul
cmpl
js
adc
or
int3
pop
fs
sub
lds
mov
jo
call
sarb
xchg
ja
jo
popf
call
fcoml
clc
pusha
aaa
sbb
xchg
das
jne
cmpsb
call
jp
push
es
mov
addr16
fstl
popa
iret
cmp
xchg
sbb
sub
xchg
sub
in
or
pushf
mov
dec
lcall
sbb
js
in
cwtl
out
dec
shrb
hlt
sbb
call
and
movsb
and
fsubrl
psllw
xchg
cmp
pop
in
fstpl
mov
stc
xchg
psubusb
dec
or
rcr
add
add
pop
xchg
lret
add
or
fidivs
inc
in
jge
sahf
aam
mov
and
pop
jbe
dec
loopne
adcb
add
sarl
je
push
fs
xchg
jl
push
mov
xchg
ret
add
cmc
fdivs
jmp
scas
push
cmp
or
jnp
or
frndint
aad
push
pop
add
adc
mov
cmp
mov
aam
lcall
jle
xor
cmp
cwtl
int
pop
and
insl
fcoml
push
jae
dec
mov
push
enter
dec
jns
jb
adc
jl
dec
mov
push
loopne
out
and
or
pop
cs
pushf
and
ds
mov
pop
adc
call
xchg
insl
add
xchg
lock
or
push
add
pop
mov
xchg
insl
movb
mov
pop
push
push
lods
cmpl
dec
cmpsb
sub
dec
mov
pop
jmp
jl
stc
jo
iret
push
pop
xchg
loopne
mov
adc
outsl
jnp
test
pushf
je
push
cmp
ret
test
pushf
adc
negl
pop
add
cmp
mov
xor
out
jo
sbb
pop
jnp
xor
inc
add
pop
scas
shrl
bound
dec
pop
jg
loopne
mov
jl
sbb
sub
insl
pop
movsb
inc
mov
xor
enter
adc
jno
cmp
sub
mov
scas
lcall
into
pop
lock
rcrb
aaa
xor
fcoml
pop
dec
pushf
pop
mov
or
adc
fcoml
or
negb
mov
push
pop
mov
pusha
rclb
pop
cmp
call
daa
jo
jge
mov
outsl
out
dec
mov
or
arpl
cwtl
cmp
push
mov
xchg
js
push
cmp
sbb
cmpb
pop
repz
in
cmpsb
push
pop
xchg
pop
test
push
in
icebp
pop
shl
es
sbb
outsb
xorb
adc
push
fmul
mov
lcall
xchg
sahf
daa
dec
js
jnp
pop
or
mov
insb
fcompl
popa
iret
orl
inc
lods
arpl
dec
pusha
sbb
cltd
jge
fs
nop
les
pushf
push
jp
fs
mov
adc
inc
call
and
std
xlat
dec
cmp
mov
xchg
cmc
clc
sub
bound
jae
jo
fs
outsb
mov
out
or
aam
xlat
push
test
or
mov
pop
or
mov
cwtl
jl
mov
adc
cmc
jae
add
movsb
mov
insb
clc
bswap
lods
test
mov
jo
and
fldcw
pop
pop
dec
mov
imull
mov
pop
jg
in
xor
sbb
mov
mov
les
imul
adc
or
cmp
lea
xor
inc
sub
xchg
lea
mov
stos
rolb
pop
xchg
sub
and
lods
out
in
sar
in
jno
mov
adc
aam
pop
scas
xor
fmull
std
out
sarb
dec
jns
fistps
xchg
imul
adc
add
pop
sub
dec
out
aam
nop
inc
xor
cmc
mov
inc
inc
in
cwtl
push
orb
mov
dec
sub
aaa
lahf
loope
push
xor
stos
dec
dec
mov
push
mov
cmpsb
nop
in
jge
pop
lods
mov
or
dec
clc
jl
push
xchg
inc
fsubl
mov
cwtl
sub
and
iret
andl
push
lret
cmp
pop
mov
or
or
add
imull
fdivrl
mov
add
mov
xor
add
call
cmpsb
daa
hlt
aad
nop
imul
mov
push
xchg
and
test
movsb
lods
adc
sbb
add
aam
sbb
jns,pn
mov
in
lret
pop
cltd
mov
insb
push
mov
xchg
rolb
test
fdivr
addl
out
pusha
popa
cmp
cmp
push
or
jecxz
pusha
xchg
jnp
cwtl
inc
insl
dec
scas
xchg
mov
rcr
xor
aam
cld
jg
arpl
cmpsb
inc
pop
mov
pop
in
cld
in
cld
pop
inc
popf
add
pusha
pop
aam
jmp
cld
mov
je
mov
sbb
ss
dec
fsts
int
xor
movsb
adc
push
or
inc
push
loope
insb
push
push
xchg
adc
add
jl
pop
mov
scas
sub
dec
pop
sbb
and
sbbl
addr16
push
pushf
in
cld
pop
pop
cmp
hlt
mov
test
iret
call
pop
xchg
xor
mov
and
enter
insl
outsl
sub
les
dec
shll
inc
arpl
xchg
lods
pop
mov
or
cmpb
xchg
aaa
dec
jno
cld
lock
repz
je
mov
xchg
movsb
push
fsubrs
test
popa
jns
xchg
sti
sbbb
xor
dec
call
cmc
jmp
insb
dec
push
mov
pusha
nop
add
jb
out
cmp
pusha
fdivs
cwtl
ret
mul
loop
fwait
adc
mov
push
repnz
pop
dec
rolb
int3
aaa
pop
mov
jl
lods
pushf
mov
outsl
ret
adc
fdivs
shll
xchg
enter
adc
xchg
fst
jl
push
jecxz
bound
fs
inc
and
imul
dec
in
daa
mov
sub
jl
inc
imul
shl
ja
mov
cltd
mov
enter
insb
inc
addl
xor
rorl
pusha
cmp
fdivl
add
hlt
xchg
pop
scas
scas
mov
mov
jg
ror
insl
gs
xor
arpl
xchg
outsb
pushf
cltd
popa
shlb
out
dec
xor
lods
pop
popa
aad
mov
cwtl
stc
cmp
xchg
or
xchg
or
outsb
fs
mov
repnz
rolb
in
cli
shrb
ds
iret
es
fwait
and
lods
js
push
shrb
scas
mov
xchg
into
xchg
jb
xchg
iret
scas
push
pop
pop
cmpsb
loopne
add
call
xchg
js
mov
in
popa
lds
lahf
jae
adc
sub
into
movsb
pop
push
aas
mov
inc
mov
fcoms
fcomps
cmp
fdivrs
or
jnp
add
insb
sbb
pop
sub
sub
out
pusha
sbbb
inc
fcom
mov
mov
imul
sub
sbb
aam
dec
in
jl
outsb
in
imul
cmpb
pop
dec
popa
lds
cmp
js
cs
dec
mov
imul
pushf
stos
mov
movsb
cmp
lret
cld
xchg
data16
xorb
push
push
jns
xor
fstpl
cmc
outsb
push
mov
mov
insb
aas
adc
nop
lock
js
cmp
hlt
imul
rcll
insb
xor
mov
add
in
lock
and
push
mov
fcompl
js
sub
pop
pushf
pop
aam
imul
pop
js
mov
jmp
xor
mov
pop
cmp
fcmovu
shrl
lret
mul
pop
cmp
sbb
pop
sti
shrl
cmpsb
or
mov
cmp
scas
dec
xchg
pop
cli
xor
mov
and
push
sub
dec
mov
xchg
bound
or
pop
aam
lods
shll
iret
mov
xlat
jle
mov
xor
arpl
loop
fsubrl
sub
and
loopne
faddl
sub
lds
adc
jo
push
xor
lods
arpl
or
insb
rcrl
pop
xchg
push
push
cmp
inc
mov
xchg
in
rep
out
sbb
jg
iret
mov
cmp
or
and
xor
dec
pop
mov
cli
pusha
imull
push
test
xorb
sub
in
je
test
testl
pop
cld
jle
and
mov
test
xchg
lock
je
in
cmp
inc
jo
pop
push
and
xchg
xor
nop
in
push
imul
pop
or
and
sarb
and
jo
stos
pop
mov
mov
ljmp
push
xchg
outsl
pop
fcmove
movsl
pop
mov
push
hlt
dec
lods
add
push
lods
pop
jmp
mov
pop
out
enter
or
je
or
cwtl
adc
mov
push
mov
pushf
ds
adc
mov
sbb
pop
aam
sbb
jo
jne
mov
xor
insb
fildl
jae
inc
or
cmp
pop
aam
push
cwtl
jbe
push
and
sub
shl
mov
and
add
adcl
sbb
nop
dec
cmp
imul
pushf
pop
cmpb
lcall
daa
mov
push
pushf
cwtl
push
addr16
outsl
das
fsubrl
roll
mov
pop
pusha
inc
jns
pop
and
aas
mov
out
enter
sbb
pop
mov
jae
adc
xor
enter
push
add
or
lock
popf
popa
mov
sub
lods
je
xorb
adc
fwait
mov
push
and
sar
inc
data16
scas
pop
dec
mov
jmp
jns
inc
pop
in
dec
fstpl
test
jne
xchg
cs
rorl
add
xchg
mov
or
iret
into
xlat
mov
inc
xchg
pop
mov
and
in
pop
in
daa
ds
rcrl
sbb
adc
sbb
arpl
mov
push
pop
adc
cwtl
push
gs
dec
clc
xchg
cmp
pop
sbb
add
mov
fsubs
pop
inc
icebp
stc
sbb
jbe
pop
or
mov
xchg
in
sti
cmp
cmp
loop
mov
nop
hlt
sbb
dec
subb
xchg
enter
pusha
mov
jbe
test
inc
ja
loope
sbb
jb
cwtl
dec
es
cmp
nop
mov
adc
jo
notb
clc
mov
outsl
out
lods
dec
and
inc
adc
xor
adc
cmpsb
int
jg
outsl
cmp
sub
fcomp
mov
fwait
jb
pop
cs
or
adc
arpl
push
jl
popf
push
jmp
dec
mov
pop
repz
lock
pop
stos
leave
nop
mov
lock
aam
dec
sbb
mov
sub
lcall
mov
adc
or
sar
cld
and
sbb
loop
in
fs
jb
test
pop
lock
cmp
or
shrl
scas
and
pop
cmp
sbb
popf
aam
scas
mov
ret
pusha
icebp
pop
inc
sbb
enter
push
mov
jl
lret
and
cmp
mov
dec
and
arpl
enter
push
push
push
int3
outsb
xor
enter
imul
and
shrl
or
idivb
cmp
fs
test
popf
bound
inc
sbbb
xor
loopne
inc
inc
fs
mov
inc
outsl
jge
test
add
inc
fadds
xchg
mov
fs
sbb
xchg
jmp
pushf
xchg
jmp
int
pusha
mov
push
sbb
aaa
mov
fdivs
stos
push
cld
int3
cmp
outsb
iret
ret
in
push
sbb
or
loopne
popa
dec
sti
sub
push
sbb
shl
loop
cmp
dec
enter
pop
pop
xchg
pushf
mov
mov
fmull
pusha
mov
dec
or
jo
push
fimull
mov
pusha
outsb
clc
sub
or
mov
jecxz
outsb
cmp
inc
test
jns
ds
je
in
push
pop
lods
and
cmp
sahf
pusha
pop
test
stos
push
lea
orps
mov
push
adc
cld
dec
insb
mov
arpl
cltd
adc
jl
dec
in
cmp
out
sbbl
lcall
lock
stos
dec
jmp
mov
adc
sub
sub
orb
fs
mov
mov
xchg
out
jg
scas
popf
jl
dec
or
or
pop
out
dec
popf
add
fbstp
fs
in
imul
pop
mov
fs
pop
jmp
js
mov
fdivrs
xchg
in
cmp
in
add
imul
ret
cmp
mov
push
mov
mov
dec
loope
xchg
fwait
bound
sub
fnstcw
stc
jb
fdivr
or
or
jns
jge
dec
xor
sbb
movsb
fcoms
sbb
cmp
mov
mov
cmpsl
lods
mov
rolb
or
add
sbb
pop
adc
jae
cwtl
xor
movsb
scas
fwait
mov
mov
and
cld
mov
cmp
lahf
sub
inc
loop
popa
or
jg
popf
test
sbb
js
mov
stos
cld
andl
insb
sub
hlt
ss
adcb
or
adc
dec
mov
jge
in
lock
push
in
arpl
mov
xchg
pop
cmpsb
lods
test
je
pop
xor
stos
movsb
mov
inc
pop
int
mov
cmp
decb
arpl
mov
mov
in
sbb
subb
mov
outsb
and
movsb
lock
pop
xchg
mov
cmp
mov
addr16
stos
movl
fdivs
or
fsubrs
sbb
loop
imul
enter
add
out
subb
icebp
shl
pop
in
into
lods
push
and
js
sbb
sbb
imul
mov
cmp
push
jecxz
outsl
pushf
stos
inc
and
push
cmpsl
cli
pushf
pop
jmp
add
lods
jo
lcall
adc
cmp
push
adc
add
sbb
mov
inc
pusha
or
cmp
jo
or
sub
pop
cmp
prefetch
pop
adcb
ds
and
add
popf
sbb
cmp
daa
mov
xor
test
test
sbb
pop
aam
jmp
fsubl
jp
imul
pop
dec
push
icebp
cmpsl
pushf
inc
push
nop
mov
cld
pop
mov
and
xchg
jb
or
popf
rclb
cmp
lea
pop
fidivl
push
cmp
xchg
hlt
dec
add
ficomps
out
sahf
rorl
insl
cmp
xor
fsubl
dec
pop
rcl
pop
neg
lcall
pop
fstpl
xchg
mov
push
outsb
rorb
inc
stc
js
mov
cmpsl
test
das
arpl
cmp
outsl
lret
sbb
jmp
xchg
jp
sbb
call
xchg
push
addr16
pusha
ret
ja
xorb
mov
mov
popa
js
or
scas
cmpsb
mov
lods
cmp
mov
mov
pop
test
clc
stos
mov
pop
es
dec
add
xchg
xchg
pop
xchg
int3
mov
mov
mov
fcom
adc
jge
push
testb
pop
std
je
ljmp
aam
loopne
mov
pop
call
pop
fs
pop
add
int3
test
iret
push
xchg
iret
js
movsb
cmc
aas
repnz
push
inc
or
or
sub
cmp
pop
ret
mov
push
fsubs
mov
pusha
cmpsl
mov
xorb
pop
pop
cld
js
test
in
pop
push
mov
imul
rolb
fnstsw
mov
popa
cmpsl
xor
adcb
mov
push
and
pop
cld
clc
movsl
inc
fdivrs
mov
js
sbb
or
add
mov
cmp
faddl
xor
xchg
es
test
shrl
or
movsb
fsubr
pop
cltd
iret
sub
ror
dec
sbb
mov
ljmp
es
aas
xor
bound
push
mov
cmp
pop
sub
mov
sub
insl
sub
pop
ficompl
rcll
fstl
dec
cmp
je
jmp
lea
nop
aam
push
pusha
xchg
pop
push
cmp
lods
scas
inc
test
inc
decb
flds
dec
inc
mov
shll
xchg
pop
push
popa
jne
pop
push
inc
cmp
pusha
pop
add
push
push
in
pop
or
cs
sub
lods
js
addr16
lcall
inc
sbb
cmc
leave
int3
mov
fcomps
je
out
clc
or
inc
pop
jmp
and
pop
cmp
adc
push
movsl
nop
jns
cmp
aad
dec
popa
sub
cmp
fs
push
jne
mov
imul
inc
pop
inc
ds
cmp
push
sbb
cmpsb
jmp
or
loope
mov
fsubrs
ret
cmc
aad
movsb
and
sbb
inc
inc
mov
xchg
insl
jp
popa
mov
inc
cmpsl
fidivrs
clc
pop
or
sub
mov
dec
pop
pop
flds
dec
cwtl
out
iret
jecxz
int3
xor
jl
rcll
ss
addl
outsb
or
or
lods
jg
insl
jo
inc
pusha
adc
pusha
dec
adc
pop
adc
pop
shl
clc
js
xor
lret
mov
and
jg
push
sub
or
sbb
pop
inc
inc
fmuls
adc
movsb
outsb
sbb
push
sbb
jge
mov
pop
das
dec
aad
cwtl
es
lods
push
mov
loop
test
dec
jno
pop
aam
mov
xor
fcomps
xchg
xchg
add
popa
add
push
or
idivl
mov
jge
movsl
popf
int3
loop
int
mov
popa
jmp
push
push
fs
loopne
xchg
int
fadds
sbb
aam
aam
jae
or
pop
insb
mov
fcompl
push
xor
inc
jg
push
mov
mov
cmp
scas
pop
sub
pop
cmpsl
and
stc
sbbb
mov
imul
cwtl
in
adc
jo
jb
jmp
test
bound
cltd
jno
mov
xchg
inc
nop
push
std
in
mov
mov
mov
rcr
and
mov
adc
mov
push
loopne
loopne
hlt
pop
and
idivb
popa
shrb
pushw
xchg
gs
enter
pop
fcomi
mov
xorb
js
mov
das
call
pop
mov
ss
xor
push
mov
imul
stos
cli
adc
xchg
xchg
or
lcall
sti
mov
arpl
xor
mov
out
cmp
movsb
jno
sbb
push
stc
mov
jo
xor
subl
push
jge
inc
xchg
insl
push
push
hlt
mov
stc
enter
test
lds
or
fdivs
cld
mov
xchg
dec
or
push
adc
repz
mov
mov
movaps
aas
sahf
test
lods
adcl
test
enter
xor
push
xor
pop
xchg
or
push
cmpl
pop
mov
jne
fnsave
push
or
imul
dec
adc
mov
addl
xchg
inc
or
pop
inc
jnp
fcompl
dec
push
imul
scas
mov
insb
ljmp
hlt
jg
lods
push
pushf
mov
dec
lcall
sbb
and
inc
arpl
fstp
jl
mov
lock
xchg
jmp
cs
int
or
scas
arpl
mov
movsb
fcomps
enter
sbb
jl
push
arpl
out
push
aas
loop
mov
pusha
dec
aad
pop
lret
in
dec
push
js
in
popa
inc
stc
cmp
sub
cmp
arpl
lock
data16
enter
test
push
add
aad
pushf
sbb
add
fdivrs
jo
inc
movsb
mov
int3
sbb
add
pop
xchg
lret
subl
pusha
or
lock
xor
dec
or
push
jecxz
add
inc
cmp
mov
jno
pop
lods
decl
test
or
cmpsl
add
dec
je
mov
movl
test
mov
mov
test
push
pop
ret
sbb
das
call
iret
add
adc
pop
lret
movl
inc
pop
mov
out
pusha
xor
jg
out
fsubrl
das
or
xor
mov
ror
pop
int
addb
mov
jo
sbb
push
dec
mov
mov
stc
push
sub
cmovo
inc
gs
jmp
push
sahf
clc
pop
inc
lds
xchg
in
cmp
jo
ret
add
cmpsb
dec
addr16
sub
fsub
ret
mov
popf
xor
in
pop
outsb
mov
sti
mov
shll
leave
cmp
jecxz
xchg
mov
push
jl
mov
lods
push
mov
test
or
shlb
mov
mov
or
jno
ficoms
inc
lock
mov
ror
adc
mov
inc
push
pusha
xchg
popa
lret
pop
lods
mov
nop
loope
jmp
ret
aam
push
daa
cmp
adc
and
xor
mov
ljmp
mov
test
sbb
push
mov
std
mov
enter
test
cs
mov
and
stos
mov
mov
and
pushf
fdivrs
fdivrl
jl
xchg
cwtl
out
aam
ficomps
faddp
cmp
orb
aam
mov
adc
ljmp
mov
lret
inc
xchg
aas
insb
leave
loopne
push
cmp
or
inc
sub
pop
testb
orb
cwtl
addl
cmp
cwtl
lret
cmp
fsts
popa
rcll
shl
loopne
pop
je
fdivl
or
enter
int3
stos
mov
cmc
cmp
insb
xor
test
jl
xchg
mov
mov
aam
cmp
xchg
ret
mov
mov
daa
sub
inc
clc
or
xchg
test
lahf
fsubs
repnz
mov
pop
icebp
insb
mov
shr
lcall
incb
ljmp
sub
ss
xor
fs
jnp
xchg
inc
push
jmpw
fimull
inc
addb
xchg
loopne
push
jp
adc
add
aam
mov
iret
add
daa
xchg
call
or
fwait
sub
xor
or
inc
or
aam
movsl
xchg
js
cmc
dec
fsubrs
xor
pop
push
dec
dec
imul
jbe
add
sub
lods
xchg
lods
dec
jo
jmp
in
and
sub
jne
sub
mov
mov
fwait
lcall
fimull
clc
lods
fnstsw
adc
aas
cltd
add
dec
lods
orl
ret
jo
cmp
outsl
dec
mov
jg
cld
pop
xchg
mov
js
insb
fwait
pop
lds
add
aaa
cld
jle
or
jmp
inc
sbb
cld
jmp
mov
pop
dec
mov
div
cmc
jl
rorl
arpl
js
jnp
adc
or
ds
pop
stc
jg
xchg
lock
mov
push
nop
pop
movsb
add
popa
fcompl
or
push
clc
pop
pop
add
orb
jbe
mov
sub
roll
pop
jp
sbbl
je
clc
inc
push
pop
or
xchg
add
mov
out
sbb
test
cmp
arpl
fdiv
test
clc
fsubrs
mov
daa
outsl
loope
aam
dec
xchg
rclb
cmp
mov
mov
adcb
outsl
sarl
jg
jno
and
fmuls
jge
rorb
xorb
xchg
mov
and
mov
insl
pusha
lods
xchg
cmp
int3
sbb
imul
add
xor
sbb
and
orb
cs
rclb
or
and
int
in
sbbl
add
js
int3
xor
js
cld
add
inc
xor
enter
fidivs
xor
xrelease
lret
aad
sub
mov
mov
js
je
cltd
adc
movsb
and
pop
mov
pop
jp
dec
pop
sub
rolb
or
pop
fistpll
mov
jl
mov
inc
add
pop
adc
cli
pop
jge
inc
cwtl
fmuls
cmpsl
jge
adc
in
ficoml
push
mov
adc
nopl
sbb
cmp
cmp
push
pop
dec
mov
xor
mov
cmp
fs
loop
mov
ja
cmc
cmp
fisttpll
imul
test
dec
fptan
xchg
in
loope
es
subl
jmp
add
mov
pop
sti
mov
in
test
xlat
cmp
and
mov
pop
dec
aas
mov
xchg
addr16
push
pop
xchg
test
mov
dec
dec
cmc
jo
adc
pop
shl
test
xchg
pop
mov
sub
xor
lret
add
add
sbb
push
fcomp
mov
jecxz
pusha
push
dec
dec
cwtl
mov
scas
push
int3
cmp
test
idivl
sub
inc
pop
lds
orl
pop
movsb
lock
cmp
pop
push
push
ljmp
push
imul
sbb
pop
mov
adc
bound
mov
pusha
dec
jl
ja
xor
mov
and
enter
rorb
test
mov
jne
mov
jl
jbe
mov
in
cld
aad
fcompl
pop
xlat
mov
lods
imul
fwait
into
mov
enter
jno
in
sti
or
call
sar
jg
mov
pushf
or
pop
fs
adc
push
addb
hlt
push
out
cmc
mov
push
mov
mov
dec
test
popf
dec
imul
mov
sbb
in
shlb
jo
cmp
add
in
lock
push
insb
inc
push
nop
pusha
fs
aas
in
mov
and
in
jge
fcmove
push
mov
sbb
ss
fmuls
mov
addr16
addb
adc
out
cli
inc
sbb
inc
jae
jl
xor
cmpsb
outsl
sti
clc
mov
inc
xlat
repz
jl
inc
cmp
mov
fisttpll
inc
mov
loopne
push
sub
leave
sbb
inc
nop
wrmsr
enter
aaa
pop
fidivrs
xchg
adc
pop
call
jo
je
jbe
shll
test
cmp
shr
add
jo
daa
cli
fsubl
popf
nop
jmp
inc
nop
sub
jl
js,pt
inc
dec
fldcw
lods
push
dec
cmp
in
push
push
insb
mov
neg
cmp
mov
fcoml
jne
lcall
rcr
icebp
test
std
pop
out
dec
out
cmp
push
push
dec
mov
mov
fcomps
mov
insl
adc
mov
sbb
push
cli
cmpsl
stc
jl
jmp
sub
je
inc
dec
movsl
sti
sub
mov
dec
sbb
and
cmc
out
sbb
dec
hlt
test
loopne
jns
rcrl
mov
movaps
je
jl
or
jo
imul
loopne
nop
fdivrl
aam
jmp
ss
int3
out
in
fs
imul
dec
pop
js
push
mov
pushf
out
out
jecxz
aam
cwtl
add
arpl
int3
jg
jo
adc
je
test
out
mov
add
mov
int
aam
faddl
push
lock
rcrb
dec
fildll
cmp
int
out
imul
orb
inc
jl
fmull
pop
test
rclb
out
jge
in
dec
add
jg
cmpsl
aam
mov
push
fcomps
mov
decb
je
mov
or
sub
push
arpl
pop
xadd
xor
mov
xor
add
sbb
or
sbb
inc
sbb
and
negb
cmp
ja
aam
inc
mov
sahf
jp
fstpl
xor
nop
and
divl
je
xor
sarl
sbb
lcall
fnsave
adc
jne
dec
jbe
add
xchg
jecxz
pop
xor
ja
adc
imul
mov
xchg
test
addl
fsubl
in
fs
das
call
aaa
xchg
lret
inc
mov
sti
pusha
scas
cld
jnp
cwtl
or
scas
jg
sbb
into
mov
push
outsb
popa
lea
shrb
dec
popa
ds
cmp
pop
dec
hlt
cld
lret
pop
imul
fdivr
sbb
test
jle
or
cwtl
sarb
aad
roll
dec
dec
mov
fmul
xor
test
test
add
ja
sub
out
fcompl
xchg
iret
push
cli
jle
nop
icebp
cli
sbb
fsubrl
jg
sub
nop
insb
xor
out
add
push
add
pushf
pop
in
call
cmp
jl
push
cli
pushf
fmul
pop
in
aaa
nop
repz
rcr
push
leave
sbb
mov
jns
gs
cld
cmpsl
adc
stos
push
mov
push
inc
jecxz
je
out
in
and
push
pop
mov
sbb
push
aam
pop
mov
and
mov
push
lods
pop
mov
popa
imul
xchg
adc
fisubs
adc
cmpsl
jb
pushf
sti
insl
out
push
mov
cwtl
loop
out
mov
rcl
mov
icebp
pop
or
pop
js
cwtl
jl
popa
cmp
xchg
out
outsb
push
cmpsb
push
add
cmp
sbb
inc
sbb
inc
test
adc
daa
inc
sbb
or
das
and
dec
hlt
mov
push
fsub
loopne
mulps
subl
ds
jo
jno
je
add
xor
add
fsubrs
mov
jnp
cld
and
movl
cli
in
dec
lods
and
jg
xchg
cmp
pop
daa
add
pop
sub
or
loopne
call
or
sub
aad
inc
shrl
repz
js
hlt
pop
ja
fstl
aam
and
push
or
mov
hlt
mov
test
stc
dec
jae
pushf
or
or
xor
mov
pop
inc
pop
std
xorl
addr16
xlat
or
fcoml
popf
call
add
enter
fs
es
push
pushf
xor
adc
scas
in
adc
mov
xchg
sub
add
xor
adc
dec
ds
aad
enter
addb
cli
in
push
test
stc
gs
jmp
mov
adc
fcoml
xchg
inc
pop
fcmovbe
dec
push
in
repz
mov
jns
dec
out
dec
mov
xor
xor
aad
cmpb
add
push
cmp
bound
push
and
or
dec
xchg
jg
pop
lea
aaa
rcl
je
imul
fiaddl
sti
xor
dec
call
fmull
or
ss
cmpsl
inc
cmp
pusha
push
lret
out
les
sbb
cmpsl
xor
sti
xchg
popa
add
fs
outsb
daa
fidivrs
jecxz
insb
loopne
call
xor
loop
lods
push
xlat
test
push
out
pusha
sbb
jl
clc
mov
orb
pop
dec
lahf
dec
stc
popa
and
test
adc
shll
and
aaa
clc
nop
mov
ljmp
or
cmpl
cmp
scas
pop
and
mov
or
pop
cmpsb
jl
mov
icebp
push
rcrb
insl
cmpsl
mov
pop
in
nop
and
sub
ret
and
fcoms
inc
pop
test
js
popa
daa
xchg
enter
xchg
idivb
mov
jecxz
xchg
jo
xor
pop
cmp
lcall
das
aam
add
daa
cmc
fld
xchg
pop
push
rorl
mov
into
mov
mov
mov
ret
pop
inc
push
mov
mov
pusha
js
jo
imulb
ja
xchg
xchg
mov
cmp
pop
push
push
call
cmc
jg
cvtps2pd
movsb
sub
clc
leave
mov
fwait
mov
xchg
cmp
outsb
in
scas
xor
push
pusha
ja
cmp
cs
push
fsub
sub
push
mov
mov
push
xor
mov
xchg
jo
pushf
sbbl
cmpb
cmp
jo
jl
fnstsw
cmp
pop
cmp
push
or
nop
jbe
cmp
mov
jle
je
aas
ds
in
jge
outsl
lret
addr16
lcall
ja
add
lods
inc
loop
jg
cs
enter
js
std
repnz
inc
push
stc
insb
mov
mov
mov
cltd
arpl
push
loope
cs
sarb
les
aad
cltd
sbb
xchg
js
jne
aas
pop
out
adc
fcomps
inc
mov
pop
insb
mov
xor
test
mov
push
jne
jl
xor
aam
mov
pusha
lcall
jae
push
lcall
icebp
and
hlt
pop
aas
mov
jl
fcoml
test
cmpsl
or
xor
outsl
sarl
loopne
sbb
or
sub
adc
cwtl
adc
pop
cli
or
call
jg
or
fcomps
dec
adc
fmull
jnp
or
lods
mov
mov
out
testl
or
hlt
push
lcall
es
mov
jmp
pushf
adc
nop
pusha
in
push
mov
jge
mov
jl
or
jge
dec
das
lock
in
fdivrs
add
pusha
mov
xchg
adc
or
aas
xchg
fsubrl
cmp
and
mov
push
leave
pusha
fs
pop
push
mov
ds
dec
cmp
lods
cmp
clc
push
mov
jp
add
out
xchg
je
in
adc
cltd
adc
pop
xor
jns
jnp
aas
icebp
mov
data16
xchg
or
jnp
xchg
mov
mov
imul
sbbb
push
cmp
fwait
sarl
cmp
ret
outsb
sub
js
insl
dec
cmp
out
lcall
or
test
pop
mov
pop
fdivl
pusha
push
mov
loop
in
fwait
lods
out
cmpb
mov
fs
imul
add
cmp
push
mov
cmp
cmp
imul
inc
arpl
loope
adc
js
adc
hlt
cmc
add
loope
xor
jo
or
dec
sbb
fldt
xchg
insb
fadds
xor
push
addb
push
and
xchg
dec
aaa
pop
cmpsb
push
stc
mov
popa
loopne
push
mov
xor
in
ds
pop
aas
arpl
mov
mov
or
das
cld
mov
pusha
mov
clc
adc
clc
dec
mov
out
push
sbb
mov
inc
and
insl
dec
jo
mov
mov
push
xorl
push
call
test
cltd
in
lock
mov
push
hlt
sbb
push
mov
or
sub
pop
pop
fmull
mov
arpl
ljmp
sub
sti
hlt
fdivl
jl
rcrb
vfmaddsub132pd
xchg
loop
lods
fidivl
pop
xcrypt-cfb
cmpsl
in
push
in
xchg
rcll
addr16
cli
inc
dec
inc
std
push
jmp
imul
mov
push
test
out
int3
insb
mov
pop
fucomi
sub
adc
scas
sbb
test
loopne
loope
dec
lret
mov
push
push
pop
movl
mov
pushf
jne
insb
jne
push
mov
gs
testl
mov
adc
pop
sahf
and
mov
pop
pop
ljmp
xchg
rcll
sbb
int
cli
mov
xchg
or
xchg
adc
insb
wbinvd
and
insl
inc
mov
add
addr16
jl
cmc
int
xchg
loop
jns
pop
cli
mov
cltd
sub
fwait
xor
outsl
loop
sub
sbb
pusha
sbb
std
cmp
dec
and
aas
pop
and
pushf
jp
aam
outsb
faddl
int3
nop
test
or
cmp
pusha
les
mov
stos
push
or
hlt
mov
pop
sbb
pushf
push
jl
daa
adc
test
test
adc
or
call
jg
in
daa
arpl
push
movsb
pop
pop
push
cltd
lods
add
addr16
pop
pop
daa
ret
hlt
int
jno
pusha
push
pop
pop
jmp
ret
jns
mov
and
aas
push
sbb
hlt
adc
aad
outsb
mov
insb
mov
mov
pusha
xor
cmc
ss
push
fcomps
sahf
xor
jmp
ljmp
sub
and
sarb
lock
sbb
xor
cs
pop
imul
cmp
dec
adc
test
or
fstl
sbb
mov
add
jns
sbb
addr16
xchg
data16
rcrb
adcl
dec
pop
icebp
xor
xor
jmp
fs
fnstcw
inc
aas
mov
xchg
loopne
jnp
cmp
arpl
add
in
pop
int
mov
push
cmp
cmp
daa
arpl
add
mov
arpl
add
push
insb
test
sbb
les
mov
jae
fs
call
add
in
or
sbb
movl
pop
adc
mov
jecxz
insl
subb
dec
sbb
sub
jne
jg
pop
pop
push
loope
loopne
mov
and
add
int3
mov
dec
mulps
bound
xor
pop
out
mov
mov
jmp
mov
out
outsl
imull
nop
test
mov
mov
push
bnd
xlat
jmp
ljmp
mov
rclb
call
cld
dec
adc
fcompl
je
int
testb
mov
test
sub
pop
les
mov
xchg
inc
leave
pop
rorl
mov
pop
mov
sbb
jl
mov
inc
sahf
dec
cmpsl
adcb
jno
fbld
and
cmp
dec
popf
lock
xor
les
pop
loopnew
fs
inc
mov
cmp
jl
xchg
mov
mov
jns
jbe
push
cmp
out
adc
sub
int3
inc
jnp
pop
fcomip
dec
pop
pop
sbb
data16
pop
dec
insl
push
fsub
mov
push
sbb
scas
popa
push
and
stos
std
call
cmp
pop
jb
mov
mov
add
mov
jecxz
sub
pop
addr16
cmp
popa
cmp
mov
push
jmp
jl
inc
add
mov
hlt
addl
jl
lret
aas
xorl
cmp
xchg
or
jne
pushf
or
adc
xchg
jnp
ficoml
jg
pop
pop
inc
cmpsb
or
adc
push
fxch
dec
pusha
popa
xor
cmp
insb
pop
adc
cmp
fcmovne
adc
insb
mov
imul
leave
pop
and
insl
test
mov
in
lcall
lods
add
cli
rolb
mov
xchg
cld
mov
test
scas
add
das
adc
movsb
jge
xor
or
or
jns
push
mov
push
out
in
nop
cmp
fs
adc
loopne
sar
jo
adc
jge
fnstenv
out
imul
nop
add
jns
jno
call
loopne
inc
js
cmp
add
hlt
cld
push
loop
add
test
out
arpl
cld
cmc
out
pop
enter
cmc
jg
pop
or
scas
insl
shrb
shll
loope
push
or
mov
push
pop
jmp
mov
xor
adc
or
pushf
cwtl
dec
lcall
cmp
bound
pop
jle
popa
xchg
mov
lock
je
and
mov
fistpl
fdivrs
cmp
adc
test
jmp
or
push
sti
pop
in
call
arpl
mov
pop
testb
xchg
test
or
ret
popa
in
pushf
aam
mov
cmp
push
iret
xor
dec
push
or
add
clc
imul
loop
push
pop
and
sub
and
xor
push
xor
dec
pop
hlt
sbb
aam
insb
cwtl
stos
rorb
add
xchg
imul
and
insl
mov
aaa
imul
mov
cmp
js
int3
lea
mov
jne
push
loope
or
out
jl
idiv
inc
sbb
sub
pop
repnz
cmp
jo
iret
pop
pop
lret
js
ds
push
fcomip
fsubl
sbb
rclb
jl
inc
loop
mov
in
leave
jg
pop
popa
shrb
cs
ret
pop
rclb
aas
or
xor
or
pop
pop
iret
dec
mov
jo
idivl
and
jg
jbe
test
bswap
cli
fnsave
stc
fs
in
cmp
and
pop
ljmp
call
loope
aaa
mov
xchg
aad
pop
std
mov
adc
dec
dec
pop
roll
test
pushl
adc
push
icebp
sbbb
lret
xchg
mov
mov
out
insb
pop
adc
cld
dec
hlt
xor
aam
lcall
push
xchg
sbb
lcall
mov
pusha
ljmp
or
hlt
shl
into
cmp
in
add
jne
pusha
loopne
push
cltd
lcall
clc
xchg
push
leave
and
cld
sub
sub
stc
push
movsb
xor
inc
into
popa
adc
mov
fsubs
push
sub
push
cltd
dec
xchg
xor
jb
inc
push
mov
pop
incb
popa
pop
mov
push
aam
adc
pop
bound
mov
push
add
and
loope
xchg
xor
adc
bound
int3
adc
mov
clc
cltd
lcall
adc
stos
jae
pop
pop
mov
or
lcall
out
cltd
dec
pusha
dec
or
pop
sbb
cs
test
pop
sbb
mov
cmp
movsb
cwtl
popf
sarb
lods
xchg
mov
nop
cmpsl
pop
mov
lock
popa
imul
ss
clc
mov
dec
int
cmp
movsb
pop
repz
inc
mov
stc
shl
dec
mov
fsubrs
push
out
mov
jns
cmp
in
das
push
sbb
roll
xchg
test
adc
or
xor
fisubs
adc
insb
mov
inc
push
lods
cmp
jns
aaa
pop
pop
dec
pop
xchg
cmp
loop
adc
pop
insb
lcall
clc
je
push
pop
out
or
sub
lret
addr16
mov
leave
mov
jle
inc
stc
xchg
cmpsl
and
cmp
xchg
mov
lods
mov
ja
mov
push
sub
leave
insl
and
enter
or
scas
pop
imul
loopne
negl
rcrb
or
nop
test
insb
in
ljmp
mov
clc
cmp
jl
jl
fsub
lret
cmp
mov
lds
pop
jno
push
xor
pushw
pop
imul
aam
push
insb
in
out
sbb
jle
rorb
add
jo
clc
xchg
and
lcall
and
popa
sahf
push
adc
lock
decb
lods
out
inc
loopne
cmp
scas
insb
jb
gs
int3
stos
dec
mov
cwtl
adc
and
adc
outsl
xchg
xlat
xchg
push
adc
mov
popa
ror
sub
lret
sub
dec
test
mov
in
adc
fxch
mov
lods
xchg
jnp
pop
test
or
adc
sbb
sbb
js
dec
mov
pushf
and
mov
outsb
jl
rolb
in
popf
test
mov
add
mov
pop
dec
jp
mov
fwait
lock
in
lods
insb
add
xor
fdivrs
int3
fcmovu
push
push
pop
adc
sarb
add
cmp
fwait
and
cltd
lea
pop
push
xor
fmull
push
lock
xor
shrb
sbb
xchg
out
jg
and
pop
outsl
mov
push
mov
fbstp
lods
jp
fcomi
insl
arpl
cmp
mov
dec
jl
sub
fcoml
call
ret
cmp
mov
dec
lock
pusha
or
sub
loopne
pushf
push
xchg
cmp
adc
cmp
test
insb
sub
push
insb
mov
mov
mov
bound
int3
inc
push
sbb
jns
js
sbb
pusha
jb
sub
inc
addr16
lcall
cmp
cld
jmp
dec
adc
rclb
fdiv
out
cmpsb
incb
loope
add
cwtl
inc
pop
jns
pusha
cltd
jo
jnp
xor
and
push
push
inc
lahf
fimull
sbb
test
cltd
dec
out
lock
push
in
pop
jbe
ljmp
or
pop
jg
test
mov
cmp
sbb
out
arpl
jl
inc
sbb
jo
cmp
repnz
jl
mov
sub
insb
cli
pop
pop
mov
or
sbb
sbb
loopne
cmp
push
enter
das
cmpsb
or
lods
inc
gs
cmp
arpl
pushf
mov
pusha
fs
sbb
sbb
mov
pop
jle
rolb
jl
jne
test
mov
adc
inc
pop
icebp
into
xor
std
sbb
push
push
or
fdivrl
xchg
insb
lock
ffreep
jle
mov
push
inc
clc
inc
jne
push
sbb
out
in
lods
adc
test
incb
pusha
movsb
faddl
push
xchg
sub
add
out
jae
inc
fsubl
sub
insl
clc
fs
jmp
and
fldt
mov
pop
adc
clc
xchg
repnz
outsb
negb
push
rcll
mov
inc
pop
xor
pop
pop
push
inc
add
in
adc
mov
lods
sub
and
scas
pop
cmp
mov
out
std
jo
test
and
or
flds
jmp
sbb
pop
enter
and
pusha
or
test
je
lods
int
and
inc
popa
sarb
mov
leave
mov
cmpl
test
lods
cmp
jp
or
sub
mov
pop
adc
cwtl
dec
pop
fcomps
sbbb
and
imul
rclb
pop
mov
xor
fsubs
fcmovbe
cmpb
aad
bound
in
fcoms
pusha
jns
jns
push
jmp
movsl
jp
pop
and
enter
insb
xchg
push
or
mov
pop
mov
outsl
cld
je
js
jns
gs
push
out
ss
aam
mov
pop
and
mov
inc
outsl
sub
cmp
xor
sub
xchg
sub
lods
dec
inc
es
sbb
ret
sbbl
addr16
cmp
fs
jbe
ljmp
enter
mov
cld
out
addr16
cmp
or
fdiv
sbb
mov
push
pop
add
mov
fs
mov
out
jns
nop
and
pusha
push
pop
daa
movsl
int
test
mov
pop
jle
pop
cs
pop
and
shrl
insl
mov
call
mov
test
loopne
stc
mov
cmp
sbb
or
and
mov
mov
fnstcw
aaa
sbb
inc
in
mov
mov
ss
and
xchg
mov
push
xorb
dec
pushf
mov
push
jbe
mov
int3
push
cmp
xor
push
jge
insb
loopne
test
inc
lods
pop
jmp
lock
int3
and
arpl
icebp
movsb
mov
clc
push
pop
cmp
in
jg
lret
mov
cmp
pop
add
js
clc
mov
insl
dec
sbb
xchg
pop
adc
cmp
or
aad
outsb
hlt
mov
pop
mov
push
call
xor
cmp
and
mov
pushf
push
dec
add
popa
add
adc
gs
jnp
stc
sub
add
pop
leave
mov
lock
xchg
insb
adcb
and
push
outsl
in
test
and
xchg
dec
test
pusha
bound
add
push
mov
je
cmp
xor
out
in
cmpsb
or
mov
mov
cmp
push
push
dec
aad
and
hlt
out
call
sub
mov
sbb
pop
incl
or
inc
fdiv
xchg
pop
into
jle
inc
xor
inc
mov
jl
push
jne
push
lahf
mov
xor
jl
sbb
pop
cli
inc
rcrl
sbb
out
outsl
test
mov
in
lock
scas
jbe
out
pusha
inc
sbb
sbb
loope
popf
mov
inc
sarl
lods
add
pop
cmp
in
sbb
enter
pop
sub
push
test
cwtl
pop
lods
in
out
sub
cmpsb
xor
dec
and
loopne
adc
fbstp
sbb
inc
add
mov
cli
xor
dec
jmp
adc
inc
xor
aad
ror
arpl
fsubl
or
mov
cmp
lock
lds
popa
lcall
jne
orb
fdivl
mov
inc
adc
std
lret
xchg
out
push
movsl
mov
xor
fbld
in
sub
sbb
lods
notb
pop
inc
sbb
push
test
cmp
fistps
pusha
in
das
push
iret
sbb
pop
push
cmpsb
scas
cli
pop
stos
imul
sub
mov
sbb
pop
in
mov
cwtl
sbb
aas
fcoms
stos
mov
mov
dec
pusha
jns
ds
in
ja
jns
mov
pop
mov
leave
xchg
sbb
mov
test
add
popf
pop
inc
pop
xchg
clc
movsl
and
inc
mov
lods
les
xor
cmpsb
cmc
cmp
cmp
jg
subb
cld
add
test
shl
sbbb
cmp
pop
adc
xchg
int3
mov
add
shll
mov
fs
cli
push
inc
in
mov
jmp
clc
and
jo
mov
adc
xor
aam
mov
adc
pop
jmp
and
adc
fildll
jbe
fs
fcompl
push
loop
pop
mov
pop
imul
xchg
mov
std
sbb
hlt
sbb
imull
ja
enter
jo
push
pop
out
push
mov
test
cwtl
jns
jnp
or
call
dec
pop
imul
shrb
movsb
call
mov
pop
out
scas
in
sarb
lods
leave
sarb
push
inc
popa
int
loopne
iret
sahf
js
outsb
imul
in
or
gs
out
lock
fisubrs
jns
js
dec
jp
ja
push
test
jnp
xor
pushf
push
adc
jo
fdivrl
sbb
out
rorb
mov
mov
cmp
loop
stos
in
and
mov
in
dec
adc
sbb
adc
ja
insl
shlb
jns
pop
mov
sub
mov
lods
mov
adc
adc
pop
insl
fdivr
xor
rcrl
cltd
add
jns
push
push
movsb
into
adc
stc
push
leave
jmp
or
cltd
and
jmp
lock
dec
jmp
pusha
dec
test
mov
xchg
and
out
pop
mov
sbb
lock
jmp
cmp
imul
outsl
jns
xchg
push
test
add
mov
mov
mov
push
fiaddl
je
mov
push
dec
push
addr16
jl
or
xchg
fsubs
cwtl
adc
leave
jp
fs
xchg
sbb
dec
repnz
xlat
test
jo
sbb
xor
insb
and
fsub
and
ficompl
loopne
sub
push
dec
clc
fisubrs
mov
mov
orb
js
lds
push
or
jo
jno
imul
adc
push
hlt
mov
loopne
dec
loope
das
xor
mov
inc
cmp
sbb
inc
xchg
or
aam
bound
test
dec
push
push
add
mov
cmp
pop
mov
pop
jo
mov
std
lods
in
call
cmc
imul
push
mov
push
bound
mov
jo
movaps
jnp
pop
jnp
arpl
mov
sbb
scas
int
test
add
sti
cmp
jle
jge
aas
mov
mov
das
pop
pop
out
orb
cld
and
mov
js
mov
sub
cmp
push
mov
inc
sub
add
mov
fdiv
je
mov
dec
and
cmp
loope
pushf
sbb
pop
push
sbb
cmp
lods
add
nop
mov
sbb
and
hlt
iret
cmpsb
insb
mov
mov
cmpsl
lock
mov
cltd
ret
clc
adc
push
pop
sub
insb
dec
cli
sbbb
xor
push
cmp
sub
shrl
imul
sbb
cwtl
xchg
jmp
jb
sub
or
loopne
jmp
mov
lods
pop
xor
fxch
cmp
clc
fcomp
mov
pop
or
push
js
call
pop
fsub
out
insl
xor
sbb
and
lods
push
or
es
xchg
and
loope
pop
adcl
fs
test
xor
out
jnp
and
and
sbb
out
or
sbb
mov
sub
mov
inc
fsubrl
pop
mov
loope
xlat
fcoml
aam
or
xchg
pop
push
cld
xchg
sahf
ljmp
aaa
jp
mov
in
lcall
or
push
rcr
push
add
aaa
es
dec
aam
hlt
xchg
or
mov
js
cld
sbb
xchg
xor
inc
adcb
xchg
pop
sbb
pop
test
sbb
jle
jo
add
and
rclb
lock
cmp
cmpsb
sbb
cmp
popa
pop
cltd
sub
ss
mov
inc
inc
cwtl
jo
mov
cmp
fisttps
out
and
mov
pusha
test
jg
cmp
xor
jge
jne
mov
lret
mov
pop
loope
je
movsl
fsubrl
push
lret
test
mov
inc
adc
jg
xchg
jl
cmc
xchg
jmp
call
pusha
stc
push
int
push
sub
add
xchg
sarb
js
gs
pop
cmp
pop
xchg
cmp
pop
test
arpl
jb
std
sub
xchg
in
xchg
pop
jg
imul
pop
dec
stos
sub
es
hlt
test
xor
dec
mov
adc
jo
adc
lods
xchg
jae
cwtl
or
cli
loopne
and
or
fadds
inc
cmp
fwait
sbb
clc
mov
cmpb
negb
fiaddl
sbb
push
fs
pop
mov
mov
lods
notb
imul
xchg
and
bound
stc
mov
divb
pop
repz
and
adc
mov
pop
cmpsl
inc
js
mov
adc
ret
jl
je
adc
test
cld
mov
hlt
insl
sub
imul
lods
push
fwait
mov
pop
bound
push
pusha
sbb
mov
cmp
popa
aas
nop
popa
add
loopne,pn
in
mov
cld
bnd
or
fs
mov
xchg
mov
mov
adc
andb
clc
cmp
pop
cmpsb
or
test
inc
mov
sub
fs
adc
ljmp
fmuls
imul
subl
int3
push
cld
fcoms
inc
sub
mov
or
daa
ja
movsl
lea
lods
sub
jg
sub
rorb
jge
test
fcomps
fcoml
sub
in
call
pop
test
pop
out
dec
xor
jns
push
arpl
and
lahf
push
add
nop
pusha
pop
mov
pop
jo
inc
les
pop
pop
xchg
jg
inc
xchg
jns
pop
leave
jmp
inc
jo
clc
push
test
dec
xor
test
sbb
pop
loop
sub
insb
sahf
data16
lcall
adc
data16
push
and
lcall
adc
test
and
mov
inc
sbb
je
or
imul
loop
push
lcall
sub
lea
and
addr16
sbb
outsb
loopne
pop
out
pop
pop
rolb
mov
cmp
and
jl
insb
movsl
inc
lods
arpl
mov
test
fcoms
xor
fs
fildl
cmp
pop
adc
loope
inc
in
and
loope
dec
hlt
sub
outsb
nop
pusha
js
cmp
cwtl
in
sbb
aam
in
nop
pop
pop
push
xor
je
dec
and
ficompl
movsb
inc
js
outsb
rorl
icebp
mov
mov
sbb
cmp
shlb
scas
arpl
jo
fldt
std
push
sbb
lock
cmpl
push
enter
fcomps
push
clc
mov
mov
int3
enter
sbb
pop
cmp
dec
leave
jns
pop
std
xor
jno
pop
inc
mov
movsb
sub
pop
mov
clc
jo
or
jge
and
push
sub
shr
rcr
int3
sti
xor
mov
aaa
fs
push
jne
idivl
dec
cmp
mov
jb
arpl
jmp
dec
adcl
dec
shlb
fistpl
sbb
cli
outsl
cmp
sbb
adc
pushf
xchg
mov
xor
insl
arpl
icebp
mov
xor
dec
jg
mov
jg
inc
pop
out
mov
adc
lock
xlat
cli
pusha
jg
push
cwtl
and
lea
nop
jns
jo
sub
inc
test
sbb
add
fsubr
shl
aam
jo
les
call
jns
aas
mov
pop
xor
pop
and
push
pop
add
sbb
je
cli
test
sub
adc
into
or
push
test
xor
xchg
imul
out
hlt
lahf
push
sbb
repnz
js
pop
fcompl
cmp
push
push
stc
lcall
and
add
fadds
jge
mov
pop
mov
mov
jo
fdivr
pop
shrb
push
imul
cmp
sbb
ljmp
dec
push
add
shll
push
jle
insl
inc
pusha
data16
out
mov
jno
inc
lcall
repz
and
sbb
iret
dec
pop
push
xchg
icebp
hlt
xchg
jg
cld
pop
insb
sub
mov
popa
inc
jae
mov
xor
lcall
inc
outsl
add
nop
sbb
imul
stc
mov
cwtl
repnz
in
insb
fsubrs
adc
jnp
pop
out
xor
jne
mov
not
inc
jmp
and
and
out
sbb
jl
pop
xchg
jno
test
hlt
mov
or
mov
fcomp
lret
pushf
stos
wrmsr
xchg
push
pop
mov
js
push
pop
adc
ds
push
mov
jb
fcompl
insb
jno
sbb
add
rcrb
inc
je
adc
jne
pop
sbb
int3
push
lods
or
and
mov
fildll
or
andb
pop
pop
movsl
and
outsl
push
add
adc
cli
enter
or
dec
pop
push
divl
test
sub
call
adc
mov
cld
stos
jmp
inc
js
jns
outsb
xorb
testb
sbb
inc
imul
popf
lock
dec
pop
and
xor
cmp
cmp
push
xchg
xchg
testb
int3
add
pusha
push
filds
test
pusha
stos
ja
pop
adc
sub
sub
pop
ss
jne
imul
jl
pop
lds
insb
sub
lock
dec
pop
cmp
lods
pop
shl
addr16
pop
adc
mov
int
pop
jo
outsb
dec
and
dec
pop
sbb
jb
roll
xor
jbe
cmp
hlt
rorl
pop
pop
jae
dec
outsb
enter
pop
xchg
xchg
int3
sahf
xchg
jge
jg
push
in
mov
mov
jl
shlb
sbb
nop
push
out
push
xor
sub
in
sti
rclb
adc
les
test
mov
xor
clc
adc
lret
popa
lcall
pop
lods
jge
inc
or
out
add
insb
shr
mov
sbb
fstp
mov
sbb
call
jmp
add
test
sbb
pop
mov
nop
adc
sti
das
sub
push
pushf
cwtl
je
push
jg
sbb
sbbb
adc
pusha
pop
stos
fsubr
ret
sub
into
mov
or
xchg
test
lods
push
pop
mov
and
sbb
jg
insl
mov
fstps
mov
fdivrs
outsb
mov
jg
lods
dec
rcrb
sbb
popf
push
arpl
mov
gs
mov
push
mov
xchg
add
xchg
test
aam
pop
ficomps
popf
fdivl
test
jo
xchg
jne
jecxz
pusha
cmp
pop
js
or
loopne
push
sub
sbb
and
cld
dec
push
xor
rorb
enter
dec
fidivs
pop
cld
or
jle
pushf
sbb
pop
int3
adc
test
or
pop
pop
subb
cmp
loopne
div
xchg
jge
push
mov
imul
mov
rorl
jnp
pop
jne
call
and
fnstcw
fs
incb
fcomp
xor
enter
dec
xchg
fistl
sub
aam
cmp
dec
xor
sbb
push
inc
testl
mov
aaa
jns
fisttpll
lcall
loope
inc
mov
sbb
stos
cmp
popa
stos
add
je
test
sub
pop
pop
jne
xor
clc
fs
sub
add
push
mov
test
mov
and
inc
or
push
outsb
inc
lea
mov
into
jbe
fsubrp
shl
inc
dec
rolb
xchg
sbb
fdivrl
jge
xchg
adc
js
fyl2x
arpl
dec
out
push
nop
and
les
stc
add
orb
lret
push
xor
shrl
and
push
cwtl
sub
pop
subl
push
push
sub
jl
stos
sarb
sbb
cmpsl
int3
mov
or
hlt
cli
test
fs
lcall
mov
aaa
js
sub
and
pop
pop
je
push
or
jge
cltd
outsb
cld
pop
arpl
pop
loopne
out
xor
aas
cmp
xor
ficoml
sub
mov
lcall
stc
xchg
add
sbb
cmp
push
pop
insl
adc
out
mov
negb
repnz
push
cmp
fnstcw
xchg
js
call
xchg
loop
jl
adc
in
movsb
mov
add
pop
jno
ret
cmp
jp
popf
inc
jl
sbb
leave
cld
cmp
fisttps
std
pop
or
lcall
push
int3
mov
jno
jmp
fmul
dec
rclb
push
xor
test
sti
shl
jl
sbb
mov
rcrb
stos
in
push
pop
mov
push
dec
pop
sbb
mov
and
repz
sbb
sti
push
xchg
xchg
dec
cmpsb
shlb
add
xor
sbb
stos
pop
fcmovbe
jge
push
pop
adc
fmuls
ljmp
jp
push
mov
push
addr16
adc
pop
or
mov
pop
cmp
pop
push
mov
pop
mov
add
mov
aaa
jo
lcall
pop
xchg
or
sub
adc
data16
rcl
xchg
pop
fiaddl
xlat
decl
cmp
je
pop
dec
aas
insb
pop
inc
out
jns
mov
jne
pusha
test
inc
sbb
fisttpl
jns
jg
jl
data16
xchg
mov
nop
sbb
cli
jge
dec
mov
adc
push
adc
rol
cmpl
push
dec
pop
lods
jl
or
jo
xchg
cwtl
push
movsb
sbb
pop
in
jno
popf
pushf
scas
dec
clc
enter
pop
xor
adc
mov
cwtl
jnp
lret
fsubrs
pushf
bound
insb
or
imul
in
rorl
pop
stc
test
pop
mov
js
hlt
sti
pop
rcrb
sbb
xchg
out
insb
push
ds
fwait
jle
enter
and
sbb
sbb
lock
jmp
js
mov
xchg
cmp
subl
xchg
cmp
mov
enter
push
nop
sbb
out
insb
cmp
sbb
rclb
les
xor
and
mov
pop
bnd
dec
in
int3
push
subb
pop
mov
fdivl
in
mov
clc
jo
push
and
mov
cld
cmp
cltd
bound
test
cld
sahf
out
and
nop
fsubrs
mov
jo
movsb
pop
loopne
nop
aas
mov
xchg
out
orl
mov
test
add
hlt
and
fcompl
shll
imul
in
clc
clc
lods
xchg
test
mov
jg
cmp
pusha
rorl
cmpsb
push
pop
inc
ja
repz
jbe
and
sbb
cld
mov
mov
push
adcb
shrb
push
cmp
jl
push
enter
mov
sbb
sub
add
je
imul
fs
add
addb
cmp
jbe
sbb
mov
ss
pop
icebp
xchg
push
jbe
in
sahf
lcall
add
mov
xor
fs
adc
cmpsb
jl
pop
hlt
test
movsb
fcoms
and
rcrl
sarb
sbb
or
inc
js
pop
adc
dec
cld
and
pushf
cwtl
ja
or
shrb
call
sub
test
mov
pop
xchg
roll
mov
fcompl
jns
push
mov
sub
js
into
xchg
lret
push
xchg
test
push
les
or
pusha
ficomps
rcrl
loopne
lock
sahf
arpl
into
lods
dec
lock
adc
add
or
pop
je
cli
xorb
inc
cwtl
jo
sbb
arpl
or
jo
ret
xchg
pop
in
clc
dec
pushf
std
arpl
sbb
cmpsb
pop
pop
xchg
inc
stos
cmpb
and
mov
fsubrs
ja
or
cmc
lock
rcrb
je
cmpsb
mov
test
fcompl
and
xor
sub
arpl
sbbl
lock
mov
jb
jge
push
jns
nop
test
icebp
in
cmp
push
sbb
adc
or
push
inc
jmp
out
push
jl
push
and
enter
adc
cmp
xlat
or
int3
arpl
stc
jl
mov
test
mov
addb
pusha
nop
into
js
std
push
stos
punpcklbw
sbb
movsb
and
jl
aas
nop
mov
mov
push
fwait
inc
pusha
sbb
repz
xchg
sbb
cli
or
je
adc
rep
mov
test
out
scas
nop
dec
loop
jge
shr
jl
pop
xchg
dec
xor
jmp
es
sub
mov
test
hlt
fsubrl
ja
in
fwait
rorl
stos
call
jg
cmp
push
inc
pop
mov
jle
xor
xchg
cmp
popf
nop
js
cmpsb
mov
test
cmpsb
sbbl
fidivs
push
or
or
js
or
loopne
sbb
mov
test
mov
aas
mov
push
cmp
pop
dec
call
scas
lock
xchg
aad
xor
jo
enter
lahf
cmp
mov
xchg
sti
js
mov
jo
out
leave
dec
lods
inc
sarl
idivb
insb
dec
and
pop
dec
add
outsl
addl
add
inc
mov
xchg
and
cmp
sub
sarb
or
fisubrl
stos
in
adc
mov
push
add
andl
outsb
movsb
vmwrite
inc
pop
stc
and
inc
bound
fmuls
cltd
xchg
fmuls
loopne
outsl
inc
jl
inc
test
idiv
scas
gs
jg
scas
dec
and
jnp
add
insb
jl
jbe
cmp
mov
je
lcall
and
pop
ds
pop
push
sub
cmp
sbb
xlat
lods
xchg
loop
test
fsubl
pushf
sbb
pop
sub
xchg
fs
add
fs
int3
movsl
jnp
mov
mov
fsubs
sub
jg
xorb
addr16
mov
and
je
movsb
and
rolb
inc
fisubrs
xor
inc
clc
jl
xchg
mov
add
sbb
lock
test
ret
add
je
push
sub
add
pop
cmp
dec
mov
je
jle
sub
movsb
lods
xor
add
inc
push
inc
fsubr
loope
pop
pusha
inc
cmp
inc
cli
sub
jne
jo
and
movsb
dec
pop
sbb
daa
repnz
or
cwtl
adc
cmp
shrb
adc
leave
inc
mov
mov
dec
xchg
sbb
dec
jmp
js
sbb
dec
hlt
jo
mov
jo
dec
push
nop
hlt
in
notl
mov
fs
pop
or
sbb
adc
cmp
data16
ja
or
call
addb
movsb
pusha
jl
arpl
les
cmp
pop
ja
aad
mov
in
push
fsub
clc
fcoml
mov
outsl
pop
jb
hlt
mov
dec
lret
mov
test
cmp
mov
fmull
test
jmp
jns
push
bound
call
scas
lock
ret
inc
adc
mov
data16
push
lret
enter
cld
mov
test
pusha
jns
ja
cmp
jns
inc
sbbb
pop
pop
xor
lods
fwait
or
inc
mov
insl
push
mov
mov
adc
ds
inc
sub
and
out
lcall
into
repnz
outsl
sbb
out
lret
je
pushf
les
movsb
insb
cmp
sub
pop
rorb
sbb
jns
pop
out
pop
xor
xchg
pop
pushf
fiadds
add
fs
pop
jne
pop
fsubr
into
inc
test
fdiv
add
pusha
pop
fcompl
aam
xlat
sti
pushf
pop
mov
xorl
fcomp
cmp
jo
stos
inc
mov
and
jo
add
mov
sbb
or
fwait
push
and
jg
clc
ss
push
fsubr
xor
outsb
popa
xor
lock
outsb
sbb
sbb
fs
out
sbb
mov
fcompl
movsb
dec
lods
sub
scas
in
add
int3
cmp
aam
fcomp
xor
add
adc
int3
push
jnp
shl
fistps
std
mov
pop
push
adc
sub
stos
pop
or
addl
sub
dec
test
or
nop
jns
fsubr
or
call
mov
fsubrs
mov
and
cmpsl
cld
push
enter
test
push
or
sub
and
inc
pop
and
shrl
iret
imul
xor
mov
xlat
test
cld
mov
sbb
mov
dec
push
dec
or
push
je
mov
lock
nop
jbe
ja
cmp
mull
pusha
adc
arpl
ficoms
xchg
cmp
in
sub
xor
mov
outsl
hlt
jl
nop
test
cmpsb
popa
or
xor
scas
mov
lcall
frndint
sti
inc
dec
fsubr
into
cs
fst
scas
cmc
test
dec
jae
pop
push
in
mov
sbb
push
cmpsb
and
addr16
out
pop
loopne
add
xchg
xchg
sbb
mov
adc
out
pop
mov
inc
hlt
sub
rcrl
nop
mov
pop
add
dec
or
es
insb
arpl
data16
in
mov
rorl
and
xchg
loopne
shrb
pop
repz
pop
jae
pop
insb
out
pushf
ret
pop
cmp
xorl
mov
push
mov
push
xlat
mov
xchg
inc
dec
pop
stc
mov
cmpsl
cld
pop
das
out
mov
call
pop
and
out
jecxz
lds
inc
mov
cmp
mov
sub
jg
or
sbb
push
cltd
lods
xchg
dec
xchg
stc
adc
xchg
or
fstps
scas
mov
mov
lcall
inc
lahf
sbb
in
jne
push
dec
push
add
lods
pop
ror
nop
cli
daa
pop
mov
cmpsl
xor
pop
xchg
xor
cltd
cwtl
xchg
xchg
mov
popf
adc
jp
xor
push
rcrb
fidivl
mov
add
imulb
nop
cmc
push
sbb
pop
dec
and
into
sub
mov
pop
adc
call
jmp
dec
xor
or
out
stos
out
and
mov
sub
pop
adc
fdivrp
inc
pop
iret
test
lds
cmp
push
sbb
in
sahf
sub
call
pop
cwtl
sub
mov
ja
pop
inc
clc
loope
ss
pop
cli
adcb
cltd
jecxz
arpl
addl
repz
imul
push
movsl
sbb
jo
jmp
scas
xor
pusha
pop
or
movq
push
pop
push
sub
rcrl
test
je
pop
add
lcall
xor
mov
outsl
cmpsl
sub
adc
pusha
cs
pop
insb
mov
movsl
jne
push
jnp
push
js
push
nop
pop
stos
mov
leave
cmp
jle
aaa
mov
enter
imul
fmul
mov
mov
shrl
fadds
pop
and
mov
sub
jno
inc
and
mov
jmp
adc
adc
and
xchg
arpl
cmp
pop
jb
sbb
sbb
inc
xor
pop
add
push
cmp
or
sbb
push
adc
inc
fcmove
or
cmp
pop
mov
jbe
pop
cmp
xchg
sahf
leave
xor
pop
add
in
push
ljmp
pop
into
sti
or
je
call
adc
popf
xor
shrl
insl
scas
les
pop
ljmp
jg
and
sbb
lahf
mov
pop
nop
outsb
lds
pop
and
add
sbb
dec
data16
push
rolb
add
or
push
je
rcrl
pop
xor
pop
xor
pop
es
cltd
gs
jo
sahf
lret
les
pop
xor
ret
dec
xor
add
pop
pop
pop
add
and
mov
push
negl
mov
lods
in
test
jb
jne
xchg
cwtl
test
popf
pop
aam
subb
scas
testl
pop
inc
push
cmpsb
cld
movsb
adc
pop
adc
and
jno
pop
dec
cwtl
je
filds
lea
arpl
mov
aam
jp
leave
in
cli
pop
movsl
xchg
or
in
jg
xchg
xchg
mov
inc
sub
enter
pop
sub
mov
addr16
inc
fdivrs
es
mov
pushf
lcall
mov
inc
xchg
push
cld
pop
xchg
cmp
test
mov
cmp
ret
adc
pop
xchg
push
mov
push
sbbb
dec
or
cs
int3
addr16
pop
pop
adc
jne
pop
sbb
out
insb
loope
pop
xchg
jmp
imul
xor
ja
cmc
add
test
jbe
jne
fsubrs
pop
cltd
and
insb
adc
push
or
push
jg
cmp
arpl
inc
pop
fsubrs
mov
fmuls
nop
and
jle
pop
jb
mov
fnstcw
inc
out
sbb
add
and
pushf
lock
movsl
xchg
xor
add
rol
imul
cmpsb
mov
pusha
cmp
movsb
rcrb
xchg
dec
lret
dec
shlb
shll
popa
mov
repz
fsubr
push
aaa
sbb
aas
and
loopne
outsb
dec
add
pop
je
ficompl
sub
pop
rcll
popa
push
or
push
mov
call
cmp
mov
mov
mov
push
pop
xchg
faddl
idiv
pop
rcrb
addb
das
pop
and
lock
cmp
shlb
scas
ljmp
xlat
repz
mov
jmp
xchg
outsb
xor
and
hlt
adc
push
and
sub
stos
mov
mov
cwtl
xlat
in
arpl
pop
dec
adc
cmp
fistl
mov
pop
cli
cs
xchg
shl
cmpsb
cwtl
pop
mov
adc
pop
mov
sbb
test
xor
pop
and
jnp
pop
xor
mov
dec
lock
pop
jne
ret
dec
and
sub
mov
jl
int3
cmp
or
or
jmp
pop
push
or
out
pop
lds
leave
neg
push
pop
rolb
adc
mov
leave
mov
lds
and
jle
cmc
xchg
bound
test
jns
pop
dec
xchg
sub
pop
pushf
ja
xor
or
adc
notb
jne
sbb
roll
js
sub
dec
ja
push
and
push
stos
movl
scas
negl
stos
fcompl
xor
pop
pop
sbb
test
arpl
in
pop
in
int3
inc
jae
xor
pop
sbb
push
mov
test
cmp
ljmp
add
loop
test
nop
jl
pop
ret
mov
jp
sub
mov
pop
sbb
pop
cwtl
xor
pop
sbb
pop
cmp
cs
xrelease
pop
cltd
and
dec
iret
pop
add
xchg
adc
xchg
push
pop
pop
jmp
stos
jb
insb
dec
arpl
rcl
neg
pop
scas
outsl
fwait
inc
int3
adc
or
mov
push
jecxz
leave
sbb
pop
or
aas
shlb
lret
pop
imul
fdivrs
mov
push
fistpl
mov
in
pop
or
pop
adc
loope
mov
xchg
sti
and
pop
mov
mov
shl
rcrl
aas
outsl
call
pop
in
mov
scas
pop
lds
adc
mov
scas
pop
lret
pop
and
pop
pushf
es
dec
mov
or
mov
enter
sbb
xchg
push
lods
pop
mov
push
insb
mov
ret
je
je
idivb
pop
pop
jmp
pop
pop
testb
push
test
pop
fdivs
gs
push
cmp
mov
pop
add
and
push
dec
pop
and
rclb
pusha
loopne
pop
mov
and
test
fdivl
and
pop
adc
cmp
jne
push
xchg
or
xor
xchg
mov
pop
dec
stos
cmpsb
movsb
das
fcomps
xchg
mov
rcrb
sub
enter
xchg
fsubrs
mov
je
push
ds
sti
xchg
cmp
inc
inc
push
dec
jle
mov
pop
into
dec
or
outsl
xor
push
pop
add
ret
fcomps
jb,pt
addr16
push
cmpsl
std
xchg
sub
das
pop
sub
and
ljmp
xchg
sub
ret
call
stos
rorb
xchg
mov
jae
nop
cs
mov
cmp
pop
jbe
add
fcomp
insl
in
sub
dec
imul
dec
loop
repz
mov
lret
movsl
mov
test
xor
fiadds
nop
addr16
repnz
mov
pop
sub
pop
incl
mov
pop
outsb
pop
outsl
in
cwtl
jnp
push
pop
out
xor
mov
testb
sbb
fdivrs
xor
and
adc
js
xchg
cmp
lret
rcll
loopne
fs
xchg
cmpsb
xchg
pop
aad
mov
sti
out
pop
fisubl
mov
xchg
scas
sahf
fdivrs
mul
lods
movl
cltd
pop
shll
jns
into
arpl
add
cmp
sub
aas
and
or
pop
out
mov
add
xchg
negl
jge
test
rorl
pop
mov
rclb
and
lock
fsts
xor
popf
out
pop
sub
jmp
xchg
pop
cmp
fs
nop
clc
inc
pop
movsl
jne
push
and
aaa
dec
mov
sbb
dec
fdivl
pop
push
dec
mov
push
inc
ljmp
cmp
pop
jb
push
or
or
hlt
pop
mov
and
in
sbb
pop
sub
js
pop
xchg
lods
and
push
xchg
dec
dec
out
cmp
pop
fcmove
sbb
inc
dec
pop
pop
mov
cwtl
int3
scas
into
shll
fnsave
jae
rol
pop
push
sti
cld
fxtract
xchg
xchg
outsb
or
je
jmp
or
push
imul
movsb
sub
adc
icebp
cli
js
mov
mov
out
pop
or
out
stc
mov
push
pop
jmp
ss
scas
js
adc
negl
incl
fisubl
lds
shlb
or
adc
aaa
sub
and
data16
scas
sub
cs
clc
pop
pop
in
jge
out
jnp
pop
mov
insl
jns
cmp
pop
xor
inc
hlt
or
adc
xchg
and
out
loopne
xchg
test
pop
fadds
fmull
stos
in
icebp
jl
aas
dec
pop
ja
xor
pop
insl
std
test
data16
sub
cmp
lret
or
cltd
insl
add
xchg
pop
mov
pop
ljmp
pop
xchg
clc
movsl
jmp
dec
fidivs
and
jl
popa
mov
out
mov
push
push
ss
pop
mov
pop
loopne
loope
pop
jbe
in
repz
adc
pop
cltd
mov
ss
pop
iret
les
mov
rclb
pop
push
and
lcall
push
cmp
mov
mov
mov
inc
cmpsb
test
arpl
or
fcomi
int
cmp
dec
pop
sub
jecxz
push
xchg
adc
popa
cmp
add
xor
mov
insb
sub
cmp
fistpl
xor
in
ljmp
rcrl
je
aaa
mov
pop
arpl
sbb
pop
jecxz
cmpsb
rorl
push
pop
clc
jns
loop
add
pop
jnp
add
pop
adc
jo
inc
outsb
dec
inc
pop
fwait
lret
repz
sbb
sub
dec
daa
pop
jbe
cmp
xor
dec
cwtl
push
iret
pop
cmp
ljmp
jns
or
adc
rclb
and
adc
aam
pop
push
data16
lret
fisubrs
pop
dec
jbe
sti
pop
ds
sbb
movsb
scas
into
addr16
lds
and
xlat
and
inc
bound
xor
push
sbb
cmp
cmp
lret
negl
stos
cmc
mov
cld
pop
mov
push
pop
jp
inc
pop
pop
or
enter
iret
call
sbb
xchg
sbb
xchg
jno
mov
push
jb
fstps
fisttpl
stc
pop
mov
pop
cmp
fcoml
lods
pop
std
pop
add
jmp
div
fimull
inc
std
popf
or
dec
in
pop
out
xchg
cltd
sub
cld
cmp
cmp
outsl
pop
mov
adc
mov
xlat
sbb
mov
mov
xor
pop
xchg
daa
pop
fidivl
jle
test
negl
adc
int
dec
out
fisubrs
pop
fcmovnb
or
xor
xor
xor
mov
lahf
push
inc
stos
pop
sbb
adcb
mov
push
pop
and
jb
mov
cmc
or
bound
insl
pop
sub
jmp
out
xlat
xchg
fadds
loop
pop
inc
add
mov
pop
ja
in
loope
sbb
ja
push
xor
lea
pop
xchg
xchg
test
imul
mov
push
pop
jmp
enter
test
mov
dec
pusha
pop
jg
es
push
arpl
movsb
insl
imull
push
push
popf
sbb
loopne
xchg
add
jp
aad
and
pop
and
pop
roll
push
pop
rorb
inc
jae
cmp
mov
mov
pop
pop
pop
push
in
aaa
inc
or
pop
or
add
subb
pop
subb
push
adcl
out
sub
pop
dec
pop
subl
ss
pop
pop
xor
icebp
lcall
nop
xor
sub
xchg
sbb
inc
popa
aad
hlt
cmp
outsb
out
mov
js
insb
out
pop
xchg
test
push
hlt
in
in
pop
dec
push
push
clc
inc
cmp
add
int3
jno
adc
sub
ror
mov
pop
jne
cwtl
out
jns
test
dec
mov
add
add
adc
loop
popa
pop
sub
xor
dec
lock
stos
push
adc
push
dec
in
and
sub
pop
ficoml
mov
mov
scas
xchg
dec
inc
test
inc
out
mov
and
push
pop
sub
adc
in
incl
int
pop
mov
mov
jle
sti
sub
pop
mov
adc
addl
cmp
ja
sub
jge
jle
push
pop
fldl
mov
add
ret
das
xor
pop
addr16
out
rcr
icebp
push
and
mov
jge
pop
mov
fcompl
ja
adc
pop
mov
pop
dec
fidivs
test
jl
das
in
jae
or
stos
pop
out
add
repnz
inc
sub
push
aad
pop
shll
xlat
fistps
or
pop
dec
push
jnp
push
xor
cs
sti
jge
xor
pop
movsb
fldenv
sub
pop
xchg
rorb
aad
dec
fmul
jp
pop
sub
jbe
nop
dec
pop
repz
inc
scas
fs
in
mov
or
cmp
iret
xor
mov
jg
adc
push
fstl
push
pop
lock
cmp
and
roll
mov
aam
push
inc
cmp
pop
pop
or
cli
int
lock
jecxz
sarb
xor
and
pop
mov
mov
pop
addr16
pushf
test
mov
sbb
fdiv
sbb
mov
jne
inc
fsub
ljmp
jae
mov
ret
push
mov
or
jns
cld
pop
mov
in
mov
inc
clc
pop
mov
push
xchg
ss
xchg
sub
outsb
pop
push
inc
pop
lret
ret
pushf
pop
cmp
jne
popa
or
cmp
jns
daa
pop
aad
in
push
pop
movsl
inc
ss
xor
ret
pop
fldcw
je
lcall
pop
lahf
imul
pop
adc
int3
mov
pop
in
mov
push
and
and
ds
dec
leave
movb
pop
fstp
rcrl
pop
sbb
ss
pusha
ja
pop
cmp
arpl
outsb
jne
aaa
xchg
bound
inc
adc
imul
xor
test
adc
cld
cwtl
pop
dec
xchg
adc
in
inc
sbb
xchg
lea
push
pop
jecxz
pop
cmp
lods
inc
pop
lret
imul
pop
inc
daa
and
in
pop
mov
gs
pop
enter
pop
jle
stos
pop
sbb
ljmp
add
icebp
std
movsb
dec
fcoms
xchg
dec
mov
test
loop
sub
mov
push
ret
pop
inc
outsl
repz
mov
sbb
shll
dec
mov
test
pop
lahf
popf
pop
xor
js
ficoml
or
mulps
pop
mov
imul
and
push
nop
test
repnz
aad
pop
sub
pop
inc
orb
pop
les
lcall
leave
in
loope
fs
pop
inc
add
fcmovnu
in
xchg
stos
negb
roll
in
sub
sbb
es
sti
xor
xchg
cli
xchg
and
mov
aaa
imul
or
xlat
push
cmp
ja
movl
fmull
daa
sti
fwait
es
jne
arpl
push
xchg
xlat
das
inc
mov
jle
push
arpl
aas
and
loop
pop
mov
dec
movsb
pop
pop
scas
mov
sbb
pop
mov
or
popa
mov
sbb
push
stc
jecxz
scas
mov
inc
cwtl
push
xchg
in
inc
jae
call
enter
jb
das
loop
lock
outsb
cmpsb
inc
ja
sub
fsubr
out
idivb
dec
sub
add
inc
pop
cmp
jl
icebp
pop
lcall
mov
dec
sub
xchg
ljmp
fsubs
pop
imul
pop
adc
idivl
pop
xchg
mul
jg
pop
push
push
pop
sbb
call
pop
arpl
lret
mulps
add
mov
fdivs
rcll
push
inc
push
adc
push
bnd
lock
pusha
lock
cmp
fisubrl
dec
pop
das
push
cwtl
sub
push
imul
stos
adc
xor
xchg
jbe
xchg
dec
popf
jbe
jp
out
pop
loopne
pop
push
aam
push
inc
mov
dec
pop
pop
cmp
inc
xchg
xchg
mov
data16
push
jle
xchg
sbb
daa
pop
sbb
sbb
test
jg
cmp
clc
dec
rcrl
jge
jb
push
sub
adc
cmpb
cmp
inc
fisubl
pop
lcall
xchg
pop
inc
scas
inc
fadds
or
and
enter
pop
cli
pop
popf
or
addr16
adc
pop
repz
pushf
adc
add
and
mov
pop
scas
jb
fcoms
pop
add
clc
sbb
mov
jbe
sbb
ds
pop
xchg
mov
pop
jbe
push
je
mov
les
dec
fsubrs
pop
dec
fs
jns
call
xor
jbe
inc
cwtl
outsl
mov
rcrb
xor
and
sub
or
mov
inc
mov
cmpsb
or
mov
pop
cmp
negl
jecxz
stc
mov
in
maxps
or
sbb
mov
pusha
std
mov
sbbl
neg
call
adcb
lcall
aaa
pop
lock
cmpsl
cmp
sub
lods
shr
dec
mov
jns,pn
cmp
sub
sbbb
mov
cmc
pop
mov
ret
pop
xchg
xchg
or
inc
rcrb
pop
add
nop
push
lods
in
pushf
dec
push
pop
xchg
fstpt
je
cmp
or
xor
imul
pop
dec
adc
test
sahf
xlat
je
adc
popa
cvtdq2ps
fnsave
cmp
inc
sbb
pop
lret
push
push
sbb
scas
pop
sti
and
fsts
lret
bound
orb
fwait
pop
cmpsl
aad
fcomps
into
push
push
ds
xchg
inc
push
cld
pop
rcrb
xchg
xchg
movl
sub
and
sbb
lea
imul
mov
aam
adc
dec
aad
add
inc
pusha
pop
and
jns
inc
dec
adc
pop
aas
dec
jnp
cli
mov
adc
sbb
pop
sbb
data16
pop
stos
bnd
xchg
lods
inc
xchg
pop
testl
mov
push
ret
lea
xor
sar
mov
mov
mov
shrb
mov
stos
pop
negb
insl
jno
pop
pop
pop
fisubl
sbbb
incb
pop
sbbl
into
add
xor
push
pop
imul
pop
test
push
adcb
fbld
pop
js
lods
jnp
xchg
gs
loope
pop
inc
pop
or
les
into
fnsave
mov
fldenv
xchg
ret
in
int
sbb
sbb
and
mov
dec
inc
xchg
pop
aad
gs
xor
imul
and
push
outsl
cli
ja
or
push
fimull
pop
out
fdiv
and
arpl
neg
xchg
add
sub
xchg
dec
lret
pop
dec
loopne
out
push
add
orb
pop
ds
insb
out
pop
and
repnz
ss
addr16
cmp
mov
int
add
rcll
outsb
inc
fisubs
icebp
adcb
push
das
lock
andl
shrl
mov
pop
dec
clc
inc
sbb
ds
sub
mov
pop
lcall
movsl
clc
call
pop
movq
xchg
push
inc
popa
aas
fcoms
hlt
pop
or
xchg
daa
mov
icebp
sub
inc
aad
pop
fxam
out
push
jbe
lods
fwait
cmp
lahf
pop
mov
mov
lret
std
xchg
dec
ficomps
cwtl
sbb
clc
lret
mov
inc
inc
or
add
movsb
pop
adc
icebp
fnstcw
cmc
pop
jo
mov
push
lock
adc
push
pop
popl
lods
sub
or
pop
mov
cli
xor
mov
test
je
out
xchg
and
push
sbb
imul
pop
inc
adc
push
lcall
mov
mov
jne
aaa
sbb
imul
and
sub
pop
fs
xor
lahf
sbb
push
jge
rcll
mov
adc
xor
add
dec
jl
pop
out
push
xor
call
fsubrs
mov
fdivs
pop
pop
mov
in
pushf
mov
adc
add
cmpsb
inc
pop
ljmp
add
fcomp
mov
lcall
jb
inc
inc
xor
add
mov
jge
jns
iret
sti
fwait
cs
adc
xchg
cmc
sub
pop
dec
mov
adc
and
add
int
pop
cmp
icebp
jbe
shll
rep
dec
imul
pop
cltd
jg
mov
iret
add
mov
mov
outsl
lods
push
arpl
jmp
pop
inc
add
dec
xchg
mov
mov
out
test
sbb
pop
inc
leave
int
mov
cmpsb
xchg
pop
icebp
push
jecxz
out
adc
pop
out
xchg
or
je
sbb
pop
lds
test
pop
or
fistpl
lahf
in
dec
jge
or
push
sbb
ljmp
push
mov
cmp
dec
sbbb
xchg
scas
adc
add
push
sbb
ror
push
pop
mov
cmc
in
push
test
fmul
pushf
push
lea
lock
popf
daa
xchg
addr16
pop
push
xor
aas
clc
inc
cmp
mov
arpl
in
mov
or
leave
movsb
jbe
addr16
sbb
les
gs
jns
jg
shll
lods
and
xor
sbb
sbb
jl
pop
sbb
cwtl
or
mov
dec
iret
pop
and
sbb
test
xor
bound
sbb
jo
jmp
jg
into
xchg
xor
stos
loop
fstpl
pop
das
pop
xchg
jle
mov
rolb
cmpsl
sbb
enter
add
sub
cmp
xchg
loopne
leave
and
xchg
or
fnstcw
pop
inc
scas
lcall
fwait
mov
lods
push
mov
add
imull
aaa
call
pop
push
std
mov
daa
pop
xchg
mov
sub
test
inc
popa
cmp
ret
xchg
sbb
sub
xor
mov
xchg
cmp
decl
mov
pop
sub
pop
cmp
mov
outsl
xchg
inc
sub
shrb
mov
xor
adc
fadds
and
pop
mov
hlt
lods
sbbb
xchg
and
je
loopne
sbb
call
leave
inc
sub
push
cmpsl
xlat
pop
arpl
insl
fstpl
pop
adc
mov
les
push
sbb
or
pop
dec
pusha
adc
outsl
fs
pop
aad
add
xchg
mov
mov
bound
xchg
mov
in
mov
pop
fbld
add
pop
jecxz
sub
and
ss
push
imul
jmp
mov
mov
pop
int
add
dec
rcrl
cltd
push
adcb
lahf
inc
or
cmp
dec
mov
push
pop
gs
pop
icebp
test
inc
dec
xor
xor
pop
pusha
adc
cmc
jne
jo
fucomi
fcmovnbe
push
dec
mov
pop
fidivl
ljmp
cmpsl
pop
inc
xor
ret
sub
xchg
sbbb
cmp
imul
es
inc
add
pop
or
pop
mov
cmp
push
pop
in
int3
push
sahf
mov
lret
scas
xchg
jmp
pop
jnp
cmp
stos
popf
cmp
ljmp
jl
jmp
cmp
pop
cmp
lock
mov
push
pop
sbb
dec
mov
pop
cld
sub
cmp
adc
cwtl
int
enter
pop
xchg
push
sbb
or
push
pop
add
and
xchg
jnp
pop
xchg
mov
dec
or
popf
adc
call
dec
mov
lds
rcrb
push
pop
shrl
aad
sub
setae
pop
mov
ja
cmp
clc
pop
adcl
jge
xchg
push
jbe
std
loop
out
or
cmp
push
inc
rol
jbe
out
nop
pop
pop
push
shr
dec
xor
scas
lock
pop
out
pop
stos
fdivrl
rcll
pop
pop
ret
push
shll
lea
in
dec
lods
xchg
inc
pop
bound
jnp
pop
inc
push
sbb
out
mov
es
fsubr
je
sarb
ja
xchg
fidivrs
in
stos
mov
mov
sbb
mov
pop
add
pop
pop
inc
arpl
mov
dec
pop
repz
sti
fs
pop
dec
pop
cltd
push
lea
pop
mov
iret
rcr
mov
xor
push
cmpsb
xchg
pop
fadds
fadds
cmp
and
add
cmp
lea
inc
outsb
add
int
sub
fistps
jecxz
cwtl
xchg
mov
mov
pop
movsl
mov
fsubs
lods
test
xchg
in
ds
popl
mov
inc
mov
shlb
aaa
cs
pop
or
cmp
pop
outsl
push
mov
jmp
xchg
or
and
scas
add
adcl
or
xchg
lret
fadd
jno
pop
stos
jbe
mov
sbb
sbb
xchg
bnd
jae
sahf
jno
lods
jp
mov
pop
pop
orb
jle
je
nop
out
jmp
ficoms
fstl
push
nop
in
add
xchg
hlt
sahf
fadds
dec
pop
testl
jbe
pop
mov
inc
in
adc
pop
cmp
mov
cmpsb
shll
hlt
sub
bound
imul
mov
pop
adc
adc
fstps
pop
jmp
cld
out
pop
push
xchg
xor
fistps
pop
xchg
cmp
add
mov
jmp
aas
data16
fwait
sbb
sub
sbb
xchg
cmp
pop
cmp
lea
xchg
lret
imul
testb
sub
lahf
add
pop
movsb
stos
xchg
cmc
dec
notl
pop
mov
std
mov
fdivrs
pop
add
cmp
pop
bnd
sbb
jle
add
inc
mov
pop
daa
sbb
pop
shl
jno
aas
mov
pop
out
movsb
and
or
xchg
rol
xchg
mov
and
sbb
out
test
imul
jecxz
jnp
mov
jle
dec
sub
pop
addr16
loope
icebp
push
aaa
int
pop
xlat
add
fldl
scas
testb
repz
sbb
in
or
sbb
fsubrl
pop
add
dec
pop
push
pushf
int3
xor
mov
dec
mov
popw
cmp
push
pop
inc
jnp
cmp
add
fidivrs
bound
push
lret
call
pop
gs
pop
or
mov
ficomps
push
imul
int3
loopne
aad
mov
sub
mov
pushf
pop
pop
dec
fs
jl
pop
aaa
shl
and
int
xchg
mov
mov
cmp
daa
pop
sarb
cmp
push
pop
mov
xchg
dec
stc
pop
pop
sar
xor
cmp
pop
lahf
pop
nop
pop
xor
mov
in
dec
xchg
cmp
pop
xor
mov
lcall
lret
or
popf
pop
mov
xchg
pop
in
mov
in
movsb
imul
cmp
adc
sub
mov
scas
xchg
push
pop
xor
adc
popf
and
mov
lret
push
xchg
mov
mov
popf
les
mov
xor
ljmp
mov
pop
comiss
sub
push
lods
movsb
insl
dec
clc
cwtl
mov
fdivs
inc
jl
dec
mov
pop
cli
pop
mov
mov
push
or
add
push
and
adc
add
adc
cmpsb
inc
cmp
lahf
das
pop
lds
mov
pop
sbb
fisttpll
sub
adc
pop
cmpl
dec
fdivr
push
push
fidivrl
pop
cmpsb
push
imul
loopne
add
xchg
xchg
iret
pop
dec
and
iret
fmuls
push
or
xchg
decb
lock
fcompl
out
add
pop
outsl
int3
ljmp
mov
fwait
es
lds
pop
je
mov
fs
icebp
sub
jle
clc
sbb
pop
in
js
cmp
movsl
pop
out
jg
sti
pop
mov
xchg
add
fwait
xchg
push
je
cmp
xchg
dec
jbe
ret
or
mov
out
fsubs
iret
jg
pop
pusha
mov
inc
rclb
push
jmp
xor
cmp
ret
pop
xor
push
lretw
enter
dec
imulb
or
ret
int
add
pop
jmp
or
sub
cmp
pop
repnz
pop
push
adc
test
lods
imul
aaa
pop
rcll
ljmp
ds
cmp
xchg
jg
inc
sar
and
push
je
jns
int3
sub
mov
add
scas
aas
mov
adc
and
cmc
xor
ljmp
push
cmp
dec
fwait
daa
push
or
shrl
rorb
je
test
jmp
xor
push
pusha
data16
das
sahf
loopne
les
popf
sarl
and
add
ret
mov
push
sbb
fiadds
out
pop
and
adc
pop
call
pop
mov
cvtps2pi
jo
pop
mov
data16
sbb
imul
es
data16
out
pop
gs
dec
stc
lea
repz
cltd
mov
sbb
pop
leave
into
hlt
adcb
cmp
mov
loopne
dec
jnp
pop
fwait
cmpsl
push
xor
cmp
jne
ficompl
insb
xlat
inc
std
sarb
xchg
sti
repz
add
sub
movsl
data16
or
adc
cmp
stos
ljmp
sbb
mov
dec
sbbl
mov
inc
pop
fcmovu
cmp
out
mov
pop
cmpsl
insl
xor
fidivs
xor
insb
cmp
test
push
fsubr
pop
and
jns
mov
and
sbbl
fisubl
or
pop
cmp
loope
mov
adc
mov
pop
dec
imul
mov
mul
pop
fcmovne
jae
out
repz
pop
xlat
sbb
shll
xor
ficomps
jg
pop
sub
pop
mov
xor
pop
mov
push
stc
cli
xor
imul
sub
inc
pop
sbb
arpl
mov
xchg
cmp
out
movsb
rorb
pushf
pop
cmp
loopne
arpl
add
or
adc
jmp
inc
pop
cltd
pop
rcl
inc
push
dec
in
mov
fmul
cmp
addps
mov
dec
jnp
inc
pop
leave
negb
jae
ret
cmp
pop
das
fidivrs
nop
pop
pop
inc
outsl
jne
push
pop
pop
sti
cmp
lret
xchg
inc
fsubs
les
cmpsl
add
call
sub
jo
jne
inc
or
mov
nop
fldcw
pop
pop
jmp
adc
and
pop
jnp
ja
stos
in
fmul
push
pop
popa
and
cmp
mov
in
mov
mov
sub
outsb
fstpl
popf
dec
jb
mov
jle
xor
mov
cmp
dec
js
loop
and
fmuls
out
jno
lock
push
push
jne
loope
cmp
pop
pushf
jl
scas
inc
adc
pop
psubd
pop
in
push
inc
pop
iret
dec
or
mov
dec
out
ret
rcrb
leave
push
in
sub
cmpb
iret
sub
sbb
lcall
xchg
xchg
mov
into
jo
jnp
mov
push
shrl
cmpsl
rolb
pop
jbe
ja
pop
mov
dec
ja
std
cmc
pop
push
adc
frstor
cmpsl
mov
inc
cmpsb
inc
inc
out
push
call
xor
xor
dec
pop
xlat
test
fcoml
pop
icebp
fmul
xchg
jne
pop
addr16
sbb
xchg
in
pop
rolb
cmp
dec
out
fstpl
fwait
inc
fisubrs
pushf
sahf
push
pop
jb
ret
aaa
fbld
pop
add
jle
pop
fiadds
xor
mov
sbbl
jl
mov
push
lock
pop
int
push
dec
repz
sub
cltd
inc
xchg
jl
pop
std
repnz
iret
ds
clc
pop
mov
in
adc
push
sub
jge
fcmovnb
pusha
pop
cmp
std
mov
pop
mov
sub
stos
pop
or
ljmp
xlat
xchg
xchg
jecxz
push
dec
cwtl
pop
test
movd
xor
mov
pop
test
lods
pop
ds
push
jge
mov
in
lods
stc
insb
inc
rcrb
cmp
data16
pop
push
clc
cmpsl
mov
cmp
mov
pop
ror
imul
xchg
adc
lcall
scas
jle
mov
movsb
cmc
pop
fsubrl
cwtl
pushl
add
pushf
jae
jbe
mov
cmp
lods
or
cmp
push
or
pop
lcall
push
push
out
ds
inc
pop
mov
in
cmc
shlb
arpl
or
lea
pop
and
pop
inc
test
clc
dec
cltd
sbb
or
sbb
adcl
int
pop
pop
dec
cmp
clc
test
push
pop
jo
add
lods
dec
pop
pop
sbbl
sbb
mov
mov
and
pop
inc
pop
jmp
enter
loopne
xor
data16
push
mov
aam
int3
xor
movsl
icebp
rcl
pop
aad
jg
insb
lcall
fnstcw
pop
decb
and
lods
mov
loope
stos
cmp
pop
notl
stos
pop
std
jb
xchg
push
popf
sbb
mov
dec
test
add
flds
ret
outsl
and
mov
test
jp
loope
pop
popf
pop
xlat
stc
jno
clc
pop
push
jge
pop
push
sbb
inc
insl
jp
xor
pop
adc
andl
jbe
enter
pop
rcr
xor
jne
sbbb
jg
mov
xor
mov
pop
mov
aaa
sbb
fstpl
cmp
fdivrs
shrl
je
div
fmuls
xchg
in
xchg
aad
out
pop
cmp
jbe
mov
gs
leave
xor
outsb
push
sbb
js
into
rcrl
imul
or
cwtl
hlt
add
mov
addr16
jecxz
pop
pushf
das
loop
outsb
push
dec
dec
or
push
es
std
sbb
int
xchg
pop
ror
jnp
jle
iret
xor
mov
sbb
loopne
scas
pop
adc
mov
leave
jp
icebp
insb
adc
gs
add
mov
xor
cmp
pop
pop
aad
ds
push
decb
pop
imul
stc
clc
outsl
lock
jmp
sbb
xchg
mov
dec
mov
xor
add
js
inc
xor
mov
add
call
sbb
lahf
inc
sti
adc
hlt
pop
cmp
iret
imul
mov
insb
pop
hlt
in
out
push
test
cmp
pop
add
clc
dec
push
mov
lret
das
xchg
je
sbb
popf
rorb
pop
xor
xor
sbb
push
jg
pop
adc
jmp
lock
pop
jns
cli
dec
xchg
dec
jle
pop
sub
jbe
mov
stos
adc
vfrczpd
pop
and
dec
fs
lcall
cmovle
pop
inc
ljmp
pop
mov
ret
cmp
jg
push
pop
lds
mov
jle
jnp
sbb
pop
stos
push
sub
mov
shrb
ja
mov
jne
mov
jge
adc
pop
push
scas
mov
je
inc
mov
inc
sbb
aad
dec
mov
push
adcl
xchg
mov
scas
psubw
fcompl
sbbl
cld
push
inc
sbb
gs
stos
mov
sbb
mov
xchg
aam
shll
push
gs
addr16
js
add
xchg
push
pop
movsl
mov
push
pop
sti
xlat
ficompl
mov
shlb
les
mov
daa
sub
jo
inc
sbb
pushf
mov
repz
mov
fldt
inc
mov
iret
std
jnp
mov
sbb
adc
pop
mov
sub
lret
rcl
lods
pop
mov
or
adc
fwait
xchg
xor
cmpsb
and
pop
jecxz
inc
sbb
mov
pop
or
xchg
mov
pop
mov
dec
lods
std
pop
test
loop
pop
fcmovnb
pop
in
ja
pop
inc
leave
fisubrl
cmp
mov
cmp
cmp
fmuls
rcll
pop
dec
out
jns
push
mov
add
mov
xor
cmc
adcl
jne
pushf
dec
jns
jle
cli
sub
stos
data16
pusha
push
pop
daa
cmovle
push
enter
push
test
push
je
xchg
test
jmp
notl
cwtl
movl
pushf
gs
sahf
out
dec
mov
dec
fadd
in
xor
cli
cmp
xchg
movsl
sbb
mov
xchg
pop
and
arpl
mov
das
pop
pop
loope
and
push
rorl
jo
loopne
inc
into
or
add
cmpsb
lahf
cld
xchg
pop
sub
jp
xchg
pop
mov
and
push
enter
sbb
mov
stc
lcall
pop
jl
dec
xchg
push
mov
shlb
and
inc
pop
dec
mov
dec
loopne
fwait
pop
lds
lods
mov
aad
xchg
daa
loope
stos
push
insb
pop
divl
mov
or
xchg
inc
cmp
xchg
bound
add
ja
ret
mov
rcrb
repnz
pop
jo
das
mov
inc
pop
hlt
jno
lret
add
inc
idiv
sub
rep
shll
pop
mov
jo
xor
sbb
sbb
pop
test
roll
out
mov
xor
fistpll
mov
xchg
pop
loope
inc
test
xor
xlat
and
hlt
pop
fdivr
pop
push
fstl
pushf
ja
imulb
loop
pop
in
cltd
jg
es
jns
pop
xor
xor
adcb
adc
sbb
mov
sbb
in
cmp
jnp
ja
leave
push
sbbb
sbb
es
rcll
xchg
fstps
mov
nop
mov
sbb
ret
loopne
mov
inc
mov
pop
sbb
insb
fstl
pop
rol
ljmp
jmp
pop
mov
mov
test
or
lock
push
jmp
lods
pop
dec
inc
cmc
mov
pop
mov
push
loopnew
pop
inc
push
je
shrb
sahf
out
sbbl
push
sbb
adc
negl
mov
pushf
add
jb
sti
call
inc
ljmp
shrb
pop
mov
fisttpl
pop
pop
and
inc
insl
and
adc
addr16
mov
test
jle
mov
lret
enter
repnz
pop
bound
inc
mov
cli
pop
xor
idivl
stos
xchg
in
fnstcw
nop
adc
insb
addr16
cld
lock
js
push
mov
shl
sub
mov
outsl
jl
jbe
pop
mov
jge
adc
inc
sbb
mov
mov
pop
push
and
mov
gs
inc
or
pop
dec
lock
outsl
sbb
pop
cmp
fsubl
lds
pop
icebp
jle
mov
negl
outsl
leave
xchg
andl
ret
xchg
clc
push
repz
jge
pop
xchg
push
shlb
and
add
xchg
adc
inc
mov
cld
int3
out
pop
stos
imul
xorb
rorb
data16
cmp
pop
icebp
xor
pusha
pop
packsswb
pop
addr16
popf
test
dec
sbb
mov
sbbl
jge
mov
icebp
add
dec
sub
jb
pop
xor
fbld
mov
shlb
mov
outsl
pop
mov
push
inc
mov
xchg
jne
push
cs
pop
mov
fwait
pop
ljmp
fs
or
cltd
jb
pop
aam
jecxz
inc
iret
mov
cs
adc
push
mov
fsubr
jns
mov
mov
mov
inc
ljmp
int
mov
cmpsb
add
int3
jecxz
insb
push
loop
out
mov
or
sub
sbb
dec
mov
pusha
inc
pop
ljmp
push
in
lods
cwtl
in
inc
inc
dec
inc
pop
rclb
aaa
pop
stos
push
in
jbe
cmp
pop
sti
mov
dec
les
push
mov
add
cld
insw
adc
push
xor
je
xor
cwtl
arpl
fmul
imul
scas
pushf
mov
mov
xor
sbb
out
outsb
icebp
pop
jmp
lods
xchg
hlt
xchg
ret
push
jne
movsb
cwtl
bound
je
in
mov
xor
loop
sbbb
adc
popf
dec
and
mov
dec
pop
and
xchg
dec
pop
push
jecxz
pop
call
xchg
sbb
out
mov
sbbl
mov
dec
outsb
loop
add
dec
xor
fcmovbe
jne
or
xchg
jecxz
pop
stos
insl
fldenv
mov
jp
cmp
pop
add
adc
insl
sub
pushfw
in
cld
mov
aam
test
leave
push
push
pop
test
cmp
xor
inc
xor
add
pop
rcl
push
push
cli
lods
xchg
push
test
push
pop
stc
stos
loope
popf
negl
cmc
insl
js
movsl
int3
std
pop
aad
clc
xchg
fs
mov
incl
mov
ret
dec
outsl
inc
jmp
rcrb
jl
rcrb
xor
jge
jg
dec
push
in
pop
repz
jno
inc
mov
sbb
sbb
and
jo
loop
pop
cmpl
xor
mov
mov
jmp
pop
sub
lock
pop
mov
fidivrl
mov
pop
or
lods
imul
sti
out
or
out
pop
fcomps
inc
pushf
fstpl
shlb
jae
add
pop
test
mov
pop
add
dec
sbb
and
push
popa
mov
pop
out
pop
push
push
dec
pop
cmp
xchg
mov
pop
xor
mov
addr16
dec
cwtl
push
adc
pop
arpl
xor
push
xor
jne
dec
loopne
push
pop
add
jb
mov
pop
cwtl
mov
insb
test
dec
pop
sarl
pop
mov
in
cmp
sub
mull
push
or
ja
push
pop
fdivs
inc
pusha
cmpsb
stc
mov
ret
mov
das
xor
jae
nop
or
jne
fadd
je
inc
imul
shlb
sbb
pop
fisttpll
lcall
inc
loope
mov
dec
sub
cltd
adc
pop
flds
xchg
push
push
imul
insl
pop
mov
call
scas
push
push
pop
push
fstpt
push
roll
mov
pop
cmp
adc
push
fsubrs
cwtl
mov
loopne
dec
mov
dec
insb
test
aad
call
pop
loop
lret
sbb
pop
sub
js
jle
jle
pop
add
test
fdiv
adc
pop
cli
cmpsl
jg
xchg
mov
jbe
or
lea
dec
sub
rcrl
ds
pop
adc
pop
inc
fwait
mov
and
adc
sbb
mov
xor
dec
aad
pop
ja
movsb
insl
clc
mov
and
inc
push
inc
adc
imul
mov
lcall
pop
out
lret
dec
mov
stc
jge
pop
xor
xchg
cltd
dec
pop
or
arpl
jno
stos
je
imul
pop
and
addr16
sub
add
stos
mov
cltd
dec
jne
ljmp
mov
adc
leave
sub
mov
pop
add
pop
andl
sti
cmc
dec
pop
mov
jae
popa
loope
call
call
pop
lahf
daa
cmp
pop
bound
jne
pop
xor
sub
icebp
data16
inc
cltd
or
ss
fmul
mov
jnp
mov
mov
inc
rclb
cmc
lretw
stos
rcrl
movsl
xchg
sar
subl
push
pop
or
or
jl
andb
rolb
adc
lea
pop
xchg
xor
dec
jbe
mov
cwtl
aas
cwtl
mov
cmp
rcrl
fcmovnu
mov
in
or
hlt
pop
ljmp
pop
xchg
mov
xchg
cli
rcr
push
jmp
shll
in
mov
fdivrl
add
ret
cmp
out
cmp
iret
mov
outsb
pop
es
lret
cmp
sub
mov
movsb
adc
pop
xchg
daa
int
jns
xchg
in
pop
lods
fisttpll
inc
push
dec
dec
pop
push
stos
pop
je
negl
jmp
das
cmp
lahf
popa
dec
pop
shlb
sti
sahf
xlat
in
pop
xchg
mov
outsb
je
and
sbb
dec
popa
add
pop
aad
inc
sbb
dec
es
ss
and
jne
stc
inc
pushf
mov
jmp
out
shll
repz
mov
or
xorb
push
sbb
sbb
pop
into
pop
es
stos
mov
mov
xchg
enter
jno
pop
mov
pop
fmuls
into
xchg
pop
cmpsl
data16
out
xlat
ret
pop
jb
add
movsb
leave
sub
jno
jg
pop
cmp
pop
fdivrs
pop
aam
mov
jecxz
ljmp
fmul
cmpsb
stos
mov
shl
pop
icebp
xchg
or
mov
insb
jne
xchg
pop
rcrb
bound
addr16
clc
outsl
jmp
inc
cmp
pop
dec
imul
leavew
xchg
mov
lds
movsl
pop
jno
pop
jecxz
sub
pop
out
inc
sti
sub
sbb
mov
aas
cmp
arpl
jno
jo
int
sub
ljmp
pop
andb
and
lea
in
jnp
je,pn
and
fsubp
pushf
pop
mov
add
xchg
xor
js
and
jae
imul
in
cmp
sbb
push
cwtl
or
dec
test
ficompl
insb
xor
lods
fists
mov
mov
outsb
mov
aad
cld
cmp
cmp
mov
adc
pop
repnz
push
and
arpl
rcrl
or
mov
scas
pop
nop
push
push
icebp
sub
mov
repnz
sbb
daa
pop
cmp
jae
mov
mov
push
push
je
ret
inc
dec
cmp
scas
dec
pop
mov
das
stos
cmp
pop
push
adc
mov
dec
xorb
repnz
fidivl
nop
adc
int
out
pop
pop
dec
std
dec
mov
pop
dec
and
xor
lcallw
cmpsl
jge
in
call
sub
cld
pop
incl
test
hlt
inc
iret
xor
lret
js
mov
mov
enter
inc
aam
pop
push
push
insl
imul
int3
adc
enter
inc
imul
arpl
movsl
popa
scas
jmp
popf
cmp
mov
pop
int
xor
push
movsb
sbbl
lock
pop
mov
cltd
and
out
outsl
mov
sbb
mov
cmp
jl
clc
and
cli
cmp
out
rorl
dec
jne
and
or
jo
scas
andl
sub
push
cltd
pop
or
dec
adc
pop
jmp
lods
mov
lds
jle
pop
dec
mov
stos
pop
mov
pop
adcl
add
and
and
sbb
xchg
js
pop
add
mov
mov
inc
jb
fsubr
or
push
xor
dec
xor
scas
enter
pop
notl
icebp
mov
pop
and
jmp
repnz
aaa
inc
mov
sahf
mov
adc
dec
pop
sub
inc
arpl
outsb
test
mov
mov
icebp
hlt
jge
mov
or
cwtl
mov
sub
popa
pop
fs
sub
push
insb
inc
ds
imul
pop
pop
push
data16
jae
pop
repz
pop
sbb
mov
sbb
imul
mov
pop
push
aam
cmp
test
test
mov
push
or
and
shlb
pop
inc
cmp
or
aas
sub
ficomps
pusha
cmp
xchg
pop
push
ds
dec
pushf
fldt
pop
and
fsub
mov
shr
mov
call
mov
cmp
inc
sub
rcrl
lret
sbbl
dec
add
je
scas
jp
pop
push
adc
mov
negb
shrb
call
pop
sbbb
int
pop
cltd
and
sub
cwtl
data16
lods
out
mov
ret
inc
int
sbb
xchg
fstpl
push
xor
call
pop
jl
and
leave
imul
idivb
dec
mov
sbbl
pop
je
pop
popf
sbb
cmp
sbb
ss
out
pop
add
pop
cmpsb
cmp
out
pop
adc
jae
pop
cmp
ret
std
enter
pop
and
sub
pop
pop
xchg
jg
jp,pt
push
pop
es
rclb
enter
orb
ds
in
mov
das
push
pop
aas
leave
add
outsl
push
adcb
ss
outsb
and
pop
cld
inc
jmp
and
jmp
pop
add
cmp
sub
adc
sbb
jmp
xor
xchg
pop
outsl
or
cmp
loopne
ret
ljmp
rcl
mov
and
mov
out
add
sbb
jecxz
fcomps
insl
push
jbe
xchg
xor
pop
sbbl
clc
xor
testl
je
mov
adc
and
pop
nop
cmp
in
iret
sbb
loope
sbb
sub
xlat
mov
insl
addr16
lods
call
divl
or
fs
sbb
lds
inc
mov
mov
xor
mov
fdivrs
aas
add
mov
mov
dec
cmp
adc
add
mov
repnz
mov
xorb
mov
inc
repz
push
fwait
and
pop
sub
mov
mov
mov
sbb
pusha
insb
ds
stos
xor
pushf
fimuls
js
and
pop
jns
push
mov
pop
push
bound
pop
ss
pop
stc
out
addb
sbb
incl
movsl
cmp
pop
lret
dec
jo
daa
sbb
movsb
popa
pop
xor
adc
cmpsl
fcompl
lret
sbbb
xor
mov
jbe
pop
out
aas
imul
push
fstpl
sub
in
push
or
cmp
pop
pushf
int3
pop
cmp
shrl
into
adcl
cmc
push
push
andl
sbbl
js
fsubl
jno
fsub
fistps
sahf
pop
scas
and
shr
inc
push
xchg
xchg
inc
pop
dec
mov
sub
outsb
xchg
or
fisubl
pop
cmp
int
sbb
xor
rcrb
clc
push
pop
out
lret
std
xor
push
dec
and
stos
adc
fistps
mov
pop
repz
aad
sbb
sbbb
cmp
shlb
orl
and
push
clc
pop
shlb
addr16
rclb
pop
cmp
or
icebp
add
pop
inc
in
pop
in
out
dec
pop
push
push
outsl
xchg
pop
mov
scas
sbb
pop
jne
add
jecxz
xchg
icebp
fnstenv
pop
mov
test
test
lods
pop
fsubrp
cmp
pop
cltd
pop
cmpsl
add
inc
mov
adc
or
dec
xchg
jb
fwait
nop
add
add
or
fidivrs
fmuls
xchg
bound
iret
ss
mov
adc
push
or
xchg
pop
pop
jo
inc
jbe
cmpsb
jp
pop
and
fs
int3
mov
mov
xchg
stc
rcr
mov
mov
mov
mov
jmp
inc
sub
dec
shrl
es
inc
xchg
or
push
mov
cmpsb
lods
adc
jecxz
loop
adc
mov
pop
out
scas
mov
cmp
pusha
xor
or
fldcw
mov
jge
lods
int3
inc
movsl
sahf
sbb
xchg
test
aaa
pop
mov
pop
sarb
fs
pop
add
adc
sbb
in
mov
mov
mov
pop
mov
dec
dec
cmc
pop
sbb
ja
lret
pop
fmuls
add
xchg
sbb
pop
in
fwait
mov
xchg
push
adc
ret
das
mov
je
cmp
popf
mov
pop
lahf
pop
loope
rcrb
and
mov
add
pop
jbe
or
adc
pop
xlat
pop
jmp
sbb
xor
mov
dec
mov
adc
out
addr16
adc
mov
jo
cs
in
pop
push
ror
insl
pop
mov
cld
mov
add
pop
adc
xchg
pop
sbb
mov
lea
push
inc
push
mov
aam
or
leave
fdivr
enter
pop
idivl
xchg
push
pop
fisttpll
inc
out
push
ficompl
push
fwait
add
jge
add
sub
imull
pop
fimuls
std
ljmp
add
push
cmp
test
fdivl
cmp
pop
js
outsl
imul
pop
mov
mov
fstps
in
mov
jecxz
jno
jnp
ficoml
mov
mov
insl
fstpl
daa
dec
push
push
orl
mov
xchg
test
repnz
je
pop
pop
pop
lock
pop
xor
and
pop
xchg
mov
inc
lock
mov
pop
outsb
mov
cmp
out
pop
fcmovbe
fsubrs
mov
fnsave
push
push
idivb
inc
pushf
mov
sbb
je
decl
xchg
or
cmp
jle
mov
sbbb
dec
push
mov
push
inc
mov
pop
pop
sbb
notl
mov
in
push
scas
es
icebp
ror
xchg
test
out
jne
scas
lcall
into
sahf
sarl
push
jmpw
mov
cmp
mov
inc
or
or
out
shll
xchg
jns
sbb
cmp
push
pop
mov
jne
xchg
push
imul
stc
std
pop
imul
jp
sbb
enter
inc
into
dec
dec
pop
jo
lea
dec
pop
aas
or
sbb
sbb
dec
lcall
cmp
pop
or
mov
pop
ret
inc
cmpsb
push
repz
into
xchg
inc
imul
jb
pop
pop
push
js
inc
pop
mov
mov
cmp
pop
mov
mov
lret
push
xchg
jecxz
pop
cbtw
adc
rcrb
mov
lods
aas
xor
push
mov
mov
pop
shlb
lock
mov
push
cmp
int
sub
jl
stc
hlt
inc
adc
pusha
jae
xchg
sub
out
fistpl
and
push
out
jb
dec
rol
call
or
ss
andb
fidivrl
jle
pushf
les
sbb
rcll
push
cld
push
xorl
or
pusha
clc
pop
pop
xor
push
pop
out
cmc
fnsave
mov
inc
pop
pop
out
mov
adcb
fidivs
scas
jne
rcl
pop
lds
xchg
in
icebp
pop
adc
pop
pop
mov
addr16
repz
test
mov
addps
mov
add
scas
xchg
mov
outsl
sti
sub
xchg
jb
jnp
pop
fistps
movl
movsl
mov
jns
pop
sti
and
mov
push
aad
popa
inc
lods
pusha
mov
or
iret
pop
pop
idivl
pop
cwtl
incl
xlat
repz
cmc
aam
mov
or
cltd
into
stos
scas
mov
mov
sbb
jge
pop
pop
push
mov
pop
repz
jnp
rcrl
ds
pop
mov
data16
bound
shr
xchg
sahf
xlat
jecxz
mov
xchg
pop
or
sub
shr
pop
loopne
mov
xor
rorb
inc
inc
ficompl
pop
jl
fisttpl
int3
in
pushf
jmp
pop
xchg
cmpsb
pop
mov
cmp
push
jg
pop
rol
xchg
mov
jns
pop
arpl
add
cmc
xor
clc
pop
and
mov
inc
xchg
ficompl
outsl
jp
lret
cmpsl
lock
pushf
mov
arpl
mov
rorb
sbb
ljmp
dec
lods
mov
inc
push
jae
xor
push
pop
aam
call
sbb
js
jbe
lcall
pop
aam
inc
cmp
dec
sahf
cmc
in
mov
dec
dec
mov
and
xchg
call
xchg
mov
fistps
sbb
add
ss
mov
daa
cmpsl
and
xchg
pop
xor
int3
inc
jne
jo
xlat
out
aad
adc
into
out
pop
hlt
stos
jle
dec
bound
mov
pop
push
jp
ror
pop
jle
int
pop
fstps
lea
je
pop
sub
mov
pop
test
sbb
jg
divb
dec
ja,pt
inc
int
jns
pop
lret
sbbl
add
jge
call
testl
jl
fsubrl
sahf
popa
xchg
pop
int
cmpsb
test
lcall
outsl
test
imul
mov
movsb
xchg
cs
dec
pop
push
pop
dec
push
iret
jno
loop
fisubl
xchg
out
fcom
sub
mov
cmp
lea
test
xlat
xchg
repnz
pop
sahf
bound
xchg
and
xchg
inc
mov
sub
rorb
xor
pop
loope
inc
fimuls
iret
mov
lock
test
sbb
pop
mov
cmp
push
daa
sbb
mov
dec
pop
pop
repz
pop
pop
insl
mov
fstpl
inc
mov
cli
popaw
mov
outsb
fadds
push
pop
mov
and
add
std
arpl
sbb
ljmp
add
out
pop
aas
adc
cmpsb
mov
add
sahf
jno
xchg
pop
aam
inc
insb
pop
jnp
rcrl
subl
jge
pop
cmp
movsl
cvtps2pd
lods
or
sbb
pop
mov
insb
pop
and
xchg
enter
negl
pushl
add
pop
out
push
cmpsb
or
enter
mov
fcomp
lcall
std
pop
call
aad
lods
xchg
fs
xchg
faddl
cmp
enter
shlb
xchg
inc
aam
imul
pop
icebp
xchg
push
jbe
fstpt
lea
leave
int3
cmc
xchg
mov
lret
cli
xchg
orb
cwtl
pop
jbe
popf
cld
out
mov
or
jbe
mov
movsb
inc
pop
dec
fstps
lds
pusha
pop
lock
outsb
lea
cltd
jno
dec
adc
sub
or
jnp
dec
leave
loopne
repz
sbbl
xor
mov
pop
out
loopne
and
dec
jg
push
sbb
lcall
out
pushl
pop
movb
pop
loope,pn
push
jno
sub
pop
fildl
jbe
mov
sbb
inc
add
negb
or
mov
push
subl
ficompl
and
mov
inc
pop
inc
push
out
sbb
das
push
in
testb
sbb
xchg
lods
fcompl
rcll
outsb
lds
push
ljmp
in
sbb
insb
pop
add
inc
lods
pop
mov
cltd
xlat
sub
jns
pop
jb
adc
filds
fmuls
es
xchg
ficoms
push
pop
scas
mov
mov
pop
daa
mov
dec
push
dec
cld
enter
pop
es
jle
xchg
jbe
out
repz
addb
cltd
data16
iret
ja
pop
divl
scas
mov
insb
push
sub
jmp
call
movl
mov
inc
inc
xor
frstor
cwtl
ljmp
jecxz
dec
rclb
lds
jne
lock
rcrb
imul
xchg
pop
in
pusha
sub
lahf
test
pop
sub
ffreep
fistpl
mov
aas
cwtl
inc
xchg
fsub
ljmp
xchg
inc
mov
cmp
pop
stos
cwtl
fcmovbe
jo
cltd
dec
ret
fnstsw
sub
push
scas
pop
aaa
jecxz
adc
popf
cmc
mov
xor
xchg
lret
jbe
pop
fistpl
rcrl
sbb
stos
mov
dec
sbb
pop
push
mov
stc
push
pop
xor
adc
lods
je
xchg
mov
sub
or
pop
xchg
aaa
cld
mov
clc
mov
js
jne
adc
cli
pop
mov
pop
pop
push
add
cmp
sbb
pop
add
insb
and
sbb
sub
sub
vpcomb
sbb
std
pop
push
into
xor
dec
stos
clc
rolb
leave
jno
movsb
pop
pusha
jp
mov
dec
jbe
xor
pop
jae
ljmp
xchg
mov
pop
adc
xchg
mov
or
imul
dec
xor
push
xchg
or
loopne
rcrl
lods
dec
imul
pop
stos
add
int3
imull
dec
jbe
inc
jecxz
std
clc
fsubl
pop
hlt
cs
jl
sub
lds
add
out
rcl
sub
xchg
mov
je
fsubs
mov
and
mov
ja
out
pop
mov
sub
inc
insl
imul
pop
nop
subl
outsb
pop
xor
mov
stc
repnz
sahf
fcomps
push
out
adcb
pop
and
cltd
jp
pop
jnp
ret
dec
movsb
lcall
and
xor
mov
mov
call
sbb
pop
sbb
in
adc
or
sbb
shlb
pop
fbld
mov
pop
jl
mov
mov
add
mov
lods
pop
mov
flds
jnp
shll
jecxz
pop
cli
arpl
std
mov
jl
sbb
lret
mov
pop
aas
adc
mov
test
mov
arpl
pop
pop
out
call
rorl
movsb
popa
mov
in
cwtl
pop
cmp
lcall
mov
imul
cltd
stc
sub
insl
pop
addb
cli
das
mov
test
out
adc
push
pop
dec
sbbl
es
mov
call
cmp
xchg
test
hlt
call
pop
cmp
sbb
mov
pusha
in
pop
cmp
push
jns
sub
xchg
int3
inc
pop
dec
mov
xlat
inc
xchg
pop
xchg
and
cwtl
inc
and
aas
in
mov
pop
sbb
push
mov
pushf
fnstenv
add
loop
pop
jle
aaa
repnz
or
push
mov
sbb
push
loope
pop
sub
stos
imul
xchg
cli
xchg
cwtl
sub
mov
fcomip
pop
out
fnstenv
pop
and
push
push
inc
sub
dec
jno
lret
adc
xor
fisubs
lds
or
push
aam
xor
mov
pop
movsb
xor
loopne
jne
jmp
or
or
jbe
xor
sbb
inc
ds
out
push
cmp
push
and
jle
scas
jp
ud2
jno
add
loope
jle
cmp
orl
and
sbb
dec
in
xor
inc
outsb
add
sbb
push
sub
out
pop
and
pop
add
stos
and
lcall
mov
clc
popa
xor
into
pop
mov
add
cs
sub
add
pop
negb
mov
cltd
and
iret
mov
ss
lret
stos
adc
inc
mov
push
and
cmp
xchg
mov
mov
inc
inc
and
rorb
ja
pop
insb
fcomps
mov
push
xchg
pop
pop
jecxz
mov
jne
or
pop
popf
rorb
sarb
pusha
test
test
mov
push
mov
cmpsl
in
add
pop
cltd
inc
mov
ljmp
pop
pop
mov
pop
sbb
movsl
dec
rcrl
push
stos
jns
mov
xor
mov
jbe
adc
mov
xchg
popf
add
lret
inc
mov
fnstenv
sub
sub
pop
in
shlb
adc
push
lods
ljmp
ret
cld
std
pop
ret
mov
pop
cli
xor
xchg
lahf
clc
sahf
mov
or
push
incl
add
fidivrl
in
clc
push
jno
pop
dec
dec
add
xchg
rcrl
pop
movsb
mov
mov
ss
cltd
pusha
les
pop
and
add
xchg
bound
shl
sub
jo
pop
adc
cmc
fcoms
jne
iret
stos
pop
inc
lcall
pop
pop
jae
jp
pop
pop
pop
cmp
pop
aam
or
lret
push
fsubl
pop
aam
sbb
call
lahf
jg
inc
xchg
fisubl
fdivrs
jne
mov
scas
orb
pop
rolb
call
lahf
pop
xor
in
jle
fistps
sub
pushl
xchg
ss
xchg
pop
sub
test
cmp
js
mov
rcrb
and
cs
call
xlat
pop
and
jno
sbb
fimull
loopne
adc
fcmovnbe
mov
add
nop
pop
sbbl
dec
xor
pop
stos
mov
orb
repnz
inc
xor
shlb
pop
pop
and
sbb
or
pop
insb
jne
out
ret
xor
int3
pop
xlat
cmp
push
fdivrs
outsl
sbb
imulb
pop
pop
leave
rorb
std
cmp
pop
sbb
sub
push
fwait
adc
xchg
inc
data16
xchg
cmp
pop
aad
imul
mov
push
push
andb
inc
pusha
sbb
pop
fnstsw
arpl
pop
cmp
push
mov
add
push
addr16
pop
adc
push
loopne
pop
out
rolb
sbb
pop
repnz
or
shll
xchg
push
fdivr
jg
hlt
popa
test
pop
in
adc
xchg
faddp
pop
push
jbe
stos
inc
loop
pop
data16
inc
jg
xorb
into
das
adc
test
es
pop
ss
jl
dec
lods
or
scas
sbb
fmuls
xchg
and
sub
xchg
xchg
or
inc
das
hlt
xchg
cmpsb
jge
pop
jbe
cs
inc
pop
xchg
fwait
jl
inc
lret
in
push
push
dec
cmc
pop
out
stos
cwtl
mov
call
lods
mov
and
cwtl
popa
jmp
push
mov
pop
lahf
xor
inc
movsb
pop
sbb
ret
fxch
mov
loop
icebp
pop
lea
movsl
ret
mov
xor
dec
xchg
cmc
pop
adc
out
cltd
lret
jl
add
std
repnz
sbb
pop
xchg
mov
dec
cmp
pop
mov
fadd
leave
and
fiadds
jo
mov
mov
aam
inc
pushl
mov
xchg
pop
inc
fsub
lds
and
jg
sub
cld
xchg
into
subl
push
shll
pop
cmpsl
in
sub
sbb
xchg
arpl
pop
lcall
push
popf
pop
mov
call
pop
xchg
push
pop
pop
stos
shlb
pop
push
dec
or
aas
fdivl
mov
ficompl
pop
mov
adc
test
pop
lock
push
gs
inc
mov
sbb
or
stos
cld
call
pop
pop
daa
add
lahf
movsl
hlt
pop
push
dec
ficomps
pop
repnz
pop
call
leave
push
xchg
push
inc
pop
mov
loop
jbe
stc
pop
repz
pop
pop
fs
les
mov
dec
imul
adc
xor
lret
inc
pop
popa
test
inc
add
sub
jae
or
pop
or
cmpsb
cmp
inc
jecxz
rol
pop
adc
cld
aam
sahf
gs
sbb
sbb
pop
cmp
test
rorb
in
scas
mov
in
iret
pop
and
ljmp
jge
mov
cmp
lock
cmpsb
std
ror
jp
les
pop
sub
sbbl
sbb
adc
mov
cmp
insl
pushf
xchg
in
mov
rcrb
or
daa
jne
sub
fbstp
lods
xchg
cmpsl
pop
push
pushf
mov
ret
jmp
aaa
add
and
xor
lahf
pop
cmp
rorb
push
sahf
inc
pop
pop
xor
loopne
enter
call
hlt
cmp
pop
sbb
testb
mov
mov
and
pop
mov
shlb
pop
push
jbe
test
mov
sbb
pop
aad
inc
xchg
mov
xchg
test
fcomps
jp
imul
pop
enter
lea
ret
sarl
ds
jno
push
pop
and
xchg
outsb
pop
cmpsl
pop
jg
xor
roll
lods
inc
out
xchg
mov
lods
loop
ja
add
icebp
xor
cmpsb
dec
dec
imull
jp
das
std
push
pop
in
xchg
xchg
pop
jge
xchg
ficompl
in
rorl
and
repz
mov
add
gs
sar
xor
mov
mov
pop
cs
or
cmp
or
imul
out
orl
ja
stc
jbe
aad
adc
push
xor
imul
mov
pop
sbb
mov
inc
jns
and
pop
lahf
cmp
jnp
movsb
and
jecxz
push
loope
divl
or
inc
lcall
pop
cmpb
inc
and
pop
dec
adc
call
pop
cmp
and
push
decl
xchg
xor
pop
sub
adcl
sub
mov
lret
pop
mov
pop
inc
pop
cmp
pop
pop
mov
mov
or
jno
test
lods
cmp
xchg
xor
repz
mov
dec
outsb
push
lcall
pop
loopne
jo
add
mov
and
push
stos
sarl
pop
push
cmp
adc
push
cmp
sub
in
add
sahf
push
and
pop
jne
stc
pop
and
sub
cmp
das
push
ja
nop
test
pop
arpl
cmp
rcll
xchg
jo
fldt
and
andb
cmpsl
mov
xor
call
stos
pop
sub
inc
bound
movsb
hlt
sbb
mov
dec
lcall
inc
cmp
and
jg
insl
cmp
mov
sub
pop
mov
jge
pop
xchg
pop
inc
arpl
popf
xchg
sbb
xor
fs
movsb
add
ret
xor
pop
loop
sbb
psubusb
scas
lock
add
push
fld
and
jl
sub
mov
adc
fistpl
lods
in
xchg
and
mov
je
pop
fs
cmpsl
andl
dec
pop
out
push
fwait
xor
pop
xchg
sbb
pop
cmp
xor
aas
mov
jbe
loope
ds
cmp
add
sub
pop
outsl
jl
pop
pop
dec
sub
dec
adc
mov
push
sbb
or
ljmp
fadds
popa
mov
inc
and
push
out
test
sahf
push
xchg
arpl
negb
sub
seto
mov
mov
cmp
outsl
mov
xor
in
pushf
push
mov
pop
add
push
jae
dec
xchg
mov
jb
push
mov
fistps
in
test
push
pop
movsl
pop
fisubs
pop
test
mov
sbb
and
jp
fadd
gs
es
dec
cmp
or
add
out
dec
pop
repz
push
fs
dec
and
cltd
sub
pop
xchg
iret
mov
out
push
or
adc
push
lret
jmp
clc
xor
pop
push
jne
sti
lcall
inc
loop
into
fs
pop
int
xchg
jecxz
mov
lahf
and
jne
rcl
mov
adc
pop
sbb
adc
pop
push
sub
in
pop
lcall
ljmp
ja
mov
cmp
pop
adc
adc
pop
add
in
mov
addr16
scas
cwtl
clc
popf
adc
fcomps
cmc
loopne
shrl
or
pop
aam
loope
in
xor
or
insl
daa
xchg
dec
push
pop
into
sahf
pop
push
ljmp
ret
cwtl
xchg
fdivs
xor
js
pop
cmp
inc
mov
ficompl
add
add
gs
xchg
je
pop
hlt
mov
dec
and
and
lea
jle
pushf
pop
cs
mov
gs
pop
jb
sti
enter
cmpsb
pop
mov
xor
addps
popl
jo
sahf
lret
dec
pop
lods
add
into
sti
stos
xor
in
cltd
cld
pop
push
call
xchg
jbe
pop
pop
cli
test
enter
jle
aas
sbb
data16
inc
mov
aam
stc
pop
leave
mov
mov
mov
pop
sbb
incb
jo
fwait
int3
imulb
mov
stos
jns
lret
push
test
pop
xchg
fwait
std
or
pop
scas
adc
ja,pt
ja
sbb
clc
pop
outsl
movsb
test
xor
pop
pop
mov
sub
addr16
mov
clc
inc
out
jno
pop
add
fidivl
adc
sub
pop
pop
lcall
imul
xor
sti
into
pop
test
iret
mov
push
mov
pop
and
dec
lret
out
jnp
pop
cld
inc
or
notb
push
or
fmuls
jbe
pop
dec
jbe
es
fcom
or
call
daa
mov
in
add
pop
and
ret
orl
mov
xchg
testl
fildll
pop
jnp
mov
mov
pop
cmp
loope
pop
mov
stos
xor
sub
mov
arpl
xor
popf
mov
mov
pushf
aas
adc
loopne
iret
xchg
inc
push
or
adc
loope
add
mov
je
inc
jbe
mov
add
arpl
pop
insl
out
mov
push
fdivs
fistps
mov
in
mov
pop
add
inc
jecxz
ds
je
mov
imul
mov
pop
mov
jmp
cmpsl
pop
push
testb
mov
jmp
jle
mov
pop
jmp
test
pushf
add
pop
cltd
mov
jge
in
jae
push
sbbb
cmp
movsb
int3
and
xchg
adc
rclb
inc
inc
cwtl
mov
and
sub
or
xor
pop
into
dec
pop
sti
std
hlt
loop
repz
and
mov
push
adcb
sbb
pop
sbb
mov
pop
jl
mov
pop
adc
out
cli
aas
ret
push
xchg
sti
push
dec
repnz
hlt
or
pop
movsl
jl
and
jne
dec
testb
call
mov
pop
pop
mov
jle
pusha
push
sbb
pushf
sbb
xchg
sahf
pop
sbbl
jbe
ja
sbb
dec
pop
jge
lahf
test
pop
or
inc
pop
add
jae
mov
inc
xchg
xor
imull
cli
sbb
aaa
popa
cld
or
insl
fadd
leave
fcoms
icebp
pop
and
stc
addr16
into
call
lret
in
cwtl
jl
inc
jle
addb
loope
mov
sbb
pop
addps
test
bound
add
xchg
jmp
ret
into
mov
mov
or
pusha
mov
jne
jg
data16
jle
insb
pop
lcall
fwait
repz
jae
fs
stos
mov
ja
outsb
pop
pop
jle
dec
push
mov
or
pop
adc
or
inc
gs
cmp
sub
in
add
inc
shll
dec
pushf
test
mov
scas
pop
jecxz
inc
inc
adc
jno
outsb
or
rcrb
mov
jmp
push
je
ds
pop
scas
fistl
repnz
cmp
inc
inc
pop
outsl
cld
xchg
ljmp
pop
inc
mov
xor
pop
call
shrl
dec
les
mov
ja
pop
adc
mov
pop
add
cmc
pop
xlat
shrb
ds
fmul
mov
cmp
rcrl
outsb
daa
jo
pop
pop
adc
repnz
lods
adc
sbb
sub
je
push
enter
pop
adc
ja
pop
add
sarb
gs
arpl
mov
dec
rcll
pop
xchg
or
cmp
pop
int
jecxz
sbb
and
btr
sbb
jecxz
push
pop
xchg
jbe
bound
push
rcrb
inc
in
aad
lahf
xchg
arpl
loopne,pt
fcomps
pop
cld
cmc
xchg
mov
pop
sbbb
pop
pop
fxch
test
lea
mov
out
mov
pop
cmpsb
xor
inc
push
loope
xchg
pop
add
jg
xchg
fcomps
iret
mov
inc
push
push
xor
in
or
fwait
pop
scas
jns
js
xchg
pop
add
sbb
enter
xchg
pushf
fdivs
mov
pop
xchg
lahf
aad
xchg
cmp
pop
test
loope
pop
ret
int
jecxz
jmp
rolb
shll
push
aaa
cmc
mov
dec
enter
popf
out
jno
cmp
fcmovb
pop
xchg
out
or
sub
xchg
mov
dec
fwait
pop
inc
pop
and
adc
fiadds
popa
pop
aas
pop
sbb
cmpb
jns
fcoms
sbb
xchg
jne
adc
loope
dec
pop
or
mov
sub
popa
or
inc
fstp
pop
sbb
mov
lea
in
dec
pop
dec
sbb
and
in
into
dec
rcrb
xchg
jmp
pop
in
imul
int
clc
adc
push
jecxz
dec
cmp
popa
xor
pop
cmp
push
outsb
iret
or
outsl
aam
arpl
xchg
imul
add
aas
adc
popf
loopne
xchg
xor
add
pop
sub
in
mov
shrl
push
xor
mov
aad
cmp
push
pop
pop
push
inc
adc
push
pop
add
inc
and
xchg
stc
test
js
das
rolb
mov
pop
fwait
jle
out
pop
mov
outsl
jbe
icebp
jo
xor
inc
fwait
lcall
test
call
cmp
xor
inc
adc
mov
pop
push
jnp
mov
dec
insb
in
xchg
sbb
xchg
inc
idiv
pusha
cwtl
out
dec
arpl
test
adc
int3
insb
mov
mov
xchg
insl
pop
pop
popf
inc
in
mov
iret
push
pop
lahf
test
aam
inc
xor
lea
or
out
pop
jg
test
je
pop
in
dec
leave
push
daa
add
dec
pop
pop
out
sub
test
cmp
add
outsl
pop
mov
rcl
out
pop
leave
and
dec
dec
xor
ja
neg
cwtl
mov
and
jnp
cwtl
push
icebp
mov
dec
int
pop
sbb
pushl
and
mov
inc
push
jle
scas
sbb
nop
and
sbb
pop
mov
dec
ja
pop
dec
clc
pop
std
lea
push
pop
xor
outsb
adc
insl
and
fisubs
mov
pop
or
lock
pop
or
pop
xor
pop
jo
int3
or
aam
icebp
pop
pop
data16
cmp
addr16
cmc
add
sub
xchg
inc
int3
sub
add
xor
mov
gs
clc
mov
leave
jb
pop
test
fistps
icebp
add
arpl
movsl
sub
into
jl
inc
mov
jo
adc
mov
pop
inc
push
je
sbb
pop
jmp
cmpsb
pop
jbe
mov
pop
fs
xor
popa
pop
pop
mov
mov
sahf
pop
outsb
adc
push
add
jmp
scas
adc
mov
clc
pop
mov
xchg
dec
testl
test
dec
jnp
sahf
cmpsb
pop
loope
in
ret
adc
pushf
bound
and
or
pop
sbb
lods
sub
fcompl
test
mov
jo
in
xor
pop
inc
popw
mov
lret
ja
mov
cmp
pop
bound
je
fnstenv
cmp
add
inc
xchg
push
adc
fcom
cs
pop
outsb
add
and
pop
pushf
divl
fstps
xor
push
cwtl
push
ss
lods
pop
jno
push
ret
mov
ljmp
pop
xor
sub
out
mov
pop
mov
mov
adc
add
dec
call
pop
xor
push
xchg
sbb
ss
xor
and
shrb
adc
bound
sub
shlb
dec
jns
aad
and
into
orl
mov
jbe
aaa
inc
loope
pushf
rcrl
pop
mov
ficomps
int
cmp
movsl
pop
mov
xchg
pop
fs
mov
aas
pop
pop
jg
adc
and
test
inc
pop
aaa
sti
ljmp
inc
mov
add
les
dec
stos
push
loopne
xchg
sbb
js
adc
jb
xchg
ret
xchg
out
addr16
test
jns
cmp
push
push
sub
outsl
pop
and
mov
aas
fadd
pop
cs
rorl
push
pop
pop
test
jno
sbb
addr16
jp
out
pop
sbb
scas
xor
insl
ror
pop
xchg
mov
pop
cmp
popf
ljmp
xor
fistpll
add
pop
mov
pop
gs
jbe
or
rcrl
loope
insb
aaa
or
mov
fistpll
fsubs
scas
pop
push
in
repnz
add
jae
push
or
sbb
xor
dec
pop
xchg
adc
pop
inc
jbe
mov
ss
mov
out
sub
push
pop
inc
mov
cmp
cs
pop
adc
popa
dec
addr16
or
es
into
lcall
popl
adc
jnp
lods
add
mov
sbb
xchg
sbb
pop
xor
jb
jo
mov
adc
cmp
push
pop
push
xor
inc
mov
pop
mov
sahf
call
pop
or
adc
nop
sub
jne
ret
out
loop
aad
call
cld
iret
inc
xor
lret
jmp
mov
aam
shr
add
jg
mov
mov
aaa
inc
hlt
aas
mov
adc
mov
lcall
push
or
push
mov
pop
into
int3
mov
xor
lret
xchg
xchg
cmp
pop
sub
popf
rcrb
mov
inc
push
xor
add
insl
scas
fldcw
add
loop
lds
shl
test
gs
into
stc
inc
dec
pop
mov
repnz
mov
adc
gs
fmull
pcmpeqb
xor
push
jno
sbb
mov
movsb
addr16
popf
adc
pop
iret
inc
pop
cs
add
add
pop
enter
loope
sub
pop
addl
pop
cmpsl
ja
mov
pop
push
jge
imul
push
xchg
mov
or
mov
inc
jge
out
mov
push
pop
inc
add
xor
pop
xor
sub
fcompl
in
and
xchg
inc
inc
pop
pop
loopne
stc
mov
test
xchg
dec
pop
jno
cmpsl
dec
inc
das
adc
lret
inc
sbb
pop
mov
jb
pop
push
out
jne
add
addr16
lods
movsl
nop
js
fisubrs
mov
pop
sarl
jp
imul
int3
bound
mov
cmp
sub
mov
pop
repz
add
fs
pop
ds
out
inc
cmpsb
mov
iret
icebp
fsubs
mov
les
adc
xchg
add
cmp
mov
pusha
shll
sbb
mov
inc
push
xchg
fmuls
cs
pop
cwtl
cmpsb
les
scas
jecxz
frstor
adc
sbbl
add
lock
nop
add
icebp
hlt
lret
fistl
sti
fisubl
inc
pop
out
sub
jge
mov
cmp
pop
jl
rorl
inc
xchg
arpl
fisttpll
data16
pop
mov
mov
out
adc
in
pop
push
and
les
inc
shlb
mov
rcrb
cmp
mov
jae
pop
lods
mov
pop
aaa
xchg
ret
cmpsl
fsubs
jmp
xor
xchg
lahf
push
aam
rol
stos
mov
or
mov
cwtl
inc
xchg
mov
dec
pop
sub
and
pop
test
dec
lahf
push
xor
or
lea
scas
sbb
ss
mov
popa
and
cmpsl
push
pop
cmc
pop
mov
pusha
popl
push
inc
adc
mov
les
mov
or
xchg
xchg
out
pop
mov
sub
push
les
addr16
pop
decb
pop
loope
aam
jp
pop
leave
nop
xchg
cmp
es
fcomps
adc
pop
repnz
dec
inc
fwait
jns
sub
pop
add
pop
xchg
enter
sub
pop
cmc
sbb
and
xchg
sub
pop
pop
test
je
dec
sub
ret
fisubrs
and
cmpsl
pop
jg
push
cs
pop
ret
xchg
mov
pop
gs
popa
jno
pushfw
xlat
fucompp
cmp
out
cmpsl
sub
insl
adc
dec
repz
jnp
xor
stos
mov
mov
jo
bnd
in
sbb
andb
and
stos
xor
pop
jnp
cltd
loope
mov
pop
or
mov
push
cmpsb
addr16
fadds
cmp
imul
pop
not
push
dec
jae
loopne
pop
in
pusha
adc
cmp
test
int
jnp
push
jb
xchg
xchg
in
push
in
xor
push
pushf
mov
mov
cmp
fsubr
out
gs
mov
and
pop
inc
sti
arpl
mov
lret
mov
adc
fcomps
aas
push
pop
imul
clc
insb
aaa
stc
mov
mov
mov
rcrl
dec
push
lods
ds
pop
loop
cmp
cwtl
adc
push
lea
xchg
add
dec
stc
dec
inc
ds
sbb
xorb
xchg
jmp
movsl
add
pop
sbb
andb
testl
cmpsl
xor
call
sub
fisubl
pop
inc
push
pop
mov
ljmp
inc
sti
mov
repnz
push
jl
pop
inc
xor
adc
mov
sub
divb
sahf
mov
leave
pop
mov
adc
popf
lods
orb
dec
int3
pop
xor
inc
push
movsb
scas
in
pop
fld
cmp
pop
punpcklbw
lock
in
pop
push
jne
sbb
and
pop
sub
lahf
jl
mov
pop
adc
mov
clc
xchg
sbb
xchg
dec
or
or
dec
pop
mov
and
mov
xor
dec
jnp
pop
adc
pop
sub
ljmp
sbb
and
mov
push
je
inc
inc
fsubrs
and
xorl
pop
mov
cmp
ss
clc
xor
fcomp
out
jbe
and
add
adc
pop
mov
lock
sbbb
push
orb
xchg
pop
int
scas
imul
dec
or
fwait
jne
ljmp
pop
pop
repz
addr16
sbb
ja
pop
imul
mov
pop
push
stos
add
adcb
sub
mov
pop
fists
sti
add
repz
movsl
div
jne
lods
icebp
adc
iret
and
mov
jo
pop
mov
lods
gs
pop
test
outsl
jbe
pop
push
xchg
repz
out
fisubs
leave
lea
inc
pop
insl
pop
iret
mov
popf
lock
pop
adc
jns
pop
jmp
or
jno
rcl
in
mov
pop
pop
aas
lods
or
out
fmul
or
pop
ljmp
bnd
cmp
cwtl
call
adcb
mov
or
test
jbe
je
sbb
add
out
in
pop
lcall
lock
pop
aaa
push
xchg
pop
cmp
lahf
clc
sbb
cmp
push
les
mov
sbb
mov
mov
adc
pop
outsb
xchg
mov
pop
pop
or
lret
sbb
pop
daa
loop
into
pop
push
ljmp
test
cmp
popa
fs
push
pop
or
push
shr
sbb
gs
fwait
sahf
push
inc
loopne
mov
cmpsl
aam
xchg
and
fcomps
dec
repnz
fcoml
stos
pop
ja
sbb
lahf
mov
pop
imul
mov
int
dec
movsb
cli
fcompl
mov
rorb
shll
push
into
pop
cmp
mov
xchg
pop
movsl
andl
pop
fdivs
add
iret
inc
pop
imul
and
leave
pop
mov
xchg
insl
clc
lods
jg
mov
and
push
aas
inc
add
jne
fistpl
lods
dec
add
lds
pop
xor
sub
pop
mov
xchg
inc
jbe
cli
test
and
pop
push
ret
js
mov
and
dec
mov
in
pop
les
push
lcall
pop
jo
sub
ret
pop
cld
jl
out
cli
aad
push
sbb
insl
aam
pop
xchg
mov
fadds
xor
mov
repnz
fwait
aad
pop
xchg
jle
sbbb
jmp
sub
int
dec
pop
or
add
pop
cld
pop
inc
loope
cltd
cmp
cmp
xlat
bnd
fcomps
fstpl
add
je
add
das
pop
add
jg
add
mov
rolb
xor
adc
xchg
xchg
lcall
imul
mov
push
mov
and
push
mov
cwtl
test
pop
in
jbe
sbb
arpl
mov
xchg
or
mov
fldt
push
cltd
test
lret
fsub
test
mov
mov
hlt
insb
sub
pop
rcrl
mov
fidivrl
push
mov
scas
outsb
fdivrs
xchg
mov
push
mov
inc
push
nop
cmp
inc
pop
fs
imul
pop
daa
sbb
nop
pop
iret
mov
and
push
aaa
aad
inc
mov
test
inc
and
loope
mov
xchg
xor
adc
out
sub
and
cmp
xchg
enter
xorb
mov
call
pop
jecxz
lods
out
in
xor
xchg
push
mov
dec
int3
pop
dec
or
ja
xor
sbb
pop
xor
add
pop
pusha
popf
xor
fidivl
xor
push
movsb
lcall
jmp
pop
addr16
inc
nop
aaa
lock
mov
push
sbb
cs
sub
pop
fsubrl
enter
or
nop
adc
imull
xchg
mov
dec
pop
add
or
out
push
iret
and
cld
loopne
jb
or
push
inc
mov
sub
ljmp
out
popa
mov
pop
lret
sbb
ja
xor
mov
cmpsl
int3
sub
ret
ja
cmp
clc
into
xlat
lret
lods
jmp
outsl
adc
pop
pop
pop
stos
test
arpl
sub
push
mov
mov
pushaw
or
pop
mov
icebp
ljmp
xor
fsubs
dec
and
lods
mov
lcall
xlat
ret
mov
pop
repnz
push
pop
cwtl
js
jmp
pop
movsl
pop
repnz
or
sti
test
mov
stos
xchg
mov
inc
cwtl
push
inc
stc
in
ljmp
mov
xor
cli
pop
sti
fs
jnp
pop
cltd
sbb
test
iret
outsl
inc
cs
into
ret
out
jecxz
sbb
pop
jmp
and
rorl
sbb
inc
cmp
xchg
clc
mov
cmpsb
mov
xor
pop
test
or
mov
xor
pusha
add
pop
ja
testl
in
xchg
jne
mov
ljmp
xchg
mov
push
adc
adc
mov
ret
shr
clc
jmp
pop
jns
mov
loopne
xchg
das
adc
sbb
mov
pop
negb
lret
out
jnp
sbb
inc
mov
jmp
sbb
or
push
xor
call
ret
test
fbstp
sub
sub
hlt
xor
out
repnz
push
or
inc
gs
push
pop
sahf
adc
test
repnz
and
inc
cmp
pop
sbb
fs
ss
mov
sbb
and
pop
and
bound
lahf
lcall
inc
aad
pop
add
dec
cmp
push
pop
cld
and
add
push
adc
enter
arpl
or
or
leave
mov
sub
jg
xchg
mov
and
testl
pop
arpl
fwait
xchg
mov
addb
cwtl
pop
enter
std
js
xchg
lock
xor
sub
mov
xchg
hlt
push
adc
push
cmpsb
jg
cmp
sub
popf
addr16
outsl
ffreep
mov
pop
out
fmuls
sbb
sbb
mov
fsubs
jnp
mov
neg
addps
into
out
push
sub
pop
or
insl
mov
pop
push
scas
andl
inc
and
dec
ds
pop
pop
adc
cmp
pop
and
mov
int3
jnp
stos
inc
add
mov
cmp
ja
fwait
pop
fnstsw
and
pop
lds
pop
jae
inc
enter
inc
pop
sbb
mov
mov
mov
into
xchg
mov
pop
xchg
cmp
fimull
imul
pop
push
imul
ficoms
rcrl
ret
inc
mov
es
pop
mov
inc
dec
add
adc
rsqrtps
pop
cs
or
sbb
mov
out
rcr
sub
pop
sbb
roll
stos
push
sti
jmp
jbe
and
adc
sub
aas
sbb
inc
iret
shlb
popa
sbbb
add
xlat
cwtl
pop
aaa
mov
sub
pop
int3
sbb
in
xor
mov
mov
sub
xchg
pop
xchg
mov
cld
cmp
inc
xor
imul
and
pop
adc
in
dec
daa
mov
xor
xchg
rorl
adc
pop
xor
cwtl
xor
mov
lret
cltd
xchg
sbb
imul
pop
jge
mov
cmp
in
test
fstps
sbb
push
addr16
sbb
push
ret
das
pop
adc
sub
sub
jg
or
jmp
mov
pop
and
push
sub
xchg
pop
add
sbb
or
out
lock
and
add
sub
dec
out
fcoms
cmp
int
dec
daa
pop
mov
loopne
pop
mov
sbb
pop
test
andl
jne
popf
clc
pop
imul
mov
lret
enter
mov
inc
cmp
out
incb
fcomps
xor
scas
jl
xchg
or
mov
cwtl
shl
ss
sbb
sbb
mov
in
inc
xor
clc
and
push
sub
mov
jb
out
rcr
push
outsl
test
inc
mov
pop
fidivs
mov
clc
stos
popa
arpl
mov
mov
hlt
push
loopne
enter
mov
les
jmp
adc
add
mov
iret
mov
mov
push
dec
jp
xlat
pop
pop
or
lret
jl
cmp
inc
inc
rcrl
bound
inc
sbb
out
or
adc
dec
in
cmpsb
insl
xchg
pop
outsb
jecxz
push
jmp
jg
sbb
out
inc
mov
pusha
je
test
lret
in
jp,pt
xor
and
data16
pop
push
dec
xor
xchg
outsl
and
push
test
into
mov
push
push
pop
fcmovbe
in
cmc
rcll
test
mov
cmp
scas
outsb
push
adc
lret
sbb
inc
lock
rol
mov
mov
sbb
inc
mov
push
lods
js
repnz
push
ficompl
je
mov
stos
jne
mov
pop
test
pop
shl
pop
gs
dec
dec
pop
sahf
adc
pop
dec
cmp
xchg
enter
cli
stc
pop
call
cmp
or
ss
push
adc
pop
xor
pop
mov
dec
mov
jbe
jo
and
pop
into
lea
xor
lods
pop
cli
ret
xchg
adc
jp
pop
lea
xor
inc
enter
es
jmp
cmp
pop
mov
xor
pop
leave
adc
cmp
jg
je
jl
pop
aam
inc
sbb
xchg
loopne
lods
outsl
jge
add
imul
testl
repnz
dec
pop
xchg
mov
cld
gs
cmp
ret
pop
outsl
push
pusha
rclb
hlt
cmpsl
shrl
jbe
pop
mov
stos
mov
pop
jno
sti
mov
and
pop
out
lods
cmc
sub
int
pop
insl
ljmp
adcl
iret
sub
repnz
pop
pop
andb
je
mov
sbb
lcall
loope
push
fisttps
or
xor
mov
add
xor
mov
inc
sbb
push
movb
cmpsb
pop
sbb
xor
fptan
xchg
loope
xchg
mov
mov
pop
pop
repz
jecxz
scas
addl
arpl
fdiv
or
imul
jp
mov
mov
xchg
fsubrs
xchg
mov
inc
and
jmp
aas
or
popa
loopne
ja,pn
add
mov
push
push
shll
test
xor
mov
xchg
xchg
mov
pop
pop
sub
notb
push
pop
out
es
inc
cmp
stc
cli
nop
mov
pop
das
mov
pop
cmpsl
add
xchg
jne
aas
pop
out
js
mov
ljmp
push
xchg
pop
lcall
sub
jno
pop
addr16
add
pop
pushf
inc
jmp
mov
imul
mov
inc
pop
mov
in
and
les
and
add
jecxz
xchg
lds
ret
xchg
mov
cmp
fcomps
pop
add
push
xor
or
flds
inc
rcrb
popf
test
lock
pushf
pop
icebp
push
push
xor
fists
mov
adc
pop
gs
mov
testb
dec
arpl
dec
lcall
and
rcr
push
enter
pop
add
imul
pop
sub
mov
pop
pop
sti
jle
inc
das
sbb
push
xchg
sub
lcall
sub
jne
ja
xchg
loopne
clc
add
popa
jge
mov
jo
adc
leave
rcrb
cmc
push
std
mov
inc
dec
and
out
mov
xor
scas
pop
aas
mov
or
add
ret
jo
pop
sub
ja
addr16
test
in
lea
movl
xchg
pop
mov
in
sub
je
jb
mov
xchg
add
pop
xchg
movsl
sub
mov
mov
cwtl
stos
sti
or
pop
mov
arpl
mov
jg
mov
pop
pop
vpcmpeqd
pop
ss
pop
hlt
cltd
dec
pop
and
mov
in
jbe
lea
xor
inc
push
lahf
pop
mov
sbb
cmp
push
mov
cld
pop
pop
in
mov
sti
inc
les
dec
inc
sbb
pop
xor
sbb
in
cmp
adc
pop
inc
mov
rcrb
xchg
pop
mov
stc
int3
jne
test
out
pop
ds
jp
pop
sarl
inc
cmp
ljmp
xor
cmp
or
jg
inc
pop
xchg
adc
lock
inc
jns
pop
into
cmp
movb
imul
icebp
cmp
outsb
rolb
inc
pushf
cs
sub
sbb
dec
sbb
call
fisttps
push
mov
inc
pop
ret
arpl
adc
mov
xor
pop
into
mov
push
scas
lods
shlb
icebp
cmpsb
mov
sahf
push
data16
fsubrs
dec
mov
or
mov
out
iret
jle
xchg
push
sbb
ss
insb
fdivs
and
jmp
pop
push
mov
lds
jge
ljmp
or
shlb
pop
stos
push
cwtl
push
cld
aaa
popf
mov
gs
ds
adc
es
jge
pop
jmpw
jl
pop
mov
ret
pop
leave
in
aas
std
xchg
push
clc
xor
sub
mov
pop
inc
mov
dec
ds
mov
xor
cmp
xchg
add
pop
leave
dec
mull
ja
pop
std
je
cltd
xchg
jno
dec
xchg
dec
inc
jp
sub
and
stos
test
ret
cmp
outsl
pop
jle
rcl
pop
jbe
mov
pop
das
cs
pop
inc
mov
jno
pop
or
push
out
pop
or
sub
cmpsb
shrb
pop
enter
sub
cmpl
xchg
xor
cs
test
repnz
pop
adc
lret
pop
jbe
pop
mov
add
pop
int
or
xor
loope
pop
stos
inc
or
sub
adc
xchg
sbbb
mov
in
ja
pop
sbb
jne
dec
dec
pop
cs
xor
lcall
mov
or
pop
add
mov
xlat
xchg
outsl
outsb
fdivrs
dec
mov
mov
rcrl
xchg
mov
pop
push
xor
or
pop
pop
loopne
push
out
xchg
aaa
dec
aad
mov
pop
xchg
stc
fsubs
lea
shll
sbb
or
cmp
mov
push
sbb
push
popf
mov
cmp
adc
addb
rcll
cltd
cmp
mov
decl
bound
pop
sbb
xchg
xor
or
pop
lcall
outsb
mov
aam
arpl
xor
inc
fisubl
hlt
xchg
xchg
lock
mov
pop
pop
adc
inc
sbb
pop
and
push
xchg
jge
pop
cmp
sub
int3
sbb
lret
cmp
push
fwait
jo
cwtl
push
dec
ficompl
mov
clc
sub
mov
fstps
add
pop
xlat
lock
cmp
push
adc
pop
dec
icebp
push
mov
andl
lcall
xchg
insl
pushf
dec
outsl
sbb
pop
out
loopne
mov
repz
dec
xlat
cmp
pop
add
pop
mov
scas
push
stos
fistpl
jl
fistps
pop
adc
mov
sub
cmp
clc
lahf
pop
mov
fdivrs
adc
fdivrs
pusha
push
mov
inc
mov
pop
mov
lock
scas
pop
push
pop
or
push
pop
pop
icebp
movsb
aam
pop
pop
aas
adc
addr16
ja
mov
inc
push
sbb
add
push
mov
lods
out
sub
mov
push
fists
or
pop
gs
xchg
push
pop
mov
xchg
loopne
mov
xchg
sbb
xor
rclb
in
pop
cmp
gs
lret
jbe
hlt
cmpsl
xrelease
fs
xor
mov
lods
cmpsl
cmp
lcall
rcrb
jmp
sti
mov
adc
or
pop
dec
inc
fisubrl
loop
cmpsb
mov
int
js
rcr
add
jecxz
cmp
mov
or
dec
into
fdivrs
hlt
mov
negl
cmpb
sahf
in
repnz
inc
pop
xor
cmp
inc
aaa
lcall
pop
cmp
sub
add
js
mov
add
or
scas
in
mov
adc
xchg
ret
cmc
pop
sbb
jno
xchg
repz
mov
lea
pop
mov
aaa
inc
push
lods
push
dec
arpl
lahf
pop
rol
push
or
je
pusha
pop
loope
xor
cli
xor
int3
mov
clc
rcr
mov
xchg
or
aam
mov
dec
rol
mulb
pop
or
sbb
xor
lcall
or
cmp
test
lret
push
lea
pop
call
data16
pop
cmp
test
aad
in
out
into
pop
push
jle
cld
ja
lcall
push
and
pop
repnz
mov
pop
sbb
sub
data16
cmp
aam
mov
pop
xchg
cmp
sub
loop
inc
mov
subl
mov
add
in
repnz
adc
inc
js
in
jg
std
pop
out
xchg
xchg
nop
mov
jno
jns
test
arpl
xchg
mov
outsl
pushf
pop
xchg
or
loope
inc
icebp
rcrl
arpl
push
mov
fwait
pop
pop
pushf
enter
ret
add
dec
lock
out
jo
pop
sub
xchg
ljmp
push
xchg
pop
push
test
pop
xor
popa
push
test
repnz
dec
pop
xchg
in
dec
pop
sbbb
lock
pop
mov
inc
loop
or
inc
push
loope
mov
fcmovnbe
xlat
outsb
leave
repnz
fmul
daa
pop
fisttpll
outsl
add
add
ret
jae
adc
pop
in
stos
sbb
mov
sub
mov
nop
test
out
xchg
add
enter
sbb
cmp
dec
insb
dec
nop
jge
aam
testb
movsb
pop
xchg
loopne
xchg
cmpsl
xor
cmp
mov
divb
aas
add
pop
loopne
push
mov
addr16
pop
fwait
into
jp
fmuls
pop
jbe
es
mov
pop
sub
mov
pop
cmp
out
dec
adc
inc
adc
or
sub
xor
das
mov
pop
nop
mov
sti
jmp
out
je
add
dec
push
pop
sbb
in
pop
xor
and
sub
test
jno
fsubrs
rolb
pop
int3
inc
pop
and
imul
xor
ds
xchg
popaw
fiadds
clc
in
ss
pop
push
lcall
int3
jns
mov
sbbb
mov
jl
popf
push
leave
int3
mov
lds
or
jns
inc
dec
sbb
mov
data16
cmp
bndstx
sti
adcb
repnz
dec
xor
dec
sub
mov
sbb
fsubrl
cli
xlat
dec
sub
loop
mov
dec
lret
or
out
jae
and
pop
mov
push
push
push
sub
add
shrb
sbb
sub
pop
mov
xchg
inc
or
inc
test
sbb
mov
pop
sub
in
orl
jp
fnsave
xchg
sub
cmp
inc
pop
push
and
pop
loop
lret
pop
push
sub
inc
das
pop
adc
out
mov
pop
loope
xor
lds
lret
jecxz
fsubl
call
pop
in
pop
push
cltd
test
pop
mov
and
inc
xchg
pop
inc
subl
pop
mov
dec
push
sub
stc
nop
pop
jb
loopne
push
fs
add
sarb
fidivrs
in
loope
lods
test
lock
cld
rorb
cmp
cmp
hlt
mov
rcrb
jbe
jg
repz
mov
aad
mov
jns
andl
mov
rcl
adc
pop
and
and
inc
scas
pop
jmp
mov
inc
mov
in
int
in
and
push
mov
pop
lret
add
adc
mov
dec
cmp
lret
mov
out
cmp
add
fcmovne
pop
cwtl
in
mov
inc
mov
setno
lds
imulb
shl
pop
cmp
dec
sbb
inc
jae
push
mov
mov
pop
add
push
xor
fsubs
clc
pop
test
or
sub
fdivr
mov
clc
mov
cmp
mov
xor
pop
lods
dec
lahf
stos
push
jp
insl
je
inc
stos
sbb
fsubr
xchg
push
xor
cmp
rclb
dec
gs
sbb
mov
push
pop
adc
mov
dec
xchg
pop
jbe
pop
lds
sbb
pop
sbb
lcall
pop
and
add
pop
jg
loop
bound
mov
mov
out
mov
fidivrl
lods
aam
pop
cld
dec
loopne
xchg
cmp
xchg
pop
jp
cmp
pop
rcll
iret
loop
sbb
test
pop
xor
mov
jne
lcall
sub
iret
pop
and
mov
pop
incb
fldenv
shrb
js
insl
sbb
mul
cmpsb
outsl
js
pop
xlat
cwtl
std
dec
lods
mov
fcoml
add
fstpt
imul
mov
inc
dec
stc
inc
dec
insl
sbb
movsl
jne
cmp
pop
pop
cmpsl
push
or
clc
mov
pop
out
xlat
loopne
stos
xchg
cmp
insl
mov
sarb
sbbl
cmp
addr16
cmp
sbb
rcrb
adc
xchg
iret
pop
pop
mov
js
or
movsb
cmc
loope
aas
data16
inc
cvtps2pd
or
cwtl
inc
fstl
mov
aaa
sbb
in
jnp
sbb
mov
pop
and
mov
pop
xor
sbb
pop
push
adc
dec
inc
mov
push
inc
push
xor
sub
sbb
dec
iret
fisubs
xchg
dec
addr16
fistpll
in
pop
cmp
pop
jno
loopne
push
sbb
mov
pop
xchg
xchg
push
and
insl
rcrl
push
push
rcrb
dec
imul
mov
pop
insl
sbb
jle
push
sti
pop
sub
fdivr
aas
dec
ss
andb
das
lret
test
icebp
adcl
dec
xchg
jle
pop
sbb
cwtl
outsb
xor
aaa
cmp
add
sub
sub
sbb
mov
sub
imul
sbb
xchg
hlt
adc
pop
push
popf
pop
or
cmp
data16
les
test
lret
lock
xchg
fstps
cwtl
mov
popf
xlat
pop
shr
mov
xchg
xor
pop
mov
pop
fdivrs
fcmovb
pop
out
lock
pop
jo
ja
or
mov
inc
adc
out
cli
push
pop
xor
and
mov
fcompl
and
dec
push
dec
or
xor
adc
lods
pop
lcall
imul
xchg
mov
pop
jl
mov
sbb
lcall
addl
dec
xor
ja
negl
clc
aad
int3
jge
andl
dec
push
cmp
xchg
add
ss
mov
pop
mov
or
xchg
in
pop
xor
mov
and
fsubrl
ja
icebp
adc
addr16
cltd
sbb
in
bound
inc
fs
lea
push
cli
inc
mull
xchg
sub
pusha
jb
cltd
pusha
pop
fists
push
add
popa
lret
xchg
pop
fidivrs
push
inc
ja
divl
add
push
pop
mov
push
mov
jbe
lahf
repz
inc
pop
mov
cltd
adc
fcomps
stc
mov
pop
mov
add
pop
push
push
mov
jb
and
xchg
lcall
pop
push
int
xor
mul
cmp
pop
imul
adc
imul
mov
mov
dec
roll
xchg
pop
adc
mov
and
push
inc
je
ljmp
mov
or
fcomps
aas
and
add
scas
jns
cmp
add
cmp
scas
push
and
adc
sbb
data16
repnz
sbb
arpl
stc
out
daa
pushf
dec
sub
xchg
pop
sbb
and
push
lods
xchg
pop
out
pop
fnsave
ret
xor
je
inc
xlat
pop
jmp
inc
jecxz
cs
sar
lret
rcl
pop
push
ja
mov
imul
pop
scas
pop
jo
or
sbb
mov
mov
jle
lods
and
push
pop
push
cmp
int3
bound
cmc
mov
pop
pop
rcl
xor
into
cltd
data16
stos
sti
sbb
fadds
lahf
jp,pn
xchg
mov
loope
enter
lea
pop
or
mov
fistps
ds
jno
cmpsl
inc
lahf
clc
lret
jg
push
inc
xchg
push
or
xchg
sbbl
ds
pop
add
stos
mov
movsb
pop
testl
inc
pop
std
push
mov
xchg
ficoml
pop
pop
xchg
pop
adc
lock
jno
ret
in
outsl
sbb
lea
sbbb
mov
int3
jne
cs
sahf
jle
mov
enter
sbb
fisubrl
out
pop
out
inc
into
sub
push
cltd
movsb
push
rolb
xor
inc
jns
aad
pop
je
int
jno
nop
mov
insb
xlat
and
pop
rorb
cld
out
pop
sbb
push
loope
addb
pop
pop
in
xlat
lods
mov
mov
fstpl
jmp
inc
sbb
jae
push
das
in
cmp
sbb
xchg
and
jge
or
dec
xor
movsb
outsb
pop
mov
mov
dec
mov
push
cld
pop
std
cmp
dec
imul
xor
pop
adc
pop
cwtl
fsubrl
fists
jb
fs
pop
or
pop
mov
and
lret
push
outsb
aas
pop
jmp
loopne
cs
add
enter
pop
cmpsb
cltd
test
shrl
fwait
pop
dec
lret
mov
cmp
dec
dec
mov
int
pop
pop
push
stos
or
xchg
sub
xor
pop
adc
or
pop
xor
sub
lea
dec
pusha
repnz
sbb
xchg
addr16
lcall
jle
call
pop
mov
arpl
xchg
cmpsl
out
hlt
xchg
mov
pop
dec
mov
fcmovb
pop
repnz
nop
inc
mov
in
pop
push
pop
mov
rcll
dec
out
pop
inc
popa
xchg
lret
xor
add
pop
pop
cmp
pop
xor
pop
dec
movsb
sbb
std
sub
mov
loop
cvttps2pi
lock
in
dec
mov
mov
iret
pop
loopne
dec
add
cmp
add
or
out
cmp
stos
pop
xchg
insb
dec
pop
outsb
pop
sbb
cmp
sub
daa
pop
out
mov
arpl
data16
jle
xchg
fcomps
sub
pop
stos
cmp
test
dec
jbe
sbb
aas
jge
cmp
push
imul
add
mov
adc
pop
adc
repz
rcrl
pop
sysexit
mov
les
or
test
pop
sbb
dec
fdivrs
test
test
cmp
in
test
out
pop
mov
inc
jle
mov
lcall
sub
push
pop
pop
popa
clc
add
imul
faddp
and
dec
sti
add
mov
popa
pop
cmp
mov
xchg
push
push
pop
repz
jg
jbe
xchg
jo
fcoms
mov
ja
out
cltd
cmpsl
inc
loop
in
fldcw
iret
jmp
lret
adc
stos
push
imul
ss
pop
rcr
push
lods
mov
inc
ja
mov
int
movsl
adc
fmull
jecxz
pop
adc
dec
push
mov
or
in
jp
xchg
hlt
and
or
mov
in
cli
in
push
pop
or
ljmp
cmp
cwtl
dec
push
js
inc
lret
xchg
or
roll
xchg
pop
les
aas
dec
xchg
inc
push
pop
scas
test
cmpl
push
outsb
faddl
ror
enter
pushf
pop
xlat
imul
daa
jnp
sbbl
fstpt
mov
pop
insb
fcmovb
pop
xor
in
pop
rcll
jmp
repz
push
pop
lahf
dec
enter
dec
lds
inc
jae
sahf
and
in
addr16
mov
cs
aaa
int3
or
mov
sbb
ss
jp
jbe
insb
je
adc
pop
lods
lcall
bound
andl
jo
jae
aad
into
lret
fsub
out
dec
or
cld
pop
arpl
cmpsb
or
pop
cwtl
pop
xor
lea
mov
mov
pop
aam
jmp
leave
mov
pop
inc
jg
test
dec
add
or
ljmp
decb
pop
adcb
pop
pop
push
add
stos
mov
int
pop
jo
pop
mov
pop
sbb
jmp
cmp
adc
pop
cld
mov
dec
cmp
pop
outsl
pop
sbb
sarb
pop
orps
lods
or
mov
outsb
inc
pop
pop
inc
pop
test
mov
ljmp
pop
popa
shlb
pop
jns
push
cmpl
ret
xor
ja
pop
test
leave
sbbb
psubsb
and
pop
ret
fdivrs
or
addr16
jns
cli
fs
lods
mov
xlat
pop
dec
jae
fcomps
jno
fstpl
cmpsl
fs
add
pop
mov
sbb
scas
mov
in
dec
dec
lea
lret
and
mov
pop
adc
cmpsl
mov
ficoms
repnz
or
je
mov
pop
pop
cmp
add
mov
push
mov
mov
adc
aas
push
jmp
mov
pop
inc
mov
xor
mov
ds
inc
push
les
mov
mov
xchg
cmp
lea
std
pusha
pop
arpl
mov
inc
push
cli
inc
stc
nop
insl
int
orb
dec
sbb
jne
inc
inc
out
pop
mov
test
jmp
xor
pusha
jo
data16
pop
mull
mov
das
pop
xchg
inc
xchg
inc
pop
xchg
out
loopne
inc
sbb
push
fwait
mov
push
pop
mov
in
rcrl
push
mov
inc
inc
int3
push
pop
jle
inc
scas
adc
popa
add
xchg
shll
fcomps
pop
in
or
xor
mov
movsb
pop
pop
in
mov
loop
add
push
pcmpeqd
lock
dec
lods
cmpsl
pop
sub
icebp
lds
jmp
add
out
pop
nop
mov
cwtl
inc
fistl
fisttps
data16
pop
dec
sbbb
cmc
xchg
xor
adc
test
movsl
pop
or
dec
mov
int3
cwtl
outsl
sbb
dec
dec
sti
sub
repz
clc
pop
or
jge
push
loopne
pop
mov
adc
or
push
mov
mov
arpl
push
pop
push
repz
scas
push
push
or
jb
faddl
inc
icebp
pop
or
pop
mov
addr16
jecxz
jae
dec
insl
into
in
pop
lock
stos
pop
std
add
ja
mov
pop
cmp
sbbl
pop
daa
pop
fisttps
data16
dec
xchg
cwtl
movsl
das
fnstsw
ficomps
imul
mov
mov
cmpsb
mov
pop
ret
push
lcall
pop
pop
addr16
jbe
xlat
mov
pop
inc
call
push
cltd
pop
jecxz,pt
mov
test
pop
shll
sbb
dec
pop
out
imul
sub
cmpsl
rorl
push
xor
inc
push
pop
js
pop
adc
int
jnp
cmpsb
pop
mov
ljmp
or
repz
add
pusha
loopne
push
test
jmp
mov
pop
jl
inc
in
push
push
mov
loopne
aam
shrb
pop
xchg
pop
add
pop
mov
xor
mov
sahf
les
loope
jns
in
add
cmp
scas
call
dec
pop
out
cmc
mov
push
outsb
lahf
inc
xchg
lret
fcomps
pushf
gs
mov
cs
clc
sbb
leave
dec
daa
pop
std
push
and
sti
push
mov
push
sbb
je
lahf
pop
stos
jmp
cmpsb
lret
shl
pop
into
sbb
pop
or
test
movsb
jne
pop
imul
es
ljmp
pop
jb
mov
inc
pop
mov
int
push
sub
xchg
jns
das
sub
jbe
cld
popa
pop
pop
inc
jmp
in
cmp
jo
jae
pop
aad
cmp
into
pop
adc
aam
pop
popl
out
mov
fwait
pop
jp
mov
das
pop
enter
lea
pop
scas
mov
xor
pop
aas
js
add
es
and
out
jo
cmp
lea
fwait
add
pop
lods
xor
add
stos
cmp
loope
push
pop
pop
pop
js
push
mov
std
popa
jmp
xchg
and
pop
xchg
mov
sbb
push
je
lock
lret
outsl
cwtl
int3
negb
clc
imul
aad
pop
jmp
leave
pop
enter
jno
add
ficoml
and
xor
insl
call
sub
sub
jae
test
xor
in
pop
mov
cmpsl
pop
and
xlat
push
jnp
enter
and
in
sbbb
mov
xor
xor
or
clc
xorl
pop
mov
or
xchg
pop
ret
and
in
cmpsl
or
mov
mov
icebp
lret
inc
push
push
cmp
sbb
mov
inc
sti
cmp
and
int3
sbb
xor
jg
push
pop
fsubl
aaa
inc
mov
pop
fisubrl
xor
imul
pop
cmpsb
inc
adc
add
cs
les
insb
test
xchg
pop
push
icebp
dec
mov
pop
xor
pop
mov
enter
push
or
lea
daa
pop
stc
test
cmpb
insl
rclb
dec
and
pop
dec
movsl
ds
xchg
mov
in
lcall
arpl
pop
sub
push
push
pop
inc
test
sub
fsubrs
add
iret
pop
pop
icebp
adc
jnp
adc
pop
js
push
cmpsb
roll
int3
movsl
jnp
mov
lret
repz
jb
push
add
popf
insb
pop
inc
hlt
mov
test
xor
pop
shr
movsb
repnz
cvtdq2ps
adc
jl
pop
lock
movsb
pop
dec
inc
xchg
pop
sub
pop
pop
sti
adc
jbe
faddl
negb
pop
out
into
or
lret
mov
addr16
lret
mov
sahf
pop
imul
or
cld
pop
push
ffree
xor
stos
jle
lret
jbe
sbb
ljmp
addr16
pop
sub
les
dec
xor
imul
xchg
in
scas
push
mov
int
adc
aaa
mov
sub
inc
sti
pop
pop
stc
out
mov
pusha
push
inc
pop
imul
pop
xchg
scas
roll
fmull
xchg
pop
gs
sahf
mov
mov
sub
or
inc
xor
add
push
add
sub
dec
fidivl
sti
mov
int
les
ret
push
out
xchg
pop
std
in
and
sbb
pop
mov
mov
nop
negb
ret
pop
out
xor
pop
jbe
xor
repz
pop
pop
fs
fidivrl
pop
mov
addr16
pop
mov
adc
adc
push
xor
loop
hlt
pop
out
pop
cmp
shlb
mov
sbb
insl
jne
xchg
int
mov
cmpsb
mov
pop
rorb
mov
dec
mov
test
dec
mov
mov
xchg
unpckhps
cmc
fldlg2
jmp
pop
out
ljmp
xchg
pop
mov
xchg
lret
pusha
sbb
les
push
pop
jns
out
push
je
daa
inc
xchg
fadd
mov
cmc
fucomi
popf
pop
outsb
std
enter
lods
pop
pushf
jo
xor
sbb
imul
fidivrs
outsb
lods
imul
mov
cmpl
jecxz
cmp
pop
dec
cmp
lahf
pop
in
add
inc
decb
adc
fcompl
mov
dec
pop
xchg
mov
ja
cmp
xrelease
inc
or
call
scas
pop
push
ss
mov
clc
and
sub
pop
fcmovnu
add
pop
popf
negl
mov
push
rcl
sub
mov
stos
call
jns
sti
xchg
adc
aam
jp
movsl
sub
dec
popa
fnstcw
enter
lea
jnp
cmp
andb
or
leave
idivb
mov
cmp
dec
lods
and
and
and
in
adc
mov
pop
lods
cld
xchg
add
popa
cmc
mov
negl
dec
lock
std
sarb
sbb
inc
div
xchg
insb
mov
pop
test
jle
int3
ret
aad
xlat
add
xor
les
add
cmp
mov
pop
scas
pop
sarl
out
pop
fisubl
popf
lcall
fucomi
cli
aas
pop
cmp
xor
pop
lret
cltd
inc
repnz
sub
pop
or
test
jne
rcrb
inc
jnp
xchg
lods
popa
or
jns
fdivrs
pop
negb
fsubs
pop
lret
fstl
mov
mov
and
fwait
and
sub
push
and
xor
cmp
mov
pop
mov
lret
mov
push
and
lahf
cmp
pop
iret
xchg
movsl
and
mov
jmp
or
adc
jnp
mov
or
mov
addr16
fstl
test
aas
add
jno
loopne
inc
outsb
add
push
pop
sub
pop
add
cld
push
inc
push
jle
lds
stc
cmp
push
jg
mov
push
pop
jmp
pop
push
mov
xchg
and
xor
stc
pop
fwait
loope
xorb
lods
das
pop
movb
loop
cld
jne
outsl
call
inc
dec
int
xchg
cmpsl
sbb
lea
xor
mov
mov
jmp
xlat
xchg
sbb
mov
je
add
imul
push
sbb
pop
or
jbe
jmp
stc
in
ret
add
push
test
mov
icebp
cwtl
lock
mov
lret
pop
cs
adc
mov
popf
repz
pushl
xor
sbb
movsb
fnstsw
cmp
cmpsb
sub
pop
ret
jmp
push
push
sti
inc
mov
push
push
jg
push
jp
adc
daa
cli
mov
aad
cmp
pop
scas
inc
or
sub
pop
insb
and
fadds
es
loope
pop
adc
pop
mov
xchg
mov
lds
jne
jle
test
pop
sbb
mov
mov
or
cltd
mov
pop
ja
movsb
in
clc
inc
mov
mov
sub
adc
pop
xor
inc
pop
mov
outsb
arpl
push
shrb
and
xor
xchg
adc
or
cmp
fcompl
xchg
icebp
out
mov
aas
addr16
lods
test
bswap
dec
jle
aam
inc
jo
add
mov
pop
mov
vmovaps
adc
pop
test
fisttps
add
xchg
movsl
std
ja
dec
lods
sti
xor
xchg
mov
fcoms
movsb
lea
mov
call
push
pushf
pop
jne
and
jmp
mov
cmp
jle
insb
pop
xchg
xchg
mov
outsl
pop
cmp
pop
push
out
adc
je
lock
jmp
pop
clc
cmp
lock
clc
inc
sahf
mov
adc
cmpsb
or
sar
addr16
push
mov
jecxz
pop
pop
cld
adc
xorb
sarb
pop
mov
sub
test
jmp
xchg
xlat
adc
lcall
xor
mov
xchg
xchg
aaa
push
enter
pop
lock
movsb
pop
xor
arpl
fisttpll
aas
pop
jns
sbb
add
or
pusha
pop
adc
movsl
mov
pop
outsb
and
pop
fimuls
jnp
das
mov
ljmp
daa
cwtl
flds
pop
leave
inc
lods
mov
and
imul
cmc
je
pop
mov
jmp
or
sbbb
inc
jmp
mov
ja
xchg
sahf
sub
mov
xchg
xchg
pop
and
fidivrs
xor
xor
loopne
mov
int3
sbb
fmul
mov
xchg
pop
and
ret
push
pop
jb
loope
lock
fdivrs
aad
mov
rorl
stos
aaa
pop
test
add
fstl
or
pop
pop
sub
aaa
enter
pop
lea
pushf
addr16
pop
adc
mov
mov
scas
pop
leave
int
dec
xchg
imul
je
and
xor
sbb
cwtl
inc
or
pop
xchg
mov
fwait
sahf
and
je
mov
pop
mov
stos
add
mov
mov
inc
pop
xchg
adc
jne
pop
test
ja
cmp
ret
inc
xor
mov
or
cs
add
pop
mov
pop
fidivrs
jge
fidivrl
rcrb
test
repnz
insl
pop
es
mov
pop
lahf
lods
xor
cmc
aad
mov
pop
repnz
or
pop
mov
bound
pop
int3
xor
mov
cmpb
or
inc
pop
mov
push
in
cmp
sbb
rolb
aad
shrb
mov
and
lcall
jg
vmread
mov
imul
pop
imul
les
inc
mov
jbe
jle
mov
pop
sbb
arpl
lsl
mov
sbbl
movb
aam
inc
pop
pop
outsl
pop
insb
sbb
pop
leave
shl
out
sbb
pop
loopne
in
cmp
xchg
mov
push
push
fstps
push
data16
pop
pop
mov
out
movsl
cwtl
fsubrl
add
sbb
mov
mov
mov
sbb
xor
lahf
lcall
sbb
pop
dec
rcrb
sbb
mov
inc
inc
pop
ja
out
push
mov
loope
fistpl
mov
jp
test
pop
sub
push
lods
aad
cmp
pop
frstor
lret
cmp
cwtl
adc
and
sbb
in
enter
fnstcw
sbb
push
lock
cli
fs
mov
leave
ret
sub
jle
push
jl
cmp
pop
cmp
inc
rolb
pop
in
jnp
or
sysenter
rcrl
lds
pop
or
mov
ret
sbb
mov
call
pop
daa
sbbl
sub
push
adc
add
ja
arpl
add
adc
repz
push
mul
test
add
and
enter
xlat
inc
pop
mov
adc
xchg
mov
fdivrs
std
push
scas
push
adc
dec
xor
sbb
arpl
and
and
cld
bound
pop
push
int3
test
jle
in
lds
dec
inc
shll
add
pop
cli
mov
dec
pop
push
or
dec
push
pop
lret
aaa
fadds
mov
fs
pop
sti
aas
pop
and
popa
sbb
jns
pop
inc
stos
push
ja
lahf
cmp
addr16
pop
cld
inc
icebp
sbb
test
fs
sbb
mov
in
inc
dec
mov
lods
rcll
push
mov
repz
pop
xchg
data16
pop
and
mov
int
mov
repz
imul
and
out
push
gs
adc
pop
and
push
add
shlb
sbbl
rcrl
pop
pop
sub
adc
and
in
jg
xorb
xor
pop
aaa
jae
adc
mulb
add
and
sarl
dec
loop
jns
outsb
push
jl
pop
lods
pop
scas
movsl
cld
mov
cmp
sbb
sub
outsb
call
add
or
shll
pop
sub
daa
not
leave
mov
sbb
mov
pop
int3
mov
je
cltd
add
xor
insb
test
addr16
xor
popf
jge
cs
pop
mov
loopne
nop
jns
pop
ljmp
jg
pop
lahf
sbb
arpl
mov
insb
mov
xchg
scas
and
xor
or
subl
ljmp
pop
call
scas
inc
cld
mov
aad
xchg
subb
adc
pop
jb
or
pop
cli
call
inc
pop
mov
popa
movsl
add
or
leave
jle
push
push
pop
sahf
dec
lock
and
pop
out
dec
mov
jne
cld
cmp
sub
and
xchg
add
inc
stos
clc
pop
push
negl
mov
std
jbe
pop
xchg
mov
pop
jnp
lret
test
arpl
push
outsl
sbb
pop
mov
add
cs
sbb
test
jmp
pop
scas
mov
int
pop
out
jbe
push
sub
jnp
imul
cmpsb
dec
xor
lea
repz
test
repnz
mov
xchg
xorb
or
pop
iret
mov
jnp
pop
cmc
popf
or
fdivrl
or
pop
dec
xlat
cmp
fadds
imul
popa
in
pop
addr16
sbb
and
pop
xchg
rorl
sub
xor
pop
jo
xchg
rorb
mov
push
pop
imul
dec
pop
push
mov
cmp
sti
pop
arpl
sbb
xor
dec
pop
jns
jne
ficoml
jbe
xchg
loope
dec
mov
push
pop
lret
aas
add
cmp
pop
dec
das
clc
add
push
dec
mov
jno
push
insb
in
dec
rcrl
leave
push
scas
sahf
mov
add
cmp
addr16
gs
orl
cmp
push
adc
std
cld
mov
pop
sbbb
pop
das
das
jnp
nop
pop
jmp
jne
pop
sbb
out
leave
inc
rorl
xchg
xor
jg
aaa
cwtl
cmc
mov
mov
ljmp
and
mov
xchg
xchg
mov
hlt
out
cmp
pop
imul
or
cmp
cmc
jl
pop
in
ret
xchg
scas
pop
cmp
shl
mov
lret
dec
xchg
dec
pop
lock
popf
add
ds
adc
lret
movsb
mov
pop
pop
fisubl
into
daa
fmull
push
ds
iret
lock
jmp
dec
or
xchg
sub
or
adc
pop
sub
xchg
pop
add
dec
inc
pop
das
or
out
push
cmp
sbb
xlat
push
pop
mov
dec
in
pop
adc
jge
jmp
sub
mov
mov
ficompl
hlt
aam
sub
test
sub
sub
stos
jne
xor
rcrb
jge
scas
call
sbb
or
add
aad
pop
mov
push
cli
dec
pop
out
je
push
pop
xor
sbb
cmp
fstps
pop
push
fwait
pop
xlat
sbb
pop
dec
test
mov
fs
ss
xchg
test
out
adc
stc
ret
jb
mov
fsubs
mov
fisttps
setno
xor
mov
pop
add
sbb
xchg
jbe
mov
push
nop
dec
pop
adc
repnz
xorl
pop
jbe
stc
ds
leave
pop
fs
enter
shl
pop
mov
movsb
mov
nop
mov
jl
jb
mov
jmp
pop
xchg
push
cmp
sbb
shrl
inc
pop
mov
ror
insl
data16
scas
sbb
adc
fildl
jcxz
fdivrs
or
data16
mov
in
lods
mov
pusha
int3
call
cmp
mov
mov
pop
das
arpl
dec
sub
aam
sbb
xchg
cmp
mov
fwait
xor
jle
leave
pop
insl
lret
cmpsb
les
push
in
add
scas
xchg
xor
fcomps
adc
add
pop
push
aaa
dec
outsb
stos
fnstcw
pushf
xchg
mov
pop
loope
push
fprem1
push
xchg
repnz
das
shlb
push
je
sbb
pop
les
jb
in
lret
mov
gs
loope
add
mov
pop
sub
and
cltd
xor
mov
pop
push
mov
pop
cmp
sbb
subb
and
test
ret
pop
mov
enter
xor
xchg
jo
cmp
aad
lret
jbe
sub
mov
cld
sbb
mov
jp
xchg
xor
ljmp
lea
in
xchg
mov
loope
push
ss
rcrl
jg
rcrb
and
cmp
fnstcw
lock
adc
outsl
pop
imul
test
mov
insb
pop
or
jge
rcll
mov
faddp
cmp
sar
ret
popf
outsl
xchg
xchg
mov
or
jnp
cmp
pop
hlt
test
jno
clc
test
loopne
notb
xchg
xchg
sub
lret
mov
scas
mov
xchg
out
dec
xchg
xor
pop
or
call
in
pop
pop
mov
or
decb
jno
rcrb
pop
jnp
mov
or
mov
pop
loope
jbe
or
in
enter
fsubs
rcr
negb
lock
pop
jae
popf
pop
in
pop
sub
sti
and
push
dec
add
or
xchg
gs
xchg
addr16
ds
mov
jge
mov
inc
jg
pop
cmp
sub
pop
mov
rcrb
mov
push
ror
pop
jae
mov
fisubrs
std
dec
aad
aas
add
mov
add
fisubl
pop
in
mov
ror
rcrl
push
lods
call
jbe
lret
mov
mov
push
push
inc
sbb
pop
dec
inc
push
loopne
hlt
sbbb
fimuls
nop
xchg
push
xor
push
out
sbb
mov
xchg
jbe
xor
cmpsl
push
pop
out
pop
call
popa
lock
hlt
cltd
pop
jl
imul
add
sub
clc
stc
dec
push
mov
lret
cmp
adc
rcll
cmc
lret
fcoms
cwtl
inc
cld
pop
popf
mov
push
pop
mov
addl
sahf
sbb
fldcw
jl
pop
roll
adc
xchg
mov
dec
dec
lret
adc
xor
adc
dec
popf
xchg
imul
or
out
push
and
sub
addr16
adc
in
cli
jmp
mov
mov
lods
jle
test
mov
inc
sub
add
or
clc
pop
vhsubps
mov
pop
mov
push
jmp
add
pop
pop
pop
mov
in
movsb
jmpw
add
adc
xor
scas
fnsave
cwtl
cvtps2pd
imul
cs
ljmp
test
cwtl
adc
push
inc
mov
add
rcrb
mov
mov
out
fsts
fistps
mov
push
out
movsl
xor
ficomps
mov
sti
pop
push
mov
inc
fbld
pusha
or
push
mov
sti
pop
cs
jno
push
dec
pop
cmpsl
jbe
and
repz
push
cltd
xor
push
mov
iret
arpl
xchg
jmp
mov
pushf
sbb
sahf
cmp
xor
mov
pop
mov
inc
or
adcb
and
mov
jecxz
inc
push
adc
sub
pop
rclb
repz
pusha
or
daa
push
xchg
xchg
sbb
pop
inc
arpl
in
adc
fisttps
sbb
cmpsl
ds
aaa
mov
ja
mov
mov
data16
rcrl
movsb
dec
les
pop
mov
mov
inc
mov
scas
and
dec
adc
je
push
outsb
mov
pop
lret
mov
xlat
pop
inc
jno
sbb
aad
daa
mov
and
lods
test
add
xchg
ret
cs
je
mov
aas
shlb
lahf
dec
addr16
dec
cs
push
and
or
mov
dec
jbe
push
in
and
call
pop
pop
mov
mov
popf
lods
ss
fwait
mov
lret
and
mov
xchg
bound
mov
inc
sbb
stos
into
outsb
or
pop
cld
movsl
or
xor
pop
leave
pop
cmp
push
push
test
pop
jbe
sbb
jo
mov
mov
push
ret
clc
xchg
add
pop
sarl
pop
lea
in
addr16
inc
rol
sbb
cmp
lods
sub
test
mov
pop
fldcw
cmpb
pop
pop
std
test
fists
jbe
dec
sbb
stos
cmp
add
mov
cmp
adc
mov
ret
lcall
sub
pop
mov
in
mov
add
in
lret
shll
xor
cmp
cmc
pop
pop
repz
lret
push
cmp
sub
fldenv
aad
xchg
adc
push
mov
xchg
les
pop
or
call
scas
fcomps
and
mov
pop
pushf
jae
loopne
in
stos
addr16
sbb
and
movsb
cwtl
dec
pop
ret
xor
insb
xchg
pop
push
push
nop
mov
xor
imul
sarl
cwtl
push
std
out
in
pop
jge
leave
and
inc
aad
fcom
fldenv
lahf
xor
arpl
movsb
xchg
aaa
and
pop
sub
inc
aas
data16
clc
add
pop
pop
mov
mov
or
push
fstpl
mov
negl
data16
xor
out
push
pop
jae
mov
mov
pop
idivl
std
das
pop
ret
nop
into
dec
loopne
lret
or
out
dec
dec
repnz
or
shll
pop
cwtl
pop
sbbl
call
test
popf
xchg
inc
xor
push
hlt
pop
xlat
dec
fsubr
shlb
jg
fwait
pop
or
pop
in
adc
push
push
mov
fidivrs
enter
outsl
pop
lods
js
xor
lret
pop
sub
cwtl
bound
popf
pop
nopl
add
divl
pop
mov
pop
movsb
mov
mov
mov
rolb
or
push
pop
addr16
xchg
das
stc
dec
jnp
outsb
sub
fdivrs
stos
adc
pop
lahf
arpl
std
pop
and
out
jbe
cwtl
mulb
notl
pop
inc
dec
cmp
push
pop
in
jmp
mov
mov
lds
jbe
sbb
pop
jo
or
mov
jno
ja
jmp
inc
push
jge
or
push
push
pusha
cmpsb
dec
adc
incl
fidivrl
cmp
pop
lret
push
mov
mov
lods
scas
mov
popf
mov
mov
imul
jbe
lea
addr16
jno
loop
lcall
mov
mov
dec
jae
jb
mov
or
shrb
pop
inc
movsl
cltd
notb
mov
pop
insb
iret
xchg
mov
mov
or
je
push
imul
iret
pop
lret
inc
add
fs
in
mov
mov
iret
and
push
mov
imul
push
cmpb
jmp
jg
cmp
fldenv
lahf
mov
aam
pop
dec
or
pop
inc
cmpsb
adc
add
mov
pop
inc
adc
mov
or
dec
pop
push
mov
ret
jmp
push
pop
xchg
ds
dec
mov
fucomi
loopne
push
inc
sbb
ljmp
mov
inc
cmp
cmp
push
ror
inc
xchg
loop
enter
cmpl
push
scas
jmp
pop
inc
cmc
sahf
loopne
outsb
xor
mov
pushf
cmpsl
cmpsb
pop
xchg
mov
out
sbb
pop
shll
adc
dec
push
xchg
int3
inc
fadds
cmc
cmpsl
xchg
ret
test
pop
jmp
test
leave
call
adc
addr16
push
mov
aaa
hlt
ja
mov
rcrl
sbb
loop
ds
mov
cmpsl
sbb
insl
sbb
ss
jo
mov
and
movsb
jle
pop
pop
into
pop
shlb
pop
pop
dec
mov
pop
jo
xchg
pop
xlat
aad
insl
jge
mov
pop
jnp
jae
push
cld
xor
xchg
cmpsl
std
and
cmp
fadds
test
popa
jp
movsb
cwtl
xchg
cmp
stos
jae
mov
aaa
enter
mov
mov
jg
ror
pop
loopne
mov
mov
lcall
lods
repz
pop
cli
add
scas
stos
dec
jecxz
jne
clc
xor
sti
outsl
pop
jno
mov
es
repnz
xchg
xlat
sbb
clc
cmp
or
outsl
adc
jge
pop
cmp
mov
aad
add
pop
and
mov
and
out
sub
and
pop
outsb
in
rorl
xor
and
pop
test
gs
xor
xchg
cwtl
subb
and
pop
fcoms
jnp
xchg
or
or
es
movsb
cmp
fcomps
xor
fstl
not
pop
pop
fidivs
call
jne
sbb
pop
mov
dec
pop
or
leave
xchg
mov
push
mov
cmp
ret
out
inc
ja
add
fcoms
addr16
movl
bound
sub
call
pop
xchg
bound
addl
inc
in
xchg
xchg
add
js
mov
push
gs
xchg
lods
rcl
pop
mov
inc
loopne
pusha
mov
popf
sarb
push
lcall
inc
pop
ds
inc
stc
push
or
xorb
sbb
xor
pop
xor
stc
out
adc
dec
fsubs
mov
pop
pop
pusha
lods
xor
jmp
nop
cmpsl
les
call
sub
inc
push
add
pop
xchg
cmp
fadds
mov
inc
ficompl
mov
daa
cld
dec
xchg
mov
in
adc
mov
xlat
loope
pop
sbb
stc
mov
into
bound
pop
jge
adc
cmpsl
cmp
xor
test
movsb
je
pop
inc
fstps
xchg
pop
mov
xchg
loope
lock
arpl
dec
rcrb
xlat
popf
jl
in
dec
adc
out
cli
xchg
es
mov
pop
jne
or
pop
fwait
jo
and
lea
mov
sbb
addr16
jne
cmp
mull
lds
cli
inc
sbb
jb
sub
add
sbbl
arpl
ja
or
mov
push
xchg
cmpl
scas
mov
stc
out
pop
mov
lods
sub
out
pop
xor
mov
mul
mov
and
or
pusha
sub
int
icebp
pop
add
pop
adc
inc
enter
lahf
test
cwtl
in
loope
pop
inc
call
mov
hlt
push
sub
cmp
push
dec
pop
ffreep
dec
mov
movsl
in
aas
sub
and
frndint
sub
jnp
enter
icebp
mov
mov
repz
pop
cmp
push
in
out
mov
cmp
sub
out
test
or
mov
sarb
push
ret
test
pop
cmp
pop
lea
nop
mov
pop
cmp
xor
jl
or
repnz
jecxz
aam
adc
cmp
pop
or
sarb
sahf
pop
mov
mov
cmc
push
sbb
and
pop
in
stos
aaa
sbb
jne
ljmp
ja
iret
in
pop
pop
cmp
lods
in
pop
sarl
push
hlt
jl
pop
jns
pop
jle
sub
pop
scas
mov
sbb
pop
cmc
lds
rcrb
inc
ret
jmp
pop
mov
add
pop
daa
jae
push
push
lods
adc
ret
xchg
pop
repnz
jmp
xor
mov
icebp
cmp
pop
mov
and
or
cs
dec
iret
pop
inc
jb
sti
jbe
cltd
popa
pusha
xor
ss
inc
insl
mov
addr16
mov
imul
mov
sub
mov
into
hlt
pop
sbb
ret
cld
mov
pop
mov
jp
jg
and
pop
sub
push
lret
data16
xor
mov
aam
pop
cmp
add
push
xchg
push
rcrl
jg
std
mulb
fildl
ja
and
call
cmp
pop
sub
inc
stos
and
loopne
pop
pop
cmp
js
std
sbb
jge
pop
pop
adc
stos
out
pop
das
scas
pop
cmp
cmp
outsl
push
adc
rclb
out
cmp
mov
adc
loopne
push
ficompl
jb
out
mov
call
pop
xchg
xchg
inc
cmpsb
xorl
ss
test
repnz
cmp
pop
jecxz
or
rcr
push
jnp
sub
or
xchg
in
lock
jne
or
xlat
inc
inc
int
inc
push
pop
sbb
fldt
testb
jae,pt
movsb
mov
in
sbb
std
test
inc
or
xor
mov
pop
mov
iret
imul
leave
pop
mov
jmp
pusha
or
filds
fs
xchg
data16
mov
gs
js
pop
cmc
and
lea
mov
fwait
repnz
push
xchg
dec
test
pop
loopne
call
add
mov
lods
sarl
insb
adc
pop
push
mov
test
cmp
insb
push
sub
cld
pop
push
rcrl
inc
test
and
sub
das
inc
pop
sbb
nop
inc
cmp
pop
xor
and
xchg
sbb
push
inc
xor
cmp
addr16
callw
jle
sub
or
mov
hlt
lcall
stc
mov
aad
pop
pop
push
test
inc
loope
sbb
pop
hlt
push
mov
pop
adc
repz
lret
pop
xchg
lret
xchg
lods
pop
pop
mul
popf
sbb
pop
sbbl
pop
pop
add
jmp
mov
lock
sbb
push
dec
adc
imul
jmp
cli
sub
movsl
xchg
add
dec
mov
lahf
or
mov
aam
fcoms
enter
xchg
cmp
add
lcall
pop
sub
and
in
sbb
sub
pop
outsl
push
andl
daa
sahf
movsl
clc
xor
inc
xor
inc
bound
pop
pop
jle
add
jmp
mov
pop
and
dec
out
jo
mov
push
xor
jne
add
fstps
es
xorl
adc
xor
and
test
push
pop
test
pop
aam
in
sub
ljmp
movsl
lods
fcoms
jb
jl
filds
pop
pop
add
scas
add
loope
sti
mov
xchg
popa
outsb
push
cmpsl
xor
and
data16
jg
pop
fstps
pop
pop
shl
loop
fs
testb
mov
iret
mov
lret
jge
adc
push
pop
enter
and
cmp
outsb
xor
inc
push
cwtl
out
in
mov
jl
or
in
int
jns
leave
cmpsb
xlat
pop
in
nop
mov
adc
inc
pop
pushf
or
push
shlb
jle
sti
pusha
mov
fmul
jns
movsb
inc
pop
lods
fcomi
shlb
aaa
pop
cltd
inc
les
dec
ljmp
or
aas
cmp
iret
ljmp
les
pop
sarb
sti
add
loopne
adc
dec
cmc
pop
in
sbb
outsb
mov
mov
bsr
mov
cmp
xchg
or
lods
arpl
std
push
fadds
ret
xchg
pop
xor
jmp
xor
mov
sub
mov
and
out
outsb
sub
xchg
and
and
cmp
push
movsl
push
pop
ja
pusha
push
stc
ss
add
hlt
mov
lods
clc
and
enter
cld
dec
bound
loopne
jo
inc
gs
mov
in
ret
adc
jecxz
inc
mov
mov
pop
pop
data16
or
add
pop
fists
push
inc
lds
pop
xlat
notb
popf
mov
jg
push
mov
xchg
jne
ja
movsl
inc
call
out
mov
dec
add
fsubrs
divl
pop
inc
lret
ret
cltd
pop
imul
cmp
adcb
lcall
ret
mov
nop
out
shrb
sahf
mov
outsl
jg
cs
les
mov
and
pop
and
js
jno
inc
cmpsl
fisubrl
push
out
sub
pusha
js
or
add
clc
test
repnz
and
pop
sbbb
and
ficomps
cmpsb
jnp
xchg
sub
nop
jmp
loope
inc
mov
xchg
aas
add
loop
dec
jnp
or
ja
bound
mov
jae
pop
inc
mov
das
inc
or
inc
inc
and
lock
add
dec
dec
xchg
xor
add
mov
inc
in
mov
push
and
sti
cmp
jbe
pop
mov
aam
dec
pop
and
dec
lea
arpl
or
pop
mov
pop
push
pop
aas
std
or
xor
dec
pop
addr16
cmp
pop
insb
fld
rclb
dec
mov
push
push
pop
cmp
jp
mov
loopne
mov
fadds
and
stc
cmp
cmp
das
jg
movsl
nop
cwtl
mov
jne
xor
cwtl
cmp
jbe
aaa
pop
sbb
lcall
adc
adc
imul
sub
insl
pop
out
lret
inc
std
stos
push
hlt
inc
pop
loop
imul
add
pop
pop
test
cmp
xchg
jl
and
icebp
mov
addr16
std
in
loopne
out
dec
dec
pop
add
push
dec
cwtl
mov
jno
popf
movsb
in
call
xor
ds
mov
movl
mov
mov
fdiv
into
enter
je
rorl
inc
jbe
mov
pop
mov
xor
xor
mov
xchg
loopne
push
jmp
or
out
inc
inc
lret
arpl
and
fimuls
adc
lods
or
sbb
aam
loope
xor
pop
sbb
mov
outsb
sbb
sub
inc
ja
pop
sub
jle
cmp
pop
out
push
leave
sbb
or
ss
iret
ret
loop
mov
xchg
mov
subb
mov
mov
pusha
fsubl
outsl
aaa
pop
pop
ss
scas
adc
cmp
mov
repnz
and
cltd
pop
mov
aam
pop
mov
pushf
ffreep
pop
lock
add
or
fimuls
push
cltd
inc
leave
pop
mov
out
mulb
jb
xchg
mov
push
xor
xchg
fstpl
inc
scas
pop
push
test
leave
jbe
mov
ljmp
xchg
cltd
out
xchg
mov
pop
push
xorl
pop
add
push
sarl
aam
sar
cmp
jnp
inc
sub
inc
repz
inc
pop
out
mov
sti
push
adc
pop
testl
push
push
outsb
or
push
pop
lods
test
push
ds
addr16
repnz
mov
ss
mov
mov
xchg
jmp
cmp
repnz
rcrl
mov
lret
jns
enter
adc
push
add
mov
cmc
adc
pop
mov
fdivrp
outsl
dec
enter
pop
sbb
int3
iret
daa
pop
xor
int
fstps
pop
lods
pop
mov
or
ret
pop
jne
cwtl
je
jmp
jmp
pop
icebp
stos
mov
inc
and
arpl
loop
fsubrs
pop
sahf
inc
mov
inc
lea
jne
and
mov
cwtl
jne
xchg
pop
cmp
pop
push
rclb
xlat
pop
add
pop
ds
pop
sub
das
inc
pop
mov
xchg
popa
jo
sub
test
pusha
or
xchg
xchg
stos
pop
sbb
cmp
xchg
xlat
inc
xchg
test
pop
pop
inc
and
mov
loope
fsubl
imul
sti
pop
cmp
mov
dec
jne
xchg
rcrb
jg
add
mov
pop
mov
dec
mov
lods
push
and
fsubrs
push
push
pop
and
int3
or
xchg
pop
clc
hlt
fsubrs
cli
test
pop
and
in
daa
inc
pop
int
bound
cmp
pop
or
push
mov
stos
lock
dec
sub
mov
mov
pop
jno
push
dec
fidivrl
inc
mov
pop
imul
ds
pop
adc
in
push
lret
pop
xchg
les
test
bnd
adc
or
sbb
mov
pop
loope
cltd
jnp
jl
or
push
jecxz
sbb
sbb
xlat
sbbl
fucomp
iret
testb
fs
xchg
in
and
sbb
push
dec
mov
mov
cmp
movsb
xchg
stos
pushf
sub
imul
pop
push
fsts
adc
pop
popf
outsl
xor
dec
and
mov
arpl
fistpll
jecxz
jnp
mov
mov
dec
loopne
fildll
mov
lret
pop
je
insb
cmpsl
push
lret
push
test
cmp
xchg
xchg
fcmovb
test
xchg
push
das
pop
xor
inc
jg
inc
stc
cmp
and
or
sub
mov
pop
add
jne
sbb
ljmp
xlat
xor
hlt
lcall
scas
and
inc
push
mov
sub
shrb
pop
add
lock
sub
pop
xchg
mov
jle
pop
pop
add
loop
xlat
sbb
in
sti
or
shll
pop
add
add
dec
push
xlat
mov
lret
dec
xchg
je
cwtl
data16
add
pop
nop
repz
insl
imul
jnp
pop
inc
mov
pop
adcb
into
mov
ds
rolb
xor
dec
fwait
rcrb
lock
mov
adc
jp
xlat
cli
dec
icebp
adc
xor
imul
sbb
inc
push
test
cmp
xchg
dec
cltd
fdiv
adc
js
pop
sbb
add
iret
fnstsw
push
mov
dec
sbb
jae
sub
inc
mov
and
ja
mov
adc
leave
push
pop
in
scas
xlat
adc
cmp
mov
push
das
ja
out
out
sbb
push
test
or
add
push
or
mov
xor
cmpsb
xchg
pop
push
pop
dec
xlat
push
addr16
xor
xchg
push
in
fdivs
inc
mov
add
pop
lds
leave
nop
adc
sbb
filds
add
std
js
xor
loop
mov
mov
ds
pop
pop
xchg
add
xchg
fimull
cli
pop
mov
mov
push
jbe
inc
out
repz
mov
fs
nop
add
cltd
and
movsl
mov
iret
push
daa
jmp
inc
adc
mov
pop
por
and
rcrl
mov
inc
pop
or
push
or
pop
pop
sub
pop
outsb
mov
adc
sub
mov
push
xchg
cmpsl
pusha
scas
push
push
test
ljmp
adc
pop
or
sahf
inc
mov
int3
ljmp
jmp
xchg
xchg
adc
xchg
les
fistps
xchg
scas
pop
pop
mov
adc
pop
mov
fildll
int
lret
xchg
ret
push
and
daa
nop
cmp
push
sbb
lcall
ret
fs
mov
push
jmp
movsb
sbbb
les
pop
sub
scas
xor
sahf
inc
in
jge
mov
pop
scas
and
scas
push
pop
pop
fsub
cld
sbb
outsl
lcall
ss
addr16
lret
and
push
pop
sti
iret
and
or
scas
cwtl
mov
aad
pop
pop
popf
into
mov
scas
inc
in
pop
xchg
dec
xchg
pop
orl
addr16
pop
stos
enter
lea
dec
pop
ss
sub
aam
adc
leave
test
mov
jg
xchg
xchg
and
add
inc
inc
xor
les
lods
pop
pop
jmp
mov
data16
xor
inc
std
cmpsl
jae
mov
xchg
js
lods
test
pop
jecxz
add
xor
inc
or
adc
rolb
pop
cmpsl
mov
mov
xchg
pop
ss
fidivl
dec
insb
pop
push
pop
lock
sbbl
lret
insl
pop
add
jl
fadds
sbb
test
xor
test
in
adcb
and
in
inc
jnp
mov
mov
or
pop
jge
dec
or
outsl
xchg
vaddps
add
jo
fdecstp
pop
ljmp
in
add
mov
pop
cmp
frstor
cmc
inc
pop
and
fistpl
imul
mov
pop
nop
mov
cmp
jl
pop
stos
mov
xorl
es
cmp
arpl
int
cmp
das
lcall
loopne
lods
and
mov
pop
pop
lods
and
jb
rcrl
nop
push
frstor
cmp
sub
pop
bound
fiadds
inc
pop
ljmp
xor
lock
pop
std
jmp
cmc
loope
jne
into
popa
dec
out
push
ficomps
adc
jmp
xor
pusha
lcall
lret
and
sub
xor
mov
into
sbb
fwait
pop
push
les
lods
ja
pop
scas
sub
subl
pop
in
hlt
or
les
cmp
dec
or
mov
lret
lods
xchg
test
in
jmp
jmp
pop
mov
shl
pushf
xor
pop
movsb
and
sahf
fprem1
es
pop
loop
test
jge
inc
push
cld
push
ficompl
mov
dec
xchg
push
jo
jl
push
call
adc
inc
cli
loope
sti
xchg
sbb
pop
les
data16
pop
jmp
and
mov
iret
pop
dec
jo
jno
pushf
inc
cmp
sbb
mov
lds
daa
jle
or
adc
imul
sub
addr16
mov
xorl
repnz
mov
sub
push
sbb
movsl
in
mov
inc
jns
mov
sub
jecxz
shll
scas
outsl
jb
or
mov
xchg
sbbl
clc
rolb
pop
lds
in
std
lods
in
inc
jmp
adc
mov
iret
mov
pop
jb
negb
ffreep
mov
pop
mov
pushf
xor
in
dec
jo
mov
dec
pop
ds
popa
rcll
mov
add
push
outsl
sbb
rolb
sub
pop
stos
repz
add
xor
push
jo
sahf
adc
mov
pop
xor
push
xor
jmp
fmul
cmp
popf
or
outsl
mov
test
ljmp
into
jle
lds
fnsave
adc
fdivrs
or
dec
pop
jb
jnp
cmp
test
dec
jno
pop
sub
wbinvd
cmp
addl
stc
jno
cltd
or
aaa
xchg
imul
cmp
sarl
cmp
pushf
les
push
fdivrl
ud1
inc
xchg
scas
popf
outsb
daa
adc
dec
pop
leave
cmc
popa
sbb
add
lret
pop
jl
scas
pushf
ficomps
mov
mov
fcomps
shr
daa
out
pop
inc
push
lods
das
imul
cltd
ret
das
pop
xchg
in
dec
push
pop
mov
push
or
rclb
fisubl
push
cld
sahf
xchg
inc
sbb
fwait
inc
fisttpll
pop
jg
adc
dec
sbb
pop
lcall
or
cmc
xchg
pop
push
test
ds
ficomps
and
jns
pop
roll
bound
in
clc
fstpt
jo
mov
xchg
ss
pop
add
ja
mov
cld
pop
out
xchg
xchg
cmp
cli
jp
cmp
pop
pop
add
pop
enter
lea
cmpsb
mov
int
cmp
test
adc
cmc
cwtl
leave
pop
insl
xlat
xchg
pop
ss
pop
jg
sbb
and
add
inc
sub
ljmp
movsl
cli
sub
and
stos
xor
pop
notl
aad
pop
std
scas
lea
mov
pop
popf
mov
cmp
pop
jns
ret
mov
dec
pop
jno
rolb
jbe
mov
cmp
pop
inc
aas
jno
push
jg
sub
and
sub
xchg
and
cwtl
out
mov
pop
xor
mov
fistpl
in
mov
add
pop
or
call
pop
out
mov
jnp
push
push
or
xchg
pop
loope
adc
xlat
mov
pop
mov
dec
pop
testb
push
pop
in
push
and
push
popa
int3
pop
and
mov
dec
cmp
rcrb
mov
arpl
mov
mov
push
pop
pop
mov
inc
cli
test
cmp
pop
pop
imul
sub
or
cmc
frstor
icebp
pop
jge
arpl
pop
mov
fmul
enter
pop
or
pxor
mov
jmp
cmp
pop
loop
push
inc
add
cmp
fcompl
mov
push
dec
sbb
lea
mov
mov
pop
das
cmp
aad
xor
cmc
pop
lea
dec
jecxz
ljmp
jne
fdivs
cmpsb
fistps
stos
cmpsl
lahf
jmp
call
sub
xchg
pop
stc
mov
hlt
inc
pop
popa
push
imul
pop
xchg
dec
pop
add
inc
int
lock
pop
cmc
push
popf
fcomps
and
movsl
mov
lret
sub
leave
pop
lds
cmp
inc
mov
xor
xor
push
pop
movsb
or
sbb
mov
ficomps
scas
movsl
cmovl
mov
std
pusha
pop
push
add
in
mov
jl
stos
adc
je
cwtl
xchg
fwait
mov
pop
pop
xor
or
xchg
and
pop
imull
inc
mov
adc
pop
lahf
xchg
sbb
mov
fcomps
jbe
jle
mov
pop
sbb
sub
bound
ret
sub
jmp
clc
dec
hlt
cmp
xor
jle
fldl2e
daa
adc
push
in
add
adc
mov
scas
pop
out
insb
sar
push
pop
push
sbb
xor
pop
xor
fcompl
jge
icebp
adc
push
pop
shrl
fs
jae
test
call
inc
and
data16
pop
push
xlat
jmp
sub
jb
mov
ret
pushf
pop
and
fsubrp
std
pop
sti
push
cmpsl
mov
arpl
popa
dec
mov
pop
push
push
push
mov
pop
jmp
inc
pop
pop
mov
call
repz
ja
dec
data16
cltd
push
outsb
sub
in
iret
pushf
ret
pop
mov
jle
adc
pop
adc
sti
cmp
scas
add
mov
pop
lret
or
mov
fsubs
dec
jae
aas
adc
pop
dec
or
jl
jge
jp
push
pusha
pop
movsb
sbb
test
sarl
int3
mov
cmp
xor
pop
xchg
inc
mov
mov
aaa
mov
pop
mov
shrl
mov
pop
xchg
xor
or
les
sahf
pop
jns
movsl
pop
fildl
imul
cmc
adc
jmp
outsb
ret
mov
dec
stos
pushf
dec
dec
test
fcom
lret
dec
jl
cmpsb
push
jbe
inc
push
pop
inc
add
repz
pushf
fcmovnu
jmp
or
imul
and
inc
sahf
dec
xchg
adc
dec
orl
and
outsb
dec
lods
pop
push
xchg
cmp
pop
adc
sbbb
daa
lcall
data16
pop
loope
bound
mov
mov
mov
jo
mov
movsb
push
in
into
inc
mov
addr16
jb
mov
jp
or
enter
push
out
pop
pop
cld
mov
dec
pop
gs
cmp
fcoms
jg
ljmp
inc
adc
add
mov
mov
arpl
mov
pop
out
fnsave
inc
dec
stos
inc
ss
sbb
pop
cmpsb
std
mov
or
xchg
icebp
call
cltd
pushf
cmp
fadds
sbb
push
jbe
mov
mov
adc
push
mov
ljmp
jno
inc
repz
pop
pop
out
dec
sub
call
mov
aas
pop
xor
sub
test
repnz
xchg
push
andb
orb
and
pop
ljmp
aam
inc
xchg
pop
loope
dec
add
jecxz
sbbb
mov
ss
fnstsw
xchg
divb
lds
jae
daa
push
in
scas
movsl
pop
sbb
add
dec
sti
cld
mov
imul
mov
rcrb
mov
int3
xor
jne
popf
push
in
pop
cmp
out
and
dec
js
jmp
aam
mov
arpl
icebp
xchg
lods
pop
mov
cmp
pop
aas
stc
mov
lret
and
pop
mov
js
push
xchg
insb
or
and
push
pop
loop
mov
test
cmp
xlat
adcb
or
or
shl
stc
cwtl
ficoms
cwtl
das
jnp
test
jne
sbb
inc
mov
sub
jmp
or
lcall
and
pop
xlat
das
sbb
xchg
jl
sti
pop
add
imul
ret
pop
sbbl
cmc
in
pop
mov
in
xor
loope
sub
ljmp
out
testl
shlb
mov
mov
clc
mov
mov
pop
outsb
loop
push
ud2
aad
adc
mov
push
pop
dec
dec
idivb
mov
cmp
dec
pop
cltd
adc
cli
pop
xchg
pop
sbb
jp
pop
mov
out
popa
pop
mov
push
into
sbb
dec
push
pop
rcll
add
sahf
mov
lds
jae
xchg
sti
fnstcw
push
cmpl
push
addr16
mov
clc
pop
ljmp
push
mov
sbb
adc
roll
jnp
je
mov
pop
xlat
fsubr
stos
cmc
pop
push
pop
inc
je
xor
bound
mov
cmpsl
imul
pop
orb
push
outsb
pop
aaa
dec
movl
push
pop
lock
jns
sub
int3
cmp
shll
add
out
in
fidivrs
cmpsl
pop
sti
aad
aas
mov
pop
popa
rol
mov
lods
push
push
pop
push
xchg
sbb
inc
loopne
jbe
xlat
leave
pop
repz
inc
cmp
ficomps
jmp
or
pop
iret
pop
xlat
sbb
repnz
stos
cmc
push
push
scas
enter
xchg
or
mov
rcr
fdivs
pop
inc
test
pop
sbb
pop
lock
cmpsb
inc
pop
dec
scas
adc
mov
pop
or
shrb
pop
es
pusha
lahf
fsubs
test
loopne
xor
push
pop
in
insl
and
pop
ljmp
enter
mov
cmp
jle
push
rcll
clc
jbe
popa
jns
xchg
pop
pop
or
sbb
pop
adc
cmp
xchg
pushf
lret
sbb
enter
or
push
xchg
fdivrl
lods
mov
ss
mov
stos
xchg
insb
ret
xor
in
je
cmp
pop
xor
sbb
pop
rolb
fs
cmp
dec
adc
and
into
cwtl
sbb
incb
pop
dec
shr
pop
mov
les
pop
xor
sbb
lret
cmp
xchg
jg
and
xchg
adc
out
lahf
adc
aam
pop
rolb
or
cld
pop
scas
into
xchg
cmpsl
cmp
pop
test
pop
cmp
jp
pop
fs
shll
sub
repnz
clc
pop
mov
aam
cmp
leave
or
add
pushf
mov
adc
inc
clc
loopne
xor
in
fwait
ret
sbb
andb
add
cmp
stos
adc
idivl
rcrl
xlat
js
lock
std
mov
out
fistl
xor
dec
pop
add
xor
pop
outsl
lret
mov
sbb
fnstcw
sub
push
adcl
pop
push
push
lds
loope
aad
xchg
mov
leave
sub
xchg
inc
das
je
jecxz
fmuls
orl
sbb
jb
test
repnz
xor
pop
add
mov
pop
or
push
fdivrs
shlb
or
jns
loope
daa
mov
xlat
data16
ret
cwtl
ret
stos
fldl
rorl
jnp
mov
fidivl
sbb
pop
mov
scas
add
dec
mov
es
xchg
inc
push
icebp
mov
pop
imul
pop
mov
mov
xor
cmp
xor
pop
sbb
mov
das
and
aas
lret
mov
xchg
arpl
in
cwtl
outsb
stc
mov
sub
push
enter
clc
icebp
roll
sbb
popa
add
pop
jne
sti
pop
pop
ljmp
pop
inc
pushf
push
mov
pop
mov
mov
pop
mov
push
jnp
push
jmp
rolb
pop
stc
scas
sub
xchg
mov
pop
das
mov
mul
pop
jne
xchg
jp
movsl
sub
sbbl
rcrl
jo
shll
call
loopne
movsl
push
xchg
inc
test
ret
pushf
test
mov
jne
pop
add
insb
inc
ret
adc
aas
pop
push
int
cmp
loope
int3
je
enter
das
cmpsb
lret
xchg
xchg
test
pop
cwtl
pop
add
popf
inc
imul
and
loope
pop
xlat
fnstcw
data16
jne
in
test
mov
cmpsl
inc
imul
dec
push
int3
jl
jle
adc
subl
adc
or
out
or
and
jbe
push
stc
dec
fmuls
xchg
adc
sbb
fbld
push
jle
pop
push
pop
sbb
aam
xorl
mov
ja
sub
sbb
inc
jecxz
push
js
not
adc
int3
add
pop
arpl
push
mov
js
xor
out
ljmp
xor
scas
mov
rcrb
leave
fcompl
mov
subb
pop
test
addr16
test
out
rcrb
inc
inc
adc
imul
sarb
mov
gs
sub
outsb
xor
pop
lret
filds
jmp
add
mov
out
pop
ret
jo
in
aaa
mov
cmp
mov
pop
mov
push
dec
repz
fsubs
mov
jle
leave
xchg
pop
jbe
mov
jne
cmp
sbb
sub
jl
sbb
mov
inc
inc
pop
adc
cwtl
sbb
call
pop
rcll
xor
mov
mov
int
pop
jns,pt
sub
jecxz
bsf
movsb
ficomps
dec
jo
jmp
or
pop
mov
lcall
dec
ds
dec
pop
movsl
inc
in
cmp
cld
inc
mov
xor
adc
shlb
pop
pop
or
cmp
mov
mov
stos
mov
add
sub
pop
mov
adc
cmc
and
outsb
dec
xorb
jmp
lcall
mov
pop
sbb
and
daa
or
cmp
and
lods
add
ja
push
or
dec
fs
pop
shr
jmp
jo
fcomip
data16
dec
mov
dec
dec
pop
adc
mov
sbb
inc
and
test
mov
fadds
sbb
ss
sahf
mov
and
pop
jo
xchg
lea
stos
jns
clc
shll
call
mov
leave
jbe
stos
jmp
cmp
pop
xchg
pop
pop
ret
icebp
add
mov
or
lea
mov
retw
mov
aam
lcall
xchg
iret
data16
js
and
filds
mov
pop
fwait
push
adc
lods
dec
and
push
in
mov
push
adc
lock
inc
rcrl
mov
or
xchg
pop
dec
sbb
sub
pop
pusha
add
or
mov
mov
xor
add
pop
push
sbb
cmp
or
jno
pop
mov
push
out
sbb
sub
xchg
xchg
movb
pop
cmp
and
dec
cs
repnz
test
pop
xorb
mov
add
rcrl
cmc
pop
jnp
cmovae
cmp
pop
cmpsl
push
or
pop
out
fsubrs
pop
jns
divb
movsl
jae
je
push
in
ficompl
and
fsubrs
xor
rolb
mov
mov
xchg
inc
mov
add
push
test
jg
xbegin
out
dec
push
dec
add
lcall
pop
xchg
mov
inc
jo
push
sti
xchg
aas
imull
lods
arpl
mov
xchg
xor
inc
rorl
mov
push
cmp
in
dec
push
mov
sbb
lcall
stc
rol
pop
cltd
orb
fs
and
out
nop
pop
loope
dec
jne
ljmp
pop
push
dec
pop
sbb
sub
xor
pop
jo
cmpl
mov
iret
push
sub
xchg
inc
pop
hlt
pop
inc
push
sahf
imul
lret
pop
jg
pop
inc
ds
adc
pop
xchg
cmp
dec
int3
mov
mov
mov
sbb
and
out
cwtl
push
negl
popf
into
adc
nop
pop
xor
jnp
int3
sarl
outsl
push
and
jns
xor
push
jbe
pop
daa
dec
ljmp
push
adc
sub
and
daa
je
or
mov
push
and
test
fprem1
dec
int3
jnp
adc
out
call
xchg
bound
jmp
pop
jns
rcrb
sbb
sbb
xor
insl
sub
inc
insb
ja
into
ret
clc
pop
and
jge
fstpt
test
es
cmp
push
xor
inc
pop
inc
push
jg
sub
sbb
iret
pop
sysexit
adc
xor
xchg
jnp
fmuls
in
mov
icebp
pop
mov
pop
sbb
or
mov
xchg
inc
ja
lods
add
cwtl
inc
mov
jmp
xor
jb
jno
pop
fistpll
popa
nop
movsl
cmp
cli
fdivp
aam
sti
repz
sub
popa
scas
pop
lds
xor
cltd
inc
pop
cmp
gs
push
out
pop
jbe
cmp
repz
xor
fs
dec
sbb
mov
lods
adc
push
fcmovnbe
jmp
sub
cmp
pop
mov
fnstcw
or
pop
mov
cmpsb
or
pop
pop
jecxz
rcrb
iret
fstpl
or
cwtl
dec
rclb
ja
shll
adc
adc
cmp
pop
cmpsl
fcmovnu
mov
mov
test
pop
jl
out
ss
cmp
les
inc
int
dec
outsl
clc
jns
aas
pop
push
add
jmp
pop
mov
mov
cmc
mov
or
out
lret
mov
pop
pop
fdivs
or
fisubs
pop
imul
push
xchg
dec
mov
jo
xchg
ret
cmpxchg
je
or
jmp
xor
cmp
aas
mov
insl
sar
pop
gs
cmp
mov
fs
cmp
in
imul
pop
repz
call
adc
sahf
mov
lock
sub
std
dec
pop
pop
sbb
sub
jo
mov
dec
aad
popa
pop
add
adc
cld
adc
pop
push
or
notl
jg
lods
enter
pop
lea
sub
xchg
or
mov
mov
movsb
hlt
jg
jne
and
out
cmp
and
cmp
jecxz
and
testl
pop
push
addr16
lret
js
inc
xchg
pop
shlb
test
pop
into
push
ret
xor
pop
push
push
shrb
pop
mov
popa
add
fsubl
mov
rcrb
insl
pop
inc
fdivs
add
fidivl
mov
pop
incl
insl
mov
pop
aas
mov
xor
xchg
jnp
fcomps
sbb
pop
pop
jmp
push
cmpb
cli
mov
jnp
xchg
nop
or
pop
mov
xor
fdivs
cmp
xor
negb
outsl
pop
and
in
scas
sub
mov
xchg
and
dec
cmp
adc
mov
xlat
sub
mov
ja
push
and
ss
xlat
xchg
ret
mov
dec
int
daa
es
jge
xor
add
pop
in
pop
mov
push
test
sbb
add
mov
pop
and
sub
roll
icebp
je
jmp
pop
in
fbstp
push
aad
push
sbb
or
inc
add
stc
mov
das
cmp
mov
jne
or
out
in
ret
dec
pop
inc
sub
mov
pop
cmp
sbb
jecxz
outsb
data16
clc
mov
cmp
mov
sub
pop
decb
pop
dec
in
sbb
roll
inc
push
int3
or
cmpsb
test
cwtl
movsb
in
jne
fdivs
sbb
mov
and
xor
mov
cmp
call
xor
dec
lds
push
pop
sbb
aas
adc
pop
loope
cmc
jl
out
adc
fstpl
xchg
mov
jecxz
lahf
leave
pop
aam
xchg
cmp
dec
jb
cmp
dec
mov
fwait
adc
mov
pop
mov
aam
sbb
mov
inc
sbbl
pop
xor
and
clc
pop
mov
aaa
fists
pop
mov
mov
add
mov
and
inc
iret
mov
ja
push
or
pushf
xor
cwtl
fldt
pop
mov
fs
and
pop
add
adc
shll
pop
mov
in
pusha
cwtl
pop
addb
sbb
and
pop
ljmp
sbb
jb
pop
test
ds
lret
lahf
mov
cmp
pop
arpl
dec
pop
cmp
es
lods
push
inc
inc
enter
outsl
ss
xlat
pop
in
jmp
cmp
call
adc
push
cltd
scas
sbb
mov
in
mov
jno
jb
out
stos
push
push
dec
jo
jmp
lods
cmp
pop
rclb
sar
out
mov
inc
inc
fwait
pop
imul
fcomps
out
lcall
adc
mov
or
ds
pop
rorb
cmpsb
mov
pusha
nop
fsubs
test
sub
fldt
in
into
pop
add
sbb
mov
push
sub
inc
mov
cmpsb
pop
out
fstps
mov
or
int
xor
fcom
jmp
cmp
mov
outsb
iret
adc
pop
lret
xchg
pushf
adc
sahf
mov
sbb
dec
jno
daa
lret
push
lods
xchg
push
sbb
sar
movsl
pop
ret
fisttpl
xchg
jmp
inc
lcall
shlb
sbb
pusha
sahf
push
sbb
imul
and
roll
xchg
es
sbb
stos
jle
cwtl
jb
ss
jno
mov
sub
nop
xchg
pop
mov
push
bound
repz
push
pop
aad
add
into
dec
movb
aam
xchg
cld
sahf
pop
mov
int
test
pop
cmpsb
repnz
pop
rcll
cmp
insl
lea
lods
xchg
pop
cld
jne
add
or
in
dec
pop
leave
lods
mov
pop
jg
push
frstor
scas
sahf
adc
mov
lret
aaa
pop
lods
loope
out
add
cmp
pop
stos
lea
imull
lock
or
out
std
shr
adc
xchg
lods
inc
sbb
mov
mov
outsl
mov
pop
shrb
dec
enter
shrb
pop
js
das
jno
mov
pop
out
add
sub
jl
insl
pop
add
add
sbbl
movsl
xor
ds
test
repnz
pop
jle
jae
ss
dec
and
mov
notl
xor
pop
loope
xchg
lret
shll
cmp
push
pop
cmpsl
fstpl
mov
jae
pop
xchg
sbb
cmp
dec
pop
imull
xor
cld
xchg
push
and
mov
gs
lock
push
clc
cmp
roll
mov
dec
pop
mov
xchg
icebp
dec
xchg
xchg
dec
loope
pop
sbb
ret
xor
test
fadd
push
popa
ss
aas
cmc
stos
dec
loopne
movsl
push
add
popa
sbb
mov
ljmp
clc
and
enter
xchg
inc
jle
pavgb
repz
mov
push
sub
add
stc
hlt
out
sub
movsl
pop
das
ja
stos
nop
push
inc
sub
pop
inc
loopne
mov
fisttps
add
sbb
mov
add
test
jp
pop
call
sub
test
dec
jne
lcall
test
mov
mov
pop
sbbl
xor
mov
push
pop
and
xor
jge
mov
in
and
bound
test
mov
add
divb
pop
fnstcw
adc
and
pop
enter
out
push
les
dec
jo
das
ja
xor
lahf
jl
pop
test
sub
xchg
aad
dec
pop
lods
pop
dec
out
cmp
inc
jns
mov
test
jp
sbb
dec
and
outsb
call
pop
lretw
lds
pop
mov
or
pop
hlt
mov
testb
clc
pop
add
pop
push
loope
mov
test
outsl
mov
inc
sub
push
je
inc
mov
sbb
or
call
or
addr16
ret
inc
and
cmp
adc
mov
pop
outsl
subb
and
cmp
out
pop
fistpll
enter
push
adc
fdivp
push
mov
leave
fcoms
pop
push
dec
mov
cmp
jb
pushf
mov
jbe
pop
jl
repz
in
icebp
fs
xchg
cltd
pop
inc
and
mov
iret
push
dec
fwait
mov
lahf
aas
jl
mov
push
popa
sbb
jmp
pop
rol
cmp
fnstenv
push
mov
and
sbb
cmpl
jecxz
aaa
pop
pop
adc
push
das
or
push
lret
push
jnp
adc
mov
mov
mov
ds
repz
rcr
pop
cs
inc
jae
mull
mov
shll
pop
cwtl
clc
mov
negb
or
xchg
rcll
nop
inc
and
sbbb
add
ja
enter
jae
dec
sub
data16
xchg
or
push
jns
pushf
and
mov
cmp
pop
daa
sub
sub
lods
fstps
cwtl
push
ss
lcall
repz
aam
push
pop
insb
in
mov
push
lahf
cmp
repnz
push
xorb
mov
cmc
mov
sbb
fcmove
xor
or
xor
pop
sbb
fsubs
in
dec
jbe
dec
and
aaa
clc
pop
dec
add
pop
bound
push
out
js
aad
add
loop
fistps
lods
in
fcomps
paddb
scas
test
test
pop
jp
into
sub
pop
enter
lret
pop
imul
jae
in
pop
aam
mov
leave
sub
fstl
jg
mov
adc
inc
xchg
je
incb
mov
sbb
push
pop
xchg
cmp
dec
pop
pop
lcall
pop
pop
add
push
xor
test
rcl
ret
push
outsl
xchg
jne
pop
jecxz
mov
bound
negb
stc
pop
jno
mov
fcmovbe
and
xor
or
inc
outsl
xchg
push
aam
or
mov
test
repnz
mov
pop
std
inc
lods
pop
xorb
push
or
sbb
pop
jnp
fs
or
dec
mov
loope
add
xlat
jns
imul
frstor
pop
enter
movsl
loop
jp
mov
cwtl
sbb
jnp
std
dec
mov
rorl
xchg
loop
out
mov
addr16
or
add
nop
push
xchg
pop
xor
cmp
loope
xchg
mov
test
es
inc
sbb
pop
arpl
mov
pop
jbe
cwtl
fwait
mov
hlt
icebp
nop
pop
loopne
jg
add
mov
inc
mov
adc
shrl
push
dec
rcrb
mov
pop
cmp
enter
sbb
sbb
pop
std
inc
xlat
pop
pop
mov
andb
adc
mov
inc
nop
xchg
pop
sub
jne
dec
out
jae
mov
dec
mov
adc
xor
ss
mov
pop
add
call
cld
jbe
push
xchg
push
hlt
dec
pop
mov
sti
mov
popa
lods
pop
pop
cld
pop
popl
dec
es
in
enter
xor
pop
cmp
int3
mov
push
lods
xchg
lret
xchg
xchg
add
cwtl
cmpsb
dec
das
popf
arpl
jbe
test
fidivs
in
sbb
sub
test
sbb
arpl
popa
add
push
imul
dec
mov
sub
not
jl
popf
imul
out
push
mov
dec
inc
jbe
mov
pop
ss
and
pop
jg
push
movsl
xor
pop
adc
adc
adc
rcrl
cmpsl
movsl
lds
add
or
hlt
orl
das
cmp
clc
icebp
pop
jb
jge
sbb
push
add
jg
adc
sub
movsb
mov
sahf
sub
out
xchg
lods
push
or
and
les
cld
mov
or
lret
pop
test
pop
loope
inc
addr16
nop
data16
out
sbb
pop
mov
in
mov
push
outsl
adc
xor
adc
fistpll
dec
add
pop
jno
pop
insl
push
mov
sti
and
cmpsl
mov
daa
pop
popa
adc
pop
call
push
enter
xchg
lea
xor
pop
dec
js
xor
call
fs
call
dec
jle
pop
cmc
pusha
popa
iret
push
test
pop
adc
push
movsb
push
jl
xor
cwtl
cmp
insl
and
mov
inc
add
jle
pop
js
movsb
int
popa
das
cmpsb
nop
mov
fsub
out
cmc
adc
rcrb
or
rorl
mov
xchg
test
stc
push
ds
test
mov
pop
call
ljmp
jo
js
cli
jl
std
cmp
sub
lcall
les
xchg
push
or
sbb
and
test
pop
cmc
jb
mov
sahf
lret
and
sub
pop
iret
sbb
push
daa
mov
xchg
push
and
loope
cltd
pop
mov
ret
fdivrl
je
pop
mov
jmp
cmp
jge
lahf
mov
cmp
and
pop
mov
inc
dec
testb
pop
dec
pusha
or
pop
rolb
aaa
pop
sbb
and
ss
adc
mov
andb
pop
loop
push
bound
pop
inc
cmpsb
pop
test
jo
dec
adc
into
lahf
add
pop
cld
mov
adc
cmp
sarb
sub
pop
pop
sbb
lahf
enter
pop
lea
in
inc
pop
mov
cmp
pop
leave
cmp
dec
pop
pop
jg
movsb
test
sbb
inc
jnp
nop
addr16
fsubrs
mov
jmp
enter
xor
xchg
imull
js
adc
std
fists
xchg
sbb
sti
pop
xchg
or
rcrb
mov
fnstcw
push
push
arpl
push
dec
jno
pushf
inc
pop
cs
inc
imul
sbbb
ljmp
adc
mov
xchg
aaa
cltd
rcrb
cmp
sub
enter
jns
repnz
xlat
or
pop
inc
out
subb
and
pop
cld
fdivrs
jnp
mov
pop
or
xchg
pop
loope
adc
pop
or
ljmp
sbb
loop
test
jno
mov
xorl
fcomps
sbb
mov
out
outsb
pop
repz
jne
sbb
pop
int
hlt
xchg
mov
mov
pop
pop
imul
mov
pop
dec
fnstenv
hlt
repnz
pop
je
pop
mov
and
pop
nop
fisttpl
push
arpl
out
xchg
data16
lcall
push
mov
or
repz
pop
pop
add
add
pop
mov
insb
lret
stc
shll
push
shll
pop
aam
jmp
inc
jl
mov
push
ds
xchg
inc
inc
test
stc
and
jg
aad
popf
das
cmc
popa
pop
cmp
push
xor
out
ss
inc
dec
mov
pop
add
insb
int3
xor
lods
pop
dec
lcall
pop
sti
call
inc
outsl
pop
or
dec
sbb
push
std
div
pop
repz
push
push
mov
pop
pop
jnp
dec
inc
sub
ja
push
fdivl
fcmovu
int3
jmp
pop
lret
mov
mov
pop
lods
xchg
mov
mov
popf
ljmp
xor
add
fldcw
or
sub
pop
sbb
mov
dec
pop
negb
inc
jl
jbe
pop
jne
mov
sub
lock
xchg
loope
ja
hlt
sbb
mov
lods
pop
push
rorb
dec
dec
sub
adc
pop
or
adc
mov
adc
outsl
ss
lock
inc
sbb
add
sbbl
xchg
fnstenv
jl
and
mov
jge
movsb
pop
movhps
ret
stos
adc
mov
add
mov
pop
mov
hlt
or
and
mov
xor
scas
xchg
adc
fcompl
aad
icebp
xchg
movsl
pusha
pop
pop
hlt
insl
adc
dec
push
test
nop
or
in
xor
add
add
call
jb
sub
daa
fistpll
jg
aad
aam
fdivrp
mov
push
xchg
mov
cwtl
pop
lret
ja
mov
mov
mov
test
popf
pop
insb
loop
jbe
aam
xchg
repz
pop
sarl
inc
cltd
jae
push
test
hlt
in
andl
pop
jae
pusha
mov
jl
stos
mov
sbb
mov
inc
pop
mov
inc
aam
mov
jbe
jbe
push
adc
inc
mov
mov
pushw
lods
sahf
arpl
push
push
push
mov
hlt
mov
lods
mov
xor
mov
push
movsb
push
fs
hlt
cmp
and
sbb
push
ss
mov
lcall
addr16
pop
push
xor
pop
adc
push
es
pop
ja
add
pop
cmc
hlt
jecxz
scas
pop
pop
fs
adc
mov
sub
xchg
les
xchg
loope
mov
adc
nop
push
sbb
fsubs
imul
xor
sub
pop
test
adc
inc
push
mov
repnz
fwait
cmp
add
rcll
loopne
and
push
jp
add
mov
inc
pop
sbb
shlb
and
call
add
xchg
inc
scas
sarb
pop
rclb
sahf
in
jns
dec
lods
stos
push
pusha
jno
mov
inc
div
sbb
pusha
inc
in
xchg
adc
addr16
pushf
test
fwait
add
sub
addr16
mov
push
add
dec
xchg
sbb
shrl
arpl
test
push
sti
or
add
adc
and
aaa
and
dec
sub
pop
call
loope
push
nop
jle
adc
js
fcoml
pop
shll
add
xor
cltd
testl
cwtl
cmp
shl
mov
fstl
mov
mov
push
aam
push
lods
nop
jmp
cs
cltd
imul
iret
mov
addr16
dec
rorb
pop
in
add
paddusb
push
jecxz
scas
pop
shlb
mov
les
lcall
in
push
cmp
clc
push
jne
cli
and
in
sbb
imul
pop
ret
adc
outsb
pop
fsubr
loopne
mov
dec
jae
pop
inc
clc
sahf
pop
and
in
pop
mov
add
testl
lds
repz
fisttpll
in
mov
insb
jns
dec
scas
pop
mov
sub
adc
jl
inc
mov
sbb
push
aas
xchg
xor
test
sub
bound
ret
push
jl
in
pop
aam
mov
shr
daa
sub
loop
iret
in
shlb
mov
jns
pop
fbstp
shl
xor
cmpsl
movsb
sbb
ret
and
stos
fists
jnp
pop
int
jge
jmp
stc
inc
mov
mov
loopne
xchg
pop
nop
sbb
mov
addr16
popf
add
sbb
lods
pop
imull
jno
pushf
add
test
jle
sbb
call
dec
sub
mov
inc
ja
inc
or
fidivrs
jbe
fists
lcall
das
pop
pop
xadd
std
mov
fsubrs
xchg
fcoml
fmuls
dec
pop
js
gs
dec
pushf
push
movsb
js
out
mov
loopne
ds
mov
add
or
in
lds
mov
shll
loope
pop
rolb
add
pop
jb
es
stos
or
pop
enter
push
or
and
popa
fs
mov
add
sbb
scas
inc
adc
test
jp
mov
pushf
mov
xchg
repnz
lods
mov
call
mov
mov
pop
test
test
out
mov
addr16
in
pop
or
leave
lea
sbb
cmp
cli
andl
adc
clc
mulb
call
or
js
mov
adc
pushf
lods
pop
imul
cwtl
inc
das
addr16
imul
xchg
aam
loopne
movsb
add
pop
mov
inc
xor
sbb
or
arpl
dec
push
rcrb
insb
out
sarl
push
jo
je
sbb
popa
movsl
andb
pop
cltd
lods
pushf
xor
repz
orb
insb
dec
sub
and
xor
pop
ljmp
enter
aam
stos
sbbb
mov
cld
xlat
fsubrs
sbb
in
pop
mov
xchg
out
xchg
in
sahf
push
jb
fdivs
enter
or
push
repnz
xor
or
movl
insb
push
and
sarb
lods
pop
pusha
inc
shrl
orb
push
adc
fsub
cwtl
shlb
jge
cli
inc
pop
rcrb
push
shrb
push
test
sbb
int
jecxz
sub
jns
cld
subb
xor
loopne
sub
push
adc
mov
jae
mov
mov
lcall
mov
jo
sbb
ficomps
adc
jl
mov
and
js
adc
scas
in
aad
push
xchg
cmp
push
js
or
negl
clc
imul
add
stc
push
mov
push
mov
cltd
movsb
pop
inc
jg
test
popa
mov
pushf
cs
aad
in
lea
or
pop
aad
fs
push
jle
adc
push
pop
mov
mov
cmc
sbb
sub
lock
sbb
std
sub
mov
inc
addr16
sti
add
xor
or
sarb
incb
sub
popa
push
sub
add
pop
movsb
in
daa
push
or
add
sbb
mov
rcrl
lret
xchg
mov
addr16
sbb
imul
sarl
in
pop
sahf
movsb
jg
pusha
insl
lods
orl
hlt
xchg
add
rcrl
jecxz
fiaddl
mov
pop
inc
sbb
ficoml
test
pop
rcrb
movb
iret
leave
test
adc
mov
jmp
mov
aas
adc
mov
cs
pop
fidivrs
lods
mov
ret
inc
fdivrl
pop
dec
jl
js
mov
es
and
stc
xor
loop
fwait
xchg
fildl
jl
movsb
cmp
lea
lock
dec
xor
mov
fsubrl
les
xor
and
stos
movsl
cmp
loopne
inc
mov
mov
xchg
sbb
xlat
pop
mov
mov
lods
mov
cld
arpl
mov
jne
rolb
jp
out
and
and
into
call
sub
add
repnz
adc
xchg
adc
and
shlb
adc
ds
or
lock
loope
fldenv
cmp
fisttpll
in
lods
jns
outsb
loope
jle
cmp
and
dec
push
adc
push
jne
popa
mov
pop
les
hlt
flds
xchg
mov
sbb
mov
loopne
cmp
cmc
push
test
jmp
mov
cmp
and
sbb
js
fimuls
imul
fs
adc
inc
fadds
fs
adc
jge
sub
je
fistpl
and
jl
aam
pop
mov
js
test
cmp
push
cmp
daa
in
push
aaa
js
rclb
sub
mov
jle
icebp
jecxz
cmp
or
negb
cltd
dec
xor
sbb
loopne
scas
sub
add
push
sbb
inc
inc
sub
mov
idiv
push
shlb
test
andl
scas
sbb
sbb
mov
pop
out
inc
pusha
jnp
test
loope
insl
scas
pusha
enter
xchg
pop
icebp
xor
shrb
data16
insl
sbb
sub
fbstp
xchg
icebp
pop
pop
mov
punpckhdq
xchg
or
sub
fistpll
xor
ret
mov
pop
add
xchg
ret
enter
jle
mov
loope
inc
mov
inc
jmp
addb
sbb
jae
mov
or
adc
mov
in
adc
mov
loopne
rcrl
and
pusha
rclb
popf
add
lret
out
mov
outsb
notb
pop
jmp
sub
adc
sub
push
rol
or
jp
jg
mov
pop
dec
inc
std
sbb
push
inc
mov
push
sub
sub
inc
cmp
repnz
xchg
aam
movsl
jbe
faddl
bound
xor
and
sbb
cltd
inc
or
cld
xchg
pop
sbb
call
xlat
vandnps
xchg
insl
pop
xor
loop
cli
sarb
sbb
mov
call
dec
push
sbb
test
xchg
inc
fildll
jbe
loop
and
jp
ret
pop
cli
int
aad
cmpsb
rolb
jge
js
lds
insl
add
fmull
cli
mov
clc
sbb
inc
rcll
push
cmp
fdivl
dec
aad
inc
push
stc
scas
aaa
jle
pop
xchg
add
icebp
clc
and
sub
pushw
call
mov
test
aad
cmp
scas
roll
ret
inc
das
rolb
int
arpl
pop
ljmp
stos
sub
push
jle
sarl
jle
cs
out
xchg
dec
mov
arpl
out
inc
mov
dec
mov
push
cmpsb
adc
push
xlat
jmp
mov
pop
cmp
xchg
dec
push
imul
icebp
dec
pop
push
insb
mov
push
iret
lret
bound
cmp
pushf
jmp
test
clc
adc
call
xchg
and
mov
das
pushf
push
fimuls
bound
repnz
pop
insb
clc
data16
lret
insb
dec
sub
push
pop
cmp
or
in
movsl
fs
push
lea
loope
fwait
push
fildll
inc
or
jae
mov
outsb
arpl
or
cmp
ret
inc
test
enter
sub
mov
lret
mov
cld
jo
pop
adc
bound
jae
jne,pt
inc
xor
inc
push
jge
pop
mov
stos
xor
cmp
inc
jno
enter
mov
push
cmp
fwait
jbe
test
loope
sub
or
inc
mov
test
ss
add
push
dec
mov
sub
je
adc
das
imul
jbe
inc
cmp
mov
lods
push
push
fisubs
out
test
or
jge
mov
xchg
loopne
imul
push
lahf
repnz
or
mov
loope
js
repz
popa
idivb
mov
call
stc
in
cs
call
xor
hlt
push
scas
sbb
pop
ds
aad
in
idivb
or
negl
mov
cs
ja
sub
aam
out
dec
and
pusha
pop
sub
fsubl
mov
lret
pop
shlb
jns
test
jae
cwtl
cld
in
fidivl
rcl
push
xchg
mov
jmp
sahf
mov
stos
in
dec
into
pop
dec
sub
sbb
jo
jp
push
and
dec
enter
sub
bound
insb
mov
adc
inc
mov
sub
push
dec
inc
mov
xchg
dec
lea
dec
jne
gs
inc
rcrb
call
stos
or
inc
dec
mov
cmpsl
add
aad
inc
je
les
mov
inc
adc
cmpsl
jecxz
mov
mov
mov
movsl
pushf
test
lea
push
inc
outsl
movsb
dec
mov
push
sbb
mov
test
hlt
scas
out
mov
dec
shrb
inc
pop
int3
inc
push
outsb
xor
pushfw
mov
fdivrs
xor
adc
shll
xchg
push
pushf
mov
push
adc
cmc
add
add
icebp
shlb
and
sub
push
test
das
pop
inc
shrb
ds
lock
test
insb
dec
loope
inc
pop
in
pusha
mov
cmc
enter
and
pop
mov
adc
xlat
ret
lods
dec
cmp
in
sub
out
cmpsb
popa
movsl
cmp
shrb
jecxz
mov
in
arpl
out
pop
shlb
outsb
cmp
pop
fcoms
mov
lods
fsts
pusha
scas
addr16
and
aam
sub
cmc
test
loop
cltd
cmp
push
sar
subps
or
cmpsl
in
pop
mov
sbb
mov
hlt
cmp
add
movsb
insb
xor
test
les
aad
jge
pop
mov
inc
jecxz
stos
lods
fmul
add
cmp
neg
outsl
xor
lahf
mov
sbbb
and
pushl
and
test
adc
decb
cmp
lods
movsl
in
test
mov
out
jo
xchg
xor
pop
push
ss
push
inc
test
jno
sbbb
out
shrb
push
dec
mov
mov
aas
cmp
test
cld
lds
mov
stos
out
or
std
and
fs
ljmp
cltd
ds
popa
lock
push
mov
mov
es
jmp
scas
cmp
pushf
push
movsl
push
aam
out
cmpsb
and
popa
mov
inc
mov
cmp
fmull
lea
loopnew
cmp
mov
fcoml
fsub
stc
scas
cwtl
int
pop
fs
sbb
cmp
mov
xor
jno
sbb
popa
xchg
loope
imul
je
xchg
pusha
push
or
cwtl
test
push
or
out
mov
repnz
mov
cmc
call
fldl
ljmp
jle
xor
pop
sub
push
mov
ret
gs
lret
mov
fnstenv
sub
mov
insl
addr16
stos
inc
cltd
mov
pause
bound
jecxz
subl
mov
les
cmc
pop
inc
inc
sbb
or
mov
add
inc
jecxz
or
call
ds
mov
pop
push
scas
pop
push
pop
and
inc
pop
xchg
xchg
pop
and
pusha
insb
movsb
pop
adc
inc
xchg
fsubl
mov
fwait
mov
mov
inc
xor
in
subb
jle
into
js
cmpsb
jmp
lcall
xchg
movsb
punpckhbw
inc
jg
xchg
add
fisubrs
test
loope
push
test
sbb
cmp
sbb
ds
xlat
fcoml
cltd
dec
or
popa
popa
scas
sahf
pushf
sbb
cmp
xor
sarl
xchg
mov
cmc
xor
mov
dec
aad
inc
or
fdivs
cld
sti
arpl
inc
jno
and
call
mov
divl
fs
push
sub
fisubl
idivl
mov
cld
inc
call
js
mov
push
sub
pop
add
les
pop
loope
fisttpl
mov
sbb
mov
or
shlb
sub
mov
pop
js
jecxz
inc
leave
pop
or
ljmp
cmpsb
jp
rclb
fs
inc
faddl
addr16
ss
mov
loope
in
sbb
ret
mov
mov
shrl
fadds
cmpsb
cwtl
pop
lods
lock
jp
cld
addb
jo
popa
jp
cmp
rorb
mov
push
cmpsb
cmpsb
mov
mov
sbb
push
jp
mov
jns
gs
xor
dec
sub
push
ror
jle
push
xlat
subb
stos
push
in
test
fildl
scas
repnz
and
es
aad
insb
and
mov
push
test
cmp
mov
jle
test
mov
adc
into
hlt
push
rcrl
add
ja
loope
and
mov
jg
hlt
jmp
cld
adc
pusha
mov
popa
sar
fwait
call
fwait
cmp
dec
ret
pop
push
xchg
and
out
inc
cmpsb
rolb
pop
mov
push
mov
add
pop
jbe
je
adc
mov
inc
fdivp
addr16
imul
mov
and
push
mov
pop
flds
or
jecxz
out
sbb
and
cmp
adc
and
pop
cmc
mov
mov
mov
loopne
test
sub
test
insl
dec
and
imul
or
in
sbb
pop
out
sbb
and
dec
pop
cmpxchg
hlt
sarb
arpl
loopne
mov
cwtl
sbb
inc
jne
adc
ret
ljmp
mov
dec
sbbl
call
add
mov
sahf
cli
js
sti
int
leave
hlt
stc
mov
xchg
pop
pop
pusha
adc
add
pop
lock
outsb
stc
sti
pop
fnstsw
inc
or
std
add
rcrb
xchg
stc
movsl
xchg
jns
xchg
jmp
inc
fimull
inc
adc
sub
xor
leave
std
jb
mov
popf
jl
push
fs
cmp
rcl
shll
flds
pop
pop
movsb
sbb
out
jmp
addr16
add
xchg
repnz
dec
and
pop
shl
cs
sbb
js
mov
mov
lret
adc
xchg
ljmp
push
outsl
sbb
cmp
mov
lea
nop
loope
decb
imul
out
popa
fisubrl
inc
leave
mov
fwait
mov
jp
push
stc
ret
lahf
es
dec
nop
xchg
fcompl
mov
mov
mov
js
push
js
fldpi
pusha
mov
adc
xchg
pop
push
ljmp
sub
icebp
cmp
shll
mov
repz
push
inc
std
js
and
cli
loope
addl
fs
leave
insl
xlat
pushf
adc
and
or
loop
flds
outsb
ret
jns
test
cmp
fdiv
mov
inc
or
jo
addb
or
push
bound
adc
test
aam
or
aad
cmp
jo
pop
and
push
popa
pop
cmp
imul
int3
sbb
push
mov
mov
sbb
loop
mov
fadd
data16
decb
dec
aas
mov
dec
push
adc
ficompl
sbb
mov
xchg
stos
decl
jg
pop
pop
sub
jl
mov
jge
addr16
inc
popa
xchg
cwtl
mov
imul
dec
repnz
mov
das
aaa
adc
pusha
inc
sub
add
pop
fmuls
sar
jg
jnp
dec
ljmp
push
ljmp
arpl
pop
xor
out
sbb
sub
cli
mov
pop
pop
test
cmp
jecxz
fcompl
pop
pusha
and
pop
xchg
loope
pop
mov
push
mov
loop
nop
or
mov
movsl
inc
in
lods
lods
inc
je
fnstsw
lock
dec
das
lret
call
out
xor
insl
sub
dec
fildll
test
inc
push
sbb
push
inc
or
adc
jns
lahf
leave
xor
test
jne
dec
cli
mov
sbb
sarl
imul
mul
shrl
bound
push
fisubs
movsb
xor
mov
int3
xchg
stos
out
mov
ret
sbb
arpl
fistl
inc
push
add
repnz
sub
pop
mov
mov
flds
lds
in
cmpb
cltd
clc
push
dec
sub
out
ficompl
or
out
add
adc
stc
int3
jge
outsl
cmpsl
jns
ja
popf
mov
dec
dec
fsubr
mov
fsubs
movsl
lcall
dec
fcoml
pushf
add
mov
sbb
into
fidivl
cmp
push
push
dec
lods
xchg
xchg
in
fistpl
inc
mov
and
fistps
dec
out
mov
and
les
gs
mov
cmpsl
stos
loop
mov
fs
imull
popf
inc
jb
hlt
cwtl
sub
neg
adc
mov
fisttps
jne
jp
stos
pushf
int3
outsb
sub
hlt
dec
sub
movsb
insb
inc
leave
loopne
pop
mov
shl
mov
mov
push
sub
pushf
pop
sbb
mov
dec
inc
gs
sub
repnz
pop
cmp
lods
add
inc
push
mov
test
test
out
push
xor
dec
mov
cli
arpl
out
jmp
push
pop
mov
inc
notb
inc
mov
and
cwtl
mov
fs
inc
push
jge
mov
out
pop
and
mov
inc
jae
pop
rcrl
lret
xchg
push
sbb
aad
xor
xor
cmp
ljmp
faddp
pop
fildl
dec
mov
loopne
loope
sub
xchg
rclb
xchg
and
call
pop
fwait
jle
or
mov
mov
into
and
push
call
mov
lods
mov
mov
call
xchg
dec
jmp
inc
push
in
frstor
cld
inc
mov
cmc
push
subl
or
dec
stos
or
push
add
mov
cmp
jo
pop
out
push
inc
adc
pop
and
rolb
jl
adc
cwtl
fdivl
sbb
push
outsl
ljmp
rorb
fisttpll
insl
sub
or
out
sbb
or
add
stos
push
fdivs
test
cs
inc
mov
pop
xchg
adc
sarl
clc
inc
rclb
adc
or
leave
pop
or
mov
in
aam
inc
add
subb
loopne
clc
pop
dec
inc
cmp
push
and
stos
adc
in
popf
mov
loope
hlt
mov
and
push
inc
std
stos
pushf
in
outsl
dec
mov
rolb
lahf
push
pop
inc
pusha
jno
jmp
xor
sub
imul
adc
fs
sub
adc
mov
or
outsl
out
fisttps
jmp
sbb
fadds
sub
pop
or
pop
scas
xchg
mov
and
in
sub
sub
cmp
gs
mov
out
xor
jo
and
pop
jecxz
fldenv
inc
outsb
sbb
cmpsl
and
jb
fs
mov
sbb
lret
jecxz
mov
sbb
lret
dec
dec
sub
and
push
add
xor
mov
scas
mov
push
pop
ja
out
pop
dec
sub
mov
movsb
sub
imul
sbb
sahf
insb
insl
sub
js
sub
repz
mov
stos
in
mov
imul
sub
jg
out
inc
inc
negb
lods
and
xchg
cwtl
sub
hlt
test
gs
sub
shll
pop
push
and
int
mov
repz
inc
dec
jge
iret
cmp
jl
xchg
inc
ret
loop
or
pushf
sahf
jmp
stc
dec
bound
sub
addb
test
in
jge
jo
negl
addr16
mov
jmp
lds
inc
fstpl
xchg
inc
sbb
andb
dec
movsb
push
adc
adc
dec
std
inc
pop
fsubrs
cmp
inc
test
arpl
and
and
scas
adc
jecxz
xor
pop
mov
pop
xlat
cltd
shrb
adc
push
xor
pop
ficoms
mov
enter
pop
lret
inc
filds
sub
pushf
fisubs
jbe
add
inc
in
xor
sahf
orb
dec
inc
pop
lods
adc
mov
add
mov
inc
mov
add
push
je
lods
clc
cmp
popa
mov
mov
and
pop
mov
fnstcw
inc
dec
jl
lret
mov
sbb
or
push
jb
sbb
scas
xorl
mov
out
cmp
push
call
shrb
stos
ret
aas
and
popa
test
mov
incb
and
es
mov
inc
aas
test
mov
ficompl
mov
lods
ffreep
cld
cmp
push
inc
insl
mov
sub
ss
call
and
outsb
sbbb
mov
repz
out
addb
xchg
mov
out
scas
xchg
stc
jb
lea
out
cs
arpl
push
repnz
out
sbb
adc
xchg
fdivs
mov
dec
clc
mov
mov
inc
rcl
mov
pop
rolb
les
mov
mov
xchg
push
xchg
data16
sbb
inc
lods
adc
add
push
adc
enter
mov
rolb
add
sbb
inc
sahf
jb
sub
call
movsb
jl
adc
shlb
int3
pop
jmp
jl
cmp
mov
sub
arpl
movsl
loop
mov
mov
sbb
inc
mov
scas
sub
popa
inc
cmp
mov
add
call
mov
adc
mov
test
lock
fadd
jae
xchg
arpl
pop
sbb
mov
repz
add
fs
mov
xchg
lret
mov
fwait
outsb
push
in
and
insb
inc
sbb
lcall
push
push
jmp
xchg
hlt
push
pop
push
fldenv
inc
lods
push
mov
repz
std
lret
fsubr
pop
mov
lea
mov
and
fs
nop
sbb
enter
dec
adc
in
pop
inc
inc
and
push
xchg
xchg
loope
mov
bound
fs
jno
mov
cmp
test
in
in
test
jo
jmp
xor
testl
pop
stos
pop
fnsave
push
call
loopne
mov
je
lods
adc
jle
lea
jp
scas
push
js
outsb
das
mov
add
popa
mov
and
cmpsb
icebp
fmull
xchg
scas
lret
cmpsl
jmp
xor
arpl
sbb
pop
scas
push
mov
adc
rclb
adc
pushf
dec
sbb
add
push
mov
inc
testl
pusha
jge
or
pop
stos
mov
mov
shll
and
xor
push
and
mov
into
xchg
les
jl
ljmp
inc
pop
adc
mov
and
inc
push
das
cmp
push
cmp
scas
fnop
xchg
aam
out
pop
stos
inc
lcall
jnp
pop
or
fucomip
outsl
xor
mov
fisubl
sbb
sahf
aam
mov
cld
lock
cmpsb
inc
sbb
das
int3
js
adc
es
xchg
jno
stos
pop
mov
movsl
cs
dec
fistps
push
pop
ja
test
jecxz
fildll
mov
ljmp
movsl
xchg
inc
fadds
popa
sarb
mov
in
or
mov
dec
or
pop
push
cmc
mov
dec
rclb
addr16
repnz
push
insl
pop
push
out
cli
mov
pop
pushf
xchg
jp
add
mov
mov
cmp
cli
adc
rolb
dec
imul
faddl
in
fcomps
mov
pusha
out
jmp
ret
cmpsl
pop
movsb
sbb
rcll
mov
push
push
dec
cmp
and
std
pop
inc
rorb
or
stc
dec
adc
or
sarl
test
push
cld
dec
jb
roll
mov
xlat
jge
mov
sbb
cli
xor
add
test
out
inc
fxch
sarb
popf
subb
adc
mov
aam
sbb
xchg
pop
jmp
jp
outsb
pop
sti
adc
and
mov
pop
cmc
ret
sbb
dec
pop
sub
jbe
in
cmc
dec
sub
fcomps
loopne
arpl
xchg
cmp
dec
push
loop
and
cmp
and
sub
jge
popf
jp
js
ret
push
aaa
jns
out
xchg
arpl
dec
enter
mov
lret
sbb
adcb
mov
jge
pop
adc
insl
xor
dec
sbb
jmp
dec
add
in
jge
dec
ja
mov
iret
out
cmp
das
xlat
mov
mov
mov
mov
or
sbb
subb
fdivr
fldt
and
enter
int3
push
or
adc
cmp
ljmp
inc
aaa
cli
inc
fisubrl
jns
loopne
xchg
out
or
hlt
dec
sbb
lea
scas
loope
mov
movsb
imul
cmpsb
pop
mov
gs
adc
aam
adc
insb
insb
mov
fxch
nop
outsb
test
pop
xchg
repnz
push
dec
xchg
jl
push
sbb
xchg
jno
sar
sbb
sbb
inc
push
cmpsl
mov
ljmp
jge
loope
js
insb
ds
cmpsb
and
sbb
push
mov
shlb
xor
loope
cmp
fwait
ljmp
lods
jmp
inc
sub
and
pop
shrb
icebp
sbb
test
cltd
xchg
lds
adc
js
inc
or
notb
mov
dec
and
pusha
or
xchg
pop
addr16
fstp
sbb
and
jp
orl
in
test
je
fcoms
adc
negl
jne
inc
fisttpll
jmp
repz
pop
or
xchg
sbb
std
test
and
inc
cli
arpl
xlat
leave
lods
mov
mov
jg
cmp
cmp
repnz
or
xor
imul
das
sbb
lcall
jnp
mov
into
push
mov
incb
mov
lcall
stc
popf
jb
cmp
pop
stos
loopne
in
adc
repnz
ds
imul
and
or
repz
push
imul
in
test
rclb
xchg
dec
test
and
jp
stos
jns
xchg
mov
call
inc
xor
js
sbb
lods
iret
lock
jne
hlt
add
jno
aam
mov
inc
dec
popa
in
sub
mov
push
pop
loop
xor
movsb
cmp
data16
js
out
and
popf
in
push
jecxz
pop
gs
jecxz
enter
into
add
cltd
insb
add
adc
shr
mov
std
andl
jg
lds
push
fwait
ss
jge
mov
inc
jno
es
dec
xlat
lcall
test
call
xor
lahf
and
mov
int3
dec
mov
out
and
inc
out
add
xlat
movsl
push
push
imul
push
pusha
in
movsb
push
mov
test
call
cmpsb
dec
dec
dec
cltd
push
nop
out
fdiv
mov
js
push
test
sbb
pop
add
cmpsl
inc
ret
enter
aaa
pop
sub
sbb
shlb
rcll
stos
in
mov
dec
sub
pop
pusha
add
jno
or
mov
adc
push
fimull
lea
in
lods
loope
loope
sub
or
test
jge
xorl
pop
xor
dec
adc
pop
mov
cmp
dec
inc
lea
stc
mov
mov
cmpsl
inc
xchg
sahf
fdivs
repz
xchg
loop
mov
popa
rolb
sbb
sbb
push
lods
push
push
test
pop
mov
cmpsb
mov
idivl
pop
add
clc
orb
icebp
xchg
fistpll
test
dec
ficoml
jnp
mov
cmp
in
int
lret
pop
and
lods
adc
jecxz
je
fcompl
nop
sub
jge
paddsw
aam
pop
push
mov
jecxz
mov
iret
push
xor
popf
dec
jns
pop
sbb
popf
repnz
fisubl
mov
leave
out
les
xchg
inc
sbb
and
adc
mov
pop
pusha
xlat
loope
loope
mov
sbb
mov
inc
or
pushf
repnz
pushf
mov
mulb
inc
test
xchg
push
inc
clc
or
cmpsb
sub
add
rorb
push
mov
or
lds
lret
cwtl
pop
lods
jmp
cmpsb
enter
push
fs
cmc
movsb
lock
jno
add
or
stos
roll
arpl
push
in
je
hlt
fdivrl
loope
dec
push
adc
adc
cmpb
sub
push
aam
test
pop
jmp
addr16
cmp
adc
ret
mov
sbb
or
cmc
and
testb
jl
and
mov
adc
in
xor
xor
insl
mov
dec
repz
fldl
push
xchg
int3
mov
jo
lcall
mov
js
fldenv
cwtl
sub
scas
jl
inc
push
shll
push
outsl
les
lcall
jo
jo
jbe
imulb
inc
aam
mov
and
push
push
push
into
cmpsl
dec
fldl
sbb
lods
push
sti
mov
adc
out
and
mov
adc
and
hlt
lock
inc
inc
push
cld
clc
lods
inc
push
popa
mov
cmp
sub
icebp
fsubr
in
pop
mov
call
ljmp
mov
mov
mov
das
stos
pop
pop
hlt
adc
fucomp
out
test
pop
jae
addr16
pop
mov
enter
enter
cltd
test
or
rorl
mov
adc
sbb
xchg
sbb
pusha
jg
mov
test
icebp
movsl
pop
lods
shr
aaa
lock
jg
inc
imul
mov
mov
lcall
int
mov
inc
sub
fs
jecxz
hlt
insb
adc
ss
jle
ljmp
mov
push
and
jg
dec
jmp
in
add
test
mov
stos
mov
icebp
sahf
call
pop
aas
xchg
inc
lods
cli
add
pop
fisttpl
cmpb
mov
popf
jb
pop
cmpb
jmp
call
sub
dec
lcall
leave
jge
sbb
sbb
clc
jle
stos
jle
test
repz
data16
fildl
test
xor
loope
fcoms
mov
fldl
jno
xor
repnz
mov
push
test
jns
enter
lock
mov
stos
testb
jl
movsb
inc
stc
je
sti
inc
push
cs
out
call
add
sub
cmpsb
dec
sub
shrl
test
pusha
mov
add
mov
jns
xor
jg
lods
nop
fadd
cmp
pop
daa
int3
jecxz
out
lods
loopne
adc
ljmp
inc
test
mov
and
inc
pop
les
pop
shlb
xor
cld
fsubl
pop
pusha
addr16
testl
xorl
pop
cmc
sbb
inc
push
stos
mov
push
jecxz
dec
ficoms
fiaddl
xchg
clc
jg
xor
mov
movsl
pop
cmpsl
sti
cmpsb
lahf
movsb
mov
loope
cmp
cmp
jmp
js
rcrb
push
iret
call
jg
dec
push
daa
or
xor
dec
shrl
je
stos
add
test
dec
imull
rorb
xchg
jecxz
dec
cmp
xchg
test
loopne
pop
inc
add
inc
popf
jg
mov
push
aam
or
repz
mov
ss
cmp
adc
jns
cwtl
hlt
ret
jecxz
lcall
or
jb
jle
cmp
les
mov
in
sti
std
bound
adc
adc
sbb
int3
inc
xchg
call
mov
sbbb
fsubrs
shl
stc
jle
hlt
add
mov
sub
inc
icebp
mov
and
mov
sub
sub
mov
lcall
inc
jb
pop
pushf
mov
adc
arpl
stos
dec
mov
push
dec
aas
jge
pusha
or
mov
cmp
inc
adc
dec
jecxz
push
adc
cli
fmul
push
in
sbb
or
stc
sbb
mov
fsubrs
rcl
jge
mov
mov
sbb
dec
loope
enter
adc
mov
inc
pop
lea
mov
hlt
mov
mov
arpl
ficompl
stos
jecxz
fs
repnz
and
fisubs
sub
xchg
repnz
iret
push
test
loope
lods
pop
pop
dec
sub
ds
in
fisttps
les
lods
adc
mov
and
fistl
inc
movsl
jno
add
inc
mov
sti
push
inc
hlt
lods
test
push
paddsb
add
dec
jg
loope
cmp
dec
xchg
sbb
insl
push
fisubrl
clc
fwait
shlb
pop
adc
dec
leave
cmpsb
in
mov
inc
inc
mov
xor
mov
ret
xchg
test
stos
lahf
pop
sbbb
inc
dec
test
cmpsl
cld
or
repz
mov
or
adc
mov
cmpsb
aad
loope
dec
lcall
mov
jmp
mov
fcompp
lock
cli
and
js
dec
nop
mov
js
mov
adc
pop
js
push
xchg
inc
and
sbb
nop
adc
jae
add
mov
mov
fcompl
imul
mov
popa
fs
jo
mov
fs
je
stos
movsb
inc
lods
mov
adc
imul
inc
outsb
xchg
cwtl
out
add
pop
pop
repnz
clc
lea
push
or
insb
xchg
outsb
jle
cmp
popa
pop
dec
aaa
in
pop
push
mov
cwtl
adc
lea
pop
idiv
dec
push
push
xchg
jg
push
inc
xlat
pop
ret
mov
inc
inc
cltd
mov
push
jae
dec
arpl
mov
mov
pop
sbb
daa
test
jle
scas
pop
movsb
mov
mov
nop
push
mov
pop
les
int
std
dec
push
add
icebp
xor
nop
insl
pusha
cmc
dec
out
addl
shlb
jne
mov
test
adc
outsl
outsb
jecxz
jno
rclb
mov
div
sub
dec
int
jno
shll
stos
xchg
push
ficoml
mov
int3
out
push
ljmp
js
shl
or
call
cli
push
gs
mov
jnp
pushf
and
sub
sub
fldt
dec
pop
xchg
and
pusha
mov
popl
mov
insl
pop
rcrb
inc
mov
or
xchg
cs
fs
fucomi
insb
or
adc
jb
adc
dec
ljmp
inc
adc
sub
pop
dec
pusha
mov
cltd
inc
imul
idiv
cmp
mov
shl
fdivl
aad
jle
stos
les
pop
inc
fcompl
filds
sub
add
sbb
adc
cmp
mov
mov
test
xchg
fld
jnp
sub
mov
pushf
push
loop
pop
arpl
jb
xchg
stos
mov
and
push
shlb
into
xorl
dec
adc
pop
or
cwtl
cld
je
movsb
mov
aaa
aas
aaa
fprem1
test
jecxz
adc
out
scas
fdivs
adc
call
stc
gs
xchg
xor
fptan
inc
sahf
mov
push
mov
mov
mov
aas
ret
adc
js
push
jb
andb
nop
sub
fcoml
pop
fnstcw
inc
push
push
mov
cmp
int
icebp
sub
push
push
popa
inc
movsb
jl
ss
adc
xor
cmp
arpl
test
inc
and
ja
xchg
hlt
push
scas
pop
fsubl
icebp
js
xchg
pop
dec
rcrb
ja
in
fbld
pop
xorl
pop
inc
ret
cmp
stos
cld
push
pushf
mov
xlat
js
fsubrs
mov
loope
sarb
jns
xor
repz
enter
in
imul
push
push
sbb
mov
push
pop
in
nop
mov
xchg
mov
mov
or
incb
test
push
pop
popa
dec
mov
jnp
insb
negl
push
xor
mov
mov
mov
call
add
pop
fildl
sti
xchg
cmpsl
ljmp
hlt
ret
jnp
popa
add
pop
fsubrs
mov
pop
pushf
jo
pop
inc
add
mov
mov
cmpsl
pop
and
insb
fnstenv
cmp
jo
pop
add
adc
xchg
inc
xor
adc
test
cmp
daa
loopne
adc
mov
stos
push
xor
in
jmp
sbb
inc
jmp
sub
divl
cwtl
sbb
lods
mov
sbb
test
push
in
test
outsl
add
cmpb
imul
nop
mov
arpl
mov
outsb
outsl
mov
jecxz
push
popa
and
out
in
xchg
adc
push
jmp
mov
fiadds
push
dec
mov
pop
mov
fidivl
mov
jg
js
and
push
jae
sub
popf
pop
shrb
rolb
test
rclb
test
inc
mov
nop
testl
mov
sub
push
leave
fs
and
xchg
aaa
or
out
popa
fidivrl
cli
es
shl
xor
in
and
loop
out
pop
arpl
dec
lods
jo
int
arpl
test
pop
movsl
out
cld
dec
mov
dec
pop
imul
movsl
xchg
std
cmp
and
and
push
add
mov
pop
add
faddl
cmp
xchg
cli
sbb
pushf
cmp
sub
test
push
mov
jo
int
cli
mov
dec
icebp
pusha
or
or
push
push
pop
imulb
hlt
test
dec
jge
adc
sbb
sti
mov
fstpl
fstl
nop
pushf
and
jbe
mov
jae
xor
gs
pop
fsubs
in
popf
pop
mov
fwait
adc
and
aad
add
pop
inc
hlt
mov
or
push
mov
mov
jns
or
cmpl
ror
subl
push
cmp
js
mov
mov
mov
cmp
pop
push
das
cmp
add
jmp
imul
pop
sbb
pop
inc
out
loopne
repz
inc
es
push
push
add
mov
pop
out
cwtl
sbb
cmpsb
pop
pop
rcr
xchg
xor
sub
dec
loope
push
mov
mov
dec
in
insb
and
in
inc
pop
sbb
sbbb
lret
imul
sti
ds
ljmp
inc
xor
mov
andb
mov
cmp
cmp
stos
push
cmpl
scas
shl
imul
cmp
mov
dec
hlt
mov
pop
cmp
popa
lods
pop
or
xchg
sub
sub
std
jns,pt
mov
pop
pop
imul
outsl
add
loope
jmp
loop
mov
out
sbb
imulb
fldl
test
dec
mov
cmp
negb
push
cmp
sub
out
bound
jle
jg
ljmp
adc
popa
xchg
loopne
pop
pop
std
dec
fisttpll
adc
shll
lret
jnp
stos
lods
clc
sbb
insl
jmp
and
ja
loope
shlb
jne
add
push
rcrb
inc
je
fldl
cmp
mov
mov
repz
xchg
dec
or
cwtl
int3
inc
and
in
imul
dec
pop
jno
dec
push
insb
lods
push
cmp
addr16
dec
out
jge
fwait
pop
negl
loop
inc
data16
push
in
lret
mov
ffree
cmp
and
pop
fucom
pushl
adc
mov
mov
push
call
xchg
cli
jns
mov
add
push
outsb
jge
ret
scas
or
sbb
push
cmp
lret
dec
xchg
pushf
mov
movsb
cmp
xor
pop
inc
and
movsb
in
adc
rcrb
jecxz
jecxz
lret
lock
cmpsb
sbb
int3
inc
mov
rclb
mov
xchg
xor
mov
push
repnz
in
clc
mov
daa
jne
loopne
pop
loope
iret
mov
int3
add
ljmp
arpl
jle
mov
cmpsl
in
setge
mov
inc
shlb
ljmp
cmpl
pop
sbb
sbbb
add
pop
test
ret
loopne
inc
out
in
popf
jne
in
js
pop
fcomps
and
dec
cmp
cmpsl
xchg
jecxz
aam
push
scas
jecxz
mov
adc
push
sub
outsl
jb
test
dec
or
jmp
stos
fisttpl
adc
mov
push
or
pop
mov
inc
push
sub
xor
cmc
mov
pop
in
mov
fcompl
div
or
mov
jl
push
enter
xchg
dec
sub
cltd
mov
andl
xor
jno
jbe
loope
xchg
pop
popf
xchg
and
outsl
mov
arpl
mov
cwtl
nop
shlb
jmp
push
inc
fildl
mov
fldenv
mov
or
lcall
arpl
adc
rcrb
std
repz
jg
call
stc
sub
shlb
outsb
adc
cmp
mov
jge
lcall
repz
dec
xchg
xor
movsb
roll
call
sub
sub
add
rorb
ret
push
wbinvd
mov
push
xchg
mov
dec
pushf
mov
mov
test
mov
sahf
and
std
aas
andb
mov
scas
xor
adc
dec
pop
mov
call
xor
push
pop
ljmp
sbb
sahf
mov
jmp
je
shlb
xchg
mov
in
cld
mov
push
lods
add
movsb
pop
mov
push
movsb
dec
negb
sub
lahf
cmp
pop
jne
inc
inc
test
dec
loopne
add
les
jns
lret
adc
pop
jmp
arpl
aad
mov
loopne
push
inc
push
push
jb
bound
inc
pop
mov
inc
or
sbb
adcl
repz
sbb
stos
ja
lods
cmp
pop
sub
mov
mov
faddl
xor
fldcw
sbb
cmp
add
ret
sbb
sbb
ficompl
jne
sbb
mov
ret
popf
lods
adc
fisttpll
sbb
movsb
jp
leave
mov
and
mov
sar
add
jbe
fucomip
xor
lods
je
cmp
arpl
insb
fnstenv
lcall
inc
ret
fsubrp
push
in
or
adc
hlt
mov
add
push
push
jmp
mov
sub
out
and
loopne
push
and
jne
mov
fistpl
mov
sbb
test
fcoml
negl
and
shlb
inc
jno
lcall
dec
sbbl
shrb
inc
popa
jecxz
dec
add
inc
mov
pop
je
nop
dec
xor
aad
loop
push
mov
fs
outsl
push
dec
pushf
inc
sbb
jle
js
loope
jbe
and
int3
test
adc
mov
inc
lahf
pop
sub
lret
adc
xchg
inc
leave
bnd
adc
or
pushf
sbb
cwtl
fisubrl
push
sbb
cwtl
add
hlt
jne
int3
loopne
mov
nop
aad
pusha
lock
mov
dec
icebp
popa
xor
ss
shll
push
add
mov
in
dec
push
jecxz
cltd
xchg
mov
stos
xchg
lcall
xchg
push
aad
fdivrl
sar
leave
xchg
fiaddl
lds
addr16
mov
movsb
popa
sbb
pop
pop
mov
rcl
pusha
in
xchg
sub
mov
push
inc
sbb
aad
imul
xor
sub
scas
femms
inc
jle
ret
cwtl
sub
dec
xchg
clc
sbb
cmp
mov
in
inc
mov
inc
scas
mov
shl
cmpsl
test
dec
jl
out
ficomps
cwtl
pop
cmc
pop
cs
jns
inc
pop
int
pushf
shlb
push
mov
insl
imul
xchg
iret
pop
loope
mov
sub
mov
test
popa
inc
outsb
pop
dec
or
imul
push
mov
push
mov
test
or
adc
dec
mov
sarb
push
mov
jmp
rorl
pop
int3
ret
push
xlat
cmp
sub
fs
cmp
mov
dec
mov
out
sub
jecxz
jo
jge
movsl
push
bnd
push
sub
clc
insb
push
xor
mov
scas
std
stos
fldcw
inc
cs
jp
aas
mov
cmc
mov
shl
xchg
popa
ljmp
imul
mov
inc
movsb
aam
ret
mov
dec
mov
in
ror
roll
lcall
das
xchg
imul
adc
jle
popa
pusha
sahf
push
test
lahf
cs
xor
arpl
ss
pop
fs
mov
das
xor
scas
mov
pusha
outsl
outsl
loopne
loope
jg
divl
movsl
pop
push
xchg
add
lds
mov
mov
pop
imul
add
jns
pop
es
enter
je
inc
outsb
cltd
mov
movsl
cmc
and
sub
push
cwtl
out
dec
movsb
rcrb
adc
inc
cld
push
mov
jge
into
lods
mov
ljmp
scas
arpl
adcl
or
xchg
mov
ljmp
mov
mov
mov
jbe
add
sub
inc
mov
add
pop
loope
adc
pushf
insl
inc
es
shlb
adc
jb
mov
push
xor
fmuls
cmpsl
iret
adc
mov
mov
mov
sbb
pop
fcomps
scas
cmp
mov
sbb
pop
mov
and
adc
mov
sti
pusha
call
out
mov
addb
aad
mov
or
dec
jb
loope
fildll
xor
mov
int3
mov
pop
enter
aad
inc
test
mov
sbbb
inc
imul
mov
push
xchg
inc
mov
inc
cwtl
jge
cwtl
pushf
in
pop
cmpsb
je
xchg
jmp
jecxz
in
push
cmpl
xor
fwait
mov
push
test
sub
mov
dec
into
popa
test
jo
inc
popa
cli
in
pop
dec
mov
mov
ljmp
inc
xchg
jb,pn
cmpsl
mov
dec
mov
lcall
push
mov
dec
les
add
pop
adc
mov
sbb
sub
mov
ficompl
mov
cmp
outsb
fisubs
cltd
jnp,pt
dec
out
shrb
out
hlt
mov
mov
inc
arpl
lods
ljmp
mov
pop
imul
and
movsb
lret
adc
addr16
add
push
jb
inc
into
or
mov
mov
lcall
xor
lds
mov
aas
js
push
insb
fiaddl
lods
cltd
cmp
add
fcomps
xchg
bound
add
dec
jge
stos
lret
loopne
jmp
fstpl
cmp
sub
out
or
arpl
sbb
cmp
jns
xor
fadd
cld
jo
mov
ljmp
faddl
sbb
ljmp
pop
ret
jl
inc
scas
cmp
jecxz
inc
imul
pop
out
orl
inc
push
inc
adcb
clc
push
test
and
aam
cmp
out
add
inc
xchg
mov
and
addr16
pop
shl
out
les
fnstsw
jno
test
inc
nop
jb
push
popf
mov
pop
shll
arpl
jle
repnz
pushf
xor
inc
inc
inc
push
cmp
inc
fbstp
clc
repnz
cltd
imul
adc
fcmovu
stc
push
cmp
xlat
sub
mov
cltd
cmpsb
imulb
loop
ljmp
jl
mov
jle
pop
aad
xor
mov
xor
cmpsb
cmp
jo
out
ret
outsb
and
scas
fucom
cld
inc
jp
pushf
push
outsb
jp
rclb
adc
fstps
inc
xchg
roll
outsl
push
sbb
mov
add
inc
adc
fstpl
adc
jg
repz
movsl
aam
cmpb
add
into
adc
fildll
mov
dec
and
mov
push
inc
push
lea
and
and
push
sub
int
jecxz
out
pop
jo
xor
out
test
cmc
ljmp
mov
loopne
in
push
nop
xchg
in
push
inc
dec
imulb
push
imul
aad
ds
popa
dec
ret
jne
insb
jbe
cmp
add
mov
mull
faddl
sub
rolb
repnz
cmpsb
and
insl
stc
push
mov
mov
pop
int
jmp
push
popf
gs
js
lahf
pop
cmp
mov
jp
xor
add
out
scas
fidivl
sbb
adc
jb
outsb
stos
pop
mov
pop
sub
jmp
pop
scas
imul
mov
sahf
in
push
leave
arpl
mov
fsqrt
sub
xchg
addr16
jle
mov
mov
cmp
cwtl
dec
push
cmpsb
adc
add
or
scas
mov
test
sub
divb
mov
lret
xchg
mov
adc
outsb
fs
movsb
clc
dec
stos
imul
les
xchg
addr16
xchg
ds
addr16
mov
jo
fldt
mov
in
adc
sub
mov
hlt
push
popf
xor
jb
mov
popa
inc
loopne
stos
mov
dec
dec
push
mov
jno
xor
sbb
add
and
hlt
sbb
mov
adc
or
fs
std
clc
and
push
mov
mov
xor
cmp
sub
or
or
adc
push
cmpsl
out
jbe
inc
test
push
jp
insb
lcall
popa
shrb
repnz
xor
cmpsl
ljmp
xchg
inc
jnp
pop
imul
add
sub
dec
shrl
stc
mov
cmpsl
sub
adc
adc
mov
push
in
aas
pop
and
ret
push
cmpsb
fcmovu
mov
inc
mov
loop
fidivrs
imul
push
cld
mov
shr
jnp
int
test
popa
fdivrs
data16
adc
in
push
cli
pop
rorb
lret
jecxz
mov
psrld
outsb
mov
cld
pushf
push
dec
sub
movsb
in
cwtl
enter
inc
adc
ds
xlat
mov
bound
fsubrp
push
ds
fisubrl
mov
js
inc
hlt
shr
sub
sub
sbb
xor
adc
das
pop
push
inc
popa
jge
cld
add
ljmp
lcall
inc
hlt
dec
movsl
pop
sub
cli
cwtl
frstor
push
mov
and
dec
sub
mov
jl
pop
cwtl
outsl
push
mov
and
js
fs
rcrl
push
imulb
and
inc
push
neg
push
mov
xchg
shlb
or
jp
dec
and
test
inc
in
insl
popf
popa
daa
mov
popf
in
jmp
movsl
popf
testb
shl
add
cs
cwtl
notl
inc
lret
sbb
addl
ja
ret
in
cmp
mov
gs
sahf
ret
popf
push
es
cld
leave
push
jg
add
into
jecxz
dec
dec
xor
js
rol
xchg
test
or
ss
pop
imul
loopne
loop
jle
sarb
adcb
sbb
fisubl
xchg
cli
or
hlt
push
out
cltd
aaa
js
xor
adc
pusha
mov
mov
sub
loop
mov
dec
cmp
scas
sbb
stos
dec
adc
ljmp
lcall
ja
loope
arpl
fs
inc
jne
push
shl
mov
call
in
repz
inc
push
ror
jb
mov
dec
mov
fildl
xchg
cmpsb
fadds
mov
movsb
imul
std
push
movsb
mov
jl
add
loopne
mov
hlt
push
mov
xchg
xchg
pop
fiaddl
dec
div
ljmp
in
out
lock
jo
xchg
push
xor
mov
mov
notb
dec
jecxz
inc
ja
sahf
xorb
xchg
pop
pop
loop
jno
fsts
jge
mov
lods
sbbb
iret
pop
fists
mov
and
push
xchg
mov
jle
pop
jecxz
cmp
adc
mov
cmpsb
pusha
sbb
push
imul
cmp
cmp
cmp
gs
add
xchg
and
out
and
in
loopnew
andnps
xor
dec
hlt
jae
call
adc
pop
popf
fisttps
cmc
sbb
cmpsb
sub
pop
adc
sbb
add
out
jns
xor
sub
push
rorb
dec
jecxz
xor
cld
or
mov
cmp
push
inc
lret
mov
push
stos
out
pop
or
pop
jmp
clc
jmp
jbe
loopne
shl
in
push
sbb
arpl
and
mov
pop
rcrb
negl
rcr
dec
jbe
jecxz
arpl
lcall
aad
test
sbb
xchg
test
clc
fmull
dec
test
cmpsb
shll
hlt
rcrb
xlat
pop
add
dec
loope
xor
xchg
sarb
sahf
test
lret
test
and
subb
cli
lock
cmp
sub
cltd
xor
dec
fmull
mov
push
adc
mov
mov
addb
dec
lods
xchg
adc
inc
jle
daa
shll
shlw
scas
mov
jb
imul
mov
pop
ds
mov
roll
outsb
mov
cld
fidivrl
mov
xorb
fwait
push
shll
scas
addr16
jne
fcomps
mov
shll
inc
xor
mov
mov
popa
std
inc
lahf
or
and
dec
jle
dec
popa
cmpsb
dec
dec
inc
shlb
lcall
sub
mov
out
fisttpl
or
push
push
inc
mov
repnz
mov
xlat
loopne
pushf
adc
inc
mov
mov
push
sbb
mov
jnp
stc
ljmp
fsubl
fnstenv
aam
movsl
mov
mov
push
mov
lcall
daa
loopne
cwtl
mov
and
pop
insb
push
into
xor
mov
mov
jmp
sub
test
mov
pop
call
lods
pop
jmp
mov
or
cwtl
mov
mov
iret
push
call
push
test
jge
out
inc
push
in
adc
test
je
arpl
insb
fwait
jbe
inc
cmpsl
or
dec
test
mov
add
mov
in
inc
fcmovne
jns
in
mov
outsb
adc
lods
shlb
les
out
inc
jecxz
mov
imul
or
mov
sbb
movsb
sbbl
stc
es
sub
cmp
inc
out
jnp
mov
sahf
cmp
xor
clc
mov
test
loopne
pop
push
mov
arpl
push
daa
sbb
inc
cmp
rolb
ja
pop
jmp
push
pop
push
or
add
daa
insl
cmpl
jge
cmpsb
stc
neg
lcall
adc
cli
pop
jo
push
inc
cmp
pop
int
add
or
jb
cmp
xor
add
stos
and
sbb
xchg
bound
test
sbb
xor
sub
leave
push
jns
je
fs
or
call
aad
cmpsb
dec
xlat
ficoml
loopne
inc
sbb
jne
fchs
shlb
into
jge
mov
jp
nop
loopne
jg
call
sarb
and
in
inc
movsw
inc
inc
aam
push
scas
or
nop
jg
pop
faddl
pop
cwtl
scas
mov
xor
jg
inc
push
das
jge
sub
nop
fnsetpm(287
xchg
xchg
pop
sbb
cmpsb
scas
add
pushf
insl
loope
hlt
fimull
cmpsl
cmp
cli
call
mov
rcr
pop
sbbl
jecxz
adc
mov
pusha
mov
or
xchg
aad
adcb
dec
pushf
xchg
in
test
dec
pop
and
pop
mov
adc
inc
cmpsb
pop
inc
pop
or
mov
mov
call
das
mov
push
fstps
cmpb
mov
in
cmp
inc
aaa
sti
nop
pop
and
add
call
push
aam
mov
cmp
cmp
lcall
call
scas
subl
sub
int
mov
mov
mov
out
mov
pushf
scas
and
mov
outsb
lcall
cmpsb
stos
cmc
and
or
dec
call
jno
dec
nop
test
mov
les
inc
jmp
cmpsb
push
and
pop
fdivp
lods
mov
shrl
inc
mov
jae
pop
ficoms
pop
ret
cmpsl
fcoms
out
call
mov
cmpsl
rcll
pop
arpl
jne
ljmp
inc
sarb
add
cmpsl
outsb
ret
in
or
stos
sahf
inc
ljmp
jecxz
mov
hlt
cmp
and
inc
pop
cld
aaa
inc
daa
sub
xchg
xchg
loopne
test
xchg
xor
dec
ljmp
ret
xor
inc
in
xchg
push
sahf
jl
fmull
das
pusha
ja
popa
adc
bsf
out
pop
push
cmp
bound
clc
cmp
mov
or
sbb
adc
les
jge
jge
push
outsb
xor
cmpb
sbb
fidivrl
mov
shlb
movsl
cmp
jg
andl
sub
and
insb
or
imul
and
push
jns
cltd
decl
mov
out
aas
mov
mov
js
test
sarb
loop
cmpsb
loopne
icebp
xchg
add
mov
ljmp
lahf
mov
sbb
orb
push
add
hlt
stos
call
jno
jmp
xor
adc
mov
ds
clc
mov
mov
sbb
adc
into
mov
movb
sahf
pop
sarb
js
push
pop
inc
mov
popa
dec
into
stc
push
xchg
fisubrl
in
sbb
test
lds
inc
cmpsl
jg
push
imul
pop
notl
test
orl
nop
hlt
aaa
aas
push
gs
and
inc
cmp
cmpsl
jg
dec
mov
mov
jg
adc
loop
mov
testl
jne
sbb
negl
adc
shll
test
enter
sbb
pop
jl
push
or
es
clc
or
das
jge
xchg
fs
hlt
or
iret
pop
mov
inc
in
ds
pop
nop
sub
in
jmp
filds
fnstsw
loope
cmp
pop
shlb
mov
fnstenv
sbb
imulb
push
or
xor
lods
out
in
jl
mov
aaa
jno
in
jl
je
pop
fwait
push
push
jge
mov
addr16
inc
jg
imul
xchg
cltd
rcrb
xchg
push
bound
push
push
inc
dec
cld
push
jp
gs
out
jge
jo
divl
add
nop
scas
inc
cmp
add
pop
out
pop
add
lret
ret
xor
adc
and
pop
jge
decl
push
stc
movsb
stos
lock
mov
jo
and
jnp
inc
sbb
lret
test
lock
jg
push
jne
data16
int
mov
adc
outsb
and
fnstenv
cmpsb
dec
inc
mov
pushf
push
loop
add
stos
fisttps
sub
loopne
push
jg
add
mov
jp
jmp
add
sbb
jnp
fs
xor
int3
call
dec
and
push
jns
or
ret
mov
mov
ret
popf
xchg
xchg
fcmovb
jmp
nop
mov
scas
dec
sbb
inc
cmpsl
dec
test
xor
pop
idivb
pop
inc
popf
mov
mov
mov
and
pop
cwtl
ficompl
inc
xchg
mov
xor
pop
xor
pop
pushf
shlb
dec
imul
insl
inc
mov
repnz
adc
jge
insb
inc
rorl
pusha
cmpsb
nop
cmp
loope
mov
pop
cli
push
pop
stc
mov
outsb
cwtl
jbe
out
xchg
or
jp
push
push
cmp
mov
and
inc
stos
dec
pop
clc
xchg
js
je
and
jge
lds
mov
gs
enter
shll
dec
mov
adcl
inc
inc
mov
jl
mov
xor
arpl
mov
or
mov
and
or
cmp
xchg
out
std
inc
outsb
sbb
and
loopne
push
notl
jg
sub
loope
insb
arpl
sub
in
cld
xchg
and
mov
aam
jns
dec
sbb
pop
lock
in
push
push
std
sub
xchg
lods
pop
xchg
nop
or
movsb
xchg
sbb
pop
jmp
mov
sarb
xchg
scas
rcrb
ret
push
lods
das
pop
lock
or
ds
cs
mov
lock
ds
mov
mov
mov
ficoml
dec
jle
lret
xor
pop
lret
fdivrs
stos
push
push
out
stos
push
outsb
add
arpl
xor
and
aaa
push
dec
mov
stos
pop
push
jecxz
sub
mov
pop
shl
fmull
mov
xlat
inc
cli
push
cmpsl
xor
out
rolb
pop
ljmp
mov
cli
repz
shll
sbb
jle
dec
mov
push
movsbl
repnz
test
inc
mov
fadd
push
fidivrs
mov
pop
mov
fisubl
aaa
sub
sahf
adc
push
iret
jle
jb
mov
outsb
je
jne
add
dec
loop
adc
sub
popa
pop
int
pop
shl
mov
lcall
inc
ljmp
rolb
ljmp
mov
cld
mov
pop
stos
xchg
pop
mov
in
cmp
imul
jbe
sub
outsb
and
add
lock
insb
test
mov
movsl
fmull
xchg
sub
outsl
loop
hlt
add
hlt
mov
jg
dec
punpcklwd
mov
rolb
xchg
xchg
mov
addr16
dec
hlt
icebp
push
data16
std
dec
inc
jmp
mov
sbb
sbb
inc
int3
inc
inc
rorl
lret
leave
jle
jle
jge
and
or
xchg
cmc
xor
dec
jno
jecxz
test
push
lea
jle
mov
mov
mov
jge
xchg
pop
lods
push
cmp
fsubrp
dec
gs
das
cmp
in
and
sbb
test
mov
xor
out
imul
lock
arpl
test
push
aad
data16
mov
and
mov
sbb
lock
rcrb
pop
dec
cs
adc
pop
cld
sub
or
cmc
mov
adc
scas
mov
lds
xchg
and
cltd
jl
mov
mov
fadd
and
ret
addr16
mov
cmp
jg
sarl
mov
mov
jg
roll
pusha
enter
push
adc
dec
je
les
test
out
inc
aad
test
sbb
pop
cmp
xor
mov
inc
mov
addr16
xchg
lahf
ret
cwtl
clc
stos
inc
inc
fldenv
pop
int
pop
ror
insb
jp
jo
jecxz
adc
call
push
inc
addr16
fnstenv
xchg
cmp
ljmp
fstp
daa
sub
stos
int
shlb
jo
out
sub
divb
stos
sbb
pushf
pop
add
rol
jle
mov
adc
mov
fists
inc
cmp
ljmp
pop
inc
insb
aam
cwtl
sbb
test
pusha
xor
cmp
inc
mov
imul
fs
jnp
mov
scas
movsl
adc
fcmovnu
inc
pop
push
and
and
pop
scas
jb
xlat
cmp
cmpsb
cmp
pusha
xchg
cmpsl
and
data16
or
lret
aam
cld
jecxz
push
jge
call
jo
cmpsb
push
adc
popa
push
rcrb
inc
sub
cltd
pop
jmp
es
je
outsl
sarl
pop
mov
shlb
xor
jbe
outsl
fistpl
mov
cmc
nop
cmp
lea
and
adc
hlt
rolb
sbb
mov
lret
sbb
ja
pop
and
pop
shlb
push
sahf
cwtl
insb
cmp
mov
pop
fwait
andb
jne
imul
mov
add
pop
cltd
ljmp
lock
arpl
std
xor
push
stos
repnz
test
pop
fmull
popf
data16
add
cmp
sbb
inc
lcall
scas
mov
xlat
inc
add
jmp
ret
fistl
imul
call
pop
ljmp
push
xchg
inc
cmpsb
cli
cmpsb
mov
push
cmp
jmp
and
mov
inc
dec
jbe
and
pusha
add
popa
pop
pop
or
mov
mov
push
lods
or
push
ljmp
cltd
cmp
testl
inc
cmp
imul
cmp
jecxz
pushf
dec
and
bound
pusha
popa
mov
and
lea
and
sti
inc
sub
or
in
aam
in
inc
mov
jo
fistl
sbb
cmc
inc
adc
sbb
imul
addb
mov
mov
cltd
js
mov
push
mov
mov
pop
and
jns
aam
jge
inc
int3
mov
xchg
pop
mov
or
ljmp
cmp
inc
sub
sbb
ja
insb
push
int3
sbb
xchg
daa
xorb
adc
mov
sbb
add
stos
jecxz
fs
cs
lcall
jge
jmpw
cmc
xchg
jo
mov
rclb
xchg
fwait
shl
push
jne
lods
roll
dec
sub
punpcklwd
in
mov
int3
cwtl
loop
xor
ror
mov
pushf
stos
add
fnstcw
sahf
cmp
test
mov
cmpsl
je
imul
mov
test
inc
es
lea
mov
xchg
ficoml
fldz
sbb
inc
fcoml
in
mov
cmp
shl
pop
adcl
sbb
adc
mov
jmp
pop
test
lcall
inc
add
ljmp
mov
ds
imull
xor
arpl
pop
pop
negl
call
inc
jmp
fldenv
add
mov
add
movsb
call
jbe
int
xlat
pop
icebp
iret
shll
xchg
mov
lcall
clc
add
add
or
enter
mov
mov
dec
adc
dec
push
pop
rcrb
mov
clc
pop
je
cld
mov
mov
jmp
jp
loope
mov
addl
xchg
popa
xchg
stc
ret
push
lcall
xchg
std
dec
test
sub
xadd
loopne
mov
imul
mov
arpl
dec
bound
cmp
sbb
es
jbe
mov
sub
or
cmc
sub
sub
xchg
out
aaa
lcall
pop
mov
test
lret
imul
fucom
pop
testb
hlt
adc
push
push
cmp
mov
out
sbb
mov
fcomps
stos
cwtl
repz
imul
outsb
and
mul
idivl
jo
ret
push
scas
cwtl
ret
rolb
pop
test
js
push
gs
icebp
pop
fiaddl
cli
stos
cli
cmp
lods
cmp
dec
ds
das
jle
xchg
adc
icebp
pushf
xor
jmp
and
xor
test
push
dec
mov
or
dec
enter
sub
pop
jmp
adc
mov
push
dec
dec
pop
mov
int
aad
mov
xchg
inc
cmpsl
add
fiaddl
test
inc
out
lret
sub
jl
addr16
js
add
jb
shll
das
sub
adc
inc
xor
fs
sub
adc
pop
enter
and
test
mov
cmp
js
hlt
inc
loope
pop
addb
sbb
repnz
loopne
inc
cmpsb
xor
es
arpl
mov
adc
pop
leave
es
add
ret
mov
call
mov
rorb
adc
jo
add
inc
enter
cltd
inc
push
mov
fcoms
rclb
movsb
sbbb
jge
pop
fcomps
jae
lea
jge
mov
ljmp
dec
mov
cld
cmpsb
addr16
sbb
in
cmp
mov
jno
or
lcall
js
int
cmp
repz
iret
jo
jmp
add
mov
dec
das
mov
cmp
js
xchg
inc
lock
push
pop
cwtl
sarb
popa
mov
subb
pushf
xchg
into
sbb
pop
rolb
daa
sar
aaa
inc
shlb
inc
sbbl
jae
adc
sub
shl
dec
and
lret
mov
fiaddl
cli
and
mov
lock
out
pushf
push
pop
add
jg
cmp
test
add
mov
iret
mov
ljmp
inc
sbb
fiaddl
push
push
sbb
cmp
insb
pop
add
inc
aaa
mov
lods
ljmp
jg
loopne
and
orl
ljmp
int
sahf
popa
pop
cwtl
inc
into
or
mov
inc
cltd
xchg
js
mov
push
addr16
loopne
sub
dec
or
test
testl
xor
daa
or
cli
lock
pop
add
mov
dec
push
shlb
pop
inc
fisubl
sbb
mov
jb
loop
call
leave
dec
pop
test
mov
sahf
fwait
cltd
pop
rolb
lods
xchg
xchg
int
ds
cs
push
scas
push
mov
loopne
aam
push
test
mov
jns
dec
fsubrl
xchg
test
in
cmp
jae
inc
pop
push
mov
pusha
inc
setle
hlt
scas
testb
inc
mov
imul
add
mov
and
add
cmc
mov
stc
dec
mov
cmp
sbb
xlat
call
fadds
cmpsb
dec
cli
adc
jp
jmp
sbb
push
into
cs
in
addr16
jl
clc
and
mov
pop
pop
loope
and
out
dec
pop
das
inc
mov
xchg
stos
lea
clc
or
inc
pop
adc
testb
push
lcall
cli
test
mov
scas
imul
mov
leave
nop
fadds
cmp
shr
pop
jge
mov
mov
fsubl
test
lods
cmpsb
cmc
xor
stos
xchg
mov
andb
out
push
pushf
and
xchg
sbbl
call
fisubrl
pushf
push
mov
pusha
xor
and
inc
cmp
mov
xchg
xchg
push
arpl
stc
mov
stos
int3
push
inc
cmc
inc
test
ljmp
subl
push
xchg
dec
in
movsl
xor
adc
pop
pop
mov
pop
fsubrs
add
aad
movsb
add
out
mov
cmpsb
sub
mov
xor
lods
ja
pop
rcrb
frstor
pop
repnz
fnstsw
pop
push
xor
into
sti
ret
or
push
ljmp
xor
mov
add
add
sbbl
jo
pop
mov
jg
gs
stos
es
lea
push
fildl
rcr
push
in
and
cmpsl
aas
add
test
frstor
mov
pushf
cmp
lret
cmp
jecxz
cmpsl
shlb
xchg
inc
mov
mov
lea
jg
jge
sbb
push
mov
fnclex
add
mulb
out
mov
sub
mov
fdivs
fisttpll
inc
pop
mov
adcb
cmc
cmp
test
lods
mov
cmpsb
sti
loope
pop
aad
sbb
sub
jge
pusha
mov
and
fxtract
xchg
or
inc
call
pusha
rol
aad
lods
jp
ret
cvtdq2ps
adc
in
push
test
pop
mov
xchg
inc
jb
lret
adc
sbb
or
and
dec
pop
ret
and
mov
sbb
inc
or
cwtl
insl
lods
hlt
es
and
adc
shlb
xchg
fdivs
adc
popa
mov
jle
mov
xor
xor
and
das
inc
add
ret
mov
mov
dec
les
mov
or
rcr
dec
sti
adc
pop
mov
scas
sbb
sbb
cmp
add
test
dec
dec
cli
sub
add
loop
clc
push
test
scas
xchg
js
cmp
test
popa
sbb
push
pop
loopne
sub
repz
inc
and
mov
cltd
sbb
fs
and
jle
imul
cs
lds
inc
das
stc
mov
sub
scas
mov
cli
int3
mov
dec
cmpsb
push
icebp
das
mov
std
xor
roll
xchg
hlt
decl
clc
dec
adc
xchg
pop
loopne
xchg
insb
fs
popa
out
iret
icebp
push
dec
and
mov
adc
inc
sub
sbb
icebp
adc
mov
rol
add
lahf
mov
cmpsb
hlt
adc
aaa
ja
inc
xchg
sti
pop
sbb
inc
push
xchg
out
call
arpl
pop
rolb
shrb
or
stc
xor
scas
inc
add
add
pop
popa
xor
sbb
out
pop
lahf
push
test
push
dec
call
jmp
test
xchg
arpl
imul
scas
inc
mov
fistpl
inc
xor
loopne
mov
lret
arpl
iret
push
and
pop
jno
push
and
mov
rolb
mov
lahf
sub
mov
and
jmp
xor
scas
sbb
popa
popa
inc
inc
cmp
mov
orl
dec
scas
inc
or
push
in
inc
mov
inc
into
xchg
out
mov
inc
xchg
sbb
inc
sub
add
cld
cmpsb
loop
cmpsl
shr
fstl
push
and
adc
mov
test
call
xchg
mov
mov
cmp
mov
mov
adc
ja
je
hlt
add
and
adc
mov
dec
sahf
push
adc
out
and
lods
adc
pop
test
push
cmp
adc
mov
dec
and
les
scas
mov
std
pop
cmpsl
es
jg
stos
push
inc
loope
test
je
pop
adc
loop
cwtl
sub
orb
jg
push
dec
mov
mov
js
daa
fisttpll
in
mov
adc
mov
mov
inc
sbb
mov
add
cmc
add
push
pop
sti
js
xor
dec
and
push
inc
pop
sbb
je
mov
xchg
mov
mov
addb
lods
int
pushf
into
mov
and
icebp
push
lret
stos
mov
xchg
mov
popf
lcall
testl
xor
push
imul
xlat
adc
adc
mov
addr16
ljmp
call
or
mov
test
mov
pop
out
call
out
add
dec
iret
repnz
popa
mov
or
test
lods
les
test
aad
sbbl
cwtl
stos
movsb
push
pop
int
push
push
sbb
push
ret
mov
pop
stos
dec
jge
inc
mov
rolb
jb
inc
pop
xlat
mov
nop
out
or
icebp
mov
test
leave
ficoml
mull
pop
pushf
ja
ror
sti
xchg
jle
inc
addl
bound
testb
push
jecxz
push
xor
mov
inc
xchg
pusha
scas
call
std
fistpl
jp
xchg
add
arpl
cli
sarb
mov
insb
aaa
popaw
sub
mov
pop
insl
inc
shll
add
push
mov
sbb
fcom
dec
fisttpl
lock
mov
lods
cmp
push
pop
hlt
lods
add
testb
push
mov
cwtl
rcrb
or
mov
mov
aam
arpl
inc
icebp
xchg
cmpsl
dec
mov
add
inc
jge
cwtl
pushf
repz
stos
dec
jmp
inc
jecxz
lea
ficoml
inc
cmpl
xchg
mov
jle
pop
inc
call
ljmp
xchg
test
inc
sbb
int
inc
cmp
nop
hlt
xor
cmp
mov
dec
mov
cwtl
lock
fiaddl
inc
lret
lods
adcb
nop
cmp
in
add
jge
push
sbb
mov
cmc
imul
mov
in
imul
fwait
adc
pop
testl
dec
std
jns
rclb
dec
mov
lods
sti
decb
cld
rolb
inc
mov
in
adc
arpl
mov
movsb
mov
pushf
mov
into
xchg
call
xchg
jecxz
sbbb
and
mov
push
aas
prefetcht0
mov
movsl
jo
cmp
inc
add
ljmp
add
pop
jle
dec
push
fmull
inc
cmp
bound
fcmovnu
mov
cwtl
in
dec
add
push
mov
push
adc
idiv
mov
or
shlb
push
sbb
adc
popf
mov
inc
mov
inc
movsl
mov
test
mov
jo
adc
or
cmp
mov
lods
inc
lcall
aad
rcrb
sti
nop
call
dec
xchg
cmp
add
pop
test
mov
xor
add
push
imul
cld
test
mov
pop
push
inc
mov
pop
or
cmpsb
mov
sarl
scas
jns
imul
pusha
pop
pusha
test
pop
pop
jg
sbb
fdivr
cmpsb
and
out
mov
ror
arpl
loope
imul
or
icebp
jns
imul
or
loopne
fsubs
xor
sub
out
test
js
push
inc
insb
fcompl
fmuls
mov
int
mov
cltd
call
int
out
es
push
in
pop
mov
pop
dec
loopne
fs
pop
hlt
repnz
xorl
mov
sbb
add
and
pushf
jge
outsb
push
pusha
es
sti
mov
mov
inc
pop
and
imul
repnz
pop
add
test
cmpb
adc
jg
adc
arpl
clc
or
mov
js
out
mov
fdivp
test
inc
test
add
xor
xchg
stos
in
fsubrl
call
sbb
shrb
jg
jg
popa
jp
adc
jecxz
test
call
push
pop
stos
xchg
lods
loope
inc
jge
and
xor
frstors
ljmp
adc
popa
push
lock
out
pushl
jb
leave
cmp
inc
loop
xchg
cltd
repz
pop
aas
mov
test
push
sub
add
adc
or
mov
mov
stos
adc
sahf
pop
icebp
out
push
mov
mov
xor
movsb
lret
push
pop
xor
mov
ss
das
test
or
imul
roll
jmp
sub
sub
xor
popa
arpl
aad
arpl
aaa
add
xchg
stos
and
sub
xbegin
push
or
xchg
jns
inc
fwait
inc
loope
mov
imul
cmp
jge
ss
sbb
ficompl
lods
and
inc
data16
pop
mov
mov
das
cmp
xchg
outsb
jmp
fnsave
mov
andb
addr16
jbe
rcrb
mov
movsb
mov
mov
out
or
adc
sahf
fs
aas
les
pop
stos
sub
adc
xchg
sbb
or
add
and
shll
stos
in
jb
mov
bound
aad
in
fwait
push
pop
sub
rcr
js
cmp
out
add
pushf
hlt
push
in
test
fstps
adcb
inc
jb
sub
pop
loopne
or
fscale
aam
mov
add
cmp
cmp
fsubs
scas
pop
pusha
pusha
inc
adc
in
fscale
test
jne
lret
es
ja
add
cmp
adc
lds
lretw
xchg
and
push
jge
jb
mov
popa
add
sbb
insl
jecxz
mov
fwait
out
or
ss
loopne
mov
imul
push
jg
fsubrs
sbb
lcall
dec
stos
in
sub
and
inc
lds
pop
sub
jg
push
fadds
inc
sbb
repnz
aad
or
scas
inc
xchg
test
sbb
mov
adc
je
sahf
mov
call
hlt
sub
jge
lods
sub
mov
mov
cmpb
inc
cmpsb
clc
loope
jns
xchg
stos
es
mov
inc
stos
loope
mov
andl
test
mov
idivb
pop
es
es
clc
mov
fs
in
int
or
push
xchg
test
stos
inc
popa
into
int3
loopne
inc
loope
lods
std
fistpl
cmp
pop
test
xchg
outsb
xor
inc
sbb
loopne
or
jecxz
inc
add
mov
lret
jecxz
sub
dec
pop
add
jge
pop
call
add
imul
pop
mov
fisttpl
aaa
push
jmp
sarl
push
stos
mov
ds
sbb
sbb
pop
sbbl
js
mov
mov
xor
push
xor
cmpsb
xchg
pop
rorb
xchg
jno
gs
inc
enter
scas
xor
les
and
push
cmp
cld
lds
push
pop
dec
mov
or
xchg
sub
hlt
pop
mov
cld
mov
mov
and
lret
mov
mov
call
pop
adc
push
inc
sbb
addr16
gs
jno
inc
cltd
adc
insb
push
pop
cmp
movsl
lcall
inc
mov
push
int3
cmpsb
imul
pop
adcb
in
mov
add
leave
test
repnz
repnz
iret
mov
pop
lea
iret
subb
popf
dec
fnstcw
xchg
jp
inc
mov
mov
push
mov
leave
sub
pop
rorb
je
sub
lea
or
fcmovu
sub
leave
cmp
rorb
int
sub
mov
popf
add
cmp
mov
mov
test
xchg
fimull
cs
shrl
cmpl
test
popa
addr16
mov
fnstcw
out
cmp
out
xchg
popf
test
outsb
inc
shlb
or
sbb
popl
push
iret
inc
sub
in
aam
jnp
sub
mov
pop
std
xchg
sub
icebp
jbe
mov
and
jecxz
sbb
iret
loope
out
xor
xchg
data16
push
fidivl
and
stos
call
hlt
inc
cmp
sub
pop
nop
inc
testl
mov
pop
and
push
fadds
push
outsb
push
pop
mov
filds
test
cmpsl
stc
mov
arpl
testl
sbb
jl
dec
test
fstpl
clc
cmpsb
out
mov
stos
or
fsubs
pop
dec
ds
dec
js
jmp
fsts
dec
daa
call
inc
ret
enter
js
rcrb
cmp
mov
push
lods
insl
negb
mov
shlb
jg
inc
addl
inc
out
cmp
pusha
mov
dec
push
add
xchg
sbb
imul
sbb
ret
or
arpl
lret
stos
inc
js
adc
mov
inc
mov
mov
cli
jecxz
jb
sbb
xor
loopne
rorb
aaa
push
jg
push
cmp
pop
push
xor
jl
lods
insb
arpl
es
lret
clc
xor
inc
adc
shlb
mov
add
add
xorl
pop
mov
mov
add
insb
mov
pop
fldcw
add
leave
in
push
mov
mov
or
mov
mov
push
rorb
ret
test
dec
loopne
fimull
pop
push
xor
add
out
add
mov
fdivs
jb
ret
testb
imul
xor
jae
sti
pushf
dec
mov
shr
aam
xchg
mov
test
sbb
repz
arpl
imul
mov
aas
and
movsb
adcl
enter
pop
jmp
clc
popa
inc
in
js
dec
or
mov
js
push
aad
insl
and
mov
outsl
jecxz
jnp
jl
fs
mov
div
cmp
test
sti
popa
lret
xchg
jb
jecxz
push
dec
ds
mov
push
test
jle
lret
lahf
inc
test
or
push
mov
jne
dec
ljmp
aad
out
ljmp
mov
fisubrl
repz
loope
cwtl
scas
divl
lods
pop
int3
xchg
push
sub
xchg
cltd
rol
xor
sbb
xorl
sbb
inc
fcomps
adc
add
xchg
idivb
imul
enter
mull
iret
adc
sarb
gs
mov
inc
ljmp
mov
js
inc
fsubrl
dec
jnp
mov
scas
call
leave
dec
pushf
cltd
movsl
fs
imul
pusha
dec
mov
loopne
pushf
or
in
and
push
addr16
sub
pop
aam
mov
xor
jg
cmp
adc
mov
mov
jle
push
cmp
pop
out
in
in
mov
or
mov
aam
stos
hlt
mov
ljmp
cmpsl
unpcklps
loop
pop
jge
sbb
pop
dec
stos
pop
shlb
xchg
arpl
mov
xor
and
cmp
jbe
out
popa
push
sbb
cs
ret
inc
jmp
sbb
dec
cmpsb
das
frstor
lock
sub
sbb
movsl
pop
test
cmp
mov
push
mov
mov
add
cmpsl
mov
lahf
xchg
inc
adc
outsb
sti
pop
data16
popa
iret
push
mov
pop
dec
shl
daa
call
pop
out
hlt
mov
fistpl
daa
mov
mov
mov
pushf
add
roll
or
push
fsubs
sbb
cmp
es
jge
mov
fistpll
sub
ret
test
push
sbb
shll
arpl
mov
pop
push
stos
sub
fistpl
aas
fs
add
lods
pop
andl
test
inc
scas
fadds
xor
pop
push
adc
cmpsl
mov
ds
jno
pop
xchg
mov
lods
shrb
cmp
push
inc
push
and
out
jno
cmpsl
cmc
push
pop
or
ljmp
xchg
pop
pushf
push
aam
adc
loopne
jecxz
hlt
xor
push
test
leave
add
cwtl
enter
cld
and
decl
clc
adc
and
lret
pop
test
sub
adc
insl
inc
and
mov
in
cs
and
or
pop
nop
addr16
sbb
push
sub
and
pop
cmpsl
pop
add
jnp
loope
imulb
orl
push
js
jle
filds
push
sbb
subps
and
dec
mov
inc
jns
mov
adc
xchg
in
or
xchg
sub
xchg
sahf
pop
repnz
inc
dec
stos
pop
imul
adc
mov
js
mov
or
mov
bound
fcoml
lods
shrl
outsb
mov
or
mov
ret
les
sbb
mov
cmp
mov
sbb
ficompl
xchg
ficoms
pop
lock
mov
adc
std
in
sub
mov
test
repz
inc
in
enter
adc
xor
jg
xor
cmp
in
pop
inc
and
ja
xchg
addl
std
push
fbstp
cmp
adc
and
imul
xor
cmp
lret
mov
movsb
lcall
pop
xchg
test
fnstenv
adc
inc
jge
sbb
push
and
add
lcallw
mov
pushf
add
sub
hlt
xlat
hlt
sub
inc
or
fdivl
sbb
cmpl
shll
mov
shrb
arpl
xchg
int
mov
pop
rol
stc
mov
pop
arpl
sbb
and
adcl
pusha
loopne
iret
cmpsb
ja
arpl
mov
je
dec
nop
pop
pop
and
mov
mov
fidivl
inc
push
dec
pusha
ljmp
xchg
and
push
mov
jmp
test
cwtl
out
sbb
sti
inc
lea
dec
mov
jl
adc
test
sub
dec
pop
jg
sub
retw
int3
add
std
stos
imul
jmp
repnz
pop
sub
stos
adc
test
cltd
aam
pop
adc
clc
outsl
pop
mov
dec
repz
cmp
in
add
adc
add
lods
mov
sub
cmp
sub
cmc
fld
cmpl
rcrb
stos
inc
sub
into
fdivrs
pusha
int
in
data16
aam
data16
inc
pop
adc
repnz
fs
test
insb
lret
xlat
push
or
inc
fnstsw
ret
push
rol
sarl
sti
into
mov
cmovb
test
es
test
adc
dec
sarl
inc
les
cwtl
pop
add
nop
lcall
or
fistpll
mov
fcoml
enter
mov
push
ret
stos
mov
scas
push
mov
divl
out
arpl
dec
cmp
div
mov
roll
out
inc
mov
push
mov
aam
rcl
cmp
stos
jecxz
jno
xor
in
and
ljmp
in
imul
lods
shrb
imul
pop
mov
movl
pop
stc
cwtl
lcall
pop
push
dec
sbb
push
mov
inc
decl
in
jo
arpl
call
mov
js
push
sbb
push
xlat
fcompl
pusha
pop
mov
and
lahf
movsl
imulb
rclb
xchg
stos
and
in
and
push
xchg
loope
scas
gs
rorb
jnp
int3
mov
jno
adc
push
or
movsb
and
mov
push
fs
push
movsl
leave
call
stos
or
ja
fdivrl
sub
divb
mov
andl
lods
scas
into
adc
je
ficompl
adc
ds
scas
gs
cwtl
add
push
in
jge
mov
xchg
pop
imul
pop
push
push
inc
leave
dec
loopne
nop
cltd
loope
rolb
repz
int
pop
sub
scas
pushf
lods
fs
jne
lahf
icebp
aad
cwtl
ljmp
add
ss
and
imul
mov
dec
mov
out
push
imul
imul
or
sbb
inc
xchg
in
loopne
cmpsb
ret
mov
mov
adc
stc
mov
add
add
adc
mov
inc
mov
rolb
sbb
push
andl
bound
mov
bound
sub
adc
stc
call
add
in
pop
mov
hlt
cmp
mov
adc
fs
adc
loope
xchg
std
cmc
add
rcrb
jns
addb
pop
mov
ja
loopne
sahf
jmp
adc
sbb
cmc
clc
iret
add
cmpsb
hlt
add
jg
cwtl
lret
jno
pop
and
pop
adc
or
sbb
das
ret
in
bound
or
add
sbb
inc
ret
test
sbb
sbb
jg
cmpsl
ret
cmpb
arpl
or
mov
outsb
push
mov
sbb
mov
sub
mov
scas
int3
cwtl
push
shrb
in
ret
cmp
inc
mov
cmpsb
cwtl
inc
dec
fadd
into
mov
cltd
lock
or
adc
or
in
std
lret
into
cmpsb
jno
in
mov
push
push
in
cmp
mov
aaa
test
outsb
negl
sbb
jno
sbb
fcom
stos
inc
lds
sti
pop
mov
inc
mov
mov
iret
or
mov
mov
xchg
pop
mov
mov
pop
push
lret
rcrb
xor
push
sub
and
pusha
pop
int3
call
mov
in
cmpsl
insb
jmp
adc
gs
mov
fdivl
push
mov
addr16
out
dec
mov
and
stos
or
and
in
adcb
add
push
cmp
stc
stc
pushf
insb
adc
mov
push
add
sarb
sub
outsl
pop
cli
pusha
movsb
xor
sub
fldlg2
jl
cwtl
iret
or
push
xor
pop
xchg
adc
inc
xor
jge
sbb
aad
cmp
push
mov
push
mov
add
inc
adc
cmp
test
movsb
push
insl
pop
je
cmp
mov
cmp
or
mov
movsb
inc
xchg
cwtl
shlb
jno
ret
jbe
xchg
pop
dec
cmc
mov
inc
sahf
or
push
xchg
in
loope
xor
inc
push
cltd
mov
aam
sti
out
adc
pusha
push
ja
pop
gs
add
stos
outsb
inc
leave
fcom
sub
dec
jb
or
outsl
ljmp
faddl
xchg
jns
popa
pop
jge
ret
push
xor
pop
outsl
jmp
add
mov
les
pop
int
push
into
sub
cmp
push
pop
cltd
inc
mov
cmc
mov
dec
cmc
es
jg
mov
add
add
les
popf
addr16
dec
adc
sbb
add
subl
pop
mov
inc
scas
lahf
clc
inc
dec
mov
call
test
call
rolb
cs
jge
sbb
mov
push
inc
jmp
dec
push
sbb
inc
jle
and
mov
lea
in
fisubl
pop
sub
adc
mov
in
test
xchg
xchg
mov
pop
push
mov
xor
mov
mov
jns
sub
cli
xor
pop
sbb
int
insb
out
pop
lret
adc
popa
mov
bound
sub
xchg
lods
lods
mov
xchg
push
in
fnsave
int
push
cmp
add
in
adc
daa
mov
fdivs
lds
mov
ljmp
adc
popf
scas
lock
xor
in
inc
shlb
mov
fsub
scas
cmp
popf
repnz
arpl
inc
sub
mov
ficomps
cmpsl
out
pop
pop
in
sti
rorb
xchg
pop
mov
push
sbb
cmc
pop
fsts
aaa
nop
lret
jnp
xchg
push
fsubrl
sbb
cli
outsb
clc
fadds
mov
xor
call
pop
mov
push
add
dec
adc
outsb
mov
das
stos
jae
mov
dec
cmp
ds
sar
hlt
ljmp
push
daa
push
pop
sarb
adc
xor
hlt
mov
scas
mov
inc
or
cwtl
in
jnp
jg
dec
xor
in
dec
test
ret
pop
repz
add
cld
inc
cmp
mov
enter
test
xchg
or
out
fs
je
xchg
mov
add
cli
inc
lret
sub
imul
or
data16
mov
mov
orb
sbb
add
cmp
and
mov
sarl
cmp
dec
or
mov
sbbl
hlt
shll
insb
scas
sbb
xchg
push
andb
test
movsb
repz
adc
jmp
mov
mov
adc
inc
ds
in
xor
xchg
dec
push
mov
jb
pushf
out
xchg
pushf
lods
cmpsl
test
repz
dec
popf
and
push
and
hlt
daa
stos
test
adc
mov
mov
inc
imul
mov
mov
mov
lret
out
in
push
adc
pop
sbb
das
popa
rolb
sbb
push
dec
mov
jl
mov
mov
mov
xchg
and
pop
addr16
das
jg
pop
cmp
and
cmp
fsts
push
dec
xchg
cmp
add
or
lret
fstp
mov
or
enter
fdivp
jl
rorb
data16
cmp
js
jge
fdivl
into
add
and
in
and
add
repz
jnp
xchg
or
scas
xor
mov
fcomps
xchg
popa
test
in
movsb
adc
inc
push
jge
js
cltd
mov
scas
jmp
gs
pop
dec
pop
int
push
fs
hlt
outsl
inc
push
xor
adc
pusha
add
cmp
ds
js
stos
inc
and
sub
xchg
call
jl
outsb
jmp
jnp
fwait
mov
pop
inc
clc
test
mov
in
jmp
jmp
cld
and
push
scas
cld
pop
sarb
add
xor
xor
jge
adcl
shl
mov
popf
add
stos
and
cwtl
push
pmaddwd
dec
xchg
xor
and
dec
lcall
and
mov
jl
add
mov
cwtl
js
add
idivl
mov
adc
cld
das
fisubrs
ror
push
adc
testb
push
jae
popa
in
inc
ficoml
fbld
cmc
inc
push
jl
push
adc
loope
cwtl
fdivrl
inc
xchg
mov
std
push
adc
cmpsb
sub
fsts
cmp
mov
je
mov
cmpsl
push
xor
subl
xchg
lcall
mov
lds
pusha
test
fdivs
sub
adc
inc
test
push
jp
hlt
mov
add
sahf
je
cmpsl
ficompl
das
les
clc
jecxz
test
mov
daa
arpl
popf
fidivrl
popa
inc
cwtl
mov
lea
mov
and
inc
outsb
mov
fs
aam
js
or
cs
aaa
push
lret
ljmp
adc
push
cmpsl
jg,pt
insb
push
mov
cli
cmpsb
lret
pop
sbb
ss
lahf
push
jg
loopne
inc
pop
mov
jecxz
fistpll
push
push
mov
xchg
jno
and
jge
cmp
loope
jo
sub
pop
jns
adc
fnstsw
loop
fs
push
pushf
shlb
adc
insl
adc
pop
and
icebp
push
lahf
call
stos
add
test
mov
ret
add
dec
roll
cltd
inc
xchg
cmc
cmp
push
fdiv
in
fnstsw
iret
mov
dec
and
cltd
fld
inc
out
outsl
mov
pushf
movsb
out
add
testb
sbb
cmpsb
int
stos
push
pop
push
and
out
xchg
mov
ds
lcall
mov
hlt
push
cmp
in
pusha
sub
sbb
mov
das
loope
jecxz
gs
lock
jmp
ficoml
inc
jno
mov
popa
jb
push
xor
mov
daa
jge
adc
pop
lret
mov
lea
cmp
sarl
adc
test
out
jl
hlt
into
test
loope
xorl
mov
jmp
addr16
pop
popa
adc
pop
sbb
inc
lock
adc
cli
or
push
push
cwtl
pop
sub
mov
mov
pop
cmp
xchg
inc
insb
punpckhbw
negl
pop
jg
lods
gs
jg
pop
cmp
sbbb
push
push
sub
jb
ffree
int3
pop
sbb
scas
sbb
pop
sbb
ret
sbb
adc
inc
pop
jb
fs
push
popa
jne
leave
les
jg
pusha
inc
pop
jp
test
xchg
cwtl
adc
or
int3
scas
jno
pop
and
mov
ljmp
xor
test
cmp
pusha
jle
xchg
add
adc
int3
mov
js
popa
scas
or
jge
jne
in
dec
inc
pop
out
repnz
mov
adc
leave
das
sub
mov
xchg
int
icebp
push
mov
xor
add
ljmp
sbb
in
sti
lods
jno
idivl
xchg
jl
push
dec
mov
js
lock
push
loopne
scas
or
xchg
and
adc
xor
adc
leave
pop
inc
test
jp
fidivrs
cmp
popa
and
outsb
fiaddl
cltd
push
cmp
popa
push
and
fs
adcb
jmp
pop
lcall
js
lods
or
mov
test
or
mov
push
sub
mov
mov
aas
mov
in
stos
cmp
add
inc
mov
out
in
repnz
lcall
imulb
mov
inc
jp
fists
pushf
and
sarb
sub
mov
cmc
fs
frstor
inc
lahf
sahf
hlt
adc
mov
call
cli
lods
push
inc
jle
inc
sarb
notl
nop
inc
xchg
add
add
call
or
and
push
adc
das
jne
adc
push
mov
filds
mov
mov
iret
push
fisubl
jg
adc
push
xchg
push
addb
push
hlt
stos
push
nop
mov
and
or
nop
inc
mov
int
adc
mov
arpl
pop
fsubs
daa
repnz
ja
iret
sbb
lret
fcoml
and
jns
addr16
cltd
pop
fistpll
mov
cli
push
jge
adc
mov
mov
sub
fcmovu
stos
fs
mov
or
imul
in
jl
jbe
cmp
mov
xchg
pop
lahf
push
pop
inc
push
nop
dec
lcall
mov
jo
clc
lret
jne
mov
add
call
pusha
cltd
lods
mov
mov
xchg
cmp
pop
shl
add
bnd
adc
sbb
pop
jg
xchg
hlt
add
xchg
inc
aaa
stos
inc
sub
fadds
mov
push
stos
lods
pushf
dec
add
stc
mov
gs
mov
aas
loope
mov
ljmp
pusha
fistl
jbe
test
es
daa
jp
fidivs
loopne
push
lahf
sbb
aad
push
insb
push
pusha
mov
clc
mov
mov
cmp
cmp
adc
fs
insb
pop
lret
in
xchg
jb
and
inc
mov
jbe
js
jae
popf
sub
cli
js
and
clc
imul
int
out
push
fists
pop
dec
add
testb
dec
sbbb
iret
mov
in
sti
cmp
mov
repnz
pop
stos
movsb
lret
hlt
mov
cmp
add
sarb
js
and
ficomps
inc
pop
inc
adc
ficompl
sbb
adc
cmpb
popa
rep
add
push
rcr
mov
cltd
pushf
and
mov
nop
push
jl
sub
inc
std
or
popa
bound
ss
js
push
mov
inc
cmpsb
and
addl
cwtl
cmp
add
pop
mov
sub
jbe
test
dec
jg
push
mov
add
mov
inc
inc
inc
xchg
subl
mov
pop
mov
cmp
push
mov
loope
cwtl
xor
jnp
js
lock
pop
cmpsl
xor
sub
cmp
cmp
push
sbbb
cmp
repnz
mov
call
movsb
shrb
inc
scas
sbb
sub
std
and
popa
inc
pop
cmp
xchg
xchg
cmp
pop
out
std
pop
xor
addr16
pop
scas
dec
adc
jmp
and
inc
pusha
mov
popf
cmp
ja
rcrb
aam
mov
aaa
adc
jp
dec
sub
cli
adc
movsl
icebp
addl
push
pop
call
jecxz
push
sub
dec
jle
or
pop
xchg
pop
loope
cmc
mov
pop
pop
xor
mov
arpl
mov
pop
in
push
stos
repnz
add
add
into
dec
add
xchg
mov
jbe
popa
mov
test
push
add
or
sub
push
ljmp
add
repnz
mov
inc
test
into
loop
pop
add
bnd
in
movsb
pop
push
filds
es
test
dec
int
inc
lea
js
push
movsl
jns
inc
push
xor
js
aaa
in
dec
xor
cmp
sub
pop
icebp
pop
dec
sub
rcll
xchg
into
js
xor
inc
repz
in
std
or
and
and
and
push
jno
pop
fdivrs
outsb
fisubl
and
push
mov
adc
movsb
xor
inc
bswap
pop
nop
xchg
loope
inc
imul
jg
sub
inc
cmpl
pop
jge
hlt
mov
xchg
jo
cld
xchg
loope
insl
jmp
sub
lds
adc
ret
mull
xchg
int
add
enter
les
jp
and
xchg
inc
dec
in
dec
cwtl
andb
lods
pusha
and
pop
dec
cmpsb
push
pop
call
pop
shrb
and
pop
push
stos
call
flds
and
dec
shrl
mov
sbb
pop
inc
pop
and
sahf
lods
notl
pop
ficoms
mov
aam
adc
shlb
imul
or
cltd
mov
hlt
inc
xchg
xchg
faddl
lea
ljmp
push
add
adc
hlt
int
jns
pop
sub
mov
imul
dec
mov
xchg
mov
mov
in
insb
mov
shl
or
std
daa
adc
jge
imull
clc
mov
cmpsl
dec
insb
out
lret
jo
cmpsb
adc
adc
push
lret
dec
jecxz
arpl
pop
shlb
sarb
js
and
pusha
push
ljmp
inc
call
insb
ret
pusha
dec
push
fadd
push
je
pusha
pop
inc
divb
std
test
shlb
jge
pop
mov
pop
rclb
dec
and
dec
mov
inc
pop
or
in
cmc
jbe
xchg
fdivrs
jmp
dec
pop
push
popa
jne
push
iret
clc
adc
pop
jns
mov
mov
fadd
hlt
push
pop
fimull
stc
loope
push
add
pop
inc
mov
inc
mov
mov
dec
fldenv
sarl
pop
xchg
pcmpeqw
mov
xchg
inc
int
mov
pop
addr16
popa
xchg
call
adc
lods
rorl
push
stos
test
je
lds
pop
pop
cmc
push
add
push
and
sub
or
mov
testb
cli
push
lds
in
jge
hlt
inc
mov
adc
sbb
mov
sti
xor
jle
xchg
or
data16
and
popf
test
gs
cltd
inc
mov
fwait
cmc
sub
filds
mov
repnz
jecxz
pop
push
fadd
mov
push
mov
out
and
and
test
mov
rcll
push
mov
fadd
add
mov
jp
mov
push
xchg
js
and
inc
je
fstl
pop
ljmp
add
mov
pop
jbe
add
sbb
insl
cmpl
adc
mov
cltd
sub
push
in
push
test
sbb
mov
xor
mov
push
jns
in
xchg
in
scas
or
aaa
mov
or
sbb
outsb
cmpsl
hlt
stos
add
inc
ss
dec
pop
jae
mov
add
mov
inc
mov
fnstenv
push
daa
mov
dec
outsb
jecxz
inc
mov
adc
daa
and
sub
insl
inc
ret
popa
adc
cmp
sti
or
push
lret
mov
pop
std
mov
hlt
xchg
adc
pop
mov
insb
or
cmp
ds
push
imul
add
popa
scas
inc
dec
dec
mov
test
loope
jae
lea
int
lods
jns
rcrb
xor
inc
xchg
iret
xchg
test
cmp
lods
pop
lock
pusha
cmpsb
shll
inc
xchg
push
jno
rolb
aam
or
popa
mov
dec
mov
or
fwait
sti
adc
lds
adc
arpl
cld
negl
bound
rcrl
xor
dec
sbb
inc
in
enter
ret
test
pop
pop
push
mov
shl
push
test
jnp
das
or
loop
push
pop
push
pop
jo
mov
adc
call
mov
je
jmp
cmp
les
mov
js
lds
psubusb
and
enter
stos
fs
addl
outsb
inc
add
call
adc
fldenv
sbb
lods
jns
inc
imul
or
mov
add
fcoml
mov
push
sub
pusha
and
call
push
push
mov
xor
dec
mov
push
push
add
sub
lret
pop
cmpsl
loope
xchg
cli
enter
pop
sbb
pop
sub
jne
call
mov
out
add
out
je
cltd
xchg
pop
jb
sub
clc
jecxz
inc
pop
sbb
cmpsb
push
dec
insb
mov
xchg
sbb
pusha
in
aad
push
cmp
jle
dec
mov
sub
jmp
inc
jg
stos
stc
outsl
je
lahf
jmp
int3
cld
sti
loope
rcrb
push
enter
jg
fwait
aam
xchg
push
fwait
das
inc
or
inc
ret
aaa
lods
xor
jnp
mov
hlt
mov
in
fwait
bound
test
sbb
cmp
mov
cs
sbb
nop
outsl
inc
clc
ret
pop
jne
sbb
aad
push
test
repnz
sbb
mov
jge
push
rcl
jbe
out
popa
fidivl
out
ja
lods
mov
mov
cwtl
push
or
fadds
movsl
pop
out
mov
sbb
xchg
mov
aaa
scas
mov
push
lods
mov
xchg
xchg
ss
jbe
hlt
mov
jnp
ljmp
js
dec
mov
sahf
pop
clc
int
adc
les
sbb
sbb
ret
or
jge
mov
lods
out
stos
clc
fldcw
fsubl
lock
sbb
inc
push
loope
mov
and
stos
in
xor
sbb
in
inc
add
jge
dec
mov
mov
mov
or
mov
dec
ss
push
mov
push
lea
leave
pop
cmp
orb
popa
inc
jo
xor
pop
adc
add
popa
or
test
pushf
cmpsl
popf
mov
and
popa
adc
sbbl
pop
or
pop
mov
xchg
or
movsb
mov
mov
push
pop
pop
shrb
cmp
hlt
div
call
mov
shrl
in
cwtl
xchg
lods
xchg
hlt
adc
es
mov
enter
pushf
test
rcrl
adc
das
clc
movb
out
jo
and
and
movsl
pop
push
sub
mov
pop
cmp
mov
addl
jg
and
imul
mov
hlt
xchg
jl
outsl
in
mov
add
rolb
sub
loope
nop
ljmp
sub
mov
hlt
push
mov
add
mov
pop
out
push
cltd
cli
lods
adc
dec
push
inc
mov
push
scas
sbb
fs
sbb
dec
stos
xchg
insl
arpl
lods
push
aam
pop
loope
iret
sub
inc
sbb
int
or
es
mov
dec
mov
test
js
shlb
cmpsb
mov
sub
test
or
inc
icebp
data16
push
mov
mov
pop
outsl
xor
or
inc
cmp
loop
fldt
sbb
inc
and
jnp
or
pop
mov
and
lcall
lods
inc
outsl
mov
fisubrl
les
mov
sub
data16
sahf
outsl
adc
inc
scas
outsb
rolb
xchg
inc
cmpsb
xchg
add
jo
dec
xor
test
inc
mov
insl
rorb
negb
lret
jge
inc
mov
aaa
lods
jge
aad
insb
jl
mov
inc
sbb
or
int3
mov
push
sub
rcr
push
loope
inc
iret
inc
outsl
mov
pop
inc
jp
mov
mov
cmpsl
sub
dec
ljmp
enter
mov
dec
xchg
xlat
loopne
clc
mov
insb
mov
jl
lahf
test
shrb
jge
fs
xchg
xchg
popf
lret
dec
or
fs
out
rol
fsubs
fisubrl
pop
in
pusha
mov
iret
fldt
and
xor
xchg
adc
jg
push
out
inc
mov
stos
or
std
pop
ret
js
loop
inc
xor
sbb
push
es
xchg
push
fidivl
cmp
pop
cmp
mov
pop
xor
ds
lret
add
hlt
xor
test
andb
into
mov
mov
sub
repnz
incl
andb
jo
xor
mov
jmp
fimull
dec
cs
jecxz
add
rorl
fwait
dec
dec
arpl
sahf
jl
loope
popa
lods
orl
xchg
loope
dec
push
je
loop
data16
pusha
xchg
jno
ss
mov
stos
adc
sbb
add
fstps
jns
inc
cli
call
or
sbb
negl
and
inc
sub
xor
test
or
mov
add
out
sbb
cld
dec
movsb
push
sub
pusha
lods
push
inc
inc
lcall
ret
icebp
pop
rcrb
dec
daa
sti
sub
push
mov
adc
inc
test
ret
adc
fwait
out
cmpsb
fadds
inc
push
and
scas
stc
roll
ljmp
or
inc
and
cmp
jmp
lcall
and
in
sbb
xacquire
insb
cs
dec
sub
test
xor
pop
sbb
inc
and
mov
cltd
xor
fucomip
push
jl
cmc
incl
lret
adc
test
dec
ss
std
iret
push
iret
and
hlt
test
mov
out
divl
and
push
and
add
jle
sbb
aam
push
int3
ficompl
sbb
filds
pop
dec
inc
and
das
inc
mov
std
out
or
cmp
hlt
out
je
cmc
adc
xor
inc
xor
xor
cld
push
pop
pop
add
mov
mov
xchg
mov
dec
mov
mov
into
cli
std
mov
sub
cltd
repnz
push
testb
pop
push
pop
mov
mov
outsb
lea
mov
mov
clc
cmpl
xorb
xlat
movsb
inc
dec
lods
loopne
push
mov
fsubs
dec
sahf
in
dec
cmp
push
mov
adc
jmp
cltd
in
dec
adc
pop
jo
movsb
mov
ja
pusha
cmpsl
outsb
pop
in
insb
push
adc
sub
loop
jo
mov
stos
vaddsubps
sbb
out
subl
jns
insl
stos
arpl
repnz
and
cmpsb
push
jnp
dec
jmp
mov
imul
arpl
mov
aam
fmul
shr
movsl
push
clc
test
adc
gs
aam
jg
test
or
nop
ret
inc
cmp
jae
jecxz
push
xor
mov
pusha
pop
loopne
in
testl
mov
push
adc
jge
push
icebp
sbb
fidivl
mov
pop
mov
pushf
mov
outsl
ret
inc
andl
xchg
mov
push
ss
xchg
push
push
stos
inc
xor
mov
outsb
jo
movsl
stos
inc
cmpsb
roll
jo
lock
and
lea
and
addb
pop
or
mov
pop
mov
sbb
sbb
outsb
inc
test
or
pop
aam
cltd
fsubrs
cmp
pop
lcall
pop
sub
sub
mov
ret
mov
ds
sahf
inc
in
mov
pop
addr16
mov
adc
icebp
pusha
in
sub
pop
add
jns
pop
imul
xor
mov
cli
cmp
pop
lahf
fisttps
mov
repz
jns
inc
rcrb
je
repnz
lods
push
loop
mov
pushf
popa
push
fisubrs
ss
notl
cmpsl
lds
data16
outsl
clc
es
inc
fs
jge
addr16
repz
scas
mov
jne
mov
shlb
clc
test
mov
xchg
in
pop
dec
ret
add
sbb
popa
leave
dec
inc
and
hlt
pop
sar
pushf
roll
pop
inc
jnp
or
pop
mov
rcrl
or
jecxz
pop
aaa
push
outsl
stos
bound
and
cmp
in
dec
cs
adc
pop
mov
pop
and
jge
mov
popf
inc
lock
scas
xchg
insb
fisubl
jge
test
cld
cmc
popl
pop
xchg
or
push
mov
out
loopne
test
jns
add
cmp
inc
pop
int3
sarl
jo
mov
fisubs
sbb
outsl
inc
adc
and
lods
mov
ret
push
push
sbb
cmp
push
lock
loopne
ret
in
into
mov
insb
mov
push
mov
inc
into
mov
pusha
push
mov
push
pop
test
pop
push
pop
idivl
std
inc
inc
sub
test
rcr
fxam
flds
mov
ljmp
ljmp
flds
in
stos
repnz
int3
inc
mov
rcll
fnstcw
in
cmp
lcall
sub
lret
fildl
mov
mov
pop
fs
test
jecxz
daa
adc
xor
push
mov
das
jo
sti
mulb
lcall
and
mov
push
mov
pop
jno
rcrl
enter
clc
div
iret
es
aam
pop
idivb
into
push
jp
mov
scas
xchg
push
push
fwait
loopne
aam
test
push
mov
inc
lods
stc
popa
xchg
ficompl
ret
mov
lahf
mov
sub
mov
test
les
mov
mov
cwtl
mov
ja
adc
mov
imul
xor
adc
loope
cld
cmp
fiadds
or
xchg
mov
lcall
test
jns
sub
pop
push
mov
repnz
out
call
jp
pop
mov
testl
cs
xor
adc
pop
pop
sub
loope
rcll
call
mov
fdivs
decl
push
and
daa
inc
push
xor
lods
cmp
data16
stos
and
pushf
and
movsl
cmp
jge
fidivrl
push
int
or
mov
dec
das
cmpsb
mov
insb
sub
jbe
mov
pop
fisubrl
sub
sbb
ret
clc
out
les
das
mov
aam
add
cmp
cs
jecxz
mov
loopne
xchg
push
add
inc
sbb
int3
jne
jecxz
cmp
shrb
sbb
mov
sbb
int3
movsl
inc
jns
cmp
ret
test
mov
into
scas
jge
je
cmp
pop
and
outsl
xchg
mov
add
adc
xor
fldcw
mov
movsl
push
pop
pusha
ffree
movsl
lods
sbb
push
scas
dec
jge
ds
inc
gs
inc
jg
mov
fmull
xlat
push
clc
sub
int
mov
je
mov
inc
xchg
push
and
mov
cmpsl
pop
sbb
rol
jl
cmp
jge
and
imul
lea
mov
ljmp
scas
jno
lock
mov
lock
stc
xor
jge
push
arpl
xor
aaa
push
pop
cmp
cmp
jo
mov
mov
dec
or
push
cmp
in
inc
cmpsl
jge
gs
sub
mov
into
loopne
call
or
mov
je
xor
mov
ss
decl
cmpsb
loop
fcoml
xchg
sbb
rorl
sbb
push
testl
rol
and
lds
shr
cmp
lahf
jb
push
test
fs
sahf
orb
jo
shll
aas
popa
adc
mov
dec
xchg
pop
cmpsb
inc
outsl
cmp
das
mov
insb
xor
fldenv
sbb
fs
cwtl
iret
in
dec
push
lahf
addr16
pop
decl
adc
mov
sub
test
add
or
pop
aam
inc
imul
xor
dec
test
test
popl
iret
jns
xchg
push
push
pop
fs
mov
xchg
mov
pop
xor
aam
js,pn
adc
jp
inc
pop
fildl
arpl
inc
xchg
fstps
cmpsb
test
jmp
imul
adc
push
push
or
mov
icebp
pop
or
cmpsl
sbb
xor
inc
mov
cmpsb
mov
push
and
out
adc
cmp
pop
mov
dec
and
imul
pop
cmp
lcall
aam
xchg
mov
adc
js
cld
imul
fsubr
gs
testl
mov
test
sti
addr16
inc
js
xor
ds
xorl
push
sub
outsl
xchg
es
inc
jmp
dec
sbb
or
jl
fmull
pop
cwtl
cwtl
pusha
fbld
lods
xor
xchg
imul
push
adc
arpl
inc
xchg
jns
inc
jg
jl
in
mov
pusha
popa
or
add
test
push
clc
ljmp
std
pop
push
hlt
pop
pop
idiv
rol
inc
pop
inc
add
cmp
lcall
icebp
xor
enter
jne
ljmp
scas
sub
inc
cmp
adc
out
cwtl
pop
mov
hlt
sub
xchg
loopne
hlt
push
lods
jo
mov
hlt
inc
arpl
in
int
mov
push
xchg
out
cli
add
pop
shrb
cltd
cmpsb
icebp
scas
jecxz
xor
sbb
inc
jle
repnz
jbe
xchg
cmpsl
pop
gs
jb
loop
sub
popf
pop
inc
sbb
movsb
out
sbb
push
pop
xchg
mov
jne
int
ret
sub
pop
in
imul
sub
pushf
repnz
xchg
add
out
pop
stos
imulb
adc
push
pushf
jmp
stos
cmp
xchg
add
js
je
inc
mov
call
pop
adc
xchg
imull
mov
test
pop
fwait
cmpsb
inc
icebp
pop
ret
mov
mov
dec
mov
out
les
icebp
test
stos
xchg
dec
outsl
imul
lock
jge
xchg
push
push
cmp
lods
test
dec
mov
call
leave
dec
fnsave
sbb
into
cmp
in
sbb
inc
adc
shlb
loopne
ror
jnp
xchg
insl
push
mov
mov
jge
sub
fisubrl
enter
fadd
popa
mov
add
mov
lods
cwtl
fldt
pop
sbb
mov
jcxz
jg
mov
ljmp
mov
fwait
adc
in
inc
sbb
push
dec
jae
mov
push
or
aam
and
mov
in
xor
sti
inc
pop
js
pop
lods
pop
and
lock
call
inc
fs
jb
push
jnp
movsb
jge
call
fmul
adc
pop
pushf
jno
insl
or
popa
loope
sbb
inc
addr16
adc
arpl
rcrb
or
add
xchg
mov
or
cmp
inc
imul
outsl
loope
push
lret
xchg
push
xchg
test
inc
aaa
icebp
jp
call
mov
jecxz
je
xchg
jle
and
cld
sub
std
scas
pop
call
push
loopne
adc
sub
popa
pop
lret
leave
lods
lea
sbb
add
adc
mulb
mov
push
movzwl
aaa
xchg
in
adc
mull
lods
ljmp
sahf
add
or
leave
mov
out
movl
loop
pop
and
fs
sub
jmp
mov
mov
daa
adc
jne
call
mov
push
call
add
or
xchg
adc
mov
fsubp
notb
adc
pop
mov
out
mov
jl
sub
push
mov
inc
push
mov
push
pop
rol
jecxz
lock
mov
xlat
lret
negb
adc
outsb
inc
enter
mov
test
dec
popf
or
cli
aaa
js
push
mov
addl
inc
shll
add
scas
scas
push
or
int
add
bound
repnz
aam
add
pop
scas
inc
test
push
sbb
and
dec
aad
loop
inc
pushf
fsub
push
push
pop
lret
mov
mov
sub
pop
and
scas
mov
push
and
push
xchg
loope
repnz
into
out
in
xchg
int3
jecxz
push
adc
pop
add
ja
cmp
xchg
gs
dec
and
inc
stos
sbb
lock
aam
jl
es
pop
push
add
jecxz
jge
and
push
dec
rcr
andb
mov
pop
in
lahf
mov
imul
push
cmp
flds
cmp
testb
mov
cmp
inc
push
nop
pop
in
call
sbb
adc
js
jg
pop
rolb
add
das
sbb
imul
mov
lods
hlt
lahf
mov
addl
adc
outsb
insb
pop
mov
clc
aas
mov
hlt
xlat
jbe,pt
bound
add
lret
mov
scas
push
shll
hlt
lock
imul
or
cmpsb
mov
inc
inc
loop
call
scas
cmc
inc
dec
xor
xchg
jp
stos
es
jg
subl
loope
and
sub
cmpl
mov
shrl
or
sub
push
test
sub
scas
sbb
outsl
or
cmpsl
push
lea
out
jnp
sbb
dec
out
sub
mov
sbb
and
inc
test
test
in
loope
xlat
fldenv
inc
xor
popa
xor
mov
jo
mov
xchg
pop
mov
mov
xchg
nop
jo
lea
lret
sub
sbb
pop
or
dec
loopne
insb
sbbb
stos
into
inc
mov
add
mov
pop
mov
mov
add
push
stos
cmp
sub
push
jl
jbe
pop
adc
aam
test
pusha
inc
cmpsb
aad
xor
xchg
aam
and
shrb
adc
pop
dec
push
adc
push
mov
xor
jecxz
jg
lds
adc
xor
test
addr16
orb
jecxz
fs
push
nop
cmp
neg
xchg
call
inc
push
jbe
and
adc
stos
xchg
mov
sbb
shlb
std
sahf
div
fstl
testb
insb
sub
push
mov
mov
loope
fstpt
inc
or
mov
xchg
sub
inc
rol
test
popa
call
stos
jecxz
mov
push
fiaddl
mov
in
loope
xchg
divps
dec
imul
push
lock
in
pusha
repnz
enter
xor
mov
dec
add
mov
add
inc
mov
jae
shr
push
mov
mov
sahf
in
scas
inc
aad
sbb
push
push
adc
imul
mov
test
cmp
fsubrl
lods
pushf
inc
test
sbb
fidivrs
jb
adc
out
mov
stc
jle
inc
jecxz
mov
mov
or
popa
push
cmp
es
dec
cli
push
scas
repz
push
adc
mov
mov
fsubl
arpl
frstor
xor
fcoms
and
dec
mov
js
jb
imul
lret
inc
in
mov
sub
cs
fisubrs
adc
and
fldcw
and
mov
xchg
jmp
aad
aaa
es
add
xchg
push
imul
mov
dec
repz
dec
mov
mov
or
push
add
mov
xchg
mov
call
ljmp
in
fidivrl
inc
jp
ss
inc
outsb
mov
ret
inc
lea
stos
mov
mov
push
aaa
push
movsb
stos
pop
enter
out
rcr
mov
movsb
pop
add
out
pop
pusha
rol
xchg
mov
cld
adc
lcall
and
negl
inc
int3
mov
ds
sbb
and
iret
shll
add
sbb
jnp
cmp
xchg
movsb
mov
in
das
mov
filds
cmc
test
mov
rorb
mov
orl
mov
cmpsb
fdivrl
and
pushf
repz
iret
inc
or
jge
sbb
xor
test
dec
pop
out
xor
push
fstps
scas
mov
mov
hlt
into
mov
outsl
adc
jecxz
jg
jge
xchg
add
mov
sub
cmpxchg
hlt
fs
jns
inc
aas
aam
and
push
jle
scas
test
xor
imul
xchg
push
movsb
outsb
fidivl
sahf
lds
sbb
fdivrs
xchg
cmpsb
ja
sub
mov
xor
std
lods
ljmp
jecxz
pushl
pushf
shrb
pop
add
scas
pop
pop
aad
cmp
rorb
in
pushf
adc
sub
pop
jle
and
pusha
inc
sub
popa
outsb
or
add
cmp
ds
imul
push
jge
call
repnz
or
leave
out
jg
sbb
iret
xchg
cmp
xlat
lret
jo
sbb
dec
push
repnz
push
or
sub
adc
xorb
pop
inc
jecxz
jns
adc
popa
pushf
cmp
js
mov
ljmp
mov
mov
cmc
imul
mov
js
add
or
xchg
mov
stos
add
mov
pop
sbb
cmpsl
inc
jge
pop
mov
push
gs
pop
cmp
ds
push
lock
or
test
or
xor
sub
sbb
rcr
daa
in
xor
mov
mov
jo
lods
rolb
mov
rorb
shrl
popa
daa
mul
push
aad
dec
std
lret
mov
add
fldcw
stc
xchg
sbb
repz
popa
sbb
inc
adc
mov
mov
shlb
lcall
js
xorl
out
fadds
add
jecxz
dec
mov
aam
mov
sub
mov
and
popa
sub
ret
mov
mov
xchg
cmp
mov
sub
inc
jl
push
test
insb
in
push
mov
stos
rorb
arpl
hlt
pop
adc
fldt
sub
jns
cmpsb
jbe
imul
sbb
test
sbb
mov
test
cmp
mov
inc
pop
cmc
mov
aaa
and
shlb
mov
push
pusha
mov
jge
add
pop
fucompp
xchg
mov
xchg
pusha
jmp
sub
outsl
addr16
or
and
mov
pop
sbb
in
push
cmc
sbb
xor
mov
popf
pusha
or
adc
adc
inc
outsl
pop
shrd
push
push
js
inc
imul
mov
in
add
adc
mov
out
nop
inc
push
loop
adc
popa
inc
dec
sub
fisubl
xchg
inc
mov
bnd
and
ljmp
faddp
xchg
pop
sbb
xor
repnz
popa
movsl
mov
mov
out
mov
add
push
sbb
repz
mov
push
cmp
push
sbb
mov
mov
jl
push
and
cwtl
mov
loope
lret
arpl
xor
stos
lods
stc
fsts
or
pusha
fbld
fmull
jmp
sub
mov
shll
out
fcmovnu
pop
call
pop
mov
add
or
ret
or
inc
adcb
out
cmpsl
mov
jo
enter
fcmovbe
imul
cmpsb
pop
out
sahf
scas
fmull
dec
rcrb
xchg
cltd
xor
sub
and
cmp
pushl
lock
les
mov
popa
mov
sbb
inc
in
hlt
pop
rclb
mov
mov
inc
lret
push
add
xlat
fsub
add
repz
add
push
es
leave
pop
rclb
sbb
mov
int
aam
mov
jo
shl
in
dec
dec
imul
pushf
cmp
jns
pushl
cmp
stos
push
inc
jp
mov
dec
stc
push
incl
roll
insl
psubsw
je
mov
popa
and
and
cmpsb
scas
jp
ss
fwait
out
mov
outsb
mov
xchg
pop
push
jne
mov
fs
xabort
test
pop
je
in
inc
mov
fincstp
xchg
test
inc
fidivl
lods
xchg
mov
dec
data16
or
adc
lcall
movsb
pop
adc
dec
mov
lcall
stos
call
or
ss
mov
loopne
fsubrs
es
pop
ss
xor
xor
int3
adc
add
mov
mov
mulb
adc
push
sarb
repz
shll
out
mov
or
lret
das
fildl
cmp
fmul
mov
call
das
lods
imul
sbb
das
dec
pusha
push
or
sub
loope
std
mov
sub
sbb
jmp
jle
jle
mov
push
sub
jae
mov
cld
jg
mov
mov
lss
shl
pop
ljmp
jmp
xchg
sbb
mov
mov
or
jl
je
mov
mov
lea
outsb
out
std
lea
cmp
call
jg
lcall
cmc
cld
scas
push
arpl
jne
xor
ret
sti
mov
pushf
sbbl
mov
pop
aas
orb
inc
mov
mov
xchg
sub
push
repnz
lock
cmp
call
ja
xor
sbb
call
pop
inc
mov
call
arpl
scas
inc
inc
mov
mov
pop
lods
lahf
xchg
add
sub
jo
lods
jb
arpl
scas
arpl
mov
shll
leave
mov
scas
enter
jmp
jo
and
andb
fcmovbe
and
push
not
push
push
lods
inc
test
call
orb
cwtl
sbb
or
mov
fbld
inc
negl
push
xchg
stos
adc
mov
cmp
das
fadds
lods
jb
pushf
rcrb
mov
jl
movzbl
and
pop
arpl
jb
fmul
xchg
pop
shlb
mov
rclb
call
mov
push
out
std
pop
sbb
sub
fcmovnu
push
adc
ljmp
mov
movd
movsl
pop
roll
pop
and
in
cld
xchg
pop
lds
imul
enter
xor
cwtl
adc
mov
shrl
mov
mov
aam
scas
ret
cmp
mov
push
hlt
inc
icebp
push
jns
xchg
js
mov
ret
les
mov
xor
lea
popa
in
adc
xchg
sarl
push
dec
cmpsb
dec
lods
mov
and
pop
lods
sub
inc
test
nop
jb
fs
pop
pop
xchg
test
jecxz
lahf
mov
subb
xor
aaa
dec
or
adcb
mov
sahf
je
cmc
iret
punpckhwd
and
test
out
aaa
jmp
push
mov
mov
ds
mov
lret
inc
outsl
shl
mov
pop
fstps
adc
xorl
fmul
jp
sub
and
out
pop
mov
arpl
cs
fcompl
mov
inc
sub
roll
arpl
loopne
mov
pop
js
pop
dec
call
shrb
or
jbe
das
sub
lcall
inc
call
out
in
arpl
js
repnz
je
call
das
outsl
adc
mov
or
dec
sub
call
push
imul
outsb
insb
jmp
daa
pop
dec
loope
incb
nop
adc
push
add
mov
aam
jg
xchg
mov
popa
adc
push
inc
jl
add
call
rorl
mov
sbb
or
lret
ret
sub
fcomi
jg
mov
ljmp
xchg
cwtl
or
mov
adc
push
sarl
push
ljmp
fidivs
shlb
mov
clc
add
das
imul
test
fs
mov
mov
jecxz
mov
out
cwtl
cli
pop
push
and
push
pusha
dec
mov
inc
inc
sub
popa
cmp
or
js
adc
orb
jecxz
sbb
adc
repnz
test
push
and
jne
or
fcmovu
sub
mov
sti
and
out
subb
xchg
call
cmp
pop
test
inc
in
pushf
inc
imul
add
cli
mov
pushf
into
dec
aas
sub
ds
iret
int3
lcall
test
mov
out
cmp
loope
or
sbb
and
inc
adc
ret
pop
cmc
sbb
sarb
jge
int
call
or
cmc
dec
cmp
mov
in
test
mov
aas
test
nop
inc
push
mov
icebp
or
xchg
inc
sbb
xor
push
xchg
mov
lret
movsl
push
ficompl
xor
mov
popf
popa
push
fcoms
inc
xor
cmc
lahf
lock
dec
cmp
aam
loope
cld
scas
cwtl
push
cmc
mov
js
addr16
lods
loopne
movsb
or
test
cmc
adc
push
test
adc
cmc
enter
lods
push
arpl
pop
xor
test
sub
mov
dec
inc
dec
movsl
mov
dec
pop
xchg
sub
js
stos
dec
xor
test
inc
bound
add
in
push
mov
push
test
sub
inc
xchg
daa
add
iret
xor
adc
jmp
dec
in
adc
fbld
mov
jne
push
inc
adc
imul
cli
xchg
pop
mov
cli
hlt
stc
incb
sbb
mov
cmpsb
mov
int3
jge
movsb
fisttps
pop
cltd
imul
pop
lahf
fildll
pushf
cmc
inc
adc
push
fcompl
mov
fisubl
sub
adc
and
mov
mov
rcrb
in
mov
imul
mov
fnsave
or
xchg
movsl
arpl
das
call
scas
in
pop
cmp
push
mov
jmp
and
adc
pushw
fcoms
cmpsb
mov
pop
jbe
arpl
sbbb
inc
fcomi
push
xchg
mov
ret
fcmovbe
int
jmp
dec
mov
les
stos
inc
jb,pn
xchg
pop
ljmp
cmpsb
popa
aad
pop
or
sarb
ja,pn
inc
mov
xchg
lods
push
cltd
loope
push
mov
shlb
call
pop
or
cwtl
shl
ret
out
mov
je
in
dec
jg
jbe
jmp
rcrb
and
nop
pop
rolb
push
xor
loopne
push
and
movsb
in
sahf
jge
dec
cld
lahf
hlt
inc
and
and
inc
mov
in
mov
incl
ljmp
test
dec
push
push
and
sub
inc
out
mov
clc
lods
push
or
xor
inc
dec
int
add
and
in
fidivs
lcall
xor
roll
cmpl
sub
cmp
in
jno
je
std
push
in
or
cli
sbb
aaa
popf
cmp
pop
sub
inc
data16
mov
mov
repz
cld
cmc
cltd
cmpsb
loop
sarl
and
fildll
int
push
fsts
sub
call
in
nop
jge
dec
xor
fisubrl
add
cmp
cmp
cs
adc
mov
loop
sti
mov
stos
mov
test
dec
xor
sahf
lret
aas
inc
in
dec
outsl
mov
jmp
mov
orl
cmc
xchg
fistps
fcoml
cmp
pop
hlt
lea
inc
xchg
xchg
dec
cs
xchg
and
push
addl
push
mov
jl
sbb
outsb
ljmp
pop
fwait
ja
push
cli
test
push
adc
jne
addr16
add
mov
dec
push
test
push
fdivrs
cmc
scas
bound
inc
or
lods
cmpsl
adc
out
jl
scas
sub
jmp
adc
jno
ficoms
sahf
aam
mov
lods
cwtl
inc
mov
cli
xchg
out
mov
out
jnp
jo
jae
jmp
test
dec
mulb
inc
jecxz
xchg
nop
mov
imul
jnp
inc
jge
enter
or
arpl
sub
push
jmp
sti
sub
repnz
push
push
test
sbb
sub
ret
xchg
out
and
push
test
cs
xorb
dec
inc
sub
fisttpll
or
ret
cmc
stos
xchg
mov
cmp
cli
adc
out
pop
stos
jae
add
mov
xchg
pop
inc
sbb
mov
push
test
adc
loope
daa
jb
loopne
adc
rcl
in
pop
rclb
test
jg
inc
xor
pop
mov
fnstsw
and
lock
jae
inc
in
pusha
fsubs
or
popa
push
ds
inc
and
pop
outsb
push
mov
mov
arpl
push
test
inc
mov
test
inc
mov
push
xor
jno
pop
mov
cwtl
rorb
imul
add
lret
into
imul
iret
push
jge
addr16
repnz
push
faddl
xlat
push
lock
cmp
pop
mov
xchg
xor
out
rcll
outsl
pop
inc
lds
sarb
pushf
sbb
xchg
hlt
adc
cltd
cltd
push
fcmovbe
hlt
sub
lcall
leave
roll
pop
mov
pop
mov
call
lcall
lock
inc
xchg
fcoml
or
in
fists
popa
adc
outsb
xchg
mov
rcll
adc
cmp
or
cmc
dec
sub
in
pop
sub
xor
mov
imul
xchg
jae
push
pop
sahf
lret
arpl
mov
mov
mov
pop
clc
loope
push
sti
push
lods
dec
dec
push
dec
scas
push
faddl
out
daa
sbb
out
in
ret
pop
mov
sub
stos
mov
sub
jae
enter
inc
in
cmp
add
mov
dec
mov
fiaddl
mov
mov
test
jmp
ret
inc
cmp
ret
push
mov
lods
jecxz
pop
or
mov
in
mov
sub
mov
popw
and
pop
or
add
sub
push
stos
sbb
inc
fsubrl
push
mov
rorb
int
arpl
and
xchg
add
jnp
imul
jbe
pop
mov
sbb
cld
mov
repz
in
sub
mul
jge
lret
test
je
ret
pop
push
nop
iret
add
cmp
cmpsl
push
push
das
fildll
test
cmp
jl
push
cmp
mov
test
js
nop
repnz
mov
lcall
xchg
scas
and
adc
pop
ds
ret
flds
loopne
out
dec
adc
call
negl
outsl
inc
js
or
pushf
insb
hlt
out
mov
outsl
xchg
mov
xor
jbe
mov
dec
icebp
xchg
dec
xchg
adc
inc
and
inc
rcl
stc
push
jecxz
or
jl
popa
adc
stos
inc
pop
dec
cltd
jg
pop
jns
arpl
inc
in
xlat
popa
fstl
loop
jne
mov
sub
outsb
popf
xor
ret
jae
repz
adc
xchg
mov
add
fadd
bnd
xor
sub
jl
scas
push
jmp
pop
mov
and
pop
hlt
dec
sub
test
rcl
cmp
divl
int
sbb
pop
call
xlat
cmp
stos
mov
cwtl
sti
inc
jge
scas
xor
out
push
int3
add
mov
int
adc
push
jp
mov
add
repz
cli
bound
mov
sbb
sbb
iret
imul
jns
cwtl
mov
cmp
test
or
pusha
sarl
mov
cmp
push
xor
daa
call
or
inc
pop
pushf
sub
shlb
mov
in
mov
mov
inc
jmp
xlat
xor
dec
fldl
sub
nop
in
or
or
adc
inc
pop
push
pop
mov
cmp
in
mov
gs
inc
imul
dec
je
push
add
adc
lahf
addb
mov
out
fbstp
push
mov
ja
mov
sub
sbb
sub
out
xchg
and
xlat
arpl
mov
inc
out
xor
pop
inc
outsl
and
or
lods
scas
inc
xchg
movsl
push
ds
inc
xchg
pushfw
out
insb
add
or
sbb
pop
mov
scas
adc
pushf
insb
addl
test
gs
popa
ss
sahf
movsb
dec
cwtl
icebp
in
outsb
cli
inc
outsb
inc
adc
fadds
mov
inc
mov
rolb
lods
xor
aad
aam
or
push
push
adc
or
jg
xor
mov
int
clc
mov
cwtl
pop
fimull
inc
jle
mov
test
in
sbb
lret
cltd
mov
pop
push
adc
sbb
popa
jecxz
gs
test
loop
sbb
fmuls
shlb
inc
lods
roll
inc
ficoms
imul
popa
push
sbb
dec
ficoml
mov
ljmp
or
std
xchg
cmp
or
mov
hlt
pop
loop
idivl
jo
enter
mov
clc
movsb
daa
push
bound
pop
dec
sub
orb
xorb
or
divl
adc
sbb
mov
loop
dec
jns
es
call
mov
out
das
dec
or
and
daa
adc
fsubs
xchg
push
andl
ror
jmp
pop
lock
ret
rcrb
negb
inc
push
dec
clc
push
xchg
fabs
jle
sub
jns
mov
sbb
push
addr16
mov
fcomps
icebp
xchg
xchg
lret
inc
adc
arpl
push
xchg
rcll
call
mov
inc
jl
push
or
mov
inc
xor
mov
fwait
pop
jno
lods
call
or
popa
ret
push
aas
add
mul
inc
xor
fs
icebp
or
pop
xchg
fstpt
xorb
ficompl
dec
pop
mov
push
and
cli
mov
lock
rcl
popa
dec
loope
mov
test
add
inc
icebp
mov
adc
xor
mov
push
lcall
imul
dec
xchg
jecxz
push
int
push
out
xor
arpl
or
mov
mov
neg
cmpsl
fcmove
lret
imul
lods
lock
fisubl
mov
cli
pushf
imul
test
xor
imul
movsb
in
mov
stos
leave
out
jg
jecxz
jae
xor
aaa
adc
pop
mov
xchg
iret
popf
loop
sub
stos
sub
push
xchg
sub
ljmp
add
xchg
push
mov
jb
sbb
or
in
mov
push
sbbl
mov
test
loope
xchg
xlat
test
sbb
fucom
lods
adc
repz
pop
js
ds
loopne
push
or
inc
cli
sbb
dec
mov
pushf
push
rorb
sub
mov
cltd
xchg
cmp
gs
test
xchg
adc
fs
xchg
je
popa
fcomp
iret
iret
mov
cli
icebp
mov
or
insb
xor
int3
push
inc
jle
pushf
neg
pop
out
lods
push
or
pusha
mov
sub
and
mov
nop
inc
inc
or
sub
mov
cld
andps
movsl
jbe
jo
push
inc
aad
je
insb
daa
fildl
cmp
push
sbb
add
lret
int
and
leave
xor
add
out
inc
imul
dec
xchg
sub
arpl
subl
int
xchg
outsl
mov
faddl
mulb
mov
push
fstpl
out
loopne
push
hlt
or
add
xor
addb
mov
clc
mov
jecxz
arpl
xchg
lods
dec
xor
pop
frstor
leave
fildl
shlb
lcall
dec
outsb
jns
insl
sbb
orb
dec
insl
inc
jnp
dec
imul
pusha
sub
dec
push
push
ret
push
fldlg2
pop
push
sub
dec
mov
dec
shrl
ljmp
mov
out
sub
sbb
aaa
mov
and
mov
xchg
sti
push
and
mov
ljmp
stos
into
add
adc
popa
fisubs
fdivr
and
dec
jb
es
push
jb
inc
in
push
add
rcrb
pop
fcmovne
jbe
sarb
sub
mov
and
push
jne
pusha
mull
pop
adc
jo
push
sbb
adc
lret
adc
inc
sbb
flds
ret
mov
inc
push
jnp
jl
adc
enter
inc
mov
jnp
test
sub
shr
mov
push
xlat
xor
cwtl
and
pop
dec
inc
xchg
loope
or
sub
mov
fisubs
cmp
jge
sub
outsl
inc
jns
movsl
je
sbb
loop
loopne
cmp
js
imul
cmpsl
xchg
or
inc
aas
dec
push
es
mov
out
adc
ficoms
mov
shll
cmc
dec
in
or
push
ret
call
stos
mov
imul
sbb
sysret
and
add
mov
dec
push
mov
adc
mov
dec
cmc
pushf
cld
rcll
fdivrs
push
pop
or
add
mov
mov
testb
lcall
jns
rorl
fcomps
enter
test
sbb
adc
scas
sbb
jecxz
orl
mov
lock
aad
cs
cltd
dec
cli
push
xchg
data16
gs
pop
jge
sub
jp
pop
addr16
imul
stc
test
adc
pop
shlb
pushf
stc
adc
rorb
xchg
mov
popa
inc
test
or
movsb
andb
pop
cmp
cmp
pop
sub
dec
xchg
inc
cmpsl
stc
lods
int
cmp
mov
sub
popa
mov
add
test
sbb
xor
cmpsb
jmp
sub
ret
repz
dec
lea
and
pusha
xor
movsb
push
out
clc
inc
sub
inc
stos
xorb
sub
andb
cmp
xchg
inc
inc
jl
mov
notl
pop
add
lret
add
outsb
cltd
addl
pop
iret
aas
push
enter
fdivp
les
scas
adc
aad
repz
sbb
pop
stos
inc
aaa
imul
push
mov
stos
out
inc
and
call
jl
bound
pop
mov
xchg
push
scas
dec
fs
add
push
push
inc
adc
xchg
ror
xchg
mov
inc
dec
mov
pop
jecxz
rcrl
filds
jbe
mov
pop
popa
cmp
test
ficoml
mov
lods
ljmp
ror
out
les
mov
ss
pop
sub
cwtl
imull
sub
push
ret
sti
sbb
and
xchg
pop
ljmp
xchg
icebp
aas
mov
mov
inc
bound
push
shr
inc
sub
push
xchg
shl
pop
cmp
icebp
cld
mov
adc
pop
push
cltd
jp
inc
arpl
sub
lods
inc
mov
fcmovbe
sbbl
cld
sbb
js
adc
jne
sub
cs
add
iret
adc
push
push
mov
or
pop
jp,pt
arpl
les
dec
sub
js
bound
sbb
dec
or
pop
mov
adc
sub
mov
lahf
push
test
cltd
aas
mov
les
sbb
nop
jns
fld
sub
stos
pop
pop
sub
or
inc
adc
js
push
js
cltd
shrb
and
imul
divl
das
loope
pop
push
xchg
jns
mov
pop
popa
mov
ds
cwtl
xchg
xor
test
popa
iret
adc
mov
mov
mov
push
cltd
sub
shll
mov
xchg
cld
pop
sub
divl
cmpsb
lods
mov
fsts
std
push
xchg
inc
mov
cmp
adc
scas
pushf
jo
int3
pop
dec
push
iret
pop
mov
inc
inc
mov
jp
sub
fisubrl
loopne
loope
mov
fistpll
mov
ljmp
sub
movsb
nop
jge
loope
fstpl
or
or
iret
movsl
mov
inc
mov
push
call
mov
popa
mov
push
pop
imull
dec
sub
loopne
cli
pop
mov
jo
je
adc
ret
cs
mov
mov
or
sti
mov
stos
hlt
adc
dec
cmpsl
inc
and
dec
call
fbld
stos
mov
adc
imul
jp
jmp
stos
jo
orb
mov
icebp
js
mov
enter
movsl
outsb
out
loope
mov
or
scas
pslld
sbb
add
or
lods
adc
sbb
inc
fimull
jo
std
mov
addl
lock
ficoms
jg
cmpsb
hlt
pop
hlt
addr16
imul
push
push
mov
popa
or
rcr
lock
ljmp
sub
jae
sarb
pop
adc
ret
push
or
jo
repnz
lods
sbb
jns
lea
sub
dec
push
adc
data16
lock
popa
cmpsl
mov
popa
std
lock
outsb
push
adc
enter
mov
dec
sbb
lods
shlb
add
inc
cmpsl
mov
mov
adc
std
jne
jb
fcmovnbe
scas
push
mov
scas
jns
and
xchg
pop
mov
xor
xorl
mov
aas
mov
jle
dec
inc
jbe
and
cs
mul
cmp
cmpl
icebp
rcl
lret
loopne
fidivrl
jo
in
ljmp
arpl
or
mov
sbb
nop
popf
clc
mov
mov
fisubrl
aaa
push
pop
pop
outsb
mov
cld
xlat
int3
sub
mov
aam
das
mov
inc
push
mov
dec
cmp
movsb
mov
sbb
mov
cmc
push
outsl
xchg
cmpsb
and
or
daa
adc
mov
cli
cmp
dec
push
pop
jg
ds
and
test
leave
dec
mov
xor
add
movsl
sub
loopne
add
pop
jns
dec
imul
push
cltd
dec
xchg
dec
jp
mov
jp
adc
in
sbb
jge
mov
mov
popa
xor
sbb
mov
sbb
sbb
jge
jg
inc
out
pop
adc
jge
adc
fadds
mov
sti
cltd
movsb
xchg
fadds
aad
xchg
sub
pop
scas
cmp
inc
aaa
sub
mov
leave
dec
aaa
add
push
fisubl
inc
mov
mull
cwtl
mov
arpl
imull
aad
xchg
mov
out
mov
gs
in
lcall
inc
mov
in
inc
fucom
lods
sub
imulb
xor
mov
sbb
aad
int
das
loopne
mov
fildll
xchg
repnz
push
aas
insb
pop
rorb
xchg
inc
sbb
aad
gs
out
mov
outsl
lahf
push
loopne
inc
inc
clc
and
mov
mov
lods
test
and
inc
mov
dec
call
movsb
lds
xchg
ret
int
adc
shlb
shl
jbe
jp
adc
jo
insb
dec
sub
idivl
int3
jmp
mov
in
sbb
adc
xor
sbb
cvtps2pd
lods
sahf
adc
sarl
jle
xor
dec
mov
outsl
jge
mov
push
popa
xchg
sbb
int3
lea
xor
pop
jecxz
mov
dec
test
loope
outsb
push
cmp
jp
stos
inc
in
push
rcll
lcall
bound
repz
add
in
sbb
adc
mov
pop
aam
iret
mov
push
je
loop
leave
leave
fdiv
adc
nop
mov
mov
popa
xlat
add
addb
ret
movsl
and
sar
push
out
fdivl
clc
shrb
sub
push
or
fsubs
stos
cmc
dec
adc
mov
pop
sbbl
jge
ret
jge
pop
sub
cld
out
mov
mov
loop
xor
test
adc
cmp
mov
nop
gs
mov
arpl
dec
data16
mov
push
daa
mov
js
rcrb
mov
xchg
pop
scas
sarb
sub
ljmp
push
jl
add
inc
jns
inc
lahf
aas
and
dec
xchg
mov
mov
push
fldt
movsb
scas
jp
sbb
xor
sbb
push
test
js
mov
lret
je
add
cs
adc
inc
adc
js
mov
pop
lea
add
jnp
rorb
call
jmp
pop
jmp
xlat
mov
push
xor
jns
mov
mov
dec
loop
jns
aam
aaa
sub
out
sub
lds
mov
sub
push
jmp
fistpl
cltd
rcl
orb
cs
inc
mov
imul
inc
cwtl
into
cmpsl
push
cld
addr16
shr
repnz
cmp
or
mov
pop
pop
sbb
fdivr
cltd
in
pop
addr16
addr16
stos
cs
fistl
push
fsubr
leave
jb
test
jmp
pop
std
xor
insb
pop
out
xchg
lahf
add
jp
pop
mov
lret
mov
pop
fsubr
adc
add
pop
xchg
fistpll
clc
cmp
xor
das
lea
pop
sbb
xor
jecxz
cmp
xchg
cwtl
xchg
out
pop
sub
nop
xchg
add
jnp
shrl
mov
xchg
sbb
cmc
pop
adc
adc
pop
dec
repnz
das
iret
push
imul
ss
cwtl
jae
cmp
movsb
nop
jmp
iret
jmp
mov
cs
call
push
push
scas
dec
pop
add
sahf
inc
test
in
pop
lock
and
pop
sbb
mov
fldcw
sub
stc
jmp
inc
add
push
pop
cmp
pop
adc
outsb
into
adc
bound
loope
cltd
fiadds
pop
jmp
es
sahf
scas
call
lods
sarb
lcall
jbe
mov
sbb
cmp
push
cmp
cmp
xchg
mov
jle
mov
mov
sub
js
insl
mov
imul
mov
pop
push
mov
sarl
shll
pop
xor
mov
lcall
xchg
lds
inc
pushf
pop
fcompl
xor
push
mov
lods
pop
pop
movsl
mov
dec
mov
test
ljmp
fdivrs
adc
xorl
outsb
stos
mov
pop
stc
xchg
push
out
int3
fdivrl
pop
pop
xor
insb
fldcw
outsl
mov
ret
pop
inc
ljmp
pop
rcrl
sahf
xchg
mov
xchg
call
and
lret
inc
std
arpl
cld
pop
xchg
mov
jl
or
insb
cmp
iret
je
xor
js
inc
pop
push
sbb
lret
pop
push
mov
xor
pop
or
jmp
pop
call
add
and
loop
pop
cmpsb
xor
je
jne
ret
cmp
dec
cmp
fsubr
pop
stos
aad
mov
leave
adc
arpl
pusha
popl
inc
ficompl
popf
xor
sbb
dec
lods
pop
mov
sub
das
xchg
sub
pop
pop
jle
mov
push
in
or
call
push
inc
pop
mov
adc
xchg
jns
int
in
mov
xor
outsl
lock
pop
inc
push
pop
std
adc
dec
mov
adc
pop
inc
in
push
pop
dec
adc
add
out
lods
pop
inc
push
inc
jnp
cwtl
mov
xor
jno
pop
int
dec
add
push
pop
pop
inc
les
sub
mov
xchg
cmp
push
mov
out
xchg
int3
dec
or
jo
sub
mov
dec
pop
iret
pop
mov
cmovb
pop
leave
add
int
jbe
and
fsubrs
test
aad
pop
push
mov
lods
xchg
popf
or
pop
or
in
fdivrs
mov
pop
adc
cmp
pop
imul
or
enter
pop
xchg
test
jnp
dec
push
cwtl
rolb
push
adcb
lock
pop
push
and
mov
loopne
or
cwtl
xchg
dec
negl
mov
xchg
ja
js
pop
pop
pop
mov
ret
adc
jae
cmp
or
jnp
adc
xor
mov
push
cmp
jo
daa
loop
mov
pop
xor
push
arpl
dec
ret
mov
ficomps
cltd
mov
xlat
mov
xor
jle
cmp
js
aad
dec
stos
pusha
push
in
lods
adc
stos
loope
cwtl
inc
addr16
pop
dec
lods
push
iret
and
rclb
fcom
testb
pop
pop
sti
lock
mov
in
into
inc
pop
fwait
xor
gs
out
mov
xchg
jmp
leave
aam
mov
shl
int
pop
dec
lods
mov
cmpsb
xlat
adc
shrb
loope
enter
loop
stos
lret
inc
movsl
pop
cmp
push
mov
insb
or
test
push
sub
jge
push
cmp
pop
fdivrl
jecxz
jo
cmpsb
test
iret
inc
mov
pop
leave
push
and
xchg
inc
pop
push
lret
data16
fistpll
mov
push
or
imul
clc
fsincos
pop
xor
add
popa
push
mov
pop
push
scas
dec
inc
cmpsl
xchg
inc
inc
test
and
jl
and
pop
mov
mov
or
repz
sbb
ljmp
sbb
xchg
icebp
mov
mov
xchg
scas
imul
sahf
xlat
inc
cmp
push
mov
mov
jl
lret
arpl
jmp
pusha
or
mov
lahf
sbb
pop
lods
imul
jae
adc
push
dec
sub
int
or
cmp
pop
cli
or
xor
fyl2xp1
insl
xchg
test
aas
pop
jne
imul
pop
cltd
pop
movsb
inc
xor
push
std
mov
jg
dec
or
js
es
je
cmp
fistps
or
pop
leave
movsb
xchg
fldenv
push
fs
dec
mov
fstpl
add
jbe
jle
inc
mov
rolb
cmp
lods
dec
pop
scas
inc
cmp
jbe
and
mov
push
jecxz
fnstcw
pop
mov
sub
test
test
inc
push
aas
data16
jbe
xchg
xlat
stos
add
push
mov
cmp
aam
test
fcomps
cli
cmp
pop
pop
scas
lret
mov
pop
mov
inc
hlt
sbb
fdivrs
fs
cmpsb
popf
cli
and
cmp
pop
or
mov
pop
lret
fdivs
out
add
pop
mov
sub
or
xchg
or
repz
pop
dec
stc
sub
adc
jmp
mov
push
rorl
ja
fsubp
pop
fs
les
inc
jb
pop
mov
mov
bound
inc
sub
movsb
pop
push
sub
pop
mov
lcall
ret
inc
cmp
pop
cltd
jo
mov
pop
dec
gs
jb
xchg
test
jl
pop
sub
and
xor
dec
inc
pop
mov
mov
pop
mov
movl
sbb
sub
jg
jp
push
pop
mov
lods
sbb
inc
arpl
sub
in
mov
ds
xchg
pop
adc
push
enter
fidivl
cmp
ljmp
fcomps
out
pop
xor
sub
mov
push
cmp
push
fld
pop
in
xor
or
push
jnp
lahf
cmpb
xchg
or
or
push
insl
out
push
adc
mov
push
mov
fidivl
push
divl
xor
pop
iret
mov
pop
sbb
push
int
pop
es
pop
jmp
xlat
pop
ffreep
inc
lret
add
pusha
push
xlat
loop
sbb
negb
mov
pop
mov
in
and
test
mov
scas
pop
sahf
test
sub
stc
pop
adc
sub
xchg
jge
mov
dec
push
cwtl
enter
adc
xchg
xchg
pop
and
js
mov
adc
or
int3
repnz
cwtl
dec
pushf
ds
sbb
mov
xor
fstpl
jb
ss
sarl
push
pop
jne
jmp
inc
add
mov
popa
push
shll
bound
mov
pop
pushf
pop
stc
mov
cmc
icebp
pop
xchg
push
dec
mov
mov
sub
jne
jle
pop
pop
outsb
aad
or
leave
xchg
nop
std
dec
pop
out
out
push
sbb
popa
pop
in
orb
pop
mov
inc
push
pop
pop
les
shlb
dec
mov
sbb
cltd
sbbb
fwait
xor
mov
xchg
subb
roll
jle
push
mov
fiaddl
inc
or
cmp
call
in
cli
inc
mov
mov
std
test
dec
push
outsb
sub
mov
adc
jge
pushf
out
in
in
mov
push
call
pop
arpl
cmp
in
push
cmpsb
fadds
pop
xchg
add
xchg
dec
jmp
jnp
loope
dec
push
in
les
inc
jle
test
cmp
prefetch
or
adc
mov
jo
aas
shl
inc
cmc
mov
cmp
test
pop
xchg
rcrl
out
adc
mov
scas
jmp
sub
sub
adc
fbld
adc
test
xor
pop
fsubr
out
sbbl
dec
push
cwtl
inc
lods
icebp
and
arpl
cmp
mov
scas
movl
jg
mov
shll
aad
add
dec
ja
xchg
sbb
sbb
or
add
out
orl
push
subl
lods
in
pushw
dec
xchg
rcrb
or
and
dec
movsl
popa
sbb
add
cmp
mov
sbb
xchg
loop
xor
pop
sub
mov
lods
hlt
sbb
dec
cmpsl
adc
add
fstpl
and
fcmovnu
xor
push
arpl
stos
push
ds
cli
cmp
fs
arpl
jmp
cs
jae
dec
sub
inc
sub
je
xchg
add
and
dec
cmp
call
inc
mov
push
sub
and
in
push
pop
cs
sbb
lods
outsl
pop
pop
push
adc
cltd
pusha
dec
outsb
fidivs
add
dec
xchg
push
hlt
outsl
adc
cmp
stos
mul
fsubrl
push
test
xchg
mov
lods
inc
mov
sbb
xlat
shlb
fimull
stos
ret
cld
iret
shrb
lods
aaa
mov
fmull
outsl
adc
jb
sarb
icebp
lods
in
jo
out
paddw
imul
push
mov
jg
sub
test
stos
test
mov
and
aam
pop
inc
add
pop
adc
out
add
ret
inc
cmp
xor
jo
dec
stos
mov
push
push
out
push
sbbb
jo
and
dec
nop
and
arpl
sub
cmp
rclb
clc
sbb
cmpsb
pop
call
int3
add
sahf
hlt
add
lods
add
rcrl
dec
nop
jg
lods
out
pop
daa
ret
and
sbb
jecxz
push
inc
dec
das
cld
scas
shlb
fisttps
aas
bound
adc
push
aam
pop
stos
push
sbb
pop
jo
dec
sbb
aam
sub
push
in
pop
pop
test
in
mulb
inc
push
sar
mov
xchg
cwtl
in
scas
adc
mov
mov
and
jns
test
add
push
dec
inc
mov
sub
adc
pushf
in
mov
ja
mov
mov
add
stos
mov
ds
rcl
loope
jmp
mov
jae
jb
pop
sarb
cmpsb
inc
pop
xchg
mov
sub
push
xchg
push
decl
push
xchg
lahf
sti
lds
dec
push
sub
sarl
pop
ret
dec
and
js
mov
xor
adc
xor
mov
or
pop
mov
xor
test
sub
mov
pop
xchg
sub
loope
div
dec
mov
loopne
mov
scas
xchg
pop
std
xchg
push
shlb
xchg
iret
or
cmpsl
out
pop
mov
mov
adc
push
mov
sub
inc
ret
xor
mov
outsb
jnp
arpl
int
push
xor
push
push
push
push
cmp
fdiv
cmp
mov
push
push
cmp
popa
imul
mov
stos
cmc
and
jp
add
mov
in
in
add
mov
inc
push
repz
nopl
mov
mov
sbb
fcomps
hlt
insl
rcrb
fcmovne
inc
mov
ljmp
mov
or
pop
sbb
rorb
mov
inc
jg
inc
xor
mov
lcall
cmpsb
pop
aad
push
inc
mov
mov
outsl
test
loopne
fbstp
mov
sbb
add
inc
lods
xor
push
popa
push
pop
stos
push
lods
mov
rorb
mov
cs
mov
test
pop
pop
je
push
sub
dec
jnp
lods
mov
repnz
bound
into
std
sbb
insl
out
loopne
das
jo
push
aaa
cld
inc
ret
movsbl
mov
fs
dec
cmp
shlb
pop
mov
adc
sbb
arpl
lcall
cli
add
lret
pop
test
cwtl
shlb
int
arpl
xchg
mov
testl
mov
cld
rclb
lock
fs
in
mov
jmp
cmc
pop
ss
lea
pushf
movsb
test
cltd
in
xchg
or
sbb
leave
jbe
jmp
cmp
sbb
outsb
inc
clc
popa
fldenv
xchg
inc
aaa
sub
xchg
sbb
push
xchg
jbe
or
xchg
pop
push
out
repz
das
sub
int3
push
loope
push
in
jmp
push
sub
rorb
adc
sti
mov
call
adc
popa
xor
lock
push
dec
mov
fidivs
cmp
popf
iret
arpl
add
popa
loope
orps
lahf
dec
out
push
mov
scas
scas
dec
loope
nop
dec
daa
adc
add
or
add
and
rcrb
mov
adc
fs
push
cmp
loope
push
mov
mov
pop
pop
pop
or
popa
aaa
adc
xor
inc
and
dec
pop
fcom
cmp
push
add
and
fnstcw
lods
add
es
xor
cmovbe
dec
mov
test
jmp
xchg
dec
shlb
jae
filds
arpl
mov
scas
inc
jg
dec
pop
or
ds
divl
outsb
pop
jno
jmp
add
ss
adc
sub
call
in
mov
adc
shrb
or
mov
cli
lods
and
pusha
dec
popa
push
sub
cli
sub
pop
and
lahf
and
pushf
inc
loop
outsl
cmp
or
movsb
mov
imul
adcl
or
mov
and
pop
in
mov
or
mov
mov
inc
into
push
cld
addr16
lret
fcomp
clc
daa
push
jge
popf
rcll
mov
movl
cld
cmc
pop
push
push
out
push
test
insl
and
cmp
test
scas
ret
clc
or
pop
adc
pop
fs
sub
fwait
xor
dec
pop
lock
rcll
daa
rorb
add
in
mov
loopne
sub
shl
aaa
ds
push
std
mov
arpl
in
add
inc
cwtl
xor
jb
pop
mov
adc
mov
push
dec
jmp
inc
mov
ficompl
xor
and
dec
inc
cs
ret
mov
rorb
jge
or
ja
pusha
adc
test
inc
and
imul
in
pop
test
adc
mov
jno
rcl
mul
hlt
inc
loop
hlt
pop
je
mov
lods
fdivrs
pop
xchg
jge,pn
inc
stos
xor
cmp
inc
push
sbb
pushf
fldenv
test
test
imul
sbb
and
dec
mov
cwtl
int
xchg
lret
mov
inc
sbbl
dec
popl
xchg
mov
mov
dec
mov
pop
add
cmp
int
adcb
mov
pop
dec
push
and
mov
fisttpll
fldenv
xchg
cmc
sbb
es
inc
add
mov
scas
insb
push
outsb
repz
or
pop
sub
lods
adc
sbb
into
pop
cltd
fadd
sub
mov
jge
aad
mov
mov
add
das
scas
add
inc
popf
daa
and
out
mov
cmp
xchg
aam
adcl
sbb
cld
dec
sti
mov
lods
sbb
jmp
outsb
inc
inc
js
inc
push
ficoms
cltd
or
leave
in
mov
mov
popa
ret
mov
and
frstor
dec
fiadds
sahf
dec
jg
push
call
sub
jg
ret
mov
imul
xchg
fcmovbe
push
lret
mov
loope
lret
aaa
shrb
jo
xchg
xor
inc
jl
lods
aas
push
into
pop
adc
in
dec
adc
addr16
inc
pop
xchg
mov
mov
sbb
jle
adc
js
arpl
adc
out
or
jae
xchg
rclb
outsb
sub
or
fld
mov
repnz
lcall
mov
push
xchg
cli
scas
pop
aas
je
push
push
jbe
mov
jecxz
lds
stos
pop
shrd
mov
dec
mov
bound
dec
add
stc
fsubr
mov
and
test
cmp
mov
cli
push
mov
repnz
orl
addr16
movsb
test
or
inc
mov
pop
sub
inc
pushf
sub
sub
shrl
pop
call
leave
loope
mov
sbb
lret
dec
sub
mov
js
pop
or
int3
stos
or
clc
xor
rclb
inc
ret
repnz
mov
mov
adc
dec
int3
aaa
fs
test
mov
xchg
xchg
stos
inc
jo
nop
sbb
stos
lds
roll
or
mov
fs
mov
jl
fiaddl
mov
pop
adc
mov
push
imul
inc
movsl
vunpckhps
dec
and
insl
mov
mov
lret
adc
and
loope
push
pushl
subb
cmp
shrb
mov
out
sub
xchg
xchg
mov
lock
lock
add
jp
pop
mov
or
add
xchg
sti
pop
data16
inc
xor
jle
mov
and
jp
push
cli
enter
push
cmp
fldenv
cltd
xor
and
lahf
stc
pop
sbb
fsubs
out
dec
f2xm1
pop
sbb
sub
data16
jge
das
push
mov
mov
mov
and
test
lods
sub
cmp
fiaddl
mov
push
test
xchg
cmp
into
lea
out
cwtl
fnstenv
ficompl
dec
cmp
sub
js
test
and
fnstcw
cltd
pop
inc
and
stos
orb
lret
pushf
inc
data16
loope
inc
hlt
addr16
repz
inc
mov
cwtl
pop
mov
mov
inc
test
shrl
and
xor
sbb
jns
in
adc
out
arpl
xchg
adc
cmp
lods
scas
in
push
mov
cmp
ljmp
xchg
lock
mov
add
inc
clc
daa
ljmp
std
xlat
in
stos
call
es
ljmp
loop
and
arpl
adc
inc
mov
mov
insl
cwtl
bound
and
shlb
push
xchg
dec
call
mov
sub
js
out
dec
adc
movl
js
xchg
cmp
hlt
push
inc
adc
loop
pushf
sbb
out
dec
sti
pop
sbb
jl
sub
out
push
outsl
jo
and
popa
lods
adc
adc
pop
fldt
or
mov
insl
mov
test
aam
jecxz
stos
dec
icebp
adc
sbb
adc
fstpl
cmpsl
jbe
mov
pop
mov
fmull
in
sbb
pop
call
jg
scas
loope
les
lock
jae
inc
insb
inc
jg
cld
sub
fistpl
add
mov
addl
lods
adc
cld
cli
negl
inc
in
in
sbb
insb
pop
insl
shrl
mov
into
mov
outsl
xor
cmp
xchg
pop
adc
call
push
ljmp
and
sub
push
jle
jo
stos
push
pop
mov
idiv
pop
mov
jne
test
mov
xchg
sbbl
sub
shlb
shrb
inc
mov
pop
nop
lods
push
xchg
cs
push
jne
sbb
cli
jo
xchg
and
inc
test
leave
xor
mov
sbb
pop
jge
push
push
xor
mov
add
shll
data16
mov
jg
popa
hlt
nop
andb
pop
shlb
mov
arpl
cmp
xchg
pop
aad
test
adc
mov
cld
stos
loope
xor
and
jp
jecxz
lods
ds
sub
and
scas
lods
in
inc
xor
inc
adc
and
outsl
js
mov
push
cmpsb
mov
jb
stos
jge
sub
pushf
push
cmpsl
clc
enter
call
arpl
adc
mov
dec
dec
insb
scas
fistpl
cltd
pop
jo
test
xor
push
out
fsubs
shlb
xchg
aas
jne
push
and
jb
popa
jae
dec
int
mov
mov
inc
xor
scas
and
mov
outsl
mov
dec
cltd
or
inc
mov
call
lods
clc
push
xor
popf
or
sub
mov
popa
in
dec
es
cli
xchg
outsb
ds
mov
insb
add
pop
cwtl
fnstsw
out
sbb
mov
sar
gs
dec
cs
dec
xchg
clc
incb
push
push
mov
scas
rclb
push
adc
and
pop
orb
rcl
cmpsl
test
rclb
push
sbb
mov
inc
add
jp
mov
pop
mov
mov
xor
cli
frstor
or
inc
inc
xchg
sbb
inc
fildll
cmp
dec
addl
inc
iret
sti
lods
sti
cwtl
dec
inc
and
sub
inc
mov
lods
push
and
daa
popa
jno
cld
cmpsl
pop
scas
loopne
movsl
cmp
addb
mov
inc
add
rcrl
and
inc
sahf
push
push
or
cmpsb
ret
xchg
push
inc
in
inc
mov
jnp
cmpsl
frstor
call
out
xchg
and
lods
sub
xor
xchg
cmp
scas
notb
sbb
arpl
jnp
inc
scas
and
ljmp
out
ret
js
mov
in
popa
sbb
xor
sbb
je
jo
aam
and
dec
lock
ret
loopne
mov
jns
jp
mov
jg
inc
jg
fidivs
jns
or
test
mov
jo
xor
pop
add
insb
inc
mov
pop
mov
test
xchg
pushf
sarb
aas
jge
pop
aam
cmp
adc
sti
push
inc
push
adc
stos
popa
loop
jmp
mov
stos
std
leave
xor
adc
or
stos
sub
rorl
cwtl
pop
mov
andb
shlb
jle
xchg
pushf
mov
mov
fbld
lds
xor
and
call
dec
hlt
out
adc
test
sub
test
xchg
enter
incb
pop
push
dec
in
lock
sub
push
popa
cmp
push
and
es
cld
fdivs
push
adc
mov
sbb
cmpsb
jb
jmp
mov
sub
xchg
loope
das
push
dec
mov
push
es
inc
movsb
addl
or
pop
imul
flds
ret
jg
hlt
sbb
adcb
ficomps
adc
push
mov
and
lock
mov
push
push
lret
loope
jnp
ret
ss
adc
fcompl
sbb
inc
mov
push
rolb
mov
pop
shrb
rolb
sbb
out
insb
inc
jne
shlb
pminub
int
insl
aam
popa
testl
movsb
mov
cmp
loopne
dec
in
add
push
jp
xchg
jecxz
lcall
aad
jl
cmp
stos
in
int3
cmp
xor
mov
sub
shll
test
and
mov
push
jg
test
add
imul
fbld
in
adc
mov
dec
mov
inc
aas
pop
ret
xor
mov
inc
lods
sbb
insb
xor
testb
test
sti
inc
mov
sbb
inc
xor
sbb
add
cmp
push
hlt
mov
cwtl
inc
into
inc
push
outsl
imul
out
mov
pop
push
and
inc
ja
mov
mov
das
pusha
push
pop
jle
jg
jne
popf
pop
fimull
pusha
adc
js
and
and
jle
insl
jmp
sbb
aam
xchg
adc
movsb
sarl
aaa
sbb
and
mov
sbb
into
xchg
xchg
fdivr
and
xchg
push
dec
fimuls
dec
cmpsb
mov
ficomps
repnz
rcll
mov
lods
out
shr
push
pop
mov
lods
jne
loopne
cmc
push
aam
inc
sub
aam
cmpb
loopne
rcl
jnp
jns
sbb
mov
sub
sti
push
and
fmul
nop
sub
cmc
sub
cwtl
inc
jo
cltd
fildl
lods
test
lcall
int3
enter
adc
in
xor
push
int
sub
xchg
scas
test
mov
mov
fists
inc
in
mov
jmp
or
rorl
loope
cmpsl
enter
mov
inc
pop
rcl
pop
sub
nop
aam
mov
push
mov
loope
pop
add
idivb
push
jo
pusha
sbb
data16
jl
shrb
mov
dec
mov
lahf
add
enter
mov
push
inc
aaa
push
xor
inc
hlt
sub
pop
aaa
ljmp
xchg
scas
or
into
andb
mov
push
add
nop
xchg
pop
jno
mov
scas
xchg
adc
divl
aas
int3
pop
inc
sub
cmp
dec
aad
insl
gs
es
clc
pop
out
mov
repnz
pop
and
roll
aam
hlt
mov
sbb
pop
or
out
jp
lcall
fs
sub
xchg
jmp
arpl
gs
cmpsl
in
adc
sub
sbb
mov
call
cwtl
popa
stos
or
jl
loop
popf
js
cli
lods
fimuls
xor
incb
sbb
or
test
lods
repnz
test
push
inc
jge
pop
mov
cli
filds
xchg
push
or
mov
repnz
add
push
cmp
mov
dec
orl
in
mov
push
inc
mov
mov
popa
adc
insl
jbe
inc
repz
dec
popa
ljmp
std
add
push
or
mov
mov
call
cmp
fimuls
lahf
mov
outsl
sti
inc
shlb
xchg
call
mov
rorb
and
mov
fildll
dec
push
jle
cltd
inc
not
xchg
mov
mov
out
push
jo
repz
mov
call
test
dec
sbb
inc
pop
imulb
lock
push
ret
xor
pusha
loop
lahf
mov
les
xor
addr16
sbb
and
xor
sbb
inc
cmp
popa
push
push
mov
adc
insb
dec
jns
push
test
int3
push
stc
sub
bound
inc
inc
pusha
xor
ljmp
ljmp
mov
pusha
inc
nop
pop
ja
jge
push
pushf
adc
sqrtps
icebp
in
xchg
pop
xchg
inc
into
int
xor
pop
inc
sti
je
push
test
inc
jg
mov
inc
sbb
sbb
out
dec
and
sub
hlt
cmp
ljmp
push
out
scas
push
filds
push
push
sbb
les
pop
ret
pop
shufps
mov
xchg
outsl
xchg
subb
call
imul
mov
jge
dec
fcomps
ss
and
jle
xor
inc
clc
mov
sub
jbe
ds
cmp
fnstcw
notl
sbb
add
adc
or
nop
je
or
imul
test
cmp
mov
add
shlb
cmp
inc
ljmp
cli
hlt
int
inc
push
jbe
add
int
dec
fcmove
ljmp
push
stos
subb
shlb
int
push
test
inc
data16
mov
aas
call
xchg
mov
data16
and
lea
imul
je
jo
push
sbb
insw
inc
mov
ja
push
jg,pn
mov
pop
lods
dec
shrl
das
mov
ret
pop
pop
jno
push
loopne
loope
push
xor
xchg
add
out
jg
pop
lods
leave
mov
sbb
mov
mov
rcll
add
fidivl
stos
inc
xor
sbbb
frstor
pop
sarb
or
jo
inc
adc
je
sahf
roll
push
xchg
scas
add
pop
cs
mov
inc
mov
in
hlt
icebp
pop
roll
push
nop
std
push
shll
xlat
cmp
mov
push
adcb
pop
mov
push
loopne
pushf
push
dec
mov
add
orl
push
test
adc
jnp
dec
enter
push
lock
cmc
imul
arpl
add
arpl
hlt
adc
pop
or
adc
xorl
mov
bound
sarb
scas
jmp
push
cmpps
int3
jbe
das
lret
outsb
jae
add
pop
inc
dec
out
push
cmp
es
push
js
add
aad
push
push
in
add
mov
lret
mov
mov
clc
mov
aaa
mov
add
mov
rol
inc
adc
stos
add
push
cwtl
push
rolb
call
cmp
out
push
dec
jg
add
push
push
mov
inc
pop
clc
jmp
ja
and
xchg
cmp
adc
ja
int
test
add
aas
jge
ficoms
dec
shlb
mov
loope
inc
cmpsb
arpl
fisttpl
shll
aas
mov
push
jae
shlb
cmp
jecxz
mov
jmp
dec
pusha
mov
push
sti
push
lea
pop
inc
cmpsb
lods
mov
out
fmuls
sub
pop
sbb
or
jge
scas
add
lret
mov
sub
pusha
inc
out
popf
xor
pusha
sub
in
insl
ljmp
adc
loope
xlat
mov
test
push
jecxz
jmp
es
aam
lahf
mov
popf
adc
lea
call
ret
pop
daa
push
fwait
cmp
scas
inc
mov
add
fistpll
jl
adc
push
pop
mov
adc
inc
leave
add
pop
out
dec
sbb
and
test
in
in
jge
rcrl
dec
inc
xlat
push
les
adc
repnz
mov
xor
inc
icebp
addb
xchg
adc
mov
pusha
movsl
mov
push
popf
push
fld
xchg
push
sar
pop
push
out
addr16
ja
pusha
add
pushf
icebp
pop
inc
test
arpl
sbb
jg
insb
add
mov
mov
test
push
sbb
negl
mov
sub
mov
push
add
mov
mov
loopne
adc
popa
pop
xchg
mov
sarb
fdiv
rcrb
outsl
jno
push
test
add
outsl
lret
push
adc
call
clc
das
stos
aam
and
push
mov
into
mov
and
bound
cli
out
call
clc
sub
push
or
packsswb
jb
lods
int3
mov
jl
mov
hlt
pop
xchg
popf
gs
mov
in
inc
xchg
in
dec
iret
xchg
push
aam
pop
adc
cld
mov
dec
das
pop
loopne
inc
xchg
cmp
popa
nop
xor
test
jl
push
std
sub
subb
ja
pop
jg
push
jge
mov
sbb
jno
mov
mov
mov
nop
jb
cwtl
mov
mov
adc
daa
inc
jg
xor
push
loope
int3
dec
inc
push
pop
jbe
addr16
xchg
mov
xor
cmp
cmc
jg
hlt
mov
mov
andl
push
jb
std
cs
push
and
and
loope,pn
push
mov
xchg
xchg
hlt
sbb
in
jns
gs
fcmovb
mov
icebp
std
push
ja
sub
scas
scas
rorb
jp
hlt
dec
jno
andb
jo
lock
mov
rolb
lods
daa
sub
outsl
icebp
sbb
push
mov
add
loope
iret
enter
fwait
std
jge
imul
inc
dec
js
xchg
shrb
push
mov
cltd
sbb
jge
hlt
mov
mov
je
rorb
aas
pushf
cwtl
jbe
mov
sub
inc
sbb
leave
pop
loope
sub
test
dec
cltd
pop
push
adc
out
addr16
nop
xchg
inc
test
jns
fdivp
push
xor
mov
mov
push
mov
data16
dec
pop
imul
sahf
inc
adc
dec
cmpsl
xchg
adc
mov
stos
sub
pop
push
outsl
mov
xchg
pop
xchg
je
mov
pusha
push
dec
sbb
dec
and
pop
xchg
push
inc
mulb
imul
dec
in
sbb
push
js
lea
call
adc
pop
lods
dec
sub
fcompl
scas
sbb
test
insl
pop
push
imul
dec
cli
and
mov
jmp
pop
cmpb
xchg
mov
dec
incl
outsl
adc
les
lcall
push
fsubl
lods
and
in
shrl
dec
in
sbb
mov
js
jns
push
mov
push
mov
stc
js
inc
test
sti
sahf
stos
dec
mov
popa
pop
mov
inc
sbb
jp
out
jmp
push
dec
lahf
sahf
cmp
fldenv
cmp
inc
jp
mov
mov
int3
xchg
out
dec
cmc
loope
xchg
fcompp
fisttpll
fidivrs
push
or
fadds
jg
jecxz
arpl
mov
push
jl
or
inc
push
rol
inc
and
xor
sbb
or
cmp
mov
inc
jg
adc
xor
fucomp
push
ret
mov
pop
adc
mov
movsl
inc
mov
jmp
lret
scas
jl
inc
idivl
aam
leave
insl
pushl
mov
push
inc
cmc
inc
movsl
in
jl
insb
push
sbbb
nop
loop
gs
push
or
add
xor
add
sarb
ror
loopne
into
cmpsl
rcll
jl
cwtl
cld
or
fstl
mov
push
push
data16
leave
icebp
outsb
mov
fildl
pop
sbb
mov
ds
pop
js
cmc
lds
adc
dec
ret
push
cmp
leave
daa
jg
ret
stos
inc
jle
xchg
inc
faddl
pop
cwtl
xchg
std
jg
push
jp
mov
sub
sbb
mov
cmpb
scas
std
and
dec
mov
mov
imul
mov
jle
add
lods
cmp
hlt
mov
out
loop
mov
test
sub
lahf
mov
add
mov
mov
lock
mov
hlt
pop
lock
sub
dec
cs
outsl
mov
sub
loop
sbb
clc
roll
push
sbbl
nop
hlt
in
push
xorb
repnz
cld
jmp
data16
push
inc
arpl
push
ss
mov
mov
inc
rcll
out
jp
dec
into
mov
and
in
ljmp
and
hlt
insb
flds
jnp
pop
stos
cmpsl
sbb
push
and
pop
je
dec
mov
call
ljmp
cmp
pop
jno
test
mov
jle
inc
fldt
ror
pop
xchg
push
hlt
adc
push
fcompl
imul
mov
in
jp
pop
scas
adc
adc
push
das
pop
es
cmpsl
or
mov
lock
mov
ljmp
jns
add
sbb
test
push
sub
insb
push
aaa
lods
scas
pop
shrb
sbb
stos
dec
push
fnstcw
sahf
inc
dec
xor
ljmp
fildll
push
push
leave
into
rorb
sbb
lahf
and
and
xor
mov
rcrl
inc
jbe
push
lods
pop
lods
dec
mov
push
push
xor
leave
repz
js
dec
in
fildl
xchg
and
mov
and
int
pop
inc
negb
sub
scas
sahf
pop
fldt
loope
mov
sbb
mov
jne
adcl
jecxz
mov
and
mov
gs
adc
or
add
pop
dec
jne
push
int3
test
pusha
push
daa
cmp
dec
xor
push
inc
in
mov
jns
nop
test
xchg
cli
inc
mov
pop
sbbl
sbb
mov
jns
xchg
dec
or
dec
jmp
adc
stos
sarb
fs
mov
gs
cld
jmp
arpl
jmp
jle
cltd
add
jp
test
test
cmp
cmp
xchg
sbb
test
mov
out
lcall
imul
in
mov
adc
ja
and
mulb
fistl
and
fnstcw
pop
int3
inc
mov
das
aaa
jae
pop
mov
in
sub
in
dec
jne
fadds
outsl
mov
sbb
or
lcall
and
mov
jb
scas
cmp
adc
js
mov
aaa
mov
push
aam
js
push
xlat
add
mov
push
or
leave
subb
clc
inc
lret
inc
pop
repnz
mov
inc
jmp
and
jmp
cmp
outsl
fs
add
cltd
scas
mov
stos
inc
pop
frstor
inc
pop
scas
sbb
lcall
pextrw
jne
lahf
in
mov
push
fcoms
adc
test
and
inc
ds
out
mov
mov
mov
call
mov
inc
mov
arpl
scas
dec
sbb
mov
cmp
adc
jb
push
inc
loope
cltd
inc
stc
icebp
xlat
popa
movsb
mov
jle
scas
outsb
mov
jns
sub
or
cmc
clc
mov
cltd
in
cmp
pop
shlb
stc
fnstenv
jp
dec
mov
push
xchg
ljmp
shlb
dec
rep
jo
inc
out
mov
pop
xor
loopne
lds
sti
xchg
das
and
xchg
push
aam
and
clc
push
xor
mov
test
mov
jae
inc
faddl
and
in
ret
ds
push
jns
inc
cli
repnz
cmp
push
outsl
shlb
push
roll
xor
xchg
cli
sarb
sbb
into
mov
into
insb
mov
pop
dec
push
in
js
cmp
jle
xlat
dec
and
xchg
sbb
divb
push
out
iret
add
outsl
add
pop
jmp
ss
xor
adc
jmp
fcmove
addl
testl
and
in
jnp
loopne
mov
int3
jmp
pop
sub
outsb
or
andb
and
out
popf
pusha
jecxz
push
or
xor
cmp
or
cmp
inc
adc
inc
sbb
loope
bound
xchg
xor
and
pop
ljmp
jle
cmc
xlat
and
fimuls
dec
inc
ret
cmp
aam
adc
and
arpl
aaa
jmp
jae,pt
xcrypt-cfb
cmpsl
and
lcall
call
mov
mov
mov
stos
adc
jl
add
popl
iret
ljmp
push
dec
inc
sub
hlt
loopne
test
jnp
push
stc
dec
hlt
push
test
dec
test
xor
inc
jbe
out
inc
call
insb
jns
stos
shlb
les
lods
and
ret
jo
popf
jns
jp
call
mov
mov
gs
and
cli
mov
inc
into
dec
push
in
loopne
nop
pop
shlb
aad
in
mov
lds
dec
daa
xor
adc
popf
cwtl
jmp
fisubrl
mov
inc
js
fnsave
movsl
push
dec
or
push
incb
js
gs
clc
inc
lods
mov
add
pop
push
das
or
mov
pop
sbb
sbb
jbe
push
mov
je
mov
jo
cltd
push
nop
cmpsb
sub
js
push
inc
imul
lret
add
jl
inc
or
xlat
xchg
jns
or
out
lea
jmp
ljmp
cwtl
cmpsl
rol
add
xchg
push
mov
jecxz
pop
mov
je
and
out
aaa
jo
loope
mov
cli
out
inc
pop
dec
push
roll
loope
add
pop
cwtl
sub
inc
out
and
pusha
adc
popa
imul
sbb
mov
mov
cli
push
push
fcmovnbe
movsl
cmp
push
xchg
push
pop
jl
and
adc
sub
leave
cwtl
aam
adc
mov
adc
add
mov
mov
lea
cmpxchg
adc
ss
loop
add
lea
mov
cmp
test
cmpsb
pop
adc
push
push
cwtl
test
push
insl
jecxz
inc
add
popa
arpl
fucomp
mov
mov
mov
and
push
sbbb
stos
add
shlb
or
xor
lods
inc
jae
shl
mov
dec
cwtl
bound
or
xchg
jnp
xor
xchg
std
test
icebp
test
push
cmp
mov
psubq
cmp
jg
lods
in
shll
mov
incb
xor
test
test
mov
or
mov
out
ljmp
sub
jge
cli
jb
pop
aam
xchg
inc
stos
dec
fcoml
pop
stos
sub
mov
inc
inc
mov
add
push
xchg
sbb
cmp
cwtl
aaa
jle
sbbl
pop
inc
cwtl
pop
dec
sub
std
adc
cwtl
rclb
mov
sbb
pop
jns
ljmp
es
je
or
push
es
jo
cmc
stos
xorl
pop
dec
dec
or
outsb
mov
mov
pop
aas
xchg
mov
push
push
fidivrs
mov
mov
mov
loop
dec
jns
mov
sbb
push
dec
xor
cmpsl
adcb
mov
xor
adc
pop
rorb
mov
sub
imul
ja
lds
push
rdpmc
fnsave
cs
mov
cmp
movsb
imul
dec
xrelease
xchg
inc
lahf
and
pop
inc
mov
push
adc
push
in
cvttps2pi
inc
mov
xchg
leave
sbb
sar
jmp
xchg
push
sarb
jg
pop
movsb
mov
js
mov
hlt
adc
inc
push
adcb
hlt
dec
shll
les
jp
mov
push
xor
xor
ljmp
sub
movsb
lea
stc
in
jnp
jecxz
call
mov
jo
rcr
sbbb
testl
fstps
dec
clc
loope
pop
fisubrl
xchg
xchg
movsb
test
imul
mov
out
out
lret
pop
inc
mov
scas
movsb
pop
push
in
jmp
rcr
sbb
mov
adc
adc
push
in
sub
outsb
je
pop
nop
push
mov
sbb
fs
sub
loope
in
pop
arpl
mov
mov
jecxz
mov
jb
cmc
jb
pop
loope
call
pop
test
push
sub
add
mov
mov
push
outsl
dec
rolb
mov
inc
popf
clc
sbb
or
adcl
outsl
scas
xchg
je
loope
test
mov
jbe,pt
inc
mov
and
cmp
push
cltd
push
push
out
mov
dec
cmpb
cmp
add
imul
push
add
pop
lods
icebp
addr16
mov
adc
jg
inc
scas
ret
hlt
cwtl
adc
fs
popa
inc
and
xor
jmp
inc
lea
movsl
pop
push
sub
ret
jns
insb
aaa
out
sbb
popf
shl
dec
imul
and
and
mov
pusha
in
adc
inc
insb
mov
rclb
cld
add
nop
fsub
xor
xchg
sti
cmp
insl
mov
jnp
shll
and
rcl
mov
or
movsb
sbb
cmp
jns
cmp
pop
mov
xlat
sub
and
int3
adc
pop
or
dec
push
add
inc
push
arpl
xor
out
xchg
xlat
fdivrs
rorl
insb
int3
dec
lret
push
pusha
dec
loopne
nop
dec
fidivl
lods
cmp
or
mov
and
rcll
rclb
inc
hlt
xchg
testl
mov
aaa
in
sbb
xlat
cltd
mov
hlt
sub
shrl
scas
int
repz
nop
xchg
test
xchg
mov
jg
cmp
inc
jo
mov
push
push
popa
insb
jg
aad
xor
in
es
xor
unpcklps
sub
orl
ret
sub
lock
test
mov
fucom
lock
rclb
mov
cwtl
push
fmuls
mov
mov
or
push
cwtl
pushf
shl
fisttpll
and
mov
push
sub
insb
xchg
jge
lea
xchg
mov
lret
mov
sti
or
icebp
mov
and
dec
pop
or
imul
mov
jno
jge
das
lods
pushf
mov
outsl
xchg
add
clflush
and
ror
dec
mov
jno
cmp
divl
cmp
mov
cmp
or
xchg
cmp
sti
imul
push
shl
jg
fldenv
mov
shlb
adc
sbb
nop
cmp
fcmovb
test
jge
pop
pushf
stc
popa
xlat
lahf
inc
mov
loop
sub
jae
pop
mov
jle
jmp
das
stos
fdivrs
imul
dec
sbb
cmp
cwtl
mov
rcll
lea
inc
sarl
in
ret
and
sub
shlb
adc
fsubl
inc
rcll
cmc
popa
jns
lcall
lock
fwait
adc
lods
lods
dec
scas
cld
dec
out
into
inc
and
add
pusha
addr16
cmc
je
dec
mov
imul
loopne
inc
test
jbe
fcmovnb
cmp
data16
mov
cs
mov
pop
push
into
jg
adc
push
outsb
or
pop
pop
jecxz
cld
mov
mov
movsb
and
inc
ret
cmp
or
and
cmpsb
cmpsl
faddl
pop
dec
cs
mov
addl
mov
adc
cmp
jle
outsl
jo
loopne
lret
mov
xor
mov
dec
pop
in
outsb
mov
ja
mov
hlt
jl
fucomip
push
xlat
mov
mov
and
dec
cmpsl
inc
inc
mov
or
add
and
fldenv
ja
lock
cmp
mov
add
xlat
push
outsl
faddl
pop
sti
cwtl
mov
movsb
hlt
sub
pop
sbb
pusha
fiadds
loopne
cmc
stos
scas
jl
jle
lcall
push
sbb
cs
test
aad
sbb
enter
push
lea
push
push
ret
add
lret
sbb
push
and
in
nop
cmc
mov
shlb
mov
push
xchg
test
sbb
and
and
fmul
push
lahf
jecxz
andl
jg
stos
mov
sbb
inc
pop
mov
pop
popa
add
mov
aaa
ja
lds
or
xchg
sbb
mov
cltd
inc
jmp
nop
add
mov
faddl
ror
cmpsl
or
pusha
mull
xchg
adc
jno
int
xchg
pop
pop
inc
int
add
mov
shrb
sbb
cmpsl
insb
fimuls
sbb
pop
mov
icebp
or
mov
stc
pop
jo
and
jge
mov
leave
xor
jo
sbb
sbb
fmulp
add
loope
mov
adc
inc
add
loope
mov
lods
test
gs
inc
mov
xor
adc
in
and
ret
cs
push
outsb
imul
imul
popf
mov
addr16
out
push
sub
lods
lods
pop
into
mov
push
push
in
fidivrl
mov
insb
xlat
sub
ret
jle
cwtl
leave
inc
repnz
out
or
mov
lods
sub
xor
test
lods
loope
stc
push
mov
testl
inc
pop
mov
lea
rcrb
and
cmp
jmp
sbb
mov
lahf
sub
shlb
cmp
push
inc
fwait
push
and
repnz
pop
out
outsl
add
cmp
out
push
cmp
arpl
push
imull
cld
in
repnz
cwtl
stos
inc
lds
adc
ljmp
sbb
filds
sbb
add
imul
jge
mov
ss
sbb
sub
fsubrs
push
shll
hlt
mov
xlat
push
mov
sar
xchg
ja
stos
fneni(8087
imul
stos
pop
and
or
pop
jp
or
es
shrb
dec
inc
sub
pop
pop
mov
aad
push
nop
inc
inc
cs
fnstenv
sbb
enter
jecxz
dec
jge
insb
js
pop
cmp
scas
pushf
or
or
call
pop
daa
and
and
sub
or
xchg
mov
ljmp
push
adc
cmp
popf
xor
adc
pop
and
xchg
sub
mov
int3
loopne
cmpsl
loopne
test
ffree
pop
cmp
cld
es
loope
clc
shlb
pop
or
loop
enter
pop
adc
cs
cli
and
imul
int
add
mov
addr16
insb
push
fadds
in
xchg
or
sub
clc
sbb
lods
in
sbbl
dec
dec
cli
push
dec
sbb
or
aas
out
dec
jge
mov
dec
or
xchg
cmp
decb
rcl
mov
ja
shrb
das
loope
in
insb
mov
cmpsl
bound
push
pop
repnz
adc
xorl
rorb
popf
insb
push
fldcw
mov
dec
fwait
rcrl
mov
int3
inc
mov
dec
int
das
jge
lret
cmp
ficompl
imul
lods
popa
and
mov
out
pop
xor
xor
stc
movsb
add
push
call
mov
sbbb
push
xchg
mov
clc
out
hlt
push
in
test
jmp
dec
inc
loope
ret
push
sti
xchg
lahf
add
cmp
ret
dec
sar
leave
loop
add
sub
gs
inc
and
rclb
xchg
cli
or
fdivrl
cmc
mov
mov
mov
and
sub
xlat
call
pop
cld
out
xor
outsb
xchg
shll
pop
jb
aas
xor
push
adcb
ss
fisubl
mov
or
xlat
mov
mov
pop
xlat
pop
mov
stos
fidivrl
or
lahf
jge
cmp
mov
sbb
xchg
add
lcall
js
outsb
push
loopne
stos
mov
dec
mov
cmp
rcr
rol
test
int3
mov
aad
sbb
push
xor
inc
push
mov
bswap
or
std
inc
jecxz
jb
inc
xchg
outsl
inc
mov
sti
stc
out
scas
movsb
lds
mov
adc
out
std
mov
std
aam
or
and
cmp
aas
cmpsb
sbb
test
es
je
ret
mov
fucomi
mov
xchg
and
inc
or
popf
jb
xchg
dec
lods
into
lcall
stos
push
push
imul
mov
or
inc
lret
adc
ds
mov
mov
jmp
push
aam
imul
lcall
mov
loop
shrb
adc
push
popa
call
mov
imul
adc
mov
sbb
mov
in
insb
push
std
mov
jl
stc
das
xlat
adc
mov
ljmp
mov
inc
daa
sbb
cmpsl
adc
xor
sbbl
outsl
flds
mov
dec
xchg
add
pop
cmpsb
ror
fcoml
into
loop
mov
aam
mov
pop
shrb
stc
adc
sti
test
jo
mov
loope
xchg
sub
inc
loope
dec
xor
loopne
fdivrs
xchg
jb
jecxz
pop
inc
gs
outsl
call
ffreep
les
mov
mov
add
adc
xchg
add
jp
sbb
out
shr
push
pop
inc
pusha
sbb
and
jbe
push
sbb
lods
xchg
mov
push
and
xchg
push
cwtl
ret
mov
leave
cmpsl
pop
call
dec
cmpsl
inc
out
arpl
or
clc
pop
je
pop
adc
ljmp
mov
lock
fildll
jae
fld
or
pop
fcmovne
movsb
adc
in
inc
push
or
jecxz
or
xor
add
add
dec
pop
mov
xchg
test
xchg
test
jecxz
int3
inc
sub
inc
jle
mov
sbb
inc
ljmp
push
inc
js
test
pop
push
add
sub
lret
lock
xlat
lret
js
sub
lods
mov
sbb
inc
sub
in
lcall
mov
inc
mov
dec
test
and
mov
jbe
adc
sub
imul
sti
pop
imul
js
scas
adc
jmp
dec
lret
repnz
lret
inc
and
mov
mov
ljmp
xlat
mov
push
mov
and
inc
lods
sub
cld
cmp
pop
mov
inc
es
xor
mov
shlb
cmp
mov
pop
mov
inc
jns
inc
and
mov
pop
out
jb
clc
test
fisttpll
or
cli
pop
add
gs
bnd
sub
insl
mov
mov
push
inc
jp
pop
adc
xchg
out
dec
push
fadd
in
outsb
mov
mov
pop
inc
pusha
sub
dec
and
addr16
rorl
push
ja
jp
outsb
iret
and
xchg
in
pop
or
dec
mov
mov
dec
push
ds
shlb
fldt
xchg
cmpsl
mov
nop
xchg
movsb
xchg
dec
stos
out
push
push
loope
mov
pop
into
test
cmpsl
cli
mov
add
push
dec
fsubrs
int
fisttpll
cmp
cmpb
inc
xchg
push
sub
inc
jl
std
sbb
aas
adc
inc
or
test
loopne
mov
adcb
sub
and
les
lods
pop
adc
sahf
fwait
push
mov
adc
cltd
stos
icebp
dec
div
fidivrs
add
popf
sub
pop
fbstp
cmp
push
xchg
jg
add
inc
xor
sub
or
push
test
pop
mov
push
aaa
dec
out
lret
ret
pop
loope
pushl
stos
std
inc
pop
and
add
mov
je
pop
and
ret
push
mov
inc
mov
stc
mov
aaa
les
dec
cmpl
xchg
shrb
mov
xor
dec
mov
movsl
dec
stos
cld
xchg
rolb
or
jle,pt
fisubrl
add
fnstsw
jns
repz
jge
test
dec
push
clc
jecxz
testl
rclb
ret
lods
lods
adc
push
push
in
test
inc
mov
ljmp
inc
sahf
mov
fldenv
cwtl
imul
mov
push
cmovl
movl
jae
outsl
xor
loope
aaa
movsb
sti
inc
xchg
push
adc
arpl
in
mov
movsb
xor
dec
bound
imul
jae
mov
insb
fs
in
arpl
cmp
lea
repnz
xor
sbb
pusha
clc
mov
jbe
dec
stos
pop
inc
mov
push
mov
dec
xchg
loope
jb
pop
cmp
xchg
outsb
test
int3
and
lods
nop
ja
push
jp
mov
xor
dec
std
cs
cltd
call
inc
cli
sar
js
add
cmp
lds
icebp
aas
test
pop
mov
adc
pop
sub
fildl
adc
cmpsb
ror
popa
daa
jl
nop
int3
loope
xchg
and
dec
imul
mov
lahf
mov
adc
push
push
rcrl
in
or
inc
mov
xchg
cmp
push
repz
mov
loope
inc
in
pop
es
movsl
mov
adc
lods
int3
shlb
in
adc
mov
inc
out
and
f2xm1
and
pop
cmp
dec
add
insb
inc
inc
mov
sbb
or
cld
outsl
jae
cmp
test
mov
inc
outsb
jo
push
stos
stos
inc
push
sub
push
push
stos
inc
arpl
xchg
subb
sub
cmp
xchg
or
rcr
pop
movsb
in
push
test
xchg
jbe
sub
hlt
addr16
sbb
dec
push
out
push
js
notl
ljmp
outsl
or
jmp
cmp
jb
sub
js
adc
test
pop
and
aam
mov
inc
cmp
icebp
or
mov
dec
mov
push
and
or
pop
sarb
sbb
std
mov
mov
loop
jge
int
rorb
cmpsl
push
clc
jbe
cmpsl
xor
adc
out
and
sub
pop
out
repnz
mov
inc
popa
mov
sbb
xchg
mov
repnz
dec
pop
lcall
ljmp
jae
inc
js
jae
shlb
inc
cwtl
inc
stc
mov
or
mov
xchg
addr16
push
and
fdivp
popa
iret
jno
imul
clc
ds
pop
adc
pop
inc
arpl
ss
aad
mov
push
jp
daa
mov
les
loop
dec
jb
loopne
adc
inc
adc
inc
jbe
and
inc
daa
fidivl
jmp
mov
push
and
test
pusha
inc
mov
push
fldcw
xchg
add
out
out
cld
add
push
dec
jmp
lods
inc
pop
push
pop
mov
mov
push
ljmp
jecxz
shrb
stos
lods
cld
incl
adc
pop
mov
jecxz
xchg
mov
push
ficomps
fwait
push
sbb
cmp
xlat
xchg
inc
jg
xchg
mov
add
fadd
mov
ljmp
jecxz
repnz
nop
es
movsb
xchg
int3
adc
xchg
hlt
orb
push
daa
imulb
outsb
sub
mov
pop
push
add
stos
lods
pop
rorl
and
inc
cli
sbb
arpl
xchg
inc
sub
mov
push
call
mov
aas
mov
in
mov
mov
cwtl
outsb
pop
and
jle
lahf
adc
popa
pop
lcall
dec
pop
js
and
mov
mov
aam
bound
mov
or
lods
adc
lcall
or
mov
jecxz
call
out
add
outsl
frstor
mov
jg
test
sbb
movsb
into
scas
push
test
int
nop
jle
insb
xchg
cmp
inc
inc
in
sahf
xchg
mov
cli
daa
sarb
sbb
popa
dec
lods
ret
ficoml
iret
push
xlat
xor
jge
cmpsl
jge
leave
pop
xchg
sub
pop
insl
mov
and
pop
pop
inc
lcall
cmp
imul
inc
arpl
out
xchg
lods
xor
fs
dec
cmp
xchg
adc
dec
sub
gs
xchg
and
mov
call
mov
shll
jecxz
pop
push
mov
movsb
pushf
rclb
xlat
mov
jp
and
and
or
pusha
mov
sti
pop
sti
fists
cmp
sbb
sub
int
enter
nop
js
sbb
insl
pop
repz
push
sti
jg
jae
fstpt
scas
jge
call
and
nop
add
pop
shlb
lahf
repz
inc
lahf
pop
add
out
int3
ljmp
mov
pop
int
or
adc
loopne
mov
scas
aaa
adc
mov
adc
js
or
scas
xor
aad
cs
aaa
mov
jl
pop
mov
pop
adc
fiaddl
shlb
adc
mov
ret
fiadds
scas
inc
outsl
int3
jmp
push
and
add
scas
push
lods
add
dec
insl
push
jno
sbb
cvtdq2ps
cli
stos
iret
dec
fldenv
fisubrl
push
xchg
sbb
popf
in
rolb
insl
outsb
inc
mov
popa
loopne
inc
dec
call
sub
mov
pushf
cmc
jmp
out
adcb
out
xchg
cs
loope
pop
fcmovne
cltd
add
xor
mov
cmpsl
jecxz
inc
sub
mov
mov
inc
xchg
loopne
xor
mov
test
inc
dec
testb
pop
jge
mov
adc
in
push
mov
not
pop
dec
inc
push
mov
int
mov
cli
in
fs
mov
je
in
sbb
ja
dec
rcrb
scas
hlt
mov
and
bnd
xchg
aas
inc
imul
xchg
dec
adc
ja
pop
lock
fsubs
mov
negl
cmpsb
cwtl
loope
cmc
add
inc
cmp
mov
pop
inc
or
adc
aaa
test
imul
arpl
mov
stos
push
mov
es
test
push
xchg
mov
scas
sbb
and
pop
sbb
rorl
or
xor
mov
and
jle
popl
in
cmp
sub
shrb
add
int3
aad
insb
jg
lods
imul
cmp
jns
roll
sbb
subb
popa
sbb
mov
cli
add
cmp
sahf
sub
dec
out
dec
adc
sub
fsubs
jbe
push
mov
into
dec
popa
repnz
out
push
mov
lret
fwait
std
icebp
mov
adc
and
movb
add
cltd
testb
inc
in
mov
pop
rcrb
mov
lock
pop
in
dec
cmpl
shl
xchg
mov
ret
cwtl
stos
mov
sahf
mov
jecxz
movsb
or
in
xchg
rcl
adc
dec
sub
fistps
ret
adc
clc
mov
push
shr
dec
aam
inc
mov
call
jne
xor
sub
rcrb
add
inc
out
mov
push
jp
movsb
dec
roll
dec
insl
cmpsb
or
mov
inc
movsl
rolb
shlb
shrl
pop
aam
jecxz
inc
or
stos
fdivs
test
mov
push
aam
jle
sub
and
inc
imul
das
push
mov
mov
inc
push
subb
insb
mov
add
test
int3
roll
inc
arpl
xchg
xchg
cmp
hlt
pop
shl
ja
adc
icebp
pop
test
clc
xchg
jmp
mov
fsubrs
test
push
cmp
iret
shl
sbb
in
fcom
dec
roll
insb
scas
in
cmpsb
add
inc
pop
mov
xchg
popf
iret
xor
addb
push
xor
bound
into
aad
js
xor
pop
lock
adcl
lea
in
add
sbb
mov
mov
inc
jb
cmp
in
mov
mov
js
nop
rorb
and
leave
push
enter
shrb
xchg
pop
bound
mov
in
fdivl
imul
jno
xlat
in
popf
mov
stc
popa
in
scas
push
dec
rcr
test
in
pop
jne
cltd
mov
add
call
movsb
jmp
pop
out
pop
adc
jg
pushf
sub
or
bound
inc
nop
test
adcb
dec
add
sub
push
cmp
xchg
test
sbb
pop
or
and
jns
out
pop
xchg
or
pop
enter
pop
int3
test
mov
mov
jmp
bound
inc
cmpsl
lds
sub
mov
arpl
jbe
sbb
mov
jp
push
in
shlb
jmp
xlat
dec
outsb
xchg
adc
adc
out
xor
inc
jle
std
adc
fnsave
dec
cli
out
stos
jge
inc
jno
mov
push
rcrl
xchg
jo
push
mov
push
mov
ficompl
repnz
mov
jbe
push
mov
sub
inc
sub
stos
or
imull
mov
mov
push
jge
inc
test
pop
mov
mov
xor
push
push
xor
mov
lods
push
fisttpl
repnz
add
cmp
testl
pop
push
sub
push
ja
fcomp
lods
and
pop
lods
sarl
pop
pop
inc
add
xchg
xchg
push
shrb
adc
repz
cmpsb
mov
enter
and
call
gs
mov
push
movsl
push
dec
cmp
xchg
adc
and
lods
iret
rcl
and
inc
or
inc
jns
xchg
push
mov
push
mov
jnp
xor
fimuls
fld
jg
inc
out
mov
movsb
xor
mov
or
dec
scas
inc
mov
bound
bound
int
jge
inc
mov
in
sbb
scas
push
mov
popa
sbb
and
out
cmpsl
cmpsb
aad
and
enter
sbb
mov
push
leave
mov
stos
jg
mov
ljmp
mov
insl
push
dec
cwtl
std
pop
cmc
iret
insb
pop
outsl
jecxz
sub
pop
xchg
push
cltd
mov
data16
push
dec
int3
pop
push
jne
movsb
pop
icebp
scas
test
je
inc
mov
xchg
sub
sub
adcl
test
xor
mov
add
ljmp
mov
nop
mov
loopne
push
xor
insb
mov
pop
mov
out
mov
mov
sbb
jg
fnstenv
inc
mov
inc
mov
out
cmpsl
mov
mov
lea
pop
fisttpll
push
aad
pop
jmp
mov
cmpb
lea
fisubrl
ds
pop
push
rclb
lea
sbb
cmp
daa
mov
call
push
loope
ret
ss
std
add
fdivs
cmp
xchg
mov
mov
leave
add
cmpsl
sahf
mov
scas
add
cmp
inc
loopne
js
mov
mov
pop
nop
stos
lods
push
incl
pusha
ljmp
cwtl
clc
fsts
mov
adc
cwtl
in
adc
pop
mov
inc
cmp
fcmove
sbb
inc
sbb
mov
sub
lcall
test
test
stos
pusha
adc
sbb
into
jle
test
dec
pop
sub
pop
add
push
add
pusha
scas
sub
lea
mov
sub
xor
xlat
inc
adc
add
loopne
sub
in
xor
bound
in
arpl
ss
outsb
dec
imul
xchg
cmp
rcl
mov
jno
mov
rorl
adc
ret
push
ljmp
test
popa
lret
sbb
pop
mov
adc
mov
jae
outsb
and
addr16
dec
push
and
lret
pop
jo
loopne
stos
push
cwtl
xchg
sub
rclb
pop
dec
or
inc
imul
fldl
outsl
fisubrs
jge
push
in
insb
inc
xchg
lahf
les
setl
pop
sarb
stos
sarb
fs
mov
les
push
pop
dec
loopne
ss
test
fsubrs
pop
sti
imul
cli
push
orb
mov
stos
jg
cwtl
lods
test
sub
xchg
mov
mov
in
mov
or
out
push
inc
inc
fiaddl
mov
dec
cmp
push
xchg
inc
mov
out
test
arpl
pop
fldenv
lock
int
popa
jne
imul
mov
in
pop
sti
or
push
and
int
push
addr16
sbb
dec
sbb
daa
inc
dec
mov
scas
mov
ret
and
lods
daa
loop
pop
cld
mov
xchg
cld
mov
arpl
mov
imul
out
pop
sub
outsl
cmp
adc
mov
outsl
pop
frstor
cltd
and
and
ret
lahf
fwait
cmp
std
push
and
insl
sub
inc
sbb
sub
lea
adc
sub
fisubs
inc
xchg
mov
mov
roll
outsl
mov
push
jmp
movsb
repnz
lods
popa
cmpsb
outsl
push
xor
sub
add
xchg
scas
rol
gs
xor
push
xor
rcrl
mov
jne
mov
popf
les
pop
pop
add
fsubr
das
mov
mov
in
mov
sub
jne
mov
call
and
js
test
adc
mov
xchg
lds
mov
pop
xchg
sub
cmpsl
push
mov
rcll
sbb
mov
cmp
fistpll
ss
movsb
cmpsb
sbb
lock
imul
inc
dec
pop
out
imul
mov
iret
dec
nop
aam
pop
fiaddl
dec
ds
mov
lahf
mov
push
jge
ret
lock
out
push
shll
push
mov
jg
adc
bound
adc
outsb
test
addr16
cmp
adc
test
imull
clc
sub
std
adc
xchg
call
push
test
loope
mov
xlat
arpl
stc
or
fs
mov
push
inc
xchg
and
pusha
adc
mov
mov
pop
cmc
pop
fdivrl
xor
inc
dec
mov
mov
rol
aaa
sbb
jns
shll
xchg
cmc
push
jb
movsb
push
pop
mov
mov
mov
push
inc
cmp
mov
test
out
sub
or
andb
ljmp
pop
dec
mov
dec
xor
jge
arpl
xor
cmp
or
ljmp
inc
jge
mov
xchg
mov
adc
shlb
pop
push
in
sub
mov
andb
inc
popa
push
loope
mov
jp
ss
jge
vpshlb
add
inc
js
ljmp
dec
dec
sub
sub
push
inc
nop
repz
arpl
pop
push
in
scas
int
push
lds
in
mov
inc
mov
adc
ljmp
pop
push
jl
push
mov
pop
lock
arpl
push
dec
sbb
xor
pop
mov
setl
pop
shlb
fisttps
into
add
aam
cmpsb
jns
xchg
scas
and
mov
adcb
imul
inc
pop
push
xchg
and
and
insl
cmp
xchg
jno
sbb
test
test
push
mov
pop
insl
hlt
adc
sarl
mov
push
xchg
popf
fs
mov
outsl
jo
test
testl
int
pop
int3
shll
test
jle
inc
enter
jecxz
fdivl
hlt
mov
inc
jnp
test
pop
or
loopne
call
movsb
out
in
and
sub
mov
push
pop
repz
gs
adc
jge
dec
add
stos
enter
aaa
shlb
arpl
inc
jl
pop
in
cmp
lods
loope
nop
xchg
stc
cltd
or
nop
jne
mov
mov
shlb
scas
nop
inc
or
sarl
push
cmp
xchg
mov
mov
test
scas
push
and
shlb
lea
dec
push
shlb
notb
dec
fldl
sbb
xor
jp
leave
fs
fsubs
xchg
pop
mov
and
mov
mov
or
ds
insl
pop
out
dec
sub
dec
das
in
in
arpl
loopne
or
pushf
inc
mov
subb
jge
lock
mov
aas
push
mov
imul
cmpsb
outsl
pop
push
mov
sarb
test
arpl
push
lods
jbe
mov
int
pop
inc
adc
lods
push
aad
je
dec
addb
or
fucom
addr16
cld
test
mov
inc
scas
lods
movsb
cmp
inc
addb
mov
xchg
push
pop
cltd
and
push
cwtl
pusha
adc
flds
fdivr
inc
pop
repz
jp
pushf
scas
aam
sbb
add
popa
inc
xchg
dec
cmpl
stos
fs
push
jo
test
imul
or
jns
or
fwait
and
fdiv
ja
mov
data16
mul
or
shlb
lods
fs
arpl
or
pop
cltd
jb
push
test
and
clc
jno
sarl
mov
out
adc
fs
cmp
cmp
nop
sarb
cld
xchg
adc
mov
bnd
xor
jmp
add
xchg
jecxz
aam
inc
mov
arpl
cwtl
into
pop
mov
loope
scas
cwtl
rcll
clc
mov
xchg
jb
mov
cli
sub
enter
iret
fsub
mov
cmc
out
int
call
cmp
dec
jecxz
fadds
mov
or
xlat
or
andl
enter
pop
jns
aam
popa
xchg
in
insl
inc
and
hlt
mov
inc
cmp
mov
sbb
adc
cmp
xorl
mov
cmp
xor
mov
adc
stos
inc
sti
jo
les
mov
inc
push
imul
or
dec
imul
mov
mov
inc
lahf
add
pop
add
push
stos
js
xchg
cwtl
cmp
fwait
jle
in
fs
cmpsl
inc
sub
aam
xchg
pop
clc
out
fs
pop
and
stos
lcall
jns
push
jecxz
push
xchg
fidivrs
mov
dec
mov
mov
fmul
add
int3
and
cmp
add
call
mov
xchg
and
pusha
xor
repz
rolb
in
dec
movsb
fmull
jmp
daa
mov
jecxz
out
pusha
push
mov
adc
cs
and
mov
jge
fnstenv
sbb
bound
pop
jbe
daa
in
push
test
mov
testb
in
adc
das
roll
add
inc
or
mov
lcall
inc
jmp
sub
cs
sbb
inc
xchg
cmp
adcb
mov
pop
test
inc
imul
mov
xor
jge
sti
xor
out
imul
cwtl
je
add
aad
arpl
xor
loop
leave
mov
dec
dec
sbb
cmp
stos
jecxz
cmpsb
add
jp
mov
push
xor
jg
cmpsb
mov
dec
movsb
pop
sub
scas
xchg
add
das
add
outsl
out
add
test
push
pop
lcall
xor
pop
test
mov
pushf
mov
push
mov
sbb
aas
aad
enter
push
call
adc
inc
ja
sbb
sbb
lea
inc
push
push
test
testb
jae
sub
xor
imull
jle
std
scas
xlat
stc
or
pop
xchg
push
lea
pop
insb
sub
in
cmp
inc
in
lods
cli
add
add
inc
add
cli
imul
lods
sahf
mov
stos
push
cmc
nop
pop
pop
test
push
aam
jge
mov
dec
mov
aas
cmp
lock
out
jl
ret
test
sarb
xchg
test
pushf
cmc
push
fstl
adc
fmull
pop
mov
imul
lahf
mov
lret
divl
imul
mov
mov
jns
or
xor
push
mov
movsb
lods
lods
adc
and
das
sbb
pop
arpl
and
movl
je
mov
or
and
outsb
xor
xchg
mov
cmp
jbe
dec
cs
xchg
ds
jo
or
adc
mov
pop
sbb
push
and
inc
jle
or
and
cwtl
xor
add
xchg
jo
or
cli
fadd
sti
or
pop
lods
adc
aaa
xor
xchg
sti
dec
popa
or
cmc
outsl
xor
aas
cmp
test
test
dec
notl
cmp
pop
out
adc
jge
xor
sbb
rclb
mov
push
mov
pop
rcr
test
clc
out
in
cmc
mov
dec
cwtl
mov
popl
xchg
jae
sbb
inc
adc
hlt
lods
or
pop
mov
or
push
imul
data16
mov
sub
push
movl
jno
cmp
test
or
bound
js
mov
cli
push
scas
cmp
jge
sub
push
or
lods
and
sahf
loope
inc
test
arpl
aad
mov
sbb
sub
loopne
and
andb
inc
inc
out
adc
jbe
fisttps
sbb
adc
xor
lock
mov
out
outsb
dec
icebp
sub
cmpsl
cmp
xor
inc
or
add
mov
inc
mov
push
cmpsl
scas
and
shlb
arpl
int
je
sub
inc
mov
xchg
mov
movsb
repz
inc
mov
andb
stos
fnstsw
out
adc
sub
xchg
orb
fiadds
out
mov
clc
sbbl
mov
push
ds
lcall
jo
stos
lock
mov
jmp
pop
in
sbb
aad
pop
stos
jo
pusha
out
leave
imul
mov
fldl
ror
mov
pushf
insb
push
mov
jno
mov
inc
xor
inc
addr16
nop
ds
mov
mov
mov
ss
sbb
out
xchg
push
jo
push
bound
aad
jge
mov
dec
and
mov
ljmp
rcrb
dec
push
or
jp
fmull
and
pop
mov
lods
aaa
stos
push
out
je
xor
pop
xor
xor
fs
push
sbb
insb
jns
in
pop
shrb
jp
jo
mov
outsb
sub
add
xor
loopne
fsub
test
fidivrl
insb
test
lcall
inc
shlb
fwait
mov
inc
fiaddl
cmp
fisubl
and
xchg
fcmovnb
es
sbb
adc
ror
faddl
inc
cmp
xor
scas
cmp
stc
jbe
orl
jo
out
xor
movsl
faddl
cmp
sbb
cmp
bound
aaa
adc
test
adc
bsf
andb
jmp
push
fidivrl
loope
push
fmuls
inc
inc
cmpsl
sti
mov
xor
hlt
inc
cmp
out
push
ja
inc
mov
xor
movsb
xor
imul
int3
inc
mov
loop
cmc
xorl
inc
push
sub
ret
xchg
sarb
test
mov
inc
or
adc
test
pushf
push
scas
or
sti
les
pop
shr
lock
and
mov
cmp
pop
and
or
sub
adc
add
scas
jecxz
dec
div
andb
lock
add
push
pop
testb
jmp
jecxz
push
jb
lods
inc
push
xor
sub
pop
ret
andl
pop
rorb
adc
flds
lock
mov
pop
ffree
test
pop
cs
and
movsl
out
loope
push
mov
scas
addr16
in
ret
push
inc
fwait
scas
mov
pusha
pop
scas
push
mov
aad
mov
and
jno
push
pop
lahf
or
mov
inc
stos
pushf
push
mov
push
pop
movsl
shll
push
mov
add
outsl
inc
xor
cld
stos
and
sbb
mov
sub
push
movsb
cmp
lcall
popa
aad
mov
push
push
or
ja
rolb
cwtl
mov
lret
call
cmp
cld
sbb
js
mov
push
sbb
and
mov
lahf
movsb
call
xchg
mov
js
adc
inc
push
add
dec
jo
push
xchg
xor
loope
add
mov
inc
lods
xor
ret
lret
jnp
int
mov
cwtl
out
repz
subb
shl
scas
fwait
jge
cmp
inc
jge
pop
xor
mov
push
xchg
jl
or
in
fnstsw
inc
mov
daa
sub
jae
aam
test
cmp
shrl
cwtl
jbe
push
or
fcoms
xor
or
test
or
or
lret
cmc
push
dec
fmull
sub
test
xchg
inc
and
mov
mov
pusha
ds
fadd
xor
dec
subb
add
inc
sub
mov
fildll
push
dec
std
pop
inc
push
out
mov
aam
cmp
cwtl
push
sub
inc
cs
sub
xor
lods
cld
pop
jmp
lret
cmp
mov
pusha
pop
inc
fisttpl
ret
call
lret
inc
popa
int
inc
stos
pop
lods
shlb
lock
or
sbb
mull
lods
mov
mov
fstpl
popf
xlat
push
femms
aas
jl
lock
test
dec
cli
pop
mov
jmp
lcall
adc
cmp
das
mov
cli
inc
mov
or
or
ja
mov
jl
push
dec
pop
mov
out
sti
insl
popf
push
roll
xor
xchg
add
lret
xor
add
pop
jg
cmc
mov
fs
push
fwait
mov
popa
cltd
push
mov
mov
sub
stos
aad
add
sbb
call
push
mov
rclb
jmp
jmp
clc
adcb
das
cmp
jne
sub
push
pop
cltd
lds
lds
fldcw
sbb
pop
ret
ret
add
cmp
sub
sbbb
adc
mov
lret
les
inc
fstps
rcrb
das
sbb
out
iret
aam
lock
and
pop
jmp
sar
push
add
cwtl
mov
imull
int
out
out
mov
jns
pushf
test
mov
idivl
sbb
push
adc
inc
adc
cmpsb
mov
mov
lock
sbb
int
mov
xor
mov
roll
int3
sbb
addr16
mov
js
loopne
fwait
pushf
les
inc
push
mov
xchg
test
outsb
mov
inc
sti
dec
push
imul
fldl
out
repz
das
jge
in
ljmp
pusha
push
inc
dec
jae
jecxz
jmp
or
jge
jo
xlat
int
push
popf
dec
inc
cmp
and
mov
out
in
sbb
movsb
xorb
jb
pop
mov
popf
add
enter
push
ja
arpl
mov
out
clc
sbbb
fldln2
sbb
inc
cmp
fdivrs
in
les
push
test
add
add
inc
sbb
fcmovu
ljmp
jle
xchg
mov
lret
xlat
icebp
aas
pusha
imulb
cmp
aaa
leave
int
pop
xor
scas
pop
sub
movl
fs
mov
lods
inc
cmpsb
repz
adc
adc
imul
xor
pop
repz
popa
and
mov
pop
xor
inc
lcall
sub
inc
cmp
pop
shrb
xor
dec
xchg
dec
mov
fldpi
outsl
out
fdivrl
mov
jns
lcall
cmp
dec
push
mov
xor
and
add
jecxz
jb
inc
shrb
sahf
aas
inc
rsm
jge
fsubl
rcrb
pop
dec
cmpsb
mov
mov
faddl
adc
icebp
ss
aam
out
push
or
pop
ljmp
arpl
push
mov
testb
ljmp
xchg
inc
pop
dec
sbb
out
add
cli
call
outsb
out
push
andl
or
fsubr
addr16
and
cmp
cld
cld
add
mov
adc
dec
out
hlt
inc
mov
shlb
inc
pushf
or
sbb
int
movsb
lock
je
stc
push
push
and
cwtl
push
cmp
push
int
push
jne
mov
inc
cli
push
outsb
mov
mov
js
adc
pop
cmp
mov
rcrb
jge
repz
out
mov
inc
inc
mov
push
dec
push
inc
imul
or
test
imul
mov
mov
push
inc
cmpsl
adc
push
shlb
out
or
xor
mov
add
inc
inc
dec
add
push
arpl
mov
fisttpl
test
xchg
jl
cmp
inc
xchg
popa
sbb
inc
in
add
or
jae
popf
inc
es
pop
je
fs
aam
xchg
mov
fisttps
jbe
sbb
xor
rclb
and
pop
movsl
push
loopne
ds
ret
sti
cmc
and
dec
scas
pop
pop
rolb
or
push
or
imul
pushf
outsl
lds
mov
sbb
adcl
adc
adc
repz
or
loop
mov
push
mov
xchg
pop
cmp
adc
ds
scas
lock
mov
jle
mov
adc
int
jns
je
fidivrl
shrd
sarl
mov
or
je
stos
push
xchg
sbb
mov
sahf
lcall
and
mov
movhlps
cmpsb
fnstcw
push
test
popf
jge
push
dec
and
scas
rolb
xchg
inc
js
out
mov
andb
sub
inc
dec
lods
cmp
mov
movzbl
ret
testl
pop
push
cmp
fcomps
inc
bound
outsl
cmp
push
lea
pop
rolb
stc
outsb
lret
jbe
inc
outsl
cmp
fistl
xchg
push
xor
addr16
push
sbb
js
loopne
sahf
movl
aaa
inc
add
push
add
iret
leave
sub
jmp
mov
ja
jne
xor
dec
sub
mov
mov
idiv
aad
iret
shl
ss
inc
inc
loope
cmp
out
sub
inc
mov
and
aaa
jo
fistpll
das
insb
lods
add
sbb
mov
fs
arpl
aaa
jge
aad
cltd
shlb
pop
pop
inc
mov
or
adc
rorb
mov
sub
pmaddwd
mov
sbb
jecxz
shr
mov
hlt
pop
sbb
add
push
jle
ss
inc
scas
fildl
sub
pushf
and
popf
jp
gs
inc
out
sub
mov
fistps
insl
ficomps
scas
hlt
ret
adc
rcrb
fildl
lods
rcrl
outsb
mov
insb
fidivrl
mov
call
and
js
jge
pushf
in
pop
rclb
push
addr16
shr
and
fwait
inc
loope
js
movsb
xchg
or
in
mov
outsb
inc
xor
loope
pop
xchg
or
lods
dec
push
adc
mov
in
inc
mov
xor
push
inc
push
out
test
jns
je
out
ss
and
nop
sbb
aaa
stos
push
in
enter
pop
sbb
das
add
jno
inc
insb
idivl
jg
jge
arpl
pop
out
pop
mov
pop
test
add
mov
notl
and
cwtl
push
push
test
fsub
jge
jo
push
xor
xlat
pop
rcrb
push
adc
mov
out
pop
test
add
push
inc
mov
sbb
dec
jg
call
data16
js
jns
ss
stos
loopne
das
lock
ret
and
lods
movlhps
mov
test
out
sbb
popa
lods
mov
dec
jbe
push
je
push
and
lcall
popa
pop
and
test
mov
ja
scas
dec
xchg
push
outsb
sbb
pop
xchg
mov
mull
cmp
dec
lock
add
and
jno
jns
cltd
mov
in
inc
push
in
mov
push
xor
push
ds
xor
loopne
adc
sbb
lock
dec
mull
inc
test
je
mov
ds
call
mov
out
mov
adc
jg
jmp
mov
inc
mov
fs
sbb
aam
pop
pop
aaa
fxam
cwtl
mov
ljmpw
push
mov
mov
push
mov
imul
lret
xor
fists
mov
mov
inc
and
loope
movl
jb
test
loopne
mov
dec
mov
or
ret
loopne
jecxz
xchg
fidivl
pop
out
cmc
ljmp
lods
mov
pusha
mov
cmp
repnz
out
int
mov
jo
push
in
xchg
add
push
sbb
jmp
das
jmp
movsl
imul
jb
cmp
scas
popf
jg
jo
sbb
rcr
cmc
aad
mov
dec
and
jg
dec
push
and
pop
in
ss
inc
jb
xchg
inc
cmovo
xchg
mov
sarl
xchg
push
imul
out
sub
mov
stos
dec
push
or
mov
push
mov
jecxz
clc
dec
inc
jb
imul
fnsave
push
inc
out
cmc
dec
test
stos
outsb
mov
lods
sbb
pop
inc
addl
sub
push
add
popa
movsb
pop
scas
std
movsb
lock
mov
into
inc
outsl
jg
pop
add
jno
adc
adc
lds
dec
jle
inc
pop
int
inc
sub
mov
js
loope
jb
out
xor
mov
jl,pn
xor
add
insb
cli
push
cmp
nop
sub
mov
pop
sbb
xchg
popf
scas
movl
mov
and
push
sub
sahf
pop
push
or
pop
or
push
stc
jmp
mov
das
test
pushf
inc
or
stos
xchg
mov
rclb
movsl
aaa
lcall
imull
iret
mov
repz
ljmp
lods
and
cmp
push
jl
mov
nop
xor
gs
ret
push
gs
incb
xlat
pop
xchg
or
pop
shr
std
and
fwait
das
cmc
sbb
movsl
pop
call
mov
out
fdivrs
rclb
sbb
jge
push
add
shr
pop
adc
xor
dec
je
pop
lret
stos
loop
cmc
xchg
cmp
xchg
mov
nop
fnstenv
cmp
aas
mov
aaa
sub
lods
adc
xchg
lea
cmpsl
jp
rclb
jo
xchg
scas
fstl
sbb
push
fsub
outsb
aad
lock
inc
test
dec
shrl
test
mov
pop
push
loope
xchg
iret
lock
sbb
je
hlt
aaa
jo
inc
int3
cltd
inc
sub
call
pop
pop
addb
repnz
add
in
pop
mov
mov
fs
out
aad
gs
push
scas
xchg
inc
js
shrb
je
mov
xor
popf
mov
sub
push
shlb
mov
mov
aad
enter
std
dec
xchg
imul
xchg
cltd
insl
sbbl
xchg
ret
aad
sub
stos
mov
popa
loopne
insb
aam
ds
jne
and
outsb
mov
and
inc
outsl
repz
xlat
cmp
xor
pop
add
stos
sub
scas
xchg
arpl
test
mov
xchg
and
pop
fadds
mov
push
ret
dec
push
xchg
loope
push
pop
cmpb
hlt
imul
pushf
outsl
mov
test
xlat
jge
adc
out
pop
inc
push
scas
rclb
jg
test
cmp
push
mov
sbbl
sbb
sbb
movsb
in
mov
mov
imul
pop
cmp
inc
mov
les
inc
jge
push
cmp
stos
bound
or
cltd
sub
inc
lods
cmp
sahf
loope
or
jb
mov
pushf
test
and
sbbb
mov
inc
test
jmp
pop
ffree
rcll
mov
adc
test
icebp
mov
addr16
sub
in
xchg
dec
push
inc
lret
xlat
fsubl
push
pop
mov
sub
pop
test
inc
sbb
test
xor
jo
je
dec
dec
mov
popf
jbe
repnz
inc
push
in
add
mov
scas
lock
xor
dec
arpl
std
arpl
mov
fldcw
inc
testl
test
inc
in
cmpsb
dec
cmp
and
pop
shlb
jmp
cmovo
sbb
lock
cli
test
arpl
mov
loopne
fs
sahf
fsubs
popa
fs
cmpsb
daa
inc
xchg
or
push
and
lods
or
inc
cli
or
adc
or
sbb
outsl
cmpsl
mov
push
cmpsb
sub
ljmp
sub
cwtl
ja
inc
shld
add
mov
jnp
mov
mov
test
jo
mov
cltd
pop
test
inc
pop
push
aad
pop
mov
pop
dec
sbb
ja
or
pushf
xchg
orl
loopne
mov
mov
and
add
inc
mov
and
inc
test
push
sub
jge
rcll
sbb
inc
orb
mov
cmp
pop
shlb
pop
or
pushf
sub
dec
jmp
gs
jecxz
push
popa
hlt
push
je
jns
loop
je
xchg
out
mov
jge
mov
push
add
adc
mov
add
dec
mov
lock
lds
aad
pop
push
ljmp
push
lahf
stos
into
mov
into
into
ret
dec
inc
adc
sbb
push
or
popa
inc
shll
ret
xlat
xor
xchg
std
pop
aad
pop
mov
xchg
pop
cmc
push
mov
inc
mov
mov
in
xchg
fldcw
push
sub
mov
sbbl
test
popa
or
pop
and
fistpl
ficompl
inc
xor
pop
sbb
xor
dec
xchg
ds
jb
shll
cmp
sub
rclw
jno
adc
outsb
js
in
mov
daa
movsb
add
jo
fimuls
xor
hlt
jae
iret
bound
aam
ret
rcrb
sub
fsubl
test
cmc
mov
inc
and
push
aad
js
push
arpl
les
pop
fcoms
or
xchg
mov
ret
sub
out
cmc
sbb
pop
xchg
loopne
je
sbb
or
aam
mov
inc
add
inc
cmpsl
ret
inc
cmovns
sbb
mov
imull
or
sti
hlt
adc
js
mov
add
popf
xlat
or
inc
repnz
or
xchg
sub
xlat
repnz
hlt
scas
hlt
push
sbb
push
cmp
outsb
movsb
loopne
lock
arpl
or
fldl
inc
inc
pop
imull
data16
dec
test
cli
ljmp
ret
mov
popf
loop
push
and
inc
push
push
pop
ljmp
aaa
pop
fcoml
inc
xor
or
mov
inc
dec
mov
jle
inc
lahf
pusha
ret
iret
mov
xchg
mov
push
mov
push
movsl
inc
mov
es
sti
cmp
pop
out
orl
scas
sub
inc
pushf
mov
or
cmp
leave
fisubrl
cmp
imul
sahf
xor
or
in
xor
pop
lahf
es
les
mov
mov
pusha
push
in
rolb
daa
xlat
jmp
outsb
out
mov
ficomps
int3
dec
xchg
and
mov
adc
dec
test
inc
add
jmp
cld
call
and
mov
mov
jns
mov
jns
out
sarb
mov
jp
stos
mov
fidivrl
aas
fcompl
inc
popa
fsubrs
jns
lcall
xlat
mov
jecxz
stos
jmp
in
push
cmp
adc
into
cmp
scas
cli
les
es
jbe
xor
jp
pop
mov
orl
in
arpl
subl
pop
loopne
lret
pop
pop
add
mov
nop
adcb
daa
pop
test
push
lahf
cltd
jns
add
xor
sub
daa
cmp
inc
out
push
pop
ds
sub
inc
push
shr
or
mov
js
jecxz
mov
inc
or
je
mov
inc
push
xchg
push
add
popa
jb
scas
call
js
in
push
fstl
icebp
pop
inc
mov
xchg
and
dec
int3
insb
mov
inc
cli
aad
sbbb
adc
pusha
push
pop
adc
and
dec
loop
sbb
insb
xchg
inc
fabs
out
mov
test
call
int
stos
add
rclb
mov
test
xchg
rolb
cs
sub
into
cmp
loop
cmpsb
pop
sbb
shl
and
loope
mov
pop
add
movsb
mov
mov
adc
movsb
outsb
xchg
movsb
inc
lcall
lea
inc
lret
aam
mov
ds
sub
xchg
call
push
pop
sub
orb
cmp
inc
shlb
loopne
aas
xchg
pop
in
mov
push
push
cmp
adc
push
xlat
and
cltd
clc
push
fstl
sub
and
inc
and
xchg
outsb
dec
sub
popa
jmp
aad
jb
mov
and
push
dec
or
jp
mov
and
lods
push
dec
pop
sar
pop
ror
jae
mov
les
inc
movsb
nop
jecxz
movsb
or
lcall
in
lret
mov
add
sub
jle
pop
hlt
pop
mov
sub
cmpsl
adc
xchg
jg
cmp
out
popa
sub
leave
push
dec
imul
lods
push
mov
push
scas
xor
cmc
adc
cmp
push
inc
cmpsb
mov
and
test
stos
sbb
push
push
xor
addr16
aaa
mov
popa
mov
shrb
imul
xor
idivl
stos
out
push
aad
adc
lock
xor
xchg
std
sub
mov
inc
cltd
inc
cmpsl
cltd
mov
and
ret
pop
adc
fcomps
sbb
mov
out
xor
fcmove
xchg
dec
pop
daa
lods
clc
pop
ret
flds
inc
cmpsl
pop
rclb
ret
cmpsl
aas
dec
in
mov
loope
mov
xchg
xchg
inc
clc
fisubrs
lock
sub
inc
ljmp
inc
sub
lret
cmp
les
roll
adc
jmp
dec
setp
in
mov
or
xor
push
pop
sti
jno
ret
lods
hlt
out
push
insb
inc
fcoms
rcrb
pop
scas
orl
dec
outsl
das
push
sbb
or
jnp
xor
rcrb
mov
xchg
mov
lret
jge
add
je
sbb
or
loope
inc
push
or
sub
loopne
mov
andl
loopne
aad
or
inc
push
sbb
das
dec
pop
mov
pop
test
insb
outsb
fidivs
aad
mov
scas
jo
mov
testl
inc
lahf
adc
cmp
aad
js
pop
jno
jb
sub
inc
xchg
mov
dec
mov
or
dec
sub
mov
cmp
cli
jge
fwait
aaa
sub
sbb
or
aad
mov
lahf
add
jae
shlb
and
pop
xor
xchg
scas
sahf
out
lods
lock
pushf
int3
jg
lret
call
or
test
scas
std
cmp
push
or
lods
pop
jno
push
mov
cmp
test
jmp
lret
or
lods
ss
mov
xchg
jecxz
xchg
jecxz
test
inc
shrl
or
or
mov
pushf
mov
adc
xchg
xchg
dec
xchg
xchg
inc
xchg
fnstenv
cli
mov
ret
sub
sbb
sbb
mov
xor
or
sti
sub
mov
inc
mov
movsb
and
nop
sbb
xor
jecxz
add
jo
dec
insb
cmpb
jbe
inc
shlb
cltd
out
xchg
cmp
inc
mov
outsl
ja
adc
push
aaa
pop
sbbl
pop
stos
pop
in
int
jecxz
pop
ds
xchg
test
inc
aas
lea
xor
outsl
adc
outsl
inc
push
outsl
outsl
mov
mov
inc
lods
fdivrs
and
xchg
mov
push
hlt
cs
jmp
xchg
lock
repnz
cs
stc
js
adc
cmp
mov
js
cmc
dec
lock
div
test
dec
xor
fstp
jg
mov
cmp
fstps
mov
mov
xchg
fstps
and
push
adc
sbb
add
test
dec
in
dec
fs
inc
cmp
sub
sbb
sub
pop
idivb
mov
shrb
inc
mov
mov
arpl
scas
jl
add
xchg
mov
stc
fcompl
mov
lods
cmp
inc
add
rolb
repnz
out
mov
into
rcrl
shl
pop
inc
int
in
fs
inc
enter
or
xorl
loope
inc
out
sbb
in
jnp
xchg
mov
jne
or
pop
lds
mov
fwait
addr16
inc
fcomip
scas
jge
sbb
jp
or
and
mov
push
dec
mov
pop
outsb
pop
or
out
pop
mov
cs
cmp
push
jl
test
in
adc
jo
adc
cs
dec
inc
loop
int
sbbb
dec
pop
les
adc
popf
jecxz
xchg
and
out
loope
out
pusha
lods
mov
movsl
test
and
sub
mov
pusha
mov
sar
cmpsl
mov
xchg
daa
add
bound
pop
imul
imul
shlb
mov
adc
into
dec
mov
mov
fists
xor
inc
stc
mov
movsl
sbb
mov
imul
xor
xchg
fcom
adc
push
dec
pop
xchg
fldenv
sbb
add
arpl
sbb
mov
ss
pop
aaa
out
pop
cmpsl
lds
push
stos
push
loope
ja
xchg
pushf
mov
leave
cmp
xchg
int
xchg
jge
cmp
jl
sub
mov
aam
arpl
mov
in
frstor
sbb
popf
xchg
fwait
xchg
cwtl
inc
mov
mov
jbe
sbb
xchg
stos
enter
frstor
mov
mov
lcall
rcll
stos
test
arpl
dec
inc
cmp
jns
pusha
lods
cmp
orl
inc
mov
test
fildl
lcall
sub
lock
mov
orl
adc
sbb
inc
sbb
ljmp
pusha
push
sbb
pop
sub
shl
mov
jno
jp
mov
xchg
cmp
pop
or
fwait
out
popa
mov
popa
int
inc
gs
popa
mov
or
mov
and
arpl
or
inc
mov
mov
call
pop
das
push
cmpsl
fwait
and
fiadds
ljmp
daa
stc
sbb
cmpsb
cmpsb
test
adc
mov
outsb
or
popa
std
lods
leave
mov
add
mov
push
fwait
adc
jl
mov
popa
in
cltd
inc
out
pop
xor
lock
mov
in
sub
loope
jg
xchg
xor
data16
cmp
lcall
xchg
out
hlt
inc
in
mov
movsb
nop
pop
mov
adc
cwtl
jb
ds
xchg
pop
cmpsl
inc
pop
fcomp
mov
pop
dec
mov
out
mov
test
cmp
jl
je
mov
int
jns
jle
jl
dec
loopnew
inc
stos
scas
popa
cli
loopne
mov
mov
jnp
or
fsubp
pushf
push
sbbl
push
xchg
in
leave
sbb
pop
in
add
rcrl
jo
dec
xor
sbb
test
cwtl
sbbb
and
adc
popa
add
push
das
dec
jne
inc
mov
or
jb
pop
push
mov
adc
pop
mov
and
xchg
push
mov
cwtl
jmp
popa
nop
mov
mov
dec
xchg
pop
add
xor
pop
inc
push
push
adc
mov
repnz
sub
in
idivl
fdivr
cmp
pop
leave
aad
imul
and
sbb
add
jl
push
and
inc
jge
ret
jmp
pop
jle
cld
daa
lods
jecxz
cmp
jmp
add
rclb
push
in
movsb
int
pop
pop
shlb
div
mov
in
int
nop
cmpsb
mov
xorb
popa
push
pushf
fisubl
add
pushf
iret
fsts
outsl
andb
push
mov
mov
pop
stos
sbb
pop
inc
mov
outsb
sbb
inc
sub
cwtl
lods
dec
mov
pop
fstl
jmp
lods
movzbl
scas
and
jge
xchg
lods
movsb
mov
shlb
fs
push
cmp
jecxz
movsl
loopne
movb
xor
je
pop
out
ljmp
or
repnz
std
push
inc
dec
loope
imull
jne
dec
sti
cmp
mov
rclb
ljmp
jns
jp
out
push
repnz
jo
xor
loopne
fs
dec
jns
xor
pop
jns
inc
xor
mov
lahf
adc
inc
aam
fcomp
dec
js
pop
sub
xor
das
inc
call
test
lods
and
jmp
inc
mov
mov
movsb
nop
repz
mov
imul
insl
add
ret
hlt
cmp
in
gs
inc
mov
shll
shl
xor
mov
jo
js
aad
fisttps
inc
pop
scas
or
mov
push
inc
js
cs
xchg
filds
icebp
imul
cs
arpl
mov
push
pop
addb
inc
mov
jp
mov
and
or
iret
xor
mov
flds
xor
test
mov
inc
das
cmp
fcmovnb
rcrl
shrd
stos
cmc
aad
shll
test
out
cli
cmp
fistpll
pusha
sarb
sbbb
pop
stc
addr16
idivl
fld
jmp
out
or
sbb
fsts
cmp
mov
out
push
pop
js
int3
push
mov
push
std
xlat
xchg
push
scas
adc
movsl
cli
andb
rorb
inc
push
or
imul
mov
xor
inc
mov
push
stos
sub
push
jg
cltd
push
cmp
add
inc
cli
adc
out
or
or
mov
hlt
push
dec
sbb
dec
rcrb
adc
rolb
xlat
clc
call
or
xchg
in
adc
add
in
cs
adc
sub
test
popa
sarb
or
insl
push
push
add
jl
xchg
lock
mov
cmp
in
lods
or
insl
mov
cmc
inc
mov
cmc
rolb
repnz
lods
outsl
and
pop
in
mov
test
in
sbb
pop
jge
aam
sbb
or
push
test
pop
push
ds
sub
stos
lcall
pminub
xor
inc
pushf
dec
imul
xchg
cli
shlb
imul
adc
addr16
sti
dec
gs
or
js
test
pop
sub
mov
jp
icebp
sub
ret
inc
je
test
or
push
test
jb
inc
pop
into
sbb
add
mov
inc
xor
push
xchg
mov
std
jb
cli
ret
rcr
fwait
gs
sti
adc
mov
in
hlt
pop
popa
xor
mov
icebp
lds
xor
shrl
stos
mov
ret
cmp
xor
dec
jge
adc
push
xor
inc
pop
into
dec
xchg
out
outsb
imul
sub
jmp
xor
mov
mov
cmp
mov
pop
fs
nop
inc
jl
xchg
pop
adc
mov
dec
push
out
jnp
pushf
add
cmc
in
sub
outsb
inc
test
jg
imul
test
out
movsb
pusha
push
out
push
pop
aam
pop
rorb
call
arpl
mov
cmp
sbb
pop
lods
and
nop
das
insl
test
call
inc
test
jnp
add
std
es
pop
stos
adc
inc
loopne
inc
mov
push
mov
mov
inc
fldcw
push
add
fildll
leave
rcl
mov
jo
imul
mov
fwait
gs
and
pushf
adc
mov
dec
xor
xor
enter
pop
shlb
data16
out
push
dec
mov
jl
adc
test
inc
mov
fcoml
pop
pop
mov
push
lea
out
lock
push
jns
shll
mov
and
sub
test
xor
mov
push
mull
mov
push
inc
mov
in
add
dec
add
dec
je
shl
scas
popa
sarl
sbb
lcall
outsb
out
cmpsb
mov
and
cmpsl
dec
inc
in
jp
adc
ljmp
inc
pop
push
lcall
fs
or
sbb
outsb
pop
enter
or
jns
xor
cltd
sbb
jle
outsl
push
cli
popf
test
mov
pusha
out
jle
out
push
pop
jp
mov
inc
and
adc
cli
mov
test
in
popa
jle
inc
inc
mov
mov
iret
mov
adc
nop
mov
dec
mov
xlat
xchg
out
std
loopne
pop
pushf
mov
and
adc
aaa
leave
imul
push
lahf
pop
shr
int
outsb
aaa
mov
in
cld
js
fistl
adc
lods
jae
dec
fbstp
insb
adc
in
or
sti
dec
pop
orl
mov
add
enter
cmc
dec
int
hlt
inc
or
mov
inc
into
sbb
call
dec
pop
pop
mov
dec
aaa
xor
cmc
ljmp
adcb
mov
inc
js
cmp
sub
inc
cmp
dec
repz
jo
hlt
ret
hlt
adc
or
mov
cld
fiaddl
xchg
pop
and
pop
xchg
adc
inc
mov
arpl
xchg
addb
mov
pusha
ffreep
push
daa
popa
out
xorl
rorb
lret
lret
lret
push
push
and
pop
shlb
cmpsl
jno
fsubrl
push
fisttpll
mov
cwtl
sbb
paddb
xor
movsb
xchg
ret
sti
add
movsb
out
inc
mov
data16
xor
fbld
sbb
mov
sub
sub
jge
popa
scas
call
inc
pop
ret
in
pop
mov
inc
inc
out
ljmp
subb
push
xchg
rorb
sub
mov
fidivrs
cmp
lods
testl
push
cli
stos
mov
jns
push
sub
lods
cmpsb
hlt
inc
and
js
sbb
rcrb
and
incl
xor
ljmp
mov
call
outsb
fwait
sbb
es
divl
shrl
pop
cmp
insb
inc
cs
push
sub
push
dec
data16
sti
xchg
mov
dec
in
sub
push
icebp
add
loope
push
in
jb
jae
pop
inc
es
cmp
push
mov
xchg
loopne
dec
pop
sbb
inc
jmp
push
js
inc
frstor
mov
jb
daa
xchg
sub
pop
call
negb
loopne
loope
adc
push
jg
rorl
mov
push
dec
and
imul
mov
daa
cmpsb
mov
mov
add
mov
jecxz
mov
lods
aam
jmp
imul
int
movsl
int3
mov
cmp
lds
addr16
mov
fwait
jmp
js
sbb
push
sti
flds
pusha
cmp
rolb
test
pop
test
sarl
outsl
ss
ljmp
mov
and
je
and
rcr
jge
ret
call
sub
addr16
pusha
add
pop
mov
cmp
pop
loopne
xchg
popf
arpl
mov
inc
mov
leave
fidivrl
arpl
fistl
in
into
add
cmc
push
divl
scas
hlt
pop
add
sub
jl
add
pusha
imul
hlt
in
lods
loopne
shlb
stos
data16
dec
ds
out
das
jno
int3
xchg
in
je
mov
push
dec
arpl
mov
and
mov
or
insl
int
fistpl
adc
xchg
pop
mov
imul
movsb
cmp
mov
jecxz
out
test
gs
push
add
mov
test
mov
mov
jle
hlt
cld
dec
inc
jge
add
xlat
jns
and
sub
pop
xchg
lods
inc
ret
hlt
xchg
mov
mov
mov
xchg
addr16
outsl
dec
mov
push
bound
stos
xlat
cmovle
dec
mov
sahf
mov
cmpsb
push
dec
or
test
into
mov
mov
cmp
pop
pop
cmpsb
dec
ljmp
inc
sbbl
sub
pop
pop
pop
sbb
lock
cmp
mov
in
inc
leave
cmp
adc
stos
mov
mov
mov
and
dec
mov
and
ss
movsl
outsb
frstor
inc
mov
push
insb
loopne
cmp
lcall
movsb
cmpsl
push
loopne
popf
popa
or
inc
push
shrb
mov
mov
fcompl
xor
mov
sub
mov
fldcw
lods
shlb
adc
or
popa
cmc
inc
aad
ljmp
into
inc
mov
loope
mov
shrb
sub
add
test
sti
ljmp
cmpsl
add
dec
std
pop
xor
xchg
mov
je
negl
adc
push
pop
stos
mov
pushf
movsl
mov
imul
ljmp
cmp
sub
push
push
cmp
mov
mov
adc
fiaddl
outsb
aaa
mov
push
loopne
add
adc
mov
ljmp
inc
mov
xchg
lcall
imul
aam
cmc
in
iret
in
xchg
in
push
dec
aas
sbb
xlat
aad
lcall
xor
jmp
int
shl
shrb
fiaddl
ficompl
add
test
pop
shl
xchg
mov
adcb
pop
pop
push
daa
outsl
imul
push
insl
loopne
arpl
mov
das
jge
ljmp
pusha
lcall
jbe
mov
mov
ljmp
sar
std
es
jmp
in
lods
popa
sbb
aaa
lret
xor
ficomps
jle
xor
push
adc
jg
sbb
roll
jge
sysenter
int3
cmp
js
aaa
ja
push
adc
dec
lahf
jmp
ret
popa
repz
cwtl
xlat
sbb
outsb
inc
mov
xlat
insb
sbb
movsl
cltd
aas
addl
jecxz
arpl
adc
ja
add
dec
sub
pop
mov
sbb
pop
inc
mov
aad
mov
loopne
insb
push
cmc
xor
xchg
insb
call
outsb
bound
arpl
icebp
mov
shrl
mov
ret
inc
gs
out
dec
mov
bound
mov
ja
jb
adc
les
adc
xchg
lods
lock
mov
addr16
mov
shr
rcr
pusha
out
arpl
inc
fwait
arpl
adc
ljmp
fsubrl
mov
shr
adc
mov
adc
push
inc
add
dec
out
mov
mov
xchg
inc
arpl
inc
inc
or
out
cmpsb
or
push
jnp
shrb
mov
inc
fidivrl
sub
jne
cld
xor
push
mov
mov
add
pop
rcr
iret
jnp
iret
leave
ss
je
jne
or
ret
mov
mov
lods
jle
mov
mov
outsb
mov
sub
fcoms
inc
mov
pop
rolb
sahf
pop
mov
gs
in
loopne
inc
inc
mov
push
cmp
es
or
push
jbe
test
ljmp
sub
sarb
into
arpl
hlt
mov
icebp
jl
and
mov
cmpsb
adc
fadd
add
pop
or
cmp
jmp
add
mov
lahf
mov
cltd
out
inc
enter
leave
in
push
sbb
sbb
pusha
mov
adc
lods
jg
outsl
push
and
mov
adc
notb
add
shlb
loopne
andl
jne
stos
pop
pop
cmp
testl
cmp
dec
mov
pop
pop
add
inc
sub
xor
adc
inc
es
inc
or
stc
mov
out
outsb
cmp
scas
das
mov
std
sbb
mov
jg
jno
cmp
ljmp
cmp
or
push
stos
xchg
pop
inc
push
jae
and
loopne
nop
out
rep
popa
push
stos
scas
das
insb
fs
and
inc
aaa
cld
in
add
push
push
inc
mov
sar
xchg
mov
xchg
jecxz
xor
add
int
out
test
ljmp
inc
mov
in
mov
dec
push
cmpsl
dec
add
in
xor
or
mov
xchg
clc
adc
mov
jb
mov
adc
loopne
sub
add
sti
loop
hlt
movsb
shll
sub
popa
cmp
ret
and
push
test
outsl
fisttpl
repnz
mov
sbb
add
mov
mov
fwait
push
jge
sub
shl
popa
out
adc
daa
xchg
add
enter
in
add
inc
adc
fsubrl
mov
cmp
popa
lcall
jb
loope
sub
mov
mov
push
or
jg
dec
jge
cli
mov
xchg
jb
mov
mov
movsb
jge
cmp
xchg
in
rorb
addl
scas
adc
jnp
jo
adc
pop
rorb
outsb
or
mov
subl
push
dec
sub
mov
loope
and
mov
out
es
repz
lds
sub
out
leave
int3
cmpsl
sbb
inc
or
hlt
int
push
pop
rol
jmp
ret
ja
mov
int3
pop
fcomp
push
out
stc
call
mov
shlb
dec
sarl
lret
dec
jno
in
adc
cli
pusha
cli
lods
into
add
push
adc
xchg
loope
popa
lcall
push
mov
mov
mov
xchg
sub
call
mov
mov
inc
ret
dec
or
stc
ret
mov
in
popa
push
pop
xchg
adc
aad
push
test
mov
lods
or
mov
adc
mov
xor
inc
orl
aaa
cli
or
sub
mov
or
fisubl
ret
jp
addr16
pop
or
je
lds
inc
dec
push
ret
dec
cwtl
movsb
loope
or
dec
mov
ja
adc
sbb
sbb
inc
int
dec
sbb
movsl
pop
shrl
lods
push
adc
mov
inc
arpl
shll
push
push
fiaddl
pop
scas
cmp
dec
add
adc
cmp
ffreep
adc
pushw
data16
cs
daa
movsl
rolb
shrb
sbb
push
push
cmp
xchg
or
xchg
stos
ds
pop
add
pop
and
cmp
xchg
imul
or
push
lcall
gs
inc
dec
fcmovnb
aad
or
or
mov
fnstsw
nop
mov
xlat
mov
adc
and
popa
push
and
addb
push
cmp
sti
jo
add
sub
xlat
repnz
hlt
popl
movb
cmp
outsb
pop
pop
add
es
add
cmp
nop
std
stos
mov
cmp
pusha
pop
pop
and
mov
xchg
sub
cmpsb
pusha
adc
pop
mov
dec
scas
subl
test
mov
and
xchg
xchg
loope
cwtl
repnz
fisubl
dec
inc
movsb
cmpsl
sbb
jmp
mov
mov
dec
frstor
in
add
in
push
loopne
icebp
cltd
and
mov
addb
imul
dec
and
test
mov
pop
mov
scas
mov
sub
inc
dec
sub
fs
stc
in
push
pop
arpl
lods
shlb
pop
std
fdivrl
stos
lds
cwtl
ja
jmp
mov
push
pop
jmp
add
movl
shl
xlat
and
and
lea
inc
ret
mov
adc
sub
mov
je
and
popf
mov
adc
decb
xchg
lods
lcall
jae
inc
gs
mov
mov
and
inc
and
mov
data16
jp
sahf
sub
mov
mov
xor
pushf
adc
xlat
add
and
and
and
sub
arpl
hlt
xor
push
and
ror
jge
fsubs
pop
aas
call
push
mov
inc
dec
enter
add
adc
inc
sbb
jbe
fs
inc
pushf
loopne
shlb
dec
adc
in
pop
inc
mov
sti
cli
fcoms
push
pop
jmp
or
cli
xlat
fs
lret
pop
jg
popa
sbb
sub
std
dec
ja
aad
cmc
fmuls
dec
sar
or
push
xchg
mov
pop
mov
add
stos
push
sbb
xor
les
adc
fs
xor
lds
push
stos
orl
mov
jnp
adc
sahf
nop
add
arpl
test
sub
mov
sbb
cmpsl
xchg
dec
adc
call
nop
shr
popa
cmp
inc
pushf
ljmp
push
loope
dec
movl
push
sbb
mov
inc
loopne
push
adc
fs
jecxz
popa
mov
mov
mov
test
pop
lea
jecxz
hlt
add
jg
lods
stos
pop
jg
loopne
sub
mov
lret
sbb
pop
movsb
aaa
inc
sub
arpl
pop
xchg
aaa
ljmp
push
add
pop
lds
add
dec
jg
cmp
mov
fsts
pop
rcr
sarb
pushf
popa
js
mov
mov
out
pop
fistl
fistps
adc
xchg
sbb
dec
mov
cli
cld
rcrb
jmp
out
test
sbb
mov
ljmp
sbb
or
jns
loope
lea
cmp
sti
push
inc
dec
fucomip
lods
mov
push
xchg
test
and
mov
dec
xlat
mov
stos
xor
filds
std
inc
jle
fcoms
sub
inc
mov
aam
jge
cmp
sub
jnp
sbb
ljmp
fnstcw
lock
lahf
cld
sbb
or
cmp
pop
outsl
test
mov
cmp
mov
xchg
pop
cs
adc
popa
ljmp
ljmp
push
testl
pop
inc
mov
or
add
push
dec
sahf
rcrl
xchg
hlt
repnz
mov
out
sbb
and
jge
int
jmp
sbb
flds
call
lret
rol
dec
mov
and
movsb
mov
xrelease
enter
mov
push
adc
jbe
insb
mov
xchg
or
and
push
cmpsb
mov
mov
push
lea
cltd
sbb
xchg
add
xchg
mov
jge
popf
or
pop
mov
mov
inc
cld
fs
icebp
or
int3
into
push
mov
sti
jge
scas
push
mov
lods
fisttps
pushf
fs
sbb
test
shl
test
sbb
pop
push
dec
dec
in
test
in
test
xor
in
mov
icebp
test
and
xchg
dec
dec
mov
pop
dec
xor
xchg
shl
sbb
mov
mov
sbb
or
jmp
mov
mov
insl
movsb
aam
xchg
pop
jge
stos
inc
or
call
xchg
mov
adc
shr
and
iret
lock
add
test
inc
add
inc
rclb
loopne
loop
movsl
and
jp
add
outsb
jp
sahf
pop
xor
mov
sti
inc
imul
inc
pushf
xor
jmp
mov
push
mov
fildll
mov
mov
loope
push
fidivl
lock
das
sbb
mov
pop
cmpsb
call
dec
loopne
push
mov
mov
div
xlat
arpl
inc
cs
jnp
es
mov
sbb
out
nop
fcmovnu
add
cli
mov
aaa
call
sbb
add
mov
dec
lock
push
lock
les
mov
jo
stc
cmpsb
stos
jecxz
push
pop
seto
xchg
add
mov
xor
push
fs
fiadds
mov
bswap
loop
push
pushf
aad
sbb
add
aam
sbb
mov
or
mov
das
test
stc
dec
adc
sub
enter
push
ja
add
test
fiaddl
push
cli
pop
popa
inc
fidivs
call
lods
stos
mov
popa
test
je
fucomi
cld
out
and
addb
ljmp
pop
out
sbb
pop
mov
loope
stc
int
pand
mov
jl
stc
hlt
arpl
mov
sub
sub
push
jne
jl
mov
lods
cmp
inc
adcb
fidivs
ljmp
sbb
outsb
imul
pushf
aad
lds
test
aas
lahf
mov
jnp
lea
xchg
inc
and
push
sbb
xchg
jl
test
push
push
xor
and
push
mov
xor
subb
pop
stc
aaa
aam
loope
insl
xlat
xor
adc
sbb
and
inc
sub
loop
leave
sub
xchg
pop
push
pop
pop
in
sbb
imul
dec
inc
adc
test
pop
rcrl
adc
pop
mov
xor
pop
clc
testb
pop
push
rcl
lods
test
jp
pop
dec
add
pop
cmp
add
or
int
cwtl
ss
xchg
daa
xor
stos
push
out
or
data16
mov
cwtl
pop
in
or
pop
sbb
addb
mov
call
pop
enter
cmc
mov
mov
je
pop
andl
or
test
push
sbb
pop
mov
cmp
in
ljmp
push
add
xchg
call
popa
xor
jno
mov
ds
je
add
sub
test
xchg
inc
daa
fcoms
push
sub
xchg
cmpsb
xchg
outsl
test
fisttps
rcr
lock
in
pop
add
mov
adc
js
lcall
daa
cli
pushf
mov
dec
jne
aam
fadds
outsl
rclb
pop
pop
rcrl
and
pop
pushl
dec
into
jbe
xorb
or
cmp
mov
pop
dec
push
inc
jp
mov
pop
out
add
mov
pop
lock
sub
xor
jbe
mov
rcll
addr16
aam
sbb
loope
cmp
cmp
pop
push
add
idivl
repz
clc
mov
rolb
fwait
pop
iret
test
push
stc
es
pop
lods
adc
jno
insb
aaa
lods
test
loop
xchg
fwait
jl
jge
jbe
pop
hlt
loop
cmp
pop
ja
pop
fcomps
shrb
test
add
and
jae
mov
pop
jb
cs
fwait
dec
or
pop
inc
add
xchg
iret
loop
push
das
xchg
je
pop
jp
dec
fbstp
into
pop
inc
mov
out
and
push
jmp
push
mov
sbb
ds
and
das
adc
add
loop
jle
xchg
pop
cmp
sti
xchg
movsb
pop
cmc
into
imul
pop
mov
xchg
dec
test
or
pop
pusha
add
lods
scas
and
pop
repnz
xor
loop
or
repz
mov
fmull
pop
push
repnz
mov
xor
mov
jecxz
test
sbb
test
scas
mov
cmp
pop
fld
jae
or
inc
cmp
mov
and
rcrl
jno
and
aas
mov
pop
push
in
clc
push
out
or
ja
insb
stos
pop
call
in
push
push
pop
gs
cmpsb
pop
pop
out
push
inc
ja
lcall
pop
imul
add
imull
xlat
jle
insb
popa
int3
lock
test
fisttpl
popa
pop
lods
mov
jmp
and
ds
pop
sbb
loopne
pop
fistpll
pop
xchg
dec
or
test
mov
rcrb
pop
inc
repz
clc
cmp
xchg
test
es
repnz
or
pop
popf
cmp
aam
cmp
pop
stos
roll
jno
xor
add
fnstenv
enter
mov
nop
pop
jmp
out
addr16
pop
ds
ss
cmc
lea
xor
and
imul
pop
jbe
push
add
mov
fdivs
out
aas
add
mov
jl
fnstsw
cmp
pop
out
mov
adc
push
in
iret
call
pop
xor
mov
pop
pop
lods
inc
push
inc
loope
xchg
mov
push
sbbb
sbb
dec
arpl
js
adcl
cmp
ljmp
outsl
or
rorl
and
rcll
sbb
push
sbb
loopne
mov
hlt
and
sbb
sub
mov
add
and
test
aaa
sub
ljmp
in
cmp
lods
aas
lods
mov
pop
cs
lds
mov
fcoms
ss
xor
sbb
repnz
add
mov
aas
das
enter
popa
pop
sti
xchg
mov
push
add
mov
xchg
cmpsb
cmp
xchg
xor
std
pop
or
mov
inc
and
mov
cwtl
mov
into
fildl
ret
imulb
and
bound
sbb
test
inc
mov
cmp
mov
push
sbb
hlt
lods
mov
jge
jecxz
inc
inc
pop
jb
in
in
mov
mov
sarb
push
insb
push
fsubrl
hlt
cmp
sbb
inc
add
mov
sbb
xchg
pop
mov
xor
loope
lret
sub
lret
xchg
imul
and
lea
mov
mov
xor
das
and
push
mov
enter
adc
icebp
scas
arpl
add
sbb
mov
sbb
nop
lcall
pushf
push
cmp
je
int3
xor
mov
in
mov
sub
insb
dec
jno
fldt
xor
rcll
xlat
xchg
and
stos
aam
call
push
jmp
loop
pop
sbb
in
inc
mov
pop
hlt
inc
popa
adc
imul
daa
sbb
je
xor
mov
or
push
dec
pop
lahf
stc
ret
lods
xchg
sbb
inc
jp
mov
xor
mov
push
dec
int3
iret
inc
mov
in
mov
rolb
cmp
and
dec
adc
outsb
cvtps2pd
mov
xchg
fcoml
xchg
testl
push
stos
and
dec
mov
sub
movsl
push
mov
cmp
flds
mov
pop
inc
sub
cmp
cmp
je
dec
and
test
jg
and
outsl
imul
cld
add
divl
ljmp
daa
js
lock
btsl
xor
repz
stos
adc
cmpsb
jmp
xchg
xor
cmp
inc
mov
iret
test
mov
nop
and
push
stos
xor
imull
stos
rcll
push
xlat
loopne
shlb
scas
out
popa
mov
lods
cmpsb
jp
inc
outsl
pusha
pushf
xchg
in
into
pop
or
call
xchg
movb
xchg
jp
cmpsb
mov
dec
push
js
inc
and
testl
jbe
popa
sbb
ja
hlt
loope
mov
xchg
or
fidivrl
mov
xchg
add
out
adcl
pop
or
sbb
movsb
js
test
in
pop
and
nop
adc
mov
jns
and
add
mov
inc
movsb
inc
mov
xchg
testb
jle
push
addr16
rorb
int
orb
int3
in
andb
ja
popf
movsb
js
stos
rclb
xor
dec
push
fwait
mov
pop
cmpsb
add
mov
ret
in
xchg
loopne
fnstcw
movsl
cmp
cmc
mov
mov
jne
sub
arpl
and
mov
cmp
dec
sahf
push
mov
idiv
cmc
mov
dec
mov
sbb
lods
ljmp
les
cmp
mov
and
inc
enter
aam
js
ret
or
mov
pop
inc
inc
mov
cmp
lods
push
arpl
jp
stc
jle
push
enter
lods
push
cltd
shlb
jo
jecxz
xor
mov
je
int
inc
mov
pop
mov
inc
push
inc
push
rcrl
pop
addr16
sbb
mov
dec
clc
mov
mov
in
dec
jb
cmc
scas
or
jo
test
cltd
ret
sub
orl
insb
inc
dec
adc
ficoms
loope
cmp
xchg
js
faddl
sbb
out
dec
pop
pop
in
xchg
jns
inc
xchg
sub
ret
leave
pop
dec
sub
or
out
jmp
cmpsb
int
lret
xor
inc
mov
jo
loopne
lahf
inc
and
imul
mov
xor
add
lahf
mul
ds
outsl
pop
push
adc
out
mov
out
dec
or
and
push
or
mov
gs
sub
xchg
scas
shrl
mov
fwait
hlt
mov
xchg
pop
adc
mov
push
xor
clc
adc
lods
ds
lret
insb
push
pushf
ljmp
popa
push
icebp
arpl
xchg
popf
push
cmp
les
cmp
push
into
scas
jmp
jnp
repnz
cwtl
mov
andb
xchg
inc
iret
or
push
fdivl
mov
aaa
les
fs
into
fidivrl
and
out
addl
imul
or
arpl
xor
cmp
push
pop
clc
lahf
mov
mov
pop
shlb
push
test
cs
push
mov
insb
fiaddl
gs
mov
adc
inc
sahf
inc
push
sub
out
test
xor
dec
inc
jle
or
push
jecxz
ficoml
scas
mov
imul
insb
movsb
adc
shlb
movsl
ds
cmp
arpl
ljmp
pop
loopne
mov
dec
cltd
mov
mov
out
call
inc
jne
outsb
and
dec
fs
xor
aam
out
negb
cltd
fidivs
pusha
popf
inc
or
mov
loope
fdivl
inc
pop
fisubrs
push
popa
pop
pop
mov
mov
inc
xchg
fldenv
test
jno
push
sti
out
push
pop
xlat
jmp
dec
ljmp
outsl
rol
sahf
mov
stos
inc
stos
inc
int3
add
aaa
push
pushf
out
out
inc
bound
cltd
mov
mov
mov
int3
push
dec
mov
cvtps2pd
adc
je
loope
pop
scas
call
sbb
xor
outsl
inc
mov
mov
outsl
jne
mov
and
or
and
fisubs
sbb
cltd
sub
push
shll
pop
pushf
popa
cld
in
dec
sub
pop
clc
mov
cwtl
dec
shl
in
push
shrl
mov
fisttpll
cwtl
inc
in
std
outsb
dec
adc
mov
sbb
outsb
call
jp
mov
cltd
sub
in
scas
fists
sbb
mov
push
lcall
mov
dec
popa
add
xchg
orb
sbb
push
loope
mov
push
out
xor
stos
hlt
push
add
mov
cwtl
fcmovb
pop
loopne
cmc
hlt
push
push
inc
mov
inc
add
xchg
ret
push
push
fucom
mov
add
sub
sbb
mov
aad
pusha
mov
mov
pop
imul
dec
and
mov
sub
gs
movsl
cmpsl
data16
inc
adc
fstl
pop
shrl
dec
mov
les
inc
out
aam
jge
dec
std
iret
mov
js
and
and
cld
pushf
ret
mov
xor
dec
cmpsb
push
mov
aas
mov
lock
xchg
xchg
pushf
outsl
add
sbb
jp
dec
mov
or
fstpt
pop
sub
push
shll
jg
pop
int
lods
xchg
rcr
rolb
sbb
xchg
sbb
je
adc
pusha
cmpsl
cmpsl
pop
inc
lcall
shl
icebp
int
inc
or
test
mov
sti
mov
add
dec
jno
pusha
andl
test
jp
sbb
pcmpgtw
pop
clc
or
or
lods
mov
rclb
nopl
jmp
enter
loopne
stos
mov
xor
xchg
fs
ds
sarb
or
jg
push
dec
sbbb
pop
cld
mov
aam
movsb
insb
daa
mov
pop
mov
dec
cmp
das
cmp
cmp
mov
mov
divl
pop
sub
mov
push
lahf
std
jg
xchg
cwtl
add
push
jg
xor
add
hlt
inc
and
nop
roll
push
pop
mov
inc
hlt
aaa
push
jns
xor
je
cmc
inc
or
jnp
nopl
mov
daa
jge
inc
mov
mov
or
or
mov
add
jno
imull
and
inc
inc
aad
adc
fs
xor
fldcw
inc
call
loopne
lods
mov
sbb
faddl
hlt
mov
jge
ret
jmp
lahf
pop
rcrb
popa
lods
adc
pop
movups
push
in
pop
lret
ret
jae
mov
in
ss
adc
js
mov
movsb
xchg
xlat
push
ficoms
push
xchg
out
sbbl
lods
and
mov
adc
lods
add
xchg
pop
sub
ljmp
xor
test
mov
out
sub
jmp
ficoml
mov
sub
pusha
stos
mov
pop
mov
adc
pop
mov
and
mov
int
or
cwtl
lods
shlb
jae
aam
mov
rcll
idivb
mov
test
movsbl
push
or
call
repnz
aad
xor
inc
jne
daa
push
mov
cmp
adc
mov
push
pop
lods
or
mov
cmpsl
adcl
sub
jp
push
dec
fiaddl
push
hlt
push
rcl
jl
cwtl
je
rol
push
or
vmread
or
cmp
test
cmpsb
mov
in
adc
xchg
lock
jmp
mov
in
mov
jno
xor
das
aam
jg
dec
push
mov
movsl
test
stos
jecxz
clc
adc
lods
mov
dec
scas
cmc
xlat
jo
or
add
mov
push
push
les
inc
loope
sbb
sarl
sub
cli
add
cmc
mov
addl
sbb
cmc
sarb
dec
les
mov
mov
jne
cmp
mov
loopne
and
insb
enter
int
add
mov
fdivrs
push
popa
mov
or
es
in
stos
xlat
jl
test
push
int
mov
out
into
leave
push
ret
mov
out
mov
movsb
xor
sub
dec
pop
push
out
mov
cwtl
loopne
pop
push
pop
sbb
mov
stos
dec
pop
mov
xor
jecxz
in
mov
mov
in
mov
push
mov
fs
cmp
shll
sub
sahf
in
cmc
cs
ljmp
icebp
imul
test
cmpsb
leave
adc
adc
xchg
negl
push
dec
sub
mov
push
mov
xor
dec
push
fnstsw
cmp
ss
leave
mov
daa
jno
inc
jecxz
dec
out
mov
push
pop
out
cmpsb
ret
mov
push
cmp
mov
icebp
stos
xchg
jecxz
in
xchg
js
lods
pop
sub
mov
into
jne
push
sbb
dec
aas
loope
inc
es
dec
out
mov
adc
jge
cwtl
push
or
jecxz
mov
addl
fildll
stos
arpl
push
mov
mov
and
mov
inc
cli
mov
adc
imul
pop
sub
jo
dec
sub
push
and
shlb
aaa
es
mov
jns
cltd
add
push
scas
jb
dec
jmp
outsb
dec
sbb
mov
push
jne
stos
mov
mov
push
pop
and
ret
sub
add
pop
cs
mov
fisttpl
mov
out
pop
insl
lods
inc
add
movsl
fimuls
out
xor
adc
pushl
arpl
pop
pop
lea
jecxz
dec
inc
and
pusha
ljmp
in
dec
fcomps
test
out
adc
adc
adc
dec
mov
mov
mov
xchg
push
jmp
jmp
pusha
cmpsl
inc
cld
shlb
into
push
jp
dec
scas
test
adc
call
in
cmp
adc
push
mov
jge
push
jl
cmp
filds
jns
test
pop
imul
cmc
push
push
mov
and
dec
pushf
pop
inc
cmp
fdivs
arpl
mov
push
adc
sbb
or
test
aam
push
mov
inc
stos
into
fcoms
xchg
cmpsb
and
sbb
enter
pop
shll
data16
push
hlt
mov
adc
jle
and
fcompl
adc
xor
mov
mov
xor
arpl
lods
xchg
inc
jno
jl
mov
in
lds
adc
xlat
push
sbb
adc
hlt
rorl
popa
xchg
int
mov
test
or
cmp
outsb
iret
filds
sub
mov
xchg
pop
dec
lock
pop
adc
xchg
divl
int3
inc
scas
and
inc
ficoml
adc
push
lea
loopne
adc
dec
aad
add
insl
mov
inc
js
and
xchg
cmpsl
inc
and
push
cmp
ja
out
push
push
lock
outsb
ret
or
pop
mov
stos
test
dec
shrb
arpl
pop
sub
push
fiaddl
dec
into
mov
add
repnz
push
popa
inc
mov
test
out
in
mov
ljmp
inc
or
lahf
pop
scas
out
cmp
cmpsb
aam
notb
inc
sbb
mov
cmc
mov
sub
xchg
cmp
cltd
cwtl
add
int
sub
loope
fdivrp
sbb
jnp
xchg
pop
shlb
push
js
cmc
push
dec
fwait
inc
push
inc
imul
aas
add
pop
ret
inc
daa
mov
outsl
inc
or
bound
inc
repnz
dec
mov
mov
loopne
adc
push
les
sbb
lret
inc
xchg
or
fimull
xor
mov
ljmp
jmp
fdivrs
push
fisubrs
repnz
pop
in
push
jmp
arpl
rorb
sub
dec
dec
pushf
jp
int3
dec
cmp
or
testl
jge
das
sbb
enter
jg
rcrl
sub
rclb
outsb
sub
xchg
loope
cmp
mov
sbbl
lods
xchg
fildll
or
testb
cmpsl
outsl
push
in
test
aaa
inc
or
dec
push
call
pop
adc
sti
sbb
out
pop
fs
repnz
xor
hlt
into
stc
sbb
sbb
stos
jecxz
cmpb
test
sysenter
dec
leave
pusha
xlat
sti
outsl
lcall
negl
and
fldt
and
fs
rcrb
shlb
subb
outsl
cmpsl
cli
push
js
shrb
mov
xchg
popa
sbb
sub
push
jge
pop
pop
movsl
dec
push
int
dec
test
and
push
leave
mov
in
mov
mov
lods
hlt
mov
sub
lcall
xchg
shll
xchg
lahf
lcall
jp
add
shrb
mov
push
iret
cli
out
hlt
and
int
xchg
inc
push
jg
mov
jg
adc
ljmp
aaa
jno
ljmp
inc
sub
xchg
lret
and
loop
mov
fists
imul
mov
jnp
sbb
icebp
mov
dec
insb
ret
jge
pop
cld
or
or
call
xchg
and
sub
mov
loopne
sbb
pop
arpl
test
inc
inc
cld
in
lods
movsl
and
bound
in
xchg
in
imul
bound
inc
dec
stos
mov
shrb
sbb
inc
lds
mov
mov
cmp
and
adc
fs
fisttpll
mov
push
or
xchg
pop
inc
xchg
cmpsl
push
cmc
lds
push
jge
subb
dec
test
pop
sbb
mov
clc
sarb
pusha
or
imul
stos
push
add
ret
push
mov
sahf
negl
inc
mov
shrb
pop
dec
pop
inc
mov
std
bound
mov
push
in
jmp
inc
out
mov
pushf
ljmp
pop
push
or
lods
aaa
leave
pop
rorb
scas
stc
ret
clc
push
cltd
popf
subb
adc
les
push
bound
jg
push
int3
mov
test
xchg
mov
add
in
and
js
inc
mov
xchg
scas
pop
add
mov
jge
jmp
push
push
fstpt
mov
add
mov
pop
sub
pop
push
testl
push
int
sbb
mov
mov
inc
sbb
and
sbb
sub
mov
sub
adc
xorb
mov
mov
in
fwait
mov
jg
jns
and
stos
xchg
jl
inc
mov
sbb
scas
cmp
cmp
lods
push
aas
jecxz
popa
push
loope
push
lods
adc
hlt
xchg
out
mov
in
cmpsb
iret
push
xor
imull
scas
adc
jle
je
pop
test
sbb
push
cmp
dec
ds
inc
imul
jecxz
xor
sbb
inc
mov
clc
std
add
leave
cmovnp
pop
fxch
loope
loopne
repnz
outsl
mov
sub
and
das
bnd
lods
fisubl
mov
jae
mov
adc
inc
cld
clc
enter
or
cltd
mov
xlat
lret
sub
jmp
inc
mov
imul
pop
cwtl
inc
rcrb
mov
arpl
es
ret
mov
std
leave
inc
fisubrl
ret
popf
rcrl
pop
inc
cmp
xchg
scas
loopne
inc
xchg
fcompl
xchg
cmp
inc
mov
call
sub
mov
mov
pop
push
or
pusha
push
loopne
pop
cmp
and
mov
jo
pop
or
test
es
sub
je
aad
adcb
sub
push
dec
inc
mov
sbb
inc
dec
pushf
or
pop
call
or
int3
out
mov
sub
dec
in
adc
or
call
mov
xchg
dec
sub
sbbl
sub
scas
lret
popa
mov
xor
out
into
cwtl
mov
pop
ljmp
rcrb
xchg
fbstp
pop
and
pop
sbb
xor
test
iret
sahf
add
ret
imul
sbb
push
xchg
leave
stos
jnp
inc
outsb
fistpl
dec
push
mov
dec
popa
dec
in
or
and
push
pop
sub
add
ss
jne
jle
pop
jge
sbb
mov
mov
cs
or
ja
inc
out
test
push
jge
rcrl
push
fdivr
sbb
xor
shrl
sub
push
cwtl
push
jp
pop
lea
dec
pop
inc
fsts
xchg
loopne
inc
jmp
mov
incb
mov
mov
cmp
into
stos
or
ljmp
pusha
into
data16
or
repnz
rclb
lds
cwtl
inc
xchg
xchg
int
mov
data16
xchg
mov
jne
jo
scas
or
cmp
int
mov
movsb
sar
xchg
daa
mov
push
punpckhbw
loop
sub
mov
push
mov
loopne
push
mov
jns
nop
push
add
popa
xchg
jb,pn
sbb
add
cmc
aaa
ljmp
aaa
xor
dec
jns
loope
mov
sub
aam
cmp
mov
fistpll
push
sub
and
in
push
call
repnz
and
and
sti
mov
xor
inc
call
xor
cmp
mov
jecxz
je
inc
cwtl
mov
jg
lcall
gs
test
xchg
ljmp
cmc
into
pop
scas
push
push
inc
jl
cmp
in
leave
cmp
aaa
lods
push
jmp
sarl
xor
jge
int3
pop
pusha
inc
cmp
xchg
sub
ret
mov
mov
cmp
lret
xlat
jl
movhps
les
shlb
mov
hlt
push
cs
push
repnz
cmp
dec
jp
sahf
mov
push
stos
popw
rorl
cmp
mov
adc
or
inc
pusha
sub
jo
stc
ja
or
sub
inc
xlat
xor
int
daa
mov
add
adc
pop
out
add
jge
movsl
push
dec
sti
push
xchg
add
mov
inc
mov
shrb
xchg
xchg
stos
pop
rcrb
lcall
add
lds
incb
dec
psrlw
lods
in
js
push
or
ljmp
lcall
and
lret
cltd
cwtl
fdivl
lds
fnstcw
mov
pop
out
movsl
pop
rorb
test
sbb
insb
jle
pushf
push
mov
mov
dec
fsubl
add
mov
pop
shlb
mov
popf
pop
mov
sar
jecxz
push
jbe
mov
fists
sahf
xor
mov
les
icebp
adc
or
pop
adc
sbb
dec
sub
cmp
pop
mov
divl
sbb
push
push
js
shlb
add
mov
jae
push
push
or
xor
popa
inc
xor
negl
loopne
push
jnp
in
lret
test
lds
cmc
loope
shlb
clc
sub
in
sbb
mov
shrb
cmpsl
pop
cpuid
mov
pushf
xbegin
je
xchg
mov
jl
ljmp
out
pop
xchg
push
mov
sbb
scas
mov
push
fnsave
orl
mov
dec
sbb
mov
les
stos
inc
sub
stos
or
mov
adc
sarb
imul
push
fxch
sub
xchg
hlt
xlat
adc
ljmp
and
xor
movsb
mov
push
not
add
mov
xchg
cmp
in
test
and
or
inc
test
fnstenv
dec
sub
je
scas
xchg
movsb
add
shll
pop
mov
das
mov
loop
xchg
lret
push
cmp
enter
ficompl
jg
out
sbb
arpl
ds
popa
cmp
push
lods
idivl
addr16
jecxz
mov
inc
mov
adc
popa
add
sbbl
lahf
aas
in
lock
xchg
sar
and
jecxz
and
popa
out
jmp
faddl
push
mov
fs
inc
in
rcrb
dec
hlt
lret
loope
push
jne
or
outsb
mov
sub
pop
js
push
mov
pop
inc
imul
lds
mov
jecxz
aas
int
pop
xchg
fsubrl
push
jns
mov
dec
clc
mov
pop
adc
add
test
mov
fcoms
push
inc
test
lcall
outsl
and
cmp
mov
clc
xor
mov
xor
adc
mov
das
add
ss
ja
leave
and
sub
cltd
test
stos
cmpl
sahf
or
adc
mov
out
push
movsl
cmpsb
push
mov
loopne
or
negb
push
pop
xchg
xchg
not
fidivrl
outsl
jl
pop
mov
push
inc
arpl
fidivrl
scas
int
mov
sub
sbb
cld
and
pusha
sqrtps
push
mov
xor
shl
mov
mov
sub
bound
dec
bound
cmc
pop
mov
mov
jge
sub
movsb
cld
in
pusha
or
push
mov
test
scas
mov
and
xchg
js
in
scas
enter
sbb
inc
jbe
arpl
in
mov
push
mov
xchg
outsl
repz
jge
jb
xor
lcall
test
mov
sbb
lods
sahf
jle
push
inc
fcoml
aaa
imul
sbb
push
orb
out
test
jno
xlat
iret
cli
repnz
test
leave
dec
cmp
testl
pop
hlt
pusha
je
mov
push
inc
dec
mov
mov
mov
jae
sub
add
test
pushf
hlt
push
mov
and
cmpsb
js
pop
and
mov
xchg
lods
jle
rcrb
mov
adc
sbb
add
adc
push
loope
sub
lret
shlb
pop
mov
sahf
outsb
pop
popa
pop
scas
sbb
dec
xchg
and
and
push
pop
fnstenv
mov
cmp
stos
push
cmc
out
jecxz
je
mov
pop
mov
mov
bsf
sub
pop
pop
xor
sbb
or
inc
adc
jmp
mov
lahf
sbbb
adc
sti
mov
jecxz
push
pushf
inc
sbb
outsb
ficompl
dec
rcrb
insl
mov
mov
dec
xor
sub
ja
push
mov
inc
cmpsb
xchg
test
sub
jmp
mov
sbb
stc
adcb
cmp
add
scas
adc
xchg
stos
or
cmpsb
shlb
sub
mov
adc
sbb
icebp
dec
and
mov
shlb
xchg
sti
subb
push
lcall
lock
adc
mov
lods
imul
pop
fcmovb
fs
shll
mov
les
and
fcomps
push
int
inc
std
and
dec
dec
ja
rolb
mov
addr16
test
cmp
imul
and
push
add
xchg
add
pop
jp
cwtl
lods
test
and
jl
sub
xlat
fbld
mov
std
mov
and
add
mov
outsl
or
aas
jg
push
arpl
pop
addl
jo
mov
pop
call
aaa
clc
iret
sarb
cmpsl
addl
mov
cld
test
shrb
jge
hlt
iret
jp
inc
int3
inc
popa
mov
shlb
ficoml
inc
incb
dec
jge
xchg
or
aam
mov
dec
mov
lock
pusha
xorb
mov
and
pushf
fld1
adc
testb
xor
ds
fmuls
pop
pop
mov
and
xor
sbb
aam
jnp
lods
jno
inc
orl
lock
test
shl
cmp
test
sbb
xchg
aam
add
inc
cmpb
cs
lock
and
xchg
jp
jmp
pop
and
cmc
mov
sub
pop
cltd
inc
mov
mov
lea
sbb
sub
in
inc
test
xchg
scas
cmp
add
xor
fcmovb
mov
mov
shrb
mov
pop
fimuls
mull
icebp
loopne
repnz
add
pop
out
dec
or
pop
sub
add
mov
cmp
xchg
xor
fsubrl
scas
cmc
and
adc
neg
xchg
add
cmp
push
adc
hlt
loopne
or
pop
inc
mov
adc
mov
sbb
lret
into
test
sbbl
inc
mov
and
push
int
test
jmp
mov
dec
xor
inc
push
sub
inc
push
int3
push
and
hlt
nopl
sub
int3
sbb
repz
dec
and
mov
and
outsl
push
repz
sarb
or
stos
sbb
cld
enter
mov
sbb
call
mov
inc
add
nop
enter
mov
pop
cmpsb
adc
dec
int3
or
cltd
sub
pop
adc
mov
sub
inc
push
sub
adcb
xchg
loope
dec
xor
aas
loope
stos
lret
rcr
inc
js
push
cwtl
dec
rclb
push
arpl
fmul
mov
adc
pop
rolb
xchg
add
add
mov
lock
jmp
arpl
dec
pop
xchg
inc
fcoms
or
inc
fiaddl
pop
fabs
pop
test
adc
hlt
jecxz
mov
cmp
mov
sub
stos
mov
sbb
repnz
and
inc
pop
sbb
and
call
pop
pop
pop
scas
add
shlb
mov
fiadds
xchg
lods
jecxz
daa
imul
adc
outsb
push
inc
fxch
cld
pop
roll
pop
sar
aam
inc
jg
lcall
mov
mov
and
outsb
push
aaa
xchg
pop
pop
or
inc
sbb
jmp
xchg
imul
in
sub
movsb
mov
cltd
or
push
icebp
mov
inc
sarb
adc
stos
mov
inc
rolb
mov
fnstenv
lods
lock
cld
ret
cld
pushf
push
inc
push
stos
repz
push
cmp
loope
mov
push
jno
out
sub
pop
loopne
cmpsb
push
js
shl
shl
adc
fs
inc
dec
mov
and
mov
cmp
inc
push
mov
sub
mov
addr16
sbb
xlat
stc
hlt
push
ja
cltd
add
dec
data16
cwtl
mov
sbb
int
scas
cmp
sbb
loope
lods
in
or
jge
ret
xchg
adc
lcall
sub
imul
call
fwait
jge
adc
pop
sub
xchg
dec
scas
mov
popa
mov
inc
xchg
push
test
pop
add
jb
cwtl
mov
out
pop
xor
mov
pop
rcrb
xor
jno
jecxz
and
xchg
sahf
test
push
dec
in
jne
pop
jne
cmp
inc
pop
cmpb
pop
rolb
sbb
inc
pop
cmp
xor
and
mov
test
mov
jns
testw
pop
jl
dec
lret
push
mov
fadd
mov
cmc
into
int
test
mov
int3
es
dec
inc
jmp
push
xchg
popf
mov
pop
arpl
push
push
mov
push
push
adc
push
negl
into
and
inc
mov
push
mov
mulb
cmp
mov
outsl
dec
outsl
pop
xor
cmp
jns
add
sub
push
jp
jo
xor
shll
int3
stos
pop
outsl
faddp
mov
xchg
arpl
loope
xlat
jg
xlat
inc
dec
push
cmp
scas
test
in
inc
cmpsl
dec
lahf
orb
mov
pop
call
push
or
fidivrl
arpl
ror
clc
jne
ds
xchg
rolb
scas
mov
jecxz
cmpsb
popa
jle
mov
xor
dec
adc
out
cmpsl
pop
add
sub
inc
shr
mov
mov
dec
xchg
sbb
push
fsubl
mov
sbb
insb
add
ret
imul
idivl
sahf
test
dec
ja
or
stc
jno
dec
pop
in
bound
pop
js
mov
cli
stos
jb
aad
jb
push
sbb
cmp
mov
add
lcall
mov
fists
std
outsl
adc
test
push
inc
stos
mov
das
mov
data16
outsl
mov
cmp
xchg
test
pop
and
xchg
pop
pop
pop
adc
popa
hlt
stos
iret
pushf
lock
adc
add
xor
fld
jecxz
push
gs
push
ss
xor
scas
xchg
in
inc
adcb
mov
loope
mov
mov
pop
das
test
xor
mov
mov
jae
call
xor
aad
adc
das
loopne
loopne
inc
imul
frstor
cs
clc
lds
cwtl
int
cmc
addr16
adc
and
push
imul
push
cmpsb
rolb
imul
push
js
inc
or
test
jno
sahf
dec
pop
mov
dec
ror
lds
jo
push
test
out
jb
xor
arpl
adc
mov
outsl
or
sahf
cs
loop
mov
jmp
scas
data16
dec
jecxz,pn
dec
icebp
xor
xchg
ljmp
fldcw
div
mov
cwtl
inc
lds
mov
rorb
pop
fsub
adc
dec
sub
add
mov
sbb
es
inc
aaa
pop
fadds
popa
sahf
inc
adc
inc
cwtl
popf
pop
negl
sbb
es
sbb
pop
outsl
sbb
mov
sub
sub
mov
es
mov
inc
int3
loope
pusha
pxor
mov
push
pop
popf
jbe
repnz
jmp
dec
mov
sub
and
mov
xchg
jp
shll
aas
inc
cmpsl
xchg
pop
sbb
daa
and
test
lods
cmpsb
mov
stos
imul
and
loop
push
and
cli
mov
test
rcrl
mov
inc
leave
push
inc
int
and
into
sub
outsl
jl
arpl
sub
add
clc
mov
push
add
test
inc
xchg
std
xchg
dec
cs
xor
jl
mov
adc
fcmovu
lods
lret
fsubr
scas
push
cld
push
sub
scas
dec
inc
loopne
jns
mov
popa
mov
pusha
cmpsb
fbld
lock
out
xor
dec
or
add
stc
ss
push
pop
jnp
loop
adc
movb
pop
sbbl
outsl
loope
sub
movsl
imul
cmpl
add
mov
sbb
ret
or
and
mov
cmp
cwtl
mov
cmc
and
movsl
cmpsl
dec
jg
dec
fs
mov
dec
ss
es
fdivrs
mov
loopne
jge
add
repnz
push
ljmp
clc
clc
hlt
imul
jne
popf
ljmp
pop
dec
adc
inc
and
or
inc
mov
cmp
das
lcall
sub
clc
test
add
stc
dec
inc
popa
ffreep
mov
leave
arpl
and
and
jle
mov
jne
fldenv
out
stos
inc
movsl
mov
aam
pop
jb
aam
mov
push
or
frstor
stos
push
pop
sti
and
and
sub
jno
stos
idivl
pop
adc
inc
fstps
lods
xchg
or
ljmp
scas
fldcw
inc
fisubrl
popf
adc
cli
mov
pop
cmpsl
pop
mov
mov
arpl
mov
jb
push
popf
adc
popf
test
lods
bnd
inc
shlb
cld
fstps
scas
aaa
mov
sub
out
out
sub
or
mov
mov
fcomip
in
xchg
jg
stos
leave
test
inc
mov
inc
or
sub
out
xchg
or
inc
cmpsb
sub
pop
fisubs
mov
mov
sahf
loope
fwait
mov
sbb
fmuls
dec
stos
ja
or
les
mov
test
mov
inc
dec
inc
movsb
sub
and
xchg
mov
jecxz
mov
std
mov
loope
mov
pop
lods
leave
mov
lret
hlt
cs
add
xchg
push
jnp
mov
into
mov
lret
cli
pop
outsb
sub
fstl
mov
or
mov
mov
mov
push
dec
jb
sub
dec
or
xchg
iret
mov
dec
bswap
push
pop
inc
fwait
jp
shlb
and
pop
add
lahf
mov
cwtl
mov
in
mov
stos
mov
add
aam
mov
fnsave
notb
movsb
inc
aas
stos
out
cmpsb
push
in
sbb
and
pop
popa
jnp
mov
xchg
inc
push
cltd
lods
push
pushf
dec
push
dec
xor
test
pop
dec
sbb
dec
jo
mov
pusha
cltd
dec
lods
pop
lock
cmp
clc
dec
and
or
fcoms
push
cwtl
dec
inc
add
negb
icebp
pop
cmc
lcall
call
xchg
fistpll
and
and
popa
xchg
xor
shrl
cmp
ret
loop
pop
inc
bound
pop
mov
inc
push
fcmovnbe
rcll
push
or
dec
inc
mov
and
push
cmp
mov
xchg
jecxz
xor
aad
xor
push
in
bnd
testl
ficomps
pop
push
cmp
lock
mov
hlt
inc
sahf
ret
push
add
jne
inc
push
cmp
call
jno
sahf
aam
filds
inc
insl
aas
lods
push
adc
mov
pop
out
sahf
mov
rorb
mov
jp
pop
and
mov
xchg
push
call
cmp
push
cwtl
and
and
push
push
inc
cmp
pop
pop
iret
add
adcl
aas
push
loopne
fdivrl
sarb
outsb
jns
out
mov
push
inc
jge
mov
and
fstl
fstl
insb
mov
enter
incb
jno
add
pop
sbb
outsb
movsb
jp
push
hlt
pop
shlb
mov
faddl
arpl
pop
or
adc
dec
fcmovnb
in
mov
lock
mov
sbb
dec
mov
mov
push
xor
dec
outsb
mov
xchg
insb
fsub
dec
nop
cmc
addr16
in
sbb
sti
in
arpl
insb
adc
pop
out
jp
jns
dec
sub
js
xchg
dec
push
stc
mov
and
out
push
sub
mov
and
adc
xchg
or
or
scas
inc
jge
jg
clc
fadds
test
mov
stc
rorl
aad
aaa
out
lcall
xchg
jne
jge
lods
push
or
ja
pop
mov
push
xchg
push
jae
and
or
mov
and
test
dec
mov
arpl
push
test
subl
jmp
rcrb
jp
pushf
movsl
movsb
adc
movsb
scas
xchg
sub
add
adcb
xlat
and
sbb
sti
xor
sub
push
subl
xor
jne
dec
out
in
loope
or
xlat
push
pop
pop
hlt
adc
iret
into
loopne
inc
ss
push
or
rol
mov
popa
and
adc
dec
mov
mov
gs
sub
sub
cmp
push
mov
pop
shlb
fiaddl
mov
sub
lock
stos
std
lods
loopne
sub
lret
mov
popa
shl
xor
aas
aas
jge
jns
inc
inc
pop
xchg
inc
mov
adc
insb
call
divb
inc
inc
jnp
fisttps
mov
inc
xchg
mov
xlat
xor
add
adc
imul
fcmovu
mov
inc
dec
jo
lods
hlt
push
outsb
lea
mov
push
jb
sahf
test
inc
dec
push
inc
mov
jecxz
xchg
movsl
and
mov
shrl
and
dec
add
rorl
data16
loop
scas
sub
pop
inc
or
cmc
pop
push
scas
imul
push
push
stos
shrb
fisubrl
xchg
add
mov
sub
sarb
mov
cmp
rorl
dec
sub
xchg
in
push
repnz
xchg
push
into
sub
fstl
stc
or
push
gs
inc
push
jecxz
hlt
call
or
jnp
pop
inc
loope
lock
push
call
or
jo
push
xor
cs
ljmp
dec
or
movsl
cmc
js
loope
mov
ret
xchg
fldl
pop
stos
xor
dec
add
adc
aad
sbb
ljmp
in
mov
dec
jne
pop
push
pop
movhps
int3
jae
loope
call
ficompl
fisubrs
jmp
adc
inc
lret
fcomps
aad
es
jmp
cmp
popa
pusha
lock
cltd
out
fadds
lods
lods
add
loopne
ror
pop
aam
inc
in
push
inc
call
roll
mov
loope
pop
pop
ja
mov
sub
add
in
inc
negl
aad
repnz
pop
fisubrs
pop
adc
mov
cmpsl
fsts
enter
jp
ljmp
xlat
in
jle
jp
cmc
ljmp
inc
fstpl
add
or
loope,pt
push
pop
ja
sub
sub
push
pushf
cld
push
adc
xor
in
xchg
js
fisttps
xchg
adc
jns
call
aad
out
in
adc
sbbl
fdivr
test
mov
cld
scas
std
rcll
inc
sbb
pop
scas
les
lock
in
add
sub
mov
xor
add
ss
pushl
sti
jo
jne
push
cli
stos
loop
out
imul
imul
test
test
push
pop
cmp
add
enter
sbb
call
cli
dec
sahf
mov
loopne
sub
add
fmull
adc
lcall
pop
faddl
imul
jl
inc
adc
push
orl
lcall
sbb
or
mov
loope
ret
and
adc
inc
jnp
adc
pop
mov
mov
push
push
cmp
adc
fimuls
push
pop
mov
das
add
data16
mov
xchg
loop
ret
fwait
dec
shll
in
lods
imul
xchg
sbb
jg
fnstenv
popa
js
xchg
push
ret
ficoms
stos
test
sbb
ret
cld
std
enter
int3
int3
loope
push
xchg
xchg
out
sub
pusha
sub
xchg
or
enter
std
push
mov
stos
sbb
scas
lods
in
inc
rorl
enter
pop
loope
mov
out
push
jp
mov
sub
repnz
dec
ljmp
sti
adc
fwait
jmp
mulb
ljmp
sbb
and
decb
scas
adc
fidivrs
fcomi
mov
adc
xor
dec
mov
loopne
mov
push
jae
ja
js
push
mov
ret
lret
out
pop
add
addb
mov
shlb
int3
fbld
jbe
xchg
mov
mov
gs
sub
stos
push
call
inc
dec
cld
mov
loopne
outsl
mov
es
lcall
or
loope
call
push
push
mov
cli
cltd
inc
xor
mov
push
sub
data16
dec
and
jg
inc
in
andl
data16
push
mov
cmp
xor
inc
add
dec
push
pop
movsl
movsl
cmp
xchg
xchg
cmp
loope
and
movsb
cmp
aam
loopne
mov
je
add
sbb
adc
lods
dec
or
pop
push
loopne
adc
aam
inc
jbe
jp
jge
jmp
orl
jle
lcall
test
outsb
lds
xchg
mov
outsb
xor
adc
mov
and
mov
inc
xchg
fisubrl
fbld
orb
inc
mov
clc
pop
inc
push
mov
decb
or
pop
inc
sti
je
mov
jno
pop
nop
enter
imul
ret
push
and
xchg
cmp
xor
mov
fcomps
inc
sbb
das
pop
in
jg
pop
xor
outsb
popf
pop
xchg
ds
and
push
test
aad
inc
notb
notb
arpl
mov
fwait
outsl
lea
push
int3
sbb
pop
lods
iret
push
movsl
fsts
cmc
mov
pop
mov
stos
jnp
scas
cmp
inc
test
mov
adc
lret
cmc
imul
popf
cmpsl
xor
icebp
bound
fiaddl
icebp
or
mov
test
xor
sub
loopne
jno
in
xchg
jnp
mov
imul
test
mulb
adc
and
loopne
pop
jbe
movsb
stc
xchg
and
inc
jg
imul
mov
jge
mov
or
std
mov
add
popa
jno
dec
insb
xchg
xchg
sub
pop
dec
inc
xchg
adc
iret
orb
mov
add
mov
test
fidivrl
mov
loop
test
or
ret
cltd
jns
mov
out
dec
jmp
jle
pop
daa
stos
stos
shl
jo
cmp
lods
inc
mov
mov
pop
sub
sti
out
sbb
mov
push
pop
sbb
imul
or
sub
push
fs
adcb
mov
sub
xchg
dec
lods
sbb
push
jp
clc
hlt
loopne
in
out
fwait
jmp
adc
jmp
popf
das
pop
stos
movsl
xor
cmp
ljmp
mov
sbb
scas
outsl
mov
sti
nop
mov
fadds
mov
mov
mov
decl
insb
cmpsl
pusha
dec
mov
outsl
mov
dec
ffree
outsl
in
pushf
mov
fcos
push
lods
filds
aam
clc
fwait
cmp
sbb
mov
inc
jns
loop
loop
shlb
loope
and
pushf
out
push
sub
and
jge
lods
fmuls
lret
fucomip
pop
jl
inc
jae
push
fldenv
dec
imul
test
je
andb
or
sub
shrl
sbb
adc
sbb
xchg
std
stos
push
int
lahf
je
out
push
popa
adc
js
mov
daa
add
cmc
iret
ljmp
pop
jmp
push
ljmp
cmp
les
xchg
jmp
or
loopne
dec
and
popa
lret
pop
xor
cmc
rolb
cmp
enter
out
pop
lock
call
dec
mov
jecxz
cmpl
xchg
arpl
mov
cmp
sbb
stos
repnz
gs
jb
imul
out
xlat
in
or
stos
nop
xor
adc
loopne
xor
push
sti
repz
dec
mov
daa
inc
xchg
stos
sub
add
adc
int
inc
pushf
mov
cwtl
adc
push
test
cmpsl
and
ljmp
push
call
in
mov
mov
fildll
or
xchg
dec
ret
mov
jl
fdivrs
add
mov
aas
sti
jo
xchg
xor
xlat
add
cmpsb
jnp
add
popf
dec
hlt
daa
inc
jle
xor
dec
push
clc
cltd
sahf
push
js
int3
lock
adc
scas
push
popa
add
pop
dec
sub
sub
jmp
mov
cmp
jmp
sub
sub
cmc
sbb
cmc
push
fistps
mov
push
stos
dec
mov
push
pushf
push
pushf
xor
or
or
xlat
sahf
add
push
xchg
mov
sbb
jnp
jmp
cmp
pop
psubq
mov
dec
push
test
or
xor
cmp
cmpb
xlat
test
flds
lret
pop
mov
push
jns
loopne
lds
lds
jge
mov
mov
cltd
pop
add
inc
nop
sbb
mov
js
inc
and
xor
xor
push
mov
inc
psubb
adc
shlb
dec
cltd
push
inc
stos
dec
and
mov
adc
jne
shll
or
pushf
pop
lea
cmp
fldenv
push
mov
sbb
leave
ds
dec
pop
push
ss
dec
add
arpl
cmpsl
enter
ja
pusha
fsubrs
in
pop
movsb
lret
add
pop
add
call
dec
rcrl
fdivrl
adc
outsb
ret
pmaddwd
aad
clc
add
inc
pop
mov
scas
loope
pop
imul
sub
and
cmp
pop
cmc
faddl
and
movsb
jns
pop
stos
jb
rorb
pop
sub
in
ljmp
pop
out
mov
or
pop
mov
sti
nop
cli
jmp
dec
scas
mov
pop
xchg
out
pop
movsl
out
movsb
pop
jbe
js
inc
cmp
adc
aas
dec
lods
mov
or
pop
test
inc
pushf
pop
das
icebp
int
les
fistpll
lret
inc
aam
pop
cs
and
ret
roll
mov
dec
call
add
fcompl
pop
idivb
mov
into
popa
pop
or
daa
mov
pop
sbb
and
sub
fldl
lret
sub
mov
jg
sbb
add
xchg
pop
mov
scas
loopne
dec
out
fsub
cmpb
push
mov
and
cmp
or
mov
pop
hlt
and
and
clc
ret
pop
mov
mov
jbe
mov
or
sbb
mov
xchg
pop
das
sub
mov
cmc
sub
xor
jbe
or
inc
incl
aas
mov
fistpl
and
pop
jl
add
pop
jnp
push
call
adc
and
jmp
or
std
or
ljmp
mov
pop
inc
leave
aaa
pushf
inc
shlb
mov
inc
pop
stos
xorl
inc
les
cld
pop
es
adc
cmpl
aad
mov
loope
imul
dec
pop
icebp
pop
fcmovne
mov
pop
pop
xchg
or
pop
ja
ret
add
or
mov
ficompl
sbb
add
into
fst
pop
push
mov
pop
inc
popa
mov
pop
mov
ret
inc
jg
fcomp
pop
call
cmp
jbe
ljmp
sbb
inc
aam
jno
and
stos
lods
fistps
bound
add
fwait
pop
int3
and
imul
dec
test
push
or
in
xchg
hlt
cld
xor
lret
inc
je
push
pop
xlat
addr16
jbe
xor
sti
popa
addr16
cmp
loopne
mov
pop
mov
fidivs
and
test
dec
es
pop
andl
fmuls
mov
jb
jl
mov
xchg
ljmp
pop
mov
pop
jl
xchg
mov
mov
jne
pop
jb
and
xchg
xor
pop
pushf
sub
sub
cmp
out
jmp
int3
pop
mov
nop
mov
pop
subl
jnp
dec
pop
in
cmp
mov
mov
aaa
pop
pop
xchg
gs
in
aas
addl
fsub
xchg
addr16
pushl
cltd
fdivs
int3
push
jl
jbe
pop
or
out
lods
adc
inc
repz
xor
or
mov
push
pop
push
lods
scas
or
mov
test
add
cmp
xchg
jl
jle
insb
adc
pop
mov
add
pop
lock
xor
repnz
jno
jnp
rorl
ljmp
scas
nop
cmc
popa
mov
mov
add
icebp
cli
outsb
andb
add
cmp
sahf
and
pop
mov
int
mov
add
fistl
pop
inc
cltd
xchg
xor
cmpsb
cmp
pop
mov
add
pop
hlt
push
ds
loope
pop
in
mov
ret
xor
cmp
addr16
ljmp
out
mov
sub
loopne
dec
pop
daa
adc
xor
aaa
insb
sbb
mov
dec
ja
cwtl
test
pop
outsl
cmp
xor
lods
mov
js
stc
in
pop
mov
pop
adc
lock
xor
mov
pop
aaa
ds
lods
in
lcall
pop
inc
push
push
adc
shll
mov
sbb
xchg
lock
push
sbb
push
xor
cmp
dec
loopne
jne
mov
jns
bnd
dec
pusha
cwtl
popf
mov
push
pop
pop
shl
jns
xor
pop
call
pop
xchg
les
int3
dec
mov
jg
pop
jne
ja
cltd
xor
xor
mov
mov
and
jge
pop
and
out
imul
or
add
lds
pop
lahf
fsubl
pop
sub
jl
sbb
mov
jecxz
idivl
clc
adc
jbe
mov
aas
call
mov
dec
and
xor
dec
mov
rclb
pop
xlat
pop
cwtl
pop
pop
lods
stos
dec
push
pop
sub
popf
jle
add
int3
push
pop
jnp
xorl
jb
fs
test
mov
mov
sbb
enter
pop
aas
pushf
jns
add
sarb
insl
jno
xchg
pop
bound
inc
dec
pop
cld
cmp
and
lahf
fdivrs
inc
mov
cmc
bound
cmp
xchg
sub
add
pop
cwtl
pop
cmp
fadd
inc
sub
jl
inc
adc
pop
int3
sub
scas
sub
pop
inc
dec
shl
or
out
cmp
pop
popa
dec
xchg
pop
int
hlt
pop
xchg
push
clc
xchg
add
pop
mov
mov
lahf
and
mov
loope
mov
les
pop
outsl
pop
pop
mov
sbb
jno
fists
or
cmp
and
scas
sub
and
minps
fdivrs
jg
sbb
push
hlt
fadds
sub
pop
cld
pop
inc
movsl
loopne
lcall
mov
out
dec
pop
push
ljmp
pop
cwtl
jne
cmp
ja
push
xor
popf
xchg
sbbb
mov
mov
xchg
out
or
pop
aam
jbe
mov
pop
push
loope
push
je
ficomps
into
and
cmovb
push
pop
sti
adc
rcl
pop
lret
mov
pop
sbb
out
pop
push
std
adcb
xchg
das
pop
in
push
loope
push
sbb
mov
mov
popa
pop
push
inc
fcoms
jmp
xor
jge
ret
or
lds
jp
and
xor
or
pop
add
mov
inc
or
sbb
jo
adc
fs
mov
adc
fcoms
sti
es
xchg
jbe
xlat
mov
shrb
fdiv
popa
not
out
jmp
xor
pop
mov
push
fnstsw
xchg
inc
in
pop
sub
insl
ljmp
mov
nop
adc
xchg
in
cmc
jns
inc
lahf
cltd
arpl
inc
mov
fdivrs
mov
cmpl
cmp
clc
pop
cmpsb
imul
xchg
jae
fildl
call
adcb
xor
decl
cmp
shr
inc
jecxz
mov
ja
cwtl
sbb
xchg
jl
test
pushf
and
movsb
cli
or
pop
inc
popa
cld
push
in
mov
js
sub
cmp
int3
pop
dec
bnd
jbe
jmp
js
cmpsb
mov
cli
and
add
cmpsl
out
sbb
divl
mov
xchg
xchg
lcall
or
xchg
adc
fcomip
out
enter
clc
jns
imul
mov
pop
dec
xchg
push
sub
push
pop
cmp
inc
mov
sbb
adc
sub
inc
and
xchg
cwtl
aad
jb
roll
cltd
subl
pop
mov
xlat
js
mov
cltd
in
mov
or
inc
decb
inc
sbb
dec
dec
pop
inc
clc
roll
push
push
je
nop
cmpsl
add
das
add
jmp
fcom
sbb
mov
xchg
pop
inc
dec
pop
pop
fstl
fcomi
mov
stc
mov
xchg
jne
pop
push
push
xchg
aad
insb
adc
cmpsl
adc
jecxz
xor
xchg
inc
js
ljmp
inc
sti
sbb
pop
lret
ss
sbb
sahf
add
fldt
lock
out
insl
inc
xor
push
jle
jns
jo
and
xchg
push
or
int3
popa
ficoml
ds
jmp
or
and
jecxz
xor
mov
push
sbb
fcoml
jg
xor
icebp
mov
sub
add
sbb
std
lods
mov
das
pop
push
mov
shrl
adc
pusha
loop
sub
pop
jb
add
popa
imull
ja
in
xlat
sbb
fidivrl
xor
xor
push
pop
jecxz
or
mov
mov
xlat
push
imul
inc
jg
push
roll
adc
push
lret
inc
iret
arpl
mov
pop
clc
dec
push
push
xchg
bound
int3
dec
mov
push
mov
mov
pop
hlt
lods
xor
mov
add
bound
mov
shlb
lret
and
sbb
push
insb
arpl
dec
cmpsb
and
push
sbb
in
inc
mov
loope
adc
xchg
mov
push
notb
stos
cmp
inc
lahf
dec
push
repnz
in
lods
adc
out
js
jg
inc
stos
loope
js
test
ds
sub
ret
int
mov
scas
cld
in
cmp
pop
and
movsb
xor
push
and
mov
jae
shll
test
mov
in
and
inc
lcall
mov
dec
ss
xchg
sbb
push
add
sub
mov
repnz
adc
subl
push
pop
push
mov
daa
cmp
pop
mov
adc
in
pop
push
dec
mov
sub
mov
movsb
rorl
test
xchg
nop
dec
sbb
mov
jae
sub
and
mov
mov
push
push
adc
cltd
fcmovu
sbb
in
inc
cmpsl
outsb
and
in
cmp
sub
push
bound
int3
out
fsubrl
scas
stc
lahf
dec
inc
enter
sbb
popf
movsl
mov
js
sub
sbb
pop
xlat
add
or
scas
lods
cmp
movsb
mov
fnstcw
loopne
xlat
cmp
insb
movsl
xor
add
insl
call
adc
mov
lods
arpl
out
push
xchg
scas
test
lods
in
out
lods
stos
int3
fldl
pop
inc
add
cwtl
xor
mov
sub
sbb
xchg
sbb
out
popf
and
adc
cmpsl
inc
push
shll
cs
push
popa
pop
dec
push
xor
pop
add
pop
mov
mov
push
cmp
in
sbb
inc
push
push
sub
inc
push
pop
lods
ficomps
pop
mov
inc
andl
push
cmpsl
call
daa
cmpsb
mov
xchg
out
movl
popa
insl
pusha
jge
dec
adc
adc
imul
adc
loope
call
bound
mov
jecxz
das
jp
xor
push
sub
pop
adc
mov
sub
popa
js
dec
iret
mov
add
cmpsl
inc
push
sub
sbb
xorb
mov
dec
cld
inc
sbb
fisubl
jo
sti
cli
outsb
jg
lods
pop
mov
inc
call
dec
xchg
stos
or
dec
std
inc
mov
pop
push
imul
sbb
insb
xchg
shlb
xchg
inc
pop
mov
ljmp
pop
mov
or
xchg
in
pop
js
mov
call
movsb
in
aaa
or
xchg
sbb
mov
jae
cmp
push
movsl
arpl
and
in
pop
dec
outsb
out
setge
sub
sarb
push
popa
xchg
lock
insb
addr16
lock
in
into
iret
dec
jg
inc
sbb
in
push
ljmp
add
inc
adc
out
addr16
inc
sub
mov
loope
das
cmpsb
testb
ficoml
xchg
inc
dec
sahf
lahf
in
lcall
test
movsl
inc
adc
xor
or
imul
adc
je
inc
sahf
cwtl
sbb
ljmp
or
mov
rclb
sub
in
iret
loop
aam
pushw
fdivrl
sti
shlb
jle
adc
pop
imul
jmp
xchg
andl
inc
xchg
in
inc
ret
pusha
or
outsb
inc
icebp
imulb
cmp
sub
xor
ja
jo
cmp
out
mov
popf
aas
cmc
push
xlat
in
daa
psllw
call
xlat
inc
xrelease
fidivrl
test
jle
pop
pop
loopne
cmc
outsl
scas
adc
pop
mov
sbb
mov
push
addr16
add
mov
inc
push
pop
cli
and
loopne
pop
popa
lock
outsb
and
xchg
pop
les
and
pop
add
push
fs
andl
push
pushf
psraw
inc
cmp
movsl
outsl
inc
cmp
or
dec
xor
arpl
xlat
iret
call
xchg
outsl
ljmp
dec
test
add
std
xchg
fldenv
in
scas
lock
xor
push
idivl
push
adc
or
jge
lahf
inc
mov
loope
int3
inc
rorl
cmpsl
popa
mov
je
je
xchg
add
mov
jp
mov
jno
inc
out
dec
or
push
imul
cmpsl
pusha
bound
call
mov
in
shl
mov
push
push
and
fistl
lods
call
flds
pop
inc
outsb
sar
in
adc
inc
test
xor
movsb
lea
lods
in
lods
ljmp
inc
adc
mov
jecxz
xchg
push
rorl
push
jae
add
dec
testl
push
test
test
cli
inc
xchg
xlat
mov
out
cltd
icebp
mov
dec
sub
call
shrb
push
cwtl
inc
in
fs
adc
adc
sub
je
aaa
mov
inc
scas
xor
adc
pop
push
xchg
ficompl
cmp
push
in
inc
sbb
jbe
sbb
nop
imul
xchg
inc
arpl
jmp
movb
jp
mov
sbb
bound
outsb
hlt
push
mov
jp
stos
aaa
dec
mov
adc
fimull
shlb
pop
lods
add
cmc
aad
popf
loope
iret
and
pop
mov
pusha
jg
inc
pop
xchg
push
add
rorl
adcl
adc
xor
xchg
inc
inc
pop
jae
inc
nop
push
fstl
out
in
imull
movsb
fwait
cmc
inc
xlat
js
jp
aam
popf
lds
inc
lods
fdivs
sub
insb
in
fs
sub
push
loopne
push
add
pop
sbb
lods
arpl
adc
insb
jge
fimull
imul
inc
mov
jle
inc
cmp
push
mov
xor
push
pop
dec
shlb
mov
hlt
sub
mov
adc
inc
pop
xor
stos
xor
or
xlat
inc
cmp
and
insb
xor
push
jmp
mov
in
lods
cs
inc
imul
jmp
mov
add
xchg
sbb
jnp
push
adc
sbb
std
stc
icebp
and
cmc
mov
push
push
lock
mov
loopne
sbb
iret
pop
fldl
push
movsb
shr
and
mov
push
mov
out
push
pop
stos
sar
jge
lods
push
add
mov
aaa
ficoml
cmp
cmpsb
sbb
pop
loopne
xor
jge
fxch
pop
cwtl
cld
and
adc
ja
pop
call
inc
mov
or
mov
out
pop
mov
leave
push
pop
push
movsb
fnstcw
adc
aas
rclb
inc
dec
out
push
arpl
lods
in
fildll
pop
test
sbb
xor
cmc
cmp
mov
add
ret
push
cld
arpl
icebp
jmp
enter
nop
mov
or
mov
sub
add
outsl
adc
fnstsw
cmp
shrl
call
out
popa
push
sbb
push
push
dec
push
mov
inc
fnstcw
add
mov
das
adc
xchg
rolb
out
rorl
pop
movsl
cli
fidivrl
push
lahf
mov
repz
das
mov
xchg
lds
pop
pop
sub
inc
pop
mov
pop
xchg
xor
mov
xchg
fbld
and
ljmp
mov
sbb
pop
cmp
js
inc
std
mov
and
stos
cs
mov
mov
std
cmpsb
jecxz
mov
mov
push
pop
pop
iret
jp
std
cld
mov
ret
add
fadds
pop
stc
popa
movsb
push
loop
lods
inc
push
stc
andb
cs
stos
inc
push
loope
xlat
enter
mov
adc
inc
int3
pop
arpl
stos
loope
leave
jne
sub
test
sbb
cmp
bnd
pushf
xor
push
fcomps
jns
pop
pop
in
inc
sub
mov
mov
push
lret
mov
lock
dec
add
inc
pop
ss
les
fcompl
add
or
fwait
test
push
jge
nop
push
fs
sub
aad
ficomps
into
pop
cmc
roll
jnp
jp
mov
lock
loopne
adc
mov
push
mov
push
fwait
xchg
pop
mov
inc
aaa
ljmp
xor
sbb
popf
push
and
mov
ds
mov
pop
push
repnz
cmp
mov
ljmp
aad
sti
xlat
stos
enter
ds
test
push
out
loopne
adc
fiaddl
pop
jecxz
inc
add
mov
xorl
add
test
dec
inc
out
mov
cli
cmpsb
arpl
fucom
sbb
popa
xchg
inc
repz
cmp
or
lods
into
adc
dec
push
scas
popa
inc
ds
jmp
jp
icebp
xor
in
in
mov
sahf
xor
iret
push
mov
adc
jae
sub
addr16
iret
les
or
popf
test
sub
xor
lock
fs
jns
cmp
fs
pop
xchg
jmp
push
in
data16
adc
pop
fs
popa
mov
shll
inc
sti
jns
test
ljmp
mov
in
xchg
adc
pop
dec
rcl
clc
inc
rolb
push
movsb
jl
jnp
push
add
out
push
in
int3
pop
jns
aas
clc
rcrl
mov
dec
push
ss
call
in
shlb
nop
gs
mov
xchg
mov
add
inc
imul
adc
test
je
js
jnp
sbb
xchg
push
outsl
add
mov
sbb
in
dec
pop
loop
mov
adc
pop
push
jp
hlt
lods
dec
xchg
cld
popa
addb
adc
dec
jg
loope
or
mov
sub
popa
and
clc
add
sbb
cmpsb
add
int3
sbb
and
std
jmp
inc
ja
push
push
inc
sub
ljmp
jge
cwtl
sbb
std
adc
or
mov
int
jle
inc
incl
or
push
shll
pushf
dec
pop
pop
adc
mov
rcr
imul
rcrl
inc
xchg
jle
add
testl
sarl
lea
inc
dec
test
fimuls
lcall
lret
xchg
mov
jns
pop
and
xor
mov
adc
add
notb
scas
xchg
jge
cmp
jg
arpl
scas
push
mov
push
push
and
lahf
popa
xor
xchg
sbb
les
incl
xchg
stos
xchg
popa
cs
shlb
sub
pop
call
pop
xchg
cmp
xchg
cmp
mov
jno
add
jbe
mov
mov
lods
mov
mov
imul
pop
inc
push
add
cwtl
push
adc
mov
fs
xchg
push
outsl
jbe
add
xchg
xchg
hlt
ret
outsb
mov
cmp
subb
or
jmp
cmp
insb
dec
ds
adc
outsb
xchg
cld
mov
dec
or
lods
jmp
pop
inc
fisubrs
repz
pop
cwtl
xor
push
pop
pop
mov
xor
mov
rcrl
addr16
xchg
lahf
out
push
or
out
ficoms
scas
aad
inc
fidivl
and
sbb
cltd
mov
pop
push
sub
popf
scas
push
icebp
enter
jge
add
mov
pusha
test
dec
push
or
and
aam
cwtl
inc
lds
xor
iret
out
mov
pop
sbb
js
push
jge
test
rorl
cmp
in
pop
loopne
adc
inc
shll
out
adc
pusha
cmpl
jl
xchg
pop
popf
in
jp
lods
test
lahf
insb
loopne
xlat
paddsb
into
mov
ljmp
xchg
inc
divb
inc
dec
mov
sbb
dec
sbb
xchg
dec
inc
jmp
add
inc
mov
icebp
adc
leave
lea
push
jmp
push
mov
into
pop
or
pop
icebp
jno
shlb
pop
sub
jp
stos
adc
std
lret
std
adc
jmp
int3
and
arpl
inc
jne
push
scas
push
data16
sbb
cwtl
sbb
popa
fsin
test
insl
out
push
roll
adc
test
pop
dec
add
pusha
jmp
push
popa
lock
jecxz
push
jmp
push
mov
ret
loopne
movsb
cmc
sbb
imul
xchg
jg
fprem1
mov
add
inc
mov
data16
inc
adc
jbe
jecxz
pop
push
iret
pusha
jecxz
sub
sti
jmp
pop
loopne
loopne
xchg
jl
inc
ss
clc
test
out
and
arpl
mov
gs
jp
or
sub
fisttps
inc
loope
stos
sbb
sbb
movsl
repz
jecxz
mov
inc
xlat
mov
cmc
push
pop
and
mov
lods
mov
mov
mov
aam
pop
fnstsw
lret
rcrb
mov
inc
push
mov
ljmp
mov
mov
popa
cmp
stos
lods
dec
xor
inc
push
mov
mov
xchg
loope
jo
adc
or
dec
xor
sub
movb
lret
push
shll
and
xchg
mov
cli
dec
xor
and
int3
fists
jg
pop
cmp
ror
ret
fwait
mov
mov
fcom
repz
in
jecxz
cmp
xchg
fsincos
cmc
stc
ret
filds
xlat
sahf
inc
out
mov
lcall
int
addl
push
lcall
mov
xchg
mov
divl
imul
inc
arpl
mov
jmp
outsb
out
and
sbb
hlt
lods
inc
ljmp
movsb
repz
push
mov
out
cltd
jge
scas
xchg
stos
dec
lahf
mov
sahf
repnz
lock
cmc
scas
jae
and
repnz
stos
mov
jl
cmp
loope
lcall
addr16
mov
xlat
dec
or
dec
xchg
in
mov
inc
in
in
mov
into
in
inc
jae
arpl
inc
movsl
fucomip
call
pop
dec
xchg
cmp
push
sahf
push
pop
shrb
adc
inc
or
sbb
push
or
test
fiaddl
ljmp
cmp
or
cli
xchg
adc
adc
hlt
or
out
scas
cmp
mov
add
jg
sbb
fs
dec
mov
in
or
out
mov
out
mov
mulb
inc
xor
shlb
xchg
sbb
or
popa
inc
sub
xlat
jmp
jo
pop
sub
ss
xchg
lret
into
xlat
jge
icebp
mov
mov
inc
push
push
inc
scas
shrb
stos
xchg
enter
mov
sbb
pop
in
lret
in
xchg
stos
adc
mov
cli
push
lcall
cmp
mov
xor
and
push
jns
jmp
sbb
movsb
test
lods
mov
xchg
jle
loop
hlt
adc
pop
cmp
push
cltd
arpl
in
mov
loopne
push
into
hlt
pop
loop
jae
mov
mov
ds
mov
jg
mov
int3
xchg
out
inc
or
jae
adc
clc
js
and
mov
mov
insb
test
push
mov
movsb
add
pop
inc
inc
sti
mov
xchg
mov
je
pushf
notl
js
xchg
mulb
cli
pop
push
inc
outsl
insb
cs
inc
jo
pop
adc
mov
lahf
cwtl
fs
jg
mov
call
inc
adc
mov
xor
push
mov
loope
add
xchg
outsb
sbb
push
cmp
push
push
push
scas
push
pop
pop
sarb
rcrl
jle
mov
inc
add
dec
xchg
mov
add
inc
jecxz
pop
add
pop
mov
sbb
cwtl
ret
cmpsl
lret
and
ss
ljmp
xchg
aam
mov
iret
cmp
outsl
fcomps
shlb
inc
or
shlb
adc
xchg
movsb
inc
push
inc
cmp
repz
test
jecxz
jb
arpl
insb
daa
inc
ljmp
enter
mov
outsb
mov
inc
jg
pop
dec
xchg
je
cmc
data16
test
and
outsl
movsl
in
sub
sti
pop
add
cmp
lea
or
leave
mov
dec
push
lret
cmpsl
mov
pop
mov
push
and
and
fs
outsl
jecxz
push
sbb
adc
movaps
fistl
arpl
pop
inc
xchg
inc
mov
or
or
jns
inc
mov
xchg
mov
and
mov
ret
fildll
enter
mov
cld
sti
adc
jl
shrl
out
int
loopne
in
loope
dec
sub
cs
outsl
stos
adc
xchg
inc
imul
inc
pushf
jl
fdivl
fisttpl
pop
aam
sahf
mov
lods
push
xor
cmp
outsb
insb
inc
std
inc
test
cwtl
outsl
nop
in
jl
stos
dec
inc
jno
fincstp
shlb
xor
push
call
int3
aad
add
pop
xlat
adc
fimuls
bound
rcl
and
and
test
out
mov
test
es
lcall
jg
inc
aas
push
jg
cmpsb
push
mov
ja
and
mov
pushf
pop
jle
inc
imul
and
lock
cmc
sbb
mov
test
jae
pshufw
popf
inc
mov
lds
ret
sbb
xor
lods
stos
jnp
sar
ja
pop
jl
imul
sahf
fisttpl
pop
movsl
pop
fucom
xchg
mov
inc
push
fwait
int3
stos
mov
jecxz
sti
xchg
push
arpl
int3
fists
nop
or
mov
pop
jp
gs
pop
xlat
inc
fwait
bound
cmpsb
cmp
lret
pop
and
pop
xor
push
rcrb
cmpsl
jnp
into
jl
push
mov
mov
rcrl
mov
cs
ret
inc
sbb
inc
and
lods
into
and
mov
sbb
repz
insb
adc
mov
mov
mov
nop
mov
fs
in
pop
fdivrl
add
mov
hlt
out
rol
or
out
cmp
mov
cwtl
pop
lods
js
inc
add
lods
inc
pop
sbb
inc
push
push
inc
mov
mov
mov
popf
test
and
lods
mov
pop
stc
inc
mov
sub
jge
xchg
pop
mov
sub
and
in
fidivrl
sub
pushf
inc
push
cs
shrb
jo
cmp
push
push
dec
les
inc
sub
lods
test
stos
sub
enter
cmp
in
lods
or
arpl
push
pop
xchg
and
and
pop
jb
xbegin
jae
mov
shll
mov
out
mov
mov
hlt
dec
inc
movsl
jne
arpl
in
jnp
scas
clc
daa
add
mov
in
cmp
or
dec
mov
movsl
test
sbb
jb
push
leave
add
sbb
shll
pushf
push
jle
or
mov
cmpsb
aad
js
inc
ljmp
clc
pop
sahf
push
push
mov
mull
add
lahf
add
hlt
lods
imull
mov
mov
lret
or
xor
push
rclb
loope
mov
ret
jl
inc
jge,pt
jno
jp
adc
push
insb
dec
lea
push
mov
fstl
dec
shlb
add
das
push
or
and
test
or
dec
repnz
mov
xchg
add
outsb
stc
or
adc
stc
xor
mov
into
xchg
lods
add
out
mov
test
mov
jne
and
fistpll
stc
mov
xor
adc
movsb
and
clc
push
mov
inc
mov
and
nop/reserved
lret
and
stc
aad
push
push
jmp
mov
hlt
or
jo
inc
mov
push
flds
and
sbb
push
xor
in
loopne
mov
in
cmc
mov
mov
add
sub
hlt
inc
or
out
dec
sub
sub
inc
hlt
push
adc
arpl
jg
test
inc
lds
test
cmp
push
xor
call
push
pop
push
test
xlat
add
iret
jno
je
test
aad
lods
xchg
inc
int3
adc
sbb
sub
sbb
ss
and
mov
imul
cmpsl
add
arpl
xchg
or
out
adc
inc
xchg
std
jne
pmaxsw
or
addr16
loope
mov
pop
in
push
add
fdivrl
cli
fsubl
push
sbb
cmc
inc
add
pop
push
and
xchg
loope
shll
cmpsb
dec
fcoms
push
insl
mov
jnp
pusha
scas
push
mov
daa
pushf
pusha
add
pop
lock
jne
cwtl
mov
push
sbb
jecxz
or
mov
movsl
add
mov
pop
mov
in
enter
xchg
leave
inc
sbb
ret
nop
test
dec
cmpxchg
repnz
ja
dec
dec
jo
push
inc
out
mov
int
mov
jmp
sbb
jmp
mov
mov
pop
pushf
repnz
push
daa
xchg
mov
push
adcl
jge
outsl
cwtl
idiv
sbb
sub
ljmp
push
gs
xor
test
cmp
cld
xor
nop
dec
cwtl
mov
xor
cmpsl
sbb
outsb
xchg
ds
push
js
lods
inc
mov
xor
jle
xchg
jns
adcl
adc
mov
call
pop
js
mov
pop
jge
mov
cmpsb
lods
add
inc
mov
xchg
push
or
add
jne
lret
ret
cmpsb
out
test
push
pop
jbe
mov
mov
loope
inc
xchg
jle
xchg
jmp
sti
pop
jge
cmp
cltd
fcoms
stos
push
aas
pop
in
aad
jg
mov
mov
iret
push
mov
or
push
out
es
inc
jge
mov
cmpb
and
add
inc
add
cmp
test
pusha
xchg
pop
inc
and
or
xlat
mov
in
aad
jl
test
xchg
mov
fs
cmp
cmp
pop
out
dec
out
mov
pop
rol
fiaddl
mov
jns
pop
jg
in
pusha
adc
push
sbb
pop
mov
insl
out
xlat
outsb
sbb
and
mov
hlt
push
shl
lds
cmp
adc
popa
loope
iret
sahf
fwait
mov
mov
in
movsb
add
into
in
mov
gs
outsb
inc
ja
popf
cwtl
call
and
adc
adc
inc
push
push
mov
adc
ljmp
pop
push
popa
mov
scas
inc
test
jae
inc
mov
mov
sbb
scas
mov
cmpsb
ja
stos
inc
je
ficompl
mov
pop
bound
mov
push
jl
sbb
and
cli
and
cld
inc
loopne
in
popa
pop
aaa
rcll
stos
call
dec
inc
jo
cld
das
or
lods
hlt
in
sub
adc
mov
mov
divb
push
xchg
les
sti
push
test
sub
push
or
jmp
push
insb
mov
pop
daa
and
fs
or
push
sbb
imul
ja
xor
inc
or
inc
adc
ret
lahf
fabs
dec
lahf
cs
mov
cli
add
mov
sbb
insb
int3
mov
jge
mov
jne
mov
hlt
in
frstor
mull
xchg
out
push
mov
lcall
inc
cmp
repz
out
push
mov
inc
sbb
mov
lret
loop
mov
ljmp
fstps
out
lret
bound
stc
mov
dec
sbb
lods
dec
mov
pushf
orb
xchg
mov
in
push
cli
sub
sbb
pop
mov
mov
sbb
nop
pop
scas
test
ret
test
daa
fcomp
inc
paddq
mov
mov
inc
fisubrs
fucomip
fisubrl
insl
lahf
push
leave
adc
repnz
loopne
das
xchg
mov
mov
inc
das
pmovmskb
out
xor
dec
jbe
inc
xor
add
mov
pop
jb
popf
rol
scas
shl
fcoml
aas
outsb
pop
call
adcb
lods
stos
pop
cmp
subb
dec
fistl
call
xor
loopne
and
sbb
mov
fldenv
rcl
mov
xchg
dec
mov
loop
aam
mov
adc
jnp
test
or
mov
sti
ficoms
sbb
cld
dec
adc
popf
pop
xchg
inc
adc
xchg
adc
rclb
rcrb
or
nop
mov
push
inc
jp
pop
mov
sub
dec
lret
shll
das
popf
daa
mov
pushw
dec
arpl
mov
mov
mov
cs
test
inc
wrmsr
aad
dec
movsl
push
mov
or
clc
shr
cmp
fs
mov
jg
push
or
outsw
push
and
andb
test
mov
hlt
xor
dec
fildl
int
adc
stos
loop
jle
cmpsl
mov
inc
stos
cmp
pushf
inc
pop
sar
sbb
inc
sbb
pop
sbb
jne
imul
inc
dec
and
subl
mov
sub
imul
xchg
ja
pop
xchg
add
cld
lret
mov
les
out
xrelease
shlb
sbb
cltd
loope
cwtl
insb
adc
sbb
in
cmp
push
push
lcall
and
dec
je
inc
add
jl
fldcw
and
or
fs
mov
arpl
jg
or
adc
jns
jne
sub
jnp
cld
shl
jge
sub
push
cwtl
in
jge
nop
adc
pop
mov
test
aaa
adc
pop
dec
sub
in
pop
addr16
mov
mov
stos
lahf
arpl
xchg
jnp
ret
bound
test
notl
xor
inc
pop
icebp
std
nop
pop
mov
cli
std
dec
pushf
xlat
leave
mov
mov
movsb
loopne
add
jecxz
insb
or
fwait
jbe
or
jb
xchg
add
bound
sahf
jge
lea
cwtl
dec
cmp
fnstenv
arpl
outsb
sbb
dec
mov
icebp
jbe
sub
jns
add
push
mov
loopne
lret
add
shlb
adc
pop
test
xor
iret
jns,pn
adc
fisubrl
pusha
cwtl
test
enter
ret
imul
scas
in
adc
xor
mov
adc
loop
mov
scas
or
push
subl
int3
fcomps
or
push
mov
outsb
pop
outsl
insb
clc
fldcw
and
inc
push
push
cmp
adc
out
push
mov
js
lods
push
lcall
loopne
pushf
in
push
test
mov
or
fldl
dec
popf
mov
cmpsl
inc
jnp
in
repz
iret
xorl
out
push
push
ss
fadd
mov
or
daa
fcompl
push
das
push
mov
aam
fldl
mov
xchg
or
stos
sbb
pop
in
lods
or
in
popf
pop
dec
movsl
stc
jecxz
push
clc
fnstsw
hlt
stos
in
cmpsb
pop
cmc
mov
mov
inc
mov
mov
popa
cmp
xor
fwait
inc
stos
cli
and
inc
add
xchg
push
xchg
lcall
lahf
mov
fsub
lcall
mov
and
cmp
rorb
mov
ret
cmpsb
add
pop
push
ret
pushf
jbe
mov
add
sub
fsubs
cmpsb
sbb
in
ljmp
inc
jo
jnp
stos
mov
or
mov
cmp
inc
jns
scas
push
ljmp
rcr
cmpsb
lock
addr16
push
loope
lods
pushf
pushf
pop
shlb
xchg
out
fisubs
fldl
mov
lret
adc
cmp
in
das
pusha
sahf
lods
pop
test
aam
adc
aas
xchg
xchg
mov
adc
xlat
sub
push
gs
fidivs
inc
mov
repnz
jmp
outsb
add
mov
scas
xchg
cltd
adc
and
std
jo
add
xchg
test
cwtl
addr16
sbb
out
pushfw
and
mov
cmpsl
and
in
scas
mov
mov
lods
pop
les
sub
push
int3
inc
aas
fs
mov
lret
out
or
mov
in
push
ss
push
push
mov
inc
and
pop
hlt
loope
mov
jno
sub
push
loope
cs
lret
cmp
pop
out
mov
sbb
xor
adc
sbb
cmp
sbb
mov
or
push
adc
xor
insb
test
ficoms
ss
push
imul
push
mov
rol
sub
test
leave
sub
inc
cwtl
es
dec
sbb
inc
jb
aaa
push
mov
fdivrl
jl,pt
adc
or
jnp
loope
data16
inc
sub
jge
pushf
sbb
clc
idivb
jp
jmp
rclb
xlat
int
lds
stos
dec
add
cs
call
out
mov
push
and
aam
sbb
lea
inc
fcoml
testl
fidivrs
push
in
imul
jb
fistps
cmpsb
and
cli
sbb
and
or
sub
in
lret
cmp
sbb
inc
int3
and
out
int
pop
in
adc
push
jno
arpl
stos
stc
shll
add
jp
mov
pop
leave
cmp
adc
out
inc
cmp
xor
daa
ljmp
test
in
jg
dec
inc
lea
out
aam
call
popa
lahf
into
cmp
shlb
test
pushl
out
movsb
or
cmpsb
rcll
mov
xor
pop
or
stos
std
je
sarb
pushf
jp
addl
or
and
ja
inc
mov
sahf
fistpl
outsl
push
imulb
sar
mov
cmp
cmp
loopne
ret
sub
sbb
cmp
test
ret
or
lret
aad
and
and
in
orb
mov
lods
add
shlb
aam
lock
adc
sbb
or
mov
arpl
imul
cld
jns
xor
pushf
xchg
and
scas
dec
nop
mov
jno
inc
fnsave
js
mov
repz
mov
dec
sub
ja
adc
pusha
fisubrl
mov
popf
dec
cmp
jbe
push
inc
push
outsl
adc
fidivrs
pop
sub
jge
es
cmp
dec
sar
jmp
jle
out
lcall
sub
mov
cli
leave
mov
mov
hlt
dec
test
sbb
clc
mov
stos
mov
ret
inc
addr16
aad
sti
mov
rorb
xchg
push
lods
pop
inc
push
dec
xchg
fldt
subb
sub
fsubrl
mov
mov
cmp
xor
jmp
out
xor
scas
xchg
dec
add
xchg
rolb
pop
insb
sbb
xchg
sbb
push
add
aaa
pushf
rorl
loope
mov
sub
xchg
hlt
push
inc
mov
inc
ljmp
cwtl
xchg
shlb
mov
push
cmp
jg
pusha
fwait
sub
xor
or
pop
les
js
setle
push
xchg
inc
sti
pop
orb
sub
subb
fsubs
add
lret
adc
test
enter
xorb
outsl
xor
or
iret
js
cmp
or
mov
inc
stos
or
and
call
add
or
je
dec
xor
or
jnp
inc
mov
shlb
mov
frstor
adc
jns
inc
stos
dec
sarb
sub
inc
fistps
sbb
xchg
sub
hlt
cltd
inc
test
push
xchg
push
arpl
jno
pop
or
add
orb
std
imul
jne
clc
sbb
fcoml
jge
lret
hlt
jl
mov
mov
add
stos
test
iret
test
push
or
mov
fs
jg
push
push
cwtl
loope
das
dec
jbe
movaps
mov
pop
test
leave
pop
xlat
cmp
lret
push
push
test
sbb
mov
repnz
adc
les
push
int3
test
stos
les
test
insb
xor
sub
aaa
dec
out
push
jmp
popl
jp
cmc
sub
sub
jecxz
inc
push
mov
stc
pop
stc
mov
shll
scas
mov
inc
leave
xchg
or
iret
in
fildll
pop
sbb
xor
push
inc
loop
mov
scas
shlb
pusha
sbb
add
stos
pop
jmp
mov
jl
lahf
mov
mov
sbb
and
mov
leave
popf
adc
adcl
cmp
ljmp
sub
sbb
xchg
in
arpl
xlat
clc
je
sahf
imul
mov
dec
mov
fwait
dec
or
dec
push
ljmp
xchg
jg
xlat
add
mov
push
cld
out
insb
enter
pop
or
push
movsb
ss
jp
fldl
nopl
clc
mov
push
xchg
push
testl
fadd
xor
je
push
loopne
sub
sbb
out
je
repz
repz
push
adc
ja
and
push
or
push
xchg
out
or
cli
jb
test
testb
mov
js
jns
hlt
add
enter
arpl
fucom
dec
jnp
pusha
test
and
mov
test
mov
pop
arpl
clc
sub
mov
cmc
push
cwtl
cmc
xchg
aad
and
xchg
xchg
fldenv
sbb
add
pop
mov
inc
sbb
mov
test
inc
out
test
adc
cli
stc
xchg
inc
or
push
push
lret
add
cmp
adc
xchg
add
popa
inc
lds
add
lods
dec
dec
call
arpl
clc
push
mov
stos
cmp
ljmp
xchg
in
daa
fcoms
sbb
lret
mov
scas
dec
push
xlat
outsl
sahf
cltd
inc
jl
sbb
push
cmp
orb
sahf
fmul
mov
es
adc
idivl
inc
testl
sahf
cmpb
ljmp
mov
add
mov
add
mov
imul
addr16
xor
ljmp
int
sub
mov
sub
inc
insb
mov
in
add
pop
rol
mov
jmp
adc
or
cwtl
push
fmuls
cmpsl
faddl
lods
jp
mov
push
dec
rorb
lahf
xchg
cmp
push
nop
mov
mov
adc
xor
jl
ljmp
imul
xor
jg
das
out
daa
pop
shr
dec
sub
imul
cwtl
lcall
call
push
daa
pop
shlb
outsl
stos
push
shll
movsb
jl
js
adc
frstor
sbb
les
xchg
stos
popa
push
mov
rcr
push
clc
and
jb
das
repz
test
sbb
jno
out
dec
xchg
pop
inc
pop
aad
push
mov
xchg
clc
insl
jge
gs
arpl
out
insb
pop
add
call
sbb
ljmp
lods
jp
inc
and
sub
or
pop
cmpsb
mov
inc
push
movsl
cwtl
mov
adc
lea
outsb
gs
iret
inc
jle
out
mov
mov
icebp
repnz
cmp
loopne
filds
stos
pop
xchg
ljmp
test
xor
scas
inc
push
xor
dec
jl
loopne
iret
sbb
test
pop
in
adc
push
loope
xchg
sub
push
insb
imulb
cmc
fcmovnb
mov
or
data16
loopne
dec
mov
call
out
or
xchg
inc
popf
lds
jecxz
push
pushf
add
loop
fsubl
lock
mov
sahf
js
mov
jl
jp
push
arpl
pop
cmp
mov
cmp
popa
mov
test
loopne
jp
jle
jecxz
mov
push
out
ret
cs
push
push
faddl
adc
pusha
test
shrb
scas
mov
insb
aam
xchg
test
mov
lcall
dec
cmp
pop
dec
insl
cwtl
sahf
push
loope
push
inc
in
sbb
inc
dec
jae
scas
push
std
cmp
aam
push
sub
mov
in
xlat
imul
popa
loopne
mov
jecxz
push
inc
jl
push
popa
repz
sub
call
cmpsl
cmp
imul
pushf
out
cld
out
scas
add
stos
mov
xor
outsl
orps
adc
lret
jl
push
mov
sbb
cmc
pop
xchg
jecxz
mov
mov
mov
mov
adc
jg
fdivrs
ja
sub
leave
cld
pop
jae
aam
jle
add
lcall
jp
inc
dec
icebp
add
fadd
aaa
adc
mov
cwtl
adc
mov
cwtl
flds
shl
je
sbb
jl
imul
or
mov
jbe
sti
push
jnp
popa
inc
mov
test
pop
nop
xchg
inc
xor
jp
test
lea
sbbl
and
mov
inc
xor
cltd
jo
and
cmp
fisttps
add
xchg
add
fwait
cwtl
mov
ds
jne
cld
js
or
pop
dec
rclb
ret
pop
popa
push
pushf
push
jne
stos
sbb
mov
cmc
jnp
jmp
aam
push
push
mov
insb
in
aaa
sbb
lods
mov
dec
or
int
adc
iret
jmp
ljmp
aaa
mov
in
aas
shll
sti
test
jg
lock
ret
jg
sbb
ljmp
adc
add
cmp
clc
mov
std
cmp
jp
mov
hlt
push
adc
mov
xchg
adc
arpl
mov
inc
repnz
inc
imul
xchg
mov
push
sub
or
fidivrs
push
aaa
cld
pop
je
add
sbb
adc
frstpm(287
fscale
sbb
loopne
icebp
lret
push
pop
repnz
adc
xchg
ljmp
out
inc
mov
test
or
mov
jne
in
ficoml
mov
sub
shll
loope
push
mov
inc
enter
mov
push
and
xor
and
arpl
and
imul
stos
lret
add
push
push
mov
xorb
jmp
scas
and
fmull
inc
push
outsl
inc
cli
pop
fldcw
imul
xchg
ss
rcrl
icebp
inc
jmp
outsl
xor
mov
mov
mov
push
or
sub
dec
inc
mov
mov
push
mov
pop
faddp
mov
mov
xor
test
icebp
lods
inc
inc
dec
sub
mov
faddl
das
gs
negb
cltd
mov
mov
and
mov
adc
fisubs
sbb
aas
mov
adc
lcall
fdivrp
enter
mov
lahf
arpl
xor
popa
cmc
mov
aaa
jb
mov
outsl
lods
inc
mov
aam
cwtl
mov
ret
scas
nop
xchg
jecxz
jmp
mov
roll
shrb
lods
mov
inc
sbb
mov
inc
dec
arpl
insb
sub
rorl
fcoms
movsb
test
mov
xchg
pop
mov
jg
jae
loope
aaa
sbbl
loope
sahf
mov
jp
lods
cmp
loopne
mov
fisttpll
mov
pop
mov
std
iret
adc
lods
fcompl
add
ret
out
int3
adc
movsb
ljmp
in
loope
dec
xor
push
mov
cld
pop
jecxz
ljmp
dec
mov
and
cmp
push
jno
rolb
divb
ljmp
icebp
hlt
movsb
pusha
add
cmp
jno
pop
ret
or
test
add
test
jl
adc
mov
in
ljmp
jg
into
mov
xchg
das
xorl
in
and
fwait
xor
dec
sub
sub
sbb
mov
fldenv
add
in
fidivrl
hlt
lods
sarb
dec
in
pop
cmp
mov
jge
hlt
pop
stc
add
cwtl
test
cmc
cltd
xor
aad
ret
sub
daa
std
pop
mov
mov
pop
add
loopne
int3
int3
popa
jbe
add
repnz
nop
cmovno
pop
pushf
mov
cmpsb
ret
jmp
push
jb
and
bound
in
mov
adc
mov
and
out
push
lods
xor
xchg
add
daa
iret
pop
jecxz
roll
lahf
sub
sub
jecxz
pop
outsl
pusha
fldcw
mov
das
loopne
mov
mov
add
mov
inc
pop
cmp
mov
mov
das
inc
mov
mov
add
pop
push
or
lods
repnz
cmp
outsl
push
cmp
or
enter
add
xor
cltd
pop
push
and
mov
aaa
mov
cmp
or
cmp
ja
add
pusha
fs
jb
subb
aam
pop
ljmp
out
call
adc
pop
aaa
ljmp
sub
cmp
scas
ljmp
pusha
add
mov
sbb
cmp
lods
mov
push
xchg
pop
aam
fisubrs
pcmpgtd
inc
popa
pop
mov
inc
and
jmp
push
xor
orl
fidivrs
add
and
lahf
fs
inc
out
das
jmp
negl
dec
stos
dec
cmovns
push
sbb
shlb
xchg
adc
jae
cmpsl
mov
xor
punpckhbw
adc
into
pop
sahf
iret
idiv
add
fists
shr
or
subl
das
push
loopne
and
mov
xor
mov
inc
icebp
outsl
pusha
cmp
int3
loope
shlb
mov
cmpsl
push
or
outsl
out
enter
sbb
xchg
aam
xchg
inc
jl
call
mov
inc
mov
jnp
mov
or
adc
xchg
test
push
pushf
dec
cmpsb
mov
mov
divl
fadds
ljmp
mov
movsb
sub
insb
cmp
pop
fs
inc
repz
mov
sub
mov
jno
lods
adc
mov
pop
rol
push
cmp
mov
mov
mov
and
scas
cmpsb
scas
push
hlt
xor
arpl
scas
jns
push
addr16
xlat
push
out
xchg
andb
and
cmpsl
pop
loopne
jecxz
jae
cmp
mov
adc
lahf
pop
pop
stos
shl
sub
add
into
popf
cmp
out
ret
inc
sti
addr16
scas
mov
into
movsb
fdiv
cltd
jle
hlt
test
pop
fwait
push
add
dec
sbb
inc
dec
std
out
fcmovbe
lock
mov
rcr
inc
cmp
lea
mov
enter
xchg
int3
mov
mov
lahf
fs
inc
sti
sub
js
push
sbb
pop
lods
push
ficoml
je
les
aam
xor
mov
xor
mov
stc
popa
inc
sub
pushf
ss
sub
packuswb
arpl
mov
cli
push
scas
xor
push
scas
les
imul
hlt
shlb
pop
sti
movl
cmp
xchg
and
movsl
mov
mov
push
pop
xor
rorb
and
pusha
scas
mov
xor
xor
aam
cmp
aad
daa
repz
inc
cmp
rorb
add
or
or
jo
sbb
pop
sarb
add
dec
jne
mov
dec
mov
adc
dec
sub
mov
adc
pop
cmp
cld
pushl
nop
lods
jecxz
xlat
and
scas
xlat
adc
push
clc
push
inc
add
test
repnz
jge
and
pop
jno
pop
or
xor
dec
push
cltd
sahf
outsl
push
mov
adc
aaa
xor
push
in
sub
popf
mov
outsb
daa
mov
cltd
imul
mov
mov
into
and
js
popf
fiaddl
cmp
lea
loopne
int
push
push
jb
xor
hlt
cmp
stc
sbb
ret
push
fs
cmpsl
das
test
lock
in
outsb
adc
stos
cmp
xchg
arpl
sti
call
xchg
and
lock
popa
lods
loopne
fcoml
lock
idivl
sbb
sub
pop
cmp
loopne
int3
sub
scas
mov
xchg
jbe
pop
lret
mov
adc
xchg
push
in
mov
cmpsb
adc
clc
sbb
mov
insl
insl
stos
stc
arpl
loope
dec
mov
stos
xchg
xor
loope
pop
fwait
inc
pop
push
xchg
add
inc
stos
dec
jg
insb
repnz
notl
inc
lcall
mov
insl
xor
mov
subl
je
das
bsf
or
cmp
shlb
sbb
int3
jno
cmp
movsb
cld
shlb
loopne
test
rcll
mov
mov
fldcw
jmp
dec
jo
sub
pop
insb
xor
rclb
fnstcw
into
lea
mov
cmp
xchg
inc
push
into
sbb
sarb
ret
inc
jmp
pop
hlt
clc
mov
sahf
and
and
dec
lret
outsl
mov
out
outsb
mov
data16
xor
pop
jno
mov
scas
outsw
xor
inc
jge
xchg
and
stc
dec
inc
sub
xchg
xchg
xchg
mov
fcomps
int3
pop
inc
popw
test
lret
xor
popa
xor
inc
mov
lock
je
arpl
nop
mov
cmp
mov
xor
lods
mov
push
fsubl
push
leave
test
into
pusha
push
inc
cltd
push
sbb
pop
out
je
xchg
mov
fsubrs
pop
aad
or
decb
push
scas
lods
cwtl
and
imul
jecxz
xchg
adc
push
xor
sub
push
aad
fstps
adc
pop
cli
jbe
fistps
adc
mov
insb
cld
psraw
cmc
mov
adc
shrb
cmp
and
loope
fimuls
xchg
pop
mov
mov
pushf
inc
and
movsb
pop
in
movsl
fisubs
or
and
lock
mov
add
xchg
pop
std
xchg
xor
into
mov
jo
aam
insl
sti
inc
mov
or
outsl
jne
mov
shll
test
sub
fs
popa
cmp
xchg
cmp
jg
dec
nop
mov
fadds
aad
sub
add
and
dec
cltd
out
or
mov
mov
mov
cltd
out
outsb
push
pushf
xor
inc
int
shrl
jno
sahf
xchg
cmp
pop
push
outsl
stc
call
pop
rcrl
out
out
scas
jge
jo
mov
push
jp
mov
cmpsl
xchg
cmp
movsb
cwtl
lods
outsl
inc
mov
adc
adc
mov
stos
inc
ljmp
sub
cmpsl
mov
js
pusha
xchg
jo
test
push
dec
outsl
test
sub
lcall
jg
ret
jecxz
repnz
sbb
inc
mov
mov
jg
xchg
mov
fists
fwait
add
lahf
fcoml
mov
inc
arpl
ljmp
lods
sbb
rcrb
fidivrs
sub
cmp
xchg
inc
out
xor
stos
push
cmp
jl
adc
mov
repz
sub
adc
pop
sbb
dec
sub
mov
insl
cmp
pop
rclb
shll
push
add
sub
test
fmuls
and
adc
xor
and
push
mov
sub
push
dec
fcomp
aaa
mov
out
pop
jecxz
mov
add
cmpsb
outsb
mul
adc
iret
imul
stos
adc
jecxz
sarb
mov
cmc
cltd
shrl
push
cli
hlt
jbe
imul
jmp
ret
mov
pushf
fsubrs
mov
xchg
lea
push
mov
in
xchg
push
inc
insb
sub
int3
jl
sub
call
call
cmpsl
ror
fisubrl
fiaddl
or
mov
std
xlat
imul
pop
and
inc
mov
test
pop
xchg
sbb
xchg
ficompl
inc
xchg
insb
fldl
or
add
pushf
push
arpl
popa
in
rclb
ljmp
bound
jb
scas
dec
lock
jle
hlt
dec
sub
je
mov
outsb
cmp
push
mov
mov
add
fidivl
hlt
lods
dec
inc
std
pop
shlb
cmp
pop
ret
out
outsl
xchg
jle
inc
cli
sbb
inc
inc
popf
or
fwait
rorb
sub
cmpsb
scas
stos
push
loope
vcvtpd2psx
dec
dec
sbb
mov
sbb
inc
js
jo
xor
mov
mov
add
mov
cmp
pop
cld
out
jb
mov
pop
pop
rolb
mov
xlat
dec
jl
popa
shlb
popa
shrb
mov
xor
pop
push
dec
push
addb
mov
rcrb
mov
call
adc
jg
iret
imul
sub
jle
cs
fcmovne
imul
pop
insb
arpl
lods
sub
push
stos
pop
mov
fimull
stos
or
lret
jmp
icebp
out
xor
inc
jg
adc
or
cmc
fsts
lret
ret
mov
lods
xchg
nop
adc
add
loopne
jb,pt
cwtl
das
sbb
pop
shl
xchg
adc
sub
mov
mov
int3
filds
mov
push
pop
outsl
xlat
subl
hlt
aaa
push
mov
clc
adc
call
loopne
adc
or
and
and
xor
jge
mov
test
ret
jno
inc
lods
mov
addr16
mov
out
test
lods
or
cmpsl
inc
adc
push
push
mov
xchg
and
call
sti
mov
or
lds
orl
cmp
cmp
ljmp
loopne
adc
jle
lret
xchg
loope
iret
push
movsl
jecxz
lods
sub
dec
mov
adc
pop
fcompl
mov
testb
mov
inc
aam
loopne,pt
ret
or
out
cwtl
std
rcr
push
pop
cmp
mov
outsb
mov
mov
repnz
mov
push
xlat
clc
mov
adc
filds
shll
inc
rclb
ljmp
xchg
daa
clc
push
mov
aaa
jae
pop
mov
adc
pop
data16
setb
int
jns
inc
popa
or
insb
les
add
mov
jge
xor
xor
mov
in
pop
out
cmp
out
push
dec
popa
pushf
mov
dec
lret
inc
cmpsl
sbb
loope
stos
shll
notb
call
jmp
or
aaa
push
arpl
shlb
cld
notl
jg
jbe
std
or
or
popa
cmp
mov
or
jl
in
mov
push
xchg
fistps
cmp
xchg
lods
rclb
or
mov
pushf
sub
and
mov
ss
and
out
cmpsl
sti
push
jge
lods
push
xor
shll
mov
sbb
jg
sbb
inc
mov
mov
inc
out
sbb
test
xchg
hlt
jb
add
shlb
push
dec
xor
inc
das
pop
shlb
test
push
add
jbe
fs
pop
xchg
pop
out
or
cmc
cld
inc
addl
xchg
addl
lret
cmp
jmp
and
das
and
out
mov
imul
addl
push
mov
mov
pop
pop
mov
sbb
add
or
xchg
jl
out
cmpsl
dec
dec
outsl
scas
fistpll
dec
xlat
fisubrs
insl
mov
inc
adc
mul
test
pop
mov
adc
xor
pop
pop
popf
lahf
dec
inc
lock
data16
sbb
mov
pop
loopne
xor
and
inc
inc
mov
push
add
andl
popa
inc
pop
sarl
addl
push
sahf
or
cmpsb
pop
or
aas
xchg
out
mov
test
cmpsl
daa
push
mov
pushf
cld
dec
outsl
daa
inc
loopne
pop
lcall
jecxz
and
loop
leave
xor
push
pop
jnp
int3
test
mov
popa
imul
mov
call
mov
or
xrelease
iret
xchg
and
mov
mov
sbb
push
loope
mov
aad
fildll
pop
clc
in
xor
lret
ror
mov
loop
in
in
push
cwtl
insb
fldt
push
out
mov
clc
lods
leave
xchg
je
fistps
xor
in
into
inc
mov
mov
pop
out
mov
push
js
pop
popa
call
aam
mov
mov
sbbb
cld
sub
dec
add
push
les
scas
sub
in
sbb
xor
jno
dec
push
xchg
xchg
sbb
inc
or
or
cmp
push
imul
enter
arpl
pop
ret
inc
scas
addb
stc
mov
inc
aas
and
repz
test
aaa
popa
test
les
test
xchg
repnz
shlb
subb
add
lret
clc
pop
pusha
nop
mov
jge
mov
sarl
hlt
sbb
cmp
ds
mov
stos
call
ret
push
mov
jmp
inc
cmp
mov
fmul
inc
shll
mov
adc
xor
add
push
xor
mov
pop
pusha
xchg
xor
pop
and
cmp
pushf
fdivs
clc
lds
adc
jg
gs
inc
mov
jp
pop
mov
leave
jp
popa
in
inc
jb
cmp
shl
test
jns
inc
xchg
or
or
adc
leave
xchg
adc
jecxz
jg
inc
repz
lock
roll
in
sub
jne
fldenv
add
rol
inc
jmp
data16
test
dec
adc
cltd
push
sub
xchg
lret
lret
jne
push
jmp
and
and
and
js
jge
mov
inc
cmc
mov
popa
stos
adc
adc
xor
loopne
mov
pop
in
pop
cmp
out
leave
sbb
mov
adc
mov
test
dec
sub
push
lds
push
shll
pusha
outsl
inc
xchg
rclb
jns
data16
lret
loope
jecxz
shlb
mov
flds
lods
jne
inc
mov
xor
xchg
dec
ret
test
fistps
mov
int3
addb
aaa
mov
and
mulb
jae
mov
loopne
cs
add
in
fsubl
push
cmpsb
testl
push
in
test
movsb
dec
cmpsl
mov
dec
or
push
sti
or
nop
hlt
stos
inc
repnz
cmpsb
fnstcw
idivl
bnd
aas
dec
pushf
jb
pushf
test
push
dec
aam
mov
pop
sub
inc
push
cmp
rcl
push
enter
mov
dec
nop
mov
inc
outsb
jns
push
push
mov
or
adc
pop
jno
sub
pop
lods
xor
fisttpll
bound
cmp
xchg
imul
and
pushf
test
ret
sub
sub
mov
cmpsb
arpl
sbb
xchg
adc
mov
dec
mov
ljmp
fcmovnb
jp
fists
cwtl
jo
mov
aaa
or
mov
and
lcall
jmp
inc
jns
lock
lods
lods
inc
popf
nop
and
fsubl
je
sub
ja
push
and
mov
cmovbe
inc
mov
jg
dec
sbb
inc
aas
mov
in
aam
into
and
iret
and
lret
js
mov
stc
fstpt
in
jmp
push
lcall
loope
mov
dec
mov
dec
inc
sub
push
add
jbe
arpl
test
fisttpll
jl
adc
cmpsb
pop
fcoml
lock
push
mov
xlat
cmpsb
sahf
idivb
das
jg
in
dec
pop
stc
mov
push
add
cmp
mov
out
xchg
clc
and
pusha
mov
dec
jge
jl
or
and
stos
jmp
inc
iret
lock
ds
mov
outsl
es
into
mov
push
loope
mov
push
add
scas
aas
out
dec
stos
fsubrp
fadds
js
pop
mov
rol
inc
sbb
pop
and
sub
push
pop
lods
inc
fcmovbe
int
mov
pop
jle
pop
call
push
pop
js
inc
sbb
push
inc
adc
arpl
data16
ljmp
sbbb
xor
repnz
sbb
insl
outsb
adc
dec
jl
dec
fadds
test
clc
mov
mov
sub
insb
iret
pop
in
sar
or
push
fisttpl
je
jle
das
sub
test
cmpl
jo
push
and
inc
jle
push
sbb
dec
fwait
mov
loopne
mov
jecxz
add
push
pop
arpl
jne
lret
test
xchg
jle
push
push
sub
adc
jge
in
or
xchg
or
xlat
popf
jae
scas
pushf
sti
mov
push
fdivs
or
or
cmpsb
scas
add
sub
dec
push
sbb
bound
stos
ret
imul
pop
dec
les
adc
icebp
push
cmpb
lcall
adc
mov
popa
mov
stos
jo
inc
in
mov
loopne
adcb
pusha
sbb
mov
popa
sbb
push
cmc
jns
inc
mov
dec
jmp
adc
adc
lods
or
mov
das
or
sbb
dec
mov
mov
jg
cmpsb
sbb
jle
daa
insb
and
aad
sub
jae
ss
out
mov
adc
into
add
xlat
arpl
and
loopne
lods
xorl
outsl
xchg
inc
mov
js
scas
sub
adc
dec
imul
push
repnz
adc
pop
in
xchg
daa
pushf
je
clc
pop
js
sub
cmp
jno
popa
lcall
inc
cmc
mov
dec
notl
xchg
pop
lea
jecxz
mov
mov
imul
sub
aad
xlat
adc
dec
lds
icebp
adc
js
jg
fmul
or
test
scas
push
icebp
movsbl
jmp
in
ss
test
rolb
cmp
xor
adc
lock
outsl
and
imul
gs
in
outsl
add
inc
pop
cmc
int3
pop
mov
and
cli
xchg
cmpl
cmp
sahf
cmpsb
mov
jecxz
pop
rolb
les
mov
imul
leave
test
dec
call
rclb
js
out
call
jg
rorl
add
adc
lahf
rol
dec
repnz
add
xlat
pop
sar
dec
mov
aaa
push
subb
aas
insl
adcl
sbb
mov
fcomps
fldl
mov
pop
arpl
inc
movsb
mov
push
pusha
in
xchg
loope
add
jo
js
push
in
mov
sbb
ljmp
xchg
dec
xor
test
pop
mov
inc
xor
mov
ret
imul
cli
call
sub
je
mov
adc
sahf
push
movsb
stos
mov
rcl
jl
cmpsb
xor
mov
pop
test
movl
test
rolb
icebp
add
push
xchg
aaa
ret
test
mov
and
inc
arpl
adc
pop
cmpsl
jg
fsubp
jmp
jg
dec
imul
mov
dec
xchg
mov
jnp
in
iret
jo
adc
mov
jmp
sbb
add
movsb
fdivl
mov
mov
xchg
pushf
aaa
mov
ja
push
outsb
jp
call
pop
in
addr16
call
stos
jl
loopne
pop
inc
lods
popf
lahf
cmpsb
scas
fwait
xlat
pushf
test
sbb
daa
in
mov
pop
xor
jb
inc
rcll
push
ljmp
jne
jle
push
mov
dec
call
daa
or
mov
push
and
loope
in
stc
or
imul
push
mov
faddl
cmc
jo
mov
adc
xchg
fisubrl
xor
gs
cmp
mov
push
add
pop
icebp
push
call
divb
cwtl
mov
lret
pushf
inc
sub
aaa
jl
cmp
inc
outsl
inc
mov
hlt
push
test
sub
cmpsl
push
mov
sbb
push
sub
push
add
stc
cmpb
aaa
push
jecxz
scas
jb
scas
xor
mov
mov
test
mov
aad
mov
mov
aas
mov
inc
arpl
inc
stc
les
cmpsl
in
jbe
xor
sbb
sbb
pop
or
inc
push
stos
mov
sub
outsb
add
sub
mov
mov
rol
jge
or
mov
daa
push
ficompl
cli
dec
mov
push
add
inc
pop
sbb
pusha
fcomps
xchg
outsb
inc
ret
jmp
je
mov
outsl
or
sbb
pop
call
popa
and
testl
popa
mov
movsb
add
xor
inc
stos
clc
popf
pushf
stos
and
mov
mov
add
es
fsts
xor
orb
test
pop
gs
addb
loope
mov
aaa
or
test
and
inc
scas
cmp
rcll
cli
jne
mov
mov
bound
lret
mov
lods
jb
xchg
add
mov
adcl
test
in
leave
and
repnz
pushf
pop
cltd
incl
xor
shlb
jmp
and
cmc
test
neg
stc
cli
xchg
addb
into
jmp
movsb
shlb
jl,pt
fstl
add
aam
std
loopne
lret
cmpsl
jo
lahf
test
pop
xor
sub
lahf
movsb
push
das
hlt
adcl
pop
push
rorl
mov
test
ret
mov
lods
popa
jbe
ljmp
lret
cmpsb
pop
and
sub
xchg
mov
sub
push
xchg
mov
push
push
dec
nop
fiadds
xchg
adc
sbb
adcl
mov
clc
jo
repz
test
arpl
add
push
inc
mov
pop
cs
jne
jp
jl
test
xlat
add
adc
jmp
pop
push
test
push
inc
or
sub
into
and
cmp
arpl
xorb
cmpsb
or
push
imul
call
subl
xor
sub
icebp
movsb
addr16
dec
pop
dec
popf
sub
out
lds
mov
push
stos
fildl
lret
ret
inc
mov
cs
pushf
mov
pop
push
test
call
cmp
push
lea
pop
cwtl
testl
push
es
cmpsl
popa
je
lods
ds
mov
xchg
lret
or
sub
movl
and
das
popa
ret
mov
frstor
mov
inc
push
test
push
test
in
jo
into
lds
fs
sbb
ljmp
lock
lea
jg
in
fidivl
addr16
sar
outsb
ss
mov
jmp
loope
and
and
inc
test
xchg
push
lcall
inc
jnp
shr
fldenv
into
sub
punpckhdq
sbb
gs
outsl
or
pop
shl
cmpsb
dec
rorl
fcomip
sub
cli
pop
divl
repnz
imul
lods
mov
push
xchg
in
loopne
popa
cmp
jne
pop
xchg
jge
mov
adc
mov
mov
xor
xor
leave
pop
movsb
jnp
lods
push
jns
inc
mov
xor
push
sub
pop
sub
das
ret
call
pop
sarb
cmp
fists
and
inc
ljmp
inc
lret
fcmovbe
xchg
push
shrb
sub
loop
loop
push
jmp
push
sbb
and
das
sbb
adc
add
addr16
mov
dec
sub
hlt
pushf
xchg
in
push
test
adcb
mov
jg
or
sbb
imul
bound
shlb
xor
mov
inc
cltd
dec
sub
icebp
sbb
gs
jg
or
mov
cmp
loopne
inc
inc
ds
or
orl
mov
enter
sbb
fistps
push
and
fidivrs
cmp
pop
fs
sub
inc
lret
iret
push
test
insl
popa
pop
rclb
aaa
imul
add
xlat
fmull
mov
and
icebp
push
sub
lcall
mov
adc
mov
jmp
cltd
fsubp
enter
sub
call
push
in
add
scas
int
cmc
inc
mov
das
fs
shrb
and
fsubs
insb
ljmp
mov
sub
mov
shl
in
cmp
lret
adc
je
or
jae
and
push
mov
cmp
aam
push
dec
mov
stc
cmp
inc
repz
inc
adc
roll
inc
movsb
push
test
mov
push
fldl
add
stos
loope
iret
sub
out
sub
std
mov
mov
or
les
arpl
mov
mov
in
mov
sub
lcall
push
andb
stos
aam
test
sub
cs
or
mov
xchg
inc
stos
mov
push
pushf
pop
inc
repz
imul
out
adc
lds
and
in
inc
pop
mov
cmp
leave
cmc
test
add
sbb
mov
inc
lods
shrl
sbbb
add
mov
mov
aad
xchg
pop
rcll
sbb
and
lods
mov
scas
popa
and
pop
dec
insb
aam
fcoms
adc
and
mov
mov
mov
add
loope
aam
loope
int
jo
inc
ljmp
and
adc
adc
mov
mov
ljmp
xchg
shlb
aad
adc
rcrb
mov
inc
xchg
filds
outsl
or
fwait
pop
jne
lret
jg
lock
lods
push
push
and
test
xchg
cmpsb
dec
add
push
jbe
jle
clc
or
xor
popf
add
inc
cli
mov
or
mov
pop
scas
mov
sbb
xlat
adc
test
in
inc
outsl
fsubrl
pop
inc
loope
add
popf
outsl
pop
test
cltd
cmp
xchg
or
fnsave
nop
sbb
xchg
cli
add
es
in
xchg
loope
outsb
rolb
in
dec
in
je
mov
xchg
push
add
cmpsl
test
sub
lods
xchg
ljmp
pop
sbb
adc
ss
push
dec
pop
mov
mov
lds
ljmp
ds
cmpsl
pop
js
out
fadds
xor
jns
loop
mov
dec
mov
adc
lcall
dec
cli
pop
push
sarb
test
imul
sbb
cmc
loop
icebp
movsl
or
and
and
inc
xchg
mov
adc
in
inc
xlat
xchg
dec
rclb
adcl
xchg
mov
ja
icebp
stos
imul
clc
insb
push
loope
inc
pop
push
xor
push
push
mov
fcomps
mov
gs
push
push
jae
and
cmp
inc
movsl
ja
mov
rol
dec
loop
inc
adc
or
sbb
inc
aad
mov
pop
daa
out
sahf
push
in
cmc
shll
xchg
lcall
loope
xor
dec
cmpsl
popl
jle
call
repz
and
das
sbb
movsl
mov
out
inc
hlt
jbe
cmpsl
and
and
call
or
mov
cmc
xor
push
test
pop
stos
mov
pop
dec
dec
fisubrs
cmp
test
fnsetpm(287
adc
mov
push
pop
adc
loopne
stos
stos
adc
dec
daa
add
mov
imulb
and
jg
repnz
adc
dec
xor
inc
xchg
push
pop
mov
lahf
push
pop
into
aad
cltd
xchg
cmp
test
cwtl
cwtl
out
mov
imul
push
lock
mov
mov
js
pop
sbb
sbb
test
ret
inc
or
inc
data16
das
xchg
fildl
addr16
mov
ds
stos
lods
or
out
scas
rorl
imul
pop
dec
adc
movsb
out
outsl
pop
fs
push
mov
push
mov
mov
lret
test
cltd
inc
mov
pop
xchg
dec
sub
cmc
cwtl
mov
adc
fstpt
cmc
jge
test
xor
dec
push
inc
or
adc
loope
pop
xor
xor
scas
pop
pop
mov
inc
jns
fildl
and
andb
jae
insb
push
mov
xchg
sub
scas
xlat
dec
imul
sub
pop
mov
in
sbb
jecxz
xor
sahf
dec
fistps
push
test
pusha
mov
bound
out
cltd
push
add
add
pop
xchg
lcall
inc
push
add
push
xor
jmp
cwtl
js
xchg
jb
xor
mov
and
push
jmp
popf
dec
push
enter
daa
rorb
xor
xchg
loopne
aam
dec
pop
cld
xchg
scas
cmc
cmp
outsl
in
mov
sub
push
xor
mov
in
out
sub
int
mov
adc
fninit
and
sub
cmpsl
add
cmp
mov
scas
cmc
cltd
inc
lds
fisubrl
push
xchg
xchg
in
push
mov
cmp
mov
shl
cmp
push
pop
adc
rorb
pop
xchg
inc
mov
add
pop
add
inc
push
addr16
sbb
mov
js
sti
mov
and
sub
push
int3
xor
add
das
jmp
dec
sbb
sub
cmc
mov
push
in
rorl
mov
inc
jle
mov
dec
dec
push
pop
sbb
mov
popa
push
adc
fdivl
imul
jecxz
pop
inc
mov
add
fsubs
lods
in
outsb
mov
pop
mov
aad
sti
cli
ret
test
pop
stos
insb
add
testl
arpl
stc
in
push
inc
scas
adc
pop
jecxz
inc
imul
fsubl
push
pop
out
inc
outsl
or
negl
inc
push
sbb
jecxz
jg
and
aaa
mov
outsb
cmp
test
mov
inc
popf
jg
dec
bound
jl
jp
lods
adc
cli
lret
and
pop
mov
mulb
inc
and
sbb
xlat
fldl
aas
or
dec
shlb
data16
inc
mov
xchg
push
inc
cmp
loope
rorb
mov
stos
sbb
mov
xchg
aas
xchg
jmp
add
je
mov
sarl
push
lods
cmpsb
add
jne
loop,pt
cltd
or
dec
sub
mov
retw
mov
popa
js
lea
mov
test
test
sub
dec
mov
adc
dec
mov
mov
and
jns
mov
and
mov
enter
push
repnz
cmpsl
std
fsub
data16
add
push
jo
inc
das
mov
scas
push
cmp
and
test
xlat
sahf
mov
add
movsl
inc
insl
mov
sbb
push
push
inc
addr16
cltd
jmp
out
sub
jne
std
lods
mov
lea
xchg
lods
insb
inc
fnstenv
rcrl
ss
out
fsqrt
add
mov
mov
dec
fs
or
push
add
mov
std
add
push
pop
adc
shr
jecxz
inc
ds
cltd
push
or
adc
int3
or
cmpsb
incl
cmpsb
inc
lea
lods
aad
arpl
sbb
aam
mov
stos
sarb
subb
pop
add
ss
imul
dec
inc
cmpsb
inc
sbb
hlt
mov
mov
mov
xchg
std
push
dec
jp
hlt
cmc
test
insb
pop
imul
and
addr16
xlat
imull
arpl
or
rclb
add
popa
mov
gs
test
iret
fadd
orl
inc
dec
stc
mov
mov
stos
cli
call
push
movsl
push
jmp
mov
push
ss
xor
inc
add
adc
pop
mov
pop
addr16
mov
movb
cmovb
jmp
inc
mov
mov
push
sbb
dec
ljmp
and
movsl
mov
orb
sbb
loope
leave
adc
addr16
repz
outsb
mov
xchg
sub
mov
jo
jl
test
test
inc
lahf
fimuls
out
sbb
insb
jg
mov
test
inc
adc
dec
ja
icebp
push
xchg
aam
test
je
jb
outsb
subb
dec
xchg
dec
push
mov
and
sti
mov
mov
stos
inc
cmp
sub
sti
push
outsl
sub
sahf
fsubrs
arpl
jle
les
filds
push
call
ja
out
leave
std
jbe
in
or
xor
fisubs
sub
sbb
add
pop
pop
cld
cmp
mov
sub
xchg
in
inc
or
jecxz
add
scas
xor
addr16
xchg
and
jb
mov
aas
sub
and
cs
test
sbb
movsl
push
inc
sbb
ljmp
jmp
mov
xchg
jge
xlat
jns
lods
inc
mov
mov
jl
pop
movsb
insb
lea
arpl
sbb
mov
inc
test
sarl
popa
jb
mov
scas
and
pop
mov
dec
sbb
test
scas
sub
pop
test
fimuls
aas
cmp
push
outsl
scas
pop
xchg
ja
xchg
sub
mov
imul
and
sub
iret
sbb
jmp
adc
push
in
mov
xchg
dec
leave
adc
sbb
adc
xchg
or
shlb
mov
jmp
adc
sub
jno
test
sbb
push
inc
pop
jg
push
push
mov
cltd
cwtl
pop
out
xor
sub
push
xchg
jbe
leave
add
sbb
jns
dec
sub
dec
push
jl
or
add
adc
decl
xchg
inc
jge
imul
rclb
inc
jne
pushf
lcall
loopne
sub
cwtl
mov
loope
subb
nop
adc
push
inc
repz
inc
lods
cmc
mov
adc
adc
inc
outsb
frstor
push
ljmp
sbb
mov
cmp
xchg
jge
enter
fisubrs
inc
fs
inc
pop
xchg
stos
scas
cmc
aam
fld
xchg
inc
rorl
psrlw
pop
adc
flds
das
jae
scas
mov
mov
and
or
and
out
push
xchg
and
pusha
xor
mov
addl
scas
xlat
icebp
push
out
inc
or
inc
push
cs
sbb
and
mov
movsl
jl
scas
loopne
scas
pop
repz
into
mov
or
aad
push
fdivl
jno
insl
mov
xor
lahf
adc
imull
mov
imul
push
inc
cmp
mov
mov
pop
xor
ret
jecxz
popf
push
xor
mov
in
mov
pushf
xchg
jg
sub
loopne
push
mov
sub
push
sbb
mov
cmc
sbb
xor
inc
and
pop
jecxz
cmpb
roll
jb
ret
push
sbb
aam
pop
sbb
aad
ret
iret
dec
jae
jp
movsb
repz
shrb
add
arpl
scas
into
orps
pushf
dec
das
adc
pop
cmp
scas
insl
jge
addr16
in
testb
push
fsubl
daa
push
or
and
stos
mov
pop
out
adc
mov
xor
jne
inc
dec
xchg
addl
or
mov
or
pop
dec
add
xor
push
inc
xchg
lret
popa
adc
cmp
xor
loope
and
cmpsb
cmpsb
push
xor
insb
js
dec
imul
ds
jg
stos
out
sbb
loope
sahf
mov
sbb
repz
jo
mov
push
lods
push
adc
or
xchg
scas
jmp
add
pop
js
insb
in
inc
or
mov
iret
jne
loope
cmpsl
scas
jbe
test
jge
mov
xor
mov
int
or
in
xor
mov
fists
insb
adc
adc
pop
addr16
sub
pusha
mov
rclb
jg
pop
dec
cld
mov
mov
jg
popf
arpl
pop
aad
in
int
ret
or
jl
mov
pop
aas
aas
push
add
test
xor
xor
push
push
ds
xchg
inc
jle
sub
sub
jg
mov
push
js
and
adc
fsubrs
mov
mov
sbb
cs
and
jo
ret
inc
sub
xchg
mov
loop
add
loopne
je
testl
cmp
pop
std
cwtl
ljmp
leave
mov
call
sarb
jae
mov
cmp
mov
push
mov
stos
popw
push
push
mov
mov
mov
sahf
pushl
xchg
inc
iret
les
repnz
jg
mov
popa
mov
rclb
test
mov
stos
lret
xchg
push
pop
xor
push
std
in
pop
adc
int3
aas
mov
add
push
jo
inc
inc
shlb
mov
mov
insl
lea
or
sti
and
jecxz
push
in
mov
int3
loope
pushf
xor
dec
and
shr
pop
pop
mov
out
data16
xchg
jns
xor
fstpt
in
xor
lret
test
inc
pop
cmp
pop
jle
pop
sbb
mov
inc
xchg
mov
js
dec
mov
fnsave
bnd
inc
daa
std
lahf
push
mov
jl
push
mov
dec
mov
loop
popa
jp
pushf
sbb
sbb
pop
sbb
dec
jae
and
mov
inc
daa
adc
int
xor
inc
adcb
or
jl
mov
out
fs
in
mov
loopne
add
addr16
daa
mov
ljmp
sub
sbb
rcrb
jecxz
adc
adc
inc
loope
test
shlb
mov
mov
dec
outsb
out
out
cltd
out
push
sub
dec
faddl
je
lods
cmp
push
and
shlb
xor
iret
shlb
or
mov
or
sub
dec
mov
dec
popf
insl
mov
loop
loopne
hlt
xlat
push
ret
movsl
sbb
push
nop
xchg
or
movsl
clc
cmp
pop
jp
sbb
push
or
aas
cli
movsb
cmpsl
add
fisttps
mov
imul
mov
inc
imul
icebp
ja
lret
mov
xchg
js
adc
or
aaa
push
sub
mov
mov
and
shl
das
push
loopne
mov
cmp
xchg
pop
lods
jecxz
push
sub
mov
mov
xor
ret
rorl
cmp
push
loopne
daa
je
jmp
mov
add
lret
xchg
insb
popa
xchg
mov
imul
scas
push
scas
xchg
rcrb
addr16
fwait
adc
sahf
ljmp
or
inc
xor
xor
hlt
dec
pop
popa
adc
and
adc
xor
mov
test
add
dec
and
dec
int
pop
sbb
mov
dec
shlb
push
jmp
shrb
arpl
dec
mov
pop
cmc
push
loopne
pop
icebp
hlt
adc
add
dec
sub
mov
adc
push
and
cmp
loopne
cli
xchg
and
outsb
mov
mov
jae
cli
xchg
mov
xchg
mov
idiv
xchg
sbb
ret
loopne
inc
or
mov
out
in
sbb
push
pop
xchg
add
push
sbb
idivl
sub
repz
and
xor
pop
and
sarb
les
mov
lods
popf
jge
leave
xorb
mov
fs
fnstcw
outsb
or
sub
jb
mov
pushf
and
add
dec
bound
pop
cmp
inc
scas
adc
popa
adc
pushf
mov
icebp
shlb
inc
ja
sub
dec
cli
mov
cmpb
mov
xchg
clc
test
xor
adc
sbb
and
mov
xor
adc
inc
push
xchg
mov
sahf
and
mov
fiadds
xor
inc
rorb
std
into
jp
pop
pop
pusha
mov
mov
insb
mov
push
or
arpl
inc
das
xor
mov
dec
jge
xchg
data16
mov
rorl
push
mov
stc
cli
sbb
outsb
inc
inc
inc
cmp
loopne
dec
mov
cmpsl
inc
in
pop
icebp
push
cmp
jle
dec
pusha
fsub
cmp
outsl
push
inc
push
and
push
cs
idivb
dec
enter
rolb
lock
outsl
xchg
adc
sub
mov
push
arpl
jnp
lods
xor
or
push
cmpsl
mov
push
cmp
out
mov
cmc
inc
add
add
loopne
test
mov
and
pop
rcrb
jae
add
mov
out
sbb
cmpsl
out
mov
jecxz
ret
or
xchg
cmpb
outsl
test
movsb
xchg
or
mov
cwtl
sahf
adc
mov
stos
mov
push
sub
fs
and
pop
or
nop
or
push
scas
cmp
insl
loop
cmovae
dec
sbb
add
loopne
cwtl
ja
rcrb
pop
sub
xchg
ficompl
mov
int3
arpl
pop
push
scas
mov
push
mov
out
inc
nop
and
xlat
pusha
xchg
push
pop
mov
mov
cmpsl
shll
and
adc
sarl
jmp
test
loop
xor
mov
jmp
fsts
fcoml
icebp
mov
pop
jg
enter
shrl
inc
sub
rorb
or
cmp
cli
lods
pop
cmp
iret
jno
test
out
sbb
mov
lods
xor
ficoml
fs
inc
in
inc
gs
loopne
push
sbb
movsb
iret
negb
lcall
push
xchg
jp
xchg
push
push
lds
xchg
inc
imul
push
inc
push
aam
fisttps
inc
loope
mov
adc
aas
pop
lret
scas
mov
mov
fnsave
shl
lock
push
fildll
push
in
in
pop
loop
mov
testl
inc
pop
dec
mov
shr
sub
mov
jnp
mov
push
enter
in
test
in
lods
cmp
push
jmp
std
xchg
jge
jg
test
xlat
cmp
test
cmc
inc
mov
pop
and
push
jmp
cmp
scas
popa
mov
push
jecxz
aaa
sahf
jmp
or
pop
mov
popa
gs
into
pop
popa
pop
decb
rol
fldenv
sub
lods
jns
test
cltd
inc
andb
addr16
pop
enter
in
ljmp
cmp
lods
outsb
fadd
hlt
adc
in
mov
repnz
scas
pusha
adc
sub
fwait
popf
hlt
lock
push
popa
push
imul
sub
mov
movsb
add
ljmp
mov
xchg
adc
mov
cwtl
out
push
bsf
mov
imul
inc
and
rcrb
rolb
or
pop
loope
pop
push
notb
push
pop
adc
fldl
lods
cmc
mov
das
fxch
lods
jecxz
push
jo
out
inc
fistl
add
sti
mov
xor
cmp
cmpsb
push
loopne
test
add
addl
outsb
inc
mov
call
inc
dec
jo
mov
dec
mov
cltd
sub
pusha
jecxz
shrb
test
inc
lock
divl
sbb
popf
mov
in
mov
shl
mov
sub
push
xor
add
mov
ja
and
mov
cltd
fsubs
cltd
aam
outsb
inc
push
lods
pop
fdivs
sbb
adc
inc
mov
std
in
lods
cmp
or
out
dec
jmp
iret
xchg
cmc
stc
cmp
cs
cmp
push
hlt
inc
xor
sub
mov
pop
in
or
mov
jecxz
fucomi
call
xlat
sub
sbb
addr16
ss
pop
sbb
pushf
fsubrp
dec
xchg
mov
fld
data16
lcall
inc
arpl
xor
fidivrl
cmpl
sbb
jmp
imul
icebp
inc
push
or
cmp
ret
fcomps
loope
dec
sub
in
jno
pusha
loope
and
jmp
and
outsl
sub
pop
mov
xchg
outsb
mov
adcb
pop
out
inc
pop
push
push
lret
and
insb
shlb
cmp
popa
sbbb
ret
out
jg
rorl
xorl
and
mov
pop
mov
shl
xor
xchg
xchg
lock
jge
sub
xor
mov
cmovs
mov
inc
imull
outsb
pop
aad
stos
mov
hlt
sbb
test
inc
cmpsl
push
sub
dec
inc
mov
xor
loope
xor
jge
lcall
or
xchg
dec
stc
mov
out
and
sbb
xchg
push
add
push
xor
adc
push
push
pop
outsl
test
xchg
js
arpl
inc
imul
mov
cld
int3
daa
adc
fidivl
dec
pop
out
fs
call
rolb
mov
filds
and
ret
mov
lcall
test
mov
mov
jge
sbb
adc
int
sbb
loope
xlat
les
lods
xchg
and
pusha
pop
movsb
insb
mov
dec
push
test
xchg
adc
xchg
sbb
dec
push
hlt
mov
popa
inc
mov
mov
cwtl
outsb
scas
mov
inc
adcb
inc
adc
pop
ss
in
xchg
xchg
cmpl
dec
xchg
stos
fadds
inc
inc
outsb
mov
js
push
negl
ret
jg
mov
daa
fmuls
mov
push
es
outsb
mov
fs
shlb
int3
movsl
sub
mov
adc
mov
scas
shlb
mov
jge
pop
xchg
push
popa
mov
sbb
outsb
aam
mov
lret
jle
pushf
loopne
test
cmp
mov
arpl
pusha
pop
loope
scas
in
clc
mov
jge
xchg
xchg
cmc
aaa
jle
loope
in
cltd
jp
mov
or
or
adc
add
popf
pop
jge
enter
stc
cmpsl
inc
xlat
adc
push
inc
jl
sbbl
jp
mov
cmp
xorl
lcall
dec
lea
inc
jl
adc
xor
mov
js
rolb
mov
fcomps
movsl
mov
mov
xchg
popa
and
int
lock
popa
cli
mov
push
cmpsl
in
jmp
sarb
mov
xor
popa
das
pop
lds
mov
jle
and
je
cli
mov
loopne
add
jns
adc
mov
movsb
cli
or
push
pop
xor
sbb
bound
fisubrl
pop
faddl
mov
jge
ds
stc
fs
ss
and
xchg
call
inc
and
pop
stos
rcr
gs
inc
int
addr16
icebp
jecxz
cltd
in
mov
cmp
stos
xor
leave
mov
movsb
inc
imul
in
and
scas
cmp
jg
jo
andb
dec
mov
xor
lock
stc
cs
scas
push
xchg
cmp
xchg
mov
jno
pop
push
movsb
adc
mov
lcall
dec
push
adc
xchg
ljmp
outsl
mov
js
adc
add
sarb
jne
lcall
out
stos
ss
dec
mov
add
iret
jne
mov
mov
cwtl
and
mov
add
jmp
and
dec
inc
sub
cmpsl
insb
push
outsb
sub
pusha
mov
and
lods
call
mov
push
inc
adc
push
movb
test
bound
pop
or
lds
push
jge
and
or
mov
xchg
lret
sbb
cmp
shl
mov
rorb
int
xor
add
jl
orb
jb
lods
xor
pop
mov
and
hlt
in
ret
int3
and
arpl
and
sbb
cltd
pop
mov
ljmp
xchg
and
inc
xchg
les
out
scas
push
loopne
inc
mov
filds
jl
mov
add
pop
loope
xchg
push
push
sti
adc
add
das
ljmp
ret
test
sub
xor
mov
inc
pop
mov
or
push
or
fs
fdivs
mov
xchg
push
aas
mov
or
mov
mov
rcrb
add
sbb
dec
lcall
sub
js
or
out
test
sbbb
inc
dec
mov
dec
jnp
jl
cwtl
out
jb
push
movsb
dec
popa
dec
test
xor
sub
fchs
dec
adc
stos
mov
jecxz
or
enter
lret
or
xchg
mov
inc
and
cli
xchg
mov
enter
outsb
in
addr16
pop
call
mov
sbb
mov
inc
add
dec
scas
ret
adc
inc
pop
push
cltd
mov
xchg
cmp
xchg
push
call
add
outsl
imul
dec
data16
out
aam
add
addr16
jge
or
jg
pushf
sbb
add
pop
scas
pusha
jp
test
xchg
push
testb
push
dec
daa
mov
sar
dec
pop
sbb
xchg
sub
fiadds
jle
das
mov
fsubrs
js
pop
roll
inc
imull
lcall
mov
adcb
adc
pop
sub
inc
mov
enter
inc
in
inc
loope
xchg
and
popa
dec
inc
outsl
mov
rep
mov
enter
sub
mov
adc
aaa
jnp
inc
mov
movsl
fcmovnb
int3
and
inc
inc
fdivl
or
lods
sub
fs
jbe
or
jnp
sub
popf
lahf
test
aam
inc
jge
and
pop
fistpll
arpl
mov
inc
sarb
js
jnp
push
cmp
pop
mov
pop
inc
imul
cltd
pushf
hlt
push
mov
shr
pop
movsl
imul
push
js
je
sub
orb
pop
cs
mov
call
shrb
fs
call
xlat
xchg
mov
out
or
loope
test
jle
mov
in
jge
xchg
fucomi
popf
inc
sub
test
or
push
int
test
pop
pop
inc
int3
lock
dec
jge
test
mov
and
xchg
fidivl
rclb
mov
cmp
inc
stos
jle
test
aaa
movsb
mov
stc
insb
cmp
mov
mov
arpl
adc
rol
cmc
int3
fmuls
dec
adc
and
popf
mov
dec
mov
es
cmp
cmp
sahf
repz
iret
jmp
xorl
inc
fwait
vpunpcklqdq
adc
fidivl
inc
jl
in
or
fcmovne
fildll
jg
lock
sahf
mov
fadds
fidivrl
xor
sub
and
fidivrl
mov
iret
xchg
sub
aas
dec
rcll
cmpsb
push
test
mov
sbb
rorl
cmp
fs
ljmp
adcl
mov
xor
aaa
arpl
add
fs
aad
aas
mov
clc
rcl
adc
sbb
rolb
and
outsb
mov
daa
stos
shl
pop
push
andb
add
push
call
js
fs
pop
ja
sbb
push
cwtl
sub
inc
pop
repnz
popa
imul
fs
cwtl
xor
jnp
test
test
xchg
imul
sbb
adc
and
clc
call
fdivs
loopne
mov
fs
pushf
aaa
cmpb
cmp
inc
xchg
stc
dec
aaa
or
push
pop
orb
cmp
pop
push
inc
mov
or
dec
nop
dec
mov
pop
xchg
negl
inc
stos
rolb
je
in
inc
lahf
rclb
push
jle
push
or
mov
jge
inc
mov
xor
rcl
into
inc
sbb
or
sbb
les
inc
xor
ljmp
pop
test
orl
push
mov
fisttps
mov
cltd
jo
inc
jae
jbe
ja
stos
dec
and
jmp
dec
pushf
xchg
and
insb
in
sub
fs
lods
xor
sub
xchg
adc
cltd
pop
jb
xchg
into
or
jl
push
inc
add
mov
mov
imul
xorl
dec
sub
sub
dec
push
sbb
xor
inc
rcr
pop
mov
subl
ds
adc
add
std
jg
popl
mov
cli
fsubs
loopne
in
pop
in
push
mov
rorl
push
call
push
stos
pop
mov
in
sub
jb
ja
cwtl
sbb
sub
sub
pop
inc
outsb
add
inc
fldenv
jbe
insl
cmp
jne
push
loopne
push
jb
adc
fiadds
or
jecxz
loop
rdtsc
sbb
mov
pop
dec
push
jecxz
inc
push
cmp
inc
iret
int
icebp
and
cwtl
mov
jo
aaa
cltd
mov
jp
push
imul
cwtl
fiaddl
and
pop
call
pop
imul
or
lret
mov
in
sub
arpl
fisttps
loop
in
mov
jg
test
ljmp
jge
stos
push
aas
fldt
inc
mov
and
or
jg
mov
jmp
fwait
stos
jge
jecxz
sbb
aad
cld
lock
push
stc
call
mov
push
pop
imul
sbb
fiaddl
cld
fbld
out
pop
inc
adc
cmpsl
xor
andb
push
inc
mov
pop
out
inc
fdivrp
inc
jnp
xchg
push
and
test
pop
mov
mov
sbb
sbb
into
arpl
mov
mov
and
mov
movsb
lret
jo
push
leave
fidivrs
and
cs
add
jl
jle
inc
in
dec
dec
xchg
mov
mov
ljmp
enter
in
pop
adc
xchg
mov
lcall
daa
cs
xchg
pusha
fcoms
test
loopne
jle
movsl
out
sbb
xor
incb
sub
lahf
imul
and
inc
rcrl
out
add
outsl
or
pushf
ret
and
inc
out
adc
pop
jmp
pop
into
cwtl
out
pop
xor
or
in
push
mov
and
pushf
inc
mov
pop
js
arpl
in
adc
aad
mov
adc
adc
cli
das
arpl
fcmovu
subb
lfs
mov
adc
xchg
popf
loope
sub
inc
cmc
ret
hlt
xor
mov
mov
sbb
inc
jmp
scas
aaa
lahf
mov
sub
fldcw
push
push
mov
pop
shlb
mov
mov
fisubrl
pop
dec
ret
fildll
inc
shll
push
jb
daa
adc
cmp
stc
fs
jmp
test
xchg
test
dec
jle
jbe
jge
mov
outsl
cltd
mov
hlt
call
sbb
mov
sub
in
sahf
jo
cmp
test
out
adc
fbstp
pop
sub
movsl
xchg
sbb
loop
cmc
inc
adc
pushf
test
rcl
xor
pop
je
jge
xor
push
pop
and
ljmp
mov
ficomps
or
call
leave
aaa
pop
hlt
out
sahf
nop
fwait
xchg
inc
aam
pop
rorb
repz
xchg
jle
cltd
inc
xchg
or
jle
jbe
outsl
dec
popf
scas
push
xor
ficoml
cmpsb
xor
xchg
ja
ret
lock
mov
or
push
push
sar
cmp
adc
lret
push
sbb
inc
and
rcr
jle
lds
in
xor
fwait
pop
push
mov
imul
out
adc
sbb
sub
pop
cli
jecxz
push
lods
adc
push
loopne
call
rcrl
adc
std
push
adcl
repz
je
mull
lods
xlat
pushf
loop
test
pop
mov
daa
mov
mov
or
call
arpl
stos
into
outsb
insb
addr16
into
outsl
pop
pop
inc
add
pop
fmuls
popa
pop
cmp
inc
inc
out
jp
mov
cmpsl
xchg
sti
das
aam
lock
es
xchg
push
lods
jb
sub
or
js
popa
adc
scas
inc
and
icebp
lock
popa
popl
inc
test
rorb
clc
adc
and
aas
mov
icebp
push
push
int3
out
xchg
pushl
mov
mov
scas
sti
add
lahf
lret
lret
mov
add
arpl
idivb
mov
mov
mov
push
mov
push
scas
loope
scas
repnz
addb
das
cmpb
mov
pop
cmpsl
dec
clc
or
sub
andb
mov
push
fmull
andb
fbld
cli
scas
xlat
fdivrs
add
lods
jecxz
mov
int
dec
in
fs
xchg
add
outsl
mov
mov
ss
pcmpeqd
loope
ret
sub
mov
outsb
fldl
lcall
mov
loop
popa
inc
mov
imul
lcall
in
lock
out
mov
bound
mov
call
lea
push
xor
inc
xchg
rcrb
mov
xchg
push
call
sub
inc
les
add
lock
cmp
cmc
shrl
jb
push
iret
fmul
lcall
inc
xchg
sub
push
jb
inc
rcr
mov
xchg
aam
test
cmpsl
scas
or
jp
inc
or
pop
shlb
js
and
inc
sbb
popa
add
inc
push
pop
outsl
lahf
pushf
pop
push
scas
mov
popa
std
in
lds
mov
and
cltd
sbb
push
jp
xchg
jo
mov
mov
add
sbb
js
cmp
push
arpl
les
lds
ljmp
ret
cmp
mov
mov
add
sahf
fisttpl
and
mov
push
or
add
enter
xchg
adc
cmp
hlt
out
push
cwtl
mov
mov
push
aad
std
inc
mov
shrb
iret
in
inc
xchg
aam
std
mov
dec
pop
jecxz
xchg
sbbl
mov
mov
pop
stos
lock
mov
mov
pop
push
outsl
dec
push
in
ss
sub
mov
xor
or
mov
outsl
rorl
pop
mov
sub
push
test
jecxz
fadds
cmpsb
sub
dec
cmpsl
scas
adc
mov
jns
pop
ficoms
fcmovb
mov
test
sub
lods
xor
or
xor
mov
outsl
fildl
call
insb
mov
push
imul
mov
push
leave
out
sbb
imul
in
pop
adc
stc
cltd
inc
mov
xchg
sbb
mov
aam
icebp
add
movsb
lods
push
leave
test
rclb
fsubl
or
loope
js
or
sbb
enter
out
or
out
lsl
sub
mov
xor
sub
mov
hlt
iret
stos
jns
mov
ret
scas
shrl
lods
adc
adc
cs
dec
mov
loope
jo
lock
icebp
push
or
sub
push
mov
or
mov
push
push
fdivs
mov
add
jmp
jp
pusha
sbb
in
xchg
push
iret
mov
adc
out
mov
sahf
lea
and
sbb
dec
repnz
mov
xor
push
clc
aam
add
xchg
inc
xor
or
push
into
out
data16
sbb
stos
xchg
jae
mov
loop
stos
lods
test
mov
push
xchg
cmp
pop
out
xlat
js
std
popl
movsb
inc
popa
ficoml
push
mov
mov
push
dec
inc
in
pop
pop
dec
sti
ficoms
inc
mov
repnz
mov
sbbl
jp
jecxz
jb
xchg
sbb
dec
in
push
in
adc
push
mov
daa
xchg
or
jnp
insb
test
cs
mov
sbb
mov
rolb
hlt
mov
lock
negl
cld
shll
push
fistpll
fidivs
loope
pop
inc
in
sti
cmp
xchg
inc
xor
pushl
js
andl
push
test
outsb
js
je
in
test
test
scas
inc
lods
test
movl
or
insl
test
inc
imul
notl
inc
mov
arpl
jae
mov
loope
push
jbe
or
js
pop
dec
xchg
lock
leave
out
mov
sub
out
mov
loopne
xor
mov
pop
cmp
mov
stos
lds
decl
mov
mov
xchg
out
test
shll
push
jae
sub
adc
fcompl
js
int
sbb
out
iret
dec
push
les
loop
xor
jns
xchg
fsub
out
repnz
mov
pop
mov
and
inc
lret
in
push
test
jg
or
dec
adc
mov
call
inc
les
xchg
mov
and
cmp
inc
mov
jle
adc
jge
xchg
xor
loope
mov
lcall
xchg
cmp
sub
inc
jbe
jno
pop
inc
cmp
mov
sub
pushf
jg
leave
cwtl
pop
cltd
jmp
stos
cmp
scas
test
adc
leave
inc
std
bound
hlt
push
and
pop
ret
hlt
jno
orb
xchg
add
mov
orl
fdivl
js
fucomp
nop
addr16
cmpsl
add
mov
ds
inc
or
cld
mov
fs
jnp
loopne
push
pop
add
sbb
mov
jge
sbb
aad
popa
out
push
mov
out
test
push
cltd
cmpsl
in
in
add
or
lock
mov
mov
inc
jb
mov
xor
mov
enter
popa
in
les
dec
gs
or
pop
adc
outsb
outsl
push
cmp
push
jge
push
stos
test
inc
inc
xchg
sbb
dec
jge
scas
je
jg
addr16
adc
addr16
dec
cmp
outsb
out
subl
pop
loopne
jnp
test
add
das
addr16
sbb
adc
bound
jns
fnstcw
jge
inc
add
cmp
rorb
jle
or
and
sbb
in
outsl
lods
add
mov
hlt
cwtl
enter
adc
dec
negl
cld
lahf
hlt
scas
inc
cmp
cmp
and
in
fidivrs
inc
mov
push
rcll
cmp
pushf
rcrb
cmpsl
xlat
add
mov
pop
cld
stos
xor
movsb
das
insb
jb
or
repnz
sbbb
cmp
movsl
dec
inc
outsl
xor
push
fnsave
loop
pusha
fdivrs
pop
sarb
push
lahf
insb
loope
js
jns
push
lret
jle
xor
pop
ljmp
ds
clc
or
pop
cwtl
clc
stos
inc
inc
cmp
std
mov
inc
dec
stc
mov
cmpsb
inc
icebp
inc
cli
jns
pop
mov
inc
and
fistl
sub
pop
mov
fs
or
push
xor
rcrb
adc
sub
mov
fistpll
fdivrl
xor
and
jo
sbb
out
clc
stc
js
movsb
jmp
call
insl
daa
xchg
cli
or
xchg
cmp
adc
mov
push
and
lret
push
cli
js,pn
mov
pop
in
maxss
xchg
or
shrb
test
and
inc
stos
loopne
bound
adc
aaa
and
push
mov
negl
shlb
adc
and
and
lods
ja
gs
es
xchg
sub
push
and
fstpt
mov
je
bound
andb
push
push
movsl
cltd
mov
out
push
push
sub
fcmovu
mov
sbb
icebp
fs
dec
shrl
and
les
bound
cmp
ds
into
add
pop
in
and
lods
xchg
lea
adc
push
daa
iret
inc
and
xchg
lock
movaps
mov
jmp
sbb
adc
push
lret
or
gs
iret
inc
pop
pop
dec
adc
inc
push
and
mov
pop
pop
in
cmp
popa
loope
scas
sbb
push
hlt
jo
cld
pop
roll
in
cwtl
lcall
data16
into
cltd
and
arpl
lods
ficoml
xchg
mov
fstps
mov
push
mov
xchg
lods
bound
mov
cs
push
call
movsl
xchg
mov
push
and
inc
dec
popa
dec
sub
dec
lea
jle
nop
repz
add
push
mov
inc
sbb
faddl
xchg
je
pop
push
fcom
hlt
push
xchg
sahf
mov
ja
scas
ret
lret
pop
xor
push
je
jle
jg
jo
jae
nop
jo
lret
inc
lahf
mov
xlat
add
dec
push
mov
mov
andb
mov
fsubr
dec
popa
push
sbb
jmp
cli
lods
dec
test
aam
pop
add
pop
mov
ss
inc
mov
aam
loope
mov
ljmp
sbb
pop
imul
pop
mov
adc
pop
push
lods
repz
xor
pop
cltd
inc
push
into
aaa
std
shl
add
fdivrl
jbe
mov
push
inc
xchg
sbb
adc
pop
shlb
mov
ret
iret
sahf
pop
mov
inc
mov
pop
pop
mov
jae
rclb
push
jmp
pop
sub
sarb
dec
arpl
jecxz
sbb
das
leave
mov
loopne
mov
inc
pop
pop
idiv
pop
inc
or
and
lahf
xor
xchg
lret
dec
fisubs
inc
pop
in
lods
pushf
mov
nop
or
outsb
jl
adc
popa
inc
das
xchg
push
sahf
inc
xchg
inc
into
daa
push
lahf
mov
pop
sbb
inc
outsb
add
push
ljmp
int3
lret
into
xor
mov
inc
xchg
sahf
in
test
leave
sub
dec
movsl
in
push
jg
pop
dec
rcrb
xor
pop
jmp
scas
repnz
push
orl
cmp
xchg
mov
hlt
mov
pop
test
flds
inc
pop
jge
test
and
mov
jg
scas
leave
push
push
into
and
mov
neg
mov
push
je
lods
and
pop
xchg
fildll
cmc
mov
stos
cmp
scas
cmp
push
lock
in
arpl
mov
sub
add
mov
loopne
push
jmp
push
lods
inc
mov
and
lret
or
popa
mov
jp
shlb
xor
movsl
mov
fsubrs
or
xchg
scas
sub
loop
std
add
fldl
imul
cmp
shll
mov
or
and
or
sub
lock
scas
call
sub
inc
jg
or
push
cld
adc
in
loop
andb
jmp
imul
sahf
sbb
mov
jbe
mov
std
dec
sbb
jo
or
orb
mov
cmp
push
push
pop
sbb
mov
inc
out
test
int3
mov
xlat
gs
cltd
shll
xchg
fimull
das
push
shll
pop
scas
push
jecxz
aam
imul
adc
add
jo
push
push
jp
cmpb
pop
and
xor
cwtl
mov
mov
call
mov
nop
mov
ss
in
mov
popf
fwait
and
push
cwtl
pop
jg
fmuls
xchg
mov
pusha
or
mov
sub
pop
lock
shlb
adc
dec
je
mov
fimull
imul
and
pop
add
lea
or
jl
aad
mov
movsb
dec
sub
das
lock
xor
add
lea
pop
js
xor
dec
in
mov
arpl
and
sarl
js
xor
mov
inc
xchg
in
in
mov
adc
jae
int
test
cmp
xorl
inc
cwtl
lcall
idivl
inc
lcall
cwtl
addl
mov
push
lock
loopne
push
and
lds
sbb
jl
jb
call
andl
scas
push
inc
adc
mov
adc
xchg
sub
adc
sub
in
pop
nop
inc
test
push
push
mov
es
cld
stos
loop
aad
ss
mov
stos
jl
fs
inc
sti
push
cmpsb
mov
ljmp
dec
jge
outsb
mov
imul
icebp
adc
pusha
sub
inc
pop
cmc
fiaddl
iret
push
sarb
fmull
out
ds
adc
push
pop
jmp
in
pop
add
aad
test
lods
pop
loopne
bound
jl
sbb
pop
push
fcmove
sub
insb
pop
push
jle
rorb
pop
iret
push
inc
pushl
pushf
sbb
adc
or
sahf
mov
jnp
pop
sub
mov
lock
andb
sar
mov
ss
scas
fsubr
and
xchg
call
loope
or
repz
int
jle
inc
cmp
mov
cmp
dec
test
and
mov
sbb
call
sub
inc
sbb
imul
dec
mov
or
push
jmp
insb
mov
sbb
in
pop
shrb
scas
and
mov
or
mov
jnp
pop
sarb
inc
int
mov
inc
mov
dec
ljmp
int
iret
ds
mov
sbb
out
dec
lret
mov
out
outsb
rcl
jns
inc
gs
inc
in
cld
push
test
lock
leave
mov
push
leave
pop
sbb
adc
outsb
movsb
in
test
cli
sbb
arpl
cmpsl
clc
hlt
pop
out
addr16
jecxz
out
orb
mov
add
hlt
dec
addr16
sbb
push
cmp
dec
add
dec
les
stos
arpl
popa
push
ja
cmp
inc
pushf
and
je
pop
lds
sbb
or
mov
mov
popa
movsb
jge
or
xor
push
idiv
xor
mov
sub
cltd
cs
lcall
jne
sti
imul
pop
jecxz
push
pop
push
dec
xchg
ret
and
scas
imul
hlt
adc
sbb
jae
mov
lret
leave
sar
cmpsl
nop
imul
mov
shl
int
xchg
add
cs
scas
pop
push
adc
jmp
fyl2x
dec
notb
imul
hlt
push
or
xchg
dec
test
sub
xor
lahf
push
das
push
cli
test
call
mov
jns
lods
pusha
aas
pop
data16
push
in
push
jecxz
jnp
popa
fs
je
int
jp
mov
push
out
adc
ljmp
data16
fs
mov
or
mov
lock
push
aaa
mov
inc
movsl
mov
test
xor
mov
lods
pop
jg
fnstcw
xchg
push
sbb
dec
mov
dec
rcrl
mov
sub
sbb
stc
jmp
jl
inc
inc
test
pop
lods
jp
jge
aad
xchg
popa
ljmp
mov
loop
push
int
xchg
in
filds
or
fcompl
cmp
outsb
scas
push
fucomi
push
js
xor
loope
aad
inc
loopne
cwtl
xadd
ja
xlat
andl
int3
arpl
sub
sbb
call
mov
lcall
out
jb
and
insl
push
lcall
jl
add
sbb
cs
addr16
sbb
or
dec
mov
push
aas
shll
sub
push
pop
mov
mov
lea
cmpsl
or
sub
mov
push
sbb
or
jge
jp
mov
aad
cwtl
mov
movsb
aad
test
push
loope
pushf
aaa
sub
add
push
mov
iret
cltd
inc
add
pop
test
pop
push
mov
fadd
clc
popa
push
mov
mov
mov
out
mov
lds
inc
mov
push
jb
jecxz
pop
jnp
insl
push
and
sub
es
mov
pop
mov
shll
test
shll
das
out
mov
lcall
std
daa
jge
dec
popf
adc
add
add
xlat
and
pop
repz
cmp
cmp
fidivs
mov
xchg
iret
pop
mov
or
cmp
push
scas
mov
pop
add
push
call
push
enter
mov
push
inc
cli
repnz
dec
fisttpl
clc
xchg
mov
push
loope
aaa
popa
adc
mov
add
jnp
repnz
fdivr
fst
test
dec
js
sarb
jecxz
xor
data16
std
scas
push
and
rorb
sti
aad
sub
popa
and
scas
test
ret
pop
in
movsl
add
pop
hlt
adc
inc
jle
dec
mov
test
addr16
push
xchg
jge
fdivrs
les
cmp
cmp
test
scas
jg
and
xchg
mov
mov
shlb
js
or
or
add
inc
mov
jl
outsl
sub
dec
inc
mov
out
inc
and
inc
test
sarb
in
dec
push
push
lret
into
mov
pop
dec
and
js
call
adc
in
hlt
popa
add
cli
xchg
mov
outsb
ds
hlt
pop
and
sub
inc
arpl
fiaddl
adc
add
fcoml
mov
cli
pop
xchg
jne
movsl
and
pop
bnd
fs
pop
push
mov
loopne
outsb
out
ljmp
sbb
lea
or
jle
dec
call
fdivs
cmp
and
push
cwtl
jle
mov
xor
daa
inc
dec
sub
fisubrl
insb
shlb
cmpsl
das
dec
xorb
mov
jge
out
pop
jb
pop
sbb
pop
xor
addb
leave
jb
movsb
lods
jb
fildl
les
cmp
ss
inc
xor
xor
cmp
shrb
sbb
xor
add
pop
pusha
out
mov
sub
mov
dec
inc
adc
cwtl
shlb
push
add
push
fcoml
addr16
test
daa
sbb
fwait
aas
push
sbb
fildll
pop
xchg
inc
pop
fisubs
push
add
jmp
pop
fisttps
xrelease
xchg
sub
jg
scas
mov
cmp
hlt
movl
adc
clc
pop
das
inc
test
push
loopne
mov
jmp
adc
mov
push
sub
or
fidivrl
inc
adc
dec
inc
push
imull
sub
std
aam
xchg
inc
mov
pop
mov
jbe
sbb
ret
push
and
cmpsb
test
cltd
xor
ljmp
fbld
adc
mov
leave
in
mov
sub
adc
pop
scas
push
inc
test
jp
loopne
shll
mov
fs
cmp
in
out
fs
mov
enter
rorl
iret
inc
cmpb
test
mov
add
std
cmp
mov
gs
iret
xchg
sub
inc
sbb
arpl
test
jge
pop
mov
jnp
pop
aad
cltd
in
lret
outsb
js
adc
lods
xor
call
xchg
loopne
dec
stc
stc
pop
out
push
add
pop
fs
adc
into
mov
sbb
xor
aam
out
xor
js
inc
mov
pop
gs
pop
sub
mov
fimuls
add
loopne
mov
jnp
inc
or
rolb
cmc
cmp
jnp
imul
sub
test
pop
mov
inc
and
inc
inc
xchg
mov
and
jg
add
jle
jl
mov
mov
add
stos
xor
inc
or
and
rcrb
in
jb
rclb
call
js
ljmp
mov
jb
fadds
inc
pop
push
and
int3
cwtl
pop
inc
in
imul
lods
ret
out
loope
imul
push
sbbb
inc
push
fwait
mov
pop
xor
popf
adcb
lret
jae
or
mov
mov
stos
push
pop
sarb
out
cmp
inc
and
pop
ljmp
and
push
push
and
inc
andb
push
lea
push
test
je
imul
pusha
test
dec
xor
imul
inc
jb
int
sbb
sub
loop
mov
sbb
push
js
pusha
in
test
dec
cmp
add
mov
shl
mov
jbe
shrl
into
fsubs
sbb
cmp
popa
test
sbb
push
adc
cmp
inc
sbb
bound
call
pusha
xlat
push
sbb
inc
adcb
mov
inc
or
out
inc
test
xchg
sub
or
imul
or
lret
adc
inc
cmpsl
push
adcl
outsl
jg
lock
fistpll
imul
sbb
scas
rorl
fs
xchg
mov
jl
sub
inc
dec
xchg
mov
add
xor
and
cli
jge
aad
jp
inc
test
sbb
test
mov
sbb
test
pop
fisttps
test
daa
aam
add
adc
push
sbb
sub
rcrb
and
sub
lods
lcall
enter
pop
fsubl
mov
inc
adc
sub
dec
inc
outsb
leave
mov
sub
cmp
pop
and
loop
and
adc
cld
mov
addb
push
cs
add
xlat
and
icebp
and
jge
loopne
int
cmc
sub
jp
mov
data16
jae
inc
mov
sbb
push
mov
add
dec
clc
or
rol
shlb
pop
adc
xchg
sbb
cmpsb
sub
xor
mov
mov
cmp
inc
xor
mov
fimuls
lods
enter
pop
push
es
jp
imul
mov
lock
mov
sarb
push
and
out
lret
rclb
ss
rorl
inc
mov
xchg
pop
pop
sar
aad
xchg
ljmp
sub
dec
in
les
dec
insb
sar
dec
mov
in
mov
or
jbe
sbb
mov
test
xor
arpl
add
loope
inc
mov
call
mov
notl
out
mov
push
subl
mov
arpl
test
es
mov
cltd
imul
cmpsl
lahf
dec
fnstcw
or
lods
xlat
adc
call
dec
lods
sbb
pop
in
dec
mov
test
lret
dec
mov
inc
lcall
and
adc
test
sbb
adc
mov
cmp
stos
dec
inc
dec
jne
inc
jp
mov
pop
adc
or
in
inc
jge
bound
pop
cmc
mov
mov
lods
frstor
or
rorb
push
cs
sbbl
ljmp
inc
xor
mov
inc
mov
mov
xlat
filds
xor
stos
jmp
imul
ret
aaa
mov
aad
jecxz
sar
mov
mov
add
push
push
adc
loop
movsb
and
cwtl
scas
shrb
icebp
out
test
mov
inc
rcl
loope
lods
or
dec
jns
sub
into
adc
push
push
stos
sub
jns,pt
inc
in
inc
pop
inc
xchg
ret
jg
test
jne
shlb
mov
clc
cmpsb
fnstenv
insb
inc
sbb
cmp
cli
cld
outsb
dec
pop
add
pop
pop
pop
jns
enter
or
es
test
cmpb
inc
popl
jo
pop
shlb
cmp
stos
dec
mov
outsb
sbb
inc
and
xchg
jne
mov
mov
icebp
push
mov
fists
cmp
pop
add
dec
ljmp
inc
outsb
test
fimull
in
scas
pop
dec
mov
push
jle
inc
add
loopne
subl
imul
add
mov
xor
es
mov
leave
lods
cwtl
jp
xchg
nop
lcall
add
sbb
test
imull
in
mov
dec
cli
loope
and
mov
pushf
jle
test
into
test
cltd
push
cmp
rclb
pop
jg
add
mov
fisttpl
mov
bound
jno
cmp
jnp
imul
aaa
stos
pushf
sbb
arpl
scas
mov
fistpl
loopew
push
arpl
je
cmp
cld
faddl
mov
jg
repz
inc
add
add
sbb
adc
lahf
add
mov
test
mov
in
xor
inc
push
mov
inc
pop
out
dec
stos
inc
cmp
loopne
scas
push
or
sbb
in
pop
fsts
loope
nop
and
add
mov
dec
into
addl
mov
sbb
and
shll
in
ljmp
inc
scas
mov
push
push
jnp
negl
out
adc
dec
and
outsb
cmp
inc
es
sub
push
jl
xlat
or
addr16
sbb
test
push
xlat
dec
xchg
add
jmp
mov
pushf
mov
into
xor
adc
inc
xchg
and
imulb
and
dec
stos
mov
dec
loope,pn
rolb
popa
xlat
pop
mov
sbb
jecxz
aaa
aam
popf
xchg
mov
lea
or
inc
xchg
repnz
mov
push
and
je
mov
decb
xchg
push
push
push
outsb
push
or
add
push
gs
mov
fldcw
push
std
enter
out
cmp
cmp
mov
in
inc
pop
mov
jns
and
adc
inc
inc
lret
mov
pop
mov
jb
push
inc
in
xchg
push
jbe
sbb
bound
xchg
loopne
lret
scas
repnz
push
cmpsb
mov
cmpsl
testl
mov
mov
cli
dec
insb
je
add
dec
movsb
andl
loope
jecxz
bound
mov
cmpl
cmc
add
cltd
sbb
push
xchg
cmp
inc
mov
int
fwait
cmc
sbb
hlt
iret
mov
in
xor
insl
sub
mov
dec
cs
xor
push
push
outsl
add
call
sbb
dec
sub
cmc
dec
push
lock
mov
add
mov
jbe
and
hlt
mov
mov
inc
push
popa
adc
jns
sub
out
loope
shlb
lahf
and
sbb
popa
inc
stc
popa
sub
pusha
jmp
js
mov
dec
outsl
jae
adc
pop
sarl
inc
gs
es
xor
or
mov
out
pop
lock
sub
shlb
mov
push
mov
pop
mov
hlt
mov
add
jbe
mov
popf
rolb
mov
inc
fisttps
pop
ss
xchg
inc
and
jle
enter
dec
dec
or
mov
pop
in
push
xor
xor
divb
jmp
test
push
mov
popa
das
adc
cli
mov
jle
cltd
iret
mov
mov
mov
in
mov
ror
pop
hlt
xchg
push
gs
mov
mov
mov
inc
in
int
sub
pop
sub
in
loope
inc
fstpt
in
js
movsl
ljmp
das
lcall
clc
fisubrl
arpl
das
mov
test
adc
in
imul
dec
sbbl
call
icebp
iret
jb
sub
js
mov
xor
fsubrl
out
inc
inc
fisubl
subl
adc
into
inc
adc
mov
sub
sbb
push
enter
add
cmp
mov
mov
mov
inc
shlb
fbld
xor
test
daa
scas
js
xchg
cmp
add
repz
mulb
cmp
adc
ds
in
int3
and
xchg
sub
mov
je
and
lods
adc
jmp
cmp
push
in
cwtl
test
cld
test
inc
fdivrl
pavgb
push
fidivs
mov
xchg
mov
addr16
hlt
jmp
adc
dec
inc
jns
rorb
imul
inc
add
push
je
jg
ljmp
or
jo
jb
inc
sub
xor
jbe
frstor
mov
dec
mov
hlt
pop
adc
jns
sbb
fmuls
inc
addb
xor
not
sbb
jmp
lret
test
mov
ja
cs
cmc
dec
or
jb
gs
je
push
mov
xchg
test
xor
xchg
sub
mov
push
loop
jae
jb
push
xchg
ljmp
push
sub
push
mov
jmp
sub
aam
subb
adc
sbb
xchg
loop
mov
popa
dec
dec
xor
xor
dec
adc
out
ja
popa
aam
call
loopne
pop
inc
cmp
stc
dec
ss
sub
aas
imul
loopne
push
mov
sarb
mov
pop
jp
je
int
push
mov
adc
decb
pop
mov
lret
ljmp
fcoml
jmp
pop
add
mov
lods
outsb
ret
pop
dec
insl
inc
and
stos
inc
mov
and
ds
shl
inc
xchg
roll
loopne
test
ljmp
fnstenv
in
iret
and
lret
jb
nop
mov
dec
mov
mov
or
or
clc
mov
inc
lods
fdivrs
push
in
data16
test
lds
fs
fiadds
push
sub
fwait
dec
sbb
push
mov
jg
js
rcrb
push
inc
adc
sub
out
lret
pop
mov
test
or
in
lahf
fildl
pop
xchg
ljmp
xchg
jecxz
dec
shrl
dec
call
and
pop
and
idivl
pop
call
mov
add
jl
fldt
in
cmp
movsl
mov
fdivr
cld
dec
mov
imul
push
jno
jecxz
sbb
fldt
sbb
inc
and
cmpl
shll
mov
lods
rol
mov
lcall
inc
mov
test
sub
add
add
mov
scas
inc
add
test
add
fs
nop
pop
mov
out
arpl
push
cmp
pop
shl
pop
lods
inc
sub
or
mov
mov
mov
jne
cmp
mov
xor
adc
mov
jbe
aaa
cmc
mov
cmpsb
jge
inc
aaa
adc
xor
jno
push
mov
sub
cmp
mov
jecxz
in
push
inc
cmpsl
sbb
mov
inc
push
nop
cmp
fcomp
or
ljmp
adc
push
icebp
les
loope
pop
rcl
jge
sbb
pop
jno
cmp
shll
dec
inc
jg
xor
ret
paddq
mov
jl
sub
sbb
adc
or
mov
cmp
enter
lret
add
scas
repnz
dec
mov
jmp
faddl
inc
pop
rcl
aad
repz
mov
ljmp
inc
inc
xor
or
imul
and
push
fsubr
push
jns
dec
das
shll
sbb
jp
inc
gs
ret
call
adc
push
jmp
cli
or
ja
popa
movsb
nop
clc
jo
cmpsb
and
scas
adc
mov
add
add
mov
inc
push
js
xchg
jecxz
jns
push
adc
mov
push
cmp
mov
jge
sub
mov
inc
stos
mov
cmc
jns
inc
aad
aam
and
or
sbb
pop
or
movsb
push
imul
stos
cltd
and
pop
xchg
fsubrs
insb
pop
sahf
fwait
daa
loopne
pop
in
xor
cmp
cltd
cmpsl
pushf
addb
faddl
inc
mov
subl
je
and
dec
mov
bound
das
cs
insb
in
jge
repz
cmpsb
push
dec
mov
mov
mov
movsb
cld
or
aam
jbe
shlb
loop
xchg
std
dec
mov
notb
mov
mov
popa
ret
xor
out
cmp
add
push
mov
push
and
pusha
add
sub
sti
sub
popa
fs
out
inc
ljmp
insb
push
mov
inc
test
sub
repz
pop
adc
push
out
fidivrl
push
shlb
call
sarb
stos
dec
or
inc
inc
imul
addr16
shlb
out
outsl
popf
push
inc
xor
repz
sub
push
mov
aam
andb
push
jo
insb
push
pop
dec
push
mov
popa
jecxz
jne
jp
loopne
scas
repnz
arpl
push
dec
dec
cwtl
fwait
sbb
push
xor
mov
insb
cmpsb
out
mov
stos
pop
mov
or
lea
add
shl
dec
andl
inc
mov
jle
pop
mov
xor
imul
int
jae
push
cmpsl
push
inc
xchg
bound
int
rcrl
cwtl
cmc
or
push
push
adc
jmp
push
scas
popf
cmpsb
xchg
dec
push
lret
and
sti
sbb
rcr
mov
int3
sbb
imul
jecxz
pop
adc
repz
out
push
pusha
ljmp
mov
jecxz
jno
stos
xchg
mov
and
push
daa
mov
lds
insb
pop
rorb
pusha
mov
or
cmp
xor
adc
call
inc
inc
outsb
fiaddl
jne
dec
pop
fs
inc
pop
ss
push
rorb
mov
add
and
pop
stc
inc
pusha
adc
jl
lods
push
adc
loope
rcrb
in
xor
ror
or
xchg
jl
push
push
ficoml
jecxz
rol
scas
adc
jecxz
mov
mov
cmpl
cmp
push
fsubs
inc
mov
sbb
xchg
insb
imul
repz
sub
sub
jns
loope
lods
rol
sub
push
dec
negl
jo
or
movsb
push
mov
leave
mov
jbe
mov
add
adc
push
outsb
mov
jg
dec
inc
out
mov
divl
jge
out
sub
mov
dec
bound
and
jb
lods
mov
push
and
shr
rorb
inc
push
jns
js
insb
in
jne
jp
pop
adc
mov
pop
rolb
inc
test
insb
mov
push
mov
js
push
push
push
inc
arpl
rorb
inc
pop
inc
add
cmpsl
stc
sarb
jecxz
mov
pop
xor
loope
jecxz
fistl
mov
sbb
fildll
push
dec
outsb
push
xchg
or
sub
sub
sub
and
sbb
xor
outsl
pop
shrb
adc
cmpsl
clc
imul
aas
in
loopne
rorl
popa
imul
in
stos
fs
sub
inc
sub
inc
mov
xchg
mov
mov
stos
cli
stos
jns
and
add
jg
call
ds
mov
call
xor
enter
insb
jmp
loope
mov
or
loope
arpl
cmpsl
xchg
loop
push
cmc
and
iret
mov
fiadds
lods
cmpsb
push
sbb
cmp
call
in
sbb
lea
insb
push
test
pop
rclb
sbb
pop
bound
call
or
jo
xor
pop
mov
sahf
loope
iret
scas
sbb
or
out
xchg
arpl
sbb
mov
or
insb
rcl
pop
mov
push
push
add
arpl
sub
inc
and
imul
or
aam
lods
pushf
loope
pop
cld
sbb
mov
push
js
push
stos
mov
cmc
dec
add
xchg
jo
and
pop
je
ret
je
arpl
adc
jmp
cmp
sbb
sbb
jmp
dec
sub
push
push
imul
decl
pop
mov
gs
in
cs
mov
add
addr16
hlt
pusha
jns
outsl
xor
jl
push
enter
xor
dec
jge
fisubl
dec
pop
mov
loopne
mov
pop
sub
inc
cmc
lahf
in
leave
adc
xchg
xchg
push
outsl
inc
xor
popa
call
out
hlt
xlat
mov
inc
das
mov
movsb
add
out
xchg
inc
fisubrl
int
sub
ljmp
int
mov
and
dec
jg
push
mov
repz
shll
mov
std
mov
pop
pop
cmp
jae
mov
jo
das
inc
lret
mov
div
loop
loopne
mov
test
les
sub
loopne
outsl
popa
inc
dec
add
fists
js
in
push
jnp
mov
rclb
xchg
pop
popw
adc
jmp
and
xor
mov
mov
mov
or
cmpb
in
in
ljmp
jns
test
fsubrl
and
out
cmpsl
mov
or
pop
sbb
xchg
sub
fildll
pop
mov
int
jecxz
addb
dec
cmpsl
imul
and
inc
mov
mov
inc
cmp
shll
cmp
jno
push
in
in
dec
gs
lret
js
mov
stc
xor
push
inc
add
pop
mov
fnsave
scas
out
loopne
out
popf
inc
in
fsubs
jge
ljmp
xchg
imul
jmp
inc
add
movsb
fimull
sbb
sbb
pop
call
jle
inc
xchg
push
mov
mov
js
push
lods
orl
rorb
ljmp
arpl
jne
adc
insb
addr16
cld
xor
inc
cmp
leave
sbb
das
aaa
mov
inc
push
test
pushf
cltd
cmc
cmp
fsubs
loopne
jo
xchg
std
in
adc
in
mov
mov
fnstcw
inc
imul
add
mov
jecxz
or
inc
pop
pop
int
push
xchg
int
push
fiadds
cmpsl
mov
vhsubpd
stos
sub
mov
cmp
jne
addr16
mov
xor
sbb
push
loopne
pop
mov
sub
adc
and
mov
aad
push
in
inc
cmpsb
pusha
sbb
lahf
sahf
xchg
std
mov
xor
mov
es
jl
push
cmp
xor
sbb
lret
and
insl
movsb
xchg
outsl
in
sbbl
pop
test
ds
pop
shl
inc
dec
push
mov
call
adc
dec
xor
rcrb
sbb
arpl
mov
inc
lods
xchg
push
xchg
cmp
call
and
fnstsw
xor
out
lock
int3
fldenv
push
mov
jmp
lea
jmp
int
push
xor
jns
in
mov
xchg
mov
and
subl
mov
clc
fisttps
mov
aaa
lods
jmp
dec
ret
in
mov
push
lahf
fldenv
in
xchg
scas
je
sub
popf
cmp
and
pop
std
lret
xchg
aad
sbb
popa
jle
sub
inc
mov
les
push
daa
stos
add
mov
adc
test
dec
lods
or
mov
int3
push
pop
das
insb
mov
in
xor
sarb
ljmp
add
cmp
lea
ja
fcomps
stc
jge
pop
ss
mov
rorb
xchg
out
mov
cli
add
pop
jmp
loopne
les
js
add
add
mov
test
xchg
push
mov
arpl
jmp
cli
aam
addb
cmp
imul
push
adc
movsb
cmp
test
pusha
shl
sub
imul
push
adcb
loop
in
cmp
in
xchg
fsubs
popf
mov
push
shrl
lahf
xor
pop
jl
push
js
mov
cwtl
dec
xor
in
bound
and
ret
push
add
rorb
dec
jmp
ss
mov
dec
pusha
mov
movsl
push
cmp
inc
int
popa
push
scas
lcall
inc
and
int3
stos
les
push
mov
inc
loop
pop
mov
movsl
fadd
add
imul
add
fmuls
inc
adc
jbe
imul
subb
sbb
cmpsb
lods
or
ljmp
test
inc
adc
int
and
insb
addb
mov
sbb
popa
aam
pop
push
adc
xor
loopne
ljmp
inc
inc
popf
jg
jbe
out
pushf
push
pop
pusha
lods
hlt
loopne
pop
mov
mov
pop
jns
fwait
cwtl
fldenv
jp
loope
add
in
or
xlat
mov
push
cld
xlat
ds
push
repnz
mov
sbb
xchg
dec
adc
std
fs
fstps
cmpsb
push
fcmovnb
std
dec
sub
dec
lods
inc
out
stc
and
sarb
loope
lcall
das
mov
push
jns
out
jl
ficomps
xchg
xor
inc
jns
fisubrl
iret
sub
lods
mov
inc
aaa
jmp
dec
sub
pop
cmc
jno
mov
push
test
bound
hlt
jmp
add
outsl
ret
push
and
shlb
rcrl
mov
leave
popf
cmpsb
movsl
jbe
fcompl
sbb
loope
test
add
mov
into
xchg
pop
dec
jg
js
loop
dec
les
mov
push
and
fs
sarb
lcall
or
outsb
xchg
cmp
inc
mov
fisubrs
insb
mov
push
nop
lods
push
call
mov
add
call
inc
roll
jmp
jl
add
hlt
inc
mov
clc
push
adc
mov
inc
mov
lods
pop
inc
jl
add
scas
clc
inc
ss
jl
push
and
in
jne
or
cmp
scas
inc
shrl
lods
inc
mov
and
int3
mov
cltd
mov
and
jne
aas
and
int3
test
xor
push
imul
dec
xchg
shr
dec
movl
or
push
jb
xlat
and
mov
xchg
pop
subl
mov
arpl
cli
popf
sub
jb
sub
sub
adc
pop
addr16
inc
add
fnsave
pusha
imul
push
loope
test
push
inc
push
sub
jp
pop
ficoml
xchg
sub
lcall
insl
xchg
or
data16
adc
out
mov
int3
mov
mov
test
mov
push
mov
lea
inc
mov
jne
ftst
clc
and
and
pushf
push
mov
in
jne
sub
mov
and
and
out
jge
push
ss
and
xor
les
dec
cmp
xchg
imul
mov
xor
fs
xchg
ja
push
push
sbb
push
out
hlt
add
jo
mov
jmp
jg
xchg
mov
outsl
out
or
sub
test
mov
sbb
insb
orl
adc
imul
int3
fld
add
fildll
xchg
lea
lods
andb
test
dec
ljmp
xor
lret
scas
mov
repnz
pop
inc
into
fnstcw
add
adc
add
ljmp
or
repnz
cld
cmp
mov
scas
scas
andb
ljmp
dec
xchg
loope
dec
ds
lock
popa
inc
loopne
push
dec
xchg
jmp
lret
and
inc
cld
pop
fstps
mov
lret
cld
push
cmp
push
lock
fs
stos
and
pop
pop
push
pop
fisttpl
outsb
jne
test
and
movl
adc
xlat
add
lea
leave
dec
sub
lcall
or
int
js
mov
cmp
cmp
scas
in
mov
ficoml
addr16
push
dec
dec
arpl
and
scas
xor
iret
sbb
push
cltd
clc
out
fs
in
and
scas
cmc
js
stos
shrb
test
subl
icebp
sub
mov
sar
adc
lret
mov
add
cwtl
cli
js
push
popa
xchg
ret
and
addb
inc
cmc
mov
inc
mov
imul
lret
in
stos
xchg
pop
int3
dec
rcr
ret
in
sub
and
test
fisubs
pop
adc
sti
lods
and
sbb
ss
dec
xchg
cmc
mov
sbb
cli
dec
aas
or
jbe
data16
inc
pushf
jge
ds
adc
jb
xor
cmpsl
les
call
or
and
insb
xchg
data16
lahf
scas
jp
xchg
lea
adc
cmp
xlat
ds
inc
int
repnz
es
je
scas
hlt
jb
cwtl
cmpsl
rcrb
adc
push
pop
push
clc
clc
and
scas
inc
mov
shlb
movsl
ds
jl
adc
sbb
push
out
sub
sbb
bound
sub
push
int
inc
add
add
push
cld
das
sbb
insl
mov
fs
jne
sub
xor
outsb
inc
xor
sbb
fs
int3
test
lds
xchg
out
add
fcmovu
ljmp
mov
cwtl
or
xor
cmp
imul
pop
mov
pop
rcrb
inc
ss
cmpsl
adc
inc
adc
xor
mov
mov
jecxz
movl
ficoml
xlat
sbb
pushf
popa
decl
test
push
aam
jg
sbb
inc
dec
cmp
jmp
push
dec
hlt
out
rcrb
sub
mov
mov
push
movsb
jl
mov
mov
filds
mov
and
out
mov
ret
xor
aam
jp
inc
xlat
sub
lods
cld
lret
xchg
fisttpl
mov
mov
loop
cmp
mov
or
int
aaa
pop
inc
jns
rolb
mov
and
and
sub
fldt
clc
ss
fs
fsubs
dec
sub
lds
int3
test
lcall
lds
cwtl
pushf
sbb
mov
ljmp
scas
mov
lock
loopne
shlb
or
lock
inc
aas
xchg
push
ss
and
xchg
or
adc
pushf
rolb
mov
jns
mov
lea
sarl
dec
negl
mov
add
adc
lods
out
popa
pusha
pop
in
in
xor
push
outsb
lods
sbb
xchg
out
cmp
and
xchg
inc
mov
popf
xchg
pop
sarb
rorb
aad
sub
sbb
fsubr
inc
pop
mov
call
mov
mov
sub
xchg
mov
je
rclb
ret
pop
inc
cltd
sub
mov
cwtl
and
xor
xchg
lock
dec
leave
lcall
ja
inc
mov
sbb
aas
mov
inc
xchg
hlt
dec
sbb
wbinvd
xchg
loope
iret
pop
sub
es
or
dec
ja
push
pop
dec
or
sbb
or
pushf
pop
shrl
jg
inc
hlt
addr16
pop
icebp
push
outsl
cmp
loop
fdiv
inc
je
aad
enter
adc
pop
sub
mov
pop
adc
pop
jp
jo
push
outsl
fdivrl
pop
test
cld
sahf
cmp
or
jbe
push
mov
dec
dec
ljmp
mov
and
je
aaa
mov
ljmp
add
sahf
cmp
and
addr16
enter
sbb
in
pop
sarl
std
jl
sub
mov
flds
xchg
xor
cs
fcompl
push
gs
in
leave
test
adc
push
addr16
dec
sbb
loopne
cli
shrl
outsl
sub
ljmp
inc
mov
in
js
pop
cwtl
addr16
in
aad
icebp
cmp
mov
cmp
xor
repz
fsubl
pop
stos
xor
add
and
ds
jnp
cli
cmp
pop
push
push
jo
push
fs
lahf
mov
pminsw
lds
sub
jg
rcrb
sbb
sbb
mov
outsl
out
dec
mov
add
mov
mov
push
xor
insl
shl
outsb
pop
aas
jns
jmp
stc
out
pop
pop
out
jl
jle
lret
loopne
add
lods
dec
jmp
adc
sbb
adc
mov
mov
sbb
rcrl
cmpsl
test
jns
fsubrs
fistpll
aad
leave
mov
sahf
adc
mov
xor
sub
pusha
pop
ljmp
repz
or
or
adc
sub
in
stos
sbb
fcomps
insl
pop
frstor
call
fdivs
fcomps
fisttpll
sbb
pop
lret
cmpsb
in
sbb
pushf
xor
cmp
inc
cwtl
mov
cmc
sbb
jmp
cmpb
mov
iret
cmp
test
mov
gs
dec
xchg
and
sbb
sahf
outsb
pop
dec
loopne
cld
ja
lea
daa
rol
imul
das
lahf
mov
or
test
aad
pop
lods
and
testl
lcall
mov
aad
int3
mov
jo
xor
fdivs
lods
ljmp
nop
out
mov
jo
in
jmp
pop
cmp
push
in
inc
out
pop
pop
fisubl
mov
or
push
fisttpll
lcall
mov
sbb
test
mov
outsl
lea
mov
jle
stc
xor
mov
pushf
mov
sbb
jg
pop
mov
push
cltd
sbb
mov
pop
imul
dec
frstor
pop
and
pop
mov
pop
cmpsl
add
xor
fstps
es
and
scas
dec
ds
dec
xchg
pop
lret
sarb
imul
or
pop
addl
pop
lcall
dec
add
push
arpl
mov
jl
call
pop
pop
and
cwtl
in
or
lock
imul
cmp
inc
imul
cmp
stos
int
pop
stc
in
out
adcb
adc
pusha
sbb
mov
jae
insb
insl
mov
dec
cmpsb
add
inc
adc
mov
pop
ffree
cltd
clc
stos
inc
jmp
pop
sbb
push
mov
pusha
in
pop
mov
imul
std
cwtl
es
jns
mov
pop
push
mov
stos
sub
popf
pop
mov
int3
xor
xchg
ljmp
xchg
fdivrl
cmp
pop
jbe
loopne
sbb
pop
jmp
mov
negb
iret
fwait
sbb
add
cmp
sub
ret
lods
mov
mov
outsb
mov
aas
iret
xchg
aaa
js
mov
cwtl
daa
ss
pusha
dec
jns
lds
negb
pop
aas
pop
mov
mov
sbbb
xor
mov
cmc
jnp
sub
fcomps
popa
lret
lcall
xor
movsl
rcrl
out
jbe
fcmovnbe
jnp
lret
pop
pop
cli
int
in
or
js
jle
dec
rcrl
sbb
flds
fildl
push
sbbb
mov
push
fsubr
jmp
jg
rcrb
or
xlat
ret
iret
ja
pop
fistl
mov
inc
and
movsl
pushf
sub
cltd
mov
out
inc
ss
imul
push
jmp
pop
sbb
lods
mov
in
lods
jp
fldenv
pop
call
aas
mov
dec
faddp
das
mov
movsb
inc
sbb
pop
es
cmp
lahf
or
jl
shrb
sahf
mov
js
test
pop
pand
dec
cmp
and
pop
pop
mov
lock
fadd
outsl
pop
shlb
ds
pop
jns
stos
mov
shlb
add
out
mov
sbb
clc
xor
sarb
sbb
cmc
and
jl
inc
outsb
shr
fiaddl
jb
fcoms
shl
pop
jns
sbb
inc
xlat
mov
les
cld
iret
sbb
mov
stos
pop
mov
mov
cmp
pop
sub
xchg
cli
mov
repnz
add
xor
js
mov
pusha
lret
pop
addr16
ret
out
mov
lcall
xlat
dec
mov
inc
rcll
js
loope
popf
mov
adc
lea
push
inc
mov
pop
rep
adc
lods
add
ret
push
and
push
pop
jp
jl
aas
cwtl
call
fadds
inc
movsl
pop
cmp
mov
fmul
aaa
adc
adc
lahf
fistpl
push
mov
iretw
lcall
or
cmp
pop
dec
xchg
sbb
inc
xchg
and
pop
lret
adc
repnz
nop
outsl
andl
sub
pop
leave
push
inc
fcompl
popf
pusha
fsin
push
pop
lret
pop
ret
dec
cmp
mov
pop
test
imul
cmpsl
adc
or
adc
scas
cs
cmp
lret
add
lret
sti
mov
mov
pop
mov
int3
fwait
lcall
mov
jns
xor
lods
aam
pop
cmp
inc
mov
pop
mov
in
icebp
rcrb
mov
pusha
and
shr
imul
sti
pop
mov
shl
sbb
sub
lock
imulb
or
push
pop
cmp
mov
pop
sbb
sbb
icebp
jl
ss
mov
js
fwait
push
ficompl
push
scas
adc
sbb
sbb
movsb
jl
test
pop
loopne
xchg
pop
pop
xchg
mov
dec
rcl
mov
pushf
xor
mov
adc
pop
mov
pop
inc
jns
mov
cmc
data16
imul
pushf
pop
jl
xor
pop
mov
jp
inc
movl
cmp
popf
mov
icebp
jnp
enter
pop
dec
mov
xor
rolb
cmp
repnz
sbb
loop
and
imul
les
iret
sets
sarl
mov
call
lock
test
popa
std
sub
test
and
int3
xchg
stos
inc
xor
and
cmp
out
dec
fdivrl
dec
cmpsb
std
fsubs
xchg
pop
xchg
mov
sub
cltd
enter
nop
ss
pop
sub
push
cmp
dec
xchg
fstpl
loop
add
inc
in
pop
pusha
jnp
ljmp
fisubl
pop
ss
outsl
push
pop
fiadds
mov
mov
js
pop
xchg
mov
movsl
lret
pop
dec
and
in
rclb
cwtl
jmp
psadbw
fs
sbb
and
mov
repz
pop
mov
jl
cmp
jnp
push
push
inc
or
push
xchg
imul
pop
lea
insb
ds
mov
mov
pop
out
jge
hlt
shll
cmp
dec
jno
lret
es
jb
lock
inc
fistl
movsl
mov
jbe
loop
pop
les
xor
int3
js
adc
mov
mov
mov
mov
ja
inc
mov
add
sbb
xchg
xor
or
aaa
ret
outsl
jno
insl
iret
mov
mov
dec
testb
jbe
and
ret
cltd
pop
sub
ss
mov
inc
sub
fcomps
mov
jnp
test
fistpll
dec
imul
stos
aaa
lret
sbb
sub
pop
repz
test
pusha
loop
divl
loope
sub
mul
cwtl
cwtl
aas
mov
lods
pop
subl
ds
mov
pusha
stos
sbb
xchg
sub
ljmp
lahf
je
mov
scas
mov
pusha
mov
popf
adc
pushf
testb
data16
scas
sub
mov
jg
pop
fstpt
jb
sbb
adcl
mov
add
stc
aas
mov
mov
jbe
daa
xlat
lret
pop
das
les
cli
aad
in
jp
sub
cwtl
ja
pop
fmuls
divl
pop
cmp
subb
hlt
push
clc
adc
push
cmpsl
add
mov
rorl
mov
and
loope
mov
loopne
aad
push
cmp
fsubs
aas
pop
stos
and
cltd
jp
jns
movsb
mov
mov
mov
dec
out
mov
popf
push
inc
ja
test
sbb
mov
imul
add
popf
pop
scas
cmpsb
adc
mov
mov
jnp
out
mov
push
lods
pop
repz
cwtl
imulb
mov
ds
jge
scas
mov
rolb
cmc
popf
cmp
aas
xchg
jl
loop
outsl
pop
pop
inc
mov
scas
rcrb
jnp
and
in
sbbl
aaa
cmp
mov
mov
jbe
lret
imul
lcall
in
adc
lcall
lods
pop
rcr
roll
ljmp
mov
cli
jmp
inc
je
xor
out
lahf
push
cmp
mov
mov
pusha
ja
jg
xlat
push
cwtl
cli
xor
fmuls
fwait
mov
mov
mov
cmp
mov
pop
outsl
jecxz
mov
sbb
pop
cmp
mov
addr16
pop
aas
cltd
push
fisubs
xor
and
cmp
stos
xchg
push
std
pop
pushw
cmp
mov
jp
fmuls
pop
xor
jl
push
jge
adc
jmp
fisttpl
mov
inc
push
pop
push
lret
shll
pop
pop
jae
mov
sahf
cwtl
inc
mov
dec
cwtl
pop
int
cmp
mov
addr16
mov
loopne
jmp
sbb
dec
inc
push
adcl
pushf
mov
cmpsb
out
jecxz
out
pop
imul
sub
cmp
adc
xchg
mov
xchg
jecxz
add
mov
jmp
clc
addr16
scas
cmp
inc
or
xchg
mov
xchg
das
data16
out
lea
or
leave
cmp
inc
jb
xchg
lds
stos
cmpsb
hlt
hlt
je
insb
js
xorb
cmc
or
mov
fcomps
sbb
cmp
pop
mov
jge
sahf
je
lea
in
jne
notb
mov
or
sub
inc
xor
lret
gs
jo
dec
into
fwait
je
xchg
sub
test
fnstcw
loope
push
lcall
mov
pop
mov
call
push
inc
adc
xchg
xchg
xchg
adcl
adc
jg
and
xchg
fsubr
push
sti
inc
nop
loopne
js
pushf
hlt
popa
xchg
mov
iret
xchg
jmp
or
jno
cmpsl
mov
fistps
mov
xchg
sub
inc
insb
mov
int3
stos
into
enter
inc
je
mov
fbstp
nop
jg
cltd
orb
jns
sub
inc
cld
dec
and
push
dec
push
fisttps
popf
jg
lahf
xlat
mov
bound
mov
mov
sub
cmp
inc
int3
inc
call
push
jbe
xchg
adcb
andb
test
aam
hlt
orb
dec
and
popf
xchg
mov
pop
mov
jnp
test
cwtl
lock
std
out
daa
adc
mov
jmp
sti
pop
or
mov
lahf
lock
js
andl
sub
inc
dec
dec
cwtl
and
nop
lret
ljmp
pop
stc
xchg
pushf
xchg
adc
and
lret
je
xchg
inc
ljmp
fs
imul
mov
dec
mov
pop
int
loop
lahf
add
sti
jns
push
jl
sub
hlt
clc
cmc
fildll
jp
mov
add
push
sbb
dec
or
sbb
inc
adc
push
dec
pop
xchg
xchg
test
jmp
ss
cmp
jno
mov
inc
fcomip
nopl
hlt
sahf
sti
leave
or
sbb
sub
cmp
push
cmp
cmp
mov
xchg
std
xchg
or
cmpsb
sub
push
sbb
jno
pop
mov
jne
das
inc
cmp
dec
jl
mov
mov
cmp
fs
lret
mov
je
fbstp
jle
lock
movswl
xchg
push
and
sub
xor
hlt
push
cmpsb
push
adc
add
in
and
xchg
or
popf
mov
cmp
cmp
xchg
les
adc
sbb
sti
xchg
xor
push
clc
cwtl
call
je
mov
sbb
daa
fistps
xchg
aad
mov
mov
lods
jmp
das
or
pop
data16
nop
dec
cwtl
enter
test
mov
xor
xchg
jl
xchg
pusha
jne
jne
ljmp
daa
mov
xor
xchg
pop
cmpsb
pusha
out
daa
push
out
and
jp
push
scas
or
fmull
call
jae
rorb
and
mov
fisubl
and
jmp
sti
mov
mov
outsb
nop
lret
into
xchg
mov
xchg
cmp
cwtl
data16
mov
js
jnp
xchg
cmp
inc
aam
mov
pop
aam
je,pt
leave
cmc
or
mulb
jg
cltd
je
andl
nop
lret
xchg
jne
xchg
push
fwait
sahf
xchg
xchg
xchg
fldt
mov
mov
jo
push
ljmp
mov
ja
sti
adc
and
icebp
xchg
sarb
xchg
dec
sbbb
jnp
cwtl
or
cmp
pusha
sbb
mov
shlb
fistl
push
push
push
fisttps
mov
fstps
and
outsl
sbb
push
xchg
popf
fsubrp
test
fs
mov
icebp
outsb
mov
xchg
adc
pop
xchg
lcall
dec
jl
cmp
shll
stos
out
add
sbb
mov
jne
call
js
mov
lahf
dec
mov
pop
xchg
pop
jg
lahf
mov
dec
and
push
xor
xchg
pop
and
fisubs
cmp
daa
aaa
mov
and
xchg
fsubl
mov
fildl
lea
or
nop
jbe
mov
cmp
inc
rcll
data16
xchg
and
in
push
mov
sbb
cmp
pop
mov
clc
dec
pop
xchg
mov
data16
mov
dec
mov
nop
fistpll
dec
fs
xchg
fldt
js
pop
xor
pop
cmp
cmp
les
sahf
mov
in
in
mov
loopne
nop
js
add
inc
mov
les
rcrl
ljmp
jmp
dec
fstpt
rorl
dec
in
ljmp
add
push
or
push
and
andb
cmp
add
and
fs
outsl
inc
je
jns
jg
xchg
mov
sahf
inc
push
push
mov
mov
xchg
int3
xchg
aad
fistl
ljmp
data16
xor
fwait
cmp
jp
fwait
or
mov
pop
cwtl
testb
inc
sahf
xchg
mov
xchg
or
pop
xchg
es
sub
xor
pop
xchg
xchg
jo
ja
jle
test
xchg
mov
cmpsb
jle
divl
test
neg
neg
mul
imul
div
div
scas
ja
testl
push
ja
mull
imull
divl
idivl
testl
jg
popf
insb
jmp
js
jg
test
dec
dec
xchg
dec
fwait
dec
mov
dec
mov
mov
mov
dec
rorl
dec
loope
call
shll
or
fcoml
push
sbb
sub
xor
inc
push
ds
inc
push
dec
push
dec
lock
push
pop
xchg
xchg
pop
xchg
movsb
and
xchg
adcb
xchg
cltd
mov
xchg
mov
xchg
mov
mov
jl
dec
xchg
xchg
xchg
fistl
xchg
xchg
repnz
notl
or
sbb
cs
xor
inc
xchg
dec
xchg
push
xchg
push
pop
xchg
pusha
cmpsb
addr16
and
jle
adcl
sbb
loopne
lret
jne
loope
mov
rolb
pop
push
cmpsb
jg
lahf
out
mov
xlat
mov
adc
outsb
loopne
inc
scas
dec
mov
cs
inc
mov
cli
or
test
fdivl
lods
out
shrb
fcoms
mov
hlt
xchg
dec
jmp
mov
arpl
jns
stos
cmpsb
mov
addr16
mov
xchg
lret
andl
test
addr16
mov
xchg
inc
test
xchg
mov
and
mov
andb
dec
mov
xchg
sti
mov
sub
mov
cmp
inc
out
in
and
jg
cmpsl
mov
sub
notl
insl
mov
mov
and
testl
mov
icebp
xchg
mov
data16
sub
jg
cmpsb
pop
enter
mov
loope
out
cltd
mov
mov
into
mov
push
cmpsl
shlb
fsubs
fsubl
loopne
in
call
hlt
push
clc
push
cld
push
add
push
or
push
adc
push
sbb
push
and
int3
stos
sub
xor
cmp
push
push
inc
push
inc
push
dec
push
dec
push
push
out
mov
sti
or
insb
sub
je
js
jl
testl
cli
push
adcl
je
xchg
cmc
cmc
sbb
xchg
ret
clc
shlb
fisttps
jns
mov
je
mov
cmc
add
ljmp
or
cmp
dec
in
adc
test
dec
data16
cmpsb
scas
out
daa
int
jg
test
dec
inc
sarb
mov
out
int3
adc
xchg
stos
cmc
fstpl
xchg
inc
xchg
mov
rolb
scas
jns
mov
mov
cmp
mov
xchg
inc
xchg
push
data16
mov
addr16
repnz
push
xchg
fisubrs
mov
and
jle
push
cld
les
xchg
cmp
cltd
lahf
xchg
stos
leave
inc
sub
xchg
loopne
sub
jl
sub
push
jp
clc
pop
and
pusha
in
xor
insb
inc
mov
push
dec
push
pop
push
xchg
mov
mov
fadds
inc
loopne
in
call
imul
push
cld
dec
add
dec
jnp
loopne
out
test
jl
sub
dec
sub
rclb
lret
pusha
cwtl
xchg
push
popa
sbb
xchg
cwtl
aas
pushf
aas
mov
inc
jge
les
out
push
ja
mull
mov
mov
mov
les
dec
int3
dec
rorb
sub
in
call
mov
addr16
add
cmp
jle
movsb
rolb
and
or
data16
xchg
jmp
cli
lods
shlb
je
popl
jne
push
sti
decb
xchg
test
jo
into
jg
cltd
push
lahf
je
js
jl
andb
xor
fdivs
fbstp
sbb
xchg
cmp
test
dec
sbb
shlb
mov
xchg
xchg
cld
add
sub
das
ret
test
and
sub
xor
xchg
lea
mov
sbb
and
mov
push
adc
jbe
test
idiv
testl
mov
fildl
push
jnp
jge
dec
sahf
lahf
movsl
mov
fwait
push
dec
mov
sub
dec
mov
mov
mov
sti
dec
or
dec
cmpsb
fninit
jmp
jle
ret
jl
lret
ret
or
adc
sbb
and
sub
xor
sub
add
lret
or
pop
adc
sbb
pop
shlb
xchg
dec
xchg
push
jle
inc
pushf
cmp
fnsave
mov
int3
lret
mov
and
sub
fisttpl
cli
and
inc
je
nop
xchg
outsl
out
arpl
cli
mov
mov
and
imull
cld
xor
cmp
mov
xchg
adc
sbb
sub
aas
sub
xor
push
inc
push
inc
push
dec
push
dec
push
push
adc
nop
xchg
fs
push
jbe
divl
je
js
jl
xor
negl
and
cmp
inc
fbld
mov
mov
je
cmc
cmc
pop
jl
orb
mov
sbb
pushf
push
push
push
fwait
nop
out
popa
ja
cmpsl
cltd
add
xor
lret
fbld
out
daa
push
pop
jno
add
sub
xchg
xchg
loope
push
imul
shr
int3
jmp
pop
mov
cmpl
rcrb
pop
int
imul
or
imul
es
sub
popf
cltd
mov
lret
jecxz
not
or
cmp
je
mov
cmc
or
mov
shlb
jo
push
jns
mov
or
data16
xchg
pop
cmp
inc
push
inc
push
adc
pop
fcoml
in
sub
xchg
mov
mov
mov
mov
and
inc
data16
lret
jge
add
mov
cmp
in
xchg
pop
xchg
jg
cltd
cltd
xchg
and
push
jp
push
pop
sti
shrb
inc
xchg
inc
or
xchg
xchg
fcoms
in
imul
push
clc
sub
push
cld
push
add
icebp
or
or
adc
lret
xchg
mov
pop
cmpsb
xchg
aam
clc
je
xchg
sahf
cmc
shll
es
cwtl
and
mov
ljmp
addr16
xor
aam
aam
xchg
xor
cmpsb
jecxz
cli
xchg
lea
lock
or
xor
xchg
out
mov
xchg
mov
cmp
icebp
jl
add
mov
sub
xchg
cmp
xchg
add
pushf
test
test
mov
jb
inc
mov
push
addb
sbb
mov
mov
movsb
in
in
jo
add
inc
notb
movsb
les
mov
mov
pop
xchg
cmpb
xchg
mov
inc
or
call
mov
add
loopne
imul
jae
outsb
xchg
mov
nop
dec
out
mov
mov
pop
fcomps
dec
mov
xchg
cwtl
xchg
pushf
xchg
mov
mov
orl
jne
mov
arpl
mov
or
jg
popf
cmp
mov
and
mov
jb
jae
stos
jle
call
xchg
mov
xchg
cmp
arpl
fsubs
jae
ja
push
and
and
js
dec
mov
mov
pop
lock
imul
fldcw
lcall
mov
mov
jmp
cli
out
scas
jl
add
and
sbb
test
scas
cmp
inc
aam
jmp
outsb
orw
lods
jne
push
sbb
and
js
jb
jl
inc
lcall
or
call
xchg
lock
pop
andb
pop
fidivrs
cmp
jns
and
mov
add
cld
sbb
add
sbb
out
inc
add
in
mov
fwait
fs
fidivrs
inc
ljmp
xchg
nop
jno
out
lret
pop
jl
aad
les
lods
stos
dec
add
bound
pop
icebp
xchg
add
je
bnd
insl
insb
xchg
mov
pusha
je
pop
mov
xchg
inc
cwtl
adc
xchg
and
pop
xchg
push
orb
and
mov
loope
shll
nop
fists
inc
cmp
jno
mov
cmpsl
bnd
and
pop
movsl
add
dec
lea
lock
mov
cmpsl
jno
es
cmpsb
pop
loope
popa
movsb
sbb
sub
cmp
lock
je
lea
adc
push
mov
cmpsb
nop
jae
pusha
mov
sbb
xchg
mov
insb
stos
or
test
mov
cli
fistpl
rorb
push
orl
fimuls
push
fildl
jp
push
sbbl
and
rclb
mov
add
xchg
mov
pop
loop
sub
xorl
out
push
mov
dec
push
int3
push
outsl
ficoml
add
or
adc
adc
sbb
push
and
lcall
pop
in
xchg
mov
xchg
add
cld
jbe
jmp
sbb
or
adc
dec
sbb
mov
pop
call
push
cmpsb
repz
pop
aam
dec
xchg
jbe
shll
sti
sub
xchg
fdiv
cmp
enter
popl
and
jb
fisubs
pop
es
push
jg
cmpsb
pop
xchg
sarl
xchg
int
pop
nop
mov
sbb
mov
inc
iret
or
outsb
out
adc
je
cmc
ljmp
jne
jmp
or
jmp
sbb
fldt
mov
sbb
mov
push
mov
imul
out
fstl
dec
or
cmc
pop
cmpsb
xchg
inc
test
movsl
xchg
ret
outsb
jo
data16
out
and
add
dec
mov
cltd
mov
mov
add
lea
add
lods
mov
fs
jg
lahf
adc
inc
sub
add
aam
add
in
xchg
cwtl
or
loopne
mov
add
rcrb
shrb
mov
and
rorb
jbe
out
cmp
add
sbb
or
sbb
sub
mov
push
inc
popa
xchg
lea
jge
jg
cltd
mov
xor
shlb
pop
mov
jnp
inc
and
push
rclb
in
out
out
sub
cmp
sahf
xchg
into
rcrb
in
add
xchg
xchg
or
ja
ljmp
dec
inc
dec
push
dec
lods
xchg
aam
ljmp
cmp
push
je
xchg
xor
jne
out
sbb
sbb
dec
je
mov
insl
mov
pop
mov
dec
arpl
xchg
fnstsw
loop
adc
flds
sub
cmp
arpl
hlt
jge
push
leave
sub
sbb
sar
push
pop
andb
out
and
test
mov
enter
es
test
add
int3
xchg
cmc
pop
xchg
jno
mov
stos
or
push
cmp
enter
hlt
lds
aam
cmp
xor
xor
and
dec
test
and
jg
fnstsw
into
sub
dec
testb
jne
jge
pop
inc
lods
lahf
sarl
ja
and
sub
or
out
and
in
divl
enter
xchg
test
jge
cltd
push
fiaddl
xchg
addr16
pop
sbb
enter
addr16
out
and
cmpsb
pusha
fcmovbe
jp
movsl
cwtl
lcall
fsts
push
hlt
andl
dec
outsb
mov
xchg
sub
xor
testl
mov
insb
xor
je
js
jl
adc
movsb
mov
lcall
jge
mov
data16
cmp
sahf
nop
mov
add
or
imul
dec
sbb
rcrb
enter
shl
loope
xchg
xchg
xchg
adc
test
je
lret
fwait
mov
ljmp
repnz
clc
and
pop
fs
jg
cltd
orl
call
mov
pop
dec
ret
mov
xchg
sub
inc
sub
xchg
in
jmp
and
cmp
inc
sub
lods
cmp
pop
push
push
mov
sbb
pop
mov
jnp
movsl
inc
mov
shr
fbstp
fwait
sub
into
out
rolb
mov
jp
xchg
cmp
xchg
mov
pusha
cwtl
fstpl
out
ljmp
pop
mov
xchg
mov
adc
xchg
sbb
sbb
mov
xchg
pop
xchg
popa
jl
outsl
negl
push
rorb
fidivrs
pop
fsubrl
jmp
cli
or
dec
pop
repnz
jl
clc
test
xchg
jg
mov
cltd
mov
jbe
test
shlb
mov
orb
push
pop
aam
nop
hlt
add
mov
pop
shr
xchg
je
js
addr16
inc
jne
lock
mov
xchg
cwtl
lahf
lock
rcrb
push
and
dec
mov
adc
cmp
xchg
xchg
pop
enter
jmp
or
pop
and
xchg
pop
xchg
loop
js
and
push
mov
cwtl
fs
mov
adc
out
push
mov
loopne
cmp
fwait
lret
mov
mov
adc
outsb
lock
test
loope
imul
pop
add
push
adc
xchg
test
mov
xor
dec
popa
mov
xor
and
mov
nop
jge
cmp
xchg
stos
rolb
cmc
xchg
add
inc
jne
not
jbe
testl
jl
dec
loope
enter
fldt
sti
sbb
mov
sti
test
push
cmp
fisubl
nop
pop
xchg
sub
mov
arpl
xchg
stos
loop
sub
or
je
mov
cmc
or
divb
push
sbb
pop
nop
je
sarb
mov
sbb
lods
mov
pop
xchg
mov
jns
mov
daa
mov
int3
into
xchg
ror
rcr
aam
icebp
mov
push
addr16
and
mov
call
jns
je
into
jo
lods
outsl
mov
ret
jmp
adc
ds
imul
inc
dec
sbb
sub
mov
sbb
movsb
int3
leave
into
icebp
rclb
mov
popa
aam
mov
push
or
mov
outsb
out
or
decl
adc
test
fldl
xor
mov
xchg
push
pop
mov
imul
arpl
jle
ss
mov
jge
cmp
mov
popa
and
xor
aam
pop
xlat
lea
cmp
iret
dec
aad
or
and
sbb
dec
cmp
sub
xchg
dec
push
xor
jge
pop
insb
pop
inc
out
jp
shlb
jbe
aam
and
and
xor
inc
push
sbb
xchg
popa
push
shrb
mov
sub
shr
dec
xchg
lret
xlat
xchg
sbb
cmp
cwtl
lret
pop
push
test
int
ss
mov
cmc
xchg
imul
rclb
daa
repnz
andl
xor
xchg
fistpll
pop
xchg
sub
sub
lods
add
mov
jo
out
sti
xchg
or
int
repz
or
cmp
xor
je
xchg
sub
cmp
jge
mov
push
and
push
sub
dec
hlt
les
lods
outsl
mov
out
jbe
out
mov
enter
sbb
fadds
xchg
ficoml
inc
mov
in
xchg
mov
add
inc
sub
imul
push
sbb
das
and
inc
ror
pop
mov
push
xchg
lcall
jge
cmp
push
xchg
sub
test
pop
pop
lret
cmpsl
call
pop
in
out
cmp
sbb
lahf
cmpsb
mov
xbegin
lea
mov
cmp
lds
neg
inc
add
xchg
pop
xchg
mov
popfw
xchg
mov
inc
fisubrl
jne
ljmp
rolb
ds
fsts
repz
shlb
inc
and
push
jae
dec
and
mov
push
push
mov
push
enter
aas
xor
dec
aas
push
inc
arpl
push
xchg
push
jg
mov
cmp
sahf
sbb
inc
inc
jg
cmpsl
jl
or
push
adc
cmc
pusha
jne
jmp
fadds
mov
cmp
out
pop
aam
jmp
add
and
test
fidivrs
popa
cld
mov
push
push
dec
adc
xchg
and
xchg
lds
hlt
dec
jne
jne
fistps
lahf
test
add
js
pushf
sub
dec
stc
dec
push
push
sub
mov
mov
or
fildl
and
xchg
cmp
pop
in
sbb
call
push
aad
fstl
stos
negb
dec
sub
cmp
dec
fcomi
pushf
jmp
sti
stos
or
outsb
inc
lcall
into
mov
out
or
in
sbb
outsl
nop
push
xchg
mov
out
sub
fbstp
sbb
cld
adc
aam
outsb
cwtl
xchg
stos
or
inc
call
xchg
inc
ret
dec
test
fdivrp
mov
gs
xchg
sarl
cmp
add
es
mov
jl
or
hlt
lahf
push
mov
and
push
pop
mov
mov
popa
xchg
mov
rclb
enter
cmpsb
mov
cmpsl
add
fcoms
mov
or
in
in
cmpsl
adc
rcrb
rolb
or
pop
pop
xchg
mov
mov
xchg
and
lret
push
pop
push
xchg
fs
jne
jge
ja
ljmp
fdivl
in
dec
enter
mov
mov
repnz
imul
xor
cmp
jg
cmp
push
je
je
mov
cmc
roll
or
mov
mov
inc
xchg
dec
arpl
jno
push
adcb
enter
mov
pop
nop
cmp
jge
rcl
jne
pop
into
fdivrs
lahf
xor
xchg
in
ret
cmp
in
xor
imul
add
adc
xor
add
push
sbb
xchg
sbb
or
mov
sub
loopne
imul
xor
xchg
and
sbb
enter
jg
cwtl
shlb
mov
les
jo
dec
inc
dec
inc
jp
mov
int
popf
jl
jp
test
aam
push
or
sub
jge
cltd
mov
cmc
cmpsl
sti
out
daa
push
and
data16
mulb
mov
icebp
sub
cld
dec
add
sub
test
jl
xchg
and
pushf
enter
xchg
mov
shlb
jg
xchg
rcrb
cltd
data16
push
add
push
mov
adc
and
test
aam
punpckhbw
nop
mov
repnz
inc
cmp
gs
out
jb
divb
fsubrs
fwait
cwtl
rclb
imul
cmp
outsl
pop
mov
out
stc
sti
or
jbe
push
lea
jb
inc
jp
jle
adcb
dec
movsl
pop
inc
jge
pop
sub
in
test
addr16
cmpsl
std
out
dec
xchg
xlat
push
sub
outsl
rcrb
inc
push
jle
mov
es
mov
fstps
test
ljmp
ljmp
sub
test
jle
outsl
inc
mov
mov
cmpsb
aas
out
and
push
shlb
inc
hlt
dec
cmc
push
pop
fs
fdivrl
cmpsb
cld
xchg
mov
xchg
mov
filds
jg
xchg
outsl
loopne
add
clc
jle
in
out
jno
orl
push
cmp
mov
enter
mov
xor
inc
jmp
sbb
push
movsb
push
fcmovnb
loope
push
adc
mov
xor
jl
add
jge
mov
cmp
call
mov
xchg
pop
xchg
xor
fnsave
or
sbb
sub
add
mov
inc
nop
inc
popf
dec
movsl
dec
lods
adc
addr16
and
enter
pop
mov
and
cltd
bound
push
push
push
pop
mov
or
rcll
dec
mov
mov
jecxz
pop
mov
add
sub
cmp
push
outsl
pop
mov
mov
xchg
scas
xchg
dec
push
test
shll
and
sub
cmp
dec
into
mov
fadd
pusha
inc
in
ljmp
cmc
ffreep
les
je
imul
pop
mov
sbb
or
sbb
sub
xchg
cmp
dec
pop
mov
subps
repnz
arpl
mov
fiaddl
mov
fildl
jmp
sti
cmp
dec
sbb
mov
mov
dec
pop
and
xchg
arpl
xchg
add
xor
sub
jp
adc
dec
repnz
sbb
sub
push
sbb
ljmp
xchg
stos
xchg
fisubl
add
push
xor
call
pop
jle
gs
pushf
loope
sbb
pop
or
ss
add
out
cli
sbb
jb
mov
mov
jbe
int3
or
shrb
or
pop
imull
ja
xchg
adc
adcb
adc
stos
in
cmp
jp
imul
fcmovnbe
cli
or
sbb
sbb
rcr
fs
mov
jbe
jmp
sbb
mov
test
pop
jbe
subb
addr16
or
xchg
aaa
pop
mov
popa
sub
push
cmp
sbb
jp
mov
xchg
aaa
dec
sub
xchg
int3
mov
ret
fadd
push
or
je
xchg
in
adc
push
and
mov
xchg
data16
jp
mov
hlt
lock
xchg
mov
jbe
pop
lahf
lea
jg
cmpsl
cmp
mov
push
jge
mov
dec
outsb
fistl
cltd
rorb
mov
mov
and
xor
pushf
or
or
outsl
ja
ds
jecxz
test
mov
fcmovbe
sbb
sbb
out
xchg
movsb
push
mov
mov
addr16
dec
fldt
and
xchg
das
test
pop
pushf
int3
jo
mov
xchg
ret
mov
xchg
rcrl
sbb
repnz
sbb
cmp
dec
adc
xorb
mov
clc
notb
inc
xor
xchg
cmp
andb
arpl
mov
mov
addr16
daa
fbld
in
cld
sbb
adc
sbb
stos
push
xchg
mov
xchg
dec
addr16
mov
rorb
mov
pushw
scas
and
andl
dec
xor
loop
out
jge
fdivr
repz
cwtl
nop
cmp
inc
pmuludq
jne
int
and
out
or
sub
sub
lret
jae
int3
fsubrp
cmp
pusha
or
scas
mov
test
push
or
and
shrb
frndint
xchg
aam
xchg
sahf
jge
mov
xchg
mov
mov
aas
lret
sub
dec
fisubrl
out
ljmp
fdivr
and
sub
and
sbb
push
push
push
and
aam
xchg
jg,pn
loope
pop
pop
add
inc
daa
dec
and
pop
pusha
nop
mov
lods
xchg
sub
xchg
notb
push
xchg
arpl
popa
scas
xchg
dec
fs
lock
jge
bound
mov
or
movsb
xchg
mov
into
mov
push
stos
outsb
mov
inc
jecxz
jp
out
jmp
pop
cltd
ret
nop
ffreep
ja
jge
xor
lret
mov
xor
jle
popa
xchg
ljmp
pop
jo
mov
jle
xor
mov
pop
lret
push
mov
outsb
sbb
ljmp
adcl
fisttpll
fwait
dec
dec
dec
jae
mov
mov
cltd
or
xchg
pop
ss
out
loope
lods
push
movsb
out
and
sbb
movsb
pop
sbb
inc
pop
sub
push
and
jge
cltd
cmp
push
call
mov
and
mov
sbb
push
fsubrs
add
jge
cwtl
cmp
lret
add
data16
cltd
test
aad
mov
into
adc
loop
lahf
clc
push
clc
inc
aas
divb
dec
enter
mov
sbb
jno
mov
sbb
into
stos
jne
outsl
push
cmpsl
dec
push
mov
int3
push
mov
mov
pop
stc
xchg
lret
jl
clc
scas
test
fbstp
pop
stc
insl
xchg
mov
fmul
add
sbb
lds
and
inc
mov
ljmp
dec
out
nop
mov
arpl
mov
ret
jg
fcoml
jae
int3
test
rol
popa
scas
or
xor
sub
into
arpl
into
dec
rorb
imul
and
fsubs
inc
fmulp
movsl
int3
push
cmpsl
imul
sbb
ret
mov
jg
lcall
pop
addr16
add
push
rclb
fnstcw
into
ljmp
out
cmp
ret
cmpsb
pushf
js
cmp
stos
test
repnz
mov
jb
or
bound
xchg
js
and
sub
cmp
and
sbb
rolb
push
mov
mov
in
inc
imul
dec
push
push
out
pushf
push
jno
jge
xchg
fmul
dec
add
movsl
mov
xchg
adc
cmpsb
mov
xorb
fwait
xor
cmp
xchg
je
mov
faddl
cmpsl
inc
or
xor
pop
dec
or
lea
loop
mov
hlt
bound
fadd
mov
add
and
test
mov
mov
daa
dec
ss
push
or
jb
and
jle
cmp
adc
sub
xor
cmp
mov
subps
loopne
testb
aaa
aas
inc
aas
push
cmp
cmp
movsl
sbbb
mov
pop
lods
ret
dec
fiaddl
cmpsb
jmp
push
cmp
xor
outsl
sub
or
or
lret
jg
mov
nop
mov
inc
and
push
call
push
inc
push
dec
xchg
jbe
jnp
xchg
jne
out
mov
push
mov
adc
loopne
aaa
push
cmp
or
mov
push
in
inc
pop
dec
popa
mov
jmp
xor
mov
add
out
inc
and
cltd
rcrl
lods
xor
push
sub
jb
add
inc
inc
and
xchg
arpl
std
pushf
das
cmp
test
mov
jp
je
sbb
int
push
popf
and
lock
clc
hlt
loopne
mov
pop
pusha
add
and
inc
cmp
adcl
aam
test
sbb
andl
enter
fidivrs
adc
xchg
into
rclb
je
lea
xchg
mov
jle
in
mov
add
cmp
test
dec
adc
fwait
mov
mov
movsl
mov
sbb
sbb
xchg
mov
stc
repnz
sbb
adc
pop
mov
xchg
fiaddl
xor
ja
ja
in
push
add
fnsave
fisttpl
ljmp
xchg
cmc
pop
test
or
aam
outsl
stc
pop
sahf
aas
lea
movsl
rorl
mov
add
pop
xchg
popa
sub
mov
popa
nop
addl
test
cwtl
fiadds
inc
repz
adc
popa
cwtl
insb
xchg
mov
xchg
leave
cs
dec
fwait
jp
xchg
ljmp
lcall
stc
sub
sub
add
sub
clc
adc
and
pop
je
adc
pop
orb
aam
and
loope
jge
fistpll
sbb
mov
jg
sbb
std
cs
js
push
add
xchg
or
inc
push
push
push
jns
mov
jle
je
std
mov
pop
stos
inc
xchg
pop
sarb
jp
adc
ja
cmp
cmc
mov
loopne
inc
jg
pop
jbe
cmp
in
clc
sbb
sub
outsl
int
test
jge
adc
xchg
ljmp
pop
cs
add
adc
imul
cmp
stc
bound
js
mov
mov
jbe
push
push
clc
mov
std
cmp
and
push
decb
out
scas
popa
hlt
fs
shrb
in
mov
in
mov
les
pop
jl
cmp
or
in
call
xor
sub
addr16
and
xor
push
push
es
sub
mov
daa
xor
cmp
cmp
push
inc
test
xchg
dec
jge
mov
cmp
cmpsb
and
dec
sbb
xchg
cmp
inc
sub
test
lods
fwait
fsts
xor
fsubr
mov
dec
push
pusha
xchg
xchg
insb
jg
sub
rcr
mov
sbb
dec
int
dec
push
push
push
jg
sbb
push
cmp
push
mov
xor
out
pushf
sbb
movsb
mov
mov
je
push
and
and
push
push
int3
daa
mov
dec
aaa
push
cmp
inc
adc
dec
aas
push
cmp
adc
pop
cltd
test
imul
inc
jae
ja
out
movsl
jg
nop
pop
jl
loopne
jo
je
nop
push
popa
mov
lcall
fdivl
out
mov
cmp
enter
sarb
push
fdiv
mov
mov
xchg
or
and
test
cli
xchg
je
mov
clc
sahf
add
sbb
pop
pop
mov
mov
int3
jg
pushf
loopne
adc
sub
inc
pop
je
cmp
push
add
bound
ljmp
test
dec
into
mov
mov
popa
jbe
icebp
mov
jl
xchg
jmp
sbb
jl
sub
hlt
pop
sahf
fisubs
jge
sbb
or
popa
lcall
int3
movsb
dec
rorb
hlt
cmpsl
or
cwtl
inc
dec
inc
push
xchg
je
les
in
cld
add
inc
dec
pusha
xchg
fs
cmc
sbb
pushf
aam
jg
pop
pushf
cld
aas
adc
sub
inc
xchg
jl,pn
jp
mov
mov
push
cld
jl
sbb
xor
and
jl
fisttpl
sbb
sub
mov
jnp
jl
adc
or
mov
mov
in
cld
dec
cmp
dec
in
test
pushf
sub
in
xchg
or
push
scas
mov
pop
push
insb
fidivrl
xor
outsl
rcr
pusha
in
mov
clc
sbb
xor
js
insb
mov
xor
in
and
or
inc
mov
idivb
fidivrl
ss
insb
mov
mov
insb
mov
cmp
jnp
es
jl
xchg
and
sub
stos
xor
push
in
mov
jecxz
pop
xor
adc
fsub
hlt
and
je
mov
mov
hlt
jge
and
jle
imul
aam
cmpsb
call
sub
mov
and
out
fbstp
aas
sbb
xor
jp
jo
out
test
sub
int3
test
mov
sahf
cld
cmpsb
call
lock
sub
sbb
scas
mov
fbstp
push
or
js
cmp
adc
mov
mov
nop
mov
and
lret
dec
aam
fsubrs
popa
sub
dec
xchg
push
adc
js
sbb
dec
sub
xorb
xor
sbb
cmp
inc
rorl
push
das
mov
xchg
sub
xchg
or
ds
mov
xchg
addb
mov
scas
hlt
xor
pop
icebp
pushf
xchg
shrb
jle
loop
adc
sub
js
fs
add
ror
mov
dec
sbb
push
jl
ja
imull
xor
lock
out
inc
inc
mov
and
je
pop
xchg
lcall
lock
scas
negl
lods
cld
sub
fadds
jbe
hlt
aas
clc
cmp
xor
dec
sub
fistl
cli
lods
dec
sbb
sbb
cmp
push
push
insb
xchg
loopne
mov
enter
cld
cmpsl
adc
es
pop
mov
and
dec
push
dec
push
push
or
imul
adcb
notl
adc
xchg
mov
add
mov
leave
hlt
push
cmpb
test
mov
and
lcall
sarb
cmp
xchg
adc
sub
inc
cltd
stos
je
sahf
mov
jecxz
jl
clc
inc
sub
sbb
push
stos
mov
cs
push
mov
out
les
outsl
fsubs
jno
lock
sbb
push
int
lods
pcmpeqd
jo
jl
sub
ret
jo
movsb
sbb
lods
xchg
fisubrl
mov
mov
shlb
sbb
xor
and
add
or
dec
je
xchg
jl
xchg
mov
hlt
ljmp
sbb
test
add
xchg
je
mov
jg
sbb
xor
or
mov
cwtl
jl
pop
or
hlt
and
jp
mov
and
ljmp
mov
movsb
jge
fmull
test
ljmp
in
idivl
add
fs
pop
inc
mov
test
hlt
xor
cs
push
sbb
xchg
popa
cmp
mov
mov
xchg
repnz
add
pop
jl
fdivl
sub
clc
sar
cmp
xchg
loop
test
call
shr
fdivp
js
sub
adc
repz
and
ljmp
push
sbb
cld
int3
dec
jmp
cmpsl
inc
mov
fmuls
sub
cmp
pop
xchg
xchg
pusha
jge
pop
push
cwtl
or
ja
ljmp
imul
xor
mov
jle
ds
movsl
sbb
and
js
dec
add
repnz
mov
arpl
lods
mov
mulb
jl
rclb
addr16
fsubs
fdivrl
mov
or
push
xor
cwtl
mov
push
test
in
mov
sbb
jmp
enter
scas
outsb
fsubs
call
or
clc
sbb
add
sub
ja
ljmp
and
pop
out
nop
cmp
or
out
adc
testb
mov
inc
xchg
xchg
call
push
cmp
pop
cmp
out
sbb
push
jecxz
sbb
cmpsb
loopne
jb
dec
ror
in
push
mov
push
pushf
cmp
adc
push
sbb
test
lods
dec
les
loope
xchg
dec
xchg
enter
rcr
adc
or
push
in
call
test
ss
lds
aam
or
push
cmpsb
mov
push
nop
pop
xchg
or
or
test
inc
daa
inc
and
push
shrb
sub
dec
fadds
jl
xchg
test
inc
aam
mov
je
rol
dec
std
sub
adc
lods
hlt
imulb
fnclex
or
and
fs
out
insb
xor
dec
lods
in
imul
and
inc
mov
sti
sub
dec
lcall
test
lea
xchg
mov
enter
cmp
inc
inc
sbb
aam
inc
fsubrs
mov
idivb
sub
mov
jg
push
push
or
cmpsb
insb
sarb
jbe
out
cmp
xor
inc
es
outsb
push
popa
sub
mov
shlb
add
adc
sub
push
mov
jo
mov
mov
xchg
adc
mov
sub
xor
fmull
adc
xchg
or
dec
add
hlt
data16
out
and
mov
addr16
daa
jl
subb
mov
loopne
lock
adc
mov
cmpsb
ljmp
inc
or
cmp
sub
jbe
cld
lcall
sbb
clc
icebp
adc
mov
mov
cmp
pop
xchg
rorb
jge
jnp
jle
jbe
movsl
je
mov
mov
jl
push
cwtl
test
and
jmp
lret
jno
outsb
jle
pusha
mov
or
popf
pusha
push
jge
dec
xchg
test
mov
and
aam
mov
sbb
and
xor
sbb
inc
mov
in
pop
aam
std
mov
jl,pn
inc
ljmp
jno
and
cmp
cmp
in
nop
jmp
ljmp
test
cmp
mov
jl
shl
jl
into
ret
xor
dec
mov
push
pushf
lods
negb
lods
ficompl
aam
pop
jmp
loope
mov
pushf
add
mov
mov
fs
push
pushf
sar
dec
loope
pushf
cmp
test
adc
idivb
push
sub
jp
nop
lods
xchg
pushf
les
and
test
lock
mov
pop
je
js
mov
mov
out
test
jmp
loope
pushf
aam
shl
and
mov
shlb
inc
popf
xor
cmp
insb
pushf
sub
test
mov
jle
sub
jb
test
pop
xor
pop
or
sbb
add
icebp
fdivp
loopne
clc
loope
aad
jge
pushf
outsb
jle
mov
sbb
push
sub
dec
rclb
test
popf
and
stos
xchg
push
jmp
and
adc
out
sbb
cs
push
aad
xchg
adc
or
pop
pushf
inc
divb
add
cli
out
push
mov
mov
fdivrl
imul
sarb
out
or
fisubs
dec
dec
cmp
inc
stos
mov
lcall
adc
pop
sub
int3
js
adc
rcrb
hlt
fsubr
add
ficoml
xor
cmp
fsubr
fisubl
rcr
aam
jle
fdiv
fsubr
in
lock
adc
pop
mov
fs
fnstsw
mov
pop
lods
sbb
xchg
in
jle
shr
and
push
mov
fs
mov
mov
enter
call
cwtl
mov
fidivrl
js
movsb
popa
push
mov
adc
inc
sub
adc
jmp
mov
mov
popa
adc
enter
arpl
test
cmp
inc
popa
adc
cld
mov
sub
int3
popa
inc
hlt
sbb
nop
ss
pop
sub
and
repnz
cmpsb
pop
popa
sbb
sbb
jl
adc
mov
sub
nop
add
int3
pop
add
cmp
in
repnz
or
rcrb
sub
not
push
mov
arpl
cmp
jmp
out
cld
cmpsl
cmp
adc
and
cmp
cmp
cmp
fcomp
pushf
insb
fcmovne
fs
push
xchg
repnz
movsl
movsb
int3
jge
sbb
les
faddl
push
or
fdivs
jg
pop
rcrb
mov
in
jg
pop
cmpsb
sbb
jo
adc
ja
jmp
mov
lods
rol
mov
mov
imul
dec
xor
pop
push
adcb
enter
stos
jle
lods
jmp
fisubl
enter
movsl
cmp
xor
jl
ror
out
call
sbb
sbb
push
sub
push
push
ret
fs
mov
clc
pop
pushf
icebp
mov
mov
les
hlt
push
jle
mov
inc
das
arpl
cld
dec
mov
adc
int3
jmp
add
dec
imul
xchg
and
fcoms
jle
nop
mov
mov
mov
mov
les
pop
popa
mov
xchg
mov
dec
xchg
pop
jle
cmp
push
xor
into
out
pusha
sbb
xor
mov
fdivrs
jle
into
inc
pop
ss
je
aam
hlt
xchg
cwtl
xchg
mov
rcl
hlt
cmp
cmpsl
and
xor
movsl
into
jg
mov
into
jle
shr
or
shrb
into
jl
aam
nop
mov
mov
and
lock
mov
push
lods
sbb
push
je
mov
add
mov
fs
mov
mov
enter
mov
enter
jp
cmp
test
and
add
popf
inc
sub
push
dec
inc
mov
test
mov
sub
or
add
rolb
and
pop
sarb
cli
xchg
sub
imul
andl
and
jmp
clc
cld
cld
push
add
adc
adc
repnz
sub
push
cmp
out
xchg
dec
xchg
fs
lret
int
xchg
in
in
in
into
jmp
clc
mov
push
dec
repnz
pop
arpl
test
sub
movsb
mov
or
aam
fs
mov
cwtl
scas
into
addr16
and
std
enter
cmp
outsb
pusha
fiaddl
fcomps
mov
rol
push
adc
jl
loop
jg
pop
mov
hlt
mov
movsb
or
ja
jmp
mov
aam
loopne
inc
out
sub
movsb
hlt
ret
imul
aam
cmp
adc
and
nop
aam
push
pusha
fucomp
mov
in
sbb
sub
into
mov
inc
jg
pop
mov
push
add
mov
sub
scas
push
dec
ss
xchg
mov
popa
test
out
into
or
push
into
mov
pop
cld
cld
aas
and
push
cmp
pusha
xchg
push
cmp
mov
les
dec
add
sub
mov
mov
mov
adc
mov
xor
cmc
pop
jle
inc
jp
stc
aam
popa
jb
std
movsb
xor
enter
imul
clc
push
jg
cmp
fs
js
test
shrb
dec
adc
push
adc
movsb
sarb
sub
je
fsub
lods
mov
sub
inc
xchg
cs
jnp
std
mov
outsl
in
repnz
rcll
pushf
jl
scas
or
or
imul
xor
insb
mov
arpl
jl
push
cmpsb
lods
addr16
and
adc
push
in
mov
xor
stos
pusha
movsb
jle
sahf
out
rcr
call
dec
mov
sbb
int3
xchg
push
inc
imul
test
mov
mov
push
cmp
and
pop
and
cmp
xchg
jg
pop
jle
clc
repnz
int3
push
aam
test
cwtl
mov
and
int3
dec
xchg
je
lods
mov
sub
ds
cld
movsb
add
and
mov
mov
arpl
insb
mov
and
cltd
loopne
ret
popa
or
enter
or
and
jmp
lcall
movsb
mov
and
sub
inc
mov
cld
loopne
rclb
or
clc
popa
fs
mov
hlt
push
cmpsb
shlb
sbb
sub
cmp
sub
fcoms
fldenv
inc
mov
int3
or
ja
out
cld
or
ljmp
mov
ja
out
adc
movsb
push
in
mov
cmp
push
hlt
cmp
push
into
out
mov
enter
adc
mov
andb
dec
loop
mov
lock
xor
lret
dec
es
jnp
aam
fdivrl
and
xor
out
sbb
test
js
push
mov
add
push
clc
out
adc
jo
push
xchg
xchg
jp
mov
mov
sbb
xchg
out
push
ds
arpl
cld
sbb
or
xor
out
pop
test
mov
arpl
aam
insb
sbb
or
jecxz
sbb
movsb
cld
mov
add
jge
das
je
xchg
arpl
clc
adc
push
sbb
cmp
cmp
dec
dec
cmpsb
cld
jp
adc
adc
dec
arpl
rol
adc
xchg
clc
lods
aas
push
lret
aam
push
mov
xorb
cmp
mov
in
loope
mov
jge
inc
scas
cmp
push
adc
ljmp
ds
repnz
cmp
mov
cmp
mov
mov
ja,pn
ljmp
push
xor
jecxz
jno
mov
stos
out
enter
lods
loopne
hlt
sbb
or
in
ljmp
in
repnz
scas
ds
xchg
mov
sub
cmp
jl
push
dec
mov
test
xor
sbb
add
ljmp
sbb
cld
nop
clc
loope
xchg
jl
push
sbb
sahf
inc
sub
push
mov
cmp
dec
aam
and
sbb
push
and
or
cmp
cmpsl
fmull
push
add
jl
push
mulb
ljmp
mov
push
fisubrl
cmp
cmpsl
in
xchg
push
cli
mov
mov
jl
push
test
lock
ljmp
jmp
mov
jb
aam
rorl
push
aam
jg
push
popa
fs
pop
jge
je
ljmp
xor
outsb
mov
xchg
xor
xchg
cli
lods
jg
sbb
and
js
dec
push
mov
insb
out
jo
push
sub
mov
mov
cmp
dec
jmp
test
jl
and
popa
jb
insb
jg
data16
mov
push
into
push
shll
mov
leave
add
push
or
sbb
xor
mov
shlb
ret
leave
mov
mov
jg
inc
cmc
loope
xor
pusha
jp
repnz
icebp
idiv
lock
ljmp
fidivrs
rolb
into
dec
dec
xchg
jg,pt
cmp
xor
cmc
or
into
push
shll
mov
xor
jp
insb
inc
jp
test
mov
jno
cmpl
cmp
jmp
es
add
add
sub
cmpsb
and
xchg
or
cmpsb
sbb
inc
or
or
jl
inc
das
paddq
movsb
and
mov
cli
cs
loopne
or
lock
cmpsb
xor
sbb
inc
push
xchg
les
mov
ljmp
pushf
and
repnz
push
shll
inc
push
mov
jg
cli
cmc
repnz
jge
xor
pminsw
mov
test
packsswb
lret
cli
jg
repnz
in
jg
out
loope
xor
jg
aam
into
mov
cmc
bnd
test
cmc
jecxz
leave
sarb
pop
in
mov
movsb
in
push
add
add
ljmp
or
jg
sbb
mov
and
sbb
sbb
pop
out
and
inc
enter
xchg
xor
ret
leave
mov
xchg
ret
leave
jle
push
jp
arpl
jb
sbb
mov
pop
cs
test
inc
or
test
cs
test
adc
rorl
xlat
jp
inc
push
or
mov
lods
repnz
scas
mov
scas
mov
in
push
mov
adc
movsl
or
int3
cli
and
cmp
push
and
sbb
or
jge
push
xchg
cmpsb
loope
int
push
mov
cmp
jl
js
or
cmpsb
in
ret
clc
add
cs
cmpsb
xor
push
and
mov
scas
ljmp
sahf
or
xchg
movsl
adc
jl
or
add
add
cmpsl
and
mov
out
outsb
loop
fdivl
rorb
int3
ret
mov
jl
and
ret
cmpsl
movb
xchg
sbb
inc
jl
inc
add
mov
inc
scas
mov
mov
out
mov
mov
mov
lock
adc
mov
or
add
or
popa
test
aam
push
rclb
addr16
dec
xorl
mov
fsub
cwtl
stos
fidivrs
insb
enter
call
jno
add
sbb
push
movb
mov
loop
mov
jb
push
movb
repnz
push
inc
out
repnz
xor
nop
ret
mov
orb
xor
add
in
mov
sbb
mov
mov
and
adc
sub
xchg
cmp
push
stos
sbb
sub
push
insb
mov
push
jno
push
cwtl
or
mov
or
jmp
pushf
jp
or
dec
loop
scas
mov
hlt
in
stos
int3
and
xchg
cli
cmpsl
jl
dec
testb
stc
fs
cli
jecxz
stos
pusha
ja
jmp
add
test
data16
js
jl
dec
mov
push
int3
andl
jl
push
outsb
mov
inc
cmpb
inc
dec
cmp
mov
inc
jg
inc
in
sarb
dec
mov
sub
xor
xorl
or
mov
dec
jb
mov
shl
inc
sub
cmp
cmp
loope
xchg
cmpsl
jl
dec
xor
dec
dec
dec
push
and
mov
icebp
or
push
call
add
addb
cmp
add
mov
push
xor
std
push
or
cmp
mov
int3
cmp
int3
cli
add
out
cmp
sti
out
ljmp
rolb
inc
dec
inc
cmpsl
imul
cmp
sub
js
test
mov
sub
pop
xchg
and
sub
cmp
inc
and
in
fs
mov
push
ljmp
xchg
pop
movsb
push
enter
pop
fldenv
sarb
data16
inc
in
and
repnz
scas
jb
scas
xchg
push
sub
inc
xor
pop
mov
dec
add
cld
pop
mov
dec
in
ret
xor
std
leave
push
std
leave
or
leave
push
add
ss
leave
or
sub
out
sbb
int3
sub
mov
iret
aam
pusha
xchg
sarb
push
lods
test
xchg
sub
call
fdivrs
cmp
xor
jbe
mov
dec
into
adc
jl
aam
mov
mov
mov
mov
loop
xchg
cmp
inc
insb
out
push
cmp
jl
in
outsl
aam
sbb
mov
inc
mov
dec
push
pop
cmp
mov
or
sub
and
push
cwtl
sarl
mov
dec
mov
pusha
add
mul
jmp
pop
cmp
pusha
xchg
fcmovb
fmul
mov
cmp
or
loopne
clc
or
xchg
hlt
js
nop
fidivl
xor
xchg
fdivl
xchg
cmp
mov
mov
movsl
lock
jle
mov
jo
test
mov
clc
je
cmp
sahf
push
std
fdivl
inc
inc
les
or
fs
sbb
out
fdiv
addb
mov
insl
push
pushf
cmp
xor
mov
aas
adc
push
cmpsb
sbb
push
adc
bound
outsb
lfs
ljmp
pop
cs
cmp
ds
inc
daa
inc
and
dec
ja
notl
pop
lea
data16
aam
mov
xchg
push
xchg
push
lcall
adc
mov
mov
mov
push
push
lret
rcrb
movsb
dec
fimull
dec
out
daa
repnz
mulb
cli
daa
daa
add
push
and
ss
ja
notl
negl
negl
mull
out
sub
insb
ljmp
hlt
mov
push
jge
cs
jp
arpl
imul
push
sbbb
mov
data16
sbb
push
mov
ds
vcvtsi2ss
dec
je
xchg
ficoms
mov
mov
xchg
pop
ljmp
loop
inc
cmp
daa
sbb
clc
cmpsl
nop
sbbb
xchg
sahf
xchg
push
lods
and
test
mov
lock
test
dec
xchg
and
xor
fldt
ja
mov
pop
nop
push
xchg
add
jne
jecxz
cld
pop
test
mov
pop
jl
call
pop
cltd
sbb
arpl
addr16
inc
js
xchg
imul
mov
xchg
jnp
pop
ficoms
inc
jmp
int3
fiadds
or
test
mov
mov
call
mov
cmc
push
pop
jns
fidivrs
out
in
or
push
xchg
fnstsw
pop
jle
or
cmp
jge
mov
mov
call
out
mov
mov
pop
lcall
sbb
sti
cmp
int3
inc
stc
and
sbb
in
sbb
dec
xor
add
cs
je
cmc
lret
imul
push
push
xchg
mov
ffreep
xchg
push
stos
popa
sbb
jmp
pushf
jge
add
pop
js
mov
push
mov
mov
sub
cmp
mov
sub
popl
and
and
xchg
push
xchg
stos
pop
cld
xchg
add
fistpl
call
push
in
mov
adc
lret
inc
fistpl
addr16
push
mov
jo
push
sbb
jbe
mov
xchg
pop
jmp
movsb
push
ret
pop
outsl
mov
in
fstl
cmp
movsb
xchg
and
add
sbb
cs
pop
push
xchg
aas
mov
cwtl
fadd
inc
das
dec
mov
lcall
lock
and
mov
sub
and
jmp
test
in
pop
cltd
dec
mov
lods
jns
ret
pop
lods
xchg
jmp
xchg
cmp
std
test
call
test
in
andb
ljmp
lock
jg
cltd
testl
jo
xlat
sbb
in
push
insl
sbb
sub
push
test
jno
add
xchg
xchg
inc
jp
ljmp
clc
mov
jb
pop
jp
mov
mov
adc
pusha
mov
push
pop
sbb
push
cld
bound
adc
inc
sub
xchg
push
and
sub
mov
psubq
mov
dec
sbb
push
ljmp
cmp
mov
pop
push
xchg
mov
adc
jge
cli
push
test
mov
fsubrs
or
aam
cmp
adc
lret
mov
sub
int3
push
nop
rcll
insl
inc
cmp
cltd
sub
cmp
push
leave
les
bound
jge
push
jnp
nop
sbb
adc
stc
cmpsl
jbe
repnz
cld
inc
imul
subb
inc
mov
xlat
push
cltd
mov
out
cmp
lcall
dec
out
shll
push
xchg
imul
pop
lcall
lret
adc
ss
xchg
pop
cmc
repnz
test
push
mov
cmc
pop
sub
insb
movsl
mov
popa
adc
add
popa
push
movsb
mov
inc
ljmp
js
das
fsubrl
fsubrs
pop
mov
jae
lret
fsubp
lcall
mov
pushl
adc
test
xchg
cmpsl
dec
push
imul
xchg
out
cmp
mov
mov
xchg
lret
jge
dec
adc
jns
mov
lahf
sarl
and
lret
jb
xor
sub
shlb
mov
data16
mov
out
mov
jg
push
sbb
bound
mov
lods
shrb
push
inc
popa
notl
push
lahf
test
sub
mov
or
sub
cmp
cmp
mov
mov
pop
inc
mov
or
cmpsb
roll
movsb
es
mov
pop
movsl
xchg
into
mov
popf
mov
in
lock
lcall
add
xchg
push
xchg
popa
pushf
push
jl
ds
divb
mov
inc
cltd
mov
pop
out
push
shlb
gs
dec
into
lock
mov
dec
mov
sahf
call
arpl
xor
xchg
mov
push
push
adc
dec
fstpt
add
cld
sarb
fcomps
xchg
mov
mov
lret
adc
ss
je
cmp
outsb
icebp
pusha
movsb
cmp
xchg
dec
or
movsl
daa
loop
cmp
push
insb
mov
data16
jne
fsubr
dec
push
fldt
sbb
cmp
and
xchg
pop
mov
xchg
pop
dec
sarb
mov
fcoms
sbb
xlat
addr16
shr
sbb
pop
cld
add
dec
addr16
cmc
push
out
cmpsb
je
loop
in
dec
mov
lea
mov
mov
inc
nop
inc
mov
into
cmp
mov
adc
popa
xchg
out
aad
insb
push
sub
xchg
cmpsb
decb
jo
leave
movsb
dec
sbb
mov
aad
push
fadd
js
add
arpl
mov
cmp
inc
mov
mov
and
and
jg
xchg
jl
adc
adcl
es
cwtl
fdivrl
cmc
mov
adc
push
mov
lea
push
cmp
mov
js
ljmp
sub
enter
int3
jmp
das
fists
pushf
sub
loopne
and
pushf
fsubrl
out
inc
in
popa
jle
pop
sbb
mov
test
jne
in
inc
push
push
xchg
sbb
mov
test
outsb
int3
mov
push
sub
xchg
pop
outsl
xchg
xchg
xchg
test
cmp
inc
dec
dec
orb
dec
stos
mov
jmp
xor
out
scas
mov
mov
orb
xchg
scas
clc
mov
sub
add
mul
sbb
dec
xchg
outsb
xchg
dec
sbb
inc
sahf
and
cwtl
clc
mov
popa
orl
and
xchg
mov
mov
cmpsb
ss
mov
je,pt
jecxz
stc
ret
jg
mov
dec
pushf
pop
push
jl
and
push
jl
sahf
xchg
or
xchg
jp
mov
fcomi
outsl
lret
jmp
inc
add
and
dec
xchg
mov
jns
mov
mov
mov
popa
cwtl
daa
cmp
mov
xor
andl
mov
xchg
ret
sub
xor
popf
add
sbb
lret
das
popa
loopne
xor
mov
loope
mov
loop
ljmp
popa
loop
shlb
out
movsl
lods
cmpb
add
adc
jb
push
fmull
push
sbb
xor
dec
or
sub
xchg
pop
and
xchg
push
adc
imul
test
fisubrl
mov
call
jle
jecxz
cmc
das
out
inc
outsb
push
add
jno
jbe
push
or
mov
cli
xchg
faddl
sub
or
fsubr
call
movsb
xor
xor
cmp
mov
xchg
inc
xchg
inc
out
shrl
add
loope
ss
insb
jbe
xchg
ljmp
cwtl
xor
mov
jbe
push
cmpsl
mov
scas
sbb
in
call
lret
bound
dec
fcomp
mov
mov
arpl
dec
adc
gs
jne
jne
ljmp
faddl
in
xor
mov
call
cltd
out
cmp
call
or
push
in
mov
fdivr
clc
clc
fsubrp
cmp
mov
inc
fldl
push
call
xchg
and
faddl
jmp
fiaddl
mov
push
decb
nop
mov
nop
and
popa
xchg
inc
incl
inc
popf
ja
add
aaa
out
je
and
test
shrb
sbb
mov
imul
fistpl
jg
cmp
bound
pop
xchg
cmpsb
shll
cwtl
mov
mov
jo
push
sub
xchg
mov
in
loopne
pop
cmp
pushf
mov
clc
nop
js
mov
mov
sub
mov
lcall
jge
dec
cmp
fistl
data16
jecxz
icebp
or
nop
fdivr
mov
pushf
lret
pop
mov
rcr
push
inc
sbb
mov
outsb
push
mov
push
fcompl
xchg
mov
jne
pop
inc
xchg
push
cmp
adc
fcompl
movsl
mov
test
and
pushf
mov
das
cltd
inc
movsl
cmp
inc
lcall
mov
mov
and
imul
scas
jge
ss
je
out
jb
arpl
negb
hlt
jno
dec
nop
andb
add
pop
sub
bound
lods
fisttps
sub
push
push
or
loopne
mov
outsb
mov
hlt
test
sub
mov
fisttps
add
clc
insl
xchg
out
addr16
scas
inc
popa
xchg
add
insb
mov
mov
clc
loopne
or
call
or
pop
push
dec
test
out
mov
mov
movsb
andb
popf
test
mov
test
into
xor
pushf
xchg
in
mov
shr
sbb
loope
ret
arpl
xor
loopne
sub
cli
shrl
cltd
rorb
mov
mov
fimull
sbb
test
pop
cs
push
sub
in
mov
int3
adc
stos
out
and
in
push
inc
test
rorl
test
cli
rclb
adc
inc
outsl
mov
or
scas
mov
fists
cld
sub
test
loope
std
ss
into
movsb
lret
jg
sbb
mov
cwtl
sub
pop
ret
xchg
call
mov
xchg
int3
xor
jne
xchg
jno
test
push
mov
mov
ret
jge
mov
push
cmp
lock
mov
outsb
fsubrs
nop
xchg
loope
mov
or
xor
jne
pusha
clc
adc
mov
test
jl
ret
xor
push
popa
imul
cmp
dec
sarb
lock
scas
ret
sub
or
and
mov
mov
sbb
jp
jg
xchg
xor
cwtl
popa
dec
xchg
stos
cltd
outsb
arpl
or
mov
xchg
pop
psraw
dec
jmp
jp
movsb
cmpsb
movsl
sbb
push
dec
mov
pop
jbe
inc
cwtl
ljmp
sbb
add
dec
jb
stc
fdivrl
cmpsl
fnstsw
cltd
xchg
xchg
arpl
sub
adc
jge
sbb
call
mov
shrl
insb
cmpsl
cltd
idiv
jl
mov
nop
rorl
pop
or
jne
push
cmpsb
sub
mov
xchg
mov
popa
nop
ljmp
mov
lods
int
mov
jecxz
repnz
mov
xor
or
pop
mov
and
pop
rolb
lods
loope
xchg
pop
out
cmpsl
mov
iret
cltd
sahf
push
sarb
jge
filds
rolb
cmc
dec
mov
cmpsb
xchg
sbb
jmp
cli
mov
pop
xchg
xchg
idivb
adc
or
pop
fwait
cltd
fcompl
and
add
nop
push
sub
xchg
lcall
mov
mov
push
sbb
jle
pop
ljmp
sbb
ret
dec
inc
mov
or
mov
xchg
scas
jo
mov
loop
mov
mov
push
cli
xlat
pop
sub
pop
sbb
enter
cltd
or
xchg
jg
cmc
jmp
clc
loope
and
or
pop
mov
stos
add
sub
sahf
into
ljmp
popf
add
mov
push
fisubrl
cwtl
cmpsl
xchg
adc
jge
sub
push
cmpsb
scas
xor
out
xchg
jb
pop
pop
mov
add
pop
xchg
ds
mov
pop
subl
jns
mov
xchg
cltd
xor
cmp
cmp
divb
imul
movsl
mov
sub
stc
js
cli
aam
test
cmp
dec
icebp
xchg
sarl
push
pushf
pop
int3
mov
pop
sbb
mov
mov
les
pop
pop
inc
nop
test
push
ljmp
and
js
icebp
or
xor
cmp
imul
ljmp
roll
lea
rcrb
inc
and
push
out
mov
js
pusha
lock
mov
pop
xchg
xchg
fisubl
or
fimull
mov
and
fdivrs
and
or
sbb
out
mov
movsl
popa
xchg
outsl
xchg
jns
add
mov
mov
test
pop
jo
ret
js
mov
xchg
adc
mov
pop
nop
lods
ljmp
and
xchg
adc
pushf
movsl
inc
inc
cld
adc
pop
es
sub
cwtl
test
loope
xchg
mov
movaps
mov
call
lea
fstps
les
lods
aaa
in
pop
fadds
dec
xchg
test
loop
sbb
std
data16
jp
xchg
outsl
jp
mov
jb
xchg
stc
mov
shrb
in
fidivrl
cmp
shlb
adc
scas
lods
addr16
je
add
ljmp
leave
push
sub
adc
and
jecxz
mov
enter
adc
sbbb
out
cld
xchg
iret
dec
or
inc
push
dec
inc
out
lods
je
cmc
dec
pop
and
jge,pn
sub
int
push
out
stos
dec
adc
lods
cmp
cmp
cmc
xor
mov
push
and
add
fidivrl
iret
mov
int3
repz
push
jle
pop
xchg
and
js
pop
imul
cmp
imul
cmc
xor
mov
dec
push
mov
xchg
jmp
imul
inc
and
data16
data16
pop
push
add
rcr
mov
push
clc
bt
ror
push
call
and
jmp
mov
adc
in
call
jno
and
ret
repnz
mov
clc
xchg
clc
rorl
lods
add
and
loop
adc
cmp
shlb
sub
sbbb
out
clc
test
jmp
scas
xor
adc
into
outsl
add
pop
sbb
mov
xchg
enter
mov
ss
ljmp
mov
inc
rorb
dec
pusha
pop
sbb
jl
sbb
push
cwtl
push
pop
fucomi
mov
xchg
scas
jbe
adc
cmpsl
ds
loop
bnd
xchg
loop
cs
fildll
push
insl
ret
jo
sahf
out
mov
and
sarb
adc
mov
xchg
xchg
dec
adc
adc
stos
shrb
dec
xor
mov
std
dec
imul
jne
or
dec
mov
mov
or
mov
mov
fisubrl
daa
mov
hlt
add
fadds
add
mov
scas
rcrb
mov
dec
fiaddl
mov
loop
nop
out
xchg
push
mov
or
xor
fs
and
xchg
test
cltd
in
mov
fcmove
cmc
leave
push
cmp
push
sub
loop
add
and
pop
xor
call
je
popf
xchg
add
mov
das
mov
iret
lcall
ror
dec
out
mov
adc
enter
decl
fistl
mov
jmp
pop
fsubrs
scas
mov
jl
into
rolb
cmp
push
push
subl
jmp
add
test
push
dec
xchg
lock
sub
jle
std
in
xor
nop
jl
call
sti
pusha
icebp
fmull
clc
rcll
sbb
mov
adc
scas
or
push
arpl
scas
push
imul
je
and
and
aad
mov
ljmp
push
pop
and
mov
ljmp
mov
jp
adc
repnz
fadds
fistpl
insb
inc
popa
jno
enter
cmpsb
int3
cmc
les
rcll
or
jge
mov
sub
movsl
add
mov
sbb
xchg
pop
dec
push
sar
jg
mov
shr
ret
sahf
sar
fwait
rolb
push
test
movd
mov
push
jmp
push
and
adcl
int
fsubrs
or
shlb
or
in
int
into
mov
stos
cmp
stos
sarb
push
xchg
or
adc
aas
sub
test
jge
scas
pop
sahf
mov
testl
xor
mov
cmp
xchg
ret
ja
subl
pop
inc
ja
imul
xchg
sahf
filds
xor
lea
sbb
in
jno
insb
jmp
cwtl
add
adc
out
or
pop
xor
inc
jnp
dec
jo
scas
hlt
xchg
cmpsl
rcrb
xchg
mov
mov
push
outsl
out
popf
cli
lds
jle
ret
in
mov
push
mov
cwtl
mov
inc
add
xor
add
jle
shll
xchg
shlb
or
mov
in
pop
fimuls
adc
out
jno
leave
inc
shrl
lds
jmp
jo
aam
xor
lds
sarl
sub
jp
mov
dec
jg
inc
int3
cmpsl
fwait
xchg
sub
imull
das
pop
add
outsb
cld
nop
mov
xchg
mov
stos
xchg
jle
sbb
test
and
fs
jne
shrd
xor
xor
shl
shld
mov
sar
cmc
shr
bt
add
and
mov
call
mov
add
pushf
bswap
not
mov
lea
jmp
pop
ds
jno
int3
dec
in
popf
lock
xor
enter
fisttpll
jo
jecxz
inc
mov
and
sub
out
outsl
ljmp
mov
or
shlb
mov
aad
jge
push
mov
pop
enter
jbe
aas
push
or
test
aaa
lods
xchg
pop
mov
add
and
mov
sbb
int3
fmull
xor
xchg
insl
lea
rorb
inc
or
add
sbb
mov
outsl
es
cmc
test
xor
jmp
inc
inc
push
inc
push
dec
xor
cs
insb
add
adc
push
addr16
xor
push
stos
sbb
push
loop
sbb
mov
lcall
imull
pop
add
lods
cmp
xchg
je
adc
fsubr
mov
dec
push
fadds
push
arpl
test
arpl
insb
pushf
sub
sub
ja
mov
shr
std
sar
mov
fsubr
aam
outsl
dec
std
aam
rorb
pop
fdivl
ret
jno
je
pushf
jmp
push
shl
fsubp
dec
enter
and
dec
arpl
or
pop
insl
pop
cmc
push
xor
and
push
mov
dec
adc
enter
inc
pop
jmp
mov
je
imul
mov
outsl
pop
jae
ja
imul
pop
aas
or
mov
leave
pusha
movb
call
movb
lea
jae
cmp
cmp
cmc
cmc
cmp
jmp
arpl
fs
xor
cs
insb
add
mov
push
jge
jns
test
sbb
add
adc
outsl
iret
and
dec
leave
ss
push
ds
fimuls
data16
jge
add
stos
out
add
mov
cwtl
aas
jp
jb
lods
mov
xchg
cli
pop
cmp
cmovle
outsl
inc
ja
shlb
nop
stc
mov
in
dec
sub
shr
bswap
ror
push
pushf
dec
rol
mov
shld
push
call
xor
ljmp
jae
je
mov
in
cltd
leave
pop
gs
les
outsl
sub
mov
pop
stc
pop
jecxz
sbb
fiaddl
sub
je
fdivl
pop
decl
fdivs
push
sbb
push
or
js
lods
flds
mov
pop
cwtl
xor
sub
mov
jae
mov
lret
mov
gs
rcll
lock
lret
fistl
stos
mov
imul
leave
es
lcall
pop
add
les
ret
xchg
iret
mov
xor
jl
cmp
pop
notl
ds
repz
scas
xchg
jnp
inc
outsl
mov
aas
push
arpl
int
adc
shlb
ljmp
pop
divl
xor
vpshuflw
rorl
dec
adc
cli
mov
clc
mov
loopne
push
cmp
rcll
adc
nop
aam
fiadds
fwait
icebp
call
and
xchg
adc
call
stos
mov
xor
pop
ret
mov
jns
repz
inc
inc
outsb
loope
adc
js
in
pop
cmp
or
mov
hlt
loop
xchg
test
sbb
sbb
add
xlat
shrl
inc
icebp
test
cmp
pavgw
pop
cwtl
adc
cmp
and
push
icebp
pop
xchg
lea
jbe
movsbw
or
clc
sub
shl
mov
bts
stc
shrd
adc
mov
or
ror
add
movzbw
neg
shr
call
inc
fwait
adc
add
add
adc
add
dec
ret
add
add
mov
add
add
cmpsb
adc
add
add
int3
mov
add
lcall
add
mov
add
add
add
fs
add
add
add
add
add
rcrl
add
add
add
adc
add
add
adc
inc
adc
xchg
aas
push
add
pop
push
add
sbbl
add
add
add
stc
cmp
clc
or
jmp
cs
in
adc
les
add
and
adc
push
pop
dec
adc
xchg
pop
mov
adc
jle
sbb
stos
and
in
iret
scas
sub
xchg
aam
sub
cmp
call
pusha
andb
push
pop
fistpll
enter
jae
push
inc
fidivl
and
cwtl
outsl
jnp
jmp
pop
cmp
xor
test
imul
or
dec
push
ja
outsl
or
push
cmp
cmp
jg
in
adc
idivl
pop
lret
dec
out
jle
jp
jle
xchg
mov
jmp
lcall
inc
lea
jae
std
leave
iret
fnsave
xchg
int
cmp
shll
repz
inc
sbb
lret
sbb
xor
into
subl
out
jle
xchg
aas
cs
xchg
jae
hlt
ja
dec
bound
nop
movsl
in
loopne
fcompl
movsb
lahf
jo
mov
and
adc
or
shll
mov
xor
pop
shrl
or
lods
shr
repz
in
in
mov
mov
insl
add
inc
xchg
sarb
sub
mov
mov
jle
je
cmc
xlat
add
in
mov
sar
xchg
test
repnz
inc
sub
sbb
adc
or
pusha
and
push
rcrb
dec
dec
js
ret
fwait
out
adc
push
and
bnd
jnp
xchg
ficomps
mov
imulb
daa
mov
arpl
lcall
inc
imul
int
pop
cmp
int
adc
lock
cmp
dec
mov
cmpsl
nop
jno
inc
js
add
push
sub
sub
sti
in
and
cmpsl
fldcw
fcmove
or
int
dec
jbe
push
xchg
cmp
popa
xchg
xchg
or
add
or
std
in
aam
mov
es
dec
xor
repnz
out
stos
xchg
fimull
ret
inc
pop
hlt
xchg
fisttps
inc
and
xor
xchg
repz
fwait
mov
add
adc
shlb
cmp
mov
sub
stos
add
loope
out
sahf
xchg
push
imul
or
subb
stos
data16
jecxz
pop
popf
imul
inc
mov
add
pusha
pop
cltd
out
in
ret
sbb
test
insb
pop
out
and
int
xlat
aaa
cmpsl
out
push
jno
and
cmc
lret
call
mov
icebp
imul
jae
sub
jns
imul
push
push
add
or
pop
ds
jne
mov
sub
clc
movsl
ss
jno
pusha
cmc
je
fs
mov
mov
test
loop
mov
call
ret
mov
test
mov
jg
pop
pusha
ja
push
pop
cmpsl
pushf
lcall
and
hlt
int
leave
clc
les
insb
clc
sbb
mov
ljmp
mov
or
pop
pop
leave
arpl
mov
xor
cmpl
dec
iret
in
sti
mov
cmpsb
mov
fwait
stos
lahf
ficoms
xchg
psadbw
pushf
test
inc
jne
clc
aam
seta
xor
shl
jmp
mov
clc
inc
mov
pushf
mov
bt
pushl
sub
clc
repnz
jmp
int3
leave
mov
lret
inc
or
mov
xchg
fisttps
or
or
or
xchg
enter
fisttps
or
mov
mov
fisttps
mov
enter
mov
dec
or
lret
inc
mov
fistps
mov
aaa
pop
sub
or
add
jbe
dec
pop
cmp
xchg
repz
arpl
pop
add
jo
sbb
out
jb
mov
dec
adc
cmp
sbb
sbb
sub
lock
test
leave
xchg
jle
aaa
inc
jmp
pop
pop
sub
in
icebp
cld
jne
dec
xchg
icebp
inc
jo
popf
movsb
flds
add
xchg
or
mov
push
loopne
push
add
hlt
aas
sahf
ret
sahf
mov
adc
push
les
sub
or
cmpsb
out
mov
ret
xchg
cmpsl
ljmp
imul
loope
adc
mov
sbb
jp
mov
jp
jbe
mov
repnz
xchg
pop
or
ret
cltd
insl
xchg
and
and
fld1
lds
insl
jp
ja
xchg
iret
pop
jns
adc
xor
push
cs
cli
mov
int
inc
adcl
aad
mov
inc
es
leave
arpl
ss
inc
imul
push
gs
push
or
push
sbb
ja
or
outsb
hlt
aad
lret
roll
push
repnz
test
inc
aad
icebp
push
fldl
lds
aaa
inc
mov
cmc
lods
push
fisubs
popf
stc
sahf
mov
bound
fs
lret
rcrb
and
subb
pop
rcrl
jne
lcall
cltd
in
rolb
movsb
push
psraw
sbb
sub
mov
aam
or
push
es
lret
mov
cmpsb
fwait
into
test
lret
push
jnp
cmc
adc
jno
push
fstl
test
addb
adc
push
shll
mov
pop
sbb
gs
fisubl
xlat
sahf
or
and
mov
pop
lods
lret
vunpcklpd
fsubr
mov
inc
adc
mov
das
push
enter
lds
jne
pop
cmc
hlt
xchg
setbe
inc
shrb
mov
iret
adc
scas
xchg
jnp
inc
insl
xor
dec
adc
mov
adc
dec
push
rclb
je
or
jl
or
add
ret
sbb
fs
jae
pusha
lea
jmp
inc
sbb
repnz
mov
push
mov
inc
ret
pop
iret
mov
sar
jno
and
adc
lods
xlat
fs
push
pop
sub
and
pop
xchg
repnz
add
fildl
or
mov
mov
scas
daa
inc
jg
out
test
add
push
push
call
jg
in
popa
in
jae
mov
repnz
lret
in
ret
dec
dec
aam
mov
mov
jmp
pusha
jmp
jmp
mov
jno
scas
and
scas
xor
sbb
cwtl
xor
je
sub
xchg
je
clc
pop
arpl
xor
aad
sub
pop
js
cmp
mov
push
jns
cmp
mov
mov
lock
dec
push
lds
push
xor
mov
cmp
push
jae
shll
lcall
in
rorb
jg
jae
pop
dec
das
jb
push
push
push
push
pop
je
movsl
ljmp
pop
lret
mov
push
sub
ret
loope
pop
xchg
cmpsl
ljmp
test
xor
arpl
mov
cmp
testb
jae
dec
cwtl
loope
es
stc
pop
xlat
shl
cmpsb
mov
or
adcb
add
mov
xor
sub
dec
ljmp
les
xor
push
je
mov
cmp
in
adc
or
ljmp
mov
les
mov
jno
jns
inc
outsb
lods
popf
cmpsb
jle
adc
stos
fisubl
and
sahf
or
cli
gs
jg
push
repz
add
push
add
adc
mov
mov
ds
mov
dec
jbe
and
jo
xor
lret
push
fs
test
adc
lcall
bound
jnp
and
and
icebp
enter
jb
jne
xor
into
xchg
insl
fnsave
mov
pop
sahf
sub
lods
sub
mov
in
mov
loopne
mov
test
lods
decb
test
pushf
movw
pushf
lea
jne
pusha
jmp
add
dec
insl
popa
addr16
imul
je
outsl
jns
xchg
mov
fistps
mov
adc
push
inc
push
add
mov
pop
arpl
dec
jg
mov
push
cmc
adc
adc
cwtl
xchg
sbb
adc
lods
push
imul
into
js
movsb
inc
or
loope
push
ss
sub
fnstenv
sarb
and
insb
push
insb
xor
test
mov
jmp
add
sub
jmp
or
adc
adc
sbb
imul
cltd
or
cmp
fs
add
call
dec
shl
dec
add
add
fistpl
es
out
call
cwtl
cmp
pop
push
ret
repnz
imul
mov
and
jl
into
inc
sub
adc
sub
or
jno
push
mov
cmp
lea
pop
lret
mov
popf
pop
fidivrs
push
dec
cmp
cmp
mov
push
jge
insl
or
sti
pop
dec
mov
ds
cmpsl
jb
dec
dec
push
push
dec
dec
dec
cs
push
push
add
push
notl
jno
pop
fimull
inc
xor
or
scas
xor
jo
mov
std
clc
test
mov
je
lcall
jne
cmpsb
enter
lret
xchg
lahf
xchg
pop
lcall
mov
and
adcl
ds
cmp
in
hlt
jno
inc
or
out
repz
mov
nop
adc
shrl
jp
and
adc
adc
dec
add
outsb
jno
and
xor
notl
jno
out
out
jb
outsb
adc
out
sti
push
sbb
sbb
mov
jecxz
fwait
pop
sub
pushf
pop
pop
mov
shrl
enter
rclb
pop
mov
mull
sbb
adc
push
push
jnp
adc
xlat
scas
aas
push
and
xlat
mov
lock
pop
fcoms
or
sub
sub
and
insb
or
and
push
xchg
std
out
cld
nop
push
and
sbb
mov
pop
std
adc
fcompl
repz
sbb
pop
xchg
jo
mov
fisubs
pop
add
pop
xor
sub
das
adc
popf
cmpb
stos
repnz
and
adc
add
clc
bt
clc
pusha
sub
jmp
or
clc
adc
addr16
testb
inc
xor
mov
xor
sub
lcall
xchg
and
jnp
cwtl
lds
ds
dec
xchg
shl
adc
fldl
adc
test
inc
and
dec
clc
lahf
rorl
xor
mov
fwait
mov
bound
insl
icebp
and
pop
push
aas
pop
jae,pt
pop
push
arpl
mov
std
lock
int3
stc
push
xor
lea
ja
cmc
sub
not
shld
bt
add
btc
and
lea
inc
mov
sub
ror
jmp
pop
xor
adc
fnsave
mov
pop
jg
testl
out
rorb
scas
cs
in
dec
aam
push
cmp
sub
lea
ljmp
inc
xchg
mov
ja
pop
xor
std
out
pop
inc
sub
and
mov
adc
stos
and
push
mov
es
mov
pop
movd
xchg
pop
and
xchg
cli
and
pop
push
mov
push
sbb
popa
cmp
inc
jne
inc
or
and
xor
xorb
jl
sbb
cmp
sbb
cmp
clc
hlt
cltd
popf
scas
mov
lea
pop
push
cmp
and
mov
shll
jae
rol
xchg
mov
aad
mov
dec
and
int
cmp
inc
and
leave
stos
enter
clc
pop
push
cs
push
xor
mov
or
jo
in
test
rclb
add
popa
pop
adc
pop
cmp
in
mov
and
pop
stc
mov
and
jae
pushf
test
stc
jmp
sub
jno
aas
inc
shll
adcb
jecxz
adc
rcr
pop
pop
or
or
bound
cld
int
enter
hlt
mov
push
int3
pop
ss
and
jp
popa
and
dec
or
icebp
adc
add
sub
test
pop
cmpb
mov
cmpsb
adc
lods
cltd
movsb
xchg
sbb
jle
mov
or
mov
loop
imul
lahf
mov
movl
ljmp
push
dec
jo
sti
adc
jne
jno
pop
sub
int3
mov
cmc
enter
mov
push
fneni(8087
ja
arpl
hlt
lret
or
movsl
fdivrs
xchg
mov
in
adc
pop
dec
shlb
and
ljmp
dec
mov
sub
pop
das
xchg
xor
jmp
into
xor
pop
in
push
mov
lock
out
sti
into
neg
xchg
lods
mov
add
jbe
adc
pusha
push
push
pushf
lea
jmp
lea
call
jmp
lods
xchg
outsb
sti
adc
dec
into
pop
dec
ss
cli
jae
inc
ret
inc
adc
bt
in
leave
mov
shrl
push
pop
test
pop
lahf
in
sbb
jge
adcb
push
pop
add
push
in
mov
fmull
jbe
adc
outsl
or
push
or
jp
repz
in
aam
insb
cmp
cmp
or
scas
jecxz
shr
fisttpl
pop
mov
adc
pushf
push
mov
movb
lea
call
cmp
sub
pushf
lea
jne
call
adc
jno
sti
push
inc
cmp
mov
push
imul
jb
inc
xor
dec
lret
mov
ja
dec
jb
pusha
mov
jns
inc
sub
dec
out
insl
ljmp
int3
pusha
or
test
xchg
jnp
test
ljmp
mov
and
push
mull
inc
das
sbb
je
push
pusha
fwait
repnz
mov
es
fmuls
ds
sbb
daa
sbb
push
pop
add
inc
add
jl
inc
sbb
jae
adc
jmp
lret
mov
pop
push
lcall
jmp
xor
je
and
jno
lock
or
sub
addb
sub
mov
sti
push
shrb
add
scas
add
pop
adc
fistps
push
jns
and
cmp
jl
xor
add
pop
pop
sub
jl
pusha
cmp
push
add
and
and
mov
or
shl
lea
pushl
cmp
test
test
sub
pushf
pushl
popl
pusha
pushf
jmp
movb
lea
jb
pusha
call
xchg
adc
or
add
mov
aam
xor
mov
pop
dec
sub
push
enter
mov
push
push
adc
push
loop
outsb
add
out
sub
mov
inc
jp
jae
shlb
shlb
cs
jg
test
loop
imul
lcall
stos
lcall
jg
mov
push
xchg
mov
int
adc
jne
mov
push
aam
fdivs
nop
mov
lock
mov
cli
insb
jnp
jecxz
mov
inc
les
xchg
test
data16
xchg
sti
nop
pop
out
sbb
in
ds
in
cmc
pop
dec
jne
fwait
lock
xchg
cmp
inc
jno
into
cmc
xchg
stc
movsb
push
or
xchg
mov
gs
insb
sub
sti
movb
fistl
and
xlat
fwait
mov
add
clc
mov
xor
sahf
ljmp
inc
inc
jae
loope
cltd
xchg
std
push
aas
push
dec
jecxz
loop
loopne
cmpb
insl
push
sbb
fiadds
in
mov
jno
adc
out
xchg
xorl
mov
mov
and
jae
jo
add
xchg
lods
jnp
xchg
test
dec
iret
in
push
pop
sub
sub
xor
cmp
cmp
xchg
sub
add
push
popf
aad
mov
adc
inc
leave
pop
xor
mov
leave
pop
or
sbb
repnz
mov
mov
mov
sbb
mov
clc
vpunpckhwd
imul
and
adc
xlat
pop
pop
jg
cltd
gs
mov
or
dec
cli
or
or
negb
mov
dec
dec
sub
lret
mov
rcrb
jge
pushf
mov
pop
stc
jl
adc
or
jo
sbb
cmp
dec
pop
jecxz
add
mov
add
adc
sbb
dec
ret
inc
aas
dec
iret
push
stos
mov
imul
sub
mov
xor
lret
incl
jb
cmp
dec
sahf
pop
xchg
std
lret
xchg
or
inc
push
imul
jno
repz
sub
adc
repnz
xchg
sbb
jmp
cmc
sbb
xor
add
inc
or
pop
cs
adc
add
pushf
lea
jmp
cld
enter
incl
or
repz
mov
lcall
sbb
fstp
mov
popf
sbb
sbb
jbe
cs
dec
rcrb
mov
push
sbb
lret
xchg
stos
jae
xchg
mov
lods
icebp
or
sbb
notb
pop
mul
lret
or
and
cmp
mov
cmpl
or
mov
mov
adcl
loope
sar
cmpsb
xor
into
lea
sub
call
into
cmc
iret
add
jno
orl
repnz
adc
mov
outsb
dec
mov
call
push
fisubrl
pop
lods
sbb
sbb
mov
shlb
into
flds
cli
popf
add
inc
ret
xor
push
cmp
pop
cld
xor
movl
mov
cmp
sub
repz
repz
std
stc
hlt
test
js
or
dec
ja,pn
adc
rcrl
cmp
in
mov
por
lds
cmpsb
xchg
neg
cmpb
mov
inc
ss
rclb
popl
cmc
cmp
bt
cmp
pusha
call
push
lea
call
call
sahf
movsl
jg
adc
mov
subb
dec
jge
and
adc
popa
pop
sub
inc
or
xor
mov
xchg
call
dec
in
lahf
repnz
push
or
and
mov
pop
sbb
jle
cmc
repz
jnp
cmc
cmpsb
aad
dec
fsub
popa
xor
mov
arpl
sahf
mov
shrb
mov
jns
jns
push
fs
jg
xor
mov
push
test
std
aam
enter
mov
pop
mov
cli
add
add
jmp
sub
pusha
pushf
rep
movzbw
mov
push
push
lea
jmp
mov
jno
mov
sub
or
sbb
add
cli
mov
mov
jae
lcall
jbe
push
inc
insl
xor
pushf
cmp
xchg
rep
ss
inc
outsl
push
mov
mov
adc
loope
sub
mov
sbb
fildl
mov
pop
cmp
or
add
insb
cmp
fstpt
inc
in
test
loope
stos
add
jno
adc
jb
sti
fsubrl
jge
sbb
sbbl
js
rcl
sub
stos
lock
je
js
dec
ds
or
scas
les
popa
leave
pop
dec
jne
and
jl
cmp
hlt
push
ds
int
fs
popa
xchg
outsb
in
in
lods
test
fnstsw
ret
mov
sub
sbb
pusha
and
insb
xor
dec
and
push
lcall
stc
bt
stc
mov
cmp
rol
cmc
shr
sar
cmp
lea
xor
mov
test
jmp
xchg
or
movsl
and
or
lret
cltd
cld
lea
mov
in
fucomi
fimull
jb
pop
mov
into
loop
add
push
rcll
or
push
imul
mov
push
hlt
out
push
scas
sbb
jmp
mov
sub
jle
ss
sbb
jl
xor
pop
je
dec
jne
cmp
jno
sbb
xor
inc
movl
pushf
pusha
lea
jnp
push
movl
pusha
push
lea
jmp
fucom
mov
xor
out
cmpsb
push
mov
mov
test
test
mov
mov
into
fnsave
mov
repz
sub
cmp
push
jo
lea
dec
add
daa
test
pop
xor
cmpsb
dec
inc
lret
pusha
test
je
mov
sar
insl
test
js
sub
lret
stc
outsb
inc
roll
divps
outsl
pop
adc
addr16
faddl
ja
mov
and
inc
pop
add
mov
pcmpgtd
push
iret
dec
iret
sahf
mov
adc
lret
loop
in
inc
sbb
loope
shll
xor
addb
cmp
pop
or
jle
sbb
fsubs
andl
add
sbb
out
pop
push
jmp
scas
iret
xchg
mov
fdivp
into
sbb
test
xor
xor
test
add
dec
dec
mov
bswap
test
sub
shr
shld
mov
test
pusha
jmp
out
push
ljmp
and
out
push
sub
shll
inc
sub
push
loop
subb
arpl
push
mov
xchg
jno
fistpl
mov
fildll
inc
mov
mov
and
push
and
clc
push
in
outsl
ret
lods
or
sti
rorl
iret
test
xchg
test
sub
push
add
push
xor
pushf
lods
sub
cmp
or
push
dec
and
roll
mov
xor
dec
cmp
pusha
stc
movsb
icebp
mov
stc
movsb
icebp
int3
mov
adc
push
jmp
inc
pushf
call
cmp
push
adc
sub
dec
fnsave
cmc
mov
call
imul
push
arpl
sub
sbb
and
and
adc
mov
cmp
inc
jg
mov
jmp
inc
push
insl
xchg
xchg
fwait
std
lods
std
adc
and
mov
mov
mov
adc
ja
dec
bound
dec
jb
push
jae
add
fistl
and
pop
cmp
call
lods
addb
jno
cmp
cmp
popa
sbb
test
inc
fbstp
inc
and
push
in
cmp
push
bound
cmpsb
mov
sbb
rclb
or
sub
insl
je
add
inc
inc
dec
sarl
sbb
out
mov
lds
inc
xor
daa
jge
imul
xor
inc
add
xor
inc
jne
push
add
cmp
pop
arpl
mov
adc
notb
mov
dec
fimull
inc
mov
nopl
or
cli
popf
or
add
inc
pop
call
xor
js
jns
movsl
call
cmpsl
sahf
cmp
pop
sub
jg
cli
rcrb
push
pushl
fxch
fdivrp
bound
xchg
adc
incb
iret
xchg
push
nop
sub
loopne
add
push
cmp
or
jp
push
dec
adc
in
adc
push
and
cmpsb
or
jno
pop
xor
je
insb
add
in
lea
mov
fwait
in
cltd
mov
xchg
icebp
outsl
jle
in
push
jg
aad
sub
sti
and
leave
movsb
iret
clc
shrl
insl
repnz
iret
cwtl
imul
and
cmp
xchg
inc
ljmp
repnz
rclb
fwait
lret
jmp
mov
mov
mov
movsl
mov
pusha
push
mov
mov
movb
shr
clc
bt
cmp
jmp
xchg
call
je
adc
ljmp
lahf
out
notb
std
fwait
aaa
lods
addr16
inc
cmp
clc
or
bound
lods
cli
adc
sbb
fldl
ja
cmpb
adc
stos
xor
inc
xchg
cs
sti
scas
add
mov
aam
dec
cs
popf
je
insb
mov
cs
and
mov
cld
cs
lds
and
sbb
dec
popa
add
sub
int
sub
mov
or
jno
les
pop
aam
loopne
les
pusha
mulb
xchg
outsb
ljmp
arpl
sbb
adc
repz
fxam
fst
or
mov
mov
ret
dec
mov
cmp
inc
xor
pop
and
or
jns
cmpsl
mov
cmc
xlat
cmp
icebp
out
lds
fnstsw
nop
stos
test
dec
clc
push
cmp
sub
bt
not
cmc
cmc
add
clc
pusha
cmc
cmc
not
cmc
bt
add
pushf
movw
lea
call
cmp
cmp
bt
cmp
push
jmp
popf
fwait
or
jno
mov
ficoml
arpl
mov
xchg
fsubp
imul
cmpsl
mov
cltd
xor
dec
inc
xlat
dec
jno
and
pop
cmpsb
adc
sahf
xchg
push
jno
adc
repz
mov
mov
jl
scas
xchg
adc
jne
je
xor
rol
push
push
mov
xchg
adc
mov
pop
or
out
jge
ftst
subl
or
cmp
lret
add
sub
in
push
add
inc
jg
or
jno
or
inc
cmp
pushf
add
aas
mov
shll
xchg
push
imul
test
aad
adc
cmp
and
xchg
lds
mov
icebp
stos
ss
jg
cmpsl
sar
dec
mov
inc
xor
or
stc
fldcw
jno
inc
out
mov
push
inc
cmp
fcomip
sub
jmp
test
cmp
push
bound
out
lret
inc
out
xor
loop
cmc
das
loop
sar
pop
sub
dec
adc
adc
jl
and
dec
cs
sub
mov
dec
or
jno
stos
xor
adc
rorb
add
out
fstps
into
mov
jae
lods
mov
or
push
and
mov
pop
add
mov
test
mov
sbb
or
adc
push
fldenv
inc
and
mov
fsub
in
jl
das
ljmp
pop
rorb
adc
push
addb
mov
mov
les
out
jecxz
fwait
stos
loop
and
jl
or
lods
mov
in
adc
and
mov
push
fwait
sbb
dec
bswap
inc
jmp
dec
ret
jo
in
inc
js
addr16
aam
xor
sbb
lahf
fwait
push
into
out
and
fxch
jmp
insl
pop
pop
cmp
movb
ficoms
and
pusha
mov
mov
in
rorl
dec
or
iret
in
insb
jmp
mov
mov
pop
lahf
mov
bound
mov
mov
inc
push
pushl
inc
jmp
add
stc
pusha
cmp
cmp
movb
push
lea
jb
clc
pusha
clc
bt
cmp
movb
jmp
popa
sti
iret
or
jno
arpl
mov
mov
xor
mov
or
mov
aam
bound
push
aaa
test
mov
sbb
mov
aas
xor
aas
inc
xchg
xchg
dec
add
sar
cmp
fwait
icebp
imul
aad
movsl
ret
sbb
les
pop
sub
movsl
pop
sar
in
in
out
cmp
adc
jge
insl
cmp
inc
and
xor
or
jbe
bt
stc
test
mov
movw
mov
movl
lea
je
jmp
call
or
or
mov
sub
fdivl
adc
mov
sbb
scas
test
sarb
push
cmpsl
mov
test
popa
adc
call
das
cmp
sbb
std
std
ljmp
add
outsl
push
jns
adc
fdivrs
ljmp
in
test
insl
inc
push
shr
sub
cmp
jb
and
push
adc
xor
pop
pop
dec
aam
xor
xchg
flds
imul
ret
xchg
cli
inc
pop
xor
adc
jg
addr16
xchg
push
mov
mov
push
notb
pop
cmp
add
out
mov
bound
cmp
lds
mov
or
or
in
adc
dec
pop
dec
js
int
xchg
and
sbb
dec
enter
cmp
jg
movsl
sahf
outsb
xchg
lock
mov
jne
leave
lock
loopne
mov
xchg
mov
scas
pushf
fcomps
adc
jb
dec
adc
or
sti
xchg
ljmp
xchg
jle
push
das
mov
push
inc
dec
iret
lret
clc
shl
jg
out
dec
subb
adc
jmp
sbb
nop
test
sub
and
sbb
lret
stos
inc
and
inc
xor
in
xchg
and
jne
inc
sub
in
mov
add
sub
push
stos
icebp
enter
or
jle
ds
addr16
pop
or
fs
jo
sbb
jecxz
insl
jnp
movsb
in
pop
xlat
dec
and
adc
lds
fldenv
test
es
sbb
jae
push
push
cmp
pop
mov
in
bt
aas
gs
and
movsb
shll
stos
ret
gs
push
loope
fdiv
pop
jb
stc
jb
jno
adcl
leave
les
push
bound
mov
xchg
scas
stc
ss
sub
jg
imul
xor
or
pop
sarl
pop
mov
scas
xchg
ja
out
mov
iret
or
lret
out
mov
hlt
aad
fwait
ljmp
jmp
adc
and
xor
int3
mov
in
insl
add
pusha
inc
hlt
add
sbb
mov
xchg
jle
arpl
hlt
imul
adc
subl
test
dec
out
sbb
testl
daa
fcomp
dec
jecxz
int
jne
stos
ret
pop
rcrb
xchg
mov
mov
ret
scas
repnz
mov
icebp
pop
ficoms
sbb
adc
dec
call
jno
jge
test
clc
or
in
aaa
and
jno
pop
filds
jne
pop
jo
sub
mov
jg
pop
push
ret
mov
xchg
sbb
lock
jl
aaa
and
mov
cmp
cmpsl
insl
ret
rcrb
aas
or
insl
sub
dec
jnp,pn
xor
pop
push
ds
push
stos
fldl
cwtl
adc
jno
dec
fistpl
pop
sti
mov
xchg
or
inc
hlt
adc
push
sub
sbb
out
ljmp
sbb
add
xorl
fwait
loop
leave
jne
jp
add
fidivl
out
int3
mov
adc
aam
lret
or
aas
insl
pop
into
xchg
mov
sub
out
mov
in
stc
push
adcl
inc
sbb
pop
cmp
add
and
sub
fmull
push
dec
or
mov
lea
jmp
cmp
jecxz
adc
add
in
test
pop
pusha
pop
ja
cmp
jg
xchg
test
push
scas
and
jmp
mov
loopne
jecxz
xor
add
gs
leave
inc
or
mov
cmp
pop
adc
fnstcw
add
mov
repnz
inc
outsl
cmp
cmpsb
ljmp
das
adc
jno
sub
aas
rorl
xor
cmp
mov
outsb
adc
fxam
xchg
jge
jns
insl
in
loopne
nop
loope
pop
sub
clc
xor
push
inc
add
adc
sbb
dec
sub
rclb
sar
jo
addr16
push
xor
subb
mov
inc
outsl
mov
pop
ret
adc
jno
pop
fidivl
in
dec
ljmp
fimuls
and
sub
adc
sbb
popa
push
popa
dec
call
mov
push
adc
out
ror
mov
mov
in
xchg
push
xor
lods
fwait
sbb
xchg
xor
push
add
sbb
push
ret
lock
add
sbb
mov
lods
stc
test
outsb
sbb
cwtl
movsb
mov
leave
mov
and
inc
jno
sub
sarb
into
lahf
add
shlb
fsubp
scas
test
out
aam
and
ljmp
pop
adc
jno
xchg
or
ja
xchg
sbb
cwtl
xor
add
jmp
sub
nop
loop
test
lret
dec
cmpsb
fstps
jg
popf
shrb
mov
lcall
mov
lods
dec
fabs
enter
push
xor
add
pop
lcall
insl
sub
inc
and
pusha
cmp
jne
sub
inc
shl
into
xchg
adc
jno
xchg
out
jg
xchg
imul
push
outsl
pop
mov
pop
aad
add
dec
sub
sub
mov
fwait
cmp
inc
insl
mov
das
push
xor
outsl
clc
inc
sbb
cmp
insb
iret
mov
and
push
dec
call
sarl
lock
push
lock
mov
dec
dec
xchg
or
dec
test
insb
fnstsw
inc
cmpsl
pop
out
push
lock
jno
jl
jno
repz
lods
mov
aaa
adc
jecxz
cmpsb
mov
add
int
dec
push
mov
pop
sahf
and
dec
out
loop
lret
addr16
cmp
repnz
xlat
leave
jecxz
in
jle
arpl
jae
sarb
pushf
data16
rorb
shlb
into
pop
les
mov
mov
jno
sbb
pushl
call
ss
inc
adc
jno
pop
ficoms
push
cs
mov
rcrb
pop
icebp
out
sub
je
fistps
jo
xchg
mov
js
sarl
rdpmc
push
inc
out
insl
or
cmpl
pop
pop
je
pop
xor
inc
xor
shl
jle
or
in
mov
lds
in
mov
xor
xchg
outsb
adc
fidivs
push
xchg
push
xchg
adc
rorb
and
mov
ficomps
add
jno
push
xchg
scas
sub
rcrl
std
xor
pop
ret
jmp
and
lcall
pop
add
arpl
test
dec
clc
ret
mov
loop
ds
mov
ja
dec
push
push
mov
imul
je
sbb
pop
mov
push
lea
scas
sbb
pop
sub
imul
adc
cmp
jne
dec
int
cmp
repnz
ljmp
pop
sub
sub
cmpsl
mov
xchg
leave
sbb
inc
imul
stos
push
int3
mov
lock
mov
ret
out
fisttps
add
lods
les
sub
jo
mov
adc
into
emms
or
xor
pop
aam
jl
enter
orl
pop
and
sub
sbb
mov
in
mov
out
mov
wrmsr
or
out
loopne
pop
mov
cmc
sbb
dec
adc
pop
adc
inc
loop
xchg
leave
enter
jne
jecxz
aaa
jp
push
pop
data16
outsb
pop
cmp
or
in
cmp
and
push
adc
add
cwtl
in
pusha
or
in
pusha
push
or
jmp
addr16
mov
mov
outsl
lcall
and
es
in
mov
or
pop
int
cltd
sarb
orb
mov
ret
cmp
dec
jecxz
pop
cmp
or
imul
mov
push
cs
inc
jae
scas
test
xchg
cmpsl
xchg
fists
mov
data16
shl
pop
cld
mov
test
adc
sub
push
ret
scas
ret
outsl
lret
rcrl
xor
push
sbb
mov
call
dec
jno
push
out
scas
add
or
jg
mov
jb
mov
push
lods
mov
or
insl
dec
lret
push
cmp
xchg
fisttps
jmp
mov
mov
push
mov
or
adc
cld
push
adc
mov
repz
xchg
add
push
and
xchg
mov
daa
and
inc
xor
popf
lods
fsubr
mov
lods
xchg
xchg
lahf
loop
popf
je
inc
aas
mov
jp
cmpsl
pop
push
cmp
sbb
sbb
dec
push
test
addr16
int3
mov
mov
jo
push
mov
loopne
xor
sub
mov
lret
pop
and
add
sub
dec
adc
jb
push
ds
jno
inc
jl
mov
jno
xor
les
mov
adc
les
int
icebp
fmul
scas
out
addr16
dec
sbb
pop
or
in
sub
ficomps
mov
rorl
mov
push
add
mov
pop
cmc
or
mull
lds
lret
fdivrl
xchg
push
jle
loope
inc
sub
xor
xchg
sarl
dec
jbe
outsb
sub
daa
jb
es
dec
push
or
test
ss
fimull
xchg
lock
sub
les
xlat
pop
sub
cmp
outsb
out
push
test
aad
daa
mov
call
fs
xchg
std
lcall
dec
and
xor
jp
mov
sub
xor
xlat
inc
and
das
add
loop
mov
push
adcl
pop
xor
cmpsl
ljmp
lods
loope
jmp
mov
inc
dec
jns
push
xor
and
cmp
cmc
jo
sub
mov
xor
test
loope
sbb
and
insl
jecxz
add
jae
jae
mov
mov
iret
sarb
idiv
jg
repnz
mov
fidivs
cli
push
ret
push
push
cmp
mov
mov
xchg
fnclex
push
mov
cmpl
aad
cmp
lods
jo
xchg
stos
sbb
pop
xor
or
push
or
inc
add
push
push
add
cltd
pop
daa
xor
cltd
scas
pop
sub
call
mov
leave
rcll
or
clc
movsb
cmp
inc
mov
aaa
fmulp
sub
jbe
test
mov
ljmp
scas
add
pop
lahf
ds
add
mov
popa
or
in
cmp
hlt
dec
in
jmp
mov
push
xchg
xlat
push
lds
mov
icebp
imul
call
mov
std
mov
divl
dec
pop
outsl
iret
fisttps
imul
ja
lea
xor
mov
cmp
jge
or
xchg
mov
enter
pop
push
int
mov
sub
jmp
lcall
dec
hlt
inc
inc
stc
push
in
xchg
push
push
stos
test
pop
movsl
cmp
push
adc
enter
fisttpl
repz
sbb
jno
clc
jno
movsl
xor
shld
push
adc
dec
fimuls
mov
jle
data16
add
sbb
mov
ja
adc
daa
and
cmp
push
test
mov
jo
xor
push
jae
je
rolb
test
inc
xor
xchg
dec
jb
lcall
out
jmp
jecxz
xchg
ficompl
xorl
fsubp
mov
jnp
mov
into
outsl
ljmp
and
negb
push
jecxz
mov
dec
cmp
roll
xchg
cltd
push
lds
mov
sti
std
sub
mov
xchg
neg
out
mov
addr16
push
add
sbb
and
bsf
bswap
cmp
add
mov
pushf
sub
call
into
cmc
iret
sbb
jno
jae
pop
fimuls
mov
imul
out
icebp
mov
neg
dec
or
inc
jns
call
add
mov
cli
loope
mov
or
xchg
xchg
hlt
lret
aam
mov
pop
lcall
in
cmovle
push
gs
lock
aam
sub
rorl
push
dec
pop
pop
aaa
lods
mov
jmp
and
sahf
iret
xchg
xchg
stos
out
lcall
bound
mov
pushf
push
push
lea
jmp
out
jne
sbb
jno
mov
dec
xlat
jb
mov
dec
mov
sub
adc
aas
scas
hlt
loope
aas
mov
sub
fidivrl
jmp
arpl
inc
dec
xor
pop
mov
sub
ret
jle
xchg
xor
xor
mov
lret
fs
jmp
xchg
mov
fists
cmp
adc
add
xchg
mov
cld
mov
std
lahf
data16
or
dec
enter
mov
fstps
insb
xchg
inc
adc
pusha
pusha
push
movl
call
xchg
test
sbb
mov
mov
outsl
out
imul
pop
lret
push
inc
pop
jle
fidivs
inc
jle
sub
mov
shll
jbe
push
sti
call
sub
fldt
movsb
jae
lcall
outsb
push
or
andl
sbb
cmp
mov
push
gs
shr
lods
xchg
rcrb
sbb
lcall
in
scas
sbb
jle
sahf
pop
mov
xchg
xor
xlat
ljmp
and
cli
jbe
add
pusha
mov
je
xor
pop
ja
add
or
and
in
jne
fsubrs
iret
mov
sbb
sbb
xchg
sti
inc
lcall
mov
ja
add
imul
ja
cmp
or
fs
or
ret
xchg
sbb
mov
jns
push
enter
enter
fiaddl
xchg
lahf
push
or
inc
or
xor
mov
mov
pop
bound
add
lods
cmp
inc
fidivrl
les
fwait
ret
jb
mov
popa
jne
fisttps
mov
mov
pop
repnz
and
rol
lea
stos
jl
repnz
mov
cmpsl
xchg
jmp
popa
mov
jp
inc
cmovb
and
daa
jle
push
shll
push
adc
adc
cmc
pusha
jmp
movsb
push
or
flds
imul
pushl
mov
mov
xchg
pop
dec
mov
fs
xchg
scas
stos
xor
ljmp
sub
mov
jb
pop
add
or
or
pop
sbb
pop
lea
ja
jmp
xchg
lret
lahf
pop
adc
loopne
call
mov
leave
arpl
out
aad
leave
lcall
fdivp
mov
sub
dec
lret
cmpsb
cld
or
or
cld
mov
sti
dec
iret
xlat
push
cmc
into
rclb
into
in
mov
pop
add
sbb
sbb
add
ret
mov
push
and
pop
adc
inc
lds
cmp
mov
loop
orb
mov
and
shr
push
sbb
leave
push
rcll
jmp
neg
int
jne
inc
jl
jmp
hlt
xor
aad
mov
pop
insb
or
pop
adc
sysenter
or
test
int3
fisubs
lds
add
add
fneni(8087
addr16
push
sub
or
or
test
lock
xchg
sub
mov
mov
add
testb
mov
xor
rorb
pop
aaa
outsl
jle
sbb
cmp
push
stos
dec
nop
mov
push
sbb
push
orl
mov
das
mov
sbb
cli
mov
iret
xchg
lret
mov
test
popf
add
call
mov
and
add
ret
je
add
or
push
dec
and
adc
lahf
cmp
pop
stos
xor
cmp
pop
dec
xchg
aaa
or
cmp
lcall
enter
mov
cld
popa
popf
sbb
vmovq
int3
in
daa
leave
iret
mov
mov
fldenv
mov
xor
lret
loope
pop
lods
mov
fwait
aaa
mov
arpl
movsl
lea
jl
inc
scas
fwait
push
call
xlat
sbb
fimuls
xchg
scas
shlb
push
jne
enter
test
int3
icebp
stos
mov
dec
sbb
jno
jo
inc
xor
mov
hlt
pop
pop
mov
adc
and
xor
shlb
lcall
jmp
fdivs
cli
pop
fbstp
xor
shrl
subl
cmp
mov
imul
xor
push
aas
jp
stos
loope
insb
dec
jmp
ljmp
loopne
add
add
outsl
int3
in
add
inc
jo
jns
and
cmp
inc
or
mov
test
adc
test
rclb
inc
add
std
adc
adc
add
les
jo
rep
inc
sub
pusha
frstor
xchg
mov
fwait
sbb
xchg
mov
test
cmc
data16
data16
push
pop
pop
push
add
xchg
scas
cmp
pop
add
outsl
and
add
inc
jecxz
sub
xacquire
mov
sub
loop
mov
mov
or
movsb
ds
adc
pop
xor
xchg
into
push
test
push
notl
out
mov
aas
mov
sti
jle
jbe
jp
sahf
sub
sub
mov
adc
call
xchg
mov
outsb
stc
sar
mov
jp
js
imul
scas
jmp
scas
cmc
jg
sti
imul
rorb
push
push
fwait
into
fwait
je
ljmp
pushf
cmpsl
add
imul
jmp
rorb
stos
dec
int
cmc
xchg
add
jo
push
rorl
push
shll
lcall
arpl
shrb
mov
fs
aam
push
outsl
add
fwait
icebp
enter
sbb
add
mov
nop
inc
mov
in
pop
sub
pop
jae
mov
push
cmp
jae
jnp
push
push
aaa
jbe
shll
jmp
inc
and
jno
shlb
shlb
outsl
repnz
ljmp
arpl
loope
aas
jg
dec
jo
ret
arpl
cltd
adc
push
xor
clc
mov
and
scas
nop
imul
mov
add
repnz
jp
mov
or
cmpsb
aas
sti
mov
adc
and
and
rolb
icebp
mov
inc
pushf
adc
jmp
add
push
gs
insb
outsl
jae
dec
gs
rcl
movsbw
mov
cmp
pusha
test
and
call
xchg
stos
jp
adc
ja
inc
ret
mov
dec
push
mov
lods
fwait
into
jmp
push
mov
inc
and
jb
jbe
idivl
jae
lods
xchg
xchg
test
mov
dec
sub
dec
pop
jno
arpl
lret
jl
in
icebp
xchg
test
add
mov
mov
sbb
shlb
mov
inc
or
dec
addr16
add
jb
imul
aas
add
mov
adc
out
or
daa
mov
pop
es
mov
aad
shrl
inc
fiaddl
sub
jno
mov
jbe
idivl
mov
dec
leave
mov
sarb
ljmp
sbb
pop
xor
jg
imull
push
sbb
jae
dec
aas
lea
sub
sub
test
icebp
push
outsl
cmp
pop
test
mov
mov
xlat
mov
ret
out
jecxz
pop
xchg
pop
aad
das
adc
add
jge
inc
scas
pop
add
adc
or
pop
push
pop
pushf
into
adc
xchg
sbb
lods
pop
xchg
inc
and
jg
add
stos
pop
push
and
add
push
inc
lods
pop
addl
mov
xchg
pop
jae
xchg
xchg
inc
xor
xchg
sbb
lods
pop
xchg
inc
jae
sbb
mov
pop
roll
push
ds
xchg
sbb
lods
pop
xchg
inc
addr16
sbb
lods
pop
xchg
inc
shlb
movsb
mov
rorl
cmp
dec
cmp
inc
lods
pop
ret
push
stos
lods
push
xor
lods
pop
xchg
inc
or
mov
push
inc
lods
pop
mov
psadbw
and
mov
jae
test
push
push
inc
lods
pop
add
stos
xchg
sbb
lods
pop
xchg
inc
sbb
das
mov
pop
push
inc
lods
pop
xchg
pop
mov
mov
repz
push
push
push
inc
lods
pop
jecxz
int3
or
add
lods
pop
jecxz
xchg
loope
stos
mov
push
dec
jmp
shl
or
xchg
inc
in
int3
lea
lods
pop
repz
loop
xchg
pushf
in
sbb
pop
mov
lock
dec
and
add
iret
stos
sahf
xchg
sbb
lods
pop
xchg
inc
pop
shlb
jg
mov
andl
push
xor
pop
xchg
inc
jmp
xchg
sbb
lods
pop
xchg
inc
fdivr
jg
pop
push
inc
lods
pop
jae
aam
std
mov
inc
dec
mov
movsl
push
inc
lods
pop
mov
lret
sbb
lods
pop
xchg
inc
add
sbb
lods
pop
adc
test
and
lods
pop
mov
lret
push
inc
lods
pop
add
repz
push
cli
xchg
sbb
lods
pop
xchg
inc
cmp
push
inc
lods
pop
inc
inc
push
subb
lods
pop
xorl
lock
out
xchg
sbb
lods
pop
xchg
inc
ret
test
and
pop
inc
popa
bnd
sub
xchg
sbb
lods
pop
xchg
inc
fisttpll
mov
aaa
or
pop
adc
xchg
xchg
sbb
lods
pop
add
mov
cmpsl
push
inc
lods
pop
mov
out
mov
adc
roll
or
xchg
sbb
pop
jae
arpl
fmull
or
sbb
pop
jae
or
sub
pop
sbb
pop
jecxz
mov
adc
sub
dec
in
mov
pop
ror
int
arpl
pop
pop
adc
pop
mov
das
loopne
sbb
xchg
sbb
lods
pop
xchg
inc
addr16
sbb
adc
daa
adc
dec
roll
mov
out
dec
int3
data16
aas
add
lock
lods
xor
ret
aam
aaa
fdivrs
popf
cmp
enter
mov
testl
frstor
xlat
in
add
pop
std
inc
xchg
insl
add
dec
lret
xlat
sahf
mov
lret
cli
fwait
into
sti
cmpsb
popf
jb
inc
mov
adc
and
push
pushf
movl
mov
mov
lea
jmp
pusha
call
pushl
jmp
mov
jmp
adc
or
xor
call
and
mov
adc
dec
js
mov
fwait
mov
test
call
adc
into
mov
notb
mov
iret
movsb
xor
xlat
outsl
es
xchg
jne
push
inc
shrb
jmp
mov
xchg
insb
jle
fwait
ja
dec
mov
sub
movsl
mov
icebp
nop
int
xchg
les
clc
adc
outsl
and
adc
mov
mov
sbb
lahf
sbb
sbb
sbb
sti
push
rcll
aad
push
cmp
sbb
sbb
out
dec
int3
stos
xchg
stos
sbb
ret
jp
push
enter
inc
dec
lret
mov
cmp
push
mov
int
jo
lret
sbb
inc
add
sar
jno
sbb
rclb
stos
rolb
pop
cmp
and
push
sub
or
pop
cmp
lods
test
cmc
pushf
jmp
shr
mov
mov
sarl
rorl
loop
mov
insb
ss
movsl
fcmovnb
lods
cmp
fstl
push
inc
sbb
fmuls
and
dec
das
push
adcb
aas
pop
mov
shlb
sub
mul
and
mov
in
pop
es
jp
pop
push
add
or
dec
xor
filds
dec
dec
ret
xchg
test
fs
mov
sbb
add
xor
dec
jae
and
dec
add
jp
and
adc
insb
sbb
mov
pushf
jmp
add
das
adc
cmpsl
dec
aaa
sbb
rorb
scas
and
scas
fisttpl
add
mov
inc
sbb
imul
dec
sub
leave
cld
daa
xor
sub
xor
fnstsw
xor
xor
cltd
pop
sar
rol
ret
scas
jecxz
dec
add
movb
shl
mov
out
or
or
dec
push
push
jle
jp
outsb
das
add
test
sub
js
sub
fucomip
mov
sub
jno
daa
scas
and
out
sti
pop
fisttps
sahf
shl
loope
and
in
mov
leave
fs
mov
pop
push
mov
lret
cld
add
and
xor
add
lcall
movsb
sar
aad
jns
mov
inc
xor
ja
enter
pusha
inc
mov
jae
and
or
repnz
cwtl
std
mov
jmp
dec
mov
add
add
imul
jae
xlat
stos
sub
jno
adc
add
aam
loopne
pop
sub
cmc
push
xor
arpl
imul
pop
movsb
cwtl
add
repnz
jg
jnp
xchg
xchg
lret
jnp
sti
mov
adc
movsb
xlat
dec
jge
gs
dec
cmp
popa
adc
jge
inc
push
or
inc
mov
mov
sub
sub
jno
fisttpl
dec
jmp
sti
outsb
out
out
push
add
jmp
cmp
and
push
cmc
jl
sbb
testb
sbb
fstpl
adc
lds
es
mov
stos
xchg
fs
fimull
mov
pop
dec
pusha
popf
je
test
fsubp
cmp
adcl
inc
insb
xor
pusha
xor
adc
and
xor
call
and
push
sub
sub
mov
sub
and
xchg
sbb
ja
xchg
fdivs
mov
stos
addl
std
xchg
iret
cwtl
cwtl
sub
or
sbb
mov
pop
ss
mov
cmp
ljmp
jecxz
loope
fld1
mov
lds
test
pop
xor
sahf
sub
jno
pop
sahf
cmp
sub
cmp
iret
pop
pop
outsl
dec
std
sbb
mov
push
mov
add
les
mov
add
and
mov
addr16
jo
pushl
subl
mov
jne
mov
pop
push
and
inc
mov
aas
insb
pop
repnz
and
fisubrl
fbld
jle
imul
sbb
insl
pop
jne
push
js
xor
and
out
jg
ja
test
sub
cmp
pusha
call
setne
mov
push
repnz
push
pushf
lea
jne
call
flds
sub
mov
pop
sti
jp
bound
lcall
sub
xor
or
mov
mov
outsb
daa
jb
mov
sbb
jp
stos
push
push
cmpsb
jp
in
dec
jle
scas
fwait
cmpsl
lret
faddl
jne
dec
mov
dec
mov
push
rclb
xor
push
add
adc
lods
das
add
push
into
cltd
lods
push
sub
xor
or
in
cmpb
and
lods
pop
xor
call
xchg
repnz
xchg
std
ror
ret
mov
xchg
sti
lea
call
jmp
lea
je
pushf
cmp
push
call
mov
pop
adc
push
mov
xchg
sbb
add
and
cs
subl
loop
xchg
in
add
sbb
inc
sbb
clc
push
into
mov
aas
or
cmc
enter
out
outsb
adc
arpl
mov
negb
add
jl
add
dec
dec
scas
jmp
mov
mov
std
rcrb
fidivs
mov
aad
mov
adc
pop
and
push
fstl
imul
frstor
and
pop
es
jle
and
rol
out
into
inc
and
loop
cltd
dec
adc
xor
push
cmpsl
sub
sbb
fs
push
inc
in
and
sbb
jl
decl
cmpsl
test
adc
or
icebp
pushf
arpl
enter
sub
sbb
dec
add
push
push
sub
dec
iret
inc
jns
rorb
ret
stos
pushl
seto
mov
lea
pusha
call
vshufps
jno
iret
mov
das
push
fbld
pop
sub
ret
lahf
stos
clc
cs
insl
cmpsb
cmp
cmp
xor
cmc
pusha
xor
fidivrl
sbb
cwtl
aas
mov
mov
adc
add
aaa
cmpsb
fnstsw
jmp
sub
xchg
inc
jecxz
jb
mov
imul
xchg
lret
shlb
dec
pop
mov
dec
cs
cltd
std
mov
adc
iret
loope
jge
clc
mov
mov
and
scas
neg
mov
mov
ret
inc
and
sbb
in
xchg
shlb
das
adc
rorl
roll
fstl
int
in
jnp
and
in
cmpsl
jp
je
inc
dec
push
arpl
jne
mov
fistl
scas
rorb
test
orb
test
sbb
adc
mov
sub
push
jno
ret
insl
loop
xchg
out
mov
aad
push
fs
adc
gs
sub
push
sub
or
pushl
pushl
pushf
lea
je
lea
bsr
add
shl
cmc
sub
dec
lea
shr
test
bts
shr
movzbw
mov
shld
jmp
and
jno
jl
mov
xchg
std
mov
inc
gs
sbb
adc
and
inc
ljmp
mov
sbb
cs
xor
inc
jle
pop
bound
gs
nop
in
xchg
cltd
loopne
mov
leave
mov
mov
sbb
xlat
mov
inc
mov
mov
xchg
rclb
rclb
mov
cmp
adc
test
add
ret
xor
mov
cmp
stc
mov
cmpb
movw
jmp
movsb
jp
adc
rclb
jno
xchg
call
pop
stc
mov
mov
sub
add
shrb
add
xlat
push
imul
adc
dec
jae
icebp
pop
mov
into
out
and
arpl
icebp
sbb
stos
jge
inc
mov
dec
fs
sub
push
jg
insl
pop
popa
pop
insl
cmp
adc
pmaxsw
cmpsb
pop
push
xchg
mov
adc
mov
xor
push
int
std
fmuls
sub
dec
imul
jae
fdivrs
or
xchg
cmp
dec
sub
pop
aaa
addr16
outsl
push
mov
jbe
xor
fst
inc
sbb
test
and
in
js
xchg
mov
frstor
and
push
inc
pop
mov
push
jg
test
lods
push
cmpsb
mov
mov
xor
push
insl
sub
dec
sbb
or
add
pushf
pushl
pusha
mov
movb
pushf
pushf
lea
jmp
jns
test
push
cmc
mov
or
sub
shr
push
rcl
push
bt
mov
dec
lea
push
bsf
inc
shrd
or
push
jmp
cs
xor
jno
arpl
pop
es
or
jg
xchg
loop
mov
testb
jmp
mov
test
jbe
cs
fstps
dec
jl
mov
mov
push
inc
cmp
adc
cli
or
es
sarb
mov
in
and
shrb
push
aaa
sbb
jns
dec
sub
add
dec
or
or
bswap
dec
pop
cs
call
out
mov
adc
or
ja
out
bnd
dec
ds
push
jno
and
mov
aaa
enter
out
jno
mov
xlat
jns
jle
insb
push
and
sub
aad
cmp
int
pextrw
xchg
xchg
enter
mov
sub
sub
lea
dec
je
fs
cmp
or
or
pop
xchg
loop
jmp
sub
repz
jno
and
jno
jns
insl
sbb
int3
movsl
int3
jmp
and
push
cwtl
cmpsl
aaa
mov
dec
sbb
sysenter
add
ss
add
int3
rorb
jae
cltd
pop
push
ljmp
mov
ss
sbb
ss
mov
js
fisubl
daa
sbb
cld
out
insl
not
fldl
and
out
rorl
sahf
mov
das
movsb
sti
push
aam
in
aam
fs
jno
add
arpl
xchg
push
mov
sti
in
test
mov
pop
fsub
mov
push
fdiv
insl
loopne
cmp
clc
ret
xchg
inc
adc
subb
sub
imul
cltd
ds
out
mov
inc
shll
out
dec
shr
lods
and
idivl
xchg
lock
xlat
mov
scas
and
push
clc
pop
bound
out
jg
cmp
imul
outsl
es
imul
int3
lods
xchg
jne
in
imul
adc
push
jg
jmp
inc
dec
dec
inc
push
dec
xor
cs
insb
add
jno
dec
shrl
jo
push
xor
mov
gs
inc
es
xchg
cmp
push
and
push
jno
push
push
push
lds
fcoms
addr16
jns
ror
dec
popf
outsb
fwait
aas
xor
ret
mov
add
mov
xchg
push
pop
xor
aam
out
and
and
cmp
pop
hlt
clc
scas
or
xor
pop
xor
rclb
into
and
sbb
mov
int3
lods
cwtl
movsl
hlt
mov
cmp
jge
xchg
ret
xchg
imul
cmp
jp
bound
xchg
hlt
pop
dec
xor
jp
gs
test
sarb
adc
sub
loope
push
fcompl
ds
cli
popa
or
inc
bound
fidivl
mov
mov
add
jbe
xchg
outsb
push
and
and
push
fidivrl
jl
inc
out
xchg
mov
out
cmpsl
xchg
test
pop
pushf
mov
push
adc
mov
cli
ja
dec
cmp
cmp
push
imul
sbb
pop
xor
dec
or
and
xor
cmc
sbb
push
movsb
out
std
add
push
popa
aas
or
mov
out
or
mov
cwtl
jno
das
imul
pushf
cmpsl
test
jecxz
data16
shlb
mov
and
mov
loopne
add
or
add
or
ret
adc
sub
rorb
imul
push
and
pushf
dec
and
adc
ret
mov
push
aad
lcall
rcr
lret
jmp
adc
aam
stos
dec
out
neg
sahf
popa
fsqrt
cli
idivl
inc
adc
mov
ret
scas
xchg
add
dec
and
fwait
rcrl
mov
push
ja
arpl
dec
pop
inc
ja
imul
pop
xor
or
gs
popa
repnz
adc
adc
ja
mov
add
mov
and
jno
lahf
xor
scas
test
push
addr16
outsl
push
and
movsl
ret
push
add
pop
enter
test
mov
ds
mov
mov
push
push
andb
rclb
jnp
loope
inc
xor
fidivrs
je
daa
push
sbb
push
mov
mov
stos
xchg
mov
clc
cmp
pushf
lea
jb
clc
cmp
pushf
pushf
movl
lea
jae
and
mov
btc
sub
jmp
push
movl
pushf
movl
pusha
lea
jmp
jmp
mov
jno
mov
movsb
xor
dec
lds
add
movsl
sub
cmp
cs
push
ds
pusha
cli
popa
lahf
cmp
and
mov
push
mov
inc
add
repnz
mov
daa
dec
jnp
push
or
jne
sbbb
push
fxch
inc
fistl
pop
enter
popf
lds
addr16
mov
inc
mov
mov
lahf
cltd
ds
jno
jmp
imul
xchg
fucomp
sar
or
lods
in
call
jo
js
lods
cmpl
jo
inc
cmp
xchg
or
dec
mov
clc
orl
sub
mov
mov
or
pop
push
mov
dec
lret
lods
mov
xor
jns
imulb
aaa
jno
mov
sub
mov
dec
into
movsb
cmp
push
adc
insl
jp
lock
rcrb
cmp
push
jl
xchg
mull
ret
stos
cli
lahf
movsb
mov
lods
in
pop
pusha
jmp
rorl
cmp
jno
xchg
add
add
jno
jbe
mov
mov
bound
pop
icebp
mov
jnp
nop
or
jns
gs
adc
mov
sbb
fsubr
test
fdivrl
fiaddl
std
outsb
shr
mov
imul
sub
dec
enter
pop
cmp
adc
and
test
loopne
mov
adc
pop
out
sbb
aad
int3
shll
mov
repz
mov
sbb
fwait
pop
stos
cmp
cmp
aaa
sub
jge
sahf
les
dec
adc
pusha
add
sti
roll
sti
jle
adc
das
dec
ja
ja
arpl
cmc
jl
add
fs
adc
xchg
int
cmp
jno
pop
sarb
xchg
or
cld
imul
inc
mov
scas
hlt
pop
fwait
jne
sub
adcl
mov
sbb
mov
scas
imul
imul
les
mov
lods
fsubp
ret
outsl
add
enter
enter
cmpsb
das
add
das
push
xor
pop
jbe
adc
roll
mov
cmp
jno
sub
dec
leave
pop
and
inc
adc
mov
outsl
dec
sbb
xor
or
push
aas
add
shrl
loop
enter
mov
imul
fiaddl
jge
jge
xchg
push
mov
movsb
loope
hlt
popa
or
add
in
and
ficompl
sahf
dec
xor
in
out
inc
in
jb
mov
mov
mov
fwait
aad
sub
loop
dec
cmp
jno
mov
inc
dec
lret
dec
ds
pop
bound
lods
and
push
ret
pop
and
lahf
arpl
dec
jae
dec
gs
push
ret
cmp
cs
pop
dec
add
test
pop
push
shrb
or
pop
pop
ret
xchg
jns
adc
cmovle
pop
ds
inc
adc
pop
pop
les
and
mov
jno
mov
ret
push
lret
inc
iret
mov
das
scas
mov
jae
dec
out
fistps
sub
adc
cmpsb
sub
fstpt
fnsave
fdivrp
lahf
add
out
jge
and
push
jns
das
loopne
xchg
dec
je
or
orb
and
sarb
add
mov
sub
stos
cmpb
int3
mov
add
mov
mov
movb
xchg
add
clc
mov
push
rorb
aam
les
xacquire
inc
jp
adc
gs
and
das
pop
sub
xchg
inc
push
push
xor
inc
jl
cwtl
mov
push
sbb
inc
push
ja
mov
sbb
hlt
lock
pusha
or
call
pusha
std
xchg
scas
imul
push
jnp
pop
sub
xchg
test
jbe
std
fs
fdivrl
in
cwtl
mov
pop
xchg
add
dec
jns
popa
sub
push
or
push
xchg
cmpsb
imul
in
popa
push
mov
pusha
mov
pushf
lea
jmp
mov
cmp
jno
mov
xor
adc
jge
sub
jb
sbb
movsb
pop
jl
and
enter
fsub
jmp
xchg
pushf
mov
int3
cmp
mov
iret
pop
dec
shl
pop
jg
xlat
je
sub
loopne
aam
mov
ljmp
inc
sub
add
cmpsb
cld
rorl
add
std
cwtl
int
mov
mov
xchg
jge
outsb
stos
xor
push
call
aaa
lods
cmpl
mov
loope
in
mov
push
aaa
ret
stos
cmpsb
sub
gs
push
inc
jmp
sti
push
cmp
cld
test
mov
jae
cs
mov
dec
sub
mov
ror
pop
je
loope
popf
jmp
je
dec
cmp
mov
popf
mulb
mov
fsub
dec
dec
movsb
int
roll
cltd
and
inc
fdivs
in
addr16
mov
int3
mov
bnd
arpl
adc
icebp
pusha
or
cmp
xor
jns
pop
cmp
jne
xor
cmp
xlat
mov
mov
shlb
jmp
sti
and
xor
adc
cltd
add
sbb
andb
jbe
pop
stos
cmp
js
enter
in
dec
daa
push
fildl
push
cmp
sub
mov
add
xchg
loopne
sbb
add
gs
jp
push
pop
bound
inc
sbb
push
pop
and
dec
mov
outsl
cld
pop
pusha
inc
adc
pop
cld
test
mov
imul
mov
shl
inc
in
aas
sub
add
push
dec
sbb
hlt
adc
js
push
lea
push
adc
push
cmp
int3
out
iret
cmpsb
sar
add
mov
xorb
aad
mov
push
inc
inc
dec
das
test
sub
rcrb
xchg
into
cmpsl
in
cli
lods
outsb
stc
mov
idivb
inc
xlat
lcall
stos
xchg
cmpsl
loop
mov
pop
push
mov
or
xor
adc
add
pop
stc
nop
or
jo
bound
inc
xchg
push
mov
xchg
or
lret
and
dec
ficompl
dec
inc
dec
int
xor
imul
dec
outsb
out
push
push
jbe
mov
das
pop
ljmp
lods
xchg
pop
push
popf
add
sub
in
andb
xchg
dec
adc
add
and
push
mov
dec
jns
mov
or
fldl2t
inc
jle
decl
inc
inc
push
push
xor
cs
insb
add
add
jno
mov
pop
pop
mov
lea
sub
outsl
or
outsb
aaa
or
adc
dec
int3
out
adc
mov
fwait
add
cmp
aad
mov
mov
nop
xchg
rorb
std
or
std
dec
lret
lcall
jle
shr
mov
jmp
fiaddl
leave
push
arpl
mov
xchg
adc
es
pop
push
in
std
xor
cltd
sub
out
mov
in
stos
fildl
arpl
pop
fcomps
adc
out
add
jne
cmp
cli
scas
add
jg
xor
push
fs
xor
or
cltd
test
adc
xchg
or
ljmp
cmp
addr16
stos
scas
test
filds
fs
add
dec
jne
mov
out
outsl
setl
jno
mov
add
or
xlat
xor
sbb
add
jno
lods
sub
sub
call
mov
mov
jns
adc
cmpsl
sahf
arpl
aad
in
lock
mov
dec
cmpsl
fdivrp
push
aad
xchg
sub
orb
les
in
sarl
gs
pop
or
xchg
sub
fmul
scas
xchg
int3
xchg
shrl
xor
mov
movsl
jge
adc
inc
cmp
push
jge
jns
popa
push
outsl
inc
and
add
cmp
aam
ss
inc
adc
or
jb
xchg
ljmp
push
mov
inc
lahf
push
xor
jle
dec
or
iretw
or
mov
cmp
ror
sub
stos
and
mov
jnp
pusha
pop
xor
pop
repz
je
pusha
dec
and
ja
mov
dec
jno
jge
jbe
pusha
dec
xor
aas
push
jle
fs
dec
jno
add
testl
in
jle
sbb
inc
adc
andb
adc
and
loop
enter
pop
les
arpl
fstsw
sbb
ds
or
mov
call
or
out
pop
lret
xor
mov
ret
in
mov
mov
pop
push
xchg
mov
lock
pushf
aad
cltd
int3
neg
cmpsb
dec
pop
pushf
xor
jae
inc
adc
pop
sahf
add
jbe
inc
mov
shrb
jb
ss
inc
cmp
loop
in
adc
loopne
and
pop
pop
xor
push
xor
sub
inc
lock
xor
adc
and
sbb
jae
aam
mov
scas
jnp
imul
lock
mov
cs
bound
push
lahf
mov
cwtl
flds
fists
add
or
inc
imul
mov
lcall
ja,pn
fisubrl
mov
inc
adc
and
or
je
dec
fsts
mov
or
popa
fwait
push
add
popf
loop
lea
pop
or
icebp
mov
pop
dec
outsl
dec
mov
mov
and
lret
ja
and
fsubl
ficoml
xchg
icebp
jecxz
ja
imul
cmp
dec
cmovp
jle
add
push
push
imul
pop
mov
pop
data16
or
out
and
sti
jmp
gs
xchg
cmpsb
cmp
adc
lea
xchg
int3
fnstcw
dec
ret
sarl
mov
aas
stos
add
cmp
sub
je
sbb
inc
js
aam
jae
xor
imul
clc
mov
cmp
icebp
andb
add
aas
pop
dec
in
cs
test
test
call
orb
and
xchg
add
mov
loope
dec
js
pusha
and
sbb
mov
int
and
xchg
inc
adc
mov
push
cmp
xor
shlb
xor
xor
pop
xchg
pop
adc
repnz
fs
inc
sub
pop
loopne
or
inc
mov
dec
rol
nop
pop
or
mov
lea
or
jb
cmp
dec
loopne
fldl
mov
push
sahf
addr16
mov
mov
xchg
fists
fdivrs
sub
outsb
std
lea
jne
mov
not
lea
pusha
movb
cwtl
lahf
push
mov
lahf
movzbl
movzbw
lea
movl
pusha
movl
jmp
pushf
mov
push
pop
mov
lea
mov
not
mov
pushf
pushl
mov
pusha
mov
push
pushl
ret
cwtl
sti
ds
push
mov
call
pusha
lea
jne
btr
jmp
in
mov
adc
dec
out
lahf
push
mov
mov
mov
sar
dec
arpl
add
jmp
out
xchg
sbb
mov
pop
pusha
cmp
aad
std
mov
mov
pop
inc
mov
jle
mov
cs
jae
fsub
fiaddl
bound
cmc
jle
dec
iret
pop
inc
push
and
xor
add
push
adc
and
push
mov
js
lods
stc
mov
mov
in
xchg
cmp
call
xor
test
pushf
lea
jmp
and
jmp
adc
xor
lods
sub
sub
mov
ret
pop
repz
mov
jbe
test
gs
and
icebp
fwait
mov
icebp
adc
pusha
punpckhbw
jne
pop
addr16
add
and
cmp
dec
push
aaa
xor
push
xor
mov
sbb
in
push
jns
sbb
pushf
lds
fdiv
movsb
popf
cmpsb
mov
rorb
cmpsl
xchg
fisttpl
lea
jae
cmp
pushf
movb
stc
cmp
call
bound
push
inc
adc
inc
in
add
nop
stc
sub
inc
bound
loopne
stos
iret
push
cmp
and
ficoms
pop
jl
jno
adc
pop
dec
jo
lds
push
lret
mov
cld
xor
fldl
push
mov
loopne
subb
add
xor
int
aad
mov
mov
aam
outsl
push
pop
lahf
push
inc
es
xchg
imul
leave
pop
rcll
fsts
stc
mov
outsb
stc
xor
inc
fmuls
jmp
or
sbb
or
decb
dec
mov
cld
or
or
mov
or
cmc
push
inc
sarb
shrl
jae
ss
sbb
test
mov
pop
sub
out
inc
xor
lock
in
mov
mov
insl
xor
pop
and
inc
ret
scas
xor
add
xor
mov
hlt
mov
push
fists
jmp
sub
mov
mov
add
xchg
cmp
fadds
cs
leave
inc
stos
ljmp
mov
insb
repnz
xchg
pop
pop
sbb
jecxz
cmpsl
loop
out
fiadds
lock
aas
jp
ror
push
daa
dec
adc
roll
inc
data16
jb
push
push
cmp
outsb
push
sbb
cmp
test
outsl
stc
push
shrb
cmc
cmpsl
test
xor
cltd
test
fisttpll
cmp
cli
push
icebp
fwait
mov
xor
imul
pop
xchg
cmp
push
imul
in
mov
les
bnd
shrl
popf
sbb
shl
pop
jno
scas
test
mov
xlat
mov
mov
rolb
inc
mov
jnp
cmpl
sub
mov
mov
and
movsl
xchg
inc
dec
cmp
movsl
mov
mov
mov
jns
out
add
mov
enter
fucomip
mov
cmp
dec
cmc
mov
sbb
pop
push
das
dec
mov
daa
xchg
jle
into
enter
fneni(8087
sti
mov
pusha
mov
pop
ja
jne
adc
and
cmp
call
pop
xor
dec
fdiv
stos
jg
adc
mov
cmp
add
add
lds
mov
mov
incl
cs
fimuls
pop
call
in
dec
faddl
repnz
push
divb
xor
add
int
out
lds
jmp
mov
scas
sti
fwait
add
decl
inc
aad
jmp
dec
adc
xchg
ljmp
scas
es
and
cmp
cmp
and
push
daa
aaa
mov
jb
lret
xor
sub
push
xor
mov
push
sub
pop
rol
shl
movl
jmp
dec
dec
in
sub
xor
xchg
insl
sbb
inc
adc
jg
cmp
fadds
mov
and
punpckhdq
pop
jno
cmpl
ret
lahf
cli
ret
cltd
js
mov
cmc
ljmpw
jno
inc
cmpsl
and
sbbl
push
jnp
outsl
dec
mov
cmpsl
stos
daa
and
push
pushf
xor
cmpl
fdivrl
cmp
push
fbstp
adc
jnp
sub
je
xchg
roll
fdivl
pop
inc
scas
into
mov
jecxz
inc
jp
vminpd
mov
pop
adc
sar
xor
xchg
rcrb
icebp
into
cmpsl
mov
stos
adc
aas
adc
sbb
mov
mov
mov
mov
cmp
movsbl
add
bsr
add
call
cmpsb
cmp
dec
adc
pop
sahf
pop
xor
out
jecxz
xor
cmp
jo,pt
add
push
add
add
loope
pop
and
arpl
sahf
adc
scas
pop
mov
pop
mov
stos
push
mov
mov
idivb
aas
push
out
in
inc
jmp
add
push
cmp
mov
push
cmp
lret
out
loop
fstl
mov
aad
add
xchg
ret
js
mov
jl
push
jns
mov
cmpsl
out
loop
sahf
mov
pusha
loope,pt
ljmp
dec
adc
xchg
sbb
and
lret
fs
push
cld
shrb
pop
loopne
push
adc
jnp
pushf
dec
lret
clc
jmp
loop
add
repnz
jns
fstpl
xor
mov
inc
imul
addr16
out
imul
aaa
lret
and
push
dec
adc
push
cmp
imul
pop
add
xor
xchg
or
loop
adc
movsb
xor
pop
fnsave
enter
cltd
out
and
das
mov
cmp
and
fisubs
enter
aad
mov
xchg
lcall
cmp
push
xchg
test
fs
cmp
push
data16
stc
xlat
test
je
mov
jecxz
insl
cmc
fwait
mov
aad
rcrl
nop
movsl
xchg
leave
pushf
cmpsl
mov
push
clc
push
xlat
cli
mov
pusha
bt
call
sub
test
cmp
jmp
movzbl
mov
mov
cmp
clc
push
clc
cmpb
mov
movb
call
stc
jmp
test
hlt
dec
adc
cmp
lods
xor
pop
lds
es
add
push
sub
mov
icebp
pop
hlt
and
data16
cmpsb
cmc
pop
es
adc
ficomps
adc
jge
push
adcb
cmc
int3
fucomip
adc
jno
nop
mov
inc
lods
shr
sti
push
loop
xchg
cmc
lret
push
pop
orl
cmp
roll
push
lahf
cmc
int3
lea
xchg
mov
dec
and
lahf
stos
xor
lea
icebp
jbe
mov
loope
popf
int3
lea
cld
inc
test
pop
popa
pop
sub
jno
sub
int3
dec
enter
sar
jmp
push
xor
sbbb
es
gs
sub
shrl
mov
insl
push
nop
in
pop
inc
adc
push
pop
add
notl
dec
aam
mov
and
outsb
scas
pop
stos
and
frstor
std
std
xor
outsl
cmp
ret
xchg
inc
sbb
pusha
ficoml
ds
faddl
cmp
sbb
sbb
jl
xor
pop
xor
pop
cld
jnp
inc
aam
leave
movb
jmp
aad
arpl
jno
adc
adc
jecxz
dec
dec
mov
lret
mov
outsl
movsb
or
sbb
push
xorb
jp
notb
daa
xchg
ret
fmull
dec
sbb
into
push
cmp
add
out
in
shll
in
jno
mov
mov
das
xor
or
push
popf
cli
pop
sti
pop
movsb
pop
scas
push
xor
jne
repz
jp
push
pop
outsb
push
jp
xor
inc
jns
jnp
scas
jbe
push
add
inc
add
jb
sbb
jno
ret
scas
jb
daa
pop
and
cmp
test
aas
push
mov
inc
mov
aas
jnp
out
jbe
adc
sbb
cli
outsl
or
cmp
mov
xchg
aaa
popa
test
add
loop
vmovlpd
inc
sbb
sub
adc
cmp
ja
inc
push
inc
sub
sti
and
imul
lds
out
sarb
xlat
cmpsb
cmp
clc
pop
dec
mov
mov
cltd
call
cmp
dec
sbb
mov
aas
cld
ret
dec
adc
fwait
loop
repnz
popl
jae
ja
inc
xor
cmp
pop
mov
rcrb
mov
push
mov
movsl
fcmovbe
dec
jmp
cmpsl
pushf
pop
int3
dec
cmpsb
jp
jb
inc
and
inc
cmp
fnstcw
mov
mov
mov
jmp
push
or
mov
add
mov
enter
sub
cs
lahf
in
imul
int
nop
xor
adc
xor
jae
add
push
sbb
cld
jno
pop
and
out
mov
lea
jae
pusha
cmc
stc
cmc
xor
pushl
pusha
pushf
lea
call
jmp
sub
mov
and
movb
lahf
mov
movsbw
shr
add
add
add
cmc
not
mov
pushf
or
pusha
call
pop
inc
sbb
jno
xor
jl
pushf
cmp
js
int3
dec
inc
add
mov
repz
xor
add
pop
leave
xor
fdivrl
or
fsubrl
pop
je,pn
lock
lock
cmpsb
mov
xorb
mov
adc
pushf
ja
and
jp
scas
lock
je
leave
pop
repz
mov
mov
jg
lret
and
lret
imul
and
inc
sbb
push
add
jbe
jbe
push
mulb
jno
mov
cmpsb
add
orb
pop
xchg
mov
je
fcompl
and
dec
adc
or
call
in
and
push
movsl
lcall
nop
popf
lock
lods
xor
push
cmp
popf
sub
inc
mov
jb
mov
cmpsb
mov
add
addr16
xor
add
cmc
shlb
shlb
lcall
lret
scas
hlt
aad
jge
mov
es
xchg
mov
not
movsbw
mov
jmp
test
cmc
add
pusha
push
mov
push
lea
jmp
bswap
mov
clc
and
jmp
cwtl
ret
adc
adc
int
adc
mov
mov
dec
out
adc
out
mov
pop
and
mov
inc
sarl
mov
in
rcl
push
inc
mov
inc
jns
stc
imul
mov
push
adc
dec
mov
call
adc
stos
xchg
filds
fstpt
in
bound
fdiv
data16
cltd
adc
imul
test
adc
jo
pop
xor
jns
out
bt
jnp
aas
gs
sub
sbb
mov
mov
fwait
negb
testb
pushf
sti
les
movsb
js
xchg
or
mov
arpl
mov
ljmp
lock
fbstp
jmp
sarb
sahf
rorb
push
jge
inc
inc
sub
icebp
sbb
or
lahf
inc
leave
inc
sbb
inc
push
nop
ljmp
idivb
fidivrl
arpl
out
dec
loopne
mov
pusha
mov
jno
bnd
jae
mov
lahf
adc
call
or
sbb
lret
in
xchg
jns
cmp
mov
int3
shll
dec
addr16
rcrl
adc
or
sbb
mov
pop
dec
inc
in
fldcw
out
mov
xor
jecxz
xor
mov
adc
mov
mov
pop
dec
popa
out
stos
cltd
fsubrl
pop
xchg
repz
and
jl
sbb
adc
inc
jnp
js
push
cmp
pop
add
jae
adc
setp
bound
outsb
lret
dec
daa
mov
repz
and
aam
pop
out
fimull
xchg
fadds
fistpl
pop
dec
int3
cltd
pop
jle
imul
pop
and
inc
int
push
jns
shrb
cmp
movsb
outsl
inc
lahf
call
mov
push
jp
scas
xchg
adc
and
sub
in
jo
insb
inc
leave
mov
icebp
xchg
test
arpl
jb
xor
mov
mov
or
sub
add
call
push
sub
call
add
stc
cmp
pusha
pushl
lea
jb
clc
bt
cmp
push
mov
pusha
lea
jae
add
movzbw
shrd
mov
bts
btr
jmp
mov
adc
hlt
mov
lea
popf
or
cmp
into
dec
inc
dec
roll
int
or
adc
scas
ret
inc
add
add
cmpsb
cltd
sub
or
testb
icebp
adc
xor
movl
inc
push
aam
add
push
aam
mov
jecxz
pop
dec
sbb
popa
movsl
mov
negl
or
adc
mov
sti
xchg
pop
sub
jbe
bound
jle
sub
outsl
push
cmp
mov
cltd
mov
or
jno
bnd
repnz
push
push
imul
push
aaa
add
inc
adc
fidivrs
mov
pavgb
loope
xchg
mov
leave
pop
mov
cmc
clc
pop
xor
fcomip
movb
fisubs
mov
cmpsl
in
dec
xor
ds
lret
dec
adc
sbb
add
xchg
in
dec
sbb
adc
sub
adc
dec
and
imul
lret
vshufps
loope
in
insb
leave
mov
cmp
enter
push
ret
out
aas
scas
aas
movsl
sub
and
mov
rcl
sub
lret
jns
mov
inc
mov
add
out
aad
or
and
lret
popa
pop
jae
jge
jne
adc
cmp
insl
or
mul
or
js
shl
mov
bt
mov
stc
test
jmp
cld
enter
pushl
push
dec
aas
cmpsb
cmp
mov
push
pop
and
dec
out
ljmp
and
inc
jge
mov
sarl
ja
xchg
test
addr16
movsb
mov
add
mov
call
addr16
imul
xor
notb
stos
cld
dec
jae
sbb
cmp
sub
cmp
inc
jb
stc
pop
dec
pop
inc
xlat
std
fsubrl
mov
in
push
cld
add
stos
pushf
mov
adc
pusha
pop
push
imul
fwait
call
fs
call
pushf
call
xchg
int3
mov
mov
int
sub
xchg
mov
inc
mov
inc
cmp
test
arpl
add
imul
dec
call
into
inc
cmp
repnz
aas
push
jecxz
dec
add
std
xchg
scas
imul
and
adc
pop
pusha
inc
dec
inc
cmpsb
loopne
jl
or
out
xor
inc
lret
out
mov
mov
inc
stos
sub
mov
push
fadds
push
adc
imul
movsl
shrb
add
mov
xchg
stos
not
cwtl
add
xchg
adc
and
xchg
xchg
mov
in
aam
sbb
insl
je
into
filds
pop
push
gs
cmc
jge
lea
push
dec
push
iret
sti
dec
ljmp
daa
shrb
stos
fsubrp
inc
js
adc
cltd
test
mov
sub
mov
add
add
xchg
mov
outsb
push
jp
push
aas
jbe
push
dec
push
push
insb
inc
cmpl
mov
xchg
scas
jbe
adc
add
insl
clc
jne
lea
mov
cltd
hlt
out
xchg
aaa
cld
in
cmpsl
stos
fisttps
or
pop
cmp
sti
sbb
cld
fwait
movsb
test
or
pusha
movsl
fsubrs
jb
mul
movsl
loop
mov
inc
and
outsl
xor
pushf
cmp
test
loopne
pushf
ftst
mov
movsl
sahf
jno
gs
cmpsl
loop
adc
dec
pop
adc
or
sub
fidivrl
clc
cld
lret
stos
clc
push
pop
leave
repz
jmp
pop
cmp
xor
or
ja
dec
pop
ss
push
sub
push
sahf
stc
fildl
xchg
lcall
rcrl
lods
ret
movsb
cli
lds
sbb
sbb
sbb
aas
test
filds
jns
mov
sub
add
cmp
cmp
sub
sub
pusha
hlt
lea
sbb
lahf
out
into
push
repnz
push
imul
pop
sub
ret
cmp
hlt
outsb
jo
or
dec
sbb
notb
aam
lahf
fildll
inc
jb
xor
pop
shr
mov
pushf
fs
repz
test
loopne
sbb
cmp
sahf
dec
pop
cmp
xor
jle
push
dec
loop
in
xchg
jg
stos
and
mov
sar
inc
and
mull
and
and
sbb
push
jnp
ja
adc
xchg
gs
in
loopne
sbb
shrl
pop
jb
out
mull
jo
popa
popf
xor
cltd
bound
in
rcll
mov
iret
and
or
pop
lcall
push
cld
std
pop
sbb
ja
outsl
or
jb
pop
shlb
jno
pop
lret
sbbb
push
jge
jno
jns
pop
xor
fdivrs
sub
out
icebp
lret
out
mov
pop
pop
cmc
loope
sarb
push
push
push
inc
imul
sbb
into
lret
and
pop
inc
test
jbe
jmp
and
inc
fbstp
mov
sbbl
rorl
xchg
mov
cli
mov
mov
stc
call
leave
or
pushf
jb
adc
call
mov
inc
shlb
cltd
adc
ret
push
cld
shl
orl
in
or
js
test
add
jmp
adc
fistps
mov
inc
adc
cltd
pusha
pop
cltd
push
pusha
adc
mov
mov
aam
insb
sbb
shr
cmp
daa
inc
fisubrs
push
xor
out
mov
neg
pop
add
cltd
subb
lret
out
pop
pop
aaa
jne
mov
mov
sbb
jno
adc
cmp
js
ror
pop
add
mov
shl
cmp
bsf
bsf
mov
jmp
push
lea
jne
bswap
push
sub
add
lahf
shld
mov
cmp
add
rcr
clc
pushf
mov
pushf
clc
test
pushf
movb
push
lea
jmp
push
and
es
sub
addr16
push
cmp
arpl
and
push
dec
cmp
sub
ljmp
cmp
push
xor
push
jbe
fidivrs
mov
pop
xor
imul
fwait
cld
ret
cmpsb
mov
push
mov
mov
repnz
and
ret
jg
fldcw
sbbb
sbb
repnz
cs
out
iret
scas
repz
mov
rclb
and
mov
je
adc
dec
aam
xor
push
pusha
push
jg
sub
mov
add
sbbb
repz
fists
and
add
jle
mov
out
or
inc
push
jge
popa
ret
cmc
sbb
nop
sbb
adc
adc
mov
in
dec
jp
sub
dec
fsubrs
sbb
mov
rcrl
dec
and
aam
cwtl
mov
int3
lods
in
fsub
mov
aad
mov
inc
sub
push
push
mov
call
call
push
lock
std
std
xchg
gs
adc
lds
inc
mov
sub
adc
pop
sub
xor
or
js
in
cmp
sbb
aam
push
int
mov
mov
in
lcall
int3
test
cmp
in
xchg
push
push
stos
and
pop
or
in
or
ror
jmp
sbb
inc
add
cmc
pusha
cmp
pushf
call
int
into
pop
adc
iret
mov
add
mov
jg
or
mov
push
es
incb
or
mov
movb
sub
or
pop
popa
lret
int
bound
mov
jg
cmp
jae
cwtl
rol
jmp
ret
pop
cmp
inc
outsl
push
add
pop
adc
mov
add
sahf
loope
xor
or
rorb
out
jno
mov
xor
aam
aam
repz
xor
out
test
push
add
xchg
fwait
loopne
xchg
in
aam
adc
xor
mov
notb
test
push
es
xchg
jg
xlat
fildll
ja
insb
pop
add
sub
popf
cmp
je
mov
outsl
inc
sub
pop
xor
jmp
bound
fisubs
cltd
movsb
stc
mov
xorb
insl
icebp
mov
sub
into
xor
jne
jmp
enter
lock
sub
call
sysenter
adc
jno
sbb
andb
sub
in
loope
out
mov
add
andb
jae
jnp
and
mov
add
insb
adc
xor
fidivs
fwait
cmpl
push
fbld
pop
dec
lea
xchg
mov
pop
enter
pop
cmp
or
mov
push
inc
xchg
jle
cli
pop
adc
sti
bound
mov
outsb
pop
xchg
mov
mov
pop
dec
fxch
in
adc
push
lock
es
jl
xchg
mov
xchg
lret
adc
lods
jne
xchg
xchg
xchg
fwait
repnz
add
sub
and
insl
mov
ret
aam
push
adc
lret
loop
repnz
and
mov
sbb
repnz
out
leave
cmp
test
xchg
fiadds
cli
mov
lods
or
cltd
xchg
cmp
movsl
test
stc
and
stc
add
movb
pusha
pushf
push
lea
jmp
inc
movl
cmp
pushf
lea
ja
cmp
mov
call
mov
add
adc
mov
pop
sub
push
es
movsl
sbb
cmc
jnp
or
mov
push
sub
jge
lods
mov
dec
adc
cmp
or
adc
dec
out
cmpb
pop
and
es
cli
inc
outsl
xchg
and
jno
sub
and
popf
pop
je
sbb
sbbl
arpl
movsb
dec
ficompl
xchg
sbb
push
xor
frstor
push
shrb
jp
inc
call
imul
add
or
daa
mov
xchg
cld
enter
or
enter
sbbb
adc
icebp
dec
fwait
mov
or
scas
push
pop
outsb
out
testl
sbb
pop
push
call
shlb
mov
mov
ss
jns
js
out
rorb
lcall
scas
sub
add
sub
inc
and
xor
mov
cwtl
cmp
sub
lea
mov
dec
mov
fidivrs
jmp
dec
aam
mov
mov
and
dec
sbb
or
xor
cltd
jmp
lea
jne
bts
clc
mov
shl
bsr
shrd
bt
sub
call
rorl
popa
adc
xor
sub
leave
test
mov
mov
cltd
pusha
pushf
add
enter
lods
xor
rorb
aad
mov
pushf
pusha
std
xchg
rorb
inc
je
pop
shld
lods
xchg
out
ljmp
mov
mov
loopne
mov
sarl
inc
push
dec
sahf
inc
sbb
pusha
adc
mov
pop
dec
and
frstor
arpl
cwtl
add
aam
xor
aam
inc
push
bound
jg
xor
insl
dec
inc
aad
in
sbb
push
divl
xchg
xor
or
push
cmp
push
outsl
lcall
es
push
leave
mov
sbb
subl
and
mov
mov
adc
dec
jo
cmp
dec
add
fstpt
mov
inc
and
movb
lea
ja
call
lea
jae
bt
pusha
cmp
push
pusha
jmp
push
push
cmc
cmp
cmp
pusha
lea
jae
cmc
pushf
clc
sub
jle
add
jmp
mov
jno
cli
outsl
loop
cli
cmpsl
lock
aam
pop
jb
ret
sbb
pushf
icebp
pusha
sbb
push
aas
sbb
cmp
push
or
mov
filds
push
xchg
pop
ret
inc
rcl
stos
push
pop
add
mov
inc
outsl
enter
mov
test
push
adc
jbe
jge
and
popa
add
pop
push
cmp
pop
mov
addr16
shlb
and
mov
mov
and
push
pushf
lea
jmp
lea
je
test
pushf
cmp
push
push
pusha
lea
je
stc
push
cmp
bt
cmp
jmp
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
fiaddl
jno
push
sti
std
jb
jnp
mov
out
sub
jo
inc
les
sub
fstpl
sbb
cld
inc
outsl
ljmp
ljmp
gs
pop
aad
sub
cmp
shll
jle
jp
cmp
outsl
minps
pop
pop
es
sbb
pop
adc
incb
sub
andl
cmp
push
push
cmp
cmp
minps
mov
ficompl
cmovnp
or
popf
sbb
jge
inc
inc
insl
imul
mov
testl
andb
or
inc
fwait
scas
pop
push
jo
pop
sbb
cmpsl
lea
push
push
dec
push
daa
push
sub
mov
sbbl
ljmp
lea
dec
out
fiaddl
imul
movsb
inc
jo
pop
ds
adc
sbb
pop
out
loop
scas
iret
out
xchg
mov
add
add
adc
add
add
adc
add
dec
ret
add
add
mov
add
add
cmpsb
adc
add
add
int3
mov
add
lcall
add
mov
add
add
add
fs
add
add
add
add
add
rcrl
add
add
add
adc
add
add
adc
inc
adc
xchg
aas
push
add
pop
push
add
sbbl
add
add
add
jo
adc
push
cmpsl
add
mov
addl
push
outsl
sbb
xor
push
mov
cmp
xor
leave
arpl
sbb
jns
in
cmc
out
pop
shrl
mov
out
jns
out
mov
gs
add
outsb
lock
les
and
sub
shl
mov
sbb
pop
repz
popf
pop
loope
cmp
add
leave
hlt
iret
cwtl
imul
imulb
cmp
xchg
xchg
sub
jmp
cltd
loopne
clc
mov
lds
mov
dec
shlb
add
jno
mov
xchg
mov
push
jb
bound
adc
call
insl
add
sub
arpl
adc
js
pop
shlb
mov
push
jb
ret
cwtl
arpl
test
xor
xor
pop
gs
sbb
sub
mov
mov
jecxz
mov
sbb
dec
data16
in
xor
insl
hlt
jns
popa
or
mov
out
jecxz
pop
cmp
adc
or
cld
leave
aas
loopne
or
dec
push
pusha
stos
or
lcall
lods
add
or
pop
xor
push
pop
vmovsd
adc
dec
loopne
sbb
clc
mov
subl
in
inc
iret
movsb
xchg
jbe
mov
pop
mov
jp
jle
jbe
pop
mov
jno
jno
aam
mov
pop
lds
imul
imul
roll
outsl
dec
sbb
gs
adc
push
lea
je
push
pusha
test
bt
cmp
movb
movb
pusha
jmp
mov
movzbw
cwtl
movb
jmp
mov
mov
es
addr16
xchg
sbb
ret
lret
push
dec
jo
andl
fistl
dec
and
add
push
cmpsb
or
xor
sbb
ret
xchg
shrb
add
and
cmpsb
inc
mov
mov
adc
xchg
add
sbb
inc
and
jnp
add
pop
out
lea
pop
data16
movl
call
cmp
push
popf
or
lea
addb
leave
lods
cmc
mov
jo
movsl
pop
fbld
movsl
sub
addl
out
dec
fstpl
lret
mov
dec
adc
push
cltd
or
push
test
popf
cmpsb
xor
movsl
fdiv
lea
sbb
shll
pop
push
adc
sbb
loopne
sbb
jge
jge
sub
movsb
scas
cmc
mov
scas
repnz
dec
jno
movsl
cmp
scas
or
sbb
dec
push
sti
push
jl
xchg
addr16
sbb
subl
outsl
push
sub
call
dec
pushf
add
insb
std
push
sbb
pop
xor
mov
xchg
hlt
fstps
in
push
xor
adc
addr16
shl
bts
mov
call
inc
push
hlt
popa
in
insl
lock
jge
popa
rolb
push
lret
fsubs
add
bound
and
jle
shrl
cmp
aaa
xchg
clc
shll
xchg
shrl
jae
inc
dec
data16
icebp
push
push
dec
out
cmp
sub
lahf
cltd
cmp
mov
repz
aaa
enter
aad
cmp
test
leave
jecxz
loope
test
lea
rclb
or
aaa
popl
clc
cmc
cmp
movb
cmp
jmp
das
adc
push
movsb
xor
sbb
shl
gs
mov
insb
aaa
cmp
loope
divl
mov
loope
cmc
scas
js
stc
mov
pop
out
cs
push
sbb
pushf
popa
and
adcl
in
dec
into
mov
push
inc
imul
sahf
or
add
repz
dec
shrb
scas
xchg
ja
sub
idivl
push
add
xor
jb
jle
sub
jmp
cli
mov
cmp
sub
push
movb
rep
jmp
mov
stos
imul
lret
push
aas
inc
das
push
iret
mov
adc
pop
pop
push
ret
out
fwait
sbb
pusha
loop
mov
cmp
fisubrs
lcall
xchg
and
dec
jecxz
wrmsr
or
aaa
xor
jecxz
rcr
xor
pop
popa
mov
popa
stos
or
lock
stos
inc
jecxz
popf
adc
inc
jns
adc
add
add
xchg
cmp
out
mov
push
jno
xchg
jmp
sbb
add
adc
pop
dec
sub
mov
insb
push
test
gs
pop
xor
dec
and
aas
dec
and
ret
lahf
les
mov
fstpt
dec
pop
out
fnstsw
push
and
mov
ret
ja
push
test
lock
lret
dec
and
inc
jno
or
and
sbb
pop
je
mov
lods
push
jno
push
negl
out
sti
jb
jb
bound
push
cld
mov
mov
in
xchg
test
xchg
adc
and
in
adc
orl
xlat
inc
sahf
stc
sbb
cwtl
ret
ja
push
xor
sbb
cmp
cs
jb
inc
les
push
sub
stos
bnd
test
add
nop
mov
jl
and
mov
mov
pop
lahf
push
cmp
fwait
jl
cmp
mov
cmp
xor
pop
fs
js
adc
add
add
inc
dec
enter
shrb
out
jb
or
lcall
ret
mov
mov
idivb
cs
push
jns
stc
mov
pusha
add
fdivrl
rcrb
daa
or
adc
push
or
push
jno
cmp
mov
into
mov
mov
xor
push
inc
call
xor
pop
test
andb
lret
xchg
jmp
ret
cmp
jge
push
out
jnp
jp
dec
push
cmp
mov
pop
push
negl
adc
sbb
loop
ja
cmpsb
mov
shlb
sbb
add
mov
leave
push
int
mov
test
movsb
loope
in
pop
movsb
xor
das
pop
cmp
daa
pop
idiv
push
push
xor
xor
fs
insb
add
add
pop
mov
dec
pushf
add
jns
pusha
pusha
shl
movb
setbe
seto
lods
clc
push
not
test
bt
add
pushf
jmp
arpl
insb
adc
into
inc
xor
into
push
ds
ds
mov
and
test
bound
or
sti
cltd
lret
clc
push
mov
mov
add
lock
jns
jno
cltd
test
bound
push
xchg
xor
xchg
out
mov
js
xor
or
xor
push
imul
rorb
add
or
outsb
and
pushl
jno
mov
nop
or
loop
mov
pop
fisubrl
je
jg
jge
adc
sahf
cmp
mov
mov
gs
dec
push
fst
pop
negl
stc
int
stos
jecxz
mov
dec
sti
loope
sbb
movsl
sbb
mov
pushf
mov
sbb
popw
xor
nop
xchg
jnp
leave
imul
mov
adc
cmp
in
inc
jb
sti
sarb
add
neg
mov
or
loop
lcall
aam
mov
clc
pop
insb
cmp
cmc
xlat
lret
dec
add
add
pop
dec
push
add
add
add
add
add
add
add
dec
push
add
dec
push
add
push
add
add
add
adc
add
aas
mov
in
jecxz
cmpsb
add
xor
fs
insb
add
add
mov
pop
outsb
adc
hlt
jno
mov
popf
lock
shlb
inc
mov
fiadds
push
add
popa
and
and
inc
aas
scas
jmp
jns
adc
dec
loop
add
jle
mov
mov
jg
fwait
mov
cmp
and
pop
fxtract
movsb
dec
pop
jle
test
jns
xor
aam
xor
outsl
push
pop
inc
mov
cli
xchg
lret
movsb
filds
testl
popw
push
imul
bound
sbb
inc
jb
lods
mov
jp
add
push
xor
jno
orb
sbb
fcmovnu
cmc
push
xchg
je
arpl
xlat
sub
cwtl
add
mov
dec
jmp
pop
jle
sahf
or
inc
sub
dec
inc
loope
sahf
mov
lea
repnz
punpckhbw
jns
int3
pusha
negl
sbbl
test
popf
js
add
stos
sysenter
adc
push
icebp
out
outsl
push
mov
popf
jae
pop
ss
jp
in
ja
xchg
int
jno
mov
decl
push
ljmp
jle
in
xchg
subl
sub
sub
dec
jae
dec
shr
test
dec
sub
jns
xor
loope
lods
adc
mov
pop
xchg
int
mov
repnz
inc
outsl
push
ret
mov
adc
leave
mov
jmp
mov
icebp
inc
lock
movsl
fiadds
dec
xchg
out
push
ja
lahf
ficoml
cli
xchg
into
xchg
mov
add
add
mov
mov
mov
in
pushl
jmp
pop
xor
xchg
add
add
lods
push
add
test
sbb
or
push
insb
inc
sub
mov
jb
mov
xchg
call
sbb
mov
mov
and
mov
ja
pushf
add
jnp
jmp
lods
add
cmp
cs
fidivs
dec
fistpll
or
scas
cmp
popf
fldl
mov
in
sub
dec
rcll
mov
jmp
mov
pusha
inc
pop
dec
sbb
adc
sbb
jno
jl
pushf
in
je
cwtl
sbb
pop
insl
dec
pop
push
jmp
push
jo
stc
xor
xchg
inc
cmp
loop
xor
cmp
pop
xor
scas
es
dec
sub
rcrl
xchg
cli
xchg
cmpsb
mov
fsub
in
nop
sti
lods
std
add
xchg
test
pusha
dec
xchg
lar
mov
inc
enter
dec
xor
ffreep
arpl
and
test
xchg
stos
cmp
jnp,pt
or
jae
cmovbe
js
mov
jg,pn
pushf
lea
pop
lahf
jmp
push
dec
inc
dec
dec
xor
cs
insb
add
and
mov
lea
je
jmp
ljmp
clc
jne
popf
or
jns
test
add
daa
inc
into
insl
fbstp
into
cmp
hlt
add
ret
mov
dec
push
sub
cmpsb
sub
jno
es
adc
inc
mov
sub
negb
sbbl
int3
xchg
adc
sub
cltd
pop
mov
insl
jecxz
add
dec
sbb
pop
fs
repz
sbb
pop
push
inc
sarb
divb
jno
cwtl
sbb
xor
sub
add
dec
jno
fbstp
ficoml
mov
ret
out
ja
movsl
rolb
mov
cltd
mov
orb
dec
push
mov
and
push
popf
xchg
mov
lret
mov
clc
in
adc
bound
pop
cmp
add
sub
cmpsb
cmp
ja
inc
xor
stc
push
sbbl
lcall
pop
xchg
in
push
adc
push
xor
jg
jnp
jg
pop
add
test
jecxz
lods
jb
jno
fnsave
pop
sub
lret
jae
inc
sbb
mov
dec
jno
stc
testl
and
dec
sub
loop
arpl
mov
xchg
stc
popa
xor
insl
rcll
inc
inc
fnstenv
movsl
dec
in
and
mov
fs
rclb
pop
test
mov
xor
div
sbb
scas
xchg
jae
sbb
pop
into
call
cmpsb
xor
ja,pn
aas
jb
dec
ja
mov
xchg
cmp
push
sub
jno
adc
push
das
inc
fildl
and
je
xchg
jns
jmp
mov
pop
add
jb
dec
push
add
mov
pop
filds
out
ds
xchg
clc
pusha
mov
stc
stos
shr
dec
int3
stos
xor
xor
pop
lahf
loopne
fnstenv
pop
arpl
push
pusha
test
dec
xor
sbb
scas
inc
push
jge
sbbb
jne
pop
and
jno
mov
inc
into
xchg
jecxz
jmp
out
mov
mov
jecxz
fcoms
pop
jae
jno
sub
rclb
cld
jns
push
adc
dec
fsubr
daa
or
pop
sub
mov
sub
sarb
jle
mov
out
loopne
sub
stc
call
mov
scas
fucomp
daa
mov
dec
cmp
sti
mov
rorl
push
inc
outsl
je
adc
adc
push
cmp
mov
lods
stos
sub
out
int
jmp
jl
dec
cmp
and
lahf
aas
dec
mov
adc
mov
mov
fiadds
ficoml
push
test
sub
xor
and
repz
push
shl
dec
xchg
es
pop
and
mov
inc
jmp
jg
mov
sub
xchg
push
pop
fs
pop
imul
lds
xchg
int3
stc
mov
mov
popf
xor
jp
je
jno
dec
ficompl
mov
lahf
testb
ret
jge
xchg
or
pusha
out
xchg
pop
clc
pop
fcoms
shl
jae
aaa
mov
fildl
ret
mov
rcrl
arpl
int
scas
test
out
mov
insb
cmpsl
subl
cwtl
ja
and
jnp
pop
adc
push
or
dec
xorb
fsub
mov
ss
push
arpl
fwait
ljmp
out
cli
jl
out
jno
addr16
ret
mov
arpl
call
enter
and
lcall
jns
pusha
pop
mov
push
jg
cmpl
shll
and
jp
mov
test
and
test
adc
std
mov
or
mov
mov
dec
fdiv
insl
sbb
adc
je
or
pop
addr16
xchg
pusha
mov
pop
adc
mull
sub
pushf
cmc
pushl
popl
cmc
cmp
pushf
jmp
jnp
mov
adc
dec
enter
in
jns
mov
sarb
mov
or
dec
sub
mov
pusha
mov
gs
push
fcmovbe
jb
sub
test
mov
or
or
negb
icebp
icebp
fstpt
jb
ret
mov
xor
or
xchg
or
cli
mov
sahf
ret
mov
out
cmpsl
cmp
js
or
jl
sbb
repnz
sub
push
and
push
aas
push
and
mov
pushf
sbb
arpl
adc
out
or
xchg
ret
das
inc
and
repnz
rorb
push
leave
js
add
lds
xchg
mov
sbb
inc
jae
outsl
ss
push
or
jae
das
mov
dec
dec
movsb
mov
mov
sbb
daa
adcb
rep
incl
mov
xor
mov
cmp
ds
pop
push
cmc
push
xor
xchg
pusha
in
iret
inc
and
adc
cmp
lea
cs
mov
imul
lea
jmp
mov
int
xor
loopne
push
jecxz
out
sub
cmp
jl
adc
add
push
adc
sub
push
xchg
pusha
int3
mov
pop
in
jbe
jno
ds
stos
ficompl
xchg
jg
jae
jg
shlb
shrb
and
inc
rorl
and
scas
nop
fstps
dec
pop
insl
xor
add
int
adc
pop
negb
add
jne
sub
inc
push
lea
jmp
sub
shl
mov
cmp
ret
or
sbb
repnz
pop
js
and
je
dec
sahf
movsl
xchg
adc
dec
fs
insb
xor
adc
cmpsl
arpl
outsl
movl
out
adc
xchg
loope
cmc
pusha
loope
adc
mov
mov
cli
imul
xchg
into
jmp
in
and
test
push
cmp
xchg
pop
test
int
pop
mov
repnz
stos
sub
cmp
std
lcall
push
ja
out
mov
cmp
dec
inc
loope
mov
clc
cmc
push
xor
mov
pop
shr
mov
das
shl
cld
lret
shl
fs
lcall
fistps
jl
pusha
sub
sbb
addr16
mov
adc
dec
js
jno
scas
xor
ss
out
jg
xchg
mov
fs
jge
aaa
mov
test
jecxz
fstps
add
xor
scas
enter
mov
mov
lahf
rcll
testb
xchg
jnp,pn
push
add
xchg
adc
sbb
and
push
add
pop
xor
pushf
cmpsb
jecxz
loop
jle
ret
aaa
xchg
or
adc
repnz
je
call
cltd
mov
lods
not
lahf
jge
divb
inc
aam
fbld
mov
popa
cld
xchg
in
jge
mov
pop
and
lock
jle
push
stos
sub
fwait
push
xor
in
popa
aam
ljmp
inc
pop
into
scas
mov
ret
cmpsb
in
mov
int
sub
movsb
pop
add
scas
sub
shrl
push
imul
cmp
mov
and
pusha
add
sbb
mov
stc
jmp
cwtl
mov
add
sbbb
out
or
jbe
mov
adc
xchg
lds
and
lret
jb
lds
jnp
add
push
xchg
out
jb
or
sbb
mov
inc
pop
jmp
jae
ss
outsb
ja
hlt
mov
jg
adcb
jbe
ljmp
loop
lret
adc
mov
xchg
jl
cmpsl
rcrb
mov
push
rclb
mov
dec
jl
rorb
xor
pop
mov
cmpsb
sti
lret
lret
xchg
jo
add
leave
inc
insl
and
jno
out
xchg
ss
pop
sub
repnz
bound
dec
xor
fs
rolb
rorl
push
in
push
mov
or
mov
pop
xor
cli
popf
aas
push
int
fwait
ss
jae
test
lret
mov
adc
fdivl
jmp
lea
pop
jmp
nop
aad
lock
cmpsb
xchg
adc
jmp
fdivs
xchg
lods
ss
jo
negl
sti
mov
cli
iret
xchg
fstpt
mov
jp
adc
adc
adc
mov
cmp
push
push
daa
and
aas
data16
outsb
arpl
sub
dec
outsl
aas
subl
aad
std
xchg
push
add
dec
cmp
xor
mov
dec
fisttpl
movsb
into
push
add
or
jb
and
lahf
lds
cmp
xchg
or
adc
mov
lds
mov
fwait
insb
pop
and
jp
mov
inc
push
or
leave
xchg
int
lods
lock
mulb
inc
sub
push
into
movsb
jnp
jno
stc
test
lock
xchg
outsb
jno
fiaddl
xor
mov
popw
orb
sti
sbbb
xchg
mov
lret
jnp
pop
repz
fucom
jle
push
or
lcall
mov
movl
inc
mov
cld
xchg
xchg
movl
movw
movsbw
call
jmp
jno
pop
mov
xchg
xor
aas
mov
xlat
inc
sbb
xor
daa
int3
shlb
daa
dec
push
outsl
sub
push
sub
aaa
dec
ja
mulb
popa
sti
in
mov
pop
outsb
pop
test
lock
or
cmp
xchg
sbb
or
adc
je
sbb
push
push
inc
outsl
jns
mov
adc
push
stos
sub
out
jg
test
popf
cmpsb
lcall
or
cltd
cmc
in
sub
jno
insl
sbb
rcl
jecxz
cmp
lock
mov
iret
cli
iret
in
sarl
rclb
mov
jmp
cmc
movb
push
push
cmp
cmp
stc
inc
or
out
repz
jbe
out
pushf
test
mov
in
push
cmp
cmc
test
inc
push
sub
lock
lods
fdiv
fdiv
mov
ret
aam
push
jno
daa
test
jns
sub
notb
cmc
jg
repnz
lahf
cmp
sti
xchg
xor
rcl
cmp
mov
inc
add
and
ljmp
adc
aaa
add
push
sbb
add
add
insl
inc
jge
jno
push
repz
sahf
aas
scas
fildl
push
ret
dec
fadds
jle
sub
pop
cmp
mov
fiaddl
in
push
sub
xlat
xorb
cs
shlb
mov
inc
das
push
sub
aas
jl
push
jbe
xchg
ljmp
out
std
or
cmpl
xchg
jge
loopne
push
and
push
lahf
add
adcb
test
movsb
jmp
adc
test
mov
fisttpl
cli
lret
jno
mov
pop
shll
dec
daa
mov
mov
outsb
rolb
or
lods
xor
shlb
and
xor
mov
mov
das
cmp
push
jg
dec
mov
xor
adc
fs
and
ds
push
xor
mov
roll
xor
mov
and
jne
scas
xor
push
xor
inc
daa
inc
outsl
pop
imul
movsl
mov
pop
sbb
pop
add
jge
jno
and
xor
aam
call
sub
push
push
xor
inc
ss
in
fucom
jmp
mov
jbe
mov
gs
mov
xchg
pushf
icebp
test
test
dec
negb
cs
dec
sub
pop
ds
lds
test
mov
inc
sbb
pusha
mov
scas
cmc
mov
add
adc
adc
pop
sbb
push
outsl
push
pop
add
das
push
inc
jb
bound
lea
push
cmp
lods
sysenter
adc
jno
sbb
js
insb
int
and
jb
addb
xchg
pop
and
test
pop
cmpsb
leave
mov
arpl
xchg
call
lret
inc
lcall
mov
add
sbb
iret
pop
xor
mov
dec
out
inc
push
js
mov
sub
mov
ljmp
lock
lods
cmc
into
mov
dec
jne
xchg
push
inc
cmc
ljmp
movb
ret
mov
pop
mov
inc
xlat
repnz
inc
imul
pop
jo
add
add
out
stos
xchg
out
test
ret
gs
sub
inc
pop
mov
and
enter
lret
jmp
xlat
out
into
imul
out
sub
jae
mov
cmp
xchg
test
sub
jmp
xchg
dec
sbb
inc
pop
inc
pop
inc
outsl
push
enter
inc
stc
hlt
push
js
ljmp
jne
mov
sbb
cli
mov
lock
push
or
fucomi
pop
cmpsb
fisubrl
xchg
and
fistps
and
and
xlat
bswap
mov
fistps
imul
gs
int3
mov
lods
push
shll
lret
fwait
ja
arpl
inc
cmp
jo
jl
jo
sbb
gs
or
sbb
icebp
jle
jbe
jmp
add
dec
outsl
arpl
inc
jb
add
add
xchg
xor
inc
rorl
pop
fildll
pop
cmc
jb
lret
xchg
mull
add
js
js
push
or
mov
cmc
icebp
std
push
ds
push
dec
sbb
dec
sub
pop
outsl
inc
daa
sbb
push
mov
cli
rcll
jmp
andnps
adcl
xor
push
lds
pop
lds
loope
std
push
cmp
subb
das
and
pop
fs
nop
movsl
sahf
pop
adc
out
inc
inc
in
dec
out
aad
pushf
add
scas
leave
xchg
fisttpll
std
sbb
cltd
xchg
or
mov
cli
ja
dec
gs
dec
mov
jnp
xor
cmpsb
int
mov
ror
popf
notb
push
push
lea
out
das
sarb
in
mov
xchg
or
pop
rorb
lods
in
std
cwtl
test
and
ja
fistl
adcb
inc
lds
leave
mov
insb
jmp
enter
jo
call
mov
mov
mul
arpl
es
sbb
add
sbb
lahf
cmpsb
and
repz
pop
cmp
push
inc
mov
ljmp
pop
sbb
add
xor
out
out
cltd
or
mov
push
xor
aas
push
cmp
jle
outsb
push
cmp
ljmp
decl
test
push
add
cwtl
movb
movzbw
call
add
dec
imul
add
add
push
adcb
jo
inc
sub
dec
aad
int
shll
inc
jb
push
rcl
mov
sub
add
aas
jle
pop
les
aas
cli
xor
mov
sub
or
pop
fsubp
jbe
out
sahf
hlt
int
lea
sub
dec
imul
scas
jmp
mov
or
push
xchg
push
outsl
pop
or
lods
es
dec
aam
loope
add
lahf
lahf
fildl
mov
in
xchg
in
xchg
push
aaa
sbb
xor
xchg
test
xlat
xchg
mov
call
add
or
sahf
xor
movsl
nop/reserved
inc
pop
inc
mov
mov
jno
imul
cltd
in
insl
in
add
js
psubusb
fimull
lods
xchg
cmp
mov
push
and
fs
lods
jo
cmp
mov
into
bound
movsl
mov
ret
bound
cmp
fucom
push
outsl
aaa
sub
sbb
mov
mov
lds
fsub
lods
jmp
mov
lret
mov
lea
pop
pusha
pusha
pushl
ret
data16
test
jno
dec
shrl
lds
or
test
mov
or
insl
rcrl
aad
and
jo
mov
rcrl
fwait
call
mov
stc
push
inc
je
das
adcl
dec
cltd
std
mov
lret
movsl
jle
repz
dec
xchg
jmp
sub
xchg
lret
cmp
sub
loopne
in
pop
das
jne
mov
xor
pop
jbe
scas
jo
stos
xor
sub
inc
push
jb
push
sbb
mov
cmp
int
mov
fs
jae
jmp
jmp
das
adc
adcl
pop
jle
xchg
stos
pop
jle
adc
inc
bound
jbe
cmpsb
and
and
sbb
ss
push
xor
or
inc
dec
iret
test
bound
test
xor
or
es
cmc
sub
xlat
cmp
lods
cwtl
aad
mov
in
cmc
xchg
mov
pushf
mov
lods
in
das
pushf
imul
pusha
pusha
cmc
add
pushl
mov
movb
push
lea
jmp
mov
pushf
pushf
pushf
pushl
ret
sub
call
pop
inc
sbb
movsb
xor
je
insb
in
adc
repnz
push
sbb
or
arpl
nop
mov
daa
jb
rep
mov
sbb
cmp
lahf
lock
cli
popf
mov
mov
popf
nop
sbb
pop
dec
js
jp
sub
ret
cwtl
scas
fcmove
test
mov
in
mov
inc
sub
push
into
push
push
daa
inc
jnp
addr16
pop
inc
ja
or
pop
lret
out
insl
pop
add
test
jno
scas
cmp
adc
cs
jle
and
cmpl
pop
xor
int
arpl
mov
mov
daa
dec
adc
fwait
push
pushf
test
cmp
adc
mov
push
enter
sbbb
not
movsb
test
or
cli
pop
repz
mov
int3
and
popa
in
cmp
sbb
je
sbb
sbb
cmp
rcrb
nop
mov
or
shll
add
lods
mov
outsb
or
xor
mov
into
imull
xchg
ss
adc
fistpll
out
jo
cltd
iret
pop
push
push
dec
pop
cmp
cmp
nop
mov
arpl
arpl
xchg
xor
daa
mov
fwait
lds
adc
cmpl
pop
aad
add
xchg
fisttpll
test
imul
pop
arpl
lods
shrl
jmp
jne
inc
adc
iret
cld
cmpsb
das
in
addr16
cmpsb
popf
mov
iret
xor
sarb
hlt
sarl
test
imul
pop
lret
pop
add
adc
cmp
add
inc
outsl
mov
jb
xchg
xchg
jno
mov
mov
pop
fbstp
aaa
pop
mov
test
pop
push
lods
es
add
int
and
inc
add
iret
dec
rorl
mov
push
mov
xchg
adc
sti
bound
dec
popa
adc
flds
sbbl
or
or
loopne
movsl
or
add
cltd
sub
aam
push
jp
scas
inc
push
ficoms
subb
or
xchg
and
lea
cmp
sbb
inc
and
pop
jb
in
mov
push
mov
xchg
jno
xor
divl
lcall
pop
add
add
inc
jo
enter
mov
mov
mov
lea
inc
je
jae
imul
jne
dec
leave
xchg
pop
cld
sbb
push
sti
in
add
jns
out
push
es
es
adc
aad
push
inc
push
mov
mov
inc
and
jl
out
adc
jecxz
ds
mov
or
ljmp
sub
fildl
sahf
les
lods
cmp
cmp
lods
jnp
xchg
mov
fsubr
lods
icebp
mov
test
lret
xchg
aas
mov
addb
stc
jmp
add
dec
insb
gs
outsb
imul
imul
push
mov
movw
movl
pushf
mov
mov
lea
jmp
jae
std
mov
jno
sbb
sub
dec
into
mov
adc
pop
and
andl
pop
lds
and
repnz
in
mov
int
repnz
xchg
movb
dec
dec
jns
or
adc
cli
daa
fwait
xchg
sbb
ja
push
imul
push
adc
sub
mov
sbb
fwait
mov
or
pop
jecxz
lds
add
xchg
enter
mov
test
fistpl
and
mov
mov
jno
pusha
cmc
mov
mov
jo
mov
stos
popf
std
fimull
xchg
mov
insb
repnz
xor
mov
das
inc
pop
and
out
outsl
push
movsl
into
hlt
or
and
pop
or
stos
or
sub
dec
lock
cmp
mov
cli
cmp
and
push
out
dec
pop
jle
fwait
cld
ret
cmpsb
xor
in
aad
sbb
clc
dec
or
movsb
pop
add
rorb
or
mov
inc
sbb
int3
out
shr
adc
inc
sub
movsb
stc
mov
call
xor
lcall
push
call
fsub
rorl
fidivrs
lahf
sbb
jnp
outsl
push
inc
fs
mov
popf
negb
xorps
insb
cmc
into
adc
arpl
cs
pop
jecxz
push
pop
xlat
les
push
fwait
adc
cmp
movsb
iret
clc
inc
push
or
pop
jnp
jne
xor
mov
jle
mov
inc
adc
in
and
pop
icebp
les
inc
das
adc
shll
pop
lret
lock
jb
call
jne
jns
dec
or
xor
in
test
scas
cmp
jno
sub
cmpsl
fisubrs
lcall
mov
leave
loopne
and
add
or
js
cwtl
mov
pop
sarb
or
push
sbb
mov
mov
xchg
cmp
cmp
shrl
ret
gs
cmp
out
inc
fld
sbb
mov
push
fstps
les
mov
js
or
and
lods
in
fnstsw
mov
stc
rcr
test
mov
ret
jno
jo
mov
flds
int
andl
mov
aaa
cwtl
loope
mov
or
rcr
jp
cmp
pop
and
shll
jp
mov
scas
adc
fnsave
push
sti
pop
ss
pushf
jo
push
std
pop
xor
mov
dec
shrl
in
fcmovu
jnp
jo
jo
mov
adcb
lret
jp
mov
popa
pop
or
dec
jge
adc
daa
xor
setne
sub
push
lea
mov
pusha
mov
bswap
lea
setns
movb
mov
call
sahf
inc
aaa
popa
add
or
push
and
mov
icebp
aas
jl
xor
jns
xchg
stos
cmc
out
movsl
fiaddl
in
and
fiaddl
popl
fcoml
in
movsl
test
push
or
pop
das
or
push
adc
dec
xchg
xchg
xor
loope
inc
and
arpl
xor
inc
and
iret
mov
popw
inc
jnp
add
add
std
lock
add
pop
push
fmull
mov
nop
jmp
cwtl
or
ss
inc
sub
std
mov
inc
xchg
lods
out
ds
ret
shl
push
sbb
cmpsl
cwtl
jno
adc
fwait
ret
std
lcall
mov
pusha
icebp
shr
das
cmpsb
cmp
cld
xorb
lret
xchg
insl
mov
outsb
add
rorl
loopne
sbb
fistpll
push
lea
jno
or
rorb
sub
or
out
hlt
gs
fldlg2
arpl
or
mov
xlat
es
fcmovb
sbb
cmp
jp
add
call
aas
xchg
jg
sbb
xlat
lcall
imul
cld
and
xchg
out
mov
xlat
imul
fdivrl
call
xchg
lret
stos
sbb
aad
add
into
lea
jno
js
sti
std
bound
adc
test
out
ds
je
out
mov
hlt
jns
cltd
cmp
fcomps
jne
mov
in
jp
pop
pusha
pop
jle
ret
int3
out
push
pop
daa
bound
out
xorl
notb
int
sti
dec
or
lods
dec
mov
sub
out
stc
rcll
scas
lret
scas
test
or
push
aad
aad
inc
push
test
sub
outsb
jge
xor
movsb
adc
inc
mov
mov
dec
sbb
int
adc
pop
or
fistpll
or
dec
sbb
push
xchg
xorl
and
shl
mov
dec
popa
or
sub
inc
mov
and
sar
arpl
shrb
stos
mov
mov
scas
xlat
iret
jmp
add
insl
inc
inc
shr
xchg
lcall
xchg
enter
mov
inc
sub
sbb
cmp
inc
outsl
adc
and
jo
sbb
fs
loop
add
cmovb
call
mov
jno
icebp
fs
adc
shrb
add
in
fwait
mov
pushf
cmpsl
lods
fld
lcall
add
lods
fnstsw
push
std
imul
adc
jno
cld
data16
test
fs
pushf
shlb
xchg
aaa
jbe
push
sub
jbe
push
jae
popa
dec
adc
in
mov
add
imul
cmp
cmp
push
xor
out
shl
loop
xor
inc
mov
imul
push
pusha
in
mov
sub
insb
pop
sub
je
xchg
scas
inc
mov
sbb
adc
fwait
pop
fisubs
or
jnp
lds
sbb
arpl
ds
push
inc
push
sub
lcall
mov
jecxz
jae
sbb
adc
jge
xchg
xor
hlt
gs
mov
adc
mov
mov
fwait
jne
pop
or
frstor
and
jp
jg
mov
insl
nop
pop
lock
cmp
lret
ljmp
into
push
std
sti
mov
lods
lret
and
adc
mov
dec
sbb
add
push
cmp
dec
sbb
stc
stc
add
pushf
movb
mov
clc
mov
push
pushl
bt
test
mov
jmp
cs
mov
dec
int3
push
les
pop
xor
xor
imul
sub
sub
inc
pusha
lds
pop
clc
pop
int3
jns
inc
sbb
lret
movl
inc
jle
daa
add
dec
xor
push
mov
mov
gs
mov
dec
scas
in
add
sahf
scas
ficompl
jecxz
call
push
imul
jmp
scas
jecxz
push
or
loop
add
aaa
add
jbe
push
cmp
cs
outsb
push
adc
jp
call
xor
inc
xchg
adc
mov
mov
fsubrl
adc
mov
out
in
inc
das
push
das
test
cwtl
fsubr
cmc
clc
out
xchg
pop
ss
xchg
std
les
popa
insb
push
cli
aaa
push
mov
hlt
cmpl
xchg
mov
enter
cld
mov
fnstsw
iret
scas
mov
and
ja
cmp
pushf
test
pushf
pushl
lea
je
cmc
stc
jmp
lea
je
pusha
push
movw
lea
jmp
lea
sbb
mov
xor
add
rol
or
mov
mov
stc
movzbw
add
shrd
clc
btr
movl
adc
pushf
inc
test
mov
sub
pusha
clc
cmp
pusha
call
je
aad
clc
sub
sub
adc
mov
mov
jmp
lea
pushl
lea
jbe
push
pushf
pusha
pushl
pushf
mov
pushf
pushf
mov
pushf
pushl
ret
jmp
setne
adc
or
pushf
icebp
push
and
xor
jne
sub
pop
fsub
cmp
movsb
into
idiv
outsl
and
stos
mov
out
xor
pop
lret
sti
in
fsubrl
push
sbbb
xchg
jle
sub
cmc
mov
dec
pop
xchg
ljmp
cmp
in
push
call
and
insb
push
xor
adc
jb
add
cs
push
xchg
notl
mov
iret
inc
stos
dec
imul
ds
pushl
pusha
lea
jne
mov
pushfw
pusha
mov
cmp
stc
cmp
test
not
clc
clc
add
clc
not
test
cmc
add
clc
cmp
pushw
popfw
pushf
inc
push
pushf
movb
call
out
xchg
xchg
adc
xchg
adc
andl
rcrb
dec
ss
add
ret
sarl
mov
testb
imul
push
jns
pop
add
cmp
int
iret
cli
mov
scas
cli
cmpsl
ljmp
xlat
xor
jge
fisttpll
fs
je
test
add
jmp
stc
cmp
movl
movb
call
call
pusha
movl
call
push
dec
dec
dec
dec
cs
insb
add
jno
insl
sbb
loopne
adc
push
jg
jb
sbb
mov
mov
in
lcall
push
outsb
and
decb
inc
adc
push
scas
mov
in
mov
insb
inc
dec
xor
or
sbb
cltd
jb
pop
ds
push
xchg
test
add
dec
es
or
leave
mov
jle
add
push
jnp
outsl
jae,pn
movsb
test
cmc
aam
pushf
in
cmc
data16
jp
adc
xor
out
repnz
out
xchg
adc
mov
add
pop
and
pop
add
pop
lds
fistpl
adc
mov
loop
pop
stc
xchg
or
inc
jo
sahf
jle
mov
dec
add
pushf
add
imul
lea
out
mov
push
cmp
repz
ljmp
mov
mov
lods
lea
xchg
cltd
xor
mov
jno
negl
pop
mov
fistpl
out
lcall
jle
fwait
xor
adc
inc
dec
lds
adc
bswap
arpl
jg
inc
loopne
rcl
jmp
pusha
or
jne
add
popf
test
addr16
shll
or
cmp
cwtl
test
enter
movsb
cmc
scas
mov
lcallw
or
adc
pop
stc
nop
in
addb
sub
pushf
adc
and
cs
mov
fucom
ja
inc
add
push
rclb
mov
xchg
das
mov
popl
jno
add
xchg
popw
je
imull
lret
cli
orb
daa
jb
es
adc
adc
sub
loop
adc
sub
ror
lock
pusha
mov
push
sub
cmc
into
sahf
sbb
cs
js
mov
mov
loopne
in
mov
cld
popf
cmpsb
mov
fimull
gs
xor
test
call
rorb
sub
fidivs
ss
outsb
pop
jl
xorb
pop
inc
or
sbb
sbb
xor
arpl
adc
adc
gs
lods
and
sbb
ds
ret
xchg
pop
dec
add
sub
loope
sub
push
sbb
test
xor
mov
fisubrs
movsb
fisubrl
out
and
mov
mov
pop
or
sbb
add
and
dec
daa
test
mov
jle
pop
xchg
adc
sub
repz
incl
mov
mov
subl
rorl
or
mov
pop
cmc
jbe
or
movsb
mov
lock
mov
pop
aas
mov
insb
shll
adc
add
add
insb
adc
adc
mov
mov
dec
pop
rcrb
inc
mov
adc
scas
jbe
stc
test
inc
jo
adc
jl
fs
xchg
cmpsb
push
push
int3
test
mov
jmp
pop
sti
xchg
out
dec
xlat
push
ret
dec
arpl
das
mov
cmp
mov
call
shlb
push
lds
or
adc
lea
add
test
sarl
iret
outsb
adc
adc
mov
add
mov
add
scas
cmpsb
cmp
adc
mov
cltd
mov
movsb
cltd
int3
les
push
popf
cld
int
lahf
add
lods
mov
lret
lahf
out
arpl
pop
jbe
incb
les
shlb
mov
jb
gs
pop
mov
xor
lcall
loopne
sarl
adc
cmpsb
leave
mov
cld
mov
ret
outsl
in
sbb
push
push
mul
mulb
fistl
push
lret
dec
mov
in
fidivl
pusha
dec
adc
and
push
fiadds
sub
test
les
pushf
cmpsl
mov
mov
pop
aam
test
sbb
shll
cmp
mov
mov
xor
call
sub
loop
pop
out
repz
sub
add
nop
mov
les
cmc
add
xlat
cmp
ret
inc
xor
repz
pop
push
jp
out
arpl
mov
fstpt
xchg
mov
lock
mov
lock
fdivrp
pushl
sar
stc
stc
mov
shr
add
inc
mov
bt
push
test
lea
call
mov
jno
mov
das
pop
arpl
mov
in
cwtl
mov
gs
and
ret
jecxz
mov
pop
aaa
movq
bound
mov
dec
jbe
dec
cmp
pop
imul
mov
add
xlat
jne
repnz
sbb
dec
scas
aas
cwtl
jle
add
dec
enter
adc
cmp
inc
insl
xor
pusha
pop
xor
stc
and
fmuls
add
cwtl
adc
and
cmp
pushf
loope
sbb
inc
out
jns
test
push
imul
mov
repz
add
xchg
xlat
or
mov
sbb
mov
dec
rcrl
xor
pushf
mull
test
je
pusha
ftst
test
loope
test
fdivrl
adc
das
sub
enter
dec
or
pusha
cwtl
mov
mov
mov
fcomps
or
sub
dec
fdivp
movsb
call
fiaddl
lcall
push
insb
fwait
outsb
aaa
outsb
leave
lock
mov
mov
test
xor
add
pop
imul
pop
pop
lret
stc
pusha
pop
mov
sub
fistpl
jnp
ret
sub
mov
xchg
mov
aas
jp
icebp
fldt
int3
loopne
or
fwait
aaa
movsb
mov
and
dec
mov
stos
cmpb
cmp
ret
and
xchg
leave
lock
mov
enter
out
push
lret
inc
dec
lods
lcall
jo
sbbb
sub
popf
and
mov
and
in
repnz
mov
js
aam
and
or
ljmp
mov
cmp
or
xlat
push
repnz
xor
in
push
in
adcl
paddsw
dec
xchg
xchg
lds
mov
jb
push
js
cmpsl
xor
xor
pusha
pop
or
jo
or
cmp
lds
and
fwait
adc
mov
pop
xchg
add
lcall
nop
les
les
jl
mov
imul
adc
movsl
iret
push
cmpsb
sub
dec
ds
js
jae
clc
xor
cltd
mov
gs
jmp
mov
in
scas
test
mov
mov
in
mov
mov
outsb
xchg
aam
fildl
orl
pushf
adc
xor
lods
shll
add
mov
pop
sbb
mov
xchg
lret
push
add
cwtl
pushf
mov
adc
jmp
add
push
or
inc
in
dec
sub
loop
rorl
xchg
shr
xchg
notb
sti
bnd
leave
lods
xchg
jne
cmpsl
mov
sar
mov
aam
movsb
loope
icebp
mov
mov
popf
nop
xor
movsbw
rol
bsf
push
xchg
neg
mov
mov
movsbw
btr
mov
adc
add
shr
mov
add
sub
push
lods
mov
not
xor
jmp
rorl
pushf
adc
pop
lret
mov
scas
or
scas
mov
int3
dec
dec
jbe
stos
inc
dec
aas
nop
sbb
je
jl
lods
popf
mov
dec
inc
or
jno
imul
hlt
dec
leave
dec
jae
lcall
adc
jae
test
inc
inc
xchg
out
jecxz
pop
shlb
sbb
adc
test
jb
xchg
cmp
mov
out
dec
push
inc
xchg
dec
jmp
mov
lds
sub
and
push
xchg
push
js
icebp
mov
cmpsb
xchg
ret
fildl
test
repnz
jp
jle
sub
jo
not
cmp
clc
cmp
pusha
add
push
movb
stc
jmp
mov
pushf
movb
pushl
lea
jmp
flds
mov
pop
hlt
repnz
mov
sbb
add
out
adc
push
xchg
dec
lret
stos
and
mov
shr
pop
sbb
jne
imul
mov
hlt
adc
icebp
sahf
sti
popa
lahf
imul
cmp
outsl
cmpsb
aaa
or
adc
fdivrl
repnz
inc
xor
jnp
xchg
cvtdq2ps
dec
je
push
js
test
lods
sub
and
lret
mov
adc
pop
cmpsl
int3
pop
sub
rcll
lock
mulb
mov
fbstp
mov
sbb
pop
stc
add
pushf
scas
or
adc
stos
add
mov
bnd
xchg
in
ret
jle
pop
jmp
arpl
stos
and
ljmp
pop
cmp
cmp
inc
jp
imul
jne
mov
jns
xchg
adc
loopne
hlt
fldcw
adc
in
mov
push
mov
jb
pop
lods
cmpsl
adc
int3
repnz
mov
das
mov
rclb
je
lahf
out
jle
push
push
mov
out
cmp
stc
rclb
push
xchg
mov
push
sahf
sbb
mov
mov
xchg
cmpsb
jmp
cltd
jbe
add
push
cltd
cld
rcll
lahf
adc
mov
jo
xor
or
popa
lea
push
jne
or
pusha
dec
shrl
push
pop
ret
xchg
pop
stos
mov
add
dec
xor
mov
and
rorb
or
outsb
std
gs
mov
mov
addl
in
aam
xor
sahf
cwtl
gs
imul
push
push
mov
push
xchg
cmp
sbb
sbb
adc
shr
mov
lahf
or
inc
out
adc
aaa
pop
dec
jl
call
lcall
sbb
lea
in
or
pop
xor
mov
cmp
stos
shl
dec
aaa
insb
cmpsb
shr
inc
int3
cmpsl
nop
imul
push
inc
imul
lods
int3
imul
mov
stc
rorl
pusha
cmp
pop
add
in
pushf
bound
push
fsubr
fmuls
adc
outsl
xchg
ljmp
jae
xchg
loope
fwait
sub
jnp
sub
adc
xchg
lds
jnp
ret
push
shr
mov
jne
push
xor
test
repnz
mov
pop
dec
xchg
subl
ljmp
pop
mov
out
inc
jmp
clc
lods
xchg
jbe
mov
inc
out
loop
mov
xchg
jmp
subl
mov
mov
cld
pop
cmp
cmpsb
xor
les
push
pop
imul
sub
add
mov
jmp
mov
imul
scas
cmc
iret
ret
out
insl
scas
neg
pop
sbb
dec
sbb
ficomps
cmp
add
xor
test
insb
adc
mov
push
pop
xor
and
xor
pop
jp
mov
lret
outsl
and
mov
shr
mov
dec
fs
icebp
imul
add
xchg
jnp
lahf
mov
pop
fcoml
push
jg
mov
arpl
jl
mov
lods
in
xchg
out
mov
sub
inc
sub
psrad
ja
pop
jo
and
mov
cmc
sbb
cmp
jns
stos
lret
adc
daa
add
sbb
sub
int3
xor
mov
mov
aad
call
xchg
lods
xchg
pusha
pushf
add
cmc
cmc
stc
not
dec
pushf
test
add
mov
call
int3
leave
mov
or
mov
lret
xchg
or
xchg
enter
fisttps
or
mov
mov
fisttps
mov
enter
mov
dec
or
lret
inc
mov
fistps
cmc
mov
push
fisubs
adc
pop
xchg
shrb
jge
xchg
scas
add
dec
faddl
jne
or
shrb
or
add
outsl
clc
pop
repnz
in
into
fiaddl
shl
bound
mov
mov
mov
mov
pop
cld
rcl
bound
inc
add
push
inc
sbb
mov
pusha
jl
into
jo
cmp
inc
jge
sbb
push
pusha
sub
cwtl
ret
sub
insl
cmp
into
scas
xchg
outsl
mov
inc
cmp
jecxz
pop
outsb
add
test
pushf
das
mov
mov
flds
or
mov
sub
adc
mov
mov
out
rclb
sti
and
lds
adc
push
mov
shll
cltd
jno
push
xor
mov
aad
add
out
movsl
loope
test
in
cltd
lods
ss
fxch
negl
cmpsl
repnz
scas
out
test
add
sbb
xchg
mov
mov
adc
insb
int
cmp
pop
into
jge
in
test
or
jl
mov
jmp
mov
ret
fnsetpm(287
jl
adc
xchg
in
ret
enter
and
lea
dec
cmp
sbb
fucom
rcll
fcom
mov
jl
adc
dec
mov
xor
leave
pop
outsl
xor
popf
push
mov
fwait
loop
push
jae
pop
xor
push
stos
fxch
in
jae
sbb
hlt
add
fistpl
negb
cmp
negb
cmpsb
fwait
mov
lahf
push
pop
scas
mov
leave
xchg
sbb
cltd
cmp
lds
jbe
shlb
stos
aam
shlb
ret
xchg
xchg
shll
mov
mov
stc
cli
cmp
dec
or
push
jle
adc
jle
jbe
jns
push
cmpsl
in
aad
aas
push
arpl
movsb
adc
push
sub
cmc
test
dec
jge
mov
insl
jb
scas
add
pop
punpckhbw
mov
loop
pop
js
cltd
jne
xchg
sub
daa
divl
orb
and
pop
aas
add
inc
jge
sub
fstp
jmp
insl
pop
ds
fcom
stc
mov
push
fxch
dec
push
and
xchg
jae
adc
mov
mov
add
cld
aad
mov
leave
clc
cltd
int3
loope
mov
decl
clc
stc
mov
not
lea
mov
bswap
sub
bswap
lea
clc
jmp
pushf
mov
pushf
push
pushf
push
pushl
ret
faddl
movsl
adc
popa
les
mov
dec
and
clc
mov
aas
mov
inc
leave
pop
and
xchg
icebp
into
push
mov
pop
push
shlb
out
loopne
ret
repz
sub
stos
jge
lock
xchg
jae
mov
test
mov
outsl
inc
add
sub
popf
enter
aaa
lods
test
cwtl
das
mov
fisubrs
sub
cmp
fdivp
cmpsb
xchg
cmpsb
out
sar
lcall
iret
xchg
scas
cmp
jg
movsl
adc
adc
mov
cmp
or
push
adc
aad
push
lcall
sub
adc
cmpsb
das
jb
mov
pop
mov
out
jns
add
pop
insb
cli
imul
xor
das
push
aas
pusha
js
loopne
sbb
pop
imul
inc
push
or
cwtl
mov
loopne
jl
int
fucom
jle
popf
pop
inc
sub
pop
ret
xchg
mov
mov
mov
std
stc
push
xchg
cmp
push
rorl
mov
xor
lcall
inc
sbb
mov
fcoms
inc
xor
and
and
mov
add
cmp
out
aam
cmp
sbb
fistpl
pop
xchg
mov
lret
fdivrl
data16
leave
dec
and
mov
mov
dec
or
add
xor
mov
lea
imul
jge
lret
cmpsb
lahf
add
addb
dec
or
push
xor
rcl
sub
ret
into
dec
push
jg
mov
jno
dec
fistps
mov
outsb
repz
cmpsb
xor
xor
loop
or
cmp
xor
or
stos
daa
mov
mov
add
jnp
add
inc
fcompl
std
out
xchg
js
or
mov
andl
xchg
mov
cmp
sbb
inc
sbb
fcmovbe
jb
push
xchg
lea
jne
pusha
pusha
jmp
shr
mov
jmp
sbb
out
setb
dec
ja
fistps
adc
jno
hlt
add
out
arpl
adc
imul
sub
je
mov
dec
popa
inc
mov
push
por
inc
repz
jb
push
and
push
daa
push
inc
sbb
xchg
in
lahf
adc
jge
sti
cmpsl
adc
add
xor
xor
loop
sbb
sahf
test
movsl
mov
icebp
push
popf
es
and
inc
adc
popf
cli
mov
ljmp
rorb
cmp
mov
pop
jmp
push
xor
adc
daa
loope
adc
inc
sbb
xchg
or
xchg
movsl
xchg
mov
cs
mov
insb
dec
adc
popf
es
ret
push
icebp
int3
cltd
rolb
loope
fidivrs
or
movl
lea
jmp
lea
and
shld
push
xor
mov
pusha
shr
mov
bt
bswap
xchg
shl
not
mov
stc
bt
xchg
setne
mov
rol
rcr
bsf
stc
mov
movsbw
mov
shld
mov
shl
pushf
rol
seto
mov
pusha
or
jmp
lods
ss
adc
jmp
xchg
xor
push
lcall
stos
mov
std
push
repnz
and
and
cmc
xor
jnp
or
cwtl
pushf
xor
into
outsl
into
cmc
or
jb
inc
ljmp
mov
mov
out
icebp
sbb
adc
xchg
movsl
jge
scas
outsl
push
jne
lods
push
mov
mov
xor
mov
dec
popa
out
mov
jae
and
pop
or
je
cwtl
outsb
ret
pop
stc
rolb
cmc
lods
int
lods
xchg
jns
inc
int3
xchg
in
rolb
mov
sbb
not
lea
push
lea
jmp
push
outsb
ss
sbb
jg
xchg
adc
lcall
fwait
dec
mov
into
dec
out
and
cmp
dec
and
inc
pushf
cmc
cwtl
add
outsb
ficoms
mov
or
pop
negb
or
dec
jbe
lret
out
testl
sub
aas
insb
sub
insb
or
ljmp
or
mov
adc
xor
and
icebp
enter
mov
cwtl
fisttpll
int
push
pop
fistpll
je
add
xor
movb
movl
pusha
push
movb
pushf
movl
pushf
pushl
movl
mov
lea
jmp
push
or
movsl
add
into
inc
ret
dec
adc
in
mov
test
inc
mov
aad
jge
or
sub
sahf
test
adc
pop
sub
pop
and
movsl
cs
rcll
inc
adc
repz
scas
push
jne
xor
jle
jge
sbb
bound
fs
sbb
sub
shr
sbb
std
jns
pop
xor
xor
push
sub
jae,pt
jg
jnp
adc
or
in
fcmovu
dec
mov
lea
jae
push
pusha
lea
jne
jmp
sub
rep
adc
shrb
push
rcrb
test
test
sti
jo
cmp
fs
jp
mov
shl
push
js
adc
lea
sub
add
push
ret
add
or
jb
push
into
test
insl
cmp
imul
fstp
sub
mov
sti
lods
int3
imul
push
mov
fldenv
push
jge
imul
pop
cmp
arpl
outsl
ds
sub
and
sub
call
dec
xor
cmp
mov
pop
and
mov
std
ret
into
test
aaa
mov
adc
jne
gs
ljmp
adc
ss
xchg
add
repnz
push
cmp
cmp
adc
mov
mov
gs
jp
loopne
scas
adc
dec
adc
add
inc
and
jne
jge
push
std
sub
repz
inc
gs
imul
inc
add
rorb
nop
ret
xchg
sub
add
inc
sbb
add
les
pop
movzww
call
add
jmp
mov
jmp
mov
call
bt
shld
sar
xor
mov
test
clc
sub
pushf
pusha
pushf
mov
pushf
lea
jmp
mov
stc
jmp
mov
pushf
mov
call
mov
call
pushl
mov
call
pushl
popl
push
movl
movw
pushf
mov
mov
lea
jmp
push
jmp
call
lea
cwtl
cmc
mov
shrd
clc
mov
jmp
mov
mov
movw
mov
lea
jmp
pushf
call
push
mov
pushf
push
lea
jmp
stc
add
call
std
call
pushf
mov
pushl
lea
jae
push
pusha
mov
call
movl
push
pushl
lea
jmp
call
cmp
movb
sub
call
pushl
popl
movb
mov
mov
lea
jmp
lea
je
jmp
pushf
pushl
popl
pushf
push
lea
jmp
setge
not
movsbw
mov
jmp
sbb
jmp
not
mov
movb
lea
push
call
mov
call
lea
ja
mov
mov
xor
mov
aam
lea
bswap
sub
pusha
lea
inc
sbb
btc
and
sar
sub
pop
mov
not
push
pushf
popl
push
mov
bswap
xchg
mov
not
lea
jmp
pushf
call
mov
rcr
sub
mov
push
shl
btc
mov
cmp
add
movb
pusha
mov
pushl
pushl
lea
jmp
pushf
mov
pusha
push
mov
pushl
mov
mov
push
mov
movw
mov
pushf
jmp
push
mov
call
call
call
cmp
cmp
not
stc
cmc
pusha
sub
cmp
and
mov
pushf
call
mov
call
pushf
popl
call
mov
lea
jo
push
mov
pusha
mov
push
mov
lea
jmp
mov
jmp
jmp
push
mov
mov
pushf
pushf
pushl
movw
repz
popl
push
push
call
movl
pushf
call
call
lea
pusha
mov
pushf
pushl
lea
jmp
adc
shl
cbtw
call
mov
pushf
call
call
jmp
inc
bt
sub
jo
stc
stc
sub
stc
pusha
xor
jmp
sar
shrd
mov
clc
stc
sub
call
bswap
lea
push
mov
cwtl
mov
push
push
call
mov
push
mov
push
call
mov
lea
jns
pushl
pushf
push
movl
pushf
pushl
pushf
pushf
lea
jmp
mov
mov
inc
not
or
mov
jmp
test
sub
call
inc
pusha
call
test
neg
pusha
push
inc
call
cmpl
call
pushl
popl
movb
lea
jmp
mov
pusha
pusha
pushl
lea
jmp
call
clc
sub
pusha
call
pushf
mov
pushf
mov
pushf
movw
pushf
pushl
popl
movb
jmp
call
jmp
mov
jmp
push
bt
pushf
pushl
popl
clc
cmc
add
test
pusha
cmp
pushf
pushl
popf
push
lea
jmp
pushf
mov
pushf
lea
jae
mov
pusha
lea
jmp
jmp
jmp
jmp
call
call
movw
pushl
popl
call
shl
mov
add
bts
shld
and
add
ror
xor
neg
jmp
pushl
mov
pusha
pushf
movb
lea
jmp
call
call
cmc
mov
and
clc
clc
cmp
call
bt
movb
push
xor
pushf
pushf
call
sub
pusha
add
movb
pushf
popl
mov
pushl
popl
mov
pushl
push
lea
jmp
add
or
jmp
neg
sub
sar
rol
mov
shr
shl
and
xchg
mov
xor
cmp
push
not
add
lea
pushf
mov
movzbw
cmp
bt
xor
lea
not
mov
mov
pushf
inc
bsf
call
mov
cmp
call
pushl
pushl
popl
pushf
lea
jmp
call
cmp
call
add
mov
shrd
bswap
not
rcl
cmc
and
push
mov
pusha
push
add
jmp
call
pushf
clc
and
lea
jo
pushf
push
pushf
popl
push
movb
call
mov
call
xor
jmp
mov
pushl
mov
call
call
pushf
movw
pushl
mov
call
pushf
pusha
mov
call
jge
pusha
mov
std
movzbw
mov
call
pusha
sub
stc
bt
mov
inc
mov
pusha
mov
stc
test
cmp
add
cmp
call
call
jmp
cmp
push
bt
cmc
add
push
mov
push
pushl
lea
jmp
mov
jmp
mov
mov
ror
pushf
pushf
inc
call
pusha
mov
push
pushl
push
lea
jmp
pushf
pushf
pushf
popl
push
push
pusha
mov
pushl
popl
push
push
push
push
lea
jmp
jmp
not
pushf
xchg
mov
call
cmc
pushl
shl
mov
mov
jmp
call
movw
jmp
pushl
pushl
popl
jmp
movsbw
bsr
not
sar
mov
stc
add
pushf
jmp
lea
jns
mov
pushf
pusha
push
lea
jmp
call
inc
jmp
mov
movb
mov
jmp
mov
pushf
jmp
pusha
lea
call
push
jmp
pusha
pushf
call
shl
or
test
mov
not
stc
mov
bt
clc
sub
clc
clc
cmp
shl
call
pusha
pushf
pusha
mov
jmp
jmp
pusha
mov
movb
mov
call
aas
cwtl
aam
mov
stc
push
stc
add
jmp
repz
popl
pushf
push
mov
pushf
mov
mov
mov
jmp
lea
ja
pushf
pushl
popl
jmp
setbe
pushf
call
call
push
pusha
movb
movb
pushl
popl
pushf
movl
pusha
lea
jmp
jmp
stc
stc
sub
push
jmp
rdtsc
pusha
cmc
bt
bt
sub
jmp
call
call
jmp
push
mov
jmp
push
pusha
mov
pushf
mov
call
mov
push
lea
jmp
lea
jne
rcr
mov
pusha
lea
xorb
movzbw
pushf
mov
mov
movb
lea
jmp
pusha
pushf
push
mov
mov
mov
lea
jns
mov
push
lea
jmp
inc
call
pushf
mov
pusha
pushl
pushl
ret
pushf
mov
jmp
movb
push
mov
mov
jmp
jmp
adc
not
or
mov
stc
add
pushf
lea
jmp
mov
jmp
clc
shl
mov
lea
jae
mov
pushf
pushf
popl
jmp
call
movw
rep
movzbw
mov
bts
rcl
rol
mov
cmc
std
pushf
pushl
popf
pushl
movb
lea
jmp
das
sbb
aas
mov
clc
pushf
xor
mov
bt
xor
ror
mov
pusha
pusha
test
bt
add
test
cmp
push
shld
movb
mov
pushf
pushf
popl
pushf
pushf
call
call
call
call
jmp
pushf
pusha
mov
call
pushf
popl
call
pushf
mov
movb
jmp
pushl
popl
jmp
mov
mov
mov
movw
pushf
lea
jmp
rcr
bt
movzww
bt
test
sub
call
jmp
mov
pusha
push
mov
jmp
call
mov
pushf
jmp
movw
mov
pushf
pushf
pushl
popl
pushf
movl
pushf
push
lea
jmp
pusha
mov
pushl
mov
movw
pushf
lea
jmp
push
pushl
repz
popl
pushl
mov
jmp
jmp
pusha
call
mov
pushf
lea
jmp
pushf
mov
call
call
pusha
mov
pushf
movl
mov
pushf
lea
jmp
jmp
call
inc
clc
xor
cmp
cmp
sub
push
stc
sub
lea
jo
inc
pushf
lea
jbe
pusha
mov
pusha
lea
jmp
mov
call
push
call
clc
mov
add
clc
pusha
jmp
mov
push
call
cmp
test
mov
neg
mov
push
add
jmp
shld
movsbw
movzbl
shr
call
mov
pusha
pusha
mov
jmp
pushf
mov
jmp
jmp
push
pushf
mov
movw
pusha
push
lea
jmp
push
pushf
popl
push
jmp
push
call
pusha
pushl
popl
call
lea
je
bt
cmp
xor
pusha
cmp
cmp
xchg
clc
clc
clc
mov
movw
cmp
sub
push
lea
jne
cmc
cmp
clc
cmc
sub
push
pushl
xchg
jmp
jmp
btr
mov
not
mov
push
cmc
not
call
movl
movw
movw
lea
jmp
shld
setno
sub
bswap
notl
inc
cbtw
clc
mov
clc
cmc
sub
clc
call
mov
push
mov
pushf
repz
popl
call
movl
pusha
movb
pusha
lea
jmp
mov
pusha
pushf
pushl
ret
call
jmp
not
clc
ror
pushf
pushf
movl
inc
cmp
add
jmp
mov
mov
mov
movb
mov
jmp
mov
pusha
pushf
pushf
pushl
mov
pushf
pushl
call
pushf
mov
jmp
sub
clc
btr
xor
setg
jmp
add
clc
ror
btc
not
cmc
pusha
sete
clc
ror
pushl
bswap
movsbw
inc
test
add
mov
mov
test
call
test
jmp
pushl
mov
jmp
pushf
pushf
mov
push
mov
jmp
cmc
shr
cmp
stc
cmc
or
test
movb
call
movw
dec
sar
call
push
mov
xor
pushl
pushf
pushl
dec
push
pusha
pushf
push
xor
pushf
clc
mov
cmp
sub
mov
mov
pushf
movb
lea
jmp
mov
repz
popl
pushf
call
call
jmp
mov
push
pushl
mov
movzbw
mov
setae
call
push
movb
repz
popl
call
pushf
popl
mov
lea
js
push
pushl
popl
pusha
movb
lea
jmp
pushf
jmp
call
jmp
bswap
mov
pusha
xchg
lea
movsbw
mov
setae
repz
popl
or
add
jmp
push
mov
call
add
push
cmc
rol
mov
stc
add
pushl
pusha
lea
jmp
mov
lea
jge
pushf
mov
call
call
mov
call
mov
jmp
cmp
movb
sub
jmp
pushf
mov
pushf
mov
pushf
call
pushl
jmp
pushl
popl
pushl
push
lea
jmp
cld
pushf
mov
std
pushf
mov
movl
cld
pusha
rep
call
call
pushf
push
lea
jne
call
mov
pushf
pushf
pushl
movb
repz
popl
mov
mov
pushf
movw
mov
pushf
jmp
pushl
popl
pushf
pusha
lea
jmp
mov
mov
pushl
ret
pushf
pusha
pushl
mov
mov
lea
jmp
pushf
mov
call
mov
call
push
cmp
pushf
shr
call
pushf
movb
call
push
pushf
pusha
mov
pushf
movb
pushf
mov
movb
jmp
pushf
mov
mov
call
call
jmp
mov
jmp
sbb
rol
not
not
dec
inc
add
pusha
and
inc
seta
not
movsbl
shrd
bts
and
jmp
bsf
xchg
bsf
sbb
movsbw
shr
xchg
shr
shl
sbb
btr
xchg
shl
dec
pushl
popl
xchg
xchg
inc
bt
movl
sub
btc
jmp
push
call
mov
movb
pushl
popl
push
jmp
not
push
shl
xor
neg
sub
btr
movzbl
bswap
clc
stc
dec
mov
push
pushl
xor
movb
add
jmp
movb
repz
popl
pushf
push
call
stc
pushl
add
jmp
call
movb
repz
popl
jmp
mov
jmp
movw
add
push
movb
call
mov
movl
movb
movb
lea
jmp
mov
jmp
mov
pusha
mov
push
mov
repz
popl
call
rol
bsf
not
mov
cmc
test
sub
mov
pushf
mov
pushl
pushl
movb
lea
jmp
mov
call
movl
jmp
mov
push
mov
mov
push
call
add
push
pusha
pushf
push
mov
movw
movw
pushf
movw
lea
jmp
pusha
xor
sar
mov
neg
bt
sub
mov
clc
sub
jmp
dec
clc
clc
xor
stc
clc
bt
test
mov
cmp
call
jmp
pushf
pushf
pushf
pushf
pushf
popl
pushf
pusha
pushf
movw
pushl
popl
pushl
mov
lea
jmp
pushf
pushf
mov
jmp
jmp
call
test
pusha
add
call
mov
pusha
mov
pushf
call
jmp
pushf
popl
call
pusha
jmp
pusha
mov
push
call
jmp
mov
rcr
or
mov
stc
bt
sub
cmp
clc
cmp
mov
shr
call
pushl
pushl
popl
movw
movl
pushf
pushf
lea
jmp
jmp
pushl
popl
jmp
call
call
mov
pushf
pushl
popl
pushf
movl
pushf
lea
jmp
pusha
mov
movw
jmp
cwtl
push
mov
sub
pushf
jmp
mov
mov
pushl
popl
movw
movb
lea
jmp
call
pushf
movl
movl
mov
pushf
lea
jmp
mov
cmc
cmc
cmc
push
shl
cmp
jmp
call
and
shl
not
shl
call
mov
repz
popl
jmp
call
pushf
push
mov
pushf
mov
mov
mov
pushl
call
mov
push
repz
popl
mov
push
mov
push
mov
mov
movb
jmp
call
movb
pushl
popl
jmp
pusha
jmp
mov
push
jmp
call
test
add
call
repz
popl
jmp
pusha
jmp
cltd
xchg
clc
push
test
xchg
clc
push
test
nop
clc
push
dec
xchg
push
outsb
mov
push
out
mov
push
sahf
xchg
clc
push
xchg
clc
push
mov
mov
push
jl
clc
push
jg
clc
push
lds
clc
push
inc
mov
push
dec
xchg
push
cmp
clc
push
sahf
xchg
clc
push
outsb
mov
push
xor
clc
push
mov
clc
push
jl
clc
push
lahf
mov
push
cmp
clc
push
test
mov
push
inc
mov
push
mov
mov
push
nop
xchg
clc
push
pushf
mov
clc
push
stos
mov
push
mov
push
stos
mov
push
jl
clc
push
xchg
test
push
movsb
scas
clc
push
fs
push
mov
push
test
mov
push
fs
push
xor
clc
push
or
clc
push
lds
clc
push
pusha
lods
clc
push
outsb
mov
push
cmp
clc
push
fs
push
push
mov
clc
push
outsb
mov
push
fs
push
mov
xchg
clc
push
mov
clc
push
fs
push
std
clc
push
lahf
mov
push
mov
push
fs
push
xlat
lods
clc
push
cltd
xchg
clc
push
sub
clc
push
movsb
scas
clc
push
cmp
clc
push
int
clc
push
fs
push
or
clc
push
adc
test
push
int
clc
push
mov
xchg
clc
push
fs
push
sbb
clc
push
inc
mov
push
fs
push
jle
clc
push
jle
clc
push
mov
clc
push
pushf
mov
clc
push
out
mov
push
fs
push
xchg
stos
clc
push
xchg
stos
clc
push
sbb
clc
push
mov
mov
push
sahf
xchg
clc
push
fs
push
sbb
clc
push
mov
clc
push
mov
clc
push
mov
clc
push
mov
clc
push
pusha
lods
clc
push
cltd
xchg
clc
push
mov
clc
push
adcb
push
jl
clc
push
mov
clc
push
inc
mov
push
push
mov
clc
push
mov
clc
push
pushf
mov
clc
push
outsb
mov
push
mov
clc
push
inc
mov
push
sub
clc
push
mov
clc
push
std
clc
push
jle
clc
push
adcb
push
aam
clc
push
xchg
clc
push
test
push
sbb
clc
push
xor
clc
push
or
clc
push
mov
clc
push
dec
mov
push
jl
clc
push
lds
clc
push
xchg
stos
clc
push
pop
xchg
push
jle
clc
push
mov
clc
push
cmp
clc
push
stos
mov
push
mov
clc
push
pop
xchg
push
nop
xchg
clc
push
mov
clc
push
lds
clc
push
xchg
stos
clc
push
mov
clc
push
nop
xchg
clc
push
test
lods
clc
push
mov
clc
push
cmp
clc
push
or
clc
push
xchg
clc
push
mov
clc
push
inc
mov
clc
push
add
clc
push
aam
clc
push
fdivs
clc
push
dec
mov
push
jg
clc
push
jl
clc
push
dec
mov
push
out
mov
push
dec
mov
push
int
clc
push
cltd
xchg
clc
push
or
clc
push
push
mov
clc
push
pusha
lods
clc
push
adcb
push
push
xchg
clc
push
xlat
lods
clc
push
stos
mov
push
out
mov
push
pop
xchg
push
test
xchg
clc
push
mov
mov
push
pusha
lods
clc
push
cltd
xchg
clc
push
nop
xchg
clc
push
fdivs
clc
push
inc
mov
push
outsb
mov
push
dec
xchg
push
push
xchg
clc
push
dec
mov
push
test
xchg
clc
push
pushf
mov
clc
push
push
mov
clc
push
pushf
mov
clc
push
cltd
xchg
clc
push
inc
mov
clc
push
int
clc
push
jl
clc
push
inc
mov
clc
push
cmp
clc
push
cmp
clc
push
adc
xchg
clc
push
mov
lods
clc
push
out
mov
push
nop
xchg
clc
push
cmp
clc
push
dec
xchg
push
xchg
stos
clc
push
dec
mov
push
nop
xchg
clc
push
movsb
scas
clc
push
add
clc
push
outsb
mov
push
sbb
clc
push
outsb
mov
push
std
clc
push
std
clc
push
lds
clc
push
stos
mov
push
cltd
xchg
clc
push
mov
stos
clc
push
pushf
mov
clc
push
movsb
scas
clc
push
mov
push
int
clc
push
mov
xchg
clc
push
movl
mov
movb
movb
movb
lea
jmp
pushf
call
mov
mov
lea
jmp
mov
mov
pusha
call
repz
popl
mov
jmp
pushf
mov
call
pushf
jmp
pusha
pusha
mov
pushl
push
mov
lea
jmp
jne
pusha
movw
mov
push
movb
pushl
movb
lea
jmp
dec
movzbl
cmc
add
xor
seta
je
mov
inc
dec
sub
sar
xor
jmp
rol
movzbl
movsbw
add
cmc
call
mov
shrd
mov
cld
stc
pushl
popf
pushf
lea
jmp
jmp
mov
pushf
pusha
pushf
mov
lea
jmp
pushf
mov
mov
call
pushf
pushf
movl
pusha
pushf
pushf
pushl
lea
jmp
bt
mov
cmp
mov
stc
clc
bt
call
pusha
mov
movw
movl
mov
call
call
cmc
pushf
add
pushf
cmc
test
pusha
not
bt
push
bswap
pushf
pushf
sub
add
jb
pushf
lea
test
movb
pusha
stc
sub
mov
pushf
pushf
mov
push
push
movb
lea
jmp
mov
jmp
push
mov
movb
mov
jmp
push
mov
call
pushf
pushl
mov
pushl
call
jmp
jmp
jmp
mov
call
call
mov
mov
jmp
lea
jle
push
pushl
popl
movl
pusha
mov
mov
lea
jmp
jmp
pushl
lea
adc
mov
jmp
mov
pusha
mov
pushf
pushf
mov
jmp
mov
pusha
push
mov
push
lea
jmp
rol
mov
test
rol
mov
bt
call
movzbl
bt
test
sub
pusha
bt
movb
neg
pushf
push
pushl
call
pushf
pushl
popl
pushf
pushf
mov
jmp
push
push
pushf
pushl
pusha
mov
pushf
repz
popl
pushf
pushf
pushl
mov
call
cmc
sub
stc
shr
call
pushf
popl
call
pusha
call
movb
mov
pushf
jmp
pushf
push
mov
mov
movw
pusha
lea
jmp
mov
mov
jmp
dec
rcl
push
xor
rcr
setno
shld
mov
add
jle
stc
pushf
pusha
add
jmp
call
jmp
pusha
pusha
pushl
popl
pushl
pushf
movb
lea
jmp
movb
pushf
mov
push
movw
call
jmp
mov
jmp
jmp
pusha
mov
mov
mov
mov
push
mov
pushf
push
mov
push
pushl
popl
pushf
movw
mov
movl
mov
push
pushl
pushl
lea
jmp
mov
push
pushf
lea
jmp
pushf
popl
push
jmp
call
jno
bt
cmc
sub
stc
jmp
and
push
mov
call
pusha
jmp
jmp
pusha
mov
movl
pusha
pushl
lea
jmp
pushl
pushf
popl
jmp
pushf
mov
pusha
push
mov
call
jmp
push
lea
je
cmp
movzbl
not
push
test
sub
xor
bt
inc
movb
neg
pop
pusha
movsbw
inc
bt
xor
rol
shl
btr
sub
push
movzbl
cmp
stc
mov
bt
clc
bt
sub
test
jmp
sub
pushf
movw
push
jmp
pushl
call
xchg
push
movl
pushf
mov
pusha
pushl
mov
mov
push
mov
movb
pushl
ret
movb
sub
call
pushl
mov
jmp
lea
mov
pushf
mov
jmp
mov
call
setnp
mov
bt
pushf
pushf
sub
call
movb
mov
call
mov
mov
jmp
movb
mov
call
xor
bsr
add
aam
lea
clc
cmp
pushf
call
pushf
movl
movl
pushf
pusha
pushl
mov
lea
jmp
mov
jmp
mov
movb
pushf
jmp
mov
pushf
pushf
call
cmp
call
mov
pushl
popl
mov
push
movl
push
pushl
push
mov
lea
jmp
mov
push
pushf
mov
pushl
ret
shld
cmc
cmp
mov
call
pusha
mov
lea
jle
push
mov
jmp
mov
jmp
xor
stc
cmc
test
bt
mov
cmp
push
sub
jmp
pushl
jmp
push
jmp
pushf
jmp
popl
push
pushl
pushf
mov
lea
jmp
pushl
pushf
mov
call
pushf
call
movb
push
repz
popl
pushf
call
movl
mov
jmp
mov
mov
mov
call
lea
jl
pushf
lea
je
test
test
cmc
sub
push
xchg
pushf
mov
push
mov
mov
pusha
sub
pushf
lea
jne
cmp
test
sub
pushf
movb
call
pusha
lea
pushl
call
pushf
push
mov
pushf
movw
lea
jmp
pusha
mov
pushf
mov
push
call
cwtl
pusha
lahf
setge
mov
pushl
pushf
mov
lea
ja
pushf
push
mov
mov
push
pusha
pushf
lea
jmp
mov
pushf
pushf
pushl
pushf
lea
jmp
bt
setno
rcl
rcr
movzbl
call
movw
mov
pushf
pushf
mov
movb
mov
pushf
mov
push
lea
js
pushf
movw
repz
popl
pusha
call
pushf
popl
movb
jmp
mov
call
pushl
push
cld
call
call
jmp
call
call
jmp
mov
mov
jmp
pushl
popl
push
pushf
movb
lea
jmp
pusha
mov
pushf
pushf
movw
mov
pushl
mov
call
pushl
push
mov
pushf
pushf
mov
pushf
jmp
mov
mov
lea
jge
pushf
pushf
pushf
popl
jmp
sbb
movsbl
cmc
mov
cltd
pop
sar
mov
shld
rcr
pop
ror
xor
test
pop
aam
pop
lea
and
sub
pop
push
pushl
popf
movsbw
mov
movzbl
pushl
xchg
mov
bswap
movzbw
lea
movzbw
mov
jmp
pushl
mov
pushf
mov
pushf
push
mov
pushf
pushf
push
pushl
popl
push
mov
lea
je
pusha
movl
pusha
push
push
pushl
lea
jmp
rcl
xadd
mov
stc
shr
jb
neg
mov
jmp
pushl
popl
push
pushf
lea
jmp
call
call
call
call
pusha
sub
movl
stc
cmp
pusha
shl
call
shl
mov
lea
btr
shl
mov
push
test
jmp
mov
movb
movw
pushf
push
repz
popl
pushl
jmp
stc
cmc
xor
push
push
xchg
pusha
pushl
call
call
jmp
clc
clc
or
pusha
jmp
mov
jmp
pushf
jmp
bt
add
mov
jmp
pusha
pusha
pop
mov
pushl
divl
mov
jmp
pusha
sub
cmp
xor
movw
bt
ror
push
pushl
call
pusha
mov
pusha
mov
lea
jmp
rdtsc
not
btc
not
mov
ror
mov
push
add
call
push
pushf
pushf
mov
push
pusha
movw
lea
jmp
ror
sub
shl
neg
not
inc
shld
movzbl
shld
xor
not
pop
sub
bsr
sub
sub
shl
movzbl
pusha
mov
clc
cmc
sub
pusha
pushf
stc
or
call
pushf
call
div
jmp
add
add
pusha
lea
jne
jmp
sub
call
lahf
mov
pusha
call
call
jmp
push
pusha
call
jmp
jmp
mov
pushl
push
pushl
popl
push
movl
push
movb
mov
lea
jmp
jmp
not
add
jb
mov
test
pusha
call
mov
pushl
push
lea
jmp
mov
mov
pushf
pushf
mov
call
push
push
jmp
push
call
repz
popl
push
mov
pushf
mov
pushl
call
mov
mov
movw
mov
push
mov
mov
call
jmp
lea
jge
push
push
pushl
mov
movb
lea
jmp
pushl
mov
mov
call
pushf
pushl
mov
mov
pushf
movw
lea
jmp
jmp
lea
cpuid
jmp
mov
pushf
pushf
jmp
add
mov
sub
mov
mov
pushf
movb
mov
lea
jmp
rcl
bt
aas
aad
mov
dec
mov
pusha
not
stc
test
pushf
push
not
movb
clc
jmp
inc
inc
bt
movb
lea
sbb
push
jmp
mov
jmp
mov
push
mov
pushf
lea
jmp
sub
bt
pushf
jmp
mov
jmp
pushf
popl
movb
pushl
popl
pushf
mov
movb
pushf
lea
jmp
sub
cmc
xor
call
call
movl
pushl
pushf
push
mov
lea
jmp
mov
call
xor
jmp
je
pusha
pusha
mov
push
mov
pushf
movb
mov
call
mov
jmp
inc
not
call
push
repz
popl
movb
push
mov
pusha
jmp
movw
push
mov
mov
call
pushl
popl
push
movl
pusha
movb
movb
lea
jmp
pusha
mov
push
mov
pushf
pusha
pushl
call
pushl
popl
mov
call
lea
jne
sar
xorb
movzbl
jmp
mov
xor
mov
xchg
mov
pushl
pushl
cmp
mov
clc
push
cmc
sub
push
call
call
xor
cmc
bsr
mov
bt
jmp
push
call
call
jmp
pusha
mov
pushf
pushf
pushl
pushf
popl
push
movb
jmp
movw
mov
jmp
push
pushf
pusha
pushl
popl
push
movl
mov
pushl
lea
jmp
mov
pushl
repz
popl
call
call
pushl
popl
mov
pushf
mov
lea
jmp
call
call
not
sbb
bt
dec
movzbl
pushf
stc
call
push
mov
pushf
call
movb
mov
pushf
mov
pushl
movw
call
pusha
lea
jg
push
mov
pushf
lea
jmp
push
jmp
cmc
sbb
aaa
mov
stc
add
je
pushf
mov
push
mov
pusha
movw
lea
jmp
movl
push
mov
lea
jmp
call
mov
mov
rol
jmp
shl
shrd
mov
rol
add
not
mov
pusha
pushf
mov
movb
movb
movw
pusha
mov
pushf
lea
jmp
mov
jmp
mov
call
mov
jmp
cbtw
adc
bts
aaa
mov
sub
movzbw
pushf
shr
mov
push
btr
btc
btr
mov
cmp
stc
sub
call
call
mov
push
repz
popl
pushf
jmp
mov
pushf
popl
movl
push
pushf
pushl
popl
mov
pushf
lea
jmp
pushf
pushl
popl
movw
mov
lea
jmp
mov
sub
stc
cwtl
call
setb
mov
sbb
stc
xor
movzbw
bswap
bswap
call
jmp
push
mov
mov
pusha
jmp
pushl
mov
pushf
call
call
call
mov
mov
jmp
push
pushl
popl
pushf
movl
pushf
mov
movw
lea
jmp
mov
call
pushf
clc
movb
xor
stc
test
sub
bt
pushl
stc
cbtw
call
mov
movl
movl
mov
pushf
mov
push
pushf
pushl
popl
pushf
pushf
movl
pushf
pushf
movb
movb
lea
jmp
call
mov
cmp
sub
movb
push
pushl
push
mov
push
mov
pushl
lea
jmp
call
rcr
shl
mov
stc
pushf
push
pusha
sub
stc
push
shl
mov
pushf
pushf
push
mov
pushf
pushf
popl
pushf
pushl
popl
pushf
lea
jmp
movzbw
mov
mov
pusha
sub
pushl
pushf
movb
mov
pushf
pushf
lea
jmp
pusha
mov
jmp
mov
pushf
dec
push
movl
call
bt
push
mov
or
bt
add
pushl
call
jmp
mov
push
pushl
pushf
lea
jmp
call
rcr
add
sub
mov
bsr
and
mov
push
push
sub
pusha
cmc
mov
bt
mul
pushl
jmp
cmp
shrd
jmp
call
pushf
movb
pusha
movl
pusha
push
lea
jmp
jmp
mov
pusha
pushf
mov
pushf
lea
jmp
mov
inc
call
mov
push
mov
pusha
mov
push
call
call
pushf
mov
mov
call
pushf
pushf
popl
call
decl
movb
movb
lea
jne
pusha
mov
mov
pusha
push
lea
jmp
mov
pushf
mov
jmp
pushl
popl
mov
pusha
pushf
lea
jmp
repz
popl
pushf
mov
movl
mov
call
pushf
call
mov
pushl
pushl
popl
mov
movl
pushf
mov
lea
jmp
mov
pushf
popl
pusha
pushl
popl
pushf
movw
pushl
push
lea
jmp
push
pushl
popl
pushf
movb
pushf
pusha
lea
jmp
lea
js
pusha
lea
jne
shl
mov
mov
cmp
clc
cmc
and
stc
cmp
pusha
pusha
call
mov
pusha
pushf
pusha
jmp
