nop
nop
push
nop
nop
nop
nop
ret
pop
mov
lods
imul
mov
inc
call
or
mov
gs
cmp
outsb
int
fbstp
or
repz
adc
xor
xchg
dec
notl
inc
xlat
mov
xor
or
or
add
notb
inc
inc
and
jnp
roll
dec
ret
and
pop
xchg
mov
mov
cwtl
pop
lds
sbb
sub
sbb
fs
xor
and
push
sub
inc
xor
or
daa
dec
ja
divl
xor
jmp
push
add
sub
mov
cmc
test
lahf
stos
mov
mov
leave
mov
roll
mov
bnd
jl
loopne
lea
aam
lret
pop
sbb
xbegin
pop
pop
cmc
jecxz
aad
xchg
fisubrs
pop
sub
add
and
movsb
and
inc
xchg
clc
ss
bound
shlb
pushf
mov
add
xchg
ret
out
push
or
mov
adcl
lods
xchg
xchg
shr
and
push
sub
xor
insb
pop
jecxz
mov
adcb
rolb
jg
fwait
mov
arpl
sub
mov
dec
add
int3
ds
inc
scas
aam
cmpsl
dec
or
ret
mov
dec
insb
test
cmp
lcall
out
ss
ret
imul
push
pop
dec
pop
sbb
cltd
jns
shrb
insl
jb
mov
clc
in
jecxz
cli
pop
mov
fwait
out
rcrb
ficomps
jp
jmp
nop
pushf
icebp
pop
ss
in
int
imul
inc
ljmp
push
or
cs
xor
mov
dec
imul
popf
mov
popf
ret
loopne
dec
xorb
adc
jg
xchg
cmp
jle
rolb
add
xor
push
in
test
xor
arpl
jge
xchg
and
out
insb
cwtl
mov
and
xchg
mov
test
fwait
movntq
repnz
ret
in
mov
cmp
scas
loope
pusha
or
sahf
xor
pop
in
lods
and
fisttpl
add
push
cmp
mov
into
adc
cltd
add
dec
push
jp
dec
mov
lea
xchg
pop
int
inc
adc
jne
add
and
lods
aas
mov
xchg
push
dec
xchg
scas
sub
cli
fisubs
mov
cltd
mov
ds
das
sub
loopne
out
fisttpll
adc
call
dec
inc
pusha
inc
je
adc
dec
adc
test
das
dec
jp
fdivrs
stc
mov
pop
aad
fnstcw
push
adc
shrb
xor
push
sub
cli
mov
fwait
cmp
pop
or
push
loopne
inc
jl
clc
mov
or
jne
pop
xchg
or
dec
lcall
pop
scas
cmpsb
insl
xchg
cmp
mov
or
mov
out
in
mov
jp
cmc
enter
icebp
cmp
stos
jb
sbb
jns
cmp
mov
jo
sub
mov
jmp
fidivrl
mov
out
movsl
sbb
adc
adc
jb
add
je
mov
add
mov
pop
icebp
iret
subb
add
cwtl
mov
fs
ret
mov
ret
imul
push
xor
dec
daa
scas
repz
rol
fs
cwtl
sbb
or
dec
adc
mulb
push
mov
adc
dec
mov
lret
in
jle
aad
adc
popa
mov
inc
mov
cmp
add
mov
add
mov
jl
inc
or
int3
mov
shlb
or
push
stos
adc
mov
loope
push
sub
push
lea
push
in
mov
jo
repz
stc
ret
js
mov
in
gs
dec
neg
cmpl
jmp
sbb
mov
jbe
jecxz
or
jle
add
mov
test
gs
mov
and
jae
imul
aad
sbb
dec
aaa
fisttps
popf
sbb
cmp
nop
xchg
mov
rolb
sbb
fcomps
sub
push
lret
pop
sarb
push
test
and
loop
mov
fstl
in
in
loope
xchg
cltd
imul
push
daa
sbb
sub
das
ficompl
aaa
adc
loopne
jnp
mov
jmp
sub
bound
push
ret
test
adc
sbb
sbb
push
mov
adc
scas
pop
lahf
addr16
jne
cltd
xor
loope
loopne
dec
clc
movl
mov
push
mov
ds
je
pop
xor
add
adc
addr16
jae
fstps
dec
cmc
ret
in
xlat
cwtl
hlt
int
xchg
inc
fistl
outsl
cmpsb
jl
cmpsl
pop
mov
mov
add
fadds
inc
and
jg
mov
out
jp
imul
outsb
xchg
jnp
xchg
addr16
mov
repnz
movsb
inc
or
adc
mov
jl
jmp
pmuludq
push
js
inc
cwtl
sub
and
inc
out
dec
bound
xchg
sahf
or
test
sti
xor
xchg
xchg
clc
mov
ret
imul
repz
mov
dec
dec
add
and
mov
inc
fcoml
mov
mov
mov
iret
rorl
inc
stc
movsl
xor
add
fdivrs
mov
dec
add
or
jg
sbb
test
add
mov
xchg
movsb
xlat
movsw
push
or
xchg
aas
mov
movsb
inc
pop
jmp
push
adc
fchs
cmp
popf
or
or
inc
insl
mov
push
pop
cmp
lea
xchg
add
and
sarl
cmp
jge
shll
mov
or
dec
sti
fdivs
movsl
out
fisubrl
or
fsubrs
jno
pusha
xlat
pop
out
aad
xchg
xorb
fsubp
jne
mov
adc
in
mov
aam
lret
cmp
lahf
add
rcrl
xchg
les
or
cmpb
movlps
arpl
sub
aad
jp
sub
aas
es
stc
sahf
push
xor
das
movsl
insl
movl
icebp
mov
dec
js
mov
push
adc
inc
push
subl
jo
or
push
jg
dec
aam
xchg
iret
js
into
gs
sub
mov
pop
mov
insl
mov
in
dec
xchg
sbb
jo
popa
pop
mov
fbstp
daa
roll
les
fsubr
mov
je
bound
adc
lahf
sbb
jecxz
or
ss
jae
das
stos
adc
fldcw
ja
leave
pushf
xor
das
xor
mov
pop
sub
popf
sbb
arpl
or
sub
mov
dec
or
aad
xor
das
hlt
pop
and
sbb
nop
jmp
lcall
aam
cld
add
mov
sub
cmp
mov
mov
ret
daa
daa
aad
adc
iret
outsl
pop
orb
jne
pop
jno
fadds
adc
imul
push
push
push
iret
pushf
mov
xor
push
or
cs
lret
cmp
xor
mov
or
dec
lods
rol
and
imul
cmp
xor
pushf
mov
scas
cli
push
stc
cmp
pushf
js
into
xchg
push
hlt
inc
mov
push
mov
or
mov
mov
push
outsb
jbe
jnp
leave
frstor
int
add
loopne
cmp
lods
sbb
daa
sub
xchg
rol
mov
adc
mov
fcomi
sub
inc
test
ret
mov
popa
or
sti
and
test
fcomps
jecxz
mov
sub
arpl
sbb
xchg
in
movsb
into
scas
mov
rorl
pop
fincstp
dec
dec
cltd
xlat
jns
sub
imull
cs
test
inc
ss
inc
mov
adc
lods
mov
popa
mov
fwait
icebp
insb
sahf
pop
fs
pop
dec
and
pushf
fwait
jl
mov
cltd
mov
scas
or
xor
mov
mov
in
push
push
lods
icebp
xor
sub
sub
mov
sub
fs
pop
sub
in
push
bound
sub
stc
lock
jmp
jg
lds
mov
das
sbb
data16
push
out
and
cmpsl
cmp
dec
adc
iret
mov
mov
mov
je
call
mov
es
shll
clc
cwtl
test
lret
lahf
bnd
popa
aas
dec
imul
aas
rorb
sbb
das
lods
xorl
push
sahf
outsb
add
shll
dec
jmp
mov
push
pop
or
ret
dec
and
fs
cmpsb
jb
adc
rorb
or
rcrb
sahf
xchg
das
out
mov
or
xchg
and
cltd
enter
cmpsb
cltd
int3
sbb
test
fdivr
cltd
aam
adc
dec
outsb
add
and
adc
popa
sub
into
ror
xor
fsubrp
push
mov
xchg
arpl
loope
xchg
stc
lods
pop
add
inc
cmp
xor
xchg
mov
insl
and
jmp
or
cltd
int3
inc
out
mov
bound
dec
repnz
mov
mov
lahf
lock
xor
xor
stos
hlt
out
or
movl
cli
jmp
jo
dec
pop
leave
outsb
and
add
push
mov
out
push
or
adc
xchg
push
mov
mov
fidivrs
sub
mov
pusha
cmp
sub
nop
push
and
aad
mov
or
rorb
sub
aaa
mov
ds
xor
rcll
jmp
repnz
repnz
jb
pop
xchg
bound
ljmp
cltd
je
mov
lret
das
mov
pop
and
sbb
sbb
pop
jp
adc
jl
cmp
in
rolb
lods
or
jmp
dec
dec
into
inc
insb
imul
int3
out
jae
aas
mov
inc
loop
ret
lcall
out
push
jbe
ffreep
push
iret
lods
out
fistps
adc
jno
xlat
jmp
arpl
movups
xchg
adc
pusha
jne
dec
in
icebp
add
out
dec
jb
adc
xchg
dec
sbb
testb
mov
enter
jno
add
sbb
pusha
push
fstp
and
push
in
sub
popf
ja
mov
xor
int3
or
fs
cli
inc
jecxz
mov
in
lret
pop
add
jl
sub
roll
call
loopne
xchg
imul
jge
dec
jns
sub
imul
stos
gs
xchg
or
inc
hlt
rorb
nop
test
adc
icebp
xor
jns
adc
cmc
sbbb
in
mov
lcall
cmp
repz
frstor
sbb
or
xchg
push
jle
xor
mov
out
mov
bound
daa
loopne
ljmp
ja
inc
bound
pop
je
push
orb
xchg
mov
mov
mov
push
mov
ficoms
andb
shrb
adc
xchg
push
dec
jns
and
les
fwait
adc
sub
mov
lds
mov
fisubrs
jno
outsb
imul
sti
gs
jl
fs
and
ss
out
inc
iret
iret
mov
cmp
mov
lock
xor
addr16
imul
sbb
pop
sub
iret
mov
gs
sbb
loope
sbb
outsb
pop
aas
adc
outsb
stos
dec
cmp
cmp
jne
adc
adc
sub
mov
sbb
add
or
mov
fs
das
in
jecxz
sarb
shrb
movl
mov
loope
dec
bound
data16
sub
adcl
gs
sarl
xor
ficompl
push
cmp
lods
cld
mov
cmp
test
test
and
call
int
and
int3
xchg
sti
movsl
in
lock
or
xchg
adc
dec
xor
adc
fs
cmpsl
or
ss
push
push
faddl
js
sbb
roll
xchg
mul
in
inc
mov
xchg
push
cmp
scas
aam
mov
push
xchg
jmp
jno
jne
ljmp
sar
and
iret
imul
ljmpw
cmp
adc
push
mov
insl
xor
mov
insl
test
ds
in
loopne
outsl
pop
shll
incl
mov
call
inc
or
push
movsl
insb
mov
rclb
stos
and
scas
add
cmp
das
adc
fldl
movsb
fdivrl
push
pop
jl
andl
ljmp
arpl
into
xlat
sbb
in
lret
stc
pop
xor
mov
cli
jge
nop
ja
scas
shrl
and
xchg
lret
leave
dec
stos
adc
jmp
lahf
and
xorl
test
mov
xor
test
shrb
push
ss
adc
rcrl
push
inc
mov
and
addr16
cmp
push
lods
addr16
jp
std
bound
divl
iret
push
mov
xchg
jb
and
xchg
mov
jge
out
jns
mov
repnz
clc
push
scas
fmull
loopne
outsl
mov
xor
jnp
push
adcl
inc
inc
in
cmp
imul
int
or
dec
arpl
or
shl
mov
pop
cwtl
pop
mov
aam
cwtl
mov
push
test
mov
jg
push
aam
outsl
pop
lds
xchg
add
idiv
push
faddl
xchg
test
shr
xchg
jae
lea
sub
add
xor
push
pusha
inc
pop
dec
movsl
sbb
push
adc
gs
inc
sar
iret
mov
jl
addr16
add
mov
pop
popf
cmp
xor
push
mov
pop
cltd
negl
rcr
mov
xchg
add
dec
sysenter
popa
dec
mov
dec
loop
cltd
icebp
aad
mov
lea
in
hlt
das
in
add
dec
imul
ljmpw
shrl
bound
sbb
gs
ds
jl
popa
loop
xchg
sbb
ret
jo
loop
mov
and
sbb
in
pop
aas
xchg
data16
mov
shrb
adc
mov
cmp
push
adc
jae
clc
cli
cmp
lret
jb
push
faddl
dec
call
int3
and
ljmp
outsl
push
inc
jl
inc
inc
movsb
mov
cmpl
dec
adc
fstps
pop
pop
xchg
mov
adc
ret
dec
out
outsl
cmp
fwait
xchg
sub
inc
fcom
wbinvd
cmpl
lret
imul
fcomip
add
bound
mulb
pusha
xchg
cli
outsl
testl
adc
push
jb
adc
lret
fnsave
pop
add
mov
mov
adc
ljmp
mov
aaa
push
stos
pop
inc
dec
push
call
dec
lds
sbb
shll
ja
sbb
daa
in
inc
lahf
and
add
fs
leave
jns
push
adc
rcrl
cmp
push
cmp
cmpsl
test
add
push
mov
cmpsl
je
sbb
and
mov
and
xor
and
div
mov
sbb
mov
fiaddl
ret
stos
scas
mov
mov
shrb
out
pop
fldt
cltd
and
imulb
lods
fdivr
adc
or
test
push
xchg
mov
add
popf
xchg
repnz
enter
outsl
in
push
orb
jns
dec
inc
daa
push
addr16
int3
sub
pop
push
mov
push
adc
mov
stc
outsb
repnz
sbb
dec
fadds
lods
xchg
clc
sub
sbb
pop
xchg
mov
sub
sbb
shlb
lret
ss
jo
roll
push
mov
or
lods
ljmp
sub
sbb
lcall
push
inc
push
mov
sbb
sbb
lods
mov
cmp
or
stos
aad
arpl
push
adc
mov
iret
push
in
shlb
push
xlat
push
mov
mov
sbbb
add
jl
xchg
lcall
loope
cmc
icebp
mov
jecxz
jmp
adc
mov
pop
imul
ds
movsl
scas
stos
bound
add
jno
inc
movsl
inc
jle
sub
fadd
pop
mov
push
and
ret
or
icebp
sbb
xor
pop
dec
mov
inc
mov
inc
insb
pop
or
jns
fs
fsub
fsubrl
jmp
xchg
pop
mulb
mov
hlt
pusha
clc
scas
clc
mov
adc
pop
loopne
fwait
loopne
jnp
mov
test
int3
inc
scas
pop
ja
add
pushf
imul
mov
fmuls
out
stos
mov
adc
lcall
and
jne
mov
dec
popf
xor
add
mov
xchg
xchg
mov
mov
jo
xchg
sahf
mov
and
and
pop
in
jp
xor
sub
jnp
cwtl
out
test
pop
sbb
das
outsb
addl
add
push
cld
outsb
xchg
insl
add
mov
leavew
mov
add
pusha
push
in
loopne
dec
in
sahf
xor
lret
out
add
sbb
loopne
mov
jp
or
sub
test
mov
add
xlat
call
push
push
push
fsubs
xchg
addb
imul
clc
mov
std
mov
out
fidivl
loop
scas
pop
cli
jmp
ficoml
sub
repz
xor
jecxz
adc
add
sbb
push
ret
dec
mov
xor
cmpl
inc
insl
rcl
or
loopne
xor
mov
push
ret
xor
nop
mull
fstps
push
dec
lea
lea
cli
popa
pop
pusha
add
test
orl
fs
or
mov
push
fimull
lock
push
daa
pop
rolb
cmpsb
shll
in
inc
mov
mov
cmpsb
aas
dec
dec
out
ljmp
test
mov
in
dec
roll
mov
repz
aad
jo
push
jp
jns
mov
jae
lock
inc
in
divb
loop
xorl
int
in
cmp
inc
and
inc
leave
xchg
das
shrb
iret
fdivp
jne
out
push
stos
mov
jb
ret
sub
je
xchg
xor
cmpsl
jl
push
cmp
pusha
pop
sbb
mov
out
aaa
or
mov
mov
xchg
imul
hlt
mov
scas
sbb
daa
fwait
cmp
xor
dec
sub
mov
cmc
cmpl
pop
pop
pop
sbb
imul
popf
mov
rorb
mov
into
ds
pop
sti
adc
mov
imul
or
sahf
fidivrs
mov
jns
pop
add
cmpsb
ss
sbb
fbstp
in
ret
or
stos
mov
out
test
lcall
pop
inc
mov
in
sbbl
imul
jl
sbb
push
dec
test
push
add
inc
loope
pop
add
xlat
jb
pop
cmp
scas
cmc
test
pop
xlat
sbb
sbb
loope
das
mov
pushf
sbb
loopne
loopne
notb
dec
xor
push
rcl
xchg
out
cwtl
jmp
daa
lret
add
mov
jmp
clc
or
inc
lods
jl
into
jmp
bound
add
mov
cmp
xor
inc
sbb
dec
test
dec
fisttpll
pop
mov
inc
fwait
lcall
cmp
add
mov
ss
test
rorb
xchg
int3
in
push
out
ja
xlat
jmp
lods
inc
mov
adc
push
in
insl
ficoms
mov
push
test
jno
pop
out
repnz
mov
push
test
movsb
insl
lods
mov
je
mov
push
inc
jnp,pn
out
mov
negl
jle
notl
xchg
aaa
inc
stos
stos
loop
xlat
leave
test
xchg
cmpsl
inc
fs
arpl
add
mov
daa
lods
sub
ds
pushf
push
add
out
popf
xchg
jl
pop
xchg
add
xor
mov
popa
clc
mov
adc
mov
popf
pop
xchg
cli
test
mov
mov
xchg
jno
jbe
dec
dec
pop
pop
mov
ds
lahf
lea
loopne
pusha
pusha
in
pop
or
dec
sub
fmuls
fsubrs
out
movsb
jne
test
push
daa
in
lea
jne
dec
mov
jb
out
xlat
push
push
lahf
roll
sarl
loope
paddd
dec
icebp
ja
lock
sti
mov
sbb
cmp
add
or
push
dec
push
in
xlat
push
cmp
repz
fcomip
and
idivl
pop
xchg
mov
or
push
inc
mov
faddp
dec
lahf
push
fisttpll
insb
popf
out
push
cmpsl
inc
adc
mov
push
jns
xchg
pop
cmc
inc
mov
dec
fwait
dec
mov
sti
cmp
add
inc
rolb
dec
lds
push
pop
xchg
fidivrl
mov
int3
lcall
and
lock
and
xchg
sahf
or
add
mov
cmpsb
outsl
inc
sub
sti
fdivl
and
int
arpl
loope
push
cmc
xchg
inc
mov
subb
insl
jne
scas
dec
inc
lods
cmp
adc
xchg
push
dec
les
mov
sub
test
inc
js
and
mov
lods
les
jno
scas
bound
cld
cmp
xor
cld
dec
lret
cmp
shrb
lret
sub
xchg
rol
sub
pop
lds
lods
test
mov
push
push
adc
dec
stos
cwtl
inc
pop
data16
fdivp
ljmp
pushf
pop
dec
pop
xchg
cmc
loop
std
sarl
adc
adc
mov
sbb
mov
test
push
in
fdivl
cli
xor
ljmp
sub
mov
jg
ret
mov
pushf
jmp
xchg
mov
ja
push
mov
lret
aam
push
mov
dec
mov
notb
bound
cld
jle
adc
cmp
rclb
fmull
fs
cs
add
jmp
jg
js
push
outsl
fisubrl
out
pop
dec
cld
or
aaa
cmp
inc
out
pop
fwait
lcall
fbstp
adc
fdivp
mov
xor
pushl
sbb
inc
insb
cli
jno
cmc
push
mov
mov
or
loope
pop
xchg
jmp
cs
push
jmp
push
xchg
pusha
insb
dec
mov
enter
push
dec
fidivrs
add
xchg
inc
cmp
ljmp
dec
in
hlt
call
xchg
push
dec
in
ljmp
outsb
in
mov
out
fisubrl
mov
jo
test
or
test
pop
cmp
arpl
out
jns
test
mov
call
push
out
sbb
and
fsub
ret
shlb
sti
stc
xchg
push
ljmp
rcll
pushf
or
out
stos
hlt
sbb
mov
push
dec
jp
int
and
ds
jo
nop
popf
or
pop
push
xchg
sub
push
shrb
mov
mov
sbb
cld
aaa
ja
leave
adc
jp
insl
cld
jne
out
cmpl
dec
or
imul
push
jnp
hlt
mov
fisubl
out
js
or
test
xor
int
nop
push
stc
dec
jne
fmull
xor
push
clc
pop
jb
sub
outsb
or
stos
lock
lods
jp
loopne
jg
imul
push
out
popf
in
rcrb
or
out
push
adc
cmp
mov
mov
pop
sbb
adc
daa
inc
andb
xchg
sbb
popf
cmp
xchg
aad
stc
or
jl
lret
mov
je
add
mov
adc
aam
cld
adc
mov
andl
jecxz
sub
imul
sbb
dec
mov
mov
adc
insb
sti
xorl
fstpl
jecxz
addr16
movsl
and
test
pushf
pop
sub
pop
aam
or
test
mov
sub
dec
lods
int
stc
inc
pop
inc
mov
inc
and
stc
add
push
adc
in
pop
adc
dec
mov
addr16
out
cmp
xchg
inc
xor
cs
mov
int
cs
int3
mov
add
mov
cli
leave
sbbb
add
into
inc
rclb
pop
mov
stc
decb
sub
clc
sub
adc
sbb
fcmovu
dec
push
les
aam
fmuls
cs
sbb
ds
and
jb
sbbl
or
inc
push
in
insb
xchg
inc
pop
out
jae
mov
lret
enter
lock
mov
faddl
pop
in
or
dec
xchg
cmp
or
leave
dec
ja
fiaddl
sbb
mov
call
mov
imul
in
push
jb
arpl
mov
mov
aaa
and
jnp
fiadds
jnp
pusha
stc
mov
sbb
inc
fimuls
inc
push
and
mov
jp
push
add
test
fmuls
cmpl
sbb
sub
mov
mov
cmpsl
sarl
add
and
clc
mov
lretw
push
jge
or
pop
jle
inc
and
bound
push
push
insb
lcall
push
pop
subl
sbb
addr16
cwtl
mov
adc
adc
jns
in
mov
push
adc
push
xor
addr16
insl
xor
incl
mov
sahf
dec
ret
mov
out
enter
dec
mov
pop
shll
push
lea
fadd
sahf
aaa
ljmp
pop
mov
js
imul
jmp
hlt
cmp
sahf
push
jle
ret
inc
pop
cmp
mov
mov
sub
jo
mov
scas
mov
out
imul
mov
sub
cmpsb
pusha
mov
aaa
dec
xor
or
stos
xchg
clc
push
repz
mov
movsb
nop
jecxz
in
fwait
iret
hlt
pushf
xchg
sub
fsubl
call
movsl
aam
bound
es
add
loopne
dec
sub
push
and
add
out
lret
sbb
lock
mov
mov
out
arpl
fstps
jae
pop
jb
dec
pmulhw
add
mov
sbb
pop
and
adc
push
roll
and
push
or
rolb
cmp
ss
les
or
mov
imul
outsl
mov
aad
loopne
into
push
ljmp
and
sarb
lret
mov
cli
xchg
jg
aad
push
mov
fwait
pop
fs
es
pop
clc
and
fiadds
dec
adc
mov
add
ss
out
leave
daa
lret
stc
and
fcoml
ljmp
xchg
mov
movsl
jne
pop
mov
pop
mov
enter
push
popf
mov
addr16
pop
aam
clc
add
xor
out
out
push
mov
mov
jno
jns
fdiv
stc
into
xor
adc
and
clc
aaa
and
repz
dec
dec
cmp
jb
mov
sub
icebp
adc
jmp
lret
sar
stos
call
das
pop
jno
add
mov
aam
fidivs
ljmp
add
mov
lret
gs
mov
jo
inc
fisubrl
loopne
or
ret
imul
cmc
aad
push
fcoml
mov
outsb
test
pop
cmp
pop
push
mov
or
pushf
dec
inc
notb
cmp
push
mov
or
sti
jmp
aad
sub
ds
cmp
hlt
jb
stos
or
jne
jecxz
jo
int
out
cld
lods
mov
xor
gs
call
mov
xchg
test
les
jnp
xorb
test
hlt
in
sti
negl
cmpsb
mov
sti
cmpsl
dec
fisttpll
xchg
das
or
into
cmp
mov
shlb
dec
test
into
dec
inc
cmpsl
mov
loopne
jns
lcall
pop
inc
mov
adc
lret
fistpl
xchg
sub
xchg
or
jne
fdiv
pop
cmpsl
sub
pop
lds
je
pop
repnz
pop
ja
jle
sahf
shlb
out
nop
push
scas
call
bnd
mov
jmp
cmc
cmc
pop
cmpsb
jge
aam
loop
loopne
xchg
fisubrs
cmp
scas
inc
push
das
scas
pushf
xor
stc
push
push
gs
out
pop
iret
outsb
fildl
ja
push
jne
sub
sub
xchg
sub
cmpsb
fcmovnbe
mov
aaa
add
jg
adc
pop
mov
push
pop
xchg
stc
aaa
stc
cmpsb
adc
sti
fimuls
sbbb
cli
div
inc
ret
pop
fucomi
push
push
mov
ja
std
cmc
jo
add
outsl
scas
test
pop
jmp
cli
scas
mov
inc
cmc
push
adcb
xchg
mov
pop
mov
add
arpl
mov
push
enter
in
mov
ss
out
je
mov
ret
xor
cs
jae
cli
movsb
dec
cmp
adc
fmul
cltd
push
imulb
loope
and
sub
dec
sahf
pop
imul
lret
daa
dec
in
out
jg
lods
out
inc
fmull
cmp
das
sub
outsb
mov
test
bound
xchg
xchg
fs
out
pop
andl
xor
aas
mov
loop
push
xchg
jl
sub
int
and
test
loope
ljmp
ret
mov
pop
and
ja
in
xchg
push
sbb
loopne
push
les
mov
cmp
adc
add
mov
adc
adc
pop
sbb
mov
movsl
or
clc
dec
xor
xlat
aad
stc
nop
dec
imul
insl
xor
push
fisubs
add
adc
int3
inc
nop
in
scas
jmp
out
test
popf
sub
stos
sbb
aad
add
in
sub
mov
mov
and
jle
test
sbbl
popf
add
imul
loopne
pop
jge
daa
and
popf
adc
ja
insb
xlat
adc
push
int3
repnz
into
scas
push
out
xchg
cltd
xchg
out
add
imul
es
ret
xchg
or
adc
clc
icebp
lods
testb
ja
mov
xabort
rcrl
les
mov
es
add
cmp
add
pop
movsl
enter
or
loop
mov
dec
xchg
andl
sub
jge
jns
lds
int3
je
mov
lods
cmpsb
out
fdivp
push
daa
push
pop
or
ja
xor
xor
sbb
sbbb
add
cmp
aaa
fistpll
jp
xor
adc
jbe
test
lods
pushf
pushf
add
cmp
mov
inc
sbb
out
fidivs
scas
mov
movsl
test
shl
cli
scas
clc
cltd
cmp
psubusw
test
lds
pop
insb
loopne
jle
sbb
push
sbb
xchg
push
int3
aaa
xchg
pushf
repz
popa
dec
jne
out
popf
aas
dec
cmp
or
push
xchg
sbb
hlt
enter
jbe
push
xchg
jo
jae
jne
int
xchg
jbe
mov
mov
cmp
jge
adc
idivb
mov
dec
leave
xchg
cld
mov
add
ret
cwtl
scas
mov
cwtl
fsubl
mov
out
lahf
sbb
fxch
int
adc
add
push
cmp
sub
jp
scas
pop
push
mov
and
mov
fidivrs
ficoml
pop
adcb
inc
pop
xchg
dec
movq
sbb
jle
ret
test
xor
jno
sbb
sti
fisttps
mov
lock
test
out
fnstsw
jmp
insb
mov
inc
add
and
jl
cmc
stc
and
dec
push
sbb
xor
fisubrl
lods
fstps
sti
adc
and
jno
xchg
fistl
aas
stos
popf
pop
repnz
sub
js
stc
scas
inc
mov
ja
insb
jle
and
cmp
movsl
mov
and
sub
jne,pt
jns
scas
xchg
das
hlt
js
dec
or
push
cmp
or
lea
xorl
in
jle
add
daa
cs
mov
lret
fistl
int
pop
push
pop
in
hlt
pop
inc
push
in
outsb
cmp
in
xchg
xor
movsl
frstors
psadbw
ret
clc
mov
addr16
mov
inc
int3
clc
mov
adc
xor
test
sbb
sahf
lcall
aam
push
scas
iret
jns
in
bound
lret
outsb
imul
and
pop
dec
sti
sbb
popa
sub
push
adc
in
imul
sbb
push
pusha
adc
sbb
mov
inc
ss
ret
dec
mov
sbb
lahf
xchg
or
mov
stc
push
pop
pop
addb
out
pop
mov
rcrb
subb
jmp
jne
cmp
cmp
rcll
xchg
mov
je
or
lcall
sbb
fdivrl
shl
in
adc
fstl
aad
imul
mov
ljmp
push
rcrl
jecxz
aaa
inc
push
out
in
loope
inc
in
mov
call
lahf
pop
aam
cmpsl
add
xchg
inc
ret
xlat
push
pop
ret
pusha
mov
pop
popf
push
jle
lret
xchg
aaa
iret
and
std
insb
add
testl
in
stc
jne
xor
mov
loope
dec
cmp
scas
enter
sbb
test
jnp
inc
pushf
add
js
jb
pop
dec
sub
lods
xchg
in
dec
jg
mov
inc
sub
push
and
sbb
jle
call
cmc
cs
adc
xchg
push
adc
iret
inc
ljmp
pop
xor
push
cld
lahf
mov
push
test
int
movsl
cmp
mov
lods
pop
xor
dec
and
mov
inc
jb
and
in
mov
cmpsb
xchg
mov
sub
pop
dec
push
mov
jne
jmp
je
dec
mov
loope
cmpsb
loope
sbb
rorl
pop
dec
and
jmp
movsl
and
cmp
rolb
xor
push
pop
fistl
pop
fisttpll
pop
cmp
jl
jmp
jp
loop
sub
in
and
sarl
std
pushf
inc
daa
xor
popa
test
cmp
arpl
cmp
mov
in
mov
call
pop
leave
lds
rcr
and
cltd
push
cld
jo
jbe
adc
std
mov
dec
add
add
lahf
rcrl
dec
cmp
sbb
in
mov
je
mov
sbb
cs
cmovle
enter
ss
jnp
or
dec
ja
popa
filds
add
xchg
xchg
loopne
xor
xor
repz
mov
add
data16
push
loopne
cmpsl
inc
pop
test
popf
and
inc
xor
insl
sarb
jo
jb
rcl
scas
mov
xorl
cmp
cmp
in
push
loop
mov
cmpsl
pop
mov
rcrl
add
js
jno
lds
into
push
push
fisubrl
pop
inc
sub
outsl
xorl
js
push
xchg
push
les
test
dec
cmpsl
or
insl
test
and
fildll
lods
xor
test
sub
or
es
xor
inc
push
xor
js
mov
out
or
sub
ror
lock
push
sbb
sub
mov
and
mov
jnp
or
leave
cs
sub
clc
xor
sbb
jmp
adc
imulb
add
cmc
in
cmpl
mov
jg
cmc
sbbb
dec
adc
or
fildll
add
mov
leave
cmpsb
and
ficompl
adc
and
add
stos
repz
cwtl
jnp
jg
adcl
push
pop
push
cmp
mull
jp
in
mov
mov
and
outsb
les
add
aam
and
mov
add
lret
clc
out
xor
mov
ja
pop
xchg
mull
adc
mov
mov
jge
sahf
jge
add
push
and
mov
mulb
daa
mov
xchg
adc
mov
xchg
cmp
sub
pushf
lret
and
clc
mov
push
push
pop
push
data16
cmp
fisubs
loopne
push
lods
stos
loopne
mov
add
pusha
jbe
xchg
iret
inc
xor
adc
cmp
cmp
aas
inc
jae
daa
cli
sbb
mov
in
sub
sbb
in
test
je
and
cmpl
push
pop
jbe
movsl
mov
mov
dec
orb
aam
mov
ret
push
cmp
cltd
shl
pop
fnstsw
pushf
aam
jl
lock
xchg
xchg
imul
out
pop
sti
jb
nop
stos
sub
and
mov
push
mov
inc
xchg
push
lock
dec
jp
mov
push
orl
fs
push
in
mov
cmpsb
jecxz
mov
cmc
inc
inc
xor
mov
lea
cmc
aad
mov
mov
pop
pop
dec
mov
stos
jmp
test
push
sbb
jmp
hlt
xlat
fadd
jne
aad
fdivrl
aam
in
mov
lods
popa
or
pop
pop
sub
imul
jmp
xor
add
jg
inc
mov
inc
xchg
pop
jmp
add
and
dec
push
sub
lcall
inc
lock
mov
mov
cmp
cmpb
push
rcr
repnz
push
stc
cld
insl
sbb
adc
or
sbb
inc
xchg
or
dec
pop
mov
or
mov
inc
out
or
data16
faddl
sbb
xchg
andnps
jns
roll
jmp
xor
loop
and
mov
fimull
scas
push
cs
imul
dec
nop
rcrl
or
adc
pop
in
test
into
jno
xlat
insb
lea
shlb
cmp
jns
dec
out
adc
and
leave
cmpsb
xchg
dec
adc
cmp
mov
cmc
push
insb
std
pop
ds
iret
mov
push
je
mov
and
or
aas
sbb
mov
sbb
push
add
xor
adc
lea
cmpsb
bound
sbb
outsl
aas
mov
loop
xor
out
sahf
cltd
xlat
push
aam
mov
lock
clc
pop
push
fstpt
pop
xchg
adc
adc
inc
push
xor
cmp
mov
imul
xchg
push
roll
iret
push
mov
rolb
shr
xchg
lea
repnz
imul
sbb
popa
cli
inc
push
lods
and
jae
mov
je
sbb
sbb
fistpl
int
lea
int
push
or
jb
mov
out
mov
push
push
in
insl
shrl
lock
sahf
out
jae
sbb
or
jns
in
aas
lahf
cli
js
push
fs
xchg
outsb
mov
or
andb
call
aaa
roll
test
insb
dec
pop
xor
dec
adc
rorl
in
or
pop
jne
arpl
in
push
stc
leave
scas
outsl
inc
mov
shl
not
ret
adc
fimull
fs
std
jmp
dec
mov
or
pop
mov
out
mov
stos
outsl
or
loop
mov
mov
pushf
jbe
fildll
and
inc
push
daa
jg
mov
dec
xchg
or
movsl
aaa
scas
ret
rcrl
xchg
dec
jl
xchg
sub
pop
mov
adc
mov
rol
js
sbb
imull
jo,pt
lods
add
adc
clc
cs
fwait
inc
cmpsb
xchg
xor
sub
out
into
sbbl
ret
mov
push
fildl
rorl
mov
fs
gs
hlt
jp
int3
lock
sbb
daa
inc
movsb
adc
repnz
mov
jae
dec
jo
pop
adc
cltd
jmp
jns
jno
mov
inc
pop
int
sub
addb
or
cmp
sbbl
dec
cli
pop
xchg
loop
jb
jge
out
adc
arpl
icebp
pop
les
add
push
push
mov
and
movsb
mov
addr16
push
rol
adc
push
and
push
pop
das
cmc
xlat
in
jecxz
std
xchg
push
mov
xchg
sbb
inc
dec
pop
aam
jmp
sarb
jnp
repz
repz
xchg
pop
jae
pop
add
notl
std
mov
mov
in
shll
test
gs
xchg
sub
xchg
filds
lea
scas
test
lods
cmpsl
xor
repz
cmpsb
imulb
mov
enter
sub
jb
ljmp
xor
dec
icebp
jo
sub
lcall
jno
cmp
scas
not
add
jne
pop
cltd
stos
mov
in
or
cmp
test
loopne
push
leave
pop
jno
jb
push
and
leave
aam
sub
mov
fucomi
push
and
popf
push
ljmp
pushf
stc
stc
aam
fldcw
xor
add
dec
or
jnp
arpl
jbe
mov
fsts
pop
inc
mov
xchg
shl
push
loopne
mov
pop
xor
jecxz
sub
fmul
mov
stos
movb
fldenv
es
cmc
jns
jl
pop
divl
cwtl
ljmp
inc
mov
sahf
push
mov
ret
mov
sub
mov
cmpsb
dec
dec
mov
aam
and
vmread
data16
pop
les
divb
xlat
xchg
mov
in
loopne
mov
lods
fstpl
push
cmp
scas
mov
popf
ja
pop
jmp
xor
push
in
lods
iret
icebp
inc
and
lret
in
das
xchg
pop
dec
enter
mov
xor
sbb
pop
sarb
push
loop
aas
add
decl
cmp
stc
mov
cmp
fistps
jmp
lds
add
inc
pop
adc
mov
pop
jno
data16
inc
mov
mov
pushf
jecxz
sbb
pop
cmp
pop
aam
stc
cmp
shl
stos
xor
es
js
pushf
imul
loope
adc
push
repnz
xor
mov
inc
jp
or
out
ret
out
test
sub
repz
fwait
fs
jge
jo
jo
stos
xchg
in
ss
mov
jbe
xchg
xor
lcall
xor
das
in
xor
loop
mov
sub
xchg
pop
out
mov
push
scas
cmp
and
xor
mov
cmpsl
hlt
call
cltd
jnp
push
mov
sbb
in
push
loope
into
pusha
and
repnz
xor
and
lcall
inc
popf
push
mov
enter
in
add
pop
popf
jp
pusha
cmpsl
sqrtps
push
sbb
xchg
inc
enter
pop
std
sahf
xchg
les
stc
adc
neg
dec
xor
lea
pusha
or
dec
fldt
psllw
fdivrs
lahf
hlt
cmp
dec
cmp
rolb
pop
daa
sub
jp
sbb
jp
pop
aad
dec
rolb
cltd
pop
fimuls
pop
xor
inc
add
fimull
sub
mov
xchg
inc
sti
push
fs
fldl
in
adc
stos
stos
loopne
out
movsl
jle
push
and
dec
jae
dec
push
sub
ret
inc
add
or
cmc
cmpsl
insb
aam
sub
sub
pop
jle
dec
repz
test
mov
pop
sbb
lret
add
cmpsl
push
mov
mov
pop
jge
or
inc
jle
add
cmp
dec
xchg
out
es
xchg
jns
add
pop
out
clc
push
adc
aas
ror
scas
jecxz
rol
in
mov
or
mov
hlt
push
dec
loop
push
test
icebp
mov
fdivr
adcl
out
fcom
cmp
pop
inc
mov
lock
ret
jnp
or
lahf
or
out
in
xchg
repz
popa
push
fnsave
xchg
push
jmp
lcall
pop
pop
mov
je
jle
fisubrl
pusha
sub
adc
repnz
cmp
push
pop
jmp
xchg
outsl
add
pop
ret
dec
mov
in
xchg
icebp
ja
arpl
ret
sti
sub
dec
mov
movsl
lds
sbb
mov
jmp
cmpsb
cmp
repz
mov
lret
fisttpl
icebp
movsl
gs
ret
cmp
ss
inc
insb
xor
or
pusha
sbb
lret
and
xor
les
dec
mov
dec
cmp
add
iretw
cmc
loop
push
in
mov
jbe
pop
pop
push
add
add
test
mov
jmp
sbb
add
jp
dec
lahf
out
sarb
dec
pushl
mov
aad
shrl
mov
lods
adcl
mov
jae
je
mov
sar
loop
xor
decl
xchg
bswap
cmp
pusha
icebp
cmp
dec
cmp
xor
xchg
jecxz
mov
pop
loope
push
sti
and
sub
mov
lods
jno
jmp
push
inc
adc
fimuls
call
cli
mov
sbb
and
mov
lods
cmp
xor
rcl
xor
repz
andb
jnp
daa
orb
adc
in
in
scas
add
dec
inc
push
fildll
int3
pop
inc
sbb
xor
jg
fbld
lea
shrl
jo
stc
fildll
fiadds
xor
xchg
movsl
icebp
adc
ljmp
mov
jmp
or
and
adcb
xor
inc
jge
xor
mov
mov
mov
lock
cltd
int
inc
imul
jbe
jo
mov
xchg
scas
aad
mov
stos
xchg
jno
pop
das
aad
mov
inc
rcl
push
sub
and
aad
push
pusha
dec
inc
mov
mov
movsb
fwait
dec
stos
fistpl
ljmp
xor
push
stos
js
pop
cwtl
inc
dec
lret
imul
push
inc
mov
jle
or
ret
loope
sar
clc
scas
jecxz
cmc
pusha
xchg
ret
sbb
lahf
dec
int3
shll
cltd
push
popf
xchg
xor
pop
mov
jecxz
ss
cmp
xchg
sub
and
in
jle
fs
mov
in
sub
xor
aaa
jl
mov
mov
repnz
loope
add
in
adc
dec
dec
add
inc
fwait
shrl
mov
cmp
fnstenv
lret
jno
mov
sbb
fisttps
sub
sbb
ss
cmpsl
push
xor
das
roll
int
sbb
cltd
ljmp
out
cmpsl
or
mov
cmc
lea
push
mov
jle
stos
and
insb
adcl
out
leave
xchg
loope
addb
mov
cwtl
aaa
mov
xor
cs
jb
xor
fildll
add
cs
inc
ljmp
xchg
sub
aas
push
inc
fists
jae
pop
outsb
inc
in
fists
mov
lret
fwait
cmpsl
jo
mov
cmpsl
std
fstpt
mov
pop
fwait
dec
orb
in
add
push
add
push
jmp
jno
rclb
jbe
mov
pop
xor
movsl
pusha
in
pop
sbb
mov
adc
lret
adc
jns
sub
aam
push
or
pusha
stc
nop
es
adc
lds
mov
push
ljmp
xchg
dec
or
sbb
addl
aas
aas
push
jo
jo
adc
inc
mov
mov
cltd
dec
cld
inc
in
in
mov
pusha
ljmp
pop
inc
mov
add
xchg
mov
scas
xor
jle
xor
data16
js
mov
int
push
jo
data16
push
add
insl
jmp
jmp
mov
fmuls
lock
call
int
push
adc
xlat
jmp
inc
push
in
mov
push
test
mov
push
cld
dec
rorl
push
pop
test
outsw
mov
js
push
call
cmc
xor
daa
xchg
ret
add
stc
add
outsw
ljmp
cs
rclb
pushf
mov
jecxz
cmp
stos
lods
jb
pop
cs
pop
inc
and
mov
aam
mov
push
jmp
cmp
outsl
xchg
imul
mov
aam
xchg
cmp
push
or
fiadds
out
jae
in
out
js
ret
inc
stos
mov
test
sbbb
in
xor
fdiv
repz
jle
xor
orb
jle
mov
cmp
jne
sbbb
push
aaa
inc
jno
ficoml
pop
ss
pop
or
and
ffree
push
dec
icebp
mov
sub
test
pop
xor
cltd
adc
xor
mov
addr16
mov
or
loopne
jne
int
je
dec
addr16
push
cli
sti
bound
adc
mov
ds
inc
hlt
mov
int
fisubrs
aad
or
adc
cld
mov
mov
mov
push
mov
loope
daa
push
in
mov
scas
or
mov
cltd
jb
pop
mov
in
push
add
jle
push
mov
push
push
lret
or
ss
dec
out
dec
icebp
jno
cmp
pop
cmp
mov
repz
pop
xchg
inc
push
and
lcall
sahf
cmp
dec
scas
or
mov
cmp
daa
xchg
xlat
pop
sbb
sti
xlat
sbb
add
mov
movsb
jo
outsb
sub
cmp
xor
shrb
sbb
or
xacquire
mov
scas
ss
jo,pt
jp
add
mov
xchg
sti
les
sbb
cmpsb
pop
iret
add
jno
mov
mov
ret
outsl
jge
cwtl
and
cs
adcl
jbe
je
xor
jg
lock
loope
push
es
call
ja
lea
ficoml
xor
imul
pusha
test
xchg
mov
add
pop
pop
jo
aaa
les
in
pop
ffreep
cld
jmp
pop
popa
in
test
icebp
jnp
sub
shll
mov
jb
fsubl
lea
jg
xchg
sar
mov
fcmovu
loop
xlat
pop
pop
stos
sub
ret
or
outsb
sbb
into
ja
xchg
pop
dec
xorw
shrb
inc
dec
call
xchg
push
xor
or
fbld
sbb
dec
lahf
mov
fcmovbe
cmp
idivb
out
lock
cmp
mov
inc
inc
mov
outsb
cwtl
add
jle
int
mov
jle
lods
bound
repnz
xor
scas
cmp
inc
in
js
jnp
inc
pop
jne
sub
adc
shrb
iret
add
sbb
out
sub
mov
fwait
test
adc
movsl
scas
popf
mov
insl
outsl
repnz
mov
and
fldt
rcrl
dec
pop
ss
xchg
xchg
faddl
cmpb
add
daa
lods
pushl
inc
jo
cmp
cld
cld
jle
mov
fdivs
mov
mov
push
add
mov
das
mov
mov
movsb
ljmp
xchg
adc
ret
outsl
jo
mov
bound
nop
scas
mov
cmp
in
push
mov
push
push
subb
add
punpckhbw
xchg
pop
test
inc
inc
sbb
mov
es
pop
flds
xor
or
pop
arpl
sbb
insb
or
push
lds
cmp
and
inc
or
jmp
xchg
pop
mov
lcall
jg
jno
loope
lods
adc
popa
sub
sarl
int3
rol
scas
jo
push
test
dec
mov
ret
jb
es
cmpsb
inc
scas
mov
les
outsl
int3
cmp
in
or
rorb
jnp
nop
nop
lock
outsl
call
sbb
xchg
dec
push
sbb
mov
xor
hlt
cmp
imul
enter
insl
in
dec
loope
mov
cltd
pop
ret
ret
adc
repnz
lret
inc
pop
inc
popf
sub
add
loop
pop
mov
int3
ljmp
test
mov
push
mov
sub
lahf
sahf
xchg
mov
sub
add
icebp
adc
js
and
nop
leave
add
outsb
mov
jno
or
mov
pop
test
pushf
push
in
es
xor
push
mov
ja
or
xchg
mov
arpl
lret
hlt
sbb
mov
outsl
dec
icebp
xchg
imul
xchg
nop
mov
inc
push
sub
out
subl
push
inc
sahf
mov
xchg
sub
push
sahf
ficompl
cmp
mov
inc
add
fimuls
pop
rolb
and
ret
sbb
lcall
fstpl
fsubrl
outsl
int
mov
dec
xchg
inc
inc
cmp
pusha
dec
jb
inc
pop
stos
sub
jl
mov
jle
mov
jmp
xor
xchg
arpl
jb
fld1
ja
xchg
vpmaxsw
mov
xor
lock
xorl
lock
cmpsb
push
ss
mov
andl
rcrl
mov
adcb
mov
push
push
sbbb
adcb
push
pusha
push
lock
push
dec
repnz
enter
mov
pop
imul
xchg
rclb
idiv
arpl
pop
inc
inc
rol
fists
ss
stos
data16
sub
dec
jl
xor
test
jmp
mov
int3
loopne
popf
xchg
dec
mov
fcoms
orb
std
js
or
scas
jge
cmp
arpl
popf
outsb
cmp
int
inc
xor
or
cwtl
call
repnz
ja
xor
outsl
cmp
xor
js
jp
or
ja
push
dec
pop
jb
sti
hlt
jp
inc
add
xchg
xchg
jnp
add
jmp
in
mov
lds
jl
cmp
sahf
jno
mov
xchg
arpl
and
rorl
ret
popa
fbstp
cmc
mov
out
and
je
sub
sti
enter
pop
stos
xchg
and
mov
inc
and
lock
mov
add
mov
ljmp
das
mov
mov
shrb
jno
xchg
mov
pop
pushf
testl
mov
das
iret
inc
xor
push
imul
or
enter
fstpt
and
enter
push
mov
sbb
je
sub
jle
mov
xor
mov
dec
xchg
pop
int
dec
or
mov
and
movsl
cmp
cmpsb
cmp
add
dec
xchg
test
push
pop
lcall
icebp
outsl
or
arpl
adc
fs
xor
out
pusha
in
xchg
push
in
pusha
sub
xchg
cwtl
jns
pop
and
aaa
fxch
push
and
insl
mov
jmp
mov
sbb
cmc
cld
lcall
scas
jge
ljmp
out
bound
mov
bound
neg
in
push
inc
pop
mov
test
push
adc
cld
push
sub
scas
jae
inc
sbb
jae
dec
leave
sahf
gs
into
add
mov
fwait
ss
mov
inc
lahf
mov
clc
imul
stos
mov
orb
jne
and
les
cli
push
sbb
or
xchg
dec
xchg
mov
jno
dec
bound
aam
dec
mov
enter
scas
out
mov
cli
adc
dec
lret
sbb
fisttpll
inc
xor
nop
mov
sarl
xchg
insl
jecxz
ljmp
scas
dec
mov
rcr
cwtl
xor
mov
aad
xchg
mov
push
lret
test
pop
sub
and
adc
and
test
notb
inc
fldl
adc
je
and
movsl
sbb
mov
push
sub
dec
lods
cs
mov
int3
pop
push
xchg
dec
and
xor
imul
sbb
popf
fcomp
mov
int
cli
xchg
xchg
sub
sbb
repz
fdivl
or
adc
and
aaa
pop
and
mov
adc
fisttps
mov
add
mov
jl
lock
imul
lock
mov
aad
jmp
sbb
push
and
cltd
cmp
ja
test
repz
jmp
mov
dec
hlt
mov
in
jl
xchg
inc
push
push
test
pusha
ss
pop
test
push
mov
negb
or
xchg
or
push
push
sbb
and
lea
loopne
or
rcll
push
leave
test
adcl
mov
out
mov
adc
pop
cmc
xchg
scas
adc
es
fiadds
bnd
sbb
push
pop
xchg
subl
sub
pop
decl
cmp
aad
dec
xchg
sbb
int
dec
cs
dec
mov
sarl
adc
jmp
enter
mov
push
pop
lahf
popf
inc
or
mov
jo
cld
inc
iret
sti
in
out
or
add
mov
fistl
aam
jae
and
imul
push
xor
fwait
shlb
or
xchg
add
repnz
test
sbb
pop
add
nop
jo
pop
mov
push
test
scas
fsubrp
movsbl
inc
xor
or
mov
lret
push
pop
jae
hlt
lock
js
add
outsb
xchg
sub
sub
pop
jb
rol
sbb
in
push
je
ret
xchg
sbb
push
sbb
inc
adc
hlt
push
mov
mov
repz
aad
adc
lock
popf
and
test
es
cmpsl
xchg
inc
imul
pop
xchg
js
std
mov
aaa
aad
jb
push
sahf
mov
out
or
or
mov
xor
or
adcb
and
pop
cmp
pushf
call
out
jp
stos
mov
mov
rcll
mov
std
add
sub
xor
cmp
lods
adcl
xchg
add
pop
es
fwait
ja
test
lds
and
lcall
sub
push
xchg
das
inc
xor
idivl
lods
stos
mov
mov
mov
cmpb
stos
pusha
mov
mov
int
mov
cwtl
dec
repnz
scas
or
lcall
xchg
fwait
clc
and
rol
or
sbb
xor
push
ljmp
xchg
inc
cwtl
push
mov
cmpl
ret
cmpb
and
xchg
js
loop
pop
arpl
and
rcl
lea
in
adc
jle,pn
es
insl
pop
inc
adc
jg
mov
add
scas
mov
pop
sbb
adc
mov
aad
lods
pop
dec
mov
movsb
and
lcall
xlat
jmp
test
ljmp
bound
sub
mov
cmp
adc
jecxz
outsb
clc
popa
cwtl
loope
add
lea
xlat
repnz
ret
push
xchg
subb
test
je
test
imul
mov
data16
jp
mov
insl
jne
stos
loope
les
leave
cmp
push
push
add
dec
pop
popa
hlt
int3
push
sbb
inc
and
aam
imul
cmpsl
inc
pop
jbe
jg
push
mov
lds
push
jg
cmpsb
cld
shl
lcallw
dec
repz
icebp
jecxz
mov
cmc
push
test
jb
cmp
jg
ja
pop
cmpsb
ret
jp
aad
aam
dec
outsl
jle
xor
or
cs
loopne
sub
mov
xchg
push
rcrb
xor
sahf
cmp
sbb
pop
cmpsb
aam
cli
sti
cmc
lret
in
and
dec
js
jle
leave
push
sar
rcrl
add
in
fists
or
mov
or
xchg
imul
and
sbb
inc
sbb
cmp
mov
inc
mov
iret
cmp
xor
stos
xor
cli
cmc
pop
int
adc
pop
and
scas
xchg
std
pop
popa
insl
shll
mov
in
mov
mov
push
mov
outsb
cmp
inc
test
jne
fmuls
sarb
mov
push
in
cli
icebp
and
add
jg
je
shl
lret
int
mov
xchg
lret
inc
xchg
jae
inc
sub
stos
inc
fadds
loope
loope
and
arpl
push
mov
xor
popf
fstps
lret
inc
jecxz
sti
aam
fisubrs
mov
cmpsl
cmpsb
add
jnp
xchg
cmp
mov
mov
aad
out
roll
test
in
push
cmp
mov
ljmp
inc
or
scas
push
lds
rorb
addb
out
mov
cmp
jl
lahf
mov
add
push
test
push
push
adc
popf
mov
add
icebp
pop
mov
arpl
fdiv
inc
inc
mov
cld
jecxz
or
and
sub
int3
cli
fdivr
inc
mov
insl
and
insb
sti
sbb
dec
or
or
addr16
sub
xor
jecxz
test
or
in
pusha
addb
inc
sub
dec
and
mov
or
push
mov
scas
inc
mov
fs
sub
dec
and
mov
call
inc
add
sub
cltd
cwtl
jne
mov
cld
in
pop
mov
jmp
rcrb
xchg
dec
ret
imul
and
jecxz
bound
test
lret
subb
xor
data16
enter
pop
dec
pop
ss
mov
pusha
pop
dec
add
sarl
fdivs
pop
dec
jecxz
sbb
fimuls
add
push
jae
ret
pop
lcall
shrb
fwait
add
xchg
cmp
fcompl
out
hlt
mov
mov
sahf
fisttpl
or
sub
pop
sahf
dec
lret
aaa
jl
roll
adc
adc
adc
cmp
ficomps
insl
mov
push
jmp
or
pop
or
adc
jmp
xor
shlb
xor
jecxz
inc
jno
repnz
pop
mov
mov
sub
lods
rorb
push
loope
aas
sub
lea
movsl
pop
int3
xor
xchg
mov
repnz
shl
test
ja
fwait
add
mov
adc
xor
scas
and
push
rcrb
mov
mov
sbb
int3
dec
cmp
cmpsl
mov
pop
and
mov
lock
insb
fisubs
sahf
std
push
punpckhdq
push
xchg
mov
jg
dec
aam
xor
jne
das
ds
lock
sub
and
jae
inc
enter
leave
or
nop
xchg
cmp
test
das
push
repnz
mov
push
jmp
mov
inc
push
mov
mov
cltd
into
les
pop
ljmp
fimull
adc
push
test
dec
lret
and
jne
jo
bound
sbbb
pop
dec
data16
push
jmp
jae
xor
sahf
addr16
gs
lods
sub
and
adc
ds
push
jnp
lret
lret
int
add
xchg
clc
mov
mov
nop
ror
fcomip
mov
xchg
aam
aas
pop
inc
stos
fwait
fwait
cli
aad
shrb
movsl
lods
outsl
add
cld
ror
stos
mov
or
pop
mov
dec
mov
mov
push
add
test
pop
lcall
sbb
fildl
out
cmp
fstl
cwtl
sub
pop
jo
pop
xor
sbb
cvttps2pi
jmp
orb
fildll
sahf
dec
icebp
sbbl
cs
fsubs
xor
dec
jge
sub
mov
repnz
xchg
ds
bound
out
mov
cld
out
fsubl
es
popf
push
xor
ret
repnz
mov
inc
xchg
inc
sub
xchg
roll
sbb
sub
xchg
test
rcrb
dec
push
or
aad
dec
shl
jge
outsb
push
lcall
mov
paddusw
bound
sub
lcall
es
sti
mov
cwtl
and
dec
cmp
int
shll
pop
jg
or
negb
enter
add
jno
inc
xchg
sub
test
adc
mov
jp
inc
mov
ror
cmp
cmp
and
cmp
sbb
not
mov
push
push
pop
adc
xchg
stos
mov
xchg
mov
jo
xor
and
sbb
bound
and
jmp
loope
sbb
xor
int
testb
push
shlb
stos
inc
mov
mov
jge
push
xor
popa
sub
sub
pop
repnz
pop
adc
rorl
inc
xchg
jp
mov
sbb
lcall
iret
outsl
or
lock
mov
insb
pop
sbb
mov
jl
and
xchg
xchg
aam
cmpsl
adcb
mov
mov
sahf
out
and
xchg
nop
adc
int
push
push
loope
pop
pop
dec
arpl
or
xor
test
fdivr
stos
and
popa
mov
fnsave
lods
xchg
xor
sub
mov
ror
inc
hlt
out
adc
mov
adc
js
cwtl
xor
mov
or
fwait
test
shr
pop
les
js
or
out
ja
or
decl
out
sahf
orl
add
outsl
std
out
jnp
outsl
sub
iret
pop
fistpl
push
cmp
bnd
ror
das
addr16
int
stc
cmp
popa
pushf
mov
pop
pop
lods
push
wrmsr
pop
add
dec
sbb
xlat
in
fdivrl
inc
mov
fs
fnstenv
ljmp
clc
mov
sub
or
mov
add
lret
in
sub
adc
jno
mov
fs
shll
push
aad
daa
aas
lods
pop
push
aad
fstps
xchg
loop
pop
xchg
jb
hlt
mov
add
cmp
orl
lret
lds
movsl
pusha
cmp
mov
or
call
pushf
and
cmpsb
outsb
mov
sbb
imul
clc
jp
mov
cmp
rcl
out
sti
pushf
jne
popf
test
mov
and
xor
mov
xorl
inc
cmpl
or
jp
rcrl
outsl
and
mov
arpl
add
push
push
ret
push
xchg
dec
mov
mov
or
mov
data16
and
adc
pop
push
loopne
pop
pop
movsl
and
out
test
sbbl
cmp
fmul
dec
add
mov
mov
or
das
dec
adc
rclb
mov
pushf
dec
cltd
scas
sbb
xor
roll
and
mov
xchg
lds
cmp
outsb
jp
notl
mov
outsl
pop
test
adc
add
in
ds
inc
sbbb
mov
adc
push
dec
dec
mov
cmp
push
lea
dec
movsb
lahf
push
xor
in
test
leave
sbb
das
nop
push
sbb
shrb
mov
outsb
push
cltd
mov
int
stos
scas
sub
inc
push
mov
in
setnp
mov
and
call
test
dec
and
ja
lds
fisubs
mov
js
into
xchg
cs
rorb
mov
cmp
bound
cmp
or
sbb
adc
pop
stos
leave
cmpsb
dec
push
or
cli
and
xor
or
es
cld
fdivs
mov
std
add
pand
lds
fiaddl
add
or
shrl
scas
add
rcrl
xor
push
cmc
xlat
xchg
sbb
mov
mov
cmp
inc
sbb
mov
mov
inc
rclb
cs
mov
loope
daa
in
or
cmp
jnp
adc
add
jp
imul
dec
loopne
outsl
mov
xchg
addr16
fcmovnbe
lock
faddl
shll
in
notb
fildll
das
aam
cmp
mov
insb
cmp
test
addr16
mov
pop
call
mov
sbb
cmp
jl
mov
cmp
loopne
xchg
cmp
jl
cwtl
lods
add
sub
or
jbe
pop
stc
nop
sbb
xchg
adc
xor
xor
pop
shrl
rorl
push
xchg
fstps
clc
popa
jns
push
fistl
xlat
xchg
sub
sbb
in
lods
dec
sub
mov
and
insl
loopne
add
jle
xchg
jp
dec
push
add
sub
arpl
sbb
xor
cmp
xchg
pop
rcrb
sub
mov
and
lcall
lahf
sbb
inc
inc
repz
fisubs
dec
push
push
out
jmp
in
mov
insl
pop
mov
std
cmp
pop
lahf
dec
fnsave
jbe
mov
imul
adc
icebp
push
mov
adc
out
int3
out
scas
in
arpl
adc
clc
fcompl
sub
mov
loope
js
cltd
cmp
jbe
mov
js
lret
notb
jecxz
sub
adc
cmp
xor
cmp
push
mov
pop
jno
int3
rcrb
pop
rol
nop
out
pop
sahf
xchg
push
arpl
mov
fbstp
adc
nop
inc
in
jmp
cld
out
xor
cltd
push
add
fsubrs
and
xor
add
enter
mov
mov
addr16
xorb
xor
ja
shrb
inc
or
dec
stos
and
and
popf
and
push
jbe
jne
xlat
mov
adcb
lret
mov
cmp
inc
xchg
push
adcb
fistl
lock
rcrl
push
int3
fistpl
sbbb
cwtl
sbb
and
sub
aam
push
mov
scas
les
or
mov
fwait
int3
sbb
cmc
add
jo
ja
xchg
dec
adc
jg
es
nop
mov
jecxz
into
dec
sbb
jmp
pop
stc
out
rcrb
mov
push
jno
jnp
mov
repnz
pop
scas
insb
adc
or
mov
iret
mov
shll
pop
sub
addr16
mov
inc
inc
dec
push
mov
ja
push
cmpl
subb
imul
xchg
dec
and
loop
cs
fldt
mov
push
push
xorb
sub
mov
pop
cwtl
aam
push
cmp
push
xchg
xchg
popa
mov
sub
inc
cwtl
add
jecxz
fs
gs
mov
dec
mov
push
lods
daa
sbb
xor
mov
inc
cwtl
les
repz
sub
pusha
add
pop
repnz
xor
clc
jl
xor
jo
pop
hlt
pop
rcrb
lcall
cmp
test
jg
push
mov
iret
xchg
or
sub
pop
test
pushf
push
fwait
js
cmpsb
pop
mov
sbb
mov
fstpt
cmp
scas
pop
in
enter
mov
xchg
cmpsl
dec
in
mov
pushf
sub
or
outsl
leave
ljmp
outsb
and
out
jbe
ja
out
icebp
out
jne
sarl
dec
cmp
inc
cmpsl
repnz
aad
aad
ljmp
mov
out
loop
mov
scas
pop
mov
int3
lret
mov
sub
pop
mov
test
outsl
mov
scas
xchg
mov
push
xor
fdivrl
xchg
movsl
clc
stc
xchg
outsb
jo
inc
ljmp
mov
fadd
adc
pop
ljmp
pop
or
addr16
xchg
jge
pop
adc
fs
pop
mov
lods
fcomi
rorb
jge
push
mov
sbb
std
ljmp
inc
pop
xor
mov
xchg
aaa
adc
xor
aas
arpl
cmpsb
lds
sub
mov
push
orl
xchg
push
cmp
pop
jle
test
imul
add
outsl
mov
testb
daa
push
dec
cmp
add
je
std
mov
jae
nop
das
xchg
cli
xor
or
rcll
dec
dec
clc
add
xchg
aas
xchg
xchg
xchg
mov
cmp
insl
mov
or
adc
inc
add
mov
add
and
lea
ds
enter
xchg
loope
jecxz
dec
mov
ret
lret
push
in
pop
cmc
out
scas
mov
push
mov
jb
lret
cmp
cmp
iret
out
jae
pop
cmp
cmp
inc
out
mov
shrl
dec
sbbb
and
inc
pop
pop
test
lret
nop
hlt
push
inc
ds
cmp
xor
inc
insl
mul
fistps
mov
and
pusha
es
push
out
push
dec
and
nop
mov
insb
shr
mov
enter
cmp
sbb
pop
mov
adc
jae
outsb
push
cmp
test
push
cmp
cli
xlat
ds
jp
sbb
xchg
mov
gs
lea
movsb
imul
xchg
xor
sub
cmp
call
jns
sbb
ljmp
sahf
jecxz
xchg
mov
in
jb
adc
ljmp
mov
inc
cmpsl
jmp
xchg
or
xchg
and
mov
pop
push
inc
stos
cld
lock
and
repnz
roll
or
cltd
add
xor
push
cmp
fwait
out
lret
faddl
cmpsb
add
mov
leave
mov
sbb
in
xor
outsb
popa
jle
adc
mov
xchg
jg
sbb
imul
jno
cmp
xlat
jmp
loopne
mov
imul
hlt
or
push
fs
jnp
add
push
popa
fisubs
cmpsl
adcb
sub
call
inc
dec
mov
cmp
cmpb
sbb
pop
lds
sub
mov
pop
cs
adc
test
pushf
and
push
addr16
inc
das
add
clc
jnp
imul
pop
stc
or
shrb
pop
fdivrl
out
lock
xor
jl
mov
jae
cld
cmp
je
ja
stc
mov
mov
stos
cmp
or
jg
or
fmuls
pop
sbb
outsl
jb
xchg
addr16
inc
cmp
or
push
inc
xlat
mov
push
add
lret
cmp
into
ret
jecxz
or
cmc
in
xchg
pminub
sti
inc
imul
xchg
btr
sbb
mov
mov
stos
scas
jne
pop
xor
or
loop
xor
repnz
xchg
pushf
scas
xchg
mov
in
in
adc
ds
mov
loopne
int3
cld
xchg
fldl2e
sti
jo
cmp
mov
jae
cld
icebp
push
and
arpl
dec
inc
out
adc
cwtl
sbb
mov
xchg
gs
mov
adcl
dec
mov
incb
ret
loop
mov
cmp
push
loope
push
orl
push
jns
outsb
mov
ret
dec
rcrb
push
cmp
movsl
gs
imul
adc
jge
pop
roll
push
rcrb
adc
repz
subl
xchg
imul
cmpsl
loop
adc
and
sub
outsl
leave
test
jnp
dec
aaa
mov
cwtl
pop
mov
and
mov
pusha
imull
sub
icebp
jno
or
sub
mov
insl
push
ss
add
add
ljmp
les
mov
test
ds
xchg
push
bound
mov
insl
or
psubq
icebp
js
jnp
int
in
pop
cmpsl
push
test
adc
mov
loope
int
test
js
mov
inc
mov
std
jge
inc
out
ficompl
jge
repnz
call
dec
out
mov
cld
or
and
dec
cltd
ss
jbe
xchg
jl
and
xchg
sbb
test
pop
adc
cmp
aaa
rcrl
inc
pop
out
inc
jns
adc
daa
push
inc
enter
mov
call
inc
lahf
aad
into
cmp
add
pop
and
cmpsb
mov
pushf
push
out
mov
faddl
pop
push
mov
lahf
jo
stos
mov
lahf
ja
sub
mov
scas
addr16
add
popa
movsb
add
movsl
mov
mov
adc
stos
push
outsl
cmp
xchg
dec
push
sbb
and
loope
and
mov
ja
inc
call
adc
sub
dec
adc
xchg
push
mov
shr
outsl
data16
xor
mov
je
mov
addr16
sbb
and
push
push
cmp
lods
and
add
ret
adc
test
sbb
inc
mov
inc
into
mov
mov
or
cmp
jbe
sbb
aaa
pusha
sub
ret
add
push
mov
cmp
sub
movsb
xor
mov
enter
test
adcb
jecxz
jl
das
adc
inc
xor
cltd
in
psubusb
xchg
and
adcb
add
mov
test
add
adc
bound
scas
mov
mov
test
hlt
pop
mov
shr
loopne
xor
mov
lods
cmp
in
mov
sbb
push
or
repz
ds
mov
jns
lahf
mov
jno
xlat
fimull
push
ja
xchg
mov
xchg
mov
loop
popf
shll
sbb
addl
push
aas
pusha
mov
in
ja
outsl
xor
cmp
dec
in
jg
dec
arpl
out
or
gs
mov
filds
scas
pop
jae
daa
insb
or
fisttpl
add
out
push
sub
xchg
adc
mov
jmp
jge
outsl
cmpsl
or
lds
jecxz
add
sti
bound
or
push
int
lods
jbe
cld
sub
jae
push
add
push
in
xchg
sub
jmp
sub
cmp
scas
cli
adc
mov
das
stc
testb
cltd
add
repz
and
jns
and
jmp
roll
repnz
mov
pop
test
popa
jns
xor
dec
lods
out
dec
inc
fistpl
inc
or
popa
and
push
lea
jns
or
iret
jbe
mov
sub
loop
jg
stc
xchg
sbb
ds
lcall
aas
fisttpll
push
ret
xchg
mov
and
data16
pop
int3
fs
xor
lock
pop
test
xchg
rcrl
scas
pop
add
imul
idivb
mov
aaa
icebp
mov
fdivrl
mov
jbe
pushl
loopne
rclb
mov
pop
xchg
scas
pop
lods
inc
mov
inc
fucomip
dec
adc
sbb
data16
add
stc
jl
add
and
adc
popl
push
and
cld
in
mov
push
popa
leave
sbb
push
pop
ret
bound
jno
xchg
dec
mov
push
lret
lods
test
mov
cld
mov
out
int
xchg
add
addr16
shlb
lcall
loop
push
push
mov
in
sub
mov
in
inc
inc
push
mov
or
movsl
out
sub
loop
lea
mov
mov
sti
sbb
mov
in
mov
sbb
ret
fstpl
push
cld
pop
inc
push
pop
jb
xchg
out
xor
and
inc
loopne
xchg
xchg
jmp
jl
mov
ds
cltd
jo
mov
mov
inc
sbb
int
or
dec
push
xchg
movsl
idivl
cmpsb
fwait
sub
or
xor
jnp
inc
fs
mov
in
and
rol
inc
data16
jmp
hlt
sbb
movsl
mov
aad
mov
mov
fcomip
pop
xchg
in
jle
repz
mov
test
iret
mov
mov
int3
icebp
aad
repz
inc
inc
sbbl
pop
rcr
mov
pushf
add
aad
repz
pushf
mov
mov
sub
hlt
cwtl
call
scas
fisubl
pop
mov
fdivr
outsb
orb
das
jnp
xchg
repnz
add
and
inc
xor
lahf
lret
ret
cltd
xor
je
sbb
mov
push
out
insb
sbb
jp
stos
fistpl
push
add
mov
xlat
sti
or
sahf
lret
mov
pop
pushl
and
sbb
mov
dec
xor
add
xor
dec
insb
xorl
adc
or
popf
in
and
cltd
inc
out
sti
sub
sbb
fdivs
adc
ds
and
gs
ret
outsb
sbb
ljmp
hlt
scas
mov
sub
mov
fisubrs
sub
das
scas
clc
xor
and
or
cmp
int
ret
clc
dec
sub
and
jns
es
loopne
push
lcall
and
mov
mov
insb
cld
mov
jo
sahf
test
les
mov
xchg
rcrb
adc
rcrl
mov
aaa
mov
pop
inc
insb
cmp
push
inc
shlb
inc
fadd
mov
inc
sbb
scas
outsl
push
xor
pop
cs
movsl
out
xor
pushf
bound
push
mov
dec
orb
inc
jg
test
fs
push
xchg
pop
sbb
adc
cli
addr16
es
mov
cmpsl
or
aam
sub
pop
mov
cmp
int3
gs
loope
or
xor
inc
pop
cld
imul
dec
cmp
mov
sub
jae
adc
inc
dec
and
data16
stos
mov
jl
aas
pop
mov
dec
jae
flds
rclb
sbb
clc
and
mov
or
push
cmc
add
or
shl
xchg
dec
es
sub
shrb
mov
or
iret
icebp
test
adc
in
sbb
push
mov
fistpl
aad
es
mov
mov
hlt
adc
cli
cmp
or
jp
flds
loop
sub
imul
dec
xor
fmull
mov
popa
lods
lahf
data16
mov
add
inc
or
in
cmp
mov
inc
and
xchg
or
jns
dec
pop
popf
mov
shlb
xor
or
xchg
out
les
inc
js
adc
or
pop
inc
sbb
and
das
dec
xchg
push
push
icebp
mov
loop
or
xchg
mov
lock
cmp
xor
mov
mov
incl
jo
std
xchg
adc
enter
or
or
mov
and
call
xor
mov
mov
lds
sub
stos
divb
jg
mov
pop
stos
cwtl
repz
xlat
in
sub
adc
fsts
lock
sbb
das
cmpl
aad
das
dec
testl
mov
xchg
pop
push
jno
lahf
pop
outsb
inc
je
push
jmp
aas
xchg
mov
xchg
iret
or
lcall
imull
pop
mov
pop
mov
sub
and
cmp
mov
dec
fcomps
test
je
psubsb
mov
mov
repnz
mov
stos
aam
in
add
adc
insl
mov
or
jge
pop
int3
xchg
sbb
cmpsb
cs
lea
imul
loope
dec
mov
cmp
insb
add
jge
fistl
mov
mov
sub
call
mov
and
lcall
add
in
xor
push
repnz
dec
add
repz
loope
mov
xchg
fldenv
mov
cmc
in
inc
fsub
test
push
mov
inc
sbb
sahf
scas
inc
xchg
xor
sub
jg
lea
and
and
movsl
push
push
ret
pop
pop
movsl
jne
or
jp
mov
inc
out
sbb
pop
ss
pop
out
hlt
push
and
push
pop
pushf
inc
out
cwtl
adcl
push
test
ja
adc
test
bound
das
mov
cmpb
lcall
out
inc
pop
mov
insl
fwait
pop
cmp
sti
push
or
adc
push
loop
pop
sub
sbb
push
imul
call
aad
fcoml
add
loopne
ret
test
sbb
and
ret
pop
out
pop
sbb
sbb
xor
fcmovne
lret
mov
rolb
stos
insb
mov
push
mov
and
jmp
sub
cmp
lds
inc
cmpsl
cwtl
adc
mov
dec
aam
and
push
xorb
stc
subl
pop
jne
aam
dec
adc
add
addr16
xchg
mov
movsl
pushf
cmp
scas
es
cmp
push
adc
imul
pop
xchg
notl
mov
cmp
in
sbb
sarb
cmp
add
lret
shr
sbb
mov
mov
shrl
push
aas
pavgw
xor
push
pop
imul
test
leave
or
stos
mov
pop
jae
jp
rcl
mov
sti
xchg
lods
cmp
out
push
shl
jbe
std
push
cli
mov
loope
nopl
stos
or
cmp
xor
add
shlb
dec
mov
adc
inc
leave
mov
stc
je
adc
mov
mov
movsl
hlt
jbe
sbb
mov
adc
scas
push
test
jecxz
test
mov
in
or
rorb
loopne
roll
pop
popf
fisubrl
mov
mov
jno
mov
daa
js
mov
add
inc
add
scas
lods
push
ret
insb
xor
sbb
jae
xchg
mov
jle
imul
mov
add
adc
mov
push
adc
test
xchg
pushf
lods
add
repnz
cmp
js
rorl
mov
pop
mov
std
rorb
test
cld
dec
repz
mov
inc
scas
mov
je
rcrb
cmp
jnp
jb
sahf
ljmp
clc
mov
cmp
pop
push
adc
jle
or
pusha
test
and
cmp
rcr
outsb
mov
aam
insl
out
outsb
dec
cwtl
push
leave
out
adc
adcl
cmp
arpl
lahf
push
fcoms
xor
mov
in
jmp
or
dec
xor
mov
pusha
movsb
clc
xchg
daa
jns
and
scas
xor
repz
test
adc
xlat
jno
cmp
ds
in
daa
pop
and
pop
inc
sbb
pop
sbb
mov
repnz
insb
lea
mov
enter
jnp
sbb
adc
loope
push
pop
pop
sbb
aad
ja
push
inc
in
push
mov
sarb
fstpl
ja
arpl
std
jg
adc
aaa
addl
xchg
divl
lds
pop
pop
cmp
in
loope
inc
push
icebp
add
adcl
mov
mov
add
in
sbb
notl
push
adc
push
ret
lds
cmc
sbb
push
into
scas
insb
mov
xor
andl
les
push
pop
test
test
js
inc
cmp
or
pop
orl
jo
dec
lret
movsl
add
adc
cmp
cmp
xlat
clc
daa
push
fwait
outsl
push
pop
insl
lock
outsb
mov
out
inc
jbe
pop
dec
sub
mov
inc
dec
pop
mov
jge
pop
push
xor
scas
ja
inc
xor
push
jl
in
inc
jne
dec
mov
jbe
pop
sbb
rorl
dec
js
push
adc
scas
mov
add
xchg
fdiv
scas
pop
fistl
ficompl
jmp
mov
and
lock
sub
out
cli
pop
test
push
lcall
inc
ficomps
and
addb
test
xchg
lcall
inc
and
cmp
dec
outsb
and
cmpsb
jo
andb
in
cli
je
nop
in
cmp
test
sbb
shll
sub
mov
daa
loopne
pop
push
aam
cld
cmpsl
xchg
adc
mov
dec
lods
lret
xchg
lret
dec
arpl
xlat
fisubrl
test
js
jne
insl
add
jns
pop
shlb
cltd
stos
out
mov
push
add
icebp
divl
ss
jne
mov
pop
add
repz
jecxz
or
cmpsb
mov
mov
inc
xchg
inc
and
mov
stos
cld
mov
jp
adc
jmp
dec
jae
cmc
cmp
jp
xchg
dec
aaa
jae
push
mov
cmp
sub
jne
fwait
mov
push
movsb
shlb
bound
fwait
andl
gs
ljmp
cli
jnp
xor
or
shll
addl
cltd
dec
aam
dec
ljmp
adc
xor
das
fcmove
xor
inc
addr16
adc
inc
lea
clc
fcmovu
fmul
fisubs
mov
dec
jg
sti
inc
dec
out
in
aad
xlat
insb
inc
jg
cmpsl
mov
push
aam
bound
gs
push
inc
fists
cwtl
pop
mov
adc
push
sub
pushf
in
pop
cmpsb
sub
inc
inc
mov
fwait
jo
jmp
bound
adc
jns
hlt
and
dec
cmpsb
jp
sbb
push
xchg
mov
lds
adc
mov
dec
cmp
gs
aam
out
cltd
sub
sub
push
arpl
leave
outsb
adc
out
sbb
sub
inc
mov
divb
ret
mov
pop
scas
adc
loop
sbb
mov
adc
inc
xchg
xor
mov
aas
jg
ljmp
mov
inc
jmp
scas
fstps
cmc
daa
cwtl
sbb
subl
pop
fld
repz
add
jno
xchg
lret
add
jne
dec
mov
dec
lahf
cld
test
loop
mov
jecxz
icebp
in
test
outsl
ds
mov
clc
addl
mov
shr
adc
and
ret
and
pop
push
or
sub
rclw
bound
xorb
dec
xor
lcall
and
mov
int3
sub
cmc
mov
push
pop
sub
nop
and
push
xor
dec
push
mov
xor
xchg
out
aaa
in
pop
cmp
stos
sub
inc
pusha
aam
jbe
xor
repnz
lea
cmc
or
ss
xor
mov
rolb
lahf
push
cmpsl
sub
ret
mov
xchg
add
shll
ds
fcoms
add
xchg
fistps
cmp
adc
imul
mov
mov
fs
xlat
inc
inc
bound
dec
xchg
out
subb
push
dec
in
jnp
rolb
mov
movl
ret
xchg
mov
or
cmp
cwtl
dec
mov
adc
inc
jecxz
or
pop
out
rorl
sbb
bound
jbe
test
scas
insl
mov
pop
sbb
or
push
insb
data16
es
mov
loop
add
dec
push
jae
test
je
mov
testb
mov
cli
movsb
divb
and
lahf
stc
es
jnp
scas
jb
mov
daa
cmpsb
fucomi
inc
fmulp
jp
push
mov
dec
es
ljmp
fiadds
mov
mov
xchg
inc
or
mov
lods
mov
filds
mov
pop
mov
mov
mov
and
mov
sahf
hlt
outsl
push
fwait
cltd
xchg
jmp
dec
mov
pushl
push
aas
xchg
sub
pop
addr16
stos
data16
test
lcall
cli
jno
test
mov
xor
testl
aas
inc
sub
movsl
jo
cmp
cld
arpl
repnz
and
inc
or
out
mov
cmp
add
push
fcoml
dec
cmpsl
rclb
outsb
dec
jl
jle
mov
lcall
adc
cmpsl
xchg
hlt
pop
push
mov
pop
and
push
fists
push
je
inc
call
xchg
cmp
push
jb
pop
movsl
fisttpll
and
jns
lods
aad
nop
jae
push
adc
ja
js
in
lahf
je
fstps
cmpb
enter
xor
mov
shll
es
out
adc
adc
adc
pop
loope
pop
ljmp
je
inc
sbb
sbb
xor
inc
out
and
xchg
das
cmp
ret
test
xchg
xor
popa
sub
ja
scas
dec
inc
ret
stos
adc
vmovmskps
icebp
mov
test
pushf
or
mov
sbb
inc
popf
faddl
sbb
inc
jmp
decb
xchg
push
repz
out
cwtl
cld
stc
out
and
int3
inc
jnp
bound
ret
repnz
addr16
cltd
gs
insl
fwait
dec
jbe
lds
xor
cmp
jmp
loop
jg
outsb
test
imulb
cmp
push
mulb
mov
dec
sbb
faddl
add
hlt
mov
pop
xor
mov
xchg
sub
pusha
fdiv
xor
mov
adc
cmp
cmpsl
iret
xchg
mov
xchg
push
or
icebp
bound
or
fstp
daa
test
ss
lods
loop
mov
dec
jmp
push
jg
mov
xor
or
or
idivl
std
les
mov
jb
and
sbb
dec
mov
xchg
in
loope
mov
js
sub
aam
pusha
inc
mov
sbb
dec
test
push
fmull
addl
movsb
push
pop
inc
into
sbb
inc
cmp
inc
sub
pop
imul
mov
rcrb
xchg
aad
mov
cwtl
es
mov
jno
dec
mov
scas
and
dec
sahf
pusha
pop
sbb
xchg
push
mov
mov
int
fidivl
adc
fistl
xchg
dec
ja
inc
and
pop
jl
mov
push
mov
jle
push
push
inc
movsb
lret
fbstp
mov
lock
test
out
lret
test
test
fucomp
push
xlat
int
scas
mov
mov
mov
push
ss
mov
xchg
in
mov
mov
jns
jno
xchg
das
int3
adc
dec
stc
stos
out
push
clc
leave
sahf
xchg
jae
pop
lret
loope
outsl
xchg
mov
mov
pop
jmp
out
add
cmp
js
stc
sbb
fldenv
jmp
push
jl
insl
imul
sbb
lea
dec
jae
jno
aam
add
dec
push
out
xchg
pop
mov
add
das
int
repz
sbb
jb
or
pop
fs
xchg
and
push
and
xchg
popf
stc
adc
push
jbe
mov
pushf
push
call
push
xchg
mov
movsb
sbb
adc
nop
pop
loopne
jg
xor
push
xor
out
adc
sub
pop
sbb
pop
cld
xchg
dec
insl
fst
out
imul
cmp
lods
pop
das
leave
hlt
movl
int
out
xchg
andl
xchg
and
jle
shll
lock
and
xor
adc
out
push
add
cmp
dec
sub
and
or
adc
xchg
ds
fcom
add
xchg
and
loope
adc
out
sbb
pop
inc
dec
leave
jecxz
lods
arpl
xchg
xchg
cli
ret
xchg
push
cmp
fidivrl
loop
mov
mov
std
sbb
sti
add
cli
shrb
xor
mov
mov
inc
mov
mov
aam
daa
test
sub
dec
leave
adc
test
loopne
aad
sti
mov
cli
repnz
push
sub
add
call
shlb
mov
movsb
out
inc
sahf
jg
dec
adc
jbe
cs
push
ret
test
std
xlat
or
dec
enter
sub
xchg
dec
pop
in
fcoml
fidivl
loop
push
adc
jns
sbb
mov
fwait
and
inc
int3
int
inc
out
scas
xor
test
imul
add
jne
sub
mov
mov
xchg
sbb
xchg
xor
jmp
dec
shrl
ljmp
test
xorb
mov
leave
push
jnp
push
and
inc
imul
lsl
sbb
int
mov
mov
repnz
adc
roll
push
sub
push
roll
sub
ljmp
addr16
out
pusha
sub
sahf
mov
fs
fdivp
hlt
ficompl
sub
mov
fsub
in
clc
lahf
and
jmp
and
lahf
cwtl
push
ret
loopne
roll
lahf
insb
aad
mov
scas
dec
lret
lock
or
pusha
in
out
jg
pop
ret
xor
pushf
jge
jae
pop
push
fs
mov
fisubrl
insl
push
cmp
shr
lahf
repnz
fs
scas
repnz
adc
lods
lods
outsl
jg
test
faddl
add
and
pop
sti
jbe
hlt
dec
hlt
dec
dec
out
ret
notb
add
sarl
sub
pop
xor
sbb
outsb
fs
es
iret
cs
fsubrl
mov
cmpsb
jne
jnp
repnz
adc
decl
xor
ss
mov
loope
imul
daa
cmp
pop
lods
insl
and
mov
mov
fs
inc
mov
sub
out
xor
sub
jo
mov
enter
aam
ljmp
jno
in
jecxz
sub
out
psubq
sti
push
popf
nop
adc
xchg
lret
int
dec
imul
or
scas
in
iret
loopne
mov
icebp
jnp
mov
repz
mov
ret
pushw
mov
int
push
push
push
mov
enter
call
push
ljmp
xchg
in
inc
fisubl
stos
sub
js
std
xchg
pusha
rcrb
and
dec
push
fxch
push
lcall
aad
jo
add
inc
cmpsl
sbb
or
test
addr16
into
lcall
mov
es
mov
adc
sar
cltd
mov
sub
clc
sub
mov
das
push
sub
dec
dec
mov
fldl
dec
push
jb
and
ret
mov
in
cmp
rcr
imul
cmpsl
jnp
in
pop
jns
adc
popa
mov
popa
xor
adc
adc
sub
sbb
adcl
sbb
mov
jmp
dec
xchg
cmp
fiadds
fistps
cmp
push
jg
es
jle
repz
sbb
push
rcrl
mov
out
sti
leave
insb
mov
xorb
pusha
push
int
jbe
pop
in
jne
cmp
push
aaa
and
cli
mov
or
mov
cmp
xchg
cmp
stos
loopne
xchg
push
jae
aas
test
xchg
scas
add
dec
mov
movsl
pop
cmc
pop
xchg
mov
dec
cmc
test
pop
iret
sti
test
call
and
les
aas
pop
out
push
and
mov
aas
inc
inc
inc
scas
shrb
das
jmp
scas
cmp
pushf
xor
pop
imull
popf
movsl
imul
jg
lret
orl
inc
or
ja
lret
outsl
mov
mov
or
into
mov
in
out
inc
dec
popa
ja
add
xor
and
jmp
or
or
rcr
call
shll
repnz
xchg
nop
dec
add
outsb
dec
fisttpll
sub
add
sbbl
aaa
dec
add
xchg
fstps
mov
xchg
loop
sbb
inc
mov
inc
or
sti
add
jge
test
enter
and
call
add
sub
ret
test
xor
ss
adc
sub
mov
sbb
mov
sti
out
pop
out
xchg
sbb
xchg
lret
mov
fcom
loopne
xlat
push
jl
out
jne
outsl
into
mov
aas
inc
inc
sbb
sbb
jmp
add
lret
rcll
idiv
aas
inc
jne
loop
sub
adcl
cmpsl
in
in
andb
aad
jne
jno
dec
imul
pxor
pop
mov
and
mov
movsb
cltd
push
in
fstpt
fdivrl
cmp
sarl
arpl
inc
mov
popa
aaa
loope
adc
pop
lahf
jns
cmp
xchg
xor
mov
adc
stc
xor
clc
adc
mov
scas
inc
xchg
and
mov
sbb
sahf
adcb
push
popf
shrl
push
cwtl
into
xchg
ror
adc
test
es
add
ss
xchg
dec
push
sbb
cs
and
lahf
sub
or
ljmp
out
mov
out
sahf
mov
imul
sub
mov
mov
rorl
mov
pop
sbb
out
add
or
cmp
mov
lahf
and
cltd
and
lahf
test
loope
repz
scas
inc
inc
clc
sahf
mov
xchg
addr16
inc
mov
gs
scas
insl
xchg
dec
iret
cmp
push
xor
test
out
jb
fisubrl
lock
mov
lods
xor
sbbl
cmp
mov
inc
add
mov
cs
pop
les
imul
push
jbe
ret
xchg
push
push
lods
iret
aaa
and
adc
or
mov
cmp
pop
xchg
aam
or
movl
xor
push
add
push
push
sub
dec
insl
xchg
incb
stc
fisttps
sbb
jmp
inc
mov
xchg
sbb
into
pop
orl
lret
std
mov
negl
roll
mov
xor
testl
xor
or
mov
pushf
pop
sbb
adc
and
xchg
xchg
in
shll
pop
out
icebp
shlb
inc
jb
rcrl
xchg
imulb
jecxz
pop
repnz
in
pop
loop
jne
sbb
mov
add
mov
adc
int
push
cmp
mov
sub
xchg
cmp
push
mov
repz
push
sarl
movsb
scas
shr
push
inc
jo
pushf
pop
and
sbb
rorb
sti
pop
int
dec
pop
cmp
cmpsl
dec
adc
lret
xor
bound
in
dec
ret
pusha
mov
pop
test
fadd
sbb
movsl
stos
mov
lods
xchg
jbe
aaa
mov
arpl
pop
sarl
lea
adc
add
daa
shlb
popa
push
add
sarl
xchg
or
js
jne
fnstcw
ffreep
push
dec
jnp
outsl
fwait
lea
pushf
aaa
sub
xchg
in
and
dec
inc
cmp
into
rclw
rorl
stos
mov
bound
or
jns
shl
sub
sub
mov
sti
push
fcoml
sub
jbe
mov
sbb
mov
lahf
ja
mov
push
or
add
fcoml
add
push
je
loop
xchg
or
loope
push
nop
push
ret
and
mov
stc
jg
pop
lret
mov
outsl
ret
inc
jp
pop
inc
repnz
sub
sarl
lods
jg
popa
cmp
sarl
outsl
loope
inc
shl
jle
adc
jne
inc
bound
repnz
pusha
cmpsb
mov
sub
sub
ljmp
rol
dec
lcall
ss
mov
inc
je
push
stc
sub
out
loopne
or
mov
or
xorb
sbb
lret
pop
lret
out
push
inc
sbb
dec
mov
mov
insl
lds
add
daa
daa
stc
inc
adc
movsb
scas
ja
cltd
xchg
out
cmp
test
insb
ss
mov
cwtl
xchg
mov
jne
fadd
js
xchg
jle
xlat
test
mov
call
popf
clc
aam
leave
jnp
sbb
adc
lds
call
or
mov
cmp
enter
mov
imul
jo
xor
cmpsl
mov
mov
dec
jae
ret
rcl
js
dec
jb
add
mov
loope
cltd
or
sbb
leave
push
test
sub
xchg
loope
pop
mov
sub
push
lahf
lret
icebp
leave
and
scas
in
dec
das
xor
rep
sbb
jnp
loop
sahf
jg
aam
ret
bound
dec
movsl
cmpsl
lock
insl
pushf
mov
jb
fwait
int3
cmpsb
cmp
mov
addr16
and
cmpsb
leave
mov
cmp
jne
fs
dec
aam
add
fs
gs
inc
dec
stc
adc
lods
flds
xor
pop
xor
roll
mov
test
mov
imul
add
sub
je
sbb
popa
mov
movsl
ss
or
pop
js
sti
xchg
jmp
xor
xor
jo
shr
push
js
mov
aas
clc
fnstcw
push
mov
nopl
fdivr
shrb
xor
dec
sub
push
iret
scas
addb
mov
inc
dec
insb
andb
lock
arpl
xor
gs
testb
xchg
sub
mov
fcomp
inc
jae
test
jmp
scas
insb
or
push
movsl
inc
in
jbe
gs
es
jbe
jbe
decl
out
mov
xor
jbe
fcmovnu
das
xlat
adc
mov
sahf
cmpsl
adc
lcall
lahf
push
adc
int
incl
cmpsb
jmp
cmc
sub
push
out
out
lcall
adcb
jae
ss
xlat
add
es
xchg
pop
adc
and
jl
loope
dec
add
jp
je
mov
jo
adc
les
add
movsl
mov
cmp
lret
ss
fsub
test
mov
out
or
sub
push
lret
pop
loop
sahf
out
mov
das
add
es
loop
in
jno
jb
adc
fstp
loope
sbb
inc
dec
in
pop
jmp
xor
je
lret
push
lods
int
dec
cmc
add
out
or
int3
popa
nop
aas
outsb
jno
inc
mov
lods
push
popa
cmpb
pop
sub
sti
mov
adc
sbb
call
adc
or
into
xchg
call
fimuls
fdivr
ja
pop
or
jns
or
mov
mov
lcall
rorl
std
pop
mov
imul
mov
outsl
loopne
xchg
stos
insl
xchg
push
fistl
loop
push
pop
jbe
cmpsl
out
sbb
ret
imul
mov
push
xchg
mov
aaa
cmp
cmp
add
iret
pop
and
mov
std
mov
insl
and
jae
daa
dec
jb
mov
jg
cmp
hlt
fsubrp
push
scas
xchg
xchg
jbe
ljmp
mov
cltd
bound
mov
add
xor
jg
inc
dec
add
lret
test
jg
leave
adc
cltd
pop
mov
mov
std
inc
dec
aam
ret
jnp
mov
fidivrl
js
stos
mov
lds
roll
add
lret
fisubrl
inc
dec
mov
mov
loop
outsl
adc
int
je
mov
push
fstpl
in
and
mov
scas
mov
pushf
adc
cld
jmp
jo
adc
aaa
xor
mov
cmpb
inc
bound
push
dec
aam
dec
out
cmpsb
jo
ds
mov
ds
stos
test
je
std
imul
xor
push
push
jl
xor
xchg
jno
dec
and
lds
je
fs
add
es
leave
sbb
jae
repnz
cwtl
rorb
lahf
push
push
sbb
clc
in
ljmp
mov
add
mov
cmp
addb
push
xor
shlb
sub
mov
inc
adc
pushf
adc
push
imul
lods
dec
mov
popf
aam
mov
shrb
adc
adc
enter
cmp
fiaddl
or
testb
mov
int
ret
daa
lock
mov
lgs
pop
pop
push
jge
add
cmp
inc
sub
xchg
in
stos
sbbl
lds
and
jb
lcall
cmp
fisubs
mov
sbb
iret
push
xor
inc
repz
notb
cmp
arpl
inc
jge
pop
adc
xor
mov
adc
cwtl
es
sbb
fisttps
adc
cmp
negl
sbb
push
sbb
add
inc
mov
and
scas
pop
jle
and
loope
adc
inc
xchg
popa
stos
negl
or
int
mov
push
ss
outsb
testl
xor
mov
cld
add
gs
xchg
aas
loop
ljmp
mov
inc
loopne
or
mov
jne
xor
mov
jmp
subb
push
inc
pusha
adc
inc
cli
outsb
mov
cmp
or
arpl
jno
pop
pop
negl
jne
dec
pop
fs
mov
or
js
test
subl
or
adc
cwtl
mov
out
mov
push
aam
xchg
xor
filds
push
jno
xchg
mov
sti
test
push
xchg
inc
adc
in
fstpl
es
test
fisttpll
mov
cltd
fcompl
lea
pushf
bound
inc
imul
icebp
leave
addr16
incb
out
orb
movsl
push
stos
sbb
mov
add
mov
sarb
pop
les
in
sti
inc
lret
test
pop
daa
outsb
add
pop
cmp
mov
mov
push
movsl
push
inc
lret
sbb
cmp
shlb
rorl
push
shll
fisttpll
cmpsb
pop
hlt
inc
sbb
cmp
xor
scas
jns
dec
adc
mov
cmc
sub
in
jmp
and
jmp
inc
pop
jae
aaa
jne
imul
inc
ljmp
lcall
push
pop
repnz
cmpsl
and
adc
orl
or
cli
fldcw
jbe
xor
add
sub
dec
sub
sub
lods
push
jbe
rclb
sbb
orl
shlb
fsubrl
xchg
out
mull
repz
roll
imul
mov
or
xchg
jg
stos
xor
adc
leave
inc
movsb
sar
jbe
adc
nop
inc
scas
push
mov
in
out
inc
test
pop
addl
loop
fs
sub
in
mov
mov
lods
in
fs
ret
xor
pop
roll
stc
mov
aam
xor
test
mov
inc
xchg
sub
test
inc
jne
test
insb
mov
push
std
mov
sbb
inc
ret
rcll
popf
or
add
ja
in
dec
dec
xchg
xchg
repnz
or
sub
add
or
insb
mov
push
rcll
mov
cmpsb
push
insl
stos
mov
cmp
aaa
fidivs
inc
pop
sbb
cmp
mov
xor
cli
mov
stos
adc
clc
jns
push
aas
add
add
out
js
cmp
jns
xor
mov
xchg
leave
fiaddl
and
shll
fstpl
sbb
iret
cmp
call
popf
hlt
stc
rorl
xlat
mov
xchg
and
xchg
cld
out
aas
repnz
fcoms
sbb
adc
xchg
adcl
jb
xchg
mull
pop
sbb
mov
repz
popf
add
ljmp
ss
adc
js
jle
sub
or
xlat
cmp
sbb
adc
or
stos
pop
jp
adc
fdivrp
mov
roll
push
sub
jle
xchg
divps
mov
pop
nop
adc
mov
lret
pop
fs
dec
scas
push
arpl
push
and
bound
adc
movsb
fwait
fstps
movsl
xchg
fildl
aam
divl
cmp
mov
pop
pop
daa
inc
mov
xor
arpl
ret
cmp
enter
sbb
sub
repz
mov
add
lods
je
add
ds
mov
xor
sbb
fidivl
or
and
push
jl
sub
in
jg
dec
pop
shrb
dec
stos
out
in
incl
dec
pop
popf
rcll
pop
cmp
or
mov
cmc
push
orl
loop
xor
ret
movb
mov
mov
sti
repz
mov
cli
ret
stos
fisubs
push
sti
mov
or
addr16
test
sub
jl
sbb
fnsave
adc
adc
push
or
jae
cmp
lds
dec
pop
sub
pop
adc
pop
aaa
and
dec
adc
inc
push
pop
xor
mov
hlt
in
and
outsl
fcoml
mov
mov
xor
addr16
xor
or
mov
mov
aad
sub
test
test
dec
imul
inc
push
outsb
cs
lock
fwait
xchg
adc
loopne
loopne
mov
inc
mov
lcall
xchg
outsb
add
test
fnsave
lock
adc
vmovhps
mov
pop
loope
cwtl
fdivrs
xor
sub
fsubs
in
jecxz
fs
mov
add
mov
pop
adcl
stos
notl
sarb
lods
clc
and
movsb
rcl
jle
fs
ret
jp
sub
cmp
mov
pop
mov
sbb
pop
test
fsubrs
cwtl
cmp
sub
lret
jle
mov
rclb
cmp
bound
jnp
push
adc
push
adc
outsb
pushf
jge
aas
jb
xor
xchg
aas
nop
cs
mov
jmp
push
notl
xchg
out
or
std
aam
mov
mov
call
sub
add
cmpsb
jno
fildll
shll
mov
mov
or
cli
stos
mov
adc
add
aam
cmp
xchg
sbb
cmp
jnp
outsl
mov
je
daa
lahf
xor
sub
inc
popa
clc
imul
jb
add
pop
ret
inc
loopne
add
cmp
jne
lods
iret
mov
add
xor
inc
mov
dec
imul
xlat
mov
adc
call
xor
xor
xchg
pcmpgtd
adc
push
push
movsl
inc
push
jl
leave
sahf
sbb
adcl
cmp
mov
jle
push
xchg
cli
dec
test
sbb
mov
xchg
lret
cmp
pop
pop
insl
cmp
fstps
int3
xor
push
imul
mov
fsubl
ja
jle
push
pop
in
imul
call
sub
cld
pop
xor
lcall
fsubrl
cmp
pop
lcall
into
jb
inc
lock
dec
sbb
outsb
les
mov
adc
jle
fdivrl
pop
and
mov
sub
xorl
out
dec
leave
inc
gs
xor
in
pop
leave
sbb
lods
or
cmpsb
xlat
sub
or
mov
inc
sub
add
nop
pop
ret
and
xchg
lahf
leave
sarl
mov
div
test
jg
out
jbe
cmc
repnz
pop
test
push
push
sbb
inc
je
outsb
or
lcall
imul
test
mov
out
jbe
out
jg
xchg
mov
into
mov
out
add
mov
dec
imul
xchg
mov
and
push
xchg
and
out
adc
test
adc
mov
pop
inc
sub
insl
mov
icebp
mov
mov
lcall
jo
and
dec
mov
mov
sbb
xor
inc
push
in
jno
test
movsb
or
cmp
add
popa
xchg
xchg
dec
leave
dec
out
leave
mov
mov
or
std
or
int
mov
fcomps
sysenter
cmc
mov
and
inc
add
jecxz
sbb
int3
adc
inc
and
pop
sbb
pop
mov
mov
mov
or
xchg
movsb
cmpsb
xchg
adc
int
or
push
ret
pop
or
xor
sub
pop
jge
sti
inc
xchg
mov
mov
imul
lcall
aad
push
dec
bound
jg
dec
mov
cltd
int3
ds
push
or
jg
sub
jle
cmp
icebp
mov
rcrl
rolb
mov
cltd
in
and
xor
frstor
addl
inc
xchg
test
xchg
xchg
lods
cld
inc
js
jno
push
push
jmp
push
inc
lds
loopne
int3
outsl
insl
aad
repnz
ss
imul
rclb
push
adc
lea
xor
sub
xor
inc
outsl
push
clc
sarb
lea
mov
dec
pop
popf
mov
xor
xor
dec
cwtl
fldl2e
mov
dec
jb
pushl
inc
rol
in
pop
dec
loope
sbb
popf
pop
cld
dec
sub
push
mov
mov
ss
add
andb
leave
push
int3
sbb
adc
xchg
push
clc
jl
and
or
jmp
push
call
nop
aas
push
test
mov
xchg
jo
inc
imul
mov
aad
xchg
cwtl
test
int3
inc
and
enterw
jecxz
or
hlt
jp
out
in
sub
mov
ret
or
es
les
xor
lods
sti
test
ror
xchg
test
lds
test
test
int
xor
cmpsb
mov
mov
xor
mov
imul
or
push
cli
mov
mov
and
add
stc
mov
sub
ret
jle
add
lahf
mov
jno
dec
mov
in
ret
xchg
into
push
adc
mov
mov
outsb
pop
cmp
and
stos
loop
or
cmp
daa
jg
loopne
ljmp
dec
mov
or
adc
data16
mov
aaa
adc
and
into
dec
jp
push
xchg
lods
push
js
jnp
fpatan
inc
inc
fldenv
shlb
imul
jno
and
add
loopne
sbb
mov
sarl
lcall
adc
popf
mov
sub
sub
adc
and
adc
fadds
mov
sbb
mov
adc
pop
ror
mov
lcall
dec
rcrb
lods
aas
jbe
xchg
inc
jmp
aad
pop
and
and
mov
lret
add
jl
fsubl
sbb
lret
pop
pushf
mov
jp
outsb
mov
movl
push
mov
int
sbb
out
sub
xor
insb
cmp
mov
push
dec
cmpsb
roll
mov
cmp
ret
push
pop
aam
addb
in
enter
jp
mov
lret
jg
inc
sub
sub
test
stos
jbe
ret
push
adc
lret
mov
lahf
dec
push
dec
pop
pop
push
xchg
jmp
cmp
sbb
out
loope
fidivl
dec
pop
aas
out
fstps
std
xchg
dec
fsubr
popf
xlat
mov
aam
movsl
xlat
lret
leave
sti
ljmp
pop
xchg
into
shrd
sub
jae
jae
scas
imul
sbb
les
je
rorb
in
imul
dec
xlat
adc
xor
enter
mov
xchg
xchg
insb
jl
ja
movsb
dec
imul
xchg
xor
xor
cmpsl
adc
test
pop
or
movsl
mov
stos
and
xchg
xor
and
jne
test
add
jmp
jae
rcrb
mov
mov
adc
call
add
push
push
cld
jno
add
out
inc
das
loop
inc
mov
test
dec
sub
cs
pushf
in
lret
xor
mov
pop
push
hlt
adc
movsl
sub
or
add
adc
icebp
imul
out
out
cmpl
pop
aam
xchg
pop
fstl
adc
push
sub
sub
loopne
push
insl
in
lea
xor
sbb
imul
jbe
mov
fs
inc
nop
enter
es
ss
aad
mov
in
push
call
daa
add
jno
mov
shll
sahf
nop
jecxz
icebp
insl
jnp
in
nop
push
xchg
aas
push
sahf
sbb
add
cmpsb
das
lock
inc
lcall
sbb
fxch
cltd
sti
or
insl
movsl
ret
pop
imul
test
repz
jbe
mov
dec
negl
xor
stos
fwait
xchg
aad
popa
nop
js
loope
imul
mov
cs
mov
mov
lret
lods
rclb
bound
jb
push
in
ss
sbb
adc
stos
in
lock
cld
xor
gs
pop
iret
sti
cltd
dec
mov
jno
sub
bound
into
arpl
arpl
movsb
xor
fadd
push
jns
jae
fsts
pusha
dec
scas
and
aam
sub
mov
sbb
pop
mov
and
adc
test
sti
and
xchg
pop
sbb
daa
xchg
xchg
movl
out
cmpsb
cmp
dec
xchg
xor
mov
adc
mov
nop
mov
mov
leave
int3
bound
jmp
add
popa
stc
lret
jns
pop
dec
pop
test
inc
fcmovu
addr16
push
add
adc
pop
dec
or
xchg
or
xor
inc
inc
dec
movsl
and
add
hlt
jl
cmp
xlat
dec
int3
ja
xchg
add
arpl
push
add
lods
push
insb
aad
adc
leave
shr
cmpsl
mov
mov
dec
int
sub
test
pop
lret
das
or
lahf
das
xchg
sub
insb
lods
inc
into
lahf
fisttpll
fs
arpl
mov
mov
in
xchg
mov
repz
pushf
mov
lret
add
xchg
data16
push
cmp
repz
lret
loopne
mov
enter
dec
std
inc
sub
imul
sub
ds
mov
aad
jmp
jae
fidivs
cwtl
rclb
test
pop
mov
mov
js
lock
jnp
and
das
popf
cmp
lds
cmp
cli
or
rcrb
pop
les
lock
loopne
fistl
das
lret
dec
jbe
int3
outsl
out
inc
push
cs
outsb
mov
js
outsl
gs
push
sbb
sbb
inc
sub
ljmp
aaa
jl
je
outsl
and
ss
jb
aas
or
js
inc
push
stc
fdivrs
in
sbb
add
mov
fwait
jb
xor
or
repz
jp
stc
dec
push
int
pop
pop
pop
loopne
jne
push
mov
notl
push
mov
mov
fcmovnb
idiv
dec
sbbb
inc
fmull
loop
ret
jb
mov
xchg
outsb
mov
sbb
jnp
pop
imulb
pusha
insb
pop
cmp
sbb
push
push
sbb
sar
popf
pop
repnz
js,pn
jge
test
cltd
or
mov
adc
cmpsb
and
lret
nop
aaa
lahf
lods
ja
mov
repnz
out
push
std
or
orl
adc
int3
ljmp
outsb
in
les
popa
sbb
aam
fwait
sbb
push
push
push
and
shr
jb
mov
mov
enter
pop
movsb
mov
std
pop
repz
mul
xchg
or
clc
mov
fidivs
stos
cmp
outsl
das
shrb
lock
pop
in
cmc
fscale
mov
ret
cmp
adc
adc
out
stos
mov
ja
je
inc
pushl
pop
out
xor
clc
mov
scas
or
in
popl
dec
out
insb
stc
xchg
roll
fnstcw
jmp
sbb
push
mov
ss
cmp
jl
dec
sti
sub
fdivl
rcrb
out
inc
out
aam
add
es
cmp
xor
xchg
sti
and
mov
mov
fistpl
jl
jle
cmpsl
sahf
mov
sub
and
mov
jo
sahf
pop
mov
addr16
sbb
ret
fdivrs
jb
les
fsincos
lds
mov
hlt
mov
lock
sahf
adc
mov
push
sbb
sub
outsb
jnp
insl
pop
aad
push
outsl
inc
shll
and
pop
mov
jle
cmpsb
into
ljmp
and
cmpsl
aaa
dec
jbe
dec
lods
inc
jge
jo
mov
lret
dec
jne
mov
xor
or
into
out
lds
test
xor
es
mov
sbb
mov
dec
cwtl
sub
inc
mov
cmp
push
mov
push
jne
lret
dec
or
insl
dec
pop
jp
divl
jns
leave
dec
repz
mov
inc
imul
out
jecxz
jbe
pusha
das
dec
cwtl
and
fldenv
cmp
scas
stos
pop
cli
xchg
dec
jg
sbbl
ret
lret
into
js
test
imul
ljmp
aad
pushf
in
stos
jecxz
push
pop
cld
mov
mov
insb
pop
mov
lock
nop
mov
jge
in
sbbl
push
sub
push
nop
insl
xor
iret
xor
xchg
sub
lcall
jge
jecxz
scas
gs
xor
add
repz
cli
lock
inc
adc
adc
orb
mulb
outsb
iret
pushf
cmpsb
inc
cli
cmp
jp
adc
stos
fdivs
stos
js
sub
je
pop
add
lods
pop
out
pop
imul
or
push
daa
gs
push
sahf
dec
push
cltd
pop
sbb
lcall
sarl
cmpsl
jp
les
jge
dec
vpshuflw
or
icebp
lahf
or
mov
clc
jle
inc
adc
clc
push
pop
std
decl
rolb
and
mov
push
mov
enter
push
hlt
push
add
daa
push
jecxz
in
pushf
test
cmp
cmp
inc
lods
xor
repnz
jg
mov
mov
xor
cmp
and
sub
movsb
jg
pop
test
adc
jge
out
mov
daa
pop
in
ficoml
or
xor
pop
in
mov
fists
es
jo
or
shlb
inc
and
and
mov
adc
and
push
inc
mov
frstor
fistpll
dec
popf
insb
fiadds
sub
dec
insb
mov
cmpsb
std
loop
pop
lock
jmp
nop
adc
inc
fisttpll
int3
insb
inc
shrl
out
inc
mov
push
jb
push
cmc
sub
idiv
shr
mov
mov
cmp
jle
xor
sub
aas
int
das
mov
pop
mov
pop
xchg
fnstsw
jmp
sub
jmp
sahf
pop
loope
xor
xchg
arpl
repz
scas
xchg
push
inc
ja
and
fwait
sub
inc
sbb
fnsave
lods
rep
pop
ss
out
jl
add
dec
lret
pop
or
xorl
es
sbbl
or
push
inc
int
gs
testl
xchg
insb
stc
std
notl
fistpll
icebp
push
pop
leave
out
inc
xorl
ret
pop
outsb
push
mov
add
shll
mov
mov
sbb
xchg
or
cmpsb
add
mov
shl
in
push
xlat
hlt
rorl
iret
cld
mov
insb
cld
inc
mov
mov
pop
xor
push
imul
push
sub
adc
out
addl
into
lret
adc
or
sahf
or
subl
decb
xor
xchg
push
mov
imul
leave
daa
lahf
mov
addr16
or
xchg
mov
sbbl
shlb
je
inc
movsb
jmp
mov
dec
test
imul
je
pop
sub
fcomps
lret
insb
lcall
inc
movsl
sub
mov
add
or
mov
adcb
shrl
jecxz
int3
mov
das
push
cmp
into
inc
dec
int3
and
pop
jno
push
ret
jecxz
inc
imulb
sbb
jle
aad
popa
das
inc
lcall
adc
lock
popf
out
xchg
sub
pop
stc
sbb
fistl
dec
add
flds
in
cmp
jo
sbb
rorb
lret
insl
cltd
fnstenv
scas
in
lods
sbb
addr16
adc
jns
icebp
xor
adc
insl
stos
sbb
cmp
mov
fisubl
out
ret
in
or
test
mov
push
add
cld
nop
sub
enter
cltd
lret
cli
pop
int
pop
iret
add
jnp
inc
jae
hlt
aas
mov
xor
aam
hlt
lcall
fimuls
shl
movsl
enter
cmp
mov
dec
and
ficoml
cld
jp
adc
push
data16
inc
mov
hlt
pop
add
push
fsubrl
nopl
cmp
ljmp
out
ret
outsl
inc
cmp
fwait
push
sub
aas
inc
out
int
xor
repz
push
mov
std
je
xchg
push
jmp
fdivrl
popf
mov
adc
sarl
mov
push
jne
xor
and
in
stc
sbb
cmp
xchg
or
roll
adc
rorb
pop
fs
and
push
popa
lahf
lret
xchg
cltd
and
lock
or
and
lea
mov
xor
outsb
push
js
stos
pop
and
es
xor
xchg
mov
mov
mov
inc
outsl
cmp
pop
cmp
into
or
jbe
lahf
iret
mov
movsl
push
lahf
pop
mov
jmp
ja
xor
hlt
nop
lret
iret
jo
sbb
xor
push
push
push
xor
icebp
cmpsb
nop
pop
adc
jle
inc
fcmovnu
and
and
daa
push
hlt
pop
sahf
add
jmp
inc
loopne
mov
iret
xchg
ja
test
mov
outsb
push
mov
rcrb
dec
daa
pop
push
xlat
movsl
cmp
int
jno
pop
cwtl
test
pop
mov
jle
jl
sbb
stos
sub
data16
aam
xchg
call
xchg
jb
into
sub
test
lods
jle
test
pop
insl
and
cmp
fnstenv
and
andl
sbbb
push
jnp
jle
loopne
cmc
add
and
xor
adcb
jno
in
data16
shrb
sub
mov
mull
bound
ret
outsl
out
jbe
ret
movsl
inc
ror
sub
gs
push
arpl
gs
fiadds
adc
sbb
adc
and
pop
fdivrs
rolb
adc
aaa
pop
mov
iret
movsb
in
pop
repz
push
int3
lahf
mov
inc
mov
outsl
or
pop
push
jae
cltd
test
jg
fwait
int
data16
fnstcw
xor
loop
enter
lods
xor
jnp
push
jno
lret
incb
ljmp
mov
cmpsb
mov
cmp
fcmove
rclb
sub
sahf
gs
rcll
mov
outsl
pop
jnp
and
dec
xor
xchg
in
mov
jle
adc
repz
bound
pop
add
notb
rorl
lret
adc
inc
dec
iret
rolb
inc
js
ljmp
lods
into
sub
notl
sbb
and
pop
mov
mov
dec
lds
add
icebp
jb
xor
outsb
jp
lods
in
leave
arpl
aaa
or
mov
pop
leave
push
ficomps
gs
loop
popa
mov
insb
pop
scas
dec
popf
xor
jp
add
sub
cmp
pop
jle
cmp
jl
cmc
add
int3
insl
or
ja
adc
jno
jp
mov
popf
nop
mov
push
lods
mov
cmp
or
push
inc
mov
push
pop
test
inc
mov
jmp
mov
or
test
sbb
or
sbb
and
icebp
pop
imul
sbb
inc
and
mov
mov
lea
mov
lods
inc
push
adc
sbb
mov
fwait
mov
xchg
add
mov
xchg
push
xor
lcall
mov
sub
adcl
es
outsb
pushf
cmp
push
or
mov
cltd
lret
xchg
and
rolb
outsl
pop
mov
out
popa
xlat
in
or
fldenv
lea
mov
imul
dec
aaa
mov
jg
subl
daa
sub
orb
daa
sub
jb
push
notl
insl
xchg
adc
sub
pmuludq
sahf
mov
aad
sub
pop
push
stos
rorl
xor
call
inc
sub
cli
push
popf
inc
dec
push
fs
insb
in
scas
int
or
inc
lret
lea
sbb
mov
cmp
cld
adc
cli
inc
paddsw
movsb
lock
xchg
jbe
insl
call
movsl
fistpll
shll
out
xchg
sarl
es
cmp
mov
sub
fwait
in
mov
push
stc
mov
movsl
add
out
fstpl
nop
mov
shrl
insb
dec
pop
and
jmp
std
sub
push
jmp
clc
sarb
clc
mov
push
jg
and
mov
rorl
js
int3
iret
push
mov
test
repnz
inc
sub
lds
sarb
sub
sub
xchg
mov
outsb
push
and
sbb
adc
mov
push
jbe
xchg
ret
jp
shrb
push
xor
testl
fcoml
mov
mov
mov
add
adc
insl
mov
adc
adc
mov
dec
mov
push
outsb
scas
adc
and
mov
insl
xor
jg
fs
fidivrs
jl
sarb
sub
mov
push
cld
and
pop
inc
pusha
and
in
test
inc
lock
enter
sarb
jge
sub
nop
pop
sbb
nop
sub
fsub
cltd
insb
lret
sbb
or
cmp
jno
popf
mov
dec
xor
lods
shll
pop
pop
jge
test
in
cs
pop
xchg
xchg
push
ret
push
or
dec
mov
fwait
aad
fistps
popf
leave
jns
jl
ret
es
mov
roll
mov
lods
push
adc
cmp
aaa
sub
sub
shl
cmp
fs
add
mov
cmp
and
sbb
mov
mov
dec
mov
roll
pop
stos
fistps
cmpsb
sub
xor
pop
mov
xchg
sbb
mov
mov
lret
test
jae
push
mov
aas
rorl
pop
inc
repnz
push
push
leave
popa
mov
movsl
stos
idiv
xchg
mov
mov
stos
pop
fisttpl
flds
cmp
sub
ret
xchg
mov
and
jae
mov
mov
jge
sarb
sub
mov
decl
jl
daa
or
aas
leave
jmp
test
sub
jge
cmp
mov
jl
mov
movsb
stc
sub
lods
pop
hlt
out
dec
sbb
mov
jae
ret
sbb
sub
add
rolb
sbb
push
xchg
fcomip
jne
mov
jmp
mov
jge
sbb
pop
std
inc
jae
mov
xor
sbb
jp
xchg
ficoml
pop
add
jb
mov
jne
ficoms
jae
adc
adc
popf
imul
imul
adc
repnz
cmpsl
test
sbb
and
in
loop
mov
add
daa
mov
rolb
mov
xor
push
sbb
lret
into
sbb
popa
mov
rorl
rcrb
rcrl
data16
test
cmp
jp
pop
pop
inc
add
insb
int3
daa
loope
pop
push
mov
ss
leave
and
fisttps
pop
sahf
xchg
sbb
gs
and
addr16
jne
push
pop
scas
aas
jnp
or
into
mov
inc
outsb
and
cmp
push
mov
mov
or
imulb
dec
mov
mov
lahf
cmp
xchg
lcall
mov
or
insb
cmp
sbb
stc
dec
push
bound
jnp
cli
testb
fdivl
fcmovnbe
addl
std
inc
sti
and
sarl
cltd
sbb
mov
into
loop
leave
adcb
testb
sbb
dec
arpl
xchg
test
rorb
insl
int
movsb
in
dec
repnz
mov
cmovp
xchg
imul
int
pop
pop
int
pop
lahf
cmp
dec
outsb
test
xchg
inc
lret
repnz
push
insb
sub
push
aad
pop
pop
mov
lds
pop
dec
pop
xor
mov
gs
sub
sub
mov
int
bound
push
or
pusha
cli
push
add
das
lods
ja
in
push
fcmovne
popa
mov
mov
and
lds
insb
jle
divl
inc
and
cmp
rol
xor
ljmp
mov
rcr
ds
pop
push
push
iret
pop
cli
cmp
in
les
mov
xor
jae
insb
mov
cmc
pop
mov
pop
daa
mov
cmp
mov
push
add
pop
sti
mov
aad
cmc
aad
cmp
stos
adc
adc
out
push
or
push
fcos
push
jg
adc
ja
cmpxchg
std
js
cld
je
leave
lcall
out
enter
jecxz
dec
add
fldt
out
imul
and
sub
and
sbb
and
loop
jbe
cmp
cltd
int
push
insb
ljmp
ret
into
jbe
cs
insl
cmp
pop
pop
fmuls
mov
and
aas
insb
jnp
repz
push
inc
jne
je
mov
and
lds
in
and
xchg
pop
xchg
cmpb
dec
mov
cmc
dec
inc
xchg
add
loop
xor
repz
pop
in
jl
into
adc
jecxz
xchg
or
sub
jno
jb
mov
mov
push
sbb
push
push
adcl
aam
adc
sahf
decl
cmpl
popf
jbe
inc
jo
sub
xchg
or
xlat
ss
cmp
mov
add
in
mov
scas
sbb
iret
xor
call
fldl
mov
sar
test
inc
mov
pop
loop
mov
jg
push
cmp
add
aad
cmp
lea
ret
lret
aam
xchg
in
pop
cmp
je
jg
add
dec
cli
xorl
jae
mov
pop
and
in
pop
jnp
pop
out
mov
fstp
sbb
push
lock
lock
mov
add
mov
ret
push
add
stc
mov
clc
sub
inc
ja
xor
stos
inc
dec
cmp
lea
jmp
repz
xor
jmp
cmp
inc
lret
xchg
leave
cld
xor
cmp
cmp
pop
adc
cld
cmp
cli
out
fdivr
mov
enter
mov
das
cwtl
lods
test
ret
aad
add
aad
jp
sub
imul
fucomp
mov
int3
mov
jp
fnstsw
push
repnz
dec
xlat
push
fld
cltd
daa
pop
andl
fstps
sbb
pop
stc
xorb
fldt
lods
stc
lods
test
mov
sbb
xchg
sub
js
fidivrl
or
iret
mov
jae
xchg
das
jl
xchg
in
sub
enter
cvtdq2ps
fcomi
xor
inc
outsl
aad
xor
movsl
xchg
andl
sbb
ljmp
sub
lret
iret
add
push
inc
xchg
idivb
fsubrp
add
mov
loopne
or
popf
xor
inc
js
je
and
not
xchg
std
inc
ror
adc
movsb
pop
loop
sub
jbe
push
push
popa
lods
mov
stos
pushf
test
ja
orl
movsl
mov
fists
xchg
and
jnp
xchg
xlat
fdivs
pop
jp
xchg
negl
repz
jno
and
std
pop
mov
jns
mov
cmpsl
stc
dec
repnz
jb
push
fildl
inc
lds
repz
mov
jge
mov
xchg
mov
inc
loopne
adc
push
jno
mov
xchg
lahf
mov
inc
insb
pop
pusha
test
push
sbb
dec
fistl
adc
insb
clc
pusha
xor
jnp
adc
enter
movsb
outsb
cmp
sub
movsb
jge
call
mov
aam
fs
mov
jle
xor
mov
andb
test
push
and
negl
xchg
stos
jl
pop
stos
in
cmpsb
push
mov
or
cmpsb
mov
mov
stos
inc
jno
sub
sbb
ss
pop
cli
mov
adcb
mov
mov
fisubs
std
ret
xchg
cmp
fwait
mov
std
ss
cmp
push
xchg
mov
sti
or
inc
mov
and
sarl
mov
mov
cld
mov
and
hlt
in
adc
push
mov
xchg
mov
jae
dec
jo
mulb
pop
push
mov
inc
jns
or
push
ds
pusha
es
sbb
iret
in
push
inc
cmp
inc
outsl
cld
pop
adc
push
mov
icebp
out
xlat
int3
cwtl
dec
inc
sbbb
test
popf
mov
cltd
add
dec
rorl
imul
les
sub
pop
in
popa
adc
fs
pop
addr16
dec
cmp
mov
mov
mov
lods
pop
jl
sbb
sub
mov
push
ret
hlt
mov
sti
out
pop
jns
je
negb
enter
xchg
out
in
daa
push
das
inc
xchg
xchg
xchg
gs
bound
xor
push
mov
imulb
loopne
cmp
jge
enter
out
push
sarb
xchg
adc
sbb
enter
sbb
push
in
imul
xchg
sbb
xor
in
or
jle
inc
subb
jle
test
aas
or
adc
xor
cli
push
cmp
cmpsb
add
aas
mov
or
imul
xchg
and
insl
pop
cli
sub
mov
sbb
xlat
lahf
mov
sub
fiadds
pop
sub
sub
push
cmp
mov
xchg
loope
cld
mov
push
repnz
iret
pop
sahf
cmove
jp
mov
add
imul
mov
sahf
movsb
wbinvd
mov
enter
mov
push
push
out
jmp
clc
add
xor
cmpsb
push
push
jno
repnz
jl
imul
rcll
mov
mov
test
movsb
cld
dec
xchg
inc
cs
jnp
roll
or
jp
ss
pop
mov
insl
mov
add
sbb
mov
lahf
sub
test
mov
push
mov
popf
lea
pop
shl
and
iret
jmp
xchg
arpl
and
push
lods
pop
add
sbb
push
dec
ja
mov
sub
addr16
inc
and
cmp
dec
inc
mov
pop
lret
ret
popa
cmp
fiaddl
es
cs
andl
cmpxchg
mov
js
cs
sbb
mov
xor
jae
xchg
fmull
bound
xchg
mov
hlt
loope
lret
inc
addr16
cmp
cmpl
adc
pop
or
in
fs
inc
jnp
repz
sbb
mov
sbb
jae
in
mov
lahf
jg
push
jb
or
add
rorl
into
std
mov
arpl
subb
incb
insl
push
js
lret
pop
ret
lret
dec
mov
loopne
dec
movb
jle
mov
and
in
push
pop
sub
sbb
les
iret
mov
pop
rolb
push
gs
mov
push
jns
adc
dec
adc
inc
subl
ds
rorb
loop
mov
mov
stos
jbe
mov
mov
imull
cmp
subl
jo
out
cmp
mov
lods
rorb
mov
jl
push
inc
push
popa
push
sbb
adc
and
scas
out
imul
test
in
xor
dec
stc
sbb
lcall
jp
mov
mov
or
push
iret
xchg
push
jnp
cmpsb
adc
jno
imul
sbb
mov
int3
mov
test
out
in
iret
cwtl
sub
rcrb
inc
jp
into
push
out
mov
and
pop
cmp
stc
and
cltd
loope
aad
cs
jge
xchg
push
jae
ss
enter
mov
or
xor
cmp
pop
cltd
int3
loop
cmp
loopne
pop
mov
cmc
fs
cwtl
sub
loope
enter
hlt
adc
aas
ret
and
cld
lods
xchg
mov
scas
pop
cmpsl
mov
decb
lock
cmp
pop
out
arpl
loopne
add
lods
ret
int3
xchg
shl
js
movsb
mov
xchg
push
incl
mov
sub
mov
add
pop
loop
pop
and
xchg
test
jmp
sbb
cmp
sti
ret
out
in
sahf
mov
dec
pop
mov
push
les
dec
lods
in
inc
sbbl
push
clc
gs
cwtl
push
dec
inc
mov
xchg
xor
inc
add
push
test
push
mov
mov
jns
jb
fmulp
popa
cmp
int3
xchg
ss
lret
adc
and
sub
fsubrs
xlat
sub
hlt
sbb
add
xchg
jmp
gs
inc
push
dec
cmpsb
lahf
or
mov
and
in
dec
or
mov
int
push
xor
mov
xorl
jbe
adc
subb
rcrl
add
or
pop
sti
cmp
or
out
dec
inc
xor
into
movl
jp
or
out
mov
pop
pop
jmp
xchg
push
cltd
xchg
adc
in
mov
pop
xchg
adc
xor
loope
aas
loopne
lock
rcl
cmpw
xor
sub
sub
or
mov
jno
loop
shll
inc
mov
adc
mov
sbb
lds
jg
cmp
stos
jne
pop
mov
sbb
leave
ds
orl
hlt
add
inc
int3
iret
sub
roll
lret
cmp
add
pop
or
pop
xchg
push
andl
jb
sub
addb
fsubl
or
fldt
dec
and
or
pop
xchg
jmp
pusha
in
jl
xchg
in
adc
movsl
xor
test
inc
subb
push
push
ret
dec
mov
imul
arpl
push
add
pop
xor
lods
add
pusha
lock
test
and
push
outsb
test
jl
or
push
repz
mov
sub
pop
pop
fwait
cmp
push
orl
or
inc
push
push
add
lock
jnp
cli
iret
fs
fbld
cmp
daa
inc
mov
fld
mov
ficoml
cmpsl
mov
xchg
arpl
push
sub
cmp
xchg
imul
sub
add
push
dec
jns
xor
andb
lds
clc
sbb
sarb
in
xchg
ja
iret
enter
out
cmpsl
and
jge
cmp
subl
sub
fdivr
addr16
push
inc
bound
mov
fldt
cwtl
imul
outsb
or
mov
jl
insb
jmp
cmc
sub
sbb
push
inc
das
addr16
outsb
sti
and
xor
lock
hlt
mov
sub
sarb
add
pop
shrl
jo
test
push
es
int
or
ja
pop
and
push
xchg
pop
scas
xor
rcrl
xchg
stos
icebp
jnp
mul
packsswb
pop
or
cmp
or
ret
fnsave
repnz
inc
imulb
add
and
sbb
sub
sbb
aaa
mov
rclb
scas
xor
scas
adc
clc
jecxz
movsl
daa
orl
stos
lock
cmp
add
push
cmp
or
push
movsl
fcomp
lock
sbb
xlat
jne
loop
outsb
mov
inc
scas
sarb
xchg
mov
xor
mov
jecxz
ds
add
int3
test
xor
inc
int
shlb
push
xor
lcall
push
mov
push
cltd
xor
insl
fcmovne
sub
xchg
cwtl
push
repz
inc
mov
sti
popf
stos
push
lahf
cmp
inc
xchg
push
cld
in
aaa
jae
mov
mov
pop
sub
aas
push
mov
test
ret
fimull
nop
fcmovne
movsl
nop
adc
adc
popf
lods
shl
inc
xchg
dec
mov
xor
add
add
sub
mov
mov
addr16
sbb
fists
jp
test
pusha
add
mov
sub
cltd
dec
jbe
sti
fincstp
push
test
jmp
jns
ret
imul
jp
popa
mov
in
je
loop
out
mov
int
mov
bound
ret
dec
out
jle
fmuls
mov
pop
mov
xlat
add
cltd
mov
sbb
xlat
pop
aaa
push
or
into
pop
aaa
notl
lret
jecxz
dec
mov
push
inc
jmp
mov
fs
sub
cli
aam
aaa
mov
std
push
sbb
cltd
imul
mov
cmp
adc
push
fwait
cmp
jns
jno
inc
repz
push
push
mov
pop
xor
cmpsl
jb,pt
stc
out
mov
lahf
out
mov
xor
add
stc
fs
mov
scas
mov
xchg
cmp
mov
ret
fisttpl
mov
mov
push
mov
or
fisubrs
dec
std
mov
or
adc
lcall
lods
aad
adc
sar
hlt
stos
dec
pop
add
jecxz
and
std
push
push
or
lods
hlt
jnp
or
jo
and
push
roll
daa
arpl
repz
and
insb
out
cli
pushf
scas
ds
les
mov
push
jg
push
out
jmp
mov
js
ss
stos
int3
inc
jecxz
std
mov
dec
jno
arpl
ret
xor
mov
cmp
jns
cmp
testb
mov
sbb
bound
lret
pop
cmp
add
fs
cmp
mov
adc
mov
repnz
cmp
sbb
rcll
pop
ja
xchg
rcr
dec
loope
fbstp
ljmp
dec
push
das
es
jbe
pop
insb
mov
pop
hlt
sub
jl
cmp
jb
pop
or
je
xor
push
mov
sbb
enter
adc
scas
add
cmp
orb
sbb
xorl
xchg
cmp
icebp
xchg
add
xlat
push
xchg
dec
into
dec
in
dec
pop
loop
ja
dec
stos
lcall
jl
pop
sub
mov
jg
cmp
pop
shll
adc
mov
dec
test
sahf
mov
pop
mov
adc
popf
cmc
ror
out
popf
add
jno
fs
jnp
dec
pop
shl
jmp
je
pop
lods
xor
jnp
lcall
test
jg
jnp
sub
add
lods
andb
stc
mov
loope
sub
jmp
xor
idivl
mov
xchg
je
lock
pop
lods
stos
loope
popa
ret
repz
sub
lds
lret
in
bound
cmp
mov
loope
and
push
pop
cltd
test
jecxz
sbb
popf
aas
inc
sbb
push
xor
rorl
push
dec
loope
and
push
lret
fisttpl
loope
enter
push
and
incl
pop
xchg
notl
jno
fisttps
push
repnz
out
mov
and
and
imul
loopne
ret
icebp
jne
mov
test
xor
push
pop
xchg
ja
stc
cltd
add
ret
push
jo
xchg
insl
test
ds
cli
in
inc
xchg
cwtl
lds
or
add
aaa
cltd
rcrb
dec
ja
stc
test
mov
aas
mov
mov
fadd
lahf
adc
jo
xor
call
cmp
negl
sbb
mov
shll
jg
pop
loopne
pop
pop
mov
add
cld
popa
pop
xchg
in
stos
pop
test
sar
js
push
fdivs
dec
add
and
shlb
mov
pop
stc
mov
cmc
or
jno
sub
fiaddl
leave
or
jmp
stc
nop
mov
movb
das
pop
fdiv
jnp
sbb
xchg
add
push
std
xor
xor
xor
cli
daa
aad
leave
in
jno
pop
xchg
sub
xlat
sub
ret
pushf
imul
inc
fmuls
dec
lahf
push
pop
rorl
jns
dec
sbb
and
mov
inc
ljmp
mov
mov
push
or
pop
pop
test
mov
dec
cmp
filds
mov
pop
shrb
bound
data16
xor
insl
cmp
cltd
mov
lret
sbbl
push
inc
cmp
ret
shrb
sbb
cwtl
push
rolb
add
daa
mov
fcmovnu
cwtl
pop
sbb
loop
jb
jg
jl
popa
dec
mov
sbb
cmp
fs
negb
jne
repz
stc
clc
sbb
push
mov
enter
test
push
xchg
outsl
push
sar
lods
loop
adcl
loopne
xchg
sbbl
adc
outsb
ret
fnstsw
movsb
or
roll
add
dec
sbb
jns
cli
test
cmp
and
xchg
movsl
ret
or
sub
outsl
int
fidivrs
jno
fdivrs
xchg
mov
jns
and
pop
addb
fwait
jle
or
push
test
sbb
ficoml
mov
test
imul
test
shlb
pop
rcrb
sahf
stc
mov
add
aad
ja
lahf
mov
cmpsl
and
aam
push
jbe
and
sbb
adc
aad
int
pop
and
ror
xor
push
mov
xchg
pop
ja
mov
pop
popl
or
inc
dec
fcom
sbb
mov
ret
push
and
push
nop
pop
cmp
adc
adc
mov
inc
mov
xchg
sahf
lods
dec
int
insb
dec
lcall
loopne
iret
cwtl
jge
jo
adc
pop
xchg
jl
pop
shll
dec
jle
mov
dec
repnz
add
into
xchg
and
sub
int3
adc
xchg
movsl
mov
insl
das
xchg
dec
mov
lds
lret
fwait
leave
mov
add
xor
out
sub
testl
fldl
and
add
sub
mov
cmc
push
push
or
and
ret
jge
jno
cli
les
insb
mov
test
mov
lock
mov
imul
mov
clc
push
pop
imul
mov
rorb
push
pop
call
iret
js
in
xchg
lea
add
ret
jb
movsb
repz
dec
dec
jmp
test
xchg
cmc
cmpsl
call
push
stos
xchg
test
or
and
xchg
cwtl
mov
into
mov
ret
ds
push
stc
gs
inc
stos
jno
jae
adc
inc
push
pop
ss
jecxz
jg
push
add
ror
cmp
icebp
out
repz
test
ja
in
scas
push
gs
xor
sub
das
or
mov
xor
out
insb
mov
repz
push
add
lcall
jge
mov
cmp
pop
xor
jno
sbb
add
mov
jnp
sbb
jg
aam
fisttpl
pop
mov
das
test
imul
jmp
cwtl
push
aad
pop
inc
xlat
call
fdivl
push
cmp
icebp
ret
add
bound
dec
inc
mov
or
ss
xchg
cmpsb
dec
ljmp
cmp
mov
je
push
loop
jg
out
aad
dec
or
pop
push
xlat
arpl
notb
cs
les
lret
icebp
repz
jbe
pop
jg
sbbl
dec
iret
lds
xor
mov
cmpsb
out
jp
repnz
leave
add
dec
adc
in
dec
xor
fdivrs
and
mov
roll
jnp
cmp
repnz
imul
fdivr
jle
xchg
out
mov
cmovnp
mov
pop
loopne
inc
or
scas
and
and
ja
jp
and
cmp
out
dec
or
lret
pop
out
inc
mov
jns
shll
inc
rorl
or
mov
pop
mov
dec
cmpsb
jns
out
xchg
lret
je
sbb
or
adc
sub
shl
mov
fists
pushf
inc
mov
js
mov
pop
xchg
jns
insl
cmp
es
stos
dec
daa
mov
in
addr16
adc
add
addl
jle
push
mov
jno
es
adc
mov
mov
sahf
test
mov
push
out
test
jecxz
out
sbb
pop
or
loopne
inc
outsb
les
shlb
xlat
sbb
lea
jne
jmp
repz
inc
cmp
rol
outsl
inc
out
cmp
jge
pop
sub
adc
adc
inc
jge
iret
mov
push
sbb
lods
adc
sub
ret
mov
jno
adc
cld
call
cmp
xchg
sbb
arpl
nop
mov
mov
cmc
mov
cld
jns
or
mov
or
hlt
push
test
xor
pop
pusha
callw
xchg
push
dec
and
mulb
cmc
lahf
push
jle
cmpsl
jmp
fisttpl
pop
notl
push
test
jno
ljmp
cmp
ret
loop
lods
dec
repz
int3
mov
jecxz
ret
call
mov
cmp
and
daa
or
dec
iret
cltd
int
mov
cltd
sti
fisttpll
add
and
jle
test
dec
jp
jae
stos
test
xchg
mov
inc
dec
call
pusha
or
int
mov
jmp
out
paddq
xlat
mov
andb
les
mov
xor
pop
sbb
popf
xor
and
orl
dec
lret
push
pop
push
sbb
cltd
sub
jb
hlt
fbstp
push
or
and
jo
inc
test
incl
pop
repz
pop
and
sbb
xor
imul
jbe
ds
pop
scas
icebp
inc
test
movsl
push
push
arpl
xor
xor
jnp
in
rorb
mov
jmp
cmp
sub
out
push
sub
sub
inc
mov
sbb
sub
loop
ds
push
call
dec
add
inc
movsl
scas
sbb
lcall
or
cmp
imul
and
sahf
mov
xor
push
insl
cwtl
inc
sub
mov
fdivl
mov
scas
jb
dec
push
pop
sbb
movsl
loop
sbb
cmp
dec
dec
lds
mov
cld
nop
cmc
or
dec
jp
movsl
cmp
fisubs
mov
int
outsb
and
or
jns
sbb
shrl
push
shl
imul
jb
rclb
ljmp
mov
jae
lahf
lcall
jb
mov
adc
push
dec
cwtl
data16
cltd
imul
lods
xchg
inc
ror
addr16
mov
enter
insb
lea
mov
jns
adc
aaa
pop
mov
in
enter
sahf
push
pop
push
je
mov
ret
shrl
or
cmp
and
mov
xor
aaa
pop
lds
mov
dec
inc
js
pop
adc
or
les
mov
int3
mov
sarl
testb
lea
sbb
xlat
mov
sti
adc
ret
cs
ljmp
inc
lcall
push
xchg
imul
jno
cmp
outsb
repnz
sti
xchg
stos
shlb
ret
imul
add
dec
insl
or
xor
or
fbld
mov
lret
mov
sahf
jmp
dec
pushf
xor
or
test
and
clc
aad
mov
pushf
imul
sbb
push
test
rcrl
aam
push
sbb
mov
clc
pop
dec
push
rcr
das
or
loope
adc
xlat
pop
mov
mov
push
in
or
dec
adc
and
xor
pushf
push
popf
xor
cmpsl
data16
jb
lods
mov
jb
in
sahf
mov
adcb
cmp
mov
sbb
lods
outsl
ret
repnz
cmpsb
nop
inc
iret
fnsave
cli
iret
stos
mov
cltd
xchg
outsl
repz
hlt
or
mov
add
outsl
lds
ret
mov
aad
lret
fsubrl
lock
sbb
lret
push
and
mov
fcoml
dec
jnp
insl
pushf
cld
add
dec
jge
pop
adc
mov
fcomps
inc
adc
movsb
or
js
sarb
inc
push
dec
cmpsl
das
stos
add
inc
dec
insb
test
add
add
es
cmp
cmc
movsl
push
lahf
in
call
scas
xchg
add
inc
sbb
pop
pushf
sbb
out
push
clc
mov
xor
push
das
sbb
xchg
adc
push
notl
pop
lahf
loope
sbb
mov
out
xchg
jne
pop
or
mov
mov
pop
dec
add
outsl
sbb
adcl
fldt
push
add
stc
or
lret
inc
cmpsl
sub
and
mov
cltd
jb
fisttpl
sbb
aas
and
lret
sub
xchg
sbb
cmp
cmp
fnsave
sbb
push
inc
jle
clc
out
arpl
lock
or
out
pop
shl
pop
cltd
mov
fprem1
bound
mov
daa
scas
add
add
push
mov
lret
xor
pop
dec
xor
and
lahf
sarl
xchg
lock
xor
testb
xchg
sub
add
std
mov
push
cwtl
pop
and
mov
mov
xor
and
cli
xor
icebp
test
or
daa
mov
movsbl
rolb
push
jg
and
cmp
xor
sahf
mov
or
jo
pop
cmp
in
xchg
sub
clc
lods
cmp
dec
or
lods
mov
xor
lret
enter
mov
mov
lret
popa
cmp
loop
in
outsl
cwtl
insl
inc
in
dec
int
out
or
loope
xor
pop
dec
xor
push
cmp
jo
sub
and
mov
dec
dec
adc
negb
fsts
sub
xor
addl
ljmp
cmpsl
xchg
mov
mov
sub
std
test
mov
cmp
cmp
mov
mov
ror
pop
in
add
ljmp
rol
xchg
mov
scas
mov
test
push
jp
xor
push
stos
adc
ljmp
fisubrs
rolb
and
dec
out
icebp
lahf
pop
bound
insb
cmp
push
aad
pop
cmp
and
les
ljmp
or
jbe
jb
jbe
add
aaa
icebp
push
icebp
mov
and
pushw
clc
and
sbb
jecxz
inc
dec
jg
je
adc
div
movsb
inc
sbb
pusha
incb
xor
outsb
jl
cs
loop
cmp
or
pop
repnz
mov
mov
cld
jecxz
pop
imul
in
push
out
dec
std
cmpsl
call
insl
dec
mov
cmp
pop
push
out
nop
add
mov
sub
dec
mov
ljmp
add
or
das
lock
mov
je
xchg
mov
cmpsl
mov
imul
pop
hlt
sbbb
xor
fldcw
pushf
out
cmpsl
xchg
and
xchg
or
inc
pop
inc
jge
lret
adc
adc
sub
jbe
das
mov
sub
inc
cmp
jle
lret
bound
cmp
lret
mov
lds
mov
or
mov
fstl
lods
lds
cmc
push
mov
pusha
mov
clc
inc
jae
and
insb
psubb
repnz
dec
imul
daa
xor
cmpsb
mov
or
pushf
and
and
or
icebp
fwait
xor
inc
sbb
xchg
ljmp
sbb
or
loope
rclb
and
pop
push
jge
dec
jae
sbb
push
pop
or
in
cli
push
sub
cmp
icebp
icebp
fldt
popf
inc
mov
cmpsl
mov
jge
sbb
pop
loope
rep
stc
daa
ja
adc
push
pushf
jae
notb
fcoms
xchg
scas
xchg
arpl
jnp
jecxz
fbld
add
daa
out
cmp
mov
in
test
popa
imulb
mov
jb
jge
repz
push
lret
addl
mov
int3
dec
fwait
mov
orb
cld
jmp
leave
ret
jg
sub
clc
out
shlb
cmp
movsb
aad
loopne
inc
pop
in
sbb
cmc
fistpll
pop
pop
dec
cltd
gs
xchg
xchg
cmp
int
push
sahf
cmp
pop
xor
pushf
jp
lret
lret
and
jmp
cmp
loope
add
and
fimull
mov
xchg
jns
cld
test
arpl
sub
jle
xlat
gs
lea
push
addl
jg
jg
cmpsl
imul
jne
pop
ja
add
ljmp
in
scas
or
add
and
insl
test
sbb
mov
daa
push
lods
add
sti
repz
in
mov
or
inc
dec
int
adc
cmpsl
and
fisttpl
inc
jns
cmp
data16
jae
jbe
adc
mull
stos
pop
enter
js
push
int
push
fdivrl
push
push
adc
shl
cmpsl
insb
ds
jmp
jbe
inc
mov
in
dec
mov
aad
xchg
movsl
sub
cmp
jp
loope
sbb
jl
mov
mov
lcall
dec
imul
insl
sbb
pushl
cld
dec
sbb
scas
pop
stos
out
addr16
jge
inc
add
sub
adcb
outsb
popa
xchg
cmp
dec
adc
push
cmp
leave
loop
jae
mov
add
mov
xor
cmpsb
leave
push
sub
jae
out
shlb
addr16
je
imul
inc
cltd
test
aad
mov
je
pop
int
adc
mov
push
aam
cmpsl
and
lea
pop
insb
dec
dec
int3
jo
clc
lcall
mov
xchg
rolb
push
xor
push
test
out
test
aaa
repz
dec
subb
insb
and
adc
scas
bswap
pop
sti
cmp
mov
adc
lahf
dec
test
ret
fadd
mov
lds
outsl
xchg
mov
mov
inc
sbb
lahf
mov
dec
enter
imul
adc
sbb
loopne
mov
jnp
xchg
jp
fwait
inc
push
add
and
lock
xorl
mov
sar
pop
inc
sahf
dec
cmp
outsl
mov
cmc
cmp
in
mov
cmp
cs
sbbb
ret
rclb
fistpll
andl
mov
sub
imul
enter
mov
gs
mov
mov
stos
call
sarb
bound
add
and
repz
adc
scas
addb
aas
js
or
pusha
sti
xchg
imul
pop
dec
xchg
mov
add
mov
xorb
cld
daa
inc
ret
xchg
jo
cltd
jns
fists
sbb
sub
mov
inc
mov
leave
and
iret
xor
pop
psubsb
push
loopne
cmpl
test
sbb
mov
jmp
adc
add
pop
mov
xor
push
lock
lock
shr
movsl
fidivs
testb
test
pop
xchg
int
mov
ljmp
pop
andl
and
daa
xchg
fstl
ret
mov
cmp
xchg
jb
inc
cli
sbb
or
jne
rclb
pop
sbb
test
addr16
shll
sbb
push
hlt
push
inc
mov
xor
lods
xchg
into
cmc
mov
imul
inc
pusha
xchg
adc
push
mov
sahf
dec
push
jg
std
xchg
xor
jmp
mov
cmpsb
sbb
xchg
sbb
call
loopne
push
jbe
jg
push
adc
int
and
add
insl
mov
sbb
inc
adc
int3
inc
xor
cld
mov
xor
mov
pop
jg
sub
lods
movsl
xor
fstpl
dec
sbb
neg
repz
fimuls
push
cmp
xchg
jle
nop
xor
bound
jns
jecxz
leave
scas
jmp
adc
sbbb
in
add
das
hlt
loopne
sbb
outsb
bound
stc
dec
out
and
sbb
negl
je
shlb
addb
cmp
jnp
sub
push
movsl
jno
cmp
pop
or
mov
sbb
shl
call
stos
sahf
pop
flds
and
cmp
fwait
sub
xchg
sub
or
aad
cwtl
adc
mov
je
cmpsb
movsb
scas
and
and
jmp
mov
and
mov
push
mov
ljmp
adc
jb
cmc
es
lahf
sbb
add
add
cmp
mov
fcomi
arpl
xchg
sub
xor
shll
fsub
addb
insb
pop
sti
and
cmp
push
pop
push
mov
xlat
mov
popa
cmpsl
push
das
pop
jnp
adc
xor
lret
cmpsb
pop
lahf
in
pop
int
dec
add
arpl
daa
xchg
sahf
or
scas
push
fwait
add
jne
lock
adc
jb
xchg
mov
test
jl
mov
pop
mov
pusha
mov
cmp
jae
mov
inc
mov
pop
inc
mov
js
mov
xor
in
es
jno
push
xchg
pop
js
pop
inc
cwtl
pop
lret
clc
loope
lret
mov
pushf
adc
sti
inc
cld
repnz
loopne
pop
aam
imul
fs
cwtl
loop
pop
into
xchg
mov
cmp
scas
pop
aam
push
fwait
and
sub
out
push
xor
jp
fisubrs
stos
pop
add
pop
dec
xchg
rolb
push
xchg
adc
leave
pop
pop
and
sahf
movsb
jle
js,pn
out
mov
in
adc
in
ret
and
ljmp
ret
or
fs
in
mov
fstpt
loopne
sbb
pop
imulb
loopne
jmp
or
cmp
std
sbbb
insb
and
enter
xor
xor
sub
shr
mov
mov
std
iret
sub
add
sbb
cs
or
inc
fcmovne
mov
adc
fldl
push
pop
aam
and
adcl
lcall
insb
and
or
insb
jecxz
add
cwtl
in
xor
pop
push
mov
cmp
jp
imul
and
ret
pop
push
pusha
inc
jp
test
mov
mov
test
pop
inc
aam
dec
filds
ljmp
mov
pop
test
fsubrs
and
dec
test
aam
mov
dec
sbb
xor
jl
cmp
add
or
xchg
pusha
cmp
push
jmp
cmp
arpl
scas
rcr
fistpll
int3
cltd
test
inc
cmc
nop
sti
push
outsb
cmp
inc
xor
jae
mov
jno
nop
or
pop
or
pushf
out
in
aam
and
icebp
sub
pop
mov
sub
fdivrp
in
jecxz
jbe
push
std
dec
mov
loop
mov
or
ds
test
jb
cmp
or
mov
icebp
jl
sti
jbe
dec
std
stc
xor
lret
enter
cmp
leave
les
ja
sub
pop
and
out
insb
andl
inc
filds
jp
dec
mov
mov
mov
cld
mov
xor
jae
push
mov
insl
mov
mov
repnz
sar
cli
faddl
inc
out
dec
pop
insl
push
stos
and
ret
fistl
cmp
stos
xor
stos
add
push
dec
in
es
and
aas
ds
sbb
stos
lea
movsb
or
imul
ret
jbe
pop
stc
mov
xor
add
loope
loopne
loope
cld
push
sbb
data16
cmpl
imul
mov
mov
lret
idiv
and
insl
mov
pop
jae
pop
imul
xor
iret
lods
push
bnd
dec
push
cmp
daa
insb
ds
out
imulb
dec
inc
xchg
test
xor
jp
mov
sbb
lcall
mov
test
scas
mov
call
out
rcrl
ds
xchg
xor
pop
xor
adcb
sub
loope
pop
pop
jmp
push
cmp
into
fistpll
movsl
shrb
or
pop
stc
dec
add
in
add
adc
adc
or
enter
cmp
outsl
and
jecxz
stos
xor
fidivs
in
mov
xchg
cmp
xor
mov
test
inc
xchg
sub
dec
xor
mov
lret
mov
and
sahf
movsb
rorl
pop
stos
jl
mov
stc
xchg
jmp
pop
sbb
insl
push
pop
inc
sub
add
aaa
sub
loopne
aam
mov
jno
icebp
sub
lret
mov
insl
sbb
xchg
pop
and
dec
jl
jbe
pop
push
add
add
daa
pop
cmpsb
adc
test
push
into
js
rcll
jb
add
mov
mov
mov
push
cwtl
push
push
outsl
or
adc
push
pop
popf
push
add
fisubrs
hlt
lods
leave
jae
inc
jl,pn
inc
adc
jmp
lahf
fs
mov
inc
sub
test
movsb
dec
test
lret
repz
and
mov
inc
sub
pop
je
call
push
outsl
dec
xor
mov
pop
xchg
insb
inc
push
inc
lret
bound
dec
pusha
pop
push
rcl
mov
les
fistpll
mov
cmpsb
mov
aaa
inc
sahf
sub
xor
dec
adc
mov
int3
jne
out
cmp
test
daa
xchg
lea
push
adc
sahf
clc
pusha
xchg
pop
leave
jl
xchg
jl
int
add
sub
push
xlat
xor
sbb
sbb
mov
dec
pop
ficoms
mov
ss
pusha
dec
fdivrs
sub
sbb
lret
add
xor
xor
repz
sbb
jne
mov
mov
in
mov
aad
lret
mov
test
xchg
movsl
aam
out
add
loopne
cmp
insl
aad
shr
xchg
push
push
cmpsb
mov
lds
dec
in
in
mov
xor
xchg
push
in
mov
xchg
popf
clc
pop
sub
loop
inc
pop
sbb
xchg
incl
dec
leave
sub
testb
cld
mov
push
and
in
lcall
cli
mov
or
fsubr
movsw
xchg
lcall
mov
aas
push
push
cltd
lahf
or
ror
xor
pop
inc
sarb
push
lret
jae,pn
xchg
xchg
mov
enter
in
cmp
icebp
dec
imul
lahf
repnz
gs
ja
insl
xchg
jecxz
xor
or
test
push
repz
lret
sbb
mov
pop
and
stc
pop
mov
push
out
loope
in
outsl
ja
and
stos
iret
pusha
mov
in
das
xchg
add
add
xor
cmp
xorl
js
out
pop
add
ja
int3
ret
sub
ret
movl
gs
stos
in
pop
std
cmpsb
pop
dec
inc
xchg
dec
ja
ret
sbb
dec
xor
push
pop
scas
cmc
jne
arpl
imul
insl
test
jo
lock
mov
es
adc
xchg
fdivrs
or
cmp
imul
push
int3
mov
cmp
es
in
imul
add
pop
xor
and
pop
adc
jge
imul
mov
icebp
leave
or
jl
std
andl
xchg
lret
push
stc
aad
dec
pop
inc
mov
mov
daa
cmp
lods
or
add
ljmp
ljmp
dec
aad
mov
pushf
cld
cmp
int3
mov
xor
pop
mov
outsl
in
or
mov
or
outsb
jmp
cld
sti
add
mov
mov
and
jb
pop
jl
test
not
and
pop
lret
testl
dec
sbb
rcrb
insl
dec
loopne
xor
and
mov
js
pop
ss
sub
int3
add
cmp
in
jmp
push
je
inc
sbb
cmp
mov
and
push
mov
movsb
cld
loope
ja
int
insb
loopne
lahf
ret
lods
jmp
shll
out
pop
adc
lahf
in
or
cmp
cwtl
push
jl
movsl
push
pop
orb
addr16
xor
in
and
adc
in
cmp
adc
xchg
mov
sbb
xchg
shlb
sahf
pop
push
sbb
pushf
or
ja
insl
jo
lcall
mov
imul
mov
pop
pop
or
mov
and
lea
sbb
xor
push
pop
adc
js
fdiv
shll
add
in
pop
pop
adc
pop
rolb
or
lock
js
mov
adc
push
lods
inc
sub
cmc
sub
cmpsb
or
mov
popf
mov
leave
pop
sub
mov
repz
icebp
push
cmp
pop
push
sahf
ret
jo
lea
sub
xchg
fnstsw
cltd
in
pop
jnp
and
out
inc
jb
sub
loope
loop
cmp
popa
dec
push
ds
std
ja
cmpsl
aad
aas
mov
repz
addr16
inc
out
fsubl
dec
test
xchg
sti
test
xor
cmpsl
mov
loopne
test
out
pusha
jb
call
or
inc
add
ret
gs
bts
and
cmpsb
cmc
sub
es
dec
dec
aam
adcl
shll
std
shrb
pop
and
cmpsb
sbb
jg
or
lret
popf
pop
fnstsw
sbb
xchg
data16
cmp
dec
js
aaa
out
lds
stos
not
sub
ret
gs
and
dec
out
aaa
add
out
adc
lret
mov
idivb
mov
inc
mov
xor
lods
sarl
stos
xchg
les
jg
or
mov
pop
add
aad
sbb
xor
or
xor
jb
xor
xor
xor
sbb
push
dec
in
mov
dec
dec
inc
mov
pop
out
xchg
or
push
aas
daa
mov
adc
cmpsb
cmp
fistpl
mov
mov
push
pop
fldt
fistpl
subl
push
stos
push
js
mov
lds
sub
mov
inc
jns
test
dec
addl
jmp
xabort
je
int3
jp
and
jo
loopne
fsubrl
jo
inc
push
fmul
mov
xchg
call
sub
and
sbb
xchg
daa
pop
push
call
imul
xlat
or
dec
gs
iret
out
ss
in
lods
mov
mov
ljmp
loope
outsb
xor
aaa
mov
push
pop
pop
mov
arpl
xchg
out
cmp
fstl
push
adc
add
inc
in
pop
sti
insl
push
mov
int
mov
je
pop
std
lods
insb
lea
mov
cmp
mov
out
sbb
and
lods
cltd
jle
dec
shufps
ljmp
cmp
mov
sub
and
xchg
sub
xchg
pop
jne
movsl
push
ljmp
pop
jo
lret
or
cmp
arpl
dec
xchg
pop
stos
jl
les
mov
stos
hlt
pusha
mov
cmc
push
jb
jecxz
lret
out
aam
jmp
outsl
push
push
out
xchg
cmp
ss
leave
xor
stos
or
ja
jp
sti
negl
sbb
rol
sub
lret
mov
movsb
test
jnp
idivb
xchg
adc
jns
pop
pop
outsb
xor
jg
sub
jne
jns
test
add
icebp
es
aas
sbb
hlt
adc
std
xor
out
sub
leave
test
jnp
adc
call
cmp
inc
ficoms
stc
ljmp
imul
push
addr16
out
stos
mov
pop
insb
pop
lcall
ljmp
mov
and
xlat
outsl
rcrb
mov
sub
fxch
or
lods
into
stos
bnd
dec
add
cmp
sub
int3
rorl
ret
stos
int3
stos
jns
aaa
xchg
dec
sbb
cld
mov
add
fwait
out
inc
mov
xchg
or
lods
xchg
xor
fcomp
rorl
add
outsb
cmp
stos
add
stos
xchg
aaa
push
jp
jp
outsl
and
cld
rorl
adc
dec
pop
jb
cmp
pop
iret
cmp
rolb
mov
leave
call
ret
loope
clc
push
inc
sub
mov
inc
pushf
mov
stos
jo
and
adc
sub
jge
int
add
jge
les
jno
xor
sahf
mov
jg
ja
dec
test
fcoms
cmpsb
sub
mov
or
add
mov
mov
cltd
mov
mov
shlb
iret
mov
jb
or
clc
insb
ljmp
push
sbb
add
cmp
pop
adc
inc
sbb
xchg
popf
jmp
jnp
stos
lods
pushf
mov
ds
pop
dec
jo
jl
pop
ret
cmp
sub
push
mov
ja
outsl
jo
in
lahf
jno
cmp
cmpsb
push
div
in
mov
xchg
repz
mov
cmp
popa
movsb
add
fbld
jb
xchg
inc
fs
outsb
lods
dec
out
push
sbb
pop
lea
sarl
dec
sbb
sbb
xor
popf
je
push
and
fs
mov
jecxz
add
jo
lock
addl
jge
lods
mov
outsb
aad
arpl
jae
addl
cmp
lahf
jns
cs
andl
shrb
pop
pop
sarb
dec
lcall
inc
imul
shr
cmp
popa
jl
mov
int
insb
xchg
xchg
sbb
adc
or
ja
loop
mov
xchg
fildl
loope
adc
jmp
xchg
push
and
mov
jno
inc
or
fs
xchg
add
adc
icebp
push
insb
ret
xor
and
adc
scas
cmpsl
pop
ss
or
mov
rclb
xchg
jb
jnp
int
pop
fisubrl
mov
add
mov
add
push
xchg
mov
fcomip
sbb
sbb
iret
icebp
imul
mov
hlt
pop
iret
dec
insl
outsb
push
mov
cmp
or
inc
icebp
cmc
and
cmp
or
ret
fsubl
mov
mov
pop
icebp
mov
popf
push
inc
add
ds
xchg
imul
and
lock
cs
jno
sbbb
sbb
inc
jle
xchg
aaa
es
inc
subb
xor
mov
and
cmpb
push
pop
pop
xchg
std
lcall
mov
in
sti
mov
fsubr
ljmp
in
mov
into
enter
dec
mov
fldl
mov
rol
insb
sub
imul
mov
add
int3
mov
mov
aas
cwtl
add
mov
das
mov
sub
es
mov
xor
mov
cltd
mov
lock
add
dec
adc
sub
lret
or
push
dec
mov
es
push
adc
call
mov
inc
adc
push
push
pop
adc
add
into
cmp
imul
xchg
fnstcw
cli
lods
sbb
jnp
test
arpl
daa
inc
testb
bound
inc
push
mov
data16
pop
aad
mov
xor
popf
mull
loopne
int3
es
mov
add
push
cmp
sub
inc
pop
mov
pop
mov
sub
mov
lds
mov
adc
sub
fdivs
fstps
xchg
sbb
mov
jno
jge
push
pusha
mov
sbb
je
stos
sbb
es
mov
decb
jbe
adc
pushf
and
sahf
jle
test
scas
cmp
subb
cmp
mov
mov
test
scas
push
fnstcw
mov
lret
call
fsubs
pcmpgtd
or
pop
adc
leave
add
mov
imul
rcrb
ja
mov
jnp
inc
push
cwtl
aaa
jae
adc
ret
jg
xchg
lahf
or
adc
insb
mov
daa
daa
push
or
inc
adcl
pusha
out
jns
add
mov
repnz
ss
lret
out
popa
add
xor
mov
scas
int
dec
mov
dec
pop
pop
push
inc
or
mov
mov
pop
movsb
mov
pop
aad
imul
cmpsl
sbb
inc
popf
mov
xor
movsb
or
sbbb
dec
lea
loopne
test
fcmovne
jbe
inc
test
in
mov
and
inc
or
mov
xchg
xchg
xchg
sbb
pop
adc
cmc
inc
ss
call
xchg
clc
leave
arpl
int3
xchg
jmp
inc
ror
sub
fldl
xor
data16
imul
popf
push
shrb
subl
jg
cld
call
or
inc
xchg
jo
cli
insl
xchg
loopne
ja
and
add
add
and
notl
insb
dec
daa
sbb
push
cli
mov
adc
cwtl
sub
add
xor
sbb
addl
jg
ss
mov
xchg
repnz
out
gs
mov
cmp
cmp
add
imul
int
icebp
in
int
xchg
dec
dec
push
outsl
mov
in
dec
dec
pop
loop
outsl
out
mov
inc
mov
inc
mov
dec
jle
adc
inc
sub
fdivl
popf
sbb
mov
mov
sarb
cmc
mov
cltd
dec
push
dec
mov
ljmp
aad
adc
pop
hlt
es
sbb
mov
cmc
in
sbb
sub
mov
fldt
call
cltd
sarb
call
add
mov
xor
rcl
jge
clc
sahf
xchg
jae
fsub
push
lret
aam
xchg
in
jl
mov
iret
into
cmpsb
cmp
mov
es
mov
push
nop
mov
hlt
fcompp
mov
sub
call
sub
int3
into
push
rclb
mov
jl
adc
pop
push
ret
out
mov
mov
push
xlat
fnstsw
mov
mov
lods
add
sbb
adc
jmp
pop
iret
sbb
jmp
mov
mov
adc
jbe
jae
lahf
and
cmp
insb
subb
sub
insb
pop
jns
pop
push
in
lret
les
pop
dec
ret
outsl
cmpsb
fdivs
and
sub
mov
fistl
mov
aam
xchg
jb
inc
aad
popa
pop
rorl
add
or
in
jns
xor
aas
popf
subb
mov
cmp
xor
lret
popf
mov
bound
xchg
cmp
psrad
pop
rorb
fcoml
pop
out
mov
sbb
sub
pop
push
icebp
xor
in
jne
mov
mov
pop
pushf
jmp
stos
lods
inc
jle
loopne
dec
pop
pop
mov
insl
add
jmp
movsb
stos
or
iret
mov
jbe
ja,pn
jle
idiv
std
incb
sub
lea
aam
ror
add
jns
add
scas
data16
jmp
mov
enter
add
add
and
push
fstl
xchg
sbbl
dec
mov
lahf
push
lods
lock
push
sub
scas
cmp
scas
inc
inc
shl
fwait
pop
testb
out
test
lret
fadds
sbb
sahf
xor
push
fidivrl
cwtl
leave
xor
mov
jnp
dec
in
xchg
clc
cli
inc
cmp
sahf
sbb
lret
gs
push
imul
into
lcallw
rorl
fistpll
int3
pop
sbbl
jl
insb
call
hlt
pop
mov
dec
push
push
loopne
jns
nop
lods
inc
adc
inc
int3
pushf
rorb
cmp
test
adc
sub
cmpl
icebp
out
daa
cmp
call
push
jae
loopne
pop
rorb
xchg
ss
lret
push
xor
push
push
repnz
or
and
imul
mov
cld
add
mov
cld
push
ret
enter
push
repnz
inc
test
mov
xchg
sub
mov
or
shlb
lock
out
clc
out
mov
cmp
xchg
pop
aam
shlb
adc
jbe
addr16
loopne
inc
ljmp
jmp
mov
dec
icebp
into
dec
mov
das
outsl
adc
push
push
test
adc
mov
mov
les
test
push
sub
or
add
adc
out
inc
inc
insl
cmc
daa
adc
push
xorb
fisubs
jp
or
ret
sbb
mov
add
and
loope
int
or
scas
adc
or
sub
mov
pop
mov
dec
inc
xor
or
fwait
je
sub
mov
push
or
arpl
lahf
mov
out
pop
std
pop
hlt
stos
mov
xchg
jns
scas
pushf
popl
fists
and
ja
insb
test
add
outsl
arpl
dec
fisubl
movsb
inc
shlb
or
sbb
pushf
dec
add
dec
mov
mov
addr16
cmp
ret
enter
popf
sbb
pop
lods
lods
xlat
pop
lock
sub
or
fcompl
jb
inc
imul
fwait
jg
jecxz
or
mov
idivb
popf
push
mov
rorl
inc
fs
pop
repnz
decl
xchg
dec
ficoms
mov
adc
dec
je
mov
jecxz
mov
popa
lahf
pusha
inc
outsl
push
mov
sub
mov
xor
pop
mov
jge
mov
addr16
out
imul
lret
rclb
ret
adc
es
les
inc
mov
mov
cmpsb
sub
mov
sub
pop
cwtl
push
lret
ja
inc
xor
test
shr
dec
clc
fcmovnb
mov
push
popa
fidivs
rcl
mov
inc
shlb
int
mov
lock
adc
inc
out
mov
xchg
or
and
mov
mov
leave
adc
stos
inc
mov
xor
cltd
pop
or
sarb
mov
push
xchg
xor
subl
dec
adc
into
fistps
or
pushf
insl
push
cmp
loopne
into
jmp
jle
test
insl
or
mov
and
dec
nop
test
scas
andb
inc
aas
adc
sbb
or
das
and
mov
out
sarl
insl
pop
out
arpl
stc
pop
jle
and
mov
aas
push
adc
jp
and
test
sbb
add
xor
sub
xor
adc
xchg
in
mov
pop
mov
dec
xchg
jmp
test
adc
mov
sub
adc
add
lret
fcoms
jmp
xchg
push
in
pop
jmp
inc
stos
pop
mov
push
adc
jo
arpl
inc
jp
sub
lds
jbe
add
mov
outsl
imul
jle
jmp
or
inc
dec
push
sub
lods
mov
push
or
adc
and
jo
arpl
jg
out
lret
mov
push
loope
jge
xchg
add
push
xchg
call
push
jg
sahf
shr
or
push
fstps
lcall
add
outsb
and
and
les
gs
dec
mov
sbb
lods
outsl
icebp
stos
mov
lods
mov
dec
mov
iret
std
adc
cltd
rol
jecxz
pop
out
cmp
aam
adc
lods
adc
frstor
inc
in
fwait
xor
dec
cltd
cmp
mov
insb
sbb
outsl
xchg
xor
or
aas
scas
cmp
ret
hlt
mov
sub
add
cmpsb
fisttpl
inc
jns
mov
mov
call
out
pop
subl
jnp
xor
push
ja
enter
sbbb
fsubp
push
ljmp
ret
fwait
mov
in
push
sbb
inc
sarb
lret
fstpt
mov
mov
push
mov
filds
and
lods
dec
shrb
fiaddl
mov
pushf
cmp
es
cmp
cmp
dec
dec
stos
xchg
mov
pop
adc
leave
add
lcall
mov
xor
cmp
in
cmp
shl
pusha
dec
lods
mov
pusha
jl
sub
movsl
sbb
lock
iretw
mov
mov
or
test
jns
sub
fimull
push
inc
or
test
data16
dec
jge
lcall
popa
pop
lods
cltd
pop
faddp
test
push
aam
push
push
mov
jp
lods
pop
das
stos
jns
mov
pusha
xchg
fldcw
dec
xchg
adc
pop
imul
call
sbb
push
mov
lds
lods
in
das
and
aam
sub
ds
mov
lock
fistpll
in
push
outsb
inc
mov
sarb
icebp
jae
ljmp
cmp
addr16
xor
cmpsb
icebp
mov
mov
inc
bound
movsb
inc
jmp
xchg
dec
mov
fsubr
mov
lock
cli
loopne
shll
push
es
xchg
outsb
mov
repnz
xor
jge
movsb
scas
inc
xor
test
repnz
test
pop
stos
ss
pop
adc
lret
xchg
das
push
rclb
movsl
lret
mov
jno
mov
cmpsl
out
xchg
xchg
and
or
pop
push
pop
aad
pushf
out
xchg
push
inc
xchg
xor
xor
inc
xchg
popf
mov
ror
out
xchg
xlat
adc
fcompl
adc
in
stos
xchg
dec
and
lods
sub
or
in
aam
mov
pop
lods
add
cwtl
scas
sbb
jl
pop
pop
pop
xor
or
mov
stc
sub
pop
push
xor
cmp
or
pop
popf
std
or
call
mov
outsl
dec
mov
fucomi
outsb
in
push
push
test
xor
stos
inc
fbstp
dec
test
inc
jmp
lea
jmp
dec
push
std
pushf
imul
js
xchg
stos
mov
icebp
mov
popf
xor
fsub
xchg
nop
aaa
shlb
jecxz
lods
mov
jo
pop
fsubl
jmp
xor
lahf
lods
lret
es
hlt
add
push
dec
addb
shrl
push
imul
xchg
dec
icebp
rclb
adc
push
in
stos
cmpsb
outsb
push
pop
fsubrp
out
inc
pop
or
subb
xchg
mov
jl
sub
into
jmp
pop
xchg
jnp
mov
mov
pop
ds
clc
sbb
xchg
repz
nop
dec
inc
jmp
cmp
les
adc
lret
pop
mov
dec
dec
add
add
or
out
push
rcr
adc
mov
mov
sbbb
aad
mov
add
test
aad
jmp
imul
sahf
enter
cltd
xor
mov
test
xchg
mov
xor
jecxz
jle
and
mov
dec
adc
aam
jmp
cmp
push
outsl
adc
stos
pop
aam
loope
add
mov
std
mov
lcall
xchg
mov
jecxz
iret
mov
orl
testb
pop
push
inc
dec
nop
jae
lahf
cwtl
lea
mov
cmp
mov
jp
jle
adc
lahf
cmp
push
flds
jecxz
adc
mov
xor
sub
pop
cmovle
fcomps
and
inc
sbb
ljmp
notl
dec
mov
adc
adc
js
leave
jle
pop
jb
jae
jbe
out
lock
arpl
pop
xchg
test
jnp
push
outsb
mov
adc
mov
testb
aam
xlat
xor
out
fsubrl
mov
into
xchg
xor
pop
sub
or
mov
popa
lds
and
sub
cwtl
lock
fidivs
push
mov
mov
xor
adc
and
cmpsb
jl
inc
aaa
int3
push
xchg
inc
pop
inc
mov
mov
jle
psubsw
rcll
jae
push
pop
dec
jg
sbb
sbb
test
jle
adc
mov
push
ds
incb
mov
xchg
add
pop
mov
pop
push
decb
sub
std
xchg
adc
insb
add
mov
es
jns
sti
push
and
fidivs
push
loopne
dec
xchg
iret
push
push
ds
test
aas
out
into
orb
pop
inc
push
push
ja
mov
pushf
cmpb
ss
popa
rol
movsl
out
fwait
jl
xlat
adc
fs
cli
jecxz
sti
sbb
cld
inc
in
dec
push
or
or
sbb
add
ja
or
sti
addr16
bound
and
push
mov
mov
jnp
test
and
stos
sbb
and
cld
push
xchg
or
jg
xchg
cmp
adc
add
mov
mov
jb
inc
icebp
je
ja
das
xlat
fwait
jmp
lods
and
mov
jp
xchg
pop
lahf
push
sub
jbe
cmp
mov
int
lret
clc
jmp
bswap
and
dec
imul
fisttpl
add
mov
into
sub
out
in
sbb
cmp
sub
repnz
add
inc
mov
subl
pop
call
or
aas
mov
xchg
mov
mov
mov
aaa
or
mov
popa
dec
push
sub
inc
fcomi
jbe
sbb
ja
xor
mov
xchg
int3
hlt
sub
divl
dec
and
js
in
imulb
lods
ret
mov
andb
lret
imulb
les
sahf
push
int
push
addr16
ret
movsl
mov
mov
xor
mov
or
and
xchg
push
adc
jp
xor
jno
imul
mov
stos
cmp
and
das
sbb
adc
xchg
gs
xor
jmp
push
mov
and
mov
fs
xlat
xorl
xchg
xor
scas
push
pop
xor
sbb
pop
pusha
mov
insl
xor
fnstsw
xor
mov
xor
or
sahf
pop
das
adc
cmpsb
loop
jnp
cmp
add
mov
dec
stc
dec
lock
je
adc
rcrl
pusha
mov
pop
lods
lds
add
pushf
testb
jnp
xor
mov
sub
sub
lret
getsec
jg
ret
jge
in
add
lods
inc
lds
inc
pop
mov
in
les
sbb
pop
outsb
mov
daa
push
sub
cmp
je
ret
pop
lods
sub
push
push
call
andl
clc
inc
add
jno
xchg
leave
jmp
add
sahf
pusha
jmp
push
out
xor
lret
cmp
jmp
les
pop
push
fadds
mov
call
cmp
les
orps
push
pop
daa
push
into
xor
testb
mov
imul
fsts
fiaddl
add
std
xor
cli
sbb
scas
sbb
cmp
mov
movsl
push
hlt
lcall
loopne
pusha
mov
lods
mov
adc
out
cld
jne
jns
je
movsl
test
shlb
cmp
sub
add
sbb
daa
push
popa
mov
and
mov
push
xchg
or
mov
mov
fidivs
xor
fsubs
cmp
je
lea
sub
rcrb
or
pushf
imul
fisubl
subl
pop
inc
in
or
fprem
xorl
loope
stos
lcall
mov
xchg
and
pusha
xchg
mov
and
ret
push
push
ret
dec
rcll
push
or
fdiv
cmpl
push
and
pop
fildll
sub
push
add
mov
sbb
xor
add
dec
xchg
or
adc
jne
and
nop
aaa
bound
and
and
sbb
sub
fwait
sub
pop
in
jecxz
and
mov
cmp
ss
pop
pop
pop
xor
inc
pop
push
and
int3
inc
ret
sbb
call
add
lea
sub
enter
add
out
shll
push
jg
cmc
cwtl
dec
push
push
stos
out
lock
sbb
in
inc
je
icebp
xchg
std
sbb
and
inc
lret
hlt
movl
sbb
fisubs
sub
dec
cld
dec
jns
movsb
rolb
ret
mov
rcl
cmp
cmp
mov
xor
jg
cmp
scas
push
sbb
xchg
nop
mov
in
pop
jmp
fcomps
add
and
lahf
and
inc
push
fstl
hlt
cmpsb
inc
sbb
mov
stos
xchg
sub
pop
add
loope,pn
stc
sub
les
rorl
inc
imul
out
cmp
jecxz
jne
xchg
sbb
popa
mov
ret
cmp
mov
sub
ret
xchg
add
inc
xlat
dec
xlat
sub
mov
lea
and
xchg
add
fistl
ret
dec
mov
fdivr
pop
push
mov
mov
movsl
insb
mov
out
movsb
inc
popa
pop
movsb
mov
or
lcall
push
call
pop
aaa
lea
mov
loop
sti
or
cmc
adc
in
int3
add
cmp
adc
das
mov
add
fildll
mov
xor
or
xchg
in
jmp
push
fnstcw
inc
iret
dec
rcll
add
jecxz
shll
inc
scas
lcall
outsb
decb
push
add
aaa
jno
je
lods
scas
mov
lahf
ljmp
jne
int
or
mov
cld
jecxz
jae
pushf
adc
mov
lea
add
fldenv
and
and
pop
cmp
ret
mov
jno
xor
lds
andl
cmp
stos
imul
inc
shr
mov
imul
inc
push
ss
jnp
xchg
sbb
xor
fisubrl
aam
xlat
xor
inc
es
stc
add
sti
loopne
cli
cmpl
mov
push
pop
sbb
into
mov
lds
aas
dec
fcomps
mov
xor
shl
pop
iret
popa
mov
ret
jg
xchg
xor
mov
adc
fcom
mov
sbb
rcl
xchg
adc
das
xchg
das
add
popf
sbb
repz
sahf
int
mov
xchg
aas
ds
jb
xor
cmc
add
jne
adc
imul
xor
jg
push
sarl
adc
aam
and
or
add
popa
std
fsubl
mov
mov
push
jl
jecxz
lret
xchg
sarb
cmp
xchg
cmpl
adcl
mov
ja
adc
xchg
in
ret
mov
movsl
lods
xchg
push
in
gs
scas
adc
or
movsl
fidivrs
ljmp
and
mulb
addr16
out
es
icebp
push
std
es
and
imulb
mov
mov
daa
pop
fcom
jg
es
shll
jnp
xchg
sarb
jbe
or
jle
popa
jnp
cli
leave
repnz
ss
clc
sub
adc
loope
faddp
pop
mov
arpl
sbb
sahf
stos
push
mov
mov
and
stos
adc
fucomip
mov
xchg
repz
outsb
imul
pop
jo
xchg
push
mov
jns
idiv
mov
mov
in
mov
rcrl
sbb
shlb
fnstcw
cmp
cmp
adcb
lahf
scas
inc
lock
sbb
pop
imull
or
call
add
sub
in
neg
mov
mov
inc
pop
adcl
outsb
test
xchg
cmp
and
xchg
lsl
add
in
imul
ljmp
dec
jb
rorl
adc
sarb
sahf
imul
fisttpl
sub
cwtl
ljmp
push
inc
push
das
jmp
ss
pusha
jmp
dec
std
mov
jb
push
lea
bound
pop
clc
or
shll
sbb
or
idivb
test
inc
in
mov
lcall
push
cs
test
subb
inc
push
inc
mov
push
push
sbb
mov
cli
lock
popf
nop
pop
push
ss
or
add
fwait
in
mov
cs
lret
and
lret
or
mov
mov
sub
mov
or
in
xchg
cld
mov
push
test
inc
insl
pop
test
pop
je
fistpll
jle
les
loopne
dec
add
dec
cmp
lret
js
xor
and
mov
dec
mov
inc
mov
ret
xor
cltd
test
ja
shrl
adc
cltd
imul
popf
cld
out
sbb
gs
dec
mov
cld
push
xchg
fs
cmp
hlt
cmp
std
sbb
xchg
nop
sbb
push
fists
xlat
nop
jecxz
fdivs
pop
lahf
and
inc
push
pop
add
pop
ja
jl
cmp
adc
and
or
push
scas
loope
pop
push
dec
pop
mov
loop
xchg
clc
insb
xchg
in
and
icebp
out
push
lret
in
pushf
xor
aad
ljmp
push
adc
mov
test
adc
sarb
data16
fists
dec
mov
or
aas
dec
dec
cmp
push
std
jb
dec
vaddps
sbb
and
sub
mov
pop
push
movsb
ljmp
stos
cld
cmc
les
mov
jl
fldcw
rcll
mov
dec
push
and
es
lods
ret
mov
rcrl
cmpsl
popa
mov
cmp
rorb
inc
xor
sbb
dec
and
xchg
mov
int3
sarb
nop
adc
stos
fistl
xor
sbb
in
leave
jp
out
push
in
or
repz
scas
mov
data16
xchg
rorb
adc
xchg
rorb
pop
jmp
iret
movsl
push
dec
xchg
ret
xchg
cltd
adc
mov
pop
andl
add
push
repnz
nop
rclb
pop
dec
mov
push
test
mov
sahf
sub
out
jle
push
adc
nop
push
inc
fsubs
aam
jb
jmp
dec
dec
pop
or
lcall
dec
fs
lret
ja
arpl
push
mov
js
pop
mov
jnp
scas
add
pop
xchg
xor
andl
scas
jge
pop
leave
loopne
mov
push
pop
cmp
lods
je
data16
cs
jns
outsb
jl
jge
fs
repnz
lahf
fcomp
shlb
stc
cld
aaa
gs
push
int3
aad
pushf
mov
fisubs
mov
lret
xor
loope
out
push
ds
lock
mov
xor
and
out
push
cwtl
in
and
in
cld
xchg
or
les
mov
add
push
sub
adc
xor
in
add
int
cmp
dec
mov
push
outsl
icebp
mov
push
pop
mov
jbe
fs
xor
mov
pop
push
int
nop
dec
mov
jnp
and
rolb
mov
shlb
pop
jge
dec
lret
dec
mov
jg
cmp
ja
jne
or
push
mov
xor
int3
cmp
fidivrs
cs
enter
hlt
call
mov
push
aam
push
pop
rclb
xchg
xchg
jmp
pusha
movsb
sbb
mov
int3
fimuls
push
add
sub
ja
inc
mov
lock
xor
xor
inc
popf
adc
jne
fbstp
mov
aad
mov
adc
pop
insl
leave
hlt
inc
pop
outsb
mov
xchg
lahf
in
pop
rcrb
dec
xorb
pop
arpl
mov
out
add
stc
inc
jge
adcb
es
cltd
mov
mov
int3
ds
sbbb
add
movsb
inc
pop
rolb
stos
jmp
adc
aam
repz
xor
loopne
jmp
testl
mov
sub
test
fcoms
mov
adc
aad
cmp
iret
xlat
push
pop
scas
xor
cmpsl
call
lods
ret
std
mov
sbb
hlt
lock
ljmp
jge
outsb
cmp
inc
mov
and
movsb
inc
sub
lods
bound
out
pop
idivb
in
inc
adc
ss
add
push
or
adc
push
cmp
bound
aad
rolb
loop
stos
das
and
pop
in
mov
xchg
push
ret
addr16
fcmove
sub
mov
das
dec
and
lahf
nop
addr16
pop
or
sar
cmp
ficompl
pusha
lods
subl
pop
push
and
sarl
mov
popa
mov
add
xor
adc
fidivl
cmp
add
and
arpl
mov
sahf
scas
inc
add
ss
rcll
sti
jp
jmp
sub
pop
and
inc
stos
aad
push
cmp
fimuls
gs
dec
jo
push
aam
std
aad
arpl
ljmp
lfs
adc
or
out
inc
push
fmuls
push
sub
dec
dec
adc
mov
in
cld
adc
les
jnp
jbe
adc
xchg
aam
rcrb
mov
ljmp
mov
sub
jl
sti
and
sbb
mov
inc
subb
dec
loop
inc
jne
xor
xorl
ljmp
sub
sarb
mov
in
pushf
or
fucompp
push
inc
jmp
out
add
cmp
sbb
shlb
sbb
std
test
push
cmpsl
iret
iret
sbb
in
dec
movsb
dec
fstpt
rol
movsb
clc
sbb
ret
inc
inc
push
cmpsb
icebp
and
dec
or
gs
pop
movsl
popf
dec
push
cmp
jg
dec
imul
mov
fsts
outsl
sbb
xor
mov
mov
out
dec
inc
cmp
out
clc
xor
jno
pop
aas
sub
aaa
xchg
inc
jo
mov
or
mov
inc
jle
or
xor
push
mov
sub
out
das
lret
scas
stos
mov
and
mov
push
leave
pop
push
sub
int
dec
jg
push
mov
fsubs
nop
stos
mov
xlat
dec
jle
push
xchg
cmp
mov
push
int3
sub
es
pop
xor
loopne
out
mov
xor
testl
inc
cld
pop
jg
mov
stos
and
cmp
jecxz
andl
jp
inc
jg
push
testl
cmpsb
addl
out
jle
faddl
mov
imul
leave
add
lods
add
push
pusha
adc
push
ds
ljmp
fnstsw
arpl
test
dec
mov
mov
cmpsl
xor
inc
lret
cmp
ss
ret
mov
jnp
push
lret
push
aas
pusha
int3
popf
mov
mov
aad
cmpsb
pop
inc
sbb
test
stos
sbb
xchg
xchg
adc
xchg
bound
mov
and
imul
lock
cmp
jecxz
xchg
adc
leave
addb
addb
push
jle
pop
adc
stos
shrl
cmova
leave
les
arpl
je
sbb
std
test
aas
sub
jg
repnz
lcall
or
jnp
push
mov
lahf
loopne
fisttps
rcll
xor
sub
pop
sahf
jp
xorl
fidivrl
jb
pop
in
jp
xor
adc
sbb
dec
adc
pop
sbbl
mov
ror
ss
cmpsb
js
pop
leave
sbb
push
sahf
xchg
sahf
iret
pop
cmp
pop
dec
and
stos
xor
sub
pop
jo
sbb
gs
dec
dec
pop
jg
xor
pusha
and
aas
aam
xor
or
cmp
or
jmp
jecxz
and
cwtl
jno
xor
mov
cmp
mov
push
mov
ds
xlat
cmp
iret
mov
adc
enter
inc
std
test
push
or
mov
sbb
aaa
lds
fisubrl
jno
ret
adc
or
dec
mov
out
jp,pn
push
and
jno
jmp
or
fisttpll
notb
or
jp
cmp
inc
xchg
test
sbb
adc
inc
dec
cmp
cmpsw
aam
inc
std
dec
mov
push
jne
xlat
imul
mov
iret
scas
pop
xchg
arpl
sub
or
cmp
dec
sbbb
inc
shl
inc
inc
xor
imul
push
mov
das
aas
sahf
cmp
mov
out
or
sbb
dec
push
lods
movsl
addl
adc
out
mov
inc
mov
fdivrs
sbb
mov
or
pop
clc
out
adc
lret
out
jne
cmp
add
cmp
int
sarl
out
pusha
lahf
jg
into
dec
xorb
jbe
addb
aam
inc
sbb
dec
insb
jp
xchg
enter
xorb
into
sbb
lds
jo
jg
lcall
data16
lods
xchg
push
push
test
outsl
pop
imull
sbb
xchg
in
sub
rorl
xor
mov
or
call
jle
outsl
test
mov
ds
sti
out
iret
aad
movsb
cmp
add
xchg
pop
repz
sub
jnp,pt
fisubrl
jmp
push
pusha
dec
enter
jo
xor
push
stc
not
mov
ljmp
cmpsl
lds
loope
xlat
in
inc
jne
fdivr
loope
aad
imul
push
sub
cs
mov
shrl
mov
dec
mov
push
pop
fmul
sbb
cmp
inc
lret
xor
mov
test
mov
lods
lock
or
fsubrl
ds
mov
fs
fcom
ljmp
pop
test
adc
fmul
jo
jno
inc
insb
sti
xor
pop
mov
jecxz
inc
dec
pop
add
int
sub
mov
xchg
push
xchg
iret
jcxz
sub
je
push
and
in
aam
cld
cmp
scas
stos
inc
jb
mov
add
les
je
rorl
rolb
push
clc
jl
ret
add
mov
xchg
rorb
add
ret
dec
pop
in
sbb
jo
and
imul
sub
xchg
push
mov
jl
ja
sub
mov
push
scas
cwtl
rol
cltd
repz
aas
loop
aam
push
or
ds
lds
and
repnz
or
cs
mov
cmp
and
cmpsb
and
loop
daa
out
pop
mov
mov
test
out
je
jbe
jmp
pusha
outsl
xchg
hlt
and
decb
rcl
lret
sbb
jno
xchg
pop
movsl
enter
js
cwtl
test
xchg
push
clc
mov
push
ret
sti
mov
push
fsubr
push
dec
add
push
cli
inc
das
gs
out
out
stc
inc
pop
pop
sahf
mov
repnz
and
mov
pushf
inc
leave
ret
cmp
dec
add
subl
xchg
lds
pop
shlb
loopne
orl
or
fsts
jbe
push
sbb
ret
arpl
add
into
ja
scas
inc
testb
stc
lds
out
enter
adc
icebp
vpmulhw
push
dec
imul
mov
in
aad
or
cmp
ds
ja
jnp
push
pop
int
pop
add
scas
orb
repz
aaa
addl
push
and
pushf
xor
mov
add
fistl
aam
and
movsb
pop
jmp
dec
scas
jecxz
xchg
enter
mov
mov
pop
lock
inc
jne
sahf
pop
xchg
ss
add
lret
sbb
out
cmc
mov
test
and
cwtl
xchg
gs
cmc
sub
in
test
pop
add
xchg
add
cmp
in
xlat
xor
jge
and
dec
addb
pop
inc
scas
nop
sub
dec
xor
mov
leave
mov
sbb
das
pop
fcmovb
aad
push
out
mov
push
cli
adc
jge
sub
mov
and
xchg
jp
stc
push
xchg
movsb
push
dec
push
xchg
xchg
sub
xchg
jbe
adc
push
stc
mov
dec
in
inc
loopne
adc
rcll
in
xchg
int
jnp
or
orl
xor
test
shl
pop
sbb
test
or
adc
push
rcll
mov
xchg
std
push
mov
sbbb
push
cmpsb
imul
stos
mov
test
adc
jecxz
jle
jecxz
fstpl
push
lods
sahf
adc
ja
add
dec
leave
mov
adc
bound
lods
push
push
xor
data16
and
fstps
or
aas
or
neg
jg,pt
or
xchg
hlt
pop
insb
mov
xorb
and
pushf
stc
mov
cmp
ret
mov
dec
push
mov
inc
movsb
or
jnp
movsl
add
aad
jl
mov
adc
adc
add
sub
test
fnsave
inc
daa
aas
mov
cs
in
imul
mov
cmc
in
or
push
cmc
xor
nop
or
dec
outsl
pushl
xchg
pusha
pop
push
jmp
out
clc
push
pop
lea
mov
push
fsubp
enter
shlb
sar
mov
std
repz
sub
out
add
cmc
push
gs
js
cmp
les
aas
xor
popf
decl
xchg
loopne
inc
mov
adc
repz
out
xor
loope
sub
inc
push
mov
inc
out
pushf
jb
push
and
inc
sub
add
jb
or
pop
mov
mov
repnz
or
mov
dec
add
leave
push
push
nop
cmp
pop
add
loop
out
xchg
adc
mov
fs
pop
jo
les
lock
lcall
or
xchg
mov
es
adc
push
cmp
jp
test
dec
mov
xor
dec
xchg
or
jae
dec
or
int
ret
sub
shll
icebp
pop
aam
das
sahf
out
repz
or
inc
jmp
push
inc
mov
ret
xchg
push
adc
cmp
dec
cli
rol
sbb
and
lock
testl
sbb
mov
xchg
fisubs
repnz
pop
sbb
movsb
dec
sub
push
mov
push
sub
dec
jg
bound
xchg
leave
pop
xor
jno
cmp
mov
jmp
inc
fstpl
sahf
rorb
stos
push
xchg
testl
or
mov
int
xchg
aam
jbe
divb
and
faddl
xchg
inc
mov
jae
push
jge
loopne
mov
outsb
ds
jno
mov
cwtl
and
mov
lret
mov
jge
or
push
rclb
stos
les
stos
out
and
cmp
imul
sub
clc
dec
mov
push
cmc
add
inc
cmp
sbb
push
test
aam
jecxz
lahf
stos
xor
mov
std
add
in
repz
das
mov
mov
out
xchg
iret
jbe
lea
in
pop
loop
lods
frstor
add
jg
ja
mov
pop
adc
clc
pop
sbb
fdivs
cld
stc
lcall
inc
sub
insb
xchg
add
pop
subb
gs
data16
ret
cmpsl
add
sub
or
sub
leave
jmp
loop
cmp
movsb
push
mov
xchg
pop
mov
jle
nop
movsb
sub
pop
mov
out
arpl
lret
insl
xor
xlat
into
xor
add
dec
mov
imul
push
pop
cld
adc
push
jmp
loope
dec
add
xchg
fmuls
iret
rcr
or
xchg
add
ficomps
shrb
push
mov
scas
stc
movsb
mov
ljmp
adc
rorb
je
mov
fsubs
sbbl
aad
loope
icebp
xor
cs
lret
push
outsb
and
push
insl
add
mov
push
jae
push
cli
shrb
lds
ret
std
xchg
fsubs
pop
pop
rcll
mov
inc
clc
ja
lcall
not
stc
mov
or
in
dec
fists
push
xor
jnp
pushl
push
mov
jne
xor
or
inc
insb
push
loope
shrb
movsl
push
push
aam
xchg
and
pusha
xchg
cmp
dec
mov
cmc
mov
jg
aas
inc
ja
dec
js
test
xchg
push
repnz
dec
addl
dec
pop
or
nop
xor
mov
pop
jnp
push
adc
mov
sub
outsb
sahf
mov
adc
testl
int
pop
leave
mov
js
std
jne,pn
xor
out
add
ds
mov
scas
or
xchg
je
sub
roll
mov
das
int3
adc
movsl
das
sarb
ret
mov
xchg
int3
mov
fidivrl
pop
dec
mov
and
pop
aaa
and
push
inc
jp
sub
and
movsl
fstpl
ret
aad
lret
lods
mov
cmp
mov
mov
mov
and
pushf
clc
mov
loop
xchg
jge
jmp
inc
push
or
pop
push
sbb
mov
sahf
rorl
fisubs
mov
mov
mov
popa
stos
repnz
adc
push
sbb
xor
ja
mov
pushf
insl
test
add
enter
int
pop
ret
les
out
cmp
xor
or
and
mov
jbe
and
test
mov
pop
shrb
bound
cwtl
sub
push
ret
enter
sub
flds
fisubrl
cltd
aad
int
push
out
ss
imul
scas
fldcw
and
dec
hlt
pop
push
mov
xchg
data16
lret
out
xchg
outsl
test
mov
mov
rcll
dec
pushf
xchg
test
ret
xchg
call
dec
push
cltd
ljmp
hlt
jmp
or
mov
dec
aaa
pop
aam
es
leave
jmp
lock
add
imul
movsb
xor
xor
jl
push
add
fistps
push
xor
stos
movsb
jns
inc
mov
and
xchg
and
adc
add
ret
sub
popa
int
mov
sahf
xchg
js
subb
push
aas
fsts
push
cmp
inc
insl
fxch
cmpsb
pop
test
push
lret
aam
cmovge
fmull
mov
sub
inc
xchg
loopne
lret
mov
sbb
mov
ret
iret
sbb
je
ret
jl
inc
into
push
rclb
into
push
push
xchg
mov
fldcw
in
rorb
push
pop
cmp
cmp
pop
in
insl
or
push
dec
lcall
inc
or
les
test
sbb
inc
jle
decl
fs
inc
mov
inc
cmp
pop
call
outsb
mov
movsl
scas
in
bound
jnp
fildll
in
popf
cld
jns
insb
push
in
enter
inc
push
push
stos
into
in
add
jle
leave
in
subb
xchg
ss
rcl
add
add
cld
mov
insl
addr16
cli
inc
aad
orl
loopnew
mull
arpl
inc
clc
aad
enter
cmp
je
mov
repz
stc
or
dec
adc
dec
cmpsb
jmp
clc
and
dec
lea
add
iret
fdiv
out
xor
inc
xlat
outsl
dec
mov
or
loop
clc
adc
scas
loopne
lea
ret
ljmp
int3
xor
int
inc
subl
insl
mov
shlb
sarl
dec
mov
push
jo
pop
es
xor
in
inc
data16
mov
add
rcll
dec
outsl
rolb
stc
push
jb
inc
out
fistps
jmp
dec
mov
orl
scas
lock
incb
mov
mov
bound
push
out
or
pop
sub
test
push
cmpsb
test
repz
test
inc
lds
mov
mov
fsubp
inc
mov
jns
cmpsl
xor
je
pushf
fstpl
cmc
sub
mov
push
xchg
ljmp
mov
jge
aas
test
pop
test
insl
cmp
clts
mov
idivb
adc
fnstenv
xor
xor
clc
jae
push
mov
cmp
popf
push
outsl
lret
rep
mov
movsb
sub
lods
add
xchg
flds
cmpsb
push
out
add
add
mov
insl
adc
inc
stos
mov
mov
cmpsl
lahf
aas
push
imul
int
sub
sbb
aam
ret
sub
push
imul
mov
adc
adc
test
adc
int3
lret
std
or
aaa
mov
and
cmp
mov
lods
mov
jmp
push
push
pop
lods
inc
inc
pop
pop
mov
pop
fnstenv
sbb
clc
fnstsw
add
mov
inc
dec
ret
dec
orb
add
cmp
xchg
mov
and
les
call
inc
out
inc
sbb
inc
insb
cmpsb
test
cmp
xorb
xchg
add
std
sub
ja
pushf
sbb
xchg
mov
push
dec
ja
in
int3
loop
push
lahf
push
dec
adc
xchg
pop
sahf
sub
in
sub
inc
mov
int
lahf
leave
dec
popf
and
dec
jnp
jecxz
jle
lea
mov
jecxz
out
nop
mov
iret
cmp
dec
xchg
push
sub
inc
xchg
jbe
cmp
jmp
ficomps
xor
or
push
jg
push
arpl
iret
in
aaa
js
imul
xchg
jle
lret
push
call
xor
mov
lret
xorl
fsubl
addr16
daa
leave
shlb
xlat
mov
pushf
or
sub
or
hlt
insl
sbb
cli
and
push
out
or
mov
push
mov
or
jnp
pop
mov
pop
mov
push
arpl
mov
pop
dec
mov
aaa
je
cs
fidivl
aad
jno
mov
popf
sti
add
jl
xor
mov
jg
xor
sbb
adc
dec
xchg
popa
pop
in
sbb
cmp
xchg
mov
lret
loop
loop
dec
in
cltd
xlat
leave
lock
or
ud1
dec
lahf
jecxz
sbb
imull
shrb
stos
push
not
ds
jl
jle
repz
push
cmpsb
in
mov
inc
in
pop
xchg
sub
push
add
rcrb
push
cwtl
nop
or
jecxz
jp
jae
clc
leave
insl
or
ret
ljmp
inc
mov
or
into
dec
inc
jne
daa
push
int3
call
lds
push
lock
shrb
add
lcall
sbb
xor
nop
fimull
pop
sbb
xor
pop
in
inc
movsb
jb
pushf
jmp
push
addr16
sahf
pop
int3
daa
jne
xchg
imul
sarl
shlb
sbbb
dec
arpl
mov
call
push
lock
sbb
sub
loopne
sbb
push
rol
xchg
in
hlt
add
mov
dec
dec
lods
pop
push
int
lock
sbbb
pusha
idivl
mov
rcrb
xchg
jecxz
dec
movsl
imulb
mov
push
leave
cmpsl
fucom
mov
add
mov
xor
mov
mov
ja
mov
test
dec
xchg
push
sbb
popa
mov
add
inc
xchg
lahf
and
call
jo
scas
fstl
xor
and
xor
push
cmpsb
in
pop
shrb
jle
loop
fidivs
push
jnp
mov
mov
dec
mov
cmp
adc
pop
mov
push
xchg
pop
and
std
loopne
add
sbb
je
push
mov
enter
adc
mov
movsb
das
jb
add
pop
repz
lcall
into
dec
inc
shll
je
cmc
lods
pusha
pop
or
rclb
push
cs
lret
out
xor
arpl
cmp
cmp
jb
bound
lock
mov
cld
lea
loop
mov
aam
ss
or
push
cmp
sbb
imulb
jae
push
push
ja
jle
scas
jp
mov
dec
movsb
xchg
mov
adc
mov
sahf
popf
jnp
mov
test
xchg
pop
sub
cwtl
stos
addr16
out
sbb
jns
mov
fistps
das
std
xchg
sbb
lahf
cwtl
inc
test
leave
divl
jle
rcl
je
pop
adc
or
xor
insb
daa
mov
push
push
test
jne
inc
ja
xor
jg
sbb
or
xor
xor
scas
sbb
es
leave
sbb
mov
push
xchg
push
adc
pop
push
mov
sub
fldl2e
cmc
inc
xchg
push
and
pop
iret
xlat
sahf
add
frstpm(287
adc
in
insb
stc
pop
cltd
jbe
mov
dec
test
cmp
leave
inc
and
push
mov
aaa
mov
fwait
dec
and
inc
loop
pop
ja
outsl
hlt
cmpsl
frstor
psllw
cmc
push
sbb
movsl
sbb
xchg
inc
xor
xchg
dec
outsl
fidivrl
mov
jae
dec
test
hlt
fs
sarb
in
out
xchg
movsl
sti
mov
cwtl
stos
push
cmp
jno
dec
mov
popa
mov
add
push
repnz
jbe
xor
mov
addb
mov
adc
dec
faddl
push
cmpsb
jg
xchg
mov
andb
jns
shlb
insb
cltd
loop
pusha
mov
addb
js
mov
cmp
push
sub
mov
mov
cmc
cs
sub
int3
repz
or
xchg
icebp
ret
mov
popf
bound
sub
pop
mov
sub
cmpsl
jno
sub
xchg
push
addr16
into
jp
jge
inc
jmp
push
stos
rcl
cmp
dec
out
test
insb
fisubl
call
fmulp
lds
clc
jb
je
xor
jp
cwtl
xor
mov
repnz
lcall
je
inc
mov
add
pop
xchg
mov
xor
sbb
fs
adc
pop
mov
mov
jle
sbb
data16
test
mov
in
mov
mov
aam
out
push
jmp
lds
mov
fwait
mov
cli
sahf
test
push
or
cmp
push
shll
mov
into
int3
mov
out
mov
and
cmp
inc
insl
adc
cltd
push
jo
std
adc
jmp
sub
push
adc
mov
mov
mov
in
scas
mov
mov
imul
jl
adc
xchg
cmp
cmp
stc
or
test
inc
fcomi
aad
loopne
and
pop
adc
jo
mov
push
int
lock
xchg
ss
ret
outsl
or
loop
test
es
sub
jns
lods
cmp
imul
push
push
shrl
orb
outsl
enter
aad
mov
sub
stos
imul
in
jl
mov
mov
fsubr
call
cmp
fstpt
push
outsl
scas
wbinvd
push
and
in
movsb
notl
jg
add
jle
or
cltd
cmp
testb
or
sbb
xchg
movsl
mov
aam
adc
insl
std
mov
dec
push
sbb
mov
aam
inc
cs
dec
rcrl
sbb
stos
push
jo
mov
leave
cmp
push
mov
cmp
outsl
notl
ja
adcl
pop
dec
inc
fs
or
and
pop
iret
jae
rcrb
dec
jne
add
shll
ds
rorb
lcall
popa
cmp
mov
mov
or
xlat
sub
pop
xor
cmp
insb
std
adc
shll
add
inc
fcmovnu
test
xchg
push
jmp
and
rcl
sub
popa
es
dec
out
sub
loope
and
sbb
jmp
push
stos
arpl
add
adc
and
cmpsl
rcl
loopne
sub
pop
popf
aas
test
fadds
mov
and
lock
and
cmc
dec
sub
or
lahf
inc
sub
cmp
ret
lahf
xchg
hlt
fistpll
out
pop
cmpsb
std
stc
fucompp
dec
es
bound
push
lods
pop
test
lret
stc
xchg
std
dec
sub
push
sub
insb
adc
sti
jo
iret
or
mov
imul
int3
nop
xor
jns
or
bound
or
cmpsb
pop
xchg
lret
int3
mov
cwtl
movl
lock
repnz
and
mov
mov
mov
jae
lcall
mov
repnz
aad
mov
popf
push
xchg
and
mov
jge
ret
nop
dec
subl
or
sbb
shrl
mul
dec
inc
or
sub
fidivrs
mov
cmp
xchg
popf
inc
xchg
lcall
dec
daa
mull
pop
fisttpl
xchg
pop
jmp
xchg
pop
lods
add
imul
scas
adc
mov
jo
push
cmp
inc
loop
lds
mov
inc
cli
ficomps
mov
cmp
icebp
push
in
lret
jnp
push
es
sbb
jbe
or
iret
xlat
mov
push
int3
cld
lret
sbb
les
fwait
adc
jp
int
pop
stos
push
nop
mov
pushf
cmp
negb
test
fcomps
cwtl
js
mov
sub
push
xchg
scas
cmpsl
insl
mov
hlt
add
mov
pusha
faddl
fisubs
cli
repz
inc
jns
shll
mov
xor
pop
xrelease
and
adc
push
and
dec
fimull
push
sbb
dec
mov
and
sbb
sub
movsb
icebp
xchg
xor
or
int3
inc
inc
inc
insb
sub
loope
and
xchg
xor
in
out
in
cli
add
xchg
scas
jle
mov
repz
jp
add
fdivs
or
das
repnz
out
lods
and
adc
dec
sub
mov
pop
in
fwait
arpl
push
inc
xchg
push
mov
rcl
lock
sub
adc
and
dec
popl
xchg
cli
jns
dec
mov
pop
sub
dec
pop
cmpsb
call
clc
aaa
imul
mov
loope
in
sub
add
jo
ljmp
repz
add
mov
mov
stc
inc
jl
clc
bound
lea
cmc
popa
mov
ss
cmc
iret
lods
cmp
inc
repnz
lods
ss
les
jae
adc
movsb
sub
popa
push
push
inc
roll
cld
pop
pop
and
and
dec
push
mov
push
inc
inc
test
imul
xchg
xchg
sub
inc
fldcw
sbb
call
fimull
add
add
arpl
xchg
lahf
xor
out
and
repnz
rclb
test
hlt
je
pushf
lock
mov
in
fcmovnu
jns
cmpl
mov
lds
ja
push
mov
jecxz
iret
lea
repnz
lock
jb
sub
jp
mov
shl
clc
sub
sbb
pushf
mulb
jp
ja
lds
mov
mov
xchg
ljmp
ja
inc
repnz
mov
add
lock
or
push
idivl
rclb
daa
xor
xchg
push
loopne
sbb
movsl
dec
lea
xchg
pop
pop
sbb
xor
scas
in
sahf
cmpsl
cmp
jg
ja
cli
out
xchg
call
push
jnp
sbb
daa
push
pop
rorb
add
lds
ja
or
addr16
pushf
pusha
push
into
and
and
imulb
pop
repz
insb
movsb
out
aad
aas
mov
loopne
adc
dec
add
loope
add
xchg
mov
jb
arpl
je
repz
dec
fsts
cltd
cmp
fldenv
mov
divl
push
adcb
adc
jp
sar
je
stos
xor
jns
cwtl
fwait
or
rolb
add
insl
cwtl
push
std
mov
mov
pushf
and
xor
and
fsubrl
scas
adc
insl
push
jg
ss
outsl
adc
clc
or
scas
call
mov
cmp
je
sbbb
jns
cld
gs
push
aam
dec
push
out
cld
inc
jl
shll
adc
mov
pop
mov
mov
jne
mov
in
lcall
cmc
cmp
js
movsb
mov
arpl
xchg
add
and
or
jmp
incb
hlt
inc
mov
popa
lcall
dec
pop
push
sbb
std
cltd
mov
cmpsl
dec
lcall
fldcw
pop
mov
jne
test
xchg
or
and
repz
shl
dec
or
add
and
sbb
inc
jg
sub
sti
xlat
and
out
push
push
adc
mulb
push
and
movsb
imul
sbb
das
pop
xlat
mov
int
cmc
cli
jae
dec
mov
sub
icebp
sub
mov
dec
es
or
sub
add
movsl
mov
fiaddl
mov
or
mov
add
shl
adc
push
add
fcmovbe
mov
xor
cmp
xchg
lds
mov
out
push
add
add
cmp
or
gs
sbb
pop
fwait
ret
jg
jnp
scas
stos
test
jmp
movsl
mov
adc
add
inc
dec
fidivrl
mov
int3
in
xchg
jnp
xchg
daa
sar
sbb
idivl
fmuls
ret
cmp
sbb
xchg
lahf
in
das
lret
cmpsl
ljmp
jmp
and
jmp
mov
add
or
lods
cmc
stc
or
iret
andl
lds
pop
pop
push
fstp
fdivr
icebp
xor
popf
xor
sub
and
cld
sbb
inc
cmpb
lcall
mov
dec
jg
test
mov
iret
cmp
or
mov
pop
xorl
stos
mov
pop
stos
insb
data16
cld
aad
pop
push
ds
push
shl
or
stos
mov
xchg
jbe
ffree
lods
pushl
push
iret
pop
sbb
popa
repnz
mov
xor
cmp
in
ja
xchg
out
lcall
pop
sub
xchg
xor
stos
rcll
or
mov
and
fdivs
and
aaa
negb
fwait
mov
add
popf
lods
pop
jg
lret
jnp
mov
dec
jnp
mov
icebp
inc
in
out
sub
sub
and
inc
loope
xor
movsb
adc
fiadds
gs
testb
aam
mov
dec
das
pop
sub
outsb
push
pop
add
mov
jmp
cmp
out
dec
pop
push
in
or
jle
xchg
mov
ss
faddl
xchg
pop
pop
push
dec
dec
mov
ja
sbb
lahf
pusha
aam
fldcw
mov
rcrb
maxps
and
cltd
imul
mov
jnp
out
int3
outsb
xchg
xchg
cmp
sbb
mov
sti
in
jl
jno
ja
arpl
or
loopne
xor
jle
cmp
lock
mov
lods
push
test
rcrb
das
sub
scas
mov
sbb
inc
cmp
ss
test
sbb
pop
jae
pop
inc
mov
in
ret
jno
pop
xchg
aam
jae
fists
push
into
adc
xchg
mov
sbb
out
aas
add
jmp
leave
pushf
xor
adc
arpl
out
sbb
mov
scas
adc
or
hlt
scas
inc
fldl
jge
push
cli
lea
stos
daa
add
jmp
insl
adc
mov
out
cld
mov
sbb
sahf
test
in
icebp
aas
es
loop
loop
cmp
testl
mov
mov
xor
insb
scas
dec
sbb
xor
pop
sti
push
in
imul
pop
ret
call
dec
mov
cli
imul
and
loop
xor
stos
push
mov
pop
ds
xchg
push
xor
jno
and
shrl
cmp
or
mov
ljmp
and
outsb
aad
or
mov
jge
call
sbb
pop
push
dec
pop
incb
ss
popa
jge
cmp
push
mov
mov
hlt
not
jae
out
sub
dec
arpl
rorb
jo
sub
sbbl
and
in
cmpsl
sbb
add
dec
inc
fstpl
pop
shll
ds
xchg
xchg
lcall
xor
sbbl
inc
jle
push
icebp
inc
push
outsb
outsl
aaa
inc
dec
mov
xor
sub
data16
sbb
dec
test
test
and
mov
mov
popa
stc
xchg
lods
jne
jg
negl
adcb
gs
sahf
repz
outsl
dec
or
mov
aad
mov
insb
or
lret
pop
inc
mov
ljmp
int3
xchg
mov
pop
push
mov
jae
pop
daa
xchg
movsl
pop
clc
pop
imul
xor
cltd
dec
les
cmp
cld
or
cmpsl
and
pop
xchg
fisubrl
jge
pop
push
sub
push
in
ss
jge
mov
enter
or
fs
adc
fwait
or
cs
mov
or
leave
lds
pop
mov
hlt
inc
sub
pop
xchg
scas
scas
cmpsb
push
jge
out
xor
faddl
enter
mov
daa
xchg
lods
add
out
std
dec
inc
aam
mul
test
add
ret
pop
idivl
inc
sti
xchg
push
jg
dec
dec
ja
into
sbb
cmp
push
gs
in
ds
inc
movb
dec
and
mov
jmp
vcvtsi2sdl
mov
dec
dec
imul
mov
fildl
loop
jecxz
sub
xchg
mov
gs
sub
stc
push
mov
arpl
xchg
jmp
xchg
je
testl
loop
push
shll
andb
jo
nop
out
loopne
fs
mov
fdivrs
fnstsw
mov
inc
test
lds
add
bound
inc
push
mov
out
cmpsl
addr16
jnp
inc
jno
movsb
cmpsb
mov
cwtl
push
movsl
adc
mov
pop
sub
ljmp
sbb
add
xlat
jmp
mov
sbb
scas
add
mov
fistpl
sbb
int
out
test
mov
push
daa
dec
jmp
aaa
dec
sahf
and
push
jecxz
add
jb
lds
push
mov
mov
sbb
jne
shlb
xorb
std
call
in
xchg
cmpsl
lcall
mov
scas
dec
xor
aaa
leave
psadbw
cmp
inc
pop
push
pop
clc
loope
mov
xchg
push
mov
pusha
cmp
dec
xchg
imul
mov
loop
mov
dec
into
mov
rolb
adc
sahf
push
dec
inc
clc
push
push
fnstcw
mov
imul
pop
loope
push
jg
in
gs
test
push
in
mov
pop
in
mov
stos
pop
cmp
test
adc
clc
js
andb
push
fs
mov
inc
aas
pop
mov
sbb
and
out
cmp
mov
call
inc
rolb
cli
ret
ljmp
dec
push
xchg
popf
mov
mov
and
jo
fstpl
xchg
xchg
sbb
and
mov
je
gs
pop
repz
out
inc
aaa
xor
mov
adc
fistl
stos
cmpsl
sub
push
pop
fucom
mov
emms
decb
add
pop
sub
push
mov
sbb
jmp
iret
scas
popf
mov
in
fidivrs
outsl
lahf
mov
imull
inc
popf
and
mov
cld
mov
loop
and
hlt
push
pop
mov
rcl
jb
stc
cmpb
clc
ljmp
stc
daa
stc
es
mov
or
icebp
popf
ficomps
call
mov
out
popa
mov
xchg
lods
cmp
stos
addr16
jp
cmp
sbb
jg
shrl
fcmovbe
xchg
jp
sahf
push
imul
lcall
sbb
jecxz
stc
lahf
push
mov
push
xlat
xchg
in
cmp
xor
push
sbb
and
jmp
dec
cmp
sbb
mov
pushf
scas
in
cwtl
xorb
test
addr16
xor
sub
mov
out
cmpsw
jp
cmpsl
negb
ss
ficomps
mov
jb
sbb
mov
push
adc
jmp
sbb
inc
cmp
inc
mov
jecxz
cmp
mov
loope
lds
add
andb
push
arpl
les
scas
xlat
pop
cmp
cmc
xchg
jmp
or
jne
push
inc
inc
and
iret
xchg
jo
add
shrl
bound
rcrb
adc
sbb
lods
stos
inc
les
stc
testl
out
xorl
add
adc
sar
add
aas
mov
into
sbb
push
push
rcrl
sub
popf
inc
sbb
or
fiadds
mov
clc
mov
jcxz
loop
out
sbb
dec
cltd
cmc
shrl
inc
add
ss
mov
inc
in
and
sbb
mov
mov
pop
sbb
out
rcll
bnd
mov
xchg
mov
jle
sbbl
jp
dec
in
in
sub
adc
sbb
xchg
pop
mov
add
lods
adc
loope
aad
lods
pop
in
shr
rcrl
repnz
adc
mov
sub
pop
or
or
xchg
mov
dec
lret
xchg
hlt
push
xor
pop
call
adc
push
out
out
repnz
mov
add
add
pop
fcmovnbe
dec
pop
lods
fidivs
aaa
out
adc
adc
cmp
pop
scas
fs
pop
cmp
mov
inc
xor
in
loop
cmpsw
iret
mov
push
mov
fisubs
out
push
repz
icebp
pop
mov
repnz
push
ret
fldl
daa
shlb
jle
aas
mov
mov
daa
and
das
mov
mov
addr16
fidivrs
lock
sarb
xlat
pop
test
lods
out
int
add
dec
das
lcall
inc
xlat
es
mov
sub
scas
add
pop
icebp
mov
add
and
dec
jle
fcoms
gs
add
not
jp
pushf
fnstsw
add
rorl
and
jge
mov
sub
ja
sub
das
mov
push
outsl
and
repnz
mov
repnz
test
push
lcall
inc
aaa
icebp
xchg
cltd
jecxz
insl
xchg
cmp
shrb
rcr
pop
stc
pop
mov
pop
xor
xchg
sub
sbb
lret
xchg
xor
xchg
jbe
in
or
and
xor
cmp
andl
mov
movsb
jecxz
out
xor
lds
fdivl
jmp
dec
ljmp
add
loop
mov
test
jge
jo
repnz
ror
mov
mov
xor
jb
cltd
jb,pt
or
fdivrl
out
pop
adc
into
lahf
sbb
dec
mov
and
ret
xchg
imul
mov
gs
dec
and
or
inc
movsl
jmp
test
insb
lea
int3
shrb
dec
out
shll
dec
pusha
mov
push
jnp
nop
xchg
jmp
jb
push
mov
stos
xchg
mov
out
dec
xor
scas
lret
cmp
rcrl
xchg
mov
add
xor
insl
scas
push
in
pop
or
cmpb
xor
ss
add
popf
cmp
dec
and
sbb
mov
mov
pop
mov
sahf
push
jg
ret
nop
push
lahf
andl
jnp
xor
push
std
aaa
lret
arpl
leave
movsl
out
mov
cltd
xor
dec
xchg
mov
jge,pn
fs
jnp
push
xchg
xchg
nop
mov
cltd
and
push
outsb
aam
ret
cwtl
lret
mov
xor
rorb
and
mov
std
scas
movsb
aad
jg
pop
fiadds
pop
mov
cli
cld
aas
out
ss
xor
fcoms
in
das
cmp
and
xchg
rcrl
or
pop
repz
scas
sbb
mov
fwait
pop
fldcw
and
cmpsl
and
mov
dec
xor
and
or
loope
data16
es
adc
cwtl
in
xchg
add
pop
subb
mov
cmp
aaa
add
neg
movsb
cmpsl
push
ficoms
js
xor
mov
lock
ja
or
data16
cs
mov
cld
mulb
jecxz
mov
pop
lret
cld
bound
xor
sub
int3
xchg
jb
jno
xor
mov
mov
scas
pop
loop
test
jge
mov
sti
add
adc
fwait
mov
shl
and
in
adc
aas
imul
insl
push
xor
mov
mov
jae
rcr
dec
and
cmpsl
mov
in
nop
dec
and
adc
jmp
rcl
and
sarl
or
mov
fnstenv
scas
mov
xchg
test
ja
jge
sub
sarb
es
add
fcoml
mov
in
or
xor
mov
dec
enter
arpl
call
mov
ljmp
add
fists
out
inc
fsubr
int
rorl
adc
lock
dec
fnstenv
out
test
out
push
add
and
test
inc
push
add
and
in
jb
call
push
inc
or
sbb
sub
inc
repnz
jne
sar
mov
xor
iret
aad
xchg
dec
pop
daa
push
mov
mov
loopne
inc
stos
inc
pop
push
inc
xor
int3
xchg
cs
sbb
out
popf
jle
rorl
aas
sub
sti
xor
xchg
pop
mov
adc
or
jbe
xor
jecxz
shl
lods
je
ljmp
jp
rcll
pusha
sbb
adc
cmpsl
aad
lret
sbb
rorb
sub
stos
insb
stos
mov
sbb
lahf
in
sbb
pop
mov
and
ret
iret
lods
and
outsb
sub
popa
adc
rcll
dec
xchg
cmp
push
int
imul
push
mov
adc
out
sbb
mov
dec
cmc
rorl
mov
pop
sub
jae
ror
xlat
push
xlat
pop
cltd
jae
dec
cld
scas
sahf
push
pop
push
pop
lea
fadds
arpl
mov
cmp
scas
popf
pop
and
sub
jno
dec
add
push
clc
out
xor
mov
into
repz
sahf
in
orb
cmp
repnz
or
add
popf
loopne
inc
jne
sbb
pushf
xor
dec
add
rcrl
xchg
pop
fcmovu
push
dec
push
jmp
mov
mov
repz
inc
push
outsb
lcall
mov
inc
cmpsb
xchg
jnp
loop
push
fdivs
outsl
mov
aaa
popf
fisubl
xchg
jle
sbb
or
or
push
call
dec
mov
or
xor
xchg
pop
fsubrl
cwtl
sahf
mov
das
int
inc
inc
iret
out
cmc
in
adc
jb
cmc
mov
fs
push
std
gs
sub
pop
out
aam
jb
fmull
jae
or
sbb
fs
into
sahf
popa
mov
jb
ss
fsts
push
pop
dec
inc
fcomps
mov
mov
xor
pop
mov
dec
outsl
dec
cmp
cmc
inc
cli
das
cmc
pop
shrb
push
outsl
mov
push
dec
lea
pop
into
mov
pushf
push
pop
mov
mov
nop
push
cld
sub
dec
stos
jno
stos
xor
testl
xor
xor
xchg
cli
ljmp
adc
sbb
lods
cmc
push
cmp
cs
mov
cwtl
pop
inc
push
stos
into
inc
sahf
add
dec
in
loopw
prefetch
or
sub
lock
mov
mov
call
mov
das
jno
pop
divb
adc
test
daa
sbb
cmp
xor
adc
addl
jnp
and
mov
jb
into
daa
sahf
dec
icebp
pop
hlt
push
dec
add
jno
dec
xor
cld
sub
dec
adc
out
sbb
jns
lods
mov
je
les
movsb
cmpl
push
in
adc
cmp
and
jo
cmpsl
cmp
outsl
aad
shrb
xor
cwtl
lods
gs
repnz
stos
lea
or
sbb
cmc
iret
cmp
adcb
data16
repz
cli
leave
push
sarl
adc
push
mov
outsb
pop
test
adc
into
xor
mov
scas
sub
adc
mov
jae
push
sub
xchg
mov
shlb
popa
arpl
cmpsb
pop
or
out
pop
cld
sub
sbb
ja
cmpsb
scas
imul
shrl
test
rorb
mov
push
pop
inc
cmpsl
or
sar
xchg
or
and
cmp
jno
and
je
pop
jo
out
fmuls
stos
mov
js
dec
sarl
clc
daa
cmp
xor
out
pop
movsb
dec
ds
mov
dec
pop
outsl
mov
imul
mov
roll
je
cmpsb
pop
xchg
cmpsl
iret
shll
int
jle
mov
test
jg
sbb
imull
lods
mov
push
add
jbe
mov
fs
and
sbbl
jle
sysexit
pop
mov
ds
adc
xchg
jle
ds
ss
xor
pusha
movsb
mov
subb
loope
inc
jae
cmp
test
into
loop
pop
cmp
insl
je
sbb
int
scas
je
je
and
cmp
xlat
xchg
lea
inc
fcompl
sarb
loopne
cld
rep
movsl
and
fucomp
pop
xor
lds
or
addr16
mull
out
scas
ljmp
mov
or
xchg
xlat
fisttpll
fsubrp
je
mull
xchg
or
ret
xchg
in
sahf
fwait
sub
fcompl
rcrl
cwtl
ljmp
pop
call
mov
fdivrl
mov
mov
int
xchg
fsubrs
mov
rolb
cmp
mov
lret
int3
jge
test
jns
mov
xchg
lods
push
repz
call
jle
jnp
mov
or
pusha
fisttps
mov
jae
stc
cld
jge
icebp
dec
out
mov
jg
adc
pop
movb
in
push
out
idivl
and
outsl
inc
std
lds
sti
lea
dec
lret
aam
nop
in
mov
fdivrp
mov
shrb
xchg
inc
sbb
sbb
lods
fsts
mov
xor
adc
and
jne
jnp
jne
inc
dec
fmull
sub
lret
lahf
and
or
lret
or
stos
xchg
clc
loopne
lock
popa
sbb
das
hlt
jl
pop
lods
imul
orb
inc
mov
dec
lods
int3
cwtl
gs
stos
rcrl
iret
and
mov
sbb
mov
stos
fs
mov
lods
xchg
outsb
andl
ror
inc
enter
mov
cmp
push
lea
jmp
xor
xchg
in
pusha
inc
jb
jecxz
jg
ljmp
popa
out
ja
ss
jecxz
push
clc
add
xchg
sbbl
add
and
rclb
cmpsb
mov
or
jbe
pop
pusha
addb
stc
lods
test
and
or
sarb
movsb
in
outsb
xor
xchg
cmp
cmp
sub
sub
lcall
out
sbb
mov
push
pop
sub
adc
ficoms
pop
inc
and
pop
add
or
dec
stc
scas
cmp
and
xchg
iret
fbstp
xor
dec
sub
lock
in
repz
cmp
cltd
xor
lcall
jb
adc
push
cmp
inc
sbb
insl
sarb
adc
mov
lcall
scas
xchg
inc
xchg
inc
stos
pinsrw
fcoms
sbb
ret
jbe
pushf
pop
imul
push
push
mov
lret
sbb
decb
and
jns
mov
fstpt
and
xchg
and
lock
loop
or
cld
pop
fcmovnu
push
lahf
add
sub
cs
lcall
push
pop
xor
pop
dec
mov
mov
mov
lahf
mov
push
push
sarl
leave
lcall
push
pusha
or
adcl
or
nop
cltd
xor
or
enter
notl
push
aam
inc
jl
jb
lcall
push
or
aaa
mov
and
lahf
sub
dec
shll
jge
dec
cmpb
in
jno
dec
jnp
push
movsb
mov
mov
imul
xchg
fidivrl
xor
insl
jb
and
mov
fistl
leave
test
loop
aad
cmp
jg
data16
sub
pop
inc
rorb
stos
push
and
int
js
addr16
pushf
out
mov
sub
and
pop
fmuls
movsb
mov
ja
pop
les
leave
dec
cmp
fcomps
mov
xor
xsha1
cmpsb
into
jae
insl
or
pop
pop
mov
jge
push
or
int
jge
or
push
sbb
sbb
outsb
push
cwtl
adc
mulb
xchg
cltd
sbb
lcall
mov
and
arpl
out
dec
mov
xchg
pusha
int3
test
lds
adc
std
insb
xchg
popa
mov
pusha
ljmp
mov
hlt
mov
cmpb
daa
and
mov
daa
xlat
inc
loop
mov
in
cmp
imul
pop
inc
test
or
stos
stc
test
insb
and
push
xlat
add
mov
iret
imul
mov
jl
adc
mov
adc
mov
inc
jge
loop
stos
aam
sbb
cmpsb
ds
dec
sub
sbb
and
cltd
into
sbb
fistpl
xchg
xor
add
xor
cmc
cmp
xchg
outsl
mov
pop
out
sub
cli
xor
fmul
mov
mov
or
jne
bound
movsl
scas
mov
in
loopne
fstpt
sbb
sub
push
mov
adc
sub
cmc
sub
enter
loope
out
push
loop
stc
pop
dec
adc
mov
and
dec
lcall
pop
mov
xchg
dec
lret
or
fimull
jg
out
mov
pop
adc
sub
jae
xchg
push
jg
cs
inc
xor
mov
adc
imul
dec
or
test
pop
mov
or
jl
xlat
jno
push
xlat
jo
dec
shll
add
xor
imul
mov
call
pop
imul
repz
push
fwait
sub
inc
or
xor
mov
notb
lret
ja
push
adc
out
lea
jne
pop
iretw
and
inc
fiaddl
jge
std
and
lcall
aaa
inc
sbb
aam
mov
adc
lahf
and
xor
add
xchg
rolb
das
add
repz
fdivl
and
popa
cmc
cwtl
xchg
ret
leave
push
mov
push
fs
or
lds
mov
push
insb
cmpb
sub
dec
mov
test
mov
xor
xor
cmp
rcrl
je
inc
jg
mov
jmp
iret
adc
and
or
xor
add
adc
call
cld
roll
lahf
cltd
push
add
inc
aas
xor
test
cmp
pop
dec
dec
add
test
sub
shll
test
jmp
out
fwait
sub
pop
aad
ror
movsb
jp
jb
and
outsb
xchg
pop
xchg
cmp
inc
das
lahf
loopw
xlat
push
insl
pusha
mov
mov
out
xchg
xor
adc
dec
aad
mov
addr16
loop
lcall
pop
jo
jnp
lea
jo
cmpsb
popa
push
mov
test
mov
cwtl
fiadds
imul
inc
loope
movsb
push
out
xchg
sbb
loop
pop
jg
cmp
punpckhbw
mov
sub
je
and
dec
cmp
add
add
mov
jge
cmc
dec
nop
mov
xor
insl
repz
sbb
scas
repnz
cs
ds
mov
mov
test
add
add
xchg
clc
call
inc
cmp
pop
cmp
test
pop
ss
hlt
lock
jmp
cmp
int
mov
ss
incl
mov
fs
in
sub
sbb
ret
out
pusha
mov
pop
xchg
push
pop
sbb
mov
mov
cmp
jnp
inc
mov
dec
aam
add
icebp
mov
jae
inc
push
mov
enter
dec
xorb
ret
cmpsb
pop
out
scas
lret
cmp
mov
scas
and
jle
shrb
pushf
inc
jno
add
jb
mov
or
fisubrl
xchg
and
xchg
xchg
fistps
mov
xchg
cmp
push
jb
lds
dec
out
lret
pop
cmc
mov
sub
stc
or
mov
push
addb
jle
sti
mov
stc
aaa
or
aaa
aad
jne
and
jmp
loope
lds
cmpsb
shll
dec
jmp
shl
fiaddl
push
fs
sbb
fsubs
or
pop
mov
dec
adc
or
icebp
jle
inc
mov
mov
sbb
stc
cmc
popa
xchg
or
pushf
popf
pop
rol
xchg
jbe
xchg
jge
push
and
pop
push
out
addr16
or
and
mov
divps
and
sub
pop
sbb
mov
and
mov
adc
sti
lods
sbb
test
cmp
sub
fidivs
sub
mov
addr16
add
jp
lret
stc
lods
insb
or
mov
mov
adc
jg
pop
and
fldenv
xor
in
jo
imul
inc
lds
push
mov
call
adc
enter
pop
popf
mov
adc
jae
adc
push
lahf
movsb
fldcw
fdivrp
cmp
imul
std
jg
fldl
mov
adc
and
mov
cwtl
push
and
adc
out
addr16
or
dec
andb
and
jle
test
inc
inc
inc
push
mov
insb
lret
xor
pushf
inc
mov
inc
xchg
scas
fimull
fstl
inc
in
daa
int
aas
xor
and
add
or
jae
xchg
cwtl
call
dec
fwait
imull
ret
lea
imul
scas
fs
jecxz
push
sub
mov
dec
out
addl
dec
mov
loopne
outsl
faddp
push
lret
cmp
adc
outsl
lcall
imul
ss
and
aam
pop
add
call
xchg
cmpsl
int3
aad
push
cmpsb
ror
pop
mov
scas
pop
insl
mov
imul
inc
jns
and
outsb
sbb
and
dec
cs
mov
push
sbb
jl
ljmp
dec
pop
bound
stos
inc
pop
ja
test
in
sub
insb
xor
addr16
in
mov
sub
jle
push
cmpsb
push
jnp
inc
mov
mov
cmpb
jle
out
pop
loope
into
mov
pushf
sbb
pop
xor
adc
add
shrb
cmc
jnp
jmp
andb
cmp
jae
repnz
adc
fistl
aas
dec
cs
lods
in
push
cmp
nop
repnz
pop
fwait
lods
xchg
cmp
inc
and
jae
and
jbe
nop
xor
insl
rorl
iret
xchg
mov
mov
mov
lcall
cmp
ret
mov
fstpt
out
jle
rcll
imul
inc
pop
sbb
aaa
sbb
aas
lods
lret
jne
mov
mov
test
xor
inc
inc
push
or
dec
mov
in
sbb
jne
mov
xchg
loop
outsl
popa
mov
adc
call
pusha
mov
add
xor
inc
xchg
pop
push
mov
fcoml
push
mov
mov
sbb
or
dec
cmp
mov
pop
sub
xchg
push
icebp
popf
push
pushf
jnp
pop
pop
dec
sbb
test
cli
jbe
hlt
hlt
add
push
ds
mov
stc
lret
pop
leave
mov
dec
dec
addb
jb
mov
rcl
pop
incb
jl
and
push
jno
and
fiadds
test
in
into
sbb
jmp
pop
xor
adcl
ja
test
jle
out
lea
or
pop
ss
les
xchg
ret
cmc
out
sahf
jl
ja
dec
sub
mov
xlat
mov
mov
sub
rorb
or
pop
daa
xchg
jmp
sub
adc
push
jmp
enter
and
mov
inc
xor
sub
movsl
sub
insl
push
pop
int3
aaa
je
add
icebp
mov
mov
mov
sub
mov
inc
jbe
mov
popa
xchg
sti
cli
aam
stc
pop
mov
cld
std
pop
mov
es
aas
and
aam
mov
xor
push
ja
sub
jb
popa
out
adc
mov
fwait
mov
daa
cmp
fisttps
xacquire
cltd
aam
or
xchg
daa
jne
shll
stos
test
aam
mov
loop
mov
push
sbb
out
popf
in
mov
je
jnp
lods
mov
je
pop
mov
pop
add
pop
loop
adc
and
pop
pop
mov
les
dec
in
jbe
add
mov
push
jne
push
jne
push
dec
xor
popf
gs
daa
cs
sahf
cwtl
cwtl
hlt
leave
shlb
outsb
aad
mov
hlt
jecxz
or
mov
and
test
in
aam
les
xor
mov
jae
movsl
fisttps
adc
pop
dec
jmp
int
sub
repnz
rcr
mov
pop
xchg
mov
xor
add
movsb
inc
push
mov
pushf
or
adc
test
scas
scas
sahf
push
stos
dec
push
inc
adc
movsl
insb
xchg
jecxz
jg
int3
in
jp
daa
xor
repnz
sti
or
stos
mov
lret
fwait
push
gs
push
lods
loopne
addr16
shrl
adc
aaa
xchg
xlat
pop
push
je
pop
jmp
xor
and
test
mov
or
stos
pop
roll
cmpsb
xchg
popf
cmp
or
mov
iret
decb
jnp
iret
push
lret
fiaddl
mov
popf
loope
inc
das
in
dec
test
shll
jmp
push
cmp
lods
adc
dec
push
fsts
sbb
loopne
stos
cmp
test
cwtl
cmp
aas
inc
dec
stc
les
pop
push
repnz
xchg
sbb
mov
pop
imul
sub
leave
repz
fs
push
push
sbbb
add
cmp
sub
aas
test
ja
cli
arpl
scas
out
inc
or
mov
dec
sbb
hlt
adc
pop
mov
rclb
into
push
push
out
pushl
iret
add
cltd
jmp
loope
mov
jp
hlt
xor
sbb
mov
xor
jnp
out
push
stos
mov
jmp
push
in
ss
sbb
sar
push
cmp
xchg
das
fimuls
pop
sub
loope
insl
dec
push
into
dec
imull
xchg
push
push
rcrb
pop
push
in
enter
outsb
mov
insb
data16
pushf
lahf
cwtl
lea
mov
aad
add
lods
adc
cmp
fwait
imul
cmp
lea
not
push
jg
inc
aas
stos
cmp
inc
dec
inc
sbb
mov
mov
out
push
xchg
lret
or
scas
adc
push
pop
pop
mov
push
insl
cmpsl
sti
js
test
sbb
mov
mov
jb
mov
mov
psubw
aad
das
pop
inc
lahf
repnz
mov
outsl
out
pop
mov
push
adc
test
fdivrp
push
cmpsb
and
xor
scas
add
xchg
xchg
mov
rcrl
jo
or
outsb
xlat
iret
mov
je
pop
cmp
or
xor
pop
call
add
mov
and
fucomi
pushl
ja
push
in
jno
ja
jno
push
fs
dec
fisttpl
fsubl
dec
adc
dec
fs
mov
out
jbe
add
or
rorl
dec
aaa
cmpsb
add
cld
push
or
dec
push
and
xorl
sti
add
rcll
leave
subl
test
in
in
mov
decb
sarl
lods
xchg
pop
loopne
call
xor
cs
lods
cs
mov
adc
jns
les
xchg
call
dec
addl
pop
testl
movsl
add
roll
adc
lret
xor
xchg
mov
jno
insb
es
jp
jno
pop
and
loopne
xchg
mov
inc
pop
sub
push
mov
sbb
pop
cmp
ret
cmp
sbb
inc
mov
or
push
sbb
rcrb
das
std
scas
inc
sbb
add
shlb
insb
ss
cmp
lock
push
rorl
out
scas
bound
dec
enter
jmp
sub
inc
xchg
adc
push
and
sub
les
or
ror
push
add
mov
mov
test
xchg
dec
test
repnz
rcl
ret
in
fdivrl
lods
mov
lock
pop
stos
adc
loopne
stos
cmc
mov
lods
push
lret
iret
test
out
push
cmp
pushf
filds
inc
shl
je
mov
sahf
mov
sub
lret
jmp
fstpl
into
aas
jns
outsb
or
lcall
xchg
jecxz
jl
xor
or
daa
cwtl
stc
int
mov
pop
xchg
pop
mov
jecxz
cs
or
xor
and
scas
scas
adc
dec
sti
lret
fwait
mov
fsts
adcl
fbstp
push
adc
cli
clc
add
int
xor
inc
sub
arpl
lea
sub
es
push
cmp
cmp
sti
shll
mov
bound
neg
adc
adc
cmp
lock
mov
dec
inc
mov
and
inc
mov
fcmovne
fldcw
loope
fldcw
add
stos
xor
std
leave
mov
mov
mov
mov
mov
ja
fbstp
push
icebp
or
sbb
add
leave
sti
stos
insl
xchg
jne
in
lock
dec
test
bound
hlt
dec
xchg
mov
decb
out
neg
popa
lock
xchg
aas
out
rclb
push
imul
lret
out
sbb
or
cmp
into
xchg
or
jo
shrb
add
and
nop
filds
fwait
loopne
bsr
movsb
sbb
out
mov
push
fucom
mov
lods
into
fidivrl
shlb
clc
call
dec
xor
push
incl
mov
lret
les
pop
sbb
mov
daa
sub
push
inc
cmpsl
mov
adc
push
movsl
mov
add
pusha
dec
iret
cmp
rclb
push
mov
out
cmp
fists
pop
or
mov
push
sbb
xchg
xor
iret
pop
test
adc
adc
xchg
out
mov
lahf
pop
ja
scas
jmp
lods
lahf
adc
sub
outsb
sbb
in
in
push
jns
xor
inc
xor
leave
sbb
jns
cmp
cld
stos
mov
nop
sub
mov
iret
stc
or
or
loope
pop
fmull
xor
or
das
lock
scas
fwait
subl
jl
in
imul
std
xor
mov
jo
inc
lret
ss
daa
movsl
or
dec
jge
jp
xchg
hlt
cmp
adc
xchg
and
mov
in
outsb
jns
mov
andb
xchg
mov
hlt
jle
mov
test
cmp
pop
sub
scas
adc
pop
fcomps
mov
sbb
test
notb
test
ljmp
push
scas
stos
pusha
repz
fisubl
adc
pop
cmp
int3
icebp
and
aaa
daa
ja
mov
stos
stos
loopne
data16
cltd
cmp
shlb
or
add
addb
nop
repnz
mov
stos
fs
les
lret
jmp
call
sbb
ret
movsl
cs
inc
sahf
addr16
loope
jmp
iret
rorb
sbb
jge
shl
sbb
pop
xchg
fisubl
ja
sbb
jecxz
mov
pop
push
mov
lods
mov
sbb
jno
jns
rclb
js
out
inc
xchg
outsl
jmp
inc
xchg
ret
cli
ret
popf
imul
test
arpl
push
into
lods
enter
sbb
add
sub
xor
cmc
pop
insb
jb
rolb
aad
sbb
fbstp
pop
xchg
ss
dec
fdivr
popl
test
lahf
divl
clc
in
xchg
ds
roll
cmp
pusha
mov
ret
mov
leave
cli
movsb
insl
mov
and
push
ja
rolb
dec
pop
or
int3
push
fistl
repnz
push
or
cmp
xchg
add
jg
dec
pop
mov
mov
mov
sti
subb
outsl
sub
xchg
not
imul
adc
jl
or
fs
lret
stos
roll
dec
or
in
scas
sbb
xchg
stc
in
adc
psrlw
or
out
lods
scas
je
jmp
jno
mov
call
in
outsl
xchg
or
mov
sahf
inc
mov
sbb
sub
cmp
imul
pop
xchg
andl
std
pop
or
das
imul
outsb
ss
rcrl
pusha
mov
pop
addr16
pop
aam
outsl
fldlg2
fldl
sbb
push
xchg
and
mov
fdivrp
mov
push
push
jb
dec
lret
adc
cmp
push
fcmovne
push
int
jge
jl
add
jp
xor
mov
fsubs
push
mov
inc
outsl
fs
xchg
push
cs
into
push
clc
and
xchg
aas
jmp
aas
pop
sahf
pop
jnp
mov
inc
ficoms
jne
in
bound
std
mov
loop
pop
adc
jg
jbe
mov
fdivrl
mov
push
iret
dec
out
sbb
cmp
hlt
shr
loopne
aas
fs
jnp
pop
push
cmp
ljmp
or
xchg
xchg
mov
push
cmpsb
out
push
into
testl
shrl
stc
hlt
imul
out
cmpsb
int3
adc
movsb
jne
cmp
jg
ljmp
rcll
sub
jl
out
pop
arpl
push
insb
rorl
inc
call
sub
jle
sbb
jg
sub
sbb
mov
dec
push
std
pop
shlb
cltd
pop
mov
pop
xchg
adc
cmpsb
push
adc
imulb
adc
xlat
cwtl
cmp
sbb
cmc
mov
push
adc
jmp
push
int
pusha
popa
mul
mov
and
mov
fcoml
int
into
adc
dec
cmp
pop
cltd
mov
enter
loopne
fwait
add
xchg
or
mov
arpl
mov
imul
jle
jne
push
mov
ret
hlt
sub
pop
fdivrp
mov
dec
fsubrs
loopne
ljmp
pop
loope
jno
cld
popf
mov
xorb
xchg
fcoml
cmpsb
mov
xor
rcll
xlat
or
and
fsts
inc
in
inc
scas
jno
sbbl
xchg
push
mov
xlat
or
inc
rcrb
test
enter
jg
and
lahf
stos
fcomps
les
xchg
aaa
arpl
dec
xchg
lods
pop
mov
aas
xchg
pop
frstor
adc
cmpsb
mov
dec
out
xchg
testb
push
push
movsl
stos
test
mov
dec
add
jge
pop
enter
pop
stos
jmp
test
or
arpl
dec
xchg
fldcw
mov
idivb
out
addr16
inc
mov
orl
repnz
cmpsl
sbb
sub
fdivrl
push
sub
fbld
pop
mov
sbb
das
jle
repz
inc
inc
int
pop
mov
dec
es
lret
les
in
add
xchg
adc
mov
dec
or
mov
lret
dec
insb
cmc
out
pop
xchg
mov
inc
aam
fwait
mov
add
pop
lcall
mov
shr
lods
shl
lret
push
dec
in
jb
nop
mov
fdivs
or
into
lods
xchg
test
lret
inc
add
adc
mov
ret
std
cwtl
mulb
js
dec
scas
dec
xchg
lds
aas
std
data16
cmpsl
mov
lds
add
js
enter
and
cmp
push
fcoms
and
hlt
mov
data16
lret
sbb
mov
into
sub
dec
or
mov
sub
mov
gs
mov
lods
in
pusha
xchg
jbe
cmp
cld
je
mov
xlat
ds
ja
fwait
pop
mov
adc
sbb
dec
insl
mov
add
es
cmp
out
lcall
add
adc
mov
mov
sub
sbb
movsb
jge
dec
loop
aad
pop
sbb
pop
push
frstpm(287
loope
jno
mov
inc
fldl
jle
or
push
mov
les
xor
popa
mov
pop
clc
movsl
movlps
adc
icebp
sub
mov
cli
push
mov
cmp
add
adc
pop
cmpsb
fdivrs
xlat
bound
mov
mov
push
pop
cmp
shrl
pushf
mov
inc
mov
scas
adc
or
es
loop
repz
cmp
popa
mov
gs
movsb
addr16
mov
mov
cmp
mov
pop
dec
jne
pop
push
sbb
movsb
pop
adc
decb
jne
imul
mov
xor
ret
test
cmp
out
push
sbb
adc
cmc
and
test
xor
int
mov
inc
mov
push
push
insl
and
sti
fisubrs
cmpsl
pop
js
aad
mov
pop
das
loop
mov
lock
bswap
rclb
mov
ret
sbb
and
xchg
popf
lods
pop
leave
mov
outsb
out
dec
mov
popf
popf
mov
pop
syscall
or
lds
push
mov
leave
mov
movsl
stos
or
xchg
jns
fs
or
icebp
mov
idivl
movl
fisttps
xor
test
push
ret
jecxz
jmp
scas
loope,pt
sti
repz
cmp
repnz
hlt
mov
xchg
add
mov
jle
cmp
pushf
adc
sub
clc
push
sub
addr16
xchg
fldl
pop
mov
out
ficomps
push
test
sub
mov
mov
scas
jmp
inc
mov
dec
xchg
jge
mov
movsb
pop
jle
pop
faddl
push
lock
fwait
ss
fnstsw
imul
sti
scas
and
stos
jg
pop
mov
aad
cmpxchg
xchg
dec
inc
adc
inc
enter
jmp
push
aaa
mov
mov
push
rcrb
xor
test
push
repnz
bound
xor
push
andl
mov
sub
xor
sbb
out
pop
xlat
push
insb
scas
and
xchg
into
dec
xchg
jno
icebp
dec
frstor
cwtl
dec
xor
shl
aaa
pop
pusha
adc
pusha
pop
push
adc
and
fptan
sbb
xor
inc
xchg
sahf
sbb
or
pop
xchg
pop
pop
xchg
fstpl
push
fs
inc
ljmp
sbb
or
enter
xchg
imul
stos
out
mov
loop
mov
cmp
xchg
push
out
mov
xor
adc
add
pop
das
mov
push
jo
ss
insb
xchg
daa
test
test
jge
inc
outsl
fstps
aam
fnsave
in
dec
stc
paddb
mov
adc
mov
bound
jnp
lahf
sub
sbb
scas
call
add
lods
scas
push
xor
icebp
add
into
mov
cmp
mov
lods
or
cmp
lea
in
pop
ss
mov
and
xorl
and
xchg
dec
icebp
dec
cmpsl
pop
js
inc
hlt
rorl
xor
int
mov
icebp
mov
xor
in
pop
lea
loope
pop
jo,pt
mov
add
imul
jge
es
cmp
out
out
lret
pop
dec
pop
dec
popf
jns
in
ret
out
mov
aam
jle
cmp
xchg
pop
jne
push
popf
pop
xchg
sbb
mov
arpl
mov
rcrb
mov
pushf
inc
mov
test
lcall
sbb
cmp
dec
int3
xchg
mov
push
cmovle
das
push
data16
pushf
mov
mov
pusha
inc
mov
push
cmp
insl
jnp
loop
push
fcoms
iret
jecxz
scas
pop
test
sbb
cli
cmc
mov
stos
mov
push
in
mov
push
adc
mov
inc
iret
fsubl
fstps
les
jecxz
mov
push
pop
idivb
fwait
xor
xor
sbb
sub
imul
jnp
lcall
add
jne
xchg
insb
fwait
inc
jl
dec
dec
or
adc
cmp
stos
dec
inc
xchg
es
inc
cwtl
fucomip
fsubrs
push
mov
push
or
js
sbb
gs
movsl
lahf
notl
or
fcomps
jnp
cld
inc
xor
loop
sub
mov
lahf
xor
mov
inc
rorb
aas
int3
call
push
ret
add
mov
cmp
xor
es
add
cs
or
mov
sbb
mull
mov
add
pop
pop
inc
leave
in
cmp
std
sub
lds
pop
lret
imul
sbb
push
push
lea
icebp
jg
in
xorl
jle
sbb
in
mov
andl
mov
adc
and
inc
lods
cmpsl
lea
pop
cmp
int3
mov
lret
or
int
mov
das
jns
cmc
jnp
movb
dec
scas
or
insl
loop
push
cmpb
dec
jmp
push
mov
xchg
leave
xor
xchg
push
mov
fdivs
sbb
lea
push
adc
dec
dec
dec
or
test
or
mov
outsb
mov
gs
movb
adc
cmc
sub
lds
mov
clc
mov
jp
mov
lea
movsl
es
adc
and
xchg
outsb
dec
in
enter
sub
mov
movsl
jg
pop
les
data16
popa
fldl
fsts
mov
push
cmp
xor
leave
mov
add
adc
dec
adc
test
das
out
mov
or
xchg
pop
popf
sub
or
mov
sti
xchg
add
fdivrl
xor
add
int3
mov
xlat
or
pushf
xchg
jmp
sub
popf
idiv
stos
stos
imul
sbb
dec
jae
and
inc
lahf
cmp
shlb
sbb
movsl
rorb
and
add
sbb
push
dec
jecxz
jl
mov
push
enter
push
sbb
dec
cmc
loopne
cmp
inc
sub
fs
xchg
outsl
jne
xorl
pop
push
mov
sub
jl
cmp
jnp
lret
pop
stc
inc
mov
mov
out
aam
mov
call
mov
in
fwait
mov
inc
lock
jb
cwtl
jmp
pusha
popa
je
or
adc
inc
push
or
scas
lret
inc
mov
insb
imul
push
jns
or
push
pop
mov
jg
insb
mov
jbe
dec
cs
inc
xchg
mov
pop
nop
mov
xor
popa
fcoms
aam
nop
mov
stos
lds
es
fsubrs
aam
push
xchg
jns
adc
in
cmp
pop
mov
in
shrb
roll
rcll
inc
push
push
fwait
lea
pop
xor
and
stos
cld
sbb
and
ja
into
sbb
jbe
xchg
jo
mov
cld
ds
arpl
xor
adc
sub
fsubrs
insb
mov
jle
mov
ds
or
loopne
insl
stc
or
test
sti
cmp
dec
and
xor
mov
mov
insl
fldl
mov
xchg
adc
pop
das
scas
sub
lahf
push
and
dec
push
mov
in
mov
ds
and
cli
das
mov
das
loope
mov
rcr
punpcklwd
add
xor
fwait
jp
inc
push
xor
and
test
sub
int
int3
sbb
imul
or
iret
sbb
push
rorl
jge
std
mov
shlb
addr16
jno
or
cmpsb
sbb
mov
into
xchg
pop
cmc
mov
mov
int
jae
imul
add
add
jmp
sbb
insb
cs
cli
dec
pop
ds
mov
mov
roll
add
inc
shll
cmp
push
negb
jno
mov
inc
insl
ja
ljmp
pop
sbb
mov
cmpsb
mov
in
xchg
mov
cmp
adc
pusha
jne
gs
jp
sub
movsl
fcmovu
sbb
or
insl
fwait
bswap
jle
fldenv
pushw
xchg
negl
fwait
adc
push
mov
es
fisttps
mov
dec
test
xor
test
xlat
mov
jbe
dec
xchg
adc
mov
or
daa
fsubrl
lods
xlat
xchg
stos
repnz
jl
inc
aas
mov
jb
lds
push
pop
xlat
mov
pop
mov
enter
es
mov
xchg
and
mov
inc
mov
and
mov
cld
jl
clc
jl
fnstsw
cltd
dec
shrb
mov
dec
insl
cmp
into
xor
jnp
shll
xchg
pop
hlt
in
in
nop
pop
lods
add
outsl
pop
shrl
xor
testl
fcompl
push
mov
xchg
dec
nop
push
lock
lock
and
sbb
jmp
pop
in
mov
xchg
enter
cmpsl
data16
in
adcb
pop
rorl
xor
mov
into
or
mov
inc
pop
sub
in
subl
pop
hlt
sub
inc
or
add
jmp
jl
add
jecxz
arpl
sahf
or
mov
ds
jg
jg
rclb
jae
pushf
and
daa
repnz
mov
std
insl
pop
addb
sbb
xor
mov
int
add
inc
add
fsubl
call
andb
xchg
rorl
jne
mov
mov
inc
dec
cmpsl
movsw
cmp
cmp
xchg
out
dec
jo
xor
xchg
dec
std
pop
adc
leave
xlat
out
pop
sbb
pop
pop
addb
cmp
xchg
and
add
xor
test
test
sbb
movsl
pop
ret
movl
pop
jle
pop
shrb
ret
in
add
adc
outsb
sub
adc
pop
scas
jnp
push
iret
cmp
sub
push
cmc
xor
movsl
sub
push
mov
dec
dec
lret
jmp
clc
sub
test
mov
inc
sub
sub
lcall
pop
out
mov
scas
pop
les
or
mov
stos
aas
push
in
jae
mov
push
aaa
sub
scas
push
shll
lea
jae
fmulp
sub
lds
xor
or
sbb
mov
dec
mov
and
enter
out
xchg
leave
inc
sub
stos
imul
scas
add
xchg
xchg
sub
add
add
mov
cmp
pop
xor
add
popf
rolb
mov
out
lods
mov
push
or
sub
leave
test
push
sub
mov
jno
nop
push
and
adc
pop
jb
mov
cli
cmpsl
xchg
stc
mov
mov
adc
aam
adcb
call
sub
add
add
out
decb
out
mov
clc
cmp
or
dec
push
test
imul
leave
jecxz
imul
movsl
dec
mov
sub
jmp
out
pop
insl
push
push
cs
frstor
in
shll
outsl
test
dec
orb
ja
int
jns
pop
sub
inc
and
xchg
fisubrl
pop
mov
pop
pop
sbb
sub
push
loope
xchg
mov
mov
push
push
jmp
fs
aad
outsb
dec
fldcw
pop
mull
dec
lcall
icebp
mov
push
sbb
push
pusha
insl
js
or
fisttpl
stos
shlb
fs
pop
jne
andb
in
mov
sub
mov
sti
mov
dec
loop
mov
jmp
stc
adc
ljmp
and
in
movsb
pop
xor
in
push
fnstenv
inc
sbb
jmp
lahf
jne
call
add
or
dec
test
xor
insb
sub
adc
test
mov
aad
mov
dec
jae
jne
js
mov
mov
aas
inc
imull
out
sti
add
enter
xor
call
aad
pop
push
mov
add
pop
push
fwait
adc
fstpt
js
aad
jge
xchg
insb
jecxz
lahf
pop
inc
movsl
out
or
pop
loope
dec
cmp
push
pushf
jecxz
rcl
enter
and
adc
push
pop
adc
fs
cmp
sub
das
daa
cli
outsl
sub
loopne,pt
push
fwait
and
xor
cli
repz
pop
dec
lret
hlt
and
inc
sub
push
lret
orl
mov
inc
cli
push
imul
imul
mov
inc
scas
ja
adc
jno
mov
mov
sar
in
sub
inc
push
and
and
test
aas
cmpsl
push
jle
push
cltd
fndisi(8087
dec
dec
jl
jg
cmc
stos
xchg
cmc
frstor
aad
inc
sbb
cmp
and
cmp
xorl
dec
cmp
ret
mov
dec
xor
inc
and
popa
xor
adc
mov
or
mov
scas
leave
sbb
ja
push
sbb
cmp
pop
sub
push
push
cli
cmc
pop
outsb
loope
das
add
out
add
xchg
jnp
fwait
and
xchg
out
xlat
pop
push
scas
lock
lcall
sub
aam
mov
je
gs
jmp
mov
push
and
ljmp
sbb
mov
leave
lret
mov
inc
out
aaa
sub
jle
mov
aas
sbb
or
inc
push
push
fidivl
ret
mov
or
iret
jo
cli
jge
jo
jbe
push
iret
cmp
insb
dec
sub
and
mov
ja
shrl
xchg
lods
subl
sub
mov
mov
jbe
dec
mov
aaa
sub
and
aas
push
movsb
push
gs
cmp
cmpsb
mov
xor
mov
inc
fbld
in
add
pop
jnp
rolb
pop
push
or
mov
int3
push
out
dec
aas
xchg
dec
in
pop
xor
or
repz
push
mov
stc
mov
fsubrp
loope
in
mov
cmp
xchg
inc
cli
scas
repz
pop
int3
jbe
dec
jae
cmp
or
outsl
lock
inc
loopne
cld
pop
pop
mov
in
push
fstl
dec
cs
shl
fimull
mov
pop
fisubl
push
cld
fwait
fwait
sbb
cwtl
adc
mov
xchg
or
pop
push
lea
je
push
and
xor
or
xchg
fs
data16
jmp
and
cmp
inc
fs
mov
clc
ror
adcl
jmp
scas
xor
pop
or
xchg
inc
clc
imulb
daa
jmp
sahf
imul
fstpl
leave
ds
push
shll
iret
xor
mov
xchg
ljmp
cmp
mov
push
stos
imul
rcr
pushf
fiaddl
dec
pop
shrb
inc
insb
mov
pop
add
xchg
icebp
cmp
dec
or
mov
das
xor
cmp
test
sbbl
pop
push
aad
xchg
scas
xchg
stos
add
leave
dec
mov
jnp
loope
and
outsl
sub
mov
dec
xchg
pop
inc
inc
cmp
jmp
dec
loope
shll
mov
test
sub
mov
popa
lds
dec
fdivp
sub
push
add
cmp
xchg
insb
xchg
mov
sub
mov
loope
scas
push
adc
in
icebp
lods
scas
xchg
je
sbb
outsb
mov
cmpsb
pop
in
cmp
jp
mov
ret
sbb
inc
addr16
mov
inc
jb
push
push
sbb
outsl
mov
lahf
xlat
repz
cmpb
push
xchg
cmp
outsl
add
dec
mov
mov
js
enter
rorb
stc
scas
sbb
cwtl
push
fistpl
jge
xchg
shll
pop
adc
dec
push
push
and
mov
pop
adc
push
adc
test
add
mov
sub
or
arpl
fadds
enter
pop
sub
insb
test
inc
jecxz
cmp
sbb
stos
shll
imul
mov
clc
add
jmp
repz
out
mov
jbe
aam
arpl
jb
fwait
push
js
mov
and
in
xchg
add
fxch
mov
lds
xlat
xor
nop
filds
sub
jge
insl
icebp
inc
dec
cmpsl
sbb
lcall
sbb
pop
sub
dec
sbb
pop
pop
and
push
sub
insl
outsl
mov
lock
dec
dec
clc
cmp
mov
subb
call
cmc
push
mov
pop
mov
mov
dec
jp
dec
jmp
xchg
push
cmp
into
or
jbe
cmp
cmp
ret
lea
nop
add
xchg
das
into
ss
ret
nop
push
push
test
push
xor
dec
stos
sahf
das
dec
push
outsl
das
dec
test
aaa
je
pop
fildl
test
mov
gs
es
loopne
mov
mov
lret
push
pop
add
out
and
push
les
popa
inc
insb
fcoml
add
aad
and
ss
cmp
inc
call
mov
mov
fldenv
mov
ret
lretw
jge
xor
fnsave
pop
pop
in
add
std
pop
in
or
sahf
fisttps
stos
ljmp
adc
outsb
jbe
or
popa
pop
inc
sbb
or
aad
xchg
mov
push
inc
xchg
icebp
sahf
sbbl
lods
inc
inc
cmp
cmc
add
ljmp
vandps
add
lods
dec
mov
pop
ljmp
testb
pop
xor
data16
add
rcll
lock
or
fwait
sub
call
or
lret
int3
cli
xchg
lds
mov
mov
hlt
ret
push
cltd
popf
xchg
jne
or
iret
test
adc
imul
jbe
leave
cs
add
mov
mov
out
pop
adc
stos
je
mov
fsubrs
lea
es
lock
pop
jle
loope
call
insl
push
fistpll
push
sub
jecxz
shlb
mov
bound
aam
test
sbb
rcrl
mov
cmp
aaa
pop
sub
mov
push
or
rcl
push
out
das
cmc
inc
jb
aam
adc
imul
sub
or
int
stos
xchg
leave
ret
jg
negl
jle
mov
jo
pop
sub
sub
in
gs
adc
mov
cmp
rcrl
outsb
js
push
xor
inc
outsb
out
scas
iret
iret
push
sbb
stos
rcrb
sahf
and
mov
xlat
cmp
dec
mov
push
adc
lods
ficoml
cltd
inc
and
and
mov
jmp
sub
sbb
addl
push
dec
into
jnp
sub
cmpsl
daa
mov
fmull
lods
or
lea
js
aas
dec
xor
adc
mov
sahf
pushl
into
or
icebp
fsubrl
mov
popa
sbb
sbb
push
dec
push
cmp
ror
cli
test
push
dec
add
cli
jno
mov
in
mov
hlt
mov
mov
test
std
hlt
dec
mov
sub
imul
mov
adc
sbbl
jbe
fidivl
push
xor
mov
mov
adc
jg
popa
cs
xor
mov
dec
stc
mov
and
in
and
inc
mov
adc
mov
test
loopne
movsl
cmc
jns
bound
mov
scas
lea
test
push
daa
adc
xor
cli
cmpsl
stc
sahf
push
popa
lahf
adc
xchg
and
in
ja
push
lds
sahf
and
and
xor
lea
loopne
popf
outsb
ret
pop
aad
sti
scas
cmp
xor
test
daa
clc
sub
dec
imul
mov
sahf
data16
sti
lods
mov
outsb
sti
pop
gs
repnz
jnp
pop
jg
icebp
out
adc
xchg
and
mov
dec
pop
lret
movsb
aam
int
mov
enter
imul
adc
das
mov
xchg
repnz
jg
jns
lods
mov
pushf
sbb
inc
les
aas
leave
aam
or
sbb
inc
mov
jnp
mov
xchg
lcall
inc
lea
mov
sub
fldt
int
std
jmp
aaa
sbb
xchg
mov
sarb
inc
or
pop
xchg
mov
aas
lahf
mov
test
test
mov
pop
sahf
cmpl
adc
xchg
ss
jp
pop
ss
sbb
add
jmp
dec
lret
dec
repnz
out
icebp
dec
pop
jmp
test
push
fwait
hlt
lret
ljmp
pushf
jg
jg
add
jnp
or
push
les
mov
std
and
push
mov
and
leave
ret
nop
xor
dec
xor
and
push
jl
out
mov
lea
fistl
jbe
mov
pop
cmp
out
sarb
add
cltd
add
cmp
pop
fcoml
push
enter
nop
stos
pop
in
cmp
test
xchg
fs
jle
sahf
add
mov
mov
jmp
pop
loope
pop
and
lods
scas
jae
mov
push
call
cmp
adc
inc
pop
std
mov
mov
push
or
popa
cmp
and
inc
lcall
xor
dec
xlat
imul
mov
insl
out
xor
xchg
in
icebp
push
dec
cli
std
out
aaa
mov
leave
jae
sub
push
mov
stc
hlt
mov
dec
push
sbb
loopne
jae
jnp
aas
jmp
xchg
cld
leave
mov
loope
insb
test
cltd
and
xor
inc
adc
lcall
mov
stos
std
clc
or
jns
mov
dec
cld
repnz
testl
dec
test
sbb
adc
mov
sar
mov
test
movsl
dec
in
ret
push
jnp
stc
cmpsl
mov
inc
mov
js
pop
loope
pop
sbb
push
int
sarb
and
bound
jb
jb
gs
xor
cmpsl
in
push
and
adc
mov
in
and
lahf
xor
push
push
cmp
test
mov
cwtl
xchg
mov
stos
xor
aaa
xor
inc
pusha
inc
ja
jmp
dec
fcomp
outsl
cmp
cld
lret
cmpsb
ja
outsl
cwtl
add
into
cmpsb
xchg
fisttps
arpl
das
jecxz
ficoml
pop
cmpsl
push
dec
es
pop
int
lods
jp
clc
pop
push
xchg
jnp
ljmp
movsl
adc
sub
adc
fs
xor
das
inc
mov
int
or
adc
xchg
sub
shlb
stos
pop
stos
or
sbb
test
inc
pop
movsl
mov
mov
xor
lods
sahf
data16
adc
addb
jmp
cs
imul
add
cmp
fnstenv
xchg
adc
repnz
jecxz
mov
lret
fsubrp
hlt
or
xchg
stos
sar
mov
inc
jmp
push
mov
jle
add
jl
loopne
sub
cmpb
iret
xor
gs
cld
outsl
sbb
lods
mov
iret
and
mov
cli
stos
movsb
insb
stos
in
mov
pop
mov
inc
jne
ss
cmp
sar
mov
repz
adc
inc
pop
jecxz
add
adc
lds
sbb
sub
les
xor
mov
push
add
mov
xor
adc
push
sub
std
jge
bound
jp
cmp
mov
and
and
xchg
pop
aam
mov
rcll
cmp
pop
or
roll
push
adc
mov
mov
mov
sub
and
sbbl
fisubrs
sub
daa
gs
scas
sbb
scas
lock
lea
dec
call
lods
cmp
in
in
mov
dec
jle
push
cmp
mov
nop
fs
cld
unpcklps
pushf
addl
mov
add
jp
bound
out
mov
into
addl
jp
ss
and
dec
push
and
les
imul
enter
imul
ror
movsl
xchg
sub
add
inc
mov
inc
jecxz
xlat
shll
ljmp
popf
mov
ja
mov
add
cmp
test
dec
into
and
lods
cmp
inc
popf
gs
mov
pop
add
pop
pop
mov
movsb
shr
add
ja
push
sub
lahf
xor
xor
xor
push
lock
ljmp
jno
xchg
adc
stos
add
jecxz
sbb
jne
xchg
fnstsw
out
into
pop
mov
push
jecxz
loope
sub
mov
aas
repz
add
push
arpl
xchg
repz
xchg
xor
pop
or
shll
dec
and
imul
in
mov
jecxz
pop
mov
sub
pop
sbb
mov
mov
out
cmp
roll
stc
pop
push
in
lods
lahf
jnp
cmp
push
mov
dec
add
lret
sub
sub
push
mov
add
push
xor
int
xchg
mov
inc
add
xor
imul
pop
dec
mov
cs
cmpl
sahf
mov
fmul
cmp
add
inc
mov
sbb
mov
iret
js
jbe
pop
inc
or
daa
shl
bound
fnstsw
add
xchg
mov
add
call
sbb
mov
lahf
dec
or
shl
mov
push
daa
xchg
fldl
loope
inc
or
fisubrl
in
xchg
inc
out
xchg
sbb
shl
xor
bnd
out
xchg
add
xchg
xchg
stos
fldcw
mov
push
or
and
insb
in
outsl
inc
adcb
outsb
adc
rol
fisubrl
cmp
into
inc
sti
xor
push
ss
nop
out
in
aam
xor
xchg
push
xchg
stos
das
dec
cmc
pusha
lret
movsb
mov
mov
add
leave
sub
or
mov
inc
lock
in
sub
ss
cmp
jo
dec
mov
push
dec
fldt
pop
push
mov
push
push
in
xchg
incb
jb
lods
push
ss
xorl
push
mov
pop
or
mov
add
test
testl
les
mov
rcrl
sbb
js
loop
xorl
jmp
inc
dec
mov
mov
push
cmp
rcr
sbb
xchg
jp
imul
lahf
push
inc
mov
cmp
inc
push
mov
es
push
sub
dec
dec
and
jmp
and
movsl
fnsave
jne
jo
out
pop
xlat
lods
cwtl
cmp
fmuls
inc
out
mov
scas
scas
pop
xorb
les
add
xor
lahf
cmp
xchg
pop
test
mov
and
sub
xchg
sub
mov
mov
ljmp
xchg
int
xor
lock
mov
mov
pop
dec
inc
paddd
pop
popf
test
fildll
cmpsl
xchg
push
sub
cmpsl
push
in
inc
je
fdivrl
in
sub
mov
push
pop
or
dec
das
std
sub
iret
inc
mov
push
push
sti
in
outsl
jecxz
int
rorb
repz
inc
and
out
cltd
das
mov
sbb
xchg
or
mov
sar
in
dec
mov
jns
and
xchg
inc
insb
inc
push
cmp
cmp
cwtl
stos
lret
mov
je
les
incb
xchg
lea
pop
cli
mov
je
mov
cmp
mov
sbb
cmp
cli
push
popf
mov
lea
mov
fs
leave
pop
leave
mov
ret
sbb
or
cltd
jge
jb
into
out
mov
dec
dec
sub
adc
sarl
cmp
sbb
lcall
aas
adc
add
insl
mov
pop
add
sti
lcall
popa
add
inc
pop
pop
aam
jae
imul
push
repz
leave
testl
push
jmp
lcall
xor
adc
scas
inc
lret
cli
lcall
test
xor
pop
adc
pop
sarl
pop
arpl
or
sbb
int3
mov
popf
or
insl
ret
lahf
scas
cli
subl
loopne
inc
fldcw
xor
jmp
xor
jg
dec
cli
call
fnstsw
cmpb
movl
cltd
outsl
mov
test
jg
jg
loope
pop
movsl
sub
dec
call
aaa
inc
pop
out
xchg
popa
mov
into
fiaddl
and
xchg
in
push
sahf
jp
dec
fsubrl
out
lcall
cmp
js
sbb
jb
xor
push
jno
call
inc
call
xchg
mov
es
and
mov
mov
mov
inc
or
repz
mov
pop
xor
cli
jb
insb
stc
shl
pop
cs
xor
sbb
jbe
imul
xorl
movsl
loop
push
mov
cmp
mov
mov
cwtl
pop
dec
push
out
movsl
or
shrb
dec
pop
dec
sbb
mov
mov
add
jg
sti
shll
dec
ljmp
lret
in
xchg
int3
pop
mov
xchg
jae
sti
cmpsb
mov
mov
jmp
adc
imulb
ret
sarb
data16
xor
add
pop
test
dec
adc
mov
fstps
out
adc
movsl
jge
hlt
push
aas
out
jb
jnp
sub
daa
jne
pop
xchg
jecxz
push
push
push
dec
jae
call
or
in
dec
push
jmp
shlb
xchg
inc
popa
mov
scas
adc
xor
push
inc
inc
stos
lds
pop
pop
mov
lods
mov
push
call
scas
pop
xor
bound
xchg
scas
and
adc
sub
int3
inc
adc
pop
addl
add
and
test
call
dec
in
imul
les
jecxz
int
inc
push
push
mov
mov
data16
and
movsl
stos
mov
inc
outsl
mov
push
cltd
mov
leave
sub
aad
jno
lcall
repnz
aam
and
jge
out
mov
nop
clc
bound
int3
mov
mov
sub
aam
shlb
aas
cmpsb
lods
jno
dec
mov
in
jl
movsb
js
in
movl
cmpsb
or
in
out
adc
enter
push
outsb
bound
mov
out
inc
outsb
mov
mov
pop
sub
sub
or
jae
repnz
xchg
mov
fs
jge
jecxz
movsb
lret
and
out
fwait
in
cmp
jle
loope
jp
push
rcr
and
insl
iret
js
repz
push
test
mov
call
mov
scas
movsb
cmp
push
adc
adc
xchg
in
ss
shlb
sbb
in
out
mov
or
adc
xor
test
fcompl
mov
dec
fldl
xchg
pop
or
roll
dec
and
insb
fwait
test
mov
es
xchg
sbb
mov
loope
call
push
inc
jnp
jo
add
or
scas
test
xlat
sbb
pop
lcall
das
enter
sub
sub
adc
xchg
xlat
outsb
add
and
pusha
loopne
insl
test
mov
cltd
out
add
sti
and
out
js
jmp
inc
xor
or
push
adc
cmc
sub
aam
shrl
addl
sbb
rcrl
mov
andl
lds
and
push
sbb
jge
xchg
jmp
or
inc
sub
mov
vpmullw
or
out
call
add
enter
lret
repnz
mov
xor
icebp
negb
mov
push
scas
jge
jp
shrl
sbb
inc
out
insb
sbb
xor
repz
repnz
fldt
mov
stos
jle
inc
cli
adc
ss
jge
xor
idivb
js
fs
push
int3
daa
jae
gs
jp
dec
scas
daa
orb
add
sahf
inc
test
adc
pop
dec
xchg
jnp
mov
daa
mov
inc
sub
mov
xchg
sbb
enter
cmp
cmp
xor
mov
dec
adc
test
jl
cmp
inc
adc
repnz
jg
in
lret
sbb
cmpsb
test
daa
jge
jo
sub
jecxz
addl
add
negb
jl
add
mov
push
das
aaa
adc
jo
in
jmp
cwtl
mov
xlat
sti
fbld
xor
aad
sub
pop
dec
xchg
gs
imul
or
aam
mov
jne
ljmp
js
out
sub
pusha
inc
jmp
leave
xlat
in
into
sub
mov
inc
into
pop
dec
xchg
add
hlt
stos
stos
lods
jmp
rolb
nop
adc
dec
or
nop
pop
test
je
imul
ss
mov
mov
inc
or
shll
adc
xor
loopne
mov
cltd
jno
jmp
lea
push
inc
add
das
scas
add
fimuls
fisubrl
and
rcr
popa
mov
lods
xchg
into
jae
insb
mov
sbb
imul
mov
gs
mov
push
rolb
dec
cmp
les
in
shr
xchg
call
inc
adc
cmpsb
in
fnsave
push
mov
loop
arpl
jmp
loope
pop
dec
and
jmp
and
inc
lret
pop
push
inc
push
jne
jo
inc
hlt
ljmp
adc
jbe
cmp
jae,pt
pop
in
push
lahf
shll
jmp
mov
or
mov
jne
enter
adc
cs
mov
mov
xor
sbbb
dec
pop
push
loope
setle
sbbl
stc
loopne
sti
out
jo
call
cmp
sbb
aam
test
fadds
insl
mov
or
test
rcrb
xchg
pushf
dec
dec
dec
daa
jl
dec
sbb
jp
push
mov
movsl
mov
sahf
jp
into
outsb
test
push
scas
dec
orb
or
sarb
aas
inc
lods
jmp
cmp
xchg
arpl
imul
pop
mov
and
cwtl
dec
testb
sbb
lods
jp
aad
jbe
add
sub
js
adc
pop
popa
push
lods
andb
mov
adc
dec
rcll
push
xchg
push
es
cwtl
scas
sbb
lret
bnd
jl
aas
mov
dec
mov
mov
pop
xor
iret
out
repz
jge
xlat
push
mov
push
push
hlt
into
iret
shlb
push
cmp
mov
insb
lcall
mov
fldt
sbb
test
push
fmulp
or
insl
aaa
pusha
ret
mov
scas
or
aaa
mov
push
mov
inc
adc
and
push
adc
inc
dec
xchg
mov
push
int
test
test
xor
out
xor
jecxz
hlt
lds
dec
movsl
push
call
andl
adc
inc
hlt
dec
dec
sbbb
sbb
xor
ja
jle
mov
jns
xchg
repz
lea
loope
sbb
popf
in
xchg
mov
jecxz
pop
ja
lods
cmpsb
mov
insl
jecxz
xor
adc
ss
and
sub
bound
int3
int
push
xchg
repnz
test
dec
pop
pusha
jg
jns
mov
lahf
addb
adc
jbe
add
stc
jno
cmp
adc
inc
push
mov
jb
jmp
ret
inc
mov
hlt
bound
mov
add
or
sub
int3
jl
xor
pop
mov
fldenv
push
out
jo
div
xchg
popf
es
cmpsb
popf
xchg
cmp
lret
ja
rep
push
mov
jl
add
cmpsb
pop
mov
mull
test
jb
add
int3
in
rolb
lods
jnp
jg
aam
fstpt
pusha
int3
jbe
push
loope
xlat
xchg
mov
push
jmp
ret
xchg
cwtl
sub
ljmp
hlt
leave
jb
cwtl
mov
xor
imul
or
and
icebp
ss
inc
and
xor
sbb
xor
rolb
sub
cmpsb
pop
test
pop
jae
cmpsb
outsl
cmc
out
lods
fimuls
ja
fadds
pop
cmpsb
pop
lcall
inc
pop
pop
js
hlt
push
jle
jnp
cld
push
hlt
xor
ret
mov
clc
sbb
aam
stos
push
iret
shrb
hlt
mov
lcall
sbb
sti
rorl
jge
sbb
std
jae
mov
xlat
jecxz
mov
sbb
fsubrs
out
pop
pop
cld
dec
sbb
cwtl
lea
sbb
es
es
into
lock
push
pushf
sbb
adc
in
cmp
cmp
fidivrs
mov
into
adc
xchg
shll
dec
jmp
sbbl
cmp
cltd
fwait
pslld
arpl
push
jle
rclb
inc
inc
cmp
popa
mov
cmc
pop
ds
dec
daa
adcb
sub
xor
fisttpl
mov
push
and
mov
cmp
aam
fists
inc
nop
adcb
mov
push
aam
stc
mov
cli
cmp
enter
xor
daa
sub
sbbb
outsb
push
mov
lret
rorl
push
inc
scas
add
cmp
pop
mov
stos
sbb
lods
push
movsl
fs
cld
sub
lods
bound
ds
cmovp
popa
push
inc
pop
sbb
pop
and
cmpsl
shl
je
clc
dec
popa
cmpsb
sar
and
pop
mov
mov
das
xchg
lods
and
xorl
sbb
mov
dec
dec
mov
icebp
aas
test
jne
cltd
ret
cltd
stos
inc
movsb
sub
mov
mov
sti
mov
repz
ficoms
jg
into
es
sub
fwait
out
outsb
cltd
fstpl
sbb
mov
in
xor
cmc
arpl
xor
push
orl
fwait
mov
push
shrl
lea
aad
out
insl
int
sub
je
ljmp
adc
scas
sarb
pop
xchg
sbb
test
repz
sbb
sbb
in
mov
inc
and
push
sbb
jne
jl
inc
push
and
add
sub
jne
sub
std
xor
add
sbb
xor
xor
icebp
cmp
je
pop
sarl
outsl
movsl
cld
jns
not
xor
push
cltd
aam
jmp
jmp
inc
mov
sub
sbb
movsl
mov
sahf
dec
test
sub
repz
rolb
test
lahf
int
int3
test
cmpsb
rorb
add
outsl
sub
or
cmp
aam
pop
push
and
mov
mov
mov
mov
clc
insb
inc
jl
pop
mov
dec
xchg
stos
movsb
aad
loope
insl
testb
int3
iret
xchg
loopne
mov
int
jmp
shll
push
xchg
ds
mov
mov
std
loop
push
sbb
je
inc
or
add
mov
mov
xchg
jns
lahf
push
sbbb
sub
add
jle
jge
adc
mov
mov
push
pop
mov
rcl
mov
pop
mov
das
mov
fistps
inc
jge
pusha
cld
std
mov
push
or
test
cwtl
inc
es
sub
xchg
jb
push
sarb
xchg
int3
jno
lods
stos
lods
mov
or
xchg
pop
pop
sbb
fcoml
arpl
xor
loop
mov
call
nop
add
jmp
cmc
push
test
mov
xchg
mov
sbb
xor
xor
int
sarl
sub
or
pusha
jne
frstor
cli
aas
jnp
out
add
iret
std
sub
push
lds
lahf
incl
cmp
pop
popf
stos
test
cmp
les
pop
div
adc
ja
cmc
scas
aad
rorb
dec
test
inc
call
mov
roll
sub
xchg
mov
mov
getsec
test
sub
sub
jnp
or
and
mov
rcrb
cwtl
into
fld
es
imul
inc
nop
js
cli
sub
cmp
cmp
ljmp
cmpl
data16
das
js
mov
aam
or
adc
icebp
or
mov
std
xchg
je
jne
js
es
lock
push
mov
lods
insl
dec
fbstp
jne
xchg
iret
decl
xchg
jl
aas
arpl
or
mov
scas
hlt
test
fwait
mov
jp
loopne
cmp
fnstenv
rcrl
lods
jmp
mov
pop
mov
ds
mov
ficompl
outsl
fwait
iret
push
cmpsl
loop
mov
cmp
and
pop
mov
aad
sahf
jns
sub
in
inc
jo
imull
jo
mov
rolb
adc
and
jnp
mov
jae
adc
stos
pop
push
ficompl
hlt
out
std
pop
push
inc
insl
cmc
lret
pop
into
push
cmp
daa
jmp
ss
sti
mov
dec
xchg
shrl
and
test
push
pusha
dec
loope
jmp
stc
mov
sbb
fldlg2
xchg
or
out
mov
addl
jge
fs
inc
insl
jno
in
dec
ficompl
add
inc
xchg
jle
int
jnp
daa
clc
shr
jecxz
rcl
aam
xchg
pop
popl
cs
push
out
hlt
hlt
data16
pop
sub
mov
loopne
or
into
cmp
adc
test
add
je
pop
or
xor
ds
jne
les
not
fldt
mov
mov
push
leave
jns
cmp
loop
fwait
jns
xor
mov
lds
push
stos
insb
lock
cmp
les
sarl
xchg
xlat
push
jg
cli
mov
and
pop
sub
out
aam
add
xlat
push
push
push
ret
in
cltd
aam
lret
test
loopne
lret
adc
gs
sub
xchg
lds
jg,pt
mov
pop
sub
ljmp
call
inc
in
js
cmp
mov
test
xchg
and
pop
mov
pop
popf
xchg
push
insb
into
or
mov
pop
stos
addb
fisubs
mov
es
cmp
cs
je
adc
test
dec
les
sbb
fiaddl
cli
lods
mov
pop
xor
les
sbb
fwait
clc
xchg
mov
decb
pop
movsl
push
pop
notl
fldcw
mov
fsubrl
rcr
inc
sti
fldl
fisubrs
mov
jbe,pn
or
cmpsl
call
and
lock
sbb
jmp
fdivrl
insl
scas
push
out
cmp
cmp
movsb
test
nop
sub
int
pop
lret
cmp
jg
int
inc
xchg
leave
or
push
push
ljmp
jb
addr16
xlat
sub
jne
adc
fsubl
pop
mov
in
stos
arpl
mov
jg
pop
ja
sbb
adc
mov
imul
sbb
dec
jecxz
lods
push
loop
fcoml
dec
push
xchg
adcb
insl
sahf
mov
push
mov
sub
roll
push
mov
or
clc
fwait
icebp
push
aad
aaa
cmc
insb
aaa
pop
push
das
outsb
out
lahf
push
notb
addb
sbb
int
rcll
cmp
xchg
push
sub
push
loop
dec
mov
jnp
test
xchg
fstpt
mov
cmpl
pop
dec
sarl
inc
arpl
xchg
xchg
ljmp
add
cltd
sbb
sarb
sub
pop
les
jnp
pop
test
sbb
sub
adc
jb
add
pushw
int3
orb
cmp
jecxz
pop
jo
inc
adc
or
pop
xor
jae
or
clc
push
out
aad
lcall
add
lods
pop
les
inc
xchg
xchg
out
in
test
adc
xchg
fsubl
orl
cmp
lock
mov
mov
or
push
lret
mov
mov
mov
xorb
in
addr16
or
xchg
in
jle
lret
shl
pop
or
lret
loop
mov
int
ret
int
mov
lret
outsl
or
aas
pop
js
xor
adc
cs
adc
mov
pusha
push
fcoms
inc
decb
mov
pop
imul
popf
sub
jno
ja
rclb
push
mov
dec
lret
and
dec
in
mov
cld
stc
mov
cs
mov
xor
test
fdivs
adc
loop
jecxz
push
scas
aaa
adc
cmp
ss
popa
pop
dec
shll
daa
cmc
jg
adc
mov
xchg
add
lcall
xor
mov
ljmp
jo
pop
sub
loope
fxch
out
sbb
fwait
clc
sbb
test
nop
sbb
cmp
and
sub
dec
test
push
loopne
divb
int3
sbb
gs
inc
sub
jge
xor
mov
iret
aas
shl
sarb
notb
idivb
imul
hlt
push
mov
jae
das
movsl
test
hlt
movsl
mov
cs
xchg
sub
xchg
nop
loopne
add
test
or
cwtl
jnp
adc
and
mov
loopne
mov
sbb
sti
shll
imul
mov
out
jb
fldl
test
mov
out
add
mov
stc
imul
xor
cmp
divb
mov
jbe
xchg
loope
pmullw
cli
mov
or
repz
lods
stos
inc
lret
mov
popa
push
movsl
rcrb
sbb
pusha
ss
outsl
jns
loopne
push
lahf
or
adc
subb
pop
cmpsb
push
mov
and
gs
cmp
mov
dec
jno
add
aam
in
inc
xchg
pop
int3
ja
fwait
andb
lock
mov
lods
xchg
cmp
rclb
pop
mov
adc
sub
stc
push
lock
ret
cmp
pop
test
adc
int
and
inc
addr16
cmp
pop
dec
mov
int3
and
xchg
sahf
mov
sbb
into
pop
stos
fs
lds
imul
fs
or
dec
lcall
inc
fs
jecxz
xor
lcall
lods
sbb
repnz
enter
inc
push
inc
mov
pop
incb
sub
push
mov
mov
xor
cmpl
push
filds
and
adc
dec
test
les
mov
cmp
cwtl
cmp
pop
rorl
cmp
jbe,pt
push
scas
rcll
add
mov
xor
adc
imull
jl
arpl
xor
xchg
inc
mov
bound
xchg
pop
popa
sub
inc
add
add
ret
icebp
rol
sahf
ret
or
stos
gs
fisubs
insb
mov
mov
fnstenv
cmp
jl
in
xlat
sub
push
and
sbb
sbb
mov
std
sahf
iret
push
fdivp
add
arpl
out
fnstenv
mov
jb
mov
cmp
pushf
aas
xor
xchg
xchg
and
shll
mov
sbb
loopne
push
ds
and
adc
mov
jns
inc
xor
adc
jbe
imul
mov
sbb
push
jp
test
call
std
pop
les
sbb
lahf
sar
xchg
scas
mov
xlat
mov
mov
repz
stos
xor
fsts
into
mov
dec
jnp
mov
lcall
ficoml
outsl
xchg
dec
in
data16
jl
repnz
xchg
adc
push
out
ja
stos
ficoml
add
loop
out
imul
inc
ret
stc
movsl
xchg
jp
rcrl
testl
mov
pop
pop
aad
push
mov
mov
aad
clc
and
ret
pop
jge
push
inc
add
sbb
in
data16
fildl
iret
dec
nop
inc
out
lods
in
or
cmp
jo
push
int3
add
in
imul
add
into
ret
sbb
in
das
leave
push
cmp
sarb
jge
gs
aad
and
js
stc
lret
sub
das
stc
data16
pop
xor
ljmp
or
mov
mov
mov
lds
dec
mov
push
out
xor
mov
add
loope
mov
or
fildl
push
adc
cs
mov
and
mov
cli
adc
adc
sub
pop
and
test
inc
mov
test
add
cltd
int
add
cmp
xor
push
idivl
adc
jg
cmp
sbb
mov
dec
inc
rorl
fs
jno
mov
or
lret
ja
inc
jo
push
movsl
lock
cltd
fmul
enter
out
xchg
pop
das
inc
push
mov
push
jns
ja
jnp
mov
in
jnp
jge
mov
mov
pushf
out
test
bound
add
js
leave
test
sbb
dec
inc
adc
andb
inc
cmp
lea
bound
push
test
imull
shll
int
aam
and
aad
into
sbb
lret
xor
ja
loopne
arpl
in
incl
into
adc
xchg
jno
out
fadd
ja
pop
lock
mov
in
sbb
sbb
adc
pop
out
dec
fimull
dec
sub
gs
adc
popa
cld
add
jmp
xchg
repz
in
xchg
sbb
lcall
testb
mov
dec
jnp
sub
lahf
mov
pop
sahf
insb
add
mov
nop
sbb
subl
mov
mov
cltd
das
push
cmpb
sub
fistps
jne
test
in
push
leave
adc
and
jle
out
roll
fs
jbe
sarl
xchg
inc
dec
hlt
or
inc
jne
leave
cs
pop
cmp
movsl
outsl
push
jo
and
xchg
sbb
jbe
cmpsl
sbb
in
push
pusha
jl
gs
push
fsubrl
sbbb
xor
aas
outsb
stc
push
and
stc
ss
lods
sti
pop
mov
cmp
loope
es
test
pop
adc
sbb
xlat
mov
imul
cmp
cmp
cli
jno
mov
or
outsb
or
sub
aaa
outsl
dec
jb
add
dec
enter
je
ret
outsb
xchg
ffreep
sbb
inc
jae
leave
or
cmpl
cmpsl
loope
pop
cmc
cmp
and
xchg
movsb
sub
mov
mov
lods
enter
add
std
cmc
stos
dec
dec
lret
insl
sub
scas
mov
adc
xor
call
lcall
mov
ja
jge
sbb
in
mov
daa
pop
jne
addb
adc
lahf
js
pushl
xchg
int3
sbb
push
and
ror
push
or
bound
adc
or
ffreep
in
movsb
das
pop
outsl
adc
add
xor
out
or
sarl
xchg
jg
xor
mov
push
movl
jecxz
dec
in
mov
sub
or
or
inc
loop
mov
sub
xchg
xlat
xchg
lea
adc
fnsetpm(287
ss
sub
sub
push
mov
or
push
ljmp
in
sub
xor
popa
mov
cmp
arpl
int3
xor
lock
xchg
lods
aas
mov
push
daa
in
lahf
adc
data16
and
cmpsb
pop
xor
shlb
fimuls
sti
jmp
imul
lods
pop
in
in
imul
sbb
mov
mov
xor
pop
pop
adc
pop
int3
dec
lahf
jbe
mov
rclb
mov
data16
xor
xchg
fdivrs
push
mov
jo
xchg
inc
push
and
stos
icebp
dec
adc
aaa
ds
mov
movsl
imul
dec
rclb
stos
out
jge
repnz
mov
adc
jno
lahf
iret
pop
aaa
shlb
mov
dec
and
mov
in
or
xchg
jae
mov
test
lcall
or
xchg
dec
jne
inc
push
jl
stos
cmpsb
inc
es
xchg
fidivl
fidivrl
jg
mov
das
pop
stos
jmp
mov
loop
xchg
cmpb
sub
push
sbb
mov
addl
pop
pop
jno
cld
mov
mov
movsb
sub
or
and
lret
int
inc
test
xchg
push
test
pop
adc
aam
push
xchg
incl
fsubrl
add
cmp
test
mov
xchg
mov
aam
mov
rcr
inc
pop
scas
push
push
mov
js
push
pop
jp
cmp
xchg
inc
out
push
icebp
add
nop
xlat
int3
push
nop
dec
lods
aas
loope
pop
mov
arpl
jne
jno
filds
adc
arpl
and
dec
pop
jae
adc
mov
cmp
adc
adc
cmc
mov
jp
or
sti
leave
test
movsb
mov
mul
insl
pop
test
and
dec
call
lahf
mov
sbb
jg
xchg
movsb
loop
loopne
std
mov
and
mov
icebp
xchg
jle
mov
pop
dec
mov
mov
sbb
out
gs
jmp
aad
iret
fiadds
mov
fisubs
dec
fistpll
cmp
inc
mov
jae
bound
fadds
xchg
push
lds
jb
sub
ret
xchg
inc
or
cld
sub
inc
stc
icebp
cmc
mov
push
ds
std
push
push
enter
mov
ss
and
pusha
fisubl
dec
imul
call
in
adc
outsl
addr16
sbb
sbbb
jl
loopne
or
inc
mov
adc
imul
dec
ljmp
xchg
push
test
jb
or
push
out
gs
lret
sbb
hlt
jl
sbb
out
mov
dec
dec
or
int3
ds
jne
mov
sbb
repnz
test
mov
aas
sub
xchg
pop
in
hlt
fwait
sbb
out
mov
inc
cmp
in
mov
ficompl
arpl
rolb
fcoms
repz
push
fsts
into
sbb
incl
jbe
sbb
add
mov
aas
xchg
dec
cmp
mov
sub
popf
fists
push
and
cwtl
mov
and
rcrb
cltd
xchg
les
mov
leave
adc
fimull
mov
repz
lcall
xor
in
sahf
add
int
and
cmp
cmpsl
add
inc
fdivrs
cmc
jnp
xchg
mov
sbb
ss
sti
mov
pop
cmpsl
xor
xchg
nop
lock
or
pop
popa
dec
adc
xor
xchg
adc
fldcw
sbb
insb
test
hlt
mov
jge
cmpsl
sbb
movsl
xor
and
cmpsb
fdivl
jne
test
mov
stos
test
call
mov
js
mov
mov
jecxz
sub
imul
inc
scas
shrb
fstpl
dec
sub
xor
std
xor
les
or
mov
clc
pop
sarl
shl
ljmp
dec
popa
clc
ret
xor
xchg
ret
adc
and
test
ror
xor
adc
push
lods
test
ss
mov
add
fsub
arpl
cmp
out
or
arpl
xchg
pop
stos
and
out
test
rorl
inc
cmc
and
fwait
push
fistpl
inc
lods
dec
xor
adc
je
outsb
fcomps
sub
cwtl
fldl
sbb
sbb
xor
jnp
mov
jmp
notb
sub
clc
and
pop
es
lcall
rcll
sbb
sub
movsb
es
aad
xor
mov
and
addr16
sti
jno
inc
je
fneni(8087
push
out
into
das
and
xchg
hlt
xchg
nop
jmp
sub
ljmp
sbb
loop
dec
pop
divl
cmpsl
add
inc
jge
jbe
ret
cltd
shl
pushf
push
out
icebp
jecxz
lods
sbb
fistpl
ljmp
sub
test
add
int3
push
mov
shll
jmp
push
jmp
cmp
cmp
dec
scas
jg
sbb
scas
cmc
jle
push
neg
pop
dec
out
sahf
pop
mov
adc
cmpl
xchg
sub
push
adc
push
jmp
pusha
xlat
xchg
add
ret
adc
xchg
pop
cmc
ja
xorb
shrb
ss
inc
jl
lods
sub
jmp
leave
shl
fimuls
pop
cmp
inc
sbb
mov
xchg
push
lret
mov
icebp
popf
cmp
fistl
mov
lea
or
loop
rcr
out
pop
xchg
imul
movsl
jmp
jmp
std
jae
mov
push
xchg
enter
and
ror
and
ss
sahf
pop
inc
dec
leave
cmp
je
fidivl
push
jns
cmp
test
das
daa
cld
sub
test
in
adc
shlb
push
int
xor
jae
push
or
imul
xorb
mov
sbb
sbb
pusha
cs
movsl
jp
cmpb
stos
and
loop
loopne
das
roll
mov
imul
xor
xor
dec
sbb
arpl
pop
mov
pop
bound
repz
lcall
ret
shl
out
testb
jg
xorl
and
inc
stos
scas
mov
mov
stc
addr16
out
rcr
notl
js
xor
sbb
mull
gs
ret
call
cmp
xchg
shl
cmc
xchg
mov
or
mov
dec
xchg
popa
pop
push
jg
jmp
jle
cltd
lock
imul
adc
rorb
push
mov
test
lods
enter
jle
xchg
mov
inc
push
mov
xchg
xchg
in
fcomp
inc
cmp
cld
shrb
push
xchg
lret
aam
pop
jae
push
out
nop
pop
push
mov
insl
mov
cmp
imul
push
je
pop
stc
cli
cmp
pop
mov
mov
outsb
pop
mov
adc
icebp
fimuls
push
lods
mov
mov
dec
loopne
inc
sbb
xor
cmp
cmp
jecxz
mov
add
xorl
cmpsl
pop
mov
pushf
enter
test
clc
jp
adc
pand
aad
jbe
xor
sbb
cld
pop
test
or
mov
je
lock
push
rcrb
push
orl
rcrb
fadd
testb
mov
jno
sub
in
pop
fidivrs
push
sub
or
psrld
add
xor
enter
out
cmp
pop
es
push
mov
rorb
jge
mov
mov
loope
stos
in
cmc
mov
nop
ret
mov
or
cltd
xor
dec
aaa
mov
das
and
in
movsl
mov
out
out
das
out
mov
mov
jge
jne
push
push
xchg
sbb
mov
dec
fidivrl
or
and
imul
fs
cmpsl
aad
jno
jns
mov
mov
ret
xlat
or
addb
adc
cmp
fmull
push
add
pop
xor
out
fcmovnbe
push
mov
inc
push
scas
sbb
movsl
testl
lds
pusha
jbe
int
dec
jle
fadds
add
shlb
adc
inc
leave
or
mov
mov
fidivs
xchg
jnp
xor
pop
cltd
mov
or
cmp
adc
mov
add
or
inc
cmpsl
loope
movsb
loope
xor
nop
mov
sub
mov
lea
xchg
or
pop
mov
sbb
test
sti
inc
aam
scas
subl
scas
xor
xor
out
cli
movsb
jnp
add
pop
mov
dec
pop
lahf
jmp
cltd
and
xchg
push
iret
testb
loopne
cmp
mov
and
mov
inc
push
sbb
pop
mov
dec
mov
divl
and
bound
mov
cld
aas
loopne
mov
arpl
and
sarl
add
push
add
shll
out
negb
hlt
lock
orl
daa
icebp
mov
pop
aam
loope
mov
mov
or
xor
out
sub
lds
or
jg
int
jae
dec
cmp
stos
in
cmove
rclb
mul
mov
xchg
fcomip
repnz
pop
loop
jne
aam
stos
sarb
in
push
lahf
fwait
pop
jp
mov
dec
xchg
xor
cmp
mov
in
dec
mov
cld
jmp
les
push
mov
pop
dec
ficoml
dec
testb
push
in
fnsave
pop
in
add
adc
cmp
cmp
xchg
jle
jle
cwtl
mov
jg
ljmp
lret
ss
pop
push
xchg
xorl
imul
fsubl
rol
sahf
in
jmp
xchg
xchg
fdivl
push
test
and
shl
decb
sub
bnd
or
data16
push
xchg
shl
xorb
addr16
cmp
je
shll
push
arpl
jl
outsb
fisttps
mov
jl
jne
and
mov
jl
sti
xchg
add
mov
ljmp
ret
pushf
jo
fadds
enter
xor
outsb
mov
inc
push
xchg
sarb
scas
out
in
enter
pop
sbb
jae
or
xchg
jmp
cmp
fs
dec
mov
iret
inc
jmp
sub
jmp
or
push
or
jge
or
repnz
mov
fs
lock
push
ljmp
into
iret
and
inc
pop
and
pop
out
popf
jmp
mov
xchg
jge
divb
pop
popf
aaa
add
mov
dec
nop
scas
mov
jb
adc
and
xchg
pop
mov
jge
out
inc
inc
fwait
and
ja
or
lcall
sub
cmp
in
jbe
fisubrl
inc
or
jle
mov
mov
dec
add
movsb
lcall
scas
xchg
nop
cmp
jp
movsl
clc
mov
jae
add
xchg
gs
mov
cli
dec
std
mov
stos
roll
fs
mov
pop
dec
mov
push
push
push
dec
xorl
inc
xorl
pop
pop
pop
movsl
mov
and
sbb
repnz
arpl
pop
out
icebp
scas
sub
xchg
inc
or
sub
cmc
lods
xchg
dec
repnz
dec
loope
jo
mov
xchg
in
dec
in
cs
adc
mov
add
mov
fcomip
mov
and
ficoms
pop
repnz
idivb
jl
add
inc
cli
das
nop
subb
dec
clc
jmp
rcrl
jbe
cmc
andb
clc
movsb
in
push
dec
cli
pop
jle
addl
jge
cld
pop
addr16
cmp
std
dec
inc
clc
inc
jmp
aad
xor
jne
div
popf
lret
pop
jp
mov
outsl
pop
nop
bnd
es
in
std
push
jmp
xor
fsubl
xchg
adc
xchg
pop
mov
lods
sub
jno
xchg
mov
popa
sub
aaa
bnd
test
mov
sub
jne
sub
pushl
arpl
cmp
cli
lods
add
notb
mov
cld
mov
and
pop
gs
push
mov
xchg
mov
mov
orl
lock
sti
data16
push
dec
push
arpl
cwtl
add
cmpsb
mov
push
push
push
inc
cmp
add
sub
xor
adc
mull
adc
into
pop
leave
inc
imul
push
adc
xchg
push
cld
jle
lods
repz
cs
push
shll
hlt
into
ds
into
aas
bndstx
and
sub
je
dec
clc
adcl
adc
push
and
add
pushf
clc
out
mov
in
xchg
xor
les
mov
mov
subb
add
lods
xchg
movsl
jl
jge
inc
outsl
lds
dec
icebp
ret
fidivrl
push
xor
xchg
mov
cli
rorb
inc
mov
lods
into
cmp
add
shl
cmp
push
xchg
cwtl
loope
adc
adc
out
mov
xchg
xchg
ror
mov
int3
lods
mov
cli
cld
lcall
push
pop
stos
xchg
in
xchg
dec
sbb
and
jbe
cmp
push
aam
aam
pop
lret
and
adc
or
ss
push
ret
mov
ja
cli
dec
mov
cmp
add
cld
sbb
mov
add
mov
add
int3
out
jns
sub
in
adc
jns
jae
and
jp
add
mov
xor
into
pop
jae
inc
jne
adc
out
pop
fdivl
or
and
ss
sub
daa
push
in
shll
cmp
in
out
mov
rcrb
jb
fcomps
jecxz
loopne
jb,pn
jecxz
fldenv
hlt
sar
mov
fwait
cmpxchg8b
mov
sub
mov
stc
loopne
pushf
stos
cld
in
mov
lock
outsb
test
xchg
adc
jnp
jbe
sub
lcall
ljmp
sub
inc
jecxz
int
and
fs
inc
dec
dec
cmp
dec
sahf
jne
iret
mov
push
xor
cli
pop
popa
lea
out
lods
cmp
loope
mov
jecxz
fnclex
pop
aaa
inc
mov
je
mov
popa
out
fldl
mov
jns
push
push
xchg
stc
fucom
call
aaa
int
stc
scas
in
mov
test
fwait
add
aad
and
mov
sub
lods
mov
stos
mov
mov
jne
jecxz
adc
lahf
jmp
sbb
js
out
mov
pop
xchg
push
or
inc
jbe
shr
mov
mov
es
sbb
lods
negl
out
push
or
xchg
sub
ret
add
adc
and
dec
add
or
fcmovnbe
cs
pop
es
add
mov
mov
aaa
scas
inc
mov
iret
test
cmc
mov
push
mov
lods
outsl
cmc
test
mov
cmpsb
sub
and
dec
pop
imull
sbb
popa
jne
test
add
mov
fbstp
xchg
adc
adc
or
outsl
add
ja
enter
xchg
aas
sarb
mov
mov
inc
dec
lcall
push
dec
cmp
lea
jns
xchg
lea
mov
inc
mov
outsl
jne
pop
or
decl
scas
xchg
mov
stos
sub
sbb
aaa
mov
sub
fmuls
jge
xchg
xor
fistps
fisttpl
inc
jg
shrb
mov
in
imull
adc
sub
jns
cmc
stc
aad
add
mov
negb
or
mov
pop
fs
xchg
and
outsb
cwtl
xchg
dec
out
movsl
js
fwait
out
push
fstpl
pusha
lahf
cmp
add
lock
lds
push
push
out
fcmovnb
loopne
repz
sub
mov
icebp
push
inc
rcrb
gs
mov
pusha
dec
int
clc
mov
push
inc
or
pop
dec
addl
sub
hlt
subl
pop
or
fucomp
rcll
test
pop
lods
ja
mov
xchg
mov
push
rorl
or
shll
pop
inc
xchg
push
pop
mov
push
sbb
xor
lret
or
inc
mov
push
lods
or
sbb
mov
adc
cmp
pop
lret
mov
jmp
jbe
add
xchg
pop
add
cltd
mov
icebp
out
mov
leave
jb
shlb
or
cmp
add
jg
sub
xchg
int
cmc
mov
sbb
fsubr
scas
cmp
out
ror
mov
sbb
xor
jl
push
out
stos
bound
testb
mov
scas
nop
cmp
incl
les
cmp
cmpsl
fistps
mov
xor
pusha
pop
shl
clc
xchg
filds
filds
mov
out
out
mov
pop
xor
cwtl
sbb
leave
cwtl
cmp
push
lcall
lock
fs
mov
repz
sarb
fildl
jp
xchg
arpl
jno
push
push
outsb
mov
sub
out
xchg
push
in
shlb
movd
xor
enter
lods
jns
inc
xor
push
leave
push
jmp
push
sbb
jl
inc
popa
insb
sahf
add
test
imul
cmp
or
xchg
dec
insl
nop
adc
negl
clc
xchg
mov
enter
les
sub
inc
and
imul
lahf
mov
cld
jecxz
pop
add
sub
cmc
movsb
cltd
testb
push
in
mov
fidivrl
repz
stos
fwait
jge
testb
xor
jl
js
add
enter
pop
jno
or
jge
cmpsb
sbb
push
rcr
or
cmp
push
push
jl
dec
mov
aad
push
cwtl
jg
lret
in
gs
ds
inc
inc
inc
je
pop
mov
inc
or
test
lahf
test
daa
and
stos
dec
adc
pop
out
outsl
or
dec
shll
std
out
xor
dec
clc
jne
push
daa
sub
cli
stc
outsb
nop
jbe
lea
adc
jne
and
cmp
loopne
add
xlat
cmpsl
cmp
sbb
cs
out
bound
xchg
add
mov
movsb
shl
xor
insb
dec
js
inc
or
out
sub
jmp
icebp
pop
prefetch
or
add
fidivrs
cmp
xor
push
cmp
leave
sub
std
sahf
or
cmp
mov
xchg
scas
sbb
cmp
stos
fdivrl
sbb
lret
out
jmp
or
and
out
fnstsw
push
les
cmp
fmull
scas
cmp
fdivrl
icebp
inc
jb
outsb
or
orb
cmpsl
test
mov
mov
out
hlt
pop
cmpsb
fmul
shrl
or
push
in
cld
divb
dec
mov
mov
xor
adc
mov
int3
add
xlat
or
adc
int3
enter
inc
nop
aas
lcall
xchg
out
sahf
pop
pop
test
cmpsb
mov
fs
loopne
inc
fs
rol
stos
clc
stos
and
sub
jbe
jno
mov
mov
aam
jl
ja
pop
cs
inc
rcrl
push
in
ror
incb
cmp
xlat
mov
fmull
js
aad
pop
inc
cmp
sub
data16
sahf
mov
mov
icebp
jns
daa
in
shlb
shrb
insb
dec
jp
sbb
stos
inc
mov
sbb
imul
xor
lcall
pop
xchg
out
cmp
or
les
adc
mov
outsl
pop
mov
jp
bound
es
jmp
loope
mov
adcl
dec
ficoms
icebp
loop
aas
adc
push
ficoml
sbb
jae
mov
pop
xchg
iret
jl
fcmovne
pusha
cltd
pop
xchg
mov
or
nop
sti
gs
aas
loopew
sbbb
pmaddwd
mov
fsqrt
adcl
ret
mov
pop
outsb
and
dec
ja
test
xchg
flds
xchg
out
movsl
fldenv
int
fstp
test
pop
hlt
in
adc
incl
and
adc
mov
test
xchg
fsub
cwtl
xlat
pop
cmp
adc
in
add
jnp
mov
cmc
das
lods
dec
fadd
push
gs
mov
push
xchg
lcall
out
mov
fdivrl
and
test
icebp
dec
popf
lods
dec
xchg
ret
leave
scas
mov
adc
xor
pusha
adc
hlt
call
movsl
jo
mov
ret
jno
scas
adc
inc
pop
insl
fcomps
cld
xor
dec
cld
cmp
jb
jb
sub
pop
cmpsl
inc
push
mov
hlt
pop
lock
fiaddl
insl
daa
or
cmp
jae
xor
and
adc
pop
sub
rcrb
sti
scas
aam
outsb
loope
fsubl
pop
das
addr16
mov
add
jno
loop
lret
sub
pop
mov
push
dec
in
clc
inc
cmp
fidivs
xor
pushf
jnp
test
data16
scas
lcall
pop
xchg
cli
les
or
out
sbb
in
test
jg
jl
cmp
les
loope
nop
jge
cmp
mov
xchg
mov
and
push
test
lea
daa
aas
mov
popa
rorl
sub
stc
call
hlt
pushf
out
pop
pop
das
add
fildl
adc
jns
insb
adc
movsl
repz
push
sbb
shr
daa
sbb
jne
push
or
xor
xchg
ret
pop
hlt
pop
bswap
stos
push
jge
jg
xchg
cmp
or
sbb
inc
mov
imul
mov
ficoms
dec
push
out
pop
in
mov
aad
addr16
push
sub
addr16
outsl
dec
nop
cmpsl
loop
cmp
out
mov
fsubr
les
sti
cmc
add
sbb
cmp
or
les
out
push
js
popf
int
xor
dec
dec
sbb
adc
inc
lods
add
mov
and
mov
sbb
jg
fsubrs
mov
sbb
js
mov
cmpsl
lret
jns
sbb
jp
ds
mov
push
popf
dec
or
sarl
adc
pop
insl
xor
dec
jle
cmp
or
and
std
orl
scas
mov
pop
add
rcr
bound
dec
dec
and
sti
loop
inc
push
jne
aad
push
clc
fistl
sub
adcb
lods
push
cmp
mov
or
sahf
and
adc
or
stc
rcll
out
pushf
ljmp
popf
loop
lock
les
je
sbb
insl
insb
std
pop
test
jno
das
adc
scas
stos
pop
lcall
jge
shl
or
mov
cmp
adc
inc
stos
lcall
push
add
sbb
adc
and
mov
sbb
lahf
loop
lret
jl
xchg
inc
mov
js
adc
xchg
hlt
lock
mov
and
add
nop
lahf
push
push
loop
mov
out
and
or
mov
sti
mov
jbe
shll
pop
mov
lret
mov
out
lcall
not
sarb
sbb
popf
scas
les
pop
out
addr16
cmp
pop
arpl
loopne
mov
mov
pop
loopne
fldenv
jmp
cmp
scas
out
mov
sbb
push
mov
cmp
int
and
loopne
adc
adc
enter
arpl
cld
cmp
mov
outsl
gs
out
sbb
jnp
lahf
test
and
sti
jp
sub
add
and
and
jp
lret
js
or
xchg
xchg
mov
xlat
out
xchg
sbb
lods
or
jle
jecxz
mov
dec
icebp
rolb
inc
xchg
mov
sbb
push
sarb
pop
jns
jb
repnz
insb
cmp
dec
mov
sbb
dec
push
pop
aas
je
add
jo
pop
fcoms
xchg
push
dec
sub
sub
push
je
pop
cmc
mov
loop
fmulp
and
nop
jno
div
cwtl
mov
ret
pop
in
out
roll
mov
mov
mov
lret
add
mov
das
mov
imul
adc
inc
adc
inc
je
test
push
shll
roll
pop
stos
loop
sbb
jmp
rclb
dec
add
js
or
mov
adc
movsb
jno
pop
ja
loop
flds
stos
sarl
fmuls
ffree
enter
dec
xchg
mov
repnz
mov
dec
aaa
movsl
adc
fsubr
nop
push
xchg
push
pop
xchg
push
pop
lds
pop
mov
arpl
fstps
frstor
mov
test
cmp
mov
sub
out
dec
sbb
insl
push
out
mov
pop
xor
lret
out
or
popa
repnz
icebp
addr16
rcll
cs
inc
fstpl
scas
jmp
shlb
cmp
das
in
and
stc
xor
mov
or
shrl
adc
outsb
leave
adc
pop
mov
hlt
daa
dec
cmp
negl
mov
xchg
cmp
clc
dec
push
pop
mov
jno
xchg
icebp
shll
sbb
xchg
insl
adc
je
inc
cld
mov
call
clc
negb
mov
mov
push
xor
dec
adc
xchg
add
fld1
dec
aas
or
cltd
adc
loopne
pop
lcall
test
sub
jns
test
dec
je
mov
cmp
bound
xchg
scas
enter
push
cwtl
or
divb
and
xchg
stos
or
lret
inc
enter
lcall
jmp
xor
dec
bound
inc
adc
insl
fists
lcall
clc
in
mov
es
push
leave
sahf
add
sub
xorb
jnp
push
and
out
mov
gs
mov
adc
clc
aas
decb
stos
sub
push
xchg
jl
pop
rorl
cltd
jne
inc
add
pop
pop
out
pop
aas
sub
nop
sti
add
or
xor
add
push
cmpsl
jge
in
add
test
xor
out
in
decl
or
adc
arpl
in
dec
sbb
addb
je
popa
pop
adc
call
loopne
insl
cli
test
out
inc
popa
test
test
push
mov
mov
orb
testl
xchg
xor
jmp
outsl
lods
jmp
jne
sub
mov
push
out
mov
add
jnp
lock
inc
xchg
call
test
jg
sbb
jnp
push
ljmp
sub
les
das
cmc
lock
add
push
dec
aas
push
daa
cmp
test
scas
add
arpl
jo
jno
or
jmp
sbb
mov
mov
pop
add
xchg
mov
clc
pop
sbb
inc
decb
imul
adc
loop
rclb
movsb
add
dec
ficoms
das
pop
sub
xor
rorb
ja
lods
sarb
dec
pop
cltd
fstps
enter
ret
mov
lret
bound
add
jne
xor
lcall
lods
js
and
movsl
and
mov
pop
sub
mov
outsl
imul
xlat
dec
mov
out
les
dec
rclb
les
and
arpl
xchg
daa
push
aad
mov
inc
daa
inc
inc
cmpsb
jnp
jb
mov
pop
daa
or
pop
out
adc
mov
or
lea
pop
imul
movsl
xchg
sbb
mov
repz
or
imul
sti
hlt
cmp
and
mov
push
push
stos
dec
mov
pushf
repnz
xchg
xchg
or
pop
xchg
mov
sbb
sbb
xchg
mov
xchg
push
scas
inc
xor
lahf
cwtl
push
rcll
pop
pusha
inc
jbe
faddl
sti
mov
mov
repnz
push
push
cld
clc
fsubr
cmp
scas
mov
xor
outsl
sub
test
dec
lods
lock
je
aad
out
cltd
out
lods
cld
jnp
adc
sub
pop
adc
imul
mov
fstl
pop
cmpl
pushf
rcl
or
and
adc
mov
sub
xor
xor
mov
xchg
int
jecxz
jmp
pop
or
movsl
jno
sbbb
orl
fld1
adc
pop
push
das
pop
nop
mov
mov
mov
pop
stos
lea
lret
jo
sbb
fsubrs
jg
std
notl
and
push
scas
push
inc
sub
xchg
std
cmc
fisubs
mov
sub
push
sub
xor
cmp
in
or
sbb
ja
sbb
sti
or
push
push
dec
xor
or
std
mov
aad
stc
push
cmp
dec
push
lahf
loope
xorb
dec
int
xor
mov
fcompl
lret
inc
mov
stc
iret
cmpsb
pushf
aaa
cmpsl
mov
push
mov
enter
das
iret
das
push
pop
jl
xchg
sbb
push
push
leave
and
or
push
sahf
shlb
xchg
test
and
xchg
cld
pop
lock
add
mov
dec
sub
loopne
or
pop
adc
xchg
dec
mov
loopne
cmp
or
outsb
sub
stos
xor
out
push
cmpsl
mov
cld
pop
xor
xor
ficomps
lahf
pop
in
xor
sti
orb
jnp
dec
decl
pop
dec
push
jne
jp
arpl
pop
shlb
jne
popf
arpl
sub
fs
int3
or
pop
daa
pushf
ret
icebp
shl
imul
mov
inc
mov
or
xchg
jle
push
std
inc
fwait
push
sbb
sub
xor
faddl
fcmovne
add
aaa
or
mov
movsl
xchg
arpl
push
test
fs
call
xchg
lret
jo
or
jnp
das
sbb
cmpsb
out
mov
mov
xorb
inc
push
pop
and
rorl
xchg
inc
add
sahf
ljmp
mov
jnp
pop
out
pop
xor
xlat
add
fiaddl
cld
mov
int
pop
movsl
inc
fsubrp
popf
rcll
sarb
cmpsb
daa
adc
ret
mov
movsl
cld
lods
xor
test
cwtl
clc
mov
daa
sub
push
xchg
push
push
add
enter
lea
xchg
les
movsb
lcall
cld
les
xchg
es
jnp
in
pop
adc
shlb
outsb
mov
jbe
cmp
out
daa
lds
iret
mov
rcl
hlt
cmp
shl
test
sbb
xchg
xor
add
add
push
movsb
add
xchg
mov
notb
cwtl
sub
shll
mov
fpatan
push
insl
sbb
mov
fistpl
dec
push
dec
xchg
test
and
rcll
cmpl
mov
push
or
cmpsb
mov
push
pop
push
icebp
dec
sbb
imul
icebp
fldcw
cmp
jmp
sub
push
mov
xchg
out
mov
fbld
pop
dec
push
lds
push
dec
mov
push
inc
xorb
sub
mov
imul
and
adc
add
sbb
fistpl
mov
ljmp
stos
mov
xchg
pop
mov
cwtl
xchg
lock
rol
cmp
mov
js
and
ret
fcoml
ja
cltd
insl
ret
push
in
bound
pop
hlt
lcall
test
ret
mov
loop
xlat
jmp
int3
xor
fsub
andl
fbstp
test
loopne
and
in
inc
inc
pushf
cltd
sbb
mov
leave
or
cmp
and
aad
adc
into
mov
jge
mov
xchg
je
outsb
lods
icebp
mov
stos
mov
iret
inc
aad
enter
loope
pop
rcrl
lea
jmp
ret
fs
test
xor
mov
subl
dec
test
sub
cmp
add
push
inc
scas
cs
xchg
mov
mov
sub
jnp
pop
xor
pop
xor
mov
add
cmp
jb
out
divl
fwait
addl
adc
mov
jp
dec
xor
in
xor
test
out
adc
cmp
xchg
jns
add
inc
test
push
xor
cltd
jbe
icebp
pop
add
cmp
or
pop
test
outsb
xlat
cltd
push
fstl
mov
adc
sarl
xchg
jne
inc
or
or
add
mov
fcomip
jo
sub
cltd
mov
push
test
cmp
or
dec
jmp
lods
adc
enter
add
cmp
in
add
inc
jge
ljmp
dec
jle
addr16
in
mov
repz
shll
out
clc
mov
mov
or
mov
pop
mov
adc
add
pop
mov
jecxz
push
stos
daa
rolb
mov
nop
add
rorb
pop
ljmp
rcr
bound
imul
sti
mov
paddusw
xchg
repnz
mov
lahf
dec
lea
sub
sbb
iret
stc
or
rolb
aam
arpl
xchg
push
jg
mov
sub
jb
loop
push
mov
lcall
push
orl
addl
pop
inc
push
cmpsb
xor
clc
pop
push
sbb
insl
subl
sub
fstp
pushf
bound
popa
andl
pop
sub
push
mov
outsl
int
in
inc
pop
pop
sub
add
fisttpl
lcall
xchg
movsb
pop
fiaddl
dec
outsb
in
xor
test
mov
cmpsb
test
outsl
daa
inc
or
inc
cmp
cmp
cmp
and
shrl
ja
push
xchg
sub
add
pop
stos
fstpl
sbb
xchg
jle
movd
lods
jecxz
pushl
mov
cli
andl
jne
jle
jnp
sub
sbb
into
aad
sbb
or
cmpsl
repz
mov
sub
push
inc
icebp
lods
cmpsl
call
sbb
test
arpl
roll
cmp
addl
test
loope
aas
insl
cs
lahf
cmp
jne
inc
sbb
fisttpll
lahf
jmp
lret
cmp
fildll
ja
ja
ds
ja
call
dec
jns
jl
leave
lret
dec
mov
pop
add
cmp
mov
mov
add
mov
xchg
dec
mov
mov
mov
pushl
mov
fwait
mov
sub
insl
incl
ret
xor
loop
mov
push
out
add
inc
xchg
inc
fdivrl
mov
faddp
in
cmpb
cmp
adc
cmp
roll
shlb
sub
push
lds
push
mov
cmp
push
and
pop
call
imulb
and
dec
adc
insb
insl
push
pop
jge
ja
addl
in
mov
popa
loop
nop
sbbb
push
in
xchg
jne
mov
sbb
stos
xchg
fidivrs
xor
mov
lea
xchg
es
ret
ret
popa
movsb
xor
push
pop
cmp
inc
xchg
jg
and
shll
lahf
sarb
cltd
xchg
or
jp
roll
jge
addr16
icebp
in
sbb
adc
xor
sarl
add
push
fmul
imul
or
imul
movsb
cli
mov
mov
fldl
fwait
les
outsb
mov
xchg
pop
loope
pop
sub
js
mov
out
mov
xor
out
das
mov
push
cltd
and
and
adc
mov
add
sub
imul
cmp
jbe
inc
rolb
lcall
fsubrl
imul
cmp
cs
adc
in
nop
sub
jne
mov
push
cld
and
pop
jnp
xor
fcoml
int3
jbe
les
out
jne
mov
adc
xor
hlt
pop
and
xchg
call
xchg
or
out
adc
aas
push
dec
xor
dec
or
dec
inc
fdivs
mov
out
ja
xor
add
fldl
enter
push
jl
push
xorb
adc
sahf
jae
push
xchg
sbb
rolb
dec
daa
outsl
sub
cs
mov
rcll
dec
sbb
rorb
mov
push
scas
dec
xchg
mov
adc
mov
addb
dec
mov
xor
out
mov
sahf
pop
push
sub
lcall
ret
xchg
icebp
imul
subb
andb
lahf
stos
push
inc
push
jae
or
add
aas
adc
test
or
jmp
ret
and
jns
inc
insl
xchg
arpl
jecxz
not
fmuls
xlat
xchg
or
xor
mov
or
inc
inc
vfnmadd132ss
jle
mov
cmpsb
lock
mov
std
ja
jmp
ja
and
pop
mov
inc
adc
sub
data16
jp
stc
ss
jp
mov
stos
inc
js
and
lods
adc
cmp
pushf
shrb
add
sbb
push
inc
fs
or
add
pop
push
fcoms
adc
imul
mov
gs
int3
inc
mov
mov
in
imul
loop
inc
add
flds
mov
mov
loop
push
dec
push
dec
or
jge
jno
inc
bound
add
jle
mov
aad
fimuls
mov
xchg
ljmp
iret
decb
in
xchg
scas
inc
adc
loopne
jne
addr16
aas
push
inc
cmc
loop
testb
pop
sti
aam
xchg
adc
pop
les
pushf
out
cmpb
hlt
lahf
or
pushl
jl
es
fcompl
addr16
lcall
repnz
push
fmull
stos
lds
lea
adc
pop
scas
mov
popa
or
addl
or
enter
clc
dec
aas
jmp
push
cmp
rorl
xor
mov
dec
xchg
jge
stos
pushf
dec
jle
in
lcall
cltd
movsb
rorb
or
jmp
xorb
push
push
ds
mov
xchg
es
cmp
xor
or
jns
add
mov
cli
loope
out
jae
sub
shl
sbb
jl
xor
pop
ret
sbb
add
stc
inc
xchg
jecxz
mov
bound
xchg
jp
push
jae
das
pop
movsl
adc
adc
xor
mov
pop
fs
cld
subb
jae
xchg
fdivl
into
cmp
or
jmp
inc
xchg
push
jbe
ret
shr
daa
jno
dec
sbb
mov
stos
mov
add
shlb
add
pusha
jmp
movsb
push
mov
inc
push
push
push
jp
testb
xchg
mov
push
xchg
mov
fsubrp
adc
xchg
sbb
and
cmpsl
pushf
mov
mov
and
xchg
push
dec
mov
scas
jnp
pop
sbbb
mov
addr16
pop
lea
aad
jbe
mov
test
push
pop
lods
insb
adc
inc
int
sub
mov
or
mov
es
inc
repz
sbb
addr16
push
stos
push
cltd
pop
lea
mov
mov
xor
mov
xchg
addl
ja
dec
test
lahf
outsl
call
mov
mov
jo
mov
jb
xchg
add
and
xchg
inc
mov
jb
outsb
mov
loopne
cli
inc
lahf
xor
js
sub
jnp
mov
mov
push
mov
dec
jae
xchg
pop
push
scas
dec
adc
pop
icebp
mov
scas
jne
dec
jae
add
lcall
dec
cwtl
arpl
iret
call
sti
lcall
lea
inc
rol
shll
cmp
xchg
or
and
push
xchg
mov
add
js
das
sub
jecxz
cwtl
cmp
bound
mov
iret
cmc
daa
js
push
xchg
pop
pop
mov
cmp
xchg
aam
xchg
push
push
pop
sub
adc
mov
push
cmp
mov
in
out
out
adc
pop
xchg
loopne
cmp
jb
cwtl
mov
push
pop
ds
jle
ds
in
lock
push
pop
ds
jnp
push
loope
jbe
flds
xchg
loop
imul
cmp
out
dec
jnp
adc
jmp
nop
addr16
arpl
loop
dec
dec
fisubrl
lods
sahf
das
and
sti
loopne
xchg
fwait
mov
cli
push
jns
fdivs
bound
mov
sti
push
add
cs
stos
mov
cwtl
xchg
pop
and
or
cmp
adc
cmpsl
inc
mov
or
jns
pop
icebp
jl
jp
mov
push
mov
dec
fwait
jae
sbb
jecxz
add
or
sub
push
fstp
mov
fwait
dec
lods
xchg
xor
sahf
xchg
adc
popa
add
aaa
aam
inc
mov
movsl
inc
sub
cmc
pop
pop
in
je
and
cmp
out
rcl
lods
dec
bound
in
jle
push
xor
lcall
add
mov
scas
mov
out
fwait
lcall
ja
push
dec
loop
scas
jecxz
cmp
aad
cmpsl
jmp
scas
inc
test
sahf
ja
sub
pop
push
icebp
sbb
xchg
pop
jno
push
jg
pop
out
pop
js
pop
dec
add
push
mov
pop
aad
jmp
loopne
mov
cmpsl
xorb
cmp
adc
jns
in
pop
xor
sbb
mov
loope
sub
mov
inc
dec
shlb
inc
test
jo
jo
stc
push
imul
xor
cmp
and
add
cmpl
sti
fisubrs
mov
cmp
aam
mov
repz
xchg
xor
arpl
push
push
enter
stos
loope
and
sub
aam
ds
mov
sub
cmc
movsb
sub
push
int
jb
xchg
into
ds
or
or
pop
imul
and
lahf
out
add
jl
pushf
in
sbb
stc
daa
clc
scas
outsl
jns
stc
xor
pushf
sub
and
fisttpl
enter
or
outsb
inc
shr
in
sarb
rol
fcoms
xor
dec
dec
sbb
pop
repnz
mov
lahf
mov
add
or
clc
pop
mov
push
in
cwtl
sbb
dec
mov
test
or
sub
xor
add
xchg
jle
idivb
pop
jno
and
sub
sub
cwtl
push
sbb
imul
pop
xchg
xchg
cs
inc
jmp
enter
push
push
scas
dec
mov
cltd
in
mov
xor
inc
pushf
pop
jg
or
es
dec
arpl
enter
cmp
scas
sbb
pusha
fcmovnu
scas
sub
push
adcb
dec
jmp
sbb
shlb
dec
scas
mov
jecxz
adc
jl
pop
push
xchg
sbb
fs
int
clc
mov
mov
pop
adc
sti
push
lret
gs
jo
mov
pop
fdivs
sarb
xchg
mov
movntq
mov
cmpsl
xchg
lret
or
and
adc
test
xor
pop
push
pop
int3
mov
out
mov
pop
lahf
lahf
mov
enter
icebp
movsb
inc
xor
sbb
cli
and
push
loope
mov
lock
outsl
pop
cmp
stos
int
add
popa
out
cmp
dec
mov
pop
test
mov
fmuls
flds
movsl
add
add
clc
jns
ss
fsubp
daa
adc
xchg
sub
sti
push
sub
lea
rolb
pop
std
dec
cltd
aaa
add
sbb
jne
xchg
orb
sbb
stos
shrb
popa
sub
add
sub
sub
mov
or
xor
sub
dec
outsb
hlt
jno
xor
scas
xor
cli
inc
jmp
inc
lcall
adc
pop
lcall
or
cmp
push
push
cmp
ds
pop
push
mov
dec
out
jb
les
out
popf
mov
and
inc
xor
ljmp
stos
sbb
ret
rcl
sub
loope
out
pop
cmp
or
stc
pop
pop
and
sub
clc
test
dec
push
mov
adc
and
sub
lahf
mov
mov
and
dec
scas
out
adc
outsb
jne
mov
cmc
xchg
push
negb
test
adc
es
push
mov
out
jmp
cmpsb
cltd
xor
test
fsubs
cld
or
xchg
mov
push
fiadds
aaa
cwtl
clc
push
es
cmp
push
cmp
shlb
filds
mov
jo
add
and
push
mov
sarl
add
add
addr16
cmp
inc
sbb
aad
xchg
sbb
push
push
mov
or
cmp
and
scas
outsl
fdiv
popf
cli
icebp
ja
sub
jmp
add
ljmp
xchg
rcll
out
in
movsb
add
cmpl
sbb
loopne
repz
negb
add
fwait
and
lods
and
xchg
into
dec
cld
mov
out
pop
pop
push
into
xchg
jg
aad
adc
rolb
push
jle
ljmp
dec
cmp
push
movaps
lods
mov
inc
push
and
inc
loope
call
scas
cld
lock
div
cld
insl
mov
jo
mov
or
imul
inc
inc
and
daa
rclb
jl
or
pop
std
mov
xchg
lods
pop
pop
adc
jb
or
movswl
rolb
mov
rcrl
sahf
f2xm1
repnz
jb
aam
sub
clc
idivl
outsl
mov
xchg
ficomps
out
cli
sbb
scas
dec
push
cltd
pop
dec
inc
inc
adc
jl
popf
cmpsb
aaa
cmp
cmp
cmp
sub
scas
test
or
imul
in
nop
fstps
repz
out
xchg
orb
imul
repz
test
lahf
adc
jp
dec
push
or
fisubrs
inc
bound
cltd
sub
push
aad
sbb
xor
push
push
add
push
lret
out
sub
sbb
or
xchg
push
leave
dec
negl
xor
repz
push
movsb
push
mov
pop
jp
sub
fstpt
outsl
fistpll
loop
and
dec
cmp
or
xor
pop
push
xchg
inc
xchg
xor
test
xchg
test
and
sbb
push
xor
daa
or
ret
pop
clc
lret
cmp
jmp
sub
or
scas
mov
pmulhw
xor
jae
lret
aad
cmp
stos
aam
sub
les
cmp
std
das
pop
jbe
dec
jmp
push
js
loopne
loope
inc
jecxz
repz
outsb
addr16
jae
mov
add
out
insb
ljmp
pop
mov
sbb
into
jmp
jbe
sarb
xor
das
into
mov
mov
je
inc
jo
in
jge
in
lock
inc
add
mov
lcall
ret
outsl
fstps
cmc
adc
lock
adc
sbb
rorl
mov
repz
repz
jmp
pop
ljmp
in
jle
pop
mov
subb
push
mov
jno
nop
sbb
add
pusha
imul
xor
in
das
jmp
push
stos
cmovp
ss
insl
fs
lock
cmpsb
sub
fwait
jnp
jns
pop
mov
jmp
jecxz
into
lahf
sbb
mov
fwait
cmp
jo
addr16
outsb
xor
sbb
imul
fnstsw
int3
sub
pop
xor
jmp
pop
sbb
enter
imul
int
cmpsl
movsl
popa
je
lods
mov
mov
push
adc
pop
mov
mov
lret
test
jns
rcl
and
adc
hlt
icebp
cmp
bound
sbb
pop
pop
test
jg
mov
clc
sbb
enter
inc
sub
mov
lret
pop
ret
jo
ret
arpl
mov
mov
jp
adc
and
js
sub
mov
add
jmp
fdivs
repnz
punpckldq
lret
fmull
in
cmpsb
xor
aam
in
gs
fsubrp
and
dec
sbb
jo
arpl
add
sbb
dec
and
std
jb
and
repz
test
xchg
adc
insb
out
test
xchg
fildl
mov
imul
mov
pop
and
or
pushf
loop
int
mov
out
pop
fiaddl
fsubs
in
loop
mul
or
jns
out
dec
xchg
mov
les
or
adc
cmp
cltd
outsb
mov
add
addr16
scas
jecxz
add
in
xchg
xchg
mov
xlat
insl
inc
popl
lret
pop
in
fwait
pop
mov
add
pop
push
add
lahf
ds
lods
roll
popa
pop
mov
test
test
out
inc
movsb
mov
sar
imul
icebp
gs
dec
xchg
mov
lods
push
subb
icebp
pushf
or
xchg
jl
dec
insl
cmpsb
jns
leave
push
or
push
lock
and
push
jnp
add
push
adc
xchg
pop
sarb
nop
mov
cltd
mov
stos
cmp
movsb
fldcw
pop
rcrb
xchg
leave
sub
add
into
push
inc
xchg
push
or
rcll
pop
subl
lahf
mov
sbb
lds
adc
push
sbb
add
or
cmp
xchg
fnstcw
adc
lods
je
fdivrl
sahf
xchg
jge
jp
mov
je
xchg
ror
or
fmull
mov
inc
lret
iret
push
aad
lret
mov
xor
dec
addb
out
adc
shrl
neg
mov
sahf
push
add
xorl
das
jb
div
xchg
shll
inc
dec
iret
mov
sbb
mov
mov
mov
out
and
aas
test
rolw
dec
ljmp
xchg
sbb
dec
rcrb
mov
js
xor
rorb
cmp
in
mov
push
call
mov
pop
rclb
cmp
mov
lcall
dec
jmp
xchg
in
notb
mov
inc
aaa
arpl
hlt
add
adc
sbb
xchg
fidivrs
mov
ret
dec
lret
xor
jbe
mov
sbb
cmp
inc
mov
xchg
xchg
jo
xor
cmp
fnstenv
dec
jmp
arpl
cmp
cs
dec
aaa
sbb
dec
pop
pop
mov
mov
jl
and
dec
lods
int
leave
lds
jbe
pusha
xchg
lock
push
aas
pop
inc
xchg
dec
out
leave
fs
jmp
in
insb
cmp
pop
push
push
dec
sub
mov
outsb
out
cmpl
cmp
sub
repz
clc
cs
or
xlat
pop
mov
push
out
jecxz
mov
test
cmpsb
cmp
cltd
push
lret
pop
inc
push
aas
inc
addr16
or
xchg
scas
fs
sysret
jb
loope
int3
inc
adc
int
sbb
xor
jge
jnp
lods
es
cltd
ja,pt
rcr
pop
les
sahf
imul
push
sbb
inc
bnd
icebp
pop
bound
pop
pop
out
aad
dec
imul
addb
stos
icebp
sbb
push
stc
mov
icebp
adc
cmp
mov
cmp
out
pusha
add
add
dec
mov
repnz
mov
xchg
mov
xchg
in
xchg
cltd
pop
mov
xchg
lock
mov
out
jle
jae
mov
ret
pop
rorl
inc
outsl
in
sub
jne
and
jl
push
xor
jb
pop
test
cmpsl
jl
dec
lcall
cli
sub
mov
das
inc
jp
mov
daa
inc
shlb
gs
into
call
shlb
mov
dec
mov
xor
jns
inc
or
dec
lcall
data16
popf
xchg
pop
insb
in
les
jo
pop
loope
jbe
jecxz
aad
imul
pop
pop
lea
jns
mov
js
adc
and
inc
cmp
xorb
xchg
adc
fdivrp
adc
gs
adc
xor
mov
mov
insb
lahf
shrb
lock
sbb
xchg
jb
mov
dec
rolb
sbbl
repnz
fadd
loopne
int3
rcl
dec
loop
or
sub
loope
fs
test
cmp
mov
in
sbb
mov
and
or
gs
cmp
rcll
imul
mov
popa
insl
sbb
xorl
aad
pop
mov
andl
inc
rolb
cwtl
rclb
cmp
cmpsl
pop
dec
jnp
lds
call
push
aam
divl
add
cli
jmp
inc
push
frstor
mov
movsb
sbb
insb
jmp
ljmp
add
adc
decl
jns
jno
rclb
out
enter
and
repz
mov
add
mov
sbb
rcrl
in
push
js
sbb
mov
mov
das
jecxz,pn
add
push
mov
addl
or
shll
daa
or
cmp
jo
mov
push
sbb
divb
mov
push
xchg
push
push
adc
inc
xchg
faddl
lods
and
cmp
leave
out
mov
sahf
sub
in
repnz
jle
mov
popf
inc
cwtl
leave
fistl
mov
sbb
push
cmp
pop
lods
pop
test
fistl
das
pop
xchg
mov
rol
mov
insl
retw
sub
lahf
mov
test
xchg
inc
xor
xor
fisubs
adc
jmp
sti
sti
xor
mov
in
arpl
cmp
adc
and
lods
mulb
sub
daa
cld
jae
mov
les
mov
mov
mov
xchg
insl
sti
fsub
cmpsb
mov
stc
int
cmp
cmp
jo
inc
repz
ss
stc
sar
pop
inc
inc
fsub
pusha
in
mov
adc
das
cltd
std
insb
add
aaa
inc
push
enter
push
xchg
rcrb
movsb
sbb
cmp
adc
or
and
mov
and
jecxz
jnp
out
std
inc
add
loope
inc
popa
in
addr16
hlt
dec
lods
xchg
movsb
ss
loop
dec
push
push
rol
cli
push
scas
ficomps
mov
mov
leave
push
mov
jo
cld
aas
rorl
test
pusha
xor
test
lea
movsb
divl
inc
mov
test
cmp
data16
fbld
cmp
out
stos
in
pop
dec
inc
push
add
addl
pop
push
roll
and
adc
xlat
aam
and
inc
and
and
xchg
jge
loop
xchg
mov
loop
in
ja
popa
fcoml
out
inc
or
int
pop
mov
sbb
rcrl
notb
xchg
pop
pop
shr
aas
dec
repz
and
mov
dec
lahf
in
lahf
je
jae
pop
adc
ds
and
xlat
push
es
in
mov
pop
push
xchg
pop
mov
xor
lds
xlat
fwait
adc
in
push
adc
cli
hlt
push
pop
xchg
jne
imul
lcall
xor
pop
inc
dec
mov
cmpb
xor
jle
xchg
dec
icebp
push
jno
pop
rcrl
or
inc
cmpsl
mov
mov
jg
push
mov
sub
mov
lret
mov
outsb
mov
lret
and
jle
pop
imul
hlt
jge
es
imul
int
and
jmp
out
push
sub
adc
cmp
cmc
addb
pop
mov
dec
shll
push
cld
mov
push
pop
sti
add
test
jb
push
sub
cmpxchg
push
fbld
adc
ret
nop
inc
ljmp
repz
mov
jne
inc
mov
jmp
mov
enter
push
loope
cmovnp
pop
xor
xor
mov
lahf
add
sti
jmp
scas
mov
xchg
mov
scas
loop
sbb
dec
xchg
sub
cmc
xor
shlb
fs
adc
cmp
xchg
xor
xor
sahf
inc
fdiv
cmc
and
lods
jmp
jl,pt
ja
pop
mov
add
scas
add
fldl
inc
push
js
push
aas
cli
sbb
in
mov
xor
sub
cs
rcrb
into
leave
stos
jl
mov
inc
mov
inc
inc
xor
fistpll
sub
push
pop
xor
popa
jmp
mov
rorl
movups
push
int
dec
fcompl
xchg
es
cs
adc
mov
fcomps
movsl
xchg
std
loope
jnp
lods
out
inc
and
dec
add
push
sbb
mov
sbb
ret
pop
hlt
dec
rorl
sub
aad
sub
xor
inc
fsubr
pop
jp
xlat
faddl
inc
sarl
adc
cs
test
gs
add
rclb
cmp
dec
fcmovnbe
popf
add
aas
sbb
out
int3
inc
loop
mov
hlt
add
pusha
xor
mov
addr16
jmp
pusha
les
pop
movsb
flds
aam
mov
pop
add
inc
adc
daa
jns
addr16
shlb
sar
adc
xchg
mov
aas
inc
mov
stc
push
cmc
das
lods
or
sti
mov
push
add
sub
mov
js
dec
pop
add
mov
insb
mov
add
cmpb
pop
pop
sbb
arpl
inc
stos
lods
test
pusha
loop
pop
cmp
xchg
jae
test
loop
stos
es
cmp
lret
mov
popa
sbb
adc
in
cmp
lods
js
push
xchg
lahf
jl
fimull
mov
lcall
es
sarl
lcall
xor
sub
scas
outsl
hlt
mov
sahf
pop
push
cs
or
fstpt
idivl
pop
leave
fidivrl
adc
daa
aad
mov
cmpsb
test
inc
and
insb
idiv
ret
pop
daa
push
mov
inc
and
rolb
lea
rol
dec
or
jl
pop
lret
movsb
test
jle
xchg
ret
in
dec
std
xchg
lahf
ljmp
lea
outsl
jo
jmp
cs
mov
ja
cltd
or
js
stos
push
pop
jne
je
mov
or
hlt
adc
mov
mov
adc
fisttpll
pop
stc
pop
test
push
sti
call
fnstcw
dec
test
pusha
out
popa
outsl
ret
stos
stc
pusha
mov
std
sub
xor
xor
xor
ret
xchg
out
xor
scas
aam
jb
pop
mov
and
push
lds
in
mov
scas
daa
pop
sbb
cmc
idivl
repz
cmpsl
jo
mov
fisubl
nop
je
cmpsl
mov
xchg
pop
cmp
jae
std
add
dec
fwait
jg
jno
negl
dec
fmul
pop
stos
stc
adc
test
and
or
enter
xor
mov
add
lock
jae
cs
decl
std
sbb
or
fists
pop
jb
adc
sub
jecxz
mov
push
and
jnp
jp
mov
mov
jo
mov
call
out
out
out
and
push
inc
pop
add
les
repnz
pop
xchg
in
iret
jp
insb
neg
mov
pushf
mov
jo
xchg
xchg
fiadds
mov
inc
dec
sub
mov
adc
add
add
dec
aad
and
jne
int
dec
dec
lahf
sbb
bound
mov
ret
in
push
rcll
jp
jmp
xchg
js
hlt
popa
mov
cs
out
mov
dec
push
lcall
adc
mov
lods
movsl
mov
pop
rcrl
int3
jl
out
and
add
mov
fdivr
cmc
jmp
mov
lea
jl
stos
in
jne
sub
fisttpl
xchg
mov
sub
lea
or
sub
in
iret
loop
arpl
insb
repz
ljmp
xchg
jmp
ret
cmp
ss
int3
lods
mov
mov
sarl
push
lcall
loope
icebp
and
and
push
and
or
int
or
dec
into
mov
pop
orb
mov
aas
arpl
cmp
sahf
xor
mov
inc
mov
sbb
lock
and
stos
out
add
xchg
adc
ror
push
sub
popl
rorl
addl
xchg
and
lret
sub
inc
inc
fmul
leave
sbb
clc
lea
mull
int3
mov
lcall
jg
nop
push
mov
mov
je
inc
inc
mov
xor
pop
jnp
test
inc
pushf
or
dec
pop
out
jae
shrl
xor
test
mov
jae
fwait
sub
xchg
xchg
jle
insl
mov
stos
jle
fisubrs
pop
inc
aam
push
in
adc
in
sub
mov
cmc
adc
bound
mov
pcmpgtb
mov
cmp
adc
test
pop
or
push
dec
ja
mov
out
int3
dec
int
sub
jmp
and
dec
bound
adc
mov
shr
pop
leave
inc
mov
dec
mov
mov
pop
sub
lods
push
repz
in
jo
jecxz
sarl
or
fists
lahf
push
mov
mov
lods
movsb
cmc
sahf
rcrb
mov
aas
adc
test
sub
add
movq
insl
cltd
into
push
xchg
in
pushf
jmp
enter
fnstsw
xor
jb
lock
inc
mov
jmp
mov
push
add
sbb
adc
jae
adc
xor
dec
repnz
lcall
in
das
add
stc
pop
je
xchg
or
js
add
dec
xchg
stos
sub
je
jl
and
push
std
call
xor
std
mov
scas
push
loopne
test
in
jo
arpl
aaa
xor
iret
jo
sub
inc
adc
sub
call
or
lea
scas
sub
mov
inc
inc
pop
lcall
add
mov
mov
ret
or
mov
xchg
cmovs
fmulp
push
scas
popf
jne
inc
fsubrl
loop
popa
lret
lods
jg
cmpsl
or
mov
mov
mov
inc
pop
dec
jge
dec
into
and
loope
pop
fnstcw
push
jle
in
adc
icebp
cltd
pop
mov
push
push
sub
xchg
push
mov
clc
pop
dec
fs
sub
push
stos
mov
into
add
sub
mov
int
movsl
je
in
jl
fstpl
call
push
loopne
loope
fsubr
adc
data16
movsl
and
repz
mov
jne
cwtl
add
inc
xchg
jl
repnz
xchg
cmpsb
dec
adc
xorl
scas
out
testl
jge
das
pushf
insb
or
dec
pop
xchg
ss
pop
fbld
mov
sbb
jnp
dec
test
push
orl
call
xchg
dec
dec
enter
xchg
lahf
repz
adc
ja
mov
std
mov
loopne
xchg
dec
xor
hlt
loope
push
jb
out
bound
xor
and
sahf
mov
push
jno
cmp
and
rorl
adc
int3
inc
test
dec
xor
bswap
fadd
dec
adc
push
xchg
lret
fwait
jbe
dec
mov
xchg
push
xor
je
cmp
in
xor
sbb
sub
cmpsb
lods
outsl
push
jbe
cwtl
mov
fmul
lcall
dec
fisttpl
pop
jbe
or
xor
lods
jns
xchg
repz
aam
mov
pop
ljmp
popf
cwtl
mov
lock
repz
push
xchg
int
loope
fwait
nop
dec
lret
iret
push
lds
les
gs
xchg
clc
mov
stos
jmp
ss
outsb
cltd
dec
push
ds
or
std
add
pushf
popf
leave
stos
outsl
fistpll
dec
pop
mov
adc
cwtl
add
lahf
sbb
cmp
inc
xchg
jb
jecxz
sahf
lret
arpl
jmp
sbb
cs
movsl
inc
orb
mov
jle
cmp
lcall
pop
mov
mov
mov
push
seta
mov
sbb
lods
scas
lahf
pop
ror
push
pop
push
push
shlb
push
mov
es
into
mov
lret
into
in
sub
or
push
xchg
mov
mov
cmp
shlb
lret
jg
or
loopne
inc
add
movl
fcoms
inc
shlb
out
in
sahf
hlt
or
adc
inc
pop
mov
or
repz
insb
jbe
movsl
cmp
insl
cmpb
fwait
hlt
or
push
sbb
mov
movsb
repnz
mov
fwait
test
sub
add
out
lahf
je
add
xchg
lret
mov
fstpl
cmp
mov
neg
cmp
and
pop
jae
mov
push
or
xchg
int
push
gs
jb
xchg
push
xor
fsubrs
and
jbe
je
movsb
push
pop
jo
jbe,pn
adc
adc
scas
xor
cmp
push
cmp
jnp
sahf
clc
sbb
cld
jp
xor
lcall
mov
push
push
btr
xlat
push
adc
xchg
push
and
lds
mov
popf
in
jmp
or
mov
mov
cmc
es
rolb
in
mov
pushf
in
push
xor
repz
add
and
cmp
push
mov
jmp
sbb
xlat
imul
outsl
das
mov
mov
mov
loopne
lcall
test
gs
cs
fs
sbb
dec
jmp
and
fisttpll
fmulp
adc
cli
pop
lods
hlt
je
or
bound
inc
pop
sbb
aam
or
mov
sub
outsl
lahf
push
jp
insb
stos
insl
jno
int
mov
loope,pt
fwait
pop
movsb
fdivrp
cs
mov
cwtl
push
std
dec
icebp
sahf
ficompl
mov
cmp
repz
ret
adc
and
pusha
sub
int3
fcomi
sti
lock
or
mov
aad
lea
in
pop
pushf
lea
insl
sbb
int3
stos
fisttps
sbb
xor
lahf
and
aam
push
sbb
aaa
or
jmp
adc
add
movsb
fnstcw
outsl
ss
pop
jno
dec
clc
mov
sub
pop
push
ljmp
jg
xlat
repz
xchg
lods
outsb
cmp
xor
insb
sbb
pusha
mov
outsl
dec
test
mov
ss
push
outsl
cmp
cmp
push
inc
icebp
cmpsb
jl
pop
mov
lods
jno
xchg
orb
sahf
xchg
hlt
insb
or
cmp
jle
pop
into
xor
or
xlat
fcoml
pop
jl
pop
sti
cmp
fiaddl
int3
xchg
mov
imul
xchg
imul
mov
cwtl
mov
sbb
sbb
sub
hlt
xlat
mov
and
and
jmp
mov
inc
pop
jb
or
iret
loop
popa
jno
enter
push
fcom
or
es
stos
jno
jge
adc
push
lock
aad
adc
inc
lods
push
fdivr
icebp
adc
fnstsw
sub
aas
into
adc
add
adc
test
pop
xchg
or
cltd
or
insb
insl
bound
pop
dec
mov
mov
out
push
mov
popa
push
sub
or
int3
fstps
out
cmpsl
mov
push
push
jge
aad
xor
cmp
pop
xchg
rcll
cmpsl
push
clc
xor
jle
xchg
mov
mov
xor
mov
mov
andl
ss
movsl
mov
pop
and
pop
push
lcall
imul
mov
xor
scas
jnp
jo
nop
pop
and
test
leave
movsb
or
fdivrl
push
into
jmp
mov
mov
mov
or
rolb
sub
es
jle
mov
scas
sub
xchg
pop
dec
push
aad
pop
pop
repz
and
sbb
into
sbb
sbb
adc
lret
xor
cmp
and
xchg
mov
cmp
push
out
jne
call
push
jge
and
aam
repnz
and
pop
repnz
inc
jno
jge
and
test
mov
inc
fisubl
ror
sbb
dec
in
add
sahf
test
gs
mul
sub
jb
cld
imul
jbe
test
rcl
dec
sub
push
mov
test
mov
pop
fidivrl
out
lcall
gs
lock
or
sbb
clc
ss
dec
test
in
fnstenv
jp
mov
mov
fcompl
inc
xor
imul
jg
repnz
mov
nop
or
push
insb
xchg
push
push
mov
jp
mov
sbb
popf
cmpsl
xchg
push
mov
andl
push
xchg
cmp
fldcw
cs
out
ficoms
jae
ret
loopne
popa
lock
sbb
xor
rcpps
jmp
loopne
sbb
sbb
mov
lods
mov
icebp
in
mov
mov
jecxz
out
shlb
adc
mov
les
or
or
adc
mov
lods
cmp
mov
dec
repz
fs
mov
out
movsl
adc
dec
jne
outsb
jae
lods
sub
xlat
dec
sbb
xor
in
testb
fstpl
cs
add
call
ret
mov
sub
fildll
jo
loopne
push
add
and
mov
in
cmpb
cwtl
xchg
xchg
pop
jae
xor
pusha
inc
mov
mov
cmp
aas
or
sub
fstps
enter
out
push
cmp
jle
inc
push
dec
xchg
iret
adc
repz
dec
jbe
fimull
pop
iret
je
test
sub
or
movsl
aad
fmul
push
push
xchg
adcl
imul
mov
sub
push
xchg
lret
add
or
mov
jp
iret
mov
or
jb
sbb
xchg
adc
hlt
aam
add
cmpsl
stos
aas
icebp
inc
into
sti
push
jecxz
add
movsb
sbb
in
xchg
fcoms
or
add
sti
xchg
stos
stc
and
xor
xchg
jle
lret
xchg
jne
movl
ja
mov
les
dec
sub
stos
roll
jno
sbb
xsaveopt
scas
add
bound
inc
mov
sbb
cmp
mov
scas
and
push
push
arpl
cli
mov
pop
les
fidivrs
ja
lods
jg
mov
inc
mov
stc
push
push
mov
adc
sub
xlat
jbe
loope
jne
in
outsl
jmp
mov
push
jg
sti
in
lret
cmp
in
jmp
insb
lahf
inc
test
inc
insb
sarb
jnp
jp
in
enter
cmp
and
pop
dec
push
stc
sbb
mov
dec
xor
adc
imul
jle
rorl
adc
stc
insb
xor
jge
sbb
mov
jae
dec
fsubs
std
mov
xchg
call
rcrb
mov
add
out
enter
cld
or
or
inc
std
cmpsb
xchg
dec
adc
xor
psubw
cmp
flds
aam
push
les
add
add
pusha
and
dec
or
sub
mov
add
xor
jne
push
dec
adc
push
sbb
push
sahf
xchg
xor
xor
inc
lcall
imul
mov
jle
fdivrl
push
mov
dec
mov
jge
es
mov
movsl
dec
jecxz
int3
mov
fcomps
jns
adc
sub
xchg
cwtl
mov
jb
mov
das
test
mov
mov
pop
mov
push
jno
cmp
popa
jle
cmc
push
je
sub
jno
push
lret
in
loope
inc
push
test
out
xchg
mov
dec
mov
repnz
lods
gs
sarl
mov
sbb
pop
mul
fwait
or
sub
cli
dec
jge
fwait
aas
mov
mov
pushf
or
test
in
push
pushf
add
test
loope
and
mov
and
sub
inc
mov
loopne
std
ret
adc
ljmp
icebp
je
xor
stos
in
xor
dec
jle
inc
lock
scas
pop
or
mov
adc
xchg
sbb
lds
xchg
test
pop
pop
into
mov
test
jg
and
movl
and
hlt
push
arpl
loopne
inc
je
dec
lret
in
adc
jp
sarl
movsl
mov
sbb
add
dec
in
jae
mov
aam
movsb
outsl
push
or
push
hlt
add
popa
cld
or
push
pushf
mov
ljmp
jo
pop
xor
pop
std
mov
pop
mov
jge
push
and
loopne
ss
rorb
in
sub
movsb
movb
jo
mov
sub
mov
test
cmp
inc
aaa
pop
mov
pop
sub
cmpsl
push
pop
dec
and
cltd
lods
fistpl
inc
loope
jmp
ret
inc
xchg
sbb
push
pop
and
adc
sub
mov
sub
aam
aam
mov
and
call
leave
jp
insl
daa
or
inc
cmp
pop
out
sub
cmc
jb
mov
push
cmpsb
mov
scas
testb
stos
das
sbb
rorl
lret
cmp
inc
loope
and
push
ss
pop
adc
mov
popf
xchg
or
int
stos
ret
dec
cmp
pop
adc
or
xchg
lret
ljmp
clc
ret
mov
addr16
inc
add
or
stos
dec
jbe
mov
insb
adc
adc
cmpsb
push
push
mov
push
popf
adc
test
cwtl
insl
jb
cmp
dec
add
xor
lret
and
dec
ret
adc
add
mov
movaps
push
sti
movl
mov
add
dec
jns
aad
jo
mov
add
add
scas
fisubrs
arpl
sub
hlt
lea
mov
das
ja
cmp
jp
cmp
lret
subb
inc
push
rcrl
fcompl
adc
cmc
xchg
int3
adc
cmp
sbb
dec
scas
lret
lcall
scas
push
fisubl
out
out
fnstsw
lods
push
dec
push
lret
jbe
dec
xchg
loope
sbb
mov
out
adc
test
call
pop
je
jbe
mov
xlat
push
cmpsb
cmpb
lahf
xrelease
movsl
xchg
lcall
fidivrl
call
call
neg
mov
xchg
mov
pop
adc
inc
pusha
push
hlt
loopne
lds
pop
stos
cmpsb
fisubrs
dec
faddl
and
mov
pop
mov
cmc
ret
mov
dec
add
mov
jo
xor
out
adc
lods
and
sarl
ud1
inc
arpl
test
or
pop
inc
imul
push
lahf
mov
cltd
push
fldenv
jae
push
test
jmp
sub
push
and
bound
or
xchg
mov
loop
or
movsb
leave
frstor
mov
fdivs
cmp
aas
xchg
test
sub
pop
jg
lcall
jbe
cli
push
loop
lods
pop
adc
cs
int3
dec
xor
call
xlat
arpl
je
xchg
dec
mov
cmp
mov
jne
mov
decl
xor
xchg
outsl
pop
sar
mov
sub
rolb
out
psrad
idiv
mov
pop
bound
loope
pop
sti
mov
je
sub
or
es
sbb
pusha
loope
pop
cmp
jmp
aam
jns
pop
rcll
sbb
pusha
sbb
imul
push
scas
imul
xor
push
jae
shlb
sub
adc
rcr
cmpsl
jo
dec
jecxz
cmp
js
push
xor
test
stos
imul
negb
add
dec
je
pop
repz
or
fs
lods
push
dec
faddp
or
insl
iret
aam
jb
inc
repnz
js
xchg
ss
dec
mov
jle
data16
xchg
out
popa
shl
sbb
xchg
lcall
pusha
test
cmc
dec
loope
sub
jp
rclb
cmp
inc
xor
repz
sub
dec
ret
xorl
xchg
xor
cli
maxps
push
jmp
movsl
sub
sbb
adc
in
xlat
xchg
push
inc
jbe
std
inc
pop
xchg
cmp
cmp
mov
sbb
xor
xchg
movsb
mov
push
or
xchg
mov
and
nop
cmp
dec
cmp
lret
inc
inc
insl
loop
mov
dec
add
dec
fmull
addr16
and
mov
nop
lret
daa
outsl
hlt
inc
cmp
mull
movsb
rorl
xchg
xor
push
lods
cmp
push
rcrb
mov
ret
or
iret
mov
clc
push
add
mov
mov
or
mov
outsb
addr16
fstl
das
mov
mov
mov
dec
scas
push
lahf
mov
popa
mov
js
sahf
push
mov
add
clc
mov
dec
mov
mov
insl
push
xchg
pusha
bnd
inc
and
pop
outsb
cltd
push
pop
scas
cwtl
pop
in
pusha
jmp
movsl
pop
js
mov
fwait
pop
shrb
sbb
mov
and
xchg
push
xor
outsl
sbb
mov
push
jmp
cmp
add
jmp
mov
js
jge
adc
enter
dec
ds
ja
fucomip
xchg
sub
or
subl
mov
loop
jmp
xchg
mov
xor
xchg
inc
in
ss
xor
dec
jg
inc
inc
cs
mov
mov
cmpsb
xchg
adc
fimuls
insb
fdivs
xchg
xor
inc
cmp
loop
cld
xchg
test
hlt
lea
add
iret
mov
test
fimull
movd
cmp
mov
stc
lret
pop
lret
negl
sbb
imul
jbe
inc
mov
or
push
push
jmp
add
dec
pushl
mov
mov
xor
lods
mov
or
int
out
or
inc
mov
mov
js
in
test
inc
fstpt
icebp
xchg
or
lcall
into
bound
add
xor
in
and
loop
or
cmp
and
jecxz
cmp
cld
pop
cli
cmpsl
data16
es
push
shll
bound
pop
fldl
dec
fisubrs
out
pop
bound
rorb
sbb
jmp
andb
popa
aam
push
clc
stc
pop
pop
add
jne
pop
dec
outsb
or
pop
jmp
lcall
fistl
ret
dec
clc
jne
int
add
adc
mov
mov
jno
aas
mov
popf
loopne
je
or
push
adc
add
mov
je
mov
test
aad
js
imul
or
cwtl
push
add
fsubrp
dec
and
stos
xchg
mov
inc
mov
movsb
jnp
out
lods
push
mov
sbb
pop
lods
ss
out
movsl
and
push
aaa
test
es
mov
pop
and
fs
jp
cmpsl
adcb
cwtl
inc
adc
xor
xchg
pop
fdivr
into
aas
fcoml
jmp
pop
mov
loope
incb
pop
or
in
sub
outsl
push
icebp
xor
mov
dec
pop
mov
adc
lahf
mov
jl
push
data16
jmp
and
and
and
fimuls
adc
push
sahf
frstor
lahf
adc
mov
std
dec
sahf
jne
int
insl
cwtl
or
icebp
jle
sbb
mov
aam
dec
jmp
or
arpl
nop
rcl
icebp
mov
cmpsb
fsub
adc
sub
sbb
add
or
sar
test
jle
jp
stos
adc
das
out
inc
adc
sub
sub
fldt
jb
sbb
adc
das
add
inc
into
mov
mov
jae
inc
cli
outsb
test
xchg
lahf
adc
mov
dec
sbb
jp
idivl
outsb
cltd
leave
cmpsb
pop
cmp
xor
popf
hlt
mov
dec
push
adc
stc
stos
push
sbb
je
adc
ljmp
adc
jp
xchg
js
pop
adc
out
rcrl
pop
ds
notb
mov
fs
and
mov
pop
lea
xchg
jo
fildl
data16
mov
cli
add
mov
pop
sahf
ret
adc
mov
cmpsb
xchg
or
fs
pop
popf
addr16
sub
pop
mov
fidivrs
sub
and
add
rorb
hlt
xchg
fxrstor
or
add
js
or
cs
sub
in
lds
mov
daa
lds
mov
jle
pop
mov
call
dec
push
pop
mov
imul
adc
lret
push
xor
test
lock
dec
jae
xor
xchg
test
adc
push
push
das
out
popf
push
mov
mov
jg
sbb
cmp
in
daa
int
push
clc
outsl
dec
js
jecxz
mov
pop
push
jno
sbb
mov
popl
cld
outsb
jmp
push
pop
mov
add
jmp
imull
xor
push
scas
sbb
push
movl
in
push
push
pop
dec
pop
insl
mov
xchg
push
xor
mov
lea
mov
in
xchg
dec
sub
inc
inc
pop
cmp
xlat
mov
push
jne
imul
call
loop
cmp
inc
fisttpll
imul
jne
lret
gs
ds
lea
cmp
call
test
adc
test
jle
add
add
test
fiadds
mov
xor
rorl
mov
in
cmp
sti
std
test
xor
add
cmp
push
bound
out
mov
ja
adc
test
rcll
xor
and
sub
sub
fucomi
add
or
sbb
cmp
cmp
in
mov
sub
push
mull
fnstenv
mov
shrl
add
mov
incb
or
aaa
in
aaa
xchg
shrd
pop
push
mov
mov
xchg
push
inc
pop
enter
xor
dec
or
popf
repnz
js
or
leave
inc
sbb
stos
add
and
inc
jns
jno
imul
mov
or
loope
mov
push
sbb
push
jp
add
ds
jg
cmp
and
adc
xor
adc
inc
push
lods
hlt
lahf
mov
pop
xchg
lret
pop
out
or
push
mull
adc
out
xchg
dec
and
sbb
std
sbb
inc
gs
mov
jle
cmp
or
xchg
punpckhwd
rcrb
or
jle
xlat
dec
inc
lret
test
dec
adc
mov
jl
fadds
imul
ds
out
xchg
lea
and
fmull
stos
inc
pop
push
push
in
popf
arpl
sub
inc
adc
lock
cld
inc
push
sbb
lods
hlt
test
outsb
mov
jmp
int
jmp
push
sahf
pop
shr
sahf
mov
or
add
sub
and
cmpsb
jge
divl
out
sahf
mov
mov
scas
push
push
cli
ljmp
and
enter
adc
inc
iret
movsb
test
shrl
xlat
test
jp
insb
popa
mov
dec
dec
xchg
sub
pop
test
shll
xor
and
jno
jb
ficomps
mov
or
stos
fs
mov
mov
fwait
adc
dec
jnp
gs
call
cmpsb
sbb
fcmovb
mov
sarl
cmpxchg
mov
pop
orl
jl
ret
rcrb
cmp
shl
jmp
nop
pop
pop
xchg
cld
fstpl
adc
js
sub
add
sbb
jge
gs
inc
mov
inc
cmc
int
or
mov
mov
insl
inc
sbb
sbb
hlt
mov
and
cli
loopne
jne
jnp
xor
xor
das
jns
int3
insb
cmpsl
sub
jb
mov
xchg
mov
or
push
imul
insb
mov
inc
fildl
cmp
jnp
std
inc
and
stc
lock
fists
or
mov
lea
jne
mov
mov
xchg
repz
sbb
inc
cmp
fcmovb
lret
lea
fnstsw
sbb
repz
arpl
mov
dec
test
aaa
xchg
outsl
fnstcw
flds
and
adcl
xchg
or
ljmp
mov
iret
fdivl
fcomi
ja
xchg
insb
sbb
ret
push
sub
push
mov
adc
outsb
or
pushf
push
inc
fs
out
outsb
ficoms
or
out
js
mov
int3
dec
fmuls
adc
push
movsl
cmpsl
mov
loope
cwtl
xchg
inc
mov
sub
fstl
out
jne
or
mov
lret
dec
and
je
or
repz
ficoms
pop
sti
push
jbe
inc
int3
jl
cwtl
push
xchg
enter
divl
fwait
loopne
out
pop
arpl
aaa
fcmovnbe
mov
push
fdivrl
sbb
fimull
cwtl
rcll
jge
or
adc
xlat
cmp
pop
push
cli
mov
sub
pop
mov
shl
lods
mov
test
add
pop
fwait
pop
pop
or
ss
popa
jmp
or
adc
pop
cmp
jl
mov
add
mov
pop
repz
imul
les
insb
lret
mov
cmp
mov
mov
in
sub
std
jnp
lds
jne
mov
adc
and
xchg
bound
or
fdivl
je
lods
enter
mov
test
mov
fdivs
xchg
repz
shll
or
rep
and
or
test
sub
sub
loop
popa
mov
sub
jns
hlt
in
cmpsl
pop
in
mov
mov
fdivl
es
mov
mov
sbb
xor
shll
lods
pop
insb
out
pop
fucomp
and
mov
stos
pop
shlb
mov
push
push
push
sbb
jp
sahf
ja
cmp
rcrl
and
add
outsb
imul
cltd
jo
mov
lock
mov
dec
out
pop
push
and
bnd
les
push
mov
push
je
jp
and
ss
jo
fsubs
addr16
lods
xor
testl
push
fstpl
cmp
mov
mov
out
aas
push
mov
lahf
sub
aas
loop
orb
test
movsl
pop
jmp
mov
sub
cmp
shrb
outsl
mov
lods
js
inc
mov
xchg
mov
xchg
ja
es
or
ss
insb
lods
push
cli
outsb
scas
inc
test
stos
sub
mov
pop
in
aad
hlt
xorb
push
adc
push
mov
push
add
lods
jge
leave
sti
gs
lock
in
add
pop
dec
enter
jp
adc
push
push
cltd
fdivrs
out
loopne
push
dec
pop
xor
out
stos
mov
insb
pop
sbb
lods
lds
sbb
shl
add
push
xor
aad
int
stc
jnp
inc
pop
mov
mov
mov
inc
mov
or
adcb
mov
xlat
xchg
jae
xor
inc
or
push
sub
mov
push
xor
subl
in
call
or
mov
aad
cmp
cld
or
sbb
push
inc
cmpsl
dec
sub
sub
inc
popl
inc
test
pop
pop
and
outsl
rol
out
mov
add
or
push
inc
jmp
cwtl
les
or
inc
ds
xchg
push
adcb
das
or
xorb
mov
popl
xchg
pop
lods
push
cmp
inc
out
push
out
sbb
lods
dec
aam
pop
push
or
dec
dec
pop
pop
or
add
xor
mov
fwait
sub
jne
cmp
lcall
lahf
dec
mov
std
or
xchg
mov
adc
stc
clc
lcall
outsl
cmp
dec
xchg
ret
adc
add
roll
lret
clc
xlat
mov
insb
sub
ret
xor
xor
mov
les
xor
jae
outsb
loope
mov
in
je
lods
in
jnp
incl
outsl
or
imul
add
mov
xor
and
mov
xor
mov
jb
bound
les
movsb
cmp
mov
test
jecxz
xchg
mov
push
xchg
enter
test
repz
mov
cli
or
lret
incl
mov
push
std
inc
loope
aam
fsubrp
std
ret
outsb
arpl
xor
xchg
insb
stos
ja
stos
jl
jae
cmc
jb
cs
ffree
adc
aam
ficomps
jb
addr16
and
inc
in
cmp
push
leave
jbe
push
mov
test
popa
mov
loop
dec
and
fstpt
shl
nop
mov
adc
imul
mov
cmp
rclb
or
fstp
mov
mov
stos
and
cmp
jno
mov
or
mov
loop
cltd
into
push
cmp
pushf
fucom
sub
cmp
out
mov
out
loope
aas
scas
cmpl
push
pop
jge
pop
push
jle
ud1
lret
ss
mov
xchg
sbb
ja
jg
xchg
movsb
in
jno
and
in
xor
mov
push
lret
jne
push
push
pop
pop
mov
add
and
xor
add
xchg
push
push
scas
pushf
or
loope
clc
fmull
push
test
dec
or
jbe
jne
pop
iret
cwtl
test
cmc
scas
xchg
mov
gs
into
inc
and
ss
mov
jg
scas
inc
xchg
fstl
push
fsub
fnop
lods
sub
jno
add
es
shr
and
jl
adc
aam
stos
sbb
iret
mov
insb
mov
mov
mov
cmpsb
aas
sbb
rcll
daa
inc
out
dec
jmp
mov
jmp
fistpll
shl
into
adc
push
test
inc
inc
insl
flds
xor
outsb
jecxz
pushf
je
into
mov
out
scas
add
out
aaa
shlb
dec
out
je
fisubrl
ficoml
push
cmc
mov
push
and
dec
sub
cmp
jns
loopne
je
or
in
shll
mov
imul
dec
lcall
push
mov
lods
stos
adc
fs
xor
jae
mov
arpl
push
push
shl
xor
imul
add
mov
sub
push
xor
in
aaa
ret
sbb
jae
jp
mov
jge
add
and
fneni(8087
dec
fildll
inc
in
mov
sub
dec
mov
mov
cmpsl
fcomip
add
mov
lds
movsl
xchg
aad
stos
lock
jnp
sbb
mov
sbb
aad
pop
out
shrl
dec
pop
xor
mov
push
test
lret
aas
jle
or
adc
sbb
jns
inc
imul
fwait
and
sub
pop
in
inc
bound
testl
mov
shll
xchg
fld
pushf
frstor
pop
push
dec
dec
pop
test
out
push
ret
xor
inc
adc
aas
icebp
xor
cmc
cmp
mov
jmp
cmc
xor
adc
insb
into
in
jns
in
shrb
cld
mov
sub
jb
call
stc
cmp
movsl
add
inc
cwtl
xchg
rcll
inc
popf
scas
stc
sub
push
push
jmp
dec
rol
push
push
inc
xor
fucomp
incb
sbb
add
mov
rcl
stc
pop
mov
push
pop
xor
rcll
inc
push
mov
inc
out
inc
sahf
addr16
mov
psubb
outsl
dec
mov
and
fldl
push
mov
data16
outsb
icebp
pop
xor
xor
cmp
fdivrl
in
mov
movsb
xorb
arpl
lea
inc
in
jmp
jne
xchg
orb
or
call
repz
xor
xchg
loope
pop
pop
sbb
sub
push
jns
xchg
jno
jecxz
and
jno
mov
jno
jmp
or
jp
push
repnz
mov
mov
mov
cmp
cmp
inc
aam
xor
pop
sahf
out
adc
loope
xor
stos
shll
movntq
notb
ljmp
jbe
adc
movsl
push
mov
or
dec
aam
mov
inc
aas
pop
push
je,pn
sub
mov
jle
adc
aas
popa
jp
xor
sbbl
push
mov
lret
popf
sub
pop
adc
sbb
push
sbb
push
xlat
cmpsb
dec
mov
adc
sbb
cmp
or
mov
xchg
in
mov
adc
mov
xchg
fprem
test
jb
inc
enter
ds
pop
jo
test
add
xchg
xor
loop
inc
test
rcr
std
and
jle
in
xor
cmp
push
push
or
ss
add
out
dec
cmp
loopne
int3
lods
mov
loopne
add
in
pop
add
into
pop
sub
dec
jns
pusha
andl
leave
mov
shl
cmp
outsb
and
push
inc
ds
or
loopne
and
push
mov
push
pop
xlat
dec
fnstsw
cwtl
mov
jne
and
ret
fxch
inc
sti
or
nop
out
stos
or
dec
push
cmp
add
das
xchg
xor
clc
or
fdivs
outsl
imul
stos
xchg
push
pop
adc
cwtl
mov
imul
aaa
push
loopne
int
xchg
xchg
xor
xchg
out
into
ds
loop
lea
fnstsw
je
mov
dec
inc
in
push
xor
hlt
ror
add
lret
and
jns
push
cli
in
cmp
insl
push
xchg
out
roll
push
out
add
xcrypt-cbc
cmpsl
push
add
fimuls
mov
sub
lods
fsubs
popa
dec
push
and
or
add
rcrb
push
dec
or
jnp
inc
mov
mov
lea
mov
movsl
bndstx
jle
adc
push
jle
mov
loopne
inc
add
idivb
jbe
lods
mov
mov
pushf
inc
sarb
xchg
jns
icebp
iret
jno
nop
loope
ljmp
mov
dec
ljmp
cmpsb
imul
pop
xchg
shll
push
lds
jmp
pushf
add
gs
int3
cmpsl
sub
stos
sbb
lret
sarb
test
sub
jns
aad
sub
and
or
mov
frstor
mov
jmp
loopne
xchg
lods
std
xor
fwait
std
add
jecxz
mov
mov
push
pop
lahf
push
jp
pop
imul
add
cli
shrl
lret
movsb
jge
ljmp
sub
sbb
sahf
test
scas
aam
push
daa
ja
sahf
push
adc
lret
ja
loope
mov
pop
xchg
ss
in
or
icebp
jnp
clc
mov
push
bound
dec
xchg
push
fwait
or
jb
or
xchg
loop
sbb
cmp
cwtl
push
add
lret
test
and
scas
dec
push
push
addr16
fistl
xchg
addb
out
mov
dec
enter
push
dec
movsb
push
clc
mov
xchg
test
pop
ljmp
inc
sub
stc
ret
rcr
out
mov
repz
shl
push
or
mov
cli
rcl
jge
into
inc
and
mov
xchg
add
mov
inc
int3
add
test
xchg
cmp
out
loopne
mov
arpl
push
xchg
xchg
jg
mov
shl
pop
leave
xor
sub
push
les
xchg
test
push
stos
cmc
mov
mov
xchg
iret
fimuls
push
lea
pop
push
or
mov
pusha
mov
rorl
push
xor
addr16
cs
xchg
mov
aad
ss
aaa
push
add
call
jl
dec
sbb
test
icebp
popf
xor
push
icebp
pop
pop
and
out
add
stos
fildl
pop
pop
adc
sbb
mov
cld
jle
cmp
xchg
jge
pop
aad
imul
ret
into
lahf
lret
test
js
inc
xchg
sbb
dec
cmp
xorb
pop
xor
lea
lahf
cld
repz
lods
cmpl
es
mov
pop
sahf
out
inc
jae
leave
xchg
std
mov
push
lea
lds
shll
pop
lock
push
xchg
movsb
push
jbe
mov
fcmove
push
push
stos
mov
inc
aam
scas
outsl
push
es
inc
push
lds
imul
dec
subl
scas
lea
lock
filds
sbb
insb
das
sub
sarb
rcl
cld
mov
ret
enter
cwtl
jnp
pop
or
std
and
lret
lea
mov
inc
rcr
pusha
or
dec
in
dec
adc
pop
adc
pcmpeqd
xchg
ret
add
out
lahf
mov
ficoms
sub
ljmp
pop
push
sbb
xlat
out
test
xchg
xchg
jns
in
xchg
cmpsb
fiadds
jns
jmp
outsl
jo
lret
jecxz
outsl
insb
dec
lahf
add
dec
addr16
in
xchg
insl
or
or
pusha
fs
sahf
mov
divl
fbld
push
scas
ret
test
lret
leave
jno
mov
mov
popa
test
xchg
or
xlat
cmp
sub
in
cwtl
add
and
adc
pop
and
das
mov
insb
inc
push
mov
test
add
das
loopne
push
jl
cmp
dec
stos
leave
mov
lds
jg
inc
jecxz
jae
sbb
adc
mov
fs
jp
sbb
lcall
sub
icebp
fdivr
pop
inc
sub
or
xor
mov
push
mov
adc
sbb
adc
or
orb
xchg
mov
out
inc
mov
sbb
sub
push
mov
test
dec
pop
push
imul
push
pop
lock
push
stos
leave
fsts
into
rcll
jmp
int3
cmp
test
pop
mov
dec
mov
outsb
pop
add
xor
test
fistps
xor
out
lahf
jne
subl
sbb
arpl
ljmp
or
movsb
pop
sbb
cmpb
fbld
mov
in
add
inc
es
mov
push
das
loopne
jle
sub
or
mov
gs
push
addr16
enter
pop
addr16
nop
mov
sahf
aam
mov
mov
dec
lcall
shrb
dec
imul
push
sub
xlat
mov
in
push
or
sti
repz
mov
hlt
jl
fidivrl
je
add
fwait
xor
outsl
adc
pop
shl
iret
mov
shrl
push
loope
cmp
mov
dec
dec
mov
jp
jl
int
incb
movsl
push
dec
ret
or
adc
mov
stc
push
cmp
aam
orb
lds
int
jl
pusha
mov
nop
cmc
mov
xor
push
push
jg
and
ret
ret
imul
lds
push
lock
adc
scas
andb
sahf
sbb
pop
mov
pop
mov
outsb
ljmp
ds
mov
mov
inc
xchg
and
mov
push
aam
sbb
je
dec
xchg
adc
call
dec
and
icebp
jmp
cmc
movsl
xchg
fidivrl
push
stos
pop
xor
inc
in
int3
negl
pushf
icebp
pop
in
out
cmp
push
adc
mov
jg
dec
add
fidivl
push
pop
loope
inc
sahf
pop
repnz
lods
mov
aad
jmp
xchg
mov
inc
loope
mov
repz
xchg
outsl
mov
adc
cmpb
pop
out
repnz
test
jns
test
fnsave
hlt
push
mov
loopne
sub
stc
inc
movsb
ss
xchg
sub
and
in
fsubrp
or
add
dec
or
js
mov
cmp
loope
js
sub
jmp
jp
xchg
add
pop
fnsave
mov
std
movsl
mov
pop
push
xchg
xchg
aam
jle
pop
inc
mov
aas
push
add
inc
jp
push
imul
orb
push
test
pop
mov
mov
inc
lea
sarl
jnp
jmp
dec
test
xchg
loope
sub
fimull
push
pop
inc
icebp
lahf
cmp
mov
mov
jl
dec
shlb
xchg
push
loope
test
inc
cmpsl
arpl
rcrb
sbb
pop
pop
inc
das
jo
mov
aad
mov
pop
jbe
sbb
popa
sti
ja
aad
mov
lods
jo
inc
cmp
aaa
add
iret
aas
mov
pop
xor
dec
cmp
fiaddl
mov
or
movsl
mov
test
jnp
push
xor
lods
jns
nop
lea
js
pushf
push
outsb
pushf
cs
xchg
pop
leave
fwait
mov
dec
dec
jle
les
mov
dec
inc
xchg
mov
xor
clc
xchg
icebp
popf
in
pop
pushf
dec
ja
inc
stc
or
push
pop
dec
cmpsl
push
dec
sti
mov
dec
inc
dec
xor
ds
dec
mov
mov
pushf
dec
inc
xchg
xor
outsl
sub
sbb
pushf
adc
jmp
clc
lret
int3
xor
divl
out
pusha
xor
or
cmp
adc
ljmp
jp
dec
xchg
testb
shlb
add
pop
adc
aaa
sbb
or
jle
push
inc
imul
add
test
lods
and
out
outsl
icebp
add
insl
fsts
sub
ljmp
lea
leave
mov
lcall
inc
jp
fdivr
xor
aad
inc
mov
xchg
xchg
into
push
fdivrl
or
mov
mov
sbb
dec
sub
cmp
dec
sahf
dec
mov
mov
lret
mov
inc
pmaxub
js
pop
sahf
mov
jne
dec
cld
ficomps
lcall
test
flds
stos
lods
xchg
mov
xchg
inc
cld
push
in
aam
in
mov
xchg
push
dec
sbb
jl
pop
out
jl
xor
add
adc
mov
cli
outsb
mov
negl
pop
popa
shl
jb
sbb
sbb
outsl
pop
add
push
xchg
aam
mov
push
sub
xor
cmpsl
mov
call
jne
scas
and
pop
sub
or
adcl
mov
inc
cltd
adc
inc
cmpsl
xchg
mov
dec
push
rorb
or
push
outsb
mov
push
insb
in
xor
cmp
and
or
or
cmpsb
add
pop
cmp
fwait
pop
loopne
add
xor
cmc
mov
inc
mov
loope
push
inc
adc
push
jl
cmp
fcoml
cld
sub
inc
ljmp
ss
imul
loope
les
outsl
ds
mov
mov
pop
sbb
movsb
push
loopne
js
cli
mov
int
jbe
inc
imul
and
adc
mov
xchg
ljmp
push
les
int
pop
xchg
hlt
push
fwait
dec
repnz
lods
popa
jle
pop
jno
mov
lea
xchg
push
repz
repnz
cmpsb
rorl
pop
add
add
pop
mov
ljmp
test
les
push
mov
out
jl
fsubs
push
test
add
js
pop
cld
pushf
arpl
int
jl
rcrb
inc
notl
lods
push
adc
fwait
std
cmpsb
outsb
pop
shrb
push
gs
and
jo
imul
pop
mov
xor
inc
pop
std
push
push
fistps
mov
xor
pop
jne
push
cwtl
ljmp
sahf
jecxz
call
jnp
cwtl
inc
mov
push
xchg
popf
inc
stos
lods
stc
mov
popa
cli
sbb
shl
mov
leave
lods
mov
sahf
les
mov
sub
popf
stos
es
cld
jge
mov
push
pop
jg
loopne
hlt
dec
outsb
lahf
cli
dec
test
push
addr16
test
aas
rclb
bound
pop
js
add
test
rcl
js
inc
xor
hlt
out
mov
mov
adc
push
leave
aaa
loope
fstpt
jb
stos
add
mov
pop
cmp
sti
or
add
adc
push
adc
push
sahf
inc
mov
jge
clc
out
cltd
sbb
daa
push
shr
mov
iret
xor
jmp
or
js
sbb
dec
dec
xor
outsl
pop
push
fisubrl
insl
xlat
and
pop
lods
fnstcw
arpl
push
call
lods
or
xchg
inc
jg
xor
xor
adc
push
adc
mov
inc
in
adc
dec
addl
jp
mov
and
push
in
inc
push
xchg
lret
aam
icebp
lahf
xor
aad
or
jns
cmc
adc
movsb
sbb
out
dec
pop
pop
jecxz
sbb
push
inc
cmp
jge
fdivs
sub
daa
mov
push
push
xchg
dec
nop
push
pop
bound
mov
outsb
dec
lret
stos
mov
mov
push
adc
repnz
scas
xor
sub
or
aas
mov
popf
sbb
mov
and
dec
cmp
cmp
mov
cmp
cmp
shrb
scas
aaa
xor
ret
xor
adc
mov
mov
jle
insb
mov
pop
cmp
cmc
adc
fadd
pop
scas
in
fdiv
fdivs
decl
cli
add
adc
je
pop
push
popa
leave
shlb
lret
fists
pop
movsl
jno
fdivr
mov
aam
rorl
mov
or
cmc
mov
cmpsb
mov
cs
scas
or
sbb
cmp
icebp
mov
decb
pop
jb
add
aaa
int3
mull
std
fwait
scas
shrl
stos
out
stos
mov
pop
cmpsb
test
js
mov
gs
cld
xchg
dec
add
jecxz
sti
out
mov
ja
je
mov
lcall
stos
scas
aas
test
ror
cld
pop
popf
jns
inc
imul
pushf
gs
xor
xchg
int
cld
adc
and
lcall
and
inc
dec
outsb
and
es
push
fucomp
jae
jae
in
jmp
and
pop
and
mov
sbb
xchg
add
mov
lret
rorl
jnp
jo
mov
mov
fs
dec
and
fwait
int3
add
mov
add
pop
fs
mov
sub
xor
pushf
mov
pop
test
xchg
jl
int
inc
push
pusha
mov
insl
xlat
lahf
inc
ret
sub
dec
jb
add
inc
xchg
adc
lods
pop
fwait
test
into
cmp
and
fwait
pushf
add
in
mov
mov
fists
cmp
daa
aad
push
inc
ret
mov
adc
sbb
mov
aam
add
mov
and
movsl
daa
popf
pop
inc
movsb
cmc
push
fldl
imul
pop
dec
sbb
pop
std
pop
fwait
xchg
ljmp
sahf
and
push
insl
jnp
rolb
jecxz
and
loopne
mov
fsub
mov
movsl
movsb
in
mov
pusha
iret
aaa
jge
je
dec
xchg
lods
add
xor
cmpsl
ret
jnp
les
nop
shlb
sti
adc
cmpl
in
adc
cltd
and
jns
test
cmp
mov
mov
cltd
inc
or
scas
and
movsl
xchg
xor
fisttpl
jmp
add
jecxz
sbb
sbb
and
mov
jmp
je
jle
push
pop
test
mov
xchg
leave
mov
jg
iret
dec
shrl
jl
in
mov
jne
data16
pop
xchg
test
xchg
scas
clc
xor
or
orl
xchg
adc
jmp
data16
xchg
cmpsb
fsubl
and
aam
lods
loope
sub
imul
jl
sbb
jl
xor
test
sahf
popf
cmp
mov
ret
cmp
arpl
push
cmp
sbb
jle
fistps
sub
leave
adc
xchg
push
sub
push
ja
push
call
inc
xchg
roll
and
out
enter
cmp
dec
mov
mov
or
or
push
inc
rclb
pop
mov
adc
imul
push
push
jmp
push
repnz
mov
or
cmpsl
mov
or
ds
mov
dec
cmp
movb
loopne
js
stos
lea
cld
imul
adc
cmc
fstps
dec
jns
ds
mov
aad
sahf
cmp
sub
dec
mov
ret
inc
stos
xchg
test
jns
js
or
cmp
push
mov
inc
inc
rcll
sbb
popa
add
cmp
pop
andl
fisubrl
jle
loope
adc
sbb
dec
cltd
lcall
and
stos
inc
lahf
mov
mov
pop
movsl
mov
loopne
jp
push
cltd
out
shl
cld
test
loop
cmpsl
ffree
outsb
daa
mov
and
jg
subl
sub
in
test
int
bound
xchg
jno
scas
loop
call
or
dec
or
add
cmp
or
push
mov
outsb
jno
icebp
sarl
mov
mov
mov
popl
xlat
iret
inc
shl
ret
ffreep
test
mov
sbb
jbe
cwtl
stos
adc
inc
mov
in
mov
push
sub
push
mov
adc
test
loope
fcmovnu
repz
jmp
mov
mov
in
sbb
jnp
jp
jmp
adc
add
push
cmpsb
sahf
add
ret
sahf
out
xor
in
xorb
dec
inc
mov
and
fnsave
cmc
ror
jecxz
lods
push
sbb
in
mov
sbb
pop
jo
xchg
add
outsl
into
cmpsb
jle
jns
lods
insl
ret
jl
loopne
mov
xchg
mov
push
out
fcmovu
arpl
out
test
mov
sbb
lds
cmp
daa
cwtl
jbe
orl
xor
dec
bound
leave
pop
mov
enter
sub
mov
mov
adc
mov
icebp
and
mov
leave
jns
xchg
test
dec
inc
pop
movl
jne
jbe
xor
lods
rcrb
inc
pop
sti
icebp
fdiv
inc
aam
jae
mov
repz
mov
rcll
sub
xchg
add
dec
addr16
outsl
cwtl
imul
cmp
mov
cmp
jg
mov
jl
adc
mov
fisttps
sub
std
gs
cmp
rcrb
mov
xlat
aam
jns
and
loopne
adc
insl
pop
lds
sbbl
xlat
or
pusha
push
and
sbb
lods
add
or
shll
push
dec
or
fcompp
mov
or
dec
cmpl
movsb
daa
in
xor
fwait
sbb
scas
aad
pushf
xchg
sub
outsb
cwtl
pop
std
scas
fnstcw
add
mov
xor
dec
cmp
push
icebp
sub
cmp
iret
out
outsl
mov
mov
or
cmp
push
out
and
xchg
add
inc
jge
clc
movsl
sarl
jns
xchg
scas
test
test
test
jp
cmp
rcrl
cli
icebp
inc
xchg
int
daa
mov
mov
arpl
mov
andl
push
sub
mov
xchg
pop
push
rcrl
sbb
jmp
dec
fsubs
xchg
in
pushl
sub
and
pusha
xchg
lods
sahf
jns
fmuls
and
xchg
adc
fs
mov
mov
shlb
ds
fildl
in
test
dec
sti
clc
add
ja
push
and
or
in
push
add
jmp
loope
dec
and
addr16
dec
xor
jns,pn
sbb
push
adc
mov
pop
js
and
dec
pop
inc
stos
fadds
inc
inc
es
iret
mov
jp
xor
fxch
push
pop
jmp
cli
les
lea
int3
orl
out
pop
xlat
cld
cmc
stc
mov
pusha
ds
out
cmp
inc
lods
pusha
out
in
mov
add
imul
std
in
gs
or
push
insl
js
fdiv
shl
cld
push
loopne
aad
fldl
test
popf
mov
out
cmp
add
xor
js
out
lods
add
insb
lcall
jae
pusha
and
shrb
xchg
das
outsl
push
icebp
push
pusha
sub
mov
in
inc
push
mov
or
out
sub
aas
cmc
xchg
das
inc
adc
xchg
dec
and
bound
scas
push
icebp
cmc
hlt
pop
hlt
cmp
bound
push
ret
xor
pop
jne
xchg
add
or
pop
das
jmp
test
out
pushf
test
loopne
lret
scas
int
xchg
sbb
xchg
nop
pop
js
ds
in
and
lcall
in
cli
mov
pop
cwtl
push
lods
mov
adc
cmp
push
call
mov
icebp
sub
rcr
ret
and
mov
adc
cmp
jmp
mov
inc
adc
scas
mov
mov
mov
daa
fs
inc
sbb
jb
into
adc
movsb
ss
xchg
push
icebp
ret
jbe
lods
icebp
push
xor
sbb
dec
pop
cmp
push
sbb
or
repz
lods
and
push
les
ss
dec
scas
sub
dec
xor
ljmp
add
sub
data16
test
std
mov
popf
mov
push
sahf
mov
in
leave
popa
jl
jae
push
add
add
add
lahf
adc
jno
jmp
inc
dec
sbb
push
outsb
lock
icebp
jbe
xor
or
push
push
lea
fwait
xchg
rolb
shll
sub
adc
mov
push
int
hlt
jbe
and
sub
sub
ljmp
aad
jo
daa
mov
lahf
cmp
or
inc
insb
pop
cmp
outsb
xlat
rolb
mov
movsb
adc
push
sub
clc
and
xor
movsl
pop
sbb
push
fisubrs
ds
push
or
jge
orb
mov
movb
filds
and
jg
jbe
sub
insb
xlat
lds
sbb
sarl
loop
shl
xchg
sub
sti
mov
scas
mov
gs
adcl
lock
dec
inc
xor
dec
dec
aad
cs
bound
aas
pop
int3
fcoms
add
jb
inc
rclb
cmp
dec
enter
arpl
mov
dec
sahf
lahf
nop
ret
or
fdivrl
adc
or
xchg
sbb
sbb
cmp
push
push
cmc
and
mov
es
push
insb
gs
shrb
popa
mov
lods
repnz
sahf
mov
mov
xchg
add
gs
jns
roll
sbb
inc
dec
mov
imul
adc
mov
xor
mov
fidivs
or
pop
sti
xchg
push
and
jb
adcb
inc
mov
gs
xor
jg
aas
iret
sahf
adc
stc
movb
fidivs
std
mov
and
mov
shl
cmp
insl
in
xlat
lods
xchg
dec
fisttpl
out
sbb
adc
mov
push
add
push
push
clc
clc
jns
push
push
int3
bound
or
int3
pop
ljmp
mov
xor
sub
repnz
mov
fwait
or
ss
push
in
pushf
fs
repz
test
push
and
aam
into
xor
push
jnp
lret
cmp
mov
jp
and
add
and
sbb
rorl
jns
inc
ljmp
push
xor
jle
xchg
inc
mov
imul
or
push
or
cli
out
cmovg
or
cs
adc
add
xchg
cmp
mov
cmpsl
rol
sar
jno
lcall
faddl
sub
dec
pop
sub
leave
aaa
sbb
popf
test
in
loopne
ffree
mov
adc
mov
mov
dec
dec
mov
in
fstl
adc
in
loop
int
gs
sub
sub
pop
cs
cmp
aam
and
xchg
mov
dec
xchg
mov
xchg
adc
arpl
xchg
mov
push
add
std
aad
push
out
jmp
pop
aas
lds
ds
xchg
aas
fwait
sbb
lret
lods
adc
ljmp
das
xchg
jne
inc
stc
mov
jno
sbb
data16
divb
jbe
inc
repz
sbb
gs
jge
pop
mov
adc
push
sbb
dec
adc
and
sub
in
fs
jecxz
push
stos
lea
das
xor
pusha
inc
jecxz
orl
pusha
call
fwait
mov
ret
out
cmp
rcrb
add
push
ret
push
std
gs
enter
bound
xor
inc
jle
mov
movsb
mov
leave
sub
pop
lcall
pop
pop
dec
xchg
scas
adc
mov
push
and
loop
movsl
and
addl
push
popf
mov
in
wrmsr
fidivrl
xor
cmp
add
mov
loop
scas
adc
cmp
rol
inc
push
sub
xchg
xchg
push
shl
imul
cmp
add
fstl
call
cltd
xor
lods
cwtl
xchg
or
clc
iret
daa
xlat
pop
add
movsl
pop
sub
incl
bound
pop
idivb
insl
adc
ss
inc
movsb
mov
leave
or
jl
mov
push
mov
pop
rorl
or
mov
insb
out
cli
sub
jb
jmp
fdivl
sbb
cmc
bndstx
fcomp
dec
sub
and
mov
mov
fcomps
jl
outsb
stos
adc
nop
mov
imul
outsl
es
data16
ljmp
push
xor
fnstcw
fs
popl
clc
rolb
rcrb
mov
outsb
loope
repz
popa
repz
push
ficoms
aaa
outsb
inc
test
mov
pop
rcll
xchg
mov
xor
mov
inc
cli
push
push
fists
adc
cmp
enter
ja
scas
mov
mov
testl
add
bound
testb
fmull
pop
jbe
xchg
imul
dec
xchg
xchg
add
lods
mov
jmp
out
andl
loope
cmpsb
pop
scas
rorl
sarl
mov
dec
imul
add
dec
lods
test
sub
into
popf
insl
stc
mov
and
lods
xchg
xchg
scas
xchg
daa
push
in
rcl
dec
jo
jnp
popa
inc
jle
das
pop
sahf
mov
pop
nop
loope
add
mov
loopne
int
mov
sbb
mov
inc
cmp
int
test
jo
fwait
ret
inc
divl
imul
pop
sub
xorb
ror
daa
cmp
ficompl
sbb
pop
jge
sub
fdivl
cmpl
call
mov
sub
and
stos
sub
inc
test
test
mov
cmc
es
xchg
out
xchg
pop
sahf
nopl
fnstsw
gs
addl
dec
fsubl
mov
roll
int3
iret
test
call
movsl
push
adc
lahf
push
xor
xchg
jmp
push
rcl
sahf
outsb
popa
push
rcr
lods
cmpsl
pop
je
fwait
lds
pop
popa
mulb
ljmp
xorl
jp
out
mov
loop
jecxz
dec
xor
add
push
xor
gs
push
push
lea
xor
or
mov
out
cmp
js
cmpsl
aas
pop
push
int
push
lds
out
lods
negl
and
mov
sti
mov
dec
movsb
lods
loop
mov
mov
mov
lcall
jb
jns
dec
test
xor
mov
mov
lcall
jo
cld
divb
jbe
sub
cmp
subl
aam
std
ds
xchg
pusha
aam
orb
or
in
test
stos
setae
adc
std
adc
xor
pop
sbb
push
loop
in
cmpsb
pop
pop
cmp
stc
lods
adc
vminps
jp
or
in
stos
repz
pop
push
xchg
subl
mov
lahf
in
adc
in
dec
ja
in
mov
xor
dec
out
dec
push
add
shrb
push
sub
rorl
pop
mov
sub
or
repz
lods
sahf
push
gs
push
enter
adc
aaa
and
mov
or
cmpb
pop
lahf
mov
cmpsb
and
loope
mov
incl
mov
test
sub
jle
adc
mov
jae
loopne
ja
inc
int
iret
fbld
xchg
std
mov
mov
xor
xchg
jp
push
dec
in
xchg
fst
popl
ss
loopne
add
mov
sub
pop
inc
jp
shrl
aaa
js
jg
xor
lcall
imulb
inc
pop
jge
sahf
mov
jbe
mov
cli
xchg
test
push
sub
lcall
sbb
mov
pop
adc
insl
ficomps
inc
lahf
adc
test
mov
pcmpeqb
mov
adc
fwait
addr16
test
xlat
sub
mov
mov
jp
pop
aam
mov
fyl2xp1
scas
add
cmpb
mov
xchg
add
dec
and
repnz
iret
aam
arpl
pusha
cmp
es
das
pushf
jb
rorl
xchg
xchg
xchg
dec
add
adc
add
enter
sti
icebp
mov
xchg
mov
outsl
xchg
leave
sub
sbb
test
aas
ret
movsl
f2xm1
and
add
xchg
int3
rorb
sahf
fadds
jae
call
dec
xor
fstps
dec
repnz
test
xor
push
imul
mov
jne
insl
outsb
pusha
sbb
bound
xor
sub
sarl
inc
cli
xchg
add
xor
fcompl
imul
mov
fsubs
lock
addr16
popf
int3
or
mov
or
iret
dec
xor
add
jecxz
movsb
test
stos
push
fs
movsb
adc
leave
sbb
hlt
jae
rep
and
je
adc
ds
xor
pop
stos
inc
negb
push
sbb
stos
les
jb
mov
adc
xchg
xchg
orl
mov
test
mov
test
loop
adc
idivb
xchg
xchg
movsl
daa
xor
cwtl
dec
lods
nop
lods
add
inc
rolb
fs
movsb
pusha
mov
andl
fwait
adc
pop
mov
and
fs
dec
lret
stos
lds
sbb
jbe
xor
push
lea
pushl
aad
ret
into
push
cmp
and
incb
xchg
outsb
inc
lods
les
cmc
lock
pop
rol
inc
xchg
adc
add
lds
lea
xchg
iret
insl
scas
out
adc
and
sbb
or
xor
mov
inc
stc
adc
or
mov
ss
push
out
icebp
or
imull
push
fbld
out
gs
clc
and
sub
sti
mov
mov
xor
mov
test
push
mov
mov
clc
sub
mov
and
lret
pop
cmpl
stos
cmpsb
or
outsb
add
test
jno
call
inc
xor
ja
push
je
jle
loop
push
rorb
rolb
pop
pop
xor
cwtl
sub
stos
jmp
shlb
test
mov
sub
insl
cmp
icebp
in
mov
imul
xchg
stc
xchg
add
in
scas
out
and
sub
jge
aad
mov
xchg
sbb
or
adc
pcmpeqd
or
js
dec
inc
xor
pop
inc
mov
cmc
repnz
sbb
movsl
inc
pop
loopne
js
pop
lahf
mov
pop
test
push
xchg
sub
adc
jg
mov
cmp
cmp
clc
arpl
pusha
cmpsl
pop
jae
mov
lods
jmp
jnp
subb
dec
pop
push
xor
testl
mov
bound
test
stc
pusha
lods
sbb
jmp
insl
addr16
stos
pop
ret
xor
sti
push
and
xchg
and
rolb
xchg
cli
xchg
mov
rcrl
cs
xchg
das
cmp
and
fmul
adc
adc
insl
sahf
aam
xor
xchg
shlb
xlat
push
jne
out
xchg
sub
lock
and
inc
jge
inc
aas
sbb
and
je
int3
cmp
rcl
and
adcl
fdivrs
in
and
sti
scas
fisubrs
jo
in
scas
and
adcl
cs
xor
roll
and
xor
test
aaa
inc
bound
insb
into
adcb
test
cli
mov
outsb
js
fcompl
shll
jo
test
fisttps
dec
push
f2xm1
or
ds
test
scas
xor
add
adc
aam
adc
cmp
dec
jp
mov
fsub
inc
or
icebp
or
jge
out
dec
daa
aam
or
add
aam
lods
popa
and
lods
or
call
pusha
inc
jmp
loop
loopne
stc
cmp
popl
sbb
cmp
dec
cli
xchg
scas
xlat
jmp
adc
pop
and
jns
rclb
push
lods
or
loopne
xchg
jg
mov
aas
cmp
ds
xor
subl
jno
push
mov
repz
inc
cmp
push
imul
gs
dec
ret
ljmp
dec
push
adc
dec
push
inc
push
out
cmp
push
lret
adc
int3
sbb
test
pop
test
ret
mov
inc
xchg
jge,pn
mov
mov
imul
data16
push
repz
inc
mov
mov
test
in
adc
push
jno
scas
imul
jae
dec
daa
push
cld
or
sbb
popa
jno
push
rcrl
push
js
or
out
push
mov
in
in
decb
mov
pop
shll
xor
mov
and
pop
decl
adc
daa
mov
xor
clc
cli
jg
pop
popa
inc
xchg
pop
std
add
int3
push
mov
sti
pshufw
or
aam
imul
hlt
in
mov
ds
lcall
and
in
adc
and
cmp
cmpsl
push
sbb
jno
and
mov
push
lods
fwait
xchg
jl
pop
push
leave
mov
mov
push
lret
ja
cmp
ljmp
daa
or
inc
pusha
push
mov
jb
pusha
rclb
arpl
mov
repz
push
mov
ja
add
lods
js
iret
xchg
push
push
mov
outsb
cmc
add
and
aad
push
fcomps
pop
fwait
xchg
es
mov
and
fcompl
mov
cld
inc
xchg
xchg
and
aaa
jl
push
les
inc
in
fsubrs
fs
cwtl
mov
mov
rorl
cmp
and
mov
push
pop
or
push
sub
imul
insl
jnp
xchg
sub
popf
jecxz
adc
push
ret
shr
cmpsb
ret
xchg
xor
pop
or
es
es
loopne
sti
cld
pop
cmpsb
fcomp
arpl
nop
loop
hlt
aam
xchg
jo
out
cltd
data16
in
xor
mov
mov
and
sbb
push
xchg
dec
push
mov
out
das
xchg
xchg
pop
iret
cmpsb
cmp
iret
lret
pop
sbb
push
pushf
xor
clc
sub
in
into
mov
push
roll
sbb
int
jne
inc
add
out
push
mov
xor
shlb
cwtl
bnd
cmc
jnp
test
sub
sbb
sbb
test
sub
call
lret
mov
pop
vpcmpeqb
sub
aas
stos
jne
xlat
push
or
jnp
mov
inc
out
repz
or
push
fiadds
lcall
mov
pop
inc
xchg
sahf
jae
sub
xor
cmp
shl
cmp
push
test
xchg
mov
lret
cmp
sub
gs
mov
andb
push
sbb
scas
sub
mov
adc
push
add
pop
pusha
hlt
lret
andl
movsl
ret
imul
sbb
repnz
add
lahf
pushf
std
mov
mov
mov
cltd
leave
movsl
and
ret
stc
inc
dec
cmp
lock
fisttpl
cmp
or
ja
shrl
sub
dec
in
add
inc
sub
mov
jne
sub
mov
mov
sbb
lcall
imul
mov
lahf
mov
xor
cmp
adc
shlb
lahf
sbb
sbb
sti
pop
add
int3
mov
and
cli
fisubrl
or
fxch
mov
imul
loopne
inc
dec
fnstsw
xor
and
mov
xrelease
out
cmp
dec
jg
ret
fmul
in
int3
dec
sbb
movsb
mov
push
and
jns,pn
or
addl
rclb
popf
push
fimuls
pushf
push
mov
pop
arpl
xor
pop
insb
xchg
repz
or
sbbl
mov
jne
repnz
push
add
sub
mov
aam
je
cmc
imul
les
lcall
jns
icebp
out
imul
scas
jge
add
pushf
mov
cmp
popf
jne
jb
ret
jp
out
pop
sbbb
and
xor
scas
pop
xor
push
cld
int
add
jecxz
inc
jp
stc
repz
jmp
jmp
gs
sahf
jno
std
mov
push
leave
pop
rolb
mov
mov
ja
fldl
mov
insl
jns
or
push
dec
sbb
jo
xchg
ror
sbb
cmp
test
in
mov
mov
and
dec
das
add
or
std
adc
mov
lods
add
faddl
lds
sarb
daa
mov
push
pop
in
jns
ds
mov
stos
pusha
popa
int
or
das
outsl
dec
fwait
ss
adc
outsb
or
int
pop
ljmp
sub
mov
push
and
shll
mov
and
roll
clc
in
mov
push
cmp
sub
sub
push
jo
cmp
jecxz
repz
call
test
shl
enter
sbb
mov
add
jp
repz
mov
jo
repnz
rolb
loope
jmp
xor
fptan
into
inc
rcll
adc
rcll
sbb
or
lea
add
xor
xor
mov
inc
mov
sti
aam
push
bound
mov
cmp
mov
sti
mov
sbbl
out
ljmp
xor
out
pop
rcll
and
inc
adcl
adc
pop
rclb
or
imul
jae
or
in
xchg
loope
or
sbb
mov
mov
cmp
fidivl
fisubrs
sbb
mov
mov
scas
dec
or
inc
clc
xchg
jl
sbb
mov
loop
lds
xorl
nop
sub
mov
mov
adc
pop
push
test
shr
jecxz
and
fisttpll
xchg
cmp
pusha
pop
loope
jbe
clc
sub
mov
push
sbb
mov
pop
jmp
rcll
dec
jl
insl
pop
in
mov
movsl
pop
push
adc
mov
sbb
sbb
ret
adcb
inc
or
je
cli
jne
shlb
std
daa
pushf
cmp
xchg
or
and
dec
int3
cmp
lock
ret
adc
out
inc
jb
jmp
jae
shlb
xchg
jnp
lods
or
jp
repz
scas
add
mov
gs
pop
dec
xchg
out
cmp
cmpsl
xchg
repz
fcmove
push
xlat
fisttpll
sub
pop
adc
pop
jecxz
popa
add
add
std
scas
fmull
inc
mov
pop
incb
clc
pop
mov
and
xchg
cmpsb
fisubrl
movsl
adc
jae
add
and
and
push
int3
xchg
jne
sub
mov
cmp
push
jns
scas
pop
xchg
loop
push
aaa
mov
xor
outsl
fisubrs
xor
call
and
js
ret
imulb
adc
cmpsb
xor
rolb
loopew
insl
sti
es
mov
mov
in
lret
pop
xchg
and
jbe
ds
xor
add
sbb
sbb
daa
mov
jb
and
dec
cmpsl
mov
enter
push
sub
xchg
dec
int
and
pop
adcb
jmp
push
insl
dec
mulb
movsb
pop
mov
ja
or
cmpsb
jle
push
cmc
and
cs
dec
scas
jno
push
push
loope
lds
in
add
loop
imul
xchg
jo
cmp
cmp
xor
adc
loope
ret
cmp
xlat
sbb
stc
subb
daa
mov
mov
mov
popa
cwtl
dec
imul
mov
or
sub
push
lds
shlb
pop
loopne
and
pop
leave
imull
mov
hlt
dec
js
cmpsl
call
lcall
call
movsl
mov
cli
and
out
imul
call
dec
pop
inc
and
jnp
inc
fisubrl
adc
imul
cld
insl
xor
rcll
imul
stc
dec
rorl
rcrl
mov
subb
lods
add
add
ret
fs
out
push
cli
aad
sbb
stos
xchg
lea
sub
jecxz
sub
add
jbe
ja
or
in
fidivs
sub
mov
dec
fs
cmp
jmp
cmp
popf
lea
enter
in
push
add
iret
xlat
inc
leave
adcl
ret
xlat
mov
or
push
sub
outsb
xor
xchg
lock
cmp
cmpsb
mov
sub
pop
movsl
icebp
arpl
mov
add
mov
mov
lahf
fdivrp
fildll
iret
fwait
dec
aas
xchg
xchg
sbb
mov
imul
out
ret
inc
lret
xchg
mov
sbb
clc
xchg
test
in
cmp
rolb
bound
xchg
testl
or
mov
lock
pop
pop
std
arpl
scas
and
lret
xor
nop
aas
out
pop
in
lock
decl
in
mov
push
push
or
cmpsl
or
fs
mov
test
or
mov
bound
out
adc
lods
fs
jae
sub
lods
add
dec
or
sarb
imul
inc
les
ljmp
pop
push
jb
xchg
push
and
cmp
mov
pop
dec
rclb
jl
xchg
addr16
loope
in
stos
or
sub
sub
shr
jg
xor
arpl
jbe
pop
lcall
pop
ja
cmc
stc
mov
cmp
aam
sub
jne
pop
arpl
pusha
je
push
and
stos
repz
mov
pop
push
adc
and
ss
jg
jnp
cmp
lret
jp
mov
cmp
fisttpl
sbb
mov
movsl
mov
xlat
push
or
cwtl
mov
pop
jg,pn
loope
pop
and
xchg
fldl2e
jecxz
orl
jl
stc
dec
xor
inc
aad
xchg
inc
arpl
loop
xor
je
icebp
inc
aam
cmp
dec
jg
jge
fistl
shlb
jbe
add
fcomps
insb
mov
je
repz
int
lea
push
movsb
xor
cmpsl
mov
mov
xor
jmp
xchg
pop
int3
daa
js
out
pushw
lcall
cmp
cld
insl
push
xor
sub
rorl
and
jg
jle
arpl
xchg
mov
into
push
mov
mov
in
dec
sub
jp
add
add
faddl
pop
lods
jl
je
xchg
mov
in
popa
inc
mov
mov
mulb
outsl
aas
rclb
push
jp
shlb
push
jge
mov
sub
aaa
ret
into
mov
shlx
sahf
xlat
pop
mov
popa
adc
in
xor
push
and
icebp
data16
adc
inc
test
pop
jl
mov
push
xchg
pop
xchg
jle
push
clc
orb
dec
sub
pop
cli
mov
sub
cltd
push
outsl
scas
inc
dec
xor
in
xor
and
jecxz
rol
jno
loop
imul
rcr
push
adc
test
rorl
inc
in
mov
loop
mov
and
cltd
mov
lds
xchg
loop
rolb
jns
mov
mov
je
mov
clc
outsl
fidivs
cmp
jl
mov
out
mov
and
pop
dec
loop
mov
push
or
mov
es
movsb
mov
ret
mov
shll
xor
pusha
add
fldl
and
aas
mov
jo
mov
sbbl
jo
sbb
int3
out
adc
hlt
pop
jnp
add
cmp
jle
adc
cmp
loop
xor
push
test
or
clc
maxps
cmpsl
mov
imul
push
or
adc
or
lcall
dec
ficoml
imull
jle
gs
ds
inc
adc
fdivl
xchg
xor
fisubrl
mov
adc
lret
adc
mov
fdivrs
sbb
pop
int
ret
sub
add
jg
jo
out
mov
insl
sbb
adc
and
jb
call
gs
pop
and
mov
ja
clc
sub
or
iret
mov
inc
add
or
subb
cmpsl
mov
jp
sub
aaa
xor
add
inc
out
rcll
pop
jmp
cmp
sub
xlat
dec
insb
cmp
sbb
add
aaa
rolb
and
out
repnz
out
and
sub
pop
xchg
in
pop
pop
sub
scas
mov
shlb
adcl
push
mov
push
cmp
in
xchg
stos
xchg
mov
aad
dec
cs
push
jle
xor
int
mov
xchg
push
insb
imul
stc
lahf
mov
or
or
and
mov
bound
mov
jl
xlat
movsb
and
sbb
lcall
inc
mov
inc
push
mov
and
jno
adc
sub
ret
add
inc
dec
fcmovnb
fwait
jg
xor
jae
adc
out
fdivp
mov
jp,pn
xchg
movsl
cli
daa
jno
sub
mov
pop
fst
xor
gs
pop
pusha
int3
and
iret
pop
add
cli
or
cmp
or
inc
arpl
jae
add
cmpsb
hlt
xchg
push
or
js
pop
dec
add
ret
pop
ss
loopne
shl
daa
lea
or
scas
cmpsl
outsl
sahf
bnd
cs
cmc
sub
fs
leave
mov
fiaddl
mov
scas
dec
fsubl
or
jl
pop
leave
ret
add
inc
cmc
pop
xor
aas
mov
ret
shrl
and
sub
test
das
mov
adc
cmp
inc
cmpsl
pop
jecxz
add
mov
and
ds
adc
repnz
mov
add
mov
movsl
mov
jecxz
cmp
std
movsb
and
repz
mov
push
mov
inc
mov
pop
popf
mov
push
jae
xor
outsl
arpl
sbb
mov
pop
in
lret
sub
cmp
scas
push
sub
pop
imul
out
push
dec
mov
inc
movsb
cmpsl
stos
fnsave
jl
fisttps
cwtl
jmp
and
mov
or
rcr
adc
mov
mov
or
push
lret
repz
das
aaa
mov
cmp
xchg
fwait
movb
mov
iret
or
add
movsl
lods
pop
popf
inc
xchg
pusha
icebp
mov
icebp
mov
jp
xchg
hlt
cmc
inc
xchg
scas
add
cmp
shll
jp
testb
stos
aas
and
cmp
ss
xchg
cltd
mov
divb
mov
arpl
adc
jge
sub
jl
mov
and
outsl
mov
lret
fdiv
pop
js
in
cmp
fimuls
mov
lods
fxch
xchg
push
fsubrl
push
sbb
dec
jnp
rorl
adc
testb
pop
repnz
mov
sbb
ret
xchg
and
sub
inc
push
inc
mov
in
jp
dec
shll
in
or
mov
out
sbb
mov
inc
mov
fcomip
jge
push
dec
xchg
push
cs
push
gs
and
mov
sbb
dec
xchg
shlb
mov
dec
js
mov
fbstp
clc
int
out
mov
std
cmp
inc
jl
hlt
xchg
mov
call
cmp
mov
jb
repz
iret
jb
jl
insb
std
fsubr
xchg
and
inc
jmp
jb
call
mov
mov
lret
movl
and
adc
inc
rorb
adc
sub
nop
cmp
arpl
ja
sbb
inc
adc
sub
mov
xchg
test
dec
fmull
lock
xor
je
xorl
push
push
jg
pop
dec
decl
xchg
pop
stc
push
push
cwtd
movsl
sbb
cmp
repnz
mov
repz
mov
push
mov
cmp
ljmp
push
dec
jle
jmp
sbb
ja
cmp
jmp
call
mov
gs
inc
sbb
flds
rcr
and
xchg
sbb
and
and
mov
sti
dec
add
test
aad
sub
xor
repnz
inc
fnsave
iret
push
mov
dec
or
imull
aas
mov
jl
mov
jp
test
pop
cmpsl
cmp
hlt
or
mov
mov
mov
in
fcmovbe
hlt
jns
inc
sar
jae
loope
fisubl
push
les
fs
pop
push
rcl
int3
mov
dec
rcll
ret
xchg
sub
pop
sahf
push
xor
inc
arpl
loopne
lock
mov
sbb
dec
push
test
stos
and
dec
sub
inc
gs
push
out
cld
pushf
sub
pop
fcmove
imulb
dec
lret
clc
or
push
fstpl
sahf
popf
jecxz
test
insl
pop
lods
push
rol
enterw
pop
push
mov
fiadds
lock
pusha
in
mov
mov
ljmp
jne
xchg
test
arpl
test
adc
ret
mov
xlat
add
sbb
test
jge
es
outsb
sarb
aad
and
das
pop
or
xchg
dec
loope
dec
mov
and
xchg
std
cmpl
xchg
mov
xchg
cmp
ss
cli
jl
repz
jnp
jge
inc
getsec
cmp
aam
int
jge
lock
adc
lahf
mov
div
fs
lods
sahf
fcmovbe
sub
sbb
ja
mov
test
fwait
repnz
jecxz
in
mull
bound
xchg
cli
adc
cltd
mov
lret
lcall
std
lods
sbb
js
bnd
push
ja
xlat
ret
mov
xchg
sbb
popa
aad
movsl
pop
sbb
lret
xchg
adc
fucomi
or
addl
out
inc
sbb
mov
cwtl
dec
or
mov
sub
ret
lahf
cmp
sbbl
inc
shl
enter
xchg
in
dec
int
push
ret
and
cmp
cld
push
sbb
jg
ja
int3
jno
and
jns
mov
test
jo
push
mov
bound
or
shll
fisttpl
ss
out
jl
mov
mov
loope
imul
pushf
ja
inc
jnp
fwait
and
dec
test
pop
ljmp
mov
sarl
das
pusha
add
icebp
or
add
add
repnz
mov
jge
leave
ljmp
dec
xorl
mov
les
sbb
faddl
data16
fs
lret
out
stos
sbb
mov
rorb
cs
outsl
sub
mov
insb
xor
and
cmpsb
mov
pop
xchg
pop
cwtl
in
out
jb
stos
cli
and
scas
orb
mov
daa
fdivrl
jmp
cmp
jle
in
bound
stos
inc
nop
or
xor
jnp
scas
clc
sub
lcall
push
push
std
aaa
jl
cmp
adc
add
push
sbb
int
pusha
jmp
jb
scas
sahf
fcmovnb
sub
iret
das
lods
std
and
mov
xor
test
mov
pop
scas
mull
dec
jmp
gs
fisubs
dec
daa
inc
push
push
jecxz
pop
addr16
in
dec
leave
sbb
push
jge
out
enter
loop
dec
roll
sub
sub
cld
fiadds
mov
rcll
nop
mov
out
cmpsb
add
jle
popa
cld
jno
mov
jbe
cli
mov
mov
imul
jae
inc
jb
lea
loope
cld
outsb
inc
ds
imul
mov
mov
push
xchg
rcr
inc
enter
adc
or
xchg
dec
into
iret
fidivrs
pop
in
pop
repz
into
gs
aam
xchg
lods
xchg
or
addb
pushf
test
je
xchg
jbe
pushf
jecxz
mov
mov
mov
sub
or
pushf
cmp
inc
je
rcrl
lret
xor
dec
stc
inc
pop
inc
addl
pop
lcall
push
sub
addl
xchg
cmpsb
std
xchg
stos
decl
cld
inc
leave
cmp
ja
add
mov
xchg
lea
fmul
sub
pusha
stos
sbb
push
inc
sbb
sub
loope
icebp
ret
bound
inc
pop
sub
jnp
dec
fdivr
icebp
adc
outsb
push
addr16
xor
lock
dec
call
rcll
and
and
or
arpl
jnp
adc
sarl
dec
pusha
cmc
mov
push
dec
push
clc
lret
push
push
shlb
or
call
dec
outsl
addr16
aad
sbb
push
add
sub
mov
pusha
jb
mov
mov
adc
rdmsr
sarl
mov
xlat
add
std
adc
in
push
push
shrl
inc
testl
sti
stos
mov
mov
mov
test
dec
pop
sub
pop
mov
pop
xor
jmp
leave
xor
mov
dec
scas
push
xor
jle
mov
mov
bswap
cltd
mov
sbb
lods
test
lods
xor
stos
xchg
sahf
jmp
lds
pop
stos
xor
data16
fildl
test
xor
nop
jmp
jecxz
in
aas
test
sub
movsl
push
clc
imul
xlat
xchg
sub
xchg
cmc
inc
stc
push
pop
sub
push
das
push
dec
je
cmpsb
inc
inc
in
aas
push
mov
xchg
and
out
push
js
jmp
loopne
mov
int
dec
cmp
arpl
inc
inc
and
cmp
jg
push
mov
pop
xchg
imul
das
inc
cmp
int3
jne
adc
pushf
fcmovnu
popf
push
daa
xchg
mov
push
mov
or
cmpsl
aaa
decl
scas
add
xor
xchg
add
push
inc
out
xor
out
push
mov
jno
inc
in
push
xchg
cld
xchg
ss
mov
xchg
and
scas
js
iret
push
xor
xchg
jp
xchg
insb
cmp
and
divl
jp
repz
jo
imul
inc
cmpxchg
xchg
rorb
data16
ja
aas
in
sbb
repnz
pop
sbb
push
cmp
or
and
stc
jle
mov
pop
subps
stc
imul
nop
pop
adc
mov
bound
dec
xor
add
fdivrs
pusha
lods
and
adc
and
ret
sti
jge
clc
mov
push
xchg
sub
mov
imul
movsb
sahf
aad
mov
dec
divb
xchg
in
sbb
cmp
sbb
cmpsb
xchg
fcomps
or
pop
mov
mov
xorl
cld
movb
push
push
pop
js
fbld
notl
out
mov
mov
xor
movsl
aad
dec
dec
xchg
inc
adc
xchg
fwait
in
gs
cmpl
sub
imul
scas
pop
cwtl
andl
sti
cmp
xor
outsb
in
push
jae
and
push
inc
sub
inc
fadds
push
jbe
inc
xchg
xchg
pushf
or
adc
xor
xor
adc
and
bound
test
call
int
aad
sahf
iret
pop
xsaves
test
stc
loop
mov
inc
sahf
jne
xor
sub
push
xchg
dec
lret
andb
stos
push
pop
xor
mov
or
test
push
push
fbstp
inc
hlt
outsb
sbb
shl
fimuls
les
fmuls
push
popa
aam
repnz
lcall
dec
push
adc
pop
jmp
dec
dec
mov
pop
jecxz
les
rdpmc
xchg
mov
imul
inc
push
push
ds
ja
push
shlb
mov
xchg
jmp
push
dec
outsb
cwtl
jno
inc
fwait
and
pop
shrl
orl
repz
test
adc
push
jg
outsb
lahf
inc
dec
fimull
ljmp
test
mov
fbstp
std
mov
inc
xchg
mov
push
out
inc
call
pop
push
sahf
or
movsl
lcall
popf
lea
mov
sarb
sub
fstps
je
movl
mov
mov
or
xchg
hlt
mov
hlt
adc
imul
lahf
test
stc
negl
cmp
mov
mov
push
dec
sub
lods
jns
or
sub
movsl
icebp
js
cmpsb
sti
and
jle
sbb
test
mov
decb
mov
inc
and
dec
jne
out
fistl
pslld
jb
push
mov
sub
push
fisttpl
and
adc
out
sbb
fldl
mov
dec
xchg
sbb
jns
cltd
adc
mov
out
jnp
sbb
je
push
dec
outsl
mov
fisubrs
stos
adc
rcll
call
addr16
movsl
cmp
movsl
bound
fs
xor
sub
dec
pusha
enter
scas
inc
lds
jne
lcall
daa
pushf
push
daa
sub
inc
and
ja
into
xchg
push
rorb
cmp
fimuls
fsubp
roll
stc
addl
imul
ja
jp
loope
xor
mov
or
je
ret
scas
stos
sub
adc
stc
xchg
popa
mov
mov
push
out
pop
pop
pusha
mulb
mov
int3
std
push
add
sti
mov
loopne
adc
dec
lahf
dec
shrb
cmp
pop
cmp
xchg
mov
cmpsb
fcomps
jbe
iret
lds
das
popa
mov
dec
cmpsl
push
repnz
push
and
adcb
rorl
inc
sahf
leave
lahf
pop
ret
repnz
jg
adc
hlt
or
xor
lret
adcb
jmp
cwtl
push
push
jl
icebp
push
xchg
lret
pop
pushf
mov
mov
pop
xor
les
mov
test
cwtl
mov
iret
out
jmp
mov
out
push
jp
mov
fildll
int
sbb
mov
mov
sub
dec
mov
push
ljmp
test
in
std
ljmp
mov
out
cmp
sub
in
add
push
repnz
lret
jbe
rclb
stos
fldcw
jo
push
jne
pop
sub
jbe
add
repnz
dec
push
dec
add
sahf
dec
out
or
dec
lds
adc
add
or
add
popf
sub
ss
xchg
inc
sarb
mov
mov
orb
adc
dec
jecxz
scas
add
inc
sbb
dec
and
and
cmp
in
jno
push
push
sbb
cld
or
push
dec
das
or
sti
mov
mov
int
leave
clc
dec
sbb
cmp
or
inc
and
ds
cli
sub
adc
fldl2t
cmp
xchg
mov
mov
fistps
jmp
icebp
lods
mov
pusha
popa
rcrb
div
fimuls
les
xor
in
mov
ljmp
dec
cmp
pushf
or
push
mov
lret
add
jbe
out
repnz
adc
or
outsb
and
rol
add
sub
andl
fnstcw
ret
loopne
mov
pop
mov
jns
fs
push
lods
lods
test
xchg
neg
push
ss
inc
jp
mov
lds
cmpsl
ss
cli
dec
jnp
outsl
and
push
push
cli
daa
mov
aam
mov
xorl
pop
cmp
or
or
out
sub
adc
xchg
iret
mov
enter
and
stc
leave
loop
sub
out
je
mov
dec
push
mov
xchg
cmp
out
xchg
enter
test
adc
push
mov
outsb
push
shll
pop
dec
inc
ret
jg
xor
xchg
jle
jge
fisubs
pop
adc
fwait
stc
ss
xchg
in
sub
test
loope
or
or
xchg
mov
cwtl
fiaddl
lods
sub
mov
enter
mov
jl
or
pop
pop
inc
dec
or
inc
leave
dec
insl
add
xchg
push
std
jle
sub
fs
pop
in
pop
mov
ljmp
jecxz
sub
mov
jmp
lret
jae
hlt
clc
sbb
mov
icebp
pop
rorl
cmpsb
mov
ret
inc
loope
push
and
in
fldl
jnp
pop
cmp
sbb
cwtl
pop
pushf
in
out
mov
mov
add
test
and
aas
jg
ljmp
aaa
std
adc
fsubp
aas
out
fisttps
hlt
cwtl
fsubr
push
movsl
adc
and
inc
dec
push
or
add
adc
scas
lret
cmp
rclb
pushf
stc
lcall
popa
sub
test
inc
xor
lret
stos
mov
je
stos
sbb
cmpsl
mulb
decl
pop
loop,pt
insl
ret
data16
or
rol
dec
mov
xor
out
mov
push
ss
jno
ljmp
mov
inc
sub
mov
mov
xchg
out
into
sbb
testl
cmc
test
fisubrs
inc
js
je
push
aas
bound
lahf
mov
sub
aam
sbb
push
sbb
gs
cmc
dec
rorl
mov
cmovs
mov
repnz
out
div
mov
jbe
lea
sbb
cmp
xchg
xor
and
xchg
pop
fisubrl
fmuls
inc
sub
dec
leave
hlt
sub
fimull
xor
pushl
movsb
and
or
cmc
xor
ret
fisttpll
jecxz
ja
mov
lods
iret
adc
sub
loopne
pop
jl
pusha
push
xor
pop
lahf
adc
int3
mov
repnz
shl
insl
je
and
jg
mov
ljmp
sbb
in
call
jb
inc
mov
dec
rolb
mov
scas
inc
add
aam
jo
imul
bound
lss
in
mov
add
dec
mov
gs
enter
cmp
data16
mov
loop
mov
sbb
outsl
adc
add
push
stos
in
pop
arpl
fldcw
ja
cmpsl
and
xchg
decb
pop
js
mov
mov
pop
lret
jnp
push
cmp
fidivs
push
xchg
in
sub
or
cltd
cmp
push
test
or
xchg
push
loop
jle
outsl
cmpsb
jb
mov
ss
xchg
mov
mov
xchg
pop
movsl
or
mov
push
lcall
jg
adcl
adc
mov
mov
ja
lods
in
out
and
pop
mov
pop
xchg
mov
repz
aam
out
les
in
movsl
movsb
in
jmp
pop
jle
out
fcmovu
pop
bound
cwtl
mov
insl
idivb
sub
repnz
cmp
add
aam
push
jae
cmp
mov
xor
mov
pop
aas
dec
lret
mov
cld
mov
mov
bound
dec
xchg
shrl
sbb
dec
mov
insl
jl
xchg
lds
mov
stos
or
sub
pop
dec
pop
push
fldt
jp
mov
loop
rolb
cmpsl
inc
inc
or
dec
roll
aad
pop
iret
xchg
push
nop
mov
test
push
pop
dec
sbb
arpl
mov
incl
sbb
mov
mov
push
mov
push
push
in
dec
xor
inc
lcall
test
ljmp
cmp
pushf
mov
lea
xor
mov
pop
insl
mov
dec
inc
pop
sbb
sub
mov
push
pop
loope
pop
inc
xor
sti
and
xchg
jbe
faddl
sbb
mov
dec
mov
push
iret
daa
xchg
mov
pusha
or
inc
fwait
cmpl
negl
nop
or
inc
sbb
sbb
repz
adc
xor
ja
aas
out
pop
jecxz
push
call
shrl
sbb
inc
ret
repz
ljmp
mov
sahf
sbb
repz
mov
fldl
jno
cmp
aad
pop
int
dec
inc
adc
mull
cmpsb
iret
inc
dec
xchg
lods
loope
test
jae
or
add
push
mov
popf
pop
cmp
scas
rcrb
mov
mov
jecxz
mov
cmpsb
sbb
pop
shlb
imul
andb
popa
or
jp
or
pop
sbbb
call
mov
mov
lods
sub
fdivs
cmc
fsts
aad
cs
cmp
inc
aad
mov
in
cmp
sbb
int
daa
push
sbb
in
and
ss
mov
mov
dec
xchg
or
mov
cmpsb
mov
push
lret
cli
mov
dec
stc
in
aas
adc
into
cmp
aam
sub
push
mov
jge
repz
push
fidivl
jno
add
movsl
call
pop
push
push
stos
icebp
or
stc
cmpsb
mov
cwtl
and
dec
sbb
mov
cltd
outsl
jns
push
fistpl
or
int
rclb
aam
sub
mov
push
cmpsl
jp
out
sti
icebp
and
lds
call
mov
pop
lret
xor
sub
inc
fwait
jecxz
icebp
addl
and
ds
pop
ret
pushf
xlat
push
lcall
xchg
into
lea
xor
or
sub
push
push
nop
pop
pop
leave
inc
dec
push
pop
or
lret
push
and
mov
mov
popa
mov
or
test
xor
out
ret
sbb
or
int3
fidivrs
add
repnz
mov
xchg
mov
push
sbb
mov
mov
pop
or
pop
sub
loope
xchg
mov
push
add
js
popa
push
stos
les
mov
inc
sbb
inc
mov
mov
lahf
adc
pop
and
sahf
es
into
das
out
xor
xchg
jmp
mov
and
idivl
stos
ss
jbe
subl
pop
inc
mov
enter
and
mov
out
mov
add
push
dec
pop
sbb
push
and
mov
lock
into
mov
push
sub
mov
xchg
xchg
les
out
add
fcoml
je
xchg
out
scas
fiaddl
leave
mov
ret
jecxz
or
mov
leave
jmp
jg
sbb
js
or
out
stc
or
xchg
ds
hlt
sbb
lret
mov
sbb
rorl
cmp
leave
sbb
sbb
sub
pop
aaa
adcb
add
cmp
push
mov
xlat
mov
test
and
adc
cmp
out
scas
movsl
cli
mov
sbb
shlb
fisubrs
mov
fcmovnu
in
test
mov
cmp
fdivs
mov
in
lret
jno
adc
and
inc
fucomp
pushf
inc
mov
inc
xor
mov
adc
jmp
and
cmp
xorb
inc
ficomps
mov
cmc
stc
and
dec
xchg
clc
mov
inc
jle
jbe
lea
lds
jmp
or
clc
loopne
shr
push
aam
or
loope
inc
pop
dec
mov
test
vshufpd
mov
xor
insl
mov
cltd
and
fimull
push
push
dec
ja
lock
inc
push
sbb
mov
cltd
loopne
sub
jne
lods
loopne
add
gs
call
sub
out
and
add
js
cmp
xchg
stc
push
push
mov
or
popa
cmpsb
jmp
movsl
shlb
repz
fisubl
js
push
jecxz
out
fnstcw
cmp
xchg
and
outsb
push
insb
pop
pop
dec
in
xor
xor
add
lret
mov
mov
cmp
sub
lcall
es
xor
sub
mov
mov
and
sbb
in
or
dec
ret
push
xchg
inc
mov
test
lcall
or
cld
xchg
mov
push
shlb
pusha
mov
dec
jge
out
adc
xor
add
lahf
xor
jne
cmp
inc
idivb
pop
daa
sbb
clc
fld
mov
mov
enter
filds
pop
push
sar
or
stos
shlb
ljmp
inc
ds
mov
ds
mov
out
inc
pop
or
or
add
pop
dec
ljmp
out
psubw
xor
ss
addr16
xchg
or
lahf
mov
sub
fldt
pop
cmp
ds
sbb
ret
jmp
push
rclb
lcall
fs
add
xor
arpl
jae
or
lds
iret
inc
or
sbb
stos
icebp
adc
xchg
jbe
sub
and
mov
cmp
push
cmp
push
pop
mov
ja
int
adc
mov
inc
add
scas
loope
jle
mov
leave
push
push
mov
mov
test
or
add
mov
xchg
insb
push
jl
xchg
scas
xchg
pop
lahf
pop
into
lret
xor
adc
xchg
or
cmp
sbb
dec
xchg
pop
insl
dec
push
pop
push
and
repnz
sbb
mov
loopne
mov
loop
fnstcw
cmp
xchg
jnp
cmc
cmp
jae
cmp
lods
outsl
mov
pop
push
jle
rclb
mov
pop
out
mov
leave
fcmove
adc
pop
cmp
xor
xor
xor
aaa
pop
cld
pop
mov
push
jg
clc
and
ret
fbld
fs
jle
jmp
add
leave
inc
imul
mov
jmp
enter
movsl
scas
imull
pop
shrl
test
movsl
inc
sti
test
adc
sarl
sbbb
inc
jle
jnp
bound
and
xlat
add
mov
sbb
add
sub
jnp
imul
mov
call
sub
push
std
clc
pop
adc
sbb
aas
mov
sbb
sbb
repnz
dec
out
cmp
mov
jle
push
icebp
scas
test
popf
adc
outsb
jmp
jg
shlb
adcl
into
cmc
mov
and
xchg
xor
or
xor
loope
int3
mov
out
popf
insb
pushf
sub
pop
push
shll
ret
pop
ljmp
inc
testb
dec
mov
testl
xchg
gs
sbbb
mov
sub
add
pmuludq
mov
lahf
jns
cmp
cmp
or
mov
addl
lcall
adc
and
cmp
xor
aam
pop
push
pop
iret
aas
ljmp
lret
xchg
push
fsts
xor
dec
and
jl
adc
cmc
xchg
fbstp
pop
das
inc
xchg
xor
jle
pop
andb
dec
mov
call
sbb
inc
jno
jo
jl
cmpsl
mov
mov
in
outsl
enter
xchg
lret
loopne
jle
incl
xor
les
stc
pop
xor
arpl
mov
push
push
cmp
dec
out
lods
mov
scas
repnz
out
sub
cmpsb
loop
adc
mov
xchg
mov
push
jno
or
in
or
dec
and
out
and
std
xchg
imul
out
dec
push
inc
jl
adc
iret
mov
sub
xchg
rol
pop
dec
lea
sbb
aam
rcl
leave
jecxz
pop
or
outsl
aam
adc
shrb
scas
cmp
xchg
incb
dec
mov
xchg
xorl
fstpl
loope
rorl
xchg
ja
into
mov
punpckhbw
arpl
inc
sti
pop
mov
les
jp
mov
sbb
or
aad
mov
arpl
xchg
mov
rcr
icebp
out
out
out
lea
repnz
int3
cmp
push
cltd
les
cmpsb
ljmp
scas
test
out
push
cwtl
mov
ljmp
std
fwait
jp
stos
out
mov
mov
push
shlb
add
lods
add
pop
push
test
test
cmp
out
and
xchg
jecxz
jecxz
jg
xor
cs
sub
sub
pop
mov
loope
test
js
imulb
ret
sbb
xor
nop
xchg
push
xor
imul
push
pop
scas
mov
cmpsl
clc
xchg
je
loopne
lods
ja
mov
aad
adc
cmp
int3
mov
pop
sub
mov
pop
imul
dec
cmp
popa
jmp
mov
cltd
jmp
dec
std
mov
cmp
inc
outsl
and
pop
test
dec
sub
fildl
out
add
imul
mov
out
jg
cmp
adc
pop
out
les
fsubs
mov
cmp
jne
cmp
ret
sbb
test
pusha
adc
repz
outsl
mov
sub
pop
lret
xchg
cwtl
xchg
lock
or
sbb
stc
pushf
call
mov
xchg
call
mov
mov
cmp
fsubrs
push
loopne,pn
pop
testl
cwtl
iret
dec
jl
pop
stos
adc
mov
jno
movsl
or
xor
lret
das
mov
pop
mov
movsl
cmp
jno
mov
rorb
test
pop
dec
cmp
or
fwait
loop
mov
stos
push
pop
mov
jae
xchg
add
adc
cmp
dec
push
xchg
or
mov
stos
test
pop
or
and
lahf
sub
jle
test
pop
push
mov
lea
stos
lret
push
dec
mov
loope
int3
xchg
es
pop
mov
sbb
add
xor
arpl
in
movsl
fldl
dec
repnz
das
mov
jo
or
inc
xchg
cmp
aad
shrb
in
in
js
mov
js
int
dec
mov
test
loop
les
pop
fstpl
xchg
pop
dec
imul
sbb
cltd
jne
cld
push
outsl
out
fstpt
sub
test
and
lret
shrb
mov
fwait
xorb
addr16
push
bnd
adc
sub
lds
call
jg
fsubr
lcall
sub
fstps
sbbb
aaa
cmc
xor
sbb
mov
mov
iret
mov
aaa
addr16
ljmp
bswap
cli
pop
push
mov
enter
and
mov
mov
ret
xchg
xor
aaa
add
pop
cmp
mov
mov
lock
jb
ss
inc
cmovb
stos
loop
popl
fnstcw
push
mov
les
and
mov
adc
mov
fcoml
mov
pop
sti
mov
sahf
dec
push
imull
add
jb
xchg
dec
lcall
outsl
mov
lret
push
inc
mov
cmpsl
add
adc
pusha
fsubrl
cmpsl
out
mov
enter
mov
cmpsb
in
push
inc
aam
pop
dec
stos
or
pusha
imul
cs
scas
cmp
mov
ss
jg
out
out
cli
scas
dec
mov
add
insb
push
sahf
add
cmp
bound
push
scas
loop
je
popf
lret
adc
pop
xor
arpl
adc
stos
jg
mov
xchg
es
xor
pusha
and
movlps
push
js
and
xchg
hlt
scas
cli
call
sub
fistpl
adc
mov
lret
mov
sub
pop
nop
sub
adc
mov
cmpsl
daa
sbb
lock
divl
dec
addl
leave
scas
and
mov
aad
mov
pushf
out
cmpsb
or
je
dec
pop
pop
inc
inc
push
push
out
jbe
jb
mov
je
jb
sti
pop
aaa
sub
sahf
fildll
inc
pop
jl
and
ds
xor
sbb
subb
and
add
adc
sub
mov
jp
mov
pop
popf
insb
cmp
loopne
ret
lods
jg
and
mov
push
inc
and
in
pop
ror
cld
repz
lea
add
imul
cmp
inc
imull
addl
addb
and
lods
push
mov
int3
leave
jg
sub
repz
aam
sub
mov
lock
movsl
mov
and
cli
add
mov
fwait
enter
in
insl
sbb
mov
rcr
pusha
jl
fdivrl
mov
push
jns
cmp
test
les
lret
fcomp
in
outsb
jnp
adc
jne
cmp
xchg
push
jl
outsl
fsubrs
stc
das
addr16
ret
je
inc
clc
daa
xchg
add
sti
sub
and
jb
mov
mov
pop
fadd
pop
dec
cmpsl
adc
push
lea
xorb
loopne
daa
clc
rcll
addb
adc
imul
cmp
push
cmpsb
aas
cwtl
add
out
xor
inc
xor
mov
inc
dec
xchg
divl
mov
shlb
nop
test
jmp
sarl
mov
mov
xchg
add
add
mov
xor
inc
arpl
lods
outsl
fstpt
mov
shrb
cmpsb
enter
xor
pop
sbb
ljmp
daa
aam
jno
mov
xor
jns
push
jb
ret
inc
xchg
mov
sub
andl
outsb
add
in
mov
xchg
movhps
ds
daa
mov
insb
lahf
jmp
xor
dec
push
out
or
test
data16
pop
mov
mov
gs
mov
push
mov
add
call
sarb
stc
pop
aas
mov
sub
mov
pop
movsl
and
popa
andb
fists
pop
cld
sub
sub
push
insb
in
out
ds
cmp
or
insl
cli
fisubl
jmp
xor
orb
mov
add
or
mov
and
inc
xchg
lods
mov
aas
or
sub
out
inc
stos
dec
lret
popa
xor
add
dec
iret
lea
sahf
movsl
xor
add
rcrb
push
xor
adc
mov
sbb
lods
test
sub
push
mov
and
ficompl
sub
jne
push
icebp
sub
xchg
in
in
add
sbb
fwait
sbb
mov
pop
adc
pop
push
call
dec
jge
add
add
ljmp
in
aaa
inc
outsb
ret
xor
inc
jge
test
test
sub
cmp
jecxz
push
out
pop
hlt
pop
lods
push
xor
hlt
pop
adc
mov
xchg
andl
push
mov
push
xchg
lods
xor
aaa
pop
repnz
pusha
inc
push
mov
sbb
pop
out
in
xchg
sbb
mov
xor
sub
or
inc
inc
scas
call
nop
imul
out
xchg
mov
das
cmp
lods
fisttpl
lds
jbe
and
std
jne
cmpsl
or
repnz
stos
mov
pop
shll
push
or
ss
imul
or
aas
scas
inc
push
popl
stc
jp
jmp
xor
jecxz
movsl
xchg
pushf
les
add
lock
adc
or
lahf
push
jp
xor
aaa
pop
jbe
std
leave
and
pop
and
mov
dec
cmc
outsl
mov
dec
cmp
fs
lods
cmp
dec
sbb
push
and
sbb
mov
inc
lods
inc
clc
sub
mov
xor
pop
mov
leave
popa
ret
cmp
cli
shrb
les
out
std
pop
ss
sbb
imull
popa
bound
jp
or
lea
inc
mov
fstl
sbbl
cmp
mov
push
inc
popf
arpl
jnp
in
fcomps
dec
ss
ss
xor
mov
mov
lret
and
add
xor
and
sub
subl
sbb
push
mov
and
cmp
cltd
leave
jns
lds
xor
insb
test
adc
mov
cwtl
push
push
pop
push
pop
in
push
scas
addr16
sbb
cmp
jge
in
xorb
bound
xchg
aaa
in
int3
fs
jo
cld
add
adc
jle
cmp
sbb
push
and
push
test
inc
stos
add
andb
mov
shll
cmp
push
testb
add
mov
or
jle
sub
dec
mov
cmp
inc
insl
xchg
arpl
mov
ds
jo
fidivrs
decb
sub
cmpsb
pop
fbld
aas
push
cmc
in
scas
lea
add
jnp
out
adc
add
inc
sub
mov
or
dec
inc
push
loopne
into
jecxz
xorl
xlat
xor
scas
sub
not
pop
cmp
sbb
scas
and
mov
or
pop
iret
pop
and
pop
int
popf
lret
dec
sar
mov
and
shlb
ljmp
push
call
mov
jbe
ljmp
fdivr
or
push
push
lahf
std
mov
inc
outsl
je
in
cwtl
inc
jbe
test
jno,pt
xor
pop
sti
xchg
inc
je
pop
cltd
sbb
test
movsl
out
mov
lds
or
mov
mov
mov
sbb
int3
gs
inc
out
ja
test
push
sub
pop
inc
mov
mov
mov
mov
mov
xchg
mov
xor
mov
cmp
cmc
gs
insl
mov
mov
sbb
add
lret
xchg
imul
or
inc
inc
pop
outsl
mov
je
shr
dec
dec
filds
in
outsl
ja
imull
add
jns
fcos
mov
sahf
gs
mov
int
jl
xchg
xchg
xchg
jge
push
cmpb
dec
push
pop
test
test
mov
cmp
jne
dec
fsts
rorb
insb
push
test
scas
into
and
hlt
pop
jmp
ficoml
adc
sar
movsl
xor
pop
sub
incb
popa
cwtl
xor
sbb
jno
dec
out
sbb
pop
inc
pop
insl
mov
mov
ret
test
and
add
loope
xlat
pop
jns
push
into
shl
pop
imul
cmp
push
mov
out
jae,pt
pop
pop
mov
cs
sub
cli
jo
pop
divl
mov
aam
inc
jle
test
push
ja
mov
xor
lock
ljmp
call
adc
pushf
add
daa
push
lods
pop
mov
xchg
mov
push
shrl
xchg
add
fldl
leave
push
xchg
inc
xchg
dec
popa
sub
popa
add
mov
repz
movsb
insl
cmpsb
sub
enter
into
mov
sbb
movsl
rolb
mov
cwtl
pop
fbld
cmpb
insb
xchg
repnz
xchg
add
jle
arpl
lea
mov
push
fcomp
add
sbb
mov
mov
push
cmp
cmp
push
xchg
sbb
pop
xchg
sbb
aad
data16
fdivrl
xchg
sahf
jle
les
pop
cmp
xchg
inc
inc
sbb
lahf
mov
inc
pushf
pusha
pop
dec
loopne
hlt
jecxz
loop
or
inc
dec
int3
aas
in
mov
cmp
push
mov
cwtl
stos
in
pop
push
fs
loopne
outsb
xchg
fcom
inc
dec
mov
cmp
fsts
mov
jl
push
push
inc
or
jg
lret
push
xor
nop
lods
sbb
test
or
rcrb
loope
mov
insb
imul
adc
xor
sahf
test
stos
pop
mov
outsb
loopne
mov
push
or
mov
push
mov
cmp
mov
es
and
xchg
add
test
or
insb
jecxz
ss
aam
mov
cmp
mov
jne
pop
pop
pop
int3
sarb
movsl
test
jne
ret
mov
in
cmp
inc
mov
xor
pop
in
inc
ja
jl
fadd
loop
cmp
cmp
add
adcb
into
daa
ret
mov
mov
mov
xor
pop
xor
es
dec
xor
fisubl
push
dec
test
in
sub
mov
xor
mov
dec
out
adc
lret
sahf
cmp
mov
shl
out
adc
mov
lock
and
cltd
ljmp
push
dec
stos
cs
insb
bound
jge
and
jae
call
mov
jg
mov
jne
xor
cmpsb
je
lds
and
test
xor
jne
imul
dec
mov
pusha
dec
and
test
out
mov
lods
and
shll
dec
mov
popf
mov
fcompl
cli
adc
testb
mov
dec
clc
cwtl
cld
js
and
and
sbb
fidivl
mov
lret
sbb
jnp
sti
arpl
scas
data16
ja
push
subl
jl
lret
fimuls
cltd
testb
fwait
mov
mov
mov
repz
es
out
mov
dec
sub
loopne
or
jmp
xor
or
lds
inc
call
out
xor
mov
dec
xchg
or
and
test
xchg
imul
mov
call
xchg
mov
or
xor
xor
jge
inc
pushf
xor
rorb
inc
and
pop
int
pop
scas
mov
jecxz
sub
inc
ja
pop
sub
ja
sbb
push
inc
adc
aaa
icebp
jmp
cmc
sub
out
notl
lea
sub
cmpsb
loopne
arpl
push
cwtl
jbe
jo
fbld
mov
repz
test
and
movsb
aam
int
call
sub
mov
loop
xchg
sub
jnp
jp
inc
sub
fcompl
mov
pop
sbb
mov
lcall
imul
lods
int3
lds
in
fnstcw
nop
out
adc
push
pop
int
jecxz
xorl
hlt
dec
push
cmp
dec
sub
je
cld
jbe
inc
hlt
int
inc
jge
ja
adc
push
addr16
dec
or
cmp
mov
hlt
inc
stos
cltd
in
or
cmp
enter
pop
shlb
xchg
fnsave
mov
push
jg
fdiv
mov
decb
lret
jg
movsb
pop
xchg
movsl
pusha
mov
or
repz
xor
or
sbb
sbb
xchg
je
into
hlt
cmp
mov
popa
lahf
pop
mov
orb
aad
lret
push
mov
sbb
in
mov
lahf
dec
jb
sub
jp
mov
addl
push
jecxz
sahf
xor
arpl
outsl
jbe
gs
cld
mov
inc
xchg
outsl
pusha
subb
or
shrl
mov
popa
les
jg
mulb
ret
inc
aaa
into
pushl
mov
cmpsb
jge
ret
sbb
jbe
outsl
or
sbb
sti
das
xchg
jne
cmp
sub
call
outsl
lret
or
idivl
or
es
fs
dec
mov
scas
and
pushf
jecxz
dec
sub
stos
clc
js
push
xor
sbb
push
xor
cwtl
in
push
mov
insb
push
insb
loop
jg
jle
sbb
loope
into
pusha
aam
testb
aaa
and
cmp
adc
xlat
test
push
sbb
dec
int
mov
jecxz
mov
add
mov
pop
mov
xor
add
inc
mov
adc
push
push
jge
call
add
roll
rcrl
xchg
adc
and
pop
ljmp
inc
outsb
xchg
mov
add
dec
jnp
and
fcoms
jmp
outsb
and
imul
pop
insl
mov
inc
call
imul
mov
or
push
xor
jmp
jle
adc
outsb
sub
add
dec
xchg
test
xchg
pop
mov
add
jnp
add
pushf
into
sub
shll
pop
ljmp
xchg
cli
mov
lret
sbb
pusha
fucomip
xlat
xor
test
lods
xchg
jle
in
pop
imul
fistpll
and
mov
pop
bound
inc
cltd
cmc
cmpsb
stos
jno
add
dec
clc
adc
add
sbb
imul
dec
inc
ret
cmp
xor
ds
cmc
fcmovb
jecxz
in
inc
sti
xor
jne
push
jbe
pusha
pop
sti
in
inc
xor
enter
cld
add
lret
inc
lahf
rcrl
shl
stos
notl
movsb
lock
mov
arpl
inc
and
lea
dec
bound
add
ljmp
loope
inc
les
push
jg
jae
js
push
repnz
ljmp
xchg
sbb
xchg
push
mov
ret
sub
add
pop
cmp
les
stos
fdiv
and
xchg
cmpsb
cmc
adc
aad
jno
dec
loopne
out
shr
jg
addl
fdivrs
adcb
dec
fmull
fnop
pusha
dec
mov
push
fsubrs
leave
lods
decl
loope
and
cmp
xchg
ss
cmp
xchg
std
sub
movsb
pop
ret
out
loope
sub
push
sbbb
sahf
jns
mov
cmc
pop
adc
fbstp
jbe
cld
jnp
xchg
jbe
icebp
or
js
push
fcompl
pop
mov
jns
mov
out
pop
mov
cld
jl
loopne
ret
pop
mov
mov
aaa
push
lods
xlat
mov
cmp
fdivrs
addr16
ret
sbb
ds
adc
xchg
and
cmp
push
jmp
push
adc
add
hlt
jl
lret
in
fisttpll
and
cmpsb
fiaddl
aad
mov
loopne
aaa
push
dec
mulb
mov
fwait
aam
adc
jnp
repnz
rorl
in
adcb
ds
pop
adc
movsb
cli
jle
inc
divl
lds
xor
scas
popaw
arpl
pushf
lea
mov
leave
cmp
test
rcr
sbb
test
cmp
mov
in
and
mov
jmp
ret
fabs
or
jns
dec
movsl
movsl
xchg
mov
scas
flds
divl
pusha
popf
push
xchg
or
fs
jne
inc
out
insb
add
xor
scas
xchg
cmc
adc
dec
sbb
ret
push
fisttpll
imul
mov
adc
pop
lahf
xor
jne
xor
mov
es
notb
subl
movsb
add
mov
aam
mov
pop
inc
add
cmp
mov
lods
adc
lret
int
pusha
rcrl
push
jmp
repz
shlb
jge
vsubpd
jecxz
test
ficoms
push
stos
jge
fs
xor
lret
cld
mov
add
frstor
test
data16
adc
jno
popa
fcmovbe
or
js
bound
mov
test
sub
mov
arpl
ds
add
adc
stc
add
inc
insl
xor
or
sub
nop
scas
sub
dec
loope
lock
ret
shlb
sti
pop
lods
ss
stc
out
mov
popa
xor
adc
mov
aaa
clc
xor
ljmp
mov
lahf
cmp
lahf
pop
adc
inc
std
fcmovnu
mov
sbb
fnstsw
push
sbb
cli
loope
into
mov
test
mov
mov
test
sub
arpl
out
and
jmp
popa
outsl
xchg
push
gs
ret
add
sbb
aad
dec
pop
push
inc
in
addr16
in
pop
lahf
test
lret
call
adc
addb
push
pop
pop
jmp
push
add
mov
xchg
mov
cmp
mov
or
out
bound
jmp
call
pop
outsl
cmpsl
mov
test
pop
cmc
stos
dec
or
dec
insl
push
mov
or
inc
aad
mov
aad
aaa
clc
push
arpl
shll
inc
cmp
sbb
sbb
outsb
movsb
scas
adc
mov
xchg
test
pushf
inc
and
and
fstpl
scas
add
cmp
aaa
sbb
or
jb
mov
out
cld
push
and
and
jmp
ds
andl
cmpsl
mov
dec
or
movsl
and
xchg
push
mov
lcall
test
les
andb
xchg
pop
clc
test
dec
mov
int3
mov
sub
das
lcall
adc
into
daa
lret
pop
popf
jmp
and
add
mov
lea
rcrl
lods
std
mov
pushf
xor
addr16
push
fs
pop
xor
cmp
xchg
daa
push
insl
call
stos
mov
sti
out
lds
pop
cli
in
mov
ljmp
pop
ret
sbb
push
sti
rcrb
and
daa
cwtl
in
hlt
jmp
pop
push
xchg
cmc
ret
test
testl
aaa
scas
add
push
imul
movsl
into
pop
mov
int3
jo
mov
pop
ljmp
fiaddl
aaa
adc
inc
inc
fistpl
cltd
std
push
mov
cld
pop
dec
dec
into
add
rcr
push
jb
mov
loop
lea
sub
mov
int
push
les
ja
rolb
dec
in
pop
push
sarl
movsb
xchg
addb
and
pusha
dec
push
in
xchg
mov
mov
stos
pop
sbb
mov
pop
ss
xor
das
pop
push
mov
xchg
movsl
and
mov
loop
out
ljmp
jge
inc
in
adc
dec
movsl
mov
xchg
push
cmp
xchg
notl
push
dec
into
pusha
push
fisttpll
pushf
adc
sahf
pusha
enter
das
add
insb
out
out
sub
adc
or
loopne
call
push
arpl
test
out
lret
dec
lcall
adc
mov
cmc
popf
xchg
imul
or
mov
jae
fisubl
out
pop
push
jo
cltd
imull
aas
xchg
enter
loope
push
inc
cli
pop
jmp
mov
out
mov
rcr
push
adc
jg
lret
fnsave
sub
xchg
xor
mov
inc
shlb
int
enter
test
jmp
movsl
or
or
and
and
gs
sub
mov
in
adc
xor
cltd
stos
pop
add
xchg
repnz
push
rcll
xchg
adc
pop
push
popa
add
je
out
add
pop
mov
xlat
push
mov
stos
jp
xchg
es
cmp
cmpsb
or
cmp
int3
push
stos
stos
mov
popa
jmp
call
mov
xor
sbb
ret
out
xchg
adcl
pop
jb
lret
daa
js
add
dec
cwtl
mov
push
or
or
stos
and
arpl
out
call
neg
shrb
loope
adc
pop
std
imul
inc
ds
int
dec
insl
pusha
cltd
cltd
jo
lcall
lret
adc
hlt
les
cmp
mov
cmc
mov
inc
out
pop
popf
push
mov
sbb
pop
test
shll
xchg
lods
outsl
test
inc
mov
pop
mov
es
jecxz
lret
test
fidivl
jg
adc
push
mov
add
pop
aad
fcomps
inc
pop
outsl
xor
sbb
xchg
sub
int
gs
lods
insl
mov
out
mov
mov
aad
xchg
cwtl
test
adc
fcoms
push
mov
jle
sub
sahf
iret
or
sbb
gs
aas
xor
or
movsb
xlat
xchg
pop
into
inc
movzbl
bound
xor
xor
cmpsb
xchg
adcl
mov
adc
and
pop
loope
cltd
insl
fs
add
and
popf
divl
or
aad
mov
mov
dec
push
jne
fmuls
fidivl
loop
cltd
push
cmp
push
pop
push
and
mov
adc
lock
aam
movb
mov
enter
vminsd
stos
and
hlt
mov
test
hlt
mov
sbb
dec
stc
pop
hlt
fildl
lods
and
mov
adc
push
xchg
xchg
leave
push
xor
adc
negb
sub
cs
in
out
mov
jbe
push
fmuls
or
iret
shl
cmp
pop
pusha
push
pop
out
test
mov
out
bound
xchg
cmpsb
cwtl
scas
sub
mov
adc
or
cmp
iret
imul
rcr
fnstsw
jnp
mov
add
mov
cmpsb
cmp
xor
call
xchg
jle
push
call
and
fs
push
arpl
fisttpll
mov
out
arpl
nop
jp
fldenv
es
aad
xchg
jae
xchg
xor
mov
cmc
mov
sti
leave
xchg
ret
shr
jno
inc
or
pop
ror
xor
inc
xchg
adc
daa
data16
pop
out
pop
andb
jmp
ss
cmp
mov
xlat
subb
imul
push
pop
jge
xor
mov
and
sarb
pop
inc
jp
dec
test
fs
ret
daa
rclb
sub
cli
inc
push
pop
and
mov
stos
add
jae
outsb
inc
fcompl
mov
mov
ret
or
stos
mov
fdivs
fstpl
pop
mov
xchg
sub
sub
in
bound
add
ror
in
out
cs
dec
aam
xor
cld
inc
mov
aam
scas
adcb
jmp
stos
mov
notb
add
add
in
pause
push
out
cmp
or
popf
sub
adc
add
mov
xor
jecxz
lods
icebp
fists
loop
rcrl
mov
or
out
push
xchg
jge
cli
lcall
jno
jbe
fistpl
push
je
push
imul
push
push
fbld
je
out
pop
das
in
les
xor
or
mov
mov
je
movsl
dec
test
inc
ja
xor
pop
dec
push
and
pop
dec
and
push
lret
lods
mov
push
les
pusha
outsb
rcl
cmp
pop
jb
push
ljmp
push
movsl
insb
jae
jecxz
loop
mov
out
repz
idivl
jecxz
or
or
sub
jmp
sahf
movsl
mov
xlat
call
xor
int3
cli
inc
mov
pop
gs
popa
std
pop
mov
jnp
hlt
imul
dec
adc
mov
pop
lahf
cmp
or
movsl
jae
lahf
jl
and
mov
rcrl
fwait
add
pop
jle
jle
inc
xor
mov
inc
outsb
stos
cmp
test
imul
push
cmp
xchg
push
stc
xchg
inc
icebp
les
push
xchg
in
cmp
sti
out
mov
mov
ror
adc
adc
or
lret
dec
xchg
mov
push
dec
loopne
and
jecxz
loopne
test
stc
shrl
inc
jo
sar
pop
pop
mov
data16
std
sbb
xchg
nop
jle
mov
outsl
inc
adc
dec
int3
pushf
je
enter
pop
inc
out
pop
pop
push
cli
pop
jecxz
ret
jne
push
out
push
sbb
sbb
mov
lret
dec
aad
in
das
adc
fs
inc
outsl
cmc
mov
dec
or
sub
adc
xlat
mov
data16
pop
adc
push
test
cmpsl
sbb
push
push
sbb
sbb
adc
push
ret
mov
push
cmp
inc
jb
jb
sbb
pop
lods
and
cmc
loopne
loopne
aad
and
xor
jge
test
jp
sub
mov
outsl
sub
adc
lcall
daa
fnstsw
scas
ss
mov
out
popf
fists
bound
aas
xchg
scas
gs
imul
xchg
aas
test
push
scas
cmp
pushf
cltd
rorb
cltd
sti
insl
aad
mov
out
xchg
mov
or
addr16
pusha
sbb
add
fcomp
scas
lret
and
xchg
mov
inc
loopne
out
mov
cmp
xor
mov
imul
outsb
andl
std
push
xor
fwait
pop
inc
int3
and
xchg
sub
pop
test
sub
mov
rol
lcall
mov
pop
dec
mov
and
sti
and
into
popf
adc
push
adc
dec
pop
cmp
or
jg
ret
add
jne
push
mov
cmpsb
inc
aad
cltd
and
mov
inc
ja
int
dec
cld
orl
sub
out
imul
icebp
sbb
mov
sub
xchg
lea
add
int3
jne
mov
mov
fwait
dec
loope
jg
cmp
mov
dec
lock
mov
or
pop
add
test
test
mov
mov
mov
jl
mov
mov
lock
hlt
arpl
xchg
dec
cmp
jg
inc
popa
cmp
xchg
push
adc
add
mov
out
adc
arpl
jecxz
stos
adc
stos
imul
fadd
sti
add
pop
adc
sub
sbb
in
arpl
xor
dec
pop
das
mov
sahf
js
xor
xor
sub
dec
and
mov
fwait
cmp
jg
ret
mov
inc
pop
test
xchg
test
aam
stos
out
aam
outsb
data16
outsl
xlat
cmp
mov
rorl
std
pop
cmc
mov
mov
test
push
ffreep
xor
scas
push
leave
ret
and
pusha
push
outsb
lea
mulb
lock
div
mov
rclb
lea
nop
pop
aad
adc
test
clc
repnz
and
mov
mov
add
lods
cmp
adc
xor
aaa
aaa
jb
movsl
mov
shrb
push
mov
xchg
push
xchg
xchg
aam
pop
das
dec
ja
fmull
mov
xchg
into
inc
aas
add
addr16
mov
mov
and
push
and
test
bound
mov
and
xchg
inc
in
cwtl
pop
xchg
push
xchg
mov
jmp
push
cmpsl
in
push
mov
gs
xchg
push
fistl
leave
loopne
pop
movzwl
fimuls
xchg
fldz
popf
ret
jbe
sahf
lock
xor
dec
xchg
aad
mov
add
and
adc
std
lock
cmp
mov
mov
lea
roll
sub
hlt
out
jnp
test
xor
or
orl
mov
lcall
outsl
inc
int
lds
enter
es
mov
int
into
test
adc
test
pop
sete
inc
gs
fisubrl
jb
jge
ss
stos
adcl
mov
pop
dec
es
cltd
cmp
loop
mulb
pop
dec
and
add
sti
jae
pop
in
into
icebp
iret
mov
jno
frstpm(287
pop
push
mov
sbb
push
cmpsb
push
fistps
sbb
stos
add
mov
push
lcall
xor
leave
jmp
and
add
adc
cmp
push
push
fistps
pushf
jbe
jg
lock
mov
pop
in
aaa
imul
jmp
ss
mov
sub
daa
dec
lret
or
or
loop
shrl
mov
push
fnstsw
testl
pushf
pushf
in
leave
test
pop
inc
xlat
mov
das
fwait
adc
jg
arpl
mov
in
ret
dec
mov
pusha
push
jge
dec
out
mov
inc
pop
cltd
cmp
inc
nop
lret
lock
inc
mov
push
std
and
mov
sub
ds
into
cli
mov
cs
arpl
jl
mov
inc
jae
rorb
adc
dec
clc
jp
inc
mov
rcrl
ss
mov
xchg
sbb
aaa
mov
inc
loope
mull
imul
sub
adc
sub
and
daa
jb
pop
cmpsl
fistps
shrb
pop
cmp
sub
leave
out
push
es
int
loope
xchg
test
cmpl
lock
sbb
pop
xor
or
jecxz
int3
cmp
lea
and
fisubl
add
dec
or
and
jle
jl
dec
pop
cmp
stos
ja
pop
sbb
push
xchg
loope
sub
sbb
clc
iret
pop
and
notb
dec
andl
stc
data16
test
or
mov
aas
mov
aam
adc
std
loop
fldcw
ljmp
mov
fnsave
aaa
sbb
xor
fwait
leave
jecxz
divb
dec
or
je
mov
insl
sahf
pop
xchg
dec
and
push
inc
jae
mov
fdivrp
out
mov
push
stos
movsl
mov
aad
inc
cmp
test
jae
leave
mov
cmp
js
or
ljmp
mov
pop
xchg
outsb
sub
jnp
push
test
inc
and
pushf
cltd
dec
ja
cmp
sub
and
jbe
or
hlt
jle
adc
in
sbb
stos
nop
mov
hlt
in
push
xchg
data16
int
pop
aad
jo
std
outsb
mov
dec
cltd
xchg
mov
insl
addr16
in
cmc
sarb
out
aaa
cmp
pusha
mull
lret
or
lds
mov
inc
mov
fmul
pusha
push
sbb
test
jp
sti
and
in
icebp
jmp
sahf
lahf
leave
je
pop
jecxz
inc
out
int
cli
adc
shll
push
int
jne
pop
mov
psrlq
cld
xchg
inc
inc
cmp
mov
jns
adc
or
mov
cmp
movsb
loopne,pt
jae
pop
adc
das
insb
push
nop
add
iret
aam
gs
cld
repz
hlt
mov
cld
pop
icebp
lcall
insb
clc
mov
xchg
cltd
iret
pop
fs
mov
repnz
sub
out
inc
rcrb
mov
xor
fwait
sbb
fs
mov
ljmp
jae
jecxz
adc
cmpsl
pop
movsb
xchg
mov
les
adc
inc
call
push
mov
ret
pop
into
pop
mov
mov
lods
shrl
lods
fidivrs
dec
adc
and
mov
leave
dec
mov
test
xchg
mov
adc
mov
xor
push
xlat
and
sar
mov
lock
clc
and
dec
and
mulb
jo
ret
fnstcw
sub
ret
and
cld
cmp
jge
aam
dec
xchg
add
in
add
mov
and
dec
arpl
testb
sahf
xabort
dec
or
and
lock
adc
insl
js
bound
mov
xor
lahf
insb
outsl
push
mov
inc
xchg
mov
xor
mov
cmc
hlt
adc
sub
scas
lahf
sbb
mov
push
mov
push
inc
dec
mov
pushf
dec
push
pop
jmp
bound
out
xor
xchg
jp
movsb
mov
out
std
sarl
sub
aas
push
cwtl
movsl
cmpl
or
push
in
fs
jae
adc
enter
dec
sar
into
in
lcall
sbb
jecxz
dec
push
popa
mov
lds
mov
flds
push
push
mov
pushf
pop
into
mov
mov
jg
mov
dec
lahf
hlt
adc
imul
pop
push
mov
mov
mov
mov
jg
ret
stos
out
sub
mov
lds
inc
aaa
push
mov
sbb
mov
lcall
int
xchg
xchg
jbe
scas
enter
imul
cmp
decl
je
pop
push
ja
clc
in
jae
mov
push
stos
jg
cmp
cld
xor
sbb
add
int3
sub
test
enter
ror
sub
mov
rol
lds
sub
leave
insl
sti
rcrb
clc
scas
adc
lret
lods
add
sbb
mov
xchg
cmp
mov
mov
pop
and
aad
mov
xchg
sbb
in
add
xor
dec
ja
xchg
or
mov
jno
je
test
push
xchg
shll
leave
pusha
imul
iret
in
test
sti
icebp
mov
dec
insl
xor
pop
pop
in
mov
lods
data16
insl
jb
int3
data16
rorl
ds
aaa
outsl
in
pop
xchg
scas
inc
adc
cmpsb
jo
lret
mov
out
jo
dec
ja
and
mov
inc
or
hlt
repz
jmp
sbb
inc
scas
jg
gs
lods
jb
les
xor
gs
and
lods
add
arpl
xchg
mov
shrl
ds
push
lret
out
sbb
pop
insb
jb
pop
sub
mov
shll
mov
mov
push
and
sbb
stc
add
stc
mov
scas
fmul
xchg
shlb
push
mov
adc
mov
lods
lock
adc
mov
sahf
stc
pop
in
rol
push
clc
mov
pop
dec
sbb
je
lea
aaa
insl
lea
arpl
sbb
xor
pop
lahf
pop
add
sbbb
out
imul
cmp
pop
loope
dec
jns
out
insl
push
js
dec
dec
inc
fwait
xchg
mov
popa
lret
dec
dec
aam
pop
roll
adcb
mov
push
xlat
outsb
ss
icebp
mov
sub
pop
subb
add
ss
rclb
test
iret
mov
inc
js
xchg
jmp
mov
jns
inc
jns
xchg
cld
lcall
in
or
imul
sbb
std
movsb
shr
mov
xor
mov
mov
pop
and
lahf
mov
dec
xchg
lret
aas
stos
popa
or
sbb
aas
mov
repnz
mov
sub
adc
or
rorb
xchg
pop
iret
push
out
sub
aaa
pusha
xchg
push
in
aad
lcall
add
mov
dec
test
mov
pop
sarl
insl
and
push
rol
lods
loop
push
cmp
pop
xor
ror
inc
mov
adc
ja
push
pusha
repnz
jbe
imul
push
xchg
fucomip
sar
mov
mov
sbb
xor
sarb
test
jne
movsb
xchg
les
dec
or
and
cs
adc
das
cltd
xchg
in
cmc
std
or
jno
popf
xor
mov
pop
adc
push
test
and
leave
xchg
adc
cmp
test
inc
mov
mov
pop
push
xchg
inc
bound
pop
add
ret
dec
lods
lds
lret
aas
fnsave
dec
mov
cmp
push
mov
fstps
and
pusha
movl
sub
push
add
sub
xor
lcall
sub
out
xchg
out
pop
mov
fdivr
cld
ficoml
scas
sbb
sbb
inc
imul
in
jnp
sub
pushf
ret
xor
rcrb
iret
mov
mov
movsb
jle
lcall
cmpsl
hlt
mov
stos
push
rcrl
nop
pop
mov
js
daa
mov
insb
adc
xor
mov
jmp
sub
jg
dec
sub
sbb
fidivrl
out
insl
inc
mov
call
inc
push
push
sbb
add
inc
sbb
into
stc
inc
orb
sahf
lret
fldt
mov
icebp
mov
jne
shll
aaa
cmp
cmpsl
test
sbb
xchg
push
jle
into
test
mov
pop
jl
mov
pop
sub
int
mov
call
inc
mov
sub
push
and
dec
mov
xchg
shr
xor
je
pop
lods
insb
mov
jecxz
test
adc
xlat
ss
repnz
das
scas
jmp
cmp
outsl
sbb
lock
inc
sbb
push
mov
and
add
pop
pop
mov
loope
sahf
push
or
scas
xor
je
cmpsb
mov
dec
cmpsl
or
imul
jnp
loop
inc
testl
jb
push
repnz
jns
ffreep
push
adc
les
mov
imul
cld
dec
movsb
lock
sub
movsl
and
xchg
cmpsl
std
and
leave
push
mov
or
rcll
fstps
and
lods
js
mov
in
mov
daa
pop
in
jbe
xor
data16
add
or
fsub
dec
scas
stos
aad
lock
ja
lods
fildll
push
sbb
js
jns
mov
add
mov
adc
dec
or
or
and
push
shrl
mov
scas
mov
jg
jnp
stos
sub
test
lret
cmp
cmpb
push
mov
imul
cli
mov
fwait
jecxz
daa
mov
pop
mov
or
sub
in
popf
jge
push
loope
sub
xor
xor
js
daa
aas
hlt
mov
mov
push
or
std
mov
fdivl
xor
stos
rorl
jg
cmp
or
mov
icebp
mov
in
out
lcall
push
lret
xchg
adc
arpl
xchg
push
xor
insb
inc
or
lock
cmc
lahf
sbb
push
cli
in
movsb
dec
push
in
cltd
lds
and
mov
bound
in
jne
sub
fadds
and
xor
push
push
add
adc
pushf
shrb
lret
mov
push
lahf
xchg
mov
lds
int3
push
dec
mov
push
in
bound
test
aam
mov
lods
push
movq
test
and
jmp
int3
inc
cmp
mov
cli
jg
in
xor
in
arpl
inc
enter
add
shlb
mov
push
push
shrb
movsb
in
inc
push
por
cld
xchg
sub
mov
sbb
shrl
cld
pop
in
out
aad
sub
fbld
mov
mov
push
cwtl
add
jnp
or
mov
push
int
push
mov
mov
jl
mov
push
jle
clc
cmp
or
fcmovnu
mov
pop
in
data16
xchg
addr16
dec
lods
movsb
js
emms
rcrl
mov
cmp
pop
stc
filds
push
gs
dec
push
mov
sub
cmp
repnz
pop
mov
xor
xchg
xor
or
ja
movsl
xchg
xlat
cmp
mov
fs
dec
jge
or
shlb
jmp
xor
movsl
dec
outsl
sti
pop
xor
repz
add
in
lea
lods
outsl
xchg
fwait
jg
add
out
or
hlt
mov
add
clc
pop
mov
adc
adc
sub
addl
sub
mov
xchg
ljmp
add
mov
lds
leave
inc
cltd
das
mov
push
sub
pop
and
xchg
mov
mov
mov
rol
inc
xchg
in
stos
sti
div
adc
es
mov
jae
sti
jg
inc
scas
loopne
cmp
push
cmpb
push
pop
mov
cs
mov
mov
shl
aad
js
fldl
aad
or
xor
or
stos
inc
repnz
les
lahf
fsubs
mov
dec
push
jge
imul
ljmp
jle
mov
or
lods
adc
xor
lock
sbb
cmp
sahf
mov
js
push
stos
addr16
fstp
shrl
add
aam
mov
mov
or
jno
jle
xchg
lcall
mov
mov
mov
ds
in
pop
inc
add
ficompl
test
sbb
lcall
out
mov
or
gs
scas
testl
lods
cmp
shl
leave
outsl
sub
imul
push
dec
pop
pop
mov
lahf
dec
hlt
sbb
pop
jo
or
repz
sbb
int
mov
or
mov
cs
popa
adc
push
add
inc
inc
add
rorb
test
or
jno
cmp
dec
xor
mov
pop
js
adc
mov
fisttpl
cs
xchg
arpl
leave
mov
cmp
sbb
adc
lods
paddsw
xor
mov
jnp
mov
inc
jge
cld
xchg
jecxz
lds
cli
push
fistps
mov
dec
jecxz
pop
sub
scas
mov
out
mov
ret
jg
outsb
cs
ret
xchg
xor
mov
add
inc
xchg
loope
insb
push
outsl
inc
repnz
arpl
popf
in
mov
mov
out
cmp
cmp
int3
mov
sahf
xor
jmp
mov
repnz
sub
sbb
int3
iret
inc
xor
mov
clc
xchg
push
cmc
jge
pop
ficompl
mov
fnsave
mov
sub
std
adc
adc
add
sbb
sub
test
bound
stc
packsswb
popf
mov
lahf
or
cmc
bound
and
and
bound
add
mov
xor
and
mov
xchg
pop
and
push
cwtl
sub
outsb
arpl
xor
repz
cltd
mov
nop
sbb
mov
stos
mov
test
adc
arpl
stos
int
mov
sub
push
js
fsubl
lahf
adc
punpcklwd
ficompl
sti
adc
inc
adc
popa
xlat
push
mov
aam
nop
bound
dec
lock
and
outsb
ror
push
loopne
insb
mov
push
cmp
lea
ror
sbb
sub
or
in
dec
xchg
outsl
pop
sub
push
mov
inc
loop
dec
out
stos
push
je
sbb
jl
out
test
scas
hlt
jns
push
mov
push
mov
pop
adc
out
orb
mov
sbb
aas
mov
adc
call
or
fsubs
xor
and
dec
sarb
push
orb
out
xor
out
fwait
rcrl
lock
pop
pop
cld
vmovupd
inc
add
outsl
inc
jb
cltd
xor
jnp
mov
mov
out
pop
test
push
push
roll
jne
inc
push
pop
fwait
dec
xor
iret
xchg
jmp
es
lods
and
and
ljmp
jo
movsb
lds
push
rclb
pop
mov
xor
cmpsb
stc
bound
mov
sbb
fmul
icebp
xchg
push
stc
adc
xor
adc
xchg
mov
lds
clc
mov
push
cmp
dec
jl
icebp
cmp
js
sub
flds
or
inc
shll
mov
or
xorb
or
pop
cmpsl
jg
and
sub
cmc
divl
aad
mov
or
dec
xor
inc
xorb
popf
cmp
lahf
int3
sbb
pushf
sub
lcall
pop
adc
inc
jmp
loop
ret
xor
daa
leave
nop
xchg
push
scas
aaa
inc
jle
xor
cld
test
lahf
ljmp
xor
mov
push
or
aaa
push
out
jb
pop
test
lret
stos
xchg
push
cli
inc
call
orb
add
repnz
mov
and
mov
jle
lds
jb
pop
divb
mov
cmp
clc
pop
add
pop
fadds
in
dec
jno
mov
shl
pop
es
fs
add
mov
out
psubw
hlt
int
or
clc
loope
cwtl
jmp
sub
fidivrs
stos
mov
and
mov
scas
repz
dec
adc
pop
ja
push
rolb
lcall
mov
pop
cmp
push
addr16
xchg
cmp
fidivrs
aad
pop
lds
jb
mov
ljmp
lcall
inc
adc
inc
fildl
mov
sbb
daa
cmpsb
push
sbb
mov
and
insb
cmp
fsts
xchg
jecxz
push
mov
jle
and
popf
int3
test
mov
adc
xchg
mov
loope
in
cmp
pop
adc
cltd
dec
clc
bound
shrl
imul
cltd
xor
prefetch
or
mov
leave
jae
sti
int3
out
inc
movsb
lret
push
jl
js
lods
mov
sub
enter
int3
std
outsl
pop
cmp
insb
pusha
adc
adc
lock
jge
sti
adc
int3
jo
aad
jae
inc
adc
sti
iret
mov
jo
xchg
cmp
scas
cmc
test
add
iret
sbb
pop
ror
pop
fdivrl
sub
test
sub
cmp
sbb
or
sub
shll
fisubrs
addr16
xchg
pusha
filds
call
sarb
cmp
xchg
mov
lret
cmc
leave
daa
cmp
push
iret
out
adc
enter
mov
sub
fadds
cmp
clc
outsl
cmp
iret
bnd
iret
push
popa
mov
repnz
shll
daa
adc
scas
das
xchg
xchg
jle
and
repz
mov
lret
inc
imul
xor
sbb
fsubl
add
jmp
jbe
bound
sbb
pushf
fstps
cmp
adc
mov
cmp
push
scas
fs
in
mov
inc
mov
cmp
xor
xchg
int
pop
push
popf
push
mov
push
mov
mov
fldenv
aam
and
add
mov
loop
jae
loope
sub
pop
dec
xor
mov
pop
fstps
jmp
add
movsb
add
lret
bnd
ja
shl
aad
sbb
mov
jbe
sti
addb
dec
int3
test
push
hlt
jae
pop
lds
mov
popa
xchg
imul
call
jbe
jl
imul
or
sbb
fsubr
hlt
lret
outsl
and
sub
inc
jle
insb
sub
mov
lods
mov
lds
je
repnz
xchg
pop
mov
mov
cmp
cli
inc
xor
ficoms
cmpsl
aaa
fsubrp
xchg
scas
sub
gs
push
xchg
je
jl
pop
xchg
lahf
aam
mov
mov
rolb
ret
test
lahf
andl
arpl
mov
push
lcall
icebp
xchg
std
enter
loope
pop
loopne
adc
xchg
data16
aas
dec
jl
and
cmp
add
ds
pop
add
mov
mov
andl
jae
aas
sub
ss
lea
out
je
cltd
cmp
test
mov
adc
idivb
mov
jo
out
push
push
mov
loope
cmp
movsl
arpl
loopne
mov
mov
lahf
cltd
xchg
xor
dec
inc
mov
int
test
cli
cwtl
jae
lea
aas
or
xor
pop
push
mov
dec
pop
push
test
nop
loope
lret
mov
subl
mov
fwait
test
fcoml
or
push
push
dec
daa
add
mov
pop
cwtl
ds
rcrb
jno
or
jp
add
incl
mov
ljmp
inc
daa
push
inc
or
jnp
ffree
sahf
sub
popf
out
jno
pop
and
ja
pushf
andl
mov
ror
lea
mov
pop
pop
mov
jecxz
ds
pop
daa
rorl
jb
test
enter
or
push
or
adc
sbb
jl
imul
add
addr16
fildll
cmp
stos
loopne
inc
xchg
fadds
mov
mov
cmc
add
sub
out
mov
jg
cli
sti
clc
and
insb
data16
out
sbb
pop
fldl
scas
inc
pop
je
test
sbbb
pop
insb
and
xor
add
outsb
adc
pop
fnstsw
faddl
jg
and
ret
add
cmp
push
gs
cmp
int
and
inc
mov
aas
jnp
out
xchg
popa
in
rcll
ds
es
mov
sub
xor
push
push
xor
xchg
push
and
mov
pop
cmp
or
xchg
pusha
pop
jge
mov
push
adc
rol
popf
xchg
subl
bound
dec
and
push
adc
dec
or
shr
jb
push
sbb
sti
jg
jnp
mov
shlb
jmp
shlb
orl
mov
cmp
jge
test
movsl
mov
xchg
sub
lret
adc
out
jmp
cld
mov
ret
mov
adc
movsb
mov
popf
mov
jl
add
aam
pop
pop
adc
mov
arpl
pop
popf
xor
repnz
xor
jp
mov
cli
and
stos
push
xchg
adc
push
jmp
adc
shll
in
sbb
push
xor
xchg
fdivrl
mov
fs
pop
jmp
stos
pop
sbb
push
stc
mov
sub
sub
mov
sub
or
ret
or
ds
pop
pop
bound
push
push
pop
jmp
pop
push
sti
jne
ja
mov
inc
sbb
xor
inc
sbb
sub
arpl
and
in
mov
inc
add
push
pushf
stos
popf
adc
pop
push
or
jg
add
xchg
popl
pop
fisubl
pop
in
mov
xchg
inc
aas
gs
dec
dec
push
loop
outsb
push
sbb
jmp
sti
xchg
and
push
sub
cmp
movsb
cli
push
push
and
xor
push
mov
and
pushf
push
mov
adc
sub
sbbl
stc
repnz
dec
fstps
cmp
popf
mov
push
shrb
in
mov
cmp
stc
mov
scas
push
sahf
xchg
scas
aas
pand
lahf
mov
push
out
ret
fnstenv
mov
mov
sbb
movsl
pop
inc
repnz
or
es
jge
fidivrs
mov
cltd
jmp
and
sub
mov
pop
dec
icebp
iret
out
or
sub
nop
fcmovbe
cmc
xlat
bound
cltd
test
ret
push
test
movsl
lods
into
lock
xchg
aad
mov
jmp
dec
pop
movsb
cmpsb
or
testb
clc
pop
or
fstpt
sbb
jno
fwait
cmp
push
pop
push
into
mov
in
jg
idivb
xchg
mov
sub
cmp
cmp
sub
inc
pop
xchg
cmp
lods
lock
push
push
push
addl
inc
xor
mov
jmp
nop
cmpb
ljmp
or
cmp
mov
jge
sub
dec
xlat
push
bound
inc
pop
mov
pop
test
push
sar
sbb
cmpsb
add
out
sub
pop
leave
add
xor
cltd
in
jg
pop
sahf
jb
movsl
ss
adc
xor
and
xchg
inc
push
adc
mov
adc
pop
lods
cmc
into
mov
rclb
mov
data16
push
repz
aam
incl
outsb
lds
push
pop
xor
adc
test
int3
cmpsb
sub
in
mov
cmpsb
fs
add
jo
inc
test
loope
jnp
sti
fs
rolb
fbld
inc
add
adc
push
loop
movl
jmp
scas
ret
mov
cmp
arpl
gs
mov
mov
or
xchg
pop
into
pop
add
xchg
shl
xor
adc
fbld
mov
into
std
loopne
jbe
clc
xor
inc
mov
push
test
mov
lock
loopne
cmp
loop
fs
scas
xor
jbe
xchg
lret
sti
lds
dec
mov
sbb
push
pop
fsub
daa
je
outsb
fiadds
cmp
and
sub
nop
test
jb
or
das
sub
and
test
mov
cmp
or
stos
rcll
popa
add
das
add
ja
cmpsb
insl
add
mov
xchg
mov
push
stc
push
push
pop
push
ror
sub
pop
les
pop
push
fisubrl
xor
std
lds
ret
xor
or
push
andb
orb
adc
stos
lds
scas
pop
pop
pop
stos
lods
mov
fadd
mov
or
std
xchg
dec
xchg
cmpsl
dec
iret
repz
cld
out
xchg
cmp
xchg
jecxz
pop
mov
jp
in
push
and
icebp
fwait
scas
add
rol
or
loope
data16
out
hlt
sarb
sbbl
clc
dec
mov
repnz
int
add
adc
ficoml
arpl
adc
adc
xor
loop
jecxz
jmp
xchg
outsb
aas
cld
or
cmc
push
mov
fwait
divb
mov
inc
xchg
test
push
xchg
or
sbb
sub
fstpl
push
mov
dec
icebp
push
cmpl
loope
aad
xchg
jb
push
hlt
into
outsl
xchg
mov
pop
xor
adc
lea
push
je
push
test
in
movsb
push
inc
xchg
mov
and
dec
in
icebp
sbb
dec
sub
movsb
sub
inc
dec
push
push
test
dec
shrb
mov
gs
and
rorl
mov
lds
js
inc
mov
leave
clc
jnp
push
pop
fs
and
mov
sbb
push
into
pushf
and
lcall
and
and
xchg
movsl
jne
into
fisttps
or
hlt
add
rolb
ror
xor
push
xor
and
clc
adc
rolb
data16
aad
daa
inc
adc
lods
ds
mov
sub
inc
call
jne
xchg
aaa
add
fimuls
xorb
xchg
mov
mov
mov
cmp
insb
mov
dec
mov
push
cmp
ljmp
popa
cmp
add
push
lods
fnstsw
add
cltd
jb
lea
fistpll
das
loope
mov
subb
jbe
stos
add
mov
inc
shll
xor
sahf
fcmovnb
cmp
jb
movsl
cmp
popf
pop
sbb
xchg
adc
loope
fnsave
std
xlat
or
or
xor
cmpsb
lods
ja
cmp
fildl
push
div
int
mov
add
xchg
loope
xor
sub
pop
dec
cld
pop
or
fsubrs
or
jne
or
dec
or
cwtl
in
das
stc
test
scas
adc
in
or
movsl
dec
ret
and
cmp
dec
sbb
and
int3
pop
adc
mov
xchg
mov
daa
out
pushf
rol
in
shll
dec
mov
jmp
inc
and
fsubs
shlb
test
loop
jns
je
inc
mov
pop
ret
jo
ror
push
push
push
lret
and
stos
jne
push
dec
cmp
mov
dec
gs
jne
sti
dec
mov
jle
rclb
insb
lea
jnp
sbb
jmp
push
fwait
std
and
cli
fistl
push
push
xlat
cmp
xorb
mov
ret
inc
stos
adc
inc
and
out
shl
fcomps
repz
dec
sbb
lock
and
xlat
sub
lds
pop
xchg
lds
adc
ljmp
mov
test
mov
sub
mov
push
mov
aam
mov
lods
dec
adc
call
rorl
lock
adc
in
mov
xor
dec
mov
pop
xchg
rcll
std
xor
mov
mov
jnp
cmc
iret
loope
imul
shr
sbb
adc
loopne
out
mov
or
mov
int3
out
pop
rcll
ret
or
inc
inc
mov
mov
adcl
xchg
pop
dec
sbb
or
mov
xchg
in
jp
das
cmc
call
jge
cmc
push
mov
cmc
inc
daa
pop
outsb
inc
scas
stos
dec
xchg
dec
fxch
das
shll
nop
cmc
pop
cmp
mov
cli
popa
cmpl
test
in
in
xor
xlat
loope
pop
scas
in
sar
mov
and
ret
push
inc
std
or
mov
inc
shrb
push
ja
xor
mov
sti
lret
and
xor
adc
out
daa
es
jge
jae
jnp
dec
jge
stc
sahf
add
mov
addr16
aad
gs
push
inc
lods
xor
adc
addr16
aad
pop
cmpsl
lcall
ds
adc
aad
cli
ja
cmp
subb
push
lods
adc
adc
jmp
adc
jecxz
loope
gs
adc
sbb
cli
xchg
xchg
lock
xchg
test
push
movsl
mov
iret
jg
mov
fcmovbe
cld
mov
sbb
pop
pop
push
scas
pop
cmp
arpl
xorl
push
jb
dec
lods
jmp
mov
mov
jb
mov
out
mov
cmp
lock
adc
fidivs
loopne
cmp
adc
pop
push
movsl
stos
imulb
add
jl
push
bound
dec
shrl
pusha
enter
cli
xor
push
mov
inc
out
push
aad
bound
shl
or
inc
sahf
sub
outsb
pusha
sub
arpl
das
or
adc
dec
add
pop
arpl
mov
sub
sub
in
or
mov
insb
xchg
sarl
sbbl
sti
ror
sbb
fwait
push
test
aad
cld
pop
or
dec
cmp
gs
dec
loopne
sbb
xchg
lods
lock
inc
sbb
mov
cmpsl
aam
aad
pop
stos
scas
popf
mov
jmp
xor
out
jp
push
and
xchg
push
jge
outsb
or
inc
popf
test
daa
repz
fisttps
xorb
cs
in
fnsave
jp
cmp
arpl
pop
jecxz
mov
ret
loope
movl
pop
pop
leavew
xchg
inc
jmp
faddp
sbbl
imul
fsubrs
cmp
in
xchg
fmull
insb
sti
xor
jg
jbe
sub
fwait
rorl
xlat
dec
clc
movsl
popl
xor
hlt
mov
loope
stos
jbe
enter
xchg
inc
jb
adc
jge
lds
repz
push
add
cli
popf
in
inc
movsl
out
mov
jmp
mov
int
inc
jg
dec
fcomip
pop
add
test
cmp
mov
or
mov
outsl
dec
outsl
jnp
ja
in
dec
lret
das
js
negb
aam
inc
testb
aas
out
outsl
and
cmpsl
pop
mov
push
add
xchg
into
pop
xchg
loope
mov
imul
cld
push
je
adc
push
outsl
xchg
push
jl
xchg
mov
cmp
stos
shrb
mov
mov
jecxz
mov
mov
sub
imul
xchg
hlt
insb
mov
repnz
cltd
mov
scas
xor
imull
jo
mov
sub
dec
dec
inc
sti
and
aaa
ffree
sar
mov
lahf
sbb
adc
jp
cld
push
adc
leave
cmpb
shl
xchg
dec
add
jge
in
mov
inc
push
pop
adc
push
dec
mov
nop
xchg
insl
aad
mov
jo
insl
fidivrl
and
cmp
imul
test
jb
jae
add
jl
ret
and
or
lds
adc
cmp
add
data16
jne
add
inc
pop
xchg
notb
lds
repnz
dec
mov
movsb
lods
cwtl
pop
pop
push
negb
and
fnsave
lcall
mov
and
fcmovb
push
add
push
outsb
xchg
test
fxch
int3
ret
sti
jno
mov
fnstsw
mov
lods
push
adc
aas
jge
sahf
mov
mulb
enter
adc
cmp
mov
ds
leave
fbstp
in
mov
fwait
jno
scas
shlb
aam
testb
adc
cmp
nop
inc
std
jmp
cld
xchg
pop
jecxz
adc
ret
aad
shlb
out
sbb
cmpsl
pop
pop
add
mov
pop
fisubrl
sbb
out
pushf
lea
xor
push
out
mov
popf
add
cltd
fwait
jge
pop
add
ffreep
arpl
mov
adc
cmp
push
aas
add
xor
sti
fadd
jmp
sbb
imul
mov
mov
xchg
sub
adc
jp
add
subl
mov
lcall
daa
xchg
fadds
add
insb
cmp
inc
mov
adc
cmp
cmc
ficoml
ds
pusha
pop
cmp
adc
in
into
xchg
scas
dec
stc
mov
and
call
out
sahf
pop
dec
jecxz
or
out
dec
pop
sub
sbb
xor
adc
icebp
nop
insb
js
fmulp
and
scas
mov
push
in
rcrb
test
mov
sbb
stos
and
es
fs
xchg
jmp
xchg
adc
or
jb
inc
popa
push
int
cmp
mov
bound
adc
add
out
ja
pop
mov
xchg
imul
rcrl
ficoml
int3
call
into
push
ror
fisubl
fwait
or
push
sub
inc
xor
dec
push
popa
pop
pop
test
mov
push
sub
inc
xchg
outsl
xlat
ja
loope
mov
sarl
data16
iret
dec
and
push
int3
xor
lcall
fwait
mov
faddp
push
popf
out
dec
pshufw
push
jns
test
pop
loopne
xorb
and
xor
push
nop
std
mov
fisttpll
mov
int
mov
pop
push
sub
push
std
repnz
mov
jne
jnp
lea
jo
inc
fsts
insb
out
inc
xchg
mov
push
push
out
inc
test
inc
and
jge
sub
insb
adcb
or
sub
dec
jle
cli
xor
jnp
push
xchg
xchg
xor
mov
outsb
jb
push
fcoms
sbb
shlb
adc
jne
dec
shll
stos
dec
stos
cmovnp
jno
fsts
lods
pop
pop
jo
insl
and
test
jns
sub
movsl
add
insl
pop
orb
inc
setnp
or
insb
sbb
sub
xor
dec
adc
int
in
mov
outsb
das
pop
push
mov
adc
lret
test
add
sub
and
cmp
mov
jl
loopne
movsl
inc
mov
in
je
in
ljmp
mov
xor
dec
or
leave
mov
lods
ljmp
and
push
leave
leave
xchg
cmovne
in
idivl
imul
repz
iret
shl
daa
aad
and
movsb
mov
mov
fimuls
pushf
jae
mov
loopne
jecxz
mov
sub
pop
rcll
test
insl
hlt
jbe
and
push
jg
or
imulb
mov
push
imul
jmp
lcall
dec
ret
out
sbb
push
cmp
out
pop
mov
test
in
cmp
mov
xchg
call
add
push
cmp
jns
sbb
push
jmp
mov
mov
test
cmp
or
lods
mov
sub
push
out
mov
das
pop
lods
daa
dec
jmp
mov
mov
push
jmp
daa
cmpsb
add
push
add
add
je
out
pop
dec
insb
nop
xchg
loop
mov
mov
mov
stos
or
xchg
cmp
iret
xorl
adc
cmp
negb
pop
and
cli
ret
repz
mov
addr16
mov
xorb
cmpl
inc
cmp
lea
xor
add
movsl
ljmp
shlb
cmp
mov
inc
cmp
xlat
inc
xor
mov
ja
insl
jns
mov
mov
imul
in
dec
push
aas
add
loop
xor
xchg
movsl
xchg
lcall
and
mov
nop
lea
inc
bound
cwtl
sqrtps
fsubs
jmp
sub
jecxz
adc
lock
rorl
aaa
out
cmpsl
jp
sbb
sbb
int3
push
and
xchg
lcall
arpl
es
dec
and
jg
lret
jb
leave
scas
adc
pop
mov
mov
mov
dec
hlt
inc
je
or
mov
push
aad
ficompl
pop
mov
and
and
push
pop
subps
jp
xor
mov
jge
push
mov
or
mov
adc
ret
aaa
insb
pop
les
xchg
jle
push
stos
inc
fcomps
fstps
xlat
cwtl
add
pusha
adc
xlat
out
fisubs
stos
roll
jns
jno
fcomip
mov
call
sub
push
xor
mov
adc
test
out
or
lret
cltd
and
lret
fucomp
leave
scas
imul
scas
clc
inc
out
subb
mov
or
sub
fnstenv
mov
push
mov
fs
adc
in
cmpsl
jecxz
mov
addb
bound
aaa
and
mov
lds
jns
mov
mov
aaa
inc
mov
sub
repz
dec
add
outsl
inc
jmp
lcall
data16
data16
cltd
sub
cmp
test
dec
mov
inc
movsb
jns
sub
cld
xor
xchg
push
xor
xchg
test
je
leave
jo
stc
jb
arpl
pop
inc
andb
mov
stos
cwtl
jp
jae
mov
jle
or
sahf
ljmp
je
inc
pop
ds
cmpsb
fsubrl
xchg
dec
inc
lock
and
mov
lcall
ja
lea
xor
addr16
arpl
cld
jg
sbb
pop
cmc
dec
xchg
push
into
push
aaa
sbb
fwait
and
in
xchg
jns
ret
fcomi
or
mov
loop
bound
nop
sbb
daa
notl
push
cmp
sbb
bound
sti
sbb
test
rclb
push
das
adc
js
repnz
mov
cwtl
arpl
ja,pn
or
insb
add
sub
out
sub
roll
pop
jp
or
cli
or
mov
test
rorl
and
lock
sahf
les
add
je
push
sar
arpl
sub
in
add
and
orl
mov
call
dec
dec
sbb
imul
xchg
pusha
in
pop
and
jmp
dec
push
add
jl
sahf
pop
arpl
or
in
test
dec
clc
cli
cmp
ret
dec
loop
sub
jmp
mov
les
insb
mov
mov
sarb
mov
mov
mulb
xchg
jo
stos
xchg
daa
test
mull
dec
js
mov
mov
sub
dec
mov
push
mov
bound
mov
xchg
outsb
mov
inc
xor
mov
movsb
mov
adc
repz
push
sub
cmp
cmp
push
mov
rcll
add
cmp
idivl
pop
hlt
or
push
insb
out
insb
adc
test
cmpsb
mov
xchg
ret
mov
andl
negb
cmp
mov
pop
in
push
sbb
push
repnz
out
jge
in
cmp
cmp
cltd
and
xchg
sub
loopne
push
adc
imul
inc
cld
nop
push
addb
lea
mov
push
add
mov
dec
aam
xor
in
xlat
fs
and
pop
or
sub
inc
test
aas
and
rcrl
cwtl
int
add
cld
fnsave
inc
loope
ss
jmp
or
sbb
jmp
mov
push
push
mov
hlt
sbb
mov
adc
push
test
push
mov
xchg
adc
test
inc
xor
inc
std
cmp
mov
mov
add
outsb
pop
sub
adc
and
jle
lods
sbb
push
cltd
imul
adc
sub
add
ss
scas
mov
inc
lret
sbb
jo
stos
mov
iret
dec
ljmp
inc
sub
xor
or
add
cmpsl
and
scas
push
lea
add
sub
cmp
mov
scas
mov
sub
jno
hlt
sbb
les
scas
int3
sub
add
mov
mov
pop
push
scas
lcall
dec
cwtl
or
and
out
lock
cmp
adc
imul
insb
jp
add
push
test
test
divl
adc
jns
cmc
shll
mov
jmp
mov
sahf
mov
sub
pop
movl
in
xchg
mov
push
stc
xchg
mov
aas
cs
xchg
in
or
std
cmpsb
mov
int3
gs
out
ja
rorl
xor
popf
xchg
lret
jl
and
mov
out
movsl
dec
insl
dec
leave
sub
cs
sbb
and
mov
lcall
dec
rcl
sub
nop
sub
loop
cmp
sbb
mulb
test
xchg
xchg
add
cmp
rcl
or
pop
out
notl
fadd
inc
mov
jmp
adc
jno
les
imul
rol
daa
xchg
scas
xchg
rcll
lret
pop
sbb
addr16
repz
imul
clc
mov
ret
mov
cmp
jbe
sub
ljmp
ret
mov
out
xor
xlat
es
js
hlt
push
movsl
sbb
cwtl
shll
cmp
adc
xor
fabs
cmp
ja
sub
mov
dec
jmp
lret
outsl
cmpsb
dec
add
shrl
xchg
clc
dec
sub
mov
mov
mulb
lods
adc
scas
orb
sbbb
xorl
lahf
cmp
scas
stc
loop
into
mov
jb
adc
adc
mov
movsb
adc
add
movsl
cld
addl
ja
mov
add
xchg
jp
cltd
lods
lret
sub
into
sbb
ds
dec
dec
fdivl
pop
negb
ficomps
jl
and
roll
loope
sub
fwait
rclb
fcomps
dec
ret
sub
jo
les
insl
arpl
ret
idiv
add
dec
mov
mov
pop
mov
mov
movsl
subl
add
jl
movsb
scas
adc
adc
scas
dec
lock
adcb
xchg
fistpll
or
and
test
or
sub
mov
or
jns
in
loop
movsb
pop
repnz
sti
inc
and
xchg
ficoms
sub
stos
enter
mov
xor
scas
orl
scas
sbb
push
and
dec
call
dec
and
cmp
dec
test
xchg
cmp
mov
loop
cmp
and
aaa
mov
mov
punpckhdq
pop
dec
test
jno
push
xor
dec
aad
pop
adc
pusha
xor
and
mov
mov
mov
test
dec
inc
xchg
sarb
bswap
jns
cwtl
fisubrs
xorl
xchg
jg
stos
jge
sub
lret
mov
cld
pop
ret
out
sub
cwtl
jecxz
mov
stc
outsl
xor
fisttpl
hlt
mov
out
pop
arpl
mov
roll
mov
pusha
cmp
insb
sbb
adc
dec
stos
xlat
incl
push
add
mov
outsl
ds
pusha
repnz
scas
push
rcrl
ret
repnz
xchg
push
cmp
pop
sahf
test
xchg
inc
add
jns
test
sbb
or
sbbb
pop
sbb
inc
aas
into
adc
or
mov
xchg
inc
or
pop
sub
jne
cs
addr16
jg
leave
mov
pop
mov
xchg
rorl
push
pop
push
iret
cld
lds
leave
scas
dec
iret
fcompl
movsb
jmp
xorb
in
loope
inc
jle
pop
sbb
push
fsubs
mov
push
rcr
push
pop
das
pop
hlt
xchg
jmp
push
push
insb
jl
xchg
imulb
or
in
pushf
inc
repnz
fdivrl
mov
inc
push
cmp
jne
add
rclw
mov
and
outsb
xor
fcompl
mov
sub
enter
gs
and
jnp
push
into
pusha
das
int
lret
cmp
dec
pop
repz
jne
data16
outsb
sub
xor
sub
mov
xchg
out
jg
in
lahf
lods
mov
mov
push
xchg
push
int
aas
adc
pop
incb
movsb
inc
scas
sbb
mov
dec
mov
loope
dec
dec
push
sub
icebp
jno
loop
imulb
mov
and
lret
cmpsb
test
loope
fisttpll
insl
adc
mov
push
push
ret
and
adc
js
pop
rcll
aam
sub
int
movsb
dec
jno
shll
in
push
mov
mov
cmc
sub
mov
xchg
int
push
sub
loop
idivl
clc
add
stos
dec
inc
push
mov
das
hlt
sbb
xor
or
cmp
fmuls
rolb
cwtl
jnp
outsb
lret
cld
sti
xchg
gs
sub
pusha
inc
or
and
push
inc
jg
fistpl
testb
sbb
jae
mov
and
add
pop
xchg
push
ljmp
popa
sub
sbb
aaa
outsb
add
aas
ja
xchg
mov
jno
leave
rorb
push
sub
orl
cwtl
test
and
mov
inc
cs
cld
xor
push
in
cmp
push
jno
inc
dec
and
pop
sub
pop
or
adc
add
fwait
or
cmp
adc
or
jmp
decb
call
push
jae
and
pop
mov
add
jecxz
xor
add
adc
je
pusha
loopne
adc
cld
inc
inc
lcall
sub
xlat
xor
mov
mov
jbe
ret
int3
test
and
outsb
and
or
cmpsl
or
adcb
fbstp
jmp
and
out
fistpl
cmpsl
stos
and
inc
mov
mov
push
dec
into
inc
sub
pop
pop
mov
aam
pop
mov
int3
lds
or
addl
outsl
sbb
sub
mov
mov
arpl
adc
or
sbb
lds
loopne
cmp
pop
xorl
inc
xchg
cmp
pop
lea
or
repz
and
cmpsb
sbb
into
int
mov
or
push
das
shlb
flds
pop
mov
insl
test
mov
inc
adc
js
adc
xor
push
lcall
xchg
push
sbb
cmp
nop
push
cs
push
cs
enter
xchg
aad
cmp
pop
dec
repz
push
stc
movsl
adcb
icebp
cmp
sbb
xchg
push
mov
popa
lea
int3
jne
mov
push
mov
ljmp
pop
repnz
subl
mov
out
cltd
xchg
mov
imul
xor
lahf
or
insb
es
jl
stos
jne
xchg
lds
jge
sti
lahf
xchg
ljmp
xor
sub
rclb
or
das
pop
aam
xchg
cmp
out
jl
add
push
stc
insl
xchg
xchg
jecxz
push
sbb
mov
cmp
movsl
jne
mov
jg
in
pop
popf
inc
mov
sub
ss
out
in
jnp
xor
cmp
add
ret
adc
xor
push
push
inc
fisubrs
push
dec
sub
sub
stc
push
cmpb
xor
pusha
and
jb
cmp
inc
mov
lcall
pop
std
daa
lock
iret
out
mov
adc
push
mov
push
jge
cld
les
repz
ljmp
mov
aam
inc
mov
scas
mov
jg
js
in
call
sub
enter
sub
adc
jl
aam
dec
xor
inc
int
mov
jb
sbb
mov
pop
mov
dec
or
popf
int
adc
cmpsb
les
jns
dec
scas
inc
and
ljmp
push
cmp
fstpt
out
dec
shlb
fs
clc
add
push
js
jmp
adc
mov
sbb
sbb
push
subl
lds
in
scas
sar
mov
ljmp
push
pusha
mov
inc
cli
loopne
sbb
dec
ficompl
les
test
lea
xor
cmp
xor
scas
adc
cld
adcl
imul
xchg
xchg
jnp
in
fiaddl
mov
stos
mov
test
cmp
nop
out
mov
xchg
sub
and
daa
mov
loopne
dec
aaa
mov
sub
lcall
mov
loope
pop
pop
negl
xchg
ja
jae
mov
jae
rorb
xor
inc
pusha
ljmp
sub
mov
stc
out
dec
xchg
fs
je
ficomps
pop
ss
mov
pop
pop
jmp
enter
pop
shrl
and
test
sbb
cmpsb
adc
stc
xchg
pop
add
push
pop
mov
ljmp
and
inc
aam
cmpsl
mov
or
loop
adc
mov
adc
dec
inc
sbb
xor
dec
std
lea
inc
push
mov
fidivrs
xchg
int
mov
or
ljmp
gs
inc
or
test
xor
mov
lods
add
pop
sub
rcll
cmp
dec
and
sbb
jmp
repz
out
into
loop
inc
xor
repz
xchg
hlt
push
mov
adc
nop
btr
dec
xchg
cmp
sub
jl
loope
filds
iret
addr16
xor
dec
out
sub
dec
jnp
jg
dec
in
cmpsl
lret
repnz
in
sub
adc
pop
cmpsl
fimull
mov
out
mov
fadd
mov
fnstsw
inc
pop
sarl
call
sub
stos
call
xchg
or
pop
xchg
int3
in
or
rorl
lret
xor
push
rolb
cmp
stc
lds
aas
push
mov
pop
test
dec
ror
fwait
gs
pop
leave
sbb
out
orb
icebp
mov
cmp
lock
mov
aam
cmp
push
push
bound
je
or
inc
inc
add
fwait
outsb
xchg
mov
mov
push
or
mov
adc
daa
cmp
jg
xchg
aas
lahf
mov
fimuls
aad
cmp
add
inc
jle
or
je
shlb
pop
test
jno
mov
add
scas
insb
adc
pop
out
addr16
or
xchg
imul
adc
cmp
pop
push
es
outsb
inc
das
sbb
sub
cmp
in
icebp
sar
out
je
iret
repnz
adc
jbe
insl
mov
rclb
mov
inc
loope
loopne
dec
iret
inc
and
add
pop
pusha
jmp
cmp
sbb
mov
jae
ret
icebp
ret
add
adc
jno
or
inc
mov
dec
mov
ret
divl
shll
imul
cmp
sub
repnz
pop
lds
cmp
stc
and
xchg
xchg
inc
out
cld
insl
outsb
and
popa
xchg
push
push
xor
xchg
dec
bound
xchg
adc
mov
shr
fstps
jmp
jno
inc
mov
out
out
mov
cmp
fwait
push
inc
adc
stc
xchg
addr16
cmpsl
out
gs
jbe
subl
xor
xchg
dec
mov
aas
xchg
out
gs
jno
insl
sbb
cmp
aas
cmp
imul
cmp
mov
jae
out
rcrl
mov
push
jne
scas
test
push
pop
jecxz
testl
mov
jbe
popa
rcll
popa
sub
dec
out
mov
add
orb
sbb
sbb
movsb
imul
sahf
mov
mov
sbb
loopne
inc
add
sahf
cmp
add
lods
mov
dec
xor
xchg
pop
adc
dec
lcall
movsb
lods
fidivrs
pusha
push
je
push
loop
popf
test
push
subl
and
inc
in
cmp
mov
adc
nop
daa
jbe
flds
adc
lcall
lret
movsb
shlb
dec
in
jg
iret
add
sub
add
and
sub
and
push
or
ja
add
icebp
fs
xor
jecxz
pop
test
sbb
mov
pushf
jecxz
sbb
mov
pushf
lahf
mov
jne
aas
sti
inc
test
jb
and
pop
cmp
add
inc
sub
jae
push
aaa
aad
lahf
inc
push
inc
int
push
sub
sbb
mov
iret
cs
fcompl
enter
lods
leave
mov
sbb
je
mov
xor
ljmp
xor
pop
insb
pop
or
pop
jmp
mov
mov
js
into
jmp
mov
loope
outsl
push
push
test
push
sbb
sub
inc
cltd
jg
push
mov
add
push
cmp
xlat
adc
jg
mov
js
mov
and
sbb
ja
roll
pop
out
loop
push
test
outsl
mov
jecxz
lcall
aaa
dec
mov
lods
mov
popf
xchg
mov
enter
push
fs
je
adc
jg
testl
aaa
jmp
stc
rdmsr
push
scas
xchg
aaa
es
int
mov
mov
movsl
fmuls
popa
push
int3
enter
pop
es
add
test
movsl
ret
jge
lods
or
fnstsw
sbb
jecxz
rol
pusha
sahf
dec
sub
cmc
movsb
or
fcompl
fs
pop
sub
xor
rolb
inc
jne
adc
or
sti
in
dec
sub
pusha
push
in
push
je
ss
data16
cmc
out
scas
sbb
movsb
movq2dq
gs
popf
jl
rclb
insl
lret
mul
push
mov
jne
js
bound
xlat
test
sub
rclb
jns
dec
push
mov
mov
fdivrl
lret
xor
mov
int
fwait
in
jb
or
ds
movsl
xor
test
aam
mov
aad
les
arpl
cmpsb
mov
ljmp
xor
xlat
test
sti
test
lea
lock
mov
roll
hlt
leave
mov
cltd
mov
test
lods
xchg
xchg
jae
jmp
jmp
mov
sbb
insb
insl
lods
jle
ret
jnp
sti
fs
mov
or
or
or
mov
pop
jle
das
movsl
test
loope
iret
popa
sar
cltd
fs
movsb
fimuls
popf
mov
rorb
push
lret
aad
test
mov
fcomip
nop
in
and
rorb
cmp
jle
adc
cmp
sub
push
mov
in
cmpl
jne
xchg
dec
lods
ret
ss
adcl
adc
inc
sbb
rclb
lret
jp
popa
insl
dec
nop
cmp
dec
hlt
mov
leave
neg
addr16
lret
icebp
pop
add
clc
mov
fwait
or
subl
mov
iret
xchg
cmp
stc
cli
or
scas
loopne
fisttps
cmpsb
aaa
out
pop
mov
mov
int
add
pop
sub
loopne
adc
out
cmp
cmp
test
fsts
cmp
inc
push
data16
sbb
addl
loop
cld
movsb
lret
bound
mov
jo
in
es
mov
arpl
pop
cmpsl
setbe
jne
pushf
js
dec
sbb
jbe
xchg
sti
lcall
jno
js
cmc
add
idivl
subl
pop
jnp
push
sar
or
add
jl
jnp
aaa
and
aaa
jg
jbe
dec
cmc
xchg
inc
mov
lods
popa
faddl
fwait
outsb
es
btc
add
out
pop
fwait
pop
fiaddl
jno
out
sbb
jns
mov
bound
sbb
inc
js
insb
cld
les
or
cs
mov
adc
sub
cld
and
and
pop
rorl
fs
or
addr16
mov
xor
addb
push
pop
ret
lea
sahf
test
imul
xchg
xchg
or
sahf
pop
push
les
loop
in
cmpl
push
xchg
cmp
sbb
xchg
test
aam
paddd
ss
data16
lcall
cmp
js
push
inc
xlat
jp
dec
inc
imul
pop
lcall
push
dec
int
jo
mov
aas
or
push
jl
pop
inc
adc
ss
or
scas
dec
mov
leave
xor
lret
mov
addl
push
and
sahf
jns
push
jae
sub
push
xor
sub
mov
mov
cli
stc
cmp
jecxz
sahf
cmp
pop
push
sbb
dec
mov
dec
push
js
out
in
mov
cmpsl
sub
mov
inc
push
inc
inc
mov
mov
pop
xchg
repz
aad
push
rcrb
dec
adc
fisttpl
xor
push
xchg
mov
clc
xchg
cwtl
cmp
mov
inc
inc
push
dec
data16
push
mov
mov
mov
sub
jecxz
jmp
sub
bsf
lods
rcrl
mov
pop
sbb
cmp
scas
pop
cmp
xor
push
cmp
fidivrl
or
daa
arpl
mov
cli
or
call
pop
or
and
or
jns
js
jp
dec
les
adc
xor
inc
mov
inc
jnp
adc
cwtl
cmp
sbb
out
dec
popa
inc
sbb
cltd
notl
test
jnp
push
cmc
fwait
xchg
loope
imulb
test
ds
jecxz
cmp
push
xchg
outsl
repnz
sti
lahf
xlat
lods
xchg
xor
push
push
add
sbb
or
gs
loopne
outsb
js
clc
or
decb
mov
cmpsb
js
mov
inc
ja
xchg
int3
lahf
ss
xor
pop
test
xor
cmp
es
repz
jecxz
jno
dec
push
pop
clc
jb
int
clc
cld
scas
push
xor
fcomps
jl
push
aas
and
test
and
adcl
push
mov
and
mov
lods
add
out
imul
outsb
sbb
mov
push
and
daa
cld
sbb
sti
out
inc
cmpsl
xlat
pusha
pop
cmp
stos
insb
push
push
jne
fisubrs
add
xor
cltd
or
dec
sub
or
add
adc
mov
cmpsl
leave
xchg
adc
fst
mull
xchg
js
dec
ror
mov
cltd
push
xor
dec
filds
mov
pusha
ja
repz
aas
clc
xor
cltd
add
outsl
add
mov
addr16
lret
loopne
aas
subb
test
or
and
mov
inc
rol
and
ret
leave
adc
add
push
fcoms
aaa
push
dec
pop
inc
icebp
sbb
mov
int
inc
jnp
scas
mov
mov
scas
sbb
ljmp
fiadds
inc
repnz
pusha
xchg
sub
pop
adc
sbb
cwtl
fs
push
mov
aad
out
jp
adc
cmp
mov
inc
sub
or
lods
or
pop
mov
test
pop
ss
jns
pop
daa
add
xchg
cmp
dec
sub
mov
pop
dec
adc
jle
rcr
scas
mov
out
lret
into
and
lods
iret
enter
insb
xchg
cmpsb
rolb
aas
add
xchg
mov
shll
mov
push
test
mov
loope
sub
imul
push
into
ret
mov
ss
aam
cmp
sbb
add
in
sti
mov
cmp
mov
sbb
mov
mov
adc
dec
mov
sub
icebp
lret
pop
std
fwait
mov
in
sahf
and
mov
pop
pushf
cmc
mov
daa
pop
arpl
cmpsb
mov
dec
adc
fmull
ret
out
sbb
jp
inc
stos
sbbb
push
stos
sbb
add
or
mov
test
in
adc
adc
int
cmp
sbb
cmp
adc
or
push
sti
or
cmp
inc
xchg
push
loope
pop
pop
push
jnp
xor
in
rcrl
xor
xor
mov
out
jecxz
mov
negl
mov
leave
push
das
mov
mov
imul
outsl
push
mov
jmp
mov
mov
inc
out
dec
mov
mov
dec
stc
lods
adc
out
roll
push
inc
cmp
pop
enter
lods
xor
test
sbb
mov
leave
cld
mov
ljmp
scas
push
push
or
xor
push
in
inc
leave
xchg
and
mov
inc
cwtl
out
stc
jno
lea
xchg
lods
xor
iret
mov
int
shll
xlat
jns
push
mov
cmc
pusha
outsl
push
pop
xchg
outsl
mov
xchg
into
jg
ret
pusha
cmpl
popa
jae
push
sbb
xor
dec
cli
sbb
aam
mov
or
cltd
jle
lret
inc
in
add
cmp
into
in
pop
xchg
js,pt
repz
inc
push
in
mov
xchg
aas
leave
mov
popf
dec
and
js
and
mov
and
repz
jbe
mov
ss
xorb
sahf
imul
loopne
xchg
sub
jbe
xchg
cmc
cmp
icebp
add
test
cld
adc
sub
repnz
test
pop
cmp
mov
pop
mov
call
push
sub
adc
mov
int3
adc
call
outsl
outsb
push
scas
cltd
xchg
sti
fucomip
cmpsl
das
push
jl
hlt
enter
stos
cmp
cmpxchg
add
sbb
xor
les
mov
fldcw
jns
cmc
mov
inc
push
mov
adc
push
jne
fwait
inc
and
xchg
bound
imul
add
loopne
add
das
push
into
adc
pop
push
push
xchg
inc
mov
jne
jl
cwtl
and
xchg
movsl
xor
or
insb
lods
test
cmp
jns
xor
sbb
xchg
and
jne
mov
aad
mov
mov
cmp
mov
cmpsb
add
ret
add
aas
insb
push
rorb
or
and
push
push
lahf
aas
mov
rep
push
outsb
jg
mov
ret
cwtl
cmpsl
ret
mov
enter
xor
aas
out
dec
mov
cmpsl
or
rorl
enter
sbb
outsl
daa
xchg
push
ljmp
xchg
lahf
mov
push
fdivrs
cmpsl
pop
cmpsl
test
bound
jbe
cwtl
outsl
scas
xor
lds
pop
add
roll
jp
cli
ss
mov
cmp
seta
and
adc
mov
out
repz
lahf
sbb
cmp
mov
xor
roll
in
into
mov
add
inc
jo
addb
jns
into
fwait
inc
loope
mov
and
shr
cld
dec
mov
mov
iret
lea
xchg
sub
mov
sub
sbb
int3
mov
xchg
mov
repz
sbb
stos
cltd
push
fldl2t
cmp
psrlq
nop
xor
fstpl
inc
xor
cmpsb
popf
shlb
cmp
out
xchg
stos
stc
dec
int3
mov
pop
mov
pop
inc
stc
inc
and
dec
or
outsl
mov
add
punpcklbw
inc
push
sub
repnz
dec
stc
jp
xor
in
inc
arpl
jmp
push
pop
sub
xchg
pop
xor
pushf
mov
pop
cld
test
or
lahf
adc
push
adc
push
and
sbb
cmp
add
inc
cmp
clc
pop
rolb
add
lods
cmp
sub
mov
out
fnsave
xlat
scas
jb
pop
cli
addb
sarl
in
cld
insb
sub
adc
ds
or
cmp
or
aad
aam
cld
outsl
filds
mov
push
lods
bound
ss
inc
test
shlb
repz
cmpsl
adc
pop
fsubrs
mov
out
pusha
push
sub
mov
icebp
xchg
push
das
stos
or
lret
int3
dec
mov
mov
pop
daa
mov
sqrtps
mov
inc
cmpsl
push
inc
push
out
pop
cli
dec
mov
or
test
insl
fsubs
dec
enter
mov
es
mov
cmp
cmpsl
shrl
shll
cmp
test
pop
lahf
movsb
gs
scas
pop
nop
insl
filds
pop
js
jne
add
nop
pop
xchg
mull
enter
fwait
movsb
inc
dec
push
sbb
fdivrs
push
or
adc
mov
dec
xchg
cmp
shl
stos
jl
daa
scas
in
mov
jae
push
and
mov
mov
lds
push
addb
pop
jbe
cmpsb
xor
inc
cmc
dec
inc
dec
imul
push
add
movl
outsb
negb
rcl
aaa
ret
inc
push
jb
jne
fwait
rcll
movsb
std
inc
add
push
add
fists
gs
xchg
subb
icebp
lahf
arpl
push
fistps
sub
sahf
lret
loopne
mov
xchg
push
in
insb
cmp
mov
dec
pop
sub
jne
mov
pshufd
dec
push
test
pop
mov
add
xchg
rclb
and
cmp
push
bnd
add
mov
mov
in
pusha
pop
inc
into
arpl
test
sbb
cmp
andnps
in
dec
or
xor
jmp
push
insb
cwtl
add
movsb
sub
icebp
push
lahf
je
jo
mov
xchg
inc
and
add
mov
imul
fxch
sbb
sub
sbb
xor
sbb
jp
not
pop
mov
insl
mov
adc
inc
popa
mov
dec
cli
xchg
cli
sub
into
les
es
arpl
and
sbb
cltd
xchg
mov
push
outsb
inc
xor
pusha
rolb
lods
xor
cs
lods
and
add
pop
stos
xor
sub
cli
push
push
in
xchg
xchg
mov
cmp
std
jecxz
cmpl
cwtl
js
add
jns
or
rolb
lahf
dec
dec
jbe
pop
int
orl
in
inc
daa
push
lret
push
mov
imul
push
test
jns
cwtl
inc
imul
cmpsb
imul
ss
or
in
outsb
adc
cld
shl
jbe
lods
shr
aaa
pop
shl
xor
or
out
sbb
dec
gs
xchg
mov
fsubr
mov
inc
dec
js
push
cmpb
cs
rolb
in
cld
push
push
mov
adc
cwtl
adc
mov
test
cmpsl
jno
outsl
rorb
es
or
cmc
and
out
test
mov
out
or
cld
fstpt
lcall
push
jne
rcrb
jo
pusha
ret
subb
adc
jo
lods
sub
add
or
mov
imul
lods
lock
fbstp
outsl
mov
inc
mov
sbb
xlat
adc
xlat
out
xchg
out
jbe
sbb
xor
pop
sub
jno
je
jo
xlat
jb
ret
sub
xor
daa
ja
push
lahf
outsb
cmpsl
and
mov
add
inc
jl
mov
mov
imul
int
fisubrl
push
sahf
push
addr16
and
addr16
pop
sbb
das
and
dec
mov
mull
sub
push
inc
in
insb
pop
ja
insb
aam
mov
scas
inc
jns
out
jp
add
inc
aaa
nop
jl
dec
jae
dec
int3
test
hlt
lcall
leave
pop
lahf
repnz
add
pop
out
out
jno
lods
orb
push
sbb
adc
push
dec
mov
push
sub
jb
cmp
mov
push
add
popf
push
jne
and
xchg
sti
push
in
pop
jne
in
pop
lahf
cmp
in
sbb
enter
stc
mov
and
adc
push
pop
jne
cmp
std
push
subl
mov
loope
sbbb
imul
fnstsw
aam
or
sub
push
jecxz
cmpsl
stos
lods
jbe
pop
out
fldlg2
nop
push
xor
dec
sti
fidivrl
push
pop
imul
xor
mov
cld
popf
test
mov
mov
xchg
jo
lcall
xchg
out
pusha
mov
cmp
sub
incb
mov
stos
jmp
mov
pop
lock
lret
daa
add
test
clc
adc
sub
mov
fidivrl
cmp
or
fsubs
rcrb
xchg
arpl
adc
in
les
mov
and
gs
xor
adc
mov
dec
inc
xchg
mov
js
stos
es
pop
fisttpll
pop
movsb
pop
cli
mov
sbb
cmc
sbbb
dec
lea
out
sub
pop
xchg
dec
mov
or
pop
out
inc
xchg
xchg
fstps
testl
or
adc
pop
data16
xchg
aaa
mov
popf
cwtl
sbb
inc
jne
inc
fistpll
dec
loopne
dec
pop
xor
pop
push
cmp
daa
dec
out
jbe
xchg
rcrb
adc
je
pop
inc
hlt
loop
cmc
mov
pop
dec
jne
dec
fcom
sub
std
and
fcmovu
or
mov
push
icebp
ret
daa
mov
xchg
movsl
imul
leave
mov
mov
sti
pop
loope
insb
cld
mov
adc
push
lds
push
shlb
fld
jae
ljmp
inc
mov
dec
jbe
sub
test
out
pop
movsl
in
and
dec
jl
dec
jge
xchg
cmp
lcall
insb
push
fcoml
add
sbb
repz
sbb
je
pop
imul
pusha
mov
mov
icebp
adc
sub
cld
cltd
imul
jnp
push
or
xlat
push
andl
mov
sub
inc
cmc
notb
sub
lea
jns
jecxz
das
cmp
aam
popa
fisubrl
outsb
insb
sub
mov
aas
lock
add
popf
jnp
jmp
jnp
scas
sub
std
aad
clc
lods
dec
pop
insl
outsl
dec
mov
adc
fnsave
push
cmp
cmpsb
imul
mov
fcompl
in
stos
add
add
or
or
scas
or
xchg
lret
lret
lcall
pop
mov
loope
and
cmp
push
lds
xchg
lds
fwait
ja
pusha
lock
popa
out
jmp
mov
cmp
cmp
xchg
pop
shll
sub
stc
loopne
ljmp
sarl
jecxz
inc
add
andb
mov
cmpl
mov
in
cmp
arpl
xchg
adc
ds
push
push
jle
movsb
mov
daa
push
jo
jno
fmul
push
and
adc
stos
js
add
or
call
adc
mov
in
cmp
sti
cmpsl
push
mov
xchg
aam
add
cmpsl
push
cmpl
sub
mov
cmp
int3
inc
fisttps
cmpsl
dec
shlb
xchg
das
mov
cmp
push
inc
aaa
xchg
sub
xchg
cmp
pushf
jbe
jle
pop
enter
enter
mov
sbb
mov
dec
aad
push
mov
imul
leave
scas
cmp
stos
je
and
cmp
xor
or
iret
repnz
daa
xchg
add
xchg
enter
dec
stc
data16
lods
adc
mov
jge
clc
sbb
mov
ret
xchg
stos
xchg
xorl
call
jle
ja
sbb
scas
iret
push
cmp
cmp
std
mov
add
mov
or
xor
xor
push
sti
int3
outsl
gs
and
mov
mov
push
leave
jo
cltd
and
dec
addr16
fmull
push
daa
xchg
adc
mov
lods
cltd
mov
addr16
xchg
arpl
repnz
js
in
mov
sbb
imul
scas
mov
hlt
inc
and
test
pop
shll
loope
scas
pop
inc
jecxz
or
cmp
add
dec
nop
mov
jbe
mov
shrb
dec
ret
insl
fdivp
mov
movsb
push
xor
inc
push
daa
test
cmc
lock
jp
mov
xchg
jae
or
sub
mov
shll
aam
cs
es
jb
sub
lret
pop
scas
xchg
xchg
dec
xor
xlat
or
std
cwtl
jmp
sbb
or
xor
mov
adc
les
push
fmulp
rcl
js
sub
je
or
call
bound
lret
das
sub
adc
fdivs
test
inc
jecxz
mov
loope
das
imul
inc
lock
or
pop
and
mov
movsl
loopne
sub
push
ja
loopne
inc
mov
push
shl
pop
jmp
sti
push
shlb
push
mov
aas
dec
add
or
negl
scas
inc
outsb
jo
in
sub
rcr
outsl
xchg
xchg
jae
jmp
leave
jnp
rcll
lock
push
dec
inc
in
push
push
aam
nop
jecxz
std
add
int
xchg
push
xchg
mov
fdivrl
sbb
shlb
das
xchg
sbb
mov
sti
jae
dec
mov
in
mov
popa
aam
cmp
ss
xor
push
push
in
cli
sbb
fisubs
pop
sbb
cltd
mov
inc
push
stos
sbb
aam
arpl
push
mov
or
iret
ss
push
mov
mov
ljmp
jb
push
add
clc
xchg
sub
addr16
jl
pop
pop
enter
xor
mov
mov
mov
arpl
xor
mov
xchg
adc
adc
cmp
loop
scas
ss
ljmp
lods
call
or
add
lea
push
scas
data16
and
add
stc
inc
push
mov
outsb
repz
fiadds
jecxz
xor
int3
or
addb
mov
test
and
adc
cltd
data16
jb
jg
mov
add
mov
mov
in
scas
std
dec
xchg
clc
dec
jns
mov
lods
addl
out
addb
xor
jae
xor
scas
out
add
shlb
fisubrs
cld
imul
pop
scas
scas
stos
jp
cmp
push
bound
dec
lcall
imul
mov
jmp
fs
xlat
rol
add
mov
push
mov
mov
push
adc
in
insl
sbb
xchg
lcall
in
fdivr
ret
mov
ficompl
xor
mov
adc
mov
pop
popf
lods
inc
jbe
loop
in
sub
jmp
sub
xchg
decb
adc
mov
ljmp
jnp
xor
dec
push
sub
movsb
out
in
inc
das
xor
mov
pop
ja
jecxz
sub
popf
call
std
inc
pop
sarb
js
jp
mov
inc
mov
dec
sbb
mov
nop
and
sbb
orl
pop
fs
ss
xor
xchg
gs
gs
mov
dec
scas
and
out
ja,pt
and
add
bound
jmp
js
adc
std
data16
jae
pusha
rorl
call
sub
cltd
fdivrs
xchg
xchg
fs
xor
ja
xor
icebp
incb
gs
dec
mov
notb
aam
scas
mov
bnd
outsb
scas
test
fldt
sub
adc
loopne
sbb
cmpsb
gs
sbb
scas
cs
lret
cs
xor
mov
cmp
sub
stc
sahf
enter
jmp
test
out
mov
cmc
or
jmp
cltd
push
add
out
xchg
xchg
das
jb
outsb
decl
cli
rcrb
or
call
or
enter
mov
add
cmpsb
mov
cmp
and
and
std
or
pop
lahf
sub
cmpsb
hlt
jl
rcrb
ret
test
push
ss
push
gs
mov
add
mov
mov
push
js
xchg
sub
lods
xchg
xchg
out
popa
aas
data16
xor
cmp
mov
shlb
adc
sbb
push
lcall
xchg
jp
xchg
dec
adc
jne
mov
icebp
je
sub
int
js
je
scas
add
add
cmp
icebp
in
fdivrl
xor
inc
sub
mov
push
repz
loop
popf
lret
aas
or
mov
mov
jmp
add
lret
jno
mov
fdivl
adc
adc
sarb
inc
std
daa
repnz
inc
in
fistpl
mov
shll
bound
add
xchg
aas
xor
ja
add
lods
push
popa
cmc
jo
loope
rcr
pusha
aaa
jb
sub
ss
bnd
mov
jb
pop
mov
ljmp
sbb
jae
outsl
in
or
insb
ficoms
cld
in
lds
or
pop
mov
out
add
mov
mov
cmp
adc
jbe
cs
sub
pushf
pop
cmp
adc
pop
icebp
push
es
cmp
jne
mov
dec
je
arpl
or
sbb
sahf
je
push
mov
cwtl
aas
fbstp
stos
fwait
push
insb
and
popf
hlt
jae
mov
push
ficomps
dec
ljmp
test
mov
mov
lea
repz
cmp
mov
loop
mov
jno
daa
ss
or
pop
fsubrl
cmpsb
loopne
pop
mov
call
jno
in
rclb
jo
es
leave
push
faddp
ss
cmp
cli
adc
fs
repz
push
scas
cmc
insl
cli
push
jo
arpl
mov
lret
add
fstl
ljmp
mov
xchg
je
pop
mov
jg
lret
nop
xchg
jecxz
push
sahf
gs
dec
jp
mov
addr16
inc
scas
adc
and
icebp
and
dec
dec
insl
std
pop
add
out
test
mov
andl
lcall
mov
push
push
sbb
push
stos
mov
ret
cli
cmp
mov
jl
repnz
fdiv
jecxz
pop
jns
decl
mov
and
xchg
movsl
or
mov
ret
cmc
dec
out
sub
lret
out
shr
cltd
fildl
xor
aad
out
add
bnd
push
aad
add
aad
test
sti
sub
jb
outsl
mov
stos
mov
jb
or
jmp
dec
add
outsl
and
out
lods
push
js
dec
dec
movsl
cmp
xlat
mov
sub
jne
jae
pop
mov
in
xlat
pand
mov
jmp
mov
clc
in
daa
scas
add
adc
mov
xor
xchg
repz
testb
pushf
leave
fisubrl
xchg
dec
mov
push
punpckldq
fsubs
add
mov
les
mov
xchg
push
popf
xchg
out
dec
and
mov
test
mov
xor
bnd
add
hlt
jl
ds
jns
loope
add
xchg
daa
dec
es
sub
addl
jno
push
xchg
lret
sub
sbb
cwtl
xchg
add
mov
xor
mov
ja
adc
push
mov
ficomps
rorb
mov
xchg
aas
mov
inc
jnp
rolb
or
jno
mov
mov
scas
add
sbb
mov
cmp
and
fists
hlt
repnz
lods
sbb
push
roll
pusha
dec
aas
outsb
and
push
hlt
xchg
iret
xlat
mov
test
fsubrs
rcrl
or
xlat
inc
mov
es
int3
iret
cmp
xchg
jge
cmc
ljmp
scas
cmpsl
das
sbb
and
adc
jp
dec
scas
mov
dec
push
inc
push
iret
cmp
insl
mov
adc
pop
add
xchg
pop
cmp
inc
daa
adc
or
in
les
add
arpl
xchg
xor
rorl
cmp
sub
popf
dec
push
je,pn
and
insb
sbb
sbb
inc
push
sbb
xor
out
js
sbb
mov
jp
adc
adc
push
and
push
cld
cmp
mov
sub
pop
add
or
aas
pushf
test
movsl
xor
push
mov
movsl
jb
iret
xchg
dec
mull
cmp
enter
jo
stos
dec
movsl
addr16
loopne
adc
out
std
cmpsl
add
ret
push
int3
pop
int
das
jb
jmp
add
mov
insl
imul
testl
xchg
ret
push
push
push
add
fbld
add
sahf
hlt
xchg
hlt
out
inc
leave
stos
mov
or
cli
hlt
pusha
inc
cmp
jmp
sahf
mov
xchg
rclb
xlat
cwtl
scas
add
mov
jo
test
das
jmp
add
add
ja
andl
jns
mov
dec
add
insb
aad
outsl
repz
jle
std
xor
mov
lods
lahf
pop
repz
dec
mov
adc
xchg
mov
insl
mov
sub
insl
pextrw
test
adc
fldcw
and
inc
push
xchg
leave
xchg
dec
and
addr16
sub
notb
movl
adc
icebp
mov
mov
ss
inc
mov
jl
adc
dec
cmpsl
shlb
sub
mov
cmp
inc
in
cld
mov
jp
mov
dec
push
repz
mov
imul
ljmp
or
mov
jbe
jg
fucom
mov
data16
cmpsl
push
push
and
pop
sarl
jnp
pop
lahf
sahf
pop
hlt
dec
cmc
mov
test
inc
adc
dec
mov
sub
mov
test
pushf
mov
jno
mov
inc
je
mov
and
scas
or
push
xchg
int
shlb
push
pop
mov
pusha
ret
xor
inc
shr
push
hlt
call
pop
iret
out
inc
sub
jbe
aam
pop
fstps
push
loope
stc
dec
push
adc
mov
cli
push
cmp
jb
imul
mov
outsl
dec
mov
flds
push
loop
es
mov
ror
fadds
movsl
push
sub
pop
xor
mov
cmc
mov
pushf
xchg
pop
sub
xor
xor
cltd
or
mov
pusha
shlb
xlat
loopne
ficoms
mov
mov
and
add
dec
cwtl
xchg
rcrl
dec
inc
cwtl
loop
and
xchg
dec
cmc
pop
repnz
dec
inc
movsb
pop
aaa
bsr
push
push
or
out
sahf
push
cld
lret
pop
fsubp
xchg
or
sub
fldt
inc
shll
or
mov
mov
mov
out
jg
push
pop
popf
aam
sbb
cmp
jnp
iret
in
mov
and
iret
mov
fcomps
jae
addr16
mov
rsqrtps
pop
pop
and
mov
push
xchg
iret
ja
imul
repz
inc
ljmp
arpl
stos
movsb
sar
jae
jb
aad
movsl
inc
es
in
xlat
iret
sub
loopne
sbb
lahf
shlb
pop
ds
loopne
test
sbb
ja
ss
clc
into
mov
into
xlat
insl
jle
xor
jmp
cwtl
inc
ret
repnz
or
in
scas
sub
stos
movsl
lahf
fs
call
stos
inc
pop
insl
fwait
jno
das
xor
imul
dec
add
mov
icebp
pop
fstpl
push
add
mov
shll
jmp
das
enter
or
or
or
mov
fists
out
cmp
and
or
orb
xchg
outsb
sub
dec
jae
test
in
or
fincstp
sub
push
cmpsb
push
les
fbstp
rcll
or
xor
mov
dec
and
jmp
push
cmc
xchg
loope
add
or
inc
add
and
cmpsb
addr16
mov
push
fidivrs
pop
sbb
std
ja
ss
add
dec
jecxz
ret
cmp
test
mov
xchg
fiaddl
bound
rcr
ljmp
enter
cmpsb
dec
jnp
mov
push
sahf
push
jne
sub
mov
ret
sub
hlt
repnz
xchg
jle
push
or
dec
adc
add
call
loope
sahf
ret
rcrb
imul
dec
sbb
sub
xlat
psubusb
xor
lods
ficomps
and
mov
inc
lods
mov
notl
push
ret
rcrl
lcall
aaa
add
xor
fcomps
mov
sbb
mov
and
pop
not
ja
mov
adc
scas
dec
hlt
xlat
movb
loopne
jb
lock
lcall
nop
mov
out
pop
mov
mov
out
push
xor
inc
cmpl
or
push
adc
lods
push
cld
mov
adc
je
lahf
hlt
dec
sarb
loop
mov
cli
subl
movsb
cmp
or
cltd
add
mov
sahf
xchg
mov
pop
adc
sbb
out
jp
pop
in
jg
and
fwait
and
scas
out
jbe
int3
insl
loop
fcmovne
push
mov
mov
xchg
mov
inc
dec
aaa
adc
lods
notb
xor
jmp
add
mov
mov
mov
popf
xor
mov
jo
xchg
int3
mov
fbstp
ret
adc
aad
sbb
lods
pop
je
stc
mov
jecxz
inc
popa
scas
fcomps
cmp
push
sub
imull
cmp
js
pop
sub
pop
push
dec
jg
xchg
ffreep
nop
xor
and
push
sti
pop
into
add
test
mov
sarb
imul
or
jecxz
divb
push
mov
ret
mul
dec
out
mov
lret
in
cmp
js
lea
jb
aaa
mov
lahf
stc
jnp
lods
fwait
nop
xchg
mov
lock
jbe
addb
popf
sub
dec
inc
and
inc
cmp
out
mov
dec
es
xchg
pop
mov
inc
inc
lret
je
in
lret
jno
mov
xor
jmp
je
dec
iret
lods
mov
and
push
je
movsb
mov
cmc
das
add
dec
cmp
imul
push
adc
out
mov
push
or
fdivl
cmpsl
repz
lock
and
adc
movsl
ret
inc
lret
ds
xchg
outsb
pop
into
xor
out
cmc
push
jmp
arpl
or
add
out
sub
lods
fcomip
fbld
repz
adc
push
inc
rep
dec
repz
add
sbb
mov
icebp
lcall
xchg
hlt
adc
out
mov
cs
push
adc
push
cs
stos
inc
cmp
mov
xorl
test
imul
cltd
inc
mov
jno
or
xor
in
xchg
cmp
xor
sahf
lret
cld
iret
jle
mov
xor
dec
add
mov
loope
test
lds
dec
add
and
push
mov
jg
int
out
clc
push
add
push
fcomip
in
xor
adc
and
insl
les
pop
and
lret
xor
insl
loopne
icebp
xchg
test
sahf
push
push
pop
idivl
xchg
insb
pop
int
xlat
inc
push
mov
pop
add
mov
push
inc
mov
mov
xchg
adcb
and
mov
xlat
sbb
or
mov
sub
mov
sbb
sbb
inc
lcall
fisubs
movsb
xchg
orl
push
cmc
test
int
fistpll
dec
das
sbb
push
cmp
mov
test
jae
xchg
push
xor
push
mov
add
in
adc
adc
das
mov
les
or
add
js
popa
sbb
cwtl
xchg
sub
imul
aaa
jno
pop
pop
xor
add
add
xchg
std
push
aas
sub
push
fidivrl
jbe
in
sub
stos
lea
es
loopne
nop
movsb
xchg
push
pop
iret
popa
fucomp
pop
or
and
shll
xor
testb
js
in
jo
and
push
add
lods
jmp
fsubrs
cmp
aam
cmp
out
jno
mov
inc
or
xchg
jae
cmc
daa
sbb
cltd
test
insl
lahf
stc
stc
subl
loope
pop
and
sbbl
lret
inc
xchg
lods
test
aas
cs
in
mov
outsb
mov
add
lret
lock
jge
into
pop
xchg
mov
adc
inc
inc
aam
cmp
push
or
pop
dec
shrb
or
add
adc
loopne
push
jle
sbb
lods
sbb
test
push
dec
lock
movsl
lods
mov
call
rolb
add
cmp
notb
ja
icebp
adc
mov
push
arpl
std
push
mov
es
cmp
cltd
mov
hlt
testb
jnp
add
cmp
mov
adc
repz
and
cmp
or
repnz
pusha
and
ljmp
dec
and
stc
ret
cmp
std
sub
sbb
in
ret
rorb
push
jnp
inc
adc
mov
add
and
xchg
rolb
divl
sahf
dec
mov
sbb
test
cmp
mov
sbb
and
mov
jnp
inc
cwtl
adc
or
mov
jo
sarb
pop
jmp
and
add
js
sbb
out
cli
divb
jle
jp
inc
sbb
mov
add
shrl
ficompl
mov
inc
imul
dec
loop
lock
pop
test
inc
add
mov
sti
stos
mov
mov
mov
mov
insb
xorl
jge
cmp
in
jmp
pop
bound
loope
pop
xchg
add
int3
jp
out
sar
clc
lret
cmp
and
xor
mov
jle
sub
adc
add
lret
and
adcb
scas
cltd
pop
bound
cmpsb
mov
adc
mov
imulb
inc
pop
push
sbb
lods
mov
dec
mov
shl
popa
pop
jp
sub
inc
mov
jno
fsts
imul
mov
xor
adc
es
jo
xchg
xor
fists
pop
cltd
pop
pusha
mov
pop
and
lret
fbld
push
test
loopne
lret
pop
sub
addr16
jp
cmp
jmp
mov
psllq
push
sahf
int
dec
inc
aaa
outsl
pop
mov
cmpsl
cmpsl
inc
jmp
or
xor
push
dec
sbb
sub
add
jne
cmp
mov
push
pop
mov
jmp
aam
push
dec
arpl
dec
jl
sub
je
fstpt
push
jmp
mov
popf
or
nop
mov
imul
jle
jo
sbb
dec
pop
sub
mov
xchg
adc
inc
xchg
loop
aam
mov
gs
or
dec
push
xchg
mov
fs
xor
or
jo
psrad
sti
outsl
inc
shlb
int
adcb
mov
std
ja
gs
mov
mov
hlt
mov
xchg
mov
mov
push
mov
mov
aam
scas
cmp
inc
pop
pop
or
mov
gs
push
bound
adc
lods
outsl
push
mov
ret
sbb
sub
or
enter
lock
cmc
adc
das
push
popf
arpl
ficoml
dec
pop
dec
ffree
add
clc
xchg
xor
pop
pop
sbb
mov
dec
jle
xchg
xchg
idivb
and
jmp
dec
outsb
and
cmp
mov
dec
shl
dec
push
not
mov
mov
in
cmp
sbb
ficompl
test
fisttps
add
mov
in
mov
cltd
out
scas
fsubr
scas
es
xchg
in
jae
lret
daa
cmpb
cmc
addr16
jne
lea
jb
mov
das
leave
jle
cmp
mov
inc
lahf
pushf
or
popf
dec
orl
mov
mov
adc
inc
add
stos
cmp
pushf
adcl
cltd
cmp
xor
fcmovnb
mov
cmp
cmp
pop
xlat
xchg
mov
outsb
cld
dec
and
inc
push
dec
mov
pop
popa
fbld
clc
pushf
adc
les
das
test
jp
jg
test
add
dec
pop
mov
pop
rclb
sbb
ja
lea
stc
dec
mov
into
hlt
adc
aad
jae
insl
and
xchg
iret
cltd
xlat
or
lret
repnz
sbb
xchg
inc
mov
sbb
or
and
and
mov
jae
dec
fbstp
inc
lods
sbb
icebp
add
pop
cmpsl
lahf
cmpsb
mov
xor
and
popa
push
jo
iret
xchg
popa
add
out
cmp
push
in
arpl
push
fdivrs
sub
sarb
cmp
iret
hlt
and
pop
cwtl
pop
xchg
dec
test
mov
leave
mov
or
or
enter
sub
mov
rorb
int
cmp
pusha
and
mov
or
fisttpl
mov
adc
stos
pop
int
rorl
test
cmc
cmp
lret
test
rorb
fcmovu
and
andl
popa
popl
in
pop
sbbl
mov
lcall
cmp
les
jecxz
scas
mov
ret
inc
in
shll
xchg
or
push
pop
fidivrl
imul
lods
inc
xchg
icebp
push
fs
pop
xor
into
leave
je
std
mov
xchg
and
ljmp
push
mov
mov
mov
mov
jge
rclb
add
mov
leave
inc
jo
test
int
enter
sti
fnsave
lods
jg
scas
mov
in
and
mov
outsb
jne
add
sub
pop
loopne
xchg
add
cmp
es
rorb
cmc
mov
leave
lret
or
das
push
pop
inc
test
out
sahf
sub
ljmp
loop
inc
stos
add
push
sub
dec
sub
xor
xchg
lcall
push
sbb
test
lahf
inc
or
test
in
xlat
in
push
mov
sbb
or
popf
test
xchg
xlat
cmp
repz
cmp
xchg
push
lcall
inc
scas
enter
pop
repnz
movsb
aam
mov
out
jne
cmc
outsl
shlb
vpackssdw
repnz
insb
addr16
pop
adc
mov
add
das
push
ret
jno
jg
out
sub
test
es
xlat
pop
cmp
test
xchg
inc
xchg
aam
xchg
adc
sub
jae
push
in
dec
fmul
outsb
mov
jmp
add
push
push
cmpb
pusha
jge
stos
aam
loop
lods
dec
lds
jle
cmp
dec
add
inc
iret
call
lret
ljmp
fdivs
shr
ljmp
dec
shlb
mov
les
dec
ss
insb
add
divps
out
in
sti
lock
in
outsl
not
loope
sub
dec
addl
loop
push
js
fisubs
lock
pop
xchg
push
mov
mov
mov
arpl
or
movsl
xor
pop
fbld
jb
lret
push
fbld
xlat
push
data16
jo
sarb
sbb
xor
aam
int
xor
lahf
pop
or
lea
and
insl
movl
mov
lea
push
psubd
dec
dec
inc
xchg
test
inc
jb
or
pop
mov
mov
mov
mov
in
bound
inc
or
xchg
jbe
xchg
repnz
fcmovu
inc
mov
sarl
movsl
dec
mov
sub
call
or
dec
pop
add
inc
add
jp
cmpsb
mulb
mov
ss
cli
idivb
test
inc
push
inc
popf
sbbb
dec
add
add
sbb
xchg
cmc
mov
mov
das
xor
les
scas
or
add
inc
cmp
mov
jg
adcb
fildll
cmp
or
jns
xchg
in
jo
hlt
imul
add
inc
xchg
sub
popa
push
add
out
cld
ja
sbb
sbb
inc
pop
pop
lahf
or
lret
jp
add
pop
out
andl
stos
cmc
sub
dec
jecxz
mov
std
jo
sbb
pop
add
mov
pop
add
pop
mov
pop
pop
call
or
inc
aas
adc
jle
test
xchg
jns
xchg
hlt
mov
dec
adc
mov
push
jnp
hlt
mov
mov
aad
je
lds
das
push
out
pop
or
sub
jg
popa
push
pop
xchg
out
out
scas
outsb
je
mov
sub
cwtl
or
out
iret
dec
fwait
int
sbb
pop
call
push
inc
rorl
insl
mov
jge
sets
sub
insb
jecxz
gs
and
sub
enter
lret
sub
jecxz
push
outsl
lcall
xchg
in
cmpsb
jle
mov
hlt
lods
xchg
dec
lock
int3
pop
loopne
adc
mov
out
ret
outsl
mov
pop
inc
ss
in
cli
movsl
in
push
enter
mov
cmp
fstpl
cmp
adc
jp
mov
dec
sub
sti
movsl
mov
pop
scas
icebp
or
dec
push
fstpt
push
sub
and
inc
cmp
int3
cs
das
inc
sub
subl
jnp
pop
mov
lahf
add
das
fadd
stos
push
cmp
fs
cltd
ss
sti
aam
jbe
sbb
adc
push
clc
or
ljmp
scas
ljmp
xchg
or
movsl
cli
pop
cmpb
lods
dec
mov
mov
adc
jns
inc
mov
pop
jne
js
aas
add
push
popa
ret
and
shrb
cmp
pop
aad
insb
and
add
lods
ret
xor
ja
mov
scas
clc
push
inc
ljmp
mov
movsl
fmuls
icebp
add
popa
dec
or
push
pop
jne
ljmp
je
pop
xchg
sbb
or
mov
push
jecxz
adc
mov
add
stos
insl
add
arpl
ror
adc
or
loop
orl
imul
jmp
outsb
mov
xchg
push
adc
ret
loope
std
sbb
in
jnp
call
js
xchg
inc
call
test
daa
and
decb
inc
mov
int
in
pop
lcall
push
cmpsl
push
insl
push
adc
cmp
mov
mov
ja
mov
mov
mov
lds
aad
fs
xor
mov
pop
pop
les
ds
push
stos
ss
push
shrb
nop
sarl
lret
call
push
ja
or
ficoms
cmp
inc
fs
xlat
jno
mov
mov
inc
cmc
lods
mov
cmpsb
push
insb
xor
stos
pop
mov
cld
sahf
push
icebp
mov
in
and
xchg
dec
jmp
insb
sbb
mov
push
jmp
adc
sub
aaa
mov
cmp
inc
mov
pop
lds
stc
dec
sbb
popf
adc
popa
or
addb
pop
out
and
out
mov
rclb
mov
xor
and
ret
push
mov
pop
std
xor
dec
movsl
mov
jno
lods
test
push
fcoms
in
out
pop
jmp
mov
mov
std
add
mov
mov
cmpsl
xor
xchg
pop
xchg
jecxz
pop
push
push
outsl
sbb
js
addr16
das
xchg
imul
sub
nop
repz
adc
cmp
je
fidivl
lods
out
inc
inc
mov
neg
nopl
xor
enter
sub
dec
or
push
cli
jbe
adc
lret
inc
mov
pcmpgtw
sub
out
dec
int3
cmp
ret
loop
call
icebp
js
iret
cmp
aad
inc
mov
mov
aas
test
pop
scas
push
js
fdivp
mov
jnp
lret
nop
inc
push
mov
sub
hlt
cltd
xchg
and
shll
inc
popf
or
jns
mov
lret
cmp
jae
nop
xor
sbb
inc
vxorps
xchg
cmpb
jnp
fadd
xbegin
jo
aad
sbbl
add
ljmp
add
sti
mov
or
movsb
sbb
int3
movsb
movsl
pop
mov
push
jns
into
jge
jecxz
sbb
hlt
cmpsl
jge
mov
push
in
lds
outsl
pop
imul
mov
repnz
inc
or
mov
pop
xchg
dec
adc
add
mov
xchg
mov
ja
jne
and
xchg
adc
push
jne
pushf
icebp
sar
push
mov
push
leave
cmp
scas
iret
inc
jo
out
dec
inc
add
push
mov
std
dec
jae
mov
inc
mov
or
adcb
js
fbld
cmpsl
or
pop
scas
mov
jne
inc
rcl
mov
arpl
push
adc
fcomps
cmp
push
vsubpd
fdivrl
mov
push
insl
sbb
push
jg
sti
and
cmp
and
aad
rcrb
stos
fisubrl
jne
dec
sub
jmp
repnz
fstps
mov
mov
push
push
jnp
and
pusha
leave
std
lret
and
push
jg
and
leave
inc
cmp
xor
and
mov
loope
xlat
mov
call
or
in
jle
sbb
ret
cli
lods
mov
test
dec
aas
out
push
loop
cmpl
mov
mov
xor
sbb
dec
inc
cltd
mov
add
adc
adc
push
mov
sub
pusha
xchg
or
nop
adc
xor
cltd
f2xm1
lea
iret
jle
sbb
movsl
push
lret
and
shll
cmp
mov
lret
or
push
inc
mov
mov
sub
lds
mov
ja
mov
cs
pop
jl
lret
sub
dec
out
push
cltd
sbb
xor
inc
pop
pusha
fstl
loopne
jno
pop
lcall
mov
mov
fwait
xchg
jbe
loop
push
lcall
les
outsl
test
adc
and
pop
cmp
xchg
je
push
ficoms
in
mov
fdivs
jns
repnz
mov
leave
push
lret
int
xchg
add
push
xor
mov
scas
mov
jbe
push
paddusb
loope
imul
inc
jne
add
inc
mov
inc
clc
push
rcrl
dec
imul
lods
mov
stc
popa
stos
loope
pusha
fsub
jmp
lret
jecxz
je
pop
add
add
push
jg
outsb
inc
mov
xchg
roll
mov
insb
sbb
rcll
out
je
sahf
cmpsb
push
lds
xor
adc
xlat
cli
dec
loop
inc
push
int
test
mov
inc
xchg
mov
xlat
call
dec
sbb
jb
cmp
cld
outsb
cmc
sub
arpl
or
push
in
jne
push
test
lods
test
mov
cmp
inc
subb
rcrl
xchg
test
add
jne
xor
mov
cltd
pop
push
or
stc
dec
inc
jmp
cs
ja
fsubrs
rclb
jb
rorb
insb
mov
cmpsb
jns
inc
cs
leave
xchg
outsl
imul
sbb
arpl
fistpll
xchg
hlt
push
shld
add
mov
fdivrl
int
and
arpl
mov
cwtl
cmovno
inc
push
movsl
mov
jae
lods
ds
sub
and
cmp
push
aas
enter
call
sub
lock
push
stos
xorb
loopne
xchg
or
mov
jl
cli
inc
mov
add
pushf
add
inc
adc
adc
iret
cli
pop
xor
out
out
lret
mov
adc
xchg
xchg
shr
dec
test
cltd
push
push
cld
dec
push
sub
mov
sbb
inc
lods
negl
ret
mov
insb
push
inc
int3
rorb
iret
pop
add
fdivrs
test
mov
inc
lret
sub
sbb
sub
mov
cld
jbe
out
mov
fwait
mov
out
scas
fsubl
sti
cmp
inc
sbb
fildll
lea
repz
cmpsl
fists
fcmovbe
cmc
cmp
out
xorb
mov
push
shll
cli
sbbb
ds
in
loope
xor
or
adc
aas
cli
sbb
push
iret
stos
push
ret
neg
dec
push
push
sbb
dec
push
loopne
jbe
fisttps
out
xchg
pop
aam
sub
lret
or
dec
add
push
cmpsl
cmp
adc
rcrb
xchg
rorl
ret
je
jo
mov
insb
xor
ljmp
mov
aad
stos
mov
or
or
fisubs
sub
cwtl
adc
test
shrl
jnp
mov
mov
mov
sub
or
lea
adc
push
pop
shr
cwtl
push
adc
xchg
mov
jmp
in
mov
scas
sub
mov
jmp
cld
inc
cmp
fmull
movsl
sub
mov
xor
jns
xchg
int3
mov
push
daa
xorl
jbe
xchg
push
stos
ret
pop
push
in
mov
or
xor
paddd
addr16
sti
dec
jg
loope
pop
cmp
test
call
fnstsw
js
pop
dec
lods
inc
cmp
sub
jl
jp
mov
mov
jne
enter
jge
mov
pop
adc
sbbb
mov
cld
jb
mov
sbb
xor
mov
sub
mov
fwait
pushf
outsb
sub
xchg
mov
add
lods
iret
pop
call
push
cmc
jae
sbb
loop
adc
loop
dec
ja
jl
pushf
in
mov
sub
inc
pusha
les
into
push
fstl
out
gs
push
and
mov
xor
mov
ja
cli
jns
imul
xor
lahf
aad
mov
sub
cmp
mov
xlat
das
xor
jl
push
cmpsl
jecxz
mov
push
xchg
dec
lods
dec
add
ja
outsl
jmp
inc
xchg
mov
jmp
inc
enter
scas
in
mov
ja
mov
push
cltd
push
pushf
sbb
jns
jbe
push
cmp
leave
daa
outsb
inc
add
fwait
int
jne
xchg
xchg
mov
stos
les
xor
jbe
mov
pop
or
sbb
xlat
int
stos
pop
ja
lds
mov
outsl
das
insb
push
cmpb
in
dec
cmp
out
fs
adc
fldcw
push
and
cld
fdivl
adc
jnp
cmpsl
adc
js
mov
mov
or
cmp
xor
cli
or
inc
mov
push
mov
mov
rcr
cwtl
inc
jmp
cmc
cmp
add
dec
pop
jle
fdivs
addl
mov
xor
loopne
push
sbb
ror
addl
cmc
mov
cmpsl
cs
mov
std
sbb
xchg
sub
jl
daa
push
ljmp
popf
inc
mov
xchg
push
mov
mov
inc
xor
pop
stc
test
cmp
cmp
mov
aaa
test
jne
push
cmpsl
jmp
push
add
cmc
xor
mov
add
clc
je
cmpsb
insl
xchg
jo,pt
cmp
jo
mov
jle
mov
fnstcw
push
adc
jp
ljmp
test
mov
mov
shrl
sti
mov
lea
xchg
adc
cwtl
sub
das
loopne
add
in
and
pop
mov
jge
movsl
and
cmp
mov
jbe
fcomip
mov
jnp
mov
mov
movsb
mov
mov
dec
xor
mov
pop
outsl
mov
out
fsubr
add
out
insb
iret
xchg
xchg
pushl
mov
dec
xorb
test
mov
shll
sbb
xchg
adc
lods
rolb
jge
dec
and
xor
push
or
ret
out
push
push
add
lods
loopne
or
adc
jle
push
ficompl
mov
mov
or
arpl
fstp
negb
test
call
cmc
clc
imul
imull
xlat
int
movsb
and
js
or
xchg
sub
sbb
iret
xchg
push
mov
nop
pop
jp
mov
ja
std
push
orl
cmp
pusha
jmp
adc
ret
mov
sub
adc
cmp
cmp
ds
sarb
push
fisubs
push
not
push
push
dec
enter
out
jae
lods
repnz
add
rolb
mov
loop
pop
xor
add
in
fldcw
dec
in
dec
iret
dec
into
xlat
xor
push
push
inc
je
sub
mov
cmc
repz
jmp
aad
je
jbe
paddsw
shrl
out
or
and
xlat
adc
sbb
adc
add
push
stc
aam
sub
push
les
jns
and
clc
jae
or
xlat
fimuls
jo
xchg
outsl
dec
cmc
jmp
in
cmp
dec
or
cmp
dec
cmc
fstpt
inc
shll
rcrl
mov
cwtl
xor
jne
pop
adc
cmpl
pop
and
xor
dec
inc
xchg
ret
shrb
fwait
out
test
sbb
cltd
cmp
imul
int3
in
in
mov
sarb
pop
negl
xchg
mov
jg
shlb
push
mov
or
repnz
xchg
xchg
cwtl
jo
jp
mov
icebp
dec
xlat
sarl
into
in
sub
inc
sub
jecxz
arpl
ret
ja
jge
xor
add
lret
enter
clc
imul
cmp
imul
stos
fisubl
xorps
loop,pt
xchg
xlat
jnp,pt
inc
dec
cmp
popf
add
out
and
pushf
or
or
out
cmpsl
or
bound
ljmp
inc
jecxz
xchg
mov
out
mov
fs
push
jae
jbe
inc
imul
outsl
adc
and
push
imul
mov
sbb
fdivrl
dec
cli
jo
je
cmpl
xchg
jg
sub
arpl
xchg
push
lcall
cmc
xchg
std
push
stc
cmp
aaa
sbb
setnp
sbb
daa
rol
andl
and
sbb
lret
test
std
lcall
cmpsl
cmpsb
ja
push
or
push
pop
sarb
jle
pop
mov
pop
mov
add
add
cmp
jp
push
fwait
inc
push
mov
loop
xor
dec
fsubs
push
frstors
insl
cmp
repnz
lcall
addr16
fisttpll
add
movb
and
lret
je
dec
neg
and
add
mov
leave
std
xchg
push
mov
test
lret
push
movsb
dec
jge
push
rorb
pop
mov
rorb
movsb
lock
cmp
jno
jmp
push
mov
loope
mov
and
or
mov
sar
cmp
daa
jle
jo
test
push
inc
pop
xor
wbinvd
icebp
jae
inc
mov
imul
dec
sbb
inc
aam
inc
xchg
dec
dec
adc
subb
mov
rolb
inc
imul
jnp
sbb
jns
cmp
call
or
and
clc
jle
push
je
pusha
cltd
xchg
push
das
lahf
les
rcrl
and
dec
mov
fldcw
fsubl
movsb
negl
mov
xchg
xor
stos
push
xchg
mov
jecxz
cmc
mov
mov
scas
mov
adc
movsl
clc
mov
cli
mov
push
fsubs
iret
insw
jmp
repz
mov
faddl
dec
mov
sub
cmp
int3
pop
outsl
lret
int
pusha
xchg
xor
insb
pop
sbb
jl
scas
les
dec
nop/reserved
rcll
in
pushw
data16
cltd
adcb
inc
orl
imul
pop
in
imul
cli
aaa
cmp
xor
xlat
jge
ja
pop
and
push
adc
loop
lock
dec
test
cmp
fdivp
cmpsl
imul
and
insl
mov
pop
pop
mov
mov
jecxz
addl
arpl
mov
fildl
jg
adc
xchg
and
xor
clc
sbb
in
imul
out
and
jb
fcomp
inc
dec
xchg
pop
mov
nop
sub
ror
loopne
sbb
jp
daa
mov
cwtl
sbb
jge
cmp
mov
xchg
sarb
js
out
dec
mov
pushf
inc
cwtl
leave
jne
out
cs
enter
xor
push
aad
ja
loop
mov
cmp
dec
mov
inc
adc
notb
orl
add
incb
sub
rcl
shlb
ss
test
push
mov
popf
or
push
pop
lahf
jo
inc
cmpsb
movsl
jae
ljmp
dec
cmp
imul
out
mov
incb
jnp
call
mov
ret
test
mov
fiaddl
cli
jns
and
ljmp
movsb
add
mov
dec
icebp
sub
das
test
scas
pusha
ror
aad
mov
ljmp
ss
jne
test
mov
cmp
xchg
xor
gs
lahf
sahf
scas
push
lcall
inc
das
ret
cld
test
mov
mov
sub
sahf
xchg
mov
dec
pop
push
movsb
int3
fwait
add
adc
jge
push
sbb
test
enter
jne
push
loop
scas
std
push
imul
cmp
aaa
mov
stc
arpl
sub
movsl
les
dec
mov
lea
xchg
mov
xor
mov
jnp
jg
loope
inc
popa
cmp
into
aas
pop
jmp
hlt
jg
aas
inc
xlat
lret
xor
push
rcrl
cmp
loop
add
leave
push
sub
dec
pop
es
lods
and
jecxz
stos
test
cmp
into
in
into
shl
push
dec
adc
out
sti
mov
ret
push
cltd
mov
outsb
inc
aad
out
cmp
and
out
sub
in
dec
mov
xchg
push
mov
clc
xchg
rclb
inc
jnp
jb
mov
test
jp
and
fdivs
cs
aas
fsubrs
mov
and
mov
popf
fnstsw
adc
jne
aas
add
fnstcw
pop
out
out
gs
add
inc
inc
out
cmp
or
aam
xchg
cltd
lods
cwtl
pop
inc
iret
stc
ret
outsl
and
jmp
fistl
jmp
xchg
loope
lret
es
leave
ljmp
jnp,pt
xchg
mov
xchg
cltd
cmc
icebp
fcmovb
inc
bound
push
xor
xchg
inc
daa
fmull
mov
test
push
mov
inc
jno
shll
push
stc
aad
scas
popa
fs
int3
add
das
pusha
sub
jae
or
jge
mov
lods
pop
daa
pop
insl
mov
les
out
out
sahf
mov
pop
mov
mov
fcmovnb
rcrb
and
fsubrs
cmp
inc
jns
or
xchg
mov
add
push
add
ljmp
mov
mov
pop
into
mov
add
mov
movsb
mov
pop
push
hlt
in
add
repnz
and
test
aad
mov
insb
jb
or
pushf
cmp
cmpsl
je
repz
adc
scas
cld
inc
jo
lds
push
fucom
add
xchg
xchg
nop
test
sarb
mov
std
fs
nop
mov
sti
daa
mov
and
add
pop
sbb
mov
jmp
push
dec
push
test
lock
je
cltd
or
and
sbb
mov
sbb
mov
dec
dec
mov
cltd
push
dec
bts
mov
sub
js
xchg
jo
push
ret
mov
adc
xchg
mov
sub
lcall
dec
dec
sahf
pop
mov
mov
mov
mov
push
xchg
in
add
sub
or
jno
or
adc
cmp
xchg
jmp
out
jg
fsubl
mov
rolb
ja
cli
jb
lds
jnp
inc
inc
or
adc
xchg
fimull
ficoms
test
cld
stc
jp
adc
and
insb
inc
push
mov
xchg
jne
fadd
or
xchg
addr16
add
pop
adcl
mov
rorl
xchg
shrb
lcall
sti
shll
jp
cltd
sub
pop
jl
iret
mov
pop
cmp
sti
cmp
add
and
and
test
and
notl
jmp
mov
sbb
fstpl
rolb
sub
leave
jae
dec
stos
dec
dec
dec
mov
mov
mov
xor
cmp
je
shr
adc
call
adc
mov
lock
dec
repz
filds
mov
and
sbb
mov
sub
xchg
lahf
orb
repz
int3
add
inc
adc
je
into
adc
or
and
mov
out
clc
inc
pop
push
clc
jne
sbb
fwait
xlat
adc
popf
int
cmp
lods
ret
stc
je
sbb
push
notl
pop
mov
xor
pop
sub
bound
inc
in
sub
out
jns
cmpsl
iret
or
xchg
jnp
lret
mov
xor
aaa
test
scas
bnd
jne
jge
push
and
aad
insb
mov
insb
or
shl
sahf
mov
push
divl
add
aad
or
mov
sbb
pop
jae
xor
adc
jbe
add
imul
mov
cmp
jmp
mov
push
loope
or
mov
lods
inc
incb
jb
mov
pop
mov
ret
in
sbb
scas
or
inc
test
and
aad
ret
loopne
mov
sub
xchg
ret
repnz
pop
push
nop
sbb
out
cmp
mov
inc
ljmp
cmp
xor
pop
je
or
mov
adc
pcmpeqb
in
cmp
inc
je
out
idivl
mov
or
inc
mov
inc
mov
imull
outsl
ljmp
pop
dec
clc
sbb
xchg
adc
stos
repnz
ss
ds
ficoms
jo
gs
ljmp
dec
mov
subb
mov
cmp
inc
dec
adc
gs
imulb
ljmp
and
pop
in
mov
lods
cmp
negb
pop
sbb
sti
mov
inc
outsb
das
dec
pinsrw
insb
pop
pop
aam
mov
inc
popf
mov
dec
pop
mov
out
mov
lods
xchg
leave
imul
pop
cmpsb
out
aas
in
push
xchg
in
ret
stos
int3
add
cltd
xor
push
out
or
cmpl
xor
sbb
scas
shl
int
pop
jmp
ss
cmp
les
icebp
mov
cmpsb
test
pop
aam
jg
lods
ret
jmp
push
jmp
jp
jg
push
inc
icebp
sti
jmp
adc
mov
fcompl
mov
pop
dec
dec
fwait
mov
insb
ss
xor
inc
and
or
push
mov
loopne
lahf
stc
cwtl
rcrl
inc
testl
mov
add
aaa
push
xor
adc
sbb
mov
cmp
mov
jl
inc
gs
insl
push
mov
das
sbb
pop
in
or
mov
xor
push
mov
sub
scas
sbb
lret
insl
add
sbb
xor
pop
pusha
clc
lods
cmpsl
stos
push
into
pop
in
out
push
mov
pop
jo
sub
lods
loope
out
fmuls
mov
jbe
xchg
lcall
lret
jno
arpl
cmp
push
call
dec
daa
rolb
nopl
push
dec
and
or
or
mov
mov
add
arpl
mov
dec
add
push
sub
idiv
ror
inc
mov
mov
jne
jp
hlt
xor
pop
mov
push
aam
cmp
cs
mov
push
or
enter
repz
dec
mov
jae
inc
jo
ljmp
push
stos
aaa
mov
aas
inc
inc
push
call
or
xchg
lock
push
inc
lret
movsb
clc
jns
mov
cld
loopne
es
pop
mov
movsb
out
je
dec
test
sub
cwtl
dec
inc
dec
fnstenv
mov
dec
rcrl
mov
sahf
dec
mov
inc
neg
dec
xchg
add
pop
xor
dec
shlb
xchg
fisubs
mov
das
pop
sub
mov
sub
ss
out
mov
dec
lds
int3
jbe
repnz
push
shlb
int
push
outsl
pushf
inc
rolb
in
cmovl
fwait
enter
jg
lea
xor
push
dec
outsb
out
push
xlat
or
sahf
loope
jle
push
lcall
cmp
enter
and
shl
movsl
xchg
lcall
rcrb
lods
and
pop
and
sarb
mov
adc
xor
jmp
shrb
std
pop
dec
testb
fdivr
aad
sbb
xchg
mov
dec
arpl
push
xor
sahf
dec
dec
adc
shl
fildll
cmp
cld
cltd
out
xor
fs
cli
and
xor
adc
xor
push
loopne
enter
aaa
in
popf
dec
mov
shl
xlat
aas
mov
xchg
xlat
mov
mov
ja
push
xchg
in
pop
cmp
hlt
outsl
sub
sahf
dec
cmp
or
test
adc
adc
cmp
imul
cmp
dec
sub
jle
jecxz
mov
nop
mov
data16
in
in
inc
and
lcall
pop
popf
pop
repnz
fwait
repz
sbb
mov
xor
inc
xor
xor
test
das
adc
mov
out
adc
shl
rcll
xchg
movsl
mov
int3
xchg
add
jo
adc
or
cltd
test
dec
adc
pop
cmc
cmc
jae
jne
rcrb
and
sub
and
outsb
mov
clc
push
shll
into
jnp
mov
xor
mov
leave
fldt
ret
cmpsl
mov
xor
push
and
push
mov
mov
ret
or
sbb
aaa
imul
and
mov
jle
lcall
loopne
ss
rolb
fcomip
or
xchg
scas
push
ss
shl
xchg
popa
adc
pusha
js
int3
jns
jno
rolb
ds
cltd
fbld
addl
push
jno
adc
sub
int3
xchg
dec
filds
fimull
jp
lods
xchg
test
int
lahf
sarb
dec
cmpsb
ja
sbb
jl
sbb
jl
sahf
test
fmuls
cmp
gs
lret
daa
mov
xor
cwtl
mov
xchg
aas
sub
andl
xchg
fstpt
mull
pop
xchg
mov
sahf
xor
dec
loop
mov
int
sbbb
pop
test
sub
lahf
or
mov
adc
cmc
push
lods
mov
cs
dec
das
and
jge
call
xchg
add
dec
cmpsl
push
mov
popf
bound
pop
sub
jae
test
lahf
iret
ja
call
into
shrl
test
nop
fnstsw
mov
pop
jns
adcl
lret
out
xor
js
cmpl
call
push
adc
add
mov
xchg
jmp
and
loope
pop
sar
cmp
test
repz
or
insl
xor
adc
xchg
push
push
daa
pop
adc
paddw
ss
ret
mov
shl
shr
jns
mov
xchg
push
sub
inc
mov
dec
sbb
rcrb
nop
leave
fdivp
and
cmc
mov
cltd
frstor
shlb
sahf
roll
pusha
add
xchg
movsl
gs
ds
jge
and
fisttps
and
mov
sti
xchg
pop
fldl
pop
adc
or
pop
sbb
mov
movsb
nop
mov
bound
xchg
cmpl
pop
and
std
jae
lret
pop
movsl
push
pop
pop
lcall
shl
lcall
or
test
cmc
int3
mov
arpl
jge
arpl
fucomp
lock
fimuls
inc
and
push
push
adc
dec
push
cli
rclb
iret
push
popa
cmc
pop
leave
jmp
cmp
sbb
adc
xchg
popa
int3
xlat
adc
sub
scas
fmull
push
int3
movsb
lahf
xor
inc
push
cltd
add
jb
call
iret
scas
push
inc
mov
cmp
in
fsubrp
scas
out
push
push
xor
scas
inc
sbb
sub
js
insb
andl
addr16
push
in
xor
mov
test
add
xor
mov
push
xor
outsw
push
das
outsl
and
sub
stc
cmp
inc
hlt
shrb
out
jb
jbe
lods
fisttpll
int
jmp
rcll
cltd
and
lret
xor
push
mov
sub
ret
ss
ljmp
nop
popa
sarl
std
pop
pop
daa
push
sbb
inc
lahf
in
xor
xor
jno
mov
cmp
xchg
mov
cmp
mov
lea
mov
jmp
das
ss
ja
aam
or
sbb
movsl
ss
xchg
cwtl
imul
iret
and
sbb
mov
push
repz
push
mov
or
sbb
sbb
imul
mov
ja
fsubr
xchg
call
imul
pop
mov
mov
stc
js
sbb
push
js
stos
push
insb
divb
or
mov
or
xchg
sbb
and
pusha
loope
sub
imulb
pop
stos
cmp
je
push
xchg
sbb
mov
ja
fisubl
pop
cwtl
loop
push
out
push
mov
and
and
jnp
negl
cmp
stos
pop
push
psubusw
rcr
and
mov
xor
sbb
cwtl
pop
cmpsb
bound
cld
aam
std
add
int
addr16
mov
fildll
ljmp
rolb
sbb
or
push
imul
adc
mov
and
pop
lcall
bound
push
mov
sbb
nop
and
es
xchg
sub
and
jg
lods
jae
push
sbb
dec
or
je
xchg
fcmovb
add
arpl
xor
fsubs
or
cmc
adc
movsl
inc
incb
cli
adc
add
push
mov
pop
mov
daa
std
cltd
mov
push
mov
xor
push
mov
int
push
lahf
lds
or
xor
adc
mov
scas
dec
and
mov
sbb
inc
idivb
daa
je
fldt
cmp
pop
iret
int
ret
out
xlat
ds
pop
shlb
fucomi
mov
lea
icebp
test
push
fcoms
jnp
xchg
mov
hlt
adc
enter
jb
cmp
jo
fwait
xchg
and
dec
inc
insb
and
inc
in
or
jmp
add
pop
mov
lods
xlat
ja
enter
pop
ret
or
loop
sub
pop
pushf
push
add
and
pop
das
adc
mov
mov
jne
rclb
or
cs
arpl
adc
jp
shr
mov
iret
sbb
and
push
dec
lea
sub
xchg
mov
mov
xor
xchg
add
xchg
aaa
mov
idiv
inc
clc
testl
inc
subb
xchg
jbe
adc
aam
hlt
pop
stos
je
sarb
mov
movsb
mov
les
cmp
into
das
sarl
xchg
push
popf
dec
lahf
xchg
cmp
adc
xchg
lcall
lret
js
insl
lret
jl
and
inc
aas
pop
jno
xchg
adc
pcmpeqd
lock
scas
icebp
sbb
or
mulb
xor
imul
cltd
xchg
adc
mov
push
out
outsb
and
xchg
jne
in
fldz
add
rorb
pop
pop
sti
xor
adc
add
adc
jg
cmp
inc
add
jl
sbb
out
jg
fmul
es
das
test
sbb
clc
cld
sub
push
jns
mov
aad
les
mov
pop
dec
shll
ret
jecxz
fidivs
scas
sbb
xchg
or
fdivr
in
incl
or
xchg
inc
and
and
lcall
pusha
hlt
dec
sub
jae
fldenv
dec
das
mov
lods
push
pop
testb
inc
mov
mov
pop
lock
xor
or
pusha
outsl
outsb
lds
roll
or
in
ficompl
pop
cwtl
roll
mov
mov
push
out
mov
arpl
inc
jbe
lea
or
push
int
aaa
in
test
lock
lahf
jl
push
and
int3
aas
sub
xlat
push
fsubr
leave
pop
mov
repnz
mov
push
xchg
adc
aad
jg
cmp
jne
mov
xchg
sbb
push
push
notb
js
xchg
add
aam
mov
push
mov
xor
fimull
xor
ret
les
es
push
sbb
insl
int
in
enter
sahf
xchg
add
add
push
mov
and
add
push
movsb
aaa
push
mov
mov
in
pop
leave
std
outsb
push
rclb
mov
mov
dec
faddl
std
xor
xchg
xchg
cmp
jnp
adc
cmpsb
push
test
inc
out
decl
mov
or
inc
push
pop
push
xlat
cmp
sub
dec
mov
inc
aaa
outsb
push
xchg
push
or
sbb
xor
mov
pop
shl
fwait
mov
das
push
xchg
lahf
xor
mov
int3
mov
adc
hlt
cmp
nop
stos
inc
ss
in
loop
and
stos
cli
mov
jmp
xchg
jmp
cmp
jg
inc
out
xchg
repnz
inc
xchg
les
mov
ds
cwtl
mov
sbb
enter
aad
aam
int3
clc
lret
insl
and
lock
mov
push
and
cmc
insl
push
jecxz
xchg
fs
mov
xor
leave
jnp
xor
sub
fcomps
and
fsubl
dec
lahf
mov
mov
insl
sti
xchg
subl
int
lret
mov
mov
out
fs
das
sbbl
add
fidivs
loopne
int
dec
lds
mov
add
popf
mov
stc
or
push
inc
ds
arpl
and
dec
fsts
test
and
push
es
scas
mov
call
hlt
lsl
fwait
sub
rclb
jl,pn
inc
aad
inc
cli
lods
add
in
mov
lcall
cmpsb
add
popa
insl
inc
jnp
gs
push
dec
popf
andb
sarb
push
scas
addb
or
std
adc
dec
fmull
imul
lock
fcomps
in
jnp
mov
xchg
cmp
or
jge
lock
inc
mov
fsts
mov
pop
mov
xchg
mov
fyl2x
mov
pop
negl
mov
rcrl
pusha
movsl
data16
jo
xchg
lahf
xchg
loopne
mov
cmp
jae
push
jecxz
popf
pop
int3
pop
pop
fstpt
cs
nop
xor
inc
adc
test
lea
sbb
ret
incb
jae
test
orb
xor
int
cld
dec
and
stos
xchg
jns
sbb
inc
aas
push
addr16
ja
in
lret
cwtl
jae
es
mov
push
fnsave
insl
mov
and
dec
inc
pop
pop
push
mov
push
push
push
out
mov
cmp
add
xchg
sbb
dec
fstpt
cmp
int
inc
mov
test
mov
sub
pop
adc
pop
jb
ss
mov
jmp
adc
or
dec
mov
push
lods
jae
jmp
pushf
ss
xchg
in
std
clc
inc
push
lcall
dec
push
notb
imul
stc
mov
or
sahf
lret
cli
cmp
mov
daa
or
iret
push
les
mov
movsb
movsb
daa
add
mov
negl
notl
and
shrl
add
mov
add
icebp
inc
push
aaa
mov
sar
das
popa
fsubrl
je
add
cmp
cmc
lods
enter
mov
mov
xchg
pop
pop
cs
notb
mov
pop
mov
cli
mov
iret
xchg
aad
daa
ds
xor
out
fcom
inc
and
push
popf
decb
sbb
cld
sub
xor
mull
push
adc
mov
int3
dec
mov
jns
popf
push
sbb
bound
xchg
lret
cmpsb
pop
inc
shll
cmpsl
xor
sub
push
adc
jns
loopne
push
ds
mov
or
out
sub
icebp
fiadds
dec
cmp
push
pop
cmp
fbld
in
sbb
dec
aam
daa
stos
insb
sub
rcl
inc
push
sbb
pop
pop
jb
lods
jp
mov
lods
cmpsb
push
xchg
movsl
int3
into
lcall
adc
sub
out
daa
jle
sbb
icebp
lds
sbb
adc
outsl
xor
pop
mov
and
mov
cmp
mov
jmp
adc
in
pop
aam
int3
addb
shll
or
push
lods
lret
push
pop
inc
inc
adc
fs
mov
sub
fldenv
fwait
test
arpl
loop
or
add
push
in
aad
adc
inc
pop
int
mov
or
pop
lods
and
bound
inc
push
xchg
ljmp
sbb
cli
hlt
xor
cmpsl
les
fsub
mov
pop
stc
xchg
adc
scas
mov
jge
jbe
add
cmp
addr16
movsb
sub
bound
gs
popf
pop
cltd
add
outsl
pushf
add
xchg
xor
and
fs
sub
mov
jecxz
mov
outsl
mov
inc
repnz
scas
test
sbb
lahf
mov
and
mov
mov
sbb
xchg
test
pop
push
sub
stos
mov
and
adc
push
jne
or
je
inc
ss
xor
pushf
std
fisubrs
rorb
inc
scas
jle
inc
dec
inc
popf
lea
or
inc
stc
cmpsb
dec
mov
dec
mov
push
ret
adc
out
xor
adc
mov
mov
out
or
cld
loopne
pop
test
add
das
in
in
push
mov
mov
rorl
add
loop
enter
mov
push
ljmp
popf
stos
pop
inc
xlat
test
mov
mov
pop
dec
pop
xor
icebp
mov
das
in
shll
lahf
bound
mov
lret
push
pushf
push
rolb
push
repnz
clc
gs
sub
cs
add
push
fistpl
les
enter
cwtl
aad
xchg
std
pop
xchg
xchg
in
icebp
pop
xor
lcall
sti
sub
pop
xor
xorb
push
adc
and
and
in
xchg
cmp
loop
pop
clc
hlt
jne
adc
cmpsl
pop
adc
ljmp
ficompl
sbb
out
mov
and
cli
std
jnp
mov
or
adc
int3
pop
dec
shlb
adc
xchg
cs
fcompp
dec
lea
adc
in
in
movsl
sub
push
dec
stos
pop
mov
mov
movsl
jno
mov
pop
mov
rol
arpl
aad
add
adc
push
pop
sbb
jb
orl
push
pop
das
sbb
sbb
lret
cmp
mov
lods
cmp
dec
push
sti
mov
cli
andb
hlt
jp
outsb
jo
out
in
es
xor
xchg
test
fistps
pushf
adc
push
fcomi
in
in
icebp
test
cmp
fstps
cltd
aas
dec
or
sbb
lock
jb
iret
inc
negb
sbb
mov
cld
push
lea
or
test
cmp
cmp
movl
int
pop
dec
cmp
pop
inc
aaa
mov
fdivrl
sub
jb
push
mov
pop
dec
dec
adc
scas
cmpsb
cmpsl
mov
sahf
jb
lcall
pop
add
pop
xchg
fidivl
add
cmp
out
std
dec
push
loopne
decl
push
and
arpl
pop
scas
adc
inc
cmp
fwait
xchg
cmp
mov
xchg
clc
lock
enter
aas
and
mov
push
insl
adc
sti
mov
and
dec
cmp
mov
pop
sub
cmp
popf
into
cmp
xchg
jae
sbb
in
fidivs
repz
adcl
clc
data16
cltd
xchg
cwtl
mov
mov
pop
mov
mov
add
hlt
in
push
add
jl
fidivrl
push
jae
push
pop
andl
pop
xor
inc
in
push
xor
sbb
push
in
enter
jmp
fwait
fwait
inc
pop
cmp
xchg
push
jmp
cmp
sbb
fsubp
imul
xchg
inc
ds
out
cmpsl
pop
add
insl
xchg
or
sti
push
cmp
mov
cmp
lea
xor
subb
mov
jne
fistpl
shll
shrb
cmp
cli
sub
cmp
mov
jecxz
in
mov
sbb
rorb
test
cmpsb
or
jbe
cli
dec
hlt
lret
and
push
out
or
jne
inc
incl
and
mov
lahf
fmul
lods
and
aaa
test
insb
lcall
push
xor
mov
dec
sti
jmp
sbb
pop
sahf
dec
inc
les
lods
xor
ds
and
push
rolb
call
mov
pop
mov
sbb
sbb
mov
enter
push
push
add
xchg
lea
stc
out
cli
lock
out
cmp
xchg
loope
mov
sub
push
pop
push
in
lods
mov
and
pop
sub
movb
fs
rolb
jp
cmpsb
test
popf
sub
jae
xor
enter
testb
jecxz
fiaddl
mov
loope
dec
add
mov
enter
rclb
cltd
cmp
idivb
les
outsl
outsb
push
inc
or
and
leave
push
inc
bound
mov
in
push
fcomi
mov
inc
cmp
add
mov
das
mov
pop
popf
lcall
lahf
fs
icebp
enter
nop
sub
lea
popa
out
sbb
add
mov
rol
ljmp
push
mov
inc
int
ret
mov
inc
int
in
ljmp
les
gs
dec
add
mov
subb
addb
and
mov
adc
popa
mov
sbb
pushf
and
ds
cmp
xchg
inc
idivb
stc
mov
in
fistps
ret
push
mov
sbb
add
dec
jp
test
dec
sbb
imul
aas
clc
iret
xchg
test
pop
pop
leave
repz
roll
test
leave
mov
push
gs
cmp
ja
test
or
jbe
leave
pusha
adc
cmpsl
outsl
mov
insl
mov
adc
push
enter
scas
jmp
mov
dec
ljmp
pusha
xlat
and
cmpsl
dec
pop
mov
rorl
xchg
push
out
fst
add
inc
mov
inc
sub
shll
dec
and
jl
inc
or
aas
pop
add
pop
pop
xorb
cltd
outsl
dec
cmp
nop
jecxz
inc
flds
mov
negb
cli
insb
loop
cmpsl
sbb
lahf
jmp
shrb
add
outsl
push
repz
cli
movsb
mov
in
inc
push
scas
out
pop
int
push
fisubl
xor
sub
add
jo
jae
jmp
push
dec
lock
out
mov
lods
xor
cld
int
mov
daa
adc
js
xor
es
add
lods
repnz
negb
cli
mov
xor
or
test
push
push
psubb
les
mov
cmc
push
xchg
rorl
mov
cmp
mov
jbe
cltd
pop
les
mov
mov
sbb
push
sbbl
cmp
insl
sbb
add
xchg
jb
call
loope
in
iret
in
sahf
dec
lea
cs
pop
fdivrp
into
xchg
xchg
jle
sbb
popa
mov
push
call
xchg
mov
and
and
cmp
mov
out
out
dec
repz
roll
iret
jp
xchg
iret
jns
add
out
gs
out
dec
clc
lcall
mov
push
jnp
test
push
xor
ret
add
inc
sbb
pop
testb
push
andb
xchg
mov
sub
cmpsb
adc
sub
dec
sti
aad
push
dec
push
dec
lahf
ret
or
and
rclb
and
adc
mov
sbb
xchg
fstpl
jae
xchg
xchg
ss
pop
rolb
sub
and
out
ret
dec
ret
addr16
rclb
jo
out
in
inc
pop
mov
ljmp
daa
push
scas
imul
mov
movsl
pop
cmp
fsts
sub
xorb
inc
fidivl
shll
pop
xchg
jp
add
jne
js
add
movb
scas
sti
add
out
push
pusha
push
dec
test
dec
lock
mov
ds
das
cwtl
xor
mov
popa
adc
icebp
mov
lcall
arpl
repnz
inc
je
mov
inc
into
out
dec
dec
aad
out
pop
popf
outsb
mov
daa
movsl
pop
dec
mov
xchg
adc
mov
mov
add
lret
or
and
jnp
out
cld
inc
test
pushf
mov
pushl
sub
or
mov
jbe
jne
fistl
pop
pop
pop
int
stos
scas
cmp
lods
es
ds
or
fs
fisubrs
fwait
movsb
xchg
aad
insl
lret
data16
int3
mov
pop
xchg
lea
lea
mov
xchg
insb
test
lods
xor
insb
jl
bound
clc
int
push
mov
or
adc
mov
mov
add
xor
nop
jo
push
test
push
int3
add
dec
and
mov
int
js
xor
xor
mov
mov
cmp
js
xor
icebp
mov
divps
mov
jg
mov
push
push
mov
fnsave
cmp
lods
pop
xor
lahf
pop
xchg
cld
insl
cltd
rcl
push
fs
push
data16
movsb
add
mov
xor
jg
sarb
js
popf
jmp
adc
sub
xchg
jb
push
int3
lods
imul
gs
test
mov
addl
xor
and
add
jg
lcall
aad
xchg
sub
es
out
xchg
pusha
dec
dec
xchg
stos
aas
addr16
pushf
imul
mov
push
dec
lret
adc
cmp
inc
or
int3
js
lea
xor
xchg
fwait
scas
pop
push
mov
inc
mov
mov
mov
mov
or
rep
pop
rcrl
dec
mov
sahf
movsb
jge
xchg
mov
sahf
adc
and
xor
call
dec
mov
pop
push
out
pop
push
out
repnz
adc
aam
pop
stc
jno
mov
mov
int3
clc
add
xor
jmp
mov
mov
mov
mov
popa
inc
aam
xor
add
repz
es
insl
or
enter
mov
lahf
daa
movsb
add
mov
and
or
mov
adc
sbb
repnz
cld
inc
inc
and
pop
ret
inc
push
cmpsl
ds
int
xchg
in
lahf
jl
push
lcall
orb
push
and
inc
fbld
or
jecxz
test
call
les
das
ja
jle
popf
in
out
cltd
rol
cmp
inc
xlat
dec
loopne
push
mov
cmp
or
adc
mull
int3
loop
xor
cld
lods
stc
cwtl
pop
insb
fisttpll
and
loope
xchg
stos
shlb
add
rclb
adc
dec
mov
and
std
push
loopne
pop
mov
ret
cmp
cld
cmp
pop
insl
bnd
xor
das
pop
mov
mov
dec
add
fwait
mov
jno
mov
cmp
lahf
je
subl
pop
mov
or
xchg
xchg
out
ficoms
cmc
fs
movsb
push
iret
mov
pushf
and
scas
xor
sub
xchg
add
inc
subl
loope
dec
out
pop
jo
xchg
push
adc
pop
mov
shlb
jg
jecxz
into
insl
aas
pushl
out
mov
sbb
push
hlt
xchg
jne,pn
cmp
xchg
into
fldt
outsl
pop
inc
popf
xchg
rcll
jnp
test
and
pop
sahf
mov
mov
and
or
inc
xchg
ret
xor
pop
push
mov
jp
call
mov
fstpt
nop
mov
icebp
mov
fs
cltd
or
sbb
inc
loopne
test
sub
and
mov
lock
cwtl
loopne
push
sbb
push
mov
jle
push
mov
pop
pop
push
inc
xor
mov
clc
movsl
idiv
lcall
or
out
cmp
ret
mov
sub
bound
cmp
ret
aas
adc
jg
jg
rcll
into
jle
sbb
stc
mov
push
mov
or
push
and
push
out
add
dec
cmp
adc
rcll
push
rorb
adc
cmp
shrl
sub
loope
or
mov
pop
out
test
je
repz
popa
imul
jne
cmpsl
in
loop
and
and
hlt
or
sar
lret
shll
xchg
push
cltd
lret
mov
das
popf
and
push
jbe
imul
aaa
mov
loop
pushf
popf
mov
pop
ss
sub
pop
add
mov
imul
xor
add
pop
or
xchg
jne
in
idiv
inc
aad
mov
xor
out
cmp
jbe
fwait
sbb
pop
roll
add
mov
push
ja
mov
add
sub
imul
inc
sub
mov
xchg
pop
and
cmpsb
lods
jne
cmp
shll
fisubs
scas
or
and
jne
mov
jbe
in
adc
and
test
cmpsb
sbb
imul
leave
add
xchg
repnz
repnz
xor
std
push
pop
xchg
or
mov
mov
sub
jnp
add
jnp
pop
clc
call
test
repz
jecxz
jp
in
testl
inc
mov
xorb
jg
sub
xchg
out
add
pop
das
adc
jg
sarl
in
pop
les
jle
pushl
cmpl
cs
mov
adc
dec
mov
insl
test
or
cltd
test
mov
and
cmp
jno
sbb
jp
mov
pop
aaa
fsubs
mov
mov
xchg
xor
es
mov
fst
psubq
in
sbb
and
pop
push
push
sub
mov
cmp
mov
push
pop
or
xchg
movsl
arpl
xchg
dec
xor
mov
stc
sub
aad
repnz
ss
imul
decb
add
fisttpll
inc
js
lds
movsb
les
les
push
push
and
adc
inc
repz
lret
mov
lret
int
sbb
jg
sbb
sub
xor
mov
adc
xchg
xor
lods
mov
lahf
dec
scas
pop
push
in
inc
xchg
iret
jl
aam
cwtl
adc
jbe
inc
loop
popf
addr16
lods
or
push
and
mov
aam
sub
mov
sbb
jmp
mov
pop
sub
lret
jl
mov
rol
ja
shlb
add
adc
push
and
leave
inc
mov
pop
jmp
dec
stos
jmp
jle
or
das
ja
cmp
fisubs
push
in
out
into
pusha
or
sub
ljmp
jb
loopne
cmp
cmpl
loopne
test
int
into
lods
push
popf
ljmp
outsb
ljmp
mov
insb
fldenv
cmp
pop
das
dec
xchg
inc
add
popf
aaa
dec
cmpl
mov
daa
mov
adc
push
jg
mov
nop
lret
jno
pusha
pop
int
aas
cmp
cwtl
movl
cmc
repz
jp
sub
cmp
xchg
mov
sub
outsl
pop
mov
adcl
icebp
adc
mov
sbb
or
sbb
mov
aas
xchg
mov
ss
push
out
xchg
push
pushf
sbb
xor
push
pop
or
sbb
and
pop
sub
cmpsb
push
mov
les
psrld
iret
adc
es
cmovnp
outsb
pop
xchg
push
xchg
enter
nop
lret
dec
jne
call
dec
lret
xor
aaa
sub
pop
je
mov
ret
push
and
out
out
cltd
lcall
stc
faddp
cmp
lock
push
pop
add
jmp
insb
push
sub
notb
jo
inc
je
sbb
cmpsb
cmpsl
mov
sbb
push
scas
sti
cmpsb
ss
arpl
out
pop
in
mov
sarb
rclb
andl
sub
jbe
loope
cmpsl
ret
jnp
xor
inc
ja
jo
inc
enter
fsubrp
jnp
adc
xor
mov
push
cmp
aaa
lcall
xor
push
leave
sub
mov
cmp
push
sub
lret
aas
mov
mov
push
cmp
dec
and
xchg
ror
and
cli
and
lock
adc
ds
lods
inc
repz
les
pushf
in
int
inc
jb
pop
fnstenv
inc
cmp
inc
push
push
clc
dec
iret
fiaddl
pusha
sarl
out
fdiv
iret
inc
lret
cmp
andl
jo
adc
loope
add
and
jae
push
and
sbb
xchg
insb
in
jo
icebp
jno
xchg
jl
fcmovu
fmull
shll
xchg
scas
cli
xchg
stos
mov
xor
insl
popa
and
cltd
jge
sub
sbb
les
xchg
cmp
lcall
mov
add
dec
mov
jnp
sbb
mov
dec
push
or
insl
inc
inc
loop
and
push
jb
mov
pop
rol
and
in
pop
into
cmp
sbb
mov
sbb
mov
push
push
stos
js
mov
stc
mov
jo
sub
mov
or
adcl
add
out
push
push
or
stos
jno
arpl
jg
fcomp
leave
mov
cmp
cmc
call
pop
iret
or
mov
popf
hlt
push
scas
and
pusha
lahf
xor
xor
addr16
or
pop
or
push
mov
addl
icebp
test
cvttps2pi
nop
iret
popl
xchg
inc
inc
imul
sub
xor
sbb
mov
xchg
sbb
dec
mov
lea
enter
sbb
test
xor
shlb
xchg
and
ret
adc
sti
pop
imul
aam
lea
test
pop
push
imul
ja
xor
js
cs
lods
into
xor
mov
cwtl
testl
or
stos
into
add
adc
push
push
adc
popa
xor
mov
dec
pop
scas
lcall
mov
pop
jp
and
fwait
sbb
dec
cld
mov
xor
outsb
mov
orb
ret
and
rorb
cmp
out
call
fwait
push
sbb
jle
lret
imul
xchg
scas
sub
sub
insb
imul
xor
adc
movl
pusha
mov
sub
adc
lret
jo
dec
xchg
out
jp
ljmp
cmpl
add
mov
pop
das
add
push
push
out
aas
enter
or
out
mov
sub
pushf
or
pop
call
lcall
cli
cmpl
pop
jae
insl
or
sub
sub
aad
sbb
cmp
movsl
add
sub
pop
or
mov
jg
mov
fnsave
loope
imul
add
xchg
lea
insl
popf
inc
shll
jle
xchg
xor
in
jp
or
or
pusha
mov
add
push
inc
jg
sbb
aas
inc
int
lcall
and
iret
mov
add
sbb
add
or
jecxz
xchg
dec
xchg
xchg
rcrl
mov
jbe
pop
lods
roll
add
jge
or
test
leave
movl
xlat
dec
push
dec
xor
popa
mov
or
test
in
leave
push
aaa
popf
sub
push
lea
out
push
mov
pop
inc
icebp
sub
cmpl
or
stos
xor
call
movsb
int
call
stos
popa
dec
push
rclb
push
ficomps
xchg
stos
ret
cmp
pop
dec
or
xlat
cmpsl
std
data16
ss
mov
les
ficomps
scas
les
stos
cmpsb
xor
aaa
adc
jbe
sbb
pop
repnz
add
push
hlt
jnp
pop
sarl
rorl
subl
out
push
inc
adc
push
fisubrs
test
mov
push
or
sbbl
std
xchg
adc
jl
mov
imul
xor
xchg
out
movb
push
or
fistpll
inc
jl
and
sub
dec
inc
insb
popf
lods
and
je
fisubl
cli
adc
jnp
lock
lock
cld
or
rolb
repz
mov
ffree
nop
mov
iret
out
pop
fcom
fs
fsubl
mov
xchg
aas
out
in
sbb
shlb
int
mov
dec
jg
ds
fisubs
pop
daa
in
popa
out
mov
stc
aam
cmp
pusha
push
cmp
or
mov
cmc
mov
inc
cmp
frstor
mov
mov
lahf
cwtl
sbb
mov
mov
or
sub
arpl
call
push
hlt
mov
in
orl
lret
jl
push
out
mov
fists
or
je
les
xchg
pushf
loope
icebp
rsqrtps
fsubs
jo
inc
ds
jns
jge
jno
es
pop
inc
push
mov
sub
mov
xor
rclb
icebp
flds
mov
lea
jb
xchg
cmp
add
jecxz
fimull
ljmp
sub
sbb
jmp
and
jmp
and
and
mov
mov
in
into
clc
mov
std
aas
mov
repz
jmp
mov
cwtl
cltd
or
adc
cmp
dec
mov
enter
inc
xor
daa
and
inc
cwtl
sbb
sbb
loope
cmp
test
or
sbb
xchg
jmp
imul
sub
jb
lea
xlat
push
in
xchg
sbb
add
daa
test
jnp
int3
dec
sbb
push
jae
fisttpll
lea
call
mov
call
jno
jmp
outsb
sbb
add
dec
daa
jno
xchg
mov
xchg
adc
pop
xor
xchg
mov
xchg
fldcw
les
mov
loop
std
sub
pop
fiaddl
aam
mov
pop
mov
adc
push
sub
pop
adc
test
dec
insl
daa
out
jb
mov
sti
mov
jecxz
and
aam
aad
dec
das
mov
sbb
xchg
pop
lock
and
jecxz
es
hlt
out
es
and
clc
add
mov
mov
cmp
sahf
bound
jb
add
adc
push
sub
arpl
adc
mov
pop
jle
or
jo
xor
fs
lock
jg
pop
cmpl
and
fs
stos
test
sub
pusha
repnz
and
xor
jl
loopne
aaa
xchg
push
fidivs
xor
push
lock
cs
pop
adc
out
push
add
mov
gs
cmc
add
push
movsb
xchg
sbb
lods
jne
jno
jmp
xchg
mov
lret
or
jns
loop
test
pop
push
jl
jmp
mov
xor
push
jp
dec
notb
mov
jle
lock
lock
add
push
push
mov
pop
or
cmp
and
xor
jns
enter
sbb
xchg
mov
lods
xor
fcmove
cmc
stos
and
pop
xlat
pop
jns
jg
je
pop
push
fcompl
repnz
mov
dec
leave
adc
into
push
push
popa
pop
addb
sbbb
ss
notb
aad
movsl
xchg
push
cld
cmp
push
jnp
mov
icebp
cmp
sub
cmp
jae
pop
pusha
cli
sbb
insl
dec
iret
lods
sbb
rorb
or
fldt
mov
fwait
and
mov
pop
mov
pop
adcb
jge
add
xor
sbb
mov
gs
pusha
cmp
imul
pop
mov
sbb
rep
pop
jl
out
sub
push
andb
inc
in
das
pop
inc
outsl
outsb
jmp
out
mov
sub
xchg
push
jl
inc
pop
sbb
pushf
dec
cmpsb
fsubs
pushf
fstps
and
mov
jmp
xchg
aad
xor
incb
loope
jae
or
mov
pusha
xor
je
sbb
test
test
xor
push
aaa
test
lcall
pop
in
mov
std
std
push
jp
jmp
aad
mov
arpl
shl
es
lret
pop
add
mov
fcoms
stc
cwtl
mov
out
lret
ret
mov
push
cmpsb
stc
roll
in
shll
push
cltd
push
loop
mov
int3
mov
loopne
mov
xor
lret
pop
jne
jp
inc
xchg
push
orb
es
lods
jp
inc
sub
outsb
sbb
popa
int
xchg
or
ja
loopne
nop
jg
inc
adc
dec
ret
adc
cmp
jp
sahf
adc
jno
push
ja
push
scas
mov
out
jb
mov
add
mov
ss
pushf
push
cmp
insl
cmp
je
cwtl
ljmp
hlt
jmp
inc
movb
push
jae
pmaxub
push
add
jns
repnz
movsb
stc
lahf
and
sub
pop
mov
mov
push
into
xchg
gs
je
mov
jmp
dec
movsl
ja
xor
jmp
add
jnp
xchg
bswap
push
push
push
mov
xchg
lock
ficoml
hlt
nop
ror
cwtl
push
loop
and
push
push
call
inc
lret
jns
subb
cli
mov
mov
ret
loope
adc
addb
and
lock
cs
sub
in
cmpsb
inc
xchg
in
jl
sbb
xor
pop
lock
call
aas
cs
jb
mov
sbb
lret
test
cmp
mov
push
in
xchg
pop
f2xm1
es
cmc
aas
dec
mov
test
ret
jo
lock
sbbl
and
jp
movsb
insb
jnp
add
mov
mov
shlb
xor
adc
outsl
xchg
push
jp
xchg
add
xor
dec
mov
stos
xor
andl
jmp
out
add
rcl
push
xchg
into
pop
rcll
cmpsl
mov
bound
cmc
stc
cmp
clc
lahf
or
push
sbb
inc
lahf
adc
cmp
xchg
mov
xchg
aam
mov
dec
leave
fnstenv
dec
xlat
push
push
lret
sbb
into
add
sub
aad
dec
dec
xorl
aam
in
push
cmp
jae
adc
or
add
jecxz
sub
lcall
dec
cmp
pop
dec
jmp
cmp
xor
or
pop
loope
mov
add
addr16
ret
bound
mov
jne
push
loop
mov
fbld
ljmp
pop
jnp
and
rol
repz
jb
rcrb
push
mov
jo
pop
mov
ficoml
aas
je
js
cmp
adc
dec
lcall
insb
sarl
inc
xchg
ja
pop
jne
xor
fdivrs
mov
jecxz
adc
insl
inc
fistps
cltd
and
out
int
xor
data16
or
adc
aad
aas
cmpsb
int3
out
xorb
fistpll
jnp
in
imul
insb
sbb
mov
mov
xchg
mov
dec
push
push
fstpt
xor
lss
incl
xor
jae
xchg
mov
stos
les
pushf
cmpsl
icebp
jno
mov
push
adc
daa
dec
cmp
jge
jecxz
mov
lret
cwtl
sub
ret
sbb
clc
out
cmpsl
jne
or
in
dec
inc
test
out
call
jge
subl
out
cmpl
pop
inc
imul
or
add
cmp
call
mov
aas
mov
pushf
imul
loope
fisubl
icebp
arpl
int
call
pop
fiaddl
push
stos
rclb
mov
sub
xchg
sahf
je
sbb
cs
push
shlb
stc
mov
stos
iret
inc
mov
stos
add
stos
jp
push
movsb
aas
in
pop
xor
lods
insb
ficoml
mov
mov
loope
xchg
ficomps
adc
and
sub
xchg
std
mov
enter
imul
mov
mov
dec
sti
push
inc
xchg
popf
sahf
push
jbe
les
outsl
insl
jl
cmpsb
cmp
call
mov
inc
xor
jle
sub
or
lret
test
stc
jmp
inc
loopne
nop
add
mov
mov
lret
lcall
ret
hlt
daa
loopne
cli
mov
fcoml
cmp
pop
pop
pop
cmpsb
lret
mov
pusha
out
jg
dec
adc
mov
xchg
adc
outsb
mov
xlat
ja
jl
adc
mov
adc
push
pop
mov
push
sub
nop
mov
mov
mov
and
push
sbb
inc
pop
movsb
sarb
mov
cmc
movsl
in
out
jl
cwtl
xor
push
les
jno
mov
pop
fwait
xchg
mov
or
test
jmp
iret
cmp
pop
scas
cld
js
pop
pop
iret
add
or
mov
sub
rorb
adc
mov
fsubl
stos
arpl
fcmovnu
dec
ret
xor
pop
sub
test
bound
dec
movsl
stos
jns
fsubs
xchg
mov
adc
push
fisttpll
cmpsb
fistpl
mov
mov
or
mov
mov
cltd
push
push
stos
bnd
mov
inc
dec
mov
in
aaa
cli
jo
mov
arpl
rorb
lds
in
add
xchg
and
out
xchg
push
ret
adc
pop
call
iret
push
pusha
shrl
movsb
sub
jg
mov
add
or
push
jge
push
adc
jp
sbb
push
jge
sub
rclb
bound
mov
mov
and
xor
imul
add
ljmp
or
test
movsb
dec
outsl
movsl
push
adc
das
shrl
xor
rcrl
in
and
inc
fdivl
push
lea
hlt
cmpsb
xor
or
xlat
cmp
pop
xor
enter
sub
xor
out
pop
lds
or
jne
hlt
mov
pop
pusha
jle
or
adc
in
jne
dec
add
fisttpll
jo
in
fcoml
int3
jecxz
loope
js
jecxz
ja
aam
aad
and
or
sbb
and
mov
xor
decl
sarl
or
les
out
rclb
adc
in
in
out
scas
inc
ficomps
loope
fdiv
lcall
fidivs
icebp
sbb
sub
lahf
pop
mov
fbstp
scas
push
rolb
les
shrl
out
lods
sub
cmp
jns
and
jg
or
cmpsb
sbb
sub
or
lods
push
lahf
test
and
push
or
or
sub
inc
pop
andl
pop
inc
push
out
leave
lahf
mov
push
lahf
fstps
jp
or
add
bnd
in
sbb
xchg
fistpll
and
lcall
mov
mov
mov
fxch
enter
adc
pusha
nop
jge
or
in
cltd
fimull
adc
push
iret
jae
xabort
ret
jp
out
pop
jo
jb
dec
adc
orl
jo
jbe
ffree
test
mov
scas
cli
inc
xor
xchg
ss
leave
xor
sbbb
jb
sti
fwait
rcll
xchg
sbb
mov
daa
iret
pop
xchg
sub
jecxz
lret
cs
ljmp
mov
mov
popa
adc
es
sub
lea
idivb
cltd
mov
mov
lods
mov
add
scas
iret
jae
adc
cmc
cmp
hlt
arpl
xor
std
aas
ss
inc
mov
adcl
mov
mov
mov
data16
mov
hlt
loop
aad
pop
push
in
sbb
lock
sub
in
mov
mov
mov
mov
xchg
jbe
shll
mov
add
or
mov
ljmp
xchg
lret
out
js
add
test
fisttpl
shll
push
gs
xchg
test
xor
mov
sbb
and
fnstenv
in
dec
cmp
mov
in
outsl
push
out
imul
fnstsw
jnp
mov
sbb
jp
mov
jo
mov
lds
stc
add
mov
cwtl
sub
in
jo
loopne
ret
inc
jbe
add
incb
inc
jae
sub
xchg
je
push
icebp
jae
rcl
mov
lret
cmpsl
cld
mov
sub
js
xor
xchg
fcoml
cltd
mov
cwtl
daa
mov
push
cmp
fsubrs
pop
push
xchg
in
out
mov
or
repnz
dec
jo
cmp
repz
push
pop
xor
mov
add
subb
loop
and
sbb
sub
xchg
mov
or
repz
add
sarl
lock
xchg
outsl
sahf
or
push
lock
lret
xor
cwtl
cmp
mov
int3
pop
add
les
addr16
lcall
dec
ds
test
mov
out
imul
popa
cs
adc
subb
lret
je
cmpsl
mov
fisubl
sub
in
xchg
scas
pop
push
fisttpl
dec
jmp
stc
push
in
out
adc
jg
lods
aam
int
lods
inc
mov
jg
jp
out
mov
nop
aaa
enter
cltd
ljmp
sahf
jo
insb
sub
cmpsl
mov
mov
fwait
lods
fdivrs
push
mov
xchg
push
jecxz
dec
out
fiadds
cmpsl
loopne
ret
jnp
aam
cmp
stc
fwait
lret
divb
aad
or
or
pusha
mov
ljmp
jge
adc
ja
je
mov
mov
push
dec
test
mov
xchg
outsb
inc
repnz
push
aam
lcall
cmp
jne,pn
or
cld
cmp
mov
sbb
popa
movsb
fs
inc
icebp
pop
fimuls
mov
and
mov
arpl
dec
mov
mov
in
popa
mov
or
outsb
test
fnsave
inc
add
push
stos
lcall
pop
xchg
fstpt
xor
repnz
jae
shlb
adc
in
push
mov
dec
mov
aad
scas
mov
cmp
mov
jnp
lahf
mov
je
out
sub
fiadds
fbld
dec
fs
pop
scas
xor
and
dec
cmpl
ljmp
das
rorl
pop
sahf
in
fpatan
xchg
lds
pop
mov
xchg
inc
pop
jb
jl
subb
cwtl
arpl
jnp
call
scas
add
stc
mov
inc
repz
es
call
ss
pcmpgtw
jb
sub
push
xchg
std
adc
jle
aad
jb
nop
fnsave
pop
mov
inc
adc
jne
dec
jnp
sahf
fadds
mov
test
mov
xor
pop
inc
xor
inc
xchg
test
and
fildl
push
popa
ja
mov
sbb
xchg
jmp
jno
mov
jge
in
xor
xchg
scas
insb
mulb
mov
push
mov
mov
jp
fildll
and
or
mov
sub
mov
xchg
mov
push
ror
sub
cmp
cmp
lea
loopne
mov
jnp
int3
repz
mov
gs
ljmp
or
shrb
iret
clc
cmpb
fiaddl
and
stos
xchg
mov
xchg
in
xor
and
jg
sarl
popf
adc
jg
adc
sahf
lret
je
cmp
stos
stos
jg
pop
call
or
insl
mov
insb
push
xchg
lret
add
sbb
ds
ds
pushf
inc
push
jnp
fildll
mov
sahf
mov
inc
and
lcall
xchg
pop
lahf
jb
push
push
inc
push
dec
cmpsl
pop
mov
xor
push
rcrb
iret
aam
xchg
rcll
popa
mov
cmc
inc
sbb
rcl
jnp
dec
lahf
scas
outsl
lds
xchg
jp
jg
fwait
cmp
and
dec
movsb
push
mov
fdivs
cmp
es
push
mov
popa
jo
fbld
pop
sbb
and
out
inc
scas
jmp
mov
jle
vmovd
xor
push
inc
rorl
in
lds
addr16
lahf
dec
jecxz
popa
cmpsl
or
stc
cmp
push
mov
mov
movsl
inc
out
mov
adc
imul
shrl
mov
mov
adc
maskmovq
imull
inc
push
loop
ds
xchg
mov
mov
cmpsb
inc
ljmp
mov
xor
gs
push
push
xlat
leave
das
hlt
jmp
push
jge
stc
ja
mov
out
dec
cmp
dec
mov
push
movsl
mov
ljmp
lret
sub
sub
ret
xchg
cmp
sbb
dec
popf
leave
fisubl
scas
inc
sbb
fsubrl
jmp
loope
or
and
sbb
cmpsl
cmc
bound
filds
rep
jmp
and
sahf
lods
sahf
into
xchg
cmc
icebp
xchg
and
inc
mov
adc
xchg
insl
dec
mov
dec
sar
or
cmp
add
mov
test
xlat
or
sbb
cmp
xor
loope
sahf
in
mov
sub
xchg
dec
push
xchg
pusha
cltd
ja
adc
jl
cmp
sbb
xorb
sbb
adc
rcl
sbb
add
xchg
add
loop
cmc
jne
adc
push
lret
sbb
mov
ja
aas
or
fnsave
dec
jmp
test
fwait
test
and
fldenv
popf
pop
dec
pushf
sbb
mov
movsl
xchg
mov
in
jmp
shll
sti
rcr
in
iret
add
fsub
push
or
sub
mov
fdivl
arpl
add
movsl
stos
out
aad
xor
rep
repz
out
mov
ror
mov
lcall
adc
insb
and
clc
add
mov
scas
cmp
test
in
and
rcl
pop
stos
ret
pop
sbb
dec
fbld
shl
mov
mov
fucomip
std
dec
bound
push
ljmp
loopne
ret
fbstp
xchg
xchg
addl
outsl
aaa
cmpsb
inc
xor
pop
sti
scas
mov
and
cltd
mov
inc
mov
imul
out
sub
dec
push
adc
es
sub
cltd
ljmp
fldl
xor
popfw
les
xor
negb
add
addr16
hlt
add
adc
sbbl
adc
xchg
xor
mov
sub
adcl
inc
add
repnz
in
dec
mov
or
ds
out
and
arpl
data16
add
clc
leave
lea
dec
pop
leave
scas
loop
repnz
outsb
and
push
jae
mov
insl
pushf
es
push
pop
rclb
cmpsb
les
mov
pushf
inc
sbb
mov
sti
adc
cmp
rcrb
dec
xor
dec
sub
repz
dec
call
cmp
mov
dec
out
pushf
jbe
popf
cmp
lcall
cmc
je
shll
xchg
add
mov
aad
mov
movsb
mov
inc
aam
lea
jno
lret
mov
push
sub
sahf
and
push
jno
subb
popa
ret
push
push
ffreep
lds
sbb
xchg
mov
jecxz
repnz
pop
mov
xchg
test
pop
fmulp
xor
pop
mov
or
mov
cmp
inc
scas
ljmp
arpl
test
imul
gs
loope
outsb
ja
shrl
cmp
div
daa
pop
mov
pop
inc
out
lock
inc
push
add
jns
xlat
jg
out
lock
push
enter
rcrb
ljmp
inc
push
or
idivl
jbe
das
sub
repnz
das
repz
inc
popf
cmpsl
lcall
dec
cmp
dec
jo
das
das
xchg
push
leave
xor
push
jnp
mov
repnz
incb
mov
dec
inc
sbbl
mov
sub
xor
inc
fwait
leave
imul
lret
jnp
insl
iret
mov
push
or
in
xor
jno
cmp
rorb
sbb
pop
xor
and
mov
mov
push
pusha
push
xchg
xor
pop
outsl
lcall
and
fwait
inc
les
outsb
dec
mov
scas
or
mov
push
ret
flds
icebp
sub
xchg
mov
jb
add
push
push
lods
push
cmp
sub
in
std
xlat
ret
add
add
xchg
fiadds
je
add
pop
jl
cli
leave
adc
inc
divb
mov
aaa
add
dec
mov
adc
lods
lods
mov
add
mov
test
outsl
insb
jbe
mov
iret
inc
mov
mov
movnti
mov
cmp
mov
cmpsb
rcll
enter
daa
cwtl
fs
call
pop
push
jle
and
and
loopne
pop
scas
mov
sub
scas
mov
inc
xor
lret
or
into
or
lock
sub
into
jo
push
orb
iret
or
out
in
mov
mov
or
cmc
incb
sbb
pop
push
fldenv
ret
add
lock
dec
xor
jmp
das
xor
dec
mov
inc
cmpl
imull
insb
sub
push
orb
pushf
rcrl
xchg
in
adc
jno
adc
xor
push
testb
fwait
sub
cld
std
pusha
inc
dec
inc
sub
push
cld
jge
mov
ja
mov
mov
les
pop
push
sbb
xchg
loope
pop
sti
and
push
xchg
mov
loope
stos
xchg
mov
cmp
das
adc
push
adc
mov
out
adc
jne
sub
notb
icebp
andl
fstl
add
dec
mov
out
mov
aad
add
test
inc
rcl
icebp
pop
call
fnstenv
jl
mov
mov
mov
dec
and
movsb
mov
cwtl
or
mov
jbe
shlb
pop
insb
sbb
pop
xlat
push
lods
inc
ficomps
mov
xor
mov
or
subb
es
push
ja
mov
sub
stos
call
push
rolb
sub
repz
adc
mov
arpl
fimull
into
mov
popf
aas
push
sub
jne
or
or
push
mov
arpl
mov
push
jo
xor
fcomps
dec
mov
push
adcb
push
sbb
arpl
pusha
xor
sub
call
mov
mov
pushf
and
jle
mov
pop
scas
and
pop
imul
rcl
aaa
push
mov
sahf
cltd
loopne
adc
lds
mov
sbb
dec
jne
pop
insb
je
inc
out
movsl
out
divb
adc
mov
sub
ret
ds
ret
pop
push
push
inc
and
data16
jae
push
repnz
les
hlt
adc
repz
push
mov
sub
shlb
and
in
rorl
jge
push
shr
xor
lret
insl
xchg
xor
loop
adc
jnp
adc
sub
std
push
adc
popf
jp
mov
or
mov
cmp
xor
pop
inc
xor
fimuls
sub
adc
dec
int
push
add
stos
and
popf
or
jmp
mov
inc
push
fidivl
adc
test
sbb
jle
in
lods
add
jno
push
and
je
push
inc
sbb
out
jle
bound
lock
mov
dec
aad
addr16
insl
aas
jne
call
sub
cmp
aam
mov
movsl
arpl
xor
ret
xor
into
dec
lret
shrb
orl
movsb
insl
mov
outsb
loope
test
xor
inc
enter
sub
or
pop
int3
mov
cmpsb
jo
in
jnp
idivb
pop
cltd
cmp
das
stos
jg
cmp
pop
dec
imul
shl
mov
mov
xchg
cmpsl
pop
jbe
pop
lods
popa
jne
xor
mov
out
mov
sub
adc
xor
sahf
enter
add
dec
dec
xor
test
les
in
lock
cmp
bound
cli
popa
es
pop
push
cmp
movsb
pop
pusha
ret
adc
rcrb
js
lret
popa
dec
pop
jne
addb
or
push
test
xor
sub
adc
add
iret
add
rorl
mov
rolb
xchg
fnstcw
pop
xor
pop
int
xchg
add
idivb
add
sbb
cmp
mov
mov
insb
stos
jge
xchg
gs
cli
fidivrl
lcall
sbb
push
or
jle
pop
popa
push
adc
push
fldl2e
cli
mov
ds
xchg
fnstsw
sub
aad
dec
xchg
rcr
pop
sub
imul
je
loope
inc
pop
movsb
clc
adc
mov
mov
iret
je
xchg
inc
jge
jl
mov
mov
sub
in
mov
loope
mov
call
lock
jl
add
mov
sbb
daa
add
sti
jg
mov
inc
cmp
in
pop
aad
sbb
neg
repnz
push
push
jbe
and
inc
sub
mov
push
push
cltd
jge
nop
mov
fnsave
data16
jae
das
mov
out
mov
out
lahf
stos
fsub
xchg
mov
insb
dec
xlat
mov
sub
loopne
mov
mov
push
sub
clc
scas
mov
fsubr
add
pop
aas
cmp
mov
cmp
iret
xor
in
jmp
xchg
cwtl
mov
std
xor
xchg
movb
dec
lods
adc
int
xchg
push
popa
jg
lret
inc
xlat
andl
push
add
pop
or
jg
xor
jle
inc
bound
sub
jbe
stc
andl
adc
cs
xchg
and
adc
push
dec
sub
jge
xor
cmpsl
lahf
sub
add
push
insb
scas
lea
in
xor
fildll
add
inc
sbb
mov
repz
jno
repnz
mov
pop
out
jl
int
sbb
fmulp
lcall
rclb
push
loopne
test
imul
xchg
mov
inc
xlat
jp
adc
jno
scas
xchg
dec
daa
cmpb
add
sbb
lods
shll
jae
xchg
sbb
and
xlat
repnz
xchg
cltd
push
sbb
mov
xchg
icebp
hlt
adc
and
dec
mov
das
jns
mov
xlat
add
scas
ret
loope
xor
inc
mov
lea
dec
and
and
xor
jne
inc
jno
pushf
sbb
mov
aam
dec
mov
test
cmp
push
mov
push
mov
or
and
mov
dec
sbb
mov
js
sahf
xorl
push
ss
dec
lods
movb
pop
sub
shrb
shrb
lcall
and
push
fsubs
test
or
adcl
mov
loopne
into
pop
into
movsl
dec
shr
xchg
lock
dec
push
mov
aaa
inc
ret
xor
adc
movsb
dec
add
mov
out
mov
pop
inc
mov
push
sahf
and
xor
out
mov
stos
push
cwtl
rcrl
inc
aas
mov
xchg
dec
xchg
icebp
dec
and
in
les
mov
cmpsb
mov
loope
sbb
fisttpl
repz
cld
in
cli
aam
inc
adc
pop
std
data16
popa
sti
outsb
addr16
push
mov
leave
sub
adc
inc
adc
imul
lcall
sub
fstps
push
push
push
or
negb
mov
out
insl
sbb
sbbl
adc
dec
inc
mov
mov
test
insb
rcl
fisttpl
xor
int
pop
enter
jg
push
ds
push
leave
movsl
leave
stos
outsl
arpl
dec
jns
mov
rol
sub
jle
mov
mov
mov
outsb
nop
xchg
rcl
pop
andb
addl
or
sbb
or
and
sub
adc
rcrb
inc
xor
hlt
mov
lds
pop
mov
mov
sub
add
int3
pop
sub
jmp
pop
push
xor
or
gs
jl
sub
jbe
js
ja
fnstsw
bswap
jns
mov
inc
and
lcall
push
arpl
fldcw
loop
xchg
pop
cli
inc
repnz
imul
jae
pop
scas
jp
xlat
add
add
out
fimuls
mov
push
fidivrs
xchg
data16
shl
xor
arpl
movsb
iret
popa
inc
fscale
movl
jge
std
fwait
js
add
rorb
fsubl
fmull
popa
stos
or
ret
and
cmp
push
mov
fnstsw
push
and
and
xchg
addr16
in
imul
icebp
sub
insb
loope
xchg
fldenv
mov
call
ljmp
inc
jecxz
shl
mov
xchg
aam
adcb
cmp
inc
int3
jbe
cmc
sub
pop
dec
xor
sbb
int3
nop
sar
inc
mov
jp
push
add
sahf
mov
mov
xor
movl
sahf
push
pop
nop
push
add
push
xchg
jae
stos
mov
fidivl
and
xchg
xor
and
addl
aas
sbb
dec
imul
xchg
sbb
jmp
inc
dec
lods
cmp
push
jae
mov
repz
test
jne
scas
jno
pop
and
inc
mov
repnz
inc
cmp
movsl
jle
inc
pop
mov
sti
cld
sti
pop
jne
popf
test
in
cmp
leave
test
pop
in
lods
inc
out
sub
loope
lock
das
mov
jg
xlat
outsl
xlat
int
lds
or
sbb
jecxz
bt
xor
add
dec
jae
rcrl
outsl
adc
popa
pop
mov
loope
notl
cmpsl
mov
mov
ss
pop
loop
inc
negb
insl
pop
adc
stos
dec
adc
pop
push
xchg
shlb
mov
adc
mov
cmpsl
or
jmp
dec
push
mov
adc
outsl
mov
ret
sbb
dec
cld
push
dec
fistps
scas
fwait
je
mov
imul
mov
inc
xor
shrb
lahf
aas
cwtl
lea
enter
xor
mov
stc
or
jns
sbb
jo
cltd
pushf
push
and
jb
sahf
aas
xchg
adc
test
and
sub
mov
push
lock
pop
sub
mov
es
scas
loope
jp
fdivrs
jecxz
mov
push
nop
loopne
sahf
mov
adc
cwtl
ret
push
cmp
mov
sub
fiaddl
jmp
scas
inc
mov
jmp
jecxz
or
fcomip
mov
rcrl
iret
cli
sub
insl
loope
pop
mov
iret
push
inc
mov
cmc
fidivl
or
pop
iret
inc
cmp
push
popf
ss
testb
int
add
or
fadds
xor
xchg
test
bound
push
insb
loopne
mov
arpl
fadd
orl
sbb
mov
pop
shlb
ds
dec
cld
scas
les
push
scas
test
mov
jae
lcall
divl
imulb
insb
out
mov
add
dec
sti
inc
push
sub
out
pop
push
dec
or
sub
loope
jp
dec
dec
mov
mov
sub
arpl
sbb
sub
ficoml
in
jmp
sahf
mov
mov
push
and
pop
mov
or
xchg
pusha
faddl
push
cmp
or
call
add
imul
in
adc
stos
mov
sbb
mov
loopne
push
jnp
inc
inc
cwtl
mov
inc
out
gs
pop
icebp
icebp
ror
movsl
daa
subb
movl
xchg
pop
lods
dec
sahf
sbb
dec
xchg
mov
inc
popl
mov
rolb
dec
cmpsb
icebp
push
push
loope
inc
adc
push
push
pop
mov
fldt
push
inc
add
mov
push
xor
loope
mov
lret
sahf
popf
jno
xchg
movsb
loope
mov
neg
mov
pop
test
jns
scas
mov
cmp
rorl
cwtl
mov
pop
jp
fsubrs
adc
stc
xor
fcmovbe
lret
pop
adc
sbb
push
xor
fsub
mov
and
add
aas
outsb
cld
int3
pusha
imul
push
mov
icebp
outsb
test
mov
xor
out
std
xchg
inc
cmp
arpl
les
and
mov
jle
add
jecxz
push
shll
cmpsl
in
lret
xchg
jne
inc
in
cwtl
mov
stc
aaa
or
cmp
push
ficoms
and
and
shrl
and
repnz
arpl
loopne
xor
test
xchg
adc
rcr
inc
sbb
xor
pop
or
inc
ret
xor
setp
lods
mov
mov
dec
lcallw
pusha
push
push
cmp
push
push
sti
jle
add
mov
mov
and
xor
pop
xor
inc
subb
cltd
pop
sbb
push
lret
push
pop
into
mov
xchg
out
push
sbb
inc
lahf
test
push
fildl
sub
and
add
stos
sbb
xchg
mov
movsb
int3
in
and
mov
cmp
lret
xor
js
loop
fwait
mov
jnp
movsl
mov
fidivrs
cmp
pop
push
sub
iret
cmp
push
mov
xlat
lds
repz
shl
ja
add
ja
push
stc
push
xchg
lods
cmp
mov
fwait
fwait
pop
cmp
lock
push
sub
fidivs
adc
dec
add
icebp
cmc
fmuls
outsl
pop
and
mov
jecxz
sub
push
cmp
sub
hlt
scas
jle
or
push
mov
mov
addr16
sub
daa
movsl
push
fistps
sub
pop
mov
pusha
es
jge
mov
push
and
push
push
add
rcrl
inc
pop
mov
std
jge
jle
je
inc
inc
jb
add
push
into
test
xlat
shlb
mov
cmpsb
push
flds
pop
fwait
test
scas
mov
fimuls
repnz
sbb
sahf
inc
arpl
mov
xor
in
icebp
pop
xchg
jle
push
test
outsl
into
insl
arpl
jb
mov
push
out
xor
push
loope
lock
fcoms
leave
pop
dec
or
pop
jg
sbb
push
loop
dec
loopne
fimull
adc
fistpll
lds
push
mov
jp
lret
cltd
or
mov
jg
or
cmp
and
and
sbb
and
push
popa
outsb
loopew
outsl
jno
xor
fidivs
gs
adc
hlt
push
shlb
add
idivb
loope
stos
xchg
xor
pushf
mov
jl
lock
xchg
sub
add
into
test
sbb
or
ja
or
jnp
stos
mov
push
push
jp
jmp
imul
mov
jmp
dec
mov
jmp
push
adc
pop
lock
in
push
test
scas
push
shlb
dec
std
xor
arpl
jnp
popf
rcrl
pop
pop
rclb
clc
pop
fs
idiv
or
ret
mov
inc
shll
mov
insb
dec
jmp
pop
adc
insb
fldcw
into
pop
mov
ljmp
mov
cmpsl
jbe
pop
push
mov
and
subb
int
cltd
incb
js
add
push
dec
mov
sub
fbstp
dec
mov
icebp
into
adc
pushf
loope
cld
dec
cmpsl
adc
mov
cmp
and
inc
bound
add
push
fistps
fdivrs
xor
dec
cmp
or
cmpsl
push
xchg
sub
fsubrs
fs
add
not
mov
jb
addb
cltd
inc
mov
sub
js
adc
outsb
pop
lahf
xor
iret
fisubrl
sbb
pop
nop
cmp
subb
aaa
shll
fcomip
jle
jnp
xor
shl
int
aam
out
aad
cmp
aam
adc
lods
pushf
sub
loope
and
or
mov
ja
fidivs
jl
jmp
jge
pop
sbb
cmp
dec
imul
je
ljmp
xlat
hlt
mov
cltd
cld
mov
jo
jo
pop
dec
fimuls
mov
or
inc
and
mov
test
repnz
loop
xor
mov
dec
xchg
xor
in
icebp
paddsw
xor
cwtl
mov
sbb
lock
adc
ljmp
xlat
or
aas
adc
lods
push
or
fnstcw
filds
bound
xchg
pop
cmp
lret
int
insb
negl
ss
pop
fnstcw
scas
cmp
aas
nop
sub
xor
pusha
xor
mov
loop
fwait
or
jnp
lock
dec
xor
stos
lahf
daa
shll
adc
aad
mov
dec
test
add
cmp
mov
ljmp
enter
xchg
mull
aam
lcall
ja
icebp
mov
dec
in
mov
cmp
mov
xor
fwait
sub
dec
or
aam
stc
pop
mov
sbb
ftst
dec
into
aad
test
and
xor
sti
arpl
mull
cmpl
dec
jae
dec
cmp
cwtl
outsb
jecxz
dec
mov
dec
fisubl
push
popa
lahf
std
push
fiadds
mov
mov
jbe
jle
push
and
incl
sbb
dec
inc
addr16
rol
je
testb
sbb
mov
es
add
inc
loopne
xor
lret
ret
es
or
jmp
das
xchg
mov
jl
jmp
mov
mov
das
xchg
outsl
xor
xorl
cmpsl
mov
cli
lods
sbb
lahf
mov
aad
mov
cs
jo
inc
stos
cmpsb
sub
cltd
leave
orb
fwait
decl
mov
sbb
adc
xchg
dec
mov
test
cwtl
mov
jb
xchg
xchg
stc
lock
out
pop
sbb
or
push
lock
dec
push
push
add
pushf
xchg
inc
add
cmp
pop
ss
adc
pop
mov
stos
sub
pop
inc
std
nopl
loope
push
and
nop
movsb
inc
inc
add
sbb
addr16
inc
jns
std
std
shl
mov
push
in
repz
jo
sbb
sub
push
out
sub
dec
aas
bound
adc
mov
les
cld
test
ss
inc
pavgw
pop
pmulhw
xchg
or
and
push
jp
xchg
jne
shl
or
pmaxub
out
xchg
rcll
inc
push
or
scas
lds
xor
mov
or
pushf
xchg
push
mov
je
xchg
in
cmc
sub
jo
adc
fwait
adc
or
repz
dec
leave
adc
inc
dec
pop
xchg
mov
rorl
jo
or
add
pop
adcl
into
repnz
iret
mov
mov
mov
add
mov
aad
imul
xchg
sub
aas
leave
std
cmp
cmpl
cmp
mulb
and
les
mov
xchg
cmp
adc
xor
mov
int
jae
pop
sub
data16
and
lods
dec
inc
stc
or
movsb
inc
aaa
pop
xor
jle
imul
jp
clc
jb
xor
and
repz
add
scas
push
jo
test
pop
mov
pop
push
cmp
loope
movb
jne
lods
mov
mov
outsl
push
mov
xor
arpl
dec
xchg
sbb
xor
dec
jns
adc
sub
aaa
pop
aam
xor
mov
int
dec
push
iret
dec
scas
aam
xchg
push
mov
and
sti
fidivrs
mov
mov
icebp
movsb
fwait
mov
leave
jns
jl
loope
pop
popl
jnp
out
or
pop
scas
push
mov
sub
xchg
mov
mov
xor
addr16
xchg
cmp
imul
lock
lahf
int
jo
push
iret
mov
inc
cmp
aaa
movsl
out
mov
jl
mov
mov
dec
mov
and
push
mov
into
stc
dec
push
sub
hlt
fisubrl
pop
inc
movsl
xlat
jns
cmpb
cmp
xor
shrl
xor
lock
divb
adc
dec
jg
sub
lret
push
movsl
mov
sbb
fdivl
mov
dec
add
xor
pop
sbb
adc
mov
sub
mov
ds
push
incb
pop
jg
out
inc
push
and
in
call
es
pop
sbb
cmc
lods
jge
jmp
rcl
clc
xor
mov
mov
dec
add
rcr
adc
mov
inc
cmp
neg
andb
mov
inc
into
in
stos
jns
arpl
test
xchg
inc
jp
int3
push
ds
adc
icebp
mov
data16
xor
jbe
mov
push
mov
ror
lahf
iret
mov
rolb
xchg
or
fiadds
mov
inc
or
in
sub
pop
xchg
scas
fsts
lret
fwait
mov
adc
rorl
push
jbe
daa
sti
out
adc
xchg
xor
repz
lock
andb
rcr
and
arpl
or
popa
and
or
dec
out
int
xchg
dec
fcomp
jg
pop
inc
rolb
or
pop
or
pop
dec
push
ret
jecxz
ret
adc
stos
xor
xor
mov
fs
ss
dec
jae
add
in
add
and
mov
mov
sbb
adc
out
fdivrs
adc
movsl
inc
mov
cwtl
aad
or
sahf
into
push
inc
fwait
mov
pushf
shll
xor
lds
jg
icebp
shrl
test
and
inc
std
mov
lods
fisttpl
xor
add
jmp
fldl2t
es
fs
pop
push
and
and
xchg
test
or
adc
int
jle
sbb
insb
add
out
loopne
lret
fsubrl
add
sub
xor
push
cmpsl
movsl
sbb
pop
loop
test
das
call
or
jle
aas
mov
loopne
and
push
jae
cmp
xchg
inc
scas
jecxz
out
gs
cwtl
add
cmpsb
mov
shlb
adc
push
call
xchg
les
fucomip
xchg
xor
call
mov
repz
pop
shr
pop
push
mov
jge
pop
adc
sub
or
xchg
std
imul
ss
xchg
aad
cmp
push
sbbb
jo
cs
push
or
xor
jmp
and
jae
loope
mull
ja
add
fwait
sahf
stc
mov
rcrl
int3
mov
aas
sbb
dec
dec
lea
cmpb
pop
xchg
xor
je
sub
push
rcrl
repz
sub
and
sbbl
sub
cld
rcrl
mov
and
push
mov
dec
cld
leave
fimull
sbb
insl
js
xlat
shll
cli
inc
hlt
call
in
out
lret
pop
jle
cli
popf
pop
xor
pop
mov
inc
push
out
cmp
xchg
dec
pop
data16
cmp
aad
or
or
pop
jb
adc
ds
insb
lret
mov
fsubrl
push
lods
pop
and
or
ja
cmpsb
inc
out
inc
jnp
xchg
aad
cmc
push
push
imul
stos
cld
lods
mov
repnz
stos
mov
jne
mov
insl
movsb
xor
rclb
bound
inc
jl
std
inc
mov
push
cld
leave
inc
mov
jge
push
pop
in
push
dec
fisubrl
mov
fldcw
daa
ja
xchg
lock
sbb
idivl
not
dec
jno
out
cmp
and
sbb
mov
mov
in
pop
lock
jns
pop
fildl
xchg
lretw
aam
mulb
test
mov
mov
cltd
or
movsb
pop
rol
add
and
xchg
xchg
movd
xor
and
fmuls
in
push
fcmovnu
jl
inc
adc
jo
fldenv
bound
xchg
pop
cwtl
in
fildll
push
movsl
rcrb
sub
stos
mov
jl
jb
mov
xchg
or
es
and
and
mov
mov
xor
cmp
mov
sub
add
inc
lahf
inc
inc
sbb
dec
lret
shl
mov
mov
test
adc
imul
jo
jl
xchg
movsl
fisubs
notl
aas
mov
testb
jge
xchg
std
pop
dec
mov
data16
inc
scas
and
adc
ret
cwtl
cltd
jg
add
std
das
mov
mov
icebp
inc
sub
dec
pop
das
push
add
mov
ret
les
adc
or
xor
repnz
push
repnz
rcrb
sbb
sarb
inc
jmp
stc
jl
iret
jbe
mov
stos
leave
movsb
or
dec
ret
pushf
pop
inc
xchg
imul
fisttpl
addl
data16
xchg
loopne
mov
cli
xor
out
xchg
sub
adc
xor
xorb
and
mov
lds
adc
aas
mov
pop
ret
lods
sub
in
scas
push
push
inc
lcall
sbb
jns
test
sub
fs
xchg
sahf
rcrl
cmpsl
adc
or
cmp
push
xchg
dec
inc
xor
pop
out
roll
xchg
push
cli
jno
mov
mov
ljmp
push
out
dec
push
xchg
jmp
sahf
and
int
lret
rolb
sbb
addr16
and
xchg
mov
popl
jecxz
add
stc
cmpsl
jne
dec
mov
adc
mov
daa
ljmp
and
out
rdpmc
out
adc
xor
pop
mov
and
sbb
sub
jne
cli
insl
xchg
vucomiss
mov
xchg
mov
outsb
lods
or
arpl
jge
popa
aad
fs
addr16
xor
add
popf
mov
xor
push
jbe
xchg
mov
loop
jge
out
inc
out
xor
and
fs
ja
sbbb
test
jnp
dec
or
or
adc
and
lea
call
mov
dec
inc
mov
push
sahf
jo
cld
cs
aam
repz
push
cmp
out
dec
xchg
scas
and
lods
les
fidivrl
mov
loopne
and
test
int
xchg
sub
cmp
xchg
mov
jecxz
jb
es
rcrl
jg
cmp
out
call
data16
cmc
jno
jge
imul
adc
fwait
or
outsb
pop
data16
pop
filds
fstp
roll
mov
out
mov
inc
rcrb
xor
cltd
fidivs
aam
dec
mov
stos
inc
sub
das
xor
sbb
mov
popf
or
inc
cld
or
mov
aam
xchg
and
xor
in
sahf
mov
xchg
icebp
das
aam
fistpl
jle
mov
jnp
add
fs
mov
pop
outsl
test
sti
sub
xchg
outsb
mov
sub
ret
out
jl
pop
lods
adc
adc
stc
add
mov
and
and
mov
pusha
sbb
mov
jp
push
jle
sbb
fimull
cmpsb
dec
cmp
mov
sub
fildll
mov
mov
inc
loopne
into
or
cld
ficoms
in
mov
inc
sub
in
push
mov
adc
jnp
in
mov
in
xchg
iret
rcl
push
int3
pop
mov
clc
call
mov
push
fwait
adc
adc
mov
call
adc
jge
lods
cmc
xor
adc
mov
or
push
rcr
push
mov
xor
popf
sarb
shlb
push
push
push
inc
lock
and
hlt
add
addl
or
push
sub
xchg
test
dec
mov
push
fmuls
loopne
in
lods
add
fidivl
or
ret
test
push
xor
and
test
cwtl
mov
pusha
fcomip
out
adc
xor
xor
lret
pop
hlt
sbb
lret
mov
sahf
addl
cld
mov
and
pop
repnz
dec
cmp
or
movsl
inc
ja
imul
or
or
insb
xchg
repnz
or
mov
jmp
in
adc
arpl
enter
ja
dec
loop
mov
shlb
cmp
dec
mov
push
or
xchg
mov
mov
pop
mov
and
push
sub
mov
in
jg
xchg
mov
jae
fstl
mov
and
dec
mov
cmpsb
pop
or
and
push
ja
push
mov
adc
lcall
fisttpll
mov
sbb
rcr
pop
sbb
nop
push
adc
inc
lock
pop
adc
sbb
ficomps
sbb
push
adc
dec
xor
fwait
jo
pop
mov
lret
movsl
sti
inc
inc
jbe
mov
sarb
pop
and
mov
in
test
aam
das
outsb
and
push
pop
jae
aam
or
neg
xor
nop
mov
push
inc
jmp
mov
xor
shrl
and
mov
or
xchg
stc
cmpsl
sub
cld
sub
out
cmp
mov
pop
mov
pop
ret
xchg
aas
cmp
sarb
mov
fmull
adc
lahf
xor
popl
out
xor
ror
bound
les
inc
pop
add
pop
iret
dec
fisubl
popa
adc
inc
ret
cwtl
sarl
or
cwtl
mov
cld
sti
aas
xor
adc
and
mov
loope
xor
cmpsl
repz
iret
push
cmp
insl
and
lret
test
les
adc
dec
pop
jno
inc
repnz
adc
dec
cs
jecxz
or
mov
icebp
pop
sub
xchg
fistpll
lock
test
mov
push
fsubrs
hlt
das
xchg
cmp
out
pop
sub
mov
out
es
sub
inc
fcompl
jecxz
and
sbb
adc
adcl
in
rorb
inc
jl
in
orb
sahf
loop
loopne
iret
dec
cwtl
lea
push
aas
lea
sub
outsb
push
xchg
enter
sarl
dec
add
pop
xchg
mov
in
out
mov
stos
xchg
fwait
shlb
daa
es
addr16
cmp
and
adc
stc
jg
mov
add
and
and
in
xchg
cmp
push
and
sub
dec
fs
fmull
mov
in
sbb
or
arpl
aas
adc
das
or
mov
xor
add
add
add
adc
notb
repnz
sub
add
stos
js
sbbb
mov
adc
mov
ljmp
mov
nop
xor
cmpsl
fnstenv
loope
or
mov
pop
jb
mov
and
dec
xchg
setp
rcrb
lahf
lock
pop
pop
dec
dec
lods
cmp
sbb
cmp
aad
pop
pushf
jno
sub
xchg
stos
xchg
in
push
in
mov
xchg
lock
mov
in
js
sub
sub
sub
arpl
je
sub
iret
loope
jge
mov
test
movsb
sbb
cmp
and
mov
and
or
pop
repnz
sbb
xchg
pop
das
adc
inc
add
setns
les
pop
push
adc
adc
mov
imul
mov
das
jne
mov
inc
add
imul
push
mov
mov
push
je
in
mov
stos
pushf
in
sbb
shll
and
shll
sub
jg
stos
xlat
out
imull
jmp
and
scas
xor
enter
in
mov
cmp
push
push
andb
outsb
xchg
stc
adcb
dec
fwait
fs
sub
div
or
shrb
sub
cmp
cmp
loopne
iret
in
fists
fwait
into
add
mov
in
incl
dec
jno
inc
mov
xor
lds
leave
arpl
mov
sti
inc
inc
xchg
inc
cltd
xlat
ljmp
loope
adc
xchg
data16
loope
and
cmpb
cmpsb
in
dec
iret
jge
jl
adc
sbb
je
out
jae
rcr
mov
jg
inc
cmp
sub
mov
push
js
xchg
scas
xchg
lea
mov
jae
mov
pop
push
pushf
shl
mov
rcl
fwait
in
js
mulb
sub
je
jnp
fs
sbb
xchg
xchg
mov
shll
sbb
js
pop
inc
repnz
fistpl
popa
les
or
mov
mov
mov
call
das
sub
ret
xchg
xchg
loopne
fcmovnb
icebp
iret
lods
push
popa
push
inc
icebp
xor
mov
pop
ds
push
mov
and
jo
testl
imul
dec
sbb
pop
lods
ret
loop
jne
pop
sbb
sahf
fnstcw
push
pop
ret
pop
lcall
fcomps
testl
mov
int3
jmp
in
shl
insb
outsb
mov
adc
cmp
dec
push
cmpsl
std
test
imul
inc
add
add
pop
aad
xor
hlt
pop
out
jo
aaa
jbe
push
sub
fidivl
fstpt
fldenv
jge
stc
sahf
fs
repz
pop
xor
movsb
rol
adc
mov
pushf
jno
lahf
leave
xchg
gs
push
cmp
jnp
jns
jb,pn
shl
stc
sahf
jle
repnz
fmull
dec
mov
sub
in
and
pop
in
repz
mov
in
jg
movsb
shl
inc
mov
sar
pushf
jbe
ret
or
dec
data16
jmp
adc
push
ficomps
mov
xchg
inc
daa
jmp
fdivrs
ss
dec
xchg
mov
gs
inc
sahf
and
cmp
add
mov
orl
cwtl
push
xor
out
int
xchg
mov
jg
aas
adc
push
mov
incb
xor
sub
pop
push
adc
jno
mov
add
sbb
mov
mov
clc
out
std
mov
jmp
fadd
leavew
and
sub
out
clc
lcall
stc
push
stc
aad
push
xor
add
push
xchg
pop
xchg
pop
mov
ret
mov
addr16
jno
xchg
es
adc
jge
sar
mov
rep
testl
xor
mov
out
mov
scas
xlat
idivl
hlt
mov
or
push
icebp
loop
loopne
add
add
mulb
lds
jl
in
inc
mov
outsl
rcll
cmc
inc
in
ljmp
xchg
sbb
shrb
arpl
pop
inc
lret
xor
and
fiaddl
mov
fadds
and
fstpt
xbegin
inc
xor
je
xchg
cmpsl
push
outsb
mov
in
mov
fldenv
push
add
icebp
pusha
xor
inc
sbb
clc
xor
mov
or
test
xor
notb
aad
push
leave
xchg
or
push
and
mov
imul
das
dec
fisttps
data16
jno
in
iret
sbbb
cltd
pop
mov
repz
push
ret
mov
jne
xchg
mov
xchg
sbb
xchg
pusha
mov
bnd
addl
jns
lods
cmpsl
mov
je
fidivs
mov
je
inc
cmp
xchg
xor
cmp
pushf
xor
je
scas
test
xor
push
ss
push
bound
xor
seto
push
push
mov
insb
add
pop
and
inc
inc
dec
jno
inc
cmp
jns
adc
jle
cmc
jl
xchg
adc
js
mov
and
push
sub
add
push
push
ds
cmp
sub
clc
xor
adc
ss
mov
mov
ret
fdivl
mov
dec
dec
dec
subb
jae
imul
xchg
cmp
ljmp
cmc
lret
testb
js
into
in
std
bound
jp
push
jmp
cli
inc
add
in
cmp
pop
mov
call
push
faddl
xchg
adc
lds
cld
call
repz
rorb
fcomi
loopne
out
and
push
shl
pop
push
cmp
call
xor
pop
arpl
repnz
mov
cli
lret
stc
sbb
xchg
add
fsubp
sbb
shll
ljmp
outsb
pushf
xchg
loopne
jo
pusha
incb
inc
xchg
roll
mov
mov
add
and
imul
imul
xchg
xor
lds
sbb
dec
mov
arpl
dec
aas
cltd
cwtl
lods
fstps
loope
push
pop
test
inc
push
test
loopne
cwtl
outsb
testl
pushf
lret
cld
pop
cmpsl
inc
xchg
mov
xchg
aas
sub
imull
xchg
push
fstpt
xchg
or
addl
pop
sbb
bound
fwait
xchg
je
test
push
push
repz
shll
clc
gs
mov
int3
mov
imull
lahf
push
fstpt
sarb
jb
jno
adc
jmp
iret
test
loop
mov
loopne
into
cmp
mov
aas
and
int
mov
std
push
and
daa
nop
je
js
clc
mov
push
shlb
jne
jbe
pop
or
fsts
ret
outsl
mov
xchg
mov
mov
shrb
cmp
mov
mov
loop
push
adc
pop
iret
ret
es
add
mov
leave
es
nop
pop
jbe
cli
ds
inc
dec
and
movsb
lea
orb
xor
dec
push
ret
pusha
cmp
jge
jg
jnp
adcb
push
mov
mov
in
pop
xor
jb
loope
mov
xor
adc
fcmovu
dec
push
jbe
inc
adc
xchg
movsb
xchg
bound
fimuls
icebp
mov
pop
call
fwait
adc
inc
jb
out
repnz
stos
fstps
pop
test
mov
cld
and
aad
sbb
test
push
sub
push
fsubs
xlat
adc
adcl
ficoms
out
fidivrs
adc
nop
or
adc
cmp
sub
cld
sub
std
out
in
cs
daa
test
mov
out
push
dec
dec
mov
subl
mov
sub
xor
test
aad
loop
cmpsb
vmwrite
insb
shl
imul
arpl
or
sarl
mov
shrl
xchg
into
mov
mov
mov
push
test
mov
idivb
dec
push
xor
inc
inc
xor
shll
push
dec
pop
pop
mov
pop
xchg
mov
jge
iret
into
or
imul
push
and
pusha
pop
cmp
mov
lcall
daa
pop
inc
mov
fistl
into
loop
adcb
lret
nop
notb
in
or
dec
pop
int3
and
dec
mov
mov
inc
cmp
jb
fldl
mov
add
xchg
and
cs
dec
clc
xor
push
and
in
jecxz
push
mov
fdiv
icebp
rcrl
mov
arpl
sbb
inc
or
loop
cmp
jge
pop
push
mov
insl
mov
clc
out
stos
mov
loop
dec
jnp
es
inc
mov
fsubl
mov
jae
push
inc
sbb
inc
data16
sbb
sbb
xor
push
mov
cmp
fwait
sbb
adc
inc
push
cmpsb
lret
shll
and
cltd
fs
or
jp
lahf
imul
fldl
cmpsl
cmp
lds
inc
in
mov
mov
or
stos
xlat
sub
shrb
popa
sbb
nop
or
es
jns
pushf
lock
outsl
jg
clc
jb
pop
mov
fildll
out
pop
lods
and
dec
mov
cmp
cmp
mov
sub
cmp
popf
lods
push
push
mov
aad
lock
xchg
jne
jecxz
das
adcl
fdivs
cmp
enter
xor
lock
cmp
add
push
add
out
repz
mov
out
pop
in
js
pop
mov
sbb
in
call
iret
cwtl
add
es
inc
adcb
in
data16
mov
arpl
mov
or
jae
inc
fadds
adc
mov
repz
sub
mov
push
es
push
pop
enter
inc
dec
aad
adc
or
sbb
fidivrs
popf
sub
mov
pushf
ja
or
pushf
roll
and
pop
xchg
sbb
cmc
out
int
pop
mov
ret
lock
leave
inc
jecxz
jp
xchg
rolb
mov
lret
jge
xchg
xchg
bound
xorl
mulb
imul
mov
aad
push
mov
pop
jb
pop
pushf
int
data16
push
dec
mov
clc
add
inc
cmp
pop
loop
out
mov
rcrl
add
mov
ss
jl
add
sub
js
pop
xchg
pcmpeqw
cmp
inc
out
xchg
xchg
shl
push
ljmp
lds
rorb
in
out
pop
dec
and
xchg
dec
xchg
jbe
or
inc
sti
xchg
push
mov
stos
shlb
stc
adc
sti
aaa
xchg
dec
jno
cmp
incb
jp
mov
dec
cld
xor
jno
insb
xchg
xchg
cld
cmp
cmpsb
ljmp
jns
mov
inc
jmp
jbe
fisttps
pusha
dec
mov
dec
insb
shlb
icebp
sahf
lea
dec
fs
loope
popa
xchg
inc
fbld
scas
adc
pusha
insl
and
and
outsl
push
xchg
xor
inc
fnstsw
sub
scas
sbb
stos
shlb
and
jno
ret
lahf
push
add
fildl
stc
adc
in
xor
add
fmul
jge
std
and
pop
ljmp
push
aaa
xchg
xlat
int
jne
sub
repnz
cmp
aad
jns
lret
mov
es
mov
jb
or
mov
pop
hlt
rcr
out
shll
jo
inc
pop
add
sub
enter
in
leave
mov
pop
mov
cmp
das
in
push
mov
push
je
xchg
jl
pop
ret
mov
out
pavgw
cli
inc
je
imul
je
in
inc
es
mov
and
jmp
imulb
mov
push
lahf
jbe
in
fsubl
es
fstpt
lret
push
fldcw
xor
insb
adc
sarl
mov
jmp
and
jo
or
std
inc
dec
fsts
iret
fcomp
insb
mov
mov
pop
dec
cmpsb
sub
sub
cmp
mov
pop
fs
and
cmp
ret
jbe
out
sbb
xorl
push
imull
mov
cmp
aad
rclb
mov
mov
pop
push
mov
mov
mov
cmp
add
stos
mov
sahf
mov
pushf
enter
push
out
mov
jo
mov
ja
into
mov
pop
repz
pusha
clc
or
es
rcll
or
mov
adc
sub
nop
es
adc
dec
xor
rcll
jbe
mov
js
aam
and
mov
cmpsb
push
cmp
bound
jnp
sbb
shl
arpl
adc
push
sbbl
push
das
and
jge
lods
mov
push
fldcw
mov
or
mov
inc
fsubrs
sbb
test
icebp
int3
push
adcl
inc
jo
pusha
add
bound
inc
std
dec
leave
or
subl
sbb
into
jg
sub
push
jbe
test
cmp
sub
outsb
cmp
adc
dec
inc
push
jp
push
xchg
ja,pn
and
dec
ljmp
mov
lea
sbb
aaa
mov
daa
loopne
aad
js
daa
pop
test
subb
das
loopne
ds
aad
xlat
jp
cmpsb
adc
push
fwait
mov
mov
nop
sub
subl
cmp
insl
lea
mov
push
iret
jg
loopne
inc
ret
adcl
addr16
loope
dec
dec
dec
ljmp
adc
adc
xchg
insl
push
pop
fidivrl
inc
roll
enter
sub
jne
test
cmp
mov
test
mov
clc
push
test
or
mov
mov
xlat
mov
call
xchg
enter
or
mov
xor
dec
jl
fiadds
mov
jecxz
outsl
pop
dec
insb
ds
dec
mov
push
sahf
mov
stos
xchg
cmpxchg
fwait
cmp
pop
push
cmp
subb
push
stos
lods
lds
mov
pushf
xor
add
jns
inc
dec
or
add
add
aam
push
mov
lock
and
xchg
ds
dec
cld
lock
les
ret
daa
ficomps
adc
lods
pop
mov
xor
std
aad
ss
push
sti
inc
imul
mov
mov
imul
insl
faddl
add
mov
push
pop
imul
stc
mov
cmpl
sbb
dec
lret
test
jne
or
js
pop
dec
cmp
cmpsb
lds
lock
add
pop
pop
or
and
adc
cmpb
xor
xor
sar
shll
movsb
stos
repnz
jne
jge
mov
iret
shr
sub
add
sti
jg
and
mov
jecxz
test
gs
mov
aas
mov
push
outsb
loopne
test
and
and
mov
adc
push
dec
insb
dec
pop
aad
jle
aaa
dec
mov
fwait
sub
repnz
jmp
push
aam
inc
sub
push
dec
mov
into
sbb
ret
mov
sbb
repnz
xor
popf
adc
insb
aas
or
pop
cmp
lcall
jbe
sahf
inc
cmp
xor
nop
in
adc
and
popa
xor
xlat
xchg
push
mov
jns
data16
popa
pcmpgtd
inc
xchg
cwtl
rclb
movsb
dec
icebp
ror
mov
pop
sub
ret
sahf
sbb
insl
ljmp
pop
sbb
adc
mov
pop
stos
repz
xchg
es
push
sub
adc
test
xchg
jno
testb
sbb
imulb
sti
dec
adc
push
stos
test
fwait
and
imulb
sbb
shll
pop
mov
test
popa
fadds
scas
xlat
pop
xchg
mov
scas
fidivl
xchg
push
sti
std
xchg
pop
clc
or
pusha
bound
dec
call
and
mov
mov
lds
outsb
sub
lahf
das
es
repnz
lods
aas
movsb
out
pushf
iret
lods
inc
or
sub
sti
pop
cmp
jns
xchg
insl
add
jne
pop
mov
push
jecxz
stos
pop
int3
mov
adc
jl
das
ficoms
sub
mov
sahf
pusha
dec
dec
jno
dec
iret
jne
jg
xor
arpl
addr16
in
xchg
jb
dec
jo
cmpsl
mov
icebp
mov
mov
pop
cld
or
scas
fs
ds
test
lret
xchg
dec
int
and
xor
add
adc
pusha
sub
test
mov
xor
aas
fimuls
lea
jbe
or
pop
or
push
enter
lds
mov
jb
xor
xchg
sbb
jne
cmpsb
ljmp
inc
out
mov
test
rolb
add
aaa
mov
lea
push
mov
je
js
or
add
push
inc
adc
loopne
lods
pop
mov
into
fcoml
xchg
pop
lds
add
xor
push
pop
outsl
inc
mov
into
ja
dec
in
in
sub
aaa
cld
into
xchg
cmp
push
lcall
pop
insb
movsl
lds
mov
scas
stc
jecxz
push
outsb
lcall
jmp
inc
jecxz
adcb
xchg
ret
inc
sub
sbb
lcall
add
popf
mov
jecxz
sub
and
pop
addl
addr16
daa
mov
fildll
stos
sbb
xchg
push
sub
mov
jle
pop
adc
movsl
or
mov
xor
sub
call
pop
fildl
insl
aad
and
lea
out
mov
scas
pop
lret
lahf
lahf
push
pusha
lret
inc
int
stos
sub
or
stos
aad
ljmp
sbb
andl
movsl
mov
std
jecxz
ja
out
sbb
cmp
mov
fistl
or
outsl
outsl
and
movsb
cmc
stos
scas
or
test
jbe
push
call
cmpl
xchg
mov
xor
cli
and
jl
adc
mov
outsl
push
or
jmp
jb
bound
ficompl
dec
pop
xor
cld
jns
nop
add
jmp
pop
xchg
pop
and
push
das
arpl
dec
in
sub
dec
xor
mov
dec
ret
pop
and
jnp
dec
ficomps
inc
rorl
lods
adc
pushf
call
out
notb
push
aam
lahf
jae
mov
xchg
xchg
movb
adcb
cmpb
jg
sub
mov
push
cs
dec
adc
push
mov
push
stc
or
ret
aam
sbb
cltd
cmp
out
aad
insl
mov
mov
pop
cmp
aaa
mov
out
aaa
xor
pop
in
repnz
sti
daa
test
sahf
sbb
popf
ss
pop
mov
popa
pop
mov
sarb
inc
aaa
mov
dec
popa
push
cmp
in
adc
fs
xchg
xchg
daa
mov
cmp
adc
cmpsl
shrl
movsb
stc
adc
mov
jge
insb
mov
aaa
stos
mov
xor
arpl
imul
pop
mov
sub
ss
aad
sti
cmp
jp
testl
xchg
mov
push
adc
xchg
sbb
jmp
push
jnp
jl
lds
sub
inc
shll
push
inc
cmp
sub
jae
pop
fistpll
mov
filds
mov
push
imul
push
pop
push
dec
push
shrl
fwait
shll
xor
mov
sbbl
repnz
inc
popa
test
xchg
dec
cmp
lods
outsb
into
sub
call
adc
out
cmp
push
into
fdivs
cmp
mov
data16
mov
jne
in
push
mov
lods
and
mov
push
mov
fsts
lock
jae
inc
ljmp
inc
rorb
movsl
ret
out
jge
clc
mov
inc
mov
push
and
adc
ja
push
sahf
and
rsm
stos
jmp
cmp
insl
idiv
push
mov
push
add
aam
sub
mov
fildll
sbb
rolb
in
mov
jbe
xchg
inc
faddl
add
lods
jne
mov
lods
sub
sbb
fsubs
lods
stos
andb
sbb
addb
adc
cltd
cltd
outsb
cwtl
loope
insb
cmp
inc
xchg
ja
cmp
jae
mov
and
mov
mov
add
fisubrl
cmp
xchg
les
adc
push
movsl
sti
cmp
stos
lods
scas
sub
adc
gs
jl
xor
shrl
les
pop
dec
mov
or
push
pop
inc
push
insb
lahf
push
mov
lds
decl
cmp
gs
sub
xchg
lret
cmpl
fstpl
fwait
or
test
fyl2xp1
ret
cmp
arpl
inc
bound
movsb
mov
test
push
imul
xchg
adc
pop
jb
jp
add
add
into
rorb
andl
pop
and
outsl
mov
in
push
mov
pop
iret
fistpll
mov
adc
in
arpl
inc
test
or
stos
or
lock
ss
sbb
jns
jns
sbb
popa
inc
push
or
fnstsw
and
repz
mov
mov
mov
add
xor
push
aaa
filds
or
aaa
jo
ja
xchg
pop
data16
dec
inc
pop
sub
xchg
aaa
or
dec
sbb
cmpsl
in
dec
daa
lock
adc
iretw
add
inc
jge
cmpsb
mov
iret
mov
mov
dec
mov
ficoms
ljmp
mov
ds
fbld
push
push
fcmove
out
ja
std
addr16
push
mov
dec
mov
cmp
pushf
repnz
lret
testb
adcb
mov
mov
and
mov
dec
push
xchg
hlt
mov
fidivrs
je
sub
push
or
andl
in
push
and
lcall
adc
test
pop
cmp
xchg
subl
inc
lods
mov
outsl
test
or
aad
add
fdivl
addr16
xchg
lea
jae
push
div
and
pusha
clc
lea
fisttps
sub
jae
insl
insl
dec
mov
ficoms
fsubrl
cmp
pop
fs
sarb
test
shlb
jmp
addr16
xchg
lock
or
jne
push
sahf
add
leave
inc
fldt
lret
mov
mov
sbb
jns
and
fbld
jo
sub
pop
lock
int
test
xlat
mov
fdivrp
das
addr16
sbb
and
aad
jl
and
mov
jge
sub
mov
dec
dec
jmp
and
xchg
sub
pop
ja
leave
jle
aaa
mov
decl
cld
xchg
unpckhps
cwtl
cmp
sbb
fmuls
lods
popl
push
jae
stc
in
jge
sbb
mov
and
outsb
in
aaa
push
negl
fmuls
sub
sub
mov
push
lock
jns
xchg
sub
push
lcall
cmp
repnz
jg
push
mov
imul
mov
sbb
out
adc
add
adc
aad
dec
data16
out
sbb
test
shrb
dec
mov
jp
shrl
xor
adcl
dec
adc
pop
idivl
add
mov
mov
xor
call
daa
adc
fisttps
inc
add
sub
sbb
sbbb
scas
idivl
aam
mov
dec
cmpsl
inc
pop
mov
push
int3
dec
je
lahf
cltd
aaa
jae
hlt
stc
clc
in
mov
lcall
outsb
xor
aaa
in
pushf
xor
pop
popa
sub
mov
les
xor
mov
mov
or
clc
mov
lahf
pushf
sbb
sbb
mov
insb
adc
sbb
jne
out
sub
and
sub
popf
cld
inc
pop
bound
push
nop
outsl
cmp
sbb
sub
inc
pop
call
roll
dec
adc
daa
test
jmp
push
sbb
cmpsl
sub
push
aaa
rcll
in
dec
xchg
push
push
pop
cmp
cwtl
add
out
icebp
jl
leave
fbld
pop
mov
and
jp
es
push
std
dec
jnp
xchg
add
nop
bound
sub
or
lock
nop
leave
pop
lea
xor
icebp
jmp
rcrb
mov
stos
cmc
inc
push
push
pusha
sbb
jge
lret
xor
mov
cmc
inc
mov
dec
int3
mov
dec
ljmp
xor
call
in
cs
ret
mov
mov
sub
or
in
movsl
addr16
imul
je
jae
xlat
adc
shll
jae
dec
pop
mov
inc
mov
movsl
lret
pusha
int3
pop
cmp
rcrl
cmp
dec
hlt
mov
cltd
movsb
lock
enter
arpl
mov
xchg
or
jl
xchg
xchg
sbb
sbbb
or
aas
push
push
pop
dec
cmpsl
pop
sub
std
ss
jo
xchg
jno
fisttpll
repz
xor
push
inc
mov
iret
popf
repz
add
lret
mov
pop
dec
repz
jle
or
pusha
cltd
and
sbb
fs
aaa
push
call
dec
push
xchg
shl
xchg
mov
sahf
leave
sbb
cmp
loopne
rolb
mov
push
xchg
inc
mov
cld
and
mov
pop
pusha
sub
jl
or
int3
mov
stc
lcall
jecxz
out
mov
mov
sbb
xchg
mov
sub
dec
inc
pop
xchg
cmp
cmp
adc
popa
mov
scas
dec
fisttps
mov
ljmp
dec
test
cwtl
mov
xor
xchg
lods
xchg
cmpsb
jb
jo
aam
js
les
push
lock
rol
pop
sahf
in
mov
xchg
aam
orb
loopne
lahf
mov
nop
fcomp
ljmp
sbb
jl
mov
dec
sub
fwait
mov
incl
enter
jo
or
mov
lcall
xchg
cwtl
xchg
cmp
sub
and
dec
pop
lea
arpl
daa
call
jl
sub
cmp
dec
faddl
shlb
fwait
scas
xchg
jp
pop
jbe
push
or
or
test
imul
jle
pop
cmp
or
and
xchg
dec
outsl
pop
test
mov
push
cmp
or
or
push
stc
pop
jb
mov
rcl
pop
sbb
stc
xor
dec
jns
xrelease
xor
sbb
jne
rorl
rclb
inc
nop
clc
mov
dec
xchg
cmpsl
or
inc
jb
and
pop
mov
insl
xor
test
imul
mov
insb
pusha
aad
ficomps
mov
and
mov
push
adc
aaa
fldt
xchg
push
jg
xor
pop
fcomip
pusha
pop
shrb
rcrl
test
addr16
dec
jl
shll
mov
xchg
mov
xor
aaa
sub
pop
mov
or
mov
fldcw
add
lcall
or
xor
inc
repnz
aaa
mov
fs
jp
stos
iret
mov
iret
mov
push
and
pop
mov
repnz
pop
xchg
xchg
leave
cs
int3
xchg
je
in
movsb
aam
scas
cld
fxch
adc
or
jp
or
jbe
mov
fs
dec
or
cmc
mov
and
cltd
leave
sbbl
fwait
mov
push
movsb
test
loop
and
inc
in
shl
sub
dec
push
mov
aad
sbb
fisttpll
adcl
scas
jecxz
repz
adc
mov
ficoml
mov
lret
fwait
and
incb
sub
in
mov
stos
sti
cmp
cmp
jl
test
xchg
xlat
cmp
icebp
test
mov
cwtl
and
pop
jbe
scas
lods
imul
cmp
jo
orl
mov
mov
aaa
inc
and
loop
enter
jge
jne
lock
pop
xor
mov
push
and
fadds
pop
scas
pop
jp
sub
mov
in
pushf
test
or
leave
add
icebp
call
aad
push
jo
test
xchg
xor
pusha
push
sbb
lock
cmp
jb
dec
ds
xlat
ss
in
or
negb
test
rcrl
cmp
dec
mov
aas
cmc
cltd
push
sub
dec
lahf
leave
or
mov
push
insb
ficomps
fists
push
xchg
adc
imulb
adcl
lods
pop
sbb
ljmp
lock
je
xorb
out
sbb
lods
daa
adc
rolb
add
mov
jge
mov
xor
push
pusha
xchg
arpl
gs
jl
inc
inc
xor
xchg
aad
jle
je
inc
jno
pop
jp
data16
xchg
out
xchg
clc
js
out
enter
mov
xor
aad
in
or
lret
insl
mov
rorl
push
mov
or
cli
out
mov
xchg
cltd
sbb
outsl
hlt
adc
test
fs
add
negb
push
cmp
jge
push
push
cmp
arpl
mov
fisttpl
in
shl
mov
andb
lds
push
addb
cli
jb
jp
leave
mov
arpl
inc
xchg
mov
push
xor
inc
movsl
neg
popf
push
push
iret
inc
pop
aaa
insl
mov
sbb
push
push
cwtl
call
imul
addr16
xchg
mov
mov
and
mov
dec
adc
into
rorb
mov
mov
or
clc
pop
cwtl
xor
test
mov
sub
in
pushf
mov
mov
xchg
jbe
roll
mov
stos
ficoml
ret
fsub
je
inc
cmpsb
test
xchg
and
inc
cmp
push
inc
test
icebp
or
mov
ss
fwait
mov
add
xchg
inc
inc
loopne
jne
lods
ss
ss
cli
cld
addr16
enter
loopne
aas
mov
add
pop
in
cwtl
sub
sarl
fdivrs
fnsave
fstpt
xor
cmp
xchg
add
push
aaa
cmc
cmp
dec
push
dec
xor
jno
mov
add
outsl
test
push
jne
jnp
iret
mov
mov
stos
jns
sbb
jecxz
cld
in
ret
negb
movsl
add
adc
aas
cld
out
lds
adc
je
xor
mov
movsb
mov
sub
push
dec
fucom
jge
dec
test
inc
or
mov
cmc
push
pop
mov
add
or
jno
mov
ret
outsl
mov
xchg
daa
push
fwait
mov
push
out
fldl
jb
add
or
mov
cmp
leave
loope
setae
mov
cld
adc
cmc
cmp
jle
jmp
dec
xor
cmp
cmp
imul
sar
in
inc
mull
sahf
out
scas
xchg
repz
sbb
movb
mov
test
fs
bound
test
sbb
lahf
or
pop
xchg
jg
sub
aam
xlat
cwtl
xchg
std
into
jecxz
stos
xchg
inc
or
lea
lcall
adc
xor
jnp
loop
jns
stc
imul
test
lret
pop
arpl
lock
sarl
test
xchg
popa
popf
pop
mov
hlt
int
bound
test
repz
sub
xchg
std
and
push
dec
aad
push
push
dec
cmp
jge
pop
test
stos
adc
mov
pop
mov
testl
xchg
fldt
iret
jbe
sahf
vpminsd
dec
das
repnz
dec
negb
mov
jmp
lret
daa
and
xchg
or
pop
cmp
xor
adc
out
xchg
roll
xchg
jmp
mov
fwait
int3
inc
clc
lods
test
sbb
loop
sbb
inc
cmp
xor
mov
cwtl
sub
add
icebp
outsb
mov
int3
mov
lcall
faddl
push
jmp
loope
out
popa
sbb
inc
pop
ret
jae
flds
fdivr
pop
mov
cs
js
xor
jg
cmp
enter
mov
jae
pop
fldl2t
adc
and
xchg
sub
jecxz
js
jge
arpl
add
inc
stc
xor
adc
sti
pop
test
jnp
cltd
pop
test
lret
add
push
imul
lret
orl
push
arpl
aaa
cltd
daa
jp
xchg
mov
xor
xchg
mov
cmp
cmp
xchg
jbe
jl
dec
nop
cli
push
xor
int
fistpll
daa
cmpsb
and
sbb
insb
dec
nop
popa
bound
int3
lds
sti
mov
push
lret
xor
rcrb
mov
jae
mov
pop
or
and
sbb
out
xor
xlat
adc
hlt
mov
mov
mov
in
lahf
or
cmp
or
mov
mov
lret
mov
push
call
sub
lret
in
out
and
clc
notb
lret
push
pop
std
xlat
imul
push
test
dec
or
push
lahf
pop
xchg
push
pop
into
jecxz
push
pusha
and
je
cmp
cs
sbb
fdivrs
icebp
pop
xor
mov
mov
and
adc
cmp
xchg
insb
psadbw
sbb
sbb
ds
cltd
xchg
fnstenv
or
jp
sar
pop
xor
nop
dec
adc
and
inc
adc
xchg
jo
test
adc
xchg
cmp
xor
xor
mov
add
mov
jne
ljmp
mov
jmp
sub
adc
mov
out
xchg
out
inc
fdivs
cmp
loope
test
mov
test
cmc
les
mov
repnz
sbb
fidivs
sub
adc
jo
xchg
repnz
mov
insl
inc
pushf
inc
call
or
mov
mov
lret
cmp
cwtl
jns
loopne
jo
mov
add
mov
lock
or
dec
cmp
and
test
sarl
xchg
in
test
dec
into
inc
jl
sbb
inc
push
jbe
repz
inc
je
and
pop
jecxz
lret
in
stos
mov
mov
jo
sub
gs
xchg
add
sbb
fadds
jg
out
outsb
fnstcw
xchg
inc
js
sub
jbe
in
xor
sbb
das
sub
and
aas
dec
xor
or
scas
fldenv
loop
hlt
xchg
jg
test
in
inc
fadd
xchg
sarb
gs
pop
fmul
loop
rolb
mov
dec
les
loope
cmp
nop
test
mov
jb
pop
push
inc
ljmp
ret
cmpsb
out
pop
push
or
and
cmp
xor
adc
cmp
fwait
xchg
les
iret
and
xor
sbb
pop
and
cwtd
fstpt
inc
inc
jle
cld
add
jmp
mov
mov
popf
xchg
inc
jns
cmc
out
jl
push
sbbb
push
push
or
test
mov
fimuls
addr16
leave
ret
test
fcoml
mov
mov
lods
divb
jnp
dec
adc
push
push
push
ljmp
push
inc
fwait
pushf
add
xchg
cld
lcall
sub
push
outsb
inc
imul
pop
mov
movsl
mov
fs
movsb
jmp
int
push
hlt
mov
insb
cmc
dec
push
lds
inc
xor
std
xchg
scas
decl
fwait
pop
jecxz
jo
xchg
addb
ret
add
pop
imul
pop
pop
sub
and
movsl
shr
sti
int
mov
dec
daa
popf
movsb
shll
aad
fadds
cmp
xchg
mov
shlb
xchg
iret
push
pop
mov
cltd
stc
data16
jge
xchg
and
sbb
hlt
dec
push
nop
mov
mov
std
subl
cwtl
or
mov
cwtl
lods
jno
mov
and
mov
xor
jmp
jae
xchg
sarl
imul
scas
clc
out
movsb
dec
in
add
and
jl
dec
jl
xchg
fs
stos
add
xor
stos
aas
je
mov
dec
jmp
jle
lds
xchg
cli
and
sahf
test
xor
jns
fdivrs
mov
sbb
rcl
xchg
les
mov
test
je
add
movsl
push
inc
pushf
dec
iret
and
les
adc
add
pushf
imul
cmp
sbb
in
les
aad
ds
imull
outsl
cmp
cmp
sarl
mov
nop
stos
push
setnp
in
int
pop
inc
or
xchg
aam
xchg
jg,pt
js
pop
lahf
xchg
xchg
mov
out
mov
lcall
fcompl
mov
inc
pop
or
inc
in
int3
inc
adc
mov
dec
mov
xor
xor
imul
cmp
in
aaa
and
testl
lods
dec
fmull
fwait
ljmp
negb
test
lea
xor
or
mov
sub
insl
pop
jb
and
pop
fs
xchg
jp
pop
pusha
jnp
lods
sub
sub
adc
into
mov
xor
push
adc
ja
lods
sbb
xlat
sar
dec
into
and
push
stos
loopne
mov
popa
inc
testl
mov
lcall
xor
cmp
or
bound
jle
cmp
divb
and
jns
or
mov
mov
cmp
pop
loopne
pushf
pop
lods
rcl
jp
or
icebp
adc
mov
xchg
bound
ja
hlt
rolb
loope
loopne
push
ret
ds
xor
arpl
pop
shrb
mov
mov
int
dec
lahf
xlat
inc
arpl
cld
or
sbb
xchg
das
std
pop
movsb
lods
mov
orb
ret
push
cltd
cmp
adc
in
loopne
insl
sbb
js
rolb
pop
jl
pop
mov
or
inc
dec
lods
popl
mov
mov
adc
fs
incb
pop
nop
outsl
nop
aam
int3
pusha
or
test
jae
enter
out
idivb
int3
mov
fidivrl
push
or
mov
insl
testb
mov
popf
xor
inc
inc
out
xchg
rol
add
push
sub
ror
in
enter
scas
rep
mov
mov
pop
loop
in
sarb
mov
mov
scas
push
lret
mov
dec
pop
aam
shl
push
mov
std
mov
jle
cmp
xchg
ficoml
jl
xor
lahf
sbb
cmp
or
add
mov
xor
mov
pop
cltd
lcall
daa
lds
adc
sbb
aas
sub
in
push
int
dec
test
mov
xchg
cltd
pop
subb
xchg
jae
loope
and
xchg
bound
ficoms
push
mov
jnp
lods
jge
cmp
daa
and
push
ja
pop
loop
lods
lods
in
xchg
loop
mov
mov
cmp
arpl
mov
adc
inc
rcrb
enter
testl
inc
out
imul
repnz
aam
clc
pushf
and
movsl
push
aad
pop
nop
or
pop
dec
mov
mov
mov
mov
cmp
repz
pop
movsl
movlps
lret
or
inc
dec
jle
xor
push
jo
mov
sbb
repnz
pop
jb
jmp
in
mov
fistl
sub
outsb
lret
sbb
mov
test
adc
dec
lcall
mov
mov
sub
and
std
in
push
rorb
int
pop
fdivr
or
xor
cmp
setle
mov
and
jbe
pop
jp
xchg
sahf
popf
push
push
adc
mov
enter
pop
pop
add
or
sub
mov
cmp
leave
xchg
emms
pop
adc
hlt
jbe
mov
or
aaa
sbb
out
call
lahf
fs
jmp
ja
push
js
jnp
adc
xchg
lcall
loope
xchg
xor
dec
mov
inc
cwtl
inc
push
adc
bound
sbb
mov
mov
movsl
sbb
jae
xchg
aam
fsts
push
xor
popa
mov
mov
push
sbbb
dec
insb
shrl
pop
push
pop
sahf
sbb
mov
movsb
aas
jl
cmp
fstpl
push
cli
sbb
or
pushf
xor
and
jle
inc
lahf
cli
lcall
xorps
gs
dec
add
sub
inc
push
and
mov
mov
push
outsb
add
adc
cmpsl
jb
adc
push
leave
add
jb
lret
sub
mov
adc
das
push
daa
xchg
mov
push
cld
mov
in
inc
pop
data16
imul
jg
mov
sub
xor
push
fldl
sub
and
int
movsl
push
dec
sbb
fsts
or
stos
inc
cmp
call
xchg
test
and
mov
inc
dec
cmp
push
dec
dec
jg
adc
fsubl
loope
sbb
xchg
flds
mov
aas
pop
ja
daa
mov
push
out
fnsave
lahf
lahf
cmpsl
dec
mov
cmp
loope
sub
push
push
test
ss
pop
addr16
cmp
dec
loope
aaa
pop
hlt
out
std
push
ror
lods
mov
or
add
and
mov
sar
pop
arpl
es
fsub
mov
and
in
cmp
inc
fst
arpl
mov
popf
sbb
xchg
fbstp
and
and
neg
pop
push
lock
sub
popf
mov
lcall
dec
int
mov
out
jg
enter
or
call
test
xor
push
and
cmc
xchg
ret
pushf
jb
fisttps
mov
gs
out
sbb
jge
xchg
in
xlat
mov
and
fwait
lods
cld
and
mov
outsb
cmp
call
or
mov
xor
clc
repz
imul
push
dec
lds
mov
xchg
icebp
stos
mull
mov
lock
xchg
and
lock
mov
and
dec
insl
dec
inc
jg
inc
fildl
mov
in
pop
pushf
icebp
lock
mov
aam
add
pop
sub
push
cmpsb
std
lcall
insl
adc
je
xor
fiadds
lahf
sti
iret
cmp
loopne
aam
subl
sub
lret
ss
lahf
mov
adcl
adc
movsb
cmpsl
push
outsb
mov
jmp
mov
popf
out
mov
xchg
jecxz
les
pop
pop
jecxz
fistpll
int3
imul
int3
push
and
add
shlb
xchg
xor
pop
pop
pop
test
sbb
sub
stos
jmp
xor
popf
int3
rcl
paddusb
sub
push
inc
push
in
xlat
jmp
scas
jnp
inc
cs
xlat
in
xchg
pushf
data16
pop
and
or
popf
es
loop
je
in
fisubl
mov
in
lods
or
sbb
popa
cmp
ss
int
adc
popa
movsb
popf
and
jge
inc
int
ret
xchg
push
stc
push
push
shrb
sbb
sarl
push
pop
and
push
dec
adc
ficompl
xchg
sbb
push
push
lock
cmp
mov
xchg
jg,pt
jno
out
push
dec
and
xor
cmpsl
jmp
outsb
adc
negb
fmuls
add
in
fsub
mov
bound
insl
lret
adc
adc
insl
lahf
mov
rolb
lahf
or
push
and
lock
ds
pusha
aam
mov
mov
jb
lcall
mov
scas
push
mov
into
fwait
aaa
daa
mov
dec
jge
and
mov
xor
loope
cltd
and
popl
jg
jno
stc
jns
test
xor
dec
repnz
lods
mov
insb
pusha
cs
inc
dec
xor
loope
adc
lods
into
rcll
out
shll
xchg
sarb
aaa
sub
cwtl
and
loopne
push
cld
mov
pusha
jl
mov
xchg
lock
sar
jb
or
sarl
call
add
pop
push
leave
xchg
rclb
int3
sub
scas
repz
fwait
loop
cmp
jne,pn
and
in
lock
sub
lea
dec
mov
push
inc
cmp
movsl
test
in
pop
add
aam
pop
loop
pop
inc
cmp
pop
pop
push
mov
movl
sbb
fisttps
mov
hlt
cwtl
jno
xor
inc
pop
mov
fnstcw
sbb
aaa
cwtl
fisubrl
adc
xchg
cmp
push
call
out
mov
pop
insl
stos
les
fidivs
push
push
lea
addr16
cwtl
or
fstl
std
push
lret
jbe
and
jmp
or
enter
shlb
scas
adc
mov
jnp
cmp
cmp
xchg
or
fdivrl
lods
enter
add
dec
cmp
mov
fstpl
mov
shrb
xor
fsubs
les
sbb
test
jbe
sbb
jae
push
repz
std
push
rcll
xchg
mov
jmp
stos
int
sbb
mov
lods
sbb
push
pop
sbb
push
in
in
orb
lock
xor
sahf
cmpsb
cld
int3
in
faddl
inc
stc
insl
movsb
mov
sbbl
and
test
xor
sti
cmpl
pushf
loope
push
mov
icebp
scas
sub
imul
fbstp
in
mov
push
insl
push
rorl
jne
fsubs
int
jne
add
xlat
call
mov
xor
and
mov
jno
mov
jmp
loop
jp
add
mov
divb
lret
popf
les
mov
dec
and
out
mov
mov
cmpsb
push
subb
daa
daa
insb
mov
pop
sbb
and
add
push
sbb
xchg
add
pop
pop
ror
dec
repz
mov
push
popa
push
mov
mov
addb
out
insb
in
mov
rcrb
inc
cmp
popa
les
iret
mov
push
movl
cmp
pop
lods
out
push
std
js
add
xchg
rclb
fsubs
std
xchg
sbb
int
mov
lods
adc
sub
cmp
stos
jp
movsb
sbb
sub
jae
adc
fadd
daa
adc
mov
aad
jbe
jge
push
fistl
mov
push
stc
hlt
push
loopne
adc
repnz
push
xorl
and
stos
and
call
arpl
lret
and
and
sub
adc
in
icebp
sub
daa
jle
repz
xchg
xchg
adc
xor
popa
jmp
loope
jmp
inc
pop
mov
cli
jge
cltd
rclb
push
sbb
into
lock
in
iret
aas
push
aad
sbb
out
sub
and
xchg
int
jecxz
xchg
sbb
shl
cmpsb
call
int3
mov
popa
in
cmpsl
and
dec
mov
out
pop
mov
adc
push
pusha
nop
ds
mov
out
cmc
dec
pop
push
inc
pop
mov
add
imul
xchg
sti
mov
inc
mov
xor
lahf
push
mov
movsl
data16
ljmp
inc
xor
xchg
jmp
cmp
gs
sbb
mov
xlat
shll
sub
ljmp
ret
jb
int3
pop
pop
jae
jae
es
inc
fistpl
xchg
cmc
dec
sub
fidivrs
cmp
loop
fucomp
insb
inc
push
dec
ljmp
pop
sahf
mov
add
cmc
and
fists
scas
mov
loop
insl
cli
testl
frstor
aad
jmp
stc
loope
sarl
xchg
addr16
push
sbb
cmp
gs
in
cmp
icebp
mov
push
imul
inc
xor
xchg
mov
sbb
mov
mov
or
cmpsb
cmp
inc
repz
xchg
gs
pop
psubsb
inc
das
and
aad
xlat
xor
pop
sbb
into
mov
xchg
fsubs
es
push
sbb
or
cs
out
sub
cld
aas
sub
in
negb
cmc
daa
adc
rdtsc
out
in
jbe
nop
xlat
push
data16
lcall
movsb
xlat
mov
or
lods
mov
cmp
bound
and
fs
movsl
or
mov
ret
adc
adc
mov
jmp
add
xchg
sub
sahf
cmp
xchg
sbb
lret
xchg
int
jge
adc
mov
pop
out
addl
or
or
xchg
aam
jmp
dec
flds
add
aas
xor
lcall
sbb
jmp
mov
xor
out
stos
push
sub
jl
repz
mov
xor
sub
addr16
jecxz
sub
adc
push
jb
repz
jne
lods
push
mov
int
cmp
adc
mov
ja
loop
js
jl
inc
std
mulb
pop
mov
imul
daa
inc
cmp
push
idivb
movl
dec
mov
pop
sub
jmp
movsl
xor
fsub
mov
ljmp
lock
or
and
mov
mov
push
or
mov
mov
xchg
fdivrs
and
mov
inc
test
insb
cmc
fstps
popf
inc
mov
popf
mov
mov
pop
mov
adc
insb
cltd
push
ficoms
popfw
scas
mov
fwait
call
mov
jae
xchg
fdiv
dec
pop
adc
testb
sbbl
out
jp
push
xor
fbstp
sbb
mov
xor
add
add
or
xor
xchg
dec
inc
add
dec
imul
and
cmpsb
push
jb
pop
shlb
pop
sub
pop
xchg
adc
divl
loop
push
or
into
lret
mov
jbe
jge
stos
cmpl
cmpsb
outsb
mov
xchg
loopne
jmp
pop
aaa
enter
scas
mov
lods
hlt
jno
ret
test
mov
cmp
arpl
jae
imul
push
xchg
or
sub
pop
jo
movsb
fbstp
xchg
add
or
push
pop
xchg
add
ss
repnz
sbb
mov
and
rol
sbbl
sbb
adc
stos
push
xchg
mov
jae
popf
pop
out
fiadds
jg
inc
jge
fisubrl
inc
cmpsb
pop
aas
popl
mov
xor
and
lahf
scas
addl
and
fiadds
es
in
movsb
dec
dec
sub
sbb
test
xchg
out
mov
mov
and
sbb
rorl
or
pop
sbb
je
xchg
fnstenv
movsl
addr16
jp
lret
sub
mov
xor
pushf
mov
into
bswap
adc
jo
movsb
jo
push
in
ret
xor
mov
mull
out
hlt
lahf
cmp
popa
push
in
stos
sub
push
movsl
dec
xor
ja
mov
mov
or
les
cmp
jge
xchg
push
jne
pop
mov
out
out
mov
or
inc
out
inc
rsqrtps
jb
bound
test
scas
and
mov
adc
xlat
dec
out
sbb
pop
xchg
rorl
jge
je
sbb
pop
lahf
lret
into
push
sbb
das
sahf
lcall
loop
sub
cmpsl
push
aas
push
jno
or
or
sub
mov
and
cmp
and
xchg
sbb
or
lods
insl
pop
and
mov
fldenv
push
daa
mov
sub
nop
ss
stos
lods
sarb
in
lods
addl
push
mov
add
clc
jge
cmp
pminsw
jge
adc
lds
or
sbb
ret
sub
jg
rorl
cmp
sub
sub
or
movsl
jbe
ds
sub
adc
xor
pop
pop
or
inc
mov
pushf
push
sbb
inc
pop
and
cmp
dec
and
lret
mov
fsubr
mov
shl
add
sbb
mov
add
jno
mov
ret
adc
xchg
add
pminub
repz
in
stos
xor
ret
xchg
scas
or
cmp
movsl
pushf
leave
adc
gs
inc
in
mov
imul
stc
test
imul
setnp
fbstp
xor
pop
inc
insl
add
stos
cmp
adc
pop
in
lods
mov
and
je
inc
loopne
push
xor
cmp
idivl
mov
rcr
mov
mov
pop
inc
mov
lahf
ret
or
dec
ret
pop
mov
enter
cwtl
lret
icebp
sbb
aad
cltd
sbb
pushf
adc
jecxz
loop
cwtl
add
cmp
testl
test
jbe
daa
faddl
and
sbb
fistps
into
shl
sub
into
ret
add
mov
iret
push
sbb
imul
shlb
rcrb
fdivs
insl
dec
mov
leave
jg
lret
push
loopne
mov
ret
call
test
jmp
sub
xchg
fldcw
adcl
pop
stos
scas
mov
mov
insb
mov
xor
add
mov
adc
inc
fcoml
xchg
xchg
and
xorl
xor
and
add
mov
xchg
stos
mov
call
out
xlat
ret
mov
cld
shll
push
orb
mov
adc
cmp
out
aad
clc
inc
cltd
jl
mov
popa
push
inc
push
jge
stos
popf
sub
cmp
xor
cmpsl
int3
fidivrl
in
mov
sub
mov
sub
stc
in
icebp
int3
js,pt
fnstsw
mov
insl
into
jg
add
ficompl
xchg
out
lcall
inc
mov
test
sarb
jmp
insb
sub
xor
mov
and
push
sbb
pushf
rol
in
and
mov
std
sbb
xchg
mov
and
int3
xchg
mov
orl
ljmp
std
das
push
movb
push
mov
into
sbb
and
sub
sub
jle
int3
pop
pop
es
insl
inc
pmullw
lret
sbb
ljmp
movsb
mov
les
push
push
lahf
inc
sbb
dec
fs
shl
jb
add
arpl
jecxz
mov
jg
hlt
rorl
mov
sub
lods
aam
sarb
mov
push
jl
mov
mov
rorl
jns
lcall
nop
movsb
pmaxsw
out
pushf
outsb
call
sub
xor
fildl
jne
ja
loop
cwtl
pop
or
fistpl
mov
scas
shlb
jnp,pt
rclb
out
xchg
add
icebp
mov
outsb
jecxz
jecxz
push
rcll
and
jb
xor
xchg
adc
lods
divb
fstpt
or
leave
sti
push
cmp
stc
dec
fsubrs
cmp
test
call
mov
cltd
cmp
cs
orb
xchg
dec
pop
jmp
push
xor
mov
outsl
xchg
jp
push
stc
ficoms
stc
cli
add
pop
loopne
ss
fdivp
pop
call
bound
mov
popf
push
insb
aas
jmp
nop
mov
dec
je
dec
jns
or
cmpl
inc
popa
addr16
inc
pop
ljmp
in
ss
test
add
lahf
test
and
inc
push
bound
pusha
sub
dec
mov
imul
cmpsl
dec
aam
inc
adc
or
push
clc
push
out
cmc
stc
ss
pop
pop
lea
push
sub
dec
cmc
repz
adc
mov
mov
dec
xchg
cmp
pusha
xchg
out
ss
test
js
fcmovnb
in
dec
jb
hlt
xor
and
push
imul
push
pop
movl
pop
fwait
xchg
cmpsb
shr
mov
mov
in
add
pop
lods
testb
xchg
xor
sbb
sub
cmpsb
mov
push
repz
out
push
mov
dec
pop
cmp
jne
jecxz
orl
xlat
fsubs
and
cmp
data16
adc
mov
mov
mov
push
dec
adc
xorl
ljmp
adc
cltd
jnp
mov
mov
xor
mov
xchg
sti
jno
mov
push
mull
fldl
fs
push
cltd
cmp
rolb
ljmp
sub
mov
mov
lea
dec
and
sub
push
fwait
mov
cmpsl
push
xchg
xchg
adc
je
orb
cli
into
mov
jo
popf
mov
aas
push
mov
jg
lret
imul
enter
dec
fsubrs
push
stos
scas
pop
lcall
jb
ds
jg
xor
jl
std
rcll
test
adc
scas
push
fwait
loop
pop
repz
mov
cli
dec
inc
sti
orl
lods
jp
imul
dec
pop
fs
dec
push
dec
push
push
pushf
adc
push
xor
mov
and
cmc
pop
outsb
je
xor
loope
insb
pop
adc
ret
add
sub
clc
mov
jnp
xchg
decl
aam
dec
fstpl
xchg
push
cmp
mov
dec
stos
push
fsts
mov
mov
lret
popf
aas
or
outsl
insb
mov
insb
xchg
lcall
test
insl
cmc
jmp
imul
sub
lahf
inc
popa
divl
jno
sbbl
shll
jne
lahf
mov
pusha
sub
hlt
add
fmull
cmp
lret
push
push
xchg
or
mov
into
shll
test
xor
xor
mov
and
into
outsb
pop
cmc
mov
daa
out
push
sbb
add
dec
or
mov
fdiv
imul
daa
xchg
adc
lods
iret
ljmp
or
fcomi
mov
lea
inc
clc
adc
in
dec
stc
sbb
mov
scas
fimull
or
das
pop
cmp
xor
mov
ja
inc
ja
cmp
mov
xlat
or
xchg
scas
lock
popf
xor
pop
sub
jp
ss
fbld
mov
cli
pop
mov
jge
sbb
mov
mov
ret
mov
jecxz
fisttpl
xchg
xor
push
and
ja
lds
filds
sub
cmp
lahf
and
cld
adc
bound
push
jnp
in
sbb
ljmp
mov
lods
xchg
sbb
in
push
idivb
icebp
pop
in
pop
lcall
lea
repnz
xchg
xor
std
push
movsb
fbld
jb
lret
fstpt
xchg
inc
fcoml
nop
xchg
rcl
je
and
mov
ret
and
fs
js
addr16
ja
push
test
mov
sub
mov
push
mov
inc
and
add
and
xor
mov
mov
mov
fistps
xor
sub
dec
sbb
shll
mov
xchg
fmulp
call
xchg
js
es
shr
pop
adc
push
ficomps
cmpsl
pop
and
call
sbbb
mov
push
iret
cmpb
es
pop
loop
adc
mov
dec
jo
js
fstpl
mov
lcall
mov
popa
push
adcl
xchg
jo
jp
and
mov
fnstenv
cmp
or
inc
or
adcl
cmp
enter
cmp
mov
out
arpl
push
pop
cld
adc
fcoml
adc
push
lds
jmp
pop
je
testb
mov
icebp
dec
mov
dec
and
pop
incb
pop
das
fimull
mov
inc
sti
push
aad
movsl
paddsw
dec
mov
mov
xor
decb
inc
xchg
push
mov
or
mov
sub
in
repnz
pop
inc
popf
das
fidivrl
out
aad
adc
push
mov
dec
sbb
lods
sbb
iret
ljmp
push
mov
sti
outsl
or
mov
movsb
daa
cmp
das
jp
enter
call
mov
pop
sub
hlt
push
or
ret
testl
mov
jp
cmc
fimull
jne
int3
cs
and
nop
into
xor
cmc
add
add
int
cwtl
mov
mov
setle
movsb
inc
fisubl
pop
sub
push
hlt
mov
pop
inc
arpl
jb
jl
push
pop
push
rolb
push
inc
out
dec
push
and
movsl
arpl
jne
push
and
repz
pop
add
stos
lods
das
pop
inc
adcl
xchg
inc
pop
pop
mov
ss
sarb
insb
xor
test
faddl
cmp
test
sbb
jnp
aam
or
dec
jno
push
rcl
cli
in
aas
into
into
mov
test
add
in
add
gs
into
ja
in
paddb
pop
scas
cmp
push
int
jns
xor
cmc
xor
popa
add
adc
or
jmp
movb
cmp
cmpl
call
iret
xchg
lahf
cmp
and
out
mov
sbb
lds
sbb
aam
xchg
in
xchg
jecxz
popa
mov
adc
in
add
nop
movsl
or
int3
ljmpw
stc
stc
in
out
jp
das
test
inc
jb
ljmp
je
add
lods
insb
fnstcw
in
orl
lods
sub
movsl
dec
pop
mov
lret
and
int3
jne
inc
nop
mov
dec
xchg
loope
cli
lret
xor
pop
or
nop
add
adc
jge
add
sbb
lret
loope
jbe
not
inc
adc
enter
inc
daa
dec
and
push
movsl
test
out
pop
jne
hlt
mov
adc
fdivrl
lahf
fdivs
or
scas
cs
fsubr
fimuls
dec
adc
pop
add
repnz
aad
popa
or
adc
xchg
pop
testl
ficompl
dec
adc
mov
nop
jl
cmp
inc
insl
test
push
test
xchg
in
out
jnp
cmp
nop
and
aam
lmsw
leave
aad
adc
outsb
xchg
fwait
dec
or
adc
ja
dec
scas
inc
in
or
add
int3
gs
inc
dec
mov
xor
sbb
sbb
stos
inc
sbb
lahf
aad
lret
mov
pop
pop
aam
add
sub
cs
mov
adc
push
mov
sbb
sbb
fwait
cld
mov
xor
mov
call
push
arpl
mov
cmp
cmp
mov
add
incb
popa
jo
scas
push
mov
or
and
cmc
mov
scas
ljmp
das
mov
mov
mov
add
in
popl
arpl
sbb
pop
xchg
stc
xor
dec
or
or
push
jne
push
test
lcall
and
xor
test
aaa
jns
movsl
addr16
icebp
pop
fdivs
dec
jle
cmp
inc
lret
inc
mov
and
dec
sub
or
add
add
loopne
mov
aad
sub
das
xor
mov
jb
xor
adc
or
add
dec
mov
sub
iret
cs
pop
mov
imul
jl
pop
mov
jecxz
test
cmc
and
pop
jp
mov
clc
clc
adc
xchg
push
sbb
popf
jo
cmp
shlb
adc
jmp
adc
push
out
popf
push
push
rol
pusha
push
fistps
ja
fdivrl
test
sub
jp
jmp
jne
sbb
negl
jbe
in
loopne
cmpsl
push
add
mov
lods
js
push
inc
inc
std
xor
leave
test
add
ret
rolb
jae
adc
adc
sbb
imul
dec
into
leave
repz
mov
out
sbb
lret
sub
add
cmpb
mov
xor
in
cmp
pcmpgtw
call
popa
aas
out
add
or
incl
outsl
mov
mov
imul
cmpsb
into
dec
fstpl
mov
jno
push
repnz
cmp
jno
ja
push
dec
xchg
das
mov
addr16
dec
inc
mov
pop
pop
jns
sbb
and
dec
ja
jecxz
cmp
or
movsl
dec
idivl
pop
fstps
dec
xchg
enter
inc
sbb
jle
int3
pop
scas
xchg
xor
iret
sti
xor
int3
sub
outsl
and
insl
inc
ljmp
in
xchg
les
movsb
data16
sub
int3
ja
sbbb
lcall
jmp
lret
test
test
mov
inc
fbld
test
mov
jbe
pop
xchg
mov
jae
inc
cmp
add
or
or
mov
pop
enter
sub
lock
pop
pusha
lods
inc
imull
lods
jns
pop
lret
sbb
jg
mov
stc
pop
pop
sahf
scas
mov
ret
mov
mov
inc
sahf
mov
add
xor
in
mov
push
gs
cltd
mov
sub
cmp
stos
pop
sbb
push
push
icebp
fcompl
lods
jle
out
mov
fildl
sbb
sahf
pop
push
pop
mov
cmp
xor
adc
xchg
cli
push
sbb
popf
repnz
hlt
adc
push
in
iret
jle
xor
mov
mov
mov
rcrl
cmp
or
sub
je
ret
fiadds
cmpsl
insb
sarl
add
sarb
fistpll
xor
ret
stos
mov
loopne
jg
pop
pop
lcall
dec
mov
inc
xchg
inc
sbb
lret
lock
in
xor
aas
inc
pop
cs
sbb
mov
rdmsr
push
cmp
sbb
add
sbb
cltd
xchg
xchg
in
jmp
pop
xor
inc
rolb
xchg
fs
movsb
ljmp
jg
jns
test
loop
inc
dec
jno
aam
scas
rcr
mov
outsb
cld
mov
dec
pop
sbb
push
push
push
xor
lret
shll
pushf
sub
cli
lods
mov
pop
or
xor
pop
lahf
lret
inc
jecxz
das
ljmp
mov
dec
jecxz
adc
mov
inc
jae
mov
das
pop
enter
std
dec
fnsave
push
leave
xlat
shrl
and
in
aam
dec
mov
in
cmp
push
fsts
or
pop
adc
add
add
dec
lret
mov
outsb
lret
pop
adcb
pop
mov
insb
adc
mov
das
shlb
mov
push
or
stc
push
mov
and
mov
sbb
or
std
jae
or
sub
xchg
test
xor
les
and
xchg
movsb
ds
inc
inc
jge
and
xchg
mov
xchg
jg
fisubs
lret
mov
mov
inc
into
aam
testb
lret
in
sbb
mov
jecxz
dec
and
xor
stos
rcrb
testl
setg
js
loop
jg
lcall
and
call
xor
js
push
outsb
jo
js
clc
or
std
jecxz
or
je
les
dec
sub
lods
aad
inc
mov
or
pop
xor
bound
xor
lock
lods
in
dec
movsb
dec
cs
jae
inc
inc
push
mov
fbstp
cld
cmpxchg
loop
bound
pushf
movsl
sar
repnz
xor
sbb
jb
lds
sub
call
lret
pop
mov
stos
das
adc
mov
jg
pop
insb
test
lret
jl
pop
and
popf
ret
outsb
lret
lods
ret
xchg
imul
push
ja
out
stc
cmp
test
sub
sub
cwtl
and
test
xorb
data16
xchg
call
jecxz
iret
bound
std
or
cmp
pop
or
shl
jo
jge
mov
xor
icebp
pop
pop
bound
jp
fadds
scas
sbb
cmpsl
in
push
jmp
pop
icebp
sti
pusha
xchg
or
pushw
sbb
mov
clc
adc
fildl
cmp
jbe
xor
dec
adc
and
mov
pop
inc
insl
inc
inc
leave
sbb
jns
mov
pop
pop
ret
js
push
add
cmp
into
das
sbb
jb
scas
mov
sbb
push
cmpsb
roll
adc
loope
and
add
test
jge
repnz
xchg
jbe
sbb
mov
add
mov
xor
fldt
push
adc
or
dec
jbe
or
sti
movsb
pop
aad
push
jns
mov
bound
insl
pop
lds
popf
push
sti
jo
mov
sti
push
mov
inc
lret
les
cltd
call
cmp
jb
loop
cmp
or
pop
out
std
in
int3
fwait
in
icebp
dec
sub
test
add
cs
add
repnz
dec
and
sbb
mov
xchg
ds
xlat
xchg
pop
mov
add
cmp
test
mov
jle
daa
lock
mov
idivl
jae
movsb
mov
pop
lds
lods
sbb
mov
lcall
cltd
mov
call
cmovne
shr
and
push
mov
mulb
add
sbb
ljmp
push
mov
mov
pop
xchg
xchg
in
xor
ret
leave
icebp
or
jo
and
cmp
ss
push
ds
mov
sbb
push
and
jb
push
or
mov
xchg
dec
mov
out
mov
clc
out
jns
push
xchg
test
add
jae
aam
mov
push
lods
mov
ret
xor
pop
notl
sbb
mov
test
cmp
sbb
jle
loope
push
insb
sub
movsl
add
clc
call
cmp
pop
jbe
mov
or
push
mov
xchg
inc
je
mov
fsubrs
push
jp
addb
inc
push
xchg
imul
mov
dec
scas
cmp
mov
repnz
out
aad
insl
and
insb
mov
lock
es
mov
pop
aaa
and
xchg
or
js
inc
pop
gs
out
rcrl
mov
enter
push
inc
insb
pop
cmp
fsubl
pop
cltd
inc
sub
jns
fcoms
fcompl
in
dec
popa
pop
mov
cmp
divl
or
clc
scas
sarl
scas
clc
cmp
xchg
pushf
and
icebp
mov
enter
data16
out
mov
lds
insb
dec
jns
je
mov
push
es
insl
inc
add
and
jmp
loop
inc
repz
into
push
fadds
xor
jno
jae
out
push
cmp
xchg
inc
pop
std
xor
outsb
xor
add
push
xchg
or
mulb
gs
jnp
cmp
or
mov
pop
cmp
popa
pop
mov
inc
pop
and
xchg
loopne
xchg
rorb
add
xchg
popa
mov
mov
pusha
pusha
je
sarl
pop
xchg
das
call
add
and
mov
push
sbb
xchg
out
inc
sub
outsl
xor
int3
test
insl
lock
dec
and
sub
sub
fs
jge
adc
xchg
jne
push
outsb
test
pop
xchg
vpmaddwd
cmc
push
jbe
pop
rcrb
adc
or
or
or
fbld
gs
mov
lea
xor
mov
fs
inc
sub
xchg
add
cmp
roll
xor
popf
lret
push
mov
adc
std
dec
pop
outsl
pop
rclb
shl
cmc
push
and
es
mov
add
mov
mov
jmp
xchg
insl
xor
sete
ja
loopne
mov
sub
lahf
lret
sub
or
push
jae
adc
je
rcrl
cmpsb
arpl
jo
dec
sar
dec
xor
or
adc
push
imul
pusha
mov
add
popf
stc
jmp
cmp
and
jns
mov
cmp
cs
push
sub
outsl
pop
sub
xchg
aaa
and
xchg
pop
or
sbb
xchg
out
ret
dec
sbb
int
ret
fistpll
pop
dec
addb
bound
mov
or
decl
fstl
mov
mov
mov
jnp
push
fst
push
mov
jle
adc
ds
loope
in
push
fistpll
cmpsl
ds
aaa
dec
dec
and
pop
fucomp
dec
outsb
add
fnstcw
loop
shlb
in
insl
ds
subl
xor
std
rcl
cltd
bound
mov
jae
dec
cmc
je
mov
push
repnz
icebp
mov
and
shl
sbb
xchg
call
lea
int
push
or
fistpl
add
sbb
add
mov
pop
lret
int3
pop
insl
sbb
mov
fmuls
push
pusha
mov
cltd
mov
cmc
lret
fwait
pop
leave
pop
stc
pop
subl
fincstp
fdiv
outsb
sub
push
and
and
jae
cmp
xchg
mov
movsl
xchg
cmp
push
scas
arpl
mov
jmp
cmp
inc
push
xchg
jle
or
xchg
cltd
movsl
inc
cltd
sub
insl
sbb
add
xchg
xchg
push
psrld
rcrb
jecxz
jmp
or
mov
ds
or
adc
test
insl
repz
mul
std
nop
cld
sbb
or
leave
popa
xor
test
inc
stos
out
pop
lock
xor
xor
rclb
dec
stos
inc
pop
and
stos
mov
mov
fbstp
ja
cmc
adc
adc
mov
cltd
fcomip
scas
add
xchg
jmp
mov
call
fwait
dec
mov
stos
test
gs
pop
cmp
lods
dec
int
mov
sub
cli
scas
dec
and
add
pushf
sub
jae
or
out
cs
push
push
sahf
adc
dec
cmc
dec
jnp
jae
inc
mov
ss
inc
into
scas
jg
add
lds
cmp
sbbb
ror
jle
cmp
shlb
in
xlat
dec
enter
imul
xor
inc
push
fnstsw
xchg
mov
xchg
and
or
jle
cmp
cmpsl
pop
mov
mov
stos
aam
ret
out
cmp
movsl
icebp
mov
add
mov
inc
sbb
xchg
pop
add
sbb
or
xchg
out
aam
xlat
cmp
leave
lock
dec
jecxz
add
xor
cmp
cmp
ja
in
fimuls
pop
sbb
adc
xor
mov
dec
jle
nop
inc
int3
popa
jns
and
test
pusha
insl
aas
mov
or
shlb
sub
sbb
jge
dec
call
xor
or
jns
test
test
push
aas
jecxz
mov
push
sti
jno
ljmp
loop
test
sbb
loopne
push
pop
jnp
out
scas
pop
adc
mov
aam
enter
push
push
pop
push
out
popf
mov
stos
and
sbb
lock
out
shrb
test
jae
xor
mov
ss
rclb
cmc
or
rcrb
scas
cmpb
orb
mov
jecxz
mov
pop
jo
xor
mov
lds
or
out
movsb
xchg
leave
push
call
aam
popa
js
inc
in
push
daa
mull
mov
out
inc
adc
cmp
lcall
push
mov
pop
and
push
dec
xlat
mov
mov
dec
jmp
loop
mull
out
pop
hlt
mov
je
jb
xor
ret
mov
and
popf
fsub
test
testl
and
push
sub
dec
pop
icebp
popa
lock
xchg
sbb
repnz
lods
data16
and
fwait
and
das
nop/reserved
fwait
cmp
pop
mov
repnz
ds
mov
mov
std
mov
mov
inc
lcall
xchg
lret
push
daa
sbb
push
xor
push
jbe
pop
test
outsb
popf
data16
popfw
jnp
inc
inc
sbb
stc
popf
jmp
pop
jmp
mov
push
pop
loopne
int3
cwtl
lahf
shll
sub
mov
repz
pop
sub
inc
inc
mov
mov
iret
sti
mov
and
sub
mov
dec
int3
in
and
push
xor
loope
push
and
mov
testb
add
inc
shrl
mov
pop
aad
mov
call
sbb
and
or
xor
repnz
stc
push
xchg
xchg
mov
test
push
call
pop
adc
in
mov
inc
push
clc
lods
jae
cli
sarl
xchg
jb
sti
clc
mov
pop
inc
jno
sahf
sti
dec
sub
outsb
mov
pop
es
mov
or
jnp
outsl
cli
xchg
or
push
push
mov
jg
scas
mul
fcos
lods
jmp
in
out
ja
fprem
and
imul
cmpsb
gs
pop
inc
ja
inc
sbb
push
xor
pop
gs
mov
cmp
aam
daa
add
arpl
hlt
jae
jecxz
lret
and
adc
sbb
inc
pop
add
pushf
mov
sub
stos
and
je
cmp
push
stos
cmc
push
imul
enter
imul
adc
or
mov
adc
dec
pop
sahf
loope
ret
roll
mov
jle
mov
stc
cmpsb
mov
pop
fisttps
push
xor
loope
cmp
repz
in
roll
nop
insl
pop
xor
fs
push
sbb
sbb
stos
jb
pop
mov
divb
cmpsl
test
xchg
sbb
push
lds
stos
negb
call
shrl
inc
mov
jmp
mov
mov
ljmp
push
adc
inc
mov
sub
daa
ret
cmp
dec
cwtl
scas
push
inc
sub
inc
lods
scas
gs
fld
scas
outsl
insb
dec
inc
sbb
rclb
push
jne
pop
hlt
jo
inc
subl
test
stc
mov
call
frstor
sbb
sub
cli
dec
imul
in
in
or
dec
in
call
mov
pop
mov
int3
xor
mov
sbb
notl
mov
mov
pop
mov
es
or
sub
sub
mov
adc
inc
shll
dec
fs
pop
jb
ja
xchg
dec
push
cs
ljmp
test
cmpps
add
out
push
mov
clc
xor
jg
fdivrs
lret
sub
out
push
cltd
inc
test
inc
xchg
neg
int3
popf
inc
inc
sbb
cwtl
jb
xlat
jno
sbb
adc
mov
aad
and
rolb
pusha
lods
sahf
sbb
shrl
jp
add
pop
jmp
adc
cmp
movsb
dec
out
xchg
sbb
dec
cmpsl
shll
iret
push
mov
add
pop
divl
pop
cmp
fldl
dec
lret
imul
loop
lods
mov
mov
sub
xor
fs
mov
test
dec
mov
mov
dec
sbb
jecxz
add
and
cmp
enter
dec
nop
dec
je
jge
jge
sbb
inc
inc
adc
call
xor
pop
mov
mov
pop
jo
sbb
push
fsub
xor
mov
mov
cli
and
or
dec
repnz
jg
lods
in
gs
xor
loop
jns
ds
and
sub
add
or
mov
cld
mov
arpl
movsl
inc
sbbb
cmp
shr
ror
insb
xchg
sbb
ds
addr16
jne
xchg
out
pop
sbb
popf
push
addr16
dec
mov
mov
jecxz
in
cmpsl
fsubrl
sub
fwait
mov
stos
push
push
std
mov
aaa
xor
inc
push
and
adc
xchg
call
push
dec
add
cmp
mov
leave
inc
and
test
and
adc
mov
test
into
pop
xchg
in
cmp
inc
xchg
lock
inc
ds
insl
and
add
adc
push
xor
enter
sbbl
add
and
and
xlat
sub
addr16
sbb
ficoml
aaa
mov
incb
sub
mov
jns
xor
in
lea
das
push
clc
insl
insl
mov
mull
movsl
dec
xor
xchg
notl
stc
mov
jg
insl
or
call
push
dec
mov
mov
xor
sbb
fnstsw
dec
push
test
pop
stos
repnz
jmp
push
int
mov
dec
inc
xchg
jmp
xchg
jl
xlat
add
inc
push
xchg
mov
mov
pushf
pop
cwtl
scas
shlb
jecxz
add
jge
lods
cmp
xlat
xlat
dec
push
mov
lock
ljmp
fldenv
mov
mov
add
ds
pop
cmp
mov
jnp
popf
repz
mov
jl
xchg
clc
loop
jl
dec
enter
mov
lret
fcoml
xchg
das
xchg
mov
jne
popa
pop
pusha
fcomip
dec
push
mov
call
clc
bound
out
xor
scas
insb
adc
pop
dec
aad
mov
cli
je
sub
test
popa
adc
icebp
jnp
mov
mov
push
xor
adc
inc
adc
or
and
xchg
lahf
or
nop
repnz
adc
sbb
and
stc
dec
jg
mov
add
out
sub
out
data16
xorb
adc
push
xchg
mov
jns
sarl
mov
and
es
add
out
fcmovbe
iret
mov
inc
test
and
daa
leave
fistpll
pop
into
mov
mov
push
cmpsl
sarb
sbb
aad
pusha
in
jle
gs
or
and
scas
and
or
jnp
lret
test
sub
jmp
fidivl
das
and
sti
dec
push
test
rol
rcrl
and
subl
cmp
adc
or
or
les
sbb
mov
gs
push
lret
mov
ret
out
nopl
inc
mov
jo
sbb
jp,pt
out
arpl
insb
decb
sbb
pop
repz
das
nop
push
xor
push
nop
les
sub
pop
cmp
and
pop
or
idivb
cli
fisttpl
xchg
mov
jle
xchg
sbb
mov
and
mov
push
dec
stos
gs
int3
mov
mov
mov
push
fists
js
mov
lods
mov
sahf
clc
sub
pop
jae
add
dec
icebp
push
or
sub
sub
sbb
mov
mov
dec
lahf
inc
mov
dec
orl
jne
or
ja
lods
cmp
mov
or
pop
out
pushf
pop
stos
jge
rolb
pop
push
sbb
bound
repnz
test
mov
jg
aad
xor
jmp
push
inc
cmpsb
cmp
fcomps
cmp
cltd
push
ret
mov
notl
in
sbb
les
in
sbb
jle
inc
sub
and
mov
mov
fcomp
addr16
dec
mov
mov
jbe
rep
jg
add
imul
mov
pop
sbb
fs
rcrb
sbb
jbe
test
mov
mov
out
dec
movsl
pop
push
adc
repnz
lret
sub
dec
fwait
js
mov
sub
mulb
popa
inc
inc
fwait
rol
ret
jae
cmp
out
popf
shlb
fs
cmp
and
js
sub
cmp
sub
jle
icebp
mov
pop
fildll
add
int
jge
cmp
xchg
xor
movl
jnp
int3
fadds
pop
mov
hlt
clc
dec
es
inc
roll
sbb
mov
std
jle
repnz
mov
in
and
cld
jns
cld
popa
pushf
popa
test
cwtl
xor
and
cwtl
add
popl
in
fistpll
enter
scas
inc
in
fcoms
xchg
push
mov
mov
pusha
rorb
xchg
std
test
and
push
sub
stos
push
add
test
lret
and
xor
add
out
movsb
cwtl
xorb
xchg
cmp
pop
mov
push
into
stc
mov
data16
cmp
imul
push
pop
scas
mov
repz
out
cwtl
pop
icebp
divb
ljmp
jo
pop
aad
test
cmp
test
in
mov
push
sub
fdivrs
xor
cmp
adc
mov
or
pop
mov
pop
pop
jns
stos
mov
push
or
adc
fwait
gs
xchg
leave
adc
xchg
sbb
std
hlt
sub
mov
leave
scas
jp
push
inc
push
bound
mov
call
cmpb
daa
xor
xchg
dec
lcall
fwait
xchg
jnp
popf
inc
adc
xlat
sbb
fcomps
add
push
sub
dec
mov
daa
lret
jns
sub
insl
es
test
jns
dec
jle
in
lret
cmp
push
xchg
xchg
dec
push
sbb
imul
mov
in
repnz
mov
js
ljmp
mov
mov
fidivrl
int
rcll
je
sti
out
aas
adc
aas
lret
xor
clc
cmp
fs
sbbb
pop
xchg
xor
call
test
dec
mov
mov
adc
aas
xor
adc
sahf
aam
iret
shlb
fildll
pushl
inc
push
scas
mov
mov
jo
xor
insb
mov
out
inc
inc
jns
push
cli
mov
mov
jnp
pop
pop
aam
or
push
gs
xchg
cmp
adc
mov
add
xchg
sti
popf
ljmp
and
pop
push
inc
jle
jl
cld
adc
xor
cld
popf
dec
int
div
xchg
push
fisubl
in
xchg
out
loopne
les
pminsw
icebp
es
sbb
mov
arpl
xor
jg
shl
sbb
aad
mov
xlat
xchg
pusha
jl
inc
subb
cwtl
mov
jge
popa
negb
push
push
lahf
cmp
test
lcall
outsb
pop
sub
mov
lcall
xor
xchg
dec
push
gs
and
xchg
pop
xchg
add
dec
add
cld
push
mov
ficoml
sub
inc
mov
pop
lods
repnz
jl
cmpsl
jbe
lcall
push
fcoms
jbe
out
mov
mov
dec
add
mov
xor
jmp
clc
movsl
push
fwait
out
sbb
repnz
add
cmpsl
inc
mov
mov
jp
jne
roll
lods
push
sub
xor
imul
mov
mov
hlt
mov
into
sub
test
adcb
ljmp
add
mov
or
mov
sub
in
xor
addr16
hlt
subb
rol
pop
test
lret
insl
push
hlt
pop
mov
mov
testb
jle
div
push
inc
cltd
adc
xlat
jne
fsubs
adc
push
sub
push
icebp
pop
das
mov
leave
icebp
mov
adc
notl
leave
dec
mov
mov
dec
jno
xor
cmc
adc
ss
xchg
pusha
xchg
jb
idivb
xlat
insl
aam
imul
inc
mov
mov
or
lahf
adc
lahf
sbb
pop
push
mov
sbb
loopne
cmpsb
adc
or
leave
cmp
mov
cmp
mov
xor
ds
rep
push
cmp
mov
mov
loopne
int3
pop
popf
mov
pop
cmc
fs
jmp
pavgb
push
dec
or
xor
bound
sbb
inc
jae
int3
dec
or
dec
push
xchg
in
lods
negl
mov
sti
in
xor
orb
sbb
lcall
test
pop
xchg
xor
push
lea
leave
sbb
add
jo
pop
push
xor
or
dec
mov
xchg
push
and
aam
icebp
rcr
xchg
cmp
js
std
repnz
bound
push
nop
adc
into
and
fistpl
imul
sbb
mov
cli
incb
inc
dec
gs
push
sbb
out
dec
or
test
cli
imul
loope
arpl
inc
ret
pop
pop
mov
xchg
imul
jo
cltd
jg
ret
xor
or
sbb
mov
push
repz
cld
mov
ja
adc
cli
pop
mov
jecxz
daa
leave
icebp
movsb
addr16
mov
adc
addr16
and
pop
int3
mov
xchg
jle
add
cmp
sub
mov
sbb
out
add
out
and
mov
and
mov
call
jae
jnp
cmpsb
mov
push
bnd
jbe
hlt
jns
pop
scas
js
in
xchg
out
xorb
andb
dec
sbb
inc
cmc
xor
popf
push
pop
mov
push
testl
push
jp
inc
sahf
pop
into
scas
hlt
cld
lds
and
int
and
arpl
xor
das
cwtl
movsl
dec
adc
sub
sbb
jmp
in
or
sbb
fs
ret
cmovbe
mov
daa
or
sub
sbb
and
out
jbe
sub
out
test
das
pop
push
pop
inc
fisubs
out
push
xorl
nop
loop
enter
in
xchg
dec
adc
insl
xchg
inc
fiadds
movsl
shll
clc
inc
xchg
dec
cmp
testb
xor
push
dec
push
gs
stos
push
call
adc
cmp
push
push
out
xchg
xor
aas
negl
roll
ret
lret
incl
adc
dec
mov
dec
jb
cmpl
fwait
enter
fwait
out
mov
xlat
mov
pop
or
decb
imul
sahf
clc
shrb
fcmove
andb
test
dec
ret
or
or
fnsave
sbb
icebp
inc
lahf
cmp
fstl
push
pop
pop
xchg
xchg
inc
add
lods
jmp
negb
and
push
sub
fstpl
out
push
movsb
nop
push
imul
out
jmp
xor
loop
or
incb
aas
test
adc
pop
mov
add
sahf
mov
stos
pop
stc
push
lret
fbld
je
pop
test
add
jb
cmp
sbb
mov
mov
push
in
or
mov
sti
xchg
push
xchg
xchg
and
movsl
dec
pop
jae
add
cmpsl
sbb
inc
fisubrs
add
daa
fucomip
inc
add
test
mov
jmp
push
cmp
sub
cld
pop
outsl
cmpsl
inc
out
cmp
xor
das
mov
aas
mov
pop
xor
imul
adc
daa
lret
mul
inc
dec
out
or
rcr
movsl
out
dec
insl
mov
out
outsl
xor
jg
xchg
or
pop
mov
cmp
lret
outsl
mov
jbe
cmpsl
popl
dec
inc
sbb
imull
inc
pop
dec
rcr
or
popa
mov
mov
dec
sbb
adc
add
xlat
inc
dec
lret
push
cmp
mov
xchg
test
mov
inc
sbb
test
insl
jmp
inc
or
sahf
fisubrs
loopne
iret
add
pop
ss
fs
mov
mov
mov
inc
gs
add
add
pop
roll
test
jb
xchg
inc
sub
inc
adc
andl
push
decl
inc
out
mov
scas
jle
not
cltd
mov
scas
int3
xor
add
imul
push
dec
loopne
adc
or
orl
sub
je
shlb
insb
in
lret
andl
or
pop
and
insb
shlb
add
pusha
xchg
cmp
push
mov
sub
ja
push
add
arpl
dec
andb
cmp
sahf
push
fwait
fwait
cmp
fldl
sub
aam
lods
stc
pop
mov
mov
xorl
and
jle
rcrl
jo
outsb
mov
xor
jbe
pushf
xor
xchg
cltd
lcall
xor
sub
movsl
mov
scas
fdivs
aam
jns
add
fiadds
xor
mov
in
in
outsb
xlat
mov
jp
dec
add
adc
lahf
jne
insb
xchg
outsb
daa
aaa
pop
pop
cltd
adc
fisttpl
subl
jne
lret
pop
sub
mull
dec
adc
push
inc
vcvtdq2ps
loop
mov
fiadds
push
sbb
inc
pop
pop
mov
sub
sbb
ret
and
dec
stos
out
or
jle
mov
aam
dec
xlat
sbb
push
push
mov
push
insl
lret
ljmp
mov
stos
bound
imul
sbb
and
cmpsb
push
int
mov
inc
or
add
or
mov
aas
lret
push
jle
mov
mov
pop
jae
rolb
vpor
int
sbb
in
add
push
jmp
lahf
and
mov
mov
jmp
loopne
insl
addr16
xchg
lock
rol
nop
cmp
jmp
xor
xchg
mov
and
pop
sub
in
sbb
pop
lcall
xor
mov
cmovno
dec
call
test
mov
lds
xor
adc
mov
pop
aad
int
jg
sub
sub
in
and
cmc
ret
cmp
fistpll
sub
add
jl
fs
jnp
gs
scas
mov
jbe
xchg
jge
scas
and
mov
mov
mov
arpl
pop
mov
cmpsb
cli
cltd
popa
clc
sahf
xlat
jp
sbb
adc
cmp
cld
cmp
cmpsb
or
mov
imul
cltd
xchg
xchg
sar
rclw
pop
xor
mov
mov
and
into
push
pop
xchg
jmp
and
stos
xchg
ljmp
stc
mov
pop
xchg
shrb
mov
dec
mov
cmpsb
pusha
xchg
pop
dec
arpl
fisubl
stos
jne
rorl
ret
lahf
push
jmp
inc
push
push
pop
cmpsb
mov
sbb
xor
out
out
xchg
ret
out
sarb
xor
xor
push
aad
jbe
test
push
mov
sub
jmp
cmpsb
test
sub
test
mov
sbb
jle
cmp
sub
pop
mov
ja
test
jle
sbb
lock
repz
mov
mov
sahf
shrb
repz
jle
or
or
or
dec
xchg
rolb
mov
sbb
xchg
xchg
dec
xchg
xchg
enter
mov
sbb
jecxz
mov
xchg
xchg
xchg
insl
and
xchg
ret
mov
test
insl
mov
lret
arpl
adc
push
pusha
daa
cmc
jmp
jns
loopne
insl
je
lods
xor
cltd
push
cld
xchg
fsts
repnz
outsl
push
cmc
and
mov
mov
dec
cltd
mov
sbb
icebp
push
jo
mov
sub
mov
push
push
ljmp
jno
adc
test
pop
addl
add
cmp
push
sbbl
ja
es
sbb
mov
cmp
pop
leave
lods
gs
add
aad
es
sub
lea
push
movb
xor
js
subl
dec
mov
sub
push
stos
cs
movl
pop
hlt
sbb
outsb
pop
mov
pop
mov
sti
xorb
test
mov
rcll
mov
mov
dec
and
xchg
pop
and
add
cmp
aaa
fstpt
outsl
cmp
xchg
or
lret
mov
cltd
sub
and
push
xor
rdmsr
xchg
ljmp
mov
push
pop
jbe
out
movsl
andb
and
adc
mov
call
fistl
xchg
mov
sub
aas
mov
aas
xor
es
add
and
and
or
lods
shlb
ljmp
lcall
adc
jge
ret
adc
adc
pop
sbb
clc
dec
sub
outsl
adc
lea
out
pop
push
loopne
dec
pop
mov
ltr
fisubl
andb
and
movsl
dec
mov
cmp
test
push
scas
daa
sbb
mov
jge
sbb
adc
iret
ss
jno
daa
jnp
lret
ja
mov
adc
push
push
js
pop
jne
pushf
push
lods
xor
repz
icebp
roll
testl
gs
cmp
or
in
fldl
aas
push
lea
mov
mov
xor
shrl
xchg
xor
cltd
xchg
fisubrl
mov
loope
mov
push
clc
mov
fistps
adc
cld
mov
push
cmp
movsb
jo
xchg
push
movb
stc
push
fwait
loop
push
mov
imul
cmc
push
popa
mov
pop
orl
aaa
adc
pop
lcall
sbb
hlt
jg
push
in
mov
mov
add
ljmp
mov
notl
loopne
xchg
shrl
aad
xchg
xchg
sbb
icebp
fucomp
xor
cmpsb
data16
jmp
lock
repz
js
dec
lcall
xchg
push
and
mov
inc
nop
jns
sbb
aaa
and
mov
test
pop
inc
cmc
add
movl
mov
xchg
aad
mov
in
jbe
rcl
adc
outsb
sbb
clts
stos
mov
mov
mov
pop
mov
outsl
filds
mov
in
dec
shl
xchg
std
test
inc
dec
scas
mov
xchg
jns
inc
int
cmc
xlat
ss
int
lds
sbb
rolb
subl
or
xor
imul
pop
stos
cli
jg
fcompl
data16
fcmovb
jb
adc
out
pop
in
jae
movsl
xchg
sub
push
std
jnp
mov
aaa
mov
adc
pop
fistl
pop
test
dec
push
mov
test
imul
repz
xor
cld
xchg
addr16
outsl
sbb
adc
ja
int
insb
repnz
mov
or
cwtl
lods
sahf
pop
adc
ret
xchg
ret
adc
cs
sub
clc
test
mov
and
fs
mov
and
add
loope
xor
add
mov
in
loop
cs
fisubs
movsb
popl
pusha
sahf
mov
mov
ds
xchg
das
fs
scas
outsb
loop
pop
mov
ret
imul
cmp
jle
fiaddl
dec
bound
jno
ds
pop
and
outsb
add
mov
sbb
pop
adc
andb
adc
jecxz
outsl
mov
mov
aam
inc
fs
std
out
and
fcoml
inc
stos
cwtl
ljmp
jne
or
outsb
idivb
mov
pop
movq
lock
cmp
fs
and
adc
xchg
popf
test
pop
dec
sbb
push
out
pop
pop
test
cmc
das
xchg
aam
cmpsl
and
lret
and
add
or
sub
repz
mov
inc
mov
push
popa
nop
adc
lcall
push
xor
lcall
icebp
frstor
sbb
push
hlt
mov
push
xchg
loope
mov
lcall
and
test
stc
or
push
insl
jae
push
cltd
xor
push
imul
sub
sub
push
std
test
scas
push
cmp
inc
xor
imul
xchg
in
sub
shll
test
jbe
mov
sahf
pop
mov
rclb
dec
jp
aas
add
imul
iret
iret
jo
or
mov
insl
aam
push
sbb
mov
add
or
mov
or
mov
cmp
cmc
or
sbb
xchg
ljmp
xor
or
shlb
inc
pushf
mov
sub
dec
cmp
mov
jcxz
and
push
out
sub
xor
xor
int
insb
dec
negl
jae
dec
ja
cs
mov
push
mov
cmp
cld
das
mov
push
aam
dec
pop
jle
adc
dec
int
cmpb
pop
inc
sub
xchg
call
loope
test
test
lret
pop
stos
aaa
test
aaa
decb
mov
and
xchg
mov
vmovntps
pushf
inc
jmp
xor
mov
xchg
cmp
fldt
daa
push
mov
lods
xor
iret
inc
push
sbb
in
fsubp
jo
ficompl
xor
roll
xchg
cli
lods
jg
xor
pop
movsb
add
xchg
clc
push
ljmp
push
cmc
leave
scas
and
dec
hlt
jecxz
rcrl
mov
sub
jmp
adc
addl
jg
xchg
push
xchg
pusha
aam
incb
mov
sub
inc
pop
into
ja
popa
jmp
icebp
pop
subps
jb
push
dec
in
insb
notl
jmp
pop
ret
and
daa
pop
push
dec
ret
jg
fucomp
pop
xchg
jg
aam
sbb
cmpsl
push
add
out
das
pop
movsl
xchg
mov
push
dec
popa
les
repz
sti
out
xchg
jne
fmuls
pop
push
cmp
fld
xchg
aad
adc
adc
popa
ret
je
push
xchg
jg
in
mov
mov
shrw
push
dec
shll
jns
imul
push
loopne
js
jecxz
pop
cld
in
or
cmp
push
xchg
lcall
outsl
mov
or
cmp
mov
data16
adc
imul
push
imul
fsubs
or
mov
mov
fwait
and
cld
adc
sbb
call
add
call
daa
lods
addps
jl
jp
inc
adc
pushf
push
jns
adc
dec
es
inc
sti
int3
out
adc
nop
inc
ss
scas
jne
mov
cmpsl
push
ret
mov
adc
cmc
xorl
ficompl
sub
push
imul
dec
ds
or
pop
test
loope
sub
test
aam
pop
sbb
and
lods
clc
add
aad
repz
or
movsb
mov
stos
in
and
or
xor
push
out
push
arpl
sahf
stc
mov
inc
cltd
mov
jb
pop
scas
add
ret
in
mov
adc
faddl
or
xchg
addb
fiadds
sub
pushl
xchg
xlat
push
ret
dec
out
mov
js
mov
xchg
imul
movsl
or
or
cmpsb
andl
outsb
lret
or
cmp
lods
mov
fwait
jo
repnz
test
enter
je
fnstenv
xor
imul
jle
push
add
xor
lds
dec
push
inc
stc
and
cmp
jae
add
scas
add
mov
and
cmp
jnp
dec
jmp
push
out
xchg
xchg
jl
add
pop
push
lds
sub
lods
inc
ljmp
cmpsb
mov
adc
or
pop
cli
sbb
pop
ret
lahf
loop
mov
ret
lods
fmuls
jnp
arpl
imul
mov
adc
movsl
mov
fndisi(8087
pop
mov
lcall
cld
dec
jecxz
int3
sbbl
push
mov
sbb
sub
ja
ret
xlat
mov
or
sbb
int
xchg
xchg
add
dec
mov
lds
sbb
rol
lea
shlb
pop
push
add
sbb
arpl
fisttps
cwtl
popa
outsb
aaa
ja
jnp
pop
cmpsl
jp
ret
sbb
pushf
jo
out
add
js
cmc
sbb
xchg
jecxz
mov
add
cmpsl
push
inc
or
test
clc
jno
and
test
stos
loopne
loopne
jp
aas
in
testl
incl
jb
int3
les
stos
into
xorb
jmp
fdivl
xchg
dec
cmp
xor
sub
repnz
ja
mov
sbb
ss
arpl
pop
fsubp
mov
lahf
pushf
mov
mov
mov
cmpsb
or
dec
mov
lock
fsubs
add
mov
xor
sub
aad
mov
les
cmp
test
and
sub
out
mov
xor
pop
icebp
sub
negb
sahf
mov
cmc
push
or
xchg
loope
leave
test
imul
inc
stc
cmp
xor
mov
icebp
ret
fwait
cmp
or
push
sub
mov
ror
mov
or
xchg
push
mov
popl
mov
xchg
or
add
cmpsl
pusha
rcr
outsl
pop
ss
in
xor
daa
das
aam
int
sbb
idivb
push
mov
or
ljmp
add
inc
repz
jge
mov
and
xchg
mov
xchg
scas
inc
mov
push
test
sub
scas
pop
rolb
popa
mov
xchg
adc
jmp
negb
dec
lods
adc
popf
lcall
fcompl
nop
jg
test
fwait
mov
pop
xor
inc
repnz
pop
lds
mov
dec
mov
mov
cmp
lock
iret
in
xorl
inc
sub
in
jmp
sbb
fbld
mov
mov
mov
shl
daa
mov
jmp
nop
or
repz
clc
jle
sbb
mov
shrb
andl
jecxz
leave
push
push
push
add
and
mov
ss
add
sub
loop
mov
fldenv
fstl
jg
shlb
dec
mov
daa
testl
adc
mov
dec
xor
insl
fidivrl
jl
stos
daa
mov
test
ror
cmp
xor
xor
sbb
int
shrl
leave
ja
xchg
xor
add
adc
cmpsb
jge
frstor
cs
shlb
dec
out
add
fstl
adc
inc
lea
sbb
ja
cli
out
int
movsl
inc
int
mov
fstpt
sets
insb
jmp
inc
xchg
bound
in
ja
cmp
mov
sbb
dec
and
adc
pop
faddp
in
dec
test
jns
pushf
pop
sub
mov
ljmp
pop
xchg
lahf
imul
mov
es
aaa
mov
cltd
mov
add
mov
lds
cmp
ja
xor
adc
gs
xchg
icebp
or
inc
imul
inc
sub
icebp
sub
jne
cwtl
lea
mov
mulb
pop
out
enter
push
cld
inc
sti
mov
out
shl
jg
jg
dec
sub
aad
push
mov
inc
jmp
aaa
mov
sbb
aad
int
dec
outsl
inc
mov
lcall
outsl
iret
mov
negl
test
inc
xchg
js
mov
sub
sub
bound
pop
mov
inc
jl
jl
dec
add
xchg
jl
push
cmp
dec
xor
ss
xchg
jnp,pt
popf
fdivrl
adc
cmp
push
push
xor
out
inc
jg
dec
push
aas
nop
outsb
jge
mulb
fidivs
or
xchg
cmc
cmpsb
vmovd
dec
sahf
int
cs
xchg
pop
lods
pop
or
xlat
xchg
pop
mov
mov
and
call
movsl
scas
idiv
fldt
adc
popf
cltd
jae
jbe
sbb
dec
je
es
xor
xchg
add
popa
sahf
push
xlat
lahf
xor
pop
subl
mov
and
inc
and
lret
loope
cmp
adc
push
xchg
sbb
dec
inc
pushf
in
pop
imul
rclb
sub
test
cld
xchg
push
adc
mov
popa
aam
jg
js
xchg
jmp
and
sub
std
jnp
insl
mov
mov
push
ja
xchg
jle
les
and
sub
dec
xlat
orb
jle
mov
mov
sbb
mov
adc
push
mov
ja
jmp
inc
fisttps
pop
and
inc
pop
loop
pop
inc
xor
enter
subb
shrb
fisttpll
mov
shr
mov
push
pop
sarb
shl
fists
fwait
shr
jmp
cmp
sbb
xor
out
nop
pop
pop
call
insb
mov
pusha
mov
icebp
mov
inc
imul
andl
cmp
dec
insl
fwait
inc
cmp
cwtl
in
sbb
popa
cmp
add
push
inc
xor
pop
adc
adc
pop
mov
pushf
cmpsl
ja,pt
inc
gs
ret
push
mov
xor
fsubrl
leave
mov
addr16
mov
xor
data16
cld
xchg
or
imul
pop
jl
xchg
sti
pop
mov
dec
incb
mov
mov
mov
pop
sahf
inc
data16
cltd
enter
int3
popa
fistps
lods
sub
pop
cmpsb
dec
fidivrs
push
test
inc
aam
insb
fmull
int3
in
mov
jp
cmp
aam
cld
adcl
xchg
mov
add
jge
mov
mov
rorb
test
mov
mov
pop
lea
xor
mov
cmp
shl
jbe
jl
jns
sahf
aas
sahf
mov
call
imul
jbe
xor
push
je
sti
add
cmp
jmp
fcomi
push
mov
lret
pop
hlt
cmp
jo
jno
ret
iret
mov
xchg
loop
push
sbb
test
jl
call
in
mov
test
mov
cmp
test
mov
mov
imul
push
push
jle
jecxz
bound
inc
xchg
movsb
arpl
iret
mov
hlt
jle
out
ret
or
inc
mov
movsb
sbb
js
add
int
add
popa
mov
cmp
adc
sub
mov
xor
mov
fscale
mov
mov
cmpsb
adc
aas
fsts
jg
pop
das
out
test
dec
scas
sbb
mov
mov
repnz
pushf
rcl
mov
out
lahf
jp
sub
dec
mov
push
pusha
dec
jmp
stos
mov
popl
cmp
imul
popf
push
cmpsl
loopne
lock
into
in
pop
imul
outsl
insl
sbb
jmp
adc
jbe
loop
iret
cli
fstps
shrb
mov
adc
arpl
mov
sbb
mov
cli
mov
test
pop
fsub
lcall
bound
lds
lret
mov
imull
fnsave
or
and
dec
mov
ss
adc
icebp
sbb
sbb
and
mov
cmpsl
cmp
jmp
lea
or
sbb
inc
pop
cs
jne
mov
mov
jb
add
and
je
mov
push
and
addr16
push
mov
je
adc
movsb
movsb
cld
idiv
mov
dec
movsl
imul
imul
hlt
mov
mov
xchg
fiadds
push
shlb
push
popf
loope
inc
pop
imul
jae
in
mov
sbb
insb
inc
loopne
xor
nop
test
jg
cmp
pop
gs
out
push
outsb
test
out
and
lods
mov
pop
or
inc
rolb
shlb
shrb
or
mov
pusha
or
sub
or
arpl
pushf
sahf
mov
insb
hlt
lahf
test
into
add
or
sbb
popa
push
int3
jmp
fldcw
dec
mov
test
loopne
xor
ficoms
adc
jmp
ds
mov
test
mov
sub
or
cld
insl
pmaxsw
rcrb
fsubl
push
cmpb
sub
ficoms
pop
lea
mov
mov
fsts
jmp
push
ss
sub
push
sub
out
int3
stc
xor
lds
ja
xor
test
test
push
push
mov
out
popf
inc
imul
cmp
addr16
inc
inc
adc
aam
testb
pusha
and
call
rcrb
or
add
jp
mov
jb
mov
rcll
sub
adc
push
pop
sub
jns
xor
pop
loope
dec
push
pushf
add
in
pusha
pop
adc
inc
rcrb
into
cmc
popf
mov
mov
cmp
ficoms
mov
repz
sub
gs
cmpb
scas
inc
test
and
std
add
jne
or
shlb
add
aam
add
aaa
mov
rcrb
mov
push
clc
xlat
ljmp
js
xchg
pop
stc
xchg
pop
lods
lahf
sbb
cmpsl
cmp
pop
mov
adc
imul
inc
aam
cmp
stos
cwtl
mov
xor
xor
inc
cmpsl
cs
mov
pop
jns
or
dec
ret
out
mov
and
sbb
xchg
cmp
lds
or
addb
lret
adc
cs
enter
jb
inc
mov
gs
addr16
push
push
loop
mov
es
divb
adc
cli
sbb
cmpsb
stc
xchg
fdivrs
imul
xor
popa
adc
push
pusha
lret
cmpsl
fs
pop
cs
mov
pop
xchg
in
notb
lcall
data16
cmpb
inc
mov
or
arpl
inc
popa
adc
nop
movsl
and
cmp
mov
jb
adc
lods
inc
cli
jns
adcl
fstpl
clc
push
int3
cli
jmp
enter
leave
and
cmp
call
xchg
outsl
movsl
movsb
nop
rorb
movsl
jp
pop
cli
xchg
hlt
sbb
clc
mov
xchg
and
or
xchg
and
gs
test
negl
scas
pop
lock
insb
dec
shl
pop
dec
fstpt
add
sbb
xchg
cltd
call
cltd
cmp
jle
mov
ficompl
xor
icebp
aad
jmp
or
enter
mov
xor
aas
repnz
out
stos
xchg
std
pop
adc
shrb
mov
adc
je
lds
sbb
lods
repnz
adc
or
mov
loope
pop
sub
cmpsl
or
int
and
dec
addr16
push
clc
xor
mov
xor
mov
fists
dec
orb
fmul
fdivr
jbe
mov
lea
mov
out
pop
pop
mov
cmpsb
repz
faddp
jmp
ja
in
pop
loope
mov
movsb
push
sbb
push
and
lock
leave
loop
lret
jecxz
ljmp
or
call
or
pop
xchg
fdivp
mov
imul
rcl
movsb
xor
cmp
jb
sti
push
adc
push
ret
inc
xchg
jle
inc
mov
jle
xchg
dec
xchg
xor
xor
sub
clc
mov
shl
repnz
movsb
and
popf
out
pop
dec
jge
mov
xor
adc
xchg
test
je
in
test
sbb
scas
xchg
inc
test
outsl
movsl
repnz
jp
out
or
aam
in
movsl
jmp
jle
push
fidivs
stc
cmp
lds
hlt
adc
dec
cs
pop
cmc
icebp
in
and
or
mov
xor
sbb
incl
insb
shlb
jno
cltd
sub
test
popa
and
adc
inc
fimull
in
mov
out
leave
pop
adc
push
xlat
jbe
or
jns
and
arpl
fnstcw
lcall
ja
pop
adc
lret
dec
ss
adc
and
mov
adcl
clc
pop
gs
xor
sub
mov
dec
mov
jmp
cmp
cmp
outsb
inc
and
sbb
push
imulb
jmp
sbb
sub
movsl
mov
lods
jge
loope
call
gs
cltd
add
scas
sbb
mov
jp
pusha
sahf
cmp
stos
lahf
sub
cmp
fnsave
enter
in
sub
and
ljmp
mov
out
fs
or
add
jmp
ret
sub
loopne
insb
cmpsb
mov
pop
ficoml
push
cmp
push
jl,pn
outsl
sub
push
leave
mov
mov
fsubrs
xor
cmp
fsin
xchg
shlb
punpcklwd
adc
or
dec
adc
xchg
outsb
inc
dec
int3
std
pop
pop
js
xchg
shl
subl
in
jmp
lcallw
xchg
pop
and
fildl
sbb
and
sbb
push
xor
push
sahf
or
divb
push
std
push
adc
pop
int
notb
jle
enter
cmp
aaa
mov
push
bound
mov
or
clc
add
or
in
icebp
cwtl
dec
dec
stos
cmp
push
push
sub
cli
push
jns
xlat
xor
inc
or
outsb
pop
mov
add
and
or
pop
add
and
outsb
mov
call
int
dec
dec
jbe
ljmp
sbb
subl
insl
outsb
and
or
aas
lea
int3
sbb
in
icebp
out
add
lret
outsl
outsb
cmp
mov
lock
xor
incb
mov
sbb
dec
fucomi
mov
and
clc
fsts
pop
test
mov
imul
cltd
rorl
jns
in
lret
push
push
sub
jbe
cmp
mov
adc
xor
popa
rorb
sbb
add
push
mov
or
outsb
add
arpl
cmp
mov
dec
sti
pushl
ss
push
std
mov
lahf
mov
cmp
xchg
mov
mov
xor
push
or
lret
push
push
push
int3
loopne
mov
clc
mov
pop
lcall
aad
je
add
scas
icebp
cmp
cs
mov
inc
idivb
inc
cltd
sbbb
inc
fdivl
out
rcr
loopne
shlb
ret
add
and
cwtl
fdivl
inc
dec
loopne
mov
fisubrl
fistps
adc
mov
stos
mov
lret
fs
stc
push
mov
outsb
mov
lock
add
in
or
icebp
jge
dec
jnp
sbb
inc
das
sub
or
lahf
push
jle
in
fcmovne
inc
cmp
jnp
or
jno
aas
adcl
pushf
scas
push
ds
scas
lahf
jle
cmp
cli
imul
xchg
dec
fbld
pop
mov
jmp
xor
out
test
pop
jg
dec
sbb
pop
xchg
jns
sub
dec
xchg
sbb
iret
cmc
mov
lcall
jae
mov
out
mov
lea
mov
mov
ficomps
jno
and
daa
lret
fsubr
mov
jns
pop
sub
mov
mov
leave
jnp
rcrb
scas
call
push
addr16
xor
or
ds
mov
mov
pop
out
xlat
xor
stos
sub
push
fsts
ficomps
sub
movsl
mov
imul
insl
shrb
cmc
xor
jnp
mov
in
lds
and
leave
adc
inc
pop
push
push
test
mov
movsw
inc
call
int
repnz
pop
cmpl
push
cltd
icebp
outsl
xor
cs
push
xchg
push
pop
xorb
sahf
stos
lahf
cltd
xor
sbb
or
sbb
push
push
jl
mov
sub
call
lds
xor
negb
sub
sahf
pop
pop
fdiv
pop
sahf
push
push
enter
jle
imul
test
in
jl
jne
arpl
cs
pop
mov
push
insl
test
add
lahf
cmp
test
lods
out
sub
out
out
add
dec
test
jmp
inc
mov
loopne
sbb
in
mov
mov
fimull
icebp
or
xor
push
nop
jbe
icebp
scas
sub
xchg
inc
mov
in
mov
ljmp
xlat
mov
dec
and
lock
dec
xor
cltd
call
mov
jle
fbstp
jae
test
dec
sbb
out
push
cmc
pushf
and
pop
arpl
sbb
pop
inc
adc
movsb
into
shll
imul
jp
sub
test
xor
push
mov
not
aas
mov
ret
jmp
cmp
je
imul
pop
daa
xlat
xor
bsf
mov
dec
cmp
stos
sbb
rorl
push
dec
jp
sti
in
mov
sbb
push
push
jb,pt
mov
int
icebp
mov
scas
push
push
sbb
test
push
sub
inc
xor
push
mov
pop
nop
test
ljmp
shl
outsl
xchg
xchg
testl
aas
negl
pop
dec
push
and
jmp
imul
mov
rcll
inc
push
mov
sub
mov
outsb
loope
pop
cwtl
push
mull
gs
jne
adc
je
push
sbb
mov
or
mov
pop
loopne
es
add
cmp
enter
icebp
std
lret
pop
push
cmpsl
jp
cmc
mov
insl
xor
sbb
xchg
xlat
cmc
sbb
pop
xchg
xchg
andb
fwait
jmp
xor
push
mov
cmc
inc
sub
adc
jmp
jg
stc
enter
push
pop
inc
add
cs
push
mov
fcoms
mov
lds
repnz
lods
inc
sub
dec
adc
cltd
sbb
nop
dec
ret
mov
or
and
xor
or
call
ret
roll
add
testl
cmpsl
push
lahf
pop
adc
orb
pusha
idiv
dec
pop
inc
cmp
adc
movsl
imul
in
push
sub
mov
ret
mov
dec
xor
sahf
sbb
in
lods
jg
rorl
fdivrs
push
push
dec
pop
jne
mov
mov
addl
dec
popa
push
fs
push
mov
lock
jle
roll
mov
jl
out
xchg
cmp
shlb
cs
repnz
mov
push
fsubrp
sahf
sub
xchg
dec
xchg
sbb
sub
mov
jne
mov
inc
jno
dec
pop
xor
mov
push
leave
js
ficoml
push
dec
test
sti
mov
dec
jns
movsl
sahf
dec
lock
pop
lahf
ljmp
aas
mov
cltd
cltd
scas
add
fs
add
jo
and
mov
xor
fs
xchg
fnsave
scas
push
push
inc
daa
and
sahf
fldl
out
into
test
adc
rcll
out
in
pop
insb
pushf
js
es
inc
jnp
loope
add
push
push
and
or
popf
mov
popf
cmp
rcrb
pop
dec
adc
xor
mov
sar
daa
mov
movl
aad
es
cwtl
jmp
cmc
sbb
stos
inc
mov
imul
fsubrs
pop
dec
xchg
ficoml
ds
es
sub
adc
xchg
sub
adc
and
cld
mov
mov
arpl
jo
jo
mov
pop
jg
orl
jl
inc
or
je
lods
shl
sbb
push
xor
sub
cmp
cltd
dec
test
xor
sbb
icebp
add
lea
or
jl
push
mov
jmp
jp
aam
and
iret
mov
inc
scas
and
fistps
out
enter
shlb
jecxz
fmuls
or
mov
add
mov
aas
sbb
sbb
jns
imul
jnp
xchg
jecxz
cmpsl
aaa
jno
pop
adc
into
push
outsl
jmp
inc
cmp
clc
out
xchg
or
decl
or
stc
aam
sub
test
jmp
push
xchg
loopne
adc
mov
xor
mov
imul
mov
mov
adc
imul
popa
das
sub
mov
inc
lret
rcrl
dec
popf
ret
add
into
je
ret
pop
add
xor
imul
scas
dec
leave
xlat
out
nop
mov
call
call
inc
mulb
out
int3
xor
cmp
mov
int3
lock
pusha
loopw
repz
cmp
jnp
daa
in
ss
add
mov
pop
scas
shrl
test
dec
sbb
sub
xor
add
ror
inc
inc
pop
js
test
int3
pop
aaa
inc
xor
mov
mov
dec
sbb
dec
insl
mov
cwtl
mov
mov
ja
test
add
cmp
cli
xchg
mov
mov
out
xchg
xor
mov
stos
and
mov
rorl
repnz
push
movsl
ret
sbb
mov
sbb
js
shr
xor
outsl
sbb
and
inc
mov
xor
lret
jbe
or
test
inc
sub
insl
fwait
cwtl
adc
test
pop
xchg
insl
sahf
int
repz
push
mov
add
pop
mov
out
lea
mov
out
in
or
in
aam
jecxz
mov
das
es
daa
fs
je
pop
xlat
dec
lea
and
pop
jbe
xchg
mov
mov
and
inc
and
sbb
test
xor
jae
inc
lock
cmp
xchg
leave
in
push
dec
cld
leave
inc
and
and
jnp
add
jmp
adc
lret
mov
jne
mov
xor
ds
lods
hlt
dec
fistpl
aam
xchg
jo
xchg
addr16
mov
std
sbb
in
hlt
iret
mov
gs
lea
inc
cmpsb
cmp
or
icebp
mov
bnd
lret
cmp
xlat
xor
fs
dec
insb
int3
mov
imul
aas
xchg
sahf
clc
xor
rorl
pop
lea
sub
sub
sbb
mov
inc
mov
pop
cmp
inc
pop
xor
inc
add
stos
jns
jmp
ret
inc
pop
daa
arpl
sub
dec
jle
dec
cmp
pop
jmp
cli
in
repz
lahf
into
ss
push
xor
mov
fidivs
xor
cs
adc
andb
imul
outsb
ficomps
jecxz
mov
and
std
cwtl
outsl
pop
lods
mov
imul
sbb
jbe
pop
rcrb
mov
inc
int3
pop
and
cld
out
mov
add
cmp
inc
fbld
imull
stos
mov
cmp
jae
mov
mov
xor
sbb
mov
adc
addr16
stos
ja
inc
jl
out
rclb
in
sbb
mov
mov
push
push
xchg
add
loopne
aaa
add
scas
dec
fwait
mov
stos
mov
loopne
inc
into
jae
jg
pop
add
cwtl
inc
aaa
pop
rorl
mov
add
mov
xchg
jb
movsl
lret
scas
push
fstl
sbb
cmp
dec
push
jbe
or
sar
sbb
test
adc
je
pop
mov
xchg
pop
mov
mov
insb
lret
mov
jmp
pop
pop
dec
lea
sub
mov
xor
push
and
ds
adc
inc
xchg
push
das
insb
pusha
and
bound
cmp
das
insb
lahf
cmp
mov
lret
lret
add
cmp
jge
inc
subb
sub
sti
cmpsl
cmp
test
xor
jle
int3
js
bound
aas
xor
add
and
push
lods
xchg
idivl
jg
sbb
ret
faddl
jmp
adc
adc
cmp
pushf
mov
push
lahf
xor
clc
and
cmc
call
cmp
outsb
aas
push
das
cmp
rolb
cmc
enter
ret
jmp
add
sahf
in
lock
dec
out
adc
rorl
or
ljmp
pop
ja
mov
and
inc
insb
mov
insb
scas
push
mov
test
mov
out
dec
lcall
hlt
popa
orl
sub
jp
or
mov
inc
and
icebp
test
cmp
xor
stc
or
dec
aas
xchg
adc
or
inc
xorb
gs
aad
test
mov
inc
nop
mov
insl
popf
out
mov
jb
push
imul
dec
aaa
imul
arpl
orl
test
xchg
out
push
xchg
jg
and
push
std
enter
dec
cmpsb
rcrl
pushf
mov
add
insl
inc
aas
and
rorb
or
dec
add
jne
cmp
inc
mov
sub
cmp
ret
or
push
scas
iret
cmp
cld
and
mov
pop
insl
or
and
repnz
mov
es
cmp
loop
add
pushf
icebp
cmc
and
cltd
push
cmpsb
lret
stc
push
xor
dec
sub
mov
cmp
pop
lods
addr16
sarb
mov
mov
mov
and
jg
mov
mov
mov
mov
or
pop
dec
pushf
mov
mov
mov
jnp
jmp
sbb
loopne
lds
cmpsl
stos
sub
fbstp
in
cli
inc
or
dec
pop
test
dec
add
sbb
jae
mov
stos
inc
in
cmp
imull
push
dec
push
lods
xchg
jbe
sbbb
mov
lahf
pusha
xor
sub
mov
cmp
out
mov
cmp
mov
mov
inc
outsb
push
subl
addr16
add
sub
repz
roll
inc
imul
cld
xor
inc
cmc
vpsrad
jmp
or
lock
icebp
xor
cwtl
int3
test
jb
jp
sbb
fsubrl
insb
icebp
inc
adc
cmpsb
int
loop
and
sbb
in
pushf
aam
mov
adc
cmp
pushf
test
and
xchg
leave
arpl
push
cwtl
jecxz
xchg
adc
cmp
push
mov
mov
lcall
mov
and
push
ffree
in
aaa
addl
adc
mov
in
mov
inc
aam
mov
fsubrl
xchg
aam
jne
jne
pop
mov
mov
cmpsb
cmp
std
in
ljmp
jb
das
fwait
sti
pop
mov
sbb
and
fsubs
cmp
pop
cmp
sub
xchg
dec
xchg
stos
sbb
popa
daa
sub
pusha
hlt
inc
into
dec
test
push
or
scas
pop
mov
mov
sbb
push
mov
or
adc
and
stc
adc
pop
xchg
out
sub
std
mov
or
les
add
xor
lods
stos
daa
cs
mov
and
flds
mov
cmpsl
dec
pop
cli
arpl
popf
sbb
cmp
dec
add
mov
mov
push
icebp
push
mov
pop
push
push
pop
in
xchg
pop
cwtl
sbb
xchg
rcrb
or
push
sbb
loop
outsl
int3
mov
and
les
insl
inc
push
or
fistps
cmp
popf
rol
or
mov
or
outsb
insl
pop
xor
jnp
out
in
cmp
ds
push
xlat
xchg
adc
cmp
pusha
int3
movsb
out
lods
mov
lea
adc
add
mov
ficomps
insl
xchg
mov
dec
xchg
dec
repz
xchg
shlb
add
inc
std
add
in
xchg
mov
dec
stos
incl
and
pop
ljmp
rorl
jb
pop
sub
mov
pop
xor
dec
jbe
rol
cmp
clc
mov
push
ret
sub
adc
push
or
out
push
pop
and
or
mov
cmp
and
cmpsl
mov
cmpsb
call
fnstsw
dec
push
sub
and
add
push
pop
not
js
shll
mov
xchg
push
nop
cli
add
pop
and
mov
clc
push
cmp
and
lea
js
xchg
push
int3
lods
cmpsb
lds
sbb
pop
fidivl
add
aas
mov
loopne
or
icebp
idivl
push
out
jge
popf
mov
and
stc
pop
jno
leave
cmpsb
ret
jg
es
into
shl
imul
xor
inc
adc
cmp
sti
push
adc
mov
test
out
repnz
rcrb
std
push
cmpsb
aam
sbbl
out
push
fwait
mov
sti
test
push
dec
jg
cmp
icebp
sub
adc
pop
mov
push
mov
pop
cmp
jecxz
in
lcall
outsb
imul
leave
out
dec
inc
dec
fs
test
xchg
jb
xchg
xchg
push
mov
stos
push
jecxz
sti
popl
xchg
iret
and
fsts
cmp
loop
inc
fdivl
sbb
imul
mov
jp
add
push
dec
stc
jl
popa
arpl
pop
xchg
mov
les
cltd
das
lock
shl
ljmp
push
test
xchg
sbb
movsb
push
mov
call
jno
or
adc
xor
rorl
outsl
aad
fcom
push
test
mov
js
pop
add
push
xchg
dec
pop
lods
mov
sub
dec
push
movsl
pushf
in
movsb
xor
leave
jp
cltd
js
dec
test
int
scas
pop
adc
sti
int
jo
cmp
adc
sbb
add
jns
loope
mov
jne
or
stos
cwtl
fldl
inc
in
test
pop
inc
push
dec
cs
or
popf
cmp
sti
and
mov
cmp
push
inc
out
out
ljmp
or
flds
pop
mov
adc
fcmove
fwait
in
dec
push
jae
mov
cli
xchg
imul
sti
popf
jge
inc
pushf
adc
dec
dec
enter
sub
and
incl
xor
mov
repnz
sub
jle
fwait
lret
imul
icebp
pop
aad
and
lds
push
mov
add
inc
aas
mov
push
mov
add
repnz
pop
sbb
xchg
sbb
je
xchg
jmp
cmc
pop
add
cltd
decb
lock
lcall
jmp
out
pop
pop
hlt
int
cltd
popa
rorb
push
jmp
loop
mov
mov
xor
arpl
push
mov
xchg
inc
adc
inc
jno
pop
test
loop
pop
push
cltd
loopne
lahf
pusha
xchg
test
les
push
int3
mov
mov
out
mov
mov
cwtl
mov
in
divl
pop
jae
push
mov
cltd
or
iret
add
cltd
sbb
pop
cltd
cs
mov
dec
outsb
clc
arpl
fisubs
inc
arpl
clc
hlt
jl
pop
sbb
faddl
mov
je
dec
adc
and
dec
inc
test
ret
jg
mov
sub
out
sbb
push
ret
pop
mov
nop
call
jne
mov
not
lret
jb
mov
lods
sub
mov
mov
ja
negb
push
test
inc
fwait
push
aas
movsb
imul
sbb
and
sub
adc
insl
stos
jl
es
or
xchg
leave
int
adc
mov
in
movsb
mov
mov
push
out
sbb
lcall
mov
mov
dec
jle
lcall
sub
cmc
pop
xor
mov
popf
test
lods
aaa
sub
xor
sub
cmpsl
mov
cmp
jno
jecxz
mov
pusha
xor
jo
in
imulb
jns
js
std
shlb
cs
roll
sub
push
pop
rcll
outsb
dec
mov
aad
mov
mov
cmp
cmp
mov
inc
xchg
ds
or
int3
cmpsb
pop
lea
dec
imul
xchg
arpl
sub
pop
loop
fwait
jo
outsl
mov
mov
loop
and
ret
fdivs
iret
addl
std
inc
lcall
xlat
add
dec
and
mov
or
js
repnz
mov
sbb
xor
sub
mov
loope
dec
xor
mov
hlt
cmp
int
dec
mov
repz
loopne
insb
jecxz
sub
jl
inc
nop
roll
mov
pop
mov
cld
lock
dec
leave
loopne
lahf
fnstcw
mov
and
inc
pop
fcmovu
ret
call
sub
pusha
mov
push
and
jge
leave
data16
pop
lea
loop
repnz
adc
xor
daa
add
rolb
push
lret
pop
mov
add
in
pop
xchg
mov
xor
mov
push
xchg
jns
push
outsb
mov
dec
mulb
mov
inc
jecxz
scas
stc
inc
sub
cmpsb
pop
mov
adc
cld
shl
loop
jnp
sub
inc
xor
cmp
outsl
fisttpl
xchg
jne
xchg
sbb
add
test
inc
ror
fnstenv
into
or
cltd
sarb
inc
fs
sbb
jo
mov
add
jnp
and
or
mov
inc
inc
xchg
jns
ljmp
loopne
int
into
out
rorl
int3
mov
mov
cmp
ljmp
movsl
in
pop
insl
aas
push
pop
ret
mov
or
pop
movl
fists
xchg
ja
and
les
lods
cwtl
mov
fistpl
jmp
imul
test
cmpsl
outsl
pop
nop
sub
test
in
xchg
scas
imul
fistps
sti
inc
xchg
jae
stc
mov
pop
push
xchg
divl
lret
aad
and
add
jge
shr
shl
push
lock
adc
test
mov
imul
adc
jae
cmp
cltd
pop
xlat
cmp
popa
xchg
js
sbb
and
je
lea
fistl
xchg
movsl
xor
out
mov
imul
lods
fcoml
lret
sbbb
pusha
push
cmp
xchg
pop
mov
out
pop
push
or
mov
sub
xchg
cmc
sub
xchg
mov
js
test
mov
addl
loope
xor
cmp
cltd
sbb
sub
dec
shrb
orb
shrl
sbb
push
out
jmp
loopne
repz
xorl
push
sub
sub
xor
fstps
ljmp
scas
xor
xor
mov
test
mov
rolb
aam
inc
inc
inc
jge
in
fcoms
add
movsb
outsl
out
xchg
cltd
cltd
lret
lods
add
test
aaa
in
xchg
xor
outsl
xorl
xchg
mov
pop
nop
adc
cmc
shll
xor
xchg
sub
mov
fwait
adc
shl
dec
pop
sub
pushf
std
sahf
push
dec
adc
sbb
movsl
and
lea
aaa
inc
into
daa
scas
cltd
lret
aaa
or
lea
jo
mov
ficomps
enter
and
add
pop
ret
push
je,pn
xor
push
pop
add
into
mov
icebp
jne
jne
fisubs
inc
inc
mov
cli
xchg
into
icebp
xor
or
fstps
or
les
xchg
popa
fnstcw
rolb
mov
outsb
fucomi
test
lods
pop
fisubs
inc
idivb
and
and
arpl
dec
mov
jae
xlat
ret
and
mov
inc
movsl
jecxz
mov
fisubrl
in
mov
push
stc
pop
pop
daa
imul
fidivrs
sarl
adc
pavgb
lret
shll
cmpsl
notb
xor
cs
daa
jns
add
nop
and
mov
add
dec
cld
mov
testb
sub
add
cmp
je
xchg
repnz
scas
scas
mov
or
xchg
xor
scas
xor
imul
cmpsb
lock
int3
stos
cmp
fsqrt
dec
call
sahf
mov
sub
push
into
test
mov
js
mov
popf
inc
loope
out
in
jmp
movsb
shll
mov
imul
iret
inc
test
mov
sub
pop
in
std
enter
jecxz
push
decl
pop
popf
xor
add
cli
cli
or
stc
mov
add
xor
mov
mov
shll
lret
sub
cld
sbb
aad
or
and
gs
iret
push
push
jae
das
and
icebp
in
jle
hlt
jle
int3
cmp
or
cpuid
or
push
lea
pusha
divb
xchg
mov
mov
mov
add
inc
xor
add
pop
lock
inc
or
push
mov
xchg
or
xor
xor
orl
int
pop
cld
mov
pop
and
jg
add
shll
add
divb
adc
dec
and
cmp
aaa
mov
jg
popf
icebp
jmp
push
adc
inc
jmp
mov
loope
rcr
std
adc
push
pop
add
mov
and
lahf
data16
xor
insl
jp
insb
jnp
les
lret
xchg
clc
inc
cld
mov
std
hlt
imul
xchg
mov
xchg
popa
add
add
cmp
inc
cwtl
pop
and
jmp
ficoms
dec
loopne
jecxz
mov
pop
rcr
iret
mov
aam
bound
je
adc
cmp
sbb
sub
imul
lret
sbb
adc
mulb
mov
cmp
dec
xchg
xchg
mov
mov
lea
pop
aam
sub
jno
pop
mov
test
les
enter
inc
fs
fwait
enter
pop
lds
int
sbb
cmpsb
sarb
mov
or
mov
adcl
sbb
xchg
cmp
jmp
sbb
push
mov
outsb
shlb
push
sub
les
sbbb
jnp
into
push
add
in
inc
jne
loope
xchg
mov
fisubrs
sbb
xchg
rcr
sub
test
pop
inc
dec
ja
ds
shlb
movsb
xor
mov
int
mov
xlat
fwait
popa
inc
loope
fcompl
push
loopne
pop
inc
push
shl
ds
pop
push
ss
mov
jge
inc
cli
adc
dec
aad
test
fimuls
or
cld
or
lods
cmp
sbb
aad
movsb
arpl
ljmp
lret
sub
loopne
fstpl
cmp
or
ljmp
lock
jae
inc
sbb
cmp
pushf
roll
in
pushf
cmp
jl
aas
ds
cwtl
dec
mov
lahf
mov
inc
xchg
or
imul
pop
inc
dec
jp
or
mov
rorl
adc
inc
stos
shll
insb
push
rolb
jns
push
jp
cmpsb
imulb
aaa
xor
cmp
les
bound
out
pop
aas
scas
xor
push
ret
rcll
repnz
pop
dec
test
aam
dec
add
push
pop
dec
xchg
jg
dec
mov
jo
dec
enter
rclb
mov
inc
fiaddl
shll
in
ja
gs
mov
insb
cmc
fistl
inc
ret
stos
push
out
push
mov
jo
sbb
jge
clc
sub
imul
add
mov
ds
sub
inc
clc
mov
push
int
inc
mov
inc
hlt
push
sub
adc
roll
das
and
ljmp
in
adc
and
int
rcrl
loop
or
rolb
mov
shrl
cmpsb
in
adc
pop
inc
sbb
push
push
dec
pop
mov
sub
in
push
ds
mov
sti
adc
sub
dec
nop
nop
jb
outsl
sbb
pop
and
jne
mov
xor
adc
hlt
dec
cmp
jae
ds
xchg
std
push
lds
push
push
mov
jg
popa
add
dec
dec
fistps
xchg
mov
stos
push
and
addr16
jne
dec
lea
subl
xor
jg
rclb
outsb
pop
mov
scas
mov
mov
pop
in
insb
jbe
mov
and
mov
mov
dec
fsqrt
fwait
imul
aas
int3
ss
sbb
imul
fnstcw
outsb
add
push
jne
es
adc
sub
fucomp
loope
push
jp
jae
test
push
pop
mov
insb
outsl
mov
decb
jle
dec
call
mov
sbb
ss
ljmp
into
cmp
in
xchg
mov
cld
shlb
sub
addr16
pop
pop
xor
popf
xchg
popf
or
and
pusha
stos
jg
and
gs
xchg
sub
nop
jge,pt
cld
dec
xchg
push
lret
lock
pop
inc
cwtl
fisubs
xor
mov
mov
inc
stos
outsl
inc
cmpsb
kmovw
sbb
pusha
or
mov
jecxz
mov
test
pop
mov
xor
xor
repz
hlt
icebp
or
dec
scas
gs
jge
pusha
je
lods
pop
xor
data16
arpl
adc
pushf
pop
jns
jns
dec
popf
xchg
sub
add
or
or
and
stos
rclb
inc
sbb
sub
jge
pop
int3
xchg
cmpsl
mov
cmp
orb
xchg
jl
dec
std
repz
pop
mov
cmp
or
loopne
lret
test
stos
push
push
jle
sbb
mov
mov
sbb
mov
mov
loopne
mov
ja
lods
ja
testb
jo
inc
cmpsb
test
test
dec
xchg
lods
lods
imul
push
movsl
mov
lahf
mov
outsb
add
and
ss
roll
and
mov
out
popf
and
call
cmp
out
adc
inc
cmp
cmpsl
pushf
xor
dec
shll
cmpsb
dec
lahf
mov
es
sub
std
mov
repnz
mov
add
adc
xchg
pop
in
call
in
movsb
jge
rcrb
cmpsb
test
gs
sarb
pop
dec
rcrl
add
dec
jne
rclb
and
sti
call
les
repnz
cli
sahf
pop
mov
and
or
xchg
ljmp
and
loop
jae
les
or
sub
dec
idivb
xor
stos
jmp
jnp
sub
inc
dec
pop
cltd
pop
roll
hlt
out
jge
push
fsubl
add
test
dec
orl
xor
ret
sub
or
ret
xchg
fcmove
jbe
dec
push
les
or
sub
repnz
mov
shr
pop
or
aas
pop
shlb
dec
and
push
mov
mov
push
mov
fistpl
add
xchg
xchg
jmp
lahf
inc
sbb
hlt
mov
divb
mov
cmpsl
inc
out
ja
and
or
sti
imul
mov
and
pop
mov
js
bound
inc
mov
dec
in
pusha
push
inc
xor
scas
fstps
pop
adc
mov
dec
xor
jbe
les
icebp
stos
mov
sti
fimull
jp
int
and
jo
xor
iret
scas
test
sahf
mov
mov
add
stos
fdivr
dec
sub
adc
dec
inc
ja
mov
mov
les
pop
add
iret
sub
push
clc
sbbb
icebp
adc
aas
cmp
mov
subb
es
insl
insb
pop
or
inc
mov
ds
xchg
xchg
in
sub
scas
shll
sub
mov
in
mov
pop
daa
adc
sahf
fidivs
sbb
xor
fcmovb
add
es
test
pop
ret
cmpsb
ds
cmpsb
sub
aas
int3
jnp
xchg
xor
add
adc
shlb
in
mov
sub
imul
shrb
lret
dec
push
test
push
pop
mull
push
push
popf
pop
pop
scas
add
xchg
cld
test
mov
mov
sarl
in
fcomi
icebp
data16
mov
mov
mov
bound
pop
jbe
iret
xor
jb
and
lds
insb
and
in
addr16
sbb
idivb
add
sbb
pop
das
push
rorl
popf
ss
ficoml
fstpt
aaa
nop
pushf
rclb
imull
jns
sub
dec
pop
inc
adc
pusha
or
inc
stos
sbb
enter
cld
call
push
sbbb
adc
cmc
fwait
repz
add
jp
in
cmp
insl
jne
dec
nop
and
sbb
shlb
test
xchg
mov
out
xchg
mov
cmp
mov
cmpsb
fxtract
pop
ret
idivl
jl
push
or
xor
data16
fsubr
rorb
xchg
lods
gs
in
stc
leave
daa
and
scas
add
and
and
int
test
test
add
fcom
pop
dec
adc
in
xchg
dec
pop
shlb
dec
pop
int
jnp
pop
fisttpll
dec
sti
mov
imul
sub
pop
push
push
lcall
ret
fnstenv
pop
jne
add
push
xchg
adc
call
inc
test
or
jecxz
aas
test
imul
fcoms
dec
lahf
jnp
scas
pushf
aaa
push
iret
insl
sti
push
jb
pop
test
jg
test
dec
jo
ret
dec
ficoml
mov
or
push
add
mov
cld
cltd
jg
jnp
sub
movsb
cs
insl
call
ret
xchg
call
scas
movl
stc
ja
sub
lahf
loopne
push
pop
adc
mov
test
pop
insb
into
fisubs
jge
add
inc
mov
iret
scas
mov
sbb
sub
cmp
xchg
sbb
leave
fisubl
jmp
or
inc
stos
clc
and
pop
push
test
cltd
push
xorb
or
stc
arpl
movsb
push
popf
xor
ret
lods
sub
dec
xchg
aaa
lret
mov
inc
cmpsl
pop
or
mov
jno
cmp
sbb
pop
lods
inc
cmp
xchg
mov
adc
std
xor
out
add
cmpsb
fisttpl
mov
fnstcw
scas
mov
mov
mov
adc
and
ss
pushf
push
loope
ljmp
add
filds
je
mov
and
pop
data16
dec
inc
scas
imul
aas
xchg
sub
sub
add
sahf
cwtl
dec
daa
cmpsb
scas
sbb
inc
into
jnp
adc
ds
xchg
jmp
mov
mov
out
int
paddw
push
xor
add
pop
negb
into
dec
mov
or
lcall
or
daa
sbb
stc
pop
mov
mov
stos
pop
out
ret
mov
jne
jbe
imul
xor
adc
jmp
add
push
lods
jp
pop
repz
jns
rclb
test
mov
mov
inc
inc
out
sahf
popf
mov
dec
cmp
jmp
jle
mov
jg
std
push
mov
cmp
cmp
decl
imul
sarl
test
les
xchg
outsb
jbe
fwait
lea
sti
fs
ds
jae
inc
popf
in
imul
or
jb
mov
jo
jmp
push
int3
addr16
inc
jle
jl
inc
fwait
and
leave
aad
cmp
int
in
pop
std
out
ds
out
fst
sub
fdecstp
hlt
jo
popa
adc
dec
add
lcall
stc
fnstsw
jae
stc
adc
cmp
xor
call
repnz
and
int
sub
daa
lahf
inc
sub
xor
mov
nop
lcall
insl
cmp
arpl
popa
mov
jle
mov
pop
data16
or
and
push
or
inc
outsb
ds
adc
push
sbb
cld
sbb
jns
sbb
mov
gs
dec
mov
sar
ljmp
mov
lock
sub
cmove
inc
xlat
lods
aad
orb
sbb
cmp
mov
adc
cwtl
mov
mov
jno
call
mov
out
inc
scas
arpl
and
jno
xchg
subb
and
jmp
lods
daa
cmc
outsl
inc
inc
sub
inc
mov
mov
adc
rclb
js
ffree
push
cmp
scas
out
pop
popa
stos
mov
push
outsb
pop
scas
sub
inc
insl
shrl
pusha
dec
lret
mov
jecxz
rolb
dec
shll
or
xchg
mov
xor
je
in
pop
in
sbb
ljmp
lret
cld
and
or
in
jp
mov
pusha
aam
std
pop
dec
daa
scas
out
mov
sub
test
mov
mov
cli
lds
leave
push
nop
sbb
es
fwait
adc
sbb
cmp
cwtl
cmpsl
add
jo
subb
push
into
push
and
inc
cmp
add
push
cltd
leave
dec
adc
imul
int
sbb
mov
mov
push
jge
pusha
bound
pusha
icebp
mov
scas
cld
pop
dec
out
aam
out
jo
jl
imul
pusha
inc
and
in
std
mov
pushf
nop
add
cmpsl
jmp
mov
dec
out
xchg
repz
push
xor
popf
xchg
movsl
lahf
imul
sub
repnz
add
push
fcoml
or
xchg
cmpsb
dec
inc
push
cmpsb
adc
jo
lret
mov
pushf
stos
jp
jge
ljmp
mov
jb
lret
fldcw
testb
into
orb
sbb
pop
jns
xlat
lds
lea
fidivrs
lret
imul
or
push
dec
pop
jne
mov
push
sub
pop
lret
xor
sbb
clc
adc
or
nop
fnsave
addb
mov
sbb
mov
movsb
add
push
push
inc
ss
push
or
mov
ret
mov
pop
in
test
jle
out
pop
mov
out
imul
test
jns
imul
jb
inc
add
or
test
jmp
dec
repnz
out
addb
mov
mov
pop
inc
sbb
loop
fmul
mov
inc
aas
add
mov
add
out
cmp
fcompl
and
mov
push
sub
or
pop
fnsave
push
mov
cld
or
add
dec
fdivs
mov
push
leave
je
das
dec
cmp
jecxz
mov
sbb
cld
rcll
push
push
mov
inc
inc
incl
scas
pop
jmp
test
xor
daa
std
mov
and
lds
sub
fnsave
xchg
mov
dec
jmp
psllw
pop
arpl
add
outsb
mov
pop
push
pushf
pop
sbb
inc
sub
addr16
es
test
mov
inc
jle
adc
enter
sub
cltd
aad
xor
lods
adc
fwait
test
xor
shll
xchg
jns
clc
adc
and
or
int3
cltd
mov
jl
push
popf
or
ror
movsl
cs
imul
icebp
dec
scas
sbb
cmp
filds
inc
mov
xchg
stos
adc
mov
push
xchg
int
cmpsb
enter
jge
ja
jp
cmp
imul
lock
sahf
sub
jne
and
dec
mov
repnz
mov
movsl
es
sti
lret
lock
sahf
shl
out
call
adc
push
mov
cs
rcll
rcl
sbb
add
push
pusha
sbb
repz
fsubl
outsl
out
adc
push
pop
mov
sub
mov
push
adc
rolb
jle
inc
jbe
or
shlb
adc
ret
inc
test
movsb
rolb
add
sarl
pop
sahf
movsb
push
adcb
or
adc
int3
add
sub
je
mov
loop
xor
cmp
pop
je
pushf
enter
shrl
dec
fisttps
sub
stos
jae
fidivl
mov
fbld
inc
lret
lods
pop
jecxz
imul
lods
nop
add
insb
fs
or
arpl
mov
cmp
in
pop
out
fildl
daa
mov
mov
push
jae
test
adc
or
xchg
orb
sbb
dec
jns
pushf
imul
in
add
push
jnp
out
sbb
sbb
adc
loope
pop
jno
lods
add
dec
xor
inc
pushf
push
scas
jge
ret
ja
pop
push
jae
outsb
adc
sbb
call
push
clc
add
dec
int
testl
shlb
aam
adc
cmp
pop
pop
ljmp
int
and
rcl
hlt
push
sbb
es
int3
push
filds
arpl
das
push
jb
mov
adc
and
movsb
fidivs
xchg
jbe
xchg
into
sbb
dec
movsb
pop
sbb
je
or
push
lea
cmp
nop
in
or
inc
lahf
out
shlb
jp
sub
jns
cmc
cmpsl
and
inc
xchg
add
pop
addr16
cwtl
out
pop
lock
adc
fwait
dec
mov
jmp
sbb
cltd
scas
fs
push
xor
imulb
dec
push
inc
pop
sbb
mov
lea
ficoml
dec
inc
sbb
fsub
xchg
cmp
pop
das
push
and
inc
or
mov
rclb
lea
call
push
jge
fdivrs
mov
shlb
pusha
xchg
cmp
inc
mov
mov
dec
mov
inc
xor
out
mov
sub
orb
out
cmp
mov
add
mov
daa
into
int
xor
push
jmp
xchg
add
fstpl
ret
loope
aas
cli
adc
xor
pushf
jae
jbe
sub
and
add
jmp
int
push
xchg
pop
cmp
fdivrs
je
sub
mov
int
ljmp
inc
jbe
stc
lods
loope
jns
xor
shrl
and
pop
addb
clc
je
add
sbb
and
pop
stc
gs
mov
outsb
jno
hlt
xor
lret
fs
std
and
xchg
or
imul
ss
sbb
push
mov
inc
imul
insb
jne
rcrl
fucomi
or
les
inc
mov
adc
out
leave
int3
and
push
scas
xlat
adc
jb
repz
test
out
jno
insb
dec
xchg
xor
mov
ds
mov
pop
aad
push
pop
pop
shr
fs
loopne
sub
nop
mov
lods
or
adc
out
lret
mov
hlt
cmp
cwtl
popa
xor
pusha
xor
lret
in
mov
fs
sbb
pop
pop
jb
xchg
cmp
dec
mov
xor
xor
push
or
in
jbe
hlt
sbb
hlt
movsl
in
mov
in
repz
addb
movsb
xchg
and
pop
lcall
sbb
mov
xchg
incb
fdivp
shr
mov
icebp
cmp
push
cli
fidivl
mov
mov
bound
jnp
sub
mov
xchg
fsubrl
cmp
mov
ja
jns
jge
jns
mov
iret
int
imul
mull
mov
add
addr16
xchg
ja
into
sbb
jbe
fs
repnz
cmp
lods
cs
push
adc
out
mov
or
dec
sub
dec
xor
ret
popf
xor
fisttpl
pop
jecxz
loope
adc
adc
mov
stc
int3
dec
outsb
mov
pop
fcompl
add
sub
xorl
add
popa
mov
cmp
jp
cs
out
xchg
push
movsl
mov
push
out
mov
icebp
cmp
push
mov
cmpl
scas
pop
dec
fcoms
dec
js
mov
dec
mov
pop
fidivrs
cmp
cld
sub
push
aam
mov
sbb
out
push
clc
push
mov
mov
mov
mov
mov
or
cli
repz
pushl
xlat
mov
test
in
push
jp
sbb
movsl
in
pop
daa
push
mov
or
xchg
daa
mov
dec
int3
stc
dec
lods
stos
decl
jp
pop
fs
or
stos
sub
std
orl
sub
adc
or
jmp
mov
cmp
js
adc
mov
scas
and
mov
cmp
or
pop
push
mov
aam
inc
xchg
push
call
int
jecxz
push
mov
into
cs
popf
inc
push
jb
xchg
mov
cmp
stos
add
fwait
xor
dec
and
xor
das
xor
dec
mov
inc
mov
cmpl
pushf
out
lcall
mov
mov
fdecstp
cmpsb
dec
push
push
mov
shlb
mov
icebp
inc
test
xchg
push
movsl
mov
cwtl
or
xor
leave
push
add
inc
and
jb
sbb
lret
push
jae
movsl
mov
mov
sarb
push
fiadds
sbb
loopne
arpl
into
pop
dec
push
cmpsl
mov
dec
cs
jmp
jne
stos
aad
sub
xchg
cltd
lods
push
inc
pop
and
mov
rolb
mov
jnp
push
and
inc
dec
das
mov
push
sbb
imul
pushf
jns
andl
neg
cmp
push
rcll
int3
les
push
hlt
adc
dec
cmp
push
fcompl
sbb
or
sub
jns
movb
out
sbb
xchg
jnp
xchg
mov
sbb
rcrb
inc
stos
inc
xor
jp
and
jecxz
nop
mov
pop
bound
mov
adc
in
and
push
lret
jl
fs
imul
push
fnstenv
lret
aaa
mov
cmp
arpl
fisttpl
push
pop
fwait
jno
push
cs
into
inc
dec
sti
into
in
mov
xchg
sbb
sub
jnp
xchg
leave
out
xor
adc
ljmp
push
or
call
sti
ss
mov
pop
jl
aam
pop
xchg
mov
dec
adc
nop
hlt
jecxz
pop
xchg
divl
and
or
inc
dec
fcoml
cld
pop
and
xchg
ds
cwtl
lds
call
mov
mov
jmp
test
repz
push
and
repz
enter
push
outsb
adc
iret
fcompl
jmp
das
test
je
jmp
xor
dec
xchg
mov
mov
inc
movsb
std
xlat
jnp
add
es
ds
sub
mov
rcr
icebp
xchg
outsl
scas
mov
ljmp
mov
mov
and
sbb
js
push
mov
sbb
adc
int
sbb
js
rcrb
mov
pop
xlat
add
xchg
dec
jns
in
ja
mov
stos
push
xlat
xor
test
repz
lods
jne
outsb
xlat
jecxz
aas
pop
sbb
loop
xor
mov
cmc
dec
xchg
cs
imul
push
mov
or
inc
pop
mov
cltd
mov
lea
mov
fistpll
scas
dec
inc
xchg
into
jno
push
cmp
xchg
test
cmc
in
pusha
mov
inc
pusha
mov
in
xor
sub
xchg
adc
imul
lods
inc
and
fbld
nop
mov
cmpsl
in
mov
push
pop
andb
mov
sbb
mov
inc
arpl
ret
lret
sbb
mov
lods
mov
pop
dec
xor
and
mov
adc
sti
addb
cli
popl
or
mov
jbe
call
push
push
jg
mov
mov
inc
pushf
xchg
cli
dec
push
pusha
push
push
lret
aas
inc
fstl
aaa
in
and
mov
pop
cli
mov
into
or
pushf
jl
arpl
cld
push
xor
cmp
xorb
shl
mov
add
out
daa
cmpl
loop
jle
sbb
outsl
movsl
test
cmp
sahf
loopne
sbb
adc
mov
cmp
cmovo
int3
sub
movsb
rorb
dec
movsl
xor
lret
cmc
push
cwtl
sub
mov
and
stos
gs
call
rcrl
dec
cwtl
add
out
stc
jno
sbb
es
pop
ja
jbe
fwait
adc
loopne
sti
mov
clc
adc
mov
shll
jbe
lret
xor
inc
xchg
push
mov
inc
mov
or
adc
and
jnp
scas
ret
dec
dec
enter
repnz
cmp
cmp
push
or
mov
mov
xchg
or
pop
ljmp
and
fildll
mov
and
clc
lods
push
push
call
dec
lret
cltd
push
ficompl
sub
insl
sub
repnz
xchg
leave
adc
addr16
add
mov
div
lds
lea
aad
ret
and
lock
clc
jb
cmp
movsl
iret
inc
xchg
dec
adc
mov
rcpps
xor
adc
mov
push
and
mov
nop
or
inc
fwait
add
jmp
flds
xor
into
mov
mov
es
inc
jecxz
pop
les
cmp
icebp
mov
rcrb
sbb
mov
jo
sbb
add
out
xchg
pusha
shlb
sti
mov
shrb
ljmp
daa
pop
sahf
aas
add
or
pop
je
pop
add
enter
and
js
cmpsb
sbb
mov
aad
or
idivb
add
mov
mov
mov
push
in
repnz
dec
shll
push
push
in
aad
cmp
and
push
and
imul
addr16
dec
jg
sti
mov
xchg
stc
cmp
enter
imul
outsb
lds
cwtl
cmp
adcb
jle
lret
sahf
js
lds
sub
jp
xor
mulps
sub
add
mov
mov
xchg
into
pop
add
inc
negl
adc
add
mov
push
push
icebp
sarb
shrb
or
push
jbe
and
aaa
in
and
inc
inc
sub
sbb
xor
hlt
clc
xor
dec
ds
and
loop
xchg
push
aam
lahf
scas
or
aam
jne
sub
ja
lods
scas
scas
jl
hlt
dec
popa
ret
dec
js
cmp
lods
mov
xchg
scas
movsl
aad
inc
loop
xchg
ret
dec
sbb
mov
dec
cmpsl
enter
mov
pop
pop
roll
xchg
pop
lock
stos
pop
rep
mov
add
fisubl
sub
xlat
lock
xchg
out
fistps
jecxz
cli
mov
test
cmpsb
outsl
ret
inc
jmp
or
or
mov
pop
jl
scas
int
xchg
mov
jmp
repz
loop
adc
inc
push
xor
aad
cwtl
imul
cmc
shr
sbb
lahf
or
or
adc
iret
stos
add
cmp
icebp
in
sbb
fiaddl
mov
int3
and
imul
bound
out
mov
xchg
add
out
fs
cmc
scas
mov
arpl
mov
dec
outsb
popa
test
push
gs
imul
inc
cwtl
ret
jo
xchg
sbb
adc
xor
and
addr16
test
inc
js
or
or
mov
mov
je
sbb
xor
mov
lods
popf
fldt
dec
add
je
cltd
pop
cmp
ffree
push
daa
fldl
mov
xor
bnd
mov
inc
cmc
pusha
repz
mov
sub
cmc
mov
jg
push
xor
or
pop
xlat
idivb
fwait
insl
sbb
or
mov
or
mov
scas
lahf
xchg
sbb
lcall
jle
pop
shll
xchg
cld
bound
mov
popa
xor
pusha
xchg
incl
mov
mov
mov
sub
insl
cmp
lea
lret
and
dec
push
lret
cmp
pop
aaa
push
push
aad
subl
les
pop
movsb
xchg
pop
jae
dec
mov
shl
insl
lods
insl
cli
dec
cmpsl
popl
jg
cltd
pop
popa
push
shrb
fs
adc
shll
xlat
inc
sub
dec
out
xor
xor
xchg
and
divb
outsl
loop
incl
and
outsb
lods
je
rcrb
xor
add
shrl
inc
hlt
push
push
pop
cmp
bound
push
jae
or
stc
ds
xchg
or
jb
enter
xor
fwait
push
mov
lods
cltd
sbb
scas
sub
imul
das
sub
and
jmp
mov
add
lds
push
imull
mov
add
xchg
jg
pop
xchg
inc
pushf
mov
sbb
loope
ss
mov
push
mov
jle
lds
imul
imul
dec
ret
and
call
fwait
xchg
scas
arpl
xchg
pop
xor
sub
and
push
test
xor
jg
or
movsb
or
pop
xor
jns
rclb
and
inc
mov
in
rorb
jne
pop
cld
sbb
shr
movsl
mov
xor
das
sahf
ret
and
aas
in
and
mov
jns
push
fsubrs
inc
ja
mov
push
dec
popa
or
push
stos
daa
fisttpl
pusha
stos
mov
dec
xchg
xor
pop
cmp
mov
cmpsb
arpl
fstp
ss
xlat
movsl
lahf
adc
inc
sbb
dec
adcl
dec
repz
sbb
inc
xor
gs
leave
or
in
mov
testb
popa
and
scas
pop
mov
mov
pop
add
lahf
pushw
push
orb
sub
inc
and
xor
addl
cmp
and
fisubrl
or
insl
xchg
cld
stc
out
lret
das
xchg
cmc
jo
pop
call
adc
or
inc
popa
lea
xor
nop
icebp
xchg
sub
dec
pop
outsb
and
cli
gs
sub
cltd
xchg
shrb
xchg
sub
sbb
iret
inc
inc
mov
xor
inc
mov
ret
mov
adc
cmp
movsl
rcrb
pop
stos
out
mov
push
out
std
pop
loope
adc
add
js
adc
in
sbb
movsl
inc
add
lods
or
imul
push
jne
and
inc
push
imul
mov
xchg
or
sub
add
pop
daa
push
inc
xor
clc
ljmp
sbb
aas
push
fidivrl
xor
and
jg
out
fbstp
fildll
lock
sti
cltd
dec
das
xor
adc
scas
inc
pop
in
call
adc
dec
jg
inc
pusha
ror
stc
sbb
pop
jmp
fstl
test
and
fmull
mov
sbb
inc
bound
push
mov
mul
cmp
inc
push
jb
jae
cmp
dec
orb
sub
mov
mov
mov
pop
pop
sbb
les
jnp
mov
pusha
xor
roll
mov
and
add
lcall
dec
push
cmp
xor
je
inc
out
cmp
lds
ret
mov
lcall
scas
loop
push
repz
ret
mov
pushf
lcall
sub
rorb
dec
js
mov
mov
jne
nop
movsb
scas
and
xchg
xchg
out
outsb
jb
lret
out
or
dec
jecxz
jecxz
popa
mull
ss
fwait
or
mov
sub
mov
out
or
sahf
sub
mov
add
ret
out
adc
xchg
add
pop
clc
adc
jne
fwait
mov
mov
add
or
jl
rorl
ja
xchg
dec
enter
sub
pop
or
dec
mov
pop
mov
pop
jl
adc
xchg
aaa
mov
adc
cmp
sub
mov
fwait
lds
stos
imul
push
cmp
sahf
int3
xchg
adc
ljmp
lods
pop
sbb
insb
push
and
adc
adc
pop
xchg
das
outsl
testb
xlat
in
sub
and
jne
int3
add
ja
and
xchg
popa
lret
rol
clc
in
jnp
inc
or
fildl
push
inc
jae
jbe
gs
inc
dec
jns
pop
xlat
push
minps
or
outsb
cmpsl
movsb
loop
addr16
dec
mov
hlt
and
sub
adc
xor
inc
xor
xchg
add
pop
sti
pushf
mov
pop
dec
nop
js
arpl
xchg
mov
ja
movsb
xlat
pop
cli
hlt
rclb
push
pop
ljmp
mov
mov
insl
inc
mov
cwtl
mov
scas
sbb
sub
mov
inc
push
mulb
mov
cmp
jb
ss
and
out
and
sahf
jmp
cs
xor
xor
inc
mov
lret
stc
jle
test
mov
and
outsb
pop
divb
sub
sti
stc
xchg
jl
mov
fildl
jmp
cltd
cli
mov
inc
fstpt
adc
xor
cmpsb
jae
or
pop
into
in
adc
int
fwait
and
mov
dec
aam
ja
cmpsl
dec
and
inc
jg
xor
xchg
add
sbb
add
arpl
gs
mov
xor
push
ja
inc
addr16
push
test
test
mov
mov
shrl
xor
mov
les
mov
jp
movsl
jle
inc
add
xor
fdivl
les
out
xor
clc
ja
in
mov
pop
xor
loope
loopne
sub
insb
xor
leave
or
repnz
pop
or
push
popw
leave
ficoms
ja
push
mov
mov
pop
or
data16
lcall
aaa
sub
pop
or
mov
lods
mov
add
fs
or
dec
mov
addr16
adc
jecxz
test
jnp
add
iret
mov
lcall
or
dec
push
lcall
mov
xlat
stos
mov
hlt
test
adc
lcall
dec
and
scas
fidivrs
ret
pop
test
mov
sub
repnz
nop
xchg
xchg
fisttps
or
clc
pop
push
xchg
fcmove
andl
cmp
cmp
or
mov
mov
ja
cmp
inc
test
mov
dec
icebp
inc
sbb
pop
shl
or
mov
arpl
mov
mov
and
cmpb
adc
lret
sti
sti
mov
fmuls
enter
test
lea
mov
mov
jns
and
pop
fldenv
push
sbb
shr
mov
pop
icebp
adc
into
dec
int
movb
xchg
mov
in
push
jb
mov
and
mov
xchg
pop
std
sbb
xchg
xchg
scas
mov
cmpsl
pop
mov
in
les
pop
or
dec
mov
mov
arpl
push
mov
mov
call
imul
pushf
cmp
cs
mov
lods
cli
fimuls
dec
fidivl
sarb
jmp
sub
call
lret
out
int
and
outsb
inc
lahf
mov
hlt
repnz
jmp
push
shrb
test
jne
daa
pop
mov
inc
xchg
mov
push
lret
sti
daa
aas
jmp
sbb
clc
inc
sarl
push
adc
sbb
test
mov
dec
pop
orl
mov
push
mov
xlat
nop
cmp
out
lods
xor
xor
adcb
mov
push
out
insl
mov
add
xor
push
ja
inc
pop
xor
and
cmp
dec
sub
sub
push
stos
in
movsl
mov
dec
xor
sub
out
xor
dec
xor
hlt
sti
daa
add
push
fnstsw
push
in
pop
xchg
rolb
gs
and
shll
imul
sbb
cmpsl
out
aaa
dec
mov
jg
icebp
aad
or
cmp
mov
cwtl
sahf
add
jns
sbb
ja
and
xchg
sbb
jmp
aaa
mov
xor
mov
dec
pop
push
outsl
or
inc
in
clc
push
in
mov
lds
pushf
push
and
popf
out
sub
push
aam
or
pop
mov
outsb
pop
pop
outsl
lock
insl
sbb
aam
shll
pop
inc
mov
cmp
xor
and
cmpl
data16
insb
push
enter
movsb
dec
dec
push
ljmp
call
xchg
jl
enter
addr16
pop
mov
jbe
pop
fsubrs
xchg
xchg
dec
repnz
outsl
adc
mov
mov
sbb
into
lret
push
bswap
lcall
test
popf
idivb
dec
mov
into
jp
jl
mov
inc
push
imul
xchg
mov
call
shrb
not
into
inc
cmpsl
jmp
mov
jno
nop
xchg
xchg
push
ja
imul
sub
arpl
or
lahf
push
pop
add
pusha
push
pusha
push
fcoms
cmpsl
xlat
adc
in
loopne
test
cwtl
xlat
aad
mov
jns
and
dec
xor
ja
lret
popf
rcrl
dec
ret
xchg
call
pop
sahf
push
mov
cmpl
pop
enter
push
aaa
pop
mov
jg
xor
out
lods
jns
jle
data16
cli
dec
xchg
jae
ds
test
mov
sbb
pop
into
sbb
xor
hlt
or
jmp
adc
pushf
push
fisttps
cli
inc
pop
daa
adc
mov
add
and
es
orb
movsl
inc
fists
xlat
out
xor
push
xor
sarb
test
dec
mov
rorb
cmp
xchg
ret
es
je
xlat
test
push
and
mov
jmp
subb
push
ss
cmp
pop
adc
fcom
nop
stos
add
pop
xor
push
or
jecxz
lcall
push
lret
sahf
daa
repz
push
pop
loopne
inc
push
cmpsl
loopne
pop
lds
rcl
sbb
dec
jns
add
scas
jno
orl
jns
daa
cmp
add
xchg
push
imul
stos
sti
outsb
pop
lds
sub
rcll
mov
data16
sarb
pmaxsw
test
add
or
cwtl
jb
mov
mov
pop
repz
ja
imul
mov
popa
rolb
push
jns
scas
call
std
dec
rcrb
mov
outsb
jne
mov
cmpsb
ds
inc
js
ret
int3
fstpt
sbb
jbe
jl
sub
inc
pop
push
push
xor
xchg
jecxz
sub
cmp
cmp
ficomps
loopne
test
add
movsb
sub
dec
fldln2
cmpsl
or
lods
iret
pop
mov
and
adc
push
sub
aas
aas
lahf
les
call
subl
pop
mov
std
cli
jecxz
sub
scas
xchg
inc
lods
push
or
dec
cwtl
push
notl
sahf
mov
in
out
pop
dec
std
js
mov
xor
xchg
dec
sahf
adc
jmp
xor
jnp
sbb
daa
pop
and
lea
mov
add
push
inc
jbe
adc
sub
dec
stos
shrl
cmpsl
stos
xchg
dec
jno
or
std
jge
aaa
sbb
adcl
add
mov
xchg
lahf
adc
push
mov
sbb
jns
push
push
jle
arpl
retw
jle
rorl
mov
aas
xor
in
xor
jecxz
jecxz
test
xchg
rorl
push
mov
or
pusha
and
fwait
pop
hlt
pop
cmp
fsubrl
ljmp
jno
loope
xor
mov
pop
and
shll
adc
mov
clc
xchg
lock
es
dec
lea
push
ret
je
ja
lea
pop
addr16
add
pushf
fiadds
cmpsl
mov
adc
push
cmc
lret
add
mov
mov
out
sti
daa
mov
sbbb
into
cmpsb
inc
sbb
push
sbb
rclb
push
dec
enter
push
adc
mov
lahf
leave
cltd
aam
xor
fwait
pop
shll
js
jge
out
sbb
sahf
pop
insb
pop
nop
jp
lcall
or
adc
hlt
mov
notl
popa
push
xor
daa
bndstx
lods
fmull
mov
add
jbe
sbb
dec
mov
xor
repnz
mov
xor
jg
in
push
stos
out
mov
pop
sbb
cmp
dec
movsb
push
test
push
push
and
ss
or
pop
je
shlb
je
lods
jb
dec
add
cmpsb
dec
jecxz
mov
adc
pop
xor
jae
push
push
or
dec
pusha
xor
mov
xchg
and
xlat
adc
mov
and
mov
xchg
xchg
adc
leave
xchg
dec
sbbb
cwtl
leave
js
jle
shr
jmp
fistpl
outsl
xchg
sub
scas
and
shll
outsb
fadds
sti
data16
cmp
leave
nop
cmpsb
out
fs
xor
loop
dec
fwait
call
out
push
xchg
push
pop
cld
rcrl
pop
add
adc
lds
pop
test
cmp
pusha
pop
jmp
jb
jmp
mov
xor
push
pop
adc
and
in
xchg
ret
mov
insb
rolb
pop
lods
and
insl
adc
out
sbb
pop
lea
and
sti
shlb
fwait
push
arpl
addr16
sub
cltd
jb
pop
das
xchg
pop
push
xchg
jnp
imull
das
push
aad
ror
loope
xchg
and
iret
std
aaa
in
insb
sub
aaa
sbb
add
push
jo
mov
inc
ss
sbb
push
ret
add
sti
jne
jae
xchg
cli
cmp
movsb
dec
pop
test
jp
icebp
daa
cmp
mov
mov
adc
sub
dec
add
repz
repnz
mov
repnz
ret
cwtl
dec
mov
mov
addr16
mov
cmp
adc
in
je
mov
add
mull
dec
mov
lret
dec
cmp
sbb
adc
and
not
dec
push
fs
pop
xor
add
ja
cltd
rol
jno
push
inc
iret
das
push
or
lock
mov
test
addr16
insl
push
imul
cmp
pop
dec
cmp
xchg
loopne
jmp
adc
inc
addr16
ss
mov
fcoms
sbb
rcl
ljmp
push
repz
pop
xchg
js
inc
test
arpl
stos
pop
das
xor
fwait
lcall
xor
jl
cmpsl
ret
jbe
inc
loope
lods
out
jge
pop
in
leave
mov
bound
xor
cmp
pop
push
jp
xor
sti
cmovl
pop
lret
pop
xor
addr16
cltd
std
and
cmp
rolb
jnp
arpl
sbb
fstl
sbb
adc
sub
aaa
inc
push
inc
fiaddl
push
jg
xor
lret
mov
mov
cmp
cmpsl
dec
jge
sub
ljmp
mov
xchg
roll
jb
fs
les
push
jbe
sub
lods
int
out
lahf
inc
decb
or
repz
pusha
mov
add
add
add
stos
aas
loope
data16
decl
call
testb
adc
ret
mov
mov
ret
mov
aad
aam
std
and
cltd
les
push
rcll
mov
adc
jbe
fimull
pop
sahf
or
cmp
mov
jbe
icebp
jle
xchg
jl
enter
add
add
xchg
xor
push
mov
test
fcmovu
rol
jle
adc
mov
xchg
xchg
push
mov
cli
dec
xor
push
out
cli
mov
data16
in
sbb
sub
pushf
jle
sahf
sbb
add
test
cmp
push
lahf
or
lret
push
js
sbb
les
pop
pop
hlt
dec
stos
jns
loop
mov
arpl
jnp
pop
mov
xchg
loopne
and
dec
nop
scas
bound
push
cld
std
leave
adc
pop
xchg
dec
mov
mov
pop
mov
or
loope
ret
jge
clc
dec
sub
or
dec
dec
aaa
insb
adcl
mov
inc
stos
mov
mov
jns
into
mov
inc
or
test
outsb
mov
fidivrs
aad
lock
fidivrl
mov
ficompl
test
adc
lock
xchg
movsl
sti
sbbl
push
ds
mov
div
xchg
mov
cli
stos
xor
adc
test
imul
sbb
outsb
cli
addb
dec
cmpl
and
out
repz
pop
aaa
xor
jl
or
cmp
cli
push
in
jns
xor
and
stos
xor
ret
pop
push
cli
push
rcll
sub
xchg
add
jl
adc
adc
pop
inc
push
push
sub
mov
lret
jno
xor
in
fldl
adc
fmull
enter
jmp
push
mov
icebp
fs
mov
cmc
fistpll
sub
mov
mov
lods
mov
mov
in
test
mov
mov
js
jno
test
inc
and
enter
outsl
lahf
and
lret
push
fiaddl
lea
fucom
arpl
cmp
jae
jo
bound
mov
and
xchg
int3
imul
xor
shll
and
ret
mov
or
testb
bound
jg
xchg
xor
cmpsb
push
adc
bound
or
out
jmp
orb
cmpsl
popf
pop
jo
sti
rol
mov
xchg
push
ret
fdivrl
cmp
add
aaa
xor
mov
inc
insl
mov
xchg
push
test
je
mov
orb
ret
mov
call
mov
fucomip
inc
scas
out
add
pop
outsb
pop
push
nop
mov
dec
and
or
in
fisubs
aas
mov
mov
cmp
adc
insl
jbe
stc
jo
dec
jge
sbb
loop
mov
je
roll
mov
and
mov
fcomps
shr
xchg
push
int
pop
ja
jbe
mov
leave
mov
pusha
rcl
jns
sbb
mov
lahf
pop
imul
cmp
push
sbb
ret
fld
push
xor
adc
push
test
fidivrl
pushf
mov
in
cltd
jns
xchg
jl
insl
cmp
mov
push
enter
xchg
jge
mov
in
add
or
pop
or
lds
in
cmpsb
in
inc
loopne
mov
jp
pop
test
push
les
or
and
jne
cmp
imul
jge
pop
js
or
jmp
js
mov
outsb
cli
push
pop
repz
mov
or
xchg
dec
mov
add
nop
push
jbe
pop
and
ds
out
jp
push
call
leave
xorb
ffree
jl
cwtl
cmpsl
popl
lcall
sbb
pop
push
pop
in
clc
mov
inc
fsubrs
lahf
in
rol
and
sbb
sbb
in
rcrb
movsb
testl
and
xchg
mov
pop
jae
aaa
cmp
ja
inc
push
pop
loop
repnz
jno
stc
or
xchg
cmp
fwait
push
jl
or
add
popa
xchg
mov
movsb
pop
sub
sbb
cwtl
test
xor
ds
ds
mov
pop
cmc
fimull
aad
test
cs
mov
cld
fmull
mov
inc
cmp
xchg
jns
sbb
ret
pop
push
test
xchg
out
xor
add
gs
add
in
inc
mov
add
mov
leave
je
aas
inc
ljmp
popf
mov
pop
inc
cmp
push
cmp
xor
pop
lcall
mov
xchg
mov
lock
xchg
pop
pop
lret
or
pop
mov
aam
je
add
mov
adc
sti
fucom
mov
cld
js
aam
jge
dec
or
pusha
repz
cmp
xor
aas
outsb
fsts
inc
push
cmpsl
maxps
mov
mov
pop
jp
call
push
or
call
xchg
cwtl
decl
in
inc
popa
jge
mov
gs
xor
sti
sbb
mov
cmp
dec
adc
lahf
xchg
fiadds
std
jp
cmpsl
test
cwtl
sub
xor
in
sti
push
xlat
shll
or
leave
loop
pop
mov
jge
xor
inc
pop
shll
orb
jp
mov
dec
cltd
adc
pushf
push
mov
imul
mov
stos
push
nop
testl
stc
mov
movsl
orb
mov
adcb
ret
mov
test
inc
fisubl
std
jae
sbb
mov
pop
nop
loopne
pushf
jl
mov
adc
repz
.byte
.byte
sbb
cmp
xlat
into
jmp
push
dec
jp
pop
pushf
jno
lret
outsb
mov
or
pop
jecxz
loopne
push
in
clc
clc
dec
sbb
lods
je
xor
fisubrl
and
mov
enter
push
xchg
xor
push
push
push
mov
stos
adc
dec
sub
out
scas
incb
pop
in
jge
xor
xor
les
mov
inc
sbb
cmp
mov
sub
and
push
and
sti
popa
test
dec
xchg
aaa
pushf
adc
jb
inc
repnz
insb
outsb
pop
xchg
daa
adc
xor
insl
ret
out
inc
iret
mov
rclb
fstpl
popa
push
movsl
cltd
cmp
cmpsb
or
xor
xchg
aam
cmp
or
xor
enter
fistpl
div
xchg
std
and
inc
pop
aaa
pop
xchg
dec
sub
xor
push
fdivs
out
mov
icebp
cmp
or
testl
loope
stos
inc
frstpm(287
lock
mov
divl
hlt
lahf
dec
xor
cmp
mov
and
scas
in
mov
push
fbstp
xorl
mov
in
aaa
inc
repz
cld
pop
movsl
les
test
mov
and
mov
mov
push
cmpsb
jb
lods
pop
add
fs
push
rcrl
sarb
cmp
pop
mov
das
sub
sti
jns
adc
call
mov
aas
test
or
test
fwait
shlb
mov
loopne
sub
mov
fildll
jecxz
daa
bound
jmp
xor
leave
and
fmul
push
aas
or
pop
sub
mov
mov
in
imul
lcall
nop
mov
lahf
mov
addl
sti
sub
movsb
inc
cmp
mov
imul
scas
cwtl
pop
inc
pop
fs
xchg
mov
jmp
lods
jno
jge
data16
pop
cmp
push
push
xchg
xor
popa
adc
pop
mov
or
sbb
or
and
test
sbb
dec
add
and
shrl
jmp
fsubrs
fildll
movsl
and
bswap
stc
add
iret
xor
xor
inc
stos
repnz
lret
mov
jl
es
xchg
xchg
scas
pop
decb
cmpsb
movsb
ss
subb
jp
jae
es
or
out
mov
xor
sbb
xchg
out
mov
pop
mov
leave
sub
inc
pusha
test
out
and
push
ljmp
push
mov
add
mov
or
cmc
test
xor
mov
xchg
loope
mov
aad
adc
push
dec
lock
sub
test
mov
lret
cmp
fadds
pop
in
push
cmpsl
sbb
rcrb
cli
rcr
mov
push
xchg
pop
or
ret
mov
insb
mov
cwtl
clc
scas
sbb
jo
loopne
adc
and
cmp
dec
xchg
lea
arpl
inc
push
test
xchg
imul
scas
aad
mov
fs
inc
dec
cmpsb
cs
dec
fsubrs
sbb
add
stos
xchg
or
push
jnp
fisubl
into
lea
in
dec
out
inc
in
cmpsb
lods
repnz
xchg
push
repz
data16
pop
sub
sub
sahf
or
mov
fidivs
xchg
cmp
fwait
hlt
push
loop
mov
mov
iret
out
stos
or
lea
nop
out
imulb
jecxz
notb
repnz
and
add
xchg
mov
xchg
or
and
addr16
imul
push
fsubr
xchg
test
mov
inc
movsb
sbb
mov
lret
pop
add
incb
mov
and
popl
hlt
mov
test
ja
inc
xor
inc
outsb
and
fistl
stc
jg
test
or
pop
in
jne
incl
and
test
aam
adc
ss
xor
lret
push
inc
sub
or
jl
mov
push
icebp
dec
or
mov
push
or
and
mov
insb
lret
faddl
dec
jg
dec
xchg
mov
clc
push
dec
aad
mov
xchg
fldcw
movsl
in
pushf
sub
jmp
sbb
push
push
pop
inc
xchg
xchg
dec
push
sbb
shrb
push
xor
scas
fs
push
jecxz
xchg
popa
adc
xor
xchg
cmpsb
xchg
in
sti
out
insl
inc
insb
push
popa
inc
mov
les
iret
push
adc
cld
jnp
call
jge
mov
rcrl
jae
pushf
sub
hlt
mov
adc
in
je
loop
movsb
mov
dec
hlt
pop
cmp
push
dec
push
test
out
daa
data16
daa
pop
xchg
clc
push
ja
push
mov
pop
push
mov
loope
popa
fidivl
rol
sbb
psraw
jbe
xchg
lret
xor
push
lea
mov
jbe
cld
dec
aad
mov
subl
pop
call
mov
jl
pop
movsb
popf
nop
sub
testl
sbb
lahf
xor
jmp
cmp
adc
leave
cs
mov
adc
add
ret
sbb
call
push
in
inc
mov
xchg
leave
dec
mov
aad
fwait
jmp
mov
insl
inc
fidivrs
sub
jbe
lret
push
ret
push
sbb
xor
mov
stc
aas
lods
mov
jae
mov
sahf
xor
xchg
adc
sub
push
and
dec
cwtl
cmp
sbb
cmpsl
ja
jae
dec
flds
pop
cmpsb
sub
popf
rorl
inc
jle
repz
dec
ja
leave
fsubrs
inc
jno
adc
ss
addr16
mov
jle
bound
and
addr16
test
movsl
adc
xchg
pop
movsl
lret
push
loopne
lods
mov
repz
jno
aam
pop
xorl
add
cwtl
in
icebp
push
je
shll
pop
lahf
ret
int
push
outsl
mov
mov
jb
js
push
in
mov
inc
lods
cli
insb
cli
dec
adc
dec
lret
mov
pop
sub
push
test
iret
cmp
adc
push
xchg
jge
jg
je
inc
insl
loope
or
repnz
lea
nop
nop
imul
cmp
adc
mov
jmp
mov
mov
aaa
sti
cmc
mov
cmp
ds
cmpsl
mov
lret
jle
clc
shl
hlt
fdivrs
pop
mov
pusha
iret
jno
inc
inc
add
cmp
sbb
dec
aaa
jns
cmp
and
sbb
pop
and
pusha
iret
mov
loope
cwtl
iret
mov
adc
call
imul
mov
aas
xor
push
test
aaa
mov
add
aas
ds
mov
cmpsl
popf
shlb
push
jp
and
insb
stc
mov
mov
ficomps
jecxz
mov
into
push
mov
ret
sub
xor
dec
out
dec
jg
dec
or
jne
or
or
lds
stos
xrelease
and
add
aaa
dec
sahf
push
mov
scas
adc
sub
lds
cmp
push
push
in
jnp
and
xor
cmpb
pop
andb
insl
aad
repz
fisttpll
adc
stos
push
out
in
mov
out
sbb
or
adc
lods
fnsetpm(287
fdivs
xchg
iret
xchg
mov
clc
dec
xor
xor
pop
das
cmp
cmpsl
pop
mov
jns
jge
inc
imul
je
cltd
sbb
out
xchg
int
mov
sub
pop
enter
push
fsub
rorl
insb
rcrl
add
and
cltd
rcl
mov
lods
popa
rclb
mov
lret
clc
mov
aas
in
or
dec
add
xor
and
lahf
sbb
pop
sub
insl
push
fstpt
jge
adc
mov
aam
inc
mov
out
sbb
push
outsb
pop
and
xchg
sbb
mov
lcall
ja
mov
cmp
pusha
addr16
iret
mov
adc
and
xor
movsb
bound
iret
jmp
push
sti
shll
scas
nop
sbbl
pop
xchg
in
or
frstors
dec
or
subl
scas
adc
dec
testb
sub
push
das
sti
arpl
sbb
pop
xor
and
jecxz
inc
adcl
dec
cltd
daa
sahf
ds
sbb
mov
adc
or
hlt
and
testl
mov
pusha
imul
jbe
loope
mov
xlat
dec
pop
ds
sarb
test
add
pop
sarb
xor
cmc
adc
sub
mov
xchg
mov
mov
pop
dec
sub
sub
pop
pop
loopne
movsl
mov
iret
aas
es
mov
sub
jno
nop
cmp
cmpsl
aad
ret
or
cmpb
mov
cmp
stos
push
cmp
inc
or
sahf
adc
xor
xor
jb
xor
hlt
das
and
js
call
jnp
or
mov
jecxz
mov
xor
inc
out
dec
fisubrs
push
loope
pop
xchg
mov
cmp
mov
loopne
mov
lods
xchg
dec
xchg
sarl
lods
pop
push
push
arpl
movsb
xorb
fmuls
push
icebp
inc
cmpsl
lahf
out
sbb
mov
shrb
jge
fstpl
int3
xor
stos
dec
lds
and
lods
xchg
inc
mov
sbb
mov
xlat
xlat
jg
mov
repnz
adc
jo
and
mov
sub
push
sahf
hlt
pop
pop
xchg
lret
sti
ffree
mov
jmp
sahf
mov
inc
mov
push
lea
jae
push
loopne
sub
into
push
mov
mov
inc
jo
cmp
out
loopne
fnstenv
enter
sub
push
sti
ss
inc
cli
push
es
bound
fldt
sahf
mov
shld
pop
sub
scas
push
push
cmp
call
sub
das
mov
mov
jno
push
sti
cmp
lret
cltd
push
dec
cwtl
in
xchg
nop
push
jno
push
pop
xor
es
push
dec
loopne
cld
bound
jo
dec
add
inc
mov
pop
cmp
mov
nop
into
lcall
insl
dec
push
int3
in
enter
addb
mov
push
dec
arpl
int
xlat
or
push
inc
jecxz
sub
loop
adc
rorl
xchg
loope
inc
mov
cli
dec
mov
pop
cli
clc
pop
mov
imul
jae
jle
ljmp
call
xchg
movsl
or
fistpll
mov
mov
clc
ret
push
mov
in
or
mov
adc
inc
push
ds
imul
lods
add
mov
sbb
lods
sub
jmp
lret
mov
cld
jbe
jns
stos
test
mov
dec
sub
movsb
push
lods
loop
pop
sub
test
xor
faddl
scas
enter
int3
pop
scas
cmpsl
jns
ret
sub
xchg
cmp
jle
and
inc
inc
shlb
jo
sub
fsubrl
pop
inc
test
mov
test
jae
ret
push
mov
xchg
inc
jnp
push
push
dec
xor
push
cmc
outsl
mov
movsl
push
xchg
imul
clc
sbb
shlb
jp
push
cli
inc
sub
jmp
test
jae
rcll
out
loopne
mov
dec
les
or
mov
adc
adc
adc
test
dec
adc
hlt
cmp
sbb
lahf
test
mov
mov
cld
mov
das
aas
jp
fwait
sbb
pop
push
jp
xadd
push
sub
add
pushf
add
rclb
mov
xchg
or
xchg
dec
iret
cmp
inc
testl
shrl
mov
fsubl
aam
pushl
jmp
pop
sbb
fdivr
add
mov
mov
mov
cmp
mov
test
dec
imul
out
out
loop
jae
mov
adc
or
jmp
push
pop
mov
popa
cmp
adc
in
mov
jno
inc
mov
clc
sbb
stos
out
mov
xchg
jecxz
add
and
and
xchg
sub
dec
mov
xlat
test
leave
push
jg
sbb
mov
aad
pop
pop
add
pop
sahf
push
cwtl
mov
cmc
mov
pop
popa
mov
inc
and
adc
and
or
cmpsl
enter
enter
addl
rcll
jno
xor
push
lcall
loop
or
or
or
call
ret
pop
xchg
cmp
mov
lahf
adc
pop
into
mov
mulb
mov
xchg
cmc
push
push
cmpsl
stc
into
clc
aas
fnstsw
aaa
pop
jmp
cmp
rclb
icebp
rorl
add
scas
test
push
movsb
in
sub
imul
hlt
push
jno
cmp
sbb
jg
out
mov
sar
push
pop
std
mov
fstl
inc
test
dec
in
jge
dec
push
out
push
adcb
movsb
repnz
rcrl
inc
mov
dec
je,pn
or
jno
leave
push
pop
arpl
push
or
das
sarl
sahf
sub
sbb
and
dec
mov
sbb
mov
js
mov
push
add
xchg
cli
ss
inc
test
int3
adc
loope
lahf
push
dec
push
sub
aaa
movsl
out
jge
jb
add
out
outsb
clc
rcrl
push
ja
mov
idivb
loope
or
insl
pushf
scas
aas
daa
cltd
push
sub
push
mov
push
push
inc
dec
and
add
adc
mov
nop
loop
outsl
jecxz
rol
sub
invd
push
mov
imul
adc
inc
cmp
mulb
xchg
mov
pusha
les
insl
add
dec
jp
xchg
xor
jge
lods
loop
sti
lahf
iret
enter
fmul
jg
insb
repz
pop
add
scas
jbe
inc
jle
mov
ficompl
inc
push
andb
ds
and
and
fucomp
inc
or
mulb
pop
dec
dec
xchg
lods
popa
xchg
adc
pop
sbb
or
pop
lret
sahf
pavgw
xchg
sbb
dec
jp
or
inc
pop
movsb
mov
pop
adc
jmp
ret
ds
and
cltd
dec
les
xchg
in
cmp
adc
popf
inc
jb
push
inc
pushf
fstp
cmp
mov
dec
dec
mov
lea
sbb
sahf
int3
xor
stos
sbb
mov
jne
adc
cwtl
and
test
out
sbbl
pop
xchg
jo
inc
outsb
push
dec
testl
add
cmp
add
scas
xchg
mov
and
mov
inc
fldl2t
lock
push
pop
outsb
mov
out
dec
xchg
daa
inc
cmpsb
sarl
lods
call
mov
xchg
cmc
and
and
mov
jnp
cmp
sbb
pop
lret
call
adc
xchg
mov
sub
cld
stc
mov
push
mov
or
stc
es
dec
mov
je
mov
mov
mov
out
ret
jle
mov
iret
lret
fisttpll
fnstenv
stos
mov
push
inc
pop
pop
pop
mov
pushf
adc
cld
pop
adc
test
xchg
ret
cli
xor
fstps
repz
dec
mov
dec
int
std
push
fcoml
psubusb
mov
xchg
lea
push
jmp
into
jmp
cmp
cmp
mov
pop
in
mov
loopne
sti
sbb
cld
pop
test
test
arpl
fadd
int3
mov
fimull
mov
adc
sub
dec
adc
push
add
out
inc
mov
or
movsb
arpl
xor
mov
repz
leave
push
push
cmpsl
mov
push
jno
mov
mov
lahf
mov
add
lcall
aad
pushf
in
push
ja
lods
int
ficompl
ss
dec
lods
jl
or
pop
xlat
mov
scas
sti
add
push
sub
jb
or
stos
cs
xchg
inc
cmp
push
ficoml
adc
notl
and
mov
inc
xchg
daa
mov
cld
push
mov
js
jp
pand
les
loop
sbb
leave
sahf
cmpsb
mov
mov
cwtl
ret
rcrl
divb
push
fincstp
fincstp
add
nop
adc
push
push
mov
xchg
bnd
lock
cs
jnp
cmp
test
in
mov
inc
fs
sarl
sahf
ss
cmpsb
cli
jo
xor
mov
in
pop
adc
into
sbb
push
cltd
divl
rcrb
dec
out
daa
and
mov
pusha
loop
vmwrite
or
hlt
arpl
lods
sbbb
jnp
dec
add
test
push
cs
inc
je
push
int3
adc
ljmp
push
and
pop
sbb
aas
sahf
mov
ljmp
das
int
ss
test
mov
jmp
xor
mov
or
ret
xor
xlat
xchg
test
mov
and
jo
and
mov
add
ret
mov
inc
sub
icebp
dec
sub
test
cmpsl
popa
mov
test
jb
mov
scas
movsl
mov
adc
dec
cmc
lret
scas
xchg
leave
test
sbb
test
ficoms
sbb
xor
imul
sub
inc
sub
sbb
pop
push
adc
adc
cmp
rcr
pop
sub
jle
jecxz
mov
cmpsl
inc
dec
cmp
mov
sbb
jbe
push
pop
call
mov
jle
sub
lret
data16
popf
cmpsb
ror
add
and
xor
sub
dec
jge
adc
lcall
mov
cmp
add
movsb
mov
dec
lods
lods
sbb
cltd
out
lea
das
mov
jmp
dec
inc
rorl
dec
mov
leave
mov
js
icebp
data16
fists
push
pop
stos
les
cmp
out
lea
cs
aaa
pop
cltd
jns
adc
cmp
mov
or
and
pop
sub
add
and
xor
dec
nop
mov
dec
pop
pop
bound
inc
sbb
mov
mov
divl
cltd
cs
lea
sub
int
push
xchg
leave
sbb
inc
sar
leave
mov
cmp
insl
mov
mov
ss
sbb
xchg
testl
stos
mov
pop
pusha
sbb
repz
das
nop
push
xchg
insl
lods
xlat
stos
movsl
scas
inc
jo
gs
jb
and
mov
std
xor
cwtl
test
fidivs
xchg
popa
mov
test
outsb
or
out
mov
mov
sbb
ret
aaa
pop
push
movsl
testl
push
jp
mov
xchg
xchg
test
inc
inc
sbb
scas
cmpsl
fwait
mov
xchg
xor
gs
dec
out
clc
or
addl
mov
mov
lahf
add
movsl
je
arpl
dec
adc
mov
pop
mov
dec
mov
insb
hlt
nop
loopne
sti
mov
lds
fidivs
xchg
les
and
dec
aaa
ficompl
and
cmpsl
and
push
push
pop
ss
push
aas
fidivl
add
jmp
adc
and
call
jg
sub
daa
mov
lds
pop
cmpsl
push
std
sub
sbb
psubusw
and
fisubl
stc
fsubrl
ss
int
push
pop
mov
adc
jo
push
pop
sbb
nop
adc
int
mov
in
sbb
adc
adc
lods
or
movsb
sub
lcall
sbb
push
lods
jne
rcrl
stc
add
fstp
mov
aad
roll
pop
dec
gs
stos
xlat
fdivrl
jne
push
repnz
and
sti
jne
cltd
mov
out
and
pop
stos
or
push
test
std
or
jnp
jecxz
push
xchg
pop
pop
jns
enter
fldcw
int3
lock
pop
insl
sbb
dec
mov
dec
inc
xchg
out
lret
imul
add
es
sub
cmp
stc
fnstsw
shll
inc
loope
sub
mov
mov
push
lret
push
push
xor
outsl
cmpsb
push
aaa
addl
and
js
sti
lods
push
frstor
inc
cmpsb
xchg
xchg
xchg
xor
pushf
test
inc
dec
loop
out
pop
mov
ljmp
push
cmp
xlat
imul
lock
int3
hlt
das
xor
insl
mov
daa
inc
sub
sarb
jns
adc
loop
mov
ss
std
adc
sub
add
test
es
mov
ljmp
lahf
pop
inc
jge
aas
movsb
call
shl
cwtl
shll
adc
lret
out
scas
pop
cmc
mov
pop
adc
loop
pop
and
das
aas
add
push
shlb
lock
jne
xorb
mov
nop
loope
fstps
adc
les
aas
inc
or
push
xor
ds
test
mov
mov
pop
cmpsb
testb
push
dec
push
and
sbb
or
mov
mov
shrb
sub
xor
es
mov
ds
ret
leave
sbb
dec
sub
xchg
lret
push
jl
arpl
pop
or
stc
mov
xchg
packssdw
adc
push
add
outsb
repz
ds
jle
leave
xlat
insb
inc
aaa
adc
xlat
mov
out
mov
xchg
shll
idivb
sub
arpl
add
insb
sub
mov
shl
mov
test
xchg
ja
jnp
fcoms
out
mov
adc
pop
mov
jbe
xlat
mov
pop
jns
mov
sbb
enter
adc
mov
js
movsl
inc
stos
add
vpor
mov
adc
jmp
push
cmp
mov
xor
and
xchg
push
data16
mov
mov
fwait
xor
sub
gs
push
cmpb
jae
insl
fcoml
and
cmp
add
das
jg
aas
pop
push
jp
inc
push
xchg
sbb
and
lahf
mov
sbb
or
js
dec
je
sub
out
xchg
sbb
mov
push
cmc
lods
iret
pop
jo
adc
add
jae
jmp
mov
rclb
jle
je
mov
scas
mov
repnz
jns
cwtl
dec
gs
jge
lret
dec
clc
sti
cmp
pop
cmp
cs
lock
adc
xor
nop
rep
mov
rorl
pop
test
je
mov
.byte
mov
scas
.byte
and
add
repnz
out
daa
mov
mov
push
jo
cmpsb
mov
push
xchg
pop
sub
lret
pop
insl
adc
pop
inc
jge
jg
sub
js
pop
mov
into
adc
xchg
and
aaa
pop
and
jo
mov
dec
sbb
mov
jge
sarb
and
sti
cmpsb
sbb
mov
push
mov
ja
std
scas
jb
adc
cld
aad
jmp
loop
adc
jmp
jecxz
test
hlt
pop
cld
or
mov
cmc
loopne
fwait
mov
lods
lret
mov
out
ret
test
cmp
cmp
and
imul
sub
dec
jo
shlb
xchg
or
lds
decl
mov
fisttps
push
mov
adc
sub
push
cmp
icebp
or
xchg
mov
ret
int3
in
nop
push
inc
hlt
dec
test
test
xchg
sbbb
stos
mov
xchg
dec
sub
repnz
jns
lods
out
xlat
sub
cli
sbb
dec
pop
pop
imul
sub
andl
and
aaa
pop
inc
mov
popa
sbb
call
pop
scas
mov
loopne
sahf
jns
repnz
ret
jl
mov
in
xchg
adcb
add
push
std
dec
mov
add
stc
lods
nop
xchg
cmp
cs
xchg
pop
xchg
sub
adc
mov
mov
mov
sub
sbb
and
jmp
or
loop
das
jmp
icebp
dec
out
mov
or
out
outsb
mov
clc
push
jp
or
sbb
push
cs
sub
ljmp
sub
outsl
add
ljmp
or
pushf
add
stc
test
stc
pop
jne
das
outsb
out
into
mov
mov
ds
loope
xchg
sub
and
adc
insb
mov
pop
or
and
repz
xchg
push
enter
icebp
add
push
pmullw
jne
lcall
and
jae
cmp
push
dec
sub
push
dec
or
adc
popl
je
cmpsb
mov
mov
jne
out
out
lea
js
mov
aad
adc
adc
xchg
cwtl
aam
loop
inc
jmp
adc
test
cli
jg
mov
cmovs
jne
fs
iret
call
push
clc
mov
scas
dec
in
sub
sub
inc
std
hlt
test
inc
sbb
adcl
pop
cmpsl
js
adc
adcb
lret
sahf
xor
jp
dec
mov
adc
jae
icebp
lret
std
mov
push
dec
sub
cmpsl
mov
fucomip
test
inc
xor
shlb
lods
push
mov
mov
decb
and
fildll
or
es
rcrl
mul
out
push
shll
adc
stos
in
into
sarb
mov
push
rcll
sbb
push
rcrb
or
dec
dec
mov
push
aas
fbstp
cmp
rorb
add
hlt
shl
addr16
clc
lock
inc
mov
test
clc
mov
or
insl
insl
imul
adc
popl
cmp
das
add
int
jbe
stc
std
push
sbb
sub
xchg
std
fildll
push
jb
je
lret
ret
insl
arpl
jbe
inc
mov
inc
popa
fnstenv
inc
or
mul
nop
popa
mov
scas
mov
sub
hlt
xlat
jle
int3
xor
fstp
pop
scas
jle
cld
inc
push
cmp
mov
and
loopne
pop
xchg
in
cltd
pop
xchg
sbb
push
int3
xor
mov
cmp
add
dec
jno
jbe
test
fcomps
aaa
push
push
pop
push
pusha
test
jbe
nop
jnp
popa
lock
xchg
data16
lods
jmp
je
adc
mov
js
cmp
jg
mov
icebp
bound
test
arpl
jecxz
cmp
jge
push
and
xor
jne
cmp
and
rolb
pop
insb
addr16
mov
pop
xchg
stc
outsl
xchg
nop
push
test
xchg
pop
sbb
fimuls
out
jmp
push
jmp
mov
push
cwtl
fwait
mov
pop
leave
cmp
daa
lahf
sti
inc
push
or
xchg
in
mov
movsb
adc
pop
movzwl
pop
sub
mov
insl
andb
xchg
aas
cmp
xor
add
sbb
lea
inc
cmp
lret
dec
leave
mov
pop
pop
jl
movl
int3
mov
jnp
nop
mov
push
dec
hlt
adc
xorl
add
or
xor
xlat
add
bnd
xlat
push
outsl
and
jmp
xchg
clc
xor
xchg
dec
in
cmc
pusha
sbb
sub
sbb
sti
pop
mov
out
jb
sbb
mov
sti
mov
ljmp
clc
daa
repz
and
hlt
test
dec
pushf
cmp
mov
mov
cmp
push
adc
cmp
push
pusha
push
call
jecxz
scas
xor
and
test
stos
lods
dec
scas
fdivrs
push
bound
mov
pop
out
out
div
jae
lods
push
int3
dec
lret
clc
and
add
repnz
inc
mov
clc
pop
inc
xchg
sub
mov
push
lret
add
jge
xchg
push
sbb
mov
lock
js
lods
fs
fs
lret
aad
xlat
pop
xchg
shll
mov
mov
in
inc
jno
bnd
add
jno
cltd
lds
pushf
push
clc
dec
push
in
movsl
jo
add
push
and
mov
inc
out
push
fstl
dec
gs
enter
arpl
ror
push
popa
movsl
outsb
into
in
adc
lret
outsb
pop
add
xchg
roll
jmp
lock
sbb
bound
xchg
sbb
mov
cli
das
dec
imul
xchg
dec
leave
add
vmwrite
shlb
outsb
inc
mov
hlt
lcall
orb
popa
cmp
add
mov
sbb
in
hlt
insl
cwtl
rclb
xchg
mov
jns
ds
xchg
or
je
adc
adc
test
mov
adc
xchg
movsb
cld
xor
insl
push
pop
imul
xor
jns
pop
cwtl
hlt
enter
jns
dec
xchg
sarb
sub
in
leave
add
mov
mov
loope
jl
fs
sub
and
insb
fnstcw
mov
sbb
push
jp
cmp
jl
inc
push
into
popa
out
sbb
sbb
or
sbbb
push
lds
aad
jle
fildl
push
cmpsl
jns
popa
and
shll
jbe
xor
je
out
lahf
sbb
aad
insb
arpl
mov
or
push
jp
push
xchg
push
sbb
mov
in
pop
imul
pop
inc
sbb
sbb
sbb
xchg
lretw
xchg
add
mov
int3
push
adc
fidivrs
test
mov
fsubs
movb
pop
xchg
sub
push
and
ret
orl
adc
adc
shrb
stc
push
lods
inc
fadds
sbb
mov
scas
imul
stc
out
and
mov
aad
sbb
or
mov
add
loopne
and
jmp
scas
js
fimull
or
cld
test
mov
mov
fsubl
outsl
loope
scas
push
mov
sub
push
mov
cmp
xlat
xchg
dec
shl
outsl
mov
je
cmp
add
push
mov
arpl
ljmp
ret
popa
jge
sbb
je
sbb
mov
or
addr16
jns
cmp
jl
inc
and
fisubrl
mov
push
in
in
cli
cmc
mov
sbb
jne
add
xor
jb
inc
hlt
imul
xchg
mov
jbe,pt
sub
int3
lods
xchg
out
scas
cmovl
sub
leave
sahf
movsl
das
xchg
jg
jle
dec
push
shlb
mov
cmc
xchg
dec
in
mov
and
fiadds
sub
sub
sbb
cmpl
mov
jg
dec
mov
adc
mov
xor
xorl
mov
negl
mov
push
xchg
imul
lea
adc
mov
mov
dec
movq
sarl
sahf
frstor
shrb
icebp
inc
subb
std
scas
out
jmp
pop
aad
js
pop
pop
imul
into
mov
dec
out
arpl
or
inc
or
ja
sub
mov
push
mov
mov
iret
mov
enter
daa
mov
or
outsb
decl
icebp
test
rcll
cmpsb
gs
lock
or
jno
inc
ds
shrb
xchg
sub
es
iret
mov
sbb
lcall
inc
adc
mov
shll
xor
test
jae
lret
int
test
xchg
cmp
sbb
lds
sti
add
push
mov
adc
roll
frstor
sbbl
das
mov
ja
sub
test
imul
jbe
jno
inc
fwait
push
hlt
adc
adc
in
mov
fs
jmp
clc
push
jle
stos
dec
ja
test
cmpb
or
shll
mov
pop
push
mov
pop
icebp
popf
iret
int
xchg
jl
push
into
out
imul
cmp
ret
imul
js
ret
fs
jg
mov
ljmp
sbb
fildl
les
in
add
mov
sbb
mov
imul
xor
jle
cmp
or
sbb
inc
adc
sub
jae
adc
flds
pop
cli
cltd
subl
call
sbb
mov
jns
mov
jl
popf
or
or
dec
iret
lea
ret
std
mov
outsl
pop
pop
loop
push
cmc
inc
insb
icebp
pop
into
pop
test
push
jnp
test
out
inc
leave
mull
int
pop
rol
push
ja
imul
stc
out
mov
call
shrl
pop
cmp
dec
adc
sbb
and
cmp
lods
mov
sub
lcall
jns
jp
aaa
sbb
and
jmp
add
mov
inc
push
cmpsb
sbb
adc
and
push
xchg
sbb
shl
push
mov
out
arpl
dec
stc
inc
push
cmpsl
mov
.byte
.byte
.byte
add
dec
add
dec
add
jo
add
and
add
add
adc
add
add
add
add
add
add
add
cwtl
add
addb
add
add
add
sbb
add
xor
add
add
add
sub
add
jo
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
sbb
add
adc
add
add
add
add
or
xorb
add
dec
add
cmpb
andb
orb
cmpb
sbbb
adcb
add
jle
add
mov
add
xchg
or
xor
add
or
subb
add
add
add
add
add
cmp
addb
add
adc
add
add
add
add
or
adcb
addb
add
adc
add
add
add
add
sldt
push
sldt
addb
jmp
add
cwtl
add
sub
add
mov
add
enter
out
sldt
loopne
add
clc
add
xor
add
adc
add
sub
add
inc
add
add
pop
add
add
jo
add
mov
add
mov
sldt
mov
sldt
rolb
add
call
sldt
add
add
sbb
add
xor
add
dec
push
add
pusha
push
add
js
add
nop
push
add
adc
outsl
insl
add
add
loopne
add
out
or
add
add
fadds
add
adc
add
add
add
add
jg
add
push
add
or
add
and
add
cmp
add
push
pop
add
push
jg
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
adc
add
add
add
add
add
add
pop
add
add
add
adc
add
add
add
add
add
add
pop
add
add
add
adc
add
add
add
add
add
add
pop
add
add
add
adc
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
rorb
add
add
add
adc
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
inc
outsl
insl
add
add
add
add
orb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
adc
add
sub
or
xor
add
pop
in
or
xor
add
nop
out
or
xor
add
out
or
xor
add
clc
lock
xor
add
sub
or
xor
add
pusha
repz
xor
add
xchg
hlt
or
rolb
add
testb
in
add
dec
clc
or
rolb
add
sbb
or
rolb
add
call
add
add
add
add
add
add
or
rolb
add
sub
or
rolb
add
clc
add
add
add
add
push
or
call
add
add
add
add
or
add
or
push
add
add
add
xchg
push
or
in
add
add
add
add
add
mov
or
fadds
add
pusha
and
add
add
add
add
sbb
or
adc
add
xor
or
enter
clc
sub
call
add
add
add
add
sub
add
add
add
xor
aam
add
xchg
xor
faddl
add
jo
or
xor
add
mov
add
add
aaa
or
or
add
adc
or
test
add
cwtl
ds
mov
add
dec
inc
or
sbb
add
or
cmp
add
cwtl
inc
or
in
add
add
add
lods
dec
or
mov
add
add
add
add
add
add
add
add
lock
or
les
add
mov
or
mov
add
add
add
add
add
add
add
add
aam
or
adc
add
call
add
add
popa
or
adc
add
adc
add
add
and
or
adc
add
cmp
add
add
dec
bound
adc
add
pusha
bound
adc
add
pop
add
inc
add
inc
add
push
add
add
inc
add
dec
add
add
inc
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
push
add
push
add
inc
add
inc
add
add
add
inc
add
inc
add
dec
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
pop
add
inc
add
inc
add
add
add
add
inc
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
or
inc
add
add
add
push
add
add
add
add
push
add
inc
add
dec
add
add
push
add
inc
add
dec
add
or
movsb
jg
add
add
add
add
add
add
inc
add
dec
add
inc
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
addb
incl
add
inc
add
inc
add
mov
add
mov
add
mov
add
mov
add
addb
add
add
add
add
add
add
incl
incb
incb
incb
incb
cld
add
cld
add
clc
add
clc
add
push
add
push
add
jmp
add
inc
add
inc
add
inc
add
cld
add
cld
add
cld
or
cld
ud0
cld
aas
cld
aas
cld
aas
jg
incl
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
incl
add
test
add
add
add
mov
add
add
add
rolb
add
add
add
add
add
add
add
add
push
add
psubb
add
add
add
test
out
jmp
sbb
ficompl
out
fcmovu
jmp
cmp
inc
add
inc
add
jmp
add
jmp
add
jmp
add
push
pop
clc
ud0
cld
pop
aas
aas
aas
cld
pop
clc
ud0
lock
jmp
add
jmp
add
jmp
add
inc
add
inc
add
incl
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
incl
add
lock
add
add
pushl
add
std
mov
pop
std
mov
pop
std
mov
pop
std
mov
pop
std
mov
pop
cmp
mov
push
fldl
add
jl
add
add
data16
add
add
jle
add
jg
add
jg
add
jg
add
jle
add
jl
add
js
add
jo
add
pusha
add
add
add
add
add
inc
pop
inc
pop
incb
pop
incb
pop
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
pushl
aas
pushl
add
call
add
incl
incl
incl
ud0
add
incl
aas
incl
jg
incl
incl
incl
incl
decl
lcall
aas
decl
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
addb
adc
add
and
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
loopne
add
and
add
inc
add
or
add
add
add
std
clc
push
jg
jmp
aas
inc
pop
inc
pop
clc
cld
add
cld
add
cld
add
cld
add
cld
add
clc
inc
pop
inc
pop
jmp
aas
push
jg
clc
std
call
add
add
add
add
add
add
add
add
add
add
add
addb
add
incl
add
loopne
add
mov
add
add
add
sub
add
mov
inc
add
test
add
sbb
add
mov
add
add
add
cld
pop
cld
pop
cld
pop
cld
pop
jmp
adc
inc
adc
incl
jg
add
aas
incl
add
test
inc
adc
jmp
adc
cld
pop
cld
pop
cld
pop
cld
pop
incl
add
add
add
add
add
add
add
add
add
add
add
addb
add
incl
pop
cld
add
pop
cld
add
pop
cld
add
pop
cld
add
pop
cld
add
pop
cmp
add
faddl
add
faddl
add
mov
add
inc
add
add
add
jbe
add
jle
add
jg
add
jg
add
jg
add
jle
add
jl
add
js
add
jo
add
pusha
add
add
add
add
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
pushl
pushl
add
call
add
incl
incl
incl
ud0
add
incl
aas
incl
jg
incl
incl
incl
incl
decl
lcall
aas
incl
add
add
add
add
add
add
add
add
add
add
add
addb
add
incl
add
add
or
add
sbb
add
push
add
sub
add
inc
add
add
add
inc
addl
add
add
pusha
xor
add
sbb
add
push
add
sbb
add
sbb
add
loopne
add
add
add
cld
pop
push
pop
jmp
add
inc
sar
xor
incl
clc
jg
sbb
sbb
jg
push
sbb
lcall
or
decl
test
pop
incl
loope
jmp
add
push
pop
cld
pop
ljmp
add
add
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
mov
xor
xor
xor
xor
xor
xor
xor
add
xor
adc
xor
xor
xor
add
xor
adc
xor
adc
xor
mov
xor
add
cmp
adc
xor
repz
clc
xor
xor
sbb
xor
repz
add
xor
cmp
adc
adc
xor
xor
clc
xor
add
xor
xchg
adc
sbb
xor
xor
repz
aas
xorl
add
xor
xor
adc
xor
xor
add
xor
cmp
adc
xor
repz
xor
xor
xor
xor
cmp
xor
xor
cmp
sbb
sbb
xor
xor
xorl
xor
add
xor
xchg
adc
xor
cmp
cmp
cmp
xor
add
xor
sbb
xor
xor
add
xor
cmp
xor
xchg
adc
xor
clc
xor
repz
add
xor
xor
xor
cmp
xor
xor
xorl
incl
xor
xor
xor
xor
xor
xor
xor
mov
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
and
add
adc
add
add
add
add
add
jl
add
adc
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
add
xor
and
xor
xor
cmp
xor
add
xor
and
xor
xor
xorl
cmp
xor
xor
add
sub
and
xor
cmp
aas
xor
xor
xor
add
and
xor
cmp
xor
xor
xor
add
sub
sub
and
xor
cmp
xor
xor
repz
add
xor
and
mov
cmp
xor
add
inc
and
xor
xor
repz
add
sub
and
and
cmp
repz
xor
mov
and
popl
xor
repz
cmp
xor
and
and
xor
cmp
cmp
xor
xor
mov
xor
xor
xor
xor
xor
cmp
and
and
xor
xor
repz
xor
add
xor
xor
mov
xor
xor
xor
xor
xor
cmp
and
xor
xor
xor
repz
add
xor
xor
xor
mov
xor
xor
cmp
add
xor
xor
xor
cmp
xor
xor
xor
xor
clc
repz
xor
xor
xor
xor
xor
xor
xorl
add
add
add
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
mov
xor
xor
xor
xor
xor
xor
xor
add
xor
adc
xor
xor
xor
add
xor
adc
xor
adc
xor
mov
xor
add
cmp
adc
xor
repz
clc
xor
xor
sbb
xor
repz
add
xor
cmp
adc
adc
xor
xor
clc
xor
add
xor
xchg
adc
sbb
xor
xor
repz
aas
xorl
add
xor
xor
adc
xor
xor
add
xor
cmp
adc
xor
repz
xor
xor
xor
xor
cmp
xor
xor
cmp
sbb
sbb
xor
xor
xorl
xor
add
xor
xchg
adc
xor
cmp
cmp
cmp
xor
add
xor
sbb
xor
xor
add
xor
cmp
xor
xchg
adc
xor
clc
xor
repz
add
xor
xor
xor
cmp
xor
xor
xorl
incl
xor
xor
xor
xor
xor
xor
xor
mov
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
cmp
div
xchg
mov
xor
add
inc
inc
inc
or
mov
xor
popl
add
xor
pop
push
xor
mov
cmp
xor
ud0
xor
xor
cmp
aas
add
xor
dec
pop
ud0
xor
xor
mov
xor
repz
add
xor
inc
aad
out
in
xor
xor
repz
add
xor
dec
pop
ud0
xor
xor
mov
xor
repz
add
xor
inc
aad
out
in
xor
xor
repz
add
xor
dec
pop
ud0
xor
xor
mov
xor
repz
add
xor
inc
aad
out
in
xor
xor
repz
add
xor
dec
pop
push
hlt
xor
xor
mov
xor
repz
add
xor
inc
aad
out
in
xor
xor
repz
add
xor
dec
pop
push
hlt
xor
xor
mov
xor
repz
add
xor
inc
inc
inc
inc
inc
xor
xor
clc
repz
add
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
add
xor
xor
xor
aas
push
xor
add
xor
xor
stos
mov
xor
mov
add
xor
xor
add
xor
xor
xor
clc
repz
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
repz
xor
add
xor
xor
inc
arpl
xor
xor
xor
xor
xor
add
xor
xor
inc
xor
xor
xor
cmp
xor
xor
add
xor
xor
arpl
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
xorl
xor
add
xor
xor
inc
arpl
xor
xor
xor
pushl
xor
xor
add
xor
ss
xor
xor
xor
cmp
add
xor
xor
inc
xor
xor
xor
cmp
xor
xor
add
xor
ds
xor
xor
cmp
xor
xor
add
xor
xor
inc
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
repz
xor
add
xor
xor
xor
inc
xor
xor
xor
add
xor
xor
inc
xor
xor
repz
add
xor
inc
inc
inc
xor
cmp
incl
add
xor
data16
xor
repz
add
xor
xor
data16
xor
repz
cmp
xor
add
xor
xor
out
jecxz
xor
xor
incl
xor
xor
xor
xor
xor
xor
cmp
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
inc
xor
xor
inc
xor
pushl
xor
pushl
add
xor
sub
xor
mov
xor
add
xor
xor
xor
aas
xor
add
xor
arpl
xor
cmpl
xor
xor
stos
inc
xor
xor
xor
cmp
xor
xor
xor
add
xor
inc
sub
xor
xor
xor
cmpl
xor
add
xor
stos
and
xor
xor
xor
xor
add
xor
push
and
xor
xor
xor
clc
pushl
add
xor
stos
inc
push
xor
cmp
clc
cmpl
aas
xor
add
push
inc
mov
xor
cmpl
aas
cmp
xor
add
xor
stos
inc
sub
xor
cmp
repz
clc
aas
xor
add
xor
mov
xor
xor
xorl
xor
xor
add
xor
xor
stos
inc
xor
xor
xor
xor
aas
xor
add
xor
xor
and
xor
xorl
xor
add
xor
xor
inc
xor
xor
xor
xor
aas
xor
xor
add
xor
mov
xor
xor
cmpl
xor
add
xor
xor
stos
inc
xor
xor
xor
xor
add
xor
xor
data16
xor
xor
xor
cmp
add
add
add
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
aas
pushl
xor
add
xor
xor
xor
xor
mov
add
xor
mov
adc
mov
xor
xor
pushl
add
xor
adc
cltd
xchg
adc
cmp
add
xor
adc
xor
cmp
repz
xor
adc
xor
xor
cmpl
repz
cmp
xorl
adc
adc
cmp
clc
repz
add
sbb
xor
cmp
repz
add
cmp
xor
adc
xor
cmp
clc
xor
sbb
adcl
cmp
repz
xor
sbb
adc
xor
xchg
cmpl
clc
xor
xor
orl
adc
cmp
cmpl
xor
xor
adc
xor
cmp
xor
xor
xor
clc
cmp
add
xor
adc
xor
xor
xor
add
cmp
sbb
xor
cmp
add
xor
cltd
adc
adc
mov
decl
xor
xor
xor
xor
mov
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
repz
xor
xor
add
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
add
xor
and
xor
xor
cmp
xor
add
xor
and
xor
xor
xorl
cmp
xor
xor
add
sub
and
xor
cmp
cmp
xor
add
and
xor
cmp
orl
add
cmp
xor
and
xor
cmp
xor
repz
xor
add
xor
inc
xor
xor
xor
add
xor
xor
cmp
and
xor
xor
xor
repz
xor
add
xor
xor
mov
xor
xor
xor
xor
xor
cmp
and
xor
xor
xor
repz
add
xor
xor
xor
mov
xor
xor
xor
xor
xor
cmp
inc
xor
xor
xor
cmp
popl
add
xor
xor
xor
mov
xor
xor
popl
xor
xor
xor
xor
xor
xor
xor
cmp
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
mov
add
xor
and
and
cmp
mov
xor
add
and
and
and
inc
xor
clc
cmpl
pushl
xor
add
and
sub
cmp
xor
mov
add
and
mov
inc
cmp
aas
xorl
xor
and
xor
cmp
inc
cmp
cmp
xor
cmp
popl
add
and
and
xor
inc
inc
cmp
decl
addl
cmp
xor
xor
mov
xor
add
xor
xor
xor
xor
xor
xor
xor
xor
incl
add
xor
xor
xor
xor
pushl
xor
mov
inc
inc
xor
cmp
and
mov
xor
add
cmp
inc
xor
xor
xor
xor
xor
inc
and
cmpl
clc
xorl
add
xor
and
and
xor
cmp
add
cmp
and
and
stos
and
cmp
xor
xor
mov
add
xor
stos
and
and
mov
decl
xor
xor
xor
xor
mov
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
repz
xor
xor
add
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
add
xor
and
xor
xor
cmp
xor
add
xor
and
xor
xor
xorl
cmp
xor
xor
add
sub
and
xor
cmp
cmp
xor
add
and
xor
cmp
orl
add
cmp
xor
and
xor
cmp
xor
repz
xor
add
xor
inc
xor
xor
xor
add
xor
xor
cmp
and
xor
xor
xor
repz
xor
add
xor
xor
mov
xor
xor
xor
xor
xor
cmp
and
xor
xor
xor
repz
add
xor
xor
xor
mov
xor
xor
xor
xor
xor
cmp
inc
xor
xor
xor
cmp
popl
add
xor
xor
xor
mov
xor
xor
popl
xor
xor
xor
xor
xor
xor
xor
cmp
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
adc
add
adc
add
add
add
add
add
addb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
add
add
add
xor
ud0
push
xor
ud0
incl
add
add
push
js
add
ud0
pop
mov
lock
decl
mov
decl
call
incl
out
xchg
xor
push
js
add
ud0
incl
add
xor
push
xor
ud0
incl
add
xor
decl
add
xor
incl
xor
xor
add
add
xor
xor
add
add
add
add
add
add
sbb
add
add
add
add
add
mov
mov
mov
mov
test
test
mov
mov
test
movb
add
add
incl
test
mov
mov
test
mov
movb
add
incl
test
test
incl
incl
incl
incl
add
incl
mov
test
test
test
test
test
add
test
incl
mov
mov
test
add
add
incl
mov
mov
test
add
add
incl
mov
mov
test
add
add
incl
add
add
incl
add
add
test
add
mov
mov
mov
test
test
add
add
incl
incl
incl
incl
test
test
add
incl
add
add
incl
add
add
test
add
mov
test
test
add
test
test
add
test
test
add
test
add
add
incl
add
add
incl
add
add
test
add
mov
test
test
movb
add
inc
mov
test
add
test
test
add
add
add
add
incl
add
add
incl
add
add
test
add
test
add
test
add
mov
test
test
add
add
add
test
add
add
incl
add
add
incl
add
add
add
add
test
add
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
add
add
add
test
incl
add
add
add
test
add
add
mov
mov
incl
test
add
add
add
incl
add
mov
add
add
add
add
test
test
test
test
test
movb
test
test
test
test
test
mov
mov
incl
add
test
test
mov
test
add
test
mov
mov
test
incl
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
movb
test
movb
mov
mov
add
test
test
test
add
mov
mov
inc
mov
test
add
test
add
test
mov
test
add
inc
mov
add
add
add
test
test
test
mov
test
test
mov
add
add
add
inc
mov
add
test
add
add
incl
add
add
incl
add
add
incl
add
add
test
mov
test
add
test
test
test
test
add
incl
add
add
test
incl
mov
test
add
test
add
add
add
test
add
add
incl
mov
test
add
test
test
add
incl
incl
mov
test
add
test
test
add
incl
test
add
test
add
mov
test
add
test
test
add
incl
add
incl
add
add
test
mov
test
add
test
add
add
add
incl
add
mov
test
add
test
test
test
mov
test
add
test
test
test
test
test
test
mov
test
add
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
incl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
add
test
test
test
test
test
test
add
add
jg
aas
sarb
pop
rcrb
xadd
loopne
rolb
add
add
inc
add
inc
add
xadd
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
pavgw
add
repz
ud0
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
add
inc
add
push
add
add
add
add
add
cmp
dec
add
add
add
add
add
push
add
add
popa
add
jae
and
push
add
jb
imul
add
add
add
add
add
add
add
add
add
incl
add
add
add
outsl
add
outsb
add
arpl
je
imul
and
outsb
add
je
and
popa
add
add
ja
add
add
jns
and
jb
jne
insb
add
jae
add
add
dec
add
je
ja
outsl
add
imul
add
outsb
add
add
arpl
push
add
add
add
add
outsl
add
je
and
jne
outsb
add
add
arpl
push
add
add
add
add
outsl
add
outsb
add
arpl
je
imul
and
jb
add
jne
jae
add
add
push
add
add
add
js
jo
imul
add
add
add
outsl
add
insl
add
outsb
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
add
add
add
jae
jae
and
je
jns
jo
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
add
popa
add
outsb
add
je
and
arpl
push
add
add
add
add
and
jae
imul
and
outsl
add
and
popa
add
add
push
add
inc
add
add
insl
add
add
push
add
push
add
inc
add
add
jb
jb
outsl
add
and
and
and
add
push
add
inc
add
add
insl
add
add
and
inc
add
insb
add
adc
add
outsb
add
arpl
je
imul
and
je
imul
add
add
jne
je
add
add
outsl
add
outsb
add
arpl
je
imul
and
jb
add
jne
jae
add
add
add
add
and
insl
add
outsb
add
and
insb
add
jbe
add
add
add
data16
add
jns
insl
add
outsl
add
add
and
insb
add
outsb
add
jae
add
add
imul
and
outsb
add
insl
add
and
je
outsl
add
and
insb
add
outsb
add
add
add
je
and
imul
add
ja
outsb
add
add
add
outsl
add
add
outsl
add
je
add
add
add
add
outsl
add
je
add
add
add
add
je
outsl
add
jns
and
outsb
add
je
and
add
jo
je
jns
str
outsl
add
je
and
outsb
add
je
and
data16
jne
outsb
add
add
add
add
jne
add
je
and
jb
add
add
je
add
add
jb
and
data16
imul
add
add
add
jne
add
je
and
jb
add
add
je
add
add
add
popa
add
jae
add
add
dec
add
dec
add
and
jae
add
jbe
add
and
arpl
popa
add
outsb
add
je
and
arpl
outsl
add
outsb
add
arpl
je
add
push
add
jno
jne
add
je
and
jb
add
add
je
add
add
add
popa
add
jae
add
add
add
and
arpl
insb
add
add
je
and
jo
jb
outsl
add
jb
popa
add
and
popa
add
add
add
add
outsb
add
add
add
add
outsl
add
je
and
add
data16
add
add
je
and
jne
jae
add
sub
add
add
push
add
imul
add
ja
outsb
add
add
outsl
add
imul
add
add
jb
jb
outsl
add
add
add
imul
add
add
add
jbe
add
and
add
add
add
outsl
add
add
add
jo
outsl
add
add
add
dec
add
jbe
popa
add
add
add
outsl
add
imul
add
add
jne
je
push
add
add
popa
add
add
outsb
add
add
add
add
add
add
add
add
outsb
add
add
popa
add
add
outsb
add
add
jb
jb
outsl
add
and
je
outsl
add
add
outsl
add
imul
add
add
add
jbe
add
add
add
add
popa
add
add
dec
add
dec
add
and
jae
add
jbe
add
and
data16
imul
jb
add
add
add
add
outsl
add
imul
add
add
add
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
add
jo
add
popa
add
add
outsb
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
outsb
add
add
outsl
add
imul
add
add
add
jb
outsl
add
add
outsl
add
add
popa
add
imul
and
outsb
add
je
and
jae
jne
jo
jo
outsl
add
je
add
add
add
add
add
jae
jae
and
data16
insl
add
insb
add
and
outsb
add
je
and
jae
jne
jo
jo
outsl
add
je
add
add
jns
and
jo
jb
outsl
add
add
outsl
add
add
popa
add
imul
add
add
add
add
jae
jae
and
popa
add
add
popa
add
add
add
outsb
add
add
jae
add
add
add
popa
add
outsb
add
je
and
popa
add
jae
imul
and
jb
add
jne
add
je
add
add
add
add
jae
jae
add
add
add
add
jb
imul
add
jae
and
add
ja
outsb
add
add
add
add
add
jb
imul
add
jae
and
jne
outsb
add
add
arpl
push
add
add
add
add
add
add
add
jo
jo
add
add
outsl
add
outsb
add
arpl
je
imul
and
outsl
add
and
jb
add
add
add
add
outsl
add
je
ja
popa
add
add
add
popa
add
jae
add
add
outsl
add
outsb
add
arpl
je
imul
and
popa
add
outsl
add
je
add
add
outsl
add
outsb
add
arpl
je
imul
and
jb
add
add
add
jns
and
jo
add
jb
add
add
outsl
add
add
jne
data16
add
and
jae
jo
popa
add
add
add
jbe
popa
add
insb
add
bound
insb
add
add
push
add
arpl
imul
add
add
jae
and
popa
add
add
popa
add
add
add
outsl
add
outsb
add
arpl
je
add
add
add
outsl
add
imul
add
add
jae
and
outsb
add
je
and
arpl
outsl
add
outsb
add
arpl
je
add
add
add
popa
add
outsb
add
je
and
jae
add
add
add
jb
and
jb
add
add
jbe
add
add
data16
add
and
jae
outsl
add
imul
add
add
jae
and
arpl
insb
add
jae
add
add
add
add
and
insl
add
outsb
add
and
jb
add
add
add
arpl
add
sub
and
arpl
popa
add
outsb
add
je
and
jae
jo
insb
add
arpl
add
add
add
add
imul
add
add
jb
jb
outsl
add
and
and
and
and
add
add
add
outsb
add
add
jb
jne
jo
je
add
add
jns
jae
je
add
and
arpl
popa
add
add
add
add
popa
add
add
imul
and
outsb
add
insl
add
add
add
add
arpl
arpl
add
jae
and
add
outsb
add
add
add
inc
add
add
add
add
add
jae
jae
add
add
outsb
add
popa
add
add
add
jb
add
insl
add
outsb
add
add
push
add
outsl
add
add
popa
add
jns
and
outsl
add
add
and
data16
insb
add
jae
add
add
jo
add
popa
add
add
outsb
add
add
outsl
add
insb
add
add
insb
add
arpl
imul
add
add
add
jo
add
popa
add
add
outsb
add
add
outsl
add
and
imul
jo
jb
outsl
add
jb
add
jae
add
add
jo
add
popa
add
add
outsb
add
add
insb
add
add
add
and
imul
jo
jb
outsl
add
jb
add
jae
add
add
outsl
add
imul
add
add
jo
add
popa
add
add
outsb
add
add
outsb
add
add
outsl
add
sub
add
imul
add
add
add
je
imul
je
imul
and
popa
add
add
add
jae
and
jb
add
jne
imul
add
add
add
add
jae
popa
add
add
add
add
and
insb
add
outsb
add
add
add
jb
outsl
add
add
outsl
add
add
jb
outsl
add
add
add
add
add
add
outsl
add
and
jae
outsl
add
imul
add
add
inc
add
add
add
jb
outsl
add
add
outsl
add
add
jo
je
imul
add
add
jb
outsl
add
add
outsl
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
add
add
outsl
add
outsb
add
arpl
je
add
add
outsl
add
add
add
add
add
add
add
add
add
add
inc
add
outsb
add
add
outsl
add
add
imul
and
imul
jo
outsl
add
je
and
jb
popa
add
add
and
sub
and
add
add
add
dec
add
jbe
popa
add
add
add
outsl
add
je
and
push
add
outsb
add
add
add
add
add
add
add
push
add
popa
add
add
add
add
jne
je
sbb
dec
add
js
and
insb
add
outsb
add
and
insb
add
outsb
add
je
push
add
arpl
add
add
add
add
add
jb
jb
outsl
add
and
outsl
add
and
arpl
popa
add
add
add
imul
outsl
add
imul
add
add
add
jb
popa
add
jns
and
data16
outsb
add
je
imul
and
and
add
jb
jb
outsl
add
and
outsl
add
and
insb
add
popa
add
add
add
add
imul
outsl
add
imul
add
add
add
jb
popa
add
jns
and
sub
and
add
add
add
outsl
add
add
outsb
add
and
push
add
add
insl
add
and
and
add
add
outsl
add
outsb
add
arpl
je
imul
and
je
outsl
add
add
add
add
outsl
add
outsb
add
arpl
je
add
add
add
add
arpl
outsl
add
outsb
add
arpl
je
imul
add
add
arpl
outsl
add
outsb
add
arpl
je
add
add
add
add
outsl
add
outsb
add
arpl
je
and
je
imul
add
add
jne
je
add
add
add
jae
and
outsb
add
je
and
popa
add
add
popa
add
add
add
add
jbe
imul
add
add
add
add
popa
add
add
add
add
and
jae
imul
popa
add
add
add
add
outsb
add
popa
add
add
add
dec
add
inc
add
add
imul
popa
add
add
add
add
popa
add
add
add
imul
outsl
add
jae
and
dec
add
popa
add
add
add
outsb
add
add
and
add
arpl
add
add
and
add
je
popa
add
add
add
je
imul
popa
add
jns
and
arpl
outsl
add
outsb
add
add
outsb
add
jne
jo
jo
outsl
add
je
add
add
outsl
add
sub
add
add
add
and
insb
add
outsb
add
jne
popa
add
add
add
inc
add
add
outsb
add
add
add
outsl
add
jb
arpl
add
add
outsb
add
popa
add
add
add
je
jb
add
insl
add
add
jo
add
popa
add
add
outsb
add
add
outsl
add
adc
inc
add
add
popa
add
add
add
outsl
add
outsb
add
arpl
je
add
add
add
popa
add
outsb
add
je
and
popa
add
add
arpl
popa
add
add
add
outsl
add
imul
add
add
add
outsb
add
arpl
je
imul
and
inc
add
add
add
add
jb
popa
add
add
jne
insb
add
add
add
add
outsl
add
insb
add
add
outsl
add
add
imul
and
jae
outsl
add
imul
add
add
add
add
add
jae
jae
and
popa
add
add
add
outsl
add
je
and
popa
add
add
add
insb
add
add
add
and
imul
jne
jae
add
add
add
outsl
add
add
outsb
add
jne
add
and
add
je
popa
add
add
outsb
add
add
jne
data16
add
add
add
jae
outsl
add
imul
add
outsb
add
je
imul
imul
je
imul
and
inc
add
jb
outsl
add
add
add
add
add
imul
and
inc
add
arpl
add
add
add
add
add
imul
and
and
and
add
add
outsl
add
add
outsl
add
outsb
add
add
outsb
add
add
add
outsb
add
and
push
add
add
outsb
add
add
jb
add
jp
add
add
popa
add
and
add
imul
and
jo
add
and
popa
add
jo
insb
add
arpl
popa
add
add
outsb
add
add
add
add
outsb
add
arpl
je
imul
and
inc
add
jb
add
jb
adc
dec
add
popa
add
je
imul
and
inc
add
jo
je
imul
adc
add
arpl
je
imul
and
inc
add
jo
je
imul
and
push
add
js
je
str
outsb
add
outsl
add
add
popa
add
imul
add
outsl
add
outsb
add
add
outsb
add
outsl
add
add
add
je
str
add
jne
and
inc
add
arpl
imul
add
outsl
add
outsb
add
add
add
jne
and
push
add
js
je
add
dec
add
outsb
add
or
push
add
jb
outsl
add
add
add
popa
add
push
add
add
add
add
imul
add
push
add
ja
or
xor
inc
add
add
add
push
add
imul
outsl
add
and
inc
add
arpl
imul
add
outsl
add
outsb
add
add
imul
outsl
add
and
inc
add
popa
add
add
add
imul
outsl
add
and
push
add
js
je
sbb
dec
add
and
push
add
and
imul
add
ja
outsl
add
add
add
jo
add
imul
add
add
add
outsl
add
add
add
add
add
jae
outsb
add
add
add
jne
jo
jo
outsl
add
je
and
jae
je
jb
add
insl
add
outsb
add
or
push
add
jns
and
inc
add
add
add
add
popa
add
or
dec
add
add
jne
insl
add
add
jb
popa
add
or
add
add
add
add
outsl
add
add
jb
push
add
arpl
je
imul
and
inc
add
jo
je
imul
adc
add
insb
add
arpl
popa
add
add
outsb
add
add
outsl
add
imul
add
popa
add
add
add
popa
add
imul
add
outsl
add
outsb
add
add
jne
je
je
outsl
add
and
inc
add
arpl
add
add
jne
je
je
outsl
add
and
dec
add
add
insb
add
add
je
or
add
add
outsb
add
add
push
add
ja
or
inc
add
je
je
outsl
add
and
push
add
js
je
or
inc
add
jo
je
imul
and
push
add
js
je
pop
add
add
popa
add
insb
add
add
jb
popa
add
and
push
add
js
je
adc
dec
add
add
insb
add
add
je
and
inc
add
arpl
imul
add
outsl
add
outsb
add
add
imul
insb
add
add
je
and
push
add
js
je
add
push
add
popa
add
outsl
add
outsb
add
add
add
add
add
jbe
add
dec
add
jbe
jns
push
add
jne
jb
jo
insb
add
add
push
add
popa
add
add
jb
popa
add
push
add
imul
add
add
push
add
add
dec
add
insl
add
push
add
add
add
ja
add
inc
add
add
pop
add
jne
arpl
push
add
add
inc
add
jne
popa
add
add
je
add
add
outsl
add
add
and
inc
add
add
outsb
add
add
outsb
add
add
jb
outsl
add
popa
add
add
add
push
add
add
outsb
add
add
add
jbe
imul
and
data16
imul
add
add
outsb
add
add
jne
jae
je
outsl
add
and
insl
add
jae
jae
popa
add
add
add
add
add
add
add
add
jbe
imul
and
imul
je
popa
add
add
add
add
jne
arpl
arpl
add
jae
data16
insb
add
add
add
add
jbe
imul
and
and
and
add
add
popa
add
insb
add
add
add
add
add
outsb
add
je
popa
add
add
add
imul
and
add
jb
outsl
add
cmp
and
and
and
add
add
add
jbe
imul
and
jne
outsb
add
outsb
add
je
popa
add
add
add
add
jne
arpl
arpl
add
jae
data16
insb
add
add
add
add
jbe
imul
and
and
and
add
add
popa
add
insb
add
add
add
add
add
outsb
add
outsb
add
je
popa
add
add
add
imul
and
add
jb
outsl
add
cmp
and
and
and
add
add
add
imul
add
add
outsl
add
je
jb
outsl
add
add
jne
jae
je
and
push
add
and
popa
add
add
popa
add
add
add
outsl
add
and
jb
add
outsl
add
imul
and
arpl
outsl
add
je
jb
outsl
add
add
jb
outsl
add
and
add
arpl
imul
add
add
add
add
add
add
arpl
imul
add
outsl
add
add
add
outsl
add
add
outsl
add
outsb
add
add
add
add
arpl
imul
add
outsl
add
add
add
popa
add
and
outsb
add
and
arpl
outsl
add
je
jb
outsl
add
add
outsb
add
bound
insb
add
and
je
outsl
add
add
imul
and
popa
add
add
add
insb
add
and
outsl
add
and
inc
add
outsb
add
add
je
jae
adc
dec
add
and
push
add
and
data16
jne
outsb
add
add
outsl
add
and
and
add
outsl
add
add
outsl
add
je
add
je
sub
add
jae
imul
jbe
add
add
add
add
add
outsb
add
je
popa
add
add
add
dec
add
and
je
outsl
add
imul
bound
popa
add
add
add
add
add
add
jns
jae
je
add
and
imul
je
popa
add
add
add
add
arpl
imul
add
add
inc
add
ja
outsb
add
add
outsb
add
add
inc
add
insb
add
add
push
add
add
add
insb
add
add
inc
add
add
add
add
outsb
add
popa
add
add
add
insb
add
jo
bound
outsl
add
jb
add
add
outsl
add
insl
add
je
and
inc
add
add
bound
outsl
add
jb
add
add
add
jae
and
outsb
add
je
and
jae
jne
jo
jo
outsl
add
je
and
dec
add
outsl
add
jae
adc
add
outsb
add
je
and
outsl
add
add
and
arpl
insb
add
jo
bound
outsl
add
jb
add
add
add
jne
and
daa
add
add
add
jae
and
popa
add
add
popa
add
add
add
add
outsb
add
and
jne
jae
add
add
jns
and
popa
add
outsl
add
add
jb
and
data16
jb
insl
add
add
add
jbe
imul
and
data16
imul
add
add
outsb
add
add
add
add
add
js
add
jne
je
add
add
jb
je
add
jae
je
outsl
add
add
add
jae
add
add
outsl
add
je
imul
add
add
add
add
add
add
outsl
add
add
add
insb
add
add
add
and
je
outsl
add
add
insb
add
add
add
and
je
outsl
add
add
add
insb
add
add
imul
add
add
push
add
bound
add
inc
add
arpl
add
add
add
add
add
arpl
add
push
add
push
add
add
push
add
inc
add
add
inc
add
add
dec
add
insl
add
add
dec
add
data16
add
jo
add
add
push
add
add
add
popa
add
outsb
add
je
and
add
popa
add
and
popa
add
add
outsl
add
insl
add
add
add
add
imul
jae
adc
inc
add
push
add
add
add
add
add
imul
jae
add
add
outsb
add
pop
add
imul
popa
add
jae
pop
add
popa
add
outsb
add
outsb
add
add
add
outsl
add
or
dec
add
data16
jb
insl
add
je
imul
pop
add
outsl
add
data16
jb
insl
add
add
add
add
add
outsl
add
add
dec
add
add
popa
add
arpl
add
add
add
add
add
add
add
bound
outsl
add
je
push
add
add
add
add
add
adc
dec
add
outsb
add
and
imul
add
je
add
add
add
arpl
add
add
jne
bound
sub
add
jne
and
imul
outsb
add
je
and
imul
insl
add
outsb
add
sbb
dec
add
je
and
add
outsl
add
add
and
je
imul
jb
jae
and
popa
add
popa
add
insb
add
bound
insb
add
inc
add
jb
outsl
add
jo
dec
add
add
js
and
arpl
popa
add
outsb
add
je
and
bound
add
add
add
jae
and
je
push
add
add
and
jo
jb
add
imul
jae
and
insl
add
outsb
add
and
imul
insl
add
add
and
inc
add
outsl
add
jo
dec
add
add
js
xor
add
outsb
add
je
and
arpl
jb
add
je
add
add
outsl
add
insl
add
add
add
outsl
add
add
inc
add
and
data16
jb
insl
add
and
popa
add
add
add
jne
jb
jb
add
je
insb
add
and
popa
add
je
imul
sub
inc
add
add
outsl
add
je
jb
outsl
add
add
popa
add
outsb
add
je
and
push
add
and
imul
add
add
add
jae
and
imul
and
jo
popa
add
add
je
add
dec
add
push
add
popa
add
arpl
add
add
add
add
add
add
outsl
add
add
insb
add
push
add
add
insb
add
jae
add
add
add
add
outsl
add
add
add
add
add
add
add
add
jb
je
add
add
insb
add
add
add
push
add
jae
jne
jo
jo
outsl
add
je
add
add
insb
add
jo
bound
outsl
add
jb
add
add
outsl
add
insl
add
je
pop
add
jne
je
and
outsl
add
and
jae
jns
jae
je
add
and
jb
add
outsl
add
jb
arpl
add
sbb
add
jbe
popa
add
and
add
add
and
outsb
add
je
and
popa
add
add
ja
and
add
popa
add
imul
adc
dec
add
jbe
popa
add
add
add
insl
add
add
and
jae
imul
adc
dec
add
jbe
popa
add
add
add
insl
add
add
dec
add
jae
je
pop
add
outsb
add
popa
add
add
add
insl
add
add
dec
add
jae
je
and
dec
add
add
js
sub
inc
add
imul
add
add
add
add
add
add
add
insl
add
add
dec
add
jae
je
and
add
je
popa
add
add
jb
outsl
add
and
jae
je
jb
add
insl
add
add
popa
add
insb
add
add
add
add
add
jb
imul
and
dec
add
popa
add
add
add
je
and
add
je
popa
add
add
add
add
je
jb
add
insl
add
inc
add
jb
outsl
add
and
arpl
jb
add
je
imul
and
ja
imul
outsl
add
and
add
jbe
imul
and
arpl
outsl
add
je
add
je
sbb
inc
add
jb
outsl
add
and
arpl
jb
add
je
imul
and
ja
imul
outsl
add
and
arpl
insb
add
jae
jae
sub
inc
add
outsb
add
outsl
add
add
outsl
add
jne
jae
and
popa
add
add
add
popa
add
insb
add
add
add
jb
and
imul
imul
bound
insb
add
and
ja
imul
outsl
add
and
inc
add
outsb
add
add
insb
add
add
add
add
add
popa
add
and
outsb
add
and
jo
popa
add
add
je
and
ja
imul
outsl
add
sbb
add
outsb
add
je
and
push
add
and
popa
add
and
dec
add
add
add
push
add
add
outsl
add
insl
add
add
popa
add
outsb
add
je
and
arpl
push
add
add
add
imul
bound
insb
add
and
imul
dec
add
push
add
outsl
add
and
outsl
add
and
dec
add
dec
add
add
and
inc
add
outsb
add
outsl
add
add
popa
add
add
add
and
jbe
imul
bound
insb
add
and
ja
imul
outsl
add
and
insl
add
add
insb
add
add
add
jne
and
imul
add
and
outsl
add
je
and
outsl
add
and
jb
popa
add
add
add
adc
push
add
add
popa
add
and
ja
jb
imul
and
add
jb
outsl
add
sbb
push
add
jb
add
add
add
jb
add
je
imul
and
add
jb
outsl
add
cmp
and
and
add
add
add
add
add
jb
jb
outsl
add
cmp
and
and
add
add
add
add
imul
outsl
add
jae
and
jae
outsl
add
imul
add
add
jb
jb
outsl
add
cmp
and
and
add
add
add
and
outsl
add
and
inc
add
dec
add
add
add
add
inc
add
jns
outsb
add
push
add
outsl
add
jae
and
jae
outsl
add
imul
add
add
jb
jb
outsl
add
and
and
add
outsl
add
add
add
add
jae
jae
and
jae
jo
add
imul
add
add
popa
add
daa
add
add
add
je
add
and
outsl
add
and
popa
add
and
outsl
add
add
and
jae
outsl
add
imul
add
add
popa
add
daa
add
add
jb
add
je
add
add
add
and
jae
outsl
add
imul
add
add
outsl
add
imul
add
add
insb
add
add
add
and
outsl
add
add
sub
inc
add
outsb
add
add
add
push
add
add
add
popa
add
add
and
ja
push
add
and
jae
outsl
add
imul
add
add
jae
and
popa
add
je
imul
sbb
inc
add
je
insl
add
jo
and
imul
add
and
imul
outsb
add
je
and
jbe
popa
add
add
add
arpl
outsl
add
and
imul
add
and
imul
outsb
add
je
and
jbe
popa
add
add
add
add
add
imul
and
imul
outsb
add
je
and
jbe
popa
add
add
add
outsb
add
popa
add
add
add
imul
insb
add
add
outsl
add
insl
add
je
sbb
push
add
popa
add
and
insb
add
outsb
add
and
imul
add
and
outsl
add
je
and
outsl
add
and
jb
popa
add
add
and
inc
add
outsb
add
outsl
add
add
push
add
add
add
add
and
jae
imul
and
outsl
add
and
popa
add
and
imul
outsb
add
add
add
outsb
add
popa
add
add
add
add
add
add
add
add
add
outsl
add
and
daa
add
add
add
add
je
and
arpl
popa
add
popa
add
imul
and
outsl
add
je
and
outsl
add
and
bound
outsl
add
outsb
add
add
add
add
add
add
je
and
arpl
outsl
add
outsb
add
add
jne
je
and
outsl
add
and
bound
outsl
add
outsb
add
add
add
add
add
add
je
and
imul
add
and
outsl
add
je
and
outsl
add
and
bound
outsl
add
outsb
add
add
add
add
add
add
jne
je
and
outsl
add
and
insl
add
insl
add
jb
jns
and
ja
push
add
and
add
jo
popa
add
add
outsb
add
and
insl
add
insl
add
jb
jns
and
jae
je
jb
add
insl
add
add
jb
jb
outsl
add
and
jb
add
add
outsb
add
and
and
add
and
add
add
add
je
jb
add
insl
add
add
add
add
add
jb
jb
outsl
add
adc
add
jo
add
je
jns
and
imul
jb
add
add
add
add
add
popa
add
insb
add
add
add
add
add
jb
add
je
add
add
add
and
and
add
popa
add
insb
add
add
add
add
add
add
add
add
add
add
outsl
add
and
daa
add
add
add
popa
add
insb
add
add
add
add
add
add
add
add
add
add
outsl
add
and
daa
add
add
add
outsl
add
jb
arpl
add
add
add
outsl
add
add
outsl
add
outsb
add
add
add
add
imul
add
outsl
add
add
insl
add
insb
add
insl
add
outsb
add
add
add
jo
add
popa
add
add
outsb
add
add
outsl
add
add
insb
add
add
add
add
outsb
add
add
outsl
add
je
add
add
add
je
and
and
add
outsl
add
add
outsb
add
add
and
arpl
insb
add
jae
jae
and
jb
add
imul
jb
popa
add
add
outsb
add
add
jb
outsl
add
jo
sbb
push
add
outsl
add
add
je
jns
and
and
add
add
jae
and
outsb
add
je
and
add
imul
sbb
inc
add
outsb
add
outsl
add
add
jae
jae
imul
and
popa
add
add
add
add
add
and
and
add
imul
and
imul
add
and
outsl
add
je
and
outsl
add
and
jb
popa
add
add
sub
inc
add
outsb
add
add
add
jb
imul
and
je
outsl
add
add
and
jb
add
add
add
add
add
add
outsl
add
jb
arpl
add
add
je
jb
add
insl
add
inc
add
add
imul
add
outsb
add
push
add
imul
and
arpl
popa
add
add
add
add
jb
outsl
add
and
je
push
add
add
add
and
add
add
push
add
and
imul
dec
add
push
add
add
add
and
insl
add
imul
je
push
add
add
add
insb
add
jae
jae
and
and
add
outsl
add
add
outsl
add
outsb
add
add
and
arpl
insb
add
jae
jae
and
outsb
add
insl
add
add
add
add
insb
add
add
add
and
add
imul
jae
and
add
je
and
add
add
and
outsb
add
je
and
popa
add
add
ja
and
add
jo
insb
add
arpl
popa
add
add
and
sub
and
xor
and
add
add
and
arpl
outsl
add
jo
outsl
add
add
je
and
outsb
add
insl
add
add
add
add
insb
add
add
add
and
add
imul
jae
and
add
imul
and
insb
add
jae
je
and
add
add
and
outsb
add
je
and
popa
add
add
ja
and
add
jo
insb
add
arpl
popa
add
add
sbb
inc
add
outsb
add
outsl
add
add
jb
add
je
add
add
imul
and
and
and
add
add
add
add
popa
add
outsb
add
je
and
outsl
add
add
and
data16
insb
add
and
and
and
add
add
add
add
outsb
add
popa
add
add
add
je
jb
add
insl
add
add
outsl
add
insl
add
je
and
daa
add
add
add
add
add
jae
and
outsb
add
je
and
popa
add
add
popa
add
add
add
outsl
add
jo
outsl
add
add
je
and
outsb
add
insl
add
push
add
outsb
add
popa
add
add
add
jb
outsl
add
add
je
jns
and
jbe
popa
add
add
adc
add
popa
add
add
add
jb
outsl
add
add
je
jns
and
jo
popa
add
add
add
outsb
add
popa
add
add
add
jb
outsl
add
add
je
jns
and
jbe
popa
add
add
add
push
add
outsb
add
add
outsl
add
add
push
add
add
add
add
add
add
add
inc
add
imul
popa
add
add
jne
outsb
add
add
push
add
outsl
add
add
jns
pop
add
add
jae
add
jns
or
push
add
add
add
add
jns
or
push
add
jne
jb
jae
add
jns
push
add
jb
imul
jns
or
push
add
je
jne
jb
add
jns
sbb
push
add
popa
add
insb
add
and
je
outsl
add
add
jb
add
je
add
add
add
add
je
outsl
add
jns
sbb
inc
add
arpl
add
je
outsl
add
and
data16
jb
and
daa
add
add
add
outsl
add
add
outsl
add
outsb
add
add
add
add
add
add
dec
add
je
add
dec
add
jbe
add
inc
add
arpl
pop
add
popa
add
jne
popa
add
jns
or
inc
add
bound
jb
jne
popa
add
jns
add
add
arpl
push
add
jb
imul
dec
add
jns
add
dec
add
outsb
add
add
dec
add
insb
add
push
add
jne
add
jae
je
or
push
add
jo
je
add
bound
add
pop
add
arpl
je
outsl
add
add
or
dec
add
jbe
add
bound
add
or
inc
add
arpl
add
bound
add
adc
inc
add
jae
add
je
imul
and
data16
imul
add
add
outsb
add
add
data16
arpl
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
js
arpl
add
je
imul
and
imul
jae
popa
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
bound
jae
je
jb
popa
add
je
and
inc
add
jb
outsl
add
aas
add
arpl
arpl
add
jae
and
jbe
imul
popa
add
add
outsb
add
add
je
and
popa
add
add
add
jae
and
and
add
outsb
add
add
outsl
add
add
add
add
add
add
add
add
add
data16
add
add
add
jae
jae
and
and
add
jns
jae
je
add
and
inc
add
jb
outsl
add
add
add
add
outsl
add
add
add
add
add
add
pop
add
and
arpl
popa
add
add
add
add
add
outsb
add
add
push
add
add
jne
outsb
add
je
imul
and
data16
imul
add
add
popa
add
add
inc
add
bound
add
dec
add
jb
add
inc
add
jb
add
dec
add
jns
add
dec
add
outsb
add
add
jne
insb
add
add
jne
add
add
push
add
popa
add
add
jb
imul
and
inc
add
jb
outsl
add
and
arpl
jb
add
je
imul
and
jbe
popa
add
imul
je
and
outsl
add
and
jae
popa
add
add
add
jb
jb
popa
add
sub
push
add
jb
imul
je
and
outsl
add
and
jae
popa
add
add
add
jb
jb
popa
add
and
imul
add
and
outsl
add
je
and
outsl
add
and
bound
outsl
add
outsb
add
add
add
popa
add
imul
je
and
outsl
add
and
jae
popa
add
add
add
jb
jb
popa
add
and
imul
insb
add
arpl
imul
add
add
outsb
add
popa
add
add
add
popa
add
imul
je
and
je
jns
jo
add
add
outsl
add
jbe
add
jae
imul
sbb
dec
add
jbe
popa
add
add
add
popa
add
imul
je
and
outsl
add
add
popa
add
add
outsb
add
add
popa
add
add
add
popa
add
imul
je
and
outsl
add
add
popa
add
add
outsb
add
add
add
add
add
add
sub
or
and
add
outsl
add
insb
add
add
outsl
add
add
outsl
add
jbe
add
je
and
jbe
popa
add
imul
je
and
outsl
add
and
je
jns
jo
add
add
add
add
add
outsb
add
add
add
add
add
add
add
add
add
jb
data16
add
and
ja
push
add
and
arpl
outsl
add
jbe
add
je
imul
and
jbe
popa
add
imul
je
and
outsl
add
and
je
jns
jo
add
add
add
add
add
outsb
add
add
add
add
add
add
add
add
add
popa
add
imul
je
and
outsl
add
add
data16
add
adc
dec
add
jbe
popa
add
add
add
jb
add
insl
add
outsb
add
add
outsb
add
popa
add
add
add
popa
add
imul
je
and
je
jns
jo
add
add
jo
add
popa
add
add
outsb
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
outsb
add
js
jo
add
je
add
add
popa
add
imul
je
and
add
jb
outsl
add
adc
add
add
outsb
add
insb
add
add
js
arpl
add
je
imul
and
and
add
add
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
add
imul
outsl
add
and
bound
jns
and
jp
add
outsl
add
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
jbe
add
data16
add
sbb
inc
add
add
je
imul
and
jo
outsl
add
outsb
add
add
outsb
add
add
data16
add
sbb
dec
add
jbe
popa
add
add
add
outsl
add
outsb
add
add
and
outsl
add
add
popa
add
add
outsb
add
add
outsb
add
popa
add
add
add
insb
add
jae
jae
and
je
jns
jo
add
popa
add
je
xor
inc
add
arpl
add
jae
and
jbe
imul
popa
add
add
outsb
add
add
je
and
popa
add
add
add
jae
and
and
add
add
add
data16
add
add
add
jae
jae
and
and
add
arpl
arpl
add
jae
and
jbe
imul
popa
add
add
outsb
add
add
je
popa
add
imul
add
jbe
add
data16
add
or
add
je
jb
outsl
add
add
and
push
add
add
jb
imul
insb
add
add
add
add
outsb
add
je
jb
jne
arpl
je
imul
adc
dec
add
add
popa
add
add
outsb
add
add
bound
outsl
add
je
add
add
js
arpl
add
je
imul
and
and
add
outsb
add
add
outsl
add
add
add
add
add
je
and
and
add
add
and
add
add
add
jo
jo
insb
add
arpl
popa
add
add
outsb
add
add
jb
jb
outsl
add
xor
inc
add
jb
insl
add
je
and
daa
add
add
add
outsb
add
popa
add
add
add
jb
and
imul
outsl
add
jo
popa
add
add
insb
add
and
ja
imul
and
popa
add
add
insl
add
outsb
add
add
outsl
add
add
jb
add
insl
add
outsb
add
add
outsl
add
and
data16
jb
insl
add
je
and
daa
add
add
add
popa
add
imul
je
and
insl
add
je
push
add
add
popa
add
add
and
outsb
add
je
and
jae
jne
jo
jo
outsl
add
je
add
add
add
add
add
add
add
jae
and
outsb
add
je
and
popa
add
add
popa
add
add
add
outsb
add
add
add
and
jbe
popa
add
add
pop
add
outsb
add
popa
add
add
add
jb
add
insl
add
outsb
add
add
add
add
add
add
add
outsb
add
outsl
add
add
add
outsb
add
popa
add
add
add
jb
add
insl
add
outsb
add
add
add
add
add
add
add
outsb
add
outsl
add
add
add
add
data16
add
add
outsl
add
jns
or
dec
add
add
and
add
jb
outsl
add
and
and
add
imul
and
outsb
add
je
and
data16
jne
outsb
add
add
outsb
add
popa
add
add
add
imul
outsb
add
insl
add
adc
push
add
outsl
add
add
popa
add
jns
and
outsl
add
add
and
data16
insb
add
jae
adc
inc
add
insb
add
and
popa
add
arpl
add
jae
and
add
outsb
add
add
add
add
add
add
add
outsl
add
add
add
outsb
add
add
data16
add
imul
or
inc
add
jae
imul
add
jne
insb
add
add
outsb
add
popa
add
add
add
jne
insl
add
jb
imul
imul
jne
je
adc
inc
add
jbe
imul
outsl
add
and
bound
jns
and
jp
add
outsl
add
add
popa
add
add
and
arpl
push
add
and
add
jb
outsl
add
adc
dec
add
je
add
add
and
outsl
add
add
data16
add
and
dec
add
jbe
popa
add
add
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
jo
add
popa
add
add
outsb
add
add
xor
inc
push
dec
inc
pop
dec
add
xor
gs
test
jo
and
jb
gs
arpl
jae
or
imul
dec
outsb
jne
or
jb
gs
je
insb
gs
or
push
imul
popa
jo
imul
or
insb
imul
addr16
inc
insb
imul
je
add
add
jb
or
inc
je
inc
popa
arpl
inc
outsl
outsb
je
inc
push
je
push
inc
inc
xor
xor
pop
inc
dec
inc
push
push
inc
push
or
outsb
je
inc
outsl
insb
outsl
jb
or
insb
push
imul
js
or
outsb
je
dec
imul
inc
outsl
outsb
je
dec
popa
insl
adc
add
add
inc
outsl
outsb
je
push
je
insb
or
or
jns
jb
jbe
gs
push
dec
insb
fs
jb
popa
je
dec
jb
gs
or
jae
je
outsl
outsb
pop
push
jo
push
arpl
outsb
inc
outsb
je
jb
dec
outsb
inc
jb
popa
je
pop
or
jb
inc
jb
popa
je
or
dec
gs
outsl
ja
pop
or
jb
dec
gs
outsl
ja
or
insb
jae
gs
outsb
arpl
pusha
or
je
imul
push
push
push
popa
outsb
gs
push
push
popa
outsb
gs
xor
gs
add
push
outsl
jo
add
push
imul
push
popa
bound
fs
add
add
dec
fs
inc
push
inc
insb
imul
je
outsl
imul
imul
js
imul
outsl
outsb
pop
or
inc
js
gs
imul
fs
imul
add
dec
outsb
inc
outsl
outsb
outsb
arpl
pop
sbb
je
outsl
imul
imul
outsb
arpl
add
outsl
jb
add
add
gs
sbb
add
push
push
imul
je
dec
outsl
imul
pop
inc
outsb
popa
bound
or
dec
outsb
je
jb
popa
insb
add
ljmp
imul
jne
outsl
dec
outsl
imul
push
imul
data16
cmp
add
push
push
jns
push
jb
jns
push
jns
push
jb
jns
arpl
push
inc
arpl
or
inc
gs
outsb
imul
outsl
outsb
cs
popa
je
or
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rolb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
or
add
js
mov
add
jo
ja
pop
jo
add
clc
mov
add
mov
pop
ja
jo
add
incl
ja
ja
add
js
mov
add
js
mov
jg
clc
xchg
add
jg
mov
add
ja
pop
ja
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
rolb
add
add
add
add
add
add
add
dec
imul
insl
outsl
je
inc
outsl
outsb
je
outsl
insb
or
jo
jo
outsl
fs
insl
push
imul
arpl
or
jo
jo
insb
imul
push
imul
jo
sbb
add
dec
fs
inc
push
inc
insb
imul
push
inc
push
inc
insb
imul
popa
js
imul
outsl
outsb
pop
or
inc
js
gs
imul
fs
imul
add
outsl
jb
add
add
push
push
push
imul
jb
or
je
jb
popa
insb
add
push
imul
insl
jb
push
imul
data16
push
add
add
add
inc
ss
xor
inc
cmp
xor
xor
aaa
xor
cmp
xor
inc
inc
inc
inc
inc
xor
cmp
cmp
inc
xor
cmp
xor
inc
aaa
xor
inc
cmp
xor
inc
inc
inc
inc
cmp
inc
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
ss
inc
inc
xor
cmp
xor
cmp
aaa
inc
aaa
inc
inc
inc
xor
xor
inc
inc
xor
inc
xor
inc
aaa
ss
inc
xor
inc
xor
cmp
inc
inc
inc
xor
inc
cmp
inc
cmp
xor
xor
aaa
inc
xor
cmp
cmp
inc
aaa
inc
xor
inc
xor
cmp
xor
xor
inc
inc
xor
xor
xor
xor
cmp
xor
xor
inc
cmp
xor
cmp
inc
inc
xor
cmp
inc
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
inc
xor
xor
xor
inc
inc
inc
cmp
xor
inc
inc
xor
xor
xor
aaa
inc
inc
cmp
xor
xor
inc
cmp
inc
ss
xor
xor
inc
inc
xor
inc
inc
xor
xor
ss
xor
aaa
xor
cmp
xor
xor
inc
inc
inc
inc
cmp
cmp
inc
xor
inc
xor
inc
xor
inc
ss
xor
xor
cmp
xor
inc
xor
xor
xor
xor
xor
xor
inc
inc
cmp
cmp
aaa
xor
xor
cmp
cmp
aaa
cmp
inc
inc
xor
inc
inc
ss
xor
xor
inc
xor
xor
aaa
inc
xor
cmp
inc
cmp
xor
inc
xor
inc
cmp
ss
xor
inc
inc
cmp
inc
inc
cmp
inc
aaa
xor
inc
cmp
inc
xor
cmp
inc
aaa
inc
xor
cmp
inc
cmp
add
int3
add
add
mov
add
add
gs
adc
push
imul
insl
jae
adc
arpl
gs
add
push
jns
je
insl
add
adcl
je
sbb
dec
gs
popa
addr16
or
push
imul
adc
jns
gs
adc
dec
popa
je
add
popf
push
jns
inc
outsl
outsb
jae
add
add
jae
je
insb
jae
adc
je
jb
add
movl
add
push
imul
add
pop
inc
insb
popa
jae
gs
adc
push
push
dec
inc
outsl
outsb
jae
jae
adc
popa
jb
popa
outsb
je
add
and
popa
jb
je
insb
jae
adc
jns
dec
outsb
outsw
add
sub
popa
jo
imul
outsl
insl
insl
inc
je
insb
add
popl
popa
je
inc
add
fists
fs
arpl
add
mov
bound
add
pop
push
je
push
je
insb
jae
sbb
push
push
push
dec
add
es
outsl
outsb
je
outsl
insb
jae
adc
gs
adc
outsl
insl
inc
je
insb
jae
adc
je
jae
adc
je
jae
adc
dec
popa
jo
add
inc
inc
arpl
imul
outsb
jne
add
xchg
outsb
je
jb
add
int
insl
addr16
imul
je
inc
je
insb
jae
adc
outsl
addr16
adc
je
insb
jae
sbb
inc
insb
addr16
sbb
inc
outsl
insl
insl
inc
insb
add
sub
insb
dec
bound
sbb
push
gs
je
add
push
imul
sbb
push
jb
dec
outsl
outsb
add
mov
js
inc
insb
addr16
adc
inc
jne
je
outsb
jae
adc
push
imul
fisttpll
imul
adc
js
push
adc
dec
bound
add
push
imul
add
xchg
insb
push
imul
jae
inc
arpl
add
movsl
dec
jne
je
dec
outsl
outsb
add
dec
insl
insl
add
movsl
push
imul
imul
push
dec
gs
jo
outsb
je
jae
adc
push
gs
outsb
gs
outsb
imul
inc
push
inc
outsl
outsb
outsb
arpl
outsb
add
mov
je
inc
jb
gs
inc
popa
jae
add
or
inc
js
gs
imul
fs
insb
outsl
bound
add
les
push
je
arpl
imul
adc
push
gs
jne
arpl
je
imul
dec
fs
je
arpl
adc
fs
je
arpl
outsl
outsb
jae
jae
adc
dec
fs
imul
add
inc
dec
fs
push
dec
add
push
dec
fs
popa
jae
inc
outsl
insl
jo
outsb
outsb
je
adc
dec
fs
je
gs
insl
add
mov
fs
inc
push
push
je
gs
insl
add
decb
inc
outsl
insl
jo
outsb
outsb
je
adc
fs
outsl
arpl
je
popa
outsb
fs
add
push
dec
fs
outsb
je
jb
gs
add
inc
dec
fs
dec
dec
popa
outsb
fs
gs
adc
inc
push
gs
jns
adc
fs
dec
dec
popa
outsb
fs
gs
outsl
arpl
je
adc
fs
outsl
arpl
add
in
fs
jae
imul
insl
bound
jae
adc
imul
add
out
inc
inc
push
add
pop
jne
popa
push
arpl
inc
add
jne
popa
push
je
insb
jae
adc
insb
popa
arpl
outsl
add
push
jne
popa
push
jns
gs
sbb
push
insb
dec
gs
jo
xor
adc
outsb
popa
dec
push
push
popa
jb
gs
adc
outsb
popa
inc
insb
popa
jae
gs
sbb
dec
dec
push
jns
je
insl
add
xorl
dec
jae
arpl
push
dec
add
icebp
jne
popa
dec
jae
arpl
insb
popa
jae
gs
adc
outsb
popa
push
popa
jbe
add
push
jne
popa
push
dec
inc
inc
add
push
imul
adc
jne
popa
push
outsl
arpl
je
add
in
push
push
jns
gs
add
dec
popa
imul
jbe
push
outsb
fs
outsb
imul
inc
push
inc
insb
imul
push
imul
push
outsb
imul
add
mov
jae
jae
adc
outsl
inc
popa
jo
adc
popa
jo
adc
push
outsb
imul
add
and
arpl
xor
jns
adc
pop
dec
dec
push
inc
push
add
lret
dec
dec
inc
outsl
outsb
jae
add
cs
arpl
inc
outsl
insl
jo
adc
dec
je
jo
jb
js
add
mov
push
inc
xor
add
and
jae
jb
jns
adc
arpl
jb
or
push
imul
cmp
push
gs
insb
jbe
jb
adc
imul
jae
add
arpl
imul
popa
push
imul
sbb
dec
ja
push
imul
dec
ja
inc
arpl
je
insb
add
dec
ja
push
imul
sbb
dec
ja
dec
je
je
je
jae
adc
dec
push
inc
inc
dec
add
hlt
push
add
aas
ja
outsb
outsb
je
gs
imul
imul
add
les
outsb
dec
outsl
popa
fs
imul
adc
pop
dec
imul
imul
add
inc
jne
imul
arpl
inc
inc
popa
je
add
mov
push
gs
jne
arpl
gs
imul
imul
add
mov
insl
popa
addr16
insb
jo
adc
dec
inc
js
dec
gs
push
outsb
imul
add
add
add
add
add
xor
add
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
add
add
xor
add
push
add
add
add
add
add
add
add
xor
add
pop
add
add
add
add
and
add
add
add
xor
test
sarl
fisubrs
js
rorb
outsl
sub
fidivrs
leave
mov
leave
mov
adc
lds
cli
arpl
in
dec
mov
dec
inc
cmp
inc
ss
mov
frstor
mov
xor
mov
push
sbb
sub
bound
daa
movsb
mov
mov
inc
loopne
mov
jb
pop
inc
push
xchg
mov
gs
cld
sub
adc
pusha
add
pop
lahf
ret
in
stc
lock
push
or
jp
int
mov
arpl
sahf
push
in
cmpsb
movl
mov
or
fdivs
pop
pop
cld
inc
incb
jp
mov
mov
mov
mov
pusha
fucompp
xchg
dec
in
lock
in
les
pushf
enter
push
enter
gs
fstl
xchg
cmp
push
pushl
sbb
cmpsl
lods
push
call
icebp
adc
or
les
xchg
pop
outsl
jg
mov
push
dec
clc
mov
sub
cli
clc
sbb
add
dec
xor
adc
out
sbb
popa
mov
testl
insb
inc
sub
jne
sbb
data16
jl
inc
rorb
imul
inc
pop
mov
cwtl
aam
shll
sbb
pop
or
cmc
or
incl
test
mov
hlt
push
jmp
xchg
arpl
adc
jns
cs
jge
loope,pn
repz
pop
fwait
mov
rolb
fcomi
int3
jnp
sbb
test
fisubl
add
mov
xchg
add
fsubrl
cwtl
cltd
daa
outsl
out
push
js
jg
cmp
jnp
add
mov
test
push
dec
mov
or
div
jecxz
lea
adc
push
rep
rcl
or
cmp
and
inc
pop
movsb
mov
mov
mov
cs
das
pop
inc
inc
mov
fwait
push
dec
adc
lret
dec
in
repz
push
sbbl
sbb
arpl
fs
cs
sti
lds
movsb
scas
jmp
jp
jne
dec
divl
pop
or
scas
pop
fdivs
and
adc
push
jl
xor
add
js
or
jo
push
stc
lret
sbb
xor
jo
dec
add
inc
adc
fdivrs
inc
xor
adc
push
jns
bound
sub
sub
clc
insb
and
enter
cwtl
outsl
shl
inc
inc
xor
mov
fdivrs
sbb
mov
dec
test
out
mov
inc
imul
sub
arpl
and
or
in
mov
cmc
mov
inc
cmp
ficompl
xchg
sub
stos
pushfw
mov
mov
jmp
popf
jg
pop
mov
mov
je
outsb
jle
into
cmp
push
insl
cmp
test
pop
and
mov
repz
pop
xor
pop
mov
jno
mov
dec
xchg
xor
push
sbb
add
or
sub
pushl
sbb
roll
xor
clc
out
je
aam
aam
xor
jp
orl
in
mov
loopne
jne
mov
fstpl
mov
into
pop
dec
out
inc
sub
or
add
mov
stos
std
jo
mov
test
inc
pop
push
ljmp
addb
mov
movsl
out
ds
out
push
aaa
incb
add
xorl
popa
test
fwait
mov
cmpsb
sbb
inc
test
pushf
pop
insl
or
sub
jmp
rorl
dec
lahf
jg
les
push
xchg
rolb
push
fisubl
daa
icebp
inc
insl
imul
sbbl
jmp
push
shll
jns
cmpsb
lcall
push
mov
test
push
mov
push
in
sahf
lock
flds
sahf
or
nop
mov
inc
das
dec
pop
call
dec
push
mov
inc
sub
cmpsl
inc
stos
inc
sub
shlb
sub
lahf
stos
cli
push
stos
inc
in
push
jno
add
inc
sbb
mov
in
mov
adc
xor
cmp
xchg
icebp
into
xor
push
pop
mov
or
aam
adc
les
mov
mov
dec
mov
fsubrp
stos
or
pop
sbb
and
out
stos
jne
xor
rcr
mull
jne
sub
jg
push
jne
int3
loop
xorb
mov
das
xor
sbb
push
inc
lods
add
and
dec
test
cltd
inc
mov
dec
push
inc
mov
mov
jge
push
sbb
inc
fs
daa
cmp
notl
in
dec
cli
lock
mov
hlt
aaa
popa
inc
dec
dec
dec
adc
out
adc
cmpb
jecxz
hlt
xchg
ret
insl
xchg
rclb
sub
dec
xchg
sub
adc
push
fs
js
jmp
cmc
leave
cltd
mov
aas
mov
gs
ret
jp
jmp
dec
mulb
loope
adc
jge
data16
cmc
xchg
xchg
fwait
loope
insl
push
mov
rcl
je
adc
add
xor
mov
mov
in
xor
sub
in
sub
dec
jecxz
data16
add
ret
je
jmp
call
test
sub
mov
push
lret
xor
mov
inc
and
pop
ret
imul
adc
jge
pop
inc
xor
nop
dec
and
dec
sub
mov
and
popa
sbb
jb
in
out
iret
inc
lock
inc
add
push
inc
sbb
jmp
jno
insb
add
jae
sub
aad
xor
jbe
push
lcall
js
call
xor
inc
cld
cmp
mov
fcompl
imul
and
outsb
inc
push
icebp
xor
mov
orb
sbb
rcr
nop
xor
mov
std
sbb
cld
push
test
jl
xlat
repz
jle
mov
mov
cld
pop
popa
xchg
leave
pushw
mov
mov
add
icebp
ret
dec
pop
mov
mov
lea
mov
sbb
xor
mov
fmuls
out
push
pop
mov
cmp
xchg
push
push
rol
xlat
inc
push
sarl
mov
push
adc
shrl
sbb
mov
popa
cmc
das
mov
dec
push
push
jmp
jp
xor
jnp
add
or
and
enter
sbbl
xchg
dec
js
pusha
and
dec
sarl
fnstenv
xor
or
imul
test
mov
adc
cmpsb
inc
shr
loop
xchg
cwtl
xchg
dec
cltd
imul
xor
ljmp
gs
test
sub
jnp
repnz
orb
lds
and
out
sbb
cmp
xchg
and
scas
lret
mov
lret
or
das
fwait
imul
fs
stc
dec
std
outsl
sbb
jge
pusha
add
cmp
leave
flds
in
sub
mov
and
les
sarb
popa
cli
mov
fcompl
pop
mov
xchg
mov
push
adc
mov
scas
in
xchg
cmp
lcall
xchg
in
sbb
stos
mov
push
xor
decl
out
mov
enter
and
mov
add
xor
data16
cmp
cs
or
subl
sbb
jne
sub
xchg
test
call
sahf
stc
mov
xor
inc
insb
call
and
mov
je
inc
xor
arpl
adc
jae
or
xchg
andl
insl
mov
rorb
cmp
jno
cmpsl
jle
xor
not
daa
jae
cmpsb
repz
and
inc
sahf
jae
pushl
jle
mov
addl
pop
lods
ret
pop
out
sub
adc
leave
iret
imul
mov
call
push
movsl
xor
test
and
push
jp
dec
or
mov
sbb
and
je
lret
fdivrs
mov
iret
es
mov
mov
rcrl
adc
and
xchg
scas
pop
fidivrl
xchg
and
inc
out
fsubr
insl
lahf
mov
rcrb
jnp
push
cltd
xchg
std
xlat
shrd
sarb
div
fwait
push
mov
xor
outsl
aad
push
mull
push
xchg
popa
cmp
hlt
idivb
shll
mov
or
loopne
ss
pop
jnp
lds
cwtl
sub
push
and
fstpl
pop
stc
dec
sbb
or
push
in
or
mov
push
negl
pop
lods
insl
test
jne
scas
mov
and
jg
mov
jo
fildl
or
push
cwtl
jp
mov
inc
pop
aam
push
xorl
shl
imul
in
xor
dec
lds
xchg
inc
adc
int3
inc
sbb
add
test
test
subb
ret
mov
shrl
call
fs
xchg
fisttpll
push
push
dec
mov
scas
sahf
mov
bnd
pop
pop
mov
test
pop
jle
push
mov
fsubl
inc
lods
adc
cltd
jp
ja
add
mov
xchg
out
ds
xchg
arpl
shlb
inc
ret
push
sbb
insb
push
test
sbb
sbb
sbb
and
arpl
jo
inc
sub
mov
xchg
adc
out
aam
fdivrs
test
adc
jmp
cmpsl
and
hlt
add
outsb
lret
mov
push
movsl
add
hlt
stos
xchg
and
adc
dec
repnz
cld
inc
jp
cmpsb
mov
dec
clc
lahf
push
pop
popa
cmc
dec
es
jp,pn
add
xchg
rcr
loope
pop
in
cmp
std
sbb
or
add
fists
and
pop
sub
incl
inc
shrl
shr
es
ret
mov
in
add
lods
nop
pop
pop
fldl
mov
xchg
cmp
je
jecxz
inc
push
mov
fwait
adc
addr16
xchg
or
fldt
in
ljmp
in
mov
sub
clc
out
incb
cld
jp
fwait
inc
mov
inc
and
aas
jg
add
dec
jmp
stos
dec
pop
pop
cmp
das
and
mov
rcl
xchg
inc
jo
mov
out
testb
mov
jns
mov
pop
idiv
jo
mov
pop
fnstsw
lods
adcb
jb
mov
aam
int3
nop
mov
data16
hlt
leave
fimuls
popa
xchg
test
lds
fwait
insb
ja
gs
insl
xchg
jecxz
mov
mov
scas
data16
ljmp
mov
mov
out
cmp
loopne
mov
mov
xor
push
aam
inc
clc
cmpsb
push
repnz
mov
mov
sub
fldt
xor
sbb
jp
dec
xchg
add
mov
adc
push
in
pop
jecxz
addr16
cli
cld
dec
pop
sub
sub
mov
xchg
rolb
jge
es
sbb
cs
mov
push
bound
out
jns
sub
xor
enter
push
mov
adc
jbe
je
xchg
xchg
out
xor
sub
insl
sti
ret
push
int
les
inc
loop
sbb
xchg
addr16
adc
stos
imul
incb
cmp
int
push
insb
shrb
int
xchg
jmp
adc
inc
in
div
pop
jns
cltd
imul
mov
mov
add
ficoml
mov
push
lahf
cmp
imul
mov
js
sbb
gs
sbb
iret
push
jmp
add
pop
pop
lahf
repz
pop
cmp
cmp
push
xchg
aas
sub
lds
adc
in
out
iret
jge
outsb
sahf
mov
mov
sub
ja
mov
pop
fildl
ds
out
js
pop
pop
aad
adc
and
cmpsl
cmp
dec
or
sbb
into
pop
xor
insb
pusha
popf
js
in
aam
or
movsl
inc
fwait
inc
lcall
cs
cmp
les
loope
xor
mov
lret
dec
cmp
jno
pmaxsw
xchg
icebp
mov
xor
ds
jge
push
jp
and
sbb
push
sbb
call
ret
test
mov
push
push
push
paddsb
out
ret
rorb
scas
fisubrs
adc
lahf
pop
mov
cmp
cltd
ret
jl
fidivrs
popa
pop
orl
jo
dec
mov
add
add
movsb
lret
xchg
jne
xor
testw
out
clc
bound
cmp
inc
cmp
xchg
sti
push
cmp
cmpsb
in
dec
popaw
stc
cmpsl
pop
scas
mov
xor
sahf
dec
xchg
mov
sub
neg
and
cli
icebp
or
xchg
mov
test
mov
or
jae
inc
mov
bound
pop
and
sbb
clc
and
cwtl
enter
stos
mov
call
lcall
rorb
in
popl
jp
adc
adc
test
dec
push
notb
mov
int
leave
push
in
cmp
bound
sbb
sbb
ficoml
sbb
lds
jle
or
mov
xchg
fnstenv
push
and
subl
mov
imul
mov
imul
dec
mov
add
jbe
fcoml
mov
inc
lahf
xchg
lock
outsb
loopne
cmp
lea
mov
push
pop
std
inc
pop
add
and
mov
jecxz
dec
xchg
xchg
jmp
sub
aam
cmp
jmp
leave
sti
mov
mov
mov
test
sub
aam
add
pusha
fisubrl
in
fs
inc
sbb
sub
sub
xor
neg
popf
push
repz
stos
out
int
int
outsl
pop
or
push
cmpsl
inc
sbb
leave
xchg
int3
xchg
inc
pop
jb
mov
loop
mov
inc
xchg
adc
sahf
mov
add
jns
cld
vdivps
xorb
mov
cld
out
and
sbb
or
or
mov
mov
dec
aam
xchg
push
addr16
pop
add
xorb
mov
adc
pop
xchg
jbe
out
sbb
xchg
lret
mov
test
push
leave
sbb
xchg
nop
dec
cmpsl
imull
sub
xchg
xchg
cltd
jb
in
adc
add
xor
lds
movsb
adc
in
mov
add
or
mov
dec
nop
mov
mov
lea
xchg
ror
shll
cwtl
pop
dec
push
sarl
xchg
pop
cmp
lock
jne
mov
fbstp
jmp
dec
pop
xchg
popf
aad
adc
push
mov
inc
cwtl
push
sub
leave
sub
push
and
test
sbb
aam
jo
xlat
inc
add
xor
cli
pop
hlt
outsl
loope
push
int
pop
mov
iret
cmp
xchg
jle
outsl
scas
shrl
sub
pop
jbe
cld
pushf
xor
subl
lods
dec
adc
cs
and
popf
push
fsubl
mov
ret
inc
xor
xchg
into
mov
cmpsl
pop
mov
nop
jno
push
push
in
or
xchg
dec
xchg
or
xlat
sbb
sub
mov
mov
sbb
shll
sbbb
push
sti
in
push
scas
adc
enter
adc
push
notl
mov
mov
sbb
add
rclb
sahf
push
push
or
mov
push
js
cli
movsl
adc
jb
cmp
fimuls
push
add
mov
dec
scas
or
enter
fwait
icebp
stos
in
and
lods
les
subl
mov
popf
mov
xor
inc
inc
arpl
cmc
fwait
add
iret
jmp
adc
jo
aam
dec
es
test
lods
fdivp
arpl
mov
sub
outsb
jbe
ror
insl
push
cmpl
rorl
push
xor
ljmp
int3
xchg
push
ss
dec
sarl
dec
test
stos
xchg
aad
int
mov
outsl
pop
push
pop
xchg
lock
push
repnz
lcall
jbe
scas
jb
mov
je
xchg
mov
add
mov
push
adc
push
dec
es
adcb
or
insl
mov
outsb
sar
sub
dec
insl
inc
xchg
mov
outsb
push
movl
dec
cmp
sbb
push
pop
cwtl
jb
nop
mov
repz
push
ds
aam
fwait
dec
jmp
ss
sbb
pop
cmp
cmp
ss
jnp
lret
je
cmc
jnp
adc
test
test
push
push
xor
cmp
outsb
pop
loope
push
shrl
mov
ja,pt
sahf
push
fwait
outsb
sub
xlat
adc
xchg
in
imul
sti
xchg
out
mov
jecxz
pop
test
adc
mov
dec
aas
ret
daa
mov
pop
sub
xorb
pop
test
xchg
out
push
adcl
ds
lds
sbb
scas
popa
cs
repz
jl
xchg
mov
jo
pop
dec
jl
add
and
lock
adc
pop
int3
xor
pop
jns
mov
stc
lret
clc
dec
test
imul
mov
or
push
dec
repz
jb
mov
add
jle
jnp
inc
inc
pop
xchg
lea
inc
dec
fcmovnb
fistl
or
mov
sbb
or
mov
das
adcl
and
roll
shrb
mov
neg
js
add
pop
outsb
dec
aam
sub
repnz
pop
rorl
mov
int3
mov
bound
mov
mov
fidivrl
sti
cmp
shlb
push
adcl
and
mov
pop
xchg
xlat
cmp
call
inc
imul
pop
lods
dec
mov
xchg
mov
sbb
jmp
mov
rcll
int
mov
mov
lock
push
gs
arpl
mov
jp
clc
pop
cltd
push
sub
push
out
push
mov
in
and
lds
leave
push
repnz
or
pop
mov
shll
sub
and
dec
add
jge
mov
shlb
repz
sub
iret
repz
mov
movsl
jne
add
stos
xchg
or
iret
push
cmp
lock
inc
add
jo
imul
jl
jbe
cmp
cmp
clc
add
lods
xchg
movl
and
pop
jae
mov
add
mov
or
or
fneni(8087
push
int
cmp
jg
dec
add
adc
jmp
cld
mov
pop
adc
es
mov
int
ja
xchg
fwait
mov
aam
xlat
xor
xchg
pusha
push
pop
sar
push
stos
rolb
xor
in
loop
sbb
daa
cmpsl
jecxz
fistps
and
out
xor
lcall
add
adc
fidivs
sub
pop
lret
js
jge
xchg
push
adc
in
xchg
mov
aam
cltd
ja
pop
pusha
ss
jmp
in
dec
cmp
les
lods
xchg
jbe
or
mov
icebp
stos
enter
test
pop
out
shrb
addr16
pop
cwtl
aaa
or
and
push
mov
cmp
mov
rcll
bound
ss
lret
mov
jmp
dec
jecxz
cmp
aam
pop
xlat
movsb
xchg
ret
push
sahf
dec
loope
in
adc
dec
in
js
daa
cmp
inc
ret
adc
sbb
or
lock
test
cli
in
mov
and
js
into
add
xchg
je
das
cld
dec
dec
sub
jmp
scas
mov
sti
shll
jp
cmpsb
xchg
pop
mov
inc
ret
test
fistl
adc
jle
xchg
cltd
mov
in
mov
pop
pop
push
push
mov
es
mov
jno
or
scas
pop
das
or
in
es
lret
dec
call
inc
ret
mov
add
sub
ss
lea
xor
mov
sti
jl
push
xor
test
jle
addl
or
and
xlat
dec
shlb
and
mov
bound
inc
repnz
mov
push
test
jno
mov
data16
cmpsl
or
shl
int3
xchg
mov
aaa
pop
dec
stos
mov
fadds
inc
iret
xchg
jae
outsl
popf
cltd
inc
and
cwtl
addl
dec
int
jnp
ss
inc
pop
negb
fimull
mov
lods
adc
repnz
nop
std
cmc
or
sbb
iret
addr16
ret
mov
sbb
sbb
pop
fmull
aam
jge
push
push
xchg
push
push
test
cld
mov
mov
mov
adcb
test
les
ja
cmp
cmp
loop
shlb
and
mov
push
dec
outsb
push
push
pop
stos
xor
cmp
mov
jmp
dec
and
ret
inc
call
in
jle
insl
orb
pop
std
daa
movsb
pop
stc
cmp
or
fwait
cmc
lcall
mulb
cmpsb
aad
lods
inc
fiadds
ljmp
lret
outsb
mov
xor
sti
pop
jmp
outsb
or
out
lods
add
inc
sbb
fs
sub
mov
pop
pushf
fisubrl
mov
stos
add
out
jo
pop
sbb
or
push
arpl
out
fimull
stos
jge
mov
rclb
movsb
test
dec
xchg
cmp
fwait
mull
sbb
push
jmp
adc
inc
idivb
sbb
sub
push
scas
or
cmpsl
cmpl
push
repnz
jne
mov
dec
inc
pop
stos
je
mov
ljmp
cs
adc
clc
sar
cwtl
stos
fldl
ds
imul
mov
call
test
push
add
pop
hlt
test
cmc
dec
lahf
mov
lods
lahf
xor
inc
jo
popl
hlt
cmpsl
cmpsb
in
lret
dec
out
add
fs
pop
sub
jle
ljmp
sarl
popf
fidivl
push
mov
pop
pop
loope
ljmp
push
dec
mov
jbe
cmp
mov
adc
mov
pop
xor
jns,pt
test
mov
cmp
inc
adc
inc
mov
pop
cmpsl
sahf
out
mov
aad
movl
and
add
dec
mov
adc
fnstsw
or
outsl
js
rcrl
sbbb
jl,pn
les
inc
jl
add
js
das
daa
pop
cmp
xchg
sahf
pop
push
jmp
xor
sti
xor
mov
icebp
jle
insb
call
mov
xchg
jl
xor
sti
dec
and
ds
leave
mov
stos
popf
dec
and
push
ret
and
lcall
push
loopne
ss
pop
sbb
aad
jp
data16
in
cli
fs
sbb
sub
enter
xchg
add
pop
rcrl
cmpsl
test
lods
jo
inc
and
jns
add
jo
add
push
sti
rsm
mov
add
loop
ud2
inc
push
mov
mov
ficompl
add
cld
into
aas
outsb
ud2
jb
mov
pop
decl
add
ljmp
pop
push
mov
popf
out
mov
movsl
pop
int3
inc
pop
fdiv
aas
jns
insb
lcall
or
lret
push
sbb
ss
dec
adcb
out
ds
stos
add
lcall
mov
test
aaa
je
push
xor
shl
pop
mov
jmp
addr16
sub
fcomi
xorl
dec
jae
fwait
jb
sbb
lea
cld
xchg
jo
ljmp
jno
push
sub
pop
sti
push
dec
and
sub
add
adc
jb
add
dec
xchg
call
xchg
or
mov
sbb
sub
hlt
test
jae
notb
sbb
clc
mov
adc
pop
add
sub
xchg
mov
ljmp
das
adc
sbb
popa
xchg
xor
mov
xlat
pop
xchg
out
insl
mov
sbb
xor
add
cwtl
imul
dec
mov
lock
mov
cmpsl
inc
stos
out
ja
jle
lea
cmp
mov
insb
and
pop
sbb
cmc
call
mov
popa
shlb
outsl
jle
scas
test
jg
mov
jae
xor
sti
repnz
rcll
insl
cmpb
loopne
jmp
mov
idivl
dec
cld
mov
mov
mov
inc
inc
push
outsb
imul
insb
out
aas
pop
daa
stc
cmc
cld
or
jle
out
fistps
les
and
mov
and
clc
jmp
mov
aam
mov
sub
and
je
and
cs
push
mov
sbb
or
jns
mov
xchg
jb
jns
sub
inc
mov
adc
jge
outsb
push
mov
mull
lods
jno
mul
mov
jg
loop
movsb
adc
dec
mov
inc
notb
add
pop
fcompl
mov
add
inc
loope
bound
ret
cmc
sbb
jp
cmpl
sbb
mov
repnz
push
pop
push
in
mov
dec
mov
fs
test
and
and
mov
cmpsl
add
lea
sti
xchg
xor
test
loopne
fimuls
jnp
dec
fmul
nop
jb
setae
test
mov
xchg
push
or
sti
cmp
in
mov
insl
loop
outsl
mov
adc
shrb
inc
or
popf
test
and
inc
gs
fbstp
shr
cli
mov
jae
cmpb
stos
jns
loop
mov
lfs
or
inc
inc
sbb
fidivrs
add
fstps
xor
and
daa
inc
cltd
lods
push
test
mov
loopne
leave
or
ljmp
insl
test
dec
out
sub
pop
sahf
jmp
sahf
sar
pop
mov
pop
and
sti
push
push
ds
or
cli
xchg
cmp
jecxz
loope
and
lret
cmp
nop
lcall
and
inc
lods
arpl
rclb
dec
or
cmp
pushf
icebp
xor
and
or
fwait
lcall
inc
pop
mov
mov
push
cwtl
js
jnp
dec
insl
int
xchg
in
fidivs
in
lahf
leave
icebp
aad
xlat
xor
sbb
sbb
jns
xor
sub
aaa
ja
inc
pop
aad
pop
push
movsl
imul
jb
notl
aam
dec
mov
fidivl
popf
jns
mov
push
push
fimuls
add
mov
jmp
jg
pop
jl
inc
int
sbb
mov
mov
sbb
int
and
xor
inc
and
adc
lret
pop
fs
out
int3
test
aam
rclb
in
push
mov
ss
jecxz
xchg
mov
into
jecxz
jle
outsb
mov
inc
andl
loop
cmpsl
lcall
in
pop
je
mov
mov
xchg
in
ret
rorb
rorl
xchg
add
fsubrs
xor
jno
dec
dec
insl
dec
cmp
jae
jbe
adc
sbb
and
jb
ficomps
mov
mov
rcr
add
sub
xchg
xor
dec
leave
ljmp
inc
rolb
xchg
insl
xor
notb
mov
fdivs
movsb
std
xchg
clc
adc
pop
scas
sub
jl
pushf
aad
in
popf
test
out
add
clc
xor
cmpsl
xchg
cmp
pop
test
scas
ljmp
rcrb
in
mov
inc
cmp
mov
cli
and
jle
repnz
shll
add
out
and
outsb
sbb
jb
pop
pop
cmp
pop
bound
xchg
les
fcmovnb
jg
pop
es
clc
and
ficomps
mov
push
mov
mov
sti
dec
std
stos
sub
stc
xor
or
cmp
loope
push
ljmp
or
hlt
sbb
sbb
shrl
stc
push
insb
repz
stos
leave
in
jo
loopne
fimuls
sahf
add
nop
loopne
mov
sbb
scas
ss
imul
mov
dec
and
or
je
fildll
ret
sbb
cmc
and
pop
stos
lahf
andb
movsl
test
sbb
inc
fidivl
mov
pop
xchg
xor
add
rcrl
inc
out
mov
subl
and
dec
mov
cmpsl
call
popl
jns
pop
nop
add
adc
adc
bound
pop
movsl
int
jge
cmp
inc
aaa
inc
xchg
mov
dec
daa
mov
cld
sbb
test
xchg
push
adc
and
sti
sti
jmp
xor
mov
pop
add
jg
rorb
jb
cmp
xor
jbe
ret
outsl
sub
lds
jmp
push
dec
lds
add
test
testb
inc
push
jno
cmp
xor
push
adc
mov
icebp
fstpt
repz
jno
or
push
sub
pop
iret
in
jae
stos
int3
rcll
pop
out
mov
push
xor
in
stos
cmc
cmp
jecxz
verr
sbb
jge
lods
xor
adc
xor
and
popf
sub
ds
inc
sbb
test
mov
push
cmc
mov
mov
mulb
mov
in
scas
into
mov
out
xchg
dec
cmpsl
jne
loope
ljmp
push
sahf
lahf
cld
sbb
sub
dec
mov
repnz
fsubs
jle
hlt
fadds
es
pop
clc
adc
xlat
fstl
movsl
jmp
ffree
mov
cmp
add
das
mov
or
cmp
insb
add
faddl
and
or
sbb
or
lods
mov
aad
mov
call
leave
mov
push
or
repnz
dec
fisttpll
and
in
jb
dec
rcl
rorl
inc
cmc
cld
ret
or
cmp
or
xor
adc
test
mov
cmp
mov
inc
jnp
mov
push
inc
dec
sahf
cli
dec
std
adc
add
cmpsl
mov
mov
pop
scas
cmp
stc
fs
push
mov
add
popa
jecxz
add
fists
lea
les
cmp
leave
inc
dec
out
mov
cmp
repnz
insl
scas
and
pushf
sub
ret
or
sahf
data16
xor
fisubrl
jg
dec
xor
mov
fidivs
pop
in
and
lret
icebp
aam
cmp
cmp
cmp
imul
lahf
xchg
xchg
mov
inc
push
dec
nop
inc
mov
mov
cmp
sbb
adc
shlb
ja
std
sub
pop
adc
mov
xor
ret
cmp
loope
sahf
enter
ret
xor
sahf
add
or
std
fs
mov
test
pushf
loope
push
sub
sub
xlat
or
pop
ss
and
int3
jnp
scas
mov
xor
mov
leave
xor
in
mov
not
cmp
test
je
int
cmp
or
loop
lock
push
cmp
pushf
mov
push
mov
lea
dec
adc
push
loope
lret
fcmovne
sbb
dec
jbe
jnp
and
enter
push
imul
add
lret
jae
mov
xchg
fcompl
xchg
mov
inc
imul
xchg
repnz
adc
rcrl
test
sub
je
lds
inc
jl
mov
adc
fs
stos
ret
cmpsb
repz
lahf
mov
out
mov
sub
mov
adc
xchg
data16
mov
and
sarb
cmp
loope
cmp
and
mov
mov
dec
aas
cmpsb
and
or
jp
es
idivb
xor
lock
cmovge
outsb
mov
push
jle
popa
and
mov
and
pop
neg
jb
adc
adc
add
mov
and
mov
or
adc
mov
pushf
push
or
in
mov
xor
xchg
stos
lods
sbb
je
out
add
ficoml
adc
test
pop
xor
ss
ja
in
loopne
fbld
ret
bswap
out
mov
sbb
push
xor
addr16
pop
xlat
push
jbe
popf
jb
aas
cmpsl
roll
adcl
dec
push
mov
adc
dec
lock
sarl
xchg
or
ds
sub
rcrb
add
out
dec
and
out
bound
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
jmp
push
push
clc
shll
aaa
movsb
or
push
das
cmp
call
dec
sub
daa
aam
jb
inc
jns
pop
insb
xor
add
and
pushf
movsl
pop
jg
mov
add
js
mov
mov
add
mov
mov
mov
add
jmp
test
or
add
addl
jle
sub
sub
push
jmp
les
cs
pop
gs
pop
sub
sbb
mov
jg
mov
sub
jo
sbb
dec
jne
mov
jmp
repnz
sar
lahf
in
mov
mov
test
xor
mov
jmp
cli
stos
or
push
and
cmp
stos
xchg
cmp
ret
mov
sbb
call
xchg
sahf
mov
scas
xlat
nop
xchg
daa
mov
into
push
shl
outsb
mov
sub
lret
cmp
cmp
aad
sub
into
push
dec
push
jno
cmp
rclb
cmp
mov
enter
mov
cmp
pop
mov
jbe
je,pt
pop
jp
out
and
mov
test
into
push
lea
xor
mov
dec
popa
xchg
aam
jle
imull
fsubl
mov
or
cmp
push
popa
pop
lods
sbb
stc
adc
cmp
push
mov
adc
ret
jnp
push
jg
cmpsb
xchg
mov
and
ljmp
mov
les
shl
mov
cmp
jp
test
nop
xor
pop
gs
bound
sub
adc
mov
repnz
paddsb
push
daa
stos
lea
sub
ret
push
pop
xor
int3
fs
mov
xchg
ja
xor
fs
hlt
out
sub
cwtl
fwait
cs
or
loop
xchg
fs
ds
imul
dec
cmpl
scas
lds
and
cld
icebp
outsl
xchg
ds
out
cs
addb
dec
lcall
fisttpl
sub
cmp
xchg
cld
rcl
xor
xlat
daa
in
fwait
sbb
sub
fs
rorl
aaa
sbb
jb
out
aas
popf
fsts
xchg
pop
leave
test
sub
loopne
leave
mov
pop
jge
and
sahf
enter
icebp
adc
test
cld
dec
and
mov
cmpsb
add
cld
in
in
insl
cli
jge
cmpsb
push
push
pop
arpl
repz
pop
xchg
or
xchg
adc
cmp
push
stc
inc
sbbb
cmpsl
xchg
or
shl
inc
bound
or
sub
pop
xor
clc
dec
cmpsl
mov
push
stc
roll
pusha
pop
or
sub
in
push
push
stc
cmpsb
push
push
stc
cmpsb
push
loope
xor
cli
imul
push
loope
or
sub
mov
ljmp
push
push
in
or
stc
xchg
into
push
sbb
fs
js
xor
xchg
in
stc
cmpsb
movsb
xchg
popa
cmpsb
push
stc
cmpsl
pop
pop
std
cmpsb
push
add
cmpsl
js
std
cmpsb
push
filds
xor
std
cmpsb
push
pop
lcall
jge
movsl
push
push
cmpsw
push
or
or
dec
andnps
sub
push
filds
dec
test
cmpsb
test
sub
mov
adc
push
stc
sub
or
sub
jo
stc
cmpsb
adcl
sub
pop
stc
cmpsb
test
std
cmpsb
push
fistpll
lcall
mov
or
stc
xor
ljmp
inc
ljmp
push
inc
jb
cli
pop
out
in
pop
in
or
inc
xor
push
stc
push
test
movsb
push
push
dec
xor
pop
xlat
xor
xor
fistpll
sbb
stos
push
push
xchg
push
xor
pop
cld
out
test
shlb
xor
push
stc
sub
add
cmpsb
mov
add
pop
test
add
cmpsb
mov
dec
stc
sbb
pop
stc
cmpsb
cmpsb
push
stc
cmpsb
push
sbb
cmpsb
push
push
stc
cmpsb
push
push
push
xor
notb
lcall
and
or
xchg
and
cmp
loopne
push
fcoml
xchg
mov
cmp
loopne
push
or
inc
xchg
cmp
mov
sub
fwait
paddq
adc
xchg
dec
ljmp
scas
fldl
outsl
and
mov
push
push
stc
movsb
cmp
add
fwait
paddq
adc
xchg
and
mov
stc
movsb
cmp
add
fwait
paddq
push
cld
aam
pop
xchg
and
push
or
push
inc
in
pop
xchg
or
stc
cmpsb
or
jae
test
inc
xchg
cmp
stos
cmp
add
fwait
paddq
push
stc
cmp
xchg
stc
test
int
test
loop
in
or
push
jge
mov
cld
sub
push
xor
mov
out
andnps
xor
pushf
sub
dec
jle
cmp
fmul
stos
cmpl
sbb
out
andnps
pusha
in
or
dec
pop
stc
cmpsb
push
push
stc
xor
mov
clc
cmpsb
or
movsl
push
mov
arpl
sbb
xchg
pop
pop
stc
cmpsb
addl
stos
mov
xchg
add
cmpsb
xorl
mov
sub
cmpsb
subl
cmpsb
es
push
and
or
xor
cltd
sbbb
inc
fwait
mov
push
stc
xor
mov
in
andb
cmpsb
push
adc
xor
cltd
pop
jl
or
xchg
les
std
jae
pop
xchg
push
pop
mov
mov
or
xchg
mov
jmp
das
mov
dec
ljmp
and
jmp
dec
push
cmp
sbb
add
push
movsb
cmc
inc
or
cmp
stc
cmpsb
push
push
stc
cmpsb
push
push
stc
cmpsb
push
push
stc
cmpsb
push
push
stc
cmpsb
push
push
stc
cmpsb
push
push
stc
cmpsb
push
push
stc
mov
push
insl
testb
and
or
push
stc
cmpsb
push
push
stc
cmpsb
push
xchg
stc
ljmp
xor
faddp
stc
cmpsb
ds
stc
cmpsb
push
push
stc
cmpsb
push
push
stc
cmpsb
push
push
stc
cmpsb
push
push
stc
pop
pop
fcoml
inc
mov
int3
fwait
test
adc
pop
lea
es
xchg
jmp
mov
mov
in
or
mov
fimull
jmp
sbb
mov
or
fsubrs
hlt
mov
popf
imul
je
mov
sbb
outsb
jnp
test
mov
push
inc
sub
pop
cli
mov
sbb
pop
mov
jns
pop
pop
sbb
jg
addr16
mov
cmp
and
push
sub
movsl
mov
sbb
cmp
adc
push
adc
pushf
das
ja
xchg
sbb
ss
or
xchg
push
add
popa
fs
jo
popf
pop
inc
stos
xor
inc
mov
push
push
ja
sahf
xchg
gs
mov
mov
cmc
repz
and
push
outsb
sub
mov
pop
sub
jbe
push
push
call
std
vaddsubps
repz
fmul
push
es
lea
jae
mov
mov
add
pop
mov
andl
cmpsb
in
cs
fwait
mov
addr16
and
test
push
xor
mov
icebp
cltd
push
aaa
sub
lods
into
jecxz
rorl
xor
or
sub
xchg
popa
sbb
mov
pop
inc
mov
or
add
jne
adc
jne
add
mov
cltd
adc
ret
sbb
jb
pop
ds
repz
cmp
int
jb
jae
mov
out
inc
insl
dec
and
out
xchg
sbb
out
xor
or
pop
scas
xor
push
cli
hlt
mov
mov
data16
loope
mov
sub
int3
call
cmpsb
push
stc
cmpsb
scas
pop
stc
aas
sbb
xchg
cmc
movsbl
mov
mov
iret
shr
imul
call
inc
repnz
push
test
in
and
jmpw
icebp
lret
popa
jno
mov
sbb
jno
dec
test
mov
stc
out
xlat
call
xor
insl
pop
or
das
jp
mov
lea
mov
adc
pop
repz
adc
lock
inc
lret
mov
lock
mov
push
int
shlb
cmp
std
call
nop
lret
dec
int3
add
lods
cmp
dec
mov
pop
imul
inc
pusha
inc
inc
sub
lret
jb
adcb
adc
and
jne
in
jecxz
inc
iret
sbb
js
cmpl
xchg
or
in
call
cmp
aad
add
add
or
add
add
dec
add
dec
add
jo
add
and
adc
lods
or
cmp
add
add
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
lods
or
hlt
stos
or
sub
or
xor
or
cmp
or
inc
scas
or
dec
scas
or
push
scas
or
push
scas
or
pop
scas
or
pop
scas
or
push
or
pusha
scas
or
jbe
or
push
add
add
scas
or
mov
or
cwtl
scas
or
subb
add
or
mov
or
nop
scas
or
mov
scas
or
leave
scas
or
mov
add
add
scas
or
test
or
jecxz
or
mov
or
lock
or
mov
add
add
scas
or
shrb
add
scas
or
enter
push
scas
or
shrb
add
and
or
ja
xor
xor
fs
insb
add
jb
fs
insb
add
gs
xor
fs
insb
add
gs
jne
xor
cs
insb
add
imul
insb
add
insl
arpl
xor
fs
insb
add
gs
insb
xor
cs
insb
add
outsl
arpl
xor
fs
insb
add
outsb
insl
insl
cs
insb
add
popa
arpl
xor
fs
insb
add
outsb
imul
insb
add
jbe
jo
xor
cs
insb
add
jbe
jo
xor
cs
insb
add
gs
xor
fs
insb
add
gs
jne
xor
cs
insb
add
jbe
jo
xor
cs
insb
add
popa
addr16
insb
insb
add
imul
fs
insb
add
jbe
jo
xor
cs
insb
add
jb
imul
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
scas
or
add
add
jmp
or
add
add
sti
scas
or
add
add
or
add
add
add
add
mov
add
add
add
or
add
add
pop
mov
add
add
add
or
add
add
ja
or
add
add
mov
add
popf
mov
add
add
add
add
mov
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
or
add
add
es
add
add
add
mov
add
add
add
or
add
add
pop
mov
add
add
add
add
inc
dec
outsl
arpl
add
push
dec
gs
jo
outsb
inc
outsb
jne
inc
add
add
je
gs
outsl
popa
jb
push
jns
add
add
jae
jb
gs
je
imul
outsb
jb
popa
insb
imul
arpl
add
popa
addr16
imul
dec
arpl
push
imul
push
dec
outsl
je
data16
arpl
inc
add
add
inc
inc
insb
gs
outsb
jne
add
add
jbe
dec
jne
push
jb
je
add
add
insl
inc
outsl
jb
popa
je
push
inc
add
add
je
jb
gs
gs
fs
imul
jo
jb
inc
jbe
outsb
je
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
add
gs
je
push
imul
inc
add
add
gs
jb
popa
jns
je
dec
dec
outsb
fs
add
push
je
jb
push
gs
imul
inc
push
jne
dec
popa
jo
gs
imul
jo
jb
popa
je
inc
popa
jo
jne
gs
imul
add
push
gs
arpl
imul
add
push
gs
jne
jb
push
popa
insb
jne
inc
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
out
add
pop
inc
push
insl
and
add
add
imulb
xchg
lods
add
and
ret
adc
jnp
int
clc
cwtd
push
loop
push
pop
fldcw
movsb
subb
jb
std
jl
push
jb
mov
dec
jmp
or
xor
mov
pop
shll
jg
daa
sbb
outsl
mov
jp
lret
inc
or
or
xlat
cmp
in
push
and
and
inc
push
cwtl
sub
mov
inc
mov
sub
fdivrl
ja
shlb
push
or
inc
popa
fs
int
push
xchg
adcl
and
jmp
jmp
repnz
cmp
loopne
push
push
mov
mov
testb
or
imul
fidivs
or
mov
iret
mov
xchg
mov
and
test
mov
sub
xchg
inc
pop
lds
neg
pop
push
push
repz
mov
aam
push
scas
push
cld
pusha
test
xchg
popa
icebp
pop
stos
mov
cld
cwtl
sub
jmp
pop
xor
mov
fiadds
repnz
cmp
adc
lahf
adc
sti
movsl
pop
in
scas
pop
cmp
xchg
gs
fildll
jl,pn
or
add
xchg
mov
jge
xchg
mov
jg
imul
mov
fs
add
sbb
cmp
mov
jle
and
cmp
stc
js
out
stc
hlt
imul
jle
es
lock
lret
cmpsl
mov
stos
adc
stos
movsb
pop
repnz
add
aaa
shrb
fs
push
outsl
and
roll
mov
movsb
fwait
xor
pop
loop
fidivs
lock
lds
mov
scas
sub
data16
leave
pop
jmp
push
mov
add
sub
in
out
jo
mov
mov
jb
inc
pop
mull
jecxz
push
sbb
xor
inc
je
add
fstl
jno
jmp
jns
cmp
movsb
fnstsw
push
std
lock
orb
add
inc
sti
jo
arpl
fcompl
cmp
mov
jmp
gs
pop
je
inc
sarl
clc
mov
push
nop
pop
cmc
push
xchg
push
imul
loop
fldcw
test
jmp
imul
ss
lods
psrld
scas
mov
out
add
lahf
mov
sub
movsb
and
dec
hlt
or
cwtl
in
sub
dec
or
fisubrs
jns
sbb
fwait
xchg
dec
inc
mov
xchg
test
cwtl
ja
insb
xor
icebp
xchg
cmp
and
cwtl
dec
sti
nop
test
mov
jle
stc
es
and
ds
stos
sahf
push
mov
add
xchg
jl
pop
jle
insl
out
mov
daa
add
iret
aam
mov
daa
pop
and
mov
push
dec
imul
mov
mov
in
and
outsl
or
rclb
sub
pop
daa
sahf
lock
pop
out
jbe
cwtl
dec
push
dec
or
ret
sbb
push
adc
and
shl
push
insl
sub
fsts
sub
ret
fsincos
adc
cmpsl
repz
or
or
ljmp
push
xor
mov
es
sub
add
into
clc
dec
nop
loop
jg
jmp
push
pop
lret
jnp
or
bound
loop
sbb
outsl
push
mov
jnp
or
pop
std
pusha
sub
rol
in
push
mov
iret
xor
ss
popf
subb
add
push
rol
mov
shlb
cmp
cmpsl
cwtl
adc
mov
cmpsl
nop
data16
mov
push
stos
je
fsubrl
sahf
cmp
repz
test
in
and
add
js
add
jle
mov
pop
sbb
dec
inc
aad
mov
lret
pusha
loop
popf
and
mov
xchg
ficoms
xchg
xchg
sub
mov
icebp
sarb
pusha
jl
out
mov
pushf
push
hlt
daa
adc
rcr
insb
pop
pop
out
iret
jno
jne
rol
mov
out
jns
data16
cmp
inc
add
mov
mov
stos
mov
add
push
cmp
into
fs
cs
lods
ss
jbe
imulb
adc
popa
in
fistpl
fldt
push
sub
push
dec
jno
sbb
mov
imul
and
dec
add
cmp
icebp
sub
cwtl
popl
call
loope
aad
mov
xchg
mov
cmp
xlat
jbe
and
jge
bound
jnp
lods
mov
jo
out
inc
mov
test
js
jge
xor
sbb
xchg
pop
shll
jbe
movsb
loop
out
fiadds
lea
sbbb
push
add
add
paddd
jb
fiadds
cs
repnz
test
imul
data16
pop
mov
sar
insb
insb
lods
daa
loopne
and
gs
or
aam
push
mov
daa
movsb
push
leave
and
les
jg
adc
cmp
add
or
dec
movsl
jl
shr
fadd
lock
fimuls
push
xchg
aaa
push
cmp
mov
mov
icebp
cmp
pushl
xchg
adc
rcr
stos
push
out
inc
or
lds
aad
rolb
repz
dec
stos
insb
and
repz
or
sarb
je
sbb
or
or
and
out
sbb
test
push
sub
mov
nop
inc
in
adc
test
cmp
xchg
sbb
hlt
pushf
cmp
inc
scas
add
mov
lods
mov
dec
and
mov
cld
pop
sbb
mov
mul
push
insl
cmp
aam
xor
lea
cli
scas
subl
dec
fstl
shll
and
xchg
cmpsl
test
xchg
les
insl
insl
in
inc
in
cmp
push
mov
inc
bound
sbb
mov
jle
rcr
mov
rorb
sub
or
nop
test
push
imul
pop
xchg
sti
mov
jo
loopne
scas
cmpsl
sbb
pop
fstps
test
roll
sbb
into
das
pop
mov
montmul
cmpsb
enter
mov
stos
adc
test
cmp
cmp
sbb
ljmp
bound
mov
or
and
subb
mov
xor
imul
pop
push
bound
mov
xor
clc
jmp
pop
or
cmp
or
pusha
dec
cmp
xchg
add
push
xchg
mov
jl
sbb
outsb
outsb
push
pushf
and
pop
pop
ret
push
jbe
or
daa
sti
gs
rorl
xor
xchg
out
lret
sbb
pop
fcoml
xchg
inc
jne
xchg
jae
icebp
mov
mov
xchg
ret
pop
lcall
popa
loope
sahf
orb
imul
xchg
test
mov
out
cmp
insl
inc
pop
cmp
dec
outsl
fxch
mov
add
mov
cld
cs
gs
subb
xchg
loopne
sub
push
std
jbe
push
out
lock
fildl
out
jae
fs
pop
daa
int
dec
dec
mov
push
hlt
and
outsl
mov
mov
cld
adc
rcrl
pop
leave
sub
addl
mov
xchg
leave
cmpsb
imul
or
cmp
mov
insb
cmp
popf
outsb
add
cmp
jp
mov
and
mov
inc
jl
and
sahf
enter
or
add
pop
aad
in
xor
xlat
sti
adc
sub
xor
orb
in
inc
data16
leave
mov
test
push
icebp
sub
mov
cmpsl
ret
jecxz
addr16
sub
xchg
lock
outsl
gs
loope
fsubrl
inc
sti
fsubrl
xor
xor
scas
jb
cmc
cwtl
lods
cmp
sub
xor
clc
dec
and
cmp
insb
mov
dec
add
xor
daa
inc
jle
movsb
jnp
pop
fnstcw
jnp
fsubl
inc
cmp
sub
ss
sub
pop
out
xor
jo
sub
bound
mov
dec
add
mov
push
sar
xlat
xor
xchg
fwait
bound
lcall
lcall
jns
mov
xchg
lcall
bound
xor
cmpsl
xchg
out
jg
mov
repz
cli
push
xor
out
std
in
push
out
jmp
sti
adc
ds
clc
ljmp
inc
jmp
push
xchg
mov
or
and
inc
cli
les
mov
cld
fs
fmull
popa
imul
cmpsb
push
mov
cmp
icebp
repz
cmp
push
inc
cmc
cmpsl
icebp
xor
push
push
xor
mov
cmpsb
adc
cltd
out
in
shrl
out
xor
cltd
sbb
imul
mov
cld
dec
icebp
dec
stos
imul
addr16
mov
orb
adc
mov
xor
insl
scas
int3
add
jle
and
and
xchg
push
stos
fwait
or
dec
into
mull
push
aad
xor
jns
addr16
inc
repnz
lods
aam
pop
xchg
add
incl
pop
test
push
push
stc
imul
enter
sub
xchg
ret
clc
xor
dec
std
mov
jbe
loop
cs
pop
or
cs
popf
fs
pop
scas
js
into
inc
add
rclb
inc
mov
mov
mov
jmp
outsl
int3
rcrb
or
movsb
notl
inc
fsub
int
aas
fidivs
pshufw
sub
sub
lret
cmp
pop
inc
mov
push
lods
jmp
mov
xchg
add
sbb
sarb
mov
pop
outsb
mov
test
fcomps
xor
cmp
test
push
fbstp
andl
jl
insb
mov
cmc
mov
sbb
fdivrs
out
iret
and
xor
aad
jne
in
xchg
flds
subb
xchg
inc
adc
std
out
add
xchg
rcrl
popa
js
into
insb
jae
aad
jmp
xchg
mov
add
nop
adc
xlat
insl
dec
shll
push
pop
mov
fs
add
sahf
scas
mov
repz
fcom
pusha
leave
pop
repnz
push
sbb
push
xchg
enter
push
mov
add
cmp
sbb
add
sub
pop
add
popf
ficoms
push
mov
add
bound
popa
inc
jns
xlat
and
in
fdivr
adc
add
xchg
sti
xchg
adc
mov
pop
pop
mov
test
scas
sub
and
int3
das
mul
sbb
adc
aas
mov
jecxz
testb
xchg
mov
cmp
lcall
and
cmp
nop
jp
stc
xor
addr16
sub
push
cmp
sti
jge
inc
roll
addr16
add
and
outsb
jp
pop
xchg
pop
repz
and
xchg
stos
lock
jg
ljmp
jnp
cmc
jae
pop
into
add
xchg
inc
call
push
and
push
add
mov
push
mov
cmp
inc
popf
call
jo
mov
repnz
das
pusha
outsl
add
xlat
adc
mov
addb
int
or
popa
sub
push
inc
lock
lret
push
xchg
mov
cmp
lahf
movsb
rcr
jbe
inc
adc
xor
es
loop
inc
lods
out
mov
dec
pop
cld
jno
subl
gs
fwait
or
jge
hlt
pop
push
aas
test
add
sti
pop
xchg
adc
add
negl
insl
add
mov
daa
stc
shll
aas
lods
cmp
and
aaa
mov
adc
mov
unpcklps
mov
setp
shlb
xor
jnp
jle
cmp
cli
aas
test
mov
por
adc
xor
mov
add
jbe
out
stos
inc
aam
ljmp
push
outsl
clc
and
lret
cmpsl
clc
or
in
ret
add
pop
dec
repz
cmpsb
mov
pop
jmp
cltd
push
out
xor
sbb
out
mov
cmpsb
nop
ljmp
sub
or
fldenv
lret
cmpl
jge
push
push
pop
pop
in
out
xchg
js
sub
xorl
and
xor
scas
lahf
test
xchg
mov
inc
jno
cmp
shrl
flds
aad
xor
dec
ss
sub
adcb
loope
mov
cmc
and
jle
out
mov
and
out
mov
stos
inc
and
or
mov
lahf
sahf
fidivrl
push
shll
push
jne
ret
dec
popf
fdiv
inc
mov
pop
dec
jne
inc
xchg
popa
dec
and
div
jmp
into
and
cmpsl
xchg
mov
pop
out
and
aam
or
loop
negb
mov
loope
pusha
jge
sub
mov
ret
or
sub
movhps
push
sbb
mov
dec
subb
movsl
mov
dec
mov
pop
xor
and
sbb
jo
sbb
sub
bound
das
dec
mov
loopne
add
push
jl
in
into
xor
adc
loope
sub
sub
xorl
sbb
push
jnp
inc
jg
jmp
push
adc
xor
sub
arpl
enter
or
add
sub
push
dec
jnp
fidivrs
lret
mov
out
xchg
lods
pop
and
cmpsb
fwait
and
dec
mov
sub
sub
mov
fsubrs
jmp
mov
add
jmp
and
inc
sbb
lahf
push
or
dec
movb
sbb
jae
cmpsl
xchg
sbb
test
sbb
outsb
jns
scas
insl
adc
and
inc
push
sub
imul
in
jo
test
inc
into
mov
xchg
stc
xchg
push
stos
shll
jmp
mov
xchg
jb
dec
push
jmp
lds
inc
adc
push
dec
cli
sub
cmpl
mov
cli
out
dec
dec
lcall
outsl
jmp
pop
push
inc
push
push
xchg
vcmpps
aad
repz
pop
pop
fstpl
aam
jae
xor
mov
mov
andb
mov
mov
or
aam
pop
addr16
psadbw
push
or
lret
jns
mov
mov
push
lret
pop
mov
mov
incl
jmp
in
out
dec
xchg
jne
rcrb
fmull
and
shlb
gs
shl
cld
cmp
call
cmp
imul
cmpsl
push
push
clc
mov
push
xchg
sub
repz
pop
push
addr16
mov
loopne,pn
dec
xchg
jmp
pushf
and
sbb
dec
pusha
repz
dec
fucomi
xor
ljmp
stc
daa
lds
pop
push
btc
negb
lcall
stc
mov
icebp
ss
mov
pop
enter
sarb
mov
mov
fxam
adc
push
repz
cmp
inc
mov
push
sahf
pop
bound
fsts
ret
das
int3
jle
push
in
repnz
jae
mov
clc
jo
daa
stos
mov
fldt
icebp
mov
push
out
test
stc
add
push
ss
in
movsb
mov
in
loopne
pushf
fwait
mov
mov
xor
push
mov
sbb
ja
mov
cwtl
fsubl
data16
push
das
mov
or
jp
mov
mov
shll
aam
lods
inc
push
scas
shr
pcmpgtd
push
mov
nop
sub
and
or
pop
icebp
mov
in
repnz
or
pop
or
xchg
movsl
mov
mov
out
jb
add
leave
xchg
gs
push
cmp
lea
repz
aas
aam
and
out
and
xor
cmpsb
dec
std
pop
or
and
or
scas
scas
mulb
cmp
insb
rcrb
test
or
and
sub
add
cli
movsl
jmp
clc
fistpl
outsl
sahf
fnstenv
mov
in
lods
adc
jecxz
mov
adc
dec
mov
push
mov
pop
mov
cmp
sub
or
and
lods
mov
or
mov
lea
sarl
arpl
enter
loop
daa
xchg
inc
addr16
mov
push
jge
stc
xchg
jno
xchg
mov
imul
fidivrl
outsl
fs
dec
imul
add
lods
enter
mov
push
and
fmuls
add
cmpsl
push
lcall
subb
daa
arpl
push
cs
int3
je
sbb
sahf
push
imul
xchg
mov
xor
dec
jle
fidivrl
pop
sti
cmp
xlat
mov
sub
and
inc
lock
loope
and
clc
popf
call
push
je
cmp
cmpsl
hlt
xor
xlat
or
xorb
rcr
fcom
ficoml
inc
ret
jne
out
xor
xor
jne
xchg
loope
jg
sti
lods
test
sbb
sbb
inc
mov
sbb
jne
adc
stos
in
out
rorl
adc
inc
add
call
cmc
ss
add
in
movsl
jge
mov
addb
sahf
push
add
cwtl
cltd
rol
pop
and
outsl
repnz
jg
movsl
sbb
dec
adc
cmp
cli
and
ja
mov
push
arpl
pop
in
and
pop
and
lods
cmp
ss
xor
stos
int
mov
test
ret
dec
lds
adc
int
dec
mov
pop
cmp
and
fnstcw
popf
repnz
mov
not
int
outsl
lds
js
std
das
ret
or
xchg
lods
scas
mov
xchg
mov
adc
jecxz
jns
dec
pop
push
push
mov
ljmp
insl
push
hlt
mov
cmc
sub
lds
mov
leave
in
loop
shll
or
adcb
mov
addr16
je
sub
das
cmc
pop
lock
mov
push
inc
xchg
inc
enter
sbb
adc
cmp
mov
arpl
pop
inc
inc
std
loop
push
add
pop
mov
mov
mov
sub
push
mov
mov
and
jmp
push
lds
shll
jge
sbb
mov
and
mov
mov
mov
mov
inc
pusha
movsl
lret
maxps
test
clc
add
lret
and
popa
or
add
push
jge
aam
cmpsl
hlt
mov
fildl
or
adcb
dec
cmp
jns
ljmp
shrl
cld
rol
rorb
mov
test
sahf
stc
ret
mov
pop
int3
cmc
mov
jnp
fdivl
scas
mov
leave
dec
sbb
jnp
iret
lcall
cmp
inc
push
stc
mov
sbb
push
rcrb
sbb
mov
jp
popf
scas
inc
loopne
dec
jae
inc
imul
adc
cmpsb
mov
pop
inc
dec
hlt
cltd
sbb
clc
mov
jle
subb
leave
shll
xor
xor
iret
sub
jno
in
pushf
les
ss
sbb
aad
mov
and
loop
mov
add
or
in
cmp
mov
sub
or
push
pop
push
ljmp
inc
or
imul
add
or
nop
sti
adc
mov
pop
jg
addl
scas
test
sub
lret
scas
or
push
pop
add
sub
cmpsl
xor
popf
dec
sarl
mov
outsb
dec
into
cmp
mov
sbb
sub
dec
jp
fcompl
xor
fucomip
fisttpll
lcall
jno
cld
pop
and
xchg
jo
xchg
inc
or
fsts
mov
and
mov
cs
fxch
cwtl
ds
push
insl
sub
and
lcall
jne
and
popl
push
lea
subb
jbe
shl
pop
lahf
fisubrl
mov
rcll
dec
imul
mov
sub
arpl
sbb
fisubs
pop
or
mov
pop
repz
cwtl
inc
out
mov
jnp
xor
push
fs
mov
add
and
les
push
arpl
xor
out
sbb
jmp
mov
cmpsb
mov
sbb
cli
or
mov
adc
jnp,pt
fidivrl
pop
mov
mov
ja
ret
xor
mov
pop
pop
or
jns
sbb
jns
add
dec
add
mov
fcoml
les
sti
add
jp
popf
lods
mov
push
ret
xor
push
and
pop
xor
arpl
pop
pop
movsl
ss
push
iret
lcall
fsubs
jns
cwtl
pop
pop
push
movsl
in
pop
pop
lret
jmp
repz
js
mov
shlb
stos
daa
push
int
or
fisubrs
jl
stos
and
cmpsl
clc
xchg
pop
das
out
push
fadds
add
push
push
mov
push
mov
sahf
jns
xor
cwtl
cmp
into
loop
in
mov
rol
adc
cltd
inc
xlat
mov
out
in
mov
cmp
push
fistpll
mov
sti
add
mov
xor
les
mov
mov
jnp
in
cmp
jns
and
lret
imul
jg
test
loopne
jmp
dec
or
pop
idivl
pushf
jb
ret
cltd
imul
mov
pop
in
movsl
push
add
movsl
movsl
xlat
xchg
imul
shlb
in
out
mov
sub
mov
xchg
dec
sub
pop
adc
or
jge
inc
fldl
push
pop
outsb
loop
aad
int3
dec
std
fwait
mov
inc
iret
or
xchg
xchg
cmp
push
shll
in
xorl
lea
jmp
mov
adc
dec
ss
jo
mov
clc
cmp
sub
xchg
jb
push
les
iret
scas
push
dec
in
dec
fcmovbe
pop
xchg
mov
ds
inc
cmp
js
mov
or
mov
insl
enter
in
ss
test
shr
push
pop
cmp
in
dec
fiaddl
idivb
outsb
xchg
fisubrs
xor
inc
mov
add
data16
and
fsubs
cmp
rolb
inc
pop
lds
xchg
ja
and
icebp
or
hlt
movsl
stc
adc
mov
push
stc
enter
pop
xchg
mov
aas
ljmp
imul
jns
add
lock
and
push
push
pop
xchg
fs
shufps
dec
jp
outsb
dec
cmp
jge
jecxz
push
mov
lcall
stc
pushf
insl
ss
loopne
and
out
jbe
cmpsl
ljmp
imul
pop
filds
pop
int
cmpsb
icebp
ss
push
jb
data16
imull
and
test
repz
and
mov
mov
xchg
stos
add
and
cmpxchg
pop
popf
jnp
pop
push
mov
stos
clc
mov
jnp
out
adc
mov
xchg
xchg
mov
enter
sub
jmp
sar
dec
ret
adc
mov
xchg
fxch
lods
xor
adc
pusha
cmp
mov
int3
repnz
das
jg
and
daa
stos
bound
in
imul
jp
or
std
or
call
xchg
insb
adc
fistps
pop
and
fcmovbe
call
insl
enter
mov
push
into
adc
and
aad
jae
push
nop
mov
aaa
pop
and
sbb
sub
push
test
xor
mov
ficoml
scas
data16
mov
and
adc
push
rcll
into
shl
out
fwait
in
imul
add
xorb
xlat
inc
inc
push
mov
cmp
jle
into
cmp
inc
fprem1
fcmovnu
pop
sarl
ja
push
inc
inc
xchg
jl
xchg
inc
add
out
dec
mov
mov
mov
loop
cmp
test
icebp
pop
test
rcrl
xor
mov
sbb
inc
xor
jno
pop
arpl
shrb
daa
fistpll
cmp
push
sbb
sbb
in
mov
lock
movzbl
je
inc
add
mov
push
sbb
xor
lret
testb
xor
jae
jg
lods
and
mov
xor
shrb
andl
jnp
cmp
push
aam
les
push
fcmovne
and
push
in
push
lods
pop
jge
stos
mov
mov
pop
mov
and
jp
out
ret
xchg
je
daa
mov
cmp
scas
test
pusha
addr16
in
pop
mov
repz
filds
or
xor
pop
lcall
jo
int3
sbb
les
mov
ret
outsb
xor
xor
pop
iret
add
daa
loop
dec
pop
roll
cs
xchg
test
nop
lret
mov
or
jl
mov
subl
inc
imul
rcrl
ljmp
sub
fprem
push
bound
pop
mov
rclb
sub
sub
outsb
jae
lahf
les
push
sbb
adc
adc
arpl
out
in
jge
call
or
fildll
cwtl
dec
scas
fists
and
pop
cmc
enter
jmp
test
and
rcrb
push
xchg
sbb
adcb
repz
subb
nop
inc
daa
xlat
push
out
push
add
push
jmp
sbb
movsl
mov
inc
jo
cmp
adc
jl
sti
mov
push
fs
dec
mov
movsl
sub
addr16
rcrl
dec
xlat
lret
jmp
sub
add
xor
and
divb
cmp
mov
ret
xchg
es
or
xchg
mov
jmp
lock
pop
ds
pushf
jo
add
jg
das
aam
fimuls
push
or
lret
imul
pop
cli
xchg
xor
add
and
mov
push
and
mov
stos
mull
xor
mov
mov
mov
mov
mov
pop
lea
dec
mov
mov
inc
mov
or
push
sub
dec
call
mov
adc
pop
sbb
dec
xor
jp
mulb
lahf
or
push
sbb
sub
lea
push
mov
stos
cmp
add
pop
mov
fcom
int3
or
sarb
push
test
jge
aaa
sbb
jle
and
or
cmp
add
ja
orb
push
ret
bound
sti
outsl
pop
cmp
jae
mov
cltd
mov
sbb
xchg
mov
inc
add
repz
pop
mov
mov
stos
inc
in
rcrb
pop
mov
add
mov
push
bound
fisttpl
pop
call
cs
jbe
push
and
fcomps
sub
stos
outsl
sbbl
mov
out
mov
xor
mov
shrb
inc
pusha
inc
sub
ss
rcrl
lret
xchg
adc
pop
mov
adc
mov
jne
imul
mov
adc
jo
pop
in
cmp
hlt
jg
clc
gs
stos
mov
rcrb
scas
sbb
fmul
add
jns
push
pop
dec
fsubl
sbb
mov
or
aaa
in
cltd
push
nop
mov
shll
push
lret
in
clc
mov
fidivrs
in
or
fists
jle
add
mov
adc
mov
sub
xchg
fmuls
and
jmp
in
push
lock
movsl
sbb
and
mov
jae
jnp
aad
fld
imul
lea
fwait
negb
test
or
cli
and
xchg
bound
xor
xchg
lods
inc
pop
scas
sub
imul
cmp
xor
inc
cmp
and
out
mov
xchg
fldcw
scas
push
das
xchg
xorl
imul
push
nop
les
sbbl
test
out
adc
icebp
pop
jnp
push
shrb
sbb
mov
movsl
je
and
jmp
sub
clc
clc
jle
inc
sbb
and
sbb
jmp
xchg
mov
int3
fs
or
jp
repz
pop
sbb
cmp
cmp
mov
cmp
jno
addb
dec
dec
mov
mov
cli
pop
mov
test
dec
iret
or
jbe
jge
inc
push
mov
ret
inc
mov
into
mov
int3
pop
cwtl
in
popf
xchg
pop
test
xor
std
xchg
out
ljmp
mov
mov
cmp
testl
pop
jnp
jmp
fsubl
cmp
push
and
outsl
or
mov
jb
inc
cmpsl
lods
lret
stc
and
pusha
xadd
push
sbb
inc
lcall
fildl
xchg
jecxz
push
push
inc
pop
push
inc
jmp
gs
scas
xchg
xchg
fsubr
pop
inc
dec
lds
cmp
aas
inc
cmp
pop
cli
fucomip
pusha
fcompl
lret
xor
mov
sbb
cmp
enter
test
aas
jl
arpl
push
xor
loopne
rol
jmp
xchg
daa
pop
lods
scas
mov
pop
ljmp
sub
rcr
inc
ss
lods
fwait
in
push
add
or
mov
fisttpll
or
add
and
and
jno
xchg
lahf
xor
mov
adc
test
inc
xchg
adc
and
or
xor
jne
outsl
sbb
test
lahf
adc
add
popf
xlat
fwait
cmp
xchg
cmp
fwait
daa
sbb
or
mov
cs
sbb
ficompl
dec
sub
mov
lret
add
int3
mov
cltd
call
inc
mov
fidivs
push
inc
je
int3
lods
int3
push
dec
dec
push
dec
push
add
mov
dec
gs
mov
xor
push
rol
inc
data16
mov
mov
fdivr
jb
rcl
cmp
shll
std
pop
jge
push
add
arpl
pop
and
push
cmp
mov
push
cmpsb
dec
int3
shrb
pop
test
frstor
hlt
push
dec
pop
mov
jns
rcrb
and
call
enter
insb
add
adc
xchg
lock
jecxz
outsl
adc
mov
sbb
cmpsl
and
jbe
in
aad
and
push
js
mov
bound
rcrl
out
dec
aam
movsb
enter
fs
lds
fiaddl
push
mov
shlb
mov
pop
add
repnz
sub
adc
cld
or
aad
dec
mov
jbe
mov
xchg
jno
mov
xchg
dec
mov
cmp
mov
sub
cmp
cmp
pop
movsb
lret
out
and
mov
sbb
jle
dec
cmpsl
mov
bound
imul
lcall
or
pop
les
and
int
int3
push
and
mov
rclb
dec
push
mov
cld
rorl
arpl
mov
int
xor
mov
leave
cli
ja
cmc
mov
loope
mov
outsl
mov
paddd
mov
sbb
dec
repnz
enter
mov
jnp
mov
push
sahf
adc
jae
test
repnz
mov
subl
jge
cmpsb
incl
arpl
xorb
jno
and
adc
mov
xchg
cmp
shrb
pop
lret
js
mov
mov
out
iret
add
jmp
lcall
sbb
out
pop
jmp
cmc
jb
mov
int
out
dec
lea
mov
ljmp
mov
xorb
inc
pop
and
hlt
out
int3
in
int3
stos
mov
push
jle
xor
mov
insb
cmc
mov
sub
adc
ret
pop
lcall
and
add
cmp
fs
das
inc
jae
outsb
shrb
jbe
js
out
aam
movsb
push
sar
aaa
xchg
mov
xor
out
das
mov
nop
mov
popa
fisubrs
fmuls
movsb
jmp
push
push
cmc
loop
and
push
mov
sub
loop
push
dec
pusha
lods
aam
inc
pop
pushf
adc
or
mov
jb
push
cmp
sahf
xchg
jnp
push
movsl
flds
xor
and
shrl
jle
mov
in
inc
inc
mov
cmp
loopne
jecxz
shll
lods
ret
dec
jp
je
fnstenv
jmp
ss
sub
jne
adc
movsb
ret
sub
dec
hlt
jo
jg
xchg
sbb
pop
xor
out
push
pop
fcoml
jmp
leave
call
adc
and
jb
call
push
mov
js
test
xchg
int3
pop
pusha
pop
mov
xchg
inc
fdivrl
int
dec
push
mov
push
bound
sbb
mov
shrl
dec
xor
jne
add
mov
mov
test
lret
add
stc
xchg
data16
cmp
pop
cmp
or
mov
outsb
pop
cwtl
and
mov
sarb
arpl
cmpsb
mov
sbb
or
mov
je
jmp
and
mov
inc
int3
pop
int
iret
addb
sub
jns
dec
adc
aaa
mov
ret
mov
fsubs
push
or
shlb
jbe
loope
fistpll
sbb
pop
sub
jecxz
add
jo
pop
jnp
sbb
cmpsb
andl
xlat
inc
fisubs
sbb
xchg
sarl
out
ss
sbb
rcrl
icebp
jecxz
mov
fldl
sub
mov
mov
sbb
js
or
ja
push
pop
push
data16
ljmp
jl
sub
pop
xchg
xor
mov
rcrl
cmp
mov
dec
aaa
fidivs
outsb
in
sub
enter
les
jae
leave
stc
sbb
mov
xor
mov
jecxz
int3
sbb
sarl
jl
mov
add
imul
leave
gs
pop
ret
lods
inc
repnz
out
add
jbe
fiaddl
dec
mov
jae
add
mov
xchg
in
xchg
jbe
xchg
cmpsb
cltd
cs
ffree
daa
or
fwait
mov
out
inc
negb
sbb
outsb
imul
xor
loope
sahf
rorb
in
jle
jl,pt
scas
and
mov
xchg
jnp
mov
ret
sbb
or
ret
add
fmull
mov
lds
icebp
insb
fisubs
out
rcll
xor
xor
sub
jecxz
jns
or
in
outsl
repnz
imul
cwtl
jo
data16
ds
pop
cmp
cmc
and
push
enter
cmc
push
loope
iret
in
in
push
imul
push
adc
daa
cmp
cmp
mov
lock
popf
sbb
push
or
push
test
add
cmp
cwtl
sbb
jmp
imul
xchg
cmp
aam
pop
sbb
jg
fwait
movsl
nop
test
fldt
jno
scas
test
subb
inc
movsl
movsb
jp
cmp
pop
jae
jno
in
mov
js
ja
pop
insb
std
dec
out
xor
sub
lret
and
sub
mov
lods
pop
stc
inc
inc
movl
lea
cs
ds
idivb
add
mov
stos
cmp
subl
add
in
rcll
add
push
fs
int
pop
scas
sub
and
add
aam
adc
mov
sub
popf
aad
cmp
mov
push
arpl
and
adc
inc
repnz
wbinvd
fxch
repz
xor
inc
ror
repnz
les
adc
jle
inc
inc
inc
add
jnp
out
insl
imul
sbb
and
rclb
mov
mov
add
mov
repnz
xlat
mov
push
sti
insb
xor
sbb
jge
push
cli
dec
mov
inc
fadd
mov
leave
mov
add
mov
add
cmp
cmpsb
sub
dec
in
jle
scas
fxch
jp
jmp
adc
jnp
xchg
lret
imul
lret
push
pop
stos
mov
push
push
jg
adc
dec
or
popf
iret
bound
xor
daa
sub
mov
add
xchg
sbb
repnz
daa
inc
mov
scas
and
fdivrl
jbe
ljmp
scas
jne
clc
add
fbstp
mov
inc
jne
lods
adc
sub
pop
adc
mov
in
and
pop
imul
jnp
mov
fmull
imul
dec
sub
shrl
mov
in
and
sbb
aas
clc
jnp
idiv
aam
ljmp
inc
fiadds
mulb
lds
mov
fdivs
xchg
push
dec
js
cwtl
cmc
jge
fistl
push
pushf
jo
jecxz
mov
jl
pop
in
sbb
xchg
in
jecxz
mov
push
pop
stc
dec
stc
xchg
mov
push
insb
repnz
in
adc
jmp
ds
and
aaa
cmp
test
lods
in
mov
loopne
adc
jmp
sub
lcall
fbstp
or
xor
fmul
mov
hlt
dec
and
movsb
jno
and
mov
or
sub
push
loop
je
out
jnp
xchg
ficomps
outsb
pop
mov
jns
nop
ljmp
in
outsl
cmpsl
cvttps2pi
mov
dec
cmp
fwait
sub
and
lea
cmpsl
dec
into
jge
mov
loopne
cmp
mov
jae
mov
pop
outsb
sbb
xor
fisttpl
std
pop
daa
mov
adc
xor
or
adc
lods
pushf
mov
fcomps
fwait
mov
repz
outsb
stc
pop
lcall
xlat
mov
dec
dec
loop
xor
mov
mov
push
popa
rcrb
inc
into
or
sti
add
jns
mov
pop
rcll
popf
loope
outsb
and
xchg
sub
jl
mov
outsl
xchg
int3
pop
insl
push
and
or
xchg
pop
inc
int
push
test
popa
addr16
dec
xchg
imul
into
loop
xchg
jle
dec
sbb
in
test
mov
pop
jmp
mov
repz
andl
mov
insl
or
mov
dec
cmpsb
pop
movsl
ret
mov
mov
test
push
test
pop
mov
fsub
push
cs
test
out
dec
out
push
jp
mov
and
std
test
cli
xlat
cmpsl
ljmp
jne
aam
int3
icebp
push
popa
test
mov
or
jne
xchg
jmp
mov
mov
not
xchg
out
popa
xchg
popa
clc
mov
inc
push
mov
loope
mov
data16
or
and
aaa
xor
cwtl
outsl
xor
das
mov
cwtl
orb
add
dec
cmp
jmp
mov
pop
inc
aaa
add
jnp
mov
aam
sbb
mov
out
mov
enter
xor
clc
pop
int3
shll
insl
test
cmc
cmp
cld
dec
sahf
mov
pop
leave
jo
decb
or
fbld
mov
or
lock
std
mov
and
fs
subl
mulb
cwtl
mov
pop
sbb
es
adc
daa
add
adc
adc
decl
lcall
fwait
pushl
test
dec
call
negb
jmp
rcrl
ret
and
inc
sbb
jg
nop
or
dec
cmp
ss
aaa
testl
push
lods
stc
in
shll
test
mov
inc
inc
jnp
lds
rcrl
xor
dec
mov
loop
hlt
mov
xchg
inc
dec
pop
flds
les
psubsb
push
jp
mov
arpl
push
loopne
push
scas
cmpsb
push
push
popf
outsb
inc
divl
cmp
shll
sbb
pop
mov
out
xor
enter
jle
es
loop
scas
push
ljmp
pop
pop
mov
pop
sub
out
in
inc
pop
jecxz
mov
xor
pop
aas
lds
shll
clc
popf
fs
push
and
mov
xchg
fdiv
loope
pop
mov
inc
mov
mov
mov
push
or
jmp
adc
test
loope
xchg
test
dec
fstpt
dec
divl
add
lcall
jg
aaa
dec
nop
popa
ljmp
rolb
pop
shll
bound
push
test
jmp
mov
jno
mov
icebp
daa
hlt
lea
loopne
lret
leave
push
jns
enter
std
lds
jp
adc
das
mov
xchg
mov
and
sub
xchg
idivl
push
pop
pop
sbb
aam
popf
mov
rorl
lds
push
inc
fildll
test
int
xorl
enter
dec
push
sbb
mov
dec
inc
rorl
mov
movsl
repnz
mov
loopne
sbb
into
dec
sbb
cli
in
lds
sbb
xor
test
iret
push
outsb
mov
mov
lock
loope
inc
jbe
pop
cmc
ret
lea
test
dec
jbe
xor
repnz
jle
imul
jge
or
les
fiadds
sahf
das
cmp
out
sub
pop
scas
fdivr
aas
lahf
out
dec
nop
movsl
and
or
xor
or
les
or
cli
lahf
add
sbb
mov
sbb
xchg
push
call
xor
iret
stos
scas
negb
dec
lret
lahf
push
fisttpll
add
adcl
imul
add
push
adc
daa
inc
mov
xor
ds
fldcw
jl
negb
aam
mov
adc
cmp
jbe
jle
cmp
int
insb
dec
push
xor
cld
sbb
mov
xor
add
cmp
test
cmp
test
ret
push
testl
call
jne
mov
or
mov
push
pop
outsb
and
das
ja
sub
jl
mov
dec
mov
and
insl
or
int
xorl
adc
movsb
mov
notl
cwtl
cmp
outsl
sahf
outsl
outsl
adc
rcr
adc
xchg
jle
mov
loope
imul
xchg
rcrl
mov
dec
mov
sti
ljmp
jo
mov
lret
mov
add
xlat
inc
lret
sub
repz
sub
sbb
aad
push
xchg
sti
adcb
loopne
rcl
dec
ljmp
lret
mov
lds
xchg
ss
or
rcrl
xor
out
mov
imul
idiv
xor
add
jb
mov
rcrl
gs
test
stos
xlat
and
data16
pop
add
push
adc
outsl
outsb
mov
fildl
xor
ret
xor
sti
mov
int
mov
jle
inc
leave
cltd
mov
mov
movsl
mov
pop
dec
and
dec
fprem
in
jp
outsb
xchg
popf
pop
mov
inc
push
ret
mov
xlat
sbb
stos
arpl
sub
xchg
mov
or
shrb
push
jae
fsts
mov
popf
sbb
repz
push
clc
mov
mov
loopne
insl
fisttpl
fldl
push
sbb
fdivrs
mov
je
xor
sbb
into
out
push
xor
mov
in
ds
dec
imul
rorb
mov
stos
loopne
or
sbb
jne
cmp
out
ffreep
mov
adc
inc
sub
lods
push
repz
sbb
ja
mov
stc
inc
out
pushf
dec
push
jbe
mov
aam
pushf
inc
cmp
sbb
jmp
jl
icebp
jg
roll
hlt
mov
fcomps
mov
push
jb
aam
shll
xlat
lock
dec
jge
sbb
jmp
cmpsb
ret
iret
mov
fnstsw
pop
sbb
testb
pop
ss
mov
ljmp
cmp
in
xor
cli
sbb
cmp
shrb
push
mov
xor
add
out
ds
ret
mov
push
das
sub
in
mov
mov
rcrb
adc
inc
xor
adc
xchg
mov
lea
inc
dec
push
imul
mov
push
cld
pop
push
lds
sbb
call
sbb
mov
pop
pop
xchg
mov
mov
pop
xchg
and
cmp
xor
push
stc
jg
dec
mov
jp
xchg
lods
adc
add
push
push
add
add
add
or
pop
lcall
test
pop
imull
mov
lahf
repnz
push
sbb
test
ret
xlat
arpl
mov
inc
and
xchg
mov
xor
pop
add
stos
pop
mov
cs
sbb
mov
mov
or
mov
pop
adc
mov
jmp
enter
imul
aaa
dec
mov
imul
cmp
js
sbb
adc
insb
mov
dec
adcl
dec
mov
cmp
mov
insb
dec
movsl
jnp
scas
adc
dec
fmull
add
lods
push
aas
insb
ficomps
cmp
mull
pop
cmpsb
js
adc
fs
std
sbb
ds
cmpl
loop
mov
cmp
rclb
mov
out
cmpsl
out
imul
sbb
shrl
call
movsb
dec
repz
adc
test
cmp
int
ss
dec
dec
inc
imul
mov
mov
orb
sub
sbbb
mov
mov
dec
adc
inc
icebp
sbb
or
mov
ds
or
outsl
pusha
div
and
cmp
sbb
lea
test
pop
sub
cli
mov
adc
inc
mov
push
mov
dec
add
add
xchg
aaa
sbb
lcall
push
lods
out
pop
push
jbe
mov
imul
pop
imul
sbb
mov
xor
dec
and
or
jecxz
push
xchg
inc
aad
jl
fldl
lds
mov
sub
xchg
xor
and
ficoml
push
call
cmc
iret
repz
lods
mov
jnp
icebp
sahf
add
pop
inc
ror
dec
pop
cmp
jns
fistl
mov
jae
in
shrb
adc
xor
cmp
loop
in
sbb
in
stos
mov
lods
aas
push
andb
xor
pop
shrb
dec
jne
mov
jns
jecxz
sbb
in
lahf
xor
xor
into
cs
dec
sbb
xchg
subb
jae
inc
dec
insl
rcrb
push
cli
ret
call
jmp
mov
cmp
idivl
mov
scas
sbb
push
adc
dec
shr
notb
shll
cltd
fadds
dec
add
hlt
andw
pop
or
aaa
xchg
mov
ret
inc
xchg
adc
xor
call
mov
pop
xchg
cmp
test
daa
sbb
xor
enter
pop
adc
mov
mov
xchg
adc
rclb
pushl
cwtl
lret
insl
mov
jae
or
pop
mov
dec
push
xchg
icebp
imul
dec
cmp
dec
call
sub
adc
sarl
sbb
in
mov
mov
inc
mov
adc
scas
fcmovnbe
jae
mov
jno
mov
adc
lods
push
xchg
lods
sub
jns
pop
fcomps
push
pop
push
pop
and
pop
push
dec
mov
jg
in
jp,pn
fildll
dec
rcrl
xor
pop
hlt
add
push
push
mov
mov
xchg
aad
push
xchg
lret
in
mov
xchg
cmpsb
add
pop
xor
and
mov
scas
mov
das
mov
jne
pop
or
add
xchg
je
adc
lret
pop
clc
negb
popl
push
lods
sar
xor
push
iret
pop
mov
jns
or
or
add
lock
cs
ljmp
add
scas
sub
mov
cmpsl
mov
mov
mov
add
stos
and
jl
in
loopnew
idivl
jl
inc
mov
mov
xchg
int
stos
fmul
pop
pop
out
inc
shlb
stos
dec
mov
cmp
sahf
dec
mov
mov
adcl
faddl
and
mov
adc
popf
repz
rcll
insb
rorb
push
jnp
lods
movsb
or
mov
icebp
test
in
mov
lea
loopne
ret
imul
inc
adc
pop
lret
cs
stc
sub
push
dec
xchg
repz
or
jle
push
push
cmp
cmp
rorb
cld
js
cmp
scas
adc
xchg
mov
push
int
fadds
mov
into
ja
and
sub
mov
jmp
sbb
inc
pop
pop
test
or
mov
adc
arpl
cmpsb
sbb
jg
mov
xchg
enter
test
add
or
adc
into
stos
jecxz
cmp
push
fs
pushf
xor
push
or
or
fisubs
pop
pop
xchg
fisttpll
inc
stos
popf
cwtl
das
icebp
and
add
cs
pop
andb
mov
test
mov
dec
and
ret
cli
xchg
popa
repz
adc
xchg
push
push
mov
sub
add
lods
sbb
ret
jge
add
xchg
rcrl
hlt
xor
bound
in
and
mov
scas
mov
shrl
jp
jnp
jle
adc
daa
int
std
pop
and
xchg
inc
adc
out
sub
insb
in
out
pop
xor
and
mov
inc
sbb
xchg
sbb
pop
cld
enter
dec
pop
push
dec
dec
dec
jg
push
push
adc
push
mulb
in
test
xchg
xchg
out
jg
ja
enter
push
popa
ja
mov
push
sbb
sub
leave
push
push
inc
mov
lea
cmpsl
push
int
jns
aaa
cmp
mov
ljmp
lcall
xchg
xor
mov
aam
jno
mov
pop
adc
loopne
xlat
xchg
jle
dec
ss
jp
clc
cmp
push
cltd
sub
pop
les
mov
mov
push
dec
jns
loope
pop
push
les
lret
mov
ja
pop
jl,pt
jbe
add
inc
into
lcall
bound
aas
dec
add
lods
in
xor
ds
iret
mov
cs
lret
jle
outsl
or
das
lds
dec
add
cmp
loop
xor
jle
int
loop
or
xchg
add
lret
dec
push
dec
js
out
mov
stos
push
or
insb
and
outsb
cmp
insb
out
ss
pop
cmpsb
icebp
push
ds
insl
cmp
pop
in
clc
out
xchg
adc
mov
test
xlat
inc
fwait
mov
xchg
out
popa
ror
outsb
ret
push
imul
pop
in
fidivs
pop
mov
out
xchg
leave
cmc
mov
iret
mov
xor
clc
popf
fs
outsb
xchg
fidivs
push
jmp
cltd
mov
int
inc
in
out
lahf
shl
mov
icebp
push
xchg
jp
rcrb
das
sahf
mov
cmp
jnp
mov
xor
jmp
into
loope
cmpsl
out
mov
or
lock
jb
sub
mov
ret
cmp
or
adc
sbb
lock
aam
mov
movsb
sub
cmpsl
adc
and
test
lcall
add
xchg
and
xchg
or
add
pop
lods
mov
push
sbb
sub
cs
dec
dec
jl
push
pop
stos
mov
in
ljmp
mov
ret
push
pop
xor
mov
jecxz
and
add
jnp
cmpsb
lret
es
mov
add
pop
dec
push
jb
push
inc
fdivrs
push
out
jne
jge
or
jne
popa
or
mov
mov
push
jg
xor
rcrl
stos
jmp
insl
lcall
push
les
fcmove
into
push
cmp
movsl
repnz
loopne
jbe
test
mov
inc
dec
shrb
mov
pop
mov
add
jnp
dec
xchg
sbb
push
pop
sahf
sub
roll
sub
rorb
test
jge
push
mov
loopne
jge
ja
mov
cmp
jbe
mov
dec
fldenv
rolb
test
cmpsl
dec
hlt
and
loopne
add
es
and
ds
loopne
clc
pop
mov
jmp
add
cltd
sbb
xchg
subl
push
call
or
pop
mov
push
adc
dec
lcall
aaa
mov
repz
mov
push
call
inc
repz
imul
sbb
in
dec
mov
sahf
jbe
xor
jle
cmc
and
mov
lcall
shrl
pop
lods
inc
aas
in
pushf
in
fisubs
outsb
icebp
mov
movsl
adc
les
jae
test
out
mov
clc
xlat
cmpsb
pop
nop
push
jnp
inc
pop
push
fisubl
fldz
retw
repnz
shll
or
call
inc
fsubrs
jne
rclb
imul
xor
sub
outsl
sub
xchg
jbe
push
xor
std
cmp
push
xchg
jne
and
das
cltd
jge
or
aaa
pop
mov
mov
sbbb
out
adc
test
push
out
mov
xchg
xlat
test
fisubs
mov
xor
inc
out
js
mov
test
in
icebp
hlt
xlat
inc
or
sub
ret
mov
sahf
fadds
mov
cmp
xchg
sub
mov
loop
cmc
sbb
stos
inc
repnz
aam
push
das
pop
test
pop
push
cmpsl
shl
or
sub
dec
lods
dec
or
mov
aam
mov
inc
inc
test
dec
leave
outsb
test
cmp
push
ficompl
inc
imul
dec
loop
add
jg
jnp
mov
dec
dec
cli
or
jge
inc
pop
dec
mov
call
push
jmp
adc
mov
xchg
cmp
push
adc
mov
push
hlt
iret
jnp
or
push
movsb
popf
hlt
mov
mov
mov
dec
pop
mov
adc
xlat
int
adc
std
push
in
sti
das
clc
mov
ja
and
push
push
jl
xchg
mov
movsb
sub
xor
out
stos
inc
ss
cmp
sbb
mov
rorb
mov
jnp
mov
xor
call
orl
add
jns
dec
push
fmuls
cmp
sub
sbb
sbb
std
sub
push
or
test
cmpsb
inc
and
xlat
mov
jmp
fimuls
aaa
jg
mov
out
ret
jle
fmuls
add
clc
loope
popa
mov
mov
adc
dec
push
mov
sub
lret
jb
mov
test
imul
fs
sub
lods
nop
pop
stos
pusha
inc
mov
ljmp
hlt
movb
pop
add
sbb
arpl
dec
popf
sarl
icebp
sti
shll
fisubrs
out
pop
xchg
xchg
pop
mov
mov
scas
cwtl
addr16
rolb
clc
in
sti
mov
mov
push
fisttps
mov
js
insb
out
sub
aad
and
cli
or
or
ds
adcb
inc
popa
pop
imul
lcall
aaa
out
inc
aam
push
test
lahf
jbe
mov
pop
adc
pop
test
jo
add
jae
cmc
rcll
cmpsb
movsl
adcl
mov
in
sub
cltd
cwtl
add
fcomps
pop
xor
pop
xor
push
cltd
add
mov
xor
and
loope
test
or
xchg
mov
clc
xchg
mov
das
sub
adc
push
xor
xchg
enter
mov
cmp
enter
and
mov
add
pop
test
sbb
xor
jmp
in
push
sbbb
sbb
sub
xchg
sbb
push
jl
xor
js
aam
mov
xchg
in
ret
sbb
xchg
adc
cmp
adc
std
xchg
push
std
add
xchg
jp
cmpsb
cmp
repz
mov
shlb
scas
cmp
test
dec
or
sub
hlt
fnstcw
pop
mov
xor
aad
ss
adc
lret
incl
out
movsb
adcl
lahf
adc
inc
sbb
add
sbb
lahf
outsl
stos
in
sbb
and
jb
pusha
mov
in
cmp
repnz
sbb
xchg
push
jmp
dec
mov
pop
add
popa
or
push
push
cs
jne
xchg
outsl
dec
push
dec
mov
pushw
mov
sub
daa
movsl
pop
cmpsb
xchg
icebp
push
mull
lea
push
jmp
adc
data16
je
push
pop
jg
push
sub
stc
inc
or
lcall
xchg
push
ffreep
push
xchg
call
sahf
lret
movsb
jno
jo
popf
mov
push
mov
jns
or
pop
fwait
xor
inc
sub
mov
xchg
mov
adcl
test
push
fisubs
data16
pop
fsubrs
aad
dec
idivl
lcall
in
aaa
bound
inc
sbb
out
stos
loopne
push
sub
mov
pop
outsl
fwait
or
add
out
int3
popf
ds
adc
cmp
sahf
jg
mov
mov
add
aam
jbe
pop
sbb
cmp
into
sbbb
and
xchg
stc
mov
orb
push
mov
xchg
sub
out
inc
mov
cltd
jnp
xor
pop
fidivrs
test
add
mov
incl
test
daa
loopne
or
xchg
pop
xor
sbbl
ret
iret
rolb
push
int3
cltd
mov
das
sub
mov
cmp
pop
cli
inc
imul
adc
sbb
cmp
popf
les
or
and
dec
ret
sub
mov
mov
insb
xchg
imul
mov
mov
dec
cmpsl
rol
xchg
roll
add
jp
adc
aam
xchg
data16
pop
adc
push
mov
movsl
and
bound
call
xchg
cs
outsb
push
stc
mov
cmp
jnp
pop
enter
jle
ficomps
jnp
inc
test
fsubl
out
pushf
inc
jg
ds
sbb
sbb
out
pop
lahf
xor
add
insb
or
mov
fmull
xchg
sbb
xchg
jbe
daa
pop
and
gs
jbe
jo
xor
xchg
lret
push
pop
int
clc
mov
fildll
jns
push
mov
mov
fisubl
or
loopne
mov
fstl
jecxz
mov
icebp
aad
scas
cwtl
jle
mov
loop
mov
push
adc
pop
sub
xor
inc
or
jl
inc
xchg
insb
cld
adc
ja
adc
and
push
mov
cmp
mov
xor
sbb
movsb
into
sti
jno
mov
mov
out
jno
xor
adc
mov
jb
pop
je
nop
and
and
fwait
pop
lock
outsb
shrl
lods
gs
sbb
movsb
lret
cmp
xor
inc
add
lret
adc
fiadds
adc
js,pt
lods
push
fldenv
or
rorl
notl
out
push
inc
mov
jge
mov
lret
lfs
das
lock
adc
scas
xor
cmp
cmp
dec
imul
decl
mov
and
and
xchg
jp
test
xor
jp
push
pop
call
iret
les
out
lock
push
leave
dec
push
ffree
outsb
mov
inc
cmp
cmc
inc
jmp
pop
lahf
sti
in
mov
jmp
insb
ror
inc
test
flds
adc
pusha
dec
inc
push
inc
cmc
push
mov
adc
xlat
push
jb
nop
movsl
mov
out
fisubrs
repz
xchg
mov
cmp
jb
sbbb
cmc
jge
jae
inc
add
and
fwait
xor
push
push
or
jge
and
jns
push
mov
jecxz
or
add
setp
mov
dec
insl
loop
nop
xor
sub
shl
int
xchg
imul
xchg
sti
es
push
loope
push
xor
and
mov
or
int3
and
cld
cmpsb
fiadds
dec
dec
sub
push
repnz
inc
or
ficoml
adc
popf
mov
push
push
icebp
lret
jne
xor
lds
or
pop
sub
rolb
fistpll
ret
add
push
shrb
lods
data16
ja
arpl
sub
inc
and
fnsave
dec
mov
sti
clc
ret
mov
mov
shrb
test
cmp
and
cmpsb
or
mov
cmp
sar
add
mov
shll
pusha
lods
jl
add
inc
movsl
xchg
xor
push
fstl
cmp
shr
in
imul
and
leave
repz
jo
push
int
lret
cmp
adc
aaa
pop
push
sub
xchg
mov
lods
addr16
sbb
cs
dec
inc
stc
mov
sub
lahf
dec
addr16
and
jl
inc
pop
fists
mov
std
push
cmpl
rcl
mov
fisubrl
dec
fiadds
add
dec
mov
andl
push
vandnpd
jmp
test
cli
out
rcr
lcall
jmp
push
jbe
adc
xor
lcall
shlb
sub
xor
push
loopne
pop
dec
or
testl
dec
xchg
insb
jo
cmp
xchg
scas
mov
sbb
data16
fadd
cmpl
dec
lods
jno
and
lods
cmp
dec
push
rcl
lret
push
in
xchg
cmpsb
test
mov
xchg
ret
mov
sbb
mov
and
push
test
test
subb
in
mov
add
dec
cmpsl
insl
mov
stos
jg
dec
cmp
xchg
cld
and
ss
mov
push
rclb
out
and
or
push
mov
cmp
mov
add
iret
pop
jne
jae
lcall
cmpl
fnstenv
aaa
or
js
subl
dec
mov
cmpsl
mov
jae
in
cltd
xlat
push
or
sub
shr
xorb
hlt
inc
pop
cld
mov
lret
icebp
push
fcoml
dec
jg
cmp
jno
dec
fcmovnb
push
push
insb
fwait
lds
shr
sahf
mov
loop
ret
icebp
int
pop
sbb
xchg
cld
push
dec
sti
mov
int
imul
leave
in
neg
fwait
test
stos
add
jns
jno
cmp
jno
stos
mov
jg
xchg
mov
mov
ds
shrb
push
sub
outsb
pop
jo
sbb
repnz
lret
jp
jne
out
ds
dec
addr16
inc
cltd
mov
addr16
pop
xchg
mov
cmp
add
stos
loopne
shrl
loope
sti
and
shl
push
jmp
mov
add
adc
xor
lock
popa
pusha
inc
nop
sbb
xchg
cmp
or
int
scas
imul
imul
mov
jnp
jge
outsb
or
mov
sub
shll
cld
call
fiadds
jg
or
repnz
mov
xor
ret
ds
or
ja
loope
sahf
das
xchg
gs
push
outsl
xlat
fwait
jno
cld
dec
call
loop
dec
add
imul
mov
sahf
sahf
in
xchg
push
cmpsb
lock
ficompl
sbb
push
xchg
bound
sub
mov
nop
dec
inc
jb
ljmp
mov
andb
and
hlt
paddusw
jne
mov
scas
push
and
mov
andb
mov
mov
or
daa
jb
testl
enter
mov
js
fdivl
push
rolb
jp
jne
cmp
sub
jp
jo
js
lock
iret
jno
lods
cmpsl
adc
inc
mov
cmpsb
mov
stos
and
lahf
es
insl
cmpl
jle
and
jp
mov
adc
push
in
and
fcompl
mov
lahf
lea
sub
dec
sahf
lahf
in
aas
repz
shlb
cmpsb
push
mov
sbb
rol
scas
adc
sub
scas
pushf
in
push
mov
out
push
xor
dec
push
dec
mov
in
setge
stos
dec
mov
or
xchg
fldt
jbe
test
dec
and
xchg
sbb
add
add
push
insl
adc
jne
lret
idivl
mov
aaa
js
gs
inc
lods
jle
mov
mov
sti
inc
xor
js
outsl
jmp
icebp
cwtl
jb
jo
das
imul
cwtl
pop
and
into
mov
pop
xchg
insl
loop
pop
jp,pt
inc
mov
pop
pop
xor
out
fsubrl
outsl
and
scas
jae
fidivrs
cmpsl
push
or
mov
xorb
xchg
aam
out
fldl
jno
and
mov
flds
sar
xchg
aaa
les
dec
mov
mov
or
push
dec
mov
mov
into
sbbb
lret
xchg
or
lret
sbb
adc
inc
loope
push
push
filds
push
out
jno
mov
outsl
jne
xchg
ljmp
dec
rcl
or
dec
mov
fnsave
xor
cwtl
fimull
jne
jnp
or
mov
lods
movsb
dec
orb
pop
push
and
ret
push
lods
popf
cmp
or
mov
sbb
cltd
cwtl
and
hlt
movsb
mov
out
xchg
jl
call
out
arpl
ds
arpl
adc
dec
dec
mov
incb
frstor
call
lods
xchg
jg
inc
adc
xlat
xor
jg
in
negb
mov
or
jns
lret
out
sbb
gs
out
call
jns
push
pop
shl
sbb
mov
push
jne
shlb
mov
cmpl
bound
in
cmp
adc
mov
mov
fucomp
push
sahf
or
imul
mov
call
sub
decl
shl
jnp
jg
call
dec
adc
sub
xor
pushf
cmpsl
xor
divb
arpl
pushf
jle
or
dec
xor
lahf
movsl
add
sbb
pop
jb
sbb
mov
mov
mov
jns
test
cmp
lods
xor
push
cltd
xor
lods
mov
pop
aaa
sbb
push
mov
ja
call
test
rcrl
and
aaa
lods
inc
mov
mov
xchg
xor
jb
adc
adc
push
sub
hlt
sub
jb
orl
popf
jne
call
jbe
lret
pop
ret
ds
push
sbb
rol
mov
cmp
jb
std
add
jo
add
push
data16
sub
je
repz
je
ds
xor
push
xor
xchg
jmp
pop
xor
test
popa
dec
sub
xor
ja
lods
adc
xchg
es
data16
mull
sub
fsubrl
push
out
jnp
and
loopne
mov
push
sub
mov
mov
insl
add
ss
mov
and
jae
in
add
xchg
in
cmp
ja
push
inc
xchg
cs
shll
out
cmpsl
idivl
xchg
aaa
inc
xchg
sbb
test
loopne
mov
sahf
inc
add
pop
and
add
xchg
adc
outsl
std
mov
fwait
xchg
mov
or
jo
mov
sbb
and
icebp
nop
cwtl
push
rorb
jne
mov
xor
rcrb
cmp
add
ljmp
mov
hlt
mov
push
add
xchg
int
ss
push
mov
fwait
cmp
test
insb
cltd
mov
mov
mov
loopne
or
imull
int
jle
imul
mov
mov
jecxz
testb
outsl
adc
mov
inc
lods
mov
nop
orl
xor
popf
xchg
jl
int3
insb
add
inc
rcl
orl
iret
jg
mov
cli
xor
lahf
jnp
icebp
mov
je
sub
imull
test
xchg
movsl
xchg
sbb
inc
sub
pop
into
cmp
imul
aam
ja
push
mov
fnstcw
sti
cmc
fwait
jo
aas
pop
pop
cmp
adc
adc
sub
mov
adc
mov
push
rorb
into
fisubs
out
icebp
ret
adc
pushf
dec
sbb
jg
mov
pop
xchg
andb
xor
cli
push
shl
iret
popf
jo
xor
bound
fs
filds
and
cmp
xlat
mov
sbb
adc
push
mov
orb
sub
cmp
outsl
fdivs
mov
movsl
jb
lcall
push
aas
test
call
jecxz
and
and
gs
xor
mov
mov
mull
push
sti
mov
out
nop
add
loop
dec
rclb
mov
nop
enter
ljmp
push
out
fdivl
sahf
divl
fcompp
pop
cmpsl
nop
clc
and
pop
jno
int
push
imul
xchg
mov
rolb
cwtl
mov
mov
out
sahf
push
jns
lcall
mov
and
movb
mov
dec
loop
movsb
mov
cld
mov
ror
iret
addr16
addr16
rclb
pop
or
dec
mov
sub
inc
stc
shll
testl
mov
pop
out
out
mov
es
push
fmull
adc
test
stos
lcall
and
test
mov
js
mov
pop
add
adc
jge
sbb
decb
dec
sbb
jno
ljmp
xchg
lcall
jnp
insl
xchg
stc
lods
cmp
xor
aad
int
ss
aam
mov
cwtl
movsb
jbe
divl
rcll
pop
test
sbb
jo
rcll
sbb
cmpsl
push
cmpsb
das
fadds
jo
sub
mov
mov
outsl
popa
movsl
dec
pushf
jle
push
pop
xchg
xor
iret
jge
add
mov
inc
add
pop
mov
arpl
in
dec
and
add
lret
sub
lcall
mov
xor
or
and
sbb
and
insl
std
pop
cmp
mov
add
std
xchg
stos
stc
mov
in
dec
das
sahf
gs
xchg
mov
push
xchg
mov
fcmovnu
mov
leave
adc
aaa
adc
pop
loopne
pop
add
loopne
les
arpl
add
mov
rcr
push
loope
mov
jo
mov
mov
lcall
loopne
add
shll
pop
in
sub
jmp
dec
mov
faddl
cld
pop
inc
and
icebp
aam
rcrl
mov
scas
pop
fistpl
leave
pop
cld
jne
repz
pop
xor
mov
xchg
imul
mov
xor
loope
mov
jnp
push
out
push
stos
lock
xor
push
test
outsb
jg
scas
insb
sbb
sub
jecxz
data16
jne
jbe
sbbl
hlt
loop
subb
int
jnp
movsb
roll
jne
pop
xchg
and
mov
mov
rolb
data16
ja
out
jge
sti
inc
loope
shll
mov
int
xchg
and
push
add
fxch
jl
push
bound
sbb
jne
clc
enter
scas
xchg
push
cmp
mov
xorl
pop
mov
das
call
loop
clc
fwait
les
ret
stc
mov
cmp
adc
lret
ficoms
mov
mov
scas
jb
xor
adc
sti
mov
int3
aam
js
test
xchg
jbe
push
repnz
sbb
and
mov
and
sbb
add
or
mov
dec
roll
sub
pop
mov
dec
addr16
repnz
rorl
loope
mov
into
in
jecxz
sbb
int3
push
xor
ret
dec
push
lock
jge
ja
sbb
outsl
cmp
mov
sbb
sub
imul
in
jp
loopne
sar
cmpsl
and
inc
and
push
in
dec
push
sub
in
jmp
out
mov
xchg
mov
sarl
xchg
inc
mov
sub
ss
out
inc
mov
add
fsts
lcall
sahf
mov
or
mov
fildl
and
fbld
loope
ficompl
dec
lock
jb
xchg
dec
orb
sbb
fsubrs
add
xchg
sti
pop
shll
mov
xlat
push
mov
sbb
fs
gs
arpl
or
scas
icebp
lret
and
loope
adc
into
or
loop
sahf
loop
mov
out
cmp
sub
jne
icebp
dec
mov
lret
popa
stos
lcall
repz
push
mov
sub
nop
into
mov
inc
pop
sarl
in
popa
sbb
cmp
mull
ret
aad
movsl
jmp
sti
xchg
subl
jg
lock
mov
fs
pop
mov
enter
call
ret
divb
fdivl
adc
movsb
popa
push
pusha
adc
pusha
adc
movsb
addr16
jl
daa
jnp
mov
movsb
test
inc
mov
pop
dec
les
scas
pop
and
out
mov
lock
adc
mov
xchg
add
mov
rclb
push
mov
dec
lods
addb
inc
pop
xor
scas
mov
sub
std
aas
xor
or
adc
push
shrd
mov
scas
xchg
inc
data16
xlat
dec
xor
jbe
lret
inc
sbb
add
jl
loop
fidivrs
pop
jo
out
xchg
je
cmpsb
lods
xchg
pusha
adc
ja
popf
pop
imul
jg
rorb
mov
jne
and
mov
testl
push
cmpsl
mov
dec
xchg
xor
fdivrl
out
cmp
int
xchg
pop
sbb
out
test
daa
test
jbe
adc
das
xorb
adc
push
mov
stos
cmpsb
insb
push
xor
adc
test
test
aas
xchg
push
stc
in
pop
icebp
fdivs
jge
icebp
in
jle
pop
mov
repnz
int
add
xrelease
movsb
mov
cwtl
mov
pop
or
imul
cld
mov
test
dec
jp
jae
and
pop
xchg
mov
repnz
fisubrl
add
loope
pusha
addl
xchg
bound
jmp
in
in
cli
push
idivb
mov
ret
fwait
inc
cwtl
pop
imull
push
lds
leave
andb
sbb
stos
ja
or
push
or
mov
xchg
int3
or
loope
dec
popf
dec
out
cmc
xor
mov
push
in
jo
flds
or
push
cmc
loopne
push
lahf
movsb
or
pop
cmp
sbb
push
subl
rcll
jbe
or
daa
fyl2x
dec
xor
fstpl
mov
xchg
ja
not
add
xor
outsl
outsb
sub
test
push
xchg
lods
xchg
xchg
stc
enter
movsb
nop
sbb
mov
mov
add
pop
fistpll
rclb
orl
push
cmp
test
inc
imul
test
dec
cmp
xchg
insb
mov
repz
jp
addr16
sbb
dec
loopne
movsl
xor
add
jl
xor
and
daa
in
pop
orb
fs
add
loopne
adc
pop
in
js
sarl
lea
in
add
adc
push
push
adc
test
jge
push
rclb
adc
jmp
imul
out
addl
push
inc
decb
xchg
xor
mov
incb
pop
sub
jp
hlt
loopne
sar
lock
xlat
xor
nop
sbb
mov
outsl
je
mov
cli
jmp
push
sub
mov
cltd
mov
test
mov
or
fsubs
popf
and
adc
loope
adc
xor
add
jl
stos
mov
cmp
cs
ret
sub
jmp
or
add
sub
pop
pop
sub
fs
sbb
cltd
inc
inc
pop
xlat
jge
les
push
imul
mov
lods
ss
ja
dec
pop
lret
push
xchg
sbb
cwtl
ja
loop
mov
pop
in
sahf
pop
dec
cmpsb
push
pop
push
lods
in
insl
scas
movsb
or
inc
dec
add
stc
push
xchg
cmpsb
mov
dec
and
and
dec
cmc
xor
call
cmp
lcall
clc
clc
xchg
mov
mov
mov
pushf
xlat
out
and
imul
sub
push
or
mov
mov
and
enter
arpl
cltd
fcoml
mov
and
fst
xor
daa
ficoml
pushf
into
sahf
call
call
cmpsb
dec
lret
imul
movsb
pop
dec
popa
cld
lret
add
mov
add
or
dec
adcb
push
iret
sarl
decl
adc
or
cwtl
adc
lods
mov
push
call
jo
cmp
or
stc
aas
mov
rcrl
cmpsl
fcomp
or
cwtl
imul
insb
or
adc
push
cmp
inc
cmp
xor
push
mov
mov
mov
pop
or
loop
mov
jns
pushf
sbb
das
daa
cmp
adc
outsl
mov
inc
fnstsw
divb
jmp
mov
inc
aam
bound
and
add
and
imul
fidivrs
mov
ds
cmp
std
out
mov
or
inc
push
insl
js
mov
fisubs
fsubrl
mov
or
or
and
push
orb
push
jno
inc
xor
icebp
add
into
test
xor
sbb
clc
in
cmp
fldt
stos
and
or
sbb
and
xchg
jbe
mov
rcl
pushf
or
xor
ss
in
adc
loopne
push
and
in
and
pop
cli
or
adc
sbb
inc
ss
or
sbb
push
pusha
das
test
sub
das
xchg
iret
repnz
push
std
add
jb
pusha
xor
xor
pop
mov
mov
dec
inc
sbb
xlat
faddl
in
xchg
popf
inc
sbb
push
xchg
int3
xor
adc
decb
fbld
add
inc
jo
cwtl
les
mov
insb
scas
leave
sbb
pusha
mov
push
lods
repz
rcll
xchg
outsl
push
xchg
out
and
and
lea
jl
xchg
fwait
repnz
pop
lods
or
mov
adc
inc
inc
je
sub
outsl
xor
loop
pushf
jge
pushf
aaa
sbb
nop
js
mov
jnp
xor
jo
iret
fucom
test
inc
cmp
sbb
jmp
and
or
lahf
dec
mov
adc
jbe
adc
xchg
mov
repnz
fcmove
inc
mov
push
push
cwtl
inc
push
mov
sarl
add
fwait
movsb
xor
ss
lahf
orb
movl
inc
jnp
mov
sarl
popf
test
mov
lahf
cmpsl
or
rcll
sarl
insb
push
add
mov
push
and
xchg
arpl
movsl
adc
ret
jbe
push
cmc
mov
pop
aam
add
adc
shll
ja
pop
xlat
sbbb
fidivrl
popf
adc
in
fistps
or
or
dec
sar
ret
call
xchg
cs
dec
orl
ljmp
lahf
call
adc
xchg
cmp
sbb
test
fs
dec
and
sbb
push
mov
inc
adc
dec
or
call
pop
push
push
pop
xor
aam
dec
pop
nop
xor
and
xor
pop
push
mov
out
or
xchg
out
sub
add
imulb
enter
pop
shrb
in
ret
ds
push
sub
xchg
mov
icebp
sub
mov
decb
mov
shll
scas
mov
aas
hlt
sbb
outsb
cltd
dec
rclb
cltd
out
aad
or
dec
xchg
test
or
fcmovnu
int
gs
sub
inc
xor
xor
or
stc
jle,pt
push
dec
xchg
fwait
imul
push
in
push
int3
mov
aaa
rorb
fisubrs
xchg
jge
add
sub
add
inc
out
jg
adc
mov
push
sti
cli
insb
xchg
pushf
sbb
or
push
mov
fists
pop
mov
cmp
xor
out
fsubl
int3
adc
and
cmp
repz
ds
inc
ja
push
pop
mov
ret
lds
xchg
daa
or
xchg
adc
mov
jmp
mov
xchg
inc
sbb
push
and
repnz
sub
jb
jmp
aas
mov
out
lret
and
cmpsl
lcall
pop
es
fwait
jle
sub
lret
mov
inc
pop
xor
ret
adc
xchg
pop
call
rclb
inc
std
imul
cli
mov
in
fmul
add
lahf
and
cmc
stos
push
test
mov
ret
ds
outsl
xchg
push
bound
xchg
and
xchg
fnstsw
ljmp
mov
fimull
inc
push
mov
loop
hlt
push
mov
in
aam
and
dec
adc
fcoml
insl
and
sbb
jne
mov
lret
mov
push
insl
push
aas
jmp
insb
ljmp
jmp
cmpsl
sub
fisttpl
xor
mov
lods
hlt
mov
in
jge
adc
jb
cmp
lcall
inc
mov
loop
fstpl
aad
jo
sahf
sub
mov
rolb
les
sti
mov
xor
jns
out
aaa
pop
xor
lea
lret
inc
pop
inc
pop
mov
stos
jae
enter
aas
popf
sbb
pop
lahf
or
ret
push
cmpsl
mov
or
daa
fiadds
sbb
imul
mov
and
sbb
cmp
lcall
push
adc
sub
loopne
pop
aad
mov
cmp
jo
test
rcll
add
add
inc
or
nop
rorb
sub
sub
outsl
push
ja
sbb
ljmp
das
push
sub
dec
mov
pop
add
mov
mov
inc
imulb
inc
push
subl
fisubrs
daa
cli
push
xor
fldl
insl
mov
aas
sbb
lods
lahf
in
shrl
divb
cmp
bound
sub
outsl
push
cmp
adc
gs
and
shr
dec
pop
mov
xchg
fdivrs
pushl
push
lods
jnp
push
cltd
fimull
insb
ss
sub
sti
popf
shlb
sub
pop
and
and
dec
dec
into
xorb
lea
sbb
dec
add
adc
scas
add
outsl
and
movsl
or
movsl
xchg
insb
fs
into
shlb
fstps
inc
cmova
lahf
in
jge
retw
repz
push
andnps
jbe
push
pop
movsb
and
enter
pop
mov
push
adc
sbb
mov
daa
or
enter
jmp
movsb
dec
mov
jmp
xor
data16
int3
dec
add
and
mov
int3
aam
pusha
lcall
shrb
adc
mov
pop
lcall
jmp
rclb
or
fs
pop
shlb
outsl
push
xor
mov
mov
scas
js
inc
call
xchg
cs
shll
js
dec
xor
push
push
pop
cltd
cmpsb
mov
repnz
jbe
ja
scas
nop
bound
xchg
cmp
cld
mov
mov
pop
sbb
add
into
ret
push
into
adc
inc
lahf
pop
push
xchg
cmpsb
dec
and
add
mov
gs
inc
vmread
fwait
mov
push
xchg
xor
outsb
ss
mov
scas
mov
mov
cmp
xchg
adc
ret
adc
pop
mov
sbb
sarb
aaa
cmp
mov
xchg
fsubl
xchg
xor
cmc
mov
mov
push
inc
inc
hlt
cmp
imul
mov
fwait
xlat
outsb
jmp
std
test
lcall
shl
popaw
out
adc
xchg
mov
dec
ret
shrb
notl
or
xor
into
ss
push
dec
clc
js
int
test
xorl
xor
sbb
cmpsb
or
iret
jp
mov
iret
lods
xchg
out
adcl
es
cs
idivb
mov
cltd
fsubrl
insl
jno
outsb
mov
in
fnstcw
fsubs
pop
dec
stc
adc
pushw
mov
into
pop
cmpsl
lret
and
push
sti
mov
mov
mov
fsubl
push
xchg
mul
ss
ja
dec
daa
mov
out
aam
jae
popa
inc
jo
xor
mov
xchg
popa
sub
lods
fdivs
fisttpll
dec
xor
xchg
mov
mov
and
stc
nop
mull
push
lods
inc
xchg
xor
inc
sbbl
es
pop
jge
push
sub
jns
pop
test
jne
mov
es
lret
nop
mov
loope
pop
aam
and
outsb
pusha
repnz
xchg
hlt
inc
xlat
lods
dec
js
dec
mov
mov
cmpsl
pop
xor
ret
sbb
sub
xlat
push
es
xlat
popa
out
fst
or
ljmp
inc
push
pop
sarb
test
addr16
jecxz
loopne
mov
sti
xchg
dec
movsb
mov
xchg
movsl
mov
sub
adc
clc
cmpsl
setns
lea
sub
sub
xchg
dec
add
jge
dec
jne
mov
mov
pop
mov
mov
mov
mov
adc
pop
mov
cli
lahf
pusha
je
inc
sub
push
cmp
xchg
inc
inc
lret
insl
adc
ret
mov
cmpsl
enter
cs
inc
in
icebp
loop
jne
filds
xchg
jae
pop
rorl
arpl
mov
test
jl
cmpsb
mov
fcmove
dec
sub
mov
aas
pusha
cmp
loopne
notb
adc
mov
fdivrp
sahf
jns
lahf
push
mov
lds
dec
xor
inc
lret
add
movsl
mov
fsts
testl
mov
out
inc
mov
push
loope
xchg
shll
mov
pop
loop
inc
test
jb
push
inc
cmp
jecxz
xchg
mov
xchg
jle
in
jne
inc
dec
or
inc
lret
stos
fcomps
loop
out
daa
imul
push
movsl
sub
daa
push
push
icebp
xchg
mov
arpl
mov
adc
ja
jecxz
mov
lret
popa
outsl
pop
jbe
fcomps
out
push
test
outsb
adc
mov
ja
aam
pop
jge
push
shrb
les
scas
js
movsw
and
dec
xchg
cmp
mov
aaa
icebp
mov
hlt
in
testb
mov
lret
arpl
orl
cs
pop
inc
pop
pusha
sub
mov
scas
lret
insl
daa
push
jge
fwait
sub
pop
out
movsb
sub
push
add
add
add
gs
negl
orl
out
xchg
in
in
push
out
aas
sbb
clc
xor
ret
mov
and
push
add
inc
pop
sub
mov
test
lods
addl
mov
inc
mov
dec
cwtl
mov
scas
push
leave
outsl
les
mov
scas
mov
or
out
inc
mov
cwtl
sub
xchg
insl
pop
sbb
or
fbld
pop
mov
mov
sub
aaa
call
inc
movsb
repnz
pop
out
shlb
push
jne
lcall
std
or
ljmp
fsts
lods
push
mov
lods
pop
hlt
or
loop
lahf
das
push
jmp
imul
out
mov
push
jmp
outsb
insb
pop
das
scas
out
les
insb
test
stos
xor
push
ja
pop
js
movsb
push
xchg
loope
mov
faddp
rolb
mov
lahf
or
adc
lods
testb
icebp
push
leave
push
pop
jnp
ret
mov
and
pminsw
inc
mov
fcmovbe
push
xor
sub
fs
test
imul
subl
cld
mov
aaa
mov
std
add
and
stc
mov
add
lods
inc
sbb
push
daa
or
popf
mov
sub
ss
aam
xchg
xchg
outsl
test
sahf
shll
movsb
pop
and
imul
mov
xor
mov
inc
and
lds
and
loope
loope
dec
mov
dec
push
mov
push
addr16
cmp
xor
cmp
jmp
sub
jb
mov
add
sbb
test
jp
jns
or
cld
adc
in
out
test
jbe
decb
add
pop
fiaddl
mov
mov
cmp
or
or
std
adc
cs
and
dec
and
dec
push
cmc
dec
push
adc
cmp
cmp
mov
mov
jmp
xchg
insb
mov
jmp
push
add
sbb
xchg
scas
shr
sahf
in
cmp
clc
shlb
mov
test
push
push
pop
es
das
mov
movsb
dec
fwait
mov
add
jbe
xlat
mov
mov
jmp
loopne
enter
xchg
mov
mov
push
dec
xor
repnz
sahf
or
je
cmpsb
sub
jnp
call
sbbb
gs
lock
cmpps
xchg
mov
dec
aam
mov
add
imul
dec
mov
add
xchg
lahf
push
mov
fiaddl
ret
push
mov
hlt
subl
dec
fisubrs
mov
dec
add
adc
insl
adc
push
outsb
pop
in
dec
lods
mov
pop
gs
cmp
popa
sar
into
sarl
repnz
inc
adc
jg
jnp
adc
ret
inc
ss
loop
loop
mov
outsb
lret
std
inc
hlt
push
inc
mov
and
and
fsubrp
xor
xor
xor
or
insb
iret
mov
test
jp
ficompl
jg
in
stc
aad
decb
add
je
test
sti
jl
sbb
sub
outsb
sti
ljmp
int3
jecxz
jne
pop
cmp
jno
jo
les
adc
mov
fisttps
sub
fistpll
xchg
inc
xchg
push
jmp
push
jle
popl
and
loopne
mov
cltd
jecxz
jmp
andl
push
or
ja
sbb
jmp
in
xchg
fimuls
push
adc
sbb
inc
jne
ljmp
jle
aas
jb
leave
ret
dec
mov
sub
mov
mov
sbb
jl
bound
sub
inc
mov
outsb
mov
jmp
xchg
push
mov
xchg
popf
jp
call
das
clc
sub
inc
aad
pop
inc
ljmp
sti
addr16
push
xchg
sub
lds
push
add
in
or
fs
in
bound
cmp
bound
fimuls
out
stos
dec
out
dec
dec
push
mov
push
or
mov
movsl
clc
xchg
xlat
bound
pop
sbb
or
aaa
scas
das
call
xchg
or
lods
xor
jmp
cmpsb
inc
xor
sbb
xchg
std
fwait
xchg
fmul
ljmp
arpl
xlat
data16
push
fstl
in
jecxz
sub
sub
xchg
push
in
mov
pop
pushf
adc
enter
dec
scas
dec
jle
adc
mov
arpl
popl
pop
adc
xchg
outsb
scas
xchg
ja
scas
dec
jns
jbe
data16
sbb
mov
dec
jle
in
and
add
jo
sub
adc
outsl
jo
mov
dec
sbb
adc
add
aam
sbb
cwtl
int3
mov
jle
out
idivl
das
pushl
and
loop
not
mov
push
mov
sbb
leave
pop
test
mov
call
shlb
jbe
lods
sub
push
cmpsl
mov
adc
out
outsl
addr16
out
push
aam
jecxz
sub
rorl
sub
inc
test
adc
cli
jae
mov
je
lock
mov
push
cmp
shld
ret
dec
jno
cmpb
enter
repz
popa
repnz
push
insb
shlb
sbb
sbb
addr16
xchg
dec
push
sbbl
xchg
cmp
or
xor
dec
adc
fcmove
sub
or
cmp
push
jecxz
push
cwtl
lret
fidivrs
loope
iret
mov
pop
cmpsb
cmp
cmp
hlt
add
daa
loopne
mov
roll
jmp
pop
out
xor
lock
pop
add
lods
jo
mov
out
pusha
imul
jmp
sbb
out
and
fs
jl
leave
pusha
inc
lock
push
je
lds
pop
subl
xor
push
push
pop
mov
and
mov
dec
mov
xor
sbb
mov
in
jmp
jns
or
pop
out
out
adc
sti
and
jne
lea
and
xchg
ds
out
cwtl
push
int
leave
out
cmpsl
rcrl
mul
rclb
repnz
popf
xor
outsl
push
sbb
orb
call
sbb
imul
je
jbe
lds
repnz
inc
add
mov
test
sbb
add
scas
and
fs
inc
ja
arpl
push
sbb
xchg
mov
mov
xor
sbb
sub
jns
jmp
push
clc
mov
mov
in
in
cmp
cld
xor
cmp
es
lea
aad
das
mov
int
adc
and
std
cmpsl
fdiv
ja
xchg
iret
negb
aaa
in
in
cmp
mov
cs
pop
xchg
sub
jp
daa
sbb
mov
adc
test
dec
inc
cmpsl
out
call
call
adc
add
cmp
xchg
push
rcll
sub
adc
pop
arpl
fs
mov
mov
push
add
popf
pop
pop
jae
xchg
loop
hlt
mov
xchg
pop
jp
sub
mov
in
pop
cmpsl
mov
lea
aad
ret
add
or
call
pop
mov
aas
xchg
mov
and
clc
pop
repnz
jg
jbe
les
mov
sbb
pop
mov
rclb
repnz
repz
sub
pop
outsb
add
data16
mov
addr16
inc
pop
movb
ret
fildll
mov
insb
mov
sbb
add
imul
test
incl
rol
xchg
out
push
add
push
or
dec
scas
shl
and
jp
int3
push
sbb
mov
mov
gs
mov
sub
nop
popf
xorl
lcall
insb
add
lock
mov
out
ljmp
daa
sub
sbb
push
aam
mov
out
or
outsb
push
xchg
mov
ret
mov
sub
cs
sub
es
cmp
cwtl
cmp
push
cmpb
stos
push
loopne
arpl
es
mov
gs
mov
dec
movsb
std
and
test
mov
push
and
int
jp
in
call
inc
in
xor
cmp
stos
push
daa
ljmp
cmpsb
mov
arpl
aas
mov
sbb
mov
addr16
xchg
jae
scas
xchg
adc
cmpsb
sahf
pop
lahf
push
div
jl
fstps
arpl
push
dec
push
and
ret
xchg
pop
repnz
adcb
cmp
inc
stc
test
xlat
mov
dec
xor
push
rcrl
bound
jno
push
dec
aaa
divb
rclb
push
movsb
and
cld
in
rclb
cmc
cmp
loop
lods
dec
push
fistl
movsb
mov
xor
lcall
shrb
fsubl
lret
jb
jl
sub
mov
or
inc
jmp
inc
aam
out
dec
cwtl
pop
add
jo
cld
data16
mov
dec
mov
sti
notb
int3
pop
pop
push
mov
daa
in
sbbb
sbb
add
xorb
sbb
pop
sbb
sahf
in
push
cmc
fisttpll
arpl
loopne
push
and
daa
outsb
mov
pop
std
fsubs
cltd
imul
mov
mov
and
inc
ja
pop
pop
js
sbb
jne
rorb
pop
lds
inc
mov
es
es
jne
fisttpl
mov
sti
push
bound
imul
int
fsubs
xchg
and
push
xor
mov
aad
aad
add
pop
xchg
mov
mov
mov
mov
in
ss
pushf
movsb
sub
pop
mov
insl
add
ljmp
push
lods
scas
pop
push
ds
ds
inc
das
and
enter
pop
inc
adc
fldl
xchg
stos
scas
les
inc
iret
ret
dec
sub
pop
dec
mov
icebp
cmp
daa
cmpsb
setle
addr16
xchg
fildll
mov
xchg
mov
inc
jnp
xchg
das
dec
sub
dec
mov
fildl
sub
push
inc
inc
aaa
ja
loopne
outsl
shrb
inc
bound
imull
jge
jno
inc
adc
dec
movsb
mov
cmp
mov
fcoms
xchg
mov
dec
push
jge
pop
mov
ljmp
add
iret
pushf
sub
sbb
xor
push
mov
or
std
or
sbb
mov
repz
scas
test
daa
push
in
or
mov
js
lret
fs
mov
adc
fnstenv
sahf
mov
mov
or
cmp
jbe
mov
pop
fcoml
pop
xchg
stos
test
add
rclb
pop
mov
lret
push
repz
rcl
push
into
push
push
adc
fs
or
mov
push
dec
or
sub
xor
and
pop
mov
jbe
lret
in
and
xorl
stos
fidivrs
popf
push
or
es
mov
cmp
inc
inc
cmp
in
nop
cmp
xchg
cmp
xchg
xchg
addl
xchg
clc
jmp
dec
insb
sbb
sar
and
ss
and
pop
into
pop
aas
sub
dec
iret
sti
sbb
cs
jne
xchg
enter
lds
rol
lret
orb
test
hlt
jl
lods
fistl
xchg
mov
stos
jp
cmp
ja
ficoml
fcmovbe
sub
test
inc
pushf
out
mov
inc
into
push
xchg
movsb
push
rcl
and
lock
xor
push
aaa
jae
and
push
and
icebp
and
call
or
stos
loopne
std
in
xor
pusha
aad
cmp
stc
lock
push
push
iret
es
push
dec
cmp
or
sbb
lods
sti
pop
fidivs
fdivp
test
repnz
lock
mov
out
pop
and
arpl
cli
packsswb
xchg
je
aad
lret
out
sbb
sbb
imul
daa
mov
out
xchg
stc
loopne
nop
adc
mov
sub
popa
add
int
push
mov
cwtl
jbe
enter
push
mov
ja
jmp
inc
test
inc
enter
insl
iret
rorb
lahf
add
push
mov
gs
or
adc
adc
or
adc
push
xchg
fldt
shr
movsl
push
call
dec
mov
stos
cld
stc
mov
or
mov
mov
inc
lods
mov
ltr
mov
or
lock
mov
daa
orl
clc
add
fdivrs
and
imul
dec
fsts
pushf
xchg
jle
jp
add
push
ljmp
add
cmp
mov
shl
xor
std
mov
push
testl
push
mov
mov
mov
add
movsl
mov
mov
inc
push
cmc
subl
push
xchg
jle
mov
inc
repnz
jae
xchg
mov
int
aas
enter
inc
push
shll
and
stos
pop
xchg
pop
jle
xor
ss
fdivrl
lods
data16
daa
stos
stos
insb
or
cmc
and
test
out
ljmp
jns
nop
sar
mov
mov
inc
mov
adc
jecxz
fnstcw
and
rclb
cmc
fiaddl
or
lahf
or
jbe
add
cmc
push
xor
xchg
push
xchg
fiaddl
jp
inc
mov
or
and
and
or
mov
leave
fbld
iret
mov
xchg
adc
loop
testb
arpl
fadds
pop
inc
mov
push
std
cmp
mov
rorb
inc
shll
inc
fdivl
jecxz
out
push
adc
int
fcomp
push
and
cmp
sbb
js
and
jl
stc
js
cltd
mov
out
add
fcoms
xchg
push
jb
pop
aam
jbe
jbe
mov
and
pop
fdivr
cld
or
mov
arpl
fs
dec
in
xchg
add
sbb
pop
pop
mov
popa
or
fidivrl
mov
pop
jg
cmpb
es
xor
in
mov
and
push
pop
outsl
dec
sub
xrelease
pop
add
enter
into
movl
mov
ret
lods
lods
scas
sub
loop
cmp
xlat
sub
xchg
mov
pop
inc
shl
push
stos
pop
and
pop
inc
insl
sbb
mov
pop
or
mov
aad
pop
pop
cmp
frstor
in
xor
mov
inc
xchg
stos
nop
and
sbb
jecxz
adc
xchg
gs
inc
cwtl
and
xchg
adc
das
push
add
or
cwtl
sbb
sbb
mov
mov
ror
jl
nop
adcl
pop
and
mov
shrl
lret
mov
pop
jp
icebp
sub
xlat
idivb
dec
repz
insb
add
jb
adc
cmp
sbb
popa
dec
fiaddl
repz
movsb
sbb
or
cwtl
jmp
sbb
jb
sahf
jle
adc
into
xchg
cli
les
adc
push
dec
jl
lret
stos
jne
push
std
add
xchg
frstor
push
mov
movsb
jbe
mov
hlt
repnz
mov
test
in
xchg
jmp
inc
sbb
cwtl
or
xor
dec
ret
mov
cmpsb
lahf
pop
mov
in
and
outsl
or
fwait
ss
in
psubusb
test
jnp
add
add
sbb
lahf
int
dec
cmc
mov
shr
inc
enter
imul
sarl
bswap
mov
sbb
mov
xlat
daa
int3
adc
fcompl
or
xchg
jge
push
mov
lods
shr
cmc
cmpsl
jb
bound
push
std
sbb
mov
movb
jmp
and
fsubs
movl
jl
adc
jg
dec
lahf
mov
dec
fisttpll
jmp
in
push
xor
sbb
lahf
lods
in
ficompl
and
mov
sub
push
cli
mov
stos
das
insl
test
imul
add
imul
sub
sub
jns
loope
inc
jne
out
and
aaa
mov
cmpsl
sbb
icebp
or
outsl
mov
aaa
popa
and
imul
shrl
sub
xorb
shll
loope
xor
dec
add
andl
pop
xchg
jg
bound
fldcw
mov
push
mov
call
fldcw
push
scas
mov
jb
dec
xor
jns
cmc
out
imul
les
adc
scas
lcall
arpl
cmp
adc
nop
aas
and
mov
lods
shrb
fstpl
das
cli
popa
xor
sub
sbb
cmp
idiv
sub
lret
imul
jmp
sbb
xor
icebp
xor
mov
push
test
mov
push
pop
adc
sbb
xchg
ja
pop
pop
push
xlat
xchg
je
hlt
mov
out
mov
add
cwtl
pop
mov
mov
push
cs
lahf
sbb
sti
andb
js
sub
inc
test
fadds
jle
and
lods
xor
rorl
js
decb
xor
or
sub
mov
aaa
add
lods
mov
lods
xor
dec
out
mov
push
adc
pop
mov
add
enter
icebp
jae
sub
pop
in
pop
mov
mov
pusha
pop
cltd
mov
dec
fisubl
push
cli
mov
or
ja
les
dec
in
xor
mov
xor
out
repz
sbb
jno
xchg
rolb
insl
sub
mov
mov
push
arpl
cmc
inc
pop
mov
mov
daa
addr16
mov
inc
lds
jb
mov
pop
dec
cld
cmp
sbb
fimuls
inc
lahf
xchg
fdiv
fnsave
call
xchg
inc
daa
fdivrl
clc
sbb
mov
lret
popf
pop
xchg
or
xor
and
pop
in
mov
push
cld
push
cmp
xchg
inc
int3
pusha
shll
sub
in
bound
je
fs
xor
pop
mov
dec
testb
xchg
test
ret
inc
rcrb
jno
push
into
cmpsl
imul
and
jo
jmp
imul
sbb
mov
cmpsb
aas
mov
mov
adc
sbb
stos
or
adc
mov
dec
icebp
bnd
mov
adc
push
outsb
sbbb
push
insb
jg
ret
mov
in
imul
sbb
fsubs
outsl
jmp
fimull
imul
push
dec
movsl
xor
mov
hlt
dec
testl
out
push
mov
dec
mov
mov
jae
fwait
out
sub
test
idivb
sbb
pop
pop
sub
mov
xor
out
repz
jb
jle
mov
out
mov
arpl
jnp
jo
mov
pop
mov
cmp
addl
inc
rcl
ja
mov
rorl
inc
xchg
push
cmp
add
jg
fmuls
pushf
add
ret
sbb
or
lock
out
xorb
sbb
rol
movsb
push
adc
push
hlt
cs
in
inc
pop
mov
out
xchg
cmp
jmp
out
loope
ds
cmp
insb
fsts
jecxz
cmp
xor
test
in
jbe
push
shlb
ja
sbb
stc
sbb
mov
jecxz
jg
xor
movsl
adc
fwait
sbb
mov
insl
mov
pop
jle
mov
rcr
inc
arpl
int3
adc
lds
inc
lds
push
rcll
inc
mov
add
pop
icebp
mov
das
aas
xor
rol
ret
cmpsl
dec
das
gs
add
xor
and
das
cld
das
lods
in
pop
inc
loope
pop
add
push
fsubr
gs
ja
cwtl
jecxz
int
int3
js
xchg
and
mov
pop
movsb
dec
popa
lock
dec
and
lret
dec
scas
jge
or
adc
std
jecxz
sahf
cmp
cli
in
add
pop
adc
xor
movsl
lods
frstor
pushl
inc
popa
pop
jmp
fdivrs
or
iret
ss
mov
add
xlat
push
loop
lret
adc
andb
dec
xor
push
loop
sbb
jg
inc
imul
mov
xor
jmp
popf
stc
xor
cmpl
orb
sbb
scas
xchg
fcompl
cld
loopne
jp
and
shlb
lds
jl
enter
mov
int
add
or
pop
sarb
jae
bound
iret
inc
pop
pop
fsubs
stos
shlb
je
aas
cld
decl
push
loope
and
and
dec
inc
and
or
dec
dec
jo
push
xchg
sub
lahf
xchg
and
test
dec
push
pop
clc
scas
mov
imul
ds
int3
insb
and
punpckldq
in
loopne
adc
sub
lcall
test
cmpsl
mov
aam
outsl
pop
ds
xor
inc
pop
loopne
popa
popa
pop
ret
mov
mov
jg
sub
imul
insl
std
sub
add
or
fidivrl
popf
push
stc
inc
xchg
fiadds
push
mov
sub
xor
insl
cltd
or
out
lahf
and
xchg
stos
jns
mov
mov
test
out
idiv
xchg
addr16
divb
and
sti
mov
mov
addr16
jl
sbb
aas
inc
pop
jno
jmp
adc
add
mov
jns
lock
xor
jmp
fmuls
pop
jp
mov
test
jmp
fdivs
inc
mov
pop
mov
iret
addr16
in
adc
adc
mov
out
cmpsb
nop
jmp
or
out
fs
jg
mov
sbb
cwtl
popa
clc
in
out
clc
movsb
mov
xchg
fbld
dec
mov
jl
sbb
aas
pop
fisubrs
add
push
iret
push
jnp
fcoms
js
xchg
dec
scas
jle
cmp
sub
push
fidivl
ss
push
xor
mov
int3
sbb
push
xor
add
imul
xchg
mov
jmp
push
or
inc
in
adc
mov
bswap
adc
add
xor
mov
ja
test
inc
dec
mov
push
shlb
cmp
addb
mov
jl
cmp
push
popa
loopne
cmc
inc
rcrl
push
inc
inc
inc
xor
fucomp
cwtl
jbe
sahf
rcr
sarl
ror
and
jmp
insb
or
jno
add
movsb
dec
int
jne
es
adc
sub
cwtl
rcl
out
je
jne
in
jns
loopne
lods
dec
xchg
xor
dec
mov
addb
repz
int
pushf
push
movsl
cmp
dec
cmpsl
push
pop
enter
push
jbe
jge
and
cmp
mov
popf
stos
test
or
gs
sub
jge
or
imul
lcallw
xor
out
cmp
das
dec
mov
lret
int3
xchg
and
outsb
pop
pop
pop
mov
jnp
insb
arpl
aad
scas
fcmovnb
in
sub
pop
push
les
ret
inc
outsl
in
daa
sbb
ss
mov
mov
and
lahf
in
rcrb
cmp
in
mov
jns
lea
dec
mov
push
lahf
shl
pop
mov
stc
pop
pop
or
lods
movsb
mov
xchg
js
mov
mov
popa
inc
pop
mov
test
adc
rcrl
dec
dec
sbb
mov
mov
pop
cmp
jge
les
nop
mov
imul
pop
inc
addr16
icebp
js
fwait
and
shr
js
or
out
insl
xchg
fmul
es
inc
es
aaa
cwtl
jmp
add
lds
add
pop
shll
insb
insl
es
arpl
jg
in
and
xchg
xor
xchg
daa
sbbb
call
rcr
sub
lods
fisubrs
dec
icebp
mov
mov
sbb
mov
or
adc
mov
xor
mov
jbe
mov
movsb
inc
fs
movsb
add
dec
or
loop
fdivs
negb
inc
pop
mov
fldt
dec
sub
ret
lods
xchg
inc
push
add
cmp
fcoml
add
cmpsl
inc
sti
mov
insl
cmc
dec
push
notl
inc
and
addr16
mov
cmp
jg
call
jp
shll
and
jb
insl
jnp
lock
jecxz
pop
adc
fnstsw
jmp
and
imul
jg
mov
mov
xor
jbe
cs
loopne
lods
call
push
loope
pop
or
add
ja
out
adc
adc
adc
cmp
add
and
call
lahf
push
xchg
sbb
add
aaa
or
scas
out
add
imul
cmpsb
and
inc
add
rorl
gs
sbbb
sub
fs
daa
jnp
dec
push
adcl
dec
ss
adc
mov
fucomp
lcall
in
outsb
lret
inc
fyl2x
jo
push
lock
cmpsl
sbb
iret
test
ss
mov
pop
out
or
bound
sub
inc
or
out
leave
push
inc
inc
in
cltd
mov
test
adc
test
call
daa
enter
out
fdivrs
es
xchg
xor
outsb
or
movsl
mov
pop
fsubrl
gs
mov
mov
ret
shrb
dec
push
stos
cmp
add
ja
lods
test
or
les
lret
push
imul
inc
xlat
shrl
xchg
out
jno
mov
fisubs
xchg
push
mov
adc
mov
xchg
or
sub
cs
in
stos
add
adc
sub
mov
mov
push
imul
call
mov
imul
ret
inc
xchg
cmp
sahf
pop
wrmsr
inc
js
mov
mov
fwait
mov
subl
pop
mov
sub
loope
insb
push
test
fcmovb
sub
ud0
test
mov
les
stos
mov
cs
mov
arpl
enter
cmc
outsl
in
add
in
cli
mov
out
ja
aad
mov
insb
pop
icebp
pop
adc
addr16
xchg
adc
shl
enter
and
cli
push
cmc
mov
leave
pushf
and
mov
push
ja
rcrb
ja
jns
es
jbe
adc
cltd
insl
aam
mov
mov
sub
addr16
push
mov
stc
mov
in
int3
push
xor
mov
mov
lods
or
sbb
fdivl
jns
rclb
cmp
mov
incl
xlat
pop
pop
add
fdivrs
pop
jne
jl
clc
mov
pop
out
ret
inc
or
push
mov
mov
lcall
sbbb
jae
pop
cltd
push
jp
fsubl
outsl
gs
or
adc
sub
adc
cmp
xor
mov
aam
into
fbstp
mov
mov
pop
stos
lea
lods
push
lret
xchg
cwtl
jno
mov
addb
inc
push
jmp
adc
outsb
inc
xor
pop
fisttps
sbb
dec
std
insb
add
lcall
jle
out
fcmovu
lcall
ret
mov
mov
movl
add
xchg
rorb
loope
ja
insl
daa
cli
mov
or
ficomps
push
sbb
cmpl
dec
xbegin
cs
popa
inc
test
mov
call
pop
dec
lock
dec
pop
decl
jno
jnp
fdivrs
xor
mov
cltd
popa
jmp
pushf
xchg
sbb
adc
inc
out
int
mov
mov
fbld
addl
cmp
sbb
sub
divb
test
lods
loope
loope
push
adc
pop
into
mov
xchg
xor
xrelease
test
mov
adc
pop
cmp
xor
lods
sub
sarl
ret
lods
call
xor
cli
jb
push
and
push
andb
or
and
leave
lock
add
lock
mov
push
xor
out
xchg
mov
adc
sahf
mov
outsb
sarl
sbb
pusha
add
or
pop
mov
ss
enter
mov
mov
mov
mov
movsl
cmp
xchg
ja
hlt
fucomp
adc
jo
lret
int3
repnz
call
or
cmp
push
cs
dec
rorb
or
subb
pop
fcmovnu
sarb
aas
ret
fs
push
inc
or
xchg
popa
pusha
dec
movsl
inc
jne
leave
push
xchg
inc
pop
push
mov
into
aad
sub
push
fldcw
mov
pusha
push
insb
cwtl
and
out
dec
mov
gs
push
xchg
cs
and
in
ret
mov
push
push
xchg
and
lods
lea
ljmp
pop
jno
or
shll
add
xchg
pop
or
shll
sarb
ja
roll
test
and
inc
in
inc
shl
push
stos
adc
or
push
es
or
mov
loopne
int
pushf
add
push
aaa
cmpsl
xor
push
ret
ret
inc
fsubl
lret
hlt
fmul
loope
popf
test
pop
add
mov
jae
mov
adc
xchg
push
add
lods
dec
sub
mov
hlt
repnz
xor
lahf
loop
js
add
rorl
hlt
cs
js
or
addr16
add
sub
sub
test
jle
dec
test
cld
mov
jnp
xchg
mov
js
lods
ret
icebp
out
or
sbb
xchg
je
or
jl
and
lea
add
fbstp
mov
ds
pop
xchg
repz
mov
int3
sbb
outsl
incb
and
loop
cmpsb
pop
test
addps
mov
incb
pop
add
inc
pop
dec
xchg
mov
insb
sbb
aas
push
mov
and
jecxz
mov
or
adc
jnp
dec
mov
enter
ljmp
sti
push
push
cli
and
lret
mov
or
mov
or
leave
jle
loop
mov
daa
incl
pop
loopne
sub
addr16
fstpt
adc
xor
xchg
scas
testl
testl
aam
push
mov
ret
mov
cmp
out
jbe
inc
out
xchg
mov
lods
dec
cmp
mov
jg
add
fnstenv
insb
push
and
mov
mov
add
add
ja
adc
add
lahf
jmp
adcb
leave
fnstenv
cmc
jl
jle
cmp
lods
mov
add
xchg
movsl
pop
int
call
mov
pop
lods
mov
je
inc
jl
cld
scas
mov
adc
mov
jns
mov
push
enter
cmp
xchg
pop
ljmp
in
pop
push
pusha
sub
stc
dec
sbb
pop
push
sti
scas
iret
ret
outsb
cwtl
jl
and
and
out
repnz
add
shr
jmp
movsb
sub
test
pop
xchg
cmpsl
jmp
cmp
cli
divb
xor
lods
xchg
mov
cmc
lock
fidivl
push
jbe
ret
push
and
mov
jno
les
cwtl
repnz
stc
aam
stos
lahf
in
sub
wbinvd
lahf
ret
dec
daa
inc
adc
mov
adc
cmp
add
mov
add
xor
sahf
and
out
xchg
jne
jbe
jae
fisubs
pop
leave
adc
fidivs
or
icebp
and
cmpsb
push
mov
out
test
je,pt
dec
add
pop
rcll
push
inc
mov
sub
ret
add
loope
mov
lods
addr16
fcompl
test
fiaddl
daa
inc
nop
outsl
fcomi
test
inc
gs
cmc
add
xchg
outsl
add
testb
xchg
dec
sub
dec
movsb
inc
outsb
xchg
out
leave
out
sub
out
mov
xor
testb
mov
loope
pop
addr16
lahf
push
cmp
mov
ret
sahf
lods
adc
cmp
xchg
push
add
cmpsb
loop
lods
scas
fsubr
mov
or
cltd
sbb
and
test
fnstenv
iret
add
sbb
daa
lods
movq
or
inc
cld
lret
adc
mov
adc
icebp
sarl
lcall
les
imul
mov
mov
mov
inc
fwait
gs
test
ret
mull
rorb
testl
es
pop
jnp
stc
in
add
xor
lss
rcll
fisubrl
add
mov
sbb
xchg
shl
jmp
push
pop
shrl
adc
mov
jmp
arpl
es
jnp
popa
lock
and
xchg
ret
jbe
push
nop
lcall
cld
xchg
dec
jo
cmp
dec
sub
iret
or
sbb
dec
jb
dec
xchg
mov
add
push
mov
dec
jl
jb
pop
popa
cmc
test
xlat
mov
add
mov
les
jb
adc
push
push
lock
add
sbb
mov
push
fs
test
movsl
xchg
je
mov
and
pushf
mov
ds
xor
and
adc
repz
mov
sti
mov
xor
aam
jp
es
js
jge,pt
cltd
ret
inc
mov
xor
inc
in
dec
lods
jo
mov
and
jle
cmp
mov
cwtl
inc
and
inc
inc
call
aam
jecxz
or
xchg
imul
leave
dec
dec
icebp
scas
add
xchg
lods
hlt
inc
cmpsl
movsb
pop
pop
push
add
jmp
push
pop
jb
push
cmp
jo
pop
pop
cmc
cs
xor
xor
pop
popf
ja
fidivrs
insb
aaa
int
fcompl
sub
test
push
xor
push
insb
rcrl
movsb
push
sub
hlt
adc
loope
scas
xorl
pop
cmpl
outsb
xorl
jae
mov
test
mov
test
shrl
adc
rol
add
mov
add
ret
daa
lods
jp
lock
dec
ljmp
mov
rcl
mov
loop
or
jl,pn
icebp
es
sub
inc
orl
stc
push
sbb
adc
dec
mov
push
xor
nop
lds
pop
push
xchg
scas
mov
or
std
dec
dec
lcall
xor
adc
cli
mov
xchg
jne
jle
cld
cmpsb
adc
xor
outsb
aad
fldenv
loop
push
repnz
leave
es
cwtl
sub
dec
stc
mov
cli
fildll
jg
or
jp
or
sbb
insl
xchg
repz
loop
and
pop
adc
std
pop
dec
or
pop
jp
inc
mov
aam
and
cmp
xor
and
bound
pop
xorb
lock
int3
mov
adc
in
mov
jge
or
push
aas
jmp
jae
repnz
lock
sub
sbb
adc
jb
cmp
lds
dec
mov
daa
inc
xlat
nop
jg
and
pop
imul
sti
jae
mov
inc
loope
ss
mov
sbb
xchg
xchg
sbb
shlb
sbb
sub
push
add
mov
dec
es
sbb
lods
or
repz
stos
sti
mov
in
loopne
or
insb
fmul
mov
gs
sbb
repz
rcll
adc
pop
xor
sbb
push
sbb
jns
adc
shr
in
add
out
ds
or
xchg
das
xchg
pop
out
icebp
add
arpl
or
push
sub
les
adc
int3
sahf
adc
ss
lock
inc
xchg
sub
lret
test
push
std
jne
add
arpl
xchg
or
sbb
cmp
int
lcall
xor
lahf
fs
mov
xor
pop
scas
sbb
pop
sbb
ja
aas
roll
add
in
popa
jo
cmc
arpl
aam
mov
out
lock
push
xor
clc
cmpb
inc
dec
pop
lods
pop
pop
mov
mov
mov
enter
ss
into
dec
adc
mov
adc
jns
jns
stos
xor
jp
or
and
iret
cltd
test
push
dec
xchg
jae
rclb
add
mov
popf
xlat
cmpsb
mov
jno
push
sbb
xchg
jle
sahf
call
cltd
mov
mov
out
popa
in
mov
in
xchg
outsb
out
gs
sub
loope
xlat
fidivl
cmc
lods
sbb
sub
daa
dec
xor
aaa
je
into
flds
int
inc
push
or
ljmp
push
call
int
int3
arpl
out
push
pop
adc
int
rcll
inc
stc
inc
adc
iret
inc
loop
cltd
jnp
mov
fs
mov
lods
test
cmp
dec
lea
dec
lods
je
das
inc
out
inc
xchg
or
ss
loopne
sarl
test
jbe
mov
das
sub
das
xchg
cwtl
pop
aam
pop
xor
and
ret
int
xchg
xchg
icebp
mov
fdivr
push
stos
inc
ret
sub
outsb
mov
cwtl
pop
js
lock
jg
add
adc
aaa
fcoml
call
mov
jae
mov
cmpsl
in
stos
sub
popa
dec
sub
pop
push
leave
inc
cmp
jp
cs
cmp
lret
or
push
xchg
sub
loope
ret
and
je
lret
add
sahf
mov
mov
lock
dec
mov
mov
jle
mov
rcrb
je
add
mov
out
xor
add
xorb
test
fidivl
in
xchg
int3
and
movsl
decl
stc
das
shl
cwtl
dec
cld
fs
cmp
nop
hlt
ret
or
sub
mov
loop
pop
jno
mov
rcr
fmull
stos
xor
faddp
mov
es
mov
push
rcrl
clc
movsb
pop
push
adc
xor
divb
dec
aad
xor
lret
aaa
loope
cmpsb
subb
push
and
fisubs
dec
fdivrs
stos
ss
aam
pop
mov
mov
push
jb
push
scas
mov
rorb
jecxz
out
cmp
mov
and
sbb
daa
insl
mov
sti
addr16
xor
sbb
mov
pop
movsb
add
adc
pushf
and
or
or
addr16
sbb
mov
jge
or
repnz
fs
inc
ret
pop
sbb
push
nop
stc
aad
xchg
lcall
std
aas
mov
loope
xchg
mov
add
xchg
jg
adc
xchg
push
pop
inc
repnz
cmp
cmp
outsl
mov
nop
lock
xor
sub
out
mov
aaa
bound
add
orb
fildll
je
loopne
xchg
filds
xchg
mov
les
add
sbb
call
dec
imul
nop
cli
xor
sub
sub
cmp
inc
popf
push
imul
test
sarl
lret
add
sbb
xchg
dec
cld
sbbb
mov
ret
dec
int
std
mov
ret
cs
jecxz
cmp
push
cmc
addb
aad
lcall
sbb
popf
js
popa
cltd
lods
dec
sti
scas
and
mov
inc
fsub
push
jecxz
das
data16
xor
xchg
xchg
mov
pop
outsl
mov
dec
imulb
outsl
xor
jne
mov
add
loop
sahf
sbb
xchg
or
mov
in
pop
cli
imul
popa
testb
xchg
mov
out
cmp
roll
pop
pop
gs
popf
out
mov
or
icebp
lret
test
fwait
cmpsl
or
hlt
jo
out
aas
jg
rcrl
sub
aam
gs
mov
mov
adc
adc
test
es
dec
fistps
mov
cmp
fldl
inc
fstps
sub
add
pop
jg,pt
jbe
pop
mov
xchg
adc
jns
add
pop
popf
ja
add
loopne
arpl
call
sbb
dec
in
ret
mov
jbe
xchg
jo
sub
pushf
into
xor
inc
movsl
xor
cs
jge
mov
push
repz
cs
lcall
pop
adc
sahf
stos
into
sti
lea
jge
xlat
push
and
xchg
shll
cmp
fwait
add
xor
fwait
test
xlat
leave
jo
loopne
pop
je
test
dec
outsb
unpcklps
push
ffree
lods
loop
loope
mov
punpckhbw
sub
cmp
mov
and
xor
sub
xor
xchg
xchg
in
je
arpl
rolb
jo
push
enter
pop
add
icebp
cmp
fs
aad
das
lods
jne,pn
sbb
fwait
popa
ss
push
lahf
movsl
mov
ljmp
dec
ja
push
stos
and
loop
lods
and
jae
fs
pop
sub
pop
jg
cmp
lods
pop
cmp
adc
adc
mov
mov
mov
pop
pop
insb
or
loope
xchg
pop
arpl
std
lret
gs
out
xor
mov
pop
mov
cltd
jb
pop
aam
jno
scas
mov
jecxz
cmp
mov
xor
in
xor
mov
mov
push
inc
movsl
push
cmp
out
pop
push
lods
mov
or
pushf
addr16
ljmp
xchg
jge
lea
lods
mov
add
insl
jge
lret
push
outsb
lahf
jmp
lret
movsb
lds
in
fdiv
cltd
mov
xchg
sbb
shll
jns
cmp
cld
cli
sub
adc
int
pop
int3
mov
add
adc
mov
imul
dec
std
scas
mov
mov
hlt
add
and
cltd
cli
or
sbb
andb
and
addr16
out
mov
push
mov
adc
fcompl
mov
out
les
adc
psrlw
out
push
mov
int
push
lcall
aaa
mov
hlt
imul
fdivl
pop
sub
mov
pop
imul
orb
lds
cltd
in
xchg
sahf
xchg
shrb
xchg
test
stos
sub
push
cli
or
stos
lods
filds
fyl2x
lcall
testb
pushf
aad
xor
into
jne
cmp
fs
mov
xchg
insb
push
push
push
mov
or
and
push
xchg
rep
hlt
outsb
imul
movsl
jecxz
addb
push
es
iret
sahf
out
ja
lods
jne
in
adc
sbb
aam
cs
fadds
out
xlat
pop
repz
je
xchg
push
pop
adc
mov
loop
and
rolb
out
add
or
sub
inc
shrb
xor
add
dec
mov
jo
inc
loop
mov
lahf
call
xor
and
out
sti
mov
sub
pop
pusha
xor
inc
cmc
lea
scas
int
mov
mov
orl
out
adc
xorb
jge
test
mov
push
popa
jb
imul
cmpsb
cmpsb
adc
xor
fcmovne
and
sub
mov
lahf
popf
js
mov
pop
lret
dec
pop
push
and
and
dec
inc
push
out
lods
xor
xor
fxam
gs
call
sbb
ror
or
inc
mov
jo
adc
sarl
adc
mov
nop
js
cmp
mul
mov
xor
cmp
scas
or
inc
xor
add
gs
xor
cmp
inc
or
mov
fdivr
sbb
bound
mov
or
inc
sbb
push
xchg
dec
mov
sbb
and
xor
addr16
sti
fistpll
mov
jns
xchg
or
test
fisttps
movsb
test
mov
ret
rorb
data16
icebp
pop
mov
jg
cmc
cmpsb
cmp
pop
nop
inc
or
in
data16
mov
mov
inc
scas
lcall
orl
adc
jmp
mov
jp
sub
in
shll
dec
xor
lea
mov
les
lret
push
or
pusha
dec
xchg
pop
jb
sahf
mov
test
repz
cs
pusha
stos
lea
lret
in
mov
mov
fsts
lcall
and
add
dec
xchg
dec
and
mov
push
sahf
jne
cmp
add
aaa
sahf
push
ja
xchg
mov
inc
dec
dec
aaa
cli
and
leave
or
cmp
dec
mov
shll
repnz
xor
cmp
out
cld
sub
mov
in
daa
push
or
adc
sbb
xor
or
cmp
mov
cmp
or
insl
in
xor
jg
push
mov
cmp
cmp
xor
fs
fimuls
xchg
sbb
lods
lahf
inc
scas
jbe
or
in
pop
dec
mov
call
inc
inc
or
mov
bound
mov
flds
pop
pushf
shlb
cs
in
adc
mov
cmpsb
jecxz
sbb
mov
ret
inc
nop
mov
repz
iret
fsubs
or
pop
je
aad
das
push
and
push
addr16
sbb
mov
sarb
adc
movsl
test
rcrb
scas
pop
pop
imul
call
xchg
cld
cmc
pop
dec
jo
test
mov
lcall
loopne
add
mov
mov
and
sarl
mov
add
jecxz
ret
je
xor
pusha
test
xchg
pop
pop
jmp
lock
sbb
icebp
out
and
adcb
sbb
and
movsb
mov
adc
jmp
push
std
insl
jge
inc
mov
je
movsl
fisttps
mov
add
or
das
push
xorl
js
and
adc
mov
dec
popf
lds
enter
xchg
sub
ret
loope
add
and
fs
fdivrs
mov
inc
inc
add
dec
add
lock
sarb
sbb
aaa
cmp
int
cmp
adc
call
inc
xlat
imul
adcl
arpl
roll
cmp
adc
loop
xchg
loopne
sti
add
xor
xor
lock
frstor
add
jo
add
out
mov
mov
in
cmp
jne
imul
faddp
sub
test
shll
int3
mov
cld
xor
jge
sub
pop
cmp
repz
push
xchg
sbb
mov
and
stc
inc
aaa
sbb
lret
or
mov
fildl
add
dec
movsb
pop
les
push
jae
movsb
jp
push
xchg
push
push
mov
fwait
xchg
loope
cmp
mov
push
iret
aam
test
out
inc
fcomi
fbstp
jo
add
mov
loopne
in
stos
imul
ffreep
dec
push
sbb
mov
xchg
bound
pop
push
adc
mov
mov
mov
mov
dec
xchg
cmp
and
sbb
or
mov
fcoml
mov
pop
loope
xor
or
xor
add
xlat
test
adc
xchg
sbb
adc
sub
cltd
pop
push
rcll
imul
test
jbe
dec
test
pusha
dec
iret
rclb
adc
mov
js
xor
scas
add
xor
mov
jmp
push
and
out
icebp
and
bound
pop
dec
push
enter
push
dec
xchg
inc
jo
ss
rcrb
mov
cmp
and
push
push
jb
enter
push
and
push
push
inc
mov
pop
mov
and
and
clc
inc
test
dec
rolb
mov
imul
insb
pop
sub
mov
mov
xor
enter
std
xor
icebp
pop
dec
lods
pop
scas
sub
pop
orl
jle
mov
pop
mov
emms
pop
pushf
xchg
je
mov
jno
xchg
repz
sbb
pusha
mov
cmp
jl
aam
call
fstps
arpl
and
add
pop
push
jo
enter
int3
adc
ja
into
push
test
rcrb
mov
inc
mov
mov
sti
fldenv
push
ja
insl
movsl
sub
lcall
mov
mov
imul
inc
popa
push
fsub
push
dec
out
xor
dec
loope
icebp
movsb
pop
sbb
rcl
mov
xor
push
in
adc
ja
mov
mov
sub
xlat
mov
cs
cmpl
sti
adc
jge
adc
fcmovnu
and
jg
scas
xchg
xchg
faddl
scas
sbb
and
roll
sub
inc
sub
jecxz
and
cwtl
push
or
jb
and
cmp
movsb
jp
subb
jnp
mov
loop
sarb
fwait
cmp
jge
mov
push
ror
jle
sbb
add
cmp
jg
cmpsb
fildl
lret
gs
jb
int
ret
mov
jp
sbb
popa
lock
pop
pop
mov
fistpll
mov
mov
ret
test
add
lods
inc
ret
pop
mov
dec
inc
scas
movsb
lock
stos
out
jbe
cmp
hlt
lcall
lods
mov
mov
bound
sub
dec
mov
push
leave
adc
or
mov
lods
outsb
xchg
inc
outsb
mov
and
xchg
add
inc
lcall
js
sarb
out
push
xor
mov
adc
push
mov
mov
sub
pop
leave
dec
cmp
jae
mov
mov
mov
test
sub
cs
jecxz
inc
into
sub
xchg
ds
add
add
scas
aad
mov
xor
loop
ja
test
push
lret
frstor
test
scas
div
add
je
xchg
sbb
sti
ss
adc
inc
pop
mov
push
sub
jecxz
popf
hlt
push
inc
inc
shll
int3
xchg
cltd
arpl
mov
lahf
xor
ds
cmp
into
inc
inc
xor
adc
clc
pop
jecxz
movsl
fnstenv
pop
xor
mov
popf
repz
loopne
xor
aam
add
ret
icebp
iret
fdivs
sahf
ja
adc
mov
repnz
arpl
outsb
cmc
insl
mov
pushf
cwtl
out
jns
add
xlat
dec
jle
lcall
roll
mov
int3
and
push
adc
xchg
cmpsb
fwait
or
fwait
cmpsb
cmp
jb
sbbb
arpl
push
dec
xor
or
mov
ret
inc
jbe
shrl
stos
js
dec
out
push
push
aad
xchg
add
cmp
add
cwtl
int3
aas
icebp
aad
stos
out
rclb
loope
push
jmp
and
pop
shll
aam
std
test
cld
xchg
jmp
add
pop
in
mov
es
mov
imul
or
xor
adcb
fcomp
pop
jge
push
push
adc
jmp
push
rcrb
jno
cmp
jb
adc
xor
inc
jmp
icebp
xchg
add
push
add
lods
xchg
adc
sbb
push
push
imul
call
push
xor
push
iret
sbb
sbbl
movsl
popf
lahf
push
pop
enter
test
jge
fcmovnbe
push
push
gs
sub
int
inc
mov
xor
nop
in
shlb
mov
cmp
add
fnstsw
mov
add
or
cli
in
inc
fldcw
or
sbb
clc
dec
and
aad
enter
aad
and
cld
jecxz
xchg
cmp
lods
xchg
ret
xor
mov
rolb
adc
or
cs
ret
push
cwtl
adc
test
and
add
or
sbb
fs
push
inc
cmp
ficoml
adc
std
jge
jl
xor
daa
in
leave
sub
or
shll
sub
mov
ss
mov
jg
mov
and
xor
mov
cmp
out
cmc
mov
mov
dec
imul
pop
xlat
hlt
adc
lods
mov
int
outsl
sbb
imul
rcrl
dec
mov
mov
add
push
insb
fs
or
stos
js
xchg
bound
jecxz
loopne
xorl
sub
pop
dec
data16
movsl
add
jb
stc
fstpl
mov
lret
add
testb
aam
fsubrl
cmp
and
pop
cmp
fstpt
pop
adc
push
movsb
mov
mov
ja
add
add
fs
mov
push
xchg
cmp
mov
pop
cli
xchg
xor
push
jae
je
shlb
push
xor
mov
inc
pop
sbb
or
incb
fdivrl
scas
xchg
mov
push
mov
jp
negb
inc
add
mov
xlat
stc
and
push
mov
fs
cmp
int3
subb
cmc
and
ds
subl
test
into
jg
lods
in
mov
add
sbb
sbb
test
push
sub
fsubrl
xchg
insl
filds
movsl
adc
sub
inc
pop
xor
push
aaa
sub
push
pop
push
aas
dec
or
lcall
jne
adc
movsl
das
pop
decl
sti
mov
test
ja
insl
xchg
xchg
lea
shl
daa
cs
test
mov
xchg
xchg
fwait
xorl
fidivrs
add
in
cmp
test
ljmp
ret
add
mov
cmpsb
div
dec
cmpsl
cmpsb
adc
mov
add
out
xor
sub
enter
negb
jecxz
js
jg
out
loopne
jno
fnstcw
or
mov
and
enter
and
das
repnz
fwait
ds
imul
rcrl
add
daa
outsl
xchg
mov
add
ja
nop
mov
inc
mov
inc
daa
inc
jl
pop
push
cmp
gs
scas
mov
cmpsb
sbb
lods
std
outsl
or
mov
mov
orl
int
test
sbb
mov
push
and
out
gs
gs
in
cmp
xchg
pop
rol
ficompl
andb
cli
in
xchg
or
das
mov
and
mov
sub
stos
add
hlt
mov
test
loope
cmp
mov
and
and
nop
mov
testb
sub
lahf
jg
push
sti
nop
xlat
daa
out
jmp
stos
mov
int
pop
scas
or
pop
add
xor
imul
mov
stos
call
lods
lret
mov
dec
daa
cmp
dec
jmp
pusha
xor
push
jmp
inc
fwait
pop
adc
ja
xor
xchg
scas
rolb
out
les
in
dec
xchg
pop
movsl
push
pop
mov
mov
sbb
movl
aad
xor
lahf
xlat
xor
pop
fcmovnb
aas
ror
std
mov
sub
sbb
pop
in
out
cld
ss
jmp
sub
add
into
mov
jns
add
and
std
cmc
adc
inc
jmp
sub
jae
xor
inc
jecxz
in
insl
outsb
sub
ret
and
arpl
dec
mov
mov
neg
das
test
movsl
int
scas
fimull
mov
lods
or
enter
stos
dec
data16
aad
inc
sarb
dec
lods
dec
punpckhdq
pop
xor
mov
aas
push
movl
dec
imul
mov
cmp
enter
push
pop
subb
pop
cmp
xchg
std
or
in
cmc
std
out
cmpsl
xchg
mov
jnp
adc
jo
lds
xchg
mov
xor
push
mov
mov
jb
rcrb
cmpsl
lods
mov
and
inc
mov
add
inc
push
rcl
mov
sbb
inc
lods
imul
cmp
mov
push
dec
lds
dec
jns
ss
mov
mov
sub
jl
jle
add
dec
and
dec
mov
out
mov
add
xchg
cmp
loop
sbb
dec
push
lahf
adc
push
pop
cmp
pop
pop
loope
mov
mov
loope
sbb
sub
xchg
sar
jmp
jbe
sub
mov
sbb
in
jle
into
xor
fisubrs
mov
xor
out
lahf
inc
jns
dec
dec
aas
mov
jp
mov
push
fimuls
repz
adc
push
lock
out
mov
cmp
inc
mov
pop
sbb
stos
test
lahf
jl
es
mov
or
pop
stc
call
inc
iret
fldenv
cmp
and
dec
fldcw
xor
pop
jns
sbb
clc
mov
fistps
frstor
pop
cwtl
fdivl
mov
cmp
adc
stos
mov
jle
int
sti
test
inc
sbb
rcrb
mov
inc
lcall
push
push
cmp
jb
out
stc
call
clc
sbb
push
cwtl
jae
add
out
cmpsl
popl
mov
mov
jmp
cmpb
sub
mov
fidivs
test
adc
mov
sub
add
xor
roll
sub
aam
xchg
and
sub
mov
cmpsl
jg
adcl
sti
fstl
lahf
mov
pop
es
cld
push
pop
test
mov
sbb
je
push
popa
jle
sbb
imul
pop
push
imul
ja
cmp
sbb
and
dec
repz
adc
pop
bnd
mov
adc
aam
push
fwait
scas
xchg
sbb
xchg
and
lea
adc
cmp
add
mov
pop
jno
or
mov
adc
scas
movsb
xor
repz
inc
shlb
aam
or
push
clc
ror
jnp
push
xchg
push
mov
cmp
loope
pop
mov
repnz
push
mov
repz
jge
push
or
or
addb
es
test
and
movsb
shrb
push
lcall
mov
lahf
push
clc
jle
inc
xor
sbb
int
int3
pop
mov
dec
mov
in
cmp
xchg
cmp
outsb
cld
int3
nop
xor
and
jg
jge
or
inc
xchg
jno
test
imull
test
mov
push
mov
jbe
jnp
and
ret
cmpb
xorl
inc
outsl
aas
out
push
gs
mov
fs
data16
sbb
aaa
jge
and
in
fs
mov
imul
adc
shll
jo
mov
test
mov
fisubrl
out
xchg
mov
rcrl
in
mov
enter
nop
push
xchg
fdivr
and
add
dec
cmp
inc
sub
ja
mov
sub
and
aad
sub
jbe
das
pushf
das
divb
lea
enter
cmp
fnstsw
adc
push
xchg
mov
out
fucomi
scas
inc
sbb
bound
mov
in
xor
adc
gs
fsubl
fnsave
and
dec
cld
xchg
mov
mov
in
jns
mov
adc
dec
and
mov
mov
mov
cs
pop
repnz
movsl
push
pop
mov
shrl
cmp
inc
mov
inc
mov
sti
mov
xor
mov
mov
addr16
inc
inc
in
xchg
rcll
jle
outsl
data16
ja
pop
dec
test
clc
xchg
js
mov
dec
and
add
mov
and
mov
and
icebp
clc
jecxz
adc
push
test
lret
xchg
mov
sbb
dec
daa
out
cmpb
rcll
or
push
lahf
mov
lret
dec
notb
repnz
add
fwait
mov
jb
data16
mov
pop
add
cs
cmp
or
pop
adc
push
popf
jae
cmc
lahf
sub
add
mov
mov
mov
xlat
repz
rclb
cmp
push
xor
and
mov
mov
pop
aaa
lods
jg
jg
mov
and
lods
bt
dec
add
mov
ret
je
inc
pop
add
arpl
inc
test
rcrl
xchg
ljmp
das
inc
xchg
adc
rorb
stc
cmp
jns
push
cltd
daa
mov
inc
mov
push
arpl
push
call
inc
xchg
stos
rcrb
mov
bound
cmp
mov
xchg
popf
pop
or
mov
mov
cmp
in
sbb
add
push
int3
insb
aam
je
jnp
lret
pop
test
rol
pop
mov
mov
add
popf
loop
adcl
mov
lret
ret
iret
data16
shll
les
ljmp
aas
ljmp
ds
dec
idivl
push
test
xor
lea
in
pop
repnz
sbb
inc
pusha
cmpl
imul
and
lds
dec
testb
adc
adc
cmp
and
out
xor
jae
push
mov
outsb
sbb
dec
cmp
lock
sub
scas
ja
push
and
ret
inc
outsb
mov
mov
ds
int3
push
mov
cmp
sub
imul
insl
das
xchg
ja
push
cmp
sbb
adc
add
fmul
loop
out
dec
inc
repz
test
orb
fstpl
shr
mov
sub
sbb
mov
lret
xchg
fidivl
add
mov
iret
dec
cs
rcr
iret
cmp
pop
lods
or
clc
mov
shr
jp
js
add
push
outsl
out
lret
dec
inc
aad
fmuls
in
test
mov
sub
xchg
xchg
pop
leave
jae
xchg
adc
daa
negb
cmpsb
imul
pop
and
lahf
inc
fistps
sub
xchg
cs
jne
or
out
adc
les
push
in
imul
test
test
lods
loope
cltd
cmp
jg
inc
push
or
fsubrs
xchg
push
enter
cwtl
mov
sbb
in
and
daa
jg
sbb
mov
shrd
sahf
sbb
ja
xchg
mov
xor
dec
or
pop
xchg
adc
fs
dec
in
clc
movsl
out
dec
pop
lods
dec
adc
loope
mov
dec
sbb
out
es
jp
call
dec
js
es
jecxz
nop
movsb
inc
dec
xchg
orb
jmp
cli
sbbl
test
and
stos
xor
pop
mov
rorb
mov
jle
scas
mov
fucomi
mov
ret
es
pop
or
pop
or
sbb
rol
xor
dec
fildll
inc
loope
jnp
mov
nop
iret
in
push
push
cmp
xor
mov
pop
xchg
icebp
add
int
das
or
or
into
dec
sub
sbb
sbb
and
popa
lds
push
lds
rep
adc
mov
cs
and
scas
mov
jmp
jg
clc
mov
addr16
cwtl
iret
fsts
inc
outsb
cmp
xor
jecxz,pn
push
mov
push
lret
xchg
mov
mov
cmp
lds
xchg
rcl
or
cmpsl
xor
xchg
mov
push
xchg
out
push
xchg
mov
inc
addr16
aad
push
rcll
int3
ljmp
shll
xchg
movsl
and
mov
pop
or
mov
add
call
outsb
mov
ljmp
notrack
pushw
outsl
nop
fdiv
pop
xor
loop
iret
pop
cmp
xor
stos
jl
pop
pop
jnp
mov
repz
dec
jecxz
pop
movl
movsl
add
scas
movsb
insl
stos
or
stos
add
adc
out
int3
repz
out
dec
out
sub
sar
adc
mov
push
sbb
cmp
xchg
in
adcl
mov
fldl
cmpsl
push
mov
mov
inc
push
pop
pop
pop
jbe
inc
test
xlat
mov
lret
insl
pop
xor
push
and
jb
into
fmul
xchg
daa
ds
push
sub
xor
dec
or
es
sahf
mov
adc
das
push
inc
cmpsl
jg
pop
movsb
call
adc
and
sub
loop
and
mov
mov
or
out
sbb
test
jnp
stc
js
or
push
cltd
jae
dec
das
stos
in
xchg
mov
inc
sbb
sahf
pop
in
sti
push
pop
jg
rolb
into
lcall
dec
xor
mov
inc
jns
jl
add
jmp
filds
push
add
dec
rolb
pop
out
jecxz
xchg
out
shll
out
push
es
and
xchg
repz
cli
sub
inc
dec
sbb
push
jg
mov
xor
adc
pop
inc
xchg
stos
out
outsl
xor
inc
or
inc
sub
adc
scas
shlb
sahf
sub
sub
xor
mov
jb
cld
hlt
push
xchg
inc
iret
ret
pusha
mov
aaa
add
push
loopne
mov
xor
imul
pop
loop
pop
iret
idivl
ficoms
mov
into
pop
ljmp
jb
mov
dec
jnp
add
mov
mov
xchg
fistps
mov
mov
mov
dec
ss
or
jnp
loopne
pop
je
inc
pop
or
mov
in
fs
push
aad
cli
inc
pop
cmp
pop
or
int3
sub
push
inc
out
cmpsb
jns,pn
fstps
mov
xor
stc
mov
jns
jo
jbe
les
cmp
ret
rorl
es
insb
mov
sub
and
sub
mov
fisubl
mov
das
push
mov
dec
mov
cld
stc
xchg
mov
decb
repnz
js
jmp
push
jnp
int
push
call
cmpb
xchg
and
jg
inc
mov
and
or
clc
xor
data16
shlb
xchg
xchg
jno
test
mov
fwait
test
dec
dec
add
mov
lods
sub
push
scas
dec
add
inc
adc
push
pop
loope
add
pusha
dec
xchg
add
mov
pushf
rcrl
mov
mov
or
or
orb
mov
subl
repnz
out
inc
pop
movsl
rcll
mov
lret
test
xor
rcrl
outsb
movsb
gs
pop
mov
jp
jb
lcall
mov
scas
not
mov
cmc
push
vpshufd
cmc
push
testl
dec
loope
inc
lahf
les
add
push
aad
or
jle
out
cmpsb
jne
rcrb
pop
inc
pop
sti
mov
pop
sar
cltd
ret
jno
fimull
jmp
add
pop
test
lds
jae
ret
fists
adc
movlps
and
xchg
mov
ja
inc
add
and
push
lahf
inc
mov
ja
aaa
add
mov
jb
or
ficoms
popf
inc
and
jae
inc
imul
sti
mov
out
out
ja
aas
leave
fmul
arpl
shlb
cmpsw
pop
lret
jb
xchg
xchg
idiv
inc
xchg
insb
pop
lret
lea
sub
pop
stos
in
ficoms
push
call
popaw
cmpsb
adcl
add
cmc
subb
pushf
bound
jg
and
test
mov
aam
aaa
int3
jmp
push
xchg
es
xor
sub
dec
popf
fdivr
nop
mov
xor
nop
mov
push
jbe
int
je
mov
inc
push
cmp
xor
sub
sbb
into
cmp
and
repnz
out
hlt
sar
cmp
xchg
adc
cmp
popf
cmpsl
ret
and
dec
cmpsl
lea
insl
dec
cs
and
mov
nop
xchg
test
lret
sub
xchg
dec
and
addr16
mov
test
loopne
pop
out
lods
pop
clc
cs
dec
aam
in
add
clc
push
lods
xchg
insb
push
mov
in
stc
sub
fnstenv
pop
add
jo
lea
movsl
mov
addb
in
inc
sbb
cmc
dec
pushf
pushf
icebp
insb
or
lods
xor
arpl
sub
adc
stos
fucomi
sbbb
push
sahf
in
or
adc
jg
sub
sti
test
rcrb
js
xchg
repz
insl
or
aam
or
dec
ret
mov
xorl
stos
inc
pushf
out
inc
or
lahf
mov
das
out
div
pop
int
cmpsb
xor
jns
adc
cs
fidivl
or
cmpl
stc
dec
cltd
mov
imull
and
adc
cltd
test
pop
sbb
lret
xor
cmp
or
into
or
pop
mov
rcl
mov
cmp
iret
xchg
sahf
insb
xchg
adc
scas
jo
arpl
xor
pop
call
jne
xchg
mov
mov
and
jo
xchg
jl
dec
lret
fldt
jg
mov
sbb
pop
sbb
in
jne
dec
adc
jecxz
fidivl
inc
js
fucom
xchg
fistpl
sbb
test
aas
ret
push
stos
aad
adc
cmp
and
mov
sub
add
jb
popa
push
fs
mov
leave
mov
jnp
add
mov
mov
lcall
lods
and
fidivs
mov
or
popa
push
jge
mov
lret
icebp
test
or
in
jle
push
mov
jbe
mov
gs
add
fstl
pusha
xchg
daa
jp
mov
aam
int3
xchg
push
loop
mov
push
xor
xor
adc
push
pop
imul
loopne
jge
cmp
in
add
and
popf
mov
cs
mov
sbb
enter
repnz
std
push
sub
loop
jns
adcl
leave
cmp
pop
lea
adc
scas
scas
imul
inc
jmp
xchg
and
pop
inc
fucom
loopne
cmp
add
xchg
jl
add
mov
sub
imul
and
call
xor
cs
jg
cmpsb
nop
jne
inc
cmpsl
cmpsb
pop
cmp
in
and
mov
mov
fildll
push
xchg
mov
cltd
into
sub
iret
mov
add
adc
jecxz
xchg
into
pop
bound
adc
orl
mov
and
int3
xorb
in
sub
cmp
scas
das
sbb
fimuls
cwtl
mov
dec
adc
mov
cs
dec
daa
adc
or
not
in
repz
pop
mov
ss
jno
jle
or
push
push
out
or
mov
ljmp
mov
push
mov
adc
or
mov
out
fcomps
push
into
data16
rolb
inc
adc
faddp
and
sbb
or
out
mov
pop
pop
inc
imul
fwait
shl
rcrb
pop
xchg
shll
outsb
test
pushf
push
push
sub
add
leave
mov
enter
adc
sbb
dec
inc
clc
mov
test
jo
add
push
repz
orb
or
in
mov
pushf
sbb
sbb
adc
inc
dec
mov
dec
mov
push
lret
sub
xchg
jg
dec
jo
pop
stc
cmpsb
mov
je
push
dec
adcl
or
or
sbb
jns
mov
mov
mov
adc
cmc
jecxz
sbb
fisttpl
call
sti
lods
sbb
popa
xchg
cmp
sbb
jae
mov
cmp
or
imul
loope
shrl
cwtl
loopne
rcl
push
loop
je
jg
das
das
xchg
jne
jmp
aad
lods
sbb
push
stc
pop
adc
iret
data16
xor
cmp
push
sub
vpmovsxbq
icebp
mov
outsb
xor
bound
jmp
iret
popf
mov
hlt
sti
pop
add
in
ja
ss
dec
cmp
test
mov
inc
pop
or
lock
xchg
rolb
lret
cmp
mov
test
test
jle,pt
popa
loopne
cld
cmp
pop
xor
ret
fdivp
mov
movl
inc
jmp
jae
and
and
arpl
aas
and
or
outsl
push
or
inc
jl
push
dec
jne
fisubrl
adc
cld
mov
xor
adcb
jmp
popa
mov
push
or
mov
in
cmp
mov
aad
push
inc
cmp
ja
sub
cwtl
int
outsl
dec
adcb
mov
push
and
lods
or
pop
adc
insl
mov
ja
cs
xor
mov
je
mov
shll
icebp
leave
mov
push
je
inc
into
pop
inc
cld
push
loope
fiadds
and
pop
mov
stos
push
out
popf
push
mov
mov
popf
adc
xor
inc
jle
mulb
pop
outsb
imul
outsb
sub
repz
in
add
cmovno
push
and
and
mov
push
push
push
push
sbb
xchg
lea
in
out
pop
mov
in
movsl
cwtl
mov
popf
sbb
or
push
cwtl
jp
push
inc
fildl
inc
imul
inc
es
sub
pushf
pop
dec
imul
insb
sbb
and
mov
iret
lods
pop
mov
push
xor
in
stos
sarl
sti
sarl
scas
mov
popf
fimull
aaa
maskmovq
testl
pop
leave
and
outsb
jo
pop
dec
push
int
mov
jle
loopne
jno
call
ret
repnz
add
sub
jecxz
test
test
mov
jns
imul
fdiv
jae
into
mov
arpl
lods
dec
daa
orl
repz
cwtl
or
movsl
leave
shll
scas
sbb
inc
imul
jbe
lcall
pop
fbstp
scas
ret
int3
push
out
enter
add
aas
icebp
in
jo
outsl
pop
mov
xlat
add
aam
jb
test
jg
adc
lea
iret
mov
sahf
inc
add
dec
xchg
pop
sbb
jge
subl
mov
push
aaa
mov
jmp
mov
xchg
lock
in
adc
ds
loopne
sets
sbb
loopne
and
outsl
fdivs
pop
enter
sar
insl
jp
ljmp
insl
int
xor
loop
stos
mov
imul
lock
lret
stc
cli
inc
popa
push
arpl
rcr
cltd
push
rorl
jp
stc
ljmp
pop
or
cmp
stos
or
cmc
adc
jno
push
push
in
adcl
loop
das
inc
stos
mov
je
dec
add
pop
dec
daa
xchg
xor
mov
cmp
pop
popa
in
xchg
jg
scas
out
out
popa
xchg
aad
fs
jmp
jle
cld
rolb
pop
loop
sbb
je
jmp
cmp
pop
test
pop
ret
sbb
sub
mov
xchg
dec
test
and
out
sub
pop
movsl
jp
imul
add
pushf
int3
imul
mov
sbb
test
enter
push
push
out
jp
push
xor
jge
imul
nop
jbe
mov
fsubr
mov
popf
pop
inc
pushf
xor
ret
add
imul
mov
or
sbb
mov
fwait
inc
xor
out
cld
lods
pop
jns
pushf
pusha
cltd
mov
dec
mov
cmp
stos
or
subl
adc
pop
outsl
icebp
addb
movsb
das
push
adc
push
pop
cs
jnp
dec
push
push
and
mov
lahf
popa
jp
jl
push
mov
mov
ds
push
add
sbb
jge
les
mov
scas
cmp
xor
jb
icebp
push
or
cltd
xor
insl
and
or
shl
je
add
scas
lahf
inc
adcl
int3
inc
push
repz
mov
mov
ss
dec
dec
mov
adc
push
bound
adc
movsl
das
subl
jmp
aad
pop
adc
popf
adc
inc
mov
xor
aad
inc
stos
jmp
add
sti
xor
mov
shlb
pop
hlt
cli
xor
call
lock
subb
negb
jb
lock
and
js
jbe
or
test
sub
cmp
inc
daa
jl
mov
push
jb
jbe
or
inc
sub
insb
daa
pop
xor
idiv
lahf
lock
cltd
jl
adc
mov
xchg
pop
sbb
fstpl
pop
sahf
xchg
inc
mov
inc
bound
incb
ja
das
push
stos
ljmp
sub
dec
sbb
mov
ret
mov
sbb
ja
jecxz
jnp
ret
cmpsb
sub
outsl
ss
in
inc
data16
fisubs
add
lret
cmpsl
pushf
ja
sub
xor
jo
imul
add
xor
add
sbb
cmp
arpl
mov
data16
scas
test
or
pop
dec
cmpsl
adc
lods
or
add
out
add
out
int
sbb
push
fisttpl
in
push
inc
shrb
arpl
mov
aaa
movsb
cs
mov
data16
ss
test
xchg
test
iret
lds
mov
leave
leave
jge
push
fisttpl
negb
imul
test
arpl
ja
stos
adc
enter
jb
or
cmpsb
mov
mov
and
pusha
stc
lods
ss
adc
mov
in
mov
scas
loop
sbb
stc
pop
pop
push
negl
or
ljmp
dec
cs
mov
popf
mov
cli
mov
jl
sub
adc
popf
mov
mov
sbb
adc
imul
mov
xchg
fimull
scas
je
fisubl
fldln2
sbb
iret
pop
andl
push
pop
mov
hlt
sarb
xor
dec
mov
sub
push
push
cmp
sub
dec
and
xor
jae
pop
ja
or
mov
fistps
or
add
mull
rcll
inc
pop
xor
outsb
dec
jmp
int
jno
iret
out
adcb
jo
imul
mov
push
add
out
sub
xor
xor
out
leave
dec
mov
lods
je
inc
inc
mov
push
inc
adc
repz
in
jnp
add
jns
dec
negb
xchg
xchg
in
push
cmpsl
cmp
insl
in
fadd
jo
add
dec
push
std
out
nop
ret
hlt
loopne
and
cmp
mov
call
les
aas
sbb
arpl
add
in
or
push
cwtl
dec
or
movsl
stos
loope
shrb
test
jne
neg
pop
or
sbb
lea
divb
loop
mov
mov
sbb
nop
outsb
sub
and
cwtl
push
xor
ss
fimuls
pusha
dec
movsb
sahf
jge
jbe
or
pop
add
adc
or
stos
dec
or
inc
jmp
add
insl
ret
dec
es
mov
xor
stc
fcoms
jbe
outsl
in
lods
inc
sub
into
dec
mov
and
ret
inc
gs
push
sub
jmp
or
mov
push
xor
adc
mov
mov
jae
fnstsw
mov
jl
shll
and
dec
cmp
mov
cmpsl
pop
test
jp
int3
sarl
push
push
mov
inc
pop
cmpsb
lock
movsl
jno
test
shrb
ret
aas
das
dec
dec
or
out
sbb
ret
out
sub
shlb
adc
aas
inc
sarb
mov
mov
push
insb
js
ret
jno
mov
add
aaa
sbb
aaa
lcall
add
jp
jp
ss
add
fdivrs
int3
mov
pop
out
xchg
mov
xchg
sbb
xor
sub
loopne
jo
lret
test
mov
hlt
es
mov
ficoms
pop
or
add
push
adc
lret
xchg
or
stos
outsb
lret
into
xor
js
mov
lds
sub
adc
xchg
mov
je
and
ret
ljmp
and
std
inc
xor
push
dec
movl
push
pop
mov
push
push
dec
dec
pop
cmp
movsl
ljmp
mulb
int
cmp
cmp
insl
xor
rorl
lods
clts
mov
jl
cmc
sub
cmpsb
imul
inc
pop
loop
insb
jb
or
fiadds
cmp
std
lea
repnz
shrb
fstl
sbb
push
sub
jns
and
incl
inc
ffree
je
cli
or
ret
je
mov
add
adc
or
and
ror
cltd
add
out
dec
lret
and
je
xor
sub
test
dec
jo
into
orl
and
pop
push
scas
push
loopne
push
fneni(8087
loope
xor
push
mov
leave
clc
pop
inc
sub
cmp
inc
pop
xor
push
cltd
inc
inc
ljmp
adc
adc
cmp
rcrl
sbb
mov
fisubrs
mov
and
cmc
outsl
mov
and
jge
dec
lret
scas
jae
jle
dec
call
rorl
mov
out
hlt
ss
aam
push
ret
xor
sti
ds
inc
pop
pop
jno
and
push
xchg
out
enter
pop
cmp
xlat
cli
test
pop
mov
inc
daa
mov
xchg
inc
push
fs
add
inc
jecxz
in
inc
mov
cmp
dec
lret
nop
xor
sub
push
and
jg
ret
lcall
mov
or
jmp
cmp
repnz
dec
dec
das
pop
stos
jb
push
lret
shl
push
imulb
sub
cmp
inc
sub
push
pop
insl
pop
and
daa
sti
cltd
and
sub
push
dec
mov
popf
jns
mov
addr16
push
xchg
mov
xor
int3
mov
clc
in
push
fwait
sbb
loopne
sti
call
leave
out
addr16
mov
daa
push
sub
insb
stos
das
dec
jmp
cmpl
dec
mov
sbb
add
jmp
or
loopne
jns
out
rcll
add
dec
aad
jmp
xchg
push
dec
in
xor
pop
lcall
repz
test
adc
pop
pop
jp
stos
adc
cmp
adc
pop
negl
xchg
fwait
outsb
xor
dec
sbb
adc
inc
sub
and
cmp
pop
fistps
sbb
les
pop
xchg
mov
cmp
xchg
in
push
jmp
or
dec
pop
cmp
ret
clc
mov
xchg
inc
enter
leave
out
in
xchg
sub
jbe
jbe
jb
inc
inc
add
cmpsl
jb
mov
mov
lahf
or
loop
push
push
loopne
mov
and
ficoms
sub
mov
arpl
bnd
jl
lods
jae
jl
call
mov
xchg
pop
les
pop
and
xor
sub
inc
pop
mov
sub
test
cltd
repnz
pop
pop
xor
int
loope
jb
push
sbb
sub
mov
sarl
fmul
outsl
mov
xor
mov
mov
xchg
add
mov
sarb
sti
ljmp
push
xchg
gs
loopne
push
cmp
pop
push
aas
jbe
and
or
in
fnstenv
pop
shll
mov
movsl
sbb
in
xchg
jnp
xchg
cmp
or
jmp
imul
jmp
mov
add
cmpsb
ret
fisubrs
lret
push
fisttpl
inc
lods
ret
divl
flds
mov
icebp
mov
and
cmpsl
outsl
pop
insl
loopne
jecxz
or
cld
push
cltd
sti
mov
jp
or
jne
stos
jbe
mov
sub
mov
insb
movsb
sub
js
in
pop
into
popf
fbstp
sbb
out
add
mov
imull
fimuls
icebp
add
cmpsl
sbb
rcr
adc
dec
fidivrl
pop
es
jecxz
jg
movb
sbb
mov
pop
aam
jno
lret
pop
movsb
sahf
cmpsl
jne
cwtl
mov
adc
and
ret
shl
xor
jno
ret
inc
and
stc
int3
xchg
push
push
mov
sti
ss
adc
lcall
add
jecxz
and
pop
mov
mov
imul
fsubs
shl
xchg
xor
sub
cmp
fnsave
pop
out
cmp
imul
enter
outsb
mov
loopne
jl
xor
cmpsl
cmp
xor
fisttps
cltd
adc
das
pop
mov
out
arpl
mov
jle
fisttpl
lcallw
call
mov
scas
int
fbld
jnp
mov
sub
popa
aam
jnp
fdivs
pusha
and
lret
lcall
pop
add
sarb
lahf
dec
aaa
add
push
pop
sub
inc
inc
jle
scas
push
jno
jnp
xor
lods
fwait
ret
ja
or
fimull
add
xor
roll
jge
scas
aam
or
int
mov
jp
in
xor
adc
cmp
pop
popf
cmp
mov
jb
out
fisttpl
popa
cmp
and
das
int3
repnz
out
mov
pop
xchg
lret
hlt
sbb
push
jg
xor
dec
movsl
push
cmc
adc
pop
loop
mov
pop
inc
cltd
andl
push
xor
pop
jg
mov
cmc
xchg
lock
lea
lret
push
inc
daa
test
fld
outsb
jmp
ds
push
pop
mov
pop
mov
add
insb
pop
test
jp
inc
pop
jmp
icebp
and
mov
fsubl
and
lret
adc
insl
mov
jae
mov
and
sub
add
hlt
add
mov
mov
xchg
jge
or
jbe
pusha
stc
or
dec
in
negl
outsb
adc
aam
xchg
int3
mov
cltd
das
cmp
mov
mov
sahf
sub
daa
popf
je
pop
add
jno
mov
sub
pop
daa
cmpsb
push
mul
xorl
lds
mov
lock
sbb
add
pop
sbb
dec
popa
shr
push
sbb
mov
xchg
push
sti
mov
lock
or
sahf
jge
dec
sbb
xchg
pop
inc
mov
ds
hlt
pop
xor
dec
fisubrl
mov
xchg
push
enter
mov
pop
scas
cwtl
xchg
xor
and
enter
and
adcl
or
mov
jp
testb
mov
push
xchg
mov
sbb
mov
test
movsl
out
cmpsl
aaa
in
xor
daa
ds
jge
in
popa
lret
jg
xchg
pop
filds
mov
sti
pop
mov
adc
pop
xchg
jle
cmc
outsl
fildll
stos
aad
fnstcw
xlat
or
sub
sahf
push
cmp
inc
dec
xchg
adc
push
test
mov
sbb
popa
xchg
mov
pop
mov
jle
fmull
cs
mov
push
xorl
mov
out
fimuls
mov
push
xor
and
add
es
and
adc
mov
xchg
insb
insb
xlat
sahf
imulb
rolb
mov
ret
shrl
add
pop
int
dec
adc
pop
dec
popf
push
and
pop
or
jmp
cmp
movsb
les
xor
or
insl
pop
cs
mov
sub
jmp
adc
mov
and
je
and
in
and
jbe
push
cmp
mov
pop
rcll
xchg
push
cmpsb
stc
add
mov
repz
js
cmp
xchg
loopne
inc
jns
leave
les
xchg
or
lods
cmpsb
orl
xchg
test
cmpsl
test
insl
shll
sub
cs
pop
icebp
stos
inc
cwtl
imul
std
lret
push
iret
jge
dec
into
hlt
leave
sub
aas
mov
bound
in
jno
xchg
push
sub
stos
and
sahf
loop
inc
add
out
adc
push
inc
jg
pop
gs
inc
loope
xchg
jbe
enter
popa
mov
das
jae
mov
jp
pop
std
sbb
out
jecxz
mov
iret
cmp
mov
push
sbb
out
subb
lea
xchg
mov
cmp
imulb
mov
dec
add
pop
mov
hlt
lea
pop
shrl
flds
sub
cmpsb
lock
adc
jne
cmpsl
mov
mov
cs
lahf
sub
cmpb
inc
icebp
aas
repnz
fwait
sub
dec
fdivrl
push
sub
out
inc
and
jle
clc
and
pushf
xchg
movsb
ret
dec
sti
hlt
aas
xchg
aas
push
mov
in
jnp
mov
mov
orb
aam
mov
shlb
in
out
arpl
aaa
in
cmpsb
push
or
sbb
adc
fidivs
movsb
loop
xchg
inc
dec
lods
jge
cmp
subb
sarb
push
dec
add
xchg
sub
add
push
bound
xchg
push
push
repnz
ret
ficomps
add
sbb
xchg
pop
test
pop
test
push
push
pop
inc
in
sarb
scas
cs
mov
cltd
js
cmp
test
lret
mov
or
pop
push
stos
lock
or
pop
fwait
iret
rcrl
andb
push
xchg
pusha
pusha
pop
leave
mov
int
xor
cmpsb
pop
jb
sbb
decl
ds
sub
arpl
xor
jns
rcrb
dec
push
lock
dec
ret
ret
js
push
in
sbb
pushf
lock
stos
aaa
push
sub
std
loope
mov
in
and
aad
mov
fs
js
repnz
sti
aam
adc
xchg
push
adc
xchg
and
jg
and
push
mov
jbe
aad
imul
out
push
out
das
cmp
das
shll
push
push
ds
rcll
loop
fidivrs
cmp
mov
les
stos
xor
jb
or
dec
call
in
and
stos
xchg
lcall
test
notb
sti
es
mov
sub
push
and
lret
outsb
imul
mov
cmpsb
into
inc
outsl
mov
fistpll
and
dec
int3
or
add
xchg
lret
sbb
adc
push
scas
jno
cmp
mov
jecxz
sbb
jnp
repnz
cmp
sub
into
pop
cmp
and
ficomps
ret
xor
xchg
cmc
hlt
in
push
fisubrl
inc
inc
jae
sbb
sub
mov
leave
sbb
mov
push
add
popf
jl
pop
jbe
pop
sub
push
pop
sub
push
enter
rcl
xor
faddl
test
lea
pop
lds
lcall
xchg
test
push
xlat
inc
mov
adcl
cmovne
idiv
add
sbb
add
lcall
mov
add
mov
sbb
add
add
mov
rcr
lret
outsl
pop
pushf
fcoml
fcmovnbe
and
jne
cwtl
dec
and
fcmovnu
and
ss
xchg
cmp
push
mov
mov
or
mov
loop
and
movsl
cmp
inc
pusha
xchg
rcrl
pop
pop
or
inc
mov
test
mov
pop
cltd
or
cltd
shlb
shrb
sbb
adc
cmp
jle
sub
stos
andb
cmc
rcrl
push
das
hlt
fisubrl
ror
shrl
mov
jg
jne
push
mov
or
icebp
mov
add
mov
sub
xor
in
cltd
repz
rcr
jmp
jle
cmp
mov
push
aad
in
sub
es
inc
push
or
push
add
push
test
sub
pop
inc
nop
ds
dec
inc
inc
test
fwait
and
xor
mov
mov
mov
mov
dec
hlt
icebp
sub
gs
lret
call
xor
aas
mov
in
testb
xchg
test
popa
and
sub
lahf
test
stos
in
pop
inc
int3
aad
push
xor
fldt
jne
das
rorl
mov
cmp
mull
jl
in
add
andl
sti
loope
adc
adc
testl
jae
ss
push
out
rcrl
sti
stc
insb
inc
lahf
dec
inc
enter
jle
mov
idivl
mov
push
push
gs
sub
aas
shll
loopne
scas
enter
ljmp
jbe
cmpsb
push
pop
into
test
mov
repz
addr16
xchg
mov
fiadds
icebp
daa
jb
aaa
cmc
dec
mov
enter
xchg
in
in
ljmp
lret
insl
mov
xor
movsl
xchg
cmpsb
sarb
js
enter
jecxz
xor
fcmovnb
mov
ss
data16
loope
inc
mov
jge
lcall
add
add
push
in
dec
mov
xchg
push
ret
mov
inc
adc
and
mov
and
cmp
lret
inc
sub
out
aad
icebp
arpl
mov
lea
mov
js
ja
pushf
and
mov
push
subl
out
xor
cltd
mov
add
cmp
dec
pop
and
fwait
jae
lcall
enter
addl
mov
mov
sub
scas
push
mov
dec
ljmp
dec
movsb
jno
outsb
xchg
sub
scas
sbb
fdivl
and
or
mov
xchg
xor
into
jno
cmp
mov
flds
stos
jmp
scas
xor
xlat
bound
fwait
or
fwait
mov
pop
pop
out
test
and
mov
out
lret
jo
adc
push
mov
or
mov
sub
mov
repz
push
push
test
arpl
ljmp
inc
adc
clc
push
clc
cmp
fs
jb
mov
mov
loopne
add
push
rcrl
loop
jecxz
ljmp
push
push
mov
stc
shlb
jnp
shl
sub
mov
dec
xchg
ja
mov
sbb
sub
int
ret
add
rorb
sub
xor
adc
aam
push
add
mov
dec
pop
mov
mov
xor
pop
cmp
push
jnp
sahf
test
insb
nop
roll
and
mov
xchg
cmpsb
adc
imul
out
shlb
pushf
popf
ss
in
aad
jmp
add
int3
divl
in
std
aam
mov
lcall
sbb
sub
mov
cmpsb
cmp
out
or
jae
insl
dec
dec
shll
aas
add
fimull
push
les
repz
sub
mov
stc
mov
fistpll
sahf
sti
add
inc
fidivl
sbb
and
loopne
orl
mov
cli
inc
and
cmc
sbb
fsub
sub
dec
ljmp
stc
fcompl
xchg
arpl
inc
hlt
adc
fisttpl
pop
sbb
fsubs
movsl
lds
sub
cmp
sbb
or
test
jno
lret
pop
jp
push
mov
xlat
add
jmp
mov
mov
xchg
cmpsl
jle
rcll
sahf
lods
jae
addb
push
arpl
pop
inc
test
cli
fnstsw
stos
ljmp
and
pop
lret
repz
push
and
outsl
fstpl
push
rcll
adc
xor
adc
xchg
sub
or
in
mov
int
mov
pop
and
test
sbb
jl
push
add
jae
frstor
push
loop
mov
rclb
popf
lret
nop
sbb
xchg
push
out
inc
mov
shll
outsb
cld
xchg
jno
xor
scas
mov
push
out
lock
sub
in
jg
pop
data16
mov
imul
imul
mov
bound
or
adc
jecxz
fcmovnbe
or
mov
stos
ss
sbb
pusha
stc
ret
js
push
push
dec
push
dec
scas
adcb
out
adc
adc
fisttpl
jle
pop
dec
fucom
sbb
imul
mov
std
or
neg
les
push
shrl
loopne
repnz
lahf
xchg
dec
pop
mov
out
cmpsb
iret
mov
mov
in
clc
cmp
push
sbb
cmp
push
loopne
add
cli
or
pop
sbb
pop
mov
and
fsubrs
add
xor
insl
sbb
leave
cmp
sub
mov
push
dec
insl
sahf
xor
mov
sbb
push
push
cmp
dec
out
cmp
and
sub
adc
lret
addr16
sbb
loope
orl
loope
cwtl
enter
out
add
push
outsl
dec
lret
cmc
jg
ret
movsb
cltd
pop
test
das
jmp
fmuls
push
push
dec
imull
mov
sub
in
xor
std
pushf
xor
roll
aaa
push
repnz
pop
adc
fdivs
sbb
and
loopne
mov
sbb
sub
xor
dec
int3
jnp
push
enter
in
sub
pop
das
sub
ja
cld
repnz
scas
sub
push
cmp
cmp
or
push
lahf
pushl
fsts
jmp
xchg
lods
jae
adc
push
arpl
or
inc
or
mov
mov
sahf
iret
data16
das
xchg
xor
dec
lret
pop
jbe
fwait
sbb
jp
cmp
test
dec
loop
aam
sbb
sahf
repz
mov
and
inc
add
test
fwait
mov
inc
in
stos
icebp
in
movsb
and
push
pop
sbb
sub
fsubrs
lret
mov
push
lock
jge
sbb
dec
rcr
mov
nop
sub
mov
mov
mov
mov
or
out
test
cld
popa
or
hlt
cmc
jae
shrb
mov
xchg
mov
aam
sub
pop
and
inc
jl
dec
movsb
xchg
add
into
clc
fwait
add
push
test
loopne
inc
xchg
loope
popa
push
shlb
xchg
subb
sbb
call
aas
ljmp
scas
pop
scas
arpl
mov
mov
pop
add
or
pop
imul
icebp
push
xchg
or
aas
sbb
dec
push
ds
pop
inc
pop
insb
inc
cs
popa
xor
pop
fstpt
or
iret
icebp
ja
jo
sub
decl
push
lea
sub
push
test
lea
pusha
jno
sahf
mov
out
or
scas
bound
jmp
push
sbb
ret
bound
in
sbb
cltd
jecxz
test
je
pop
mov
rcrl
cmp
jns
pcmpgtb
aad
adc
mov
cmpsl
xor
aaa
icebp
in
aam
andb
dec
push
gs
cli
xchg
mov
lret
in
bound
insl
dec
push
imul
imul
push
test
fstpt
inc
sub
mov
xor
sub
bound
dec
je
call
lahf
lock
mov
dec
cs
aaa
and
jo
test
jnp,pn
sub
or
ds
into
icebp
jnp
lahf
push
pop
and
std
mov
pop
outsb
inc
gs
sbb
or
push
push
popf
call
mov
cwtl
dec
inc
push
dec
nop
fcmovnbe
xor
cltd
xor
ds
adc
sbb
cs
mov
fists
imul
jecxz
xchg
stc
sub
pop
out
pushf
xchg
pop
inc
sub
stos
jne
lods
pop
das
add
test
push
cmp
push
fidivl
jle
ja
jle
outsl
out
mov
fsqrt
sbbl
pop
or
std
and
fdivrs
pop
rclb
arpl
push
adc
hlt
adc
mov
cwtl
inc
jb
ds
jge
sarb
or
dec
push
dec
dec
jnp
daa
mov
pop
lock
push
int
test
repz
ljmp
sub
movsb
std
repnz
pop
jecxz
and
daa
stos
add
insb
scas
push
ljmp
jne
pop
pop
mov
out
sarb
jns
push
dec
sub
scas
aaa
pusha
adc
mov
in
xchg
mov
pop
pusha
push
orl
fisttps
cli
adc
jno
movsl
cwtl
lods
insb
jno
cmp
scas
aaa
mov
xchg
nop
mov
insb
jle
scas
push
pop
loop
pop
jg
push
mov
outsl
and
cld
mov
jae
lretw
int3
lret
inc
hlt
lods
lock
mov
sbb
pop
cs
or
repz
mov
mov
ds
adc
push
mov
mov
and
jbe
insb
sub
push
mov
cmp
xchg
jns
repz
xchg
xchg
ficomps
popf
ret
inc
pop
inc
xlat
push
aaa
cmp
ficoms
dec
push
pusha
fstpl
pop
jae
or
lods
mov
sub
aam
mul
int
mov
lret
js
out
jae
jge
pop
jg
push
js
push
hlt
cmp
aam
or
cwtl
sub
bound
cmp
xchg
mov
jl
orl
fxch
aad
xor
lock
pcmpeqb
fwait
sub
jmp
testb
fisubrs
test
je
fs
test
pop
sbb
adc
int
daa
sub
in
mov
and
cli
fwait
loop
loope
inc
rsqrtps
mov
js
add
jge
inc
stos
pop
push
aad
movl
or
stos
and
popa
cmp
and
lcall
inc
movsb
mov
pop
repnz
dec
mov
xor
scas
movsb
mov
leave
jp
out
or
cmp
or
int
jp,pn
ja
js
bound
xor
rorl
mov
negl
dec
mov
out
or
mov
pop
jb
adc
cmpsb
bound
aam
in
dec
mov
sub
sahf
mov
nop
and
pop
jecxz
mov
stos
mov
dec
mov
in
sbb
lcall
test
movsb
mov
push
fisttps
dec
push
repnz
push
scas
nop
out
test
ljmp
aaa
mov
je
jae
xor
lret
sub
loopne
dec
push
loopne
call
jle
mov
mov
add
cwtl
mov
mov
out
mov
in
aaa
mov
jg
cmp
jno
es
jne
push
gs
pop
lods
mov
ss
mov
mov
ret
shrl
shrb
sbb
andb
and
or
les
jns
xor
mov
dec
sarl
dec
dec
mov
xchg
xchg
int
push
imul
inc
repz
cmp
std
xchg
popf
nop
vpsubusb
xacquire
push
sti
aaa
test
cmp
mov
cmpsl
sbb
mov
mov
ret
bound
mov
sarb
shrl
sub
xchg
les
jb
jl
adc
xchg
fmull
loopne
jmp
inc
test
iret
stos
inc
dec
stos
loopne
icebp
dec
adc
sub
or
mov
test
daa
int3
mov
and
mov
in
fstpl
stos
lret
and
jns
lods
add
pop
rcrb
fsubrs
mov
shll
lcall
movsb
mov
mov
adc
sub
out
inc
xchg
dec
jp
cltd
lret
stos
repnz
sbb
aaa
dec
out
dec
sbb
pop
dec
push
mov
call
mov
xchg
mov
adc
pop
xchg
fistl
fcompl
xor
pop
mov
inc
daa
jl
inc
clc
outsl
arpl
lea
mov
jnp
push
mov
or
notl
scas
aaa
loopne
ficompl
fisubs
arpl
aaa
lock
pop
outsl
jge
mov
push
in
aaa
or
loope
je
pop
push
sbb
mov
adc
aam
pop
sbb
push
add
or
gs
push
jmp
sub
sarl
jae
cli
mov
pop
push
mov
fsubl
stos
fmull
mul
jne
cli
pop
fiaddl
test
lret
dec
mov
out
es
jecxz
hlt
pusha
mov
fisttpl
push
pop
pop
or
or
test
call
xor
ret
mov
push
sbb
cmp
sub
jg
mov
lods
sub
int
dec
or
xchg
lea
xor
mov
push
xor
xchg
mov
mov
sub
jmp
lret
mov
push
mov
mov
mov
lahf
lock
gs
scas
daa
loopne,pt
je
cmp
push
fdiv
mov
sub
or
repz
stos
dec
shrb
push
jbe
shll
add
xor
pop
mov
sub
mov
xchg
or
push
test
dec
xchg
nop
mov
sbb
fs
or
jo
jmp
xor
xlat
lods
ffreep
inc
sbbl
leave
icebp
xlat
ret
or
sub
or
adc
push
fadds
push
add
cmc
push
rol
flds
mov
pop
inc
mov
xchg
jl
cmp
call
jbe
icebp
mov
ss
lret
dec
push
jge
pop
cmpsl
clc
gs
insb
pop
mov
cmp
mov
xor
inc
jo
push
xorb
daa
lcall
cmp
cmp
push
std
aad
dec
loope
mov
dec
mov
pop
fs
stos
jno
jbe
outsb
stos
jmp
jo
pop
daa
pop
push
push
data16
pop
pop
push
jmp
sub
mov
movsb
scas
add
sbb
xor
jno
ljmp
ficoml
sbb
sub
fmul
adc
aas
sbb
xor
lock
pusha
sub
sub
mov
rclb
adc
std
in
sbb
cmp
xlat
adc
fdivl
push
out
repnz
lahf
xchg
xchg
inc
shl
jae
xchg
orb
add
arpl
xor
dec
pusha
sarl
and
repz
jno
test
cld
or
enter
mov
sub
or
lahf
xor
loope
jo
sbbb
jl
cli
add
dec
rolb
adc
out
mov
ret
lret
clc
mov
insb
aad
or
or
sub
in
cmp
sub
dec
scas
mov
cmp
cmpsb
push
popa
loop
mov
in
movsb
jo
jge
cmp
loopne
dec
push
es
push
cs
mul
xchg
in
ret
idivl
dec
js
cli
mov
push
repz
xchg
or
push
ret
adc
cs
add
pop
call
cmp
pop
into
mov
xchg
and
rol
sbb
push
inc
mov
cmp
inc
xchg
pop
lahf
or
and
or
jo
xor
jnp
aas
or
mov
mov
push
push
pop
lods
ret
in
mov
mov
in
xchg
pop
mov
das
pop
leave
enter
dec
or
scas
dec
adc
pop
cld
cmp
mov
test
pop
jg
sub
shll
insb
std
out
jo
mov
cmpsb
push
loope
test
jno
mov
insb
sub
iret
pop
and
rcll
clc
add
adc
pop
push
push
pusha
sub
sbb
sub
dec
inc
sub
fadd
push
sbb
sbb
enter
sbb
push
out
mov
gs
pop
push
ret
and
pop
cmp
mov
test
fsubrs
inc
ret
rclb
mov
shrl
gs
cmp
inc
mov
jmp
jl
dec
mov
ficoml
fimuls
xor
sub
bound
xchg
repz
icebp
out
jb
mov
jecxz
sub
lock
mov
mov
sbb
rcrl
lock
mov
lret
adc
lcall
dec
adc
rolb
adc
or
pop
pop
add
xchg
or
movsl
iret
inc
dec
lcall
mov
add
cmp
stos
insb
clc
xlat
dec
rolb
in
and
int3
pop
xchg
ret
or
and
shlb
and
mov
scas
scas
mov
lods
negl
sbb
cmp
pop
mov
loop
cmc
jge
sub
cld
jns
lahf
lock
int
mov
mov
pop
adc
mov
into
shrb
mov
add
mov
mov
out
fstps
adc
and
cld
jnp
jno
mov
mov
loope
arpl
dec
push
dec
jno
adc
sub
cli
pop
aad
sbb
loopne
sub
out
lods
nop
mov
xchg
and
pushf
jmp
mov
ficomps
xor
rcll
in
adc
lcall
jp
mov
or
test
loope
push
lcall
jnp
adc
xchg
insb
cwtl
loop
dec
pop
in
cmpsb
outsb
inc
add
jno
cmp
fisubrs
xchg
mov
int
ss
bswap
test
inc
jae
mov
je
sbb
push
mov
repz
aas
nop
in
add
jg
mov
rcrw
mov
push
jbe
sbb
pop
push
dec
out
minps
pop
insb
ss
jae
inc
ret
scas
cs
xchg
mov
movsl
imul
mov
loope
mov
rcrb
or
das
push
leave
lret
sbb
ja
push
jmp
cmp
xchg
push
adc
je
ja
push
push
je
ds
cld
xor
sbb
hlt
cltd
xor
jbe
jno
adc
cmc
je
ljmp
sbb
stos
in
ljmp
arpl
inc
scas
js
xchg
inc
adc
loope
test
jo
xchg
outsb
inc
add
sti
es
push
add
in
loop
addr16
inc
mov
outsl
jl
and
aas
pop
xrelease
cmp
sub
je
dec
jle
pop
push
xchg
mov
enter
sbb
fwait
push
mov
lahf
lret
je
movb
mov
int3
loope
jb
icebp
repnz
std
dec
rol
stos
sub
push
stc
ja
cmpl
gs
loop
jo
xor
movsl
imul
mov
sbb
sub
dec
push
xchg
add
das
jp
sbb
hlt
das
gs
jnp
cmc
outsb
lcall
pop
dec
jae
adcl
cmp
fnsave
push
enter
mov
push
sbb
xchg
sbb
adc
aaa
sbb
mov
sbb
in
nop
push
pop
rcrl
xor
ret
mov
cld
mov
and
cmp
orb
pusha
cmp
test
lret
jne
jg,pn
cmp
pop
mov
fstp
ss
adc
les
sahf
and
adcb
clc
inc
xor
mov
adc
jb
xchg
push
into
outsl
or
lret
fistpl
push
and
pushf
mov
mov
aad
inc
xor
out
adc
adc
pop
pusha
into
rcrb
fistps
adc
xor
sbb
fisubl
jae
dec
inc
pop
jl
jge
leave
fiaddl
mov
scas
sub
xor
cwtl
xor
mov
stc
imul
scas
scas
or
aam
pop
jp
lea
fisttpl
mov
test
insb
dec
pop
test
pop
dec
pop
enter
pop
outsb
out
sub
outsb
iret
notl
std
insb
dec
adc
xchg
cmpsb
arpl
shl
mov
push
dec
jo
adcl
daa
push
test
push
sbb
adc
ret
cs
jge
aad
fistpll
jmp
and
das
or
add
imul
sahf
xchg
scas
leave
ret
lcall
mov
lret
js
insb
addr16
mov
jmp
fcoml
fnsave
lret
inc
jo
dec
stos
push
and
sub
sub
enter
jnp
or
or
fidivrl
test
jle
jp
jo
adc
sub
ljmp
inc
loop
jge
xchg
adc
testl
pop
jo
in
fisubs
pusha
and
fldl
movsb
push
and
sub
sub
push
sbb
fstpt
mov
cltd
jo
cmc
adc
ss
movsb
xchg
in
mov
jae
lcall
xor
or
add
inc
les
out
int
adc
xchg
mov
lea
mov
outsb
jle
jns
and
testl
and
mov
sub
sub
icebp
ret
adc
add
xchg
pop
sub
cmp
ror
sbb
sbb
hlt
xchg
add
pop
adc
pop
orb
cmp
leave
push
pop
cmp
ljmp
xchg
jle
outsb
mov
std
lcall
sub
in
imul
or
out
sti
mov
outsl
loope
or
push
jge
lods
bound
dec
push
xchg
xorl
pop
and
mov
stos
mov
sbb
xchg
sub
inc
rolb
imul
bound
sub
pop
or
jmp
lock
mov
sbb
fistl
push
xor
sub
cld
and
pop
leave
ss
xor
inc
popf
out
mov
lock
adc
iret
subl
cs
inc
or
and
jnp
in
mov
cmp
decb
inc
out
sub
pop
cmp
adc
fadds
adc
sub
dec
test
lods
test
mov
jns
xor
dec
std
xchg
dec
loope,pn
dec
outsb
mov
testb
dec
das
iret
ds
jne
out
test
out
lds
std
icebp
js
sbb
and
inc
inc
lcall
movsb
cmc
inc
adcl
mov
jno
orl
test
loope
pop
aas
pusha
daa
icebp
in
jl
cmp
mov
lcall
or
cmpsb
js
adc
xor
js
push
add
push
and
loop
pushf
ljmp
data16
repnz
cmp
sub
dec
into
sub
imul
fildl
fbstp
in
sti
xchg
leave
cmp
xchg
adc
and
mov
repz
pop
xor
or
ljmp
mov
dec
cmp
and
cmp
cmp
push
dec
jb
jb
enter
faddl
jl
rclb
popfw
data16
or
xor
sbb
in
sahf
vpcomuq
or
pop
xlat
mov
bound
outsl
xchg
cli
movsl
and
xchg
adc
sub
cmp
cmpl
ficoms
incb
imul
faddl
adc
jb
xor
sub
roll
shll
and
stos
cmpsb
push
stos
gs
xchg
aaa
shlb
xchg
pop
pop
cmpsl
in
aaa
xchg
mov
adc
fists
sbb
clc
push
pop
dec
jle
pop
xorl
inc
stos
ja
push
loopne
shll
fwait
pop
push
xor
push
je
dec
mov
in
arpl
xchg
push
test
repnz
mov
push
xor
xchg
repz
sub
into
arpl
inc
sbb
dec
cwtl
lcall
xor
add
inc
ja
shr
inc
aad
push
lret
push
scas
sarl
jo
add
lds
shrb
aaa
in
dec
and
and
pop
js,pt
ss
test
mov
sub
testb
or
sbb
enter
in
rorl
push
fwait
xor
pusha
inc
stos
add
fstl
cwtl
sub
fstpt
and
xchg
ret
mov
inc
repnz
and
scas
and
insb
add
insb
mov
cli
jb
adc
add
jb
lock
ret
pusha
movhps
aad
jno
push
mov
pop
loopne
mov
lods
in
cltd
xchg
leave
outsl
sahf
pop
mov
add
imul
into
jnp
push
lret
mov
cmpsb
mov
pop
in
daa
pop
mov
test
cmp
push
js
or
pop
cs
sbb
mov
jbe
mov
faddl
lahf
sbb
jne
add
sub
pop
pop
push
outsb
insb
jmp
subl
xor
push
loopw
movsb
into
shlb
popa
push
cmpl
cmpsb
icebp
vmwrite
cmp
sahf
push
and
fucom
add
or
into
test
in
cmp
insb
stos
jns
xor
test
mov
push
mov
mov
loopne
mov
insl
int3
inc
movb
xor
pop
imul
mov
xor
in
mov
xchg
cs
add
nop
imul
mov
sahf
mov
cmpsb
aad
adc
jno
xchg
repz
sbb
cltd
les
jae
in
dec
sub
mov
jge
sti
stos
mov
dec
sub
mov
aas
add
cltd
jo
adc
cmp
mov
xor
cs
jbe
aad
mov
xor
in
jmp
in
jge
stc
out
cmp
dec
ret
mov
pop
int3
int
cmp
aaa
jb
aad
add
in
mov
fdivrp
aad
pop
test
mov
pop
xchg
out
mov
inc
es
sbb
call
in
mov
scas
add
hlt
lds
fwait
call
fsubs
mov
and
dec
mov
dec
jbe
hlt
cs
sub
cmp
lret
scas
xor
xchg
movl
add
sub
sti
mov
push
xchg
jp
mov
adc
int
inc
rclb
sti
xchg
xchg
cwtl
dec
dec
ret
inc
add
xchg
fiaddl
cmp
xchg
inc
sub
xchg
lcall
xlat
movsb
dec
pop
and
or
sti
cmpsb
shlb
mov
stos
insb
mov
rcrl
pop
fstpl
jb
and
mov
outsl
jmp
pushf
xchg
adc
add
cmp
ret
add
sbb
inc
add
cld
out
mov
sub
dec
loope
inc
mov
scas
arpl
rorl
nop
fstpl
es
dec
outsl
and
cmp
das
sti
insl
clc
mov
in
sbb
jno
nop
cmp
fwait
lahf
addr16
iret
cmpsb
and
outsb
movsb
push
scas
movsb
jno
push
or
inc
cmp
out
jl
lods
mov
add
imul
outsb
inc
ljmp
push
shl
sub
ret
xchg
xor
xor
push
pop
pusha
dec
mov
fistpl
into
cmp
stc
and
mov
clc
int3
xlat
cmc
call
adc
out
ret
ror
xchg
test
mov
and
insb
scas
in
mov
pop
in
mov
pop
pop
out
lock
xor
and
lods
les
inc
aas
adc
test
test
jmp
std
pop
sbb
popf
std
fdivl
jb
pushf
push
sti
loope
fstps
push
call
pop
lods
test
arpl
bound
xchg
mov
aam
stc
inc
push
mov
test
dec
jns
jnp
jg
inc
and
hlt
das
dec
sub
scas
test
sbb
xor
daa
mov
stos
mov
pop
lds
subl
dec
pop
fstl
aam
and
mov
out
sub
fdivrl
aam
fs
xchg
lods
lcall
mov
insl
das
push
or
into
push
and
inc
test
adc
pop
or
pop
xchg
ss
pop
and
bound
rcr
insl
rcr
enter
jno
sub
fsubl
mov
dec
push
add
test
push
cmp
rorb
add
imul
rclb
jecxz
popf
js
lcall
xchg
shll
bound
push
js
gs
add
test
fucomi
mov
mov
bound
pushf
lcall
js
sahf
xchg
mov
pop
pushw
mov
popf
jns
sub
and
mov
jl
sub
mov
movsb
scas
pop
xor
add
push
ss
mov
mov
mov
fstpl
fiaddl
mov
cmp
adc
testb
fisubs
mov
sbb
fnstcw
xchg
mov
xor
xor
ds
push
add
adc
hlt
pop
sahf
and
push
movsb
lea
std
jecxz
mov
popa
setno
jmp
xor
cwtl
insl
mov
pop
sbb
data16
fwait
xchg
mov
push
inc
les
mov
mov
and
lds
test
pusha
dec
push
or
out
enter
push
movsb
repz
jge
dec
repz
jecxz
pop
xor
add
push
cmp
add
mov
pop
dec
mov
xchg
out
cmpsb
imul
loopne
aam
popl
cmp
test
icebp
adc
test
and
push
movsl
scas
pop
sub
adc
push
iret
and
sbb
dec
orl
and
mov
inc
jo
add
call
sub
mov
push
and
cmp
loope
outsb
sahf
cmp
xor
stos
xchg
inc
repz
pop
test
mov
jg
add
repnz
and
out
cmp
mov
arpl
pop
lods
pushl
add
push
je
test
mov
jmp
filds
jo
xchg
mov
repnz
bound
inc
mov
icebp
dec
jecxz
xchg
jl
test
cmp
xlat
pop
sbb
pop
xchg
xchg
fiaddl
je
inc
mov
adc
in
lret
xor
outsb
leave
test
cmp
pop
cld
test
jb
pushf
sub
lock
in
ja
xor
shr
lahf
adc
cwtl
xor
fxam
andl
lock
jecxz
inc
nop
cmpsl
popf
or
adc
mov
xchg
mov
mov
mov
sub
mov
cmpsl
repnz
data16
data16
lahf
pop
movsb
call
fidivs
mov
das
dec
inc
cmp
xor
pop
jmp
push
aas
pushf
pusha
mov
jbe
push
push
add
fdivp
iret
push
das
lods
out
movsb
mov
repz
mov
fstps
jns
fs
mov
push
sbb
dec
insb
iret
addr16
lahf
adcb
pop
xchg
fsubrp
mov
int
dec
inc
adc
or
out
aas
sbb
divb
pop
orb
roll
xor
mov
aas
mov
jecxz
mov
ret
mov
in
pop
xchg
leave
lods
push
jae
mov
or
adc
adc
pop
pop
repz
cmp
cmp
mov
int
popa
iret
rclb
pop
jbe
sbb
xor
xchg
or
or
subb
pop
add
add
arpl
sbb
ja
lret
mov
lods
push
inc
jne
aaa
push
xor
dec
scas
out
call
or
sahf
and
and
repnz
lret
mov
call
int
inc
push
hlt
repz
push
lahf
cs
bound
mov
mov
pop
cmp
repnz
lea
or
insb
lods
clc
inc
dec
lret
das
mov
cmp
lods
mov
cmp
jle
lods
loop
cmp
sbb
leave
in
pop
dec
push
bound
push
shr
fdivr
push
mov
sub
pop
fcoms
pop
and
jo
cmp
jecxz
lock
sub
dec
push
xchg
enter
clc
sub
cmp
adcb
sbb
sbbb
sub
mov
fidivrs
jle
pop
inc
adc
mov
out
push
mov
loop
loope
arpl
fistpll
xor
sbb
aam
fbstp
loope
dec
test
mov
rcrl
jo
fnsave
fsubrs
push
and
cmpl
mov
inc
leave
lahf
push
dec
mov
adc
xchg
jge
dec
in
sbb
sbb
arpl
in
cld
insl
out
mov
inc
sbb
out
data16
jg
sbb
fwait
add
out
pop
pop
xor
fcomps
xchg
jne
in
lcall
cmp
jne
pop
mov
cmp
imul
nop
lahf
xchg
push
mov
imul
sbb
out
jp
mov
call
cld
sub
iret
xor
test
push
and
daa
xchg
push
push
rolb
outsl
inc
loop
xlat
imull
adc
test
push
in
xchg
xor
shl
cmc
adc
ror
pushf
hlt
inc
fadd
adc
or
lcall
jl
xchg
aam
xchg
cwtl
jne
dec
test
fdivr
neg
out
lcall
mov
mov
mov
cwtl
xor
out
push
lds
int
pushf
fsub
cmp
mov
jmp
loope
dec
sti
push
xor
frstor
sub
negb
lds
sbb
mov
int
sahf
popa
test
add
es
sub
dec
jnp
pop
in
inc
push
cmpsb
ljmp
mov
adc
loopne
js
dec
dec
pop
pop
aam
pop
adc
ds
addr16
je
jbe
ss
and
mov
movsl
aaa
loope
repz
mov
lea
cmp
xchg
push
cmp
icebp
cmp
or
pop
pusha
pushf
pop
push
fists
in
sar
dec
outsb
pop
rep
scas
loope
loopne
xchg
push
scas
nop
rcll
pop
test
cld
sbb
lods
pop
ds
pop
into
pop
sub
adc
xchg
dec
enter
je
fdiv
insl
lcall
and
mov
jmp
clc
cld
cmp
mov
xlat
mov
stos
out
mov
xchg
inc
imul
dec
cltd
shlb
mov
xchg
pop
inc
dec
add
notb
fstps
mov
cmp
add
stos
dec
push
daa
mov
sarb
dec
push
push
push
cmp
mov
in
enter
lahf
sbb
mov
jmp
ds
cmp
ret
or
cmp
cmc
sbb
cmpsl
bswap
inc
pusha
pop
and
clc
lret
fmull
icebp
fiadds
scas
rcl
neg
mov
ret
push
push
jg
in
pop
mov
cli
pop
pop
jns
add
sub
and
lea
push
lds
pop
jb
xchg
aaa
nop
lods
mov
pop
xchg
mov
add
jnp
in
subb
es
ljmp
xor
loopne
cmp
scas
rcrl
and
dec
test
jle
lods
cltd
out
les
shll
push
mov
push
iret
fwait
add
xor
pop
roll
dec
icebp
xor
int
lahf
test
lret
shl
daa
cpuid
out
stc
fisubs
cmpsl
sbb
cmp
enter
je
xchg
out
sub
push
test
orl
mov
call
mov
xor
jmp
xchg
lret
es
pop
roll
les
lods
int3
lret
std
mov
outsb
loope
cltd
clc
adc
mov
mov
rorl
inc
outsl
mov
movsb
repz
xor
outsb
xchg
mov
cmpsb
fnstcw
sbb
ret
ret
jns
lcall
call
leave
movsb
out
mov
stc
sbb
leave
daa
or
mov
std
xchg
mov
shl
aad
sarb
inc
outsl
fidivrl
sbb
ss
jmp
cmpsl
cltd
and
pop
mov
shll
dec
jnp
fs
mov
or
pop
pop
into
pushf
shrb
scas
pop
pop
cld
int3
icebp
out
loopne
jns
aad
pop
dec
inc
xchg
pushf
xchg
out
cmp
push
jns
mov
into
jp
jl
adc
ljmp
jbe
mov
stos
int3
push
jo
fs
pop
les
cmp
and
fcompl
jnp
push
mov
aad
dec
xchg
pop
mov
add
mov
mov
inc
in
int3
push
xor
aaa
and
mov
aam
aad
and
mov
pop
out
mov
fs
pop
xchg
mov
lret
jb
lahf
cmp
xor
ds
pop
and
mov
jno
aas
cmp
mov
scas
or
clc
cld
adc
or
cs
jmp
aam
jo
cltd
arpl
and
rcrb
aaa
in
or
mov
enter
loopne
fisttpll
sbb
shlb
pusha
inc
cmp
rcrb
xchg
pop
jmp
popl
ret
or
inc
sub
add
jnp
jecxz
les
adc
push
inc
jo
inc
add
or
call
push
xor
sub
jle
and
pop
dec
cld
dec
test
mov
ds
das
stos
ret
jb
fisubrl
icebp
sub
mov
stos
fmul
in
and
jae
js
sti
fcmovbe
add
imul
push
out
pop
pop
adc
bound
ja
pop
in
idivb
sub
sarl
inc
xor
mov
cmpsb
test
int3
mov
mov
add
inc
aas
jne
lahf
push
imul
mov
pop
xor
mov
inc
insb
pop
icebp
jno
jecxz
lcall
dec
xchg
jge
push
or
aam
mov
adcb
out
add
cld
adc
imul
movsb
fcoml
xor
adc
push
cmpsb
aad
adc
pop
dec
mov
add
add
adcb
sbbl
fstps
xchg
mov
negl
and
scas
loopne
das
aas
xchg
jnp
mov
test
insb
mov
lahf
pop
loope
or
add
and
ret
int
adc
dec
adc
cmpsl
inc
mov
gs
mov
pushf
roll
jmp
scas
push
mov
lock
ficompl
ljmp
or
outsb
sub
pop
ja
add
mov
adc
popa
fsts
mov
dec
mov
lret
mov
fadd
pop
iret
ds
add
mov
outsb
movsb
inc
sbb
or
sarl
test
mov
sbb
xor
std
jno
sbb
mov
and
aam
mov
icebp
ret
test
sub
filds
sub
scas
mov
jl
cmp
adc
sbb
xchg
popf
into
out
shlb
dec
sbb
ror
mov
push
inc
fldcw
stos
or
out
dec
daa
lods
ret
jae
jne
xor
pop
in
bound
add
lret
mov
jmp
hlt
pop
xor
sarb
pop
iret
iret
popf
loop
jb
xor
mov
cmp
jp
xor
nop
mov
fildl
mov
stc
je
nop
xchg
pop
push
test
loope
pop
sub
push
out
pushw
sbb
insb
jo
add
jle
jg
add
mov
insb
inc
cmp
push
ds
cmp
xor
call
mov
cld
lods
pop
andb
xor
dec
or
jae
xlat
cmp
pop
dec
adc
mov
roll
shrl
imul
stc
popa
lcall
mov
sbb
into
aaa
data16
inc
inc
add
push
loop
enter
mov
and
pop
jnp
jp
adc
mov
scas
jecxz
jns
movsl
test
dec
sub
dec
sub
rorl
push
fisubrs
mov
push
loop
cmpsb
cmc
cld
cmpsl
push
push
loop
and
cmp
sti
insl
or
lods
call
aas
cmpsb
fcomps
call
sub
and
sub
mov
jge
xorl
arpl
push
cmp
dec
sahf
add
dec
out
cld
mov
mov
out
in
sub
adc
add
movsb
add
inc
test
mov
mov
push
das
add
jns
imul
fdivrs
mov
hlt
cmp
pusha
inc
lret
mov
jnp
loopne
data16
in
cmp
mov
mov
inc
xor
aam
jne
outsb
jge
or
icebp
sbb
cli
test
fisubrs
dec
and
push
cmp
lahf
shl
dec
xor
cmp
das
xchg
mov
mov
mov
shlb
pop
int
test
sub
and
stos
adc
clc
sbb
dec
das
xchg
rcrl
clc
xchg
sub
inc
hlt
arpl
ret
or
dec
ret
leave
out
mov
gs
or
pop
outsl
mov
pop
gs
push
aas
leave
jbe
mov
xchg
inc
sub
push
ret
sub
mov
sbb
fstpl
jl
pop
cli
jp
xor
sbb
push
notl
jg
das
fdivs
inc
rcrl
dec
inc
fcmovu
cmpsb
pop
mov
cmp
nop
inc
lods
xor
push
push
mov
mov
imulb
jno
fwait
xchg
int3
lods
push
or
xor
or
push
xchg
mov
sahf
cwtl
xchg
in
jo
mov
outsb
clc
mov
inc
or
cmp
jnp
std
les
rcrl
sub
in
sub
adc
shr
or
push
jno
sub
imul
jg
roll
int
mov
aam
enter
inc
jnp
arpl
into
jecxz
fistps
push
mov
js
mov
jnp
out
fsubp
in
add
cmpsl
out
mov
sbb
xchg
mov
out
out
mov
imul
pop
nop
shll
mov
push
repnz
fistpll
xchg
jg
xchg
jl
sti
and
lret
mov
add
iret
sub
filds
arpl
ja
dec
lods
jno
lods
in
jnp
cmp
sbb
cmpl
cmovl
mov
sbb
jmp
loop
inc
xor
dec
call
in
push
xor
iret
scas
adc
and
andl
xor
fidivs
call
or
fisttps
jmp
orl
rcl
pop
out
fwait
je
std
mov
es
sub
in
xor
outsl
and
fists
bound
mov
mov
dec
mov
rcrl
mov
xor
jg
rol
rorb
icebp
test
dec
fsubs
and
push
sub
rolb
mov
lret
lea
or
or
in
ret
xor
inc
and
push
sub
insb
lcall
and
xchg
mov
loop
dec
sub
mov
repz
jle
jns
ja
jmp
lods
push
push
adc
xorb
xchg
mov
pop
jecxz
dec
push
rclb
mov
dec
add
dec
int3
dec
jecxz
and
push
out
xlat
mov
push
dec
loope
scas
adc
mov
lods
popf
xor
arpl
stos
insb
add
fsts
out
mov
dec
mov
icebp
std
cmp
aad
adc
pop
cwtl
fs
or
jmp
je
loopne
xlat
push
mov
enter
scas
sbb
sbb
imul
iret
push
pushl
dec
cs
insl
pusha
mov
adc
dec
in
push
cmpb
cltd
sarl
lcall
xlat
lret
cmp
and
jp
push
mov
xor
les
filds
rclb
out
cmpsb
or
icebp
repz
fidivrs
xor
lcall
mov
xor
xorb
pop
jbe
jno
jbe
testb
mov
sbb
daa
sbb
aad
outsl
outsb
adc
shlb
outsb
add
mov
in
addl
pop
cmp
stos
jle
pop
sub
ljmp
xor
add
in
jmp
fcoms
clc
cli
mov
cmc
std
loop
and
sti
stos
mov
fucomip
xor
mov
mov
adcl
adc
inc
push
jbe
inc
icebp
xor
push
cwtl
loopne
into
cmp
pushf
sahf
push
sub
lods
pop
and
cmc
jle
sbb
jb
or
andl
mov
and
dec
cmp
push
or
mov
pop
pop
inc
cmp
mov
imul
inc
je
jnp
mov
sahf
aad
rolb
inc
ljmp
jle
movb
enter
lods
in
jg
stos
aad
lods
dec
and
mov
aas
cmp
stos
pop
xchg
or
js
js
ror
inc
stos
les
xlat
jnp
leave
add
mov
inc
or
pop
shrl
mov
mov
mov
dec
pop
mov
mov
adc
mov
jae
mov
les
movsl
aas
xchg
inc
insb
adc
in
xor
incb
cld
dec
in
sub
adc
xchg
flds
aaa
mov
cmp
adc
cmpsl
sbb
or
addr16
inc
ret
fistps
xlat
repnz
ret
cli
sub
mov
push
lret
aam
movsl
mov
ss
jecxz
rcrb
stos
add
adc
pop
ja,pn
test
outsl
cwtl
mov
mov
ljmp
mov
rolb
lahf
or
rcrl
loopne
add
in
das
outsl
jle
push
enter
sti
dec
and
adc
test
sub
aad
mov
call
fwait
inc
inc
adc
xor
call
cmpb
repz
xor
aam
sbb
and
dec
add
fldenv
add
subl
or
or
dec
add
das
icebp
mov
cwtl
movsw
and
scas
stc
rolb
scas
cli
fstl
cld
cltd
xchg
pusha
jbe
les
pusha
fmull
xchg
and
dec
sub
xor
sbb
push
inc
xor
cmp
dec
pop
into
addl
xor
cmp
add
cmp
mov
sub
mov
mov
shll
add
pop
xchg
popa
ja
fsqrt
inc
mov
pop
icebp
jmp
mov
imul
outsl
push
mov
lock
pop
mov
scas
jecxz
lock
cmp
push
mov
pop
sarl
push
xor
jno
div
mov
dec
inc
mov
lcall
dec
lds
loope
fstps
fs
jne
cmp
ret
lea
pop
sub
cmpsl
and
add
jae
add
shl
outsl
pop
xor
hlt
push
add
lea
sub
cmp
call
test
aaa
xor
pop
push
push
jno
jge
in
or
outsl
lock
mov
and
ret
fldl
xchg
push
adc
call
cli
jno
inc
mov
clc
test
popa
arpl
push
js
sub
mov
and
jecxz
jbe
lahf
xor
daa
xor
inc
je
rcrl
mov
mov
inc
stos
imul
clc
push
cli
cwtl
in
cltd
mov
pop
decb
lea
adc
in
add
mov
cmc
inc
jp
test
lods
add
mov
loop
cmpsl
pop
aaa
jbe
lock
add
in
clc
mov
cmp
dec
xor
stos
jmp
int
in
xor
and
lds
icebp
repz
push
push
sbb
rcrl
imul
stc
call
pop
sub
cmp
sbb
fsub
cmp
sub
jmp
xchg
stc
xor
movsl
mov
lods
xor
inc
imul
jle
loop
std
aaa
pop
stos
pop
lahf
mov
sub
aad
pop
mov
or
lea
mov
adc
cmp
inc
xchg
lock
sbb
stos
rorl
push
stc
mov
adc
scas
stc
daa
inc
and
fcoml
inc
push
mov
pusha
mov
popf
jno
mov
faddl
mov
aas
mov
fwait
inc
xorb
inc
in
pop
lods
mov
and
lods
addr16
dec
adc
aam
gs
rcll
fdivrl
mov
nop
aaa
xchg
jmp
pop
jmp
pop
cs
int3
xchg
incl
test
pop
in
scas
ds
or
stc
aaa
cmpsl
pop
xchg
jp
imul
sbb
ret
mov
rol
inc
clc
mov
ss
bound
call
xorb
or
gs
or
jg
dec
adc
shll
in
enter
fcompl
inc
mov
in
and
cmp
popw
push
leave
scas
fldt
or
mov
ds
pop
mov
punpckhdq
lret
inc
cmpsb
cltd
rcrl
sub
push
test
in
dec
outsl
adc
stos
xor
fmul
hlt
inc
out
or
mov
inc
enter
rol
stos
mov
jle
es
fstpt
mov
lea
popf
push
ret
jp
orb
ja
and
adc
xor
ljmp
dec
jae
loop
jne
jbe
lahf
nop
call
ds
push
xor
cmpsb
sub
pop
add
int3
lea
mov
imul
xlat
ret
add
mov
aam
jb
je
adcb
andb
iret
orl
dec
xchg
mov
sbb
push
push
in
push
jns
cwtl
xchg
dec
pop
cmpb
lods
mov
cmpb
dec
dec
cmpsl
xor
sub
mov
daa
pushf
pop
cmp
jecxz
mov
adc
aaa
xchg
insb
pop
fs
jo
sti
roll
ljmp
sub
pop
mov
into
ss
and
addb
sub
sub
or
loopne
push
adc
lock
or
sarb
mov
cmp
test
clc
je
scas
and
mov
adc
jo
sub
and
sub
cmc
sub
push
adc
jae
and
add
jnp
sti
loop
mov
cmp
push
in
ss
pop
sub
cmp
addr16
cli
std
sub
ret
xchg
xchg
leave
mov
mov
push
sub
out
lret
dec
push
popf
std
cltd
dec
xchg
je
aam
push
xchg
loope
mov
jmp
test
outsl
lods
ds
sbb
jg
cmp
cmc
dec
jecxz
sub
in
je
jbe
inc
xlat
mov
leave
loopne
inc
mov
popa
test
dec
jno
stos
mov
sar
rcrb
or
bndstx
loopne
adc
pop
push
cmp
xor
mov
sub
subl
js
lods
into
fwait
jge
stos
ss
or
lods
sub
pop
pop
and
mov
mov
jne
cmp
inc
adc
lock
out
arpl
fs
out
gs
mov
fcoml
cmp
sahf
xchg
and
dec
or
in
mov
js
imul
jp
or
inc
dec
mov
xor
add
pusha
push
push
jne
and
cmp
or
xor
add
jnp
xchg
xor
out
popf
pop
adcb
rcll
cmpsb
inc
icebp
test
fnstenv
xchg
lods
icebp
out
pop
arpl
enter
adc
mov
cmp
mov
xchg
call
test
cmp
aad
or
std
movsl
push
cmp
mov
and
mov
roll
push
sbb
in
shrb
xchg
iret
push
sbb
in
xchg
adc
jb
or
dec
pop
sub
xlat
fistpl
rorb
or
pop
insb
xchg
push
out
das
fisubrl
roll
sbb
scas
outsb
inc
out
aam
add
push
jmp
add
xchg
pusha
cltd
pop
xchg
mov
loopnew
insl
dec
push
or
cmp
ljmp
mov
divb
push
dec
scas
sbb
mov
add
ret
fwait
cmp
jne
test
mov
stc
cmc
les
dec
xor
std
and
mov
aas
out
mov
xor
xor
jle
popa
mov
fstl
lds
xor
lcall
fidivl
push
sbb
movsb
lret
and
mov
cmp
pop
stos
mov
pop
hlt
sub
pop
aad
mov
sub
jge
push
dec
mov
dec
add
and
jno
mov
push
mov
push
xor
jns
test
sub
xchg
mov
cld
sub
adc
pop
fisubl
in
push
pop
repnz
xor
lock
movsl
nop
dec
add
cmpb
sub
mov
mov
lcall
pop
jp
ja
and
leave
out
lds
fmul
xor
sbb
sub
lods
pop
push
fucomi
jecxz
loope
stc
inc
adc
ja
insl
loop
push
cltd
mov
pop
sbb
xchg
outsl
loopne
or
xor
div
stos
jae
div
int3
jmp
loopne
xchg
dec
out
lcall
jl
mov
data16
pop
inc
orps
sbb
push
into
cmp
dec
sbb
mov
scas
out
pushf
movb
add
ljmp
jmp
out
add
cli
and
mov
or
sub
push
je
mov
int
adc
lret
push
enter
add
mov
lret
fwait
hlt
ret
inc
enter
push
repnz
push
mov
insl
xor
std
jp
in
jmp
pusha
ret
sbb
adc
jmp
ss
aad
scas
inc
rorl
out
popf
in
orb
or
jecxz
mov
inc
add
lods
daa
ljmp
push
xchg
cmpsl
clc
xor
lds
lea
popf
push
jne
xchg
decb
sbb
bound
ja
mov
cwtl
cmpsl
cmpsb
clc
pop
push
mov
mov
in
mov
fisttps
scas
aam
sub
cli
adc
arpl
lret
stc
ja
mov
xlat
push
mov
es
cli
jae
frstor
push
sbb
push
push
fninit
push
add
push
push
adc
stc
cld
sbb
in
repz
hlt
jb
cltd
fnstenv
cmp
jp
mov
imul
cmp
xlat
jecxz
shl
and
add
mov
pop
push
subl
dec
mov
lcall
pop
mov
adc
sti
inc
jge
push
mov
jp
mov
sub
add
push
inc
lock
cmpsl
idiv
jns
and
scas
std
and
arpl
dec
push
mov
imul
lock
stc
inc
imul
sbb
mov
loop
dec
js
and
repnz
fs
xor
sbb
adc
sbbl
jmp
xchg
sub
outsb
daa
inc
and
mov
mov
mov
dec
inc
clc
movsb
xor
scas
cmp
or
jp
sub
mov
outsb
pushf
jb
mov
mov
dec
adc
fsubs
xor
fs
popa
or
mov
sbb
int3
outsl
fs
mov
in
pusha
das
mov
out
push
lods
jb
std
cmp
int
xor
xchg
mov
insl
sub
mov
mov
cmp
and
jns
sbb
fdivrs
mov
adc
arpl
inc
in
lods
aad
test
aaa
rcll
aam
addr16
fsin
fisubs
adc
leave
mov
fldl
sarl
repz
iret
inc
movsb
and
sbb
fdivrp
mov
sub
add
movsb
push
cltd
imul
push
mov
fisubrl
lea
shlb
cs
and
lods
iret
pop
xor
cmc
inc
mov
dec
test
shlb
or
dec
push
xchg
push
dec
push
and
xor
jle
mov
scas
cmpb
in
jns
xchg
xchg
test
mov
out
sarb
mov
cmpb
jne
mov
dec
in
cmp
ss
mov
xchg
sbb
aam
enter
and
out
into
inc
cmp
dec
xchg
mov
inc
pushf
cli
push
mov
std
add
stc
aad
or
addr16
loopne
sub
popf
insb
lret
cmp
mov
iret
or
nop
ds
cmpsb
mov
adc
popa
xchg
sbb
lgs
or
pop
and
imul
adc
int
push
sarl
sbb
dec
sub
mov
and
fmull
pop
sbb
xchg
cli
popf
out
mov
repnz
loope
and
cmp
cmpsb
inc
mov
je
sarb
cmp
or
mov
or
pop
sub
fcoms
push
xchg
popa
mov
ljmp
lret
lahf
jp
add
mov
out
shrl
leave
outsb
mov
dec
mov
outsl
push
pop
xor
aas
jge
dec
jno
or
mov
push
jnp
lret
pop
jge
dec
idivl
xor
mov
jns
dec
pop
jb
xor
lahf
iret
dec
mov
pop
inc
mov
cmc
sarl
jle
int3
adc
pop
cmp
push
add
jb
pop
cmp
mov
ret
popf
pushf
push
in
and
mov
loope
orb
loope
lods
std
push
movb
push
cltd
sub
shrb
inc
negl
movsl
push
fsubrs
iret
inc
xor
sbb
jle
sti
dec
xchg
dec
nop
lods
orl
pop
mov
mov
in
xchg
out
gs
mov
mov
mov
leave
inc
inc
rorb
fs
cwtl
mov
in
mov
ret
hlt
mov
jnp
xorb
lahf
dec
xchg
hlt
add
outsb
jg
and
hlt
rcrl
ret
push
mov
popa
in
dec
out
arpl
dec
dec
lods
insb
out
sbb
mov
daa
pop
pop
sbb
push
push
inc
or
lds
inc
js
repz
pop
repnz
test
mov
in
faddl
mov
int3
jo
add
push
cmp
repnz
hlt
mov
in
out
jmp
scas
cs
push
xchg
iret
repnz
xchg
cmp
inc
cmp
cmpps
out
out
jmp
push
pop
adc
fdivs
stc
lea
cmp
sub
es
dec
add
or
shlb
addl
popf
iret
aad
jbe
outsb
inc
fimull
cmp
inc
aas
and
push
inc
xchg
imulb
mov
insb
fldenv
lods
cmp
and
sub
idivl
clc
mov
mov
ds
into
pop
lds
int
cmp
out
xchg
xor
les
rclb
lock
mov
mov
mov
or
mov
stos
mov
mov
inc
pushf
and
jmp
pop
mov
dec
icebp
jns
xor
adc
arpl
sbb
add
xchg
cld
cmp
insb
faddl
fs
mov
in
mov
aas
or
test
mov
das
adc
fnstsw
xor
pushf
scas
out
or
pusha
and
ret
aad
aam
fistpl
cltd
idiv
cwtl
push
mov
aad
sub
add
stos
mov
inc
sbb
push
outsl
movsb
mov
inc
push
leave
dec
movsb
jp
out
add
shll
das
fs
sub
pop
ds
fmuls
pusha
or
sti
ud0
jae
test
lcall
in
adc
mov
lret
cli
cwtl
or
and
cmp
jnp
push
cmpsl
int
sbb
inc
sub
sahf
jecxz
inc
stos
inc
ljmp
mov
mov
mov
lret
dec
mov
or
fisttpll
rcll
xchg
sub
jg
push
movsb
mov
inc
sti
xlat
mov
mov
pop
fdivrl
inc
dec
lret
out
data16
inc
hlt
dec
xchg
adc
lret
inc
lods
out
jns
fstl
push
ljmp
scas
nop
mov
dec
outsb
push
pop
pop
sti
push
xchg
lret
je
and
cs
iret
jo
xlat
ja
icebp
jp
mov
into
mov
cmc
mov
ret
std
imul
imull
dec
negl
push
fidivs
xor
sub
jmp
ror
cmp
scas
loope
in
sub
jo
pop
xor
scas
in
adc
sarl
or
aas
mov
inc
sti
or
in
dec
cmp
jnp
jmp
in
xchg
pop
jp
lods
mov
push
out
in
sub
popf
mov
fs
andb
jb
xchg
mov
loope
leave
insl
shrb
mov
cmpsb
cmp
pop
inc
aad
mov
flds
hlt
fistpll
sub
clc
loop
xor
lret
mov
adc
jno
pushf
shr
jle
pop
add
add
icebp
lods
stos
mov
jge
roll
and
adc
mov
ds
mov
dec
add
pop
push
loop
push
adc
xor
lret
in
bound
std
inc
lods
cmpsl
or
in
sub
daa
insb
fwait
ret
rolb
or
xor
mov
cltd
dec
nop
xchg
inc
or
mov
sub
push
and
sbb
cltd
dec
mov
imull
add
outsb
xor
jae
mov
mov
dec
lods
aad
pop
lods
insb
loope
or
stos
mov
mov
outsb
and
lock
xchg
mov
es
arpl
inc
daa
dec
shrl
dec
loope
movsb
pop
mov
push
and
fstpt
out
push
xchg
test
outsb
mov
jns
dec
dec
data16
mov
mov
cmp
frstor
mov
mov
shll
cmp
cli
fcmovnu
inc
mov
loopne
and
xor
fldenv
cmp
in
aam
ds
xchg
push
sbb
mov
adc
sbb
hlt
jae
inc
cmpsb
inc
out
xor
push
insb
and
lock
fsubs
adc
mov
or
jl
add
jle
in
loope
cmp
jbe
or
fidivrl
fistpl
mov
icebp
dec
push
mov
repz
insl
cltd
cs
jecxz
rclb
cmp
sbb
stos
push
aad
jb
addr16
ja
xchg
pop
and
mov
add
stc
adc
aam
mov
or
movsl
cltd
fildl
pop
dec
jle
mov
add
pop
jg
sbb
or
add
xor
jl
loopne
jns
gs
imul
inc
adc
dec
xchg
xor
adc
sahf
fcompl
mov
xor
scas
adc
pop
lock
xor
ret
cs
lahf
aaa
imul
push
dec
cmp
call
and
ficoms
xor
das
es
fmul
mov
addr16
popf
xchg
xor
rclb
addb
pop
dec
mov
push
repnz
addr16
adc
divl
test
rorb
insb
imul
cs
repz
repz
sbb
lcall
mov
jae
mov
shl
dec
inc
sub
push
add
or
adc
dec
push
out
adc
movsb
clc
or
push
daa
xor
mov
dec
scas
jmp
fildll
mov
jmp
cmp
inc
loopne
jp
jl
pop
ljmp
cwtl
in
jne
dec
out
dec
push
xchg
xor
mov
xor
movsl
and
jge
or
testb
xlat
stos
loope
push
sbb
repnz
iret
arpl
push
xchg
dec
push
cld
sub
movsb
jg
dec
adcl
cmpsb
rcrb
inc
int
scas
adc
push
pop
in
fistpl
rcrl
xchg
mov
out
or
jns
jmp
gs
lock
xor
sbb
mov
dec
ja
sbb
xchg
inc
in
inc
fmuls
jne
push
or
std
repz
jns
dec
dec
adc
test
mov
outsb
scas
bsf
pop
data16
jbe
push
sbb
mov
mov
and
pop
dec
cs
leave
jns,pt
jl
out
inc
testb
jmp
les
cmp
cld
adc
fsts
mov
sbb
sbb
lock
jg
int
jecxz
or
stos
or
fldt
rcr
xchg
mov
inc
sub
test
jp
addb
jo
sub
test
fldt
aam
xchg
dec
or
rclb
stc
add
mov
ja
xchg
leave
mov
dec
mov
pushl
ret
dec
aam
out
repnz
ja
jecxz
hlt
mov
lret
jb
mov
and
jns
mov
out
xchg
mov
push
jnp
add
inc
mov
arpl
loope
mov
bound
jns
jl
int3
jge
sahf
jo,pn
scas
push
das
test
mov
mov
fadds
jnp
xchg
not
daa
popa
jno
stos
leave
fstpt
shlb
in
dec
dec
lret
pop
pop
jo
or
xchg
mov
lea
test
jge
sbb
mov
adc
mov
scas
insl
inc
in
sub
mov
inc
mov
dec
pminub
out
aam
cmp
pop
pop
and
ljmp
je
pop
mov
xlat
pcmpgtd
and
ds
or
xor
ja
jecxz
cmp
inc
jecxz
inc
jae
cmp
outsb
mov
dec
fstl
fstps
jle
jg
xchg
les
add
testl
sub
into
push
push
push
scas
data16
jp
mov
imul
es
adc
xor
or
jno
dec
xchg
das
inc
mov
xor
sub
mov
sbb
dec
lcall
cmc
subb
or
add
arpl
inc
repnz
xchg
lret
sub
daa
inc
pop
push
aam
or
in
inc
mov
sbb
mov
mov
cmpsl
outsb
sbb
xchg
lcall
shll
movsl
xchg
xchg
mov
fstpl
push
mov
insl
pop
sbb
das
out
stc
hlt
rorl
or
mov
sub
loop
adc
out
inc
xorb
sub
fbld
cwtl
ret
or
mov
dec
mov
add
or
pop
jbe
inc
add
adc
ja
lea
xchg
hlt
xor
mov
gs
xor
xor
stos
mov
pop
in
xchg
push
sub
add
xchg
xchg
arpl
xchg
cmp
dec
jns
mov
punpcklwd
sbbl
outsb
mov
add
jp
xor
sbb
call
lcall
aam
lret
flds
iret
push
cmc
addr16
mov
mov
addl
adc
cltd
push
das
gs
nop
adcl
call
bnd
inc
pop
cmpsl
push
sub
jl
push
out
lcall
popa
sbb
mov
fildll
ret
das
xchg
and
aaa
addr16
out
call
je
les
test
adc
xchg
sti
cs
shl
insb
mov
mov
sbb
or
dec
mov
femms
iret
aam
mov
add
inc
push
daa
cmp
ljmp
push
test
in
movsb
add
jo
mov
clc
or
in
add
nop
orl
ljmp
push
test
out
add
push
mov
lock
jg
push
dec
adc
sbb
in
adc
jbe
ret
dec
adc
pop
daa
xor
sub
pop
loope
cmpsl
dec
repz
or
stos
mov
pop
out
mov
scas
or
sub
shl
sub
jo
insb
dec
jo
jae
xor
xchg
mov
addr16
xor
popl
inc
pushf
pop
sub
dec
scas
shr
xchg
jb
lcall
in
shlb
xor
or
cmpl
dec
sub
orl
mov
ret
fstpl
push
lahf
ljmp
lret
in
inc
and
inc
xor
mov
les
adcl
std
add
jge
pusha
mov
leave
movsl
cld
cmc
cs
pop
in
dec
dec
call
push
push
outsb
mov
daa
aaa
cltd
sbb
gs
adc
out
data16
cmc
add
mov
adc
imul
add
cmp
push
adc
mov
cmc
dec
shl
pop
lahf
xor
xchg
popa
dec
mov
jp
jbe
sbb
daa
enter
imul
cltd
addr16
mov
maskmovq
idivl
sti
mov
push
in
mov
adcl
and
inc
or
mov
or
test
mov
test
cwtl
nop
jns
pop
sub
in
into
xchg
mov
sbb
cld
sub
jp
cwtl
xchg
jge
or
jp
clc
in
bnd
or
sub
fdivrs
pcmpeqd
cltd
adc
sub
xchg
daa
rcrl
aaa
ss
lcall
insl
bound
adcb
or
dec
mov
pop
sbb
xchg
arpl
push
mov
dec
mov
leave
xor
dec
jecxz
cli
sub
cmp
sti
sbbb
std
imul
dec
std
divl
mov
dec
jbe
das
ljmp
mov
ret
pop
mov
mov
stos
mov
sub
or
daa
outsb
imul
add
and
push
mov
out
inc
push
movsl
inc
loopne
das
cs
add
pop
sbb
ja
dec
xchg
mov
rorb
imul
sbb
aad
sub
je
aas
pop
mov
or
add
xor
imul
lret
xor
pop
inc
xchg
add
fistps
cmpl
push
mov
add
fimuls
fisubrs
add
dec
xchg
clc
icebp
aaa
icebp
mov
shll
lret
or
or
pop
mov
cmpsl
push
ds
mov
pop
mov
imul
cmpsb
sbb
xlat
inc
mov
adc
push
sbbl
sub
sbb
and
dec
pop
outsb
fs
jmp
fs
lds
add
or
mov
into
inc
iret
xor
lods
pushf
xlat
cmc
mov
ss
mov
cmpsb
sti
mov
jae
sbb
in
pop
and
je
mov
fbld
mov
sub
mov
mov
out
pop
push
pusha
fldl
call
sbb
or
xchg
test
cmp
jno
xchg
push
mov
movsl
and
jge
push
arpl
pop
xor
dec
dec
lahf
outsb
into
in
cmpsl
push
test
xchg
sbb
dec
shrl
push
xchg
pop
xchg
jo
cmpsl
mov
pop
shrl
roll
adc
dec
jg
inc
inc
xchg
test
jp
jo
daa
jg
test
out
push
nop
mov
sub
jg
mov
mov
mov
cmp
stos
mov
cmp
out
xorb
xchg
orl
push
xor
loop
jle
jae
loopne
mov
push
sti
pusha
xor
fisttps
stos
jge
popf
into
xchg
adc
jno
loopne
cmp
movsb
leave
push
ret
add
sti
mov
scas
mov
fstl
jge
in
lahf
addr16
test
neg
cmp
cmp
or
mov
std
imul
jg
and
cwtl
daa
fldl
jnp
in
ret
cltd
sub
out
dec
mov
mov
lods
popa
and
cmpsl
out
inc
jmp
mov
repz
mov
mov
cmp
insb
jno
lahf
roll
loopne
incl
stos
dec
add
adc
cmc
xchg
das
dec
aas
std
jp
add
pop
push
les
stc
dec
repz
mov
push
das
add
inc
xchg
mov
in
movb
xchg
inc
inc
aaa
mov
mov
mov
popf
xchg
sbb
loop
loope
cmpb
cmp
jnp
es
xchg
daa
repz
sbb
or
loop
leave
mov
pop
inc
sbb
mov
adc
mov
jbe
push
out
dec
dec
in
ljmp
jge
push
push
jae
pop
in
lahf
scas
mov
push
and
lds
xchg
ret
sub
push
jno
mov
ss
jae
jle
inc
fisttpl
and
aas
mov
movsl
inc
mov
inc
loop
push
jns
mov
cmp
xchg
fwait
inc
pop
sbb
lcall
sbb
stos
aas
jecxz
mov
sbb
mov
test
fcomp
jle
stc
frstor
aam
inc
sbb
sub
test
mov
das
cmp
jmp
inc
rcrl
imul
out
test
outsb
fsubl
push
mov
js
fiaddl
xor
pop
sbb
clc
add
pop
xor
imul
shlb
cmp
sbb
fbstp
or
lret
dec
cltd
add
mov
mov
popa
xor
fldl
lods
mov
push
mov
gs
mov
aad
and
jb
dec
pop
pop
mov
jle
fsubrs
dec
jnp
fidivs
or
into
pop
mov
ss
cmp
cmc
lods
std
mov
gs
aaa
pusha
add
popf
aad
cmp
xchg
dec
push
in
sbb
ljmp
les
adc
sti
aad
cmp
jb
xor
inc
inc
and
inc
xchg
add
in
in
xor
xor
mov
stos
jle
inc
fldt
mov
movsb
pop
dec
jb
mov
iret
add
ja
cld
sti
dec
les
and
pop
hlt
lret
sarl
push
sti
or
fstpt
sahf
adc
jae
push
add
fildll
data16
xchg
imul
popa
in
mov
ret
into
jg
pop
and
lea
dec
lahf
ret
jae
aaa
cmpl
push
xor
jl
push
data16
mov
pop
push
mov
jmp
xchg
repz
idivb
mov
std
mov
pop
and
adc
or
pop
rcll
mov
negb
test
adc
fld
sbb
mov
jmp
movb
shrb
leave
jne
add
dec
test
nop
xor
mov
or
xchg
pop
ret
xchg
mov
adc
mov
push
popa
jno
inc
test
pop
mov
or
xchg
push
pop
sub
and
loop
cwtl
or
ret
xor
mov
adc
dec
mov
stos
sub
lret
jne
mov
and
xchg
jnp
dec
aaa
int3
fimuls
out
mov
jnp
bound
sbb
xchg
xor
repz
jg
fsts
jecxz
inc
je
or
mov
bnd
push
int3
pusha
mov
inc
xor
enter
mov
sbb
xchg
stos
jle
sub
iret
mov
push
jmp
bound
sbb
bound
jge
insl
dec
inc
cld
dec
push
push
inc
jecxz
push
push
out
and
push
cmp
in
stc
lods
mov
sti
insl
sub
push
pop
jbe
lahf
or
push
cli
ficompl
js
notl
test
repnz
dec
outsb
imul
loope
jo
insb
jp
sub
jp
cmp
jp
ljmp
ja
stos
daa
in
pop
jg
xor
cmp
adc
addr16
mov
adc
rorb
adc
inc
in
aad
jb
ds
test
pop
push
sbb
je
mull
add
outsb
sahf
xlat
insb
xor
dec
mov
mov
push
orl
out
sub
push
xor
jle
inc
add
rorb
mov
test
inc
pop
sub
xor
push
mov
xchg
jns
mov
leave
popa
test
xor
mov
pushf
cld
sbb
push
stc
fwait
mov
enter
dec
insb
lods
pop
cmpsl
dec
lods
ret
div
mov
sbb
cmpsb
jmp
and
call
stos
mov
je
xchg
loope
addb
mov
xlat
fst
repnz
in
leave
stos
or
into
je
mov
test
sub
test
sbbb
mov
add
sub
push
xchg
xchg
inc
in
or
sub
into
xchg
out
mov
and
mov
notl
or
dec
aad
lea
mov
add
adc
insb
jns
scas
add
test
arpl
lods
dec
xor
push
inc
fwait
xor
lock
loope
lret
les
jecxz
fmull
test
les
inc
inc
fcmovu
outsb
les
sub
lea
push
bound
cmp
shrb
pop
rcrl
stos
cmpsl
mov
inc
jecxz
stos
pusha
lods
loopne
xor
lcall
inc
out
cltd
jmp
mov
sbb
pop
outsl
sbbl
xchg
or
insb
out
dec
mov
cmpl
imul
sbb
or
push
mov
inc
mov
inc
sub
lcall
mov
and
and
xchg
pusha
or
add
jl
xchg
add
lock
pop
or
lret
xorl
mov
mov
sbb
cmp
dec
imul
or
andb
andl
lds
cld
adc
pop
jmp
imul
in
inc
shll
dec
lcall
bound
aas
les
add
cmpsl
sar
mov
fadds
and
lea
jp
mov
ror
popf
imul
jle
push
or
aad
rol
movsb
daa
mov
adc
inc
movsl
xchg
add
sub
lock
not
pop
add
shrl
jmp
xor
push
jmp
dec
daa
lret
rcll
adcl
outsb
mov
mov
test
decl
je
jb
call
jecxz
int
and
enter
pop
test
lods
and
cmp
inc
sbb
xchg
adc
fmull
adc
jns
jno
ljmp
lods
mov
pop
mov
mov
xor
je
inc
scas
dec
mov
xchg
jbe
shr
jg
fisubl
dec
subb
cltd
cmpsl
pop
es
rep
lahf
push
push
cwtl
jno
mov
jp
add
inc
pop
fmuls
repnz
ret
fs
lcall
outsl
cmp
sub
pop
dec
jle
daa
mov
adc
adc
shr
cmp
jmp
pop
and
dec
jo
mov
inc
popl
daa
pop
mov
push
jnp
push
addr16
aas
mov
fists
imul
arpl
pop
clc
mov
fdivrs
rol
add
xor
fsubrs
mov
repnz
dec
and
push
aaa
lods
and
mov
mov
cwtl
lcall
xchg
mov
cltd
xor
test
inc
push
push
int3
je
out
pop
push
mov
sub
into
vunpckhpd
xchg
or
jb
inc
dec
mov
mov
gs
test
test
add
push
inc
daa
inc
sti
fldenv
or
push
xor
jbe
pop
notb
cld
push
iret
pop
outsb
sarb
enter
das
test
add
ror
fucomi
push
popf
mov
clc
push
es
mov
fisttps
xchg
aaa
insb
ret
scas
popa
pop
in
sub
sbb
stos
ds
mov
ds
add
mov
ss
mov
xchg
add
mov
rolb
xchg
ret
cmpl
and
nop
xor
shrb
cmp
pushf
mov
xor
jne
push
cli
lret
ja
sahf
pop
pop
nop
xchg
cwtl
jge
mov
push
cmpsl
lea
addr16
push
jle
lods
jge
mov
loopne
cmp
add
popa
js
cli
adc
fwait
loop
insb
dec
push
ret
enter
fcmove
scas
test
sub
xchg
fdivrs
mov
ret
outsb
xor
cmpsb
push
jecxz
mov
jae
divl
mov
pop
cmp
mov
jmp
mov
push
ss
cmp
decl
adc
pop
xor
ds
test
sti
sarl
xchg
aas
and
fdivl
and
imull
xor
clc
aaa
push
or
mov
sbb
sbb
fsubp
pusha
inc
test
lcall
iret
shlb
xchg
push
cmc
jb
addr16
xorl
xchg
xor
xchg
jnp
inc
sbb
fcomps
ds
stos
pop
jae
inc
bound
enter
mov
insl
lods
mov
cmp
repnz
adc
pop
cmpsl
cmp
insb
inc
lret
cmp
inc
sub
fimuls
add
ret
add
push
mov
mov
jp
add
stos
std
out
or
inc
shlb
aam
push
in
lcall
lahf
sbb
pop
adc
push
aaa
test
xchg
cmpsb
aaa
and
adc
push
dec
in
push
ret
mov
lods
test
outsb
gs
push
inc
pop
les
scas
jg
mov
mov
xchg
fdivrl
push
mov
jle
daa
daa
outsb
adc
push
mov
cmc
imull
test
dec
mov
lea
ljmp
jo
or
movsb
cmp
popl
mov
cmp
repnz
int3
xchg
outsb
fs
scas
jns
pop
mov
and
add
mov
add
jg
fsub
imul
arpl
mov
stos
jecxz
sub
pushf
or
test
dec
int3
loopne
sub
mov
ret
or
shll
push
xchg
mov
ljmp
xchg
lock
pop
sbb
cmp
or
shlb
push
xorl
adc
mov
inc
orb
sub
ljmp
mov
sub
adc
xor
cld
inc
cld
out
xor
mov
cmp
pop
xchg
lahf
fstl
jle
add
stc
push
fwait
push
fs
adc
jne
js
mov
stos
or
mov
icebp
xchg
adc
outsl
push
daa
cmp
inc
cmpsb
dec
fs
dec
jg
adc
xchg
push
mov
lgdtl
addr16
cmpsl
xchg
adc
lretw
sbb
scas
das
sbb
pop
lods
or
or
and
cld
incl
das
into
sbb
push
int3
pop
js
cli
jge
mov
xchg
fxch
roll
sub
or
dec
loop
xor
push
and
fldenv
imul
das
pop
sahf
mov
pop
daa
ficoml
lods
sbb
push
lret
push
inc
fisubrs
sbb
aam
mov
jne
mov
dec
inc
mov
fsubs
sbb
jns
int3
jnp
jns
pop
aam
add
nop
adc
sub
or
inc
sub
hlt
dec
mov
dec
jle
and
pop
add
mov
jmp
dec
mov
xor
movsl
inc
mov
xorb
adc
in
xchg
mov
orb
ficoms
dec
clc
add
jo
mov
out
dec
js
movsl
push
sbb
push
jns
rcrl
mov
jne
xchg
mov
mov
lahf
mov
jmp
jl
xor
out
push
orb
cmp
sarb
mov
cmp
pop
mov
mov
xor
dec
rolb
loope
mov
jb
lret
les
fidivl
fwait
shrl
mov
dec
icebp
push
mov
add
cmc
jg
inc
nop
pop
scas
adc
jne
hlt
loope
lea
or
addr16
jg
insl
add
addl
jnp
or
ljmp
gs
or
fs
mov
dec
pop
sub
xchg
mov
lea
faddl
fs
jns
mov
subb
cmpsl
addr16
sbb
sub
mov
dec
jle
xlat
mov
cmp
mov
adc
test
push
leave
push
mov
push
adc
jecxz
lods
and
cmp
scas
into
mov
cmp
xlat
hlt
inc
fidivrs
popa
es
popf
std
xchg
stos
mov
lret
push
xor
push
mov
adc
adc
inc
pop
div
pop
popf
xor
fwait
push
shll
dec
sti
into
sbb
push
shll
scas
pushw
movsb
xchg
scas
dec
adc
pop
call
aas
mov
setge
sbb
lods
dec
inc
testl
sahf
xor
popf
data16
int
icebp
lret
roll
decb
lea
insl
outsl
call
cltd
addr16
sbb
and
inc
ret
xlat
fs
jecxz
mov
imul
repnz
add
cmpsb
addl
cmpsl
dec
adc
xchg
loope
push
movsb
arpl
in
cwtl
stos
insl
xchg
int3
mov
cltd
sub
jg
sti
aas
les
jle
movsl
sbb
shlb
icebp
mov
lret
das
inc
clc
test
sbb
mov
shlb
cli
mov
stc
daa
mov
jb
pop
sub
je
jle
out
push
xchg
movsl
mov
sbbb
and
in
sbb
sub
add
imul
loope,pt
testl
ja
lahf
frstor
jns
stos
iret
xor
cmc
fnstsw
mov
adc
mov
cmp
icebp
cmpl
jnp
xchg
arpl
lods
add
fildll
inc
cltd
lods
imul
add
jmp
int3
dec
ds
fadds
xchg
xlat
int
int
lea
hlt
pop
popa
sbb
gs
outsl
mov
xchg
es
enter
roll
aaa
imul
leave
and
adc
mov
mov
dec
pop
inc
cmp
paddsw
or
fildll
or
inc
mov
push
adc
loop
cmc
fdivl
xor
fisubrs
jle
jmp
and
mov
push
pushf
ret
adc
dec
loope
lods
push
mov
add
gs
imul
xor
dec
cltd
push
js
cmp
lcall
lods
mov
sti
or
cwtl
stos
cwtl
icebp
xor
inc
aas
imul
stos
pop
cmpsb
in
xchg
in
add
fadds
xlat
mov
stc
sbb
inc
mov
and
pop
mov
cmp
dec
mov
adc
int
dec
lea
ds
cmp
lods
int3
mov
jmp
cmp
jnp
inc
pop
adc
pop
mov
push
xor
or
dec
cmp
aaa
jecxz
lret
fcoml
jg
mov
xchg
loope
gs
fisubl
les
dec
mov
jl
rclb
pushf
idivb
loopne
sbb
mov
movsl
and
and
out
push
inc
sbbl
push
pop
mov
mov
mov
push
mov
cltd
jge
inc
divb
push
xor
mov
add
xor
stos
lds
gs
in
and
push
dec
pop
cmp
cmp
sub
or
leave
dec
jle
mov
mov
sub
int3
mov
sub
daa
rcr
insl
not
pop
cmp
xchg
sub
les
leave
adc
jb
pop
xchg
pop
push
mov
stos
pop
adc
loop
fnstcw
jne
sub
loop
mov
xchg
sbb
jle
xor
mov
stos
and
push
adc
insl
fidivl
xchg
dec
mov
inc
in
inc
pop
pop
test
imul
add
psubd
add
lock
nop
ja
xchg
fbstp
jnp
mov
sahf
subb
mov
jae
aad
je
icebp
dec
adc
add
jge
lret
inc
xchg
pusha
fadds
sub
loopw
lret
xchg
cmpsl
adc
cmp
mov
cmp
xchg
lcall
bound
in
xchg
mov
dec
lahf
xchg
mov
xor
ficoml
lock
dec
pushf
out
jl
into
popf
jp
cmp
pop
mov
push
xor
lods
mov
mov
bound
and
dec
and
mov
inc
sbb
xor
inc
jmp
lods
cmp
int3
or
je
loope
sarb
cmpsl
inc
addr16
iret
mov
inc
inc
dec
mov
test
lods
cmp
add
rclb
int
mov
scas
push
xorl
outsb
inc
rclb
push
jnp
push
aaa
cltd
out
lahf
push
mov
cmpsl
add
ss
je
mov
clc
fimull
mov
mov
iret
stos
ljmp
ss
out
bound
sub
xchg
push
int3
cmpsl
xchg
adc
loope
mov
adc
mov
cltd
xchg
mov
and
mov
mov
sub
or
pop
mov
xchg
jmp
cld
ds
int
cmpsb
mov
pushf
sbb
jb
cmpsb
fistl
lahf
xchg
xor
cmp
ljmp
push
rcrb
inc
test
or
out
test
imul
les
mov
pop
jmp
adc
dec
shl
fnstenv
or
ret
cmp
push
sub
lock
ficoms
into
insb
lds
jne
call
dec
popa
scas
push
adc
xchg
popa
scas
in
push
shll
icebp
das
xor
and
and
add
mov
nop
bound
sub
or
push
outsb
in
shr
xchg
add
outsb
test
cmp
push
xor
mov
hlt
ret
nop
mov
mov
xor
inc
int
fisttpll
stos
fcom
sahf
ret
pop
mov
pop
inc
lahf
add
repz
adcl
lea
jns
sub
stc
sub
cmp
imul
sub
and
jle
repz
nop
push
leave
enter
ss
fiaddl
push
mov
pop
cld
dec
push
dec
or
jmp
sub
notb
mov
pusha
enter
pop
mov
rcl
dec
mov
cmp
push
jbe
imul
data16
ret
mov
cmp
or
repnz
jecxz,pn
cmp
mov
sub
daa
fs
in
fistpll
test
sub
sarl
shr
xchg
cmp
cltd
and
addl
test
push
shlb
shr
cmp
bound
das
repnz
mov
out
cmpsb
dec
jmp
jle
jp
xchg
push
push
ds
pop
add
add
adc
mov
je
incl
xchg
in
jle
pushf
aas
jge
ret
in
fiaddl
call
mov
xor
ljmp
pop
inc
xor
sub
mov
sbb
imulb
push
jb
xchg
scas
pop
movsb
clc
cmc
sub
imul
fistpll
jmp
lock
push
and
xchg
cmp
pop
aas
and
cmp
lahf
mov
push
and
add
inc
and
ds
push
sarb
shl
fldt
or
push
test
mov
popf
fidivs
nop
dec
push
leave
or
push
loop
movsl
push
pop
sub
mov
arpl
aas
mov
loope
dec
xor
lahf
int
adc
push
and
mov
ss
and
sub
sub
push
iret
mov
lods
sub
loopne
lds
adc
cmp
cmp
fsubs
jbe
pusha
cmp
xchg
test
xchg
pop
test
cmp
stc
xor
dec
movsl
into
and
test
pop
lods
loop
add
lcall
cwtl
mov
push
cwtl
test
jno
push
sub
xor
les
sub
jl
jmp
push
mov
addl
jl
int
or
in
mov
xor
inc
inc
cltd
xchg
std
es
inc
loop
mov
sbb
add
nop
stos
mov
and
test
mov
xchg
pop
dec
sub
clc
lods
enter
sahf
not
mov
pop
pop
lcall
xorl
loop
jnp
repnz
dec
or
sub
movsb
idivb
repnz
mov
push
sub
out
jnp
in
push
ja
jbe
ror
fstpl
sbb
cmpsb
lret
or
mov
popf
lock
push
pop
fisubl
jg
push
dec
mov
mov
cmpsl
cld
pop
xchg
in
lahf
aam
xlat
loope
or
push
pop
mov
sbb
xchg
cmp
xchg
cmpb
daa
add
mov
insl
push
imul
rcrl
fbstp
mov
dec
or
push
or
and
fisubl
int3
sub
notb
shrb
inc
out
movsb
xor
push
xor
divl
inc
sub
hlt
and
mov
jle
xor
rcll
outsl
imul
in
push
icebp
push
sbb
mov
outsb
int3
mov
sbb
addl
inc
jp
fs
lock
push
inc
addr16
pop
jae
dec
adc
or
lea
mov
orb
dec
push
jecxz
push
pop
cmpsl
sub
aaa
ret
testb
das
sbb
mov
mov
cs
xchg
xchg
jne
scas
mov
mov
mov
ret
jno
jo
jmp
inc
mov
mov
and
out
cmpsb
pusha
dec
adc
aaa
sub
push
mov
mov
sbb
subl
mov
inc
scas
xor
inc
and
mov
outsl
dec
cmp
cmpsb
inc
outsb
popf
sub
inc
cmp
fnsave
sbb
sbb
xchg
mov
jae
imul
cld
inc
das
or
in
adc
mov
cltd
push
mov
lock
push
pop
popf
enter
lds
test
out
cmpsb
mov
sub
cmpsb
test
out
ss
fildll
xor
clc
push
xor
in
xor
cmp
loopne
xchg
xchg
aam
sub
sub
xor
dec
or
arpl
or
dec
mov
mov
test
xchg
testl
jl
daa
sub
addb
xor
out
mov
loop
out
lahf
in
daa
mov
nop
fisubs
lret
mov
mov
ljmp
inc
pop
push
out
xchg
sbb
in
sbb
rorb
adc
rclb
add
pop
mov
mov
mov
fildl
int
cltd
ret
mov
jle
and
jl
insb
add
mov
push
int
jl
cwtl
ja
jg
rorb
jmp
mov
mov
fwait
lods
lods
clc
mov
nop
jns
repnz
cmp
hlt
jnp
jp
cmpb
xor
mov
adc
fs
clc
cmp
jmp
jg,pt
adc
cwtl
imul
inc
add
imul
test
mov
or
stc
cmp
in
adc
push
pop
add
es
sti
gs
jno
stos
int3
sar
je
sbb
sbb
call
inc
fcompl
rep
aam
mov
push
insl
jge
push
rol
jl
in
repz
fdecstp
outsb
pop
enter
dec
jb
jb
outsl
dec
test
repnz
repz
enter
push
aam
addr16
or
ljmp
xchg
jnp
push
mov
xor
push
dec
push
mov
xor
lds
adc
or
std
add
jg
mov
or
mov
mov
fadd
gs
xor
mov
xchg
mov
stos
pop
xchg
add
aaa
adc
mov
pop
inc
ljmp
std
daa
cmp
add
jae,pn
stos
loope
push
leave
sub
cmp
mov
jg
mov
int3
das
dec
dec
mov
add
cmpsl
adc
mov
in
push
push
test
icebp
inc
mov
int3
into
outsl
jno
fistpl
cmp
out
leave
test
gs
and
add
stc
filds
jp
insl
cmp
xorb
sub
psllq
xor
loope
mov
push
aad
adc
into
arpl
mov
pop
jno
and
fst
loopne
in
adc
adc
loop
cli
test
jle
aas
push
iret
sbbb
dec
sub
dec
inc
push
dec
nop
push
push
sbb
call
sbb
jo
cmp
mov
and
inc
sbbl
lods
sti
sub
scas
aas
xor
xor
rorl
pop
jle
lods
jae
in
and
mov
outsb
mov
pop
pop
pop
mov
fcoml
ljmp
in
aaa
mov
stos
mov
mov
outsl
jns
cmpsl
xchg
push
negl
jns
iret
adc
dec
adc
or
pop
sub
movsl
mov
movsl
cmc
add
xchg
add
loope
in
add
dec
aaa
div
lds
enter
call
imul
mov
fiaddl
sbbb
pop
jbe
in
shrb
stos
cwtl
loope
push
cld
jl
mov
in
js
and
mov
cmpsb
inc
lods
in
adc
scas
adc
mov
mov
pop
mov
loopne
mov
js
cli
in
fucomp
dec
imul
rcl
push
sub
aaa
and
divb
out
popa
lret
ret
mov
jbe
in
pusha
lock
cld
xchg
xor
std
cmc
sub
enter
leave
sbbl
scas
and
fcoml
sub
cmp
stc
xlat
fdivrp
mov
xchg
push
cmp
cltd
dec
cmp
rcll
jecxz
add
push
mov
and
sub
inc
mov
xchg
adc
or
push
scas
pop
pop
or
cltd
lds
xchg
adc
test
push
sbb
mov
mov
inc
dec
adc
out
sub
xor
movsb
mov
ss
or
psubq
ret
les
ss
insb
jns
pop
lock
xchg
loop
dec
mov
incb
enter
nop
out
mov
jo
mov
ja
add
mov
rcrb
iret
fmuls
stos
rclb
hlt
shll
mov
test
leave
adc
cmp
aam
jno
sti
shrl
xor
xor
fstpt
scas
outsb
pop
mov
imul
incb
sbb
lahf
mov
fisubs
inc
add
les
push
das
ds
mov
cwtl
sub
cmpsl
pop
adcl
insb
xlat
outsb
push
lahf
sahf
dec
js
pop
jns
fimull
popf
call
mov
adc
lahf
lea
cmc
push
insl
cmp
scas
lods
jl
mov
add
xor
rcll
popf
add
mov
lea
gs
mov
loope
aas
cmc
sub
mov
inc
sub
cwtl
nop
mov
orl
xorb
push
pop
lods
in
data16
dec
xor
bound
icebp
insb
outsl
pop
js
call
pop
jmp
push
inc
leave
push
bound
gs
adc
add
push
pop
stos
leave
jmp
dec
sub
std
or
shr
aad
je
or
adc
sbb
pop
push
mov
jmp
and
mov
ds
mov
aam
fmul
cmp
pop
inc
cs
hlt
and
inc
cmp
ret
stos
pop
mov
mov
dec
adc
inc
fidivrs
and
and
jp
jp
mov
and
hlt
jmp
jbe
pop
pop
int3
jns
loope
mov
in
cmp
adc
and
cmp
std
mov
jo
and
out
cli
fucom
mov
jecxz
lahf
sbb
cs
xchg
addl
arpl
movsb
cmc
sub
je
stos
mov
call
add
push
sbb
nop
mov
stc
and
aas
xchg
and
into
xchg
add
xchg
and
js
sbb
scas
rcll
in
or
mov
orl
out
add
pop
xlat
mov
dec
test
add
sub
leave
cmp
adc
clc
imul
int
cmp
mov
sub
andl
lcall
add
cltd
sub
and
xorl
clc
sbb
shl
sub
dec
les
and
in
in
test
jmp
mov
call
mulb
movsb
inc
imul
outsb
add
movsb
and
fldt
jg
andl
aaa
adc
push
adc
push
or
cmp
sub
rorb
repnz
sti
loopnew
mov
cmp
cwtl
mov
out
jle
sahf
jle
outsb
pop
addb
cmp
out
inc
xchg
inc
mov
pop
hlt
adc
sub
cli
mov
adc
or
xchg
dec
ds
dec
sub
mov
inc
movsb
and
data16
stc
test
or
shll
pusha
outsb
pop
dec
popa
scas
inc
add
sub
pop
dec
les
icebp
inc
jge
add
xchg
adc
mov
xor
cmp
test
insb
daa
ffreep
mov
adc
popa
xor
inc
pop
loope
js
lock
sbb
popa
iretw
or
call
idiv
xor
loope
fstps
jmp
mov
js
iret
sbb
jo
dec
push
lret
xlat
daa
imul
jle
pop
dec
sahf
sti
dec
int3
fistpl
cmp
pop
xchg
cmp
das
mov
sbb
test
jmp
jle
lods
xor
out
push
test
xor
repnz
cmovge
or
ret
stos
aas
jge
test
adc
pop
fistpl
push
pop
insb
mov
or
jns
pushf
mov
in
mov
popa
or
dec
push
xchg
jo
test
push
push
shll
fsubrs
loopne
in
outsb
bound
mov
cs
mov
fwait
sarl
movb
push
jne
sbb
iret
adc
iret
or
jl
mov
insl
push
mov
push
xor
xor
cmp
jbe
inc
out
in
pop
cs
push
mov
mov
fisttps
cwtl
sbb
or
sbbb
stos
mov
aam
dec
cli
push
les
and
imul
adc
inc
dec
cmp
ljmp
cmp
adc
les
add
jbe
xchg
addr16
lcall
jecxz
mov
cmpsl
in
into
sbb
mov
insb
mov
nop
inc
lods
dec
out
pop
push
xor
xor
xor
pop
loopne
or
iret
lret
nop
insl
xor
rorb
jae
sub
inc
cmp
sti
lret
gs
or
cltd
push
out
stos
and
xor
xor
mov
stos
cli
pop
sub
dec
mov
mov
fcoml
inc
xchg
jnp
pop
subw
jge
cmp
dec
divb
popa
aaa
inc
sbb
mov
mov
sti
aaa
lret
mov
inc
icebp
imul
add
pop
rcrb
xchg
rorl
or
inc
xchg
ljmp
cmpsl
mov
arpl
lea
jecxz
inc
lds
gs
mov
sbbl
add
mov
aad
pop
push
dec
fists
negb
dec
jg
rclb
push
faddl
fldl
dec
in
int3
je
movsb
iret
lock
outsl
xchg
push
dec
push
jp
adc
pop
or
push
mov
stos
sub
xchg
cmp
xor
mov
mov
hlt
sub
repnz
insb
pop
xorb
adc
lea
ss
in
cmp
lock
imul
sub
push
test
das
push
lret
mov
sbb
loop
jmp
add
mov
mov
mov
setae
sub
cmp
cld
std
push
repz
inc
pop
bound
cmp
mov
fldenv
or
jmp
out
int3
dec
cld
mov
cmp
mov
lods
out
loopne
cmp
into
stos
cltd
movsb
lods
dec
add
std
mov
mov
clc
ss
nop
lock
std
and
js
fstps
push
xor
push
pop
bound
scas
lods
cmp
rcll
cmpb
leave
jae
sub
cmp
sbbl
fs
repz
pop
jb
cwtl
jle
test
xchg
imul
adc
push
pop
xbegin
jno
cmpsb
push
fbld
fs
movsl
int3
sbb
testb
out
out
jecxz
xchg
or
leave
pop
pushf
mov
inc
push
movb
xor
loopne
fdivrs
xor
jecxz
cmp
les
es
or
mov
pop
cmp
push
jle
push
rorb
shll
mov
scas
outsb
inc
xchg
mov
mov
out
inc
pop
add
mov
in
repnz
iret
pop
inc
loop
mov
xchg
out
movsl
push
cmp
adc
or
xchg
inc
adc
popf
xchg
lea
push
fs
mov
aam
insl
gs
mov
cltd
cmpl
orl
xlat
pop
out
mov
hlt
push
xchg
test
add
call
jbe
mov
pusha
sbb
or
popf
sbb
push
inc
and
inc
test
inc
push
cmp
and
xchg
pushf
dec
lret
jecxz
mov
or
mov
or
pop
nop
cmc
fsubs
dec
mov
fdivr
mov
in
out
insb
fsts
scas
addl
sbb
addr16
sub
daa
loopne
and
inc
scas
pop
nop
in
cs
push
fcmovne
icebp
test
idivl
dec
in
inc
xchg
cmp
mov
je
push
icebp
subb
je
in
or
pop
daa
shll
push
inc
push
pop
xchg
mov
xlat
leave
adc
cmp
mov
fs
jecxz
arpl
je
lods
sub
sbb
inc
scas
or
bound
push
pop
jb
mov
int3
jns
inc
mov
stc
ds
push
push
jno
enter
xchg
jno
cmpsl
das
cltd
xor
sub
xchg
or
ret
jno
or
adc
outsl
iret
movsb
push
or
test
jecxz
add
dec
adc
ja
jg
xchg
xchg
dec
dec
test
inc
xchg
mull
add
dec
mov
xchg
mov
or
inc
popa
pushl
pop
xchg
sub
push
inc
lcall
aas
das
sbb
in
xchg
outsb
jbe
stos
loope
push
in
push
jge
cmp
adcl
nop
cmp
mov
cmp
into
lret
sub
sahf
xor
sti
rcll
and
lahf
pop
or
push
aaa
hlt
repnz
inc
jns
fwait
add
mov
roll
test
mov
pop
push
popf
jns
jb
mov
xchg
rcll
bound
or
js
in
xchg
lods
cmp
push
aaa
cmpsb
sub
mov
and
and
jle
pop
add
sahf
and
outsl
cs
push
dec
nop
mov
ret
neg
xchg
or
sub
dec
outsl
dec
out
adc
fwait
xor
xchg
in
mov
push
mov
cmp
jae
pop
dec
jne
push
xlat
cltd
dec
cmp
inc
jg
and
nop
jl
aas
pop
clc
xchg
xchg
mov
mov
flds
and
adc
std
outsl
in
cwtl
in
and
fwait
adc
push
pop
lock
or
ret
xchg
sbbb
or
inc
loope
push
or
out
test
or
xchg
xchg
pop
mov
dec
outsb
loopne
or
loope
inc
xlat
sbb
mov
into
xchg
lods
dec
jecxz
lock
pushf
or
pop
push
sub
lahf
ds
enter
ja
stos
frstor
sbb
cli
addl
shlb
ret
hlt
jb
jecxz
lcall
fsubrl
nop
jne
mov
add
cs
ljmp
cmp
subw
push
dec
aas
sti
iret
mov
cmpl
mov
push
mov
enter
call
xchg
mov
xchg
aam
cmp
lods
jns
pusha
jecxz
lret
fdivs
outsb
outsb
push
and
lods
jno
fcom
xor
jb
xor
pushf
push
pop
mov
adc
push
cmc
add
push
out
lret
xor
xchg
stos
mov
mov
pop
pop
sti
out
dec
aaa
arpl
pop
push
icebp
cmp
stc
inc
test
fadd
mov
cli
jae
int
sub
lods
mov
mov
jne
clc
jecxz
pushl
add
cmpsl
sbb
ret
jbe
dec
mov
movsb
xabort
mov
shrl
inc
icebp
daa
cmpsl
mov
pushf
cmp
mov
inc
cmp
mov
imul
push
movl
lret
sti
pop
mov
xorb
shll
mov
sbb
lahf
cli
jnp
sub
hlt
sub
mov
push
xor
pop
adc
out
sbb
pop
mov
dec
dec
xchg
rol
in
mov
sarb
icebp
cmp
fldenv
inc
outsb
popf
cmp
mov
adc
movsb
jmp
or
mov
ljmp
sub
mov
aas
push
cmp
dec
add
pop
sbb
insb
dec
pop
ljmp
push
cmpsb
subb
pop
into
xchg
clc
cwtl
adc
and
xor
popa
xorb
in
test
and
lods
mov
out
fdivp
pop
push
pushl
jno
cmp
orl
cltd
sbb
ljmp
mov
rorb
ss
push
arpl
jge
dec
es
lcall
adc
ja
push
mov
dec
xchg
lods
cmp
jne
ret
mov
mov
or
dec
sub
adc
fstps
outsl
loope
mov
xchg
movsb
mov
in
inc
push
xchg
xor
js
out
gs
sub
sahf
fdivs
jle
cmc
lcall
std
mov
xlat
pop
push
movb
add
xor
cmc
into
lret
or
push
mov
lea
cld
inc
fwait
aas
push
or
ret
insb
les
push
sahf
or
adc
jmp
repnz
cld
dec
adc
jg
cmp
mov
movsl
mov
ljmp
fldcw
push
hlt
push
cmp
adc
ficoml
pop
mov
cmp
lods
data16
ljmp
cmp
or
cmp
pop
inc
mov
pop
cmp
imull
ja
ss
out
add
movsl
lea
mov
inc
or
sbb
push
mov
pop
sub
jb
cmc
cmp
jmp
mov
sbb
lcall
and
cli
sub
jg
inc
scas
rorl
dec
jo
xchg
in
stos
movsl
and
push
jbe
add
popf
mov
xchg
dec
mov
into
xchg
push
cld
mov
in
gs
mov
imulb
pop
dec
stc
ret
add
repz
fcmove
enter
std
dec
fsubr
int
mov
fstl
inc
dec
adc
inc
ret
fildll
jne
push
or
dec
adc
mov
insb
test
rcrl
addr16
movsl
xchg
loope
mov
jb
cwtl
sub
sbb
mov
cmp
popf
lret
inc
xor
inc
daa
push
inc
int
sbb
movsb
pop
mov
nop
fbld
cmp
dec
aaa
loopne
sbb
scas
jmp
pop
flds
sub
xchg
mov
add
mov
push
cli
add
mov
mov
pop
sti
bound
jb
push
ljmp
cltd
cmp
add
int3
xchg
and
mov
daa
cmp
pop
mov
lods
inc
insl
push
xchg
xchg
orl
mov
sbb
xchg
mov
pop
mov
cli
ret
xor
inc
mov
icebp
jae
push
adc
loope
clc
push
push
into
dec
inc
pushf
mov
nop
test
out
cmp
jl,pt
add
pop
dec
bound
mov
adc
ficompl
cmp
push
call
cli
nop
xor
pop
cwtl
and
dec
add
subb
push
ficompl
imul
inc
ficoms
ret
not
into
sub
lret
aad
mov
mov
jb
int3
and
push
popf
push
sahf
xchg
aas
adc
pminub
pop
add
xorb
pop
sbb
sbb
addr16
test
add
pop
inc
std
lret
lret
jl
push
mov
jne
cmp
mov
xor
cmovle
std
mov
xor
dec
xor
filds
dec
jne
mov
sbb
and
imul
dec
pop
mov
mov
shrl
xchg
rcll
ret
mov
mov
cmpsb
pop
ja
xchg
xlat
xchg
xchg
std
sbb
adc
lret
mov
pop
mov
adc
rcrl
xchg
push
fldt
mov
repz
inc
call
push
cld
pop
inc
rcrb
test
xchg
je
push
jno
shlb
pop
cmpsl
stc
mov
cmp
cmp
pop
loop
fisttpl
lcall
push
pop
lret
push
shll
pop
ret
mov
enter
cmp
add
sub
pushl
mov
mov
mov
sub
psrlw
ret
sbb
lret
jae
pop
movsl
lock
inc
es
mov
dec
pushl
ljmp
xor
cmp
jp
mov
movb
adc
or
mov
mov
test
push
pop
or
lahf
cmpsb
xchg
ds
in
mov
inc
lret
int3
add
mov
lsl
push
filds
loope
scas
cmpl
dec
jp
dec
mov
mov
jae
jnp
cmp
sbb
stc
enter
popa
add
insl
xchg
shrb
or
xor
lock
jmp
shl
sti
and
push
sub
xlat
xchg
jae
fstps
repz
rcll
sarb
dec
int
pop
jne
repnz
sub
mov
fwait
imul
sbb
scas
popa
nop
mov
rcrb
pusha
jmp
xor
pusha
hlt
pop
loope
jl
sbb
scas
lahf
fnstsw
mov
or
pop
addl
lea
sbb
mov
dec
sbb
push
mov
fsubl
sbb
in
jp
pusha
inc
int3
mov
and
cwtl
cli
sbb
dec
push
mov
fs
fabs
add
ror
call
and
mov
stos
push
fmull
jge
mov
aas
pop
xor
sub
loop
into
jbe
or
xchg
inc
test
imul
and
or
insb
movsl
add
push
push
loop
je
pop
sbb
iret
cmc
out
sub
mov
aas
sbb
xchg
insb
sarl
aas
xchg
test
push
dec
out
sub
bound
xchg
push
inc
outsb
jns
mov
or
arpl
cwtl
push
mov
dec
mov
rorl
jnp
adc
ja
daa
movsb
into
ja
pop
jo
fidivrl
lods
lret
adc
jo
fwait
add
push
mov
push
test
cs
dec
push
adc
fcomi
or
dec
pop
mov
js
xlat
adc
mov
push
idiv
mov
ror
les
sbb
insb
xchg
push
scas
xchg
mov
or
inc
push
adc
adc
jne
inc
sbb
jns
into
stos
mov
in
pop
hlt
ficompl
cmp
inc
sti
mov
sbb
jp
es
fucomp
cmp
stos
scas
push
popa
and
iret
push
pop
repz
rcll
out
fimull
mov
sub
sbb
inc
pop
ds
jb
mulb
movsl
outsb
lea
loop
and
lods
pusha
pop
mov
xchg
xchg
adcb
dec
pusha
in
enter
scas
rcll
mov
clc
jmp
leave
out
stos
js
mov
push
xor
mov
push
lret
daa
fisttpll
and
lret
movsb
push
add
nop
insb
mov
gs
jl
pop
std
and
aaa
mov
ret
rclb
xor
sub
fs
mov
lods
push
pushf
push
xchg
inc
pop
lcall
cmp
mov
push
cli
push
pushf
jle
pop
insb
xchg
cmc
jno
xor
jecxz
xchg
lods
js
test
incl
cmpsl
rolb
sbb
dec
mov
xor
jnp
shrl
shlb
push
dec
adc
loope,pt
mov
pop
sbb
sub
mov
jno
std
or
or
ljmp
and
es
scas
push
pop
daa
dec
shll
fists
cltd
unpcklps
divl
mov
loop
inc
jno
stos
xlat
js
lcall
lret
inc
adc
dec
movsl
hlt
cli
aas
cmc
mov
dec
cmp
mov
xor
mov
out
sahf
mov
jp
loope
xchg
scas
pop
add
scas
inc
lcall
jmp
into
xor
mov
neg
inc
mov
jge
popa
sarb
push
popf
sub
call
aaa
lcall
out
sti
mov
and
sub
es
hlt
pop
enter
in
test
shlb
int
jmp
shufps
je
fbstp
lahf
and
cmp
push
mov
or
dec
loop
in
fs
fwait
repz
gs
dec
cmovl
test
js
aad
cmc
mov
add
mov
bound
fstpl
insb
xchg
aaa
in
fisubs
adc
xchg
sbb
and
ss
cmp
cli
inc
aaa
jg
inc
sar
xchg
je
pop
or
jae
adc
movb
inc
xor
mov
jns
mov
add
inc
shll
or
cmp
push
sbb
shll
inc
add
dec
push
loope
xor
ret
aam
mov
mov
lds
icebp
sbbl
mov
cmp
add
ficoml
inc
aad
iret
inc
stos
mov
jp
fucomi
mov
cmp
pop
inc
jge
shufps
stc
cmp
jb
outsb
xchg
into
icebp
popa
adc
cli
lret
mov
mov
jne
test
dec
push
mov
daa
dec
lods
out
jle
cmp
lcall
mov
xor
bound
cltd
hlt
inc
mov
push
cmpsl
jno
pop
and
arpl
sar
cmp
cld
cs
jmp
mov
jg
mov
sbb
lds
add
scas
jecxz
dec
mov
fwait
sub
sub
scas
imul
jae
das
and
mov
mov
or
pusha
add
jge
push
dec
and
shll
clc
mov
jb
cmp
or
xchg
pop
mov
and
lock
jae
mov
ss
test
inc
jb
scas
iret
loope
hlt
pop
inc
fsts
jae
call
mov
cmp
dec
fldt
sub
dec
iret
es
mov
cwtl
dec
popf
mov
jns
lahf
or
push
dec
mov
jl
cmp
and
adc
xchg
repz
adc
jecxz
and
lods
fstl
cwtl
push
notb
xchg
mov
inc
xchg
js
pop
pop
cmpsb
pop
test
mov
jecxz
in
xchg
mov
ret
lahf
push
dec
testl
test
xchg
arpl
push
pop
pop
dec
cmp
mov
loop
pop
inc
push
stos
in
dec
ret
pop
add
out
adc
inc
jne
shrb
push
or
out
fstpt
les
inc
mov
mov
pop
or
scas
ds
sbbl
xor
lock
repz
push
push
jae
sub
cmp
push
sub
jmp
cmp
adc
int3
dec
mov
lock
not
adcl
loopne
pop
mov
aas
es
imul
mov
insb
daa
push
pop
imul
add
push
mov
xchg
push
cmp
mov
lret
sbb
lods
jns
mov
pop
fcmovnb
scas
push
cmc
pop
dec
dec
ljmp
dec
adc
add
or
add
fdivl
adc
mov
xchg
cli
dec
andb
cmp
add
xchg
icebp
cs
mov
rcrb
xchg
or
test
cmp
mov
fstps
and
push
mov
sub
sub
sub
in
subl
je
cmpsl
adc
iret
and
push
dec
scas
movsl
iret
inc
scas
xor
movsl
es
test
adc
or
xchg
and
fldt
jge
dec
ja
xchg
adcb
pusha
pop
push
int3
inc
repnz
and
mov
dec
adc
mov
jg
inc
sbb
pop
enter
std
inc
inc
test
outsb
jp
arpl
out
mov
daa
popa
dec
mov
imul
out
hlt
xor
icebp
and
enter
push
adc
sub
loope
gs
imul
xor
pusha
jp
ss
xchg
jecxz
xchg
sbb
jmp
test
in
adc
jl
loope
mov
add
mov
or
pop
sbb
sbb
int
mov
imul
pop
sbb
lods
adc
cld
dec
mov
pop
sarl
jge
fs
push
xchg
dec
push
loope
xor
aam
push
cmp
lret
sub
and
mov
inc
hlt
adc
pop
adc
movsl
clc
xor
addl
inc
xchg
dec
mov
jae
adc
jg
mov
les
add
pop
mov
sub
and
icebp
xor
mov
movsl
adc
push
insb
stos
gs
je
adc
mov
sbb
fs
jle
test
mull
sub
jae
popa
push
icebp
push
sub
xor
add
imul
pop
jge
xchg
out
lds
sti
and
jns
and
and
cli
cli
das
jl
call
mov
push
ljmp
gs
add
cs
out
movsl
mov
scas
cmc
push
int
xor
cwtl
pop
dec
dec
movsb
cmc
out
cld
fsubs
dec
pusha
push
jbe
aam
or
add
fwait
stos
pop
add
inc
xchg
imul
pop
lea
in
mov
mov
jecxz
sub
lcall
enter
cwtl
movsl
add
add
jnp
lods
lea
pushf
mov
loopne
xchg
mov
jbe
cmp
sbb
nop
inc
popa
mov
push
jae
or
mov
mov
gs
bound
xor
repz
pushf
cmpb
xchg
call
jnp
add
jmp
pusha
fnstenv
sub
sub
movsl
or
daa
adc
cmp
cmc
inc
aaa
xlat
cmp
add
add
mov
mov
jle
xor
cmp
push
or
adc
movsb
adc
or
and
cmp
scas
jnp
cmc
push
mov
outsl
fadd
xchg
not
mov
movsl
push
xchg
nop
mov
cmpsl
ret
and
dec
jns
xlat
in
pop
dec
fwait
add
notb
aas
lods
add
inc
mulb
je
mov
fadd
test
ret
push
bound
xchg
sub
rolb
ficoml
sbb
and
leave
and
aad
mov
ret
test
or
movsb
sbb
fimuls
push
jmp
lret
in
adc
and
fwait
aas
pop
xor
test
filds
sub
mov
fwait
cmp
push
adc
inc
test
inc
xor
cmp
xchg
adc
gs
xchg
bound
and
push
dec
ret
loopne
adc
xchg
sub
push
inc
insb
push
hlt
rorl
dec
nop
jmp
add
or
or
outsl
jbe
pop
inc
and
ja
push
sub
mov
clc
scas
das
adc
fwait
loopne
outsl
ljmp
mov
or
stos
into
into
or
fcoml
fsts
in
aad
inc
xor
cmove
popa
pop
and
jbe
stos
adc
lock
jae
mov
inc
jle
push
outsb
and
inc
adc
and
mov
imul
shll
add
popa
call
mov
dec
dec
adc
adc
push
scas
out
fnstenv
xchg
push
test
cwtl
pop
cmp
mov
andb
lahf
mov
cmp
or
xchg
popa
loop
pop
dec
sbb
add
ss
rcrb
mov
cld
leave
repz
or
aad
inc
sub
and
sub
push
cs
sbb
mov
jp
adc
mov
in
xor
mov
aam
xlat
shr
xchg
popf
mov
mov
push
or
push
pop
or
sub
inc
and
cli
pop
mov
xchg
xchg
shl
mov
inc
int
jnp
out
imul
inc
push
aad
ljmp
jg
push
negl
repz
aam
in
daa
inc
push
inc
sbb
pop
and
push
pop
sarb
add
ss
lock
repnz
mov
incb
lods
imul
fdivrs
enter
xor
mov
sbb
push
push
and
mov
call
shr
nop
adc
data16
stos
das
jo
sarb
inc
cld
jmp
push
fdivl
je
pop
popf
jns
rorb
rorl
mov
lret
and
cs
push
sub
lcall
imul
push
xchg
pop
mov
scas
adc
push
sbb
cmp
cmp
xchg
xchg
mov
insb
push
addr16
lret
add
gs
pop
sub
xchg
je
scas
lahf
jg
xlat
add
aam
into
fptan
mov
lods
inc
ljmp
dec
push
push
and
xchg
cmpsb
xchg
aaa
push
pop
push
mov
cs
push
sarl
sub
out
mov
and
cli
pop
add
inc
loopne
add
and
das
fistpl
pop
testl
decl
cld
sbb
mov
hlt
mov
pop
dec
in
xor
ja
lock
adc
sub
insb
shll
jmp
adc
cld
and
inc
nop
dec
sbb
mov
push
sti
test
lock
xchg
rcll
test
dec
aam
cmp
mov
sbb
inc
mov
xor
push
jecxz
stos
leave
add
mov
movsb
lret
das
dec
imul
xor
push
dec
scas
enter
push
repz
jge
cwtl
dec
daa
fsubr
sbb
pop
push
add
mov
jb
sbb
hlt
popf
loopne
scas
jl
add
insb
in
mov
bound
inc
sbb
cmp
cld
push
and
xchg
pop
adc
cmpsl
test
inc
testl
lea
dec
cmp
subb
aad
into
stos
pop
mov
das
mov
idivb
int3
aam
push
mov
add
adc
or
add
lahf
xor
loop
pop
mov
imul
mov
jbe
sbb
mov
add
push
or
mov
loope
movsb
pop
mov
dec
jo
dec
lahf
mov
shl
xorb
ljmp
xor
jle
push
xchg
fcomps
xchg
push
scas
mov
jno
mov
jl
xchg
push
sub
outsl
pop
ss
dec
mov
stos
dec
clc
xchg
add
cmc
cwtl
in
call
scas
incl
int3
in
ja
testl
inc
add
cld
lret
xlat
jg
mov
insl
adc
or
push
cltd
cmp
loopne
lcall
jp
mov
dec
aam
mov
mov
push
pop
or
jmp
push
in
or
ja
arpl
jbe
enter
popa
jecxz
xor
add
loopne
or
sbb
push
jg
cwtl
mov
ss
sar
pop
xor
scas
adc
pop
mov
cmp
dec
popf
mov
or
fs
xchg
cmp
sbb
into
xor
cmp
scas
xor
sarb
leave
jnp
mov
into
xchg
cli
test
out
xchg
roll
hlt
int3
xor
xchg
push
jecxz
sub
imul
push
aad
xchg
or
mov
mov
sti
pop
adc
ret
rcr
or
push
call
enter
xor
mov
outsb
fnsave
mov
cmp
leave
fdivr
aaa
add
ret
test
jo
icebp
ror
hlt
popf
mov
sti
in
ss
sub
movsl
cld
lcall
int
mov
mov
fwait
aaa
mov
or
mov
out
xor
inc
push
leave
sbb
or
xor
cmpsb
jge
fistps
adc
js
arpl
test
fwait
jno
cmc
icebp
out
arpl
adc
arpl
inc
ja
push
rol
jae
cs
mov
into
xchg
jl
add
fs
cli
jle
inc
imul
cmp
jp
rorl
add
push
inc
popl
pop
adc
pop
mov
outsl
dec
fwait
cwtl
xlat
stc
push
or
ja
sbb
adc
mov
ret
leave
scas
jmp
and
pop
fsubl
adc
outsl
popf
mov
cmpsl
scas
mov
push
inc
pop
rcrb
imul
adc
mov
ret
push
aaa
fs
out
movsl
jl
xchg
push
sti
sarl
test
jbe
dec
int3
bound
out
ret
ja
inc
gs
pop
sub
shll
or
gs
cmp
fdivr
insb
cmp
fldcw
sbb
mov
dec
adc
loopne
lock
imul
push
jmp
mov
pusha
insl
aas
sahf
int3
sub
jmp
ret
sub
push
fwait
push
insl
pushf
push
jg
adc
jge
sbb
dec
cmc
imul
inc
loopne
insb
lea
iret
cltd
adc
je
sub
adc
call
jecxz
js
xor
cmp
imul
add
icebp
iret
lcall
push
int
fisttps
outsb
aam
or
ret
jmp
insl
jge
pop
mov
jge
or
sti
test
xchg
push
dec
iret
add
ja
inc
ficomps
clc
xchg
push
pop
es
xchg
movsl
push
lock
dec
cltd
pusha
iret
push
out
pop
imul
jmp
or
lcall
xor
pop
lds
xchg
fisttps
sbb
xchg
stos
sti
sub
stos
cli
inc
call
ds
xlat
add
das
jne
pop
and
fdiv
adc
pop
ja
jp
mov
pop
insl
dec
mov
add
add
pop
jmp
pop
ss
xchg
mov
xchg
shrl
sub
sar
inc
jp
xchg
dec
fnsave
ja
cltd
pop
push
pop
xchg
movsb
sub
std
add
cmpsb
pop
scas
imul
mov
mov
rolb
test
lahf
ljmp
popf
xchg
repnz
popa
mov
psrlw
and
scas
sbb
and
subb
dec
iret
stos
push
xor
fsubrs
sub
out
psllw
gs
sbb
leave
pop
mov
push
adc
mov
add
out
lret
jmp
pusha
aas
mov
or
sbb
insb
dec
scas
mov
ja
add
sbb
cmp
push
xchg
scas
dec
mov
push
cmp
xchg
mov
ja
mov
mov
dec
add
mov
ret
and
movsl
fs
mov
mov
sbb
sub
xor
shll
out
jp
aad
sbb
or
ss
pop
xor
filds
xlat
setno
push
bound
repnz
loope
rol
xor
jg
mov
int
dec
mov
mov
pop
jb
add
sahf
sahf
fs
notb
mov
and
and
mov
cmp
xchg
rorb
push
add
les
es
mov
cmp
mov
leave
mov
or
out
leave
mov
imul
push
xor
fmul
insl
in
push
mov
enter
outsb
mov
sahf
sub
cmp
popf
or
dec
adc
out
inc
out
pushf
loope
pop
loope
mov
and
adc
lahf
inc
mov
lret
es
and
outsl
dec
jne
and
ljmp
push
movsl
xchg
mov
shlb
fucomp
xchg
out
push
ja
xchg
mov
shll
cmp
mov
jnp
mov
lock
mov
xchg
push
imul
xchg
int3
es
aam
inc
xchg
add
call
jnp
test
xchg
call
in
lock
cmp
imul
mov
pop
call
jnp
cmp
jg
mov
mov
test
test
cmp
imull
jg
pop
sbb
divl
xchg
push
std
sub
mov
sub
ss
add
pop
push
push
clc
fscale
add
dec
inc
sub
data16
add
cs
loopne
sbb
outsl
cld
pop
mov
roll
mov
jg
aaa
insl
xor
mov
pop
or
add
xchg
fnsave
in
pop
sbb
mov
negl
cmpsl
cmpl
mov
xchg
repnz
jp
mov
mov
std
fidivs
and
pop
inc
dec
adc
test
cli
mov
push
or
mov
stc
bound
cmp
push
ds
jmp
data16
add
fsubl
pcmpgtd
or
or
dec
dec
cmp
jp
lea
mov
inc
loope
fadds
xchg
jns
sarl
sti
sahf
rcrl
les
dec
pop
mov
fisubl
roll
add
clc
std
cmc
mov
inc
xchg
push
jne
xor
imul
dec
in
xor
sub
stc
push
mov
cli
xor
sub
mov
cmp
fsincos
aas
push
push
xorl
pop
push
sahf
std
or
or
dec
data16
pop
hlt
int3
cltd
cwtl
popa
in
adc
icebp
sub
mov
add
pop
pop
push
adcl
xlat
xchg
pusha
adc
sub
pop
sbb
sahf
andb
pop
bound
aam
aas
mov
lea
arpl
fucom
les
sbb
mov
test
mov
stos
and
cmp
mov
fwait
loope
call
mov
mov
xchg
test
xchg
clc
nop
jp
xchg
mov
std
nop
xchg
inc
jg
je
jmp
dec
fs
pusha
lret
xor
dec
nop
scas
inc
fwait
inc
add
jne
adc
mov
mov
push
mov
push
shrl
jecxz
aam
imul
xchg
and
push
shll
add
rcll
adc
faddl
outsb
gs
push
inc
jae
dec
addr16
adc
sbb
sbb
fistl
mov
dec
mov
fs
aam
sbb
and
cs
push
cltd
icebp
xor
xchg
lret
sbb
xor
cs
push
xchg
adc
sbbb
sbb
roll
mov
inc
jb
jmp
push
lret
cmp
mov
pop
pop
add
mov
fsubs
movsb
sbb
pushf
loope
jo
pop
jnp
or
dec
mov
test
jne
lods
jbe
das
cmp
movsl
inc
lcall
ds
rcr
lds
andb
nop
add
das
cwtl
fsubs
arpl
inc
pop
inc
jae
outsb
in
adc
mov
xor
test
sbb
leave
mov
mov
jne
sbb
lea
or
out
mov
jmp
jmp
mov
fmulp
mov
jnp
loop
les
movsb
mov
pop
jp
mov
cmc
cmpb
and
sbb
and
push
add
cmp
in
jge
test
int
fwait
xor
cmc
arpl
insl
mov
fidivrl
call
bound
and
mov
imul
mov
inc
inc
inc
std
adcl
inc
xor
xchg
cmp
pop
movsl
jecxz
movsl
iret
fwait
jnp
push
adc
push
add
xchg
in
push
push
fists
ja
push
popf
mov
loope
push
js
xor
mov
clc
inc
fcoms
and
adc
test
add
call
iret
pop
xchg
mov
sub
out
xor
ror
imul
inc
mov
xchg
pop
loop
jns
clc
dec
mov
sbb
cmp
jnp
mov
loop
inc
sbb
ds
inc
xchg
push
enter
call
sbb
push
sbb
and
mov
aad
leave
stc
in
push
shl
mov
lods
into
mov
lcall
std
lods
fistpll
xorl
inc
sub
and
subb
mov
jnp
mov
push
outsb
cmp
pusha
or
mov
call
ljmp
sub
inc
lods
imul
sbb
aaa
or
push
bound
std
adc
cmp
mov
or
scas
jnp
repz
sti
es
cmc
sbb
repnz
iret
xor
in
sub
hlt
inc
mov
push
mov
jmp
adc
mov
in
faddp
loop
mov
push
mov
xchg
mov
or
test
xlat
inc
in
jbe
cs
negl
mov
add
mov
aad
pop
mov
mov
mov
ficompl
stc
fdivs
jge
cmp
aad
cltd
stos
and
lahf
adc
or
sbb
dec
fcompl
xchg
jge
mov
cmp
notb
push
cmp
xor
aam
addb
cs
push
fs
repnz
xor
mov
cwtl
loopne
ret
sbb
fistpll
mov
je
cmp
lods
jns
mov
xor
pop
adc
mov
push
sbb
pop
push
sub
lock
xchg
cmpl
mov
xchg
insl
xchg
addr16
add
and
loope
ljmp
loope
rclb
xor
gs
ret
notl
shrl
sub
jb
sub
test
dec
sbb
lds
es
push
xchg
icebp
xor
cli
and
sbb
jp
pop
lods
sub
fcmovne
int
popa
adc
aaa
out
adc
cmp
popf
shlb
rclb
icebp
pop
out
loopne
xor
inc
mov
dec
jg
aam
inc
scas
adc
xlat
or
sub
sbb
imull
test
cmpsb
mov
leave
notb
mov
movsb
adc
int3
jg
and
sbb
test
nop
adc
push
xor
push
idivb
dec
xor
dec
xchg
inc
xchg
pop
or
int
or
and
mov
mov
stos
fs
adc
push
jmp
incl
lret
inc
ss
add
inc
mov
adc
xchg
pop
sbb
imul
xchg
or
mov
pusha
cs
push
or
nop
enter
xchg
sbb
push
pop
xchg
mov
cmc
je
cmpsb
cmp
pop
mov
inc
aad
mov
ffree
aas
pop
in
jo
in
xchg
sbb
push
lcall
pop
mov
jp
adc
add
mov
xchg
clc
cwtl
mov
rorl
mov
xchg
es
mov
insl
push
and
mov
dec
inc
in
dec
cmp
cmp
push
push
iret
dec
mov
pop
dec
mov
repz
in
sbb
or
pusha
in
jp
test
xchg
sbb
cmpsl
cmp
mov
aad
loopne
insl
dec
mov
pop
pop
inc
mov
daa
lock
aam
arpl
dec
or
cmp
add
pop
dec
mov
xlat
push
daa
lret
test
popa
jg
pop
adc
cld
cmpsb
mov
inc
ja
mov
call
repz
pop
sbb
mov
test
pop
insl
or
xor
pop
or
jl
sbb
push
add
or
pop
movsl
xor
repz
mov
pop
frstor
int3
xchg
mov
mov
daa
push
add
jmp
sub
fs
xor
arpl
les
pusha
cld
aaa
inc
jge
inc
dec
jg
adc
imul
push
add
mov
fs
cmp
addr16
adc
test
jo
lock
loop
mov
ror
sti
mov
jb
daa
or
push
sbb
sbb
imul
sbb
jg
rolb
mov
push
scas
or
push
mov
xor
arpl
cld
mov
mov
sti
sti
call
inc
mov
push
add
dec
out
ret
or
lock
jae
mov
jo
aaa
mov
repnz
cmp
out
push
ret
mov
notb
inc
xchg
cltd
sbb
fidivl
fisubrs
cmc
fistpl
js
cmp
test
push
int3
insl
dec
decl
jns
test
es
lock
jne,pt
stos
inc
in
push
mov
mov
add
mov
faddl
sub
xchg
clc
adc
jl
stc
shr
xchg
dec
push
xchg
sti
or
push
sub
in
es
jg
hlt
pop
mov
mov
into
push
mov
mov
lds
mov
inc
loope
outsb
sub
inc
ret
sub
push
stc
pop
sti
jbe
cli
cs
jg
push
mov
insb
bound
orb
cmc
fnstcw
cmp
xchg
loop
inc
and
out
leave
and
xor
pop
and
por
inc
jae
outsl
enter
add
cmpl
inc
fsub
pop
rolb
push
dec
cmpsl
xchg
fs
mov
push
fwait
pop
in
cli
lods
roll
or
adc
jo
es
aad
call
mov
test
sahf
sbb
push
mov
xchg
xchg
popf
inc
push
rorb
jo
mov
popf
notl
xchg
jae
test
xor
shrd
into
out
cli
sahf
in
mov
adc
xchg
or
mov
rorl
jg
xlat
call
mov
pop
jo
loop
mov
push
andl
and
mov
stos
hlt
xchg
test
out
mov
les
mov
rcrb
test
out
mov
fs
xchg
mov
and
gs
ds
inc
jo
sbb
mov
inc
lcall
jl
dec
pop
mov
adc
adc
lcall
mov
pop
mov
or
divl
add
mov
mov
dec
repnz
sbb
psubsb
and
mov
fwait
jecxz
cmp
shl
sbb
aad
hlt
xchg
shl
popf
push
imul
inc
and
sbbl
cmpsb
pop
pop
and
loop
test
les
and
out
cvtps2pd
xor
dec
hlt
cmp
fbld
xchg
xlat
or
pop
adc
pop
popa
adc
jnp
lret
jns
ss
stos
mov
mov
pop
notl
or
xchg
xor
ljmp
inc
shrb
sbb
ss
nop
loop
arpl
imul
rcrb
push
xchg
jns
xchg
and
mov
out
xchg
dec
cmpsl
mov
mov
cli
adc
pop
in
adc
dec
and
adc
into
loope
adc
xchg
dec
mov
mov
shll
ljmp
add
inc
or
inc
testl
lds
ss
xor
xchg
xor
mov
cmpl
jno
pop
cmp
pop
hlt
pop
cmp
loopne
xchg
dec
dec
jecxz
lret
repnz
dec
and
jmp
je
decl
push
jl
outsl
xorb
pop
mov
jg
pop
mov
sub
call
jbe
dec
dec
cmpsl
or
in
imul
lds
lds
mov
or
mov
jl
lcall
fwait
in
imul
mov
test
sub
repz
shl
insl
adc
jg
aam
xchg
out
mov
pop
mov
loop
daa
mov
mov
lods
mov
hlt
and
pop
xchg
dec
push
das
in
ss
push
mov
mov
call
loope
jnp
ficomps
pop
xchg
jecxz
mov
bound
or
test
gs
aas
mov
into
addr16
xorb
inc
mov
add
sbb
sahf
sub
push
jle
insb
or
cmpsl
jno
sti
fistpl
daa
out
dec
push
dec
mov
add
stc
xor
out
fsubs
enter
and
xchg
sahf
inc
lds
xchg
xor
adc
mov
jne
aaa
fldt
outsb
mov
dec
aad
fistpl
data16
xlat
mov
mov
dec
push
add
ss
jae
sub
cmp
test
in
dec
cmp
rclb
icebp
mov
or
ss
sub
jne
insl
shl
incb
jb
mov
insl
loop
mov
cld
addb
inc
inc
mov
push
jnp
je
xchg
xor
lahf
gs
pop
mov
cmp
add
xchg
fists
mov
xor
jb
cltd
jbe
popa
lock
xor
mov
dec
mov
fcmovnu
push
call
fcmovb
push
lahf
cld
xchg
push
sbb
xchg
fisubs
daa
dec
bound
mov
cmp
call
in
sub
mov
mov
mov
cmp
cmc
mov
arpl
ljmp
mov
scas
out
faddl
mov
cmp
rep
div
enter
sub
push
cltd
sub
dec
lret
jnp
adcb
mov
loopne
mov
rol
add
fnstsw
pop
mov
mov
ja
cmc
jns
dec
out
mov
mov
xor
scas
cmpsl
sbb
stos
xchg
inc
jle
lahf
sub
inc
xchg
orl
test
ret
repz
inc
push
sbb
mov
rorb
mov
pop
bound
int
jne
add
sub
dec
ds
xchg
je
or
push
cmc
scas
cmp
nop
or
inc
sub
mov
mov
pushf
inc
fists
mov
ja
xchg
out
or
mov
xchg
pop
xchg
mov
mov
repz
test
ds
iret
rolb
test
stos
dec
mov
sub
mov
repnz
dec
and
or
pop
roll
mov
xchg
xor
mov
sbb
push
sti
jnp
mov
xor
mov
pop
lea
sbb
dec
shr
sub
out
cld
sbbl
pop
cwtl
lret
add
loopne
sbb
scas
popf
mov
mov
fiaddl
popa
inc
mov
jno
pusha
test
inc
jno
scas
cmp
pop
lret
push
ret
push
ret
push
pop
les
inc
lea
push
enter
faddl
dec
mov
inc
out
loope
shrb
ret
ss
mov
jge
jmp
push
cmp
cmpsb
or
sti
xchg
xchg
cmpsb
jno
leave
imul
pop
mov
cmp
rcll
xor
jge
clc
les
inc
popa
clc
fcoms
cmc
dec
or
ljmp
jo
cs
insb
dec
mov
call
add
push
mov
push
sub
fs
out
pop
add
scas
cmp
ljmpw
stc
stc
out
cmp
inc
int3
and
push
sbb
je
fistl
lret
fisubrl
popl
jecxz
mov
out
lock
push
sbb
xlat
leave
pop
int
out
outsb
mov
pop
xor
aam
cmp
cmp
cwtl
cli
xchg
sub
pop
ja
stc
and
outsl
pop
fsubrl
lods
xchg
mov
jg
in
bound
fildll
xchg
fistpll
adc
pop
lcall
std
mov
mov
mov
scas
movsl
test
mov
pushf
push
sbb
daa
dec
cld
jge
enter
stc
pop
sub
xchg
shrl
daa
lods
or
aad
xor
aaa
cld
push
xchg
call
rorl
cmp
xor
fs
jl
enter
mov
stos
fsts
adc
or
int3
hlt
jl
adc
ret
jle
cltd
outsb
rolb
add
or
aas
lea
dec
jge
dec
push
int
in
lcall
aas
in
adc
cmpsb
pop
mov
adc
std
cld
rol
cmp
push
mov
imul
cld
cli
mov
fidivrl
pop
cmp
mov
and
sahf
aaa
mov
inc
jbe
or
or
jl
decl
cmpsl
fwait
ror
into
jmp
mov
inc
xchg
sbb
mov
sbb
outsl
dec
jns
rolb
out
dec
inc
loopne
xchg
pop
jnp
mov
fildl
jle
or
stos
cmpsb
pop
adc
jne
or
or
ss
or
pop
daa
fs
jns
lret
or
ret
insl
xor
lock
sub
mov
add
xor
dec
dec
mov
in
ds
xor
adc
or
int
mov
repz
jmp
push
dec
mov
popa
fwait
shlb
testl
ljmp
or
jp
push
outsb
sub
mov
js
mov
push
xor
jnp
xchg
jne
dec
ss
xchg
push
sahf
cmp
sarl
mov
shll
out
daa
scas
stos
movsb
xchg
or
popa
and
and
add
xlat
dec
idiv
or
push
cmp
mov
mov
fldcw
mov
mov
jle
subb
cmp
mov
fisttpl
andl
cmpsb
rcrl
mov
dec
push
outsl
int
data16
sarl
sub
enter
sub
lea
test
popf
jg
push
in
inc
cmp
inc
icebp
pop
aam
pop
daa
xchg
fsubs
cwtl
shll
pusha
xchg
bound
cmpl
subl
push
fldenv
scas
sbb
aam
add
cmp
hlt
and
inc
lahf
out
nop
cmp
sahf
out
xor
or
push
idivb
pop
or
mov
stc
out
mov
outsb
xchg
cwtl
and
pop
jo
aad
pop
add
enter
pop
mov
jg
scas
add
add
mov
or
mov
ret
rcll
dec
xchg
fsubrs
xchg
push
fstpl
flds
out
sti
pop
jecxz
sub
sub
inc
pop
je
mov
jp
test
fucomp
and
shl
xchg
push
mov
cmp
bound
jl
sub
push
xchg
popf
push
sub
inc
lods
shlb
loopne
orl
pop
lcall
xor
scas
and
dec
pop
je
loope
fwait
lret
mov
aaa
pop
adc
sbb
push
fs
mov
pushf
jb
loop
aad
test
dec
pop
push
mov
lods
or
or
cmpsl
and
divps
pop
pop
scas
and
sub
and
mov
ljmp
pop
fcomp
pop
lahf
stos
pop
dec
dec
ja
ss
out
lahf
mov
mov
push
add
and
fdivrl
sbb
push
arpl
leave
pop
dec
sub
filds
cmpsl
ja
jl,pt
and
pushf
test
ljmp
or
ret
jno
into
and
mov
movsb
inc
dec
adc
stos
pop
add
xchg
sub
out
inc
sbbb
mov
outsb
pop
pushf
mul
inc
iret
add
mov
sbb
cmp
cmp
out
call
lea
movsb
xor
jg
icebp
lret
rolb
repz
push
cmp
and
pop
sahf
sub
xchg
xor
ljmp
add
bound
inc
sub
icebp
out
and
loop
mov
dec
mov
insl
xchg
jp
std
and
jo
loope
push
add
sbb
add
sbb
xor
mov
mov
jl
jo
cmp
lret
inc
mov
xorb
repnz
xlat
xor
adc
or
mov
rol
mov
inc
jnp
leave
pop
les
inc
adc
or
or
push
cmp
popa
dec
jno
dec
mov
loop
jge
push
sbb
shl
sub
out
xchg
lret
pushf
pop
fidivs
inc
lea
xchg
jbe,pn
push
mov
int3
mov
xchg
mov
cld
stc
sub
cs
push
sti
or
adc
sub
pop
pusha
into
xchg
js
addl
adc
out
mov
arpl
in
int3
fcmove
dec
jbe
mov
mov
clc
das
pop
sahf
or
xchg
jbe
pushf
stc
jo
cmpsb
fldenv
cmp
das
int3
in
jg
push
push
sbb
mov
pop
push
adc
or
fcompl
cmpl
fnsave
fwait
insl
mull
mov
pop
jo
inc
fildl
mov
xchg
fs
xor
dec
cmp
xchg
cmpl
mov
sub
sub
push
mov
add
sub
mov
and
sub
cmpb
pushf
lds
push
shll
cmpsb
cmp
stos
add
adc
dec
push
or
sbb
pop
sbb
xchg
repz
lock
or
fcmove
xor
xor
mov
movsl
mov
adc
xchg
notb
shl
lahf
lods
add
icebp
dec
pop
push
jnp
sbb
jb
clc
in
add
xor
int
das
xchg
movl
xchg
iret
std
xor
out
mov
fisubs
mov
add
or
sbb
xchg
lret
out
and
cmp
movsl
push
add
ret
aad
mov
dec
or
es
jecxz
push
adc
sub
cmpsl
fstps
push
pop
insb
dec
out
repnz
divl
mov
jg
dec
push
sti
lret
dec
add
add
sbb
js
dec
cmpsl
cmp
inc
sub
pop
push
call
mov
jne
mov
fldl
sub
xor
call
pushf
jne
hlt
jmp
or
fdivrl
enter
inc
icebp
dec
insl
push
daa
ds
out
xor
pop
movsl
scas
push
fcomi
mov
ret
sub
ljmp
fisttpll
popf
push
in
or
cmp
lock
mov
test
cli
aam
mov
jae
and
mov
jmp
mov
jp
push
cs
xchg
lret
in
xor
scas
mov
sarb
xor
icebp
push
sub
sub
jnp
inc
pop
or
mov
push
inc
xor
xchg
mov
pop
outsb
xchg
test
test
dec
cmp
test
imul
hlt
cltd
mov
aad
mov
in
xor
cmp
sbb
dec
and
ljmp
pop
mov
stos
inc
in
popa
daa
ror
add
lods
leave
xor
mov
stos
in
hlt
mov
add
mov
push
xor
mov
lock
or
jae
mov
leave
xchg
lcall
ss
cmpsl
jecxz
inc
jne,pn
outsb
xor
enter
lods
adc
insl
sbb
fcmovb
jp
pop
das
dec
gs
adc
xor
sbb
out
push
inc
push
add
jbe
ss
jb
add
pop
or
daa
filds
dec
ret
lea
je
cli
popf
lds
mov
das
cmp
sub
add
jle
push
loopne
sbb
pop
mov
sub
negl
into
xor
dec
mov
test
push
jle
mov
push
jo
jno
or
outsb
add
pop
add
jo
mov
bound
lock
and
outsl
js
mov
outsb
mov
xor
lods
inc
xchg
or
loop
stos
xor
cmp
jge
pop
xor
aaa
std
or
testl
adc
sub
xchg
xchg
sti
xor
push
jmp
push
lret
jae
stc
insb
fiaddl
adc
dec
cmp
mov
cli
rol
in
mov
adc
test
jp
pop
mov
int3
ljmp
inc
in
jle
mov
sti
pop
cmp
pop
inc
inc
popa
movsl
imul
movsl
das
aaa
pop
pop
loop
cmp
mov
ja
in
mov
mov
push
jmp
out
jae
enter
movsb
les
mov
jmp
fadd
mov
out
xchg
jecxz
cmp
stos
cs
xor
adc
repz
imulb
sub
cmp
push
xor
mov
push
mov
mov
push
fsts
clc
cld
adc
daa
jmp
pop
dec
gs
and
in
out
and
and
xchg
movsw
and
mov
test
cmp
in
iret
and
aad
imul
cmpsl
subl
jbe
dec
sub
or
into
in
push
fsubrs
pop
push
loop
loope
insb
inc
ret
mov
mov
repz
cmp
pop
lock
sub
sbb
xchg
int
iret
inc
mov
xchg
sbb
ss
mulb
test
jl
outsl
scas
pushf
insb
sbb
push
test
rcrl
ficomps
inc
cmp
inc
pop
imul
lcall
rol
js
arpl
cli
pop
mov
sarb
sbb
sub
mov
fsubs
lock
test
stos
adc
jo
sub
cltd
and
xchg
dec
pop
adc
mov
inc
cs
loop
popf
cmp
sub
inc
dec
out
dec
out
dec
pop
clc
aad
leave
in
aad
pop
or
loopne
nop
mov
enter
push
jo
inc
add
xchg
mov
test
mov
mov
add
fildll
dec
mov
sub
push
pop
xor
xchg
adc
sbb
sbb
adc
xorb
cmp
ror
push
jb
dec
dec
movsb
ja
aam
ret
incb
sahf
in
outsb
inc
xor
dec
fdivs
hlt
stos
aas
aaa
mov
loopne
gs
sub
jmp
fwait
sti
push
push
xchg
fsts
in
mov
lds
push
pop
inc
loopne
push
add
jo
movsl
xor
adc
jno
adc
cmpsb
inc
lods
or
arpl
jae
aaa
pop
mov
in
jnp
adc
lret
out
lahf
shlb
dec
mov
hlt
add
or
cli
fcmovnbe
push
pop
mov
iret
adc
bound
outsb
sub
fs
inc
push
bnd
dec
popa
stc
pop
adc
dec
or
cmpsb
in
arpl
xor
js
popa
mov
jne
outsb
inc
mov
bnd
mov
xlat
insb
push
and
and
mov
mov
push
mov
pusha
lds
adc
add
push
inc
push
mov
mov
aas
push
jge
push
pop
aas
sub
xor
fcomps
or
inc
loope
or
dec
jecxz
dec
xchg
jl
jno
sbb
out
insb
fscale
js
cmp
test
rcrl
dec
sbb
test
in
xchg
movsb
stos
inc
push
mov
loope
xchg
xor
addr16
mov
lea
rcrb
loope
add
aas
xor
pushf
pop
mov
adc
dec
stos
xchg
pop
ret
pop
fidivs
jmp
in
mov
lcall
push
ljmp
je
push
mov
mov
adc
mov
jg
cmpsl
xchg
sti
inc
dec
addr16
inc
std
xchg
in
sub
xchg
pop
push
push
push
push
movsb
cltd
mov
pop
imulb
xchg
lds
insl
sbb
aas
ja
in
and
jle
mov
push
cmp
and
out
lea
fiaddl
jno
addl
sbb
lret
test
lcall
pushf
pop
std
fdivrp
inc
movl
test
mov
cmpsb
adc
pop
cmpsl
jle
fnstsw
adc
pop
call
xchg
roll
stos
cmpsl
dec
mov
mov
push
dec
pop
inc
adc
pop
scas
push
ficoms
je
push
jno
pop
dec
or
mov
outsl
into
daa
dec
int
popf
pop
xchg
mov
rorl
scas
stc
fstpt
pop
xorb
mov
pop
test
pop
sub
incl
lcall
mov
xchg
iret
dec
je
stc
adc
jns
fsubrl
mov
jae
mov
mov
xor
out
shrl
pop
inc
ds
pop
fcomps
inc
outsb
aaa
in
insl
and
daa
mov
mov
cmpsb
rorl
lea
push
in
loopne
sbb
xor
sub
out
cmpsl
dec
cmp
lea
repnz
in
push
shl
stc
fdivl
or
adc
andb
push
shl
mov
sbb
out
not
jp
inc
fistpll
test
sub
data16
pop
cmp
cmp
jns
inc
cmp
push
cmc
push
and
jno
aas
pop
mov
into
mov
adc
stos
es
outsb
das
and
outsb
sti
stos
popf
stos
je
pop
sbb
or
cmp
repz
push
xchg
sub
mov
push
dec
add
mov
jl
scas
imul
mov
add
rep
lds
fmul
fists
adc
fldenv
push
xor
out
loop
mov
add
lss
jg
pop
mov
test
or
enter
sub
mov
jbe
dec
sub
adc
mov
mov
imul
roll
xor
jp
or
sbb
bound
xor
cmc
rorl
movsb
pushf
lods
inc
movsl
into
out
outsb
push
jp
dec
cwtl
push
shl
mov
out
insb
and
sbb
jl
add
mov
xchg
dec
dec
mov
outsb
js
sub
and
cmpsb
ret
clc
lea
mov
fisttpl
pop
jl
pop
dec
inc
push
das
xchg
lahf
sbb
push
imul
push
dec
xor
and
mov
pop
adc
adc
jmp
repz
fdivs
xor
mov
popf
and
dec
imul
movsb
cmpsl
xor
jno
or
arpl
in
sbbl
sbb
gs
movsb
mov
subb
xchg
sbb
xor
rcrb
repz
cltd
subb
jns
pop
push
cmp
fcoml
call
out
pushf
and
dec
ffree
push
dec
frstor
jl
dec
jb
and
xor
fisttpl
fcmovu
fpatan
pop
int
mov
xor
cmc
movsb
fwait
xchg
pop
mov
sub
repnz
add
mov
fsubrl
jne
mov
les
cmpsl
mov
push
stos
and
arpl
jno
jg
negl
push
lcall
mov
enter
push
pop
push
call
repz
xor
pop
mov
mov
jnp
scas
or
into
out
or
sbb
dec
in
jl
test
pushf
or
mov
out
sbb
or
clc
call
insl
sbb
test
ds
mov
inc
js
mov
sbb
into
imul
aas
shlb
imul
jle
cmpb
push
jo
push
stos
ret
jne
add
out
faddl
dec
out
adc
sub
aad
aad
jno
aaa
or
int3
cltd
sbb
push
fwait
in
fcoms
cwtl
rcl
stos
repnz
cmp
dec
addl
adc
pop
leave
mov
mov
scas
and
repnz
lods
xor
mov
jge
adc
sub
scas
xchg
pop
and
cmpsl
std
xchg
leave
stos
pusha
shl
mov
lcall
pop
jge
dec
mov
dec
push
push
ja
decl
pop
pop
daa
or
loopne
aas
ljmp
mov
lds
mov
sub
sbbl
push
adc
pop
pand
jecxz
lret
call
or
sbb
inc
hlt
inc
pop
lea
push
sub
mov
xor
movsl
scas
sti
arpl
cmp
sbb
out
and
rclb
mov
cmpsb
ss
jbe
and
mov
fisubrl
xorb
push
cmp
add
aas
test
je
and
push
mov
insb
push
je
inc
or
rcll
cmp
popf
mov
xchg
sti
arpl
sbb
dec
push
lret
stos
jnp
mov
cmp
cltd
mov
push
jmp
int3
xor
out
pop
cmpsb
insb
sbb
xchg
pop
cli
repnz
das
lahf
jle
inc
mov
add
cmpl
or
ss
xor
adc
and
orl
addr16
fdiv
popf
mov
repz
dec
or
sbb
push
sbb
mov
call
popf
dec
and
xchg
mov
cmpsl
test
adc
mov
test
jo
gs
shrb
mov
mov
insb
sub
movsl
dec
aad
push
push
out
jmp
sub
cmpsb
sbb
xor
push
xor
sub
in
mov
adc
fsubp
adc
inc
sub
push
dec
xchg
or
cs
push
packuswb
adc
sub
je
mov
lods
ss
lods
xor
cmp
sarl
pushf
mov
push
in
cwtl
call
hlt
mov
sbb
aam
jb
decl
imul
mov
das
pop
cs
fsubs
pop
cmc
fiaddl
add
mov
jne
popa
add
mov
mov
cwtl
mov
and
jmp
test
cltd
cmc
mov
jae
mov
scas
sbb
mov
arpl
xchg
cmp
xchg
jecxz
ds
and
inc
clc
sub
repnz
out
push
das
loope
insl
pop
in
lds
sub
add
mov
push
popa
xchg
stos
dec
inc
xchg
adc
sbb
aam
into
imull
jg
sub
test
shr
loopne
in
sub
lds
lcall
fdiv
xchg
and
cmp
push
sahf
push
loopne
fcoml
and
mov
jnp
sarb
sbb
push
int
dec
push
repnz
xchg
cmp
daa
cltd
decl
mov
ds
pop
adc
mov
and
and
insl
dec
stos
mov
cld
dec
add
inc
in
and
aam
orl
cli
bound
xchg
aas
sahf
inc
cld
push
mov
js
jns
mov
xor
orl
mov
cmp
lcall
sub
dec
xchg
repz
inc
inc
out
mov
jns
fbstp
xor
xchg
or
mov
dec
mov
cltd
imul
pop
enter
int
movsl
jge
push
das
imul
scas
ret
adc
mov
jg
push
dec
stc
rol
pushf
rorl
cltd
mov
loopne
mov
jmp
test
mov
enter
cmp
aam
add
ds
pusha
xchg
into
jno
shr
ror
inc
cmp
push
adc
sub
adc
mull
pop
push
sbb
mov
xchg
pop
cmp
inc
decb
ret
mov
ja
ds
mov
xchg
push
jecxz
movsl
shrd
add
xchg
pop
sti
pop
aaa
out
gs
mov
inc
xor
mov
data16
sbb
mov
mov
gs
bound
out
sub
pop
imul
insb
pop
xchg
xor
mov
add
les
std
arpl
push
sarb
pop
mov
mov
cmc
std
popa
je
and
pop
cwtl
out
js
js
pop
cmp
cwtl
mov
jae
imul
das
mov
adc
into
and
jnp
jbe
mov
leave
inc
jmp
jge
pop
sarl
and
cmp
xchg
push
pop
mov
lods
add
mov
push
inc
inc
dec
pop
out
adc
cmc
jmp
push
pushf
dec
jno
aam
mov
addr16
add
jl
popa
dec
cld
jo
cmp
sbb
cmp
fistpll
add
pop
lods
cmp
stos
or
adc
addr16
sbb
mov
sub
add
xor
ja
lcall
inc
lods
lods
hlt
mov
mov
cld
jg
mov
sbb
dec
imul
int
pusha
inc
in
lea
push
adc
int3
adc
jns
pop
jp
sub
dec
inc
mov
sysenter
pop
sub
dec
lret
jp
jl
pop
sub
mov
cld
add
push
jnp
push
adc
sbb
fcompl
add
mov
ret
cmp
push
and
cmpsb
rcrb
xchg
rorl
add
jb
dec
pop
and
jl
jl
adc
and
push
sbb
pop
mov
lods
add
popf
push
pop
xor
popa
dec
aam
imul
ret
xor
mov
sbb
mov
jle
pop
pushf
dec
call
ret
dec
jecxz
dec
or
aad
iret
pop
jecxz
sbb
inc
mov
jp
loope
jne
jle
lret
movsl
lea
outsl
clc
cwtl
scas
daa
shl
and
je
cld
adc
and
loope
inc
mov
lcall
xchg
arpl
dec
dec
and
sbb
popf
scas
push
pop
sete
dec
pop
pusha
jnp
shlb
insl
sahf
add
mov
mov
fisttps
out
xor
xor
sbb
aad
insl
xchg
das
movsl
push
cmpsl
gs
pusha
dec
test
test
ljmp
aad
dec
pop
pushf
fidivl
insb
icebp
mov
shlb
or
xor
outsl
pop
and
aas
hlt
int3
and
lds
test
and
mov
xor
iret
mov
lea
inc
out
sub
test
decb
mov
fldenv
dec
imul
jae
dec
jb
mov
and
sbb
sbb
scas
mov
push
cltd
loopne
stc
shlb
sub
andb
ret
shr
sub
sbb
cmp
xchg
pop
adc
icebp
push
movsl
adc
addr16
mov
sub
sbb
pop
jae
push
pop
mov
fidivs
nop
cmc
shl
xor
xchg
adc
fistpl
dec
stos
fisubrl
aam
js
inc
mull
out
push
outsl
cld
nop
jmp
lahf
sub
iret
in
dec
inc
stos
adc
out
adc
movsb
fiaddl
fnstcw
outsl
mov
leave
push
adc
xor
bnd
mov
mov
adc
xchg
jp
sbb
fisubrs
imul
gs
test
dec
mov
test
stos
ret
sahf
or
xchg
dec
mov
jl
ss
dec
pop
gs
or
test
mov
mov
add
inc
xchg
leave
in
int3
loopne
inc
cmp
ret
and
rolb
jl
fisttpll
sahf
mull
dec
pop
fst
dec
popf
jmp
sahf
imul
out
leave
leave
inc
dec
dec
adc
lret
or
arpl
ss
inc
sbb
adc
iret
add
test
out
jecxz
or
inc
xchg
mov
out
daa
dec
adc
pop
mov
cmp
es
enter
pop
dec
inc
inc
jmp
jp
std
loope,pt
cmp
sti
adc
lahf
adc
push
aas
pop
jae
mov
int
jmp
push
daa
out
sub
mov
dec
xchg
push
lods
dec
sbb
outsl
or
in
fiadds
int
mov
sub
sbb
cwtl
loopne
addr16
jp
sub
movsl
in
pushf
dec
lcall
jmp
xor
dec
mov
fucomip
movsb
sbb
xlat
mov
test
cmpsb
scas
ror
mov
jnp
fisubs
and
dec
adc
jns
and
mov
outsb
sub
xchg
push
inc
cmp
cmpsl
add
out
add
hlt
out
icebp
sub
rcrb
mov
stos
aaa
dec
shll
push
hlt
cmp
out
ss
mov
lahf
shrl
sbb
dec
push
out
xchg
in
xorb
add
jb
loope
repz
jg
adc
loope
nop
adc
push
pop
add
mov
leave
push
xor
inc
or
out
cli
stc
lret
sub
das
adc
xchg
and
aaa
mov
mov
int3
insl
fdivrs
fimull
dec
lret
das
mov
aam
jae
dec
dec
sub
jne
out
xchg
xchg
sahf
sbb
pop
leave
aad
rclb
jnp
sbb
jge
pop
adc
or
outsb
pop
hlt
add
mov
ret
xorl
jb
enter
imul
jg
jle
shll
mov
fcompl
ja
mov
xlat
iret
lret
push
in
sub
jb
fimuls
sbb
mov
jno
daa
jecxz
nop
and
xor
add
sbb
iret
cmpsb
push
pop
inc
adc
push
jg
pop
mov
and
ja
outsb
sub
jne
xor
bnd
stc
imul
lods
lret
lock
mov
xlat
jl
jmp
and
lock
out
xchg
mov
dec
divb
ljmp
pop
into
inc
xor
ljmp
data16
sbb
mov
cmpsl
repnz
sub
xor
xchg
sub
iret
and
cld
sbb
sbb
jnp
xchg
mov
inc
jecxz
or
jb
fwait
mov
pop
pop
xchg
mov
imul
pop
cmp
and
hlt
ljmp
aaa
and
xor
mov
mov
jl
in
lds
add
sbbl
ret
jge
pop
stos
jecxz
test
testl
push
les
push
loope
jne
sub
pusha
cld
mov
orb
into
cld
jbe
mov
js
add
add
push
popa
in
dec
mov
push
xor
bound
call
in
andl
nop
push
mov
adc
outsl
push
cs
cmp
mov
out
sbb
sub
inc
or
push
es
pop
les
in
dec
xchg
jp
inc
xchg
insl
loope
dec
xchg
cwtl
cli
pop
test
pop
ljmp
ljmp
into
mov
sbb
dec
xchg
adc
or
iret
sarl
mov
ret
pop
jo
std
repnz
out
jge
pop
sti
outsl
mov
rcrb
and
negl
loopne
je
shlb
cltd
nop
mov
ror
cmpsb
js
mov
jo
xor
mov
adcl
xlat
lcall
jae
adc
fistps
in
shrl
bound
stos
pop
je
jmp
mov
js
movsb
cmpsl
repnz
push
xchg
fwait
leave
inc
pop
cltd
jle
jns
sub
int3
into
arpl
jmp
mov
jo
iret
lcall
pop
xchg
pop
push
int
push
xchg
sti
push
rcrl
imul
outsl
cmc
sbb
mov
icebp
pop
inc
loop
xor
pusha
mov
insb
push
mov
scas
sbb
push
mov
daa
inc
cmp
add
popl
lret
das
lods
fmuls
mov
add
pop
cmpsl
in
cmp
and
sbb
and
lods
andl
cmpsl
cmp
jl
dec
add
add
xchg
fidivs
lcall
mov
xor
shll
scas
push
push
jo
pop
popa
mov
aad
aas
mov
iret
pop
jg
cmp
cmp
repz
push
clc
add
in
lahf
movsl
in
xor
icebp
in
repz
fucomip
xor
inc
es
and
mov
mov
jl
scas
loopne
out
or
sbb
ficomps
in
ror
fistpl
sub
mov
call
loopne
movsl
jns
pop
cmp
cmpsb
ret
jmp
outsl
enter
xchg
sbb
mov
sub
mov
cmc
cmp
push
pop
test
lcall
mov
int3
add
bound
lods
iret
insl
loopne
cltd
add
cmp
inc
sub
or
jg
ret
xlat
andl
mov
push
bound
int
mov
mov
in
jp
rcl
mov
aas
mov
xchg
loopne
aam
add
dec
xorl
jnp
in
in
mov
push
and
or
imul
and
pop
loop
mov
aas
incb
adcb
push
cmp
pop
ss
pop
jb
or
andl
jge
or
dec
adc
xchg
aad
cmp
sub
pop
test
jae
push
and
mov
hlt
or
mov
leave
aaa
rorb
ret
inc
adc
stc
icebp
outsl
push
mov
into
cmpsb
rep
sub
lcall
fs
out
stos
or
mov
sub
loope
adc
fwait
mov
int
mov
sub
out
sub
xchg
idivl
ret
lods
xchg
push
ss
popf
add
les
mov
push
iret
push
cmp
xor
in
ss
or
jns
xchg
pop
dec
pop
cmp
ja
lods
add
lock
movsl
xchg
lahf
sub
mov
cmp
or
or
fildl
pop
es
out
outsl
jno
push
xor
aaa
scas
or
sub
loop
in
mov
jae
inc
push
cld
fistl
mov
jl
cmp
mov
rorb
daa
pop
inc
sahf
sbb
fstps
push
lods
inc
jne
push
repnz
stos
movsl
clc
jne
jo
jne
fwait
mov
xor
or
or
mov
xchg
es
insl
ret
push
arpl
repnz
or
loopne
sbb
mov
std
imul
adc
sbb
xchg
sbb
jns
cltd
push
xchg
jge
dec
test
cmpsl
or
and
flds
ss
outsb
imul
mov
adcb
aad
mov
push
mov
mov
and
xchg
cld
inc
das
insl
jo
int3
fwait
clc
dec
in
imul
fisubs
mov
mov
jecxz
push
jle
dec
shrl
outsb
jp
cmp
jmp
inc
adc
js
xor
jle
add
lahf
das
xor
int3
sub
push
jge
movsb
cmpsb
nop
jno
adcb
ljmp
into
daa
mov
cwtl
pop
movsl
xor
push
cli
aaa
push
lahf
cmpsl
mov
push
inc
inc
lock
jle
out
mov
xor
stc
pop
lahf
cmpb
cmp
fcomp
cmpsl
and
repz
bound
loope
add
ja
mov
std
and
imul
xchg
bound
ss
xor
lcall
rorl
js
out
daa
sub
lods
sub
stos
add
aam
or
cld
sbb
notb
mov
mov
ret
jo
or
jg
inc
hlt
in
lret
lret
fadd
mov
lcall
jae
addr16
cltd
jns
je
inc
f2xm1
mov
popa
out
mov
fidivrs
xor
call
dec
add
pop
jnp
xrelease
mov
inc
fisubl
and
pop
add
cmp
adc
enter
pop
fisubl
lea
mov
push
jns
or
js
subb
ret
out
or
int3
pop
nop
or
cli
lret
pop
pop
and
adc
push
jno
dec
mov
inc
mov
outsl
push
dec
dec
lret
sbb
and
jecxz
test
ja
into
rorl
mov
mov
push
push
sti
pop
jb
push
jae
cli
outsb
gs
shrb
pop
ljmp
aam
punpckhbw
cmp
sti
sbb
and
push
xchg
inc
add
loop
into
sub
inc
int
bound
loope
mov
sahf
sub
mov
rorl
jp
rcll
sti
pushf
jle
cmp
and
movb
insl
mov
in
icebp
mov
add
cli
jns
xlat
sbb
mov
xchg
add
add
add
leave
dec
lea
pop
push
jmp
adc
mov
insb
cmp
icebp
mov
ror
fld
iret
clc
lock
aas
xor
xchg
hlt
fdivrs
push
lods
inc
mov
xor
mov
mov
scas
je
sbb
xchg
cmp
pop
lret
fdivrs
out
setns
sbb
out
pop
gs
jb
inc
mov
lret
orl
add
dec
cmpsb
mov
test
inc
aad
outsl
cmpsb
std
cli
cld
inc
and
rorb
push
xchg
add
sbb
mov
in
mov
mov
fmuls
and
xor
jb
inc
dec
aas
sub
jg
mov
lahf
stc
daa
inc
fisubrl
les
fldl
aas
pop
push
or
pop
lock
cmc
fs
insb
outsl
rcrl
and
into
sbb
fs
lods
idiv
dec
pop
clc
ror
mov
adcb
test
fbstp
lret
sbb
je
sub
andl
and
ss
xchg
jmp
mov
icebp
subl
mov
xchg
ret
adc
jecxz
fldcw
xchg
leave
mov
repz
fwait
xor
mov
mov
push
adc
pop
or
cmp
push
xchg
and
outsb
cli
fisubl
fsubrl
push
out
jg
mov
repnz
jp
jle
imul
fildl
data16
sub
fdivrp
arpl
lahf
jno
xchg
inc
jmp
push
sub
mov
inc
ret
pop
notl
int
iret
inc
push
push
pushf
cmp
in
iret
mov
mov
xorl
mov
jno
mov
or
cld
rcrb
lret
shrb
or
neg
jo
enter
pop
xchg
lock
mov
lahf
jb
into
push
adc
sub
outsl
lds
ficoml
jl
lahf
push
popf
arpl
or
sbb
xchg
xlat
mov
imul
pop
imul
xchg
or
es
aam
fs
jmp
inc
cmp
add
into
inc
push
push
bound
xchg
cmpsl
cmpsb
xor
fcomp
cmpsb
popf
popf
mov
fcomp
mov
scas
int
cmp
xor
lret
xor
xor
sarb
les
and
std
add
dec
pop
test
shr
aaa
xchg
mov
push
dec
sbb
int
inc
dec
js
push
lods
and
fucom
push
inc
call
ss
mov
loopne
or
adc
sti
addb
and
or
cmp
out
es
or
cmpsb
les
dec
popf
xchg
sbb
shl
lods
xor
pop
adc
les
add
out
cmc
adc
mov
push
pushf
cmpsb
pop
mov
fadds
jbe
fnsave
xor
lret
mov
jecxz
js
movb
pushf
mov
dec
ret
xor
popf
imul
sub
fwait
lock
insb
mov
das
add
das
popa
in
psrad
jle
mov
adc
icebp
cmpsl
ret
addr16
sbb
bound
mov
pop
iret
ja
push
push
sbb
lcall
stc
xor
inc
and
push
enter
xchg
rcrl
mov
mov
mov
mov
cmpsl
out
mov
jmp
xor
xor
outsl
xchg
in
clc
shrb
and
call
out
shlb
pushf
lret
test
dec
mov
xor
cmp
or
ret
pushf
repz
scas
push
and
aas
lahf
jno
xchg
lods
mov
sub
jbe
cmp
mov
movsl
dec
mov
inc
std
add
jp
or
outsb
imul
scas
inc
sub
jno
adc
inc
mov
sub
mov
lods
push
sub
mov
pop
mov
adc
decl
jns
push
pop
pusha
rorb
push
ficoms
dec
mov
out
sbb
or
mov
sti
mov
repnz
pop
int3
pop
inc
notl
dec
in
sti
dec
scas
or
or
xor
aam
jno
repnz
mov
mov
sub
insb
xor
xor
jmp
outsb
mov
mov
mov
popa
or
dec
aas
cmp
or
daa
cmp
lock
test
dec
adc
push
dec
mov
std
mov
inc
push
cmpsb
and
insl
or
push
push
push
aam
sbb
and
cmp
mov
pop
inc
iret
aad
cmp
jl
xchg
or
cmp
xchg
jge
dec
xchg
cmpsb
cmp
or
xor
out
mov
cmp
sahf
pop
dec
jp
bound
or
mov
insl
les
repz
nop
clc
inc
into
or
fsubrl
pop
push
out
jl
daa
out
mov
imul
dec
xor
jmp
iret
out
jmp
jecxz
adc
ja
rcl
mov
mul
mov
or
cmp
hlt
mov
pop
int3
fadd
mov
inc
es
insl
mov
mov
xchg
lcall
pop
cld
mov
ret
movsb
in
dec
fstpl
test
xchg
int3
push
dec
xorl
sarl
mov
and
add
pop
out
dec
flds
xor
cmpsl
push
movsb
push
js
fdivrp
mov
js
out
imull
sbb
imul
les
iret
inc
add
pop
and
mov
xchg
xor
xchg
fld
xor
addr16
inc
aam
loopne
clc
imul
test
inc
aam
pop
je
mov
stos
mov
lds
cwtl
inc
cmp
test
out
or
das
xor
pop
lcall
bound
dec
pushf
bound
pop
outsl
lret
cmpsb
push
in
leave
pop
mov
addr16
and
add
adc
pop
lret
subb
lret
add
cltd
mov
sub
nop
test
mov
jae
movl
clc
in
data16
loope
and
arpl
or
inc
rcll
mov
outsl
add
jo
sub
or
addl
pop
jns
mov
aam
sbb
xor
ja
lss
je
and
pop
jno
jge
lods
or
lret
aaa
pop
push
adc
xchg
xchg
pop
push
jbe
dec
lret
pusha
pop
mov
je
push
sub
outsb
les
rcrl
adc
and
jnp
inc
mov
hlt
xlat
icebp
add
imul
sub
shrb
imul
fs
gs
mov
mov
jb
outsb
fcom
loopne
add
xlat
sarl
sbbb
inc
fsubrp
adc
pop
fs
push
out
jmp
iret
xchg
loopne
push
push
and
std
cmp
xor
and
out
cltd
fsubrl
jl
jo
lods
jb
mov
bound
je
xchg
mov
loope
je
fcoml
iret
fs
test
fwait
and
loopne
mov
pop
push
imul
sub
or
inc
mov
dec
mov
jns
xor
rcr
js
adcl
imul
jnp
pop
data16
popa
scas
pushl
mov
leave
sbb
adc
mov
dec
dec
mov
repnz
mov
sbb
aad
int
fcmovne
adc
fdivs
jbe
pop
mov
and
lds
je
inc
dec
aad
lret
push
cltd
inc
inc
in
jne
out
pop
and
mov
mov
icebp
sbb
xor
add
lds
leave
stc
xchg
pop
testl
mov
jl
cmc
nop
call
sbb
out
push
cmp
dec
addl
or
rclb
adc
test
test
pop
xchg
or
repz
iret
sub
push
push
sub
xor
mov
xchg
in
not
push
pushf
fcomps
rcl
ja
notl
ret
sub
push
sbb
ror
xchg
pop
push
ret
add
xlat
lahf
test
scas
or
xlat
pop
movsb
or
sti
jmp
pop
mov
jne
pop
js
or
mov
lcall
cli
adc
fadds
pop
add
call
adc
imul
add
push
andl
fcompl
pop
pop
icebp
cmp
sti
imul
mov
lods
stos
out
dec
xchg
das
jno
adc
jbe
add
sub
jge
push
add
repnz
dec
insb
and
add
jge
mov
mov
and
cmp
daa
cmp
dec
sahf
fsts
xchg
jl
xchg
ljmp
jle
les
in
jno
jno
movsb
jg
mov
je
or
inc
mov
jmp
inc
jl
and
loope
hlt
cltd
jb
fwait
loopne
mov
cltd
ds
add
mov
xchg
adc
or
cmpsb
inc
pop
push
mov
fs
test
aaa
push
mov
mov
stos
ret
sub
movsb
imul
faddp
mov
dec
icebp
or
pop
pushf
pop
out
enter
push
adc
xchg
jo
and
mov
xchg
or
lods
pop
xchg
lret
out
mov
in
inc
xlat
xchg
push
pushf
sub
out
pop
insl
into
xchg
xchg
push
test
fiadds
cmc
cmp
adc
mov
push
call
std
leave
xchg
incb
in
enter
pushf
jo
xor
enter
test
mov
rcr
xor
xchg
add
or
loop
sar
roll
imul
sbb
mov
cmp
lods
inc
lret
and
jle
in
imul
shl
sbb
sub
test
ror
push
xchg
cli
cmp
push
xchg
pop
inc
shl
jne
mov
adc
inc
push
or
daa
lea
push
dec
sahf
out
sub
push
leave
sub
stos
popa
out
push
or
sbb
es
ja
aam
mov
loope
push
xor
jecxz
lods
adc
cmp
fistps
aas
out
inc
lods
push
frstor
ds
shl
test
xchg
mov
inc
sub
jl
leave
mov
dec
cwtd
test
push
and
push
jns
adc
sub
mov
sbb
push
xchg
and
adc
push
lcall
mov
sar
in
mov
mov
hlt
into
add
or
out
jbe
mov
sahf
fsubrs
cli
cs
jmp
push
or
add
cmc
aaa
insw
push
push
jg
pop
sbb
aad
aam
js
xchg
cmc
jns
push
ret
out
inc
lcall
test
push
pop
pop
mov
pop
mov
movsl
or
popa
testl
or
sub
and
insb
inc
shl
insb
mov
punpcklwd
push
jbe
lock
xchg
cmp
ds
or
lcall
push
and
and
inc
dec
sbb
jae
push
es
add
filds
outsl
sub
pop
aam
lods
xchg
imull
std
push
push
push
es
jae
xchg
cwtl
jmp
xorb
jnp
in
leave
inc
mov
mov
and
out
test
pop
push
lret
aad
rorl
mov
insl
adc
lahf
rorl
mov
push
adc
test
xchg
ljmp
jns
dec
cmp
or
stc
out
jle
inc
sti
jg
or
pop
dec
push
add
mov
adc
mov
cmp
xor
nop
cmp
lock
stos
mov
inc
mov
jnp
mov
enter
cmp
mov
pop
lods
cs
sahf
enter
pop
dec
pop
lds
or
int
stc
sub
pop
adc
shl
dec
pop
jnp
mov
stos
insb
ret
dec
je
imul
sub
xor
and
mov
insl
xchg
mov
aas
cltd
adc
pop
cs
or
fidivs
ds
mov
sub
jle
das
or
pop
in
mov
into
pop
stos
repz
xchg
mov
test
cmpsb
xor
sahf
icebp
cmp
fadds
pop
push
int
fwait
sbb
push
cmp
and
jmp
mov
sub
scas
arpl
in
insl
dec
mov
jl
jmp
lods
aas
fwait
lock
pushf
dec
outsl
je
mov
inc
fisttpll
scas
jp
in
pusha
pop
push
and
inc
int3
out
repnz
add
stos
lahf
or
cltd
adc
in
xor
arpl
int3
mov
icebp
in
mov
rcl
cmp
mov
add
mov
cs
push
fsts
stos
lea
imul
test
mov
push
enter
fsubrl
adc
cmpsl
movsl
jle
xchg
jecxz
icebp
cmc
add
sub
xchg
mov
mull
adc
cmp
jne
cmpsb
jge
push
dec
lods
sbb
stos
pop
ret
xchg
incb
mov
push
inc
push
cmp
ret
pop
imulb
dec
cltd
or
mov
xchg
iret
push
hlt
pop
notb
dec
jae
mulb
call
mov
rcll
and
inc
sbbb
fs
imul
mov
test
mov
push
ljmp
cmp
les
and
insb
push
push
mov
sti
arpl
pop
adc
push
push
adc
gs
jmp
std
add
mov
sbb
add
mov
push
cmp
scas
cmp
push
loop
lcall
push
daa
and
dec
xchg
rcll
sbb
movsb
jp
mov
fiadds
mov
loopne
add
pop
mov
push
mov
mov
or
sbb
std
pop
outsl
push
mov
stc
je
and
push
cmpsb
aas
mov
mov
cmpsb
sbb
cmp
sbb
clc
push
inc
pop
inc
shrl
xor
loope
fscale
add
cmpsb
int3
jg
push
xchg
push
mov
cmp
push
fstpl
fmuls
inc
out
imulb
in
es
cld
test
pop
jmp
inc
xchg
inc
dec
xor
and
cmp
jne
pop
xchg
cmpsl
imul
xorl
fstpl
fstpl
push
sti
jl
dec
test
outsb
jg
mov
cwtl
add
bound
ljmp
stos
cmp
add
sahf
call
sar
fidivrl
xor
popa
adc
cmpl
mov
xchg
imul
inc
stos
mov
inc
mov
repnz
arpl
aam
sbb
sbb
stc
pop
jecxz
nop
aaa
jmp
cltd
cli
popa
inc
sarb
ljmp
xor
xorb
ds
mov
cmp
add
sti
in
add
sbb
dec
lret
sbbb
and
sbb
adc
mov
sub
sbb
jb
mov
sahf
imul
and
cmp
add
mov
icebp
scas
inc
pusha
or
repnz
or
loopne
hlt
add
jl
adc
aas
add
fs
stos
jne
in
gs
cltd
dec
mov
sub
adc
into
and
mov
mov
jg
push
ret
mov
push
mov
inc
xor
add
ret
xor
je
sub
das
or
sub
cmp
out
es
or
addl
lods
jmp
incl
aam
xchg
xor
out
ficoms
mov
test
aaa
mov
pop
jge
or
insl
adc
dec
xor
divb
cwtl
pop
test
dec
test
and
sbb
and
xchg
push
sbb
cmp
into
and
inc
lds
popa
test
xor
lock
and
movsl
pop
dec
adc
inc
adc
ret
push
inc
stos
cmp
xchg
loop
push
adc
test
xlat
imul
jmp
lahf
push
shlb
xchg
xor
push
xchg
jnp
popa
adc
lret
dec
je
inc
adc
mov
sbb
lods
add
mov
mov
mov
outsb
mov
mov
cmpsl
ss
adc
das
push
pop
push
fisubl
cvtpi2ps
popa
push
enter
sub
mov
add
cmpsb
add
jne
sub
mov
mov
or
add
and
arpl
gs
jo
pop
pop
cmpl
or
or
and
out
imul
fnclex
pop
pushf
scas
ret
mov
out
or
or
subb
negl
cs
outsb
out
dec
adc
push
icebp
iret
pop
jne
cmc
add
mov
jmp
mov
inc
jmp
sub
je
shll
inc
pop
xor
dec
jo
dec
je
dec
inc
dec
inc
fists
out
xchg
xchg
jb
pop
push
scas
lock
xor
jl
lcall
xorb
aas
push
and
arpl
push
sbb
pop
dec
mov
sub
push
and
inc
popa
out
lods
adc
xor
fwait
cmpsl
enter
aam
or
sbb
hlt
aas
cmpsl
dec
mov
nop
jo
outsb
mov
xor
jne
mov
sbb
das
add
jg
dec
daa
clc
push
popf
jl
pop
and
and
mov
ds
es
imul
xchg
movsl
ja
inc
push
popa
inc
mov
sbb
loope
fisubrs
in
add
jae
lea
loope
push
mov
ret
mov
es
mov
adc
in
dec
dec
add
daa
or
mov
push
loop
iret
pop
outsl
mov
loope
mov
gs
xchg
sub
inc
lds
mov
std
xchg
leave
movsb
into
push
adc
inc
inc
daa
pop
inc
jno
sub
xchg
push
sub
xor
sbb
jge
ret
mov
cmp
fcoml
ss
popa
jge
xor
xchg
adc
mov
add
jb
shrb
push
mov
push
cs
mov
sub
fcomps
mov
mov
mov
push
xchg
repnz
jle
mov
in
es
pop
push
add
cmpb
xchg
imul
sbb
cltd
mov
pop
cs
xor
int
xchg
mov
fstp
loope
adc
and
dec
sub
dec
loopne
push
faddp
xchg
or
cltd
sti
cmpsl
lds
loope
or
cmp
ds
sub
sub
add
mov
lea
mov
or
in
into
dec
or
sub
sub
xchg
rorb
cmc
jp
lods
bound
stos
jge
orb
or
cmpsb
mov
movsl
cmpsl
test
and
push
aaa
sub
dec
xchg
pop
inc
xchg
inc
adc
imul
call
xchg
jp
andb
jb
scas
jecxz
and
cmp
je
mov
dec
pushf
dec
fstl
jno
lea
das
xor
das
jnp
loope
inc
scas
ret
adc
int3
arpl
imul
setl
push
fldcw
ljmp
fbstp
in
mov
mov
mov
xchg
sarb
push
imul
pop
fcoml
lods
jl
push
je
and
aad
cmc
adc
iret
and
dec
cmp
lock
xchg
jb
push
jg
inc
in
testl
push
sub
mov
mov
popa
dec
idiv
cmc
add
into
xchg
xorb
adc
test
inc
push
leave
push
divl
mov
inc
cmpsl
dec
gs
insb
sbb
jbe
ret
in
test
rcl
pusha
fsubl
or
loope
sahf
divl
xor
not
jnp
clc
mov
mov
pop
mov
dec
mov
in
or
cmp
ret
or
repz
mov
cmp
jl
and
ja
inc
je
clc
cmp
xor
lcall
pop
test
movsb
nop
push
push
mov
popa
jnp
pop
or
cmp
jmp
ret
mov
test
mov
ja
sub
pop
repnz
xchg
insl
ret
outsl
and
dec
xchg
scas
xlat
dec
sbb
stos
cld
dec
push
sbb
push
sbbl
xor
in
xlat
pop
aaa
jne
xchg
mov
test
lds
mov
pop
shll
sbb
cmp
xchg
jo
into
mov
mov
orl
jl
adc
inc
mov
mov
sub
adc
psrld
dec
xchg
jmp
lds
nop
sub
xchg
mov
loop
mov
jp
in
inc
inc
andl
std
jnp
lods
scas
stc
test
mov
mov
leave
test
imul
xchg
xor
xchg
add
loop
rcll
add
aaa
addr16
add
or
inc
or
ret
jns
popf
pop
int3
mov
sub
enter
or
cmp
push
xchg
int3
ljmp
cmp
ds
fs
mov
xor
lahf
insb
fstl
add
sbb
sbb
inc
rcrl
adc
sub
and
sbb
xchg
jne
add
and
test
test
ret
mov
or
cmp
dec
mov
lahf
push
xor
ljmp
gs
add
mov
push
fwait
arpl
pop
ficoms
push
or
std
mov
or
push
test
dec
sub
adc
ltr
lds
and
mov
ret
sub
ret
testb
push
and
mov
lods
je
inc
nop
add
iret
lret
ds
jmp
outsl
pop
movsb
ja
xchg
imull
stos
jle
jno
rcl
pop
inc
jg
push
inc
movsl
imul
outsb
cwtl
mov
lock
push
int3
pop
xlat
lods
adc
stos
popa
cli
mov
lcall
xlat
mov
sub
outsl
clc
lcall
stc
or
imulb
sbb
add
test
scas
sub
mov
push
mov
fistps
cmp
in
xor
lret
mov
jle
outsl
mov
lods
std
add
dec
sbbb
mov
push
movsl
sub
mov
ret
stos
int3
ss
loop
ja
sbb
cmp
xlat
mov
sbb
xlat
pop
sbb
mov
add
push
lds
nop
pusha
cmp
adc
sti
out
ja
push
push
scas
test
addr16
fnstsw
jb
jb
ret
inc
mov
sub
js
pop
and
mov
ret
aas
sbb
fbstp
and
mov
jb
inc
nop
sarl
es
sahf
mov
das
loope
jnp
jecxz
dec
pop
xor
adc
imul
cmp
in
mov
push
mov
pop
cli
cmp
in
xor
jno
dec
pusha
mov
or
push
sub
std
sbbl
cmc
aas
loop
sbb
test
add
pop
inc
sti
mov
and
or
lds
or
xchg
xor
cwtl
bound
dec
xchg
stc
pushf
add
and
cmpsl
sbb
pop
pop
rclb
adc
push
sub
adc
xchg
jle
mov
and
lahf
adc
nop
dec
push
in
cmp
pop
out
dec
mov
jge
jno
lds
daa
add
aas
stc
sbb
cli
insl
insb
test
push
into
leave
out
xor
push
test
lds
push
data16
cli
sub
fimuls
jl
push
lret
jl
xor
and
lea
mov
out
jmp
mov
cltd
xchg
test
shl
or
stos
pushf
popf
loope
or
xchg
cwtl
rcrb
pop
cmc
addr16
cwtl
or
sti
add
add
test
aam
inc
aam
adc
sub
repz
repnz
and
adc
inc
adc
and
jp
jle
xor
arpl
fs
in
in
jl
jno
pushl
ja
jb
pushf
shlb
loop
push
push
scas
std
imul
dec
rcl
xor
mov
rep
rcrb
jle
rcrb
jl
cmpsl
stos
fimull
stc
adc
pop
test
iret
pop
outsb
aam
lock
lret
jb
popa
push
enter
ret
push
lea
enter
sarl
rclb
movsl
and
stos
mov
jbe
je
push
mov
jle,pn
iret
popf
rol
jl
mov
sbb
xchg
lret
fistl
in
and
call
ror
in
jecxz
push
mov
repnz
pshufw
inc
stc
mov
xchg
scas
jno
pop
mov
pop
jle
mov
lea
fcoms
mov
sbb
jne
sub
clc
popa
lret
pop
std
dec
xchg
shlb
mov
jg
mov
lods
lret
mov
pop
jg
ficoml
fadds
sub
pop
sbb
xchg
mov
dec
test
sbb
jle
es
xchg
outsl
and
sarb
gs
ret
in
jno
ret
ds
es
add
add
arpl
jge
cmp
jno
fwait
inc
outsl
je
mov
nop
dec
xchg
rolb
jmp
jae
xorb
imul
mov
cmp
lea
sbb
pushfw
lret
mov
loop
sbb
push
scas
and
inc
cltd
loope
loopne
jbe
dec
inc
xchg
std
lret
mov
pop
adc
ss
mov
push
cmpsl
mov
mov
mov
rolb
jo
out
sub
fsubrl
hlt
jle
leave
add
rolb
adc
repz
mov
loop
movl
xchg
rcll
movsl
and
in
push
xlat
or
push
out
fsubs
jle
and
xchg
xchg
mov
dec
or
enter
lcall
adc
mov
and
cmp
loop
cld
stos
xchg
pop
mov
mov
sbb
cmpsl
popf
fwait
jns
rcr
jmp
clc
xchg
fmuls
or
ret
ja
iret
lds
in
xor
jcxz
add
dec
sbb
mov
clc
rcl
lahf
int3
fcoml
mov
repz
xchg
inc
icebp
inc
mov
in
pushl
sub
daa
and
or
nop
pop
cmp
ljmp
out
ljmp
push
add
fnsave
mov
insb
lods
jp
lock
lcall
fdivs
jge
stc
rcr
jge
xchg
cmp
addr16
mov
jnp
cmp
or
lea
fldl
push
xchg
push
cmp
call
dec
and
xchg
repz
sub
lret
sbb
xchg
pop
jae
in
sbb
add
lret
dec
xchg
repz
mov
popa
lock
xchg
inc
sbb
lods
popf
mov
out
shrb
lds
ja
push
push
mov
dec
fwait
rcrl
icebp
inc
test
sarl
fldcw
mov
dec
sti
or
mov
or
xchg
cmp
sbb
pop
inc
cwtl
xor
lock
aad
jecxz
mov
ret
movsl
jecxz
fildll
test
adc
push
daa
push
adc
or
out
cld
std
stos
add
int
sub
popf
sti
imul
imul
in
pop
dec
jmp
decb
lahf
jecxz
add
test
jecxz
sub
inc
jmp
cmp
mov
jbe
pop
fisubrs
arpl
loop
cmp
outsb
or
and
cmp
mov
cs
sarb
pop
cltd
aas
xlat
jg
xor
adc
add
sbb
js
cs
cmp
ljmp
clc
outsl
stc
pop
mov
pop
sbb
ljmp
shrb
in
outsl
test
and
adc
mov
out
push
test
into
push
jae
fdivs
lds
jecxz
aas
sub
test
fnstcw
ret
cmp
popa
rcr
outsb
outsl
hlt
or
jae
jmp
cmp
and
aam
xchg
std
loope
mov
fisubs
sub
ret
nop
push
jp
test
in
inc
leave
or
mov
inc
xor
jo
push
xlat
mov
push
rcrb
xchg
clc
outsl
inc
sbb
sub
add
aam
add
mov
lret
and
aas
cwtl
pusha
pop
hlt
sahf
lock
fldcw
mov
jnp
xchg
sti
jno
or
mov
jecxz
stc
xchg
iret
push
and
fistps
mov
lock
cmp
ja
test
xchg
mov
sti
xchg
push
push
mov
out
in
fsubl
push
add
icebp
cmpsl
mov
ret
add
xor
icebp
cmp
dec
push
mov
or
lods
in
icebp
dec
fwait
jp
stc
mov
lcall
xchg
cli
les
mov
push
xor
add
pop
int3
outsl
shll
or
daa
pushf
jle
out
pop
or
xchg
bound
popf
mov
pop
cli
jg
cs
xchg
arpl
mov
jae
pop
lock
outsl
jl
cld
mov
in
addr16
fildll
adc
pop
jnp
push
push
pop
dec
add
pop
lcall
mov
test
shll
out
loopne
das
cli
lea
sub
jmp
lea
imul
outsb
aam
inc
cmp
inc
aad
mov
push
out
iret
sarb
loop
cmpsb
pop
cltd
push
sbb
inc
mov
pop
stos
push
mov
add
lods
mov
mov
mov
shlb
mov
xchg
gs
push
and
inc
mov
mov
jmp
inc
jne,pn
outsl
movsb
and
in
test
pop
pop
and
push
cli
mov
adc
jno
popa
lods
pop
outsl
and
sbb
inc
mov
lcall
push
push
push
nop
dec
push
xor
je
ljmp
das
inc
xchg
shr
and
insl
shl
enter
jg
out
push
push
jno
ds
mov
nop
jecxz
inc
add
push
xchg
cmpsl
jno
loope
dec
scas
movsl
inc
lds
ja
mov
sti
fsubrs
call
in
loop
mov
icebp
pop
or
mov
pop
push
push
adc
xchg
mov
sub
stos
xchg
mulb
xor
xor
xchg
jg
rcl
jecxz
leave
stc
clc
inc
loope
add
pushf
cs
jns
xorb
adc
inc
push
inc
lret
jecxz
out
or
jae
popf
hlt
outsl
pop
dec
push
scas
jmp
scas
cs
fiadds
dec
std
fs
jge
fdivrs
or
cmpsl
jns
add
daa
dec
sub
jae
and
mov
mov
jae
push
xchg
hlt
movsb
jle
dec
push
cli
insb
ret
push
cmp
js
je
sub
jge
ljmp
lret
mov
testl
pusha
das
or
pop
scas
into
pop
pop
pop
je
push
push
push
or
dec
adc
jle
movsl
push
mov
push
xor
push
andps
mov
adc
cmp
jae
sbb
push
dec
inc
cmp
sbb
orb
rcrb
xor
jecxz
xor
sub
add
lret
xor
mov
mov
add
pushf
dec
mov
jge
adc
test
in
xor
repz
insb
lret
add
add
sti
and
popf
sarl
xor
lods
call
test
icebp
rol
cmp
daa
mov
or
mov
pop
mov
or
clc
cmp
nop
enter
jg
imul
adc
xchg
inc
jmp
or
es
push
lret
insb
out
ss
lret
loopne
stc
insb
cli
xor
sar
mov
dec
push
xchg
xchg
mov
dec
or
lcall
jne
daa
cltd
xchg
mov
stos
and
test
xor
les
ss
or
push
pop
lret
sub
sti
daa
push
rorl
or
pusha
dec
and
testb
xchg
sbb
in
call
xor
out
mov
or
enter
clc
ret
sbb
xchg
shrb
sbb
adcb
adc
mov
mov
sub
jns
jnp
mov
adc
idiv
lahf
dec
cmp
fisubs
imul
add
test
xchg
mov
adc
bound
push
and
sub
push
es
push
ror
repz
inc
mov
pop
fnsave
pop
ficompl
push
jo
pop
ja
lds
pushf
pop
out
adc
lcall
xorb
cwtl
jmp
jbe
sarl
mov
lock
cmovo
xlat
sub
popw
push
mov
jecxz
popf
or
mov
mov
mov
insb
cwtl
push
mov
imul
test
inc
cld
mov
mov
add
stc
stos
cmp
negl
xchg
aad
aam
std
mov
jmp
enter
or
pop
add
outsl
aaa
popa
loopne
xchg
sti
jne
icebp
ds
cmp
aad
push
push
mov
add
aas
call
ds
std
mov
adc
loopne
inc
push
gs
mov
sub
out
fwait
rorb
jmp
jae
mov
mov
inc
aad
js
outsb
repz
sbb
inc
cld
xlat
xlat
loopne
cmpsl
stc
clc
mov
enter
bnd
mov
pop
repz
lea
adc
push
xchg
inc
sbb
jmp
fsubrs
cmpb
or
xor
push
add
cmp
out
enter
test
in
xchg
xchg
rclb
gs
int
adc
es
xor
xor
mov
xchg
call
stc
jl
mov
pop
and
push
xchg
and
iret
cld
xchg
scas
loop
pop
and
pop
lahf
xchg
adc
mov
sub
inc
and
insl
bound
cmpsl
sti
push
cli
adc
adc
repz
aaa
cmp
ja
adc
pop
add
mov
push
inc
cld
shlb
mov
out
sets
rcl
push
add
xchg
leave
pop
pusha
pusha
aas
nop
push
pop
inc
sbb
jmp
xchg
shrl
push
sbb
sbb
cli
jo
inc
xor
int
push
xor
sub
sbb
nop
adc
orl
mov
sub
xchg
mov
sub
mov
cli
adc
iret
cmp
xchg
popa
shrl
loop
push
imul
lcall
int3
test
outsb
pop
nop
cmp
inc
or
push
add
loopne
sbb
cmp
incb
cltd
mov
addr16
push
mov
mov
push
add
frstor
andb
sbb
das
adc
push
ror
sarb
mov
lods
xorb
aam
xchg
mov
sbb
lret
popa
cld
cmp
sti
ja
pop
shlb
push
fisubl
dec
sbb
dec
mov
and
sub
adc
mov
pop
sub
inc
sub
mov
loop
mov
out
xchg
mov
jns
in
test
push
mov
rol
pop
jmp
hlt
pop
lods
sbb
fldln2
arpl
xchg
in
fs
push
les
loop
movsl
pop
cld
xor
sub
mov
incb
jb
xchg
jns
cmp
cmp
cltd
adc
fisubs
ja
mov
sub
mov
bound
ret
sarb
sub
fsubs
sub
hlt
mov
subl
or
add
in
clc
ja
insl
iret
sti
push
cmp
scas
aad
mov
daa
cmp
and
inc
sub
mov
loopne
inc
push
pop
jl
call
psllw
jecxz
mov
sub
lock
sbbb
fidivrl
xchg
test
rcrb
jno
xchg
mov
jecxz
lahf
mov
test
loop
roll
ljmp
cld
dec
das
jae
mov
mov
inc
sbb
mov
stos
gs
mov
je
mov
in
fidivs
cmc
push
push
and
mov
out
ljmp
test
stc
dec
cld
data16
xchg
outsb
aam
push
mov
xchg
mov
xor
in
out
mov
cmp
push
xchg
movsb
jb
and
mov
call
in
iret
fsubs
call
cli
adc
mov
mov
sub
insb
mov
repnz
sti
jne
dec
imul
cmpsb
insl
fwait
xor
adc
lcall
sbb
std
sbb
and
push
add
mov
mov
mov
call
push
sbb
js
or
test
nop
xchg
jecxz
mov
lahf
add
fsubrl
outsl
mov
sbb
cmc
ja
clc
in
or
imul
sahf
mov
mov
repz
lcall
pop
lock
push
fnstenv
fildll
movsb
mov
pop
or
mov
pushl
pop
test
cmp
add
xchg
mov
xor
insl
xor
push
inc
jl
xchg
mov
scas
cwtl
mov
dec
pop
ror
jns
out
fwait
xchg
pop
pop
dec
pop
mov
mov
jl
gs
jns
or
dec
adc
push
repz
dec
repnz
sub
in
jb
pushf
jne
ds
leave
and
pop
inc
je
arpl
jmp
mov
add
hlt
insw
pusha
push
ds
rcrl
inc
pop
cmc
loopne
sub
xchg
xchg
dec
push
pop
sbb
jno
test
ss
inc
cmp
adc
shrb
test
jmp
push
xchg
stos
aaa
test
jae
sub
mov
push
xchg
dec
aas
mov
popf
mov
or
loop
mov
push
adc
or
in
cmp
fidivrl
ss
ljmp
test
xchg
fwait
mov
jp
add
pop
xchg
int
subb
repz
pop
add
push
pop
mov
pop
dec
fs
lods
in
mov
sub
loop
gs
je
js
sbb
scas
fwait
mov
cwtl
or
lds
or
jmp
jns
sbb
int3
sarb
jnp
add
cmp
gs
dec
jnp
mov
or
add
lods
pop
xchg
or
pop
and
dec
fists
std
je
mov
xor
shlb
mov
inc
loop
push
mov
push
push
pushf
scas
jb
dec
push
cmc
or
xor
arpl
xor
xor
jmp
out
mov
std
ljmp
in
add
add
in
mov
and
pushf
in
inc
pop
insb
dec
shlb
aaa
xchg
ret
pop
jb
mov
test
cmp
mov
mov
rclb
xor
jmp
jmp
repz
push
lahf
loop
pop
mov
xor
pop
xchg
xor
loopne
dec
jge
dec
cltd
or
mov
xor
icebp
dec
pop
jbe
lret
mov
mov
sub
fucomip
xor
int
lock
int
sbb
rclb
fildl
subb
or
jmp
adc
lcall
loop
and
dec
dec
mov
xor
mov
push
into
jb
into
adc
jae
imul
iret
sub
imul
repnz
je
ljmp
gs
push
xor
push
and
lret
push
xchg
add
aaa
in
rolb
cmp
inc
repz
lea
loop
rcrl
sub
xor
push
inc
push
jl
rorb
cli
int
xor
mov
jbe
fcoml
mov
jl
pop
inc
fs
mov
fisubrs
dec
mov
pop
lahf
jne
testb
xchg
jbe
sub
cld
cmp
scas
add
and
out
and
daa
and
xor
mov
pushf
test
push
hlt
into
pop
loope
xor
test
adc
das
jnp
inc
push
adcb
xchg
data16
sub
pop
ficompl
lcall
pushf
or
loopne
inc
jge
popf
in
mov
push
or
sub
orl
cmp
call
aas
mov
lods
ss
mov
pop
jbe
scas
leave
and
sbb
mov
movsl
add
mov
ficomps
call
pop
in
cmp
xchg
mov
bound
cmpsb
pop
cmpl
or
nop
repnz
cld
jnp
pusha
movsb
sbb
call
add
add
add
into
adc
push
scas
cltd
dec
leave
imul
push
mov
adc
lahf
sub
xor
add
stos
xchg
int
add
js
and
jb
pop
rcl
pand
movl
and
add
or
enter
clc
dec
mov
pop
jo
cmc
sub
lea
nop
aad
pusha
add
add
pop
mov
lret
dec
sub
into
lcall
lcall
cmp
inc
addb
mov
mov
loop
mov
jl
add
jle
lcall
lret
lods
and
pop
pop
inc
daa
scas
pop
dec
lock
push
jge
fcmove
cld
mov
cltd
shll
scas
jecxz
adc
leave
xorl
cmp
mov
lret
sub
int
scas
test
dec
push
ret
mov
cltd
dec
iret
notb
mov
sbb
insl
mov
or
nop
pop
add
or
mov
bound
add
lods
sbbb
push
adc
and
in
int3
lock
inc
mov
mov
adc
adc
pop
cmp
and
sarl
mov
mov
xchg
pop
pop
mov
jno
rorl
rcrl
or
lret
jge
xor
mov
hlt
hlt
fwait
jb
mov
addr16
xor
stos
fistl
enter
outsb
movq
dec
mov
push
jno
popf
imul
cs
addr16
fsts
cli
cmp
cmp
out
je
cmc
cwtl
in
div
xchg
ds
adc
jno
or
icebp
push
sbb
shl
fldt
or
call
repz
loope
je
xor
pop
xorl
repnz
mov
leave
sbb
mov
popa
push
rclb
mov
mov
mov
dec
xchg
or
hlt
test
lods
xorl
out
loop
jle
dec
add
inc
adc
fidivs
xchg
xor
inc
mov
xchg
mov
mov
mov
inc
cwtl
sub
push
insb
sarb
shlb
fsubrs
cli
xchg
out
cld
scas
es
mov
sbb
neg
lods
rclb
sbb
mull
jmp
iret
pop
stos
add
repz
mov
int3
stos
test
mov
sub
iret
daa
cmp
int
jns
xchg
inc
jmp
ss
cld
ljmp
push
inc
cli
cmp
neg
push
loopne
out
add
lods
push
add
fs
fimuls
inc
xchg
ret
cwtl
fwait
dec
sub
sub
jp
lods
push
out
add
cmc
xor
push
xor
xchg
outsb
aaa
cmp
sbb
lret
jecxz
nop
ds
data16
inc
xchg
xor
pop
push
cli
loop
pop
cmp
dec
fisttpl
int3
outsl
jno
movsl
sub
push
test
push
rclb
push
jae
std
add
xor
dec
mov
adc
mov
mov
or
popa
aas
sub
andl
push
mov
add
jmp
mov
mov
mov
out
and
jnp
and
movsl
and
sub
and
frstor
out
dec
int3
loopne
pop
in
dec
inc
xor
int3
sbb
rcr
jmp
aas
xchg
fisttpll
pop
add
pop
cwtl
pop
packuswb
ret
push
and
mov
pop
decb
mov
out
addb
sub
sbb
sbb
popl
pop
xchg
fdivs
imulb
scas
sub
aad
popf
adc
popa
mov
popf
dec
xor
mov
das
and
hlt
lret
fildl
cmpsb
push
lea
inc
mov
pop
das
xchg
xchg
sbb
adc
mov
loope
repnz
or
in
lods
mov
popa
mov
lods
and
fiadds
or
loop
insb
gs
push
push
mov
or
mov
xchg
pop
lret
lds
mov
push
rcrb
sbb
pop
xor
lcall
loopne
scas
xchg
cltd
mov
dec
fildll
lods
push
repnz
int3
mov
add
sarb
and
addr16
rcrb
sub
mov
es
dec
sub
nop
rcll
std
cmpsb
sbb
cmp
push
push
cmp
pop
insl
xchg
scas
mov
nop
xor
or
imul
ljmp
roll
daa
mov
bound
ret
jg
int3
jnp
push
clc
mov
call
mov
sbb
fs
push
cmpsb
mov
inc
xlat
or
or
dec
and
sbb
pop
in
sbbl
cmp
pusha
mov
pushf
sbb
cmp
fwait
add
jnp
fistpll
lods
or
add
adc
jo
aaa
lods
int
movsl
shr
fistps
stos
addb
scas
push
sbb
fldt
dec
add
das
or
insl
test
mov
lods
xchg
fdivr
xchg
mov
inc
add
aam
inc
mov
jnp
pop
push
push
sub
rcl
pop
jge
popf
shlb
mov
in
push
add
loop
int
in
or
daa
aad
leave
in
push
test
shlb
sbb
ljmp
int
aad
repz
scas
sarl
addr16
or
xchg
movsb
mov
cmp
jge
xchg
test
clc
pop
in
test
std
test
mov
dec
cmp
xor
jmp
outsl
cmp
xchg
stos
jb
gs
dec
add
cltd
push
mov
das
rcr
mov
cmpb
dec
cmp
ret
push
dec
mov
xchg
mov
xor
pop
add
sub
in
outsl
jle
fidivrl
fnstsw
jns
hlt
pop
dec
bound
std
mov
loop
loope
es
iret
mov
and
out
in
aaa
mov
inc
add
ret
fisubs
mov
iret
mov
lret
inc
lahf
int
leave
hlt
ja
sub
push
fcmovnb
push
add
sbb
leave
inc
pop
jb
or
xchg
jnp
and
inc
mov
push
mov
js
cmp
fists
mov
cmp
mov
aaa
int3
pop
cmp
mov
pop
je
mov
sahf
add
in
pop
and
dec
sarb
xor
sub
stc
pushf
je
pop
adc
cmc
and
xchg
sbb
mov
pop
mov
ljmp
in
pop
push
push
aaa
add
in
clc
loopne
dec
mov
cli
and
daa
fwait
call
or
dec
insb
clc
xor
aaa
loopne
sbb
push
inc
pop
mov
xor
andl
push
ret
fnstenv
jp
repnz
jmp
mov
mov
add
loopne
cmpsl
in
lock
xor
xchg
xor
sub
fwait
jge
daa
adc
xor
lret
jno
adc
jle
gs
mov
mov
mov
dec
inc
gs
and
dec
test
add
and
xlat
bsr
leave
dec
leave
sub
ret
xchg
test
sbb
imul
aas
mov
int3
ret
es
cmpsl
add
xlat
call
dec
shrl
cmp
xor
jno
je
mov
sub
shl
mov
adc
lock
aas
and
push
fcoml
mov
sbb
test
notb
xor
subl
out
aad
je
orb
pop
xchg
pop
mov
push
ret
repz
cmc
aas
fs
mov
dec
call
inc
test
xor
data16
lahf
pop
nop
sbb
cltd
mov
sub
adc
mov
xchg
mov
dec
iret
js
xchg
add
mov
arpl
subl
jecxz
data16
shrl
sbb
lahf
clc
push
add
jl
aad
fsts
dec
movb
xchg
push
dec
push
jle
jg
repnz
and
xchg
xchg
pop
or
add
xor
xor
mov
xor
scas
daa
into
mov
add
arpl
loopne
fcoml
xchg
dec
scas
mov
jbe
sbb
dec
or
jne
mov
repnz
xor
push
movsl
jle
adc
jns
sub
lret
xlat
leave
ds
cs
inc
push
ljmp
mov
jns
arpl
dec
sub
shlb
clc
lods
xorb
push
inc
xchg
lahf
cld
and
data16
scas
test
push
lock
ljmp
cmp
sub
dec
xor
fnstenv
xchg
js
outsb
das
sub
sbb
test
in
and
fiaddl
scas
sub
lods
fs
in
loope
adc
push
jbe
mov
leave
push
lods
jo
add
mov
push
and
pop
mov
cmp
hlt
mov
push
stos
lods
pop
sbb
dec
fidivrl
outsb
loope
inc
cmp
pop
nop
push
xchg
addb
decb
popa
popa
sti
and
ss
addb
hlt
jecxz
mov
inc
xor
ds
mov
jne
cwtl
xchg
cmp
mov
mov
ss
xchg
sbb
sbb
xchg
fidivrs
mov
fidivrs
cmpsb
ret
lods
mov
inc
aas
rcll
xor
xchg
call
jecxz
xor
jp
adc
pushf
fcoml
mov
push
ljmp
mov
sahf
sub
xchg
jno
or
mov
adc
gs
mov
scas
out
cmp
cmp
sti
jne
adc
fidivrl
das
add
imul
repnz
push
ja
or
xchg
mov
push
jp
inc
int3
adc
les
insb
push
addr16
jnp
pop
divl
mov
mov
bound
test
fcompl
sti
jbe
fidivs
fisttpl
xchg
inc
cli
mov
mov
add
pop
rorb
lcall
xchg
adc
mov
mov
inc
mov
dec
mov
cmc
cld
inc
sbb
cmp
cmp
inc
out
rcrl
cmp
inc
push
push
fistps
dec
mov
lahf
adcl
cli
xchg
int
repnz
add
ja
jne
sub
and
and
into
dec
nop
sti
fwait
jmp
hlt
andb
and
cmp
adcb
sub
jo
mov
mov
mov
jae
pop
mov
add
shrl
in
and
cld
sbb
daa
push
jno
bound
pop
pop
scas
dec
sub
dec
fnstcw
inc
push
and
addr16
jnp
fdivl
and
mov
xchg
pop
inc
call
aaa
movsb
rorl
sub
icebp
aad
lea
jecxz
jb
adc
je
and
je
je
fnstcw
xchg
sub
testl
pop
inc
mov
pop
lahf
push
jo
adc
xchg
adc
mov
mov
dec
dec
out
xor
test
stc
jmp
pop
and
aas
mov
test
mov
lods
inc
aas
shll
mov
adc
mov
xchg
outsb
cli
loop
jo
cmpsb
mov
hlt
ja
daa
mov
call
jns
pop
repnz
addr16
add
mov
sarl
fs
pop
sub
out
out
sti
mov
mov
dec
pop
dec
leave
int3
mov
jno
inc
cs
lock
push
mov
sub
mov
lret
cltd
insl
jl
fdivl
pop
movsb
dec
xchg
out
insb
mov
xchg
subb
test
sarb
xorb
cmp
xor
je
xchg
popf
adc
dec
add
gs
mov
cmp
addl
les
sbb
lret
pop
dec
and
cltd
push
add
pop
pusha
movsb
fisttps
test
inc
inc
adc
mov
mov
lahf
add
dec
add
out
out
jg
imul
mov
test
xchg
cmpsb
pop
xchg
pop
mov
dec
test
out
add
xor
xchg
jge
xchg
loope
cs
clc
cmp
cmp
addr16
cmp
popa
hlt
loope
pushf
jnp
pop
stc
lea
lds
stos
adc
or
rorb
mov
dec
nop
loopne
es
mov
mov
adc
mov
in
sbb
cwtl
lahf
cmp
jb
loope
dec
mov
mov
push
pop
jne
or
pushf
gs
xchg
addr16
sub
imul
aas
and
xorl
lds
js
jle
sbb
adc
or
adc
int3
daa
cmp
dec
cmp
mov
and
test
jno
pushf
inc
dec
icebp
nopl
cmp
xor
push
push
test
xchg
or
sub
shrl
sub
push
cs
dec
jns
and
mov
cwtl
push
cmp
data16
stc
int
jmp
fisttps
std
or
movsl
cmp
imul
mov
jmp
adc
mov
jae
jg
stc
aaa
outsl
pop
fdivrs
fwait
or
inc
jnp
in
scas
dec
icebp
arpl
mov
jns
push
pop
push
xorb
adc
insl
loop
dec
data16
mov
dec
jns
int3
lods
setnp
lret
pusha
sub
inc
mov
inc
ret
dec
pop
jle,pn
aaa
cltd
jmp
mov
jnp
jae
mov
pop
das
nop
xchg
in
mov
je
call
insb
scas
lock
push
add
leave
addr16
leave
or
mov
xchg
mov
mov
dec
into
dec
data16
ja,pn
or
cmp
mov
inc
movsl
lcall
das
mov
aas
stos
xchg
jg
jns
adc
and
pop
cld
cld
pop
es
and
test
xlat
dec
addr16
and
dec
add
dec
fldl
out
sub
inc
fsubs
xorl
cmc
push
xchg
lret
dec
mov
adc
mov
stc
mov
sub
sarl
rcrl
jne
insl
inc
pop
jl
mov
fidivrl
les
pop
jnp
scas
nop
mov
or
fs
jne
jo
xchg
aas
add
movsb
cmp
lds
icebp
dec
iret
sub
hlt
sahf
test
popf
ret
inc
adc
push
fistps
gs
push
xchg
imul
insl
xchg
loopne
adc
sub
fdiv
jo
cmp
test
pop
in
inc
cmp
sahf
or
xchg
mov
mov
scas
push
fisttpll
lds
ss
jb
scas
dec
pop
pop
pop
repz
adc
pushf
fistpll
std
subl
ljmp
test
push
and
dec
into
add
lock
push
cltd
adc
and
repnz
xchg
dec
jle
iret
mov
mov
push
test
push
mov
xchg
pusha
scas
xchg
aad
test
rorb
mov
dec
bound
xor
je
jle
das
mov
push
std
adc
push
jmp
push
movsl
insb
sbb
js
inc
xchg
mov
and
loope
pop
test
jmp
pop
scas
jle
jp
in
xchg
ret
jns
stc
sbb
fimuls
ret
sbb
ret
and
sub
or
out
push
push
cmp
pop
mov
cmpsl
js
bound
xor
aas
push
or
push
dec
mov
rcl
jecxz
cmp
scas
xchg
xor
inc
inc
popa
in
ljmp
cltd
outsb
mov
js
shll
push
cmc
pop
xchg
adc
out
cmp
and
mov
sarl
es
mov
aas
jmp
mov
fdivs
inc
mov
xchg
xor
int3
cltd
in
test
cmpsb
cwtl
adc
add
std
lcall
and
dec
imul
add
repz
inc
pop
cltd
jo
pop
push
lds
sbb
pop
out
aas
push
test
jecxz
loope
aas
stos
stos
jp
insb
jmp
cmp
in
sub
pop
stc
je
push
mov
mov
fs
cmpsl
push
jns
xchg
les
in
pop
or
imul
fimuls
xchg
add
mov
or
or
rorl
pusha
mov
outsl
pop
andb
pusha
xorb
jo
lahf
mov
sbb
lods
push
and
or
sbb
sbb
adc
cmp
push
push
xchg
cmp
push
addl
std
out
fimuls
ds
jge
das
and
rcll
outsb
shr
cli
int
shrl
mov
icebp
lea
push
lds
mov
add
inc
and
add
insl
xchg
scas
test
mov
in
test
sub
mov
mov
mov
sbbl
sbb
clc
jae
push
adc
xor
jle
xchg
pushf
fwait
mov
clc
cmp
rcll
pop
or
mov
sub
insl
jmp
inc
js
subl
scas
mov
fadds
lods
add
mov
inc
push
adc
sbb
dec
mov
sbb
adc
test
imul
xchg
push
repz
pop
jmp
mov
cmc
mov
xorb
cmp
psubb
sbb
inc
mov
add
or
int3
xchg
cwtl
enter
hlt
sub
in
in
loop
mov
dec
push
aas
mov
gs
sub
pop
mov
xchg
cmc
xchg
and
sbb
pop
testl
ljmp
pop
je
pop
sbb
xor
adc
mov
dec
test
arpl
arpl
pop
push
mov
sbb
mov
imul
cli
mov
scas
dec
rcrl
push
in
push
pop
hlt
xor
sub
stc
aad
in
jne
movsb
push
inc
lods
sahf
scas
sbb
push
fsub
fcoml
cld
xchg
jns
mov
std
dec
jmp
int
in
es
and
out
pop
stc
xor
movsb
test
neg
pop
sti
mul
pusha
lods
mov
popa
ss
push
mov
insb
je
out
call
add
rcrl
es
in
and
jne
sbb
hlt
jo
jo
pop
cmpsl
outsl
add
inc
pop
cltd
xchg
push
ljmp
push
js
fdivs
int3
out
cmpsl
fnstcw
cli
out
or
cwtl
or
movsl
sub
test
orl
fdivl
xor
mov
dec
mov
or
popa
clc
out
jl
push
test
daa
inc
lock
mov
pop
push
leave
xchg
lahf
loope
in
mov
sbb
mov
cltd
sahf
in
add
negb
bound
adc
mov
xor
popa
mov
loopne
fistps
fbstp
pop
mov
sbb
dec
cmc
and
sbb
jg
cli
nop
sub
adc
repnz
cmp
mov
and
xchg
push
lock
or
push
pop
movsl
inc
xchg
push
sti
out
add
insb
mov
mov
ret
int
sub
movsb
or
xor
cmp
and
dec
push
sbb
jns
dec
test
stos
add
push
mov
and
sbb
pop
jns
cmp
xchg
cmp
fldt
xor
add
in
decb
sti
aam
push
and
je
cmc
pop
es
cwtl
shrl
es
pop
sub
lods
fdivl
test
adc
jbe
xor
mov
je
xchg
mov
in
cmpsb
daa
ljmp
pop
xor
mov
inc
push
add
or
sub
adc
xor
in
cmp
jb
or
jo
xor
leave
ds
jns
push
mov
dec
xchg
xor
mov
mov
ficoms
imul
nop
enter
scas
mov
pop
mov
insl
cs
outsb
gs
test
int
mov
pop
jl
imul
imul
cmc
dec
inc
pop
dec
data16
mov
insb
ss
and
pop
ror
out
xor
inc
in
sub
int
xchg
leave
sbb
xchg
inc
fldenv
aam
cmpsl
pop
arpl
mov
add
out
js
mov
testb
cmpsb
imul
sti
aad
mov
push
mov
icebp
outsl
mov
mov
les
loop
mov
scas
stos
dec
mov
pushf
jnp
add
aad
popa
jg
popa
sbb
adc
repz
stos
insb
adc
sbb
cs
outsb
pop
pop
imull
iret
jmp
mov
cmp
adc
adc
repz
and
xor
push
into
sysexit
or
mov
aam
int3
pop
dec
out
inc
mov
out
ljmp
scas
xchg
push
popf
mov
or
xor
inc
loop
bound
jle
in
lcall
dec
mov
mov
mov
mov
outsl
xlat
clc
adc
adc
je
sub
into
xor
add
cmc
dec
push
call
xor
xorl
cld
out
mov
mov
shlb
jle
push
ja
dec
push
roll
mov
data16
pop
int3
cmp
mov
xor
in
dec
pop
mov
pop
fdiv
cli
and
shr
bound
add
ret
nop
inc
mov
mov
xchg
fiaddl
addb
les
pop
sub
sub
aam
add
jl
jge
sbbl
loope
fadds
mov
jge
adc
pop
aam
mov
cli
lret
out
jp
aas
jnp
jnp
jbe
add
std
pop
insl
out
mov
in
icebp
jge
push
sbb
mov
mov
mov
mov
lret
inc
aas
ret
add
sub
out
inc
adc
mov
cmpl
cltd
pop
test
fcomp
add
xchg
frstor
mov
ss
jg
clc
popf
mov
mov
mov
xchg
ljmp
or
pop
xchg
lret
add
cmp
xchg
cmp
loope
fsts
out
dec
pop
lds
nop
xchg
rolb
jae
mov
rcrl
jg
test
xchg
sar
xchg
xchg
lahf
dec
xchg
mov
movsb
insb
xorb
jl
lods
xchg
jbe
jns
or
xchg
les
inc
ljmpw
shrb
pop
pop
das
and
sub
fstpt
repnz
lea
jo
sub
dec
lret
mov
fsts
iret
pop
adcl
lcall
pop
pushf
scas
mov
sub
push
sarb
outsl
inc
bound
dec
iret
lret
aad
xor
xor
mov
inc
jecxz
push
pop
loope
test
adc
data16
and
imul
cwtl
out
and
add
in
lcall
stos
mov
xorl
cmp
mov
add
insb
cmpsb
push
push
fildll
mov
cmc
ret
out
xor
lahf
sbb
out
mov
add
or
mull
jge
jle
aad
lock
or
lahf
outsb
push
sub
adc
enter
movsl
outsl
fdivr
mov
xor
xchg
stos
push
roll
or
in
mov
add
jo
mov
in
or
mov
aam
push
and
push
insl
fiaddl
xchg
int3
and
add
arpl
subb
mov
int3
fstpl
fistps
sti
inc
out
rorl
mov
cmp
adcl
test
mov
gs
movsl
add
fwait
shll
pop
sub
and
test
sbb
pop
nop
rcll
mov
jne
out
or
ljmp
test
jge
or
das
adc
pushf
enter
movsb
pop
fnstsw
out
inc
pop
test
adc
out
xor
jno
xor
cmp
or
sub
repz
aad
mov
negb
in
fnsave
xor
lret
sbb
nop
or
scas
xchg
imul
dec
lcall
dec
scas
loope
cmc
adc
cmp
roll
cmp
das
cmc
or
sbb
sbb
xchg
jo
xchg
filds
cmp
or
mov
sbb
mov
out
stos
jnp
mov
jge
rcrb
push
pop
scas
xor
and
ss
jns
mov
movsl
inc
or
popf
push
pop
sbb
aaa
adc
jl
push
sbb
aaa
decl
mov
arpl
push
inc
rcr
and
les
js
movsl
cltd
bound
pop
jno
fdivrs
fldt
cmp
mov
iret
push
lea
out
je
xchg
movsb
push
fisttps
into
leave
jae
bound
les
ljmp
or
outsb
fnstsw
cld
out
and
addr16
adc
dec
push
or
test
mov
jns
daa
adc
jns
fidivs
movsb
sti
rorb
hlt
imul
scas
ds
push
dec
push
fdivl
or
ror
cmpsl
rorb
nop
sbb
lods
testb
pop
pop
ss
pop
push
ss
xor
mov
pop
pop
jl
cwtl
push
pop
test
jg
mov
out
cltd
xor
popa
sub
cs
scas
mov
rol
mov
mov
mov
or
lcall
int3
aam
outsb
inc
clc
add
out
sbb
inc
aam
test
inc
add
aam
dec
cmp
xor
adc
jmp
mov
adc
mov
out
sub
jmp
push
into
add
push
cwtl
cwtl
lea
mov
shrl
adc
imul
je
cwtl
cmp
jo
cmpsb
cmp
xor
sub
jns
icebp
adc
loope
fisubs
pusha
sbb
pop
mov
adc
jb
mov
fimull
mov
pop
stos
mov
sbb
leave
xchg
sub
xchg
lret
out
push
sahf
sbb
push
xor
cli
mov
jmp
pushl
mov
pop
popa
and
dec
mov
jne
ljmp
xor
aam
pop
and
and
lcall
jne
add
cmp
and
sub
xorl
fisttps
jg
pop
lods
or
lods
jl
testl
mov
jl
fimuls
pushl
iret
sbb
out
aam
bound
dec
aam
lods
adc
std
xchg
mulb
mov
stos
xchg
cmp
and
into
add
mov
fst
mov
lcall
cmpsb
cmp
insl
lods
push
adc
xchg
ret
inc
fisubl
adc
cld
call
xchg
fildll
pop
iret
fisttpll
cmpsb
jge
imul
add
mov
leave
in
dec
mov
push
ret
xor
mov
or
dec
movsb
pop
aam
outsl
xor
push
sub
xor
jo
or
xor
divl
in
scas
push
call
test
inc
and
pop
aas
ljmp
int3
mov
iret
lods
adc
inc
pop
insb
imull
add
fstpl
aad
fistpll
mov
add
ret
into
popl
outsb
xor
ret
mov
push
ret
out
ljmp
mov
inc
movsb
scas
outsb
mov
push
pop
mov
dec
and
inc
jl
sbb
movsb
add
fwait
arpl
aaa
dec
das
lcall
add
xlat
mov
push
pop
pop
pop
cltd
pop
and
jne
cmp
sub
inc
rorb
in
out
lret
cmpsl
in
cld
add
lea
loope
jecxz
mov
xchg
cmc
mov
mov
cmp
cmpsl
sub
out
scas
sub
test
cmp
sti
sahf
iret
in
movsl
push
or
rorl
jl
adc
out
pop
outsl
mov
ljmp
pusha
sbb
or
in
pop
cmp
inc
sub
ja
stc
decb
lret
sbb
idiv
mov
and
ret
sti
pop
clc
xchg
push
lods
jmp
jp
ja
std
cmpsb
dec
or
push
sbb
cld
sbb
js
dec
pop
add
xchg
icebp
fcomps
push
jecxz
mov
out
push
push
test
idiv
adc
fidivs
push
inc
loopne
aas
loope
filds
xor
int
popa
mov
jns
dec
lcall
mov
add
add
dec
subb
lods
cmc
xor
dec
sub
jg
shlb
add
or
dec
pop
pop
cmp
es
clc
and
pushf
insb
pop
out
mov
or
jg
outsb
jg
mov
in
dec
and
mov
jne
nop
add
xchg
dec
xchg
call
push
dec
push
or
mov
mov
sbb
sbb
cld
sub
push
js
lds
pop
int3
add
into
xchg
and
out
enter
sub
pop
andl
mov
cld
inc
cmp
enter
xor
lret
test
roll
xchg
mov
aam
shlb
ja
ret
inc
adc
ficoms
call
pop
hlt
jns
xchg
push
and
int3
mov
lea
pop
jns
adc
aas
pop
xor
les
stos
test
popf
xor
mov
push
push
lock
push
cmp
out
sbb
cwtl
dec
out
addb
or
xchg
xor
repnz
ficoml
jo
jecxz
mov
mov
inc
sbb
daa
loopne
rcrl
cmp
insl
shr
sbb
pushf
rcrl
pop
sub
aam
pop
add
popa
xor
mov
call
mov
popf
or
out
xchg
in
rcl
lock
mov
adc
sub
xchg
std
mov
aad
rolb
jp
in
xchg
data16
lahf
mov
cmc
repnz
pop
xor
or
jb
jo
stos
ret
cli
push
add
mov
jo
mov
pop
push
jnp
xchg
pop
fwait
mov
mov
and
pop
call
ja
dec
sub
mov
jno
out
pop
clc
psubusw
shll
and
dec
lods
js
jl
xchg
mov
sbb
aas
test
sahf
out
pop
cmp
push
popf
pop
sub
dec
mov
xor
cld
pop
push
cmpsb
mov
push
adc
test
test
test
push
jb
pop
popf
ss
adc
je
jge
cmp
adc
aaa
and
ret
push
int
dec
andl
out
mov
sbbb
inc
mov
shll
inc
pop
add
xchg
mov
sub
outsl
call
idivb
ljmp
inc
das
or
fists
mov
xchg
ja
pushl
jmp
jle
sub
ja
mov
sub
pop
mov
out
adc
inc
nop
push
cmpsl
or
sub
insb
into
pop
xchg
inc
fcompl
dec
dec
movsb
add
sbb
pop
and
call
cs
scas
pushf
fwait
dec
xor
sub
ljmp
dec
dec
add
dec
stos
mov
jl
cltd
dec
or
js
push
inc
cmc
lret
cmp
and
rclb
cmp
push
push
out
js
and
outsl
xchg
lret
and
sarb
and
lods
rcrb
inc
sub
nop
ficoml
push
add
aas
xor
push
pushf
pop
adcb
repz
mov
call
std
aaa
fildll
push
add
lret
xor
jge
jae
mov
js
or
movsl
adc
les
mov
test
sub
inc
xchg
adc
mov
mov
xor
js
cmpl
cli
mov
mov
aam
sub
nop
or
dec
cmp
sub
and
bound
aas
popa
in
mov
xor
or
mov
sbb
addr16
aad
int
pop
lds
mov
sub
std
les
sub
add
adc
cltd
les
js
pop
push
lahf
outsl
ficompl
ds
rcll
pusha
pop
xorb
mov
jle
dec
daa
jo
imul
cld
push
les
push
scas
lahf
cmpsb
cs
fnstsw
decl
mov
test
imul
pushf
or
xchg
fcoml
cwtl
jns
mov
lock
pop
jbe
jmp
mov
test
jge
popa
ficomps
and
inc
mov
mov
adc
repnz
ja
call
cld
sbb
add
mov
dec
sub
pop
insb
stc
dec
addl
mov
mov
mov
xchg
inc
loope
push
pop
int3
pushl
shrl
jge
or
or
push
cmp
jp
sahf
popf
mov
cs
out
stos
cmp
inc
leave
test
adc
out
mov
shlb
xchg
sub
pop
push
dec
imul
lcall
push
fcoml
or
adc
sub
scas
or
or
push
mov
or
loope
dec
jbe
push
mov
dec
mov
aas
cmp
clc
ret
rcrb
call
jecxz
dec
lds
jae
fbld
xor
xor
xchg
sbb
cmp
pusha
add
add
mov
pushf
loopne
clc
mov
cmp
lahf
int
les
test
popa
aaa
lock
outsl
or
xchg
xchg
jp
js
sub
rorl
sbb
cmp
repnz
inc
scas
mov
mov
and
jnp
mov
jge
aam
out
jnp
inc
lods
test
scas
in
inc
mov
add
cmpsl
hlt
push
jnp
stc
movsl
sub
dec
mov
xchg
mov
imul
push
cmc
mov
jmp
les
adc
jge
lds
movsb
mov
je
mov
push
pop
add
ret
pop
xlat
lcall
sub
aas
pop
negb
mov
or
mov
xchg
shll
mov
cld
xor
test
shll
xchg
cmp
inc
xchg
push
adc
cmpsb
push
pop
push
lods
add
xchg
into
xor
jb
push
lods
enter
ss
rclb
test
adc
push
jbe
sub
mov
sub
push
cmp
sahf
sar
jge
mov
scas
mov
lcall
pop
adc
movsb
mov
stos
roll
ret
cmp
adc
insb
add
inc
lods
out
add
and
dec
movsb
fbstp
mov
lods
cmp
gs
push
jp
mov
fldcw
fdivrp
cld
pop
sbb
loopne
int3
test
mov
push
repnz
test
data16
repnz
xor
dec
cmp
sub
xor
fldt
lods
daa
xchg
enter
mov
das
in
pop
ds
cwtl
xor
hlt
adcb
sbb
addl
xor
out
sbb
cmp
or
lcall
mov
xchg
leave
push
sqrtps
mov
out
push
sbb
and
fbstp
sub
fs
adcb
subb
mov
jmp
leave
inc
sub
mov
xchg
out
and
sub
in
mov
sbb
jae
sahf
jno
insl
jmp
pop
add
ljmp
add
test
and
cmp
add
mov
mov
mov
dec
push
sub
sbb
pushf
clc
movsb
ja
add
mov
fbld
cmpl
inc
xchg
insb
test
mov
inc
out
cli
jg
iret
inc
adc
pop
cmp
or
jno
outsb
xchg
addr16
je
mov
mov
mov
leave
cmp
ss
push
aad
subl
rclb
ss
mov
push
xchg
sbb
jae
bound
cmp
sub
int3
cmp
bound
mov
push
and
gs
push
fwait
shll
scas
gs
subb
enter
scas
testb
les
mov
sub
mov
mov
dec
jge
int
loope
push
fimuls
sub
fdivp
and
push
mov
fstpt
stos
dec
jae
shl
push
sbb
push
mov
jno
jmp
mov
movsl
pop
repnz
mov
xchg
loope
lock
loop
jp
or
dec
mov
jo
movsb
scas
das
lret
pop
and
adc
mov
xor
mov
add
pop
shrb
js
or
ss
fisubrl
pushf
int
mov
imul
xor
test
cmpsb
jle
xorb
leave
mov
mov
add
loop
lods
clc
inc
jno
push
ds
push
nop
mov
ja
mov
push
pop
popa
in
in
cwtl
xor
mov
sub
jns
and
sti
test
xchg
push
and
fs
scas
lea
rcrb
mov
shlb
xchg
pusha
and
cld
pop
movl
mov
in
ja
mov
into
push
inc
push
insb
or
push
mov
jecxz
and
cmpsl
pop
pop
push
jnp
movsb
mov
or
ret
adc
mov
out
pop
push
ds
pop
xchg
push
and
aaa
pop
fimull
out
ret
jle
int
aad
loopne
lods
add
cltd
push
push
add
rolb
push
jmp
lret
ss
push
stc
jo
mov
movsb
scas
mov
sbb
adc
fsubrl
xchg
xchg
shrl
adc
adc
push
cmpb
xor
cmp
clc
xchg
mov
or
pop
test
push
mov
out
adc
cmpsl
xchg
xchg
add
sahf
xchg
xchg
popa
push
fstl
mov
sarl
fsubrl
les
std
cmp
mov
nop
negb
sbb
shrb
insb
in
stos
lcall
aas
mov
mov
int3
or
rcll
lock
ljmp
cmc
cmp
gs
or
fidivl
or
cmp
mov
cmp
xlat
jecxz
mov
movsb
sahf
mov
cmp
aad
mov
test
and
lret
mov
sti
push
mov
xchg
movsb
iret
test
cs
cmc
lds
adc
int
cmpsb
popf
inc
jp
dec
cmpsb
outsl
mulb
mov
and
popf
sbb
popf
or
jns
icebp
pop
lret
pop
imul
movsl
adc
pop
dec
scas
pop
nop
mov
push
test
imul
aam
or
ss
cmp
ret
or
stos
sbb
mov
jp
cs
cmpsb
mov
sub
mov
mov
repnz
adc
out
cmpsl
xchg
xor
push
fistpl
out
cs
lret
imul
xchg
out
stc
xchg
test
in
cmp
jae
mov
jl
xchg
dec
sub
in
jno
loop
int
daa
mov
div
adc
and
into
outsl
adc
pop
lcall
mov
add
fsubl
mov
mov
xor
adc
in
sub
repz
add
add
leave
pop
pop
sbb
ret
pop
std
les
cmp
add
and
add
sbb
add
dec
xchg
sbbb
mov
sbb
call
xchg
add
hlt
xchg
and
and
mov
pop
jb
fsubl
and
js
inc
mov
mov
ja
mov
xchg
lods
push
pop
cmp
jp
push
andl
xor
xchg
imul
orl
sub
jmp
rclb
dec
hlt
add
push
in
fsubrs
dec
and
fs
pushf
lahf
pop
push
push
in
sbb
xchg
jbe
sbb
push
sub
shr
lods
aas
fdivl
inc
pushf
adc
xchg
repz
cmpsb
mov
pop
andb
testb
mov
aad
test
add
pop
ret
int3
popa
dec
cmp
push
ds
cmpsb
mov
test
dec
jno
insb
sub
fucom
sub
adc
mov
das
mov
fwait
and
mov
lea
adc
imul
dec
fdivp
xor
call
lock
test
jbe
lock
ds
pop
cmc
outsl
rclb
cmc
fldcw
cmp
imull
pushf
mov
fidivl
call
inc
sbb
sbb
jo
cmpsb
fwait
das
cmp
mov
jb
sub
dec
or
int
fs
jbe
lahf
cmp
imul
cmp
clc
lcall
cmp
jg
incb
inc
add
out
mov
test
es
dec
pop
or
jl
cmp
cmovne
mov
cmc
sub
es
popl
or
leave
mov
fisubs
andl
addl
and
ljmp
dec
jno
dec
test
cmpsb
jmp
jecxz
mov
imul
mov
xchg
sub
jae
sbbl
stc
sub
and
dec
jns
std
sbb
ja
jbe
jle
pop
enter
cmc
leave
dec
stc
call
je
jo
mov
push
mov
mov
push
out
ds
sub
pop
mov
mov
andl
fisubrl
movsb
sub
repz
stos
xchg
outsl
fcmovbe
mov
fstpt
jo
push
fcoms
sub
arpl
mov
pop
int
xchg
add
push
sbb
es
xor
push
in
xchg
int3
push
sbb
cmp
scas
aas
daa
cmp
inc
push
xor
push
xor
outsl
xchg
cmp
cmp
adc
pop
inc
push
sub
aad
inc
add
loopne
jno
pop
sbb
xor
cwtl
lahf
dec
int3
sbb
sub
sub
sub
dec
aas
and
in
dec
jmp
lret
cmp
and
stos
push
fidivrs
stos
pop
shlb
or
pop
fisubs
mov
sub
out
repnz
cmp
and
and
stos
mov
dec
add
mov
cmp
rep
push
hlt
add
clc
ljmp
mov
outsb
pop
test
jg
sub
sbb
jno
jns
sti
sub
mov
dec
fdivrl
dec
sbb
sti
movsb
xchg
push
mov
push
mov
and
ret
jo
cmc
push
stos
ja
loopne
mov
push
lahf
fsubs
add
cmp
ret
cvtpi2ps
sub
xor
pop
mov
iret
and
fwait
push
mov
pop
mov
xchg
xchg
lret
repnz
sub
int3
mov
sbb
push
xor
mov
push
inc
sub
jmp
fiaddl
pop
pop
jmp
fdivp
cld
mov
insl
call
and
fstpl
mov
into
adc
gs
aas
inc
mov
or
cmp
mov
rcrb
or
xchg
dec
lods
dec
cmp
arpl
jnp
mov
mov
sub
mov
sbb
xchg
add
cmp
stos
dec
jb
ss
xchg
lcall
addb
dec
sub
cld
rcrb
loope
fidivrs
push
clc
int
sub
lret
outsb
cmc
stos
xchg
xchg
adc
pusha
inc
in
sbb
adc
std
sbb
enter
dec
jp
vmulsd
push
lahf
test
mov
inc
inc
test
xchg
je
ljmp
call
jge
and
fsubr
aad
and
lret
f2xm1
imul
sub
push
cld
push
lahf
mov
mov
jmp
ja
test
sub
imul
jmp
fistpl
mov
jge
sti
xchg
repz
sbb
push
jecxz
decb
adc
xchg
mov
push
and
ffreep
sbb
and
fsubs
outsl
test
xor
dec
std
jle
mov
cmpb
dec
cltd
stos
lock
xchg
insb
mov
nop
push
in
aad
xchg
inc
into
je
and
lret
xor
out
pusha
xor
scas
sbb
push
jno
adcb
clc
ret
aas
stos
dec
jg
lods
jbe
jp
stos
xor
add
fcoms
movsb
iret
cld
ror
fmull
cmpsl
mov
jecxz
lahf
mov
fs
push
stos
add
push
pop
push
jb
dec
aas
ja
dec
adc
jns
scas
pop
pop
and
pop
jo
add
fwait
imul
add
xchg
lcall
repz
jo
insb
in
dec
mov
ds
sub
pop
or
pop
sbb
in
cmp
movsb
or
fnstcw
and
addl
stc
in
popf
lea
call
adcl
idiv
adc
cmpsl
lds
sbb
mov
loop
sub
mov
repz
cmp
movsb
dec
jmp
fdivrs
xchg
sbb
mov
inc
shrb
lahf
sub
imul
sub
add
scas
push
cli
cmpb
fstps
mov
inc
fsubs
mov
lcall
push
mov
jge
shr
sub
cmp
sub
movb
mov
loopne
js
jo
idiv
cltd
out
jno
lcall
andl
sar
jg
fstl
sub
pop
mov
mov
daa
unpcklps
adc
and
inc
popf
push
insb
fstpl
lock
fmull
jp
ds
leave
aam
push
outsl
lcall
stc
lods
adc
call
movsl
pushf
insl
jmp
add
jae
lahf
sub
movsl
jp
jno
xchg
test
rorl
mov
lods
fidivl
inc
bound
psrlq
mov
into
cmp
loope
std
cmp
push
fdivl
and
mov
and
and
fnsave
xor
mov
cltd
or
mov
inc
and
and
inc
movsl
cs
aaa
push
lods
enter
fwait
out
js
fisttps
mov
aaa
into
inc
xor
neg
js
add
mov
and
inc
xor
fwait
das
les
shlb
mov
shl
lret
aaa
stc
outsl
leave
sbbl
jmp
push
cwtl
hlt
xor
or
jp
mov
xchg
mov
test
xor
jmp
cwtl
pop
xchg
pop
test
adc
leave
mov
bound
subb
out
xor
add
cmp
cld
stos
in
or
push
fmulp
push
dec
push
rol
hlt
add
sbb
fadds
pushf
js
movsb
mov
add
xor
dec
pop
push
mov
xchg
push
and
ja
fstps
insb
mov
pop
xchg
stos
out
jmp
out
inc
or
add
jmp
or
or
and
pop
or
push
out
fwait
dec
dec
jecxz
ja
test
testb
fisttpll
cs
push
imul
mov
imul
jbe
push
stos
push
and
movsl
movsb
into
inc
divb
pushf
adc
inc
mov
jnp
mov
ja
lods
xchg
in
std
inc
jmp
mov
and
stos
sbb
in
jne
clc
add
jp
dec
or
cmpl
mov
fs
cwtl
mov
into
mov
lods
pushl
pusha
loope
test
sub
dec
iret
xor
xor
push
push
push
inc
in
outsb
lret
xchg
or
jle
stc
out
repnz
push
leave
rcll
mov
cmp
cmp
pop
or
or
xor
mov
xor
mov
inc
cmp
movsl
mov
adc
jmp
lahf
push
sbb
scas
leave
push
in
and
adc
mov
mov
xor
jg
mov
rcrb
cmp
push
adc
pushf
cmp
xchg
ret
mov
xchg
push
sahf
adc
xlat
fmul
jge
lods
ret
add
popa
dec
sub
addr16
dec
mov
inc
jg
xor
xor
outsb
loopne
ja
or
push
cld
fs
je
dec
sbb
xchg
adc
cwtl
xchg
imul
fisubrl
mov
mov
add
xor
in
insb
push
add
jae
addr16
and
shrl
pop
cmpb
xchg
out
xchg
mov
add
inc
fmuls
xor
jle
das
sbb
push
es
mov
mov
out
ret
shrl
lahf
sub
cmp
push
mov
out
cmpsl
enter
sbbb
xor
jmp
leave
ss
xor
lahf
add
dec
or
add
mov
call
mov
fstps
push
and
push
loop
shl
hlt
lret
movsb
mov
test
cmp
or
jg
inc
mov
lret
push
out
fwait
sub
in
mov
mov
cli
jmp
insb
sbb
ret
stc
nop
jno
lret
aam
push
aam
or
repz
push
in
sub
std
call
jmp
push
sub
test
adc
incb
cmpsl
scas
mov
stos
aas
jns
dec
jp
lods
and
out
jge
xchg
stc
inc
and
mull
xor
xchg
loopne
aad
inc
sbb
call
fisubl
call
mov
mov
mov
xor
xor
and
mov
ds
imul
sbb
sub
int3
cmp
cvtps2pd
js
int3
xchg
orb
push
push
cltd
mov
mov
xor
clc
sub
adc
lret
nop
cmp
fsubs
movsb
outsl
dec
jmp
xchg
cmp
out
cmp
loop
rcrb
dec
popf
cltd
push
lods
out
dec
outsb
xlat
cmp
es
arpl
clc
fcmovne
cmp
ljmp
pop
ss
rolb
jge
add
dec
rcll
test
dec
movsl
dec
adc
push
int3
fwait
icebp
pop
int3
out
push
loope
fildl
pop
pop
scas
push
into
pop
incb
std
cld
ret
jae
xchg
int3
dec
sub
lret
mov
shrl
mov
pop
ror
mov
and
or
stos
mov
xor
out
dec
push
imulb
fsubs
mov
mov
sbb
icebp
and
insl
mov
push
push
cltd
outsl
clc
adc
loope
mov
mov
lods
scas
adc
push
insl
scas
mov
push
test
cmc
iret
or
int
decb
pop
fcom
and
insl
aam
stos
adc
push
and
mov
inc
stos
les
cltd
movsl
int3
xlat
mov
and
es
sti
arpl
dec
add
dec
std
loopne
cmc
iret
and
sbb
or
or
dec
jne
mov
cld
stc
loope
and
clc
xchg
and
mov
pop
dec
rcrl
push
jge
inc
push
jbe
mov
into
mov
and
das
push
sub
in
cmp
lods
mov
dec
hlt
jmp
pushf
negb
std
loope
jl
add
push
aad
pushf
imul
int
in
xchg
sbb
jnp
pop
sub
fs
stos
mov
aam
mov
aam
mov
out
push
popf
cld
push
ror
dec
fcompl
ds
jg
cmp
mov
jo
mov
inc
or
enter
push
loope
mov
data16
aaa
aad
pop
cld
mov
loopne
stos
mov
decb
push
xor
or
pop
in
ja
loope
aam
pop
cld
inc
mov
add
and
jp
cmp
insb
mov
fidivrs
xchg
pop
outsb
mov
les
out
fistps
add
lods
lret
sahf
ss
sub
jg
mov
fs
xchg
push
test
add
dec
arpl
fildll
mov
push
stos
lock
adc
mov
test
nop
in
das
xchg
pop
mov
nop
test
mov
fistpl
dec
jns
mov
es
mov
pop
in
outsb
xchg
fcmovu
sbb
fstl
shl
enter
xchg
inc
inc
lret
outsl
loop
test
popa
inc
cmpsb
in
pop
pop
dec
adc
subl
mov
mov
inc
mov
iret
roll
add
ret
cld
mov
and
ret
jecxz
inc
add
ds
ret
push
scas
out
adc
mov
jge
dec
mov
pop
adc
adc
mov
lock
sub
aaa
jl
jmp
aas
add
outsb
adc
xor
fs
jl
and
sub
mov
push
mov
cli
dec
aas
mov
dec
arpl
loop
sub
add
insl
jge
es
and
out
or
or
dec
add
jmp
jns
cli
repnz
aas
mov
inc
adc
push
and
js
pushf
aas
mov
popl
dec
aaa
dec
test
adcl
add
fcmovbe
inc
out
xchg
jb
rol
pop
xor
fnsave
mov
ds
out
inc
jl
push
xor
push
xchg
dec
movsl
lods
adc
and
pop
xchg
pusha
movsb
shrl
fxch
jecxz
mov
shll
add
sahf
fcomps
xchg
lcall
mov
movl
imul
aam
rcrb
cli
cli
and
ja
lods
mov
loopne
jns
mov
push
ljmp
scas
add
inc
pop
gs
sti
and
movsb
sub
movsl
insl
imull
lods
or
mov
inc
jle
jmp
fnstsw
in
fisubrl
push
mov
icebp
inc
dec
and
dec
jns
testb
mov
and
sub
lret
xor
mov
leave
imul
push
je
sahf
sbb
mov
dec
pop
mov
icebp
cmp
sub
dec
jmp
fwait
inc
int
lahf
sub
out
sub
arpl
mov
or
clc
xchg
xor
ljmp
scas
cmpsl
xchg
std
xchg
jmp
aad
xor
ret
pop
jl
ret
pop
and
pop
fiadds
loope
out
pop
or
or
fnstsw
pop
pushf
icebp
jbe
mov
add
sbb
pop
inc
fiaddl
idivl
mov
sub
mov
add
pushf
add
inc
lahf
cmp
in
push
xchg
sahf
xchg
mov
dec
pop
cmp
lods
in
pop
cmp
cmc
movsl
stos
mov
sub
test
push
pop
mov
test
frstpm(287
push
sbb
icebp
sbb
add
nop
repz
mov
xchg
xchg
pop
push
cmpl
adcl
or
inc
ror
int
dec
ss
test
scas
dec
pop
ret
in
arpl
and
xlat
lock
mov
cmp
inc
add
outsl
pop
lods
cmp
enter
push
lret
call
iret
aaa
adc
loopne
cmp
daa
cmp
fistps
inc
lmsw
adc
mov
jg
inc
push
shrl
sub
adc
add
add
mov
test
mov
out
sahf
jmp
lcall
in
pop
loop
inc
leave
nop
and
aas
frstor
sbb
xchg
pushf
cmc
bnd
es
pop
in
pop
jl
xchg
shll
add
pop
xor
in
sub
repnz
enter
aad
aas
lcall
jo
popf
xor
daa
cltd
sbb
scas
iret
jecxz
jecxz
mov
mov
xchg
push
pop
sub
stos
jnp
icebp
adc
xor
pushf
hlt
pop
xor
scas
jae
je
imul
js
aad
add
pop
aas
cmp
mov
sbb
test
movsl
mov
es
outsl
nop
sub
jns
aaa
jg
insb
dec
xorb
insl
dec
add
sbb
cmpsl
mov
pop
ds
jle
rolb
inc
test
pop
dec
push
arpl
sbb
pop
es
mov
iret
pop
sub
inc
cwtl
push
movsb
outsl
push
addl
dec
loope
scas
and
pusha
out
insb
adc
push
into
mov
ret
mov
ja
dec
movl
jns
ret
mov
mov
mov
pop
dec
cmp
jns
inc
sub
popa
repnz
xchg
push
adc
or
dec
daa
es
in
mov
testl
aas
out
inc
cld
jecxz
push
psrlw
mov
test
ljmp
mov
sarb
or
ret
cmp
xchg
xor
lock
mov
push
outsb
jbe
jno
in
fidivrl
bound
add
or
fiaddl
mov
test
or
imul
rclb
mov
into
cld
or
lret
stos
push
cmc
pushf
jmp
sbb
lock
les
jmp
jmp
mov
push
mov
repnz
cmp
ds
mov
xor
adc
arpl
pop
loop
add
or
xchg
cmpsl
dec
cmp
bound
inc
xchg
addr16
xchg
xchg
ss
pop
inc
iret
rorl
xchg
push
stc
cwtl
jle
aaa
jbe
fidivl
jg
sub
cld
lods
adc
imul
pop
xor
add
stos
aad
mov
xchg
neg
xchg
fisttpll
pop
fwait
les
dec
pop
frstor
fs
push
mov
lods
sahf
sub
movsb
sub
or
jns
in
push
bound
adc
scas
fstpt
jl
mov
cmp
testb
jmp
adcl
or
push
aaa
hlt
cmpsl
insb
cmc
icebp
jnp
xchg
inc
shlb
popa
inc
test
repnz
add
and
scas
fwait
out
les
inc
sub
fldenv
mov
gs
jmp
nop
jns
fwait
shlb
jle
nop
ja
and
push
arpl
negl
inc
xor
mov
jnp
lret
sub
jp
inc
jns
push
shl
sub
pushf
inc
add
jmp
push
in
adc
clc
or
and
push
push
xchg
daa
call
stos
xor
sbb
xchg
sub
cmpsb
lock
jnp
lcall
loopne
and
inc
mov
popa
jecxz
jge
push
xchg
in
dec
inc
sti
aam
or
pop
jg
jg
push
rolb
mov
jb
rorb
adc
dec
sub
cmp
push
jge,pt
sbb
imull
das
mov
dec
fdivl
ja
mov
mov
add
add
leave
push
nop
sub
and
sub
adc
or
mov
inc
insb
enter
xchg
shll
xor
movsl
dec
imul
mov
mov
int3
push
jg
add
and
mov
test
push
mov
jl
sub
and
lods
cwtl
sub
dec
int
inc
int
fistpll
push
and
cmpsb
mov
in
in
aaa
repz
inc
pop
and
insb
mov
lret
xchg
stos
adc
pop
sub
mov
xor
ret
testb
mov
push
test
mov
or
fldl
dec
sub
insl
sti
call
lock
pop
in
cwtl
inc
inc
nop
and
stos
lcall
mov
cli
jne
add
arpl
sub
xchg
add
cmpsb
imul
jnp
jbe
or
addr16
xchg
ret
stos
outsb
fwait
sub
leave
repnz
insl
pop
int3
mov
scas
push
pop
pop
cs
push
jg
enter
sbb
mov
and
add
add
add
dec
jno
mov
dec
adc
and
pop
cmc
movsl
xchg
sub
lret
inc
add
sub
call
shrl
jno
mov
push
shrl
adc
ffreep
jmp
rorl
xor
icebp
add
jle
dec
mov
lods
int3
cmpsb
add
test
push
cmpsb
adc
or
pusha
lret
inc
mov
enter
add
cmp
push
xchg
ljmp
dec
adc
cwtl
insl
jmp
add
mov
scas
xchg
adc
and
popa
pop
inc
fnsave
inc
push
fwait
repz
lahf
cld
sbb
cmp
inc
mov
mov
popf
pushf
cmp
mov
inc
inc
push
mov
xor
cmp
inc
xchg
jo
dec
xchg
lock
arpl
dec
mov
bound
and
jno
inc
insl
cmp
fstpl
mov
popf
adc
or
addl
pop
or
ljmp
cmp
es
ret
sbb
roll
scas
test
fst
push
and
or
lock
loope
sbb
lock
mov
js
aad
popa
xorps
xchg
test
add
push
inc
jg
fldenv
es
imul
mov
dec
mov
bound
push
roll
aas
push
pop
fbstp
inc
iret
sbb
jbe
test
fidivs
add
xchg
lods
and
imull
cltd
arpl
cmp
cmp
sub
pop
xchg
iret
addr16
jno
add
and
mov
sbb
mov
jo
cs
cmp
cli
push
lret
adc
inc
add
inc
aas
pop
cli
mov
orps
mov
call
in
aaa
sbb
fstpl
inc
loope
mov
xor
mov
mov
lods
or
rcll
add
push
mov
adc
mov
jo
data16
and
mov
dec
mov
xchg
adc
mov
sarl
popa
and
jp
add
cmp
jge
pop
mov
sub
inc
and
dec
cmpsb
aad
clc
push
adc
mov
cmp
cmp
mov
stos
xor
jge
aam
nopl
jns
pop
daa
or
enter
fldl
push
push
shlb
mov
xor
sti
pop
jns
mov
lea
xor
push
lahf
leave
ret
jne
pop
dec
mov
cmc
push
shlb
sbb
pop
shrb
cltd
dec
push
mov
cli
sbb
jecxz
and
orb
call
mov
fldenv
popf
mov
and
xchg
popa
xchg
pop
jecxz
sub
jp
add
cmpsb
dec
cmp
and
mov
xchg
ss
jae
dec
dec
test
push
aad
insb
dec
sbb
jnp
sbb
jmp
cmp
mov
imul
imul
cmp
add
fmull
in
jno
and
sub
movsb
outsb
rolb
fbstp
mov
cmpsl
aas
lahf
cli
xchg
mov
int
adc
jnp
mov
add
into
aas
sub
jp
sub
pop
jle
add
out
iret
push
add
mov
shrb
cwtl
lods
pop
mov
mov
es
repz
cld
jno
ret
pop
cmc
pop
add
mov
pop
dec
mov
ja
mov
mov
sbb
mov
xlat
cmp
ret
aas
and
sub
or
or
jne
xchg
mov
mov
adc
in
mov
orl
out
xor
mov
in
movsb
mov
inc
out
or
push
push
and
ss
jno
mov
jg
jecxz
xlat
fcoms
loop
loopne
cmp
jbe
imul
sbb
iret
scas
jns
jns
loope
xchg
arpl
sbb
cmpsb
dec
adc
sbb
clc
sbb
adc
mov
movsb
sub
js
sub
cmpsb
cld
ljmp
mov
cld
stc
xchg
lcall
das
mov
int3
xchg
aas
cmp
adc
adc
fxch
aas
cld
insb
or
movsl
ss
sbbl
pusha
lods
stos
xchg
arpl
aam
push
xchg
inc
fadd
or
addr16
jp
cmc
andb
xlat
jge
mov
inc
sahf
imul
hlt
fwait
push
movsb
mov
jae
xchg
cwtl
daa
ljmp
push
cmp
shlb
stos
push
imul
xchg
and
addl
xor
shll
stc
cmpsb
cmp
sub
pop
icebp
test
outsb
les
loop
daa
je
shrl
mov
es
and
ret
push
mov
mov
add
fnstcw
rcll
pop
cld
mov
mov
dec
call
ret
xchg
out
sbb
inc
imul
xor
movsl
fstpl
jmp
sub
pop
lahf
dec
mov
xchg
mov
mov
inc
mov
or
cli
cmpsl
flds
cmp
adc
aam
loopne
testl
aad
mov
xor
add
lods
mov
scas
jmp
xor
popa
es
pop
push
je
test
out
xchg
xchg
cld
xchg
add
fwait
aad
cmc
rcrb
cmpsb
out
jns
and
les
xor
cli
cmp
das
push
lret
sahf
cmc
dec
dec
test
iret
push
push
mov
out
xchg
add
int
cld
shrb
dec
nop
xor
push
cmp
test
dec
aas
or
into
dec
mov
icebp
mov
mov
sbb
pushf
jnp
sub
jmp
insb
add
adc
in
dec
gs
cmc
stos
mov
nop
adc
jbe
pop
mov
pop
xor
xchg
fiaddl
ljmp
fdivl
pop
or
and
and
pusha
lret
mov
pop
shlb
xor
mov
fnstenv
sahf
fs
cld
mov
lcall
xor
ds
push
popa
incl
movsl
jo
push
cmc
sub
cs
inc
adc
sub
push
jnp
mov
sub
rdtsc
cli
push
sbb
cld
push
out
xchg
fcmovne
dec
mov
mov
mov
jg
nop
or
loop,pt
and
inc
lret
into
mov
sbb
inc
xlat
pop
jmp
std
in
in
daa
add
insb
xchg
push
push
mov
jge
mov
cld
jne
dec
sub
and
arpl
xchg
push
ja
push
mov
es
popa
mov
mov
lret
jo
inc
or
jnp
or
cmp
cmp
clc
inc
adc
xchg
jle
es
push
mov
sub
add
mov
dec
aaa
imul
fistl
jmp
and
xor
in
lret
subb
cmpsl
or
pop
mov
into
icebp
inc
sub
loop
ja
xor
das
hlt
fldcw
sbb
mov
pop
scas
cmpsl
iret
jae
fdivl
add
sub
mov
lds
test
scas
inc
shlb
jg
test
xchg
cmpsb
in
xchg
mov
and
mov
mov
cmp
int
es
sub
push
inc
adc
out
rcll
sub
mov
push
inc
mov
loopne
cs
mov
sbb
leave
iret
iret
push
sbb
fiaddl
aas
pop
and
jnp
or
aam
or
pop
sub
inc
xorl
dec
cwtl
mov
fisubs
pop
jge
and
fdivrp
adc
idivb
imul
xor
out
sub
cmp
out
pop
push
sbb
fwait
jg
jecxz
aam
xor
sbb
aaa
arpl
adc
push
out
popf
jno
pop
ja
cmp
cmp
test
fdivs
jl
shl
mov
xorl
mov
and
mov
mov
dec
dec
ss
ljmp
jge
xchg
mov
rcrb
adc
inc
lods
jp
sarb
pop
rclb
xchg
adc
std
cmp
adc
test
imul
cmp
es
sbb
push
rclb
mov
xor
mov
mov
sub
in
aam
cmp
dec
jne
dec
sub
dec
js
ja
popf
adc
xchg
cmp
xchg
add
push
cs
daa
mov
push
inc
inc
adc
in
sbb
jg
jle
aas
dec
call
pop
cmp
adc
in
movsl
push
xor
mov
mov
push
mov
loope
pop
lds
xor
ss
mov
and
out
fsubrs
jge
sahf
in
daa
cmp
stos
lds
add
and
dec
sub
or
jno
adc
dec
and
inc
pop
and
fisubl
pop
jmp
push
gs
cs
add
or
nop
loope
ss
pop
jmp
jmp
cli
test
xchg
mov
jns
sub
push
pop
cli
imul
cli
ljmp
inc
xor
push
jge
into
cmp
fadds
xor
shll
jnp
daa
and
enter
inc
movsb
adc
jge
fdivs
adc
xchg
push
mov
push
add
stos
das
std
icebp
jg
jnp
mov
or
mov
mov
leave
dec
adc
stc
fcom
pop
mov
mov
xor
lods
sbb
sub
test
mov
call
push
or
adc
aam
jnp
jecxz
out
jecxz
adc
and
mov
cmp
stos
cmp
fisubs
mov
push
jne
cmpsl
mov
push
inc
inc
push
ret
adc
cmpsb
xchg
stos
push
stc
imul
sub
movsl
mov
pushf
or
mov
sub
push
pushf
adc
xchg
in
out
out
stos
leave
inc
fldt
xor
pop
popf
inc
jno
shl
lcall
outsl
std
xchg
mov
mov
iret
stos
repz
out
jnp
push
cmp
jae
js
test
xor
ret
sbb
adc
sbb
mov
int
movsb
mov
inc
lods
bound
push
dec
adcb
mov
xchg
inc
int3
lods
movsl
and
loopne
notb
lcall
into
insl
ja
pop
loop
adc
jge
movsb
fcoml
push
xchg
pop
dec
pusha
arpl
cmp
cmp
jnp
repnz
mov
daa
repz
mov
or
movsb
push
adc
leave
mov
mov
pop
test
out
lahf
adcl
or
mov
add
test
sbb
stos
outsb
xchg
mov
mov
sbb
cmp
inc
mov
in
cmp
outsl
stc
cmp
bswap
mov
jae
mov
mov
or
arpl
fldenv
jmp
lods
ret
inc
pop
clc
and
mov
inc
test
sti
stc
mov
inc
js
push
enter
lret
add
test
mov
jne
ljmp
inc
jecxz
adc
adc
inc
movsb
arpl
jp
push
add
cld
rolb
cmc
out
push
das
or
shll
shll
sub
loopne
xorl
jo
call
out
add
dec
xchg
mov
outsl
ret
and
and
mov
inc
xchg
hlt
outsl
cmp
inc
lret
out
sub
and
pop
call
sahf
negb
mov
pop
mov
aaa
in
mov
popf
ds
test
sbb
lea
je
fsts
pop
push
test
xchg
loop
xor
jnp
jle
test
adc
in
mov
movsl
sbb
mov
sbb
outsl
icebp
xchg
js
into
sub
in
call
push
mov
or
rcll
cltd
add
adc
cmp
adc
sub
mov
cmpsb
mov
cmpsb
inc
sahf
xor
push
repz
xor
adc
ret
test
push
mov
lret
loopne
enter
xchg
pop
cmp
xor
leave
mov
sub
out
movsl
or
jmp
test
xor
arpl
mov
inc
cmpsl
push
xchg
cltd
add
jg
dec
ja
jno
sbb
in
int
cltd
mov
mov
mov
mov
pop
popa
cmp
scas
mov
or
in
testb
in
test
mov
fiadds
aaa
sub
aam
fs
jne
mov
mov
xor
mov
cwtl
pushf
xor
mov
outsb
scas
stos
mov
insl
cmc
insb
mov
push
sub
shl
sub
jo
sub
mov
stc
sub
inc
das
push
leave
and
push
xor
pop
jb
or
aas
mov
dec
data16
dec
insl
push
aas
add
js
jne
inc
mov
lcall
jp
stos
jae
or
leave
dec
lcall
jecxz
push
mov
add
pop
sbb
jle
xchg
lds
push
mov
outsl
andl
in
stos
or
cltd
push
rcrl
mov
das
pop
dec
jecxz
stc
jae
aam
push
push
mov
jecxz
mov
xor
xchg
addl
mov
or
push
std
out
jmp
clc
push
aas
inc
mov
pushf
add
fcomps
mov
jmp
fmuls
mov
cmc
xor
enter
lcall
outsb
inc
pop
push
pop
lahf
loop
mov
xchg
sbb
enter
aam
jle
popa
imul
out
bound
test
repz
adcl
mov
sbb
in
push
xor
xor
add
sub
fsts
insl
imul
pushf
jnp
dec
shll
xlat
mov
imul
xor
stos
repz
fidivl
xchg
push
imull
icebp
mov
jnp
xor
mov
mov
inc
or
mov
lea
test
pusha
jns
pop
addr16
adc
shrl
movsl
std
leave
cltd
outsb
xor
jnp
adc
sub
lock
push
mov
and
inc
leave
adc
test
fsts
push
sbb
push
or
xor
jg
dec
insl
xor
aaa
mov
fs
stc
dec
pop
lcall
inc
push
call
int3
add
je
xchg
ds
dec
xchg
arpl
add
xchg
adc
sbb
lods
or
daa
and
imul
gs
icebp
lret
pop
jl
in
movsl
mov
cli
and
pushf
xor
fwait
pop
sbb
icebp
scas
push
fisttpl
xchg
push
xor
sbb
or
mov
and
sbb
sub
in
ljmp
inc
xchg
and
fcoms
notb
sbb
es
add
call
push
pop
push
sub
movsb
cs
sti
and
out
xchg
fnstsw
add
mov
cltd
jae
aas
stos
pop
xchg
aas
addr16
gs
pop
mov
rol
or
repnz
xchg
sub
push
mov
jne
jbe
aad
pushf
sbb
popf
cld
add
cmp
filds
les
rcl
jne
pop
mov
shr
dec
jle
jb
scas
fdivs
popa
cs
ficomps
mov
cltd
sub
cmpsl
sub
jno
mov
sub
fucom
in
jne
add
lret
out
cmpsl
inc
cmc
xchg
test
push
cwtl
test
lcall
clc
mov
sti
push
mov
fldl
sub
out
xchg
rorb
dec
pop
lods
add
jb
adc
xchg
sbb
rcll
mov
insb
pop
jae
arpl
dec
call
fbld
out
mov
adc
cltd
aam
int
dec
pop
test
test
lret
popf
lcall
in
mov
push
xchg
sub
add
int3
pushf
pop
out
jge
jne
dec
loopne
xor
cmpsb
lahf
adc
push
jp
inc
aam
jne
cli
xchg
mov
loopne
adc
subb
mov
sub
mov
inc
pop
ja
dec
xor
cmp
pop
xor
movsb
pop
je
mov
mov
lret
inc
dec
fwait
lock
cmp
sbb
aam
adc
incl
pop
mov
insb
jmp
xor
xchg
lock
loopne
xchg
in
out
inc
add
cmpsb
push
mov
fisubrl
add
test
sbb
dec
loope
rcll
jne
or
int
xchg
lahf
repnz
mov
int3
xchg
add
movsl
in
aaa
gs
adc
sahf
aad
sbb
dec
pop
dec
out
ficoml
add
push
sbb
jo
pop
cli
fdiv
pop
fnstcw
lret
cld
pop
int
les
cli
out
cmpsl
jle
in
pop
mov
mov
mov
int
sub
dec
mov
loop
cli
or
int
sbb
jecxz
or
or
pusha
cltd
les
or
xchg
add
fstl
mov
test
pop
sbb
or
and
push
cmp
and
lods
in
jb
mov
repz
out
xor
fcmovu
inc
cmp
dec
scas
loopne
into
jne
cmc
leave
daa
rcrl
lcall
sub
xlat
repnz
fwait
mov
arpl
das
adc
sbb
push
dec
and
ja
sti
and
dec
and
inc
xchg
aad
mov
dec
rclb
daa
push
cli
adc
sub
stos
adc
adc
mov
adc
jbe
push
cmp
sub
jo
test
xorb
inc
stc
outsl
fmuls
out
movsb
stc
cmpsb
orl
inc
xchg
divb
dec
fcompl
enter
pop
mov
dec
sbb
jl
sbb
pusha
stc
push
cmp
nop
inc
cwtl
mov
enter
pushf
adc
lahf
out
leave
lock
test
ja
inc
mov
xorl
mov
neg
aaa
loopne
dec
mov
clc
jnp
int
sbbl
shl
shr
fiadds
inc
psubsw
inc
add
inc
or
jmp
or
mov
push
mov
inc
mov
movsl
and
sub
fsubrs
vpunpcklbw
clc
push
xchg
js
cmp
sbb
mov
cmp
popa
mov
pop
add
fidivrs
cmp
sbb
clc
pop
mov
mov
es
aaa
ds
rcrl
std
sbbb
jmp
int
ds
je
out
jle
call
clc
jmp
push
cmpsb
xchg
pop
movsl
loope
lret
data16
fdivrs
cmpsl
mov
push
scas
enter
enter
lods
adc
decb
add
sub
sahf
fwait
cmp
or
or
out
cmp
sub
fs
add
sbb
add
mov
cmp
push
jbe
inc
and
test
dec
add
or
adc
cmpsb
dec
adc
outsb
ss
add
xor
push
cli
shlb
and
daa
insb
sbbb
mov
aaa
lret
adc
jo
faddl
and
adc
in
cmp
mov
pop
imull
pop
and
out
xor
outsb
pop
or
int3
dec
lret
loope
mov
and
sti
push
push
lods
dec
mov
pop
sub
addb
or
jle
ja
iret
and
test
ljmp
mov
frndint
movsb
sub
inc
sbb
sub
xchg
lock
jne
push
mov
jg
push
jnp
dec
dec
mov
or
mov
rol
jecxz
jnp
fcmovnb
add
lock
test
mov
mov
cs
in
std
or
pop
mov
sahf
push
and
mov
inc
test
shlb
hlt
daa
and
repz
out
pop
and
pop
and
jecxz
ss
fdivs
ret
adc
pusha
fldcw
shrl
and
dec
or
lods
cmp
aad
sub
lret
sbb
push
pop
fs
push
lds
stos
adc
int
mov
xchg
lds
jae
pop
addr16
push
xchg
xchg
fdivrp
jns
sub
in
or
push
cmp
xor
iret
sbb
push
or
jmp
push
push
loope
or
push
je
rcr
in
fsubrl
jns
jb
xchg
shl
call
es
clc
lret
add
jno
mov
bound
sahf
mov
in
xor
xor
test
mov
xor
lcall
in
lods
out
or
adc
pop
xchg
cmpsl
notb
sbb
xchg
movsb
stc
push
sbb
and
push
in
scas
or
mov
inc
les
xchg
in
fnsetpm(287
add
dec
pop
pop
js
xchg
gs
pop
inc
mov
jne
mov
ret
cwtl
jecxz
bound
fs
shlb
xchg
ret
mov
shlb
andb
mov
incl
mov
jne
cmp
lret
cwtl
hlt
mov
mov
xor
hlt
or
add
sbb
xor
pop
nop
inc
fcoml
push
lret
test
inc
mov
push
mov
pop
js
add
jnp
jecxz
rcrb
fistpl
xchg
xchg
call
pop
out
arpl
nop
lret
sub
popf
add
lock
leave
xchg
pop
xchg
or
sub
adc
sahf
imul
mov
sbb
stc
jp
xchg
sub
and
push
cmp
fsts
shrb
daa
int
jp
shlb
imul
jmp
cmp
push
into
adc
cwtl
les
and
jp
dec
push
icebp
dec
xchg
mov
jg
add
mov
aas
xor
mov
jb
mov
inc
out
lods
mov
jecxz
inc
jae
lar
mov
fmuls
enter
cmp
int3
mov
in
shll
mov
lock
out
into
subl
cmp
cmp
adc
shll
add
pushf
arpl
push
int
mov
inc
mov
test
add
out
rclb
cmpl
aas
pushf
inc
lret
dec
push
mov
in
sbb
fsubrl
pop
add
xor
iret
inc
into
mov
pop
xor
shrl
aad
leave
cmp
xchg
mov
jb
in
mov
and
and
aad
adc
xor
cmpb
mov
mov
gs
pushf
pushf
sub
cld
fwait
cmp
repnz
adc
das
adc
popa
cmp
mov
jne
nop
fisttpl
mov
sbb
ljmp
cwtl
sarb
lea
sub
add
jp
fst
jmp
into
jb
pusha
lods
jmp
mov
testb
add
popa
das
and
xchg
cmpl
sub
fidivrs
cmp
dec
stos
mov
xor
inc
jmp
ds
insb
mov
pop
or
outsb
mov
rorb
pop
mov
ljmp
js
popf
adc
lods
shlb
call
nop
push
jecxz
xchg
cmp
movsb
aam
out
inc
xchg
rclb
fsubr
leave
sub
push
std
das
xlat
je
jg
mov
sti
loopne
xchg
mov
cmp
or
jmp
jbe
add
gs
lret
sub
in
movsl
jmp
daa
jnp
lea
les
or
cwtl
leave
es
xor
lahf
dec
mov
mov
jb
jae
mov
push
call
xor
fnsave
lds
cwtl
loope
sbb
xchg
ss
scas
or
or
les
fildll
pop
daa
pop
jecxz
into
mov
xchg
enter
gs
push
pop
push
xlat
insb
mov
repz
rorl
dec
pop
call
sbb
inc
fisubl
add
mov
sbb
pop
hlt
mov
or
sbb
mov
bound
lahf
xchg
test
pop
jmp
xchg
pop
daa
das
xor
pusha
mov
xor
leave
xor
mov
xchg
pop
mov
xor
inc
test
arpl
inc
outsl
mov
jns
in
mov
xchg
das
pushl
dec
roll
iret
cmp
cs
xchg
mov
in
dec
test
jb
fsubr
insb
ficoms
das
sub
imull
sarl
xor
push
js
ret
movsl
sub
lods
insb
in
fs
dec
mov
or
enter
ss
fisubrs
pop
mov
out
pop
adc
scas
xor
push
in
pop
lds
push
ss
push
xchg
jb
scas
or
nop
xchg
and
fistpll
aad
cmc
sti
push
mov
insb
call
adc
xchg
xchg
out
out
aad
lret
adc
mov
rcl
add
pop
cmp
sbb
shlb
call
xor
xchg
inc
jns
jnp
cmpsl
test
stc
pop
mov
adc
ret
hlt
mov
mov
inc
adc
and
adc
push
es
clc
jge
jmp
sbb
icebp
xchg
ja
enter
stc
pop
aam
mov
imul
cwtl
and
lret
mov
xor
xor
pop
orb
arpl
ljmp
jecxz
add
cmp
jl
push
icebp
cld
ror
shlb
out
mov
jo
mov
jge
and
xchg
push
lret
mov
xchg
in
pop
push
cmp
addr16
add
push
ja
dec
sub
xor
loopne
and
add
adc
pop
xchg
xchg
not
out
xor
rcl
adc
sub
out
pop
sti
mov
and
sub
lods
stos
mov
or
dec
lock
aad
jb
cmp
test
jl
adc
lods
mov
xchg
jnp
and
es
test
lods
jae
mov
lods
push
jb
aad
lods
jnp
stos
data16
iret
outsl
lods
loopne
add
jge
nop
sbb
xor
xchg
inc
lods
sbb
inc
inc
mov
add
ss
scas
xor
cmp
adc
lahf
adc
lock
lock
push
cmpsb
mov
test
cmc
cmp
jge
icebp
repnz
rclb
sub
mov
sub
shrb
sub
cmpsb
in
pop
divb
xchg
test
imul
lahf
ljmp
mov
fwait
add
inc
nop
push
mov
subl
xor
mov
ljmp
scas
push
mov
test
test
test
pop
mov
int
sub
mull
inc
ja
jle
mov
push
test
push
push
mov
inc
xchg
fnsave
and
scas
jmp
sub
aad
shlb
sahf
xor
ret
test
add
scas
mov
add
daa
into
mov
icebp
rorb
sub
fbld
inc
inc
lahf
pop
mov
bound
stos
jne
test
sub
pusha
fcomps
jle
and
imul
dec
jecxz
cmpsb
jmp
add
cmp
mov
push
pop
ljmp
roll
repz
or
ja
sahf
and
mov
jo
xor
cmp
pop
mov
mov
cmp
add
jp
xor
sti
ja
inc
and
es
and
shlb
xor
pushf
aas
jnp
push
and
ljmp
adc
pop
push
cmc
dec
call
adc
cmp
fwait
xorl
push
adc
call
mov
jae
pop
int3
out
out
cmc
sub
cmc
icebp
ja
ss
mov
and
mov
xor
xlat
das
jle
out
push
dec
test
or
adc
sbb
hlt
mov
jnp
imulb
dec
adc
xchg
imulb
mov
sbb
xor
cmp
outsb
add
out
xor
dec
mov
mov
add
sub
mov
shl
and
sub
mov
popf
xlat
sbb
jae
loop
push
adc
xchg
nop
sti
out
movsb
shll
jmp
sub
sbb
jge
cli
push
jecxz
push
lahf
fs
mov
pop
xor
cmpsb
dec
leave
push
cwtl
cltd
push
pushf
xchg
es
and
rcll
jl
dec
std
adc
cmp
sub
add
dec
mov
jbe
push
clc
sbb
lds
rcrb
mov
hlt
lret
cmp
je
inc
mov
mov
into
stos
and
insb
scas
out
push
mov
lcall
inc
loope
mov
les
dec
es
ror
outsb
mov
mov
bnd
xchg
dec
pushf
mov
cmp
xor
int
mov
lods
fldt
clc
jns
jle
or
into
or
pop
push
clc
scas
push
pop
popf
dec
sub
xlat
jecxz
imulb
into
dec
scas
add
into
aas
gs
into
pop
enter
sarb
xor
dec
js
adc
mov
push
stos
xchg
bound
dec
jns
es
cli
ljmp
xchg
and
insw
idivb
jle
mov
mov
movb
cmp
stc
ljmp
les
inc
sub
andl
xlat
addr16
aas
call
pushf
sub
dec
sbb
and
mov
out
ljmp
rclb
in
mov
int3
mov
dec
mov
add
jp
leave
vphaddbq
mov
orb
rclb
inc
push
bound
xchg
out
punpckhbw
sbb
ds
cli
sbb
ret
jg
sbb
ja,pt
xor
jp
lret
je
and
jge
sub
out
inc
jb
inc
cli
ja
mov
jle
imul
adc
and
loope
int3
push
movsl
inc
dec
leave
and
inc
test
mov
stos
inc
adc
mov
test
aaa
pushl
test
sub
in
push
aam
mov
push
adc
dec
clc
loope
lcall
cltd
roll
in
xchg
fldenv
hlt
mov
xorb
push
push
ret
mov
mov
sbb
pop
push
jnp
outsb
nop
mov
push
mov
int
mov
shrb
mov
push
jmp
movsl
jnp
jb
sbb
lret
adc
mull
arpl
jecxz
pushf
cwtl
xor
rep
pop
fisttpl
test
mulb
mov
pop
subl
push
add
stos
out
fsubrl
ljmp
xor
adc
mov
lds
ds
pop
stc
lahf
mov
pop
add
mov
jae
lock
inc
test
jecxz
lret
cli
cmp
fiaddl
cmp
pusha
test
imul
shll
or
aas
jnp
jmp
leave
cltd
fsubl
cmp
imul
lcall
mov
or
lods
pop
out
js
cmp
jle
testl
xchg
push
pop
push
shlb
add
imul
loopne
add
sub
rcrb
or
mov
sbb
int3
xor
data16
cld
add
fsts
out
dec
cmpl
cmp
mov
data16
mov
mov
sub
push
cwtl
jg
mov
fadds
daa
and
fistpl
outsb
test
aas
imul
push
leave
mov
push
rcrl
pushf
clc
fmuls
sbb
in
int3
cmp
dec
push
aam
gs
ja
adc
dec
fisubrl
stos
pusha
push
adc
xorl
add
fs
and
or
jo
stc
imul
sub
xchg
add
xchg
pop
sbb
mov
adc
lahf
cmp
sbb
cmpsb
push
mov
or
push
sarb
cwtl
in
mov
lock
es
or
imul
push
int3
pop
in
jecxz
notl
and
cs
sbb
push
or
sar
cs
mov
add
push
rcrb
ret
or
mov
sbb
xchg
aam
push
lods
jmp
and
je
outsl
repz
cs
jo
adc
pop
push
jl
cmpsl
repz
icebp
ret
cmp
aas
sbb
xorb
xchg
pop
cmc
lods
pop
inc
pop
or
das
mov
arpl
fiadds
cmovle
cmp
mov
sbb
sub
orb
jb
addl
maxps
fimuls
push
pop
xlat
mov
cld
shr
sub
fiadds
std
xchg
inc
test
enter
frstor
dec
sti
fs
and
mov
cmpsb
sbb
push
gs
adc
xchg
fnstsw
push
pop
or
mov
das
cmp
cmpsb
aam
mov
adc
lahf
ds
pop
negl
adc
mov
in
or
and
mov
xor
jns
inc
in
test
xchg
xor
xchg
gs
push
xchg
arpl
mov
mov
push
jmp
rol
out
mov
mov
inc
out
aad
call
cmp
mov
sbb
rcrb
pusha
lret
shrb
mov
ret
sub
loop
movb
mov
jns
scas
lds
loopne
jno
jae,pn
xchg
jae
push
dec
push
popf
repz
mov
dec
sbb
fwait
arpl
jg
inc
xchg
inc
scas
cmp
mov
xchg
insb
in
lahf
cmpsb
add
ss
mov
enter
test
out
push
nop
xor
movsb
cmp
lods
or
bound
and
jp
insb
daa
icebp
mov
cmp
xchg
jmp
cmp
push
dec
test
out
xor
mov
int3
cmc
add
mov
xchg
push
pop
xor
push
mov
or
lretw
movsb
mov
dec
inc
in
bound
popf
xlat
push
xchg
pop
dec
faddl
sbb
loop
fwait
dec
in
mov
outsb
pop
push
ffree
dec
sarl
mov
xor
jnp
pop
inc
add
adcl
pushf
cmp
shlb
dec
pushf
mov
mov
das
sbb
mov
fdiv
aaa
cs
jle
fadds
jmp
iret
add
push
ja
imul
sahf
popa
bound
or
xchg
jae
and
cmp
push
or
dec
testl
gs
mov
pop
mov
jo
dec
jecxz
mov
daa
adc
sbb
icebp
test
inc
or
mov
insl
push
cmpsb
enter
pop
mov
out
xchg
jb
mov
push
xor
fldt
sub
in
mov
mov
dec
lahf
mov
mov
test
jmp
jecxz
mov
sti
scas
sar
push
xchg
and
or
ficoms
inc
cli
mov
add
sbb
and
pop
jge
loop
add
jnp
cli
inc
mov
push
push
lock
leave
icebp
push
dec
ds
fsubl
xor
fnstcw
ret
outsb
mov
out
je
in
sbb
notb
lret
les
xchg
sbb
jecxz
xchg
dec
negb
loope,pn
lea
jno
push
cmpsl
mov
cmp
out
pop
aas
cwtl
jo
in
nop
xor
jge
jmp
orb
inc
mov
sbb
lcall
pop
shlb
sub
sahf
cli
sub
cld
imul
movsb
push
jge
sti
insl
ljmp
pop
inc
mov
inc
xchg
int
push
dec
ja
xor
cld
and
popf
out
push
lock
mov
in
inc
cld
mov
push
xchg
adc
sti
popa
pop
or
sbb
repz
loopne
mov
dec
push
jg
cmp
push
adc
lods
imul
shrl
push
aaa
jnp
enter
xor
jnp
pop
pop
push
xor
or
popf
hlt
xchg
lock
dec
sub
gs
aam
je
fwait
push
lret
data16
sbb
sub
les
dec
push
xor
and
shl
xorb
mulb
xlat
sub
icebp
mov
das
push
pop
hlt
fwait
and
cmp
mov
cmpsl
fdecstp
iret
cmc
enter
mov
test
jecxz
es
xchg
punpckhbw
int3
fmuls
stos
jne
add
outsl
lret
mov
xor
xlat
sarl
dec
jecxz
mov
add
pop
and
popa
xchg
stc
ljmp
roll
mov
fdivrl
sbbb
enter
xor
test
inc
jae
dec
in
insb
insb
stos
aas
xor
int3
leave
jecxz
xor
push
addr16
subb
sub
bound
popf
inc
dec
push
inc
notl
testb
add
iret
int3
loopne
sbb
and
mov
mov
mov
cmp
insb
mov
aad
xor
jge
testb
hlt
fistl
lods
pusha
es
xchg
xchg
ret
mov
test
and
and
lret
xor
push
xor
orl
imulb
push
and
data16
mov
addr16
push
push
jo
cwtl
cmpsb
jmp
adc
out
cwtl
jmp
pop
lods
adc
jmp
testl
out
add
sbb
test
jo
cvtps2pd
call
jge
jae
add
fdivrp
orb
mov
fdivr
mov
out
cmc
push
out
cmpsb
pop
aas
scas
call
int3
sub
out
xchg
sbb
inc
ret
test
mov
mov
jmp
enter
out
cli
dec
push
rcll
stc
je
adc
jle
test
lret
cmpsb
push
pusha
dec
mov
cld
add
imul
mov
fs
test
pop
stos
or
sub
lahf
mov
adc
stos
ljmp
sub
cltd
shlb
ljmp
jo
das
sbb
stos
fiaddl
aam
mov
call
mov
shll
outsb
sub
add
push
lahf
in
lock
mull
add
notl
adc
dec
push
stos
xchg
cmp
lret
jg
fs
pusha
data16
mov
lahf
aad
es
cltd
add
js
xchg
outsb
fwait
les
rorl
jmp
mov
adc
imul
cmp
dec
mov
adc
jo
lods
dec
ror
dec
add
mov
jnp
push
inc
ds
add
in
push
adc
inc
inc
cmp
adc
jmp
inc
pop
fcoms
cmpsl
in
addr16
in
scas
pop
cmc
push
jmp
out
xor
xchg
push
jb
addb
hlt
and
sub
xchg
sub
xchg
addr16
and
lahf
fstps
mov
mov
and
lea
sbb
add
shl
mov
pop
adc
mov
xchg
enter
push
jbe
mov
jle
mov
decl
sbb
mov
pop
inc
or
push
mov
adc
mov
jbe
sar
js
dec
push
jo
mov
outsb
leave
das
inc
mov
push
cmpb
jbe
stos
xchg
in
dec
and
mov
stc
in
out
mov
aad
push
dec
stos
cmp
lahf
icebp
out
scas
push
push
imul
pop
dec
mov
hlt
xchg
xor
imul
mov
sbb
repnz
insb
xchg
outsb
cmp
dec
rcrl
cmp
and
push
adc
adc
mov
das
insb
cwtl
test
rcrb
ljmp
outsl
push
int
and
mov
push
mov
add
fildll
addr16
sbb
push
mov
ficomps
jb
les
xor
xchg
into
jge
out
jge
mov
lods
xchg
mov
kaddw
pushf
adc
jo
xchg
push
decl
pop
xor
mov
sbb
leave
rcrl
sub
sub
add
sub
mov
inc
jmp
inc
cli
inc
cmp
stc
dec
jno
jns
loope
xchg
mov
lock
fists
jmp
fdivrp
sarb
and
mov
push
in
and
in
jle
popf
in
stos
cmp
mov
and
xchg
mov
cmpsl
lahf
movzbl
iret
push
cmp
adc
cmp
dec
out
jge
subl
sub
mov
or
cltd
dec
xlat
clc
push
jo
or
mov
jnp
jns
xorl
stc
js
loopne
lret
mov
add
push
xchg
mov
int
or
fildl
lret
mov
rolb
and
das
pop
cmp
xchg
and
out
aam
sub
test
pop
outsl
jp
pop
sbb
jg
insl
and
ds
fildl
fldenv
mov
roll
scas
or
mov
mov
add
xchg
das
stc
sti
mov
xchg
jnp
mov
outsb
rorb
lret
mov
push
frstor
push
sub
or
js
pop
leave
movsb
push
cmpsl
pop
xor
pop
mov
sbb
adc
cli
add
sub
adc
lcall
cmp
roll
out
pop
jle
aam
mov
push
in
xor
jo
lret
xor
or
jle
mov
inc
in
inc
int3
lods
mov
push
dec
mov
mov
inc
cmp
push
cmp
and
mov
loop
xor
sbb
mov
stos
loope
aam
pop
mov
lahf
mov
sub
xchg
rolb
xchg
dec
cmp
jae
std
das
stos
jne
jnp
mov
mov
xor
scas
ss
add
mov
aam
fwait
int
xchg
rcr
cmpsb
les
movsl
pop
xor
pop
pop
daa
in
in
or
in
pop
sub
scas
shrb
in
and
pusha
cmp
clc
jo
push
mov
cli
inc
mov
dec
mov
mov
pusha
jo
ret
cmp
inc
aaa
popf
cld
icebp
dec
inc
and
xor
int3
or
dec
scas
stos
lea
les
pop
shll
dec
mov
lret
or
jmp
fnsetpm(287
push
xor
lods
push
in
jae
in
popa
sub
mov
jle
adc
lods
test
mov
or
mov
mov
inc
mov
repnz
sahf
dec
adc
imul
lcall
dec
test
arpl
out
pop
adc
je
mov
jmp
dec
in
das
bound
arpl
inc
fistpll
jne
ljmp
inc
mov
stc
pop
movsl
push
jp
mov
scas
loope
cwtl
shr
pop
lds
cmp
enter
push
in
ljmp
xorb
push
dec
mov
sub
ret
inc
or
push
clc
aam
insl
and
in
test
lea
cld
mov
popf
xor
mov
push
ljmp
mov
inc
std
stc
push
pop
mov
mov
pop
test
mov
cmp
lds
mov
notb
imul
and
sbb
aad
icebp
inc
mov
jae
out
test
repz
jp
mov
jbe
add
pop
xor
pop
in
test
adc
scas
and
add
roll
push
aas
fildl
mov
xchg
lret
adc
adc
cmp
push
pop
push
enter
lds
sti
out
sbb
stos
jp
shlb
fs
dec
movsb
jno
mov
sub
flds
scas
je
int
xchg
mov
add
shlb
shll
fcompl
lods
int
jmp
repz
hlt
pop
pop
cmp
imul
push
mov
dec
jle
in
aam
rcrl
movsl
jmp
xor
jge
jmp
mov
pop
sub
push
jp
cmp
xchg
xorl
mov
add
shll
inc
hlt
jb
dec
sub
inc
mov
push
jb
outsb
insb
push
xchg
mov
mov
loope
cli
xchg
test
jp
gs
mov
bndstx
dec
pusha
xor
shl
xchg
pop
push
push
push
dec
shl
divl
sub
ds
mov
scas
jp
ljmp
cs
aas
lods
int
push
out
jae
cmp
jecxz
mov
jp
mov
fcompl
sbb
mov
push
mov
dec
out
and
fs
xorl
in
jnp
gs
mov
popa
sub
jge
xchg
loopne
ficoms
lock
clc
pop
movsl
movsl
adc
imul
cli
dec
stc
and
sub
mov
sub
es
rcrl
push
mov
mov
and
mov
inc
lret
xchg
andb
dec
jno
sti
push
xchg
in
imul
add
in
out
in
push
and
mov
shl
xchg
out
inc
dec
js
xchg
cmp
clts
movsb
lds
or
sub
movsb
shll
aad
sub
and
mov
xor
xor
mov
mov
jge
in
dec
pop
xchg
scas
or
ljmp
jbe
stos
cmpsl
bound
sbbl
mov
mov
ror
jmp
fucomi
enter
jp
mov
inc
add
jbe
or
pop
hlt
inc
pop
jae
mov
arpl
ds
cli
mov
cli
ds
sub
mov
aad
out
ficoms
adcb
iret
and
cmc
stos
lea
sbb
mov
push
testl
into
adc
test
pop
mov
xlat
lods
scas
or
ffreep
jne
stos
cli
mov
or
inc
jae
mov
les
mov
dec
mov
jmp
pop
sbb
scas
repz
push
iret
out
or
xlat
out
in
call
stc
push
lret
rcrb
lds
mov
nop
lea
clc
leave
loop
clc
cwtl
inc
xlat
jmp
cmpsl
subl
outsl
push
test
popf
shlb
in
cmp
icebp
fmull
insl
daa
add
dec
xor
add
mov
inc
test
and
xchg
mov
fiadds
xor
out
bound
stos
xchg
and
or
mov
dec
lock
adc
test
mov
shrb
add
test
ficoml
and
adc
sbb
sbb
jl
fstpt
ljmp
das
std
insb
push
dec
test
mov
jns
pmuludq
adc
jnp
pop
push
stos
cmp
and
fs
xlat
sub
adcb
pop
xchg
cmp
dec
add
nop
pop
inc
pop
adc
pop
pop
das
cmpsl
lret
jmp
sub
lods
xchg
and
inc
sub
add
push
movsl
dec
fxch
cltd
xchg
movsb
jne
aas
jae
cmpsb
loop
mov
xchg
neg
pop
jmp
stos
xor
lock
cltd
cmp
xor
rorb
cli
mov
push
lea
sbb
pop
xor
dec
stos
fsubs
lods
jg
and
pop
sbb
jmp
sub
mov
pop
lea
movb
lret
add
mov
sbb
mov
icebp
or
in
add
jp
or
dec
mov
add
cltd
inc
cmpsb
arpl
loop
aam
stc
pop
mov
in
subb
add
clc
jae
shlb
insb
scas
sahf
loopne
mov
and
cmp
dec
shll
push
mov
pushf
lret
dec
jae
cmp
dec
xlat
add
push
cli
xorb
insb
sarl
insb
not
adc
dec
push
ret
adc
mov
loopne
lods
xlat
mov
iret
dec
and
push
mov
fwait
sub
movb
mov
xchg
mov
adc
mov
inc
xor
xor
pop
mull
add
lods
add
push
and
xchg
mov
lret
filds
push
out
jb
call
xor
repnz
in
push
push
push
cmp
pop
xor
pop
push
cmp
das
std
inc
pop
test
xchg
jb
cmp
add
jg
cmp
pop
nop
dec
lea
ret
mov
aad
jns
cwtl
mov
mov
idiv
cmp
sti
mov
xlat
sbb
shlb
addr16
push
mov
adc
xchg
ret
cmpsl
inc
test
test
and
orl
es
jmp
xchg
out
lcall
loopne
movsl
std
inc
jmp
fdivr
mov
in
dec
movsb
jbe
mov
stos
mov
hlt
dec
adc
addb
inc
pushf
sbb
dec
adcb
jno
rcrl
mov
xchg
popa
mov
mov
jmp
repz
cmpsb
mov
add
cltd
inc
mov
loop
cmp
adc
ss
cld
fld
inc
pop
in
cmp
mov
sub
icebp
popa
or
out
inc
add
pop
jl
sbb
pop
ret
mov
scas
fistpll
jmp
aad
add
imul
sti
gs
icebp
mov
outsl
aam
loope
inc
imul
jb
dec
into
leave
add
cmp
push
adc
roll
adc
lret
jo
inc
add
mov
popa
add
inc
fdivr
pop
or
adc
insl
mov
pop
pop
pop
sub
jge
adc
icebp
mov
test
pop
xchg
xor
std
lahf
jp
mov
pop
nop
test
in
adc
scas
pusha
mov
inc
mov
rcll
addr16
aad
sar
xchg
test
sub
aas
xchg
das
add
outsl
test
xchg
pop
jmp
arpl
popf
test
arpl
aaa
into
mov
inc
lcall
jmp
xchg
js
mov
and
out
sub
lahf
xchg
rcr
or
mov
nop
loopne
mov
mov
test
das
ret
jnp
and
shrb
xor
hlt
mov
cmc
sbb
test
push
push
sbb
ret
xchg
aaa
pop
pop
jmp
dec
imulb
xor
js
cmp
xchg
mov
cmp
fadd
pop
mov
mov
inc
mov
aaa
gs
xchg
pop
loopne
pusha
push
fsts
fs
push
push
jno
mov
mov
xchg
adc
sub
int
ss
cmp
sub
into
cli
stos
xchg
mov
jno
mov
in
mov
add
cmp
fsubl
add
aas
outsl
mov
push
je
ljmp
test
mov
xlat
das
xchg
inc
cld
ja
jbe
mov
jo
mov
sub
fmul
sbb
mov
lods
pop
or
pop
sub
lret
xchg
stos
aas
pop
or
mov
xchg
sub
sbb
lcall
mov
ret
pop
repz
sub
adc
popa
add
rolb
and
lea
dec
sbb
push
cltd
push
rcrl
jg
inc
test
mov
popa
push
dec
mov
sahf
pop
ds
push
loop
aas
pop
jmp
cmpsl
sub
std
jg
xchg
insb
and
loope
jno
inc
pop
cld
jae
mov
scas
xchg
in
sub
fstpl
mov
cli
mov
out
fcomps
shrl
and
popf
pop
pop
test
lods
aam
int
clc
mov
mov
insb
push
cmpsl
sub
out
xchg
mov
stos
xchg
xor
mov
popf
negl
insl
ret
add
icebp
outsl
mov
andl
xlat
imul
xlat
xor
jae
sbb
sahf
mov
bswap
ret
xchg
push
jecxz
dec
les
imul
pop
xlat
aas
mov
cs
out
test
add
mov
mov
push
pushf
or
repz
divb
lret
xor
dec
push
mov
push
mov
push
inc
loope
pop
loopne
sub
cmpsl
jg
mov
movsl
stos
fwait
stos
inc
ljmp
adc
jmp
int
in
lcall
inc
jge
cmp
enter
pop
pusha
aaa
and
pop
push
frstor
iret
push
sub
xor
cmp
aas
cmp
mov
int3
out
dec
pop
jle
xchg
add
jge
xchg
inc
dec
mov
push
cmp
cltd
jns
decl
mov
dec
stos
pusha
xor
ljmp
cmp
pop
xchg
lcall
out
outsb
inc
mov
inc
pop
fildl
arpl
jp
lcall
lods
mov
inc
mov
movsl
mov
add
add
mov
iret
xchg
dec
inc
in
test
xor
mov
or
jb
mov
or
sbb
hlt
call
adc
pop
push
jmp
or
das
stc
sub
pusha
jns
xor
pop
mov
nop
push
mov
sub
inc
sub
fisubs
xchg
aad
fimull
jns
insl
or
mov
fnstcw
pop
jle
mov
inc
dec
xor
pop
scas
sbb
js
int
movsb
dec
cli
adc
fmull
in
test
dec
xor
sub
cmp
jo
insb
adc
dec
jne
fs
out
lahf
loopne
mov
mov
push
dec
sub
cmp
jg
cmpsb
and
cs
pop
xchg
popl
imul
xchg
sub
and
lcall
jb
adc
add
or
data16
jmp
lea
jl
and
cmp
push
sub
pshufw
mov
cs
inc
jp
std
popa
sahf
nop
in
mov
test
imul
insb
popf
daa
add
repnz
jp
popa
adc
enter
mov
dec
int
shlb
lahf
ja
xchg
in
mov
clc
cmp
or
in
cmpsl
repnz
fwait
cs
and
push
adc
data16
xor
test
push
xor
and
sbb
cmp
nop
or
cmpsb
mov
sbb
jb
cmpsl
sbb
inc
dec
les
stos
jo
push
pop
jmp
sbb
jne
test
mov
movsl
mov
inc
cltd
sbbb
lods
mov
lret
das
ss
cs
push
jp
es
imul
js
cmp
ret
inc
shlb
insl
stos
paddsw
in
push
pop
xor
daa
enter
mov
js
xchg
mov
xlat
or
mov
loopne
add
inc
mov
movsl
arpl
icebp
or
mov
daa
lock
lret
adc
les
inc
ds
adc
mov
fidivrs
repz
int3
pop
repz
sub
mov
xorb
push
loope
xchg
shll
sub
cmp
fdivrl
pop
mov
adc
pop
pop
sub
xchg
jp
mov
std
les
das
add
pop
pop
mov
xchg
xchg
fsubrl
and
jnp
dec
inc
les
jge
data16
in
cmp
movsl
movsb
loopne
cwtl
in
xchg
cmp
pop
test
xchg
ja
sub
or
mov
cmp
add
add
jl
cmp
pusha
inc
and
mov
fdiv
adc
test
adc
gs
arpl
or
mov
lods
pop
xor
mov
sub
int3
cmp
test
xchg
or
leave
inc
push
sub
orb
ljmp
mov
inc
push
lds
enter
into
xlat
xor
outsl
adc
or
jne
aaa
or
inc
mov
dec
and
mov
add
aas
rorl
jp
mov
push
repz
pusha
arpl
mov
stos
push
das
push
lcall
pop
clc
sbb
mov
lods
sub
xchg
cmp
mov
add
jl
sub
or
mov
test
jle
mov
in
push
int
xchg
add
movsl
shrb
ljmp
pop
push
ss
xchg
popf
mov
test
and
mov
je
rolb
push
and
xor
xchg
fistpl
mov
bound
push
xchg
std
sub
test
pop
pop
xor
cmc
pop
mov
sti
movsl
xor
test
and
aam
pop
test
movsl
xchg
enter
loope
mov
lock
inc
add
int
and
pop
ret
shrb
jb
test
pop
lds
jno
add
daa
push
int3
jle
push
inc
outsl
jmp
add
ret
in
mov
inc
ja
cmpb
sub
dec
pop
icebp
inc
xchg
push
lahf
pusha
add
jae
and
leave
cwtl
push
fcmovb
out
outsb
jne
cs
mov
sbb
out
adc
mov
das
cli
adc
pop
sbb
fcmovne
rcll
adc
gs
fcoms
push
hlt
rcrl
outsl
clc
cltd
mov
in
pop
pop
jb
jle
cmp
fldl
mov
shrl
push
ret
sbb
push
jg
push
imul
lret
movsl
loopne
addr16
mov
jno
iret
int3
cs
mov
pop
arpl
push
xor
cmp
pop
jecxz
or
pop
scas
jg
xchg
dec
or
mov
jnp
inc
jp
pushl
pushf
dec
xor
push
pop
inc
out
nop
popa
out
mov
mov
pusha
out
ret
out
inc
les
mov
lods
dec
mov
je
adc
ret
pop
aad
jns
scas
lds
lods
ja
xor
bound
xchg
jp
pop
push
jmp
and
pop
mov
sub
jle
inc
fisttpll
xchg
cmp
out
sbb
in
push
cwtl
dec
je
mov
lods
cmp
inc
xchg
stos
adc
fbstp
mov
jmp
fcmovne
pop
add
adc
mov
push
push
outsb
jmp
fisubrs
arpl
loop
mov
dec
adcb
xor
mov
cld
cmpb
lods
stc
pop
scas
mov
mov
enter
les
cmp
test
cmp
std
out
adc
jnp
inc
filds
xor
loop
lds
testl
int
push
xchg
lret
cli
shrb
cmpsb
insl
pop
mov
mov
adc
mov
sbb
sbb
sbb
scas
inc
push
es
sbb
jb
lret
xor
stos
pcmpgtw
sbb
pop
adc
les
dec
pusha
mov
and
dec
adc
fwait
ficoml
stos
icebp
test
hlt
movsb
sub
xor
in
jb
push
in
mov
and
or
mov
ljmp
sti
xor
out
movsb
in
lret
sub
pop
int
adc
jnp
push
int3
mov
sti
and
jl
js
insl
int
test
mov
jno
push
aad
push
jo
idiv
jns
loop
inc
movsb
sbb
fildll
adc
nop
loope
dec
xor
add
jae
call
jne
sbb
adc
rcl
push
push
pop
rcrb
gs
repnz
cwtl
mov
inc
repz
mov
fildll
push
shll
fcoms
or
cmp
add
imul
sub
mov
mov
loopne
sub
mov
shrb
data16
jns
dec
scas
mov
inc
add
in
test
sub
mov
push
sbb
int3
ljmp
hlt
lods
xor
cltd
lock
daa
rcrb
addr16
and
push
out
cmc
cld
loope
cmp
aaa
inc
std
ljmp
cld
jmp
push
shl
in
sbb
pop
mov
ds
push
jae
mov
nop
je
pusha
flds
ss
add
movsl
insb
sub
add
or
mov
and
int
les
pop
outsl
sbb
pushf
lea
ss
jp
call
adc
mov
mov
fsts
xchg
mov
xchg
mov
jp
adc
jns
test
xchg
cs
add
add
jno
loop
sbb
sub
ljmp
add
imul
or
inc
mov
movsl
sbbl
ljmp
or
insl
sbb
jmp
lods
cmp
je
cmp
xchg
add
add
pop
jmp
mov
mov
xor
divl
push
loopne
sub
aaa
jnp
arpl
pop
add
andb
add
dec
mov
or
test
mov
add
mov
inc
je
dec
enter
repz
dec
or
test
dec
sub
cmpsl
mov
insb
push
lods
sub
insl
imul
repz
dec
adc
cmc
add
jg
inc
test
stc
xor
push
xlat
ficoms
push
out
push
mov
ljmp
mov
mov
dec
sbb
shlb
lock
adc
inc
xchg
imul
inc
push
sbb
mov
sub
pop
push
out
adc
jae
je
icebp
enter
sub
pop
loope
jp
adc
push
dec
and
cmp
mov
rcrb
sub
cwtl
nop
xchg
lock
aam
pushf
push
mov
jmp
imul
andl
out
xchg
les
xchg
and
lret
jb
push
jae
std
insl
push
test
mov
and
in
ds
mov
int
push
pop
in
clc
adc
les
dec
addl
iret
add
xor
jb
pop
jg
cs
sete
mov
mov
hlt
xchg
jno
out
dec
stos
xorb
test
jecxz
inc
jle
pusha
push
or
orl
push
mov
push
fsubs
cmpsb
std
jae
push
lock
push
out
dec
daa
push
dec
lcall
rclb
js
call
aas
mov
jecxz
mov
xor
pushf
les
cltd
rol
clc
std
push
adc
mov
imul
dec
in
and
int
bound
lcall
xchg
mov
lret
repnz
xchg
jbe
inc
mov
cmc
ret
sbb
js
sub
pop
fs
mov
arpl
jle
test
roll
mov
mov
jg
mov
in
inc
inc
stc
xor
fcomps
mov
jbe
xor
adc
mov
dec
push
cltd
fsub
dec
sub
mov
push
ja
push
dec
lods
pusha
popa
scas
jb,pt
or
xchg
xor
outsl
ljmp
or
inc
dec
cmpb
pop
mov
push
adc
movsl
aad
xor
fcom
repnz
push
adc
shll
iret
cmp
adc
test
inc
push
inc
mov
push
pop
pop
xchg
and
sub
lret
les
imul
cmp
rclb
push
arpl
in
sbb
jno
pop
xor
fcoms
shll
ja
inc
ja
ljmp
pushf
out
xor
xor
xchg
icebp
pop
push
sub
adc
adc
shrl
xchg
jp
test
push
inc
scas
ljmp
mov
mov
jecxz
lock
xchg
or
fbld
in
roll
jg
addb
sub
test
and
fwait
sub
or
lahf
lock
mov
into
in
dec
jno
shl
or
jl
xor
shrb
xchg
popf
sarl
arpl
push
push
loopne
out
lcall
pop
mul
movsb
push
mov
movsb
aad
cmc
fidivrl
pop
dec
out
adc
mov
jb
fsubs
mov
hlt
out
mov
jne
push
add
ret
imul
mov
cmp
pop
test
dec
push
push
stc
mov
ficoml
out
icebp
iret
xor
imulb
xchg
mov
push
insb
cmc
jne
jne
lahf
das
lods
insb
pop
pop
jne
icebp
xor
pop
mov
mov
imul
ja
and
outsb
insl
lret
jl
cmp
pop
mov
xchg
cmpl
sbb
in
scas
sbb
cltd
mov
cmp
repnz
pop
mov
fwait
push
cltd
repnz
aas
lock
iret
mov
mov
adc
mov
int
es
xor
test
or
sbb
aad
cmp
sbbb
and
add
pop
loope
lret
push
push
sahf
xchg
ss
and
fnsave
xor
sar
jmp
sbb
adc
es
push
dec
idivb
dec
jg
es
sbb
push
mov
mov
les
stc
jae
push
mov
pop
test
cmp
pop
sti
push
pop
adc
inc
lahf
dec
subb
stos
loopne
sti
push
add
sti
inc
leave
or
fs
stos
lret
sub
mov
mov
add
stos
out
xchg
cwtl
jmp
lahf
cmp
mov
movsb
sbb
out
jo
jl
jb
nop
fisubrs
in
jns
sbb
mov
sub
dec
dec
cmp
aad
shrb
es
fimull
sub
or
pop
add
aam
mov
cmp
repz
push
mov
jb
sbb
adc
arpl
call
ljmp
fimuls
les
xlat
ret
sub
or
test
fimuls
mov
inc
ds
sbb
cs
ja
cmpsb
jmp
push
mov
dec
add
push
push
inc
clc
ret
fs
xchg
dec
jo
jp
mov
out
bound
pop
push
and
leave
es
arpl
jg
inc
fistl
fsubrs
jmp
or
fisttps
xchg
imul
mov
scas
sarb
sbb
stos
pop
dec
jae
ds
daa
fstpt
pop
ret
mul
cmp
incb
mov
sbb
aas
jno
jne
sub
cmp
aas
clc
inc
call
fisttps
mov
into
cwtl
and
sar
dec
fstl
jo
cmp
cltd
out
data16
ss
mov
out
lcall
insl
gs
pushf
in
cli
rcl
mov
insb
rcrl
sbb
leave
xor
dec
nop
adc
xchg
or
out
icebp
pop
cmp
or
push
mov
adc
adc
adc
cwtl
int3
pop
add
fisubrs
or
or
outsl
cmp
xchg
xchg
cmp
lret
pop
idiv
add
repz
test
lret
je
loopne
xchg
inc
fwait
nop
jecxz
sub
and
test
addl
andl
xchg
gs
xchg
mov
mov
lret
xchg
enter
dec
fs
or
mov
fmull
inc
and
divl
mov
stos
lret
pop
shl
es
imul
adc
mov
in
sub
mov
mov
ljmp
je
js
mov
fisubl
jg
leave
sub
cmc
add
lret
shlb
out
ja
xor
xor
jae
sbb
or
mov
cld
adc
cli
or
fwait
pcmpgtd
gs
push
add
or
call
and
add
mov
mov
xor
xchg
lock
or
inc
imul
xchg
sbb
scas
pop
xchg
xlat
mov
inc
adc
or
test
push
mov
into
outsb
or
push
jo
xchg
out
push
sub
imul
jnp
sarl
lods
sub
cmp
sub
addr16
cwtl
mov
les
adc
push
andb
shll
cmp
imul
jp
push
pop
loope
xchg
xchg
and
fwait
or
xor
push
outsb
hlt
push
inc
xchg
ds
xor
mov
and
pop
jne
jp
bound
mov
idivl
out
and
push
sub
sub
adc
mov
adc
mov
lds
or
popa
aas
dec
xor
ja
inc
sub
aam
testb
xor
mov
push
gs
adc
pop
fdivs
sti
bound
je
aad
stos
sub
mov
pop
insl
add
push
sbb
scas
jo
adc
mov
into
clc
fs
mov
lds
jg
pop
sarb
adc
repz
xchg
inc
out
jecxz
mov
add
dec
bound
nop
mov
and
mov
hlt
cwtl
leave
sbb
jl
hlt
negl
push
sbb
cmpsb
lret
dec
fiadds
sbb
out
add
rcl
or
mov
add
dec
xor
dec
movsl
cmp
jo
mov
or
imull
loop
fidivs
arpl
or
pushf
mov
pop
xor
dec
xchg
and
add
sub
roll
sti
stos
add
insb
daa
sarl
mov
addr16
into
les
dec
inc
mov
push
lret
cmpsb
push
gs
arpl
dec
adc
mov
sub
push
sarb
stos
out
data16
outsl
jge
popf
mov
rclb
cli
shrl
jns
jbe
call
push
popf
cmpl
addr16
in
je
scas
scas
ja
cld
mov
aaa
ret
mov
jmp
adc
cmpsb
push
and
cmp
add
data16
stos
popf
or
xor
mov
lret
outsb
push
or
pop
sub
mov
pop
or
mov
inc
push
sbb
mov
sub
push
mov
mov
xchg
insb
inc
xor
xchg
lods
ja
arpl
dec
cmp
pusha
cwtl
ja
mov
jb
inc
ja
sbb
xor
push
cmpb
leave
sub
add
int3
cmpb
push
icebp
dec
cmpsl
sub
outsb
leave
cmp
pop
mov
mov
test
pusha
ror
dec
in
inc
add
fdivrs
adc
add
adc
xor
sahf
scas
xor
aad
in
xchg
push
pop
cmp
xor
ljmp
mov
je
shr
fsubrl
cli
sbb
fisttpl
iret
inc
cmp
sub
jnp
mov
out
mov
fs
mov
pushf
ja
pop
inc
loop
fsubl
int3
cmp
pop
adc
xor
inc
mov
pop
or
lods
shll
cs
in
rol
jne
out
jp
jne
cmp
fbld
adc
clc
adc
mov
enter
jns
adc
xchg
mov
int
sub
rcrl
out
jno
loope
pop
mov
mov
cmp
lds
inc
out
in
ret
push
icebp
dec
and
data16
jo
xorl
xchg
xchg
frstor
lret
aad
sbb
fildl
xor
sahf
mov
pop
fldl
iret
mulb
ret
in
mov
dec
cmp
and
jno
jbe
xor
shrb
pushf
and
mov
sbbb
mov
sbb
shr
jmp
add
jp
mov
xchg
mov
push
fcompl
dec
stc
popa
pop
loop
add
cmp
dec
or
loope
jmp
cli
cmp
mov
cli
fidivrl
and
and
xor
rclb
cmp
idivl
adc
fists
ja
out
out
jle
imull
lods
in
pop
insl
inc
pop
sub
mov
xor
pop
adcl
push
pop
std
mov
sub
add
divl
xor
jns
xor
jb
mov
rcrb
loop
push
mov
fs
push
mov
pop
testb
mov
aam
push
adc
pop
pop
repnz
xchg
inc
jae
cmp
jg
jl
mov
xchg
jg
jo
sub
loopne
cmp
push
add
les
inc
mov
mov
pop
aaa
mov
mov
mov
stos
jbe
pop
cmp
push
xchg
dec
and
dec
jecxz
xchg
test
push
dec
push
enter
push
mov
pop
cld
sahf
mov
in
sub
xor
clc
aad
inc
inc
out
cld
mov
pop
shlb
add
adc
mov
and
out
mov
out
scas
push
jbe
push
sbbb
js
and
xchg
out
in
push
imull
jns
adcb
and
jne
xchg
jne
punpckldq
cmp
sbb
xchg
js
test
leave
inc
aam
cwtl
jp
inc
mov
outsb
aas
movhps
cmc
dec
movsb
shlb
ret
movsb
sub
cmp
jo
or
shrb
mov
in
into
pushf
popa
sahf
pushf
pop
fsts
jne
dec
inc
add
insl
jno
cmc
jno
cs
je
add
push
aaa
mov
clc
cmp
scas
into
filds
adc
add
ret
in
into
mov
jl
dec
mov
or
pushf
pop
jb
pop
xchg
or
cmc
in
xchg
mov
popf
test
sub
or
mov
pop
daa
mov
lods
ljmp
cwtl
shl
in
es
xchg
xchg
xchg
adc
repnz
sbb
inc
push
adc
lods
out
subb
add
inc
adc
mov
or
mov
xchg
out
daa
out
repnz
inc
push
mov
je
fstps
mov
pop
dec
leave
das
in
cli
xor
frstor
jns
nop
and
and
pop
pop
sbb
rcr
leave
jnp
and
lcall
rcl
pushf
xor
push
and
imul
fxch
rcrb
adc
loopne
stc
insl
dec
cwtl
jge
mov
arpl
jp
or
pushf
pop
mov
arpl
xchg
in
je
stos
jbe
cmp
adc
aad
mov
pop
xlat
sbb
mov
outsl
sub
int3
sub
inc
mov
cli
xchg
fdivrl
sub
and
pusha
imul
aad
ss
test
filds
cld
ret
outsl
push
scas
pop
repz
mov
bound
jecxz
mov
mov
arpl
dec
jo
das
pop
xchg
arpl
or
dec
aaa
xor
xor
shll
jae
and
inc
push
pop
add
and
sarb
aaa
xchg
pushf
cmp
nop
lds
xor
movsl
push
mov
bound
ret
jp
cmp
decb
lahf
add
and
aaa
xlat
add
dec
dec
in
repnz
out
sbb
push
inc
add
and
fcmovnb
mov
movsb
mov
outsb
and
movsb
arpl
dec
scas
orb
inc
in
push
les
test
cmp
ficomps
cmp
xor
fiaddl
sbb
xorl
stos
adc
sbb
repnz
add
test
hlt
lcall
je
insb
je
jnp
daa
daa
push
movl
push
pop
cmp
mov
cli
in
test
xor
pop
loop
sbb
sub
es
iret
dec
js
out
rep
mov
inc
pop
neg
cmp
mov
call
or
insb
leave
mov
adc
adc
mov
mov
pop
jge
es
mov
pop
lret
or
and
jecxz
popa
jns
shlb
sub
sub
or
xor
xor
mov
pop
cmp
lods
popf
movsl
inc
lock
and
cltd
pop
sbb
jg
inc
lcall
jnp
mov
cli
fsubr
mov
icebp
insb
inc
out
ss
or
mov
cmp
jno
mov
mov
jl
shll
cmp
pop
pop
xor
lret
lds
pop
sbbl
inc
adc
hlt
int3
daa
sbb
addr16
or
jle
in
lret
jecxz
ja
adc
mov
cmp
and
scas
imul
out
cmp
adc
cmp
mov
imul
jle
dec
ss
cmpsl
pushf
xchg
repz
imul
gs
pop
xchg
mov
enter
and
mov
mov
hlt
enter
movsb
dec
or
out
dec
and
push
cmp
roll
push
rolb
sbb
mov
add
pop
mov
jne
jge
rcrb
cli
xcrypt-ecb
cmpsl
mov
hlt
shll
or
in
movsl
and
shll
fs
push
xchg
xchg
push
insl
xchg
pop
inc
push
sub
adc
out
sub
addr16
sbb
mulb
dec
cs
pusha
int
repz
leave
xorb
popa
aas
or
loope
add
das
dec
loop
mov
addr16
cmp
aaa
cld
push
lds
pmulhw
push
mov
pop
jb
mov
fsubrl
push
aam
inc
and
xchg
lahf
push
push
imul
sbb
rolb
cmp
test
sub
fidivl
and
fucomip
bound
flds
sbb
dec
mov
jae
fildll
loope
out
fnstsw
lcall
daa
test
or
aaa
loope
pop
jno
popa
stos
xor
stc
repnz
adc
or
mov
pop
jle
fstps
lgs
call
xchg
add
push
push
push
push
push
scas
scas
lret
loope
and
stc
pop
inc
hlt
xor
dec
sub
pushf
xchg
add
outsb
jne
inc
jmp
inc
sub
sti
xchg
cltd
add
lods
imul
cld
mov
mov
ret
fst
lods
adc
cmpsb
sub
sbb
scas
jmp
inc
pusha
fsubl
in
mov
mov
mov
cltd
and
and
lret
ficompl
sub
sbb
fs
sarb
pop
inc
and
sbb
adc
fcomps
dec
mov
add
ret
inc
xor
and
out
arpl
repz
loopne
lods
or
xor
mov
mov
shrb
scas
test
outsb
aam
mov
pop
cmp
cli
mov
sbb
cmpsl
es
mov
not
sbb
call
xor
insb
int3
xchg
mov
loop
push
leave
xor
mov
mov
adc
in
movb
cli
cs
inc
inc
dec
cmp
dec
mov
xor
jne
cltd
arpl
lahf
add
mov
push
jg
lods
xchg
mov
and
fsubp
fldl
fstps
jle
pop
jle
mov
or
and
das
add
lret
dec
lea
ss
or
in
jns,pt
and
arpl
insl
insb
push
mov
pop
flds
insl
sub
cmpl
testl
xor
sti
fs
pop
fists
decb
lock
cmp
mov
push
into
mov
shrl
sub
inc
pop
out
adc
sub
mov
sbb
lds
stc
test
or
jmp
mull
jecxz
dec
sub
or
inc
mov
mov
ret
iret
jne
adc
stos
movsl
pop
outsl
push
dec
sbb
cli
sub
iret
mov
push
gs
xchg
dec
or
ret
inc
mov
std
mov
adc
outsl
push
push
loop
ret
push
es
iret
sahf
pop
ret
fildl
aas
add
pop
rep
rcrl
xor
sub
dec
test
sbb
mov
js
cli
mov
or
loope
sti
in
nop
jbe,pn
dec
lods
shl
push
jbe
adc
adc
cltd
popa
inc
pop
pop
push
push
mov
bound
pop
fisttpll
lcall
mov
push
fstps
xchg
cld
dec
repz
sub
push
negb
add
sbb
jmp
xchg
repnz
xchg
fs
cmc
aaa
andb
mov
rorb
imul
sbb
adc
lods
cwtl
inc
xchg
outsb
cmp
sub
clc
aaa
cmp
and
cmc
push
dec
imul
leave
inc
xor
jg
dec
mov
jbe
or
pushf
or
jg
gs
std
pop
and
stos
mov
jno
stc
out
jp
add
push
pop
bound
mov
pop
out
jbe
pusha
cwtl
push
imul
icebp
stos
sub
lret
ja
sub
dec
mov
andl
rol
fistpl
out
xchg
lret
in
std
retw
jnp
repnz
imul
mov
pop
test
add
mov
and
mov
sub
lahf
xor
nop
or
jo
int3
pop
mov
xchg
iret
loop
or
mov
xchg
mov
lcall
xlat
icebp
nop
cmp
aam
std
gs
mov
and
sbb
jp
xchg
push
repz
push
ja
xor
add
mov
pop
xlat
sbb
xchg
cmp
leave
adc
test
pushf
mov
js
insb
jae
sbb
or
mov
jae
rorb
cld
mov
iret
jb
sbb
test
inc
adcb
inc
aas
imul
lea
cld
stos
jbe
decl
popf
leave
push
movsb
push
mov
daa
adc
sub
loope
les
lcall
icebp
insl
jmp
cmp
aaa
xchg
or
cs
test
pop
or
fs
leave
pop
cmp
jbe
and
les
sub
in
aaa
cli
push
xchg
pop
mov
adc
in
or
lcall
xor
into
leave
mov
mov
testb
mov
xor
mov
and
mov
mov
jle
add
in
dec
sub
and
stos
and
mov
das
pop
cmp
sub
adc
mov
sti
jns
xchg
pusha
ror
or
lock
add
pushf
sbb
mov
loope
mov
push
ficoml
pop
or
mov
push
insl
pop
xchg
ret
cmp
movsl
nop
xchg
stc
mov
adc
mov
or
jne
flds
fbld
inc
nop
cmpsl
loopne
mov
sbb
mov
leave
adc
sbb
xor
pop
cmp
xor
push
push
mov
dec
pop
xchg
insl
mov
roll
pop
jnp
and
cmpsl
jmp
or
es
jne
mov
adc
or
popl
mov
orl
add
push
imul
js
lret
lcall
mov
insl
mov
xchg
scas
mov
push
mov
movsl
mov
add
sub
xor
loope
daa
adc
out
add
ds
xchg
rcrl
jbe
dec
fidivrs
dec
pop
push
lods
push
dec
test
ss
insb
adc
mov
in
jp
addl
push
cmp
les
loope
inc
mov
add
inc
push
movb
ret
adc
jle
loop
rcl
aam
jmp
mov
cmp
and
cmp
mov
lret
cs
inc
inc
jge
jmp
sbb
test
repnz
cmp
xor
adc
lret
popf
lds
mov
daa
and
and
mov
repz
std
in
daa
dec
mov
mov
cld
cmp
sbb
cmp
ljmp
fwait
arpl
xor
xor
sti
ds
and
xor
mov
push
scas
or
shl
adc
loop
out
daa
ret
push
lret
addr16
mov
mov
shll
les
xchg
dec
lcall
xchg
pop
jno
mov
test
mov
xor
push
sub
or
xchg
ljmp
sub
mov
mov
cmpb
mov
push
test
sbb
inc
jl
dec
xlat
push
jnp
xchg
adc
enter
sti
push
aas
and
jecxz
dec
adc
popa
outsb
jns
mov
ret
pop
mov
sbb
sub
jns
and
fadds
mov
jbe
fucomp
icebp
popf
add
pop
add
or
jo
inc
rcl
add
inc
fcompl
lret
int
xchg
push
imul
dec
test
je
mov
out
and
movsb
icebp
dec
fstps
cli
rorl
pop
arpl
xchg
out
mov
mov
mov
rcrb
fcoml
xchg
adc
add
push
lret
push
repz
or
ret
nop
dec
add
dec
inc
xchg
scas
stos
ret
push
xchg
les
xchg
sub
cwtl
pop
dec
ret
xor
mov
mov
pop
push
mov
push
sub
mov
xor
sbb
insl
cmp
or
popa
xchg
xor
mov
rcr
pop
in
jb
roll
aad
in
mov
cwtl
sub
pusha
ret
insl
add
addps
shr
repz
aam
shrb
loope
cld
cmpsb
cmc
loop
jns
adc
dec
or
fldl2t
shll
jl
push
xchg
jg
push
mov
xor
stos
pop
mov
mov
das
sbb
fstpl
cmc
push
push
sti
fistpll
mov
cmp
loope
dec
test
popa
pop
mov
adc
or
sahf
mov
jle
mov
stos
mov
fwait
lds
insl
sbb
in
xchg
dec
inc
pop
test
fisubl
iret
sbb
stc
out
std
dec
and
ror
lods
test
popf
or
xchg
and
mov
aam
mov
sub
or
jbe
int
stos
lds
mov
mov
test
sarl
add
ds
adc
subb
pop
cmp
xchg
adc
fldt
mov
int
lea
in
mov
into
shll
sbb
mov
sbb
call
or
mov
inc
sbb
adcl
jnp
jle
in
lods
daa
push
jg
jns
mov
inc
pop
hlt
stc
cmp
and
cmp
aaa
jne
push
jl
repnz
cmp
pop
sub
mov
mov
sbb
outsl
stos
jmp
cmp
xchg
sub
mov
test
mov
flds
icebp
in
mov
jno
jb
adc
inc
sub
call
jae
repnz
dec
add
ljmp
call
lret
xlat
lods
mov
fisubs
in
and
ds
scas
scas
push
inc
test
in
adc
add
rclb
pop
imul
addr16
lods
cmp
imul
and
arpl
ret
jecxz
pop
cld
dec
sbb
pushf
dec
xor
mov
icebp
mov
mov
cmp
fsubrl
pusha
mov
sbb
xlat
jnp
xchg
repnz
jecxz
sbb
mov
bound
aad
or
loopne
frstor
sahf
andl
icebp
test
gs
pop
aad
inc
pop
jle
sarb
imul
mov
insb
or
push
mov
daa
mov
push
sbb
int3
mov
inc
int3
dec
mov
test
scas
and
mov
int
lods
mov
cmpl
sbb
jecxz
sub
fmul
jmp
shll
dec
ret
and
in
cmpsl
scas
hlt
push
mov
and
nop
push
and
or
xor
loop
cmp
aas
xor
adc
sub
or
push
lods
fistpl
daa
stc
inc
xor
pusha
outsl
inc
lahf
movsl
xchg
pop
pop
enter
out
outsb
or
adc
mov
mov
jmp
lcall
or
int3
or
jns
daa
jo
lods
dec
xchg
mov
andb
movsl
mov
movsl
adc
movsb
ret
shl
outsl
loop
cli
and
add
jnp
mulb
gs
pushl
aas
jne,pn
incb
or
repnz
rcrl
inc
out
mov
les
stos
fists
call
mov
sbb
and
inc
mov
loop
lds
ret
lcall
jge
sbb
imulb
inc
fsubl
xchg
sub
nop
shrl
leave
push
jle
push
jl
in
push
jl
jmp
mov
pop
xchg
xor
mov
leave
scas
mov
mov
into
std
and
das
hlt
xor
daa
adc
insb
jge
mov
cwtl
mov
adc
xor
cld
mov
cwtl
jnp
xlat
lock
xchg
push
xchg
jg
lahf
testl
je
push
cld
cmp
in
cmpsb
shlb
sub
stos
and
xchg
push
sti
mull
clc
mov
add
pop
test
pop
test
mov
cltd
xor
or
andb
mov
shll
in
jo
gs
fcos
add
fidivrl
mov
sub
into
aas
sbb
xchg
into
xchg
adc
sbb
out
mov
add
sub
gs
mov
xor
int3
ljmp
stos
subb
dec
cmp
sub
cwtl
gs
pop
pop
fwait
hlt
jb
clc
sbb
gs
push
push
add
or
or
test
shl
hlt
push
mov
int
xor
push
testb
lea
jge
inc
mov
xchg
movsl
enter
hlt
adc
inc
jmp
xchg
adc
fwait
iret
fstpt
dec
inc
add
pop
enter
fdiv
add
ljmp
dec
cltd
out
pop
add
leave
fisttpl
sbb
mov
mov
call
pop
sar
xchg
or
inc
xchg
fildl
fidivs
push
cmp
jns
addr16
rolb
ja
inc
fstpl
pusha
and
ljmp
rcl
mov
sbb
hlt
testb
ds
in
sbb
adc
sub
jno
xchg
scas
cmc
or
daa
jg
sbb
fnsave
xor
addr16
outsl
je
pop
mov
fnstsw
pop
aam
int
mov
mov
leave
add
sub
jb
sbb
mov
lret
outsl
mov
test
fildl
mov
ljmp
cmp
lahf
pop
icebp
mov
lcall
dec
pop
and
mov
push
xchg
mov
bound
dec
xchg
aaa
cmpsb
pushf
test
jb
iret
mov
push
shrl
lahf
movsb
and
ret
jns
pop
xor
or
inc
add
not
nop
lods
dec
xor
and
sub
dec
adc
out
cs
dec
inc
dec
mov
int
test
or
pop
push
xor
sbb
ficoms
adc
push
jae
mov
notb
mov
sub
push
sbb
and
mov
subb
ja
mov
jne
pop
push
and
into
jl
or
push
les
aaa
sbb
inc
nop
call
mov
enter
mov
jnp
cltd
mov
or
icebp
sbb
and
xchg
mov
mov
repz
movsb
jmp
gs
lds
and
stc
mov
pop
push
repnz
add
add
sbb
mov
adcb
push
and
mov
mov
lret
xor
xchg
mov
inc
inc
sbb
inc
bound
xchg
sahf
sbb
loopne
mov
aam
push
xor
sbb
jne
insb
sbb
das
stos
jge
jb
ss
inc
mov
ljmp
or
jle
sub
subl
insl
daa
nop
push
and
cli
popa
or
inc
aas
cmpsl
js
data16
movsb
sbb
mov
stos
inc
jbe
fstl
mov
je
aam
mov
aas
stc
fidivs
lcall
cltd
ret
xchg
adc
lahf
mov
adc
jns
mov
or
cmp
lds
popf
lock
imul
jne
sbb
mov
sbb
push
imul
shrb
out
jp
cwtl
lds
or
loope
sbb
inc
jg
xchg
lret
mov
add
sub
xlat
xchg
dec
es
sbb
push
shlb
pushf
mov
fld
fucomp
fwait
mov
stos
test
loopne
jecxz
enter
mov
fs
mov
outsl
insl
pop
jl
push
mov
leave
movsl
jge
jge
scas
test
mov
je
jo
dec
sbb
mov
cmpsb
jo
sbb
cmpsb
cmc
cmp
mov
pop
ret
adc
ja
xlat
cmp
inc
sbb
pop
mov
push
xchg
lahf
aam
mov
pusha
cmp
ret
inc
add
in
cli
and
scas
dec
out
nop
mov
in
push
insl
jb
push
push
sub
push
jne
pand
imul
fwait
lret
mov
xchg
outsb
sbb
mov
inc
xor
adc
jae
imulb
divl
and
inc
dec
aam
mov
insb
ret
push
jg
mov
mov
jae
push
cmp
imul
decl
cmp
xchg
push
sub
jl
pop
les
xor
or
push
loope
daa
lock
cmp
pop
insl
pushf
mov
js
pop
pop
jne
in
rcll
adc
sbb
stos
cmpl
sub
mov
and
cmp
imul
enter
pop
sbb
jmp
push
ficompl
rcrb
cmpsb
test
nop
push
mov
add
mov
or
lret
jecxz
dec
pop
cld
mov
lock
xchg
sahf
dec
ljmp
pop
les
fnstsw
lret
test
scas
rcrb
inc
sti
rcl
mov
mov
push
mov
push
mov
add
xchg
mov
addr16
repz
sbb
lods
rcrl
xor
pop
ret
addr16
dec
sub
mov
adc
ret
mov
fwait
inc
inc
inc
call
inc
lock
in
push
inc
add
push
dec
mov
test
xchg
aaa
push
mov
imul
push
cld
mov
pop
jnp
shll
add
out
adc
mov
test
mov
inc
xchg
xor
pop
push
xor
push
lock
mov
mov
fisubrl
sub
icebp
cwtl
mov
xchg
sbb
jg
dec
xchg
repz
cmp
inc
push
movsb
addr16
cld
in
popf
adcb
clc
lret
and
dec
les
movsb
hlt
daa
int
adc
push
int
scas
sub
data16
and
adc
movl
mov
and
mov
push
sbbl
push
into
dec
shrb
mov
aam
movsl
stc
stc
lea
mov
paddw
xchg
ffreep
aam
mov
pop
sub
add
std
addr16
adc
mov
jmp
add
dec
xchg
aaa
sub
and
dec
jae,pn
insb
adc
mov
mov
notb
les
stos
popa
test
filds
jns
std
test
mov
xor
mov
add
dec
insl
inc
jl
mov
mov
data16
jne
mov
inc
adc
lret
repnz
flds
pop
arpl
pushf
mov
mov
stos
jbe
push
sbbl
lahf
int3
out
or
in
lret
add
mov
sbbl
sub
inc
dec
rcrb
in
jno
ficoms
out
lret
fstp
and
sahf
fsubrl
cmc
mov
sub
xor
xlat
sarl
push
sub
pop
mov
sub
imul
insb
add
push
sbbl
sahf
cld
test
cmp
insl
aas
cmp
adc
mov
mov
imul
mov
popf
adcl
movsb
rclb
std
mov
push
adc
adc
push
popa
adc
jo
push
mov
std
ret
mov
out
mov
inc
push
and
mov
sbb
enter
mov
out
imul
jp
cld
lret
lea
out
jp
inc
pop
jnp
loop
popf
mov
hlt
xchg
xchg
and
js
iret
or
mov
ljmp
lret
mov
lea
cld
movsb
je
repz
cmpl
add
xor
adc
and
xchg
dec
and
hlt
push
outsl
sahf
jb
push
icebp
adc
insl
adc
cs
mov
shll
flds
or
jmp
push
inc
roll
hlt
push
and
shll
xor
fildll
push
or
call
repz
cmpsl
jmp
cld
hlt
xchg
stc
cmpsl
and
push
ret
push
adc
shll
jno
mov
test
dec
or
sub
add
push
mov
pop
imul
and
lods
movsb
add
pushf
mov
mov
je
or
mov
cmp
jmp
jmp
loop
add
es
xor
pop
dec
aad
or
jo
scas
ror
movhps
jecxz
jb
add
mov
dec
movsb
lock
repnz
push
mov
dec
push
fsub
mov
dec
orl
inc
aad
imul
mov
int3
mov
icebp
iret
jmp
dec
sub
in
shlb
cli
sub
xchg
lcall
sarl
jne
inc
xor
xor
rolb
test
ret
dec
shrl
lods
xor
pop
push
adc
sbb
repnz
adc
popf
push
std
add
jp
and
int3
cwtl
jb
leave
mov
and
cmpsb
sbb
cwtl
gs
lret
shl
insl
push
mov
sbb
ret
bound
in
push
lock
push
stos
lods
push
dec
pop
rep
aad
int3
jbe
sbb
sub
dec
mov
push
mov
dec
push
mov
xchg
jnp
pop
push
pop
lods
test
out
xor
push
push
inc
sub
enter
and
push
lret
push
sbb
dec
push
es
lock
dec
es
aam
ss
lods
xor
mov
jmp
xor
sbb
fwait
mov
into
test
adc
adc
pop
pop
adc
cmpsl
mov
inc
adc
jbe
imul
stos
pop
outsl
sub
mov
xchg
lahf
dec
jmp
pop
or
sub
push
popf
pop
fnstenv
dec
movsl
mov
frstpm(287
outsl
sub
jns
fdivl
adc
and
cwtl
xor
sahf
cmpsl
jb
lahf
mov
fistps
in
adc
movsl
jmp
jb
stc
push
test
dec
out
lods
cmp
adc
int3
mov
xor
cmp
add
cmpsb
hlt
mov
clc
repnz
lcall
lods
scas
loope
std
and
jge
cmp
rcrl
pop
inc
cmp
lcall
add
lods
jbe
lock
outsl
xchg
inc
aam
out
into
ja
push
mov
sub
adc
hlt
xchg
adc
push
xchg
mov
xor
inc
pop
int
ja,pt
xchg
jge
add
dec
jns
push
cmp
shrl
enter
xorl
mov
int3
mov
xchg
ficoms
and
cld
cmp
or
in
pop
mov
daa
mov
out
loope
call
or
mov
pop
pop
xchg
popf
add
dec
sarb
mov
popf
jle
jg
mov
inc
out
sarl
clc
in
mov
or
jecxz
adc
ja
mov
aam
inc
push
out
dec
sbb
xchg
sti
nop
add
cs
fdivl
push
or
inc
pop
push
mov
inc
xchg
ja
fnstsw
dec
mov
test
ds
ret
jecxz
xchg
gs
xchg
leave
xor
das
shrb
popf
push
jo
dec
stos
jg
sub
das
push
js
outsb
out
lahf
popf
mov
lds
push
add
sbb
das
xor
into
imul
push
pop
ja
mov
and
out
jae
rcrb
popa
and
dec
sti
and
push
nop
jbe
jp
jbe
mov
hlt
nop
pop
dec
int3
fwait
cmp
mov
cmp
movb
cmpsb
leave
in
add
pop
dec
sub
sub
insl
idivb
mov
pop
xor
and
or
mov
cltd
xor
inc
dec
jae
inc
push
sbb
idiv
jecxz
pop
xchg
fmull
cmp
adc
fsubrs
in
inc
xor
xchg
push
pushf
adc
or
or
mov
xor
pop
or
fisubl
dec
loopne
mov
cmp
nop
inc
mov
inc
nop
arpl
je
mov
dec
or
mov
int3
jecxz
out
loope
cmp
fsub
and
into
jne
xchg
andb
cs
icebp
fwait
rcrb
mov
pop
push
cmp
jmp
fimuls
cld
inc
enter
or
inc
mov
stc
cs
imul
inc
jge
sbb
lea
mov
repnz
test
jecxz
flds
push
mov
push
out
js
xor
cs
xchg
jge
mov
movsl
mov
cs
sub
sbb
jbe
rolb
add
ds
xchg
dec
jns
mov
cmp
xor
das
xor
cltd
ret
jmp
sub
or
mov
xchg
lds
cwtl
je
mov
push
imul
jmp
imul
jl
in
push
sbb
inc
faddl
add
ds
fwait
addr16
jmp
push
fsubrs
mov
fcomps
addr16
lods
clc
xchg
pop
ficompl
pop
adc
xlat
in
xchg
xor
mov
stc
loop
add
cltd
or
xor
jecxz
pop
jmp
add
testl
into
mov
std
pop
dec
adc
loop
cld
adc
sahf
jae
pop
lods
xchg
loop
cmc
fldcw
and
mov
hlt
cs
in
ljmp
mov
sub
mov
nop
ljmp
inc
add
ret
xchg
adc
mov
mov
mov
push
shll
push
jg
mov
or
dec
addr16
and
jp
insl
sub
xchg
jno
outsl
cmp
inc
adc
pop
jns
or
jns
jnp
aas
mov
and
pusha
mov
imul
sti
aad
add
test
xchg
into
aam
sbb
xor
jo
imul
xor
sbb
aam
mov
in
pop
xor
mov
xchg
jne
lret
incb
idiv
inc
sub
push
es
adc
and
sbb
push
inc
dec
and
dec
outsb
lods
jmp
stos
fs
xchg
or
pop
repz
add
dec
arpl
cmp
pop
or
rorb
sbb
pop
lea
mov
and
xchg
decb
mov
lea
xor
dec
cli
adc
fisubrl
das
or
adc
push
inc
mov
stos
or
mov
mov
sub
addb
fldl
es
ljmp
in
mov
daa
push
cmp
mov
insl
jns
push
in
xor
pop
dec
mov
dec
mov
cmp
push
aad
xchg
xchg
ja
ja
sbb
insl
cmp
popa
or
pop
sub
mov
addb
popa
lahf
ret
ret
mov
cmp
inc
mov
jne
push
jbe
or
lock
dec
mov
or
icebp
mov
dec
clc
sbb
push
jp
std
pop
xchg
rorb
mov
mov
lcall
mov
pop
je
push
jp
aas
mov
push
push
add
insb
cmp
int3
adc
fstp
pop
pop
mov
xchg
testb
int
insl
repz
pop
dec
les
aas
mov
cwtl
xor
sub
push
std
data16
push
inc
in
test
inc
hlt
xor
cmpsl
pop
dec
ret
cwtl
test
jb
pop
mov
add
cmp
std
fdivr
sbb
push
sub
inc
mov
jg
repz
mov
neg
push
cli
out
and
mov
add
mov
lds
sbb
rcrb
xchg
adc
enter
sbb
push
das
dec
sbb
insl
fcomps
test
cs
push
and
out
cmp
into
and
fidivl
ljmp
mov
mulb
mov
loope
jle
fs
and
pop
insb
xorb
and
vpslld
cli
adc
cmc
xorl
mov
xchg
hlt
adc
test
aam
inc
addr16
test
jae
mov
test
cltd
jp
cmp
sub
pusha
jae
in
mov
jno
jl
jmp
bndstx
jne
mov
add
xor
and
adc
inc
cwtl
mov
fidivrs
aaa
lea
dec
mov
or
aaa
xlat
mov
adc
mov
xor
std
ljmp
mov
imul
mov
jo
mov
add
adc
pop
notb
imul
xor
fcmovbe
psubusw
insb
stc
out
lahf
add
mov
mov
xchg
aam
sbb
test
arpl
stos
and
mov
dec
mov
int3
mov
scas
aas
nop
in
popa
adc
mov
mov
mov
jle
jmp
lods
jne
adc
push
mov
push
dec
jbe
jp
cld
jne
subl
sub
mov
push
push
adc
test
cmp
push
in
imul
cs
scas
dec
icebp
inc
in
push
and
lock
jmp
gs
je
push
std
loop
mov
pop
jecxz
sarb
out
outsl
nop
fidivs
ffree
cmp
in
ret
je
lock
int3
inc
test
pop
in
or
mov
ja
xchg
pop
sub
push
sub
and
pop
pop
enter
shl
cs
and
sub
inc
sbb
scas
add
fwait
pop
dec
sbb
and
and
out
mov
sbb
aas
scas
ficoms
fdivl
dec
push
pop
dec
jmp
or
pop
hlt
pushf
cwtl
sub
lahf
out
sar
jmp
ds
arpl
outsl
fisubl
jb
sbb
add
fstp
ja
std
loopne
in
negl
jbe
push
jbe
loopne
mov
xor
mov
inc
xchg
mov
ja
xchg
or
cmp
in
push
dec
mov
sbb
sub
inc
push
les
sbb
jg
cmpsl
mov
je
repz
scas
and
cmp
inc
jmp
icebp
and
add
lret
push
xchg
outsl
push
clc
and
sahf
popa
shll
jge
mov
lcall
jmp
shll
add
rcl
rcrb
cs
and
addr16
dec
dec
das
in
xor
cmc
repnz
adc
inc
fs
mov
cmc
imulb
arpl
loop
ret
stc
cmp
lcall
mov
ret
loop
js
cmp
inc
and
mov
xorl
xchg
mov
lods
ficompl
jg
mov
sahf
pop
add
aas
xor
jbe
into
lcall
imul
push
mov
ljmp
pop
cs
mov
sub
sarb
iret
mov
inc
xchg
inc
jne
cwtl
jne
mov
jb
gs
cmp
push
adc
or
arpl
add
fwait
insb
fwait
sbb
sub
popa
stos
mov
sbb
pusha
incb
pop
mov
lea
mov
nop
mov
clc
jg
xchg
adc
icebp
or
lods
adc
call
movsl
mov
pop
test
cmp
pop
loopne
mov
and
jo
xchg
dec
jae
mov
in
loope
xchg
jmp
sbb
lods
add
sbb
cmpsb
cmp
xchg
movsb
mov
popf
inc
xchg
or
bound
push
mov
nop
das
out
push
iret
sbb
adc
dec
fwait
mov
or
mov
sti
aaa
outsl
xchg
lds
fsubl
sub
mov
xor
mov
sub
ret
data16
push
pop
in
mov
jb
pop
inc
mov
mov
jbe
fistpll
push
bound
jmp
xchg
and
adc
rcr
sti
into
out
push
daa
aad
ss
add
sti
test
push
mov
rcr
popa
or
cmp
out
pushl
jb
cmp
data16
in
and
pop
or
pop
pop
jnp
or
jb
js
push
adc
sbb
dec
test
pushf
mov
mov
xchg
push
lcall
dec
lret
push
xorb
pop
jecxz
cli
lock
je
lret
shll
xchg
mov
popa
lods
aaa
or
sarl
mov
scas
push
inc
mov
out
shll
pop
push
mov
sbb
jb
cmp
leave
addl
adc
jecxz
add
inc
test
push
loopne
idivl
add
inc
daa
or
clc
lds
xchg
mov
pop
dec
cmp
push
jmp
stos
repnz
stos
push
sbb
mov
jae
hlt
into
movsl
testb
add
pop
shlb
cld
ffree
hlt
jne
and
inc
in
std
jne
ret
mov
in
push
gs
mov
sub
add
inc
out
xchg
sahf
pop
mov
jl
sbb
lods
inc
scas
and
and
fs
repz
fildl
push
xor
or
or
mov
sub
outsl
in
lods
lcall
inc
pop
outsb
pushf
dec
mov
loopne
mov
decl
aaa
push
dec
cmc
push
arpl
movsb
jne
outsb
cwtl
adc
cmp
mov
in
mov
subb
aam
pop
test
popa
xchg
insl
repnz
hlt
jmp
clc
inc
sti
fwait
xchg
sbb
fs
lods
add
stc
inc
repnz
ss
fstps
cmp
je
xchg
std
jmp
xchg
jp
aad
adc
and
and
or
jae
cmp
mov
xchg
rcr
adc
lahf
xorl
sarl
cmpsb
fnstenv
add
dec
loopne
and
test
and
ja
and
sbb
jl
lds
loopne
xor
xor
jae
xor
hlt
movsl
sub
dec
stos
pop
ret
cmp
cmp
jnp
sbbb
lods
pop
jmp
or
mov
loope
test
arpl
dec
mov
aad
sbb
mov
ja
jno
xor
dec
xor
xchg
push
stc
lds
fdivrl
stos
out
leave
sahf
cmpsb
loope
add
push
xchg
arpl
mov
or
sub
push
mov
int
pop
cmpsl
cmpl
aaa
hlt
mov
inc
iret
insb
lret
icebp
outsl
out
xchg
or
pop
xchg
cmpsl
mov
sbb
push
xlat
negb
xor
shrb
fmull
incb
jge
aad
adc
lret
push
lods
lock
adc
mov
cltd
push
ds
add
mov
cmpsl
dec
fidivrs
das
dec
sub
daa
adc
jbe
xor
insb
xchg
xor
rolb
cmp
push
arpl
repnz
add
jge
cmp
push
sbb
lret
push
sti
xchg
std
jg
mov
add
xor
cmp
bound
shrb
notb
cwtl
arpl
fs
std
inc
mov
jle
sbb
sahf
cs
push
es
sbb
decb
pop
inc
mov
or
jp
imul
pop
loop
lods
bound
push
test
sbb
pop
pop
jmp
mov
add
mov
pop
cmp
jmp
mov
std
or
jmp
push
mov
mov
mov
mov
rolb
mov
movsl
jp
xor
add
sbb
jb
pop
fbld
insb
je
lds
pop
fsubs
jns
sahf
sub
pop
lret
xchg
mov
sub
imul
aaa
xchg
mov
add
xchg
std
adc
inc
xor
jge
xchg
popf
in
stos
pop
ja
and
mov
mov
sbb
dec
cmp
div
mov
sbb
adc
mov
and
xor
fistpl
lret
cwtd
lret
repz
cmc
push
pop
stos
movb
aas
xor
jmp
dec
sbbl
mov
mov
icebp
rclb
mov
fstp
sub
or
dec
or
stc
inc
cmp
aas
enter
mov
inc
int3
inc
sbb
loop
cld
dec
loopne
mov
xlat
mov
push
bound
cmp
out
inc
prefetch
mov
pop
cmc
out
or
imull
xchg
test
jge
std
das
adc
in
leave
mov
adc
or
add
fmulp
mov
xrelease
xor
pop
sbb
mov
xchg
fisttpll
pop
or
and
adc
div
fwait
aad
mov
sti
movsl
dec
mov
sarb
adc
into
lret
repz
cmpsl
jb
repz
jb
fildll
les
sub
divb
aad
or
jne
cmp
cmp
add
xor
stos
mov
ror
scas
test
sub
stc
and
ja
pop
test
pushf
mov
mov
lock
mov
push
jne
test
divl
and
enter
push
mov
loopne
stos
out
int3
and
add
shlb
mov
cmp
push
xor
pop
push
dec
jmp
push
add
cmp
decl
sub
push
xlat
mov
out
push
jno
outsl
fldt
jg
lds
lock
sbb
sbb
xlat
loopne
das
icebp
test
js
mov
movsb
in
xchg
loopne
mov
in
aaa
fisttps
mov
mov
popf
daa
mov
jno
out
out
int3
push
sti
icebp
adc
dec
fnstcw
pop
insb
mov
pop
fisubrs
loop
stc
or
movsb
adc
inc
mov
or
repz
sub
ja
js
xor
lret
sub
pop
sbb
scas
mov
push
pop
push
mov
movsb
push
mov
fwait
or
mov
scas
fsts
subb
adc
adc
xchg
ljmp
mov
outsb
jns
add
cli
lea
cmp
cmp
into
les
mov
xchg
mov
out
popa
fsubr
sti
sbbb
mov
out
push
outsl
xchg
shll
pop
arpl
lahf
int
fisubl
shr
push
inc
xchg
fwait
cwtl
movsb
out
mov
and
fisubrs
fsubrs
nop
int
mov
cmp
movsl
test
xchg
cli
mov
loopne
add
inc
adc
ret
pop
xchg
insb
stc
cs
sbb
mov
sub
je
and
mov
std
aas
cs
cli
dec
add
xor
or
out
adc
add
and
bound
roll
mov
push
pop
push
cmp
dec
mov
inc
adc
cli
js
push
mov
mov
xchg
xor
pop
adc
lret
aad
or
jne
adc
xchg
push
repz
and
js
adc
sbb
scas
in
in
and
jmp
idivb
in
addr16
clc
sub
jle
pop
rol
sub
mov
rol
in
push
push
mov
mov
cld
mov
dec
divl
push
and
mov
cmp
xor
test
rol
idiv
or
outsl
push
out
push
xchg
inc
outsb
lret
inc
std
insb
or
sbb
jp
push
pop
push
fcoms
jge
pop
rcl
les
pop
in
jnp
xchg
mov
jle
mov
push
lds
dec
mov
ljmp
aam
push
lret
cmp
subb
imul
pop
cmc
inc
jmp
sub
jle
insl
cmp
and
mov
bound
and
ror
mov
lahf
xor
mov
fildll
xchg
mov
mov
sahf
test
adc
ss
dec
test
cmp
stos
in
iret
lahf
adc
jle
sub
ds
push
push
xchg
add
lea
out
out
aad
inc
dec
ffreep
cld
jae
adc
stos
out
hlt
outsb
clc
xchg
adc
dec
add
or
adc
mov
mov
cmp
in
fs
adc
lods
xchg
pushf
mov
xchg
es
pop
xor
shll
cmpsl
add
leave
dec
or
and
jns
in
clc
xor
mov
js
push
xchg
sbb
jle
cmpsl
mov
push
in
or
movsb
int3
inc
scas
jae
popa
jns
pop
lock
jmp
in
icebp
mov
jl
movsb
push
ficoml
mov
push
std
testl
lcall
pop
out
xor
jge
les
cld
std
ret
mov
mov
scas
adc
popa
lahf
mov
clc
jb
fwait
subb
mov
push
lock
das
int3
in
fildll
add
mov
inc
sarb
hlt
xchg
jge
aaa
stos
xchg
sub
cs
adc
shl
xchg
js
inc
inc
cmpsl
xchg
in
sti
xchg
aas
sbb
std
mov
lcall
or
push
repnz
mov
mov
xchg
faddl
repnz
mov
dec
mov
jmp
sbb
jb
jne
loope
mov
out
xchg
outsl
aas
rclb
sub
xchg
push
xor
jmp
mov
icebp
ljmp
or
push
ds
popf
push
fisubs
inc
mov
add
loopne
and
aam
stos
or
adc
pop
int3
mov
push
movsl
dec
ret
mov
leave
add
ror
cmp
popf
test
int3
daa
mov
push
mov
xor
push
mov
stos
aam
in
in
cli
sbb
xor
stos
push
bound
jge
sub
lret
and
add
push
aas
xor
into
leave
out
or
mov
mov
lods
hlt
mov
push
mov
or
fistpll
jnp
jge
inc
aaa
vcomiss
push
push
xor
out
sub
pushf
iret
mov
subl
insl
lods
jbe
fldenv
cmp
addr16
mov
inc
push
cwtl
outsb
cwtl
and
call
cmc
cmpsb
in
push
in
push
stos
mov
push
lahf
xchg
test
add
xchg
int
dec
bnd
mov
dec
mov
inc
xchg
cmp
jp
sbb
jmp
in
rorl
sub
mov
pop
ret
inc
inc
sti
and
add
mov
add
fidivrs
arpl
add
xchg
repz
rorb
mov
cltd
gs
jmp
dec
mov
fwait
mov
mov
imul
jmp
in
adc
out
rorb
int
jl
in
push
clc
lret
fst
mov
pop
xchg
ucomiss
xchg
jo
inc
dec
fs
mov
sub
jmp
mov
or
mov
mov
gs
leave
fsubrl
or
mov
ret
add
in
sbb
mov
sub
pushf
xchg
push
xchg
loopne
fiadds
scas
out
cmpsb
xchg
stos
inc
es
mov
movsl
jns
incb
pushf
mov
in
pop
jns
jb
fsubrp
sub
mov
adc
loop
sub
push
jl
xchg
int3
dec
fistl
mov
mov
call
cmp
dec
ljmp
fstps
fadd
sahf
gs
outsb
fisubs
aam
std
or
in
lea
dec
sahf
push
or
mov
icebp
mov
mov
int
int3
das
push
and
cld
mov
lods
mov
mov
lcall
test
sbb
cmpsl
mov
std
hlt
sub
mov
pop
mov
mov
add
mov
call
push
and
sbb
test
arpl
cmp
ds
repz
inc
cmp
sarb
xchg
mov
call
rclb
push
adc
std
push
repz
cmp
cli
stos
lods
inc
xchg
cwtl
and
xorb
dec
out
mov
out
xlat
addb
push
lock
cmp
aad
or
arpl
mov
add
mov
lahf
xchg
and
cmp
mov
in
in
lea
jg
lea
or
mov
or
aad
addl
jo
in
mov
aas
enter
jge
sub
in
pop
xor
mov
insl
mov
pop
and
loopne
jge
pop
jp
pop
sub
or
in
sub
push
add
jecxz
test
loopne
aaa
ja
shlb
test
imul
adc
mov
and
hlt
sub
dec
dec
or
mov
sbb
or
or
mov
push
or
sub
imul
insb
mov
repnz
outsl
add
lcall
push
push
ljmp
jns
data16
std
test
cmp
int3
icebp
cwtl
out
das
dec
testb
fsubrl
or
mov
mov
mov
das
ror
call
and
cli
inc
pusha
jne
arpl
in
repz
out
pop
or
jo
test
pop
pop
ret
lods
dec
or
ljmp
das
aad
negb
sbb
push
and
sbb
jno
outsb
into
lds
lret
xchg
insb
xchg
sbb
adc
je
bound
mov
adc
lods
pushf
or
cld
adc
xchg
sub
test
inc
dec
sbb
adc
push
mov
dec
push
sbb
xchg
xchg
vsubss
cmp
fdivrs
pop
lea
icebp
rcrb
sbb
pop
sub
push
jl
xchg
xchg
sbb
aam
cmp
mov
aas
loopne
or
sbb
sti
mov
lret
pop
fwait
jo
cld
xlat
add
sti
pop
cwtl
jo
push
xchg
stos
insb
mov
cli
scas
xor
xor
ljmp
or
push
mov
dec
pop
notl
orb
call
push
mov
bound
and
scas
dec
xchg
leave
call
mov
cmpl
fadds
scas
xlat
xor
rcrl
add
das
arpl
xor
jge
fisubs
mov
mov
cmp
pop
repz
ja
push
data16
jecxz
data16
enter
jl
xor
dec
xor
in
inc
xchg
ljmp
pop
out
test
and
int3
dec
adc
les
neg
jp
call
push
push
mov
mov
inc
fsubp
call
aam
aam
inc
es
imul
cmp
enter
jmp
mov
and
add
jle
imul
jno
mov
iret
das
pop
ljmp
push
xchg
jb
sbb
push
stos
lock
call
fisubs
push
adc
arpl
xlat
ficomps
xchg
inc
mov
cwtl
movsl
pop
sub
insl
jb
add
incl
inc
add
xchg
push
or
sub
jl
cmp
jo
out
jmp
pop
dec
lahf
mov
nop
cmp
jns
lods
xchg
cld
dec
ja
cmpsl
ss
mov
push
adc
jns
or
push
mov
xchg
fldl
dec
stos
mov
scas
int3
ucomiss
nop
pop
dec
lret
cmp
push
sub
pusha
cmc
fisubrl
adc
pop
cmp
xchg
inc
add
cwtl
pop
sbbb
mov
xor
sbbb
sub
arpl
js
sbb
push
jecxz
nop
add
pop
inc
push
cltd
je
std
fnstsw
insl
add
mov
mov
sbb
inc
sub
sbb
mov
cwtl
test
sub
adc
out
in
or
xchg
jae
in
test
push
jnp
xor
test
mov
or
add
push
fsubrl
rcrb
shr
mov
adc
xor
fwait
in
mov
inc
test
mov
cmp
inc
stos
push
xlat
test
ljmp
jp
ss
inc
add
shr
push
sub
mov
test
lock
lock
sub
imull
inc
mov
sbb
xor
stc
dec
lcall
push
push
mov
subl
loop
in
mov
mov
cmpb
loopne
inc
hlt
out
movsl
mov
push
mov
push
dec
fsts
out
subb
into
push
xor
das
dec
popa
push
or
sub
es
jmp
fcoml
rcr
adc
dec
int3
sub
jae
mov
aam
out
adc
xchg
dec
dec
in
pop
xor
xchg
push
push
pushf
add
and
jb
fisubrs
cmp
jge
mov
mov
cld
aad
arpl
and
xchg
add
push
mov
jbe
clc
call
xor
out
rcll
or
fwait
adc
mov
out
xor
xor
mov
xor
fsubs
add
jnp
xor
mov
loopne
mov
cld
mov
call
test
push
adc
divl
or
jl
popf
aas
in
push
ror
into
sub
cmp
leave
pop
stos
mov
jae
divl
je
mov
sub
cmc
or
push
aas
aas
lcall
or
mov
movsb
jl,pn
xchg
jbe
push
xchg
jecxz
push
xor
nop
xchg
adc
jae
test
movsb
rorb
cmpsb
int3
loopne
lret
movsl
cld
into
inc
inc
xchg
sub
inc
aad
shr
dec
pop
out
xchg
popw
pop
jo
push
cs
or
int3
fmuls
stos
push
xor
sarl
stc
sub
mov
jl
insb
jecxz
cmpl
add
lock
inc
iret
sbb
mov
pusha
into
loope
inc
mov
xchg
or
mov
cmp
sbb
mov
cmp
push
inc
inc
push
adc
aad
jnp
mov
dec
add
sbb
or
dec
test
or
sbb
movsb
dec
inc
fcoms
cli
int3
dec
js
push
les
jl
js
cs
cltd
sbb
in
ds
sub
dec
mov
mov
mov
jmp
stos
fstpl
and
dec
add
movsb
xor
dec
inc
test
inc
nop
cmp
add
sub
pop
xchg
subb
cmp
mov
lahf
push
test
mov
je
or
cli
mov
push
pop
cmp
shll
imul
push
adc
scas
out
insb
push
loope
add
cs
cmp
cmp
xchg
lret
ficomps
aas
mov
js
adcl
sbb
push
xchg
cwtl
mov
jo
enter
inc
lock
cmp
popa
rorl
shrl
test
repz
dec
pop
es
out
push
adc
icebp
insb
movsb
push
cwtl
loopne
fwait
push
inc
push
cmpsl
inc
xor
xchg
push
xlat
vstmxcsr
fs
iret
dec
ret
adc
push
ja
jle
loop
mov
lods
stos
jb
pop
cld
add
rcrl
add
push
out
lods
or
fcomps
lods
insb
stc
pushf
mov
push
add
push
push
xorl
fidivrs
or
pop
dec
or
mov
hlt
es
test
mov
mov
loopne
xor
shrb
fs
push
xchg
rcrl
sub
fwait
rorb
push
roll
nop
add
sub
mov
movsb
or
cmc
adc
dec
in
fwait
insl
inc
xchg
mov
ret
out
jbe
fstps
inc
scas
sbb
ja
and
mov
sahf
adc
das
xchg
jecxz
cmp
push
xchg
cmp
test
insl
mov
jb
xor
lret
repz
pusha
xchg
pop
pop
movsb
lcall
dec
es
add
sahf
push
lahf
push
int3
and
arpl
inc
sbb
js
scas
push
cmp
test
cmpsb
pop
in
cmp
in
test
fwait
aaa
adc
scas
push
leave
xor
xor
and
pop
jns
push
jbe
mov
cmc
addb
scas
mov
lds
lods
movsl
xchg
push
notl
test
das
enter
out
subb
in
mov
test
add
stos
jmp
ss
nop
sbb
insl
into
mov
jmp
sub
sub
mov
mov
xchg
aas
or
mov
aas
pop
push
dec
mov
dec
mov
mov
clc
sbb
inc
xor
loop
into
in
repnz
sub
scas
mov
loop
lods
or
mov
dec
cwtl
into
incl
jge
sub
cmp
add
shlb
pop
inc
int3
rcrl
in
je
dec
aaa
push
xor
add
movsl
fisttpll
push
cmp
outsb
add
sbbb
push
idiv
stos
pop
pushf
negl
cmp
pushf
dec
and
test
adcl
repnz
sbb
clc
imul
std
sbb
out
dec
xchg
scas
pop
push
jo
test
mov
in
pop
movsl
fwait
jg
xchg
iret
push
test
cmp
mov
lea
jae
test
sub
daa
hlt
mov
xor
pop
popa
fsubs
adc
sti
or
in
sbb
mov
and
mov
jmp
mov
adc
xchg
and
sub
sbb
shlb
lods
pop
jl
outsb
fsubr
lods
fcoml
outsb
je
and
test
mov
aad
add
negl
rclb
cmp
adc
ret
movsl
mov
sbb
das
outsl
jnp
dec
mov
inc
push
fsubr
repz
dec
fiadds
lods
mov
movsb
jo
xor
lods
cli
daa
sahf
fs
or
and
xor
dec
inc
ljmp
clc
iret
stc
pop
lea
jnp
xchg
lds
cwtl
sahf
xchg
out
cs
repnz
lret
add
xor
js
in
xchg
testl
cld
fwait
shrl
jle
sbb
push
sub
jns
xor
pop
cmp
repz
lods
outsb
lods
jecxz
sti
je
jb
lahf
mov
das
jb
jl
int3
std
mov
jnp
xchg
cmp
movsl
jecxz
scas
lcall
std
addr16
arpl
imul
repz
jl
push
out
sbb
mov
into
add
xor
mov
fimull
inc
jmp
loop
and
push
and
jg
cmp
testb
inc
addb
imul
mov
pusha
cmpsl
adc
sbb
mov
mov
mov
xchg
aaa
cltd
imul
sub
andl
mov
imul
pop
mov
adc
or
int3
je
xchg
int3
cwtl
push
imul
sbb
or
push
xchg
pusha
add
dec
mov
test
test
xchg
mov
mov
iret
sarb
ljmp
testb
mov
jno
pop
xorb
fbld
xor
mov
xchg
hlt
mov
repnz
int3
movsb
push
push
add
cmc
lahf
or
push
xchg
mov
inc
push
leave
in
fcomi
xor
mov
dec
rolb
insl
jmp
xor
daa
rorb
push
dec
xlat
or
and
fs
or
fisubl
pushf
inc
into
imul
sub
ljmp
aad
push
das
hlt
jns
mov
dec
lret
mov
xchg
jp
jg
lock
or
push
lods
fs
sti
dec
sub
call
lret
xor
call
popa
xchg
addl
or
jns
mov
cmp
lahf
inc
mov
ret
pop
cmpsl
xchg
add
mov
inc
out
aaa
std
xchg
stos
and
arpl
or
lock
jecxz
and
mov
add
stos
mov
aaa
ret
mov
lahf
xor
dec
std
shr
jbe
xor
push
lock
pushw
daa
adc
dec
les
repz
cmpsb
pop
test
lea
or
out
dec
cmp
idiv
repnz
xchg
or
sub
repnz
fdivrl
scas
xchg
jmp
insl
enter
leave
es
fcompl
push
in
in
stc
dec
fdivs
sahf
fisubs
jmp
xchg
cwtl
movsl
and
mov
jecxz
dec
or
shrb
adc
jns
sub
je
sbb
inc
enter
push
pusha
cwtl
mov
add
test
popf
and
je
ja
filds
xor
mov
push
mov
pusha
add
std
ret
cmpsb
clc
lcall
inc
and
jne
adc
stos
or
daa
adc
lods
inc
xchg
mov
outsb
mov
aad
int3
inc
adc
dec
divb
cmp
in
fistps
xchg
xchg
sbb
or
xor
add
fwait
inc
dec
or
loopne
inc
clc
bound
dec
adc
pop
int
mov
movsb
fdivl
dec
mov
xor
and
pop
xor
jp
rol
test
inc
push
adc
sarl
cmpsl
repnz
sbb
xchg
pop
pop
adc
iret
dec
cmpsb
shl
inc
push
jge
mov
sahf
mov
dec
loopne
push
out
roll
mov
cmp
mov
test
pop
or
aam
lahf
push
cmp
and
add
fnstsw
ds
push
ret
jmp
cs
cmp
mov
jno
lret
inc
mov
or
lds
inc
jo
cwtl
push
popa
cmp
mov
push
aaa
jbe
pop
out
push
push
push
fsubrs
inc
or
dec
rolb
fnsave
sub
push
fs
xchg
sub
xchg
das
clc
jns
pop
cmp
xchg
stos
sahf
outsb
sahf
pop
lock
mov
cmp
cmp
imul
sbbb
pop
xchg
cmpsb
xor
mov
xchg
hlt
sub
jg
mov
jg
sbb
jno
mov
aam
lods
pop
fcomps
insl
loopne
fwait
cmp
test
sbbl
inc
stc
iret
push
sbb
cwtl
pop
mov
adc
or
sti
mov
inc
loope
add
scas
pop
cmp
mov
aad
jnp,pt
not
ss
aam
xchg
mov
in
push
movsb
fstpl
xor
outsl
cmc
mov
nop
data16
rcll
lods
fsub
sub
fcom
js
adc
cmp
jmp
outsl
pop
push
lods
daa
mov
dec
dec
mov
adc
add
add
mov
add
xchg
loop
adc
out
lods
into
addr16
scas
popa
and
pop
lahf
in
push
inc
jb
cld
or
sub
movsbl
loop
push
mov
xchg
jle
adc
dec
popf
fdivp
jl
mov
outsb
andb
ss
xor
push
sbb
stc
mov
lea
icebp
fcmovu
daa
in
movsb
xor
xchg
dec
add
adc
cli
push
pop
jnp
mov
add
repz
xchg
mov
bound
push
jb
mov
cmp
pop
push
jns
cltd
pop
mov
call
add
and
out
cmp
negl
outsl
imul
cmc
movsl
mov
mov
scas
popf
aaa
test
ret
mov
dec
scas
xchg
cmp
lahf
sub
mov
cmp
sub
jno
movl
orl
mov
test
fisubrl
inc
and
cli
inc
loop
xchg
cmp
xorb
pop
and
jecxz
loopne
adc
xchg
test
adc
clc
rcll
fwait
sbb
push
or
ds
push
inc
hlt
push
fisubrl
pop
mov
push
xchg
push
test
xor
fistpl
fisubrs
js
int3
jmp
into
mov
mov
sbb
fcmovne
jp
xor
std
shll
stos
adc
es
xchg
sbb
nop
call
xchg
mov
int
shll
and
in
push
loopne
aas
nop
dec
jne
or
iret
loopne
and
jecxz
push
cmp
push
mov
dec
in
pushf
sbb
xlat
test
xor
mov
insl
daa
or
xchg
cmp
adc
inc
mov
and
xlat
push
dec
pop
pusha
push
and
sbb
mov
add
sbb
clc
jb
dec
xor
hlt
adc
in
push
dec
sub
mov
fldenv
and
mov
nop
push
sbb
sub
jecxz
enter
std
pop
lret
shlb
push
dec
mov
xchg
pop
in
xchg
xchg
inc
xchg
ret
divb
mov
mov
addb
jle
cmpsb
loop
mov
jge
loopne
fisttpl
push
push
jnp
cmp
cmp
test
sbb
mov
daa
cmpsl
push
mov
cmpsb
add
xchg
inc
stos
sbb
fwait
sahf
mov
scas
es
dec
arpl
clc
jae
sbb
pop
pop
call
cwtl
sub
shl
inc
fs
or
test
leave
push
aaa
or
xchg
rorl
jb
jle
inc
xor
xor
in
std
jne
push
ret
push
pop
pop
xchg
mov
stos
inc
cmp
pop
push
mov
push
loop
jp
adc
rorb
pop
or
inc
inc
and
loopne
push
add
push
aaa
fiaddl
cmp
sbb
mov
lret
push
lods
fsubrs
xor
aaa
add
mov
push
jbe
fs
cmp
call
xchg
add
adc
jp
pop
repnz
adc
jl
pop
mov
into
or
mov
outsl
movsl
mov
dec
cltd
push
aam
rorb
xlat
xchg
inc
adc
pop
inc
add
popa
inc
xor
loope
insb
add
mov
cmp
mov
mov
ds
sbb
shll
xchg
sbb
mov
lret
int3
or
and
cltd
mov
inc
cs
pop
ja
and
xor
pop
dec
leave
loope
shll
xor
sbb
xlat
inc
mov
mov
xchg
and
cltd
mov
data16
mov
std
and
ja
sub
dec
out
lods
xchg
xor
jo
mov
push
lahf
jb
xor
dec
movsb
stos
push
in
xor
push
inc
xor
mov
push
push
lods
outsl
inc
jl
int
loop
pop
lea
dec
cmp
xor
lahf
mov
xchg
out
decl
rcrl
sbb
or
dec
in
cmp
test
ret
stc
dec
pop
mov
cltd
out
shl
faddl
repz
cmpsl
push
arpl
mov
and
mov
aad
mov
dec
mov
lret
push
fistps
sub
ss
sub
mov
cmpb
push
fldcw
stc
test
fdivrs
mov
cmpb
cmp
repz
inc
dec
lcall
cmp
sbb
xor
sbb
xchg
add
into
daa
inc
int3
ljmp
xorb
sub
jg
dec
mov
lods
jb
mov
push
in
lret
popl
sbb
or
sbb
jb
jmp
mov
and
stos
mov
xchg
pop
cmp
in
dec
loop
mov
fisubrl
inc
scas
in
xchg
jne
push
mov
sub
mov
mov
lods
push
push
mov
ljmp
mov
inc
mov
push
fists
test
imul
jg
cld
add
push
in
jg
popa
lcall
or
xchg
mov
jl
mov
adc
sbb
stos
mov
fs
in
cmp
push
lods
dec
xchg
xor
xor
cmp
xchg
pop
mov
or
xor
push
jns
je
adc
mov
scas
sub
sbb
inc
lods
or
xchg
int3
lea
jmp
xor
out
adc
scas
insl
out
fdivr
or
addr16
mov
add
test
sbb
inc
mov
cld
cli
stos
lcall
dec
xchg
shlb
inc
in
xchg
push
cmp
xchg
mov
fildl
ud2
les
scas
pop
les
stc
mov
inc
cmp
sbb
sahf
mov
leave
mov
jbe
adc
or
jp
inc
mov
pusha
in
sub
ljmp
or
sub
je
pusha
popf
ficoms
xor
test
adc
or
and
cmp
call
test
xor
mov
enter
lock
outsl
scas
sbb
add
xor
mov
enter
repz
cmp
insl
shrb
adc
out
lcall
outsb
jb
jo
in
xchg
mov
xor
imul
aam
xor
dec
push
sub
xor
fcomi
jl
clc
mov
push
xor
mov
sub
add
cs
aad
ds
push
aas
inc
push
pop
jo
sbb
out
cmp
ljmp
jno
rcl
aas
mov
insb
sbb
dec
pop
push
push
pop
movsb
outsb
cmp
scas
clc
shrl
jae
inc
sub
xchg
in
leave
xchg
mov
fadd
push
fsubl
in
push
ds
mov
jns
fnsave
inc
lcall
sbb
add
lods
fnsave
mov
inc
mov
mov
mov
lods
jg
lds
mov
testb
ja
jle
clc
out
inc
mov
js
mov
adc
mov
clc
cmpsb
cmp
mov
jmp
xchg
lock
xchg
xchg
mov
mov
xchg
mov
add
push
xchg
sbb
loopne
push
lret
jnp
cmp
out
jecxz
jne
lahf
jae
add
rcrb
and
dec
imul
loopne
mov
mov
push
insb
out
repz
rolb
sbb
lahf
test
add
xor
mov
leave
daa
cmp
sub
das
loop
mov
add
jnp
idivb
leave
out
int
test
ficoml
sub
cmp
cmp
dec
bound
push
dec
xchg
rcrl
and
aad
ror
add
push
mov
jne
ja
pushf
mov
jmp
mov
icebp
fimuls
xorb
cmp
popa
enter
or
std
stos
jnp
mov
lds
xchg
mov
jge
xor
pop
push
xchg
inc
add
add
roll
and
xchg
add
jmp
lret
xchg
jb
fbld
mov
test
in
push
jecxz
or
arpl
fdivp
and
bnd
enter
fmulp
inc
out
movsl
lods
push
cmp
cmp
fbld
nop
jno
mov
pop
fisubs
or
jbe
adc
imul
into
movsb
out
sbb
xchg
pop
nop
pop
test
aam
mov
cmc
jle
iret
aas
mov
jmp
fwait
push
mov
mov
cli
push
pop
sub
dec
adc
jo
test
mov
xchg
out
insb
mov
test
push
jbe
ret
stc
sbb
mov
out
icebp
jae
es
fbstp
mov
cmp
mov
inc
ret
test
dec
fldl
pop
mov
xchg
lods
neg
fsubr
add
sbb
leave
jp
fsts
hlt
sbb
loopne
mov
fsts
push
loop
mov
je
push
and
xor
loopne
lds
lods
dec
inc
mov
psubw
mov
shr
insb
lea
out
lock
lock
adc
add
outsl
push
sub
fisubrl
lcall
mov
mov
fbld
arpl
push
mov
cmpsl
mov
je
sbbb
hlt
repz
sub
mov
push
cmpsl
mov
adc
or
add
inc
sbb
and
dec
ret
cmp
sub
fistpll
loope
xchg
mov
cmp
in
mov
jbe
xchg
ljmp
fdivs
xchg
mov
addr16
in
sbb
push
cmp
lods
stos
mov
mov
scas
cmpsb
xlat
leave
xor
jb
into
inc
add
fs
adc
in
mov
mov
into
mov
or
ficompl
je
jge
add
xchg
popl
mov
in
cmpsl
outsb
jg
dec
in
mov
out
and
pop
fisubrl
aas
ret
xchg
cmp
sbb
sub
into
push
jno
movsb
aaa
sti
mov
cmp
sub
mov
in
jl
sar
jb
test
out
std
aaa
rcll
mov
or
inc
subb
adc
and
js
leave
jbe
dec
mov
mov
out
fdivrs
call
rorl
cmpsb
enter
mov
adc
icebp
inc
push
mov
sbb
xor
cli
pop
rol
lock
jecxz
adcl
jae
dec
fdivl
ud2
in
sti
pop
imul
ret
call
adc
lahf
pop
xor
mov
sahf
test
popf
dec
jbe
cmp
pushf
pop
test
push
bound
ss
mov
ror
jno
pusha
fildll
xlat
jmp
sbb
cmp
inc
outsl
xchg
mov
insb
inc
jge
push
mov
adc
neg
adc
or
popa
inc
push
mov
scas
loop
pop
lahf
xchg
pop
sbb
cltd
int3
in
aad
xor
or
test
ret
jb
mov
cmc
stc
out
stc
or
cli
addr16
cli
enter
imul
push
mov
mov
xchg
inc
add
mov
pop
adc
add
jo
sub
xchg
jns
pop
leave
xchg
ljmp
sti
mov
adc
xor
mov
cltd
imul
push
cmp
or
lret
push
push
scas
fistpl
mov
loop
add
ret
pop
jp
lret
or
imul
xchg
int3
mov
out
jno
cwtl
test
sbb
mov
mov
aam
mov
das
lds
cwtl
stos
xor
xchg
out
dec
dec
fsub
fldl
adc
pop
cmpsl
sub
pop
jo
dec
pop
or
enter
xor
outsb
daa
sbb
std
jbe
lahf
dec
jo
daa
push
imul
xor
sar
rorb
ds
jne
or
icebp
in
fcoms
pop
jae
data16
aaa
push
dec
xor
sbb
lea
gs
mov
fsubs
push
ret
jle
pusha
nop
dec
and
scas
sbb
push
mov
mov
jl
pop
cmp
and
push
jl
andl
arpl
in
mov
dec
ret
and
add
jnp
fs
dec
roll
xchg
test
insl
mov
ja
mov
push
les
jge
push
scas
pop
jge
dec
mov
dec
je
lcall
adc
add
lds
popf
xor
cltd
add
xor
jp
jmp
clc
lsl
andb
pop
and
jns
test
jecxz
outsb
enter
cmp
iret
push
loope
sbb
cmp
xor
loopne
or
pop
and
das
aam
pop
sbb
std
cltd
mov
adc
mov
jle
stos
mov
fwait
mov
pop
jecxz
mov
movsl
cmp
xchg
xchg
fsubs
lods
mov
in
add
movsl
mov
or
dec
add
or
lret
add
sahf
adc
ja
in
frstor
mov
jl
xor
cmp
jnp
or
inc
aad
jp
inc
and
mov
mov
sti
ret
xchg
stos
pop
xchg
mov
push
mov
popa
fmuls
repz
mov
jae
jg
mov
and
or
test
ds
in
sub
clc
out
test
es
popa
xchg
push
and
xchg
test
jb
dec
adc
inc
jno
imul
mov
dec
pop
dec
pop
dec
mov
std
inc
test
testl
adc
orb
xor
out
cmp
andl
out
shlb
aaa
rorb
cmp
pmulhw
xor
scas
xchg
imul
sub
pop
pop
cli
popa
gs
lahf
push
ror
movsb
hlt
std
mov
stc
add
repnz
ljmp
mov
mov
std
xlat
fwait
cltd
dec
xor
rorb
push
gs
fdivrs
mov
bound
into
fldt
test
test
xchg
dec
loopne
jp
call
add
fmuls
in
in
enter
sbb
jne
in
mov
sti
mov
loopne
push
lea
dec
pop
imul
dec
and
sbb
aas
jnp
dec
inc
and
cwtl
mov
mov
into
orl
mov
jae
mov
jo
and
sahf
fisubrl
lea
or
aas
xchg
sbb
jecxz
lcall
mov
adc
cs
mov
aaa
mov
mov
mov
scas
mov
xlat
jp
movsl
lds
cmp
mov
cmp
or
nop
ljmp
add
cli
xchg
xchg
cmp
les
cltd
mulb
mov
stos
clc
loop
dec
les
push
fs
lods
lds
mov
dec
pop
imul
xor
sbb
mov
sti
inc
or
lods
mov
and
push
pop
nop
test
jns
aas
aad
dec
ficompl
pop
mov
rol
enter
xor
cld
or
or
orl
ret
lock
mov
orl
movsb
push
xchg
testl
push
mov
ret
in
mov
xor
sbbl
mov
push
mov
movsl
mov
ja
mov
mov
sub
leave
js
jmp
dec
enter
cmp
dec
jnp
mov
or
inc
loop
lcall
inc
cli
add
in
lcall
sub
scas
adc
mov
and
ret
cwtl
ljmp
jmp
adcl
mov
mov
jle
test
or
sbbb
in
out
pop
sub
cld
loope
loope
mov
cwtl
loopne
das
mov
jb
sub
out
pusha
bound
in
sub
call
jp
push
or
cmp
scas
call
pop
sbb
lock
inc
out
movsb
push
or
mov
cli
cmpsl
mov
adc
xor
cmp
scas
and
sbb
pop
and
and
outsl
out
movsl
nop
pop
ret
xchg
repz
sbb
cmc
or
jns
lret
js
jmp
mov
lret
push
mov
mov
movsl
leave
enter
sbb
outsl
rcpps
add
mulb
dec
ret
or
pusha
scas
fs
pop
cwtl
cli
in
rclb
mov
mov
xchg
mov
mov
lcall
and
daa
les
mov
xchg
mov
cmc
lcall
mov
pop
pushfw
ret
cmp
testb
test
push
xchg
push
jae
pop
nop
call
mov
xor
xor
adcl
js
fstps
test
adc
adcl
dec
rcl
adc
hlt
dec
mov
cli
cltd
adc
add
mov
sbb
sbb
lahf
shlb
fs
sub
mull
jne
mov
inc
call
rorl
jmp
cmp
dec
jns
out
nop
ja
in
outsl
enter
rcl
jg
add
loopne
dec
ss
xchg
mov
nop
adc
leave
fwait
daa
gs
arpl
insb
sbb
scas
pop
xor
sub
fs
cmp
cmp
lods
dec
mov
int
stos
mov
aas
cmp
push
in
mov
jbe
lret
enter
sbb
adc
mov
test
loope
pop
dec
jecxz
test
sahf
push
nop
push
movsl
dec
imul
pop
jno
outsl
lea
nop
out
jb
lods
xchg
mov
sub
lret
xor
jae
mov
faddl
pop
sahf
fdivs
mov
or
add
xor
ja
pop
mov
test
jmp
cmp
or
push
and
mov
xor
mov
cmpsb
test
aad
pop
je
orb
out
push
push
add
push
cmpsb
cmp
add
sub
mov
imul
aam
sub
gs
pusha
aam
in
xor
inc
adc
mov
int3
push
mov
movsl
gs
cltd
push
cmp
incl
mov
shll
sub
sub
shll
jle
jecxz
fwait
in
mov
cmpsb
test
jg
es
mulb
data16
mov
fnstcw
mov
insb
icebp
xor
adc
push
fidivs
mov
dec
aas
rol
shlb
mov
xchg
cli
mov
scas
xchg
push
lods
in
fdivr
std
sub
sbb
loop
xor
pop
xor
out
xchg
dec
xor
ja
push
push
int3
push
sub
sbb
lods
sbb
push
cs
lret
popf
insb
sub
in
fld
bound
cmp
movsb
xchg
jb
rcrb
inc
jbe
cmp
ds
or
ss
lds
fists
imul
sub
or
pop
inc
inc
and
cltd
pop
lock
sbb
orl
loope
mov
inc
jmp
push
rclb
pop
lea
sbb
inc
out
cmp
incb
adc
ficompl
lock
cs
or
movsb
xor
sub
add
inc
test
adc
pop
or
jp
call
fistl
and
sahf
bound
and
paddq
in
imul
vmovaps
mov
mov
inc
cmpsb
lret
pusha
mov
and
lods
in
cmc
rcrb
add
cmc
sbb
sahf
decl
in
push
inc
or
mov
add
arpl
dec
addl
pop
lea
mov
push
xlat
dec
xchg
aad
sub
in
ret
gs
andb
arpl
aad
test
gs
pop
pop
sti
mov
icebp
or
mov
outsl
mov
and
sbb
ja
inc
jne
xor
jnp
mov
mov
jne
jle
push
xchg
inc
add
cmp
inc
pusha
out
jmp
test
daa
leave
int
push
sbb
nop
xor
enter
and
mov
sahf
push
bnd
xor
sbb
jecxz
jmp
test
jge
mov
repnz
stos
xor
fwait
mov
in
sub
jae
outsl
dec
push
bound
cli
lret
dec
ja
cs
fbld
cs
pop
fcompl
dec
mov
cmp
add
jl
xor
nop
mov
xor
pop
push
arpl
imulb
cmp
js
sbb
add
or
sbb
or
mov
cs
pop
inc
ljmp
popa
xchg
movq
dec
cltd
inc
lahf
mov
push
out
hlt
sub
pop
push
outsb
icebp
mov
or
push
mov
sub
outsb
sub
jg
outsl
and
and
mov
cmpsb
inc
aaa
fistps
xor
repnz
movsb
arpl
je
insb
std
push
test
sbb
outsb
shll
inc
inc
sbb
clc
js
sub
icebp
cltd
pop
pop
out
ss
xorb
into
inc
push
stc
scas
gs
dec
aad
or
xchg
xchg
jmp
inc
sub
jmp
arpl
into
xchg
xor
in
or
icebp
fs
jmp
jmp
pop
xor
xor
fdivl
push
or
inc
es
out
rclb
ljmp
mov
inc
fwait
cmp
je
sbb
imull
sub
cltd
je
shl
stos
ljmp
sub
push
mov
pop
adc
jge
push
lcall
mov
movsb
pop
jbe
push
jecxz
pop
test
add
outsl
mov
stos
inc
sub
jne
cmp
dec
aas
enter
sbbb
cmp
inc
divb
mov
cmpb
pop
pushf
pop
pop
jb
xchg
jmp
dec
pop
dec
pop
adc
mov
push
mov
insl
inc
imulb
mov
sbb
ljmp
dec
test
scas
in
in
adc
loopne
sub
xor
mov
mov
dec
xchg
loop
fmul
cmpsb
dec
push
sti
or
dec
fwait
jne
push
xchg
xchg
pop
cwtl
mov
rcll
shll
dec
fnsave
cwtl
pusha
mov
adc
jae
pop
jo
rolb
ret
cmp
pop
jmp
xor
mov
or
cmpsb
in
aaa
pop
jb
push
xchg
add
aas
jne
mov
sub
mov
adcb
negl
loope
std
adc
and
nop
jl
xor
mov
test
dec
aas
jns
xor
sbb
mov
xchg
add
mov
repnz
adc
cld
shrb
cmp
mov
mov
mov
repz
pop
das
sbb
mov
inc
sbb
mov
mov
mov
or
jg
dec
sbb
adc
sub
dec
sarb
enter
dec
insb
sub
scas
mov
or
sbb
jle
cmp
addr16
adc
mov
repnz
or
loopne
out
and
push
inc
in
mov
rcl
inc
jmp
pop
mov
xchg
jmp
dec
aaa
lcall
adc
sbb
mov
stos
sub
outsl
mov
or
lea
xchg
movsl
or
inc
stc
insb
and
iret
pop
add
mov
sbb
fcmovb
pop
mov
lret
mov
jecxz
cmp
sbb
sbb
mov
js
cmp
sbb
xor
mov
ja
push
aam
dec
mov
mov
jns
jg
xor
lret
lret
imul
mov
xchg
mov
xchg
jns
mov
jnp
sbb
stos
push
repz
lods
mov
scas
movsl
add
jne
repz
clc
jnp
xchg
orl
imul
inc
pop
mov
cmp
scas
pop
adc
out
les
xchg
lods
mov
jmp
test
out
inc
aas
pop
jae
jnp
fnstcw
sbb
inc
adc
ss
inc
std
mov
imul
cmp
xchg
pop
push
ret
mov
mov
pop
sub
cmp
scas
push
xor
out
shll
jle
pop
bound
jg
orb
inc
mov
fstl
pop
push
sbb
aad
es
pop
jns
and
cwtl
in
jne
lea
aad
cmc
xchg
sbb
sub
mov
neg
lock
shrl
in
jne
lcall
xlat
das
stos
or
out
dec
sbb
out
cmpsb
jle
mov
pop
xchg
jl
xor
sub
mov
pop
cs
cwtl
sbb
push
xor
pop
jg
fldl
add
fdivrl
and
jl
ljmp
add
xchg
dec
enter
sbb
inc
es
icebp
sti
movsl
testl
or
ret
sub
popa
adc
mov
mov
add
shll
sub
lret
sbb
jo
push
lods
sbb
loopne
ljmp
cmp
ret
out
xorl
and
push
add
or
xorb
test
adc
incl
push
push
sbb
stos
sbb
sbb
aam
mov
fcmove
and
mov
es
lahf
cmp
adc
cmp
push
outsl
pushf
pop
inc
fs
push
inc
stc
lea
xor
inc
push
lcall
test
jl
sub
jecxz
push
bound
mov
xchg
jecxz
push
repnz
dec
dec
iret
iret
pop
cld
iret
mov
adc
sub
test
add
add
adc
and
adcl
lcall
mov
xchg
push
add
push
in
hlt
sahf
or
or
sub
out
cld
divb
jb
xlat
jmp
sahf
imul
stc
add
mov
sbb
mov
or
insl
insb
and
adc
leave
sarl
std
push
stc
and
sub
xchg
mov
movsl
sub
or
flds
pop
pop
scas
aas
out
push
mov
cmp
insb
mov
inc
mov
icebp
aas
sub
sahf
int3
cmpsl
js
mov
and
xor
jb
aam
call
sub
ffreep
je
push
out
aam
out
inc
jle
inc
push
add
pop
pop
or
je
jo
rol
into
mov
xchg
loopne
pop
xor
pop
push
enter
gs
sbb
push
pusha
mov
mov
push
sbb
outsb
mov
mov
fimull
push
popa
mov
sub
mov
cmpsl
inc
aad
scas
sub
test
jmp
fidivs
or
mov
inc
add
hlt
mov
jne
dec
xchg
xor
add
gs
mov
jge
stos
decl
jbe
pop
nop
add
dec
fmull
push
js
neg
imul
jp
js
cmp
mov
dec
jmp
and
or
sub
mov
test
cmpsb
fs
cmp
repnz
xor
pop
lea
imul
pop
jns
fcoml
shrl
or
or
aaa
fxch
adc
data16
movsl
add
mov
outsl
out
ss
cmpsb
aas
xlat
clc
ss
pop
cmp
aas
adc
adc
loopne
clts
cmp
and
ja
imul
shlb
push
cld
or
jle
jnp
stos
sub
loop
add
stos
out
add
cmp
jae
sub
and
imul
jecxz
inc
test
lds
call
sti
lret
dec
sub
movsb
push
mov
leave
leave
fcompl
in
xchg
fwait
in
sub
out
mov
xchg
sti
in
es
bound
sbb
jae
lods
stos
jne
fldenv
add
inc
jo
test
mov
jmp
popf
mov
out
out
pushf
sub
dec
lods
aam
rsqrtps
xchg
repz
bound
sub
xchg
sbb
stos
add
int3
jb
or
pop
cs
into
inc
adc
adc
fistpll
lret
push
int
sbb
adc
aas
hlt
push
and
mov
out
dec
outsl
mov
addr16
in
les
jo
sbbl
std
dec
scas
in
imulb
loop
aad
jne
roll
mov
push
iret
xor
shr
mov
add
data16
out
mov
cmpsb
jb
out
test
lret
daa
xor
lds
in
lock
xlat
lcall
xor
mov
dec
arpl
lcall
or
dec
sti
hlt
cmp
cmp
inc
push
pop
xchg
mov
mov
push
imul
dec
cli
testb
cmp
test
call
cmpsb
loop
lret
pop
out
out
sub
pop
arpl
and
rclb
pop
adc
push
pop
and
in
mov
adc
sbb
mov
and
mov
and
sahf
xor
jb
mov
push
cli
cltd
leave
ds
sub
int
mov
adc
andl
popa
push
popf
add
test
jo
js
mov
cmpsl
jbe
fdivs
add
mov
push
in
sub
sub
in
sbb
pop
insb
lods
pop
scas
cmpsl
stc
cmp
mov
add
mov
cmp
mov
lahf
xlat
out
imul
mov
repz
sub
out
stc
divl
fcoms
iret
cli
loop
je
icebp
cmp
cs
fwait
ret
fwait
cmpsb
les
mov
inc
int3
xor
movsb
add
cwtl
jle
adc
xchg
orl
push
sbb
mov
adc
testl
cs
xor
stc
addr16
dec
ljmp
cmp
push
insb
loopne
sbb
sti
int3
pop
dec
decl
mov
add
dec
dec
sub
push
jae
cmpsb
xchg
dec
dec
movsl
push
push
shlb
mov
in
sbb
mov
outsb
mov
adc
or
popf
adc
sub
dec
int3
ds
cli
out
pop
add
mov
xchg
add
repnz
les
and
jg
insb
and
sub
dec
and
scas
das
sbb
test
push
jb
mov
inc
dec
scas
out
adc
xchg
jb
mov
or
enter
sbb
repnz
shlb
adc
pop
dec
push
cld
push
std
lahf
pop
ljmp
daa
bound
je
and
or
sub
or
imul
pop
xor
test
and
pop
addr16
int
dec
dec
movsb
jl
xor
jne
dec
test
push
stos
loopne
jl
add
sbb
cltd
inc
xchg
cmp
dec
and
in
aad
test
enter
jb
sub
aas
je
dec
gs
jg
pop
mov
lds
out
jge
xchg
fsts
cmpsb
inc
fldenv
in
xchg
mov
inc
movsl
or
shl
fninit
lcall
movsl
das
nop
mov
mov
loope
push
xchg
mov
and
lods
xchg
mov
rcll
push
xlat
fcmovu
sbb
rcrb
dec
and
js
loop
add
and
push
pop
mov
mov
add
jle
push
fwait
popa
push
in
push
in
mov
mov
sbb
mov
add
test
imul
ror
mov
pop
test
and
jmp
jnp
sub
insb
pop
add
push
jmp
cltd
enter
bound
sub
ds
xchg
adc
addr16
ss
out
shrl
scas
jg
mov
in
out
jge
add
jmp
popf
xor
sub
mov
xlat
fstpt
clc
mov
pop
das
aas
adc
hlt
nop
scas
jmp
nop
cmp
fs
pmuludq
in
test
cmp
ss
push
sti
test
and
push
shrl
push
add
xchg
sub
or
and
sbb
cmc
fildl
pop
and
jbe
mov
add
mov
add
inc
into
cmp
mov
push
dec
mov
xor
in
test
test
fchs
outsb
jmp
scas
lcall
push
dec
insb
js
in
lea
addr16
subb
orb
mov
and
mov
fbld
cmc
loop
adc
mov
sbb
repnz
or
into
rcrb
cmc
aam
test
xor
push
dec
mov
add
mov
sbb
inc
sub
xchg
fwait
xor
xchg
aad
inc
test
aam
test
loope
cmp
test
xchg
popf
lods
or
in
mov
mov
test
mov
cmovnp
pop
cltd
mov
push
pop
and
test
ret
jo
pop
nop
xchg
ret
std
or
insl
movsb
ret
cmp
lret
xchg
iret
aad
iret
mov
loop
inc
dec
and
push
outsb
or
subl
je
cmpsl
push
mov
lcall
cld
mov
mov
loope
xchg
nop
sub
push
mov
divl
or
jl
mov
clc
xor
adc
pop
jp
insl
pop
pop
adc
xchg
xchg
mov
inc
orl
popf
mov
jb
sub
addb
xor
jo
pop
lock
popf
fnsave
push
in
out
jmp
int3
pop
out
push
inc
insb
pop
add
jecxz
push
addr16
jle
fstcw
xor
and
sbb
or
rcl
rcrl
jg
nop
pop
dec
insl
rolb
fwait
in
xchg
shlb
sbb
divl
out
out
out
xchg
pop
sbb
rorl
fs
stos
xchg
cmp
daa
lds
ret
fidivl
loopne
mov
sbb
xchg
sbb
lds
mov
mov
dec
imul
inc
mov
pop
push
xor
pop
xchg
cmp
dec
add
stc
xor
xor
movsb
mov
sbb
int
mov
pop
jge
or
clc
xchg
in
roll
adc
stc
add
sahf
negb
adc
test
out
xchg
addr16
out
and
std
frstor
dec
mov
out
mov
std
sub
filds
jne
xor
in
popl
ds
sbb
dec
int
pop
das
popa
pop
pop
pop
lret
out
int
jecxz
adc
mov
in
jmp
sub
mov
stos
dec
mov
adc
les
jl
mov
pop
adc
movsl
pusha
xor
roll
add
or
xlat
mov
mov
inc
jp
imul
popf
movsb
aad
xchg
mov
cs
adc
imul
mov
and
dec
fld
jg
loop
mov
shll
add
pop
xchg
sahf
shrb
mov
int
add
lods
call
lds
xor
imul
mov
out
test
ret
inc
das
and
push
sub
or
enter
into
std
or
cmp
outsb
xor
xchg
lea
fmuls
imul
subl
addr16
iret
andb
add
adc
addl
repnz
repz
nop
jo
inc
insb
or
sbb
pop
adc
out
cli
cmp
test
cmp
sub
test
jle
add
push
jle
fcmovb
gs
cltd
mov
pop
movsl
sbb
dec
add
lahf
ror
aas
cwtl
xchg
sbb
mov
iret
and
lods
adc
or
jmp
fisubs
xchg
adc
mov
les
cmp
xor
and
test
xchg
in
lret
mov
adc
ret
bound
out
or
and
sbb
lret
out
xor
adc
sub
pop
rolb
fidivrl
and
rolb
mov
mov
cmp
xchg
inc
jae
sbb
dec
dec
addr16
mov
cmp
jle
jno
sub
sub
xchg
mov
outsb
orb
mov
push
shrl
jge
jnp
cmp
xchg
loopne
mov
or
repnz
cmp
repnz
outsb
stos
ret
dec
into
mov
sub
lods
jle
xchg
sbb
mov
adc
or
push
je
lods
data16
clc
jbe
sub
rcrb
cmc
mov
in
dec
ds
push
or
lock
fnsave
fsts
xor
xor
xchg
fsubrl
cmp
cmp
sbbb
loope
out
scas
imul
sbb
nop
loope
scas
aad
inc
jns
mov
mov
je
fld
icebp
inc
movaps
sub
inc
and
cmp
jl
push
or
daa
cld
push
or
sub
aas
int
nop
or
adc
jecxz
popf
lcall
adc
adc
imul
add
nop
js
aad
fisttps
adc
jo
xor
cmp
add
and
rclb
or
cld
push
lret
jg
je
pop
sbb
jae
icebp
dec
xchg
jb
insb
scas
ror
sbb
test
and
jg
adc
ljmp
ja
mov
nop
data16
ja
push
pop
inc
data16
xchg
or
cmc
sarb
repnz
subl
push
xor
mov
repz
fcmove
divl
ret
dec
xchg
in
mov
rorb
test
cmp
xchg
mov
pushf
loope
cmp
pop
popa
add
ror
inc
bound
andl
sub
stc
rcl
pop
fs
mov
negl
push
ret
sbb
mov
or
int3
in
cld
xrelease
lcall
jb
rcrl
cwtl
scas
js
int3
mov
aam
sbb
push
jl
adc
daa
mov
dec
lds
cld
mov
inc
sub
jp
movsb
add
mov
mov
leave
mov
mov
fwait
std
mov
jecxz
mov
mov
lcall
push
les
sub
or
or
cmc
push
mov
mov
bound
xchg
js
icebp
sahf
lods
cwtl
rol
add
jns
push
jecxz
out
test
aam
jl
pop
add
or
icebp
stos
popl
push
xor
dec
fistpll
push
sbb
bnd
popf
or
inc
sar
out
fnstsw
call
aas
mov
sarb
xor
jle
mov
aas
push
mov
xchg
dec
push
sub
lock
cld
dec
ret
enter
in
fidivrs
mov
addr16
jl
das
bound
dec
jne
xchg
pop
in
arpl
lds
xor
out
fidivl
or
adc
aaa
testl
cmp
ret
xor
adc
sub
enter
xchg
dec
push
in
adc
and
adc
mov
lds
jnp
pop
cli
xchg
testb
mov
mov
ljmp
in
xchg
mov
int
test
shll
push
fnstcw
das
rol
add
mov
in
insl
push
cltd
cli
cmpsb
mov
xor
add
es
movsl
daa
and
xor
sti
pop
jns
push
pushf
mov
jmp
sbb
aad
ds
leave
or
sbb
jp
lgs
cwtl
ds
jmp
cmc
sbb
shll
inc
jmp
loop
outsl
lahf
lds
out
mov
jp
les
mov
sub
sbb
or
les
mov
ja
mov
rcrl
rcr
dec
popf
cmp
pop
stos
add
lock
mov
add
sub
fcmovnb
pop
ret
shll
lds
mov
xor
loopne
inc
push
jl
and
xchg
adc
dec
fadd
in
stos
stc
test
inc
add
arpl
in
pop
int
adc
pop
lea
pop
mov
call
jmp
pop
imul
sahf
pop
lea
pop
fimuls
stos
iret
insl
sti
mov
mov
out
xor
push
push
arpl
das
test
xlat
mov
repz
lods
inc
xchg
lahf
stos
cmpsl
dec
jecxz
gs
sar
push
sub
and
jbe
adc
add
pop
scas
jns
pop
sarl
movsb
ffreep
repz
cmpsb
mov
in
adc
cmp
ss
rcrb
pop
lcall
in
push
add
and
movsb
push
inc
mul
push
out
or
sbb
xorl
or
jb
xchg
stc
dec
fsubrl
pop
scas
add
pop
popa
repz
cmp
dec
push
push
test
xor
xor
repz
push
jle
push
mov
sbb
push
mov
out
int3
mov
sbb
sub
push
jg
or
sbb
xchg
dec
pop
dec
add
imul
scas
and
fs
adc
adc
sub
stc
dec
adc
and
fst
imul
and
stos
add
es
mov
ss
xchg
and
or
mov
jno
or
cld
and
xchg
push
xlat
movsb
lcall
push
test
and
mov
cmpsl
ja
xor
add
out
jle
mov
stos
xchg
xchg
adc
push
xlat
repnz
fucomp
sbb
push
mov
and
aaa
divb
mov
out
inc
cmp
push
aaa
mov
mov
adc
fldenv
paddusw
dec
cli
inc
lds
insl
mov
mov
std
negb
movsl
dec
lock
pop
cmp
pop
shll
in
ds
push
dec
inc
test
imul
push
sbb
mov
ret
inc
or
addr16
lret
pop
push
out
push
arpl
dec
jns
mov
lret
arpl
out
mov
in
cmpsl
mov
mov
sbb
jg
pushf
mov
enter
in
ret
test
setp
add
jbe
sahf
mov
push
push
sub
enter
xchg
stos
into
mov
sarb
mov
out
sub
xchg
popf
mov
imul
movsb
bound
jg
cmp
leave
jle
mov
push
mov
test
shrl
xchg
aam
es
test
das
pop
mov
les
jnp
cli
testl
pusha
xor
xchg
inc
cltd
daa
lea
inc
mov
cltd
lcall
mov
andb
dec
jno
dec
jg
mov
dec
or
scas
jns
and
ret
sbb
jbe
inc
outsl
mov
pop
sbb
icebp
lea
es
mov
xor
xor
adc
pop
xlat
and
cmc
add
mov
insl
leave
mov
ljmp
lods
popa
sbb
fcmovbe
sub
jp
dec
mov
sub
loope
xchg
mov
imul
jmp
add
scas
mov
push
jbe
dec
cmp
int
das
mov
adc
ja
sub
sub
add
daa
cld
and
test
int3
bnd
mov
cmc
and
aam
or
in
stos
xchg
roll
jne
or
xor
mov
mov
adc
in
jnp
addr16
dec
aaa
pop
jecxz
lods
rcrl
cs
pop
xchg
lods
jne
xchg
orl
orb
ljmp
js
add
fcmovne
jno
jge
pop
imul
shll
lret
es
mov
push
bound
outsl
imul
in
aas
or
repnz
jg
jmp
and
cmp
in
scas
int
pop
dec
lcall
mov
lahf
mov
pop
xor
mov
and
inc
popa
loopne
jae
in
inc
adc
shl
push
or
xchg
jmp
add
leave
push
ja
push
pop
nop
orb
dec
call
push
repz
adc
xchg
bound
push
lea
xchg
test
cmp
jg
in
or
imul
call
popf
jp
adc
js
shll
jecxz
push
aam
xchg
ret
or
iret
inc
sbb
jmp
cmpsl
pop
and
inc
inc
outsb
jbe
test
gs
stos
fidivl
cmp
das
js
shlb
scas
jmp
xchg
addr16
push
shrl
daa
stos
pop
mov
outsl
subl
pusha
pop
and
mov
jg
push
xchg
adc
mov
mov
sub
xor
add
rolb
daa
stos
jg
and
mov
inc
call
mov
or
lea
jg
pop
lret
out
nop
scas
dec
xor
daa
test
pop
arpl
sbb
sub
fadds
out
enter
sbb
xor
mov
sbb
jo
and
sub
xrstors
fistl
mov
or
pop
adc
adc
cmp
ret
mov
xchg
inc
fistps
clc
xor
and
or
cld
outsl
mov
push
jecxz
sub
or
fwait
push
imul
jnp
ja
stos
imul
cmp
xor
mov
adc
cmp
flds
arpl
lds
and
lahf
dec
mov
movsb
sbb
sub
inc
mov
sbb
cmpsb
push
shrl
out
orb
add
pop
pop
into
lea
sbb
jg
std
xchg
jmp
shl
mov
push
enter
mov
mov
or
insl
repz
jno
clc
xor
jne
and
and
arpl
cmp
or
inc
loopne
mov
sbb
xchg
sub
jae
nop
lret
and
lock
mov
mov
das
sbb
leave
cmp
shlb
loop
daa
xchg
imul
jno
test
in
imul
lea
fdivs
jge
insb
mov
movsl
xchg
xchg
pop
ja
in
dec
cwtl
popa
ret
imul
and
push
adc
orb
shlb
dec
push
adc
add
loop
xchg
jmp
scas
ljmp
rol
lods
lods
cli
shlb
mov
push
jbe
loop
sarb
fisubrs
test
sbb
nop
pop
loopne
rol
pop
cmp
or
adc
mov
xor
pop
sbb
pop
sahf
jmp
dec
or
pop
xchg
call
jnp
adc
shr
push
leave
dec
xlat
mov
pop
sbb
loop
out
stos
out
adc
pusha
movsl
fisubrs
or
xor
rorl
in
sub
lret
mov
xchg
sub
xchg
call
lock
stc
int
jp
mov
loope
std
sub
lods
xchg
add
ljmp
cmpsl
xchg
mov
nop
cmpsb
ret
push
mov
xor
xchg
or
lcall
mov
js
fbld
mov
lods
mov
cmpsl
pop
mov
leave
aad
mov
xlat
jge
ret
xorb
adc
iret
fwait
aad
cmp
jle
arpl
xchg
loop
jg
or
je
movsl
out
aad
std
inc
orl
test
add
movsl
sbb
cmp
fcompl
dec
sbb
jns
in
pusha
call
push
rcrb
ja
in
js
jno
xchg
jbe
sub
add
sbb
push
movsb
cmpsb
lods
or
enter
repz
ja
popf
call
cmpsl
stc
jg
loopne
and
pop
es
popf
movsl
mov
cltd
push
leave
xchg
push
aad
movsb
adc
shlb
mov
push
loopne
jecxz
shld
and
subb
mov
mov
lcall
mov
dec
sub
pop
jecxz
jecxz
cmp
mov
add
and
mov
xor
in
and
pop
and
xor
fucom
inc
and
add
negl
jb
outsl
jmp
test
sbb
push
nop
mov
lods
insb
xchg
xchg
jbe
xlat
mov
and
insl
sbb
daa
inc
sahf
int3
fistpl
ds
or
popf
jl
lret
call
jg
adc
movsb
push
dec
filds
xchg
xchg
xchg
mov
call
xorb
inc
mov
jp
adc
ret
lock
sbbl
mov
adcl
mov
clc
adc
andl
mov
arpl
sub
mov
leave
je
pop
and
xor
outsb
and
push
xchg
shrl
insb
repnz
mov
sbb
inc
and
xorl
xlat
adc
push
cmp
mov
incb
xor
aam
mov
je
aad
jo
pushf
mov
ret
xor
push
sub
dec
clc
xor
pusha
int3
ror
adc
xchg
jae
ss
ficomps
cmp
imul
xor
or
jne
std
or
ljmp
jecxz
inc
sbb
xor
cmp
pop
roll
cmp
std
nop
xlat
push
xchg
jmp
rcrl
lods
js
scas
mov
mov
jecxz
lcall
xchg
jnp
addps
daa
push
std
xchg
cltd
jle
and
fstpl
push
inc
jg
in
sbb
fdivl
inc
xor
jnp
jne
sbb
pop
mov
push
aas
xor
xor
push
imul
fcmovnbe
mov
cld
mov
mov
xor
dec
jae
mov
imul
aaa
cmp
dec
inc
xlat
cmp
pop
sbb
fs
pop
push
dec
movnti
or
cmpsb
and
inc
cmc
xchg
mov
lret
std
rcll
inc
outsb
inc
loope
fistpll
aaa
mov
sub
sarl
test
cwtl
xchg
or
subb
sub
or
jnp
andl
xchg
push
sub
xor
inc
inc
dec
dec
lds
es
mov
nop
mov
mov
outsb
push
mov
or
or
scas
mov
add
sbb
pop
js
sub
call
fldcw
xor
xchg
sbb
add
jno
sbb
mov
xchg
sub
xchg
fdivl
lea
or
add
dec
outsb
test
loope
cmpsb
lods
mov
das
pop
imull
pusha
fwait
push
cli
ds
pop
mov
jbe
dec
test
mov
shlb
ret
push
loope
adc
test
mov
lea
pop
dec
jp
xor
loop
mov
ds
jne
or
add
xor
fidivrl
cmp
cmpsl
sbb
test
push
sub
bound
fadds
pushf
jmp
push
mov
push
add
jno
pop
out
loope
mov
mov
mov
adc
pop
and
sti
xor
xchg
sub
lods
lcall
mov
mov
xor
sub
cmp
sbb
jbe
adc
pusha
ss
call
fcoms
movsb
lret
mov
cli
cmpsb
lret
fcmovne
inc
or
add
pop
fisubl
and
mov
stc
inc
mov
mov
add
xlat
syscall
daa
mov
push
xchg
and
repnz
outsl
enter
imul
push
dec
push
enter
movsb
inc
subb
lock
outsl
push
jns
pop
mov
mov
mov
jg
sbb
jg
sbb
aad
dec
xchg
cmpsl
cmovle
push
leave
xchg
pop
xchg
xlat
push
jno
push
dec
or
push
pop
jecxz
jnp
lahf
mov
push
push
sahf
je
test
sbb
lret
fisubrs
mov
pop
mov
push
stc
ret
sbb
stc
inc
mov
pop
mov
mov
or
xchg
es
dec
and
lods
mov
shll
aas
mov
mov
xlat
pop
aad
xchg
js
loope
push
in
gs
pop
pop
gs
jb
and
cwtl
cld
xchg
stc
xchg
cmp
in
divl
fwait
repnz
and
push
int
movsb
negb
sub
sbb
dec
mov
lret
sub
inc
xchg
push
lcall
cld
add
js
or
ficomps
pusha
mov
in
dec
jo
mov
addr16
sbb
dec
fnstenv
repz
mov
lock
stc
aaa
cmp
movl
inc
je
and
sbb
mov
ds
mov
mov
loopne
xchg
xchg
add
inc
cmp
pop
es
dec
or
idivb
jo
sub
mov
jp
dec
lret
lcall
cli
out
and
ret
std
femms
push
lods
dec
ja
xchg
cld
add
out
fldt
out
cmc
xor
push
pop
mov
leave
jge
xchg
jno
sub
or
jle
in
es
adc
ds
inc
jno
add
addb
mov
out
test
cwtl
or
lahf
pop
mov
test
lock
xor
movsl
sub
mov
in
in
mov
lea
inc
xor
inc
out
std
addr16
push
aam
test
add
push
lahf
gs
xchg
rol
mov
sbb
fistpll
hlt
mov
and
sbb
sbb
hlt
ljmp
loope
sbb
mov
mov
sub
outsl
aaa
stos
loope,pn
adc
daa
jo
sbb
ja
pop
insl
xor
or
dec
shll
scas
xor
in
inc
fdivr
mov
inc
sub
add
adc
or
mov
int3
stos
mov
and
xchg
je
jo
aad
cmp
push
pushw
inc
aas
xchg
jl
sbb
adc
ljmp
inc
adc
mov
dec
imul
jo
lcall
adc
fbstp
add
xchg
jne
fwait
cmp
adc
mov
sub
fisttpl
subb
jne
pop
mov
mov
repnz
loope
jae
sbb
jmp
or
mov
lcall
cmp
mov
addl
sbb
stos
popf
inc
cwtl
pop
scas
out
cmp
fs
subl
rcrl
mov
inc
dec
inc
and
add
repnz
cmpsl
es
inc
sbb
and
xchg
aas
pop
jle
out
mul
and
jbe
pop
test
jae
jl
aas
xor
and
lret
cmp
mov
add
mov
push
push
faddl
cld
fimuls
movsb
cmp
nop
cmp
push
xlat
add
jmp
frstor
mov
push
shrl
test
push
shlb
cld
mov
bound
leave
mov
jp
add
pop
enter
jne
lea
sti
mov
sub
aad
loopne
add
sub
xchg
leave
xor
xchg
mov
inc
das
mov
or
pop
xchg
sub
xchg
lret
lods
mov
mov
push
fldenv
dec
or
dec
enter
cs
mov
outsl
add
jno
cmp
loope
adc
and
sbb
mov
pop
cmp
stos
movsb
ret
mov
out
jle
add
divb
shl
push
xchg
mov
sbbl
lcall
mov
pop
shll
clc
rol
pushf
sbb
sbb
dec
add
xchg
or
mov
enter
jmp
lahf
cltd
out
xor
fwait
cld
scas
cmp
push
push
jmpw
aas
mov
sub
shr
lods
cmc
push
push
out
insb
sahf
shl
sub
add
call
jae
pushf
sub
pop
xor
flds
insl
icebp
push
cmp
cwtl
movsb
arpl
jle
xlat
in
das
pop
push
mov
adc
xchg
movsl
push
ljmp
je
rolb
xor
enter
popf
je
sub
jg
sub
hlt
adc
sub
mov
popa
add
pushf
cmp
or
out
or
repz
std
pop
mov
xchg
push
lea
fcoms
aas
jnp
in
cmp
push
call
xchg
mov
scas
dec
enter
push
.byte
.byte
cmp
