and
mov
cltd
adc
jg
inc
adc
insb
in
outsb
xor
xor
xor
pop
clc
jmp
pop
pushf
jmp
inc
sub
gs
xchg
add
test
das
and
push
fstpt
add
mov
leave
iret
jl
pop
xlat
jne
ds
sbb
mov
add
rcl
ss
ja
int3
adc
cmp
sbb
loop
fwait
add
pop
shrb
or
mov
pop
pop
or
hlt
mov
in
sub
stos
repz
movsb
adc
inc
fcmove
jp
mov
cld
imul
push
push
push
mov
ror
sub
cmpsl
mov
insb
sbb
rcrl
inc
negb
out
js
sub
lods
pop
ret
addr16
mov
xor
xchg
repnz
push
mov
dec
cmp
push
sub
and
cmp
call
data16
mov
imulb
mov
push
mov
adc
bound
insb
add
sub
push
push
xor
sbb
out
xor
and
xor
aaa
or
test
fidivs
out
push
xchg
jg
test
push
xor
push
cmp
fwait
adc
or
aas
arpl
cmp
sbb
mov
mov
fsubr
movsb
cmp
aaa
pop
insl
xorb
iret
mov
push
jbe
cmpsb
imul
mov
imul
sub
inc
mov
sbb
aaa
pop
bnd
movd
bound
add
loopne
cmp
fdivr
js
jge
or
popf
and
test
push
jg
mov
mov
cmp
in
mov
pop
ljmp
push
jge
sub
ret
mov
inc
mov
mov
adc
mov
push
mov
ret
ret
pop
sub
clc
lds
xchg
aas
xchg
push
pop
xchg
xchg
aaa
and
cmp
pop
ret
xor
outsl
mov
pop
and
int3
mov
lret
insb
loope
pop
cmc
push
mov
mov
in
pop
das
idiv
jmp
push
inc
mov
mov
fisubrs
ret
mov
rcrl
out
lds
mov
cld
scas
and
push
test
and
cli
inc
int
out
cld
cmp
adc
popa
pop
push
xchg
inc
pop
stos
pop
cmc
fldcw
cmp
mov
mov
cmp
js
inc
xchg
xor
inc
push
add
inc
mov
mov
and
pop
out
leave
sub
es
add
jne
aad
fcomi
jns
jle
pusha
lock
push
dec
jge
out
sbb
movsl
or
push
push
fstp
or
and
inc
out
pop
loope
test
sub
dec
in
cmp
dec
insl
inc
xchg
test
pop
insb
xchg
mov
data16
outsb
mov
imulb
pop
mov
aad
out
rcll
rcll
mov
and
call
push
sbb
xchg
xchg
push
mov
test
std
and
call
pop
das
sbb
add
shr
mov
push
lods
push
add
out
cmc
mov
popl
in
xor
cmp
adc
push
inc
cmp
in
cmp
pop
aaa
xor
call
dec
sub
xchg
movsb
ret
test
jns
aas
outsb
iret
mov
pop
inc
sbb
inc
imul
push
or
scas
testb
jge
pop
rclb
movb
adc
push
hlt
mov
in
sub
insb
xchg
lods
pop
push
sbb
mov
cmpsb
pusha
mov
pop
cmp
cmp
ja
es
mov
xlat
jo
dec
mov
mov
loop
pop
movsb
pop
fwait
xor
sarl
stos
dec
cmp
in
cmpl
js
add
mov
xchg
jmp
jno
pushf
jo
test
mov
jmp
fstps
pop
mov
sarl
ficomps
test
addr16
out
lret
cli
jno
in
test
ficomps
sarb
cmpsl
inc
popa
push
test
testl
sti
mov
or
sub
adc
mov
lret
outsb
pop
pop
push
xchg
jg
cmp
imul
in
push
inc
mov
inc
inc
std
and
fs
adc
lds
arpl
add
lret
aam
mov
repnz
nop
push
loopne
sti
and
rcrb
mov
mov
lahf
es
aas
xor
aad
out
pop
xchg
jo
ror
dec
lea
lret
add
loopne
push
es
push
in
sub
inc
or
cmp
push
jne
aaa
repnz
sbb
clc
jo
sub
adc
and
data16
ret
add
add
push
clc
jb
inc
fscale
nop
pop
fwait
idivl
inc
ja
inc
push
xor
fisubrl
inc
pop
arpl
test
negl
adc
push
out
sbb
sbb
shrb
test
lret
push
inc
outsl
movsl
scas
inc
xchg
cld
mov
push
sbb
dec
or
cmp
inc
lahf
jno
adc
xchg
cmp
mov
pop
adc
mov
pop
and
adc
dec
xchg
cltd
sub
pop
and
popf
push
push
sbb
or
imul
sub
mov
xor
xchg
pop
mov
push
mov
shrb
or
xchg
mov
inc
push
aas
xor
mov
sbb
fs
into
xchg
mov
mov
push
xorl
or
xor
xor
ret
lcall
cmpsb
xor
arpl
cmp
cs
cmp
movsl
mov
shrl
rcl
pop
stos
pop
pop
xor
push
mov
or
mov
negl
xor
inc
mov
jle
lret
les
mov
jo
or
dec
ss
or
jge
frstor
push
jb
push
and
sub
cli
sahf
jae
jae
dec
stc
popf
rorb
add
dec
stc
and
lods
dec
std
out
push
xchg
es
fidivrl
dec
adc
push
adc
hlt
fldenv
and
mov
jb
les
inc
cli
std
sub
add
mov
jg
inc
lahf
mov
ret
movl
outsl
not
lds
mov
call
fstpl
mov
lods
or
pusha
fs
xchg
js
or
inc
and
scas
lahf
nop
push
dec
aas
cmp
jecxz
popf
mov
sub
mov
subl
outsb
xor
mov
imul
rolb
jo
pop
arpl
enter
pop
leave
dec
sub
xor
pop
shl
sbb
icebp
lea
dec
fidivl
jns
mov
adc
cmp
in
jge
enter
push
pop
call
sti
adc
mov
and
xor
sahf
xchg
in
rorl
repz
mov
cmpsb
sahf
sub
int3
and
mov
xor
rorl
sets
in
dec
add
sub
negl
xchg
lods
ja
dec
cwtl
loope
pop
das
addl
test
add
sub
mov
sbb
mov
cmp
push
ja
fildl
out
mov
sti
jb
pop
and
out
adc
inc
mov
loope
shlb
loop
jno
pop
jno
jns
das
shrl
cmp
and
rolb
mov
xor
jp
jp
test
ljmp
movsl
out
or
cmpsb
subl
andb
gs
test
pop
cmp
loope
xchg
dec
stos
das
xchg
outsb
fs
stos
pusha
push
les
xor
fwait
cs
sbb
mov
enter
mov
cmp
bound
add
dec
call
mov
adcl
push
dec
std
cld
or
nop
mov
adc
jmp
sbb
jnp
in
adc
push
clc
mov
ret
outsb
mov
pop
mov
addr16
jle
rolb
mov
xchg
sbb
push
cmc
sbb
movsb
lock
mov
in
ljmp
xchg
adc
lods
cmp
mov
scas
out
sbb
mov
pop
cmp
out
outsb
movsl
inc
in
add
cs
cli
fs
inc
xchg
push
iret
jg
jb
mov
repnz
das
cmp
xchg
xchg
xchg
das
mov
xor
clc
rolb
add
jmp
xor
adc
jo
test
je
and
pushf
mov
mov
adc
scas
aam
rorl
dec
jmp
jnp
pop
loope
adc
dec
scas
sub
xchg
xor
ficomps
push
xchg
in
xchg
dec
aam
les
push
rcl
pop
daa
dec
jnp
lods
push
repnz
xchg
mov
or
mov
imul
movsl
insl
movsl
dec
rcr
xchg
pop
pop
or
pop
lret
in
test
mov
scas
fistpll
cmp
pop
lahf
or
xorl
or
imul
std
ret
pop
je
xor
subl
mov
lret
sub
arpl
mov
mov
mov
cmc
xchg
loope
mov
or
xor
je
inc
repz
lds
push
in
mov
inc
and
and
nop
out
fwait
or
scas
push
or
add
lahf
lret
add
pop
xchg
xchg
and
add
jno
out
dec
repnz
lcall
ljmp
push
es
stos
stos
aas
popf
pop
pop
sahf
and
daa
xchg
sub
jne
pop
popf
in
imul
cmc
xor
inc
in
lret
lods
push
xchg
cmp
sbb
add
cmp
cmpsb
scas
and
aas
je
jmp
cltd
jge
push
fucom
in
adc
out
adc
in
xlat
pop
mov
xor
jb
loope
jnp
pusha
mov
cmc
aas
lcall
mov
add
movsl
jmp
addl
mov
orl
add
mov
cld
xchg
adc
stc
jge
sbb
std
mov
cmpsl
outsb
aam
jmp
lcall
push
ja
pop
xchg
fbstp
or
stc
xor
mov
pop
jle
xchg
jle
subb
in
enter
adc
ret
ret
out
dec
mov
inc
into
in
add
repz
roll
jb
divl
xchg
pop
cmp
or
mov
or
mov
or
incl
arpl
push
bound
in
dec
dec
sub
mov
nop
push
psrlq
out
rorl
rcrb
mov
dec
mov
das
jnp
xor
lretw
mov
cmc
jne
shlb
in
aam
lahf
ds
popf
std
sbb
pop
dec
ret
cmp
or
call
cmp
jnp
mov
stos
push
bound
lret
jg
cld
out
mov
and
pop
push
stos
cmp
cmc
push
addl
sti
stos
imul
mov
lods
push
xor
jge
in
push
inc
pop
xchg
lahf
inc
push
lock
add
push
and
mulb
push
cmp
push
push
adc
psubd
mov
dec
mov
mov
adc
in
adc
add
xchg
or
mov
stos
outsb
sti
jo
cmp
cmp
lret
data16
ss
add
leave
mov
adc
into
aaa
or
xchg
js
cwtl
mov
loop
addr16
repz
test
cmpsb
loop
faddl
cmp
inc
and
sbb
clc
mov
iret
xchg
lods
jbe
jb
jge
in
adc
iret
test
sbb
test
cmpsl
aaa
bound
test
fs
and
adc
aaa
mov
push
jae
inc
cmp
mov
popa
movsb
ljmp
or
push
push
and
rorb
addr16
and
das
push
add
pop
dec
fiadds
cmpsl
add
xlat
cmp
sub
push
push
add
ja
cmp
fldt
inc
cmp
insl
shll
in
and
jbe
pop
and
repnz
dec
roll
repnz
or
and
push
mov
pop
push
add
push
lcall
jne
out
jae
pop
loop
push
or
stc
stos
mov
push
sub
dec
or
popf
fdivrs
sti
sbb
adc
adc
xor
inc
push
xor
ds
fdiv
jmp
ret
push
mov
push
repz
jne
mov
push
and
push
jg
cmc
scas
push
or
xor
pop
pop
mov
cmpl
out
adc
pop
repz
jge
fildll
sbb
ret
aas
xchg
je
fwait
imul
int
hlt
jl
in
adc
out
mov
jecxz
mov
test
mov
jle
test
hlt
fcomp
mov
popa
or
cltd
scas
or
sbb
jp
pop
icebp
xchg
lret
xor
sarl
outsl
insl
icebp
mov
mov
daa
icebp
lahf
sub
cwtl
jb
stos
ljmp
xor
jg
sar
xchg
test
xchg
fdivrl
dec
adc
sbb
sbb
sub
adc
nop
movsl
rorl
push
inc
ja
outsb
and
jnp
call
add
cmc
stos
aaa
stc
jl
cmp
divl
lahf
xchg
xor
jbe
ja
sub
scas
mov
call
adc
mov
into
xchg
dec
adc
outsl
dec
arpl
leave
aam
mov
pushf
xchg
notl
dec
into
rclb
mov
xor
fsubr
adc
sbb
jmp
mov
cmp
pop
pushf
add
cli
pop
jns
cli
aas
int3
lahf
jnp
cmpsb
mov
inc
std
pop
imul
pop
mov
inc
js
sti
cmp
ficompl
iret
movb
andb
sbb
xor
add
pushf
inc
xchg
xor
adc
popf
cld
fistl
lret
fs
mov
add
cmp
cmpsb
adc
fildl
jo
sbb
mov
in
incb
popl
mov
pushl
test
rcrb
cmc
mov
pop
xor
mov
enter
arpl
je
call
push
jmp
jo
nop
pop
or
sahf
sbb
cs
mov
pop
dec
or
jae
fstps
mov
add
adcb
inc
fstpl
test
pop
scas
or
xor
test
and
cmpsl
test
mov
ljmp
mov
add
shl
mov
dec
jno
test
mov
jnp
dec
int3
cmc
inc
jle
loop
sub
imul
dec
into
pop
sbb
inc
stc
pop
daa
les
ror
ljmp
shrb
pop
dec
or
insl
jo
mov
add
sub
enter
jg
scas
or
loop
jnp
push
in
sbb
addr16
les
xchg
arpl
testl
or
xchg
xor
add
mov
inc
cld
push
jbe
out
pop
inc
jecxz
add
adc
outsl
stos
lock
dec
daa
add
mov
mov
xchg
sahf
shll
adc
call
int3
jno
lret
add
push
xchg
out
xchg
cmp
fdivr
outsl
mov
fwait
loope
addl
mov
cmc
test
in
inc
int
aam
dec
lods
jno
repnz
dec
xor
mov
mov
sub
sahf
mov
adc
rcll
scas
push
fdivs
jns
dec
add
sbb
and
and
add
xchg
pop
inc
lret
pop
cmp
fldt
ret
dec
pop
xor
pop
std
insb
cmp
movsb
push
fwait
mov
dec
pop
xor
lods
daa
inc
cmp
mov
push
fistpll
pusha
es
inc
sbb
or
mov
xchg
push
cvtps2pd
inc
jo
mov
jno
sbb
adc
repnz
xlat
insb
out
stos
jge
rcrl
xor
xchg
stos
xchg
pop
fistpll
dec
lea
pop
hlt
jg
dec
mov
std
cmp
dec
add
and
sub
mov
outsl
xor
dec
or
das
mov
out
dec
ds
insb
xchg
mov
adc
cmp
mov
mov
adc
stc
cmp
scas
loope
jl
add
jae
or
push
mov
aas
sarl
ljmp
adc
mov
xchg
sub
jmp
mov
loopne
cmp
add
stos
fcoms
ror
inc
fadd
mov
je
std
sbbl
stos
imul
out
pop
sub
iret
out
les
mov
mov
jl
ss
cmp
inc
movsl
adc
xor
stos
int
dec
es
jecxz
sbb
fstpt
add
test
outsb
dec
inc
ftst
pop
cmp
sti
or
xlat
test
imul
sbb
xchg
push
adcl
sub
push
pop
dec
scas
sbb
std
adc
call
xor
sahf
dec
push
shr
mov
imul
dec
stc
les
add
inc
and
rcl
into
adc
nop
dec
push
mov
loop
ss
das
rolb
inc
inc
and
loop
sbb
cld
and
ljmp
sahf
sub
js
mov
sbb
mov
cmpsb
and
mov
cltd
ja
dec
rorb
call
cmp
dec
sahf
lds
lahf
mov
daa
adc
cmpsl
cmp
into
cmp
cmpsl
add
pop
mov
lock
mov
data16
inc
fisubs
popa
xchg
inc
stos
and
pop
sarb
mov
lcall
idiv
nop
mulb
mov
xchg
push
ret
out
cmc
dec
je
orl
adc
fcmove
dec
pop
ret
jae
pusha
push
sbb
icebp
adc
inc
scas
lods
sub
out
arpl
inc
movsl
gs
cmc
cli
inc
test
pop
add
sbb
ucomiss
fistl
push
enter
mov
sbb
lcall
pop
mov
inc
sub
sub
add
dec
xor
out
nop
lods
sti
pushl
cmp
lret
push
pop
or
adc
inc
jge
in
int
cmp
mov
add
mov
fsubl
pop
pop
cmc
xor
sbb
std
cmp
ret
lods
bound
add
xorb
mov
clc
roll
fidivl
dec
jg
xchg
mov
push
in
test
inc
mov
sub
pop
push
bnd
test
mov
jp
sti
test
mov
sbb
loop
adc
xor
sub
fbstp
adcb
jae
adc
cli
sbb
std
pop
cltd
sarl
fdivrs
arpl
cmp
xor
int3
sarl
push
push
mov
push
data16
ret
mov
shlb
ss
rolb
mov
adc
in
lahf
push
sub
jae
cmp
rorl
pop
lret
pop
fldl
cmp
outsb
int3
dec
dec
jp
les
out
mov
mov
idiv
sbb
fbstp
and
ret
mov
popa
sbb
inc
mov
neg
dec
push
mov
mov
xor
sub
pop
in
movsb
flds
movd
cmp
and
mov
mov
movl
stc
stos
mov
iret
and
rcr
xchg
iret
adc
outsb
call
fisttpll
sbb
pop
mov
and
imul
or
inc
stos
mov
aaa
mov
in
loop
fstps
adc
pop
sbb
jge
jo
es
mov
xchg
fstpt
mov
pop
hlt
dec
cmpsb
mov
sbb
sahf
jge
adc
aam
insb
repnz
cmp
data16
xchg
push
xchg
add
in
cltd
xor
stc
nop
testl
jb
rorb
nop
mov
add
jnp
mov
add
movsb
ljmp
cmp
ja
push
mov
divb
pop
push
fidivrl
push
pop
ds
or
mov
pushf
insl
out
loopne
stc
out
sub
outsb
mov
ds
adc
js
inc
cwtl
stc
sbb
rcrl
repz
or
mov
sub
std
inc
into
gs
dec
xchg
mov
dec
mov
push
mov
sbb
lret
inc
in
cmpsl
push
push
icebp
scas
cli
out
lock
or
jbe
sub
filds
and
push
or
aas
adc
adc
push
ljmp
sbb
xchg
push
sbb
cld
pop
std
adc
lock
mov
ss
inc
sub
and
mov
and
dec
jns
xor
adc
outsl
push
mov
sbb
sub
nop
inc
xor
add
pop
call
lods
in
cmc
adc
push
inc
adc
rcl
stos
adc
loope
inc
inc
mov
push
mov
and
test
lock
mov
jle
lea
pop
sar
sbb
jmp
in
xor
cld
fdivp
push
inc
mov
outsb
inc
cmp
jne
or
repnz
dec
cmpsl
xor
or
fnsave
push
or
xorb
imul
push
inc
xchg
pop
sub
arpl
push
imul
mov
adc
or
pop
xor
xor
sub
mov
or
repnz
and
and
push
dec
out
je
and
shll
inc
mov
sub
sahf
pop
lock
and
pop
xor
mov
mov
adc
jle
mul
imul
pusha
and
sbb
inc
out
cmpsb
ss
pop
std
dec
jmp
xchg
mov
cmp
mov
cwtl
in
sbb
cmp
jae
and
xlat
icebp
sub
mov
xor
testl
lret
bound
cmp
std
sahf
icebp
mov
fs
cs
frstor
ss
fidivrl
icebp
sbb
in
xor
adc
push
pop
inc
add
lcall
in
pushl
xor
bound
inc
test
sub
inc
fistpl
xor
cmpb
xor
jg
pop
push
cmp
insb
ljmp
test
mov
sub
jnp
mov
and
stc
jne
or
pop
inc
out
mov
popa
xor
push
out
cli
inc
rcll
gs
cwtl
pop
and
stos
mov
xchg
pop
pop
mov
std
gs
stc
xchg
xor
fs
or
test
test
xor
bound
enter
das
jecxz
cmc
into
sub
into
cmp
jmp
lods
and
dec
jno
clc
xchg
ret
js
scas
xchg
lock
test
out
leave
int
pop
xchg
pop
in
call
xor
cli
les
lds
sub
into
es
push
aaa
movb
in
pop
loope
xchg
ret
sbb
lret
in
cmp
adc
xor
xlat
dec
mov
inc
push
mov
push
adc
imul
cmp
sti
lahf
lds
and
dec
fwait
cmp
dec
push
int3
js
inc
and
jbe
lret
in
movsl
imul
dec
pop
xchg
sbb
pop
cmc
mov
insb
sub
pop
add
aaa
xchg
inc
pop
mov
add
mov
mov
or
lret
sub
rolb
mov
rorl
push
test
push
and
das
enter
sbb
repz
or
in
jmp
pushl
fmul
and
cmp
pop
dec
push
cmpsl
pop
mov
inc
sbb
jp
fucomip
jge
lods
nopl
jle
jns
mov
mov
push
xchg
in
rcl
les
pop
aaa
pop
clc
movsl
shll
cmpsl
mov
adc
stos
mov
mov
and
pop
mov
test
dec
push
inc
in
sahf
int3
es
ret
sbbb
sub
hlt
lods
test
movsb
sub
lea
adc
inc
shrl
xor
addl
mov
adc
pop
xchg
fdivs
fstps
or
into
loopne
mov
and
jno
lahf
ret
dec
pop
push
cmp
jb
sub
subl
add
push
jge
push
stos
jg
add
push
jnp
inc
xor
loope
movsl
sub
push
adcl
gs
dec
insl
out
mov
outsb
mov
sti
mov
sarb
aaa
scas
pop
popa
push
dec
mov
addr16
jnp
call
mov
jae
sti
adc
jb
hlt
loop
jg
in
clc
pop
xlat
sbb
mov
xor
push
xor
mov
mov
add
push
pusha
imul
push
clc
fistpll
popa
mov
mov
fdiv
call
add
out
adc
pop
xor
jl
or
ret
fcom
stos
sbb
pop
mov
or
push
orb
dec
vucomisd
in
jno
inc
or
es
push
fcoml
in
adc
outsl
jg
pop
sub
repz
ret
mov
iret
inc
jnp
push
addr16
fdivl
mov
mov
xchg
ret
sub
mov
sub
push
cmc
leave
pop
outsb
into
mov
xchg
inc
push
xchg
loopne
movsl
aad
daa
gs
fnstcw
data16
imul
and
mov
fldl
lahf
dec
xchg
jb
fsubp
mov
jmp
xchg
int
xor
fnsave
xchg
mov
insb
adc
jae
dec
and
lods
ja
pop
rcl
jno
fimull
dec
add
mov
cmpsb
dec
adcl
push
out
mov
ljmp
pop
jmp
popf
je
aad
in
push
xchg
mov
jecxz
jb
push
pusha
xchg
jl
data16
stc
imul
popf
jno
mov
imul
call
pop
and
movsl
cmpsb
mov
fstl
mov
adc
cmp
mov
movsb
popa
orps
or
adc
outsb
add
inc
icebp
jge
mov
cmpsb
addr16
xor
test
dec
cmc
outsb
cmp
cmp
gs
dec
fistpll
sub
jl
pusha
and
aam
jnp
sub
andb
fwait
xor
push
mov
into
movl
inc
mov
mov
push
jecxz
fmuls
sbbb
and
sahf
adc
cld
and
xchg
sbb
movsb
xchg
mov
cmp
cli
stc
mov
mov
sahf
jae
inc
nop
pushf
cmp
dec
mov
pusha
test
xor
sti
fdivrl
sub
sbb
neg
das
femms
shll
fidivs
stos
in
int3
sbb
xchg
xor
inc
push
lods
or
mov
imull
out
jb
andl
jb
icebp
or
adc
mov
loope
inc
mov
xchg
lock
cmpsb
xor
xchg
je
cli
arpl
mov
jbe
or
ja
adc
dec
imul
push
out
add
ror
or
cmc
pusha
je
fcoml
or
mov
nop
ljmp
hlt
int
mov
lcall
aad
jl
xchg
mov
sub
pop
stc
dec
aam
sbb
and
popa
icebp
fwait
add
mov
add
and
test
fistpll
mov
push
lret
push
movsl
inc
imul
outsl
test
scas
xor
pop
fcoml
divl
adc
sahf
repnz
movsl
add
mov
pop
push
jne
lds
mov
call
pusha
aas
or
jg
in
cmp
dec
or
outsb
mov
xchg
cwtl
imul
mov
pusha
and
mov
lret
in
test
push
mov
sub
mov
rcr
add
mov
sub
sub
xchg
leave
scas
in
cmpsb
jg
jns
leave
fcomps
movsl
jmp
sub
and
loopne
cmp
mov
cmp
cmp
imul
sbb
rol
ret
pop
inc
pop
pusha
pop
xchg
cld
adc
adc
jne
xchg
cmp
mov
push
sbb
movsl
xchg
lock
push
cmp
jge
test
stos
cmp
sbb
sti
or
cs
lods
in
pusha
into
in
xchg
xchg
outsl
push
and
loopne
mov
mov
nop
dec
popa
mov
lods
scas
pop
ljmp
je
mov
fwait
shll
pop
ds
and
mov
sbb
popa
js
ja
enter
loop
andl
into
xor
cs
sbb
or
cli
loope
xchg
or
rcrl
cmpsb
push
dec
push
and
adc
jle
fs
cmp
pop
jns
stc
movlps
outsl
pop
xchg
dec
and
mov
mov
repnz
sbb
fsub
add
popa
cltd
mov
mov
add
push
fdivl
jge
iret
clts
fcompl
ds
test
or
mov
hlt
ret
int3
insl
mov
mulb
xchg
jno
add
add
xchg
lds
ret
inc
xchg
mov
cmp
sbb
push
aad
fisttps
les
adc
fisttpll
pop
mov
imul
movsl
and
rcll
mov
fimull
aaa
ret
inc
movsl
sbbl
push
scas
lcall
mov
pop
ficoml
fistl
xchg
lods
scas
pop
mov
sbb
xchg
push
or
pop
cmp
mov
xchg
pcmpgtw
or
fs
push
test
inc
or
fdivrl
adc
cli
pop
shrd
pushf
xchg
push
shl
and
fisttpl
test
out
jo
rclb
int3
fbld
or
into
dec
sbb
add
addl
ljmp
pop
jmp
in
push
cwtl
add
jns
out
push
sbb
cs
or
sbb
push
xor
fidivrl
xchg
fwait
cwtl
daa
push
test
fcmovb
inc
mov
mov
push
xlat
jg
sbb
shll
repnz
sbbb
xor
mov
insl
loopne
cmpsl
pop
cmp
lcall
adc
push
inc
test
leave
inc
mov
pop
jp
cmp
bound
mov
out
loop
mov
in
jb
test
imul
pop
lods
jmp
push
addr16
test
mov
outsb
sub
test
pusha
push
sahf
push
jae
mov
sar
outsl
mov
roll
cmp
push
fisttpl
fistps
xchg
xor
xchg
out
addl
hlt
add
mov
or
iret
mov
jge
icebp
push
and
fstps
jnp
cmp
test
fnsave
mov
push
xor
mov
mov
cmpl
jmp
ds
fbld
push
adc
in
push
push
push
pop
mov
hlt
sti
je
lcall
icebp
insb
adc
movsb
push
xchg
mov
jae
adcb
sarl
sub
mov
jno
and
sbb
mov
mov
inc
addr16
out
je
insl
lret
imul
rcll
mov
ret
cmp
repnz
rcr
inc
sbb
mov
test
add
mov
mov
adc
test
mov
scas
lcall
fimull
push
xor
stos
add
cmp
push
lock
inc
push
nop
imul
xchg
adc
xor
inc
and
mov
push
ljmp
push
jne
or
ja
pop
inc
ret
mov
or
sub
or
adc
adc
xchg
stos
adc
adc
fs
jp
dec
lahf
dec
mov
xor
or
mov
add
fisubrs
shlb
sahf
outsb
cmp
xor
loop
adc
cltd
in
ja
aas
xor
push
pop
lods
push
pop
mov
mov
shlb
leave
jns
in
outsb
fs
stos
or
shll
sub
repnz
cli
cmp
out
fwait
or
push
mov
mov
or
cld
test
pop
ret
xor
arpl
mov
adc
hlt
es
sub
push
fimull
adc
adc
push
bnd
sti
iret
idivl
mov
iret
or
sahf
aas
xchg
jns
jecxz
adc
pushf
cmp
add
lods
js
and
stos
sti
pop
sbb
popf
hlt
lret
imul
pop
ljmp
pop
test
pop
aas
cltd
mov
xchg
cli
shll
xchg
lea
std
lret
subb
movsl
out
mov
xchg
lea
fcoms
mov
cltd
cmpsl
sub
rclb
pop
arpl
and
xchg
push
push
clc
and
sarl
outsb
and
out
hlt
cmc
or
push
lret
sbb
add
jns
dec
or
iret
mov
call
movl
dec
gs
xchg
xchg
in
mov
dec
rcll
xchg
dec
dec
sbb
sub
sub
loopne
sbb
pop
mov
and
jo
test
add
mov
pop
icebp
sub
out
push
in
std
adc
mov
inc
or
and
clc
jno
mov
dec
mov
xor
nop
xchg
clc
inc
addr16
and
aas
dec
jbe
sub
and
jo
sti
cmpl
and
sub
add
pusha
mov
rclb
cli
dec
je
inc
aad
sbb
js
jge
dec
add
mov
sbb
add
into
pop
xchg
enter
enter
scas
outsl
outsb
ret
jo
pop
sbb
sysenter
insl
xchg
jg
pop
xchg
pop
or
testl
mov
fstenv
jnp
inc
inc
xchg
daa
sbb
adc
stos
lds
mov
mov
enter
test
xchg
shll
fimull
lahf
mov
push
inc
sbb
mov
mov
xchg
xor
add
or
sub
sbb
test
and
mov
pop
rol
cmp
xchg
mov
hlt
and
aaa
cmp
mov
mov
mov
popa
cmc
call
icebp
loopne
sti
popf
loopne
es
adc
pusha
aaa
movsb
jle
stos
stc
adc
sbb
ljmp
js
jmp
lock
mov
and
jl
mov
mov
sbb
cltd
adc
xchg
mov
and
xor
movsb
xchg
lret
int3
bound
in
fstps
lea
mov
push
inc
daa
adc
or
or
in
std
inc
jbe
aad
sahf
rolb
lock
js
test
mov
mov
popf
mov
xor
inc
mov
fsubrs
mov
pop
add
lods
fs
in
jnp
flds
cltd
cmp
test
decl
lods
subl
movsl
sub
cmp
mov
adc
sbb
jnp
cmp
ror
inc
lahf
arpl
daa
stos
or
sbb
ret
add
mov
gs
inc
fisttps
shl
jge
nop
cli
fsubs
insl
inc
xor
xor
xor
and
xorb
cltd
xlat
lcall
push
fildl
fcompl
nop
pop
pop
cmpl
push
mov
shlb
stc
xor
push
or
decl
test
lods
or
and
nop
jo
gs
sub
lock
mov
insb
fcomps
xchg
daa
cmp
adc
fnsave
dec
aam
pop
xor
adc
mov
scas
fcomps
incl
mov
sub
insb
adc
shlb
mov
adc
xchg
or
cmp
fucomip
stos
dec
pop
out
cld
sub
jmp
mov
pop
push
push
cmp
test
shrl
sbb
out
jle
dec
mov
pop
adc
inc
lret
adc
ja
pop
imul
pop
xor
jnp
mov
inc
mov
jl
jg
imul
and
lock
lods
fdivs
ljmp
rorb
dec
cltd
lock
jae
mov
mov
mov
sub
leave
jg
aaa
test
scas
jae
movsl
lret
adc
fistl
sahf
ds
push
aaa
cmp
test
insb
push
fdivr
xchg
dec
js
test
out
lock
in
mov
cmove
idivl
xchg
or
arpl
sbb
mov
push
lret
or
pop
out
or
pop
scas
mov
cld
jmp
ret
xlat
sbb
or
imul
fisubrs
rorb
xchg
pop
adc
jecxz
pop
jmp
push
das
ror
sbb
adc
lahf
add
jmp
outsl
lret
ficoml
push
jecxz
jne
mov
mov
push
cs
pushf
add
testb
arpl
xchg
jns
daa
jmp
mov
jns
dec
cwtl
pop
mov
shll
jb
inc
pushf
scas
addr16
xchg
pop
jmp
adc
pop
cli
js
add
rolb
cmp
dec
hlt
fstps
adc
and
xor
rcrb
subl
sbb
test
test
push
sti
into
push
inc
sarb
add
xchg
lods
lret
adc
adc
arpl
lahf
out
sti
xchg
sbb
and
js
push
cmp
aaa
in
add
sub
cmpsl
mov
mov
test
lock
repnz
lahf
cwtl
pop
in
push
sbb
and
pop
and
xchg
mov
pop
lods
ret
aaa
cmp
imul
xchg
ret
mov
lahf
ror
mov
stc
mov
stos
mov
adc
dec
and
mov
xchg
iret
call
push
mov
movsl
test
cli
lock
sub
call
or
xor
js
and
add
pop
out
arpl
push
dec
xchg
jb
cmc
jbe
jmp
mov
inc
xor
pop
xor
inc
aaa
rcl
enter
mov
mov
push
fidivl
pop
push
cltd
cmp
dec
fadds
push
mov
fcompl
sub
xchg
or
cltd
push
js
lcall
in
xor
rclb
cltd
int3
loopne
adc
push
jae
push
cmp
scas
jne
iret
cld
ss
push
dec
mov
inc
or
or
sub
or
push
sahf
xchg
mov
or
loop
ficoms
shr
call
xor
inc
test
fistl
jne
in
sbb
mov
inc
adc
inc
xchg
add
repnz
push
jl
jo
push
stos
mov
loop
cltd
jo
xor
or
andb
ficoml
jge
and
hlt
mov
test
jge
xor
daa
cwtl
subl
adc
sub
fs
xchg
test
mov
mov
std
pop
mov
dec
mov
faddl
js
mov
movsb
xlat
mov
mov
mov
inc
lcall
adc
jmp
xchg
fsts
add
sub
sub
addl
stos
das
outsl
leave
xchg
and
clc
scas
in
repz
in
xchg
sub
or
mov
xchg
mov
jecxz
shll
jb
cmp
and
pop
xchg
sbb
fs
add
fstl
add
loopne
inc
pop
stos
and
ret
popa
inc
iret
or
stos
push
sbb
cmc
cmp
mov
fincstp
pushl
jns
xor
sbb
js
psrlq
lret
hlt
mov
dec
lea
jmp
stos
push
ss
insl
xchg
sbbb
sahf
lret
int
dec
ss
loopne
jbe
in
cwtl
rclb
xchg
cli
dec
into
xlat
push
push
xor
xchg
jb
pusha
sbb
xor
inc
ficoml
dec
sub
mov
sbb
sbb
sub
sub
cltd
xchg
inc
jo
sbb
enter
stos
loopne
aad
lods
das
mov
jno
movl
mov
mov
cld
xor
int
std
push
adc
add
mov
bound
lea
rcrb
dec
decb
icebp
sub
xchg
prefetchnta
adc
loopne
xor
test
ss
xchg
fnstcw
xor
mov
out
shll
cmp
orb
mov
xchg
mov
clc
xor
pop
sub
or
mov
pop
or
and
pop
cmpsb
enter
sub
fistpll
repz
or
cmp
movsl
out
nop
inc
leave
lods
mov
mov
xlat
mov
and
sahf
test
sahf
lods
fldcw
and
mov
bound
xor
inc
stc
mov
stos
arpl
call
add
test
call
xchg
mov
mov
dec
cmpsb
inc
push
push
mov
dec
pop
roll
mov
test
movsb
push
sti
dec
fcoml
jle
and
mov
jo
int
pop
lods
pop
xor
adcb
out
jp
jno
in
adc
inc
jnp
xor
inc
shrb
fstps
mov
loopne
jle
push
and
mov
push
xchg
test
inc
fists
adc
out
and
ret
call
xor
ss
dec
push
daa
enter
loop,pt
jno
ljmp
jmp
mov
test
push
mov
add
push
mov
shr
jp
or
loope
or
and
xchg
dec
dec
mov
test
mov
pushf
mov
push
add
mov
arpl
push
hlt
cmpsb
enter
add
pop
bound
popf
push
sub
insl
fnstcw
xchg
movsb
sub
imul
pop
adcl
adc
les
mov
adc
std
jae
in
mov
or
xchg
jne
and
or
cmc
mov
mov
test
in
daa
pop
add
test
andl
rcll
push
adc
xchg
scas
lret
cmp
add
mov
mov
mov
ret
mov
mov
out
ret
sub
in
or
in
in
jno
xchg
pop
out
lret
cmpsb
dec
push
jno
out
cwtl
push
aas
ja
cmp
push
aaa
pop
fxch
fwait
cmp
mov
loopne
push
fs
adc
mov
adc
mov
sub
jmp
lret
lcall
mov
fisttpll
xchg
mov
mov
and
inc
fiaddl
test
jb
lcall
adc
sbb
mov
push
inc
jmp
push
sbb
fs
push
ds
adc
mov
mov
dec
rcll
sahf
shlb
cmpsb
and
lahf
jnp
xchg
in
mov
or
xchg
ljmp
bound
ds
jecxz
das
xchg
xchg
xor
xchg
jbe
xchg
popf
aad
mov
popa
mov
cmc
xor
sbb
jbe
push
rcrl
int3
jmp
lods
inc
mov
xor
push
das
mov
pop
clc
and
mov
fsubp
mov
adc
sti
pop
jmp
add
fs
sarl
lahf
adc
ljmp
mov
xor
push
mov
movsl
or
dec
push
mov
clc
dec
scas
repnz
fcomip
ret
adc
inc
and
dec
popl
cmp
pop
fwait
push
mov
sbb
mov
inc
push
into
aam
add
lock
cmpsb
xchg
jl
mov
push
mov
jg
insb
sbb
add
or
and
cli
xlat
jnp
hlt
adc
dec
loope
fisttps
lret
ret
or
fs
jmp
and
out
psadbw
xor
icebp
ret
dec
or
push
inc
pop
fnstsw
out
add
or
pushf
xchg
xchg
shlb
fnstenv
ds
adcb
ret
mov
jge
xor
xchg
sub
pop
mov
lret
push
mov
jbe
lea
and
iret
add
aas
insl
or
push
icebp
ja
nop
mov
dec
test
add
adc
mov
popl
or
idiv
and
divl
and
dec
sub
xor
xor
insl
es
lcall
sub
xchg
mov
aad
jle
ret
pop
adc
xchg
fsubr
or
cmp
cltd
jmp
addr16
and
fistps
stos
not
movaps
mov
shlb
push
loopne
daa
push
mov
inc
pop
xchg
addr16
mov
test
xor
lret
sahf
pop
adc
pop
into
out
push
adc
pushf
cwtl
das
inc
adc
sub
cmp
sub
scas
pop
push
jb
pop
je
pop
lds
jno
jge
fwait
push
sub
sahf
fiadds
test
sbb
imulb
lods
or
cmp
or
enter
repnz
mov
pop
fistpl
sub
rclb
xchg
in
push
jo
inc
loop
loopne
sub
pushf
mov
cltd
mov
cmpsl
ffreep
mov
dec
ss
std
sub
sbb
xor
mov
pop
les
push
aas
mov
xchg
xor
cmp
outsb
sbb
leave
std
cmp
adc
jo
jge
inc
sub
mov
and
pop
scas
into
dec
icebp
repnz
or
inc
ljmp
js
pop
das
ss
cmp
mov
jae
or
fwait
ljmp
sub
mov
xor
mov
roll
in
dec
pop
mov
pop
jmp
pop
cmp
stc
pop
dec
movnti
call
cmpsl
daa
scas
jo
sub
push
cmp
insl
xchg
sub
mov
pop
mov
in
mov
movsb
popa
inc
mov
and
pop
mov
repnz
add
outsl
lret
inc
or
dec
pop
aaa
or
aad
lods
insb
fldt
mov
lcall
mov
in
imul
pop
test
inc
sbb
inc
loop
mov
sbb
js
ktestb
add
lret
jg
aaa
addr16
ja
xor
insl
lea
mov
xchg
paddsb
adc
cli
notl
push
xor
fidivs
xchg
jge
filds
mov
lahf
neg
xor
mov
lock
ds
fdivp
dec
lock
push
clc
and
stos
les
fistl
repnz
popf
dec
add
xor
pusha
jp
jge
pusha
push
mov
sahf
test
cmp
mov
dec
out
in
enter
xor
jb
pop
test
js
sub
ficoms
inc
cltd
pop
lahf
ror
xor
mov
incb
dec
sbb
ss
push
mov
mov
scas
xchg
push
dec
cmp
ret
aaa
add
and
je
fisubrs
test
xor
lock
lahf
mov
xchg
fldenv
je
adc
mov
lret
mov
idivl
fwait
in
pop
xor
pop
imul
and
repz
xchg
and
jmp
pop
outsl
or
cmc
outsl
enter
adc
es
rol
mov
and
out
mov
stos
jb
test
adc
js
push
add
mov
push
and
mov
mov
in
jns
lock
mov
pop
adc
popa
test
loope
dec
mov
cltd
mov
adc
addr16
out
insl
scas
jbe
fimuls
cmp
popf
xor
mov
xchg
xor
and
std
loope
xor
fistpll
scas
mov
mov
adcl
sbbl
or
or
cwtl
dec
push
call
shll
fldl
inc
popf
mov
iret
fnstsw
mov
jle
ret
es
ret
xor
jle
hlt
lods
xchg
and
and
jge
pop
dec
sbb
inc
std
sbb
dec
jno
movsl
ljmp
jbe
and
arpl
in
fnsave
cmc
test
sub
leave
push
loope
mov
gs
jno
inc
outsb
sub
pushl
push
sbb
les
inc
jbe
jo
jg
cmp
xchg
push
xchg
jne
sub
pop
daa
mov
icebp
js
cli
adc
push
xchg
in
call
sub
scas
int3
mov
add
movsb
inc
cmp
inc
enter
jg
add
mov
push
inc
es
arpl
push
jg
mov
and
loop
xchg
js
pushf
out
fs
inc
xor
adc
int
test
push
in
ret
inc
aaa
mov
push
jmp
mov
pushf
pop
addl
jbe
aam
mov
xor
std
adc
cmp
sti
push
notb
add
jg
je
outsb
push
or
mov
scas
add
adc
xor
cmp
mov
aaa
pop
inc
inc
sub
loopne
dec
cmp
xor
sub
cmp
pop
outsl
in
aas
and
inc
and
mov
andb
jl
imul
mov
ret
cmpsb
data16
clc
dec
adc
push
hlt
js
mov
dec
imul
mov
movsb
push
int
les
dec
cmpsb
lahf
loopne
pop
mov
sbb
xor
les
sahf
xor
adc
dec
out
stos
je
in
pop
xchg
mov
xor
inc
jb
pop
lods
stc
dec
pop
and
pop
mov
sqrtps
sbb
rolb
push
add
clc
fsubrs
or
ret
adc
subl
sbb
jne
repnz
aas
pop
dec
xchg
shll
jmp
xor
xchg
in
push
popa
add
mov
and
cmp
idiv
in
mov
add
aam
push
mov
jne
sbbb
cmpl
lret
sbbl
ljmp
jge
xor
pop
push
lret
jnp
push
dec
sbb
dec
add
aas
cmp
fs
lcall
pop
jmp
or
push
sbb
inc
std
add
xchg
pop
ds
jnp
rolb
mov
cli
mov
mov
add
addr16
inc
mov
push
stc
inc
mov
add
mov
and
ret
mov
lcall
stc
inc
repz
mov
push
push
push
cmpsl
mov
dec
cwtl
in
mov
inc
cmp
sub
lahf
cwtl
out
aaa
mov
push
rcl
insb
ficomps
into
jl
mov
ret
fildl
test
jge
push
ja
int3
cli
xor
jp
push
repz
mov
pop
sub
xorl
jl
fildll
jo
enter
jnp
inc
insb
cmpsb
xchg
daa
test
sub
xchg
pop
cmpsb
cld
jmp
xchg
jno
xchg
mov
dec
jb
dec
fldl
dec
sbb
inc
out
jmp
jo
faddl
mov
mov
loop
mov
cltd
pop
sbb
add
mov
mov
mov
jno
and
mov
mov
sbb
insb
enter
shlb
sar
push
add
push
cmc
jle
mov
repz
outsb
ret
cld
mov
and
mov
xchg
lds
xchg
sub
mov
mov
sbb
push
pop
push
push
fs
pop
xchg
pop
or
pushl
movsl
jge
lcall
sti
je
fimuls
cmpsb
mov
out
hlt
insb
test
jge
push
mov
sbb
int3
inc
or
stos
in
ret
fiadds
test
sbb
cmc
fldt
cli
cld
mov
jbe
pusha
jl
mov
in
ds
out
lods
stos
and
inc
dec
mov
loopne
xor
and
and
insb
mov
cli
jne
adc
dec
neg
xchg
into
push
push
pop
aaa
outsb
mov
xchg
outsb
xchg
test
mov
xchg
xchg
pop
jge
nop
cmpb
jl
ja
cmpsl
jmp
add
mov
xchg
test
or
inc
test
cmpsl
fcom
outsl
jae,pt
aas
out
sti
aam
std
sub
mov
jl
push
push
aad
push
xor
nop
mov
sti
loopne
push
jg
sahf
push
add
push
out
rolb
outsb
pop
cld
xorb
aas
xorl
mov
jl
jg
hlt
adc
add
fsubl
cwtl
adc
jbe
cs
xor
test
sbb
aad
dec
pop
push
stos
shl
xchg
addr16
push
sbbb
mov
sbb
shl
fcmovnu
dec
loop
loop
icebp
or
xor
add
xchg
xor
jno
cmc
lock
test
cwtl
add
leave
mov
push
jg
mov
fidivl
stc
mov
cmpb
pop
sbb
adc
loop
adc
data16
mov
push
and
inc
pusha
push
ja
sub
dec
xchg
sbb
mov
adc
cld
mov
xor
popa
adc
mov
les
cmpsb
into
mov
mov
mov
enter
into
scas
xor
aaa
addw
dec
add
loop
xchg
stos
test
repnz
and
loope
jno
in
popa
shl
add
std
xor
dec
jp
std
mov
outsl
movsb
mov
out
mov
sub
fwait
out
mov
mov
adc
stc
es
cmc
cld
mov
andl
jno
mov
lret
in
cmp
mov
mov
or
imul
fidivl
mov
ds
jns
aad
test
add
mov
outsl
notb
lods
jo
lds
dec
push
out
mov
jp
mov
lods
inc
lods
sbb
movsl
or
adc
orb
jp
inc
dec
mov
sbb
sub
mov
xchg
mov
mov
fcomps
mov
dec
cmpsb
sub
in
addr16
mov
sbb
or
in
shlb
mov
test
outsl
jnp
dec
movsb
xchg
xor
data16
pop
cmpsb
jle
lods
dec
cmp
in
or
ss
shr
mov
les
pop
lret
and
outsb
jo
repnz
call
hlt
mov
repnz
xchg
ret
cltd
cmp
jge
mov
jbe
mov
xor
push
push
jle
mov
sub
add
add
shrl
lret
test
dec
ret
test
sub
adc
je
add
out
aas
leave
jns
inc
test
adc
fimuls
ret
push
pop
push
sahf
pop
repnz
jg
pop
sbb
movsl
enter
sbb
jo
es
push
bound
inc
bound
jp
dec
pop
cmp
push
mov
xor
clc
test
lahf
jnp
or
push
gs
sbbb
pop
imul
adc
or
sub
jae
xlat
jo
sbb
lods
fldt
dec
push
fimuls
jnp
add
sub
aaa
popf
mov
leave
int
imul
in
jge
dec
push
jecxz
lahf
or
pop
xor
test
inc
jmp
or
pop
and
mov
sub
adc
or
jp
orb
test
add
xchg
gs
jne
gs
mov
mov
sub
movsl
mov
data16
shll
nop
popf
xchg
dec
int
imul
test
xchg
daa
pop
lcall
jmp
pop
inc
and
rolb
scas
cmp
aas
out
push
mov
rcrb
jmp
sub
adc
sarb
inc
dec
pop
adc
stc
cmp
gs
jp
inc
jbe
mov
cmc
sub
xor
cmp
cld
das
pop
xchg
lods
iret
push
sub
pop
mov
lock
loope
xor
repz
mov
out
iret
xchg
add
mov
mov
sub
in
adc
jle
adc
mov
or
add
adc
shlb
inc
int
jecxz
pop
lods
xchg
notl
lock
xchg
pusha
cltd
ja
inc
cltd
cmp
jle
and
imul
dec
aad
jge
dec
data16
dec
loopne
jmp
pop
push
cmpsb
xor
xor
mov
nop
xchg
sar
imulb
pushl
nop
cmp
inc
outsb
mov
rcrl
jl
outsb
ds
xchg
lods
xchg
xchg
sub
push
loope
jge
fs
ret
pop
in
mov
push
sub
xor
nop
dec
dec
mov
ljmp
pushf
cltd
mov
mov
imul
and
mov
cld
test
je
xor
lret
xorb
fsubrp
sbb
jbe
lods
xor
or
int
ror
and
mov
test
or
and
push
mov
clc
in
or
adc
cltd
dec
jp
sahf
rol
fucomp
dec
movsb
sub
jne
jp
jle
mov
or
add
add
sbb
push
fs
sbb
ss
pusha
mov
pop
sub
xchg
sub
mov
rcrb
hlt
ret
data16
pop
loope
cltd
sarl
inc
iret
or
cwtl
cmpsl
pop
xchg
mov
outsb
and
mov
fsubrl
in
cmp
das
xlat
cmp
dec
jne
dec
xor
add
gs
pop
mov
sbb
cld
or
arpl
mov
bound
push
pop
outsb
lcall
pop
add
shl
dec
dec
add
cltd
adc
dec
mov
dec
xchg
mov
mulb
sti
in
adc
dec
mov
pop
movsl
faddl
xor
filds
or
leave
ja
pusha
add
call
lret
dec
mov
std
sahf
jno
push
lret
icebp
leave
adc
inc
sbb
leave
jnp
adc
inc
dec
inc
adc
push
or
adcb
ja
xor
sub
mov
push
dec
xchg
fwait
repz
rcll
jb
push
add
icebp
insl
addr16
fistpl
xor
loope
bnd
mov
sub
sub
sbb
in
jns
xor
stc
lock
int3
test
sarl
pop
xchg
aad
cmp
shlb
lods
xor
js
dec
js
dec
and
in
pop
das
ret
mov
fldcw
or
int
xor
pusha
mov
xorps
ja
mov
mov
mov
xor
int
pop
ljmp
mov
dec
aam
xchg
repnz
push
dec
test
pop
test
pop
ret
cli
je
adc
push
jbe
inc
daa
fiadds
jg
inc
divb
sub
xchg
cli
dec
pop
enter
add
arpl
aaa
cli
call
shlb
cs
xor
shll
pop
mov
mov
cwtl
push
enter
dec
mov
push
mov
outsb
xor
pop
roll
pop
pop
pop
mov
sub
pusha
dec
mov
pop
mov
in
fldl
faddl
inc
or
cmp
xchg
out
mov
mov
shrb
xor
fs
xchg
xlat
bound
pop
mov
add
sub
jp
mov
mov
fiaddl
fcompl
push
pop
popa
push
mov
int
xchg
movsl
outsb
stos
or
leave
dec
inc
sbb
xchg
fildl
xchg
mov
inc
ret
movsl
outsl
jne
and
movsb
xor
mov
mov
test
pusha
les
std
or
fcmovbe
scas
jns
mov
data16
dec
xchg
pushl
hlt
and
popa
or
das
mov
xor
ds
dec
mov
sbb
push
jge
add
dec
xor
add
fucompp
mov
leave
in
das
cmpsl
sub
mov
mov
mov
adc
lret
loope
loopne
xor
stos
sub
and
cwtl
xchg
xor
cmp
lods
push
push
push
inc
xchg
xor
lcall
mov
stos
mov
inc
adc
bound
xchg
mov
jge
imul
negl
ror
aad
insb
mov
adc
and
dec
sbb
mov
or
mov
mulb
addr16
mov
jle
pop
shrl
push
add
pop
cmp
fbld
jge
lds
adc
jecxz
mov
aaa
test
cmpsl
cld
adc
loope
jb
push
push
or
lds
fdiv
fsubr
cs
insb
xlat
je
imul
push
loop
insl
xchg
aam
inc
xchg
jge
stc
inc
mov
pusha
sub
sbb
xchg
cmpsl
add
mov
xor
jbe
sbb
stc
dec
sarb
push
jnp
adc
dec
lret
pop
movsl
mov
mov
in
loope
pop
and
push
pop
mov
cwtl
cs
mov
or
loop
arpl
inc
jg
lock
adc
imul
jge
pop
push
or
in
mov
imul
aam
negl
xchg
ret
test
push
sub
mov
mov
push
mov
sub
rcrb
popf
mov
shl
sti
enter
lods
idiv
push
add
mov
das
cmc
enter
lea
jmp
scas
fst
and
dec
int3
mov
and
dec
dec
mov
push
iret
arpl
into
fs
pop
inc
add
jno
jns
roll
push
cmpsb
popf
sbb
imul
cmpsb
in
adc
jmp
stos
jp
mov
or
ret
outsl
lea
xchg
xor
mov
fisubl
lea
mov
or
sarw
adc
dec
mov
or
mov
dec
sub
pop
xor
push
data16
dec
jl
das
in
jb
pop
in
repz
mov
and
stos
add
in
push
loop
mov
imul
push
in
push
push
fsubrp
stos
aaa
or
cmp
insb
fsts
mov
cmovo
into
icebp
adc
je
jmp
stc
jle
mov
mov
inc
pop
mov
sbb
movsl
ja
jns
xchg
cmp
movsl
dec
arpl
add
jo
lcall
xchg
mov
push
pop
repz
int3
jl
lret
popa
imul
xor
stos
fs
imul
xchg
push
dec
mov
mov
cmp
sbb
xchg
testl
cmp
or
ds
inc
mov
ret
dec
test
xchg
jp
es
sub
or
call
cmp
inc
sub
and
and
call
dec
add
lods
lcall
es
sar
lahf
add
and
daa
inc
sti
outsb
fcmovu
xchg
lock
add
fwait
pop
test
out
push
iret
outsb
leave
jne
jno
push
or
push
mov
xor
shrl
dec
adc
aaa
bound
xchg
pop
dec
adc
call
xor
stos
mov
xchg
gs
dec
test
icebp
push
movsl
mov
xchg
sbb
ljmp
mov
repz
test
mov
js
gs
cld
into
jne
push
daa
shlb
or
push
inc
push
pop
xor
jmp
dec
mov
sub
push
repnz
mov
lods
pop
lcall
xchg
out
in
add
std
cmp
xchg
adc
lcall
mov
js
jmp
xor
jns
sahf
es
in
xlat
adc
or
sbb
cmc
add
ds
inc
jno
aaa
lret
add
inc
hlt
sub
xor
dec
enter
neg
mov
pop
loope,pn
xor
aad
popa
mov
lods
push
mov
cld
jg
push
mov
stc
push
cmpsb
pusha
inc
enter
fisubrl
scas
pop
or
jno
cmp
mov
stos
shl
mov
sbb
pop
idivl
sub
inc
sub
mov
pop
xlat
jle
stc
jmp
jg
pusha
stos
lods
aad
loopne
rcll
mov
adc
daa
xor
dec
mov
pop
imul
or
push
mov
or
jne
imul
jmp
les
pop
dec
mov
mov
mov
xchg
dec
sbbl
pusha
fmuls
fildl
jb
dec
sti
adc
fildll
dec
ljmp
xlat
add
out
inc
push
lret
jmp
mov
mov
imul
test
shll
ror
cmp
mull
jns
mov
pop
enter
clc
out
lcall
mov
pop
jae
xor
mov
adc
out
fidivrs
adc
ret
adc
std
js
mov
es
cli
leave
and
or
mov
pushl
iret
mov
mov
std
sahf
or
mov
inc
hlt
test
test
pop
lock
add
cmp
jb
int3
out
xchg
and
inc
pop
mov
pop
xchg
in
fisubrl
ja
sub
mov
push
push
gs
add
pop
fimull
aaa
and
cmp
add
jg
dec
test
or
enter
dec
aaa
popa
lea
inc
mov
cmp
arpl
lret
cmp
pop
dec
orl
repz
outsb
xchg
vmovaps
sbb
cmp
cld
mov
aas
or
or
jbe
add
push
mov
imul
out
dec
dec
sub
jbe
loop
add
jae
out
in
sbb
xchg
shrb
dec
test
sub
iret
dec
or
jbe
inc
and
lods
cli
xor
pop
xor
in
jmp
shrl
call
jmp
jmp
cltd
iret
xor
and
sahf
fstpl
imul
in
aaa
cmpsb
insl
or
rol
stos
stos
pop
sbb
adc
cmp
mov
popf
pop
xlat
inc
and
or
rcr
push
mov
cs
push
xchg
lods
jecxz
leave
adc
push
aam
jg
lock
or
or
dec
outsb
fstpt
adc
mov
and
mov
sarl
fadds
fadds
cmp
pusha
test
lahf
or
into
mov
cmc
popf
xchg
jp
dec
ret
cmp
ret
sbb
popf
popl
push
out
lret
outsb
xor
ret
ret
inc
mov
popa
out
inc
bound
adc
jmp
sbb
sbb
andb
mov
cli
pop
pop
fsubrs
adc
dec
dec
imul
xchg
pop
sbb
xchg
dec
cltd
push
or
jo
xchg
jecxz
and
dec
inc
not
cmp
cltd
add
mov
nop
lods
daa
xorb
pop
xor
sbb
into
dec
inc
mov
lret
push
mov
decb
cmp
dec
ret
test
es
repz
mov
mov
mov
je
xchg
mov
add
xor
inc
sub
jno
jg
stos
mov
jle
pop
xor
fsubrp
xor
push
inc
inc
dec
lds
movsl
mov
filds
test
lods
pop
and
in
push
pop
sahf
iret
push
fldt
aaa
out
ret
ljmp
pop
xor
add
je
cmp
arpl
adc
enter
pop
mov
push
ljmp
gs
add
cld
mov
and
jl
dec
call
cltd
nop
cmpl
mov
or
mov
mov
jge
call
outsl
pop
shl
je
xchg
je
test
lods
rcrl
mov
int
js
sbb
push
fwait
in
pop
mov
pop
xor
and
add
sbb
inc
add
lods
sbb
xor
enter
and
aaa
loop
or
push
fldt
ds
cmp
dec
mov
mov
dec
adc
movsl
loopne
jb
sub
fisubs
and
push
sbb
in
iret
test
cmpsl
mov
mov
cmp
or
enter
cmp
into
cmp
fwait
cmpsb
loope
inc
inc
gs
cld
push
or
xor
push
out
pop
and
stos
out
test
je
add
shl
inc
sub
cli
mov
mov
xlat
fst
dec
add
or
dec
dec
subb
pop
mov
loopne
sbb
fdivs
nop
hlt
jl
ret
lret
mov
mov
loope
adc
inc
les
repz
out
mov
insb
mov
popa
mov
jns
sub
es
sub
out
mov
jo
jae
dec
iret
loopne
or
lock
out
cmp
or
add
cwtl
subb
inc
aas
xchg
mov
fiadds
test
xchg
pushf
popa
sub
add
inc
mov
fisubrl
mov
jne
jecxz
mov
lahf
pop
aad
jnp
enter
dec
into
rcr
sahf
call
push
insl
movsb
or
mov
push
int3
mulb
push
cmp
mov
sub
mov
xor
mov
andb
add
mov
mov
leave
adcl
and
movsl
out
and
xchg
inc
je
or
fs
push
in
mov
repz
adc
jnp
xor
fs
movsb
jae
cmpsb
les
shlb
je
pop
push
adc
mov
data16
xchg
mov
ficoml
jl
jecxz
xor
jp
nop
mov
cmp
into
dec
mov
xorl
jle
dec
sbb
int3
push
pushf
jo
push
rcrl
jg
stos
in
lahf
push
mov
andl
ljmp
xchg
fistps
repnz
orl
es
enter
aas
mov
mov
adc
mov
ljmp
decb
cmp
dec
jns
pop
daa
je
cmc
out
ja
pop
test
int
push
pop
scas
in
and
mov
lods
rolb
in
jl
dec
in
test
test
ljmp
add
out
inc
mov
push
xchg
xchg
test
popf
cltd
mov
jle
lods
adc
jo
cmp
imul
ficoml
icebp
test
sbb
sahf
sub
imul
mov
cmpsb
jbe
cwtl
and
out
das
push
mov
xchg
jmp
dec
hlt
push
cmpsb
add
out
cmc
jl
sub
mov
test
cmp
inc
pop
jl
mov
mov
adc
xchg
add
and
sub
sub
lcall
push
push
loope
pop
in
sti
test
push
mov
jge
fs
leave
xor
sti
mov
lods
cmpsl
cmc
jo
cwtl
add
mov
and
cmp
orl
or
test
fstpl
into
cld
add
lods
mov
cmp
adc
leave
push
int
and
stos
pushf
jmp
xor
loope
xchg
out
push
cmp
jg
orl
mov
adc
fbstp
push
cmp
inc
or
jno
cmovnp
or
js
sub
loope
cmp
into
mov
ret
push
cmp
mov
pop
sti
or
loopne
mov
xchg
cwtl
adc
pop
shrb
loop
mov
les
sub
pop
lret
push
adc
xchg
fildll
jmp
xchg
adc
mov
jle
fbld
push
mov
ds
and
mov
popf
sbb
pop
cmp
mov
orl
out
adc
cmp
push
out
pop
pop
adc
xor
lods
jb
add
hlt
scas
jno
sub
pop
dec
mov
add
aam
push
xchg
sub
lahf
iret
fmuls
mov
and
outsl
in
dec
jp
or
dec
cmc
aam
out
in
xor
xorl
mov
sti
divl
pop
std
sti
xor
xchg
mov
xchg
mov
mov
aad
mov
aam
adc
scas
repz
sbb
and
test
ljmp
ret
into
or
loope
addr16
push
lods
popa
fldcw
adc
lods
mov
adc
stc
cwtl
scas
dec
xchg
push
daa
adcl
jge
imul
aam
sub
popf
lret
jge
repz
sbb
arpl
imul
inc
and
lahf
mov
ret
es
push
jge
mov
push
call
mov
adc
mov
inc
cmp
clc
int
bound
xor
idivl
sub
aad
shlb
mov
ljmp
popf
test
push
or
gs
ret
dec
pop
lret
add
xor
pop
xor
shrl
push
pop
or
mov
loope
and
cmp
lret
shrl
in
mov
mov
fwait
pop
pusha
lods
mov
mov
in
outsb
int3
cli
cmp
adc
in
xchg
fidivl
test
std
add
mov
cld
sti
movsl
pop
test
rorb
mov
mov
pushf
iret
or
dec
mov
subb
loope
lret
mov
mov
push
shrl
and
loope
xchg
js
out
or
cld
inc
aam
ds
mov
mov
test
or
add
jp
adc
rcrb
mov
inc
in
and
into
out
sub
or
ds
insb
fldl
pop
jns
sub
lahf
cli
ds
xor
push
out
jg
lret
sub
fsubr
push
into
call
mov
ret
mov
dec
push
push
xchg
dec
fs
aad
adc
leave
fisubrl
out
fs
imul
push
pop
das
mov
shlb
test
jmp
xor
jl
or
jbe
xor
hlt
icebp
mov
adc
sar
lahf
or
add
push
negl
test
test
jb
inc
pop
das
mov
sbb
dec
or
fists
adc
icebp
fisttps
xchg
ds
sti
ret
loop
sbb
dec
mov
cmpsl
je
mov
mov
jle
nop
xor
xchg
or
adc
rcrl
adc
sbb
xor
mov
nop
pop
cwtl
arpl
outsb
mov
ret
mov
movsl
push
lods
inc
sbb
enter
and
jmp
lahf
pop
imul
inc
jge
or
and
stos
xchg
das
lret
lods
jge
add
dec
stc
push
mov
nop
xor
dec
arpl
shll
add
or
sub
pop
sub
dec
xor
mov
and
mov
mov
ja
repz
insl
cs
cmp
daa
out
cmpsb
fcompl
int
sti
arpl
insb
xlat
dec
fxtract
or
pop
adcb
in
sti
jmp
jns
adc
cmp
je
call
and
std
mov
shll
mov
sub
jns
jbe
dec
sbb
ljmp
add
dec
cmpsb
scas
loop
movsl
stos
fistps
outsb
sub
pusha
shl
pop
rorl
or
imul
int3
mov
aad
push
jae
xchg
pop
adc
xchg
in
push
jbe
cs
addr16
inc
add
icebp
cld
mulb
insl
adc
aas
mov
fs
movsl
cmp
sub
sti
push
es
push
add
in
pop
or
push
push
inc
data16
inc
mov
cwtl
aas
fldenv
pop
adc
jo
mov
pop
mov
std
mov
xchg
xor
cwtl
xchg
mov
pop
cmp
add
call
ret
adc
mov
test
mov
fwait
push
cmp
in
pop
cltd
mov
rcl
roll
lret
mov
andb
js
aas
cmpl
movsb
scas
sarb
and
ja
icebp
fcmovbe
cld
inc
fsubrl
push
and
or
ficompl
mov
hlt
aam
das
push
xchg
jecxz
adc
inc
in
icebp
lcall
cmpsl
data16
xor
clc
test
lahf
in
out
pop
push
lahf
orl
or
in
std
fucom
jmp
cmpb
mov
outsl
jle
test
or
xchg
es
ds
fisubl
xchg
subl
xchg
inc
andl
inc
or
xor
mov
add
mov
adc
popa
sahf
clc
xchg
xchg
push
daa
dec
cmp
loope
xchg
insl
pop
repnz
inc
inc
popa
shlb
mov
add
test
fnsave
jmp
fcomps
outsl
test
iret
mov
mov
sti
rorb
sub
sub
xchg
cwtl
dec
push
sti
stos
or
stos
jo
sbb
addr16
dec
out
push
loopne
filds
js
fs
inc
ficoms
rcl
mov
jl
nop
push
pop
adc
pop
mov
push
fisttps
int
pop
jmp
inc
into
sbb
sub
jo
add
adc
negl
jge
repz
leave
ror
dec
lret
idivl
out
out
mov
cli
jl
xor
xor
and
sbb
ud2
inc
add
test
mov
pop
cmp
mov
jnp
mov
lret
sti
mov
inc
sbbl
arpl
or
in
push
es
sub
push
xchg
push
repnz
push
movsb
cs
jl
pop
cwtl
mov
jbe
imul
icebp
jmp
cmp
add
addl
pop
mov
push
add
das
lods
push
test
pop
movsl
fldt
test
adc
into
xor
jecxz
jns
push
nop
insl
fldt
sar
fwait
je
gs
outsb
out
bound
inc
mov
mov
ss
ljmp
mov
push
psubb
inc
cmp
insl
outsb
adc
fsubrs
adc
pop
pop
std
cmpsl
mov
jg
repz
and
mov
fldl
enter
stos
scas
fwait
mov
xor
push
mov
rclb
and
cmp
jge
mov
decl
stos
push
mov
ljmp
pop
cmp
fs
jmp
fnstsw
sub
jecxz
daa
sbb
mov
sbbl
mov
or
push
popa
pop
jns
pop
jg
outsb
inc
jmp
adc
dec
lods
push
test
cmc
sahf
pop
das
test
out
push
fistps
popf
fimuls
push
daa
mov
mov
call
lock
out
dec
jb
outsl
int
inc
lcall
call
movsl
sub
dec
adc
movsb
test
ret
mov
movsb
out
outsl
mov
cmp
stc
or
jl
fstpl
popf
add
movsb
les
nop
fwait
sub
lods
mov
lcall
andl
lahf
push
mov
sbb
mov
add
push
mov
lods
xor
pop
loope
xchg
inc
mov
and
loopne
sub
movsb
mov
test
cld
popf
push
mov
scas
push
out
mov
test
leave
mov
andb
cmp
jns
call
test
cmp
mov
cmp
push
mov
xchg
adc
std
xchg
pop
pcmpgtw
cmp
mov
std
in
inc
fwait
xor
lods
dec
call
stos
lret
mov
cmc
std
lret
jp
or
hlt
cmpb
inc
cmp
mov
lret
xchg
gs
add
inc
clc
adc
test
mov
jae
push
lods
ss
icebp
loope
cmp
add
adc
daa
addr16
push
sbb
data16
adc
jb
lcall
xor
ss
mov
cmp
or
rol
xor
pop
pop
and
xchg
or
ljmp
add
inc
sbbb
pop
loopne
call
jl
dec
insb
cli
xor
dec
imul
mov
xchg
dec
add
pop
mov
out
xor
pushf
sbb
dec
cwtl
out
and
lods
movsl
add
fs
inc
mov
xor
push
or
fs
mov
or
jle
rclb
outsl
push
into
push
cmp
es
pop
mov
dec
jae
push
pop
insb
cmp
gs
push
xor
scas
inc
pop
ret
stos
cmp
sub
test
mov
popa
xlat
sbb
sub
dec
xor
pop
jp
sbb
fnsave
xchg
add
and
sbb
mov
xchg
test
ss
add
add
sub
mov
out
clc
push
fldt
sti
stos
shrl
pop
nop
loope
push
hlt
and
fs
fmull
push
mov
shrb
in
mov
pop
and
jg
adc
andl
mov
lds
adc
dec
clc
call
in
fiaddl
add
shrl
out
pop
dec
hlt
es
dec
sbb
inc
and
push
iret
pop
push
lahf
arpl
lret
add
push
pop
test
stos
mov
fdivrs
fwait
in
sub
pop
mov
and
xchg
xchg
rcr
sti
add
test
mov
add
mov
push
lea
enterw
out
lcall
mov
cmpl
into
mov
gs
lock
jnp
stc
xchg
push
jecxz
push
cmp
popa
shll
into
dec
mov
jmp
pop
out
jecxz
test
mov
push
jl
cmp
and
movsb
mov
jge
inc
insb
mov
out
inc
xor
ss
fs
fwait
pop
add
ret
inc
ss
and
pop
or
xchg
push
test
pop
push
add
sub
loop
xchg
insl
aaa
jle
ret
cmpsl
mov
push
test
and
addl
aas
jbe
mov
jmp
adc
aas
xchg
ret
scas
hlt
das
fdivrl
dec
inc
decl
or
mov
aam
lods
scas
add
or
dec
or
into
lds
lock
or
and
clc
push
pushf
mov
rorl
mov
nop
in
jno
lods
xor
lods
adc
jmp
daa
push
inc
dec
cmp
fnstenv
movsb
dec
enter
push
loop
pushf
arpl
outsb
adc
sbb
es
lret
adc
je
jg
jge
out
or
xor
or
pusha
sub
jno
lahf
rorb
jns
jo
xchg
jp
pop
xor
dec
bound
mov
lock
mov
sub
js
sbb
xchg
adc
stos
xchg
test
sbb
inc
loop
mov
push
xchg
out
jns
push
cld
push
sbb
jnp
mov
push
pop
push
outsb
xchg
push
pushf
pushl
jns
test
test
push
adc
mov
sub
pushfw
cmp
leave
cmp
pop
rcrb
xchg
negl
mov
out
das
xor
sub
push
mov
sbbb
add
cld
repnz
lds
or
sbb
xor
in
sub
sub
scas
aam
bound
jmp
xchg
into
call
lock
xor
inc
shrb
mov
ljmp
xchg
pusha
inc
mov
fcomps
shrb
rolb
mov
xor
lock
outsl
pushf
jae
mov
scas
push
ror
outsl
cmp
mov
add
nop
and
fwait
pop
rclb
leave
insl
loopne
push
mov
gs
sbb
mov
or
or
repnz
clc
sti
xchg
jg
daa
rcll
es
mov
or
xlat
and
sub
inc
push
shl
js
dec
xor
popa
aam
lea
in
repz
sub
push
es
xchg
jl
or
loopne
push
xchg
lods
mov
mov
xchg
push
pop
fwait
add
add
cmpsl
stos
push
mov
push
orl
adc
add
aam
jge
leave
test
jg
lea
insb
out
cmp
dec
mov
imul
push
lods
jns
stc
out
or
inc
into
push
pminub
test
in
inc
and
inc
ljmp
mov
mov
repnz
mov
and
pop
mov
jne
adc
out
add
iret
jecxz
ss
in
inc
push
sbb
xchg
hlt
add
mov
pop
icebp
mov
repz
sub
in
faddl
dec
mov
mov
and
lret
loopne
push
lcall
push
fldl
fistpll
mov
dec
sbb
mov
adcb
or
shlb
stos
into
sub
insb
fisubrl
outsl
fwait
cwtl
subl
jbe
mov
subb
shll
xchg
cmpsl
enter
popa
adc
fsub
add
mov
insl
and
xchg
ret
fcompl
xor
xor
cwtl
mov
sbb
inc
sub
mov
xchg
jnp
push
and
rcr
mov
pop
cmp
dec
or
cmc
jns
mov
jo
xchg
pop
xchg
mov
stos
scas
js
cli
push
xchg
pop
out
fwait
or
shl
fcoml
lahf
xchg
pop
pop
repnz
lods
jle
insl
inc
int3
stos
push
mov
dec
cmp
leave
dec
jle
mov
in
cmovno
jbe
pushf
ja
xor
ficoms
add
and
or
loopne
aad
cmpxchg
into
clc
jle
rorb
and
add
loop
stos
insb
cmp
fucomp
jnp
xchg
xor
cld
or
push
mov
popa
mov
addr16
lahf
xor
cmp
std
mov
mov
xor
jmp
or
lahf
leave
rcrl
mov
loopne
stos
lods
mov
rclb
mov
imul
dec
inc
xorl
jge
fisttpl
int
cmpsl
dec
arpl
movsl
fisubs
sahf
hlt
inc
add
sbbb
pop
cs
daa
imulb
sub
jmp
out
ret
xchg
xor
adc
les
inc
mov
xchg
jl
mov
push
xor
dec
int3
push
loope
inc
jg
add
add
test
fldcw
or
pop
push
mov
fimull
ja
notb
in
enter
cmpsl
icebp
dec
mov
xchg
clc
push
stc
gs
pop
clc
sahf
fbld
ret
popw
adc
dec
lret
pop
arpl
sbb
ret
dec
filds
lahf
xor
xchg
std
push
lea
lods
nop
mov
or
xor
jecxz
xchg
stos
aaa
jnp
icebp
pop
pop
xchg
adc
in
push
jecxz
into
mov
cmp
add
sub
sub
lmsw
and
fs
nop
cmpsl
fwait
jmp
inc
cmp
sub
ret
pop
mov
jno
mov
cmc
notb
sub
dec
lcall
popa
js
jno
inc
cs
ja
and
jmp
xorb
and
cs
or
mov
loopne
cmpsl
jns
jno
cli
pop
mov
push
push
xor
pop
jl
cmc
cmpl
and
fimull
add
das
or
mov
lret
jnp
arpl
mov
push
ret
int3
fsts
sub
pop
xor
fsubs
sbb
mov
mov
fdivs
add
xor
inc
es
jno
xchg
out
pop
cmpl
data16
frstor
mov
push
push
out
push
into
cld
inc
push
aam
sbb
xor
jo
andl
ds
ja
adc
addr16
mov
xchg
pop
roll
xor
test
dec
ss
mov
xchg
push
mov
sub
push
pop
mov
xor
sbb
sub
js
sti
in
xor
xor
rcr
jmp
mov
enter
outsl
mov
jbe
add
loop
cmp
sbb
lret
xor
push
sub
mov
push
mov
pusha
jb
sbb
std
in
in
pop
dec
rorb
jno
push
testb
pop
movb
inc
ficoms
repz
cltd
loopne
lret
or
dec
xchg
mov
std
pop
scas
int3
insl
jae
mov
lods
adc
mov
or
insb
mov
mov
sub
add
cmc
test
shr
iret
aas
es
or
dec
xchg
js
pop
xchg
out
lcall
fwait
ds
jmp
jl
arpl
insb
aaa
test
jge
push
push
les
sar
push
mov
sub
rcl
aas
sbb
jo
clc
push
ljmp
jmp
out
add
lcall
mov
pop
fisubs
cli
add
jns
mov
mov
mov
scas
es
or
jmp
fidivrl
pop
sbb
leave
movsl
jo
cmc
dec
jp
lds
in
popf
fs
fbstp
cmp
pop
push
in
movsb
aam
mov
test
jne
cltd
shrb
add
fisttpl
cltd
push
ljmp
add
xchg
jge
pop
and
xchg
test
pop
dec
add
dec
data16
sbb
xchg
lods
xchg
lcall
mov
add
les
cmc
xlat
inc
jle
xchg
sbb
cmpl
std
jge
jle
test
mov
loopne
in
sbb
icebp
pop
xchg
fs
aas
push
outsb
xchg
xor
lcall
pop
mov
mov
shr
xlat
jbe
jns
arpl
into
mov
repnz
and
jmp
mov
xchg
test
pop
and
pop
push
rcr
leave
push
pop
enter
scas
das
into
fcoml
ja
mov
push
fwait
xchg
push
into
test
cmp
into
gs
sub
jnp
or
repz
cmp
pop
shlb
adc
enter
mov
in
inc
shll
xor
xor
jg
push
arpl
pop
inc
cli
stos
das
pop
mov
adc
nop
daa
in
xor
cmpl
sbb
add
add
push
adc
fcompl
and
pop
inc
in
inc
pusha
sbb
jns
sbb
jp
aas
call
cld
dec
aad
lea
test
je
dec
das
test
mov
mov
add
dec
add
mov
pop
sbb
popf
int3
lahf
imul
mov
lret
clc
lods
lds
or
stos
dec
ds
fyl2xp1
pop
incb
test
mov
pop
push
sar
xchg
sub
pushf
sbb
adc
mov
dec
insl
cmp
loope
cmp
dec
sahf
sahf
jmp
jb
lods
lods
stc
scas
ja
or
insb
cmpsl
jnp
int
push
push
shrl
jne
das
icebp
adc
adc
xchg
mov
fsub
rclb
divb
fdivl
fstpt
repnz
es
mov
xchg
mov
inc
cli
icebp
and
mov
dec
inc
mov
pop
ret
ljmp
aam
or
xchg
ror
jne
enter
sub
shufps
sbb
adc
jnp
test
mov
data16
push
icebp
pop
subb
mov
fidivrl
inc
push
add
and
cmp
inc
cmp
loop
outsb
mov
fstpt
dec
pop
adc
adc
imul
ja
inc
movsl
shl
mov
jp
add
les
in
cmp
inc
pop
xor
scas
xchg
xor
inc
mov
mov
ja
add
sub
lret
hlt
js
mov
mov
pop
clc
decl
inc
sbbl
fnstcw
repnz
push
add
fxch
dec
or
lret
sub
cltd
scas
sub
and
push
jnp
mov
push
dec
push
dec
inc
jns
sarl
test
int3
or
xchg
pusha
mov
fists
and
aas
xchg
mov
mov
push
cmp
push
dec
notb
test
mov
lret
add
inc
cmp
aaa
sub
lods
push
cmpsb
cs
push
adc
sbb
leave
fsub
mov
push
enter
xchg
jmp
das
dec
xchg
push
push
jge
std
xlat
dec
xchg
outsl
add
push
pop
popa
clc
pushf
incb
sub
je
dec
jl
test
pushf
push
mov
loop
sub
lcall
pop
popf
cmp
mov
jge
and
enter
lds
lcall
xchg
add
jecxz
sbb
sbb
clc
iret
adc
xchg
add
pusha
jno
xor
cmp
cltd
sub
and
gs
les
repz
push
ds
inc
rol
nop
test
cmp
jb
pop
xor
dec
int
lret
popf
mov
lods
in
psubb
loope
idivl
dec
cs
pushf
outsl
cmc
pop
or
dec
cmp
or
lods
sti
inc
ficoms
mov
mov
pop
lret
mov
cwtl
pop
and
add
sbb
push
mov
xor
mov
cmp
and
dec
fldenv
shl
fistps
sub
push
pop
pop
dec
adc
lret
hlt
call
push
cli
mov
fcomps
cld
push
popa
fstpl
or
scas
xchg
mov
dec
inc
lods
fcomip
jae
into
sbb
test
add
cmc
mov
sbbl
jle
jno
ficoml
aam
mov
dec
imul
mov
push
outsb
xchg
loopne
iret
testl
lods
cmp
fdivs
ror
call
insb
cmp
mov
jo
jmp
mov
vfrczss
popa
shll
hlt
pop
scas
cmpsb
adcl
popf
in
sbbb
mov
les
add
push
icebp
insl
repz
xchg
jns
push
test
and
push
mov
sahf
and
jne
imul
das
sub
into
lahf
arpl
mov
mov
cmp
mov
mov
mov
lods
cmp
mov
push
loop
mov
mov
cltd
adc
mov
push
xchg
add
cmp
cmp
push
in
lret
pop
rcrb
fwait
and
jmp
or
test
jl
sub
dec
lods
add
ds
adc
lods
mov
jnp
push
les
pop
jge
stos
fdivl
mov
shl
js
jle
outsb
xchg
movsl
push
scas
or
mov
mov
xor
lcall
addb
ja
int
xor
cmp
leave
add
loope
std
dec
mov
or
and
mov
aas
shlb
lds
lea
jb
call
pop
dec
arpl
cltd
fdivl
jl
add
mov
jmp
dec
int3
clc
jecxz
xchg
xchg
icebp
xchg
cld
repz
mov
sti
add
xor
pop
jo
imul
ret
push
std
ror
rorl
stos
mov
push
repz
sub
pop
pop
pop
inc
aaa
cmpsb
push
sub
ss
in
sbb
mov
pop
inc
int3
in
add
rolb
mov
fidivrl
jne
int3
lret
mov
dec
push
push
mov
xchg
adc
iret
into
sbb
lods
movsl
pop
mov
mov
into
sti
dec
out
idivb
push
hlt
mov
cmpsb
push
and
adc
mov
hlt
ret
pop
ja
in
xchg
mov
mov
daa
push
mov
sahf
iret
add
fisubrs
stos
popa
pop
jmp
mov
jb
push
mov
push
out
adc
push
jge
cmp
xchg
xor
pop
ss
call
or
sahf
cs
and
fsubl
les
sub
mov
inc
sub
push
jae
mov
push
imul
lret
mov
sub
stos
add
lea
loopne
aam
imul
rcr
and
xlat
bound
jno
inc
adc
cltd
pop
cli
je
push
xlat
mov
mov
inc
cli
fwait
lahf
ljmp
jge
dec
js
push
push
add
add
or
shlb
daa
xorl
jmp
and
sbb
mov
mov
aam
push
jecxz
les
out
in
das
mov
cmp
movsb
stc
mov
push
mov
lcall
divl
add
or
movsl
pop
inc
dec
and
addr16
ss
sbb
rolb
xor
imul
scas
popf
sbb
add
scas
fmull
fwait
cmp
jne
popf
sub
dec
xor
mov
gs
jnp
push
shll
jl
addr16
rep
int
xor
pop
ret
dec
or
xor
or
cli
inc
or
ljmp
inc
adc
pop
ljmp
scas
dec
add
out
cmpsb
pop
int
loopne
adc
xor
adc
jne
scas
adcb
test
dec
dec
ret
push
dec
loopne
mov
ss
dec
mov
ret
out
lock
dec
adc
call
cmp
int3
sub
cmp
inc
xor
mulb
leave
nop
sahf
pop
movsb
mov
lcall
in
pop
mov
or
and
mov
sbb
sbb
fiadds
sub
xor
pop
cmp
fstps
outsl
jg
sbb
aam
mov
inc
sub
cli
xor
adc
aas
bound
aaa
dec
jl
mov
mov
pop
sbb
xchg
repnz
push
cmpsl
movsb
add
fisubl
sub
stc
pop
jae
lock
jmp
pop
mov
cmp
loope
rclb
repz
mov
mov
mov
add
jbe
mov
repnz
jg
xchg
xchg
nop
out
pop
lods
out
dec
movsl
or
insb
incb
push
xor
movsl
mov
repz
fcmovnu
pop
out
std
sarb
jp
push
fdivs
stos
subl
mov
es
xor
call
scas
inc
adc
orps
jge
pop
lahf
xchg
sbb
dec
sbb
mov
cwtl
lret
mov
lods
xchg
or
inc
dec
and
pop
cmpb
cmp
dec
push
int
xchg
jno
jb
lret
sbb
ljmp
scas
jle
xchg
cs
cs
out
push
sbb
nop
mov
lea
jnp
and
enter
fsubs
subl
xor
pop
inc
test
in
movsb
ret
clc
cltd
pop
outsl
pop
cwtl
out
xor
pushf
dec
pop
push
or
stc
pushf
repnz
sti
push
out
jno
mov
cmp
push
mov
xor
push
sbb
je
call
sbb
test
mov
pusha
lret
iret
int
fsubs
pop
jbe
pop
or
aas
fwait
pop
dec
bound
fmuls
roll
push
dec
dec
xchg
and
in
leave
and
cmp
repz
das
call
mov
pop
sub
imul
jb
push
lock
in
and
fists
sbb
mov
cmp
xor
push
or
inc
test
dec
jnp
lock
dec
les
lret
or
lret
and
ret
add
ret
scas
xlat
pop
xchg
jl
out
push
ljmp
mov
xchg
scas
dec
mov
rcll
or
hlt
cmp
int
ja
lods
lcall
xor
in
mov
and
in
sub
clc
icebp
cmpsb
dec
jae
hlt
jg
sbb
mov
dec
xchg
cmp
pop
adc
or
xchg
clc
pop
in
adc
mov
lret
mov
cmp
mov
pop
adc
add
mov
push
repz
pop
bound
sub
push
or
cmp
scas
das
cmp
in
push
add
cmpsl
xor
cwtl
inc
inc
pop
out
pop
add
int3
and
pop
imul
adc
or
add
adc
nop
cmp
int3
aam
shlb
in
sbb
aam
pusha
xor
pusha
mov
xor
aad
push
rcr
mov
sub
cli
addr16
mov
ja
negb
mov
xchg
xchg
lock
adc
mov
subb
dec
stc
and
mov
push
mov
mov
push
shlb
push
dec
lea
adc
loop
and
fnstsw
jnp
rcrb
sbb
jle
dec
adc
rolb
test
add
pop
adc
sbb
jb
imul
or
xchg
iret
cli
pop
or
cmpb
xchg
push
mov
sub
mov
loopne
dec
sbb
xchg
test
mov
cli
mov
or
shll
js
sub
and
dec
pop
and
xchg
inc
dec
scas
xchg
enter
fdivs
pop
jns
outsl
ucomiss
xchg
or
mov
mov
bound
jb
dec
adc
dec
ja
add
pop
push
add
adc
mov
adc
or
adc
pop
and
or
out
call
out
add
dec
popa
pop
les
mov
int3
repnz
shl
jecxz
aam
in
insl
mov
dec
incl
mov
stc
push
aad
mov
cmp
divb
into
mov
aas
dec
pop
push
mov
jbe
mov
sub
in
xchg
sbb
jl
stc
aas
push
mov
jmp
outsb
mov
inc
cmp
cmc
nop
jbe
inc
popf
mov
fdivrs
insl
aas
incb
dec
aas
clc
iret
add
andl
aad
mov
mov
push
add
mov
iret
std
js
cmp
inc
dec
in
push
and
cmp
inc
in
lods
mov
ror
add
pusha
je
bound
push
out
test
sub
imulb
rclb
adc
add
sub
mov
or
push
test
ss
sbb
rcrl
mov
into
xchg
push
push
pop
add
subl
hlt
cmp
lcall
pop
sarb
and
sti
test
in
mov
inc
test
int3
xchg
repz
inc
shll
jle
fldl
daa
mov
imul
xor
mov
jne
mov
jge
or
loop
not
data16
fisttps
rorl
add
mov
movsl
mov
ret
fcmovnu
jo
or
addl
pop
mov
scas
sarl
sub
push
lahf
loop
rcll
in
or
jle
ss
and
mov
push
or
xchg
ficompl
push
jge
into
inc
rcrl
xor
mov
sub
pop
pop
movsl
bswap
or
mov
push
out
cs
mov
nop
cs
cltd
lahf
mov
cmp
leave
or
add
hlt
shrb
out
mov
jecxz
pop
sti
adc
push
aad
fdivs
cld
fs
jge
sbb
mov
stc
xorl
out
inc
mov
add
cmp
aas
pop
sub
mov
aam
jb
add
sub
js
or
out
xor
rcr
imul
cmpsb
xchg
clc
in
jecxz
enter
adc
clc
add
faddp
orl
and
dec
jge
mov
jecxz
call
cmp
in
movsl
jnp
into
mov
mov
imul
sub
xchg
ret
inc
aad
and
addr16
in
imul
out
push
jns
xor
out
push
movsl
in
lret
jns
mov
dec
cmp
add
jle
orl
lea
adc
mov
jnp
hlt
dec
xchg
iret
dec
sub
lahf
cmp
std
pop
mov
adc
sub
add
adcb
subb
cmp
adc
sub
icebp
scas
mov
mov
imul
push
shlb
mov
add
iret
imul
in
sbb
xor
lret
jmp
jb
in
fcmovnu
gs
in
clc
or
das
arpl
cld
dec
xor
aam
stos
sbb
in
and
out
cmpl
jb
loopne
insb
dec
cwtl
fisubl
jo
sbbb
xor
je
fstpt
add
in
rolb
aaa
pop
fimuls
dec
pop
xchg
pop
pop
adc
addr16
push
push
adc
test
adc
test
inc
pushf
inc
dec
es
dec
sub
js
shlb
inc
rcll
lods
mov
pop
rorb
cmp
test
cmp
mov
shlb
pusha
xchg
cmp
inc
in
ss
enter
push
and
xchg
cmpsl
nop
xor
xor
hlt
ja
pop
xor
sbb
dec
repz
jecxz
sahf
leave
hlt
inc
test
test
xor
ds
add
push
add
fucomip
sbb
add
sub
bound
adcb
mov
mov
dec
fistpll
imul
enter
rorb
jecxz
xchg
daa
pop
push
mov
xorb
adc
push
test
cmpsb
inc
push
lcall
bound
or
incl
ljmp
ds
add
xor
mov
mov
fidivrs
mov
xchg
xchg
push
enter
enter
stos
push
and
mov
imul
iret
adc
cmpsl
push
pop
fldl
jne
sbb
push
push
push
fnstenv
mov
in
bound
push
inc
jp
in
jge
sub
or
insl
xor
in
sarl
jg
dec
lock
pop
or
and
or
push
aad
shll
mov
test
cmpsb
adc
arpl
psraw
inc
add
bound
popa
stos
sub
and
push
sbb
bound
mov
lods
mov
jbe
call
xor
mov
or
addr16
out
pop
lret
pop
lret
jne
pop
dec
and
mov
jp
xor
sarb
mov
shlb
imul
mov
test
push
pop
inc
out
inc
adc
add
outsb
popf
daa
repnz
data16
pop
push
inc
sub
jg
xor
lea
push
shll
add
add
jne
movsb
lret
mov
ret
insb
gs
mov
andb
or
fs
repnz
mov
mov
je
push
rcll
data16
je
fucomi
and
inc
xchg
fs
mov
rcrb
pop
adc
add
nop
and
and
iret
cltd
adc
movsb
add
movsb
sti
cmp
and
insb
ret
mov
jmp
pop
cmp
test
pop
jg
dec
cmp
mov
sub
mov
out
shlb
mov
lcall
mov
mov
cmp
ficompl
pop
jp
loopne
shlb
adc
jle
dec
cmp
and
add
repnz
shrl
enter
push
cwtl
mov
and
in
cmpsl
shlb
sub
adc
imul
mov
push
push
inc
cmp
jne
push
test
jbe
imul
cs
std
in
fisttpll
mov
mov
test
or
fwait
lret
mov
xchg
fldl2e
xor
das
movl
repz
imul
imull
addr16
cltd
adc
fiadds
and
fstpt
loop
iret
lea
rcll
pop
arpl
mov
push
pop
push
and
dec
out
lds
xchg
fsts
or
cmc
rclb
xor
bound
jp
sbb
cmp
clc
in
leave
call
repz
xchg
jo
lahf
or
pushf
popf
mov
mov
cmp
jbe
mov
add
inc
or
mov
xchg
movsl
or
aad
filds
mov
loopne
fcmovbe
xor
rolb
jle
leave
jns
pushl
shll
lret
js
leave
sti
inc
minps
jge
and
lock
push
fdivr
push
mov
xchg
les
test
sub
xchg
pop
fs
cli
addb
fs
xchg
mov
jo
sub
mov
mov
clc
std
data16
mov
fimull
scas
into
popf
or
sub
sbb
stc
mov
popf
es
repnz
in
loop
and
fidivrl
cli
in
arpl
int3
adc
adc
or
push
mov
dec
push
cmp
cmp
rolb
mov
push
pop
adc
push
std
and
fisttpl
cs
repz
mov
stc
sub
outsl
js
sub
mov
adc
dec
push
popf
lods
push
mov
in
or
add
sub
shrl
dec
leave
xchg
adc
inc
pushf
stc
mov
nop
dec
jne
jb
mov
cmp
movsb
imul
dec
rclb
fidivrl
jnp
data16
lret
mov
sti
out
fistpl
es
pop
rcll
push
mov
cmp
sub
ljmp
push
sub
outsb
mov
mov
imull
mov
loopne
mov
inc
jle
xchg
frstor
push
stc
rcll
fnsave
mov
or
or
sub
ss
sub
subb
xchg
in
mov
test
mov
sub
mov
sub
scas
mov
sbb
mov
aas
push
shll
and
lods
jne
mov
clc
test
stos
call
jne
ja
jns
loope
stos
sbb
lret
inc
jmp
adc
lods
push
lahf
jno
loopne
scas
test
mov
push
pop
adc
pop
aad
inc
sahf
or
aad
aad
jb
xchg
or
jle
pop
stos
mull
xor
sub
bound
sub
xchg
dec
lcall
mov
loop
mov
popf
pop
jecxz
jmp
or
lcall
mov
add
movsl
jae
mov
cmp
loop
mov
and
faddp
dec
lahf
in
frstor
or
popa
cmc
dec
sbb
mov
and
mov
loop
xchg
int3
test
xor
push
push
inc
movsl
mov
xor
jnp
jne
addb
and
das
mov
cmp
and
stos
pop
iret
inc
jae
xchg
jmp
in
and
stos
inc
pop
jbe
stos
xor
pusha
pop
dec
cmc
mov
out
aam
sti
stc
cli
jle
pop
xchg
pop
stc
mov
pop
pop
mov
mov
pop
dec
dec
inc
xor
adc
sbb
ja
adc
cmp
sbb
xchg
jmp
out
mov
scas
pop
adc
push
lods
sahf
xor
dec
dec
cwtl
out
sub
aas
mov
shrb
jnp
mov
inc
out
push
fbstp
jno
pushl
jnp
xor
mov
add
hlt
or
in
in
test
xor
xor
adc
mov
pushf
insl
xorb
hlt
bound
mov
cs
pop
outsl
pop
ret
adc
mov
pop
push
push
push
mov
adc
jne
cmp
add
dec
cmp
pop
clc
in
in
sahf
movsb
or
cltd
lahf
cmp
lock
sub
adc
or
enter
jmp
push
ss
arpl
lods
cltd
push
daa
jne
int
push
loope
pop
add
cmpsl
push
pop
mov
fists
int3
hlt
xchg
scas
sbb
dec
movsl
jb
add
cltd
addr16
addr16
aam
xchg
push
xchg
lcall
mov
cmpsb
cs
rolb
imul
or
loop
loop
ret
mov
test
inc
push
xor
fsts
xor
mov
call
sub
mov
xchg
js
shll
movsb
scas
xorl
sub
cmp
stc
mov
repz
ljmp
es
or
outsb
dec
lds
jns
ret
pop
icebp
cmc
xchg
or
movsb
push
mov
std
xorl
push
jp
xor
loopne
inc
mov
lock
ret
or
xchg
lret
pop
or
xor
inc
xor
lds
sub
sti
aaa
dec
lret
xor
pusha
adc
jae
jmp
push
jns
xor
push
inc
and
push
xorb
loopne
lods
xor
fwait
sub
int3
test
or
imul
mov
rorl
xchg
das
push
test
jno
addr16
mov
mov
loope
dec
mov
incb
xchg
sbb
data16
xor
jge
jns
lahf
popa
into
xchg
fwait
jns
jns
dec
mov
lds
ret
mov
mov
rcrl
shll
rolb
mov
pop
xor
arpl
cmp
loope
or
mov
imul
lret
dec
mov
subl
dec
or
dec
roll
arpl
sbb
add
pusha
mov
je
cltd
inc
sub
push
repz
fcompl
add
push
fxch
inc
sub
pop
xchg
mov
mov
sbb
test
insb
push
mov
push
mov
and
shrb
fldt
cmp
fucomip
in
roll
pop
cmc
out
xchg
or
jl
mov
jecxz
aas
movsl
rol
lea
sar
cmp
in
cmp
and
inc
sbb
shll
inc
int
aaa
jle
js
pushf
gs
mov
sub
or
or
and
jno
sbb
icebp
add
xchg
cwtl
or
out
xchg
xor
adc
das
mov
xor
sbb
mov
call
mov
out
mov
mov
mov
repnz
ljmp
jnp
mov
inc
mov
out
or
or
xchg
mov
int3
dec
jb
push
xchg
testl
inc
popf
rorl
adc
add
fldt
ja
loop
cwtl
test
and
or
fwait
adc
adc
fs
and
push
dec
ja
popf
out
out
lods
jmp
lret
mov
pop
mov
mov
mov
xor
sbb
shll
mov
and
nop
mov
xchg
popf
fmuls
sbb
inc
push
jecxz
push
aas
mov
int3
cmp
gs
lods
jp
xorb
sbb
movl
dec
stos
cld
dec
dec
mov
rclb
lcall
mov
sub
mov
sti
and
jns
add
scas
aad
xlat
ljmp
ret
push
sbb
fldenv
xchg
sahf
pop
mov
in
nop
inc
leave
movsl
arpl
mov
ljmp
sbb
cmp
test
les
xchg
mov
jae
jge
into
jmp
cltd
add
leave
popf
mov
dec
jl
mov
cltd
cli
xchg
jne
les
lret
fiadds
shll
inc
jno
push
int
inc
hlt
dec
cmp
addr16
out
test
imul
cwtl
icebp
push
jmp
in
jp
jnp
mov
je
sub
mov
mov
loop
lds
roll
mov
scas
pushf
shrb
cmovne
outsb
cs
and
out
stos
dec
jns
adc
push
mov
cmp
out
mov
inc
cmpsl
test
lret
jecxz
or
int3
out
in
pop
push
vpaddusb
sub
add
mov
cli
inc
sub
or
add
push
scas
std
mov
loop
shll
mov
aaa
outsl
push
jb
pop
jb
fbstp
rcrb
and
cli
mov
jnp
xlat
stc
rcr
cmp
es
divb
gs
data16
cmp
dec
loopne
in
int3
sarl
ds
rcrl
ret
adc
out
xor
inc
aas
and
mov
xchg
pop
and
popa
xchg
orb
outsl
ja
push
mov
aam
daa
mov
jle
fdivrl
xchg
leave
sbb
cmc
addb
or
fisttpll
subl
bound
sbb
dec
mov
mov
loop
or
clc
loopne
ret
cld
or
xchg
in
pop
add
jb
pusha
push
ja
out
xchg
mov
pop
addr16
mov
lea
inc
mov
gs
mov
mov
push
mov
jg
dec
and
xor
push
mov
mov
pushf
cltd
insl
and
mov
dec
mov
push
test
jp
inc
leave
jno
mov
insb
adc
lcall
fstl
xacquire
jle
int
fwait
xor
daa
es
ja
push
jnp
inc
lret
inc
add
inc
cmp
or
popf
push
mov
iret
pop
push
and
out
or
sub
int3
inc
dec
fiaddl
fsubl
imul
cmp
out
or
xchg
fwait
pop
jecxz
int3
call
mov
js
adc
mov
fcmovnbe
sub
jg
rcrb
or
mov
jecxz
cltd
inc
stc
dec
pop
jmp
xor
pushf
push
add
popl
mov
rclb
mov
xlat
fnstenv
aad
push
sbb
stos
stc
pop
add
das
adc
ss
jmp
test
lods
insb
mov
jg
xchg
mov
fcmovnb
mov
jnp
push
pop
cmc
xsha256
cmpsb
push
sbb
xchg
dec
jae
sub
fildl
popf
mov
dec
mov
dec
pop
mov
aaa
mov
xor
subb
std
roll
aam
pushf
ja
adc
and
or
add
xchg
pusha
push
pop
mov
lret
hlt
xorb
ljmp
stos
shlb
jmp
sub
nop
iret
call
inc
mov
in
jno
jbe
daa
pop
push
adc
adc
mov
and
or
or
jns
cmc
mov
xchg
push
je
stos
orb
stc
adc
push
cltd
orl
mov
in
int3
std
loopne
andl
shll
sbb
icebp
xchg
aam
inc
inc
addr16
pop
dec
fdecstp
out
stos
or
push
xchg
movsl
cmp
xchg
std
lret
inc
sub
mov
addr16
adc
test
pop
and
jmp
fnsave
lods
loop
xchg
rcll
pavgw
int
dec
mov
in
mov
xchg
cwtl
dec
mov
js
das
or
xchg
daa
ret
mov
and
mov
lea
pmuludq
gs
loopne
js
notl
cs
sbb
lret
call
sahf
push
dec
inc
das
pushf
and
dec
and
xchg
xorb
xchg
hlt
inc
clc
js
stc
or
mov
dec
dec
mov
in
add
in
dec
or
in
test
push
movsl
daa
cmp
xor
sub
cltd
rolb
adc
mov
es
lods
inc
cmp
je
mov
lds
imul
mov
push
out
js
mov
push
movsl
xchg
jp
dec
pop
out
lcall
xchg
fwait
mov
push
sahf
mov
sbb
fistpl
pushf
push
scas
outsb
je
fwait
mov
inc
arpl
mov
cltd
lods
jae
push
pop
popf
loope
pusha
add
pop
adc
push
stos
jp
out
fs
ret
mov
test
sub
pusha
lret
repnz
jno
adc
fwait
icebp
sub
jecxz
dec
cmp
xchg
leave
mov
imul
fisttpll
scas
imul
and
cmpsl
pop
lea
fs
out
jg
lret
lret
es
int3
gs
or
cli
je
adc
ret
jg
inc
push
bound
pop
sub
mov
fnstenv
mov
mov
iret
lea
jge
sub
shrb
and
ss
je
int3
movsl
add
sub
jne
lahf
sub
jb
sbb
mov
and
fimuls
mov
mov
xchg
xchg
nop
int3
pop
sbb
xchg
jae
sub
sbb
outsl
pusha
push
or
filds
push
jge
push
cmpsb
and
test
arpl
enter
sbb
aad
xchg
sbb
shlb
repz
scas
data16
sbb
adcb
pushf
testl
ficomps
jg
enter
daa
stos
gs
andb
mov
push
call
mov
lds
aas
adc
movsb
sub
or
add
rorl
ljmp
iret
popl
jnp
cmpb
aas
scas
mov
les
xchg
ficompl
aaa
xlat
in
or
shlb
gs
push
cmp
sbb
aad
cwtl
xchg
pop
aaa
add
add
mov
fidivrs
sbb
cmp
jge,pn
add
xchg
add
mov
jmp
mov
ljmp
xor
jle
lock
sbb
gs
jle
and
iret
pop
jmp
xor
loop
pop
xchg
xor
dec
adc
xchg
sbbl
loop
out
ja
dec
xchg
xor
mov
repz
pop
mov
sub
fdivrs
lret
fisttpll
inc
pop
xchg
shrb
or
mov
and
fisubl
ret
ss
dec
cmp
cmp
inc
adc
lret
xor
add
sbb
jo
int3
adc
sti
jno
jns
dec
mov
iret
pop
pop
aaa
mov
fs
aas
and
mov
xchg
in
jns
cltd
push
dec
or
bound
or
shlb
addr16
mov
ja
pop
jnp
fidivs
gs
fdivl
adc
sbb
cld
adc
jae
xor
aaa
cmp
fdivrp
shrb
jo
pop
mov
int
xlat
movsb
pop
jecxz
loopne
xchg
aaa
push
mov
aad
add
addl
and
jne
les
mov
popa
mov
and
cmp
mov
mov
mov
icebp
pop
push
sarl
add
icebp
outsb
fisubrl
sti
or
mov
cwtl
daa
and
inc
enter
in
xchg
and
in
mulb
js
outsl
gs
xchg
inc
add
pop
dec
ja
mov
push
inc
adc
lret
pop
jno
and
cmp
testl
fldcw
cmpsb
cmc
and
mov
jns
push
push
xor
dec
jmp
jne
mov
or
rorb
lea
xchg
ja
out
dec
sti
fwait
leave
push
movsb
lret
shr
insl
mov
loope
outsl
aad
push
mov
cmpsl
sbbl
mov
mov
mov
outsb
xor
rol
push
xchg
mov
pop
adc
fs
repz
sbb
stc
add
sub
sbb
rol
clc
ljmp
das
push
sbb
push
enter
cmc
daa
pop
lods
inc
xor
popa
stc
xchg
or
in
push
cmpl
mov
or
sarb
cmpb
cmp
sbb
js
xchg
push
jmp
js
in
jno
push
jns
push
shrl
inc
jle
mov
mov
push
lret
idivb
and
repz
sub
out
outsl
sub
mov
out
aam
daa
scas
cmp
add
or
imul
pop
sbb
inc
mov
daa
rcrl
adc
and
mov
int3
xor
leave
fs
adc
imul
imul
add
insb
mov
movsb
push
int
mov
outsb
fcos
pop
adc
pop
add
rol
add
mov
jle
cwtl
add
xchg
push
and
outsl
fdivrs
pop
xor
dec
pop
push
cmpsb
in
fisubl
sbb
pop
and
cmpsl
cmpsb
push
lea
mov
filds
push
pop
dec
lahf
out
popa
pop
sti
js
and
xor
out
andb
nop
jbe
push
pop
cmp
push
rcrl
stc
sub
fisubs
orb
clc
nop
stc
xchg
or
pop
scas
shrb
mov
enter
sub
jbe
pop
les
jnp
or
jno
stos
in
pop
clc
fadd
sbb
pushf
insb
das
xor
push
arpl
ja
add
xor
pop
mov
cltd
stc
mov
xchg
jl
sbb
lock
outsb
mov
out
pop
lods
push
jno
out
or
or
pop
xor
out
pop
clc
sbbl
daa
mov
inc
sbb
pusha
pushf
jg
mov
push
mov
movsl
ss
sub
or
pop
lret
jbe
mov
jb
lahf
rolb
add
sub
mov
adc
mov
stc
sub
fistpl
sub
stos
out
call
xor
inc
fisttps
shrb
out
push
out
mov
mov
daa
jecxz
add
stos
into
daa
adc
test
mov
popa
ret
jae
sti
fdivl
add
stos
dec
pop
dec
pusha
idivl
leave
pop
pop
sti
decl
push
sub
outsb
cmc
enter
dec
sub
xchg
pop
cmp
mov
ss
shlb
push
imull
pop
inc
jno
dec
pop
aas
cmp
push
jnp
sub
fldenv
incb
push
lods
xor
int
cmp
and
notb
or
les
fisubs
scas
jp
data16
adc
addb
test
cltd
xor
movsl
fnstsw
mov
push
dec
stc
push
mov
jecxz
pop
int
jae
fs
test
push
xor
ja
fld
ret
loope
insb
fstl
outsl
jns
in
pop
popa
int
sti
cmpsl
arpl
dec
mov
ret
adc
fldt
sub
sub
mov
rorl
lret
lods
cmp
xchg
mov
mov
bound
mov
mov
in
cmp
push
mov
sti
or
ds
xor
and
and
jle
movd
jnp
faddl
loope
pop
lea
int3
mov
subl
adc
fldenv
mov
mov
loopne
xor
pushw
std
lahf
pop
shlb
or
in
pusha
inc
jp
cwtl
sub
adc
inc
mov
imul
xor
xlat
inc
mov
pop
std
sarl
xchg
jge
xorb
sub
stos
jne
and
aas
inc
outsb
or
mov
in
mov
fmulp
pushf
imul
pop
out
adc
ds
or
dec
flds
mov
and
dec
and
xchg
mov
dec
fistps
lea
and
jmp
adc
push
inc
aam
aad
inc
stos
pop
mov
test
jns
pop
dec
mov
cld
lahf
sub
clc
dec
dec
fs
mov
cmp
lods
dec
nop
push
jmp
mov
fs
lcall
jecxz
inc
mov
pop
fistpl
lods
cmc
repz
cmp
test
shrb
pop
and
sarb
push
cmp
rorb
cmp
insl
sub
add
shll
icebp
ret
push
scas
es
int3
sahf
xor
leave
xchg
mov
xor
lods
enter
jmp
movsl
int3
mov
sub
imul
popf
aas
loop
les
push
out
bnd
mov
inc
push
out
xchg
stc
orb
rep
push
jge
and
or
leave
push
shrl
fildl
fmuls
dec
push
cwtl
mov
in
push
sub
add
jl
xchg
ret
cmp
mov
fs
jmp
xor
fmull
test
bound
call
loop
sub
mov
xchg
data16
repz
add
push
mov
dec
enter
pop
inc
popf
scas
das
add
adc
xchg
pop
test
jp
or
ljmp
mov
fs
or
fistpl
xlat
std
jae,pt
loopne
pop
or
mov
nop
cmp
mov
mov
or
dec
je
inc
sub
xlat
inc
add
lods
mov
mov
or
jno
dec
mov
jp
cwtl
push
jg
fldcw
rclb
popa
test
push
lret
inc
aaa
add
xor
mov
push
mov
fcomps
call
gs
mov
insl
and
hlt
cwtl
jge
lret
jb
sub
pop
fwait
add
jae
adc
cmp
pextrw
mov
sub
enter
out
pop
add
fadd
sub
int3
testl
mov
xchg
mov
push
test
inc
sbb
adc
int3
out
push
lcall
movsl
dec
stc
pop
mov
and
pop
and
xor
jo
jbe
cld
das
in
push
hlt
enter
insl
jbe
push
push
dec
movsl
daa
cmp
mov
lret
xor
iret
xchg
push
mov
dec
loop
cmp
rcrb
jge
push
fisttpl
mov
scas
imul
add
sbb
or
mov
arpl
dec
mov
sbb
sub
das
stos
sub
mov
bound
cwtl
push
mov
scas
in
xchg
and
sbb
test
inc
xlat
xchg
xor
outsb
push
cld
ficoml
push
sub
leave
and
mov
dec
aas
add
cmpsl
sub
push
ja
add
xchg
jg
add
pop
stc
and
xor
jns
xchg
jge
and
fwait
dec
xor
or
adc
add
data16
cmp
loope
xchg
and
sbb
cli
xchg
xchg
add
sub
mov
lods
and
mov
scas
jne
jp
pop
popa
push
cmp
inc
jno
cmp
rep
xor
js
push
mov
imul
in
movsb
jge
push
pop
clc
mov
shrb
push
cmp
pop
mov
jne
push
shll
ret
rcrb
lock
mov
repz
enter
pop
mov
into
loopne
push
pushf
sub
lea
mov
pop
cmp
mov
out
imul
es
cltd
shll
lcall
dec
inc
std
mov
iret
jb
int
pop
mov
out
in
sub
fstl
lods
cmp
in
mov
dec
dec
add
pop
xchg
xchg
xor
push
push
xor
sub
addr16
lds
jno
push
inc
movsb
lods
push
addr16
test
loopne
insl
jne
jl
dec
ret
pusha
gs
jecxz
mov
repnz
aam
push
add
xor
jno
movsl
mov
sub
sbb
sbb
sbb
dec
aas
imul
les
xor
cmp
into
stos
sbbl
mov
mov
adc
inc
dec
jae
pop
push
in
inc
out
sahf
add
cltd
aas
xchg
cli
lods
inc
xchg
fiadds
fs
fdivp
test
scas
es
lret
pop
enter
or
inc
leave
jl
jne,pn
mov
sub
rolb
dec
pop
add
xor
cmp
arpl
mov
inc
repz
scas
ror
stos
stos
push
fistl
mov
xchg
leave
and
std
popl
cmp
lock
data16
das
loopne
xor
pop
jno
mov
daa
inc
add
loop
movsb
repnz
xchg
jle
rcll
mov
inc
and
dec
xor
push
mov
aam
or
cltd
push
or
and
push
js
fisubrs
out
xchg
ret
je
repnz
pop
outsl
mov
pop
mov
iret
into
add
loopne
or
cmpsb
aad
and
ja
add
sub
or
mov
adc
adc
stos
cmpsb
sbb
mov
jg
clc
push
sbb
dec
or
xorl
enter
es
lcall
jmp
out
inc
sbb
xchg
stc
aas
push
lcall
cltd
dec
insl
cmc
in
or
pushf
out
fnstenv
jge
pop
fdivrs
mov
into
outsl
mov
push
test
mov
adc
push
aad
fisttpl
mov
and
sub
negl
aaa
xchg
clc
shlb
lods
movsl
cmp
daa
mov
adc
xlat
or
or
in
stos
jnp
add
mov
and
push
mov
add
xor
dec
lcall
in
movsl
mov
movsl
xchg
call
stc
inc
sub
or
or
mov
sub
jl
stc
add
scas
cli
lea
aad
int
sbb
loope
les
repnz
jmp
imul
iret
test
and
cltd
push
aad
add
cmc
push
stos
mov
icebp
jecxz
pop
pushf
xlat
fdivl
mov
jp
lea
cmpsb
cld
or
jge
movsl
fs
into
in
mov
mov
cli
rolb
cltd
or
je
in
adc
cmc
into
lea
adc
or
into
inc
sti
sahf
jmp
and
lods
mov
hlt
or
lret
inc
das
xchg
fsub
pusha
jge
xor
adc
xor
or
fdivr
xchg
xchg
xchg
add
push
lds
mov
jl
and
xchg
push
mov
adc
lret
jb
in
bound
or
rcr
or
sbb
mov
mov
push
jle
mov
clc
outsb
outsb
aam
rclb
pop
mov
xchg
mov
lret
testb
mov
sbbl
or
push
or
sbb
pop
xchg
mov
adcl
inc
std
std
int3
cmc
daa
push
jbe
dec
imul
xor
pop
mov
and
or
fidivl
lret
aaa
mov
pushf
pop
aaa
hlt
sbb
jge
xchg
sub
ljmp
xor
lods
sbb
mov
xchg
add
and
sbb
push
pop
subb
sbb
cmp
dec
push
in
mov
aad
pop
inc
push
dec
bound
sbbb
clc
pop
das
fcomps
jae
popa
daa
inc
out
push
outsb
insl
fisubrs
lods
adc
and
push
dec
ss
and
mov
sbb
movb
dec
ja
in
adc
pop
mov
mov
mov
push
inc
pop
adc
ficoml
jle
sbb
imul
jecxz
in
pop
arpl
inc
push
popf
iret
iret
xchg
push
jecxz
fbld
cmp
or
jb
loop
xor
xor
inc
inc
mov
cmp
aaa
jne
xchg
push
test
dec
cltd
lret
out
and
mov
sub
or
cmpsl
mov
test
out
mov
adc
lock
lret
fdivs
lcall
jecxz
arpl
fldenv
in
loop
or
or
mov
popf
fdivrl
lret
or
or
and
inc
jmp
outsb
sbb
pop
rcll
jnp
je
or
push
push
mov
adc
pop
push
leave
and
jle
or
cld
js
mov
push
or
fstpl
or
cmp
pusha
data16
out
mov
add
int
sub
jg
sub
push
sbb
xchg
in
xchg
dec
testl
push
xchg
imul
mov
or
sub
outsl
stc
sub
fdivs
lock
cmpsb
andb
jecxz
dec
xor
gs
pusha
and
jecxz
cmc
pop
or
add
mov
mov
push
jle
xchg
xchg
add
mov
mov
test
mov
dec
mov
inc
aas
sbb
sbb
push
movsl
in
mov
sbb
dec
negl
cmpsl
repz
mov
inc
add
pop
or
jbe
cld
repz
jecxz
jge
push
mov
xorb
subb
sub
jo
lret
pusha
jns
sbb
push
pop
mov
enter
loopne
movsl
lret
sub
dec
push
aaa
inc
loope
lea
adc
aam
pop
cld
faddl
xor
cld
mov
lret
dec
mov
fldt
aaa
shlb
jp
ss
pop
push
arpl
jg
jge
jp
out
mov
cmc
or
cmpsl
inc
dec
rolb
fcompl
and
push
jns
call
movsl
ss
push
and
cmpsl
ret
push
or
in
push
in
jmp
jae
xlat
push
push
sbb
inc
pop
es
push
cli
out
jmp
pop
xchg
cli
add
xor
inc
mov
mov
jnp
out
lods
test
sbb
adc
in
je
pop
out
popf
pop
subb
in
mov
push
push
jmp
cmp
nop
xchg
xchg
fs
add
mov
stc
push
int
fsts
inc
addl
jmp
pop
add
adc
sub
loop
jecxz
cmpb
daa
clc
into
jbe
daa
pop
out
adc
das
scas
add
dec
and
mov
out
out
cmp
clc
sbb
push
fimuls
cmp
jle
sub
mov
xchg
xchg
pop
jno
dec
out
sbb
push
mov
les
inc
jl
call
and
insl
sbb
mov
imul
push
ljmp
iret
out
mov
add
sub
out
inc
sub
mov
jbe
leave
xor
inc
inc
out
xchg
push
xlat
jl
cmp
inc
js
aas
xorb
sbb
je
or
and
adc
leave
push
call
xchg
pop
pop
cmc
sbb
outsl
adc
mov
jnp
out
aaa
fadd
sub
or
pop
inc
fildll
push
and
sbb
rcrb
leave
cmp
loopne
insb
ja
dec
mov
jnp
test
hlt
dec
or
loop
xchg
imul
inc
je
mov
xor
cmpsb
hlt
cli
mov
icebp
or
das
pusha
mov
push
ror
aaa
pushf
lahf
adc
push
cmp
pusha
cmp
mov
or
ret
popf
mov
adc
loope
or
cmc
scas
sbb
cmp
aam
xlat
mov
inc
addr16
jge
fisttps
mov
nop
adc
push
stos
dec
pop
xchg
stc
stos
add
int
add
ss
movsl
loopne
cmp
pop
mov
xchg
sti
xor
mov
jecxz
push
divl
inc
paddsw
sub
movsb
mov
pop
dec
xor
pop
in
xchg
in
inc
push
sub
xchg
lret
or
mov
les
pusha
movsb
andl
nop
jns
data16
sahf
pushf
in
fwait
sub
push
pop
fldcw
fcomps
jae
test
negl
jg
shll
ret
ds
popa
dec
xlat
xchg
xorb
xchg
out
lret
mov
dec
daa
xchg
lods
int3
mov
mov
or
mov
add
nop
push
push
xchg
call
pop
pop
js
jb
cli
xor
fstl
inc
mov
dec
faddl
test
andl
lret
adc
sbb
imul
push
adc
fs
mov
jno
adc
or
es
dec
xchg
cs
dec
dec
sbbl
test
int
pop
push
cs
pop
xchg
int
push
aas
imul
sbb
mov
xchg
xchg
mov
sub
mov
cmpb
into
mov
js
mov
repz
jno
fdivrl
or
pop
sbb
mov
mov
dec
jns
push
mov
daa
mov
sub
xor
clc
rorl
add
cmpsl
cmp
stos
lea
xor
cld
inc
clc
sub
addl
outsb
pushl
test
push
xor
xlat
test
push
mov
sub
dec
lret
xor
mov
fldenv
xchg
or
or
insb
leavew
cmp
sbb
xchg
and
scas
mov
cmpsl
xor
pusha
lahf
in
inc
in
sbb
lock
xchg
xchg
jbe
push
mov
push
and
sahf
aad
fists
cmc
popf
scas
nop
ficompl
cmpl
xchg
pop
dec
test
mov
mov
sub
mov
pop
xor
in
cltd
dec
js
ds
mov
jmp
iret
out
xchg
and
adc
icebp
pop
mov
ret
add
pop
in
ffree
cmp
lea
into
cltd
and
push
pushf
jp
das
repnz
das
add
mov
dec
lock
movsb
dec
pushw
xchg
inc
faddl
jb
mov
pop
insl
mov
lahf
mov
cs
and
shl
mov
sahf
jmp
jle
jno
mov
xchg
sub
into
push
shll
adc
mov
sahf
mov
mov
mov
fimuls
mov
fcompl
inc
arpl
fucom
ja
negb
cwtl
push
push
sbb
add
pop
stos
shlb
out
mov
mov
push
adc
push
cmp
es
xchg
in
fdivrs
lock
adc
lock
sub
test
mov
dec
shr
push
sarl
adc
push
clc
mov
into
pop
in
or
lods
popa
rcl
push
clc
lret
pushf
mov
xor
call
jb
xchg
jg
jnp
cmp
mov
lret
subl
xchg
mov
popa
gs
or
iret
add
movsl
popf
sub
dec
mov
add
lods
negb
mov
xor
das
ja
cmp
cmpsb
mov
lahf
je
bound
daa
cwtl
or
movb
jae
clc
int3
push
loop
push
in
outsb
or
movsl
loop
mov
imul
fsqrt
aam
push
push
aas
mov
sub
jns
in
icebp
mov
aad
rcrl
xchg
popa
push
add
data16
jecxz
xchg
pop
adc
int
ss
test
add
leave
push
push
sbb
sar
sub
jae
mov
inc
inc
orl
cmp
xor
out
aas
loop
fadds
mov
icebp
add
popa
fsubrs
leave
mov
and
inc
cld
sbb
adc
lock
add
or
sbb
jmp
push
pop
stc
adc
daa
scas
aam
xchg
adc
sub
loopne
xchg
pop
cmp
or
pop
fistps
inc
and
aad
xchg
ss
mov
cld
in
dec
in
cmpsl
pop
xorl
cli
into
call
mov
dec
rcll
ret
push
mov
add
xchg
les
sub
add
inc
mov
pop
stc
mov
xchg
ss
or
pushf
pop
mov
sar
addr16
xor
cli
adc
add
jle
cmpsb
outsl
loopne,pt
je
pop
repz
inc
or
sub
xor
sbb
pop
or
insb
lret
cli
or
pop
imul
jl
adcl
aaa
push
sbbl
xorb
mov
lret
das
addr16
cmp
gs
movl
xor
out
je
adc
sub
insl
sarl
sub
pop
mov
in
mov
arpl
sbb
mov
jge
in
mov
mov
mov
push
xor
push
sbb
and
fwait
xor
inc
fiaddl
dec
pop
sbb
call
pop
cld
jns
push
mov
push
stos
es
xchg
xchg
push
or
sahf
push
jl
subb
lret
mov
and
rorb
mov
add
mov
or
push
or
jb
scas
adc
repz
pop
lods
add
jge,pn
inc
jecxz
xor
outsb
iret
and
mov
fldt
fcmovnu
enter
mov
xchg
cmp
lret
dec
sti
ret
jb
jo
jae
stc
fst
lea
sbb
pop
test
push
sarb
stc
lcall
cmp
shlb
leave
dec
out
jmp
stos
adc
adc
sbb
into
inc
pop
ret
jnp
lock
jb
and
aaa
pop
inc
push
stos
stos
mov
and
mov
lret
inc
pop
or
in
popf
jo
xchg
out
ret
mov
lock
rcrl
pop
cltd
subb
adc
lods
jns
sbb
adc
ds
lock
adc
test
aaa
xor
ret
pusha
pushf
mov
add
pop
scas
leave
inc
aam
data16
hlt
cmpsl
cmp
inc
les
pop
aaa
jno
add
rclb
cmp
movsl
fcmovnbe
hlt
xchg
call
mov
jae
sub
mov
test
sub
or
mov
and
fnstcw
cmp
icebp
mov
push
adc
push
cltd
jp
or
loope
push
idiv
or
xchg
int
sub
mov
sub
push
adc
adc
jo
adc
lret
repnz
int3
inc
lds
repz
add
add
cmp
mov
jle
inc
fwait
xor
jnp
sbb
jne
push
subb
scas
sbb
pusha
daa
nop
inc
mov
adc
xor
test
insb
dec
dec
cmp
insb
jge
lods
outsl
sub
int
lds
xor
mov
cmc
xchg
mov
fwait
mov
ds
test
cmp
add
xchg
or
repnz
inc
and
or
scas
sahf
cltd
or
jnp
pusha
loope
xor
push
push
xchg
das
bswap
sbb
pusha
cmp
arpl
iret
bound
dec
lock
mov
cmpsl
je
ljmp
dec
clc
insl
cmp
and
mov
pop
sub
jnp
push
or
pop
and
aas
mov
int
cmp
fwait
dec
js
mov
jb
cmpsb
orl
lods
add
jg
pusha
mov
push
mov
mov
lahf
scas
call
and
aam
leave
dec
inc
jecxz
pop
cmc
push
fs
ret
mov
xchg
mov
mov
arpl
xor
mov
in
outsl
ret
lcall
fadd
xchg
jo
push
rclb
daa
dec
mov
jb
sbb
scas
adc
imul
arpl
push
add
xchg
xor
lods
xchg
xchg
data16
mov
xchg
icebp
push
lds
call
cmp
outsb
sbb
xchg
push
pop
jno
pop
loope
pop
lds
pop
data16
call
mov
mov
mov
arpl
push
adc
pop
andl
lret
pushf
pop
mov
imul
pop
sub
sbb
je
das
add
mov
jg
std
jl
adc
push
inc
insl
xchg
mov
mov
outsb
push
mul
xlat
adc
mov
out
shr
pop
lods
in
mov
jle
and
ss
and
mov
or
imul
cwtl
jle
int3
mov
outsb
ret
pop
ret
jecxz
push
push
ret
xchg
jle
enter
shr
dec
add
jl
js
in
jb
push
add
bound
push
sbb
inc
mov
pop
lea
xchg
sub
decb
enter
insl
xchg
cld
das
rol
adc
fnsave
sahf
mov
push
and
kxorb
ds
enter
out
js
cltd
fidivrl
pop
mov
std
pop
into
sbb
mov
aam
in
xchg
call
push
cmp
js
mov
mov
and
repz
jae
mov
xor
push
adc
ror
bound
rolb
test
sub
cmp
adc
inc
sbb
enter
jnp
gs
push
ret
jnp
mov
pop
and
sbb
sub
cmp
addl
adc
loop
add
xor
cmpsl
inc
popf
mov
loopne
cmp
clc
jbe
subl
in
rorl
jb
clc
or
imul
jg,pt
mov
mov
and
out
imul
xchg
das
frstor
cld
sti
scas
ds
enter
xchg
idivl
loop
ret
arpl
sub
push
inc
sub
in
icebp
inc
mov
pop
stc
add
adc
mov
in
mov
sub
inc
cs
pushf
xor
fstpl
loope
jle
mov
iret
mov
into
movsb
cltd
cmc
sub
jnp
add
in
es
dec
xor
or
pop
rcrb
das
xchg
mov
std
mov
popf
ja
sbb
aas
cmp
sub
jnp
movsb
aam
push
jle
mov
stos
xor
sti
pushl
mov
xchg
addr16
xchg
clc
aaa
hlt
stos
adc
fsubs
cmpsb
mov
movb
xor
sarb
lahf
and
xchg
idivl
mov
push
scas
fldt
push
push
sbb
inc
in
outsb
mov
pop
and
dec
fdivr
fcoms
jbe
add
sti
mov
cmpsl
in
notw
fmull
pop
rcrb
inc
cmpsb
jmp
jl
pop
out
imul
arpl
or
stos
sbbb
lret
mov
pop
data16
pop
mov
gs
mov
je
pop
xor
iret
pop
sub
xchg
xor
daa
in
inc
out
mov
inc
outsb
push
fwait
push
pop
lods
in
dec
fdivrs
xchg
pop
mov
stc
ret
lahf
movsb
jne
jb
rorb
shlb
lcall
mov
nop
insl
inc
or
sarl
adc
nop
jge,pn
rcrl
sbbl
decl
dec
fwait
dec
sub
xchg
mov
mov
fmull
or
cmpsb
leave
jo
mov
pop
push
pusha
fnstsw
or
jns
and
aad
movsl
jg
pop
cmpsl
das
cwtl
arpl
loopne
cmp
xchg
lcall
lds
mov
repnz
test
add
iret
iret
cmp
dec
pushf
mov
and
cmp
jo
fstps
xchg
dec
jmp
jmp
and
movsb
sub
and
daa
mov
cmp
xchg
mov
sti
sub
and
mulb
cld
addw
cmpl
pop
push
or
dec
loop
push
fistl
fwait
add
or
js
or
push
es
sub
sub
aam
and
push
cmpsb
jp
fiaddl
and
ds
bound
mov
in
mov
xchg
sub
lods
xchg
or
ja
fsubrl
xchg
or
jle
enter
jo
adc
cwtl
cld
test
inc
push
fs
aad
xchg
jge
or
fistpl
add
cmp
int
dec
xchg
pushf
xchg
mov
mov
fildll
std
popf
adc
shll
aad
adc
or
iret
arpl
pushf
pop
dec
dec
adc
push
jmp
sarl
xchg
fdivp
sub
xorl
inc
test
lret
fwait
int
or
adc
adc
inc
test
and
cmp
xchg
not
das
and
addr16
in
loope
and
pop
and
sub
dec
neg
repnz
movsb
inc
rol
adc
mov
cmp
cmp
leave
int3
push
mov
sub
fwait
inc
ljmp
gs
lods
adc
cli
mov
adc
xor
pop
cmp
xor
dec
daa
cmpsl
and
in
xchg
popf
push
cmp
fwait
lock
fidivl
sub
dec
mov
mov
dec
out
xchg
inc
stos
test
or
or
mov
lea
adc
shr
je
leave
scas
cmp
adc
xor
stc
ret
insb
mov
mov
and
or
shl
sbb
or
fsts
addr16
dec
les
adc
jbe
es
jmp
andb
mov
adc
mov
clc
loop
adc
std
add
dec
out
and
or
cmp
jb
xlat
jecxz
jnp
lock
jns
movsb
xchg
pop
shlb
dec
xor
icebp
xchg
pusha
inc
test
push
insl
and
bound
pop
fwait
xor
mov
scas
sbbb
or
cmpsb
push
and
aam
mov
addb
jbe
dec
lods
leave
xchg
inc
notb
dec
xchg
push
imul
mov
sbb
mov
scas
adc
sbb
push
jno
in
cmp
lods
or
pop
sbb
jg
inc
outsl
or
ret
insl
and
dec
mov
sub
repnz
lds
mul
cmpsl
pop
mov
ja
or
pop
sbb
xchg
xlat
sbb
pop
or
out
push
call
pop
or
push
and
dec
jmp
cltd
out
mov
lods
lret
out
mov
adc
mov
mov
cmp
inc
gs
push
sub
loop
in
and
push
fdivs
test
and
cs
dec
or
lds
je
repnz
mov
jmp
out
cmpsl
xchg
sub
mov
jo
jno
fstl
shll
and
xchg
adc
cltd
mov
jae
push
sub
cmp
jge
ss
call
aad
aad
sbb
add
in
cli
mov
scas
push
inc
sahf
ficoms
add
mov
repnz
pop
lahf
jg
xlat
push
mov
dec
push
test
cmpsb
int
xor
pushf
ficoml
movsb
and
sbb
sti
and
insb
and
insl
int
insb
jns
cmpsl
xchg
movsb
and
ret
cmp
rorl
pushf
lret
sub
dec
out
fwait
add
xlat
imul
sarl
adc
pop
roll
and
int
enter
push
mov
addl
xchg
xchg
rorb
pop
ljmp
mov
mov
or
out
mov
shr
mov
push
mov
aad
pop
lods
sbb
cmp
lret
dec
insl
jge
fwait
mov
hlt
cmpsb
jb
ss
sub
pop
mov
cli
or
xor
or
push
repz
lods
or
adc
bound
addr16
mov
add
mov
adc
in
jmp
out
add
adc
mov
mov
mov
insl
sub
mov
inc
outsb
testb
pop
jg
stc
movsb
inc
add
and
insb
xor
jne
inc
mov
or
lock
pushf
mov
fidivrl
aam
push
lea
sarb
std
enter
fidivrs
jns
mov
test
xchg
into
std
stos
mov
mov
jge
addr16
jne
inc
stc
ljmp
shrl
jg
mov
jo
add
sbb
mov
mov
hlt
pop
ja
xor
fidivs
pop
std
push
sbb
pop
adc
mov
cmpsb
clc
fimuls
clc
shr
int3
insl
sub
aad
lds
sub
pop
sbb
pusha
rol
jl
jl
dec
addl
pop
add
xchg
pop
cmp
out
into
sarb
lods
lods
out
jecxz
mov
lret
sti
cld
mov
mov
mov
push
push
outsb
sbb
mov
repnz
and
movsb
movsb
jg
call
inc
xchg
leave
nop
lods
cs
fwait
mov
push
in
in
call
jnp
nop
fwait
test
fisubrs
sub
repnz
xor
sbbb
ljmp
sti
mov
lods
cmp
adc
loopne
xchg
mov
fmull
xor
mov
pop
mov
aas
mov
or
lret
dec
jecxz
andb
mov
mov
and
sub
notl
leave
aas
fstps
cmpsl
cmpsb
xchg
sub
push
mov
out
inc
daa
mov
dec
dec
out
ret
shll
or
pop
cli
jl
shr
arpl
jnp
popf
sub
or
jnp
cmp
cs
mov
fisttpll
cmp
dec
and
loope
sub
addr16
ficoml
jne
sub
mov
push
into
pop
inc
xlat
mov
sbb
pop
inc
stos
xor
cmp
mov
test
movsl
mov
or
jecxz
ret
test
subl
dec
and
inc
jmp
or
movsl
xor
dec
push
ljmp
shll
sbb
xor
es
fildl
pop
insl
hlt
movsb
mov
fcoms
mov
xchg
fs
dec
inc
mov
jo
std
inc
jmp
cmc
lret
cmp
sub
cld
lea
push
pop
movsl
ret
aam
jl
push
cmc
test
cli
mov
notl
fsts
out
inc
int
push
sbb
sub
push
addb
into
call
cmp
xchg
jns
fldenv
dec
incl
add
pop
mov
mov
mov
xor
aam
addr16
cwtl
lock
jmp
and
dec
inc
xor
dec
jmp
js
push
mov
out
or
out
or
sbb
cmp
mov
push
cmpsb
jle
mov
ljmp
xchg
sub
dec
sbb
shll
ret
gs
sarl
mov
jl
daa
dec
push
jno
and
pop
subl
mov
int
inc
mov
ss
mov
adcb
iret
int
jns
xchg
or
outsl
aad
test
test
jg
push
outsl
ror
fiaddl
add
dec
sub
pop
sub
lods
repz
in
fcoml
lds
push
inc
mov
cmp
mov
mov
cmpsb
dec
adc
dec
inc
in
and
and
andl
outsl
xlat
push
aaa
mov
add
and
andb
in
inc
int
mov
icebp
xor
repz
ret
push
rcrl
add
lahf
lea
insb
jae
xor
mov
fsubs
fstl
aam
mov
xor
ficoms
pop
adc
aad
sub
mov
or
pop
cmp
out
xchg
cmp
aas
pop
inc
mov
subb
cmp
lcall
add
cmp
jg
sarl
push
cli
pusha
shlb
and
scas
cmp
andb
ja
adc
pusha
mov
xchg
fwait
movsl
cmp
push
ret
add
out
push
xchg
aas
sub
and
lods
outsb
sub
adc
ja
push
mov
sbb
ss
inc
cld
mov
mov
cs
movb
mov
pop
andb
repz
cmpsl
inc
inc
xchg
lahf
sub
aas
sub
push
pop
push
add
mov
xchg
cltd
or
jne
xor
out
not
stos
adc
jo
imul
cmp
jle
jo
or
push
cmpsl
sahf
mov
sub
xchg
hlt
out
fstpt
pushf
mov
cli
stc
xchg
mov
loopne
test
and
stos
stc
inc
xor
scas
cmc
mov
dec
adc
inc
ret
fidivs
inc
adc
mov
pop
ds
push
jne
xorl
mov
lahf
add
add
cld
iret
nop
imul
or
xor
xor
mov
push
cwtl
jo
push
jne
in
or
int
mov
mov
dec
repnz
in
aas
and
xor
leave
pop
sbb
imul
push
sbb
aam
ret
pop
repnz
sub
xchg
cld
je
lock
mov
neg
outsb
sub
sub
push
dec
cmp
into
sbb
test
jb
lea
lahf
jp
jnp
sbb
or
aam
btc
inc
inc
jle
xor
mov
xchg
cmp
pop
sub
inc
mov
pop
leave
xor
mov
push
adc
mov
sti
insl
cmovno
jmp
lret
add
sub
subb
outsl
xchg
mov
fwait
insb
adc
xlat
dec
arpl
int3
lret
test
push
lea
xor
call
and
cwtl
test
push
pop
aad
shlb
mov
sti
outsb
mov
arpl
mov
push
mov
push
add
lcall
sub
xor
test
jnp
flds
cmp
mov
pop
js
enter
nop
sub
jae
mov
xchg
and
and
out
icebp
clc
cltd
add
fcompl
popaw
sbb
cmp
test
movsb
mov
loop
lret
shrb
pop
inc
lods
hlt
jne
jo
hlt
and
cli
es
lods
int
mov
jno
sbb
call
or
cs
ret
iret
cmp
adc
pop
lds
pop
fstpl
out
push
or
in
jb
mov
cmpsl
ds
mov
je
cmp
jmp
stos
jbe
aam
jg
mov
sbb
push
mov
sub
and
sbb
inc
loope
into
fwait
sbb
adc
pop
int
jae
testb
test
push
mov
mov
pop
mov
xor
push
jbe
inc
sub
xchg
fcomps
scas
xor
js
loopne
cld
pushl
mov
cmp
daa
ret
jo
jmp
inc
mov
adc
and
out
jae
cs
rcrl
aaa
mov
fidivrs
dec
xchg
adc
pop
mov
sub
xchg
lods
ret
cmpsb
xorb
inc
jmp
and
sbb
fdivrs
cmpsb
cs
add
mov
dec
xchg
jmp
stos
jne
inc
loopne
movsl
push
repnz
xchg
xchg
mov
mov
pop
or
in
xchg
dec
icebp
daa
outsl
push
dec
cmp
fiadds
jmp
rcrl
std
in
dec
lret
jge
loopne
jmp
rcrl
insl
insl
pop
mov
rorb
out
sub
scas
fdivr
jno
test
xor
mov
leave
jne
and
adc
jnp
and
insb
ficomps
repz
fisubrs
mov
mov
mov
loope
test
jo
cld
and
adc
mov
or
or
les
mov
test
push
decl
mov
pop
mov
lock
lds
out
xorl
sbb
add
jb
fildl
insl
leave
movsb
adc
dec
outsl
pusha
cltd
aaa
sti
loopne
sub
lods
mov
fwait
or
mov
outsl
or
movsl
mov
dec
push
adc
push
sub
mov
fpatan
xchg
xchg
loop
pushf
jmp
jl
or
dec
std
in
xor
dec
cmpsb
test
or
cmp
inc
sub
sbb
or
dec
rcll
fwait
jle
add
clc
cmp
orl
xchg
mov
push
and
and
mov
jae
fdivrs
stos
js
aam
nop
dec
shll
lahf
loopne
jge
loop
stos
mov
jle
adc
sub
sub
leave
fwait
pop
sahf
aas
cmc
and
xchg
inc
mov
mov
push
cmp
mov
call
faddl
pop
int3
iret
xorb
in
sub
jp
aaa
adc
in
pop
inc
xchg
mov
jne
in
mov
sbb
jmp
mov
cwtl
inc
ljmp
imull
dec
sub
pop
mov
lcall
mov
cld
jnp
cmpsb
insb
or
mov
icebp
fistps
cli
outsl
xor
pop
icebp
insb
clc
mov
mov
push
inc
pop
sub
cmc
xor
icebp
bswap
je
cmc
and
push
adc
movsb
shll
test
cmp
fst
xlat
pushf
xor
insb
out
icebp
mov
and
dec
shl
popf
sub
jmp
add
repz
adcb
inc
cli
or
or
shlb
lods
in
int
dec
adc
inc
xor
mov
mov
jle
mov
sub
leave
imul
ret
pop
pop
mov
push
nop
loopne
jle
loopne
out
mov
aaa
inc
pop
inc
jae
sub
pop
pop
xchg
inc
test
jne
ret
push
cmp
jg
adc
mov
repnz
leave
test
inc
lds
in
stc
mov
es
push
adc
mov
not
mov
sub
push
out
cmpl
test
lret
insb
mov
dec
adc
clc
negb
sbb
push
or
mov
inc
or
daa
jne
jp
test
jb
scas
out
aad
xchg
shlb
inc
scas
jnp
fbld
out
shlb
lahf
pop
inc
sbb
loop
stos
push
adc
cmpl
inc
jne
enter
sub
xchg
sub
mov
movsl
inc
inc
fmuls
or
xchg
mov
push
inc
jns
jno
jg
mov
fdivrl
xchg
ljmp
mov
or
jp
je
ror
push
out
mov
stc
cmp
scas
push
pop
movl
xchg
stos
inc
xor
xor
sarl
cmpsl
jg
btr
loop
out
jns
fsin
std
mov
mov
test
lods
sub
sahf
pop
pop
nop
das
mov
jbe
popa
ljmp
ja
lds
adc
mov
mov
test
inc
lret
xor
iret
addr16
xor
jl
ds
enter
xorl
shlb
adc
dec
xor
adc
jge
cld
shll
pop
jle
or
addb
jne
and
clc
aam
push
push
pop
sbb
dec
call
cli
push
call
in
mov
push
sub
xchg
inc
pop
stc
pop
mov
sbb
mov
test
gs
xor
inc
mov
pusha
cmc
cld
lea
notl
lcall
jo
xor
inc
jns
out
or
dec
xor
cmc
je
jbe
mov
cmp
push
add
fadd
pushf
lea
xor
sbb
xchg
mov
adcl
inc
sbb
xchg
loope
pop
mov
fdivl
sbb
xchg
inc
testl
mov
loopne
stos
lock
jnp
xchg
movl
xchg
inc
stc
outsb
sub
xor
cmp
int
mov
das
sbb
out
pop
cmp
adc
sbb
les
stos
lock
xor
out
ds
shrb
iret
jecxz
jno
cmc
cmpsb
push
in
dec
sbb
mov
dec
daa
data16
cmp
nop
cmp
push
xchg
cld
sbb
cli
and
mov
pop
push
into
insb
cmc
dec
movsl
sti
es
pop
adcl
repnz
jp
aad
enter
arpl
cwtl
adc
ret
add
jno
mov
and
pop
stos
add
ss
ja
mov
mov
dec
test
xchg
and
mov
mov
out
loop
sti
push
jle
loopne
movsl
in
mov
xchg
or
mov
test
sbb
out
and
lods
xchg
mov
mov
adc
bound
test
sub
and
sub
sahf
int3
loop
and
mov
or
imul
mov
into
and
bound
add
call
fiaddl
sbb
pop
addr16
fisubrs
mov
icebp
insb
sub
mov
mov
xchg
in
xchg
and
or
test
imul
push
and
outsb
jge
andb
sub
cmpsb
rcrb
inc
cmpsb
inc
daa
xor
imul
adc
movsl
mov
movsl
jge
pop
popf
scas
addr16
cld
test
cmpsl
push
ret
cmp
mov
dec
in
dec
inc
lret
sub
mov
mov
sbb
xor
sub
or
mov
sub
add
cmp
dec
or
xchg
rorl
xchg
out
arpl
into
mov
out
mov
sbb
arpl
push
jne
cmc
jle
and
iret
or
pop
cmpl
stos
aaa
inc
hlt
push
inc
push
xchg
push
jge
shrb
pop
scas
repnz
loop,pn
divb
mov
mov
cmc
sub
test
out
mov
mull
adc
inc
daa
xchg
mov
and
cmc
mov
add
fwait
mov
push
jae
or
lock
aaa
cmp
xchg
les
cmp
mov
je
xor
dec
mov
insb
lods
neg
jecxz
mov
ljmp
and
or
test
testb
scas
insb
xchg
lahf
clc
in
cmp
add
popl
add
mov
jmp
pop
sbb
lds
jns
and
aad
gs
fstpt
dec
jp
mov
or
push
inc
pop
aam
or
cmp
and
insb
int
inc
mov
mov
cmpsl
jb
lods
adcl
mov
adc
push
push
inc
je
push
adc
xor
and
jmp
or
orl
mov
scas
inc
les
cmp
in
aaa
ljmp
out
or
out
push
outsb
arpl
ljmp
jo
cmp
pushf
std
pop
mov
push
xchg
and
adc
nop
popa
stos
jae
jae
je
test
pop
add
or
shll
fcoml
xor
push
mov
cld
dec
insl
rolb
sub
adc
mov
jge
push
mov
imul
adc
popa
pop
pop
test
sarl
adc
fcoms
cmp
adc
repnz
inc
popa
pop
mov
inc
add
jp
dec
mov
and
sarb
subb
pop
das
fistps
jo
mov
jg
jb
movsl
rcr
das
add
inc
mulb
mov
mov
frstor
xor
cwtl
or
mov
pop
loop
std
popf
inc
add
dec
xor
add
es
push
pop
in
cmp
test
call
cltd
jmp
test
outsl
jbe
or
sarb
mov
inc
mov
dec
push
and
inc
or
loop
cltd
fs
xor
cmp
loop
xor
lcall
mov
sub
pop
mov
inc
mov
mov
add
out
cmp
push
jo
dec
arpl
cmp
push
rolb
pop
and
mov
pop
xor
lods
out
mov
cmp
rclb
jbe
pop
out
cmc
nop
xor
andl
fcmovnbe
jp
cmp
jno
outsb
jo
jbe
cld
jle
mov
rorl
int3
mov
sbb
adc
jns
insb
aas
addr16
mov
xchg
pushf
adc
rcrb
add
jecxz
pop
mov
int3
fstl
je
and
ret
or
fwait
add
jns
aad
scas
jns
aaa
add
mov
loop
js
test
xchg
sub
lcall
mov
cld
adc
sub
xor
pop
lahf
sub
and
fldt
or
push
fdivp
test
in
mov
dec
xchg
insb
mov
push
cmpsb
scas
cli
and
inc
cmp
xlat
bound
scas
mov
outsl
cs
dec
lds
or
in
cs
or
loopne
stos
roll
jne
inc
adc
fdivr
fmuls
cmpsb
hlt
mov
jp
mov
in
pop
dec
dec
pop
nop
je
or
cs
mov
xorl
pop
jge
add
or
stos
fdivl
lahf
fbld
mov
mov
ret
and
xchg
and
jmp
adc
cmpl
lcall
mov
mov
test
je
outsl
mov
jae
mov
push
ja
insl
mov
pop
mov
mov
in
lea
mov
popf
ss
xor
dec
pusha
rorb
jb
inc
sbb
xor
ret
mov
xlat
or
pop
jnp
mov
lock
sbb
movsl
outsl
and
sbb
dec
subl
leave
subb
sbb
enter
add
into
xchg
xor
lock
enter
cwtl
sbb
adcb
sbb
testl
es
hlt
cmp
lcall
xor
cli
dec
stos
fnstenv
pushf
add
repnz
push
jmp
jg
inc
enter
mov
les
mov
adc
push
jnp
lds
xchg
jns
aad
xchg
negl
mov
and
push
je
inc
leave
push
shlb
addb
pushf
add
xor
insb
mov
insl
cmp
push
mov
mov
outsb
xor
iret
outsl
test
aas
cmp
sbb
xor
dec
lds
stos
iret
pop
xor
dec
fdivl
aam
xchg
lods
shlb
lods
in
sbb
loope
cmpsl
or
mov
mov
lret
mov
or
sbb
or
push
inc
lods
fiadds
insb
shlb
and
or
daa
dec
push
jae
jno
repnz
jmp
call
cmp
pop
cli
lret
mov
sbb
sub
mov
xor
sbb
bound
jg
adc
inc
adc
mov
mov
dec
push
cmpsb
xlat
nop
dec
add
andl
sbb
jo
inc
or
or
dec
addl
push
stos
jns
subl
aad
fadds
clc
fwait
mov
addr16
push
out
push
jmp
or
nop
mov
or
pop
jp,pt
mov
icebp
out
mov
push
mov
dec
cmpsb
xchg
je
inc
pushl
or
xor
icebp
add
mov
dec
scas
subb
mov
pusha
dec
xchg
inc
punpckldq
cli
daa
push
xor
mov
sub
pop
mov
hlt
sub
sub
fimull
popf
lods
std
sub
bound
xchg
int3
cmp
mov
imul
shrl
mov
test
cwtl
mov
mov
insl
fmul
jne
mov
push
rorb
shll
icebp
mov
xchg
jge
ret
subb
pop
pop
dec
sbb
cmpsb
mov
sbb
inc
adc
ljmp
and
fstps
push
xchg
lcall
or
lahf
sbb
repz
cmpsl
xchg
mov
enter
add
and
lods
or
scas
pop
pop
xchg
popa
mov
lock
mov
sbb
mov
loope
inc
xor
add
out
dec
xchg
inc
cld
jge
add
lock
dec
add
dec
sub
jnp
fimull
mov
cmp
add
jno
mov
jbe
out
mov
adc
xor
out
out
mov
movsb
in
mov
cld
stc
inc
jecxz
jae
cmp
mov
ret
arpl
ret
leave
or
mov
jp
aas
aam
inc
mov
xchg
pusha
inc
scas
sub
adc
ljmp
cli
aad
sti
add
push
adc
stc
out
jb
dec
inc
push
push
xchg
test
mov
cmp
das
dec
shlb
mov
out
sbb
jb
or
inc
mov
les
or
or
add
scas
jg
xor
in
inc
repnz
jmp
clc
push
outsl
imul
jg
les
js
scas
sahf
jg
push
jp
sbb
popf
xchg
adc
mov
loope
divb
popa
scas
or
out
pop
mov
mov
dec
mov
mov
jge
lods
maxps
loopne
sub
out
push
add
push
pop
rcl
xchg
jbe
imul
pop
push
mulb
mov
cmp
adc
lds
mov
add
les
insl
cs
scas
jg
fcmovb
lret
mov
adc
loop
bound
add
xlat
pop
xchg
sbbb
xchg
add
das
adc
cltd
test
shll
and
pushf
jg
cli
imul
dec
dec
xlat
or
push
cmp
sub
inc
or
mov
imul
popl
jecxz
repnz
sub
push
out
aas
sbb
xor
mov
lret
movsl
fiadds
dec
mov
scas
push
xchg
sahf
std
pop
outsb
lcall
lods
cmc
in
mov
das
xchg
sub
mov
lea
sub
popf
insb
aas
ljmp
ret
cmp
mov
pop
xchg
aad
mov
lahf
push
mov
jg
sub
cmp
out
mov
scas
scas
adc
jno
xor
xchg
addr16
fwait
ret
sub
stos
push
xchg
pushf
clc
add
lods
movb
or
flds
pop
push
out
push
aas
shlb
movsb
pop
ret
addr16
xchg
stos
int
mov
xchg
in
cmp
and
sbbl
int
fisubrs
cs
outsb
test
fisubl
sti
xchg
mov
daa
fiadds
inc
add
aas
push
jne
add
inc
int3
test
xchg
lds
inc
sbb
mov
cmp
pop
mov
sbb
cmp
mov
notl
and
cld
imul
dec
cmpsb
das
add
inc
mov
ja
mov
shll
inc
xor
mov
push
movsl
icebp
leave
dec
dec
in
or
and
xor
jmp
es
pop
inc
pop
jmp
xchg
cmpsl
dec
ret
test
in
dec
call
icebp
jecxz
sbb
xorl
leave
adc
mov
loopne
testl
cli
jae
fdiv
mov
popa
aas
jb
mov
xchg
sbb
push
adc
movsw
aam
pop
xchg
ret
loop
pop
add
dec
mov
hlt
sbb
sets
jp
imul
jecxz
mov
inc
add
xchg
cmc
xchg
xchg
xchg
inc
sti
insb
mov
popa
lea
push
inc
adcb
and
mov
nop
cmp
sbb
shll
notl
fidivrs
push
into
loop
push
scas
jae
lods
jp
int
or
xor
mov
ljmp
daa
mov
mov
into
pop
pop
addr16
fcompl
cmpsb
or
arpl
xor
rcrl
cmp
sti
sarb
cld
dec
xor
test
mov
and
xlat
adc
and
daa
movsl
das
xchg
rolb
pop
mov
add
movsb
xchg
and
and
jnp
out
mov
shlb
scas
sbb
mov
dec
jmp
ds
and
xor
inc
sub
inc
fists
jge
mov
repz
adc
and
push
mov
outsb
xchg
and
lea
es
ja
lods
fisubl
pusha
stos
in
mov
popa
adc
pop
xor
leave
jp
cli
sarb
and
mov
jle
sbb
push
sub
sbb
pop
push
adc
add
and
lea
jge
inc
bnd
mov
mov
cmpsl
mov
sub
inc
adc
cwtl
jo
icebp
ror
jp
push
mov
or
mov
add
stc
jbe
jl
ljmp
mov
adc
and
push
orl
mulb
xchg
std
lods
daa
in
ss
scas
pop
das
mov
add
mov
add
test
lcall
dec
test
imul
or
fcoml
dec
mov
fdivrl
mov
aad
add
push
insb
push
mov
les
pop
repnz
or
fmul
in
lcall
sub
add
test
and
fmull
xchg
shll
cld
loopne
mov
stos
mov
jg
repz
pop
into
push
dec
leave
push
xchg
sarl
adc
inc
mov
push
outsl
scas
lea
dec
inc
orb
enter
clc
insl
or
lret
add
popl
das
dec
xor
mov
pop
xor
pop
movb
call
ret
or
popf
out
cmp
es
mov
mov
negl
cmp
inc
ret
shrl
imul
jecxz
sub
mov
jp
js
dec
sub
fistl
insb
insb
pop
jnp
aaa
adc
mov
xchg
inc
mov
loop
mov
jmp
mov
push
push
cmp
std
adc
or
lock
lret
hlt
andl
aas
lcall
or
lock
cmc
nop
mov
gs
sbb
mov
xchg
ljmp
pop
sbb
push
jns
ret
outsl
imul
lods
fs
and
test
lahf
jne
mov
mov
ss
pop
mov
movsb
add
mov
push
mov
outsl
adc
imul
push
scas
jmp
push
dec
push
ret
outsl
mov
fistps
shlb
push
fsubrl
jnp
jbe
int3
es
dec
aam
adc
inc
jmp
push
fnstcw
xlat
fsubrs
xor
rcrl
pop
lcall
mov
lds
cs
jle
adc
jb
sub
sub
mov
and
in
ret
das
lcall
stc
ss
movsb
cltd
wbinvd
pop
push
adc
arpl
pusha
cwtl
sub
dec
fsubl
jle
jne
jmp
inc
in
xlat
mov
inc
repz
fsubrs
dec
cltd
pop
xchg
bound
xchg
aas
dec
aad
add
mov
or
mov
pop
pop
sahf
push
lock
pop
fwait
jo
pushf
adc
lea
add
and
pop
cs
out
nop
pop
fistl
loopne
lcall
movsl
scas
mov
mov
ret
sbb
inc
scas
cmpb
in
mov
nop
divl
pop
outsl
inc
icebp
fnstcw
mov
mov
or
cmp
add
scas
inc
mov
pop
xchg
jb
mov
lods
mov
xlat
out
imul
lret
and
pop
int3
mov
xchg
sarl
jb
cmp
pop
mov
lcall
lret
out
pop
jno
dec
push
push
inc
sahf
sbb
jae
dec
mov
add
push
jbe
sbb
mov
xchg
and
xchg
push
addl
and
mov
lds
mov
sub
nop
mov
ret
aas
dec
dec
or
into
push
fldln2
jle
jg
push
lds
rolb
push
insl
fucomi
leave
and
sub
popf
adc
cld
xchg
fnstsw
cmp
loop
push
mov
shlb
add
cmp
or
loop
sub
fidivl
push
das
pop
movsl
sub
fmull
jle
pop
jecxz
push
out
add
loope
stc
incb
xor
pusha
jo
addb
std
mov
sub
adc
pop
xor
push
clc
jge
sub
cmpsb
pop
mov
lret
jno
push
mov
adc
add
ret
mov
shll
push
pop
inc
aas
xor
mov
pop
xchg
mov
pop
inc
add
ja
leave
nop
dec
sahf
lgs
cmp
int3
dec
adcl
mov
aam
lea
mov
je
jp
bound
aas
mov
lret
push
sbb
mov
add
push
mov
mulb
xchg
aas
jne
adc
and
cltd
sub
je
jmp
mov
push
repz
std
dec
inc
sub
call
push
sbb
clc
setb
sbb
push
xchg
pop
and
sbb
mov
ret
push
or
insl
test
cmp
mov
cltd
enter
lret
maskmovq
divl
sbb
stos
lahf
loop
xchg
mov
rorb
arpl
dec
jae
aam
sbb
scas
ja
mov
mov
test
aam
add
lahf
mov
cmpsl
push
aaa
pusha
sub
cmpsl
jns
pop
in
xchg
int3
xchg
mov
ljmp
pusha
add
jno
mov
sbb
fsubl
pusha
mov
cmp
sbb
fistpll
lret
sub
pusha
mov
scas
cmp
push
cltd
andb
sbb
mov
push
negb
rclb
fcompl
pop
pop
aas
hlt
mov
mov
roll
mov
movsl
andl
or
mov
or
add
lock
lret
push
out
fwait
hlt
inc
mov
mov
lock
popa
xor
gs
sub
incl
adc
adc
lock
test
adc
dec
jae
pushf
xadd
insb
call
or
es
cmpsb
inc
mov
cmp
pushf
aam
fcompl
in
aad
push
pop
out
or
out
enter
je
mov
bound
in
sbb
movsl
dec
sarb
fdivrs
push
jp
cmp
push
fisubrl
popf
enter
pop
shl
pop
stc
adc
xchg
jnp
mov
out
jne
pusha
cltd
and
sub
jmp
repz
add
adc
sbb
push
jmp
cltd
dec
mov
subl
rorl
sub
cmp
daa
sub
cmp
dec
mov
test
test
jae
or
lcall
test
es
in
sub
scas
enter
jne
movsl
or
or
xchg
addl
mov
addr16
loopne
push
negl
dec
dec
or
pop
popl
das
mov
fidivl
pop
idiv
cmpsb
nop
add
call
inc
or
inc
imul
inc
or
bound
adc
jno
sub
mov
pusha
in
lcall
cmpsl
inc
cltd
test
popf
mov
daa
lret
adc
outsl
xchg
fsubl
mov
jl
or
dec
out
sub
shlb
fs
sti
xchg
xor
ret
fldt
outsl
adc
sub
popa
inc
or
adc
leave
scas
faddl
pop
pop
fwait
sbb
repz
mov
inc
cli
pop
nop
rolb
sbb
lds
addr16
mov
mov
and
jns
stos
push
or
fstps
lret
ja
js
cwtl
pop
add
push
adc
adc
ficomps
push
and
cmc
outsl
xor
mov
pop
cmp
pop
std
adc
shr
in
xlat
test
lods
pop
mov
xchg
mov
icebp
xor
jle
mov
movsl
push
adc
lods
lds
shr
xor
or
inc
push
jmp
pusha
push
ss
sbb
stc
jecxz
sub
sbb
arpl
sbb
cld
mov
mov
xchg
into
and
push
mov
push
xchg
jnp
into
push
mov
stos
sbb
popa
adc
das
leave
adc
fisttps
mov
fcomps
xchg
mov
xchg
push
fwait
out
ffreep
inc
sub
inc
sbb
mov
adc
repz
mov
sub
stos
push
rcrb
shll
test
divl
addr16
xor
and
and
arpl
xor
push
push
pop
cli
pop
cmp
and
xor
adc
jno
pusha
sub
test
adc
pop
cmpsl
pop
fdivrs
rcr
and
outsl
into
add
jp
xchg
jo
arpl
scas
sbb
fwait
xchg
inc
loope
jbe
cmp
out
xorl
fildl
insb
and
mov
imul
fdivs
mov
cltd
sbb
push
cmp
aad
int3
add
fildl
pop
mov
cmc
sbb
adc
jg
push
push
ds
mov
outsl
mov
insb
fnstcw
cltd
cmpsb
adc
mov
mov
xchg
popa
mov
xchg
cmp
jl
mov
dec
mov
cmp
addr16
int3
incl
push
xchg
jmp
test
mov
std
imul
pop
xchg
out
jb
inc
dec
pusha
fwait
inc
cmp
outsb
push
pop
inc
pop
das
test
push
and
test
aad
mov
push
arpl
inc
shll
sbb
sub
inc
sbb
repz
lods
ljmp
sbb
push
test
jbe
xchg
sbb
sbb
data16
cmp
loopne
xor
sti
sti
mov
sub
pop
icebp
stos
jecxz
push
into
pop
iret
push
ret
orl
fsubrl
or
bnd
inc
sbb
lods
add
pop
ljmp
add
or
inc
or
dec
dec
mov
sub
test
add
xchg
sub
inc
out
dec
hlt
int
mov
mov
out
cli
loope
test
shll
insb
dec
test
pop
arpl
xlat
jo
ret
sbb
ljmp
mov
jmp
jp
xor
push
or
xor
fidivrl
loopne
testb
ficomps
pop
outsl
enter
add
or
mov
loope
enter
aas
sub
mov
sti
jne
dec
adc
and
sbb
jecxz
cmpsl
push
xor
bound
sub
push
insb
dec
cmpsb
mov
lock
js
cli
imul
div
inc
out
sub
ja
inc
pop
jo
aad
out
hlt
mov
dec
les
or
rcrl
int
pop
sahf
jecxz
mov
stos
shll
orl
jne
push
sub
mov
stc
dec
mov
jl
push
adc
mov
or
ror
cmp
cmp
out
lret
push
or
loope
rolb
fbstp
inc
pop
idivl
xor
jns
cmp
subl
or
inc
add
fs
movsb
in
test
jle
sub
fnstsw
ja
mov
shll
mov
fucomip
jle
mov
or
cmp
insl
add
popf
jge
aad
std
fld
pop
add
sub
gs
jmp
sbb
out
in
in
xor
test
leave
mov
xchg
cmpsw
jl
enter
cmp
lods
les
xor
stc
imul
imul
mov
test
shrb
mov
movb
repnz
ljmp
popa
cmpsb
xor
cli
cmp
aam
sbb
sahf
or
loop
pop
fimuls
aas
ja
imul
and
mov
ret
stc
movsb
sub
loopne
mov
cmp
fcoml
pop
clc
or
data16
pop
pop
jo
popf
mov
cmp
pusha
sub
mov
lock
addb
shl
jp
cli
inc
insl
lret
xchg
adc
sub
in
inc
icebp
mov
ljmp
mov
loop
pop
push
test
stc
loop
flds
mov
and
jno
mov
cmp
adc
mov
gs
lods
jg
sahf
adc
lock
mov
cwtl
pop
or
out
fisubs
inc
jae,pt
cwtl
cmpsl
push
cld
fwait
scas
push
jb
fs
call
std
xor
enter
pushf
adc
stc
xchg
ja
jne
scas
inc
push
xor
dec
push
mov
in
sbb
mov
sbb
mov
push
add
xchg
pop
cmc
out
cmc
jo
pop
dec
movsl
sbb
jp
mov
xchg
movsb
loop
cmpb
lar
fisttps
fldcw
dec
xchg
lret
cmpsb
stos
test
addr16
scas
mov
mov
adc
and
in
mov
loope
pushf
jae
jno
inc
and
sti
mov
test
sub
xchg
rcll
inc
sbb
and
cltd
aas
xor
mov
xor
or
aam
push
mov
add
pop
psadbw
jmp
leave
ljmp
arpl
fcoms
in
mov
and
sbb
inc
ja
leave
mov
xchg
in
jge
or
out
nop
jmp
into
mov
xor
pop
jp
imul
dec
sub
fdivs
dec
lock
pop
sbb
cwtl
sub
aad
sub
add
mov
pushf
into
add
popf
cmp
in
or
mov
jo
rorl
pop
dec
xor
ja
pop
in
or
xchg
mov
outsb
and
arpl
out
pop
mov
push
push
das
fistps
adcb
fbld
addr16
int3
add
stc
xchg
ret
inc
js
in
xchg
or
enter
or
jb
decl
mov
jp
repnz
mov
sub
fldl
and
sub
mov
mov
hlt
clc
add
pop
jg
jl
js
daa
adc
in
out
stos
pop
js
push
mov
aam
popa
jo
gs
sbb
add
jo
sub
or
test
or
or
xorb
sbb
mov
push
int
add
jmp
xchg
rclb
insb
xchg
xchg
push
fnsave
sbb
add
pop
dec
cmc
adc
sub
inc
imul
lcall
jo
jmp
test
xchg
arpl
dec
pop
cmpsl
and
mov
std
mov
imul
jbe
cmp
test
pop
pop
and
mov
lods
pop
lods
mov
in
pop
jg
dec
sub
cmpsl
push
xor
aas
mov
cmp
and
lds
pop
and
daa
lds
add
decb
xor
imul
testl
push
mov
es
and
pop
int3
clc
xchg
idivl
pusha
pop
mov
popf
lret
xchg
dec
addr16
dec
xchg
mov
sub
movsb
gs
stc
pop
in
mov
adcl
mov
xlat
add
adc
int3
mov
jecxz
or
into
or
inc
fldt
add
sbb
sbb
jno
mov
push
aam
jmp
adc
mov
fistpl
daa
cs
cmp
ror
mov
add
or
push
les
xlat
adc
adc
test
mov
das
aas
sub
lahf
pop
fwait
inc
call
in
cmc
ret
push
nop
idivl
sub
mov
mov
loop
cmp
jecxz
push
out
dec
cmp
in
jbe
sub
mov
ret
mov
ret
lods
les
ret
xor
sub
hlt
clc
add
lcall
xchg
fcompl
adc
push
popf
xchg
add
and
inc
mov
jns
js
int
leave
lret
ret
pop
inc
xchg
addb
and
pushf
icebp
negb
jnp
lods
pop
mov
lock
inc
fxtract
xor
sub
lock
mov
mov
lock
shlb
dec
mov
into
push
dec
addr16
pop
adc
xor
jp
fstpt
and
mov
xchg
xor
jle
in
mov
inc
or
xchg
sub
push
rclb
popa
in
jo
stos
dec
mov
inc
test
inc
mov
fstpl
test
add
inc
sbb
inc
mov
push
mov
gs
cmp
test
mov
fdivl
or
and
adc
fsubs
sbb
ja
inc
andb
push
les
fsts
sub
mov
loopne
aas
xchg
clc
cmp
iret
pushf
pop
out
xor
pop
test
jnp
aaa
xchg
and
or
fwait
dec
or
and
lock
ja
into
icebp
in
lods
pop
push
pop
filds
push
test
out
adc
xor
dec
sahf
xorb
sbb
ret
or
inc
into
push
add
jae
fcomi
xchg
jnp
jae
push
fcompl
icebp
cmp
out
sub
jbe
push
icebp
negb
lahf
inc
xor
pushf
inc
fimull
popl
xchg
or
es
or
je
dec
loopne
test
enter
enter
andb
jle
sub
sbb
scas
push
jnp
clc
cli
mov
test
or
shr
pop
std
jo
into
rolb
cmp
xchg
mov
or
lea
or
xchg
btrl
xchg
inc
fistl
cmc
jmp
and
ret
jg
adc
dec
data16
xorb
xorl
or
mov
jg
mov
pop
mov
fwait
inc
mov
sub
push
mov
je
mov
fildll
nop
add
subl
sub
test
mov
cmpsb
inc
mov
mov
jae
test
pop
or
mov
xor
or
xor
sbb
dec
cmpl
loopne
fs
cmp
mov
rcll
or
or
popf
aad
xchg
push
pop
mov
jo
test
dec
mov
clc
pop
jae
add
or
rol
dec
dec
pop
or
jae
push
enter
or
xchg
inc
cmpsb
icebp
push
movsl
mov
adc
jb
rcrb
cmpsl
push
inc
nop
add
push
pop
dec
adc
stos
pusha
aam
popf
cmc
aam
dec
mulb
sbb
sbb
icebp
mov
sahf
rorl
loop
xor
rcll
or
and
loope
adc
les
pushf
dec
mov
stos
cmp
mov
inc
jl
popf
sbb
ljmp
enter
std
cmp
insl
outsb
cltd
notl
jbe
cmp
hlt
add
xor
arpl
dec
or
ss
es
out
push
jg
cmp
dec
xchg
and
cmpsl
mov
popl
mov
or
dec
ret
sbb
clc
pusha
push
cmp
aaa
mov
loope
lret
push
inc
mov
sarb
fst
out
fcoml
sbb
fistpll
fwait
mov
shr
cmp
xchg
rcrb
push
sahf
dec
notb
faddl
enter
in
xor
ret
mov
out
sbb
in
lock
jne
push
mov
add
push
xor
and
inc
sub
xchg
pop
pop
cld
and
xchg
sbb
repnz
lahf
jg
add
loope
add
or
xchg
jl
outsl
and
shl
iret
movsb
push
cmpb
and
cmp
sbb
xlat
mov
mov
sbb
inc
jbe
sarb
fs
adc
and
push
lahf
mov
stos
xchg
les
add
xor
pop
fcoms
lret
stc
lds
dec
stos
add
out
lods
stos
xchg
out
and
push
cmpl
imul
hlt
mov
inc
pop
pop
add
lcall
clc
jmp
lods
add
adc
int3
lock
es
addr16
mov
xlat
icebp
mov
sbb
push
and
lret
fidivrl
shlb
cmp
dec
popf
fmul
lret
leave
mov
pop
dec
outsb
mov
adc
inc
push
push
jg
imul
push
jbe
bts
dec
stos
dec
enter
xor
mov
jp
negb
loop
cmpl
test
jb
sbb
xchg
sti
jns
jle
add
loopne
bound
cltd
inc
and
mov
mov
inc
iret
out
adc
and
mov
push
mov
push
mov
popa
aad
hlt
loope
mov
or
clc
and
jno
out
aaa
sti
out
cli
orb
out
and
cltd
cmp
mov
outsb
cld
inc
movsb
xor
jg
roll
outsl
mov
pop
lods
push
call
pop
mov
in
stc
pop
dec
insl
lea
movsb
js
fmull
arpl
and
push
and
lods
mov
inc
std
mov
lcall
arpl
jbe
popa
cs
jo
shll
xchg
xor
das
and
jno
test
mov
push
dec
add
pop
shrb
sbb
mov
jg
mov
mov
push
insl
adc
jbe
out
lea
jecxz
sahf
dec
push
jg
nop
sbb
test
xor
sbb
es
outsl
cmp
clc
fadds
mov
mov
xor
push
int
ja
jle
and
mov
ljmp
mov
inc
mov
pop
mov
icebp
cmpsb
stos
cmp
outsl
fisubl
push
fwait
jns
pushf
hlt
or
xor
sbb
std
or
loopne
sub
pop
cmp
cli
shll
leave
jnp
into
or
xchg
ret
stc
imul
loope
mov
xor
fsubs
xor
movsl
mov
divl
dec
add
repz
aas
cmp
repz
jb
jp
adc
mov
dec
faddl
xor
xchg
lea
adc
fisubs
cmp
lods
cmpsl
jnp
mov
xor
movsl
mov
xchg
jl
mov
popa
out
xchg
dec
mov
fcoml
xchg
jge
sub
nop
lret
mov
push
push
cmp
int3
ds
cmp
inc
dec
fisubs
ret
mov
lock
dec
dec
stos
pop
ss
ljmp
insb
push
jnp
jp
pop
rcrb
add
mov
push
sbbl
lds
aam
fiadds
and
lcall
jb
mov
push
dec
jne
aaa
fdivr
out
imul
cmc
hlt
pop
fstl
jno
sahf
jmp
xor
das
dec
leave
leave
in
jnp
lcall
push
popa
jg
sub
cmc
lret
loope
mov
add
inc
xchg
jecxz
loope
adc
not
xor
mov
adc
ljmp
sbb
int3
mov
and
enter
add
in
out
mov
jle
rclb
adc
mov
mov
test
mov
jo
fadd
mov
cli
jbe
test
pop
fistl
push
xchg
dec
and
dec
sbb
cld
pop
nop
push
jge
or
subb
push
cmpsb
shlb
mov
fs
jmp
cmp
lods
sbb
mov
outsb
adc
inc
xor
cli
out
mov
repz
outsb
mov
clc
mov
adc
divl
lods
adc
xchg
clc
ja
ret
or
cmpsb
sbb
ljmp
in
xchg
loope
ffree
call
sarb
aas
pushf
xchg
cs
jg
into
mov
pop
mov
in
movsb
jnp
push
dec
mov
out
jle
jle
call
cmp
icebp
sbb
push
lcall
sub
or
and
divb
outsl
xchg
int
ror
loope
add
mov
pop
cmpsl
addr16
push
xchg
sbb
sahf
push
push
movsb
je
mov
insl
fsubp
mov
adc
mov
push
cmp
fcompl
loop
push
incb
fwait
cs
inc
lea
jecxz
js,pt
adc
jle
pop
inc
aaa
into
push
or
inc
rolb
icebp
rcl
jecxz
pop
sbb
pop
push
jmp
sub
jg
push
lock
push
testl
xor
adc
mov
pop
jle
sbb
adc
adc
hlt
or
lahf
les
inc
jno
adc
scas
inc
jnp
lods
popl
pop
dec
out
pinsrw
adc
pop
jo
cmp
cld
mov
repz
shlb
std
mov
lahf
mov
mov
mov
insb
push
push
adc
fs
cli
sbb
scas
pop
adc
int
push
dec
insb
test
jmp
icebp
cmp
lret
adc
cmp
pop
dec
loop
push
leave
mov
inc
xchg
sti
movl
dec
adc
pushf
call
mov
pop
cmp
mov
test
sbb
jmp
adc
xchg
fisttps
out
push
xchg
cld
movsb
sbb
mov
cmp
push
pop
fldt
insl
push
cmovs
inc
lods
dec
repnz
jmp
jbe
scas
dec
sub
adc
int3
add
imull
fstl
int
fcomps
and
sar
mov
or
cmp
dec
lds
clc
push
ljmp
pop
sub
xchg
pop
cld
and
cmp
inc
dec
jl
bswap
mov
ret
gs
jle
aaa
pop
sarl
add
adc
sub
dec
call
cld
add
jge
add
cli
mov
imul
cmp
cmc
dec
sbb
or
lds
or
adc
pop
push
mov
mov
cli
nop
jo
xor
stos
cmc
add
jo
movsl
mov
arpl
outsb
jb
xchg
fdivl
cld
shrl
cld
in
in
xor
push
les
push
outsb
sub
mov
lea
mov
sub
cmc
xchg
mov
movsl
test
imul
jbe
or
scas
push
cmp
scas
inc
loopne
lret
in
add
sbb
lret
lds
mov
imul
xchg
pop
outsb
pop
faddl
jmp
mov
and
ffree
mov
pop
cld
std
insl
stc
imul
adc
jo
xor
int3
rcll
cmp
push
mov
jle
test
test
dec
cmp
pop
mov
repz
mov
pop
dec
xlat
inc
jnp
mov
sub
cli
insb
xor
outsb
jle
movsl
jo
out
cmp
dec
fists
movsb
outsb
fisubrs
and
or
sbb
shl
and
mov
dec
xchg
adc
dec
xchg
js
jo
adc
cmp
inc
mov
adc
mov
sub
fsubs
ret
sub
mov
aas
sar
rorl
lret
pop
cmc
inc
scas
inc
orl
out
push
test
sahf
test
shll
cltd
adc
int3
push
aas
shrb
dec
dec
imul
xchg
popf
push
sbb
dec
pop
and
jno
sbb
andb
mov
or
icebp
inc
stos
inc
and
divl
xor
call
mov
fsubl
jp
jno
scas
nop
out
pop
pop
inc
rcll
mov
push
rcrl
sub
fs
sbb
or
dec
or
or
and
pop
sub
fldenv
lcall
das
int
add
je
pop
inc
inc
push
aad
mov
mov
mov
in
or
call
int
cmpsb
mov
filds
frstor
push
aad
popa
lahf
les
inc
inc
xchg
shl
inc
adc
lods
ljmp
cmp
int3
test
loopne
nop
shl
loop
repz
roll
cld
jp
jle
xchg
sub
movsl
jnp
into
ss
test
and
call
add
in
je
aam
mov
stc
test
or
sub
stos
inc
adc
dec
out
xor
push
push
pandn
aaa
push
test
xor
or
push
inc
jecxz
iret
xlat
inc
imul
out
cwtl
jb
xchg
push
fcomps
push
dec
xchg
push
bound
ljmp
lret
movsb
mov
lods
dec
xchg
sbb
out
test
xor
or
mov
cmp
outsb
test
mov
test
call
fildl
cmc
mov
rorl
out
adc
jnp
pop
jmp
popf
hlt
sub
inc
imul
and
cmp
repnz
pop
and
scas
xchg
sbb
mov
call
les
or
out
popa
sub
xchg
dec
daa
xor
mov
in
pop
sbb
cmp
and
adc
xchg
loope
xlat
or
or
inc
pop
sbb
sub
xor
jo
cs
mov
in
push
sarb
mov
lcall
xchg
mov
sbb
sbb
xchg
shrb
fidivrs
inc
jge
cmp
add
inc
into
cs
sbb
lea
imul
xor
dec
in
and
cmp
add
jne
mov
outsl
xor
ds
movsl
cmp
mov
pusha
repnz
mov
pop
sahf
pop
xchg
test
mov
lret
xchg
sbb
xor
aaa
jecxz
mov
shll
stos
cmpsl
data16
hlt
fsubrs
out
sub
and
mov
jp
xor
int3
jns
cmpb
pusha
mov
dec
cmp
inc
int
mov
loope
jne
pop
call
jecxz
loope
scas
xchg
jg
int
jp
out
fsubl
cltd
cmp
mov
test
roll
popa
mov
repnz
dec
shl
xor
or
or
or
mov
and
fldcw
je
adc
insb
and
push
push
jb
mov
das
jg
push
push
outsl
xorb
std
mov
lahf
ficoms
insb
lds
push
inc
xor
dec
fwait
clc
in
push
shl
jecxz
mov
popf
sahf
jo
adc
lock
xlat
test
shl
xchg
dec
cmp
cwtl
mov
clc
enter
xlat
sbb
int3
imul
std
lret
push
inc
or
outsl
sbb
js
sbb
adc
xchg
push
fcoml
fimuls
stc
xor
mov
cmpsl
pop
das
cmp
inc
sub
shlb
push
jo
fdivs
in
imul
repnz
or
xchg
aad
fstpl
xor
lods
jl
sbb
or
sbb
insl
outsb
std
nop
pop
xor
or
cwtl
shll
dec
std
in
jp
sub
push
add
rcl
stos
aas
rcll
lret
pop
pop
repnz
fiaddl
movsb
mov
jmp
insl
lahf
andl
mov
lret
xorb
pop
aaa
in
repz
or
add
push
xor
xchg
xchg
imul
push
gs
xor
push
in
jae
push
jmp
jbe
push
jne
lea
notb
and
stos
jne
movsl
push
enter
sbb
xchg
or
inc
dec
push
mov
fimuls
stos
fstpt
je
jle
mov
or
adc
ljmp
outsb
popa
icebp
fidivrs
add
sbb
lcall
fcomps
inc
mov
fists
mov
pusha
arpl
fs
dec
bound
dec
cmp
jbe
cmpb
mov
push
repnz
sbb
xor
mov
test
jns
mov
scas
insb
insb
mov
or
and
push
pop
aad
sub
inc
push
mov
pop
xchg
mov
push
test
xchg
fxch
jg
int3
mov
in
js
inc
fsubrl
cmpsl
in
jle
mov
xchg
movb
fisttps
or
add
mov
dec
mov
shll
dec
pop
loop
push
icebp
popf
mov
test
pop
pop
mov
outsl
cmpsl
in
dec
sbb
fsubrl
pushf
inc
jg
inc
pop
popa
push
push
aas
cmp
xor
mov
jg
mov
push
icebp
push
repnz
call
xchg
fsubs
mov
fsts
stos
mov
mov
rcl
cld
fiaddl
cli
inc
mull
pop
xlat
mov
pushf
fisubl
and
dec
push
mov
and
je
jge
ret
push
fisubrl
jne
push
stc
lods
adc
or
dec
fdivs
repz
lods
rclb
add
jl
ficoms
adc
xor
lods
sbb
lahf
fucomip
dec
xchg
mov
sub
cmp
and
psubsb
imul
movsb
es
adc
inc
aaa
cmp
and
es
push
insl
jbe
sbb
popa
in
lods
ret
push
and
xor
fwait
sbb
lods
sbb
push
dec
adc
push
cmp
inc
das
cmp
test
int3
mov
add
adc
in
push
dec
jno
adc
cmp
mov
push
and
out
into
xchg
ret
in
jg
fwait
js
roll
xchg
sub
xchg
jbe
lret
adc
icebp
jb
aad
xchg
out
les
jge
adc
jb
pop
dec
push
adc
add
lret
call
mov
jmp
aaa
cmp
xor
jne
jbe
pop
xchg
sarl
mov
add
pop
dec
fldcw
sub
movsl
stos
int
dec
xchg
bsf
imul
in
aam
mov
mov
sti
adc
inc
adc
mov
lods
inc
outsl
push
add
test
repnz
lcall
inc
call
mov
lret
pop
pop
and
repnz
adc
xor
fildll
loope
and
lock
xchg
push
sbb
mov
cmp
in
out
mov
jns
jge
lret
or
xchg
cmp
popa
pop
pusha
and
scas
and
dec
pop
jle
inc
push
bound
stos
jg
repnz
gs
cwtl
outsb
inc
inc
mov
imul
rorb
inc
push
inc
cltd
mov
xchg
lahf
fdivrl
push
orb
jnp
jne
leave
sahf
mov
mov
ficomps
cmp
rorl
cmpsb
mov
jle
mov
sbb
and
leave
cmp
sti
ds
mov
xor
sbb
fadd
jae
sarb
cmp
movsl
fwait
jne
push
inc
je
cmp
std
jecxz
push
outsb
lret
ss
pushf
jne
insb
sub
dec
mov
or
cmp
ljmp
dec
iret
aaa
mov
fidivl
movsl
cmp
mov
lcall
adc
push
sub
fidivrs
sbb
inc
push
sub
xor
push
std
in
or
cmp
fistl
inc
jne
jg
test
xchg
push
push
dec
xchg
push
dec
and
leave
or
jb
jmp
lock
inc
sahf
push
fcmovbe
ror
in
int3
adc
lods
out
inc
rorb
adc
stos
fwait
es
add
or
mov
lret
adc
sub
addr16
xlat
cmc
lea
addb
push
scas
cmp
fdivrl
push
lahf
in
mov
imul
call
fistl
in
aad
lret
dec
push
mov
ret
dec
add
cltd
push
push
or
hlt
lret
out
loop
sti
rorb
popa
ret
repz
hlt
sbb
mov
xchg
popa
addl
sahf
inc
push
adc
mov
filds
xchg
inc
shrl
jl
mov
in
xchg
daa
loope
sahf
addr16
sbb
out
mov
mov
push
ljmp
cwtl
or
adc
movsb
mov
pop
cmp
push
and
pusha
loop
pop
and
into
cmp
stos
add
adc
negb
enter
sarb
push
mov
adc
lock
int3
std
add
xor
add
out
mov
add
addb
inc
sub
cmp
mov
movsb
daa
push
aaa
mov
fstl
lcall
cmpsb
mov
add
insb
ss
inc
in
mov
and
or
cmp
mov
mov
sub
fistpll
popf
xchg
mov
js
les
add
ud2
xor
fisubl
aad
cmpsl
in
bound
gs
mov
fucomip
or
mov
jge
push
xor
sbb
hlt
mov
inc
lret
lods
pop
lods
inc
in
cmpb
ljmp
ret
or
and
pop
xchg
and
orl
sub
or
and
pop
dec
jmp
cmp
sub
sub
xor
inc
lret
pop
mov
std
cli
mov
movb
sbb
icebp
or
pop
rorb
out
repnz
and
cs
sbb
push
stos
fwait
jo
enter
inc
loop
mov
cmovno
mov
repz
mov
jmp
push
adc
nop
rcrl
xor
or
sbb
and
push
arpl
js
mov
jp
popa
xor
or
jge
enter
test
dec
cmc
cli
add
insl
pop
inc
pop
test
lods
aas
cmpsb
dec
aaa
fwait
dec
inc
out
fildl
pop
push
or
adc
xor
rcrl
inc
jb
sbb
lods
push
call
sbbb
mov
ljmp
cmc
cli
push
es
push
xchg
mov
mov
add
testl
inc
inc
shlb
push
fidivrl
shll
gs
push
mov
int3
mov
je
sub
std
call
jl
push
fisubl
sub
push
dec
rolb
insl
jo
shlb
xchg
sbb
shrl
std
mov
adc
dec
stc
pop
nop
cmc
cmp
mov
popa
push
jb
into
pop
bound
xor
scas
daa
dec
aam
outsb
push
sbb
mov
xor
push
in
and
rcr
popf
gs
shrl
mov
and
inc
push
rolb
fsubs
jl
sbb
cmp
movsl
repz
pop
aaa
jns
mov
insl
cmp
ret
xchg
xchg
in
push
dec
out
xchg
pop
sub
xchg
dec
push
mov
lea
arpl
cld
cmp
sahf
inc
ds
mov
inc
es
push
cmp
dec
and
jnp
rolb
push
mov
daa
sahf
or
into
jbe
jne
pop
bound
lret
inc
jb
hlt
adc
push
sbb
adc
out
ja
lret
mov
mov
popf
stos
sbb
call
daa
ljmp
or
xchg
add
xchg
cmp
test
lods
xchg
mov
sub
outsb
int
jbe
jle
sbb
pushf
loop
cmp
repnz
pop
add
out
jno
into
test
pop
ds
push
or
lds
je
stc
push
or
or
lods
jge
xchg
incl
cli
clc
cli
insl
dec
fidivrl
push
dec
lods
jae
lahf
push
mov
test
mov
jb
sbb
mov
daa
adc
insl
into
xchg
clc
out
pop
inc
push
aaa
aam
cmpsb
imul
cwtl
push
sub
and
dec
adc
push
pop
or
jge
push
lahf
or
sub
clc
pusha
cmpsl
daa
sub
outsb
outsl
int3
mov
dec
lea
sub
or
mov
leave
jp
push
les
or
lret
sbb
fs
ret
mov
std
js
cmp
ds
test
dec
inc
movsb
mov
cmp
inc
sbb
aaa
adc
push
xor
lcall
dec
dec
jmp
dec
cmc
fistpl
jl
lcall
mov
fcomps
pop
in
xchg
jne
lea
ss
pop
lods
fwait
xchg
cmp
dec
aam
daa
mov
push
and
icebp
push
push
mov
adc
push
inc
ss
sahf
xor
out
jbe
inc
jmp
push
cmpsl
push
pop
sub
lahf
fimuls
add
mov
and
adc
lock
leave
cmp
rorb
addr16
sahf
sub
enter
idivl
xchg
fidivl
roll
pushl
adc
push
pop
nop
mov
dec
inc
or
rclb
mov
mov
xor
mov
fadd
push
loopne
and
pop
in
sub
sbb
add
ss
ja
hlt
mov
cmp
xchg
inc
pusha
ljmp
mov
pusha
mov
mov
mov
mov
testl
loop
mov
push
mov
inc
cli
push
icebp
aam
test
add
mov
in
loope
popf
mov
test
push
out
and
mov
imul
or
notb
push
push
mov
and
push
in
adc
or
popf
cld
sbb
lods
out
mov
push
xor
mov
or
push
dec
add
test
pop
ret
xor
pop
push
mov
cmovbe
popa
out
mov
movl
addr16
mov
sub
lock
call
bnd
repz
pusha
jne
add
sub
add
and
sbb
pop
orb
orb
push
xor
lcall
mov
lds
es
shrb
in
xchg
mov
fsubrs
jmp
push
call
mov
push
imul
xor
mov
ds
in
xor
and
dec
repz
add
sahf
stos
mov
push
aam
hlt
ja
push
push
popl
push
les
ret
ss
cmc
fbld
iret
test
xchg
ljmp
or
mov
or
out
and
lret
inc
fwait
sbb
out
icebp
aad
xlat
xor
mov
dec
adc
inc
mov
sub
repnz
outsl
xchg
or
xchg
xchg
sub
adc
dec
and
insl
push
jle
cmpsb
outsl
lea
add
int3
bnd
and
ja
mov
sti
and
fdivrl
out
mov
push
cmpsl
ret
mov
ljmp
jge
pop
icebp
inc
mov
push
sbb
iret
mov
sub
xor
xchg
mov
adc
enter
movsb
imul
stos
stc
fwait
std
jecxz
cmp
push
adc
or
cmp
mov
hlt
add
jae
lods
cmp
or
sub
gs
mov
scas
fwait
sub
jp
cltd
les
push
mov
mov
pop
arpl
lret
mov
pop
jl
mov
aad
jno
pop
mov
mov
ljmp
imull
mov
scas
inc
mov
in
or
into
and
flds
arpl
jbe
push
pop
pusha
xor
scas
stos
fbld
pushf
inc
add
repz
or
mov
add
sub
ja
js
inc
icebp
sub
mov
andb
xchg
imul
pop
in
push
enter
lock
add
enter
fildll
outsb
xchg
lea
mov
push
mov
pop
mov
sti
sub
sub
jae
sbb
mov
test
push
push
sub
outsb
push
lods
cli
mov
cld
sbb
insb
loope
xchg
pop
xchg
dec
cli
or
push
in
add
cltd
mov
xchg
aas
les
sub
xchg
lahf
testl
aam
js
fstps
push
int
mov
inc
add
inc
and
jle
stos
das
mov
cs
call
jno
fdivrl
jno
cli
mov
pop
gs
aas
mov
pop
int
jg
xor
jbe
es
loopne
decl
mov
push
mov
fcmovnb
cwtl
and
adc
orl
and
jns
in
jae
or
mov
into
jno
fldenv
lods
sub
push
das
inc
cwtl
jnp
movsl
cwtl
xchg
mov
pop
aaa
fistpll
xchg
xlat
fwait
gs
es
mov
cld
mov
dec
xchg
pop
and
lea
or
adc
sub
clc
testl
dec
mov
imul
inc
fsubl
movsb
loopne
rorl
jbe
or
sar
xor
inc
hlt
popa
push
push
push
mov
cmp
push
xor
loope
nop
mov
test
push
out
clc
cmp
stc
add
hlt
inc
sbbl
and
dec
xchg
hlt
xor
mov
pop
sbb
enter
cmp
push
sub
jge
test
shrl
mov
jg
jno
adc
mov
scas
pop
xchg
in
outsl
push
ret
loopne
lods
lods
push
push
sub
bound
push
outsl
cmp
xchg
push
ja
sub
lcall
xor
int3
mov
mov
test
push
mov
mov
add
cmp
mov
mov
aaa
test
repz
dec
fistpl
into
sbb
xor
call
mov
mov
fsubl
push
lcall
out
aad
push
add
dec
xchg
mov
sub
pusha
arpl
jns
and
mov
jbe
push
mov
inc
imul
xchg
mov
sbb
inc
out
add
mov
mov
std
mov
loop
jp
add
jecxz
into
adc
dec
sbbl
nop
je
jb
push
lods
es
mov
jno
xor
xor
sbb
aaa
cli
mov
aam
add
cmp
lods
imul
int3
pusha
xchg
mov
and
stc
jp
adc
adc
loopne
cmpb
das
inc
nop
cmpsl
push
in
push
pop
lock
mov
and
cltd
test
dec
mov
pop
test
lods
sub
dec
or
or
inc
subb
decl
ds
xchg
jae
scas
loop
call
nop
jl
inc
pushf
add
pusha
in
in
dec
pop
inc
or
xchg
adc
gs
loop
dec
dec
ss
pop
jmp
xor
or
mov
push
and
stos
mov
adcb
ret
adc
mov
jb
sub
popa
xchg
mov
clc
adc
arpl
sbb
sbb
mov
sbb
add
pop
push
inc
mov
fisubs
jg
pop
inc
bound
mov
push
insb
or
cmp
jne
xor
mov
ds
sbb
int
adc
rcll
bound
cmpsb
mov
cmp
inc
push
loopne,pt
pop
addr16
jmp
fsts
push
lret
test
xchg
mov
aaa
std
ljmp
lock
and
xchg
mov
mov
fisubrs
rolb
push
jmp
cmc
aam
jo
test
mov
and
hlt
jl
lock
repz
mov
std
push
dec
std
push
stos
add
out
fwait
das
pop
or
in
js
leave
cmp
roll
sub
scas
nop
cmc
bound
sbb
pop
in
jns
ds
push
mov
inc
imul
xchg
in
jne
xlat
repnz
testb
hlt
lahf
ljmp
mov
mov
adc
dec
icebp
fs
adc
enter
imul
mov
ret
push
sub
cmp
icebp
pop
ja
movsl
rorl
xchg
das
inc
flds
mov
mov
sub
mov
add
in
jae
cli
jmp
sbb
xchg
lea
decl
ss
or
sub
push
cltd
daa
loop
popa
lds
stc
ret
mov
scas
std
mov
stc
out
xchg
popa
sub
sbb
cld
xchg
loopne
outsl
sbb
hlt
jp
decb
jae
je
and
inc
roll
les
pop
push
inc
fsubr
std
stos
inc
mov
sarb
out
js
sbb
pusha
dec
faddl
and
xchg
and
ds
bnd
mov
jle
lock
cmp
pop
add
inc
out
in
add
sub
add
test
jb
stos
in
int3
inc
xor
hlt
push
push
aad
add
inc
ds
scas
test
repnz
adc
aam
js
aas
jmp
pop
cmp
lcall
or
lods
lock
cmovl
mov
filds
fisttpl
sbb
fisttpll
xchg
stos
cmc
mov
or
push
mov
cmp
jg
leave
loope
cmp
cmp
mov
jg
and
sbbb
enter
sbb
repz
addr16
mov
fistl
pop
adc
ja
mov
pusha
xor
int3
jge
inc
das
push
iret
popf
sbb
ss
push
and
fcoms
dec
roll
jle
jmp
mov
les
dec
outsl
hlt
cltd
mov
imul
test
cmpsl
inc
mov
and
lret
les
xchg
adc
clc
xchg
sub
sbb
mov
loop
cmp
daa
sarb
xchg
sbb
or
and
fsubrp
es
int
sbb
and
and
pop
cmp
dec
mov
sbb
xlat
gs
jp
ss
call
and
fistps
pop
mov
cmpsl
sbb
pop
and
cli
pop
sbb
mov
xchg
pop
movsl
int3
in
int
fidivrl
adc
jb
pop
mov
inc
lock
xchg
and
pop
mov
loope
test
jnp
inc
cld
sahf
test
mov
scas
xchg
or
sbbb
or
or
push
push
xchg
rcrb
mov
xchg
adc
addr16
shrl
jnp
mov
clc
xor
jo
dec
jge
daa
inc
aas
lret
mov
scas
mov
leave
mov
rol
inc
hlt
pop
and
les
cli
roll
test
popa
loopne
dec
test
jmp
xchg
adc
repnz
ss
cmp
mov
mov
xchg
mov
sbb
test
sub
stos
das
fisubrs
sbb
jge
mov
jg
cli
icebp
jmp
dec
pop
inc
push
testl
push
out
and
mov
mov
cli
jp
sbbl
push
jmp
adc
xor
xor
sbb
lods
mov
sbb
gs
or
cmp
cwtl
int3
shll
mov
sahf
imul
fists
push
out
mov
lea
lds
call
aas
scas
sub
xor
outsb
push
mov
xchg
dec
cs
mov
es
negl
mov
push
into
sbb
ds
inc
push
xor
jne
out
shlb
xorb
push
mov
movsl
xchg
cmp
hlt
fdiv
fsubrs
jnp
pop
push
xor
cld
add
lahf
scas
fs
insb
jae
ficoms
adc
sub
jecxz
test
sbb
popa
nop
jns
pushf
insb
push
push
jge
fistpll
adc
or
sub
sbb
add
xchg
xlat
fstps
fwait
cmpsl
fdiv
clc
push
cld
loope
xchg
adc
mov
repz
dec
add
pop
xor
lret
mov
or
xlat
js
xor
mov
ret
mov
pop
aaa
pushf
shlb
adc
jp
xor
jle
add
cmp
dec
jp
aaa
adc
ret
ret
cli
and
scas
ss
in
pop
adc
cmp
mov
mov
adc
aaa
and
shll
ljmp
imul
ja
ret
daa
and
fists
mov
mov
cmp
jl
push
add
xor
add
sahf
out
sub
fs
jb
and
add
aas
icebp
shl
xchg
sti
push
inc
add
inc
jge
push
orb
data16
decl
out
cld
popf
lock
adc
cmpb
shl
inc
mov
aaa
mov
insb
mov
cmpsl
test
repz
sub
dec
pop
xchg
mul
cmp
mov
sub
mov
push
sbb
and
aam
test
es
aas
lret
mov
mov
add
xchg
gs
lret
xchg
add
out
std
add
adc
bound
sahf
cmp
rorb
sbb
int3
cltd
mov
int
push
or
rcl
fiaddl
push
add
lods
fs
aaa
pop
test
jl
cmp
scas
cmp
or
jo
aaa
shr
mov
nop
stos
lods
ljmp
lds
pop
fwait
jmp
jb
enter
dec
fisubrs
test
lahf
out
add
js
out
xchg
iret
in
popf
sub
adc
loopne
daa
shrb
pop
or
xchg
xor
mov
sbb
mov
in
xor
sub
ficompl
das
pop
into
sub
filds
fldt
push
testl
or
cmpl
icebp
fidivl
add
xchg
and
push
sub
jb
out
cmp
out
cmp
je
jo
outsb
stos
pop
jnp
adc
pop
lods
decl
pop
fs
loop
insl
roll
out
outsl
jg
mov
das
out
insl
xchg
icebp
lock
addr16
cmc
pop
int3
push
push
add
sub
out
test
out
inc
jno
mov
sub
call
pushf
dec
inc
bound
mov
mov
fwait
clc
sti
scas
mov
scas
mov
lds
xor
mov
dec
jne
push
adc
bswap
xchg
out
in
jnp
jecxz
cs
shrl
pusha
push
sti
inc
push
repnz
push
scas
xor
das
jnp
mov
ss
mul
xchg
ds
xor
mov
push
push
aas
and
mov
xchg
icebp
mov
push
adc
out
mov
cmc
fxch
dec
adc
mov
rorl
inc
sbb
fcoml
popf
push
je
loop
cmp
xor
out
pop
lods
xor
repnz
sub
out
movsb
push
sahf
sti
cmp
pop
movsb
roll
into
dec
leave
xchg
cs
push
pop
or
add
jge
idivl
xchg
pushf
aas
pop
xchg
fmuls
lock
in
aaa
fidivl
sahf
cltd
ljmp
cmpsl
xchg
jbe
jbe
loopne
loopne
or
mov
incb
imul
adc
lods
mul
mov
sub
insl
addr16
jns
xchg
sub
adc
call
rcr
push
mov
jle,pn
pop
push
scas
aad
ss
cmc
js
lcall
lcall
repz
adcl
push
rclb
sti
roll
sbb
mov
xchg
ds
mov
lret
mov
xor
adcl
inc
pop
push
mov
jne
ret
xor
jmp
pop
jo
jns
push
imul
in
verr
cmpsb
sti
data16
xchg
rcr
cwtl
jp
jns
lods
ljmp
or
inc
leave
mov
or
adc
fcmovb
or
stos
into
pop
in
test
mov
das
sub
mov
imul
xchg
pop
mov
loopne
fadds
jecxz
jl
das
out
movsb
in
int3
adc
lahf
mov
cld
data16
dec
bound
jo
imul
out
sub
test
mov
jmp
fsts
test
cltd
imul
xor
sbb
adc
stos
cmp
repnz
cmp
scas
jb
mov
or
sti
out
mov
outsl
mov
cs
add
enter
jecxz
push
mov
test
iret
push
push
lret
orb
xchg
ljmp
sbb
out
mov
sub
jge
out
inc
sub
sub
rcll
hlt
jae
add
popa
add
dec
cmp
and
mov
inc
mov
mov
imul
cld
xor
mov
test
mov
outsb
xor
add
sbb
inc
jb
dec
cmp
mov
push
inc
inc
xchg
mov
outsl
sbb
jae
std
popa
int3
jne
jecxz
ljmp
add
gs
ss
iret
fwait
jl
rclb
fs
mov
pusha
adc
fisubs
sbb
push
mov
sub
jle
mov
flds
je
ljmp
out
add
push
jb
out
jmp
push
cmp
cltd
jb
mov
mov
or
mov
push
sbb
adc
pop
dec
test
mov
inc
jb
or
jb
les
add
arpl
aaa
jns
jae
xchg
or
pushf
jg
mov
addb
outsl
es
mov
jge
xchg
xor
push
gs
in
mov
into
fnstenv
aam
xchg
aad
imul
rolb
mov
inc
aas
shl
mov
aad
mov
call
in
rcll
test
in
adc
adc
add
lock
dec
sub
mov
daa
fcomps
movsb
adc
mov
test
mov
ret
inc
adc
dec
nop
jg
loop
mov
movsb
mov
mov
mov
jbe
fildll
popf
clc
cli
leave
int
test
iret
fcmovb
mov
ficoml
pop
daa
mov
scas
ss
adc
bound
fidivrs
in
imul
cmc
js
call
movsl
repz
mov
xor
test
rep
jecxz
out
push
jns
mov
rcr
xchg
out
add
jmp
int3
sbb
pop
pop
mov
push
je
in
sti
mov
adc
aad
lret
aad
mov
cmp
and
pushf
gs
es
les
add
loopne
dec
icebp
dec
add
test
test
adc
stos
xor
movl
mov
add
out
or
insb
add
lods
add
mov
dec
incl
mov
testl
fwait
mov
xor
stos
dec
sti
mov
sub
push
lods
cmp
in
xor
out
fists
xor
pop
push
test
push
add
mov
leave
mov
push
cwtl
sub
insb
cmp
insl
xor
xor
cs
mov
flds
mov
adc
mov
or
xlat
mov
lock
push
imul
clc
mov
mov
out
adc
add
sahf
inc
popa
testl
enter
sbb
pop
xor
sbb
or
adc
sbb
cs
sbb
mov
jp
arpl
sti
fistps
mov
popf
inc
jecxz
mov
xchg
pop
cli
loop
mov
xchg
sahf
popa
test
xchg
je
mov
mov
xor
cmpsl
lahf
jo
mov
in
cltd
xchg
cmp
fs
data16
xor
in
add
enter
adc
push
in
lods
jns
and
jmp
or
out
jmp
inc
push
push
repz
mov
cli
adc
popf
in
inc
cmp
mov
push
pop
dec
js
xor
xor
bound
mov
cmp
jg
ljmp
out
inc
or
mov
xchg
ret
pop
xor
mov
ljmp
daa
pop
push
cmp
inc
xor
pop
sbb
adc
cmp
insb
out
faddl
xchg
andb
push
adc
fsubrp
mov
aas
mov
pop
in
subb
jo
jle
scas
sbb
mov
xor
and
push
shll
inc
sub
lods
lcall
loopne
js
fistpl
shrl
leave
or
sti
lds
xchg
addr16
fsubrl
nop
inc
cmp
mov
fcomi
add
outsl
sbb
ds
lsl
and
adc
jmp
adcl
mov
mov
clc
pop
aad
push
lods
cs
adc
lods
enter
sub
rcrb
stc
daa
jg
and
into
insb
mov
in
jl
mov
dec
inc
ds
lret
cmp
test
pop
xchg
shll
sti
xor
inc
xor
test
jg
daa
lods
lods
pop
adc
iret
xor
add
add
daa
ja
leave
js
jbe
das
push
popa
pop
or
mov
or
lcall
pop
and
clc
les
mov
js
call
xchg
xchg
je
cmpsb
sub
pop
in
jo
lcall
pop
cld
jecxz
push
cmpsl
jne
and
push
cmp
pop
lods
test
idivl
lods
push
ljmp
jecxz
dec
movb
pop
push
mov
jb
cvtpi2ps
call
jle
inc
data16
pop
fs
daa
fcoms
jg
xor
into
aam
inc
lret
test
ds
mov
push
adc
mov
sub
push
add
mov
adc
sti
and
add
loop
stc
dec
pusha
out
adc
adc
pushf
out
or
push
jmp
mov
hlt
xchg
sbb
add
fs
jg
or
movsb
xchg
sbb
push
xchg
mov
icebp
sub
fildll
xor
icebp
imul
std
jp
addr16
add
movsl
mov
loopne
scas
add
test
jge
pop
in
pop
dec
dec
mov
jno
pop
cmp
mov
je
int3
sti
push
in
enter
loopne
loopne
mov
addr16
lods
xchg
xor
jb
push
ljmp
sub
sbb
sub
dec
mov
popf
jecxz
lods
mov
imul
jno
sarb
sbb
xchg
mov
inc
adc
enter
pusha
sbb
pop
scas
inc
fwait
neg
es
inc
and
loop
cltd
in
sbb
or
in
or
push
xor
mov
dec
into
ljmp
enter
cmpsl
xchg
mov
dec
jns
pop
imul
lcall
out
or
pushf
mov
pop
cwtl
mov
stos
bswap
and
xchg
xchg
repnz
mov
and
enter
xorb
shrb
xor
pop
cmc
cs
insl
mov
std
mov
push
outsl
inc
daa
mov
pushf
lods
xchg
xor
lret
mov
idiv
jb
sbb
loop
aam
sbb
stc
push
mov
inc
mov
cmp
sbb
out
mov
jle
adcl
cmc
mov
loopne
std
mov
jbe
mov
scas
jns
cmc
cmpsb
and
rcll
sbb
pop
or
rorl
xchg
pop
call
and
lahf
pop
sti
loope
aad
in
mov
pop
sub
addb
jg
and
inc
stc
shlb
adc
push
into
xchg
fwait
and
add
push
pop
adcb
xchg
and
sbb
push
push
jge
inc
int3
mov
ret
mov
xor
mov
stc
and
outsb
xchg
movsb
or
sub
and
out
int3
daa
sbbl
xchg
dec
fidivl
jnp
pushf
into
mov
xor
call
xchg
pop
aad
mov
lret
and
sbb
cmp
push
lahf
mov
xchg
mov
test
add
arpl
jge
loopne
mulb
repnz
mov
insb
lock
jmp
icebp
inc
mov
imul
ja
sbbl
or
mov
mov
xchg
gs
xchg
mov
push
mov
xchg
sub
jbe
les
xor
mov
daa
mov
hlt
hlt
push
mov
fsub
sbb
fwait
push
jb
loop
inc
jmp
mov
push
cmp
addr16
popa
add
mov
or
cmp
pop
and
adc
repz
stos
inc
or
or
push
popa
or
mov
sub
add
fnstenv
outsl
ljmp
push
xchg
mov
dec
or
push
in
sub
jb
jecxz
in
pusha
and
popf
inc
cwtl
jecxz
cmp
push
int3
push
sarb
scas
and
rcll
push
filds
pop
and
stc
fcompl
jo
jecxz
movsb
fadds
mov
and
fisttpll
mov
mov
add
mov
test
mov
dec
clc
hlt
stos
pop
push
insl
or
data16
adc
and
lahf
or
push
aas
test
lods
lahf
cmpsb
adc
cwtl
or
out
pop
sub
or
rcr
pop
jle
out
ret
add
dec
loop
pop
and
mov
add
aad
mov
jl
pop
repnz
adc
mov
push
mov
scas
mov
aam
pop
mov
lcall
xchg
int
jmp
jbe
movsb
imul
mov
mov
lcall
pop
pop
out
negb
jnp
add
jg
divl
dec
push
cli
lods
lock
and
adc
xor
out
and
mov
int3
call
cwtl
cmp
pusha
mov
xor
add
or
push
lods
cmp
mov
or
stc
inc
ljmp
pop
and
aaa
pop
push
lds
sarb
in
imul
loope
cmp
mov
rcrl
adc
mov
sbb
popf
test
fstpl
cmp
and
insb
inc
sbb
out
je
add
sbb
stc
repz
daa
mov
sub
cmpsb
stos
pop
mov
push
mov
test
stos
in
shlb
iret
aam
push
or
into
repnz
lret
sbbl
inc
cmp
bound
lahf
inc
push
xchg
pop
mov
xlat
testl
jge
fsubrs
add
addr16
ds
xchg
jbe
adc
shl
xchg
aaa
nop
mov
addr16
les
mov
lods
sub
cli
push
pop
and
das
lods
inc
mov
push
and
nop
in
dec
sub
outsl
jp
pop
popa
scas
xchg
mov
mov
mov
xchg
xor
mov
push
jae
add
test
pop
ss
fnsave
and
push
xor
dec
sti
aaa
les
cmp
sbb
daa
mov
stos
out
test
sbb
inc
insl
mov
push
lods
xchg
and
or
mov
mov
adc
and
mov
rcrb
sbb
jnp
or
dec
inc
shrl
repnz
ljmp
adc
filds
add
sub
sub
xchg
jno
mov
out
lea
xchg
not
xor
mov
enter
mov
loopne
add
xchg
dec
bound
lcall
enter
jg
or
mov
and
push
jge
and
xor
shr
and
int
jns
dec
xor
js
cmp
in
nop
pop
mov
aas
aas
and
lret
mov
dec
lds
fbstp
int
mov
iret
ret
int
sbb
push
sub
sbb
pop
mov
push
mov
pop
cmpsb
sbb
sub
adc
std
xchg
dec
scas
mov
fsubrl
lods
es
mov
shll
jl
data16
add
add
xchg
adc
jae
pop
imul
jo
mov
cmc
test
push
pop
stos
sub
shlb
ud2
add
jno
inc
les
sub
and
call
int3
push
mov
aas
jno
bnd
out
movsb
and
lahf
test
mov
push
and
packssdw
stos
repnz
js
or
pop
mov
mov
imul
or
pop
pop
mov
jb
and
jae
cld
adcb
xchg
mov
cmp
mov
and
rorl
clc
loopne
mov
push
and
add
lret
sub
negl
repnz
jbe
pop
fdivs
mov
movsl
enter
scas
xchg
sbb
dec
mov
mov
outsl
rorb
gs
clc
jle
mov
add
mov
push
loopne
movsb
hlt
push
ret
jle
ds
inc
shl
push
xorb
mov
xchg
push
cmpsl
rclb
loope
inc
cs
movl
mov
xchg
lcall
dec
in
gs
mov
pop
push
and
popa
or
pop
rcll
sahf
jo
xor
xor
rcll
bsr
ret
rclb
out
mov
cmpsl
dec
add
sbb
xchg
shll
pop
outsb
out
xor
push
fwait
int3
pop
mov
cs
pop
scas
xor
adc
jle
test
adc
add
nop
pop
mov
or
or
leave
xlat
aaa
sub
enter
or
cmp
popf
sbb
rcl
xchg
push
or
jle
fcomp
test
pop
sbb
mov
movsl
push
mov
lea
xor
pushl
movsb
outsb
aas
ret
jl
dec
and
lea
push
mov
and
pop
mov
insb
and
movsb
data16
imul
hlt
pop
adc
out
sbb
mov
push
rcll
sbbb
sub
adcl
cmc
ds
sub
hlt
xchg
pop
ret
mov
xor
lret
mov
xchg
mov
fcom
inc
pop
lods
cmc
jmp
call
iret
mov
mov
aas
mov
mov
gs
int3
cmp
jmp
dec
xchg
popa
negb
orl
mov
jns
sbb
sti
jg
pop
mov
popa
ficomps
lret
pop
sahf
inc
push
ds
lcall
sbb
xchg
rolb
dec
xor
lods
xchg
adc
add
mov
or
scas
movsl
or
adcl
cmp
cmp
xchg
in
nop
das
cltd
call
lds
cwtl
pop
add
call
test
mov
adc
enter
xchg
lret
insb
mov
notl
fisubl
cmp
sub
mov
sbb
lock
lods
or
sbbl
mov
mov
es
das
dec
fimull
lret
push
mov
lock
mov
ja
and
stc
pop
mov
adc
pop
mov
repnz
jno
andl
pop
jne
pop
mov
out
mov
lea
push
push
out
pop
lcall
lds
arpl
loope
xchg
push
outsl
js
stos
inc
enter
daa
mov
js
or
mov
mov
pop
dec
cmpsb
add
imul
ret
in
jbe
jbe
push
fsubs
fnstenv
inc
daa
hlt
lods
sub
push
pop
fsts
popa
jge
lods
les
adc
mov
push
mov
lds
cmp
nop
fdivl
dec
jae
arpl
stc
out
push
loope
mov
push
jb
pop
shr
negl
lret
cmpsb
sub
stc
mov
sbb
mov
mov
jl
repz
add
inc
sub
xlat
dec
pop
mov
push
mov
cmp
adc
lock
lret
rorl
fidivrs
mov
js
movsb
out
sub
in
xor
xchg
push
sbb
adc
pushf
jns
mov
test
inc
cwtl
stos
js
mov
loopne
aad
in
adc
dec
dec
lock
jecxz
cmpb
mov
push
sbb
es
jbe
pop
bound
pop
enter
aaa
lret
movb
dec
test
mov
push
xchg
aas
adc
cmp
mov
lea
push
add
jg
mov
cmp
lods
and
insl
sub
xor
lods
sub
scas
xchg
xor
xor
mov
or
es
mov
addr16
cmp
aam
lock
adc
or
ret
xlat
or
rcll
mov
das
les
sub
sarb
xchg
cmc
out
mov
jge
lret
sbb
mov
aad
mov
std
outsl
lods
push
int3
push
loopne
fsubrs
sbb
xor
mov
in
cltd
fsts
add
nop
add
gs
xor
scas
pop
jno
and
movsl
fsubs
faddl
and
jecxz
mov
test
pop
popf
sar
pop
sub
sbbb
daa
cmp
inc
jg
andb
adc
test
ret
ret
xchg
push
pusha
pushf
mov
cmp
inc
fstl
xchg
gs
jbe
jle
adc
mov
xchg
or
xor
xchg
sbb
call
dec
sub
int
and
sbb
lret
lods
icebp
pop
or
pop
stc
jg
aaa
fs
inc
cmp
imul
sub
call
cmp
mov
out
and
stc
fsubp
lcall
xor
mov
jl
push
outsl
mov
mov
mov
sub
jp
jge
push
cwtl
in
dec
dec
or
pop
repz
pusha
imul
mov
arpl
lret
push
stos
ss
out
sbb
cmc
or
or
sub
test
push
dec
add
adc
inc
xor
add
cmp
pusha
mov
xchg
adc
je
pop
in
punpckhdq
decl
xor
cmc
sbb
xchg
out
scas
jo
pop
sbb
imul
cwtl
xchg
hlt
mov
mov
xchg
stos
outsl
pop
cmp
data16
rol
fimuls
out
add
push
adc
xor
jecxz
jns
movsl
in
adc
mov
movsb
aaa
or
jmp
lea
and
in
pop
inc
or
and
xor
gs
lods
pusha
jge
lret
mov
scas
adc
or
ror
in
cltd
sarl
aam
cmpb
call
xchg
scas
sub
cld
sbb
fisubl
insl
pop
sarb
cld
ja
icebp
js
push
mov
sub
lahf
lret
sub
cld
sti
xchg
xlat
mov
xor
lea
fcmove
xchg
mov
ret
leave
test
xorb
ja
bound
mov
mov
cmpsl
jge
mov
dec
adc
iret
shll
outsb
jns
enter
add
leave
test
mov
xor
test
cltd
adc
es
rorl
add
fisttpll
mov
sub
push
dec
lods
add
inc
fwait
jns
jmp
xchg
xchg
in
dec
dec
and
lcall
and
mov
rcrb
sub
jb
dec
in
push
inc
mov
adc
aad
xchg
add
imul
imul
jg
stos
std
mov
test
sbbb
daa
ret
cmp
jmp
call
mov
mov
fists
cmp
xor
std
add
push
movsl
sbb
xor
rcrl
xchg
ficomps
out
mov
mov
icebp
sar
xchg
ret
jmp
mov
inc
addr16
addr16
xor
aad
imul
insb
ds
leave
cmp
or
inc
push
or
pop
fiadds
jbe
call
sub
inc
sbb
push
sbb
in
pop
outsl
xchg
test
imul
fdivs
xchg
shlb
dec
lcall
out
xor
hlt
jl
ret
mov
mov
or
push
test
cwtl
push
mov
loopne
xorl
sub
and
mov
mov
jae
cmpsb
fs
sbb
jmp
insl
push
mov
pop
inc
pop
add
stc
push
stos
add
scas
fsubs
out
and
lods
sbb
testl
adc
call
ds
xchg
sub
imul
sbb
out
push
mov
jp
jecxz
arpl
mov
pop
xchg
pushf
aaa
lock
cltd
mov
sub
mov
lret
out
scas
outsl
lds
dec
or
jb
fdivl
mov
pop
sbb
sub
aad
mov
jmp
ds
inc
in
jno
push
scas
test
clc
cmp
sahf
xchg
lds
add
jnp
sbb
fildll
xchg
and
cmc
sub
add
dec
shll
mov
jmp
sbb
fistpl
push
gs
add
cmp
push
inc
xor
lcall
inc
mov
lret
jae
repnz
outsl
push
mov
jae
fdiv
in
js
jmp
push
adc
mov
xchg
sarb
pushf
cld
sbb
push
add
mov
xchg
adc
pop
leave
aad
adc
rorl
fs
xorl
jle
fildll
add
dec
mov
dec
dec
fucomp
mov
pusha
sub
nopl
sbb
add
pushf
mov
rol
xchg
cmp
les
add
loop
and
sub
jns
xor
cmc
push
nop
xchg
cmp
mov
mov
jo
push
or
out
jp
repnz
mov
fsub
pop
dec
mov
jmp
inc
and
data16
test
clc
adcl
and
mov
push
les
int
xor
data16
mov
dec
es
test
cmp
sti
lds
xchg
mov
push
les
ret
popa
mov
mov
icebp
xor
cs
lret
jmp
lea
jbe
cmp
orb
call
jle
dec
repnz
xchg
or
inc
pop
mov
pop
mov
notl
popf
in
shll
ja
fildl
xchg
dec
adc
push
mov
in
data16
adc
lods
movsl
pushf
jno
mov
cwtl
ret
jns
mov
and
jbe
xchg
add
fstpt
gs
push
jnp
scas
fsubr
ret
pop
fnstsw
movsb
dec
les
mov
sub
or
push
mov
std
inc
in
dec
lcall
mov
dec
mov
fiadds
jae
sbb
adc
pop
or
cmp
neg
cmp
ja
mov
fstl
mov
aam
and
mov
test
adc
and
cmp
cmpl
out
dec
inc
and
aam
fwait
dec
aam
ja
sarl
jg
int3
leave
insl
enter
js
push
mov
int3
inc
mov
adcl
cmp
lret
cmp
jecxz
xchg
ret
mov
sub
or
fwait
out
add
lret
es
sbb
imull
out
push
jp
lahf
shll
push
cmp
mov
scas
or
mov
push
das
lods
mov
mov
lods
fidivrs
addps
pop
out
pushf
iret
dec
sahf
pop
in
jnp
stos
and
mov
dec
cmpsb
ja
mov
popa
xor
in
lahf
aad
mov
mov
pop
and
xchg
jno
ficoml
jmp
aam
mov
movsb
and
imul
aam
inc
cmpl
sbb
push
in
into
dec
sub
push
enter
inc
dec
shr
push
dec
out
cmpsl
inc
es
shl
negl
cmp
scas
icebp
imulb
jns
push
adc
out
stc
sub
out
inc
jne
ror
mov
outsb
push
mov
outsb
ljmp
xorl
or
xor
outsb
dec
jae
push
jne
xor
ret
pusha
xchg
xor
jmp
je
cmp
push
das
jbe
xor
clc
jmp
xor
ret
js
xor
insb
shrb
call
repz
repnz
out
in
ss
sub
xor
aas
pop
mov
mov
fwait
adc
xor
xchg
sahf
int
lret
cli
push
in
push
mov
mov
fucomp
cmp
sub
jo
add
xor
mov
fcomp
mov
fists
xchg
mov
pop
push
daa
scas
push
insb
lods
cmp
pop
adc
sbb
into
mov
dec
outsb
sbb
jecxz
jl
out
or
xlat
mov
sub
mov
cmp
loope
mov
push
mov
aam
imul
mov
xchg
ljmp
mov
jmp
into
or
push
test
movsl
lahf
mov
aas
push
jp
outsb
sbb
cmp
scas
les
mov
dec
shrl
jmp
cwtl
jg
insl
and
pop
outsl
addl
mov
outsb
sti
mov
icebp
push
ljmp
pushf
pop
cmp
leave
insl
add
cmp
mov
xlat
out
orb
pop
mov
fwait
push
sets
faddl
pushf
mov
test
or
cmc
std
shlb
lcall
cmp
xchg
xor
inc
clc
pop
jle
out
out
push
jne
mov
mov
adc
add
cmp
lret
outsl
or
sbb
sbb
imul
test
push
jmp
out
sbb
ljmp
push
and
sbb
sub
sub
loopne
cli
ret
pop
sahf
fs
dec
xchg
pop
pop
dec
xchg
iret
inc
xchg
addr16
sbb
inc
cs
into
fstpl
outsl
in
rorl
xor
xchg
out
dec
adc
jle
sbb
pop
cwtl
push
and
les
inc
pop
in
daa
jns
xlat
cmpsl
xor
pop
inc
clc
add
jae
in
repnz
push
pop
or
pop
xor
out
or
xchg
push
popf
fsubrs
enter
cmpsb
gs
popa
pop
jmp
in
cmp
and
sub
push
cmc
mov
cltd
fwait
int3
push
clc
cmp
clc
popf
jl
inc
aaa
mov
sbb
pcmpgtw
fldl
sub
mov
push
jecxz
inc
mov
insl
cmpsb
xor
mov
lcall
pushf
pop
or
test
or
ret
inc
inc
pop
sub
and
push
dec
push
rcll
dec
push
push
into
outsl
sub
adc
cmp
ret
xor
mov
mov
movsl
out
pop
sti
inc
jns,pn
out
cmp
mov
aaa
aam
dec
sbb
cld
inc
js
mov
mov
imul
jmp
aas
mov
insb
cltd
adc
aas
dec
mov
rcrb
sub
xor
int
pop
pusha
shl
sarb
cmp
jne
jge
jno
pop
leave
adc
add
cli
js
mov
xchg
dec
inc
fcompl
idivb
out
or
xchg
mov
repnz
mov
lcall
push
setnp
notl
xchg
push
xor
test
mov
mov
outsl
es
cs
lods
sbb
scas
test
stos
hlt
test
and
jle
cld
or
js
lods
pushf
std
fwait
ljmp
adc
xorb
ret
jg
outsb
movsb
rol
pop
xorl
js
inc
push
lea
jbe
push
sahf
sub
pop
inc
ret
mov
add
cmp
popa
sti
mov
in
jae
jnp
aad
inc
cmp
clc
out
jae
or
sti
aam
scas
adc
psllw
mov
xchg
mov
xchg
or
mov
adc
inc
insl
nop
xchg
test
cmp
pop
push
icebp
jle
dec
mov
sbb
stos
in
push
inc
lcall
fsubs
cmpsb
in
and
out
jnp
pop
movsb
xchg
sbb
xorl
dec
cli
mov
xchg
mov
test
mov
inc
stos
fsub
add
cmp
fidivrl
xor
movsl
lods
lret
or
mov
xorb
enter
negl
sub
call
lret
pop
aas
jbe
xchg
lret
inc
sbb
stos
mov
sbb
xchg
into
push
pop
adc
inc
popf
insl
lea
in
hlt
and
test
mov
rcl
pop
xor
xchg
push
hlt
jno
jnp
std
ljmp
pop
cld
push
xchg
sub
sub
test
xorb
fnstcw
loopne
clc
cmp
cli
adc
push
mov
je
dec
pop
inc
push
xor
scas
int
stos
sbb
cli
cltd
je
bound
mov
sbb
cmc
cmp
movsl
inc
xchg
jb
sub
cmpsl
or
jnp
dec
in
mov
jnp
dec
fldt
mov
ds
je
stos
bound
stos
enter
sub
jns
sub
int
or
mov
add
stos
push
xlat
mov
mov
mov
push
testb
adc
lea
push
mov
add
xchg
dec
add
sub
push
out
scas
dec
mov
movsl
mov
inc
adc
dec
pop
flds
push
pop
push
sbb
and
ret
jg
xor
scas
mov
sub
push
cli
jbe
pop
aas
insb
orl
mov
and
and
sub
xchg
adc
xchg
jns
inc
add
xchg
cmpsl
push
mov
aam
mov
aaa
sahf
or
enter
ss
inc
dec
jbe
sbb
imul
sbb
pop
lret
sub
fidivrs
out
add
mov
push
cltd
dec
inc
xchg
scas
ss
lahf
cmc
ffree
rclb
dec
xchg
pop
imul
sbb
ret
ret
ja
pop
push
mov
pushf
mov
push
sub
jp
mov
addr16
out
and
fwait
jnp
out
sbb
mov
adcb
add
sub
xor
insl
aam
loope
iret
pop
lods
insl
add
push
mov
xor
jb
shll
popf
mov
test
cwtl
in
mov
pop
test
bound
adc
and
pop
mov
test
xor
mov
movsb
lock
ljmp
sbb
jo
xchg
mov
mov
out
xchg
mov
clc
ja
push
xor
jo
sub
add
push
jo
bound
pop
in
push
jle
xchg
ss
inc
xchg
ficoms
incl
loop
fld
jg
mov
jae
jnp
add
inc
sub
std
std
fstl
out
sbb
mov
xorb
idivl
xorl
sbb
add
cmp
out
xchg
aad
out
mov
pop
int3
outsl
mov
insl
mov
std
hlt
into
les
xchg
daa
cmp
xchg
pop
add
popf
xor
iret
and
inc
or
sbb
movsb
cmp
loopne
pusha
cmpb
xchg
add
lcall
imul
add
inc
jae
dec
shll
ret
lea
out
outsb
shlb
jge
push
cmp
pop
xor
inc
fsubl
xor
cli
cmpsl
sub
inc
es
xchg
jae
mov
daa
mov
inc
cmp
cwtl
pop
push
xchg
pop
dec
popf
jp
ror
sub
inc
iret
xchg
or
push
jo
push
or
popf
call
adc
sbb
cmp
cmp
aam
add
push
add
jp
xor
mov
lds
lods
jb
or
out
lahf
add
daa
pop
push
mov
push
cmp
and
popa
adc
xor
sbb
out
and
lret
sbbb
mov
xchg
es
jle
inc
jo
pop
test
arpl
dec
pushf
push
aaa
inc
xor
dec
jge
mov
cli
jnp
filds
push
lret
xorb
and
jbe
cmp
xchg
aaa
or
inc
xor
std
mov
mov
int3
mov
pop
les
stos
sub
mov
addr16
pop
lret
imul
hlt
sbb
aaa
lcall
ret
outsb
mov
or
in
sahf
mov
les
mov
and
or
mov
popa
test
inc
xor
adc
je
inc
add
pusha
or
pushl
out
mov
jmp
jecxz,pt
aam
dec
jnp
dec
shrb
or
sahf
ljmp
pop
cmp
icebp
xlat
dec
popf
cmpsb
and
ja
sbb
xor
inc
aad
add
sub
dec
nop
lret
sub
pop
pop
gs
sbb
in
cld
iret
fwait
inc
adc
sbb
mov
ret
cmpsb
push
enter
mov
adc
addr16
mov
addr16
arpl
cmpsb
jno
and
stos
insl
sub
inc
mov
inc
xchg
loopne
pop
fstps
idivb
mov
sbb
jns
jo
jae
adc
sub
shll
and
outsb
sub
push
push
fdivr
arpl
and
add
push
add
xchg
adc
jg
shl
push
mov
clc
popa
adc
push
xchg
sbb
cmc
pusha
mov
sbb
push
and
mov
in
add
mov
xchg
popa
data16
add
ds
loopne
pop
push
push
js,pn
mov
mov
xor
sahf
mov
jl
xchg
push
mov
sarl
out
dec
fsts
mov
jl
ds
pop
add
lea
loope
adc
int
imul
movsb
jnp
dec
daa
push
sub
and
mov
inc
sbbb
call
xor
push
mov
div
fisubrs
decb
xor
pop
mov
push
cmpsb
sbb
scas
js
lret
mov
add
xor
cld
gs
mov
scas
cmp
inc
pop
rorl
outsb
pop
outsb
roll
adc
mov
pop
mov
jl
movsb
fwait
sbb
jg
in
xor
je
fcoml
stc
sub
bound
shrl
add
bound
mov
xor
mov
addr16
sub
mov
mov
mov
cli
cld
jne
call
mov
xchg
jns
mov
fstpl
ja
test
pop
xor
inc
cs
or
xor
cmp
jo
add
out
jns
ljmp
lock
das
into
fldt
pop
loop
test
mov
push
xor
xor
pusha
jns
pop
sub
jp
pop
or
addr16
push
imul
imul
and
mov
cmpsl
mov
out
xchg
shl
ret
stos
mov
repz
pop
shrl
mov
stos
icebp
cwtl
daa
inc
mov
inc
pop
jl
call
or
adc
mov
lret
leave
fbld
sub
or
xchg
push
fwait
aam
lahf
shlb
mov
jae
aad
mov
push
mov
jne
inc
fstl
xchg
or
inc
or
and
sti
inc
jg
dec
cli
ficomps
cmpl
leave
inc
pop
stos
iret
test
adc
mov
rcrl
or
inc
pop
pop
es
and
inc
sub
aad
dec
in
mov
cmpl
or
push
add
in
fscale
imul
lods
inc
mov
pop
outsl
push
mov
xchg
adc
call
mov
repz
not
xchg
jmp
ret
std
xor
std
rclb
filds
aaa
movsb
in
dec
xchg
push
sub
aad
mov
mov
add
add
loope
nop
cmp
fnstsw
or
or
in
jns
ret
push
sbbl
xchg
pushf
ror
out
aaa
cmp
fidivs
mov
and
xlat
in
dec
add
lcall
push
xor
inc
sar
hlt
in
mov
adc
ss
or
mov
pop
mov
stos
adc
fnstenv
add
xchg
loope
cmp
jg
mov
xorl
ss
ret
inc
mov
shll
or
daa
xchg
pop
cmp
adc
in
outsb
fs
cmpb
xor
mov
mov
add
push
cmp
adc
adc
cmpsl
push
jecxz
xchg
mov
mov
out
shlb
xor
gs
andb
loop
add
mov
es
jl
xchg
push
inc
mov
add
loope
dec
add
or
rorb
push
cmp
lods
cmpsl
orl
xchg
xchg
outsl
lret
add
int
cmp
in
xor
xchg
jmp
xchg
mov
pop
loopne
add
xchg
js
xlat
push
xor
test
test
jmp
mov
mov
and
outsl
hlt
test
iret
pop
leave
in
add
xor
add
adc
sub
and
repnz
fdivp
jmp
cld
and
sub
xor
divl
xchg
mov
and
mov
xchg
or
fcmovnbe
cmp
outsl
cwtl
popa
xchg
xchg
sbb
daa
iret
push
jno
int3
cmc
mov
push
cld
cmpsb
loope
add
mov
ljmp
jge
cli
add
stos
into
adc
in
ss
inc
ret
lcall
pop
je
aas
cmpsb
sub
into
shrl
sbb
sub
jp
adc
loope
in
lock
jne
sub
loope
scas
mov
adc
test
jbe
xchg
hlt
jl
cltd
mov
test
xchg
xor
insb
pusha
cltd
lcall
das
movsl
push
out
push
pop
jno
repnz
mov
out
push
scas
push
cmp
adc
and
xchg
xor
xor
or
testb
mov
aad
fldlg2
sbbb
and
int3
cmp
lds
pop
push
icebp
push
xlat
sbb
stc
cld
cmpsl
test
cld
into
test
inc
adc
mov
lcall
in
and
loop
push
imul
insl
ret
lock
sub
or
loop
sbb
fidivl
adcb
sbb
cmc
pop
test
jge
xor
test
iret
fucomip
push
inc
push
scas
mov
loopne
add
and
bnd
jo
inc
mov
pop
sbb
and
or
fildl
pop
sbb
test
jmp
push
add
ficoms
cmpsl
dec
pop
mul
xor
lret
add
dec
mov
gs
rcrb
shlb
sbbl
mov
push
mov
cs
push
jecxz
ret
xor
adc
or
mov
dec
add
fcomps
daa
cli
lahf
jns
push
mov
xchg
inc
scas
popf
and
sbb
xor
mov
inc
movsb
popf
add
out
mov
addb
out
mov
imul
dec
rcr
test
nop
arpl
test
inc
mov
jle
cmp
fisttpll
pushf
lds
mov
mov
and
inc
rol
shll
cli
xlat
mov
pop
sub
push
loopne
xchg
dec
xchg
ljmp
test
jge
ds
ljmp
scas
push
mov
mov
in
icebp
push
lahf
adc
sub
int
into
push
push
xchg
jl
outsl
enter
or
jge
cmp
lods
loopne
mov
mov
push
xchg
jno
jge
mov
sub
in
jmp
xchg
push
scas
test
bound
mov
push
sbb
outsb
movsl
pop
cmp
adcl
jne
jg
xchg
xchg
loope
mov
xor
rorb
cmp
mov
test
inc
add
xor
jne
xchg
imul
cmp
mov
enter
adc
jp
jns
test
sbb
test
cmpsl
in
lahf
xchg
jl
xlat
jnp
inc
scas
inc
test
sahf
jae
fcmovne
subb
icebp
test
pop
jl
sub
icebp
imul
sbb
add
in
bound
adc
out
mov
call
cmp
push
and
xchg
sub
repnz
fidivrs
imul
xchg
stos
loope
add
iret
jae
mov
add
loopne
sub
in
imul
mov
mov
xchg
verw
inc
jbe
sub
je
add
hlt
cmp
pop
lahf
mov
mov
mov
out
xorl
mov
sbb
or
outsb
pop
rcrl
mov
dec
pop
mov
sbb
insl
sahf
fs
fimull
jno
fwait
cli
push
test
scas
xchg
loop
and
push
xor
dec
lret
lods
fcomps
sti
xlat
imul
scas
mov
out
mov
ljmp
enter
fwait
pop
pop
mov
scas
and
pop
pop
mov
push
out
or
or
mov
mov
fwait
ljmp
out
lahf
add
int3
fistpl
and
pop
cmpsb
aam
or
loop
or
or
or
cmp
cmp
loopew
mov
dec
inc
roll
test
inc
or
xor
xor
push
jnp
push
ss
stc
cmc
xchg
inc
lds
bound
mov
loope
mov
cmp
mov
or
mov
mov
xor
loope,pn
je
in
jmp
scas
scas
add
add
or
lahf
and
mov
or
mov
shll
mov
lods
repnz
pop
nop
in
imul
xor
leave
cmp
mov
pop
mov
cltd
in
lcall
sbb
push
fsubl
mulb
ljmp
mov
dec
jae
pop
ret
into
or
in
pop
nop
fs
cmpsb
cmp
add
mov
adc
jecxz
outsb
scas
in
jno
or
in
mov
lret
stos
xchg
sbb
fldl
outsb
xor
clc
and
jo
cmp
xchg
mov
xchg
jns
mov
jbe
cmp
push
nop
aas
aam
data16
sbb
xor
push
mov
fcmovu
push
insl
in
inc
daa
gs
jp
adc
ja
lods
loope
lahf
loopne
idiv
ret
movsl
or
mov
jle
iret
mov
or
push
mov
pop
jg
stos
lcall
scas
adcb
cli
cli
add
sub
adc
bound
mov
push
push
lret
mov
stc
sub
sub
inc
test
cmp
notb
mov
push
dec
sbb
leave
cs
inc
cmp
in
out
or
lds
cmpsb
mov
mov
lret
sub
loopne
mov
addb
mov
das
mov
mov
xchg
mov
jo
loop
jge
jno
xchg
testl
movsl
ret
icebp
mov
movsl
cwtl
iret
inc
lods
rcpps
adc
pop
xchg
fwait
push
repz
fwait
jno
lret
mov
sub
cmp
addr16
fiadds
jg
stos
mov
enter
jecxz
sbb
xchg
add
les
mov
adc
scas
xchg
sub
add
sbb
add
lahf
push
mov
xchg
data16
or
pop
mov
lret
sub
xor
test
daa
push
sbb
mov
push
gs
dec
sub
jle
stos
and
test
ret
cmp
cwtl
add
mov
loop
push
xchg
pop
xor
call
popa
cmpsl
push
jecxz
mov
xor
aad
mov
in
imul
fwait
iret
pop
addr16
das
nop
and
test
dec
dec
push
int
or
lret
mov
adc
xor
pusha
mov
rcl
adc
vpcomb
dec
cmp
lods
push
lea
insb
mov
paddusw
mov
mov
fs
sahf
sbb
jp
xchg
adc
mov
jle
mov
adc
aaa
add
orb
call
ret
add
push
into
mov
push
mov
jne
das
xchg
icebp
jg
aad
add
xorl
inc
sub
imul
mov
aaa
add
jno
push
lret
jns
add
jecxz
and
xchg
adc
pop
pop
add
imul
lcall
adcl
test
pop
dec
xchg
aas
jge
pop
sti
xlat
scas
ljmp
scas
add
cmp
pop
iret
fistps
out
mov
jnp
push
cmpb
cwtl
cmpsl
popa
roll
jne
cli
ror
lea
xor
push
xor
aad
cmp
adc
stos
pop
xor
outsb
sbb
jns
ftst
cwtl
jb
mov
movsl
adc
pop
pop
and
hlt
adc
and
dec
outsl
int
jl
xchg
adcl
dec
and
mov
or
mov
pop
inc
popf
mov
or
mov
popa
push
lock
leave
pop
and
arpl
stos
or
push
repnz
flds
jg
jnp
mov
sbb
jg
enter
enter
add
or
in
pusha
sti
jbe
cmpsb
jns
pop
in
or
pop
mov
repnz
int
push
adc
mov
xor
into
ja
out
and
orb
data16
push
insl
or
mov
and
mov
mov
sti
add
lret
pushf
push
jge
mov
push
lds
mov
mov
mov
fnstenv
test
lock
cld
pop
outsl
inc
pop
push
mov
outsl
insl
out
sbb
add
aad
cmpsb
enter
pop
xchg
xor
jb
inc
iret
or
jns
rorl
aam
gs
jno
orl
ret
aas
mov
add
scas
int3
and
es
popf
out
out
pop
jo
cld
sbb
dec
push
mov
or
add
lods
mov
jmp
or
gs
sbb
lock
cmpsb
xchg
movsb
inc
inc
fdivs
dec
add
cmc
int
sbb
sbb
and
arpl
or
stos
push
lea
jo
sbb
fistps
repz
mov
adc
stos
xor
out
jnp
rorb
sub
fsts
test
push
test
xchg
push
popf
push
stos
in
in
inc
test
dec
sbb
inc
mov
cmc
sbb
adc
rorb
fnstenv
add
adc
js
adc
and
in
gs
pusha
sbb
xor
xchg
mov
clc
lods
push
stos
mov
rcrl
xor
jns
leave
lcall
outsl
in
negl
jne
mov
cmpl
rcll
dec
pushf
mov
repz
jl
adc
lock
clc
xchg
push
pop
xor
addb
push
pop
in
ret
fadds
inc
cld
cmp
jo
push
dec
pop
test
xchg
pop
idivl
je
push
icebp
mov
lock
push
mov
loopne
jb
or
lea
movsb
xor
sub
inc
cwtl
xchg
and
hlt
and
je
sbb
in
push
inc
dec
jb
push
pop
dec
sbb
bound
and
test
ds
loopne
mov
dec
mov
push
sub
jmp
ds
test
test
pop
mov
addr16
sbb
test
insb
popf
aaa
mov
pop
add
jle
cld
sar
jb
lret
je
jo
int
insb
lock
xlat
cmp
aaa
jbe
lock
cld
mov
outsb
jns
ja
jmp
aas
mov
cmp
std
clc
movsl
cmp
or
cltd
inc
rcrb
xlat
sbb
mov
inc
push
lock
push
push
cmp
stos
test
cmp
fcoms
sub
add
or
cli
scas
push
adc
mov
add
in
gs
mov
mov
fdivrl
dec
mov
js
mov
ja
sub
dec
and
fdivs
jge
pop
inc
xchg
callw
push
test
lcall
loopne
mov
fdivrs
mov
jge
mov
in
jle
int
jo
pop
lock
mov
push
scas
jl
inc
xchg
fsubrs
ds
mov
divl
xor
dec
push
adc
outsb
cmp
jge
push
mov
cmpsl
fdivl
mov
imul
enter
pushf
mov
push
cmc
push
mov
movsl
pop
push
pop
lret
scas
push
or
push
rorb
adc
test
clc
mov
leave
ss
repz
xchg
mov
out
xchg
jp
jle
or
inc
aaa
add
insb
das
test
pop
or
pop
jle
dec
xor
pop
out
shrb
mov
jb
mov
test
dec
inc
push
xchg
mov
lods
pop
push
sbb
xor
pusha
mov
or
sub
or
repz
jbe
loope
xlat
dec
addr16
cwtl
or
adc
fldl
fisttps
push
inc
jae
add
fld
jno
mov
packsswb
pop
sahf
sub
fcompl
lcall
mov
mov
dec
pushf
pushf
test
outsl
je
in
sub
adc
jl
ret
pusha
pop
andb
xchg
sub
fs
lcall
rcl
in
add
popa
imul
loopne
scas
imul
xchg
sahf
fsts
push
cmc
in
or
dec
stc
test
push
outsb
sbb
clc
lret
daa
inc
lahf
xor
aad
add
add
cmovle
adc
enter
sbbl
dec
out
cmp
jmp
movsl
je
xlat
fdivp
sti
mov
ret
fdivrl
fcom
pop
jbe
test
sub
inc
pop
sub
push
sbb
lods
das
lea
fcmove
fs
aaa
cmpl
decb
aaa
cmp
inc
je
sti
adc
and
jle
fs
mov
js
pop
jmp
loopne
cli
outsl
je
popa
push
aaa
cmc
fstpl
mov
cmp
ret
repz
fdivrs
jns
pop
push
lret
imul
or
mov
aaa
jae
cs
mov
mov
cmpsb
jmp
mov
popf
mov
into
mov
sbb
std
sub
out
or
xor
fwait
icebp
and
out
lods
hlt
rorl
xchg
and
pop
push
add
imul
mov
popa
test
inc
xchg
inc
jle
fsubrp
inc
std
movsl
sub
sub
lcall
mov
ret
into
out
daa
adc
cmp
test
clc
push
clc
int3
push
mov
outsl
inc
mov
daa
inc
jp
mov
insl
inc
or
jmp
aad
bound
inc
xor
xchg
and
lds
jge
ljmp
and
cmp
mov
ret
loope
imul
mov
mov
pop
mov
aaa
popa
movsl
jl
leave
aaa
shrb
sub
xchg
mov
jns
jp
push
dec
jne
lret
mov
xchg
in
imul
lods
add
mov
aad
mov
pop
int3
add
adc
fs
pop
xchg
pop
movsl
gs
pop
or
mov
jecxz
adcl
sub
dec
test
rclb
and
lods
mov
jg
xlat
cmp
xor
mov
pushf
rcrl
sarb
mov
lods
dec
mov
cmpsb
mov
sbb
or
in
gs
fwait
pop
out
out
mov
push
dec
jmp
cs
int
xchg
movsb
sbbl
adc
rorb
lret
pop
cmc
pop
xor
add
jmp
dec
bound
aaa
adc
xchg
addl
mov
movsl
jno
fldenv
int3
cmc
std
aaa
test
test
sbbl
pop
cmpsb
out
cmpsl
mov
mov
xchg
inc
mov
mov
xchg
mov
cmc
iret
fbstp
stos
mov
sti
cmc
pop
outsb
imul
iret
jnp
popa
cld
jecxz
xor
bound
inc
cmp
sub
mov
enter
push
lret
imul
mov
sarb
push
in
es
adc
pop
pop
or
int
lahf
imull
sbb
mov
into
ficompl
int3
sub
dec
leave
inc
hlt
xchg
mov
call
sarl
fldt
loop
push
je
scas
mov
mov
xchg
and
mov
das
in
or
mov
in
mov
dec
stos
mov
sub
and
mov
inc
test
pop
out
fiaddl
mov
pop
mov
cmp
cld
inc
jb
push
xchg
or
sbb
and
mov
clc
mov
xchg
mov
cmc
xor
inc
idivb
lret
pop
mov
and
and
inc
push
cmp
test
enter
sub
lods
adc
xchg
pop
int
ja
xchg
jg
cmpsl
cmc
xchg
add
aad
xchg
jp
jns
shll
test
addr16
in
xor
xor
sub
scas
in
inc
inc
lods
rcr
pop
popf
stc
test
sub
je
add
out
pop
jae
and
dec
clc
xorl
lea
mov
fdivl
dec
xor
insb
popa
xchg
sbb
fdivl
stos
jb
insl
xchg
out
xchg
jecxz
stos
jle
hlt
fldt
cld
sti
lcall
sbb
out
jecxz
mov
jae
dec
lds
mov
mov
test
cmp
into
xchg
nop
sub
jle
add
push
mov
jno
jns
pop
movb
push
imul
xorb
cmpsl
mov
ret
fdivp
arpl
test
jmp
sbb
xchg
mov
imul
xchg
das
and
jmp
mov
jae
fsubrl
mov
insl
repnz
aad
stc
mov
push
sub
mov
jo
xchg
jge
xor
data16
and
rclb
push
aam
fwait
into
mov
pop
out
jp
int3
sbb
jmp
aam
les
jns
xor
xchg
out
adcb
and
je
lods
mov
jno
fcomp
sub
daa
add
movlps
in
mov
pop
xchg
aam
sub
imul
inc
xor
mov
filds
mov
std
adc
dec
je
data16
int
mov
into
in
aad
and
movsl
pop
adc
test
rcrb
test
neg
and
ds
sbb
pop
sub
add
fdivs
jmp
in
dec
xchg
repz
out
test
cmc
std
cli
push
je
pop
aad
sub
cld
mov
std
je
or
repnz
ror
jmp
cmpsb
or
inc
lock
and
cltd
cmp
jno
lret
clc
in
leave
int
xchg
neg
out
mov
fcomp
xchg
or
icebp
in
movsb
loope
adc
fiadds
inc
pop
fwait
jg
pop
mov
sub
lods
push
into
pop
cs
sti
mov
ficoml
cwtl
lds
adc
mov
in
mov
shlb
pop
adc
cmc
sahf
jns
mov
imul
lock
adc
mov
jae
pop
cmpsb
pusha
or
aas
sbb
adc
cmp
dec
paddq
imul
xlat
or
cmp
movsl
aad
addr16
shlb
mov
jns
test
lds
add
mov
inc
shlb
imul
inc
insl
sub
sbbl
dec
adc
mov
inc
sub
pushf
cmp
fmuls
push
cld
fldenv
in
cs
adc
pop
and
jle
xchg
sub
addl
xchg
mov
mov
mov
sti
addb
adc
lods
sbb
sbb
dec
adc
fdivs
adcb
cmp
dec
lea
xor
mov
jge
jl
cltd
xchg
push
dec
sbb
mov
cwtl
inc
scas
dec
andl
pop
fcmovnu
aam
imul
les
stc
cmp
pop
lods
dec
scas
mov
jns
xorl
xchg
mov
stc
pop
pop
sar
pop
xchg
xor
cs
dec
inc
lods
or
mov
mov
jb
pop
and
pop
dec
inc
in
or
movsb
test
icebp
or
mov
jecxz
jnp
imul
cmpsb
jnp
dec
in
pop
stos
rcrb
mov
out
mov
sti
in
sub
nop
lahf
ja
sbb
jne
rcl
sbb
push
out
mov
fwait
pop
scas
pop
into
jmp
stos
into
sbb
pop
aad
inc
add
clc
iret
xchg
or
ja
ret
cltd
mov
dec
dec
lahf
cld
and
dec
aas
pop
xchg
les
pop
movsb
das
stos
mov
inc
decl
jb
fcoml
sbb
loopne
fstpt
jmp
and
repz
sub
xchg
in
and
out
sub
fnstsw
sub
pop
rolb
cmp
test
shrb
dec
aad
stos
cmc
pop
rcll
push
push
sub
push
push
cmpsl
and
flds
adc
fnsave
shll
ss
ljmp
lea
in
sub
ffree
movsl
rcll
dec
iret
mov
or
ficompl
daa
xchg
roll
sub
or
lock
jae
test
jg
shlb
outsl
and
cwtl
pop
and
xchg
cmp
mov
pusha
mov
ret
xor
sub
popa
movsb
lcall
push
cmpl
outsl
add
jo
cmc
test
jno
push
mov
loope
mov
push
dec
mov
or
pusha
xorb
inc
lahf
andb
sub
dec
testl
loop
sarl
out
pop
mov
inc
adc
xchg
mov
fcom
cli
stc
clc
adc
jae
lahf
ja
pop
pop
mov
sub
int3
sbb
sti
jg
or
int
add
out
dec
sbb
cwtl
cwtl
stc
imul
cmp
and
mov
insl
cmp
out
cmc
inc
ficoml
stos
or
dec
pop
and
int
arpl
mov
inc
stos
lret
adc
icebp
fdivrl
add
xorl
xchg
inc
xorb
or
mov
shrb
sub
xchg
fbstp
cmpb
int
fsubs
dec
mov
rorl
es
js
pop
popa
adc
int
fimuls
sbb
xchg
pop
pop
add
sti
subb
mov
cmpsb
and
or
mov
outsb
addl
fsubrp
mov
fwait
inc
inc
jl
insl
lea
adc
xchg
shrb
dec
sahf
cmp
push
fcoml
sbb
pushf
popf
jmp
movsl
pop
mov
sbb
fcomi
ret
loope
ffree
pop
or
lret
sarb
imul
int3
add
lahf
insb
in
sbb
mov
jl
mov
shrd
mov
iret
lahf
lahf
icebp
xchg
ds
loope
inc
mov
add
daa
mov
cmpsl
mov
aas
mov
jg
push
lret
sahf
xor
pop
out
mov
adc
and
jle,pn
xor
in
sti
repz
sub
mulb
into
dec
ret
cmpl
cmp
arpl
lahf
popa
or
aaa
cmp
movsb
dec
mov
mov
lds
cmp
mov
adc
leave
sbb
cld
dec
loopne
xorl
push
jnp
pop
in
std
dec
jge
call
jle
inc
mov
sarl
mov
jp
mov
in
mov
sbb
push
in
mov
lahf
movsl
adc
sbb
in
ja
scas
popf
push
sub
jmp
jnp
popl
jb
std
jge
scas
lock
movsb
lcall
push
inc
or
and
fsub
out
cmp
outsl
jo
pop
fbld
mov
mov
jmp
fistpll
push
std
in
into
movsl
jg
sub
scas
xor
mov
lret
jnp
add
arpl
outsb
jp
push
stos
jns
push
mov
cmc
cld
xor
jmp
cmp
pop
scas
add
mov
sub
sbb
cmp
ja
xchg
cmp
sub
mov
jecxz
push
dec
pop
xlat
cwtl
fisttpll
adc
mov
adc
jne
sahf
and
mov
negb
and
rcll
das
sub
jg
mov
imul
mov
mov
je
xchg
pushf
outsb
addr16
pop
adc
jae
add
inc
fidivs
or
cwtl
sbb
sti
bound
or
outsl
pop
stc
repz
jg
cli
pop
popf
push
test
dec
imul
loope
int
add
ret
mov
mov
pop
mov
aaa
loope
outsb
int
icebp
fwait
or
in
sbb
jbe
cwtl
test
ljmp
mov
and
xchg
adcl
or
lret
or
mov
cwtl
test
leave
jge
mov
aas
mov
mov
outsb
pop
incl
xlat
mov
push
loope
inc
jl
das
add
jmp
into
stc
ds
lret
cmpsb
sub
lea
pushf
push
mov
xor
dec
adcb
sbb
mov
mov
cmp
pop
cmc
and
inc
out
std
subl
je
add
sbb
daa
xchg
sub
or
jmp
dec
sbb
mov
shrl
inc
nop
stc
ja
xchg
jp
or
roll
cmp
ret
jae
dec
push
mov
pop
push
sbb
mov
xorb
push
incb
cmc
inc
xor
xchg
mov
shll
sub
lods
lds
cmp
cmp
push
sbb
enter
mov
int
push
testb
cmp
cmp
fcmovnbe
push
xchg
sub
mov
cld
fdivp
idivb
cmp
mov
and
out
test
mov
pop
push
adc
jb
sub
sbb
cmpsl
ret
loope
xor
sahf
jne
dec
mov
popa
or
pop
repnz
js
add
mov
js
jmp
push
cmp
popf
jne
cmpb
mov
cmp
popf
mov
pop
adc
adc
fwait
jmp
out
popf
dec
movsb
xor
cld
mov
cli
fs
and
inc
add
inc
ret
mov
xchg
and
mov
xor
dec
movsl
adc
mov
mov
fucomi
mov
lods
mov
lahf
lods
nop
inc
jo
nop
mov
test
mov
in
pop
std
pop
addl
inc
xchg
scas
jg
call
push
ss
jl
enter
enter
xor
dec
gs
push
rclb
mov
push
or
mov
pushf
bound
movsb
or
insl
jns
mov
push
outsb
mov
mov
xchg
xor
cmc
pop
shlb
aam
xchg
shrb
dec
mov
out
ficoml
mov
in
jp
insl
adc
xorl
mov
push
pop
inc
add
lret
leave
pop
pushf
cwtl
pxor
mov
push
jno
dec
sub
es
xchg
pop
add
aad
lods
movsl
dec
adc
sbb
mov
xchg
adc
push
pop
or
in
sub
and
outsb
mov
jb
sahf
xchg
dec
xlat
into
mov
lds
ss
sub
ds
mov
inc
adc
cmp
lock
int
mov
pusha
mov
fwait
add
out
dec
idivb
pop
cmpsb
xchg
fsubrs
xchg
pop
push
stos
ja
aas
imulb
mov
in
das
adc
mov
mov
cmpsb
mov
in
pop
jae
out
popa
gs
jmp
mov
sbb
not
adc
mov
cwtl
sbb
cmp
xchg
inc
adc
orl
sub
pop
sub
mov
pop
mov
pop
aaa
push
mov
lea
in
mov
das
and
movsl
imul
stos
bound
jb
add
mov
mov
jb
addr16
pop
insl
stc
lds
out
lods
fwait
and
addb
dec
je
pushf
mov
mov
jbe
mov
test
and
scas
push
insl
dec
mov
jns
adc
fiaddl
sub
cs
xchg
jle
std
or
push
lcall
ret
imul
pop
dec
std
lods
mov
jne
imul
adc
xchg
sbb
jo
jg
jns,pt
enter
jl
fcomip
aas
xchg
sub
rolb
in
jo
cmpsb
dec
loop
daa
stos
push
cmp
pop
mov
mov
pop
xchg
or
lcall
icebp
test
sbb
jle
and
cmp
sbb
aam
cmp
movsl
and
mov
push
adc
pop
or
xor
xchg
jmp
fwait
pop
les
cmp
pusha
dec
inc
cmp
xor
inc
push
out
sti
call
pop
pushf
int
lret
addr16
pop
and
mov
movb
jb
dec
push
cs
mov
jle
jg
cmp
mov
shll
sahf
fdivl
xor
rcrl
mov
int3
fsubs
dec
pop
js
idivl
test
dec
sbb
movsb
pop
outsl
mov
insb
shrb
shll
dec
pop
push
jne
pop
std
in
fdivs
jle
inc
xchg
mov
push
movzbl
xchg
xchg
hlt
dec
and
popa
cli
lods
aaa
push
nop
call
mov
sub
mov
mov
pop
cmp
js
push
inc
sbb
stc
inc
xchg
mov
lds
dec
inc
cmp
call
and
aas
xchg
and
cmp
or
mov
pop
sub
add
mov
or
shrl
jge
push
mov
adc
push
and
mov
and
adc
pop
jnp
mov
or
push
push
in
notb
push
popa
shrl
fnstcw
mov
out
shlb
lret
push
enter
mov
addr16
mov
in
jnp
lods
lea
or
lcall
aas
imul
aaa
xor
push
mov
xlat
leave
mov
fbstp
pop
ljmp
adc
sub
popf
js
mov
push
andb
xor
dec
mov
popa
in
into
popf
pushf
out
ret
inc
xorl
pop
pop
fsub
pop
push
sub
push
pop
out
in
test
std
out
mov
rclb
or
mov
nop
mov
fiaddl
mov
lock
cs
fadds
jl
cmp
sbb
push
iret
cs
dec
adc
fwait
dec
ljmp
mov
imul
icebp
mov
in
out
inc
xchg
mov
js
sub
pop
xor
shrb
out
lods
in
or
mov
mov
inc
movsl
imul
bound
rcr
push
and
rcll
lcall
or
test
mov
test
push
loopne
shll
cmp
dec
lds
int3
sub
test
mov
sahf
and
daa
jns
aas
mov
adc
leave
repnz
dec
rolb
mov
call
ja
test
lods
cs
adc
sahf
push
mov
insl
je
sbb
into
dec
cmpsl
and
xorl
nop
push
mov
xor
pop
jo
mov
in
cmp
cmc
sbb
inc
stc
sub
adc
fcmovbe
or
stc
ret
pop
in
push
mulw
clc
sub
mov
lret
pop
jbe
cmp
add
dec
arpl
js
jnp
pop
inc
push
jle
jecxz
test
fdivrp
jecxz
adc
mov
inc
and
in
ficomps
mov
sarl
push
push
insl
test
mov
loop
sub
mov
das
xor
ret
pop
xor
add
or
fs
adc
mov
push
xchg
dec
in
xchg
push
push
jno
rclb
xchg
push
push
es
icebp
cwtl
jb
push
outsb
mov
data16
testb
les
jmp
nop
or
test
mov
in
or
fnstenv
mov
lea
jmp
addl
pushw
push
cmp
mov
testb
sub
cmp
pushf
hlt
lcall
jl
test
sub
cmp
rcr
lret
pop
mov
push
fwait
and
lea
inc
mov
push
shrb
mov
cltd
test
push
jecxz
aas
dec
cmpl
pop
adc
das
xor
enter
sub
xchg
xor
dec
fistpl
addb
cmp
notb
divb
pop
sti
fdivr
push
sub
movsb
sbb
stc
or
lcall
lret
dec
into
xor
jne
mov
fisttpll
adc
in
clc
out
ljmp
lahf
push
mov
jo
std
ret
pop
mov
mov
jmp
cmp
jo
mov
repnz
mov
adc
xlat
xor
cmc
and
sbb
sub
push
addr16
xor
in
jo
addl
add
mov
pop
xchg
xchg
loope
jb
adc
mov
les
cmp
push
mov
incb
ret
push
std
cwtl
dec
or
fwait
mov
sub
and
and
imul
mov
fadd
popa
jge
fisubrs
sti
outsl
insl
push
pushf
cmp
movsl
fdiv
pusha
xor
cmp
cmp
stos
xor
jbe
sbbl
adc
bnd
push
mov
mov
mov
repnz
fldenv
imul
pop
addr16
rcpps
mov
or
xchg
fmull
mov
call
cmc
int
xorb
xor
jbe
faddl
cmp
xchg
pop
fs
test
out
sbb
sar
loope
pop
inc
mov
ret
cwtl
mov
mov
aaa
cmp
sub
into
mov
cli
cs
gs
push
loop
into
sbb
ds
push
jns
lcall
pop
jecxz
daa
pop
scas
push
mov
jbe
cs
addr16
iret
js
jge
dec
sub
push
fdiv
orl
jp
arpl
dec
lods
jne
in
or
mov
add
out
sbb
cltd
leave
pop
mov
jo
jb
mov
push
arpl
jmp
cmpsb
test
adc
rolb
out
mov
jge
lahf
hlt
jne
repz
cli
fdivs
ret
pop
push
cmp
sub
ss
push
xor
pop
popf
mov
jbe
xlat
sub
pop
jb
dec
fs
and
mov
es
cs
sub
and
push
and
mov
hlt
pop
mov
jp
sbb
jae
or
push
or
pop
push
xchg
add
push
sub
ret
mov
cmc
xchg
rdtsc
mov
pop
shrl
or
ret
pop
int
lahf
test
jl
mov
inc
mov
dec
cmp
out
fstpl
out
push
insb
cmp
mov
aas
pop
in
cld
rcl
lcall
out
imul
test
popa
jmp
hlt
sahf
bound
mov
inc
adc
add
mov
inc
adc
icebp
or
dec
loopne
rclb
mov
fisttps
scas
jg
ja
xchg
cmp
cmp
hlt
test
push
sbb
cmp
test
or
int
clc
sub
repz
shrb
pop
xchg
cmp
push
loope
sbb
sti
loopne
adc
aas
xchg
insb
xchg
out
mov
inc
fistpl
in
xchg
inc
stc
sub
dec
mov
outsl
sbb
popf
inc
dec
iret
dec
and
mov
cltd
loope
pop
fstpt
les
mov
outsl
insb
or
mov
dec
jns
mov
xor
mov
mov
mov
dec
dec
in
ret
dec
iret
ret
and
hlt
or
mov
rorl
les
test
fwait
xchg
in
loop
xchg
scas
cmp
pusha
jb
sbb
pop
mov
jge
xchg
data16
jb
dec
shlb
push
add
subb
sahf
mov
lods
cmpsl
jno
jg
cmpsl
cmp
mov
xchg
loopne
lret
divb
xor
dec
sub
icebp
cwtl
addr16
pop
test
pop
pop
aad
dec
in
mov
jo
repz
mov
cmp
jbe
or
test
repnz
inc
ret
notb
in
bound
mov
out
pop
clc
stos
sub
or
xchg
push
pop
jns
or
dec
push
xchg
fwait
icebp
mov
aad
addb
xchg
test
mov
es
and
andl
pusha
test
fsubl
in
aas
pop
mov
lcall
xlat
mov
or
push
jmp
pop
jb
pop
scas
stos
dec
jno
fsubrl
xlat
sub
pop
add
mov
mov
or
inc
xchg
aam
das
inc
and
lds
jo
js
inc
cmpsl
pushf
mov
mov
pop
test
jbe
mov
inc
sub
ds
add
out
xlat
popf
sahf
xchg
cwtl
dec
ljmp
cmpsb
cmp
pop
mov
push
jae
dec
scas
es
repz
pop
cmp
dec
add
xchg
push
out
fidivl
pop
imul
push
cmp
adc
lds
inc
popf
adc
add
stos
inc
ret
pop
cmp
mov
jo
pusha
xchg
jns
xchg
mov
jbe
mov
mov
xchg
lock
sbb
dec
mov
ja
sub
sub
out
std
sub
push
lds
aas
repnz
add
mov
pop
pop
lds
into
push
fmull
sbb
cmp
int3
mov
sub
push
fucom
xor
sbb
inc
inc
hlt
insb
and
push
mov
jnp
ja
fsubr
enter
arpl
fcom
push
cli
or
das
insl
lret
pop
insb
fdivs
jl
out
lcall
int3
pop
mov
daa
jae
das
ror
sbb
push
les
push
pop
pop
shrl
or
in
add
push
cmpsb
jg
fwait
daa
cltd
xlat
fmuls
xchg
sbb
cmpsb
add
adc
xchg
scas
inc
mov
jmp
in
inc
cmp
dec
movsl
or
pop
lcall
movsb
mov
test
pop
push
pop
dec
push
sbb
sbb
push
or
and
sbb
repnz
jecxz
ja
mov
test
cmc
xchg
das
push
mov
mov
in
arpl
push
pop
inc
leave
es
cmp
cld
ds
jno
xchg
mov
stos
mov
pop
add
rcrl
pop
out
loopne
into
dec
or
dec
cltd
adc
ja
mov
dec
mov
pop
pop
gs
aad
xchg
shlb
add
and
inc
dec
dec
inc
mov
xchg
inc
andl
cltd
ret
pop
adc
repz
push
stos
mov
jnp
mov
movsb
scas
add
adc
cmp
inc
repnz
xchg
in
xlat
out
scas
xchg
stc
xor
jns
jnp
or
sub
insb
ficoms
insl
aam
mov
and
xchg
loopne
rclb
xor
xchg
dec
pop
cmp
dec
andb
dec
mov
imul
mov
mov
lcall
aam
mov
jge
insb
pop
lcall
int3
negl
cmpsb
movl
and
lods
mov
xchg
ds
inc
inc
jne
inc
or
dec
sahf
and
out
dec
scas
xor
fwait
je
cmc
mov
adc
xor
out
cs
dec
aam
lods
mov
dec
push
jge
mov
insl
nop
dec
sub
scas
fidivs
cmp
xor
adc
imul
repnz
movsl
inc
sub
rcll
iret
shrl
les
xchg
mov
dec
aam
lret
nop
std
jp
xorl
scas
je
lret
stos
jge
hlt
sub
in
notl
nop
dec
and
xchg
test
shl
and
jbe
out
xchg
lret
push
imul
stos
dec
mov
mul
pop
in
nop
ret
je
sar
adc
push
xor
orl
outsb
sub
and
push
insl
test
in
nop
or
test
aam
add
call
xor
ret
popw
dec
fildl
sub
pop
in
cmpsb
sbb
xchg
fwait
mov
xchg
ljmp
out
push
dec
stos
jmp
jle
mov
mov
in
add
gs
aaa
jbe
sub
std
ret
dec
or
loopne
test
cltd
jb
inc
pushf
or
ja
inc
or
jno
test
mov
pop
ja
and
xor
sub
or
out
cwtl
pop
insb
loopne
nop
repnz
ror
xchg
mov
lods
add
aam
in
popf
push
jg
mov
mov
dec
add
into
xchg
test
mov
adc
mov
gs
scas
inc
xchg
inc
or
shll
iret
push
inc
or
ror
cmpsl
inc
aas
and
cmp
sub
pop
sub
jge
popf
out
push
enter
dec
inc
mov
out
add
sub
vxorps
pop
imul
outsb
loop
gs
fwait
dec
dec
and
cmc
cwtl
cmp
push
cmpsb
shrl
push
mov
add
test
leave
adc
stos
cmc
int
orl
rcrb
gs
je
sub
scas
push
leave
pusha
mov
lea
aam
lea
cmp
mov
cmp
pop
enter
clc
into
mov
inc
gs
pop
xchg
cmp
aam
cmp
or
outsl
fucomi
ret
data16
or
insb
adc
sti
data16
inc
ds
gs
cli
push
cmp
cmpsb
add
sbb
push
rcl
jb
icebp
jns
and
lcall
jecxz
xlat
shrb
cld
js
lock
and
xchg
je
or
mov
add
pusha
push
pop
shll
negl
push
idivl
aam
pop
xor
sbb
cmp
bound
fistpl
je
cltd
ret
loop
cmp
imul
pop
inc
pusha
mov
sbb
push
cmp
mov
inc
outsl
push
cwtl
lret
and
bound
jp
orb
shll
mov
and
out
ja
insl
pop
mov
mov
xlat
xor
loop
cmc
lods
mov
push
mov
jne
fdivrs
cmc
jmp
xor
pop
xchg
mov
lcall
dec
push
push
push
sub
ljmp
mov
xor
repnz
sbb
jle
sub
out
push
inc
push
cltd
inc
inc
addl
add
pop
hlt
nop
rcrb
int3
shll
mov
mov
jno
push
mov
push
mov
or
aad
jne
adc
jmp
inc
lcall
or
dec
sub
lcall
call
scas
adc
dec
fcoml
mov
pop
sbb
jnp
xlat
dec
cmp
clc
adc
sbb
sarb
insl
dec
sub
inc
pushf
repnz
rorb
dec
loopne
imul
rorb
mov
mov
adc
xchg
jp
or
sub
ljmp
outsb
cwtd
sbb
ret
outsb
pop
inc
neg
pop
cmp
mov
cmp
mov
insb
mov
cmpsl
pop
loopne
push
xorl
pop
dec
mov
mov
adc
lret
mov
or
jbe
test
pop
jge
imul
or
mulb
fwait
xchg
call
std
add
out
xor
or
popf
adc
lock
jae
imul
test
lahf
or
lea
ficoms
pushf
mov
xchg
cld
out
and
push
fcoms
cltd
fcmovne
sub
in
test
arpl
ss
ret
scas
and
mov
lcall
test
cmp
pop
mov
gs
mov
sub
je
xchg
cmp
adc
out
adc
jnp
std
cmpsb
ja
xchg
jp
xchg
enter
ret
pop
in
mov
push
sti
push
sub
push
jp
dec
add
cmp
dec
push
cmp
rcr
fdiv
int
sbb
mov
stos
mov
into
lret
jp
sbb
fwait
xor
cmc
pop
pop
fnstenv
insb
jno
push
dec
ljmp
ljmp
mov
adc
sub
int
or
and
sub
ds
mov
mov
fs
ja
mov
push
scas
negl
push
push
ja
xor
or
inc
add
stc
jmp
sbb
loope
call
push
into
fbstp
cmp
xchg
jo
or
and
testl
sbb
adc
xor
movsl
jns
insb
lods
fists
in
inc
es
mov
mov
xchg
aam
mov
ja
sti
sar
lcall
pop
mov
jecxz
sub
stos
loop
xchg
les
cmp
repnz
icebp
cmp
pop
stc
mov
push
dec
jnp
mov
test
test
inc
mov
mov
enter
nop
mov
mov
dec
mov
mov
push
repnz
jns
fs
shll
je
outsb
popa
jmp
inc
jecxz
leave
push
pop
mov
cmpb
cmp
dec
push
mov
popa
add
push
cli
stos
jae
stos
daa
add
enter
mov
add
xchg
imul
das
push
push
cmpsb
push
insl
inc
sti
out
cs
jb
sub
xchg
adc
dec
mov
mov
adc
xor
add
mov
shrl
sbb
pop
xchg
cs
fs
out
jmp
rolb
push
outsb
inc
in
ficomps
inc
rclb
inc
mov
in
inc
mov
mov
mov
pop
pop
inc
outsb
jo
shrl
and
in
call
ss
rolb
lret
stc
clc
std
dec
pusha
cwtl
dec
les
imul
movsb
ja
popa
dec
push
repz
nop
or
shrl
cmp
fbstp
and
mov
cmc
jns
imul
sbb
mov
scas
test
or
call
mov
dec
jo
jbe
sbb
cli
dec
aas
sub
loope
negb
in
add
mov
int
data16
lods
imul
stos
into
popf
jg
mov
fs
leave
jnp
xlat
dec
nop
das
push
add
dec
sub
and
lods
sub
xor
nop
pusha
sub
rep
lret
sbb
popf
ja
mov
xor
dec
adcl
pop
xor
mov
cmp
rol
loopne
sbb
mov
add
call
pop
jnp
jno
outsb
test
push
and
scas
mov
insb
fadds
repz
push
cmpl
insl
push
mov
pop
dec
jl
mov
clc
mov
lods
sub
cmp
xchg
push
jl
in
xadd
das
xchg
lret
fnstcw
fstpt
enter
outsb
ja
xlat
or
cmp
inc
cwtl
in
and
or
adc
pop
xor
out
jne
sahf
xchg
in
xor
icebp
xchg
push
cs
sub
xchg
stos
jns
or
jbe
or
pop
lret
lret
loopne
sbb
rcrl
mov
pop
cld
lea
adc
pop
dec
int3
push
mov
mov
or
shlb
jl
shlb
sarb
push
hlt
pop
mov
jle
sbb
cltd
cmp
imull
mov
cmpsl
xchg
pop
cmp
stc
pop
out
push
in
or
xor
fs
sub
lods
cli
jns
push
pop
sarb
outsb
mul
jp
lahf
or
mov
push
mov
dec
xchg
aaa
aam
xchg
pop
push
sub
mov
push
popa
xchg
rcl
aam
jmp
loopne
add
addr16
loope
out
insb
cwtl
mov
lahf
repnz
sub
xchg
movsb
out
pop
jle
movsb
adc
mov
daa
sub
fistpll
sub
sbb
stc
lret
mov
imulb
std
stc
in
and
push
mov
or
adc
push
jno,pn
ds
rclb
lods
mov
jo
dec
jl
cmc
call
jp
fldl
or
or
xchg
or
negl
loope
movsl
xor
mov
mov
ljmp
mov
cmp
dec
scas
mov
loop
sub
inc
cmpsb
lcall
out
adc
push
std
into
aad
push
ret
jo
cmpsb
push
dec
add
xlat
dec
mov
clc
out
cmp
cltd
mov
inc
pop
dec
jns
mov
inc
inc
sbb
int3
pushaw
jmp
xor
dec
pushf
ja
cs
pop
popf
iret
enter
push
push
lcall
test
ret
lret
lods
sti
jl
inc
mov
mov
jno
or
pop
je
hlt
sti
int3
xchg
sub
loopne
xchg
lahf
sbb
outsb
pop
mov
push
sti
stos
and
pusha
inc
and
pop
xchg
test
pop
ret
xor
sub
add
cs
lret
xor
mov
push
inc
adc
cmp
stos
add
in
sub
andl
mov
scas
das
dec
pusha
cld
outsb
bound
mov
lds
fmul
js
xchg
fisubl
jno
mov
daa
cld
cmp
stos
leave
lcall
idiv
mov
lahf
dec
mov
in
adc
push
xorl
hlt
and
or
cmp
xchg
lods
test
ja
aam
scas
adc
int3
or
pop
repz
sbb
out
cmp
mov
jae
jecxz
mov
gs
lds
push
sahf
orb
sub
push
out
mov
jo
or
and
push
adc
cwtl
imul
jnp
test
pusha
xor
popf
mov
gs
mov
add
jnp
in
or
sub
popf
jg
sbbl
jo
xchg
push
and
imulb
pop
and
scas
test
mov
scas
aaa
jg
mov
pop
inc
cmp
xchg
xchg
mov
mov
ss
push
sub
jmp
or
hlt
addr16
js
gs
mov
js
push
push
pushf
sub
dec
test
jmp
ret
dec
std
adc
pop
sub
adc
testb
adc
push
pop
popa
scas
adc
inc
pop
cmpsb
dec
mov
sbb
imul
je
cmpsb
lret
ret
and
adc
imul
fwait
test
lods
jno
cmp
jae
and
cs
lcall
cmpsl
sbb
xor
rorb
lock
js
fnstenv
call
sub
jmp
jae
cmpsl
lret
and
xchg
aaa
pop
mov
sub
lret
inc
push
cli
fisubrs
cmp
test
enter
pusha
mov
mov
ret
pushf
or
xchg
clc
call
dec
in
cwtl
fiaddl
fbstp
insb
lods
cmpsl
in
pop
cmp
dec
dec
popf
jnp
fs
imul
push
push
lcall
mov
xchg
out
leave
pushf
fwait
adc
xchg
loopne
xchg
bound
mulb
bnd
cmp
pop
stos
in
stc
mov
gs
je
jecxz
pop
imul
loop
pop
insl
cmpb
jge
cld
enter
xor
pop
test
jb
leave
xlat
movsb
aam
or
fimuls
hlt
or
xchg
imul
xor
push
mov
mov
jp
or
xchg
dec
inc
dec
cmpsl
repz
ss
push
pop
ret
mov
sub
mov
fsubrp
push
je
call
lcallw
add
js
cli
pop
shr
xchg
dec
cmpsb
enter
shrl
lret
and
outsb
clc
jmp
sbb
cmp
xor
and
test
cmp
adc
pop
dec
dec
fwait
or
add
xlat
mov
mov
popf
js
repz
jnp
loop
insb
mov
loope
cmpsl
and
bound
xor
shlb
ret
ret
mov
add
sarl
push
mov
adc
adc
sbb
jae
dec
and
aad
mov
stos
scas
jne
outsb
pop
insb
icebp
sahf
adc
adc
loope
mov
dec
pop
mov
rcll
jnp
mov
push
into
sbbl
out
cmp
jecxz
lahf
rcrb
outsb
pop
popf
push
enter
dec
rol
dec
inc
push
out
or
or
dec
xchg
mov
clc
push
push
jmp
movsb
jp
sti
leave
jge
jmp
pop
cli
dec
leave
jl
adc
das
push
das
outsl
leave
aad
cwtl
test
inc
call
rcl
idivb
subb
adc
popf
ljmp
push
and
negb
daa
fnstsw
aaa
sbb
loopne
in
or
dec
into
sbb
daa
fdivs
cwtl
mov
xchg
lret
pusha
fidivrl
roll
rcrl
inc
push
cmpl
push
pop
mov
lret
or
xlat
jecxz
loopne
in
jge
mov
jp
mov
jbe
xorb
in
dec
and
dec
outsb
fcmovb
sar
lock
pop
add
sbb
push
cmpsl
jnp
bound
in
imul
popf
out
arpl
mov
push
dec
xor
sub
add
push
sbb
mov
lods
aam
data16
dec
xchg
dec
iret
sbb
ret
dec
sub
sub
scas
repz
leave
insl
cmpsb
mov
in
xorb
je
inc
dec
jmp
loopne
call
adc
inc
xchg
rclb
lcall
ret
sbb
sub
stos
aaa
jl
gs
insb
jae
mov
and
int3
or
and
and
add
mov
push
aas
push
out
movsb
lods
and
sahf
jge
xor
test
cltd
adc
call
adc
jb
mull
scas
gs
mov
sbb
stc
push
test
mov
in
dec
jne
mov
dec
insl
mov
adc
addr16
xor
cmp
or
push
mov
add
or
dec
xchg
sub
sbb
jg
repz
jmp
or
cmp
xchg
adc
pop
jnp
loopne
rclb
imul
in
bound
lds
add
push
ficompl
fstpt
mov
jne
loope
jmp
vmovaps
xchg
std
imul
jno
fwait
popa
sub
fstp
es
js
and
mov
stc
push
stc
lahf
mov
std
and
pushf
add
jl
pusha
jp
aaa
xchg
mov
int
add
lret
mov
adc
mov
cwtl
mov
dec
decb
mov
pop
or
add
cs
cmp
dec
mov
pop
in
dec
and
push
cs
int3
mov
or
mov
lds
push
pop
mov
mov
test
and
pop
fbstp
ss
sbb
imul
ljmp
popf
int
ds
push
movsb
dec
bound
cmc
in
jno
or
pop
outsl
or
popa
cltd
dec
sub
popf
mov
pop
sbbl
mov
sub
pop
xor
enter
jbe
dec
xchg
push
je
cmp
repz
adc
sub
inc
scas
inc
cld
or
loope
ja
push
xchg
mov
outsb
pop
inc
sbb
xor
mov
stos
jp
hlt
pop
and
arpl
inc
cs
jns
lcall
sahf
pop
lock
testl
scas
inc
pop
int3
adc
movl
dec
and
adc
jp
aas
scas
dec
jo
cwtl
inc
jl
ja
dec
int3
adc
mov
pusha
sub
jnp
call
cs
pop
aad
jmp
rep
inc
add
mov
shrl
xchg
mov
arpl
xchg
cmp
xchg
out
imul
in
imul
jmp
xchg
daa
stos
jecxz
xor
stc
mov
movl
xchg
fstps
scas
rcll
ss
lods
test
sbb
shll
insb
or
fiaddl
xor
lahf
mov
lret
jp
jge
into
stos
xor
popf
into
mov
fcmovnb
jp
sub
dec
push
std
cmp
std
addl
rclb
dec
cmpl
mov
ja
mov
loope
add
sahf
pop
daa
in
mov
mov
mov
xchg
mov
popf
negl
pop
and
sbb
cmp
push
fldt
xchg
mov
add
push
cwtl
sar
std
pop
cmp
stc
jle
pop
ffreep
xchg
jg
fs
add
es
sbb
pop
cs
push
lods
or
push
jne
mov
mov
sub
daa
mov
in
ret
cmp
push
movsl
pop
mov
ret
rcrl
xorl
xor
test
rclb
xor
aam
fisubrl
and
mov
gs
movsb
dec
cmp
mov
pop
mov
enter
cmpsb
filds
push
in
aam
inc
jnp
fisubl
push
sbb
lods
cmp
fstpl
in
dec
loop
popl
cmp
add
push
xchg
xor
cmpl
mov
add
adc
jbe
jb
fwait
mov
or
out
xor
mov
dec
into
cmp
xchg
cs
andb
cs
imul
nop
pop
sub
xor
js
shrl
leave
je
test
divl
or
popf
cwtl
popf
imul
mov
imul
sbb
xor
jno
push
les
mov
sub
cmpsl
push
enter
adc
pop
inc
jnp
jp
mov
push
dec
fildll
aam
sub
jb
mov
mov
lahf
lcall
in
pop
sub
xchg
outsb
shll
pop
bnd
es
xor
repnz
jne
push
adc
shlb
fsubp
xor
xchg
xor
xor
test
pop
pop
out
popf
ss
daa
fidivrs
cld
push
ss
sahf
movsb
cwtl
orb
daa
xor
in
popa
mov
fdivrs
fisttpl
and
xor
cltd
lahf
mov
lock
inc
xchg
inc
test
les
lea
fwait
mov
mov
mov
sbb
popf
inc
lods
test
jl
push
inc
sbbb
mov
int
lea
fsts
xchg
out
mov
or
xchg
fidivs
cs
cmp
int3
xchg
ret
mov
or
jp
dec
test
cmpb
inc
in
andb
repz
jo
aaa
inc
outsb
iret
pusha
sti
jl
fcomps
add
rcrb
xor
jge
mov
xlat
and
mov
rorb
stos
push
pop
and
mov
dec
popa
icebp
sbb
lret
insb
xchg
mov
out
inc
fildll
in
adc
ljmp
inc
push
cwtl
out
jne
call
sub
gs
xchg
into
mov
add
sarl
stc
add
cmc
jae
aaa
leave
adc
mov
sub
insl
fs
mov
sub
mov
shrl
sub
adc
pop
inc
addl
and
mov
scas
cmpb
lods
cli
fidivrl
aaa
das
les
repz
pop
fsubrs
adc
and
xor
rcll
cs
cmp
add
pop
push
out
in
sub
testb
adc
mov
xchg
imul
fstpl
in
pop
xchg
adc
outsl
adc
outsb
xor
and
dec
xchg
imul
mov
es
out
dec
sub
or
dec
stc
fwait
leave
cwtl
push
dec
sbb
xchg
xor
mov
xor
loope
or
sbb
popf
add
in
sbb
clc
je
bound
inc
pop
mov
std
aaa
jge
je
cld
pop
mov
repnz
sub
sub
ljmp
divl
fistpl
shlb
outsb
shll
fistps
loope
lods
sub
push
sbb
mov
test
adc
mov
popa
lods
cld
dec
pop
inc
in
dec
shll
rcrb
xchg
call
in
push
adc
dec
xchg
insb
cmp
icebp
fwait
fwait
adc
xor
inc
fdivrs
pop
sahf
sub
sbb
loopne
subb
in
and
cmc
and
movsl
mov
sbb
adc
push
sbb
jle
sbb
loope
outsb
mov
xor
sti
scas
xor
roll
jle
add
mov
xor
pop
fsubs
mov
addr16
or
push
mov
pop
pushl
dec
rcrl
sub
orps
outsl
sbbl
loope
fistps
jae
es
dec
inc
movsl
inc
push
pop
daa
dec
call
mov
fcom
outsb
in
cmp
loop
jae
inc
outsl
adc
inc
into
mov
sahf
cmp
mov
jl
inc
das
jne
sbbb
jge
lock
mov
mov
insl
sub
cmpsb
adc
sub
or
lods
cmp
fsubs
in
pop
ror
cmp
ljmp
jns
pop
pop
pop
or
mov
jnp
subw
add
lcall
stos
dec
cmp
je
pop
pop
inc
shlb
add
push
stos
gs
xchg
mov
mov
mov
mov
fyl2x
stos
sub
inc
in
pop
rorb
and
dec
out
jae
xchg
push
add
jl
cwtl
cld
imul
sub
arpl
cli
add
in
or
ss
sub
cmpsb
outsl
jmp
lahf
inc
mov
xchg
jno
arpl
jmp
cmp
dec
sub
std
jo
xor
xchg
mov
outsl
fwait
arpl
std
imul
addl
das
movsl
mov
es
push
mov
insb
pop
inc
sub
stc
pop
sbb
or
adc
push
sub
negl
and
mov
loop
test
mov
cmc
fs
mov
lods
lret
in
sub
mov
popa
fptan
ljmp
jmp
xor
std
jns
adc
dec
xchg
xchg
and
xchg
mov
jecxz
mov
hlt
fisttpll
ljmp
imul
out
mov
and
pop
ret
js
dec
jge
out
dec
outsb
pushf
jb
jns
out
loopne
adc
sub
jo
xchg
aam
sub
lds
push
popf
repnz
jmp
outsb
clc
inc
ja
shrb
insb
sahf
push
mov
cmpsb
popa
xchg
inc
mov
popa
jmp
addr16
in
idivl
cmp
iret
sbb
jge
movsb
arpl
out
ficompl
adc
sub
jno
push
cmpsb
out
popa
nop
loope
cmp
sub
aas
in
pop
ja
cwtd
lods
adc
inc
mov
lcall
test
jb
pop
push
pop
arpl
adc
sub
sbb
add
stos
pushf
cmp
mov
imul
test
out
out
stc
ss
cld
lds
ja
int
cmpsl
lcall
lea
dec
xor
cmp
outsl
lcall
xor
mov
fistpl
sahf
dec
mov
lcall
adc
fildl
jle
mov
fucomip
mov
mov
mov
lds
mov
cmpsb
mov
imull
repnz
shll
or
add
std
test
inc
jg
adc
sarl
sti
aaa
push
dec
push
testl
add
testb
je
fisttpl
movsb
stc
pop
inc
outsb
pop
xchg
icebp
leave
mov
fdivrp
xchg
imul
lods
inc
cmpsb
mov
sub
leave
mov
mov
rcrl
push
nop
cmp
cmc
sbb
mov
adc
push
bound
xorb
daa
scas
into
shrl
call
pop
das
mov
pushf
insb
push
enter
dec
mov
inc
mov
in
push
xchg
outsl
stc
jnp
sub
mov
mov
xchg
std
lea
call
sahf
jp
test
ret
sbb
in
idivb
add
mov
fsubl
add
sub
ja
imul
mov
mov
stc
cmp
push
or
add
cli
dec
or
movsl
sub
jp
add
push
pop
pop
lret
dec
loope
push
mov
loop
movsl
inc
loop
pop
das
mov
jecxz
ret
adcl
enter
mov
bound
sbb
int3
out
add
jg
test
add
mov
lret
imul
pop
lods
js
add
fistps
sbb
out
daa
xor
not
sbb
arpl
mov
leave
test
mov
pmaddwd
sbb
lret
loopne
add
cmp
cmp
pop
pop
lret
or
out
shl
or
aam
test
enter
jne
int
jns
imul
je
iret
pop
xchg
hlt
stc
jle
lods
pop
adc
sbb
scas
jae
sub
in
pop
push
sbb
mov
sbb
lods
pop
imul
jno
flds
sub
jb
lds
add
lods
insl
pop
xlat
xchg
mov
add
mov
lcall
lahf
mov
mov
fs
inc
hlt
ljmp
sar
jae
push
out
adc
dec
mov
jae
mov
mov
ja
sbb
mov
sub
cmpsl
add
adc
cs
mov
inc
pop
cwtl
push
xchg
mov
mov
and
sub
gs
mov
shlb
sti
sbb
xor
mov
mov
lock
fsubs
mov
xor
push
pop
inc
scas
add
mov
lods
add
xor
leave
aam
stos
jg,pn
subb
scas
mov
into
pop
fs
xchg
scas
mov
xor
cli
adc
jns
addr16
jmp
iret
ret
aam
sbb
js
scas
lds
xor
cmp
popa
push
inc
mov
int3
gs
mov
adc
pop
mov
mov
inc
pop
push
inc
mov
and
sbb
mov
in
xor
inc
cmp
loope
into
insl
mov
lahf
push
sbb
jmp
mov
imul
xchg
cwtl
xchg
jl
xchg
aad
dec
scas
inc
add
cltd
mov
fisubs
in
outsb
push
xlat
int3
in
jo
sub
push
mov
dec
or
pusha
mov
shll
and
int3
adc
movsl
int3
sbb
mov
jb
adc
xor
mov
mov
mov
clc
adc
mov
testb
or
movsb
inc
mov
pop
dec
addr16
test
pop
cmp
push
push
mov
sub
mov
sub
mov
in
xor
and
rcrl
sub
push
and
loopne
sub
jge
cli
cmp
jmp
add
add
sbbb
outsl
and
popa
push
cltd
add
xor
sub
mov
or
subl
add
push
fildl
faddl
inc
inc
mov
stos
jg
rolb
loopne
sub
sub
jg
and
loope
mov
aas
lret
push
cld
out
cmp
dec
pop
jb
jb
sbb
xchg
pop
or
outsb
xor
inc
xor
jl
roll
cmp
add
inc
pop
mov
jg
addb
sahf
movsl
cmp
cmpsl
addr16
pop
xor
inc
or
outsb
jp
sbb
or
add
push
das
daa
insb
fldl
ss
mov
xor
adc
in
es
push
or
jne
jbe
into
fisubs
in
sub
out
push
xchg
ja
into
or
notl
add
pop
or
mov
xor
cmp
outsl
mov
std
xchg
scas
test
std
imul
imul
rclb
jmp
xlat
jne
lock
ror
imul
lret
es
xor
clc
lods
je
popa
test
fdivp
sub
std
movsb
adc
cld
jp
xchg
jo
jle
hlt
pusha
mov
mov
and
cmp
mov
lahf
movsb
and
and
stos
mov
loope
cmp
inc
jmp
inc
aad
fs
add
mov
push
adc
pop
jo
les
and
imul
xchg
cmp
je
aas
jp
mov
dec
mov
adc
push
insl
mov
sub
jno
add
push
std
testb
inc
in
dec
xchg
push
ret
cmp
test
ret
outsb
pop
adc
imul
pop
xchg
data16
in
cmpl
and
repz
dec
jno
pop
popl
push
add
mov
stos
pushf
cmp
stc
xor
add
repnz
inc
xchg
mov
test
and
fidivs
push
xor
push
iret
mov
dec
cli
cwtl
or
je
pop
mov
addl
repnz
mov
or
mov
jp
iret
stos
iret
mov
xor
dec
mov
or
mov
outsb
scas
sbb
mov
pop
jecxz
sahf
mov
cmp
in
cmp
out
fiaddl
pop
lret
in
cmp
out
dec
icebp
lock
fimull
insb
cmp
mov
rolb
stc
rcll
mov
pop
sub
mov
cli
xchg
xchg
daa
cmp
and
add
xor
popf
jmp
jo
add
aaa
cmp
das
jae
mov
push
add
mov
fisubrs
pop
and
ss
pop
dec
lock
int3
sbb
setb
sti
cwtl
push
sahf
mov
lods
aam
cmp
popa
inc
fcmovb
hlt
pop
xchg
divl
lcall
idivb
jb
inc
sub
inc
adc
inc
sbb
outsb
fmull
inc
cli
and
push
sbb
dec
clc
add
icebp
std
test
add
imul
or
push
cmp
lea
mov
out
addl
sbb
push
into
dec
mov
pop
cli
mov
or
mov
aam
aas
out
xchg
jp
test
ja
out
lcall
jbe
jb
mov
fildll
repnz
xor
ss
push
xchg
lock
jle
adc
inc
cld
dec
cmp
sbb
push
sub
addr16
test
fisubrl
mov
int3
xchg
cmp
sub
gs
or
jnp
cmpl
push
inc
and
mov
sub
mov
clc
mov
cmc
xchg
test
sbb
call
xchg
add
fwait
and
add
sbb
push
insb
leave
lahf
repnz
inc
loop
lds
or
bound
aam
int
xor
pop
xor
int3
jge
cld
add
jle
dec
or
pushf
hlt
mov
add
pop
negb
pop
sbb
mov
fcmovnb
push
test
xor
fisubrs
mov
xor
dec
fiadds
lahf
mov
mov
mov
cld
inc
out
lods
ja
jb
push
jne
push
push
xchg
popf
lret
mov
pop
dec
fcomp
das
and
xchg
dec
pop
dec
fs
scas
dec
jo
clc
jno
enter
shll
cld
or
shll
scas
pop
bound
ret
xchg
sar
popa
inc
jnp
mov
cmc
jp
out
in
cmp
pop
insl
push
xchg
mov
and
outsb
sbb
lcall
xchg
xchg
cmp
xchg
pop
push
inc
mov
adc
dec
pop
lods
scas
or
and
adc
dec
es
leave
clc
enter
out
clc
dec
and
loopne
test
jg
ret
add
cmpsl
xchg
xchg
popf
xor
pop
insb
fcomp
aad
xchg
flds
sub
pop
sbb
popa
mov
outsb
sub
and
outsb
aas
idivb
stos
mov
sti
push
mov
pop
mov
push
out
mov
add
jb
jecxz
daa
inc
and
inc
pushf
stos
mov
fldenv
push
popf
fdivs
cmp
lock
movsb
aad
cld
movsb
push
or
push
stc
pop
iret
dec
cmp
nop
insb
sahf
cmp
leave
inc
sbb
std
das
mov
insb
aas
das
popf
dec
shrl
test
lret
jae
adc
repz
addr16
imul
xchg
mov
push
mov
insl
addr16
adc
cltd
notb
mov
sbb
aaa
cmpsl
test
mov
mov
xchg
stos
mov
cmp
mov
or
test
frstor
cmp
mov
xchg
sub
fiadds
push
lock
test
fsubs
sbb
xorb
pop
add
jae
xor
arpl
xchg
bnd
inc
negb
mov
int
jge
sbb
sti
hlt
imull
stc
cmp
xchg
icebp
das
lcall
test
dec
cli
iret
je
or
insl
push
arpl
in
in
pop
sub
mov
js
sub
jns
inc
mov
xchg
dec
and
js
mov
pop
mov
stos
cld
xchg
push
sub
arpl
cmp
insl
testb
mov
dec
lcall
pushf
mov
xor
shr
inc
mov
and
in
sub
ds
and
jl
cmp
mov
add
mov
or
and
cmp
pop
adc
cld
jl
shrl
out
or
sub
add
out
dec
pop
ret
lea
mov
icebp
dec
nop
loope
pop
test
xlat
jae
push
jl
enter
ja
push
push
fbld
out
xor
fsubr
sbb
mov
cmp
mov
mov
mov
aaa
dec
pop
pop
adc
jo
mov
mov
xchg
push
sbb
add
not
jns
sbb
mov
and
adc
scas
stos
ret
cmp
mov
cs
pop
dec
cmp
dec
mov
inc
hlt
dec
dec
xchg
xchg
insb
call
or
ljmp
out
push
leave
jp
xor
cwtl
pop
push
jo
cmp
lcall
popf
sub
inc
leave
gs
sbb
push
and
cs
jmp
movsl
or
sbb
les
cmp
lods
cld
out
inc
pop
cmp
imul
sub
or
sub
inc
cmp
xor
push
cmc
jg
ret
in
mov
pushf
push
push
push
rcl
repz
into
out
dec
inc
xor
addr16
test
sub
fwait
out
dec
mov
cmp
hlt
ss
hlt
imul
test
adc
out
jle
mov
ret
sub
bnd
push
std
adc
push
pop
adc
test
enter
push
add
xor
jp
das
test
or
cmpsb
test
hlt
in
cltd
int3
mov
jecxz
jecxz
xor
repnz
sarb
scas
pop
jecxz
fdivs
inc
cmpsl
ljmp
pop
loop
inc
adc
out
sbb
push
push
daa
cmp
into
call
dec
pop
sbb
aam
pop
aaa
divl
sub
mov
mov
adc
idivb
aad
jnp
lret
movsb
ds
sbb
popf
and
fdivrs
cs
mov
dec
enter
ja
push
stos
iret
xchg
jae
int3
fdiv
dec
xchg
sarb
sbb
or
mov
cmpsb
lea
xchg
cltd
jns
fsubrl
popf
insl
push
cmp
stos
sbb
in
add
xor
arpl
xlat
mov
test
imul
mov
popf
mov
aam
mov
inc
scas
adc
sub
pop
push
cmc
imul
push
jae
daa
fdivrl
mov
and
xor
pop
xchg
pop
pop
fstps
fdivl
mov
scas
inc
std
inc
inc
push
ljmp
dec
rcrb
jmp
mov
into
pusha
sub
push
les
pop
es
shlb
int3
cmp
or
mov
stos
jp
xchg
cs
data16
jge
ss
sub
hlt
pop
or
and
xor
cmpsl
cmp
push
xchg
jae
jns
les
jg
inc
push
or
jo
xchg
idivb
xor
cmpsb
call
push
adc
pop
and
mov
sub
adc
mov
adc
ficompl
xchg
jmp
inc
xchg
outsb
les
leave
cmpsl
push
lret
cmp
arpl
push
xor
jle
pop
lahf
xor
loopne
fimuls
popa
add
es
sub
push
lock
outsl
dec
add
push
jno
mov
data16
dec
adc
fsubrs
or
pop
out
push
and
call
cmp
cli
mov
jge
fsubrs
daa
and
lret
inc
push
adc
mov
pop
rcr
sub
pop
mov
add
mov
pop
jl
ja
fcomps
sti
cmp
lea
sub
jne
dec
rorb
ljmp
mov
lret
and
cmp
dec
hlt
mov
insb
out
call
pop
cmp
cltd
idivl
call
sbb
jge
cmc
sub
out
addr16
adc
mov
stos
xchg
movsb
stos
fsub
je
xchg
push
push
call
mov
lods
sub
jne
cmp
lea
inc
pop
pop
cmp
sbb
in
push
fsubrs
jno
push
daa
repz
loopne
pop
adc
push
int
stos
mov
inc
clc
ret
jno
lods
adc
xchg
ret
xorl
mov
and
ljmp
dec
pop
dec
add
lcall
inc
mov
mov
add
mov
and
cli
ror
pusha
mov
mov
mov
mov
push
mov
add
inc
dec
xor
shlb
inc
xor
sub
stos
sarb
dec
fbstp
add
pushf
jno
inc
loope
cmpsb
test
pusha
lcall
lods
inc
sbb
insl
repz
fucomp
dec
jns
dec
mov
sbb
sub
adcb
std
xor
push
inc
mov
sbb
mov
xor
sub
into
lods
pop
jbe
dec
xor
pop
xchg
jns
adc
mov
cld
hlt
cwtl
sbb
data16
pop
movsb
test
or
aam
divb
outsl
dec
adc
icebp
sub
data16
ficompl
xchg
adc
insb
push
icebp
inc
add
cmp
mov
out
data16
hlt
sbb
jo
ljmp
clc
fwait
mov
aaa
mov
shll
or
nop
push
sti
pop
lods
mov
pop
icebp
push
imul
lods
loop
ret
or
dec
push
pop
nop
cmp
popa
mov
mov
es
loop
std
inc
repnz
das
mov
cmp
cltd
adc
jge
sub
xchg
loopne
inc
rcl
mov
jo
test
pop
xchg
into
not
rclb
fistpll
jno
stc
lock
ds
mov
stc
mov
pusha
aad
xorb
lret
fnsave
rorl
repz
sbb
bound
out
sbb
leave
negl
fs
add
mov
sub
pop
dec
sub
aad
lea
loopne
jp
xor
mov
cmp
aam
orb
add
je
mov
nop
inc
pop
loopne
sub
mov
lret
lea
fs
and
scas
aam
popf
jns
iret
adcl
das
jg
popfw
std
push
or
cltd
dec
xchg
les
sub
cld
into
push
dec
mov
mov
inc
sub
sbb
cmp
adc
das
sbb
sahf
pusha
lds
sub
fwait
or
sbb
stos
scas
pusha
test
imul
sbb
pop
test
jae
repz
dec
outsb
popa
fldl
xor
shr
mov
and
rcrl
mov
dec
int
lcall
int3
add
sbb
jmp
lds
cmp
pop
popf
test
push
add
stos
pushf
xchg
dec
xor
push
rcrb
imul
or
psadbw
or
mov
dec
std
ret
fbld
xorb
or
gs
jno
adc
gs
adc
je
mov
cmpb
daa
pop
jnp
jg
and
dec
sbb
lds
test
jns
mov
or
xor
fsubrp
add
add
data16
jns
shrb
popa
mov
adc
jae
push
es
inc
xlat
xchg
push
ds
dec
hlt
test
in
sbb
jnp
xor
or
and
repz
popa
mov
cmp
jl
mul
rcrl
xor
insl
out
cmp
fsubrs
dec
inc
lret
int3
dec
cltd
fsubrs
or
sub
pusha
pusha
sub
pop
jns
jmp
cltd
mov
rorl
and
and
lds
dec
xlat
push
xchg
sub
inc
mov
sti
push
dec
rorb
aam
andl
mov
adc
fdiv
inc
imul
mull
or
cmc
das
aad
or
xchg
clc
inc
sbb
stc
subl
or
sahf
rclb
ds
adc
cmc
sbb
pusha
inc
jns
pop
popf
pop
and
jb
mov
mov
adc
pop
mov
xor
test
shlb
add
xor
or
scas
pusha
inc
mov
imul
lods
lods
repz
xchg
mov
sbb
pop
pop
pop
mov
mov
pop
jns
in
dec
inc
xlat
jmp
out
repz
loop
pop
mov
es
xor
std
adc
add
cld
xchg
ficoml
lcall
cmp
and
das
push
cld
pushf
sbb
cli
inc
inc
shrb
ds
and
xor
xchg
fidivrs
xchg
imul
mov
and
mov
scas
mov
into
sub
repnz
push
and
pop
adc
das
push
cld
andb
mov
ljmp
insb
in
test
or
arpl
mov
popa
stc
ljmp
push
cmp
lods
pop
rcr
lds
repnz
int
aam
push
sti
dec
fildl
cmp
sti
xchg
adc
lods
outsl
nop
or
ds
mov
sahf
and
jp
mov
roll
sbb
in
cmc
aaa
sbb
outsl
mov
ror
cld
add
test
cmpsb
dec
push
outsl
add
mov
imul
std
pushf
outsb
test
daa
jns
inc
fildl
hlt
pop
divb
xchg
cmc
cmp
add
mov
jbe
lock
jno
adc
cmp
jmp
inc
sbb
rcll
insl
lahf
in
in
adc
insb
lahf
in
sti
aam
lods
add
leave
push
mov
cli
cmp
and
xchg
outsl
jge
insb
mov
iret
nop
xchg
sbb
add
or
rcl
cmp
popf
imul
push
fadds
data16
icebp
sub
in
imul
push
scas
pop
pop
xchg
in
test
sub
inc
roll
sub
xchg
imul
fildl
shlb
shl
mov
addr16
les
pop
pop
cmc
pop
fucomip
fcmovne
inc
jb
push
and
push
popf
mov
add
add
jp
dec
leave
jae
es
mov
div
mov
fs
pop
mov
lea
int3
or
xchg
mov
stos
ss
and
shll
mov
add
rorb
xor
or
mov
mov
sarb
mov
jl
mov
js
out
ss
pop
out
aas
in
xchg
call
and
push
loop
adc
jle
dec
jbe
outsl
lock
push
cmp
push
inc
pop
and
ret
in
into
out
stos
iret
mov
insb
or
xor
inc
or
pop
loop
dec
mov
push
sbb
push
xor
shrb
xchg
sbb
out
xor
pop
frstor
bound
mov
enter
or
xorl
fcompl
mov
in
std
sbb
jbe
cmp
mov
lea
pop
add
jp
mov
sbb
mulb
lds
out
or
orb
imul
pop
andb
add
pop
xor
fcmovnbe
jmp
mov
stos
daa
jae
push
mov
iret
scas
adc
push
cmp
pop
fisubrl
sub
mulb
ja
repz
scas
mov
es
jle
fdivrs
js
fwait
xor
aam
fcomps
test
add
ljmp
clc
lods
dec
jmp
pop
mov
cmp
fisubs
add
loop
fidivl
je
push
sbb
dec
mov
pop
clc
scas
aam
sti
dec
data16
mov
inc
jg
mov
sub
je
or
repz
cli
pushf
shrb
repnz
add
jg
sbb
jno
mov
adc
dec
enter
fucom
fildl
inc
mov
mov
xor
mov
fistpll
push
sar
sbb
out
ret
jae
jb
sub
jb
sti
or
es
movsl
cmp
shrb
out
gs
sbb
add
lea
daa
or
stos
pop
movsl
fs
xchg
mov
ret
push
sbb
adc
pop
xor
push
cld
lods
fcmove
or
mov
inc
out
cmp
sub
lods
insl
sub
js
test
push
cmp
push
ljmp
sbb
pusha
and
push
fistpl
rorb
icebp
sbb
aad
fstpl
and
fstl
adc
xor
out
dec
mov
dec
aas
add
xchg
and
xchg
xchg
xor
push
inc
and
dec
xor
jmp
ljmp
andl
mov
pop
stos
inc
xchg
mov
movb
int
sbb
pop
xchg
sbb
inc
fbld
pminub
xchg
push
insb
rorb
xor
sahf
add
jnp
icebp
mov
push
push
fimull
test
stos
mov
loope
leave
add
cmp
fstpt
pop
imul
jo
sbb
xor
pop
filds
lock
jns
lret
cwtl
xchg
mov
mov
fwait
lret
stos
mov
sub
adc
icebp
adc
xchg
loopne,pt
push
insb
mov
inc
add
fbld
jmp
in
xor
aaa
out
mov
int
push
push
push
mov
xchg
mov
iret
aam
jns
mov
xchg
dec
mov
shlb
ss
lds
jnp
ljmp
lcall
jbe
pushf
frstor
cmp
aam
sbb
int
dec
jbe
js
mov
cmpsb
push
dec
scas
or
sub
sub
sti
xchg
jl
add
push
and
arpl
fnstcw
pop
sub
pop
sbb
push
fcompl
cmpb
arpl
repz
inc
push
out
mov
fmul
inc
mov
jb
add
pop
je
xchg
xor
ret
jno
cmp
insl
fidivl
loopne
add
fstpt
mov
and
dec
push
outsb
dec
mov
and
jae
push
hlt
mov
xchg
inc
das
inc
push
xor
iret
insl
xchg
loopne
lock
out
xchg
inc
ror
shrb
mov
dec
dec
cmp
ljmp
adc
fcoml
repnz
mov
popa
adc
loope
and
push
test
leave
jmp
push
ret
xchg
mov
jmp
stc
test
push
js
cmp
cmc
adc
mov
cmpsb
sar
jp
in
nop
shrb
cld
add
adcl
fsubrl
push
mov
dec
stos
and
mov
in
mov
repnz
cmp
mov
rolb
in
mov
dec
repz
xchg
jb
dec
les
addb
and
xlat
mov
out
and
mov
cmp
scas
es
arpl
cmp
cwtl
jmp
mov
hlt
pop
leave
mov
sub
shlb
cmp
adc
and
dec
sub
in
mov
sarb
lret
addr16
jno
push
inc
inc
ljmp
cmpsb
dec
jmp
mov
jg
int
arpl
mov
push
sbb
aas
pusha
cmpsl
or
mov
leave
test
fstl
shlb
adc
push
adc
shr
add
xchg
xor
jo
dec
push
pusha
push
xor
sub
in
pop
inc
aam
xchg
push
and
jmp
mov
dec
jecxz
gs
movsb
cmp
dec
cmp
in
lcall
cmpl
push
dec
cmpsl
xlat
xchg
jbe
test
jno
fucomp
fs
jle
xchg
inc
scas
jge
or
imul
mov
mov
loope
xor
jno
movsl
inc
in
jg
fwait
sub
pusha
jno
sbb
mov
cmpsb
cmp
or
lahf
dec
enter
inc
add
nop
mov
xchg
push
mov
cmp
fwait
inc
lock
cld
xchg
xor
and
and
mov
dec
movsl
mov
dec
sbb
mov
or
cmp
imul
mov
pop
loopne
stc
jg
daa
pop
stos
jle
jae
popa
ss
loopne
dec
fstl
xchg
arpl
mov
xchg
push
sub
and
jp
push
sbb
mov
push
mov
dec
mov
xchg
adc
add
sub
cmc
add
cmp
push
lret
cmp
dec
add
pop
inc
mov
dec
addr16
test
adc
incl
xchg
or
sbb
aaa
stos
out
and
fdivrs
jo
sub
or
aam
pop
notl
leave
sbb
daa
mov
movsl
cmp
int3
js
pusha
mov
rcll
push
iret
push
pop
dec
enter
sub
dec
or
xor
mov
push
push
xor
adc
in
ja
inc
mov
jmp
cmc
sbbl
jmp
out
push
or
jecxz
cmp
inc
stos
jmp
xor
out
icebp
add
gs
loop
add
les
dec
xchg
dec
sub
rclb
fisubrs
and
roll
leave
orb
xor
lock
jne
mov
inc
jecxz
in
pop
ss
mov
cmp
movsb
fwait
lods
and
dec
neg
sub
mov
jmp
push
scas
add
xchg
in
notl
xchg
add
jo
adc
mov
aas
pop
mov
inc
xlat
inc
arpl
sahf
xchg
adc
lret
push
push
in
jo
pop
xchg
mov
or
lret
cmc
fisttpl
mov
out
sbb
lea
insl
loop
mov
mov
popf
mov
stos
pop
lds
push
insb
add
adc
lcall
ja
adc
lret
xchg
pop
dec
jmp
cmp
mov
adc
push
adc
js
aam
scas
mov
inc
dec
xor
jae
mov
cmp
xchg
adc
adc
jbe
push
or
push
les
leave
scas
dec
test
push
enter
idivl
out
cmc
inc
call
movsb
je
xor
bound
mov
aam
fwait
mov
repz
insb
fwait
jmp
std
popf
xlat
stc
std
inc
xor
push
jmp
and
sub
test
cltd
jo
mov
out
push
sbb
inc
cmp
out
das
sub
sbb
outsl
ljmp
jb
aas
nop
pop
std
xchg
inc
mov
pop
sbb
and
mov
dec
cmp
in
xchg
push
in
insb
bnd
dec
inc
iret
jbe
pop
jns
sbb
pop
cmp
dec
test
mov
arpl
aad
repz
sub
and
dec
adcl
fnstenv
jmp
pop
dec
negl
scas
lods
daa
cmp
int3
std
movsl
movl
popa
sbb
stos
in
pop
loop
roll
add
xor
fcomps
leave
out
add
inc
and
jnp
popa
repnz
lock
mov
daa
xor
loop
push
dec
mov
shrb
push
lahf
jns
mov
mov
lret
out
sbb
cltd
xor
mov
clc
lret
xor
aad
mov
iret
lret
lret
push
mov
fisubrl
loopne
lods
and
fisubrs
in
insb
mov
xchg
inc
loop
inc
adc
repz
inc
inc
out
lret
ds
cltd
icebp
rcl
repnz
in
add
add
sahf
mov
mov
lcall
test
mov
std
sbbl
mov
test
xchg
loop
pop
nop
mov
subb
cmpsb
push
jae
push
cmp
sbb
jbe
popf
movsb
inc
jae
dec
and
orb
mov
adc
lret
jb
jle
xlat
rcrb
aam
xor
inc
inc
push
bound
mov
pusha
lea
jge
repz
das
ficoml
lret
std
xchg
cli
jno
or
inc
arpl
dec
inc
inc
pop
pop
scas
pop
or
xor
jo
das
xchg
rcll
mov
mov
and
pop
or
dec
and
out
add
movsl
cmp
nop
adc
pop
aas
add
sub
lods
stos
popf
xchg
push
pop
cmp
cmpsl
xchg
xor
popa
ljmp
imul
mov
inc
aam
sub
pop
xor
popa
jnp
fwait
mov
test
adc
xchg
pop
hlt
into
mov
in
lahf
xchg
lahf
insb
pop
sbb
cmpsb
mov
and
bound
mov
fistl
lds
xor
mov
add
push
jle
cltd
lcall
loopne
jae
add
es
fldt
xchg
cwtl
es
iret
mov
adc
in
insl
dec
lea
dec
dec
cmp
fisubs
fs
push
sub
adc
cmc
push
mov
mov
idivl
mov
cmpl
add
jno
aaa
jg
mov
xor
pop
pop
xchg
jo
push
mov
fs
lds
xor
mov
insb
cs
xchg
sahf
inc
jge
ret
cmp
imul
mov
fwait
movsl
mov
aas
xchg
popf
int
jmp
out
fcoml
mov
cld
insl
cld
dec
push
xchg
fwait
popf
pop
les
xor
inc
mov
mov
pop
cli
push
loope
jno
je
stos
mov
mov
jns
aaa
outsb
adc
lret
push
adc
aaa
out
mov
inc
jbe
lcall
fcmovnb
sahf
xlat
fstps
insb
mov
aad
adc
pop
jbe
loope
icebp
and
fidivs
pop
mov
notl
cltd
ss
mov
xchg
mov
push
push
popa
add
pop
dec
sub
xchg
lods
inc
bnd
or
push
sbb
cmpsb
sbb
insb
mov
mov
or
xor
cmpsl
sbb
imul
dec
or
adc
into
adc
leave
out
xchg
xchg
or
push
vmovntps
les
xchg
mov
mov
out
add
arpl
dec
mov
xor
push
jae
rorl
xchg
in
mov
and
subb
cmp
mov
xchg
cmp
xchg
adc
stos
xchg
dec
lcall
out
or
mov
bound
scas
xor
inc
cltd
push
and
mov
fcomip
cmp
sbb
popf
test
mov
repnz
mov
popf
cli
ficompl
inc
pop
mov
adc
subl
or
mov
cmp
test
pop
cmp
mov
mov
jg
test
dec
mov
sti
dec
bound
or
btc
pop
xchg
xchg
inc
ret
ret
mov
or
je
mov
mov
inc
cmp
lods
lret
add
loop
js
fwait
and
sub
push
ret
mov
sti
push
les
xchg
rcrb
je
inc
lea
mov
std
jns
scas
loope
ret
or
fs
or
pop
mov
or
pusha
loopne
mov
test
dec
movsl
xlat
add
jge
add
lods
divl
js
mov
xchg
mov
out
xchg
aam
aaa
imul
mov
xor
mov
and
dec
or
std
jbe
cli
out
xchg
mov
cmpsl
jb
repz
popa
clc
call
pop
lea
and
jbe
mov
gs
push
mov
jne
in
cwtl
jle
push
idivl
inc
repz
pop
hlt
ja
cmpsl
es
lods
loope
inc
add
and
les
mov
push
or
lods
aaa
mov
icebp
xor
or
cmp
inc
arpl
pushf
div
cli
sub
push
add
cmc
stos
cmp
pop
jno
rorl
mov
repz
xchg
xchg
aaa
arpl
call
or
ss
and
mov
mov
push
idivb
rcl
stc
popa
aas
jns
bnd
sahf
mov
cli
int
sub
dec
in
mov
adc
sub
mov
outsb
rorb
iret
jge
pop
sbb
jo
xchg
or
adc
inc
sbb
pop
cmpsb
dec
lret
or
cmp
movsb
xchg
add
xor
stc
out
rep
addl
add
aad
leave
insl
repz
jmp
test
movsb
jecxz
loope
mov
imul
mov
cmp
inc
push
nop
jmp
or
out
add
popf
repz
clc
jle
xor
add
loop
lret
pushf
lds
nop
mov
nop
inc
sti
xor
sbb
or
iret
pop
imul
push
and
ret
push
lret
or
bound
mov
repz
push
sub
test
dec
lods
add
roll
imul
add
pop
mov
jno
xchg
popl
jo
pop
fcoms
adc
mov
add
and
lea
or
mov
push
dec
fs
in
or
adc
fisubs
and
out
int3
jne
fsubrl
test
pop
std
or
mov
cmp
sub
fxch
icebp
cmpsb
jno
add
test
scas
adcb
test
outsb
pop
cmp
lcall
push
into
mov
jmp
adc
or
and
inc
dec
mov
test
or
push
mul
scas
ja
xor
mov
fucomip
or
pop
popf
jo
scas
pop
dec
icebp
mov
loopne
mov
xor
pop
xchg
fs
dec
sbb
mov
jbe
mov
mov
and
fiadds
loopne
and
and
es
fidivs
sbb
sbbl
xor
adc
je
jl
inc
xchg
stc
lods
jp
adcl
cltd
sbb
and
sub
mov
cli
fldl
aad
lds
fstps
cmp
or
cld
in
cmp
mov
xchg
insl
loope
loop
xchg
imul
xchg
sbb
sub
push
mov
stc
cwtl
pop
dec
push
push
pushf
push
outsl
fildll
cltd
dec
or
filds
fsubs
stos
xchg
gs
inc
adc
pop
cmp
les
and
mov
lea
out
and
loopne
dec
ja
and
inc
inc
movsb
mov
mov
paddsw
sub
mov
lret
and
iret
pop
sbb
inc
add
insb
stc
mov
inc
xchg
outsb
repnz
push
xchg
lock
cmpsb
push
mov
int3
loopne
movsl
cmp
mov
sbb
das
adc
test
lods
pop
add
insb
fdivrl
sub
int
fsubl
pop
mov
push
mov
jmp
scas
imul
dec
hlt
outsl
adc
imul
shrl
cs
out
jne
inc
sub
aaa
xchg
inc
popf
lret
pop
rorb
mov
pusha
mov
cwtl
xchg
pusha
fstpt
clc
imul
lea
loope
jne
mov
stos
mov
call
inc
jae
sbb
in
mov
adc
nop
js
adc
fldl
mov
push
icebp
fsubrl
sbb
pop
loopne
sub
xchg
pop
lret
xorb
fcmovbe
je
in
mov
int3
loop
jmp
inc
ljmp
test
arpl
sub
call
std
daa
out
add
aaa
inc
arpl
stc
xor
fnsave
or
push
push
insb
or
or
mov
stc
push
adc
dec
cld
push
mov
fisubl
lds
lahf
sbb
mov
sahf
add
and
int3
mov
js
lahf
pop
xor
lret
pop
int
movsl
adc
push
loope
dec
inc
adc
test
xchg
mov
inc
mov
adc
pusha
call
mov
lahf
pop
cli
fidivrl
push
or
cmpsb
aad
jno
mov
leave
xchg
ss
std
addl
mov
or
in
jg
out
mov
and
pop
dec
shlb
mov
mov
pop
sbb
fwait
cld
data16
scas
adc
jg
je
or
adcb
adc
rcll
pusha
mov
fildl
jns
push
iret
adc
mov
test
xor
cli
pop
stos
mov
jae
and
sbb
mov
mov
out
es
sbb
outsl
push
test
sub
mov
push
ret
dec
push
pop
jg
sbb
or
out
sbb
pop
lret
in
lods
mov
imulb
push
std
dec
xchg
test
jb
js
xchg
es
iret
push
divb
jl
xchg
std
jbe
and
and
fmull
cs
and
mov
and
aaa
repz
pop
xlat
xchg
inc
mov
mov
outsl
dec
aad
and
pusha
insb
imul
cmpsb
pushf
adc
orb
jecxz
mov
test
mov
in
in
jae
mov
push
cld
repz
cs
push
mov
scas
sarb
mov
clc
test
xchg
push
shlb
popa
sarl
add
xor
xchg
dec
sti
sarb
outsb
add
push
cmpb
sub
jmp
mov
inc
jp
jmp
or
addr16
call
shll
sub
lret
fsubrs
lahf
or
loop
js
xchg
push
inc
xchg
xchg
jns
xor
or
mov
call
pop
lret
cmpsb
sub
out
add
mov
pop
cs
popa
test
setl
push
pop
xchg
mov
loope
lock
sub
int
mov
jae
fadd
outsl
xor
jp
lods
cmp
aaa
jns
out
xor
inc
and
push
xchg
sbb
scas
loopne
dec
xchg
out
scas
xchg
push
xor
fcmovbe
shrl
cmpsb
xor
mov
lods
loop
push
xor
and
popfw
xchg
sub
data16
mul
inc
push
mov
cld
nop
add
mov
jmp
or
jp
inc
aaa
mov
in
stos
pop
pop
dec
shr
pushf
jae
das
fwait
js
jg
add
add
jne
out
inc
jae
xlat
cs
pop
jne
jns
sbb
add
cmp
movsb
xor
sbb
or
mov
pusha
outsl
jge
push
xchg
inc
aad
psrlq
mov
add
fstps
lret
sub
pop
jno
inc
pop
cs
hlt
cltd
popf
int
adc
ljmp
xchg
mov
push
and
mov
lds
mov
push
dec
xor
das
or
sbb
lret
mov
data16
push
jnp
test
sub
xor
dec
stos
xchg
mov
or
repz
pop
dec
xchg
mulb
push
and
nop
mov
push
fcmove
push
pop
jnp
out
and
mov
fidivrl
and
jne
enter
xor
or
mov
push
sbb
mov
inc
enter
inc
lods
pusha
jl
xchg
insb
icebp
lea
adc
das
outsb
orl
xor
mov
inc
or
daa
sub
adc
mov
mov
iret
ret
xchg
pushf
fsubrs
cmpsb
mov
fistps
add
stc
jle
push
inc
dec
and
sub
dec
jbe
sub
mov
pop
test
loop
adc
fcompl
pop
push
push
and
cmp
cmc
sti
scas
and
in
ret
mov
jbe
lods
fimuls
jae
mov
jns
gs
fmuls
pop
rorb
push
cmp
stos
mov
mov
jo
mov
in
mov
test
mov
fbld
sub
mov
pop
in
fs
or
inc
adcl
ja
mov
mov
cmp
cmp
int3
test
jns
push
dec
push
outsb
lds
cmp
out
clc
test
dec
and
add
je
inc
daa
faddl
xor
rorb
mov
inc
inc
sbb
lret
aam
movsb
push
fldenv
and
mov
push
or
shll
imul
cmp
call
inc
movsl
jge
movsb
aam
jns
mov
mov
or
ja
popa
std
aam
test
leave
sar
push
or
mov
jns
mov
out
es
sarl
inc
movsb
push
nop
out
lret
push
xchg
mov
lds
addb
sub
lcall
xchg
cmp
xchg
pop
cmpsb
fld
ficomps
stos
sub
add
jae
jp
pop
pop
jl
mov
out
cmpl
xchg
pop
sarl
es
adc
inc
movsb
mov
cmp
adc
sahf
adc
push
bound
decl
mov
mov
cmp
ror
leave
or
pop
sub
push
xchg
lahf
mov
dec
rclb
rol
sbb
or
out
daa
push
mov
jb
insl
stc
pop
mov
loop
push
adc
outsb
insb
inc
and
mov
mov
push
call
jmp
inc
test
push
jae
in
lcall
jmp
pop
inc
popf
stos
pop
dec
xchg
ljmp
jb
jno
ss
imul
add
fimull
mov
fcompl
lahf
mov
jecxz
add
mov
xchg
sbb
addr16
inc
lret
out
fimull
pop
bound
mov
call
aaa
add
cmp
adc
movsl
jl
mov
mov
and
inc
add
lds
mov
ds
rsm
and
mov
xlat
jge
mov
lret
xchg
dec
loopne
xchg
lods
cmpsl
adc
js
mov
push
outsb
sub
lret
cli
movsb
dec
adc
movsb
jne
mov
xchg
outsl
mov
push
adc
pop
xchg
inc
popa
push
mov
jecxz
lret
fadd
fsubs
cmpsb
test
aaa
inc
int
xchg
pop
mov
pop
leave
nop
pop
mov
mov
mov
jb
aam
sub
addr16
mov
mov
xchg
cmpsb
std
mov
mov
out
cld
loop
clc
aad
jle
dec
pop
test
push
add
mov
jae
aas
lea
adc
xchg
xchg
in
mov
xchg
std
fwait
loope
mov
push
sbb
mov
mov
daa
inc
fcom
inc
and
mov
insl
fwait
mov
dec
aas
das
or
inc
xor
cmpsl
jmp
cwtl
ret
rcr
dec
jg
mov
das
adcb
mov
fcomip
mov
sbb
mov
lea
or
outsl
jae
and
mov
pop
mov
mov
cs
mov
cmp
ja
out
jle
lcall
mov
mov
or
mov
pmulhuw
rcrl
dec
in
mov
jo
cmp
sub
push
mov
ljmp
or
push
sbb
mov
repz
incb
xchg
sbb
cmc
and
shr
iret
into
pop
jae
sbb
mov
enter
fwait
sarb
xor
imul
iret
push
divb
mov
sbb
jb
jl
xlat
test
fsubs
add
cmpb
and
faddl
pop
pop
push
adc
scas
and
std
notl
repnz
sahf
dec
xchg
add
rcll
pop
sarl
dec
mov
xchg
sbb
dec
xchg
pop
xor
jbe
xor
sub
adc
xor
add
std
push
aaa
je
popa
sbb
mov
fbstp
mov
adc
mov
mov
adc
cmp
pushf
int3
jbe
and
in
shlb
push
xor
clc
fistpl
mov
dec
or
adc
push
sbb
mov
into
xor
test
xor
sbb
mov
or
mov
lods
in
aam
clc
fs
mov
push
in
fs
inc
cmpsl
push
scas
dec
gs
pop
sub
xchg
xchg
lds
push
xchg
pop
mov
lea
cmc
enter
push
ja
lret
inc
add
mov
sub
das
add
fiaddl
cmovs
in
sbb
cld
imul
in
and
sbb
ja
outsb
in
lcall
aad
orb
in
leave
jl
pop
mov
or
int3
mov
ljmp
or
mov
mov
lcall
xor
push
sbb
xor
mov
push
inc
xchg
mov
nop
push
imul
mov
push
stos
mov
icebp
js
mov
pcmpeqb
pop
cmc
mov
mov
mov
push
mov
pusha
test
ret
jo
mov
inc
es
sub
xchg
cltd
xor
xchg
pop
rolb
and
int3
cwtl
jl
lea
sub
addb
xchg
adc
out
call
lret
cmp
and
in
pop
out
push
dec
ds
mov
cmpsl
adc
je
arpl
cmp
mov
inc
or
sbb
daa
out
aad
loope
mov
and
mov
pop
jne
push
aas
add
push
or
inc
mov
je
inc
sbb
dec
arpl
xlat
stos
in
lret
fbld
push
les
push
inc
cltd
in
dec
mov
pop
xor
inc
test
js
inc
mov
and
inc
jne
mov
jnp
sub
jecxz
daa
sbb
call
add
out
or
pop
mov
push
push
xchg
dec
pushf
clc
pushf
xchg
pop
xchg
aam
mov
xchg
hlt
push
jno
scas
loop
aaa
cmp
cmpsl
out
arpl
mov
cs
sub
pop
or
shrl
bound
call
mov
cmp
cld
xchg
aaa
push
add
mov
shll
aaa
push
data16
mov
xchg
push
inc
pop
cmp
shrb
mov
sarb
jecxz
mov
cmp
pop
cmp
push
ss
cmp
shlb
and
add
insb
sbb
repz
imul
fidivl
cmpsb
inc
out
or
stos
push
xchg
cld
sub
jb
push
out
add
add
or
add
sbb
push
arpl
orb
sbbl
fstpl
or
cmc
mov
fcmovbe
sarl
sbbl
stos
clc
out
xchg
scas
xchg
mov
pop
xchg
daa
dec
xor
adc
test
jno
mov
mov
mov
or
ss
imul
jecxz
scas
or
jge
movsl
cltd
sbb
mov
mov
push
ss
clc
out
stos
xchg
cld
imul
adc
call
sbb
movl
pop
sbb
push
sub
in
xor
lods
sahf
arpl
jle
cmpsb
mov
insb
cmp
or
pop
add
jge
push
xchg
cmp
inc
dec
add
mov
imul
sbb
insl
inc
mov
push
cmp
pop
adc
mov
and
push
std
pusha
inc
fistpl
mov
shll
sarl
ljmp
or
dec
jnp
aam
push
ret
mull
arpl
add
mov
mov
loop
cmpsb
mov
int3
sbbb
fbld
sub
subps
mov
jae
mov
or
pop
cmpsb
dec
test
imul
push
js
xchg
sbb
cmp
les
fsubp
pop
je
in
cmpsl
adc
shr
and
mov
jl
scas
lods
or
sahf
sahf
xchg
pop
push
adc
fcompp
jbe
int3
testb
fldt
sti
pop
orb
and
dec
fldt
icebp
leave
ret
inc
rcl
adc
dec
and
push
mov
xor
push
mov
cmpsl
push
dec
mov
arpl
xchg
xor
jecxz
data16
hlt
xor
cltd
add
xchg
and
sete
fiadds
popa
push
cltd
adc
mov
xchg
scas
in
fisubrl
add
pop
mov
clc
int
sbb
sbb
xorb
push
and
dec
movsl
outsb
jg
mov
sub
jno
mov
or
mov
shlb
movsb
sti
adc
mov
push
das
rol
insl
shrb
mov
popf
out
int
std
xchg
or
lcall
add
xchg
or
adc
dec
mov
in
out
add
inc
ljmp
movsb
xor
inc
pop
cmp
cltd
ss
pop
lods
jns
or
iret
repz
xlat
cld
pop
xor
movsb
shrl
mov
pop
jl
push
or
in
out
notb
stos
popa
adc
dec
inc
jo
ret
add
or
jo
lea
cmpsb
xor
daa
jns
lods
ret
lret
cs
ds
xchg
cltd
dec
pusha
fildl
and
sbb
icebp
inc
data16
or
jns
mov
insl
sbb
inc
sbb
push
mov
or
pop
les
in
iret
xor
inc
sbb
cli
mov
dec
cld
addr16
outsb
movsl
js
inc
cmc
jle
out
mov
pop
push
xchg
es
inc
push
dec
mov
and
mov
arpl
jmp
cmp
jmp
xchg
out
int3
clc
dec
stc
test
xor
test
hlt
mov
jl
mov
adc
pop
sbb
push
pop
rorw
jnp
or
xchg
sub
dec
pop
cltd
lahf
mov
cmp
inc
dec
xchg
stc
in
sar
add
xchg
add
rorb
movsb
inc
in
rcll
sti
push
or
add
pop
mov
arpl
stc
bound
sbb
fadds
incb
sbbl
push
mov
pushf
mov
stc
popl
addr16
pop
lahf
dec
call
adc
pop
rcrl
std
fdivrp
cs
ret
push
mov
in
push
mov
in
idivb
mov
push
mov
add
sub
mov
mov
inc
pop
xor
scas
jnp
inc
xor
inc
and
addr16
std
jb
daa
push
cld
dec
in
or
cli
dec
and
repnz
jbe
sub
mov
jns
jl
pop
mov
dec
pop
pop
push
xchg
cwtl
and
cmpsl
mov
add
cmp
std
rcrl
xchg
ret
cmp
testb
lods
stc
test
stc
repnz
in
pop
ja
jmp
cmp
lds
out
dec
rclb
mov
push
mov
in
mov
sub
xor
dec
xor
xorps
jge
cmp
mov
pop
inc
add
mov
aaa
ja
dec
sti
fs
push
insb
out
cli
popa
push
lods
cmpsb
hlt
iret
sub
fmuls
and
mov
fldt
inc
cmp
shlb
je
mov
in
cmp
stos
clc
mov
sub
insb
fs
adc
xlat
cmp
xchg
pop
sub
mov
push
and
insb
push
testl
push
into
xchg
mov
or
sti
and
mov
fisubs
or
int
sbb
pop
popa
test
sub
jg
adc
pushf
jo
jg
pop
or
pop
outsl
jmp
in
mov
leave
cmp
mov
test
xchg
pop
ljmp
cmc
inc
mov
popf
es
insl
mov
popa
js
sbb
inc
inc
imul
pop
in
ficoml
andl
mov
push
scas
aas
cmp
and
ja
sbb
shrl
bound
mov
cmp
out
xchg
dec
fdivrl
jno
adcl
mov
adc
arpl
or
in
data16
push
aaa
pop
out
mov
lret
push
or
test
sub
stos
sbb
adc
xchg
adc
mov
push
push
adc
lret
jo
aad
xor
pop
inc
ret
add
jle
xor
cltd
lock
decl
lea
enter
dec
push
jge
or
cmpsl
mov
sbbb
and
sti
int3
imul
imul
data16
or
js
cmp
xlat
xchg
je
xlat
int
push
aaa
add
jmp
sub
pushl
int
jp
js
js
test
push
fsub
adc
push
xchg
aas
call
gs
inc
and
mov
inc
xchg
pop
cmp
inc
mov
test
xor
leave
xchg
jg
dec
jp
xchg
cmpsb
scas
ficompl
cmc
mov
std
mov
nop
iret
or
out
jp
cmp
xor
fsubs
push
js
jp
xor
sbb
push
cmpsb
pop
int3
adc
adc
mov
mov
jmp
cmp
repz
mov
lret
adc
sub
lock
icebp
jae
jno
mov
shrl
or
std
jnp
shll
lds
orl
cwtl
xchg
ljmp
fcomip
pop
or
jmp
roll
mov
xor
stc
lea
inc
call
lret
push
and
jmp
outsb
stos
cmp
lahf
inc
sti
sbb
push
aas
out
lock
mov
jnp
leave
mov
xor
push
clc
iret
and
sar
imul
in
shrl
sbb
xchg
xchg
es
cmp
mov
dec
inc
sub
insl
sub
xchg
jnp
cmp
addb
cmp
shlb
movsl
add
cmp
sbb
sbb
and
mov
mov
inc
mov
xorw
or
push
cmp
sub
xor
fisttpl
mov
jge
dec
mov
pushw
lahf
insl
xor
adc
inc
fcomps
pop
mov
xor
pushf
jp
ret
fwait
dec
inc
sub
inc
in
ficoms
xor
jmp
xor
pop
js
aad
outsb
inc
jle
out
shrb
call
repz
dec
mov
and
xor
in
jns
jns
in
push
xchg
cmp
push
mov
hlt
mov
sahf
xchg
stc
cmp
js
inc
test
mov
jae
jecxz
cmpsl
jo
xor
xor
pop
cmp
test
jae
dec
hlt
ljmp
push
lret
outsl
pop
imul
inc
inc
dec
cli
stos
daa
jno
pop
lock
cmp
fidivrl
ljmp
testl
sbbl
mov
sbb
pop
xor
lret
test
sbb
les
pop
in
cmpsl
xor
je
and
lods
aam
or
pushl
push
fldl
add
sbb
testl
aaa
inc
mov
pop
mov
ja
cmp
dec
shrl
pop
sbb
inc
mov
stos
push
mov
popf
mov
and
in
inc
xchg
pop
xchg
je
sarb
filds
sti
lods
fcoml
scas
mov
push
and
icebp
sbbb
adc
sbbb
or
jl
mov
and
mov
xchg
adc
jle
xor
cmp
es
mov
or
clc
sti
in
cwtl
dec
jmp
and
gs
cmp
adc
lds
aad
cmp
pop
popf
xlat
adc
cmp
rorl
sbb
xorb
push
mov
loope
or
jp
dec
out
push
nop
insb
jg
sub
pop
mov
mov
jb
into
sub
std
test
mov
repz
in
enter
and
jmp
sub
xor
adc
shll
subl
mov
ja
es
mov
mov
rcrb
movsl
ret
test
push
in
sub
not
adc
leave
or
inc
sarl
push
loopne
fiadds
outsl
pop
mov
mov
mov
dec
pop
push
fisubrs
xor
and
fwait
xchg
mov
aam
lds
sub
adc
xchg
test
sub
sbb
mov
daa
rcr
jg
inc
jl
jmp
test
or
stos
repnz
or
and
fcomps
ljmp
sti
xchg
outsl
jnp
inc
cmc
xchg
mov
aad
mov
pop
lds
mov
mov
bts
pop
and
adc
sub
lods
data16
pop
outsb
jae
lret
bnd
adc
add
stos
cmp
lcall
sbb
adc
outsl
clc
xchg
and
sbbl
stos
lds
fcompl
adc
in
xor
mov
loop
pop
dec
xchg
cld
pop
pop
cmp
lock
js
jmp
mov
cmp
cltd
pop
incb
fdivrl
dec
flds
repz
dec
or
imul
jnp
test
addr16
rcl
filds
jb
or
hlt
push
xlat
outsb
movsb
stos
dec
or
mov
xlat
sbb
cli
xchg
fcmovb
dec
test
mov
fidivrs
iret
mov
sub
sbb
sar
or
cmp
push
out
jne
inc
push
adc
test
push
sti
or
mov
testb
repz
mov
lcall
inc
ss
pop
lods
stos
jl
imul
dec
add
and
insb
xchg
dec
sbb
pop
addl
sbb
mov
lcall
aaa
mov
mov
addl
aaa
push
mov
inc
rclb
sbb
mov
imul
movsl
or
mov
popf
pop
int
and
daa
loopne
mov
dec
jg
aaa
cli
pushf
jnp
and
rorl
mov
or
cs
rorb
lods
pusha
pop
fsubl
dec
lea
jle
orl
pop
ficomps
push
pop
or
sar
push
pop
adc
xlat
xor
sub
mov
fcoms
cmp
jmp
and
popf
sbb
xchg
or
sbb
pop
adc
insl
xchg
jmp
mov
fisttpll
loop
pop
outsb
jnp
cmp
dec
popa
or
aaa
iret
movsl
jecxz
dec
por
nop
pop
sub
dec
mov
popf
mov
cmp
dec
mov
xchg
mov
adcl
sbb
sub
and
mov
sti
mov
loop
push
pop
add
pop
sahf
sub
out
mov
scas
repz
push
imul
test
jecxz
mov
or
pop
aad
aam
and
outsl
xorb
pop
adc
sub
lcall
xchg
mov
adc
cmpsl
fcoml
std
cmp
mov
testb
pop
add
pop
add
or
jnp
enter
shl
add
mov
icebp
rcrl
scas
jne
pop
je
sbb
jp
mov
mov
mov
insb
icebp
inc
xchg
xchg
dec
lret
inc
mov
outsb
out
es
jmp
pop
outsl
sbb
inc
cmpsb
inc
sbb
xchg
mov
xor
imul
sub
cmpsb
repz
xchg
shll
sbb
fimuls
pop
imul
fadd
nop
mov
cmpb
or
jns
mov
pop
roll
mov
mov
jle
and
hlt
loopne
shr
adcb
mov
push
ds
sub
ds
and
dec
imul
out
call
lods
pop
cltd
inc
pop
jg
iret
stos
insl
loop
mov
int
popf
aad
lret
jl
fisubl
pop
shll
cmc
std
fdivs
sbb
adc
pop
mov
orl
mov
clc
pushf
aas
mov
or
jmp
adc
outsb
addr16
mov
sbb
scas
xchg
icebp
out
ljmp
mov
stc
push
shrl
inc
pop
test
adcl
hlt
pop
ret
inc
repz
xor
or
clc
jno
lods
cs
mov
cmp
or
dec
mov
dec
out
jo
movb
lahf
xchg
test
xor
hlt
stc
subb
push
rclb
adc
lret
push
cmpsb
xor
mov
mov
fwait
jl
jo
add
scas
adc
test
inc
sub
fnstcw
xchg
sti
and
movsl
dec
test
mov
mov
test
adc
and
and
shrb
jge
push
lret
mov
lock
cmp
add
and
mov
mov
mov
fstps
outsb
sub
jecxz
xchg
add
lret
sub
std
xor
imul
data16
push
int3
repnz
push
inc
mov
test
and
add
inc
lret
lar
hlt
jg
in
push
lea
and
aas
divb
jl
push
cmp
mov
in
mov
mov
repnz
data16
lcall
sub
mov
fs
dec
xor
or
mov
jmp
repz
cmp
push
jb
or
adc
pop
in
cmp
notb
mov
adc
jle
stos
push
jb
push
icebp
xor
adc
and
call
subb
je
cmpsl
cmpsb
jmp
sbb
lcall
inc
and
std
mov
je
xchg
repnz
jle
fisubrs
test
stos
mov
sbb
fwait
add
movsl
mov
sahf
imul
test
inc
lret
and
pop
jnp
inc
push
sub
and
call
sub
cmp
inc
jno
inc
xchg
and
mov
stos
xlat
mov
xchg
sub
inc
cmp
lds
mov
stos
add
pop
adc
pop
inc
sahf
icebp
adc
cmc
test
shlb
loopne
and
cmpsl
lods
mov
movb
fcoms
andb
fstpt
aaa
or
lahf
dec
inc
or
test
mov
pop
lret
mov
stc
adc
jp
adc
pop
jmp
pop
xchg
jno
sub
jge
inc
dec
shll
adc
repz
sbb
pop
pop
je
and
dec
pushf
insb
out
add
sub
and
xor
adc
ficompl
movsl
inc
out
cmp
arpl
mov
shl
and
sub
jae
and
dec
xor
out
pop
insb
test
daa
fs
je
fldcw
fildl
mov
adc
enter
sub
mov
ds
stc
mov
aaa
popa
cmp
add
pusha
sbb
push
pop
sub
push
pop
cltd
cmp
in
sub
je
cmpsl
scas
fcmovnbe
pop
adc
lcall
mov
icebp
lahf
xor
inc
gs
push
mov
bound
push
inc
jb
jle
sub
mov
push
mov
mov
dec
daa
mov
lret
sahf
and
jge
test
stc
jge
mov
in
cmpsl
push
cmp
sub
push
movsl
test
pop
or
sbb
mov
sbb
sub
scas
mov
aam
dec
hlt
adc
xor
rcr
hlt
dec
shrb
iret
in
pop
ret
push
cmp
nop
sbb
cs
push
dec
dec
pusha
leave
addr16
or
cmp
pushf
lahf
or
test
je
lret
testl
jle
sbb
xchg
in
pop
fmull
dec
pop
pop
sub
fwait
or
repz
jo
in
scas
push
cmp
ss
adc
stos
enter
call
in
jmp
push
aaa
jg
into
add
cmpsl
stos
cmpsl
fists
mov
test
pop
imull
and
into
xchg
jp
xor
fnsave
mov
dec
pop
test
negl
jmp
inc
test
adc
dec
xchg
jno
inc
popa
push
push
stos
push
test
dec
mov
jbe
cld
mov
mov
adc
lret
in
pusha
clc
leave
aaa
popa
and
jp
outsb
aad
pop
incb
add
shrl
mov
dec
and
lods
imul
bound
pop
test
sub
sub
and
mov
sahf
push
jg
int3
insb
cmp
or
nop
sti
ret
mov
call
sbb
push
dec
js
add
inc
dec
inc
mov
lds
cmp
cmc
pusha
popa
push
aam
dec
jns
mov
rorl
mov
push
scas
sahf
cmpsb
test
test
out
lcall
popa
sbb
xchg
icebp
repnz
int3
mov
adc
loop
arpl
int3
fmuls
outsb
sbb
je
cmp
icebp
xchg
jbe
lods
out
sbb
sbb
cmp
push
xor
jp
lahf
mov
out
in
hlt
hlt
enter
lds
das
aam
test
dec
cmp
pop
sbb
xor
push
jae
push
out
out
xor
jge
jg
jp
inc
mov
xchg
test
imul
das
dec
sbb
pop
mov
fadds
loop
sub
pop
fucom
or
out
out
cmp
jp
dec
jge
popa
mov
mov
imul
push
out
jl
xor
mov
xorl
sbb
jg
adc
pop
js
jns
cli
mov
inc
sarl
sbb
push
daa
mov
jnp
xchg
xor
ds
push
inc
mov
mov
cmp
or
sub
inc
icebp
mov
push
pop
scas
xchg
cmp
in
subl
nop
adc
imul
stc
test
loope
aas
dec
pop
dec
cmp
inc
sub
adc
ret
das
loop
dec
lcall
movsl
mov
stc
xchg
ja
es
int3
fbld
inc
xchg
std
pop
movb
orl
rcrl
imul
fistl
push
sbb
jbe
add
jo
cwtl
in
sub
movsb
push
adc
pushf
mov
jnp
lret
xor
fmul
or
int3
pop
daa
insl
cld
data16
in
and
ja
mov
mov
lret
gs
or
popa
xor
mov
inc
movl
cvtps2pd
movsl
in
lret
fidivs
cwtl
icebp
xchg
mov
xchg
cmp
push
insl
cwtl
fstps
sarl
xor
fists
jge
cmp
nop
sub
adc
push
dec
and
jecxz
or
or
or
adc
adc
loope
push
lods
xor
test
movsl
add
js
adc
sbb
scas
xchg
push
hlt
pop
out
push
sbb
divl
pop
or
mov
mov
pushf
rcrl
mov
mov
push
out
dec
popa
cli
pop
add
mov
jns
lds
add
push
xchg
cmc
mov
ds
adc
mov
aad
outsb
mov
dec
stc
add
push
outsl
pop
mov
cmp
mov
insl
in
mov
jnp
push
test
adc
data16
mov
sarb
adc
xor
movsl
lods
inc
enter
pop
mov
popa
out
js
cs
repz
addl
push
lret
pop
cmp
test
push
mov
and
dec
pop
jle
dec
push
lret
sbb
into
xor
jg
mov
movsb
adcl
cmp
cmc
adc
rorb
scas
sub
testl
mov
pop
push
into
lahf
sti
dec
sub
fadds
xor
xor
rcll
leave
ret
cmp
iret
arpl
jmp
popa
test
adc
scas
sbb
xor
adc
shll
cmp
lods
jb
pushf
sub
and
mov
subb
dec
ffreep
fwait
jno
or
in
movsl
out
add
lret
xchg
fcomip
sub
inc
sti
mov
mov
sub
inc
xor
lods
xchg
pusha
movsl
test
xchg
xchg
into
and
pop
cmpsb
mov
std
shlb
add
ds
inc
or
lret
mov
in
fcomps
mov
scas
leave
push
add
scas
sti
cmp
lds
xchg
shrb
stos
shlb
or
pop
xchg
test
or
cld
iret
add
push
push
mov
cwtl
cmpsb
fucomip
sahf
dec
rclb
insb
loop
cmp
int3
add
divb
jb
lahf
lock
inc
jmp
imull
lods
cmp
cmpsl
mov
sbbb
cmc
jge
cld
push
sub
movsb
or
pop
adc
lds
lods
add
ljmp
arpl
test
bnd
sti
pop
scas
mov
xchg
mov
lods
dec
js
inc
jle
fisubrs
xchg
mov
ss
adc
cmp
mov
pop
adc
mov
and
push
loope
cltd
daa
ja
add
sbb
dec
js
mov
loop
pop
jmp
ja
mov
mov
and
mov
ffree
cmpsl
std
push
xchg
cmp
fldl
adc
push
or
sub
mov
std
out
inc
stos
push
inc
add
jecxz
fbld
sbb
arpl
movsb
mov
jne
ds
push
out
xchg
imul
cmp
adc
sbb
mov
aad
add
inc
pop
sub
lret
push
mulb
sti
inc
addl
cmpb
test
inc
jnp
repnz
add
lret
mov
je
test
dec
sbb
sub
sahf
adc
pop
insb
ficompl
add
insl
cmc
adc
add
addr16
dec
fsubrs
sbb
inc
rcr
stos
jb
inc
mov
dec
pop
adc
test
gs
dec
and
out
push
shll
loop
addr16
jle
loop
out
adc
and
or
lods
cwtl
jmp
push
fldt
repnz
bound
mov
repz
adc
sub
add
xor
dec
pop
popa
movsb
push
and
cmp
xchg
stos
xlat
test
cmp
mov
or
cs
gs
das
ror
les
pop
mov
fstpl
leave
outsl
inc
cmc
pushw
inc
nop
adc
push
push
fisubs
xor
fsubrl
mov
sahf
sub
dec
in
adc
inc
lret
loopne
jnp
mov
add
pop
sbb
jb
daa
xor
push
mov
adcb
inc
cmpsl
xor
xchg
and
in
cmp
or
pop
loop
mov
shrl
in
shl
xchg
inc
in
sbbb
adc
dec
xchg
pop
loope
icebp
scas
out
cmc
mov
in
lret
pop
mov
shll
jnp
push
xor
sub
std
scas
enter
fsubrs
inc
inc
dec
cltd
adc
daa
lods
sahf
sbb
xchg
test
mov
insb
xchg
fldl
add
insb
cwtl
movsb
push
leave
decb
adcl
cli
inc
in
pop
mov
cmp
jne
fnstcw
imul
bound
psubd
mov
dec
test
and
mov
xor
cwtl
into
jmp
sub
inc
mov
jae
jae
rcrb
movsl
or
in
cmp
or
hlt
mov
cmc
sbb
ret
cmp
into
loopne
cmp
addr16
push
test
push
mov
jp
jg
stos
xchg
xchg
ds
mov
mov
in
imulb
ss
cmp
out
jecxz
lods
mov
stc
sbb
push
scas
cltd
gs
loopne
push
mov
and
cmp
add
pop
jecxz
lret
inc
out
pop
xor
jbe
test
mov
adc
push
es
aaa
test
cmp
in
sar
loope
xchg
sbb
aad
enter
jb
xor
dec
out
sbb
adc
xor
ret
jnp
fiaddl
jns
or
add
sbb
rcll
nop
dec
pop
dec
pop
sbb
pop
into
icebp
push
xchg
adc
sub
xor
fwait
jne
daa
xor
xchg
jae
dec
call
outsb
lea
xchg
es
xor
fistl
xor
rcrb
scas
jnp
mov
test
mov
mov
outsl
mov
inc
ja
aas
lock
jno
or
sub
jno
shlb
sub
mov
jae
sahf
imul
fwait
xchg
xor
test
push
xlat
sbb
jge
int3
dec
hlt
cmpsl
xchg
dec
add
dec
sbb
stc
push
push
lret
ret
mov
mov
jp
in
std
dec
addr16
cmp
pop
pushf
add
xchg
push
adc
andb
imul
jg
mov
loope
cwtl
int
ja
push
mov
jg
icebp
cwtl
icebp
xor
movsl
sbb
inc
sbb
dec
adc
faddl
stos
xchg
sbb
in
inc
fdivs
ljmp
sub
push
add
jecxz
or
loope
scas
jl,pt
pop
out
decl
call
fsubrl
in
xchg
sbb
xchg
gs
mov
pop
jno
cmp
push
cmp
push
xorl
out
test
mov
pusha
mov
call
xchg
xor
push
jge
movsb
or
sbb
dec
push
sub
aaa
or
jnp
pop
push
cmp
dec
cmpsl
push
je
dec
jbe
cmp
sbb
sub
pop
and
lahf
mov
int
fst
cwtl
push
aad
sbb
xchg
xchg
or
mov
aam
out
movsb
cmp
add
lods
lret
in
xchg
mov
adc
sub
loop
movsb
push
mov
pop
ds
xor
dec
dec
xchg
sub
xor
jp
fnstcw
push
inc
mov
in
xchg
ljmp
adc
sub
dec
pop
lock
mov
mov
lret
jge
sbb
aaa
test
ja
jg
mov
gs
ljmp
or
lahf
inc
jg
lret
xchg
loope
out
call
mov
dec
loop
sub
pop
bound
cmpl
fscale
ja
rcr
jmp
out
xlat
push
mov
push
fisubs
xchg
pop
jge
mov
inc
sub
jp
dec
fistpl
sub
dec
repz
push
push
mov
std
test
gs
lret
mov
inc
test
inc
outsl
out
lods
cmp
jns
ret
pusha
ret
in
in
into
rclb
mov
movsl
jmp
mov
inc
adc
outsb
enter
xor
into
lret
hlt
aam
mov
lock
stos
pop
sub
cld
stos
jb
sbb
mov
jmp
sbbb
add
mov
dec
pop
xchg
mov
sbb
leave
dec
insb
push
sub
lea
loope
or
mov
jb
push
testl
and
out
mov
and
test
sbb
add
movsl
jge
int
sbb
ficoms
push
mov
mov
jo
test
and
dec
loope
fnstcw
cld
in
or
push
dec
pop
fdivp
jnp
sbb
push
shlb
xchg
in
push
and
adc
cmp
jo
mov
sub
aaa
xor
clc
dec
sbb
mov
imul
cli
lds
jne
sub
fldt
sbbb
adc
add
adc
sbb
outsb
mov
cmp
mov
dec
sbb
cmc
popf
cmp
mov
lods
jns
aaa
addl
pop
or
in
push
movb
mov
push
fsubrl
jle
cmc
mov
in
xchg
sub
dec
in
jb
and
outsl
stc
shll
mov
sbb
jmp
mov
inc
jbe
xchg
dec
sub
repz
sarb
leave
inc
out
pushw
adc
or
inc
xor
in
xor
hlt
lret
cmpsl
mov
cltd
rcll
jge
pop
adc
repnz
andb
out
ja
outsb
icebp
sbb
cmpsl
adc
std
mov
mov
mov
std
pusha
adc
xchg
ds
rcrl
minps
sbb
imul
push
fldenv
dec
fldl
dec
and
jecxz
pop
in
xor
jno
cmp
mov
sub
test
mov
pusha
push
movsl
loop
sub
mov
sub
sub
ret
mov
mov
shrl
testb
fdiv
sub
xchg
test
insl
shll
and
adc
pop
arpl
xor
mov
jns
sbb
shll
sub
sub
fcomi
std
fcmovu
jmp
iret
in
imul
test
aaa
notb
adc
xchg
mov
jle
xlat
or
ucomiss
mov
nop
repnz
mov
out
gs
daa
enter
or
stos
std
xchg
ret
adc
mov
sub
das
std
pop
jge
mov
insb
js
faddl
adc
xchg
cmp
test
nop
insl
push
and
fbld
addr16
ljmp
xor
cmp
inc
mov
inc
or
shr
lcall
xor
lods
mov
sub
test
xor
xor
outsb
pop
adc
ret
cld
mov
inc
aad
mov
inc
mov
cli
cmp
and
dec
sub
stos
dec
inc
dec
cli
das
mov
sub
inc
xchg
adc
jbe
js
call
in
mov
pop
shrl
ret
fldl
jmp
xchg
shlb
je
mov
inc
movsb
aaa
sub
sub
lods
or
adc
cmp
ffree
jnp
adc
repnz
jb
in
inc
cs
or
imul
dec
outsb
in
pusha
sbb
mov
mov
xchg
icebp
loop
arpl
in
ss
xlat
mov
lcall
dec
mov
push
inc
out
push
adc
dec
movsb
lcall
jl
cmc
sub
lds
cmp
mov
rcll
xor
pop
adc
scas
fcoms
adc
cwtl
mov
mov
iret
cmc
mov
int3
fildl
out
jno
add
lock
fnstsw
lcall
and
popf
nop
mov
idivl
adc
or
or
jo
scas
lods
aas
test
fbld
ret
call
js
subb
mov
ret
aas
cmpl
imul
inc
mov
sbb
or
pop
or
mov
andl
int
dec
lahf
in
dec
dec
icebp
xchg
jae
xchg
aam
sbb
sub
xchg
push
inc
in
movsl
bound
dec
mov
aaa
test
dec
sub
sbb
subl
sub
xchg
lods
sbb
cltd
jne
ja
mov
repz
xor
stos
mov
push
in
inc
cmp
mov
adc
lds
add
shlb
test
inc
xor
cwtl
in
xchg
call
push
ret
ljmp
push
cmp
mov
and
das
mov
add
pop
ffreep
stos
jmp
cmpsb
cmp
fstpt
jmp
pop
pop
sub
sbb
inc
scas
test
mov
mov
mov
jnp
aam
or
int
pop
xorb
ljmp
fs
pop
xchg
inc
dec
aas
and
dec
push
in
test
cld
mov
or
mov
push
xchg
jle
lock
je
cltd
jecxz
mov
ret
or
dec
jb
in
dec
push
jbe
sub
push
ja
bound
mov
push
insb
push
sub
imulb
sbb
outsl
jb
push
sbb
mov
sti
cmp
hlt
add
fisttpll
add
into
fidivrs
push
and
pop
sbb
push
dec
xchg
iret
jbe
or
stc
mov
iret
push
data16
mov
dec
pushf
or
pusha
xor
pop
push
rcrb
jp
mov
out
lret
jnp
lahf
sbb
mov
roll
dec
into
in
xchg
cltd
xchg
jle
mov
mov
and
xchg
xchg
sbb
test
inc
outsl
int
jp
in
fcmovnb
jg
movl
and
stc
call
xchg
popa
mov
adc
roll
leave
bswap
xchg
inc
and
or
add
hlt
mov
in
pop
push
push
push
or
jl
pop
mov
push
jecxz
mov
dec
cmp
outsl
mov
lods
add
pop
sub
out
fs
insb
dec
test
mov
xor
pop
movntps
test
adc
dec
xchg
rcrl
xchg
out
je
or
cmc
enter
mov
into
lods
jmp
mov
xchg
jg
dec
xor
cmovb
cmp
and
lods
movsb
sbb
dec
pop
jmp
ret
adc
arpl
gs
fdivs
dec
insb
push
test
andl
stc
mov
sub
scas
jmp
sbb
aaa
cmp
mov
mov
inc
xchg
pushf
push
xchg
push
lds
inc
xchg
flds
ljmpw
pushf
or
aad
mov
mov
add
adc
inc
gs
mov
jp
das
adc
stos
adc
mov
add
addr16
sbb
inc
jmp
stos
push
adc
adc
into
sbb
sbb
pop
call
gs
daa
mov
xor
inc
or
cmp
jecxz
mov
sub
mov
pop
push
lock
adc
or
add
nop
jnp
cld
mov
cmc
inc
std
mov
jp
out
out
pop
outsw
xchg
sub
jg
or
test
shll
pusha
sbb
mov
dec
fstpl
ja
int
popf
adc
rorb
hlt
dec
mov
xlat
and
cmp
pop
popa
ljmp
xchg
iret
dec
ja
pop
psrlq
adc
inc
lcall
dec
dec
sub
jne
icebp
leave
outsl
push
mov
stc
ret
inc
ret
insb
and
push
or
js
mov
aad
xchg
in
lods
fsts
cld
test
jno
dec
jne
or
dec
xor
inc
push
lods
jno
dec
test
dec
pop
push
lock
xchg
inc
mov
inc
inc
push
jae
notb
test
je
stc
movsl
fldenv
test
lahf
in
sahf
jns
mov
imull
push
dec
subb
adc
cmp
addb
mov
cmpsb
stos
pop
adc
loope
sbb
fistpll
pop
aad
ret
pop
xor
test
dec
fldcw
mov
adc
test
sbb
popa
sbb
imul
xor
pushf
xchg
push
stc
mov
or
mov
sbb
data16
gs
inc
jle
adc
dec
ss
loope
fs
jmp
hlt
int3
addb
mov
aas
cmpsb
sub
push
fimuls
dec
icebp
ret
les
stc
out
jge
ja
int
sub
loope
jge
cmp
pop
jo
and
mov
lds
mov
sbb
jb
pop
pop
push
dec
lods
and
jge
add
loop
xchg
daa
sbb
jmp
stos
jle
push
mov
pop
out
mov
push
sbb
push
ja
popa
inc
inc
das
mov
testl
pop
cld
sub
add
mov
or
loope
repz
sahf
lock
inc
or
mov
mov
outsl
sahf
sbb
sub
das
sbb
call
sbb
dec
fwait
ja
jbe
inc
lahf
in
sbb
push
mov
cmpsb
icebp
mov
jno
xlat
dec
das
mov
mov
inc
sub
mov
pop
dec
sub
mov
mov
ds
push
stc
sarb
leave
in
push
cmpsb
xchg
repz
pop
lret
daa
sbb
xor
aam
sbb
add
cmp
aam
xchg
dec
xchg
mov
inc
jle
std
popf
jle
incb
add
sub
mov
mov
aas
cmp
pcmpeqb
loop
call
into
mov
in
cwtl
stos
mov
shld
mov
negl
cli
push
inc
mov
in
fdivl
pop
imul
test
mov
jo
add
xchg
push
xchg
mov
or
xchg
sub
loope
aam
nop
leave
pop
repz
xchg
mov
adc
push
pop
test
ja
dec
test
adc
add
push
mov
pop
push
in
les
add
outsl
inc
pop
mov
jno
xchg
mov
jns
inc
push
mov
rol
jg
inc
jecxz
add
negb
test
inc
int
dec
call
add
add
out
jp
lahf
xchg
dec
jb
pop
jb
subl
out
add
rcrb
push
jmp
cmp
rcr
and
test
lret
jle
jno
cltd
xor
mov
test
pop
lcall
imul
ss
frstor
int
push
out
fs
xor
repz
mov
jl
cmp
pusha
rcrb
jge
cmp
mov
sbb
mov
adc
add
leave
test
mov
inc
insl
mov
xorb
out
jmp
ds
mov
sbb
or
jbe
and
shlb
lea
sbb
and
shrb
pop
and
cmp
shll
scas
pop
lock
sti
les
aad
fdivrl
inc
nop
loop
jae
scas
jecxz
nop
sbb
push
les
cmp
xor
leave
inc
inc
pop
and
sti
mov
sbb
arpl
mov
pop
daa
pop
testb
ds
adc
das
aas
arpl
jg
fildl
xchg
sti
in
lcall
enter
stos
mov
push
mov
mov
pop
lods
cmp
mov
adc
jae
lods
test
test
mov
orl
movsb
mov
insl
dec
or
mov
std
incb
inc
jne
lret
mov
inc
jo
sti
push
sbb
rclb
mov
popa
mov
jne
bound
jge
sub
and
mov
jbe
data16
push
int
and
push
into
xchg
sbb
jmp
leave
sbb
daa
fidivl
mov
sti
or
dec
pop
inc
xor
jnp
sbb
sbb
jno
lahf
out
cmc
mov
cmp
jl
add
repz
adc
push
aaa
or
cltd
shrb
pop
dec
adc
push
or
fistpl
subb
lods
andl
fs
sub
adc
push
rclb
or
cltd
lock
jne
push
stos
cmp
in
addr16
jge
add
or
lods
repnz
mov
ja
mov
cmpsl
mov
xor
mov
push
subb
mov
jb
push
mov
iret
dec
addr16
cmp
pop
adcl
mov
leave
test
mov
or
xchg
xor
xchg
das
aas
lret
xchg
repz
mov
cmc
scas
int3
mov
sub
shll
test
mov
mov
pop
cmc
sub
arpl
and
test
js
mov
loope
imull
clc
aas
pop
lods
call
cmpps
sbb
lods
adc
clc
sti
std
loopne
mov
sub
icebp
mov
add
pop
out
outsl
cmp
call
pop
mov
loop
aad
mov
cmpsl
nop
sbb
clc
xchg
aam
xchg
jmp
out
mov
repnz
imul
in
cs
jp
mov
jmp
or
call
jecxz
repz
inc
repz
scas
imul
add
imul
xor
ja
outsl
in
add
in
cld
int
test
push
push
and
pop
adc
lret
in
dec
mov
adcl
lock
mov
cld
pop
lahf
int
mov
data16
sub
cwtl
xor
stos
xchg
and
mov
adc
fildl
cmp
dec
ret
inc
jge
mov
ds
ljmp
cld
movsl
cli
out
push
mov
stc
scas
rolb
and
gs
add
and
nop
icebp
mov
mov
and
inc
iret
mov
fidivrl
add
lock
adc
mov
fwait
in
arpl
sbbl
dec
stos
fidivl
aad
inc
mov
sbb
popf
ret
or
xchg
pop
std
leave
leave
xchg
shr
sbb
mov
fisttpl
call
pop
jp
lock
ficoml
incl
push
fidivl
adc
jnp
insb
xchg
out
sbb
jae
lds
rcrb
xor
and
add
adc
or
dec
dec
test
sbb
sbb
mov
dec
add
cmpl
mov
mov
adc
mov
push
sub
aad
inc
or
jbe
shl
test
xchg
mov
popa
push
add
or
cld
cmc
ja
sahf
mov
inc
pop
imul
roll
mov
add
and
lds
pop
jl
sub
mov
push
and
fwait
jp
popf
add
fnsetpm(287
clc
mov
jne
add
add
mov
mov
fiadds
pop
dec
pushf
int
dec
faddl
lcall
cld
adc
xchg
insb
ljmp
and
das
sti
bound
rolb
push
and
xchg
or
loop
sub
pop
or
jae
pop
adc
sub
iret
push
mov
inc
xor
sub
ficomps
inc
sbb
fdivrs
popa
mov
sub
mov
rcrb
inc
insl
xlat
aas
stos
out
inc
shll
push
lcall
sbb
int3
pusha
xchg
cmpsb
lea
mov
push
xor
cld
test
push
xor
xchg
andl
mov
mov
int
and
xchg
in
hlt
sub
inc
mov
loope
jge
mov
mov
call
inc
shll
cmp
push
or
iret
ja
push
lret
xchg
or
stos
cmp
inc
inc
lea
and
jl
xchg
sub
and
xchg
xchg
push
pop
mov
sbb
imul
test
in
daa
je
pusha
push
in
cmpsb
sti
jge
cli
xchg
sbb
adc
lock
std
push
add
sahf
mov
mov
shll
jb
inc
fmuls
daa
adc
xchg
test
std
idivb
mov
pushf
mov
lret
jmp
mov
and
push
cmp
xor
cmp
lcall
mov
nop
mov
cmpsb
bnd
push
int
and
sbb
mov
or
cli
dec
xchg
jecxz
movsl
xchg
mov
ljmp
roll
mov
add
les
adc
pop
and
jno
icebp
and
clc
ss
dec
jp
adc
scas
repz
arpl
imul
xor
fcmovu
jnp
sti
inc
inc
adc
imull
mov
rolb
addl
jnp
lahf
and
add
jbe
push
ja
push
cmp
mov
std
call
xchg
insl
movsl
cmpsb
jle
cli
enter
xchg
divl
fimull
bound
xchg
jmp
cmpsb
sub
lret
mov
das
rorl
loope
mov
xorb
xor
add
jne
ret
cmpsb
outsl
or
mov
xchg
cmpsl
pop
call
in
xchg
stos
xchg
add
dec
sub
push
test
pushl
ss
daa
inc
cmp
inc
inc
mov
or
xchg
sub
stos
xor
pop
mov
xor
pop
je
cmpsb
insb
push
imul
push
jnp
dec
jge
daa
shr
lds
dec
xchg
lods
aas
imul
push
in
cmp
mov
syscall
sub
add
inc
dec
adc
jae
int3
or
ret
adc
add
out
mov
lcall
dec
insb
sub
mov
inc
int3
cmc
push
xchg
ret
and
mov
add
pmaxsw
and
or
loope
pushf
aad
xor
jecxz
pop
aas
push
test
mov
fildll
dec
idiv
xchg
adc
push
xlat
push
or
xchg
scas
call
ror
lds
out
inc
add
bound
pushf
decl
in
daa
xchg
xor
xchg
test
xchg
push
mov
xchg
lret
xchg
inc
sbb
movsl
or
test
cmp
stos
xor
mov
and
cmpsl
sti
mov
adc
sbb
xlat
pop
insb
mov
popa
pop
mul
mov
test
cmp
testl
inc
lods
push
ret
sub
xor
cmp
fnsave
pop
pop
xchg
leave
movsb
add
pminub
mov
roll
sub
lret
sub
les
jmp
call
push
mov
mov
dec
sbb
lcall
push
pop
in
mov
addl
sbb
mov
dec
xor
sarl
cwtl
xchg
xchg
aas
jno
icebp
ret
xchg
lahf
in
sbb
lret
dec
andb
out
pop
fldt
outsb
adc
xor
jnp
aas
cltd
loopne
sub
or
jno
push
je
shll
ss
xchg
ror
sbb
mov
stos
mov
fsubr
push
mov
scas
sub
mov
scas
add
cmc
mul
cmp
or
iret
xchg
pop
push
and
jg
cmp
pop
hlt
jecxz
push
es
dec
xchg
fsubp
xchg
sarb
rcrb
mov
or
in
jne
jg
mov
inc
xchg
stc
fiaddl
sbb
pop
lret
push
stos
dec
addr16
push
sbb
ljmp
pusha
jge
or
cltd
daa
sar
out
and
pop
mov
adc
mov
adc
cmp
ja
mov
fistl
fisttpl
cwtl
mov
mov
jns
inc
add
jo
push
lea
mov
jmp
fdivrs
and
sbb
or
in
test
dec
adc
enter
add
mov
popa
jno
mov
insb
repz
into
out
fisttpl
sbb
sbb
mov
adc
push
popa
cltd
dec
test
pop
fstpt
je
pmulhuw
rcll
inc
xchg
mov
enter
sbb
daa
mov
roll
sbb
xlat
ret
adc
ja
test
jns
jo
gs
push
jl
dec
adc
cltd
mov
ficoms
jno
and
in
out
push
fimuls
call
movsl
pop
inc
mov
or
push
mov
inc
add
add
xor
mov
jo
mov
push
sahf
mov
add
adc
in
pop
xchg
jae
or
jle
mov
mov
aam
sub
sbb
push
ss
sbb
faddl
xor
outsl
and
int
aas
jle
dec
lods
cmc
adc
jo
les
shll
mov
add
inc
add
jo
fdivr
pop
js
jmp
cld
ret
xchg
adc
push
clc
test
dec
outsl
je
sbb
sub
cmp
cmp
lock
pop
movsl
std
mov
idiv
popf
add
inc
push
popf
xor
sub
jo
xchg
inc
into
in
jmp
adc
stc
pop
jno
fiadds
cmp
hlt
dec
sbb
repnz
jb
rcrl
ljmp
xor
lret
fstps
pop
lahf
aam
movsb
mov
jmp
jp
mov
mov
jne
jmp
mov
sti
rep
or
sbb
push
pop
ret
mov
dec
ja
pop
push
xchg
xchg
subl
ss
enter
xlat
sub
sbb
sub
sub
das
and
jl
and
shl
aad
roll
out
addr16
xchg
cld
sub
cs
into
xor
popf
bound
cwtl
fstps
or
loopne
out
das
cmpsb
jo
mov
and
pushf
or
mov
das
fcmove
inc
adc
ret
cmc
sub
dec
leave
dec
or
cmp
fsubrl
xchg
or
jecxz
push
stc
sub
or
fnstcw
mov
pusha
fwait
mov
push
jg
cmp
add
cmp
vmread
enter
mov
jb
and
nop
xor
xchg
add
sub
insb
dec
push
fdivs
push
sbb
jmp
mov
xchg
gs
mov
in
int
pop
pop
and
aas
push
mov
dec
dec
shlb
dec
push
cwtl
nop
mov
mov
call
mov
cmpb
xor
fsubrs
inc
adc
out
pop
inc
stos
out
je
shlb
and
xorb
imul
inc
inc
xchg
xor
cmp
xor
dec
scas
inc
push
call
popf
jae
xor
or
test
sahf
jo
fisubrl
js
sub
jge
cltd
sbb
xor
aam
inc
lcall
inc
and
sub
jmp
mov
fldt
lahf
mov
pop
sarb
cs
outsl
xchg
loopne
push
aam
and
shlb
scas
stc
jne
pop
mov
cmpsb
lret
push
stc
movsl
xor
cltd
and
out
ficoml
mov
sbb
pop
push
sub
loop
hlt
mov
in
cld
inc
fsubrl
sbb
mov
popa
pop
sbb
gs
inc
xchg
es
jg
jge
jb
scas
xchg
imul
add
dec
sbb
shlb
jbe
mov
test
push
mov
mov
rol
inc
mov
rorb
push
cmp
sub
add
mull
cmp
outsb
aaa
test
push
sbb
or
jmp
or
in
jle
inc
sbb
scas
out
dec
popf
lds
inc
xor
les
or
xor
stos
cwtl
xchg
push
ja
jbe
sahf
or
and
xor
or
sub
push
add
adc
ret
add
mov
mov
pusha
sub
out
jecxz
cmc
int3
shrb
lds
cmc
push
adcl
mov
jo
mov
xchg
daa
sbb
jl
inc
lock
inc
ret
inc
mov
adc
cli
orl
adc
ds
in
inc
daa
xchg
dec
or
dec
repnz
repz
mov
push
mov
stc
pop
jmp
dec
ss
inc
scas
lcall
aam
inc
lea
inc
and
mov
cmpsl
rcr
outsl
push
sarl
or
insb
mov
adc
xor
std
and
cmpsb
jb
and
jecxz
and
cwtl
and
int
mov
mov
xchg
loop
jp
leave
cmp
call
adc
sbb
iret
int
popl
mov
fildll
outsl
push
jmp
xlat
cmpsb
push
pop
xchg
inc
adc
std
inc
mov
xchg
xor
xchg
xor
or
add
idivb
lock
jmp
xchg
pushf
sahf
adc
mov
ffreep
insl
mov
ja
enter
mov
out
pop
and
in
out
std
pop
aaa
inc
fildll
xchg
cs
add
and
popa
pop
stos
repnz
lods
mov
mov
pop
aam
inc
pop
jecxz
insl
mov
cs
in
dec
repz
std
or
aas
nop
in
and
ljmp
cmp
ror
mov
loopne
enter
loopne
orl
jo
shr
cmpsb
xor
inc
dec
pop
mov
mov
dec
test
icebp
test
out
cmpsl
xor
ss
mov
repnz
popf
decl
add
jns
push
jae
jg
add
es
int
aad
inc
pushf
out
push
mov
sbb
testb
inc
add
jle
dec
fadds
call
xor
iret
das
dec
mov
test
movsb
out
ljmp
lcall
xchg
dec
mov
sub
gs
xchg
rcl
int
mov
je
and
repnz
lret
add
xchg
adc
imull
inc
sbb
cmp
cmp
or
fimuls
cmpsb
dec
add
outsb
test
aaa
fcmovnu
inc
out
std
jae
in
in
xor
inc
call
and
pushf
xor
xor
inc
mov
add
mov
jb
test
sbbb
rorb
std
sbbl
xchg
test
mov
mov
leave
lods
rcll
or
out
fcoml
jne
mov
sub
leave
pop
cs
repz
add
mov
adc
cmpsb
mov
out
jne
pop
mov
or
sbb
pop
iret
add
dec
cmpsl
sbb
sub
add
pushf
out
or
dec
xor
mov
rcrl
pop
push
pusha
negl
adc
push
int
stc
sbb
xchg
sbb
xchg
jp
xlat
jno
movsl
scas
shlb
loopne
test
stos
aam
mov
in
mov
test
loop
jno
addr16
sub
mov
xchg
sbb
sbb
xor
fcompl
outsl
test
es
mov
inc
aam
mov
cmp
dec
sbbb
mov
cmp
add
enter
xchg
push
add
and
push
mov
aaa
mull
xchg
stos
mov
in
sbb
push
lret
js
sbbl
dec
movsl
xor
mov
push
out
mov
iret
inc
std
clc
or
mov
call
push
lods
add
rorb
aam
mov
cwtl
jmp
dec
sti
and
hlt
jo
cmp
pop
jmp
popf
mov
clc
repz
mov
in
std
rcrl
aaa
or
into
icebp
and
fbld
aas
xchg
mov
mov
push
adc
popa
jecxz
stos
dec
repnz
push
ret
shlb
mov
push
scas
inc
dec
mov
add
mov
insl
mov
arpl
and
lcall
adc
repnz
pushf
mov
ret
scas
jo
dec
rcr
xor
xchg
cmp
push
popa
stos
mov
xchg
mov
cld
mov
and
das
dec
repnz
in
cmp
mov
pop
lret
mov
xchg
push
popa
ja
mov
stc
rorl
cld
add
ljmp
pop
ret
jge
hlt
pop
and
aam
mov
rcll
sub
inc
pop
sub
ja
outsl
or
test
xor
mov
xor
scas
add
adc
xchg
lahf
repz
pop
xor
jae
movsb
adc
inc
test
mov
sub
or
push
xchg
clc
rcrb
daa
aad
hlt
jne
jno
add
roll
imul
inc
out
int
sbb
jg
mov
scas
popf
int3
add
xchg
inc
loop
fwait
mov
or
cmp
aam
jns
outsb
mov
ljmp
call
cmp
push
cmp
mov
mov
dec
popa
cmp
mov
sbb
shr
pop
stos
mov
fsubrl
add
xchg
in
sbb
cmp
mov
sub
adc
fimuls
aam
pop
jnp
out
outsb
stos
stc
sbb
mov
or
in
outsb
sti
sti
pop
into
add
lods
roll
sarl
jmp
xor
pusha
mov
imul
lret
lcall
dec
outsl
loop
jmp
into
push
ja
sbb
pop
adc
dec
cltd
shl
sub
cli
mov
jno
pavgw
push
pop
sub
or
xor
dec
into
mov
bound
test
adc
xor
mov
iret
sub
pop
sbb
push
and
mov
jns
aam
pop
xchg
fstl
imull
pushf
inc
cmpsl
add
jmp
dec
pushf
dec
popf
gs
mov
clc
adc
add
mov
adc
mov
clc
jno
int
push
and
mov
mov
call
mov
mov
fildl
mov
xor
cld
rclb
adc
orl
int3
addr16
mov
mov
insb
or
and
negb
out
sbb
jo
xchg
fldcw
popf
dec
aas
rcrb
sub
dec
or
xchg
movsl
fs
jmp
cld
mov
sub
movsb
dec
nop
mov
jge
xchg
cmp
dec
sbb
andl
mov
test
fsubrl
outsl
pop
loopne
enter
sbb
in
cmc
imulb
fildl
lods
lcall
mov
xchg
cmpb
push
mov
mov
xor
gs
shl
fldz
add
hlt
sub
js
jb
stc
imull
add
mov
mov
fdivr
lcall
popf
lods
xor
jle
cltd
adc
jnp
fsubs
outsb
stos
int3
sbb
fs
mov
call
out
sbb
lods
push
cmp
into
imul
add
lds
add
fimull
jb
xor
outsb
push
xor
add
test
add
jnp
outsl
scas
ss
pop
icebp
mov
addr16
scas
jnp
gs
testb
pop
mov
push
popf
es
xchg
sahf
fnstenv
mov
aas
dec
pop
test
pop
push
and
les
xchg
repz
push
adc
pop
iret
jl
lcall
sub
adc
ds
and
lock
xchg
popf
adc
mov
subb
push
gs
ret
pop
enter
cwtl
push
and
sub
dec
push
pop
testl
or
dec
jae
mov
std
jmp
push
cwtl
cmp
arpl
les
aas
or
push
xchg
cmp
cmp
cmp
or
cs
call
dec
dec
cwtl
mov
cmp
jo
or
jnp
jbe
jmp
mov
and
mov
test
mov
lret
cli
movsl
xchg
cmp
aam
and
lock
mov
xchg
adc
xor
push
outsl
stc
roll
sub
ret
fstpl
insl
xor
pusha
mov
mov
subl
add
mov
cltd
idiv
stc
scas
pop
sbb
mov
popa
stos
and
adcb
aam
in
xor
push
xchg
mov
mov
jns
jle
inc
or
icebp
dec
cmpsl
clc
sub
and
dec
push
lcall
and
push
scas
lcall
lcall
mov
or
jl
gs
xor
mov
xchg
lds
or
out
vpunpcklbw
push
outsl
lds
add
lea
pop
subl
gs
push
or
clc
test
or
repnz
js
sbb
mov
test
add
jae
popf
push
aad
shrl
mov
sti
xor
dec
repz
sahf
mov
leave
lock
sub
xor
mov
mov
mov
popa
mov
mov
movsl
mov
pop
sub
pop
sub
inc
lahf
jbe
xchg
lahf
leave
mov
sbb
pop
push
mov
mov
push
mov
mov
sub
cmp
addr16
xor
jne
hlt
pop
or
pop
hlt
rorl
dec
jmp
mov
pusha
jo
test
inc
push
int3
inc
cli
jg
xchg
cmp
push
sbb
jae
rcrl
punpckhwd
sbb
inc
pop
rol
ret
add
xchg
div
out
xchg
dec
test
inc
xor
pop
mov
dec
mov
mov
xlat
mov
cmpsl
test
xchg
cltd
fwait
pop
int3
xchg
push
ret
jle
cmp
mov
dec
out
cmp
inc
fs
js
xchg
jnp
nop
aas
les
sbb
mov
das
mov
xor
in
stos
fstpt
xchg
mov
inc
ret
pop
aas
jne
aad
cmp
rorl
gs
jle
out
inc
jo
fdivrs
jl
fisubl
xchg
movsb
ljmp
jno
sub
or
int
jecxz
pushl
or
lcall
inc
xchg
cld
enter
pop
pop
or
cli
sbb
subb
in
mov
mov
add
dec
imul
sub
scas
insl
jle
fisttpll
mov
loope
sbb
xchg
addr16
sbb
push
push
mov
nop
adc
or
test
outsb
shll
push
sbb
push
dec
mov
in
jns
add
add
jmp
sub
nop
xchg
dec
adc
ds
fst
imulb
mov
daa
push
movsl
xorl
aad
pop
push
push
xlat
es
or
add
sub
imull
cmp
and
fimull
pop
dec
jmp
adc
xchg
sbb
push
cmp
imul
xor
das
jo
and
mov
mov
or
push
sub
pop
fiaddl
lea
push
sbb
xchg
cmp
movsb
mov
xor
push
pop
pop
or
xchg
mov
adc
out
lret
mov
sahf
inc
pop
sub
jb
cld
divb
lcall
sbb
sub
mov
jl
outsb
cltd
movsb
ret
out
outsl
test
leave
push
xchg
out
sti
sub
pop
aam
aas
dec
sbb
push
aad
scas
sbb
and
je
inc
icebp
mov
or
out
dec
push
lock
sub
sub
fwait
scas
dec
xlat
les
push
or
les
mov
gs
inc
add
shl
dec
mov
orl
inc
and
gs
cmp
out
movsl
mov
jl
stos
in
xchg
xchg
popf
int
jge
mov
scas
mov
shlb
out
cmp
fidivrs
sub
ss
gs
cmp
lods
dec
inc
mov
mov
icebp
sbb
test
xchg
pop
out
ja
mov
lahf
jb
hlt
in
jecxz
shrl
push
mov
out
cli
push
jle
imul
push
dec
sbb
sbb
ret
movsl
call
fbstp
notb
arpl
dec
and
jp
mov
mov
sahf
push
push
daa
lods
mov
fs
aas
push
sub
cmp
pop
or
sarl
repnz
outsl
sti
mov
iret
mov
push
sbb
js
lcall
push
mov
or
stc
jge
pop
adc
pushf
jle
jle
adcl
sarl
test
cld
pop
daa
bnd
adc
nop
sub
movsb
cmpl
dec
jo
xor
mov
mov
out
sahf
fwait
jno
pop
cmc
das
imul
mov
add
cltd
adc
mov
push
xor
jb
sub
add
insl
fstp
ret
sbbl
test
test
mov
dec
sbb
cmp
jmp
inc
lock
mov
adc
and
jbe
mov
push
xor
or
mov
aas
push
fwait
add
ret
push
scas
shll
mov
arpl
push
push
push
pop
int
and
cmpsl
scas
fwait
sbb
sbb
in
adc
adc
subl
fld
pushl
lea
cmp
icebp
mov
aam
hlt
sbb
ret
and
inc
mov
mov
lods
push
mov
jg
pop
fdivrs
xorb
imul
arpl
icebp
int3
sub
xor
es
cmpsb
in
test
outsb
mov
dec
dec
mov
jl
out
ret
jae
repz
mov
ja
hlt
adc
ja
movl
pop
xchg
dec
sub
jbe
repz
aam
inc
rorb
xorl
mov
or
sub
sbb
mov
cmp
xchg
jno
lret
into
ss
outsl
test
cmpl
push
outsl
pop
out
push
dec
xchg
cltd
adc
pop
pop
mov
nop
push
fwait
push
push
addl
pop
pushf
cmp
aad
out
sub
mov
push
scas
sti
sub
jne
es
push
or
sbb
xor
push
pop
repz
mov
gs
dec
stos
in
mov
cmpxchg
ret
daa
xchg
and
dec
scas
jp
popw
and
clc
cli
aas
inc
cwtl
sub
pusha
adc
les
jno
mov
jge
sbb
ljmp
rcll
je
stc
int
aam
inc
rcl
minps
inc
jp
mov
fldl
ja
adc
jp
xlat
mov
push
aad
es
xor
sqrtps
and
or
bound
add
rolb
sub
inc
dec
inc
mov
bound
ljmp
cmp
xchg
mov
fcoml
jno
stos
cmp
hlt
cmp
popf
push
xor
or
or
lea
adc
aam
adc
sub
js
sbb
rclb
inc
fisubrs
xlat
sbb
lahf
push
adc
xchg
mov
clc
mov
loope
iret
enter
sahf
cmpsl
push
fimull
xor
imul
adc
cmp
imul
sbb
adc
inc
call
ljmp
xlat
cltd
add
enter
jge
jge
mov
inc
movb
movsl
jb
inc
pop
test
aas
inc
sbb
xor
mov
outsl
ret
iret
pop
mov
sysret
jl
das
ja
cmp
cmp
jge
pop
or
frstpm(287
aad
xor
pop
mov
call
sbb
xorl
fnstsw
push
push
mov
or
call
mov
idivl
scas
xor
cmc
push
push
xor
cmpsl
out
test
out
xchg
push
aad
ja
ret
mov
aam
push
das
lcall
leave
clc
std
jmp
mov
das
rcrb
jne
call
pop
sub
xor
lret
jns
mov
add
inc
add
jecxz
and
repz
push
mov
mov
in
jmp
scas
fimuls
jle
xchg
jl
sub
mov
jmp
sub
mov
aam
mov
inc
cmp
iret
addr16
jns
ret
fucomip
push
mov
jno
mov
fwait
xchg
or
inc
int3
mov
dec
push
sahf
mov
repnz
dec
pop
mov
cld
mov
jae
ret
out
popl
das
sub
mov
mov
aas
and
inc
add
scas
movsb
adc
popf
cmp
mov
sbb
or
std
and
in
icebp
lods
inc
push
push
stos
call
fs
pop
in
add
ret
nop
and
lret
das
lcall
aas
fildll
jle
inc
lret
out
imul
or
jns
xorb
jle
mov
xor
jno
or
push
in
mov
std
leave
or
mov
sub
sbbl
leave
aad
inc
movsl
mov
push
inc
fwait
mov
fdivs
imul
lret
loope
loope
popa
pop
lods
and
adc
clc
fsubrp
js
xchg
xor
or
add
pop
jmp
push
dec
xchg
mov
xor
cwtl
jge
mov
dec
push
test
sub
adcb
adc
je
xchg
xchg
mov
scas
lock
insb
andb
adc
xchg
jg
adc
out
mov
int
mov
push
js
jno
and
pop
out
adc
jecxz
fimull
int3
js
scas
adc
push
adc
hlt
mov
pushf
gs
and
ret
outsl
dec
mov
mov
das
pushf
push
mov
test
mov
out
pushf
pop
or
and
aad
cmpb
lods
loopne
sbb
lahf
outsb
out
sarl
mov
call
leave
pop
sbb
or
push
mov
or
and
in
inc
and
scas
inc
incl
mov
cmp
dec
gs
pop
xor
popl
jg
adcb
call
xor
mov
pop
vpmaxub
push
push
add
mov
and
fsub
ljmp
adcl
addl
sub
inc
push
push
jb
loopne
jb
jp
stos
mov
mov
pop
es
lods
xlat
jmp
mov
mov
js
mov
mov
js
add
adc
pop
xor
pop
mov
add
xor
scas
maxps
adc
push
call
fstl
xorb
or
lds
and
test
add
ds
out
dec
stos
fs
mov
push
push
fmull
cmp
addl
leave
lcall
cld
sahf
nop
or
mov
mov
mov
pushl
out
sbb
inc
or
inc
iret
and
clc
notb
int3
dec
sbb
mov
sub
mov
cmpsb
aam
mov
enter
mov
cmp
out
cltd
aaa
jnp
and
adc
lods
popa
cmpsb
pushf
std
mov
mov
pop
sbb
pop
jg
dec
int3
movlps
movsl
sbbl
lock
mov
push
xor
xor
inc
adc
xchg
mov
test
jnp
sub
pushf
insl
lods
and
xlat
and
test
sbb
and
movsb
add
sbbb
bnd
push
addr16
lahf
mov
in
aas
std
stc
dec
fs
pop
mov
shl
push
out
test
mov
dec
insl
and
xchg
scas
pop
mov
mov
testl
dec
mov
clc
dec
fwait
cmp
mov
cmp
jno
fidivs
mov
das
pop
xchg
xorb
xchg
mov
es
fists
or
out
ficompl
push
mov
scas
jl
subb
xorl
mov
xchg
pop
sbb
aam
rcr
es
ljmp
mov
xchg
mov
mov
sti
push
jae
sbbl
mov
cwtl
sub
es
sete
sarl
sbb
push
jbe
popf
repz
daa
daa
sub
shrl
or
incb
jnp
scas
xor
ret
call
cli
lcall
sti
inc
jmp
push
sbb
mov
scas
rolb
inc
xlat
out
pop
ss
pop
cltd
jecxz
cmp
out
pusha
ja
mov
scas
aam
data16
jne
sub
stos
sti
cmpl
aam
sti
pop
or
daa
push
xchg
fwait
loop
push
arpl
jmp
je
push
in
aad
mov
call
pop
jne
push
mov
sti
jmp
loopne
pop
mov
test
out
xor
scas
fsubrl
cmpb
add
das
jg
mov
dec
dec
enter
adc
mov
shrb
lcall
cld
dec
fwait
ss
in
sbb
pop
jo
mov
cmp
iret
in
xchg
cmpsb
scas
int3
mov
inc
push
dec
push
shlb
outsb
push
mov
arpl
and
cmc
insb
or
push
jge
xor
sub
and
fsubrp
sub
cmpsl
arpl
sub
testb
mov
test
adc
mov
and
mov
clc
mov
mov
push
es
bound
pop
mov
out
stc
aaa
arpl
scas
fdivrp
sbb
push
mov
scas
cltd
inc
out
push
aad
pop
jbe
scas
add
jno
mov
pop
mov
push
mov
sbb
cmp
lock
pop
mov
mov
mov
jp
pusha
jne
jno
outsb
into
shrl
hlt
push
and
lock
mov
adc
orl
pop
adc
out
sub
scas
cs
loopne
push
into
test
in
mov
insb
cmpb
test
inc
push
xchg
lds
jns
sub
sub
jo
stos
push
mov
pushf
jo
mov
je
jne
xchg
xchg
outsb
movsl
jecxz
icebp
fs
stc
jo
hlt
push
add
lock
jmp
bound
and
adcl
cmp
mov
pop
loopne
fwait
gs
xchg
push
cmpsl
mov
das
ud1
push
jbe
call
cs
or
jb
into
inc
fcmove
lods
stc
cmpsl
lods
outsb
lcall
xchg
inc
stos
lock
in
loopne
cwtl
push
push
in
les
jecxz
and
and
xchg
popf
mov
repnz
sti
test
repz
insb
shr
push
xchg
inc
cmp
in
add
xchg
sbb
mov
mov
iret
sub
lcall
jne
fs
dec
dec
jb
jg
outsl
cmp
int
fildl
mov
mov
or
std
xor
mov
jge
mov
out
cmp
pop
ror
jmp
jecxz
sub
xorb
hlt
loopne
loope
push
mov
ljmp
testb
sbbl
cmc
mov
adc
mov
ljmp
inc
call
das
cmp
inc
xchg
xchg
popa
notl
push
mov
jno
orl
outsl
fmull
test
mov
lds
mov
mull
bound
xorl
mov
js
cmp
into
aad
hlt
es
insb
addr16
cmp
jne
dec
adc
ljmp
add
fsubr
inc
aad
daa
pop
pop
outsl
xchg
shlb
adc
mov
bound
mov
test
mov
mov
jnp
std
pop
cwtl
popa
jmp
inc
inc
inc
aad
jge
and
outsl
pop
dec
xchg
sub
lods
mov
sub
mov
pop
dec
cmp
sub
imul
shrl
push
cli
sub
push
jbe
cmpb
or
aam
jmp
int
dec
cli
cmc
jae
sarb
mov
int3
dec
inc
fldenv
mov
mov
addr16
mov
ds
xchg
and
lea
xor
dec
pop
pop
fisttpl
lock
clc
mov
in
data16
jnp
xchg
pop
ret
xlat
push
int3
lods
sub
mov
jle
jl
imul
jns
cmc
stos
jbe
lds
fdivl
xchg
jle
mov
sub
adc
dec
xchg
cwtl
xor
xor
sbb
adc
cltd
xchg
outsl
aam
daa
subb
pop
mov
fists
iret
jmp
xchg
ret
push
cli
sbb
cmp
popa
pushf
sub
ja
xor
fiaddl
inc
adc
cmc
lock
sbb
xchg
mov
ror
push
adcb
jle
inc
mov
dec
lret
mov
push
ret
lahf
jl
hlt
pop
adcb
xor
sub
cmp
rolb
mov
cld
cmpsl
and
popa
cmp
hlt
or
mov
add
cli
out
xchg
cmp
shll
dec
cmpsl
mov
lea
mov
call
push
dec
or
nop
push
sbb
in
fisubs
push
jnp
adc
mov
jbe
push
jns
mov
push
add
dec
mov
dec
xchg
xor
mov
in
add
stos
jnp
insb
aaa
inc
inc
cmp
cli
out
xor
clc
insb
xchg
sbb
adc
in
add
mov
pop
push
idiv
ljmp
imul
ljmp
push
addl
nop
out
and
xor
pushf
add
xchg
mov
mov
jae
jge
add
shl
aam
test
or
jl
cmp
xor
sub
dec
push
adc
jno
in
mov
imul
or
mov
pop
mov
ret
and
pop
mov
ja
sub
hlt
mov
hlt
sub
add
lods
mov
popa
push
cmc
repz
xchg
test
adc
aas
mov
loope
lahf
xor
test
into
mov
loopne
mov
mov
xor
sbb
push
orb
loop
mov
or
test
xor
adc
push
cli
xchg
inc
add
sarb
leave
outsb
cmp
loope
out
xor
mov
mov
and
pop
ds
in
gs
notl
leave
jae
shlb
mov
mov
jmp
mov
inc
mov
nop
add
push
xor
pusha
imul
xor
cmp
push
fdivrs
stc
aaa
int
cli
or
xor
out
fstl
dec
push
sub
pop
cmpsl
jmp
push
or
mov
sub
cmpsl
ja
add
repz
or
pop
dec
jbe
fwait
aad
ret
sar
test
push
xchg
call
and
and
add
sub
push
repz
sub
adc
mov
adc
dec
sub
adc
imul
icebp
ret
jecxz
inc
mov
mov
push
imull
jmp
mov
pop
jno
jecxz
loop
push
outsb
pop
cmp
mov
mov
ja
rclb
xor
ss
shrb
lock
inc
xor
xor
xchg
and
push
outsb
icebp
xchg
loope
aas
sahf
pslld
push
jne
cmp
sbbl
inc
mov
shr
add
fcmove
inc
xchg
jmp
push
dec
add
addb
sub
test
adc
inc
xor
pop
andnps
xchg
notb
cmp
lods
mov
xchg
clc
adc
cmp
mov
cmp
repz
add
out
mov
mov
xor
cmpsb
mov
cmpsb
cli
jg
pop
cmp
test
sub
dec
out
punpckldq
mov
push
into
xor
lahf
push
lock
loope
sti
xorl
imul
notl
je
out
insb
sahf
ds
jb
lds
add
mov
xchg
dec
xor
movsl
fsts
and
mov
or
sbb
clc
mov
std
mov
push
xchg
mov
cmp
outsb
test
faddl
lods
lds
or
inc
hlt
shrl
movsl
mov
std
js
cmp
mov
xchg
sub
push
leave
jle
cmpsl
lods
popf
neg
dec
subb
fstpt
push
cmp
jmp
sbb
stc
scas
mov
pop
sar
jle
inc
nop
cltd
inc
dec
mov
aaa
mov
loop
add
lahf
sub
ja
scas
xor
mov
mov
pop
sub
popf
mov
ficomps
xor
cmp
aam
test
mov
imul
inc
imul
add
mov
arpl
adc
jp
dec
loopne
fdivrp
sti
scas
sti
dec
sbb
hlt
inc
addr16
mov
push
cmp
push
sarl
lret
jnp
jo
clc
push
or
movsb
loop
cmp
or
cmp
xchg
imul
or
jle
mov
in
adc
mov
add
xor
repnz
jb
dec
jecxz
and
data16
sub
mov
xchg
push
loope
jp
push
inc
cmp
mov
lods
mov
sbb
sahf
xchg
push
icebp
stos
add
cltd
and
or
insl
push
push
add
mov
sbb
rcrl
push
jecxz
cmp
inc
push
adc
xchg
int
movb
fstpt
inc
stos
cmp
sub
or
jl
cmp
bound
rorl
ljmp
jno
add
sbb
enter
sub
jnp
out
mov
enter
iret
xor
mov
dec
nop
mov
loope
mov
jle
xor
popw
lea
insl
inc
mov
or
jl
push
cwtl
inc
xor
cld
xchg
inc
sub
sbb
sub
adc
lock
test
push
mov
cltd
pop
or
mov
pop
jo
mov
cmp
rcl
adc
mov
jge
sbb
mov
mov
popl
xchg
imulb
add
lea
out
jmp
repnz
pushf
sub
dec
in
std
rcll
arpl
call
adc
cmp
sbbl
xor
xchg
xchg
test
jle
fnstcw
hlt
sbb
sarb
push
cmp
mov
scas
dec
sbb
fdivl
sbb
sahf
fldl
mov
sub
test
or
xchg
push
sbbl
das
verw
dec
shll
mov
dec
xor
xchg
xor
jbe
movsl
fcom
sbb
cmp
pop
mul
int
sub
in
js
inc
xor
and
xor
and
cmp
jecxz
sub
mov
push
stc
and
cmp
fcmovu
mov
mov
sbb
nop
fstl
sbb
stc
cltd
cli
leave
push
jo
push
mov
adc
mov
rcr
xchg
cwtl
cmp
call
cwtl
pusha
inc
push
fst
daa
rol
mov
jo
imul
imul
iret
push
lea
popa
mov
cmpsb
mov
lods
or
into
rolb
scas
outsb
sbb
mov
xchg
mov
aad
mov
stc
stc
ficoml
adc
shr
iret
je
xor
jg
xchg
lods
lcall
push
push
in
lcall
scas
cs
leave
cwtl
mov
insl
add
sbb
mov
adc
into
cli
adc
fs
in
subl
add
mov
movsl
mov
lret
es
into
cs
jecxz
aad
sub
mov
jmp
xchg
in
subb
inc
call
mov
sub
pop
lods
jb
int3
and
mov
popl
sub
loop
fdivr
pop
mov
int3
fbstp
enter
cmp
int3
lret
mov
or
mov
sub
frstor
adc
dec
fwait
cmp
fdivr
or
pop
mov
xorl
mov
sbbl
add
jl
push
mov
dec
fistps
inc
call
jb
bound
ret
sbb
jge
adc
mov
and
or
lods
faddl
pushf
jmp
shl
outsb
orb
gs
fcmovnbe
push
adc
sbb
sub
insl
sub
mov
sub
popa
arpl
adc
ffree
mov
into
adc
inc
in
xchg
pop
es
fs
ret
mov
pushf
mov
lea
dec
add
shrb
rcr
sub
xor
daa
shr
bound
push
xor
sub
enter
lods
mov
xchg
and
loope
mov
mov
mov
mov
adc
je
jle
mov
sbb
stc
dec
mov
or
sbb
or
aas
mov
xchg
imul
push
xor
jno
sbb
push
sub
pushf
xchg
out
lods
ret
inc
addr16
imul
xchg
ficomps
push
jle
adc
inc
add
mov
mov
cli
sub
xchg
dec
scas
inc
adc
stc
sti
and
push
inc
in
sti
popa
or
scas
sbb
xor
mov
adc
adc
aam
jp
dec
pop
subb
aas
aas
inc
into
push
sarb
sbb
adc
jle
inc
push
mov
adc
loopne
repz
sub
sbb
pop
mov
shr
imul
dec
pop
cmovge
cmp
jmp
push
xchg
xor
and
lahf
pop
fisttps
inc
and
mov
cmp
jno
fwait
push
adc
test
cs
adc
popa
insb
lcall
push
adc
repz
loope
fistps
mov
pop
mov
aad
mov
push
shlb
lahf
dec
fcompl
scas
mov
dec
or
aaa
xor
pop
inc
lea
jnp
dec
rep
mov
mov
push
and
pushf
das
shrb
mov
clc
scas
add
test
mov
out
cmpsb
inc
mov
sub
icebp
test
jg,pt
movsb
inc
xor
lahf
aaa
loope
sub
adc
jecxz
sub
xchg
pop
mov
mov
rolb
leave
sbb
test
push
mov
inc
sahf
or
stc
aam
inc
fidivs
or
inc
mov
std
sbb
lahf
popa
xchg
cmp
pop
shlb
icebp
mov
call
pusha
enter
jo
cmp
mov
in
push
loop
sub
jmp
int3
xchg
fs
cmp
pop
cmc
fxch
mov
shrb
test
vsqrtss
add
dec
sub
jle
pop
insb
mov
scas
daa
inc
and
and
push
in
jle
and
jl
dec
mov
rcr
sub
mov
or
adc
cmp
inc
lahf
enter
xchg
sbb
call
xchg
inc
loop
jne
push
cmc
into
push
xchg
adc
add
enter
push
sub
cmpsl
icebp
jle
es
arpl
sbbl
loopne,pn
pop
outsl
mov
push
aam
lret
jle
add
push
lds
pop
stos
sub
add
out
sti
inc
xor
dec
pop
xor
or
adc
jg
add
jo
dec
adc
xor
test
or
jo
fnsave
inc
sbb
xor
dec
int
repz
cs
rcrl
andb
lea
lret
imul
push
sbb
cmp
and
fistpl
mov
pop
dec
fwait
pop
xchg
repnz
sbb
adc
adc
dec
add
sbb
add
imul
mov
xchg
inc
add
stos
aas
mov
mov
mov
or
sub
addr16
xor
cs
mov
xor
mov
fsubrs
push
mov
aaa
add
fcmovne
test
jmp
and
xchg
pop
mov
cwtl
popf
mov
mov
cmpsl
inc
or
dec
rcrb
leave
test
mov
lock
cmpsb
dec
fsubl
lret
jle
sub
mov
sbb
fiaddl
xor
or
ds
cli
fwait
sarl
mov
cltd
hlt
dec
orl
daa
mov
cli
xor
ja
xchg
lods
sub
mov
ljmp
shrb
add
mov
cmp
add
mov
jg
pop
je
rcrl
mov
cltd
stos
loop
ja
xor
lods
cmpsl
in
jns
mov
into
mov
les
ret
lds
lcall
cmp
adc
jle
add
mov
out
xchg
rcl
into
xchg
arpl
cmp
pushf
js
fstpl
add
pop
mov
lcall
daa
xchg
gs
mov
sub
fcmovbe
add
lcall
xor
ljmp
ret
test
fs
sahf
inc
insb
pushf
and
test
dec
shrb
ds
rcrl
pop
pop
js
mov
leave
jp
icebp
subl
mov
mov
dec
mov
xor
mov
jle
xchg
cwtl
add
push
aad
js
test
fsubs
loopne
mov
clc
sub
sbb
ficoms
stos
xchg
inc
bound
inc
jbe
imul
or
sbb
cmpsl
arpl
inc
push
out
imul
dec
mov
dec
jnp
stc
aas
mov
sub
les
dec
cmpsb
test
push
cmp
cmc
jo
scas
bound
pop
mov
out
fmuls
mov
lret
test
inc
out
xchg
dec
imull
xor
or
pop
pushl
lahf
mov
dec
cli
sbb
mov
fiaddl
adc
mov
je
loope
aad
cs
fwait
jmp
pop
pop
push
movsl
push
push
cmpsb
push
int3
sub
lea
mov
and
clc
mov
jo
iret
pop
sbb
call
leave
cmpsb
push
cmp
gs
sub
lfence
dec
and
inc
popa
adc
mov
insl
cmp
daa
and
cld
mov
jmp
sbb
inc
mov
pop
mov
inc
xlat
mov
jb
in
jp
xchg
scas
ficoms
data16
mov
lahf
cmp
data16
adc
lods
xchg
pop
pusha
test
add
lcall
sbb
repnz
lds
jg
imul
cmp
and
leave
fstps
mov
fs
test
lock
dec
test
push
jl
or
cmp
je
xchg
adc
lods
dec
aad
or
mov
mov
stos
mov
mov
into
or
cmp
lods
sub
lds
adc
cmc
jmp
and
movsb
jge
push
shufps
lock
mov
lahf
cltd
cmp
fsubrs
movsl
into
push
push
cmp
jp
cmp
test
scas
mov
pop
out
stos
sub
ret
cmpl
push
add
lcall
in
xchg
jmp
lods
ret
sbb
push
lods
push
mov
dec
ret
sub
imul
cmp
mov
xchg
in
leave
lods
stos
dec
imul
mov
lret
daa
daa
lods
ss
aad
mov
test
pop
inc
mov
aam
jns
ret
xchg
gs
push
jno
lahf
aam
xchg
add
jne
shll
hlt
bound
push
gs
cmp
es
enter
sbb
push
jmp
jne
std
inc
lret
enter
shlb
mov
xchg
jbe
fldcw
jb
mov
adc
add
mov
sbb
fistpll
dec
sahf
mov
inc
repnz
fnstcw
test
xchg
push
outsl
mov
lahf
dec
cmp
sbb
mov
das
insb
addr16
pop
vmovntps
les
lock
push
or
mov
js
xchg
jecxz
dec
push
jnp
mov
fwait
sub
ss
out
sahf
or
cli
push
out
js
mov
sub
outsb
loope
out
gs
xor
roll
imul
xchg
pop
cmp
cmp
scas
pop
dec
xor
xchg
sub
sub
sub
movsl
xchg
sbb
testl
push
cmpsl
xor
push
lea
movsb
mov
dec
mov
icebp
int3
inc
in
mov
inc
dec
push
cld
pop
jne
ret
fyl2x
fwait
scas
xlat
and
cmpsb
cmp
insl
scas
in
shlb
lret
loopne
mov
enter
sub
out
sub
mov
test
jp
jg
gs
mov
mov
jge
gs
mov
dec
out
xchg
out
inc
mov
xchg
inc
rcr
outsl
xlat
mov
dec
test
push
pop
jmp
cli
shll
stos
jae
push
in
outsl
dec
rorl
xor
dec
inc
lret
and
sbb
xchg
jo
mov
jns
dec
jbe
mov
bound
repz
gs
in
push
ret
add
test
dec
filds
in
and
mov
jle
sbbl
add
js
call
in
add
jnp
mov
mov
or
adc
imul
mov
pop
lcall
cmp
fsubr
sub
call
popa
lods
subb
cli
sub
imul
fwait
xorl
pop
push
xchg
push
mov
mov
cmp
mov
mov
lahf
mov
pop
lea
add
stos
add
js
popa
cmpsb
sub
das
mov
ficoml
adc
imul
push
xchg
pop
xor
mov
jb
sub
pop
sub
lock
rorb
mov
mov
push
jge
lret
pop
jbe
out
mov
mov
jl
cltd
es
scas
mov
xchg
shlb
push
jns
or
lcall
mov
mov
mov
loopne
mov
int
sbb
cmp
add
mov
and
sbb
bound
sbb
dec
faddl
loope
gs
push
sub
cmc
sub
repz
je
sbb
out
jne
nop
push
push
cmp
cmpl
popf
adc
imul
inc
mov
bswap
shlb
mov
mov
inc
lahf
out
dec
hlt
xor
and
xchg
and
and
pop
push
std
sbb
sub
dec
adc
scas
mov
and
jno
fsubrl
dec
jecxz
dec
scas
leave
push
adc
mov
mov
and
arpl
sahf
xchg
xor
xor
adc
scas
icebp
stos
sti
inc
pop
das
fimuls
add
testl
jne
outsb
xor
lret
mov
mov
xlat
xchg
in
or
add
add
cmpsb
imul
sarb
int
inc
call
and
movsb
jmp
repz
and
lock
dec
dec
inc
adc
cld
mov
cwtl
mov
arpl
dec
inc
lcall
mov
push
cmp
mov
mov
int3
inc
inc
push
xor
inc
mov
movsl
jmp
arpl
xor
pop
and
mov
mov
cli
xchg
shl
sub
push
frstor
adc
and
shlb
aad
daa
fsubrl
adc
jno
ss
mov
or
imull
pusha
jmp
lods
push
cmp
pop
sub
pop
std
mov
bound
adc
js
cwtl
mov
adcl
inc
fnstenv
lcall
add
fmuls
or
or
sub
movsl
call
repz
out
push
add
ja
mov
nop
cmc
jg
repnz
push
jecxz
sbb
dec
divb
inc
cmc
add
call
pop
jge
xor
int
es
mov
test
arpl
sbb
das
popa
dec
mov
mov
and
scas
inc
lds
daa
mov
sarl
and
addb
cmp
xchg
mov
add
xor
fdivrp
cmp
test
fldl
ficoml
and
mov
mov
mov
and
xor
insb
jp
in
or
insl
cltd
lahf
dec
nop
inc
mov
push
fxch
data16
stos
sub
icebp
and
ret
rclb
push
imul
arpl
pusha
test
sub
addl
mov
bound
mov
sar
lcall
test
adc
xchg
inc
into
adc
mov
xlat
movsb
sbb
rolb
mov
cmp
sub
aad
inc
insb
loope
rcrl
pop
out
test
xor
test
jbe
add
mov
mov
out
shlb
push
mov
inc
cmp
mov
sub
mov
call
adc
push
rolb
add
jmp
mov
outsl
inc
rolb
cld
jecxz
push
icebp
mov
and
jae
push
movsb
cwtl
pop
out
outsb
rorl
push
mov
adc
jl
scas
hlt
xchg
xorb
and
sub
cmp
push
xchg
xchg
push
push
push
or
sbb
inc
test
outsl
and
dec
test
and
fnstsw
dec
sub
push
out
jns
xchg
pushf
arpl
es
sbb
add
inc
mov
lret
inc
rcrl
xorb
inc
arpl
enter
out
stos
out
dec
mov
sub
adcl
je
xor
jmp
pop
adc
cltd
in
cmp
ljmp
jp
mov
insb
call
xchg
and
sub
cmp
les
add
jge
out
stos
sub
sub
ja
xor
sub
outsb
imul
repnz
dec
lcall
xchg
add
jle
xchg
inc
mov
jmp
icebp
sub
js
fs
imull
fwait
xchg
hlt
aam
test
mov
lea
adc
jae
adc
ret
gs
jo
adc
lret
lea
jle
push
mov
sub
repnz
sarl
jp
out
insl
xchg
mov
add
adc
cld
push
push
arpl
in
subb
adc
orb
jno
clc
shlb
xchg
push
mov
adc
mov
xchg
adc
jg
rorl
xchg
cmp
sbb
and
lock
aas
adc
lea
adc
daa
test
mov
push
fdivs
call
test
jae
loop
jae
lods
xchg
cmp
enter
jbe
mov
jg
xchg
inc
jecxz
jne
sti
jp
das
mov
arpl
add
dec
lods
push
push
mov
add
inc
flds
stos
sub
andl
xor
dec
add
mov
xchg
xchg
jle
lods
fildl
jg
rcrl
shl
fcoms
jmp
iret
dec
mov
into
int
xchg
je
loopne
iret
inc
lds
call
cs
inc
xchg
inc
cld
cli
ror
int3
sti
xchg
mov
faddp
iret
ljmp
xchg
mov
nop
mov
sub
adc
mov
ds
xor
push
in
dec
push
fdivl
ret
push
iret
pop
idivb
stos
rcll
fwait
jmp
leave
adc
data16
dec
lock
or
mov
xor
adc
jle
pop
push
push
mov
jmp
rclb
xchg
xor
test
std
pusha
lea
xchg
xlat
sbb
fs
sub
rorb
adc
dec
imul
fdivrp
mov
test
pop
mov
cwtl
test
add
inc
lea
add
mov
pop
pop
sub
rol
xchg
ss
mov
cmc
mov
sahf
dec
aam
scas
mov
pushf
pop
xor
mov
jne
mov
outsb
jns
xchg
adc
xchg
insb
in
out
shl
dec
push
xchg
add
mov
or
ja
stos
addb
ljmp
test
rol
jl
mov
lret
jle
and
bound
lods
jns
jbe
pop
or
and
cmp
mov
jne
pop
inc
adcl
push
pop
mov
in
ds
cmp
aaa
popf
out
xor
and
push
pop
dec
add
and
push
test
ljmp
lods
in
outsl
fsts
fadds
jae
pushf
cwtl
dec
cmc
call
xor
addb
sub
sub
cmp
jb
loop
sub
mov
pop
in
test
mov
movsl
add
sub
gs
push
leave
mov
dec
pusha
and
xor
sbbl
pminsw
sahf
movsb
fidivrs
pop
dec
and
inc
inc
xchg
push
shlb
loop
inc
inc
call
leave
jb
imul
in
adc
daa
testl
xor
cmp
jg
cmp
push
xor
ret
aam
icebp
ret
push
inc
sub
dec
btr
jnp
cmp
mov
jno
jns
sar
push
popa
jno
popa
pop
mov
cmc
jle
xchg
xchg
sub
lcall
subl
jp
push
int
push
cmp
mov
cmpsb
push
pop
push
mov
and
ret
cli
adc
push
enter
mov
pop
mov
lahf
shrl
aam
filds
pop
dec
dec
sub
stos
cltd
push
sbb
adc
outsb
sbb
sbb
push
in
lds
add
xor
jp
leave
es
xor
adc
add
notb
mulb
pop
scas
xor
mov
sbb
mov
adc
xchg
icebp
mov
icebp
lods
mov
dec
push
mov
inc
xor
sub
push
icebp
mov
cmpsb
mov
xor
adc
and
push
mov
sbb
movsb
mov
mov
iret
dec
jno
jecxz
mov
mov
sbb
jbe
push
divl
rcrl
cmp
jne
stos
cmp
pushf
add
lcall
into
xlat
cwtl
sbb
xchg
push
jg
lods
hlt
push
and
ret
xor
mov
xor
push
fbld
pusha
adc
jbe
jo
je
in
fwait
inc
sub
inc
sbb
sub
outsb
lods
jp
arpl
mov
cmp
lcall
jmp
shl
fmulp
pop
gs
mov
ds
jecxz
jae
sarl
mov
daa
movsl
imul
push
faddl
loop
adc
test
cmp
push
jno
aam
inc
xor
cld
popa
jge
test
in
cmp
stos
adc
gs
jmp
cmp
add
lock
xor
dec
nop
jnp
xor
pop
popa
dec
cltd
mov
or
xchg
mov
or
push
imul
sub
sbb
in
xchg
ja
addl
mov
nop
out
inc
pop
jg
add
in
and
sti
xor
mov
shrb
loope
inc
fldenv
stos
hlt
push
sbb
popl
inc
cmp
mov
rcll
or
repnz
rcll
jnp
push
pushf
jecxz
sbb
outsb
xlat
fcoms
rorl
mov
pusha
xor
cmp
js
insb
xchg
add
sarl
jg
add
scas
jecxz
pop
stos
pusha
daa
mov
push
mov
rolb
addb
xchg
xor
push
inc
sbb
mov
ret
cltd
movsl
sbb
and
jg
ret
out
mov
xor
es
push
xlat
adc
fwait
icebp
pop
and
std
mov
aad
inc
push
out
stc
xor
mov
xchg
jp
repz
cli
loop
sub
lea
dec
push
dec
rorb
aas
mov
sub
mov
or
and
add
mov
dec
cmp
ds
xchg
push
sub
int
iret
dec
sti
repz
imul
mov
stos
mov
add
adc
xchg
je
psllw
xor
dec
jp
js
repnz
insb
sbb
add
dec
lea
mov
clc
and
mov
pop
ss
popf
xor
je
test
xchg
inc
and
pop
out
mov
pusha
dec
iret
cli
into
push
push
pusha
mov
fcompl
lock
stos
mov
js
sub
sbb
insl
popf
pop
repz
inc
mov
cmpl
mov
lds
push
jmp
js
jl
xchg
sbbb
or
pop
lret
and
insl
sbb
add
push
out
mov
inc
out
les
insl
repnz
adc
push
bound
sub
jle
xor
ss
hlt
out
cmpsb
jno
arpl
and
sbbl
fcom
pop
lock
stc
mov
pop
cmp
xlat
xor
outsb
fmull
test
or
jo
data16
push
mov
jmp
jnp
jb
mov
xor
cmc
lock
adc
dec
or
pop
xor
mov
sub
ret
popa
fdivrl
cmp
gs
pop
jnp
dec
adcl
add
ret
adc
adc
mov
mov
out
insl
dec
out
inc
mov
sti
lret
mov
ficompl
popa
bound
fsubp
vsqrtps
inc
mov
repz
push
pop
fucomi
mov
dec
sbb
aad
fisubrl
shlb
sub
push
sub
xorb
xorl
cwtl
stos
cmp
repz
cmp
data16
sub
mov
jge
fcmovb
mov
push
popa
jno
mov
xchg
pop
lret
lahf
dec
mov
mov
dec
scas
mov
nop
dec
pop
cmp
inc
out
scas
mov
clc
xchg
fisubrl
pop
mov
lahf
push
jle
enter
and
shl
test
mov
addr16
pop
insl
aas
mov
mov
ror
add
sbb
dec
sbb
adc
decl
cmc
gs
mov
cmp
ljmp
std
outsl
popf
shlb
inc
pushf
dec
or
and
decl
push
dec
add
fwait
dec
movsl
jno
or
pop
icebp
lahf
add
jne
inc
sbb
jmp
lcall
cli
cmp
mov
cmp
in
dec
mov
mov
sub
cltd
jnp
cli
iret
sub
and
xchg
lret
icebp
sbb
mov
dec
add
int
lock
mov
and
push
dec
mov
mov
sub
call
inc
icebp
pop
daa
xchg
push
jo
and
lods
push
mov
daa
lcall
shl
push
jp
push
sbb
dec
jo
cmp
out
adc
jo
arpl
ja
mov
sub
push
or
push
subl
jno
xchg
mov
mov
add
inc
push
mov
pushf
and
inc
inc
enter
movsl
jns
lret
jns
dec
mov
cmpsb
test
add
pop
mov
dec
stos
jb
adcl
fcoml
xchg
roll
repz
into
es
stos
xlat
mov
test
mov
xchg
decb
cmc
push
imul
xor
fimuls
lds
mov
jnp
gs
and
loopne
sub
in
pop
sbb
pop
dec
fcomps
sti
cmpsl
cmp
rcr
push
jmp
push
push
repz
out
mov
movsl
xor
xchg
cmpsb
aas
push
mov
push
aaa
cmp
cmpsb
out
mov
jmp
mov
test
inc
xchg
or
div
hlt
xchg
repnz
mov
insb
pop
test
stos
arpl
push
cmp
mov
jecxz
jno
inc
cltd
scas
xlat
in
jnp
or
into
mov
lods
sub
loope
lock
mov
push
fwait
mov
testl
movsb
in
imul
xlat
adcb
cmp
push
clc
dec
shll
jno
push
pop
shrb
push
sbb
repnz
mov
or
arpl
lods
lock
aam
mov
mov
and
add
testl
push
enter
mov
dec
jecxz
cmc
imul
hlt
and
popa
mov
jecxz
clc
xchg
adc
xchg
cli
jp
push
pop
cmp
and
les
inc
lds
and
std
cmp
cmp
mov
sub
popa
fs
nop
dec
mov
or
xchg
push
mov
sub
lahf
cmp
repnz
mov
loop
stc
or
pop
or
pop
adc
add
fldt
nop
rolb
sub
mov
xchg
rorb
push
adc
xor
sub
cmc
insb
clc
sub
lock
aam
popa
xlat
sub
adc
rcll
dec
xchg
cld
aad
xlat
mov
push
jb
insl
push
cmc
push
xchg
outsl
dec
sub
xchg
mov
push
pop
jg
fs
cmc
fld
pusha
das
and
lods
mov
test
add
xchg
loop
mov
std
lahf
mov
movsb
xchg
jmp
out
xchg
pushf
push
and
aaa
push
push
xor
mov
lods
lret
inc
ja
mov
and
mov
jo
js
and
sub
mov
inc
std
or
push
leave
mov
stc
dec
out
lret
sub
flds
sub
pushf
add
jecxz
sbb
sub
mov
lret
jne
insl
fstps
or
loop
push
mov
lods
inc
cmp
push
inc
aas
push
mov
cs
mov
adc
cli
pop
pop
stos
mov
or
mov
mov
add
jb
cmpsl
fs
or
ret
push
enter
or
jb
jg
push
push
and
push
insl
dec
inc
rcll
mov
jb
xchg
ret
push
pop
int3
ljmp
mov
dec
sbb
adc
xchg
insl
cmp
sbb
pushf
icebp
outsl
repnz
rcl
jmp
pop
fisubrs
gs
test
pop
mov
out
xchg
xchg
inc
test
rcrb
aaa
pop
vucomisd
cltd
cmpsb
lods
jbe
fisubs
movsl
out
jl
cld
dec
xor
add
cld
mov
or
movsl
push
inc
rcr
stos
popf
imul
lcall
cs
aaa
jns
insb
shr
lretw
xchg
out
out
push
add
add
mov
cmp
push
sub
mov
sbb
jecxz
xchg
aaa
xchg
jecxz
sbb
arpl
cld
loope
jl
les
mov
and
inc
ljmp
scas
dec
clc
sbb
sahf
scas
jge
aam
jle
call
pusha
push
inc
lods
and
adc
cmpsb
or
aam
sub
fadds
add
adcl
inc
or
xchg
mov
sbb
aas
and
dec
sbb
jne
cmp
into
dec
adc
sbb
fs
dec
leave
jo
scas
repnz
push
mov
ret
out
and
inc
xchg
setle
enter
sub
pushf
jns
popf
pop
mov
fldz
ret
cs
jns
in
push
test
sbb
cltd
movsl
sub
rclb
dec
cmp
mov
insb
sbb
mov
adc
jo
js
hlt
and
pop
stc
jnp
loope
nop
cwtl
iret
scas
push
jle
jmp
mov
mov
pusha
loop
out
pop
and
sarl
mov
dec
mov
lret
test
ss
mov
mov
ds
out
pop
pop
adc
fmuls
dec
inc
ja
outsl
loop
pop
jle
lret
mov
jns
sbb
outsb
adc
sbb
jmp
shlb
and
fimull
adc
sbb
pop
lock
rol
inc
dec
loope
loopne
lcall
fcmovne
sub
lods
jae
leave
or
pop
xor
pop
xor
pop
jno
lock
jp
lcall
mov
jmp
repnz
dec
mov
or
mov
adc
into
dec
loope
xorb
lcall
out
lret
and
cmpb
iret
add
mov
sbb
mov
push
cmp
scas
and
cmpsl
pushf
ret
sbb
imul
scas
popw
jo
xchg
out
xchg
enter
jnp
adc
decb
dec
push
or
rcll
pop
inc
sbb
jns
mov
push
clc
jl
hlt
jge
mov
adc
inc
mov
mov
inc
loop
mov
ljmp
aas
in
addl
enter
add
dec
push
xor
popa
test
loopne
repz
mov
jb
lea
push
push
or
push
inc
push
and
inc
les
mov
fwait
movsb
pop
pop
ret
jecxz
jp
xor
mov
rcrb
std
pop
xchg
lods
sbb
cmp
cli
xchg
mov
cmc
pop
add
test
gs
mov
cs
fildll
insb
ds
inc
add
adc
xlat
push
or
stos
add
inc
js
aad
dec
imul
daa
mov
enter
loop
jo
lcall
xlat
mov
cmc
imull
and
xchg
xchg
mov
cmp
nop
outsl
aad
ljmp
inc
jle
insl
pop
xchg
es
inc
jno
mov
adc
pop
rcl
jb
xchg
jg
cmpl
cltd
decl
ret
mov
sbb
insl
sbb
pop
fwait
out
xor
leave
shll
mov
aaa
push
jb
jle
adc
out
push
push
adc
mov
jg
enter
mov
mov
sbb
leave
add
mov
in
xorl
cld
rcrb
mov
cld
xor
inc
fisubrl
inc
push
sti
sbb
sarl
add
lods
lods
push
sub
mov
nop
push
int3
push
in
jmp
js
fstps
mov
mov
xor
jnp
sarl
in
inc
add
lock
push
dec
xchg
aas
xchg
cmp
mov
pop
out
sbb
jge
stos
stos
int3
xchg
ret
fisttpll
lock
inc
sub
add
int3
cld
ret
in
mov
xchg
mov
rorl
stos
jne
std
xor
mov
sbb
popa
and
lods
in
lods
add
lret
sbb
xchg
dec
sub
cld
and
call
and
mov
xor
mov
push
and
hlt
sbb
mov
cmpsb
mov
bound
cmp
sahf
loopne
mov
and
scas
inc
es
adc
clc
lea
xchg
movsb
add
pop
pop
jbe
inc
push
xlat
adc
adc
dec
fcoms
jg
adcl
in
mov
xchg
mov
pop
cmp
cmp
adc
inc
or
insl
mov
mov
mov
jmp
lods
dec
mov
lods
in
das
fdivs
and
and
in
xor
pop
sub
inc
popa
mov
adc
lods
sbb
int3
jne
inc
dec
lcall
mov
push
push
adc
sar
jge
fadds
cli
ja
inc
pop
lds
mov
pop
shrl
imull
cmp
xor
aaa
mov
dec
loopne
repz
xlat
enter
mov
fs
sti
lret
sub
xor
dec
mov
pop
shrl
popfw
adc
jg
ss
and
pop
mov
inc
sbb
stos
mov
data16
lea
mov
mov
adc
sub
cmovne
faddl
pop
lret
jge
cmp
insb
loopne
popf
mov
out
in
rcll
jp
repnz
mov
and
cli
movsb
fs
cmp
negb
sbb
std
sbb
in
gs
nop
cmp
test
cmp
pop
repz
adc
aaa
push
iret
mov
mov
lret
push
fistl
jo
out
mov
xor
jbe
lcall
mov
mov
enter
mov
xchg
pop
nop
les
pop
stc
xorl
pop
enter
out
mov
sub
dec
add
js
enter
inc
jo
mov
gs
push
sti
pop
test
imul
sub
jl
dec
push
in
push
lcall
fisttpl
sub
pop
mov
mov
dec
fstpl
in
sub
call
inc
jp
cli
pop
dec
xchg
mov
shlb
dec
loope
dec
jl
outsl
pop
mov
fmul
shrb
adc
and
gs
cmp
imulb
stos
lea
punpcklwd
mov
adcb
ret
in
hlt
push
test
ja
aas
add
mov
inc
fistpl
cmp
lret
xor
loope
out
push
mov
es
or
cmpsl
scas
inc
mov
out
xor
cmp
or
dec
jmp
lds
and
fsubs
out
adc
and
add
aas
push
or
out
idiv
cmpsl
mov
in
popa
mov
push
jle
mov
add
sahf
xchg
cmp
dec
mov
ret
mov
mov
shrb
sti
add
jecxz
mov
pop
cli
mov
pop
pop
or
cltd
cltd
jbe
mov
xor
push
add
dec
add
mov
jno
mov
adcl
pusha
in
mov
punpckhbw
scas
jg
ja
and
adc
dec
cmpsb
xor
lods
mov
pop
jnp
jge
or
xor
dec
sub
shl
inc
or
sub
movsb
stc
xor
out
add
and
leave
mov
mov
cmp
scas
pop
add
add
sbb
sub
lahf
push
mov
lods
jl
mov
adcb
pop
aad
jo
jns
adc
dec
lods
dec
lahf
jb
xchg
cmp
pop
sbb
adc
push
pop
mov
mov
stos
hlt
push
jmp
psubsw
test
push
mov
xchg
and
jbe
cwtl
mov
fcomp
mov
or
imul
sub
mov
ret
fwait
xchg
cli
std
jge
mov
pop
sub
out
cmpl
lods
std
jl
push
pop
repnz
test
cmp
lds
in
in
sbbb
rorb
mov
add
inc
xchg
jmp
add
cmc
and
xchg
inc
outsl
cmp
inc
and
scas
mov
sbb
push
push
sub
inc
xor
inc
daa
xchg
sbb
xor
aam
fdivs
ret
jmp
cs
sbb
inc
xchg
outsl
repz
sbb
or
mov
pusha
rcrb
or
ja
es
hlt
lahf
sub
jl
ljmp
mov
clc
daa
leave
xor
in
aam
pusha
sbb
sarb
push
repnz
xchg
sub
or
mov
jge
fwait
cltd
insb
inc
pop
popa
xchg
sub
jbe
aas
jl
sbb
or
inc
adc
cli
mov
ret
fldcw
daa
jns
and
cwtl
fisttpll
stos
int
mov
es
cmp
ss
movsl
jmp
jns
fidivl
jle
sbbb
or
or
sbb
sbb
mov
push
pusha
push
mov
and
add
lods
mov
pop
mov
cmpsl
cs
fstl
int3
cmc
push
sub
insl
jle,pt
push
cmpb
mov
cmp
popl
insb
loopne
push
decl
and
push
cld
push
inc
jnp
mov
nop
push
pop
loopne
jbe
ljmp
xorl
vsqrtss
int
out
pop
repz
fmull
fcomi
push
mov
push
out
or
outsl
jle
pop
xor
stos
out
jp
adc
mov
ljmp
push
adc
call
imul
sub
lods
aam
cmp
mov
fwait
add
mov
test
movsb
push
pop
push
push
xchg
push
into
fldt
adc
imul
mov
sahf
mov
jecxz
push
inc
inc
mov
stos
dec
int
push
sub
nop
cmp
ja
xor
add
adc
adc
pop
jae
shlb
fwait
or
test
pop
push
adc
adc
push
or
xchg
xor
fs
xor
fwait
leave
daa
int3
cmc
adc
jnp
mov
and
dec
out
inc
lods
jae
outsb
push
mov
ss
xchg
xchg
jae
mov
fstl
movl
repnz
sbb
and
dec
xchg
inc
jno
shll
sbb
mov
out
mov
fcomps
jge
mov
aas
arpl
adc
pusha
mov
ljmp
aaa
adcl
xor
int3
or
inc
ret
iret
addl
xchg
push
sub
mov
outsl
imul
mov
xor
cmpl
inc
add
pusha
mov
and
jp
enter
outsb
in
add
pop
jae
and
jecxz
mov
and
loop
mov
cmpsl
push
mov
and
stc
inc
addr16
sub
jno
mov
cmpsb
jle
mov
lret
enter
push
out
nop
xor
push
mov
mov
sub
sbb
add
cmpsb
jmp
loope
push
sbb
fimull
jecxz
js
repnz
jbe
sub
or
movsb
mov
mov
xchg
or
cltd
aam
mov
mov
shlb
jb
pop
mov
dec
sahf
pop
rcll
push
lea
push
pop
fcmovne
push
outsl
repz
mov
lods
cmp
mov
int
jmp
jmp
jl
mov
je
inc
enter
iret
loope
fisubl
and
fstpl
adc
lret
xor
mov
and
adc
iret
pushl
fwait
mov
shlb
sub
jbe
jnp
testl
mov
bnd
mov
dec
xchg
insb
mov
stos
imul
scas
jmp
loop
jge
ficomps
mov
loopne
xor
mov
and
rolb
fidivrs
xchg
push
fistps
pusha
mov
ret
adc
loope
sahf
inc
push
inc
mov
push
cwtl
sub
xchg
adc
and
roll
data16
mov
popf
inc
push
mov
mov
jo
repz
int3
mov
cs
xchg
mov
rcll
arpl
mov
mov
dec
dec
pop
in
stc
icebp
lds
negb
inc
ficomps
or
loop
mov
mov
iret
or
jo
cmpsl
jge
xchg
fidivs
sbb
pop
addr16
lods
xor
icebp
cmpsb
pushf
adc
aad
stos
jb
addr16
enter
jb
or
out
call
mov
scas
test
je
aas
pmulhw
add
or
pop
pop
es
sbb
test
test
lods
lds
cwtl
fbld
push
sub
push
sarb
dec
sbb
push
sbb
out
sub
inc
pop
nop
jp
ret
dec
out
inc
jmp
inc
popl
in
pushf
jbe
mull
or
jae
andb
xor
shrl
push
xchg
jnp
mov
nop
sub
lea
std
cld
cli
xor
fcmovbe
test
and
cld
mov
ljmp
jns
insl
pop
incb
push
mov
in
ljmp
mov
or
or
and
test
inc
cld
add
pop
xchg
or
xor
push
bound
jge
arpl
fneni(8087
push
pop
inc
cmp
dec
popa
ja
leave
hlt
cmp
ror
rclb
popa
push
push
push
inc
jne
sbb
movsl
fistpl
pop
inc
add
call
fnstenv
add
mov
mov
je
in
xlat
pop
mov
push
add
mov
jecxz
jae
or
out
jo
sbb
jp
sbb
xor
or
fcompl
jmp
pop
dec
dec
rorl
mov
aam
jbe
mov
jno
xchg
dec
sbb
inc
sub
dec
adc
dec
sti
push
mov
and
mov
call
jne
mov
cld
decl
and
roll
out
hlt
inc
inc
push
jmp
out
add
fildll
sbb
add
mov
jp
cmpsb
jl
lock
mov
mov
xchg
push
es
mov
mov
into
push
xchg
jns
push
sub
inc
pop
addr16
stos
mov
inc
data16
int3
push
add
xchg
and
fsub
cmp
bound
mov
hlt
xchg
push
and
imul
inc
bsf
scas
xchg
and
addr16
fistpl
nop
cmp
cltd
mov
push
adc
push
sub
dec
dec
mov
mov
xchg
inc
sbb
sti
push
arpl
jbe
fs
jns
pop
inc
push
push
push
cmp
add
cmc
xor
or
mov
cmc
aas
repz
les
push
fnstenv
mov
int3
fdivrs
xor
add
mov
pop
sti
outsl
inc
lcall
sub
stc
pop
cmp
jns
cs
pop
sub
xchg
je
cmc
popf
sub
std
sub
jnp
xlat
mov
in
dec
fistpll
sarl
push
aam
les
cmp
outsl
data16
pop
leave
rcll
lret
rcll
or
or
mov
insl
leave
push
lret
je
mov
pop
pusha
pop
adc
mov
push
push
jmp
popf
push
stos
or
test
add
jo
push
bound
cmp
cmpsb
testl
js
hlt
mov
mov
shll
sti
adc
aas
xor
stc
jb
loope
movsl
je
popf
movsb
cwtl
or
jnp
call
pop
xchg
inc
sub
std
and
xor
out
popl
push
sahf
mov
in
jl
mov
or
dec
les
xchg
sub
lds
adc
xor
push
push
adc
xchg
push
xchg
mov
jne
dec
sti
insl
inc
ret
inc
mov
jnp
fsubr
out
inc
imulb
cs
push
push
iret
rcr
jle
lock
mov
aas
push
push
mov
mov
or
or
fistl
aad
orb
lock
rcll
in
cmp
add
or
add
sub
and
fcoms
in
movsb
insl
jne
push
inc
add
jns
in
adc
cmpsl
imulb
stos
dec
or
pop
arpl
aam
jp
or
loope
sbbl
inc
pop
or
inc
nop
xchg
dec
xchg
lret
sub
jmp
lret
mov
push
gs
dec
pop
or
rcrb
into
xor
sbb
xchg
popa
frstor
and
push
inc
jns
testb
fcoms
mov
call
out
inc
xchg
add
movsb
cwtl
sbb
dec
jp
cli
out
fistpl
and
xorl
sub
test
aas
loop
xchg
pop
jnp
pop
cmp
mov
dec
sarb
bsf
jns
dec
lock
mov
dec
ret
cmc
mov
push
lret
sbb
xor
cs
cmp
rolb
xchg
add
and
jmp
or
pushf
mov
inc
mov
test
rclb
inc
mov
cmpsl
jae
dec
in
or
cmp
adc
xor
daa
inc
mov
cltd
jne
dec
or
mov
xchg
mov
xchg
mov
movsb
stc
scas
xchg
ja
sbb
bound
dec
ret
xor
pop
mov
jge
pop
and
test
inc
std
loope
xchg
mov
or
adc
mov
imul
cmp
fs
and
test
jne
mov
jne
jp
cli
fidivl
adc
sbb
repz
inc
aas
insl
xchg
stos
xor
pop
jno
out
jb
insl
sub
mov
push
dec
jae
mov
scas
cmc
in
xor
push
dec
stos
test
mov
lea
popf
divl
jnp
in
mov
jle
test
or
push
jb
fstpt
popf
mov
lret
scas
sub
shl
das
or
xchg
adc
jns
fwait
lods
pushf
inc
cmpsb
add
jns
lret
loopne
dec
rcrb
add
insl
dec
jo
pushf
lret
in
sub
push
mov
and
in
xchg
orl
inc
loop
cltd
jg
and
xlat
popa
outsb
cwtl
enter
flds
pop
ja
lahf
add
inc
ja
das
and
push
mov
ret
lods
xor
daa
repz
or
lret
ret
dec
out
fwait
inc
pop
mov
repz
sub
pop
jbe
sbb
and
in
enter
int3
xchg
insb
cmc
push
sub
xor
cltd
ds
outsb
jg
jo
out
sub
or
inc
pop
xlat
xor
push
add
stc
xchg
loope
xor
aas
pop
es
xchg
ficoml
push
cmp
fisttps
jno
add
fldcw
test
mov
pop
jge
icebp
mov
or
xor
bound
cmc
pop
mov
xchg
lcall
mov
mov
ds
push
adc
xorb
mov
roll
icebp
out
out
gs
imul
push
jle
xchg
loop
add
adc
leave
les
ret
dec
movsb
mov
rcll
ljmp
cmp
and
pop
lods
push
test
loope
js
mov
shl
dec
std
stos
emms
int3
cmpsb
mov
fwait
ss
cltd
les
jns
aad
mov
imul
sub
shlb
loopne
xlat
sbb
adc
add
mov
ret
data16
mov
loopne
sbb
loope
imul
iret
iret
jb
aad
adc
pop
sbb
adc
sub
test
sbb
cmp
xchg
loope
and
inc
mov
mov
push
aaa
cmp
cltd
mov
in
dec
xor
dec
mov
sub
icebp
xor
nop
push
push
inc
loop
int3
push
mov
iret
and
fs
aas
jne
pop
ljmp
pop
mov
je
inc
fmuls
movsb
sahf
movsb
xor
scas
test
pop
test
pop
pop
cmp
loop
jp
jmp
xor
xor
mov
mov
call
and
xchg
inc
int
jbe
rclb
add
inc
cli
mov
test
int
test
adc
gs
jnp
js
inc
loope
mov
popf
aad
scas
ret
out
out
mov
dec
fdivl
pop
mov
stos
fcompl
and
add
ja
idiv
dec
mov
push
insl
adc
rol
mov
mov
mov
add
jne
cmc
orb
ffree
test
pop
ljmpw
and
fwait
xor
aas
or
mov
leave
dec
add
mov
xchg
ficomps
inc
frstor
rclb
mov
jg
push
daa
mov
lods
mov
pop
cmp
xchg
mov
lret
add
jns
daa
and
mov
xlat
jno
jl
and
push
cmpsl
aad
lret
pop
jns
pop
dec
xchg
adc
add
scas
movsl
popf
mov
and
rorl
mov
fisubl
adc
dec
les
jae
iret
into
or
sarl
mov
insl
ret
jb
adc
orl
out
cmp
jmp
mov
sbb
lea
pop
mov
cmp
sti
cltd
int3
cmp
mov
cld
das
xchg
and
sbb
lcall
divb
andl
int3
push
enter
ret
jns
sbb
cmc
pop
aam
nop
lods
shrl
push
jae
data16
sahf
orb
mov
sbb
fmull
das
fsubrs
pop
insl
or
or
aas
paddsw
fwait
ret
mov
mov
mov
cmpsb
jg
arpl
xchg
cld
mov
pop
pop
mov
dec
movsl
jle
loope
or
push
addr16
jbe
dec
xchg
pop
cmpsb
inc
cld
mov
push
repnz
pop
out
fmul
pop
jns
mov
inc
insb
rcrl
fstl
dec
loope
jo
sbb
iret
add
insl
ja
lods
les
xor
xor
dec
or
ror
and
push
inc
push
repnz
sbb
dec
out
xor
addb
cld
mov
movsb
mov
jnp
shlb
jne
in
xchg
dec
in
popf
xor
jmp
psrlq
xchg
lock
popa
mov
aad
xor
pop
lds
in
loopne
sbb
out
xor
jae
stos
int3
stc
cmp
and
push
std
mov
xlat
test
sti
sub
fcmovnb
inc
and
dec
gs
cltd
xlat
push
jp
scas
jp
mov
mov
lret
fadd
adc
inc
insl
std
test
jbe
adc
loopne
adc
jmp
push
cmpb
adc
xchg
stos
shlb
cs
ds
lahf
and
mulb
cltd
fisubl
pop
rcll
mov
cmpsb
sub
test
call
ja
add
faddl
push
shlb
arpl
sbb
gs
loope
pop
lret
pop
sti
pop
jne
mov
in
push
dec
aam
adc
sbb
in
add
lret
mov
insb
bound
mov
mov
add
jns
pop
jno
dec
adc
jbe
mov
scas
loop
je
ds
into
aam
or
dec
or
sub
outsl
add
leave
jp
out
ja
jne
lock
or
scas
lods
push
out
push
mov
adc
cmp
jae
into
sahf
push
movhps
insb
sub
xchg
mov
jmp
push
or
xchg
add
cmp
cmp
xchg
jle
mov
out
cmpsl
inc
out
jmp
dec
loopne
mov
mov
cli
push
daa
and
loop
cmp
ret
ret
or
mov
dec
rcll
hlt
enter
insl
push
sbb
cld
xor
sbb
scas
lcall
outsl
fistpll
sbb
fxch
inc
sbb
stos
mov
inc
xchg
mov
loope
lods
xor
dec
int3
adc
inc
sub
push
dec
sbb
out
jo
out
repz
pop
insb
add
fidivrl
cmp
pop
xor
lcall
xor
adc
dec
lahf
mov
mov
clc
and
clc
or
sub
fcmovu
nop
mov
push
adc
test
dec
lcall
xlat
mov
ljmp
test
repz
xor
push
cli
shlb
add
jg
pop
mov
pop
rcr
lods
adc
inc
or
int
shlb
adc
add
mov
sbbl
movsb
in
jb
inc
xor
xor
nop
cwtl
scas
jmp
or
mov
mov
nop
mov
into
sbb
idiv
xchg
and
jns
fst
outsl
test
adc
fistpll
dec
outsl
lea
push
pop
mov
popa
pop
pop
xchg
int3
std
cmp
inc
pop
xchg
mov
imul
pop
cmc
pop
iret
call
cmpsl
inc
arpl
and
jb
xchg
jp
inc
add
lock
fwait
mov
mov
or
inc
dec
stc
cwtl
dec
or
sahf
mov
sub
push
rcl
cmp
leave
mov
into
push
xchg
sub
lock
dec
adc
cwtd
push
dec
dec
popa
and
and
cmpl
or
bound
push
aaa
mov
loope
cmpsl
les
cmpl
push
in
in
ret
ljmp
call
loop
ds
fwait
dec
push
jg,pn
pop
call
sub
jp
mov
roll
mov
imul
nop
and
shrb
call
add
scas
push
cld
cld
fcmovnb
sahf
scas
movsl
or
push
cs
das
cltd
jns
dec
shll
std
in
jnp
subl
popa
pop
int
dec
mov
lods
dec
adc
loop
shlb
lahf
cmp
or
cmpl
stos
add
mov
xchg
jmp
push
stos
and
xchg
rcll
mov
out
jne
inc
mov
jmp
mov
gs
cmp
leave
repnz
jns
andb
and
fldcw
movsl
push
nop
jae
out
mov
test
mov
sbbl
addr16
cmp
in
dec
std
mov
jmp
pop
jno
in
popf
imul
push
loop
xor
sbb
pop
xchg
das
pop
dec
inc
jmp
jnp
fsubp
das
in
hlt
jl
int3
icebp
jns
pop
in
mov
add
dec
fmul
in
mov
arpl
aad
xchg
cwtl
pop
cmpsl
dec
mov
sahf
mov
repnz
push
outsl
ljmp
sarb
cmp
and
xor
pop
sarb
xor
push
out
lahf
xchg
lock
lret
les
cmpb
test
sub
xchg
in
insl
xor
push
pushf
int
adc
or
hlt
fists
dec
sahf
sbb
iret
pop
mov
lds
mov
sub
pop
es
aas
dec
and
lods
cmp
push
arpl
fnsave
out
hlt
mov
or
pop
dec
test
std
xor
orb
pusha
jns
xchg
std
xchg
stos
or
inc
out
out
les
xchg
xor
aas
stc
aaa
std
cmc
ljmp
fsincos
jge
ljmp
pop
aas
fwait
or
dec
aam
mov
fldl
dec
jne
stos
ja
mov
xchg
addl
and
dec
push
mov
mov
rep
mov
hlt
iret
xor
fldl
in
ds
push
xchg
mov
lods
dec
andb
ja
add
xor
add
ret
inc
jns
xlat
mov
movsb
cltd
std
mov
xor
mov
mov
sti
xchg
dec
sbb
sbb
cmc
popf
xchg
push
dec
hlt
inc
imul
imul
fimull
pop
in
inc
jecxz
enter
test
push
std
stos
push
in
outsl
cltd
and
jae
lcall
jne
mov
mov
icebp
in
jae
add
mov
cwtl
cmpsb
push
adc
dec
push
fdivs
subl
mov
outsl
xchg
lret
movsl
scas
adc
sub
add
jne
test
ret
enter
dec
sub
shr
mov
ja
push
mov
mov
shlb
scas
dec
mov
das
xchg
push
push
cs
xlat
mov
daa
dec
adc
add
pop
popf
rcr
mov
xchg
loope
pop
jp
fstpl
jp
rep
dec
mov
cmp
dec
push
lea
mov
jecxz
push
or
mov
pop
in
dec
sub
pusha
sbb
sub
pop
push
sbb
jns
sub
leave
jmp
in
push
pop
adc
cmp
jo
sub
mov
ds
popf
and
adc
roll
xchg
push
nop
xlat
jge
cs
movsb
in
loope
sub
inc
ret
jns
shrb
arpl
push
js
call
sbb
adc
fs
dec
in
les
jg
push
xchg
push
shlb
sahf
jae
fsubs
repnz
push
cmp
mov
int
inc
stos
pop
int3
subl
mov
pop
cmp
dec
jne
mov
ds
push
pushw
insl
pop
and
cmc
push
push
scas
cltd
aam
sub
push
push
lret
sub
cmp
into
inc
inc
sub
adc
mov
dec
push
jbe
adc
movsb
shrl
loop
xchg
xchg
rcrb
push
div
popa
cmpsl
inc
fimuls
cmc
push
or
mov
add
xor
xor
xchg
test
aaa
mov
and
and
and
cmp
mov
jb
pop
push
aam
sarb
cwtl
jle
sub
mov
mov
xor
scas
ret
sub
dec
xor
inc
jns
xchg
shrb
nop
in
pop
mov
ljmp
xchg
dec
jae
mov
nop
insb
mov
aad
jge
xlat
dec
or
push
xlat
mov
clc
in
cld
ds
stos
std
adcl
fnstsw
or
cmp
or
adc
sbbl
neg
sti
pop
mov
mov
adc
loop
imul
adc
cmovno
enter
loope
lret
push
push
fadds
mov
xor
push
jp
ja
push
mov
icebp
outsl
or
pop
mov
jecxz
int
test
add
arpl
lods
pop
fsubrl
jbe
dec
xor
std
mov
dec
mov
mov
aam
mov
mov
in
mov
movsb
dec
imul
pushf
adcb
rcll
jge
nop
and
jns
es
pop
repz
cmpsl
cmpsl
pop
rcll
sbbb
or
push
mov
jno
pop
or
pop
test
rcll
push
popa
icebp
cs
sub
xchg
cli
xor
mov
pop
loop
sub
cld
movsl
addb
push
orl
int3
mov
jae
push
adc
ja
mov
push
xchg
test
aaa
cmp
call
jecxz
cld
dec
ja
je
iret
repz
jbe
movsb
pop
cmp
fldcw
xor
scas
mov
out
add
or
pop
mov
dec
mov
ja
inc
std
push
mov
call
and
pop
xchg
inc
xchg
sbb
les
popf
nop
mov
rorb
mov
xchg
jae
jo
pop
subl
adc
sbb
and
inc
add
xchg
mov
ljmp
hlt
js
lret
mov
mov
sub
push
sub
fadds
pop
xor
sti
dec
loopne
cmp
and
rorb
push
lea
aas
or
out
mov
aaa
jnp
aaa
stos
sbb
push
sbb
cmp
push
leave
pop
adc
push
sub
xlat
mov
push
mov
lods
sub
xchg
aas
jno
addr16
sbb
lock
sbb
das
xchg
adc
lea
push
push
into
push
imul
inc
inc
pop
test
ret
push
xor
cli
lock
sbb
xlat
mov
push
jnp
gs
mov
icebp
xlat
jmp
mov
xchg
jecxz
data16
les
loopne
mov
in
js
sub
mov
std
push
add
cmp
pop
inc
ds
adc
cmpb
sbb
movb
nop
pushf
out
in
fwait
push
insl
mov
aam
mov
mov
add
or
or
lea
mov
sbb
mov
sbb
testb
and
adc
aam
negb
sbb
inc
int3
xchg
lods
in
cmp
jne
loope
pop
imul
pop
stos
mov
aad
ja
fbstp
or
data16
fcomi
pop
sub
fwait
and
movsl
push
inc
ljmp
loopne
inc
sub
sub
push
inc
fbstp
notl
cmp
insb
inc
cmp
adc
shlb
sub
test
pop
xchg
pop
repz
jmp
jb
fiadds
adc
push
imull
stos
push
mov
int
jle
fcmovu
mov
hlt
in
fstpl
push
xchg
adc
rcrl
push
cmp
cli
pop
mov
sub
pop
test
rclb
dec
jne
out
faddl
incl
and
pop
jmp
daa
loop
lods
pushf
or
xchg
cmp
stos
adc
das
insl
cmp
push
movsl
stc
out
test
lcall
add
jl
cmp
mov
dec
sbb
inc
lods
mov
arpl
jge
aaa
aam
ret
js
repnz
pop
adc
sahf
mov
push
sbb
mov
cmp
cli
inc
das
lahf
dec
xchg
or
pop
or
js
roll
outsl
add
pop
lahf
pop
inc
dec
and
shrl
and
mov
out
rolb
add
mov
loope
pop
and
es
push
jne
inc
popa
scas
inc
add
dec
filds
jl
bound
xlat
out
fs
mov
inc
adc
inc
add
jb
mov
push
les
mov
add
rorb
loope
lds
popa
idivl
push
into
jb
or
mov
loopne
sarl
xlat
push
adc
stos
int3
sahf
leave
decl
out
inc
sti
add
jne
fwait
pop
mov
lods
sub
pop
push
jae
sub
jmp
in
sbb
arpl
xchg
adc
inc
rorl
mov
jg
faddl
rcr
addr16
lea
sub
imul
test
nop
push
xchg
mov
lcall
outsb
mov
mov
add
ds
mov
ljmp
inc
fmuls
pop
enter
pop
mov
lods
scas
mov
add
imul
cld
cmp
adc
ret
push
push
jge
rcl
lock
inc
loopne
aaa
xor
adc
push
push
adc
pop
mov
lods
mov
dec
dec
orb
scas
sbb
jge
cmp
jle
lret
lods
pop
orb
xchg
xchg
inc
popa
das
das
xchg
mov
es
inc
test
lret
mov
cmp
in
ljmp
arpl
xor
sbb
dec
sub
dec
mov
das
cli
call
pop
scas
cmp
shrb
dec
inc
shlb
mov
push
sub
pusha
and
loopne
inc
aad
fdivr
aam
aad
and
into
and
push
loope
jge
mov
loopne
push
add
add
sub
push
stos
pop
stc
repnz
xchg
xchg
jo
jmp
jecxz
fdivrs
aam
dec
mov
xchg
loopne
and
sar
ss
xchg
xchg
cmpl
jle
dec
sub
scas
pushw
and
aaa
out
cltd
insb
scas
cld
fnstsw
mov
push
xchg
aas
loopne
test
mov
leave
dec
mov
loopne
pusha
pop
ss
fs
xlat
xchg
popa
and
inc
cmp
lods
and
cmpsl
mov
xchg
xchg
jge
aam
filds
data16
rcrb
push
mov
sbb
fistpll
add
push
inc
cwtl
jp
popf
sarb
stc
xchg
cmp
xchg
pop
andb
pop
push
fisttpl
cmp
lahf
ja
sbb
test
std
and
dec
adc
jns
jb
pushl
mov
inc
jl
mov
mov
xor
data16
and
cs
cmc
and
inc
adc
cmp
add
ja
cmp
in
cmp
adc
cmp
push
in
mov
mov
dec
push
pop
or
push
pushfw
sbb
repnz
push
ss
push
ret
xor
das
insb
mov
dec
push
jno
push
imul
outsl
jb
test
or
cld
xor
mov
ljmp
pop
push
jl
sbb
mov
sahf
shlb
inc
sahf
js
aad
sarl
lds
cmp
inc
rorl
pop
fsubrs
fstpl
adc
sub
mov
lret
ret
push
cs
movsl
add
repnz
mov
sub
dec
ret
xchg
mov
sbb
mov
insl
push
inc
adc
lahf
daa
push
add
fistps
cmp
push
push
test
stos
in
ret
rolb
jge
subb
aaa
push
mov
cmp
data16
scas
sbb
dec
notb
bound
ds
cmpsb
enter
fsubl
cld
add
mov
xor
mov
push
cmp
sbb
dec
pop
jnp
in
sub
add
or
sbb
sbb
add
add
repnz
js
adc
mov
sub
jp
loopne
pop
popa
push
push
dec
add
std
lds
xor
jne
loope
dec
sub
std
repnz
cmpsb
add
adc
cwtl
repz
xchg
inc
js
pop
sub
scas
cmp
xchg
fs
in
and
xchg
push
fbld
fdivr
mov
xchg
sub
outsl
push
mov
fistpll
add
mov
and
push
or
dec
or
js
imulb
cmp
xor
cmpsb
sar
mov
orl
pop
aam
pop
pop
arpl
aaa
fstpl
inc
jno
orps
stc
pop
inc
aad
out
sbbb
das
sbb
xchg
std
aaa
aad
add
add
mov
fs
push
jge
sahf
and
push
cmp
adc
popa
mov
mov
fimull
out
ret
iret
jbe
jmp
fwait
jp
mov
lea
add
popf
mov
fstpt
int3
mov
adc
pop
loop
das
andb
int3
or
push
mov
loop
lcall
outsl
xchg
adc
mov
cltd
push
cmp
pushf
pop
mov
hlt
dec
stos
daa
insl
mul
sbb
and
push
shr
mov
mov
jne
xchg
pusha
mull
imul
das
and
jp
push
and
call
loop
popa
cmp
push
and
pminub
ds
sub
cmpsb
cmp
add
sbb
add
fildl
call
jg
xor
sub
xchg
mov
cld
shrl
subl
lcall
int
lock
clc
out
pop
lret
lods
push
stos
sub
lock
in
adc
loope
lret
test
add
jmp
mov
frstor
movsl
fisttpll
bound
ret
dec
dec
iret
pop
mov
movsl
adc
cmp
outsl
xorb
imul
ret
insl
fadd
or
sbb
imul
add
xlat
cmp
outsb
lcall
loop
pop
in
in
mov
and
addr16
or
and
popa
ret
adc
mov
mov
lods
popa
jne
sbb
lcall
pop
in
jg
sub
in
adc
call
push
scas
loopne
jp
lret
sahf
push
cs
sbb
outsb
orl
clc
mov
mov
or
mov
jae
push
les
mov
xor
jbe
push
lods
test
lret
into
xchg
testb
loopne
pushf
mov
into
int3
hlt
imul
mov
inc
xor
push
fisubs
xchg
lret
xchg
xor
push
ljmp
mov
mov
shr
fdivrs
in
popf
out
push
ljmp
jle
divl
mov
adc
inc
xor
rcll
jne
jge
jns
mov
xor
sub
pop
scas
jo
mov
sbb
pusha
pop
cmp
loopne
outsl
incl
sbb
sub
popa
mov
mov
sub
push
mov
cmp
cmp
dec
jmp
mov
xchg
jo
cmpsl
xlat
adc
ljmp
aaa
mov
mov
sbb
inc
add
push
imul
jo
div
sbb
adc
mov
push
mov
mov
mov
inc
stos
dec
int
dec
decl
repnz
mov
inc
rorb
sbb
sub
mov
push
lock
dec
enter
mov
jle
lock
dec
mov
add
xchg
push
dec
push
sahf
push
out
loope
push
cmp
shll
push
xchg
sahf
cld
push
cmpsb
cwtl
enter
dec
fistpl
js
movsl
add
out
jbe
sub
in
pop
das
xor
mov
adcl
iret
mov
push
push
ret
imul
or
add
insb
gs
sbb
cmpsl
adc
inc
repz
dec
push
or
mov
mov
jge
cmp
test
cld
adc
hlt
adc
cs
aaa
popa
outsl
mov
pop
adc
enter
stc
loope
sub
jne
cld
jns
test
sarb
pop
mov
cmp
xlat
mov
sub
scas
mov
and
xor
aam
out
dec
loopne
cld
mov
push
pushf
cltd
int
mov
lretw
cld
mov
mov
jbe
mov
out
adc
pop
fisttpl
cmc
dec
leave
xor
testl
into
in
xor
xchg
fdivrs
ljmp
cmpsb
push
rorb
popa
pop
sbb
movsb
loope
insl
sbb
lahf
cmp
pop
jmp
call
pushf
nop
cmpsb
inc
ds
jo
sbbl
fwait
fwait
xor
add
mov
arpl
pusha
push
testb
add
mov
push
fidivl
push
insb
sub
cltd
sti
pusha
aam
add
ja
xchg
mov
int
mov
xchg
adc
das
loop
xor
and
andb
loopne
aaa
mov
lahf
jnp
lods
push
call
int
adc
lds
pop
insb
inc
in
gs
cmp
mov
div
mov
rclb
rclb
ss
les
push
adc
dec
add
lods
fisubl
inc
adc
lret
dec
fsubs
outsl
adc
sbb
rol
xchg
lods
popa
leave
lahf
or
lock
aad
andl
xchg
nop
jns
loop
add
fiadds
cmp
or
cmp
cmp
xlat
movsl
js
mov
push
arpl
pop
mov
js
dec
add
orb
inc
dec
push
cmpsb
jo
repnz
dec
or
stos
mov
adc
pop
pop
mov
or
cmp
orb
cli
lock
ja
mulb
stc
mov
dec
out
rorb
es
ljmp
icebp
inc
mov
sub
xchg
dec
sub
fs
push
sbb
jecxz
jnp
std
cmp
adc
mov
imul
xor
mov
adc
push
shlb
or
mov
xchg
xorl
fcomip
lahf
lods
add
loopne
pop
out
imul
sub
mov
mov
jp
stc
jo
leave
sbb
faddp
addr16
dec
daa
push
unpcklps
inc
loope
adc
aad
pop
dec
int
dec
pop
and
cld
adc
xor
push
or
xlat
pop
call
mov
repnz
sarl
cmp
mov
test
dec
shlb
sbb
movsl
cld
cmp
cmpsb
lret
ret
fstl
mov
movsb
add
arpl
fwait
jp
jmp
inc
insb
xor
int
shlb
test
dec
enter
xchg
ljmp
int3
inc
sbb
mov
in
movsb
adc
repnz
in
mov
and
dec
and
fcmovnbe
in
pop
cwtl
xchg
stc
mov
and
or
or
aad
cmp
sbb
sahf
pop
sahf
add
sub
jmp
and
or
mov
pop
imulb
js
test
lcall
inc
mov
popa
adc
cltd
bound
xchg
stos
mov
scas
gs
dec
stos
xor
jg
fsubs
scas
negl
movsl
fmul
pop
jbe
js
add
cmp
cmc
stos
addr16
fcomip
pop
mov
push
or
dec
scas
mov
out
scas
test
repnz
test
stos
or
jle
and
push
rorb
insb
call
add
lcall
jne
xlat
xchg
mov
ja
int3
jnp
add
ret
cmovs
outsb
mov
in
xchg
mov
jbe
aaa
adc
adc
adc
jae
fmuls
lods
in
mul
in
lret
subl
inc
lret
jmp
push
xor
in
scas
insb
jmp
sub
mov
inc
mov
mov
pop
gs
std
je
imul
xchg
mov
jne
add
mov
push
cld
jne
xchg
jge
xor
jns
or
or
lret
xor
das
mov
adc
stos
sub
test
sbb
sar
push
test
jp
cld
and
push
dec
les
out
jns
cmp
sub
inc
test
aaa
cli
shl
adc
mov
jae
mov
int
jae
lock
test
mov
fs
xchg
and
subl
xchg
sahf
fidivs
pop
inc
sub
and
insl
pop
inc
mov
lcall
or
imul
adc
fidivs
xchg
insl
sbb
dec
push
and
gs
inc
mov
cmpsb
repz
lcall
test
mov
int
ja
sub
and
and
pop
push
pop
out
cld
xchg
es
aad
cs
push
into
or
xor
emms
movsl
cmp
in
les
movsl
scas
xor
and
faddl
test
mov
inc
call
xchg
in
sub
pop
fwait
lea
arpl
mov
xchg
jnp
xchg
stos
and
mov
pop
cmp
cmp
int3
cmovne
push
insl
divl
mov
jmp
testl
fst
fnstcw
hlt
inc
mov
sahf
test
cmp
mov
adc
mov
cmc
shr
mov
sbb
push
adc
mov
mov
and
mov
jmp
mov
mov
nop
leave
sbb
mov
pop
dec
cmpsb
jge
jns
frstor
mov
fnclex
or
enter
fucomp
and
pop
filds
dec
das
jne
cmpsb
repz
jo
data16
mov
push
aad
loope
stos
mov
fs
adcl
rorl
rcrl
push
imul
ret
jo
mov
pop
mov
push
int3
imul
out
in
push
into
test
inc
movsb
loope
aam
repz
int3
pop
dec
push
pop
xchg
gs
add
das
xor
mov
jl
movl
mov
inc
jmp
arpl
movsl
dec
push
call
fdivs
jnp
inc
je
jecxz
rcr
daa
xor
mov
add
xor
mov
dec
dec
sarb
cmp
pusha
cli
dec
cwtl
test
adc
gs
mov
scas
jge
inc
push
lock
push
pushf
and
negb
jle
cmc
inc
inc
dec
sub
popa
shrb
mov
test
es
imul
push
lcall
fs
cmpb
jl
mov
and
icebp
mov
shlb
mov
adc
dec
cmpsl
dec
sbb
xchg
icebp
push
sbb
das
insl
lods
xchg
add
popa
fidivl
inc
cli
test
inc
loopne
sub
push
ds
mov
nop
mov
sub
stc
jp
in
imull
push
fwait
mov
pop
cli
add
aad
sbb
fstl
icebp
xlat
cmp
fistps
push
mov
sti
fsub
rcll
negb
enter
outsl
fbstp
mov
mov
outsl
xlat
aaa
shlb
sub
xor
notb
leave
cmpsl
stos
and
in
adc
push
lea
outsl
or
xchg
pusha
fs
push
mov
mov
sbb
sub
popa
icebp
sbb
cmp
scas
cmp
xchg
lret
mov
lea
push
pop
adc
fisubrl
sub
sbb
dec
mov
mov
leave
xor
cmp
cltd
cmp
out
jns
iret
pusha
lea
pop
mov
add
and
enter
or
mov
xchg
jb
sbb
scas
test
mov
sar
inc
ret
es
mov
inc
lea
lcall
arpl
xchg
pop
bound
leave
jb
dec
dec
inc
pop
sub
mov
fldenv
fdivrl
mov
fmull
cmpb
lods
cmpb
and
dec
push
add
gs
push
pop
out
sbb
pop
adc
outsl
jne
adc
jae
adc
push
jle
cmp
xchg
pusha
daa
movsl
pusha
sbb
pop
insb
adc
ficompl
outsl
rcll
mov
xor
sahf
js
mov
pop
pop
aaa
mov
movl
test
dec
cmc
xchg
cmpsl
mov
das
imull
xor
pop
sbb
adc
jae
filds
or
push
and
jge
dec
dec
jne
jle
cmp
jns
sub
adc
in
mov
push
adc
mov
mov
push
inc
mov
xchg
cmp
xor
cmc
sbb
pop
fistpl
adc
pop
and
push
sbb
cli
push
dec
fdivl
in
xor
jg
pop
inc
shlb
or
dec
push
lret
stos
pop
mov
pop
mov
dec
xchg
sti
in
mov
push
mov
fldcw
ror
add
test
adc
sbb
imul
outsl
icebp
cmp
jnp
xor
jg
scas
push
jle
outsb
ret
mov
jmp
inc
fidivrl
icebp
mov
popa
adc
add
xor
xchg
lds
adc
and
enter
and
mov
xor
mov
push
jp
std
xchg
xor
int
pop
aam
pop
in
sbb
dec
repnz
adc
pop
rcrb
push
pop
divl
xchg
insb
loopne
push
iret
leave
cmp
push
repz
mov
andl
int
enter
insl
add
inc
js
fistpll
adc
inc
lret
adc
add
pop
out
sub
test
push
outsl
movsb
mov
xchg
leave
iret
rclb
jb
mov
mov
mov
iret
dec
in
cmp
xchg
inc
addr16
fidivl
inc
add
xchg
call
inc
jp
cli
push
dec
sbb
xchg
mov
xor
jg
inc
ror
inc
or
push
das
arpl
xor
ds
sbbl
insb
andb
inc
push
mov
daa
pusha
or
imul
adc
xor
xchg
mov
insb
loop
mov
add
pusha
jecxz
inc
jle
or
ljmp
ffreep
outsl
in
mov
mov
insl
sbb
cmpsb
xchg
adc
fmull
xor
and
out
rcl
adc
add
mov
jge
aaa
xchg
sbb
xor
inc
xchg
mov
mov
pop
and
pop
ljmp
repz
xor
cltd
lcall
lret
cmp
push
shl
ljmp
mov
test
in
push
push
sbb
fs
stos
mov
sti
std
mov
inc
sar
call
dec
fsubr
cmp
and
inc
jp
out
mov
in
in
call
adc
cmc
adc
jnp
jnp
xchg
or
add
sbb
loop
adc
pop
dec
pop
lock
data16
das
jb
sbb
pushf
cmpsb
sub
sub
mov
and
cmp
and
push
mov
push
ret
js
lds
xchg
scas
ss
push
out
cmp
outsl
shll
cmp
scas
jp
xor
movsl
pusha
add
pop
push
xor
stos
mov
aas
pop
push
scas
jb
jb
adc
fistl
movsl
nop
pop
dec
lea
xchg
movsb
rorb
out
pop
sti
loopne
shll
in
lahf
mov
mov
mov
inc
outsb
mov
call
in
mov
mov
div
adc
add
dec
fld
jl
imull
inc
fildll
arpl
sbb
insl
nop
cmc
sbb
ja
dec
push
je
scas
enter
lcall
mov
sbb
stc
aas
je
push
pop
adc
lea
or
out
sbb
adc
rcrl
xor
out
adc
out
jnp
fldt
push
push
push
jae
inc
aam
jns
push
adc
scas
shrl
xchg
ss
xor
clc
fimull
cmpb
mov
pusha
push
jo
loope
lcall
call
adc
sub
jnp
stos
daa
nop
pushf
insb
jle
pushf
pushf
mov
sub
ret
rorl
jnp
jb
loope
outsl
cmp
push
movsl
cmp
sbb
jo
mov
mov
or
pop
aas
xchg
loopne
in
icebp
mov
xor
cmc
ret
push
iret
xchg
out
jp
add
shll
mov
arpl
mov
pop
push
scas
jmp
sub
lods
pop
sub
mov
and
mov
mov
cmpsb
test
xlat
into
mov
outsb
ds
inc
rolb
pop
mov
mov
push
xchg
add
in
dec
sti
movsb
out
out
call
out
into
jb,pn
dec
mov
ret
call
add
adc
adcb
cmp
push
dec
pusha
jbe
adc
inc
jnp
and
xchg
inc
subb
sti
mov
push
addr16
pop
pop
mov
dec
push
inc
movsl
aad
push
leave
lahf
sbb
push
dec
mov
sub
lahf
sbb
jae
movsl
lods
add
pop
cmc
add
or
pusha
or
lret
xchg
pop
dec
aas
pop
inc
mov
inc
shlb
xor
aam
inc
mov
xchg
dec
ja
sbb
lret
pop
add
xchg
loopne
sti
into
pop
lcall
rolb
mov
inc
push
in
jle
ds
push
jb
outsw
pop
leave
andb
adc
inc
dec
test
or
nop
mov
inc
and
dec
pop
out
pop
sub
sbb
or
mov
sbb
pop
mov
repz
sbb
dec
in
cmp
clc
stos
cmp
inc
mov
mov
jo
int3
loop
mov
sub
cmp
fsub
inc
enter
sub
xchg
adc
inc
xor
inc
dec
shl
orl
mov
pop
jo
mov
sub
lret
out
jbe
pop
mov
loop
ret
icebp
add
dec
and
cmp
nop
dec
and
sbb
sarl
xchg
pop
pop
sub
xlat
shl
pop
push
test
fisubrs
int3
mov
loop
fists
pop
xchg
push
push
and
jae
shrl
loopne
sbb
lret
sti
adc
add
imulb
mov
mov
or
mov
inc
in
into
test
mov
cmpsb
mov
push
sub
jle
dec
jnp
lahf
fwait
test
ljmp
test
frstor
mov
test
aaa
test
inc
es
xor
stc
fdivl
and
xchg
pop
sbb
out
rcrl
and
test
and
push
testb
out
cltd
jp
xor
nop
xor
call
fwait
shl
dec
or
mov
cmp
cli
xchg
out
pop
seto
fwait
jg
adc
jns
pop
mov
cmp
cli
ss
repz
cmc
inc
imul
es
ds
mov
pop
out
addr16
insb
jae
and
imulb
push
inc
sub
mov
cmp
or
adc
cmp
push
inc
mov
mov
stos
jno
jb
pop
pop
pusha
cwtl
sbb
xchg
out
push
mov
sbb
pop
cmpsb
inc
mov
punpckldq
xor
ret
movsb
lahf
lock
dec
mov
rclb
popa
negb
lock
jbe
mov
rolb
mov
ljmp
int
or
test
jns
xchg
loope
sarl
push
div
sbb
jg
mov
lea
mov
cmp
cmp
movsl
jge
xchg
decl
incb
add
dec
mov
gs
in
and
test
sub
push
jecxz
dec
jge
jb
xor
mov
cld
leave
mov
lret
mov
pushf
clc
xchg
mov
fstl
jno
clc
adc
test
popa
orl
cmp
inc
hlt
enter
xchg
sub
in
aad
in
cmc
movsb
jge
mov
call
loopne
mov
push
sub
push
push
cmp
out
ret
mov
xor
cwtl
xchg
push
das
xchg
mov
adc
outsb
sub
cli
xor
in
ds
jecxz
inc
dec
ds
cltd
mov
jl
or
pop
jno
ret
dec
sbb
push
push
push
push
js
mulb
paddsb
repz
inc
push
movsl
xchg
loop
jge
xchg
loope
push
sbb
cwtl
xchg
mov
adc
fs
and
cmp
mov
jle
dec
sti
outsl
gs
pop
sub
cmpsb
movsb
mov
fisubrl
add
jnp
mov
lcall
sub
shlb
lea
push
jbe
mov
mov
mov
jl
lret
and
stos
and
xor
lods
imul
leave
lods
rcr
xlat
xor
inc
push
push
push
cmc
sbb
mov
aad
fistps
out
jb
filds
dec
lea
jg
xchg
lcall
mov
aad
stc
dec
or
xor
adc
stos
fsubs
jg
lds
bnd
ja
mov
cmpsb
ljmp
sub
xor
in
sti
subb
mov
or
or
pop
insl
jae
imul
outsb
mov
pop
ss
cltd
push
testb
pop
daa
rolb
dec
pop
cmp
xor
or
aas
scas
orl
and
sub
sbb
add
xchg
mov
lret
sub
sbb
xor
sbb
xor
xor
mov
mov
or
cs
xchg
mov
inc
dec
mov
lock
cld
cltd
lea
rcrb
pop
xor
mov
shll
dec
push
loopne
mov
and
inc
and
jnp
test
in
ret
out
jo
sahf
push
je
bound
pusha
push
cld
inc
loopne
je
adc
pop
push
repnz
push
xchg
dec
nop
aam
ret
mulb
dec
push
daa
icebp
popf
jge
mov
cwtl
insb
clc
outsl
dec
lret
mov
aam
push
pop
adc
aad
xchg
dec
inc
dec
rclb
adc
mov
mov
dec
inc
fisttpl
fisubrs
pop
sub
pop
outsl
and
inc
xchg
test
inc
inc
xchg
icebp
loopne
shlb
stc
stos
cli
adc
stos
pop
enter
jg
xchg
cmpsl
dec
test
xlat
inc
mov
ret
jo
push
movsb
shll
jbe
cmp
frstor
push
adc
imul
test
xchg
mov
jbe
fistpl
sub
test
or
les
or
jge
imul
jbe
sbb
repz
js
out
cmp
fs
sub
in
test
lods
pop
int
aas
push
pop
test
sbb
mov
xlat
out
mov
loopne
loope
aas
movsb
xor
out
inc
inc
xlat
mov
loop
in
pop
or
xchg
and
aad
daa
ficoms
pop
jmp
dec
ds
dec
pop
jge
sarb
xor
fwait
jae
xor
jo
in
or
aam
mov
sbb
clc
jmp
lret
nop
popf
in
lods
arpl
insb
sub
xchg
aad
lret
jae
lods
fstps
je
inc
pop
push
push
fists
not
and
sbb
rcrb
pop
jmp
inc
push
out
pop
cmp
jmp
cltd
enter
dec
xor
jecxz
mov
js
xchg
sub
jae
cmp
or
rcrb
jns
mov
rcrl
inc
cmp
sbb
cmc
push
outsl
mov
push
outsl
cmp
repz
testb
inc
out
dec
xchg
cmp
push
push
or
rorl
xchg
test
xchg
and
or
add
jle
aas
adc
ficoms
sub
lods
fwait
sub
and
sbb
and
addr16
ret
push
pop
dec
mov
xchg
jae
popf
and
and
push
or
mov
xchg
ljmp
push
test
cmp
mov
mov
testl
add
xor
mov
and
lds
ss
popf
dec
fwait
mov
xchg
mov
loop
fwait
les
add
mov
mov
push
xchg
and
pop
jb
rcr
mov
adc
testl
sub
xor
mov
mov
lock
loop
repnz
and
dec
pushf
inc
xchg
hlt
dec
lea
lcall
mov
pop
push
xchg
fmull
das
xchg
mov
pop
test
cmpsl
fadd
sbb
mov
scas
sub
add
sbb
aam
pop
add
aaa
jno
mov
cs
mov
imul
out
pop
cmp
out
mov
mov
adc
repz
and
testb
in
outsl
add
adc
fld
xchg
push
inc
fildl
xchg
sbb
mov
idivb
jg
pop
add
inc
or
hlt
cmpsl
sarb
mov
mov
aam
fdivrp
fwait
push
dec
jge
les
push
mov
addb
clc
shl
scas
xchg
pusha
data16
lahf
mov
sub
hlt
mov
sbb
add
pop
xor
add
mov
sub
test
loopne
mov
xchg
jae
xor
dec
push
iret
xchg
test
clc
and
in
push
pop
fidivrs
pop
fadds
inc
mov
loope
mov
mov
test
cld
push
xor
out
or
aam
xchg
test
mov
divl
fstpl
dec
outsl
push
push
lret
sbb
cmp
cmp
inc
add
clc
daa
fsubr
inc
leave
rcrl
fwait
imull
and
mov
adc
mov
pop
out
dec
icebp
lcall
fimull
pop
pop
xchg
shll
mov
jb
pop
orl
dec
ljmp
lret
mov
cmp
arpl
xor
sub
or
sahf
fsubrl
pop
test
mov
xor
outsl
hlt
mov
dec
cld
cmp
push
lret
xchg
or
mov
push
je
add
aad
mov
andl
hlt
jp
popf
repz
pop
movsb
sub
or
shrl
pusha
enter
incl
sub
mov
xlat
jo
outsb
mov
sub
inc
jo
fs
xchg
sub
lret
test
mov
push
les
and
rcl
shl
inc
xchg
inc
xchg
dec
dec
pushf
shlb
stos
addr16
cmp
movsb
in
xchg
mov
out
movsb
shl
mov
ret
jg
xor
mov
sahf
test
push
rorb
add
mov
inc
enter
xor
xchg
push
jl
enter
inc
loope
jae
cmp
mov
dec
xchg
and
fstpt
and
lcall
mov
push
addr16
adc
sub
xchg
xor
push
cmpsb
addr16
sub
xor
inc
and
rcrl
pop
sub
adc
cmp
and
sarw
iretw
xchg
mov
jb
mull
push
mov
mov
lret
es
aas
sbb
xor
push
dec
shl
fstpl
ja
sbb
insl
nop
xorb
hlt
xor
or
ficoms
push
roll
dec
push
sbb
jmp
jnp
mov
xchg
lret
push
js
adc
lds
or
insb
in
add
notl
fildll
dec
das
mov
push
lret
sbb
jl
scas
sbb
inc
ja
ret
mov
shl
mov
and
popf
mov
mov
sub
pop
mov
sbb
cmp
enter
incb
jnp
fistpll
push
mull
or
in
test
cmp
outsb
repnz
fisubrl
xchg
jae
aad
and
mov
or
mov
repz
cmp
js
and
and
or
aaa
jbe
sub
loope
mov
push
in
mov
inc
mov
imul
mul
pop
out
xchg
mov
or
inc
sbb
outsb
inc
xor
sub
cmpb
in
ret
xchg
pop
adc
bound
sub
mov
push
testb
pop
ds
clts
adc
cmp
inc
dec
js
outsb
jb
in
repz
mov
test
movsb
dec
jb
dec
xor
call
sub
mov
imul
mov
push
mov
and
sub
cli
mov
stc
mov
cmp
pop
sub
push
mov
daa
jg
loopne
sbb
add
mov
pop
jp
in
fbld
jmp
out
adc
ret
fmuls
inc
sbb
cmp
dec
mov
mov
arpl
inc
iret
mov
cmp
pop
ret
ds
or
daa
push
sbb
jge
dec
push
subb
or
int3
mov
out
dec
mov
mov
cmpl
dec
pop
adc
rcll
sbb
ds
scas
sbb
scas
xlat
clc
adc
inc
push
nop
bound
das
mov
push
xor
cwtl
or
mov
cmpsb
jne
sub
xchg
mov
sub
mov
popf
repz
xor
jl
fucompp
and
sub
stos
jo
pop
pop
mov
neg
in
nop
cmp
cli
jle
test
sub
mov
cmp
imul
out
sbb
aaa
cmpsl
adcb
mov
mov
out
jns
jnp
mov
inc
pop
xchg
cmc
ficoml
cwtl
inc
adc
add
mov
fsubs
mov
sarb
fcos
and
es
pop
fdivrl
lods
mov
loope
icebp
jmp
xor
or
xor
mov
je
xchg
inc
cmp
mov
mov
loop
mov
icebp
daa
xchg
jp
sub
add
xchg
mov
push
loope
daa
mov
mov
push
cmp
mov
in
inc
popa
out
inc
xor
or
rclb
insl
rcll
into
mov
insl
enter
mov
mov
lods
out
push
std
cmp
xchg
dec
push
xor
dec
pop
test
xor
int
cmpsb
and
sbb
mov
cmpsl
sbb
or
call
ljmp
jl
fsubrs
push
pop
pop
mov
or
lods
cld
iret
cmp
insl
and
or
ds
xlat
cmp
mov
mov
sbb
lret
in
xchg
sahf
add
add
push
test
pop
insl
pop
arpl
xchg
sub
push
push
jecxz
add
fisttps
dec
pop
cli
lock
dec
sbb
test
pop
mov
cwtl
jns
jbe
addb
ret
enter
data16
dec
insb
aaa
pop
dec
lahf
xchg
add
in
add
lret
repz
mov
mov
fsubr
cmp
leavew
les
push
sbb
arpl
fsubr
xchg
cmpsl
jo
cmpsl
hlt
and
mov
or
or
inc
xchg
xabort
dec
sti
jb
push
xchg
pop
rcr
cmp
jle
push
inc
push
dec
inc
ja
in
popf
dec
pusha
cmp
jg
push
pop
mov
push
xchg
es
mov
ljmp
adc
xlat
inc
test
hlt
mov
xor
sub
xlat
test
jnp
xchg
push
inc
adc
sub
inc
insb
xchg
mov
mov
or
sarb
cli
into
repz
comiss
daa
mov
leave
mov
hlt
sub
inc
sub
lods
sub
jb
jle
aad
jmp
xchg
prefetch
jmp
adc
loopne
dec
mov
xlat
xchg
lods
std
and
push
mov
and
out
adc
mov
inc
mov
ss
mov
adc
mov
cmpb
mov
cmp
in
xchg
iret
mov
cmp
mov
pop
dec
cmp
jg
add
inc
enter
adc
inc
je
cltd
lret
sub
outsb
adc
mov
sbb
imul
daa
or
loope
sub
jge
mov
mov
loope
xorl
aad
cmp
inc
sbb
lock
xchg
mov
or
bnd
fisubl
pop
lret
test
aaa
inc
lahf
andb
mov
mov
add
cwtl
imul
push
movsl
aad
dec
jo
inc
mov
add
imul
xchg
aas
lcall
add
mov
clc
arpl
nop
in
repnz
popf
lock
std
mov
cwtl
push
test
into
sahf
jns
sbb
and
mov
loopne
jl
mov
out
call
and
xchg
add
mov
out
sar
xchg
sbb
sarb
push
in
add
in
sub
sub
ret
xchg
sbb
test
loope
cmpl
iret
insl
xchg
fidivrl
fmuls
pop
jecxz
aas
add
call
inc
jmp
jle
scas
and
jp
jae
in
jb
fcmovne
in
imul
adc
inc
ret
pop
cs
mov
inc
inc
test
mov
and
sub
ret
je
mov
cmp
pop
jns
sti
inc
push
in
push
test
addr16
rcrb
xor
out
mov
test
mov
loope
shlb
fistps
fmuls
sub
leave
std
stc
sub
lock
je
mov
int
ljmp
jo
in
fildll
movsb
movsb
popa
loop
sub
adc
xchg
jno
shlb
addr16
mov
fiaddl
orb
or
mov
lcall
jns
hlt
jg
sub
xchg
lock
rorb
push
xor
mov
popf
xchg
loop
shrl
push
cli
pop
sub
and
cmp
adc
jo,pt
mov
jae
jo
push
imul
outsl
jbe
das
jae
andl
lahf
pop
mov
pushf
jecxz
sbb
pushf
cld
in
add
out
mov
mov
push
push
jne
insb
or
test
mov
addl
push
movb
mov
addr16
scas
jae
mov
inc
sbb
push
xchg
pop
mov
ret
fcoml
pop
mov
movsl
cmp
jbe
push
dec
iret
fcoms
cmp
leave
and
mov
mov
cmp
adc
jb
rcrb
lds
dec
pop
loop
ret
cs
inc
xchg
ffreep
fwait
ljmp
mov
in
nop
rorb
mov
sbb
pop
push
pop
leave
ret
xlat
insl
fbld
ret
mov
subb
daa
lahf
ja
mov
ficoml
sub
arpl
mov
movb
and
pop
sub
arpl
sub
or
mov
xchg
pop
mov
paddw
movsb
and
rol
adc
inc
mov
inc
in
repnz
dec
mov
xor
xchg
test
push
push
faddl
xor
rcrl
out
mov
mov
xor
stos
out
mov
jbe
movsl
sub
xchg
jecxz
dec
fdivrl
push
xor
jmp
mov
sbb
sub
sar
sbb
mov
mov
jg
lods
hlt
out
push
pusha
add
int3
arpl
and
test
shr
rcl
adc
lcall
mov
leave
test
fstpl
cmpsl
pop
or
push
not
in
xchg
pop
xchg
bnd
sbb
sbb
jecxz
ja
mov
mov
ja
mov
fstl
jno
jne
add
pop
mov
ljmp
mov
stc
pusha
mov
pop
js
add
inc
dec
out
cmp
xchg
sti
sbb
leave
rcll
cltd
and
dec
pop
and
and
inc
pop
pop
mov
add
test
xchg
mov
jnp
fidivrl
imul
cmp
dec
sub
xor
repnz
dec
faddl
repz
stos
outsb
psubusw
xchg
sub
mov
sbb
cmp
jle
dec
movl
lcall
jmp
mov
add
sbb
jb
mov
inc
aaa
stc
pop
icebp
mov
add
icebp
push
push
xchg
xor
lahf
dec
lock
outsl
jae
cmp
dec
jecxz
movsl
sub
loopne
loopne
mov
sahf
dec
inc
lea
scas
adc
ljmpw
dec
mov
lds
std
ret
int3
pop
mov
jns
xor
scas
sbb
pop
cs
xchg
cmpsl
loopne
xor
jge
and
lret
xchg
sbb
dec
pop
sahf
rcl
and
cmp
mov
shlb
jp
cld
lds
lds
imul
fcompl
negl
mov
and
sub
cltd
xlat
cmp
test
roll
and
cld
insl
daa
lahf
sub
test
or
lea
sahf
pop
or
shrl
mov
idivb
test
pop
stos
xchg
test
imul
dec
xlat
clc
jg
in
dec
add
jnp
fcomi
pop
out
push
sti
dec
push
test
pop
repz
lahf
pop
or
and
sub
mov
lock
pop
and
xchg
das
pop
call
jmp
dec
ja
sbb
out
cmp
les
mov
addr16
movsl
jmp
test
idivb
sahf
jns
insl
pushf
into
and
sub
add
adc
orb
pop
call
mov
test
clc
les
ja
push
int3
mov
mov
fildll
mov
je
inc
out
and
jae
call
pop
pop
push
mov
aaa
xor
cmp
lcall
inc
or
pop
pop
movsl
pushf
jl
aad
xor
dec
icebp
test
adc
xor
pop
fstl
imul
cmpsl
mov
sbb
add
add
adc
mov
test
jns
cmpsb
daa
mov
imul
clc
shrl
sub
mov
xchg
out
jmp
push
dec
lcall
outsl
sub
jg
lds
adc
adc
push
pop
sbb
andps
inc
leave
push
add
mov
pop
cli
or
iret
or
xchg
lcall
inc
mov
mov
movsl
ret
fwait
out
aas
dec
xchg
lahf
fcoml
push
push
int3
je
xchg
notl
pop
dec
adc
jno
or
jle
pushf
jecxz
mov
into
pop
xchg
test
xor
fdiv
mov
mov
dec
clc
dec
outsl
jb
add
nop
adc
aaa
aad
ja
adc
sbb
xchg
cmp
jecxz
lret
fwait
ret
daa
inc
cwtl
sub
in
mov
xchg
mov
je
mov
sbb
pop
adc
push
sahf
or
rorb
mov
test
movsl
movq
jmp
push
ja
mov
loop
fwait
push
je
jnp
push
pop
push
mov
cs
js
cmp
inc
lahf
pop
adc
cmpsl
jmp
outsl
jmp
push
xchg
jns
sbb
xchg
in
jnp
and
js
test
in
hlt
mov
sbb
or
dec
aas
mov
iret
sub
mov
ljmp
mov
sub
sbb
rcl
loopne
outsb
movsb
in
arpl
dec
popa
mov
push
jns
mov
inc
push
xchg
shll
call
push
sbb
mov
lcall
jle
cmp
cs
mov
mov
jl
add
sahf
adc
scas
mov
mov
in
push
cmp
negb
pop
push
cmp
daa
or
cli
popa
jg
gs
xor
pushf
fildl
sub
pusha
mov
cltd
mov
aas
test
faddl
andl
mov
sub
sub
std
adc
mov
jbe
sti
shrb
cli
mov
xchg
into
mov
xchg
add
lret
gs
mov
or
xor
or
sarl
dec
or
int
fsubl
jns
aaa
and
and
jns
mov
in
pop
cmp
push
scas
loop
out
cmp
sub
popa
sahf
jmp
pop
sti
out
int
cmp
mov
push
adc
pop
mov
int
icebp
inc
and
fs
or
mov
in
ret
les
dec
jae
orl
fdivr
mov
cmp
jae
xor
in
movsb
add
sbb
inc
test
cmp
dec
loope
out
mov
pop
mov
test
and
or
jne
sub
mov
or
repnz
xchg
test
xor
loop
fadds
bts
cs
imul
lods
mov
lea
stos
insb
adc
push
insl
mov
and
fisubs
jle
jmp
cmp
shl
xchg
ljmp
mov
in
push
test
and
aas
imul
enter
sbb
sub
test
push
xchg
lahf
dec
test
test
adc
push
test
add
mov
lods
insl
lcall
lods
arpl
out
insb
add
jnp
addw
dec
movsl
and
pop
mov
and
sahf
fisubl
jmp
cmp
add
leave
add
loop
fwait
mov
sub
fisttpl
lea
mov
dec
inc
rorb
decb
les
xchg
mov
test
dec
push
mov
es
decb
adc
popf
popf
push
movsb
movsl
leave
jae
mov
xor
es
mov
pop
cmc
xor
sbb
sub
xlat
inc
dec
and
es
cld
rclb
sbb
clc
cmpsb
pop
pop
mov
shlb
dec
hlt
xchg
jne
aas
sbb
mov
movsl
adc
or
cmpl
xlat
inc
mov
movsb
mov
dec
mov
pop
push
stos
cmp
xor
sbb
scas
xchg
mov
jnp
js
mov
xchg
lods
or
add
cmp
jg,pt
adc
leave
xor
jo
cmp
add
mov
rcll
jmp
cmp
fucomp
aas
push
cmpsb
fsub
test
rclb
cmp
stos
call
movsb
add
xlat
adc
fidivrs
push
or
add
xlat
add
sub
iret
cld
ds
bound
xchg
icebp
mov
jno
cli
push
or
push
aam
add
inc
mov
icebp
xlat
cmpsl
pop
jl
scas
mov
fisttps
loop
in
arpl
mov
xchg
movsl
mov
jne
int
adc
js
inc
loop
dec
and
dec
sbb
mov
mov
mov
pop
sti
lret
cwtl
aam
mov
je
scas
dec
sbb
and
xchg
mov
xchg
mov
enter
pop
cmc
mov
inc
daa
adc
fwait
incb
mov
je
mov
mov
sub
mov
xchg
dec
sub
jge
inc
lahf
xchg
pop
xorl
testl
mov
xor
pop
inc
int3
jge
out
or
push
in
adc
shl
pushf
stos
test
aam
roll
sbb
dec
dec
mov
xchg
push
gs
mov
inc
fcmovne
push
add
mov
lcall
arpl
jl
jecxz
jmp
cmp
sbb
mov
pop
inc
nop
sub
sbb
mov
push
in
movsl
in
aas
push
or
mov
fmuls
fdivrs
iret
daa
xchg
repz
les
cltd
pop
ror
pop
mov
inc
mov
jecxz
ficompl
hlt
loopne
imul
xor
inc
popf
adc
movsl
scas
lds
loope
mov
pop
in
mov
lea
xchg
insb
call
sbb
or
inc
hlt
arpl
je
stos
push
cmp
movsb
xor
mov
mov
mov
leave
mov
push
mov
mov
andb
filds
push
enter
int
jne
test
or
repnz
mov
mov
mov
adc
or
lds
test
popa
arpl
fsubrl
and
xchg
push
loope
bsf
jecxz
jge
push
leave
dec
iret
stos
cli
jl
or
dec
sbb
push
jle
in
adc
iret
lock
jmp
push
sub
push
mov
call
or
and
inc
test
jge
rcrl
jnp
mov
jmp
push
sbb
add
stos
in
js
push
and
mov
cmp
fidivs
mov
xchg
test
mov
ds
adc
test
imul
push
jo
sub
addl
iret
pop
into
xor
fs
in
pop
outsb
std
cmc
jge
rcll
adcl
xchg
push
mov
xchg
fwait
mov
popa
xor
push
inc
xchg
or
out
shrb
and
cmp
movsl
inc
jbe
pop
nop
inc
push
add
push
push
popa
fwait
and
ss
pop
fs
mov
jno
cli
mov
mov
ret
icebp
cmp
jle
aad
lret
aad
test
stc
into
pushf
repz
sub
mov
mov
sbb
fnstenv
adc
mov
mov
sub
movsb
sbb
add
sti
push
sub
jnp
jecxz
ror
dec
jnp
fs
popa
xchg
lea
push
popa
pop
cmp
and
out
pusha
loope
sub
lock
xchg
mov
jp
shl
popf
xchg
jl
das
inc
cmpsb
stc
mov
movsl
push
push
sbb
jno
sub
jecxz
dec
pop
stc
mov
mov
sti
ret
sbb
jecxz
in
adc
ret
jnp
flds
pop
inc
jne
xchg
sbb
lret
adc
stc
jmp
mov
sbb
scas
mov
mov
push
mov
jmp
cwtl
scas
sbb
or
jle
repz
aad
add
jnp
jbe
fs
lods
pop
pop
lods
sub
dec
ret
jb
call
data16
pop
cwtl
test
pop
pop
ret
adc
lea
movsb
sbb
and
adcl
cmp
adc
sbb
pop
sti
inc
cmp
test
xchg
jp
outsl
loop
and
xor
aas
fsubl
mov
mov
cltd
mov
sbb
or
mov
out
sub
mov
cmp
or
mov
dec
mov
fistpll
xor
jb
jne
inc
jmp
sub
stos
fildll
cmp
inc
inc
xchg
cmp
ret
jae
pop
daa
mov
ficompl
cs
mov
mov
pop
mov
shll
in
shlb
inc
jmp
xor
adc
mov
cmp
ret
stc
sar
and
pop
add
fsubr
test
xchg
inc
mov
je
rcl
adc
subl
shlw
cmpsb
inc
outsl
stos
dec
push
mov
repnz
jmp
jae
dec
mov
and
and
pusha
add
popf
ljmp
lods
inc
mov
push
adc
add
out
mov
xchg
dec
xlat
mov
cmpsl
lret
outsb
cli
mov
roll
push
outsl
sub
pop
or
test
and
out
xchg
arpl
xchg
mov
filds
inc
cmp
daa
jne
xor
and
xchg
jno
sbb
mov
sbb
scas
xor
aaa
adc
pop
mov
lahf
ja
cli
fwait
jb
pop
sub
adc
ljmp
ret
std
mov
jge
das
sub
mov
int3
sub
push
mov
inc
out
pop
faddl
dec
fisttpll
out
scas
mov
js
push
adc
jg
loope
xor
push
mov
mov
mov
cmc
inc
lret
and
xor
fwait
pop
sub
je
arpl
mov
outsb
addr16
adc
std
push
sbbl
dec
fdivl
ja
mov
dec
mov
rolb
leave
sub
pop
clc
push
inc
sbb
cmp
outsl
mov
sbb
loopne
xor
jl
inc
in
push
fs
decl
shll
push
push
pop
or
sbb
iret
sub
out
pop
pop
icebp
cmp
cmpsl
scas
std
jecxz
push
jg
cmp
inc
dec
in
jno
xchg
sub
cmpb
mov
and
loopne
sbb
fcmovu
xor
mov
sti
lahf
cmp
iret
mov
dec
cmpsl
rol
sbb
hlt
xchg
push
ret
sub
test
sarb
jecxz
and
ljmp
pop
jne
aad
test
imul
adcb
repz
pop
rcrl
sbb
cmpsb
dec
stos
test
test
and
jnp
sub
push
addr16
cs
aaa
ljmp
shlb
fadds
xor
sahf
ror
cmc
pop
inc
jnp
pop
mov
push
ret
sbb
pushf
into
lcall
push
inc
outsb
mov
and
adc
xor
lcall
pop
jb
lds
fwait
jl
and
xchg
mov
fstps
mov
cmp
mov
dec
xchg
push
in
shr
aad
jbe
cmpsb
es
out
inc
push
aas
adc
dec
adc
mov
pop
movsl
cmp
pop
fistpll
sahf
jb
loopne
cmp
add
insl
into
adcl
sarb
xchg
sbb
out
rolb
and
lock
and
push
fiaddl
ret
xor
gs
cmpb
and
xor
pop
push
cmp
inc
mov
push
push
in
in
xor
push
loopne
inc
xorb
lcall
sbb
xchg
pusha
orb
cs
inc
repnz
ja
test
aaa
sub
jns,pn
shr
pop
das
push
mov
mov
cld
ficoml
imul
sarl
ficomps
sub
pop
call
arpl
je
stos
scas
inc
cmc
data16
pop
dec
lahf
mov
xchg
xor
pop
scas
jmp
in
ret
add
jae
or
repnz
sahf
jne
out
movsl
repnz
inc
xchg
lret
insl
add
test
outsb
pop
fisttpl
inc
roll
rol
movsb
adc
or
cmp
lcall
jle
in
leave
mov
inc
iret
shrb
mov
mov
push
lea
mov
iret
test
fistpl
leave
cli
add
and
and
mov
cmpsl
inc
ret
ret
xor
mov
add
xchg
mov
idivl
mov
mov
xlat
xchg
xchg
mov
insl
rolb
pop
add
sbb
jno
adc
or
xchg
dec
insl
dec
adc
push
cmp
dec
xchg
bound
mov
fxam
lret
andl
cmp
sbb
enter
adc
fcomp
lahf
in
sbb
sub
xchg
das
test
popa
xchg
in
jae
dec
sti
lea
fldt
mov
inc
aam
jl
pop
jno
cmc
or
cmp
pop
mov
loopne
fsubrs
mov
or
pop
movsl
arpl
mov
or
cltd
xchg
aad
sbb
and
xchg
push
fsub
stos
sbb
xchg
jno
gs
sub
shll
cmpsb
pop
xlat
lret
pusha
lea
inc
das
jb
stc
test
js
mov
sahf
ja
mov
push
fxch
rclb
adc
xchg
sbb
mulb
ds
add
push
xor
shrb
pushf
mov
and
std
or
jp
adc
ja
push
add
dec
inc
adc
cmpsb
leave
sbbl
mov
loop
or
stos
test
xchg
adc
sbb
lock
sbb
mov
xchg
out
scas
mov
sub
sub
sar
sti
and
out
ud2
dec
imul
cmp
jmp
mov
jb
andb
pop
add
mov
adc
xchg
imul
cmpsb
pushf
xchg
inc
fcomp
hlt
or
xlat
bound
movsb
jo
adc
jnp
les
mov
jge
adc
jmp
xchg
lock
adc
mov
sbb
mov
cmc
sbb
je
mov
scas
pushf
mov
mov
stos
dec
add
inc
xchg
fiadds
xor
sahf
xor
imul
jp
adc
xchg
mov
jge
mov
add
mov
ret
mov
int3
push
scas
xor
cwtl
add
jb
pusha
sbb
bnd
add
jmp
out
sti
divb
sub
sub
adcb
addr16
and
sbbb
sbb
ret
pop
mov
dec
xchg
add
sbb
sub
cmc
push
ret
mov
js
scas
in
dec
scas
push
xchg
push
mov
in
cmpl
xlat
mov
fmuls
adcb
sbb
pop
inc
stos
fidivrl
call
sbb
mov
xchg
jns
inc
pop
push
add
push
cmc
stos
mov
lcall
xor
xor
mov
mov
out
jae
dec
mov
pusha
or
sub
xchg
sbb
or
push
je
js
mov
test
and
aam
lods
lods
jns
fidivl
clc
sahf
in
std
push
ljmp
lods
add
insl
rclb
fdivs
pop
ficoms
pop
js
or
ret
call
xchg
pop
std
add
inc
add
hlt
fsubl
mov
inc
push
sti
fwait
cmpb
test
movsl
sbb
lock
aaa
push
or
int3
mov
leave
cld
xlat
lcall
xlat
mov
fimull
shlb
sarl
mov
mov
clc
or
hlt
scas
mov
cmp
adc
cli
sbb
pop
mov
shrb
push
jns
outsb
fcoms
out
dec
bound
cmp
inc
sub
mov
out
pushf
clc
dec
imul
pop
mov
stos
sub
pop
stos
mov
in
xor
outsb
rcr
hlt
repnz
cld
mov
jns
push
mov
mov
inc
sbb
mov
push
ljmp
pop
mov
and
cmp
scas
sbb
xor
inc
add
daa
dec
adcl
je
stc
push
shrl
mov
lods
pop
mov
int3
push
dec
adc
jae
push
aas
sbb
int
aam
js
imul
or
sbb
jo
in
push
sub
mov
dec
mov
push
shll
je
mov
jo
and
mov
xor
xchg
xchg
dec
jmp
orb
in
jo
fnsave
faddl
pop
cmp
push
mov
aaa
xor
outsl
jns
movsb
inc
insl
lret
pop
adc
pushf
roll
inc
mov
add
scas
stos
cmp
pop
imul
mov
mov
es
pop
rol
fcoms
les
stos
loope
arpl
lock
addb
dec
aad
pop
mov
mov
push
cs
pop
test
lret
syscall
sbb
mov
inc
nop
mov
xorl
push
inc
cmp
scas
jmp
fsqrt
push
adc
add
fsts
add
aad
ret
scas
add
pushl
mov
jg
xchg
inc
fidivl
jecxz
cmc
jo
xor
hlt
or
mov
mov
repnz
inc
mov
out
lea
std
sbb
addr16
cmp
pop
cwtl
lahf
jmp
addl
xor
roll
fistl
adc
loopne
jnp
jmp
call
insb
inc
push
mov
xchg
fldcw
and
stc
push
incb
xor
test
mov
loope
popf
in
xor
and
std
adc
adc
loopne
push
sub
pop
xor
xor
fimuls
test
call
inc
jg
data16
xchg
mov
xchg
lret
in
mov
insb
pop
inc
ja
xchg
xor
leave
nop
test
jle
push
mov
call
adc
xchg
xor
ss
sub
lods
daa
std
cmp
je
lds
jmp
mov
out
jp
shll
jmp
pop
lods
arpl
pop
mov
mov
fs
bnd
mov
pushf
push
jbe
jecxz
gs
pop
jg
subb
ljmp
aam
ss
mov
adcb
add
ret
arpl
pop
inc
pop
pop
cmc
or
addb
jmp
repz
arpl
xchg
mov
push
xor
adc
xchg
jnp
js
pop
adc
fmull
aas
int
inc
test
fcmovu
das
cld
cmp
ljmp
or
adc
xor
scas
jmp
sub
test
outsl
es
and
psubusb
push
cwtl
add
jb
fwait
and
in
mov
bound
mov
jno
arpl
cmp
sub
out
es
dec
imul
xlat
das
push
xor
pop
cmp
shl
cmp
mov
idivl
lds
jl
ret
adcl
aas
int
mov
cmp
sbb
arpl
inc
ljmp
add
je
lret
cld
xchg
mov
mov
and
movsb
sbb
push
sbb
inc
push
push
cmc
pop
pushf
test
jo
push
jne
std
adc
add
fnstenv
hlt
cld
push
sti
pavgb
sbb
mov
or
xor
sub
in
mov
clc
jnp
xor
sub
xlat
sbb
cltd
sbb
cmp
loopne
mov
mov
push
or
pop
jo
inc
pop
dec
xor
dec
nop
mov
xchg
jno
inc
push
dec
out
xor
lret
lds
push
mov
sbb
aad
mov
out
les
xor
rcrl
out
and
lock
lods
mov
inc
mov
sahf
aad
adc
out
mov
mov
imul
loop
or
data16
push
les
sbb
cmp
cmc
push
xor
or
insb
enter
gs
pop
add
outsb
dec
inc
push
rclb
pop
mov
adc
pop
lcall
ret
pusha
dec
inc
xor
fldcw
arpl
jae
push
adc
sahf
scas
cld
xor
into
or
inc
mov
testl
shl
sub
push
icebp
and
mov
xchg
and
inc
je
ss
sahf
mov
jge
lods
stos
pop
int3
push
mov
jnp
dec
mov
sbb
xor
mov
arpl
pop
insl
neg
loop
jl
loope
xlat
popa
int3
push
xlat
pushl
cwtl
cmc
in
pop
and
loope
add
push
jmp
dec
stos
push
rcrb
leave
rorl
rcll
mov
inc
repz
les
fstps
ja
aam
adc
loop
mov
xor
pop
sub
mov
fcomps
pushf
repnz
xchg
clc
imul
enter
lods
fmuls
adcl
cli
dec
stos
mov
cmpsb
pop
stos
daa
enter
stos
and
mov
adc
xchg
push
adc
adc
xor
inc
mov
mov
lret
out
decl
sub
sbb
and
out
in
aad
lods
add
mov
test
adc
arpl
sub
mov
cmp
jnp
lods
cwtl
cwtl
cmp
shll
and
inc
mov
or
dec
cmp
jns
test
pusha
adc
jae
test
xor
mov
sub
pop
outsb
ss
rcr
mov
mov
xchg
daa
fisttpll
xchg
jne
jg
shlb
out
pusha
in
dec
std
scas
in
sarl
shl
cmp
mov
test
divl
insl
adc
popa
adc
pop
shrl
adc
je
adc
shrb
inc
popa
rclb
mov
cmp
cmpsl
arpl
or
lods
mov
and
ja
xor
lock
sub
push
xchg
int
rorb
fcmovnu
push
sub
stos
scas
scas
iret
movsb
lret
jns
repnz
fisttpll
stos
add
or
out
adc
jg
xor
inc
leave
gs
sbb
lahf
lret
jge
or
clc
icebp
jg
fwait
xor
mov
cmp
sahf
das
cmpb
mov
dec
pop
scas
iret
imul
ret
repnz
pop
mov
cmpl
inc
jo
mov
hlt
inc
and
xchg
jb
arpl
adc
lcall
cmp
add
pop
push
cmp
fiadds
mov
lcall
movsb
xchg
mov
mov
aam
dec
sti
push
mov
popf
fstp
int3
mov
je
in
inc
sarl
mov
decl
fsub
in
push
es
bswap
push
in
add
cmp
fisttpll
negl
popa
cmpsb
cwtl
xchg
dec
inc
pusha
mov
mov
sub
shll
push
push
sbb
cmp
daa
imul
sbb
and
outsb
movsl
inc
inc
dec
into
pushf
gs
push
cli
andl
into
lcall
sahf
cmp
adc
in
daa
lret
mov
ds
dec
push
mov
sbb
dec
rolb
test
int
fdivrs
cmpsb
sub
cmp
and
mov
in
xchg
dec
adc
arpl
fimull
xchg
push
aad
dec
push
stc
and
out
and
mov
repz
mov
xchg
into
sub
mov
xchg
inc
clc
cwtl
nop
jbe
push
sub
mov
repnz
sub
shlb
sbb
fstpt
std
xchg
insb
lret
outsb
dec
out
mov
sub
adc
inc
addr16
jge
outsb
jle
ret
xchg
adc
mov
pop
test
push
out
mov
mov
and
sub
out
insl
test
aas
lret
mov
ss
addb
sahf
jecxz
inc
scas
push
inc
sbb
imul
fwait
jmp
les
loope
cmc
pop
and
in
push
cltd
dec
pop
hlt
mov
adc
lds
xor
dec
inc
adc
rorl
mov
arpl
mov
and
xor
lods
mov
test
mov
dec
fidivrl
mov
incl
jbe
ds
mov
dec
out
aaa
clc
add
mov
sub
stos
jl
jae
sub
das
jle
shrb
call
push
test
jno
stc
lds
xchg
push
dec
test
jmp
fldl2t
mov
cmp
jmp
in
cmp
fldl
cwtl
bound
js
out
mov
push
push
adc
out
cmp
mov
pop
into
pop
sbb
pop
mov
stos
sbb
les
clc
fnstsw
cld
sbb
dec
int
je
leave
test
jecxz
mov
das
mov
gs
add
es
popa
add
push
add
aam
rcll
jle
cmp
out
mov
fisubrl
push
sub
call
mov
mov
xchg
test
mov
add
mov
sub
out
push
and
cmpsl
ret
in
jl
fbld
xchg
rcrb
std
xchg
shrb
pushf
hlt
xchg
jns
add
sti
mov
or
mov
and
xchg
pop
shrb
cmp
test
aas
adc
push
and
add
inc
cmpsl
cmp
aam
push
enter
jbe
sbb
pop
lea
std
in
inc
sahf
test
jg
mov
mov
and
ds
fwait
lods
mov
jge
fwait
jl
in
iret
mov
cwtl
pop
imul
dec
jg
imul
jno
add
mov
add
pop
sub
inc
mov
jecxz
clc
adc
inc
mov
inc
xor
pop
dec
sti
xorl
cmp
mov
sarb
xchg
out
dec
sahf
xor
add
jne
cwtl
and
mov
out
ret
push
sub
dec
icebp
pusha
adc
gs
dec
dec
lret
hlt
outsb
movsb
inc
cltd
jb
pop
lods
in
xchg
pop
pop
sbb
fisttps
mov
pop
sbb
decb
ficoml
sbb
add
pop
cwtl
cs
sbb
mov
dec
jmp
mov
fstps
xor
les
stos
ss
pop
dec
out
cmp
sbb
lods
std
mov
xor
xor
ficomps
and
push
js
adc
orl
dec
jo
ss
xlat
lea
stos
or
rcrb
popf
in
inc
mov
ret
dec
pop
std
dec
orb
aaa
lahf
or
inc
pop
xor
or
sbb
sahf
mov
pop
adc
mov
lods
xchg
lret
ret
push
test
adc
in
adc
mov
test
call
hlt
push
adc
out
jb
lods
in
jmp
or
push
jp
enter
jbe
movsl
enter
add
mov
cmp
pop
push
mov
add
iret
lret
bnd
add
and
push
inc
fstl
sub
push
sub
jno
cmp
aas
insl
imul
fmull
fbstp
fiaddl
cli
dec
repz
aaa
push
add
dec
fwait
mov
pop
out
stos
adc
cld
jecxz
and
jg
fdivrp
adc
aas
loopne
push
pop
push
pop
and
popa
push
imul
std
aam
jbe
jg
dec
pusha
addl
jnp
mov
lods
jl
and
adc
xor
push
ja
inc
stos
and
mov
push
cmpsl
popa
dec
fnsave
imul
iret
inc
adc
pop
gs
jge
lock
scas
leave
into
push
jmp
mov
inc
cmp
or
test
lcall
insl
addr16
mov
cmp
xlat
andl
lods
in
fcoms
jbe
mov
xor
pushf
jbe
loopne
sbbb
jge
inc
adc
mov
and
iret
insl
sahf
cltd
lods
pusha
test
push
mov
fldl
sbb
cmp
aas
mov
xlat
dec
jg
add
xor
sbbl
fs
sar
xchg
cmp
sarb
jg
out
pop
pushf
push
pop
dec
xchg
jo
rolb
popa
fiaddl
adc
ja
mov
lret
scas
pop
or
and
mov
dec
dec
push
jl
in
jnp
add
lcall
lock
cmp
jbe
xcrypt-ofb
cmpsl
out
out
ja
jnp
cmp
sub
testb
fisttpl
mov
icebp
pop
outsl
das
bnd
add
into
dec
popf
pop
jecxz
xor
jge
arpl
sbbb
int
xchg
dec
push
add
imul
into
inc
jo
lret
in
lods
mov
loop
xchg
out
pop
xor
push
xorb
adc
cld
pusha
or
mov
cmp
popa
jmp
rcrl
ljmp
jp
frstpm(287
sub
outsb
cmp
and
xchg
movsl
das
rcr
jmp
inc
jmp
out
inc
mov
pop
mov
inc
sub
adc
add
mov
repnz
fs
ljmp
imulb
rcll
push
add
test
or
push
xor
into
xchg
pushf
ds
inc
and
cmp
outsb
nop
stc
pop
mov
jb
pop
imul
iret
stc
mov
loop
jg
jecxz
fidivrs
jbe
adc
shl
outsb
sbbb
test
out
push
fwait
inc
ret
in
sub
lds
mov
setb
add
sbb
xor
add
add
xchg
adc
pop
dec
clc
mov
in
cmpsl
or
movsb
in
xor
ficoms
mov
aam
cmp
inc
test
inc
and
sbb
insb
fcmove
xchg
dec
lods
iret
in
repz
adc
leave
lret
cmc
sar
mov
jecxz
mov
inc
into
fcmovnbe
call
and
mov
jbe
rcr
sub
cli
fdivl
mov
sahf
mov
jb
adcl
fisubrl
xlat
cmp
mov
pusha
mov
sub
add
das
ud2
stos
ljmp
aam
inc
nop
sub
dec
mov
push
jge
or
not
shll
outsl
xor
int
push
popa
sbb
imul
fildll
xchg
stos
stos
lret
loop
mov
leave
fldt
ds
aam
out
ljmp
pop
clc
pushf
lods
jmp
mov
jmp
fiadds
inc
cmp
loope
dec
cwtl
ljmp
lods
rorl
das
jb
mov
sbb
sbb
inc
arpl
mov
pop
xchg
nop
xchg
and
and
addr16
jecxz
mov
scas
push
fnstenv
ljmp
adcb
pop
cmpsl
sti
sub
or
je
sbb
add
nop
cmp
mov
fcoms
adc
push
popl
js
stos
leave
sub
into
mov
out
pop
jle
xchg
fwait
cmpb
lods
pop
and
sub
adc
cwtl
xchg
xchg
mov
jmp
add
divl
pop
mov
fdivrl
inc
mov
mov
stos
xchg
mov
mov
pop
inc
cmpsl
mov
jb
lock
lcall
insl
jmp
sbb
hlt
gs
add
aas
call
cmp
push
fistpll
pop
mov
lcall
adc
jno
jmp
pop
sbb
test
adc
fisttpl
out
push
mov
adc
cmpsb
jg
ja
inc
pop
sub
pusha
pop
ret
inc
jmp
sub
cmp
ja
dec
jmp
pop
push
mov
mov
pop
push
aad
enter
push
fistps
ss
int3
push
jne
xchg
repz
cmp
popf
lock
jg
add
mov
and
mov
dec
out
mov
add
push
test
adc
fstl
mov
xchg
dec
cmp
aaa
iret
lret
rolb
fstp
and
cwtl
inc
or
and
sbb
inc
sbb
outsb
push
add
cld
jl
mov
xchg
cld
jmp
je
lret
mov
inc
gs
push
adc
fsubl
add
or
mov
jo
or
stc
lea
repnz
iret
jne
and
insb
mov
ljmp
repz
push
ds
bound
and
xor
icebp
and
shl
mov
xor
push
jne
int3
aas
jne
lret
orl
addb
insb
ret
sbb
dec
pop
das
dec
dec
sub
jnp
movsl
ret
das
sarl
pop
out
fcompl
xchg
cmpsb
pop
mov
ja
mov
jo
lock
mov
aaa
mull
jg
inc
out
sbb
fldcw
dec
xor
scas
dec
out
movsb
sbb
fisubrl
lcall
std
dec
loopne
lds
push
lock
pop
andl
mov
out
jo
loop
xchg
pushf
rorb
lock
rcll
cld
mov
sbb
mov
jne
pushf
and
in
test
bnd
bound
and
movsl
jno
xchg
cmpsl
xchg
test
scas
int
jmp
cmc
sbb
mov
iret
jns,pn
les
repnz
and
xchg
daa
pop
lods
imul
shrl
push
jle
out
inc
mov
push
aad
mov
sbb
xchg
or
or
insl
pop
and
test
sbb
fmulp
out
mov
sarb
mov
cmp
mov
xlat
aaa
fcmovne
sbb
icebp
lea
push
icebp
lods
shl
mov
push
push
daa
popfw
dec
js
jb
test
jnp
pusha
test
inc
mov
mov
ss
sbb
add
lret
and
jmp
pop
popf
pop
jmp
pop
mov
mov
ret
xchg
and
cmc
dec
pusha
mov
out
aad
add
mov
jnp
xlat
xor
or
les
jns
movsb
sub
icebp
xchg
cmp
popa
ljmp
lods
pop
lcall
inc
dec
push
lea
out
in
mov
push
shrl
push
fwait
sbb
mov
or
or
mov
inc
mov
push
pushf
xchg
cs
imul
fcomi
and
nop
dec
mov
mov
std
lret
mov
iret
clc
or
in
std
iret
adc
sbb
pop
push
adc
push
imul
popf
ja
xchg
test
out
adc
xchg
mov
adcl
mov
es
loop
mov
dec
cli
insb
pop
mov
cmp
lcall
fsts
and
sbb
ljmp
pusha
add
xor
fistps
inc
cli
hlt
inc
xchg
adc
lret
sub
in
sub
dec
dec
les
lcall
mov
int3
loopne
int
push
and
adc
add
stos
int
in
movsb
cmpsb
xor
lods
jns
out
mov
or
mov
adc
imul
cmp
test
imul
cld
arpl
rorb
push
rolb
ss
pop
scas
or
mov
fcoml
cmp
roll
jnp
push
pushf
inc
pop
or
or
jmp
jle
scas
jl
int
fadds
das
push
in
mov
or
cld
aas
ss
dec
pop
mov
mov
xor
cmp
xchg
fstpt
fisttps
stc
int3
addr16
cmp
jg
mov
out
cwtl
pop
dec
push
xchg
dec
adc
iret
mov
pusha
jp
xor
ret
gs
inc
and
cmpsb
scas
adc
dec
cmc
push
dec
dec
xchg
adc
clc
jae
mov
test
push
out
je
out
sbb
ret
push
ja
fs
jg
imul
clc
pop
stos
pusha
insl
out
pop
aas
imul
js
inc
sub
pop
jnp
ss
in
cmp
stc
mov
test
xor
dec
cmpsb
lds
jg
jne
add
jl
xchg
out
mov
dec
int
fs
sbb
loopne
mov
out
out
sbb
das
nop
add
leave
fstpt
cmp
cmp
shl
or
xor
add
pop
mov
cmp
xor
add
cld
push
mov
jne
jno
mov
dec
shll
dec
movsb
js
fsubs
aas
xchg
mov
push
cltd
jbe
push
sub
pop
xor
mov
and
xor
fcoml
arpl
jmp
jecxz
xchg
inc
shlb
shlb
add
push
pusha
cmp
and
push
pop
stos
xchg
gs
push
out
cli
inc
shlb
lods
cltd
daa
or
xor
sbb
jp
xchg
scas
stos
mov
pop
cmc
jne
inc
roll
jle
je
adc
stc
and
inc
or
inc
insl
adc
sub
leave
lret
pushf
fdecstp
pop
xchg
xchg
dec
adc
gs
mov
leave
addr16
pushf
gs
stos
xor
adc
sub
or
jg
insb
in
ret
inc
sbb
dec
or
notl
fmull
adc
adc
lahf
popl
out
jo
aad
dec
fstpt
sub
dec
out
or
push
orb
mov
mov
pop
das
xor
stc
jb
fisubs
jno
xchg
fimull
dec
lcall
nop
hlt
ja
jae
in
cli
mov
xchg
out
adc
mov
mov
outsb
xchg
ret
mov
or
xor
notb
ds
sbb
jne
cltd
mov
aaa
adc
xor
stc
fistl
jmp
shll
das
lcall
jo
pop
pop
fadds
adc
jb
pop
in
sahf
fcompl
mov
sub
es
out
lds
lea
fbstp
mov
data16
xor
popf
lock
pop
jmp
mov
les
mov
adc
bound
aas
iret
pop
shlb
mov
ss
push
xchg
mov
jmp
out
pusha
lea
or
jnp
mov
pop
sub
push
mov
inc
cmp
jb
lock
dec
sbbb
or
xor
pop
insl
mov
mov
inc
popa
call
mov
jle
outsl
ret
mov
push
push
lret
das
into
scas
sub
dec
jle
cltd
sbb
xor
push
xchg
fdiv
jl
shll
ds
movsb
xchg
les
popl
inc
out
aas
and
cmc
aaa
lret
adc
shrl
mulb
cmp
jg
pop
rcll
data16
pushf
enter
loopne
cmp
ja
push
in
xchg
jp
out
ljmp
or
aas
pop
sbb
imul
push
pop
xchg
js
loop
xor
pusha
idivl
pushf
fadd
xor
push
mov
push
scas
lea
testb
pop
gs
test
push
in
ljmp
lock
push
push
repnz
test
adc
jmp
out
lods
jmp
repnz
mov
cmp
adc
adc
out
pop
jb
mov
movsb
or
mov
xchg
mov
repz
pushf
push
dec
or
jb
inc
movsl
push
adc
jge
mov
aam
rorl
pop
es
jb
ja
and
add
xor
adc
adc
movsb
popf
scas
add
push
or
and
ficompl
push
ret
jg
jecxz
add
aas
mov
cmp
xor
pop
testb
xchg
push
cmp
push
add
ljmp
adc
movsl
cltd
sbb
xor
mov
fisubrl
mov
and
adc
test
popf
bound
inc
loope
dec
sub
jns
aad
ss
mov
out
and
mov
test
add
sbb
mov
sbb
insl
and
movb
dec
hlt
std
pushf
outsb
cmpl
dec
fs
xchg
aad
and
testb
xchg
inc
mov
inc
scas
pop
push
in
mov
dec
test
and
into
inc
daa
mov
jns
or
push
idivb
outsl
shll
sub
int
mov
adc
xchg
lahf
lods
cmp
cmp
mov
xchg
xchg
mov
arpl
popf
adc
mov
pop
xor
mov
repnz
dec
pop
pop
and
sub
adc
push
add
pop
daa
xor
inc
mov
mov
push
lods
gs
inc
cwtl
pop
aam
jbe
inc
ror
faddp
pop
dec
inc
xchg
mov
xchg
pop
psubsw
into
push
pop
sbb
popa
sbb
mov
cmp
nop
lret
lods
fidivrl
jae
mov
add
sub
sub
iret
les
or
inc
into
xor
lea
xchg
push
mov
jno
push
sbb
adc
pop
repnz
mov
dec
imul
jb
in
movsl
adc
mov
adc
pop
movsb
sub
adc
clc
insb
gs
xchg
mov
insb
insl
lods
mov
push
cmp
xchg
inc
dec
mov
in
cmpsb
jae
pop
dec
fbstp
insl
add
inc
les
xor
addb
cmp
rcrb
cmp
stos
lods
cmpsl
push
dec
xor
push
fs
test
push
mov
xor
sbb
lods
dec
push
fimuls
fcomps
push
data16
adc
sub
inc
inc
jmp
jle
test
mov
pop
roll
cmpsl
ret
roll
dec
adc
aam
fwait
mov
fsubs
mov
jne
or
xchg
and
testl
in
bound
cmp
xchg
push
fcompl
xchg
pop
or
jbe
mov
pop
pop
das
iret
xor
sub
or
in
ds
adc
or
je
xlat
adc
pop
sbb
xlat
mov
mov
int
sub
adc
call
cmpsb
add
jmp
mov
ret
cmp
add
mov
mov
mov
outsb
mov
pop
jns
xor
xchg
inc
neg
sbb
jle
xchg
fildll
test
addr16
mov
cwtl
fistps
xor
mov
fcompl
pushf
mov
dec
mull
shlb
movsb
jns
decb
loop
or
inc
mov
cmp
xchg
sbb
in
mov
or
pop
pop
ljmp
pushw
daa
daa
in
adc
xlat
push
mov
xchg
jg
dec
mov
xor
ss
mov
and
rorl
lods
dec
lds
sbb
imulb
sub
fs
mov
mov
imul
mov
call
pop
xchg
add
sbb
addr16
aad
pop
imul
sub
xchg
fldenv
out
in
in
mov
push
jnp
out
hlt
sbb
movsb
dec
repz
ret
pop
xor
test
gs
or
outsb
mov
pop
adcl
inc
call
pop
dec
lock
or
fimull
loop
sub
cli
push
push
js
push
outsb
adc
adc
std
call
and
insb
mov
lret
pop
inc
pop
push
push
fwait
clc
mov
loop
testl
inc
sbb
sbbb
add
je
bound
jp
mov
rcrl
lods
les
outsb
imul
addr16
cmp
ficompl
icebp
rol
negl
inc
imul
xchg
jnp
leave
mov
dec
add
xchg
mov
and
sbb
inc
ret
loop
xchg
fsubrs
pop
outsl
nop
sub
xchg
pop
f2xm1
push
insb
xchg
popa
in
lds
xor
idiv
lds
pop
xchg
jne
hlt
adc
mov
adc
decb
dec
mov
mov
pop
outsl
sahf
ss
imul
hlt
movb
rol
xor
jle
xlat
pop
xchg
iret
or
fldt
jne
push
pushf
stos
push
scas
enter
dec
or
ja
stos
pusha
cmpsb
hlt
fisttpll
stos
rolb
pusha
xlat
stos
inc
and
pop
das
gs
mov
int
sub
adcb
test
addr16
lods
xor
fwait
push
jmp
icebp
clc
jle
fucom
mov
or
jg
lock
pop
paddusb
mov
xor
sub
and
cmp
cld
sub
push
cmp
and
ror
popf
mov
jns
xchg
jge
test
or
add
and
pop
mov
dec
leave
cltd
xor
rcrl
push
dec
sub
arpl
inc
int3
orb
xor
or
mov
jge
mov
push
pop
add
addb
xchg
xchg
push
aad
scas
out
and
jmp
xchg
sub
adc
add
pop
sahf
lret
dec
lods
xchg
lea
push
xor
jno
dec
jno
lods
pop
adc
movzwl
daa
mov
jl
mov
dec
stos
cwtl
xor
mov
or
xchg
xchg
mov
ds
pushf
aas
jmp
jbe
mov
out
int
adc
sub
loop
xchg
add
cmp
arpl
mov
cmpsl
das
adc
es
negl
lds
jb
mov
adc
pop
dec
cmp
xor
js
adc
mov
in
adc
lods
fs
pop
push
cli
jae
aas
dec
add
xchg
das
imulb
fisubrl
dec
ss
lods
xor
cmp
cmc
push
scas
idivb
add
loope
dec
out
jb
or
outsb
and
sub
movsb
push
cmp
sbb
mov
cli
out
cli
cmpb
dec
adc
mov
decl
shrl
pop
loope
inc
fisttpll
popa
fiadds
adc
test
sub
decb
jne
pop
cmp
inc
and
jne
ljmp
iret
push
jns
loope
xor
out
adc
ljmp
aaa
cmp
dec
cmpsl
es
lret
xchg
test
jmp
mov
adc
mul
fdivs
and
sub
jge
and
js
jno
push
bound
lret
mov
mov
add
jp
loopne
test
jae
fbld
xchg
xchg
sub
jbe
ret
dec
outsl
enter
repz
xor
fmull
jle
push
xchg
jne
int3
test
sti
dec
cmpsb
xchg
and
add
push
inc
imul
int
dec
stos
mov
cmp
xor
repnz
and
je
mov
outsl
add
aas
mov
lods
xchg
cli
addr16
mov
add
gs
lock
enter
idivb
cmp
in
hlt
push
enter
cmp
mov
mov
mov
and
std
jmp
mov
decb
fcoms
out
push
out
sbb
loopne
mov
in
outsb
xchg
push
cwtl
xchg
pop
ja
sbb
jns
daa
pusha
dec
pop
scas
aas
icebp
push
outsl
inc
sbb
std
dec
pop
sbb
loopne
push
mov
jg
add
xor
mov
inc
and
fucomp
xor
testl
xlat
fildl
fisttpl
mov
and
movsl
cwtl
xor
sub
push
jns
pop
ds
in
mov
scas
scas
ds
xor
clc
mov
repz
and
cmp
das
ret
mov
inc
fwait
xor
rcrb
push
push
aas
mov
push
roll
stos
outsb
int3
or
fsts
jne
les
push
sarb
push
xchg
cmp
and
mov
cld
jmp
sbb
lret
or
pop
jmp
xlat
aam
aad
outsl
adc
or
inc
jnp
sbb
scas
jmp
sub
jle
jp
add
ds
std
rcll
jns
cld
stos
or
sub
orb
jle
sub
push
push
xor
sub
mov
std
and
inc
adc
out
js
lds
cmp
lret
xchg
push
leave
call
sub
fdivp
mov
repnz
stos
mov
aam
into
mov
add
loop
xor
cld
subb
mov
pop
xchg
lret
or
lods
and
movsl
xchg
stc
mov
addb
arpl
mov
push
lods
push
idivb
add
loopne
dec
sub
andb
cltd
inc
pushf
repnz
pop
jbe
mov
int
ljmp
cmpsb
fisttpl
push
xor
fs
sbb
sahf
push
and
jecxz
pushf
scas
les
test
cld
push
inc
mov
or
aad
sub
daa
xchg
dec
out
je
movsb
leave
imul
rorl
call
fistpl
pop
sbb
popa
xchg
sbb
cld
xor
addr16
cmp
xchg
cmp
adcl
cmpl
dec
dec
std
jge
or
stos
in
inc
mov
xorl
imul
and
pop
inc
mov
repnz
mov
iret
dec
dec
cld
fisubl
push
shl
dec
mov
out
outsb
lcall
fmull
jae
fs
divb
mov
adc
xchg
mov
sbb
pop
shrl
jbe
fwait
std
push
dec
aaa
dec
in
push
data16
mov
sbb
mov
mov
jecxz
xor
enter
jge
and
call
ss
inc
scas
xchg
xor
in
and
pop
cmpsb
mov
jo
rorl
cmp
mov
and
fmull
adc
or
js
xchg
add
or
cmp
in
jmp
sub
jns
repz
adc
call
add
js
or
push
test
lock
push
jne
pop
xlat
pusha
cltd
xor
xchg
inc
mov
xchg
sahf
pusha
movsl
ret
xchg
push
test
and
int3
mov
outsl
int
inc
push
les
aad
push
xor
and
jb
rclb
loope
push
shrl
xor
fs
lret
repz
sarb
jae
imul
bound
xor
test
aas
imul
mov
adc
and
push
cmp
jbe
shlb
data16
sub
xor
dec
aas
or
xor
push
mov
lret
mov
int3
sbb
pop
sti
and
pushw
scas
popf
sbb
xchg
outsl
xchg
xor
xor
push
or
xchg
or
data16
cmp
xchg
insl
jecxz
xlat
es
imul
sbb
pop
cmpsb
jnp
xor
insb
dec
sub
cld
test
sbb
fs
xchg
mov
ret
jns
cmpsb
xor
aam
dec
mov
sarb
test
sbb
aad
adc
pop
add
xchg
data16
loopne
mov
push
out
movsb
loope
adc
or
pop
xchg
pop
shll
jno
jns
jecxz
jno
sbb
loopne
push
xchg
insl
das
and
jmp
aas
inc
mov
cwtl
jb
pop
in
sub
repnz
inc
pop
subb
lods
dec
cs
mov
in
dec
cmp
mov
cld
js
aam
test
fisubrl
outsl
mov
movsb
subl
pop
stc
loope
mov
cmp
mov
daa
shl
loop
sub
xchg
mov
sbb
fisubl
fisttps
stc
in
xchg
or
xchg
dec
shlb
sahf
cld
add
sbb
and
addr16
popf
andl
arpl
mov
sbb
push
imul
aas
pop
inc
cmpb
ror
adc
aam
gs
mov
push
push
xchg
mov
sbb
jle
rcll
mov
addr16
into
mov
cmc
push
pop
pop
xchg
inc
push
test
and
stos
sub
popa
rol
jg
sub
stos
inc
test
or
mov
fldt
mov
push
mov
lahf
or
and
faddl
xchg
scas
in
lahf
lcall
mov
add
les
or
inc
inc
jg
mov
into
js
dec
pop
xchg
cmp
jl
cmp
pop
je
roll
add
mov
ret
scas
pop
or
push
leave
fmul
pop
pop
movsl
adc
aaa
pop
or
cli
xchg
xor
mov
mov
loop
ficomps
test
test
pop
mov
inc
ret
mov
mov
mov
dec
sub
xchg
aam
addr16
nop
int3
mov
cmp
dec
lcall
pop
in
in
pusha
lret
repnz
jg
aam
bswap
sahf
negb
xor
sahf
mov
test
dec
mov
push
inc
pusha
adc
je
ror
push
aad
push
pop
pop
ljmp
mov
negl
out
inc
sti
aad
sbb
in
mov
xor
mov
cwtl
pushf
es
sbb
xchg
and
dec
inc
ror
aam
faddl
jl
push
mov
popa
aaa
dec
or
inc
in
test
test
cmc
jmp
in
mov
pushf
ss
mov
push
xor
xor
fidivl
popf
shr
sub
adc
sbb
out
ja
out
gs
xorl
lret
fldenv
cmp
adc
int
ret
in
bound
sbb
jmp
test
fistpl
jne
ss
mov
jl
push
imul
pop
sahf
fidivs
pop
movsb
lds
arpl
and
cmp
xchg
pop
repz
jge
rclb
lock
movsb
jle
add
pop
mov
xchg
test
lock
shll
adc
pop
pop
mov
jb
scas
xchg
pushf
stos
push
mov
repz
cmp
dec
jo
adc
ja
mov
sub
or
mov
mov
std
aad
or
cmpb
dec
fldl
mov
pop
arpl
push
in
out
or
push
xor
rolb
push
inc
push
orb
dec
mov
pop
cmpsl
daa
movsb
lcall
cmpsl
adc
push
lahf
pop
sub
mov
sti
pop
add
mov
dec
enter
fcmovnu
and
jbe
icebp
xor
mov
pop
mov
or
xchg
or
push
ret
mov
cmp
fistpll
sbb
shlb
dec
scas
call
lock
popa
std
inc
push
jnp
mov
inc
push
ret
bound
subl
int
mov
loope
and
insb
jg
pop
sub
and
outsl
leave
addr16
mov
push
pusha
enter
cltd
and
addr16
jae
lcall
sbb
cmp
jecxz
mov
jb
jnp
push
sbb
mov
sbb
outsl
test
jle
cmc
push
mov
jne
std
lahf
add
cmc
outsl
movsl
cmpsl
jg
loop
dec
hlt
sbb
rcll
fsubr
hlt
add
mov
xor
es
ss
mov
or
out
daa
or
or
lahf
sub
sbb
testl
inc
in
xorb
fcmovbe
out
pop
ret
outsb
xchg
mov
sub
int3
fwait
aam
repnz
mov
outsl
loopne
fists
inc
fnstenv
leave
dec
ljmp
pop
data16
adc
mov
sbb
addb
inc
push
push
pop
sbb
sub
out
pop
lea
pop
sbb
les
dec
push
dec
xchg
loopne
test
seta
cmc
xchg
add
dec
inc
xor
roll
notl
push
aaa
or
sbb
fcompl
mov
adc
inc
push
or
xor
rol
rcll
cmp
lods
jae
insb
pop
out
mov
jo
repz
clc
pushf
mov
lock
mov
cmp
mov
int3
pusha
aad
add
push
data16
jg
add
test
sbb
stos
push
in
cmc
jo
loope
adcb
repz
dec
mov
les
stos
and
jno
mov
outsb
inc
pop
fwait
lret
inc
sub
mov
inc
and
push
pop
test
xor
push
jmp
lods
scas
std
stos
je
jecxz
dec
aam
jecxz
leave
in
daa
bound
lods
int3
hlt
mov
mov
and
mov
sub
in
lock
imul
test
push
in
or
mov
inc
dec
aas
xor
test
arpl
cs
rcr
mov
or
repnz
outsb
inc
rorb
cmp
and
cmp
inc
inc
sarb
push
imul
ror
outsb
iret
pop
rcrb
xorb
je
in
adc
xchg
dec
aas
mulb
sbb
insb
shlb
fsubl
cmpsl
pop
mov
inc
add
and
ret
gs
dec
je
adc
iret
popf
sbb
add
js
mov
add
aad
and
mov
ja
dec
mov
pushf
inc
push
mov
sub
cmp
leave
in
xor
mov
test
adc
jg
mov
mov
dec
in
insl
fistps
cld
cmpsb
pop
sub
popf
cmp
test
cmc
inc
mov
cmpsb
addl
adc
xchg
xor
or
insb
lahf
fisttpll
popf
add
push
xor
lahf
mov
cld
or
je
iret
dec
stc
test
arpl
ret
push
lret
push
outsl
int3
mov
inc
dec
push
repnz
push
shrl
call
jne
mov
xchg
inc
jbe
cld
out
lahf
or
movsl
xor
imul
repz
or
xchg
in
call
out
push
mov
push
mov
fwait
loope
fisttpl
lret
sub
pop
push
add
mov
into
or
ret
aam
out
xor
sub
push
mov
adc
icebp
fnsave
insb
inc
shlb
pop
pop
mov
test
sub
inc
xchg
jl
jb
scas
pop
nop
pusha
loop
es
lods
cld
mov
pop
xlat
sbb
jo
push
pusha
push
es
mov
inc
cwtl
xorl
pop
inc
into
inc
mov
xchg
cwtl
and
adc
jge
inc
pop
ja
mov
mov
cmp
icebp
jmp
adc
cs
or
and
xor
lret
cmp
in
scas
loopne
movsl
push
ds
insb
clc
mov
jle
inc
add
sub
push
in
clc
aad
stos
fcomp
xor
inc
lods
int
in
or
sbb
out
std
xchg
iret
or
imul
out
jno
inc
adc
xor
dec
xchg
push
daa
and
adc
inc
sbb
xchg
sub
leave
stos
call
enter
push
sbb
cmp
insl
aaa
fistl
or
cmpsl
push
mov
sahf
add
aad
imul
test
call
cld
mov
sbb
insl
scas
ja
mov
xor
mov
mov
scas
adc
jne
cmp
nop
push
test
sub
jnp
inc
mov
popl
push
cwtl
cli
cmp
int
repz
out
jle
inc
int3
inc
aam
jg
mov
pop
mov
in
pop
or
mov
cld
inc
add
pusha
test
insb
out
int
sbb
mov
mov
xchg
inc
cld
gs
roll
jns
orb
mov
sub
push
add
int
jnp
mov
jb
divl
or
dec
scas
shll
mov
sbb
mov
rcrb
js
jp
push
pop
pop
mov
push
ja
xor
adc
sbb
lahf
sub
mov
xchg
cwtl
js
lods
jae
stos
jb
es
fildl
cwtl
ja
dec
push
mov
xchg
fsubs
mov
mov
dec
ljmp
mov
iret
inc
or
push
and
out
popf
push
xor
in
sbb
or
adcl
sub
mov
mov
out
movsb
js
fdivl
dec
cltd
lea
inc
cmp
int3
and
push
imul
fs
xchg
inc
adc
or
inc
mov
aad
xchg
push
jae
dec
jmp
and
cmp
and
lcall
lret
shlb
aam
inc
pop
push
pop
es
lret
inc
adc
cmp
stc
in
ficoml
sub
cmp
cmpsb
jnp
mov
loop
in
push
std
pop
arpl
scas
push
mov
in
int3
cld
insl
push
pop
cmp
fwait
int3
push
adcl
push
dec
sub
push
mov
stc
dec
mull
insb
dec
iret
loope
inc
inc
neg
stc
paddd
cli
inc
mov
popa
adc
jecxz
fcmovu
icebp
jmp
fmull
loope
xor
fsts
adc
sbb
inc
int
fs
out
dec
xlat
or
mov
cmp
das
cmpsb
sub
sti
in
shlb
ficoml
fcmovnbe
xorl
xor
mov
or
lcall
mov
pushf
dec
add
mov
pop
mov
pop
repnz
adc
adc
out
int
and
or
inc
stos
arpl
cmc
mov
sbb
cli
lock
mov
jbe
add
pop
or
int
divl
xchg
stc
and
and
mov
pusha
pop
lahf
xor
fsts
ds
adcl
sbb
cli
xchg
stc
sub
xchg
xchg
in
add
push
adc
xor
mov
cli
fisttpll
jl
pop
es
jno,pt
xor
xchg
jae
icebp
and
in
mov
jno
test
push
gs
movsb
sbb
fidivl
div
aam
dec
movsl
xchg
push
daa
inc
cmp
adcl
pop
or
stos
in
pop
push
out
add
out
call
or
push
test
or
sti
adc
pushf
dec
add
lock
mov
add
push
sbb
adc
outsl
das
or
test
testl
sub
mov
and
outsl
loope
pop
jp
call
popf
inc
daa
and
sarb
mov
fs
fists
arpl
movsb
or
and
xlat
mov
push
imul
cmc
loope
clc
mov
push
push
cli
dec
movsl
pop
jle
adcl
jno
imulb
push
stc
fidivrl
cmp
aaa
jle
pop
stos
ret
fcomp
faddl
sarb
pop
je
loop
cltd
sbb
cmp
aad
fcoml
enter
das
cmp
mov
add
jae
pop
cltd
mov
ds
xchg
gs
lea
iret
les
push
jg
xchg
mov
lock
cmp
push
ret
stc
cmp
movsb
mov
or
jb
pop
sbb
iret
xchg
xlat
clc
std
sub
push
push
test
adc
imul
scas
scas
adc
popf
dec
mov
lods
xchg
and
mov
and
pop
and
xor
repnz
xchg
insl
jbe
outsl
in
adc
loopew
jge
mov
mov
mov
sub
dec
lods
sbbb
fidivrs
inc
and
imul
adc
cmp
and
ret
daa
out
pop
jmp
cmp
movsb
fisubl
ljmp
data16
xchg
add
jg
ja
scas
inc
xchg
pop
stos
sbb
jne
pop
fistl
mov
xchg
jge
mov
pop
rcll
lea
cld
mov
xchg
and
sub
movhps
sti
sub
std
out
dec
scas
faddp
cld
pop
xlat
pop
clc
jno
fiaddl
inc
fdivs
in
mov
push
jecxz
mov
xchg
dec
daa
loop
insl
pop
imul
push
push
shrb
jmp
mov
and
pop
mov
cmp
pop
sbb
loop
and
inc
add
dec
stc
int3
lcall
sbb
fbstp
sbb
xchg
mov
and
sub
imul
add
push
andl
mov
dec
inc
xchg
fxch
sbb
out
push
mov
fcoms
jmp
pushf
xchg
and
lock
rorb
dec
call
ljmp
xor
or
and
pop
lret
dec
lods
jg
inc
fcomps
sbb
lahf
push
jle
pop
cld
ss
sub
dec
cmpsl
scas
lds
js
ret
cmpsb
pop
push
pop
jo
test
mov
test
adc
lods
movsb
xor
lock
rorl
cmp
fsubl
lock
jbe
aad
jb
mov
daa
or
dec
neg
jl
jnp
dec
aas
cmp
push
ja
adc
fisubrl
sub
repnz
cmp
bound
jae
cmp
cltd
hlt
or
test
loope
adc
xchg
push
inc
push
pop
dec
inc
sbb
push
or
les
enter
andb
pop
out
cmp
jb
les
addr16
mov
mov
out
arpl
pop
mov
xor
cmpsb
xor
lods
outsb
pop
sbb
popf
jnp
adc
push
inc
add
dec
and
sub
fwait
cmp
dec
clc
icebp
out
xor
dec
xchg
movsl
jb
bound
iret
mov
test
lahf
lods
insb
pop
sub
add
xchg
dec
pop
andl
jmp
cmpsb
repnz
dec
fidivl
push
popl
mov
add
repz
add
dec
sarl
js
repz
fisubl
lret
sub
arpl
out
pop
jle
rclb
cmp
sbbb
adc
inc
scas
in
sbb
bound
xor
mov
xlat
cmp
add
daa
sub
insl
xchg
cmpsb
mov
dec
push
aad
and
adc
sbb
jns
push
and
mov
mov
jmp
cmp
push
mov
push
nop
pop
cmp
aaa
xor
lret
dec
push
jne
ret
jmp
test
es
scas
push
cli
mov
cmp
pop
add
test
pop
cs
test
aad
ds
pop
sub
aas
mov
mov
lea
bound
test
scas
xlat
inc
inc
leave
dec
and
popf
icebp
idivl
outsl
mov
push
push
lret
sub
lods
loop
or
inc
sahf
out
repz
push
dec
es
cld
mov
mov
push
pop
and
jge
repz
xchg
add
sbb
or
xchg
stos
cmp
rclb
loop
lcall
arpl
sub
dec
xchg
movsb
popf
xor
cmpsb
cmpsl
mov
push
mov
scas
lcall
lods
repz
sub
xchg
mov
or
addl
cmp
jae
cmp
cli
enter
mov
push
ja
xor
adc
pop
add
dec
es
pop
mov
int
std
add
shlb
lock
mov
lret
xor
in
lods
mov
aad
loopne
call
arpl
pusha
sarb
mov
addl
mov
and
sub
mov
data16
push
scas
negl
fiadds
push
test
fs
out
adc
xor
movsl
inc
push
xor
push
test
insl
xchg
daa
mov
xchg
movaps
aam
pop
cmp
sbb
lret
sub
pop
and
adc
aas
fcompl
jmp
mov
lods
movsb
pop
mov
mov
xchg
jle
mov
push
jecxz
fstpt
pop
ret
push
mov
lods
xor
icebp
arpl
cld
fisttps
jae
cmp
cwtl
daa
into
push
inc
aas
xchg
notl
inc
shll
xchg
push
movsb
push
ljmp
push
out
jns
cli
xorb
cmp
sbb
adc
aad
cs
aaa
sub
inc
mov
mov
adc
fstl
or
jnp
dec
sub
adc
call
data16
bound
mov
jg
fwait
bound
rclb
mov
xor
cmp
dec
mov
lea
popa
inc
pusha
mov
xor
pop
vunpcklps
push
mov
or
push
lret
mov
out
adc
aas
scas
and
xor
dec
mov
lds
push
push
xchg
subl
sub
mov
fcomps
mov
insb
hlt
into
popf
data16
daa
mov
ss
adc
arpl
test
jbe
scas
mov
negb
out
mov
and
fwait
mov
sbb
jg
push
cltd
popa
ss
xlat
jg
sbb
mov
and
jmp
clc
out
jnp
in
push
nop
sbb
inc
jnp
ret
stos
pop
test
mov
pop
lret
fisubl
and
dec
add
mov
std
add
je
jecxz
stos
int
leave
jb
orb
cmp
es
cmp
xchg
mov
adc
mov
xor
movsb
mov
ljmp
test
repnz
inc
lahf
int
jmpw
push
mov
xlat
cld
arpl
sub
xor
sub
std
dec
adc
add
int
adc
xlat
mov
add
popa
or
arpl
leave
dec
xchg
fildll
or
jbe
cltd
out
in
mov
insl
lret
sbb
push
divb
in
cs
push
mov
rclb
nop
movsb
lret
mov
loop
push
jo
cmp
std
cltd
mov
xchg
xor
test
xlat
lock
push
repz
or
cltd
push
pop
sbb
jnp
adc
and
sub
lret
jns
loopne
in
pushl
roll
adc
jno
nop
ror
stos
push
loopne
mov
mov
popf
xchg
test
in
dec
int
mov
sahf
push
bound
rcl
xor
in
xchg
xor
lock
repnz
sbb
cmp
sub
fnstsw
push
ljmp
loope,pt
notl
jns
out
dec
mov
sahf
jl
adc
xchg
repnz
sub
mov
add
add
mov
xor
cmp
call
inc
js
in
jg
xchg
mov
jle
mov
xor
pop
push
dec
out
pop
insl
or
add
cltd
xchg
inc
cltd
in
push
pmaxub
jmp
inc
sbb
scas
add
inc
cmp
xchg
cmp
cmp
mov
cld
push
jmp
sub
iret
dec
mov
lcall
shlb
sarl
dec
xchg
int
es
cs
jo
push
fiaddl
loope
rolb
addr16
push
stc
aad
jno
loope
lds
sbb
dec
andl
insb
adc
adc
inc
jo
call
pop
das
mov
out
adc
mov
mov
or
fisubrl
sbb
jmp
stc
mov
xchg
jle
mov
add
pop
lea
sti
sbb
js
adc
outsl
and
add
pop
lea
sub
sub
fcmovb
dec
add
pushl
ror
pop
or
decl
sub
lahf
sti
mov
repnz
jecxz
data16
mov
fsubrs
pop
stos
int
daa
aad
xor
insl
add
pop
mov
push
pop
jmp
mov
lods
in
in
ret
jns
imul
cmp
add
popa
fistpll
sti
mov
sbb
adc
dec
outsb
int
pop
mov
add
loopne
js,pt
hlt
jb
cwtl
loopne
cltd
add
sub
je
or
outsl
outsl
mov
push
popa
je,pn
movsl
fbld
test
push
xor
mov
lea
dec
mov
mov
mov
inc
cmpsb
and
in
add
scas
sar
ret
cmpsl
push
stos
jle
pusha
lahf
div
mov
fmull
or
cmp
loope
pop
dec
sbb
dec
aas
inc
pop
jl
pop
test
movsl
xlat
xchg
dec
ja
xchg
cs
out
fimuls
arpl
call
mov
js
cld
or
enter
mov
movsb
outsl
sub
xor
idivl
sub
jo
lret
xchg
mov
jp
sub
sbb
jb
xlat
sub
mov
fsubrl
daa
cmp
mov
lcall
cmp
cmp
aas
dec
jle
mov
pop
xchg
test
cli
imul
push
sbb
orb
hlt
fmul
adc
aam
inc
jp
in
inc
shrb
scas
xor
dec
mov
pop
pusha
ficoml
cmp
mov
hlt
daa
fsub
mov
jle
pop
jecxz
lods
nop
mov
in
xchg
insl
fmuls
mov
outsb
sub
cwtl
in
insl
ljmp
pop
fucompp
mov
lahf
daa
mov
pushl
add
push
jecxz
daa
dec
sub
stos
xchg
mov
aad
and
ret
stos
test
mov
roll
xor
test
push
into
cmp
pushf
test
adc
and
adc
push
stc
sti
ljmp
fwait
js
mov
dec
sbb
inc
ja
cmp
ret
cmp
movsb
pop
ret
jmp
mov
inc
fsubrs
lret
and
in
lods
pushf
cmp
insl
pop
lods
test
loope
call
cmpsb
je
outsl
pop
mov
cs
repnz
push
xchg
cmp
daa
jecxz
push
sub
mov
lcall
shll
data16
lcall
and
imul
int
add
jno
movsb
and
or
imul
mov
lock
rol
pop
or
xchg
sub
inc
xchg
sbb
enter
mov
decb
mov
mov
inc
pop
dec
rcr
test
add
aas
data16
jae
mov
push
popa
cmp
mov
jnp
pop
loop
push
aaa
in
adc
adc
fs
jp
fwait
lret
scas
dec
inc
pop
hlt
add
sarb
and
xchg
mov
std
or
jge
inc
sub
push
cmp
push
stc
cltd
ds
cmpsb
and
cld
or
dec
cmc
dec
clc
roll
xchg
adc
mov
decb
inc
test
sbb
dec
clc
das
add
push
aad
and
mov
mov
ljmp
push
and
dec
ret
jb
cli
sub
xor
lret
imul
dec
lock
pop
cli
push
idivl
xorb
cmp
push
or
sti
aam
inc
lods
stos
gs
imul
sub
mov
enter
std
pop
pusha
inc
pop
inc
aad
psubusb
or
add
loopne
leave
cmc
lret
lds
pop
in
cmp
pop
and
jg
popl
xchg
pop
outsl
and
lea
fdivrl
and
mov
add
and
and
ror
js
lds
xchg
jg
leave
pop
adc
adc
sub
dec
nop
cmp
sbb
outsl
insl
jne
xchg
pop
jnp
cmpl
sub
mov
jge
aad
push
mov
insl
pop
jg
dec
insb
jmp
loopne
mov
push
xor
mov
shrb
icebp
push
sbb
inc
jo
add
pop
jl
pushf
inc
imul
ljmp
repnz
loope
sub
add
sub
push
insl
test
pop
mov
or
iret
mul
es
out
mov
int
fsubrs
pop
pop
mov
push
out
enter
mov
call
adc
loopne
pop
aad
les
out
movsl
mulb
mov
jno
xchg
mov
pusha
sti
popa
enter
xor
jb
outsl
xor
test
cmp
xor
pop
push
lods
pop
dec
pop
fisubrs
je
push
mov
cmp
ljmp
in
lahf
movl
jo
push
lahf
inc
cmp
dec
sbb
mov
addb
xor
push
and
mov
ds
out
std
out
pop
mov
popa
mov
popa
and
loopne
inc
push
insb
scas
jmp
insl
xchg
outsb
stos
cmp
cld
push
jne
jo
mov
sbb
inc
addr16
ljmp
iret
scas
push
pushf
fbld
add
and
lds
loop
fs
sahf
and
sbb
hlt
cmc
fwait
cmp
sahf
push
or
ret
sub
mov
xor
adc
insb
push
lods
or
mov
es
aas
std
idivb
mov
mov
lret
leave
sbb
mov
adc
jmp
push
div
mov
pop
add
jns
push
adc
push
add
imul
mov
sbb
les
iret
enter
adcb
leave
les
fistps
fstpt
jg
mov
dec
sub
adc
stc
mov
ret
daa
push
push
sbb
push
fs
push
mov
xchg
push
mov
int
inc
and
lods
fcmove
mov
jo
inc
mov
push
iret
and
and
leave
paddq
in
jne
mov
push
out
out
out
fst
xchg
int3
adcl
xor
xlat
push
push
mov
lods
inc
mov
push
out
mov
pop
leave
pop
mull
das
add
sbb
and
push
mov
insb
push
in
xor
inc
fs
xlat
adc
xchg
mov
add
in
outsl
sub
aas
out
fs
and
inc
insl
mov
lods
je
cli
stos
imull
aaa
push
sub
xchg
cli
test
mov
in
and
out
popa
aas
push
repz
aam
lret
ds
mov
fmull
je
xor
xor
adc
test
bound
pop
scas
pop
mov
pop
sbb
ret
adc
cwtl
and
push
pop
subl
test
test
adc
mov
add
xchg
pushf
pop
rorb
rol
jge
sub
xor
aaa
pop
enter
les
mov
cmp
test
sub
ljmp
sbb
push
sarb
lret
or
add
test
lret
fdivr
fdivr
sbb
push
mov
pop
mov
imul
push
push
add
sbb
xchg
mov
lret
or
mov
jmp
add
nop
stos
xchg
mov
paddd
jl
mov
rorb
jno
cmpsl
jae
xchg
or
icebp
cmp
pop
adc
jae
cli
push
mov
outsb
gs
cwtl
leave
jae
or
add
dec
xor
jne,pt
xor
fimull
adc
sub
repnz
fcmovne
das
push
shlb
and
cmc
js
push
pop
lods
jge
imul
xchg
inc
je
arpl
loopne
icebp
pop
xor
ja
ds
cmpsb
mov
insl
je
mul
arpl
ret
lds
cld
loope
xchg
jnp
sub
jp
rcrl
faddl
mov
mov
cmpsl
cmc
add
pop
ret
and
int3
out
rcl
adc
lret
xchg
divl
into
and
stos
mov
push
sub
orb
jno
movsl
pusha
imul
fcmove
mov
xchg
call
fwait
mov
aas
js
xor
imul
outsb
test
inc
mov
sub
test
add
xchg
and
clc
or
xchg
adc
test
adc
inc
inc
jecxz
daa
in
or
nop
xchg
and
push
inc
dec
js
icebp
mov
jecxz
cwtl
xchg
or
inc
mov
push
outsl
dec
mov
imul
and
js
stos
loope
xchg
mov
iret
int
mov
mov
or
cmpsl
xor
hlt
mov
jae
data16
dec
or
jg
cmp
mov
dec
lds
shl
aas
push
cltd
jbe
lods
les
mov
jle
mov
rclb
adc
fsubs
repz
lods
lcall
sti
push
jae
inc
outsl
xchg
jecxz
mov
fbstp
shlb
push
dec
fs
sub
negb
add
aas
jae
stos
fs
movsb
into
xor
xor
mov
outsb
mov
pop
mov
xchg
sub
ret
lock
testl
lods
inc
xor
mov
cmp
daa
sbb
repz
aaa
xor
inc
push
xchg
fldt
xchg
scas
or
push
pop
repnz
or
mov
sbb
test
and
fwait
mov
jnp
movsl
or
add
pop
push
push
movb
jmp
enter
sbb
xchg
loop
int
jecxz
cmp
lds
push
rclb
cwtl
enter
out
in
lcall
inc
adcb
or
mov
inc
bswap
popf
xchg
xlat
test
inc
jmp
jg
es
mov
sub
lods
ljmp
pop
mov
mov
pop
jmp
jne
jmp
mov
push
cmpl
fcmovnb
sub
pop
push
or
lahf
xchg
fldt
std
in
test
xor
insl
push
pop
xchg
mov
andb
lods
aaa
in
add
push
nop
add
xchg
mov
arpl
es
mov
into
sub
cwtl
inc
pop
or
hlt
jb
push
xor
mov
mov
lcall
stos
and
addb
mov
testl
push
xlat
add
mov
push
pusha
mov
enter
int3
bound
test
andb
jnp
ss
mov
divb
cmp
loope
or
mov
xchg
mov
sub
into
jle
nop
orl
ds
mov
xchg
cltd
testb
sub
mov
in
and
jg
dec
scas
fstpt
dec
push
sti
push
ja
pop
sub
dec
leave
sbb
fidivs
call
and
jecxz
mov
mov
dec
and
mov
xor
jp
fmul
cmpsb
jno
cld
push
fmul
and
cmc
xchg
fwait
test
mov
test
adc
cmp
cli
push
pushl
movsl
dec
mov
xchg
lds
div
nop
addb
das
aaa
inc
mov
shrl
and
dec
mov
popa
cmp
add
xor
in
out
imul
in
mov
cli
pop
add
push
and
lahf
insl
pop
int
cmc
bound
xor
mov
gs
xor
roll
js
mov
shl
xchg
mov
ret
sti
dec
int
adc
add
mov
mov
and
das
fld
jne
sub
xchg
inc
sti
sub
and
xchg
test
mov
fisttpll
sbbl
outsb
cli
sub
dec
fsts
fisubl
sahf
bnd
xchg
outsb
fiaddl
jmp
pop
jp
pop
bound
or
mov
dec
xor
cmp
mov
add
es
outsl
add
lret
mov
dec
loopne
fcmovbe
lods
or
mov
push
jb
lahf
ss
mov
adc
inc
ljmp
popf
fsubr
jmp
xor
xor
xchg
mov
aam
pop
push
mov
fscale
incl
mov
insl
sti
cli
cmp
add
inc
jo
mov
sub
jg
in
leave
adc
dec
jmp
cmc
mov
sub
aad
leave
aas
pop
das
mov
shl
in
push
jl
adc
cmpsl
popa
mov
mov
xchg
mov
cltd
fwait
cmp
ret
sbb
mov
cmp
fwait
mov
je
inc
inc
icebp
mov
fdiv
inc
pop
mov
dec
jge
call
loope
mov
test
jb
scas
adcb
in
pop
das
and
jnp
jg
call
jge
push
adc
or
mov
cld
pusha
adc
jo
pop
jb
and
sahf
sbb
scas
std
inc
lds
adc
lock
mov
rorb
dec
js
mov
jb
popa
xchg
push
lret
dec
fimuls
repz
push
iret
mov
test
push
xor
add
cmp
pop
mov
jno
lods
mov
jle
mov
push
dec
fwait
adc
sahf
scas
xchg
dec
or
sti
and
std
mov
fidivs
flds
jecxz
push
outsb
mov
or
popf
or
sub
mov
fs
ret
vmovdqu
in
lret
cmpsl
imul
loop
insb
lret
mov
mov
add
jmp
adc
jne
dec
mov
fldcw
sbb
cld
push
icebp
jmp
stc
pushw
vmovss
mov
cmc
inc
jge
jnp
gs
and
adc
testl
jle
jne
hlt
xchg
or
and
mov
cmpl
js
pop
out
dec
xor
filds
lods
add
rclb
pop
pop
mov
mov
nop
pusha
stos
add
mov
fldcw
mov
cmp
stc
aaa
andb
jle
lods
mov
sbb
fisttps
mov
aas
xor
mov
push
subl
push
mov
out
pop
push
lods
in
jne
dec
xchg
aad
mov
pushf
fistl
data16
xchg
rorb
in
add
sub
sub
icebp
mov
cmc
loop
mov
lock
test
jmp
xor
push
insb
hlt
shr
adc
and
test
inc
cmp
xchg
xchg
push
rcll
push
or
lods
xchg
lods
xor
mov
cs
test
das
or
push
mov
adc
es
repz
movsb
loop
repz
aam
add
push
lcall
fcoml
or
push
push
sbb
push
jl
mov
decl
mov
in
or
nop
shrb
or
adcb
or
cmc
fsubrl
loop
decl
cli
sbb
sbb
or
add
xor
cwtl
scas
add
std
lods
pop
aas
rorl
push
mov
fiaddl
das
daa
pushl
jge
lret
adc
jnp
push
adc
mov
or
xchg
fistpll
in
sub
fsubs
xchg
adcl
mov
iret
cmpsb
iret
fwait
lods
mov
aas
pop
push
jno
push
cmp
mov
ud0
lods
mov
bound
fmuls
fcompl
add
into
pop
loope
or
pop
test
rcrb
or
imul
je
cmpsl
scas
add
cli
mov
cltd
inc
popa
test
add
xchg
push
sub
sub
push
cmp
imul
mov
mov
imul
or
jnp
xchg
mov
inc
movb
loope
pop
loopne
lret
lret
sbb
and
test
push
sahf
cmp
mov
gs
sti
test
sub
adc
pop
aaa
iret
out
leave
enter
out
add
divl
or
push
inc
testb
xchg
dec
sarb
cwtl
pop
in
pop
call
scas
push
out
outsl
fs
pop
test
test
push
sahf
stos
stos
jne
cmpsb
adc
rcll
scas
push
pop
xchg
push
enter
add
stos
inc
repnz
jmp
out
jmp
call
cmpsb
mov
sahf
mov
repz
sub
mov
movsb
mov
leave
sbb
fdivrs
dec
push
dec
sti
dec
loope
and
pop
lods
cmp
out
mov
push
cmp
lock
lea
das
or
aas
sahf
mov
pop
mov
ret
and
mov
inc
inc
or
pop
out
sub
ds
mov
sbb
leave
leave
mov
xchg
add
jb
cmp
test
dec
xor
jge
dec
mov
pop
push
lahf
out
cmp
jp
scas
mov
xchg
adc
cli
mov
inc
sahf
hlt
lret
push
stos
fsubr
or
inc
out
and
out
imul
or
notl
test
cmp
dec
jbe
mov
lcall
cli
xlat
cs
fldcw
insb
mov
pop
xorb
fwait
or
inc
js
and
add
jmp
test
and
testb
lret
adc
sbb
mov
sub
js
push
jo
cmpsb
lret
imul
aas
pop
inc
je
lret
jns
cmp
in
stos
pop
xchg
stc
in
adc
inc
pop
or
fdiv
inc
mov
xor
cli
mov
and
outsl
ja
into
mov
mov
insb
mov
inc
lcall
cmp
jecxz
jbe
mov
pop
push
in
sbb
mov
sti
lds
mov
xchg
lahf
scas
pop
push
xchg
inc
xor
bound
add
xor
scas
es
add
inc
rcr
gs
ds
inc
jmp
cmpsl
aad
daa
sarl
inc
test
mov
xor
js
fcompl
test
sti
imul
addr16
and
xor
add
cli
xchg
xchg
enter
push
xchg
les
add
mov
fstpl
lcall
mov
fdivrs
cmp
call
loopne
xchg
xlat
inc
movsl
mov
cwtl
push
jbe
decl
aad
out
test
aam
je
lahf
adc
imul
insl
jle
insb
sbb
std
inc
outsl
mov
jge
outsb
in
jg
gs
pushf
insl
inc
outsl
out
inc
sub
adc
pop
test
push
mov
pop
push
hlt
jp
mov
out
pushf
dec
adc
cmp
xor
pushf
jo
out
imull
or
aaa
pop
test
loop
adc
pop
popa
xchg
hlt
xlat
jmp
ljmp
xchg
mov
imul
test
push
and
sbb
mov
sarl
lcall
mov
mov
repnz
inc
lcall
mov
ss
push
jno
sub
test
push
iret
push
enter
je
and
les
fstpl
pop
inc
ret
jnp
xlat
fmul
xchg
xchg
mov
lret
movsb
adc
pcmpgtw
pop
jecxz
xchg
cmp
mov
sahf
cmpb
push
mov
and
jns
or
jae
rorb
mov
mov
lods
push
and
loop
roll
pop
jle
lcall
iret
ret
xor
ss
jae
outsb
adc
sub
pop
jae
out
dec
es
cs
lock
outsl
mov
cld
push
sbb
sub
test
xchg
or
mov
adc
insl
js
jb
xchg
push
inc
fidivrl
addr16
xchg
in
lahf
cmp
mov
sub
mov
pop
fs
inc
xor
movb
rorb
pop
mov
clc
jnp
pop
insl
pop
out
xor
shl
popf
loop
mov
add
test
test
mov
mov
cmc
inc
in
aaa
repz
xor
pop
stos
in
in
add
jno
stos
jae
std
cmp
movb
sbb
popf
push
pop
pop
sub
push
jae
mov
jp
mov
or
xchg
cltd
pusha
pop
mov
pusha
push
les
mov
call
push
cmp
push
gs
jb
sarb
nop
dec
test
jnp
dec
das
rclb
xlat
jl
gs
push
cmp
cmc
dec
inc
clc
or
inc
xor
jle
pop
insl
mov
mov
xchg
nop
push
sub
jb
ja
je
nop
shl
lret
sahf
test
sbb
mov
pushf
jne
lret
pop
xor
addr16
repz
push
mov
jmp
es
in
pop
xchg
jnp
addr16
daa
dec
sub
dec
outsb
dec
xor
dec
nop
sub
sbb
xchg
and
enter
xor
daa
out
inc
jae
pushf
aam
mov
cld
jns
daa
out
jnp
mov
sbb
out
out
lret
call
outsl
sub
aaa
and
std
test
xor
xchg
cmp
adc
sbb
jo
cmp
xchg
addr16
pushf
pushl
fidivs
mov
stos
xorb
mov
and
outsb
add
dec
sub
in
dec
push
sub
push
inc
cmp
loop
cmp
cmp
sbbl
push
movsl
incl
mov
fs
sbbl
dec
das
aaa
and
testb
leave
add
jne
sbb
push
in
add
cli
xchg
aaa
movsb
jnp
out
cli
cmc
lods
and
or
stos
xchg
push
pop
arpl
add
out
push
div
push
mov
push
xchg
mov
js
adc
sub
inc
add
and
push
jno
jbe
mov
xlat
imulb
add
icebp
mov
fwait
cmpsl
xor
in
pushf
call
pop
jmp
pop
jmp
fiaddl
cmp
add
and
cmp
inc
cmp
jge
movsb
subb
inc
mov
hlt
fisttpll
push
outsl
int3
sahf
sub
sti
xor
xchg
iret
mov
int3
dec
fstpt
sub
add
aaa
scas
mov
pop
lods
test
cmp
mov
sahf
out
sub
test
mov
mov
sub
fistl
cmp
cli
dec
insl
push
insb
scas
das
jge
cmp
std
mov
movsl
and
mov
xchg
fcmovnb
push
mov
adc
jecxz
loope
mov
stos
inc
xchg
adc
add
jnp
mov
jnp
shlb
mov
mov
loopne
xchg
dec
cmp
or
add
mov
mov
loop,pt
fbld
jno
addr16
movsl
push
and
fmull
sub
scas
sub
mov
add
jae
fstpt
jecxz
xor
sub
in
lods
jecxz
cmc
fcomps
cmc
lret
insb
pop
stc
scas
mov
orl
mov
loope
ja
std
mov
lret
mov
push
dec
das
icebp
aaa
mov
icebp
out
xor
pop
add
xor
pop
jno
dec
outsl
fwait
mov
mov
jo
mov
mov
sbb
xor
add
xchg
jl
and
insb
xchg
xchg
test
pushf
push
push
ret
xor
inc
pop
je
imulb
pusha
cmp
dec
insl
inc
dec
jmp
pop
pop
cmc
mov
fnstenv
sbb
sub
ljmp
cmp
and
mov
sub
or
js
out
mov
lcall
adc
cmp
adc
or
jb
test
cmp
out
pop
cld
inc
pop
inc
mov
lret
xchg
sbb
dec
xchg
jnp
fbld
push
int3
dec
sbb
inc
enter
ss
divl
pop
fidivs
orl
icebp
cmp
adc
cmp
jl
add
test
ljmp
mov
pop
rol
xor
pushf
rcl
dec
jle
sbb
lds
dec
rorl
ljmp
mov
insl
pushf
jecxz
mov
hlt
jnp
inc
add
and
repnz
pusha
int3
jae
pushl
movsl
repz
push
xchg
xor
pop
loop
pop
jg
push
cmp
dec
imul
into
pop
sarl
dec
pop
pop
mov
xor
cmpsl
movsl
jns
adc
inc
mov
gs
fcom
cli
mov
sub
dec
pop
add
push
mov
mov
and
jae
into
mov
ret
jo
out
or
xor
fs
mov
cltd
lcall
stos
orl
jg
in
icebp
mov
sub
lock
fnstsw
jp
sbb
inc
mov
cmp
jg
in
ja
scas
jge
sbb
cmp
adc
mov
nop
dec
dec
aaa
jmp
pop
mov
pop
or
xchg
lahf
sahf
push
fsts
mov
leave
add
adc
fucom
mov
push
push
jo
lods
sbb
mov
mov
test
sub
sti
cmpsb
fwait
jbe
nop
sub
pop
mov
aaa
push
gs
sbb
sub
push
push
js
jnp
jno
jae
lahf
pop
mov
in
jmp
add
test
rcl
pop
jnp
or
cmc
ret
test
xor
ret
push
or
xchg
ja
std
outsl
jge
pushf
sub
iret
repz
fisttpll
xorl
lea
xor
ss
fnstenv
popf
imul
loope
imul
xchg
inc
mov
nop
imulb
mov
and
xorl
sub
stos
jmp
xchg
inc
adc
sbb
fidivrs
jnp
mov
sbb
cmp
out
notl
les
cmpsl
adc
cmpsl
dec
notl
inc
lock
mov
sub
clc
movb
call
lods
popf
in
fisubrs
inc
sbb
push
jb
and
sahf
jb
mov
jecxz
xor
ja
popa
sub
dec
adc
sbb
xor
xor
mov
dec
dec
and
mov
daa
mov
push
ds
cmp
jnp
jne
fwait
xchg
rol
fmulp
ret
into
aam
bound
sbb
aaa
and
pop
loop
xor
mov
mov
cld
enter
and
addl
push
lea
dec
or
cmpsl
cs
lods
lcall
push
les
sub
dec
cs
mov
mov
testb
xchg
mov
mov
leave
cmpsb
daa
out
jmp
das
sahf
pop
push
cmp
outsl
sbb
mov
imul
adcb
aad
in
adc
rcll
movsb
dec
mov
cmp
in
and
rcll
lds
pop
in
nopl
xor
push
clc
mov
icebp
adc
adc
and
push
sti
ret
sbb
mov
mov
mov
popf
loope
push
arpl
fsubl
inc
mov
mov
pop
addr16
arpl
ret
and
test
and
xor
int3
jecxz
add
lret
repz
add
mov
sbb
mov
out
cmp
cmc
mov
rol
mov
push
inc
repz
pop
ret
popf
gs
test
jp
jg
fs
cmpsb
add
lret
test
pop
jbe
lea
jns
xorb
test
push
arpl
jp
mov
jge
mov
cmp
cltd
and
es
cmp
aas
lods
sbb
imul
push
mov
mov
fldl
jmp
mov
mov
pop
adc
sub
push
sbb
imul
sti
in
jne
pop
aam
mov
inc
xor
sbb
inc
jns
in
xchg
sbb
mov
pop
roll
mov
lds
or
or
in
jne
mov
xor
cli
rcrl
mov
es
or
rcrb
xor
call
jp
fstpl
ret
xor
out
cmp
pushf
jno
out
data16
dec
les
xchg
aad
movsb
dec
and
lods
repz
sbb
fistpll
add
sub
fbld
outsb
es
enter
ja
cmc
lcall
or
pop
ljmp
inc
sub
mov
adcl
outsl
add
ja
and
adc
jecxz
inc
pop
rorb
fnstcw
loope
mov
and
jl
xor
xchg
cmp
mov
lock
push
mov
pop
cmp
fwait
xchg
pop
sbb
sbb
mov
sbb
es
mov
popf
addr16
mov
mul
in
sub
mov
ret
icebp
stos
cli
mov
inc
xchg
and
cwtl
mov
xor
mov
aam
mov
xor
testl
lds
pop
inc
sbb
sbb
or
xchg
lock
jmp
hlt
adc
es
mov
sub
orb
cmp
adc
jns
aad
es
fwait
sbb
imul
popf
gs
mov
sbb
mov
loop
xchg
mov
cld
lret
mov
adc
in
inc
pop
rcrl
addr16
xor
iret
dec
mov
mov
fisubl
pop
shrl
dec
movsb
fwait
pop
mov
xor
nop
and
cmp
cmpsl
pop
push
push
or
mov
mov
test
jge
repnz
clc
pop
stc
stos
data16
mov
jg
cltd
pop
xchg
fcoml
lcall
mov
lahf
repz
inc
mov
cmp
loopne
push
pop
sysenter
cli
or
mov
mov
ds
outsl
mov
test
xor
mov
into
mov
icebp
xchg
setge
negb
hlt
mov
rolw
cmc
mov
ja
add
inc
lahf
xchg
and
sub
imul
push
or
pushf
mov
mov
nop
les
dec
inc
loopne
lret
adc
lods
idiv
movsl
sub
out
add
rorl
ds
jmp
into
repnz
inc
and
push
out
in
es
mov
js
outsl
sub
enter
mov
pop
sbb
lods
nop
xor
jl
orl
aam
imul
je
pop
int
inc
scas
hlt
cmp
mov
call
lock
sub
add
lahf
insl
xchg
sub
inc
pop
hlt
jle
fnstcw
clc
jle
stos
jns
fs
xor
push
aaa
jl
cld
or
pop
popf
int3
xchg
shll
inc
jge
xor
dec
mov
test
idivl
cmpsb
repnz
dec
pop
lods
test
push
pop
or
hlt
inc
jo
push
rcrb
lods
repnz
dec
lock
shrb
push
fldl
mov
mov
mov
pusha
cmpsl
in
aas
xor
movsl
dec
jmp
loopne
aaa
jl
add
or
imul
push
enter
pop
ret
ljmp
and
das
inc
movsl
lods
icebp
int3
push
seta
mov
jl
push
cmpb
xlat
lds
pop
hlt
fnsave
sub
push
ret
sbb
daa
out
pop
xorl
incb
mov
mov
mov
out
xchg
push
jne
jne
jge
les
stos
xchg
jge
add
inc
sub
and
xchg
xor
fwait
xchg
fwait
xchg
add
pop
hlt
cmpl
int3
imul
cmpsl
cmp
dec
fisubl
adc
push
add
push
cs
insb
push
adc
mulb
xchg
sbb
mov
jle
out
in
xchg
dec
pop
test
jl
jg
pushf
shrl
xchg
mov
xchg
ljmp
sar
push
in
fldenv
les
fdivp
and
cld
fwait
dec
jecxz
enter
stc
in
in
pop
repz
push
push
push
ret
mov
mov
inc
mov
lcall
sbb
push
mov
cmpb
outsl
xor
daa
push
pop
mov
stos
into
cmp
and
jbe
and
dec
dec
mov
dec
sub
dec
mov
add
pop
jno
bound
push
xor
mov
fwait
hlt
pop
call
aad
add
out
add
pop
inc
jmp
push
mov
clc
pop
hlt
xor
lods
sahf
jle
xlat
rcrl
fwait
adc
mov
sbb
es
dec
lods
fs
jmp
mov
shll
fisubl
dec
mov
push
sbb
adc
jns
xchg
mov
mov
fwait
xchg
mov
loop
pop
xor
add
mov
push
test
sbb
jmp
das
lock
lahf
mov
mov
fs
bound
push
lds
aaa
lock
inc
dec
mov
mov
push
lcall
into
lcall
sbb
in
iret
xchg
or
and
mov
mov
into
clc
aaa
pop
aaa
add
pop
sub
adcl
dec
or
mov
cld
dec
divl
mov
insb
dec
aad
enter
mov
pop
gs
cmp
into
data16
popf
sbb
push
jb
xchg
lcall
mov
xchg
test
sub
test
push
push
mov
jg
lods
rcrl
adc
mov
ds
mov
movl
inc
adc
mov
or
cmc
jl
sbb
xlat
mov
add
jae
lods
mov
sti
fdivr
insb
jp
push
xlat
inc
mov
loope
std
stos
or
sti
mov
fcoml
loop
xor
mov
pop
dec
jmp
push
sbb
mov
arpl
sbb
jbe
mov
mov
vpsubw
jae
sub
jl,pt
stos
dec
cmp
push
or
dec
aas
and
in
hlt
scas
out
or
mov
pop
insb
sbb
mov
push
or
or
clc
pop
xor
cltd
inc
arpl
pop
inc
cltd
push
cmp
inc
xorb
push
sub
cmpsl
mov
mov
lods
add
fnstcw
stc
mov
jo
jae
test
cli
mov
sbb
lret
addr16
add
ficoml
dec
test
lahf
mov
push
ret
cltd
xor
xor
mov
adc
sub
in
das
lds
ss
pusha
sbb
push
adc
sub
in
inc
mov
lods
popf
movsl
xchg
add
adc
pop
fimull
pop
loop
add
adc
xor
rolb
mov
lret
xor
nop
data16
adc
mov
sbb
jo
in
mov
xchg
push
dec
pop
jo
call
xor
les
inc
adc
push
pushl
xor
sub
outsl
adcl
dec
insb
repnz
popf
int
ss
sbb
mov
cwtl
mov
sub
sbb
push
mov
pop
pushf
and
adc
aam
cmpl
mov
push
insb
xchg
push
repz
enter
sbb
idivb
mov
mov
pop
cmpsl
aam
push
sbb
cmp
lock
mov
cmpsb
ds
cmp
subb
lcall
pop
into
movsb
cs
xor
push
stos
andl
movsb
lahf
adc
enter
sub
lea
jecxz
sbb
mov
push
ss
sti
mov
insl
in
mov
lcall
lods
and
xor
icebp
push
xchg
cli
adc
dec
or
sbb
in
insl
adc
mov
sti
rolb
sub
ret
scas
push
in
sub
push
cmovg
push
mov
out
sbb
or
adc
and
add
cmc
pop
insb
cmp
bound
jecxz
pop
push
sbb
scas
jo
xchg
ror
jnp
dec
sbb
mov
out
mov
push
jo
push
jmp
mov
out
dec
push
push
inc
adc
cs
and
outsb
in
pop
xchg
repz
push
pop
mov
xor
pop
and
insb
mov
dec
dec
enter
int
cwtl
lds
inc
lret
jg
insb
iret
xor
imul
jb
add
gs
cmp
adc
xor
into
les
hlt
mov
jne
push
or
in
push
dec
mov
mov
mov
xor
test
mov
mov
jp
add
test
ret
pop
and
push
test
jp
out
loope
loope
pop
lret
mov
mov
insl
xlat
and
mov
xor
mov
inc
mov
lea
pop
xor
jge
dec
cwtl
cmp
xchg
push
lret
xchg
or
dec
mov
add
mov
lret
xchg
cmp
loop
jge
mov
rorb
cmpsl
dec
rcrl
scas
out
mov
xor
add
and
incl
inc
pop
lock
shrb
cmp
sbb
lret
cmp
jmp
jbe
mov
mov
mov
neg
inc
rcrb
repnz
insl
xchg
hlt
push
pushl
repnz
mov
adc
ja
cmp
mov
stos
lahf
pop
jg
in
gs
and
fadd
out
mov
sti
adc
icebp
lret
sub
or
cwtl
lea
out
or
sbb
pop
push
push
test
xchg
dec
test
jno
cmpl
or
mov
testl
adc
sub
rcrb
dec
pop
lea
xor
jb
cwtl
mov
insb
fdivrl
sub
mov
aam
out
inc
cmp
pop
stos
sub
or
into
pop
gs
mov
cli
movsl
and
or
jno
enter
mov
jl
lods
lret
mov
xchg
sbb
sub
daa
fimull
lret
test
test
mov
and
push
jg
xor
scas
mov
add
xlat
xchg
ds
bound
dec
ficoml
mov
out
je
or
xchg
inc
xchg
movsl
aaa
cmc
mov
dec
xor
ret
pop
mov
mov
pop
div
sub
lds
nop
mov
lock
inc
in
pop
mov
cld
scas
sbb
mov
out
je
add
test
arpl
cmp
jnp
jle
dec
stc
mov
xor
xchg
je
push
push
and
incl
adc
fwait
and
sbb
mov
fdivp
lcall
nop
inc
out
and
cmpsl
fstl
fdivrl
je
xchg
cmp
imul
dec
test
subl
pop
mov
xchg
outsl
lods
mov
int
inc
inc
cwtl
adc
cmp
call
cmpsl
sub
and
mov
ds
and
nop
mov
cmp
xchg
jl
insb
or
loopne
dec
rclb
mov
ret
sti
js
cli
ljmp
push
popf
aaa
insl
mov
jb
cmp
dec
sub
fists
bound
cld
dec
bound
popa
or
into
add
add
outsl
inc
fiaddl
lret
cmp
test
adc
sbb
mov
pop
imul
ret
pusha
mov
jns
adc
pop
inc
lahf
ja
subb
jne
test
dec
mov
call
and
and
push
call
lcall
mov
xchg
push
dec
pop
add
ja
and
gs
mov
scas
bound
cmp
mov
and
scas
or
sbb
push
mov
insl
push
push
fldl
fcoml
fdivrl
mov
popf
cmc
pop
or
lock
mov
add
cmpsb
test
mov
cmp
push
push
iret
movsl
dec
or
call
lock
cli
and
mov
ja
arpl
rclb
fcomip
movsl
xchg
push
jbe
popa
movsl
sub
push
outsl
push
push
rorl
and
cltd
mov
cltd
adc
test
inc
push
sbb
into
lret
cmp
push
lds
lcall
mov
pop
add
ss
js
ret
xor
popf
test
lds
jb
xlat
call
push
insb
dec
jbe
xor
mov
pop
xchg
inc
outsl
sub
into
mov
in
push
inc
xchg
and
sub
pop
xchg
xor
jmp
inc
rolb
or
lods
and
inc
int3
inc
push
pop
mov
inc
jl
sbb
je
lea
mov
adc
test
lret
sub
cli
addb
std
popf
jno
jns
adc
gs
adc
sbb
and
in
jecxz
xchg
pop
mov
leave
sbb
test
push
mov
int3
or
addr16
xchg
mov
lcall
mov
mov
inc
les
cmp
inc
jne
inc
mov
test
adc
jge
and
daa
ficoml
xchg
inc
xor
push
loopne
mov
or
fisubs
lret
mov
cmp
pop
xor
popa
fmul
pop
ds
or
inc
pop
sbb
sub
lea
sti
sub
push
or
int
add
movsl
imul
pusha
add
xor
mov
lret
mov
aas
lock
sub
sbb
iret
add
or
jb
sub
dec
shll
add
add
mov
mov
add
push
cltd
cmp
ljmp
cmp
xor
pcmpeqd
movsl
dec
sbb
lods
xchg
rolb
mov
dec
in
dec
mov
scas
xchg
sbb
out
les
xor
adc
inc
sbb
scas
js
and
mov
ret
or
add
rclb
mov
sub
mov
mov
repnz
pushf
pop
dec
and
test
jp
cmp
jo
mov
add
mov
pop
cmp
arpl
cmp
inc
lods
dec
mov
ret
dec
lock
cmpsb
adc
and
jne
les
mov
mov
pushf
out
push
add
push
addr16
cmp
in
jne
ja
fdivrl
push
nop
ss
lock
or
push
inc
ljmp
and
pop
dec
lock
cltd
jns
inc
xchg
mov
sub
fcomip
mov
jb
lcall
xchg
xchg
dec
shlb
enter
mov
shll
sbb
les
cmc
sbb
mov
and
lods
add
sbb
push
add
fwait
hlt
orl
dec
mov
xor
iret
mov
das
add
mov
lods
pop
jecxz
push
pop
pop
cmp
push
js
fsubs
in
xchg
mov
inc
enter
ja
mov
mov
mov
js
push
shlb
mov
or
dec
mov
sbb
shlb
sub
bts
imul
ficoml
and
mov
or
push
shlb
imul
pop
xchg
dec
repz
jmp
mov
lret
lods
imul
decl
mov
or
int3
inc
sub
cmp
jo
hlt
pop
aam
push
cs
and
js
inc
push
push
cmpsb
lock
fadds
cmpsl
int
sub
cwtl
enter
and
fisubl
pop
icebp
out
stos
fldenv
call
lret
test
mov
mov
bound
pop
mov
sahf
jne
and
in
push
imul
mov
arpl
mov
test
or
dec
cmp
aad
repz
es
sbb
pop
mov
ret
ficomps
pop
js
inc
arpl
cmp
imulb
cltd
les
inc
push
cmpsb
dec
aaa
and
cli
stos
es
repz
push
es
ret
pushw
stc
subb
adc
cmc
jnp
mov
add
fsubs
or
xor
dec
cmp
mov
icebp
add
sub
mov
inc
shll
lock
dec
icebp
cmpsl
mov
sub
pop
aam
hlt
inc
in
pop
jns
or
dec
mov
cli
dec
gs
push
stos
ja
scas
testb
xor
sarl
divps
and
xor
mov
add
jo
js
dec
pop
or
add
jns
jg
outsb
mov
pop
jbe
sub
sbb
fsubrl
xchg
cwtl
or
mov
xchg
sahf
push
push
ret
int3
xchg
fisubrl
inc
sahf
sub
mov
mov
test
daa
andl
inc
push
push
dec
jp
cmc
xor
push
lret
pusha
dec
xor
lcall
jl
cltd
jbe
test
fldenv
cli
add
out
push
scas
dec
loopne
gs
mov
out
movsb
in
in
xorl
jecxz
in
aaa
inc
xchg
ret
fisubrl
lods
loopne
aad
nop
and
lret
cmpsl
mov
arpl
and
mov
inc
rol
je
pop
push
adc
scas
or
jns
into
push
mov
mov
dec
add
inc
cld
fistps
cmp
fisttps
or
inc
jbe
test
cmp
in
or
adc
or
mov
dec
sbb
addl
xor
sbb
ljmp
or
mov
iret
push
repnz
xchg
cmpsb
push
int
sbb
adc
icebp
icebp
rolb
pop
sahf
push
pop
das
lods
iret
mov
fs
mov
outsl
rorb
xchg
incl
stos
push
pop
fisttps
dec
test
cmp
pop
xor
sbb
inc
add
out
iret
push
xchg
or
xchg
or
jae
xlat
push
or
dec
scas
out
fs
cmp
into
fimuls
mov
dec
or
mov
sbb
inc
add
xor
push
mov
cs
push
cmp
xor
mov
jmp
mov
mov
jle
adc
cmp
adc
aaa
ficompl
mov
daa
jecxz
out
adc
mov
in
stc
into
jp
xor
jns
sub
iret
cli
xchg
outsb
lahf
lret
cld
cmpsb
clc
mov
and
faddl
loopne
nop
and
cltd
subb
cmp
mov
cmp
test
and
pop
cmc
rorl
mov
mov
int
cmp
ret
pop
mov
mov
nop
frstor
dec
xor
ja
sahf
sbb
mov
sbb
sarb
dec
cmp
sbb
and
pop
pop
or
aam
mov
jne
stos
leave
cmp
iret
and
or
lea
lock
inc
inc
fiaddl
shl
rcrb
stos
ljmp
push
cli
lods
mov
mov
cmp
add
sub
lret
mov
insl
pop
xor
push
inc
daa
out
mov
stc
inc
test
js
and
fwait
out
bound
sbb
pop
sti
and
cld
or
mov
xchg
data16
das
mov
dec
lods
mov
shrl
in
xchg
shr
test
mov
leave
rolb
sub
xor
pop
movsb
or
pop
fdivr
cmpsl
jle
xor
push
aam
jmp
add
rcr
int3
cmp
lds
dec
adc
lcall
js
sahf
inc
out
rcrl
push
add
xor
jns
jnp
add
mov
je
xchg
xorl
add
xor
xlat
imul
fstpl
mov
pop
cmpsb
scas
xor
pusha
fcoml
test
adc
dec
gs
push
jo
insb
into
dec
pop
jo
xor
test
mov
scas
rcrl
jl
cmp
test
mov
aas
test
or
push
insb
sahf
dec
hlt
popf
aad
shlb
xchg
test
pop
in
push
imul
lds
add
scas
or
ror
dec
das
ja
in
lret
std
popf
xchg
mov
bound
lahf
jae
pusha
lret
scas
ret
aam
xor
out
into
int
lock
icebp
or
mov
xor
outsb
mov
iret
lea
lea
fnstcw
pop
or
imul
jne
mov
push
adcb
cmpb
in
loopne
and
or
add
inc
fidivs
xor
lret
aaa
into
popf
xor
push
sub
mov
popa
clc
fcompl
cs
test
mov
js
mov
mov
or
je
cmpsl
add
cmp
push
cmp
mov
cltd
imul
shr
dec
in
pop
lret
enter
and
mov
clc
mov
xchg
roll
cmp
and
mov
loopne
adc
jns
pop
jmp
loopne
daa
mov
daa
sbb
fld
lods
dec
cmpsl
inc
lahf
dec
mov
pop
outsb
dec
mov
pusha
gs
inc
fnstsw
in
push
xor
dec
mov
fnstenv
mov
lds
test
fsubr
push
sub
ja
cmp
push
out
shl
add
push
cmc
mov
push
cmpsb
fsubs
scas
adc
jmp
sbb
push
jmp
jle
adc
fildl
add
inc
push
xor
out
dec
fsub
dec
xor
cmp
nop
lahf
lret
pop
sub
fnstcw
xor
mov
insl
pop
xchg
aaa
add
xor
sub
add
mov
or
loopne
es
in
imul
test
push
out
adc
rcrl
cmc
addr16
and
cld
xorb
inc
cmp
ret
push
dec
or
push
scas
inc
mov
sub
subl
jp
sahf
pop
cmp
icebp
aad
add
inc
mov
mov
mov
repnz
outsl
aas
shll
flds
sbb
mov
in
mov
pop
arpl
jmp
test
mov
cld
dec
addr16
add
mov
xchg
aad
inc
mov
and
in
sub
hlt
ror
sbb
pop
jmp
cmp
mov
in
sahf
sbb
test
shlb
dec
in
fs
into
in
data16
popf
inc
mov
sub
sub
lret
insl
or
pop
in
inc
stc
push
aad
mov
sub
jnp
pop
mov
xlat
mov
pop
adc
pop
xorb
enter
insb
bnd
or
mov
pop
repnz
fbld
outsl
arpl
jmp
roll
fsubrs
xchg
and
sti
or
adc
xor
cmp
mov
shrb
and
push
and
mov
dec
cs
lea
pop
les
push
arpl
push
push
in
sub
insl
or
push
out
adc
pop
jmp
mov
mov
mov
mov
cwtl
pop
sbb
shlb
lret
notb
bound
or
sub
jl
fidivl
shll
mov
ja
stos
mov
clc
xchg
or
mov
aas
jmp
cmp
sahf
rcr
lds
mov
cmp
cmp
es
xor
enter
adc
and
add
scas
pop
cltd
loopne
sub
sub
movb
xchg
sbbb
aaa
roll
outsl
mov
dec
rcl
dec
pop
xor
in
dec
sbb
out
push
cs
sbb
cwtl
inc
fistpl
push
in
pop
mov
mov
add
dec
notb
sub
iret
xor
add
xlat
sahf
mov
fs
flds
jnp
pop
pop
incb
cmp
sbb
mov
mov
movb
lods
xor
loopne
sbb
je
stc
sub
sbb
sub
xchg
inc
adc
daa
mov
mov
mov
ljmp
lods
mov
push
out
arpl
std
enter
push
xor
inc
pop
mov
popf
rolb
jno
and
cld
xor
aas
imul
mov
mov
mov
pop
and
or
lock
scas
inc
add
in
repnz
lods
int3
jmp
loop
mov
push
mov
or
lret
lock
sub
sbb
pop
mov
jno
or
sahf
aas
add
pop
pop
test
das
lret
push
inc
jmp
addr16
mov
call
jb
pusha
nop
ja
out
es
fisubrs
repz
jo
sbb
push
aad
rorl
daa
mov
fcmovb
bound
std
ret
mov
lret
andb
xor
int
push
imul
fcmovne
les
sarl
push
jb
out
mov
push
add
bnd
jmp
pop
in
jge
movsb
insb
mov
xchg
sub
and
fimull
inc
and
movsl
dec
fs
aad
cwtl
addr16
inc
movsb
dec
mov
pop
ljmp
jp
inc
icebp
sarl
pop
xorl
cmp
xor
and
push
inc
dec
adc
rcll
push
push
enter
jp
ljmp
cltd
mov
sbb
cmpsl
enter
cmp
ljmp
mov
sub
out
test
inc
or
push
add
sbb
jne
pop
mov
nop
out
lahf
add
enter
lahf
mov
mov
inc
push
push
lahf
sub
sarb
lret
dec
inc
inc
xchg
cmp
mov
sub
sti
das
loop
aaa
cmp
add
push
push
xchg
pop
ja
cmpsb
inc
es
fnstcw
out
jl
hlt
cmp
mov
fnstcw
nop
lret
mul
test
and
jg
setns
xor
popf
jg
sbb
pop
add
addr16
hlt
daa
arpl
mov
cmp
nop
jno
xchg
xchg
jecxz
ret
push
push
jbe
rcrl
into
jecxz,pt
push
shl
and
shrb
fidivrs
cmp
call
sbb
jbe
clts
ffree
clc
push
scas
enter
xchg
ret
adc
scas
adc
sub
push
mov
pusha
lds
int3
xor
into
jl
cmp
push
xchg
mov
jno
cmp
lods
aas
es
push
repnz
mov
xchg
push
mov
mov
push
into
in
inc
mov
jmp
xlat
inc
xchg
and
jbe
movsb
xchg
cmpsl
mov
dec
sub
pop
mov
mov
pop
aaa
lods
dec
fmuls
cmp
cltd
pop
gs
pop
cmp
int3
adc
add
adc
pop
hlt
outsl
and
cmp
rclb
in
test
shrb
mov
push
jecxz
mov
mov
pop
into
outsb
lcall
in
cmp
outsb
cwtl
sbb
movsb
mulb
push
lea
cmpsl
sti
cmp
mov
pop
pushf
xchg
sub
mov
cmp
sarb
xchg
sarb
enter
push
mov
or
add
subl
sahf
inc
lods
in
mov
cmpsl
mov
cmp
pusha
xlat
out
add
ret
lock
mov
push
jg
std
jge
ficoms
hlt
fcompl
iret
insl
cmp
std
addr16
mov
xchg
and
jno
mov
lea
mov
inc
mov
and
mov
dec
mov
add
mov
paddusb
movsb
les
fwait
sbb
std
inc
sub
imul
cwtl
adc
xchg
xor
pop
aas
loope
mov
ret
and
pop
or
adc
stos
andl
imul
packssdw
or
or
pop
add
lea
adcl
add
insb
das
dec
lods
mov
jb
aam
mov
xchg
xor
push
inc
jae
lahf
popf
xor
add
cmp
adc
fdivl
jbe
dec
bound
icebp
jo
pop
xchg
data16
in
sub
decl
and
or
out
add
shlb
je
xchg
xor
xchg
push
mov
ljmp
adc
insl
in
jns
fs
stc
or
aaa
or
std
cmp
in
iret
es
jle
mov
loop
mov
aad
repnz
cmp
inc
cmp
fstpl
sub
rorl
add
fidivrs
jmp
xor
je
push
mov
xor
push
push
jmp
test
clc
mov
dec
inc
mov
bound
in
mov
daa
call
push
or
inc
jg
cld
and
out
push
int
inc
add
and
xchg
mov
xchg
rcl
and
ljmp
mov
fimuls
inc
add
mov
stc
dec
push
pop
aas
sub
fwait
sub
mov
or
inc
mov
cld
fcoml
aaa
je
jl
lcall
pop
push
jno
dec
mov
sbbl
add
mov
insl
and
mov
loope
dec
mov
scas
mov
scas
and
cmc
sbb
shlb
into
xchg
adc
jmp
xchg
gs
sub
fcmovnbe
or
push
jnp
jmp
mov
adc
out
in
fimuls
pop
dec
inc
jmp
or
lds
mov
iret
sbb
insb
call
out
jle
push
dec
cwtl
xlat
popa
cmp
sbb
andl
je
jmp
inc
ret
push
adc
xchg
sbb
adc
mull
mov
sub
mov
shll
pop
fsubs
fcmovnu
jge
dec
push
shl
aaa
xchg
sti
nop
fs
rcr
bound
mov
sahf
sub
hlt
sub
sub
data16
sbb
pop
cli
loopne
cwtl
sar
sub
addr16
das
in
pop
lds
mov
adc
fstp
push
into
add
inc
push
adc
jb
or
mov
inc
jae
fbstp
lods
inc
addr16
lahf
lret
mov
jae
mov
mov
xor
stc
fmuls
ret
mov
int3
test
out
into
stc
inc
cld
movsl
pop
push
movsb
shl
jg
sbb
int3
roll
pusha
jmp
js
or
test
xchg
xor
jle
dec
das
pop
cmp
dec
faddl
outsb
pop
inc
sbb
xor
arpl
jnp
fcmovnu
ret
cli
lcall
pop
mov
mov
add
inc
jmp
gs
push
daa
ret
mov
es
pop
ret
addr16
adc
xor
les
sub
sarl
dec
jle
nop
pop
es
imul
negb
add
mov
cltd
daa
add
arpl
aas
sbb
and
lret
pop
and
int
lock
add
in
mov
or
mov
inc
mov
mov
scas
es
dec
inc
mov
jne
call
shl
add
or
sub
add
inc
push
push
mov
lahf
pushf
inc
subb
fcmovu
addr16
loopne
scas
cmp
fmul
xor
xchg
adc
in
leave
out
push
dec
and
movsl
imul
xchg
lret
ret
loopne
sbb
push
arpl
jnp
hlt
push
test
lret
je
fwait
push
pusha
aam
pop
xor
clc
jmp
ret
jmp
push
jnp
or
xchg
push
and
mov
movsl
lds
repz
stos
mov
aas
push
and
addl
mov
jmp
add
add
xchg
add
div
cli
dec
pop
mov
cwtl
js
sub
jle
sbb
data16
sub
jg
jo
push
divl
cmp
lea
push
jp
adc
pop
jg
or
jb
mov
sbb
dec
push
scas
test
lahf
add
in
and
cmp
inc
jecxz
fchs
addr16
rorb
shrb
adc
ret
add
add
aaa
fnstenv
fistpl
test
loop
add
cmp
xchg
mov
dec
sbb
pusha
pop
mov
push
sub
push
add
jns
cmp
mov
adc
dec
jbe
icebp
add
stos
jbe
sbb
pop
add
push
pop
shrb
push
stos
mov
andb
std
pop
daa
inc
into
mov
adc
repz
push
push
mov
jne
cmp
aas
fistps
xchg
mov
in
sbb
ret
out
ljmp
popa
lds
stos
into
add
cli
cwtl
stc
popa
and
frstor
andl
xchg
xchg
push
fwait
mov
and
pop
leave
mov
fldt
dec
nop
lock
popf
cmp
cld
sub
test
shll
dec
cmp
mov
jae
aam
cmpsb
scas
xchg
mov
mov
pop
repz
ret
std
dec
add
or
scas
test
mov
scas
cmpsb
add
push
pusha
fistpll
movsl
in
out
add
cmp
xor
stos
add
sarl
lret
or
dec
inc
lock
push
xchg
lahf
pop
dec
or
cld
lcall
call
or
inc
and
sbb
inc
enter
aaa
cwtl
cmp
mov
xor
stos
dec
aad
xchg
ret
test
or
xchg
mov
cld
mov
pop
repz
mov
xchg
cmc
aas
mov
jle
cwtl
push
or
out
sbb
push
dec
ret
inc
int3
or
stos
pop
fs
xchg
push
cmpsl
sub
std
lahf
ds
mov
mov
xlat
mov
insb
adcl
add
test
mov
mov
out
icebp
loopne
aad
cmp
adc
mov
cli
int
sub
js
pop
jg
mov
psrad
ds
xor
cmp
inc
cltd
mov
jl
enter
and
imul
inc
add
or
lods
inc
and
fwait
push
out
mov
dec
movsb
add
mov
pop
add
es
loope
out
push
mov
aad
ret
mov
push
xchg
nop
jl
pop
xchg
in
test
std
ret
xor
sar
mov
lcall
int3
inc
mov
lods
adc
or
push
fistps
sub
mov
iret
cli
sub
lock
or
mov
dec
pop
ret
jns
ljmp
pop
ss
mov
cmpb
pop
cmp
jmp
sbb
out
adc
adc
outsl
sub
out
add
jmp
add
pop
clc
cltd
enter
mov
adc
outsb
jmp
add
daa
lds
enter
aam
adc
and
sahf
cwtl
mov
leave
std
stos
sahf
rolb
pop
lret
dec
ja
aam
rcr
lds
or
lods
shll
in
sbbl
fcmovnbe
je
test
sti
loope
add
fdivrs
sub
arpl
xorb
xor
jnp
pop
frstor
leave
xchg
cmp
lds
mov
push
adc
shl
push
mov
mov
dec
pop
std
push
pop
dec
shll
stc
addl
xor
jno
pop
ret
sbb
mov
fsts
sbb
orl
jo
inc
mov
push
fwait
add
jnp
xor
jmp
int3
push
out
std
xor
aad
test
xchg
lret
mov
dec
shrb
test
pop
shrb
jns
stc
sub
out
sub
pop
xchg
dec
in
sbb
adc
arpl
pusha
mov
out
in
sbb
jp
aas
test
add
test
lds
pop
sti
push
jns
mov
adc
xchg
out
arpl
inc
mov
inc
cmp
imul
sub
ret
ficoms
movsb
nop
ss
shrl
pop
nop
inc
push
jno
lods
push
or
sub
dec
mov
sahf
and
bound
cmpsl
mov
mov
fldlg2
inc
scas
cvtps2pd
cltd
mov
xchg
dec
cmp
loop
mov
mov
fdivrl
jl
inc
dec
xchg
repz
pop
jmp
or
pushf
jb
inc
int
arpl
add
addb
inc
adc
sub
or
dec
decb
inc
outsl
mov
add
xor
ret
push
repz
push
dec
lock
in
shll
scas
pop
mov
xchg
cld
in
loop
ret
lods
or
std
inc
stc
ja
cmp
mov
push
out
inc
push
xor
rol
inc
in
inc
mov
xor
add
add
sub
pop
movsl
xor
mov
jp
icebp
dec
bound
cmp
pop
xchg
xchg
in
add
enter
inc
or
jecxz
aad
test
add
adc
aas
cmp
insb
sbb
fwait
outsb
pop
push
xlat
popf
out
sbb
inc
sbbl
call
pop
aas
and
std
bound
push
das
mov
add
adcb
xchg
dec
jne
mov
inc
cwtl
rcrl
xchg
cmp
push
popa
outsb
movsb
inc
dec
pop
inc
sub
inc
cld
loop
jnp
roll
mov
mov
sub
mov
test
negb
dec
movsb
xlat
addr16
sub
test
stos
mov
sub
enter
xor
inc
sbbl
loopne
mov
in
and
ljmp
push
mov
cmp
js
loop
and
test
mov
sub
xor
hlt
or
sbb
jb
cmp
ret
jl
jl
scas
adc
arpl
jle,pn
ljmp
jp
inc
cmp
or
daa
mov
out
mov
pop
popf
pusha
jmp
call
xchg
daa
mov
lea
loop
fs
pop
adc
pop
push
dec
push
mov
dec
sbb
aas
pop
push
aas
data16
into
pop
aam
aam
cmp
and
xchg
cld
xor
repnz
sub
je
mov
xor
inc
xchg
pop
cmp
or
mov
popf
ret
dec
psrad
push
les
cs
pop
int3
sub
add
clc
jle
mov
jmp
lahf
or
les
vmovaps
jns
mov
pop
fdivr
subb
scas
dec
gs
outsl
loope
icebp
xor
or
add
mov
jo
adc
out
enter
inc
mov
pop
bswap
in
int3
stc
js
adc
sub
or
bound
andl
cmp
cmp
jnp
rorl
scas
test
xchg
ljmp
imul
in
inc
cmc
mov
mov
xchg
sbb
jge
jmp
sti
sub
aam
add
into
pusha
insb
dec
cmp
pop
ret
sub
push
out
test
xor
jp
fcmovu
xor
ficomps
mov
xchg
repnz
mov
bound
aas
xor
repnz
cmp
mov
pusha
jo
in
add
out
push
and
inc
jl
inc
mov
shll
nop
push
dec
push
lods
jae
mov
dec
mov
jl
adc
bound
sbb
and
iret
ret
sub
ret
xor
icebp
push
int
add
int
lds
out
ljmp
and
xor
pop
xlat
fldz
das
dec
mov
pop
nop
adc
vmread
retw
sbb
xchg
lods
push
outsl
ja
mov
enter
or
add
aad
jno
scas
rol
scas
sub
sub
push
jecxz
xor
in
and
sub
jmp
add
xor
sub
jo
lock
stos
aas
out
pop
xor
xor
xchg
call
mov
imul
jb
xor
aad
push
cs
ljmp
adc
xchg
pop
mov
fwait
sub
jle
gs
xlat
mov
cmpsb
fiadds
pushf
lret
jp
xchg
popa
push
pusha
inc
and
push
rol
jge
mov
xchg
jg
jo
fadds
xor
icebp
dec
aad
push
push
mov
hlt
fmuls
mov
jmp
jnp
xchg
mov
testb
fdivrl
dec
mov
add
ljmp
ljmp
movsl
out
into
fs
rclb
lcall
and
push
jecxz,pt
push
lret
push
aaa
sub
lods
pop
pop
and
fstps
inc
adc
mov
dec
sahf
jg
pop
imul
sub
les
vpaddq
xchg
mov
push
sub
or
cmpsb
push
sbb
lret
cltd
push
inc
xchg
mov
pop
inc
inc
aas
xchg
aas
rcrb
ficoml
dec
and
leave
iret
add
dec
add
pop
popf
xchg
pop
inc
pop
and
scas
sub
hlt
inc
test
xchg
sub
pushf
icebp
xor
popf
pop
notb
xchg
or
insb
nop
mov
fstl
sbb
test
shll
das
xchg
xchg
add
lahf
cli
cwtl
jge
push
mov
jo
push
out
mov
mov
push
insl
mov
cmp
add
mov
insb
sbb
jl
outsb
xor
jg
out
adc
insb
dec
sbb
jg
push
sbb
mov
ja
aaa
sbb
add
outsl
and
imul
push
lcall
mov
mov
ljmp
jge
fisubrs
insb
xchg
push
push
sbb
xlat
push
cmp
aaa
cmpsb
xchg
pop
jg
adc
sbb
sub
lea
adc
push
cmpsl
cli
and
shrb
rcrb
test
lods
jg
stos
xchg
xchg
xor
sbb
pop
sub
adc
adc
mov
roll
cli
xchg
jb
and
fwait
sub
sub
out
mov
adc
insl
fwait
popf
and
ficoml
fwait
jg
sar
adc
lods
adc
dec
jmp
dec
jge
das
hlt
sbb
loope
and
cltd
jmp
jnp
dec
fiadds
add
scas
xor
cmc
mov
sub
je
lcall
popf
in
cmp
jns
dec
repz
sub
add
jg
fimuls
push
sbb
xor
xor
push
xlat
pop
jne
sarl
xor
addr16
pop
scas
lods
add
leave
lcall
jb
sti
fimuls
cmp
mov
sub
pop
xor
dec
jne
out
push
cmpsb
scas
jbe
sbbb
inc
pop
mov
rcr
cmc
jg
outsl
fbstp
push
stos
into
adc
mov
cmpsb
jg
jnp
xchg
stos
mov
and
je
popf
or
sbb
clc
enter
xor
insl
jae
inc
jmp
testl
dec
and
std
imul
inc
mov
lds
popa
or
int
imull
pusha
ffreep
xlat
arpl
xchg
sbb
lods
out
adc
mov
mov
cmc
aam
jo
xor
or
lret
jne
stos
xor
cmpsl
mov
sbb
sbb
aaa
sbb
mov
pop
push
out
cmpsl
adc
ja
outsb
in
push
mov
jno
xchg
jmp
and
jg
fs
out
xor
lcall
xor
pop
or
dec
jmp
mov
or
gs
mov
dec
mov
jecxz
shll
dec
inc
sub
mov
mov
mov
mov
mov
lods
sbb
arpl
cmp
pop
jmp
hlt
push
xchg
inc
and
xor
clc
dec
inc
popf
sbb
mov
xchg
hlt
mov
into
pop
cmpb
pop
sub
mov
xchg
je
les
je
sbb
jg
clc
adc
cmovle
sbb
outsl
push
out
outsb
jbe
lret
dec
xchg
fsub
xchg
sahf
sbb
dec
adc
shl
push
cld
fdivrs
ret
movsl
std
je
push
pop
dec
cmpsl
ficomps
insb
data16
mov
or
insb
out
enter
mov
loopne
cmp
pop
inc
sahf
xor
icebp
not
mov
sub
push
add
xor
imul
dec
in
xchg
dec
leave
insl
mov
mov
cltd
daa
popa
dec
shrl
idiv
cmpsl
in
stc
cld
jne
dec
rolb
pop
jo
xor
jle
mov
xlat
xchg
xor
mov
push
daa
inc
fadd
lds
jge
mov
test
in
js
push
jp
je
push
or
push
mov
sbb
std
xor
inc
xchg
add
loopne
mov
dec
imul
es
idivl
loopne
icebp
imul
mov
cmc
loope
pop
mov
cmp
popa
test
enter
movsb
insl
dec
fists
cmp
sbb
sub
or
jbe
sub
fimull
shlb
or
imul
mov
int
out
pop
xor
xor
adc
mov
std
js
mov
adc
rolb
pop
inc
aaa
xor
cmc
mov
lods
jl
xor
dec
mov
mov
xor
aaa
jnp
jl
xor
sbb
ret
and
add
in
arpl
add
in
or
and
mov
insl
pop
jo
stos
dec
test
mov
loopne
sar
pop
adc
sbb
inc
inc
rorl
and
cmp
add
and
ffree
dec
xchg
or
aad
dec
jge
add
cld
les
sarb
jge
mov
jb
bound
icebp
inc
mov
xchg
fmuls
insl
cwtl
jb
xor
or
jae
mov
adc
int3
data16
aaa
lds
int
pop
lods
imul
lds
aad
cmp
lea
lcall
jb
idivb
fwait
add
push
add
sub
andb
outsb
jbe
and
out
push
xor
aad
dec
stc
nop
push
inc
rol
pop
adcl
or
lock
enter
mov
xor
sbb
xor
mov
and
sbb
test
and
lods
aas
sti
imul
or
and
sbb
data16
jl
ljmp
jmp
adc
test
jns
sbb
inc
mov
or
adc
mov
call
mov
or
or
es
cmp
sahf
lods
and
pop
xchg
add
out
insb
lret
cmpsb
add
sarl
add
and
pushf
fidivrl
stos
and
clc
inc
xor
ret
mov
leave
jle
loop
iret
sbb
cmpsl
inc
mov
lcall
inc
aad
jo
icebp
xor
xor
outsb
mov
out
xchg
push
subb
leave
cmp
pop
sbb
loop
and
xor
mov
shlb
sbb
sbb
adc
adc
pop
pop
int3
xor
inc
jb
jne
sbb
xchg
insl
xchg
mov
dec
test
jne
mov
pop
pusha
sub
cmc
ljmp
outsb
mov
xchg
sbb
push
mov
dec
pushf
mov
push
imul
sti
mov
insl
inc
xchg
decw
sub
out
jb
sub
repz
rorb
pop
sub
insb
mov
enter
xorl
push
dec
mov
dec
arpl
jge
adcl
ret
sub
pop
cmp
mov
add
mov
ffree
in
call
ror
dec
je
popf
ret
or
adc
and
lret
ret
jmp
push
fdivrs
push
jle
inc
and
xor
cwtl
in
push
in
je
mov
dec
adc
mov
inc
push
stc
jae
clc
mov
mov
push
lahf
test
push
in
pop
stos
in
js
and
int
cmc
movsl
sbb
call
fadds
es
popf
into
outsl
bnd
lcall
xor
aam
pop
fisubrs
and
cmp
hlt
push
and
ret
push
test
cwtl
call
adcl
cwtl
cwtl
pop
and
jne
iret
pop
int3
adc
push
sub
push
lds
dec
cltd
in
dec
or
cwtl
and
addl
sti
add
stos
pop
sub
or
cmp
orb
repz
je
dec
ds
ljmp
cld
test
lock
shl
push
mov
add
pop
or
jns
adc
aas
push
ret
jae
loope
js
xchg
dec
lock
mov
cmpsb
inc
xor
je
mov
test
mov
leave
push
in
fldcw
xor
enter
and
pushf
shrb
push
pop
out
rol
inc
push
and
sbb
push
sbb
cmp
pop
ja
lods
adc
jbe
les
sbb
fs
cmp
loope
jns
in
call
int3
leave
movl
pop
lcall
aaa
fwait
sahf
idivl
shll
mov
or
enter
add
push
bound
in
insb
mov
jae
aaa
jnp
xlat
fisubrs
jbe
and
push
dec
out
and
jns
fsts
and
pop
enter
push
lret
arpl
jne
lea
js
xchg
mov
in
sub
adc
xor
xchg
add
movsb
dec
mov
flds
and
scas
adc
xchg
add
jnp
dec
sbb
dec
cmp
pop
out
test
int
sbb
or
push
mov
lds
push
fwait
fnstsw
daa
ss
les
add
mov
xchg
lods
stos
xchg
and
in
daa
roll
sub
add
je
pop
sbb
imul
fisubs
scas
mov
dec
push
stos
mov
addr16
sub
push
idivb
inc
sbb
and
aaa
les
xchg
inc
adcl
push
and
pop
es
cmp
xlat
jl
or
cwtl
rcrb
gs
aad
cmpsl
js
jo
arpl
pop
xor
test
adc
xlat
scas
xchg
test
jae
mov
jecxz
xor
jb
cs
cltd
in
jnp
mov
mov
int3
push
sub
addr16
jno
jmp
pop
lea
lcall
and
cltd
pop
adc
inc
jnp
sbb
nop
inc
push
push
addr16
out
or
add
movsb
arpl
mov
cmp
mov
in
bnd
add
mov
mov
pop
push
fstpt
cmpsl
and
lcall
icebp
pushf
jecxz
mov
or
or
fnstcw
sub
xor
lret
cmp
jecxz
push
flds
arpl
xchg
dec
adc
adc
daa
mov
mov
push
arpl
or
cltd
ja
leave
stc
xchg
cmp
mov
or
cld
mov
adc
repnz
in
cmp
lcall
cmp
sbb
insb
sub
xchg
xchg
mov
mov
jmp
iret
sub
xchg
adc
add
cs
push
pushf
mov
fbld
add
add
arpl
inc
adc
sub
in
adc
pop
mov
pop
sbb
int3
andb
sbb
je
repnz
and
xor
push
jp
mov
inc
test
push
iret
sub
movsb
xchg
pop
jne
out
push
xlat
cmpsl
movsl
sbb
mov
xor
pop
dec
mov
loopne
out
pop
mov
and
sbb
or
xor
add
cltd
movsb
cmp
mov
das
jb
or
xchg
jnp
clc
in
mov
cmp
bnd
push
cld
fsubr
addr16
mov
pop
dec
cmc
xlat
and
dec
int
dec
mov
sbb
add
scas
out
mov
outsl
insb
int3
cld
lret
adcl
fucomp
mov
push
inc
sbb
cmp
sar
jmp
mov
xchg
cmpl
call
cmp
sbb
or
jne
sub
mov
mov
les
rol
fadds
in
testb
cld
sub
shll
loop
mov
jl
gs
dec
lcall
movsl
cmp
in
pop
test
xchg
jns
push
mov
lahf
sbb
inc
hlt
mov
test
sti
jb
pop
and
std
inc
sub
insl
mov
dec
std
movups
jl
mov
and
inc
push
lret
mov
loopne
movsb
rolb
popa
or
shr
hlt
out
int3
push
jmp
cld
push
fimuls
ss
icebp
sbb
repz
outsb
scas
movsb
iret
scas
mov
cltd
je
adcl
sbb
mov
cmp
adc
sbb
push
fdivrs
roll
pop
test
and
pop
outsl
push
xchg
rorb
arpl
fdiv
xlat
cmp
sbbb
jbe
dec
shl
sbbl
out
dec
push
out
stos
aaa
and
mov
dec
push
cli
out
sbb
dec
jle
ds
daa
out
add
je
inc
push
xsha256
cmpsb
shrb
in
dec
shll
lock
mov
dec
mov
push
stos
stos
and
xorl
xchg
or
clc
xchg
fwait
jl
jbe
sahf
stos
arpl
cmpsb
icebp
loopne
imull
jb
mov
clc
mov
dec
jb
scas
call
sub
bound
leave
scas
lods
pop
hlt
test
xchg
add
add
fs
loop
and
dec
inc
and
jge
xor
dec
incb
push
icebp
sti
mov
dec
subl
jno
dec
xchg
pop
loopw
outsb
leave
push
aad
push
and
mov
mov
adc
pop
int3
mov
sub
out
iret
fwait
stos
ljmp
outsb
mov
test
insb
mov
and
jmp
adc
xor
dec
int
lcall
iret
jge
mov
mov
xchg
jne
inc
shl
jp
xlat
jg
xor
addl
in
jmp
mov
cmpsb
cmp
loope
cmp
test
loopne
je
cmp
scas
rcr
pop
cmpl
and
cmp
push
imul
adc
int3
jnp
sub
outsl
adc
inc
fcomps
xchg
cmc
mov
fmull
lahf
stos
repnz
add
pop
xchg
test
push
fistps
imul
insb
mov
and
jns
mov
jp
icebp
mov
fsts
push
test
out
bound
outsl
pop
mov
pop
subl
or
mov
and
lods
push
push
mov
movsb
adc
inc
sub
pop
lret
stos
ss
in
push
xchg
sahf
lds
ds
stc
nop
mov
sub
mov
push
repnz
js
arpl
xor
sbb
xor
mov
lock
pop
mov
mov
mov
sahf
xlat
ja
mov
outsl
mov
xor
es
jbe
cli
cs
inc
dec
frstor
cmp
daa
scas
mov
nop
fdivp
xchg
mov
addr16
or
pop
mov
cwtl
cld
mov
mov
out
add
mov
mov
and
or
lods
xchg
iret
inc
push
push
stos
sbb
ret
lock
push
rcrl
xchg
loop
mov
fstl
lods
sub
push
fisubl
xchg
les
ds
cwtl
mov
aam
mov
mov
out
or
test
mov
stos
jne
inc
leave
dec
dec
mov
stos
fs
in
sub
gs
mov
adc
push
popa
imul
pop
jp
aad
push
xor
push
or
loop
out
jl
divb
and
andb
pop
cli
adc
aad
or
out
mov
xor
jle
and
in
pop
mov
sub
and
push
mov
sub
repz
dec
std
pop
cwtl
mov
js
stos
lods
test
test
add
adc
sarb
mov
dec
pop
mov
call
adcl
in
sbb
cmp
lea
xchg
adc
sbb
adc
icebp
mov
inc
adc
lahf
jno
shrb
mul
jl
sbb
jp
into
and
adc
scas
xor
sbb
idivb
push
or
ficoml
mov
xchg
pop
push
jae
icebp
mov
outsl
add
pop
sub
mov
lock
ret
cmpsb
sbb
adc
xchg
out
mov
mov
inc
lds
sbb
xchg
test
mov
hlt
inc
jge
and
addb
or
adc
into
mov
jne
movsb
scas
cmovg
pop
insb
inc
lock
push
pop
stos
inc
pop
sbb
les
xchg
mov
and
jo
dec
push
sub
mov
call
mov
lods
mov
imul
jnp
mov
stos
in
pop
cmp
call
and
orb
push
mov
mov
lds
in
nop
fs
fisubl
inc
add
dec
and
mov
arpl
cwtl
mov
jnp
adc
arpl
xor
fs
dec
fsubrl
or
pop
or
lahf
mov
mov
out
pushf
jecxz
stc
cmp
cmp
adc
sub
imul
jb
adc
and
lock
not
xchg
stos
cs
pop
lds
mov
cmp
fcmovu
push
inc
sbb
mov
testl
repnz
dec
outsb
imul
arpl
aam
mov
pop
adc
mov
test
and
mov
sub
popa
xor
sub
jl
push
in
lods
movsb
aaa
push
bound
daa
stos
bound
inc
mov
push
sarb
pushf
cmpsb
cmp
ja
mov
sbb
loopne
mov
mulb
jno
pop
loop
arpl
outsb
int
add
fucomp
loope
adc
dec
inc
adc
and
add
icebp
sub
ds
andb
sbb
pop
and
addr16
dec
xor
mov
sub
sbb
sbb
jle
cmp
scas
sar
jae
cmp
std
cmc
repz
inc
pop
ljmp
sbb
cmp
data16
jo
stc
popf
pop
scas
aaa
rcl
mov
sbb
mov
adc
int
arpl
mov
or
flds
jg
add
ret
or
mov
loope
mov
sbb
xlat
sahf
lods
ret
lcall
ds
jmp
push
inc
shrl
flds
sahf
sbb
movl
jne
and
dec
popa
cld
xchg
push
pusha
sub
xchg
or
add
push
pop
outsl
ret
iret
cli
cmc
xchg
popa
inc
mov
mov
pop
ret
pop
dec
ds
cmp
mov
pushf
je
or
in
fldenv
jge
les
ficoml
testl
jbe
ffreep
jge
add
imul
push
int
cld
mov
xor
fildl
nop
gs
pop
jnp
cld
je
jp
inc
dec
jp
or
xchg
xlat
jno
fisttpl
push
dec
mov
stos
or
inc
shll
ljmp
out
jmp
rcrb
push
xchg
dec
sbb
outsl
jle
inc
xchg
mov
adc
divl
fs
add
inc
xor
dec
jg
pop
lods
popa
xchg
push
je
adc
and
xchg
pop
adc
xchg
in
mov
jmp
daa
or
jmp
popa
inc
ffreep
out
xor
pop
dec
lea
pushf
popa
adc
popa
dec
mov
mov
clc
mov
stc
insl
dec
in
cld
sbb
lcall
pop
jge
mov
sahf
mov
sbb
inc
push
loopne
sahf
dec
ds
adcl
bound
and
imul
mov
cmp
mov
inc
jnp
cmp
and
dec
jno
jge
popf
push
loope
jb
popf
xor
roll
jno
and
sbb
jecxz
idiv
push
add
mov
rcrb
das
sub
ds
test
sbb
xabort
andl
mov
out
outsl
inc
jo
in
add
cmp
bound
adc
dec
sub
and
adc
jmp
in
test
mov
aas
push
lret
movsl
dec
jmp
pop
dec
push
mov
xchg
lea
nop
and
icebp
cmpsb
ss
pop
mov
jne
lret
repnz
decb
mov
iret
pop
inc
imul
cmpsl
aas
movsl
push
dec
add
add
je
mov
les
jae
sbb
add
xor
sub
lods
hlt
mov
mov
sbb
ret
aad
inc
dec
shlb
rcll
push
add
dec
mov
push
cmp
cli
lods
insl
stos
jle
dec
fwait
adc
mov
inc
shlb
mov
ja
xlat
in
xor
rcrb
pop
xor
jge
inc
add
cmpsb
or
ret
stos
aas
arpl
ret
push
shl
cmpsl
jne
sub
pushf
popf
call
pop
xor
dec
mov
sbb
dec
aas
das
mov
popa
lods
ret
dec
push
sub
xchg
pop
jmp
xchg
addr16
out
jmp
cmp
xchg
out
into
jo
out
jle
dec
inc
jmp
pop
ss
adc
repz
sub
and
mov
push
loope
adc
scas
aam
scas
and
out
cltd
dec
mov
insl
cs
sar
lea
lcall
stc
and
aas
test
mov
jno
sti
out
fstl
shll
jb
and
pop
into
outsl
mov
xor
add
bound
cmpl
in
push
in
and
pop
lret
insl
adc
mov
int
add
sahf
and
hlt
cmp
pop
test
imul
pop
xchg
mov
in
fcoml
adc
mov
mov
jo
mov
push
test
mov
lahf
rolb
js
adc
ds
and
lahf
popf
out
add
xor
mov
xchg
push
ljmp
mov
fstl
sub
jle
xchg
sbbb
insb
jmp
jmp
adc
ljmp
sub
mov
sub
in
sbb
jle
lret
adc
or
icebp
das
xor
sbb
cmp
jo
xor
pusha
cltd
fldenv
cld
data16
pushf
mov
repnz
inc
std
out
out
int3
in
stos
sahf
in
inc
ret
int3
mov
jl
mov
xchg
shll
cmp
sub
fcoml
loop
xchg
mov
iret
ret
cmpsl
jnp
aam
push
movsb
addr16
sbb
inc
scas
sbb
add
cmp
and
repz
into
xor
je
cmpsl
push
sub
mov
adc
or
outsl
mov
and
xchg
loope
pop
mov
jbe
cmp
jge
pop
mov
cli
cwtl
jecxz
cli
std
leave
xorb
push
clc
mov
mov
mov
enter
cwtl
sub
pop
pushf
rol
inc
lret
push
in
inc
repz
sub
push
cmpsb
pop
mov
pop
je
lods
adc
mov
icebp
pop
pop
cmp
cld
stos
in
xor
xchg
loop
int
dec
cmp
shll
xchg
movl
lea
aas
bound
pushf
inc
jge
xor
or
rcll
dec
das
dec
and
dec
inc
outsb
xor
sbb
adc
or
push
out
jle
lahf
bound
and
stc
daa
add
daa
pop
adc
clc
dec
jo
rcrl
dec
rcr
mov
or
jge
add
sub
enter
rolb
out
jle
cmp
hlt
add
add
push
mov
sub
sub
mulb
pop
mov
outsb
sbb
rcr
xchg
dec
mov
and
jns
int3
mov
aas
fwait
push
jb
xor
cmp
push
jl
lret
mov
imul
mov
push
mov
add
dec
call
leave
add
aas
push
out
nop
insb
sub
loopne
pop
sub
rorb
push
xchg
pop
dec
mov
and
xchg
jb
lock
scas
imul
in
shrb
call
popa
stc
out
push
loop
pop
pop
xor
into
lahf
xchg
test
dec
dec
xor
xlat
jg
rorl
xchg
lods
imul
jge
mov
daa
xor
sarl
rolb
lods
cs
in
cld
pop
arpl
stos
push
addr16
das
lret
loopne
inc
out
jb
sub
sahf
cli
jns
scas
addr16
mov
js
sbb
rcl
ja
popa
push
and
stos
adc
dec
inc
dec
sub
pop
popa
sub
fsts
or
jbe
dec
sbb
mov
fdivrl
push
jmp
inc
fwait
xor
test
subl
pop
sub
fisttpl
in
mov
out
imul
jne
dec
test
cld
es
outsl
add
faddl
movl
icebp
decl
and
pop
into
stos
orb
rclb
out
pop
push
pop
nop
cld
xor
mov
jns
aaa
pushf
popf
cmc
psubsw
xorl
movsb
adc
lock
pop
pop
jno
jp
cmpsb
xor
or
sub
cmc
test
sti
xchg
cli
js
mov
ja
je
into
outsl
clc
rorl
dec
mov
xchg
imul
add
bound
ret
outsl
jmp
lret
in
mov
push
enter
gs
ljmp
outsl
out
or
dec
scas
push
mov
test
sub
cld
mov
cmovae
or
lods
sub
dec
fcompl
sar
sbb
cmp
mov
lods
fldt
xor
lods
call
mov
pop
inc
dec
nop
lcall
jo
scas
popf
clc
or
add
nop
bound
pop
fsubrp
js
insl
adc
xor
in
mov
out
nop
cmp
inc
cmovno
sbb
dec
xchg
jb
cmp
lods
mov
outsl
popa
jecxz
ficompl
dec
mov
cmp
testl
lods
jecxz
nop
jg
xor
stc
arpl
jmp
or
in
mov
xor
je
sub
lods
orb
push
sti
adc
and
test
mov
in
xchg
out
pushf
nop
adc
pop
xchg
fsubrs
cmp
test
fsubrp
push
es
jo
push
mov
cmp
popf
mov
sbb
call
ret
mov
loop
ret
cmpsb
jl
pop
sbb
sub
lahf
xor
and
ja
push
mov
popf
test
hlt
repz
sub
rcl
mov
adc
pop
jns
inc
decb
and
and
push
mov
mov
fldt
mov
pop
push
movsl
cwtl
out
mov
jno
pop
rolb
mov
mov
enter
mov
mov
adc
outsl
xor
push
jno
sti
jle
ja
fistpl
mov
dec
mov
sti
sbb
cmp
jne
fidivrl
aam
push
std
pushf
dec
mov
es
rep
lahf
xor
je
pop
push
cmp
cmp
dec
mov
adc
push
lret
fs
decb
rorl
aam
sub
push
lods
rorb
xlat
dec
adc
push
out
push
inc
mov
imul
or
or
loop
or
lock
adc
push
add
lods
push
in
pop
push
test
sbbb
xor
iret
jle
or
xchg
or
jb
inc
dec
imul
adc
push
lret
out
loopne
sbb
shlb
and
outsb
or
or
ret
dec
popf
out
repz
ss
push
jge
jl
sbb
xor
xchg
push
cwtl
inc
lods
cmp
bound
dec
adc
gs
lock
bound
fisubs
jl
sahf
clc
in
jl
shrb
jg
push
mov
das
js
dec
sbb
imul
push
fistps
jbe
cmpsl
aas
pop
sbb
ljmp
and
pop
leave
shll
in
cld
push
in
enter
aas
sub
mov
ds
or
mov
xchg
mov
mov
jns
or
and
cld
xor
push
adc
scas
lret
ret
bound
fidivs
xchg
popf
cmp
xor
ret
movsb
mov
push
or
dec
inc
jg
cmpsl
ss
call
lret
or
into
dec
xor
into
xlat
or
aad
jge
mov
mov
cmp
sbb
lfs
fstl
inc
mov
pop
sub
out
fdivs
sbb
sbb
jl
mov
jo
jle
test
jb
fwait
mov
lea
les
pusha
repz
idivl
push
filds
push
push
push
sub
ret
popf
dec
pop
int
push
pop
mov
jp
mov
stos
movsb
neg
jns
sub
popa
sub
enter
leave
outsb
pop
faddl
and
outsb
scas
jno
push
sbb
dec
push
repz
inc
or
imul
inc
lds
jmp
fstpt
xchg
nop
xchg
xlat
dec
sahf
xchg
dec
js
pop
fmull
loope
bound
leave
or
pusha
inc
mov
fisubl
rcrl
fs
dec
mull
outsb
rcrb
call
fists
xor
jmp
cmp
sbb
mov
cmc
xchg
or
test
dec
call
cmpsl
push
out
sub
mov
imulb
movsl
cmp
loop
inc
shrl
insl
arpl
gs
push
stos
daa
mov
xor
imul
test
jp
sbb
ss
cmp
pop
and
cmp
push
push
test
cmp
decb
adc
fstpl
xor
cmp
int3
int3
add
repnz
ds
inc
jecxz
aaa
fiadds
fcmovbe
jmp
into
fsubrl
xor
push
mov
ss
adc
ret
xchg
and
mov
das
and
jecxz
insl
je
adc
pusha
dec
lods
sbb
mov
jb
mov
negl
sbb
in
xor
stos
sbb
in
and
adc
divb
jge
push
rcrb
push
mov
push
xchg
out
xchg
imul
cmp
or
sbb
stc
test
repnz
push
mov
ret
fwait
xor
shrb
or
cld
mov
xchg
frstor
pop
xchg
pop
mov
or
call
xor
outsb
cmp
and
inc
fcom
repz
arpl
enter
mov
dec
jne
push
xchg
aas
jno
sbb
fldcw
mov
daa
pop
add
in
lcall
int
jg
xchg
leave
add
in
push
sysexit
cmp
jo
inc
out
sbb
cltd
int3
sub
cs
mov
inc
aam
sub
dec
shll
cmp
mov
dec
je
mov
paddd
sbbl
jbe
imul
aas
pop
in
dec
pop
movsb
or
and
je
cmp
xor
jnp
mov
movsl
mov
mov
test
xor
sti
repz
hlt
or
icebp
mov
sti
xor
and
xchg
lcall
push
xlat
pop
mov
sub
repnz
cmp
sbb
lret
hlt
pop
dec
sbb
enter
adc
fstps
jmp
dec
mov
sbb
mov
mov
out
push
adc
mov
pushl
ret
data16
fwait
pop
jg
cwtl
into
jns
lock
push
mov
mov
sti
fwait
les
or
lea
fimuls
xchg
mov
dec
jb
inc
test
cwtl
cmp
pop
xchg
jo
inc
dec
add
loopne
call
jmp
xor
rorb
lods
xlat
pusha
pusha
sub
int
fdivs
and
push
inc
sahf
jge
nop
jge
inc
in
push
dec
enter
xchg
mov
and
dec
jmp
scas
test
add
push
xchg
les
andl
test
cs
sahf
in
xorl
mov
sbb
js
jg
test
fyl2xp1
xor
sahf
shlb
int
push
push
cmp
sarb
xchg
out
outsl
repz
ret
ficoml
mov
lret
clc
imul
fcomp
adc
insb
adc
xchg
ret
popa
cmp
dec
push
jge
rorb
scas
jo
cmc
sub
xchg
sub
dec
shlb
xchg
not
xchg
cmpsl
sub
popa
and
sub
or
cmp
sbb
in
mov
fcoml
or
outsl
dec
lock
inc
sbb
jle
bound
xchg
add
std
in
stc
pusha
sbbl
sub
inc
je
mov
xlat
sbb
fs
inc
out
jge
adc
xchg
cwtl
daa
repnz
dec
rolb
loopne
mov
das
xchg
lods
inc
mov
lret
mov
ss
into
mov
test
mov
push
push
addr16
ss
mov
mov
push
cmp
sarb
hlt
rcl
push
inc
lcall
fdivl
mov
mov
clc
mov
aas
rcrb
xchg
dec
outsl
shll
cld
adc
mov
movsl
test
push
frstor
inc
dec
jecxz
sub
cmpsb
lret
push
xor
ljmp
je
push
adc
out
in
sub
and
xchg
repnz
adc
mov
mov
mov
jbe
mov
lods
mov
or
pop
inc
xchg
push
mov
pop
nop
lods
pop
test
rclb
fwait
and
sbb
ret
scas
mov
mov
dec
xchg
xor
repnz
in
sahf
aaa
xor
jmp
mov
xor
push
adc
cltd
in
mov
mov
iret
push
push
in
xchg
xlat
inc
arpl
popa
stos
adc
es
fdivrl
sbb
fsub
jge
pop
xor
adc
jmp
inc
stos
sub
xor
out
pop
movsl
sarl
mov
fidivrs
cmp
xlat
cld
jo
lret
add
jo
mov
jmp
sub
gs
stos
mov
int3
pop
sub
mov
mov
sbb
add
loop
movsb
ja
mov
pop
cmp
mov
push
test
pop
sub
mov
or
cmpsb
xor
scas
sahf
mov
jb
push
cmpsb
push
adc
mov
or
xchg
mov
fsubl
pop
push
xchg
jecxz
mov
pop
xor
xor
mov
cmp
pop
cs
mov
bound
sub
arpl
sbb
jl
ret
cld
outsb
imul
lea
stos
dec
xor
cmp
hlt
cwtl
dec
jb
sbb
fsubrp
ret
rolb
ljmp
sub
mov
sub
sub
pop
mov
pushf
adcb
loope
ret
xlat
xchg
or
xchg
stc
es
sub
mov
add
adcb
popf
aaa
xchg
cmp
scas
sub
movsb
add
or
dec
sbb
jle
xchg
lods
les
test
iret
sbbb
icebp
inc
add
cmpsl
stc
jp
dec
push
cld
sbbb
jecxz
loopne
sub
push
mov
roll
aad
mov
add
pop
test
fisttpl
or
jp
mov
cltd
stos
scas
fisubl
xchg
cmp
inc
cmp
adc
ljmp
mov
rcrl
in
scas
mov
outsb
js
xor
sbb
jb
push
das
sbb
and
lcall
push
inc
lds
mov
lock
adc
mov
sarb
rcl
lcall
js
mov
mov
inc
mov
add
pop
push
fs
xlat
jle
clc
cmp
push
mov
mov
pop
lcall
aad
out
cld
fdivr
or
push
sbb
mov
dec
in
ja
or
andl
cmp
push
and
sbb
jnp
xchg
pop
fbstp
sbbb
lea
sbb
insb
rol
xchg
ljmp
das
xchg
sbb
and
dec
mov
sbb
pop
clc
and
int3
jmp
push
add
js
mov
fmull
loope
lret
mov
std
dec
mov
inc
ss
inc
pop
and
ret
cmpsl
clc
shrl
xlat
rclb
push
mov
pusha
ljmp
loop
sub
divl
out
pushf
scas
push
cmp
ljmp
pop
mov
pop
fnsave
into
mov
inc
xchg
or
popf
jbe
cmp
fisttpl
mov
pop
inc
rclb
les
mov
mov
pop
hlt
daa
fimull
sti
dec
scas
push
mov
jb
sbb
out
fsts
daa
push
inc
sbb
jl
pop
test
mov
push
pop
aad
outsb
xchg
mov
inc
lods
bound
mov
popf
push
mov
rcrl
int
out
loopne
and
in
subb
insl
sbb
dec
js
jg
sti
rolb
inc
xchg
ss
or
inc
je
ljmp
clc
pop
test
mov
movsb
fstpt
sbb
out
ficoml
cmc
and
les
pop
add
or
jp
jno
inc
icebp
ret
sbb
push
inc
push
sahf
xchg
sbb
mov
sub
mov
loop
sub
js
das
pop
mov
scas
cs
jne
add
mov
inc
mov
sub
xor
fidivl
dec
les
dec
loope
movsl
fsubl
inc
mov
xchg
cli
mov
ljmp
add
int3
jp
scas
or
add
cmp
mov
add
and
push
movsb
sub
inc
ja
dec
mov
push
cmp
xchg
test
flds
pop
dec
les
push
cmp
push
cmp
sub
cs
shrb
dec
cmpsb
xor
mov
in
call
fdivs
fidivrs
adc
dec
push
cs
and
add
push
test
scas
adc
and
cmp
cs
jnp
or
fisubrs
push
stc
sub
sub
lahf
or
divl
ljmp
ret
inc
push
outsl
cmp
fnsave
test
cmp
pop
adc
lret
inc
push
sbb
pop
cmp
enter
xchg
lock
pushf
shlb
mov
xlat
push
insl
imul
in
fs
inc
cmp
or
cmpsb
into
or
jae
stos
bound
dec
in
inc
stc
ja
sbb
out
push
test
and
xor
in
pop
mov
dec
fmuls
mov
out
fildl
jge
pop
mov
ret
andl
sub
mov
dec
jae
adc
aad
cmp
jmp
sub
out
fwait
add
mov
fnstsw
hlt
imul
daa
fstpl
inc
inc
add
out
xor
in
sbb
lret
inc
gs
mov
inc
mov
mov
mov
cli
jae
movsb
xchg
dec
inc
xor
divb
jb
mov
repnz
mov
test
fst
lock
jmp
dec
pushf
pop
and
cmp
mov
cmp
mov
or
fcompl
repnz
dec
push
mov
les
stos
pop
or
push
arpl
xor
jmp
inc
push
sub
lret
sub
iret
mov
mov
out
cmp
ss
add
jmp
pop
std
or
fldcw
call
pop
and
xor
in
pop
mov
xor
in
sarl
push
lahf
mov
mov
mov
lcall
into
fsubrs
xor
push
popa
dec
dec
enter
nop
inc
push
test
xchg
push
fs
cmpsl
movsl
mov
add
adc
es
mov
enter
mov
cmp
xchg
mov
add
mov
xchg
clc
call
push
xor
in
fucom
xchg
imul
orl
pop
adcb
push
lea
mov
xor
ffreep
dec
stc
push
dec
pushf
or
push
sub
pop
insb
stos
je
or
mov
das
dec
jmp
out
lret
dec
lcall
lret
dec
mov
pop
js
xlat
ja
xchg
cltd
cmp
loope
mov
push
and
test
jo
aaa
sahf
or
inc
mov
adc
cmovo
stc
or
fdivs
test
dec
push
xchg
test
push
pusha
sub
into
add
ja
aas
cmp
out
cmp
mov
repnz
push
add
inc
or
clc
adc
aam
bound
xchg
add
cmpsl
xor
stos
push
fsubr
adc
jp
sbb
xlat
sbb
punpcklwd
hlt
lret
inc
lcall
shll
jl
lods
shlb
loope
test
sbb
mov
insl
adc
jp
sbb
or
xlat
mov
mov
dec
or
pop
out
add
mov
sub
scas
je
es
iret
scas
pop
test
ret
or
jnp
stos
pop
mov
cmpsl
scas
jns
lahf
mov
inc
xchg
xchg
mov
jb
addr16
and
pop
out
sbb
stos
sahf
add
daa
sub
xchg
sub
push
or
movsb
pop
pop
jl
mov
jmp
jmp
mov
sub
popf
mov
nop
mov
sbbl
nop
mov
sbb
cltd
stos
loop
fs
lret
cmp
or
fstps
cs
push
pop
jl
or
push
or
into
pop
mov
add
add
xor
xchg
stc
aas
xchg
ds
add
ja
or
arpl
adc
jbe
sub
add
pop
lods
cmp
cmc
ret
dec
mov
dec
and
ret
sbb
add
adc
or
cwtl
jecxz
rcll
cmp
aaa
setnp
jbe
push
adc
je
sub
enter
xor
xor
movsl
sub
cmp
sbb
fwait
mov
test
cmpb
inc
mov
sub
out
cmp
test
repz
lds
aas
inc
es
xchg
outsb
adcl
mov
sub
sub
ret
pop
adc
add
pop
inc
push
mov
sbb
test
sub
pop
repnz
cli
ja
ret
or
xlat
mov
and
icebp
icebp
jno
gs
mov
fildl
scas
pop
in
sub
jg
pop
nop
xor
jge
mov
mov
push
dec
imul
mov
loopne
jle
pop
sbb
lods
lret
mov
cmp
and
xchg
clc
fmull
jp
sbb
pop
lods
jb
pop
fwait
sbb
cs
add
mov
adc
or
lret
cmpb
jnp
mov
sbb
sbbl
out
cmp
mov
xlat
sub
sbb
add
mov
es
mov
push
test
clc
sbb
push
out
cmp
fld
pop
leave
fdivs
aad
sub
inc
xchg
xchg
in
pop
add
push
stos
pop
es
mov
push
or
cmp
nop
add
call
adc
popa
in
mov
sbb
sub
sbb
jno
mov
xor
sub
cld
lods
dec
add
jae
sub
push
scas
adc
xor
cli
jle
insb
lret
mov
jnp
fcmovnbe
jo
movntps
xorl
mov
jne
or
mov
aad
push
into
adc
mov
mov
cwtl
addr16
and
sub
inc
inc
push
lea
loope
stc
roll
jbe
hlt
nop
jne
lock
test
mov
adc
adc
scas
mov
mov
or
xchg
adc
pushf
jne
cmp
cmpsb
jmp
pop
imul
lds
shll
pushf
add
push
call
ret
fstpl
stos
or
and
xchg
add
repnz
lcall
jns
cwtl
cmp
dec
es
push
jbe
xor
add
popa
push
jb
shl
sub
rcrb
lcall
adc
loopne
mov
dec
inc
pop
jns
add
imul
push
dec
push
adc
in
or
aas
push
xchg
xchg
call
push
fnstcw
pop
xor
call
push
xlat
insb
scas
fists
sbb
push
lods
fcoml
loope
mov
or
int
xchg
popf
icebp
test
shrl
mov
aad
jb
xlat
test
jne
call
lret
arpl
cmc
sqrtps
lock
daa
jae
sub
jae
mov
jae
leave
stc
aam
popf
push
cmpsl
push
insl
lahf
push
jbe
imul
adc
aad
test
repz
les
cmpsb
imul
add
out
push
in
cmc
call
not
mov
pop
aas
out
mov
cmpsb
cwtl
imul
add
mov
add
pop
cld
test
adc
fidivrl
sarb
jmp
dec
pop
adc
popf
insl
das
mov
mov
mov
enter
inc
sbb
ret
xor
cltd
data16
loop
inc
pop
movsl
inc
imul
stos
sub
and
xor
ljmp
dec
inc
inc
cmp
adc
xchg
divb
xchg
jecxz
mov
fwait
inc
repz
lret
push
lcall
pop
pop
mov
adc
mov
pop
cmp
ret
cmc
jnp
mov
fisubl
mov
mov
dec
mov
mov
mov
movl
iret
pop
les
sbb
bound
mov
fildll
xchg
repnz
add
fs
sbb
int
clc
mulb
adc
fsub
sbb
jne
es
xchg
fmuls
mov
cmpsl
sbb
ror
jecxz
add
icebp
jne
in
cs
pusha
sub
xor
cmp
insl
mov
inc
lcall
sti
mov
std
xchg
insl
pop
mov
fsts
mov
add
nop
data16
stos
add
adc
sub
mov
push
ja
.byte
.byte
and
cmp
sub
mov
pop
jl
imul
inc
inc
loop
mov
xchg
stos
jns
inc
shll
jecxz
hlt
nop
jbe
shr
or
mov
scas
inc
mov
leave
roll
sub
test
cld
inc
mov
cmc
and
mov
pusha
out
push
in
jns
gs
not
imul
cmpsb
jnp
sti
test
mov
mov
push
xchg
ljmp
adc
adc
stc
pop
shrl
cmp
mov
in
test
int3
fcmovb
mulb
mov
mov
sub
imul
xchg
xor
sub
sbb
int
in
sbb
and
dec
xchg
mov
add
push
mov
pop
jmp
adc
sbb
lcall
push
cmpsl
fs
lcall
insb
das
push
out
and
lret
dec
stos
dec
inc
mov
clc
add
sub
xchg
cmpsb
mov
fstpl
lea
pop
xor
icebp
adc
mov
mov
subl
xchg
mov
pop
jns
add
outsb
jo
fs
pop
xchg
mov
lahf
pop
nop
push
ss
lahf
lcall
adcl
mov
test
mov
and
nop
lret
test
push
push
loop
test
orl
and
repnz
das
push
out
loopne
mov
cltd
sbb
xor
jl
test
flds
hlt
mov
ds
in
push
js
push
add
inc
jp
push
lcall
push
in
loope
sbb
inc
pop
add
in
call
dec
arpl
mov
daa
lods
ja
pop
inc
push
xchg
ljmp
out
imul
adc
je
test
jno
inc
jge
je
push
repz
hlt
ja
out
movsl
icebp
jno
add
pop
sbb
fidivl
pop
roll
mov
dec
sub
or
sub
popa
int
xor
ret
or
jae
movsb
inc
icebp
xor
movsb
adc
pop
aas
xchg
mov
cmc
inc
sbb
sarl
mov
mov
repnz
dec
es
in
add
stos
mov
or
fwait
inc
mov
inc
adc
adc
movsl
in
aaa
jge
lods
dec
mov
mov
add
and
ss
jl
outsb
add
imul
inc
filds
jecxz
mov
rclb
idivb
fwait
xchg
jnp
inc
or
jae
cltd
add
outsb
sub
add
add
in
xlat
sbb
inc
adc
jae
ret
xchg
mov
push
or
leavew
in
jecxz
pop
cmpsl
pop
lcall
ja
aad
inc
ja
jo
cmp
push
out
es
std
insb
das
inc
sub
loop
je
test
mov
call
sbb
inc
dec
pop
inc
xor
pop
xchg
pop
movsl
xor
addr16
nop
pop
mov
and
mov
adcl
aas
icebp
std
int3
cld
test
xchg
stos
js
sub
lods
adc
dec
scas
cmc
dec
cmp
lds
in
adc
add
xchg
lcall
cmc
cmp
clc
push
call
mov
popf
fildl
faddp
pushf
cmp
mov
and
cmpsb
add
into
out
jp
mov
xlat
lea
cmp
in
in
add
mov
xor
lods
and
add
dec
out
mov
mov
cwtl
xchg
mov
aam
enter
pop
fildl
sub
scas
add
sbb
aas
popa
outsl
adc
mov
stos
cwtl
jecxz
sarl
add
nop
cwtl
sbb
cmc
and
fidivrs
adc
pop
lea
xchg
push
fwait
ret
and
xchg
loopne
stc
inc
sbb
inc
rcll
mov
repz
jo
inc
sbb
mov
mov
dec
jp
mov
cmpsl
aas
stos
adc
xchg
ret
inc
jno
outsb
dec
lea
inc
xorb
sahf
or
repnz
jge
sbb
push
ljmp
fmuls
dec
adc
xchg
data16
add
jg
jne
int
add
or
mov
adc
jmp
cmc
orb
es
lcall
or
push
sti
push
cmp
push
addr16
inc
push
mov
fsub
nop
jo
mov
scas
jno
or
sbb
push
add
mov
jnp
rcrb
mov
fistl
test
pop
in
jo
mov
fldenv
inc
adc
mov
inc
in
rorb
cwtl
lods
mov
pop
inc
add
pushf
repz
jmp
dec
and
sbb
cmpsb
es
push
fcom
arpl
jns
jbe
push
subl
test
push
ja
add
xchg
add
sub
idiv
cmpsl
push
lret
push
pushf
or
sbb
inc
jae
sbb
dec
lea
loop
cmpsl
sub
leave
xor
idivb
mov
adc
arpl
gs
jmp
int
cmp
sti
jbe
das
into
dec
push
and
adc
jmp
das
push
out
ja
inc
push
xchg
adc
sub
mov
dec
inc
movsl
ror
dec
dec
scas
mov
jne
push
xor
cmp
pop
push
fiadds
mov
jg
test
orb
cmp
xlat
leave
mov
and
cmp
ss
shlb
in
adc
push
lds
mov
stos
rolb
push
jnp
addr16
jnp
das
data16
sbb
mov
shll
push
scas
out
clc
mov
push
cmp
mov
inc
mov
mov
iret
dec
imulb
inc
fldt
sub
sahf
hlt
lods
pop
dec
hlt
xchg
push
push
loopne
test
dec
cmp
push
mov
sbb
outsb
sbb
into
pop
or
adc
xor
jno
and
in
cwtl
sbb
mov
sti
push
daa
bound
out
mov
cmp
push
mov
sub
adcb
add
push
pop
insb
xor
mov
dec
movsl
or
cmp
mov
cmp
or
nop
and
sub
inc
jbe
pop
jmp
cmpsb
negb
push
imul
and
push
adc
imul
sub
loopne
xchg
and
hlt
movsl
cmpb
mov
insl
jns
cli
cmpsb
add
push
cltd
sahf
fs
inc
bound
sub
out
ljmp
sub
bound
and
xor
stos
lods
movsl
stos
out
movsl
or
mov
es
mov
mov
cmp
push
sbb
mov
jge
insl
shrl
ja
cs
inc
jne
push
jl
inc
mov
mov
in
xchg
leave
and
rcrl
mov
pop
jl
xchg
sub
in
dec
lahf
in
sti
jp
lret
out
jle
and
arpl
xchg
xchg
fwait
add
dec
std
jl
enter
lret
test
or
add
xlat
add
push
mov
js
in
xor
daa
mov
fadds
ficoml
adcb
or
fisubl
mov
push
popf
arpl
pop
xchg
adc
scas
cmp
xchg
or
dec
and
sub
mov
movl
adcl
jle
jbe
mov
push
mov
stos
sub
into
mov
adc
dec
pop
scas
ljmp
jns
scas
stc
inc
jnp
loopne
into
movsb
es
mov
pop
inc
mov
adc
ret
mov
jnp
hlt
sbb
sub
or
shrb
enter
jnp
sar
popa
jo
test
shll
mov
test
sar
popa
sub
dec
sbb
inc
mov
adc
negb
or
call
sbb
pop
andnps
push
outsl
idivl
pop
cmp
movsl
movsb
test
enterw
ja
mov
pop
jl
push
outsl
sbb
iret
cwtl
testl
or
rclb
dec
adc
imull
xor
xor
cmp
pop
or
loopne
jmp
lret
shl
or
inc
sbb
mov
mov
pop
insb
hlt
sub
int3
out
test
xor
mov
and
in
sub
and
outsl
nop
or
in
dec
xchg
sub
xlat
stos
sub
into
pop
sub
sbb
out
mov
xor
adc
mov
aaa
cmp
jmp
lret
mov
mov
mov
pushf
pop
addb
mov
int
mov
mov
sahf
xchg
call
aad
xchg
sbb
mov
xchg
push
lret
shrb
mov
mov
bnd
mov
arpl
movsb
push
dec
and
lcall
inc
xor
pushf
das
sub
push
jns
mov
mov
lods
cmp
dec
mov
adc
cs
decb
or
ss
orb
mov
mov
nop
jnp
sub
xor
pop
inc
cltd
xchg
mov
xorb
shll
xchg
test
lea
lahf
sub
and
hlt
js
in
push
cmpsb
mov
js
or
dec
mov
push
mov
sbb
test
mov
add
inc
outsb
daa
push
lds
addl
add
out
inc
rorb
xchg
push
ret
inc
adc
fs
movsb
xorl
out
sbb
xchg
rcrb
mov
ss
mov
rcrl
int
jbe
cwtl
push
enter
das
and
xor
std
cs
push
aam
or
sbb
outsb
push
cmpsl
int3
pusha
lds
cmp
sub
shr
xor
mov
and
adc
push
aam
rcl
pop
pop
lcall
mov
iret
sub
outsb
into
sti
shlb
sbb
add
dec
sbb
test
cmp
xchg
pusha
ret
xor
cltd
pop
or
mov
jns
lods
inc
jp
jle
js
imul
xchg
movl
frstor
jmp
jae
fcompl
push
add
and
ljmp
sub
mov
int3
popf
sbb
in
dec
fwait
mov
mov
pop
xchg
jnp
adc
cmp
sub
xchg
imul
jbe
int
jbe
ja
in
mul
in
lcall
cmp
rol
std
xlat
ss
xor
push
lds
inc
or
xlat
xchg
push
jl
loopne
mov
sti
inc
jmp
and
cmp
aad
add
aas
loop
sbbl
add
in
inc
xchg
add
les
mov
jge
lret
add
sbb
cmpsb
cs
cmc
jnp
fimull
mov
lods
pop
mov
out
outsl
xchg
xor
stos
inc
arpl
hlt
jbe
mov
fs
inc
sbb
ljmp
and
sub
jge
jp
add
mov
inc
stc
dec
fisttps
mov
js
out
or
addr16
test
mov
pop
push
lock
sar
add
mov
inc
push
loopne
dec
push
aam
add
movb
xchg
data16
ret
stc
lea
push
push
mov
mov
mov
push
mov
enter
sub
arpl
xor
adc
inc
xchg
aas
in
sarl
xchg
inc
or
hlt
dec
repnz
rorl
mov
imull
jecxz
mov
call
adc
outsb
aad
js
cltd
adc
scas
outsb
push
das
sbb
aaa
frstor
lea
lret
or
lock
sbb
lahf
add
insb
fs
int
mov
mov
rolb
mov
ret
insb
xchg
insb
data16
jg
scas
push
packssdw
sbb
arpl
lahf
fiaddl
mov
ljmp
rol
sbb
pushf
fadd
bound
push
js
jne
shl
je
or
scas
cmp
inc
add
orb
je
ljmp
lea
jp,pn
cmp
test
push
sbb
and
nop
ljmp
mov
ret
push
aam
mov
inc
inc
popa
out
loop
dec
push
jmp
dec
inc
jnp
inc
jmp
pusha
int
dec
mov
jle
mov
enter
jnp
movsb
jae
inc
ljmp
ja
inc
cmc
enter
lret
ljmp
push
pop
in
lret
inc
sti
sti
mov
out
xchg
lret
fists
jne
leave
pop
sbb
cmpsl
into
dec
mov
push
outsl
ret
xor
and
aaa
and
nop
xchg
push
cmpsl
cmp
addr16
jns
rorb
mov
leave
adc
push
clc
pop
sbb
test
lcall
aaa
fwait
movsl
sub
pop
or
inc
sahf
mov
into
adc
pop
jnp
pop
dec
adc
dec
lds
xchg
call
push
sub
jp
loop
ja
add
ja
daa
jnp
jg
shl
dec
incl
sbb
scas
stos
push
repnz
leave
idiv
mov
or
daa
push
pushf
gs
and
aaa
and
adcb
jae
aas
dec
push
in
iret
subb
stos
roll
jle
push
pushf
ja
scas
js
fadds
xchg
fdivrl
pop
xchg
insl
pop
repnz
push
add
xchg
cmp
test
sub
push
gs
cmp
std
rol
inc
popf
dec
scas
fucomip
mov
rorl
je
test
dec
or
push
mov
jbe
leave
sarb
popf
push
daa
xor
test
in
adc
inc
imul
inc
cmpsl
imulb
or
jecxz
imul
xchg
std
inc
push
lea
fs
movsl
in
or
pop
and
ja
inc
xor
icebp
xor
test
lcall
mov
push
cmp
daa
js
sub
xchg
inc
sub
dec
das
or
dec
clc
adcb
sar
ljmp
jge
push
es
arpl
xlat
jl
popf
ss
push
mov
cwtl
popf
cmp
add
pusha
sbb
inc
es
imul
test
xchg
clc
imul
lcall
enter
test
mov
jbe
rorb
rcrb
addb
cmp
push
out
xor
ret
adc
xor
sub
and
sub
push
cwtl
cmp
filds
and
sub
cmc
sbb
aam
and
lock
div
jl
mov
cltd
push
movsl
and
cmp
loopne
push
sahf
testl
sti
xchg
pop
iret
shll
mov
add
mov
cmp
lods
sub
orl
adc
cmp
clc
addr16
xor
pop
sub
ja
push
cmpsl
icebp
mov
outsl
pop
lret
jnp
in
das
lock
push
aaa
loop
data16
dec
pop
and
pop
fld
cmp
xchg
inc
movl
into
lock
adc
xchg
rcrb
addr16
add
pusha
adc
fcomps
fucom
jl
xor
mov
roll
xchg
sbb
in
adc
lock
push
jbe
sub
inc
adc
idivl
pop
pop
ds
add
mov
arpl
push
out
rcrb
or
sub
pop
xchg
push
sub
pop
add
aas
dec
ss
mov
aas
adc
pushf
push
mov
and
xor
push
lcall
jmp
cwtl
fisttpll
jmp
mov
aad
int3
or
mov
mov
je
cmp
jmp
fldl
push
xchg
imul
jo
push
and
push
adc
pop
adc
pop
jl
adc
dec
jno
mov
out
cmp
pop
pop
addr16
into
jmp
out
lds
jns
fimuls
push
arpl
insl
push
test
gs
ss
out
cmpsb
scas
fidivl
and
cmp
popf
pop
cwtl
push
dec
adc
test
and
divl
sti
add
out
imul
sti
jp
outsb
outsb
in
ror
sbb
subb
mov
idivl
fndisi(8087
push
xor
fldcw
add
dec
jl
jge
push
cmp
xlat
cmc
pushf
cmpsb
push
sbb
xor
xchg
jae
or
mov
push
mov
cmpsb
jge
lea
aaa
cwtl
stos
addr16
add
xor
enter
push
ss
cmpsb
scas
lea
jne
cmp
sbb
movsl
sbb
push
popa
mov
lock
or
mov
repz
stos
push
mov
lds
shll
cs
addl
bound
mov
lret
fidivs
insb
mov
fisubs
in
fstl
stos
jl
pop
mov
jecxz
pop
insb
test
jnp
push
sub
sbb
add
sahf
lds
test
mov
aas
or
xor
movsb
mov
stc
pushf
cli
inc
xchg
out
xchg
jno
mov
push
mov
or
mov
and
jl
adc
lahf
push
insl
sub
jno
add
sbb
push
test
pusha
dec
sbb
fs
push
push
lret
add
sarb
rclb
and
sub
pop
cmp
aaa
movsb
leave
daa
sub
idivl
push
lods
mov
out
ja
push
js
xchg
test
add
std
mov
pop
rorb
push
xchg
pop
and
loop
push
mov
mov
jmp
sub
jbe
ret
fstl
out
dec
push
inc
insl
ror
push
mov
mov
mov
push
mov
js
xchg
push
mov
or
inc
bound
mov
outsl
adc
mov
push
pop
hlt
or
adcl
pushf
dec
and
leave
and
fidivs
orb
cwtl
loop
jmp
cmp
push
test
dec
push
les
adc
sbb
and
jnp
js
mov
adc
test
push
hlt
in
fistps
fistpll
rcrl
pop
insl
inc
aad
ljmp
xchg
in
xor
inc
push
jle
dec
shll
pop
sbb
mov
sub
pop
and
cmp
push
stos
add
mov
inc
push
push
xchg
jns
stc
std
fsqrt
jne
movsb
out
adc
cld
stc
data16
loope
pop
xor
cmp
sbb
inc
pop
mov
adc
jnp
or
push
mov
pusha
ss
test
cmp
cmovg
inc
sbb
insb
xchg
sub
xlat
fxch
in
dec
jbe
jle
pop
out
loope
xorb
fildl
cmpsb
call
mov
push
cmpsb
in
sbb
mov
and
movsl
dec
jo
xor
push
push
or
dec
inc
mov
adc
pop
cmpsb
dec
cs
mov
pop
cmc
jns
xchg
jno
xchg
popa
jl
add
pop
test
push
.byte
or
and
addb
and
loop
fcomps
jo
jl
jbe
icebp
inc
shl
jno
xchg
loopne
or
cli
push
xlat
xchg
inc
xchg
add
lock
xchg
inc
xchg
inc
dec
fnstsw
xor
in
xorl
xchg
stos
mov
cmp
mov
push
push
dec
jbe
popf
mov
adc
cli
insb
pop
outsb
push
out
pop
mov
pop
les
and
leave
bnd
mov
int
in
ljmp
in
pop
pop
inc
jns
xor
sub
or
xor
or
repnz
mov
xor
dec
int
shll
scas
stos
push
shr
add
pop
pop
pop
jns
leave
and
pop
push
bnd
shll
and
inc
adc
icebp
mov
sub
jb
add
mov
push
repnz
adc
cmp
adc
add
shrb
shlb
pop
aam
fs
fwait
mov
push
pop
and
daa
sbb
rcll
dec
and
rcl
sub
xchg
jge
ss
and
icebp
imul
dec
add
and
dec
outsb
imul
addr16
int3
incb
sbb
sbb
mov
mov
stos
pop
push
or
ja
add
push
sub
outsl
xor
mov
lcall
jmp
add
and
adc
shll
fs
ja
lds
je
add
cmp
inc
dec
push
test
sub
cmp
imul
lods
call
andl
mov
lret
jecxz
daa
mov
mov
int3
ja
inc
ljmp
or
cmp
pop
cmp
je
cmp
sbb
mov
sbb
movsb
push
mov
xchg
sub
aaa
popf
hlt
mov
adc
jmp
or
shl
pop
pop
and
mov
andl
shrb
sbbb
icebp
push
cmp
fistpll
wbinvd
fnstsw
mov
ret
jecxz
mov
sbb
xor
sahf
sub
add
stos
hlt
sbb
mov
ja
fisubrs
and
lahf
icebp
rcrl
jle
inc
add
xor
or
xor
es
les
les
xor
daa
jnp
sbb
inc
lcall
jb
fnstcw
cmp
lods
sub
movsb
call
jl
mov
sti
or
inc
mov
pop
movsb
sub
scas
xchg
cld
push
xchg
jmp
pusha
shrb
out
sub
inc
out
push
mov
sbb
daa
cmpsl
test
incb
ror
inc
clc
test
inc
adc
xlat
fisttps
mov
mov
insl
cmp
fldcw
and
sbb
mov
stos
sub
jo
mov
or
mov
ja
add
loope
fstps
jp
fcomps
push
cld
std
daa
add
imul
cmp
je
or
push
sti
pushf
push
xchg
out
out
xor
xor
mov
and
test
xchg
push
pop
test
push
out
jae
iret
mov
dec
cltd
rcrb
ss
cmp
adc
pop
add
xchg
dec
inc
push
pop
lret
cmp
xchg
dec
mov
inc
jo
xchg
fisubl
stc
test
push
sbb
lea
lea
sub
lods
sbbl
pop
mov
clc
push
mov
adc
sub
fidivs
sbb
lock
sub
icebp
sub
lods
inc
xchg
add
inc
jle
inc
call
pop
pop
fmull
popf
jle
mov
fadds
add
ret
or
shrb
andl
add
jne
xchg
jae
lods
add
push
rcr
arpl
out
lods
out
and
aad
pop
mov
insl
mov
sbb
imul
sbb
std
imulb
int3
out
sub
jp
loop
or
movsb
inc
movsl
int3
pop
cmpsb
xor
jae
add
sti
jns
adc
or
in
movsl
std
adc
adc
or
outsl
dec
inc
dec
loopne
out
adc
popa
pop
hlt
nop
in
cmp
outsb
sbb
test
cmp
xor
sahf
movsb
mov
xchg
dec
leave
inc
sbb
xlat
and
fcmovbe
mov
sbb
subb
push
test
arpl
and
aas
adc
push
cmp
push
mov
or
mov
fisubrl
jno
adc
add
fs
mov
pop
sub
arpl
clc
push
inc
das
mov
movsb
sbb
mov
cmp
mov
daa
xor
repz
adc
outsl
mov
jbe
aas
mov
jmp
pop
dec
sub
and
or
sbb
cmp
xor
mov
clc
mov
adc
xor
aaa
mov
xchg
xchg
int3
dec
pop
mov
rcr
jl
clc
in
lods
mov
sbbl
sub
mov
stc
add
push
add
movsl
out
mov
mov
insl
cmc
push
xor
ret
add
sub
scas
lock
jl
inc
dec
add
jb
inc
cli
jo
in
xlat
xor
sbb
arpl
or
dec
popaw
xor
inc
gs
jp
pushf
adc
push
push
inc
dec
jp,pn
push
add
xchg
pop
dec
push
test
out
sbb
ss
push
imul
inc
mov
shr
dec
js
je
jl
xchg
adc
cmpsb
mov
jmp
pop
sti
lcall
jle
mov
mov
fcmovnu
mov
enter
ret
push
or
gs
dec
lcall
xor
inc
add
loope
fwait
inc
mov
push
sbb
inc
into
xlat
sub
popf
dec
inc
mov
sbb
enter
xchg
daa
fstpt
dec
aam
leave
sub
test
add
fstl
ss
clc
jb
aad
cmc
shl
adc
and
addl
ret
pop
repz
pop
jl
aad
fisubs
sbb
mov
nop
xor
sub
lret
dec
push
gs
mov
imul
adc
cmp
cmp
xor
lds
pop
mov
inc
lret
adc
stos
loop
out
sub
mov
pop
inc
hlt
or
fisttpl
fcompl
out
in
pusha
xorb
aas
mov
and
and
pop
xlat
sub
jp
stos
adc
jb
add
outsb
mov
in
nop
mov
icebp
jle
aas
xor
ja
jne
stc
mov
lds
pusha
or
addb
jmp
out
aaa
fdivp
pop
ret
inc
dec
add
xor
insb
cmp
popf
sbb
jns
mov
jns
fdivrs
inc
and
dec
jle
jge
add
push
in
mov
dec
pop
fs
lret
or
inc
cld
adc
out
dec
xchg
add
push
lods
push
sbb
mov
mov
jnp
fwait
enter
ret
push
push
fstl
lret
ret
sbb
inc
push
stos
xchg
mov
loopne
rcll
imul
data16
mov
ds
mov
loop
mov
xchg
dec
pop
xor
cli
adc
fldt
test
cmp
out
ljmp
jno
push
inc
add
int3
mov
mov
jno
xchg
outsb
cltd
mov
mov
jae
cmp
inc
iret
push
in
ror
fcmovnbe
push
pop
sarl
enter
mov
pop
in
inc
adc
xchg
or
or
sub
sbb
divb
inc
mov
in
cmp
pop
mov
mov
sub
adc
pop
je
mov
adc
ficomps
lcall
sti
cmp
rcrl
pop
add
js
test
sub
aaa
mov
pop
test
jnp
repnz
arpl
sub
fisubs
dec
and
int3
loopne
test
cmp
hlt
add
mov
jmp
call
xchg
dec
rcrl
xor
mov
repnz
cs
cmp
lods
inc
or
fnsave
cmpsb
in
pop
inc
scas
mov
fs
mov
or
xchg
mov
cmp
ds
pop
xchg
out
ds
xchg
popa
movsb
notb
or
ljmp
jecxz
sbb
push
jno
mov
or
ret
cmp
loopne
test
cltd
movl
sub
stos
aam
push
add
sub
pop
repnz
dec
mov
subb
and
pop
sbb
add
pusha
cwtl
jp
mov
pop
loope
dec
and
frstor
mov
mov
push
lret
adc
jecxz
addr16
jno
pop
pop
fwait
jmp
lea
adc
mov
cmp
jge
ja
mov
sub
aad
repz
inc
leave
or
cwtl
scas
mov
xor
popa
mov
dec
and
mov
mov
lds
repnz
adcb
push
pop
aaa
in
negb
repnz
mov
jns
test
fnstenv
inc
popf
divl
sub
popf
or
jle
loopne
call
inc
dec
jp
xor
notl
mov
das
or
rorl
fbstp
cltd
clc
push
sbb
add
inc
bound
inc
pop
inc
adc
notl
jmp
inc
sbb
sub
icebp
je
push
mov
xor
inc
pop
pop
push
mov
xor
or
lret
ret
push
jae
cmp
dec
lahf
rcll
pop
mov
iret
lods
mov
les
scas
add
xlat
ret
sbb
pop
loopne
jno
sub
xlat
xlat
jns
pushf
js
je
sbb
jnp
ds
stos
lahf
inc
jo
dec
and
sbb
mov
imul
push
int3
rorb
xchg
cld
xor
in
add
fists
stos
mov
in
lock
sbb
lret
or
clc
jb,pn
jno
mov
ret
outsl
push
inc
je
cmp
dec
movsl
inc
gs
shll
xchg
repz
cmpsb
sub
push
test
aaa
movsb
adc
addr16
repz
push
lret
test
mov
lahf
mov
stos
mov
sbb
jbe
dec
outsl
cltd
jge
xlat
inc
mov
fidivrs
fiadds
ret
out
jb
mov
add
and
adc
add
popf
xor
clc
popf
cwtl
mov
mov
insl
daa
pop
cmc
jge
.byte
cmpb
bound
.byte
.byte
push
inc
xor
xor
and
mov
sbb
sub
xor
mov
cmp
lret
adcl
fwait
mov
lods
jl
push
lds
cs
cs
out
push
dec
shll
xchg
imul
sbb
sbb
outsl
rcrl
xchg
xchg
fdivl
push
test
fxam
lahf
icebp
lret
adc
or
mov
shlb
popa
cmovp
ret
cmc
mov
sbb
popa
ljmp
or
sub
xlat
jb
test
in
test
jmp
xchg
mov
icebp
xor
jg
mov
fistpl
mov
sbb
inc
cs
cltd
insl
dec
ret
mov
sub
das
cmp
dec
inc
sahf
push
imul
pop
pop
xchg
cmp
inc
inc
aam
mov
adc
add
mov
pop
je
in
pop
psubd
stos
addl
insl
dec
mov
mov
scas
imul
or
xor
lcall
sbb
pop
jno
inc
xchg
test
dec
aaa
push
lea
or
dec
dec
icebp
xlat
imul
pop
jns
push
jb
cld
mov
out
xchg
add
mov
int
and
xorl
aas
cld
test
bound
cmc
into
inc
xor
movsl
sahf
jno
outsl
cmp
xchg
aam
cltd
jne
mov
test
imul
out
xchg
dec
lcall
jnp
and
ficomps
cmp
adcb
out
sub
ja
pusha
adc
lods
pop
push
push
dec
stc
pushw
sbb
movsl
mov
pop
jo
push
addr16
pusha
nop
lret
cmp
add
add
mov
push
push
and
lods
icebp
jb,pn
adc
stc
inc
mov
adc
ficoml
mov
stos
mov
jns
xchg
dec
lahf
or
and
add
jg
add
add
pop
aam
out
ljmp
das
push
popf
xchg
jle
mov
fcmovu
lds
popf
imul
mov
sti
xchg
add
cmp
pop
or
and
bound
adc
in
push
mov
xchg
in
adc
adc
jp
lods
call
fmuls
dec
enter
inc
push
std
lods
mov
imul
jo
call
int3
enter
mov
sahf
sbb
call
mov
mov
nop
mov
adc
adc
jmp
rclb
cmp
insb
lea
jmp
mov
jne
fucomi
out
cmpsl
cli
xor
shll
lahf
test
mov
mov
test
fsubp
adc
push
daa
sub
cli
cmc
dec
out
lock
inc
imul
out
cli
scas
pop
mov
dec
outsb
ss
movsb
pop
fcoml
test
out
mov
push
outsb
gs
lea
cmpsb
xchg
lcall
daa
or
cld
jae
outsl
cli
pusha
std
popa
dec
fs
pushf
xor
pop
adc
cltd
iret
pop
pminub
icebp
and
or
push
sarb
dec
test
pop
xchg
hlt
xchg
mov
orl
insl
inc
cmp
movsl
dec
add
sub
cmp
cmc
jg
pop
ret
add
add
mov
es
push
insb
imul
or
notb
pop
sahf
mov
inc
ret
sub
mov
or
or
push
mov
divb
cmpl
dec
rcl
push
lahf
and
in
dec
call
push
sahf
in
mov
xor
aad
adc
dec
orl
mov
mov
call
inc
add
push
enter
lods
cmp
iret
popf
jbe
js
jo
jae
gs
cmpsb
loope
insl
jge
dec
sbb
xchg
jmp
sbb
rclb
adc
jnp
xchg
adc
jg
mov
fldl
xchg
fidivrs
insb
mov
jno
cmp
insl
adc
jl
mulb
cmp
dec
xchg
fcomps
xchg
xchg
loop
mov
ds
fsubrp
outsl
jnp
jnp
out
notl
and
andb
popa
in
mov
adc
push
mov
cld
scas
mov
pop
ljmp
sub
pop
enter
inc
and
mov
xorl
lcall
jge
enter
xchg
cmc
jae
shlb
mov
inc
out
pop
cmp
fmuls
test
adc
cmp
or
pop
adc
jp
push
fsub
leave
aam
lahf
mov
xchg
addr16
adc
ljmp
dec
loope
push
js
and
mov
lds
and
mov
push
pushf
dec
mov
jbe
sbb
jle
cmp
lret
pop
and
hlt
pusha
insl
mul
sbb
into
sub
jbe
push
stos
nop
adc
add
inc
aas
out
xor
mov
imul
cmp
loope
je
ret
scas
in
call
mov
testb
and
sbb
push
pop
mov
cltd
popf
add
jo
lret
cwtl
lahf
andl
lcall
jnp
out
and
vrsqrtss
mov
je
enter
xchg
cmp
mov
scas
insb
inc
or
or
jae
jmp
mov
push
insl
dec
inc
xchg
add
sbb
jnp
aas
clc
enter
jo
cmp
ret
mov
daa
outsb
pusha
push
jp
sub
loop
ss
sub
or
cs
cmp
out
aaa
arpl
dec
iret
lret
jmp
cmpsl
stc
ret
int3
or
push
ja
cmp
fwait
into
adc
dec
dec
xchg
mov
inc
mov
pop
xchg
addb
add
sbb
mov
mov
hlt
inc
inc
push
xlat
lahf
push
lds
sub
insl
cld
sbb
jmp
shrb
mov
or
dec
dec
daa
dec
rcl
fldt
lock
xor
mov
testw
popa
or
call
arpl
dec
jle
xchg
and
cltd
imul
pop
push
jbe
jmp
xor
adc
mov
outsb
push
cwtl
js
push
popf
pop
jle
mov
enter
dec
adc
sarb
xchg
test
pop
mov
inc
mov
aaa
xor
out
xor
push
sbb
add
jp
ljmp
jb
js
mov
repnz
repz
xchg
and
and
jb
jp
insl
cs
out
xor
push
stos
cmp
and
insb
cld
push
push
push
mov
shrl
adc
jecxz
daa
jae
push
mov
pusha
fs
addl
pop
rolb
push
int
popa
inc
test
add
inc
sbb
dec
pop
mov
mov
lods
pop
cmpsl
dec
inc
push
ret
scas
cli
lcall
loop
gs
daa
and
xchg
sbb
outsl
jnp
pusha
jmp
mov
cmp
push
push
cld
loope
xchg
in
pop
push
subl
push
aam
in
int
and
iret
push
mov
lods
loope
fildll
loope
sbb
mov
jb
and
hlt
rorb
mov
dec
pop
adc
fldcw
pop
xor
outsl
sub
xor
stos
push
xchg
lcall
mov
shrb
adc
cmp
in
out
push
pop
pop
mov
out
ss
aad
xchg
ss
aas
sub
mov
addr16
xchg
sub
pop
ljmp
mov
int3
jmp
xor
xlat
xor
add
in
rcrb
incb
sbb
pushf
mov
dec
mov
fs
shrb
or
mov
enter
cmp
jno
cmc
mov
jne
and
mov
add
nop
ret
cmpsl
pushf
mov
ljmp
imul
insl
mov
mov
sti
or
xchg
push
test
xchg
ret
push
xchg
insl
setge
insb
jae
lea
sbb
cmp
popf
andb
cmpsb
lods
aas
inc
xor
fldt
fcoms
gs
jo
xchg
stc
mov
xor
jg
push
jo
orb
adc
in
and
add
dec
pop
jecxz
jns
pop
pop
ljmp
jne
or
bextr
or
out
lock
or
pop
mov
jnp
dec
icebp
and
call
sarb
mov
loope
vpcmpeqb
flds
inc
sub
bound
int3
leave
leave
test
mov
sub
mov
popf
mov
or
fsubrs
ret
push
pushl
dec
mov
xchg
push
sti
mov
sbb
leave
imul
xor
out
xchg
mov
sbb
dec
fs
rorb
ljmp
testb
sub
push
fnsave
xlat
in
add
jge
xchg
lcall
test
jae
enter
lea
xchg
je
sub
mov
lea
xlat
add
inc
mov
shlb
sub
xchg
xchg
sub
fdivl
scas
loopne
push
mov
cmp
sbb
daa
adc
inc
ja
addl
jl
mov
test
int3
dec
cmpb
imul
xor
in
adc
mov
and
imul
jl
test
inc
cltd
loopne
sti
pop
std
dec
hlt
sarb
mov
sarl
js
add
iret
cmp
enter
mov
sbb
push
xchg
mov
roll
push
iret
loope
adc
inc
out
aaa
pop
and
xchg
insb
inc
outsl
jae
imul
aad
cmp
imulb
mov
ds
mov
gs
das
push
flds
push
xor
lods
and
inc
fwait
jmp
inc
cmpsl
test
pop
imul
orl
push
andl
in
cli
push
push
sub
jge
outsl
and
xchg
clc
lret
sbb
roll
lcall
cmp
or
xchg
popa
jne
sar
js
icebp
pop
js
inc
sbb
mov
sbb
rcrl
sub
lea
adc
adc
jmp
mov
scas
and
lds
repnz
dec
fadd
gs
repz
adc
roll
xchg
and
or
ss
adcb
add
daa
mov
sub
cld
cmp
inc
or
enter
jne
sbb
ret
push
cmp
nop
and
adc
inc
rcll
xchg
sbb
and
aaa
jg
aam
jle
dec
pop
sbb
inc
test
imull
sub
mov
mov
pop
cmp
repz
fdivrp
insb
ja
sub
xchg
jo
pusha
les
arpl
lds
in
and
dec
cmpsl
popa
jae
mov
mov
adc
repz
ljmp
fsub
cltd
and
add
dec
add
nop
xor
pop
negl
xchg
stos
insb
pop
jne
ja
xor
xchg
repnz
pop
pop
push
jp
cmpsb
mov
icebp
pop
add
xor
mov
xchg
jae
aam
xchg
test
shr
cmp
jne
mov
sbb
test
aad
push
adc
jmp
xor
inc
jmp
mov
xor
add
into
or
testb
leave
cmpsl
sub
pop
es
xchg
mov
and
movsb
sbb
adc
cli
shrb
loopne
fwait
add
nop
out
add
and
pop
hlt
addr16
xchg
dec
pop
daa
adc
and
inc
lods
mov
pop
inc
mov
scas
in
or
lcall
lds
and
adc
fucom
mov
dec
xlat
jge
pop
daa
aad
push
dec
pushf
stos
jno
jns
int3
mov
mov
clc
mov
xchg
jo
jmp
dec
add
push
lahf
sub
ja
psrad
mov
pop
int
pop
test
and
bndldx
inc
daa
out
add
andb
mov
ret
inc
jge
stos
je
dec
jnp
cs
shll
dec
sahf
cmp
subl
aad
xchg
push
aaa
dec
rcrb
adc
pop
xchg
lea
std
fucomip
repz
cmc
pushf
cmpsb
mov
into
das
push
mov
loop
dec
fwait
negl
mov
in
lea
jle
sarl
pop
lret
adc
xor
enter
cmp
popa
mov
mov
test
jg
bound
mov
jg
add
scas
lret
sahf
mov
ljmp
mov
add
push
xor
out
enter
mov
cld
inc
mov
ret
mov
mov
push
jg
jmp
push
shll
iret
xor
das
jle
pusha
aas
fimuls
sbb
filds
lret
mov
insb
push
sbb
clc
xlat
jp
sub
call
sub
test
jecxz
mulb
int
in
jo
mov
fcomps
xor
pop
data16
inc
push
and
decl
js
jne
jl
int
pushf
cmpsl
pop
orl
or
ret
call
shlb
mov
sbb
push
js
inc
ret
push
fs
outsb
and
cmpsb
daa
in
iret
pop
cmpsl
jbe
bound
popa
ret
add
lea
push
cmpsl
pusha
pushf
js
add
pusha
rcrl
or
mov
cmpsb
xchg
out
in
cmp
movsb
xchg
cmp
adc
lds
mov
mov
and
xchg
hlt
xchg
lret
out
cmpb
jp
mov
loop
and
roll
ja
jle
sub
xchg
push
clc
push
rcrl
out
js
mov
ret
or
pop
adc
ss
inc
add
fldenv
dec
add
outsb
sub
xlat
pop
mov
out
push
out
push
es
xor
jp,pn
mov
adc
dec
jno
xchg
outsb
xchg
pop
leave
mov
inc
aaa
mov
jnp
loope
stos
push
jmp
enter
mov
mov
mov
lds
jg
mov
and
inc
pop
popf
aas
mov
shll
or
mov
adc
or
inc
jbe
fadds
push
sbb
lock
mov
jp
adc
movsl
movsl
mov
jo
cmc
stos
ds
jb
out
add
sbb
jnp
push
sub
inc
lds
arpl
or
cmc
mov
inc
cs
jb
jo
mov
cmpsb
cmp
cwtl
jb
aam
lock
adc
cmp
jmp
icebp
imul
xchg
mov
cmp
inc
inc
cmpsl
push
test
mov
add
scas
cmp
push
fwait
push
insb
xchg
xor
cmpb
popl
ret
mov
and
outsb
aas
mov
in
or
out
inc
mov
jge
dec
mov
popa
adc
push
icebp
ficompl
test
addb
ss
cmp
js
jmp
push
jmp
and
sarb
test
pop
push
pusha
mov
insb
into
jno
push
add
repz
je
or
dec
imul
xchg
xchg
nop
sbb
in
ss
sti
mov
pop
pop
pushl
adc
pop
pop
mov
orb
add
cmc
int
pop
mov
mov
ds
mov
or
mov
nop
loopne
pop
loopne
fbld
cmc
xchg
pushf
jae
mov
out
aad
hlt
ja
test
dec
out
push
lret
mov
add
push
repz
sub
scas
mov
out
ds
dec
lret
inc
or
scas
jnp
imul
push
pushw
mov
mov
out
iret
adc
or
mov
xlat
mov
arpl
adc
stos
lcall
cld
pop
ror
mov
mov
adcb
dec
test
and
ror
sbb
mov
mov
jo
xor
aad
jb
flds
mov
into
popa
sub
cmp
lea
mov
ds
fdiv
popf
sub
mov
stc
xor
std
dec
add
mov
cltd
and
sub
xor
inc
frstor
lock
mov
call
aam
push
and
mov
xchg
and
std
es
mov
inc
and
inc
inc
andb
or
pop
lock
imul
push
cmp
idivb
js
into
add
xor
cmp
cwtl
test
dec
add
dec
jbe
pusha
push
push
dec
inc
ror
push
push
jae
xchg
and
mov
pop
int3
das
mov
add
sbb
sub
jne
xchg
dec
cmpsb
out
por
dec
scas
aad
ljmp
sub
dec
jne
cs
xchg
jne
sbb
shrl
push
jbe
test
pop
and
pop
add
out
lcall
mov
push
out
sbb
inc
cli
ret
lock
mov
fprem
decl
push
dec
out
mov
stos
out
ss
mov
icebp
pop
jns
in
pop
push
test
js
xchg
sub
xchg
int3
cmp
fnstcw
test
dec
dec
push
aad
out
jae
loop
inc
lock
lods
lret
aas
mov
insb
std
mov
mov
adc
pop
sub
pop
add
pop
repnz
ljmp
push
sti
sbb
mov
dec
cmp
stos
lret
add
daa
push
leave
jae
dec
mov
lds
shll
insb
mov
loop
mov
sbb
or
sbb
bound
xor
lret
scas
push
jae
jo
mov
mov
sub
out
roll
add
sbb
lcall
in
push
rcll
mov
cmp
mov
sahf
pop
out
fcmovu
mov
stos
sub
imul
repnz
jnp
loope
lock
or
mov
push
and
scas
jo
lret
jle
rdtsc
jg
push
scas
bound
cmp
jmp
mov
and
or
and
insb
sub
sti
es
imul
mov
fisttpll
arpl
mov
scas
imulb
push
mov
lds
arpl
adc
jp
push
push
mov
jnp
pushf
push
xchg
lds
mov
push
inc
mov
pmaxub
or
fcoms
stos
lods
imul
mov
push
mov
lds
or
sub
stos
or
aas
xor
mov
push
pop
setb
mov
add
rclb
xor
imul
sbb
dec
rol
mov
aas
jb
scas
popf
popa
sbbl
push
push
xor
push
jmp
adc
xchg
sub
out
call
test
mov
adc
sbbb
shrl
lds
inc
and
and
scas
pop
add
push
mov
daa
jle
fucom
ret
mov
rolb
mov
inc
or
arpl
and
nop
mov
aas
jbe
fwait
aas
mov
mov
jmp
inc
data16
sbbb
popa
jge
cld
dec
mov
xchg
iret
fcompl
xchg
sbb
cwtl
jno
and
mov
jmp
cld
dec
cmpsl
cmpsb
loope
mov
mov
arpl
jno
ror
mov
pusha
pop
cmpsb
cwtl
sti
es
fwait
stos
push
scas
or
inc
add
xchg
sub
popa
ss
jo
stc
in
or
jmp
rcl
dec
mov
rolb
sti
std
or
or
sub
cmp
mul
fiadds
adc
rcl
popa
cld
or
sbb
cltd
adc
dec
mov
sub
jl
xor
lods
or
insb
dec
dec
adc
inc
out
shll
fiaddl
and
pop
or
mov
fimuls
add
sub
mov
scas
stos
push
insl
aaa
xor
std
add
arpl
inc
bound
cli
inc
mov
shrl
sbb
fistl
jns
jae
lret
adc
and
int3
stos
mov
pop
js
and
fadd
call
push
popf
xor
js
pushf
push
and
push
and
hlt
cmc
scas
cmp
in
pop
push
in
cwtl
lahf
fiaddl
pop
ficoms
sub
outsl
fldl
push
sbb
mov
add
mov
jb
xchg
jg
push
fimull
add
ficoms
cli
jnp
ffree
push
add
sbb
sub
lock
fstpl
or
fistl
in
push
mov
mov
into
aaa
iret
aaa
mov
sbb
test
in
dec
push
out
pop
stc
fstl
int3
scas
or
pop
pop
lret
cmp
daa
cmp
fsub
andl
mov
lods
xchg
cmp
add
loopne
add
jmp
movl
pushf
stos
xchg
xor
xchg
jne
add
gs
imul
movsl
xchg
dec
pop
divl
jae
inc
mov
inc
or
stc
lock
adc
sbb
add
aas
inc
cld
or
mov
push
xor
decl
jle
sbb
push
cld
gs
cmp
imull
xor
or
in
xlat
shlb
ljmp
add
fldcw
or
lods
inc
scas
in
daa
inc
dec
jae
mov
xchg
xchg
or
add
mov
lods
cmpl
lods
or
jns
pop
pushf
mov
sbb
mov
and
jnp
push
int3
add
insl
mov
inc
int
mov
inc
fldenv
push
jmp
sbb
icebp
push
mov
mov
sbb
fcomi
jle
sti
mov
hlt
pop
lock
pop
dec
js
stos
test
add
testb
xchg
loopne
ljmp
mov
pause
jp
inc
andb
addr16
adc
mov
icebp
adc
push
fdivr
inc
movsb
inc
cmpl
sbb
bound
mov
jne
push
fimull
cmp
js
pop
incb
inc
popf
mov
and
fldl2t
sub
test
iret
rclb
outsb
dec
cmp
int
push
shrl
push
int
mov
dec
cmp
iret
fcmovbe
and
pop
fiadds
inc
arpl
adc
aas
cmp
rol
out
jne
xor
aad
pushf
rol
imul
test
aad
push
and
test
aad
push
rep
orl
dec
cmpsl
xor
data16
mov
dec
dec
cwtl
ror
mov
popa
sbb
movsb
test
out
fs
mov
push
ret
out
push
adc
xchg
aam
push
cs
dec
fwait
jge
lods
clc
mov
xor
mov
xorl
dec
or
nop
cmp
dec
adc
pop
and
cld
mov
push
xchg
scas
inc
xorl
pop
jge
xchg
mov
lret
test
jecxz
xor
or
ret
jae
mov
repz
cmp
jb
push
and
ret
pop
or
enter
or
mov
inc
aad
aas
mov
xchg
test
mov
sbb
popa
lods
in
jae
cld
mov
mov
xchg
push
pop
pushf
daa
push
aas
push
xlat
popa
push
test
xchg
test
lahf
lea
pop
cmp
int
mov
les
in
lea
add
and
mov
inc
sub
inc
sbb
push
scas
jns
lods
jns
jns
stos
lcall
adc
adc
jecxz
add
cmovb
and
add
cli
int
xor
push
sub
stos
mov
out
xor
aas
adc
or
hlt
aaa
jg
xor
push
jo
pop
jge
mov
jg
jl
or
pop
pop
in
data16
std
xchg
or
es
push
pop
sub
cwtl
push
std
imul
or
xchg
leave
inc
les
pop
inc
inc
mov
clc
push
push
je
cld
les
in
xchg
test
cmpl
faddl
push
dec
add
sbb
sub
aas
cmp
dec
ror
push
adc
es
lock
pusha
pop
or
sbb
mov
jo
cmpsl
lcall
lods
pop
or
jge
push
cmc
pop
subb
inc
and
aas
push
dec
imul
xor
ret
cmp
leave
xchg
jmp
add
inc
add
lcall
cmp
test
adc
out
rcl
fistl
data16
iret
mov
inc
out
lods
or
jmp
push
shll
push
cmp
test
mov
jno
mov
push
cld
sub
push
addb
sbb
cmpsl
loope
enter
fbstp
imul
popf
xor
in
adcb
cmpsl
mov
jne
mov
lahf
movsl
bound
aam
aaa
adc
push
scas
jmp
dec
sbb
cli
mov
inc
mov
mov
adc
jae
hlt
jnp
mov
les
in
or
adc
xlat
push
inc
jne
add
mov
loopne
jmp
xlat
mov
sbb
push
data16
pop
dec
mov
sbb
fisubl
cmpsb
mov
sub
test
and
fs
lcall
mov
pop
test
push
xor
jecxz
divl
sahf
jbe
push
test
sarl
mov
out
fidivrs
push
cwtl
lret
subl
or
repnz
xlat
dec
movl
stos
int3
ficomps
pop
test
dec
push
or
xor
sub
ror
popf
call
jecxz
mov
dec
add
adc
dec
pop
jno
jbe
pushf
je
js
mov
mov
addr16
jb
in
push
mov
orl
mov
js
and
sarb
xor
inc
fs
dec
imul
stos
frstor
aas
cmp
adc
push
fst
cmp
movb
add
inc
imul
mov
clc
sbb
cmpsb
mov
sbb
pop
ret
push
in
mov
popf
xchg
insb
imul
jbe
lods
cld
imul
xchg
xor
dec
test
insl
mov
sub
scas
int3
sub
pushf
pop
mov
add
cmpsb
jb
and
or
cmp
lcall
dec
out
mov
lcall
call
lret
inc
imul
das
test
data16
pop
jns
xchg
test
adc
mov
movsb
cmp
popa
repnz
adc
and
push
inc
js
ljmp
xor
xor
pop
jns
adc
xor
jnp
jle
hlt
dec
and
scas
xlat
jo
ds
mov
jg
fucomi
pop
insb
mov
xor
ret
pop
imulb
in
scas
gs
xor
mov
movsb
or
imul
test
shr
rorb
dec
mov
rorl
dec
cmpsb
icebp
xchg
cmpsb
daa
cmp
inc
stos
repnz
lock
ja
addb
and
clc
or
sbb
and
jp
adc
pusha
cli
pop
in
adc
cmp
lret
mov
mov
inc
cmpb
jl
xchg
popa
ret
and
loope
sbb
popl
repz
fucomp
cmpsb
inc
fldcw
mov
cwtl
xchg
cs
sar
mov
lcall
push
shlb
push
sarb
xor
xor
lahf
subps
loopne
movsb
pusha
out
lret
sbb
push
add
push
into
repnz
out
sub
cmpsl
mov
test
repz
jnp
mov
stos
in
pop
dec
mov
xchg
mov
jl
fdivrs
shlb
jmp
mov
push
sbb
daa
or
fisubrs
and
arpl
pop
shlb
sbb
push
fwait
xor
cmpsb
pop
scas
aaa
jge
and
fisubrl
xchg
pop
test
jecxz
push
mov
stos
outsl
jb
or
dec
cltd
xchg
sub
cmp
popa
mov
lahf
jle
mov
add
test
adc
lods
data16
lods
mov
out
loopne
sub
lea
lds
inc
scas
or
movsb
xor
repz
test
adc
cmp
dec
popa
dec
dec
inc
xchg
ljmp
gs
push
scas
mov
cmp
push
ficoms
add
jnp
push
aam
mov
clc
xor
test
cs
loopne
push
or
push
add
or
imul
xlat
repz
aas
pop
push
test
clc
ss
sbb
lds
jbe
fwait
jb
stos
mov
icebp
add
mov
mov
ffreep
cmp
in
repz
push
ret
fs
sub
hlt
sub
add
xor
das
aam
push
pop
into
cmp
mov
lods
pop
out
xchg
nop
out
shll
lock
mov
sbb
pop
outsl
mov
mov
pop
cmp
add
or
pushf
sahf
sub
ret
sbb
movsb
mov
std
cli
jmp
add
dec
test
dec
push
jp
mov
pop
lahf
pop
ret
repz
in
mov
mov
aam
clc
xchg
insb
mov
test
fucomi
icebp
loope
aam
xorb
bound
insb
dec
aad
xchg
jecxz
inc
scas
ljmp
jl
pop
inc
jle
outsb
aas
imul
mov
adcb
push
push
mov
or
outsl
inc
js
fadds
or
pusha
inc
jl
adc
adc
jle
xchg
mov
add
into
add
jle
push
mov
insb
dec
out
jo
scas
fwait
daa
lahf
aas
or
sbbb
push
dec
lret
mov
aaa
test
mul
xchg
dec
out
divl
fdivrl
out
fcmovbe
inc
mov
xchg
cmp
jnp
test
add
shll
xor
sbb
in
jg
cld
add
adc
jle
jb
test
pop
and
push
cmp
and
jno
mov
movsb
xor
arpl
mov
mov
mov
adc
sbb
aaa
iret
std
pop
jno
cmpsl
jo
push
sbb
jns
sub
insb
idiv
imulb
mov
cmpsl
dec
cmp
cs
and
cmp
je
cmc
mov
mov
subb
adc
xor
paddw
push
ret
std
ss
push
nop
subl
xlat
mov
stos
test
push
sub
aaa
call
and
xor
rolb
std
lea
sub
and
push
sub
mov
sahf
jae
xchg
mov
je
mov
cli
jbe
insl
mov
or
fcmovnu
imul
fisubrs
andl
popf
xchg
sub
and
stc
pop
mov
out
aas
push
add
mov
mov
in
sbb
bound
loope
movsl
add
push
fs
test
nop
testl
lcall
jmp
jle
adc
js
js
pop
push
xor
out
scas
es
cltd
cld
jge
movsb
add
gs
aaa
push
call
or
les
cmpsl
popf
mov
pop
daa
sbb
aam
ror
cmp
inc
mov
bound
and
shrl
andb
jge
mov
add
jecxz
cmp
aas
repnz
mov
popl
adc
test
out
xorl
mov
imul
and
cmp
sub
sub
arpl
jnp
jle
arpl
inc
mov
imul
shrb
decl
and
add
pushf
pushf
push
xor
out
and
push
popa
mov
or
fdivrs
add
test
leave
or
repnz
es
lret
cmp
jge
sub
xor
xor
mov
jl
inc
jb
fwait
clc
sub
out
iret
push
sub
mov
gs
stos
das
mov
cmc
mov
xchg
test
arpl
xor
pop
inc
idivb
aam
mov
xorb
push
jno
xchg
and
cmpsb
fisttpl
add
sti
lcall
out
cmp
jge
xor
mov
xor
sbb
pushf
roll
add
ljmp
es
xchg
push
jmp
dec
xchg
add
mov
adc
popf
cmp
sti
mov
aas
fwait
push
cmpsb
mov
pop
cmp
mov
sub
pushl
cld
dec
daa
fidivs
in
add
out
loopne
sub
and
rol
popa
js
dec
idivb
mov
nop
pop
pop
dec
addr16
ss
decb
ds
in
xchg
xchg
pop
fwait
pop
dec
or
and
iret
out
lcall
push
or
xchg
lcall
or
clc
inc
dec
scas
mov
xchg
jne
xchg
or
push
pop
push
pop
je
rorl
in
inc
jo
and
jmp
out
cli
enter
popf
in
push
movsb
jnp
dec
or
popf
xchg
aam
mov
xor
insl
aas
push
add
nop
add
mov
mov
loope
pusha
cmpsl
cmpsb
push
xchg
inc
ss
pop
fsubs
push
outsl
aaa
xor
push
in
xor
jp
scas
shrl
mov
xchg
sbb
or
mov
lods
sub
xor
cld
leave
int3
or
imul
or
jl
shlb
dec
js
orl
push
adc
mov
outsb
test
in
aas
pop
sub
sbb
dec
push
int
shlb
cmpsl
or
dec
pop
mov
fldcw
lret
cld
sbb
jg
fnstenv
push
sar
arpl
fdivrs
stos
xchg
cmpsl
test
pop
enter
stos
stos
jp
loop
push
popa
into
pop
or
xchg
dec
push
cmc
cli
lcall
sbb
and
fbstp
pusha
es
daa
push
or
ds
int
lcall
idiv
mov
mov
push
insw
filds
cmp
pop
cltd
out
push
test
sbb
adc
sahf
lgs
push
or
or
lods
mov
dec
xor
sub
call
mov
jle
mov
cmp
push
xchg
mov
fwait
mov
xchg
xchg
aam
aaa
pop
inc
imul
lret
shll
adc
fisubrl
inc
pop
cltd
fidivs
add
insb
and
sbb
mov
fnsave
sub
mov
fimuls
sahf
es
mov
xchg
lret
clc
movsl
insb
outsl
icebp
jg
lcall
bound
add
out
sbb
cmpb
sub
imul
cmc
dec
cmp
xchg
inc
dec
dec
dec
cmp
sub
mov
bound
fistl
int3
sbb
cmp
std
push
test
dec
fsubrl
mov
inc
push
inc
jno
jno
push
sahf
push
inc
mov
in
std
push
adcb
sti
mov
inc
movsl
data16
mov
inc
or
inc
iret
ror
imul
push
push
out
jmp
jns
mov
sub
ret
je
jno
sbb
xlat
xorb
mov
pop
in
fimull
loop
testb
and
push
int
sbb
in
test
mov
dec
iret
push
cld
lock
std
out
or
sbb
xor
out
mov
test
jmp
pop
lods
or
push
clc
sbb
push
imul
hlt
stos
cmp
fldcw
mov
aam
or
jl
aam
pop
jl
pop
pop
movl
rcll
mov
ret
pop
icebp
fisubrs
mov
jmp
ja
push
ret
fadds
jmp
leave
mov
cld
pop
adc
xchg
mov
es
xchg
push
rcrl
mov
popf
sbb
mov
lahf
stos
pop
dec
and
inc
arpl
ss
cmp
inc
inc
pop
sub
add
or
stc
push
aaa
dec
cmp
inc
inc
cltd
testl
sub
nop
out
fldcw
leave
pop
aaa
enter
ror
dec
in
scas
sub
dec
lock
lods
in
lea
pop
and
fdivrs
out
movsl
sub
sbb
fs
push
repnz
mov
lret
mov
popa
push
lcall
xorl
jp
fists
xor
dec
loopne
ret
xor
lock
sti
add
icebp
stc
cmp
fcompl
add
out
pop
and
and
sub
adc
xchg
or
sbb
xor
xchg
adc
outsl
rcll
xor
sub
out
pop
cmp
shrl
cmc
sub
js,pt
fstpl
or
cmpsl
pusha
pop
sub
push
push
add
pop
inc
cmp
xor
pusha
mov
and
ret
sub
iret
or
dec
in
lods
push
loope
inc
cmpsb
jb
stos
xchg
sbb
lds
adc
bound
jecxz
inc
into
xor
mov
stc
out
faddl
and
lods
jne
fdivrs
or
jecxz
lods
out
or
out
insb
jle
pop
popl
dec
or
sbb
popa
and
jmp
fisttpll
out
cs
adc
xchg
imul
push
lret
stos
cmpsl
mov
sbb
xchg
shlb
xchg
gs
test
popa
test
stos
enter
outsl
icebp
dec
stos
cmpsl
lea
pop
jbe
int
and
mov
push
movsl
iret
fisubs
push
out
fisubs
daa
xchg
adc
xchg
pushf
adc
test
loope,pt
test
dec
jecxz
add
xorl
push
adc
hlt
push
xor
cmp
and
xchg
xchg
cmp
mov
xor
mov
sbb
ret
mov
push
outsl
faddl
rcll
je
hlt
aam
jl
mov
out
test
xor
xchg
and
test
out
cmp
dec
imul
adc
addr16
cwtl
xchg
mov
in
sbb
cmp
dec
adc
pop
jnp
sarl
in
fsubs
mov
sbb
jae
xor
out
or
pushf
inc
mov
add
aas
xchg
pop
in
ret
insb
movsb
js
fwait
test
xor
pop
cmpsb
sbb
cmpsl
cs
sti
dec
repnz
adc
aas
mov
cmpsb
xchg
leave
js
jecxz
js
lret
mov
dec
sti
testl
mov
scas
loopne
jnp
inc
mov
mov
imul
lock
push
sub
pop
sbb
cmc
or
movb
lcall
call
jecxz
mov
mov
sar
ljmp
scas
mov
push
lcall
int
int
sub
sahf
adc
jo
aad
sbb
dec
outsb
sub
xchg
repnz
push
int
lods
xchg
in
mov
push
popf
pop
mov
aam
mov
sar
push
xchg
nop
daa
push
mov
and
fidivs
jnp
push
xor
aaa
push
ret
cmpl
pop
jns
call
clc
nopl
pslld
cmovg
aas
int
loop
or
mov
sbb
je
or
jge
mov
in
mov
subb
and
sbb
add
mov
adc
loop
enter
mov
mov
pop
and
movsb
pushf
xorl
popf
andl
push
ror
push
or
inc
loopne
and
shlb
jb
ret
sub
aas
jbe
mov
add
stos
inc
out
hlt
mov
lcall
mov
into
rcr
add
sub
neg
jg
mov
fdivl
aam
xchg
popf
and
mov
in
mov
or
loope
xor
cmpsl
notl
scas
aaa
cmc
cwtl
push
sbb
or
jns
push
into
int
mov
inc
jp
pushf
inc
and
cmc
insl
rcll
jno
dec
push
jne
xchg
repnz
lock
das
xor
cld
jp
and
mov
gs
pop
movsl
jl
or
or
add
jecxz
in
xor
in
out
lods
iret
xor
xor
divl
outsb
lods
jnp
mov
mov
push
stos
mov
sub
sub
cmp
call
fcomps
xchg
fsubrp
or
fwait
in
push
icebp
or
fwait
adc
lods
stos
out
mov
mov
in
push
sbbb
adc
dec
jmp
pop
mov
leave
push
repnz
xor
fs
js
mov
push
or
call
xor
jne
roll
push
adc
fsubp
inc
mov
jno
das
aam
pop
cmp
out
cmp
push
aam
pop
pushf
cmc
in
int
gs
xchg
rclb
push
push
adc
fcmovb
lea
xorb
add
mov
je
lods
pop
dec
adc
jp
mov
loop
sub
pop
adc
jge
sti
subb
sub
inc
or
mov
or
push
int
sahf
clc
inc
mov
or
fcmove
jecxz
rorb
push
sbb
loope
cli
popa
sbb
cmp
sahf
lcall
dec
jae
xlat
pop
fcompl
push
jecxz
xor
in
xchg
insb
pop
in
les
cmc
xchg
in
adc
lcall
sbb
mov
xor
lods
imul
aas
aaa
movsl
testb
pop
jl
push
stos
insb
pop
pop
lods
je
xchg
inc
sahf
add
push
aam
add
imul
jl
mov
gs
xor
ficomps
mov
sahf
and
push
pusha
aad
mov
je
loop
pop
subl
mov
push
cmp
fsubrl
fildl
mov
jns
sub
jmp
mov
mov
pop
je
or
imulb
inc
js
sbb
leave
mov
dec
pop
aaa
mov
ljmp
in
mov
inc
stos
push
ficoml
push
ss
aad
dec
mov
or
or
idivl
jne
sub
inc
mov
mov
out
sub
pop
out
jns
decl
mov
sahf
and
cwtl
lcall
cli
popf
xchg
je
mov
test
mov
or
xchg
jle
scas
fcomip
cmpsb
pop
cltd
repnz
push
push
iret
test
sbb
cld
sahf
repnz
lods
sbb
stc
fidivrs
fisubl
fsubl
sub
xor
sub
jg
gs
leave
mov
ja
sbb
mov
aam
je
inc
out
push
pop
inc
dec
cs
mov
sub
lock
mov
sub
mov
add
lock
adc
sub
lret
or
jmp
lods
and
cmc
stos
movsb
icebp
lret
aam
and
jo
jne,pn
subb
lds
mov
and
mov
dec
sbbl
ret
pop
jmp
jecxz
mov
push
cld
pusha
decl
cmp
std
pop
adc
cmpsb
mov
mov
clc
push
xor
jge
lahf
movsb
fistpll
sub
mov
cmp
movsb
add
les
mov
repz
sahf
inc
frstor
and
push
call
mov
and
mov
cmp
clc
mov
push
out
ss
jp
or
cmpsb
xor
addr16
in
sahf
lods
push
jl
mov
jbe
cmpps
into
insl
adc
movsb
je
mov
adc
dec
daa
mov
loopne
adc
sbb
insb
ds
mov
jb
dec
dec
xor
xchg
imul
mov
cmpsl
std
jbe
fisubl
in
insb
dec
cli
and
inc
flds
andb
push
andl
dec
xchg
pop
cmc
mov
test
pop
and
jecxz
mov
mov
mov
push
xchg
jnp
mov
mov
cmp
push
xor
jb
imul
fiadds
lea
xchg
rorl
ja
in
lahf
push
sbb
and
add
and
sub
out
cmpsl
fstpl
adc
andl
out
cmpsb
lret
cmp
outsb
test
dec
cmp
fstps
or
sbb
data16
jbe
cwtl
xchg
in
iret
imul
fnsave
out
add
negl
imul
jmp
loopne
push
das
jl
outsl
aas
mov
jns
xor
add
mov
or
out
in
and
dec
push
ss
jecxz
pop
mov
rorb
xchg
inc
cs
mov
and
mov
push
faddl
enter
imull
xor
pop
adc
pop
cmp
jne
inc
sar
ljmp
adc
adc
adc
or
xor
inc
push
repnz
ljmp
inc
in
adc
mov
mov
mov
scas
pop
fs
push
sbb
pushf
into
out
mov
inc
cmp
out
and
mov
rcr
dec
insl
or
xor
sub
jo
xchg
mov
fldcw
and
rol
rcrl
cmpsb
in
jns
adc
in
sbb
push
arpl
lods
dec
fsubrl
mov
pop
pusha
cmc
aas
mov
repnz
js
inc
mov
in
xor
pop
or
fimuls
rorl
loopne
pop
mov
imul
add
inc
lret
mov
or
in
aam
out
addr16
jbe
fdivr
mov
mov
push
xlat
pushf
pop
cmp
xchg
data16
loope
nop
filds
xchg
adc
mov
add
mov
insb
ja
addr16
stos
adc
int3
xor
lds
mov
jg
add
cmp
and
and
inc
fidivrs
addr16
and
fistps
movsb
bound
push
and
dec
ss
xchg
ret
negb
jns
xchg
xchg
pop
inc
pop
dec
xlat
mov
shlb
or
push
das
xchg
mulb
inc
outsl
add
push
in
adc
leave
mov
xchg
ja
jo
mov
arpl
daa
lock
mov
addr16
xor
mov
movb
pop
enter
shll
pop
stos
push
mov
xchg
pop
mov
xor
repz
adc
mov
test
inc
mov
fidivl
add
jae
sub
mov
insl
dec
adc
fmuls
rcr
loopne
push
sub
push
jmp
pushf
jmp
push
or
add
scas
popf
jg
into
xchg
mov
in
fcoml
sub
pop
mov
dec
test
stos
test
mov
mov
xchg
mov
stos
shrb
icebp
imul
int3
mov
in
and
pushf
jp
fwait
ret
insb
repz
lret
aaa
mov
arpl
rol
lea
stos
int
push
dec
in
xlat
fisubl
jno
dec
test
push
push
arpl
sarl
rcl
ficoms
cli
fisubl
xor
ror
jne
jns
mov
pushf
adc
fcom
xor
xchg
xor
lods
cmp
addr16
loopne
dec
sbb
leavew
lret
and
adc
mov
xor
in
xchg
push
add
mov
lea
cmp
sbb
iret
pushf
sbb
lret
shlb
rcr
loopne
data16
dec
mov
stos
or
ljmp
inc
add
orl
hlt
cli
xor
push
add
sub
mov
sub
loop
xor
aam
jno
push
icebp
imul
sbb
xchg
pusha
fsubrs
and
in
sub
jno
sub
movsb
outsl
xlat
mov
cmp
sub
mov
lret
adc
pop
cmp
cld
loope
push
and
popa
cmp
add
inc
or
lret
sbb
jbe
outsl
dec
sub
xchg
rorl
jno
rorl
adc
mull
push
xor
inc
jae
cld
mov
lods
pusha
stos
es
push
jns
mov
pop
stos
or
je
xor
xor
jge
xchg
nop
jno
cmpb
pop
xchg
repz
sub
addr16
fldcw
jbe
xor
push
adc
repnz
xorb
xlat
mov
jecxz
gs
loope
andl
arpl
jo
mov
inc
std
popf
push
mov
pop
sti
dec
fs
push
shrl
mov
add
xchg
lock
insl
xor
adc
or
add
mov
cltd
mov
arpl
fnstenv
push
cmp
out
dec
jo
jno
xor
or
jne
mov
pop
lds
dec
jge
jns
push
sbb
lods
mov
mov
out
mov
hlt
sub
mov
xor
mov
je
fmuls
cmc
inc
out
pop
inc
ret
mov
jb
iret
xchg
xor
mov
sbb
outsl
loopne
jecxz
sub
dec
pusha
xor
xlat
xchg
pop
bound
cmp
or
cmpsl
jge
push
adc
imull
out
or
pop
daa
scas
add
xchg
pop
loope
add
loop
mov
dec
adc
or
lret
xchg
mov
dec
pop
pushf
push
arpl
add
fcomps
sub
mov
pop
mov
ja
addr16
popf
cs
mov
in
iret
sbb
daa
jbe
pushf
mov
mov
imul
jb
add
stos
outsl
add
dec
mov
aad
mov
movsb
pop
sbb
popa
add
dec
mov
push
int3
test
pop
mov
or
pop
and
mov
pop
jle
insb
push
adc
out
incb
cmpsb
cmp
loopne
shr
outsl
pop
sahf
pop
xlat
sbb
xor
pop
mov
scas
popa
movsl
and
or
es
mov
packsswb
and
std
add
aad
sbb
inc
cli
shlb
cmpsb
push
mov
mov
scas
sbb
cld
jns
frstor
dec
fwait
subb
xorl
inc
ss
sbb
addb
into
dec
testb
ss
icebp
push
les
add
loop
fcoms
sub
dec
nop
imulb
sub
xchg
rcrl
inc
ret
push
das
push
adc
mov
divl
sub
xchg
pop
data16
mov
das
aam
adc
lahf
gs
ror
fisubrl
fidivs
sub
divb
push
sbb
jno
psllq
xchg
pop
movsl
jecxz
fimuls
daa
sbb
push
lods
mov
pop
test
test
idivb
pushf
dec
mov
out
arpl
push
xor
push
rclb
ss
inc
into
inc
sbb
jmp
push
into
pop
and
xor
aad
cltd
lahf
pop
aad
dec
pop
bnd
ss
sti
add
inc
lret
xor
mov
out
in
jbe
pop
push
cs
test
lds
mov
leave
push
sub
sub
out
je
mov
movl
xchg
xchg
add
lahf
loopne
rcl
inc
mov
jb
mov
pop
adcl
out
sbb
mov
xor
sub
inc
xchg
cmc
call
cmpl
pop
pop
jno
inc
cmpsb
sub
negb
xor
test
rcr
jnp
bound
in
ficompl
lea
inc
rcrl
fbld
jb
mov
fwait
lock
pusha
jno
sub
add
arpl
adcl
in
sbb
cld
lea
repz
inc
test
lahf
push
ljmp
dec
sub
xor
adc
xor
sub
mov
push
dec
mov
push
je
nop
and
mov
test
xchg
and
daa
fwait
push
pop
mov
xchg
jne
xor
out
arpl
or
daa
sahf
loop
movsb
xchg
xchg
icebp
je
jmp
test
cltd
std
int
sbb
xor
daa
pop
int3
pushf
pop
repz
cmpsl
jge
fwait
cmp
fsubrl
aam
add
fsubl
jns
inc
notl
in
ret
cld
call
mov
lods
inc
mov
insb
xchg
sahf
lds
and
fisubs
imul
mov
stos
push
dec
xchg
in
mov
incb
or
loope
cs
jge
call
insl
hlt
sub
or
flds
std
nop
and
adc
loopne
into
ret
shlb
sbb
in
inc
inc
xor
aaa
xor
ja
lret
clc
jne
mov
push
mov
adc
or
inc
outsl
mov
rorl
or
jo
js,pn
in
hlt
and
or
scas
out
subb
mov
imul
add
sbb
xchg
lcall
pop
js
fwait
sbb
cmp
in
aad
cltd
in
mov
movsl
cwtl
aam
sbb
enter
push
mov
mov
mov
ja
push
mov
leave
sbb
insl
stc
out
xor
ljmp
mov
cmpsb
in
das
out
mov
test
cltd
jle
ret
push
or
xor
sbb
je
pop
dec
cs
cmp
dec
mov
lods
aad
cli
lods
or
std
fadds
jno
shrb
push
gs
stos
inc
pop
cmpsb
int3
fiaddl
mov
sbb
enter
js
sub
fwait
sbb
loop
xor
and
pop
inc
dec
fsts
inc
dec
xchg
xor
lahf
cmp
movb
mov
add
les
adc
mov
ljmp
sbb
cld
sub
and
push
add
pusha
sarb
outsb
push
orb
jp
mov
jecxz
cld
xchg
mov
les
and
xor
mov
jle
xchg
outsl
mov
loope
fwait
mov
je
add
pop
jp
dec
shlb
mov
and
jae
and
adc
sub
aad
popf
jbe
push
mov
jns
in
lea
xchg
jl
mov
push
shrl
cmp
ss
test
add
sbb
das
jns
test
pop
and
push
rcrb
popf
sbb
dec
inc
outsb
cwtl
xchg
faddl
mov
sub
xor
insl
mov
cmpsl
lock
sbb
adc
sbb
sbb
pusha
adcb
mov
xor
cmp
insb
lea
inc
iret
inc
inc
pop
outsb
subl
pop
or
xchg
dec
into
and
mov
icebp
aaa
aaa
out
xor
sub
aad
adc
imul
mov
sahf
rorb
lahf
shrb
fstps
mov
fimull
and
push
cmc
push
sbb
icebp
push
sbb
dec
mov
jle
cld
push
sub
lret
jno
inc
arpl
sahf
or
sbb
and
scas
add
cmpsb
bound
inc
mov
push
push
jmp
dec
xorl
pusha
cmp
push
push
cwtl
fwait
cmp
imul
cmp
mov
imul
push
outsb
add
movsb
fstpl
xor
fsub
mov
sbb
aad
jl
jg
mov
pop
sub
adc
imul
lods
das
push
mov
sub
jl
mov
je
lahf
mov
inc
dec
push
sub
nop
adc
mov
xlat
out
cwtl
inc
xor
fucomi
movsl
mov
fisubrs
adc
iret
inc
add
loopne
stc
jmp
push
adc
xchg
pop
and
inc
fsubs
push
ficompl
jmp
xchg
mov
xchg
js
xchg
call
jp
pop
dec
out
add
push
jns
sbb
mov
in
lcall
inc
lea
adc
mov
cld
inc
rcr
dec
hlt
test
inc
cli
xor
push
fwait
sub
out
and
push
cmp
ja
xchg
jle
ljmp
sub
lahf
stos
repnz
jle
jnp
lods
imul
out
pusha
mov
sub
fbstp
je
push
int
dec
and
test
xchg
jnp
xor
imul
into
jne
dec
aaa
fnstsw
in
into
pop
movsl
sbb
pushf
and
stos
jns
dec
jmp
pop
jne
loop
imul
cmp
push
push
out
xlat
mov
jl
and
in
push
add
xchg
rorl
lods
imul
ljmp
lret
cmc
scas
dec
into
lcall
pop
push
mov
loop
pop
mov
lret
add
mov
push
jb
cwtl
lods
fdivrs
mov
fwait
sbb
and
fildl
lds
scas
and
shlb
xchg
inc
int3
mov
dec
jne
iret
addr16
lods
dec
andl
jp
jne
mov
in
or
xchg
xor
dec
icebp
adc
divb
popf
xchg
mov
mov
push
jns
aas
cmc
xorl
inc
cmp
jne
in
sub
rclb
fnstenv
xor
cmp
dec
test
or
aas
fimull
sub
inc
les
inc
add
aam
ss
repnz
out
aam
sbb
pop
movsl
aam
cmp
push
imul
mov
js
imul
lret
mov
push
push
pusha
or
movsl
dec
push
and
mov
pop
fwait
mov
or
xchg
inc
xlat
iret
sbb
mov
mov
daa
es
je
sbb
push
das
movsb
mov
imulb
lcall
push
pushf
or
daa
std
push
push
lods
lea
mov
and
out
cld
adc
jnp
lret
mov
jecxz
pop
gs
and
dec
cmp
dec
push
pop
iret
enter
inc
pusha
push
jle
and
dec
mov
cmp
in
add
pop
cmpsb
mov
lods
cmp
dec
dec
pop
into
stos
sub
je
flds
stos
and
mov
les
adc
inc
cld
or
imul
cmp
int
add
pop
or
or
sbb
cmp
sbb
mov
jmp
cli
dec
cmpsl
jno
repz
push
cmp
cmp
mov
dec
mov
adc
movsb
xchg
lcall
add
mov
out
xor
xor
pop
cli
or
mov
faddl
adc
idivl
test
pop
xchg
jo
mov
fsubrs
cmc
pop
lods
outsl
sbb
negb
andb
inc
loop
jmp
arpl
movsb
dec
out
xor
dec
mov
fdivp
fisttpll
daa
lods
paddb
mov
xor
jmp
clc
mov
jae
mov
push
xlat
jo
jmp
pusha
sub
inc
test
imul
push
mov
mov
push
repnz
xchg
dec
rolb
loop
xchg
push
push
xchg
rorl
or
sbb
jmp
push
jmp
mov
mov
fwait
fiaddl
outsl
and
jo
mov
pop
add
pop
pop
scas
sub
faddl
fsubs
mov
mov
je
cmp
dec
div
fstpl
dec
lock
mov
jmp
cmp
es
and
fstl
out
and
lods
mov
push
test
rolb
mov
or
sub
inc
lgs
adc
add
dec
addl
pop
in
mov
lret
movsb
sbb
loopne
xchg
pushf
imulb
sub
fstpt
jno
mov
mov
into
fs
andl
aaa
ljmp
fisttpl
in
push
cmpl
jl
mov
adc
das
mov
mov
pop
push
xchg
lret
adc
mov
loopne
out
mov
xchg
xor
dec
out
sub
stc
xor
inc
push
or
mov
inc
xchg
scas
xor
sti
inc
icebp
movsl
addr16
xchg
fildll
int
pop
leave
cmp
inc
lds
pop
push
shr
imul
push
in
add
and
jnp
pusha
mov
movsb
adc
outsl
dec
in
addr16
xchg
daa
push
xor
loope
jae
repnz
lcall
pop
lret
or
fst
lret
stos
nop
and
lds
lcall
mov
mov
mov
iret
cmp
pop
out
lods
lods
shlb
iret
and
dec
cmp
in
mov
dec
aaa
filds
loopne
sub
dec
inc
xchg
and
cmp
lock
mov
push
sub
sub
push
fwait
push
pop
mov
sbb
xor
sti
and
push
cmpsb
lea
or
pushl
out
jbe
adc
stc
push
divl
mov
ds
imul
xchg
stos
dec
loopne
les
mov
in
dec
sbb
push
test
cmpsb
inc
xchg
fs
dec
paddusw
sbb
roll
push
dec
add
test
xchg
shlb
jb
and
and
inc
jg
adcl
inc
hlt
les
movsl
pop
mov
pop
jle
cld
in
sbb
pop
loope
xor
out
test
div
iret
push
or
inc
cmp
xchg
and
aam
mov
lret
ds
loope
cmp
mov
stos
dec
mov
jp
sahf
mov
loope
add
pop
xor
inc
sub
jno
insb
enter
inc
aaa
cli
movsb
cmpl
mov
hlt
push
mov
rcrl
in
push
out
inc
mov
mov
xchg
sub
push
and
lret
sarl
pop
repnz
mov
sbb
ljmp
and
mov
cmp
pop
inc
movsb
add
jnp
daa
test
notl
mov
lods
loop
cmc
inc
jbe
or
add
out
sbb
fmull
cmp
iret
adc
xchg
je
jg
xchg
push
int
bound
sub
aad
sub
jmp
scas
insl
sub
xor
pusha
mov
xchg
ds
jecxz
cmp
popf
mov
lds
inc
aad
and
pop
into
ret
das
imull
mov
push
pop
mov
out
sbb
mov
lock
jge
mov
fsts
insb
mov
ret
arpl
lods
mov
rcl
adc
movsl
sub
fwait
xchg
xchg
cmc
dec
stos
xchg
fmuls
test
push
adc
xchg
mov
fisubl
out
shrl
divb
mov
hlt
enter
dec
adc
and
rsm
and
jns
cmp
xchg
sbb
jp
jmp
arpl
cmp
out
dec
cmp
ret
es
jge
xchg
cmp
aad
push
sub
ljmp
lcall
sbb
xchg
lock
inc
cmpsb
jae
mov
sti
fsubs
pop
push
mov
cmp
adc
mov
dec
in
aad
nop
cmp
lahf
jne
loop
aas
jae
xchg
ja
xor
mov
cmp
adc
sub
les
jno
daa
add
adc
out
shrl
sbb
cmp
mov
xchg
add
sub
movsb
shrl
mov
lret
and
aas
xchg
mov
push
shlb
in
pop
lret
enter
ljmp
inc
cmp
repz
adc
sub
inc
adc
xor
push
xor
lahf
dec
mov
and
pop
push
mov
xor
je
inc
mov
loopne
mov
mov
mov
imul
sbb
rorb
jl
pop
divl
cli
aad
call
out
dec
in
jns
add
push
xchg
orb
mov
mov
call
subb
lods
mov
mov
jnp
push
fs
adc
insb
jmp
xor
das
mov
ret
mov
fdivrl
xchg
aas
dec
pop
mov
mov
inc
and
gs
aas
xor
cmpsl
mov
fldt
and
repnz
imul
dec
xor
into
in
push
xchg
fwait
sub
cmp
xchg
adc
cltd
loopne
pop
arpl
ret
dec
adc
pop
push
test
push
add
pop
or
fadds
adc
enter
cmpl
add
xchg
movsb
add
fnstenv
adc
lahf
je
dec
mov
cmpsl
sbb
push
arpl
movsl
stos
and
cmp
stos
xor
mulb
mov
repz
push
insl
sbb
push
je
mov
pushf
or
mov
loope
xlat
bound
cmp
push
inc
pop
mov
sub
leave
pop
xor
cmp
jae
sbb
jl
push
mov
inc
in
int3
mov
scas
push
mov
and
clc
shrb
incb
dec
ret
stc
je
and
mov
add
pop
loope
inc
xor
repnz
fwait
adc
cli
fsubl
js
mov
test
mov
mov
xchg
jo
xchg
jp
test
rcr
leave
push
repnz
pop
jb
push
mov
pop
bound
push
mov
dec
gs
sub
xchg
cwtl
jg
push
xor
push
mov
push
fstpl
sbb
scas
pushf
jns
insl
xchg
xlat
dec
mov
movsl
mov
cmp
lcall
outsl
aad
out
adc
sahf
add
nop
call
dec
int
and
mov
mov
daa
dec
dec
mov
jno
push
es
push
cmp
in
out
movl
enter
dec
adcl
lds
inc
jmp
and
repz
xchg
out
push
push
incl
and
cmpsb
xor
imul
mov
dec
or
iret
jecxz
push
sbb
mov
push
dec
sub
xor
mov
mov
xlat
pop
mov
pop
pop
pusha
adc
adc
push
sbb
pop
fisubs
leave
mov
xchg
and
add
icebp
orl
jle
aas
or
or
adc
pop
pop
cmpsb
sub
cmp
popf
jge
pop
mov
xchg
inc
xchg
cmpsb
cli
cs
jae
and
or
jecxz
sub
mov
scas
adc
loopne
inc
xchg
imul
pop
lods
leave
push
jge
push
mov
sub
jbe
mov
cli
add
out
mov
aam
popa
loop
xor
or
xlat
fcmovnbe
jb
pop
lds
aad
push
xchg
xor
inc
cmpb
out
jge
pop
fisubrs
call
mulb
xchg
inc
pop
daa
insb
aad
fdivs
shl
sbb
cmpb
mov
icebp
cwtl
mov
and
fwait
mov
arpl
cmp
xor
sbb
mov
add
pushf
sbb
out
inc
stos
add
and
mov
xchg
add
adc
push
rcrb
fdivr
outsl
mov
jno
shlb
hlt
xor
ljmp
xor
arpl
jmp
pop
add
repz
stos
xor
jmp
inc
aas
es
shll
arpl
sbb
loope
sbb
sub
xchg
mov
sub
out
mov
pop
and
adc
dec
cmp
inc
jnp
lcall
test
dec
xchg
sub
call
or
pop
insb
mov
adc
sub
dec
lds
mov
stc
push
adc
test
pop
jg
sbb
xor
cmp
lret
xor
inc
mov
outsl
nop
xchg
imul
test
mov
dec
call
pop
jb
ds
sbb
mov
xchg
push
call
mov
xchg
xchg
pop
andb
loopne
mov
jge
xor
mov
sbbb
test
push
stos
and
into
xchg
insb
cmp
jns
fisubl
lahf
push
jmp
xor
in
clc
hlt
cmpsl
xchg
xchg
pop
fs
dec
mov
pop
std
jle
inc
rcl
fadds
mov
movntq
out
js
dec
adcl
lea
inc
das
xchg
loop
js
mov
mov
jno
sarl
packuswb
dec
and
int
notl
lret
pop
call
in
and
fildl
div
outsb
push
js
movsl
int3
pop
aad
adc
enter
pushf
sahf
loope
jns
push
push
les
xorl
pushf
mov
ss
or
lods
xchg
mov
ret
fiaddl
repnz
push
sub
xor
in
hlt
jbe
pop
mov
cmp
mov
jmp
loope
fbld
pop
adc
mov
jnp
xchg
iret
jno
push
xlat
mov
and
inc
aas
lea
popf
cmp
mov
mov
and
icebp
pop
and
cmp
sbb
bound
sub
push
fdivr
mov
inc
push
push
or
inc
repnz
xor
inc
rolb
cmpb
repz
or
jns
inc
bound
push
mov
out
je
je
cmp
lods
in
arpl
test
lret
jne
out
orl
dec
lods
aaa
ss
or
repz
imul
mov
mov
hlt
pop
mov
push
sbb
ljmp
xor
test
stos
int3
jge
ss
or
sbb
adc
fnstsw
mov
mov
mov
add
sarl
adc
sarl
sahf
jno
cmp
movsl
testl
stc
jno
mov
test
iret
or
inc
mov
inc
sub
sbb
mov
sbb
inc
pop
sbb
pop
cmp
and
xor
fwait
add
fcomi
jmp
lock
xor
lahf
mov
pop
xlat
push
pop
add
in
loopne
add
lods
repz
and
movsb
push
mov
lret
incl
push
call
dec
fsubr
out
mov
xchg
xor
cmp
test
inc
inc
sarl
sub
jmp
push
push
sbb
mov
cmp
aas
adc
push
jle
or
pop
inc
xor
in
pop
scas
fsubrl
mov
mov
cmp
adc
inc
out
xchg
push
imul
popa
aam
dec
xchg
jle
add
repnz
fnsave
xchg
mov
add
jmp
ret
shll
fisubrl
push
repnz
mov
inc
or
rcrl
int
arpl
pop
adc
stc
stos
test
pusha
popf
mov
push
outsl
scas
push
rorb
xchg
repz
push
sub
leave
adc
addl
or
xchg
inc
inc
xor
icebp
xchg
xchg
ss
xor
and
pusha
sahf
jg
xor
stos
push
and
pop
or
cmp
lods
mov
das
push
loop
pop
mov
shl
hlt
pop
pushf
pusha
inc
push
pop
cmpsl
cmp
adc
dec
mov
je
sbb
sub
andl
xchg
mov
mov
dec
cli
insb
jbe
sbb
sbb
lock
lahf
pop
dec
movsl
sub
adc
and
mov
insb
xchg
and
cs
imul
push
mov
pop
outsl
mov
pop
cld
pop
das
inc
test
and
scas
addb
lods
iret
cmp
gs
pop
jno
push
imul
add
fiadds
push
push
adc
mov
xor
xchg
cli
in
stos
aam
or
dec
and
sahf
mov
add
hlt
fldcw
andl
and
into
add
xor
inc
call
or
sub
push
sbb
rclb
fisttpll
dec
pop
jbe
dec
inc
mov
pop
cli
out
test
xor
enter
in
loopne
hlt
data16
cs
mov
sub
addr16
ja
dec
stc
mov
pop
mov
push
out
subb
add
sti
jp
dec
add
in
loop
fdiv
test
or
cmc
es
call
and
jmp
outsb
fiaddl
andb
mov
jp
sahf
dec
push
pushf
bound
lods
mov
jnp
popf
fucom
enter
sub
pop
jne
mov
sbb
push
rol
lock
orl
cmp
sub
call
in
flds
hlt
bound
xor
sbb
mov
push
int
mov
fstpt
lcall
outsl
sbb
add
lret
mov
cmp
mov
and
pop
stos
repz
rcl
adc
mov
lods
push
ret
push
sbb
cmp
cmp
sbb
xchg
push
push
xchg
nop
dec
lds
xchg
fcmovbe
lds
ds
jbe
jmp
adc
push
lods
push
jne
inc
inc
and
mov
sbb
xchg
jae
or
rcll
pop
push
mov
jno
sar
or
add
sub
cmp
xchg
dec
xor
repz
roll
jne
pop
xchg
jnp
add
pop
repz
orb
mov
dec
inc
push
xorb
and
xlat
mov
mov
xchg
add
mov
push
into
dec
and
fnsave
cmp
mov
lcall
filds
push
js
pop
int
and
movsl
push
push
jb
pop
inc
outsl
push
add
je
dec
jbe
sarl
faddl
loop
xchg
sub
pop
mov
outsb
inc
mov
out
or
sub
xchg
cmpsb
push
mov
cwtl
mov
ss
add
aaa
call
and
pop
repnz
cmpsl
inc
xor
pop
lcall
mov
test
xchg
test
call
loope
mov
and
jl
inc
scas
cmp
testb
pop
adc
mov
pop
and
jo
cmp
mov
xchg
jbe
jle
int3
sbb
sub
and
mov
lods
mov
and
add
adc
outsb
imull
ds
push
pop
scas
bound
mov
mov
sbb
xchg
inc
bound
cmpsl
sub
test
cmpsb
fldt
cli
in
dec
not
mov
or
xor
lock
or
cld
mov
out
std
push
es
xor
lods
lret
adc
mov
inc
sti
sbb
mov
mov
loope
adc
xchg
call
mov
xchg
jnp
fbld
xor
mov
mov
xchg
test
jl
dec
mov
push
insl
sbb
bound
das
test
xchg
cltd
mov
out
aaa
sbbl
stc
notb
or
sub
cmp
inc
adc
out
push
movsl
loope
fidivl
sbb
int3
pop
xor
dec
mul
or
xchg
inc
loop
pop
xchg
loope
add
outsl
lods
cmp
andl
mov
test
in
mov
fs
cmpsl
mov
mov
negl
sbb
jmp
adc
pop
mov
addb
imul
sub
lock
arpl
xlat
div
mov
add
call
insl
jae
push
adcb
enter
popa
out
fidivrl
add
aaa
push
notb
pop
cs
jnp
xchg
push
mov
adc
jl
scas
push
mov
subl
and
lcall
inc
mov
pop
stos
push
loop
loopne
lahf
cmpsb
loopne
insl
call
rcrl
movsl
push
inc
in
xor
or
jae
mov
push
cmc
verw
inc
xor
imul
xchg
pusha
push
insl
sub
xchg
jl
xor
popa
lds
aam
sbb
pop
xchg
popa
.byte
.byte
.byte
add
add
scas
lods
push
add
add
add
push
add
add
add
add
mov
add
lock
addb
add
or
add
rolb
orb
add
add
addb
add
scas
lods
push
add
add
add
pop
add
add
add
add
addb
add
dec
add
addb
add
pusha
add
addb
add
add
nop
add
addb
add
test
add
rolb
addb
add
scas
lods
push
add
add
or
add
add
add
adc
add
sbb
add
or
andb
add
cmp
add
push
add
sbbb
subb
subb
addb
add
orb
xorb
add
add
add
scas
lods
push
add
add
add
add
test
add
add
add
scas
lods
push
add
add
add
adc
add
add
sub
add
adc
sub
add
sub
sub
add
inc
add
xor
add
pop
add
xor
add
jo
add
mov
xor
add
mov
sldt
mov
sldt
rolb
xor
add
call
sldt
add
add
sbb
add
xor
add
dec
add
add
pusha
add
add
js
add
nop
add
add
test
add
rolb
add
add
add
scas
lods
push
add
add
add
add
rorb
xor
add
or
add
and
add
scas
lods
push
add
add
add
pop
add
jg
add
push
add
push
push
add
push
jg
add
jg
add
jg
add
jg
add
push
add
scas
lods
push
add
add
add
add
add
add
loopne
add
add
add
scas
lods
push
add
add
add
add
add
add
lock
add
add
add
scas
lods
push
add
add
add
add
add
add
add
add
add
add
scas
lods
push
add
add
add
add
add
add
adc
add
add
add
scas
lods
push
add
add
add
add
add
add
and
add
add
add
scas
lods
push
add
add
add
add
add
add
xor
add
add
add
scas
lods
push
add
add
add
add
add
add
inc
pop
add
add
add
scas
lods
push
add
add
add
add
add
add
push
pop
add
add
add
scas
lods
push
add
add
add
add
add
add
pusha
pop
add
add
add
scas
lods
push
add
add
add
add
add
add
jo
add
add
add
scas
lods
push
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
scas
lods
push
add
add
add
add
add
add
rolb
add
add
add
scas
lods
push
add
add
add
add
add
add
loopne
add
add
add
scas
lods
push
add
add
add
add
add
add
lock
add
add
add
scas
lods
push
add
add
add
add
add
add
add
add
add
add
scas
lods
push
add
add
add
add
add
add
adc
add
add
add
scas
lods
push
add
add
add
add
add
add
and
add
add
add
scas
lods
push
add
add
add
add
add
add
xor
add
add
add
scas
lods
push
add
add
add
add
add
add
inc
or
add
add
add
add
add
add
add
add
add
add
add
add
scas
lods
push
add
add
add
add
add
add
pusha
or
add
add
add
add
add
add
add
add
add
add
add
add
scas
lods
push
add
add
add
add
add
add
orb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
scas
lods
push
add
add
add
add
add
add
push
or
add
add
add
add
add
add
add
add
add
add
add
add
scas
lods
push
add
add
add
add
add
add
jo
add
add
add
scas
lods
push
add
add
add
add
add
add
orb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
mov
add
xor
or
xor
add
push
add
add
add
sarb
add
add
or
xor
add
cmp
or
xor
add
insb
ret
or
rolb
add
cmp
or
in
add
and
or
rolb
add
lock
add
add
lret
rolb
add
nop
int3
or
rolb
add
pusha
into
or
rolb
add
xor
or
rolb
add
add
or
rolb
add
rcl
or
rolb
add
mov
add
add
add
add
or
lock
add
fmuls
add
add
add
add
add
fisttps
add
add
add
or
lock
add
in
add
add
add
add
nop
out
add
add
shr
or
aam
add
movsb
jmp
add
add
add
add
je
or
add
add
js
or
sub
add
movsb
testb
mov
add
add
add
add
add
add
add
add
add
add
add
mov
or
sub
add
mov
or
mov
add
add
add
add
or
mov
add
hlt
or
add
add
add
add
add
or
add
add
add
add
add
nop
adc
add
or
add
add
add
sbbb
add
add
test
or
adc
add
mov
add
add
sbb
add
in
or
adc
add
pop
add
inc
add
inc
add
push
add
add
inc
add
dec
add
add
inc
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
push
add
push
add
inc
add
inc
add
add
add
inc
add
inc
add
dec
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
pop
add
inc
add
inc
add
add
add
add
inc
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
or
inc
add
add
add
push
add
add
add
add
add
inc
add
dec
add
push
add
dec
add
or
push
add
inc
add
inc
add
inc
add
dec
add
dec
add
add
add
push
add
inc
add
sbb
mov
sbb
sbb
ljmp
or
jmp
popaw
push
mov
jns
cli
les
addr16
aaa
fimull
fs
mov
fs
popa
cmc
cs
add
loopne
or
int
aas
or
jle
xor
fxch
add
inc
inc
xacquire
or
repnz
testl
std
and
arpl
loop
nop
sahf
jbe
test
test
mov
mov
movsl
mov
sti
xor
sbb
addr16
stos
xchg
lock
mov
ret
adc
fldcw
mov
mov
adc
in
aam
popa
jg
pushf
fmulp
in
and
cld
cmpsb
xchg
leave
sub
push
push
fs
dec
inc
jne
or
mov
jne
adc
or
repnz
test
adc
sub
cmp
push
add
fistpl
js
dec
push
pop
rorb
mov
sahf
xchg
sbb
jge
lret
addb
xor
enter
jne
hlt
andb
ss
xchg
out
data16
sbb
aaa
mov
lcall
adc
testb
adc
inc
dec
nop
mov
fwait
add
add
pop
xor
aad
loope
pop
xchg
mov
bnd
dec
fisubrl
jle
pop
add
sbb
imull
sbb
aad
add
sbb
mov
fstpt
adc
mov
clc
fnsave
mov
inc
push
repz
or
nop
inc
mov
push
cmp
loop
push
sahf
ljmp
mov
pop
mov
test
sub
cmc
dec
cld
adc
loopne
sbbl
loope
inc
inc
mov
sbb
cmpsb
xor
ret
fsubs
ss
flds
pop
push
pop
push
sahf
insb
push
xchg
stos
jae
xchg
loopne
je
push
adc
inc
ss
cmpsb
cmp
test
push
aad
adc
leave
rorl
fistps
scas
icebp
ret
jmp
and
popf
push
adc
fcoml
cmp
mov
lcall
jecxz
mov
lret
popf
loop
add
dec
push
aaa
jl
insl
sub
cmp
dec
push
push
and
pop
xchg
nop
add
push
xchg
insl
and
sub
maxps
movsl
aaa
push
sbb
lods
in
sahf
xchg
or
pusha
dec
data16
push
jno
fiadds
stc
popa
fs
pop
xchg
int
xchg
pop
popf
or
adc
adc
mov
enter
adc
dec
sub
xor
popa
xchg
jle
and
stc
shll
jb
es
mov
xchg
mov
lcall
rcrl
fstp
fnstcw
jle
popa
loope
jp
and
xor
je
add
cmp
out
xchg
jbe
mov
std
test
stc
jge
mov
test
push
or
xor
repz
fimuls
xchg
das
sbb
mulb
xor
push
mov
call
adc
or
mov
in
insb
mov
pop
push
sbb
sub
xchg
outsb
or
xchg
jb
push
cli
push
sarl
call
icebp
pop
test
sub
pop
sbb
rcrb
xlat
mov
mov
sahf
dec
or
sbb
inc
ja
xor
movl
inc
add
imul
rorb
les
inc
pop
rcll
hlt
hlt
xor
out
mov
sub
jne
rorb
pop
or
jge
xchg
jno
insb
lcall
add
cmpsl
std
fcompl
inc
push
jne
fdivrl
mov
fdivrp
mov
movsl
pop
leave
xchg
push
jbe
mov
aad
loope
xor
inc
and
gs
sub
add
dec
xor
in
out
repz
cmpsb
imul
xchg
jecxz
add
outsl
xlat
scas
fimuls
push
pop
cs
sti
cmp
jnp
dec
lods
test
repnz
iret
and
jbe
inc
bound
fs
xchg
mov
in
das
add
imul
mov
inc
addr16
jle
sub
or
sub
mov
cmp
movsl
into
lods
mov
fs
stc
inc
mov
and
mov
push
mov
xchg
das
sbb
divl
daa
hlt
jno
mov
mov
push
pop
pusha
test
and
fsubrl
mov
dec
sbb
sbb
iret
push
mov
mov
xor
adc
andps
dec
dec
pop
mov
sub
pop
int
push
or
pop
sbb
fld
fchs
mov
xor
or
in
add
lahf
mov
call
loope
orb
movsb
dec
push
stos
shlb
cmc
xor
fsubp
or
fwait
and
das
mov
mov
cmpsb
mov
fwait
push
sub
ret
ret
and
data16
sub
dec
xor
leave
pop
loopne
push
xchg
sbb
ja
shr
or
insb
and
dec
dec
sbb
iret
enter
add
pushf
gs
fs
mov
negl
cmp
jmp
push
ret
insb
loop
lds
pop
jbe
mov
adc
movsl
dec
mov
adc
ss
add
daa
jno
lock
dec
gs
pusha
mov
xchg
sti
xchg
dec
cld
lret
inc
or
cmp
mov
sbb
mov
sub
xor
dec
pop
xor
test
xor
jp
ficoms
and
dec
lds
add
lahf
mov
movsl
sbb
mov
vmovss
out
loop
sahf
or
pop
xchg
push
dec
popa
sub
push
out
xor
idivb
sti
inc
mov
pop
xor
xchg
push
imul
dec
shll
xchg
pop
rorb
mov
jnp
sub
push
pop
jae
in
icebp
add
scas
xor
es
pushf
xchg
cwtl
rcrb
test
aad
enter
adc
test
jae
sub
adc
test
ret
pop
sub
popa
loop
mov
ret
pop
dec
lahf
xchg
mul
mov
jae
shll
out
es
jne
insb
imul
in
enter
cmp
xor
mov
add
aad
jbe
insl
adc
stc
and
pop
adc
xchg
mov
mov
mov
sbb
cli
inc
xor
mov
push
adc
test
jge
pop
scas
pop
fisttpll
sbb
popf
jnp
jne
lret
or
and
das
ja
stc
xor
xor
aam
cwtl
lret
push
sub
xchg
xchg
jmp
popa
cltd
cltd
mov
mov
jmp
stos
mov
je
inc
push
inc
push
sbbb
adc
mov
adc
cs
out
loope
aas
daa
stc
or
and
inc
mov
inc
push
jne
sub
cmpsl
repnz
jl
cmp
out
fidivs
add
dec
daa
mov
sbb
pop
mov
dec
movsl
sub
fdivrl
and
push
ja
dec
sbb
int3
int
sbb
jae
mov
arpl
push
cmp
dec
push
leave
sbb
leave
data16
push
mov
sub
and
xor
jno
sarl
sbb
inc
adc
sub
ffreep
jno
fsubl
in
xchg
mov
sub
call
insb
xlat
fdivs
add
mov
shrl
popa
xor
add
or
push
dec
mov
cmp
mov
ret
cmpsl
dec
shrb
sub
testb
or
in
ds
mov
xchg
lahf
mov
mov
aas
cmc
jnp
call
mov
fcompl
xchg
arpl
and
test
cwtl
jbe
sbb
in
push
outsl
lods
dec
cmp
or
pusha
and
inc
sar
and
push
or
das
push
jae
shr
popa
cmc
dec
jge
sub
mov
jb
ss
pushf
aam
xchg
loop
into
les
xor
sub
out
lret
dec
mov
or
imul
cmovbe
cmp
gs
push
mov
push
sub
jge,pt
push
dec
mov
adc
push
pop
in
fcoms
xor
mov
jns
sarb
xchg
leave
jbe
xorl
stos
jae
add
inc
xchg
inc
addr16
xor
sbb
cli
stos
dec
mov
push
pop
sbb
inc
shlb
outsl
int3
imul
test
movsb
cs
fsts
adc
and
js
pop
out
xor
ljmp
adcb
push
sbb
jns
sub
cld
fistps
aas
orb
lahf
cli
xchg
loop
repnz
fmull
dec
fdivl
jge
mov
mov
imul
test
scas
imul
out
iret
ret
mov
insb
and
mov
rcrb
jg
test
mov
jp
into
popf
sti
fmuls
push
bound
push
addr16
adc
mov
fs
mov
push
pop
xchg
andb
inc
mov
sub
push
outsl
aam
arpl
lds
jp
xchg
mov
iret
adc
dec
adc
cmp
loopne
leave
sub
add
movsl
sub
jns
dec
sahf
and
stc
shll
in
fistl
out
gs
rcl
mov
jo
mov
loopne
stc
push
dec
sti
push
stos
mov
pop
call
push
jae
daa
adc
pop
cmpsl
subl
addr16
jp
xor
inc
int
mov
mov
sbb
ds
jnp
cmp
push
in
loope
pop
icebp
cmpl
mov
clc
rclb
fimull
sub
cmp
cwtl
int3
lods
push
sahf
mov
jg
jmp
sahf
pop
dec
push
cmpsb
add
and
push
nop
inc
mov
test
lcall
movsl
jg
loope
loop
testb
mov
aas
xlat
fcomps
cmc
adc
xchg
es
icebp
adc
pop
repz
shll
xchg
push
mov
sub
ret
inc
movsb
push
iret
inc
bound
mov
add
popa
add
decl
xor
sbb
adc
and
push
inc
in
sbb
cmp
mov
nop
loopne
repnz
mov
jns
sarb
lock
pop
dec
pop
lahf
or
jno
mov
movsb
aam
mov
jae
push
and
xchg
lcall
fsub
sbbb
ds
int
mov
popf
pop
sbb
inc
xor
imulb
jbe
xorb
pop
cmp
sub
xchg
inc
add
jg,pt
rcr
out
sub
add
mov
mov
xor
inc
push
mov
cmp
dec
outsl
jne
inc
or
adc
scas
clc
push
and
in
mov
insb
jge
mov
lret
xor
js
in
fsubrs
mov
pusha
inc
xor
out
push
adc
sahf
popa
xchg
fcomip
aad
or
aad
push
aam
repz
sbbl
lret
adc
rcrl
push
jmp
loope
add
out
loop
mov
dec
dec
adc
adc
mov
lods
bound
sbb
je
fildl
nop
rorl
fwait
lds
mov
cmp
lods
ret
pop
mov
testb
sub
jnp
sbb
ss
sub
cmpl
int
jb
push
cmpsl
dec
arpl
and
pushf
mov
stc
cmp
cs
dec
lahf
xchg
dec
daa
xlat
xchg
cmc
inc
push
stc
mov
std
sub
jg
lret
adc
stos
lret
and
hlt
mov
test
cmpsl
inc
jbe
dec
je
sbb
rcrb
or
jnp
push
or
sbb
mov
imul
xor
xor
xchg
add
out
orb
mov
pop
push
inc
xchg
adc
fsubs
or
pop
je
ret
sub
push
pop
jecxz
sbb
mov
jmp
rcll
call
or
sti
inc
or
test
mov
test
mov
pop
cmp
mov
lahf
pop
mov
rcrb
sahf
push
sbb
rcll
stc
sbb
dec
out
movsl
repz
lret
xor
mov
mov
enter
inc
mov
lret
pop
or
mov
inc
into
pop
mov
sbb
jno
add
cmc
mov
rclb
dec
popf
scas
into
in
pop
pop
or
xor
xlat
xor
arpl
lcall
es
cmp
xor
push
addl
sub
xlat
js
fldpi
ja
outsb
dec
jmp
mov
inc
repnz
nop
and
pusha
rcrl
dec
fstp
xchg
movsb
rcrl
xor
xchg
andb
sti
inc
and
movsb
fcomps
jno
lret
xchg
push
sbb
test
lret
fidivs
and
dec
jo
xchg
add
mov
sub
pop
sti
sbb
xor
xor
test
ror
mov
in
rep
pop
add
scas
enter
xchg
inc
inc
inc
mov
loopne
mov
push
stos
loop
push
iret
les
outsl
scas
xchg
fsubr
cs
lock
mov
outsl
push
imul
fwait
jg
or
sbb
outsl
arpl
push
sahf
inc
and
xor
xchg
mov
or
xchg
jecxz
jp
jne
push
adc
lret
dec
dec
xor
sub
call
iret
jmp
push
jl
out
int
or
in
ljmp
and
mov
insl
sub
popa
repnz
imul
es
shr
fldenv
rorl
fidivrl
sub
cmp
mov
jg
sub
pop
pop
mov
imul
jmp
push
cmp
xor
inc
insb
cmp
and
cmpsb
sbb
fidivl
jnp
adc
pop
push
or
int
pop
ss
ds
pushf
mov
call
adc
cmp
jle
lods
xorl
sub
insb
xchg
nop
push
push
dec
jno
inc
popa
add
push
test
mov
leave
push
xor
cld
or
jo
int
mov
cmp
fldl2t
je
mov
fwait
jg
cmc
xchg
push
gs
out
jmp
sarb
xchg
dec
popa
jg
pop
sahf
inc
popa
and
xchg
das
lds
adc
push
pop
mov
aam
mov
das
aam
mov
mov
push
ljmp
test
mov
sub
mov
mov
xchg
xor
jb
test
mov
push
movsb
call
xor
and
ljmp
add
daa
xor
jge
mov
mov
xor
cmp
js
pusha
addb
fiaddl
cmp
sbb
or
data16
sub
movsb
std
push
les
mov
adc
add
outsl
cmpl
xor
enter
js
or
cmpsl
mov
push
ret
hlt
mov
pop
ja
sbb
add
cmp
addr16
jg
inc
or
ret
and
push
test
fwait
xor
test
cmp
jp
lahf
loopne
push
lock
or
jb
jns
dec
push
and
fcoml
fs
cs
outsb
dec
push
ljmp
xor
jl
sarb
ljmp
dec
push
addr16
mov
data16
lcall
mov
mov
sub
rclb
xchg
mov
add
fmul
into
pop
movsl
idivl
daa
aas
mov
pop
xlat
adc
iret
cmp
mov
xchg
and
ja
stos
fsubrl
icebp
shlb
test
roll
cmp
shll
xorb
push
pushf
out
and
sarl
and
jno
or
movsb
js
aaa
or
cmp
subl
adc
ror
dec
jns
scas
jmp
shr
addr16
call
xor
test
pop
or
sahf
div
and
xchg
inc
jle
add
bound
icebp
inc
outsl
aas
xlat
lcall
adc
lods
xchg
scas
stc
xchg
sbb
jo
je
outsb
adc
xor
push
ds
lret
xchg
nop
cmp
dec
cmp
lret
push
movl
pop
fisubrs
add
mov
add
lock
jp
mov
int
mov
and
xchg
cltd
in
mov
and
mov
into
and
cmp
std
testb
addb
adc
cli
mov
sbb
sbb
xchg
cli
or
cmp
fiaddl
mov
dec
fs
shll
incb
jns
int
pop
mov
sahf
mov
adc
rorb
and
mov
ret
bound
aaa
inc
out
push
std
int3
ds
sbb
push
sub
popa
xchg
mov
es
xor
addr16
movsb
or
adc
pop
jle
push
or
cmpsb
lods
cmpsb
fmulp
scas
xchg
adc
xor
das
jp
inc
dec
ret
pop
cmp
and
jl
push
mov
cwtl
insb
andl
es
pop
mov
xor
imul
daa
xchg
arpl
aaa
movsb
cs
lock
repnz
test
mov
add
enter
fstps
pop
push
arpl
orb
hlt
mov
icebp
popa
jne
push
ret
scas
cld
push
xchg
scas
inc
fldpi
lea
lcall
push
aaa
push
lock
jmp
in
xchg
and
or
pop
and
push
in
lcall
jo
mov
dec
inc
mov
lret
sbb
popf
into
jmp
std
jns
scas
dec
gs
mov
lea
in
cs
and
sbb
sbb
xchg
mov
cltd
mov
mov
fs
and
xor
int3
dec
lea
pusha
mov
mov
inc
ss
mov
mov
cmpb
popf
mov
imul
ds
mov
jle
call
shrl
add
xor
push
testb
sti
lods
aam
fs
push
mov
sub
hlt
imul
out
ret
xor
cwtl
cmp
sbb
ret
shlb
mov
or
cli
fwait
testb
in
test
movsl
and
pop
xor
sbb
bound
mov
mov
cld
test
and
or
lret
jl
lods
jg
push
pop
cwtl
out
std
push
aam
xchg
int
int3
fs
dec
je
mov
imul
push
and
push
inc
insb
in
mov
or
dec
mov
int
rep
and
sub
std
sbb
dec
dec
mov
test
push
sub
fwait
pop
jnp
sub
sub
nop
adc
jp
mov
hlt
icebp
dec
ljmp
ret
test
xor
repnz
lcall
xchg
clc
lods
adc
fwait
xor
aas
outsl
es
pop
in
sbb
inc
mov
js
mov
mov
sbb
sarb
jle
or
scas
fstps
pushw
icebp
dec
dec
push
or
cmpsb
jo
andl
mov
pop
mov
dec
cmp
inc
lret
mov
ja
jmp
inc
pushf
sbb
xor
jnp
pop
inc
stos
popa
arpl
test
inc
inc
out
rolb
shrb
sahf
test
pop
daa
xchg
test
lods
lret
mov
sbb
testb
pop
push
dec
loope
xchg
xor
pop
or
push
dec
das
ret
cmpsb
xchg
mov
jecxz
clc
inc
popf
sahf
mov
mov
dec
dec
mov
fldt
scas
lcall
xchg
les
jo
cwtl
jae
decb
rcl
bound
imul
jnp
mov
rclb
adc
icebp
mov
sbb
cmp
lret
jo
out
cld
clc
repz
jae
xlat
fmull
ja
ret
in
aam
sbb
mov
sbbb
ficoml
loop
jl
in
xor
testl
iret
push
imul
insl
xchg
pop
sub
and
movsl
push
dec
mov
xchg
pop
push
shl
cmp
inc
jl
subl
out
nop
cmpsb
sar
xor
xlat
lahf
push
scas
pusha
xor
lret
ret
push
fisubrl
test
jb
push
loopne
jge
imul
outsl
cmp
or
lods
ss
fwait
aas
in
sbb
out
and
nop
or
cmpsl
cmp
rcrl
xor
loop
roll
out
data16
xchg
gs
mov
sbb
in
out
mov
jp
test
aaa
sbb
in
cs
rorl
inc
sbb
clc
or
loopne
pushf
push
sbb
push
ret
fstl
adc
jmp
mov
test
in
dec
xlat
lods
fcomps
mov
cmp
popf
pop
sbb
loope
jecxz
add
iret
inc
sub
add
mov
xor
daa
xchg
cltd
mov
mov
adc
into
add
outsl
or
xor
lcall
adc
xor
nop
loopne
mov
sub
or
cs
jnp
adc
flds
dec
xchg
sub
pop
cli
inc
aas
jmp
imul
mov
xor
pop
and
subl
shlb
rorb
sbb
add
inc
ja
popa
push
xchg
sbb
dec
fidivl
ret
dec
stos
xor
or
insb
ret
dec
mov
sub
jp
jge
cmpsb
cmp
shl
idiv
add
mov
js
movsl
imul
leave
test
rcrl
rol
and
and
adc
nop
in
jns
xchg
dec
cs
xor
push
out
dec
adc
cwtl
push
jb
mov
ds
mov
test
mov
and
ret
jp
movsl
pop
out
repnz
pushf
lcall
pop
ja
ficoms
dec
sbb
add
push
fucomp
repnz
inc
dec
xor
idivl
lods
test
lock
push
andl
jl
mov
inc
or
and
add
mov
adc
lret
je
or
ret
imul
addr16
sub
jae
mov
sub
inc
enter
scas
fdivrl
lea
push
lods
mov
xor
push
rcll
or
incl
popf
jb
inc
add
xor
jb
pop
movsb
ja
pop
js
dec
out
xor
lods
scas
stos
cmp
push
inc
scas
shll
mov
aaa
std
sti
jp
ret
adc
and
xchg
dec
adc
icebp
fadds
pop
sub
das
aaa
cwtl
fwait
sbb
or
mov
pop
test
mov
xor
fcoml
xchg
repnz
fwait
adc
or
ss
lds
cmp
jno
les
add
sub
rcrl
mov
jmp
ja
mov
fmuls
push
adc
aam
mov
adc
dec
aad
push
add
cmp
xchg
in
sti
bound
ror
fsubs
push
push
mov
scas
cmpsb
sar
xor
in
mov
push
or
add
inc
mov
test
or
aam
jo
pop
sub
sbb
xor
cmpsb
sub
cmp
scas
mov
lock
int3
jge
sbb
out
xchg
pop
dec
inc
sbb
add
out
push
insl
cmp
mov
jo
fnstenv
std
daa
cmp
push
push
jne
sub
xchg
and
pop
mov
mov
aas
fcomi
push
test
adc
mov
xchg
cmp
jecxz
std
adc
jp
sarb
sub
sub
mov
lret
inc
mov
popl
jmp
push
aaa
pop
pushf
int3
xchg
inc
add
filds
ss
dec
xchg
nop
add
jmp
arpl
mov
out
pop
xor
jne
sti
jno
imul
add
add
sbb
enter
cltd
out
nop
ds
mov
cmpsb
enter
pusha
push
lret
sar
rol
xchg
adc
jmp
jp
les
cmp
lods
aad
rcl
pop
sbb
jo
jge
std
out
jg
cwtl
clc
das
sub
pop
sbb
lock
fstl
dec
jl
daa
mov
add
cvttps2pi
xor
and
shll
cmpsb
mov
dec
mov
push
in
out
cmc
fnstcw
xchg
lock
cmpsl
test
in
push
push
and
cmpsl
and
push
outsb
bound
shrl
or
bound
imul
popf
add
pop
jl
sahf
push
lods
or
xor
aad
jb
mov
sbb
movsb
pusha
inc
in
xchg
rcll
mov
push
mov
xchg
adc
outsb
xor
mov
je
ds
jecxz
sahf
sub
pusha
subl
in
adc
fnstenv
lods
notb
adc
sub
enter
mov
dec
xor
mov
lea
test
mov
clc
dec
arpl
sbb
mov
fildl
in
clc
dec
pop
sbb
loope
push
dec
imul
xor
aad
inc
adcb
adc
add
icebp
push
sub
xor
lods
sbb
cli
cld
in
pop
adc
add
pop
pop
jle
cmp
add
cs
dec
repz
clc
xorb
incb
jecxz
arpl
rcrl
mov
push
daa
pop
xchg
lcall
stc
leave
xchg
cld
xchg
fs
pop
scas
in
pop
cwtl
les
sbb
mov
out
jns
xchg
or
dec
push
inc
jnp
adc
jl
stos
push
mov
rorb
pop
ss
nop
xor
test
nop
push
fdivrs
adc
jge
fwait
scas
outsl
bnd
divb
xor
add
stos
iret
pushf
xchg
jp
int
stos
addr16
add
adc
jge
xor
push
pop
addb
push
push
aad
cld
iret
cli
dec
sbb
cmp
data16
adc
cmovp
jge
push
pop
inc
ljmp
je
movsl
mov
mov
lret
push
pop
jne
leave
in
sbb
les
add
aam
adc
push
orb
xchg
cli
mov
dec
dec
scas
jg
or
mov
mov
cltd
xchg
xor
cltd
or
jnp
mov
push
dec
mov
lahf
out
icebp
ret
add
cli
in
pop
movsb
fidivrs
jo
subl
mov
and
sub
fdiv
outsl
in
ljmp
adc
inc
insl
adc
xchg
test
and
mov
aas
pop
fldenv
mov
adc
mov
fs
dec
pop
adc
aad
jnp
aam
pop
jg
dec
ljmp
lock
in
xor
jbe
sub
inc
out
lahf
imul
jg
data16
stc
inc
mov
mov
insb
jo
lds
or
cld
sub
sbb
stos
adc
mov
push
push
out
xor
.byte
xor
add
adc
mov
jg
ja
push
dec
and
int
jo
add
xchg
add
pop
mov
and
ficompl
mov
ret
jnp
nop
ret
jp
jp
repnz
sbb
inc
jecxz
mov
xchg
jne
inc
mov
inc
lods
cs
mov
aam
inc
mov
cmp
xchg
dec
or
mov
mulb
cmc
lret
pusha
dec
fs
call
mov
mov
repnz
mov
fsubrs
and
cli
sahf
jns
add
add
adcb
jp
xchg
sub
cmpsb
xchg
orb
sub
dec
aas
sub
sub
jle
pusha
arpl
stos
loope
cmp
cld
sub
cwtl
jne
mov
push
dec
sub
jbe
insl
test
xchg
outsb
outsl
gs
mov
loopne
in
fistps
flds
push
pop
mov
adc
iret
xchg
add
das
jp
pop
dec
pop
lea
sbb
pop
icebp
adc
clc
xor
cmp
repz
pop
daa
sti
stos
dec
adc
push
add
or
pop
pop
out
mov
jns
pop
jnp
fiadds
or
sub
mov
sbb
icebp
outsb
test
mov
xchg
or
jle
sub
push
imul
shrb
lea
movsl
mov
out
mov
dec
movsb
outsl
mov
adc
pushf
mov
push
xchg
adc
fidivl
out
xor
je
nop
mov
mov
adcb
dec
das
mov
lea
pusha
out
std
cmp
fidivs
sbb
aam
mov
mov
in
mov
mov
ss
dec
testb
mov
jp
sub
clc
mov
ss
jae
pop
cli
dec
out
mov
inc
cmc
push
sub
sub
pop
adc
in
push
ret
dec
mov
aaa
jmp
std
repnz
xchg
push
push
xor
fs
cmc
addr16
push
mov
mulb
or
sbb
shlb
int
cmpsb
fldenv
in
xor
dec
pop
mov
test
les
jmp
pop
stos
leave
clc
or
notb
push
out
fiadds
sub
sarb
stc
mov
and
shrl
inc
movsl
pop
ret
add
xor
or
add
push
fidivrs
push
xchg
nop
incl
push
mulb
push
into
out
cmp
mov
push
vprotq
mov
fcos
ret
or
push
aam
and
add
jp
or
add
xsave
insl
push
xor
fmull
cwtl
dec
bound
sbb
shrb
jp
scas
jno
cmpsl
jecxz
mov
inc
stos
sti
sub
movsb
test
lcall
mov
clc
jne
and
fistps
push
andl
in
sahf
adcl
pop
mov
in
call
push
ficoms
add
mov
nop
add
fsubr
inc
lock
xchg
cmp
inc
sub
mov
cmp
out
cmp
mov
les
jmp
rcl
test
jp
aad
dec
divb
xchg
test
jo
sub
cs
jae
ljmp
and
inc
stc
loop
pop
jg
test
adc
pop
lahf
sbb
xlat
mov
pop
and
adc
jae
pop
cltd
jge
fwait
dec
or
aad
insl
mov
hlt
ljmp
mov
xchg
push
mov
lods
ja
lret
ds
cmp
pushf
or
push
jle
mov
sbbl
mov
imul
ljmp
rorb
pop
mov
mov
dec
xor
paddusw
je
fistps
sbb
clc
dec
pusha
pop
aaa
sbb
jp
inc
ss
jmp
cld
jmp
jnp
xchg
cld
add
adc
add
aaa
add
cmpb
fisttpl
js
sub
ret
xor
adc
push
adc
cmp
add
enter
scas
dec
and
fiadds
or
sti
fstps
mov
adc
je
xor
popa
adc
jl
stos
popf
pop
cs
mov
cmp
add
add
rolb
insb
mov
dec
cmp
mov
leave
xor
mov
iret
push
inc
movsb
clc
js
mov
jmpw
mov
sbb
mov
jl
mov
or
int
data16
jge
adc
loop
fistpl
jno
cmpsl
push
lds
jno
cld
dec
orb
rolb
insl
sbb
jbe
imul
fs
sub
stos
or
lret
arpl
arpl
xchg
mov
xor
push
mov
jbe
jmp
dec
mov
mov
and
push
xor
ljmp
jb
fsubs
mov
ret
ss
das
pop
fcmovbe
and
xchg
insl
out
shrl
dec
cmpl
fnsave
xor
lret
gs
test
cmc
push
je
ficoms
in
popa
aaa
xor
js
mov
push
in
pop
xor
int
pop
ljmp
push
push
loopne
imul
jno
or
mov
fsub
gs
and
ds
jb
or
push
lahf
lods
push
mov
into
outsb
mov
in
ja
and
jbe
sbb
bnd
jl
rorb
inc
repnz
ds
movsl
addl
insl
iret
sbb
pop
adc
out
push
orb
cwtl
xchg
mov
daa
adc
pop
clc
cmpsl
jns
jle
cmp
dec
sub
jns
pop
mov
mov
lret
mov
jmp
jle
popl
mov
roll
mov
jge
jne
xchg
lret
inc
js
movl
sbb
and
add
mov
pop
cmpsl
cltd
imul
add
pushf
clc
lea
mov
ficomps
enter
lds
fadds
hlt
mov
dec
sub
or
pop
mov
mov
imul
shlb
ja
pop
dec
push
sub
dec
cwtl
rcl
scas
stos
adcl
cmp
pop
pushf
hlt
inc
or
data16
xchg
cs
and
orb
inc
test
mov
sub
ss
cs
cmp
mov
pop
popa
xchg
xchg
inc
pop
scas
lock
faddl
scas
pop
cmp
xchg
stos
and
leave
inc
leave
inc
sbb
mov
sbb
mov
rcll
cs
rorb
xor
mov
movsb
xor
xor
mov
cwtl
movsb
out
push
mov
call
fnstsw
int3
aam
fisubs
icebp
jnp
dec
mov
mov
cld
mov
xchg
jns
mov
mov
pop
dec
cltd
lcall
aaa
push
in
mov
cli
pop
movd
jmp
and
aaa
lahf
lock
leave
push
loope
pop
enter
sti
repz
push
daa
ja
mov
mov
into
bnd
add
es
call
test
imul
fstl
data16
lret
fidivs
iret
notb
out
cmp
es
loop
repnz
cltd
jmp
mov
mov
add
jnp
ret
push
adc
pop
shrb
je
int3
xorl
xor
sbb
pop
or
push
or
jns
ret
outsl
inc
fmuls
xchg
es
mov
fimull
xor
into
popf
push
das
jns
imul
ficomps
mov
in
neg
lods
mov
pop
scas
mov
data16
and
cmpsb
inc
movsb
cmpsl
ret
les
jne
add
iret
stc
in
lods
pop
test
sbb
pop
pop
sbb
xor
fdivrs
xor
fcompl
popf
add
cmp
jp
xchg
push
and
adc
shrb
cmpsl
cmc
int
movsl
cmpsl
sub
outsl
movsl
xor
adc
xchg
lock
mov
dec
inc
incb
jb,pn
and
dec
mov
dec
das
xor
push
stos
pop
sahf
inc
lea
jp
push
push
mov
shr
imul
dec
mov
push
push
test
out
mov
jecxz
testl
xchg
sub
cmc
mov
or
adc
xchg
xor
push
cli
jmp
push
mov
gs
adc
test
cmp
and
stos
roll
or
loopne
outsb
ffreep
notb
mov
push
repz
cli
bound
inc
jp
fldl
scas
roll
jno
xchg
and
pop
push
pop
stc
nop
jo
test
adc
fdivr
push
lret
pop
icebp
lret
popa
dec
sub
cld
popf
sub
inc
sarl
data16
push
mov
cmc
hlt
cmp
imul
int
push
pop
popa
push
je
dec
je
push
dec
sbb
pop
add
int3
mov
or
jge
and
inc
ljmp
and
xor
mov
repnz
or
out
xchg
cwtl
loopne
imul
ja
insl
sub
xchg
aaa
and
in
aaa
inc
mov
xchg
jg
ret
adc
xlat
cmc
mov
popf
add
inc
pop
sbb
mov
cmp
aad
out
dec
pop
xchg
pop
loopne
cmp
mov
mov
ret
fisubrl
pop
jns
mov
mov
jmp
ljmp
push
or
pop
inc
es
bound
fdivrs
mov
sub
xchg
cltd
scas
xor
out
scas
ja
js
adc
mov
pop
insb
mov
mov
adc
add
in
sti
iret
fs
popf
lods
hlt
addr16
mov
fnstenv
pop
scas
jle
pop
add
fisubrs
and
fwait
push
add
loop
or
sub
xor
cltd
xchg
cmpb
sub
pop
jo
inc
and
and
mov
mov
dec
incb
xor
cs
push
popl
mov
xchg
sarb
pop
or
es
add
mov
push
lock
jecxz
jnp
mov
ret
jecxz
xchg
mov
mov
adc
xor
xchg
out
shll
pushf
int3
jecxz
jmp
pop
adc
push
dec
jl
add
in
rcrl
sub
rcll
aam
mov
xlat
int3
pop
sub
and
mov
clc
in
rcll
imul
add
xchg
jb
daa
lahf
aam
cmp
mov
jge,pn
pushl
cmp
jp
cs
sub
jecxz
mov
pop
adc
xor
xchg
bound
addr16
mov
mov
je
imul
dec
pop
and
mov
jns
pop
inc
cmc
repnz
jne
bound
mov
and
cmp
lea
ss
add
adcl
lahf
cmc
fstpl
xor
or
cmpsb
add
fldcw
lcall
das
addl
leave
lcall
jae
ds
mov
ss
mov
icebp
or
sbb
movsb
call
jne
ficoms
fiaddl
stos
pop
lahf
push
xchg
mov
mov
inc
cmpsl
cmp
out
cmp
mov
mov
sub
and
cmp
or
cmp
mov
cmp
pop
movsl
xchg
lcall
push
cmc
fwait
cltd
pop
leave
sub
inc
loop
or
in
fsubrl
cltd
insl
repnz
inc
push
into
jnp
and
into
or
leave
mov
mov
xor
adc
mov
push
sarl
add
inc
loope
pop
push
loop
adc
test
hlt
or
jbe
jl
sub
ja
inc
fld
mov
lods
mov
adc
cld
repnz
xchg
aam
pop
sub
mov
test
sti
cmpsl
popa
je
das
out
cmp
hlt
add
lret
push
push
test
sub
lret
outsl
jmp
insb
test
pop
and
imul
mov
fidivrl
movsl
test
push
and
scas
psllw
in
fdivr
daa
xchg
mov
mov
jne
jmp
pop
xchg
pop
cmp
sub
and
jno
rorb
rcll
imul
test
adc
adc
sarl
mov
sbb
push
sbb
mov
xchg
jle
xchg
jmp
inc
sbb
mov
clc
push
push
rcrb
std
outsl
mov
out
shll
addr16
lcall
shlb
inc
push
push
les
fistl
dec
mov
movsb
pop
pop
cvtps2pi
sub
popl
xor
pop
roll
adc
mov
sbb
es
stc
pop
cmpsl
je
or
dec
mov
jle
mov
push
sub
shl
aas
xchg
test
sub
sbb
mov
mov
test
jle
lahf
jle
lods
or
lea
sbb
leave
sbb
push
jl
add
cs
sub
jg
jnp
mov
mov
aad
cs
stc
sbb
out
std
flds
jbe
cmc
loope
bound
push
out
fmulp
xor
jb
adc
adc
movl
iret
gs
xor
repz
nop
shlb
add
icebp
dec
jne
orl
sti
xchg
int3
and
scas
adc
loope
and
cmp
or
mov
test
arpl
sbb
xor
jnp
inc
jp
cmp
out
mov
fisttpll
pop
or
jo
pushf
push
lahf
mov
les
xor
mov
jle
xor
or
dec
std
imul
sub
jmp
sub
jns
inc
test
sub
jmp
xchg
inc
xor
sbb
add
mov
sub
jge
jecxz
xchg
pop
mov
cmc
dec
fcoml
scas
movsb
mov
ljmp
adc
sub
in
ds
mov
xchg
ljmp
sub
adc
dec
or
xchg
enter
clc
push
cmc
aas
cmp
dec
inc
pop
addr16
sar
adcb
pushf
jbe
loop
mov
xor
and
std
add
xchg
mov
and
cmc
sbb
int3
add
stc
leave
lret
test
popf
jecxz
icebp
add
mov
xchg
dec
cltd
out
aam
mov
icebp
daa
xlat
lock
pop
add
fs
fldenv
push
sub
jp
shl
std
and
jno
xchg
add
cmp
mov
and
xor
and
adc
xor
int3
xchg
adc
mov
adc
or
pop
mov
repz
mov
iret
out
aaa
add
outsl
push
cmp
and
jmp
mov
xlat
cltd
dec
pop
push
popa
popf
cli
stc
fs
cmp
outsb
xor
xadd
and
push
les
lcall
xchg
or
imul
cld
xchg
cmpsl
mov
adc
or
pop
iret
jbe
imul
popf
ljmp
add
icebp
mov
inc
push
rorb
inc
adc
fistpll
adc
push
lods
push
inc
addr16
cmp
add
inc
popa
dec
adc
scas
stos
jp
loopne
stos
xor
dec
mov
push
lods
shll
mov
in
in
xor
add
notl
xchg
pop
lock
jg
popf
sarb
stos
mov
pusha
xlat
cmp
fwait
enter
mov
inc
les
inc
dec
add
jle
push
adc
mov
stos
into
pushf
xchg
fwait
pop
repz
flds
lods
sbb
push
sbb
mov
pushf
scas
push
decl
popa
ja
scas
and
inc
test
rcll
pop
sarb
push
and
sbb
in
sbb
push
lret
scas
icebp
sub
data16
adc
ret
push
test
cmp
daa
and
mov
push
jne
fsubs
imul
mov
shl
inc
xor
imul
push
bnd
jp
mov
ds
ficompl
xor
cld
cmc
jo
fcoml
rcrl
jno
jle
add
lahf
lods
fbld
xchg
sub
jne
mov
pop
and
add
sbb
pop
add
xor
cltd
fcmovb
xor
push
jns
imul
inc
into
cld
push
ret
int
pop
push
lds
dec
fildll
daa
in
mov
pop
xchg
stos
pop
jns
aam
sub
xchg
icebp
cld
sub
inc
fwait
inc
inc
dec
movsb
cmc
cwtl
xchg
sub
jb
and
mov
pop
leave
movsl
xchg
sbb
sbb
push
out
dec
out
lahf
add
outsb
xor
rcl
inc
adc
inc
fidivs
adc
hlt
mov
xor
jge
lret
xchg
outsb
imul
push
jmp
lods
and
xchg
lahf
nop
aas
icebp
dec
in
fucomp
outsb
mov
data16
into
test
dec
ficoml
cmp
push
mov
jmp
mov
out
test
jnp
imul
lret
andb
jns
pop
xchg
testl
aaa
lods
xchg
lea
mov
xchg
inc
cmp
dec
cwtl
push
out
lods
push
inc
mov
sbb
dec
das
push
cli
fdivl
cli
fnsave
fistpll
rcrb
jmp
test
push
rol
jno
or
arpl
fabs
inc
or
or
call
ret
rcr
ret
pop
test
add
xchg
push
sahf
arpl
sub
es
repnz
stc
fldl2t
dec
add
jmp
pop
lock
mov
lret
mov
outsl
xor
ret
and
scas
cmp
xor
cmc
cmp
in
in
test
lahf
or
pop
push
icebp
fbld
jns
leave
outsl
lahf
jle
outsb
ss
jne
pop
into
aam
clc
add
iret
sub
add
cmpl
bswap
aaa
and
fildll
stc
jmp
in
mov
rcrl
mov
popa
xor
lret
mov
sbb
pop
pop
cmpsl
and
xor
jg
push
xchg
in
lock
nop
push
push
int
mov
testl
dec
ljmp
push
int3
cmp
je
adc
adc
or
gs
mov
or
cli
or
dec
sub
ja
add
dec
sbb
add
sbb
jnp
inc
fistps
int
cmp
mov
xchg
or
sub
fxtract
in
lret
adc
testb
and
das
push
ret
je
fmulp
lds
mov
psubusb
mov
mov
out
dec
adc
dec
sub
test
test
dec
sub
jnp
fs
fbld
cmpsb
xchg
cmp
lret
sbb
fists
sbb
mov
rcrl
sub
bnd
in
and
fsts
pusha
lcall
jb
jmp
cmpsb
movsl
mov
ror
pusha
dec
cmpsb
pop
fldenv
push
and
ja
mov
aam
std
inc
int
cmp
fadd
add
mov
fimull
push
mov
push
mov
sti
fsts
sbbl
ljmp
sub
xchg
and
add
jne
outsb
cli
adc
lret
test
sbb
es
or
stos
or
daa
adc
out
add
aam
xchg
and
dec
in
rclb
xchg
inc
fbld
jmp
jl
test
lret
push
push
mov
addr16
xlat
inc
dec
mov
ja
fcoms
shl
arpl
int3
mov
or
aaa
jle
gs
pop
xor
cwtl
or
js
das
jns
ficoms
add
enter
jns
mov
inc
jbe
movsl
mov
mov
out
xchg
sub
ljmp
dec
pop
mov
das
inc
jecxz
xchg
add
push
std
arpl
jns
mov
push
or
xchg
and
cmpsl
std
sub
and
sbb
icebp
or
icebp
push
lods
cmc
mov
sbb
fmuls
cmpsl
data16
out
aad
test
lods
push
cmpsb
adcb
xchg
outsb
outsl
or
pop
cmc
pop
add
rcll
pushf
pop
mov
jl
jmp
push
outsb
sti
mov
arpl
sbb
adc
add
pushf
jbe
pop
add
mov
dec
xchg
mov
fildl
pop
mov
std
push
sbb
cmpl
pop
dec
mull
mov
mov
inc
dec
dec
mov
inc
or
es
outsb
stos
out
mov
jl
dec
pusha
push
xchg
push
mov
push
test
in
cli
mov
in
mov
jns
test
cmp
dec
push
push
sub
test
mov
push
leave
cs
aam
insb
test
shll
push
pusha
or
stc
stos
fimull
cmpsl
sbb
cwtl
out
test
test
dec
fsts
fldenv
or
cmc
ss
rolb
lahf
jae
outsl
clc
xchg
icebp
push
das
xchg
mov
inc
pop
andl
popf
xchg
iret
int3
jl
xor
subps
repz
fnstcw
std
fimull
leave
das
or
xor
in
std
sub
push
scas
fdivrp
sbb
cmp
repnz
shlb
mov
jb
repnz
inc
jg
pop
cmp
loop
lock
mov
sub
es
and
jne
out
push
faddl
ret
bound
mov
xor
dec
repz
mov
lahf
push
adc
pop
outsb
test
lds
stos
pusha
cmp
call
aas
adc
mov
or
loop
xchg
les
mov
cwtl
xor
pop
sbb
jle
scas
sub
mov
addl
xchg
int3
sub
pop
adc
jno
sub
gs
mov
push
test
popf
pop
jmp
mov
xchg
cld
aam
int
cli
pop
xorb
jp
stc
dec
jp
push
mov
sbb
mov
pusha
sbb
int
addl
icebp
pusha
popf
outsb
and
icebp
sub
stos
cs
cli
fists
popf
in
push
hlt
jg
sub
or
sti
enter
aaa
pop
rcr
xor
addb
add
insl
xchg
roll
lods
pop
dec
cmpsb
jle
add
sbb
push
jae
dec
inc
mov
iret
cmp
ss
icebp
fwait
jne
mov
aad
shlb
push
push
js
push
sub
lds
fstpl
es
mov
adc
sub
mov
add
adc
sbb
mov
dec
mov
rcr
test
movsb
fwait
imul
jle
mov
loopne
addw
fidivs
mov
push
inc
push
pop
pop
dec
sub
or
sbb
sbb
mov
fcom
mov
addr16
and
das
fistpl
pop
addb
mov
pop
fnsave
xchg
add
mov
mov
lock
adcb
aad
mov
xchg
push
inc
mov
mov
cld
or
cmpb
lods
jl
pop
jne
pop
xor
xor
inc
adc
mov
lret
mov
and
cmpsl
call
jmp
pop
inc
ror
bound
jg,pt
jbe
lret
and
sbb
movsl
cli
add
call
stos
shl
cli
mov
jp
push
jno
mov
pop
in
adc
xchg
lock
out
pop
mov
or
xor
jge
subl
lahf
mov
das
mov
in
test
js
sub
mov
or
shlb
stos
rcrb
jecxz
pop
and
rcrl
es
lds
push
pop
aaa
int3
sub
sbb
jne
cmp
bound
sti
fisttpll
pop
xchg
pop
cs
adc
mull
mov
inc
pop
test
int
ja
sub
mov
mov
mov
ja
push
out
mov
mov
test
ljmp
in
push
insb
gs
or
test
jl
subb
xor
sub
mov
test
jge,pn
jmp
mov
sbb
in
dec
pop
je
idiv
mov
movsb
cmc
dec
lds
mov
bound
sbb
lahf
adc
or
push
ret
loopne
movsl
lahf
jno
jg
xor
sbb
mov
in
in
push
mov
and
les
ret
nop
mov
jne
lods
xchg
or
push
dec
and
out
cmp
xchg
fimull
xor
mov
inc
adc
mov
iret
xchg
nop
outsl
scas
pusha
mov
and
or
push
ds
xor
jo
sbb
cmp
loop
sbb
sbb
inc
loop
jbe
mov
test
mov
cmp
xchg
adc
sbb
out
pop
mov
int3
cmp
push
mov
lcall
inc
or
shlb
mov
cmp
sub
push
sti
dec
kmovw
or
incl
mov
mov
aas
ficoms
outsl
sub
int3
xor
cmp
or
xor
mov
push
jmp
aas
ffreep
scas
mov
cwtl
jns
daa
cmp
xchg
lods
sub
adc
pop
jl
xor
shlb
in
int3
push
dec
jg
xchg
push
mov
xor
inc
cmp
dec
sub
pushf
fucomp
das
scas
jge
pop
pop
cmpb
cmpsl
lock
ret
cmp
je
add
cmp
add
adc
fdivs
lret
rcll
xchg
orb
jl
les
ljmp
lods
jne
jmp
pusha
loopne
push
inc
jp
aam
add
sub
pop
inc
in
sbb
adc
in
and
xchg
and
xorl
aaa
loop
leave
movsl
outsl
xor
ss
sti
mov
add
mov
mov
cmp
dec
subb
shrb
mov
adc
cmp
sub
push
cli
xchg
inc
les
mov
enter
rcll
inc
es
dec
or
push
or
movsl
cmp
push
mov
mov
outsl
and
jmp
frstor
fdivl
add
leave
aaa
mov
dec
aas
inc
sbbl
leave
movsb
xchg
cmp
jo
push
push
shrl
and
mov
ss
int3
aad
ret
xor
in
inc
xchg
adc
pop
and
jl
xchg
fnsave
inc
pop
push
adc
sbb
mov
push
repz
insb
dec
aaa
mov
fimuls
inc
es
and
push
movsl
cwtl
sbb
cltd
jb
adc
jbe
int
jmp
pop
ret
cltd
outsb
cmpsb
scas
data16
mov
aas
jo
cli
fwait
or
mov
adc
push
test
pusha
push
ja
sub
hlt
fcmovu
push
add
adc
cmp
out
dec
mov
jae
and
xor
hlt
ss
inc
popf
inc
out
popa
lds
mov
fs
xor
cld
out
es
inc
cmc
mov
pop
mov
pop
mov
imul
xchg
sub
scas
loop
mov
and
mov
xchg
insl
mov
jecxz
pusha
ds
or
jae
sub
xor
pop
dec
xorb
ret
sub
rcrb
loope
insl
test
loope
adc
sub
add
xchg
js
push
iret
jns
adc
cmp
xchg
mov
sbb
ljmp
mov
mov
xchg
arpl
frstor
fidivrs
pop
fisttps
xchg
lods
sarl
out
add
stos
push
lahf
fnstcw
fwait
add
std
test
mov
jb
subb
les
das
mov
rorb
movsl
push
pop
cmpsl
dec
pop
je
pop
aaa
sbb
sub
aaa
mov
and
jl
push
mov
cmp
inc
test
adc
in
ljmp
notl
mov
mov
inc
xor
xor
jp
lock
pop
pushf
arpl
xlat
mov
lods
sub
movsb
imul
xchg
inc
scas
dec
ret
and
mov
outsl
pop
cmp
push
pop
push
std
stc
loop
and
mull
xor
aaa
nop
pop
outsb
mov
add
int
dec
mov
dec
adc
cmpsl
xor
movsb
jbe
pop
dec
stos
fisubrl
sub
fwait
jnp
leave
mov
cmpsb
mov
jmp
jl
aas
xchg
and
inc
ret
jnp
and
enter
xchg
lods
data16
ret
inc
adc
aam
dec
out
xor
pop
ror
scas
or
cwtl
or
in
add
sbb
add
or
ss
iret
mov
xlat
cld
ret
mov
inc
pop
xlat
pop
in
int
pop
or
and
mov
xor
pop
xchg
sbb
ret
push
stos
jo
sahf
cmp
jecxz
sbb
daa
xchg
xor
les
rolb
push
sbbl
mull
xlat
add
jne
inc
sub
xor
shlb
pop
lcall
sbb
push
in
inc
xchg
adc
inc
xor
inc
sub
cmp
add
dec
jnp
jne
inc
push
push
cmp
nop
adc
push
outsl
mov
mov
xor
jnp
sbb
je
fwait
addr16
or
xchg
loope
jo
cmp
jno
sbb
or
call
sbb
aad
dec
icebp
mov
mov
xor
ljmp
or
inc
gs
inc
dec
cmp
pop
stos
lods
xor
into
or
lock
jecxz
mov
mov
ljmp
mov
test
sub
xor
imul
inc
inc
dec
sbb
popa
movsb
push
fildl
test
ds
xchg
inc
and
shrl
lcall
dec
jne
push
sbb
jnp
jg
push
cs
mov
cmp
jecxz,pt
or
push
imul
test
in
rcrb
inc
orl
in
xor
cmpl
ja
pop
fnstenv
popf
xchg
and
shrl
fildl
cld
in
jmp
ja
dec
pop
mov
and
push
add
sub
loopne
in
imul
in
jge
adc
and
popa
add
fs
add
jg
sub
mov
lds
out
cmp
ret
push
jecxz
cmc
xorb
scas
ja
and
lcall
daa
sbb
mov
sub
or
inc
pop
jno
rcl
fmuls
fisttps
push
cmpb
xchg
pop
add
cltd
cmp
outsl
int3
cmp
sahf
clc
mov
mov
aaa
cmp
lea
sti
mov
pop
fdivp
xor
cltd
mov
inc
sbb
icebp
out
xchg
shrb
sub
cmpsl
pop
inc
sbb
mov
bound
or
movsb
xlat
loop
lds
pop
adc
fsubrs
adc
ljmp
mov
popa
fimull
and
sub
mov
ret
adc
pop
push
ret
shrb
test
outsl
mov
sub
mov
or
icebp
jne
cltd
dec
testl
sti
jmp
pop
cmp
inc
out
xor
add
test
push
out
inc
jle
aam
into
ror
lods
inc
add
jbe
jmp
sub
fcom
add
leave
add
fists
outsl
in
in
scas
cld
loope
fidivs
cmp
leave
mov
or
les
jl
jmp
pusha
pop
add
sbb
in
call
das
iret
repnz
xlat
jne
roll
loopne
jnp
pop
sub
fiaddl
sub
imul
or
aad
ret
adc
aam
.byte
mov
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
add
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
call
or
push
and
fstps
fwait
sbb
pop
jmp
dec
dec
outsl
jl
add
mov
push
pop
pushl
call
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
pop
pop
mov
xor
mov
sub
movswl
sub
and
mov
sub
jnp
push
pop
dec
dec
mov
dec
jne
call
jo
outsb
setl
and
jno
pop
pop
xchg
xchg
iret
adcb
jae
mov
sub
mov
mov
push
sbb
sub
daa
pop
push
pop
test
leave
fwait
xor
jbe
add
std
cmp
sarl
out
dec
adc
pop
lock
jmp
in
add
stos
daa
insb
mov
sti
popf
je
and
dec
lods
sbb
movsb
dec
adc
sbb
or
out
jnp
rcrb
push
leave
stos
daa
pop
push
dec
insb
inc
data16
jmp
and
enter
pop
xchg
or
arpl
hlt
jmp
lret
ds
idivb
fcmovbe
call
jmp
int
bound
test
aam
cmovl
xorb
jnp
jbe
fbstp
mov
leave
je
js
test
xor
xor
les
cmpsb
jbe
mov
mov
add
stos
bound
jne
cmp
cmc
push
adc
clc
jmp
jmp
adc
stc
xor
jl
lock
mov
push
pop
mov
sti
xor
fdivl
orb
mov
xor
xchg
je
bound
fwait
jo
aas
mov
test
stc
hlt
in
jge
jg
mov
insb
shlb
jo
aas
cmp
es
lods
dec
jns
imul
cmp
jo
sub
inc
js
push
int3
and
push
jg
aas
iret
jne
cmc
dec
sbb
iret
lret
mov
push
lock
push
roll
pop
lods
loopne
mov
xchg
out
fimull
aas
divl
aas
iret
out
jbe
or
int3
jo
aas
pop
lret
leave
ret
data16
dec
rcll
jmp
lahf
leave
sbb
iret
jo
cmp
inc
xchg
aaa
or
ret
sub
adc
xor
jo
aas
mov
cmp
gs
loopne
lahf
mov
inc
je
fisttpl
outsb
sti
into
push
push
add
sarl
adc
loop
sbb
jne
rcr
inc
mov
or
test
in
ret
outsl
ret
fs
enter
dec
and
aas
dec
test
push
mov
lret
stc
cs
lods
ret
or
mov
test
icebp
sbb
mov
orb
pop
sub
jl
cmpsb
dec
mov
inc
cs
sbb
mov
sub
mov
test
mov
test
in
inc
mov
xchg
fnstenv
inc
jge
scas
dec
mov
push
fildl
test
xor
call
xadd
test
push
jecxz
mov
test
mov
test
mov
test
mov
test
inc
sub
mov
int3
cwtl
inc
mov
mov
mov
into
pop
mov
adc
dec
mov
popf
lods
dec
mov
pop
add
mov
dec
jae
lods
dec
mov
lods
dec
adc
xchg
mov
fsubrl
outsl
mov
ror
leave
test
inc
pop
xor
mov
scas
and
mov
outsb
dec
aam
aaa
dec
mov
ret
mov
cmp
int
mov
sbb
add
int
aas
cltd
ret
cmp
les
adc
pushf
xlat
ficomps
pushf
sbb
mov
scas
pushf
dec
outsl
push
adc
inc
sub
dec
adc
cmp
je
push
push
sbb
aas
mov
int
aas
std
leave
ret
lret
popa
enter
xchg
inc
sub
pop
add
adc
lret
push
leave
test
inc
pop
xor
mov
outsb
cmpsb
aam
xchg
dec
mov
pop
xorb
les
xlat
idiv
std
int3
sub
aas
lods
sub
xor
dec
mov
pusha
dec
mov
test
mov
test
mov
test
pushf
sbb
sub
inc
cwtl
jno
dec
mov
mov
mov
mov
xchg
mov
sti
or
mov
mov
mov
dec
popf
and
or
ret
cmpsl
fidivrl
int3
pop
jb
iret
out
add
inc
mov
mov
ret
pusha
movsb
jb
shll
push
xchg
jecxz
into
test
mov
ficompl
iret
out
add
inc
mov
mov
jge
insl
inc
jo
test
mov
ficompl
iret
out
mov
jae
mov
mov
inc
ret
movsb
sbb
dec
pop
lret
test
add
leave
mov
jl
stos
dec
mov
stos
js
leave
ret
cmpsl
fidivrl
int3
pop
jb
iret
out
add
int
dec
mov
jbe
mov
test
out
stos
imul
enter
les
icebp
mov
pop
pop
inc
gs
xlat
dec
mov
inc
cld
stos
sbb
add
xlat
ret
add
pop
pop
inc
gs
rorb
jnp
repz
fbld
mov
mov
add
cltd
scas
test
mov
sahf
inc
mov
test
mov
test
jecxz
cmp
sub
adc
mov
ret
cmp
stos
mov
aam
repnz
and
xchg
or
cmp
pop
inc
stc
and
movsl
mov
test
cmp
popf
int3
repnz
add
pop
dec
and
mov
add
mov
loope
mov
test
dec
jb
mov
cmp
add
mov
pop
mov
pushf
pop
mov
add
stos
pusha
inc
nop
mov
fistl
pop
xor
rcll
leave
xchg
sbb
popf
ret
push
ds
push
jmp
add
xor
xor
shr
jno
lret
fimuls
int
dec
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
lods
dec
in
inc
dec
mov
lea
dec
mov
test
lret
dec
mov
test
mov
mov
mov
test
mov
test
mov
test
mov
test
mov
jns
mov
repnz
cmp
xchg
clc
dec
and
fbld
lret
sub
jecxz
outsl
ds
jp
aam
popf
xchg
ret
and
jg
mov
lods
aad
inc
icebp
in
stos
icebp
out
lcall
cmp
and
fsubrs
mov
xor
adc
jbe,pn
sbb
mov
aas
inc
xor
jle
je
xchg
cmp
mov
add
xchg
push
mov
lahf
orl
pop
push
sbb
jnp
es
cmpb
insb
jmp
sub
stos
xchg
mov
xchg
sub
xor
bound
jle
and
neg
inc
mov
fs
rclb
outsb
and
insb
xchg
test
push
out
push
add
fists
outsb
inc
push
inc
add
sbb
into
xor
mov
aam
movsb
inc
fisubrl
sub
aam
mov
push
jle
xchg
outsl
inc
pop
hlt
orl
aaa
xchg
xchg
sarl
not
adc
hlt
std
lock
sbb
dec
popf
mov
loop
daa
jp
inc
push
push
movsb
loope
dec
in
mov
test
push
cmp
inc
pop
sti
inc
into
sahf
inc
insb
ret
setnp
xor
sahf
sbb
cs
push
fbld
gs
adc
repz
pop
mov
std
enter
inc
lds
loopne
inc
add
or
movsl
xor
es
mov
mov
or
fs
insl
lods
fisubrl
mov
out
xlat
lods
jg
add
and
xor
imul
xor
xor
stc
pop
xchg
xor
pop
xor
in
xor
push
inc
xchg
int
inc
mov
inc
mov
pop
aas
divb
jne
lahf
cmp
shr
mov
nop
mov
mov
pop
mov
pushf
inc
scas
aas
scas
les
lods
jbe
fnstsw
adc
insb
in
mov
test
bound
jecxz
xchg
xor
pop
fdivrs
call
or
mov
inc
or
add
pop
in
jecxz
mov
cmp
xchg
xchg
inc
xchg
outsb
jno
dec
stos
cmpsl
sahf
and
sbb
mov
xor
jl
mov
stc
les
sub
xchg
ret
in
lcall
xchg
cmpsl
push
dec
jno
or
mov
xor
xchg
dec
pop
mov
js
flds
mov
testb
cmp
arpl
out
into
imull
dec
icebp
and
add
add
add
mov
add
mov
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
mov
add
mov
add
mov
add
add
add
or
aaa
add
add
or
aas
add
add
add
or
pop
mov
add
or
arpl
or
outsb
mov
add
or
jnp
or
addr16
add
add
add
add
add
add
or
test
or
xchg
add
mov
or
add
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
add
add
add
add
add
add
jb
imul
add
jbe
jo
xor
cs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
outsb
insl
insl
cs
insb
add
xor
xor
fs
insb
add
imul
fs
insb
add
jbe
jo
xor
cs
insb
add
jb
fs
insb
add
gs
insb
xor
cs
insb
add
popa
arpl
xor
fs
insb
add
outsb
imul
insb
add
gs
xor
fs
insb
add
imul
insb
add
outsl
arpl
xor
fs
insb
add
gs
jne
xor
cs
insb
add
jbe
ja
xor
fs
insb
add
popa
addr16
insb
insb
add
gs
jne
xor
cs
insb
add
insl
arpl
xor
fs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
add
nop
or
add
add
adc
add
and
add
add
or
add
add
aas
nop
or
add
add
pop
nop
or
add
add
push
or
add
add
jns
or
add
add
lea
add
mov
add
add
add
add
nop
or
add
add
xlat
nop
or
add
add
in
or
add
add
cli
nop
or
add
add
or
add
sbb
add
add
add
add
or
add
add
pop
xchg
or
add
add
add
push
gs
jne
jb
push
popa
insb
jne
inc
add
add
popa
jb
push
gs
imul
inc
jb
popa
je
push
imul
inc
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
add
jbe
dec
jne
push
jb
je
add
add
inc
dec
outsl
arpl
add
arpl
inc
jb
popa
je
inc
popa
jo
jne
gs
imul
add
push
gs
gs
popa
insb
jne
inc
js
add
add
gs
gs
jae
jb
add
add
gs
insb
pop
dec
outsl
je
data16
arpl
inc
add
add
insl
inc
outsl
jb
popa
je
push
inc
add
add
je
jb
gs
gs
fs
imul
je
gs
outsl
popa
jb
push
jns
add
add
jb
popa
insb
imul
arpl
add
inc
inc
insb
gs
outsb
jne
add
add
gs
jb
popa
jns
je
dec
dec
outsb
fs
add
inc
jb
ja
imul
add
inc
push
jne
dec
popa
jo
gs
imul
jae
jb
gs
je
imul
insl
popa
addr16
imul
dec
arpl
push
imul
popa
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
mov
push
push
add
add
add
inc
repnz
adc
mov
sbb
cmp
fs
stos
jno
or
out
add
data16
mov
jne
iret
notl
push
pop
ds
popf
xor
call
test
in
sbb
jnp
fldcw
push
jp
ljmp
in
sar
push
sub
pop
pop
mov
push
push
es
cmpsl
or
int3
rcrl
jmp
mov
pop
cmpsl
mov
dec
out
jl
shll
mov
movsb
idiv
add
pop
mov
mov
mov
ret
sub
arpl
xorl
pusha
leave
or
test
jae
mov
out
fsubl
lea
mov
lods
add
gs
push
popa
jne
sub
lea
pop
das
sub
into
lret
lret
outsl
pop
in
sub
fwait
inc
mov
dec
mov
cli
scas
mov
add
cmp
mov
fistps
pop
insb
or
sbb
adc
in
es
imul
mov
inc
mov
mov
push
out
mov
lock
out
inc
jle
stc
xchg
adc
mov
ljmp
lods
imul
insb
int
lods
jo
jecxz
adc
sbbb
adc
lock
test
mov
cmovb
imul
mov
sbb
or
jmp
mov
pop
rclb
ficoms
mov
sub
pop
push
dec
inc
stos
rcrb
inc
aam
insb
push
add
stc
add
push
xor
push
pushf
mov
rorl
in
sahf
imul
push
push
icebp
sar
and
dec
adc
call
pop
jecxz
xor
inc
mov
mov
into
icebp
inc
inc
insb
into
lds
inc
xchg
cld
push
mov
inc
jle
adc
js
sahf
sub
xchg
ret
mov
xchg
std
add
shlb
pusha
out
cmovbe
clc
dec
xlat
outsb
sbb
in
test
or
std
js
dec
cmpsl
in
or
sarb
ret
mov
mov
mov
jno
popl
adc
mov
xor
mov
or
mov
inc
lret
push
push
mov
sbb
xorb
sub
mov
pop
orl
imul
mov
jno
dec
or
pop
lahf
and
adc
xchg
loopne
cli
mov
negl
add
mov
leave
pop
fadd
sahf
adc
cmpsb
in
pop
push
xor
add
lods
jb
inc
fistps
in
sbb
sti
test
mov
and
ret
jae
and
jecxz
jmp
test
fs
in
jg
dec
mov
add
jo
outsl
mov
outsb
enter
adc
lcall
or
ds
lds
jmp
mov
xor
add
shr
mull
loopne
mov
pop
push
push
fwait
inc
icebp
jmp
inc
aaa
sbb
aam
popa
push
xor
mov
inc
test
mov
xor
test
loop
mov
or
jg
cmpsb
div
mov
sbb
jle
imul
pop
pop
orb
or
leave
andb
cmpsl
pushf
daa
xor
xchg
mov
pop
scas
mov
cmc
push
clc
pop
repnz
xchg
aaa
imul
pop
sub
lret
lods
movsb
xchg
sarb
movsb
adc
pop
dec
mov
daa
xchg
xor
cmp
mov
push
jnp
and
movb
pop
jb
lds
sbb
bound
jmp
in
pushf
sbb
ljmp
cmp
cli
dec
mov
sbb
lds
push
fistl
mov
dec
roll
and
mov
js
adc
pop
jp
xor
add
mov
notb
sbb
enter
int
cltd
mov
mov
mov
test
mov
hlt
mov
lea
out
mov
push
hlt
pushl
mov
loopne
je
pop
imul
pusha
lahf
inc
mov
jle
cli
movsl
push
cld
lods
mov
dec
push
test
iret
inc
call
ja
pushf
push
jg
mov
mov
pop
dec
and
pop
into
cmp
sub
mov
push
mov
fnsave
pop
cltd
pop
aad
xor
lea
jbe
in
pop
inc
xor
or
xor
std
into
shll
mov
imulb
xchg
jecxz
jl
xor
inc
testb
inc
addr16
push
and
sbb
mov
mov
imul
das
cmpsl
std
mov
mov
add
xor
idiv
stos
negb
adc
push
dec
xor
cmp
mov
bound
popf
add
hlt
xchg
imul
mov
repz
in
sarl
out
sub
int3
andl
outsl
insb
sbb
scas
dec
xor
xor
stos
mov
fisttps
shll
mov
xchg
mov
test
push
lock
lods
ret
lds
sbb
dec
xor
leave
jb
lcall
movsb
push
mov
clc
mov
add
xor
sahf
repz
and
pop
es
adc
mov
jp
xorl
mov
lods
xor
lds
andl
pop
dec
sub
loop,pn
jg
int3
push
or
enter
int3
outsb
xchg
inc
pop
add
jl
push
loopne
dec
sbb
movsl
cmpsb
dec
or
lcall
into
xchg
stos
loop
jne
cmc
fstp
mov
mov
out
popf
jecxz
jno
jnp
enter
jge
pop
nop
decl
stc
mov
test
sbb
loope
loop
and
or
inc
mov
pop
add
aaa
dec
aam
and
sbb
stos
into
jg
jmp
leave
mov
inc
sbb
lahf
call
cld
mov
shlb
mov
xchg
pop
jmp
adc
icebp
ret
push
les
sub
repz
stos
incb
push
popf
dec
jbe
ljmp
jne
jl
or
addl
fucomi
mov
or
or
jg
lock
into
add
pop
pop
imul
lcall
leave
mov
sbb
mov
jmp
jle
out
dec
enter
push
jmp
dec
sbbb
addr16
ret
movsb
sub
mov
lds
fdivs
insl
sbb
jmp
gs
test
jbe
ljmp
jp
int
int
cltd
cmpsb
pop
inc
aad
or
iret
rcrl
cmp
out
imul
cli
pushf
xchg
dec
mov
push
pop
adc
cmp
mov
xchg
nop
cltd
ds
arpl
js
scas
aaa
stos
js
test
push
pop
repnz
xchg
into
push
inc
push
push
jb
xor
loope
js
call
xor
pop
adc
sti
outsb
mov
sub
and
imul
loope
fcomps
lcall
adc
push
xlat
outsb
cmp
xchg
lahf
adc
lods
pushf
mov
adc
add
inc
popf
xchg
mov
fmul
dec
push
cmpl
mov
xlat
pop
lahf
iret
test
gs
xchg
push
andl
mov
xor
loop
ds
in
inc
insb
loop
fisttpll
loope
mov
scas
mov
je
test
sbb
in
push
out
fstpl
lods
cld
inc
mov
bound
xchg
inc
xor
pop
jns
cmpsl
xor
sarb
pop
loope
cmc
add
sbb
add
cmpsb
sbb
jns
pop
and
loope
lea
xchg
mov
int3
xlat
sub
lea
les
and
jae
push
mov
push
mov
inc
insb
push
pop
cmpsl
loope
push
or
fldcw
fsubs
pop
call
test
dec
add
mov
mov
fs
jle
push
pop
mov
dec
sub
scas
xchg
mov
test
mov
movnti
pushf
and
sbbb
test
cwtl
mov
imul
adc
loope
mov
dec
push
jae
jecxz
xchg
mov
xchg
fwait
jns
mov
int3
push
clc
xor
xor
rol
ret
fmul
mov
sub
out
fisttpl
cltd
aaa
pushf
in
inc
inc
in
dec
mov
xor
or
cltd
dec
call
test
lods
adc
sbb
aaa
test
outsb
cltd
inc
pop
leave
lds
ds
sub
insl
dec
or
pusha
mov
dec
test
pop
in
mov
stos
test
pop
sbb
out
cli
shr
sub
in
pop
and
cli
ret
bnd
sbb
adc
and
lahf
scas
invlpg
pushf
xchg
or
xor
andb
mov
je
sti
pop
mov
cmp
add
mov
add
xor
mov
fs
mov
inc
les
xchg
xchg
hlt
shll
fildll
lock
into
cmc
mov
fs
and
sub
fs
xchg
jge
xchg
iret
or
push
cmp
outsb
and
push
test
add
dec
jl
enter
mov
mov
xor
push
pusha
fcoms
jecxz
adc
scas
cmc
push
xchg
inc
addr16
jle
fwait
lds
pop
fadds
mov
mov
and
sbb
jo
pop
mov
nop
jle
lahf
jg
inc
cwtl
sub
stos
sub
xchg
cmp
in
roll
lock
sub
or
xchg
lcall
cwtl
cwtl
insl
pushf
loop
rolb
shrb
xchg
xor
xchg
mov
sub
pushf
scas
sub
adc
fdivs
lods
pop
add
jmp
mov
sub
clc
shrl
push
jge
jnp
and
jmp
lret
hlt
in
out
shll
shl
rorb
testl
fnsave
into
loop
jnp
lds
jp
push
outsb
lahf
mov
sbb
cmp
dec
mov
or
ret
push
in
add
stos
lds
and
cmp
hlt
add
fsubrl
push
sbb
les
and
iret
adc
pusha
adc
into
xorl
aad
sti
sbb
add
mov
push
into
ljmp
mov
push
lds
insl
add
cmp
aas
mov
lahf
cmpb
xchg
pop
jae
sbb
rol
xlat
mov
fidivl
dec
rorl
mov
mov
pop
push
jo
xchg
dec
ja
push
sbb
fs
ret
fdivrs
jno
jne
fldl
jle
mov
pop
insl
mov
adc
ret
mov
jbe
cmp
int3
cwtl
andb
and
mov
fwait
dec
addr16
test
mov
inc
dec
xlat
repnz
popa
gs
insb
cmc
ss
xchg
in
inc
dec
ja
nop
mov
je
add
mov
push
mov
mov
in
and
pop
js
imul
call
mov
adcb
jge
xchg
or
adc
data16
push
add
gs
repz
add
lock
insb
cltd
jno
jae
dec
mov
cmc
enter
dec
hlt
add
movsl
ljmp
in
mov
mov
scas
xor
stc
fcoms
sub
dec
test
push
xor
imul
into
jl
mov
scas
add
xchg
popf
lret
push
push
xor
in
lret
aam
or
push
rclb
inc
pop
sub
mov
out
arpl
fistpll
adc
jae
mov
lcall
push
and
xor
dec
xchg
cmp
nop
mov
cmp
out
pop
mov
cli
sub
repnz
cld
cld
mov
lods
fmuls
jno
inc
sub
xchg
xor
mov
xchg
repnz
jo
pop
fnsave
jp
cmp
daa
push
mov
or
pop
lea
pop
sbb
aad
and
pushf
rcrb
jl
xor
jae
jmp
scas
adc
lock
jno
iret
and
int
mov
pop
mov
jnp
xchg
popa
popf
push
pop
mov
je
je
xlat
pop
test
incb
mov
subl
lea
sti
dec
in
push
or
lods
orb
push
shl
and
and
dec
dec
jecxz
cmp
inc
ret
inc
fwait
clc
dec
int
sbb
mov
rcr
cmc
sti
mov
mov
scas
scas
mov
das
int3
add
xor
out
insl
out
aam
cmpb
loopne
lock
xor
test
pop
dec
filds
cvttps2pi
cmp
jecxz
mov
movsb
sarl
scas
outsb
lahf
bound
mov
add
and
addr16
jne
pushf
adc
dec
fsubrl
div
or
mov
shll
in
int
mov
xor
retw
fldl
iret
sub
iret
addr16
hlt
clc
icebp
and
push
xor
ja
cmp
dec
dec
push
mov
pop
imulb
mov
jns
cmp
out
loop
stos
cmp
sbb
rcll
push
pop
mov
fistl
jg
xchg
movsl
or
insb
std
push
sbb
ja
dec
fucomi
inc
inc
jg
sub
test
scas
subl
lahf
add
cmp
ret
pop
dec
cmp
dec
jmp
mov
sub
adc
or
jo
rolb
pop
shlb
push
xor
push
loope
inc
into
xchg
orl
dec
pop
and
pop
scas
fmuls
and
add
xchg
push
insl
add
pop
mov
mov
or
jg
cmp
push
inc
loopne
rcrb
fistl
mov
int
jmp
lret
dec
fwait
or
or
lock
lods
in
icebp
dec
cltd
or
cmpsb
int
xor
inc
pop
fwait
dec
add
and
jb
adc
xlat
jno
xchg
shlb
gs
loop
scas
cli
cmp
jae
xor
xor
add
push
lods
pop
dec
rcrb
jae
push
fimuls
jmp
lret
cmp
orb
insb
add
lret
les
repnz
cwtl
dec
cs
fmuls
xchg
adc
testl
jl
int
pop
inc
stos
cs
fs
dec
imul
dec
and
test
cmp
xchg
cltd
call
rcll
mov
mov
lahf
push
pop
adc
addr16
and
push
push
or
mov
out
lret
cmp
popf
std
mov
mov
or
inc
mov
fnstsw
stos
ds
inc
mov
add
pop
or
leave
js
mov
xor
popf
fsubrp
inc
jecxz
icebp
xor
adc
aad
inc
or
pop
jns
or
sub
loope
mov
cmpb
pop
scas
mov
fistpl
cli
les
mov
xor
xchg
mov
fdivl
mov
add
jns
xlat
lods
aad
jae
sbb
pop
xor
add
data16
push
ds
shr
dec
pushf
pop
dec
adc
adcb
into
sbb
rolb
std
xorb
inc
out
hlt
dec
cld
mov
cmp
mov
mov
pop
or
jl
pop
pop
clc
sahf
aas
rcr
mov
mov
test
sub
xor
mov
sbb
adc
repnz
lcall
adc
daa
int3
imul
or
jp
pop
and
jbe
cmp
dec
mov
xor
ret
cli
xchg
add
jmp
bound
sahf
sub
lods
mov
inc
ljmp
inc
pusha
movsl
mov
mov
cld
imul
mov
lret
scas
lock
nop
push
mov
mov
stc
pop
cmp
lock
sbb
aas
data16
xor
fcompl
ljmp
pop
leave
popa
fistpl
mov
lock
gs
test
cmpsb
sub
sub
dec
pop
imul
bound
jbe
push
aad
je
fdivrl
jle
cmp
dec
aaa
negl
sub
in
push
push
xlat
into
dec
adc
aad
xchg
fs
lds
addr16
mov
mov
and
sbb
lcall
mov
cmpsl
push
pusha
psrad
lods
xor
lahf
outsl
pop
in
jle
push
lahf
mov
out
jmp
fstl
fidivrs
aas
shlb
dec
jo
daa
orb
push
orl
les
add
in
cli
push
popa
std
mov
pop
or
cmp
inc
push
pop
inc
adc
aas
sbb
add
push
xor
sub
repnz
loope
jo
cmp
inc
fwait
rcll
and
jl
icebp
cmp
inc
in
mov
xlat
test
leave
xor
sarb
mov
divb
sub
push
adc
mov
inc
cmc
sub
test
jmp
fidivl
mov
das
lret
jne
stc
xor
and
stos
dec
stos
pop
dec
mov
in
adcb
cld
xchg
clc
push
sbbl
fbld
mov
sub
sbb
notl
xchg
popl
xchg
cmpsl
pop
inc
push
adc
push
ret
pcmpeqd
xchg
iret
das
xchg
push
mov
fdivrl
psubb
jp
into
divl
pop
pop
dec
vpaddw
sbb
out
das
movsl
jmp
xlat
jno
stos
cltd
adc
cmp
pop
mov
push
cmp
int3
jae
push
std
notb
test
add
out
mov
daa
ret
enter
je
es
shll
aas
or
push
inc
mov
sti
movzbl
iret
mov
sub
jne
sub
mov
mov
fmuls
dec
or
dec
fistps
loop
mov
test
jb
mov
outsl
repnz
xor
push
cwtl
loop
inc
hlt
pop
fdiv
cmp
push
movl
jbe
fs
call
call
cmp
sti
stos
lret
repz
movsb
mov
mov
push
push
lahf
or
sbb
add
cmp
or
mov
sub
aaa
push
sub
adc
int3
shlb
shrl
push
in
inc
push
or
fs
in
pop
xor
xor
push
sbb
stc
arpl
lock
push
fcomp
test
and
adc
xorb
std
lahf
out
cmp
je
jg
mov
inc
dec
les
test
ficoml
clc
mov
icebp
arpl
outsl
xor
dec
cmp
jno
fnsave
xchg
jno
test
mov
pop
push
lcall
inc
xchg
pop
call
mov
jns
in
lock
fldt
fnsave
inc
adc
aad
pop
sbbb
jle
es
or
mov
lfs
sbb
rcll
and
sbb
or
sbb
ljmp
stc
test
adc
dec
inc
push
leave
sub
ret
int
mov
outsb
cmp
mov
into
les
sahf
call
leave
lret
dec
imul
pop
rorb
lea
dec
mov
test
and
push
std
mov
xchg
sub
mov
add
pushf
push
lods
fcoml
hlt
repz
fmuls
bound
nop
and
rolb
mov
mov
repnz
xchg
cld
pop
cwtl
int3
jg
inc
stc
gs
mov
push
pop
sub
test
lahf
mov
xchg
push
and
test
mov
enter
xchg
stc
lods
mov
bound
push
xor
insb
sub
hlt
dec
xor
xchg
sub
imul
adc
xchg
rcll
pusha
inc
lods
mov
sub
push
jg
adc
xor
sub
or
ss
jge
sub
out
repz
jg
xchg
sti
mov
cmp
cmp
int
inc
fs
cmpsb
mov
shrb
das
push
xchg
aas
jno
imul
test
sbb
pop
mov
jns
fidivs
dec
mov
mov
jns
cmp
out
mov
fcoms
xor
mov
or
mov
les
jg
mov
or
out
insb
mov
and
mov
into
jno
cmpsl
cwtl
in
cmp
pop
add
cld
mov
ss
jp
rcrb
push
jbe
out
outsl
jo
push
and
adc
mov
inc
movl
add
xor
push
mov
das
fxch
mov
push
jle
pop
lds
movsb
cmp
test
jb
pushf
xchg
cmp
je
xchg
fdiv
sub
into
mov
push
dec
jmp
leave
lods
and
mov
rcll
sub
nop
das
inc
jle
dec
adc
jbe
xlat
or
loopne
adc
mov
xlat
cld
push
mov
pop
push
mov
clc
sub
ja
jno
popf
movsb
idivb
push
xor
pop
orl
in
inc
dec
or
xor
push
sbb
dec
pop
out
mov
andb
jecxz
mov
fadd
loop
jle
mov
or
iret
cmp
stos
imul
ja
mov
inc
push
jmp
imul
pusha
pop
mov
add
sbb
sub
pop
jbe
test
arpl
out
out
jp
dec
test
rcll
mov
hlt
jge
sub
add
xchg
insb
add
in
fcmovne
dec
scas
aad
ds
xchg
cmp
mov
push
jnp
int3
cmpsb
insl
mov
adc
out
mov
sbb
test
int3
xor
sti
jne
adc
imul
jge
sbb
add
into
ds
fcompl
xor
shll
sub
mov
jecxz
xchg
lods
out
pop
ljmp
and
ret
ret
call
loope
xchg
cmp
ja
pop
mov
add
stos
aaa
jecxz
les
adc
fwait
sub
fs
xchg
jb
repz
popa
mov
mov
cli
pop
mov
mov
popa
sar
pop
push
sub
mov
dec
add
dec
cmpsb
jae
mov
fdivrl
pusha
outsl
test
mov
push
leave
fwait
pushf
inc
loop
cmp
and
sub
jp
insl
jle
mov
movsb
gs
or
pop
int3
xchg
push
ret
cmpsl
cmp
cmc
mov
xchg
mov
fs
and
jecxz
jbe
frstor
dec
ljmp
jne
in
imul
negl
popa
int
jno
sub
mov
sub
fadd
cmp
ror
mov
add
lds
js
loope
adc
popa
fsubl
mov
jne
xor
out
sbb
lock
or
mov
into
jge
sar
loop
add
push
clc
jo
add
cmp
cmpsl
ja
mov
stc
jbe
xchg
xor
cs
lea
sub
adc
mov
or
loopne
ret
cmp
loopne
fs
imul
in
daa
loopne
mov
ret
sub
stos
pop
mov
jo
inc
pop
mov
add
add
leave
cmpsl
xchg
bound
ret
out
mov
in
or
bound
mov
jo
mov
cli
in
adc
mov
adc
push
repz
sub
inc
push
popf
das
push
mov
lods
clc
pop
dec
push
push
cli
test
pop
adc
sbb
jl
add
in
lods
mov
stc
in
xchg
or
mov
aad
cmp
or
ja
jnp
orps
sti
jge
push
shl
roll
mov
hlt
das
xorl
roll
cs
shrl
cmp
shrl
or
shll
push
ss
mov
fwait
xchg
or
fwait
mov
xchg
ret
popa
sbb
loop
mov
gs
loopnew
mov
push
dec
in
mov
imul
insl
adc
jg
in
add
aas
sub
pop
adc
jmp
jmp
push
je
or
sahf
imul
inc
fidivl
or
fs
cld
mov
stos
shrl
mov
xor
pop
ret
xchg
pop
xchg
mov
nop
mov
ret
add
cmc
pop
rep
add
ds
test
stos
popf
sbb
pushf
loope
mov
push
jnp
ret
hlt
stos
das
mov
cmp
inc
and
adc
dec
cmp
pop
add
leave
push
mov
jae
push
mov
mov
jo
mov
mov
jne
addb
dec
dec
pop
stos
push
aad
ret
nop
xor
cmp
sbb
mov
jns
push
lds
out
mov
xor
pop
lods
cmp
std
push
or
in
jbe
mov
decb
shll
xchg
add
mov
movsl
and
addr16
add
add
sbb
std
out
fmull
sub
test
cmp
inc
xor
cmc
jo
adc
std
pusha
mov
ret
lods
sub
loop
es
mov
adc
test
ret
aad
outsb
add
pop
push
andb
xchg
mov
call
push
push
aas
inc
inc
mov
inc
inc
add
movsb
bound
inc
outsl
push
js
daa
stos
aam
inc
enter
rol
mov
push
test
push
inc
addl
addr16
push
add
or
mov
test
lret
push
ret
outsl
xor
arpl
inc
push
mov
arpl
test
adc
scas
sub
and
lret
mov
mov
push
jp
xor
and
adc
or
cltd
imul
loopne
mov
arpl
xchg
je
in
stos
test
addr16
mov
xor
pop
xor
dec
test
lea
sbb
jne
out
xchg
adc
xabort
rorb
or
inc
and
adc
in
ffree
data16
mov
movb
cmp
sbb
pop
push
test
pop
loop
enter
int
push
loopne
cmp
mov
std
dec
jae
test
lret
js
rcrl
pop
push
lcall
fisubrs
pop
cltd
cmpsb
jne
dec
add
sub
out
movsb
cmpb
in
sub
and
adc
arpl
mov
int3
divl
js
lds
test
jle
dec
pop
mov
lods
sub
lahf
cmp
int
shll
int
orb
push
xchg
cmp
rclb
nop
xor
xchg
mov
stos
xor
jae
pop
cwtl
dec
filds
pop
stos
test
pusha
cltd
xor
push
fsub
or
fcmovu
je
std
pop
cwtl
and
push
ret
dec
shrb
jno
add
icebp
adcl
jmp
push
jle
mov
cli
fiaddl
add
jle
icebp
popa
sbb
xchg
xchg
loopne
mov
call
in
notl
pop
in
dec
sti
stos
cmp
mov
jp
int3
out
and
rorl
int3
lret
cmp
cmp
cmpl
mov
sbb
cmp
cmc
xchg
shlb
scas
std
rcrl
scas
and
jbe
push
xchg
cs
xchg
sbb
popa
inc
ficompl
outsb
mov
outsl
repnz
loopne
cmp
addb
mov
and
and
xchg
dec
rcrb
inc
push
push
cld
lods
inc
or
lds
ljmp
add
sbb
mul
enter
ret
and
push
out
stc
test
movsb
jle
or
xor
jmp
out
fidivrl
jae
lcall
in
push
dec
mov
jecxz
fwait
ja
or
inc
test
incl
mov
inc
jle
hlt
inc
stos
cltd
lods
adc
ret
jae
pop
cmpsb
inc
xchg
jg
and
outsb
es
sbb
rol
jmp
nop
cmpsl
sbb
jb
ffree
sbb
pop
dec
push
shll
imul
jbe
cmpsl
xor
mov
repnz
push
jge
cld
cmp
ret
std
sbb
inc
pop
jmp
out
mov
fimuls
add
fcomps
mov
fldt
mov
inc
mov
sbb
adc
insb
adc
test
jb
push
insb
cmc
jp
pusha
pushf
out
mov
in
jnp
lods
sub
lahf
cmp
jl
ror
and
loop
insb
cli
jmp
pop
add
push
push
in
movb
fistpll
leave
jl
xchg
adc
cmc
bound
mov
sbb
es
lds
mov
sar
mov
add
jb,pn
sub
mov
arpl
jbe
dec
or
mov
xchg
ja
hlt
push
loopne
inc
lods
and
jg
or
addl
dec
mov
mov
adc
mov
mov
cmp
shll
fldcw
mov
cmp
pop
sarl
mov
xchg
inc
cltd
mov
mov
cmp
mov
mov
mov
mov
or
push
push
stc
rcl
sub
jae
pop
aas
addr16
mov
popl
ss
insl
and
aaa
pop
mov
cmpsb
int
decl
arpl
mov
mov
pop
cwtl
in
and
sub
test
sbbb
mov
jo
sbb
and
and
lock
mov
fwait
xchg
stc
push
mov
pop
cld
or
adc
scas
mov
jne
xor
cmpsl
loope
xchg
pop
jp
cmpsb
mulb
lret
pusha
and
into
out
in
sbb
fadds
push
mov
scas
push
dec
cmpsl
mov
pop
jmp
pop
add
std
ja
mov
mov
lods
hlt
push
aam
scas
mov
dec
aam
mov
dec
cmp
jnp
subl
cmp
loop
xchg
sub
lods
mov
ljmp
nop
cmc
sbb
pop
sarb
push
jae
sub
es
jmp
lock
jg
ja
js
call
push
testl
cltd
ljmp
push
das
popa
jb
sub
or
cmp
pop
mov
repz
fstl
jbe
sarl
in
insl
or
jbe
jno
clc
mov
push
repz
les
or
ror
jg
fdivp
out
hlt
cmp
add
outsb
cld
cltd
adc
stc
out
or
das
mov
pop
push
das
sbb
fwait
sbb
sub
inc
rclb
xchg
aas
insb
ja
dec
aas
sbb
adc
or
jg
fimull
aaa
rcr
push
or
ljmp
xchg
xorl
mov
cmp
enter
and
pop
orl
sbb
cmp
pusha
cmp
lds
jae
test
mov
xchg
sbb
out
xchg
mov
testl
mov
xor
jecxz
mov
cmp
shll
test
sbbl
add
mov
lods
rol
loope
adcb
mov
cmc
out
in
dec
xor
mov
adc
ret
sub
loope
cmp
inc
cs
enter
sti
leave
cld
ss
repnz
push
addr16
push
dec
sub
jge
shlb
push
push
mov
push
inc
andb
pushf
xor
mov
cld
jo
cwtl
lods
aad
jae
mov
test
and
push
in
fsubs
cwtl
pop
and
dec
in
pop
cmpsl
jl
in
cli
push
ret
cmp
outsl
pop
repz
rorl
outsl
jb
leave
ret
cs
xorb
addr16
add
aaa
stos
mov
xor
sahf
bound
ficompl
push
lcall
lahf
js
mov
inc
or
jb
imul
fstps
xchg
and
xor
push
sub
xchg
xlat
cmp
repz
add
sarb
push
cmc
push
gs
dec
xchg
pop
loope
mov
mov
aad
ret
mov
jae
mov
cmpsb
jae
dec
inc
cwtl
xchg
jb
push
inc
int3
shl
nop
jge
sbb
js
aam
sbb
jbe
mov
je
lods
push
inc
cmp
inc
push
dec
ss
enter
and
dec
call
jno
inc
into
mov
pusha
mov
add
and
lret
xchg
aam
shlb
aas
mov
jne
sbb
inc
jg
and
mov
lret
icebp
add
insl
and
ror
movsl
lcall
xchg
mov
xor
out
lcall
test
cmp
push
mov
leave
popf
clc
stc
outsl
xorb
test
mov
sarl
and
inc
sbb
nop
sbb
push
pop
test
daa
sub
pop
jmp
dec
or
mov
js
es
xor
pop
sbb
sbb
movb
ud0
sbb
lods
shll
sub
dec
inc
scas
or
fwait
push
aaa
insb
int3
fidivs
dec
loope
test
jbe
add
and
aad
xor
ret
outsl
in
scas
out
inc
loopne
mov
mov
sbb
inc
les
fidivs
movsb
push
mov
sbb
jne
mov
xor
mov
mov
add
fadds
mov
fisubrs
fimuls
mov
in
nop
push
xchg
dec
xor
sbb
clts
rclb
ret
adc
jl
pop
insl
fimull
and
push
and
dec
leave
aaa
mov
ss
and
push
test
cmp
shrl
sbb
jmp
iret
lret
jns
push
mov
call
pop
lcall
pop
cwtl
inc
pop
ds
sbb
out
add
clc
mov
pop
std
insb
je
jbe
jno
call
mov
pop
pop
xchg
adc
repnz
rcr
icebp
mov
xor
cltd
and
xor
sbb
insb
xor
clc
and
inc
in
sahf
pop
cmpsl
jae,pn
push
push
xor
xchg
adc
xchg
int3
in
test
into
or
mov
sbb
push
and
adc
pop
adc
pop
bound
movsl
enter
mov
push
fstpl
faddl
and
les
sub
fimuls
jge
mov
fwait
and
sbb
repz
outsl
sbb
mov
pop
mov
sub
nop
xlat
mov
inc
add
push
mov
sti
dec
mov
add
adc
pop
cmp
sbb
gs
lods
stos
mov
cmp
push
mov
lret
mov
sbb
cmp
sub
stos
push
ret
xchg
cwtl
sbb
arpl
mov
push
pushf
xchg
test
sub
add
cmp
test
out
clc
xchg
sbb
dec
jno
add
push
mov
pop
aaa
push
xor
push
adc
out
scas
js
sahf
scas
sbb
daa
rcrb
push
cmpsb
enter
mov
pop
fbld
mov
jmp
outsb
aad
fnstsw
xchg
fstps
dec
xor
insl
cmp
rcrb
jle
xchg
fbstp
pop
cmpsl
dec
scas
or
sbb
inc
cwtl
pop
dec
fs
movsb
stos
cmp
imul
and
push
mov
jp
fisubs
cltd
mov
mul
mov
sbb
in
push
mov
inc
pop
imul
mov
stos
nop
pop
mov
pop
mov
jns
or
inc
jp
sbb
sub
loopne
daa
movsl
mov
scas
ret
fisttps
mov
mov
je
mov
insl
shl
mov
push
gs
xchg
js
sbb
mov
mov
cs
orl
pop
push
lock
fnsave
sub
mov
adc
mov
inc
movsl
stc
ss
js
cmp
rorb
sub
lret
out
fcmovnu
jmp
push
mov
sub
int
dec
xor
into
dec
in
les
adc
xchg
dec
icebp
adc
in
pop
jle
jl
inc
mov
pop
bound
insb
lret
jmp
popf
cli
jl
lcall
ret
xlat
xor
popf
or
lock
cmp
test
imul
jb
mov
out
sub
insb
dec
cmp
mov
adc
cmp
insb
imul
xor
xchg
sub
inc
mov
cltd
xorl
repz
inc
xor
xor
not
mov
dec
flds
adcb
inc
sarb
mov
nop
xchg
scas
jns
xchg
movsl
shr
stc
jne
push
mov
jnp
xor
cs
xchg
dec
and
incb
in
fmuls
add
repz
in
jnp
add
hlt
pop
add
fbld
into
adc
sti
jno
lods
mov
scas
nop
mov
cmp
jnp
and
movsb
jbe
sbb
stc
shr
adc
in
mov
add
enter
add
inc
sbb
pop
sbb
ret
jno
ds
les
dec
xor
test
xchg
dec
add
fbstp
add
loope
pop
popf
inc
dec
cmpsb
adc
ss
mov
mov
adc
pop
cmp
jecxz
fwait
adcb
movsl
pop
inc
or
push
xor
xor
pop
fnstenv
stos
inc
or
cmpsl
adc
fdivrl
fisttpl
ja
in
pushf
add
dec
rorb
test
jmp
pop
adc
pop
cmp
mov
dec
aad
xchg
cmpsb
in
push
loope
xor
mov
arpl
js
cmp
scas
test
adc
jno
mov
sub
fcomps
adc
pop
push
call
sub
sub
ss
imull
dec
ficoml
push
push
addr16
aaa
mov
sbb
mov
push
mov
ds
xor
inc
andl
mov
or
pop
add
popa
push
fiaddl
mov
mov
lret
add
inc
pushf
inc
in
and
fiadds
movsb
lods
cmc
jmp
sbb
jne
mov
negl
cmpsb
push
fsin
and
inc
or
cmpsl
ret
test
adc
outsb
mov
idivl
pop
jl
add
sbb
add
inc
jmp
idivb
pcmpgtd
mov
fisubs
sbb
cmp
sub
xchg
mov
xchg
xor
mov
test
push
std
mov
aad
scas
xchg
sbb
jl
xor
sub
sub
insb
rclb
lret
sbb
xchg
and
pop
call
nop
ds
addr16
push
mov
sub
lods
inc
fbld
imul
xlat
sbb
dec
jbe
in
rol
es
lret
adc
and
fildl
aad
lock
sbb
push
jbe
enter
int
pop
xor
mov
adcb
dec
inc
rcr
pop
loop,pn
inc
and
sub
out
cmp
xor
pop
jno
fcomps
clc
add
pop
or
ret
mov
rcrb
aad
mov
scas
lods
repnz
mov
cmpb
leave
mov
jg
push
js
mov
enter
pop
cld
pop
hlt
pop
xor
js
add
lret
jl
xchg
jl
push
push
ljmp
sahf
push
push
lret
mov
ret
mov
sub
cmp
xchg
xchg
stc
outsl
fwait
out
clc
cmc
mov
xlat
pop
pop
and
xlat
xchg
test
xor
aaa
jnp
push
sbb
lea
inc
lods
bound
inc
pop
mov
xchg
mov
push
pop
out
hlt
das
sahf
int3
xchg
pop
out
test
aam
xchg
ret
xor
out
les
push
jbe
pop
call
cs
fidivrs
xchg
adc
mov
out
lcall
jle
loope
out
mov
xchg
inc
scas
test
test
mov
push
and
js
or
mov
xchg
imul
mov
in
stc
adc
push
sub
jo
mov
dec
cs
push
sub
jge
scas
ds
xchg
cld
inc
mov
mul
divl
mov
adc
jp
in
add
push
arpl
lock
pop
mov
and
imul
adc
movsl
jg
push
jae
in
fsubrs
subl
xchg
adc
cmc
ja
dec
xor
outsb
dec
sbb
inc
mov
pop
hlt
in
push
jp
scas
xor
push
mov
xchg
test
imulb
mov
jge
sbb
int
adc
mov
push
imul
and
cmp
sbb
bound
mov
sbb
inc
in
mov
aam
pop
pop
pop
push
xor
outsl
add
rorl
mov
and
fcmovne
dec
aaa
cmp
lsl
mov
inc
imul
xor
and
int3
jge
in
pop
les
lret
lock
pop
enter
add
in
and
pop
cltd
fpatan
push
test
test
add
or
dec
mov
cld
push
push
lret
lea
es
sbb
int3
cld
cli
push
imul
lcall
or
xlat
sarl
inc
adc
xlat
nop
sbbb
cmp
lods
lods
repz
repz
fstl
inc
fwait
adc
mov
test
lock
dec
push
outsl
xor
scas
sub
test
fadd
inc
pslld
adc
in
cs
pop
call
jns
sbb
sub
mov
sahf
jb
cmp
scas
icebp
leave
outsb
sub
push
in
inc
call
and
repnz
xor
and
inc
inc
mov
mov
pop
loop
stos
sub
dec
sarl
push
xchg
jbe
or
out
shr
test
mov
xchg
cld
cwtl
loopne
push
mov
popf
daa
xor
imul
lods
test
xor
popa
int
or
cli
addl
ret
in
cli
cmc
jnp
push
or
adc
pop
sahf
popf
jl
xor
test
or
jge
push
or
fucomip
inc
xchg
mov
push
mov
shrl
mov
int3
mov
sbb
sar
sub
js
xlat
loope
imul
push
jg
bound
out
mov
and
movsl
fs
adc
and
mov
sbb
iret
or
int3
rorl
das
ret
mov
push
fsubrl
andb
stos
imul
mov
int3
inc
mov
jecxz
imul
fildl
cli
cmp
dec
cwtl
fwait
mov
in
xchg
outsl
pop
pop
and
int3
mov
inc
xor
adc
roll
and
fisttps
rorl
fwait
xchg
test
pop
adc
fiaddl
jecxz
dec
outsl
cld
rcll
mov
push
pop
orl
push
sub
mov
dec
dec
iret
orl
in
sti
push
adc
or
cli
pop
cld
sub
jg
mov
or
fs
testl
pop
les
insl
sti
lahf
xchg
mov
push
inc
xor
mov
adc
or
dec
fdivl
arpl
pop
jl
push
add
lret
int
xchg
fldenv
cli
in
mov
js
mov
hlt
xor
sub
in
cmp
int3
test
jl
inc
aam
loopne
cmpsl
outsb
jle
lret
adc
lock
inc
xchg
imul
xchg
icebp
mov
mov
std
xchg
pushf
xchg
sbb
xor
cmpps
jb
mov
cwtl
push
xchg
mov
mov
push
or
mov
jecxz
dec
ret
inc
out
int3
pushf
imul
inc
sub
sbb
push
std
add
sahf
lret
lds
sub
outsl
sbb
mov
scas
aad
sbb
std
movsl
or
nop
jnp
xlat
xlat
lock
and
rcll
out
push
dec
mov
jbe
pop
push
and
xchg
mov
ret
fistpll
mov
dec
sbbl
push
mov
loope
stos
js
dec
daa
mov
jl
push
imull
or
lods
mov
testb
rorb
shrb
aas
lret
jle
das
mov
pushf
sub
subl
mov
sub
cli
inc
dec
popf
fs
hlt
pop
mov
aam
mov
pop
adc
test
sub
scas
and
xchg
ret
xchg
shlb
subb
inc
addl
and
inc
cmpsl
test
xchg
xor
orl
hlt
es
jmp
inc
cltd
in
inc
imul
aas
sbb
cmp
xchg
movsl
fsub
push
xchg
stos
mov
filds
jne
js
jbe
cmp
notb
sbb
loope
fiaddl
das
mov
pusha
gs
jge
sub
in
leave
orl
fiadds
cmc
aad
and
out
inc
xor
mov
jge
push
cwtl
mov
inc
popa
adc
push
mov
sub
das
fsts
cmp
xor
hlt
adc
addr16
jnp
loope
pop
sbb
pop
jbe
add
dec
dec
les
nop
decl
data16
mov
and
or
pop
lds
verw
sbb
cmpsl
je
lea
or
cmp
and
push
jnp
pop
jp
mov
cltd
or
xor
xchg
call
cmp
ss
sti
mov
lea
or
adc
add
cmp
sub
or
inc
mov
and
aaa
fldt
inc
jmp
test
jmp
dec
loopne
ljmp
stos
aaa
add
xchg
ljmp
dec
jae
mov
dec
rclb
pop
xor
mov
imul
and
cli
out
adc
lock
fcompl
xlat
sahf
xlat
adc
fwait
cmp
lock
inc
xor
shrl
jo
cltd
push
push
add
pop
roll
pop
stos
inc
shlb
cmp
lds
pushf
xor
push
sbb
clc
adc
lea
add
popa
loop
adc
cli
pop
push
fnstcw
mov
mov
jge
ljmp
push
rclb
imull
xor
repz
lds
stc
mov
mov
icebp
pop
push
adc
cmpsl
sbb
push
pop
sti
sub
dec
push
or
sbb
jbe
pop
or
inc
aaa
inc
fistl
outsl
and
jb
cmp
fsubs
gs
mov
imul
and
ss
xor
psubw
mov
push
mov
scas
adc
lahf
rorl
pop
push
lea
and
fwait
pop
in
in
or
shrb
push
fs
jge
jl
hlt
jnp
pop
mov
stos
cs
mov
push
shrb
and
movsb
push
fcmovnbe
js
test
add
lock
mov
add
adc
xchg
sahf
cmp
xrelease
xchg
dec
int
adc
imul
mov
sarl
int3
lret
in
pop
xor
imul
pop
mov
pop
jmp
test
mov
add
add
pop
into
mov
enter
mov
inc
mov
les
adc
xor
mov
pusha
icebp
push
and
notb
out
daa
sub
mov
outsb
xor
dec
dec
gs
pushf
lahf
in
inc
push
push
jmp
in
push
pushf
js
out
sbb
mov
mov
mov
hlt
cli
decl
jnp
sbb
sub
inc
dec
imul
cmp
scas
ds
insb
or
cltd
pop
ret
jl
scas
shlb
dec
stc
je
in
rclb
insl
push
push
sub
daa
or
rcr
cmp
subl
jns
adc
jmp
add
mov
mov
test
add
jb
test
inc
xor
sub
jp
pop
pushf
dec
inc
pop
pop
inc
mov
sub
jo,pn
in
rolb
add
andl
pop
xchg
je
jecxz
lods
dec
outsl
mov
arpl
and
repz
rcrb
pop
add
shl
or
mov
aad
xchg
fidivrs
orl
das
clc
lret
mov
and
addr16
fsts
push
mov
out
insl
push
mov
adc
in
aad
lret
jb
adc
dec
icebp
jb
test
js
in
enter
or
imul
xchg
mov
je
sbb
pop
je
repz
push
ljmp
inc
sbb
out
xorb
in
fwait
daa
loopne
mul
cwtl
lock
loop
and
and
rcrb
imul
addr16
jp
pop
jne
imul
loope
xchg
mov
mov
neg
mov
xor
or
mov
cli
cmp
mov
cld
loopne
shrb
mov
loopne
pop
jg
scas
sbb
cmp
popf
cmpsl
sub
inc
lds
jns
loopne
es
ret
gs
jo
inc
add
shrl
in
mov
popa
xchg
cltd
push
js
pop
xchg
repz
mov
js
inc
sbb
xor
mov
mov
sub
test
outsl
leave
push
fists
cmp
adc
pop
pop
mov
mov
adc
aaa
inc
dec
xchg
xchg
lods
roll
mov
daa
jnp
lock
mov
ja
rcrl
mov
aad
or
add
xor
adc
cmp
int3
ds
dec
ror
adc
adcb
loop
int3
fnsave
les
or
test
aad
loop
enter
and
or
xor
push
sbb
inc
cmpb
mov
mov
or
lock
or
sti
pop
xor
jle
push
pop
jg
or
adc
mov
adc
push
mov
mov
sbb
stos
push
stos
xor
cwtl
cmp
inc
xchg
ds
sub
mov
leave
imul
bound
push
pop
pop
sbb
lods
xchg
addl
sub
or
jecxz
pop
or
subb
sub
or
popa
xchg
roll
popf
sarl
imulb
pop
add
push
jo
outsb
inc
add
movsb
or
lock
adc
movsl
dec
test
enter
data16
or
add
lret
cmp
dec
and
xchg
jne
and
fwait
divb
cltd
scas
arpl
sub
push
mov
adc
fs
sbb
ja
scas
dec
int3
lods
xchg
lds
repz
fmulp
pop
cwtl
cmc
or
adc
dec
sbb
sbb
lods
xchg
mov
mov
test
mov
push
mov
xchg
lret
stos
adc
cwtl
mov
add
mov
repz
sub
sbb
lods
das
jg
fidivrl
xor
mov
and
add
test
outsl
sbb
mov
es
push
enter
ret
rol
push
ss
xor
std
mov
jnp
in
lods
jo
pop
adc
pop
mov
sbb
mov
test
in
cmp
xorl
call
fdivs
in
push
lret
xor
cmp
dec
sbb
ret
jb
repnz
push
sti
ja
movsb
push
out
xor
jno
loopne
js
mov
adc
imul
nop
js
leave
mov
sahf
mov
fsubrp
jne
stos
push
stos
jbe
stos
jae
call
pop
lret
and
mov
cwtl
jle
xchg
movsl
adc
das
pop
sub
andl
sbb
pop
sub
loopne
or
push
mov
fdivrs
out
mulb
sub
xlat
cmp
mov
in
jecxz
jg
xlat
and
data16
push
cmp
mov
or
dec
iret
lods
ja
ja
xchg
or
jp
add
fs
xor
outsb
imul
in
mov
mov
xchg
call
repnz
mov
mov
inc
repz
les
inc
ret
in
xchg
subb
adc
inc
int
and
sahf
imul
dec
frstor
es
pop
cli
inc
push
mov
xchg
aam
call
cmp
pop
cmp
in
fcomps
cmp
adc
mov
jg
mov
pushf
xor
mov
pop
push
add
or
jmp
pop
cmp
imul
cmp
test
sub
and
sbb
push
arpl
stos
jns
or
or
push
outsl
out
sub
inc
inc
xor
xlat
fstpt
loop
mov
mov
lds
sub
xor
xchg
int3
xor
pop
push
xchg
lods
push
sbb
xor
call
daa
push
push
inc
dec
mov
js
push
notl
in
std
or
leave
pop
jbe
fnsave
xor
lea
and
lea
outsl
sti
in
cmp
sbb
fcmove
adc
jmp
in
aas
push
push
loop
into
xor
adc
into
fistpl
adc
xchg
rcrl
jecxz
push
pop
pusha
xchg
jno
xchg
mov
push
xchg
mov
scas
lret
xchg
mov
push
shll
dec
sub
and
xchg
mov
leave
daa
adc
jo
and
sub
outsl
add
lds
xchg
js
dec
andl
test
dec
fwait
dec
jmp
out
push
cwtl
ds
jns
push
mulb
in
jbe
xor
sub
push
in
daa
cli
pop
pop
cwtl
jmp
inc
popf
cmpsb
rolb
xchg
loop
push
adc
loop
rcl
das
arpl
out
clc
lret
mov
lahf
aaa
inc
lret
xchg
dec
in
incb
adc
xor
mov
cld
stos
sbb
sbb
repz
dec
rcll
imul
cmp
or
sbb
shll
mov
lds
mov
inc
movsl
outsl
cmp
cmp
data16
call
fnsave
filds
ret
test
ret
stc
dec
dec
xchg
inc
or
shlb
sub
sbb
adc
mov
movsl
outsb
mov
pop
inc
addr16
sbb
mov
out
movhlps
inc
cli
leave
jl
lea
cmp
dec
and
cli
and
mov
shll
call
mov
mov
test
shll
iret
mov
cli
inc
push
scas
addr16
mov
jle
or
inc
mov
aad
cmp
stos
orl
icebp
xor
popa
mov
pminub
out
sbb
dec
xchg
sbb
mov
fidivrl
xchg
jae
dec
mov
scas
and
rcll
xor
cs
gs
inc
ret
es
cli
hlt
stos
mov
rcr
mov
and
ficomps
sub
popf
push
push
es
or
filds
inc
lods
xlat
rcll
xchg
pop
push
jle
clc
jo
outsl
inc
cmp
xchg
mov
xor
mov
fcom
lds
fiaddl
fisubrs
pop
aaa
int
call
fnstcw
cli
shll
ret
nop
pop
stos
dec
inc
xlat
push
mov
pushf
xchg
mov
inc
mov
dec
fbstp
outsb
and
push
popa
outsl
xchg
lret
addr16
insb
dec
xor
xchg
sbb
jp
stos
aam
aas
movsb
aas
in
aam
xchg
mov
push
xlat
lods
mov
stos
clc
mov
adc
call
push
xchg
test
imul
mov
das
mov
sbb
out
xchg
shl
mov
sti
imul
sub
arpl
adc
fsubrl
push
rdtsc
cs
sbb
lret
movsb
lock
mov
mov
out
icebp
cld
push
xchg
ja
lods
enter
jmp
sub
insb
and
repz
call
xor
inc
cmpsb
sbb
dec
test
or
push
jge
aas
popf
cltd
cs
jmp
out
push
jae
std
inc
and
push
js
je
loopne
dec
popf
imul
fbstp
icebp
cmp
ret
mov
fwait
addr16
in
es
jne
mov
xchg
and
add
aad
or
iret
or
mov
xchg
sub
push
lods
daa
je
cmpsl
xor
test
insb
add
push
dec
mov
push
imul
cmp
dec
test
push
movsl
adc
popf
pop
in
shlw
and
sbb
loopne
fsub
cwtl
addr16
lcall
jnp
adc
scas
pop
or
ffree
rorl
mov
add
and
pop
out
mov
xor
in
stos
lock
idivl
insl
sub
dec
stos
sub
and
jne
movl
gs
out
aam
roll
aas
cltd
pushf
pusha
xor
cmc
adc
cli
pop
cmc
dec
in
sarl
stos
xchg
mov
and
pusha
jo
mov
xchg
adc
add
mov
or
push
cld
pop
iret
enter
sbb
pop
and
test
mull
out
lods
les
and
into
clc
jg
sub
or
mov
loop
cmpsl
add
aaa
and
dec
icebp
push
daa
sbb
fisubrl
sbb
mov
sub
jo
sub
push
xorl
jl
mov
jp
test
mov
mov
mov
addb
jg
lret
imul
sbb
dec
mov
rorl
and
jle
xchg
xor
and
inc
call
mov
adc
int3
jbe
sarb
add
jg
test
das
adc
mov
mov
dec
std
stos
mov
stos
ret
ret
mov
clc
scas
lock
mov
lcall
mov
flds
add
jp
push
and
rol
subl
xor
sbb
and
push
jp
idiv
cmpsl
adc
or
pop
adc
inc
aam
pop
cld
clc
sbb
xchg
rclb
shr
inc
je
in
rcr
xorb
cltd
or
popf
mov
lret
dec
push
out
inc
in
add
lods
lret
addr16
out
inc
popf
mov
insb
cmpb
cmpsl
int3
inc
ds
push
pop
lds
push
lret
adc
lea
out
in
sbb
xchg
push
inc
je
shl
adc
imul
adc
xchg
cmc
out
mov
fisubs
xlat
incb
pusha
out
loopne
fidivl
push
outsb
insl
subl
xor
incl
ret
js
xchg
mov
push
repnz
push
cmpsl
xor
sub
test
mov
pop
icebp
mov
inc
out
cmp
dec
je
lea
push
cmp
lods
dec
sbb
mov
rorb
daa
adc
shll
xchg
sub
or
pop
jbe
imul
cmpsl
sbb
or
lods
aam
bnd
push
jecxz
adc
cld
cmp
enter
sbb
pop
pusha
add
neg
in
push
lahf
sbb
jbe
jb
sti
ret
xchg
ret
jnp
or
jle
scas
lea
nop
scas
scas
insl
in
sub
es
adc
mov
fiadds
push
pop
xorb
scas
sbb
mov
insl
xor
ret
xchg
xor
int
mov
bound
and
sti
fimuls
lods
cmp
fwait
mov
sub
scas
add
fcompl
icebp
test
shlb
mov
xlat
xchg
lcall
je
xor
clc
aad
sub
sbb
xor
clc
adc
aaa
push
test
repz
aam
bound
ljmp
push
mov
loope
mov
into
inc
push
bound
dec
push
xor
jl
fbld
ror
cmpsl
test
popa
ds
fmulp
jbe
imul
adc
mov
iret
push
or
and
sub
mov
adc
mov
icebp
fldenv
dec
dec
arpl
xor
sldt
push
popf
push
hlt
add
sub
push
notb
pop
lahf
sbb
mov
pop
insl
xor
jmp
aad
sarb
cmpb
and
lret
inc
sbb
or
adc
es
std
outsb
fmull
dec
inc
jmp
pop
outsb
cmp
cmc
in
jbe
std
aas
ds
pop
clc
and
dec
notl
push
jne
or
and
lods
and
cltd
or
es
scas
push
adc
loope
jnp
inc
jp
popf
dec
xorb
xor
pushw
xchg
and
subb
adc
cmp
pop
ficoml
jo
add
int
iret
out
or
mov
push
lds
cmp
jbe
popf
vpunpckhqdq
xchg
jmp
and
adc
and
pop
lret
into
push
pop
mov
test
cmpsb
xor
rcrl
lcall
mov
pop
fucomi
nop
out
ror
es
fistpll
cmc
mov
lret
enter
or
mov
xchg
lock
push
addb
daa
sti
ret
sbb
dec
push
out
xchg
or
push
dec
and
inc
push
icebp
inc
cmpsl
dec
push
xor
xor
cwtl
fnsave
cmpsb
pop
mov
sbb
adc
adc
push
jo
xor
lahf
inc
cli
inc
inc
dec
pop
aas
dec
inc
mov
loope
outsb
push
sub
xchg
cmp
mov
cwtl
insb
ret
xchg
bound
and
mov
iret
pusha
sub
sub
ret
pop
add
jge
out
fistpll
arpl
movsl
dec
mov
pusha
mov
inc
lods
ret
inc
push
loope
fldcw
dec
lea
ljmp
sub
pop
cwtl
jbe
mov
lret
push
or
test
xor
mov
test
pop
xchg
cmp
rorl
mov
ds
mov
add
fbstp
nop
push
fistl
shlb
mov
subl
cltd
mov
sbb
sub
scas
std
ret
xlat
fnstenv
mov
nop
popf
cltd
mov
cmpsb
pop
jecxz
outsl
mov
nop
imul
mov
mov
gs
push
movsb
push
push
lret
xlat
cltd
cmp
add
xchg
imul
incl
hlt
notb
push
aam
sbb
mov
int3
in
repnz
scas
outsb
xchg
je
jl
inc
int3
pop
mov
adc
test
jo
mov
mov
sbb
mov
and
imul
xchg
add
out
mov
scas
pusha
outsb
cmp
dec
mov
sbb
cmp
in
and
xchg
popa
mov
lcall
push
in
in
xchg
cltd
pusha
ljmp
xor
cs
jp
push
movsl
lret
loope
std
mov
cwtl
fdiv
pushf
fwait
mov
xor
lds
notb
sub
xchg
pop
xchg
scas
cmp
xchg
insl
out
sub
out
or
lcall
push
cmp
inc
fmull
push
aam
cld
sub
inc
push
mov
inc
aaa
add
mov
in
inc
in
insb
stc
mov
sbb
xchg
jne
dec
inc
int3
int
add
hlt
dec
xor
rolb
fistpl
dec
dec
xchg
xchg
sti
sarb
aas
push
mov
adc
mov
pop
out
xor
sub
fwait
xor
outsb
pop
xchg
adc
sti
mov
add
fadd
int
popa
in
add
out
push
aaa
ficompl
insb
daa
insb
in
stc
cld
xchg
or
in
mov
add
xchg
xchg
sarl
call
imul
icebp
pop
inc
stos
mov
or
pinsrw
in
mov
inc
iret
pop
inc
push
movsb
test
sub
mov
and
fcoml
xchg
xchg
jo
or
jne
int
mov
mov
popl
xchg
pop
int3
dec
sbb
pop
rcrb
cmp
test
cmpsl
add
and
shrb
ja
cmp
dec
cwtl
jge
sbb
jmp
mov
inc
push
dec
ret
and
data16
lahf
rcrl
mov
jmp
js
mov
mov
jae
int3
dec
pop
and
jp
push
rolb
pop
xor
mov
xor
cmp
adc
pop
cmp
xchg
or
xor
std
daa
inc
xor
leave
cmp
scas
cmp
pop
add
or
lock
lret
xchg
sti
lahf
lock
adc
int3
mov
cwtl
or
out
pop
cmp
jns
loope
xlat
or
cmp
xor
insl
inc
ljmp
sbb
jge
or
or
mov
test
or
mov
mov
xchg
movsb
repz
adc
mov
loop
setle
and
pop
jbe
adc
xchg
cmp
loop
mov
sub
xchg
fadds
fwait
mov
fldt
mov
xor
out
out
fcmovnb
movsb
les
icebp
js
and
fcomp
xor
xor
inc
or
jl
mov
gs
movsl
xchg
cmp
std
mov
fistps
and
cmp
xchg
jl
push
cmp
xchg
lods
add
inc
mov
scas
fwait
jmp
jecxz
dec
jns
in
mov
aad
mov
imul
jnp
or
xchg
loope
xchg
aas
pushf
add
mov
cld
xor
push
sbb
cmc
xor
rcrl
stos
xlat
shll
inc
ret
mov
sub
mov
cmp
adc
mov
jge
adc
mov
lcall
pop
shrb
cmp
mov
pop
std
push
or
call
add
orl
xchg
stc
mov
ret
xchg
pop
scas
inc
jmp
mov
pop
pop
fs
outsl
das
cld
adc
fstp
add
mov
push
shufps
iret
xchg
sub
test
inc
mov
addr16
testb
xor
bound
test
add
test
mov
stos
cmp
push
fbstp
cmp
fstp
adc
fimuls
pop
lahf
sub
or
rorb
adc
div
jns
mov
mov
jbe
xor
sbb
cmpl
mov
jns
mov
sbb
cld
outsb
inc
and
sub
cmp
inc
cmp
aam
ja
out
rcrl
push
mov
ss
jns
out
rcrb
outsl
add
subb
stc
insb
dec
dec
lods
scas
dec
add
xchg
mov
pop
dec
mov
pop
mov
lahf
stos
xlat
or
fstpl
dec
mov
jno
adc
jp
xlat
test
repz
stos
push
fidivrs
sbb
mov
adc
dec
in
add
push
ss
inc
loop
sub
or
leave
test
jg
enter
cmp
mov
sbb
inc
add
sbb
cmp
arpl
aaa
rorb
xchg
jbe
xor
xor
sub
out
xlat
loop
cmp
mov
cmpsl
mov
add
repz
push
addr16
sub
mov
rorb
frstor
lcall
nop
xlat
ficoml
sahf
inc
enter
fistl
jecxz
out
mov
pop
mov
pop
clc
cmp
lods
mov
call
pop
or
xchg
fwait
xor
rorb
scas
mov
cld
ret
dec
jbe
lea
arpl
pop
aaa
out
addr16
daa
scas
xchg
iret
mov
fidivrl
adc
popf
shl
pop
lret
pop
sub
test
add
and
divl
jmp
icebp
jg
push
outsl
rolb
into
in
aad
push
cmp
or
clc
aam
shl
dec
push
out
jg
rolb
and
sbb
push
xchg
cmp
mov
mov
out
xor
cs
mov
outsb
mov
rorb
and
push
inc
xor
sbbl
sbb
ret
gs
out
mov
jmp
xchg
bound
mov
pop
in
push
fwait
cmpsl
ds
push
outsl
cmp
arpl
sarb
dec
pop
push
xchg
sub
sbb
shlb
in
and
outsb
int
arpl
pop
and
outsl
xor
sti
mov
scas
inc
fsubrs
clc
add
mulb
ror
and
dec
fsubrl
xor
adc
xor
clc
mov
inc
fs
enter
mov
movsl
dec
jp
pop
cmpsb
out
and
jae
mov
stos
dec
repz
pop
adc
outsl
faddp
call
adc
test
fs
out
ljmp
or
mov
aam
pop
jns
ret
and
mov
insb
es
sbb
insb
pop
mov
inc
loope
and
cmpb
imul
and
sarl
xor
xlat
test
jl
jl
stos
movb
mov
test
pushf
rcll
cmpsb
mov
pop
dec
sub
das
shrb
xor
cmp
pop
push
cld
fwait
push
in
shll
jmp
adc
mov
xor
sub
xchg
dec
xchg
lods
leave
subb
sbb
adc
rcrb
mov
cmp
mov
mov
mov
jb
ret
dec
xorb
add
push
fidivrs
jl
and
insb
inc
aad
rcll
cmp
dec
xor
and
lcall
pavgb
pop
inc
cli
sahf
pop
rorl
lret
mov
mov
clc
loope
in
adc
xchg
ss
inc
ljmp
lea
or
pop
in
sub
add
stos
ljmp
daa
je
add
cmc
in
lock
pop
add
out
adc
lods
jmp
js
loop
cmp
mov
pop
fwait
mov
or
das
je
lds
mov
xchg
iret
xchg
test
xor
sbb
adc
int3
jae
hlt
dec
pusha
or
inc
push
je
lock
and
push
jb
xor
dec
shrl
sbb
mov
jbe
aaa
imul
ss
movl
in
inc
lea
ficoml
mulb
lcall
int3
push
pop
cmp
ljmp
pop
mov
push
les
pop
mov
movhps
cmp
sub
shll
fistl
mov
movsl
add
pop
xorl
ds
ja
aam
js
scas
jo
xchg
cmp
jo
xor
sub
mov
pop
dec
jo
mov
pop
cmp
push
cmpsl
mov
data16
inc
aaa
push
mov
sbb
xchg
mov
add
or
ljmp
mov
jo
into
ljmp
xchg
hlt
movb
es
lahf
xor
pop
lahf
jb
std
sarb
mov
jne
imul
repz
push
adcl
sar
jb
mov
and
mov
stos
xchg
lds
mov
jge
push
cld
les
xor
push
nop
or
jle
outsb
jl
shrl
popf
sarb
cmp
pop
push
cmpsl
dec
and
mov
insl
iret
pushl
cli
mov
scas
mov
mov
xchg
dec
xchg
lods
ds
xor
push
push
aad
xchg
outsl
cmpsb
xor
das
sahf
jmp
sarl
mov
mov
adc
pop
out
lahf
xor
fisubl
xlat
pop
lea
daa
inc
pop
rclb
movsb
fs
mov
in
or
sub
jne
dec
sahf
lcall
mov
imul
pop
adc
pop
xor
insb
push
in
cmp
mov
clc
lea
fdiv
push
add
push
cltd
pop
aam
sti
lds
add
push
lret
outsl
jb
fistps
iret
inc
pop
mov
xor
cmpsl
inc
jae
mov
push
cmp
sarb
sub
mov
subl
andl
pop
xor
aam
scas
fucomi
loope
stc
cmp
push
pop
push
cmpsl
jae
scas
arpl
dec
add
sub
jnp
ret
xchg
inc
cld
add
jbe
cld
movsb
inc
jle
ret
cmpsb
sbb
pop
icebp
xlat
out
add
data16
jp
push
push
stc
andl
push
insb
cli
cwtl
or
or
pushf
lods
sbb
sbb
adc
test
clc
roll
int
fcoms
or
stos
out
arpl
cmc
or
loopne
cmp
fsts
xor
mov
insl
fs
loop
adc
mov
gs
mov
or
pop
mov
cs
cmp
push
lcall
shr
cs
loope
mov
xchg
and
test
cmp
pop
stos
sahf
sbbb
fwait
adcl
jae
pop
loopne
push
lret
out
xchg
dec
enter
xchg
lea
xchg
jl
pop
sahf
mov
mov
lods
dec
xchg
push
or
jmp
out
scas
cmpsb
xlat
shlb
push
js
xor
pop
lret
jle
push
sub
sub
lds
mov
roll
and
dec
mov
cmc
les
cmp
sti
jne
dec
lods
jmp
jno
dec
cld
pop
cmpsl
orb
dec
ss
pushf
dec
bound
pop
pop
into
jmp
scas
jge
sbb
in
add
pop
pop
arpl
or
negb
out
inc
xchg
dec
mov
call
and
call
lods
cmpsl
rcll
pusha
xchg
in
add
jb
cmp
dec
pop
sti
leave
add
lods
xchg
fdivl
inc
mov
outsl
inc
push
sbb
push
sbbb
push
pop
pop
fnstenv
lret
pop
popf
mov
fdivrs
mov
jnp
inc
dec
lods
mov
rclb
scas
jbe
repnz
mov
addb
int3
push
xor
das
xchg
leave
sub
insb
daa
or
push
xchg
jo
scas
or
adc
imul
xlat
ret
or
aaa
mov
je
xchg
lods
cs
xlat
lea
xorb
imul
cmp
adc
out
std
pop
push
mov
movsb
mov
xor
ret
loope
push
dec
orl
cmp
rolb
xchg
rcll
scas
pop
pop
inc
fs
aaa
pop
lds
mov
push
ficoml
pusha
fisttpll
jae
pop
dec
sti
cwtl
inc
push
enter
ljmp
les
call
dec
push
divl
into
or
lock
xchg
dec
mov
icebp
movsb
inc
mov
mov
jl
push
icebp
jg
mov
lcall
jge
inc
adc
and
cmpsb
outsb
mov
int
dec
dec
sahf
push
or
orl
popa
pop
add
mov
jecxz
add
mov
push
mov
cmp
mov
pop
push
xchg
mov
insb
in
xchg
cmpsb
mov
repnz
jl
push
push
jae
or
pop
xor
call
jl
and
loop
mov
mov
xchg
je
push
fimull
test
pusha
xchg
mov
pop
pop
mov
sarl
inc
cmp
data16
lods
fs
lods
cs
mov
cmp
jb
dec
push
out
loopne
rep
fidivs
enter
and
inc
sbb
loopne
inc
lods
pop
repz
push
mov
sbb
imul
mov
flds
add
dec
mov
mov
inc
out
ss
and
dec
in
mov
jmp
add
xchg
pop
sar
sub
das
out
ss
cld
adc
xor
popa
adc
inc
sbb
fldl
cmpsl
cmc
hlt
inc
cmpsb
sbb
cli
loopne
jb
je
xchg
lock
and
cs
mov
jno
add
stos
jmp
fs
jno
loope
lods
dec
inc
adc
mov
clc
es
aas
lcall
call
enter
push
mov
pop
push
sub
xlat
roll
fucomi
inc
rclb
sub
int
stc
or
add
jne
aas
adc
cmp
xchg
cmp
shlb
cmp
mov
xor
int3
iret
mov
mov
int3
test
inc
dec
xchg
add
mov
push
and
xchg
gs
icebp
jnp
les
test
stos
mov
aas
sub
sub
cltd
mov
jmp
subb
jl
fildl
sub
out
and
adc
jl
aam
movsb
test
mov
xor
fnstsw
cmp
lock
out
inc
push
cwtl
mov
push
shll
jo
fidivrs
inc
dec
mov
mov
out
call
mov
mov
jnp
sbb
repnz
inc
mov
leave
sbb
mov
mov
mov
sbb
es
and
xor
mov
push
gs
ds
rorl
and
fsincos
or
icebp
inc
cmp
sbb
into
cli
sbb
fistps
in
and
jae
std
jne
jae
gs
push
je
call
repnz
int3
mov
cmp
mov
sub
shl
push
or
xor
std
sub
pop
rorb
jae
mov
inc
lret
cltd
jmp
and
push
or
jecxz
mov
int3
fsubl
stos
mov
sarl
fisubrs
mov
test
lea
sbb
fadds
xor
pop
addr16
xchg
aam
pop
loopne
stos
pop
and
sbb
add
lods
sbb
jnp
and
cmp
pop
cmpsb
cmp
sti
adc
or
es
push
mov
mov
mov
shll
cmp
xor
test
push
dec
stos
call
mov
xor
lods
push
sbb
andl
test
lds
add
mov
mov
inc
test
loopne
dec
out
sub
pop
jno
sub
mov
pop
sar
sbb
loop
xchg
in
xor
cmp
pop
jns
loop
mov
fisttpl
push
sahf
leave
lret
insb
imul
jge
int
jmp
sbb
ja
cmpsl
push
xchg
pop
out
jo
pop
sbb
sbb
loope
out
shrl
mov
or
inc
mov
pop
and
test
jecxz
jae
sub
sbb
push
adc
flds
stos
pop
cld
adc
jmp
lock
aad
arpl
scas
pop
mov
aaa
dec
lea
pop
pop
sbb
ljmp
scas
into
inc
adc
repnz
fdiv
mov
mov
xchg
add
pop
loope
fldcw
and
iret
pop
idiv
xchg
push
stc
xchg
inc
loope
mov
ds
or
lret
mov
bound
pop
ret
push
rorb
xor
cmpsb
mov
hlt
in
pusha
rcr
pop
lret
lea
imul
daa
int
pop
xchg
lcall
scas
push
push
mov
dec
jmp
dec
push
dec
hlt
jle
outsl
popa
jle
je
and
push
movb
and
stos
cmp
inc
inc
jge
sbb
out
pusha
sbb
int
out
movsb
inc
mov
fld
add
pop
mov
lock
push
sbb
ficoml
mov
jo
bound
push
out
frstor
lret
lea
lret
cmp
mov
xchg
movsb
mov
or
gs
imul
cmp
out
jg
loope
push
adc
jle
push
mov
adc
rorb
and
lahf
roll
sbb
sahf
mov
push
sbb
repz
test
std
pop
pop
mov
add
sub
cmc
sbb
mov
aad
stos
nop
aas
loope
mov
pop
repnz
jbe
test
jecxz
jae
sub
es
les
repnz
cmp
sbb
sub
pop
sub
iret
inc
imul
cmpsb
jne
out
dec
mov
mov
pop
call
lea
pop
dec
pop
pop
inc
pusha
jmp
mov
add
mov
not
inc
stos
sbb
xor
sub
add
int3
push
sbb
movsl
popa
movsb
cmp
jp
mov
ds
fisubrl
push
test
ret
cmp
cmp
push
push
aam
fisubl
bound
or
hlt
dec
pop
jg
aam
mov
mov
shr
clc
mov
mov
pop
je
fsubrs
dec
cmp
mov
pop
dec
bnd
or
repz
and
sub
xchg
jno
in
mov
jp
mov
addr16
mov
lods
cltd
adc
lea
cld
jnp
sbb
test
fimuls
mov
iret
outsb
mov
nop
lcall
call
pop
mov
fdivrl
out
or
enter
or
jmp
aam
in
jl
int
mov
dec
push
lret
push
dec
test
jge
repnz
inc
mov
ljmp
std
sbb
push
xchg
xor
jle
xlat
andb
outsb
jae
pop
jmp
in
add
movsl
cltd
imul
sub
out
repz
js
aad
cmp
mov
pop
stos
inc
dec
mov
cli
pop
fnstenv
cmp
jle
fdivl
out
sub
adc
das
push
mov
enter
xchg
add
idivl
mov
jno
popf
movsl
aaa
scas
cld
sbb
mov
insb
outsl
mov
jge
or
pop
add
clc
cmp
push
cmp
adc
dec
pop
decb
sub
pop
lods
mov
cmp
out
push
out
std
or
repz
mov
pop
lret
jnp
or
mov
lcall
cmp
add
push
mov
jae
push
out
bound
push
dec
pop
lahf
std
clc
fwait
incb
sub
sti
pop
leave
out
xor
add
add
dec
test
mulb
pop
call
xor
das
test
sbb
pop
xor
mov
pop
movsl
pusha
mov
mov
mov
xor
fwait
and
lcall
jno
mov
nop
sub
imul
pop
adc
mov
xchg
nop
xchg
push
nop
fisubl
xor
packuswb
mov
cmp
cmc
dec
mov
cmc
mov
pushf
ret
clc
jge
aas
and
sbb
lahf
dec
popf
js
jmp
pusha
mov
data16
mov
repnz
xor
shrb
sbb
adc
imul
call
mov
xor
xchg
addr16
neg
inc
dec
in
push
xor
pop
popa
xchg
push
or
pop
sub
xor
test
stos
popf
sub
push
xchg
sub
and
xor
adc
inc
sbb
inc
ss
jg
out
leave
or
inc
bound
test
out
adc
int
cmpsb
lea
or
clc
or
adc
mov
jle
sub
aam
subl
aaa
push
adc
xchg
shrl
mov
jb
and
je
scas
inc
scas
js
lea
lretw
out
cld
push
enter
or
hlt
lidtl
fwait
sbb
repz
mov
cmp
mov
fidivrs
out
mov
cmp
cmpsb
jg
fildll
dec
dec
int
not
mov
jno
shl
popf
cmp
dec
adc
lock
leave
stos
mov
jo
xchg
push
pop
jb
push
jns
xchg
push
jecxz
mov
sub
mov
cmpsb
out
scas
out
popa
dec
mov
gs
or
icebp
pop
jp
dec
or
inc
xchg
and
xlat
in
pop
outsl
cmc
scas
ss
imul
lds
mov
movsl
sub
jmp
shlb
add
push
pop
jbe
add
in
add
lea
hlt
fcoml
dec
es
mov
imul
cmpsb
mov
add
out
fwait
gs
sbb
aad
pop
and
out
fisubrl
mov
xchg
sub
nop
mov
pop
mov
lods
or
stos
mov
es
mov
push
and
dec
ret
les
imul
popl
mov
sub
lea
pop
and
add
push
stos
add
mov
lcall
test
pop
dec
imul
mov
sbb
push
add
imul
push
fnstsw
sbb
inc
adc
cmpsl
in
xor
pop
es
es
in
pop
int
add
test
pop
insl
add
mov
mov
mov
jp
pop
mov
push
dec
test
jp
add
cmp
inc
jb
cmp
dec
int3
jb
dec
mov
adc
shlb
and
and
ficompl
cmpsb
sub
mov
sub
int
aas
jecxz
imul
iret
mov
fbld
push
mov
out
mov
jl
ss
push
lods
imul
dec
push
inc
cmpb
pop
and
out
pushf
mov
ret
in
adc
fwait
incb
mov
iret
out
push
arpl
or
xchg
sarl
pop
jmp
fs
xor
push
pop
shll
pusha
lea
std
adc
push
push
mov
xor
jp
lock
sub
enter
out
cs
push
shrb
sub
jmp
aaa
add
xor
mov
xchg
into
or
aas
xlat
cmp
mov
xchg
cmp
push
pushf
fistps
sub
and
mov
add
shl
stc
push
hlt
and
mov
ss
mov
pop
pop
push
adc
jnp
pop
rclb
fdivr
fs
aad
jecxz
sbb
or
ret
sub
arpl
inc
sub
adc
jne
stos
dec
fcomip
pop
add
sbb
inc
xchg
cmp
push
in
adc
adc
lods
out
or
ja
xchg
jg
inc
ja
cld
push
icebp
in
out
xorb
cmp
jl
and
aad
jbe
sahf
xor
cs
shll
sub
fadd
inc
lret
mov
push
mov
jnp
push
xchg
and
xlat
and
or
popf
pusha
test
mov
jno
daa
mov
pop
cmp
xchg
jae
imul
push
cmp
icebp
xchg
sbb
add
cmp
inc
sbb
shl
jno
and
sub
cmc
insl
lods
or
je
jmp
arpl
lds
push
sbb
aaa
nop
jns
insl
das
orl
push
cwtl
pop
loope
add
loopne
add
pop
add
mov
scas
mov
cmp
dec
bswap
fildll
and
rcrl
pop
ds
push
jl
xor
push
mov
faddl
push
int3
push
adc
fucomp
dec
pop
mov
sub
jge
ljmp
dec
mov
dec
xor
and
mov
mov
jne
or
mov
divl
and
in
aam
stos
leave
xor
lret
js
sbb
and
mov
adc
mov
mov
inc
dec
clc
in
xor
mov
cwtl
mov
xor
mov
jne
xor
inc
int3
nop
cmp
sti
test
cmpsb
pop
mov
inc
xor
mov
dec
sbb
jae
or
movsl
xchg
subb
sbb
dec
mov
outsb
ficoms
popf
cmp
inc
mov
pushf
fs
cs
push
dec
cmp
cmp
or
loop
sub
inc
fs
or
ljmp
divl
xchg
scas
push
jne
subl
iret
mov
lret
test
aam
push
xchg
inc
adc
daa
and
stos
push
mov
popf
xlat
adc
mov
xchg
addl
dec
sub
pusha
bsf
mov
sub
and
push
cmp
divl
js
pushfw
aam
fstpt
fwait
clc
sbb
pop
and
popf
stos
test
bnd
push
xor
cltd
out
aas
js
dec
mov
gs
mov
insb
aaa
ret
dec
lcall
popa
fldt
adc
jg
data16
push
sti
andb
bound
fisubrs
jne
add
pop
pusha
subl
loope
inc
clc
out
inc
inc
push
in
jbe
inc
mov
sbb
ror
sub
push
stos
xchg
and
mov
push
pop
xlat
xchg
sbbb
cwtl
outsb
pop
sbb
xor
and
add
mov
loopne
lods
lcall
addl
aad
adc
rol
xor
adc
mov
pop
mov
jae
jg
iret
gs
mov
sub
je
icebp
xlat
xor
dec
mov
jge
lock
insb
cmpsb
sahf
pop
mov
add
and
cmc
lds
nop
cmpl
jnp
dec
shr
mov
mov
pusha
pop
rcrb
jb
add
pop
test
mov
out
pop
dec
cwtl
or
int3
outsl
outsl
orb
sub
dec
xchg
fwait
pop
cmp
pop
jns
rolb
rclb
inc
mov
push
sub
jmp
ret
insb
movups
insl
jo
aad
popf
stos
mov
out
imul
jnp
gs
xor
jae
xchg
push
pop
shrb
sub
sahf
lahf
push
andl
jle
or
and
lods
iret
orb
pop
in
dec
xor
xor
and
fstpt
nop
jb
pusha
jo
and
shlb
sti
sub
adc
lock
ret
ss
sahf
jp
sub
dec
aad
mulb
ficomps
dec
mov
cmp
movsl
add
mov
jp
imul
scas
ret
add
xchg
lods
inc
xchg
cmp
xor
mov
out
insl
and
sub
aaa
dec
and
sub
hlt
sbb
xchg
ret
jno
fsubrp
aam
or
neg
out
aad
lds
cmp
enter
push
dec
push
fwait
jne
add
and
xor
out
xor
int3
adc
call
pushf
jl
sti
movl
std
loopne
mov
lea
sar
mov
es
mov
out
sub
cmp
test
sub
adc
push
xor
nop
xor
loopne
pusha
roll
decb
push
jmp
and
test
mov
je
push
xlat
fsubs
data16
imull
mov
inc
push
push
mov
int
or
xchg
and
jb
leavew
push
scas
push
and
mov
sahf
and
imul
cmp
pop
push
cmp
mov
adc
push
insb
lods
das
mov
test
test
out
and
gs
lahf
lcall
and
lods
pusha
dec
imul
test
sub
repnz
dec
dec
lcall
xchg
ss
inc
outsl
addb
mov
jge
pop
cmp
cmpsb
sub
data16
lods
shl
xor
out
cmp
pop
repnz
jl
add
mov
repnz
push
sub
adc
lock
cli
insb
mov
inc
and
mov
mov
inc
or
jecxz
pusha
add
std
mov
pop
sub
roll
sub
psubw
xlat
movb
jae
dec
in
aaa
pop
aam
sbb
fsubrl
jmp
ss
jb
or
fnstsw
lods
or
jle
mov
shlb
scas
mov
mov
adc
or
xchg
scas
scas
adc
dec
mov
es
xchg
stos
cmpsl
add
add
frstor
adc
pop
xorl
popf
push
nop
out
cmp
pusha
loope
cmpsl
add
arpl
fstpl
addr16
jle
mov
mov
pop
jo
ret
aas
movsb
fiaddl
or
jns
xor
pushw
or
adc
jmp
xor
ss
sbb
adc
dec
pop
xor
outsb
mov
xchg
in
cmp
push
and
mov
ja
clc
loopne
cmp
adc
mov
lea
call
fwait
bound
call
rcl
xchg
insl
arpl
ret
push
mov
xor
sub
cs
data16
ja
scas
scas
ficoml
pop
in
inc
imul
enter
xchg
sbb
insb
xchg
push
cmp
rorl
mov
push
or
test
in
out
jo
xchg
push
lahf
ja
push
ret
mov
fisttpll
cltd
xlat
push
int
sub
enter
sbbb
push
fsubrl
mov
pop
adc
xchg
loopne
pop
push
xor
cmp
xchg
insl
or
xchg
lea
cmp
jne
jmp
jmp
leave
lret
rcrb
out
lds
ja
dec
fucomip
mov
pusha
sarb
clc
jnp
mov
xchg
sbb
sbb
popf
jecxz
or
mov
adc
fs
out
inc
loope
xor
xor
adc
adc
mov
mov
sti
pop
loop
dec
xlat
das
pop
pop
mov
jb
xchg
and
loopne
lds
adc
outsb
jle
in
mov
sbb
mov
insl
jno
inc
and
pop
dec
dec
xor
sahf
cmp
out
movsb
shll
andb
push
push
lods
jne
mov
popa
mov
fimuls
inc
jb
lcall
popa
test
cmp
cmpsb
test
add
das
aad
or
mov
inc
popf
in
xchg
cmpsl
das
sbb
das
inc
outsb
push
movsl
push
fidivrs
mov
movsl
idivl
mov
push
cmpl
mov
inc
and
push
outsl
jb
sub
lcall
sarb
js
jle
mov
mov
lret
out
mov
cmp
cld
leavew
sahf
jg
loopne
es
es
cmp
in
int
add
xchg
psubq
push
add
and
int3
jp
test
in
inc
int3
popa
xchg
xor
dec
clc
jmp
lret
jecxz
cs
sbb
jo
in
nop
sub
push
stos
cmp
dec
int
clc
cmpsl
orb
sbb
repnz
cmp
rorl
loope
icebp
sbb
cmp
lods
js
add
sub
jae
dec
out
push
pusha
gs
add
rorb
je
nop
test
jle
fwait
mov
xchg
sbbl
sbb
hlt
outsl
push
push
idivl
jae
ds
sbb
inc
adc
mov
and
xchg
data16
out
je
sub
shrb
mov
std
ret
adc
mov
call
loop
bound
stos
addr16
call
jecxz
add
shrl
adc
insb
mov
es
int
test
fs
push
insb
fiaddl
xlat
add
test
xchg
and
sbb
xchg
mov
push
out
inc
xor
sbb
inc
or
rcrl
xor
int
mov
mov
fdivrp
adc
mov
sub
mov
pop
mov
jns
in
cli
xor
inc
mov
add
add
stos
cli
mov
and
add
and
sub
rcl
jne
push
ss
xor
cmpsl
mov
fistl
push
xor
add
push
lcall
sub
inc
cmp
scas
and
je
inc
gs
inc
idivb
sub
cmp
fisubs
mov
jmp
xlat
sub
testb
lret
inc
mov
sub
les
lock
add
lods
cld
iret
shll
jno
xchg
popa
fidivs
xor
push
rclb
push
adc
jmp
enter
pop
mov
jl
lret
cld
sbb
lock
jbe
rorb
cld
scas
lret
mov
sub
pop
xor
int
pop
add
stos
jns
push
outsb
popf
bound
rcr
fwait
mull
daa
repnz
jmp
lahf
xchg
add
roll
enter
addb
mov
mov
push
adc
inc
jge
sub
mov
jnp
jne
mulb
int3
jmp
sbb
push
lods
sub
sub
mov
fadds
scas
test
pop
inc
inc
data16
cmp
xor
mov
jp
mov
sar
dec
ss
dec
sbb
sub
push
icebp
arpl
fwait
cmp
mov
rcrb
aas
movsb
stos
sub
popa
jg
jns
ss
mull
aaa
mov
les
and
movsb
push
mov
adc
mov
cs
lret
shrl
test
mov
or
mov
mov
lds
xchg
mov
cmp
jge
cmp
adc
loop
popf
aam
jmp
aas
add
popf
test
aam
cmp
push
cmp
inc
test
cmp
inc
dec
cmp
xchg
and
loopne
lahf
push
cltd
xadd
or
mov
int
fistpll
pop
xchg
sub
jne
or
dec
sti
adc
adc
jge
popf
test
aas
fwait
sub
and
hlt
pop
jle
or
jmp
add
call
shr
sahf
xchg
das
or
push
pop
lods
icebp
movsb
pop
int3
pop
sbb
leave
push
mov
mov
les
stc
pop
push
arpl
push
iret
mov
loope
les
adc
mov
call
xor
cmp
push
xor
and
or
push
sub
inc
cmp
movsb
negb
push
add
jbe
sti
je
lahf
xchg
in
pop
cwtl
stos
cmp
xchg
popf
xchg
mov
cmp
loop
add
aam
fld
push
cmp
push
add
push
xor
gs
leave
daa
xchg
int
ret
test
lahf
add
xchg
and
add
out
cmp
push
retw
stos
and
loop
cmc
in
imull
daa
aaa
xchg
sub
sub
out
pop
mov
mov
jbe
aas
das
lods
sbb
loop
mov
aam
test
push
xchg
sub
insl
lods
fldcw
cmp
insb
out
mov
cmpsl
sbb
pop
data16
cli
inc
mov
cmc
daa
je
imul
xchg
dec
fneni(8087
call
outsl
jecxz
mov
sbb
popa
xchg
aad
cmp
aas
push
cmc
push
out
outsl
fwait
repz
and
cmc
jg
incb
cmp
in
lret
popf
jge
enter
sbb
test
sub
aas
mov
ret
xchg
mov
sbb
hlt
inc
das
aas
push
cmpb
loope
cmpsl
ret
lea
rclb
xor
pop
outsb
in
sub
xchg
xor
lcall
adc
pusha
add
mov
repz
or
xchg
stos
mov
adc
pop
and
fbld
fdivrs
test
aad
sbb
xor
adc
pop
cmp
jecxz
dec
daa
arpl
test
mov
test
dec
sarb
jle
push
dec
ljmp
mov
mov
aam
adc
sub
std
sahf
add
mov
jmp
nop
shrb
stc
mov
fcomi
cmp
add
aam
bound
pop
or
dec
lret
push
jns
jno
fisttpll
loope
in
xchg
cmp
aas
in
jns
pop
mov
sbb
mov
push
mov
sbb
dec
sub
and
sti
jecxz
adc
rcrb
addr16
mov
dec
lcall
and
inc
cld
adc
rclb
add
add
jnp
fiaddl
inc
pop
add
mov
pop
xor
out
jecxz
jmp
or
lret
nop
dec
and
pushf
aad
cmp
bound
inc
dec
xchg
stc
aad
out
imul
jecxz
pop
pop
dec
mov
mov
pop
xchg
jb
mov
sbb
pop
pushf
adc
cmp
rep
pop
pop
bound
ds
jge
clc
adc
mov
jns
and
xchg
cmpsb
sub
cmp
mov
adc
push
pop
xor
sub
pop
loop
jmp
test
sub
push
fld1
outsl
test
add
movsl
lret
das
mov
clc
jl
mov
in
and
je
divb
xlat
ljmp
push
loop
xchg
fdivrp
mov
cmpsl
dec
push
fcoms
dec
repz
sub
arpl
dec
or
fistps
inc
lahf
cmp
dec
insl
cmc
pop
jb
repz
add
or
mov
sbb
negl
mov
push
test
call
test
mov
add
mov
outsb
mov
adc
enter
scas
xor
xchg
iret
cld
repnz
movsl
lods
and
fcoms
call
mov
adc
ret
fists
push
xor
int3
sbb
mov
cli
loope
mov
adc
mov
fimuls
sahf
es
sbb
jle
stos
shll
inc
ja
xor
sub
or
mov
in
cmp
bsr
cmp
and
pop
sub
pop
mov
enter
add
sub
sbb
mov
cmpsb
push
add
cli
clc
xor
mov
decl
call
fstps
mov
lcall
in
fisttpll
sbb
cwtl
cmp
xor
xlat
xor
pushf
dec
loop
mov
lods
das
dec
and
adc
push
rep
xchg
ret
jmp
cmp
push
and
jmp
inc
dec
cli
dec
xchg
out
lret
xchg
jp
sbb
pop
xchg
test
js
dec
xor
rorb
or
inc
add
sub
shlb
ficoml
push
adc
into
sti
call
dec
lret
ljmp
push
lcall
orb
pushf
mov
jns
shrb
ja
scas
xor
cli
fimuls
sub
subl
dec
mov
insb
push
dec
mov
out
or
dec
lods
scas
pop
cmp
cmp
mov
add
jle
aaa
add
add
dec
push
clc
lcall
aas
adc
hlt
or
cmp
das
testl
mov
loopne
cli
int3
or
ds
repz
add
jecxz
xchg
sahf
imul
push
insl
dec
or
out
dec
xchg
xchg
pushl
sbb
mov
jbe
ljmp
pavgw
jp
aad
test
into
mov
popa
sbb
cmpsb
xor
scas
pushf
hlt
sbb
sarb
in
dec
jbe
and
inc
and
mov
dec
loopne
stc
mov
icebp
out
push
aad
mov
mov
enter
mov
jle
lods
fcomps
push
adcl
mul
sbb
out
sti
imul
sbb
cmp
into
or
add
jl
lods
int3
cld
dec
add
inc
cmp
or
fdivl
jae
push
and
pop
pop
pop
or
fwait
ss
scas
test
sub
sub
or
and
sub
jg
ret
lcall
call
jnp
ds
xorb
cmpb
jmp
loop
adc
sub
sub
or
lock
pop
and
pop
test
fmull
add
test
sahf
aad
mov
and
mov
out
and
in
fwait
dec
and
out
push
scas
les
test
js,pn
and
ror
xor
das
dec
sahf
out
and
out
stos
loope
repz
hlt
mov
call
sub
lds
push
or
fs
mov
mov
xchg
repz
data16
dec
sbb
fisubrl
dec
jae
push
xlat
or
loop
lock
in
outsb
inc
cmpsl
loope
sbb
je
push
push
aas
lods
push
out
ret
add
ds
mov
or
push
sbb
dec
sub
cmp
cmc
adc
lcall
addr16
enter
scas
push
addr16
add
loope
xor
fistpll
pop
in
es
sub
imul
adc
or
jae
popf
bt
lahf
fidivrl
int
shll
stos
mov
fidivs
jae
sub
int
sbb
dec
mov
mov
mov
add
popf
aas
push
loop
xchg
bndstx
negl
adcl
xchg
jmp
aas
cmp
cmc
cmp
rorb
ficoml
adc
idivb
push
scas
mov
fs
out
cmp
lahf
les
inc
in
cld
jl
or
stc
jno
test
push
pop
or
dec
pop
sub
insl
push
push
popa
fistl
lret
pop
jns
sbb
dec
loopne
fs
int3
insb
and
lods
adc
or
sub
movsb
in
cmpsb
leave
in
push
and
dec
nop
pop
clc
sub
out
push
inc
loope
xorl
stos
fstps
cmp
push
cmpsl
xor
xchg
inc
cltd
test
push
xor
clc
ficoml
xchg
ret
pop
dec
dec
hlt
and
data16
push
sbb
pop
mov
shr
addl
loope
xor
cmp
sbb
dec
jp
std
ss
dec
sahf
popa
pop
lret
sub
or
daa
test
xcrypt-cfb
cmpsl
and
jno
imul
shlb
bound
hlt
cmpsl
mov
ret
loopne
loopne
das
pop
inc
ds
jbe
xchg
sbb
mov
rcrb
cmpsb
mov
xlat
or
or
addl
jp
popa
sub
pop
test
push
aad
mov
xchg
dec
push
cmpsb
xor
jbe
ljmp
mov
test
push
inc
and
test
dec
or
stc
adc
sbb
movsb
nop
cmp
mov
clc
and
lret
int
pop
cmp
out
sti
movswl
mov
or
pop
aad
aam
sahf
insb
mov
out
mov
scas
push
sub
cmp
popf
dec
jne
xor
adc
das
popa
fwait
or
repz
cmpsb
dec
icebp
enter
lret
mov
shrb
dec
inc
addl
jmp
xor
and
sti
mov
push
aaa
mov
aad
aas
add
je
inc
jns
xor
and
xchg
movsl
in
int3
repz
pop
push
mov
sbb
mov
pusha
add
mul
mov
add
sbb
pop
xchg
les
mov
adc
push
dec
mov
mov
repz
adc
xchg
outsl
fs
mov
mov
stos
sbb
sahf
stos
bound
jecxz
sti
sti
xor
inc
pop
add
pushf
xchg
rcll
pop
push
test
cmc
cmpsl
jo
lods
or
mov
xor
je
mov
xor
scas
dec
divb
insl
test
clc
xchg
ret
aad
push
repnz
arpl
xlat
or
cmp
jae
mov
pop
adc
mov
mov
and
aad
out
push
icebp
jge
aad
movsb
jne
and
sbb
adc
jo
aam
sarb
out
fucom
sti
cmpsl
add
sbb
repnz
dec
popf
lock
pop
paddusw
lahf
popl
aas
pop
ljmp
cltd
cmp
push
test
mov
jo
and
fmulp
loop
jae
mov
push
leave
movsb
outsl
or
mov
lods
jae
xchg
leave
test
xchg
sahf
test
fistpll
movsb
and
fcompl
jmp
dec
fsubrs
pop
out
repz
imull
sbb
mov
pop
push
sbb
cmp
cmc
mov
mov
xchg
add
mov
fsub
shlb
sub
push
movsl
dec
scas
jle
ljmp
cmp
xor
stc
imul
adc
and
cs
cmp
addb
std
xchg
jle
pusha
xlat
add
mov
fs
ljmp
inc
cltd
addr16
adc
leave
sub
ret
ljmp
mov
pop
cld
imul
push
mov
addr16
adc
push
cmc
add
push
inc
out
cmpsb
jmp
sti
xchg
fwait
hlt
popf
sbb
ja
adc
and
xor
push
xlat
xlat
repz
mov
mov
outsb
xor
imul
gs
pop
popf
out
xchg
xchg
je
ljmp
ja
or
or
inc
pop
imul
out
call
xchg
ficoms
and
not
cwtl
jecxz
stc
mov
aad
sbb
mov
scas
mov
sub
push
pusha
bound
xchg
mov
std
cmp
cmp
fs
ljmp
push
movb
popf
js
push
cmp
ret
mov
xorb
add
les
mov
and
bound
cli
test
jecxz
out
lcall
mov
scas
lret
or
adc
hlt
out
lret
add
push
aad
fistps
lcall
cmp
dec
sub
cltd
or
and
pop
adc
ret
mov
inc
div
imul
push
xor
cli
cwtl
enter
ret
loop
mov
jb
jb
jae
imul
sub
pop
push
pop
lret
jmp
xchg
xchg
mul
xchg
push
das
aad
subb
sbb
insb
push
call
ds
xchg
or
out
push
loopne,pt
jne
insb
push
mov
xchg
sbb
or
sbb
jae
mov
hlt
pop
fsubrs
popa
es
lods
inc
leave
xor
cmp
ljmp
cmpb
dec
mov
jb
inc
into
jb
repnz
addb
push
jae
fimuls
std
sti
adc
xlat
bsf
jge
in
cltd
mov
inc
subl
and
mov
repz
imull
sbb
clc
mov
stos
cmpsb
pop
jl
pop
sub
inc
lcall
push
push
xchg
pop
xchg
cmp
xchg
adc
js,pt
pop
inc
jg
dec
fsubrp
inc
loope
mov
and
div
jnp
ljmp
imul
lcall
jl
dec
shll
mov
dec
into
xor
adc
push
xchg
dec
pushl
pop
mov
outsl
mov
cltd
dec
adc
mov
sbb
punpckhbw
jne
jmp
int
mov
lahf
sub
add
test
and
cmp
lea
pop
loopne
loope
bound
popa
add
and
dec
pop
gs
jl
jno
cltd
mov
add
mov
bound
xor
repz
rcrl
test
push
mov
call
dec
push
push
push
and
sbb
jmp
mov
in
dec
gs
repnz
fsts
cmp
aam
fwait
mov
outsl
rol
lret
jbe
cmpsl
repz
fiaddl
push
arpl
iret
popa
mov
or
sar
add
aas
pop
mov
inc
mov
test
xchg
in
stc
bound
cmp
cmp
and
rclb
dec
push
cltd
iret
mov
sti
lret
sub
in
add
je
mov
pop
xor
push
repz
ljmp
jmp
dec
adc
mov
xchg
mov
mov
add
scas
nopl
into
xchg
outsl
jnp
jge
dec
lods
iret
inc
add
pop
jle
imul
cmpsl
je
fwait
jne
rol
les
bound
rolb
adc
aad
shrl
mov
pushf
scas
in
dec
sub
jg
in
inc
arpl
mov
negl
std
ret
lea
lock
and
or
enter
jmp
rep
and
lret
ficompl
xor
cmpsl
and
fisttpl
lock
push
je
mov
cli
jne
fdivp
adc
cmp
pusha
pop
insb
xchg
and
mov
push
pushf
push
jle
adc
pop
or
sbb
push
les
jbe
test
jns
out
es
cltd
loope
push
dec
lock
sarl
push
test
andb
call
shll
jg
mov
dec
cltd
shl
loopne
or
sub
adc
mov
push
push
mov
jne
cltd
mov
push
pop
inc
dec
outsb
outsb
icebp
ja
dec
pop
sub
dec
unpcklps
push
call
std
push
repnz
adc
xchg
pusha
or
pop
add
xchg
notl
mov
lret
test
sub
mov
ret
cmpsb
xchg
pop
adc
outsb
pop
pop
filds
cmp
test
ret
adc
or
popf
call
lods
push
xor
add
andl
inc
leave
lds
sub
mov
adc
adc
sbb
push
rcrl
mov
xor
adc
cmpsb
out
mov
sahf
mov
data16
and
mov
loopne
movsl
fcoms
xor
aas
adc
add
call
jg
out
fisttpll
sub
mov
pmaddwd
dec
sahf
in
push
pop
and
jbe
popl
rcll
and
fwait
cmp
outsl
inc
push
xchg
ds
add
out
xchg
inc
xchg
jno
mov
out
xor
mov
mov
es
xchg
cld
orl
ret
inc
sbb
addr16
insb
dec
pop
or
cltd
je
adc
xor
sub
xchg
scas
cld
xchg
in
jg
push
add
cli
mov
mov
push
shll
lods
fldl
cltd
sub
cmpsl
mov
call
movhlps
jp
flds
loope
stc
push
pop
mov
mov
in
mov
push
sbb
push
cmp
rcrb
sbb
je
mov
mov
mov
out
in
inc
lds
ds
movsl
rsqrtps
push
xor
mov
sub
mov
idiv
adc
je
stos
inc
jns
sbb
insb
dec
cmp
lahf
push
fstpl
mov
insb
or
adc
mov
cmp
push
sub
call
out
arpl
push
push
lcall
std
arpl
rorb
addr16
adc
or
data16
lcall
adc
clc
xorl
rclb
mov
cmp
lcall
and
push
mov
scas
fcmovne
and
fmulp
or
sub
fldl
adc
pop
mov
in
cmc
lret
aas
sbb
push
div
xchg
call
pop
and
shr
xchg
jg
scas
sub
push
and
jmp
in
repnz
jle
push
dec
xchg
movsl
xchg
ljmp
ljmp
jle
lcall
gs
cmpl
cmc
mov
mov
push
mov
enter
jg
and
sbb
mov
xchg
test
or
enter
mov
push
mov
xchg
icebp
mov
arpl
imul
or
push
lret
sti
out
imul
fimuls
int
insb
pop
clc
lds
lods
data16
xchg
imul
pop
pop
lret
pop
pop
fidivl
cmp
and
loope
dec
test
and
cs
lds
das
dec
xchg
jo
xor
cmp
jmp
push
popa
xchg
aaa
mov
dec
roll
pushf
outsl
pop
pop
pop
inc
pop
jg
dec
sub
ljmp
in
inc
mov
pop
cmp
mov
ds
push
ss
jno
es
push
nop
into
sbb
outsb
sub
jmp
adc
aas
repz
movsl
ds
or
aad
in
sahf
and
in
xchg
subb
loopne
add
dec
dec
mov
push
aam
inc
or
or
jns
lret
je
js
fs
aad
fucom
xchg
mov
sub
add
lret
ret
and
movsl
imul
in
aad
xchg
loope
dec
data16
mov
add
mov
push
xor
out
cmp
xor
in
icebp
xchg
incl
dec
movsb
mov
xor
enter
push
dec
fwait
dec
lock
rolb
lock
inc
mov
xchg
test
jne
ret
es
mov
out
mov
test
push
je
xchg
sub
pop
mov
inc
xchg
mov
push
movsl
movsb
sahf
cs
add
aad
mov
repnz
stos
push
mov
sub
lret
or
lcall
jle
int3
out
mov
out
cmp
mov
mov
xor
add
fcoms
dec
xchg
dec
dec
xchg
pop
dec
xchg
addb
cltd
jp
bound
ja
mov
in
jge
iret
or
pop
popa
jae
or
xchg
ds
enter
adc
and
stc
out
fwait
mov
mov
dec
sarb
out
lods
sbb
fldcw
xchg
jne
pop
rcrl
jae
adc
lds
repz
out
jp
mov
mov
and
xchg
mov
push
cs
inc
bound
out
arpl
subb
mov
cmpsb
push
vorps
lods
dec
xchg
or
jp
adc
shl
scas
cs
jnp
es
mov
aaa
int
sbb
dec
mov
sbb
adc
inc
add
and
sub
cmpsl
lock
mov
xor
decl
or
outsb
ja
cmpb
dec
fst
xor
add
xor
cli
push
mov
push
lds
cmp
jge
or
and
rclb
stos
movsb
push
in
aam
push
mov
and
out
mov
mov
mov
insb
sti
pop
jl
adc
rcl
cmp
int
outsl
outsl
pusha
int
and
or
and
or
repnz
loop
add
fstl
lahf
jecxz
test
test
mov
lcall
push
xchg
out
shll
pop
les
cmpsl
or
xchg
stc
aaa
addr16
loope
jg
fistps
mov
mov
mov
xor
subb
lods
mov
aam
sbb
jo
inc
pop
lds
xchg
adc
aas
sbb
int
es
sub
add
in
mov
mov
orb
push
int3
cmp
xchg
xor
je
xchg
push
add
add
inc
pop
and
stc
add
js
movsb
or
dec
jl
xor
adc
test
sbb
stos
cli
nop
stc
fidivl
mov
fdivrp
cmpsb
out
loope
pop
push
shll
sbb
and
sbb
icebp
mov
mov
pop
push
push
and
push
lret
push
mov
mov
movsl
bound
push
shlb
adc
mov
out
insl
jl
les
pop
fdivrl
mov
fistpll
jle
pushf
mov
sub
adc
in
mov
mov
aad
test
stos
dec
repz
pop
xor
stos
das
cmp
push
xchg
xchg
rorb
ljmp
aas
repz
jae
filds
xor
es
loop
stc
and
lods
sbb
and
sbb
add
mov
call
jne
mov
ret
lods
and
mov
or
jo
mov
lret
xor
mov
loope
mov
cld
shl
daa
lea
loope
jne
add
sbb
mov
fucomip
andl
out
inc
adc
enter
fwait
jae
xlat
xchg
and
shlb
add
lea
dec
pop
daa
push
and
inc
loope
lock
mov
clc
fistpl
mov
flds
lods
fdivs
push
leave
out
lea
inc
xor
mov
into
dec
out
mov
cmpsl
sub
add
ret
aaa
imulb
add
inc
and
and
pop
loope
mov
and
mov
dec
daa
cmc
mov
or
fsubrp
pusha
repnz
xchg
and
mov
or
stos
cltd
dec
xor
adc
cmpsl
das
sub
xchg
and
mov
out
ret
lahf
orl
outsl
stos
or
aas
fldl
jno
add
leave
xrelease
xchg
jge
jle
jge
ror
outsl
adc
cli
cmp
mov
push
je
xchg
push
jns
inc
rol
outsb
or
jo
mov
shl
mov
cld
rcrb
gs
jge
xchg
add
or
leave
or
les
mov
enter
sarb
xlat
and
pop
jl
mov
jno
xor
hlt
sbb
repz
out
cmp
out
jl
imul
mov
fists
out
jnp
in
sbb
test
test
nop
je
fists
scas
std
jbe
mov
or
movb
adc
insb
mov
cltd
mov
xchg
xor
push
sub
addr16
or
and
out
std
or
mov
mov
ds
mov
lahf
fstpl
add
pop
jle
jno
shrb
ret
mov
ret
out
lret
inc
jp
out
push
enter
cmpsb
or
shlb
pop
sbb
in
lds
iret
aaa
mov
prefetchwt1
or
enter
addl
dec
cmp
xchg
nop
enter
in
or
in
mov
stc
insl
mov
nop
add
les
mov
xchg
add
xchg
xor
lcall
inc
pop
fldt
sub
loop
add
les
or
aas
jge
into
mov
pop
inc
xchg
mov
mov
mov
addr16
push
xchg
adc
inc
ja
add
cmp
jns
into
lock
cltd
push
cwtl
imul
outsl
mov
inc
loopne
pop
out
push
arpl
gs
or
adc
in
mov
and
add
nop
push
jg
xor
and
jmp
icebp
xor
add
jae
sbb
push
mov
test
dec
cmp
sarl
leave
loope
int3
fstl
fldt
cmp
lret
ret
shlb
jle
xchg
dec
test
adc
loope
scas
jl
push
jns
adc
xor
or
pop
jle
mov
cmpsb
cmp
lds
pop
inc
jnp
das
xor
dec
stos
loop
mov
mov
mov
lock
xor
push
bound
add
addr16
cmp
sbb
dec
lock
inc
mov
cmpsb
scas
push
inc
dec
and
subl
adc
add
inc
mov
outsb
and
inc
lret
movzbl
in
mov
jno
js
clc
mov
add
inc
xchg
inc
mov
aad
out
js
dec
int
enter
lret
inc
aas
loop
or
jmp
call
insl
arpl
mov
push
jno
popf
rclb
daa
mov
mov
int3
mov
dec
cmpsl
lods
add
outsl
jb
or
movsb
adc
lea
ljmp
sbbb
mov
add
mov
dec
lcall
enter
mov
cmp
or
fldz
mov
test
gs
inc
pushl
xchg
movsb
or
lahf
sub
mov
in
push
jl
xchg
mov
pop
push
xor
in
and
push
flds
jno
xor
loop
jnp
lcall
std
ret
jmp
push
mov
arpl
addb
and
loopne
sub
xchg
fcoml
jo
jne
clc
pop
jecxz
pop
or
dec
sbb
mov
into
mov
hlt
stc
sub
mov
popf
sub
push
aam
movsl
pop
push
cmp
inc
lock
in
loop
xchg
dec
rorl
js
jecxz
jnp
ret
bound
push
pop
enter
xchg
scas
xchg
xchg
test
in
pop
test
sbb
xchg
test
dec
pop
sbb
push
mov
pop
jno
repnz
cli
and
adc
imul
repz
std
in
cmp
mov
ss
int
enter
and
push
bound
cmpsb
xor
push
sahf
cmp
push
inc
xchg
nop
insb
cltd
inc
sbb
std
data16
lcall
sbb
lcall
insb
in
adc
cltd
jecxz
sub
sbb
xor
and
inc
std
inc
jno
xlat
aad
in
inc
and
outsb
xchg
jno
icebp
jnp
int3
jmp
push
enter
cltd
out
xor
stos
pop
xor
inc
lahf
jns
ds
add
rorl
decb
lods
out
xchg
jl
fisubs
xchg
in
insl
ret
cmp
sub
stc
lahf
aam
sbb
cmp
inc
pop
sbb
pushf
repz
push
int3
stos
adc
mov
mov
movsb
pop
dec
scas
dec
enter
sbb
push
sbb
out
jbe
push
ret
out
ret
mov
imul
add
mov
ffreep
inc
adc
incb
dec
hlt
pop
mov
pop
xor
pusha
inc
inc
push
pop
pop
gs
mov
mov
sub
sub
ljmp
push
lret
sub
cmp
fcoms
rorl
sbb
je
adc
test
outsl
loopne
iret
inc
push
dec
mov
pop
sbb
sbb
testb
jmp
xchg
jb
adc
mov
outsl
pop
shr
lea
aaa
mov
test
mov
stos
mov
push
cli
cmpsl
arpl
scas
loopne
cmpsb
and
fmuls
je
cmp
adc
lock
rclb
insl
ljmp
xor
push
xor
mov
test
fisubs
inc
jp
or
and
sub
pop
arpl
mov
out
push
push
cld
sbb
pop
in
into
cmp
movsb
add
mov
outsb
cmpsl
lds
negl
test
push
enter
iret
jnp
clc
jmp
js
andb
lea
dec
mov
sbb
lret
rcll
test
and
test
mov
jmp
scas
mov
xchg
sbb
push
pop
jecxz
in
cmpl
and
jno
loop
pop
push
scas
xchg
inc
push
dec
bound
or
nop
cwtl
fs
aas
cmpsl
repz
push
jl
cs
push
clc
lret
sub
push
imulb
xlat
pop
ret
mov
clc
imul
push
jl
dec
mov
les
arpl
lock
insl
adc
iret
inc
adc
or
clc
popa
sbb
sbb
xchg
push
std
pop
hlt
hlt
xlat
fwait
and
sub
inc
repnz
mov
adc
xor
mov
enter
bound
in
sub
std
adc
ljmp
lret
mov
daa
push
cmpl
icebp
jbe
cmp
scas
xchg
cmpsl
cmp
cs
jg
add
mov
popf
dec
or
jns
pop
ljmp
mov
jmp
mov
fsubr
and
cmp
pop
and
jb
test
cmpsl
cltd
mov
xlat
insl
fwait
cmpsl
mov
adc
sti
std
scas
in
out
aam
adc
nop
les
jecxz
xchg
push
std
outsb
dec
pop
xchg
icebp
ss
mov
inc
mov
xchg
jno
add
enter
loop
shrb
and
jge
push
xor
test
xor
and
sbb
cmp
fldt
mov
arpl
adc
lds
jne
mov
mov
testl
lods
icebp
fwait
add
std
call
inc
lock
movsl
loop
xor
mov
pop
pop
mov
mov
xor
inc
adc
dec
push
int3
push
push
aas
jnp
cmp
sbb
mov
dec
add
mov
in
popf
in
inc
xor
rcrb
lds
pop
jnp
adc
rolb
sahf
mov
add
aaa
idivl
mov
scas
ljmpw
lock
xchg
mov
nop
loope
mov
inc
cmp
mov
ljmp
aas
push
push
cmp
or
mov
pop
sti
adc
mov
cltd
popa
sbb
sahf
or
dec
inc
xor
mov
lret
orl
cmc
push
popf
adc
bound
push
movsb
lock
sbb
mov
pop
lds
imul
enter
scas
add
js
addr16
adc
sub
les
sbb
or
pop
arpl
fidivrl
aad
sub
ds
push
mov
jg
mov
idivb
ss
xor
jg
mov
add
jp
fbld
mov
dec
popf
mov
lea
xchg
addr16
sub
dec
sub
adc
outsl
pop
fstl
jl
int
sub
insb
lret
lds
rorl
nop
jmp
int3
sti
cmpsb
fsts
and
mov
ds
inc
aad
add
inc
int
bound
inc
test
mov
jo
bound
xchg
xor
xchg
add
mov
mov
and
aam
stos
adc
and
jnp
stos
xchg
pop
je
das
aad
icebp
jg
pushf
pop
jae
xor
cwtl
sub
inc
jno
cmc
jmp
or
push
nop
jno
lret
stos
fnstcw
aas
outsl
out
mov
in
sbb
fwait
pop
and
loop
xchg
pop
insb
or
push
add
lea
fsubl
jo
adc
sahf
add
dec
push
loope
cli
xchg
shrl
mov
add
lods
xchg
cli
jmp
jl
xchg
or
xchg
les
jno
stos
aam
nop
pushf
cmp
lea
das
shrl
fistps
aam
in
mov
cld
jmp
data16
and
out
into
lock
push
inc
cltd
jno
test
call
pop
inc
jns
stos
xor
in
scas
add
adc
adc
insb
ss
cmp
imul
aam
and
pop
sub
mov
pop
and
pop
jmp
loop
fistl
jge
cmp
pop
mov
jno
out
mov
jg
mov
ficoms
inc
inc
daa
or
pop
mov
sbb
xor
and
subl
jae
leave
jns
jae
dec
mov
lret
push
nop
cmp
pop
lret
mov
js
sub
fisttpll
sub
jmp
testb
or
jae
jnp
jle
inc
adc
mov
pop
xor
loopne
sti
adcb
das
mov
andb
test
mov
add
ficoms
sahf
faddp
cmp
aaa
repnz
nop
cmpsb
mov
mov
mov
xchg
adc
mov
das
mov
fisubrl
cmp
ja
mov
mov
jl
mov
cmp
cltd
pop
test
loopne
daa
cld
inc
mov
loope
imul
cwtl
icebp
mov
or
push
push
add
test
aam
push
movsb
test
sbb
dec
addl
push
xchg
push
cmp
push
hlt
faddp
pop
cmp
out
mov
xchg
fs
cmpsl
xor
and
mov
mov
pop
loopne
and
mov
add
xchg
pop
xchg
clc
rcrb
fdivrl
sbb
cmpl
mov
and
test
xchg
fs
int
xchg
ja
movsb
jl
ret
sub
shlb
push
jnp
xor
pushf
syscall
dec
dec
aaa
lahf
out
arpl
dec
test
stos
iret
lds
xchg
jl
pushf
jmp
loope
loop
ljmp
cmp
outsb
cmp
cli
and
movsl
mov
shl
pop
pop
cmp
dec
adc
jo
out
test
dec
shlb
push
mov
insb
pop
fcomip
cltd
mov
or
ret
mov
pop
mov
xor
push
xchg
push
in
mov
push
stos
inc
push
fs
enter
jge
cmp
pop
jl
cmp
adc
clc
cmpsb
rolb
and
mov
sbb
jg
jmp
add
out
adc
and
add
sub
pop
les
sti
cmpsb
dec
cmp
pusha
jmp
mov
ds
xor
lcall
mov
push
or
xlat
sti
push
push
pop
add
pop
push
repz
jnp
stos
nop
sar
pop
sti
ficoml
cmpsb
inc
loope
pop
xchg
xor
cltd
mov
mov
pop
lret
sbb
mov
ds
gs
jmp
dec
xor
outsl
test
pop
pop
jecxz
jb
pop
xor
ja
jno
pop
icebp
insl
in
imul
lea
pop
pop
je
sbb
test
dec
xlat
push
sti
inc
push
fwait
push
pop
lret
scas
mov
add
fiadds
jns
in
mov
sub
movl
mov
sbb
ss
xchg
adcl
push
push
push
lods
pop
cmc
adc
or
xchg
pop
dec
and
xchg
pushl
sti
push
adc
jno
int
adc
fcoms
cmc
arpl
out
jbe
xor
jle
jg
call
lcall
and
jns
cmpsl
movsl
addb
pop
add
xor
fisttps
test
in
and
ja
or
mov
mov
std
leave
loopne
sub
pushf
dec
pop
js
std
xchg
jno
xor
cwtl
adc
movsl
push
stos
and
nop
push
mov
jns
push
iret
in
pop
decb
bound
jnp
sub
movb
std
lret
aad
insl
jne
aaa
cmp
mov
xchg
push
outsb
sub
push
push
dec
shl
scas
jne
inc
roll
xchg
or
push
aas
sub
cwtl
jg
xchg
jl
xchg
mov
adc
and
xchg
loopne
or
sub
outsl
ss
xor
int
push
inc
inc
add
adc
dec
stos
scas
jmp
mov
dec
stos
popa
je
and
rclb
test
xchg
cmp
arpl
jle
xor
cltd
ljmp
subl
push
fldt
add
rclb
out
mov
loopne
cld
xchg
dec
std
mov
or
outsb
xchg
mov
shr
mov
je
mov
out
js
add
mov
mov
out
insl
ret
repnz
and
jne
movsl
mov
mov
mov
xchg
insb
mov
mov
inc
arpl
in
and
cmp
jae
test
ds
bound
stc
xchg
and
outsb
adc
add
mov
fcompl
add
repz
sbb
fs
pop
pop
out
push
adc
jno
pushf
inc
add
sbb
sbb
pop
add
pop
sbb
jnp
mov
jbe
fisubl
std
xchg
add
xor
dec
jmp
mov
mov
or
or
jle
xor
scas
andb
in
fdiv
adc
pop
mov
dec
into
das
cmc
mov
mov
xchg
adc
mov
and
sbb
test
rclb
adcb
int3
aas
pusha
xchg
xchg
and
dec
std
cli
or
testb
pop
dec
fdivrl
cmp
xchg
or
mov
cwtl
cmp
shl
es
aaa
out
stc
scas
xorl
mov
rcl
dec
jmp
scas
push
cmp
push
cmp
popf
in
gs
aas
leave
pop
mov
push
or
sub
sbb
xor
inc
push
pextrw
cmp
bound
sub
hlt
mov
insl
repz
mov
mov
or
in
push
lret
xor
fldl
cmpsl
lods
mov
mov
xchg
fs
push
mov
pop
jo
pop
loopne
les
adc
shl
mov
test
push
sub
lods
int
lods
pop
sbb
sbb
pop
dec
sub
sbb
dec
pop
xor
test
sbb
std
sub
fdiv
mov
cli
insl
ja
push
insl
imul
push
xor
cld
adc
rcrl
push
lcall
cmc
test
inc
mov
mov
cmpsl
imul
mov
lret
sub
push
pop
lock
mov
ds
mov
hlt
test
jle
push
push
push
push
pushf
and
dec
pop
mov
bswap
xor
popa
clc
insb
mov
enter
dec
adc
jp
ret
mov
cmp
test
mov
push
sub
jnp
cmp
sbb
mov
les
dec
fiaddl
fs
xchg
sbb
int
mov
xchg
ds
pop
test
sub
cwtl
divl
les
inc
or
fsubs
xorb
sbb
addb
jle
xchg
dec
push
xor
cli
jg
push
add
or
popf
or
mov
mov
sub
push
xchg
lret
scas
cmp
sbb
incb
out
push
mov
cmpsb
adc
push
ds
and
sbb
popa
jns
sub
add
inc
stos
addr16
jle
adc
jl
jle
mov
mov
mov
pop
jb
ss
scas
add
or
outsl
mov
add
hlt
push
or
lcall
dec
push
bound
jl
mov
out
into
pop
in
outsb
adcl
jge
les
push
test
scas
mov
out
sbb
cwtl
xchg
push
lahf
adc
ret
pop
lret
xlat
lods
lret
xor
jns
sbbb
stos
rolb
les
lock
push
dec
rolb
jo
pop
push
int
inc
add
lcall
fidivrs
lods
cltd
jnp
sbb
mov
push
rclb
xorl
rorb
lock
mov
xor
mov
mov
sub
mov
pushf
dec
je
mov
push
jmp
sub
mov
or
popf
rorb
xor
and
fs
out
adcl
push
and
je
jp
mov
xchg
adc
pusha
rcl
shrb
ja
add
jnp
pushf
into
pop
cmc
sbbb
jg
mov
data16
fsubl
pop
in
mov
push
cwtl
mov
xchg
jno
fbstp
sub
add
enter
dec
data16
daa
sbb
cmpsb
lds
cmp
fdivrl
xchg
shll
inc
pop
pop
scas
subb
repnz
mov
lcall
inc
aad
push
jbe
xlat
and
scas
xchg
frstor
inc
add
sub
lds
or
xorl
pop
mov
fdiv
jp
cmp
insl
jb
rcll
sbb
out
add
loopne
shl
loop
mov
lea
mov
xchg
aad
lock
in
mov
lahf
pop
mov
pop
xchg
lock
mov
xor
mov
stos
xor
std
pusha
jg
jns
and
popf
jae
mov
push
inc
push
leave
cmp
jmp
xchg
push
jbe
cmpsl
mov
movsl
xor
add
pushf
std
push
test
mov
loope
jo
inc
cmp
mov
nop
cmc
insl
rol
jge
xlat
repnz
lods
movsl
outsb
sti
push
out
mov
or
xor
sbb
push
clc
mov
sub
dec
xchg
add
dec
mov
mov
and
mov
repz
xchg
outsl
loop
imul
sub
arpl
pusha
and
mov
sbb
lret
push
dec
popf
push
xchg
stos
sub
outsl
push
inc
mov
in
testl
and
cltd
in
xor
ljmp
mov
mov
or
cmp
add
ss
xor
dec
lock
les
fcmovbe
jp
arpl
sbb
into
xlat
cmp
loope
xor
daa
xor
or
xor
sti
rolb
imul
push
mov
push
scas
pop
jns
add
cmp
mov
lods
addr16
mov
testl
push
fiaddl
mov
add
fs
push
in
pusha
mov
pusha
outsb
push
mov
outsl
repz
xchg
pop
popf
sub
and
push
push
sub
cmp
add
sbb
xchg
xor
mov
cmpsl
or
mov
cld
push
aas
scas
fisubrs
insl
fisubrl
pushf
mov
arpl
enter
jge
test
fbstp
shll
mov
push
mov
xchg
fldcw
mov
stc
ljmp
sub
lea
lcall
push
sub
push
add
mov
in
negb
sub
jno
fisttps
aaa
inc
pop
fsts
mov
adc
adc
push
insl
fcoms
flds
rolb
faddp
lock
sahf
mov
inc
pushf
sub
lods
sub
in
mov
addr16
cmp
mov
jle
lret
mov
pop
pop
lods
xchg
push
push
das
sbb
movsb
mov
mov
lret
sbb
inc
out
jecxz
and
mov
sti
inc
or
dec
cmpsb
enter
xchg
jae
sbb
xchg
or
push
xor
jmp
jo
mov
imul
adc
xor
out
aad
and
push
ja
lahf
dec
rclb
shr
mov
dec
jp
mov
gs
mov
fistpll
cmp
xor
xor
shl
aas
mov
lret
cmpsb
sarb
mov
dec
out
lea
stc
enter
outsb
inc
clc
nop
jl
lds
das
outsb
cltd
cld
or
addr16
inc
push
xchg
lods
loopne
add
or
sahf
push
fistpl
jge
movsl
int3
ret
inc
mov
pop
idiv
push
adc
and
jge
sub
mov
xchg
test
lods
xchg
out
or
mov
inc
out
cmp
lahf
adc
jmp
jb
mov
insb
or
fdivrl
jne
sbb
sti
or
lods
int3
jns
ss
aam
rcr
fists
adc
sbb
movsb
ret
out
cld
xlat
fldt
mov
loope
mov
test
dec
adc
and
popf
icebp
xor
iret
cmpsl
push
das
lret
cmp
js
fcomi
mov
adc
sahf
test
lods
xchg
xor
inc
out
movsb
sub
xor
mov
loopne
dec
lock
in
ret
gs
dec
test
outsb
aam
rcrb
test
sub
cmpsl
mov
pop
pop
mov
cli
aas
sub
daa
jns
xchg
pop
xchg
pop
imul
dec
arpl
in
jb
mov
hlt
cmp
mov
enter
dec
bound
mov
xchg
jecxz
push
out
jno
mov
xor
insb
push
cmpsb
andb
movsl
xchg
shrb
jns
mov
xlat
faddl
loopne
dec
jge
push
sarl
push
cmc
dec
xchg
pop
xor
pop
popa
pop
pop
andb
lods
jne
pop
push
lods
data16
andl
les
data16
test
ret
cltd
mov
lahf
xchg
push
adc
loope
sbb
into
fcomps
jp
out
mov
or
in
call
jp
xor
mov
mov
fbld
xor
movsb
xchg
xor
imul
ret
mov
dec
push
fwait
sbb
xorl
cmp
stos
test
adc
mov
test
lods
shlb
inc
sub
push
ficompl
sar
jg
adc
xchg
lret
pop
sti
fdivrs
pushf
and
rorl
xchg
xor
push
repz
sbb
filds
dec
xchg
cs
sbb
sbb
std
mov
cs
sub
add
or
rcll
in
or
stos
cld
lock
in
sbb
xlat
fsubrs
into
mov
out
orb
ja
cmp
aam
add
push
mov
cmp
sub
and
in
lea
sbb
adc
imul
xchg
pop
xchg
rorl
xchg
aad
sbb
outsl
les
xchg
rcll
cmp
loop
popf
sbb
enter
xorb
out
ljmp
dec
js
arpl
mov
push
push
sbb
das
das
shr
jle
dec
cmp
mov
leavew
mov
mov
jae
mull
xchg
push
xchg
leave
push
push
jp
loop
clc
mov
sar
aad
pop
cmpsl
xchg
inc
stc
into
repz
sub
mov
ja
movd
out
mov
andl
push
or
std
enter
mov
push
dec
ret
cmp
jge
scas
addb
daa
lret
rolb
mov
cmp
mov
inc
int3
mov
xchg
pushf
cmp
mov
jp
pop
dec
lods
pusha
sub
inc
pop
fsubr
addb
xchg
fwait
xor
imul
xor
xlat
cmp
cmc
or
popa
push
test
das
jno
jle
scas
lock
adc
mov
mov
decb
pop
cwtl
and
adc
jmp
in
xor
loope
lret
inc
dec
call
cmpsb
fistpll
pushf
ss
iret
pop
fildl
cmp
xchg
inc
or
mov
ret
xchg
mov
or
push
insl
hlt
xchg
adc
icebp
cli
hlt
mov
mov
shlb
xor
add
mov
dec
in
jmp
test
les
sti
je
cltd
cmp
daa
stc
mov
cmpsl
shlb
add
sub
mov
mov
insl
nop
push
movsb
out
inc
cwtl
pop
shrl
push
jo
cli
sbb
enter
cmc
jae
add
adc
mov
pop
add
pop
test
scas
cmc
xor
cmc
add
mov
and
scas
push
push
in
dec
mov
shll
mov
pop
sbb
push
scas
test
sub
stc
pop
arpl
mov
pop
cmpsb
icebp
add
std
adc
in
xor
dec
cmp
sahf
daa
push
cli
dec
jae
jo
jle
lods
mov
in
ret
fwait
cmpsl
imul
enter
jnp
outsb
xchg
jnp
stc
pop
scas
pop
xchg
inc
sti
lods
sub
mov
rcl
jecxz
outsb
std
sub
js,pt
imul
mov
push
ret
hlt
adc
sbb
lds
push
push
pop
jo
fs
mov
out
popa
sbb
or
shrl
jno
jle
push
pop
ja
xchg
in
mov
arpl
mov
stos
call
ja
shr
sti
sbb
adc
push
fcoml
mov
cs
pop
jne
fwait
or
test
add
or
mov
sbb
dec
xchg
push
fucomp
adc
pusha
not
iret
les
scas
scas
in
cs
fwait
push
popf
pop
sbb
popa
inc
sub
dec
jb
adc
jp
jg
outsl
sbb
dec
pop
sub
data16
sarl
jmp
and
dec
sub
sbb
or
movsl
lds
dec
cltd
jbe
hlt
and
dec
cmp
inc
daa
mov
outsl
and
jge
lds
dec
jns
mov
and
pushf
inc
repnz
repz
fnsave
aad
pop
cmp
xor
fnstsw
sub
mov
and
cmp
add
mov
adc
or
popa
push
fdivrl
dec
inc
cmpsb
mov
pop
dec
xor
adcl
jp
insb
inc
sbb
lret
arpl
mov
pop
mov
jge
mov
daa
sbb
jecxz
pop
test
jge
dec
add
dec
lods
xchg
aad
cmc
lods
into
aas
xchg
mov
xchg
mov
adc
push
pop
bound
pop
cmpsb
mov
scas
adc
mov
and
insb
nop
add
push
cmc
sbb
sbb
dec
imul
add
cwtl
cmp
clc
repz
dec
jo
lcall
int
or
mov
pop
mov
rcl
dec
xchg
inc
repnz
test
jbe
lods
and
movsb
mov
dec
pop
xchg
repz
cwtl
push
lret
int3
pop
shl
fmull
mov
add
test
repnz
repz
pop
in
sbbb
int3
dec
push
cmp
xchg
xor
daa
mov
inc
rorl
push
dec
push
enter
nop
cli
les
cmp
sub
aam
or
in
sbb
adc
les
adc
int
sbb
shll
adc
call
inc
scas
cmp
jmp
sub
mov
gs
out
nop
adcl
dec
push
shll
mov
push
sub
jp
cltd
cmp
mov
xchg
push
fnstsw
push
jno
push
push
imul
je
pop
inc
repz
xchg
lcall
lret
shlb
sarl
fists
movsl
inc
cmp
out
jae
cltd
or
sub
adc
adc
ficoms
fnstenv
imul
imul
push
stc
rcll
cwtl
pop
addl
sbb
movsl
xchg
ret
mov
gs
xlat
add
mov
inc
daa
mov
inc
inc
cmp
jmp
add
pop
mov
imul
out
mov
leave
adc
shll
out
in
jg
push
aam
mov
test
scas
add
mov
or
ficoml
test
scas
stos
nop
jmp
mov
cmp
jge
dec
sub
mov
roll
sbb
mov
mov
jno
stc
into
sbb
push
sub
fs
adc
mov
lret
add
scas
je
scas
dec
pop
or
out
js
sbbb
outsb
gs
out
add
pushf
inc
stos
cmp
push
lret
dec
xchg
nop
xchg
int3
jns
test
push
mov
inc
cmpl
dec
mov
in
push
xor
loope
jb
mov
enter
icebp
es
mov
pushf
push
nop
sbb
fcoml
and
adc
add
test
lret
jo
test
imul
pop
add
or
loopne
arpl
or
outsb
xor
and
pop
inc
sbb
push
data16
cltd
jb
in
outsb
adc
or
or
inc
mov
mov
xchg
clc
dec
pop
and
mov
cltd
outsb
mov
jae
stos
pop
dec
add
cs
mov
jge
pusha
xchg
push
xchg
jae
pop
jae
mov
orl
jns
xor
je
insl
ja
jmp
jb
pop
cmp
add
fistpll
mov
xchg
sub
cmc
xor
movsl
dec
inc
sbb
roll
cmpsb
out
in
jecxz
mov
inc
xor
es
fs
or
out
out
cmp
mov
pop
xchg
mov
mov
pushl
jge
cmp
mov
add
repz
adc
sub
push
add
insl
pushf
sub
xchg
sti
shr
fimuls
rol
jo
xor
inc
repnz
jo
outsl
dec
and
cmp
or
sbb
push
into
call
fistps
rol
xchg
lret
decb
jns
sbb
movsl
add
mov
in
push
mov
movsb
xchg
mov
cmp
dec
xchg
xor
push
inc
jae
adc
xchg
mov
adc
xor
arpl
mov
sub
ja
mov
jmp
scas
cmpsl
lret
iret
clc
bswap
stos
hlt
scas
cwtl
inc
cmpsl
scas
xor
jns
push
cmp
test
dec
jnp
xor
push
je
test
inc
pop
cs
xchg
sub
jae
popa
filds
fidivrs
outsb
mov
xlat
stos
jne
or
sbb
xchg
loop
sub
sbb
in
gs
xchg
not
cmpsb
cmp
outsb
cmc
mov
push
xchg
jg
pop
clc
sarb
enter
xchg
icebp
fbld
outsl
add
and
imul
and
add
lea
and
int
aaa
les
inc
xor
or
push
inc
mov
les
mov
inc
daa
js
leave
push
pop
es
js
dec
and
sbb
ss
repz
xchg
pushl
and
cmp
inc
cltd
daa
mov
loopne
inc
add
xchg
arpl
dec
fwait
sahf
daa
cli
mov
jle
test
scas
mov
js
test
inc
cltd
sub
pop
push
or
popa
leave
cmp
sub
inc
cltd
push
mov
fsubs
xchg
pop
adc
mov
call
mov
sbb
push
cmpsl
pop
jns
mov
rcrb
lahf
pop
loop
jno
jo
xor
aaa
pop
push
ljmp
push
or
shl
ret
aad
adc
dec
pushf
dec
push
mul
pop
ss
fiaddl
mov
int
xchg
pop
pop
aaa
jecxz
test
shll
test
rol
xchg
sbb
cmpsb
lods
dec
xchg
jo
cltd
leave
mov
cmp
mov
sahf
pop
lea
loopne
bound
mov
mov
add
fisubrs
int
mov
mov
aas
pop
or
popf
push
stc
test
movsl
jns
mov
dec
lods
xor
xor
mov
sub
jae
adc
mov
or
jbe
push
lds
xor
mov
dec
out
push
movsb
jg
xchg
mov
adc
out
jo
aas
ja
lcall
inc
sbb
nop
rep
push
loop
data16
mov
ja
aaa
pop
es
jae
dec
repnz
lret
inc
xor
jns
lret
mov
push
and
dec
jne
push
xor
sbb
out
loop
inc
pop
scas
iret
cmpsl
insb
sbbb
in
pop
loope
jno
sbb
test
loope
repz
je
divl
or
rorb
sub
mov
or
push
pop
aad
inc
push
daa
sbb
or
dec
jno
icebp
push
pop
pop
stos
cmp
clc
sarb
test
push
xor
adc
and
adc
pop
stos
cmp
ljmp
pushf
inc
es
aas
js
or
jl
adc
mov
repnz
xor
xchg
cmp
dec
icebp
xchg
fs
push
dec
xchg
pusha
jne
add
ror
mov
ret
xchg
pop
iret
inc
mov
mov
cmp
lea
mov
aam
pusha
or
push
outsb
add
mov
and
push
sbb
xor
cltd
inc
test
mov
pushf
addb
addb
arpl
mov
adc
mov
int
inc
mov
mov
dec
inc
lcall
dec
gs
into
fs
js
aam
nop
xor
dec
iret
xchg
dec
stos
fldenv
pop
gs
mov
adc
mov
lahf
hlt
cmp
xchg
dec
jo
sbb
cs
cmp
xchg
pusha
cld
jne
push
scas
add
sub
dec
xchg
adc
roll
movsl
push
fildll
mov
or
pop
xor
fs
add
push
into
adc
mov
arpl
adc
ds
jo
cmp
mov
xor
mov
insl
or
dec
outsb
icebp
adc
jmp
jo
push
sub
fildll
cltd
inc
mov
in
and
adc
lahf
pop
rorl
sti
cmp
ja
std
int3
ficomps
les
push
jmp
inc
jmp
das
cmpsl
xchg
pop
enter
jne
fwait
decb
cltd
xchg
dec
leave
fwait
add
and
bound
fdivrp
or
mov
push
add
sub
dec
fnstsw
cmp
push
adc
cld
sbb
xor
in
std
lods
stos
jb
jae
inc
xor
test
ja
ljmp
shrl
scas
add
stc
push
fwait
outsb
pop
out
dec
xchg
ljmp
icebp
add
popf
add
add
decb
sbb
icebp
lds
or
lret
lea
lods
dec
mov
sub
xor
or
repnz
inc
pop
or
lods
ljmp
push
sbb
cs
je
into
mov
fsubrs
scas
and
jb
nop
and
inc
mov
pop
or
bound
in
scas
mov
ja
cli
test
jns
xchg
cltd
push
push
mov
xor
loop
and
loope
popa
jge
fstpt
aaa
lahf
push
jae
mov
divl
pop
sub
xchg
in
mov
and
inc
fisttpll
mov
or
mov
jbe
sub
jns
xchg
mov
lods
jmp
lmsw
add
sub
ret
jl
push
or
sub
mov
stos
add
adc
xchg
mov
js
call
es
cmp
jns
cmp
notl
cld
iret
mov
sbb
pop
pop
xchg
xchg
in
shrb
js
and
cs
xchg
outsl
lods
and
insl
fwait
sbbb
mov
push
lods
pop
fwait
pushf
jmp
push
xchg
insb
adc
adc
rcll
pop
mov
sub
and
loop
clc
cld
aas
scas
dec
test
or
pop
mov
pop
call
push
into
sub
xchg
xor
movb
lods
sub
mov
push
push
test
fcmovnb
dec
pop
xlat
sbb
lcall
imul
mov
mov
loope
pop
je
pop
lcall
or
jmp
jo
xor
sbb
fs
mov
jecxz
sbb
push
mov
test
mov
pop
jmp
mov
add
lods
jns
inc
adc
inc
mov
outsl
pop
mov
and
jge
in
ret
sub
movsb
adc
jg
inc
adc
test
dec
arpl
iret
les
mulb
scas
jmp
or
popf
fstps
lret
cmc
push
jnp
push
mov
fsts
inc
lahf
mov
xchg
scas
int3
xor
cmp
iret
pop
sbbb
adc
outsl
mov
addr16
out
test
pop
xor
push
das
xor
xchg
jl
pushf
xchg
xchg
xchg
sbb
xchg
xchg
push
adc
xchg
dec
cltd
aaa
outsl
rcr
jp
push
sub
sub
imul
pop
gs
repnz
mov
mov
or
loopne
push
int
bound
icebp
stc
dec
enter
add
bound
inc
das
mov
dec
negl
push
add
movsbl
dec
inc
loopne
out
xor
xchg
adc
xchg
jge
lret
mov
cmp
imul
xor
je
and
mov
pop
sub
jle
shll
mov
pop
xlat
ss
cmp
or
jecxz
gs
mov
xor
inc
xchg
cmp
and
jo
out
scas
stc
neg
lock
mov
fcompl
jmp
imul
or
popa
jge
xchg
adc
imul
adc
cld
add
add
lret
inc
daa
aam
dec
pop
fidivrs
repnz
xchg
sbb
out
dec
arpl
inc
add
lcall
push
adc
call
movsb
push
cwtl
rclb
push
imull
and
sub
xor
sbb
out
cwtl
out
dec
cmp
cmp
xchg
or
movsl
ret
out
out
mov
mov
cbtw
jmp
ds
add
dec
ljmp
lea
xchg
pop
pop
pop
mov
inc
rolb
cmpb
add
sub
sbb
es
cmpsl
sbbl
mov
mov
add
sti
xchg
call
stc
jg
dec
bound
cltd
push
push
sub
or
jno
push
cld
enter
mov
test
inc
push
and
cmp
out
and
and
mov
xor
and
sbb
xor
inc
call
sbb
add
mov
cwtl
out
or
sub
cmp
cmp
xlat
xor
enter
or
mov
dec
shll
test
cwtl
dec
fwait
cmp
inc
xchg
pop
cmpsb
pop
gs
jl
int3
ds
pop
rcl
dec
mov
lods
fsts
lea
sbb
pop
lock
clc
or
lock
loope
adc
ret
sbb
mov
pop
push
pushf
gs
cmp
adc
int
shlb
aad
mov
add
sbb
mov
mov
dec
sbb
fcompl
mov
out
addb
fmuls
sbb
sub
mov
add
and
pusha
sub
lods
push
xor
jp
or
cmovno
pop
lret
cltd
lcall
push
das
cmc
pop
outsb
jo
stc
mov
sub
cli
and
fdivrp
imul
in
vcvttsd2si
lods
xchg
fs
xchg
xor
cs
push
std
lret
sbb
xor
and
dec
cmpsb
test
iret
outsl
je
aam
data16
out
dec
fsubrp
leave
mov
addb
xchg
data16
fidivrl
mov
and
jmp
add
push
lods
push
lds
dec
mov
hlt
jmp
inc
mov
mov
and
leave
cli
inc
clc
inc
test
mov
outsl
je
in
scas
popa
dec
outsb
xor
cmp
xor
xchg
or
enter
push
cmp
cmp
or
ret
pop
in
jmp
mov
xchg
in
ja
push
das
je
mov
xchg
fwait
or
cmp
adc
cs
out
xor
inc
fxch
mov
mov
insb
inc
test
lahf
ss
or
out
mov
movsl
aad
cmp
popl
adc
jnp
inc
imul
inc
inc
xor
mov
shll
xor
lret
mulb
xor
ret
cmp
jnp
jae
mov
pushl
dec
xor
je
sbb
xor
mov
mov
fistps
das
xchg
and
sbb
xchg
jl
pop
add
out
jbe
jp
dec
or
pmaxub
pusha
push
pop
push
inc
add
dec
stos
dec
jle
jae
cwtl
pop
pop
mov
mov
jmp
pop
xor
lock
or
inc
das
and
xchg
repnz
pop
adc
xor
sbb
or
out
dec
bound
out
cld
cmp
sub
inc
test
das
pop
mov
inc
cmpsl
cmpsl
gs
aam
push
xchg
cmpl
lock
pushf
mov
xor
stos
lret
xchg
insl
inc
jg
test
nop
mov
jecxz
push
sbb
sbb
call
cmp
and
movsl
outsb
and
push
in
outsl
loopne
push
lods
std
cmpsb
jmp
pop
and
push
ljmp
adc
das
nop
orl
sbb
addl
mov
lea
leave
loop
mov
xchg
adc
push
inc
adc
sti
xor
out
xchg
hlt
dec
xchg
sbb
inc
add
inc
push
inc
inc
push
xor
in
mov
jp
arpl
fs
fimuls
mov
sarb
jne
test
insl
call
into
mov
imul
jmp
aad
mov
pop
jmp
xchg
adcb
jbe
popf
lods
sub
idivl
push
xchg
lret
inc
add
pop
test
jge
fdivl
xor
js
mov
outsl
dec
les
xchg
lcall
in
jo
or
adcb
inc
push
test
mov
and
subl
inc
push
pop
cmc
sub
sub
xchg
jp
shrl
ret
and
pop
push
shll
dec
jl
mov
cmp
dec
ss
dec
mov
fisubrs
cmpb
outsb
jbe
sbb
mov
aaa
xchg
dec
jae
pushl
pop
sbb
das
std
mov
mov
pop
push
add
lock
imul
les
xor
dec
jmp
push
and
lea
mov
jns
dec
std
ficoms
lea
dec
xor
out
xor
ds
mov
into
fistl
aas
pop
dec
sahf
call
pop
cs
lahf
or
packsswb
mov
push
shlb
es
xchg
pop
aas
mov
or
aaa
and
cmp
mov
mov
shrl
cwtl
test
pop
ret
jo
sub
pop
into
ljmp
fistl
xchg
mov
pushf
fldcw
fistps
mov
icebp
pop
lds
jmp
push
mov
cld
add
data16
pop
incb
inc
adc
loop
xor
sbb
out
xchg
adc
jb
in
and
repnz
fildl
popf
xchg
mov
popf
stos
les
mov
lahf
lea
mov
addb
fwait
xchg
js
ret
xor
popa
and
out
scas
push
xor
ror
loope
dec
lock
mov
xchg
cmp
inc
loope
into
pop
movsb
shll
cs
dec
xchg
test
repz
cli
xchg
pop
iret
or
push
sbb
enter
pop
mov
jl
mov
mov
sub
sbb
push
xor
fwait
cld
popa
pushf
test
fwait
insl
pop
stc
addr16
stos
cli
and
out
stos
aam
orb
sahf
int
out
pop
dec
adc
pushf
mov
fildl
jns
mov
lods
fsubr
and
dec
adc
pop
mov
pusha
lahf
xor
lock
ss
gs
pop
xchg
std
dec
pop
insl
xor
cmc
xor
test
push
pop
fldl
ds
sbb
data16
aad
out
in
add
adc
lock
or
push
add
loope
cmpsl
aaa
popf
lret
ljmp
mov
push
ret
repnz
fcompl
sarl
test
shlb
test
mov
mov
shll
lcall
xchg
fs
or
and
inc
jecxz
push
les
pop
mov
xchg
movsb
push
jne
mov
cmpxchg
jb
test
push
jl
mov
xor
push
sub
sub
sub
fisubrs
inc
lahf
cmp
push
sbb
fnsave
cltd
pop
sbb
test
xor
mov
mov
in
push
fptan
fistps
and
cld
push
or
cltd
and
sar
fcoml
sub
mov
pop
pop
inc
pusha
push
into
ds
pop
sbb
stos
repz
dec
scas
mov
push
add
sbb
adc
add
test
mov
out
jp
test
adc
pushf
cwtl
cmp
inc
xchg
in
inc
decl
cmp
push
divl
mov
mov
mov
jae
sub
xchg
ljmp
in
pop
pop
mov
adc
or
pop
notl
jne
lret
out
adcw
es
lods
mov
push
jbe
js
daa
daa
loopne
dec
mov
mov
adc
dec
int
pop
dec
cmpb
imul
or
and
dec
jae
mov
sub
xchg
nop
jo
rcll
pop
mov
mov
fs
enter
dec
cld
push
rolb
cmp
iret
in
mov
aaa
mov
mull
push
push
xor
adc
repz
xlat
sbb
scas
lods
mov
gs
add
mov
jnp
nop
sub
dec
push
ljmp
and
fwait
pop
jb
xchg
rcr
or
push
jmp
pop
jno
or
inc
and
mov
imul
xlat
jne
mov
std
mov
out
leave
ds
mov
decl
into
pushf
jecxz
adc
stc
mov
sub
pop
mov
mov
pop
fldt
aaa
push
adc
fdivr
add
test
in
cltd
std
sub
xor
popf
mov
ror
and
data16
enter
loopne
shl
ja
data16
mov
add
mov
loope
or
mov
jl
mov
and
jbe
call
sub
test
shrl
dec
loopne
mov
stos
pop
adc
jno
jmp
push
in
pop
fnstenv
adc
std
mov
sbb
ss
jle
dec
les
insl
jecxz
xor
in
push
adc
lcall
les
aas
scas
push
out
out
icebp
stc
jno
cmp
xor
push
test
sub
std
mov
popa
pop
xchg
sub
loop
push
lods
mov
movsb
push
push
loope
pop
loop
mov
repnz
mov
mov
call
leave
jne
sbb
xchg
movsl
outsb
ja
loop
add
mov
mov
fucomip
sbb
loopne
xor
int
jns
xor
sbb
bound
mov
or
aam
out
data16
mov
dec
mov
rclb
and
addb
popf
dec
push
ret
mov
and
jl
add
in
inc
xchg
in
jb
xor
jae
push
and
jecxz
mov
inc
and
les
xchg
pop
imul
cmp
jo
stos
push
jecxz
push
mov
pop
push
cmp
scas
jecxz
jmp
lret
cmp
push
pmaddwd
add
xchg
stos
test
push
adc
in
notl
aad
je
std
pusha
scas
jp
or
cld
push
add
ss
mov
test
push
mov
mov
jno
lods
dec
jl
stc
outsb
aas
arpl
mov
outsb
test
icebp
jmp
xchg
in
ja
jecxz
xor
pop
sbb
mov
aaa
pop
dec
mov
jae
fcoms
data16
mov
int3
in
mov
sbbl
shll
enter
out
scas
cmpsl
andl
cmp
addr16
jge
popa
addr16
sub
dec
daa
adc
or
add
sbb
cs
lea
xchg
aaa
int
adc
ds
jge
jo
icebp
out
mov
adc
nop
aas
adc
iret
xor
add
cwtl
iret
int
sbb
scas
mov
movsl
sbbl
hlt
call
lahf
mov
push
lcall
mov
das
scas
dec
push
push
insb
mov
add
adc
sarl
xchg
dec
ja
subl
jne
or
sbb
mov
iret
inc
in
push
push
xchg
out
jbe
xlat
and
mov
jmp
inc
adc
ljmp
test
scas
cmp
xor
fxch
in
jbe
adc
imul
mov
adc
mov
lret
les
fnstsw
and
dec
int3
testb
jge
jecxz
cltd
mov
and
mov
xor
dec
lahf
or
lock
pop
dec
or
pop
adc
add
jae
push
mov
arpl
mov
fcmovnu
inc
pop
and
ror
cmc
rcrl
leave
mov
dec
inc
test
push
sti
in
lds
jo
dec
aad
je
dec
test
test
mov
int
jmp
xchg
cmp
push
cmp
js
mov
push
jge
xor
mov
mov
push
pop
out
ja
sub
scas
push
fwait
lds
inc
insl
es
pushf
out
add
push
cld
shrb
jecxz
andb
push
fwait
and
or
xchg
repnz
ret
cmp
cld
sub
inc
loop
cli
popf
outsl
xor
scas
and
mov
or
ret
sub
jp
ljmp
jle
test
hlt
out
outsb
xchg
or
mov
lock
jne
mov
mov
fs
in
xchg
cmpl
lds
insb
push
cmp
js
fmull
int3
scas
inc
enter
jb
cli
jbe
push
outsb
hlt
in
xor
loope
aas
mov
sbb
in
xorb
shr
mov
rcrl
ja
cmp
ss
gs
cli
fcos
sub
aaa
cmp
scas
mov
cmp
lods
or
cmp
int3
data16
stos
lods
test
sub
xor
cs
sub
inc
out
ljmp
pusha
push
pop
int3
ret
leave
rorb
scas
push
push
negb
jns,pn
sub
pop
jb
data16
mov
dec
or
loope
aad
stos
lock
jno
gs
in
or
xchg
movsb
jno
pop
sbb
cwtl
aaa
lods
and
cld
dec
out
sarb
fsub
xchg
jge
jp
sti
lret
mov
in
xchg
mov
sahf
jge
jmp
negl
sub
push
scas
test
cmpsb
xchg
es
leave
cmpsb
xor
add
xchg
je
addr16
push
sbb
ja
hlt
cs
pop
dec
and
dec
xor
jl
test
shlb
xchg
addr16
loopne
jp
push
ljmp
int3
cltd
sub
push
aad
and
dec
mov
xchg
pusha
insb
mov
in
jne
pop
mov
push
xlat
mov
fsubrl
push
loopne
mov
popa
or
fimull
or
shlb
loope
push
dec
mov
rcll
inc
and
rclb
mov
shl
int3
outsb
jb
ret
das
pop
lds
mov
cld
sub
leave
scas
and
and
movsb
psubw
aam
jo
in
arpl
inc
popa
adc
lcall
out
hlt
mov
push
out
xchg
push
scas
sbb
mov
imul
add
dec
or
leave
inc
cld
sbb
sub
xor
shll
cmp
cmp
in
add
sbb
testb
test
das
mov
fwait
gs
sti
jbe
add
gs
data16
test
xchg
pop
ficompl
adc
jle
cmpsb
cmp
fsubp
gs
adc
loop
push
shrl
dec
inc
stc
test
or
adc
arpl
mov
std
loop
push
bound
or
in
sbb
repz
sub
add
iret
lret
adc
ret
cmp
sbb
mov
jbe
mov
adc
mov
sub
and
mov
sub
movsl
sbb
cld
mull
scas
sbb
stos
jle
je
in
mul
test
arpl
xchg
cmp
pushf
sti
cmpsb
lret
mov
ds
mov
scas
or
outsl
inc
mov
and
push
push
insl
fsubr
lcall
adc
lret
cmp
lcall
sbb
ret
lock
int3
sub
mov
pop
movsl
pop
cmp
shrl
cmpsb
imul
pop
push
es
mov
repz
add
cwtl
cmp
jae
mov
jb
test
xor
and
fwait
and
out
mov
iret
pop
gs
push
and
stc
ljmp
xor
aas
jne
adc
int
lret
mov
leave
fistps
mov
sub
sub
stos
mov
xchg
cld
lock
and
mov
xchg
sub
shr
outsl
push
inc
xchg
out
jmp
add
popf
aas
sub
ret
insl
cmp
outsb
pop
jecxz
aaa
xchg
pop
mov
scas
mov
repnz
xchg
and
and
jmp
pusha
and
fstpt
mov
andb
sub
cmpsl
mov
stos
mov
pop
lret
jo
push
nop
pop
movsl
mov
mov
mov
and
cmp
push
sbb
fdivrs
pop
cmp
shl
mov
mov
mov
mov
into
dec
cli
mov
push
push
and
and
repz
mov
xor
negl
hlt
testl
pop
mov
and
cli
leave
cmp
sbb
mov
mov
repnz
stc
hlt
mov
dec
jp
mov
xchg
fwait
lea
lahf
roll
inc
push
imull
std
lcall
pop
sub
loop
repz
je
dec
lea
cs
xchg
xchg
aaa
cmpsl
inc
mul
mov
dec
loopne
xor
adc
xor
xor
push
jp
mov
movsb
test
sbb
inc
push
cmpsl
add
xchg
sub
sti
jmp
fisubl
popa
cmp
sarb
mov
cmp
repz
sub
xlat
pop
icebp
arpl
jmp
adc
iret
or
test
add
test
stos
mov
cmp
cmp
arpl
dec
push
lds
lea
and
xchg
int3
in
jl
jle
in
add
pop
pop
xor
push
sbb
dec
idivb
mov
lahf
andb
lret
aad
xor
mov
adc
les
int
jns
cmc
adc
pop
popl
mov
mov
xor
daa
scas
lock
pushf
cmp
inc
test
push
leave
shll
jp
jo
aaa
rcrb
add
call
and
push
mov
pop
fisubl
adc
cmp
mov
test
negl
pop
lock
dec
xchg
pop
sar
into
aad
or
std
frstor
fiadds
mov
arpl
cwtl
inc
or
andb
mov
les
add
imul
xor
mov
add
jae
add
xchg
jmp
and
cmp
mul
sub
lock
lds
and
mov
fsub
mov
pushw
scas
cmc
cmp
mov
gs
in
add
xchg
das
insb
xor
jb
mov
ss
sub
leave
sbb
jge
inc
fmul
mov
push
pop
test
mov
insl
pop
icebp
js
push
mov
cmpsl
ljmp
sub
sub
hlt
fisubrl
icebp
xchg
push
push
xor
addl
mov
ret
lcall
pop
mov
movsl
ret
incb
dec
push
mov
jge
add
push
inc
pusha
movsl
xchg
cmpb
mov
ss
add
cmp
cld
jge
test
pop
add
pop
mov
subl
std
adc
out
push
or
push
shll
sar
dec
jo
add
push
push
mov
mov
xor
mov
sbb
or
fistpll
imul
mov
ret
xchg
fnstcw
mov
adc
divl
or
mov
leave
mov
scas
pusha
cmp
jg
jmp
cmp
rorl
adc
jns
cltd
xor
jle
and
add
lods
jno
add
or
adc
sbb
mov
mov
mov
xchg
sbb
jmp
cmp
repnz
xchg
leave
adc
insb
aam
aaa
imul
insl
dec
adcl
and
xchg
lods
mov
cltd
rcr
mov
insb
inc
clc
pushf
pop
sub
ficomps
fmulp
in
or
xor
xchg
sarb
loopne
push
test
xor
sub
adc
push
mov
das
lea
lea
outsb
out
daa
cmpsb
fwait
lods
cmp
jp
arpl
stc
adcl
fldt
mov
push
imul
repnz
dec
faddl
sarl
sti
push
xor
pop
jmp
daa
inc
or
subb
leave
into
adc
call
sbb
cltd
push
and
fs
fstps
push
cmpsl
or
pop
and
sbb
andl
adc
inc
push
lcall
or
out
mov
jns
cmpl
loopne
test
xchg
pop
jle
bound
cmp
call
mov
fidivrl
lds
aaa
cmpsb
mov
shr
push
mov
sbb
pop
mov
fs
cli
out
orb
iret
out
mov
push
sub
sub
inc
mov
pop
and
pop
rsqrtps
dec
dec
jo
test
sbb
pop
pushf
push
adc
mov
or
mov
ret
xchg
add
imul
repnz
daa
leave
daa
or
ja
fsubrl
call
lret
mov
rcll
mov
sbb
test
cli
es
nop
pushf
mov
iret
jnp
or
mov
in
inc
inc
les
daa
xchg
aam
sbb
movsb
sub
scas
fiadds
jnp
bound
ror
stos
ds
sbb
cwtl
and
mov
int
cmp
subl
aam
sarl
pop
push
jae
pushf
inc
test
stos
test
adc
fs
decl
imul
js
test
or
stos
mov
jmp
lret
mov
xchg
js
aam
test
jge
dec
leave
mov
rorb
pop
lret
inc
cmp
fimuls
fnstcw
sub
cmc
test
rcll
movsl
pusha
inc
rcrl
ljmp
sub
pushf
xor
out
sahf
add
outsl
out
adc
pop
mov
outsb
ficoml
xchg
scas
call
jle
pop
scas
outsb
popl
subl
out
adc
add
andl
dec
and
xor
jno
xor
mov
movsb
xorl
test
xlat
movsb
dec
add
inc
dec
jecxz
sbb
xor
shlb
aad
repz
repnz
scas
fcmovnu
mov
xor
sub
repnz
push
jbe
inc
leave
dec
in
cmpl
push
and
negb
xor
iret
cli
jmp
sub
and
test
lods
or
test
mov
clc
out
push
shl
test
sub
add
repz
mov
inc
sub
leave
and
cmpsl
insl
addb
cld
push
xchg
add
push
es
sub
imul
imul
es
mov
arpl
add
adc
cwtl
adc
push
pop
sbb
add
shl
stc
es
mov
iret
pop
icebp
jle
loopne
and
orl
jge
pusha
add
add
repnz
mov
and
inc
pop
or
dec
add
dec
push
stos
push
mov
sbb
adc
shl
out
pop
bound
cmc
lds
mov
lcall
jo
outsb
insb
pop
sub
push
das
sbb
aam
leave
jnp
inc
cld
mov
inc
pop
gs
out
push
stos
lds
out
or
push
sbb
push
push
iret
shll
scas
and
push
shl
lahf
pop
les
inc
jl
adc
popa
in
sub
stc
lret
sub
inc
pop
mov
stos
mov
xchg
jno
push
popf
mov
ja
sarl
or
fisubs
sbb
cmp
push
jmp
movsb
loop
xchg
fdivrs
cmc
out
mov
mov
jns
jnp
vunpcklpd
fsub
test
movsb
cld
push
sbb
dec
and
sub
jnp
mov
dec
int3
shrb
into
jmp
sbb
lock
mov
out
cmc
cmp
sub
dec
mov
incl
push
fimull
cmpsb
jae
fldl
outsl
mov
mov
dec
arpl
addr16
inc
cmp
int
in
inc
mov
adc
sbb
fdivs
shr
negb
pop
sbb
xchg
jmp
cmp
xor
cli
jns
sub
sbbb
adc
mov
leave
enter
dec
mov
dec
addr16
mov
adc
negl
inc
sbb
add
or
jns
fwait
lcall
scas
cs
shrl
cmc
push
xchg
sti
inc
rcr
xchg
xor
add
xor
les
lret
inc
xor
push
push
es
jecxz
insb
pushf
push
inc
lock
loope
in
jp
and
sbb
js
js
adc
jo
xor
popa
sub
fidivl
lahf
enter
or
xchg
icebp
call
leave
mov
cld
fwait
enter
popf
mov
inc
sub
into
ds
or
pop
test
or
cmp
xchg
outsb
sti
mov
cmpsl
push
sbb
adc
push
mov
out
dec
xchg
dec
pusha
scas
int3
mov
mov
jp
outsb
pop
cmpl
clc
adc
jb
jmp
gs
aam
test
lea
push
and
aad
cmp
push
pop
mov
out
and
pop
test
pushf
sbb
psubusb
cmpsl
pop
dec
dec
sub
lret
mov
or
shl
jle
loope
mov
or
arpl
push
es
fldcw
and
cmpsl
dec
jmp
or
out
hlt
repnz
repnz
negb
pop
loop
push
mov
bound
shl
inc
sub
sub
xchg
bound
mov
std
mov
jecxz
adc
call
mov
loope
ljmp
adc
imul
loopne
jae
inc
aaa
push
shld
jns
cwtl
adc
jp
aas
pop
or
mov
jg
sbb
inc
jle
and
lea
adc
lret
dec
notb
cmp
cmpsb
jp
or
xchg
loopne
les
push
bound
pushf
add
sub
test
or
cmp
mov
imul
das
xchg
jge
pop
jp
gs
in
outsl
sbb
vphaddubq
aam
sub
lret
imul
and
ret
sbb
xor
and
mov
jge
test
insb
xchg
lods
ja
cwtl
sbb
and
jb
in
adc
aaa
xchg
mov
add
iret
or
mov
dec
leave
out
dec
sahf
sub
push
and
mov
xchg
add
jno
add
int
inc
mov
jmp
mov
xchg
aad
push
mov
out
xorl
cmp
jne
and
pop
imul
mov
lds
add
dec
stc
mov
icebp
push
sub
jo
jp
call
mov
pop
xchg
xor
cltd
loopne
std
in
cmpsl
xchg
sub
inc
dec
test
cmpsl
lret
mov
xchg
cmp
jno
fistpl
imul
icebp
imul
hlt
sbb
mov
sti
mov
inc
int
pop
lret
imul
xchg
dec
loope
mov
xchg
jb
pop
pushf
imul
xor
ljmp
pop
jle
leave
test
inc
jl
or
cmpsl
adc
sub
xlat
cltd
mov
cli
xor
cmpsb
cmp
jmp
sbbl
andl
rcll
hlt
inc
cltd
sbbb
addr16
mov
or
sbb
inc
scas
aas
inc
mov
inc
mov
push
flds
ss
in
xor
mov
das
popa
jp
je
aad
insb
sbb
cmc
adc
and
jl
aaa
sbb
xchg
lret
lret
push
out
lret
mov
fbstp
out
aad
pop
testl
mov
xor
fs
and
mov
in
add
loope
mov
insb
xchg
sarl
lretw
shll
fwait
out
cmp
jae
popf
sbb
xlat
add
inc
js
ljmp
adc
dec
or
fmull
push
add
lock
pop
ja
hlt
out
test
push
movl
repnz
xor
inc
jp
ja
test
mov
or
mov
test
inc
fildl
mov
mov
stc
mov
adc
stos
xchg
mov
adcb
lea
mov
sub
pop
mov
test
insl
inc
sub
inc
add
mov
mov
add
dec
out
or
insl
loope
jae
xor
pop
mov
fsubr
paddusb
int3
jecxz
add
or
mov
inc
push
imul
add
out
fsubl
push
xchg
loope
push
out
sbb
mov
out
std
jmp
fidivs
sub
jg
add
xor
out
jecxz
cmpsl
xchg
jecxz
xchg
inc
jl
pop
dec
lret
iret
cmp
loopne
enter
pushl
push
push
push
adc
and
or
mov
mov
and
sbb
jmp
cwtl
sub
xchg
jp
inc
pusha
add
loopne
test
or
movsl
mov
sub
dec
cltd
loop
fwait
mov
mov
nop
jne
xchg
rcrb
ja
lock
inc
ret
subb
pusha
cld
fiaddl
xor
sbb
jmp
add
enter
les
jo
pop
sbb
mov
dec
dec
add
push
sub
clc
xchg
sbb
xchg
sub
fcmovu
test
inc
or
sub
cmp
lods
inc
jle
cmp
mov
jns
sahf
mov
xor
push
rcll
mov
sub
mov
pop
dec
xor
sbb
in
scas
out
lret
inc
mov
inc
dec
fwait
mov
pop
and
fidivrs
js
out
icebp
jp
inc
or
ret
pop
or
imulb
dec
fnstenv
sbb
xchg
in
pop
sbb
mov
jge
data16
js
or
fisttpl
clc
mov
ja
mov
mov
andb
lret
jecxz
add
mov
xor
sub
loopne
sub
mov
faddl
fisubs
ljmp
daa
jb
cmpsb
scas
test
lods
inc
mov
pop
pop
jo
mov
push
out
sub
add
cmp
mov
push
icebp
mov
or
mov
enter
xchg
cld
ja
mov
std
sti
xchg
adc
mov
inc
in
inc
stos
and
xor
pop
cmpsb
in
xor
movsl
testl
jg
fisubs
in
rorl
and
xor
sahf
adc
jge
and
push
out
mov
movsb
popf
or
or
jle
mov
push
leave
sbb
cmc
mov
jg
pusha
and
or
jmp
mov
out
mov
sar
repz
ret
sub
out
mov
xor
push
mov
xlat
jno
pusha
push
dec
add
pop
nop
push
cmp
mov
lahf
jl
inc
inc
inc
or
fsub
adc
mov
aas
adc
sub
cmp
mov
sbb
aad
xor
mov
cmpsb
jnp
sub
fadd
stos
out
and
addl
mov
mov
inc
mov
clc
aas
xor
push
stc
sbb
dec
jecxz
or
add
jb
int
negb
out
decl
bound
dec
cmpsb
mov
insb
or
mov
std
in
jmp
jbe
aad
das
sub
cld
lret
dec
inc
adc
je
daa
shlb
cs
clc
or
shr
mov
jmp
mov
pop
fs
daa
call
mov
iret
adc
and
rclb
cmpsb
cwtl
jbe
out
and
or
jnp
mov
adc
inc
dec
pusha
hlt
sub
imul
shlb
pop
adc
push
jle
push
aad
stos
mov
jl
cwtl
addl
jp
fidivrl
xchg
pop
xchg
sub
xor
daa
mov
and
push
mov
call
adc
ja
or
loop
cld
arpl
addr16
mov
cmpsb
and
stc
xchg
cmpsb
mov
ljmp
xor
jp
sbb
call
rorb
cmp
iret
pop
scas
aad
push
jno
xor
aas
sahf
les
push
or
outsb
cmc
or
cmc
aas
lods
xor
inc
sarl
dec
or
fnstenv
fscale
cmp
stos
sbb
sahf
das
shlb
mov
shrl
test
or
lret
scas
leave
push
mov
jecxz
push
push
lcall
mov
dec
daa
add
fwait
cld
out
rorb
and
adc
outsl
and
fst
or
sub
dec
nop
or
sub
das
pop
cmp
sub
cs
dec
scas
repz
push
push
movsb
mov
or
cmp
jl
iret
scas
movb
or
fistpl
in
sub
icebp
inc
ja
sub
cmpsb
loop
enter
shrb
mov
out
data16
jecxz
cld
lea
add
sbb
jns
mov
pop
outsb
inc
dec
jl
sarl
mov
roll
test
and
ds
cmp
mov
cmpsl
shrl
push
add
fmuls
movsl
sbb
in
inc
addl
cmp
fsubr
loope
cmp
cld
xchg
fdivs
lahf
xchg
cs
mov
pop
shl
pop
leave
mov
cs
lret
in
dec
adc
in
mov
fbstp
inc
out
add
cld
fistps
in
shll
andb
insb
daa
xchg
pusha
sbb
lock
pushf
and
repnz
lahf
or
and
cmc
in
push
mov
adc
dec
fnstsw
cmp
mov
das
aad
mov
fidivrl
cltd
jl
and
xchg
cli
mov
loopne
push
sbb
push
push
sub
pop
call
lock
pop
sbb
push
xor
pop
daa
xor
mov
pop
fstl
jecxz
pushf
xor
test
in
rorl
addl
jbe
scas
arpl
inc
jp
mov
inc
xchg
ret
xchg
loope
lahf
scas
int
push
paddd
add
int3
jns
aaa
xchg
test
add
jns
pop
adcb
ja
sbb
dec
mov
lds
shrb
xchg
cmp
push
fwait
imul
or
pop
repnz
insl
fwait
dec
add
jne
loope
xchg
cmp
sahf
jecxz
push
in
push
jns
lahf
adc
add
addr16
xchg
push
iret
mov
or
out
lea
iret
insl
loopne
bound
mov
aam
mov
cmpsl
imul
movsb
mov
mov
andb
in
adc
lret
lods
shl
aam
cmp
cmp
dec
sub
ret
mov
aas
js
fsubrs
mov
cmp
ret
add
lahf
scas
ret
cmp
push
out
jbe
leave
lock
jnp
push
daa
dec
imul
sub
outsb
das
dec
mov
xchg
mov
cmpsb
aam
inc
cli
rcll
lds
push
jmp
add
call
rorb
shr
mov
mov
push
mov
mov
shlb
jo
cltd
add
jmp
push
pop
test
insl
jp
cmp
test
inc
leave
mov
push
jae
ja
xchg
movsl
pop
pop
lret
ss
inc
int3
cmpb
lret
lahf
mov
add
stos
push
arpl
mov
or
ret
jg
cld
insl
jg
or
shlb
ljmp
addl
cmpsb
jle
test
mov
cli
pop
mov
rorb
dec
xchg
movsl
or
and
notl
add
mov
test
lret
xchg
loopne
nop
adc
movsl
mov
rorl
jne
xor
jmp
sbbl
ds
mov
adc
lods
es
scas
int
pop
lahf
pop
xchg
jle
adc
mov
rclb
addl
cmpsb
data16
leave
cmp
cltd
out
cmp
enter
mov
lods
movsb
cltd
xchg
or
jg
fmuls
sbb
rclb
scas
es
dec
xchg
jns
popa
fldenv
inc
mov
mov
pushf
mov
pop
test
enter
mov
cmp
mov
pop
xlat
cld
dec
jns
push
fisubs
int3
jo
andl
xchg
addr16
test
pop
mull
iret
pop
insb
push
lret
sub
xchg
mov
lods
mov
mov
push
dec
jae
ret
les
add
test
xchg
inc
mov
pop
inc
or
mov
repz
push
sbb
test
ss
cltd
mov
inc
add
push
mov
jns
jmp
in
inc
gs
aas
filds
testl
repz
int3
mov
pop
mov
mov
out
das
xchg
lret
rcr
out
lock
mov
adc
mov
iret
add
mov
jge
std
scas
aas
cmp
jo
pop
mov
adc
add
out
ret
loope
aaa
push
push
rorl
xor
or
clc
xchg
leave
shl
outsl
adcb
push
mov
xchg
es
sub
mov
fs
adc
push
mov
push
cltd
imulb
shrb
and
xchg
pushf
xchg
cmc
orb
mov
cmpsl
mov
andb
pusha
lcall
std
pop
xchg
nop
sti
jmp
push
mov
movsb
nop
ja
pop
out
mov
in
jae
stos
fiadds
cmpsb
sub
pop
stos
cmpsb
rol
sbb
aaa
jne
or
pop
or
aas
mov
fnstcw
xor
adc
jns
sbb
test
cwtl
daa
add
neg
push
dec
pop
jno
push
push
ret
mov
push
ja
dec
enter
push
push
iret
or
test
push
movsl
aam
pop
insb
xor
mov
fnsetpm(287
cmp
dec
es
outsl
filds
fistpll
data16
bound
outsl
pop
movsb
repnz
popf
ds
ja
xchg
pop
jge
arpl
ret
xor
das
mov
xor
add
or
xchg
adc
mov
sub
repnz
dec
jo
ret
jecxz
icebp
mov
mov
aas
xor
pop
ja
js
or
lods
xor
push
push
fwait
dec
or
out
add
dec
xor
imul
xchg
or
cmpb
subb
and
lods
or
or
popf
mov
pop
leave
pop
jg
lods
push
addr16
repz
push
xchg
cmp
loop
pop
mov
rcll
lea
lcall
shll
mov
push
xor
enter
stos
cmp
jne
rcll
popa
clc
and
ljmp
xor
dec
and
lds
xor
int3
mov
fsubl
adc
repz
xchg
outsb
or
or
in
ret
add
int3
popf
outsl
dec
ljmp
push
fisubrl
pop
cmp
jge
nop
push
clc
pop
movsl
mov
out
sub
in
test
jmp
je
pop
insb
in
xor
xchg
push
std
outsl
in
push
lods
push
push
gs
fcompl
sub
inc
xchg
je
pop
imul
push
or
fmull
xor
xor
pushf
or
mov
pop
inc
movsl
fidivrl
insl
mov
mov
call
adc
lods
push
mov
xchg
pop
loope
clc
test
adc
xchg
dec
sbb
ret
mov
cmp
test
mov
mov
xor
push
xchg
imul
js
cli
aam
push
fwait
das
jge
inc
jae
adc
in
pop
out
lods
inc
out
push
xor
lret
int
ljmp
data16
into
jne
frstor
lret
in
inc
cmp
jp
fists
push
cmc
cld
out
dec
xorl
push
shl
in
sbb
pop
push
mov
sbb
push
add
sarl
mov
mov
les
or
add
mov
outsl
xor
lret
ret
push
fst
cld
mov
test
sub
dec
ror
push
daa
repnz
dec
lock
xchg
cmp
divb
je
imul
daa
je
pop
mov
shll
dec
lret
cld
add
popf
pop
cmc
flds
xor
fstpt
dec
out
dec
das
sti
sub
xchg
sbb
adc
and
fnstcw
push
push
ret
test
pop
cmpsl
dec
jmp
filds
rcr
cmpsl
ret
ljmp
xchg
out
push
std
adc
inc
in
jae
xchg
call
cmp
and
or
sbb
mov
fsub
idiv
xchg
cmc
or
test
bound
scas
lods
push
jns
push
inc
sbb
iret
push
mov
mov
xorl
fsubs
jle
xchg
movsl
hlt
pop
inc
xor
add
xchg
inc
jg
lds
test
mov
bound
and
int
mov
pop
mov
xchg
ficoms
inc
cmp
mov
sarb
jo
mov
stos
cmp
pop
data16
dec
scas
jb
dec
int
add
repnz
jl
lret
inc
or
pop
mov
enter
ljmp
adc
add
add
adc
xchg
mov
mov
add
dec
mov
jmp
test
mov
jne
movsb
stos
dec
mov
andb
pop
rol
test
ljmp
ja
push
mov
jae
inc
and
mov
std
shll
les
icebp
push
aad
xor
pop
xor
adc
push
in
addr16
movsl
sti
fisttpll
xchg
sub
dec
adc
cwtl
je
mov
into
cld
outsb
mov
jne
jnp
nop
mov
sarl
sbb
inc
sahf
loopne
mov
dec
xor
je
jno
jecxz
outsb
xor
jmp
pop
cmpl
mov
mov
pop
mov
mov
out
ficomps
cli
sub
cmp
adc
mov
mov
xor
or
cltd
mov
cwtl
add
bound
lods
add
int3
dec
lahf
push
sbb
xor
and
aam
sub
or
in
enter
pop
dec
je
adc
xor
int
or
push
adc
mov
or
mov
into
das
sub
loop
scas
or
cmpsl
loopne
jg
jnp
xchg
mov
gs
inc
dec
imul
pop
je
mov
pop
xor
sub
mov
xchg
cmpb
hlt
dec
imul
mov
ret
or
out
ja
lods
test
fcomi
pop
outsl
dec
xchg
in
out
shrl
sub
lock
notl
sub
ret
roll
pop
ret
pushf
push
popa
mov
push
int
xor
sti
daa
pop
or
jg
dec
arpl
pop
cmpb
pop
loop
es
out
stc
dec
pop
les
arpl
lret
sub
xchg
sub
out
jae
mov
int3
mov
lods
lcall
mov
shr
jo
cli
popw
in
clc
mov
mov
cmp
jne
xor
inc
lret
in
cmpsb
test
test
lret
les
in
into
nop
repz
xlat
imul
xor
jg
jp
rcrl
sub
mov
fbstp
jbe
xchg
pop
cmp
daa
push
adc
xchg
sub
inc
jae
lcall
loop
cmpl
les
leave
jb
fdivs
js
mov
xchg
stos
fwait
lret
xchg
or
cmp
add
xchg
fcoml
hlt
or
ret
xor
add
inc
pop
sbb
lea
xchg
sahf
pop
mov
popa
pop
je
sahf
push
ds
in
and
jmp
mov
xchg
sti
cmp
into
pop
push
cmp
lret
pop
mov
lret
notb
aad
mov
lret
xor
pop
lret
pop
pop
fwait
jmp
push
sub
pop
and
or
popf
sub
cwtl
mov
xor
lea
dec
xchg
mov
mov
mov
lcall
inc
jns
mov
or
push
push
call
xor
aaa
mov
adc
add
jmp
lods
shrb
mov
int
mov
and
ljmp
and
sbb
fildll
xchg
jbe
cwtl
and
orl
dec
cmc
cmpsl
out
out
pop
push
push
xchg
or
inc
aad
xlat
xlat
test
movl
xor
lahf
fwait
ljmp
sti
movsl
cmpb
jecxz
add
popa
cltd
push
sbb
mov
icebp
jge
mov
mov
add
repz
mov
xchg
pop
add
or
mov
adc
idivb
pop
ret
adc
push
js
jo
push
mov
addr16
sub
in
dec
or
inc
cmp
jae
cmp
add
and
loopne
push
shlb
ljmp
mov
xchg
test
iret
pop
fisubrs
mov
std
pop
je
sbb
cmp
ds
into
mov
das
pop
fcmovu
out
adc
xchg
jae
rcll
shlb
pop
jmp
jne
xor
and
data16
and
inc
add
mov
jmp
xchg
pop
xchg
mov
std
aam
imul
lods
iret
mov
dec
insl
insl
ret
jmp
push
notl
enter
ss
bound
xchg
jle
push
inc
push
pop
push
aas
adc
inc
mov
enter
in
outsb
adc
gs
fmull
test
sbb
pushf
mov
pop
out
stos
frstor
sti
push
in
arpl
call
lahf
ds
insl
and
aam
sarl
cmc
movl
dec
aaa
loope
or
out
lock
cli
rcl
out
mov
dec
push
into
lods
outsl
mov
outsb
sbb
stos
fcmovnu
aas
es
ja
sbb
push
fsubrs
push
or
adc
xor
cltd
mov
jae
dec
dec
inc
insb
jno
sbb
mov
push
clc
insb
and
mov
flds
and
cmp
add
mov
mov
push
push
dec
icebp
clc
ds
mov
call
mov
imulb
sbbb
inc
cmp
xor
test
xchg
mov
xchg
or
incl
fmull
push
fwait
mov
add
fmuls
cli
add
adc
cmp
add
sahf
movsb
or
cld
lret
sub
mov
and
int
adc
xchg
xchg
xor
cmp
cmp
aam
jne
cli
or
push
fucom
or
cltd
ljmp
rcrl
mov
xorl
out
mov
mov
out
push
arpl
sbb
ret
ss
mov
or
ss
xor
pop
inc
test
pop
pop
cmpsl
popa
imulb
pop
jge
sbb
scas
loop
loopne
mov
adc
rclb
in
cmpsb
rorb
lcall
adc
pushf
pop
inc
cmp
sbb
dec
and
test
popa
xor
insb
sub
mov
xchg
testb
dec
jmp
stos
in
mov
test
in
xlat
pop
leave
lret
ret
stos
out
fldenv
or
inc
fcoms
rorl
mov
xchg
pop
push
fisubs
mov
adc
and
insb
outsb
stos
daa
sub
ficoms
sbb
imul
inc
fnsave
mov
imul
and
gs
push
in
xor
dec
xchg
out
adc
mov
or
addl
push
ljmp
fcomip
hlt
daa
out
jecxz
iret
jp
loop
idivb
daa
or
inc
push
dec
in
sub
repz
shl
in
jno
xchg
stc
lcall
mov
js
clc
jbe
and
out
adc
pushf
sbbl
jl
addr16
arpl
ret
or
clc
add
test
stc
lahf
notl
lock
icebp
pop
adcl
adc
ficomps
xor
xchg
dec
ljmp
or
mov
mov
jl
sub
call
test
inc
xchg
mov
in
sbb
inc
sti
add
cmp
ret
sahf
mov
dec
outsl
mov
push
add
mov
xchg
sub
movsb
in
out
push
or
mov
sbb
daa
scas
mov
clc
cltd
imul
insb
jl
orl
out
adc
dec
dec
leave
inc
in
nopl
cs
into
sarl
mov
mov
aam
ficompl
mov
mov
mov
or
test
xor
jge
in
pop
push
bnd
mov
movsb
mov
cmc
adc
pusha
jo
mov
out
mov
dec
or
inc
daa
sub
mov
das
popa
mov
adc
mov
push
push
mov
ds
inc
or
je
pop
xor
lret
mov
add
stc
into
pop
cmp
in
mov
push
sub
dec
or
jecxz
leave
sub
jmp
in
jp
addl
fmulp
outsl
mov
ret
gs
and
xchg
mov
int3
repz
loop
mov
mov
pop
scas
mov
xor
lock
lds
movsb
ficoml
movups
xor
push
ss
hlt
mov
loop
lahf
sbb
jb
sub
roll
push
sbb
pusha
push
hlt
je
push
inc
sub
cld
cmp
mov
addr16
fsubl
add
mov
adc
adc
pop
pushf
das
push
je
or
fdivr
scas
xor
int3
sti
loopne
idivl
fcoml
add
xchg
adc
pop
push
jle
notb
mov
sbb
push
insb
imul
inc
jnp
inc
mov
movl
nop
bound
jl
cwtl
test
aad
in
and
fisttps
lret
icebp
or
cmpsb
add
cmpl
or
xchg
and
mov
pop
pop
and
daa
daa
mov
lcall
inc
stos
ss
loop
sahf
mov
xlat
sub
mov
test
add
mov
lret
xlat
lret
lock
sub
dec
aam
subl
sbb
inc
sbb
push
roll
cmpsb
cld
push
jbe
call
cmp
push
xchg
mov
test
fistpl
mov
sub
movsl
push
mov
mov
enter
mov
mov
pop
pop
inc
int3
stos
xchg
icebp
inc
mov
mov
js
push
adcb
cli
in
adc
xchg
orl
leave
cs
mov
pop
or
sub
dec
ss
imull
lods
push
test
pop
dec
outsl
add
inc
mov
int3
jmp
cmp
hlt
sbb
fsubrl
not
gs
dec
sbb
fcoml
xor
pop
dec
xor
test
pop
mov
pop
inc
jno
call
out
out
mov
mov
push
mov
xor
js
je
outsl
aaa
icebp
sbb
rorb
fs
inc
cmc
mov
das
xor
mov
jmp
jo,pn
mov
stos
repz
inc
and
les
out
std
in
pop
popf
jae
mov
jb
cmc
popf
add
aad
cmpsl
and
pop
or
je
mov
adc
and
mov
sbb
insb
aad
mov
test
add
pushf
imul
jp
repnz
jns
imul
test
aas
dec
push
andl
in
sbb
add
jge
xor
add
shll
call
out
ljmp
dec
sub
cmpsl
bound
shlb
adc
js
jp
daa
fnsave
aad
lods
in
js
inc
mov
pop
dec
enter
dec
js
mov
mov
ret
lcall
xlat
pop
test
cmp
es
add
ds
movsb
push
xorb
testl
jle
pop
cmp
mov
in
sti
fs
mov
add
xchg
sbb
cmp
mov
push
imul
push
push
jmp
int
jmp
clc
repz
mov
stos
mov
xor
sub
mov
mov
mov
jne
mov
mov
sahf
call
lock
dec
enter
imul
jb,pn
pop
push
adcb
push
lods
mov
push
dec
std
mov
dec
test
orl
cltd
stos
sbb
bound
into
repnz
aaa
stos
pushf
imul
or
das
leave
lods
adc
popa
aaa
push
inc
stos
mov
fildl
cmpsl
mov
sub
push
daa
pop
mov
jbe
mov
sarl
inc
js
ss
xlat
pop
xchg
mov
jg
pop
xlat
pop
repnz
jo
jge
gs
arpl
mov
loope
call
pop
push
xchg
push
jg
insb
sbb
mov
lock
cmpsl
jecxz
cs
mov
mov
pop
stos
xchg
test
push
adc
ret
sub
mov
pop
in
jnp
or
sarb
lock
lock
jmp
sbb
sbb
xor
jmp
push
popf
js
test
lea
adc
dec
imul
jge
cmp
pop
sbb
mov
ds
jecxz
xchg
and
icebp
xlat
push
repz
jmp
in
ss
in
cmp
xor
pop
mov
or
and
pop
adc
push
cmpsl
fisubs
ljmp
sub
push
jb
loopne
arpl
fbstp
xchg
mov
xchg
pop
and
cmp
les
hlt
adc
rclb
xchg
jne
adc
or
aam
pop
mov
daa
sub
add
or
pusha
rcll
sbb
aam
xchg
mul
imulb
movsb
cmp
pop
call
dec
iret
add
push
xchg
inc
jecxz
inc
xorl
ljmp
adc
lret
sbb
loope
xchg
pop
pop
jecxz
cmc
push
into
test
iret
inc
ret
out
inc
sbb
leave
add
stc
rolb
jae
push
filds
mov
fiaddl
jns
mov
adc
fmuls
outsb
and
mov
sbb
or
cli
incb
sbb
das
mov
xchg
xchg
rcrl
jno
mov
add
or
mov
bnd
sahf
mov
aad
out
inc
fcomp
fldenv
sbb
sub
addb
push
lods
inc
pop
cld
dec
xor
push
aam
and
clc
mov
js
mov
mov
loopne
dec
pushf
mov
fdivp
mov
pop
ficompl
jle
mov
lock
loop
xor
inc
lea
lcall
insl
ret
mov
in
call
mov
jp
cltd
cs
sbb
cmp
adc
popa
dec
in
mov
fisttps
ds
pop
xchg
rolb
jbe
xchg
in
xor
arpl
mov
inc
adc
fmuls
ss
insl
jl
xor
sahf
out
scas
test
push
mov
mov
movsb
incl
jp
mov
mov
push
push
ljmp
sbb
popa
lea
sub
pushf
stc
fsub
or
jbe
movsb
or
and
add
jb
stos
es
hlt
in
loope
repz
sub
js
insl
add
leave
mov
fists
jmp
cmp
sbb
jmp
popf
loopne
jno
and
xor
scas
or
leave
gs
aam
jl
jecxz
push
jle
jl
fs
mov
cwtl
ret
ljmp
cld
sub
pop
ja
addl
sub
int3
pop
cmp
sub
cmp
ss
mov
pop
int
sbb
jnp
or
adc
cmp
xchg
sbb
scas
push
lret
clc
dec
jbe
push
jae
sahf
jb
inc
sub
and
dec
push
ret
pop
mov
movups
scas
insl
push
push
cmc
push
daa
cld
mov
les
aaa
arpl
mov
test
sbb
or
push
adc
imul
enter
std
jne
scas
sbb
imul
lret
mov
stos
adc
pop
sub
adc
sub
mov
xlat
outsl
pop
jb
ljmp
cmp
jge
lahf
add
sar
movb
stc
mov
in
push
fcompl
imul
push
jns
add
test
insl
inc
mov
dec
inc
add
add
adc
repz
out
out
inc
cli
pop
mov
ret
inc
mov
inc
pop
xchg
aas
mov
push
pop
xchg
loopne
sarl
addr16
jmp
cli
push
push
ror
jns
mov
push
jo
stos
mov
jbe
and
sti
pop
adc
movb
adc
xor
xchg
and
jnp
fldcw
pop
nop
sbb
or
out
mov
and
lods
cmpsb
test
or
lahf
push
dec
pop
out
rol
cltd
sub
pop
mov
sub
pop
rorb
int3
xchg
xchg
out
add
inc
out
cmpsl
popf
sbb
int3
shlb
push
add
push
xchg
pop
mov
test
mov
dec
daa
iret
pop
lds
xor
jo
idivl
pop
add
inc
pop
popf
dec
add
jbe
and
or
out
sbb
and
mov
mov
sbbb
mov
cmp
fbstp
jmp
out
push
xchg
mov
xchg
mov
cmp
xor
bound
dec
jns
addb
xchg
sbb
dec
sbb
std
push
dec
push
test
out
jp
pop
in
mov
mov
mov
in
arpl
push
or
lea
shrl
inc
push
add
mov
jle
scas
xchg
inc
sub
popa
mov
pop
adc
mov
mov
jge
pop
sbb
fwait
pop
in
mov
stos
jge
jl
mov
push
pop
dec
adc
or
int
jmp
rclb
test
or
outsb
and
cmp
aaa
mov
xchg
xchg
xchg
arpl
and
add
imul
pop
in
scas
adc
frstor
ljmp
mov
and
in
mov
jg
repnz
fcomi
pop
pusha
pop
mov
sarb
int3
addl
mov
into
add
addr16
jne
test
mov
ror
mov
xor
inc
ffreep
xchg
outsl
inc
and
dec
dec
fisubs
out
sbb
popf
pusha
jo
in
insb
insb
jmp
mov
and
outsl
cld
lea
mov
arpl
and
mov
pop
push
sbb
imul
lret
adcl
mov
jne
out
jp
push
pop
ret
cltd
stos
clc
cmp
xchg
popa
ja
sbb
push
mov
out
bound
xlat
jo
sbb
pusha
arpl
fisubrs
imul
lret
scas
pop
adc
sub
addr16
mov
adc
jecxz
outsl
mov
jnp
or
adc
dec
dec
cmp
mov
scas
pop
aam
dec
addb
loope
pop
mov
cmp
lds
dec
jno
mov
pop
inc
mov
add
bound
and
in
int3
shrl
lret
push
cmp
sar
das
inc
xchg
jp
pop
shlb
jne
mov
in
mov
in
inc
das
pop
test
xor
push
dec
popf
xchg
sub
mov
je
sub
loop
sbb
mov
pop
inc
mov
in
out
adc
lods
cmp
inc
and
pop
lea
loopne
fnstsw
add
mov
xor
std
adc
jns
mov
mov
ja
dec
lea
test
xchg
out
arpl
das
pop
jge
xorb
cs
loope
movsl
bnd
xchg
dec
cmp
es
clc
jno
pop
test
popf
outsb
fcomp
loope
jne
repz
in
jl
test
or
imul
pop
shrl
sbb
cmpsb
sahf
subl
call
lcall
and
lret
cmp
or
xor
in
adcl
or
xchg
pop
insb
sbb
add
and
imul
lods
fistpl
adc
mov
outsb
mov
xor
or
pop
inc
int
sbb
mov
ret
icebp
push
cli
mov
fildll
sbb
sahf
divl
pop
mov
sbb
sub
out
cmpsl
xlat
push
out
sbb
push
push
test
mov
xor
test
jno
dec
lock
xchg
into
leave
das
mov
pusha
stos
push
cs
pop
lea
pop
fstpl
push
jmp
cmp
inc
inc
pop
pop
ret
add
clc
sub
xchg
ljmp
pop
cmp
cmp
movsl
pusha
push
int3
mov
test
push
loop
pusha
inc
pop
js
xchg
shlb
int
cmp
or
bswap
test
movsb
testb
cmp
or
outsl
std
pop
mov
cmpb
gs
hlt
mov
ja
pop
shl
pop
pusha
shlb
pop
pop
pop
push
adc
bound
scas
lods
loopne
es
xor
mov
cli
push
hlt
mov
lcall
in
lods
lret
inc
arpl
je
cs
pushf
jne
sbb
jnp
popf
jb
cli
mov
movsl
test
insb
mov
xor
push
push
pop
add
sbb
mov
sub
outsl
jl
stos
leave
or
and
ja
ret
pop
popf
bnd
and
roll
lcall
xchg
or
mov
cltd
jae
push
fldt
test
push
cli
rcrl
jmp
push
inc
cmpsl
mov
or
stos
stc
sbb
mov
or
jae
cltd
in
enter
mov
lahf
js
xor
cmp
pop
adc
aas
adc
push
xor
inc
test
insb
pushl
cwtl
loop
lret
dec
iret
scas
pop
and
fwait
mov
xchg
or
in
and
xchg
lock
cmc
jno
enter
mov
jae
call
imul
lods
jmp
dec
jle
aaa
test
shlb
pop
sbb
jns
hlt
jecxz
or
jl
add
mov
cmp
push
flds
frstor
sbb
pop
mov
loope
add
mov
iret
jne
lret
inc
repnz
xor
push
xor
xorl
add
pop
imul
mov
jb
cmpsb
out
push
or
mov
nop
and
ret
mov
mov
mov
xchg
insb
cltd
in
out
dec
xchg
dec
push
ja
adc
pop
call
pushf
mov
nop
subb
mov
jne
popa
cmp
jns
fisttps
daa
inc
test
push
xor
mov
data16
push
push
cwtl
outsl
jae
lds
pop
jae
add
and
daa
iret
adc
out
aas
pcmpeqb
loope
xchg
fwait
lahf
jae
xor
fnsave
stos
arpl
pusha
fbstp
jb
daa
clc
push
out
ret
mov
xchg
add
add
lret
add
mov
sbb
xlat
push
add
mov
imul
adc
pop
ds
jg
pop
insl
jne
mov
cmp
popa
mov
jecxz
repnz
shr
xchg
pusha
popa
test
cmp
lea
insb
sbb
sbb
push
test
jmp
loope
xor
mov
cmpsb
adc
and
or
push
call
into
daa
jmp
mov
in
ss
scas
movsb
lods
fcom
js
mov
pop
cmpsb
mov
inc
pusha
orb
mov
add
add
lock
shl
mov
int
lcall
sub
jno
stos
lret
loopne
in
mov
or
jmp
sbb
data16
aaa
outsb
cmp
andl
adc
aam
and
or
out
dec
nop
jns
xchg
jns
addr16
gs
dec
hlt
dec
in
ja
dec
shrb
adc
nop
cmp
adcb
mov
aam
and
jnp
imul
ret
aam
dec
icebp
aas
jno
sbb
jle
ret
mov
jge
inc
ficompl
lahf
mov
xor
and
js
pop
xchg
sub
dec
or
repz
scas
add
xor
cmp
shlb
push
jb
sub
out
and
pop
dec
adc
mov
idivl
or
outsl
mov
pusha
or
sub
fsubrl
dec
orb
stos
js
out
mov
test
mov
sbb
imul
dec
icebp
popf
mov
pop
jne
movsb
add
cltd
out
xor
int3
push
xchg
arpl
les
xchg
lods
dec
ljmp
xor
aas
int
add
js
xchg
arpl
popf
out
add
or
leave
dec
sti
pop
ficoms
faddl
cmp
pop
xchg
das
jmp
jno
mull
out
insb
mov
enter
mov
repz
push
jo
mov
test
icebp
mov
mov
aas
mov
mov
addr16
jmp
xchg
xorl
pop
cmpl
cli
daa
mov
js
mov
mov
daa
out
adc
outsl
std
or
cmpb
xchg
daa
call
and
scas
or
mov
dec
add
ficoms
adc
ss
add
aaa
sub
ljmp
mov
push
jl
stc
mov
nop
pop
fisttpll
mov
sub
push
dec
loopne
loopne
jmp
inc
mov
pusha
sbb
push
xor
pop
gs
fnstsw
jmp
scas
jle
int3
xchg
push
in
lahf
arpl
inc
fs
xor
cli
sub
je
lods
mov
mov
loop
push
and
lods
rcrb
call
fidivrs
es
ss
pop
mov
das
sahf
shr
jge
jecxz
outsb
out
shrb
inc
xchg
aaa
xchg
xor
imul
imul
and
cltd
jae
xor
arpl
aas
push
mov
repnz
inc
xchg
adc
or
imul
daa
inc
notb
jo
mov
dec
adc
jg
cltd
dec
mov
jo
fistpl
fildl
sbb
jno
lcall
mov
pusha
xchg
mov
pop
lret
cltd
fcmovne
insl
pop
fs
push
sbb
jp
pop
out
out
inc
xchg
dec
push
inc
dec
jo
jg
cmp
lds
movsl
or
mov
adc
or
mov
jnp
enter
lea
sbb
push
int3
jo
adc
mov
andb
jbe
sbb
push
or
popf
iret
aam
sbb
xchg
fsubl
adc
icebp
aas
mov
sbb
test
jl
arpl
mull
adc
add
mov
inc
aam
or
aam
rcll
mov
insb
loope
jns
mov
adc
jb
adc
icebp
int
dec
std
iret
adc
pop
mov
lea
fildll
pushf
push
lods
cmp
xchg
mov
adc
add
notb
mov
dec
nop
jg
lret
inc
popf
or
bound
sbb
loopne
sub
cmp
mov
xchg
mov
cmc
sub
push
dec
std
mov
xchg
inc
leave
adc
rcrl
pop
jne
lcall
std
sbb
jno
pusha
cltd
std
pop
nop
aad
pop
lods
xor
shlb
testb
and
sub
cli
sar
ds
or
mov
pop
sub
xor
jae
lret
out
or
add
ret
sub
or
iret
mov
pusha
push
insl
mov
sbb
push
cmp
push
sub
shll
out
out
pop
in
jle
mov
popf
pop
mov
xchg
movsl
jg
std
lods
inc
jle
sti
call
leave
cltd
xchg
or
adc
imul
leave
add
jb
cwtl
or
add
or
xchg
hlt
ss
scas
jne
push
lds
fsts
popf
cli
je
add
jo
mov
adc
xchg
jmp
xor
fs
xchg
cmpb
fisubrs
sub
mov
lcall
jbe
xchg
das
lods
dec
xchg
jecxz
push
icebp
ljmp
test
ljmp
and
push
xlat
inc
and
xor
cmp
jo
mov
sbb
mov
arpl
stc
stos
imul
int
adc
ljmp
and
mov
sbb
cltd
out
sub
adc
pop
data16
gs
or
loopne
xor
pop
mov
in
popf
jo
stos
xchg
cld
cmpsb
lcall
push
mov
sub
stc
int3
xchg
div
scas
adc
sbb
imul
pushf
mov
stc
outsl
pop
jb
mov
fsubrs
test
je
xchg
hlt
mov
adcb
arpl
sbbl
mov
dec
or
decb
in
sti
jo
lock
mov
inc
das
add
jmp
adc
rcrl
std
faddp
mov
ret
pop
imul
pop
cmp
ljmp
movsb
jnp
repnz
mov
jbe
loop
pop
cmp
jno
or
sbb
mov
rsm
test
adc
das
lods
mov
loopne
inc
mov
push
push
dec
sti
mov
jg
xor
ret
scas
hlt
cmp
xor
adc
outsl
jnp
in
inc
push
dec
lods
sbbb
pop
pop
pop
push
cmc
pusha
sbb
pop
dec
mov
push
cmp
pop
icebp
xor
dec
mov
les
add
ds
mov
push
in
insb
inc
inc
add
pop
inc
dec
daa
inc
push
or
ljmp
xor
stos
add
xchg
stc
xor
daa
push
push
jmp
dec
jo
es
daa
lea
repnz
sbb
and
xchg
dec
pop
push
push
out
dec
xchg
sbb
into
shrb
xorl
hlt
jle
push
stos
add
jmp
push
lret
stos
fwait
mov
mov
mov
add
sbb
mov
jbe
inc
sarb
rdmsr
mov
xchg
jle
fsub
ljmp
shrl
outsl
in
fstl
jno
inc
dec
inc
mov
mov
and
and
test
add
pop
xchg
adcb
push
jmp
cmpl
ret
je
or
jns
pop
sbb
ja
aam
ret
fucomi
jne
and
dec
lcall
and
ret
fsub
loopne
adc
pop
lds
sub
out
clc
fcmovnb
cmc
test
stos
bound
dec
icebp
mov
int
add
push
dec
leave
add
shrl
and
or
mov
mov
popa
mov
mov
ss
and
out
jnp
outsl
stos
xor
fsts
mov
mov
lahf
mov
inc
cltd
sbb
dec
sbb
das
pushf
xchg
aad
sbb
push
sub
mov
inc
mov
push
mov
aad
cltd
sbbb
ja
push
les
mov
sub
scas
push
sub
mov
lcall
add
pop
out
xor
sbb
xchg
adc
inc
mov
fcomps
das
iret
mov
jmp
fs
sbb
enter
orb
xor
mov
ds
mov
cmpsb
mov
jle
imul
inc
push
cmpsl
pop
mov
es
ja
cmp
inc
mov
or
rorb
push
int3
les
mov
incb
lret
add
dec
cwtl
dec
cmp
das
ss
cltd
xchg
enter
int
out
cmp
cld
test
inc
outsl
ljmp
jecxz
inc
push
test
rcrl
pop
mov
test
mov
loope
in
inc
dec
add
cmp
out
sub
and
imul
out
sub
push
std
jae
or
xchg
mov
xor
out
cli
inc
mov
subb
push
cmpsl
pop
test
sub
jns
pusha
jbe
mov
jnp
popa
lea
sub
cmp
loope
mov
bound
mov
dec
repz
add
lods
push
push
rcrb
loopne
pop
jg
cmp
lea
repz
mov
pusha
cmp
popa
mov
fidivrl
enter
test
xchg
fmull
mov
aaa
das
jl
pop
push
pop
es
or
jo
sbb
lret
pop
js
imul
imul
nop
rcrl
mov
aad
or
insl
jp
loop
ficompl
cli
adc
movhps
jnp
stos
and
std
xchg
adc
fwait
push
sbb
mov
sub
dec
dec
mov
in
cmpsb
pop
cli
mov
lods
cmp
movsl
inc
push
daa
lret
jge
push
sbb
or
cs
xchg
mov
loop
movsb
gs
push
jb
ljmp
fld
loop
xchg
lods
adc
out
adc
xchg
shl
pushf
adc
daa
lahf
xor
arpl
jle
mov
gs
xor
jae
cmovne
xchg
sbb
rclb
jae
xor
dec
xchg
in
mov
and
xchg
push
jnp
mov
and
aas
out
ss
pop
out
dec
int3
push
call
pop
jae
insl
mov
push
sub
adc
scas
xchg
iret
xor
outsb
mov
rol
leave
gs
mov
xchg
and
or
pop
repnz
popfw
dec
pop
movsl
cmpsl
jl
dec
adc
enter
pop
fs
inc
subb
xchg
or
and
jnp
push
pop
icebp
fmuls
cmp
lds
lahf
dec
insb
mov
insb
jbe
out
scas
jecxz
jb
pop
lods
icebp
xchg
hlt
fwait
jae
jb
je
je
sub
push
mov
mov
fstl
sar
iret
cmpsl
lods
pusha
xlat
sub
ss
push
sar
jge
xchg
mov
jl
mov
adc
jle
and
and
or
mov
lods
popa
pushl
xor
divb
mov
mov
into
sub
inc
repz
mov
xor
out
push
pop
out
mov
test
inc
es
push
lods
ret
outsb
sbb
mov
inc
mov
xorb
dec
pop
cli
adc
sub
add
xchg
lea
lea
imul
call
insl
mov
mov
jns
adc
cmp
subb
in
call
insl
ret
ret
pop
sbb
testl
or
push
int
cmp
mov
mov
stos
orl
jnp
insb
sarb
lret
push
inc
lret
cmp
push
pop
pop
shrb
or
xor
fisubrl
int3
dec
sub
push
sub
push
dec
test
seta
sbb
mov
and
jg
pop
cmp
mov
stc
cmp
ljmp
mov
add
push
and
or
icebp
dec
out
or
jns
adc
jg
test
lret
dec
div
test
lods
push
cwtd
pop
pop
call
push
mov
movsl
out
ret
adcl
mov
cltd
lcall
cs
sahf
mov
push
stos
in
lret
push
roll
jecxz
jo
pop
pop
fs
mov
push
fistl
mov
push
push
enter
push
dec
mov
test
ljmp
mov
insb
inc
jp
popa
inc
mov
insl
mov
sub
out
outsl
or
xor
cltd
adc
jb
add
inc
fldcw
sahf
push
shrl
loope
cli
sbb
les
shl
pop
mov
pop
gs
sub
dec
out
lea
decb
adc
dec
sahf
dec
ds
adcb
cmc
aad
incb
push
pop
mov
jno
and
jge
sbb
and
cmpsl
into
push
inc
cmp
idivb
inc
pop
es
xor
xchg
mov
mov
lods
sbb
in
mov
mov
mov
int
movsb
scas
jae
out
inc
xchg
pop
mov
jl
push
pop
add
inc
fistpl
fimull
cwtl
mov
int
dec
or
dec
addr16
mov
pop
popf
xchg
fidivl
inc
xor
and
pushf
imul
stos
stc
in
lea
mov
sub
stc
in
and
cmpsl
jbe
xor
out
and
sbb
mov
mov
fiadds
das
icebp
and
in
mov
jbe
imul
test
lock
lcall
mov
fnstenv
hlt
push
jl
fwait
lcall
test
jg
cmp
inc
jg
cmp
mov
push
insl
dec
sub
pop
ret
loope
push
jmp
dec
pop
and
fs
shll
xor
inc
jo
ret
push
xor
incl
popa
xor
mov
dec
jno
jecxz
lock
or
sarl
mov
loope
idivl
inc
push
xor
sbb
mov
std
cltd
out
fsubs
mov
or
addb
insb
sub
aad
push
mov
shr
cmp
int3
mov
in
jecxz
cld
leave
dec
jle
sahf
jno
ss
mov
inc
lea
jbe
fsubs
nop
push
test
sub
sti
loope
mov
dec
int
xchg
ret
dec
icebp
dec
inc
sarb
xchg
in
xchg
ds
movsb
hlt
out
mov
aad
jnp
gs
cwtl
flds
sbb
lea
mov
mov
xchg
es
imul
imul
adc
stc
mov
les
cmp
je
and
adc
xchg
inc
std
push
mov
ljmp
push
pop
pusha
shl
ret
push
stc
sbb
xor
pop
popa
jmp
cltd
xchg
std
rcll
mov
add
ljmp
test
rcll
std
arpl
xor
insb
mov
push
loop
and
in
pop
out
std
in
mov
movsb
mull
insb
pop
aaa
lret
fsts
xchg
mov
jno
jne
fldt
jns
push
shll
lret
push
jle
enter
mov
push
xor
or
mov
push
jbe
xchg
inc
pop
testl
dec
in
std
notl
inc
cmp
lods
ret
lret
cmpsl
cmpsb
and
mov
clc
xchg
stos
cltd
mov
sbb
mov
cmp
jo
mov
push
jle
jl
xor
sub
pop
hlt
stos
cmp
out
aaa
lods
xor
popa
mov
andl
das
test
imul
inc
xchg
es
mov
lds
xchg
cmp
jp
adc
out
sub
fisubl
lret
lahf
out
vpunpcklbw
inc
dec
mov
sbb
hlt
fsts
mov
mov
adc
pop
dec
mov
cmpsb
pop
sbb
push
testb
and
jmp
in
shr
icebp
lds
mov
dec
push
cld
fdivrs
nop
nop
shlb
jns
push
xchg
popa
push
aam
mov
fs
lret
inc
test
insl
cld
mov
push
cltd
aad
mov
aam
cmp
lods
mov
push
push
inc
xor
add
out
cmpsl
dec
idivb
int3
subl
fmuls
xor
or
mov
in
sbb
fwait
push
pop
outsb
cmpsb
push
shrl
add
shr
pop
dec
mov
cmp
and
out
mov
and
hlt
cld
mov
jb
mov
loope
mov
cmpsl
ret
push
popa
or
dec
xor
add
outsb
push
insb
int3
mov
and
dec
stc
sub
lock
gs
adc
push
mov
ret
sahf
mov
test
test
repz
out
push
push
jne
js
outsb
or
das
ds
lock
xor
mov
pop
stos
push
mov
fwait
test
jb
sub
xchg
push
and
add
mov
std
mov
aam
sbb
mov
adc
int3
inc
int
arpl
loopne
pop
ja
fldcw
in
sub
shl
aad
add
mov
nop
xor
fisttpll
or
cmp
sub
insb
popa
loopne
or
mov
push
push
movsb
repnz
mov
pop
scas
mov
jne
scas
jle
les
jge
cld
fwait
jmp
xlat
mov
mov
insl
cld
test
rolb
push
adc
out
roll
or
enter
bound
xchg
std
fistpl
and
mov
es
cmp
push
out
addl
xlat
ja
shll
imul
scas
pusha
cmp
arpl
push
addr16
sahf
and
jl
insb
leave
movsl
into
dec
add
adc
je
rorb
push
mov
gs
add
in
scas
cld
sub
clc
aam
dec
pop
sub
mov
cli
aaa
pushf
je
cmp
lret
aaa
xor
adcl
add
add
cltd
cwtl
mov
dec
iret
dec
cmp
and
fstps
aam
xchg
add
fwait
cli
imulb
stos
aam
aaa
dec
es
mov
mov
pop
lods
lahf
xor
ret
pop
mov
rolb
xchg
test
cmpsb
cmp
push
xchg
xchg
push
loopne
arpl
mov
fs
sbb
mov
mov
jmp
adc
int
push
or
test
adc
xlat
clc
ret
and
mov
jbe
ficompl
xor
pop
mov
das
pushf
fmull
and
cmp
das
repz
jne
jl
fdivr
sbb
mov
sub
loope
insl
jnp
nop
in
or
push
out
cmpsb
fs
insb
xchg
xchg
dec
aam
jbe
pushf
mov
rorl
inc
repz
sbb
aas
pop
fnstenv
mov
or
filds
mov
inc
push
test
fldl2e
sbb
xor
sbb
mov
mov
popa
js
std
addb
rolb
dec
mov
lret
out
dec
add
enter
in
xor
std
subl
mov
sub
jg
lods
jmp
iret
mov
jb
adc
cmp
popa
fisubrs
bound
adc
xchg
mov
repz
cld
adc
fistpl
mov
stc
repnz
stos
push
clc
mov
popa
mov
popa
adc
mov
xchg
sti
push
mov
pusha
inc
add
test
fidivs
imul
sub
dec
ja
lahf
ljmp
les
hlt
mov
push
pop
out
iret
ds
push
fs
add
add
lock
gs
add
and
rcrb
mov
mov
mov
dec
xchg
xchg
jnp
addr16
je
xchg
or
push
jecxz
scas
shrl
jns
sti
pop
mov
lock
and
jp
repz
shr
orb
int3
push
lret
mov
pushf
outsl
pop
dec
sub
sbb
fprem
mov
test
cmp
out
push
sub
sub
int3
jge
fstps
mov
sbb
jecxz
cmp
push
imul
push
mov
dec
mov
ss
in
notl
add
pop
mov
or
mov
lods
xorb
popf
jge
sarl
jecxz
aas
push
fimuls
push
and
icebp
inc
test
mov
add
int
cmp
mov
popf
mov
push
push
add
dec
into
ss
repnz
inc
mov
xor
stos
pop
add
cmp
xchg
dec
imul
cmpsb
mov
push
adc
sub
push
lahf
into
inc
and
add
pop
loope
dec
add
or
pop
cmpsl
jo
stc
insb
jns
cld
divl
fnsave
mov
aaa
cmp
fcompl
sub
cmp
cmp
push
fldcw
mov
adc
or
dec
fiaddl
jle
int
fwait
push
daa
push
test
fcoms
rorl
ret
mov
sbb
repz
adc
mov
pop
popa
out
test
lret
jmp
or
and
out
jge
xor
cmp
sbb
aas
xor
jb
jae
fisubrs
or
sbb
adc
and
xor
pop
or
lcall
daa
stos
mov
pop
pop
lret
fldt
xchg
loope
add
je
mov
movsl
cltd
in
fsubl
or
je
fcoms
int
xchg
hlt
out
mov
stos
adc
push
das
sub
push
push
push
sarb
push
adc
lret
mov
jge
and
add
js
add
jmp
pop
repz
xchg
add
lea
loopne
mov
in
iret
out
jp
lds
cs
outsb
mov
andb
stos
addr16
mov
lahf
and
in
sahf
test
out
daa
jecxz
ljmp
rcll
xchg
in
fimuls
or
xor
jnp
jnp
pop
sti
outsl
hlt
cmp
dec
xchg
jnp
and
aad
fs
pushf
movsl
lret
dec
jl
cld
adc
inc
loop
mov
lcall
push
push
enter
push
cmp
stos
outsb
sub
loop
outsb
loopne
sbb
insb
int
push
das
pop
sbb
cmp
imul
orl
adc
sub
pop
outsl
xchg
jp
std
add
les
sub
and
sbb
sahf
in
push
hlt
sbb
faddl
jbe
aas
mov
iret
sub
jge
inc
test
and
mov
push
loop
rcrb
call
jl
push
cmp
pop
mov
or
lret
or
rcll
cmc
and
jl
js
jne
cmp
jp
nop
xor
add
out
sbbb
rcrb
aaa
jecxz
inc
pop
out
into
jle
andb
nop
fwait
cmp
adc
xchg
ds
out
or
sarb
arpl
ss
inc
mov
aas
mov
ljmp
push
scas
lods
rolb
inc
jbe
or
sbb
push
dec
push
mov
lcall
aam
sub
outsb
push
mov
fdivrp
imul
mov
dec
push
inc
jmp
pop
jge
out
scas
roll
add
xchg
call
mov
fisubs
jmp
inc
jb
subl
push
jge
sbb
dec
je
xor
lcall
cmpsl
mov
dec
push
test
adc
scas
sbb
sahf
jle
scas
xchg
test
fwait
xor
jae
jns
push
mov
fcompp
xor
mov
pop
push
pop
or
pop
movsb
pop
cmpsb
test
pop
pop
rolb
pop
jecxz
fsubs
adc
xor
add
jbe
in
inc
int3
inc
push
dec
pop
pushl
cs
lcall
xchg
and
jbe
mov
cmp
sarl
lcall
add
dec
mov
push
pop
sub
das
lock
cmpsb
jne
sbb
push
jae
or
gs
push
das
scas
jo
imul
dec
or
sbb
lods
inc
inc
jl
jmp
dec
jle
cmp
push
call
shrb
pusha
dec
stos
mov
dec
sbb
outsl
test
or
test
pop
pushf
sbbl
mov
pop
mov
hlt
push
mov
mov
stos
stos
xor
adc
sbb
push
inc
dec
jbe
data16
ss
stc
adc
int
xchg
sbb
aad
cmp
jecxz
lcall
add
or
shrb
shlb
stos
aam
inc
test
mov
sub
jb
fwait
and
xchg
add
fdivrl
int
fwait
icebp
push
rorl
sbb
stc
add
fidivs
dec
test
fimuls
and
dec
jecxz
scas
out
push
and
sbb
mov
jo
movsb
js
loopne
xchg
dec
clc
jbe
sub
sbb
fstl
lret
rcl
pop
push
cmp
ret
shr
jbe
mov
ds
iret
sbb
imul
sub
jge
lahf
add
jle
sub
divl
dec
orl
pop
pop
jecxz
jns
sub
mov
mov
and
mov
jg
mov
out
cmp
xchg
dec
in
das
icebp
jnp
inc
push
and
inc
xor
out
mov
xor
popf
loope
xor
aad
and
push
push
cmp
dec
xchg
add
mov
aad
cld
jg
push
push
je
mov
jns
push
adc
pop
into
sub
jae
and
xor
and
and
adc
cmp
daa
cwtl
outsb
cmpsl
les
push
add
xchg
je
jne
cmp
inc
xlat
aad
fisttpl
mov
icebp
push
shr
push
pop
mov
mov
inc
pushf
pop
fmul
jbe
stos
inc
sub
imull
or
aaa
int3
pop
jmp
ds
xchg
sub
lods
adc
mov
lds
push
ret
fcoml
push
jno
stos
mov
js
out
outsl
iret
aam
xchg
xchg
shrb
sub
cltd
testb
std
cmp
push
std
pushf
push
jle
xchg
rcll
mov
or
pop
inc
hlt
dec
mov
das
xchg
jge
jg
addl
sahf
push
or
dec
jbe
dec
es
sub
arpl
js
addr16
addb
adcl
or
int3
cmpsl
mov
out
xchg
lret
or
push
mov
jmp
mov
inc
dec
out
mov
jne
adc
fcom
push
cmp
aam
test
dec
roll
lret
cmp
mov
pop
push
mov
ja
jge
mov
arpl
cmp
mov
or
add
add
pop
mov
and
pop
fistps
jo
jns
xlat
repz
scas
inc
mov
fcoms
xchg
jl
lock
scas
popa
repz
das
call
push
adc
rcrl
inc
dec
fldt
stc
xchg
inc
adc
test
dec
addr16
add
imul
das
lret
int
sahf
frstor
lods
jl
addr16
aaa
sarb
cmp
lret
dec
and
dec
mov
sbb
std
inc
xchg
push
mov
push
add
adc
sub
add
pop
adc
or
rcl
mov
aam
int
mov
aam
dec
dec
fs
push
mov
push
xchg
pop
daa
sbb
mov
jb
dec
cmpsl
jmp
cmp
adc
mov
dec
insl
dec
sbb
ret
xor
pop
imul
mov
inc
xchg
stos
insl
xlat
xchg
lods
out
or
pop
dec
js
hlt
push
adc
scas
xor
sub
mov
pop
shlb
lods
ret
in
fildl
in
jno
mov
and
ja
fsubrl
popa
rcrb
shlb
cli
test
xor
jmp
pop
xchg
jmp
jp
test
cmp
in
push
incb
inc
mov
inc
mov
adc
and
int3
mov
jo
adc
mov
mov
xchg
cld
repnz
or
repnz
mov
das
mov
enter
test
push
and
mov
cwtl
add
push
jno
add
sbb
push
test
cmp
xchg
das
sub
std
and
outsb
in
out
adc
adc
mov
mov
nop
iret
or
dec
inc
mov
clc
adc
mov
jmp
int
lcall
and
adc
test
outsb
ljmp
xchg
mov
add
mov
sbb
push
test
adc
dec
push
ret
test
jnp
inc
in
sbb
in
movsb
callw
mov
xchg
in
and
inc
orl
jge
mov
ret
push
ficomps
lcall
nop
cmpsl
cmpsb
ja
pop
mov
cs
mov
mov
sub
jo
sub
cmp
push
inc
xor
add
sbb
pusha
repz
fwait
and
test
imul
mov
mov
sub
mov
mov
pop
xchg
iret
imulb
fsubl
push
imulb
and
mov
popf
sbb
out
and
push
and
mov
fldenv
test
cmpsb
cmp
aad
imul
lcall
mov
out
ret
je
les
xchg
mov
repnz
stos
insb
inc
mov
jecxz
adc
popa
icebp
mov
sbbl
ffreep
data16
xchg
repnz
insl
pop
push
bound
adc
clc
aam
loop
notb
mov
jnp
xchg
cmpsl
xlat
add
adc
mov
sbb
inc
push
cmp
mov
cmpsb
int
pop
lock
ret
popa
xor
popa
movsb
out
mov
fwait
arpl
cmpsl
mov
cwtl
push
addr16
popf
ficompl
mov
pop
jl,pn
ja
cmpsl
insl
xchg
cld
and
das
add
inc
cmp
xchg
add
lret
push
adc
adc
push
in
xor
push
adc
inc
ret
push
loope
adc
insl
jmp
xor
cld
jne
ds
add
lcall
aaa
lock
into
out
outsb
fbld
mov
inc
adc
rol
mov
and
sbb
mov
shl
jne
jno
adc
test
pop
cmp
add
jbe
mov
jmp
cmpsl
sar
outsl
mov
mov
xor
jge
je
lods
test
xor
jp
or
sbb
add
jnp
loopne
mov
pop
inc
ss
push
cmp
xchg
rorb
or
xor
pop
pop
dec
mov
and
aas
sub
ss
out
dec
push
jb
push
cmc
mov
pop
xor
adc
out
dec
sub
insl
mov
sarb
insb
cmp
mov
stc
stc
movsb
sahf
and
outsl
sbb
mov
push
jne
adc
addl
mov
dec
dec
insl
xchg
out
push
push
dec
jecxz
cmp
cmp
cwtl
jne
mov
mov
mov
xchg
dec
mov
data16
iret
cwtl
add
lods
jmp
out
int
lret
xchg
out
xchg
or
nop
leave
shlb
js
fadds
pop
mov
xor
mov
and
pop
cltd
xchg
fisubl
and
mov
xchg
xor
dec
jbe
jo
lret
cmp
lea
push
movb
add
add
call
scas
mov
jo
or
stc
stos
test
jmp
in
push
sbbl
add
mov
or
sarl
sbb
push
rcrb
jl
xor
add
pop
lock
outsb
lret
dec
mov
loopne
cs
movsb
or
and
and
push
testl
lods
cmp
sub
jnp
sbb
inc
sub
rolb
jge
out
jg
or
vaddpd
mov
testl
xor
cmc
cwtl
xor
shrb
add
rcr
xor
sub
ja
dec
pop
mov
in
mov
addr16
or
ret
shrl
push
jns
add
cmpsl
xorl
pop
stos
nop
pop
sub
sub
fcoml
sub
pop
pop
loop
enter
orl
mov
jge
stc
ljmp
and
aaa
xchg
push
cmp
sub
mov
fwait
inc
dec
loopne
rclb
or
jmp
sbb
pop
jmp
and
ds
sbb
add
adc
or
stc
mov
nop
ret
mov
cmpsl
sub
sub
sub
cs
and
scas
or
ss
inc
sub
pop
jo
xor
out
aaa
and
rolb
out
or
inc
xchg
movsb
inc
dec
ljmp
cmc
jmp
dec
xor
mov
scas
insb
clc
push
dec
push
sbb
pop
dec
sbb
popf
pop
stc
int3
lods
jne
push
cmpsb
fwait
inc
cmp
jb
mov
push
fdivrs
cwtl
pushf
jnp
fs
idivb
xchg
nop
sbb
iret
frstor
xor
test
hlt
insb
int3
xor
push
or
adc
cmp
jb
xchg
xchg
inc
mov
xchg
stc
mov
xlat
jle
mov
test
sbb
mov
int
mov
je
hlt
mov
daa
cmp
and
fs
loopne
xor
sbb
inc
dec
pop
aam
leave
je
mov
mov
jns
pop
aam
ret
ficoml
sbb
xchg
rcll
lret
jne
ret
fildl
shlb
xchg
cmp
lcall
outsl
cmc
mov
dec
jno
cli
or
mov
lret
sub
adc
out
out
pop
sub
sbb
jp,pt
loopne
jmp
or
dec
add
pop
jnp
movsl
push
mov
pop
pop
mov
xchg
jecxz
fwait
jg
jge
xchg
push
cmp
adc
ficoml
aaa
shrl
sub
mov
jmp
addr16
adc
pop
stos
mov
push
jne
lea
bnd
bound
fists
les
inc
pop
cs
push
mov
sbb
mov
bound
or
pop
mov
sbb
push
mov
mov
jmp
stos
aas
xor
fs
call
stos
cmp
adc
xlat
mov
dec
xchg
lret
popa
das
stc
mov
xchg
leave
mov
lret
fdivp
in
push
pusha
xorl
mov
adc
movsl
fidivrs
icebp
jle
push
lret
lahf
xchg
adc
fiaddl
mov
mov
ret
shrb
test
xor
cmp
xor
sbb
fdivrs
pusha
mov
mov
andnps
jb
loop
adc
cs
in
adc
xchg
mov
lods
dec
imul
dec
std
xchg
iret
mov
xor
pushf
adc
in
into
mov
incb
ret
mov
pop
jne
cmp
sbbl
les
dec
shll
push
into
scas
fwait
sub
xchg
dec
fisttpll
mov
test
inc
aad
orb
pop
in
cltd
inc
movsb
pusha
sub
lock
hlt
inc
sahf
cwtl
sub
fnclex
jne
jns
cwtl
dec
mov
out
fisttpll
jg
or
and
push
js
and
cltd
iret
mov
push
mov
xor
clc
shll
inc
icebp
sbb
lock
push
dec
mov
or
arpl
in
test
rcll
mov
fiaddl
inc
mov
lret
lods
cmp
test
jno
pop
or
cmp
and
icebp
and
popa
aad
aaa
jb
lea
mov
jne
movsl
jp
sub
cmpsb
mov
das
inc
ret
fcoms
xlat
mov
jmp
pop
rcll
inc
pop
or
jno
and
mov
xchg
loop
cwtl
ljmp
pop
fcoml
pop
outsl
leave
cmpsl
mov
mov
dec
pop
out
mov
push
fwait
jns
loop
loop
outsb
push
repz
insb
or
xchg
mov
adc
rolb
inc
pop
lret
out
pop
and
or
mov
je
data16
in
mov
imul
insb
mov
repnz
xchg
stc
xor
leave
pop
sub
mov
pop
js
push
jbe
pushf
cmp
dec
mov
mov
ja
cmpsb
and
mov
mov
add
sub
dec
jno
cmp
cmpsl
push
dec
mov
and
lds
mov
rclb
push
xchg
jae
es
and
les
in
shrl
adc
les
js
scas
ja
pop
mov
sarl
test
jnp
out
mov
and
arpl
sbb
jo
inc
and
enter
mov
or
cmpsl
ret
cmp
push
push
les
xchg
hlt
ficoms
cwtl
adc
or
loop
stos
sub
popa
loop
fbstp
adc
mov
movsb
inc
std
xchg
imul
xor
lods
popf
adc
jmp
adc
out
cmp
and
stc
daa
test
sbb
cld
ret
clc
arpl
jmp
mov
inc
push
push
clc
pop
adc
arpl
stc
xor
pop
jno
shlb
rclb
mov
clc
jo
sub
cs
push
mov
pmaddwd
outsl
cmp
xchg
fcoml
jp
int
sbb
nop
lds
push
shlb
push
pop
aad
mov
inc
pop
ja
out
or
mov
icebp
decb
in
sub
or
loop
jnp
sbb
cmp
add
adc
ret
orl
fidivl
daa
or
mov
shrl
pop
int
ret
mov
or
jne
es
xchg
add
test
mov
push
mov
xor
jecxz
out
xlat
dec
push
shl
cmp
jno
and
test
lcall
lds
enter
int
test
aam
sbb
pushw
enter
mov
xchg
jmp
popf
iret
cmp
add
out
xor
pop
aas
xchg
jne
jge
lods
dec
enter
std
mov
rorl
in
je
and
loope
mov
mov
jp
lcall
jb
push
inc
aad
pop
insl
pop
pop
outsb
pushf
sbb
pusha
iret
dec
adc
inc
enter
adc
cmpl
test
mov
adc
push
mov
jge
dec
xor
gs
sbb
pop
adc
loop
push
mov
popw
mov
out
xchg
test
and
xor
test
outsl
loope
adc
test
xchg
das
subb
stc
test
les
stc
aas
mov
sub
jp
and
push
xchg
xchg
pop
call
and
int
clc
adc
xchg
xchg
mov
pop
push
insl
adc
rorl
jo
jne
mov
adc
pop
aam
xchg
dec
inc
out
pushl
decl
and
stc
jne
xchg
cmp
es
push
scas
shlb
sbb
cmc
or
add
mov
test
xchg
mov
rcll
scas
or
jmp
sbb
movsb
cltd
test
adc
cmp
lret
mov
fnclex
lock
jecxz
and
pop
sbb
int
jne
sbbb
cwtl
mov
dec
dec
into
stc
pop
xor
std
pop
xchg
sbb
test
sti
lret
push
pop
pop
jns
sub
sti
sub
lahf
push
pop
scas
dec
mov
inc
lods
loop
and
cli
mov
pushf
aad
jo
xlat
or
push
sets
dec
dec
push
xchg
jo
sbb
mov
push
or
orl
xor
mov
push
cld
shl
inc
rolb
pop
xor
jb
mov
in
mov
push
mov
mov
mov
xchg
std
push
aaa
add
adc
adc
xor
in
push
es
add
dec
es
fdivrl
mov
adc
mulb
iret
push
xor
daa
jle
mov
mov
pop
test
pop
in
sub
pop
ja
iret
cmp
xchg
addr16
inc
jns
out
fnsave
xchg
mov
jnp
mov
pop
aaa
adc
insl
cmp
rcrl
cmpsl
out
ja
add
cmc
mov
lret
jb
pop
jae
pop
mov
daa
fcmovbe
aam
dec
xlat
shl
jno
addr16
push
repnz
pop
jnp
cmp
pop
in
out
lods
cs
sub
push
and
fnstcw
rorb
movsb
popa
sub
or
fidivl
imulb
lret
xchg
pop
std
xchg
fmuls
popf
cli
mov
incb
jns
mov
xor
flds
push
test
push
out
pop
and
test
lods
shlb
dec
cmp
jbe
aad
icebp
mov
xor
pop
adc
mov
das
insl
int3
push
into
sbb
adc
sub
scas
add
popa
das
xor
and
adc
aas
and
lret
into
cmp
cmp
sub
in
cwtl
mov
inc
push
mov
add
inc
ljmp
cld
mov
cmc
jne
add
adc
inc
dec
inc
and
fiadds
pop
mov
pop
es
pusha
popa
mov
aaa
xor
mov
xor
ds
fisubrl
inc
mov
xchg
outsl
subl
insb
movsb
lods
lret
loopne
movsb
pop
inc
mov
movsl
push
add
in
outsb
loope
xor
or
cs
fs
addl
shll
and
adc
arpl
outsl
lock
or
iret
push
sub
lock
in
xchg
adc
enter
lahf
cmp
es
sbb
daa
mov
cmp
pushf
pop
xchg
addr16
int
mov
test
push
aam
pop
mov
repz
ret
inc
icebp
mov
imull
mov
xchg
push
leave
stos
lock
test
jle
std
fdivrl
or
xor
jno
mov
add
popf
fstpt
pushf
fcoml
int3
sbbl
fstl
daa
fstpl
dec
pop
adc
rcl
test
add
pop
adc
push
fs
cmpsl
cmp
cmpsl
rorl
fisttpl
adc
shl
fldl
jne
add
mov
jge
mov
or
mov
sub
inc
inc
stc
imul
push
les
pop
mov
xor
rol
std
popa
or
mov
pop
cmp
daa
and
jbe
int
jl
cwtl
in
cmpsb
lods
pop
in
pushf
xchg
adc
adc
test
mov
popa
sbb
pushw
dec
sub
add
icebp
mov
icebp
cmp
int
adc
inc
cmp
loope
fisubrl
jmp
ret
push
lock
push
cmp
xor
or
inc
pop
push
dec
and
stos
cmp
dec
rol
jle
test
mov
jno
push
addr16
scas
cmpsl
dec
and
inc
pop
fninit
push
aad
pop
mov
dec
lock
les
mul
dec
in
mov
mov
jmp
pop
sub
loop
sbb
fsts
adc
movd
shrb
outsb
and
sub
es
push
lock
sub
pop
cmp
or
gs
xchg
pop
or
sti
js
jae
cmp
test
fidivrl
mov
jo
cmp
sub
jle
sahf
das
shl
and
or
mov
std
mov
addr16
shrl
push
jne
pop
sbb
dec
aad
dec
pop
nop
pop
ljmp
fisttpll
pop
jmp
int
sbb
iret
xchg
lods
sti
lahf
or
or
jno
jecxz
add
test
mov
clc
push
mov
call
sub
aam
lock
pop
inc
out
sti
cmp
jno
xor
dec
adc
dec
jge
cwtl
jg
inc
sbb
movsb
add
cmp
das
jle
xor
out
mov
cmp
ficompl
sub
mov
in
ljmp
jge
sub
add
sti
aam
test
aas
and
ret
or
popa
fdiv
mov
mov
mov
popf
lret
fstl
add
dec
dec
sub
add
sti
push
mov
daa
add
jnp
test
out
sbb
inc
mov
xchg
shl
push
ret
xchg
xchg
insl
frstor
sub
inc
stc
in
inc
xchg
push
adcl
lods
adc
ret
cli
ss
aaa
fisubs
or
cmc
cmp
and
inc
sub
mov
cmp
jl
cmpsb
xor
aam
out
movsb
xchg
pop
fcomps
daa
pusha
je
jge
clc
pop
fwait
xor
xchg
dec
cmpsl
repnz
adc
lock
dec
stos
and
adc
sub
enter
rcr
lock
inc
xlat
imul
mov
stos
inc
jns
es
in
mov
cld
sub
mov
mov
adc
cmp
push
cld
decl
cmpsb
into
adc
cld
repz
pop
dec
mov
lods
fldenv
inc
ret
leave
in
add
add
adc
cs
sub
into
sub
lahf
movsl
adcb
push
mov
add
inc
clc
aad
mov
adc
out
cmp
push
fists
inc
mov
fs
std
pusha
push
mov
fpatan
inc
sti
bound
push
cmc
jno
divl
mov
cmp
js
mov
jae
pop
pushf
xor
fldt
jns
mov
jl
pop
push
ds
sbb
adc
pop
jb
rcl
cmp
add
cmp
inc
rorl
push
push
or
push
imul
rolb
mov
imul
fmul
sub
and
bound
popa
sub
jns
lcall
dec
cwtl
insb
jp
es
lods
sbb
pop
mov
sbbl
pusha
inc
dec
jl
inc
inc
push
adc
jmp
cmp
sbb
dec
xchg
adc
xchg
test
dec
jg
test
push
xchg
push
push
in
scas
cmpsb
inc
daa
cmp
sbb
das
fisubs
lahf
fsubs
mov
ljmp
test
or
aam
ljmp
ss
xlat
movsb
shrl
mov
push
jge
mov
out
and
fidivl
icebp
imul
pop
sbb
push
loop
inc
addb
mov
cmp
sub
mov
cwtl
push
adc
scas
loopne
in
jg
out
inc
cli
into
in
mov
stc
pop
sarl
outsl
les
pop
push
and
push
dec
pop
mov
pusha
adc
pop
cmp
mov
out
cmp
es
add
insb
not
rcl
xchg
or
mulb
jae
dec
push
sub
loope
push
fisubl
and
sahf
push
xor
aam
xor
popf
cwtl
mov
outsl
jo
mov
jnp
jecxz
inc
mov
lds
jmp
jp
andl
xor
int
jae
lods
cld
xchg
scas
stos
add
xchg
mov
inc
and
sbb
clc
jl
sub
mov
adc
inc
out
push
nop
pop
cmpsl
out
add
pop
out
scas
shld
shrb
xchg
in
mov
ljmp
dec
sbb
or
xor
dec
pop
mov
inc
scas
je
dec
mov
cwtl
clc
jmp
add
mov
xchg
adc
sbb
repnz
out
adc
lods
int3
sub
mov
xchg
int3
mov
daa
pop
loop
cmpsb
push
fisubs
mov
les
dec
jecxz
and
hlt
pop
jp
test
les
stc
push
imul
stos
inc
adc
mov
leave
fsubrs
mov
sbb
pop
pop
shll
icebp
in
sarb
cmpsl
testb
mov
imul
movzbl
dec
rcrl
add
lods
loopne
mov
lcall
data16
cltd
xor
lock
xchg
jbe
addb
clc
mov
xchg
test
jo
cmp
cmc
dec
sti
pop
fidivrl
sub
dec
cltd
add
std
or
inc
mov
cmpsb
mov
shlb
mov
in
test
lret
or
aaa
dec
ds
cmp
fnstsw
insb
outsl
in
dec
sbb
xlat
rcrb
and
push
dec
inc
xor
pop
stc
xchg
dec
mov
in
fcompl
ja
pop
repnz
jecxz
dec
out
push
adc
fsubrp
xchg
out
xor
add
int
add
inc
ja
test
sub
je
daa
and
push
testb
and
daa
push
add
push
cmp
adc
negb
dec
insb
int3
sbb
rol
xchg
test
jo
fmuls
sbb
pushf
xchg
sub
sbb
or
dec
mov
rcl
push
mov
jmp
aam
jae
or
push
mov
or
sbb
aaa
sti
jno
loope
sbb
sub
lea
and
insb
dec
push
sbb
in
and
addr16
push
jne
inc
pop
xchg
test
or
fistpl
mov
je
rorl
loopne
lret
sbb
mov
clc
sbb
mov
lahf
sub
pusha
sub
decb
pop
lods
rcr
aad
cld
jmp
aad
repnz
mov
shl
or
testb
or
out
lret
repnz
cmp
rcll
push
push
rorb
xor
mov
push
pop
xor
add
sub
xorb
mov
out
dec
movsl
shlb
push
test
mov
pusha
popf
ljmp
xor
mov
mov
lret
jo
sub
dec
fisubl
mov
xchg
adc
push
in
xchg
xchg
data16
repz
outsb
mov
push
pop
push
xlat
mov
and
lds
iret
mov
inc
mov
lods
sub
mov
sbb
js
cmp
pop
mov
jne
stos
mov
adc
push
sub
or
sahf
add
cli
scas
sub
cmp
ljmp
aaa
mov
sbb
adc
mov
mov
int
mov
and
ss
in
sahf
outsl
aaa
jl
lahf
mov
pcmpgtd
fwait
lods
out
xchg
scas
call
xchg
cs
sbb
inc
cmpsb
fldl
xor
pop
lock
jbe
xchg
arpl
insl
repnz
pop
dec
loop
or
xor
rcl
popl
adc
jg
sti
jl
bound
sbb
jo
jg
clc
adc
fsubl
cmpsb
mov
sbb
jg
add
mov
xor
xor
aaa
dec
sarb
push
mov
inc
xor
push
scas
sub
cmp
push
icebp
jge
out
jne
rorb
inc
push
cmp
push
cmc
outsl
or
xor
mov
or
mov
cmpsl
icebp
dec
stos
bound
rcrb
out
cmpl
push
adc
rorl
inc
insl
addl
faddl
xchg
jle
jne
push
mov
in
push
fxch
lahf
repz
mov
dec
inc
lock
dec
sub
xor
mov
sub
js
ljmp
mov
mov
xchg
xor
xchg
add
push
dec
inc
pop
pop
and
inc
cmp
fistpl
and
sub
add
xor
push
xlat
jne
mov
xchg
js
push
xchg
pop
jle
aad
sub
sbb
sbb
pop
es
dec
or
lcall
mov
fidivrs
dec
lcall
pop
shll
dec
cmp
outsb
fbstp
sbb
cmpsb
ss
sbb
out
xchg
adc
push
dec
and
push
cmc
popa
pushf
xchg
push
cwtl
inc
mov
rorb
lret
and
jae
cli
mov
in
cltd
cmpsb
scas
push
imul
jno
lods
push
mov
popf
push
cmp
push
imul
in
repz
jne
cltd
sub
repz
fsubs
and
jecxz
lret
dec
out
jbe
adc
or
mov
jg
js
fiadds
jbe
push
outsb
mov
xchg
push
lahf
adc
sub
cwtl
xlat
jae
les
into
pand
jl
push
lods
jnp
inc
mov
mov
mov
dec
dec
inc
es
fdivrs
cmpsl
pop
mov
popa
and
out
loopne
mov
test
dec
movsl
mov
inc
insb
int3
lret
xchg
xchg
sbb
push
mov
jecxz
arpl
xor
lods
arpl
mov
mov
stc
xor
pusha
lahf
or
cmpsl
inc
aas
subb
pop
ja
adc
cmp
adc
cltd
scas
cmp
cmpsb
ja
mov
mov
dec
push
aam
mov
sbb
loopne
shr
jle
mov
dec
adcb
jge
call
into
pop
movsl
mov
lea
sub
push
mov
sahf
xor
mov
mov
pushf
dec
frstor
inc
pop
mov
jge
movsb
xor
add
mov
shll
push
ljmp
mov
mov
adc
lret
cwtl
pop
repz
fnstsw
add
lods
fnsave
out
sub
pop
test
test
pop
push
pushf
lock
jecxz
mov
mov
xchg
int
test
cmp
mov
shrl
in
in
rcrb
in
insb
xor
jb
jnp
sbbl
sbb
mov
outsl
mov
add
dec
pusha
sub
testb
je
and
mov
subl
sahf
inc
subl
mov
jecxz
stc
mov
movsl
lret
mull
outsl
lret
cmp
or
repnz
xchg
ljmp
aad
outsl
pop
roll
sub
or
std
pop
sbbl
loop
ss
mov
sbb
adc
inc
cmp
and
sbbb
js
or
popl
pop
out
push
xchg
mov
push
push
cmp
jae
test
sub
scas
fcoml
or
push
or
mov
lods
ret
push
addr16
sbb
cmp
movsl
jge
fs
add
add
or
in
and
cli
and
popa
add
rcrl
lods
jmp
insl
in
cltd
and
jb
nop
test
xlat
hlt
pop
fwait
cmc
dec
dec
jecxz
mov
mov
scas
inc
dec
jae
ret
fmulp
adc
and
test
dec
dec
sbb
jnp
push
rclb
sbb
lods
jne
add
inc
fs
jg
das
cs
out
inc
stc
push
scas
test
js
cmpsl
int
shrb
js
mov
lret
out
cmp
scas
fisubl
stos
insl
inc
hlt
sbb
orb
mov
adc
mov
out
jnp
xchg
push
ret
js
dec
fimuls
xor
lahf
nop
xor
mov
ljmp
inc
movsl
ret
add
jnp
jo
mov
add
sub
xchg
xor
pushf
sha256msg2
xchg
es
jg
pusha
push
sub
dec
push
xchg
cli
xchg
cmp
xor
push
push
shll
aam
imul
repz
jp
into
push
adc
mov
push
or
xlat
push
pop
lret
out
clc
sbb
fdivs
bound
mov
rcr
frstor
mov
mov
rclb
dec
mov
stos
sbb
push
xor
cmp
or
add
imul
or
cmp
out
arpl
out
sbb
jb
pop
sbb
sbb
mov
cmp
bound
adc
mov
aas
dec
lcall
data16
jnp
imull
xor
mov
addb
xchg
ss
data16
aas
leave
and
jae
cmp
or
cld
gs
les
movsl
les
cmp
dec
pop
jns
in
movsl
mov
bound
lcallw
dec
mov
or
sarb
pusha
push
xchg
xchg
or
mov
dec
fmulp
inc
scas
mov
sar
out
cmp
pop
in
cmp
dec
sub
cmp
sti
pop
or
mov
push
fwait
jl
fs
or
xlat
adc
ret
fidivs
cld
and
fsts
inc
xchg
setbe
jbe
xchg
jge
jno
or
xlat
pop
leave
bound
sbb
sarl
push
repnz
gs
add
call
in
mov
aaa
or
mov
out
test
cmpsw
jns
int
cltd
sbb
xor
fsub
iret
leave
or
pop
pop
pop
cli
cmpsl
xchg
push
jmp
fildll
xchg
sarb
push
push
shll
faddl
cmp
popf
adc
xchg
popf
lcall
scas
daa
aam
cltd
test
push
fildl
pushf
sbb
ss
into
cmp
cmc
dec
scas
test
pop
in
mov
xor
fwait
mov
aaa
test
lods
ds
lcall
movsl
adc
mov
pop
mov
mov
mov
push
mov
sub
and
fldenv
and
les
daa
data16
pop
cmp
cmp
jmp
jge
xchg
mov
iret
dec
stos
pusha
fcmovnbe
push
xor
push
sbb
pop
pop
cmp
test
fadds
dec
xor
fcoml
adc
mov
dec
add
lds
sti
or
mov
mov
fsubs
icebp
sbb
pop
imul
ds
xchg
dec
cmp
jl
dec
adc
or
inc
jecxz
shl
jmp
push
cmp
in
aad
jb
loop
add
into
pop
enter
pop
stc
sbb
sbb
pop
push
in
dec
pop
popa
inc
stos
add
outsl
adc
dec
cmp
jg
sbb
sub
jbe
cltd
mov
adc
inc
push
lods
mov
sub
lahf
into
sbb
pop
test
mov
mov
int3
bound
js
ds
pop
cmp
and
dec
rorl
sbb
and
pop
sub
sub
xchg
int
fwait
rcrl
aad
sbb
imul
cmp
sbb
scas
imul
fsub
fsubrs
or
dec
dec
cwtl
sub
insb
jae
mov
addl
loopne
or
mov
movsl
loope
rcl
push
mov
in
aas
sbb
fimull
xlat
jnp
or
xchg
cmpsl
cmp
pushf
dec
push
and
mov
imul
pop
sti
lods
repnz
xor
insl
xchg
js
inc
test
sub
jmp
sahf
pusha
popf
rolb
pop
test
jecxz
xor
pop
idivl
imull
out
or
and
aas
lock
pusha
fisttps
mov
or
sbb
into
fldlg2
jg
push
scas
leave
outsl
push
out
push
jecxz
xchg
in
xor
and
mov
sub
jg
xor
mov
movl
in
and
add
int3
mov
fldl2t
repz
cld
ja
inc
fisubl
in
adc
cmp
fisubl
push
andl
sbb
ret
pop
aaa
into
in
call
insb
ss
ds
xor
sbb
dec
mov
xlat
jl
dec
rcrl
out
fcmovnb
imul
or
mov
out
into
les
jne
cs
mov
jmp
xor
mov
add
out
mov
mov
rolb
xor
adc
pop
ret
dec
iret
mov
fcmovnbe
es
addr16
or
pop
lods
cltd
cmpsl
xor
or
test
mov
xchg
xchg
repnz
addr16
dec
or
push
push
dec
add
dec
add
adc
jge
mov
and
ja
in
sti
clc
cld
dec
lcall
lods
dec
add
adc
adc
and
scas
lcall
jnp
cmp
icebp
sbb
cs
pop
stc
inc
in
mov
sbb
push
xor
and
push
aam
sahf
push
cltd
loope
mov
pop
mov
pop
cmp
inc
ds
mov
cltd
pop
iret
scas
lret
dec
dec
addb
mov
cmpsl
xchg
sbb
shlb
out
cmpb
xor
movsl
mov
or
add
adc
mov
insb
scas
nop
andl
mov
mov
fbstp
repz
loopne
mov
cmp
pusha
cmp
ja
pop
dec
xor
mov
push
xchg
or
and
outsl
aad
cmp
popf
sbb
xlat
sti
jbe
add
subl
xchg
xchg
imul
jp
sahf
imul
fisubs
loopne
jnp
shll
adcb
jg
lahf
or
inc
pop
and
add
jns
arpl
xor
aam
test
mov
adc
push
dec
jb
mov
insl
lock
stc
rol
xchg
dec
jbe
iret
sub
popf
xchg
mov
aam
mov
pop
dec
int
mov
sbb
popa
cmp
xchg
jns
sub
cli
jmp
fisttpl
inc
pop
sub
add
push
xor
mov
xchg
cli
and
cmp
loopne
mov
inc
idivb
mov
xchg
jb
das
cmp
ja
cmpsb
das
lret
enter
jecxz
daa
push
in
dec
sub
cli
or
inc
movsb
mov
loop
aaa
ja
jne
test
jle
loope
ss
arpl
push
push
test
mov
jge
mov
push
pusha
pop
xchg
mov
xor
lcall
xor
iret
lcall
ret
into
sbb
mov
or
pop
mov
and
xor
pop
dec
push
jmp
xchg
cmpsb
in
fiadds
pop
in
repnz
sub
loop
dec
mov
pop
or
pop
sub
push
cmp
jno
scas
adc
test
fwait
shl
sub
cmpsl
jbe
sbb
fdivs
ds
mov
sarl
adc
inc
or
add
inc
cmpsb
fdivrl
push
rcll
sbbl
data16
das
sbb
and
mov
popa
jbe
or
xchg
mov
inc
in
sbb
jno
jns
aad
xor
sub
xchg
cltd
mov
ljmp
sub
aas
lods
sub
fcomip
imul
sbb
pop
mov
jle
xor
mov
xchg
cmpsb
daa
nop
mov
mov
dec
popa
sub
push
pop
adcb
clc
xor
inc
cmp
and
pop
hlt
mov
push
mov
cmp
cwtl
cvtpi2ps
js
or
ss
movsl
mov
sarl
mov
in
sbb
icebp
adc
adc
mov
inc
daa
cmc
adc
mov
xchg
jg
movsl
xor
pusha
cmp
jne
fs
xchg
iret
pop
mov
jp
cld
jne
mov
add
scas
sahf
and
scas
sub
sti
aas
sbb
int3
xlat
std
popa
adc
jo
fs
dec
dec
insb
push
movsb
mov
repz
pop
push
adc
add
push
jge
or
scas
jl
imul
inc
add
add
faddl
fcoml
sbb
aaa
loopne
xchg
bound
test
popf
or
add
mov
sahf
push
adc
out
pop
sbb
rorl
mov
jmp
pushf
scas
xorl
or
sbb
jae
sub
and
jb
pushf
push
cmp
int
pop
ret
sub
xchg
xchg
mov
jecxz
stc
lcall
xchg
mov
mov
jne
xchg
mov
sub
ds
pop
xchg
mov
add
adc
sbb
lods
ljmp
shlb
aaa
cmp
out
sbb
jns
pop
subl
cmpxchg
mov
pop
insl
test
xor
xor
pop
test
out
stc
cmp
mov
pop
pop
pop
int
test
fistps
mov
icebp
mov
sbb
jo
xchg
jb
mov
int
pop
jp
cwtl
xchg
pop
mov
dec
cmp
jl
cmpsl
push
or
mov
pop
fsin
push
into
jbe
pop
rcll
jo
rorb
sbb
adc
mov
out
leave
sbb
popf
sub
in
dec
jmp
jo
clc
lock
pop
sub
mov
inc
mov
mov
adc
lret
mov
movsl
rcrb
and
push
fsts
dec
add
xor
lds
inc
outsl
xchg
mov
adc
cmp
cmpsl
in
mov
faddl
aaa
out
cli
insb
lahf
push
call
ja
pop
push
pushf
lret
sub
pusha
mov
push
mov
xchg
arpl
out
ljmp
aam
push
dec
out
lods
lret
in
mov
ds
daa
in
dec
xor
inc
and
fs
clc
in
push
xchg
and
aad
lcall
scas
inc
push
ss
xchg
inc
mov
adc
je
subl
cmpsb
jmp
push
sbb
jmp
pop
js
ret
xchg
dec
mov
lahf
jl
lret
and
pop
shll
add
pop
iret
addr16
adcb
and
leave
aaa
dec
mov
call
test
or
popa
fmuls
lcall
inc
mov
ret
pushf
push
xor
repnz
adc
sub
out
jecxz
xlat
jge
push
or
repnz
das
pop
adc
inc
pop
cmpsb
mov
sbb
aam
cmp
push
mov
ljmp
xacquire
sbbb
sbb
ret
test
mov
push
cmpsl
xor
shll
insb
int3
shrl
aad
imul
les
cmpsl
push
lock
outsb
cmp
cmp
mov
data16
loopne
mov
cmc
inc
sti
mov
push
insb
aaa
es
push
cltd
or
rorb
cli
sbb
fistl
incl
pushf
sbb
fstpl
fisubrl
add
cmpsb
mov
xchg
push
rorb
pop
outsl
lds
pop
incl
push
xchg
js
xchg
imul
and
mov
ljmp
and
adc
sub
pop
insb
add
inc
outsl
lret
aam
cmp
cmp
icebp
inc
xor
iret
xchg
and
std
cltd
and
pop
into
mov
jbe
xor
push
mov
xor
sahf
push
cmpsb
fidivrl
imul
into
mov
sbb
movsb
mov
rclb
add
push
orl
push
inc
addr16
jl
sahf
out
sub
lods
ret
lcall
or
fwait
cmp
out
mov
iret
scas
push
add
int
adc
xchg
push
scas
add
inc
iret
add
adc
xchg
jg
fldcw
movsl
push
mov
aam
push
pop
cmp
adc
in
adc
adcb
outsl
mov
paddusw
sbb
push
hlt
pop
pop
daa
mov
pop
ret
jmp
jbe
jp
ret
cmpsb
cmp
jns
push
daa
insb
push
jae
popa
out
adc
pop
inc
adc
int3
inc
adc
cli
xchg
cmpsb
inc
jns
inc
fdivrl
inc
stos
mov
leave
sub
xor
inc
jecxz
xor
xchg
cld
repnz
dec
ss
ds
clc
pop
scas
leave
or
and
adc
outsl
sub
pop
or
adc
mov
mov
test
loop
or
mov
sub
mov
mov
dec
or
jle
lds
fcompp
in
push
fcmovu
adc
sbb
outsb
push
mov
sahf
xchg
ss
push
adc
xor
and
sub
mov
adc
test
vpshlb
inc
notb
bound
leave
dec
repz
lret
mov
cmp
fwait
mov
add
movsl
jne
mov
sbb
icebp
aad
mov
in
int
adc
xor
jo
popa
and
and
add
cmp
dec
and
dec
dec
pop
mov
lret
nop
dec
adc
xchg
adc
hlt
pop
and
dec
pusha
mov
or
sub
aad
add
es
lods
sbb
fisubrs
inc
aam
push
in
mov
int
insl
cli
iret
dec
loopne
cmpsb
jg
and
out
call
sub
fdivs
add
xor
and
cmc
mov
xor
lds
mov
fs
popf
aam
mov
or
andb
ja
rcr
add
pushf
or
pushf
push
and
sti
or
mov
movsl
fidivrl
jno
out
and
pop
imul
sub
mov
xor
lret
dec
icebp
sub
mov
jnp
and
and
nop
cmc
and
jl
das
popa
push
pop
inc
or
scas
imul
in
sarb
les
clc
pop
nop
popf
dec
pop
out
adc
clts
mov
dec
mov
mov
repz
and
jg
sub
xchg
rorl
pop
cld
in
iret
imul
scas
js
inc
int3
orl
mov
shll
das
push
ret
arpl
and
ljmp
mov
shlb
pushf
out
mov
or
mov
xorl
adc
cli
popa
js
cwtl
dec
popa
lahf
pop
mov
dec
push
lods
sub
xor
mov
fcmovbe
pop
xchg
xor
sbb
rcll
daa
nop
lahf
push
movsl
iret
fsubs
and
or
stos
jecxz
rcl
cmc
add
test
sarl
mov
les
pusha
xchg
aaa
and
mov
rorb
aaa
sbb
insl
inc
jmp
xor
cmpb
xchg
xor
mov
movsl
mov
ss
pop
fiadds
cwtl
and
mov
ljmp
arpl
adc
cltd
push
fiadds
clc
mov
xlat
pop
and
and
or
jno
add
lock
cmpsl
and
xor
popf
fiadds
lcall
add
lcall
outsl
fidivrl
cmpsl
or
push
lret
mov
mov
fmul
pop
mov
sbb
jb
push
mov
sarb
or
xchg
lret
lret
adc
add
jno
pop
push
or
or
mov
sub
mov
inc
cmpsb
mov
mov
popa
fwait
inc
sahf
mov
addb
and
cmpsl
leave
stos
pop
fidivl
sub
lcall
movsb
outsb
xchg
xchg
ljmp
mov
and
jnp
mov
fimull
es
push
pop
mov
popl
enter
jnp
push
cwtl
xchg
lgs
mov
ss
lcall
dec
or
jo
add
push
mov
mov
xchg
pop
std
mov
into
jns
js
sti
push
aad
repz
sahf
in
int
movsb
mov
bound
mov
xor
in
sub
xor
pop
xor
pop
movsb
in
mov
xchg
mov
pop
dec
add
int
mov
or
mov
xchg
mov
popf
xorl
std
push
mov
jnp
pop
imul
loope
enter
cmp
enter
push
add
and
jg
push
lock
xorl
push
into
cmp
testb
jae
out
cmp
mov
scas
pop
rorb
rcll
mov
add
ret
jae
ret
mov
jp
cmc
andb
cmp
dec
push
push
mov
mov
dec
push
cmpsb
add
aas
xor
push
ror
mov
mov
add
or
and
dec
sbb
mov
subl
xor
arpl
fsubr
jno
xor
sbbl
cwtl
mov
daa
and
pop
fwait
xchg
mov
jno
cmp
rol
bnd
lods
mov
fiaddl
aam
into
or
cmp
iret
daa
xchg
outsl
lods
arpl
loopne
mov
aaa
jne
ror
lea
enter
and
imul
enter
and
iret
mov
sbbl
fistpl
in
push
dec
out
sbb
mov
xlat
or
nop
mov
dec
es
jmp
lds
push
and
push
popf
ret
dec
loope
cmp
sub
adc
dec
pop
lds
adc
sbb
arpl
pop
in
xchg
stos
xor
fisttpl
iret
jo
call
xchg
ss
adc
loopne
std
pop
jmp
imul
pusha
lahf
mov
inc
sub
xlat
rorb
sub
push
movsb
popa
pusha
or
dec
jo
mov
xor
mov
lods
add
xchg
lea
add
cli
adc
std
je
inc
xor
pusha
test
adc
inc
rorb
pop
pop
xchg
fisttpl
iret
cmp
rclb
fdivl
sbb
push
xor
add
push
aaa
aam
cwtl
leave
push
dec
popf
in
ficompl
and
mov
cmp
cmc
mov
les
adc
imul
sti
cmp
add
cmp
movsb
stos
icebp
and
mov
dec
mov
xchg
fiadds
mov
sub
shrb
gs
push
outsb
push
push
jp
adc
mov
pop
mov
push
dec
fisubl
aas
xchg
mov
xchg
jb
repz
mov
fs
xor
jno
stos
dec
cmpsl
and
out
mov
cmpsb
cmp
dec
jnp
fadd
insl
xchg
add
mov
mov
pop
mov
scas
mov
pop
call
add
cli
into
rorl
mov
out
mov
mov
ja
ret
sbb
out
xchg
outsl
adc
mov
mov
push
lahf
push
into
or
outsb
sbb
mov
mov
rol
lret
and
and
leave
rorl
sub
sahf
inc
sbb
fistps
jl
xchg
dec
rcll
cmp
gs
ror
mov
test
xchg
xchg
add
push
andb
inc
mov
jp
int3
jle
imul
fbstp
dec
dec
gs
int
sbb
adc
xor
stc
lcall
mov
jnp
jmp
sub
adc
xchg
shrb
mov
jl
dec
daa
and
lds
sub
ja,pt
mov
rcll
jmp
fadds
test
out
movsb
aam
xor
icebp
inc
push
sub
js
cmp
adc
xchg
fs
xor
fisubrl
and
add
ficomps
pop
push
sub
mov
add
xchg
pop
aad
mov
pop
leave
xchg
outsl
lods
add
das
sub
adc
jecxz
xchg
addr16
mov
fstl
jg
sbb
jl
pop
out
sbb
cli
test
pop
push
inc
cli
call
add
mov
or
cmovno
jge
push
add
pusha
adc
cmpl
cmpsb
sbb
sbb
les
test
pushf
xor
push
pop
scas
mov
pop
imul
ret
sbb
fs
test
jns
cld
mov
mov
mov
testl
das
stc
test
fnstsw
push
jmp
mov
xor
mov
dec
push
xchg
xor
mov
lds
xor
mov
es
cmp
mov
jnp
sub
sub
and
sub
cmp
js
sub
fisubrl
jns
nop
leave
mov
pop
sub
push
arpl
mov
fbld
jle
add
dec
js
xchg
push
jl
stos
xor
push
nop
jg
es
testl
and
jno
adc
dec
stos
leave
out
adc
dec
repz
dec
jle
jb
pop
out
sub
cmp
sti
sub
ljmp
adc
mov
mov
pop
leave
subb
push
loope
out
into
fprem1
test
ljmp
ja
mov
fldcw
mov
inc
or
sbb
xor
cld
ja
sub
push
cmc
pop
stos
rcrb
fwait
scas
in
mov
jge
pop
insb
jns
or
int3
xor
fdivrl
add
xor
sub
imul
lods
sbb
jo
in
enter
lcall
stos
hlt
inc
ficompl
mov
and
push
pop
sub
cs
xor
ja
fwait
mov
add
xchg
push
lret
out
push
adc
pop
jp
mov
cmp
add
adc
jecxz
jnp
into
lea
ljmp
cmpsb
sbb
outsb
jbe
jb
sbb
cli
dec
sbb
xchg
mov
dec
sub
lret
enter
pop
das
xchg
les
xor
push
std
pop
dec
fcmovnbe
add
adc
and
movsb
popf
repnz
clc
xor
push
jnp
or
mov
xchg
fisubrl
pop
sub
sub
popf
mov
pop
inc
pop
xchg
jae
repz
fmul
or
lods
dec
test
xor
pop
mov
jmp
sbb
rorb
fwait
lret
in
test
adc
dec
push
adcl
pop
jae
adc
lods
push
jge
push
lock
push
lahf
jns
aas
xor
or
and
sub
pop
mov
mov
xchg
push
ja
shl
jns
rol
fucom
mov
icebp
sbb
out
dec
adc
mov
push
ret
fnsave
sbb
jmp
dec
jmp
mov
repz
ss
xchg
xchg
push
mov
fcmovu
iret
xor
push
test
icebp
xchg
sbb
pop
sahf
loope
xchg
int3
cmpsb
add
icebp
mov
sahf
sahf
or
xor
mov
adc
sbb
mov
adc
into
out
aam
and
cltd
lret
pop
lock
cltd
repz
pop
lcall
mov
daa
imull
push
testb
ljmp
repz
ljmp
stos
inc
xor
lret
lock
mov
test
add
sub
clc
in
pop
fs
jbe
push
loop
xchg
inc
fists
das
aad
pop
jno
cmpsl
stos
cmp
cli
sti
xchg
mov
mov
pop
lods
iret
scas
pop
adcl
cwtl
out
sbb
daa
dec
sti
mov
and
cmp
mov
dec
xchg
cmp
cmp
rolb
imul
jl
mov
test
adc
xor
aas
sbb
push
xor
ficompl
leave
adc
test
xor
jle
mov
sbb
loop
and
and
and
pop
cmp
add
and
repz
jecxz
sbb
and
jnp
pop
clc
cld
out
mov
das
lcall
sub
sahf
pusha
fwait
jge
dec
push
popa
fidivs
ffree
add
xchg
lcall
mov
ljmp
mull
jl
jo
jo
jl
xchg
decl
adc
mov
adc
inc
fldl
ja
jl
sub
stos
add
mov
xor
xchg
decb
movsl
push
jl
stos
jp
mov
mov
cwtl
in
jmp
aaa
lock
mov
inc
adc
xchg
cs
push
outsl
fimull
or
jl
push
lret
lods
aad
mov
push
mov
int3
dec
pusha
mov
loopne
stos
aaa
mov
jno
jb
ss
dec
and
imul
dec
and
mov
cmp
rorb
icebp
ja
mov
ds
pushf
cmpb
add
out
sbb
or
enter
stos
mov
xchg
mov
lea
leave
cmpsb
pusha
imul
es
inc
xor
add
lds
xchg
xor
push
pop
ljmp
mov
call
test
pusha
or
xorl
int3
xlat
dec
jg
dec
stos
ret
imul
push
hlt
repnz
bound
inc
fsubrs
rcll
jl
mov
and
js
pop
dec
filds
or
xchg
std
jecxz
cwtl
jmp
mov
inc
xchg
mov
jge
mov
stc
adc
iret
and
shll
test
icebp
hlt
lds
out
movsb
add
or
stos
mov
fldcw
fistpl
jecxz
fwait
outsb
pop
dec
fidivrl
pusha
xlat
shrb
test
call
scas
jmp
add
lcall
push
fsub
sbb
pop
mov
jbe
xchg
push
inc
das
scas
movsl
push
out
adc
inc
mov
xchg
xor
fsubl
dec
sbb
nop
sbb
mov
xor
inc
xchg
es
xor
ret
icebp
mov
adc
or
jge
loope
mov
cmp
add
fwait
dec
test
movb
lock
cwtl
jmp
mov
ret
mov
push
cmp
and
inc
fs
iret
inc
shll
cli
fnsave
lret
mov
inc
cmp
dec
sbb
and
pusha
cs
or
mov
xchg
fs
cld
cs
cmc
pop
repnz
loop
mov
xchg
push
repz
scas
leave
jbe
sbb
lcall
pop
sbb
inc
ret
and
push
outsl
xchg
dec
gs
fwait
dec
adc
pop
dec
adc
ret
jbe
mov
mov
into
cmp
jmp
add
fildl
lahf
loopne
jo
and
sub
jmp
sbb
pusha
shll
mov
adc
and
test
lahf
leave
push
cmp
xchg
cmp
mov
jnp
add
xor
call
fwait
pushf
je
daa
inc
cmp
xor
jbe
icebp
or
or
and
inc
call
pop
das
and
sub
push
je
mov
pushf
mov
mov
mov
jg
sub
or
fldt
mov
je
dec
mov
dec
inc
xor
sub
popf
mov
xchg
testb
insl
aam
push
fwait
adc
mov
jg
sub
inc
aad
jp
jle
push
xchg
mov
jae
lret
pop
ljmp
aad
leave
int
std
jl
jbe
test
shlb
pusha
jae
pop
jp
add
into
xor
addr16
sbb
jo
mov
push
jae
inc
nop
xchg
xchg
hlt
idivb
pop
push
out
inc
scas
pop
xchg
jne
arpl
int
ficompl
cltd
push
or
shr
es
std
ret
cld
jp
in
sub
fwait
mov
sub
mov
adc
por
push
push
sub
pop
pop
clc
hlt
jle
or
mov
in
outsl
cld
jge
inc
imul
xor
lods
seta
ret
loope
mov
lock
add
pop
lock
and
cli
inc
movl
add
out
aad
cld
adcb
mov
mov
stos
mov
pop
int3
dec
lods
sub
pop
mov
mov
movsb
popf
mov
sbb
lods
loope
ret
inc
mov
pop
and
inc
ds
sti
mul
test
inc
aam
cmpsb
pop
adc
repz
pop
scas
shll
xchg
sbb
outsl
cs
jae
in
inc
and
xor
addr16
or
je
mov
ja
and
int
mov
add
dec
fsts
cmp
andl
movsb
ret
ret
mov
pushf
jns
jle
jnp
js
push
je
adc
push
push
push
cli
adc
jno
lea
mov
clc
stos
in
aad
jns
lret
loop
jb
ja
mov
mov
rcrb
es
pop
icebp
dec
test
subb
xor
adc
dec
mov
dec
dec
sub
mov
sub
adc
cmp
aas
mov
jnp
dec
push
jnp
ret
or
jmp
mov
shlb
mov
push
dec
mov
jle
out
fs
ret
xchg
cmp
int
xorb
mov
mov
fwait
cmp
das
mov
jp
add
les
push
mov
jb
aas
adc
sbb
es
or
pusha
xchg
loopne
frstor
std
or
sti
push
fdivl
aaa
lret
sub
sbb
out
sbb
jbe
out
pop
lret
out
pop
sbb
sbb
inc
rorb
and
pusha
fisttpll
jae
xor
lret
jae
out
dec
cmp
xor
mov
mov
leave
sub
cli
mov
pop
mov
rol
xchg
jecxz
dec
gs
negb
push
inc
clc
sbb
sbb
push
mov
xor
jl
mov
in
or
or
hlt
ss
je
fsubrs
or
outsl
nop
pop
jbe
int
lds
cmp
jg
fdivrs
xor
add
loopne
lcall
mov
mov
es
xchg
mov
lods
jg
in
jmp
push
nop
or
cwtl
bound
adc
and
cwtl
inc
push
fcmovb
movsl
je
xor
pop
ljmp
ss
rol
xor
inc
out
cmpsb
xchg
hlt
push
out
jp
push
pop
cmc
sbb
ret
push
push
xchg
and
xchg
push
sub
xchg
or
ficoml
fbstp
repz
push
and
rcrb
in
in
pop
sahf
jmp
test
cmc
xlat
sub
and
bound
in
cltd
shl
mov
mov
jmp
daa
cli
mov
and
pop
cs
sub
sar
inc
and
xor
test
data16
js
int3
test
pop
mov
mov
jecxz
pop
pop
pushf
imul
cmp
jb
das
cmp
push
cltd
je
in
adc
or
cwtl
cld
outsb
cs
lds
xlat
popl
dec
xor
mov
fwait
and
and
adc
xor
mov
inc
lock
xor
adc
xor
dec
sti
cmp
in
inc
cltd
or
imul
mov
shlb
mov
mov
mov
sbb
bound
test
push
pop
mov
mov
sub
mov
arpl
cmp
call
mov
mov
ret
ret
mov
movsl
add
mov
sub
int
test
in
popa
pop
xchg
insl
lds
call
cs
jae
xchg
cmp
pop
mov
mov
sbb
xor
jecxz
push
lock
aad
add
jp
mov
mov
fdivr
jnp
push
sbb
pop
out
mov
call
movsb
inc
cmp
bound
or
push
push
or
jb
ret
push
repz
cmpsl
fwait
ret
bound
xlat
fisttpl
popa
sub
sar
pop
rorb
mov
inc
hlt
jbe
rorl
inc
insb
mov
movsl
mov
mov
aas
fsubl
pop
ret
insl
mov
jmp
lods
push
sahf
stos
dec
push
dec
adc
aad
pushf
adc
les
pushf
dec
cmpsb
adc
adc
pop
popf
mov
cmp
das
add
into
or
push
lret
xlat
pop
mov
into
jno
in
jmp
test
mov
pop
jmp
sbb
add
add
andb
rcrb
xchg
mov
mov
adc
inc
ja
cwtl
xlat
mov
inc
add
aas
lcall
imul
jg
inc
push
insl
cmpsl
or
hlt
jnp
dec
xchg
divl
xor
pop
xchg
dec
stc
inc
mov
bound
xor
jne
mov
cld
xchg
js
int3
pop
shlb
dec
in
sub
push
enter
je
and
notb
xor
xor
cmp
or
inc
stos
out
mov
dec
mov
and
movsl
leave
xor
pop
xor
jecxz
mov
push
sahf
jno
outsl
lods
and
dec
xchg
push
adc
jno
into
lahf
rep
aad
add
bound
movsl
scas
aas
and
adcb
sahf
mov
mov
shll
mov
loopne
jb
xchg
sbbl
ret
adc
jns
test
inc
daa
jae
and
int
repz
daa
add
pusha
in
sbb
jg
test
es
aas
sbb
push
dec
xchg
dec
std
cwtl
push
add
adc
mov
fwait
lahf
imul
arpl
adcl
flds
push
insl
jmp
call
adc
cwtl
mov
push
inc
mov
aas
shlb
loopne
xchg
movsb
and
mov
mov
sbb
mov
imul
nop
mov
mov
ret
push
cmp
clc
test
sub
jbe
add
sbb
fidivl
test
repnz
lret
loop
and
xor
mov
or
popa
nop
push
repnz
es
cld
jno
loope
sub
jg
xchg
je
dec
js
mov
dec
mov
adc
push
xchg
imul
or
mov
mov
adc
outsw
aad
outsl
fistpl
out
scas
xchg
imul
mov
stos
push
jns
dec
hlt
nop
mov
mov
loopne
jge
es
adc
sub
xchg
lea
xchg
xor
enter
inc
arpl
sahf
jae
js
cmp
jne
test
mov
out
mov
cltd
bound
lret
xchg
std
subb
or
adc
movsl
jno
cmp
jecxz
or
mov
fbld
clc
sub
push
into
xor
or
cmp
cld
cmp
xchg
mov
imul
add
mov
stc
iret
cld
pop
repz
xchg
and
je
popa
sbb
repz
xlat
mov
lods
pop
mov
repnz
cmp
dec
fcoms
repnz
bound
xchg
jmp
cmp
or
add
pop
outsb
sub
iret
and
pop
and
cmp
in
decb
int
and
int3
mov
pop
xor
fs
lods
insb
inc
cmp
jge
jb
push
es
inc
adc
cltd
std
ds
add
adc
sbb
mov
popf
arpl
ja
sbb
xlat
out
rcrl
cmp
add
dec
mov
notl
sub
aas
mov
int
pop
outsb
or
xor
out
inc
xorb
std
cld
pop
pop
ror
push
mov
stos
stos
push
int
add
ficomps
data16
and
and
adc
cltd
outsb
add
mov
push
pop
insb
cmp
adc
inc
cmp
add
insl
pop
fucomip
sbb
adc
or
mov
sbb
push
stc
mov
pop
pop
insb
and
mov
xchg
mov
movsl
mov
mov
ljmp
jno
mov
cli
out
xor
push
popa
test
ds
xchg
mov
add
aas
push
push
xchg
outsl
ljmp
dec
sbb
mov
mov
and
inc
push
sub
xadd
repnz
scas
push
mov
sub
sti
aam
cmp
push
out
popf
sbb
lret
in
arpl
cmpsl
pop
xor
clc
mov
sbb
icebp
cmpsl
inc
cmpsb
sub
bound
stc
mov
and
sub
test
jl
std
inc
mov
pop
lods
lahf
mov
inc
inc
pop
push
add
push
daa
std
clc
cmp
add
add
xor
movsb
jle
js
xchg
bound
push
jle
xor
cmpsb
test
inc
mov
sub
sub
rcrb
sbb
inc
pop
pop
pop
cltd
xor
xorb
add
mov
inc
adc
imul
mov
xor
pop
popf
xor
push
sub
jl,pn
cmpsb
mov
adc
aam
inc
outsl
pushf
enter
or
rcl
and
mov
sti
enter
clc
xor
push
inc
cmp
adc
pop
jg
dec
pusha
int3
insl
cmpsb
orb
jae
mov
cli
aaa
cmc
add
adc
jl
enter
mov
or
iret
enter
cli
sbb
into
push
loope
frstor
inc
negb
stc
cmpsb
xchg
lahf
xor
test
mov
xchg
xchg
int3
repz
testb
xchg
xor
or
lcall
jbe
fildll
cmp
sbb
cmp
inc
xchg
cltd
mov
mov
adcb
gs
int3
push
outsl
scas
stc
push
xlat
out
xlat
test
xor
adc
ret
jecxz
cltd
cmp
mov
test
jp
mov
addb
movsl
pop
outsb
cmp
stc
imul
rcrl
push
addb
dec
and
pop
arpl
repz
pop
popa
sub
rclb
xor
pop
sbb
cmpb
ds
mov
lcall
xchg
or
add
mov
push
mov
xchg
insb
xchg
mov
test
pop
xchg
lret
jae
mov
push
repnz
in
push
in
mov
dec
jl
adc
pop
jne
in
mov
test
test
jg
les
shl
lcall
scas
pop
xor
inc
pusha
cmp
push
sar
jmp
int3
inc
xor
sbb
repnz
mov
imul
hlt
shlb
inc
pop
out
adc
lds
jmp
mov
push
mov
dec
test
or
stc
shrb
je
or
sbb
jns
mov
pop
mov
pop
xchg
pop
mov
testl
inc
out
sti
inc
mov
or
pop
add
pop
adc
lret
stos
stc
jae
in
lcall
or
sbb
in
sbb
je
and
xchg
and
or
xchg
xchg
repnz
mov
push
xor
inc
pop
ss
sub
hlt
fadd
cld
scas
outsb
adc
push
andb
das
shlb
jp
cmpsl
jb
std
sbb
nop
loop
mov
fisubrs
mov
sub
adc
xchg
movsl
lods
dec
xchg
adc
sbb
lods
push
push
lret
push
inc
lock
movsb
int3
fstpl
dec
lock
call
pop
push
stos
cmp
inc
cmp
aas
inc
loopne
push
and
xchg
inc
int
lret
inc
mov
or
lret
inc
test
out
push
push
outsb
lahf
hlt
out
hlt
mov
fimuls
fbstp
popf
je
js
out
pop
xlat
lret
add
inc
push
pop
and
push
xchg
mov
mov
sub
sahf
pushf
mov
mov
mov
pop
fs
adc
adc
jbe
sub
push
xor
dec
push
stc
sbb
or
outsl
ss
imul
push
loope
fs
popf
jp
or
add
jo
test
mov
shr
mov
dec
sbb
ret
sub
je
enter
ret
pop
pop
or
sub
sub
dec
ja
rcrl
ds
iret
xor
mov
mov
test
mov
pop
jae
push
jo
xchg
ficomps
push
push
das
fnsave
push
xor
les
arpl
jo
in
out
push
dec
or
mov
sub
es
leave
pusha
jno
adc
clc
sub
mov
repz
cmp
push
mov
xorl
bound
xchg
ja
cvtps2pd
clc
js
jno
sbb
inc
in
test
fbld
mov
xor
cwtl
lock
gs
pop
insl
outsb
mov
scas
in
xchg
pop
repz
loop
repz
add
lret
pop
xchg
stc
shl
jo
lods
aad
push
add
in
fcmovb
xchg
add
pop
adc
and
call
dec
cmpsb
cli
ds
scas
clc
incb
lcall
pop
arpl
push
insl
in
popf
out
inc
clc
and
xchg
pop
cmp
lret
out
in
ret
jbe
jecxz
lods
xor
or
cmp
mov
pop
daa
cwtl
jae
icebp
push
movsb
fcoml
cmpsl
cmp
lret
add
cs
adc
pop
inc
mov
mov
enter
out
cmp
outsb
mov
push
mov
loope
sahf
es
repnz
vcvttss2si
xor
idivl
aad
je
pop
rorb
mov
clc
ja
rorl
test
lods
sub
jle
mov
mov
jmp
mov
mov
jno
loope
push
pushf
xchg
hlt
out
push
sahf
lahf
sub
mov
shlb
cmp
inc
mov
dec
push
lahf
pop
sahf
xchg
sbb
jl
add
sbb
inc
pop
pop
pop
imul
or
mov
movsl
xchg
lods
xor
ds
push
sub
loopne
jb
xchg
jmp
repz
sti
inc
add
mov
stc
xor
mov
cmpsl
xchg
outsb
in
sbb
das
push
pop
pop
mov
sti
mov
mov
or
sbb
mov
sbb
jg
ds
dec
jg
cmp
ret
mov
cmc
mov
cmp
fnstsw
pop
push
xor
shrb
mov
das
inc
sbb
or
icebp
jecxz
test
lock
xchg
decb
jns
in
mov
sar
push
cs
adc
cwtl
sbb
push
pop
icebp
sbb
cmpsl
jp
aad
loopne
dec
jnp
and
cmp
dec
idivb
cs
imul
sub
fwait
icebp
lds
add
mov
mov
mov
dec
sbb
loopnew
mov
push
addl
fs
fbld
stc
jbe
xchg
iret
scas
inc
push
mov
push
int3
dec
add
push
popa
dec
inc
push
dec
pop
or
sub
test
mov
enter
ljmp
aam
jge
nop
imul
lret
pop
fistl
pop
push
adc
dec
cmp
xor
adc
xchg
adcb
lea
out
rolb
loope
pop
adc
sti
adc
ja
popf
sbb
pop
fsubp
fndisi(8087
in
cmc
cmpsl
xchg
mov
add
outsb
aam
push
dec
in
pop
mov
insl
adc
pop
mov
std
lea
mov
push
repz
push
ret
mov
inc
pop
mov
mov
das
das
or
out
sub
out
rcll
add
insb
mov
push
test
ficoml
add
pop
mov
jno
pop
push
pop
in
xor
popf
jle
push
std
lea
lock
mov
cwtl
into
pop
pusha
push
hlt
or
cmp
cmc
xchg
inc
sti
xchg
cli
xorl
sbb
mov
xchg
loope
clc
jp
call
mov
shlb
mov
fadd
mov
in
ret
test
dec
or
cs
fnstenv
lea
lock
cmp
mov
int
dec
cld
out
outsl
jae
arpl
inc
les
push
insl
sub
mov
mov
and
adc
xor
leave
mov
push
pushf
and
scas
aas
jle
popa
and
repnz
adc
mov
pop
pop
fwait
lcall
or
lods
rol
inc
add
inc
xor
sarb
inc
insl
inc
int
mov
add
push
pop
inc
les
test
xchg
lcall
pop
adc
xlat
cltd
ja
roll
aam
fnstsw
mov
xchg
jmp
ja
insl
fnsave
stc
outsl
aas
mov
addr16
scas
adc
test
cli
inc
jp
hlt
flds
mov
or
adc
sub
xchg
subl
xchg
add
stos
adc
push
sbb
jo
add
fwait
cld
xor
cli
leave
addr16
mov
fwait
pop
ror
push
stc
mov
clc
sub
push
push
gs
lea
lret
mov
cmpsl
xchg
fwait
hlt
jp
and
icebp
rolb
mov
jp
loop
pop
lahf
stos
addb
aas
mov
ljmp
sbb
jns
es
jne
dec
and
inc
or
jmp
mov
es
adc
es
dec
xchg
or
fs
jnp
mov
std
mov
mov
lock
addr16
cmc
jne
lcall
adc
sarb
das
mov
stc
mov
iret
ret
dec
les
and
push
ret
jmp
jb
xlat
cli
and
stc
xchg
inc
aam
jae
pop
xor
repnz
mov
bound
xchg
xor
rclb
in
cmp
dec
je
fs
xchg
scas
mov
fdivrl
test
imul
imul
sbb
cmp
sub
enter
jle
adc
hlt
xchg
ret
cmpsl
mov
ja
push
les
xor
movsl
cli
int3
cld
pop
sbb
mov
mov
and
icebp
sub
in
mov
popa
ja
adc
lea
cmpsl
arpl
jle
xor
dec
lret
jecxz
mov
pop
enter
mov
aad
aas
push
aad
xchg
call
add
inc
jmp
push
pop
xor
aaa
test
mov
push
fcmovu
pop
mov
sub
and
into
sbb
mov
mov
std
or
xchg
add
mov
or
movsl
loope
sub
std
fwait
inc
scas
push
mov
dec
orl
negb
pop
xchg
imul
notb
adc
stc
daa
pushf
inc
aad
fistps
mov
dec
mov
xor
call
or
add
pop
push
inc
jmp
lock
lods
loope
repnz
pop
aaa
cmpsl
cmp
repz
jns
inc
or
or
pushf
ljmp
inc
adc
or
sbb
mov
xchg
divb
sub
fstps
pop
lret
pop
cmp
loope
les
inc
clc
xor
sub
cmp
push
fld
or
xorps
mov
xchg
insb
mov
bound
repnz
inc
rclb
clc
jns
xor
jmp
adc
in
bound
cld
adc
mov
push
push
out
pop
and
ficoml
sbb
add
fimuls
mov
aas
cld
jns
into
jno
out
lahf
sarb
gs
inc
lretw
pop
cmpsl
hlt
cltd
jg
stc
pop
aaa
fadds
or
push
sti
andl
sbb
dec
add
daa
imul
stc
xchg
push
mov
out
shlb
stos
add
jo
cmc
das
filds
repz
insl
jge
mov
cmp
xchg
cmc
push
push
jb
xchg
sub
test
loope
jl
mov
lock
push
mov
cs
pop
loop
rclb
fimull
push
inc
outsb
xchg
ja
lock
cmpsb
sub
out
and
inc
inc
int
inc
fadds
ficomps
cld
inc
or
lods
mov
cld
out
sub
xchg
pop
in
mov
push
push
les
sbb
cmp
jle
sti
push
dec
shlb
xor
ljmp
rorb
insl
inc
dec
sbb
push
ret
rclb
sub
decb
sub
inc
loop
jmp
mov
xorb
int3
int3
fldcw
sbb
ret
xor
ret
lahf
mov
push
mov
or
mov
stos
or
fiaddl
mov
adc
out
inc
xlat
pop
xor
cld
sbb
cs
jno
addl
out
sbb
xchg
mov
push
inc
dec
push
js
nopl
lret
stos
bound
pusha
dec
mov
fimull
jle
inc
sub
mov
pop
test
sub
jno
xchg
fidivrl
fxch
sti
stc
scas
neg
jnp
push
add
cli
dec
push
xchg
cmp
roll
movsb
cmp
incb
fmuls
cwtl
mov
mov
addr16
inc
dec
pmaxub
cmp
imul
ljmp
push
mov
ret
jecxz
mov
and
dec
aaa
stc
sub
xor
adc
mov
ret
lds
outsb
cmp
test
insl
jns
je
fwait
js
adc
shll
pop
jne
add
pop
and
mov
flds
cmp
aam
jo,pn
stos
dec
stos
gs
scas
and
sub
push
cld
cmp
mov
xor
ja
pop
dec
push
push
cmp
xchg
mov
addr16
mov
orb
sbb
ja
cmp
sbbb
cs
repz
ficoml
fimuls
dec
dec
paddusw
outsb
pop
ja
inc
mov
dec
xlat
clc
pop
outsl
test
outsl
mov
sti
icebp
adc
mov
cmp
pushf
dec
into
les
jae
add
outsl
repnz
mov
xor
stos
fwait
in
jl
in
fcomps
stc
xor
fsubl
jle
fs
movsl
scas
int
call
and
jge
add
es
imul
inc
push
inc
les
xor
cli
push
adc
inc
std
nop
out
mov
lcall
adc
push
in
inc
clc
rcrb
xlat
mov
movsl
outsl
pop
push
pop
mov
lods
jae
fs
cli
xor
lds
aad
sub
jb
mov
adc
hlt
sub
lods
dec
addr16
xor
xchg
hlt
cld
cld
push
shrl
xchg
jg
clc
jecxz
pop
mov
je
or
mov
stos
je
jle
lahf
xor
jecxz
pop
cmc
int
bound
mov
repnz
fmulp
in
dec
and
neg
xchg
ja
test
and
pop
ja
call
arpl
pop
std
cmpsl
sub
out
or
pop
aas
popa
adc
xchg
inc
jno
mov
sbb
xor
imul
fsubs
loope
fcoms
xor
fdivl
push
movsb
nop
add
mov
loop
scas
icebp
mov
xchg
stos
adc
mov
and
stc
aam
mov
adc
out
add
pop
lahf
mov
test
pop
cmp
push
inc
sub
push
sbb
adc
jmp
inc
movsb
or
sbb
sbb
mov
sbb
ds
add
mov
pop
push
out
push
sub
stos
aaa
xchg
jecxz
pop
es
sub
loope
push
mov
divl
pop
inc
test
sub
popa
push
sbb
dec
lret
aaa
icebp
idivl
sub
push
mov
and
cmpsb
cmp
inc
lcall
imul
pcmpgtd
adcb
inc
adc
xor
xor
outsl
xchg
cmc
pop
cmpsb
in
push
int
mov
add
mov
pop
mov
bound
push
xchg
cmpsl
lds
push
jae
lock
mov
cld
inc
cmp
ds
pop
insb
lods
inc
test
loope
mov
je
jecxz,pt
out
or
sarb
add
mov
lock
xlat
jo
fbld
inc
push
fdivl
lahf
dec
mov
jl
pop
pop
or
insb
sub
sti
sub
add
mov
cmpsl
and
cmp
leave
xor
mov
frstor
das
mov
ret
cmp
mov
add
push
faddp
ja
lahf
sbb
sub
push
in
dec
jecxz
xchg
roll
dec
pop
jb
pop
ror
or
xchg
mov
push
mov
adc
movsl
repnz
mov
cmp
xchg
scas
inc
in
or
lods
imul
push
daa
inc
out
mov
dec
imul
in
sahf
pop
std
mov
add
cld
add
cmp
test
inc
add
mov
jecxz
mov
mov
sub
push
and
shll
mov
and
mov
test
adc
pop
int
lds
stos
dec
ret
out
push
addr16
sub
movl
loop
jmp
cli
mov
fcomi
cmpsl
gs
pop
pop
and
dec
push
aaa
or
hlt
scas
mov
dec
out
into
jecxz
push
xlat
loop
adc
les
shll
sub
cmp
jns
cmp
scas
mov
xchg
sti
int3
mov
shrb
pop
fcompl
push
std
add
xor
sbb
stos
aaa
fnstenv
repz
xor
shll
fisubs
mov
xchg
pushf
les
outsb
movsl
jg
in
dec
cmp
pop
sub
push
inc
enter
cmpsl
cmp
adc
mov
inc
jmp
xor
test
and
fstl
push
pop
in
cmp
or
mov
xor
ja
jno
push
insl
xchg
pop
lcall
cs
cli
jae
mov
xchg
dec
rol
call
mov
and
pusha
push
jge
mov
sub
and
sbb
sub
mov
inc
aaa
stc
mov
sbb
jp
xchg
ss
sbb
mov
sbb
jo
out
mov
push
test
sbb
and
out
mov
mov
fwait
jns
das
pop
cmp
scas
cltd
xor
push
xchg
pop
idiv
add
lds
push
mov
jge
xchg
push
jnp
mov
aas
or
xchg
sbb
mov
mov
dec
addb
mov
xor
sub
cmp
bound
clc
add
dec
or
ss
imul
lock
es
adc
sahf
inc
pop
into
nop
repnz
or
cs
testb
pop
and
pusha
lods
sbb
sarl
int
or
movsl
outsb
std
pushf
adc
and
mov
int
test
adc
cld
outsb
pop
xor
xchg
xchg
jb
sbb
int
xchg
xlat
push
out
push
sub
adc
ret
dec
mov
and
and
stc
cmp
mov
xchg
jbe
loope
aas
outsb
inc
test
pop
inc
ds
push
das
jl
xor
mov
fnstenv
cmp
adc
aam
mov
xchg
mov
cmp
sbb
push
stos
mov
divb
aad
and
mov
imul
xchg
imul
sbb
and
cmpsb
mov
xchg
popf
xor
push
aam
lods
cltd
leave
sub
mov
jg
ret
rcr
incb
aas
rorl
test
fidivs
add
lds
sbb
fbld
pop
cs
testb
and
aam
adcl
or
sub
mov
testl
mov
mov
bound
adc
aaa
adc
add
lret
ljmp
pop
cmp
movsl
push
cmp
sbb
popa
shl
fwait
insl
lock
mov
pop
jns
clc
sarl
pop
std
push
imul
push
adc
rcrl
addb
aam
jl
cmc
mov
sub
jmp
insb
out
xchg
mov
cli
stos
and
cmp
lock
ss
negb
push
xlat
sub
add
lcall
sar
fistpl
jge
roll
jle
or
push
cmp
inc
in
rcrl
daa
dec
hlt
fs
mov
jmp
xchg
fs
out
xor
mov
ret
mov
xor
push
divb
adc
pop
mov
push
add
fadds
inc
mov
xor
in
out
jg
push
jbe
mov
jnp
wbinvd
loop
pop
adc
adc
xchg
int3
sarb
int3
lahf
cwtl
dec
xlat
outsb
or
mov
push
adc
mov
icebp
dec
xor
imul
xor
xchg
jg
push
xor
push
je
inc
sarl
cli
dec
sub
imul
fwait
inc
popf
addr16
arpl
adc
cmpl
aam
xor
or
push
lds
shlb
fisttps
test
cmp
ret
sub
mov
add
xchg
repz
pop
mov
insl
pop
mov
les
sub
pop
mov
xor
repnz
fisttpll
sub
inc
iret
repz
cmp
sub
mov
adc
repnz
adc
adc
dec
inc
loopne
fdiv
mov
cmp
push
sbb
mov
rcr
data16
nop
pop
idiv
outsb
leave
les
sbbl
std
lret
loope
fs
arpl
ljmp
pop
call
and
out
fdivr
shll
push
rorl
mov
data16
adc
mov
leave
fcos
ret
jecxz
mov
mov
int3
fsubrp
mov
sub
dec
dec
fnsave
loope
jno
or
adc
mov
daa
mov
jno
jne
repnz
lods
add
fnstenv
cmp
push
fnsave
add
inc
icebp
cmpsl
add
icebp
loop
mov
outsb
outsl
fdivr
mov
fsts
cli
jle
or
add
std
bound
or
movsl
fstps
add
imul
aaa
or
jmp
mov
xchg
nop
mov
leave
adc
jo
sbb
add
lods
push
hlt
jbe
arpl
pop
mov
push
mov
xor
sbb
push
dec
arpl
ja
adc
jl
pop
add
aam
cmp
xor
cmc
push
repz
push
in
jge
add
cld
and
out
mov
movsl
mov
xchg
into
and
sub
add
insl
stos
enter
cmc
addr16
dec
out
sbb
icebp
adc
mov
add
loop
enter
in
aam
dec
imul
xchg
mov
rcl
loop
jecxz
or
outsb
inc
push
mov
shll
out
mov
sub
pop
repnz
cmp
lods
or
outsb
dec
popa
push
daa
sbb
ja
jp
push
shll
stos
roll
adc
xchg
arpl
sbb
insl
pop
sbb
bound
jnp
pop
es
out
dec
incl
arpl
xchg
mov
lret
fdivrl
jl
push
pop
pop
and
lret
cmp
jne
mov
pop
and
shlb
cmp
pop
jle
push
mov
jmp
loopne
xchg
xchg
stc
push
cli
mov
cmpsb
xchg
adc
loopne
mov
cwtl
push
lods
cli
dec
dec
test
pop
iret
sub
hlt
cmp
xchg
or
out
lods
mov
sbb
cmpsb
fistl
mov
or
in
and
insl
xchg
enter
bound
nop
jnp
popa
aaa
sti
ret
mov
adc
xor
xor
xchg
cltd
cs
cmp
jo,pn
push
mov
jnp
mov
push
roll
data16
notl
jecxz
inc
add
and
ds
rcrb
and
push
data16
cli
push
lods
cwtl
or
mov
loop
pop
push
pop
out
fwait
loopne
lock
not
pop
push
daa
inc
adc
andl
stos
pop
test
sbb
adc
jno
aas
mov
adc
les
inc
mov
push
outsl
fbstp
orb
mov
add
jo
pop
enter
loope
pop
push
movsl
outsb
jle
cwtl
and
jmp
mov
in
testb
mull
cmc
inc
adc
popa
cmp
ljmp
jg
les
and
push
or
jmp
sub
out
mov
inc
fcomp
push
inc
sub
mov
fwait
push
fsubl
mov
adc
and
sub
outsl
pop
cmp
jo
adc
adc
add
cmp
push
test
insb
nop
int3
xchg
les
std
fildl
cs
stos
popa
shrb
out
push
mov
mov
and
ds
jb
mov
jl
subb
or
cmp
in
cmc
jecxz
pusha
imul
cmc
xchg
out
fadd
add
mov
jnp
sbb
xor
cmp
hlt
pop
inc
out
jo
gs
lods
push
dec
cmp
sub
and
icebp
xor
shll
imul
test
std
sbb
fcoml
sub
clc
mov
insb
out
pop
dec
push
push
ljmp
xlat
pop
mov
adcb
sbb
push
dec
std
aam
loopne
jecxz
pop
pop
repz
testb
bound
sub
adc
lods
cmp
les
jnp
add
lock
cmp
mov
dec
mov
or
pop
enter
lcall
xor
fdivrl
pop
ror
mov
add
dec
dec
out
mov
scas
lods
daa
cs
mov
push
push
jb
das
dec
jg
and
mov
xchg
mov
xchg
lea
push
add
iret
dec
pushf
arpl
mov
inc
mov
ficomps
clc
andl
add
xchg
fbld
adc
call
mov
adcb
fcmovne
int
into
or
movsb
test
das
xchg
loop
js
sub
test
roll
sbbl
frstor
mov
jbe
outsb
xor
sbb
lods
int3
mov
pop
icebp
out
mov
ret
pop
mov
les
pop
mov
xor
insl
xorl
and
movsb
lcall
rorb
subps
xchg
pop
push
push
mov
cmpsb
adc
test
lcall
pushf
loope
dec
mov
or
jmp
cmp
addr16
push
xor
add
out
xchg
nop
dec
ljmp
js
sbb
inc
cmp
mov
lret
test
mov
dec
cltd
or
cmpsb
dec
aam
loop
inc
adc
dec
pop
push
and
push
sub
sub
addr16
dec
and
nop
or
popa
gs
stc
xor
fildll
mov
add
popa
or
cld
xchg
faddl
sbb
insb
loopne
pop
out
lret
lret
pop
cmp
lret
mov
mov
dec
mov
cmp
or
cmpsl
sahf
in
test
xchg
dec
ret
lods
jne
shlb
push
xchg
dec
fidivrl
push
cli
mov
cld
fidivl
sbb
jmp
pop
jae
or
xchg
jg
add
mov
mov
adc
adc
mov
dec
pop
push
cmpsl
xor
sbb
mov
aas
mov
adc
inc
ret
mov
jp
mov
inc
push
ljmp
sbb
push
das
adc
pop
mov
lret
mov
pop
sub
xchg
sbb
jmp
dec
sahf
adc
sub
fnsave
lahf
into
test
jae
loop
es
lods
cld
mov
mov
cmpsl
popa
pop
mov
cmp
or
stc
dec
int3
mov
outsl
adc
and
mov
sub
mov
push
repz
or
ret
xchg
imul
sub
cmpsb
adc
push
cmp
jmp
push
and
test
sbb
push
fwait
lods
out
into
mov
bound
mov
inc
stos
add
jns
mov
in
push
fwait
push
jg
inc
and
inc
int3
pop
push
pusha
imul
adc
mov
push
jp
inc
sub
test
inc
das
dec
int3
cmp
mov
andb
out
pop
pop
or
adc
xor
dec
push
clc
ja
sarb
adc
mov
addl
add
int3
das
es
sub
and
jp
iret
jno
push
adc
dec
cli
fisttpll
sbb
inc
pop
inc
fwait
test
in
and
xor
ja
divb
daa
in
cmp
mov
lret
mov
push
js
adc
mul
xchg
jns
js
pop
sahf
mov
mov
popa
xor
ret
mov
jmp
mov
cmp
sahf
fisubs
cmpl
out
fwait
loop
cmp
dec
sahf
shlw
test
cmp
out
push
les
xor
fwait
add
push
call
sub
fs
mov
or
in
sar
pop
jne
pop
mov
lcall
cmpsl
jmp
cld
rol
adc
shlb
mov
aam
mov
lds
or
loopne
dec
sub
or
push
in
mov
inc
stc
lret
xor
push
pusha
jg
js
test
cmp
mov
aad
aaa
cmc
add
dec
stc
adc
dec
test
arpl
sub
lea
mov
sub
ja
mov
bound
inc
push
outsl
ds
dec
pop
cli
mov
inc
fistl
pop
sbb
sbb
add
sti
jp
or
repz
xchg
mov
ljmp
mov
push
or
pop
cld
mov
xchg
push
dec
push
loopne,pn
pushf
mov
mov
mov
dec
or
or
repz
pop
cmpsl
int
mov
jge
add
sbb
jg
lock
lret
fstpl
mov
ror
add
mov
dec
push
pushf
and
scas
ret
push
rolb
jae
pop
xchg
inc
sbb
inc
scas
sub
jp
jge
test
bound
inc
and
or
inc
mov
mov
add
std
insb
sbb
mov
inc
adc
icebp
into
cli
test
divb
fsubl
sub
mov
mov
dec
lea
adc
into
xchg
fprem1
cmp
xor
mov
sbbl
lret
and
lahf
push
out
xor
adcl
sbb
jecxz
xchg
jb
jbe
pop
psraw
imul
push
loop
sbb
jge
xor
call
test
scas
cmp
call
fcmove
pop
lds
dec
call
push
add
xlat
jl
iret
in
movsl
add
lea
ret
lods
cltd
and
jmp
push
push
sbbb
sahf
lahf
nop
scas
enter
test
jl
push
inc
mov
in
sbb
jmp
fwait
enter
xchg
adc
cltd
dec
push
or
arpl
test
sub
mov
int3
outsb
clc
add
movb
sub
jg
das
push
sbb
cmc
dec
add
ss
xchg
or
stos
adc
xchg
mov
push
xorl
ja
mov
xor
dec
fimuls
or
xor
sbb
jo
push
mov
mov
adc
stos
pop
cmpb
addr16
fwait
out
scas
jmp
daa
pop
sbb
xchg
daa
movsb
and
addr16
jp
loope
add
sbbl
sahf
lock
jecxz
add
mov
lret
sbbl
xor
inc
jb
dec
mov
mov
lahf
pop
adc
popa
jmp
int3
xchg
loopne
loopne
mov
mov
cmp
fwait
push
jne
push
imul
fldl
xor
imul
adc
jbe
test
orl
cmc
test
fcoml
push
iret
xor
pop
je
mov
sub
fs
jb
sbb
push
enter
out
je
push
rcll
jnp
adc
cltd
push
fsubl
outsb
mov
sbb
inc
dec
ror
xor
fsubs
es
ds
push
stos
fdivrp
mov
out
inc
mov
fs
mov
int3
jns
push
mov
mov
pop
lret
bound
push
mov
subl
mov
or
fs
divl
addb
mov
dec
push
mov
ret
cmp
outsl
fdivrl
mov
addr16
stc
sub
mov
loopne
aad
and
xor
xchg
lods
dec
mov
lds
push
lea
xchg
push
andb
xchg
xor
jns
mov
popa
xlat
sub
int3
loopne
fisubl
dec
push
push
mov
push
mov
mov
and
dec
dec
stos
jns
mov
test
fldln2
stc
push
mov
add
ret
jg
lahf
lret
jb
cmc
sbb
cmpsl
int
adc
addl
dec
pop
scas
cmpsl
shrb
mov
ja
pop
pop
push
add
and
mov
cmp
cs
rolb
pop
shlb
add
xchg
sti
loop
leave
mov
jnp
popf
dec
jle
sbb
dec
sub
fistps
dec
out
adc
sbb
adc
lcall
aad
or
push
fstpl
xchg
fwait
dec
lods
jecxz
mov
aad
mov
ret
jns
roll
push
xor
inc
sarl
mov
incl
inc
pop
shrb
int3
or
fsts
xchg
push
mov
dec
cmp
pop
insb
xchg
dec
pop
cmpl
mov
mov
add
arpl
dec
adcl
sub
sbb
sbb
ja
es
out
stos
ret
pop
push
stos
push
sti
lahf
xor
loopne,pn
pop
lock
add
or
mov
stc
lea
icebp
rol
cwtl
lods
xor
push
aam
rcr
mov
jne
test
mov
fildl
sub
inc
stos
add
mov
mov
xchg
sbb
aam
loop
iret
push
test
test
loop,pn
fwait
xor
and
pop
add
repz
bound
cwtl
xor
or
mov
cmp
daa
das
aas
test
je
divb
xchg
push
cmp
inc
sbbb
xchg
cmp
jbe
mov
mov
lret
mov
leave
and
fstps
mov
jb
ret
and
movsb
in
sub
push
add
je
cmpb
mov
cmc
push
aas
imul
dec
cmp
xor
stc
push
leave
inc
daa
add
push
je
notl
mov
mov
jnp
or
sub
pop
test
lock
ret
repnz
mov
mov
mov
cs
mov
fidivrl
jp
int3
mov
pusha
xor
popa
xor
fimuls
das
push
aas
push
sbb
rcll
cmp
imul
xor
pop
push
movsl
test
push
push
adc
std
xor
inc
ja
out
cmp
inc
mov
and
ret
jp
jmp
or
pushf
js
cmp
add
cli
das
xor
jmp
or
roll
cwtl
dec
fdivs
cwtl
adc
add
scas
xor
rcll
push
mov
lret
xchg
dec
insl
test
fbld
mov
inc
dec
stc
inc
inc
das
mov
pop
lock
add
shl
adc
aam
pop
dec
and
mov
cmpsl
es
xchg
xchg
push
scas
and
data16
mov
add
addl
loop
aas
loopne
lods
or
jecxz
fistpl
sbb
in
into
rcrl
lret
xchg
jmp
call
jmp
sub
pop
loope
dec
adc
inc
cld
or
xorb
fcom
jle
pop
test
add
push
fucom
or
stos
shll
sub
loopne
data16
popa
pop
std
inc
sbb
js
je
or
jae
loop
or
push
aaa
hlt
mov
lret
movsb
xchg
and
adc
addl
xchg
dec
sub
or
movsl
mov
inc
pop
adc
jmp
imul
sbb
in
push
xchg
xor
aam
mov
rorb
xor
lea
jns
jge
push
dec
push
outsb
push
gs
pop
test
loop
std
out
mov
jno
cmp
loop
leave
jg
xor
and
add
mov
add
mov
sub
push
pop
arpl
jmp
aam
push
add
pop
ret
gs
ret
cmpsl
sti
in
cmp
sahf
dec
repnz
cmc
xchg
or
mov
test
or
bound
lcall
test
enter
inc
dec
jno
pop
icebp
repnz
data16
je
and
xchg
mov
je
outsl
insl
or
mov
pop
jns
sub
fistl
movsb
movsb
repnz
pushf
pushf
jb
negb
cwtl
subb
nop
xor
mov
scas
sarl
pop
xor
lahf
out
sbbl
nop
mov
add
inc
xlat
xchg
adc
leave
sbb
xor
xchg
xchg
push
xchg
mov
mov
sub
mov
xchg
inc
mov
movsb
mov
adc
cld
sbb
cmp
test
xchg
fists
lahf
push
jecxz
adc
push
subb
cmpsl
adc
sub
out
xor
je
mov
mov
rcrl
jmp
cmp
inc
dec
jg
dec
mov
pop
or
mov
mov
hlt
aad
mov
lock
negb
add
fnstcw
dec
out
push
mov
sbb
jmp
push
add
cmpl
jne
cltd
mov
push
rorb
js
add
je
stc
rep
jb
in
push
mov
sub
jae
and
fstpl
in
push
mov
fcompl
add
pop
cmp
lret
xchg
fdivp
xchg
aaa
cmpsb
and
adc
xchg
lods
lahf
dec
ss
xlat
xor
add
or
aas
enter
imul
mov
fs
and
xchg
mov
push
adc
xchg
push
sub
mov
mov
mov
loope
sahf
cmp
sub
xor
lods
cltd
and
pushf
lahf
shlb
repz
mov
push
sbb
jns
mov
ret
test
sub
sahf
imul
pop
push
iret
popf
rorl
sub
jge
mov
add
dec
outsl
sub
mov
ja
push
bound
imulb
inc
inc
sti
xchg
sub
jmp
adc
mov
cld
sub
cmp
xor
ss
lods
in
cmp
das
push
lds
enter
test
repnz
imul
iret
ret
jns
cmp
enter
xchg
pop
adc
dec
int3
test
dec
ja
insl
add
xor
push
fisubl
sbb
js
sub
and
out
xor
xor
loopne
sbb
pop
push
dec
add
push
addr16
test
cltd
dec
xlat
jnp
cmp
dec
mov
xchg
test
xchg
pop
stc
add
psubsw
je
mov
lods
in
daa
xchg
iret
ss
add
lds
add
mov
rol
mov
push
xor
pop
clc
aas
fs
adc
sbb
or
sub
enter
repz
ja
rolb
call
stos
adc
cli
fdivrl
cmp
loopne
scas
jge
cmp
test
cwtl
push
and
aaa
push
mov
sub
xchg
jg
sarl
add
clc
fildl
movsb
ss
pusha
mov
test
imul
subl
aaa
loopne
xchg
sbb
fmuls
hlt
xor
cmp
jae
leave
cmp
inc
dec
and
push
cld
stos
nop
mov
imul
inc
call
test
hlt
test
inc
cmc
rcr
sub
dec
or
add
movsl
popa
int
mov
sbb
daa
and
daa
jle
scas
scas
xchg
sbb
lcall
push
hlt
cmp
dec
cwtl
mov
aad
inc
fildll
inc
xor
dec
pop
in
xor
insb
inc
dec
sahf
clc
test
or
xchg
dec
dec
push
pop
push
sub
inc
pop
add
int
test
decb
inc
mul
stos
sub
div
popf
ffree
test
cmp
xchg
std
jns
icebp
addb
push
mov
cli
fcmovu
jne
cmp
mov
mov
mov
inc
imul
xor
add
xorb
dec
and
popf
cmp
sub
inc
stc
dec
cmp
cmc
lea
pop
pop
aas
inc
xor
out
sub
data16
sbb
jbe
jmp
add
xor
cltd
iret
mov
lods
fwait
mov
in
outsl
xor
jg
daa
test
add
in
popa
cmp
sub
xchg
dec
mov
fwait
fmul
pop
dec
addl
repz
movsl
pop
push
push
xchg
inc
jmp
ja
lcall
and
aam
sbb
jecxz
or
fsubrl
and
push
and
bound
mov
pop
jle
bound
test
sub
push
nop
dec
cwtl
call
shrl
mov
dec
push
sub
cmp
imul
or
lods
adc
or
ljmp
push
dec
push
out
inc
add
add
test
loop
mov
xor
inc
inc
add
push
mov
jp
xchg
mov
out
push
rolb
and
mov
orl
sar
jnp
inc
sahf
cltd
fcompl
lods
movsb
mov
insl
pop
or
jne
movsl
inc
and
mov
jge
jne
pushf
push
sbb
fwait
orl
pushf
div
mov
xor
dec
mov
xor
lret
xlat
mov
dec
sbb
ret
fists
hlt
leave
inc
rcrl
cmp
mov
movsl
push
inc
testl
test
push
cmp
ss
jo
int3
outsl
push
jbe
call
mov
mov
add
outsl
xchg
sub
sahf
popa
pop
cmp
inc
inc
pop
pop
inc
mov
dec
loopne
adc
popf
xor
xchg
rorl
imul
adc
lcall
popa
test
mov
idivb
cmp
jae
push
dec
or
xlat
int3
test
hlt
pop
cwtl
mov
pop
shll
js
add
or
outsb
and
popf
std
rclb
xchg
xor
dec
push
pop
pop
arpl
mov
addb
push
out
push
adc
out
cmpsl
cs
xchg
cmc
push
push
stos
mov
mov
lahf
mov
loopne
cmp
pop
sbb
sbb
icebp
out
or
jmp
out
mov
adc
dec
clc
fnstenv
lcall
pop
mov
cmpsb
imul
cmp
lods
mov
sbb
adc
clc
jae
xchg
and
imul
jo
add
mov
cs
scas
aaa
dec
cmp
rcrl
mov
mov
mov
jmp
mov
xchg
xor
jns
or
sti
adcb
std
lcall
outsl
mov
lcall
je
orl
mov
ror
sbb
push
rcrb
mov
notb
inc
out
mov
test
pop
bound
int
and
enter
ljmp
fadds
pop
js
arpl
mov
and
xor
mov
mov
aas
pop
add
dec
test
jecxz
mov
mov
arpl
sub
add
inc
jecxz
fnstsw
jns,pt
test
mov
lcall
add
daa
pop
faddl
pop
jl
cmp
adc
inc
mov
or
adc
aas
dec
shr
cmp
pop
and
xchg
in
pushl
js
sbb
pop
cmp
sahf
dec
scas
enter
mov
cmpsb
sbb
movsl
pop
push
movb
push
xor
sahf
test
push
andl
divl
mov
xor
fldt
loope
mov
sbbb
lahf
inc
add
cltd
dec
sbb
mov
mov
sbb
insl
stos
cmp
mov
lods
loope
fs
insb
notb
adc
pushf
xchg
mov
inc
adc
mov
xchg
xchg
or
sub
lock
aad
fucom
cltd
add
push
mov
test
push
xor
int3
or
pop
pop
pop
test
test
sub
mov
cmp
rcrl
jl
xor
cmc
cmc
js
add
mov
mov
xor
mov
mov
int
imul
push
jb
ja
psubd
push
inc
mov
cmp
rcll
xor
sahf
sub
inc
add
fadds
mov
iret
sub
in
cmpsb
mov
xchg
fstl
sbb
jmp
mov
idivb
sub
sarl
fldl
mov
cld
je,pn
or
lret
cwtl
out
jo
jnp
sbb
cmp
jnp
cmc
push
push
sub
push
dec
add
aas
push
sbb
pushl
or
xor
cmp
cmp
cld
jne
es
xor
or
mov
cli
add
push
dec
xchg
push
pop
inc
xlat
lods
lcall
xchg
ds
and
dec
sbb
cvtps2pi
nop
cmp
pop
movsb
jmp
jl
lret
repz
sub
push
stos
call
dec
loope
push
in
pop
jae
cmpsb
mov
adc
pusha
and
mov
sbb
loopne
dec
xchg
mov
dec
cmp
jno
push
inc
xor
cmp
xchg
jmp
jmp
push
ljmp
idiv
ret
inc
xor
xchg
pusha
push
iret
arpl
stos
mov
icebp
mov
mov
lock
xor
sar
es
pushf
mov
xchg
jl
lcall
addb
push
in
cmc
jge
in
loope
add
dec
daa
cld
lea
jmp
test
xchg
inc
ror
adc
push
test
xor
jl
xchg
mov
test
cwtl
mov
pop
push
and
or
jmp
test
lock
mov
xlat
pop
dec
jns
cmp
shlb
mov
out
xchg
fwait
sbb
mov
mov
lret
push
mov
jbe
push
push
mov
ficompl
adc
and
push
jbe
int3
and
das
jg
sub
sahf
inc
jb
movsb
sahf
dec
jmp
jb
mov
loopne
dec
jno
xor
fld
or
inc
mov
fwait
cwtl
adc
mov
stc
in
push
insb
jp
out
pop
aas
or
movsl
or
addr16
out
mov
test
pop
int
in
imul
push
aas
mov
repnz
sahf
jno
inc
lahf
adc
shlb
jns
or
or
or
outsb
adc
stc
js
ss
lahf
cltd
jecxz
decl
mov
sbb
jp
popa
mov
adc
pop
sbb
popf
or
jl
mov
or
dec
sub
and
xor
insb
aad
fdivl
mov
aas
test
in
adc
aam
out
inc
popf
pop
push
ret
push
pop
mov
push
int3
nop
out
pop
int3
add
fimull
jecxz
add
sbb
fcmovb
insb
push
inc
pop
mov
dec
adc
gs
scas
dec
movsl
icebp
cld
je
cmp
mov
repnz
subb
rolb
test
inc
bswap
push
mov
out
xchg
jp
pop
push
adc
adc
sub
or
sub
scas
inc
arpl
inc
or
lods
adc
lcall
and
imul
mov
call
xchg
or
fstp
push
rorb
out
lret
repnz
and
call
inc
inc
dec
or
xchg
jne
movsb
icebp
jne
pop
cltd
and
jne
movsl
cmc
mov
xor
fisubrl
xchg
mov
cmpsb
shl
adc
pop
imul
test
dec
jns
test
jle
cmp
xor
and
fcmovnu
and
sub
es
outsb
xor
fsubr
rcr
xchg
addr16
push
xor
pop
fiadds
jo
add
dec
divl
ficompl
nop
xor
lods
je
insl
xcrypt-cbc
cmpsl
push
nop
add
push
pop
or
loope
lock
sbb
mov
add
sahf
mov
pop
mov
cmp
call
adc
rcll
jge
inc
xchg
das
mov
inc
mov
or
dec
sub
push
negb
push
outsl
xor
pop
xchg
out
pop
call
or
jle
pop
mov
lds
sub
pop
jecxz
movsl
sbb
je
pop
les
push
repz
lds
fisubrs
mov
ret
stc
xchg
daa
mov
sti
jbe
dec
por
or
dec
sar
cmp
jp
pop
cld
fcoml
vunpckhpd
int3
mov
mov
lcall
imul
and
inc
std
leave
mov
sub
pop
dec
inc
mov
subb
mov
jmp
loop
mov
lahf
pop
and
push
aaa
push
inc
lock
pop
jmp
jnp
popf
sahf
pushf
cmp
sub
push
pusha
icebp
stos
xchg
lret
inc
inc
lret
mov
popa
aam
or
js
push
xor
dec
xchg
and
fstpt
data16
sarl
outsl
ja
xor
pop
jle
divb
ret
cli
sar
mov
outsb
jg
test
mov
aam
aam
dec
fisubrs
jae
or
push
xor
push
push
es
adc
fdivrl
jl
inc
in
mov
sub
mov
add
sub
push
add
test
xchg
push
xchg
mov
cmp
in
sti
inc
dec
dec
mov
add
loop
push
dec
es
cld
xchg
je
ljmp
sub
sti
push
fidivrs
jae
ret
aad
inc
fildll
lahf
dec
orb
insl
sbb
cmp
sbb
cmovg
pop
sarl
push
fsubs
cmp
inc
mov
cwtl
addr16
negb
cmp
pop
lcall
insl
imul
xor
jne
xor
cmpsl
pop
jns
jne
cmpsl
xor
out
pop
pop
add
mov
cld
adc
mov
fldcw
clc
jmp
mov
mov
idivl
xchg
jmp
je
out
dec
pushf
insb
or
dec
data16
ret
loopne
in
jno
pop
mov
push
xchg
pop
push
lds
repz
push
jmp
mov
mov
pushf
sub
int
leave
ss
aaa
sbbl
scas
ljmp
cmp
rclb
sarl
inc
lcall
ss
mov
aad
fucomi
sub
sbb
leave
fisubrs
lret
cmp
add
sub
xchg
xchg
jge
jecxz
push
ja
or
scas
xor
jne
mov
fsubrl
cltd
rcll
lret
dec
xchg
aad
pop
mov
hlt
sbb
cmpsl
aaa
test
enter
cs
sub
or
or
into
sbb
cmp
fcmovnb
push
jns
mov
aam
mov
insb
xor
push
inc
jg
mov
adc
sub
dec
xor
jge
or
add
inc
orb
add
scas
sbb
pop
test
add
cmp
cld
mov
jno
cs
mov
push
xchg
imul
push
in
pusha
cmpsb
cmp
inc
out
mov
bound
or
xchg
sti
or
repnz
dec
gs
jmp
jo
dec
or
cs
inc
jno
xor
mov
pop
or
addr16
das
into
mov
sub
push
mov
sub
push
out
pop
cmp
xor
mov
pushf
insb
or
mul
jmp
rcll
adc
add
jmp
inc
loope
and
dec
jae
sbb
mov
mov
cmp
mov
dec
clc
push
pop
or
pop
mov
cmp
scas
cmp
mov
test
decb
in
mov
scas
ja
je
inc
or
adc
ljmp
and
jo
add
test
sbb
insb
inc
add
mov
cmp
pop
popf
push
aaa
pop
fcmovnu
fstpl
cmp
jo
arpl
ficoms
in
sub
cmc
mov
and
hlt
test
test
scas
push
test
fidivrs
mov
fdivp
cs
push
imul
or
mov
movsl
clc
jl
les
lds
bound
inc
bswap
in
insl
lahf
push
cmc
cmp
addb
pop
movsb
push
insl
addr16
fdivrs
outsb
or
ret
loope
sub
ss
jo
xchg
rclb
iret
hlt
adc
mov
add
es
mov
xchg
cmpl
add
shl
punpckldq
cmpsl
shl
mov
cmp
mov
mov
dec
pop
fldt
mov
call
dec
dec
mov
rdmsr
xchg
int
fstps
leave
mov
out
es
aaa
xchg
gs
jns
scas
jmp
sbb
sbb
leave
adc
sub
add
scas
ja
in
push
jns
dec
sbb
push
lods
adc
ja
push
xchg
mov
out
movsl
pop
sbb
dec
loopne
lret
mov
popf
lock
adc
jns
mov
iret
dec
dec
inc
pop
or
pop
push
or
adc
fcmovnbe
jo
mov
pop
cmp
mov
jb
fwait
nop
lods
or
rorl
ret
arpl
rolb
iret
addl
rcrb
lods
mov
test
insl
scas
jmp
sbb
scas
out
pmullw
inc
ljmp
out
sbb
pop
shlb
dec
hlt
mov
fbld
repz
mov
cltd
dec
mov
aad
and
dec
outsl
jmp
sbb
imul
test
add
and
popf
cmpsb
and
sbb
imul
stos
frstor
mov
xorl
bnd
fimull
pop
push
push
aam
subl
pop
aas
in
outsl
movsl
bound
aad
mov
aaa
sub
into
mov
outsb
or
in
mov
mov
or
mov
or
cli
outsl
jp
push
and
in
nop
xchg
sbb
gs
ret
movsb
and
gs
stos
insb
lret
lds
popf
fstl
and
cltd
mov
inc
and
xchg
pushf
not
mov
fldcw
out
add
mov
ds
movsb
sub
push
xor
mov
sti
mov
mov
xchg
call
push
mull
mov
pop
das
pop
or
sub
fdivr
add
xchg
ret
xchg
cltd
mov
xlat
mov
jg
dec
pop
fdivr
into
and
mov
dec
fisubs
pop
fldl
popf
shr
push
xor
popl
mov
mov
outsl
arpl
aad
push
add
test
mov
movsl
and
ret
lods
movsl
addr16
mov
pushf
push
aam
in
leave
lock
xchg
mov
je
xor
push
adc
jmp
pop
dec
ss
imul
pop
pop
loopne
sbb
sub
mov
sub
cmpsb
cmc
inc
sbb
loopne
pop
xor
in
cli
mov
inc
adc
adc
xor
jecxz
dec
mov
jmp
mov
fwait
stos
inc
aas
add
push
in
ss
aaa
jle
lahf
inc
push
dec
push
pop
dec
dec
xor
popf
aad
jbe
mov
pop
pop
data16
subl
mov
cmp
js
imul
mov
xchg
int3
dec
rcl
cld
mov
xor
inc
and
add
or
cmpsl
pop
jbe
add
inc
pop
mov
scas
dec
jecxz
push
int3
lea
lcall
bound
subb
fs
int
inc
mov
testl
cld
push
xor
sbb
pop
adc
pop
pop
lods
cmpsl
inc
cmp
xor
jmp
lahf
fmuls
rcrb
xor
adc
jge
xor
inc
jecxz
aaa
add
nop
cmp
pop
and
inc
dec
subb
outsl
sbb
test
mov
testb
lcall
dec
sub
sbb
sbb
push
lods
roll
xchg
push
jnp
hlt
enter
int
test
scas
ds
dec
imul
pop
mov
bound
mov
idivl
adc
ljmp
jne
ja
mov
fs
insl
or
sub
sbb
call
cmpsb
pop
lea
enter
loopne
or
adc
cltd
je
inc
insb
or
mov
orb
fstpt
popl
xchg
jp
sbb
fstpl
jbe
add
sub
adc
icebp
adc
stos
out
das
lcall
add
add
call
pop
push
imul
dec
subb
sub
mov
fldenv
and
cltd
mov
push
das
jnp
mov
inc
jmp
push
sbb
sbb
jo
fdivrl
jne
in
and
pusha
pop
xor
icebp
scas
cwtl
insl
gs
lahf
pop
inc
jns
testb
rcl
lret
jge
mov
mov
enter
xchg
int3
mov
lcall
js
mov
les
lcall
mov
inc
mov
sub
shl
test
lret
imull
popa
mov
adc
push
ror
outsl
insb
leave
repnz
call
or
cltd
xor
pop
cmpsb
pushf
ljmp
dec
sbb
lods
outsb
jns
cwtl
xchg
loopne
pop
out
fistps
inc
insl
mov
sub
adc
dec
push
cmpsb
sbbb
addr16
cmp
adcl
push
jbe
pop
jmp
jb
mov
mov
mov
sub
inc
jnp
test
pop
leave
movsb
mov
in
mov
out
dec
in
ljmp
push
mov
mov
jle
xor
mov
inc
mov
movd
rcr
popf
jge
gs
jno
xchg
add
mov
fcomps
cmp
imul
jbe
mov
loope
adc
xchg
sbb
arpl
jne
pop
adc
xchg
cmp
jns
loop
pop
data16
shl
xchg
repnz
inc
jmp
jae
xor
add
cmp
inc
pop
lock
ds
mov
loopne
sahf
movsl
gs
jbe
inc
mov
insl
stos
fidivrs
xor
pusha
sti
gs
imul
mov
jnp
test
pushf
addl
lret
imul
stc
fstp
xor
jg
lcall
jle
movsb
mov
mov
cltd
in
cmc
cltd
je
fdivl
push
ret
jl
std
cmp
jp
sub
repnz
jmp
negb
ja
inc
les
movsb
jg
xchg
bound
test
stos
jl
fwait
xchg
jbe
or
inc
xchg
mov
pop
or
xor
pop
imul
mov
dec
stos
aam
pop
arpl
jb
push
pop
rorl
scas
pop
sub
jbe
adc
mov
insl
nop
jmp
add
lcall
int3
dec
inc
dec
adc
xor
stc
jg
pop
xchg
push
ja
sub
jbe
jae
sbb
mov
jmp
imul
lods
adcl
xchg
sarl
jp
sbb
daa
pushf
xchg
xchg
fadds
pop
push
icebp
inc
shll
sbb
or
jb
adc
pop
js
nop
mov
push
enter
jg
add
mov
dec
jbe
jmp
aas
lret
jbe
hlt
jge
adcb
mov
arpl
xchg
xchg
lods
pop
adc
inc
pop
push
add
xor
repz
mov
cmp
and
mov
sbbb
scas
ljmp
sub
insb
and
into
testl
in
pop
in
shr
insl
mov
jle
fdivs
and
push
dec
jnp
xorl
and
loop
dec
and
lret
xchg
and
adc
mov
je
movsb
inc
scas
mov
push
imul
flds
add
jmp
mov
movsl
push
push
add
push
icebp
add
sub
sbb
fsubrs
mov
fimuls
push
loope
es
addl
add
popa
add
arpl
pop
mov
mov
lcall
add
sbb
int3
or
lds
sub
in
push
jmp
in
pop
outsl
in
adc
push
jo
pop
and
cli
subl
out
cmp
scas
pushf
xor
test
sub
mov
and
testl
sarb
xchg
mov
pushf
mov
jecxz
sub
cltd
ss
lods
leave
inc
push
inc
cmc
mov
cld
imul
cmove
xchg
inc
mov
mov
adc
pop
clc
xchg
ret
lcall
movsl
xor
mov
mov
sbb
lcall
dec
xchg
enter
push
fistpll
daa
xor
jns
and
mov
adc
push
jge
xchg
shll
add
cltd
into
jge
fbld
sbb
add
insl
aam
push
daa
jl
daa
int
mov
and
or
push
icebp
lcall
xchg
bound
push
xchg
arpl
popf
popl
lea
inc
sub
push
insl
mov
xchg
ret
std
adc
dec
shr
xor
inc
mov
sbb
popa
pop
ja
dec
lods
adcl
lcall
stc
popa
test
outsl
jb
xchg
xor
mov
add
rorb
mov
out
lea
mov
out
sub
mov
sarb
bound
fs
add
xchg
loopne
aad
in
sbb
ss
lret
mov
daa
lea
add
mov
mov
xchg
pop
in
loop
andb
ret
popa
cwtl
flds
cmc
hlt
jge
jp
dec
sub
jns
fistpl
fistl
push
add
xchg
or
scas
movsb
dec
les
out
mov
cmpxchg
sub
nop
arpl
outsl
jp
inc
pop
sub
sub
xor
mov
out
or
rorl
add
mov
mov
inc
sti
lret
cmp
sbb
test
daa
test
cmpsb
or
test
inc
sub
sub
insb
inc
mov
stos
mov
in
mov
outsb
int
push
and
test
mov
lock
loope
pushf
sbb
mov
mov
mov
lods
mov
leave
movsl
lods
add
jo
cmp
aas
mov
jnp
ja
cmc
xor
test
js
inc
pop
roll
sbb
inc
scas
ja
jo
mov
int3
addr16
aaa
mov
mov
fwait
jns
inc
aad
cmc
cld
bswap
sbb
jmp
dec
jle
cmp
add
cmpsb
xchg
out
dec
mov
mov
cld
pop
out
dec
sar
adc
xor
jmp
aas
dec
neg
imul
and
push
add
mov
and
add
jns
sbb
xchg
shrb
xchg
sub
cwtl
pop
inc
inc
cmp
imul
push
orps
xor
les
je
cmp
cmp
fisubs
sbb
xor
popf
inc
adc
sti
adc
mov
out
clc
scas
jb
mov
lahf
or
jle
out
jp
dec
adcb
andl
mov
sub
mov
add
out
loopne
cmpsb
jle
out
pop
loopne
mov
in
and
lea
mov
push
in
fidivrl
aad
rcll
cltd
jg
popf
ja
dec
loop
and
andb
divb
out
sub
pushf
outsb
test
adc
loopne
dec
in
push
jecxz
xchg
cmp
out
leave
outsb
js
mov
cmp
push
mov
test
push
and
adc
lret
push
adc
inc
cs
dec
jp
inc
add
sub
push
roll
jae
push
xchg
jmp
sub
pusha
push
es
cmp
xor
pop
lods
push
addb
fs
jp
fwait
dec
mov
shrb
push
mov
xlat
mov
fiaddl
dec
sti
test
outsl
xor
and
xor
sub
lods
sbb
jecxz
test
ss
mov
repz
and
mov
xchg
les
jg
sub
xor
mov
arpl
cmp
jae
inc
mov
mov
pop
mov
cmc
call
add
fcoms
subb
scas
aaa
jne
icebp
jecxz
std
xchg
xchg
ljmp
imul
xchg
dec
loope
jno
push
int
xor
or
nop
adc
pop
jb
fs
mov
xor
mov
pop
xor
adc
adc
fsubrl
gs
in
fnstsw
test
call
pop
inc
inc
movsl
add
fistps
sbb
and
adc
sbb
cmp
pusha
ret
add
push
mov
cmp
sbb
xchg
pop
pop
jbe
das
mov
fnstcw
mov
rorl
in
lds
push
sub
negb
pop
clc
shlb
pop
test
cltd
popa
mov
clc
stos
jo
cli
mov
jecxz
mov
fcomi
fdivrs
mov
sbb
out
add
popf
iret
lods
movsb
push
dec
jmp
dec
sbb
inc
dec
jae
fcmovu
mov
sti
nop
inc
push
outsl
add
bound
fsubl
shrl
loope
stc
lcall
insl
pop
push
push
or
int
inc
add
sub
mov
aaa
addr16
xor
test
sbb
lahf
pushf
rol
cmp
push
dec
repz
ja
push
pop
mov
push
subb
outsb
xchg
icebp
repz
nop
jns
adc
or
decb
and
inc
outsl
enter
adc
pop
adc
add
cmovg
adc
lahf
lcall
xor
into
int
stos
mov
push
xor
sbb
jmp
pop
fcompl
fstps
inc
aam
adc
dec
nop
repnz
addb
mov
mov
ret
fistpll
out
rcrl
and
fnsetpm(287
fildl
adc
jge
pop
xorb
sub
mov
push
add
sti
pop
cmp
ror
inc
push
ret
ljmp
lret
sar
lret
lcall
cmp
popf
xchg
sub
fdiv
pop
pop
mov
xchg
inc
pop
xor
mov
mov
jmp
pop
cmp
and
mov
mov
xchg
fwait
and
mov
jae
stos
rolb
rcrb
daa
sbb
push
push
cmovbe
pusha
mov
push
out
sbb
push
lods
addl
popa
sarl
jl
mov
pop
hlt
inc
add
std
inc
xorl
fldt
mov
aas
addr16
int3
je
stc
lret
inc
test
and
add
mov
push
clc
xor
repz
sub
daa
dec
jl
mov
pop
test
jae
pop
and
fsubrp
gs
mov
lock
cltd
mov
lock
out
push
or
jbe
mov
and
mov
in
push
loop
int3
mov
into
out
addr16
das
push
push
and
insb
dec
push
clc
test
ret
ss
gs
mov
outsb
lods
cwtl
outsb
in
mov
int3
add
data16
ret
stc
adc
movsb
int3
xchg
push
scas
inc
pop
les
faddl
and
loope
ss
push
cmp
movsl
mov
sti
or
or
cmp
roll
stos
or
xchg
xor
xchg
lods
push
popw
inc
mov
stos
fsubrs
es
setge
and
inc
and
mov
pop
mull
clc
dec
add
lods
jecxz
call
js
pop
inc
addr16
jp
pop
iret
scas
push
cmp
pushf
dec
mov
jmp
and
mov
adc
add
pushf
mov
leave
jbe
das
les
dec
cltd
mov
shll
dec
jo
call
push
sti
je
cmp
xchg
call
das
mov
adc
fsubp
fmuls
ret
test
cmpb
rol
adc
divl
sbb
das
in
mov
sbb
cmp
fdivs
fidivs
push
insb
aaa
mov
inc
jp
fistpll
add
loop
les
insb
jmp
sub
mov
jp
call
mov
dec
or
cmp
or
mov
sti
cmp
in
mov
imul
and
gs
jns
jo
icebp
add
addr16
jno
inc
jmp
and
dec
mov
mov
loop
arpl
inc
repz
sub
xchg
and
mov
push
stos
int
pop
push
ficompl
pushf
shrb
movsb
jge
idivb
stos
add
ljmp
loop
inc
arpl
fnstsw
lret
loope
adc
xchg
jle
jle
in
in
faddl
xor
push
push
loopne
xlat
fwait
add
xchg
push
adc
ss
sub
inc
push
cmpsb
lcall
pop
xchg
out
xchg
sbb
mov
ljmp
int
or
lds
insb
out
jae
es
pushf
ss
out
cmp
sarb
cmp
inc
adc
lea
in
call
pop
dec
cs
pushf
ja
push
les
int
decl
cmp
cmp
dec
jle
adc
filds
push
cmp
cmpb
lods
js
push
ret
add
adc
sbbl
cmp
xor
pop
ficomps
pop
mov
in
jbe
sti
xchg
jmp
mov
fsincos
into
testb
lea
jl
sbb
xchg
outsl
repz
xor
mov
fstl
cli
cmp
dec
lcall
test
ja
or
sbb
cmc
nop
mov
jno
incl
mov
hlt
fiadds
jge
cld
fistpll
sarl
lcallw
cltd
xor
mov
loop
sbb
ja
xor
or
adc
inc
xchg
dec
lock
xchg
fnstcw
lods
cltd
xor
and
ficompl
test
jnp
xchg
xchg
es
cltd
cmp
loopne
mov
xor
sti
cmp
test
fists
dec
and
cmp
mov
fwait
imul
ljmp
add
cld
lcall
mov
mov
xor
ljmp
push
faddl
cmpsl
cld
cli
jecxz
inc
adcb
hlt
inc
cs
test
dec
cwtl
push
cmpsb
lcall
xchg
popa
xorl
cmp
pop
movsl
jbe
aaa
jnp
test
mov
dec
pop
or
rcll
and
je
lods
push
ja
xchg
push
out
test
mov
push
push
push
xlat
repz
pop
out
push
aad
sub
cmp
sub
movsb
test
adc
cmp
lcall
add
sbb
sbb
stos
aam
mov
mov
mov
int
fdivs
jg
mov
incl
and
lock
mov
dec
jae
fwait
push
lods
lcall
add
out
fcomp
dec
mov
or
dec
sbb
movb
push
inc
cmp
aad
cmpsl
jmp
fldt
or
les
out
scas
iret
imul
jns
das
enter
mov
add
mov
cmp
in
imull
loope
lcall
push
pop
sti
mov
cmc
sub
cmp
push
shlb
dec
movsl
cltd
or
mov
xlat
inc
mov
ljmp
inc
inc
pop
sahf
mov
mov
shr
out
pusha
dec
aaa
shll
add
inc
icebp
outsb
repnz
int
jbe
data16
popl
cltd
hlt
adc
inc
fisttps
call
ljmp
lock
scas
or
nop
sub
outsb
add
and
fsubrl
iret
jp
cmp
daa
mov
in
mov
js
jp
cs
mov
xor
mov
lock
outsl
ds
jle
inc
and
mov
andl
jmp
fwait
sbb
test
sub
ljmp
jle
movsb
mov
aad
loop
pop
add
aaa
mov
pop
adc
or
sbb
or
fcmovne
orl
jae
sbb
jno
dec
mov
pop
mov
adc
sti
jge
dec
fwait
divl
and
sbb
jl
orl
push
iret
jae
shr
or
push
sarl
cmp
adc
xchg
mov
jo
ficompl
push
mov
icebp
cli
loop
arpl
mov
sbb
xchg
and
scas
cli
outsb
pop
mov
clc
int
mov
lret
add
sahf
xchg
xchg
stos
sahf
sbb
xchg
cmpps
add
pop
shr
mov
sbb
jge
push
ret
cli
jmp
shrl
lods
clc
test
xchg
imul
pusha
xchg
xor
jg
imul
inc
dec
add
dec
xchg
inc
inc
aaa
jp
push
push
cltd
fdivrp
mov
je
add
call
in
push
dec
or
repnz
es
mov
mov
xchg
adc
jp
and
shlb
add
loopne
cmp
mov
mov
mov
push
outsb
cmp
mov
push
lcall
ficoms
lods
iret
loop
pusha
daa
stc
in
cmp
jae
repnz
fwait
scas
sub
push
sub
mov
inc
inc
ja
ljmp
mov
fdivl
test
pop
push
into
std
incl
lock
ror
or
push
shrl
aaa
pop
cmp
pop
in
aam
adc
cld
jle
jne
out
cmpsl
mov
out
js
mov
cli
xchg
mov
mov
pop
sub
jge
shlb
mov
xchg
jp
jbe
movsb
arpl
nop
mov
cmc
outsl
mov
add
fisubrs
add
fcompl
jecxz
fwait
enter
xor
int3
test
loopne
lods
push
xchg
imul
into
sub
jp
or
repz
inc
ljmp
cmpsb
jae
mov
stc
lcall
loopne
and
add
and
ljmp
aam
popf
aaa
ret
int3
mov
es
dec
ja
or
outsl
push
push
adc
in
cmpb
jp
dec
out
lds
mov
mov
ljmp
sub
sbb
repz
ljmp
jle
jnp
gs
sbb
mov
cmpsl
xchg
jmp
cwtl
mov
adc
inc
add
or
jg
stos
into
dec
lods
mov
sub
add
ret
mov
test
rolb
stos
pop
jne
inc
in
xor
lret
imul
arpl
jnp
jge
int
loope
cmp
ret
dec
xchg
arpl
and
movsb
cmpsl
jecxz
xor
pop
addl
call
out
push
cmp
jns
mov
jmp
jl
and
aam
das
mov
das
xor
clc
shl
inc
addr16
jge
sbb
sti
inc
cld
popa
fisttpll
add
clc
popf
ss
add
xlat
sub
pop
out
jbe
into
out
sbb
dec
sbb
mov
mov
stos
test
jb
lcall
mov
dec
jg
fstpl
cmpsb
insb
pop
loopne
jl
in
sbb
leave
mov
clc
mov
inc
pop
xor
mov
add
xor
xchg
jbe
and
mov
dec
adc
sub
les
jl
imul
pop
mov
mov
add
stc
sbb
fildl
xlat
leave
sub
inc
xchg
leave
imul
pop
push
popf
int
xchg
out
mov
dec
mov
rcr
cmp
mov
jno
jo
cmp
cmpsb
cli
sub
popf
and
test
shlb
ret
cmpsb
jb
test
push
int3
push
inc
test
pusha
test
or
mov
push
inc
outsl
mov
xchg
mov
dec
jns
xchg
fidivrs
out
mov
sbbb
mov
push
mov
xlat
xchg
mov
push
dec
xchg
xchg
dec
stos
mov
and
add
loope
lahf
ret
iret
cmovno
out
push
lret
out
add
cmpsb
aaa
inc
or
jecxz
aad
push
xchg
popa
sbb
popa
and
mov
add
iret
loopne
or
cmpsl
out
nop
scas
cmp
in
imul
mov
or
sbb
jbe
fildl
movsl
pop
xchg
jle
pop
nop
movsl
iret
add
imul
dec
cmp
push
push
pop
xchg
orl
mov
inc
pop
xor
int3
xor
lods
cmp
and
aam
adc
xchg
cmp
imul
loopne
adc
inc
jle
adc
push
xor
dec
xchg
xorb
shlb
mov
or
nop
insl
mov
std
mov
iret
push
pop
in
faddl
dec
mov
cli
dec
aad
arpl
iret
in
std
sub
stos
and
mov
aam
xlat
fistpl
mov
nop
mov
shrb
frstor
roll
ret
nop
fs
rorb
sbb
in
add
mov
dec
scas
pop
stos
push
in
inc
sub
in
jg
add
loopne
insl
pop
adc
icebp
lods
xchg
fsubl
jo
hlt
inc
std
loope
and
test
lret
jp
or
and
rorl
cmpsl
and
or
dec
jb
adcl
sub
jbe
cld
push
scas
or
subl
or
inc
push
enter
icebp
dec
push
iret
mov
xchg
xchg
add
sub
pop
leave
cwtd
iret
mov
notb
subl
sub
and
pop
push
fcoms
xor
push
cli
jne
std
mov
imul
and
jmp
jecxz
test
lods
ds
cltd
xchg
mov
sbb
adc
sti
xchg
jns
loopne
fdivrl
rorl
pop
xchg
je
imul
sub
mov
dec
movl
pop
pushf
mov
sbb
fstps
cmpl
pushw
mov
insl
mov
arpl
imul
pop
push
mov
adc
ljmp
sbb
sbb
lcall
popa
jae
jge
add
lcall
mov
aaa
inc
and
push
test
xor
das
repz
pop
xchg
in
test
sub
or
into
adc
xchg
mov
pop
fldln2
mov
push
pop
aaa
scas
fsubs
clc
sub
cmp
add
shl
inc
bound
testb
div
or
pop
and
push
push
jnp
fstps
clc
mov
lret
ret
cmp
and
sub
cld
inc
jne
lcall
mov
push
push
xor
lods
ja
or
fs
lock
inc
pop
test
test
adc
aam
int
cli
dec
sub
aad
cld
pop
xor
loopne
jnp
cs
inc
sub
jmp
jge
dec
adc
test
dec
aad
cltd
jmp
mov
andl
inc
push
sub
mov
leave
or
push
lods
mov
fldl
ret
mov
insl
mov
dec
insl
xor
leave
push
adc
inc
loopne
mov
cli
xchg
jne
jge
lds
imul
and
inc
test
jl
frstpm(287
dec
les
fsubs
aaa
fsts
fisttpl
ds
lods
cmp
arpl
add
jno
test
bound
xlat
sub
in
and
in
cltd
push
or
popf
enter
or
test
in
fcoml
leave
aaa
jne
jbe
in
push
sub
add
cmp
and
pop
shll
push
imul
pop
push
ret
nop
pop
cmp
add
lret
jmp
lock
jne
div
test
inc
mov
or
into
sub
cmp
hlt
jno
cmp
mov
mov
neg
ja
jge
xor
call
popf
nop
iret
lds
shll
out
fisubrs
adc
into
sbbb
es
mov
popa
ljmp
mov
pusha
mov
lods
or
mov
push
mov
jnp
mov
dec
push
test
jae
jl
aam
xchg
icebp
jge
xor
adc
jo
inc
jno
mov
or
dec
sbb
push
jae
ret
das
mov
addb
bound
lret
int3
xor
cld
out
dec
adc
into
dec
cmp
push
push
sti
mov
xor
enter
jo
xlat
push
inc
mov
je
nop
sbb
xchg
mov
sub
push
jge
dec
sbb
cld
mov
or
xchg
cmp
gs
fisubrs
push
test
and
xchg
jno
addr16
adc
inc
fstl
cmp
cmc
mov
sarb
and
ret
int3
pusha
xor
cmp
clc
dec
mov
repnz
mov
jb
mov
xor
sahf
nop
ret
mov
or
cmp
or
or
sub
outsb
xor
inc
fs
pushf
mov
sbbb
push
cmp
sub
mov
test
cmp
xchg
or
jle
imul
xor
in
addr16
push
test
jmp
jae
ds
lcall
and
lds
inc
pop
or
pop
sbb
mov
call
and
xor
sti
stc
enter
add
cli
jp
cld
xchg
mov
leave
ss
xlat
movsb
arpl
ja
cmpsl
or
and
cmp
adc
xchg
and
pop
xor
inc
lock
jecxz
fisubrl
sbb
add
or
fs
cs
dec
test
test
push
outsl
jb
xor
mov
clc
inc
bound
pop
idiv
xchg
add
mov
xor
test
mov
mov
into
pop
cmp
imul
xchg
xlat
fsubl
repz
cmp
and
divl
iret
imul
cmpb
lahf
cli
ret
fs
movsl
jae
mov
inc
jle
xor
int3
mov
pop
ret
xchg
cld
xchg
pop
sti
daa
sbb
or
sbbb
jl
shrl
into
xchg
je
sbb
xlat
sti
sahf
sti
push
dec
int
or
aaa
shlb
mov
mov
or
mov
repz
out
pop
imul
jns
hlt
popa
fisttps
and
dec
fimuls
and
push
add
pop
jp
fisubrs
and
sub
inc
sbb
mov
jmp
enter
gs
lock
cltd
mov
adc
rcll
sbb
mov
xor
and
mov
add
iret
iret
jmp
sbb
push
loopne
in
adc
or
pop
adc
lods
repnz
cmp
stos
ret
add
mov
cmpl
imulb
jb
movl
mov
pop
int
xor
sub
adc
adc
jbe
dec
stos
sti
mov
cmp
aad
std
leave
pop
mov
mov
shlb
push
push
aam
out
cmp
out
daa
mov
and
xchg
jle
movsb
dec
inc
daa
cmp
pop
lods
push
xchg
cltd
xchg
hlt
sarl
and
negl
push
push
testl
adc
cmp
adc
pop
shl
push
stos
cld
arpl
or
pop
inc
push
das
cmp
mov
jmp
adc
mulb
outsl
inc
xor
pop
ret
outsb
je
nop
inc
xor
mov
jl
mov
mov
cld
push
pushf
pop
push
xchg
jb
cwtl
inc
aam
inc
rclb
add
mov
rorb
xchg
mov
ljmp
out
lea
and
sub
inc
enter
imul
sahf
fstpl
fidivs
jno
mov
addl
jle
add
pop
inc
dec
mov
dec
clc
popf
inc
incl
adc
xchg
dec
cmp
jbe
loope
jp
sbb
outsb
imul
addr16
insl
aas
int3
xor
push
mov
mov
outsl
repnz
loopne
push
into
int
outsb
mov
das
pop
mov
or
mov
xor
hlt
jnp
out
into
pop
mov
inc
cmp
jo
lret
notb
out
add
pusha
out
aad
iret
imul
ljmp
lret
ret
mov
mov
cltd
sub
xchg
or
sub
adc
ficoms
xor
stc
ljmp
or
mov
ljmp
call
and
aaa
pop
das
sbb
push
xchg
push
jns
adc
mov
xor
or
mov
mov
sahf
jb
adc
out
mov
test
jns
jecxz
push
pop
dec
xchg
pop
outsb
fnstsw
fsubl
enter
inc
xchg
lea
inc
mov
repz
clc
ret
mov
lret
in
pop
lret
jmp
shlb
sbb
inc
sub
mov
cmp
mov
ss
fdivrl
int
push
mov
mov
push
stos
mov
fadds
into
dec
rolb
inc
loop
out
adc
dec
push
add
mov
or
dec
sub
les
adc
cmp
cmp
mov
scas
jmp
ret
call
scas
mov
adc
cli
pop
jp
lcall
add
sti
repnz
ret
in
pop
and
mov
jb
mov
adc
pusha
movsb
or
push
shr
pushf
cmpsb
out
dec
push
dec
rorl
cmpsb
cmp
push
push
ja
adc
push
lods
dec
jns
roll
mov
cmp
xor
fsubrl
outsl
sbb
in
cmp
xor
adc
sbb
lods
dec
dec
notl
sub
cmp
sbb
sub
xor
sbb
jp
pop
inc
orb
in
dec
jae
lret
xchg
mov
out
arpl
cmpsb
xchg
push
aam
xchg
xchg
cs
fstps
push
loopne
leave
bound
xor
ficompl
leave
add
das
push
mov
sub
nop
fmuls
popa
cmc
lahf
add
inc
or
ror
gs
data16
adc
pop
out
pop
push
xchg
mov
mov
inc
pop
lret
mov
std
xor
and
jne
mov
mov
mov
hlt
fistpl
dec
mov
ss
inc
xchg
js
xchg
jmp
adcl
pop
and
push
ficoms
jno
les
jbe
dec
lcall
xor
jecxz
cmp
xchg
adc
popa
sub
xchg
call
outsb
sub
jo
stc
sbb
sbb
lcall
mov
sbb
mov
aam
outsl
add
or
sar
xchg
roll
insb
adc
xchg
mov
sub
popf
cltd
insb
pop
push
jp
add
push
jge
stos
sbb
leave
or
orb
pusha
pop
cli
decl
xor
sub
imul
dec
mov
fbld
test
xor
bound
or
orb
sahf
in
cmp
lahf
xchg
mov
xlat
sahf
sub
adc
daa
and
arpl
out
jo
mov
loope
add
adc
sbb
sub
int
js
lock
cmp
hlt
cwtl
mov
and
adc
push
push
ljmp
xchg
lahf
imul
call
xchg
xchg
lea
jns
xchg
adc
jae
inc
xchg
mov
sar
cmp
add
mov
cmpsb
push
das
add
icebp
popa
jae
sbb
lret
popf
cmpsb
test
dec
cmp
popa
jne
xchg
sti
cs
pop
push
lds
inc
stos
jp
mov
imul
jl
mov
dec
stc
sub
filds
push
gs
push
inc
out
push
or
add
iret
scas
mov
xlat
xchg
cmp
ret
sbb
jp
jno
pop
pop
xchg
or
mov
xchg
loope
and
divb
jmp
fwait
push
inc
pushf
stos
add
jmp
movsb
mov
cmpsb
popf
mov
pusha
testl
stc
mov
imul
data16
fcompl
push
push
sbb
and
stos
mov
pop
repnz
add
jle
loopne
mov
push
xor
pop
adc
add
mov
sub
cmp
push
dec
mov
pop
mov
cli
push
push
outsb
fiadds
aad
aam
clc
in
adc
ja
andl
es
inc
mov
fidivl
mov
xchg
ret
leave
adcl
je
repz
cmpsl
pop
mov
aad
dec
add
mov
cvtpi2ps
push
push
mov
xchg
jl
cs
sbb
push
cmp
push
or
in
cmp
fsubrs
nop
in
jl
pop
dec
repz
cmpsl
lods
jae
push
jp
clc
jl
jb
pop
adc
in
test
mov
stos
movb
fincstp
mov
dec
mov
lret
push
fcmovnu
in
pop
mov
lods
push
loopne
loopne
enter
in
fstpt
pusha
or
lods
and
mov
shrl
jmp
out
lahf
xchg
mov
out
xor
lods
inc
rcrl
fld
sti
sub
mov
daa
or
faddl
lret
mov
add
into
fwait
mov
adc
addr16
fiaddl
pop
xchg
sbb
fwait
pop
xchg
out
or
sbb
xchg
push
sbb
fwait
inc
mov
xor
adc
mov
hlt
mov
mov
mov
dec
push
pop
inc
icebp
loope
jmp
mov
xchg
or
lcall
cmpb
push
mov
cmp
xchg
pop
das
dec
dec
dec
xchg
rorb
jge
stos
push
roll
add
insl
push
shlb
xor
ss
adc
push
fidivs
push
adc
clc
mov
push
stos
jne
mov
in
xchg
xor
out
ret
cmp
out
mov
in
int3
or
or
lcall
xchg
out
push
insl
push
das
test
push
push
jp
xor
lret
adc
loope
push
ret
mov
enter
nop
fchs
sbb
ljmp
cmp
mov
push
or
push
jmp
push
adc
sahf
repnz
dec
clc
adc
loopne
jmp
inc
push
push
mov
cltd
sub
mov
inc
sub
dec
out
mov
popf
jle
lock
or
or
in
fsubs
enter
sub
movsb
insl
push
mov
jae
sbb
pop
cmp
ljmp
xor
or
push
lea
daa
jns
sub
mov
pop
inc
and
xor
aaa
mov
mov
cmp
xchg
adc
imul
fs
aam
ror
aad
enter
rolb
movsb
or
popf
inc
clc
test
or
int
cli
imulb
into
test
fwait
sub
fldcw
xchg
ja
cmp
mov
mov
insb
fsubrs
cmp
jecxz
in
lods
and
cmp
int
in
cs
cmpl
pusha
or
ss
mov
mov
cld
sub
es
pop
dec
dec
dec
addl
addb
mov
xor
rcr
rcrl
sub
movsl
loopne
mov
cld
dec
out
mov
mov
mov
das
add
or
jmp
dec
push
xor
fs
sub
xchg
leave
jno
rcrb
int
xchg
mov
and
in
pop
sbb
add
lcall
sbb
mov
sbb
cmp
or
push
cmp
mov
xor
jne
jle
pop
mov
adc
outsl
pop
ds
pop
ficoml
popa
dec
fstpl
jecxz
inc
cmp
mov
push
pop
aaa
push
outsl
jb
ret
dec
mov
lahf
popa
in
sub
and
jecxz
lock
jbe
repnz
cmpsb
sub
pop
cwtl
pop
rcr
movsl
pop
xor
push
cmp
cld
dec
and
sbb
fmulp
sarl
jnp
add
push
movsb
aas
dec
pop
jmp
aad
in
dec
dec
pop
pop
push
pop
jne
or
mov
lods
cmp
movsb
push
push
add
insb
enter
mov
or
inc
imul
xchg
pop
mov
mov
test
popf
lods
and
lods
jmp
jns
xor
call
insl
int3
add
scas
pop
mov
jecxz
dec
sti
jecxz
sbb
sbb
dec
fnstenv
cmp
inc
add
ror
adc
xchg
daa
sub
pop
cld
sbb
cs
jl
cli
mov
gs
xchg
pop
bound
in
fistpl
inc
test
movsl
or
idivb
mov
out
sub
aad
les
bswap
pusha
out
jecxz
daa
es
insb
in
push
pop
sub
fdivl
inc
outsb
rcrl
mov
popa
pop
iret
scas
or
mov
inc
xchg
incb
add
xor
cmp
icebp
dec
cmpsl
gs
insl
pop
fimull
mov
decl
iret
mul
jb
sti
stc
mov
sbb
cmc
in
xor
sbb
cs
nop
add
push
push
cs
jne
mov
movsl
fdivl
mov
test
mov
adc
xchg
push
out
jne
jno
lret
xor
jb
dec
jecxz
xor
and
or
pop
out
xchg
jmp
clc
pushf
popfw
cwtl
lcall
gs
enter
in
mov
inc
cwtl
ret
sub
idivl
cmc
inc
push
iret
ror
fldenv
outsb
clc
es
ja
adc
shr
nop
or
inc
or
push
cltd
sub
jl
lcall
or
ds
jmp
testl
pavgb
xchg
xor
das
cmp
lds
dec
mov
rorb
and
jae,pt
fwait
mov
lret
inc
mov
inc
jg
outsb
cwtl
mov
popf
lock
lahf
int3
xor
stos
aas
mov
and
and
int
or
jecxz
cmp
jecxz
mov
mov
pushw
inc
pop
xor
and
stos
popa
rolb
out
adc
push
in
shll
and
push
push
inc
pop
idivl
flds
dec
xchg
sbbb
push
cmp
pop
xor
mov
push
cmpsb
stos
jae
fildll
rcll
bound
sub
rcr
xor
mov
push
nop
mov
rcll
scas
pop
jmp
lods
outsl
fucomp
sarl
xor
dec
dec
ret
daa
jl
mov
clc
pop
pushf
cmpsb
jo
aaa
les
or
or
cmp
or
imul
jae
mov
fs
xor
inc
lret
aaa
jp
incb
fimull
shrb
dec
outsl
lcall
cmp
sbb
jmp
adc
inc
mov
ret
lods
outsl
pushf
adc
lcall
mov
mulb
mov
fwait
js
xor
mov
ja
and
popa
not
repz
mov
arpl
adc
int3
jle
je
mov
mov
jg
push
xor
xchg
adc
scas
sub
and
jne
loope
faddp
mov
pop
scas
test
ds
sbbl
jbe
nop
in
mov
clc
xlat
cltd
shl
popa
pop
rcrb
add
lahf
loop
aaa
jbe
test
insb
popf
stc
daa
popf
testl
jo
out
stos
mov
daa
add
std
pop
stos
decb
fs
xchg
jg
or
cvtpi2ps
or
ret
fdivs
xchg
jne
shrl
or
push
mov
or
push
insl
pop
out
bnd
flds
sub
fisubl
leave
or
shll
cvtdq2ps
fstpt
mov
adc
mov
add
add
jl
scas
xchg
push
testl
mov
mov
int
ret
fistl
mov
mov
addl
mov
test
mov
into
push
scas
and
fs
mov
nop
rclb
sti
cmpsb
mov
sub
push
cs
mov
xlat
fs
inc
arpl
lds
adc
shlb
in
ja
add
popl
subb
ds
fisttps
enter
mov
xchg
add
cmp
aaa
loop
imul
lahf
popf
rcll
jl
push
lret
idivb
push
ucomiss
sbb
mov
out
cmc
movsl
cwtl
js
loopne
pop
repz
cmpsl
fildl
aas
pop
cmc
adc
les
push
cmp
ja
mov
or
testl
popa
xor
popf
xlat
aas
xchg
sahf
mov
dec
sub
push
nop
inc
nop
and
pop
nop
push
and
mov
std
sarb
in
popf
xor
xchg
int
dec
cmpsb
addr16
cli
jp
xor
push
test
pop
cmpsb
jns
int
ret
mov
pop
add
faddl
cmp
popf
outsl
mov
std
test
jne
xchg
fs
jle
cli
mov
mov
or
inc
enter
jecxz
cwtl
stos
mov
cmc
mov
mov
mov
cmc
addr16
sub
mov
cwtl
sub
xchg
cltd
popa
mov
cld
leave
and
or
pop
cmp
clc
sub
ror
mov
mov
fisubs
xchg
call
mov
push
mov
cmp
repz
lods
xchg
dec
sbb
add
xchg
js
cmp
inc
ret
mov
and
lcall
sub
movsb
xchg
scas
out
cmp
jae
sahf
jno
sbb
insl
loope
mov
ret
xor
out
xor
mov
aam
fmuls
cmp
mov
cmp
repnz
pop
jecxz
jl
xchg
mov
movsl
xchg
shlb
pop
jbe
push
inc
inc
addr16
push
es
repz
adc
nop
clc
das
cld
ret
je
mov
lret
or
out
adc
test
xor
add
aas
cltd
insl
jns
sub
lds
dec
fdivrl
dec
out
cmp
push
inc
mov
lods
test
push
icebp
jle
xchg
sbb
jmp
das
lcall
daa
mov
adc
in
xlat
pop
adcl
add
sub
xor
mov
dec
lods
mov
mov
sbb
sahf
mov
adc
pop
rol
int3
aad
xorb
ja
test
push
adc
es
inc
mov
fsubs
mov
pop
rorb
loope
inc
ss
xchg
xchg
inc
in
leave
or
into
aas
fsubr
mov
adc
fwait
pop
xor
fiadds
out
scas
fnstcw
sahf
push
andb
jae
mov
inc
mov
es
fmuls
lcall
fcmovnbe
out
jne
cmp
filds
loop
cmp
or
xor
inc
dec
push
xor
dec
mov
push
sub
scas
das
push
bound
and
out
fildll
adc
pop
stos
inc
mov
sbb
fdivl
pop
in
pop
outsl
cld
pop
sarb
gs
or
sub
data16
jl
jno
stos
sbb
mov
test
and
xchg
in
insl
push
jae
adc
inc
popf
add
movsb
add
shlb
fyl2xp1
shll
xchg
xchg
cmp
ret
cmp
sub
push
scas
div
dec
add
mov
mov
dec
ja
shr
jmp
repnz
xor
push
je
adc
adc
mov
mov
adc
aad
mov
jge
inc
adc
push
or
xlat
dec
fcmovb
addb
mov
inc
mov
add
fisubrs
cmpl
ret
repz
test
xchg
cmp
idivl
jae
ficomps
mov
inc
cmpsb
aam
out
fdiv
repnz
mov
fidivs
jp
jmp
into
and
jle
push
insb
lods
icebp
lods
repz
sarl
mov
sub
bound
push
or
cld
cmp
xor
clc
rcrl
out
add
stc
aam
mov
add
lret
fdivr
inc
jbe
add
test
push
insl
jmp
xchg
xchg
xor
pop
test
pop
dec
xor
sbb
fmuls
decl
scas
mov
cmpsb
mov
push
js
insl
ret
out
lock
fchs
xchg
and
loopne
dec
pop
addl
fmul
and
add
dec
ret
push
pop
dec
sbb
andl
xor
push
dec
in
xchg
cmp
or
dec
add
ja
lods
or
adc
lcall
xor
jno
js
adc
pop
and
inc
cmpl
pushf
cmpsl
mov
add
sbb
or
mov
out
rcl
cmc
test
mov
lcall
xchg
in
add
xchg
ret
mov
aaa
cmp
add
ds
dec
lds
inc
cld
shl
mov
sub
negb
push
popf
push
jp
or
mov
or
dec
adc
lods
or
cli
dec
ljmp
dec
cld
sub
mov
arpl
mov
nop
outsb
add
pop
sub
push
xor
add
aas
jnp
test
sub
lods
lret
ljmp
clc
inc
adc
ljmp
jge
ds
in
and
inc
clc
in
sbb
push
es
mov
cltd
loopne
jmp
shll
leave
popa
in
int3
adc
pop
xchg
in
clc
js
mov
sbb
loopne
out
and
fmull
xorl
fsubr
jle
int
test
shlb
mov
pushf
xor
inc
repz
shl
mov
daa
pop
inc
and
pop
adcb
xor
fidivs
xorb
xor
js
and
enter
movsl
push
arpl
addr16
in
and
xorl
mov
push
stos
add
insb
jno
xchg
hlt
sub
inc
and
nop
pushf
loop
push
jno
inc
sbb
outsb
test
xlat
sarl
icebp
ljmp
or
fmull
in
mov
es
out
pushl
hlt
in
push
jae
shlb
loope
pop
lock
xchg
fwait
scas
test
shl
mov
jne
loope
jl
fwait
cmp
ret
mov
js
add
or
sbbl
mov
test
push
das
popa
dec
sbb
into
mov
sub
stos
add
dec
vprotb
inc
cmpsl
xor
icebp
fnstcw
and
pusha
fisttps
ret
subb
push
mov
push
leave
inc
rolb
fstpt
pop
xchg
xchg
and
push
xlat
in
dec
lahf
jg
pop
int
scas
mov
inc
jbe
hlt
xor
sub
outsb
mov
sub
stc
into
push
pop
sbb
add
pop
int
fistl
cmp
subl
inc
scas
add
mov
ret
dec
fimuls
test
mov
nop
test
mov
aam
stos
jl
cld
adc
or
in
jbe
sub
sahf
sbb
fdivl
lcall
inc
fcmovb
jno
push
push
ss
jp
repz
or
adc
xor
and
punpcklbw
jp
xchg
inc
das
outsb
ja
imul
push
jmp
sub
cltd
sub
das
js
jge
mov
in
dec
adc
mov
add
lods
mov
add
xor
fs
sub
aad
iret
mov
outsb
idivb
ss
mov
or
arpl
mov
enter
imul
push
imul
and
int
pop
lcall
leave
das
xchg
mull
imul
call
insb
outsb
or
cmp
fisttpl
sub
xor
test
add
shll
mov
outsb
fs
je
jle
push
scas
scas
imull
sub
xor
mov
ds
lods
notl
lret
xor
pop
jo
push
cmc
inc
les
sub
sub
cmc
or
sbb
push
sub
or
cmp
test
repz
xchg
es
cmp
lds
movsb
push
dec
and
decl
lahf
ret
push
in
ljmp
jnp
and
lds
jbe
add
fwait
movsl
jo
aaa
pop
addr16
sbb
mov
dec
cmp
mov
icebp
add
scas
push
mov
and
aaa
inc
cs
add
jbe
inc
movsb
scas
mov
lret
shll
lret
lret
mov
pop
jmp
xor
and
jp
jo
xchg
fstpl
push
inc
cmp
or
outsb
xchg
cmpsb
xchg
and
lods
sbb
push
mov
mov
mov
mov
bound
pop
mov
ja
and
push
icebp
or
out
ret
int3
push
xchg
inc
cmp
pop
jbe
lds
in
sbbl
or
cmp
mov
sub
std
add
sbb
imul
inc
push
xor
adc
cwtl
cmpsb
bound
nop
call
es
jae
sub
stos
nop
dec
push
mov
mov
jl
sarl
pop
nop
loopne
pop
outsb
cwtl
xor
adc
xchg
repnz
lods
lea
or
ljmp
adc
in
mov
shlb
mov
jbe
xchg
or
xchg
xchg
inc
push
jmp
pop
leave
cmpsl
jecxz
cltd
xchg
mov
and
or
imul
push
aam
and
fstp
test
jp
mov
xchg
movb
sbb
mov
push
stos
mov
pop
sti
jns
push
and
clc
lods
and
in
push
pop
dec
std
xchg
mov
add
inc
sahf
testb
xor
faddp
cmp
pop
xchg
inc
aam
in
ret
ret
push
es
in
mov
and
adcl
xchg
add
addr16
jl
shlb
call
jg
test
push
inc
imul
lods
ljmp
lcall
jp
adc
rorl
adc
inc
sti
ja
lods
and
lret
outsl
or
sbb
popf
jge
jge
movsl
jns
jbe
stos
imul
cmp
push
sbb
fbstp
dec
cli
je
testl
adc
mov
int
cmp
cmp
sbb
in
push
scas
jl
fimull
lock
js
faddl
jb
push
sub
mov
mov
mov
imul
outsl
sti
and
aaa
shl
ud0
lods
fldz
adc
push
lea
jmp
adc
icebp
out
scas
mov
mov
and
outsl
lret
ds
es
jno
dec
push
dec
fistpll
nop
insb
jle
negl
in
push
fwait
arpl
dec
out
xchg
int3
insl
int3
inc
xrelease
sub
and
pop
mov
inc
jo
sti
mov
sahf
xor
imull
bound
push
sar
xlat
dec
pop
popl
js
mov
sbb
addr16
or
lds
and
xlat
mov
xchg
movsl
dec
xchg
pop
sbb
popa
movsl
inc
mov
dec
mov
xchg
push
xor
xor
or
daa
sbb
in
jl
add
cli
div
insb
cltd
int3
pop
push
fs
sbb
sbb
sub
push
in
fnstsw
bound
int3
pop
jmp
inc
or
pop
xlat
sahf
mov
cmp
jp
inc
xor
lock
sub
sldt
add
cmp
out
sub
adc
lods
cwtl
aaa
sbb
rcll
inc
push
into
inc
pop
lock
mov
sbb
mov
inc
ljmp
call
adc
xchg
packssdw
and
psubsw
and
arpl
movsb
nop
js
push
jmp
or
leave
cs
add
test
adcl
into
aam
sbb
popf
cwtl
faddl
lods
hlt
dec
push
fucom
sub
or
lods
mov
loop
jl
in
jg
jno
pop
lods
out
mov
cmp
sbb
dec
jbe
adc
lahf
cld
sub
inc
push
pusha
lods
pop
push
popf
adc
or
or
add
daa
xlat
mov
sahf
dec
mov
mov
movb
test
push
jl
sub
xchg
mov
dec
shlb
lds
mov
das
xlat
shrl
insl
pop
out
pop
or
aam
push
jp
ret
push
ds
cmp
or
inc
pop
clc
mov
pop
fnstsw
lret
cmp
bound
ds
mov
hlt
jns
idivl
repz
inc
xor
cmp
mov
push
ds
inc
push
mov
inc
cmp
insl
xchg
xchg
sub
jne
jnp
leave
sbb
test
or
bound
sub
xor
andb
mov
fmul
stc
mov
stos
sub
add
sbb
mov
mov
pop
mov
mov
dec
inc
sub
flds
push
and
scas
sub
jne
mov
repnz
aas
push
xor
pusha
push
dec
add
inc
insb
test
mov
out
xor
ret
xor
cmpsl
ljmp
not
enter
lods
test
add
jecxz
out
push
scas
pop
add
test
and
mov
pop
mov
int3
pop
mov
sbb
jae
xlat
pop
movsb
cld
fbld
jecxz
insl
shrb
and
nop
and
aaa
cmp
cmp
push
cmp
and
cmc
cmp
pop
arpl
jno
imul
sbb
push
dec
test
dec
fbstp
shlb
xchg
inc
mov
mov
pop
add
xchg
andb
orb
cmp
outsb
mov
aas
and
add
push
sub
xor
lock
push
arpl
es
shl
pop
ss
mov
sub
outsb
add
nop
or
stos
xchg
inc
cmpsl
push
jecxz
and
std
test
and
adc
push
xchg
or
jbe
cs
cmp
mov
mov
sub
sti
mov
xor
imul
jo
int
loop
and
aas
aad
pop
call
les
inc
ljmp
lods
mov
sbb
idivb
fnstcw
add
sub
popf
aam
xor
jle
lea
rep
inc
imul
mov
insl
je
int3
sahf
xchg
cwtl
jecxz
movsl
aaa
and
repz
sbb
push
sbb
dec
adc
popf
lds
push
dec
xorb
sti
xchg
pop
scas
hlt
mov
mov
aaa
rorl
mov
fs
cmc
push
pop
incl
test
out
push
sub
mov
or
mov
les
sbb
hlt
inc
push
dec
test
ss
loop
icebp
call
pop
mov
inc
pushf
cli
pop
cmpsb
and
movsb
lcall
mov
jmp
push
inc
popf
jp
xor
jge
repz
mov
sbb
fldl
mov
mov
sbb
outsl
add
and
pop
sar
or
inc
into
pop
aas
into
sub
inc
daa
and
dec
xchg
cmp
sbb
dec
shlb
lock
std
sbb
adc
mov
sub
inc
mov
xchg
orb
ficoml
push
call
sub
xchg
inc
mov
sub
sbb
sti
inc
loop
popw
filds
add
outsl
testl
rcl
loop
fldl
jne
add
pop
pop
mov
testl
xchg
xchg
addl
rcrl
je
xor
scas
add
out
push
ret
dec
je
sbb
mov
ds
cmpb
test
in
sti
and
ss
sbb
adc
outsl
pop
or
addr16
lods
mov
lret
aad
popl
push
mov
push
mov
notb
fs
imul
dec
or
push
movsl
dec
div
adc
ss
pop
and
and
pop
cmpsl
jae
xchg
cltd
xor
hlt
fldcw
pop
jle
imul
sub
xchg
sub
pop
pop
pop
outsl
xchg
out
jg
jg
shr
out
scas
cwtl
xor
lret
fmull
loopne
jo
add
or
mov
lods
lods
sbb
int3
mov
sbb
mov
in
xor
jl
mov
rolb
cmp
xchg
scas
sarb
inc
fildl
jecxz
or
mov
ja
cltd
stos
stc
leave
push
daa
dec
es
push
scas
push
dec
xorb
in
test
outsb
xchg
ljmp
call
cltd
loop
mov
das
add
lds
pop
movsb
ds
fmull
pop
insb
mov
in
sbb
dec
lret
jle
int3
adc
mov
dec
aaa
mov
ds
push
push
in
xchg
cmpb
mov
dec
aas
or
mov
fimull
or
pop
xchg
mov
push
shl
ss
jbe
push
std
push
jmp
push
jno
jecxz
popf
adc
cli
xor
adc
dec
hlt
int3
mov
addr16
aad
pusha
out
in
push
pop
sbb
mov
shlb
mov
mov
andb
lahf
and
inc
mov
andb
pop
push
pop
and
jl
aam
stos
fisubrl
pop
notb
cltd
cmpsb
mov
sar
dec
dec
into
lsl
scas
dec
jns
adc
adc
inc
aas
stc
nop
js
adc
xor
out
xchg
cmp
adc
hlt
cmp
fildll
xchg
xor
test
arpl
xchg
mov
lea
pop
pavgb
xlat
push
ret
jge
aam
in
pop
std
sahf
int3
and
add
fstp
jbe
xlat
jb
lcall
fdivr
dec
rcl
jae
shlb
nop
inc
mov
adc
insl
pop
sub
in
stos
call
pop
jl
sbb
jns
fstpl
lret
negl
adc
add
sub
jb
mov
push
mov
push
les
push
jno
es
jnp
js
mov
loopne
ljmp
push
loopne
mov
sub
lods
jne
fmuls
mov
orb
xchg
into
outsl
push
lods
call
stos
jecxz
dec
dec
xlat
in
mov
gs
leave
dec
and
sub
and
add
arpl
add
cmp
pop
test
lea
pop
je
insb
out
lahf
pop
aam
sbb
sbb
add
inc
out
add
add
fwait
ror
testl
repnz
sub
lret
shrl
mov
pop
stos
fdivrs
repnz
sbb
cmp
loope
into
sub
enter
or
push
in
pop
scas
xchg
pop
adc
mov
std
out
and
push
ljmp
imul
lret
jmp
dec
test
cmp
xlat
and
leave
push
test
pop
das
xor
xor
in
or
test
jns
repnz
jno
inc
adc
outsb
jmp
push
int3
and
dec
aad
lret
icebp
rcrl
sub
push
xchg
cmc
adc
cmp
inc
pop
insl
dec
mov
jnp
out
jmp
push
jmp
mov
fs
mov
xchg
xchg
lret
int
adc
pop
andl
mov
and
mov
push
mov
pop
inc
jns
ljmp
xor
push
pop
arpl
test
outsl
add
jo
cmp
lret
decl
lcall
mov
and
enter
cmpsl
xchg
dec
fsubl
pop
xor
push
je
mov
fdivrs
mov
popf
imul
loopne
imul
mov
bound
mov
mov
imul
mov
or
cmc
dec
insl
jne
or
and
cmpsb
adc
push
jo
add
outsb
mov
icebp
dec
sbb
or
shr
in
outsl
sbb
inc
idivl
xor
push
xchg
sbb
out
adc
jo,pn
inc
pop
jp
mov
ja
clc
pop
xchg
aam
movsl
pusha
mov
push
cmp
inc
lods
cmp
pusha
jg
jmp
xchg
cli
add
mov
add
mov
jp,pn
fcoms
add
enter
and
add
fs
jo
mulb
std
insl
xor
dec
or
ja
aaa
sbb
dec
lahf
mov
dec
pop
push
mov
push
stc
inc
out
cmp
jg
or
mov
sbb
pop
shl
sub
or
inc
aas
repnz
fcoms
lahf
ds
cs
sbb
setl
xchg
out
jbe
movsl
ss
xchg
les
lea
or
outsl
outsb
int3
test
xor
sbb
adc
jns
push
push
and
shrb
movsl
xchg
add
mov
aas
xchg
pop
shrl
xor
inc
nop
jno
cltd
jge
sbb
outsb
dec
roll
ret
sahf
dec
mov
adc
imul
cmpsl
scas
mov
add
mov
xlat
dec
leave
inc
push
jg
test
iret
lahf
sti
js
add
pop
mov
xor
js
aad
in
outsl
push
lcall
sub
jecxz
jecxz
adc
mov
mov
in
push
rcrl
pop
cld
sbb
fsubrp
push
je
push
es
into
shr
outsb
cli
sarl
jnp
cmp
pop
mov
out
jns
sbb
hlt
lret
test
push
aaa
lcall
fwait
aas
dec
loope
adc
add
dec
xchg
xorl
inc
shll
add
shlb
in
pop
lret
push
int
adc
inc
sbb
xor
mov
daa
imul
test
pop
ss
push
enter
cld
mov
jg
test
cmp
push
in
xor
mov
and
outsl
aas
mov
sbb
pop
sub
sub
xlat
insb
sub
mov
xor
fnstcw
push
aaa
into
dec
outsb
dec
jg
adc
xor
ficoms
stos
jnp
cmp
movsb
cli
add
in
pop
mov
lds
popa
dec
xorb
jmp
popa
jbe
xor
fbld
and
sbb
push
xchg
fidivl
and
pop
adc
xchg
insl
call
mov
or
pop
xchg
fisttpll
dec
es
aaa
push
das
gs
pop
int
cmpsl
int
je
fwait
scas
or
mov
ret
dec
jp
push
loop
adc
jb
jnp
dec
push
push
fcompl
jae
add
negb
cs
lds
jb
mov
jns
pusha
mov
fnstsw
jb
pop
mov
mov
aam
or
or
xor
dec
sbb
clc
cmp
pop
out
xchg
dec
xor
mov
adc
sub
call
mov
push
jmp
das
jns
xchg
roll
bound
cmpl
or
ror
mov
divb
dec
outsb
jne
jo
js
into
ljmp
jbe
or
add
daa
push
mov
iret
test
jno
adc
stos
jl
add
sbb
in
cmp
mov
pop
pusha
mov
mov
aad
iret
int3
add
mov
clc
cmp
adc
hlt
fists
mov
cmp
into
xchg
xlat
stc
ja
fcomps
movsb
and
sti
cmpsb
in
je
mov
inc
jno
push
adc
jns
dec
cmp
je
scas
lods
inc
sti
bound
in
jp
lds
xlat
and
push
mov
adc
xlat
adc
mov
sti
adcl
out
sbb
cmp
pop
outsl
or
pop
cmp
daa
pop
sbbl
mov
out
push
xor
mov
xchg
scas
fdivr
sbb
std
imul
mov
mov
mov
cmc
mov
add
pop
cld
rcrl
jo
mov
xor
cmpb
push
or
mov
add
fiaddl
pop
jle
jae
pop
out
pop
jmp
testb
pop
mov
xorl
mov
seta
push
popa
nop
fstps
sbb
push
ret
sbb
or
sub
or
sbb
mov
sub
aas
into
dec
cmpsb
scas
jo
and
push
jle
adc
xor
lods
mov
rol
mov
push
add
gs
jne
push
lea
push
push
or
pop
cmp
jmp
mov
or
sub
push
sbb
lcall
pop
scas
rol
adc
pop
dec
enter
jmp
dec
aas
into
scas
and
xor
dec
aas
aaa
xlat
data16
repz
out
push
sub
clc
cwtl
cmp
xchg
jecxz
loop
xchg
or
movsb
xor
push
push
stc
and
popf
hlt
jmp
cmp
mov
adc
cmc
in
dec
cmc
call
test
mov
sbb
dec
popf
imul
shrb
or
fstl
add
dec
lods
and
sarb
cmp
je
aas
inc
and
add
pop
dec
push
ss
mov
pop
pop
inc
scas
mov
fs
jmp
pop
cwtl
jmp
pop
imul
aad
repz
cli
mov
push
or
scas
test
rcll
pop
push
shll
mov
lret
sbb
jns
outsb
xorb
orb
imul
pop
testl
jne
jne
test
cmp
push
cs
or
or
cmp
int3
out
push
pop
cmp
xchg
pop
mov
xchg
add
jns
pop
ror
aam
lea
xlat
inc
and
jle
xrelease
out
bound
xchg
jg
mov
mov
push
xchg
pop
ja
ljmp
test
aam
mov
mov
data16
pop
mov
push
mov
or
nop
inc
je
mov
rorb
xor
fldcw
and
rcll
ret
dec
mov
jbe
xchg
mov
clc
fisttpll
xorl
adc
aam
cs
test
or
pop
pop
jo
sbb
fnstenv
inc
fwait
pop
mov
jp
cmpsb
inc
and
xchg
adc
lods
cmp
push
cli
and
out
rep
sbb
stos
cmp
ljmp
push
sub
push
daa
clc
inc
sbb
xor
jg
loopne
mov
sub
out
sub
mov
insb
pop
mov
mov
xchg
mov
fdiv
xchg
push
jmp
mov
dec
xchg
pop
movsb
rep
pop
mov
lret
xchg
mov
xchg
out
jnp
notb
mov
out
sub
inc
nop
push
es
and
fisubrl
das
inc
sbb
rcr
mov
ss
out
push
in
mov
sbb
fwait
ret
xchg
shl
sbb
sub
fildll
xchg
fisubs
mov
outsl
in
js
dec
mov
outsb
loop
dec
pop
repnz
add
ja
int
and
sbb
xchg
push
dec
dec
push
in
aam
push
jnp
adc
jne
adc
adc
jg
das
gs
out
stos
pop
bound
pushf
or
lret
ljmp
cltd
xchg
and
and
sbb
inc
insl
fcmovb
sahf
imul
pop
int
aaa
es
lods
cld
jmp
int3
fs
cld
outsl
push
jp
or
ja
inc
pop
mov
ficoml
jbe
adc
cmpsl
addr16
add
sbb
mov
mov
test
cmovbe
js
xor
repnz
xchg
and
lock
sti
cs
sub
repnz
dec
nop
jmp
ret
lds
xchg
pushf
push
sbb
xchg
inc
outsb
decl
test
xchg
aaa
test
xor
insl
iret
mov
enter
lahf
lcall
pop
sub
aaa
mov
jg
push
cmp
in
lods
sbb
cltd
std
lods
or
loop
adc
and
fiaddl
cmp
mov
mov
enter
ss
sub
add
inc
aaa
call
jmp
and
in
ss
ja
roll
cltd
call
fwait
jno
pop
sysret
sbb
pop
andb
aad
cltd
and
sub
adc
add
ss
or
fadds
dec
sub
cmpsl
fwait
add
into
jecxz
lret
xor
and
popa
sbb
adc
ret
out
insl
aad
xor
movsb
dec
or
cmc
mov
pop
inc
pop
lds
js
sti
push
mov
mov
mov
bound
xchg
cld
and
mov
iret
inc
mov
stc
shrb
rol
inc
ds
dec
lahf
push
jle
adc
pop
sub
loopne
sbb
and
sbb
xchg
imul
adc
fs
pop
and
int3
jge
sarb
out
push
and
repnz
out
sub
test
xchg
andl
cmp
loope
inc
xor
and
push
fildll
push
or
ljmp
pop
dec
sub
fildl
or
mov
fidivrl
add
jmp
mov
pushf
xchg
and
jns,pt
push
cmc
xchg
mov
and
jbe
notl
outsb
fisttps
or
adc
int3
xchg
add
mov
pusha
testl
insl
dec
or
int3
imul
xchg
out
push
and
xor
xlat
pusha
sarb
jae
mov
xor
inc
push
ss
xchg
mov
insl
xor
cmpsb
mov
dec
clc
adc
inc
jge
lcall
xchg
in
xor
rcr
add
adc
pop
mov
add
cmp
inc
pop
scas
and
pop
sbb
out
jle
inc
test
jge
jo
xchg
aaa
push
inc
lods
pop
outsl
gs
xchg
jle
in
div
cltd
cs
mov
jbe
test
sub
clc
push
cmp
arpl
jo
mov
push
aam
add
sub
sub
mov
pop
sub
insl
leave
mov
and
fildll
sarb
adc
pop
lret
test
notb
hlt
inc
adc
outsb
mov
cmp
jno
xchg
push
push
rcrl
mov
out
push
sbbl
sahf
daa
aas
mov
inc
or
sub
mov
inc
push
dec
sbb
push
dec
shlb
mov
sub
mov
sbb
fwait
std
arpl
ss
jo
inc
xchg
or
inc
scas
fildl
adc
push
xchg
aam
mov
mulb
cmp
sub
sub
movb
sub
dec
es
inc
adc
and
in
ljmp
sbb
inc
jne
and
imul
out
insl
xchg
pop
mov
dec
outsl
cmp
enter
sbbb
jmp
popa
sub
testb
std
xor
dec
sbb
cwtl
xor
lods
out
scas
mov
ss
es
rcrl
ss
shll
test
and
enter
push
testb
das
add
popf
sub
mov
xchg
inc
dec
and
jne
push
mov
mov
jl
dec
sub
add
sub
mov
or
cmp
in
push
mov
popf
push
test
cmpsl
aad
jg
outsl
dec
lret
push
clc
fsubs
inc
in
mov
cmpsl
cmp
shr
mov
test
cmp
les
jp
adc
mov
jmp
ret
test
loop
gs
mov
repnz
gs
push
daa
xchg
sub
imul
jne
iretw
push
jbe
add
rcrb
inc
pop
cmpsl
out
enter
icebp
jno
mov
out
mov
fwait
cmc
mov
or
or
jp
je
ja,pn
mov
and
arpl
data16
loopne
cwtl
and
stc
lds
adc
fnstsw
dec
fisubrl
out
inc
adc
out
adc
push
pushf
aam
mov
iret
mov
ror
outsl
aaa
jecxz
movb
jne
sub
push
pop
and
out
pop
push
mov
movsb
add
mov
dec
cmp
and
add
rclb
stos
adc
cmp
xchg
test
movsl
push
add
sbb
das
xor
sub
cmp
or
cld
sbb
xlat
pop
or
mov
enter
ret
dec
xchg
inc
lods
in
xor
shrb
icebp
sub
sbb
mov
push
in
bound
and
or
sub
sbb
sbb
fnstsw
clc
add
es
inc
into
pop
popa
std
cwtl
enter
xchg
into
push
nop
ret
jb
and
aaa
popa
loop
mov
add
ss
sub
add
jne
es
sahf
aad
addr16
xorb
loopne
push
add
mov
pop
icebp
aam
push
je
cltd
xchg
jl
pop
dec
aas
inc
outsl
jl
mov
sbb
push
jp
mov
or
dec
notb
shr
int
fnsave
fldcw
xchg
movsb
cli
dec
cs
sbb
fsubrl
out
aas
add
push
rcll
mov
jb
pop
roll
mov
bound
dec
cmpsb
adc
movsb
test
dec
cmp
or
push
xor
xor
fptan
insl
xor
and
dec
les
xchg
push
out
xchg
push
sbb
or
pop
cmp
xor
lahf
les
mov
cmpsb
jge
sub
xlat
pop
push
inc
jl
adc
sahf
sbb
jno
sbb
xchg
push
mov
loop
add
push
pop
jno
cmp
xchg
adc
repz
rorb
stos
mov
dec
mov
repnz
aam
sbb
xchg
andl
jl
ja
mov
test
pop
jns
sub
pop
in
addb
push
out
push
mov
or
jns
xorl
sbb
adc
push
sbb
add
dec
movsl
mov
sub
arpl
jge
mov
loop
in
mov
mov
pop
jo
and
sti
sbb
inc
imul
inc
xor
mov
and
pop
imul
sbbb
cmp
into
cmp
lods
loop
xlat
xor
cmp
imul
aam
pop
dec
xor
lcall
imul
pop
cmc
jecxz
or
mov
popa
xchg
or
xchg
xor
shrb
cmp
cltd
add
jp
test
cmpsl
inc
cmpb
cmovg
mov
pop
sub
or
mov
jl
push
dec
jmp
jbe
cmpsb
lret
jo
popa
cmc
sti
hlt
in
mov
fdivl
mov
pusha
push
jae
loope
inc
mov
pop
push
movsl
sbb
pop
push
in
and
in
and
fcompl
pop
pop
mov
test
cltd
dec
int3
movl
js
jnp
xor
shlb
fisttpl
mov
mov
sahf
cmp
adc
jecxz
push
iret
aaa
add
inc
ja
out
and
enter
int3
outsb
cld
push
out
in
arpl
cld
icebp
sbb
mov
sbb
mov
loop
adc
divl
outsl
adc
or
subl
out
or
push
subl
mov
mov
in
inc
sub
dec
inc
das
adc
pop
int
or
inc
imul
xor
mov
cs
or
xchg
sub
leave
les
xchg
das
mov
push
dec
xorb
stos
adc
aas
pop
dec
xchg
in
and
cmp
rolb
nop
or
cmp
hlt
xor
push
mov
cmp
and
shrb
mov
add
leave
or
dec
cmp
enter
fbld
jne
jge
adc
test
pop
mov
js
pop
jo
sti
es
mov
mov
insb
outsb
testl
fadds
ret
fadds
aad
pop
pop
inc
add
in
mov
xchg
xchg
in
iret
popa
mov
out
xor
fisttpll
cmp
pop
jl
out
insl
lret
les
test
loopne
into
sbb
int3
mov
cmp
push
es
das
sbb
pop
clc
loop
shl
jo
fdivrs
je
xor
dec
leave
mov
js
or
pop
cmp
orb
mov
inc
pushf
pop
test
xchg
das
cmp
pop
sahf
pop
sub
dec
fcoml
fadds
sbb
sub
pop
inc
frstor
les
adc
aaa
notb
movsb
inc
rol
push
mov
mov
or
or
jmp
push
cmpsl
and
mov
cmp
stos
or
jns
xor
cmp
and
jge
icebp
mov
mov
popa
scas
dec
lret
mov
mov
sub
push
lret
cmp
add
cwtl
sti
test
mov
push
loop
cmp
test
lcall
inc
pop
pop
jg
or
dec
in
lock
jb
adc
xlat
dec
mov
mov
stos
shlb
cli
paddusb
outsb
outsl
dec
aad
mov
mov
xchg
movsl
lods
sbbl
jge
or
and
mov
inc
pop
out
mov
dec
add
scas
push
sbb
aas
lcall
xchg
sbb
inc
mov
fistps
mov
cli
shll
xchg
nop
scas
cmpsl
or
in
jmp
pop
push
lss
cwtl
lcall
out
movsb
xchg
imul
xor
inc
add
cmpb
xor
mov
dec
fldl2e
lcall
lods
scas
hlt
jbe
lods
in
push
jbe
xor
imul
popa
inc
decl
jb
outsb
fisubs
dec
sbb
stos
xchg
sub
or
stos
xchg
rcl
cmpsb
leave
jo
pop
and
sarb
nop
sti
sub
movsl
push
hlt
sti
or
xor
lret
cmp
cbtw
loope
negl
std
lcall
inc
and
cld
ffreep
enter
fnsave
push
cmp
fsubs
mov
addr16
lea
mov
and
sbbl
cmp
arpl
xor
inc
push
jg
and
data16
push
test
pop
pop
movsb
shlb
dec
clc
sub
sub
cmpsl
fdivr
shrb
loop
cmp
out
paddq
push
push
js
fstps
imul
fbstp
sbb
and
sahf
fcmovne
jno
sbb
xlat
jecxz
xlat
push
addr16
fbld
sbb
aad
pop
pushf
bound
add
mov
pop
shrb
or
addb
mov
es
jbe
mov
ret
mov
mov
std
iret
adc
mov
pop
jge
inc
callw
std
mov
inc
xchg
sbb
test
cmp
lret
jb
in
jge
int
pop
push
popf
mov
bnd
repnz
insb
ljmp
test
sbbb
jnp
xor
arpl
gs
hlt
sbb
andb
aaa
pushf
adc
in
out
imul
je
andl
sahf
sar
pusha
in
mov
or
lea
lahf
and
sti
mov
rclb
xchg
and
and
lea
xor
adc
sbb
adc
cld
aaa
cmpsl
jns
ds
fisubrs
pop
out
jge
dec
push
cmp
lods
push
cmp
sub
dec
xchg
aad
dec
inc
pop
mov
sahf
mov
sti
dec
xchg
shrb
ds
rorb
mov
mov
xor
jmp
scas
dec
cmp
push
inc
fnstsw
repz
in
orl
fdivs
mov
sbbb
jnp
sub
dec
xor
int
add
jmp
sti
xchg
pop
das
pop
add
test
out
divb
stos
scas
push
sbbl
xchg
mov
rorl
xchg
cli
fsts
out
xor
jecxz
sbb
lea
js
xchg
xchg
xchg
fstpl
fmulp
xor
rcrl
rcl
cmp
call
add
into
mov
xchg
adc
dec
lock
ficoms
adc
and
push
imul
jnp
test
mov
repz
push
push
pop
mov
test
jmp
hlt
aas
push
push
sahf
sub
loop
and
mov
lret
pop
and
pop
mov
gs
stos
xor
mov
aas
out
mov
fwait
adc
add
inc
sub
lret
cmpsl
cmpl
outsl
lds
mov
and
xor
sbb
xchg
add
cmpsb
mov
add
test
shll
addr16
test
aaa
shlb
out
xchg
jp
jbe
sbb
add
cmpb
stos
in
out
xchg
add
jmp
or
mov
sub
pop
test
fwait
je
jmp
es
bound
fwait
xor
pop
pop
stos
daa
jnp
dec
jp
insl
nop
jo
mov
mov
sbb
inc
mov
repz
scas
clc
nop
out
stos
icebp
push
sbb
aam
int3
cli
sub
rol
xor
push
dec
ja
fiaddl
dec
cs
imul
cmp
push
inc
cmc
push
push
cld
pop
or
movsl
rcl
xor
cmpsl
dec
movsb
jp
jae
cwtl
imul
loope
dec
lret
pop
pusha
out
mov
pop
cmp
in
data16
popa
pop
rolb
xor
xchg
outsl
scas
adc
pop
outsl
ja
icebp
fwait
imul
or
subb
out
iret
mov
xchg
out
sbb
xor
cmpsl
cld
gs
sub
dec
stos
xor
popa
pusha
loopne
out
out
push
xchg
movsb
insl
push
dec
jle
xchg
test
push
and
out
shr
adc
call
lds
js
jbe
jbe
in
sub
push
or
xchg
fwait
sub
inc
mov
jp
bound
and
add
pop
inc
je
sahf
or
jg
fsubrp
repz
in
inc
movsb
fidivs
pushf
xchg
push
and
pop
lods
inc
nop
jecxz
xchg
or
or
xor
aaa
int3
sbb
stos
sti
mov
add
fxam
cwtl
mov
in
lcall
xor
xchg
lods
or
add
jmp
jg
cmp
outsb
mov
in
notb
fmull
push
or
mov
lea
cmp
pop
add
rclb
xchg
mov
and
insb
cwtl
mov
orl
mov
xor
sbb
clc
bound
insl
repz
scas
xchg
pop
enter
inc
or
mov
xor
enter
out
ljmp
movsb
fdivrp
out
std
sbb
lods
clc
xor
pop
repz
cmp
sbb
mov
xchg
iret
and
pop
push
movb
imul
cmp
xor
ret
cmpsl
or
jg
cmpl
and
sahf
mov
mov
addl
mov
test
cmc
rolb
sbb
lcall
aaa
ret
push
jnp
jae
cmp
pop
jne
ds
cwtl
aaa
jae
and
sub
cli
in
in
aam
inc
sbb
push
add
xor
std
sub
inc
mov
sbb
mov
ror
cmc
mov
pusha
cld
mov
fcompl
pop
jl
lea
or
mov
cmp
les
or
inc
inc
cld
rcrl
pop
jb
shlb
xor
cltd
fsubrs
scas
std
ja
push
adc
and
idivb
inc
push
clc
inc
pop
dec
or
sti
cwtl
out
into
out
pop
xor
pop
test
push
popf
xchg
xlat
mov
int
ror
sub
cld
mov
adc
aam
mov
push
push
into
mov
aam
mov
cli
push
test
and
in
leave
out
or
pop
int
dec
pop
out
inc
shlb
scas
out
pop
mov
scas
lcall
adc
or
stos
sbb
mov
push
xchg
inc
stos
rcrb
and
loop
inc
mov
repnz
fiadds
xor
sbb
xacquire
xor
lret
push
cmpsl
pop
and
leave
mov
pop
imul
push
or
dec
sub
daa
xchg
icebp
pushf
add
ja
insl
cmp
clc
lock
int3
dec
push
cmpsl
jo
addr16
pop
out
push
jle
out
jo
add
pop
notl
lods
leave
loop
aam
xchg
sbb
push
mov
pushf
adc
aam
mov
adc
ss
inc
hlt
shlb
push
cmpsl
mov
pop
inc
inc
mov
push
mov
lcall
fwait
repz
stos
and
arpl
scas
xor
xchg
pop
es
push
test
mov
je
popa
sub
push
mov
push
mov
mov
push
xchg
lret
jge
adc
aaa
fwait
ret
leave
xchg
and
xchg
cmp
or
stc
ljmp
jl
jecxz
xlat
mov
pop
out
sub
xchg
push
and
pop
repz
mov
cmp
cld
es
roll
xchg
fwait
popa
cld
sbb
push
pushw
in
cld
sbbl
lret
pop
jge
and
nop
pop
sbbb
and
mov
and
call
aas
mov
addb
xchg
fstpl
jmp
out
cmpsb
cmc
push
jmp
and
push
cmp
pop
sbb
dec
xor
shll
xor
stc
lcall
inc
int
sahf
js
mov
mov
stos
mov
dec
and
mov
and
jns
loopne
orb
pop
xchg
dec
test
inc
scas
pop
mov
dec
sbb
int3
test
js
arpl
aas
icebp
and
jns
pusha
or
imul
fmuls
scas
pop
adc
js
jnp
dec
xchg
or
jmp
xchg
xor
int3
xor
mov
inc
lods
and
jge
dec
mov
add
hlt
mov
shrl
lods
bound
inc
inc
xorb
pop
and
jmp
nop
popa
jno
bound
and
dec
jge
pop
cmp
mov
fwait
xorl
movsb
std
popa
shll
xor
jge
pop
enter
popa
push
mov
and
push
and
mov
or
cmp
and
mov
mov
and
leave
xor
nop
je
mov
pusha
enter
pop
ret
pop
lods
mov
dec
mov
fdivrl
mov
jb
sub
sbb
sbb
aad
ljmp
sub
inc
mov
inc
test
cltd
rcrl
movsb
push
test
out
or
or
inc
pop
dec
jecxz
inc
mov
out
push
sbb
push
dec
dec
inc
test
xchg
repz
or
push
lahf
repnz
jo
add
out
xchg
sbb
scas
lods
lods
add
int3
popa
xchg
in
loope
rcl
push
pop
mov
movsb
out
sbb
out
push
sub
aas
stos
pop
icebp
xchg
std
setp
xchg
and
sahf
mov
xchg
div
inc
ficoms
inc
lea
or
outsl
cmpsl
fcmovu
adc
xor
or
outsb
bound
mov
call
aam
repz
mov
push
lret
add
mov
jbe
daa
decl
mov
pop
cli
push
mov
divb
pop
adc
mov
mov
sub
push
push
mov
cli
xor
popa
push
mov
imul
add
sub
add
out
nop
adc
sbb
test
mov
stos
shr
cmpsb
cmp
mov
jno
lods
cmp
pop
mov
inc
mov
push
lret
stos
mov
xor
dec
push
enter
push
mov
jge
mov
jbe
or
fnstcw
and
mov
and
fdivs
int3
adc
mov
adc
ss
nop
sub
inc
xadd
fs
das
add
cmc
jecxz
aad
xchg
jnp
in
add
dec
push
push
sub
mov
call
and
aas
or
out
loop
scas
outsb
fcom
cmp
clc
ljmp
push
lret
ja
xor
sub
lcall
call
add
call
aam
push
shlb
xor
out
push
mov
or
ljmp
cmpsb
aaa
dec
add
xchg
es
dec
mov
sub
add
mov
cmp
inc
ljmp
xor
mov
mov
iret
pop
lret
jle
aaa
add
ret
xor
loope
cltd
aad
sub
mov
mov
push
inc
mov
sbb
cmp
hlt
push
push
lea
mov
test
loop
inc
daa
out
iret
xor
inc
call
or
push
sbb
sbb
jl
inc
push
imul
arpl
inc
dec
and
ret
js
adc
aam
hlt
movsl
subb
xchg
imul
inc
dec
ds
repz
aaa
in
lods
jecxz
out
in
shrb
test
add
jb
cmp
dec
call
push
dec
or
and
mov
pusha
orb
es
mov
rolb
add
sbb
pop
mov
and
int
push
lods
cmpsb
subb
lock
out
es
pushf
inc
leave
and
aaa
mov
push
fnsave
xor
out
fsubs
sahf
push
push
xor
and
lea
lcall
dec
xchg
xchg
loop
fsubrl
pop
aad
push
ret
jae
xchg
mov
push
xor
fsubrs
sbb
shll
jmp
jge
dec
test
fisubl
add
cltd
adc
mov
cmp
mov
cmp
outsb
or
sub
add
int3
in
or
bound
pop
std
leave
or
in
lock
adc
add
enter
xor
adc
add
sbb
mov
pop
lods
xchg
or
push
push
inc
sarb
xchg
jns
iret
lcall
mov
push
sbb
mov
and
arpl
add
add
adc
adc
repz
lock
lock
in
adc
sub
loopne
mov
roll
lret
jecxz
les
loope
adcl
mov
cmp
push
jnp
aam
das
mov
xor
fildl
adc
cmpsl
jl
aam
gs
jnp
jns
mov
pop
sub
les
lea
xor
je
in
and
ds
imul
jecxz
sbb
xor
mov
xlat
outsl
arpl
and
shll
je
mov
or
xchg
sub
inc
sub
push
xchg
fstpt
mov
add
jmp
mov
fwait
cmp
ljmp
test
push
sbb
js
arpl
mov
lods
sahf
call
sbb
inc
push
das
mov
cs
inc
notl
popa
jmp
xchg
jp
pop
push
jae
jnp
ficompl
test
lret
dec
lock
sub
arpl
test
ds
sahf
test
out
cs
or
xor
pop
rcr
ja
in
xchg
ja
imul
mov
icebp
push
call
push
xchg
pop
pop
cmp
pop
cmp
sti
ja
popa
adc
mov
ljmp
inc
shl
fiaddl
subl
jecxz
int3
push
enter
jbe
in
xlat
cmc
adc
push
mov
roll
pop
imul
pop
les
ret
or
enter
out
std
jmp
dec
xchg
adc
pop
inc
ja
pop
cmpl
mov
add
aas
or
pop
sub
push
mov
xchg
xor
dec
jle
mov
sub
scas
aad
mov
sub
sti
lods
sub
lock
enter
scas
fadds
imul
leave
jle
jmp
scas
lods
ret
mov
inc
push
sti
mov
movsb
cmp
dec
out
bound
mov
rcll
fs
cs
or
mov
lahf
push
xchg
push
test
xor
stos
test
mov
push
jmp
xchg
nop
mov
cwtl
imul
jns
int
test
movsl
xchg
mov
and
sarb
sbb
adc
or
mov
mov
mov
into
add
jmp
lods
mov
fs
aam
adc
xchg
mov
test
daa
mov
pusha
inc
jae
aas
aad
add
pop
shrb
sbb
cmpsl
into
adc
aaa
xchg
call
pop
dec
lret
fs
movsl
dec
sbb
shll
fs
cwtl
sub
push
in
mov
test
sub
sub
test
in
sub
mov
sbbb
mov
add
pop
enter
push
lods
leave
das
push
adc
sar
int
xor
in
fs
in
test
or
push
gs
into
in
lea
lahf
lock
fs
and
mov
and
push
pop
out
jb
xchg
and
cli
push
sbb
rcr
jno
jae
mov
cs
movsb
mov
in
and
lock
test
xor
jp
pop
sub
adc
clc
push
cmp
test
mov
pop
imul
cmp
insl
push
test
out
add
or
push
fidivl
xor
push
inc
shll
lcall
shlb
lret
outsb
xor
test
leave
fs
lcall
mov
mov
xchg
sbb
jmp
lcall
jbe
lea
dec
out
pop
arpl
push
ror
push
pop
fildl
mov
fwait
mov
ret
jnp
call
or
pusha
inc
sti
mov
pop
xchg
out
js
gs
sbb
jne
repz
imul
ljmp
mov
jp
adc
stc
or
hlt
clc
imul
jmp
ds
add
dec
cld
dec
subb
ret
scas
lret
icebp
inc
test
mov
cmc
mov
int3
ficompl
dec
pop
sub
lcall
push
jno
inc
push
dec
data16
xchg
loop
sub
or
inc
xor
sbb
fistps
repz
inc
and
outsl
pop
push
addr16
roll
ficoms
sarl
pop
cmpsb
imul
fcom
test
mov
push
cli
or
decl
pop
add
je
inc
rol
lret
mov
inc
pop
outsb
jns
lret
add
icebp
sbb
lcall
cmp
adc
mov
out
mov
les
repnz
adc
push
out
in
in
or
mov
jnp
out
popa
sub
icebp
mull
enter
mov
fildll
mov
lcall
aad
and
push
ss
pusha
push
stc
or
sbb
and
xchg
sub
inc
pop
mov
imul
fists
mov
dec
cmp
jno
test
push
movups
adc
lret
add
add
rorb
je
enter
or
inc
fs
aam
xchg
xchg
mov
inc
ret
pop
lret
adc
mov
fmulp
push
add
sbb
mov
cmpsl
addr16
movsb
jge
repnz
in
push
movsl
mov
mov
mov
iret
and
daa
cld
ds
xchg
ret
stos
xchg
or
fwait
mov
jae
les
lock
mov
dec
push
bnd
adc
aam
test
inc
sbb
push
test
inc
sub
lahf
movsb
or
mov
adc
scas
mov
sub
shlb
je
pop
lock
add
mov
ljmp
add
sbb
xchg
or
xchg
mov
push
in
es
clc
testl
addr16
jo
inc
divl
cmp
pop
xchg
jmp
pop
outsl
jle
jb
in
and
sub
jl
xchg
sbb
mov
inc
xchg
pop
mov
dec
mov
sti
fidivrs
mov
fcoms
xor
push
or
sbb
enter
idivl
adc
insb
int3
mulb
push
xchg
test
pop
movsl
jne
ja
mov
and
sbb
inc
jg
mov
or
dec
inc
popf
sbb
imul
lods
repnz
imul
pop
sub
jecxz
jecxz
in
sub
nop
ds
jle
push
sbb
mov
imul
push
cld
imul
inc
loopne
dec
ljmp
std
lret
out
dec
sub
dec
push
gs
xor
lret
aaa
imul
push
mov
es
cmp
or
mov
popf
jle
cltd
fs
shrl
sbb
lds
or
dec
orl
sub
sbb
pop
repnz
and
inc
inc
hlt
in
dec
ror
xchg
push
jge
sub
push
dec
ljmp
push
and
xor
lds
stos
pop
cmp
dec
fists
movsb
imul
imul
xchg
jne
cmpsl
sbb
in
call
fs
dec
test
pop
mov
pop
sbb
jecxz
adc
scas
xchg
sub
cwtl
stos
sub
cld
mov
loope
inc
insl
mov
sbbl
stos
mov
pop
jle
xchg
lcall
repz
leave
imul
insb
xchg
shrl
je
or
or
rcll
rorl
fidivrs
mov
cmp
push
addr16
or
mov
mov
inc
in
xchg
inc
lea
inc
jecxz
pop
mov
cmpsl
push
ja
inc
mov
into
mov
fisttps
loopne
mov
jb
or
mov
cmp
push
cmp
pop
xor
popf
sbb
mov
int3
inc
clc
leave
jo
jno
adc
jne
sub
icebp
or
aam
xchg
repz
mov
int3
out
jp
cwtl
mov
dec
sub
pop
scas
scas
push
das
movsb
cmp
pop
leave
jg
inc
cmc
insl
loope
lods
std
out
jne
pop
sub
es
fldl2e
push
jnp
cmpsl
test
xor
rolb
mov
inc
in
int3
pop
fdiv
cmp
lret
arpl
les
jg
sub
adc
cmc
mov
mov
cmp
sub
or
int
orl
xor
xor
flds
fidivrs
pop
and
fiadds
push
xor
fsub
push
jb
dec
les
sub
push
mov
sbbb
mov
daa
loope
or
mov
sub
lods
loope
popf
ret
lock
cwtl
push
jne
mov
or
das
insb
data16
insb
fs
hlt
inc
aas
mov
repnz
or
ljmp
pop
sbb
sbb
lods
inc
lret
xor
adc
add
sbb
cld
dec
loopne
cmc
dec
adc
xchg
mov
xchg
out
lret
inc
shrl
inc
lds
mov
or
fldl
xchg
je
sub
push
nopl
xchg
test
stos
mov
imul
mov
mov
jnp
ja
add
int3
in
pop
subb
mov
mov
push
pop
adc
jo
jbe
insb
pop
sbb
mov
jae
adcb
cmp
sbb
push
jp
mov
in
iret
xor
imul
aam
adc
jp
mov
cli
jecxz
xor
ss
cmc
dec
inc
cmp
cld
or
push
test
ja
sti
jb
adc
xor
add
adcl
mov
out
lret
mov
sub
cmpsb
sti
test
leave
stos
xchg
pop
or
aas
xor
in
sub
mov
loope
cwtl
inc
ljmp
wbinvd
mov
mov
mov
or
nop
ret
mov
fistpl
dec
sti
xchg
mov
out
adc
xchg
sub
pusha
dec
push
cmp
push
daa
mov
or
enter
pushf
fwait
cs
jnp
jle
and
fcoml
ficoml
inc
mov
fldt
sbb
mov
xchg
pop
popf
pop
xor
shl
shrb
fildl
xor
test
ds
sbb
insb
shrb
inc
push
push
cwtl
sti
sub
test
out
imul
cmp
les
cmc
xor
push
test
sahf
nop
dec
stos
cmp
ds
sbb
mov
cwtl
add
dec
loop
mov
mov
add
cli
dec
xchg
pop
in
jl
std
notb
pushf
cltd
loope
mov
cmp
mov
or
imul
inc
cwtl
aam
outsb
int3
mov
mov
or
push
dec
jns
jns
aad
adc
adc
xor
xchg
adc
inc
mov
jmp
es
adc
xchg
dec
loop
loopne
data16
das
xor
in
adcb
lods
gs
test
xor
pop
cmp
cmp
mov
add
inc
dec
stos
inc
lods
push
dec
into
jg
push
push
and
je
lods
mov
mov
sarb
iret
daa
inc
test
aaa
cmpsl
push
push
adc
add
cwtl
aam
scas
jle
out
cli
sub
jge
aam
enter
test
and
fbstp
out
lcall
call
je
rolb
cld
enter
dec
aad
xlat
test
inc
mov
adc
cmpl
addr16
lock
jns
rol
cli
xchg
push
add
jle
inc
scas
lret
cmp
jmp
adc
dec
xchg
in
ja
aad
lods
adc
sbb
sahf
push
repnz
pop
scas
rcll
push
and
nop
fwait
mov
adc
mov
iret
mov
or
mov
sbbl
add
lret
jo,pt
add
jge
pop
xchg
test
inc
push
sub
mov
ljmp
sub
gs
nop
xlat
cmp
shlb
out
in
cvtps2pi
sbb
outsl
inc
push
adc
lahf
pop
pop
or
cwtl
sub
ljmp
lods
mov
jno
cmpsl
jmp
inc
arpl
push
xchg
popf
out
push
dec
out
arpl
bound
jmp
pop
icebp
xor
mov
lcall
out
adc
push
xchg
rorb
xchg
mov
dec
pushf
and
cwtl
pop
in
mov
mov
movsb
rcrl
pusha
enter
and
decb
loopne
mov
mov
jmp
mov
lods
push
mov
imul
cmp
jno
loope
in
push
fstpl
pop
adc
mov
push
ret
inc
jae
xor
sbbl
iret
lock
pop
sbb
stos
je
xor
sub
pop
out
push
notb
lds
rorb
out
imul
xchg
aam
mov
jp
and
jns
pop
mov
pusha
cmc
hlt
adc
ljmp
testb
aad
cmp
loopne
pop
into
scas
and
cmp
mov
pusha
outsl
mov
dec
xor
xor
and
bound
mov
xchg
mov
cwtl
mov
fildll
pop
fadds
xor
pop
rorl
jg
or
sub
mov
cli
bound
lret
adc
push
jmp
dec
xlat
ret
jne
xchg
jp
iret
push
pcmpgtd
ljmp
mov
sti
and
mov
cmpsb
sbb
jo
push
mov
dec
xor
push
loop
test
les
add
and
push
sbb
mov
jne
mov
clc
jne
test
lret
sarb
jecxz
pop
out
nop
mov
jne
xchg
movsl
movsl
sbb
pop
or
pop
ret
push
xchg
cltd
insl
mov
and
fistpll
mov
jecxz
adc
sbb
mov
lds
dec
lods
xchg
fnstcw
fiadds
stos
adc
lea
xorb
xor
xor
icebp
sub
push
sbb
int
or
push
call
outsb
int3
lahf
inc
leave
or
stos
test
mov
xchg
xchg
push
sub
mov
in
cmp
loope
xor
test
ljmp
fidivs
clc
cmp
cmp
in
enter
dec
push
mov
sub
popa
mov
mov
test
into
cs
mov
and
out
loopne
rep
rorb
imul
clc
pop
sub
test
dec
cmp
fldl
stos
cmp
fucomi
jle
mov
and
mov
int
sbb
btc
rcrl
cwtl
sub
mov
lods
scas
scas
pop
clc
icebp
xor
shrl
and
add
lea
mov
jmp
mov
cmp
repnz
mov
bound
mov
mov
push
adc
outsl
adc
inc
push
daa
mov
jmp
dec
in
pop
mov
insb
push
dec
es
inc
mov
imul
stc
in
cmc
int
push
dec
mov
jecxz
jg
sbb
mov
mov
bound
or
jo
fnsave
mov
add
pop
test
sahf
xlat
sbb
cwtl
add
inc
push
aam
jecxz
mov
je
push
and
bnd
pop
iret
mov
stc
fmuls
ret
add
dec
push
add
xor
stos
push
daa
pushf
sbb
xchg
ret
or
xor
xchg
clc
sahf
mov
enter
out
jecxz
add
cmpsb
push
or
fs
jp
les
insl
mov
sub
pop
mov
mov
lea
orl
or
cmp
mov
and
test
in
insb
dec
enter
cmpsl
sub
mov
mov
ret
or
inc
push
lods
sarb
std
lods
fldl
pop
rcrl
lock
ja
and
mov
mov
aaa
dec
mov
hlt
loop
jecxz
dec
dec
iret
fiaddl
jecxz
mov
push
jns
movsl
aaa
fcomps
test
pop
mov
cmp
xor
push
xchg
and
into
daa
cmc
aam
adc
adc
xchg
les
mov
sbb
xor
pop
cld
inc
pop
test
not
xchg
sbb
fcomip
loopne
dec
fsub
inc
pop
jae
mov
lret
or
sbb
incl
xor
fsubr
xchg
dec
mov
xor
sbb
sbb
cmp
jo
push
test
loope
clc
push
jns
xchg
add
jge
rorb
test
lock
insl
inc
push
xor
fcoms
insb
jne
out
scas
push
pusha
call
or
dec
adc
fcoml
mov
pop
ret
int3
fwait
test
int3
sbbb
int
dec
xchg
inc
or
sub
cmp
addr16
push
mov
test
dec
popa
cmp
jnp
dec
ss
pop
pushf
out
fcmovnbe
xchg
xor
in
inc
imul
push
cmp
outsb
sarb
jle
mov
rcrb
inc
movsl
sbb
loopne
adc
lea
xor
xor
dec
add
push
cmpsl
jne
jns
add
inc
pop
xchg
test
and
pop
mov
lcall
cmp
dec
pusha
and
adc
sbb
lret
sbb
mov
andb
xchg
jns
popa
jns
push
pop
pop
icebp
mov
inc
cli
dec
cmp
sbb
into
shrb
popf
dec
jns
leave
lret
cld
stos
mov
jne
and
push
inc
inc
int3
mov
mov
frstor
repz
mov
aad
rorl
lret
push
out
pop
out
pop
cmpsb
and
mov
stc
movsb
or
pop
movsb
stc
cwtl
xchg
xchg
cs
loope
mov
jo
xchg
add
cmp
push
scas
fstps
int3
subl
inc
push
mov
hlt
pop
mov
sub
mov
and
mov
dec
xchg
mov
lahf
outsl
ja
jo
pop
out
fwait
pop
or
sub
les
aas
and
lahf
adc
addr16
mov
enter
and
xchg
pushf
mov
pop
lret
push
rorb
stc
pop
lret
loope
xchg
xorb
dec
cmp
aaa
loopne
imul
sbb
call
test
inc
and
push
jmp
inc
pop
jle
jbe
mov
lods
or
xor
jp
pop
aam
or
push
addr16
js
cmc
mov
lcall
sub
aad
pop
aam
scas
nop
scas
xchg
xor
pusha
adc
cmp
mov
std
jp
pop
pop
cmpb
daa
cltd
jno
out
inc
psrlq
mov
stc
or
cld
sub
mov
test
sub
pop
scas
outsl
xlat
negb
xchg
loop
mov
xor
movsb
out
stos
and
cs
fildl
or
aam
push
outsb
jae
adc
test
hlt
sbb
push
or
mov
jno
pushf
fsubs
adc
hlt
push
jle
or
repnz
mov
iret
insl
fwait
xlat
fiaddl
sbb
fisubrl
xor
enter
mov
lahf
fcomps
fmull
xchg
imul
cmp
inc
fimuls
movsl
lcall
scas
jl
cltd
loopne
pop
repnz
xchg
mov
and
xor
insb
or
jecxz
sbb
dec
pushl
push
mov
js
insl
mov
in
dec
insb
xor
mov
or
or
cmp
jae
jg
mov
push
scas
jmp
mov
push
and
imul
loop
in
pushf
lds
jno
incl
jno
push
xchg
imul
mov
xor
and
xor
mov
jle
inc
ja
mov
clc
push
pop
sbbb
jne
xchg
inc
pandn
test
add
jb
sahf
cmp
dec
fiaddl
add
daa
inc
fdiv
test
pop
adc
mov
cltd
shlb
ds
test
pop
ret
pushf
xchg
adcb
cmp
leave
sbb
int
pop
rcll
arpl
dec
cmpsl
int
je
std
push
and
cmpb
cli
cltd
mov
sub
mov
fwait
gs
mov
dec
pop
xor
clc
fs
push
std
sbb
mov
js
cs
mov
push
xor
call
in
inc
mov
jle
sti
dec
adc
and
shrl
mov
inc
loope
call
inc
jmp
and
lods
pop
cmpsl
xor
stos
add
dec
xor
int3
push
mov
sti
pop
sbb
sarl
fidivl
jns
jle
enter
cltd
jne
pop
call
call
imulb
shll
pop
mov
and
sbb
test
fbld
and
lret
jbe
bound
pusha
stc
cmp
mov
movaps
rcrl
rol
lock
fisttpl
xchg
outsb
push
xor
nop
sbb
mov
fldt
inc
ffreep
cld
imul
xchg
jge
cld
mov
aas
jmp
loope
fsts
push
daa
ja
out
js
push
inc
pop
and
insl
xor
sahf
push
cmp
fisubs
insl
mull
mov
jae
pop
ret
loope
lock
inc
sub
in
lds
inc
scas
std
stos
outsl
ljmp
icebp
dec
jns
cmp
test
frstor
mov
add
std
lret
mov
and
dec
iret
shll
repz
addl
sbb
fiadds
bound
dec
fdivl
xor
and
outsb
fcmovnbe
pop
addb
outsl
mov
rolb
loopne
mov
sub
add
push
sahf
in
adc
shll
test
pop
xor
sub
jmp
mov
fdivrp
pushf
into
imul
push
sub
jl
and
mov
ja
jne
decl
std
fcmovne
push
imulb
and
shll
std
lods
add
stc
inc
and
scas
fs
cmpsb
mov
jl
in
mov
lea
xchg
sbb
xchg
sbb
hlt
xlat
dec
jne
mov
jbe
jno
lods
push
push
lret
clc
dec
in
std
and
shlb
cmp
xlat
jp
mov
cmp
rorb
sbb
cmp
inc
xchg
mov
pop
cmp
inc
fisttps
in
out
testl
sub
out
das
push
and
inc
dec
es
lahf
test
test
cmpsl
inc
loopne
add
sub
test
test
jle
mov
and
mov
mov
xor
mov
rorl
cmpl
fs
xor
mov
repnz
xorb
mov
outsb
sub
aaa
inc
mov
gs
pop
ror
sub
loop
mov
cmp
and
repz
and
and
fidivrs
test
adc
aas
inc
loopne
cltd
ror
jle
or
ret
adc
sub
and
stc
outsl
rolb
out
je
push
cli
push
test
adc
mov
nop
lea
andl
push
in
add
mov
test
in
cmp
popf
inc
dec
rclb
and
jno
out
pop
pop
dec
aam
stos
sbb
pop
or
inc
outsl
pop
pop
int3
push
pushf
jae
andl
int
jmp
lods
clc
inc
loope
add
push
mov
test
fistpl
lea
lock
adc
jbe
out
imulb
cltd
xchg
pop
mov
pop
repnz
aad
mov
ficoms
in
jbe
sbb
xchg
mov
add
ret
pop
arpl
enter
sarb
out
lods
imul
adc
xchg
xchg
pop
mov
dec
mov
inc
push
and
xchg
jle
pop
mov
scas
push
sub
sub
or
mov
es
clc
inc
fstps
jp
aam
add
sub
gs
gs
ss
sub
xchg
scas
mov
insb
jno
jno
shlb
dec
mov
pop
mov
es
xchg
enter
mov
or
mov
mov
sahf
cmp
sbb
and
push
mov
cld
mov
leave
jp
pop
cli
cmp
shr
int3
movsl
addr16
pusha
out
stc
ljmp
mov
sub
sub
add
pusha
cmpsl
xchg
pop
cld
cmc
adc
pusha
pop
sbb
adc
push
daa
xchg
mov
xchg
xor
ficoml
dec
add
sub
scas
pop
leave
testl
int
jmp
push
cmp
sub
test
mov
cmp
mov
adc
and
xchg
lahf
fmull
decl
mov
mov
inc
sbb
or
xchg
push
fcmovne
mov
cmpsb
popf
movsl
mov
and
add
mov
cmp
jg
mov
mov
aam
dec
loope
in
push
jbe
div
jg
inc
add
mov
dec
xchg
stc
fldt
jp
mov
popf
popf
lret
sahf
cli
xor
daa
ds
xchg
cwtl
imul
and
mov
xor
mov
xchg
ret
add
push
jl
insb
dec
fnstcw
in
mov
mov
ffreep
add
pop
nop
stos
push
dec
inc
mov
push
dec
push
scas
movsb
ret
xor
repz
cmp
imul
cmp
xor
inc
add
push
stc
and
cmp
cs
pushf
lret
scas
inc
sub
shlb
cmp
dec
push
jne
dec
cmp
cmp
inc
test
sub
out
sbb
inc
sub
jecxz
mov
xchg
xor
mov
pop
jbe
xchg
sbb
sub
arpl
into
xorl
aam
mov
je
dec
cmp
int
add
in
ret
loop
movsl
push
mov
lret
cmp
mov
jb
in
cltd
inc
test
jp
in
pop
push
jl
icebp
fs
dec
and
xchg
add
jo
dec
test
sahf
ja
jno
enter
dec
and
mov
shll
inc
xchg
xor
and
loop
test
aad
int3
adc
xchg
mov
add
and
add
push
adc
push
adc
ss
pop
mov
add
mov
jmp
mov
or
sqrtps
jl
xor
pop
cltd
in
pop
into
adc
xor
ljmp
movsb
idivl
cmp
jb
nop
leave
dec
push
loope,pt
push
add
dec
sbb
xorb
test
pop
jmp
sbb
popf
cmpsl
mov
add
cltd
dec
dec
gs
loop
test
sub
mov
js
cltd
arpl
addl
sbbb
mov
dec
mulb
push
adc
xchg
push
fstpt
jns,pt
mov
xchg
mov
sub
push
test
cmpl
insb
push
pusha
pushf
cmp
jmp
lods
lds
xor
clc
mov
mov
cmp
mov
rcr
stos
jmp
push
xor
cmc
lret
aad
int3
pusha
jl
mov
into
and
loop
pop
dec
or
push
cmp
pop
dec
xchg
in
shll
jmp
insl
cmp
dec
dec
jns
pop
dec
add
imul
adc
stc
int
or
mov
and
inc
fsubl
nop
nop
cwtl
push
xor
bound
push
jne
fldt
or
jnp
jp
pop
pop
inc
mov
jl
xor
inc
push
xor
pop
js
push
inc
das
mov
add
push
in
bound
test
dec
gs
xor
push
cmpsl
in
arpl
out
psrlq
arpl
test
lds
mov
mov
out
jo
mov
dec
aaa
cwtl
ds
xor
cld
je
and
mov
xchg
fiadds
xchg
add
je
mov
arpl
jl
das
scas
mov
xlat
xchg
ja
incb
push
idivb
jnp
repz
aaa
xchg
sarl
outsb
xlat
mov
mov
hlt
mov
dec
sub
jno
sub
pop
lds
and
xor
sbb
rolb
adc
pop
pop
lods
push
inc
es
cmp
push
stos
stc
jge
mov
mov
cmp
mov
xor
je
mov
cmpsb
jns
ss
imul
inc
xchg
lods
cmp
push
int3
fisttpl
jns
cmp
jo
das
mov
fs
add
xor
pop
jmp
and
aaa
push
mov
sub
push
outsl
fucomp
sub
sub
std
inc
imul
cmpsl
and
cmp
cwtl
gs
in
test
xchg
inc
mov
cltd
mov
add
jae
icebp
out
cli
mov
add
scas
xchg
push
sbb
icebp
nop
inc
hlt
lcall
aad
out
addr16
sub
ljmp
sbb
sub
jb
cmp
fisubrs
cli
xlat
jno
sub
or
jbe
inc
shrl
add
add
adc
pavgb
fdivp
inc
aas
inc
xchg
mov
fabs
dec
mov
inc
cmpsl
mov
stc
fnstcw
push
pop
call
adc
xor
cmpsl
repnz
and
stc
jge
adc
add
leave
movsl
mov
enter
insl
mov
ret
lahf
in
lret
pop
xchg
mov
cld
enter
cmpsl
dec
xchg
adc
mov
cmp
jb
push
popf
lock
pop
inc
in
movsl
pusha
push
jnp
jnp
jne
dec
sbb
int
lea
mov
xorl
test
les
pop
cmc
xor
inc
in
call
inc
div
pushl
out
in
mov
ljmp
mov
in
inc
mov
dec
insl
push
adc
sbb
jge
sbb
cs
add
xor
push
inc
lock
testl
pop
fimull
out
inc
scas
sbb
mov
data16
or
xor
adc
cltd
fwait
xchg
shl
jns
inc
lret
lds
xchg
jnp
cltd
aad
mov
sub
mov
repz
shrl
lods
inc
stc
mov
inc
cmp
scas
add
fucomp
jne
push
adc
leave
or
add
lods
sbb
mov
ss
int3
xchg
cmp
mov
aam
sub
jne
xor
xchg
add
dec
mov
call
mov
mov
cli
jl
adcl
lret
jl
rcr
out
dec
sbb
jg
mov
push
pop
xchg
cmp
dec
inc
xor
arpl
mov
dec
pop
inc
push
cmpb
adc
and
sub
mov
or
pop
jno
in
xlat
inc
movsl
mov
outsl
mov
test
daa
push
movsb
mov
or
fisubs
dec
sbb
fisubs
add
movsl
icebp
xor
les
fisubrl
insl
and
dec
fnsave
pop
orb
xor
push
subb
lea
rolb
push
filds
cld
adc
jae
addr16
and
loope
push
clc
add
mov
imul
lock
lcall
into
sbb
or
push
movsb
xchg
ljmp
or
cmp
adc
int
dec
jns
cmp
shr
jge
or
stc
xor
jmp
popa
pop
ret
enter
lods
movsb
lods
out
out
mov
rcrb
push
mov
in
add
pop
mov
lds
les
mov
xchg
je
iret
add
in
addr16
dec
imul
pop
jg
sub
cli
pop
sbb
cmp
cltd
cmp
pop
pop
lcall
lret
enter
jae
subb
jmp
pusha
loopne
and
adc
push
int3
add
xchg
repz
push
or
addr16
cmp
cmpsb
gs
shl
jns
insl
push
push
sub
xchg
xor
sbb
adc
xor
aaa
fistpl
call
ss
jmp
leave
loope
add
ss
addr16
mov
bound
jb
cmp
sbb
dec
movb
jle
ja
ret
sub
andl
mov
xchg
jg
jbe
adc
sbb
cmpsl
mov
mov
mov
int3
es
lret
and
dec
iret
sarb
adcl
sbb
divl
loopne
mov
popf
mov
lea
jnp
stos
repnz
xor
hlt
mov
jmp
repz
xchg
add
and
divl
jle
and
add
push
lods
pop
leave
jns
jp
cli
shr
fidivs
and
mov
movsl
jmp
or
xchg
dec
cmp
ficoml
and
jnp
cltd
test
out
cli
test
outsl
jno
jp
cltd
mov
fisttps
pop
mov
sbb
cs
fcoml
lahf
lret
test
and
sahf
sub
xor
sub
stos
add
cmp
int
push
sbb
daa
pop
mov
xchg
cmp
inc
cwtl
mov
call
notb
bnd
xor
push
pop
stos
push
and
add
mov
xor
nop
mov
shll
ds
inc
jmp
mov
push
fdivrs
loop
and
sti
popfw
das
lcall
out
cmp
sbb
push
fucom
mov
jecxz
dec
push
or
scas
inc
mov
and
clc
sub
pop
addr16
pop
lock
lock
loopne
aaa
cmp
mov
jo
jle
sti
sbb
jp
scas
insb
mov
lods
in
jmp
arpl
jmp
mov
xor
xchg
sbb
push
jp
cld
test
pop
arpl
mov
pop
pop
jecxz
aam
stos
insl
insb
out
out
lea
movsl
jp
test
cmp
dec
out
out
cld
jp
jmp
mov
dec
push
scas
enter
out
cs
push
xor
jo
adcl
sbb
cmp
ljmp
in
mov
inc
dec
shrl
mov
mov
hlt
ds
push
and
repnz
mov
mov
dec
push
shrl
jns
daa
push
xor
fcomip
pop
adc
jns
mov
pop
add
inc
jecxz
loopne
pushf
mov
out
mov
shl
out
or
es
imul
cltd
xchg
les
sahf
loop
mov
mov
and
lds
mov
insl
mov
fs
je
xchg
cwtl
add
loop
xor
clc
inc
sahf
mov
lods
popa
inc
repz
sbb
in
jp
test
ds
inc
sub
and
lock
imul
and
inc
out
dec
call
scas
movsb
cmp
and
inc
orl
lods
cmp
orb
add
jp
jg
and
lret
xor
fnstenv
jle
cmp
xor
fmuls
ret
xchg
aas
mul
mov
idiv
enter
pop
cmp
mov
movsl
pop
cmpb
pushf
sub
cli
mov
mov
int3
repz
jle
loopne
sbb
ja
xor
dec
fisttpl
dec
out
pop
es
daa
mov
fidivrl
pop
dec
stos
gs
fisubrl
jno
mov
sub
out
push
jge
sbb
xchg
fcomip
sahf
cmp
imull
xor
lcall
lea
pop
sub
sub
mulb
mov
in
xor
out
xor
or
push
test
iret
xchg
sbb
fldt
jb
fstps
mov
and
clc
outsl
int3
into
addr16
mov
incb
jg,pn
jmp
xchg
xor
or
pop
loopne
xchg
xchg
imul
mov
out
mov
pop
fsub
addl
lock
add
sub
jge
fmulp
sbb
jns
es
sarb
dec
mov
push
out
imul
rol
stos
pop
cmp
sarl
xor
or
sub
and
test
jae
jle
aad
pop
adc
andl
xor
lret
enter
or
and
fwait
pop
gs
out
push
push
pop
fnstenv
xor
scas
cmp
enter
cmc
dec
int
ret
xor
sub
xchg
push
lcall
xor
mov
mov
lds
pop
cmc
lret
inc
inc
mov
mul
test
clc
loop
jl
add
jo
adc
cmp
adc
sub
or
mov
dec
shrb
popf
push
jbe
imul
rorl
arpl
rolb
rcrb
lret
pop
inc
aaa
mov
rorl
pushf
call
inc
fcmovnu
inc
or
sti
add
push
mul
hlt
jno
fs
shr
push
fisttpll
sub
jnp
jl
push
push
rcrl
ss
inc
cld
fsubl
and
out
mov
sarl
inc
shlb
fiadds
xor
repz
test
add
and
fmull
or
daa
xor
in
lret
jmp
mov
fdivr
jmp
push
xor
call
je
cmp
lret
or
jp
cmp
inc
push
pop
clc
std
dec
jl
loop
hlt
aad
nop
cmp
add
xor
call
lret
stos
pushf
or
sbb
mov
jge
adc
or
mov
xchg
mov
add
mov
arpl
push
push
xchg
mov
mov
pusha
or
push
adc
pop
mov
mov
je
xor
cmp
push
dec
repz
mov
insb
data16
in
shlb
push
xchg
and
das
out
pop
loopne
sbb
fdivs
sbb
aam
call
and
movsb
aas
mov
loopne
dec
fsubr
scas
fsubl
push
sub
int
inc
fsubl
xchg
mov
aas
pop
dec
out
sbb
pop
nop
aaa
sarl
xchg
cld
sub
cmp
jbe
inc
xchg
repnz
std
fildll
adc
jb
or
lea
add
aaa
fnstenv
ss
mov
ds
cltd
das
repnz
push
xchg
into
push
inc
push
inc
and
mov
les
je
stos
pop
mov
test
or
jb
or
cmp
jo
add
xchg
in
dec
inc
cmp
pop
jns
mull
ja
popf
or
std
arpl
push
jp
je
shl
add
and
jo
lret
enter
mov
or
add
cmpsb
aas
adc
pop
stos
icebp
mov
dec
scas
sub
adc
and
jl
mov
jns
or
js
flds
ret
cmp
or
xchg
push
pop
jno
inc
mov
mov
adc
gs
popf
ds
sub
je
repz
or
call
xor
es
pop
int
std
xchg
sarl
pushf
xor
push
sub
roll
pop
loopne
mov
jb
xor
out
push
pop
loopne
add
sahf
push
ljmp
mov
es
xchg
xchg
mull
jle
jecxz
or
mov
int3
sarb
mov
lods
and
sub
push
xor
ja
mov
or
xor
jmp
mov
jo
sbb
inc
sbb
dec
dec
mov
fstpl
je
push
pop
pcmpgtw
push
pop
test
maskmovq
imull
loope
add
push
cmp
lock
ret
fdivrs
imul
xchg
scas
mov
dec
sub
sub
lds
out
jle
enter
jbe
cld
pop
sbb
jae
idivb
cmp
dec
dec
rcrl
je
cmp
dec
sub
icebp
pushf
int3
imul
andb
in
push
lea
xor
faddl
jge
out
inc
daa
cmp
testl
push
lcall
cli
or
repz
inc
push
push
jecxz
cwtl
in
out
out
pop
ja
pop
outsb
je
lds
iret
ja
jbe
test
xchg
xchg
es
adcl
adc
nop
and
jmp
sub
call
adc
stos
imul
xchg
cmp
dec
gs
sub
add
int3
addr16
mov
sub
mov
or
into
push
pop
xchg
jns
fwait
mov
movsl
les
mov
sbbb
mov
and
xchg
dec
icebp
leave
dec
repnz
es
jo
popa
push
imul
push
cmpsb
xor
jno
mov
stos
lret
pop
sti
and
dec
dec
jno
arpl
xchg
test
push
push
js
mov
cwtl
out
addl
fld
cmpsl
aas
inc
out
push
pop
adc
jb
int3
icebp
add
stos
dec
sbb
stc
enter
in
in
popf
fsubrl
dec
jge
push
sub
aas
out
mov
and
cmpsb
and
es
scas
and
xlat
jns
mov
pop
test
test
cmp
fistl
and
mov
mov
jb
nop
jmp
popa
cmp
adc
dec
pusha
pop
add
mov
shll
stos
rcrb
pop
fbstp
push
mov
inc
loope
dec
fistps
add
xor
xchg
int3
imul
push
adc
inc
enter
push
clc
mov
aas
shll
inc
mov
pop
mov
cmpsb
adc
sbb
fists
paddb
subl
roll
xor
mov
fadds
lahf
mov
dec
sbb
push
sahf
in
sbb
leave
daa
andl
or
rcll
mov
int
push
ret
int
dec
js
outsl
arpl
fs
ret
sbb
jb
adc
cmp
rorl
imul
dec
mov
xchg
adc
cld
jp
mov
imul
mov
and
inc
shr
xchg
mov
add
loop
mov
cmp
into
das
inc
aas
rcll
icebp
xor
xchg
jne
dec
inc
mov
mov
jno
inc
lock
dec
push
adc
test
mov
dec
push
enter
enter
lcall
icebp
mov
push
negl
mov
test
pop
sub
dec
mov
sti
dec
fsubr
push
and
popa
fs
lret
dec
dec
mov
jae
push
push
ret
pop
xchg
xchg
xchg
push
std
fnstcw
pop
notb
pop
test
pushf
sahf
clc
jmp
xchg
mov
fadd
push
inc
fmulp
movsb
lock
mov
lods
adc
or
aam
lret
sub
in
xchg
adc
sar
pop
dec
sub
xor
imul
mov
in
adc
mov
mov
lock
mov
je
in
loop
int3
fs
movsl
xchg
mov
out
ds
jge
jecxz
push
pop
loope
or
mov
iret
scas
dec
xor
jecxz
jle
popf
sahf
xchg
out
das
push
lret
lds
sahf
sbb
test
xor
rcll
out
orb
out
ljmp
lret
mov
shll
shlb
push
mov
dec
mov
imul
lods
xor
lahf
arpl
or
add
jp
shl
aam
dec
add
mov
push
mov
ja
hlt
xlat
aas
xchg
negl
jge
or
in
ja
addr16
test
rcrl
aad
dec
stos
sub
and
out
mov
jae
cwtl
mov
incl
push
aas
cmpsl
pop
dec
xlat
jmp
add
adc
push
jns
shrl
aam
mov
mov
movsb
fildl
test
lcall
jo
loope
push
sbb
mov
aaa
mov
push
dec
nop
jne
stos
nop
jmp
std
mov
xchg
or
cmp
jecxz
lret
test
js
add
and
lret
test
test
shl
les
sahf
or
mov
pop
std
cli
or
js
mov
push
push
and
push
or
dec
jecxz
insl
popf
jmp
add
jne
leave
and
popa
or
inc
pop
cltd
xchg
or
mov
incl
xlat
loope
pop
test
sub
and
mov
ljmp
inc
mov
push
mov
lcall
cwtl
mov
mov
das
sahf
sbb
ret
ja
movsb
mov
pop
pop
xor
lcall
pusha
fs
je
fdivrs
inc
or
cmc
xor
pop
jno
push
imul
or
aam
mov
cmp
das
lods
cmpsb
mov
fsubr
test
fildll
push
movb
inc
ja
jge
pushl
subb
fdivrl
loop
inc
or
cli
or
xor
pop
dec
loopne
sub
sbb
fcoml
stos
xchg
cmc
mov
stc
mov
imul
lea
idivl
hlt
je
outsl
es
cld
stos
mov
xor
in
out
mov
sahf
adc
mov
enter
cld
push
popaw
jo
mov
mov
and
repnz
push
sbb
push
or
push
xor
mov
sub
xchg
shrb
cmp
popf
test
das
jg
inc
cltd
push
xchg
mov
mov
inc
popf
add
sub
cld
cmp
incl
pop
jae
mov
movsl
hlt
aad
int
or
mov
dec
in
fbstp
leave
mov
push
xchg
xor
add
sub
jle
jl
in
movsb
xchg
adc
adc
pop
or
mov
nop
lea
add
imulb
ja
jb
lods
cmp
inc
imul
pop
gs
out
mov
pop
cmc
push
jnp
add
push
or
add
mov
dec
or
adc
mov
push
je
jp
out
and
mov
or
pop
pop
stos
mov
cmp
fimuls
inc
sahf
push
loopne
sbb
dec
pusha
cmp
lods
add
mov
xor
push
pop
out
in
out
jns
movl
sahf
imul
nop
repz
and
sbb
iret
outsl
inc
outsl
mov
jg
aad
call
cmp
cmc
and
repz
rdtsc
int
add
sub
cmp
repnz
adc
jecxz
cmp
mov
or
test
push
inc
xor
mov
ror
sahf
js
scas
ja
ljmp
push
cmp
inc
and
jge
mov
dec
adc
jno
pop
push
dec
das
daa
lahf
mov
std
ja
and
sub
jo
cwtl
sarb
add
clc
lcall
cmp
iret
adc
xor
xor
ss
jae
adc
push
sti
out
das
cltd
fwait
push
inc
mov
dec
js
popf
pop
push
pop
mov
daa
into
cmp
btr
imul
mov
xor
pop
cmp
inc
dec
insb
push
shlb
xor
add
js
shrl
insb
sbb
mov
jns
ds
mov
es
sti
add
jg
push
or
scas
push
xchg
cs
lds
inc
popa
rcr
lods
xchg
lock
loop
test
lcall
lret
dec
daa
je
push
cmp
xchg
dec
sbb
adc
mov
jg
pop
cmp
push
inc
jl
pop
test
xchg
mov
cld
mov
aad
xlat
sub
cmp
arpl
xchg
sbb
pushf
and
xor
push
push
xchg
sub
jge
pop
ret
dec
test
idivl
je
jae
cld
push
xchg
pop
ja
enter
cmp
cwtl
pop
mov
stos
mov
jg
in
nop
push
lret
insl
mov
cmp
sysexit
mulb
ret
adc
mov
mov
hlt
loopne
loopne
scas
roll
cmpsb
test
decb
xor
dec
leave
dec
rol
xchg
lahf
lock
std
or
mov
inc
repz
sti
jmp
sahf
sbb
push
cmp
adc
shrl
cmp
rsm
inc
insb
mov
and
adc
mov
mov
jecxz
mov
pop
inc
add
stc
jle
pop
iret
dec
push
scas
in
addr16
lea
dec
out
ret
sahf
mov
stos
xchg
dec
mov
jnp
inc
lea
pop
add
js
repz
ds
fildll
in
popf
scas
jb
mov
out
sub
stc
fnstsw
xchg
dec
mov
aaa
jecxz
xchg
inc
cmpsb
lock
jg
mov
clc
cmpb
adc
sbb
cmp
aaa
out
xor
mov
inc
sub
rcll
jae
fs
mov
jmp
or
ret
jle
pop
jnp
adc
jmp
repz
sub
sub
std
adc
test
and
adc
mov
lahf
cmp
cs
pusha
mov
repz
pop
or
inc
loop
cmc
xor
ljmp
imulb
adc
pop
sbb
ficoms
push
outsl
xor
jl
or
subl
mov
fwait
scas
inc
and
mov
in
repnz
mov
add
and
aam
cmp
ja
jne
sub
xor
lods
cmp
addr16
shl
lea
inc
xchg
imul
jno
ss
xor
fcmovnbe
shll
mov
icebp
lret
or
mov
int3
daa
push
inc
mov
xlat
push
sbb
adc
in
adc
movsb
or
jbe
mov
mov
dec
lahf
pop
outsb
lret
pop
cmpsb
fsub
pop
push
adc
or
jp
sti
push
data16
mov
cmpsl
cmp
shlb
notb
icebp
inc
and
fdivl
iret
pushf
cltd
in
mov
mov
aam
testl
lcall
aas
test
push
aad
fidivrs
sti
and
sbb
idivb
lahf
fbld
lret
repnz
sub
mov
and
mov
leave
mov
ret
push
lahf
sbb
mov
movsb
js
jmp
pop
lret
fistpl
mov
test
and
and
shlb
jle
jge
add
xchg
mov
push
jae
les
cmp
mov
mov
cld
in
xchg
inc
jecxz
jmp
push
cmp
pop
push
test
xor
sbb
aaa
iret
std
jb
xor
jecxz
adc
pop
mull
push
push
mov
rclb
mov
ret
inc
pusha
adc
cmp
insl
add
js
adc
scas
in
sbb
popf
leave
inc
inc
mov
sbb
orl
mov
sub
pop
js
ds
jo
cmc
pop
daa
inc
adc
pop
pop
jp
dec
shrl
cmc
popf
mov
mov
jne
xchg
mov
ljmp
icebp
xchg
aaa
icebp
shll
loopne
pop
push
mov
jl
push
mov
lret
jnp
ja
mov
inc
cmp
jecxz
sarb
or
mov
data16
jp
ja
mov
and
and
pushf
stc
pop
mov
and
pop
aad
scas
dec
xchg
mov
aam
cmp
scas
sub
mov
inc
pop
in
out
mov
cli
or
mov
or
rcr
outsb
sbb
out
fadds
outsl
xchg
insl
adc
and
fdivr
or
mov
sbbb
dec
imul
into
dec
inc
arpl
xchg
popf
inc
adc
mov
pmulhuw
add
jbe
xchg
imul
aam
push
je
mov
inc
push
push
and
lea
mov
push
xchg
leave
xchg
rolb
xor
sbb
jo
mov
and
xchg
div
mov
pop
aaa
pop
xlat
out
fisubrl
jecxz
mov
mov
dec
sbb
imul
data16
repz
pop
cmp
pushl
xchg
test
ja
pop
ja
push
sbb
arpl
call
lea
mov
jb
mov
pushf
sub
cwtl
insb
ss
pop
xchg
inc
fdivr
shrb
stos
adc
push
push
addr16
or
jmp
jge
mov
ljmp
xchg
jno
xchg
icebp
dec
addr16
sbb
repz
scas
aad
push
cmpsb
mov
inc
insl
xchg
aad
cwtl
test
sub
xlat
js
sub
jecxz
mov
or
repnz
rcr
test
andb
addb
out
ret
mov
gs
std
int
push
ja
push
pop
ficomps
sub
ss
ds
lock
ja
rcrl
popf
inc
adc
rol
pop
insb
mov
dec
push
cmp
movsw
xlat
in
repz
sbb
inc
mov
mov
stos
mov
sti
jbe
or
mov
mov
jge
mov
dec
icebp
sbb
lods
call
and
mov
cmp
test
xor
pop
aad
lcall
leave
sarl
jl
jp
adcl
mov
sbb
rcrl
dec
stc
lds
xchg
mov
aas
test
shll
gs
mov
fidivl
sub
jp
movsl
push
sub
insb
lods
sarl
adc
sbb
add
sbb
adc
bound
xchg
cmpsl
mov
aas
int3
dec
loope
xor
add
mov
inc
fldt
or
mov
call
pushf
cmc
pop
lea
repnz
outsl
int
sarl
mov
je
sbb
fiaddl
add
cmp
les
mov
lods
int
ja
inc
xchg
dec
je
scas
sti
mov
rolb
add
add
inc
or
cmpb
lods
mov
or
pop
dec
addl
add
xor
push
add
cli
movsb
mov
ret
inc
mov
inc
nop
sbb
pxor
xchg
xchg
aaa
rcl
fldcw
loope
loopne
mov
dec
data16
repz
sbb
dec
pushf
jg
xor
int
imul
cmpsb
cli
mov
jo
dec
jno
mov
mov
push
cmp
cmp
mov
jo
sbb
rcrb
int
push
xchg
movsl
ljmp
fwait
sbb
jl
cmp
cmc
mov
push
pop
call
adc
movsl
ljmp
mov
orl
or
aad
dec
push
cmpsb
out
add
jno
lahf
out
clc
dec
or
xchg
dec
test
cmpsb
cmp
and
jns
mov
lret
rclb
add
aaa
mov
dec
iret
jg
adc
repz
xchg
cmpsb
std
push
push
mov
roll
jbe
cmpsb
mov
cmp
nop
in
push
mov
and
push
mov
scas
lret
lret
idiv
int
cmc
mov
mov
notl
or
and
fcompl
inc
lea
cmp
push
hlt
cmc
mov
and
repnz
or
mov
shrl
push
out
movsl
pop
stos
pop
pop
mov
sbb
inc
cwtl
xchg
int3
mov
mov
sbb
inc
je
jae
popf
rolb
jp
inc
mov
mov
sub
sub
cli
popa
sub
dec
subl
ficompl
mov
enter
ret
add
add
xchg
adc
popa
and
jge
in
cmpsl
mov
lret
inc
aad
or
ret
adc
or
int
or
inc
cltd
and
cmp
mov
mov
or
push
stos
mov
bound
adc
jp
xchg
ss
fnstcw
inc
push
pusha
mov
cmpsl
pop
hlt
nop
outsb
jns
and
fistpll
leave
ss
lds
fs
jge
nop
xor
aam
in
repnz
movsl
inc
fs
scas
repz
xchg
xchg
xchg
mov
pop
addb
stc
pushf
nop
or
dec
fcoms
adc
in
mov
cld
push
inc
add
out
cli
push
xlat
test
sti
loopne
inc
data16
in
or
push
enter
jmp
cmp
sub
idivb
and
test
inc
inc
xor
dec
test
jns
adc
pop
sbb
dec
stos
cmp
lock
jl
xchg
imul
cmpsb
dec
and
xchg
xor
dec
push
or
cwtl
xor
xlat
lods
adc
xor
addr16
out
dec
add
xchg
mov
push
push
rcrb
enter
cli
mov
pop
add
cmpsl
mov
sbb
or
dec
repnz
pop
sub
popf
dec
aad
cmp
imul
pop
xchg
bnd
adc
mov
dec
xchg
mov
andb
icebp
shll
add
fiadds
add
dec
shl
ljmp
mov
out
pop
loop
arpl
ret
jl
cmp
les
fisubl
sbb
mov
mov
push
out
lcall
stos
xchg
fwait
push
cmp
adc
lret
ja
and
sub
mov
and
push
add
dec
stos
inc
stos
jbe
shrb
mov
std
movsb
add
ffreep
sahf
aam
mov
dec
push
fdivrl
xchg
cmp
sub
ljmp
pop
incl
bound
andl
inc
out
adc
push
push
hlt
aam
ja
scas
divl
or
cltd
xchg
xchg
cmp
mov
mov
push
dec
cmpsb
addr16
or
fiaddl
pop
testl
add
fisttpl
ljmp
les
or
out
xchg
or
push
pop
pop
mov
bound
pushf
int3
sbb
inc
xchg
aaa
xor
xchg
xlat
ds
xchg
out
dec
and
mov
out
testb
dec
loope
dec
inc
ret
xchg
das
xchg
shll
iret
xchg
add
mov
mov
inc
mov
imul
sub
jae
inc
mov
and
pop
in
jnp
popa
mov
idivb
outsl
cmp
xor
mov
icebp
push
and
ss
aas
sbb
xorl
push
sub
mov
cli
movsb
lock
dec
in
js
sub
jae
dec
inc
sbb
mov
mov
mov
add
adc
jbe
mov
enter
daa
scas
cmc
and
pop
rorl
jge
push
daa
inc
dec
xchg
arpl
arpl
lods
jmp
push
test
iret
lret
pop
js
mov
inc
xor
ret
xchg
add
xchg
inc
ljmp
mov
jmp
aam
mov
jnp
sbb
mov
repnz
test
stos
push
fld1
mov
pop
mov
and
sbb
outsb
mov
mov
popa
test
ss
mov
jge
fwait
jo
mov
popf
aas
xchg
or
push
pop
jecxz
sbb
lret
es
push
mov
rclb
sbb
ffreep
jmp
lods
pop
cmp
les
or
jno
push
fwait
shrl
lret
inc
lea
jp
outsb
push
ja
addr16
or
loope
sahf
push
das
fsub
cli
or
push
les
xchg
sub
je
sbb
xor
sub
sub
mov
push
push
or
cmp
test
ljmp
xchg
popa
jae
mov
push
test
inc
decb
jbe
mov
test
gs
mov
dec
mov
scas
hlt
push
and
das
add
or
xchg
out
das
jg
cmp
mov
xor
fdivrl
mov
movl
aas
or
je,pt
xor
inc
jg
jp
int3
mov
jo
inc
pop
fldt
xor
pop
std
mov
lcall
jo
ljmp
pushf
out
and
add
xlat
cmpsb
lret
popf
cs
cmp
test
pop
lods
push
mov
fwait
push
sub
daa
jb
dec
mov
jecxz
ss
mov
pop
or
xor
aam
fs
sbb
loop
mov
ds
inc
jp
hlt
mov
movsb
hlt
sub
clc
call
xchg
push
or
and
insb
adc
inc
insl
fwait
ret
cmp
sbb
cmp
mov
push
nop
pop
jl
arpl
ret
mov
inc
mov
cmp
lds
push
inc
shrl
pusha
mov
stos
mov
sti
test
fstpl
xchg
ror
scas
push
sub
jb
dec
scas
push
adc
xlat
sub
cld
fs
or
dec
dec
ret
xchg
add
dec
fistpll
leave
std
shll
push
addr16
in
cmp
xchg
cmc
bound
das
add
dec
adc
jns
xchg
jg
hlt
arpl
push
in
xor
dec
mov
addb
test
pop
flds
push
xor
and
dec
jns
mov
test
stos
inc
and
jae
scas
outsb
mov
jb
adc
push
jo
stos
mov
xchg
mov
data16
dec
inc
inc
jb
js
mov
jmp
rcll
mov
or
pop
adcl
jl
xor
popa
or
xor
lds
std
das
push
stos
cmpsl
and
orl
cmp
cmp
out
js
sbb
mov
cmc
sbb
jae
jne
cmpsl
inc
inc
es
and
dec
mov
scas
ja
fucomi
jg
jae
or
add
sarb
cmp
out
push
movsl
adc
push
pushf
cmp
lea
rcll
add
test
rcrl
insl
jbe
inc
test
xor
and
repnz
movsl
mov
pusha
mov
cli
and
fnstenv
es
inc
pop
mov
popl
xor
pusha
jae
inc
or
int
dec
imul
out
push
inc
mov
gs
loop
pop
stc
xchg
and
test
jns
pop
xor
push
call
or
xchg
and
jecxz
jge
aam
lock
adc
lods
das
fisubs
jns
jg
xor
stos
cmp
dec
arpl
into
icebp
adc
cmp
mov
push
adc
sbb
dec
cld
bound
xchg
nop
mov
filds
mov
mov
adc
mov
or
adc
std
test
sahf
jne
bound
jl
lret
jne
scas
sub
lods
pop
sbb
sbb
std
pop
loop
lods
lea
xor
xor
xchg
negb
xor
dec
cmc
add
out
pushf
dec
xor
cmp
and
mov
daa
mov
out
mov
add
pop
outsl
push
sbb
je
adc
icebp
jl
cmp
inc
push
xor
aam
aas
sahf
jne
out
out
sbb
mov
mov
sub
adc
sub
adc
and
insb
pinsrw
xor
mov
pop
mov
push
jp
pop
jns
stos
dec
jge
decb
stos
das
mov
movsl
dec
nopl
int
jle
lcall
and
inc
sub
fsubr
out
mov
xchg
loopne
jmp
ds
push
xchg
dec
sub
lds
sub
sti
jo
mov
push
and
iret
loopne
in
push
stc
fs
mov
mov
fcomps
add
sub
mov
dec
in
adcb
jae
inc
in
mov
xchg
js
loopne
outsb
mov
cltd
push
mov
imul
xor
pop
push
mov
cmpsl
loope
mov
adc
xchg
or
lret
sbb
imul
ja
mov
or
psubsw
mov
pusha
pop
cs
cmp
mov
mov
fists
loop
out
inc
lret
or
rcll
js
xor
push
add
inc
pop
dec
aas
add
and
test
nop
out
sbb
xor
push
into
cmp
cs
in
push
adc
add
orl
outsb
loopne
lock
fldpi
mov
movsl
add
popa
addb
clc
mov
adc
in
xor
and
ret
aad
pop
or
addr16
sti
push
test
adcb
jb
dec
mov
mov
ss
aad
icebp
rdmsr
or
push
test
aam
jne
cmc
push
loope
inc
mov
push
in
pop
insb
xchg
leave
and
pop
mov
push
mov
fisttps
or
xchg
test
lds
insb
sub
es
andb
mov
cli
xorl
inc
fs
in
imul
jge
arpl
mov
cmp
pop
xchg
insb
cmp
mov
mov
shll
sub
xor
and
test
ljmp
pop
test
loope
mov
xlat
out
mov
pop
jmp
pop
stc
xlat
pop
mov
test
inc
pop
pop
mov
push
rorb
xchg
fisttpll
movsb
loop
leave
dec
aad
push
sub
ret
cld
push
clc
pop
out
addr16
xorl
mov
dec
sub
cs
xlat
xor
mov
je
add
mov
fists
out
movsb
enter
jne
bnd
mov
outsb
int3
lods
sbb
add
rolb
cmp
xor
sub
les
sbb
sub
xlat
mov
aad
hlt
jle
cmp
stos
popf
decb
ja
add
inc
mov
mov
push
pop
dec
add
sub
sbb
imul
push
data16
in
cltd
test
repnz
mov
add
lret
lret
and
aad
sbb
mov
cmpsb
jmp
sahf
ja,pn
pop
lods
js
in
int
shrl
sbb
lret
call
adc
fistps
cs
push
jno
fildll
testb
add
rorl
nop
mov
lahf
jno
repz
mov
cmp
add
divl
mov
stc
adc
aas
rolb
push
leave
sti
fiaddl
sub
orb
mov
mov
insl
shl
scas
mov
dec
cmpl
pop
pushf
xor
repnz
mov
xlat
xorl
filds
ficompl
push
dec
inc
daa
xor
mov
shlb
push
mov
insl
lds
bnd
and
cwtl
dec
inc
fbstp
cmpb
test
cwtl
scas
imul
inc
and
push
out
lods
and
mov
iret
test
cmp
cwtl
fnstcw
pop
adc
cli
mov
out
sahf
je
or
push
mov
jl
add
rol
popf
mov
inc
jnp
aas
pop
lock
mov
dec
mov
fldlg2
test
add
mov
idivb
jbe
int
cli
and
mov
sahf
or
and
jne
mov
mov
inc
pop
int3
mov
dec
adc
or
mov
cmpsl
movsb
neg
cmp
sub
mov
hlt
jae
pusha
xchg
rcrl
xor
test
xchg
iret
movsl
call
mov
sub
ss
lea
mov
push
xchg
cmp
adc
cld
push
fs
push
push
jns
lds
mov
xchg
mov
inc
dec
xlat
lcall
repz
fnstcw
sub
push
cs
cmp
mov
pop
ss
ret
inc
mov
mov
sub
out
insb
mov
scas
mov
ret
and
rorb
test
mov
mov
mov
fldl
int3
loope
imul
dec
mov
mov
cmc
out
aas
jge
fnstsw
jne
jp
mov
jecxz
mov
mov
mov
repnz
test
jge
movsb
xchg
push
shll
pop
out
icebp
xchg
cmp
lods
add
orl
mov
mov
fsubl
xlat
movsb
or
mov
add
stc
stos
sti
scas
fstl
lods
arpl
adc
mov
imul
mov
pop
or
data16
pop
pop
movsb
repnz
pop
dec
push
inc
inc
push
cmc
rorb
push
xor
pop
mov
sahf
fisttpll
mov
mov
jae
insb
mov
sbb
mov
add
sub
fisubrs
movsb
inc
mov
jmp
lods
pushf
sbb
lcall
xchg
add
cwtl
xchg
mov
out
push
lcall
push
rol
cmc
sbb
rcll
cmp
ja
fldl
xlat
fwait
imull
mov
push
pusha
hlt
dec
int
shll
cmpsb
movsl
xor
mov
outsl
xchg
xchg
addr16
lahf
fs
shlb
add
mov
mov
mov
insb
sub
hlt
sub
fstl
jo
xor
push
dec
aad
mov
lret
xchg
pop
xlat
cmp
jl
lahf
and
push
mov
cmp
in
cmp
and
jb
leave
mov
ds
mov
cmp
lret
dec
cmpb
jns
rolb
shll
ret
pop
in
add
sub
xchg
mov
fwait
sbb
aas
sub
inc
ds
jecxz
add
out
pop
jnp
xor
adc
push
enter
push
movd
addl
lahf
add
mov
mov
iret
pop
or
mov
ss
aaa
sahf
cmp
adc
addr16
divl
mov
adc
iret
dec
sti
mov
jo
jae
xchg
pop
xlat
test
sti
sti
cld
ret
out
mov
jb
rcrb
cmp
and
xchg
adc
add
into
es
inc
push
cli
int3
mov
mov
push
dec
bound
in
in
push
or
rorl
sub
aaa
mov
arpl
sbb
out
int
inc
jne
mov
cmp
cmp
scas
test
jl
dec
push
xchg
or
inc
in
std
pop
nop
rclb
fxch
or
bound
push
pushf
cltd
es
out
dec
adc
repnz
push
or
xchg
int
fdiv
loope
pusha
insl
add
cli
mov
sub
mov
cmp
ja
adc
repz
test
das
push
mov
arpl
enter
cmp
or
aaa
leave
inc
xchg
add
out
ss
xlat
aam
push
insl
aad
xchg
mov
rep
loop
and
xchg
mov
test
or
jge
iret
in
sbb
test
test
jge
aam
fnstenv
lahf
push
popf
ficoms
and
lea
movsb
xlat
test
mov
xchg
add
jp
dec
sbb
xchg
sub
inc
mov
aas
pop
aam
pop
adc
outsb
int3
es
adc
pop
loop
xchg
push
iret
andl
push
pushf
dec
in
xchg
mov
push
in
xchg
les
test
scas
test
add
push
xchg
stc
jp
ds
imul
mov
sub
push
pop
push
sbb
in
mov
sbb
call
lea
sub
sub
cmp
daa
mov
andl
push
js
sbb
mov
mov
mov
cmp
xchg
cmp
testb
in
jmp
movsb
rcr
addr16
mov
mov
dec
cmp
iret
jnp
sub
mov
and
xchg
adc
lods
inc
xor
and
pusha
cli
push
dec
int
push
hlt
jb
xchg
out
dec
loope
pop
adc
push
in
jae
scas
dec
or
stos
es
add
dec
mov
mov
adc
push
std
mov
push
mov
xchg
push
cs
es
repnz
frstor
mov
rorb
icebp
hlt
outsl
fsts
out
rorb
mov
cmpsl
outsl
pop
cwtl
add
jbe
adc
sub
mov
dec
xorl
loopne
push
sbb
or
ret
pop
cltd
xor
or
arpl
bound
mov
js
cmp
call
adc
mov
aam
sub
cmp
cmpsl
flds
dec
movsb
icebp
push
push
jno
add
inc
dec
out
inc
cmpsl
insl
xor
sub
sbb
push
stos
push
lahf
repnz
inc
xchg
loope
out
lods
and
inc
aad
cmp
cmp
out
cli
cmp
mov
mov
add
loope
rol
dec
lds
ret
lret
or
adc
jb
push
sub
cmp
sbb
stos
je
pop
jne
cmp
in
les
jae
mov
add
pop
shll
cmp
mov
mov
iret
mov
in
dec
adc
scas
insl
push
clc
pop
std
dec
out
outsl
xor
mov
rclb
fstps
popa
cmp
sub
test
std
fsubrs
cmpsl
pushl
fisttpl
test
jmp
jno
push
pop
fidivrs
icebp
jle
sub
insl
fsubrs
mov
and
shlb
inc
test
jns
lea
cltd
jle
nop
cmpsl
daa
popf
testl
sbb
mov
sbb
push
and
lods
je
jnp
sbb
sub
sub
pop
add
bound
add
adc
push
and
inc
je
xchg
push
out
nop
xor
sbb
ficoms
out
pop
cltd
testl
stos
push
ret
std
test
iret
lret
addb
xchg
pop
xchg
scas
bnd
cmp
mov
jns
int3
jmp
clc
push
lea
cld
loope
lahf
dec
mov
xlat
addr16
int3
adc
iret
xlat
ret
sub
and
cmp
div
mov
inc
xchg
lods
in
mov
sbb
test
scas
pop
push
mov
cld
lret
stos
push
mov
xchg
pop
xor
repz
das
jno
ret
push
ja
sbb
sbb
inc
or
fidivs
repz
sbb
int
cmpl
lahf
fcomp
mov
jns
addr16
fstpl
xchg
popf
cmp
jl
mov
pop
data16
cmp
add
or
inc
jno
sub
ficompl
test
cmpsb
mov
sub
nop
orl
mov
or
movsl
push
lods
mov
sbb
adc
shll
pop
leave
icebp
inc
mov
jge
fmuls
pop
pop
orl
add
mov
xlat
gs
push
enter
mov
add
mov
mov
pop
inc
fwait
mov
dec
lds
add
into
fstpl
je
fwait
add
ds
rolb
or
mov
sbb
pusha
fs
push
es
lret
fadds
and
mov
popf
clc
xchg
xor
les
mov
jo
aaa
lods
xchg
test
push
xchg
dec
into
lcall
xchg
out
or
mov
pop
divl
mov
nop
scas
icebp
imul
ds
movl
sub
shl
cmp
popa
popf
jns
in
push
mov
push
ret
bound
lods
push
push
jg
push
nop
or
hlt
sbb
cmp
lahf
outsb
inc
enter
and
xor
mov
mov
repz
mov
into
mov
clc
mov
pop
cmp
sub
ret
pop
inc
fcompl
xor
aaa
int3
sbb
popf
sub
mov
mov
ret
in
arpl
mov
pop
ja
mov
pusha
mov
bound
mov
xchg
mov
dec
das
in
sbb
addb
push
ret
rcrl
jno
jbe
add
jnp
adc
mov
mov
in
adc
mov
imul
dec
mov
mov
xchg
and
jl
stos
insl
add
or
test
push
dec
xor
mov
fidivl
and
push
adc
in
xor
lret
jle
jge
push
jnp
dec
cmp
in
xchg
fdivs
jmp
imul
jge
je
aam
aam
mov
sub
mov
push
es
inc
jmp
addr16
repnz
loope
sbb
or
adc
fwait
dec
push
js
jecxz
mov
inc
dec
lds
data16
repnz
push
mov
out
insl
les
insl
js
mov
rorl
pop
clc
lahf
inc
cwtl
cmp
icebp
mov
xor
mov
lcall
cwtl
push
sbbb
out
inc
cmp
sub
xchg
dec
pop
iret
or
mov
adcb
xchg
subb
sbb
push
dec
xor
and
std
fistpl
rorl
int
sub
push
dec
movsl
jno
lds
xchg
xchg
sbb
cmp
mov
pop
jnp
jns
adc
dec
int
adc
ja
push
pop
scas
popf
out
mov
pop
fstpl
sub
mov
adc
shrb
add
into
or
pop
out
out
aas
inc
mov
scas
iret
call
daa
sbb
scas
push
mov
stc
out
xchg
push
mov
push
or
in
test
fmuls
push
imul
das
adc
pushf
adc
mov
int
mov
jge
ret
xchg
hlt
push
push
pop
xor
inc
je
je
js
push
lret
sbb
movsl
sub
xor
xchg
jmp
outsb
inc
mov
leave
sbb
mov
xor
clc
popf
movsl
shl
mov
push
add
movb
daa
jg
cli
ljmp
xchg
cmpsb
repz
out
int3
andb
inc
push
adc
lret
cli
imull
arpl
loopne
cmp
arpl
mov
outsb
es
push
fwait
xchg
testl
mov
daa
jle
mov
cltd
sbb
mov
fbld
mov
out
outsl
xor
shll
je
outsl
adc
into
inc
xor
in
inc
xchg
rorl
enter
pop
in
inc
sbb
lock
push
sub
mov
jo
mov
jp
lcall
push
inc
inc
mov
das
cmp
popa
adc
mov
stc
loop
mov
pop
dec
or
scas
jmp
inc
scas
insb
push
loope
sub
cmpsl
js
test
in
xor
add
into
aaa
leave
fdivrs
or
push
and
mov
loopne
adc
adc
push
push
cmp
stos
mov
fdivrl
adc
adc
ds
out
and
movsl
pop
mov
test
iret
paddusw
iret
pop
lcall
mov
clc
out
mov
gs
xchg
or
xor
pop
stc
xor
or
popf
pop
icebp
icebp
add
fwait
add
es
pop
inc
mov
daa
fwait
dec
and
push
orb
xor
add
mov
ret
fxam
lret
cmpsl
mov
adc
cli
pop
je
test
sub
arpl
sub
je
sub
mov
movsb
cs
cmp
jo
cli
test
pop
rclb
push
inc
xchg
lea
mov
jb
ljmp
dec
mov
gs
imul
mov
jbe
and
lret
scas
xor
aaa
faddl
out
repnz
or
lcall
test
jl
lods
insb
sbbl
lahf
stc
push
xchg
repz
lods
mov
mov
xlat
call
jmp
jg
xchg
je
add
dec
cmpsl
rorl
mov
dec
pop
sahf
stc
dec
mov
mov
cmp
dec
cmp
or
ds
mov
pushf
jbe
mov
divb
mov
push
add
iret
and
add
push
sub
into
lods
push
mov
lahf
cmc
and
scas
or
in
adc
dec
add
dec
sub
xchg
cmp
into
mov
ss
mov
mov
shrl
fsts
mov
imul
lea
xor
enterw
nop
mov
sbb
fistpl
inc
push
inc
aad
mov
push
outsb
jae
cltd
cmp
imul
cmp
xorl
stc
push
mov
int
scas
hlt
fiadds
push
xlat
inc
push
sub
dec
js
inc
in
xchg
add
adc
xorl
frstor
push
or
pop
pop
mov
mov
sbb
or
into
jp
mov
xor
mov
dec
cmp
fistpl
mov
pushl
dec
test
push
push
push
jp
dec
and
pop
lods
xor
cmpsl
aad
and
sub
mov
and
mov
jp
adc
aad
dec
in
sbb
mov
loope
ja
dec
loop
xchg
lds
push
pop
dec
sbb
dec
mov
cmp
push
stc
cmc
push
sbb
repnz
xor
outsl
xor
and
sahf
es
out
popl
in
xor
sbb
mov
xor
mov
call
pop
jo
repnz
xor
lods
imul
xor
and
push
push
cmp
movsl
shll
jae
mov
jecxz
sbb
das
fucom
test
ret
cmp
ja
dec
dec
add
and
out
mov
adc
mov
dec
jmp
or
push
xchg
inc
cmpsl
stc
and
or
xchg
dec
lods
loopne
decb
jbe
push
or
pop
or
dec
inc
cmc
or
mov
pop
scas
xchg
xor
jmp
lret
xlat
repz
jbe
dec
das
and
mov
test
push
sub
mov
fisubs
jmp
insb
out
sub
test
inc
mov
xchg
shlb
cmp
pop
in
out
xchg
es
xchg
in
mov
add
inc
inc
xlat
ficompl
dec
test
push
out
or
inc
addr16
in
push
add
xchg
jg
les
xchg
jno
dec
fdivrs
jnp
pop
jns
arpl
mov
sbb
jne
xchg
cltd
jae
ficoml
lods
ljmp
out
sbb
outsl
cmpsl
jne
movsl
push
inc
and
add
hlt
adc
mov
scas
scas
sbb
int
pop
dec
lret
jg
push
in
push
mov
bound
xchg
loop
pop
test
hlt
sub
and
xchg
inc
sub
lret
leave
sub
aad
jb
scas
inc
xchg
hlt
in
jmp
mov
jb
pushf
jo
xor
shrl
add
pop
outsb
push
adc
int3
ja
jmp
push
cmp
sub
lods
pop
jmp
clc
dec
subb
stos
xchg
std
ss
mov
push
add
popf
dec
sub
xor
in
lods
dec
in
cli
or
arpl
data16
pop
sub
lcall
inc
and
mov
mov
dec
xchg
xchg
ds
sub
jo
pop
mov
call
dec
pop
mov
xchg
ja
mov
mov
fwait
dec
cs
push
add
mov
mov
sbb
adc
neg
lcall
movsb
ret
pushf
stos
mov
or
data16
pop
int3
dec
sti
jp
xchg
sbb
jbe
adc
test
popf
push
imul
add
mov
add
mov
stc
xchg
ret
sub
lods
rorb
scas
mov
daa
or
andb
mov
popf
stc
sbb
imul
pop
jno
cmp
fmull
imul
fmuls
shrb
scas
aam
jno
imul
mov
sti
cli
pop
push
cmc
rcll
mov
push
sti
fisubrl
movsl
mov
jbe
mov
imul
pusha
and
mov
pushw
and
je
rcll
mov
lea
movsb
or
leave
sub
push
ss
pop
enter
mov
pop
xorl
xlat
or
xchg
xchg
pop
sbb
inc
mov
xor
jb
outsb
fucomip
repz
or
sahf
mov
ret
mov
or
lods
into
xlat
testb
mov
in
jg
mov
push
sarl
cmpl
xor
and
mov
cmp
out
push
jge
nop
arpl
sbb
xlat
inc
jmp
pop
test
mov
scas
mov
enter
push
in
cwtl
push
shl
and
lea
or
push
je
test
xor
adc
mov
mov
cld
arpl
sub
fxam
pop
jo
sub
daa
mov
out
pop
push
jns
je
pop
lret
push
int
arpl
shll
pop
es
in
bound
mov
into
xlat
mov
mov
adc
inc
pusha
pop
outsb
mov
xor
mov
cmp
cmp
add
jb
cmpsb
mov
mov
pushf
inc
imul
dec
aam
sub
pop
mov
jmp
fprem
leave
lret
lock
sbb
insl
call
test
scas
pop
scas
and
pop
xor
pop
jo
adc
jp
dec
aam
add
push
clc
sub
adc
pop
hlt
jl
fimull
movsl
or
mov
push
aad
mov
enter
cli
and
je
pusha
add
aaa
sbb
xor
loope
adc
aaa
icebp
dec
mov
dec
ss
imul
cld
push
add
mov
or
jl
pop
stos
sahf
push
int3
clc
xchg
fstpt
jge
push
and
cmp
inc
adc
mov
sub
dec
add
aas
mov
add
xchg
test
fxch
ja
mov
idivl
in
mov
movsl
iret
push
push
pop
loope
js
nop
loop,pt
aam
aad
xchg
cmp
xchg
jnp
in
or
ljmp
cmp
imul
int
shrb
arpl
hlt
scas
push
aad
inc
and
imul
mov
sub
test
cmp
sbb
daa
sti
xor
jl
lock
rclb
or
cmp
out
xor
pmullw
mov
xchg
sbb
pop
les
pop
or
lods
into
cmpsw
add
out
and
inc
aad
lahf
sbb
mov
cmpsl
popf
mov
dec
sub
sbb
mov
cmp
imul
or
scas
test
fs
loop
leave
sbb
push
ds
pushf
fdivrs
mov
sbb
xchg
scas
imul
imul
mov
in
xor
jmp
or
cmc
lcall
xchg
adc
add
scas
mov
dec
adc
jns
loopne
xor
mov
sub
imul
leave
sbb
add
mov
push
daa
mov
fildl
pop
pop
mov
into
mov
jmp
cs
pop
hlt
cmp
loope
adc
inc
sahf
inc
mov
int3
mov
stc
out
inc
mov
inc
rcr
stos
dec
inc
or
mov
jmp
cmp
push
daa
arpl
imul
cli
stos
xchg
lock
aaa
out
mov
sbb
push
push
mov
cmp
lcall
push
mull
les
add
push
int
fcmovbe
popa
fistpl
popa
pop
in
jne
test
push
fimuls
aam
leave
sub
or
or
fcmovnb
mov
in
xchg
aaa
test
and
pop
mov
xchg
adc
gs
mov
cmp
adc
mov
mov
xchg
scas
inc
int
jne
cmp
test
push
ficomps
mov
shl
movsb
lea
dec
jmp
fmuls
roll
rcll
push
and
cld
out
add
sar
mov
cld
bnd
lea
insb
insl
repnz
add
inc
inc
xchg
loop
test
jp
ret
push
out
add
data16
cs
rcl
out
daa
sbb
or
mov
popa
sbb
pop
call
sbb
and
pop
ret
ja
sbb
mov
and
or
mov
xorb
or
add
mov
pop
pusha
xchg
add
cmp
sub
ss
mov
dec
or
xor
add
inc
out
and
mov
ds
fwait
pop
xor
aaa
cwtl
fs
dec
inc
inc
test
sarb
sti
add
es
adc
pop
mov
stos
push
pop
frstor
pop
and
dec
push
icebp
and
stos
les
mov
mov
sbb
cwtl
push
sub
imul
aaa
mov
test
adc
test
and
out
popa
out
sahf
jle
adc
add
call
inc
mov
push
add
cwtl
add
adc
outsl
lds
orl
lret
bound
mov
xor
insl
push
jnp
loopne
fadd
popf
jo
mov
movsl
jle
je
push
fsts
insl
xchg
outsb
mov
dec
jle
dec
add
loope
idiv
mov
in
cltd
out
add
cmpsb
adc
sti
mov
or
scas
sub
gs
adc
xlat
fidivrl
jne
jo
daa
pop
push
fisttps
sahf
jecxz
xor
mov
add
out
mov
fdivs
adc
mov
cmp
mov
inc
imul
adc
cs
icebp
sub
std
lds
mov
sbb
dec
test
mov
shlb
decb
add
push
xorl
mov
lret
jl
jb
jb
iret
mov
cmpsl
cs
xchg
sbb
jb
mov
mov
sub
xor
mov
cltd
mov
fcmovb
test
ja
test
cs
dec
mov
mov
fistpll
push
sti
push
out
push
and
inc
push
je
cmpsb
pusha
push
sbb
mov
mov
xorb
push
push
in
push
fldenv
ss
fwait
nop
rolb
gs
cli
push
xlat
mov
mov
ret
lds
lock
xor
push
fisttps
fiaddl
jl
cmc
push
jle
jmp
sbb
dec
jbe
lea
loopne
inc
sub
add
es
and
cs
and
out
inc
repz
and
adc
idivl
aad
jae
sub
push
xor
stos
and
in
dec
popf
mov
mov
mov
daa
jne
aad
lds
jo
cmpsl
inc
or
pop
les
or
lea
icebp
xchg
mov
adc
mov
mov
sbb
fucom
dec
lods
mov
mov
push
scas
jbe
or
mov
cwtl
jne
sgdtl
stc
outsb
pop
xor
cmp
sbb
sbb
fwait
dec
mov
mov
popf
add
nop
xchg
push
or
sub
in
mov
adc
mov
leave
dec
mov
notrack
out
in
cmc
sar
outsb
xor
dec
lret
mov
inc
sbb
ret
mov
sbb
pop
pop
mov
call
push
icebp
mov
js
xor
push
mov
xchg
and
pop
push
jnp
out
shll
mov
bound
cmp
addb
push
adc
lret
jne
popa
fisubrs
xchg
ljmp
cmp
movl
shrb
xchg
xchg
xor
pushf
sub
js
dec
and
in
orb
movsl
arpl
xlat
loope
push
out
jmp
jo
in
xchg
push
enter
pop
cmpsb
mov
pop
mov
imul
ja
and
pop
mov
ficompl
call
jae
cli
jmp
xor
sbb
adc
outsl
in
inc
cmp
sbb
jge
sub
mov
movl
xor
pop
inc
adc
pop
add
jecxz
int
dec
dec
fisttps
mov
icebp
push
or
pushf
movsl
es
inc
or
jns
lods
sbb
mov
jg
inc
sahf
jecxz
pop
out
xor
shlb
rcr
aam
push
dec
mov
fstl
nop
sbb
cmp
mov
loope
pushf
mov
in
inc
das
xchg
in
in
movsl
xor
fdivrs
nop
leave
sub
mov
lock
test
lds
shlb
cwtl
mov
icebp
cmpsl
xor
shll
add
cmp
push
scas
cmp
in
test
in
icebp
icebp
test
aas
adc
jl
inc
loope
dec
inc
shrb
test
into
sbb
outsb
mov
pop
mov
mov
lret
test
xlat
test
jb
mov
inc
and
jg
ljmp
adc
dec
test
scas
inc
popf
movsb
inc
mov
icebp
adc
ljmp
sbb
lcall
rcrl
cmp
adc
and
and
mov
push
ss
cmp
sub
mov
rorl
cmpsb
mov
add
out
and
push
jns
das
adc
ret
cmp
mov
lods
cli
jno
sbb
inc
loop
out
pop
or
or
lods
mov
rclb
or
imul
jp
negb
jo
mov
push
aas
imul
jg
fistl
clc
cli
es
jl
jns
and
and
xor
out
std
shrb
loopne
adc
and
fldlg2
xchg
push
imul
inc
jno
imul
or
cwtl
push
repnz
pop
pop
push
aaa
sub
or
xchg
mov
out
mov
test
scas
insl
lret
mov
dec
and
mov
fists
rcll
das
ja
mov
lahf
out
adc
mov
insb
scas
pop
mul
addr16
das
inc
add
dec
mov
fbstp
aad
pop
dec
mov
imul
sarb
jle
and
repnz
in
outsl
mov
xor
xor
repz
jae
test
xchg
ficompl
inc
or
out
call
xor
cmp
cmp
xchg
mov
inc
or
push
sub
pop
jg
in
fdivrl
sbb
jae
clc
lret
sbb
mov
jmp
mov
cmp
addr16
inc
into
repz
lock
mov
mov
inc
jb
jmp
dec
iret
mov
mov
ret
scas
imul
xor
mov
mov
sbb
mov
mulps
lcall
and
lock
lea
lret
pusha
lods
pop
std
sub
cld
lret
add
dec
mov
out
sti
test
mov
xlat
jnp
xchg
fsubrs
mov
lahf
xor
fld
in
test
mov
ss
js
testb
mov
psllq
xchg
fcmovnbe
push
xor
inc
jp
cmp
adc
bound
loop
imul
push
xor
ss
pop
inc
fmulp
or
fidivrs
lds
lods
sub
gs
or
sti
and
pop
xchg
loop
jnp
pop
cmp
or
dec
pop
mov
inc
push
cmp
enter
je
out
mov
test
lahf
xor
mov
cld
jp
mov
lods
int
jnp
mov
jb
pushf
mov
add
adc
jno
cmp
imul
icebp
dec
mov
loop
mov
jge
test
mov
add
call
cmp
fldenv
ret
in
mov
pop
orb
mov
push
push
shlb
in
cmp
xor
stos
mov
dec
mov
je
mov
pop
loopne
shr
lret
adc
in
adc
or
dec
dec
and
lock
cs
dec
sbbb
int3
icebp
scas
adc
stc
xor
add
xchg
or
adc
pop
lcall
nop
out
dec
push
xor
xor
cmp
jb
pop
lcall
push
inc
mov
sbbl
xor
test
xor
inc
adc
push
rclb
out
cwtl
mov
inc
cltd
xlat
add
enter
stos
sub
jge
sub
lds
xchg
push
adc
sbb
dec
push
pop
call
ja,pt
xor
rol
push
jae
adc
dec
mov
nop
clc
lcall
lahf
cmp
mov
or
mov
call
daa
aad
ficomps
adc
mov
adc
out
xchg
mov
test
xor
push
aam
sub
into
xchg
jle
push
pop
xchg
pop
mov
push
outsl
mov
mov
pop
out
in
pop
test
pop
jge
js
or
in
jne
xorb
cmc
fsubrs
cmp
mov
xor
xchg
mov
xchg
xorb
rol
cmpsl
imul
or
aam
push
fwait
lods
insl
mov
test
xor
jae
sub
pop
clc
mov
dec
add
es
jp
daa
or
mov
xlat
xchg
and
lods
adc
xchg
int
jmp
sub
mov
add
jnp
push
inc
pop
add
es
mov
inc
xor
mov
out
inc
shl
push
mov
lahf
movl
fiaddl
push
mov
or
sahf
push
jl
mov
cmovno
push
mov
xor
xor
xor
adcb
sbb
cld
or
cmp
loope
xor
std
scas
divb
in
or
aam
jno
jo
mov
xor
daa
outsl
inc
adc
into
sbb
sub
das
xchg
cld
outsb
repnz
cmp
clc
fabs
bsf
mov
inc
loopne
pop
push
push
ss
jo
adc
mov
outsl
frstor
mov
movsb
sub
mov
mov
dec
jmp
sub
andl
out
mov
popa
fdiv
repnz
push
or
pop
roll
and
cmp
push
mov
shlb
ret
jae,pt
and
outsb
jne
sbb
pop
sbb
sahf
cld
repnz
loopne
add
push
test
lds
scas
xchg
sti
mov
mov
mov
xchg
mov
xor
add
add
je
ss
sub
mov
out
pop
cmp
leave
jle
lods
cld
or
in
add
popa
jns
pop
xchg
cmp
test
fstpl
xchg
rdtsc
sub
aas
or
jg
sbb
inc
and
imul
jmp
loope
test
stos
dec
lock
xor
push
jno
stos
xorb
cld
pop
sub
push
mov
das
add
pop
aad
ss
pop
aam
pop
add
shlb
xchg
xchg
sti
daa
jo
jns
push
leave
inc
je
dec
mov
xchg
xchg
mov
and
cmpl
mov
subl
dec
dec
xchg
pop
mov
mov
xchg
cmp
xchg
stos
cmp
dec
mov
into
push
pop
adc
addb
addb
ret
subl
push
es
add
test
jae
add
out
lods
leave
bound
or
push
iret
and
jno
mov
repz
fadds
pusha
aas
adc
xor
lret
rcrl
or
sbb
xchg
sti
jmp
enter
loope
jbe
movsb
pop
push
mov
cmp
push
scas
clc
jl
ss
in
jle
adc
js
mov
jle
les
adc
ret
out
jmp
fists
loopne
inc
push
int3
jae
inc
push
mov
xor
sub
mov
lret
repnz
xor
sahf
xor
or
add
into
sub
push
gs
clc
jnp
stc
xor
pop
xor
sbb
mov
orb
movsb
push
mov
in
pop
mov
testb
fdivr
mov
sbb
loop
mov
imul
jb
int
pop
shll
cwtl
jnp
xor
xlat
cmpsl
xchg
jnp
xor
and
lahf
in
je
arpl
inc
jns
jg
call
dec
dec
in
adc
cmpsl
outsb
push
outsb
lods
out
push
daa
fnstcw
adc
xchg
insl
or
and
loop
test
jbe
movsb
push
out
sahf
push
mov
sub
movsl
xchg
stos
pop
sub
dec
int3
push
lods
sti
adc
push
inc
dec
jae
xor
inc
jno
outsb
push
mov
pop
sbb
push
sahf
call
pusha
shll
rcrl
mov
fs
shl
aad
mov
bnd
jmp
or
pop
call
cli
xchg
fidivrl
sbb
int3
and
sub
stc
jno
nop
outsl
stc
push
jnp
cli
popl
popf
jae
cli
test
fisubs
mov
test
push
push
sub
xchg
dec
jnp
stos
sbb
popf
fs
sub
sbb
inc
xchg
xor
arpl
adc
mov
popf
jge
iret
aad
ret
pop
ds
and
mov
push
mov
inc
add
jle
imull
imul
sbb
daa
sbb
xchg
jle
push
pusha
icebp
push
lcall
imul
mov
fidivl
fisubrs
xor
shlb
jnp
das
cli
in
mov
sbb
sbb
das
jp
and
mov
int3
sbb
mov
xchg
iret
pop
and
shlb
add
jnp
stos
fwait
bound
sbb
mov
pcmpeqw
push
and
mov
out
mov
and
scas
mov
xchg
call
add
data16
repnz
lods
ret
cld
out
adc
clc
jecxz
addb
es
je
ss
adc
cmp
mov
sti
or
out
insl
ds
xchg
push
setbe
fldl
leave
dec
mov
jno
out
fs
xor
stos
mov
xchg
les
lds
shr
dec
test
test
adc
test
mov
insb
pop
pushf
push
xchg
imul
dec
mov
and
into
gs
inc
ljmp
enter
dec
out
scas
idivb
fistpll
cmp
test
adc
dec
je
fistpll
or
push
xchg
popf
adc
sub
insl
stc
cmp
push
lahf
sub
and
fbld
xorb
xchg
in
add
jae
dec
sti
ret
inc
pop
xchg
mov
stos
or
jo
int
repnz
lahf
cs
inc
inc
jno
aad
je
into
outsb
dec
mov
imul
call
mov
fwait
ss
add
data16
rcr
decl
add
and
and
jnp
lret
rorl
ds
fwait
ret
pop
es
jne
sbb
lds
add
and
jae
jno
xchg
in
out
sbb
je
add
push
inc
mov
add
dec
inc
sti
pop
aad
nop
mov
jp
ljmp
push
push
fisttpll
pop
lret
xchg
xor
cmc
add
mov
inc
jne
add
testl
iret
cmp
shr
scas
or
sahf
lret
pop
mov
pop
cmp
fmull
addr16
clc
xorb
loopne
inc
lret
dec
lods
sub
daa
mov
stos
fnstenv
push
cmc
js
dec
and
mov
sub
inc
cmp
cmp
lds
adc
mov
push
mov
pop
xchg
cwtl
popf
lds
mov
popa
push
adc
rdtsc
pop
and
les
nop
xchg
lcall
fsqrt
sahf
mov
dec
jl,pn
inc
rorl
or
mov
gs
ret
mov
add
imul
sbb
js
cmp
pop
ja
push
cmp
fsubs
pop
jmp
cmc
loopne
sarb
jl
out
cmp
test
xchg
scas
scas
fsubs
loop
push
fwait
dec
adc
outsl
xchg
jb
loope
ficompl
push
hlt
int3
stos
into
bound
mov
add
xchg
cmp
adc
jmp
xchg
pusha
out
cmp
add
xor
ret
dec
sub
and
sub
mov
or
add
adc
pop
lods
icebp
mov
out
pop
call
repnz
sahf
jle
sub
ss
xchg
stos
fcomps
in
xor
lea
fisttpll
sahf
stos
outsb
mov
mov
pop
mov
sub
das
imul
notl
xorb
inc
in
xlat
repnz
pop
out
inc
orl
pop
ja
mov
bound
sbb
xlat
test
adc
jbe
icebp
ja
xchg
mov
push
mov
mov
int3
lret
outsb
stos
xor
lcall
pop
mov
mov
cmpb
jle
jmp
out
lods
addr16
xchg
js
jae
fld
push
out
pop
out
xchg
add
call
in
and
dec
lret
or
movsb
add
mov
xor
icebp
or
cmp
sub
pusha
es
sbb
add
push
movl
jae
lods
in
push
pop
cmp
xchg
pusha
adc
cmpsb
das
adc
repz
clc
sbb
xchg
xchg
out
shrb
add
jne
mov
jecxz
rorl
loop
stc
sbb
clc
les
xchg
sub
stc
mov
out
lret
fwait
inc
out
lahf
add
pop
xor
inc
stc
jmp
cmp
jo
mov
aas
jns
in
stos
ldmxcsr
cmpsl
or
mov
jbe
mov
test
xor
rcrb
inc
pop
dec
imul
in
or
in
jle
mov
rol
mov
jmp
push
bound
add
outsl
call
imul
gs
add
inc
jns
outsl
dec
test
add
jb
imul
mov
popa
and
and
push
mov
sub
cmpl
dec
push
fisttps
jns
xchg
jo
or
ja
mov
xchg
or
bound
xor
test
mov
mov
cmp
dec
cs
push
pop
and
mov
mov
insl
mov
insb
jp
sbb
inc
lcall
push
xorl
out
jp
cmc
repnz
push
pusha
pop
cltd
add
loopne
repz
dec
cs
mov
add
data16
cmpsb
es
loop
call
sbb
into
outsl
movsl
data16
pusha
movsb
cmpsl
push
inc
cli
loop
dec
fisttpl
fwait
sub
stos
mov
stos
js
and
sti
dec
sbb
out
cmp
cmp
mov
mov
sarb
jge
add
inc
shlb
nop
inc
ret
int3
cld
add
xor
xor
dec
cmc
cmc
dec
fimuls
jle
pop
mov
std
mov
addr16
dec
xor
add
jle
adc
or
iret
popa
push
movsb
lret
mov
xor
je
cmp
jge
fidivs
sub
addr16
xlat
and
sub
repz
xchg
xlat
pop
outsl
insb
aad
shlb
aad
push
cmc
pop
clc
sbb
fcoml
pop
sti
xor
addb
adc
jae
fcoms
mul
imul
out
imul
inc
loope
and
sub
in
pop
lds
jle
jle
push
inc
rcrl
int3
sar
xor
jno
fs
cmp
lret
adcb
lods
inc
ss
in
add
dec
jge
std
fs
test
cmp
xlat
sub
xchg
mov
lahf
pop
leave
scas
cwtl
lahf
add
stos
push
sub
cmp
out
jne
cmc
cmc
mov
adc
stos
fldt
repz
lds
xchg
cmp
xchg
mov
stos
clc
sub
mov
lcall
addr16
inc
fcompl
push
push
popf
stc
pop
lock
andb
mov
pop
fdivrs
push
or
push
xchg
lahf
mov
lock
mov
pop
test
sarl
les
les
lret
jb
xor
dec
dec
fnstcw
lahf
jnp
rclb
sub
sahf
je
inc
out
pop
ficoml
or
cmc
xchg
inc
cld
addr16
add
jl
cltd
sub
rolb
xchg
cwtl
cli
fisubs
arpl
cmpsl
jb
jnp
mov
lcall
cs
arpl
adc
mov
shlb
cmp
xchg
push
xlat
adc
leave
insb
jge
and
cmp
push
das
mov
scas
dec
sti
popf
inc
sub
lret
repz
icebp
andl
pop
enter
lea
call
xor
fisttps
inc
or
fidivrl
xor
les
jnp
adc
mov
jmp
out
dec
fwait
cmp
gs
xchg
ds
addr16
xchg
jmp
out
push
arpl
mov
cli
insl
fistpl
sub
mov
insl
and
imul
dec
jnp
pop
bound
mov
lret
mov
aas
icebp
xor
or
in
enter
int
pop
xchg
push
ljmp
shlb
fsts
adc
in
or
mov
stc
lods
sub
outsl
mov
ds
int3
sub
bound
std
inc
add
data16
lods
call
xlat
xlat
dec
mov
shll
adc
sarb
add
and
ja
xchg
mov
cmpsl
sub
imul
dec
mov
dec
xor
mov
lds
mov
cmp
pop
sub
cld
dec
bound
mov
scas
jmp
add
mov
daa
dec
dec
cmc
inc
mov
das
push
inc
cmp
cmp
repz
int
cld
int
dec
jb
popf
in
repnz
and
fcmove
fwait
pop
dec
jp
push
movsb
mov
lods
sub
mov
cwtl
cmp
sbb
fisubl
inc
cmp
out
insb
test
into
inc
mov
fwait
xchg
je
push
std
in
pusha
outsb
and
test
cltd
repz
sbb
mov
vfrczpd
out
enter
movsb
sbb
test
imul
inc
lret
jne
negb
in
leave
fiaddl
divb
xor
inc
test
xchg
adc
or
dec
repnz
lret
imul
mov
bound
mov
arpl
cmp
fwait
pushf
stos
std
imul
mov
jg
mov
push
jbe
xchg
cwtl
and
jno
in
in
movsl
or
and
add
imul
out
fstpl
jae
jb
das
push
inc
lea
int3
xchg
mov
and
adc
xor
xlat
mov
dec
mov
pop
stos
pushf
stc
jo
push
lock
fcmovu
mov
fcomps
dec
lret
and
call
sbb
xor
in
sti
mov
jp,pn
add
add
cmpsb
gs
push
sbb
xchg
adc
push
imul
sbb
pop
cmp
dec
pushf
adc
icebp
cld
mov
mov
scas
sub
ret
lods
or
movsb
imul
out
arpl
daa
cltd
repnz
mov
clc
pop
dec
and
mov
arpl
fdivl
inc
cmp
out
int3
jae
push
lret
fisubl
jle
jno,pn
mov
cmpsl
imul
test
adc
mov
sbb
lcall
mov
stos
mov
popa
loope
decl
mov
out
rorb
iret
jmp
insb
mov
and
adc
dec
xchg
push
mov
add
and
lds
jbe
cld
cmp
mov
sbb
leave
out
pop
xor
stos
outsl
pop
inc
sub
mov
imul
push
mov
and
or
cli
mov
imul
cmp
jb
pop
xor
inc
mov
xchg
nop
cwtl
outsb
enter
arpl
inc
mov
sbb
and
xor
push
adc
add
inc
mov
in
in
enter
push
pop
scas
sub
and
mov
scas
repz
xor
shll
mov
test
or
push
test
cli
adc
imul
add
mov
mov
addb
fwait
dec
fsin
or
out
dec
add
pusha
mov
jg
mov
jb
jae
movsb
xchg
xchg
xor
dec
jg
push
dec
xchg
inc
stc
enter
mov
leave
lahf
fsubrl
test
int3
rcrl
xor
enter
out
inc
sub
test
pop
in
adc
fsincos
fnstsw
mov
push
jno
sub
movsl
ljmp
sbb
mov
push
xchg
xchg
iret
xorb
cs
sbb
aaa
in
in
leave
inc
jo
jp
addr16
xchg
inc
pop
sub
or
pop
and
subb
mov
pop
mov
adc
lret
jge
inc
cmpsb
fwait
push
repz
or
pop
and
lahf
int3
push
mov
mov
out
out
lcall
mov
push
push
mov
mov
loopne
add
fistl
cmpsb
dec
jno
push
lea
and
pushf
fnstenv
jns
jo
ss
mov
xor
pop
cmovnp
fyl2xp1
xlat
daa
mov
sarl
xor
outsb
lds
incb
xchg
mov
iret
icebp
jl
loop
cmp
mov
mov
test
sub
xchg
cmp
dec
in
int3
fidivrs
jecxz
push
adc
mov
imul
jnp
and
jle
mov
int3
mov
cli
pop
ss
ljmp
stos
shlb
stc
pop
stos
sbb
xor
mov
popf
aad
mov
out
sbb
jo
jnp
jg
sbb
cmp
mov
int
insb
mov
sahf
rcrl
enter
jno
imul
mov
out
std
dec
int
fdivl
fsubrs
int3
mov
and
popf
mov
out
mov
jl
jmp
movsb
pop
mov
push
sbb
hlt
out
loopne
fst
xor
adc
fdivl
repz
aam
shlb
aas
inc
dec
clc
fucomi
mov
xchg
das
lods
testl
mov
stc
cmp
cli
bound
xchg
add
xor
test
mov
jecxz
lds
outsb
inc
cmpl
test
or
sub
sti
xchg
fs
loopne
xor
adc
fptan
out
cmp
inc
es
cmpsl
mov
sbb
adc
sete
xchg
outsb
push
adc
mov
mov
js
rolb
push
xor
cmp
icebp
test
mov
aaa
lcall
cmpsl
or
addr16
test
stos
jns
addr16
xchg
ljmp
movsb
jo
movsb
xchg
mov
movsl
aad
dec
or
mov
and
xlat
dec
and
out
or
rcrb
push
stos
jnp
popf
adc
aaa
dec
cli
mov
or
inc
rolb
sbb
mov
mov
add
xor
loopne
or
mov
mov
mov
inc
add
mov
pop
pop
xchg
shr
fwait
jno
lcall
push
mov
sub
mov
mov
mov
jo
leave
mov
mov
and
xchg
inc
outsb
in
add
push
sub
test
or
mov
dec
dec
inc
push
push
loopne
ret
inc
xchg
aam
testb
mov
fdivrl
xlat
sbb
jl
lods
imulb
lods
mov
mov
into
inc
lcall
push
lods
pop
in
movsl
xchg
imull
sbb
mov
or
sbb
xor
dec
out
and
les
cld
sbb
lock
or
xor
xchg
outsl
xor
sub
and
dec
inc
hlt
add
and
out
not
jns
xor
and
in
aaa
ss
lcall
int
aad
dec
inc
jae
call
ss
push
sbbl
push
stos
ret
loope
mov
sbb
outsb
insl
pushf
push
stc
pop
inc
mov
out
pop
jmp
scas
dec
push
mov
jo
sub
xlat
in
test
push
mov
les
out
nopl
xor
mov
push
aam
test
push
inc
int3
in
sbb
ret
pushf
and
in
and
ds
sbb
sub
inc
shll
sahf
movsb
add
cmc
leave
pop
push
enter
das
mov
insb
pop
enter
cmp
jno
xchg
mov
push
or
pop
add
dec
add
sbb
cmpl
jp
adc
pop
mov
jmp
shl
mov
mov
xchg
aas
aaa
pop
jge
xor
popa
mov
fnstenv
xchg
xor
sub
shrl
js
mov
inc
cld
xlat
sub
jge
jbe
ds
inc
inc
adc
push
rclb
movsl
mov
cltd
out
xchg
scas
pop
pop
and
dec
repz
ret
call
imul
fmuls
mov
sbb
insw
mov
in
mov
jae
jg
popl
and
adc
lret
mov
and
jecxz
sbb
or
jle
push
jo
add
add
sbbb
enter
and
enter
push
xchg
push
test
jae
int3
rcl
fsts
arpl
out
cmpsb
lahf
testb
stos
dec
repnz
cwtl
jo
cmp
sbb
xchg
jg
mov
xchg
int3
inc
mov
std
adc
repz
push
jp
repnz
imul
sbb
adc
test
sub
sti
sahf
add
daa
outsl
or
icebp
ja
mov
in
pop
scas
shlb
inc
inc
sbb
push
sub
addl
mov
stc
mov
outsl
pop
adc
insb
fnsave
stc
fdivrs
data16
mov
push
push
or
mov
adc
mov
pushf
in
test
xchg
mov
jbe
jg
sub
test
xchg
sbb
adc
jbe
cmp
sarl
loopne
sti
sti
addr16
pop
or
les
inc
mov
cmp
mov
or
pop
sub
adc
je
loop
sub
lock
cmpl
lahf
out
cmp
adc
xor
jns
xor
mov
jns
lcall
xor
outsb
push
paddsb
jae
fs
or
add
js
xorb
sub
aas
subb
push
lcall
inc
int3
mov
sbb
leave
push
ret
mov
stos
xchg
vorps
lods
jo
testl
add
faddl
xchg
iret
test
cmp
dec
cwtl
adc
pop
or
push
lds
daa
fsubrl
jle
jb
jle
pop
in
xlat
dec
pop
out
iret
out
icebp
sti
imul
jne
cmp
test
push
sarl
andb
ljmp
jo
dec
ja
jnp
pop
not
cld
mov
rcrl
je
mov
mov
iret
or
lcall
repz
cld
pop
mov
repz
lret
sub
mov
sbb
enter
mov
lea
shll
stos
orl
dec
mov
pop
sahf
inc
jl
adc
dec
mov
inc
jge
adc
pop
lret
xor
pop
xchg
es
movsl
rorb
sarb
mov
adc
data16
in
leave
pop
add
push
lret
sahf
xchg
in
sbb
dec
inc
xor
pop
lahf
xor
fsubp
sbb
mov
adc
rcrl
int
icebp
lahf
sub
mov
xchg
mov
lock
dec
int
cld
dec
push
lret
fistpll
in
test
xchg
ja
cmc
cmp
mov
out
out
push
outsl
aam
dec
xchg
xlat
mov
mov
jno
int3
lcall
scas
dec
pop
ja
xlat
cmp
sub
test
mov
sbb
ficoml
jb
pop
test
scas
inc
push
xchg
pushf
movsl
lahf
pop
popf
push
jbe
mov
push
jg
rcrb
cmc
dec
and
mov
cld
cld
jge
sub
jp
aam
mulb
pop
lods
and
sbb
loope
mulb
push
mov
pop
nop
adc
loope
ja
pop
jmp
fsubrs
jle
push
or
jbe
xchg
insl
out
popa
mov
or
cmc
xor
pop
cmp
out
or
or
fwait
jne
int3
shlb
stc
das
ds
jnp
in
mov
add
cmp
les
les
inc
aas
adc
sbb
test
or
xchg
fisubl
xchg
ljmp
pop
and
mov
push
pushf
xor
inc
rcll
repz
cmc
mov
and
js
fwait
daa
cmp
cmp
ljmp
add
aad
outsb
xchg
xor
jmp
cmp
aas
adc
pop
and
pop
cwtl
icebp
pusha
iret
jbe
sub
scas
and
in
test
xor
lret
mov
cmp
inc
lods
repz
imul
leave
ja
shrb
mov
jb
and
ljmp
jns
imul
jmp
jg
sbb
jo
push
mov
in
cmp
jl
int3
add
push
jle
add
movsl
inc
push
and
rolb
out
into
hlt
movsl
mov
dec
iret
sahf
pop
repz
stc
xchg
sbb
movsb
jl
xlat
xchg
pop
jge
mov
sub
cltd
lods
ss
xrelease
clc
adc
or
pop
loope
pop
cmc
adcl
andl
pop
hlt
jle
dec
lea
inc
mov
int3
cmpsl
imulb
jbe
aad
lods
fdivs
jbe
add
or
cmp
pop
push
ja
adc
jg
sahf
pop
aaa
outsb
int
sbb
pushf
xchg
push
pushf
pusha
ss
scas
jnp
in
orb
clc
mov
inc
insb
es
je
lcall
adc
dec
fsubs
push
push
jmp
les
and
rorb
xor
adc
ja
ds
fwait
out
ljmp
cmp
inc
scas
inc
fistpl
sbb
cmp
xor
ss
push
repnz
or
scas
inc
sub
jb
fisubrl
mov
pop
je
into
push
xchg
into
jae
out
inc
jmp
mov
adc
cmp
xchg
iret
xchg
in
mov
jge
aad
mov
subl
rol
cmc
mov
mov
dec
and
lods
or
push
and
mov
cli
cld
hlt
js
push
and
inc
xchg
dec
or
and
sbb
xchg
pop
add
jo
sub
mov
mov
adc
or
in
or
sub
jnp
sbb
and
xchg
scas
adc
dec
jns
imul
je
ret
sbb
mov
pop
or
and
in
xor
inc
push
push
push
ljmp
mov
mov
cmc
cs
xchg
sub
push
das
fcmovb
inc
andl
pusha
outsb
lods
push
pop
mov
leave
inc
faddl
mov
in
bound
leave
dec
int3
out
daa
sbb
dec
cmpsb
call
daa
xchg
dec
into
mov
pop
inc
aaa
test
stos
xchg
lahf
sub
sbb
sub
sbb
push
and
dec
insl
sub
jb
shrb
ds
scas
pop
arpl
pop
adc
sub
jg
mov
icebp
inc
jmp
or
dec
mov
rorb
es
xor
leave
loop
je
push
loopne
or
cmovle
jne
xchg
fdivrp
jge
inc
mov
adc
inc
mov
and
mov
sbbl
imull
aam
mov
shll
mul
test
scas
lock
ret
inc
scas
dec
cmp
push
jecxz
aas
repnz
mov
cmp
xor
aas
scas
sub
add
lods
jno
sub
iret
insb
dec
jle
bound
sub
pop
out
adc
jno
pop
adc
mov
mov
imul
fcoml
dec
std
lods
mov
pop
lret
not
ljmp
pop
sub
scas
xchg
fisubrl
repnz
into
mov
jae
mov
or
testl
lock
aaa
lret
pushl
daa
or
loopne
enter
pop
xchg
and
pop
jne
pop
sub
sbb
mov
pop
xchg
out
pcmpeqb
shl
addr16
lahf
insb
lret
inc
repnz
jae
add
loop
das
mov
adc
sub
jle
adc
mov
loopne
cli
call
add
dec
and
or
cmp
mov
sbb
jno
movlps
xchg
outsb
shrb
xor
popf
fdivr
dec
sub
add
push
mov
orl
push
dec
inc
or
push
mov
mov
js
xor
sti
xor
daa
std
leave
cmp
imull
loopne
test
cmp
cmc
sbb
mov
dec
popl
bound
loop
adc
fldl
inc
incb
int3
and
mov
jb
pop
stos
sub
xchg
sub
fs
mov
pop
rcll
adc
pusha
mov
scas
push
sti
xor
inc
fcom
mov
mov
sbbb
sbb
lret
aam
insb
mov
mov
inc
push
test
sti
movsb
xchg
fst
call
aam
adcb
jge
popa
std
cwtl
adc
sbb
stc
roll
shl
mov
in
sub
sbb
and
xchg
aaa
push
rcrl
jb
mov
in
out
xlat
mov
sbb
fdiv
clc
stos
notb
pushf
aad
rcrb
arpl
add
mov
movl
out
mov
and
push
in
test
fstpl
out
mov
insb
out
icebp
rcr
jle
bound
cmp
cmp
call
fwait
out
cmp
adc
mov
dec
inc
ficoml
sub
orb
pop
push
in
inc
mov
sub
or
add
sbb
aaa
jb
mov
xor
xor
daa
xor
push
push
mov
xchg
mov
test
mov
sbb
xor
dec
out
sub
rol
std
flds
lcall
aaa
mov
loopne
jg
shrl
pusha
js
test
lods
and
popa
lods
icebp
add
adc
je
xor
stc
lods
adc
inc
fstpt
shlb
pop
popf
mov
or
push
or
cmp
cmp
sbb
jp
popf
xchg
imul
movsb
fimull
jmp
pushf
imul
out
fcomp
adcb
inc
xchg
jo
test
sbb
sahf
mov
mov
inc
lret
jge
cmpsl
repz
and
pop
shrl
and
leave
jg
mov
out
lret
lods
push
xchg
dec
dec
cltd
and
stos
mov
push
repnz
ljmp
pushf
xlat
cmpsb
mov
mov
mov
cli
add
jae
mov
lods
or
nop
jle
and
cmpl
mov
push
mov
jo
test
xchg
imul
push
fists
sti
xor
inc
mov
stos
call
cmc
inc
nop
xor
pop
pop
and
mov
aad
test
js
dec
pushf
ljmp
dec
add
cltd
or
push
decb
jne
pop
decl
jo
push
cltd
pop
repnz
jne
inc
movsl
in
pop
jge
push
pop
push
repnz
dec
loop
inc
mov
pop
cmp
mov
jne
push
pop
mov
jnp
rcrb
add
data16
dec
lock
cmp
js
popf
arpl
add
add
enter
mov
mov
out
jecxz
pop
xor
push
mov
mov
mov
xor
mov
sbb
rcl
lods
scas
fidivrl
sbb
adc
and
jno
leave
sub
sub
stc
arpl
test
divb
int3
icebp
je
and
lea
cltd
add
cmpsb
mov
and
jp
cmc
call
sbb
roll
inc
cli
inc
js
jo
jl
aaa
xchg
ret
lock
mov
sbb
jecxz
ds
lock
sti
jb
add
push
movsb
pop
inc
sbb
aaa
pop
and
bswap
jmp
icebp
les
das
inc
andb
bound
sbb
pop
xchg
jge
mov
lods
movl
scas
or
mov
sub
insb
mov
flds
repz
push
inc
fldt
mov
std
cmp
aad
pop
shlb
js
insl
out
fcmovne
dec
ljmp
rcrl
lock
mov
mov
cmpsl
addr16
stos
mov
jmp
xor
testb
fstl
xchg
xchg
cltd
cmp
cwtl
idivb
adc
sbb
xor
add
add
push
mov
cmpsb
or
push
ja
sahf
outsb
lret
ret
jns
ret
decb
lea
xchg
addl
shlb
sub
in
sub
or
lods
inc
or
push
pop
pop
jae
and
fs
ror
xor
stc
sbb
adc
push
ja
popa
push
mov
test
inc
rcll
nop
data16
push
and
inc
jo
mov
mov
add
xchg
push
sbb
xchg
cmpsl
adc
sti
xor
cmpsl
in
or
push
mov
cli
add
hlt
inc
les
adc
jno
or
ljmp
jns
push
push
pop
adc
cli
lcall
adc
stos
pushfw
add
or
dec
lret
fucomi
lea
add
xchg
dec
imul
dec
and
sahf
dec
mov
pop
mov
outsb
mov
loope
sti
pop
lcall
arpl
out
jno
cs
stos
fdivl
push
dec
jmp
pop
mov
test
ljmp
ds
outsl
push
lds
jecxz
ja
mov
or
in
movsb
jb
mov
pop
sahf
or
push
jne
mov
cmpsb
roll
sub
mov
adc
jg,pn
fwait
pop
lret
nop
add
iret
push
lret
xor
push
aam
nop
push
loopne
inc
and
data16
xor
int
mov
fstpl
jp
dec
andb
cli
inc
mov
aad
inc
pop
stc
xor
sub
lcall
loopne
adc
jmp
fadds
adc
clc
mov
pop
mov
in
push
lcall
rcll
jno
sbb
sub
mov
pop
pushl
fwait
adc
sti
loop
out
shll
mov
bound
mov
cwtl
fsubr
dec
stos
mov
sbb
iret
fucom
cli
pusha
add
sysret
orl
testb
inc
test
sub
int3
das
jmp
es
loop
clc
push
push
xor
rolb
or
dec
mov
jmp
push
xchg
imul
sbb
lods
insb
push
add
scas
xchg
dec
push
lret
adc
mov
fcmovbe
sub
push
jae
sub
add
ljmp
or
jb
xor
jecxz
loope
xchg
les
rcl
adc
shlb
insb
lds
leave
call
mov
xchg
mov
stos
pop
adc
sbb
mov
lahf
lds
xchg
push
cmc
mov
mov
movsb
pushf
mov
outsl
xor
iret
cld
or
mov
push
insl
out
test
xor
repnz
adc
xchg
cmpsb
cmp
cmp
movsl
in
das
std
lcall
fldt
mov
out
jo
inc
ja
sbb
sub
je
shll
jo
scas
inc
add
jl
notb
sub
xchg
and
inc
mov
pop
gs
test
sbb
lods
jae
popf
cmp
inc
and
stos
mov
ss
scas
jbe
xchg
fidivs
xchg
xlat
aam
and
in
imul
pop
sbb
or
xor
pop
jg
pop
sbb
xchg
cmpl
push
lcall
cmpsb
sahf
inc
jl
dec
jmp
push
cwtl
hlt
scas
loopnew
das
mov
jle
mov
repnz
adc
sbb
ljmp
jmp
xchg
cmp
xor
ja
pop
stos
fs
dec
lahf
jmp
adc
imul
mov
js
imul
sub
in
mov
sar
lods
dec
xor
pop
add
sbb
pusha
clc
mov
mov
imul
outsl
cmpl
movsb
sti
jb
call
push
sub
push
cmp
sahf
int3
dec
mov
mov
push
test
cmp
mov
out
int
mov
jne
and
mov
cltd
pushf
loopne
jno
cmp
cmp
jecxz
dec
mov
xor
mov
out
mov
stc
mov
or
js
loop
ss
and
sub
jge
mov
cmp
mov
scas
inc
idivb
out
ret
pop
xor
cmp
hlt
mov
pop
out
lods
dec
shll
or
cmp
cmp
add
push
and
dec
mov
push
cmpsb
push
dec
jl
repnz
movsl
lds
push
movsb
scas
cli
jle
mov
jg
dec
fs
and
mov
fstps
and
scas
test
or
xchg
mov
test
push
mov
jle
jbe
cmp
jge
pop
out
out
mov
mov
ljmp
lods
pop
paddw
es
and
lret
sub
je
movsl
insb
mov
outsb
gs
lea
or
addr16
inc
or
xchg
jns
leave
aad
clc
fimull
mov
xor
clc
cmpsb
lcall
ljmp
pmulhw
sbb
fldt
inc
or
mov
call
xor
lcall
and
sub
jmp
pushf
mov
xor
add
pop
xor
pop
rolb
rdtsc
out
stc
pusha
iret
dec
dec
loopne
dec
dec
mov
xor
and
fdivs
jg
jmp
push
mov
sub
mov
sbb
rolb
loop
mov
pop
hlt
adc
adc
adcl
es
fildl
data16
add
add
lods
sub
movsl
sbb
xchg
dec
jle
aas
pop
and
insl
inc
scas
pop
js
mov
gs
or
fwait
arpl
add
ret
cli
add
xchg
and
cmp
in
shll
aas
gs
loopne
sub
enter
add
xchg
dec
sub
leave
push
cmp
outsl
xchg
out
fstl
repz
shlb
test
lahf
cld
cmp
idivb
xchg
mov
lret
or
push
aas
loop
pop
fwait
pop
fbstp
clc
jb
sbb
pop
bound
xchg
sub
enter
fisttpl
jl
pushf
jge
add
cmp
push
outsl
les
bound
mov
dec
mov
sub
push
mov
adc
jbe
repz
imul
pop
add
ljmp
jns
insl
imul
rcl
lock
rolb
ds
cli
and
ljmp
cmc
pushf
sub
push
fwait
inc
push
fsubrs
dec
add
gs
and
cmc
mov
adc
cld
ljmp
ret
inc
repz
cmp
imul
xor
push
aam
in
sbb
enter
sti
aad
loopne
das
mov
orps
adc
inc
jbe
cmpsl
cmp
dec
lods
dec
mov
sbb
and
fwait
or
in
cmp
in
xchg
jo
inc
bound
xor
outsb
gs
shrb
fisttpll
out
cli
loopne
addr16
xchg
sub
loopne
gs
popf
test
add
out
mov
jns
in
lock
sbb
jo
dec
cld
xor
aad
dec
aam
cmp
test
out
add
ljmp
xchg
jnp
clc
fst
jo
dec
out
daa
or
inc
pushf
repnz
std
or
adc
pushf
lahf
push
jg
leave
cmpps
sub
aaa
cmpsb
insb
lock
jbe
mov
sub
hlt
loopne
push
lds
mov
mov
lahf
add
xchg
push
push
jmp
mov
lock
xchg
adc
jmp
cmp
ret
popf
in
imul
mov
push
enter
sub
add
test
xchg
mov
lock
cli
incl
adc
and
pop
aaa
cmp
jnp
push
and
mov
xor
adc
jle
push
call
or
jmp
das
test
or
imul
and
and
call
push
cmp
mov
and
mov
xor
in
leave
negl
sti
loope
mov
jl
repnz
repz
inc
dec
in
in
adc
aaa
cld
call
inc
mov
aas
aad
lea
jmp
scas
mov
int
jns
adc
pop
sbb
add
mov
movsb
repz
mov
sbb
lea
mov
cmc
jno
out
mov
ror
cmpsl
add
scas
lret
dec
jp
hlt
adc
cwtl
pop
movsl
push
ljmp
into
insb
add
push
cmp
xchg
jne
stc
cmp
jmp
out
out
or
aaa
icebp
pop
mov
xor
lret
imul
jmp
repz
push
gs
js
popf
cmp
and
hlt
mov
dec
fsubr
inc
shl
mov
adc
push
mov
leave
mov
jae
mov
cmp
mov
jb
mov
mov
aaa
mov
and
cwtl
das
insb
dec
mov
pop
mov
push
ret
rcrl
pop
loop
sub
loop
xchg
adc
pop
aad
or
fisttpl
gs
mov
loope
mov
lea
jns
rcl
sbbb
fidivs
mov
cmp
dec
and
push
rcl
mov
pop
mov
sub
add
mov
cmp
xchg
aad
and
mov
adc
and
popf
in
popa
cmpsb
cmp
fistpl
or
lock
cld
shrb
cs
nop
dec
test
imul
jae
adc
adc
push
shlb
mov
xor
das
mov
in
movsb
rcrb
movsb
jp
fsts
jnp
sahf
dec
pop
adc
test
call
adc
lcall
mov
pop
add
out
lods
pop
test
jns
adc
sub
mov
repnz
sbb
fadds
or
hlt
fisttps
jnp
push
out
rcr
cmpsl
fxch
nop
add
pop
loopne
jno
push
pusha
movsl
mov
fisubl
faddl
push
inc
mov
out
jns
in
xor
cmp
xor
scas
nop
pop
cmp
pop
loope
fs
jmp
pop
aas
cli
out
jl
cltd
cmp
aad
add
rorl
adc
and
pop
push
push
sub
sbbl
add
mov
stos
dec
lcall
inc
outsb
cs
pop
sbb
mov
es
mov
adc
mov
cmp
insb
in
adc
out
inc
lods
add
cli
push
out
adc
movsl
movsb
dec
ret
inc
inc
cltd
test
and
mov
mov
xor
ficoms
movsb
sub
push
xor
out
xor
mov
add
push
lcall
inc
shl
mov
jmp
rol
jno
add
mov
icebp
push
mov
and
inc
lds
aad
mov
daa
mov
lret
xchg
push
addr16
xchg
mov
cld
sub
in
xchg
add
jp
cwtl
sub
xchg
lret
testb
cmp
into
lcall
or
push
xor
ss
add
dec
or
loop
jl
loop
scas
fidivrs
add
stc
ret
call
fisttps
lahf
test
pop
push
push
divl
xchg
rorb
mov
push
nop
jbe
jge
or
repnz
outsl
jno
jno
push
test
dec
ja
cmc
and
insb
rorl
pop
test
or
mov
subb
mov
pop
mov
arpl
sbb
adc
pop
lock
dec
aas
xchg
int
je
lret
and
xor
stos
outsb
cmp
frstor
ljmp
jg
jae
push
dec
and
xor
cmpsb
push
cmp
rcl
out
rol
pop
sbb
cwtl
xchg
mov
out
ret
rcr
stos
dec
dec
loop
sbb
loope
fucom
sbbl
fsubrs
out
shl
stos
xchg
and
push
sub
sub
out
mov
jl
or
mov
dec
inc
sbb
lahf
lods
ljmp
lcall
lret
jp
rcl
je
fadds
mov
gs
mov
jl
dec
pop
test
or
insl
jecxz
xchg
sub
xchg
das
arpl
cltd
fildl
sub
lcall
into
push
fwait
sbb
mov
push
xor
xor
lea
lahf
pushf
cltd
in
fwait
jg
cmp
dec
mov
lret
pop
push
scas
push
sbb
sbbl
out
mov
repnz
or
push
lock
ja
sbb
jb
cld
cld
cmp
sbb
jne
and
sbb
cs
in
xor
adc
adc
push
loope
inc
fisttps
jns
dec
push
aaa
clc
ret
push
push
out
cmp
and
xor
sub
call
data16
bound
sub
cmp
incl
decb
dec
aad
or
stc
cmpsb
dec
mov
popa
add
cmp
call
jl
xor
sbb
push
cmpsl
ja
ljmp
movb
cmc
sarl
jae
in
add
pop
setne
mov
test
jns
add
sub
repnz
mov
inc
nop
fld
inc
push
adc
and
push
fdivs
jnp
sahf
mov
add
leave
repz
fimuls
dec
mov
sahf
push
mov
dec
mov
pop
mov
mov
mov
loope
jp
xchg
xchg
pop
iret
jle
inc
pop
mov
ljmp
jno
subb
push
jg
xor
je
push
pusha
mov
int3
or
pusha
dec
dec
fbstp
ret
pop
les
and
fsubs
sub
aas
sbbl
dec
add
xchg
paddsb
fildl
je
or
fisubs
loop
shr
mov
and
mov
mov
repz
dec
test
lret
sub
test
inc
shll
xor
dec
fsubr
adc
pop
jae
subb
enter
sub
test
icebp
and
ja
jmp
sbbb
jbe
orb
insb
jne
bound
andl
test
jmp
int
cltd
leave
imul
jmp
in
mov
nop
jbe
sbb
cmp
sub
inc
xor
push
jbe
xchg
in
scas
cmpsb
fwait
push
pop
cmpsl
and
add
dec
mov
fstpt
lock
mov
mov
jae
mov
sarl
insb
mov
sti
and
push
push
call
cmp
lret
out
add
mov
ret
fld
lock
cmp
fstps
xor
stc
cmpsb
adcb
inc
iret
insb
clc
jns
cmpsb
or
ret
movsb
insl
repz
pop
adc
inc
add
ljmp
add
mov
int3
xor
adc
ret
out
shll
popa
add
cmc
sub
pop
les
bound
pop
push
sbb
jne
out
fisubrs
add
push
and
or
sahf
pop
cmp
fdivrp
out
aam
dec
nop
scas
jle
lods
push
roll
xor
movsl
sahf
sub
fnstcw
mov
push
dec
xor
jge
je
mov
push
out
inc
lods
inc
andl
daa
popf
divl
xlat
sub
ljmp
invd
aaa
push
enter
int
or
mov
cmovb
dec
stc
xor
mov
mov
mov
pop
scas
and
and
sub
lret
fnsave
std
jl
mov
jbe
xchg
enter
xor
sbb
lahf
std
xchg
pop
pop
sbb
test
xchg
fdivrl
sub
xor
lret
lcall
pop
inc
scas
mov
fdivrl
std
stc
in
loop
cmp
rclb
fnsave
dec
sti
leavew
xchg
nop
jp
vshufps
cmp
xchg
mov
lcall
test
test
adc
mov
in
xor
js
enter
mov
sub
mov
sbb
cwtl
out
push
into
push
test
iret
loop
push
js
add
lahf
push
push
jae
xchg
bnd
and
out
lods
rorb
lea
mov
mov
inc
inc
jne
xlat
cmp
dec
pop
jecxz
ds
enter
sub
popa
test
xchg
adc
lds
mov
cmp
popf
push
mov
rcl
addr16
test
mov
mov
push
stos
out
ss
fbld
mov
loope
mov
and
stos
fbstp
rclb
cmpb
sbb
es
add
adc
ljmp
insb
mov
in
lret
mov
xor
fldt
in
mov
mov
dec
push
jbe
sbb
test
iret
mov
and
das
imul
mov
cmp
pop
sarb
test
pushf
or
mov
adc
xchg
or
lret
fimull
insb
mov
inc
or
xlat
jp
xor
pushf
mov
jnp
sbb
sub
cmp
sbb
ffreep
testl
sbb
adc
cmp
cs
iret
xor
dec
cld
ja
push
jo
neg
sbb
ret
or
cmp
adc
dec
jae
and
stos
into
ret
movsb
movsl
mov
insl
jecxz
xlat
push
in
stc
inc
fmull
mov
dec
sub
aas
ljmp
fcoms
or
inc
sti
pop
fcmove
dec
mov
sti
adc
in
sarl
inc
leave
or
adc
loopne
ficoms
cmp
jbe
icebp
outsb
dec
test
int3
xchg
jg
or
loopne
int3
sbbb
mov
test
push
ja
or
xor
cmc
imul
dec
stc
popf
test
xchg
push
pusha
pop
jmp
cli
xor
fildl
mov
adc
push
inc
jmp
adc
insb
cmp
add
out
jl
pop
adc
mov
cmpsb
sarl
jge
outsl
mov
rcrl
enter
idivb
out
mov
stos
rclb
cld
mov
ffree
xor
shrl
xchg
dec
pextrw
jle
addb
iret
jecxz
aam
mov
iret
mov
jmp
test
aaa
loopne
sbb
lods
lret
bound
fwait
int3
jecxz
stos
js
insb
sahf
pop
push
jmp
mov
cld
cs
jl
ret
in
aam
lret
lret
xchg
test
mul
cltd
mov
mov
stos
mov
cltd
scas
mov
shl
sbb
rcrb
mov
ret
push
lds
dec
out
and
push
cmp
dec
xor
cmp
push
std
push
xor
cmp
mov
dec
ret
adc
sar
mov
inc
mov
dec
push
pop
mov
rclb
jmp
sub
fstp
adc
mov
les
enter
xor
push
lcall
mov
mov
dec
jmp
add
xor
int
xchg
aad
jne
dec
or
mov
mov
pushf
jbe
and
sub
les
ds
cmpsl
jge
decb
out
sbb
dec
rcrb
out
in
or
and
outsl
mov
push
sbb
fisttpll
scas
cmp
ret
and
lahf
loopne
stc
xor
fimuls
sarb
add
stc
xchg
addl
enter
ret
push
xchg
sub
lods
and
je
push
out
or
aas
cmp
stos
or
bound
fiadds
mov
ds
rep
insl
sar
movsb
dec
sti
add
adc
mov
add
iret
mov
stos
xchg
test
sbb
clc
mov
pop
add
ja
stc
adc
inc
testb
insl
push
mov
aam
aas
andl
aad
or
or
push
pop
inc
dec
lock
mov
sti
or
sub
add
jmp
lds
stos
cmp
and
cmc
xchg
and
push
xlat
flds
or
sub
call
xchg
sub
call
jno
pop
repnz
add
and
mov
iret
and
mov
int3
out
out
inc
lock
sub
gs
dec
xchg
and
cmp
lahf
and
dec
mov
xor
jno
xor
push
scas
aad
out
daa
and
adc
dec
daa
xchg
adc
lret
int
mov
mov
jae
jnp
jns
insb
mov
xchg
outsb
ret
ja
scas
mov
lret
pop
movl
push
loop
orl
aam
rclb
sti
leave
scas
bound
nop
push
mov
or
inc
dec
mov
popf
dec
jo
sar
jne
scas
clc
movsl
inc
sub
ret
andb
jns
rcrl
mov
mov
xchg
in
movsl
mov
and
inc
movsl
lea
lahf
mov
xchg
inc
cmp
add
jecxz
or
mov
sahf
mov
cmpsb
cltd
xchg
pusha
mov
out
stos
and
or
leave
lea
dec
sub
add
icebp
xchg
inc
cltd
pusha
pop
mov
vpshaq
aam
js
lods
inc
mov
cmp
nop
negb
cmpb
ljmp
inc
dec
andb
or
fbstp
dec
test
loop
push
fnstsw
cs
dec
add
in
das
xchg
pop
ss
fistpl
push
aas
adc
add
addr16
subl
jno
sub
sub
jne
adc
xchg
idivb
ret
arpl
cltd
fimull
js
or
sahf
test
adc
mov
sbb
push
adc
and
jne
shll
enter
jno
jmp
push
std
cmp
lds
fmuls
mov
shll
lods
dec
jne
or
mov
loopne
rcll
dec
sbb
cmc
mov
lret
jmp
lahf
mov
and
xor
cwtl
scas
call
call
aad
test
lds
lcall
sbb
enter
or
add
cld
les
movsl
sbb
aas
jno
cs
jbe
gs
stos
fimull
inc
test
mov
movsl
rcr
mov
jns
jl
pop
push
pop
ret
leave
hlt
mov
mov
int
nopl
outsl
add
lcall
sbb
or
dec
mov
out
ss
loop
out
dec
fildl
js
push
pop
pop
mov
js
xor
mov
jmp
movsb
xor
cmp
aaa
insb
mov
mov
sub
loopne
xchg
mov
fwait
add
and
xor
xchg
in
xor
and
and
out
out
pusha
adc
xchg
mulb
ror
add
xchg
push
cmp
pop
inc
push
dec
mov
scas
outsb
pop
push
adc
addr16
inc
cmp
and
add
push
ffree
inc
inc
mov
push
xchg
or
lret
fcmovnb
test
jbe
leave
mov
aas
pop
and
bound
mov
sbb
jne
out
subl
ret
into
jmp
dec
cmp
dec
or
clc
or
cwtl
pcmpgtw
add
sbb
dec
cmp
mov
fsubl
cltd
orl
add
f2xm1
cmp
inc
jmp
js
push
push
push
out
addl
in
lock
push
test
cmp
fsubr
dec
shll
mov
scas
add
jg
push
cmp
push
push
pop
test
jl
xchg
mov
mov
mov
imul
and
pop
stc
mov
int
mov
xor
jb
fldcw
mov
xor
inc
jp
jnp
sbb
and
lret
imul
jmp
rcrl
imul
dec
popf
aas
or
insl
stos
lock
sbb
fstpl
jns
xor
add
fisttps
xor
test
add
adc
inc
xor
cmc
lret
push
test
imul
aad
mov
ficoms
sub
jle
jmp
mov
sti
inc
jno
jecxz
sbb
cs
fwait
hlt
cmp
dec
mov
adc
cmpsl
add
iret
jecxz
push
dec
fwait
sub
fs
repz
xchg
mov
cld
insb
and
aam
das
leave
sub
xor
fldcw
xor
repnz
and
dec
push
out
mov
xchg
cmp
mov
mov
test
in
cmpb
adc
mov
imul
jecxz
sub
std
test
jo
pop
inc
xchg
popf
jbe
cmp
fs
add
ss
fisttpll
int
sti
out
fidivrs
mov
or
data16
mov
sbb
dec
pop
fs
movsb
add
mov
test
mov
les
popa
jp
xor
inc
in
je
mov
cltd
std
scas
insl
pop
es
xchg
push
bound
cmpsl
mov
dec
mov
mov
add
pop
fs
pop
push
std
sbb
aaa
push
mov
sub
insb
add
mov
into
or
nop
add
xor
pop
rclb
pop
into
mov
and
and
sub
data16
xlat
out
inc
and
or
ret
in
cwtl
es
and
pop
cmp
iret
fiaddl
js
xchg
jno
aaa
adc
adc
and
xchg
jbe
lock
mov
into
ljmp
adc
push
aas
jmp
fiaddl
cmpsb
int3
dec
xchg
xchg
jnp
loop
cmpb
mov
test
in
push
int
push
xor
popa
fistpl
je
jo
pop
mov
dec
dec
mov
mov
mov
js
addr16
dec
lahf
sbb
in
sub
inc
adc
stos
iret
dec
jno
adc
xor
push
xchg
sahf
adc
mov
not
sti
dec
je
or
push
popa
aas
or
sbb
shr
add
push
push
insl
or
fwait
lods
or
lret
test
cltd
lahf
inc
push
enter
lea
jecxz
shlb
jg
pop
decb
add
cli
loopne
arpl
sbb
xchg
jne
sbbl
in
into
mov
cld
dec
fwait
and
add
stos
cmc
ljmp
dec
and
and
xchg
cmp
lock
xchg
mov
push
imul
in
lret
dec
shl
mov
push
pop
xor
pop
pop
or
fstpl
jnp
or
out
lds
imul
xor
fwait
pop
repnz
mov
mov
cmpsb
idiv
jle,pn
sbb
xchg
sub
pop
adc
add
imul
arpl
fildll
dec
push
lods
das
shll
lahf
lds
mov
data16
rcr
push
fs
dec
push
popa
xor
movsb
lea
outsb
and
in
adc
rcl
loope
push
es
mov
pop
inc
cs
popa
cltd
or
out
push
xchg
loopne
push
xlat
cld
into
jbe
jl
and
out
data16
nop
push
sbb
and
mov
aam
sub
iret
xor
cmp
dec
clc
jne
mov
in
cmp
jg
out
add
or
das
loope
das
cmc
pop
jb
aaa
insb
push
sbb
xor
mov
mov
insl
insb
xchg
sub
test
ds
out
or
lret
out
jecxz
orb
std
pusha
dec
out
or
xchg
rcrl
xor
loop
imul
test
test
cmp
call
jne
jb
inc
xlat
push
std
div
pop
gs
jl
test
out
mov
leave
imul
xchg
rcr
mov
pop
adc
add
or
push
aas
pop
xor
adc
fs
push
xor
pop
mov
jl
jno
adc
outsb
lods
enter
or
loop
lret
sbb
xor
outsb
in
test
gs
das
sbb
jmp
lcall
insl
int
fwait
fwait
les
xchg
xor
adc
loope
mov
in
xchg
std
in
mov
bound
hlt
pop
inc
mov
repz
test
mov
xor
cmpsl
mov
ficompl
ret
push
mov
mov
xchg
adc
ficoml
jle
jle
sar
into
lret
js
cmpsl
dec
int
pop
add
and
cwtl
fsubrp
mov
push
scas
xchg
cmp
mov
fdivl
clc
push
clc
faddp
lcall
add
cmp
pop
lret
fdivp
clc
fwait
ljmp
jmp
sti
pop
push
pop
pop
pop
jg
pop
lea
jp
and
and
jle
jb
std
shll
or
sub
repz
push
and
mov
cmpsb
mov
aam
push
cmc
dec
push
push
rclb
dec
xor
aas
xor
pop
inc
ret
ljmp
popa
jnp
aaa
aam
cli
and
mov
mov
or
sub
push
mov
sbb
nop
inc
sbb
cmpsb
es
movsb
cmp
test
fwait
and
mov
xchg
xchg
inc
je
mov
test
mov
pop
or
fchs
pop
inc
inc
std
adc
pop
inc
xchg
inc
aad
add
loop,pt
fisubl
fnstsw
in
lahf
pop
ret
and
xchg
mov
pusha
insl
dec
adcb
sbb
mov
in
sbb
jecxz
cmp
jmp
outsl
scas
jmp
pusha
dec
cmp
rorl
sbb
sub
dec
add
mov
es
cmpsb
sahf
sahf
fsubrs
lret
add
stc
mov
mov
cmpsb
pop
lock
or
hlt
sbb
in
lea
mov
push
xor
xchg
dec
xor
test
lock
cli
mov
xchg
jmp
or
push
xchg
push
sub
or
rclb
mov
jae
sbb
leave
push
in
leave
outsb
jnp
adc
out
stos
sub
jno
cli
mov
mov
in
adc
pop
xchg
xor
dec
dec
dec
adc
lock
mov
cmp
int3
dec
mov
inc
cltd
xor
pop
mov
into
aam
push
repnz
arpl
outsb
stc
shlb
and
mov
imul
mov
aam
jmp
pop
sub
pop
add
scas
fcmovb
cli
divl
movswl
outsb
shll
icebp
xor
jp
in
xor
xor
test
ret
js
aas
cmp
sub
mov
ss
mov
adc
sti
das
jns
jnp
inc
push
lret
sbb
repz
or
inc
ds
sub
push
aaa
ss
jmp
push
mov
push
pusha
push
in
mov
setne
add
addl
inc
inc
inc
insb
popf
push
jb
sub
leave
adc
mov
mov
and
mov
scas
xchg
cmp
lods
ss
imul
xor
add
adc
enter
inc
pop
fs
jp
mov
daa
arpl
jl
fs
or
jl
clc
outsl
dec
test
imul
mov
lcall
push
dec
add
frstor
xor
xchg
outsb
mov
add
les
or
addl
adcb
pop
aad
or
pop
aam
ret
push
je
hlt
and
jbe
inc
mov
jle
dec
rcl
push
sbb
sub
mov
loopne
dec
std
dec
and
xor
popa
jae
adc
mov
jl
mov
mov
fmull
rcll
lods
dec
push
dec
ss
cli
sub
or
or
push
int3
xchg
inc
pushf
xrelease
lahf
stc
pusha
sbb
lahf
fdivrs
scas
mov
daa
jecxz
fdiv
aas
pop
mov
fildll
inc
xorb
push
and
push
rcr
push
int3
xchg
test
and
scas
push
push
mov
sub
mov
push
shr
xor
lods
pop
lods
pop
lods
push
scas
cwtl
test
adc
add
cmc
cmp
cmp
mov
and
stc
mull
add
cwtl
mov
scas
pop
add
arpl
jns
inc
test
adc
lds
dec
dec
xchg
push
xchg
mov
push
mov
repnz
ja
and
push
xor
jl
jno
sbb
mov
aad
ret
mov
repnz
les
cmc
inc
xlat
mov
negl
daa
aad
nop
test
add
roll
sbbl
cltd
fs
mov
lods
sub
sub
out
mov
lds
jl
pop
mov
mov
adc
mov
xchg
adc
fiadds
mov
jne
into
mov
out
jle
xlat
push
pop
mov
push
sbb
pop
jecxz
push
cmpsl
sbb
sub
and
pop
inc
mov
xor
cmpb
fnstsw
test
jp
cwtl
push
adc
sbb
xchg
cmp
fidivrl
sbb
hlt
ljmp
mov
adc
or
out
jp
sbb
jmp
add
movsl
dec
movsl
popa
push
or
adc
jns
mov
sahf
loop
mul
out
mov
and
shlb
es
mov
je
mov
cmc
pop
stos
addr16
mov
addr16
pop
push
push
mov
outsl
sti
inc
xchg
incb
loope
push
sarb
gs
mov
xor
push
pop
pop
std
cwtl
mov
ds
xchg
mov
stc
mov
jns
jns
pop
jno
inc
push
out
push
dec
repnz
mov
popf
out
jle
je
push
push
mov
sub
imul
adc
lahf
adc
sub
pusha
insb
psraw
sub
lcall
std
mov
push
or
roll
popf
lock
in
mov
mov
call
adc
adc
jge
sub
imul
jl
insl
mov
xor
stc
push
cli
xor
insl
xchg
shlb
push
fdivrs
scas
jg
leave
popf
fistpll
fsubp
xor
xorb
mov
iret
push
and
push
mov
and
test
or
daa
jne
repz
outsb
dec
in
mov
push
cmp
fdivrp
xchg
pop
mov
mov
add
test
mov
sbb
fnstcw
in
xchg
jl
fistpll
push
mov
fisubrl
ljmp
fcomp
jmp
add
std
shlb
mov
rcrb
mov
fs
xor
cmpl
icebp
pop
icebp
cmp
mov
clc
xor
fwait
dec
pusha
std
push
pop
in
je
rol
ret
lods
dec
inc
sub
imul
in
jl
lret
lock
push
inc
xchg
adc
and
or
xor
push
insb
fcoml
push
fwait
pop
cmpsl
adc
test
sbb
fnstenv
fld
repz
mov
out
or
gs
dec
popf
mov
xchg
js
xor
xlat
or
push
jo
daa
adc
sub
in
sti
ficoml
bound
xchg
mov
pusha
add
pop
push
mov
pop
or
xor
dec
ja
mov
lock
pop
sub
jp
dec
fcoms
add
sub
gs
aaa
pop
pop
mov
jo
mov
jne
mov
jb
push
shlb
mov
loopne
scas
mov
js
pusha
setns
pop
sahf
mov
lods
fbstp
xchg
sbb
sbb
sbb
lcall
movsb
div
mov
sbb
sbb
jno
push
jecxz
pop
mov
push
int
lods
fs
push
fcmovbe
in
imul
push
adc
enter
mov
movsb
mov
pop
and
repnz
std
aad
int
insl
xorl
fidivs
or
cmpsb
sub
xchg
mov
add
roll
adcl
mov
jge
dec
inc
add
jnp
add
inc
and
lret
clc
push
iret
addl
dec
xor
mov
call
cmp
test
mov
aam
hlt
push
incl
cmp
mov
xlat
mov
jne
icebp
pop
mov
or
sbbl
and
sbb
cmp
ret
mov
sbb
lock
push
mov
out
rcll
mov
hlt
mov
repnz
add
push
lret
out
add
push
jne
fwait
outsl
push
call
push
dec
addl
cmp
mov
and
cwtl
imul
ds
insb
rcll
idivl
add
and
adc
std
lahf
mov
push
xchg
test
shll
jae
mov
icebp
scas
or
rcrb
xor
jp
fcmovne
push
mov
enter
push
add
mov
ret
mov
and
push
outsb
dec
cmc
jecxz
adc
sub
mov
mov
dec
insl
mov
loope
stos
inc
fstl
lea
stos
pushf
test
aam
mov
movsb
fadds
cmp
std
dec
cmpsl
xchg
xorl
cld
leave
clc
fldl
ss
jne
test
adc
xor
jl
jo
in
scas
adc
int
daa
aaa
movsl
in
or
inc
jnp
cmp
stos
add
sub
fdivp
les
add
push
sub
push
xor
inc
mov
mov
lret
push
pop
daa
xor
popf
in
out
add
xor
dec
add
scas
stos
and
lret
fldcw
push
or
push
cmp
dec
popa
aad
stc
movsl
jecxz
out
dec
je
aam
mov
sbb
out
rorl
fistps
and
repnz
call
add
mov
dec
fildll
nop
mov
adc
lahf
ljmp
add
in
lea
ret
rclb
loopne
cpuid
mov
mov
mov
inc
shlb
adc
lcall
adc
shll
mov
pop
adc
lcall
in
lea
add
mov
lcall
call
push
push
addr16
xchg
inc
sub
outsb
das
shlb
dec
and
rdpmc
dec
cmp
and
xor
push
rclb
pop
dec
inc
push
pushf
insl
sub
adc
pop
pop
mov
xor
scas
push
inc
cmp
push
sbb
jo
mov
hlt
int3
jecxz
enter
jns
push
cmp
add
and
enter
push
je
cmp
jnp
pusha
push
fstps
or
lods
sti
pop
inc
xchg
sarb
and
out
dec
fucom
xlat
inc
xlat
repz
outsb
fsubl
lds
cmp
mov
sub
dec
mov
xchg
inc
adc
or
mov
in
dec
clc
cli
daa
syscall
jp
cli
aam
xchg
pop
popf
pop
adc
mov
cmp
out
outsb
out
mov
push
aas
fistps
out
push
cli
mov
xor
rolb
push
or
call
mov
aam
in
cli
push
icebp
mov
and
daa
pop
dec
add
dec
dec
mov
jg
lcall
inc
mov
dec
sbb
and
pop
call
bound
and
shll
into
aad
scas
mov
cmc
cwtl
xor
pop
cmp
mov
or
lret
imul
outsl
push
mov
rorb
cwtl
adc
sbb
lods
mov
enter
scas
dec
insb
pop
mov
int3
rcl
fidivs
sub
insl
or
or
sarb
cli
pop
sub
test
lret
mov
test
pop
loopne
inc
scas
push
cmpsl
push
js
jecxz
out
imul
shlb
repnz
jl
repnz
jb
outsl
mov
roll
imul
lret
mov
mov
fsubrl
adc
enter
xchg
sub
sbb
push
mov
pop
cmpsl
jge
es
cld
fld
nop
mov
dec
mov
lds
add
dec
push
push
add
das
in
lret
subl
pop
jmp
loope
int
fdivl
icebp
ja
xchg
rorb
dec
dec
xchg
sti
sbb
and
icebp
adc
or
sahf
mov
ret
int3
into
jae
push
fs
fs
pop
movsl
imul
sbb
outsl
push
mov
es
pop
fcomip
sbb
jg
jmp
mov
out
cmp
sbb
or
pop
lods
cmp
shll
lcall
test
scas
cwtl
push
lods
mov
das
fadd
fcoml
xchg
mov
sbb
enter
imul
ret
adc
rcpps
outsl
lods
loop
pushl
adc
scas
fisttpll
push
dec
sub
fldl
ret
popa
push
sub
in
mov
sti
and
sub
repnz
mov
jo
call
push
xchg
push
cs
jno
mov
pop
xchg
lret
lds
add
mov
sub
mov
fs
cmp
jecxz,pn
adc
mov
das
hlt
int3
mov
add
into
loope
sbb
mov
cltd
in
inc
dec
push
xchg
sbb
addb
fidivrs
imul
jmp
pop
popf
fnstenv
jle
jo
dec
fbld
cmpsl
into
xchg
fstp
inc
lea
repnz
mov
cmpsb
arpl
mov
je
mov
mov
in
mov
es
jb
dec
mov
add
add
cmpb
mov
push
push
inc
mov
insl
stos
sahf
orl
test
loopne
roll
sbb
mov
xor
cltd
xchg
pop
fstps
pop
pop
jp
popa
lcall
fdivrs
bound
adc
jno
mov
imul
repz
jbe
push
jle
and
and
dec
clc
xchg
mov
dec
scas
fimull
fstps
insl
jl
push
gs
mov
add
push
xor
insl
xchg
and
in
mov
sbb
mov
sbb
loopne
ret
sub
sbbl
xchg
iret
nop
scas
dec
sub
imulb
jne
cmpsb
ljmp
dec
out
jno
xor
pop
dec
cmpsl
sub
subl
pop
pop
jmp
pusha
inc
cmp
fiaddl
ljmp
lcall
sbbl
mov
and
mov
mov
mov
add
jb
push
iret
stc
enter
testl
push
hlt
mov
adcb
fisttps
loop
jb
lahf
mov
mov
int
out
imul
add
subb
lods
test
mov
mov
fsubrl
test
lret
je
fstl
sub
ret
loop
pop
mov
decl
rorl
ret
test
jne
ja
sub
and
jle
shll
mov
insl
loop
pop
int3
fsts
cmp
jo
test
adc
inc
stos
adc
sbb
mov
cmp
mov
in
jg
or
notb
outsb
icebp
je
in
pop
lcall
pop
lea
test
sbb
and
cli
pusha
ja
mov
ret
mov
mov
push
mov
lahf
mov
jae
test
testb
shll
pop
mov
cs
shrl
mov
aad
add
sub
cmp
cmp
or
lea
sbb
sarl
push
push
xchg
xchg
out
inc
sub
sbb
add
jno
or
cwtl
jno
enter
inc
shl
sbb
cmp
stos
cltd
push
mov
push
mov
or
inc
and
fmulp
aam
and
dec
adc
cmp
test
and
bound
hlt
pop
leave
push
and
rclb
mov
and
loopne
mov
add
mov
lcall
lcall
mov
mov
aad
stos
jg
mov
aad
lret
pop
xor
dec
push
insl
inc
xor
fsubs
mov
neg
mov
insl
repnz
sahf
xlat
xchg
push
out
movsb
mov
call
out
sub
insb
mov
xor
movsb
dec
add
inc
popa
test
enter
js
and
es
cld
jnp
pop
xor
std
pop
dec
idivl
loope
xchg
xchg
out
filds
loope
pop
popf
xor
add
mov
push
xchg
fimull
shrb
int
shl
fcmovu
fs
loop
jbe
pop
or
adcb
aas
in
in
fs
jo
jo
scas
int
bnd
adc
jns
arpl
xor
mov
jge
lods
sbb
pop
cmc
and
xor
push
jbe
lock
roll
dec
loop
movsb
pop
mov
addl
cmp
mov
mov
fcoml
add
inc
pop
out
push
jg
mov
adc
loop
mov
leave
push
adc
int3
and
cmp
test
jecxz
and
stos
scas
addr16
hlt
fcmovu
mov
xchg
fimuls
inc
pop
js
stc
xchg
stos
sbb
popa
out
rcll
es
addr16
lcall
push
xor
packsswb
les
fs
push
lds
jnp
lcall
mov
std
icebp
call
call
xchg
jp
push
or
test
push
stos
into
jp
in
sub
pop
mov
xlat
icebp
movsl
sbb
xor
push
dec
clc
jge
arpl
push
pop
popf
andl
movsb
adc
cltd
jnp
pop
jle
jno
xor
insb
leave
push
xchg
fisubrs
test
scas
fimull
out
leave
aas
lcall
mov
inc
loop
adc
adc
loopne
and
test
in
fimull
js
popf
dec
out
nop
jno
iret
push
push
cmp
jp
sbb
enter
int
ret
push
mov
adc
mov
xchg
imull
and
leave
push
jmp
mov
lret
or
call
aad
gs
popa
hlt
adc
and
fsubr
cli
jp
adc
imul
mov
xchg
shlb
jbe
jo
sub
cmp
sbb
js
lcall
or
mov
lret
sahf
jns
movsl
add
outsb
arpl
mov
call
push
pop
adc
bound
mov
mov
mov
adc
push
imul
push
adc
daa
jb
rcl
scas
push
pusha
lahf
mov
in
cmp
dec
xchg
movsl
stos
scas
popf
outsb
mov
mov
cmc
mov
cmp
mov
and
xchg
and
or
add
aam
xor
ja
pushf
mov
mov
movsb
clc
jb
scas
loop
lods
mov
out
daa
ret
xchg
lcall
pop
test
add
aam
divl
sbb
fs
js
adc
ljmp
adc
jo
outsl
jecxz
retw
inc
test
sub
push
fidivl
adc
data16
scas
lods
pop
and
test
xor
fiaddl
mov
dec
aad
cmc
aas
xor
or
mov
pop
jmp
loop
and
bound
jb
mov
mov
jne
outsl
add
sub
push
xchg
push
xchg
mov
popa
cmp
in
adc
inc
mov
in
fmul
std
into
lods
lea
pop
mov
mov
jp
xor
inc
popa
and
movsl
dec
dec
rorl
in
cld
loopne
cmpsb
mov
fldt
lock
leave
outsl
mov
stos
lahf
hlt
cmp
adc
leave
push
fidivrs
aaa
mov
aas
test
inc
inc
pop
ret
fisubs
test
cld
aad
push
dec
jp
and
repz
push
dec
cmp
mov
inc
mov
mov
pop
sub
je
sub
inc
push
ficomps
jl
test
jne
aaa
jo
push
pop
jge
dec
pop
sbb
mov
imul
pop
sub
ret
rcll
es
add
icebp
mov
je,pt
jb
xchg
lods
pop
sbb
mov
mov
addr16
int3
in
sub
mov
push
adc
pusha
mov
mov
popf
jne
push
dec
and
nop
nop
enter
dec
loop
in
add
xchg
jmp
int3
cwtl
std
scas
cmp
out
mov
inc
mov
lea
lods
adc
lods
enter
and
lea
sbb
and
cmp
jmp
push
fbstp
orl
adc
and
rclb
push
test
dec
sub
jle
gs
imul
push
repz
fucomp
bound
mov
ret
pop
xchg
mov
aaa
testb
mov
or
ffreep
xchg
loope
inc
mov
cmp
inc
subb
ja
xor
lret
inc
pusha
imul
mov
and
xchg
sub
sbb
inc
ljmp
or
push
jo
fmull
mov
leave
cmp
lds
sbb
sbb
loop
fidivrs
das
jns
dec
lea
cmpb
dec
data16
pusha
in
push
orl
incb
aad
addr16
cmp
cli
lea
add
in
or
popa
lahf
stc
cmpsb
xchg
or
loop
lods
adc
xchg
pop
xchg
sub
jo
clc
hlt
incl
shlb
test
ljmp
cltd
ja
mulb
push
lods
inc
repz
jg
mov
and
jmpw
pop
lcall
mov
pushl
xchg
das
rolb
and
data16
outsl
lret
cmpsl
xchg
je
sbb
shlb
xor
cmpsl
std
out
int3
pop
xchg
push
negb
dec
iret
js
jo
filds
out
cmp
sbb
jle
xchg
jne
cmp
cmpsb
pop
or
mov
xlat
cwtl
repnz
scas
push
rorb
divb
xchg
imul
aaa
push
mov
sbb
mov
arpl
scas
cli
push
push
pop
jne
xchg
call
dec
aaa
sub
jge
clc
mov
not
xchg
push
roll
leave
or
or
xor
in
pop
xchg
adc
push
fldenv
repz
out
mov
lahf
jb
xchg
int
adc
mov
int3
pop
dec
int3
in
cwtl
push
push
jo
and
sub
or
sub
pop
dec
sub
fwait
sbbl
in
js
jae
pop
insl
int3
or
sbb
jae,pn
sub
adc
mov
mov
mov
adc
loop
sbb
or
rcrb
cmp
mov
lods
mov
daa
sti
in
push
testb
aad
sbb
mov
jge
mov
add
ret
lock
fidivl
jle
nop
ljmp
cltd
imul
and
dec
mov
mulb
into
add
push
fs
ja
jge
push
xor
dec
iret
lret
cmp
sbb
adc
ja
pop
push
xor
bound
sti
push
arpl
pop
gs
xor
pop
cmp
les
fnsave
adc
fs
pop
cwtl
sub
rcr
jecxz
int3
cmp
xchg
push
and
jecxz
add
xchg
cltd
sub
xor
mov
call
add
mov
xchg
punpckhdq
nop
push
add
out
les
es
lock
sub
pushf
xchg
jecxz
add
ret
mov
inc
out
sub
sbb
xchg
inc
adc
pop
lods
jo
lods
stc
mov
and
cmpsb
movsb
xor
xor
stos
cwtl
decb
aas
xor
push
outsl
cmpb
mov
cmp
mov
xlat
lahf
and
incb
sahf
shr
imul
shll
ja
outsb
and
cmpsb
enter
jns
inc
pop
outsb
xchg
fisttps
aam
popf
mov
fwait
sarl
jp
dec
xchg
fsubrs
movsl
dec
iret
imul
mov
test
add
jnp
pop
xchg
incl
adc
imul
popf
sbb
aam
xlat
add
or
mov
push
sub
outsb
mov
push
xchg
xchg
cli
insl
cli
lods
cwtl
adcl
sbb
jecxz
jmp
cmp
inc
pusha
mov
mov
xor
lcall
push
mov
pop
mov
push
dec
pop
lret
ret
xor
sbb
add
jb
fldcw
loopne
loop
inc
popa
jp
pop
sarb
pushl
cwtl
and
xchg
and
sbb
add
or
pusha
inc
mov
dec
in
and
jmp
enter
movsl
repz
or
shrb
mov
cltd
testb
jl
jns
ljmp
or
rolb
pushf
sti
and
or
cmp
lds
xchg
mov
sbb
sbb
or
adc
push
lahf
inc
add
sbb
add
pmovmskb
jp
lret
cmp
adc
inc
jle
adc
dec
fisttpll
adc
add
xchg
inc
jns
jge
in
mov
push
iret
aad
lods
jbe
jne
scas
and
scas
test
cld
bound
gs
out
sub
js
push
hlt
mull
jmp
cltd
push
in
int3
ret
push
cmp
jo
test
push
mov
xor
nop
scas
push
jecxz
fdivs
jecxz
out
push
add
xor
and
gs
pop
testb
xorl
push
jno
xor
sbb
subl
push
pushf
ret
mov
sbb
jl
push
cmpsl
dec
and
xlat
popf
std
mov
mov
push
inc
orl
pop
test
outsl
mov
jnp
mov
xchg
in
movl
add
ds
insb
test
inc
xchg
in
xor
loop
mov
repz
mov
mov
dec
sub
mov
stos
pop
mov
fstl
repz
jo
int3
mov
push
mov
jb
mov
test
push
cmp
sbb
jns
jl
loopne
mov
fistpll
lds
sub
push
jb
xor
cmp
test
inc
jb
push
and
add
lock
movsb
or
int
ret
cmp
mov
popa
loop
xorl
pop
push
insl
addr16
into
fdivrs
push
lret
inc
and
hlt
dec
push
adc
pop
and
jecxz
fsubrs
cmp
jbe
or
pop
enter
dec
call
imul
jle
cmpsl
sub
int
pop
dec
mov
stos
xchg
adc
ret
lods
or
xchg
jge
sub
xchg
xor
repnz
xchg
mov
std
xchg
jg
lahf
adc
jl
loopne
jle
jl
push
jae
xchg
xlat
mov
bound
jae
mov
inc
jno
adc
mov
cmpsl
inc
push
leave
lahf
cmpl
bound
das
stos
add
iret
in
and
jle
push
mov
push
cmp
jbe
fiaddl
aaa
mov
ja
cmc
popa
jp
mov
rcrl
lcall
lea
mov
pop
daa
idivl
mov
sti
data16
dec
ss
push
fwait
dec
push
mov
sub
sub
jno
xchg
mov
mov
daa
mov
push
dec
imul
cmp
inc
jno
fcmovbe
mov
add
cwtl
ret
sub
push
scas
in
fidivrl
jle
in
imul
aaa
test
in
inc
add
fcmovnbe
mov
dec
adc
rclb
loope
push
lock
jmp
jecxz
test
sahf
out
dec
insl
js
ret
cmp
andl
mov
addr16
adc
sub
addr16
xchg
popf
repnz
ret
jle,pt
pop
sbb
adc
xchg
je
lods
jb
pop
stos
scas
cmc
or
in
.byte
