sub
push
mov
int
adc
xchg
stos
pop
addr16
fwait
cwtl
xchg
dec
out
mov
fwait
arpl
pushf
adc
xorb
jns
lea
scas
push
add
fnstcw
aas
mov
jns
aaa
sbb
dec
leave
cmp
mov
insl
call
jo
add
inc
push
sti
sub
addr16
xchg
dec
xchg
imulb
mov
adc
stc
or
insl
sahf
add
cmp
sub
or
cmp
out
push
in
frstor
adc
push
ret
clc
add
ret
leave
gs
ljmp
xchg
data16
pop
test
pop
dec
outsl
rcr
stos
mov
in
test
mov
xchg
dec
mov
jecxz
cmp
or
enter
cmpsl
stc
aaa
pusha
add
insl
fwait
cmp
and
sbbl
scas
pop
xchg
xlat
subb
sbb
out
xchg
es
imul
arpl
jne
divb
lret
enter
dec
jecxz
dec
popa
push
jecxz
inc
sub
cmpsb
sub
pushl
arpl
and
mov
fsubrl
cs
out
adc
aaa
dec
add
jmp
push
test
icebp
rorb
ljmp
imul
cltd
adc
dec
rcll
push
outsl
adc
xlat
test
aaa
out
mov
stos
cmp
loope
pushf
lds
xor
and
test
inc
stos
fwait
inc
loop
and
jae
cs
inc
and
jns
jno
pop
sub
lret
adc
pop
insb
iret
push
lods
dec
cld
push
rolb
mov
inc
pop
roll
push
loope
mov
sbb
inc
std
add
cs
sbb
js
add
dec
fwait
adc
lret
xorb
movsl
adc
shl
mov
dec
inc
push
push
in
mov
or
in
rorb
cmpsb
outsl
or
out
stos
adc
test
aad
or
rol
rcr
jne
cmp
rolb
cld
stc
icebp
and
or
fs
ret
mov
ret
ret
adc
adc
leave
movsb
jo
add
xchg
rorl
stos
xchg
adc
lret
call
xchg
lret
and
shll
sub
movsl
call
xchg
mov
out
subl
dec
in
mov
or
outsl
inc
mov
pop
gs
push
shrb
inc
outsb
into
xchg
jno
add
clc
rolb
jmp
nop
sub
call
or
imul
add
cmp
test
ret
gs
cmp
mov
clc
pushf
jae
cmc
int3
lds
mov
pop
push
xor
les
mov
push
inc
mov
ljmp
pop
pop
lcall
fisubl
bnd
or
int3
add
enter
xor
hlt
cmc
das
adc
jle
fmulp
sbb
sbb
aam
xchg
es
push
mov
std
insl
lock
shl
rorl
lcall
xchg
pop
fs
outsb
jb
add
outsb
inc
mov
lcall
dec
loop
mulb
jp
ss
pop
and
lretw
sbb
iret
aaa
daa
cmp
mov
les
xor
mov
ja
ja
jecxz
scas
repnz
mov
dec
sbb
lahf
inc
mov
push
insl
and
push
add
mov
fcoms
adc
in
sub
xchg
and
add
sub
xor
mov
sub
daa
jo
jo
pushf
push
jnp
jmp
cmp
js
xchg
lret
dec
pop
mov
nop
and
cmpsb
sbb
and
add
outsl
fistl
cmp
xor
push
ljmp
aas
jb
push
inc
dec
push
lods
sbb
pusha
inc
pusha
lods
in
cmp
lds
ljmp
and
jns
cltd
add
jecxz
fldcw
xchg
loopne
cmpsb
dec
test
scas
adc
out
adc
mov
cld
mov
mov
iret
loope
mov
mov
or
ds
popa
jecxz
cmp
and
pop
add
cli
mov
cmpsb
pop
fwait
inc
or
pop
cltd
add
in
test
fstpl
or
test
fprem1
pop
faddl
add
jae
cmp
push
xor
aam
sti
add
mov
jp
sub
inc
lea
clc
xor
pop
ss
sahf
sarb
stc
cli
inc
in
fisttpll
jmp
jb
push
jne
outsb
mov
and
into
fcmovnbe
fcomi
test
lds
xchg
aad
in
std
mov
test
sub
adc
jg
mov
movsl
or
xchg
adc
sub
mov
aam
shlb
adc
cld
gs
cmpsb
js
lret
xchg
inc
push
imul
sbb
das
push
sub
xorb
movsb
in
imul
fcoml
and
jae
dec
xlat
or
mov
dec
and
adc
lea
pushf
push
add
push
cmp
cmp
shll
iret
dec
sbb
add
mov
mov
adc
add
sbb
sub
mov
test
std
push
pop
push
nop
pushf
pop
xor
cmp
push
cli
jb
in
or
xchg
push
push
mov
test
dec
xlat
stc
mov
cld
push
das
mov
rcrl
addr16
pop
fnstcw
add
addr16
in
mov
aas
mov
ss
sbb
aad
mov
adc
mov
mov
and
jbe
dec
test
pop
out
dec
ja
mov
pop
bound
sub
push
dec
mov
adc
jmp
dec
xchg
dec
mov
and
dec
andb
inc
ret
xlat
std
addb
add
dec
ficoml
aaa
shlb
push
call
push
iret
nop
mov
notl
js
push
loopne
sbb
inc
mov
andb
cmc
cwtl
pop
xchg
sub
inc
mov
test
fstl
mov
lcall
leave
fmuls
stos
add
inc
add
lahf
or
sbb
leave
js
fs
aaa
subl
or
dec
shrb
xchg
popf
jne
aaa
cmovl
nop
mov
mov
inc
adc
lcall
cmp
int
lods
jae
push
sbbb
xchg
inc
dec
shr
in
in
inc
shlb
shll
subb
cmp
jb
gs
hlt
xor
push
test
ret
pop
loope,pt
or
test
xor
jae
dec
inc
pop
jbe
pusha
cmc
mov
sub
in
inc
sub
mov
cwtl
mov
mov
jecxz
xor
jmp
outsl
mov
imul
mov
jl
in
fcompl
aad
xchg
jnp
sub
sub
imul
sbb
pop
sbb
pop
xor
dec
daa
cld
out
scas
out
mov
xchg
and
and
out
adc
push
enter
or
scas
sbb
dec
sbbl
cs
rcr
ret
addl
clc
jg
ret
arpl
xor
in
subb
xor
in
insb
pop
vpaddd
jno
lret
push
push
or
lret
lods
push
push
inc
xchg
lock
ds
fcmovnu
dec
fimull
cmc
clc
loope
stos
inc
mov
std
xchg
sbb
mov
rorb
loopne
inc
std
ss
divl
pop
fcoms
pop
test
daa
cmp
jmp
cwtl
pop
jne
mov
jae
jmp
addr16
ljmp
lock
fisubl
jmp
push
jb
shll
sub
xlat
push
push
mov
mov
sub
outsb
jo
aad
inc
hlt
test
lea
and
jp
adc
mov
xor
jmp
push
lret
popf
fnstsw
xchg
mov
in
cs
mov
adc
adcb
dec
adc
stc
pusha
add
jno
inc
mov
lods
inc
popa
dec
mov
repz
pop
cld
iret
int
in
mov
adc
lds
fs
int
gs
inc
adcb
lods
aaa
in
pusha
sbb
inc
adc
loop
jecxz
inc
mov
into
sahf
xchg
enter
idivb
and
cmc
and
mov
add
mov
pop
in
ljmp
adc
xchg
test
sbb
scas
out
mov
and
push
in
out
mov
jno
ret
sbb
movsl
jnp
and
mov
hlt
js
aas
mov
mov
jns
cmp
adc
mov
push
iret
xchg
inc
dec
dec
loopne
push
ret
les
rol
push
in
xchg
iret
jbe
pop
js
pop
push
xlat
subl
and
repz
js
xor
imul
lahf
mov
iret
in
imul
ret
testb
cmc
pop
mov
das
cmpsb
fs
pop
rcll
push
push
rclb
mov
int3
inc
adc
addr16
pop
sub
jmp
out
fs
cmc
adc
push
xor
iret
pop
ss
mov
iret
mov
das
push
fwait
rcrb
inc
bound
aad
inc
push
test
std
jb
out
inc
es
sub
sub
mov
sbbl
mov
aaa
hlt
add
fcmovnb
addr16
add
das
or
adc
fmull
push
push
add
xchg
shlb
sahf
xor
push
jecxz
cmp
orb
pop
cld
inc
add
popa
xor
jle
adc
das
sti
out
inc
xchg
rolb
movsb
push
inc
cmpsl
stos
inc
sub
fs
sbb
call
int3
test
push
push
and
dec
pushf
mov
jle
lds
jno
fdivrl
and
or
lcall
movsb
mov
or
mov
test
fwait
mov
mov
and
pusha
in
repz
fstpt
ret
mov
mov
adc
ljmp
cmc
cmp
add
adc
cmp
fwait
lds
pop
sub
adc
jno
jmp
push
jnp
stos
pushf
pusha
fisubrs
and
repz
addr16
or
stos
es
enter
or
clc
fiaddl
xorl
punpcklwd
ljmp
inc
cmp
adc
stc
add
cmp
xor
xchg
xor
xor
jp
xor
jge
xchg
in
mov
jb
lret
stos
shll
fcmovnb
test
aaa
inc
xlat
or
ret
clc
lret
and
test
ljmp
fnsave
add
mov
mov
rcr
push
push
push
scas
and
jecxz
sub
fmull
cltd
cmpsl
lcall
loop
mov
cmp
aad
int3
or
sbb
movsl
stos
push
inc
andb
pop
mov
movsl
dec
inc
pusha
std
test
mov
jb
adc
jbe
imul
ds
imul
aas
pop
sub
jl
cmc
mov
int
jns
cmovnp
movsb
xchg
and
push
outsl
cltd
pop
es
xor
sbb
pop
sarl
jo
cs
dec
mov
out
push
or
pushf
push
js
cmp
out
sub
dec
stos
fnsave
cmc
shl
sub
add
cwtl
mov
mov
jge
inc
mov
jns
inc
stos
mov
fwait
and
jne
nop
pop
andl
xchg
pop
stos
stos
popf
aad
push
fs
lock
xchg
shll
mov
mov
fsts
adc
jnp
add
xchg
mov
mov
mov
mov
mov
pop
ja
lock
jge
dec
xchg
clc
mov
lock
insl
inc
sbb
repnz
pop
mov
pop
testb
mov
cmpsb
mov
jae
arpl
rcrb
sub
or
movsb
or
cmp
mov
mov
xchg
fisttpl
push
add
and
jecxz
pop
loope
mov
mov
ret
mov
sub
cmc
mov
fwait
leave
ja
and
iret
fdivl
or
out
pop
jae
into
jnp
call
aam
pop
sbb
xlat
xlat
iret
and
xchg
cmpsb
sub
popf
cwtl
jg
inc
pop
adc
sub
or
jge
repz
lret
hlt
sbb
and
add
mov
mov
inc
rcl
xor
pop
push
dec
fdivrs
mov
sub
lar
loopne
loope
fildl
jle
jae
dec
out
pusha
imul
pop
les
and
pop
inc
and
adc
rclb
jbe
jle
andb
scas
push
gs
divl
cltd
test
jne
ds
ss
jl
lcall
out
shll
in
mov
mov
fistps
dec
cmp
mov
stos
scas
dec
lahf
mov
sbb
jp
andl
shll
push
sbb
stos
sub
xor
mov
mov
cmpsb
cwtl
repnz
movsb
mov
jb
mov
repz
push
mov
adc
pop
mov
sbb
mov
faddl
push
cwtl
inc
cmp
stc
fistpl
push
outsl
push
hlt
dec
mov
push
test
mov
ljmp
sbb
cltd
adc
and
cwtl
out
xor
add
or
and
adcl
inc
jno
mov
push
xchg
jl
repz
sbb
out
cld
mov
in
mov
and
out
inc
mov
repz
and
inc
push
dec
stos
clc
scas
dec
jo
in
cmp
sbb
pusha
dec
repz
xor
lahf
xchg
xchg
cwtl
inc
gs
jle
jns
pop
hlt
insb
and
pop
xorb
dec
test
and
test
inc
stos
je
mov
pop
in
jae
lahf
mov
sbb
fistpll
cmpb
jbe
mov
lret
ljmp
adc
fdivrs
xor
jae
scas
mov
leave
ja
lods
loopne
mov
or
cld
popf
fs
nop
jmp
pop
push
push
sti
jle
mov
dec
sbb
cmp
les
mov
mov
cmpsl
adc
jnp
fsubp
xorl
fwait
lret
mulb
loope
daa
mov
mov
pushf
jmp
sub
and
mov
add
jge
adc
ss
mov
jg
je
fs
inc
lods
lods
push
movsl
pop
wbinvd
hlt
inc
jg
pop
mov
cmp
add
jmp
imul
cs
xor
mov
xor
dec
cmp
call
jecxz
popf
cmp
inc
add
mov
inc
jnp
addr16
cmpsl
fistps
mov
sbb
push
inc
bound
xlat
pop
shlb
rcl
pop
int
mov
sub
adc
sub
pushf
rep
imul
mov
imul
mov
or
ret
sbb
lods
xlat
adc
scas
xchg
fnstenv
orb
push
xlat
push
cli
inc
xlat
jns
les
cmp
lock
ja
ds
movsl
jg
callw
pop
cmc
stos
int
add
mov
sbb
test
sbb
jl
clc
popa
mov
lds
jbe
cmpsl
orb
outsl
cmp
mov
pop
add
sbb
sbb
add
xchg
out
sbb
fcoms
iret
shl
loop
aas
mov
je
clc
cmp
xor
scas
xchg
dec
adc
inc
push
shlb
cmp
push
or
shl
int3
sbb
mov
lret
sti
pop
ret
and
loope
sbb
xor
jae
out
mov
push
fdivrs
xor
sub
aad
hlt
add
sub
cmp
cmc
jmp
rcrb
or
jae
mov
sub
xchg
into
int3
jge
xchg
jo
push
add
xlat
push
aas
jle
out
pop
sbb
fnstcw
pusha
subb
lret
cld
nop
or
jge
dec
aaa
jg
subb
out
pop
pop
fidivrl
adc
jg
mov
inc
out
sbb
movsl
ret
cwtl
jnp
dec
ret
call
inc
pusha
push
push
roll
pop
xor
sbb
scas
and
sub
pop
mov
xchg
pop
jl
pop
pop
outsb
popf
decl
add
cmpsb
mov
mov
pop
dec
lods
jb
pushf
cld
scas
cmp
inc
xlat
sub
cmp
loope
sub
cwtl
sub
ds
movsb
hlt
shll
out
mov
lret
jmp
jg
cmp
push
add
ret
dec
dec
dec
dec
addr16
sarl
add
imul
call
popa
incl
cmp
and
xlat
xor
ljmp
dec
andb
pop
loop
sub
in
add
xchg
or
das
in
lret
dec
movsb
cli
fistps
int
sub
pop
dec
lock
pop
jl
adc
test
dec
pop
fcmovnb
sub
cld
sbb
xorb
cs
ror
or
inc
push
iret
call
insl
jmp
pop
add
js
ja
lret
jns
add
cli
dec
out
loope
push
jb
lret
pop
shrl
outsb
or
daa
mov
sbb
fidivl
xchg
outsb
ret
cli
fstpt
lcall
push
mov
sbb
gs
aas
daa
push
mov
pop
adc
inc
mov
fiadds
mov
sub
in
test
int3
sarb
sub
add
sahf
add
sbb
cmp
rcll
sbb
stos
xor
adc
add
push
mov
ret
lea
jle
or
popf
mov
jmp
cmp
hlt
lret
mov
pop
insl
insl
and
int3
xor
xorb
inc
leave
lahf
test
add
pop
cmpsb
cltd
and
push
rorl
or
test
mov
mov
jmp
xchg
pushl
imul
das
inc
fisttps
fildl
jb
fsts
aad
les
pop
arpl
mov
xor
ret
aam
fs
xor
gs
mov
leave
push
mov
cli
sbb
mov
pop
dec
mov
lea
fidivrl
gs
cli
call
jne
shll
jg
inc
test
into
loope
xor
pop
mov
push
xchg
int3
fistps
popa
popf
xchg
dec
hlt
jns
xor
pop
pop
idivl
pop
shll
sub
insb
pop
cmp
add
sub
or
data16
mov
push
or
push
adc
lea
out
mov
mov
pop
inc
and
push
cmpl
paddusw
movsl
push
not
xor
jbe
aaa
lods
mov
inc
call
lea
or
std
hlt
lods
out
cmp
jecxz
push
or
inc
xchg
decl
push
xor
clc
lods
inc
inc
mov
callw
pop
mov
stos
pop
jg
out
adc
add
iret
cmpsl
inc
imul
adc
inc
in
push
mov
add
pop
repz
loopne
push
loopne
adc
mov
push
xchg
loopne
mov
adc
mov
es
mov
dec
call
dec
test
jmp
in
lods
cmp
add
sti
loope
cli
dec
mov
jmp
shlb
push
test
ret
pop
mov
jmp
adc
jno
sbb
pop
or
rcrb
inc
repz
popa
fsts
pushf
xor
jmp
incl
rcrb
ret
fidivrl
mov
das
imul
das
mov
inc
movsl
icebp
rcrb
mov
sbb
enter
sbb
aam
outsb
sti
add
stc
sbb
jo
add
daa
ret
lret
jae
test
sub
bound
push
fidivl
mov
pop
cltd
cmpsl
les
js
test
inc
mov
xor
push
pushf
movsb
int3
roll
push
sbb
lret
es
lahf
mov
lods
xor
or
push
jns
mov
and
pop
xchg
out
fdivs
jg
push
ss
scas
push
test
xchg
insl
stc
sub
mov
or
mov
sbb
test
insl
adc
rcll
jl
add
out
xor
sbb
pop
sbb
inc
add
inc
lcall
test
mov
ljmp
sub
stos
jnp
lret
jo
push
das
mov
sbb
out
sub
out
int
inc
fsubr
out
clts
mov
mov
int3
inc
push
adc
and
mov
mov
inc
fnstcw
ja
mov
mov
sti
dec
clc
mov
ss
in
out
arpl
jecxz
clc
push
out
ljmp
iret
dec
aas
cmp
das
mov
dec
pusha
loope,pt
push
lods
cwtl
sub
pause
and
lea
add
dec
add
pusha
movsl
ja
add
sbb
mov
repnz
ljmp
inc
es
cltd
jne
push
mov
push
mov
or
push
mov
jecxz
or
cmp
cwtl
fisubs
xchg
dec
push
ja
movsb
dec
push
in
lahf
pop
xor
scas
dec
in
inc
push
add
bound
test
mov
xor
sbb
test
arpl
rclb
scas
addr16
dec
pushf
xchg
sub
outsb
and
cmp
dec
xor
loopne
cmp
push
xchg
test
add
xchg
in
fcomps
mov
push
lds
sub
out
jle
or
sub
into
insl
push
mov
popf
mov
leave
lock
jge
inc
cld
daa
scas
bound
dec
mov
sbb
xchg
stos
mov
scas
cmpsb
scas
js
or
dec
and
jb
mov
push
fstl
je
mov
std
sub
mull
div
aaa
das
fwait
pop
lret
or
mov
push
imul
cmp
jns
cmp
mov
fimuls
mov
mov
mov
pop
sarb
lahf
push
mov
testl
ret
mov
sbb
xchg
jge
out
inc
es
mov
xor
aaa
adc
cmpsb
sar
add
xchg
jecxz
icebp
jne
sar
dec
lds
xor
pop
cmc
jne
jge
jno
or
or
push
mov
rclb
jnp
sahf
cmc
add
loopne
mov
leave
push
push
pop
adc
shll
mov
das
xchg
div
jle
and
and
fmuls
jnp
mov
jl
mov
push
push
mov
pop
mov
jno
cltd
test
sbb
das
lret
push
in
ljmp
jmp
out
arpl
xor
mov
ficomps
addr16
or
jecxz
inc
das
test
cmp
negl
push
mov
xchg
push
or
in
mov
sub
fldcw
outsl
mov
adc
aam
mov
inc
ficoml
inc
mov
das
dec
sbb
and
imul
je
jbe
push
inc
dec
mov
and
and
test
jecxz
jbe
xchg
push
int3
ret
jmp
fdivs
mov
mov
outsb
cmp
addl
aaa
dec
aaa
pusha
fisubrl
into
push
xor
repz
adc
fcompl
lret
push
outsl
imul
xorl
inc
pop
pop
xchg
inc
and
xchg
dec
ds
add
addb
aaa
rol
push
mov
add
testb
lods
fld
mov
xchg
in
add
mov
cmp
gs
cld
mov
xlat
mov
and
xchg
out
lods
movsl
jg
movsl
jo
xor
stc
int
push
scas
cmc
adc
cmp
test
adc
test
in
mov
or
fwait
das
imulb
jg
mov
aas
dec
cmpsl
mov
jmp
aam
test
or
les
int3
mov
cmp
xchg
jo
pop
fidivs
inc
cmp
sahf
push
xchg
lock
repz
dec
sarl
jmp
cs
adc
outsl
or
add
mov
nop
je
sub
fwait
adc
inc
xchg
daa
mov
loop
in
mov
inc
pop
clc
and
xchg
inc
flds
lds
and
loope
mov
push
add
clc
or
jns
mov
adc
repz
jae
lret
cltd
xor
sbb
mov
cld
out
jno
enter
adc
mov
xlat
mov
out
aad
rolb
pop
add
sub
jae
add
dec
int3
daa
jb
add
bound
push
daa
fists
insb
in
push
dec
ds
or
leave
mov
fildll
and
xchg
jo
xlat
lret
loope
cld
sbb
loopne
les
adc
insl
int
outsl
nop
dec
repnz
stc
pop
jno
xchg
push
sub
mov
and
mov
xchg
cmp
mov
pop
push
aas
ss
sub
pushf
dec
dec
into
push
sub
inc
jl
stos
or
xor
outsl
outsl
in
mov
xor
call
sub
cmpsl
aad
jecxz
mov
out
pop
push
ja
in
icebp
xchg
sbb
rorb
mov
aaa
mov
mov
dec
xor
mov
and
ret
ret
xchg
cmpsl
mov
cmp
cmp
mov
fisttpl
push
mov
cld
test
ror
xor
and
adc
fidivrs
xor
shl
inc
jp
push
mov
in
mov
xchg
push
add
pop
mov
and
cli
pusha
and
dec
sub
mov
lds
lret
push
insb
push
dec
in
inc
push
dec
arpl
xchg
xor
fdivs
ret
mov
leave
mov
es
in
fadds
or
mov
push
add
and
push
adc
pop
jae
test
pusha
call
add
add
jmp
xor
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
rolb
add
add
add
add
jns
add
jns
